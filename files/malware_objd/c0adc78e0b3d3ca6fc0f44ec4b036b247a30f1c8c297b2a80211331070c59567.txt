
c0adc78e0b3d3ca6fc0f44ec4b036b247a30f1c8c297b2a80211331070c59567.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    DWORD PTR ds:0x448944,0x401b2c
  40100d:	pop    ebp
  40100e:	ret    
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    DWORD PTR ds:0x448944,0x440a85
  40101d:	pop    ebp
  40101e:	ret    
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x8
  401036:	mov    DWORD PTR [ebp-0x4],0x0
  40103d:	jmp    0x401048
  40103f:	mov    eax,DWORD PTR [ebp-0x4]
  401042:	add    eax,0x1
  401045:	mov    DWORD PTR [ebp-0x4],eax
  401048:	mov    ecx,DWORD PTR [ebp-0x4]
  40104b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40104e:	jae    0x40109b
  401050:	mov    edx,DWORD PTR [ebp-0x4]
  401053:	mov    eax,DWORD PTR [ebp+0xc]
  401056:	movzx  ecx,WORD PTR [eax+edx*2]
  40105a:	sar    ecx,0xc
  40105d:	cmp    ecx,0x3
  401060:	jne    0x401099
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	mov    eax,DWORD PTR [ebp+0xc]
  401068:	movzx  ecx,WORD PTR [eax+edx*2]
  40106c:	and    ecx,0xfff
  401072:	add    ecx,0x43
  401075:	mov    DWORD PTR [ebp-0x8],ecx
  401078:	mov    edx,DWORD PTR [ebp+0x18]
  40107b:	mov    eax,DWORD PTR [ebp+0x10]
  40107e:	add    eax,DWORD PTR [edx]
  401080:	mov    ecx,DWORD PTR [ebp-0x8]
  401083:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  401087:	add    edx,DWORD PTR [ebp+0x14]
  40108a:	mov    eax,DWORD PTR [ebp+0x18]
  40108d:	mov    ecx,DWORD PTR [ebp+0x10]
  401090:	add    ecx,DWORD PTR [eax]
  401092:	mov    eax,DWORD PTR [ebp-0x8]
  401095:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  401099:	jmp    0x40103f
  40109b:	mov    esp,ebp
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	sub    esp,0x14
  4010a6:	mov    eax,DWORD PTR [ebp+0x8]
  4010a9:	cmp    DWORD PTR [eax+0x4],0x0
  4010ad:	je     0x4010f7
  4010af:	mov    DWORD PTR [ebp-0x14],0x2a1
  4010b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010b9:	mov    edx,DWORD PTR [ecx+0x4]
  4010bc:	sub    edx,0x8
  4010bf:	shr    edx,1
  4010c1:	mov    DWORD PTR [ebp-0xc],edx
  4010c4:	mov    eax,DWORD PTR [ebp+0x8]
  4010c7:	add    eax,0x8
  4010ca:	mov    DWORD PTR [ebp-0x10],eax
  4010cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4010d0:	push   ecx
  4010d1:	mov    edx,DWORD PTR [ebp+0x10]
  4010d4:	push   edx
  4010d5:	mov    eax,DWORD PTR [ebp+0xc]
  4010d8:	push   eax
  4010d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4010dc:	push   ecx
  4010dd:	mov    edx,DWORD PTR [ebp-0xc]
  4010e0:	push   edx
  4010e1:	call   0x401030
  4010e6:	add    esp,0x14
  4010e9:	mov    eax,DWORD PTR [ebp+0x8]
  4010ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ef:	add    ecx,DWORD PTR [eax+0x4]
  4010f2:	mov    DWORD PTR [ebp+0x8],ecx
  4010f5:	jmp    0x4010a6
  4010f7:	mov    esp,ebp
  4010f9:	pop    ebp
  4010fa:	ret    
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	pop    ebp
  401104:	ret    
  401105:	int3   
  401106:	int3   
  401107:	int3   
  401108:	int3   
  401109:	int3   
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	push   ecx
  401114:	mov    DWORD PTR [ebp-0x4],0x4
  40111b:	push   0x40
  40111d:	push   0x3000
  401122:	mov    eax,DWORD PTR [ebp+0x8]
  401125:	push   eax
  401126:	push   0x0
  401128:	call   DWORD PTR ds:0x444de0
  40112e:	mov    esp,ebp
  401130:	pop    ebp
  401131:	ret    
  401132:	int3   
  401133:	int3   
  401134:	int3   
  401135:	int3   
  401136:	int3   
  401137:	int3   
  401138:	int3   
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	int3   
  40113d:	int3   
  40113e:	int3   
  40113f:	int3   
  401140:	push   ebp
  401141:	mov    ebp,esp
  401143:	pop    ebp
  401144:	ret    
  401145:	int3   
  401146:	int3   
  401147:	int3   
  401148:	int3   
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	sub    esp,0x8
  401156:	mov    eax,DWORD PTR [ebp+0x8]
  401159:	mov    DWORD PTR [ebp-0x4],eax
  40115c:	mov    ecx,DWORD PTR [ebp+0xc]
  40115f:	mov    DWORD PTR [ebp-0x8],ecx
  401162:	mov    edx,DWORD PTR [ebp-0x4]
  401165:	cmp    edx,DWORD PTR [ebp-0x8]
  401168:	jae    0x401171
  40116a:	mov    eax,DWORD PTR [ebp-0x4]
  40116d:	jmp    0x401174
  40116f:	jmp    0x401174
  401171:	mov    eax,DWORD PTR [ebp-0x8]
  401174:	mov    esp,ebp
  401176:	pop    ebp
  401177:	ret    
  401178:	int3   
  401179:	int3   
  40117a:	int3   
  40117b:	int3   
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebp
  401181:	mov    ebp,esp
  401183:	sub    esp,0x20
  401186:	mov    DWORD PTR [ebp-0x8],0x37
  40118d:	mov    DWORD PTR [ebp-0x10],0x0
  401194:	jmp    0x40119f
  401196:	mov    eax,DWORD PTR [ebp-0x10]
  401199:	add    eax,0x4
  40119c:	mov    DWORD PTR [ebp-0x10],eax
  40119f:	mov    ecx,DWORD PTR [ebp-0x10]
  4011a2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011a5:	jae    0x40124b
  4011ab:	mov    DWORD PTR [ebp-0x8],0x1425
  4011b2:	mov    DWORD PTR [ebp-0x8],0x37
  4011b9:	mov    edx,DWORD PTR [ebp-0x10]
  4011bc:	add    edx,0x6f3
  4011c2:	mov    DWORD PTR ds:0x448948,edx
  4011c8:	mov    eax,DWORD PTR [ebp+0x8]
  4011cb:	add    eax,DWORD PTR [ebp-0x10]
  4011ce:	mov    ecx,DWORD PTR [eax]
  4011d0:	add    ecx,DWORD PTR [ebp-0x10]
  4011d3:	mov    edx,DWORD PTR [ebp+0x8]
  4011d6:	add    edx,DWORD PTR [ebp-0x10]
  4011d9:	mov    DWORD PTR [edx],ecx
  4011db:	mov    eax,DWORD PTR [ebp-0xc]
  4011de:	mov    DWORD PTR [ebp-0x14],eax
  4011e1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011e8:	mov    ecx,DWORD PTR ds:0x448948
  4011ee:	mov    DWORD PTR [ebp-0x20],ecx
  4011f1:	mov    edx,DWORD PTR [ebp-0x20]
  4011f4:	mov    DWORD PTR [ebp-0x1c],edx
  4011f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4011fa:	mov    DWORD PTR [ebp-0x18],eax
  4011fd:	cmp    DWORD PTR [ebp-0x10],0x0
  401201:	jne    0x401233
  401203:	push   0x0
  401205:	push   0x80
  40120a:	push   0x3
  40120c:	push   0x0
  40120e:	push   0x3
  401210:	push   0x1
  401212:	push   0x44894c
  401217:	call   DWORD PTR ds:0x444de4
  40121d:	mov    DWORD PTR [ebp-0x4],eax
  401220:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401224:	je     0x40122c
  401226:	cmp    DWORD PTR [ebp-0x4],0x0
  40122a:	jne    0x401233
  40122c:	mov    eax,0x42
  401231:	jmp    0x40124b
  401233:	mov    ecx,DWORD PTR [ebp+0x8]
  401236:	add    ecx,DWORD PTR [ebp-0x10]
  401239:	mov    edx,DWORD PTR [ecx]
  40123b:	xor    edx,DWORD PTR [ebp-0x18]
  40123e:	mov    eax,DWORD PTR [ebp+0x8]
  401241:	add    eax,DWORD PTR [ebp-0x10]
  401244:	mov    DWORD PTR [eax],edx
  401246:	jmp    0x401196
  40124b:	mov    esp,ebp
  40124d:	pop    ebp
  40124e:	ret    
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0x82c
  401259:	mov    DWORD PTR [ebp+0xc],0x15b3
  401260:	mov    eax,DWORD PTR [ebp+0xc]
  401263:	mov    DWORD PTR [ebp-0x82c],eax
  401269:	cmp    DWORD PTR [ebp-0x82c],0xf
  401270:	ja     0x40129a
  401272:	cmp    DWORD PTR [ebp-0x82c],0xf
  401279:	je     0x401339
  40127f:	cmp    DWORD PTR [ebp-0x82c],0x1
  401286:	je     0x4012b2
  401288:	cmp    DWORD PTR [ebp-0x82c],0x2
  40128f:	je     0x4013c0
  401295:	jmp    0x4013d9
  40129a:	cmp    DWORD PTR [ebp-0x82c],0x15b3
  4012a4:	je     0x4012ab
  4012a6:	jmp    0x4013d9
  4012ab:	xor    eax,eax
  4012ad:	jmp    0x4013ef
  4012b2:	push   0x0
  4012b4:	push   0x0
  4012b6:	push   0x0
  4012b8:	push   0x0
  4012ba:	call   DWORD PTR ds:0x445358
  4012c0:	mov    DWORD PTR [ebp-0x54],eax
  4012c3:	push   0xc8
  4012c8:	push   0xc8
  4012cd:	push   0x64
  4012cf:	push   0x64
  4012d1:	mov    ecx,DWORD PTR [ebp-0x54]
  4012d4:	push   ecx
  4012d5:	call   DWORD PTR ds:0x44535c
  4012db:	push   0x0
  4012dd:	push   0x64
  4012df:	push   0x64
  4012e1:	mov    edx,DWORD PTR [ebp-0x54]
  4012e4:	push   edx
  4012e5:	call   DWORD PTR ds:0x445360
  4012eb:	push   0xc8
  4012f0:	push   0xc8
  4012f5:	mov    eax,DWORD PTR [ebp-0x54]
  4012f8:	push   eax
  4012f9:	call   DWORD PTR ds:0x445364
  4012ff:	push   0x0
  401301:	push   0x64
  401303:	push   0xc8
  401308:	mov    ecx,DWORD PTR [ebp-0x54]
  40130b:	push   ecx
  40130c:	call   DWORD PTR ds:0x445360
  401312:	push   0xc8
  401317:	push   0x64
  401319:	mov    edx,DWORD PTR [ebp-0x54]
  40131c:	push   edx
  40131d:	call   DWORD PTR ds:0x445364
  401323:	mov    eax,DWORD PTR [ebp-0x54]
  401326:	push   eax
  401327:	call   DWORD PTR ds:0x445368
  40132d:	mov    ds:0x448938,eax
  401332:	xor    eax,eax
  401334:	jmp    0x4013ef
  401339:	lea    ecx,[ebp-0x50]
  40133c:	push   ecx
  40133d:	mov    edx,DWORD PTR [ebp+0x8]
  401340:	push   edx
  401341:	call   DWORD PTR ds:0x4450ac
  401347:	mov    DWORD PTR [ebp-0x58],eax
  40134a:	lea    eax,[ebp-0x10]
  40134d:	push   eax
  40134e:	mov    ecx,DWORD PTR [ebp+0x8]
  401351:	push   ecx
  401352:	call   DWORD PTR ds:0x4450b0
  401358:	mov    eax,DWORD PTR [ebp-0x8]
  40135b:	cdq    
  40135c:	and    edx,0x3
  40135f:	add    eax,edx
  401361:	sar    eax,0x2
  401364:	mov    DWORD PTR [ebp-0x10],eax
  401367:	mov    eax,DWORD PTR [ebp-0x8]
  40136a:	imul   eax,eax,0x3
  40136d:	cdq    
  40136e:	and    edx,0x3
  401371:	add    eax,edx
  401373:	sar    eax,0x2
  401376:	mov    DWORD PTR [ebp-0x8],eax
  401379:	mov    eax,DWORD PTR [ebp-0x4]
  40137c:	cdq    
  40137d:	and    edx,0x3
  401380:	add    eax,edx
  401382:	sar    eax,0x2
  401385:	mov    DWORD PTR [ebp-0xc],eax
  401388:	mov    eax,DWORD PTR [ebp-0x4]
  40138b:	imul   eax,eax,0x3
  40138e:	cdq    
  40138f:	and    edx,0x3
  401392:	add    eax,edx
  401394:	sar    eax,0x2
  401397:	mov    DWORD PTR [ebp-0x4],eax
  40139a:	lea    edx,[ebp-0x10]
  40139d:	push   edx
  40139e:	mov    eax,ds:0x448938
  4013a3:	push   eax
  4013a4:	mov    ecx,DWORD PTR [ebp-0x58]
  4013a7:	push   ecx
  4013a8:	call   DWORD PTR ds:0x44536c
  4013ae:	lea    edx,[ebp-0x50]
  4013b1:	push   edx
  4013b2:	mov    eax,DWORD PTR [ebp+0x8]
  4013b5:	push   eax
  4013b6:	call   DWORD PTR ds:0x4450b4
  4013bc:	xor    eax,eax
  4013be:	jmp    0x4013ef
  4013c0:	mov    ecx,DWORD PTR ds:0x448938
  4013c6:	push   ecx
  4013c7:	call   DWORD PTR ds:0x445370
  4013cd:	push   0x0
  4013cf:	call   DWORD PTR ds:0x4450b8
  4013d5:	xor    eax,eax
  4013d7:	jmp    0x4013ef
  4013d9:	mov    edx,DWORD PTR [ebp+0x14]
  4013dc:	push   edx
  4013dd:	mov    eax,DWORD PTR [ebp+0x10]
  4013e0:	push   eax
  4013e1:	mov    ecx,DWORD PTR [ebp+0xc]
  4013e4:	push   ecx
  4013e5:	mov    edx,DWORD PTR [ebp+0x8]
  4013e8:	push   edx
  4013e9:	call   DWORD PTR ds:0x4450bc
  4013ef:	mov    esp,ebp
  4013f1:	pop    ebp
  4013f2:	ret    0x10
  4013f5:	int3   
  4013f6:	int3   
  4013f7:	int3   
  4013f8:	int3   
  4013f9:	int3   
  4013fa:	int3   
  4013fb:	int3   
  4013fc:	int3   
  4013fd:	int3   
  4013fe:	int3   
  4013ff:	int3   
  401400:	push   ebp
  401401:	mov    ebp,esp
  401403:	sub    esp,0x1bc
  401409:	pusha  
  40140a:	mov    DWORD PTR ds:0x448a50,ebp
  401410:	push   0x104
  401415:	lea    eax,[ebp-0x110]
  40141b:	push   eax
  40141c:	call   DWORD PTR ds:0x444de8
  401422:	mov    DWORD PTR [ebp-0x14c],0x30
  40142c:	mov    DWORD PTR [ebp-0x148],0x3
  401436:	mov    DWORD PTR [ebp-0x144],0x401250
  401440:	mov    DWORD PTR [ebp-0x140],0x0
  40144a:	mov    DWORD PTR [ebp-0x13c],0x0
  401454:	mov    DWORD PTR [ebp-0x138],0x2
  40145e:	push   0x7f00
  401463:	push   0x0
  401465:	call   DWORD PTR ds:0x4450c0
  40146b:	mov    DWORD PTR [ebp-0x134],eax
  401471:	push   0x7f00
  401476:	push   0x0
  401478:	call   DWORD PTR ds:0x4450c4
  40147e:	mov    DWORD PTR [ebp-0x130],eax
  401484:	push   0x0
  401486:	call   DWORD PTR ds:0x445374
  40148c:	mov    DWORD PTR [ebp-0x12c],eax
  401492:	mov    DWORD PTR [ebp-0x128],0x0
  40149c:	mov    DWORD PTR [ebp-0x124],0x44406c
  4014a6:	push   0x7f00
  4014ab:	push   0x0
  4014ad:	call   DWORD PTR ds:0x4450c0
  4014b3:	mov    DWORD PTR [ebp-0x120],eax
  4014b9:	lea    ecx,[ebp-0x14c]
  4014bf:	push   ecx
  4014c0:	call   DWORD PTR ds:0x4450c8
  4014c6:	push   0x0
  4014c8:	push   0x2
  4014ca:	push   0x0
  4014cc:	push   0x0
  4014ce:	push   0x80000000
  4014d3:	push   0x80000000
  4014d8:	push   0x80000000
  4014dd:	push   0x80000000
  4014e2:	push   0xcf0000
  4014e7:	push   0x444078
  4014ec:	push   0x44406c
  4014f1:	push   0x0
  4014f3:	call   DWORD PTR ds:0x4450cc
  4014f9:	mov    DWORD PTR [ebp-0x18c],eax
  4014ff:	mov    DWORD PTR [ebp-0x194],0x0
  401509:	mov    edx,DWORD PTR ds:0x444de4
  40150f:	mov    DWORD PTR [ebp-0x1a8],edx
  401515:	mov    DWORD PTR [ebp-0x114],0x0
  40151f:	mov    DWORD PTR [ebp-0x188],0x64
  401529:	mov    DWORD PTR [ebp-0x11c],0x3
  401533:	mov    DWORD PTR [ebp-0x194],0x0
  40153d:	mov    DWORD PTR [ebp-0x154],0x0
  401547:	mov    DWORD PTR [ebp-0x184],0x1
  401551:	mov    DWORD PTR [ebp-0x118],0x3
  40155b:	mov    DWORD PTR [ebp-0x114],0x0
  401565:	mov    DWORD PTR [ebp-0x188],0x64
  40156f:	mov    DWORD PTR [ebp-0x11c],0x3
  401579:	mov    DWORD PTR [ebp-0x194],0x0
  401583:	mov    DWORD PTR [ebp-0x154],0x0
  40158d:	mov    DWORD PTR [ebp-0x184],0x1
  401597:	mov    DWORD PTR [ebp-0x118],0x3
  4015a1:	mov    DWORD PTR [ebp-0x114],0x0
  4015ab:	mov    DWORD PTR [ebp-0x188],0x64
  4015b5:	mov    DWORD PTR [ebp-0x11c],0x3
  4015bf:	mov    DWORD PTR [ebp-0x194],0x0
  4015c9:	mov    DWORD PTR [ebp-0x154],0x0
  4015d3:	mov    DWORD PTR [ebp-0x184],0x1
  4015dd:	mov    DWORD PTR [ebp-0x118],0x3
  4015e7:	push   0x104
  4015ec:	lea    eax,[ebp-0x110]
  4015f2:	push   eax
  4015f3:	call   DWORD PTR ds:0x444de8
  4015f9:	call   0x401a80
  4015fe:	push   0x444080
  401603:	push   0x444090
  401608:	call   DWORD PTR ds:0x444dec
  40160e:	push   eax
  40160f:	call   DWORD PTR ds:0x444df0
  401615:	mov    DWORD PTR [ebp-0x17c],eax
  40161b:	lea    ecx,[ebp-0x158]
  401621:	push   ecx
  401622:	push   0x20019
  401627:	push   0x0
  401629:	push   0x44409c
  40162e:	push   0x80000002
  401633:	call   DWORD PTR [ebp-0x17c]
  401639:	test   eax,eax
  40163b:	je     0x40164c
  40163d:	push   0x4
  40163f:	call   DWORD PTR ds:0x444df4
  401645:	xor    eax,eax
  401647:	jmp    0x401a7c
  40164c:	lea    edx,[ebp-0x158]
  401652:	push   edx
  401653:	push   0x20019
  401658:	push   0x0
  40165a:	push   0x4440b0
  40165f:	mov    eax,DWORD PTR [ebp-0x158]
  401665:	push   eax
  401666:	call   DWORD PTR [ebp-0x17c]
  40166c:	test   eax,eax
  40166e:	je     0x40167f
  401670:	push   0x4
  401672:	call   DWORD PTR ds:0x444df4
  401678:	xor    eax,eax
  40167a:	jmp    0x401a7c
  40167f:	lea    ecx,[ebp-0x158]
  401685:	push   ecx
  401686:	push   0x20019
  40168b:	push   0x0
  40168d:	push   0x4440c0
  401692:	mov    edx,DWORD PTR [ebp-0x158]
  401698:	push   edx
  401699:	call   DWORD PTR [ebp-0x17c]
  40169f:	test   eax,eax
  4016a1:	je     0x4016b2
  4016a3:	push   0x4
  4016a5:	call   DWORD PTR ds:0x444df4
  4016ab:	xor    eax,eax
  4016ad:	jmp    0x401a7c
  4016b2:	lea    eax,[ebp-0x158]
  4016b8:	push   eax
  4016b9:	push   0x20019
  4016be:	push   0x0
  4016c0:	push   0x44893c
  4016c5:	mov    ecx,DWORD PTR [ebp-0x158]
  4016cb:	push   ecx
  4016cc:	call   DWORD PTR [ebp-0x17c]
  4016d2:	test   eax,eax
  4016d4:	je     0x4016e5
  4016d6:	push   0x4
  4016d8:	call   DWORD PTR ds:0x444df4
  4016de:	xor    eax,eax
  4016e0:	jmp    0x401a7c
  4016e5:	lea    edx,[ebp-0x158]
  4016eb:	push   edx
  4016ec:	push   0x20019
  4016f1:	push   0x0
  4016f3:	push   0x448940
  4016f8:	mov    eax,DWORD PTR [ebp-0x158]
  4016fe:	push   eax
  4016ff:	call   DWORD PTR [ebp-0x17c]
  401705:	test   eax,eax
  401707:	je     0x401718
  401709:	push   0x4
  40170b:	call   DWORD PTR ds:0x444df4
  401711:	xor    eax,eax
  401713:	jmp    0x401a7c
  401718:	lea    ecx,[ebp-0x158]
  40171e:	push   ecx
  40171f:	push   0x20019
  401724:	push   0x0
  401726:	push   0x4440e0
  40172b:	mov    edx,DWORD PTR [ebp-0x158]
  401731:	push   edx
  401732:	call   DWORD PTR [ebp-0x17c]
  401738:	test   eax,eax
  40173a:	je     0x401743
  40173c:	xor    eax,eax
  40173e:	jmp    0x401a7c
  401743:	lea    eax,[ebp-0x158]
  401749:	push   eax
  40174a:	push   0x20019
  40174f:	push   0x0
  401751:	push   0x444130
  401756:	mov    ecx,DWORD PTR [ebp-0x158]
  40175c:	push   ecx
  40175d:	call   DWORD PTR [ebp-0x17c]
  401763:	test   eax,eax
  401765:	je     0x40176e
  401767:	xor    eax,eax
  401769:	jmp    0x401a7c
  40176e:	lea    edx,[ebp-0x158]
  401774:	push   edx
  401775:	push   0x20019
  40177a:	push   0x0
  40177c:	push   0x4440cc
  401781:	mov    eax,DWORD PTR [ebp-0x158]
  401787:	push   eax
  401788:	call   DWORD PTR [ebp-0x17c]
  40178e:	test   eax,eax
  401790:	jne    0x4017a1
  401792:	push   0x4
  401794:	call   DWORD PTR ds:0x444df4
  40179a:	xor    eax,eax
  40179c:	jmp    0x401a7c
  4017a1:	push   0x104
  4017a6:	push   0x44894c
  4017ab:	call   DWORD PTR ds:0x444de8
  4017b1:	push   0x444140
  4017b6:	push   0x44894c
  4017bb:	call   DWORD PTR ds:0x444df8
  4017c1:	call   0x401000
  4017c6:	mov    ecx,DWORD PTR ds:0x448944
  4017cc:	push   ecx
  4017cd:	call   0x401020
  4017d2:	add    esp,0x4
  4017d5:	mov    DWORD PTR [ebp-0x198],eax
  4017db:	mov    edx,DWORD PTR [ebp-0x198]
  4017e1:	push   edx
  4017e2:	call   0x401110
  4017e7:	add    esp,0x4
  4017ea:	mov    DWORD PTR [ebp-0x190],eax
  4017f0:	mov    eax,DWORD PTR [ebp-0x198]
  4017f6:	push   eax
  4017f7:	push   0x0
  4017f9:	mov    ecx,DWORD PTR [ebp-0x190]
  4017ff:	push   ecx
  401800:	call   0x401140
  401805:	add    esp,0xc
  401808:	mov    edx,DWORD PTR [ebp-0x198]
  40180e:	mov    DWORD PTR [ebp-0x1a0],edx
  401814:	mov    eax,DWORD PTR [ebp-0x194]
  40181a:	cmp    eax,DWORD PTR [ebp-0x198]
  401820:	jae    0x4018ac
  401826:	mov    ecx,DWORD PTR [ebp-0x1a0]
  40182c:	push   ecx
  40182d:	mov    edx,DWORD PTR [ebp-0x188]
  401833:	push   edx
  401834:	call   0x401150
  401839:	add    esp,0x8
  40183c:	mov    DWORD PTR [ebp-0x1a4],eax
  401842:	mov    eax,DWORD PTR [ebp-0x1a4]
  401848:	push   eax
  401849:	mov    ecx,DWORD PTR ds:0x448944
  40184f:	add    ecx,DWORD PTR [ebp-0x154]
  401855:	push   ecx
  401856:	mov    edx,DWORD PTR [ebp-0x190]
  40185c:	add    edx,DWORD PTR [ebp-0x194]
  401862:	push   edx
  401863:	call   0x442bbc
  401868:	add    esp,0xc
  40186b:	mov    eax,DWORD PTR [ebp-0x11c]
  401871:	add    eax,DWORD PTR [ebp-0x188]
  401877:	add    eax,DWORD PTR [ebp-0x154]
  40187d:	mov    DWORD PTR [ebp-0x154],eax
  401883:	mov    ecx,DWORD PTR [ebp-0x194]
  401889:	add    ecx,DWORD PTR [ebp-0x188]
  40188f:	mov    DWORD PTR [ebp-0x194],ecx
  401895:	mov    edx,DWORD PTR [ebp-0x1a0]
  40189b:	sub    edx,DWORD PTR [ebp-0x1a4]
  4018a1:	mov    DWORD PTR [ebp-0x1a0],edx
  4018a7:	jmp    0x401814
  4018ac:	mov    eax,DWORD PTR [ebp-0x198]
  4018b2:	push   eax
  4018b3:	mov    ecx,DWORD PTR [ebp-0x190]
  4018b9:	push   ecx
  4018ba:	call   0x401180
  4018bf:	add    esp,0x8
  4018c2:	mov    DWORD PTR [ebp-0x154],0x0
  4018cc:	mov    DWORD PTR [ebp-0x1ac],0x0
  4018d6:	call   0x401010
  4018db:	mov    edx,DWORD PTR ds:0x448944
  4018e1:	push   edx
  4018e2:	call   0x401020
  4018e7:	add    esp,0x4
  4018ea:	mov    DWORD PTR [ebp-0x1b0],eax
  4018f0:	mov    eax,DWORD PTR [ebp-0x1b0]
  4018f6:	push   eax
  4018f7:	call   0x401110
  4018fc:	add    esp,0x4
  4018ff:	mov    DWORD PTR [ebp-0x150],eax
  401905:	mov    ecx,DWORD PTR [ebp-0x1b0]
  40190b:	push   ecx
  40190c:	push   0x0
  40190e:	mov    edx,DWORD PTR [ebp-0x150]
  401914:	push   edx
  401915:	call   0x401140
  40191a:	add    esp,0xc
  40191d:	mov    eax,DWORD PTR [ebp-0x1b0]
  401923:	mov    DWORD PTR [ebp-0x1b8],eax
  401929:	mov    ecx,DWORD PTR [ebp-0x1ac]
  40192f:	cmp    ecx,DWORD PTR [ebp-0x1b0]
  401935:	jae    0x4019c1
  40193b:	mov    edx,DWORD PTR [ebp-0x1b8]
  401941:	push   edx
  401942:	mov    eax,DWORD PTR [ebp-0x188]
  401948:	push   eax
  401949:	call   0x401150
  40194e:	add    esp,0x8
  401951:	mov    DWORD PTR [ebp-0x1bc],eax
  401957:	mov    ecx,DWORD PTR [ebp-0x1bc]
  40195d:	push   ecx
  40195e:	mov    edx,DWORD PTR ds:0x448944
  401964:	add    edx,DWORD PTR [ebp-0x154]
  40196a:	push   edx
  40196b:	mov    eax,DWORD PTR [ebp-0x150]
  401971:	add    eax,DWORD PTR [ebp-0x1ac]
  401977:	push   eax
  401978:	call   0x442bbc
  40197d:	add    esp,0xc
  401980:	mov    ecx,DWORD PTR [ebp-0x11c]
  401986:	add    ecx,DWORD PTR [ebp-0x188]
  40198c:	add    ecx,DWORD PTR [ebp-0x154]
  401992:	mov    DWORD PTR [ebp-0x154],ecx
  401998:	mov    edx,DWORD PTR [ebp-0x1ac]
  40199e:	add    edx,DWORD PTR [ebp-0x188]
  4019a4:	mov    DWORD PTR [ebp-0x1ac],edx
  4019aa:	mov    eax,DWORD PTR [ebp-0x1b8]
  4019b0:	sub    eax,DWORD PTR [ebp-0x1bc]
  4019b6:	mov    DWORD PTR [ebp-0x1b8],eax
  4019bc:	jmp    0x401929
  4019c1:	mov    ecx,DWORD PTR [ebp-0x1b0]
  4019c7:	push   ecx
  4019c8:	mov    edx,DWORD PTR [ebp-0x150]
  4019ce:	push   edx
  4019cf:	call   0x401180
  4019d4:	add    esp,0x8
  4019d7:	mov    eax,DWORD PTR [ebp-0x190]
  4019dd:	mov    ecx,DWORD PTR [ebp-0x150]
  4019e3:	mov    DWORD PTR [eax],ecx
  4019e5:	push   0x40000
  4019ea:	call   0x401110
  4019ef:	add    esp,0x4
  4019f2:	mov    DWORD PTR [ebp-0x4],eax
  4019f5:	lea    edx,[ebp-0x158]
  4019fb:	push   edx
  4019fc:	push   0x20019
  401a01:	push   0x0
  401a03:	push   0x444158
  401a08:	push   0x80000002
  401a0d:	call   DWORD PTR ds:0x4453dc
  401a13:	test   eax,eax
  401a15:	je     0x401a1b
  401a17:	xor    eax,eax
  401a19:	jmp    0x401a7c
  401a1b:	push   0x3d200
  401a20:	mov    eax,DWORD PTR [ebp-0x190]
  401a26:	push   eax
  401a27:	mov    ecx,DWORD PTR [ebp-0x4]
  401a2a:	add    ecx,0x300
  401a30:	push   ecx
  401a31:	call   0x442bbc
  401a36:	add    esp,0xc
  401a39:	mov    edx,DWORD PTR [ebp-0x4]
  401a3c:	sub    edx,0x400000
  401a42:	push   edx
  401a43:	mov    eax,DWORD PTR [ebp-0x4]
  401a46:	push   eax
  401a47:	mov    ecx,DWORD PTR [ebp-0x150]
  401a4d:	push   ecx
  401a4e:	call   0x4010a0
  401a53:	add    esp,0xc
  401a56:	mov    esp,DWORD PTR ds:0x448a50
  401a5c:	pop    ecx
  401a5d:	mov    ecx,DWORD PTR [ebp-0x4]
  401a60:	add    ecx,0x3d190
  401a66:	mov    edx,ecx
  401a68:	call   0x401a6d
  401a6d:	pop    eax
  401a6e:	call   0x401a73
  401a73:	pop    eax
  401a74:	call   0x401a79
  401a79:	pop    eax
  401a7a:	jmp    edx
  401a7c:	mov    esp,ebp
  401a7e:	pop    ebp
  401a7f:	ret    
  401a80:	push   ebp
  401a81:	mov    ebp,esp
  401a83:	mov    eax,ds:0x444014
  401a88:	mov    BYTE PTR [eax+0x3],0x73
  401a8c:	mov    ecx,DWORD PTR ds:0x444014
  401a92:	mov    BYTE PTR [ecx+0x4],0x74
  401a96:	mov    edx,DWORD PTR ds:0x444014
  401a9c:	mov    BYTE PTR [edx+0x5],0x65
  401aa0:	mov    eax,ds:0x444014
  401aa5:	mov    BYTE PTR [eax+0x6],0x6d
  401aa9:	mov    ecx,DWORD PTR ds:0x444014
  401aaf:	mov    BYTE PTR [ecx+0x7],0x33
  401ab3:	mov    edx,DWORD PTR ds:0x444014
  401ab9:	mov    BYTE PTR [edx+0x8],0x32
  401abd:	mov    eax,ds:0x444014
  401ac2:	mov    BYTE PTR [eax+0x9],0x5c
  401ac6:	mov    ecx,DWORD PTR ds:0x444014
  401acc:	mov    BYTE PTR [ecx+0xa],0x61
  401ad0:	mov    edx,DWORD PTR ds:0x444014
  401ad6:	mov    BYTE PTR [edx+0xb],0x74
  401ada:	mov    eax,ds:0x444014
  401adf:	mov    BYTE PTR [eax+0xc],0x6c
  401ae3:	mov    ecx,DWORD PTR ds:0x444014
  401ae9:	mov    BYTE PTR [ecx+0xd],0x2e
  401aed:	mov    edx,DWORD PTR ds:0x444014
  401af3:	mov    BYTE PTR [edx+0xe],0x64
  401af7:	mov    eax,ds:0x444014
  401afc:	mov    BYTE PTR [eax+0xf],0x6c
  401b00:	mov    ecx,DWORD PTR ds:0x444014
  401b06:	mov    BYTE PTR [ecx+0x10],0x6c
  401b0a:	mov    edx,DWORD PTR ds:0x444014
  401b10:	mov    BYTE PTR [edx],0x5c
  401b13:	mov    eax,ds:0x444014
  401b18:	mov    BYTE PTR [eax+0x1],0x73
  401b1c:	mov    ecx,DWORD PTR ds:0x444014
  401b22:	mov    BYTE PTR [ecx+0x2],0x79
  401b26:	pop    ebp
  401b27:	ret    
  401b28:	add    dl,dl
  401b2a:	add    eax,DWORD PTR [eax]
  401b2c:	repz rol DWORD PTR [ebx+0x0],cl
  401b30:	lods   al,BYTE PTR ds:[esi]
  401b31:	arpl   WORD PTR [eax+edx*2-0x7f],si
  401b35:	imul   esp,DWORD PTR [ebx+0x41],0x6572628f
  401b3c:	pusha  
  401b3d:	je     0x401b3f
  401b3f:	add    BYTE PTR [edi],dh
  401b41:	push   0x6e2f6461
  401b46:	bound  esi,QWORD PTR [edx+0x52]
  401b49:	jne    0x401bc4
  401b4b:	inc    ebp
  401b4c:	dec    ebx
  401b4d:	inc    esi
  401b4e:	add    BYTE PTR [eax],al
  401b50:	aaa    
  401b51:	push   0x6e2f6461
  401b56:	bound  esi,QWORD PTR [edx+0x52]
  401b59:	jne    0x401bd4
  401b5b:	inc    ebp
  401b5c:	sub    edx,DWORD PTR [eax+0x0]
  401b5f:	add    BYTE PTR [edx+eiz*2],ch
  401b62:	je     0x401bb1
  401b64:	or     al,0x63
  401b66:	jne    0x401bd4
  401b68:	push   cs
  401b69:	dec    edi
  401b6a:	popa   
  401b6b:	outs   dx,BYTE PTR ds:[esi]
  401b6c:	pop    ss
  401b6d:	imul   esp,DWORD PTR [ebp+0x41],0xfffffff3
  401b71:	push   es
  401b72:	add    BYTE PTR [eax],al
  401b74:	xor    BYTE PTR [ebp+0x65],dh
  401b77:	popa   
  401b78:	jmp    DWORD PTR [ecx+0x46]
  401b7b:	imul   ebx,edi,0xd7004161
  401b81:	jae    0x401bf7
  401b83:	jb     0x401b55
  401b85:	gs je  0x401bc9
  401b88:	repz push es
  401b8a:	add    BYTE PTR [eax],al
  401b8c:	mov    ah,0x61
  401b8e:	je     0x401be7
  401b90:	add    BYTE PTR [eax],al
  401b92:	add    dl,bl
  401b94:	push   0x73c46f64
  401b99:	inc    esp
  401b9a:	imul   eax,ecx,0x9c746361
  401ba0:	je     0x401c1b
  401ba2:	inc    ecx
  401ba3:	repz push es
  401ba5:	add    BYTE PTR [eax],al
  401ba7:	mov    ah,0x61
  401ba9:	je     0x401bf8
  401bab:	test   BYTE PTR [edx+0x75],ah
  401bae:	ins    BYTE PTR es:[edi],dx
  401baf:	xchg   esi,eax
  401bb0:	dec    esi
  401bb1:	popa   
  401bb2:	outs   dx,BYTE PTR ds:[esi]
  401bb3:	(bad)
  401bb7:	repz push es
  401bb9:	add    BYTE PTR [eax],al
  401bbb:	out    dx,eax
  401bbc:	add    eax,DWORD PTR [eax+0x0]
  401bbf:	pop    es
  401bc0:	add    al,0x40
  401bc2:	add    BYTE PTR [edi],cl
  401bc4:	add    al,0x40
  401bc6:	add    BYTE PTR [edi],ah
  401bc8:	add    al,0x40
  401bca:	add    BYTE PTR [ebx],ch
  401bcc:	add    al,0x40
  401bce:	add    BYTE PTR [edi],ah
  401bd0:	add    al,0x40
  401bd2:	add    BYTE PTR [ebx+0x4],dl
  401bd5:	inc    eax
  401bd6:	add    BYTE PTR [ebx],bh
  401bd8:	add    al,0x40
  401bda:	add    BYTE PTR [edx+eiz*2],ch
  401bdd:	je     0x401c2f
  401bdf:	and    DWORD PTR [eax+0x63],ebp
  401be2:	inc    ecx
  401be3:	packsswb mm6,QWORD PTR [edx+0x65]
  401be7:	and    BYTE PTR [eax+eax*1+0x0],dh
  401beb:	daa    
  401bec:	push   0x6e3f6461
  401bf1:	bound  esi,QWORD PTR [edx+0x12]
  401bf4:	jne    0x401c6f
  401bf6:	inc    ebp
  401bf7:	add    BYTE PTR [eax],al
  401bf9:	add    bl,bh
  401bfb:	inc    ebp
  401bfc:	add    BYTE PTR [eax],al
  401bfe:	or     BYTE PTR [edx+0x72],ah
  401c01:	outs   dx,BYTE PTR ds:[esi]
  401c02:	(bad)  
  401c03:	push   0x33
  401c05:	xor    dl,BYTE PTR ds:0xf36c6c63
  401c0b:	push   es
  401c0c:	add    BYTE PTR [eax],al
  401c0e:	(bad)  
  401c0f:	jae    0x401c87
  401c11:	arpl   cx,ax
  401c13:	jb     0x401c43
  401c15:	xlat   BYTE PTR fs:[ebx]
  401c17:	push   0x0
  401c19:	add    dh,cl
  401c1b:	popa   
  401c1c:	ins    DWORD PTR es:[edi],dx
  401c1d:	jae    0x401bed
  401c1f:	jb     0x401c21
  401c21:	add    BYTE PTR [esi-0x5e9c898d],bl
  401c27:	jb     0x401c57
  401c29:	(bad)
  401c2e:	xchg   BYTE PTR [ecx+0x6d],ah
  401c31:	arpl   WORD PTR [ebx-0x62ffff83],ax
  401c37:	ins    DWORD PTR es:[edi],dx
  401c38:	jb     0x401cae
  401c3a:	xchg   BYTE PTR [ebp+0x6c],ah
  401c3d:	inc    ecx
  401c3e:	xchg   DWORD PTR [edx+0x6f],ebp
  401c41:	arpl   bx,si
  401c43:	push   es
  401c44:	add    BYTE PTR [eax],al
  401c46:	cmp    eax,0x66747260
  401c4b:	push   0x6347416c
  401c50:	outs   dx,DWORD PTR ds:[esi]
  401c51:	arpl   bx,si
  401c53:	push   es
  401c54:	add    BYTE PTR [eax],al
  401c56:	push   ds
  401c57:	gs ins DWORD PTR es:[edi],dx
  401c59:	popa   
  401c5a:	inc    ebx
  401c5b:	pop    ebp
  401c5c:	imul   esp,DWORD PTR [ebp+0x0],0x463c0000
  401c63:	inc    si
  401c65:	sbb    ah,BYTE PTR [ebx+0x65]
  401c68:	add    BYTE PTR ds:0x26747260,bh
  401c6e:	push   0x6621506c
  401c73:	je     0x401cda
  401c75:	adc    BYTE PTR [ebx+0x0],bh
  401c78:	add    BYTE PTR [ebx],bh
  401c7a:	ins    BYTE PTR es:[edi],dx
  401c7b:	popa   
  401c7c:	jo     0x401cb0
  401c7e:	arpl   WORD PTR [edi+ebp*2+0x10],bp
  401c82:	pop    es
  401c83:	add    BYTE PTR [eax],al
  401c85:	fsubr  DWORD PTR [ebx+0x72]
  401c88:	outs   dx,BYTE PTR ds:[esi]
  401c89:	into   
  401c8a:	bound  esi,QWORD PTR [ebx]
  401c8c:	xor    cl,BYTE PTR ds:0xf36c6c6b
  401c92:	push   es
  401c93:	add    BYTE PTR [eax],al
  401c95:	mov    ah,0x6b
  401c97:	je     0x401ce9
  401c99:	shl    DWORD PTR [ebp+0x63],0x65
  401c9d:	sar    BYTE PTR [ecx+0x48],0x65
  401ca1:	shl    BYTE PTR [esi+0x0],cl
  401ca4:	add    bl,dh
  401ca6:	push   es
  401ca7:	mov    esp,0x59aaf303
  401cac:	add    bl,dh
  401cae:	fild   WORD PTR [ebx]
  401cb0:	add    bl,dh
  401cb2:	fild   WORD PTR [ebx]
  401cb4:	add    bl,dh
  401cb6:	fild   WORD PTR [ebx]
  401cb8:	add    bl,dh
  401cba:	fild   WORD PTR [ebx]
  401cbc:	add    bl,dh
  401cbe:	fild   WORD PTR [ebx]
  401cc0:	add    bl,dh
  401cc2:	fild   WORD PTR [ebx]
  401cc4:	add    BYTE PTR [eax],al
  401cc6:	add    BYTE PTR [eax],al
  401cc8:	repz fild WORD PTR [ebx]
  401ccb:	add    bl,dh
  401ccd:	fild   WORD PTR [ebx]
  401ccf:	add    bl,dh
  401cd1:	fild   WORD PTR [ebx]
  401cd3:	add    bl,dh
  401cd5:	fild   WORD PTR [ebx]
  401cd7:	add    bl,dh
  401cd9:	fild   WORD PTR [ebx]
  401cdb:	add    bl,dh
  401cdd:	fild   WORD PTR [ebx]
  401cdf:	add    bl,dh
  401ce1:	fild   WORD PTR [ebx]
  401ce3:	add    bl,dh
  401ce5:	fild   WORD PTR [ebx]
  401ce7:	add    bl,dh
  401ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cea:	add    al,0x0
  401cec:	repz fild WORD PTR [ebx]
  401cef:	add    bl,dh
  401cf1:	fild   WORD PTR [ebx]
  401cf3:	add    bl,dh
  401cf5:	fild   WORD PTR [ebx]
  401cf7:	add    bl,dh
  401cf9:	fild   WORD PTR [ebx]
  401cfb:	add    bl,dh
  401cfd:	fild   WORD PTR [ebx]
  401cff:	add    bl,dh
  401d01:	fild   WORD PTR [ebx]
  401d03:	add    bl,dh
  401d05:	fild   WORD PTR [ebx]
  401d07:	add    bl,dh
  401d09:	fild   WORD PTR [ebx]
  401d0b:	add    bl,dh
  401d0d:	fild   WORD PTR [ebx]
  401d0f:	add    bl,dh
  401d11:	fild   WORD PTR [ebx]
  401d13:	add    bl,dh
  401d15:	fild   WORD PTR [ebx]
  401d17:	add    bl,dh
  401d19:	fild   WORD PTR [ebx]
  401d1b:	add    bl,dh
  401d1d:	fild   WORD PTR [ebx]
  401d1f:	add    bl,dh
  401d21:	fild   WORD PTR [ebx]
  401d23:	add    bl,dh
  401d25:	push   es
  401d26:	jmp    0xe947102e
  401d2b:	add    eax,DWORD PTR [eax]
  401d2d:	add    BYTE PTR [eax],al
  401d2f:	repz push es
  401d31:	jmp    0xe9471039
  401d36:	add    esi,ebx
  401d38:	push   es
  401d39:	jmp    0xe9471041
  401d3e:	add    esi,ebx
  401d40:	push   es
  401d41:	jmp    0xe9471049
  401d46:	add    esi,ebx
  401d48:	push   es
  401d49:	jmp    0xe9471051
  401d4e:	add    esi,ebx
  401d50:	push   es
  401d51:	jmp    0xe9471059
  401d56:	add    esi,ebx
  401d58:	push   es
  401d59:	jmp    0xe9471061
  401d5e:	add    esi,ebx
  401d60:	push   es
  401d61:	jmp    0xe9471069
  401d66:	add    esi,ebx
  401d68:	push   es
  401d69:	jmp    0xe9471071
  401d6e:	add    esi,ebx
  401d70:	push   es
  401d71:	jmp    0xe9471079
  401d76:	add    esi,ebx
  401d78:	push   es
  401d79:	jmp    0xe9471081
  401d7e:	add    esi,ebx
  401d80:	push   es
  401d81:	jmp    0xe9471089
  401d86:	add    esi,ebx
  401d88:	push   es
  401d89:	jmp    0xe9471091
  401d8e:	add    esi,ebx
  401d90:	push   es
  401d91:	jmp    0x401d99
  401d96:	repz push es
  401d98:	jmp    0xe94710a0
  401d9d:	add    esi,ebx
  401d9f:	push   es
  401da0:	jmp    0x4710a8
  401da5:	jmp    0xe940249a
  401daa:	lock push es
  401dac:	add    BYTE PTR [ecx-0x52fff94d],bh
  401db2:	out    dx,eax
  401db3:	pop    es
  401db4:	add    BYTE PTR [eax],cl
  401db6:	bnd jp 0x401e08
  401db9:	jmp    0xe94024ae
  401dbe:	lock push es
  401dc0:	add    BYTE PTR [ecx],cl
  401dc2:	lock or BYTE PTR [ecx],al
  401dc5:	loop   0x401dbe
  401dc7:	add    BYTE PTR [eax],al
  401dc9:	jmp    0xe9402542
  401dce:	inc    eax
  401dcf:	pop    es
  401dd0:	add    cl,ch
  401dd2:	lock push es
  401dd4:	add    BYTE PTR [eax-0x16fff95f],dl
  401dda:	add    BYTE PTR [edi],al
  401ddc:	add    cl,ch
  401dde:	nop
  401ddf:	pop    es
  401de0:	add    cl,ch
  401de2:	lock inc esi
  401de4:	add    cl,ch
  401de6:	loopne 0x401dee
  401de8:	add    cl,ch
  401dea:	out    dx,al
  401deb:	push   es
  401dec:	add    ah,ch
  401dee:	lock add eax,0x6f0e800
  401df4:	add    ah,ch
  401df6:	lock add eax,0xe900
  401dfc:	add    al,dh
  401dfe:	push   es
  401dff:	add    cl,ch
  401e01:	lock or al,BYTE PTR [eax]
  401e04:	jmp    0xea40118d
  401e09:	lock push es
  401e0b:	add    bl,ch
  401e0d:	lock push es
  401e0f:	sub    ecx,0xe90016f0
  401e15:	add    BYTE PTR [edi],al
  401e17:	add    cl,ch
  401e19:	lock push ss
  401e1b:	add    cl,ch
  401e1d:	add    BYTE PTR [edi],al
  401e1f:	add    BYTE PTR [eax],al
  401e21:	pop    edx
  401e22:	pop    es
  401e23:	add    BYTE PTR [eax],al
  401e25:	sub    al,BYTE PTR [edi]
  401e27:	add    BYTE PTR [eax],al
  401e29:	dec    edx
  401e2a:	pop    es
  401e2b:	add    BYTE PTR [eax],al
  401e2d:	dec    edx
  401e2e:	pop    es
  401e2f:	add    BYTE PTR [eax],al
  401e31:	push   cs
  401e32:	popa   
  401e33:	add    eax,DWORD PTR [eax]
  401e35:	pop    edx
  401e36:	or     BYTE PTR [eax],al
  401e38:	add    BYTE PTR [edx],cl
  401e3a:	pop    es
  401e3b:	add    BYTE PTR [eax],al
  401e3d:	or     al,BYTE PTR [edi]
  401e3f:	add    BYTE PTR [eax],al
  401e41:	sbb    al,BYTE PTR [edi]
  401e43:	add    BYTE PTR [eax],al
  401e45:	sbb    al,BYTE PTR [edi]
  401e47:	add    BYTE PTR [eax],al
  401e49:	or     al,BYTE PTR [edi]
  401e4b:	add    BYTE PTR [eax],al
  401e4d:	or     al,BYTE PTR [edi]
  401e4f:	add    BYTE PTR [eax],al
  401e51:	fcmovbe st,st(6)
  401e53:	add    eax,DWORD PTR [eax]
  401e55:	cli    
  401e56:	or     al,0x0
  401e58:	add    dl,cl
  401e5a:	push   es
  401e5b:	add    BYTE PTR [eax],al
  401e5d:	retf   0x6
  401e60:	add    BYTE PTR [eax],al
  401e62:	add    BYTE PTR [eax],al
  401e64:	fiadd  DWORD PTR [esi]
  401e66:	add    BYTE PTR [eax],al
  401e68:	fiadd  DWORD PTR [esi]
  401e6a:	add    BYTE PTR [eax],al
  401e6c:	retf   0x6
  401e6f:	add    dl,cl
  401e71:	push   es
  401e72:	add    BYTE PTR [eax],al
  401e74:	call   0x6:0x9a000006
  401e7b:	add    BYTE PTR [edx-0x75fffffa],cl
  401e81:	push   es
  401e82:	add    BYTE PTR [eax],al
  401e84:	call   0x6:0x9a000006
  401e8b:	add    BYTE PTR [edx+0x26000016],cl
  401e91:	or     BYTE PTR [eax],al
  401e93:	add    BYTE PTR [edx+0x6],bl
  401e96:	add    BYTE PTR [eax],al
  401e98:	pop    edx
  401e99:	push   es
  401e9a:	add    BYTE PTR [eax],al
  401e9c:	repz fild WORD PTR [ebx]
  401e9f:	add    bl,dh
  401ea1:	fild   WORD PTR [ebx]
  401ea3:	add    bl,dh
  401ea5:	fild   WORD PTR [ebx]
  401ea7:	add    bl,dh
  401ea9:	fild   WORD PTR [ebx]
  401eab:	add    bl,dh
  401ead:	or     DWORD PTR [eax+0x65],esi
  401eb0:	mov    ebx,0xf30003bb
  401eb5:	pop    ss
  401eb6:	test   DWORD PTR [ebx],eax
  401eb8:	repz fist WORD PTR [ebx]
  401ebb:	add    bl,dh
  401ebd:	fistp  QWORD PTR [edi+0x3]
  401ec0:	repz (bad) 
  401ec3:	dec    DWORD PTR [eax+eiz*8]
  401ec6:	add    eax,DWORD PTR [eax]
  401ec8:	add    BYTE PTR [eax],al
  401eca:	add    bl,dh
  401ecc:	fild   WORD PTR [ebx]
  401ece:	add    bl,dh
  401ed0:	fild   WORD PTR [ebx]
  401ed2:	add    bl,dh
  401ed4:	mov    edi,0x1a530003
  401ed9:	pusha  
  401eda:	popa   
  401edb:	pop    edi
  401edc:	aas    
  401edd:	add    al,0x0
  401edf:	repz daa 
  401ee1:	push   ds
  401ee2:	add    bl,dh
  401ee4:	fbld   TBYTE PTR [ebx+0x9dff303]
  401eea:	add    bl,dh
  401eec:	fisttp WORD PTR [ebx+0x3dff303]
  401ef2:	add    bl,dh
  401ef4:	fild   WORD PTR [ebx]
  401ef6:	add    bl,dh
  401ef8:	fild   WORD PTR [ebx]
  401efa:	add    bl,dh
  401efc:	pop    ds
  401efd:	add    al,0x0
  401eff:	mov    bl,0xc9
  401f01:	jno    0x401f68
  401f03:	pop    es
  401f04:	icebp  
  401f05:	bound  eax,QWORD PTR [eax]
  401f07:	repz mov ecx,0xdff3001f
  401f0d:	rol    DWORD PTR [ebx],cl
  401f0f:	repz fild QWORD PTR [ebx]
  401f12:	add    bl,dh
  401f14:	fist   WORD PTR [ecx-0x16f90cfd]
  401f1a:	add    esi,ebx
  401f1c:	push   es
  401f1d:	jmp    0xe9471225
  401f22:	add    esi,ebx
  401f24:	push   es
  401f25:	test   eax,0xe944f303
  401f2a:	add    esi,ebx
  401f2c:	push   es
  401f2d:	jmp    0x401f35
  401f32:	repz push es
  401f34:	jmp    0xe947123c
  401f39:	add    esi,ebx
  401f3b:	push   es
  401f3c:	jmp    0xe9471244
  401f41:	add    esi,ebx
  401f43:	push   es
  401f44:	jmp    0xe947124c
  401f49:	add    esi,ebx
  401f4b:	push   es
  401f4c:	jmp    0xe9471254
  401f51:	add    esi,ebx
  401f53:	push   es
  401f54:	jmp    0xe947125c
  401f59:	add    esi,ebx
  401f5b:	push   es
  401f5c:	jmp    0xe9471264
  401f61:	add    esi,ebx
  401f63:	push   es
  401f64:	jmp    0xe947126c
  401f69:	add    esi,ebx
  401f6b:	push   es
  401f6c:	jmp    0xe9471274
  401f71:	add    esi,ebx
  401f73:	push   es
  401f74:	jmp    0xe947127c
  401f79:	add    esi,ebx
  401f7b:	push   es
  401f7c:	jmp    0xe9471284
  401f81:	add    esi,ebx
  401f83:	push   es
  401f84:	jmp    0xe947128c
  401f89:	add    esi,ebx
  401f8b:	push   es
  401f8c:	jmp    0xe9471294
  401f91:	add    esi,ebx
  401f93:	push   es
  401f94:	add    cl,ch
  401f96:	add    BYTE PTR [eax],al
  401f98:	add    al,dh
  401f9a:	push   es
  401f9b:	add    cl,ch
  401f9d:	lock push es
  401f9f:	add    cl,ch
  401fa1:	lock push es
  401fa3:	add    cl,ch
  401fa5:	lock push es
  401fa7:	add    cl,ch
  401fa9:	lock push es
  401fab:	add    cl,ch
  401fad:	lock push es
  401faf:	add    cl,ch
  401fb1:	lock push es
  401fb3:	add    cl,ch
  401fb5:	lock push es
  401fb7:	add    cl,ch
  401fb9:	lock push es
  401fbb:	add    cl,ch
  401fbd:	lock push es
  401fbf:	add    cl,ch
  401fc1:	lock push es
  401fc3:	add    cl,ch
  401fc5:	lock push es
  401fc7:	add    cl,ch
  401fc9:	lock push es
  401fcb:	add    cl,ch
  401fcd:	lock push es
  401fcf:	add    cl,ch
  401fd1:	lock push es
  401fd3:	add    cl,ch
  401fd5:	lock push es
  401fd7:	add    cl,ch
  401fd9:	lock push es
  401fdb:	add    cl,ch
  401fdd:	lock push es
  401fdf:	add    cl,ch
  401fe1:	lock push es
  401fe3:	add    cl,ch
  401fe5:	lock push es
  401fe7:	add    cl,ch
  401fe9:	lock push es
  401feb:	add    cl,ch
  401fed:	lock push es
  401fef:	add    cl,ch
  401ff1:	lock push es
  401ff3:	add    cl,ch
  401ff5:	lock push es
  401ff7:	add    cl,ch
  401ff9:	lock push es
  401ffb:	add    cl,ch
  401ffd:	add    BYTE PTR [eax],al
  401fff:	add    al,dh
  402001:	push   es
  402002:	add    cl,ch
  402004:	lock push es
  402006:	add    cl,ch
  402008:	lock push es
  40200a:	add    cl,ch
  40200c:	lock push es
  40200e:	add    cl,ch
  402010:	lock push es
  402012:	add    BYTE PTR [eax],al
  402014:	call   0x3:0x8a000003
  40201b:	add    BYTE PTR [edx+0x5a000003],cl
  402021:	add    eax,DWORD PTR [eax]
  402023:	add    BYTE PTR [edx+0x3],bl
  402026:	add    BYTE PTR [eax],al
  402028:	dec    edx
  402029:	add    eax,DWORD PTR [eax]
  40202b:	add    BYTE PTR [edx+0x3],cl
  40202e:	add    BYTE PTR [eax],al
  402030:	pop    edx
  402031:	add    eax,DWORD PTR [eax]
  402033:	add    BYTE PTR [edx+0x3],bl
  402036:	add    BYTE PTR [eax],al
  402038:	dec    edx
  402039:	add    eax,DWORD PTR [eax]
  40203b:	add    BYTE PTR [edx+0x3],cl
  40203e:	add    BYTE PTR [eax],al
  402040:	sbb    al,BYTE PTR [ebx]
  402042:	add    BYTE PTR [eax],al
  402044:	sbb    al,BYTE PTR [ebx]
  402046:	add    BYTE PTR [eax],al
  402048:	or     al,BYTE PTR [ebx]
  40204a:	add    BYTE PTR [eax],al
  40204c:	or     al,BYTE PTR [ebx]
  40204e:	add    BYTE PTR [eax],al
  402050:	sbb    al,BYTE PTR [ebx]
  402052:	add    BYTE PTR [eax],al
  402054:	sbb    al,BYTE PTR [ebx]
  402056:	add    BYTE PTR [eax],al
  402058:	or     al,BYTE PTR [ebx]
  40205a:	add    BYTE PTR [eax],al
  40205c:	or     al,BYTE PTR [ebx]
  40205e:	add    BYTE PTR [eax],al
  402060:	fimul  DWORD PTR [edx]
  402062:	add    BYTE PTR [eax],al
  402064:	add    BYTE PTR [eax],al
  402066:	add    dl,bl
  402068:	or     al,BYTE PTR [eax]
  40206a:	add    dl,cl
  40206c:	or     al,BYTE PTR [eax]
  40206e:	add    dl,cl
  402070:	or     al,BYTE PTR [eax]
  402072:	add    dl,bl
  402074:	or     al,BYTE PTR [eax]
  402076:	add    dl,bl
  402078:	or     al,BYTE PTR [eax]
  40207a:	add    dl,cl
  40207c:	or     al,BYTE PTR [eax]
  40207e:	add    dl,cl
  402080:	or     al,BYTE PTR [eax]
  402082:	add    BYTE PTR [edx-0x65fffff6],bl
  402088:	or     al,BYTE PTR [eax]
  40208a:	add    BYTE PTR [edx-0xcfffff6],cl
  402090:	fild   WORD PTR [ebx]
  402092:	add    bl,dh
  402094:	fild   WORD PTR [ebx]
  402096:	add    bl,dh
  402098:	fild   WORD PTR [ebx]
  40209a:	add    bl,dh
  40209c:	fild   WORD PTR [ebx]
  40209e:	add    bl,dh
  4020a0:	fild   WORD PTR [ebx]
  4020a2:	add    bl,dh
  4020a4:	fild   WORD PTR [ebx]
  4020a6:	add    bl,dh
  4020a8:	fild   WORD PTR [ebx]
  4020aa:	add    bl,dh
  4020ac:	fild   WORD PTR [ebx]
  4020ae:	add    bl,dh
  4020b0:	fild   WORD PTR [ebx]
  4020b2:	add    bl,dh
  4020b4:	fild   WORD PTR [ebx]
  4020b6:	add    bl,dh
  4020b8:	fild   WORD PTR [ebx]
  4020ba:	add    bl,dh
  4020bc:	fild   WORD PTR [ebx]
  4020be:	add    bl,dh
  4020c0:	fild   WORD PTR [ebx]
  4020c2:	add    bl,dh
  4020c4:	fild   WORD PTR [ebx]
  4020c6:	add    bl,dh
  4020c8:	fild   WORD PTR [ebx]
  4020ca:	add    BYTE PTR [eax],al
  4020cc:	add    BYTE PTR [eax],al
  4020ce:	repz fild WORD PTR [ebx]
  4020d1:	add    bl,dh
  4020d3:	mov    eax,ds:0x83f3037c
  4020d8:	jl     0x4020dd
  4020da:	repz test DWORD PTR [ebx+eax*1-0xd],edi
  4020df:	push   ecx
  4020e0:	jl     0x4020e5
  4020e2:	repz dec ecx
  4020e4:	jl     0x4020e9
  4020e6:	repz pop ds
  4020e8:	jl     0x4020ed
  4020ea:	repz mov cl,0x8b
  4020ed:	add    esi,ebx
  4020ef:	lds    ecx,FWORD PTR [ebx-0x74320cfd]
  4020f5:	add    esi,ebx
  4020f7:	jmp    0x332477
  4020fc:	jnp    0x402101
  4020fe:	repz icebp 
  402100:	jnp    0x402105
  402102:	repz and edi,DWORD PTR [ebx+eax*1-0xd]
  402107:	inc    ecx
  402108:	jl     0x40210d
  40210a:	repz push es
  40210c:	and    edi,DWORD PTR [eax+esi*8+0x6]
  402110:	jnp    0x40218e
  402112:	lock push es
  402114:	inc    ebx
  402115:	jl     0x402107
  402117:	push   es
  402118:	stos   DWORD PTR es:[edi],eax
  402119:	jl     0x40210b
  40211b:	push   es
  40211c:	lahf   
  40211d:	jl     0x40210f
  40211f:	push   es
  402120:	xchg   ecx,eax
  402121:	jl     0x402113
  402123:	push   es
  402124:	jae    0x4021a2
  402126:	lock push es
  402128:	xlat   BYTE PTR ds:[ebx]
  402129:	jl     0x40211b
  40212b:	push   es
  40212c:	pop    ds
  40212d:	jge    0x40211f
  40212f:	push   es
  402130:	mov    ebx,0x7c
  402135:	lock push es
  402137:	arpl   WORD PTR [ebp-0x10],di
  40213a:	push   es
  40213b:	xchg   DWORD PTR [ebp-0x10],edi
  40213e:	push   es
  40213f:	sub    edi,DWORD PTR [ebp-0x10]
  402142:	push   es
  402143:	adc    eax,0x4106f07d
  402148:	jge    0x40213a
  40214a:	push   es
  40214b:	xor    DWORD PTR [ebp-0x10],edi
  40214e:	push   es
  40214f:	out    dx,eax
  402150:	jge    0x402142
  402152:	push   es
  402153:	add    DWORD PTR [esi-0x10],edi
  402156:	push   es
  402157:	mov    ebp,0xe906f08a
  40215c:	add    esi,ebx
  40215e:	push   es
  40215f:	add    eax,DWORD PTR [edx-0x7de2f910]
  402165:	lock push es
  402167:	and    eax,DWORD PTR [edx-0x7dc4f910]
  40216d:	lock push es
  40216f:	jns    0x4020f2
  402171:	lock push es
  402173:	arpl   WORD PTR [edx-0x7db2f910],ax
  402179:	lock push es
  40217b:	in     eax,dx
  40217c:	xor    al,0x6
  40217f:	jmp    0x6f471487
  402184:	xor    al,0x6
  402187:	add    bl,bl
  402189:	jae    0x402193
  40218b:	add    BYTE PTR [ecx+0x6d000824],dh
  402191:	jae    0x40219b
  402193:	add    BYTE PTR [ecx],ah
  402195:	jb     0x40219f
  402197:	add    BYTE PTR ds:0x72000000,cl
  40219d:	or     BYTE PTR [eax],al
  40219f:	xor    DWORD PTR [edx+0x8],esi
  4021a2:	add    BYTE PTR [ebx],dh
  4021a4:	jb     0x4021ae
  4021a6:	add    BYTE PTR [ecx],ch
  4021a8:	jb     0x4021b2
  4021aa:	add    BYTE PTR [ebp-0x3efff78d],bh
  4021b0:	jae    0x4021ba
  4021b2:	add    BYTE PTR [ecx-0x24],dl
  4021b5:	pop    es
  4021b6:	add    BYTE PTR [ebx+0x21000873],al
  4021bc:	int3   
  4021bd:	pop    es
  4021be:	add    BYTE PTR [ecx],dh
  4021c0:	les    eax,FWORD PTR [edi]
  4021c2:	add    cl,ch
  4021c4:	lock push es
  4021c6:	add    BYTE PTR [ecx+0x5f],bl
  4021c9:	or     BYTE PTR [eax],al
  4021cb:	jmp    0xaf4028c0
  4021d0:	xchg   ebp,eax
  4021d1:	pop    es
  4021d2:	add    BYTE PTR [ecx-0x73],bh
  4021d5:	pop    es
  4021d6:	add    BYTE PTR [edi-0x7b],al
  4021d9:	pop    es
  4021da:	add    BYTE PTR [ebx-0x63],dl
  4021dd:	pop    es
  4021de:	add    BYTE PTR [edi],bl
  4021e0:	xchg   ebp,eax
  4021e1:	pop    es
  4021e2:	add    BYTE PTR [edi],cl
  4021e4:	lea    eax,[edi]
  4021e6:	add    bl,bh
  4021e8:	xchg   BYTE PTR [edi],al
  4021ea:	add    bh,dh
  4021ec:	pop    esi
  4021ed:	or     BYTE PTR [eax],al
  4021ef:	jecxz  0x402245
  4021f1:	or     BYTE PTR [eax],al
  4021f3:	dec    DWORD PTR [eax+ecx*1+0x0]
  4021f7:	pop    es
  4021f8:	arpl   WORD PTR [eax],cx
  4021fa:	add    BYTE PTR [edi],bl
  4021fc:	inc    ebx
  4021fd:	or     BYTE PTR [eax],al
  4021ff:	and    eax,DWORD PTR [eax]
  402201:	add    BYTE PTR [eax],al
  402203:	inc    ebx
  402204:	or     BYTE PTR [eax],al
  402206:	add    BYTE PTR [esi],ch
  402208:	ja     0x40220d
  40220a:	add    ah,bh
  40220c:	jbe    0x402211
  40220e:	add    BYTE PTR [esi],bl
  402210:	ja     0x402215
  402212:	add    BYTE PTR [esi],bh
  402214:	ja     0x402219
  402216:	add    BYTE PTR [esi],ch
  402218:	ja     0x40221d
  40221a:	add    BYTE PTR [edx+0x76],cl
  40221d:	add    eax,DWORD PTR [eax]
  40221f:	inc    esi
  402220:	jbe    0x402225
  402222:	add    BYTE PTR [esi+0x76],bl
  402225:	add    eax,DWORD PTR [eax]
  402227:	call   0x35c:0xa000035c
  40222e:	add    BYTE PTR [esp+ebx*2+0x5c080003],ah
  402235:	add    eax,DWORD PTR [eax]
  402237:	sub    BYTE PTR [ebx+eax*1+0x0],bl
  40223b:	cmp    BYTE PTR [ebx+eax*1+0x0],bl
  40223f:	rcr    BYTE PTR [ebx+0x3],cl
  402242:	add    BYTE PTR [esi-0x2bfffca5],bh
  402248:	pop    ebx
  402249:	add    eax,DWORD PTR [eax]
  40224b:	pop    bx
  40224d:	add    eax,DWORD PTR [eax]
  40224f:	mov    al,ds:0x400035b
  402254:	pop    esp
  402255:	add    eax,DWORD PTR [eax]
  402257:	mov    dh,0x5b
  402259:	add    eax,DWORD PTR [eax]
  40225b:	(bad)  
  40225c:	pop    ebx
  40225d:	add    eax,DWORD PTR [eax]
  40225f:	je     0x4022bb
  402261:	add    eax,DWORD PTR [eax]
  402263:	add    dh,BYTE PTR [ebp+0x3]
  402266:	add    BYTE PTR [eax],al
  402268:	add    BYTE PTR [eax],al
  40226a:	cmp    BYTE PTR [ebp+0x3],dh
  40226d:	add    BYTE PTR [esi+0x75],cl
  402270:	add    eax,DWORD PTR [eax]
  402272:	mov    bh,BYTE PTR [eax+0x3]
  402275:	add    BYTE PTR [edx+0x78],bh
  402278:	add    eax,DWORD PTR [eax]
  40227a:	push   eax
  40227b:	jne    0x402280
  40227d:	add    BYTE PTR [edx+0x78],ah
  402280:	add    eax,DWORD PTR [eax]
  402282:	repz jno 0x4022f6
  402285:	add    esi,ebx
  402287:	imul   esi,DWORD PTR [ecx+0x3],0x371b3f3
  40228e:	repz mov edi,0xadf30371
  402294:	jno    0x402299
  402296:	repz cdq 
  402298:	jno    0x40229d
  40229a:	repz jmp 0xce332610
  4022a0:	jo     0x4022a5
  4022a2:	repz daa 
  4022a4:	jno    0x4022a9
  4022a6:	repz push DWORD PTR [eax+0x3]
  4022aa:	repz jmp 0x78332620
  4022b0:	jo     0x4022b5
  4022b2:	repz push ebp
  4022b4:	jo     0x4022b9
  4022b6:	repz inc edi
  4022b8:	jo     0x4022bd
  4022ba:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022bc:	jo     0x4022c1
  4022be:	repz aaa 
  4022c0:	jo     0x4022c5
  4022c2:	repz xor esi,DWORD PTR [eax+0x3]
  4022c6:	repz inc ebp
  4022c8:	jo     0x4022cd
  4022ca:	repz inc ebp
  4022cc:	jo     0x4022d1
  4022ce:	add    BYTE PTR [eax],al
  4022d0:	add    bl,dh
  4022d2:	fld    DWORD PTR [ebx-0x7c2c0cfd]
  4022d8:	add    esi,ebx
  4022da:	lahf   
  4022db:	add    DWORD PTR [ebx],0xfffffff3
  4022de:	scas   eax,DWORD PTR es:[edi]
  4022df:	add    DWORD PTR [ebx],0xfffffff3
  4022e2:	push   ecx
  4022e3:	xchg   ebp,eax
  4022e4:	add    esi,ebx
  4022e6:	jne    0x40227d
  4022e8:	add    esi,ebx
  4022ea:	popa   
  4022eb:	xchg   ebp,eax
  4022ec:	add    esi,ebx
  4022ee:	test   DWORD PTR [ebp-0x6a7c0cfd],edx
  4022f4:	add    esi,ebx
  4022f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022f7:	ins    BYTE PTR es:[edi],dx
  4022f8:	add    esi,ebx
  4022fa:	jns    0x402368
  4022fc:	add    esi,ebx
  4022fe:	push   es
  4022ff:	adc    ebp,DWORD PTR [ebx-0x10]
  402302:	push   es
  402303:	std    
  402304:	push   0xfffffff0
  402306:	push   es
  402307:	out    0x6a,eax
  402309:	lock push es
  40230b:	iret   
  40230c:	push   0xfffffff0
  40230e:	push   es
  40230f:	xlat   BYTE PTR ds:[ebx]
  402310:	push   0xfffffff0
  402312:	push   es
  402313:	mov    ds:0xa506f06a,eax
  402318:	push   0xfffffff0
  40231a:	push   es
  40231b:	test   eax,0x5306f06a
  402320:	push   0xfffffff0
  402322:	push   es
  402323:	jg     0x40238f
  402325:	lock push es
  402327:	jns    0x402393
  402329:	lock push es
  40232b:	or     eax,0x1506f06a
  402330:	push   0xfffffff0
  402332:	push   es
  402333:	and    ebp,DWORD PTR [edx+0x0]
  402336:	add    BYTE PTR [eax],al
  402338:	lock push es
  40233a:	and    ebp,DWORD PTR [edx-0x10]
  40233d:	push   es
  40233e:	mov    cl,0x69
  402340:	lock push es
  402342:	adc    DWORD PTR [edx-0x10],ebp
  402345:	push   es
  402346:	add    ebp,DWORD PTR [edx-0x10]
  402349:	push   es
  40234a:	loope  0x4023b5
  40234c:	lock push es
  40234e:	push   ebp
  40234f:	ins    DWORD PTR es:[edi],dx
  402350:	lock push es
  402352:	dec    ecx
  402353:	ins    DWORD PTR es:[edi],dx
  402354:	lock push es
  402356:	das    
  402357:	ins    DWORD PTR es:[edi],dx
  402358:	lock push es
  40235a:	jno    0x4023c9
  40235c:	lock push es
  40235e:	mov    ebp,DWORD PTR [ebp-0x10]
  402361:	push   es
  402362:	jg     0x4023d1
  402364:	lock push es
  402366:	jae    0x4023d5
  402368:	lock push es
  40236a:	xchg   edi,eax
  40236b:	ins    BYTE PTR es:[edi],dx
  40236c:	lock push es
  40236e:	jg     0x4023dc
  402370:	lock push es
  402372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402373:	ins    BYTE PTR es:[edi],dx
  402374:	lock push es
  402376:	int    0x6c
  402378:	lock push es
  40237a:	add    BYTE PTR [ebp-0x28fffba9],ch
  402380:	dec    edi
  402381:	add    al,0x0
  402383:	repz inc edi
  402385:	add    al,0x0
  402387:	aad    0x58
  402389:	add    al,0x0
  40238b:	iret   
  40238c:	pop    eax
  40238d:	add    al,0x0
  40238f:	mov    ch,0x48
  402391:	add    al,0x0
  402393:	scas   eax,DWORD PTR es:[edi]
  402394:	dec    eax
  402395:	add    al,0x0
  402397:	sbb    DWORD PTR [eax],0x4
  40239a:	add    BYTE PTR [edi+0x18000000],al
  4023a0:	add    al,0x0
  4023a2:	push   ebp
  4023a3:	or     BYTE PTR [eax+eax*1],al
  4023a6:	ins    DWORD PTR es:[edi],dx
  4023a7:	or     BYTE PTR [eax+eax*1],al
  4023aa:	sbb    ebx,DWORD PTR [edi]
  4023ac:	add    al,0x0
  4023ae:	xor    eax,0x1d000417
  4023b3:	(bad)  
  4023b5:	add    BYTE PTR ds:0xb5000407,ch
  4023bb:	fadd   DWORD PTR [ebx]
  4023bd:	add    cl,cl
  4023bf:	fadd   DWORD PTR [ebx]
  4023c1:	add    ch,dl
  4023c3:	enter  0x3,0xe9
  4023c7:	enter  0x3,0x59
  4023cb:	lds    eax,FWORD PTR [ebx]
  4023cd:	add    BYTE PTR [edi],dh
  4023cf:	mov    ebp,0xc5390003
  4023d4:	add    eax,DWORD PTR [eax]
  4023d6:	cmp    DWORD PTR [ebp-0x5a76fffd],0x9d610003
  4023e0:	add    eax,DWORD PTR [eax]
  4023e2:	mov    ebp,0xc70003a5
  4023e7:	popf   
  4023e8:	add    eax,DWORD PTR [eax]
  4023ea:	lods   eax,DWORD PTR ds:[esi]
  4023eb:	test   DWORD PTR [ebx],eax
  4023ed:	add    BYTE PTR [ecx-0x2afffc83],ch
  4023f3:	test   DWORD PTR [ebx],eax
  4023f5:	add    BYTE PTR [eax],al
  4023f7:	and    al,0x71
  4023f9:	add    eax,DWORD PTR [eax]
  4023fb:	les    esi,FWORD PTR [eax+0x3]
  4023fe:	add    dl,bl
  402400:	jo     0x402405
  402402:	add    BYTE PTR [eax],al
  402404:	add    BYTE PTR [eax],al
  402406:	bnd jno 0x40240c
  402409:	add    dl,ah
  40240b:	pop    ecx
  40240c:	add    eax,DWORD PTR [eax]
  40240e:	mov    dh,BYTE PTR [eax+0x3]
  402411:	add    dl,bl
  402413:	add    eax,DWORD PTR [eax]
  402415:	add    BYTE PTR [esi],ah
  402417:	xchg   esp,eax
  402418:	add    eax,DWORD PTR [eax]
  40241a:	sub    dl,BYTE PTR [ebx+eax*1+0x393dc00]
  402421:	add    BYTE PTR [edx-0x6dfffffd],bl
  402427:	add    eax,DWORD PTR [eax]
  402429:	and    BYTE PTR [ebx-0x677ffffd],0x3
  402430:	add    BYTE PTR [eax-0x7ffffc6c],al
  402436:	mov    al,BYTE PTR [ebx]
  402438:	add    BYTE PTR [eax],al
  40243a:	push   esi
  40243b:	ins    DWORD PTR es:[edi],dx
  40243c:	add    eax,DWORD PTR [eax]
  40243e:	sub    al,0x6e
  402440:	add    eax,DWORD PTR [eax]
  402442:	mov    al,0x6d
  402444:	add    eax,DWORD PTR [eax]
  402446:	dec    edx
  402447:	add    eax,DWORD PTR [eax]
  402449:	add    al,bl
  40244b:	ins    DWORD PTR es:[edi],dx
  40244c:	add    eax,DWORD PTR [eax]
  40244e:	sub    al,0x6e
  402450:	add    eax,DWORD PTR [eax]
  402452:	xor    BYTE PTR [esi+0x3],ch
  402455:	add    BYTE PTR [esi-0x79fffc92],al
  40245b:	outs   dx,BYTE PTR ds:[esi]
  40245c:	add    eax,DWORD PTR [eax]
  40245e:	sub    BYTE PTR [esi+0x3],ch
  402461:	add    ah,dh
  402463:	ins    DWORD PTR es:[edi],dx
  402464:	add    eax,DWORD PTR [eax]
  402466:	inc    esp
  402467:	outs   dx,BYTE PTR ds:[esi]
  402468:	add    eax,DWORD PTR [eax]
  40246a:	add    BYTE PTR [eax],al
  40246c:	add    BYTE PTR [esi],al
  40246e:	outs   dx,BYTE PTR ds:[esi]
  40246f:	add    eax,DWORD PTR [eax]
  402471:	(bad)  
  402472:	ins    BYTE PTR es:[edi],dx
  402473:	add    eax,DWORD PTR [eax]
  402475:	repz daa 
  402477:	jp     0x40247c
  402479:	repz sbb edi,DWORD PTR [edx+0x3]
  40247d:	repz dec edi
  40247f:	jp     0x402484
  402481:	repz push ecx
  402483:	jp     0x402488
  402485:	repz imul edi,DWORD PTR [edx+0x3],0xfffffff3
  40248a:	push   edi
  40248b:	jns    0x402490
  40248d:	repz cmp DWORD PTR [edx+0x3],edi
  402491:	repz and eax,0x2df3037a
  402497:	jp     0x40249c
  402499:	repz lds eax,FWORD PTR [ebx]
  40249c:	add    BYTE PTR [ebx+0x30],dh
  40249f:	jp     0x4024a4
  4024a1:	repz loope 0x40251d
  4024a4:	add    esi,ebx
  4024a6:	out    dx,eax
  4024a7:	add    eax,DWORD PTR [eax]
  4024a9:	repz lahf 
  4024ab:	js     0x4024b0
  4024ad:	repz out dx,eax
  4024af:	add    eax,DWORD PTR [eax]
  4024b1:	repz pop ds
  4024b3:	mov    BYTE PTR [ebx],al
  4024b5:	repz mov bh,0x87
  4024b8:	add    esi,ebx
  4024ba:	mov    DWORD PTR [edi-0x78180cfd],0x87ebf303
  4024c4:	add    esi,ebx
  4024c6:	lea    eax,[eax-0x7f6c0cfd]
  4024cc:	add    esi,ebx
  4024ce:	das    
  4024cf:	add    BYTE PTR [ebx],0x0
  4024d2:	add    BYTE PTR [eax],al
  4024d4:	repz jg 0x402457
  4024d7:	add    esi,ebx
  4024d9:	xchg   ebp,eax
  4024da:	add    BYTE PTR [ebx],0xf3
  4024dd:	imul   eax,DWORD PTR [eax-0x7f380cfd],0x80b9f303
  4024e7:	add    esi,ebx
  4024e9:	jns    0x40246b
  4024eb:	add    esi,ebx
  4024ed:	add    DWORD PTR [eax-0x1cf90cfd],0xffffff80
  4024f4:	lock push es
  4024f6:	rol    DWORD PTR [eax-0x7f00f910],1
  4024fc:	lock push es
  4024fe:	jmp    0x69471583
  402503:	xchg   eax,esi
  402505:	push   es
  402506:	push   ebp
  402507:	xchg   eax,esi
  402509:	push   es
  40250a:	dec    ebp
  40250b:	xchg   eax,esi
  40250d:	push   es
  40250e:	test   DWORD PTR [edi-0x7f50f910],eax
  402514:	lock push es
  402516:	mov    bh,0x80
  402518:	lock push es
  40251a:	ret    
  40251b:	xor    al,0x6
  40251e:	in     eax,0x80
  402520:	lock push es
  402522:	fild   DWORD PTR [eax-0x7ef6f910]
  402528:	lock push es
  40252a:	add    eax,0xed06f081
  40252f:	xor    al,0x6
  402532:	xor    DWORD PTR [ecx-0x7ebef910],eax
  402538:	add    BYTE PTR [eax],al
  40253a:	add    al,dh
  40253c:	push   es
  40253d:	add    DWORD PTR [ecx-0x7eeaf910],eax
  402543:	lock push es
  402545:	int    0x82
  402547:	lock push es
  402549:	icebp  
  40254a:	xor    al,0x6
  40254d:	jge    0x4024d1
  40254f:	lock push es
  402551:	test   DWORD PTR [edx-0x7dbef910],eax
  402557:	lock push es
  402559:	xor    DWORD PTR [edx-0x7d6cf910],eax
  40255f:	lock push es
  402561:	add    DWORD PTR [edx-0x7d98f910],0xfffffff0
  402568:	push   es
  402569:	ins    DWORD PTR es:[edi],dx
  40256a:	xor    al,0x6
  40256d:	add    BYTE PTR [ecx+0x7b000972],dh
  402573:	jae    0x40257e
  402575:	add    BYTE PTR [edi-0x72fff674],bl
  40257b:	jb     0x402586
  40257d:	add    BYTE PTR [ecx-0x44fff68e],cl
  402583:	jb     0x40258e
  402585:	add    BYTE PTR [ebp+0x7f000872],ch
  40258b:	jo     0x402595
  40258d:	add    BYTE PTR [edi+0x77],ah
  402590:	or     BYTE PTR [eax],al
  402592:	dec    ebp
  402593:	outs   dx,DWORD PTR ds:[esi]
  402594:	or     BYTE PTR [eax],al
  402596:	cdq    
  402597:	jo     0x4025a1
  402599:	add    BYTE PTR [ebx-0x44fff790],ch
  40259f:	add    BYTE PTR [eax],al
  4025a1:	add    BYTE PTR [eax+0x8],dh
  4025a4:	add    bl,cl
  4025a6:	jo     0x4025b0
  4025a8:	add    BYTE PTR [ebp-0x18fff790],bh
  4025ae:	outs   dx,DWORD PTR ds:[esi]
  4025af:	or     BYTE PTR [eax],al
  4025b1:	shl    DWORD PTR [edi+0x8],1
  4025b4:	add    BYTE PTR [ebp-0x6efff792],dh
  4025ba:	jbe    0x4025c4
  4025bc:	add    bl,al
  4025be:	outs   dx,BYTE PTR ds:[esi]
  4025bf:	or     BYTE PTR [eax],al
  4025c1:	mov    ds:0x4d000876,eax
  4025c6:	outs   dx,BYTE PTR ds:[esi]
  4025c7:	or     BYTE PTR [eax],al
  4025c9:	push   ecx
  4025ca:	jbe    0x4025d4
  4025cc:	add    BYTE PTR [ebx+0x6e],ah
  4025cf:	or     BYTE PTR [eax],al
  4025d1:	gs jbe 0x4025dc
  4025d4:	add    bh,ch
  4025d6:	outs   dx,BYTE PTR ds:[esi]
  4025d7:	or     BYTE PTR [eax],al
  4025d9:	xlat   BYTE PTR ds:[ebx]
  4025da:	jbe    0x4025e4
  4025dc:	add    bl,al
  4025de:	outs   dx,BYTE PTR ds:[esi]
  4025df:	or     BYTE PTR [eax],al
  4025e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e2:	jbe    0x4025ec
  4025e4:	add    BYTE PTR ds:0x86d,cl
  4025ea:	mov    al,BYTE PTR cs:[ebx]
  4025ed:	add    ah,ch
  4025ef:	mov    WORD PTR [ebx],es
  4025f1:	add    BYTE PTR [eax],bh
  4025f3:	mov    al,BYTE PTR [ebx]
  4025f5:	add    ah,al
  4025f7:	mov    al,BYTE PTR [ebx]
  4025f9:	add    ah,ah
  4025fb:	mov    al,BYTE PTR [ebx]
  4025fd:	add    BYTE PTR [eax-0x2ffffc76],dh
  402603:	mov    al,BYTE PTR [ebx]
  402605:	add    BYTE PTR [eax],al
  402607:	add    BYTE PTR [eax],al
  402609:	sbb    al,BYTE PTR [esi-0x7a47fffd]
  40260f:	add    eax,DWORD PTR [eax]
  402611:	retf   0x385
  402614:	add    ah,bl
  402616:	arpl   WORD PTR [ebx],ax
  402618:	add    dl,ch
  40261a:	xchg   BYTE PTR [ebx],al
  40261c:	add    BYTE PTR [edx+0x74000363],al
  402622:	arpl   WORD PTR [ebx],ax
  402624:	add    BYTE PTR [esp+eiz*2+0x3],al
  402628:	add    BYTE PTR [eax+0x64],dl
  40262b:	add    eax,DWORD PTR [eax]
  40262d:	test   BYTE PTR [edi-0x77f5fffd],0x3
  402634:	add    BYTE PTR [eax+ecx*4],al
  402637:	add    eax,DWORD PTR [eax]
  402639:	aam    0x87
  40263b:	add    eax,DWORD PTR [eax]
  40263d:	sbb    BYTE PTR [eax-0x77f7fffd],cl
  402643:	add    eax,DWORD PTR [eax]
  402645:	mov    BYTE PTR cs:[ebx],al
  402648:	add    BYTE PTR [edx],bl
  40264a:	mov    BYTE PTR [ebx],al
  40264c:	add    BYTE PTR [edx+0x40000387],bl
  402652:	mov    BYTE PTR [ebx],al
  402654:	add    BYTE PTR [edx+0x7],cl
  402657:	add    BYTE PTR [eax],al
  402659:	inc    eax
  40265a:	js     0x40265f
  40265c:	add    BYTE PTR [eax+0x78],bl
  40265f:	add    eax,DWORD PTR [eax]
  402661:	mov    dh,0x7a
  402663:	add    eax,DWORD PTR [eax]
  402665:	repz adc eax,0x2df30394
  40266b:	xchg   esp,eax
  40266c:	add    eax,DWORD PTR [eax]
  40266e:	add    BYTE PTR [eax],al
  402670:	repz pop ebp
  402672:	xchg   esp,eax
  402673:	add    esi,ebx
  402675:	cmp    edx,DWORD PTR [ebx+eax*1+0x3946ff3]
  40267c:	repz (bad) 
  40267e:	xchg   ebx,eax
  40267f:	add    esi,ebx
  402681:	mov    ds:0xadf30393,eax
  402686:	xchg   ebx,eax
  402687:	add    esi,ebx
  402689:	leave  
  40268a:	xchg   ebx,eax
  40268b:	add    esi,ebx
  40268d:	ret    
  40268e:	xchg   ebx,eax
  40268f:	add    esi,ebx
  402691:	add    eax,0xbf30379
  402696:	jns    0x40269b
  402698:	repz (bad) 
  40269a:	js     0x40269f
  40269c:	repz adc eax,0x8bf30379
  4026a2:	js     0x4026a7
  4026a4:	repz inc ecx
  4026a6:	jns    0x4026ab
  4026a8:	repz inc edi
  4026aa:	jns    0x4026af
  4026ac:	repz sbb DWORD PTR [ecx+0x3],edi
  4026b0:	repz das 
  4026b2:	jns    0x4026b7
  4026b4:	repz out dx,eax
  4026b6:	add    eax,DWORD PTR [eax]
  4026b8:	repz mov ebp,0x94730003
  4026be:	jbe    0x4026c3
  4026c0:	repz fiadd WORD PTR [ebx]
  4026c3:	add    BYTE PTR [ebx-0x15],dh
  4026c6:	add    eax,DWORD PTR [eax]
  4026c8:	jae    0x4026b9
  4026ca:	add    eax,DWORD PTR [eax]
  4026cc:	jae    0x402654
  4026ce:	jbe    0x4026d3
  4026d0:	repz fiadd DWORD PTR [ebx]
  4026d3:	add    BYTE PTR [eax],al
  4026d5:	add    BYTE PTR [eax],al
  4026d7:	jae    0x4026c2
  4026d9:	add    eax,DWORD PTR [eax]
  4026db:	jae    0x402705
  4026dd:	jp     0x4026e2
  4026df:	repz mov bl,0x79
  4026e2:	add    esi,ebx
  4026e4:	push   es
  4026e5:	in     eax,dx
  4026e6:	add    esi,ebx
  4026e8:	xchg   dl,bl
  4026ea:	add    esi,ebx
  4026ec:	xchg   BYTE PTR ds:0xfb06f07a,cl
  4026f2:	jns    0x4026e4
  4026f4:	push   es
  4026f5:	fild   WORD PTR [ebx]
  4026f7:	repz xchg ah,dl
  4026fa:	add    esi,ebx
  4026fc:	xchg   BYTE PTR [ebp-0x14790cfd],bh
  402702:	add    esi,ebx
  402704:	xchg   dh,bh
  402706:	add    esi,ebx
  402708:	xchg   cl,ch
  40270a:	jns    0x4026fc
  40270c:	push   es
  40270d:	out    dx,eax
  40270e:	add    esi,ebx
  402710:	xchg   ch,dh
  402712:	add    esi,ebx
  402714:	xchg   BYTE PTR ds:0x2b06f076,dh
  40271a:	jbe    0x40270c
  40271c:	push   es
  40271d:	xor    DWORD PTR [esi-0x10],esi
  402720:	push   es
  402721:	jle    0x402726
  402723:	repz xchg cl,bh
  402726:	add    esi,ebx
  402728:	xchg   dl,ch
  40272a:	add    esi,ebx
  40272c:	xchg   dl,bh
  40272e:	add    esi,ebx
  402730:	xchg   BYTE PTR [ecx+0x4],bl
  402733:	repz xchg cl,ch
  402736:	add    esi,ebx
  402738:	push   es
  402739:	ja     0x4026d0
  40273b:	add    BYTE PTR [eax],al
  40273d:	add    al,dh
  40273f:	push   es
  402740:	test   eax,0xa306f095
  402745:	xchg   ebp,eax
  402746:	lock push es
  402748:	mov    ebp,0xbf06f095
  40274d:	xchg   ebp,eax
  40274e:	lock push es
  402750:	adc    DWORD PTR [ebp-0x6a66f910],0x958706f0
  40275a:	lock push es
  40275c:	in     eax,dx
  40275d:	xchg   ecx,eax
  40275e:	lock push es
  402760:	add    bh,bl
  402762:	add    BYTE PTR ds:0x562c900,0x0
  402769:	adc    esp,DWORD PTR [ecx+0x5]
  40276c:	add    BYTE PTR ds:0xa9000561,dl
  402772:	bound  eax,QWORD PTR ds:0x582bb00
  402778:	add    BYTE PTR ds:0xa3000581,bl
  40277e:	add    BYTE PTR ds:0x6f0e900,0x0
  402785:	arpl   WORD PTR [ebx-0x747cfffb],cx
  40278b:	add    eax,0x57b4d00
  402790:	add    BYTE PTR [ebx-0x50fffa84],bl
  402796:	fs add al,0x0
  402799:	mov    ch,0x5c
  40279b:	add    al,0x0
  40279d:	mov    ch,0x64
  40279f:	add    al,0x0
  4027a1:	retf   
  4027a2:	add    BYTE PTR [eax],al
  4027a4:	add    BYTE PTR [esp+eax*1+0x0],bl
  4027a8:	fild   WORD PTR [esp+eax*1+0x0]
  4027ac:	jmp    0xe9402ea1
  4027b1:	lock push es
  4027b3:	add    BYTE PTR [edx-0x2fc1668d],dh
  4027b9:	adc    ebx,ecx
  4027bb:	dec    esp
  4027bc:	mov    edx,ebx
  4027be:	jecxz  0x4027af
  4027c0:	inc    esp
  4027c1:	and    DWORD PTR [eax+0x274f8d3d],eax
  4027c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c8:	imul   edi,ebp,0xf8644fd8
  4027ce:	clc    
  4027cf:	jb     0x4027fb
  4027d1:	mov    dl,0xb0
  4027d3:	push   ss
  4027d4:	push   ds
  4027d5:	mov    ebp,0xf2861ac5
  4027da:	inc    ecx
  4027db:	dec    esi
  4027dc:	add    BYTE PTR ds:0xacb12e20,ah
  4027e2:	cmp    bl,BYTE PTR [eax-0x740fb949]
  4027e8:	repz sbb DWORD PTR [esi],ecx
  4027eb:	repnz inc edx
  4027ed:	leave  
  4027ee:	push   es
  4027ef:	fiadd  WORD PTR [bx+di-0x4]
  4027f3:	sti    
  4027f4:	and    ecx,ebp
  4027f6:	xchg   BYTE PTR [esi+ebx*2-0x8],ch
  4027fa:	fcomp  DWORD PTR [edi+0x47]
  4027fd:	nop
  4027fe:	jmp    0xb2855bed
  402803:	jno    0x402878
  402805:	mov    ebp,DWORD PTR [eax+0x2933]
  40280b:	add    BYTE PTR [ebp*2-0x2657ee2e],al
  402812:	(bad)  
  402813:	mov    edi,0x603e8c4d
  402818:	ja     0x4027c2
  40281a:	xor    ebp,DWORD PTR [ecx]
  40281c:	les    ebp,FWORD PTR [edx+edx*8+0x11]
  402820:	sub    dl,bl
  402822:	(bad)  
  402823:	mov    edi,0x603e8b8d
  402828:	cwde   
  402829:	pop    eax
  40282a:	pop    es
  40282b:	cmc    
  40282c:	imul   eax,esi,0xffffffd3
  40282f:	adc    DWORD PTR [ebx-0x54],eax
  402832:	add    BYTE PTR [eax],al
  402834:	ror    BYTE PTR [ecx],cl
  402836:	loop   0x402859
  402838:	inc    edx
  402839:	sub    BYTE PTR [ebp-0x53],dl
  40283c:	mov    ecx,eax
  40283e:	dec    edx
  40283f:	inc    edi
  402840:	sbb    al,0x12
  402842:	cld    
  402843:	or     al,0xea
  402845:	outs   dx,DWORD PTR ds:[esi]
  402846:	mov    bh,0x38
  402848:	jg     0x40284b
  40284a:	fnsave [eax+0x1f]
  40284d:	dec    edi
  40284e:	call   0x241b3499
  402853:	mov    dh,0x19
  402855:	and    DWORD PTR [eax],ebp
  402857:	(bad)  
  402858:	repz inc esp
  40285a:	mov    esp,0x9565e265
  40285f:	mov    ebp,0x53e76fb1
  402864:	add    ebx,DWORD PTR [edx]
  402866:	sbb    al,0x5a
  402868:	icebp  
  402869:	dec    ebp
  40286a:	sub    DWORD PTR [eax+0x53],ecx
  40286d:	jo     0x4028ac
  40286f:	pushf  
  402870:	add    BYTE PTR [eax],al
  402872:	add    BYTE PTR [esi-0x4d883171],dh
  402878:	sbb    eax,0x423c95b3
  40287d:	jp     0x402808
  40287f:	and    al,0x29
  402881:	mov    edx,0xd88bad32
  402886:	(bad)  
  402888:	dec    edx
  402889:	adc    ebx,DWORD PTR [edx]
  40288b:	and    DWORD PTR [edi],ebp
  40288d:	aas    
  40288e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288f:	jmp    DWORD PTR [edx+0x2d]
  402892:	ins    BYTE PTR es:[edi],dx
  402893:	mov    ecx,0x859f9268
  402898:	(bad)  
  40289a:	jge    0x40289a
  40289c:	stos   BYTE PTR es:[edi],al
  40289d:	fimul  DWORD PTR [ebx+eiz*1-0x49]
  4028a1:	push   ebp
  4028a2:	fdiv   DWORD PTR [ebx]
  4028a4:	cmp    al,0x2a
  4028a6:	mov    ecx,0x9bf82400
  4028ab:	mov    edi,0x4dc18dd6
  4028b0:	jecxz  0x402925
  4028b2:	shl    edx,1
  4028b4:	jb     0x402849
  4028b6:	add    BYTE PTR [ebx-0x4b0233d3],dh
  4028bc:	outs   dx,DWORD PTR ds:[esi]
  4028bd:	popf   
  4028be:	adc    cl,bh
  4028c0:	dec    ebp
  4028c1:	jno    0x402892
  4028c3:	add    bl,BYTE PTR [eax+0x36]
  4028c6:	add    BYTE PTR [ecx-0x10],cl
  4028c9:	cmp    BYTE PTR [esi],ch
  4028cb:	iret   
  4028cc:	cmp    DWORD PTR [edi],esp
  4028ce:	xor    eax,0xd153493a
  4028d3:	loop   0x4028db
  4028d5:	push   edi
  4028d6:	popf   
  4028d7:	add    BYTE PTR [eax],al
  4028d9:	add    bl,dh
  4028db:	(bad)  
  4028dc:	cs scas al,BYTE PTR es:[edi]
  4028de:	imul   esp,DWORD PTR [edi],0x69
  4028e1:	popf   
  4028e2:	add    DWORD PTR [ebx-0x7cb8ef2],edi
  4028e8:	jo     0x402920
  4028ea:	repz mov al,0xe9
  4028ed:	cmp    BYTE PTR ds:0xa5c75023,al
  4028f3:	jae    0x402952
  4028f5:	xor    DWORD PTR [eax+edi*8],0xb0f36589
  4028fc:	jmp    0x6f05dc32
  402901:	popf   
  402902:	add    DWORD PTR [ebx-0x7cb8f32],edi
  402908:	jo     0x402940
  40290a:	repz mov al,0xe9
  40290d:	cmp    ch,al
  40290f:	and    ch,al
  402911:	imul   esi,DWORD PTR [esi+0x5b],0x68
  402915:	jo     0x40294b
  402917:	clc    
  402918:	jo     0x402950
  40291a:	repz mov al,0xe9
  40291d:	cmp    ch,al
  40291f:	and    cl,BYTE PTR [eax]
  402921:	cmp    al,0x6a
  402923:	or     eax,ebx
  402925:	int3   
  402926:	mov    ch,0xf7
  402928:	dec    ecx
  402929:	dec    esp
  40292a:	repz push es
  40292c:	jmp    0x7c481c34
  402931:	popf   
  402932:	lahf   
  402933:	inc    edx
  402934:	in     eax,dx
  402935:	fisub  DWORD PTR [ebx-0xc9f7709]
  40293b:	(bad)  
  40293c:	cs call 0x5d26:0x6b000000
  402944:	stos   BYTE PTR es:[edi],al
  402945:	pop    edi
  402946:	inc    edx
  402947:	int    0xec
  402949:	ret    
  40294a:	test   DWORD PTR [eax+0x2ec6f360],0x266b9a
  402954:	gs ins DWORD PTR es:[edi],dx
  402956:	loopne 0x402974
  402958:	or     cl,BYTE PTR [edx+0x1e5411b6]
  40295e:	pop    es
  40295f:	shr    BYTE PTR [esi],0x37
  402962:	(bad)  
  402964:	in     eax,dx
  402965:	jae    0x4029c0
  402967:	xor    DWORD PTR [eax],ebx
  402969:	or     edx,ebx
  40296b:	dec    esp
  40296c:	arpl   bx,dx
  40296e:	xor    eax,0xff4833a4
  402973:	push   ebp
  402974:	xor    eax,0xbaeb8556
  402979:	fidivr WORD PTR [eax+0x62e9711]
  40297f:	shr    BYTE PTR [esi+0x2e208e5a],0x5
  402986:	jge    0x40294c
  402988:	bound  edx,QWORD PTR [ebx-0x48]
  40298b:	adc    DWORD PTR [ebx+ebx*2+0x6],ebp
  40298f:	adc    BYTE PTR [ebx+0x2c0489f1],ah
  402995:	xor    DWORD PTR [edi],edi
  402997:	mov    ds:0x481218da,eax
  40299c:	jae    0x40296b
  40299e:	mov    al,ds:0x5b99fc7f
  4029a3:	jbe    0x402a15
  4029a5:	add    BYTE PTR [eax],al
  4029a7:	add    BYTE PTR [ebx],dl
  4029a9:	adc    cl,BYTE PTR [ecx-0x7e]
  4029ac:	pop    ds
  4029ad:	mov    dh,0x11
  4029af:	push   edi
  4029b0:	mov    DWORD PTR [edi],eax
  4029b2:	shr    BYTE PTR [esi+0x61208f7a],0xb5
  4029b9:	add    ah,BYTE PTR [edi]
  4029bb:	aas    
  4029bc:	es mov ecx,0x7289a11
  4029c2:	adc    BYTE PTR [ebx-0x10],al
  4029c5:	test   DWORD PTR [edi+0x7b],esi
  4029c8:	or     al,0x12
  4029ca:	dec    ecx
  4029cb:	inc    edx
  4029cc:	fidiv  WORD PTR [ebp-0x517bffef]
  4029d2:	add    al,al
  4029d4:	lds    eax,FWORD PTR [eax-0x3f54df78]
  4029da:	nop
  4029db:	inc    ebp
  4029dc:	add    BYTE PTR [edi],0xd0
  4029df:	adc    DWORD PTR [ebx],eax
  4029e1:	or     DWORD PTR [eax],eax
  4029e3:	stos   BYTE PTR es:[edi],al
  4029e4:	mov    cl,BYTE PTR [ebp+0x2e]
  4029e7:	and    al,0xe2
  4029e9:	ins    DWORD PTR es:[edi],dx
  4029ea:	dec    ebx
  4029eb:	addr16 call 0xc751fac6
  4029f1:	xor    al,BYTE PTR [eax]
  4029f3:	rol    BYTE PTR ds:0x32fffd9b,0x28
  4029fa:	mov    ebp,0xd0df3949
  4029ff:	adc    DWORD PTR [edi+0x3b],esp
  402a02:	add    al,al
  402a04:	test   DWORD PTR [eax-0x8630003],esp
  402a0a:	fs call 0xd1e1:0x85000000
  402a12:	adc    DWORD PTR [edi+0x611000ba],ebx
  402a18:	cmp    BYTE PTR [esi],bh
  402a1a:	std    
  402a1b:	ins    DWORD PTR es:[edi],dx
  402a1c:	popa   
  402a1d:	scas   eax,DWORD PTR es:[edi]
  402a1e:	ins    DWORD PTR es:[edi],dx
  402a1f:	std    
  402a20:	adc    eax,0xcaa411d2
  402a25:	add    al,al
  402a27:	inc    ebp
  402a28:	jle    0x4029b2
  402a2a:	and    BYTE PTR [edi-0x1d],al
  402a2d:	xchg   ebx,ebp
  402a2f:	leave  
  402a30:	icebp  
  402a31:	rcl    DWORD PTR [ecx],1
  402a33:	inc    esp
  402a34:	retf   
  402a35:	add    al,al
  402a37:	test   DWORD PTR [ebp-0x78],edi
  402a3a:	and    BYTE PTR [edx+esi*8],bl
  402a3d:	popf   
  402a3e:	les    edx,FWORD PTR [ecx+0x7c]
  402a41:	rcl    BYTE PTR [ecx],cl
  402a43:	dec    edi
  402a44:	lahf   
  402a45:	add    BYTE PTR [eax],dl
  402a47:	xor    BYTE PTR [esi],al
  402a49:	add    DWORD PTR [ebx+esi*8],0xffffffbf
  402a4d:	push   0x15
  402a4f:	lods   al,BYTE PTR ds:[esi]
  402a50:	jmp    0x402a8b
  402a52:	rol    DWORD PTR [edx],1
  402a54:	jae    0x4029df
  402a56:	add    BYTE PTR [ebx-0x730243d4],dh
  402a5c:	xor    dh,BYTE PTR [edi]
  402a5e:	sbb    al,0x76
  402a60:	popf   
  402a61:	mov    BYTE PTR [ebx+0x56b74d28],dh
  402a67:	dec    esp
  402a68:	xor    BYTE PTR [esi],bh
  402a6a:	fwait
  402a6b:	xchg   ebp,eax
  402a6c:	jbe    0x402a6d
  402a6e:	mov    dl,0x9c
  402a70:	shl    BYTE PTR [esi+0xd3],cl
  402a76:	add    cl,BYTE PTR [edi+0x0]
  402a79:	add    BYTE PTR [ebx],al
  402a7b:	sub    BYTE PTR [ecx],al
  402a7d:	push   ecx
  402a7e:	test   eax,0x84bf8b97
  402a83:	je     0x402a53
  402a85:	shl    edx,cl
  402a87:	mov    ?,ebp
  402a89:	jmp    esp
  402a8b:	mov    DWORD PTR [eax],0x78a3c951
  402a91:	scas   eax,DWORD PTR es:[edi]
  402a92:	xchg   esi,eax
  402a93:	hlt    
  402a94:	xor    edx,edx
  402a96:	add    dh,BYTE PTR [ebx+ecx*8+0x0]
  402a9a:	xor    ebp,DWORD PTR [ecx+ebx*4+0x71a6d388]
  402aa1:	jbe    0x402a35
  402aa3:	cdq    
  402aa4:	push   0x64
  402aa6:	sar    DWORD PTR [ebp+0x62],cl
  402aa9:	jb     0x402a3d
  402aab:	mov    ah,BYTE PTR [esi+0x74]
  402aae:	push   esi
  402aaf:	jle    0x402ad4
  402ab1:	jo     0x402b05
  402ab3:	jge    0x402b09
  402ab5:	gs push edi
  402ab7:	rcl    BYTE PTR [edi+0x6f],1
  402aba:	adc    ebp,DWORD PTR [ebp-0x7db98ddd]
  402ac0:	push   edi
  402ac1:	imul   edx,DWORD PTR [esi-0x7d],0x7466623
  402ac8:	push   edi
  402ac9:	gs aas 
  402acb:	jo     0x402b1b
  402acd:	jb     0x402aac
  402acf:	or     al,0xe9
  402ad1:	add    esi,ebx
  402ad3:	push   es
  402ad4:	test   eax,0xd90730ab
  402ad9:	stos   BYTE PTR es:[edi],al
  402ada:	add    BYTE PTR [eax],al
  402adc:	add    BYTE PTR [eax],dh
  402ade:	pop    es
  402adf:	jmp    0xef471de7
  402ae4:	xor    DWORD PTR [ebx-0x7f],0x69
  402ae8:	xor    BYTE PTR [ebx+0x7],0xe9
  402aec:	repz icebp 
  402aee:	sub    BYTE PTR [ecx-0x77],0x71
  402af2:	xchg   ebp,edi
  402af4:	push   es
  402af5:	out    dx,al
  402af6:	inc    ebx
  402af7:	and    al,0x47
  402af9:	jbe    0x402a7f
  402afb:	ins    BYTE PTR es:[edi],dx
  402afc:	push   es
  402afd:	repz push es
  402aff:	mov    ecx,0x69377313
  402b04:	xor    ebx,0xe
  402b07:	jmp    0xb95f3f37
  402b0c:	cmp    BYTE PTR [ebx+0x7],dh
  402b0f:	out    0x3,al
  402b11:	in     al,0x16
  402b13:	sbb    DWORD PTR [ebx+eax*8],esi
  402b16:	mov    gs,ecx
  402b18:	add    esi,ebx
  402b1a:	adc    DWORD PTR es:[ebx+ebp*2-0xcfc9679],eax
  402b22:	push   es
  402b23:	leave  
  402b24:	arpl   WORD PTR [ebx-0x14943e92],dx
  402b2a:	push   cs
  402b2b:	out    dx,al
  402b2c:	pop    ebx
  402b2d:	adc    DWORD PTR [esi-0x6a],0x53
  402b31:	arpl   WORD PTR [edi],cx
  402b33:	loope  0x402b38
  402b35:	repz push cs
  402b37:	jmp    0xf1421e47
  402b3c:	add    esi,ebx
  402b3e:	push   es
  402b3f:	jmp    0x402b47
  402b44:	repz push es
  402b46:	add    cl,ch
  402b48:	lock push es
  402b4a:	add    cl,ch
  402b4c:	lock push es
  402b4e:	add    cl,bl
  402b50:	jmp    0x402b97
  402b52:	add    ch,ah
  402b54:	lock add al,BYTE PTR [eax]
  402b57:	loope  0x402b49
  402b59:	add    al,BYTE PTR [eax]
  402b5b:	sbb    ebp,esi
  402b5d:	inc    ebp
  402b5e:	add    ch,ch
  402b60:	lock add eax,DWORD PTR [eax]
  402b63:	f2xm1  
  402b65:	push   cs
  402b66:	add    cl,bh
  402b68:	out    dx,al
  402b69:	inc    ebp
  402b6a:	add    ch,ah
  402b6c:	lock add BYTE PTR [eax],al
  402b6f:	leave  
  402b70:	lock es add cl,bl
  402b74:	test   BYTE PTR [ebp+0x0],0xed
  402b78:	lock add al,BYTE PTR [eax]
  402b7b:	stc    
  402b7c:	lock idiv bh
  402b7f:	fsub   st,st(7)
  402b81:	inc    ebp
  402b82:	add    cl,dh
  402b84:	lock idiv bh
  402b87:	enter  0x26f0,0x0
  402b8b:	(bad)  
  402b8d:	inc    ebp
  402b8e:	add    cl,dh
  402b90:	lock idiv bh
  402b93:	push   0xf90086f7
  402b98:	test   DWORD PTR [ebp+0x0],0x26f0e1
  402b9f:	imul   ebp,edi,0xffd90106
  402ba5:	inc    ebp
  402ba6:	add    BYTE PTR [ecx],cl
  402ba8:	add    BYTE PTR [eax],al
  402baa:	add    bh,ch
  402bac:	xchg   BYTE PTR [eax],al
  402bae:	jmp    0x402ba7
  402bb0:	push   es
  402bb1:	add    al,0xf9
  402bb3:	out    0x45,eax
  402bb5:	add    cl,cl
  402bb7:	lock add al,0x1
  402bba:	jmp    0x402bab
  402bbc:	push   es
  402bbd:	adc    cl,bh
  402bbf:	out    dx,eax
  402bc0:	inc    ebx
  402bc1:	add    BYTE PTR [eax],al
  402bc3:	fwait
  402bc4:	sub    dh,BYTE PTR [edx]
  402bc6:	xchg   DWORD PTR cs:[eax+eax*1],eax
  402bca:	add    BYTE PTR [edx+0x1],bh
  402bcd:	add    BYTE PTR [eax],al
  402bcf:	retf   0x500c
  402bd2:	add    dl,cl
  402bd4:	or     al,0x10
  402bd6:	add    BYTE PTR [esi-0x57ff8cf4],ah
  402bdc:	add    DWORD PTR [edi],ebx
  402bde:	add    BYTE PTR [edx-0x75ff8ff4],cl
  402be4:	or     al,0x30
  402be6:	add    BYTE PTR [edx-0x55ff3ff5],bl
  402bec:	add    DWORD PTR [edx],ecx
  402bee:	add    BYTE PTR [edx-0x75ff9ff4],cl
  402bf4:	or     al,0x20
  402bf6:	add    BYTE PTR [edx+0xb],bl
  402bf9:	mov    al,ds:0xc5a00
  402bfe:	add    BYTE PTR [edx+0xc],cl
  402c01:	add    BYTE PTR [eax],0x4a
  402c04:	or     al,0x40
  402c06:	add    BYTE PTR [edx+0xb],bl
  402c09:	loopne 0x402c0b
  402c0b:	sub    al,BYTE PTR [ecx]
  402c0d:	push   es
  402c0e:	add    BYTE PTR [eax],al
  402c10:	add    BYTE PTR [eax],al
  402c12:	dec    edx
  402c13:	or     al,0x58
  402c15:	add    BYTE PTR [edx+0xc],cl
  402c18:	sbb    BYTE PTR [eax],al
  402c1a:	sbb    cl,BYTE PTR [ebx]
  402c1c:	nop
  402c1d:	add    BYTE PTR [ecx],ch
  402c1f:	add    DWORD PTR [ebx],edi
  402c21:	add    BYTE PTR [edx],cl
  402c23:	or     al,0x78
  402c25:	add    BYTE PTR [edx],cl
  402c27:	or     al,0x38
  402c29:	add    BYTE PTR [edx],bl
  402c2b:	or     edx,eax
  402c2d:	add    BYTE PTR [ebx],ch
  402c2f:	add    DWORD PTR [ecx],edx
  402c31:	add    BYTE PTR [edx],cl
  402c33:	or     al,0x68
  402c35:	add    BYTE PTR [edx],cl
  402c37:	or     al,0x28
  402c39:	add    dl,bl
  402c3b:	or     dh,BYTE PTR [eax+0xbedf300]
  402c41:	or     bl,dh
  402c43:	in     eax,dx
  402c44:	or     ecx,DWORD PTR [eax+0x480bedf3]
  402c4a:	repz in eax,dx
  402c4c:	or     al,0xf0
  402c4e:	repz mov ebp,0xedf30406
  402c54:	or     edx,DWORD PTR [ebx+esi*8-0x13]
  402c58:	or     edx,DWORD PTR [ebx+esi*8]
  402c5b:	ror    BYTE PTR [ebx],cl
  402c5d:	jecxz  0x402c52
  402c5f:	fadd   QWORD PTR [ebx+ebp*1]
  402c62:	repz in eax,dx
  402c64:	or     esi,DWORD PTR [ebx+esi*8-0x13]
  402c68:	or     esi,DWORD PTR [ebx+esi*8]
  402c6b:	in     eax,dx
  402c6c:	or     cl,al
  402c6e:	repz mov esi,0xedf30d04
  402c74:	or     esp,DWORD PTR [eax+eax*1+0x0]
  402c78:	add    bl,dh
  402c7a:	in     eax,dx
  402c7b:	or     esp,DWORD PTR [ebx+esi*8]
  402c7e:	in     eax,dx
  402c7f:	or     ch,BYTE PTR [eax+0x40bedf3]
  402c85:	repz in eax,dx
  402c87:	or     eax,DWORD PTR [ebx+esi*8-0xcbbf413]
  402c8e:	in     eax,dx
  402c8f:	or     ch,al
  402c91:	repz mov ebp,0xedf30804
  402c97:	or     ebx,DWORD PTR [ebx+esi*8-0x13]
  402c9b:	or     ebx,DWORD PTR [ebx+esi*8]
  402c9e:	in     eax,dx
  402c9f:	or     bl,BYTE PTR [eax+0x5304d9f3]
  402ca5:	repz in eax,dx
  402ca7:	or     edi,DWORD PTR [ebx+esi*8-0x13]
  402cab:	or     edi,DWORD PTR [ebx+esi*8]
  402cae:	in     eax,dx
  402caf:	or     bl,al
  402cb1:	repz mov ebx,0xedf31704
  402cb7:	or     ebp,DWORD PTR [ebx+esi*8+0x6]
  402cbb:	jmp    0xe9474bcb
  402cc0:	or     ch,BYTE PTR [ebx-0x10f416f9]
  402cc6:	push   es
  402cc7:	jmp    0xe94793d7
  402ccc:	or     edi,DWORD PTR [edi]
  402cce:	pop    es
  402ccf:	jmp    0xd947f7de
  402cd4:	add    al,0xf0
  402cd6:	push   es
  402cd7:	jmp    0xe9474de7
  402cdc:	or     eax,DWORD PTR [eax]
  402cde:	add    BYTE PTR [eax],al
  402ce0:	add    DWORD PTR [edi],eax
  402ce2:	hlt    
  402ce3:	or     edx,DWORD PTR [eax+0x7]
  402ce6:	cli    
  402ce7:	add    al,0xd0
  402ce9:	push   es
  402cea:	jmp    0xe9474dfa
  402cef:	or     eax,ecx
  402cf1:	push   es
  402cf2:	jmp    0xd847dc01
  402cf7:	add    al,0xe8
  402cf9:	push   es
  402cfa:	jmp    0xe9473e0a
  402cff:	or     edx,DWORD PTR [ecx]
  402d01:	pop    es
  402d02:	jmp    0xe947bc11
  402d07:	or     esi,ecx
  402d09:	push   es
  402d0a:	jmp    0xe9479e1a
  402d0f:	or     esi,DWORD PTR [ecx+0x4f0ae906]
  402d15:	pop    es
  402d16:	fld    DWORD PTR [esp+esi*8]
  402d19:	push   es
  402d1a:	jmp    0xe946c62a
  402d1f:	or     ecx,DWORD PTR [ecx]
  402d21:	pop    es
  402d22:	jmp    0xfd47ac31
  402d27:	add    al,0xb0
  402d29:	push   es
  402d2a:	jmp    0xe946c63a
  402d2f:	or     ecx,ecx
  402d31:	push   es
  402d32:	jmp    0x474c41
  402d37:	fcomi  st,st(7)
  402d39:	stc    
  402d3a:	(bad)  
  402d3b:	call   0xe9408e28
  402d40:	clc    
  402d41:	and    BYTE PTR [eax],al
  402d43:	jmp    0xf9402d48
  402d48:	call   0xe900:0xe8e900
  402d4f:	call   0xf9292dd4
  402d54:	inc    eax
  402d55:	add    cl,ch
  402d57:	stc    
  402d58:	fiadd  DWORD PTR [eax]
  402d5a:	fincstp 
  402d5c:	or     eax,DWORD PTR [eax]
  402d5e:	jmp    0xe9406a4b
  402d63:	clc    
  402d64:	cld    
  402d65:	jmp    FWORD PTR [eax]
  402d67:	test   DWORD PTR [esi],0x19f1fa00
  402d6d:	add    cl,ch
  402d6f:	call   0xf9292dd0
  402d74:	sbb    al,0x0
  402d76:	jmp    0xd840f072
  402d7b:	icebp  
  402d7c:	add    eax,0x6ce8e900
  402d81:	add    cl,ch
  402d83:	clc    
  402d84:	sub    al,0x0
  402d86:	jmp    0xe940d082
  402d8b:	call   0xe9292d9c
  402d90:	mov    WORD PTR [eax],es
  402d92:	jmp    0xe9407a8f
  402d97:	mul    edx
  402d99:	add    cl,bl
  402d9b:	icebp  
  402d9c:	(bad)  
  402d9d:	(bad)  
  402d9e:	call   0xe940628b
  402da3:	clc    
  402da4:	hlt    
  402da5:	(bad)  
  402da6:	call   0xfd40a0a2
  402dab:	add    BYTE PTR [eax],al
  402dad:	add    cl,dh
  402daf:	imul   eax,DWORD PTR [eax],0x54e8e9
  402db5:	add    BYTE PTR [edx],bl
  402db7:	add    DWORD PTR [esi],edi
  402db9:	add    BYTE PTR [edx],bl
  402dbb:	add    bl,ah
  402dbd:	add    BYTE PTR [eax],bl
  402dbf:	or     BYTE PTR [ebx],bl
  402dc1:	add    BYTE PTR [edx],cl
  402dc3:	add    DWORD PTR [esi+0x0],ebp
  402dc6:	fiadd  DWORD PTR [eax]
  402dc8:	cs add dl,bl
  402dcb:	add    edi,DWORD PTR [eax+eax*1+0xe00ca]
  402dd2:	retf   0x8e00
  402dd5:	add    dl,bl
  402dd7:	add    BYTE PTR [esi+0x0],cl
  402dda:	fiadd  DWORD PTR [ebx]
  402ddc:	cld    
  402ddd:	add    BYTE PTR [edx+0x9],ch
  402de0:	add    BYTE PTR [eax],al
  402de2:	retf   0x5100
  402de5:	add    BYTE PTR [edx-0x60ffef00],bl
  402deb:	add    BYTE PTR [ebx+0x1f099800],al
  402df1:	add    BYTE PTR [edx-0x65ff8f00],cl
  402df7:	add    BYTE PTR [ecx],dh
  402df9:	add    BYTE PTR [edx-0x65ff3dfd],bl
  402dff:	or     DWORD PTR [edx],ecx
  402e01:	add    BYTE PTR [edx+0x5a006100],cl
  402e07:	add    BYTE PTR [ecx],ah
  402e09:	add    BYTE PTR [edx+0x3],bl
  402e0c:	mov    ds:0x1004a00,al
  402e11:	add    BYTE PTR [eax],al
  402e13:	add    BYTE PTR [eax],al
  402e15:	dec    edx
  402e16:	add    BYTE PTR [ecx+0x41005a00],al
  402e1c:	add    BYTE PTR [edx+0x3],bl
  402e1f:	loop   0x402e21
  402e21:	sbb    cl,BYTE PTR [ecx]
  402e23:	push   es
  402e24:	add    BYTE PTR [edx+0x0],cl
  402e27:	pop    ecx
  402e28:	add    BYTE PTR [edx],bl
  402e2a:	add    BYTE PTR [ecx],bl
  402e2c:	add    BYTE PTR [edx],bl
  402e2e:	add    edx,DWORD PTR [edx+0x2d0f300]
  402e34:	cmp    esi,ebx
  402e36:	fisttp QWORD PTR [ebx]
  402e38:	jns    0x402e2d
  402e3a:	fisttp QWORD PTR [ebx]
  402e3c:	cmp    ebx,esi
  402e3e:	fisttp QWORD PTR [edx+edx*8]
  402e41:	repz scas al,BYTE PTR es:[edi]
  402e43:	add    dl,BYTE PTR [ecx]
  402e45:	repz fisttp QWORD PTR [ebx]
  402e48:	imul   esi,ebx,0xf3290bdd
  402e4e:	fisttp QWORD PTR [edx+esi*4]
  402e51:	repz fisttp QWORD PTR [ebx]
  402e54:	or     ebx,esi
  402e56:	fisttp QWORD PTR [ebx]
  402e58:	mov    ebx,esi
  402e5a:	fisttp QWORD PTR [ebx]
  402e5c:	dec    ecx
  402e5d:	repz fisttp QWORD PTR [edx+esi*8]
  402e61:	rep lods eax,DWORD PTR ds:[esi]
  402e63:	add    al,BYTE PTR [ebx+esi*8]
  402e66:	fisttp QWORD PTR [ebx]
  402e68:	push   ebp
  402e69:	repz fisttp QWORD PTR [ebx]
  402e6c:	adc    eax,0x20bcdf3
  402e71:	repnz rol BYTE PTR [eax],1
  402e74:	sub    esi,ebx
  402e76:	fisttp QWORD PTR [ebx]
  402e78:	jne    0x402e7a
  402e7a:	add    BYTE PTR [eax],al
  402e7c:	repz fisttp QWORD PTR [ebx]
  402e7f:	xor    eax,0xca0addf3
  402e84:	repz scas al,BYTE PTR es:[edi]
  402e86:	add    BYTE PTR ds:0x650bddf3,cl
  402e8c:	repz fisttp QWORD PTR [ebx]
  402e8f:	and    eax,0xaa0addf3
  402e94:	repz fisttp QWORD PTR [ebx]
  402e97:	add    eax,0x850bddf3
  402e9c:	repz fisttp QWORD PTR [ebx]
  402e9f:	inc    ebp
  402ea0:	repz fisttp QWORD PTR [edx]
  402ea3:	jmp    0xddf3:0x800adf3
  402eaa:	or     ebx,DWORD PTR [ebp-0xd]
  402ead:	push   es
  402eae:	jmp    0xe94734be
  402eb3:	or     bh,BYTE PTR [ecx+0x6]
  402eb6:	std    
  402eb7:	add    al,al
  402eb9:	push   es
  402eba:	jmp    0xe946bcca
  402ebf:	or     eax,esi
  402ec1:	push   es
  402ec2:	jmp    0xdb4647d1
  402ec7:	add    ah,bl
  402ec9:	push   es
  402eca:	jmp    0xe9478cda
  402ecf:	or     edx,DWORD PTR [esi]
  402ed1:	pop    es
  402ed2:	jmp    0xe947c7e1
  402ed7:	or     esp,esi
  402ed9:	push   es
  402eda:	jmp    0xe947acea
  402edf:	or     eax,DWORD PTR [eax]
  402ee1:	add    BYTE PTR [eax],al
  402ee3:	ss pop es
  402ee5:	jmp    0xd947e7f4
  402eea:	add    al,dh
  402eec:	push   es
  402eed:	jmp    0xe9476efd
  402ef2:	or     eax,DWORD PTR [eax]
  402ef4:	pop    es
  402ef5:	hlt    
  402ef6:	or     esi,DWORD PTR [eax-0x2fff05f9]
  402efc:	push   es
  402efd:	jmp    0xe9472f0d
  402f02:	or     eax,eax
  402f04:	push   es
  402f05:	jmp    0xd847e414
  402f0a:	add    al,ch
  402f0c:	push   es
  402f0d:	jmp    0xe946ff1d
  402f12:	or     edx,DWORD PTR [eax]
  402f14:	pop    es
  402f15:	jmp    0xe947c424
  402f1a:	or     esi,eax
  402f1c:	push   es
  402f1d:	jmp    0xe9479f2d
  402f22:	or     esi,DWORD PTR [eax+0x550ae906]
  402f28:	pop    es
  402f29:	add    cl,bl
  402f2b:	repz or DWORD PTR [eax],eax
  402f2e:	jmp    0xe9405d2b
  402f33:	clc    
  402f34:	in     eax,dx
  402f35:	(bad)  
  402f36:	call   0xfd40a824
  402f3b:	repz inc ebp
  402f3d:	add    cl,ch
  402f3f:	clc    
  402f40:	dec    ebp
  402f41:	add    cl,ch
  402f43:	clc    
  402f44:	or     eax,0xe900
  402f49:	add    cl,ch
  402f4b:	mov    eax,0xf5f3db00
  402f50:	(bad)  
  402f51:	call   0xe9408d4e
  402f56:	clc    
  402f57:	sbb    eax,0x98e9e900
  402f5c:	add    cl,ch
  402f5e:	call   0xf9292f60
  402f63:	jge    0x402f65
  402f65:	jmp    0xe9406d62
  402f6a:	jmp    0xf4193047
  402f6f:	or     eax,DWORD PTR [eax]
  402f71:	jmp    0xe940696e
  402f76:	clc    
  402f77:	stc    
  402f78:	jmp    FWORD PTR [eax]
  402f7a:	out    dx,eax
  402f7b:	push   es
  402f7c:	add    dl,bh
  402f7e:	xchg   ebp,eax
  402f7f:	adc    al,0x0
  402f81:	jmp    0xe940897e
  402f86:	clc    
  402f87:	sbb    DWORD PTR [eax],eax
  402f89:	jmp    0xd840f07d
  402f8e:	jne    0x402f90
  402f90:	add    cl,ch
  402f92:	clc    
  402f93:	imul   eax,DWORD PTR [eax],0x29f8e9
  402f99:	jmp    0xe940d08d
  402f9e:	call   0xf9292fac
  402fa3:	mov    DWORD PTR [eax],eax
  402fa5:	add    BYTE PTR [edx-0x3],bl
  402fa8:	inc    esi
  402fa9:	add    BYTE PTR [edx+0x2],cl
  402fac:	out    dx,al
  402fad:	add    BYTE PTR [eax],al
  402faf:	add    BYTE PTR [eax],al
  402fb1:	sbb    dl,al
  402fb3:	or     BYTE PTR [eax],al
  402fb5:	sbb    bh,ch
  402fb7:	pop    esi
  402fb8:	add    BYTE PTR [edx],bl
  402fba:	std    
  402fbb:	push   ds
  402fbc:	add    BYTE PTR [edx],cl
  402fbe:	add    bl,BYTE PTR [esi+0x62d01600]
  402fc4:	add    BYTE PTR [edx],bl
  402fc6:	std    
  402fc7:	jle    0x402fc9
  402fc9:	sbb    bh,ch
  402fcb:	add    BYTE PTR ds:[edx],cl
  402fce:	add    bl,dh
  402fd0:	add    BYTE PTR [eax],bl
  402fd2:	rcr    BYTE PTR [edx],1
  402fd4:	add    dl,bl
  402fd6:	cld    
  402fd7:	outs   dx,BYTE PTR ds:[esi]
  402fd8:	add    dl,bl
  402fda:	cld    
  402fdb:	cs add dl,cl
  402fde:	add    edi,DWORD PTR [esi+0xefcca00]
  402fe4:	add    dl,bl
  402fe6:	cld    
  402fe7:	mov    es,WORD PTR [eax]
  402fe9:	(bad)  
  402feb:	dec    esi
  402fec:	add    dl,cl
  402fee:	add    edi,esi
  402ff0:	add    BYTE PTR [edx-0x2f],ch
  402ff3:	(bad)  
  402ff4:	call   FWORD PTR [edx-0x65ffb004]
  402ffa:	cld    
  402ffb:	verr   WORD PTR [esi-0x67ff8d04]
  403002:	rcr    DWORD PTR [esi],1
  403004:	add    BYTE PTR [edx-0x65ff9004],bl
  40300a:	cld    
  40300b:	das    
  40300c:	add    BYTE PTR [edx-0x65ff3efd],cl
  403012:	ror    DWORD PTR [ecx],1
  403014:	add    BYTE PTR [eax],al
  403016:	add    BYTE PTR [eax],al
  403018:	pop    edx
  403019:	cld    
  40301a:	pop    edi
  40301b:	add    BYTE PTR [edx-0x4],bl
  40301e:	pop    ds
  40301f:	add    BYTE PTR [edx+0x3],cl
  403022:	mov    eax,ds:0xbddf300
  403027:	add    bl,dh
  403029:	fisttp QWORD PTR [ebx]
  40302b:	xor    bl,0xdd
  40302e:	or     eax,DWORD PTR [eax-0xd]
  403031:	fisttp QWORD PTR [ecx+eiz*8]
  403034:	rep lods eax,DWORD PTR ds:[esi]
  403036:	inc    BYTE PTR ds:0x580bddf3
  40303c:	repz fisttp QWORD PTR [ebx]
  40303f:	sbb    bl,dh
  403041:	fisttp QWORD PTR [ecx+edx*4]
  403044:	repz int3 
  403046:	(bad)  
  403047:	cmp    dh,bl
  403049:	fisttp QWORD PTR [ebx]
  40304b:	js     0x403040
  40304d:	fisttp QWORD PTR [ebx]
  40304f:	cmp    bl,dh
  403051:	fisttp QWORD PTR [ecx+edx*8]
  403054:	repz scas al,BYTE PTR es:[edi]
  403056:	(bad)  
  403057:	adc    bl,dh
  403059:	fisttp QWORD PTR [ebx]
  40305b:	push   0x280bddf3
  403060:	repz fisttp QWORD PTR [ecx+esi*4]
  403064:	repz fisttp QWORD PTR [ebx]
  403067:	or     bl,dh
  403069:	fisttp QWORD PTR [ebx]
  40306b:	mov    bl,dh
  40306d:	fisttp QWORD PTR [ebx]
  40306f:	dec    eax
  403070:	repz fisttp QWORD PTR [ecx+esi*8]
  403074:	rep lods eax,DWORD PTR ds:[esi]
  403076:	inc    BYTE PTR [ebx]
  403078:	repz fisttp QWORD PTR [ebx]
  40307b:	push   esp
  40307c:	add    BYTE PTR [eax],al
  40307e:	add    bl,dh
  403080:	fisttp QWORD PTR [ebx]
  403082:	adc    al,0xf3
  403084:	fimul  DWORD PTR [ebx]
  403086:	jecxz  0x40307b
  403088:	int3   
  403089:	cld    
  40308a:	sub    dh,bl
  40308c:	fisttp QWORD PTR [ebx]
  40308e:	je     0x403083
  403090:	fisttp QWORD PTR [ebx]
  403092:	xor    al,0xf3
  403094:	fisttp QWORD PTR [edx]
  403096:	leave  
  403097:	repz scas al,BYTE PTR es:[edi]
  403099:	cld    
  40309a:	or     al,0xf3
  40309c:	fisttp QWORD PTR [ebx]
  40309e:	fs repz push es
  4030a1:	jmp    0xe94747b1
  4030a6:	or     cl,BYTE PTR [edx-0x8f416fa]
  4030ac:	push   es
  4030ad:	jmp    0xe9469fbd
  4030b2:	or     esi,DWORD PTR [edi+0x4a0ae906]
  4030b8:	push   es
  4030b9:	frndint 
  4030bb:	hlt    
  4030bc:	push   es
  4030bd:	jmp    0xe946f7cd
  4030c2:	or     edi,edi
  4030c4:	push   es
  4030c5:	jmp    0xfd46aad4
  4030ca:	cld    
  4030cb:	mov    eax,ds:0x870be906
  4030d0:	push   es
  4030d1:	jmp    0xe946efe1
  4030d6:	or     bl,BYTE PTR [edx]
  4030d8:	push   es
  4030d9:	(bad)  
  4030db:	add    eax,0x570be907
  4030e0:	pop    es
  4030e1:	jmp    0x4030f1
  4030e6:	sysret 
  4030e8:	jmp    0xe947caf7
  4030ed:	or     edi,edi
  4030ef:	push   es
  4030f0:	jmp    0xe947a800
  4030f5:	or     ebp,DWORD PTR [edi]
  4030f7:	pop    es
  4030f8:	jmp    0xd947eb07
  4030fd:	cld    
  4030fe:	icebp  
  4030ff:	push   es
  403100:	jmp    0xe9477210
  403105:	or     eax,DWORD PTR [ecx]
  403107:	pop    es
  403108:	hlt    
  403109:	or     edx,DWORD PTR [eax+0x7]
  40310c:	cli    
  40310d:	cld    
  40310e:	rol    DWORD PTR [esi],1
  403110:	jmp    0xe9473220
  403115:	or     eax,ecx
  403117:	push   es
  403118:	jmp    0x47df27
  40311d:	fsubr  DWORD PTR [edi+0x1]
  403120:	add    cl,ch
  403122:	clc    
  403123:	push   0x28e8e900
  403128:	add    cl,ch
  40312a:	jmp    0xf92931d2
  40312f:	or     BYTE PTR [eax],al
  403131:	jmp    0xe940ba2e
  403136:	call   0xea293183
  40313b:	jecxz  0x40313d
  40313d:	fldcw  WORD PTR [edi]
  40313f:	add    eax,0x30f8e900
  403144:	add    cl,ch
  403146:	call   0x129313b
  40314b:	add    BYTE PTR [eax],al
  40314d:	jmp    0x103d31c5
  403152:	dec    ecx
  403153:	add    cl,ch
  403155:	clc    
  403156:	push   eax
  403157:	add    cl,ch
  403159:	call   0xea29316e
  40315e:	mov    bl,0x0
  403160:	fucomi st,st(7)
  403162:	clc    
  403163:	(bad)  
  403164:	call   0xe9409261
  403169:	call   0xea29318e
  40316e:	xchg   ebx,eax
  40316f:	add    cl,ch
  403171:	clc    
  403172:	add    BYTE PTR [eax],al
  403174:	jmp    0xe940b271
  403179:	call   0xea2931be
  40317e:	rol    DWORD PTR [eax],cl
  403180:	fldcw  WORD PTR [edi-0x716fffe]
  403186:	xor    al,0x0
  403188:	jmp    0x29402525
  40318d:	xchg   edi,eax
  40318e:	int    0xff
  403190:	cli    
  403191:	stc    
  403192:	sbb    DWORD PTR [eax],eax
  403194:	jmp    0x408521
  403199:	mov    dl,cl
  40319b:	xor    eax,0xccca8a00
  4031a0:	add    BYTE PTR [ebx+0x0],cl
  4031a3:	ltr    WORD PTR [edx-0x2f]
  4031a7:	add    BYTE PTR gs:[edx-0x2f],cl
  4031ab:	and    eax,0xacca4a00
  4031b0:	add    BYTE PTR [eax],al
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	pop    edx
  4031b5:	rol    DWORD PTR ds:0x85d15a00,1
  4031bb:	add    BYTE PTR [edx-0x2f],cl
  4031be:	inc    ebp
  4031bf:	add    BYTE PTR [edx-0x36],cl
  4031c2:	in     al,dx
  4031c3:	add    BYTE PTR [edx+0x0],cl
  4031c6:	or     DWORD PTR [eax],eax
  4031c8:	sbb    dl,cl
  4031ca:	pop    ebp
  4031cb:	add    BYTE PTR [edx],cl
  4031cd:	rcr    DWORD PTR ds:0x9cca0a00,1
  4031d3:	add    BYTE PTR [esi],cl
  4031d5:	add    BYTE PTR [ebx+0x0],ah
  4031d8:	sbb    dl,cl
  4031da:	jge    0x4031dc
  4031dc:	or     dl,cl
  4031de:	cmp    eax,0xdcca0a00
  4031e3:	add    al,cl
  4031e5:	add    DWORD PTR [ebx],ebx
  4031e7:	add    dl,bl
  4031e9:	shr    BYTE PTR [ebp+0x0],1
  4031ec:	retf   0x2dd0
  4031ef:	add    dl,cl
  4031f1:	retf   
  4031f2:	mov    esp,0xdd0da00
  4031f7:	add    dl,bl
  4031f9:	ror    BYTE PTR [ebp+0x4dd0ca00],1
  4031ff:	add    dl,cl
  403201:	retf   
  403202:	cld    
  403203:	add    BYTE PTR [edx+0x1],bh
  403206:	add    BYTE PTR [eax],al
  403208:	call   0x10d0:0x8a0050d0
  40320f:	add    BYTE PTR [edi-0xcff7d30],bl
  403215:	iret   
  403216:	or     bl,BYTE PTR [edi]
  403218:	add    BYTE PTR [eax],al
  40321a:	add    bl,dh
  40321c:	(bad)  
  40321e:	jo     0x403213
  403220:	(bad)  
  403222:	xor    bl,dh
  403224:	(bad)  
  403226:	ret    0xadf3
  403229:	or     cl,BYTE PTR [edx]
  40322b:	repz (bad) 
  40322e:	pusha  
  40322f:	repz (bad) 
  403232:	and    bl,dh
  403234:	(bad)  
  403236:	mov    ds:0xfbddf3,al
  40323b:	repz (bad) 
  40323e:	xor    bl,0xdd
  403241:	sti    
  403242:	inc    eax
  403243:	repz (bad) 
  403246:	loop   0x40323b
  403248:	lods   eax,DWORD PTR ds:[esi]
  403249:	or     al,BYTE PTR [esi]
  40324b:	repz (bad) 
  40324e:	pop    eax
  40324f:	repz (bad) 
  403252:	sbb    bl,dh
  403254:	(bad)  
  403256:	xchg   edx,eax
  403257:	repz ror BYTE PTR [edx],1
  40325a:	cmp    esi,ebx
  40325c:	(bad)  
  40325e:	js     0x403253
  403260:	(bad)  
  403262:	cmp    bl,dh
  403264:	(bad)  
  403266:	shl    bl,cl
  403268:	scas   al,BYTE PTR es:[edi]
  403269:	or     dl,BYTE PTR [ecx]
  40326b:	repz (bad) 
  40326e:	push   0x28fbddf3
  403273:	repz (bad) 
  403276:	mov    dl,0xf3
  403278:	(bad)  
  40327a:	or     bl,dh
  40327c:	(bad)  
  40327e:	mov    BYTE PTR [eax],al
  403280:	add    BYTE PTR [eax],al
  403282:	repz (bad) 
  403285:	dec    eax
  403286:	repz (bad) 
  403289:	repnz rep lods eax,DWORD PTR ds:[esi]
  40328c:	or     al,BYTE PTR [ebx+esi*8]
  40328f:	(bad)  
  403291:	push   esp
  403292:	repz push es
  403294:	jmp    0xf9473294
  403299:	sti    
  40329a:	repnz add eax,0x6d808fa
  4032a0:	jmp    0xe9473aa0
  4032a5:	sti    
  4032a6:	mov    edi,0x39fae906
  4032ab:	push   es
  4032ac:	fmul   DWORD PTR [eax]
  4032ae:	test   BYTE PTR [esi],0xe9
  4032b1:	sti    
  4032b2:	xlat   BYTE PTR ds:[ebx]
  4032b3:	push   es
  4032b4:	jmp    0xe94742b4
  4032b9:	cli    
  4032ba:	cdq    
  4032bb:	push   es
  4032bc:	jmp    0xe94722bc
  4032c1:	sti    
  4032c2:	ja     0x4032ca
  4032c4:	jmp    0xe946e2c4
  4032c9:	cli    
  4032ca:	sbb    DWORD PTR [esi],eax
  4032cc:	(bad)  [eax]
  4032ce:	sti    
  4032cf:	push   es
  4032d0:	jmp    0xe946f2d0
  4032d5:	sti    
  4032d6:	test   DWORD PTR [esi],0x669fae9
  4032dc:	std    
  4032dd:	or     BYTE PTR [eax+0x7ffbe906],ah
  4032e3:	push   es
  4032e4:	jmp    0x4033e4
  4032e9:	mov    bh,0x6
  4032eb:	jmp    0xdb47fcea
  4032f0:	or     ah,bh
  4032f2:	push   es
  4032f3:	jmp    0xe94782f3
  4032f8:	sti    
  4032f9:	pop    es
  4032fa:	pop    es
  4032fb:	jmp    0xe947bcfa
  403300:	sti    
  403301:	test   DWORD PTR [esi],0x76ffbe9
  403307:	jmp    0xe9475b07
  40330c:	cli    
  40330d:	test   eax,0xfbd90007
  403312:	add    eax,0x3598e900
  403317:	add    cl,ch
  403319:	cwde   
  40331a:	cmc    
  40331b:	push   ebx
  40331d:	mov    ch,al
  40331f:	add    dl,bh
  403321:	sti    
  403322:	and    eax,0x5578e900
  403327:	add    cl,ch
  403329:	js     0x403340
  40332b:	add    cl,ch
  40332d:	imul   eax,ecx,0xfdfbd800
  403333:	(bad)  
  403334:	call   0xe9409891
  403339:	pop    eax
  40333a:	and    eax,0xa149e900
  40333f:	add    cl,ch
  403341:	dec    eax
  403342:	add    eax,0x8538e900
  403347:	add    cl,ch
  403349:	cmp    BYTE PTR [ebp+0x0],al
  40334c:	jmp    0x29403351
  403351:	loope  0x403353
  403353:	fsincos 
  403355:	add    DWORD PTR [eax],eax
  403357:	jmp    0xe9406074
  40335c:	sbb    ch,ch
  40335e:	(bad)  
  40335f:	call   0xfd40a46d
  403364:	sti    
  403365:	inc    ebp
  403366:	add    cl,ch
  403368:	clc    
  403369:	dec    esp
  40336a:	add    cl,ch
  40336c:	clc    
  40336d:	or     al,0x0
  40336f:	jmp    0xdb40e45d
  403374:	sti    
  403375:	cmc    
  403376:	(bad)  
  403377:	call   0xe9409054
  40337c:	fcomp  DWORD PTR [eax+eax*1]
  40337f:	jmp    0xe940c44d
  403384:	enter  0xfffc,0xe8
  403388:	mov    eax,0xca00007c
  40338d:	int    0x4a
  40338f:	add    BYTE PTR [edx-0x35ff0934],bl
  403395:	inc    BYTE PTR [eax+eax*1]
  403398:	mov    cl,ch
  40339a:	push   esi
  40339b:	add    BYTE PTR [edx-0x25ffe933],cl
  4033a1:	retf   0xffff
  4033a4:	mov    DWORD PTR [eax],eax
  4033a6:	xor    eax,DWORD PTR [eax]
  4033a8:	mov    cl,ch
  4033aa:	jbe    0x4033ac
  4033ac:	mov    cl,ch
  4033ae:	add    BYTE PTR ss:[edx-0x36],bl
  4033b2:	into   
  4033b3:	add    BYTE PTR [eax],al
  4033b5:	add    BYTE PTR [eax],al
  4033b7:	dec    ebx
  4033b8:	add    BYTE PTR [edi],cl
  4033ba:	add    BYTE PTR [edx-0x33],cl
  4033bd:	data16 add BYTE PTR [edx-0x33],cl
  4033c1:	add    BYTE PTR es:[edx-0x36],bl
  4033c5:	scas   al,BYTE PTR es:[edi]
  4033c6:	add    BYTE PTR [edx-0x33],bl
  4033c9:	push   es
  4033ca:	add    BYTE PTR [edx-0x33],cl
  4033cd:	xchg   BYTE PTR [eax],al
  4033cf:	dec    edx
  4033d0:	int    0x46
  4033d2:	add    BYTE PTR [edx],bl
  4033d4:	retf   0xee
  4033d7:	dec    edx
  4033d8:	add    BYTE PTR [ecx],cl
  4033da:	add    BYTE PTR [edx],cl
  4033dc:	int    0x5e
  4033de:	add    BYTE PTR [edx],cl
  4033e0:	int    0x1e
  4033e2:	add    BYTE PTR [edx],bl
  4033e4:	retf   0x9e
  4033e7:	push   es
  4033e8:	add    BYTE PTR [ebx+0x0],ah
  4033eb:	or     cl,ch
  4033ed:	jle    0x4033ef
  4033ef:	or     cl,ch
  4033f1:	ds add dl,bl
  4033f4:	retf   
  4033f5:	fiadd  WORD PTR [eax]
  4033f7:	enter  0x1b01,0x0
  4033fb:	retf   0x6ecc
  4033fe:	add    dl,cl
  403400:	int3   
  403401:	cs add dl,bl
  403404:	retf   
  403405:	mov    esi,0xfbddf300
  40340a:	push   cs
  40340b:	repz (bad) 
  40340e:	mov    ?,ebx
  403410:	(bad)  
  403412:	dec    esi
  403413:	repz (bad) 
  403416:	(bad)  
  403417:	rep lods eax,DWORD PTR ds:[esi]
  403419:	or     BYTE PTR [ecx],al
  40341b:	add    BYTE PTR [eax],al
  40341d:	add    bl,dh
  40341f:	mov    al,0x8
  403421:	add    edx,esi
  403423:	int3   
  403424:	or     BYTE PTR [ecx],dl
  403426:	repz add al,0x9
  403429:	add    ebx,esp
  40342b:	into   
  40342c:	or     BYTE PTR ds:0x108d6f3,al
  403432:	out    dx,eax
  403433:	stos   BYTE PTR es:[edi],al
  403434:	or     BYTE PTR [ecx-0xd],al
  403437:	stos   BYTE PTR es:[edi],al
  403438:	or     BYTE PTR [ecx],al
  40343a:	mov    bl,0xad
  40343c:	or     BYTE PTR [ebx],al
  40343e:	repz mov ch,0x8
  403441:	add    ecx,esi
  403443:	leave  
  403444:	or     BYTE PTR [ecx],ah
  403446:	repz leave 
  403448:	or     BYTE PTR [ecx],al
  40344a:	adc    ecx,esp
  40344c:	or     BYTE PTR [ecx],cl
  40344e:	repz ror DWORD PTR [eax],cl
  403451:	add    ebx,ebp
  403453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403454:	or     BYTE PTR [ecx+0x91df3],al
  40345a:	rep lods eax,DWORD PTR ds:[esi]
  40345c:	or     BYTE PTR [edx],al
  40345e:	repz mov al,0x8
  403461:	xor    edx,0xf31908cc
  403467:	add    al,0x9
  403469:	add    ebx,ebp
  40346b:	into   
  40346c:	or     BYTE PTR [edi],al
  40346e:	repz (bad) 
  403470:	or     BYTE PTR [ecx],al
  403472:	in     eax,dx
  403473:	stos   BYTE PTR es:[edi],al
  403474:	or     BYTE PTR [ecx-0xd],ah
  403477:	stos   BYTE PTR es:[edi],al
  403478:	or     BYTE PTR [ecx],al
  40347a:	push   ebx
  40347b:	scas   al,BYTE PTR es:[edi]
  40347c:	or     BYTE PTR [ebx+esi*8],al
  40347f:	mov    ch,0x8
  403481:	add    DWORD PTR [eax],eax
  403483:	add    BYTE PTR [eax],al
  403485:	lock push es
  403487:	std    
  403488:	or     BYTE PTR [edx],al
  40348a:	pop    es
  40348b:	std    
  40348c:	or     dl,dh
  40348e:	push   ss
  40348f:	sti    
  403490:	or     dh,ch
  403492:	push   es
  403493:	repz or dl,dh
  403496:	cli    
  403497:	fimul  WORD PTR [eax]
  403499:	mov    dl,0x6
  40349b:	test   eax,0xd906f308
  4034a0:	add    eax,DWORD PTR [edx]
  4034a2:	pop    es
  4034a3:	fild   DWORD PTR [ebx]
  4034a5:	repz push es
  4034a7:	icebp  
  4034a8:	add    esi,esp
  4034aa:	push   es
  4034ab:	lock add ebp,ebp
  4034ae:	push   es
  4034af:	jecxz  0x4034b4
  4034b1:	test   BYTE PTR [esi],0xe2
  4034b4:	add    ebp,edi
  4034b6:	push   es
  4034b7:	cmc    
  4034b8:	add    esi,eax
  4034ba:	push   es
  4034bb:	in     al,dx
  4034bc:	add    esi,ecx
  4034be:	push   es
  4034bf:	out    0x3,eax
  4034c1:	repnz push es
  4034c3:	fiadd  WORD PTR [ebx]
  4034c5:	repz push es
  4034c7:	jmp    0x774727cf
  4034cc:	adc    al,0xec
  4034ce:	dec    edi
  4034cf:	lds    esp,FWORD PTR [edx-0x13]
  4034d2:	fcom   DWORD PTR [ebx+0x33]
  4034d5:	jmp    0x6dff:0x9ec7e06d
  4034dc:	fcomp  DWORD PTR [ecx-0x6f5943aa]
  4034e2:	fisttp QWORD PTR [edx+0x77]
  4034e5:	(bad)
  4034e9:	add    BYTE PTR [eax],al
  4034eb:	add    BYTE PTR [eax],ch
  4034ed:	clc    
  4034ee:	test   BYTE PTR [edi+eiz*1+0x26daf74d],cl
  4034f5:	out    0x61,al
  4034f7:	stos   DWORD PTR es:[edi],eax
  4034f8:	and    DWORD PTR [edi+0x12],ebp
  4034fb:	inc    eax
  4034fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fd:	adc    BYTE PTR [eax+edx*2-0x5e],bh
  403501:	inc    ebp
  403502:	add    dh,ch
  403504:	std    
  403505:	jle    0x4034ee
  403507:	pop    eax
  403508:	les    eax,FWORD PTR [ebp+0x7dc08d90]
  40350e:	sbb    eax,0x6a770f1b
  403513:	mov    eax,ds:0x2ff38021
  403518:	xor    BYTE PTR [ebp-0x1e9b7b7c],al
  40351e:	sbb    dl,BYTE PTR [edx]
  403520:	fwait
  403521:	in     al,0x6d
  403523:	cwde   
  403524:	test   ebx,ebx
  403526:	hlt    
  403527:	es ins BYTE PTR es:[edi],dx
  403529:	fiadd  DWORD PTR [ebx+0x13331f3f]
  40352f:	test   eax,0x53643268
  403534:	test   al,0x29
  403536:	std    
  403537:	mov    ebp,0x368a2c39
  40353c:	and    ecx,DWORD PTR [eax]
  40353e:	adc    al,0xa0
  403540:	les    ecx,FWORD PTR [ebx+eiz*2]
  403543:	dec    edx
  403544:	in     al,dx
  403545:	adc    eax,0xe55b4fa
  40354a:	lea    esi,[ecx+0x3f3b3510]
  403550:	add    BYTE PTR [eax],al
  403552:	add    BYTE PTR [edi],bh
  403554:	das    
  403555:	dec    esp
  403556:	lea    esi,[ecx-0x5fe42ada]
  40355c:	sub    eax,0xa1498a2
  403561:	cmp    al,0x26
  403563:	imul   ecx,DWORD PTR [ebx],0x4b
  403566:	je     0x4035dd
  403568:	adc    al,0xd2
  40356a:	add    bh,BYTE PTR [ecx+edx*1-0x5b]
  40356e:	arpl   WORD PTR [eax+0x7c],bp
  403571:	xor    eax,0x427898cd
  403576:	aas    
  403577:	cmp    DWORD PTR [edx-0x7cd65625],eax
  40357d:	lods   al,BYTE PTR ds:[esi]
  40357e:	add    BYTE PTR [ecx],bh
  403580:	data16 fdiv DWORD PTR [edx]
  403583:	lahf   
  403584:	cmc    
  403585:	fiadd  WORD PTR [ebp+0x15]
  403588:	vpaddusb ymm0,ymm5,YMMWORD PTR [ebx+0x26abd114]
  403590:	sbb    bl,cl
  403592:	ror    BYTE PTR es:[ecx],1
  403595:	ficom  WORD PTR [ecx+0x4a]
  403598:	stc    
  403599:	(bad)  
  40359a:	enter  0x28bc,0xd0
  40359e:	mov    edi,0x21b4ddef
  4035a3:	mov    ecx,0x4356b3cd
  4035a8:	cmp    eax,0x6cb5cfba
  4035ad:	mov    ebp,0x29274b8
  4035b2:	sub    BYTE PTR [edx+0x5f0541],al
  4035b8:	add    BYTE PTR [eax],al
  4035ba:	pop    eax
  4035bb:	jae    0x4035c9
  4035bd:	(bad)  
  4035be:	out    dx,al
  4035bf:	jecxz  0x4035cc
  4035c1:	mov    cl,0xdd
  4035c3:	dec    esi
  4035c4:	outs   dx,DWORD PTR ds:[esi]
  4035c5:	das    
  4035c6:	dec    ebx
  4035c7:	std    
  4035c8:	addr16 pop eax
  4035ca:	jno    0x40357b
  4035cc:	pusha  
  4035cd:	rol    DWORD PTR [edi+0x1e],0x66
  4035d1:	mov    dh,0xca
  4035d3:	dec    ebx
  4035d4:	fdiv   QWORD PTR [esi+0x4c]
  4035d7:	pop    edx
  4035d8:	fild   DWORD PTR [ecx]
  4035da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035db:	jmp    0xefd4:0xb93098d1
  4035e2:	mov    ds:0x4571b187,eax
  4035e7:	xchg   esi,eax
  4035e8:	mov    dh,0x6
  4035ea:	scas   eax,DWORD PTR es:[edi]
  4035eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ec:	mov    edi,0xb875599f
  4035f1:	call   0x7847b96e
  4035f6:	(bad)  
  4035f8:	add    BYTE PTR [edi],cl
  4035fa:	repz sub eax,0xb75d099c
  403600:	imul   ecx,DWORD PTR [esi],0xffffffd2
  403603:	mov    ecx,edi
  403605:	imul   esp,DWORD PTR [ebx+edx*1+0x9],0x5864eb6d
  40360d:	sub    BYTE PTR fs:[edi+0x22d56327],0x35
  403615:	imul   ebx,DWORD PTR [eax-0x70],0x64
  403619:	ins    BYTE PTR es:[edi],dx
  40361a:	fcomip st,st(5)
  40361c:	adc    esp,DWORD PTR [ebp+0x0]
  40361f:	add    BYTE PTR [eax],al
  403621:	outs   dx,BYTE PTR ds:[esi]
  403622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403623:	add    esp,DWORD PTR [edx-0x5f]
  403626:	sbb    esi,DWORD PTR [ecx+0x6]
  403629:	pop    ss
  40362a:	mov    DWORD PTR [eax-0x301107ff],esp
  403630:	or     BYTE PTR [ecx-0x63],dh
  403633:	mov    edi,0xac74860f
  403638:	mov    al,0xe
  40363a:	(bad)  
  40363b:	fdiv   QWORD PTR [edi-0x4174381f]
  403641:	push   0x6fb97c52
  403646:	ins    DWORD PTR es:[edi],dx
  403647:	call   0x19370828
  40364c:	fiadd  DWORD PTR [esi]
  40364e:	add    DWORD PTR [edi-0x2d],0xd4384b67
  403655:	dec    eax
  403656:	inc    esi
  403657:	gs mov dl,0xb6
  40365a:	jae    0x403690
  40365c:	mov    ch,0xf9
  40365e:	and    DWORD PTR [esp+edi*4],eax
  403661:	nop
  403662:	nop
  403663:	adc    edi,DWORD PTR [ebx-0x205f10b9]
  403669:	mov    ecx,0xded8709c
  40366e:	or     al,al
  403670:	ror    DWORD PTR [edi+0x39],1
  403673:	iret   
  403674:	(bad)  
  403675:	and    BYTE PTR [edi],al
  403677:	rcr    esp,cl
  403679:	call   0xaefa:0x8dac5d47
  403680:	jnp    0x40360e
  403682:	jno    0x4036bd
  403684:	mov    eax,DWORD PTR [eax]
  403686:	add    BYTE PTR [eax],al
  403688:	push   ebx
  403689:	loope  0x403645
  40368b:	sbb    bh,ch
  40368d:	dec    edx
  40368e:	inc    esp
  40368f:	call   0x37d62e85
  403694:	jmp    0xfe875709
  403699:	loope  0x403680
  40369b:	push   esp
  40369c:	out    dx,al
  40369d:	push   esi
  40369e:	push   ebx
  40369f:	inc    esp
  4036a0:	icebp  
  4036a1:	jmp    0x40369b
  4036a3:	repz jmp 0xff639e2d
  4036a9:	int    0xcc
  4036ab:	nop
  4036ac:	sbb    ebx,DWORD PTR [edx+edi*1-0x80]
  4036b0:	or     al,0xe7
  4036b2:	fild   QWORD PTR [edi-0x20b181f3]
  4036b8:	adc    dl,ch
  4036ba:	test   edx,0xbb8164a5
  4036c0:	call   0x9576:0xa36c0aed
  4036c7:	pushf  
  4036c8:	inc    esp
  4036c9:	retf   
  4036ca:	fiadd  WORD PTR [esi]
  4036cc:	mov    al,ds:0xa0f7685d
  4036d1:	hlt    
  4036d2:	icebp  
  4036d3:	daa    
  4036d4:	xchg   esi,eax
  4036d5:	jnp    0x403753
  4036d7:	pop    eax
  4036d8:	mov    esi,eax
  4036da:	leave  
  4036db:	test   BYTE PTR [ebx+0x7c9557b1],cl
  4036e1:	mov    al,ds:0x77de5e5
  4036e6:	jae    0x40369e
  4036e8:	bound  edi,QWORD PTR [edx]
  4036ea:	rol    BYTE PTR [eax+0x0],0x0
  4036ee:	add    BYTE PTR [esi],bh
  4036f0:	mov    al,0x4e
  4036f2:	push   ecx
  4036f3:	inc    ecx
  4036f4:	mov    eax,ds:0xdfd2dc00
  4036f9:	add    al,0x6a
  4036fb:	add    edi,ebx
  4036fd:	jae    0x4036fa
  4036ff:	pop    es
  403700:	sub    bl,ah
  403702:	gs out dx,al
  403704:	sub    dl,BYTE PTR [edi+edx*1-0x7ef2ce6b]
  40370b:	sbb    eax,0xabf27a2d
  403710:	adc    esp,esp
  403712:	pop    esp
  403713:	stos   BYTE PTR es:[edi],al
  403714:	adc    BYTE PTR [ebx+0xa07790e],dl
  40371a:	js     0x403775
  40371c:	or     bh,BYTE PTR [ebp-0x53]
  40371f:	aas    
  403720:	adc    dh,al
  403722:	cmp    edx,DWORD PTR [esi-0x617e78f1]
  403728:	or     BYTE PTR [esi],bl
  40372a:	lgs    ecx,FWORD PTR [ecx]
  40372d:	imul   esp,DWORD PTR [ebx+eiz*8+0x1232f724],0x278802c
  403738:	xor    ebx,DWORD PTR [ecx]
  40373a:	push   es
  40373b:	icebp  
  40373c:	sub    eax,0xd6965f6e
  403741:	dec    cl
  403743:	(bad)  
  403745:	mov    DWORD PTR [ebx],esi
  403747:	and    eax,0x2e9d10dd
  40374c:	in     al,0x67
  40374e:	push   esi
  40374f:	call   0x0:0xc0f980
  403756:	cmp    eax,DWORD PTR [ecx+0x7a692a8e]
  40375c:	pop    ss
  40375d:	xchg   esp,eax
  40375e:	retf   0x6076
  403761:	xchg   ecx,eax
  403762:	(bad)  
  403763:	(bad)  
  403765:	pop    ds
  403766:	(bad)  
  403767:	xlat   BYTE PTR ds:[ebx]
  403768:	mov    eax,ds:0x38df2ead
  40376d:	cmp    eax,DWORD PTR [ebp-0x1e]
  403770:	dec    edi
  403771:	add    BYTE PTR [ebx-0xa2e44da],ch
  403777:	idiv   DWORD PTR [ebx-0x4af7805a]
  40377d:	aas    
  40377e:	rcl    DWORD PTR [edx+esi*4],1
  403781:	dec    eax
  403782:	mov    al,0x22
  403784:	or     eax,0x9b34ed8
  403789:	scas   eax,DWORD PTR es:[edi]
  40378a:	xchg   esp,eax
  40378b:	add    eax,DWORD PTR [ebx]
  40378d:	ss mov edx,0x19410453
  403793:	fbld   TBYTE PTR [eax-0x21]
  403796:	xchg   DWORD PTR [esi+0x67],ebp
  403799:	test   al,0x2d
  40379b:	inc    eax
  40379c:	outs   dx,BYTE PTR ds:[esi]
  40379d:	xor    DWORD PTR [ebx+0x3e46698f],eax
  4037a3:	fwait
  4037a4:	popa   
  4037a5:	retf   
  4037a6:	lock mov esp,DWORD PTR [esi-0x44]
  4037aa:	sub    bh,BYTE PTR [edi+ebp*2+0x25]
  4037ae:	les    ebp,FWORD PTR [ebx+0x57475268]
  4037b4:	or     al,0xcc
  4037b6:	mov    DWORD PTR [esi+0xb],eax
  4037b9:	mov    ebx,0xe3000000
  4037be:	mov    bh,0x1
  4037c0:	and    cl,BYTE PTR [ebp-0x19]
  4037c3:	add    al,0x55
  4037c5:	dec    esp
  4037c6:	or     eax,0xbde2c5ba
  4037cb:	mov    esp,0xb3ecf8b2
  4037d0:	sub    edx,DWORD PTR [esi+0x5f]
  4037d3:	mov    bl,0x5c
  4037d5:	jne    0x4037a0
  4037d7:	xlat   BYTE PTR ds:[ebx]
  4037d8:	ret    0x785b
  4037db:	shl    BYTE PTR [ebp+0x2cd928d1],1
  4037e1:	aas    
  4037e2:	ficomp WORD PTR [ebx-0x56]
  4037e6:	les    esp,FWORD PTR [ebx+ebx*4+0x34]
  4037ea:	xlat   BYTE PTR ds:[ebx]
  4037eb:	arpl   sp,bp
  4037ed:	repz cmp esp,DWORD PTR [ebx+0x72a5a66a]
  4037f4:	ins    DWORD PTR es:[edi],dx
  4037f5:	icebp  
  4037f6:	push   esi
  4037f7:	dec    BYTE PTR [eax]
  4037f9:	jg     0x40377b
  4037fb:	or     eax,0x5f32080e
  403800:	pop    es
  403801:	sbb    esp,0x2dee002e
  403807:	cmp    bh,BYTE PTR [edi-0x47b6449a]
  40380d:	adc    DWORD PTR [ecx+0x1668b11b],ecx
  403813:	jmp    0x4037ca
  403815:	mul    DWORD PTR [esi+esi*2]
  403818:	rol    BYTE PTR [ecx-0x312a7a4d],cl
  40381e:	inc    ecx
  40381f:	xlat   BYTE PTR ds:[ebx]
  403820:	fadd   QWORD PTR [eax]
  403822:	add    BYTE PTR [eax],al
  403824:	dec    edi
  403825:	xcrypt-ctr (bad)
  403826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403827:	(bad)  
  403829:	add    DWORD PTR [edx-0x1e938a2d],esi
  40382f:	aam    0xc2
  403831:	push   ss
  403832:	xchg   ebx,eax
  403833:	fstp   QWORD PTR [ebx]
  403835:	inc    eax
  403836:	sbb    dl,0x4
  403839:	sti    
  40383a:	in     eax,dx
  40383b:	mov    ebp,0xb91d6572
  403840:	popf   
  403841:	cmovg  esi,DWORD PTR [eax-0x48c1c6e4]
  403848:	jmp    0x403819
  40384a:	sub    DWORD PTR [eax],ecx
  40384c:	imul   ebx,DWORD PTR [esi+0x5a],0xf
  403850:	je     0x4038b6
  403852:	or     al,BYTE PTR [esi]
  403854:	aad    0xf1
  403856:	cli    
  403857:	add    BYTE PTR [edx],al
  403859:	leave  
  40385a:	gs gs ins BYTE PTR es:[edi],dx
  40385d:	push   edi
  40385e:	xchg   esi,eax
  40385f:	bound  ebx,QWORD PTR [ebx-0x63]
  403862:	(bad)  
  403863:	imul   edx,edx,0xffffffea
  403866:	mov    dh,0x6c
  403868:	fld    QWORD PTR [esi]
  40386a:	and    edx,esp
  40386c:	jmp    0xe6f1c7d7
  403871:	xlat   BYTE PTR ds:[ebx]
  403872:	cmp    eax,0xab50f783
  403877:	xchg   edx,eax
  403878:	lock std 
  40387a:	pop    es
  40387b:	push   ds
  40387c:	xchg   esp,eax
  40387d:	addr16 jbe 0x40386d
  403880:	mov    ah,0xd6
  403882:	and    al,0x3f
  403884:	call   0x0:0x4e924d
  40388b:	xchg   ebp,eax
  40388c:	add    BYTE PTR [ebx+0x3d712259],dh
  403892:	sub    DWORD PTR ds:0xcdfacfde,ebx
  403898:	inc    esi
  403899:	pop    ecx
  40389a:	or     cl,bl
  40389c:	neg    DWORD PTR [ecx+0x246d9f95]
  4038a2:	gs cwde 
  4038a4:	loopne 0x40385c
  4038a6:	mov    dh,0x81
  4038a8:	inc    edi
  4038a9:	inc    eax
  4038aa:	(bad)  
  4038ab:	jle    0x4038a3
  4038ad:	add    al,0xd2
  4038af:	jle    0x403832
  4038b1:	jae    0x403874
  4038b3:	jns    0x403881
  4038b5:	fnstenv [edx+0x60]
  4038b8:	push   ebx
  4038b9:	inc    edi
  4038ba:	mov    ds:0xdebea5f,al
  4038bf:	ret    
  4038c0:	jl     0x40391c
  4038c2:	std    
  4038c3:	mov    ebp,0xad2ec0d1
  4038c8:	pop    edx
  4038c9:	cs pop esi
  4038cb:	stos   BYTE PTR es:[edi],al
  4038cc:	jecxz  0x4038e4
  4038ce:	dec    edx
  4038cf:	adc    eax,0x123aa174
  4038d4:	retf   
  4038d5:	jmp    0x4038bf
  4038d7:	aam    0x61
  4038d9:	jne    0x4038f4
  4038db:	aam    0xec
  4038dd:	std    
  4038de:	test   eax,ebp
  4038e0:	jp     0x40386a
  4038e2:	jbe    0x4038cb
  4038e4:	ret    
  4038e5:	add    dl,dl
  4038e7:	xchg   edi,eax
  4038e8:	or     DWORD PTR [edx+0x5c],ebx
  4038eb:	push   ds
  4038ec:	add    al,0x2d
  4038ee:	jmp    0xf04038f3
  4038f3:	push   es
  4038f4:	add    BYTE PTR [eax],ch
  4038f6:	loopne 0x403913
  4038f8:	sbb    DWORD PTR [ebx-0x6f],ebp
  4038fb:	clc    
  4038fc:	xor    DWORD PTR [edx-0x12d50e1e],ebp
  403902:	pop    ebp
  403903:	xor    ah,BYTE PTR [esp+0x43]
  403907:	aaa    
  403908:	jge    0x403979
  40390a:	outs   dx,BYTE PTR ds:[esi]
  40390b:	pop    esp
  40390c:	push   esi
  40390d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390e:	xchg   ebp,eax
  40390f:	inc    ebp
  403910:	dec    edi
  403911:	icebp  
  403912:	jp     0x4038f1
  403914:	enter  0x6bb0,0xc4
  403918:	shl    DWORD PTR [ebx-0x31],1
  40391b:	scas   al,BYTE PTR es:[edi]
  40391c:	cli    
  40391d:	and    bl,BYTE PTR [eax+0x27f5e3b3]
  403923:	je     0x4038d1
  403925:	lods   al,BYTE PTR ds:[esi]
  403926:	cs ins DWORD PTR es:[edi],dx
  403928:	mov    ch,0x67
  40392a:	in     al,0x89
  40392c:	sahf   
  40392d:	push   ds
  40392e:	fist   DWORD PTR [esi-0x373d4779]
  403934:	dec    edx
  403935:	stc    
  403936:	adc    esp,eax
  403938:	push   ebx
  403939:	cmp    al,BYTE PTR [edi-0x4d]
  40393c:	js     0x4039b9
  40393e:	xor    BYTE PTR [esi+0x6d4f9c61],ch
  403944:	cs aad 0xb6
  403947:	je     0x403980
  403949:	push   ds
  40394a:	jl     0x4038eb
  40394c:	sbb    al,0x57
  40394e:	jae    0x4038da
  403950:	add    eax,0x82220f40
  403955:	add    DWORD PTR [eax],eax
  403957:	add    BYTE PTR [eax],al
  403959:	pop    eax
  40395a:	pop    es
  40395b:	fwait
  40395c:	mov    dl,0x3a
  40395e:	in     al,dx
  40395f:	scas   eax,DWORD PTR es:[edi]
  403960:	jae    0x40390d
  403962:	cmc    
  403963:	test   al,0x0
  403965:	pop    ss
  403966:	out    0x76,al
  403968:	out    0x36,al
  40396a:	push   esi
  40396b:	ins    BYTE PTR es:[edi],dx
  40396c:	jmp    DWORD PTR [ebp+0x3]
  40396f:	inc    ecx
  403970:	aam    0xb4
  403972:	mov    bl,0x59
  403974:	int    0xa8
  403976:	sbb    eax,0xad699584
  40397b:	sahf   
  40397c:	mov    WORD PTR [edx],?
  40397e:	cld    
  40397f:	mov    cl,0xa7
  403981:	sti    
  403982:	dec    ebx
  403983:	test   eax,0xe8a8acbe
  403988:	icebp  
  403989:	ins    DWORD PTR es:[edi],dx
  40398a:	jp     0x40397f
  40398c:	call   0xc41ec0cf
  403991:	out    dx,eax
  403992:	cwde   
  403993:	(bad)
  403996:	xchg   esp,eax
  403997:	pop    ebp
  403998:	pop    ebp
  403999:	mov    eax,ds:0xf2444622
  40399e:	jle    0x403a0b
  4039a0:	outs   dx,DWORD PTR ds:[esi]
  4039a1:	mov    bl,0xc4
  4039a3:	jo     0x403a1b
  4039a5:	test   BYTE PTR [esi+0x31],bl
  4039a8:	cmp    DWORD PTR ds:0xf62029f0,esp
  4039ae:	rol    DWORD PTR [esi],0xb
  4039b1:	xchg   DWORD PTR [ecx],edx
  4039b3:	sbb    al,0x12
  4039b5:	(bad)  [ebx]
  4039b7:	inc    esi
  4039b8:	fistp  WORD PTR [eax]
  4039ba:	mov    ebx,0xc65c
  4039bf:	add    BYTE PTR [ebx-0x35129013],cl
  4039c5:	pop    esp
  4039c6:	imul   esi,esp,0xffffff9d
  4039c9:	int    0x2a
  4039cb:	mov    ebx,0xa231c7dc
  4039d0:	(bad)  
  4039d2:	sbb    al,0x89
  4039d4:	imul   eax,DWORD PTR ds:[edi],0x9f869190
  4039db:	pop    ss
  4039dc:	push   eax
  4039dd:	xchg   edi,eax
  4039de:	test   BYTE PTR [esi],cl
  4039e0:	repz push esi
  4039e2:	loop   0x40398d
  4039e4:	push   cs
  4039e5:	sbb    BYTE PTR [ebx+0x3dc51fb2],dh
  4039eb:	repz loopne 0x403a2b
  4039ee:	dec    esp
  4039ef:	call   0xc55f2ccd
  4039f4:	mov    dl,0xab
  4039f6:	in     eax,dx
  4039f7:	fstp   QWORD PTR [ebx+0x437952aa]
  4039fd:	jecxz  0x403a40
  4039ff:	bound  ebx,QWORD PTR [edx]
  403a01:	sub    al,0xf1
  403a03:	dec    esi
  403a04:	xor    DWORD PTR [ebp+0x20],esp
  403a07:	push   esp
  403a08:	cmp    BYTE PTR [esi-0x1080ea73],ch
  403a0e:	jle    0x403a1e
  403a10:	jle    0x403a42
  403a12:	lods   al,BYTE PTR ds:[esi]
  403a13:	and    ecx,DWORD PTR [ebp+0x71]
  403a16:	fnstsw WORD PTR [eax]
  403a18:	cmp    al,0xb2
  403a1a:	enter  0xbba0,0x6b
  403a1e:	mov    bh,0xbb
  403a20:	adc    ah,BYTE PTR ds:0x966b
  403a26:	add    cl,bh
  403a28:	sbb    ebx,DWORD PTR [edx+0x3b7008d]
  403a2e:	int3   
  403a2f:	aaa    
  403a30:	jbe    0x403a26
  403a32:	(bad)  
  403a33:	sub    DWORD PTR ss:[esi],esp
  403a36:	cli    
  403a37:	push   ebp
  403a38:	call   0x7a851b93
  403a3d:	pusha  
  403a3e:	mov    ebx,0xa02fb379
  403a43:	push   eax
  403a44:	cld    
  403a45:	add    cl,BYTE PTR [ebp-0x69edca85]
  403a4b:	sbb    BYTE PTR [esi-0x204a2865],0x6c
  403a52:	int3   
  403a53:	mov    ah,0x20
  403a55:	mov    esi,0xcf6197e1
  403a5a:	cli    
  403a5b:	xchg   BYTE PTR [edi],al
  403a5d:	inc    ebp
  403a5e:	fist   DWORD PTR [ecx]
  403a60:	cmp    esp,edi
  403a62:	test   eax,0x78b72fea
  403a67:	mov    edi,0xac876e46
  403a6c:	pop    ebp
  403a6d:	and    DWORD PTR [esi],edx
  403a6f:	in     eax,0x14
  403a71:	loopne 0x403a59
  403a73:	out    0xb,eax
  403a75:	xchg   ebx,eax
  403a76:	xor    ecx,DWORD PTR [ebx]
  403a78:	jecxz  0x403acb
  403a7a:	inc    esp
  403a7b:	adc    dl,bh
  403a7d:	dec    ebp
  403a7e:	cs and al,BYTE PTR ss:[edi-0x33c4eaa3]
  403a86:	or     al,0x38
  403a88:	push   esp
  403a89:	add    eax,0xfc
  403a8e:	sub    al,0x4d
  403a90:	dec    edx
  403a91:	jno    0x403a15
  403a93:	push   es
  403a94:	mov    esp,DWORD PTR [edx-0x3037e087]
  403a9a:	dec    esp
  403a9b:	clc    
  403a9c:	or     cl,al
  403a9e:	aas    
  403a9f:	icebp  
  403aa0:	xchg   ebp,eax
  403aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa2:	iret   
  403aa3:	imul   ecx,DWORD PTR [edi-0x2d],0x8704732c
  403aaa:	add    DWORD PTR [ebp+edi*4-0x6d7b158b],ebx
  403ab1:	out    0x2c,eax
  403ab3:	into   
  403ab4:	push   ebx
  403ab5:	sbb    BYTE PTR [eax],ah
  403ab7:	xlat   BYTE PTR ds:[ebx]
  403ab8:	add    BYTE PTR [edx+0x45],cl
  403abb:	rol    cl,0x3a
  403abe:	push   esi
  403abf:	test   eax,0xebf43c1f
  403ac4:	push   ebp
  403ac5:	dec    ebx
  403ac6:	xlat   BYTE PTR ds:[ebx]
  403ac7:	hlt    
  403ac8:	pushf  
  403ac9:	push   ds
  403aca:	cli    
  403acb:	sbb    esp,edx
  403acd:	in     eax,dx
  403ace:	add    al,BYTE PTR [ebx]
  403ad0:	sti    
  403ad1:	jle    0x403b13
  403ad3:	push   eax
  403ad4:	cmp    dl,BYTE PTR [eax+0x7900593b]
  403ada:	xchg   edx,eax
  403adb:	and    DWORD PTR [ecx-0x48],edi
  403ade:	inc    ecx
  403adf:	cmp    al,0x60
  403ae1:	out    0x3e,eax
  403ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae4:	out    0x9e,eax
  403ae6:	xor    eax,0x8055feb9
  403aeb:	(bad)  
  403aec:	aad    0xc
  403aee:	xlat   BYTE PTR ds:[ebx]
  403aef:	iret   
  403af0:	int3   
  403af1:	ret    
  403af2:	add    BYTE PTR [eax],al
  403af4:	add    BYTE PTR [ecx-0x73],bl
  403af7:	add    DWORD PTR [edx+0x319a95fa],0xffffffab
  403afe:	jp     0x403ab1
  403b00:	lock adc eax,0x5732a864
  403b06:	xchg   DWORD PTR [ebx],edi
  403b08:	repz cdq 
  403b0a:	sahf   
  403b0b:	and    ah,BYTE PTR [eax+0x61097165]
  403b11:	cs ins BYTE PTR es:[edi],dx
  403b13:	adc    BYTE PTR [esi],dh
  403b15:	mov    ah,0xab
  403b17:	pop    edi
  403b18:	out    dx,eax
  403b19:	fdiv   QWORD PTR [edx-0x220d5bba]
  403b1f:	ins    DWORD PTR es:[edi],dx
  403b20:	pop    ebp
  403b21:	loope  0x403aeb
  403b23:	je     0x403acf
  403b25:	fisub  WORD PTR [eax-0xd]
  403b28:	jmp    0x403b01
  403b2a:	inc    edi
  403b2b:	jmp    0x3069:0xc12b1f28
  403b32:	xor    bl,al
  403b34:	scas   al,BYTE PTR es:[edi]
  403b35:	mov    ebx,0x9ae796f1
  403b3a:	in     al,dx
  403b3b:	lea    ebp,[esp+edi*1]
  403b3e:	pop    es
  403b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b40:	imul   ebx,DWORD PTR gs:[esi],0xffffffbc
  403b44:	add    esp,DWORD PTR [ebp+0x48]
  403b47:	jno    0x403b0b
  403b49:	das    
  403b4a:	pop    ebp
  403b4b:	push   0x43325771
  403b50:	xor    BYTE PTR [eax-0x73ffa5d5],bh
  403b56:	push   edi
  403b57:	sub    eax,0x15
  403b5c:	ins    DWORD PTR es:[edi],dx
  403b5d:	dec    eax
  403b5e:	ss or  al,0x1e
  403b61:	stos   BYTE PTR es:[edi],al
  403b62:	sbb    ah,BYTE PTR [edi]
  403b64:	out    dx,eax
  403b65:	out    0xff,al
  403b67:	cmp    eax,0xb9980678
  403b6c:	sub    DWORD PTR [esi-0x1c155f7e],esi
  403b72:	lods   eax,DWORD PTR ds:[esi]
  403b73:	mov    ebx,DWORD PTR [ebx+0x3492b553]
  403b79:	shl    esp,0xdd
  403b7c:	in     eax,0x7e
  403b7e:	out    dx,eax
  403b7f:	les    esp,FWORD PTR [esi+0x67efc22e]
  403b85:	mov    al,ds:0x3a63f6d9
  403b8a:	pop    es
  403b8b:	scas   al,BYTE PTR es:[edi]
  403b8c:	ret    0x1c88
  403b8f:	mov    bh,0xf1
  403b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b92:	xor    DWORD PTR [eax+esi*1+0x7f852a77],ebx
  403b99:	std    
  403b9a:	push   0xffffffca
  403b9c:	mov    esi,0xedd3704d
  403ba1:	sbb    ebx,DWORD PTR [ebp-0x8]
  403ba4:	cmp    al,0xac
  403ba6:	inc    ebp
  403ba7:	loope  0x403b54
  403ba9:	mov    edi,0xe7a66dd
  403bae:	lds    edi,FWORD PTR [edi-0x47]
  403bb1:	push   ecx
  403bb2:	call   0xf322240b
  403bb7:	dec    ebp
  403bb8:	daa    
  403bb9:	jae    0x403b6d
  403bbb:	add    dh,BYTE PTR [esi-0x3d]
  403bbe:	test   eax,0x1b
  403bc3:	mov    ch,0x94
  403bc5:	test   BYTE PTR [eax],dh
  403bc7:	hlt    
  403bc8:	and    bl,BYTE PTR [edi-0x3ac7add7]
  403bce:	in     al,0xd3
  403bd0:	data16 fdivp st(5),st
  403bd3:	repz aad 0xcf
  403bd6:	repz lds edx,FWORD PTR [esi+edi*4+0x2c43a4e8]
  403bde:	test   eax,0xb25cba73
  403be3:	push   0x71
  403be5:	or     bl,BYTE PTR [edi-0x7c04d7bf]
  403beb:	dec    eax
  403bec:	lahf   
  403bed:	call   0x1a1f5b0d
  403bf2:	pop    es
  403bf3:	push   ds
  403bf4:	push   ds
  403bf5:	inc    esi
  403bf6:	sub    bh,ch
  403bf8:	pop    esp
  403bf9:	aaa    
  403bfa:	xor    esp,ebp
  403bfc:	cmp    esp,DWORD PTR [ebp-0x2b8d4490]
  403c02:	imul   esp,DWORD PTR [edx-0x46b97d47],0xfffffff0
  403c09:	jno    0x403c68
  403c0b:	shl    cl,1
  403c0d:	(bad)  
  403c0e:	cli    
  403c0f:	cmp    BYTE PTR [eax+0x6341e1a5],ch
  403c15:	jns    0x403be3
  403c17:	sbb    bl,BYTE PTR [edx-0x78]
  403c1a:	xlat   BYTE PTR ds:[ebx]
  403c1b:	adc    esi,ebp
  403c1d:	adc    DWORD PTR [esi-0x731d4ba4],edx
  403c23:	cmp    eax,0xa03467
  403c28:	add    BYTE PTR [eax],al
  403c2a:	pop    esi
  403c2b:	es inc ebp
  403c2d:	mov    ebx,0x2360696f
  403c32:	lock mov al,ds:0xea09382f
  403c38:	(bad)  
  403c39:	adc    al,0x22
  403c3b:	and    ecx,DWORD PTR [esi]
  403c3d:	push   cs
  403c3e:	or     ebp,DWORD PTR [ebx+ebx*4+0x4f]
  403c42:	push   esp
  403c43:	lods   eax,DWORD PTR ds:[esi]
  403c44:	ins    BYTE PTR es:[edi],dx
  403c45:	push   esp
  403c46:	inc    ebp
  403c47:	out    dx,al
  403c48:	mov    ecx,0xcb2f2679
  403c4d:	bound  esp,QWORD PTR [edi]
  403c4f:	pop    es
  403c50:	push   es
  403c51:	leave  
  403c52:	jmp    0x403bd9
  403c54:	mov    edi,0x749ed0b7
  403c59:	addr16 in eax,dx
  403c5b:	jae    0x403c8a
  403c5d:	xchg   esi,eax
  403c5e:	(bad)  
  403c5f:	ins    BYTE PTR es:[edi],dx
  403c60:	loop   0x403c65
  403c62:	daa    
  403c63:	mov    ds:0xbb35f4a3,al
  403c68:	push   eax
  403c69:	and    dl,BYTE PTR [ecx]
  403c6b:	rcl    BYTE PTR [ecx],1
  403c6d:	push   ebx
  403c6e:	cli    
  403c6f:	enter  0x4efe,0x52
  403c73:	dec    esi
  403c74:	aaa    
  403c75:	imul   edx,DWORD PTR ds:[edi+0x7c],0xb53c45f0
  403c7d:	pop    ds
  403c7e:	daa    
  403c7f:	and    eax,0xea7e89da
  403c84:	sbb    bh,BYTE PTR [ebx+0x5d]
  403c87:	repz push edi
  403c89:	stos   DWORD PTR es:[edi],eax
  403c8a:	js     0x403ca4
  403c8c:	cdq    
  403c8d:	fadd   QWORD PTR [eax]
  403c8f:	add    BYTE PTR [eax],al
  403c91:	xchg   ebx,eax
  403c92:	add    DWORD PTR [ebp+0x4c58adb2],edx
  403c98:	ror    DWORD PTR [esi-0x546af8c1],0x2a
  403c9f:	mov    esi,0x9131c063
  403ca4:	cmc    
  403ca5:	loop   0x403ca3
  403ca7:	dec    edi
  403ca8:	push   es
  403ca9:	cli    
  403caa:	jecxz  0x403cae
  403cac:	pop    eax
  403cad:	xlat   BYTE PTR ds:[ebx]
  403cae:	push   cs
  403caf:	ret    0xb428
  403cb2:	adc    eax,0x90943c4d
  403cb7:	test   BYTE PTR [ebx-0x59],cl
  403cba:	xchg   edi,ecx
  403cbc:	sbb    al,BYTE PTR [edx+0x6aea0662]
  403cc2:	jns    0x403d0d
  403cc4:	jg     0x403c7e
  403cc6:	mov    ah,0x88
  403cc8:	nop
  403cc9:	mov    ds:0x9ecb00ab,eax
  403cce:	mov    ecx,0xa0840ac0
  403cd3:	fldenv [edi+edx*2+0x7a]
  403cd7:	adc    al,0x1d
  403cd9:	rcr    BYTE PTR [edi+0xd],0xd6
  403cdd:	jno    0x403c6b
  403cdf:	es (bad) 
  403ce1:	and    dl,BYTE PTR [esi-0x386bbfc1]
  403ce7:	jo     0x403cea
  403ce9:	jmp    0x403cb6
  403ceb:	imul   esi,DWORD PTR [edx+0x7342a136],0x9c5bb9bd
  403cf5:	add    BYTE PTR [eax],al
  403cf7:	add    BYTE PTR [edx],bl
  403cf9:	and    bl,ah
  403cfb:	aad    0xc9
  403cfd:	cmp    ch,al
  403cff:	push   ds
  403d00:	call   0x57982b58
  403d05:	aas    
  403d06:	idiv   DWORD PTR [eax-0x23]
  403d09:	or     eax,0x1466b9b8
  403d0e:	mov    eax,ds:0x89f72cfa
  403d13:	cmp    esi,DWORD PTR [edx+eiz*8-0x6e]
  403d17:	jmp    0xd640440c
  403d1c:	fcmovb st,st(4)
  403d1e:	add    DWORD PTR [edi],eax
  403d20:	cmp    eax,DWORD PTR [edx+0x40953003]
  403d26:	add    ah,BYTE PTR [ebp-0x6df8f261]
  403d2c:	xor    ebx,ecx
  403d2e:	push   es
  403d2f:	cmp    esi,DWORD PTR [ebx-0x229bfb77]
  403d35:	inc    edi
  403d36:	add    eax,0xe1a40a1
  403d3b:	outs   dx,BYTE PTR ds:[esi]
  403d3c:	jmp    0xd9e:0x743f0fd7
  403d43:	dec    eax
  403d44:	xchg   BYTE PTR [esp+ecx*1+0x0],bl
  403d48:	mov    esi,0x69091a71
  403d4d:	xchg   edi,eax
  403d4e:	fmul   DWORD PTR [eax]
  403d50:	shl    BYTE PTR [ebp+0x4bc70a9d],1
  403d56:	pop    esp
  403d57:	or     ecx,DWORD PTR [edx+0x1c2627]
  403d5d:	add    BYTE PTR [eax],al
  403d5f:	dec    ebp
  403d60:	shl    esp,0x1d
  403d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d64:	sti    
  403d65:	mov    eax,ds:0x6015b31f
  403d6a:	push   ds
  403d6b:	add    BYTE PTR es:[edi],ch
  403d6e:	sbb    edx,DWORD PTR [ecx]
  403d70:	jmp    0x18ab:0xd3c81aec
  403d77:	jg     0x403db6
  403d79:	imul   ebx,DWORD PTR [ecx],0x123578a2
  403d7f:	inc    ebp
  403d80:	xchg   edx,eax
  403d81:	not    DWORD PTR [ebx]
  403d83:	ins    BYTE PTR es:[edi],dx
  403d84:	lods   al,BYTE PTR ds:[esi]
  403d85:	mov    al,0x11
  403d87:	fild   DWORD PTR [ebp+0x73]
  403d8a:	adc    BYTE PTR [esi],ch
  403d8c:	push   eax
  403d8d:	cmp    al,0x15
  403d8f:	stc    
  403d90:	mov    edx,0x850014fd
  403d95:	mov    eax,0x7a5ed716
  403d9a:	pop    ss
  403d9b:	jp     0x403de9
  403d9d:	dec    ebp
  403d9e:	cmp    BYTE PTR [ebp-0x5a],bl
  403da1:	mov    ?,WORD PTR [ecx]
  403da3:	xchg   esp,eax
  403da4:	xchg   edi,eax
  403da5:	leave  
  403da6:	cmp    eax,ebx
  403da8:	jno    0x403db5
  403daa:	cmp    dh,BYTE PTR [esi]
  403dac:	fs inc esp
  403dae:	aas    
  403daf:	add    DWORD PTR [esi-0x4f27c17a],ecx
  403db5:	mov    edi,0x25aef3c
  403dba:	cmp    eax,0x365e1ab2
  403dbf:	mov    ch,0xf4
  403dc1:	fwait
  403dc2:	aaa    
  403dc3:	add    BYTE PTR [eax],al
  403dc5:	add    bl,dh
  403dc7:	adc    eax,0x9f1edac1
  403dcc:	push   0x18
  403dce:	pop    es
  403dcf:	and    al,0x7c
  403dd1:	push   edi
  403dd2:	add    dh,BYTE PTR [ecx]
  403dd4:	(bad)  
  403dd5:	xchg   ebp,eax
  403dd6:	add    ecx,DWORD PTR [edx+0x28]
  403dd9:	rol    DWORD PTR [ecx],cl
  403ddb:	add    eax,DWORD PTR [edx]
  403ddd:	adc    eax,esp
  403ddf:	das    
  403de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de1:	imul   ecx,edi,0x4c
  403de4:	mov    WORD PTR [ecx-0x110de22a],gs
  403dea:	int3   
  403deb:	out    0x57,al
  403ded:	sub    eax,0x624e7bd5
  403df2:	ror    BYTE PTR [eax-0x3e2e601c],1
  403df8:	call   0x1224:0xb0dad3e6
  403dff:	sbb    BYTE PTR [eax+0x78],dh
  403e02:	sbb    DWORD PTR [ebp-0x19f74527],esi
  403e08:	and    edi,esp
  403e0a:	or     cl,BYTE PTR [edi+0xe]
  403e0d:	sbb    esi,DWORD PTR ds:[eax+ebx*1+0x71]
  403e12:	push   ss
  403e13:	popa   
  403e14:	xor    dh,BYTE PTR [ebx-0xa33a5f1]
  403e1a:	add    eax,0xdc376633
  403e1f:	pop    edi
  403e20:	mov    DWORD PTR [edx+0x58a39ca3],ebx
  403e26:	mov    ds:0x1e5d4d,al
  403e2b:	add    BYTE PTR [eax],al
  403e2d:	mov    al,ds:0x81dbf736
  403e32:	stos   DWORD PTR es:[edi],eax
  403e33:	loopne 0x403dc7
  403e35:	jl     0x403e0f
  403e37:	dec    edx
  403e38:	push   ecx
  403e39:	test   DWORD PTR [ecx-0x1580e84c],esi
  403e3f:	sahf   
  403e40:	aad    0x66
  403e42:	pop    es
  403e43:	loope  0x403e1c
  403e45:	jp     0x403e7c
  403e47:	scas   al,BYTE PTR es:[edi]
  403e48:	jno    0x403e72
  403e4a:	xor    al,0xff
  403e4c:	or     esp,esi
  403e4e:	xor    DWORD PTR [eax],ecx
  403e50:	es mov esp,0x73308d33
  403e56:	cs pop edx
  403e58:	sbb    dh,BYTE PTR [ecx]
  403e5a:	das    
  403e5b:	and    esp,DWORD PTR [edi+ebp*8+0x30]
  403e5f:	sub    al,0xce
  403e61:	mov    ch,0x30
  403e63:	pop    ecx
  403e64:	jmp    0x221d:0x40662368
  403e6b:	aaa    
  403e6c:	mov    esi,0x940023db
  403e71:	mov    DWORD PTR ds:0x203e8195,esp
  403e77:	mov    ds:0xeb2104a7,al
  403e7c:	push   ebp
  403e7d:	ret    0xb41e
  403e80:	sti    
  403e81:	popa   
  403e82:	push   ds
  403e83:	icebp  
  403e84:	cmp    dl,BYTE PTR [ecx+ebp*1+0x27ce111e]
  403e8b:	dec    edi
  403e8c:	outs   dx,DWORD PTR ds:[esi]
  403e8d:	or     BYTE PTR [esi],ah
  403e8f:	cmp    ch,al
  403e91:	add    BYTE PTR [eax],al
  403e93:	add    BYTE PTR [edx+0x27],bl
  403e96:	popf   
  403e97:	ror    BYTE PTR [ebp-0x288735d6],cl
  403e9d:	sub    dh,BYTE PTR [ebx+0x6]
  403ea0:	adc    DWORD PTR ds:0x2c132c5c,ebp
  403ea6:	leave  
  403ea7:	into   
  403ea8:	cmp    al,0x3f
  403eaa:	mul    BYTE PTR [esi+eax*1+0x3e]
  403eae:	daa    
  403eaf:	sbb    eax,eax
  403eb1:	aas    
  403eb2:	adc    BYTE PTR [ecx],dh
  403eb4:	bound  eax,QWORD PTR [ecx-0x7b]
  403eb7:	es and eax,0xdf0cb244
  403ebd:	inc    esp
  403ebe:	add    BYTE PTR [ebx-0x7f],bl
  403ec1:	push   eax
  403ec2:	dec    esp
  403ec3:	inc    esp
  403ec4:	retf   
  403ec5:	mov    cs,WORD PTR [ebp-0x7f]
  403ec8:	xchg   dl,cl
  403eca:	inc    esi
  403ecb:	mov    fs,WORD PTR [eax+0x2a5f470c]
  403ed1:	inc    edi
  403ed2:	inc    ebp
  403ed3:	sub    BYTE PTR [ebp+eax*4-0x3d4152bc],ch
  403eda:	inc    ecx
  403edb:	mov    edx,0x3400418
  403ee0:	xchg   ecx,eax
  403ee1:	cmp    eax,0x7f74cc42
  403ee6:	inc    ebx
  403ee7:	mov    ecx,0x8654b5d8
  403eec:	div    bh
  403eee:	push   esp
  403eef:	xlat   BYTE PTR ds:[ebx]
  403ef0:	sbb    al,0x3a
  403ef2:	push   edi
  403ef3:	loopne 0x403e97
  403ef5:	jnp    0x403f4d
  403ef7:	jne    0x403ef9
  403ef9:	add    BYTE PTR [eax],al
  403efb:	mov    al,0xae
  403efd:	push   ebx
  403efe:	inc    edx
  403eff:	push   cs
  403f00:	icebp  
  403f01:	push   ecx
  403f02:	or     esp,esp
  403f04:	xor    dl,BYTE PTR [eax+0x14]
  403f07:	sub    dh,BYTE PTR [ebp+0x51]
  403f0a:	shr    DWORD PTR [eax-0x5b],1
  403f0d:	pop    edx
  403f0e:	mov    esi,0x6f5ae6c6
  403f13:	mov    WORD PTR [ecx+ebx*2],gs
  403f16:	cwde   
  403f17:	jb     0x403f83
  403f19:	pop    eax
  403f1a:	std    
  403f1b:	popa   
  403f1c:	lahf   
  403f1d:	pop    ebp
  403f1e:	jmp    0x23f4:0x135bdd7f
  403f25:	pop    esi
  403f26:	cmp    al,0x1a
  403f28:	bound  ebx,QWORD PTR [edi+0x69]
  403f2b:	push   es
  403f2c:	cli    
  403f2d:	loopne 0x403f85
  403f2f:	loopne 0x403eec
  403f31:	loopne 0x403eba
  403f33:	sub    dh,BYTE PTR [ebp-0x1e]
  403f36:	mov    al,0xac
  403f38:	aaa    
  403f39:	jecxz  0x403f3b
  403f3b:	into   
  403f3c:	cmp    DWORD PTR [esi+eiz*8],edi
  403f3f:	loope  0x403f10
  403f41:	(bad)  
  403f42:	out    0x38,eax
  403f44:	out    0xb7,al
  403f46:	in     eax,0xd7
  403f48:	or     DWORD PTR [edx-0x1c],edi
  403f4b:	adc    al,BYTE PTR [ecx+0x26]
  403f4e:	out    dx,eax
  403f4f:	int    0xa6
  403f51:	jecxz  0x403f41
  403f53:	xchg   esp,eax
  403f54:	nop
  403f55:	mov    ds:0x6062bbec,al
  403f5a:	in     eax,dx
  403f5b:	imul   ebp,DWORD PTR ss:[edi],0xe8
  403f62:	fld    DWORD PTR [edx-0x4aaf1613]
  403f68:	stos   BYTE PTR es:[edi],al
  403f69:	jmp    0x403f8a
  403f6b:	dec    edi
  403f6c:	imul   ebp,edx,0xfd13330a
  403f72:	aad    0xd8
  403f74:	sar    esp,1
  403f76:	sbb    al,0xdf
  403f78:	xchg   esi,eax
  403f79:	(bad)  
  403f7a:	xor    eax,DWORD PTR ds:0x169eff55
  403f80:	sbb    bh,dl
  403f82:	xchg   ecx,eax
  403f83:	hlt    
  403f84:	xlat   BYTE PTR ds:[ebx]
  403f85:	sti    
  403f86:	dec    eax
  403f87:	jb     0x403f27
  403f89:	stc    
  403f8a:	out    0x1f,eax
  403f8c:	pop    esp
  403f8d:	clc    
  403f8e:	and    bl,BYTE PTR [esi+0x0]
  403f91:	repz mov ebp,0xe4f2c28b
  403f97:	mov    ecx,0x574bf083
  403f9c:	inc    esi
  403f9d:	icebp  
  403f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f9f:	inc    esp
  403fa0:	or     esp,esi
  403fa2:	imul   esp,DWORD PTR [ebx-0x7e7f0a36],0x6f8ff78d
  403fac:	dec    edi
  403fad:	idiv   dl
  403faf:	pop    ecx
  403fb0:	js     0x403f8b
  403fb2:	in     eax,0xb7
  403fb4:	mov    ecx,0x8aa9f3d8
  403fb9:	cld    
  403fba:	sub    edi,edx
  403fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbd:	sub    BYTE PTR ds:[esi+ebp*4+0x71],cl
  403fc2:	sbb    eax,0xb39835
  403fc7:	add    BYTE PTR [eax],al
  403fc9:	adc    al,0x8e
  403fcb:	loop   0x403fc1
  403fcd:	into   
  403fce:	mov    cl,BYTE PTR [edi+esi*1-0x39]
  403fd2:	inc    edi
  403fd3:	pop    es
  403fd4:	imul   eax,esp,0x40
  403fd7:	and    DWORD PTR [ecx-0x10246e43],ebp
  403fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fde:	push   ds
  403fdf:	jne    0x40400e
  403fe1:	sahf   
  403fe2:	mov    ds:0xaca3625f,eax
  403fe7:	leave  
  403fe8:	mov    al,ds:0xe633c5a2
  403fed:	rol    BYTE PTR [edx-0x503edbe3],0xb9
  403ff4:	pop    esi
  403ff5:	mov    dh,0xc8
  403ff7:	(bad)  
  403ff8:	pushf  
  403ff9:	scas   eax,DWORD PTR es:[edi]
  403ffa:	cdq    
  403ffb:	in     eax,dx
  403ffc:	fnstenv [ebp-0x53e7bc9a]
  404002:	sti    
  404003:	push   eax
  404004:	push   edi
  404005:	mov    cl,0x4
  404007:	not    DWORD PTR [eax+esi*4+0x32d3853d]
  40400e:	pop    edx
  40400f:	stos   DWORD PTR es:[edi],eax
  404010:	adc    DWORD PTR [ebx],esi
  404012:	xchg   edi,eax
  404013:	addr16 dec ebp
  404015:	sub    BYTE PTR [eax],dh
  404017:	ror    DWORD PTR [edi-0x36c49ed7],0x3b
  40401e:	into   
  40401f:	adc    eax,0xfef33a0b
  404024:	inc    ebx
  404025:	das    
  404026:	fsubr  QWORD PTR [eax]
  404028:	xchg   BYTE PTR [esi],ah
  40402a:	aad    0xd2
  40402c:	rol    BYTE PTR [eax],0x0
  40402f:	add    BYTE PTR [edx+esi*4],bh
  404032:	jl     0x404036
  404034:	xor    eax,0x4c8e2906
  404039:	xchg   edi,eax
  40403a:	push   ss
  40403b:	mov    eax,0x41c79686
  404040:	fcom   DWORD PTR [eax+esi*8+0x65951beb]
  404047:	not    BYTE PTR [esi-0x68]
  40404a:	push   edx
  40404b:	push   eax
  40404c:	(bad)  
  40404d:	cdq    
  40404e:	jnp    0x403ffa
  404050:	adc    DWORD PTR [edx-0x642c7b5c],ebx
  404056:	popa   
  404057:	mov    edi,0x692e909f
  40405c:	push   ebp
  40405d:	xchg   ecx,eax
  40405e:	jg     0x404073
  404060:	or     edx,DWORD PTR [ebx-0x6d36c278]
  404066:	or     eax,0xda8f8627
  40406b:	add    BYTE PTR [esi+ecx*4],bh
  40406e:	mov    ds:0xac8be27a,eax
  404073:	aam    0xa0
  404075:	(bad)  
  404076:	f2xm1  
  404078:	imul   eax,DWORD PTR [edx-0x7cd7a91a],0xffffffb7
  40407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404080:	inc    BYTE PTR [eax-0x7f4b7580]
  404086:	adc    eax,0x227d7399
  40408b:	scas   eax,DWORD PTR es:[edi]
  40408c:	xor    DWORD PTR [ebx+ebp*2+0x4d],edi
  404090:	idiv   DWORD PTR [ebp+0x34]
  404093:	jecxz  0x404095
  404095:	add    BYTE PTR [eax],al
  404097:	cs jg  0x40410b
  40409a:	pop    ds
  40409b:	jns    0x404021
  40409d:	sahf   
  40409e:	add    eax,0x73cf84bb
  4040a3:	in     eax,dx
  4040a4:	xchg   BYTE PTR [eax+0x1d8627d9],bh
  4040aa:	enter  0x8b60,0x4a
  4040ae:	pop    esi
  4040af:	mov    ds:0x8f30089,al
  4040b4:	sbb    BYTE PTR [edi-0x79261d24],al
  4040ba:	dec    ecx
  4040bb:	inc    eax
  4040bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040bd:	test   eax,0xa7e69a76
  4040c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040c3:	or     al,0x2a
  4040c5:	stos   BYTE PTR es:[edi],al
  4040c6:	nop
  4040c7:	into   
  4040c8:	push   0xffffffab
  4040ca:	add    eax,0x32ae9bbf
  4040cf:	loope  0x4040ae
  4040d1:	scas   al,BYTE PTR es:[edi]
  4040d2:	fist   DWORD PTR [eax+eiz*1-0x53]
  4040d6:	les    esp,FWORD PTR [esi+0x7601ac61]
  4040dc:	mov    ch,0xa7
  4040de:	push   cs
  4040df:	mov    bl,dh
  4040e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e2:	fbld   TBYTE PTR [ebx]
  4040e4:	cmp    ah,BYTE PTR [eax+ebp*4+0x2da578bd]
  4040eb:	iret   
  4040ec:	mov    bh,0xa0
  4040ee:	cmp    dh,BYTE PTR [ecx]
  4040f0:	in     eax,dx
  4040f1:	mov    al,ds:0xa3326b83
  4040f6:	dec    esp
  4040f7:	jne    0x404169
  4040f9:	mov    ds:0x39,al
  4040fe:	loope  0x4040ca
  404100:	mov    ch,0x6
  404102:	test   DWORD PTR [eax],0x472d57b4
  404108:	mov    dh,0x60
  40410a:	mov    ebx,0x99f5b784
  40410f:	shl    DWORD PTR [edx-0x4d00003e],0x8b
  404116:	cmc    
  404117:	cmp    eax,0x7c1394b1
  40411c:	mov    al,0x51
  40411e:	push   ecx
  40411f:	fdivr  DWORD PTR [ebx-0x45e658c2]
  404125:	out    dx,eax
  404126:	sahf   
  404127:	push   ebx
  404128:	mov    eax,0xb9956b18
  40412d:	add    BYTE PTR [esi-0x36432184],bh
  404133:	push   0x1c
  404135:	mov    ebp,0xbf5a5880
  40413a:	addr16 mov dh,0x97
  40413d:	mov    esi,0x30a
  404142:	out    dx,eax
  404143:	adc    DWORD PTR [eax+edi*4-0x55f63d6f],edi
  40414a:	test   BYTE PTR [ecx],ch
  40414c:	mov    ch,0x12
  40414e:	fld    QWORD PTR [ecx+0x73388f62]
  404154:	fidiv  WORD PTR [edi]
  404156:	xchg   BYTE PTR [ebx+ebp*2+0x25],dl
  40415a:	and    ebp,DWORD PTR [ebx-0x64ba622a]
  404160:	mov    bl,0xc5
  404162:	add    BYTE PTR [eax],al
  404164:	add    BYTE PTR [eax+0x44],ah
  404167:	or     BYTE PTR [ebp-0x42],bh
  40416a:	push   0xffffffbd
  40416c:	outs   dx,DWORD PTR ds:[esi]
  40416d:	fld    TBYTE PTR [ebx]
  40416f:	add    edi,edx
  404171:	jb     0x4041a7
  404173:	(bad)  
  404174:	dec    edx
  404175:	xlat   BYTE PTR ds:[ebx]
  404176:	retf   0xf26a
  404179:	test   eax,0x7ce0dedb
  40417e:	sbb    ah,BYTE PTR [ebx+0x58]
  404181:	jne    0x4041bf
  404183:	sbb    DWORD PTR [eax-0x30],edx
  404186:	mov    dl,0xa4
  404188:	call   0xfa50d51b
  40418d:	imul   esi,DWORD PTR [edx-0x54],0x42
  404191:	ret    0x7bc2
  404194:	fbld   TBYTE PTR [edi]
  404196:	dec    esp
  404197:	(bad)  
  404198:	addr16 cdq 
  40419a:	add    dh,BYTE PTR [edx+0x75]
  40419d:	sub    al,0xe3
  40419f:	int    0xcd
  4041a1:	mov    edx,0x5f95acf3
  4041a6:	adc    dl,BYTE PTR [ecx]
  4041a8:	sub    eax,0xa46cd8f3
  4041ad:	add    al,0x1e
  4041af:	rcr    DWORD PTR [eax],cl
  4041b1:	je     0x4041b0
  4041b3:	stos   DWORD PTR es:[edi],eax
  4041b4:	iret   
  4041b5:	fabs   
  4041b7:	test   BYTE PTR [ebx+0x51],dh
  4041ba:	test   bl,ah
  4041bc:	lds    esp,FWORD PTR [ebx+0x67]
  4041bf:	cmp    al,0x7a
  4041c1:	jmp    0x404168
  4041c3:	xor    dl,BYTE PTR fs:[ebx+0x49]
  4041c7:	int3   
  4041c8:	mov    es,WORD PTR [eax]
  4041ca:	add    BYTE PTR [eax],al
  4041cc:	jmp    0x404218
  4041ce:	sbb    al,0x3b
  4041d0:	stc    
  4041d1:	outs   dx,DWORD PTR ds:[esi]
  4041d2:	add    eax,DWORD PTR [edi+0x4ffc1741]
  4041d8:	les    ebx,FWORD PTR [ebx-0x7e7b13ac]
  4041de:	mov    bl,0x59
  4041e0:	outs   dx,BYTE PTR ds:[esi]
  4041e1:	and    al,0x8c
  4041e3:	in     eax,0x1e
  4041e5:	out    dx,eax
  4041e6:	jnp    0x40416e
  4041e8:	dec    esi
  4041e9:	xchg   esp,eax
  4041ea:	mov    ds:0x4479ae3a,eax
  4041ef:	(bad)  
  4041f0:	mov    ah,0xfc
  4041f2:	jmp    0x404226
  4041f4:	inc    esp
  4041f5:	push   ds
  4041f6:	adc    esp,esp
  4041f8:	leave  
  4041f9:	inc    eax
  4041fa:	sub    al,0x58
  4041fc:	inc    ecx
  4041fd:	mov    ds:0xc833eddb,eax
  404202:	je     0x404255
  404204:	fwait
  404205:	ds mov ebx,0x93e3a32b
  40420b:	xchg   edi,eax
  40420c:	cmp    ecx,edx
  40420e:	repz and DWORD PTR [ecx],ebp
  404211:	lea    ecx,[esi+ebx*4-0x6f]
  404215:	lods   eax,DWORD PTR ds:[esi]
  404216:	and    ecx,DWORD PTR [ecx-0xc]
  404219:	push   eax
  40421a:	or     esi,ebp
  40421c:	xor    al,0x32
  40421e:	pop    esp
  40421f:	inc    eax
  404220:	xlat   BYTE PTR ds:[ebx]
  404222:	ret    
  404223:	cld    
  404224:	into   
  404225:	push   es
  404226:	aaa    
  404227:	aam    0x74
  404229:	repz adc DWORD PTR [ebx+0x10],edi
  40422d:	jl     0x4041db
  40422f:	or     al,0x0
  404231:	add    BYTE PTR [eax],al
  404233:	pop    ebp
  404234:	lea    ecx,[ecx-0x2019f6cd]
  40423a:	dec    edx
  40423b:	ss jo  0x40427b
  40423e:	in     al,0xb3
  404240:	or     BYTE PTR [ebx-0x7d],bl
  404243:	pop    ds
  404244:	push   ss
  404245:	mov    dh,0x9c
  404247:	stos   DWORD PTR es:[edi],eax
  404248:	pop    esi
  404249:	in     al,0x4b
  40424b:	call   DWORD PTR [ecx-0x16ab0cbf]
  404251:	pop    esi
  404252:	xchg   esp,eax
  404253:	out    0xf7,al
  404255:	mov    ecx,0x137f52bb
  40425a:	ret    
  40425b:	jge    0x40426f
  40425d:	out    dx,al
  40425e:	pop    ebx
  40425f:	mov    ecx,0x640b885b
  404264:	ins    DWORD PTR es:[edi],dx
  404265:	gs and al,0xb0
  404268:	add    eax,0x4d93343b
  40426d:	xchg   esi,eax
  40426e:	sbb    ebp,edi
  404270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404271:	mov    al,0x6b
  404273:	call   0x6c3a:0xe6d30db3
  40427a:	stos   DWORD PTR es:[edi],eax
  40427b:	mov    cl,0xd6
  40427d:	dec    ecx
  40427e:	test   BYTE PTR ds:0xb9e2e71e,ch
  404284:	xor    dl,al
  404286:	cmp    esp,DWORD PTR [eax+ecx*8]
  404289:	dec    ebx
  40428a:	add    esp,esi
  40428c:	mov    edi,0x38421c26
  404291:	ror    dl,0xef
  404294:	and    eax,0x639d
  404299:	add    BYTE PTR [ebx],bh
  40429b:	into   
  40429c:	cld    
  40429d:	mov    eax,DWORD PTR [ebx+eax*2]
  4042a0:	pop    ecx
  4042a1:	mov    bl,0x40
  4042a3:	stos   DWORD PTR es:[edi],eax
  4042a4:	add    BYTE PTR [edi-0x40],dh
  4042a7:	and    al,0xee
  4042a9:	rcr    BYTE PTR [ecx-0x32],cl
  4042ac:	push   esi
  4042ad:	xor    al,0x48
  4042af:	outs   dx,DWORD PTR ds:[esi]
  4042b0:	push   cs
  4042b1:	adc    DWORD PTR [edi-0x6e5049ff],esi
  4042b7:	ja     0x40425d
  4042b9:	mov    bh,BYTE PTR [eax-0x3f1ce406]
  4042bf:	iret   
  4042c0:	cmp    DWORD PTR [esi],0x58392448
  4042c6:	fcomp  st(0)
  4042c8:	sub    esi,DWORD PTR [ebp-0x156ce2ff]
  4042ce:	pop    ecx
  4042cf:	in     eax,0x3a
  4042d1:	pop    es
  4042d2:	addr16 xchg ecx,eax
  4042d4:	and    DWORD PTR [ecx+0x1],0xffffffdd
  4042d8:	nop
  4042d9:	jl     0x404283
  4042db:	xchg   edi,eax
  4042dc:	sub    DWORD PTR ds:0xb8b442cf,ebx
  4042e2:	stc    
  4042e3:	scas   al,BYTE PTR es:[edi]
  4042e4:	or     al,0x96
  4042e6:	dec    eax
  4042e7:	cmp    bl,BYTE PTR [esi]
  4042e9:	xor    esi,DWORD PTR [ecx-0x3eaa594b]
  4042ef:	cwde   
  4042f0:	(bad)  
  4042f1:	jo     0x40434b
  4042f3:	fld    QWORD PTR [ebp-0x32]
  4042f6:	jmp    0x12b978a
  4042fb:	in     al,0xeb
  4042fd:	add    BYTE PTR [eax],0x0
  404300:	add    al,bh
  404302:	mov    dh,0x71
  404304:	pop    ds
  404305:	xchg   ecx,eax
  404306:	aas    
  404307:	leave  
  404308:	stc    
  404309:	jo     0x4042b8
  40430b:	fist   DWORD PTR [ecx+ecx*2+0x10856341]
  404312:	in     al,dx
  404313:	push   0x20
  404315:	mov    ecx,0xe8fed387
  40431a:	hlt    
  40431b:	rcr    BYTE PTR [ebx+0x7980f1],0xc1
  404322:	mov    al,0x5c
  404324:	in     al,0xbc
  404326:	push   edi
  404327:	loope  0x404385
  404329:	call   0xe87f:0x374e5478
  404330:	idiv   BYTE PTR [ecx+0x44ae8b2a]
  404336:	data16 aaa 
  404338:	push   ss
  404339:	and    al,BYTE PTR [edx-0x7e]
  40433c:	add    al,0xcf
  40433e:	popf   
  40433f:	cmp    eax,0xe915e6bc
  404344:	and    ebx,ebx
  404346:	ficom  DWORD PTR [ecx+ebx*4+0x6d]
  40434a:	int    0xe0
  40434c:	mov    edx,DWORD PTR [eax+0x32]
  40434f:	pop    esp
  404350:	xor    edx,DWORD PTR [ecx]
  404352:	sub    eax,0xd7cced59
  404357:	in     eax,0x55
  404359:	stos   BYTE PTR es:[edi],al
  40435a:	clc    
  40435b:	dec    edi
  40435c:	inc    edi
  40435d:	inc    edi
  40435e:	(bad)  
  40435f:	jmp    0x404360
  404361:	fisub  WORD PTR [edi+0x623a]
  404367:	add    bl,ah
  404369:	inc    eax
  40436a:	xchg   edx,ebx
  40436c:	jne    0x4042fc
  40436e:	xor    cl,al
  404370:	dec    eax
  404371:	test   DWORD PTR [esi-0x126ae990],ecx
  404377:	sub    BYTE PTR [ebx+0x5e],ch
  40437a:	push   ecx
  40437b:	nop
  40437c:	jge    0x4043ce
  40437e:	in     al,0x82
  404380:	loopne 0x404337
  404382:	push   edi
  404383:	cmp    cl,BYTE PTR [ecx-0x52]
  404386:	mov    fs,WORD PTR [edi+0x1f32e534]
  40438c:	xchg   edx,eax
  40438d:	lds    eax,FWORD PTR [esi+0x3a205f0d]
  404393:	mov    ch,0x26
  404395:	inc    ax
  404397:	mov    ebp,0x5fc7cdb
  40439c:	repz rcr dl,0x48
  4043a0:	in     al,0x65
  4043a2:	inc    ecx
  4043a3:	cmc    
  4043a4:	inc    esp
  4043a5:	lods   eax,DWORD PTR ds:[esi]
  4043a6:	cmp    DWORD PTR [edx],esp
  4043a8:	and    DWORD PTR [edx+0x13],edx
  4043ab:	sahf   
  4043ac:	jns    0x4043e6
  4043ae:	jno    0x4043db
  4043b0:	jnp    0x40436d
  4043b2:	retf   0x1397
  4043b5:	cmc    
  4043b6:	mov    edx,0x61f9cbf4
  4043bb:	dec    eax
  4043bc:	xor    esp,DWORD PTR [eax+0x2]
  4043bf:	std    
  4043c0:	and    DWORD PTR [ebx-0x5c36bed7],eax
  4043c6:	push   ecx
  4043c7:	xchg   esi,eax
  4043c8:	and    al,0x47
  4043ca:	jmp    0x4043f5
  4043cc:	add    BYTE PTR [eax],al
  4043ce:	add    BYTE PTR [eax+ecx*2+0x6dbe9f99],dh
  4043d5:	mov    dl,0x23
  4043d7:	push   cs
  4043d8:	fwait
  4043d9:	or     ch,BYTE PTR [ebx-0x42]
  4043dc:	push   DWORD PTR [ecx]
  4043de:	xlat   BYTE PTR ds:[ebx]
  4043df:	(bad)  
  4043e0:	and    edx,edx
  4043e2:	bound  edx,QWORD PTR [eax*4+0xd94de79]
  4043e9:	or     BYTE PTR [ecx],0xb1
  4043ec:	jo     0x404388
  4043ee:	mov    ch,0x69
  4043f0:	xchg   edi,eax
  4043f1:	dec    ecx
  4043f2:	add    BYTE PTR [ebx-0x24],cl
  4043f5:	loope  0x4043b2
  4043f7:	ret    
  4043f8:	push   ebp
  4043f9:	repnz fidivr WORD PTR [ebx+0x18]
  4043fd:	pop    ecx
  4043fe:	arpl   WORD PTR [ebx],ax
  404400:	mov    edi,0xa411d6aa
  404405:	xchg   ecx,eax
  404406:	push   0x59
  404408:	sub    BYTE PTR [ecx-0x43],0xf4
  40440c:	out    0xc1,eax
  40440e:	add    DWORD PTR [ecx+ebp*4+0x21],esp
  404412:	mov    ah,0x4e
  404414:	mov    edx,?
  404416:	pop    es
  404417:	inc    BYTE PTR [esi]
  404419:	add    DWORD PTR [ecx+0x1],0xc
  40441d:	push   ds
  40441e:	fidiv  DWORD PTR [esi-0x776079d]
  404424:	jno    0x4043bb
  404426:	mov    ds:0xca33f9ac,al
  40442b:	add    edx,DWORD PTR [ebp-0x23688eaf]
  404431:	scas   al,BYTE PTR es:[edi]
  404432:	adc    al,BYTE PTR [eax]
  404434:	add    BYTE PTR [eax],al
  404436:	cli    
  404437:	out    dx,al
  404438:	leave  
  404439:	cmp    DWORD PTR [esi+0x35265c86],ecx
  40443f:	into   
  404440:	stc    
  404441:	add    al,0xc9
  404443:	xlat   BYTE PTR es:[ebx]
  404445:	pop    esi
  404446:	sub    al,0x34
  404448:	jb     0x404407
  40444a:	sar    BYTE PTR [ebx+ecx*1+0x265157b5],0x96
  404452:	or     ebx,DWORD PTR [edx-0x54b01280]
  404458:	popf   
  404459:	dec    esi
  40445a:	add    al,BYTE PTR [edi+ebp*8-0x63]
  40445e:	mov    esi,0x27d0a30
  404463:	mov    eax,0xcab0e664
  404468:	add    DWORD PTR [ebp-0x5],0x1c2d1821
  40446f:	scas   al,BYTE PTR es:[edi]
  404470:	mov    ch,0xd
  404472:	add    BYTE PTR [esi-0x6d],0x75
  404476:	adc    eax,0x79d62e54
  40447b:	pushf  
  40447c:	push   eax
  40447d:	(bad)  
  40447e:	retf   0x6d74
  404481:	gs cs cld 
  404484:	retf   0xccfd
  404487:	push   cs
  404488:	out    0x1c,al
  40448a:	daa    
  40448b:	xchg   WORD PTR [ebp-0x78],dx
  40448f:	jmp    0x4044b2
  404491:	test   ch,0x82
  404494:	add    ah,bh
  404496:	outs   dx,DWORD PTR ds:[esi]
  404497:	xchg   ebp,eax
  404498:	xchg   esi,eax
  404499:	cdq    
  40449a:	add    BYTE PTR [eax],al
  40449c:	add    BYTE PTR [esi-0x27],al
  40449f:	sub    eax,0x26531e80
  4044a4:	sbb    eax,0xfb9e9fb5
  4044a9:	(bad)  
  4044aa:	dec    ecx
  4044ab:	mov    WORD PTR [esi+0x3734a5de],ss
  4044b1:	dec    ebp
  4044b2:	repnz test al,0x52
  4044b5:	es jge 0x4044c9
  4044b8:	lods   al,BYTE PTR ds:[esi]
  4044b9:	xchg   esi,eax
  4044ba:	call   0x84b00dc1
  4044bf:	mov    ebx,0xe3a7665f
  4044c4:	cli    
  4044c5:	jle    0x404512
  4044c7:	pop    ebx
  4044c8:	aam    0xaf
  4044ca:	popf   
  4044cb:	dec    ecx
  4044cc:	jno    0x404514
  4044ce:	push   ebx
  4044cf:	icebp  
  4044d0:	or     ch,dh
  4044d2:	test   BYTE PTR [ebp+eiz*1-0x32],ch
  4044d6:	call   0x7c9ec8ae
  4044db:	(bad)  
  4044dc:	sahf   
  4044dd:	mov    bh,0xef
  4044df:	jge    0x4044c2
  4044e1:	mov    bh,0x27
  4044e3:	(bad)  
  4044e4:	cmp    al,0xd
  4044e6:	lds    ebp,FWORD PTR [esi+0x5a]
  4044e9:	jg     0x40451b
  4044eb:	jl     0x4044a4
  4044ed:	push   esi
  4044ee:	mov    ebp,0x9c516c4
  4044f3:	pop    ecx
  4044f4:	repz pop edi
  4044f6:	data16 loope 0x404486
  4044f9:	out    dx,al
  4044fa:	adc    dh,bl
  4044fc:	push   0x3e4b5f07
  404501:	add    BYTE PTR [eax],al
  404503:	add    bh,ch
  404505:	mov    ebx,0x30c69b13
  40450a:	stos   DWORD PTR es:[edi],eax
  40450b:	mov    ch,0x57
  40450d:	lds    edi,FWORD PTR [ecx+0x128ad10]
  404513:	add    BYTE PTR [edx],bl
  404515:	pop    edx
  404516:	test   eax,0x157b2f9c
  40451b:	and    al,0x91
  40451d:	mov    cl,0x9f
  40451f:	ss push esp
  404521:	push   edx
  404522:	sbb    al,0x8e
  404524:	cmp    eax,0xd8866612
  404529:	repnz fnstcw WORD PTR [esi]
  40452c:	mov    dh,0xb9
  40452e:	outs   dx,DWORD PTR ds:[esi]
  40452f:	sub    al,0x53
  404531:	sbb    dl,bl
  404533:	xchg   esp,eax
  404534:	push   0xffffff83
  404536:	add    al,0x9
  404538:	mov    edi,0xe1b1b861
  40453d:	jmp    0x1bb0:0xc924a30c
  404544:	add    bl,BYTE PTR [ecx+0x3bf743d1]
  40454a:	outs   dx,BYTE PTR ds:[esi]
  40454b:	sti    
  40454c:	mov    DWORD PTR [eax-0x25],esi
  40454f:	jmp    0x51a7d8c0
  404554:	adc    eax,0xb0ccb04c
  404559:	push   0xe3be740c
  40455e:	mov    eax,0x5005b66
  404563:	ficomp WORD PTR [edx]
  404565:	add    eax,DWORD PTR [eax]
  404567:	add    BYTE PTR [eax],al
  404569:	add    BYTE PTR [eax],al
  40456b:	fld    QWORD PTR [ecx]
  40456d:	xor    BYTE PTR [esi+0x2c60a874],dl
  404573:	sub    DWORD PTR [ebx+0x5ddba50],0xffffffc4
  40457a:	sbb    edx,ebp
  40457c:	add    ah,dh
  40457e:	(bad)  
  40457f:	jae    0x404569
  404581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404582:	xor    eax,0xa394ef24
  404587:	(bad)  
  404588:	iret   
  404589:	mov    BYTE PTR [edx],dh
  40458b:	rcl    esi,cl
  40458d:	mov    eax,0xd74ff3a4
  404592:	jmp    0xda12626c
  404597:	jnp    0x404530
  404599:	jne    0x4045e7
  40459b:	fsub   DWORD PTR [ebp+0x72]
  40459e:	jl     0x4045fe
  4045a0:	push   ebp
  4045a1:	ins    BYTE PTR es:[edi],dx
  4045a2:	sub    eax,0x1d6d3fec
  4045a7:	bound  ecx,QWORD PTR [ebx]
  4045a9:	jne    0x4045bb
  4045ab:	(bad)  
  4045ad:	jae    0x4045cf
  4045af:	add    DWORD PTR [ecx],0x2c2b716b
  4045b5:	outs   dx,BYTE PTR ds:[esi]
  4045b6:	inc    ecx
  4045b7:	dec    ebp
  4045b8:	stos   BYTE PTR es:[edi],al
  4045b9:	leave  
  4045ba:	aam    0xe6
  4045bc:	xchg   edx,eax
  4045bd:	into   
  4045be:	in     al,0x48
  4045c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c1:	xlat   BYTE PTR ds:[ebx]
  4045c2:	mov    ch,0xc2
  4045c4:	xor    cl,dl
  4045c6:	test   DWORD PTR [ecx+eiz*4],esi
  4045c9:	pop    ds
  4045ca:	cwde   
  4045cb:	popf   
  4045cc:	dec    ebx
  4045cd:	sbb    DWORD PTR [eax+0x33000000],ebp
  4045d3:	mov    ebx,0x29b9f921
  4045d8:	es leave 
  4045da:	pop    ds
  4045db:	les    eax,FWORD PTR [edx]
  4045dd:	pop    esp
  4045de:	mov    ah,0x50
  4045e0:	push   es
  4045e1:	ins    BYTE PTR es:[edi],dx
  4045e2:	cmp    bl,BYTE PTR [edx-0x4]
  4045e5:	cmp    al,0x90
  4045e7:	inc    edx
  4045e8:	sti    
  4045e9:	or     al,0x6
  4045eb:	test   eax,0xf43b201d
  4045f0:	sbb    dl,BYTE PTR [eax]
  4045f2:	popf   
  4045f3:	bound  esp,QWORD PTR [ebx]
  4045f5:	inc    ecx
  4045f6:	rsqrtps xmm4,XMMWORD PTR [ecx+esi*2]
  4045fa:	popa   
  4045fb:	int3   
  4045fc:	add    ah,ah
  4045fe:	ret    0x7d8
  404601:	aam    0x34
  404603:	cmp    dh,0x84
  404606:	(bad)  
  404607:	dec    edx
  404608:	stc    
  404609:	mov    ah,0x58
  40460b:	pop    es
  40460c:	sbb    al,0x77
  40460e:	fwait
  40460f:	mov    al,ds:0x325b71ab
  404614:	xor    ch,BYTE PTR [eax-0x56]
  404617:	mov    esp,0x46aa6f7d
  40461c:	sti    
  40461d:	retf   
  40461e:	pop    ss
  40461f:	stos   BYTE PTR es:[edi],al
  404620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404621:	int3   
  404622:	aas    
  404623:	sbb    al,0x15
  404625:	aad    0xe6
  404627:	aad    0x82
  404629:	ror    dh,cl
  40462b:	aas    
  40462c:	iret   
  40462d:	retf   0x72c3
  404630:	mov    eax,0x20e0f3cd
  404635:	aam    0x0
  404637:	add    BYTE PTR [eax],al
  404639:	and    al,BYTE PTR [edi-0x32d2cb2]
  40463f:	(bad)  
  404640:	ja     0x4046a1
  404642:	pop    ebx
  404643:	xchg   edi,eax
  404644:	jo     0x40467d
  404646:	jmp    0x7fbeaf70
  40464b:	xor    DWORD PTR [esi-0x6a],ebp
  40464e:	adc    eax,0x848b0611
  404653:	add    DWORD PTR ds:[ebx+0xe],ebp
  404657:	scas   eax,DWORD PTR es:[edi]
  404658:	clc    
  404659:	sbb    ebx,DWORD PTR [eax-0x68]
  40465c:	call   FWORD PTR [ebx]
  40465e:	jmp    0x1c21:0x8da71b15
  404665:	scas   eax,DWORD PTR es:[edi]
  404666:	mul    DWORD PTR [edi+0x7771f625]
  40466c:	and    bl,dh
  40466e:	jecxz  0x40468e
  404670:	enter  0x76b2,0xe8
  404674:	into   
  404675:	or     BYTE PTR [ecx+esi*2],0xd6
  404679:	shl    DWORD PTR [edx+0x7e],cl
  40467c:	rol    DWORD PTR [ebx],1
  40467e:	icebp  
  40467f:	div    DWORD PTR [esi+ebp*2-0x72]
  404683:	out    0x71,eax
  404685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404686:	add    al,0x0
  404688:	push   esi
  404689:	dec    eax
  40468a:	stos   DWORD PTR es:[edi],eax
  40468b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468c:	sbb    DWORD PTR [edi-0x45],0xcdf1e133
  404693:	mov    ds:0x349df0ee,al
  404698:	jg     0x404650
  40469a:	ins    BYTE PTR es:[edi],dx
  40469b:	mov    cs,WORD PTR [eax+0x0]
  40469e:	add    BYTE PTR [eax],al
  4046a0:	test   eax,0x6c6187c
  4046a5:	adc    bh,BYTE PTR [ebx+0x2ce1fbf1]
  4046ab:	pop    eax
  4046ac:	shl    DWORD PTR [edx],cl
  4046ae:	xchg   edi,eax
  4046af:	inc    edi
  4046b0:	aam    0x42
  4046b2:	add    DWORD PTR [edx-0x20bca1b],edx
  4046b8:	in     al,0x25
  4046ba:	bound  ebp,QWORD PTR [edx+edx*8-0x2a]
  4046be:	xlat   BYTE PTR ds:[ebx]
  4046bf:	sbb    edx,DWORD PTR ds:0xf2954e07
  4046c5:	jns    0x4046b4
  4046c7:	loop   0x4046c0
  4046c9:	imul   edi,DWORD PTR [ebx+0x6b],0xf4c19857
  4046d0:	dec    ecx
  4046d1:	enter  0x4c57,0xbf
  4046d5:	mov    ebp,0xadc1fbc6
  4046da:	push   eax
  4046db:	(bad)  
  4046dc:	retf   0xea5e
  4046df:	int    0x9f
  4046e1:	mov    ?,WORD PTR [ebx+ecx*2+0x3a]
  4046e5:	add    bl,bh
  4046e7:	aam    0x2e
  4046e9:	repnz dec eax
  4046eb:	gs cmp eax,0x3cb2f323
  4046f1:	push   ebx
  4046f2:	gs xor al,0x7d
  4046f5:	and    eax,0x3583e358
  4046fa:	into   
  4046fb:	dec    edx
  4046fc:	mov    WORD PTR [esi],es
  4046fe:	je     0x4046b5
  404700:	pop    ebp
  404701:	xlat   BYTE PTR ds:[ebx]
  404702:	loope  0x404704
  404704:	add    BYTE PTR [eax],al
  404706:	add    BYTE PTR [eax],ah
  404708:	shl    BYTE PTR [ebp-0x6a3060bf],1
  40470e:	xlat   BYTE PTR ds:[ebx]
  40470f:	es mov ebx,0xb5696dc4
  404715:	hlt    
  404716:	sti    
  404717:	cdq    
  404718:	add    ch,cl
  40471a:	push   0xffffffe6
  40471c:	add    cl,bl
  40471e:	cld    
  40471f:	outs   dx,DWORD PTR ds:[esi]
  404720:	call   0xe8208dac
  404725:	mov    bh,0xd0
  404727:	push   esi
  404728:	mov    ds:0xc99732c,eax
  40472d:	sbb    eax,0x4ba170e5
  404732:	pop    edi
  404733:	call   FWORD PTR [esi+0x64ac97b]
  404739:	jno    0x404777
  40473b:	mov    ch,0x9
  40473d:	inc    ecx
  40473e:	stos   BYTE PTR es:[edi],al
  40473f:	sbb    al,0xa5
  404741:	movups xmm2,XMMWORD PTR [ebx]
  404744:	pushf  
  404745:	pop    ds
  404746:	xchg   BYTE PTR [ebp+0x2a25b4ff],al
  40474c:	add    BYTE PTR [ebp-0x2c19dc4d],al
  404752:	or     esp,ebp
  404754:	jmp    0xef9:0xd0ac9fe3
  40475b:	jecxz  0x40472c
  40475d:	leave  
  40475e:	cwde   
  40475f:	pop    edx
  404760:	mov    edx,0xb5552298
  404765:	test   al,0xb4
  404767:	rcr    DWORD PTR [ecx],cl
  404769:	cmp    eax,0x17
  40476e:	in     al,dx
  40476f:	push   ss
  404770:	or     eax,0x5c2b9581
  404775:	cmp    ebx,DWORD PTR [edx+0x34]
  404778:	ins    BYTE PTR es:[edi],dx
  404779:	lods   eax,DWORD PTR ds:[esi]
  40477a:	pop    edi
  40477b:	xor    al,BYTE PTR [ebx-0x4cd28fe0]
  404781:	mov    dh,0xf3
  404783:	mov    al,0x71
  404785:	loop   0x404786
  404787:	sti    
  404788:	jb     0x40475c
  40478a:	mov    DWORD PTR [esi-0x31],esi
  40478d:	inc    edi
  40478e:	sbb    al,BYTE PTR [ebx-0x2a]
  404791:	ja     0x404717
  404793:	mov    ah,0xcc
  404795:	es out 0x9c,al
  404798:	(bad)  
  404799:	push   ss
  40479a:	jo     0x4047e9
  40479c:	and    eax,0x201be10b
  4047a1:	cmp    ebp,DWORD PTR [edi-0x55]
  4047a4:	push   ss
  4047a5:	push   0xffffffed
  4047a7:	mov    ch,0x1d
  4047a9:	pop    edx
  4047aa:	pop    ebx
  4047ab:	push   esp
  4047ac:	cli    
  4047ad:	into   
  4047ae:	call   0x773f42ef
  4047b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b4:	add    ebp,DWORD PTR [esi-0x61ff8d2c]
  4047ba:	inc    edx
  4047bb:	add    cl,bh
  4047bd:	xchg   edx,eax
  4047be:	aaa    
  4047bf:	sub    esp,edi
  4047c1:	mov    ds:0xf2029aa1,al
  4047c6:	fild   DWORD PTR [esi-0x5e9a3dff]
  4047cc:	and    eax,0x1f2fbe57
  4047d1:	add    BYTE PTR [bx+si],al
  4047d4:	add    BYTE PTR [eax],ch
  4047d6:	mov    bh,0x17
  4047d8:	ss ret 0x1c21
  4047dc:	push   es
  4047dd:	dec    esp
  4047de:	stos   BYTE PTR es:[edi],al
  4047df:	iret   
  4047e0:	sbb    eax,ebp
  4047e2:	push   ss
  4047e3:	aam    0x2b
  4047e5:	push   ebx
  4047e6:	mov    al,ds:0x48c97acd
  4047eb:	(bad)  
  4047ec:	dec    edx
  4047ed:	aaa    
  4047ee:	(bad)  
  4047ef:	push   0xffffffdf
  4047f1:	mov    WORD PTR [ecx],?
  4047f3:	imul   ebp,edi,0xbe70c11a
  4047f9:	mov    al,0x4f
  4047fb:	je     0x40478b
  4047fd:	push   ds
  4047fe:	pop    es
  4047ff:	mov    edi,0x48af50d1
  404804:	shl    BYTE PTR [eax+0x21],cl
  404807:	ror    ebx,1
  404809:	mov    cl,0xca
  40480b:	push   ds
  40480c:	leave  
  40480d:	loope  0x404843
  40480f:	cwde   
  404810:	ins    BYTE PTR es:[edi],dx
  404811:	push   esp
  404812:	cwde   
  404813:	inc    edi
  404814:	addr16 cmp al,0x2a
  404817:	mov    dh,0x6e
  404819:	cmc    
  40481a:	ret    
  40481b:	and    DWORD PTR [esi-0x3],esi
  40481e:	dec    ebp
  40481f:	inc    ecx
  404820:	test   BYTE PTR [ecx],0xbd
  404823:	mov    ?,ebp
  404825:	fst    DWORD PTR [edx+0x1f]
  404828:	add    eax,0xffa89939
  40482d:	sub    ah,BYTE PTR [edi]
  40482f:	and    ecx,DWORD PTR es:[ebp+eax*8+0x3bb42091]
  404837:	clc    
  404838:	sbb    DWORD PTR [eax],eax
  40483a:	add    BYTE PTR [eax],al
  40483c:	jge    0x4047ef
  40483e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40483f:	sbb    al,BYTE PTR [ebp+0x1f]
  404842:	xor    ah,BYTE PTR [edx]
  404844:	inc    eax
  404845:	xchg   edx,eax
  404846:	pop    ebp
  404847:	and    DWORD PTR [eax-0x4],esi
  40484a:	retf   
  40484b:	sbb    BYTE PTR [ecx+0x66],al
  40484e:	mov    ebx,0x34d8511b
  404853:	mul    ebp
  404855:	jnp    0x404899
  404857:	cld    
  404858:	lods   eax,DWORD PTR ds:[esi]
  404859:	add    eax,0x5fe505cb
  40485e:	xchg   esp,eax
  40485f:	dec    BYTE PTR [esi]
  404861:	repnz stos DWORD PTR es:[edi],eax
  404863:	push   0xfffffff8
  404865:	pusha  
  404866:	fwait
  404867:	imul   ebp,eax,0xc97001ee
  40486d:	je     0x40489c
  40486f:	jae    0x40480a
  404871:	or     ch,BYTE PTR [ebx+0x74691ccf]
  404877:	aam    0x24
  404879:	xlat   BYTE PTR ds:[ebx]
  40487a:	inc    DWORD PTR [esi+edi*1]
  40487d:	or     BYTE PTR [ebx+0x1d702d12],0x82
  404884:	rol    esp,cl
  404886:	mov    al,0x8d
  404888:	rcl    BYTE PTR [esi+eiz*1-0x639bf6e4],1
  40488f:	jmp    0x40489c
  404891:	je     0x40489d
  404893:	fimul  WORD PTR gs:[edx]
  404896:	test   eax,0x3edadd92
  40489b:	sti    
  40489c:	int    0x29
  40489e:	test   esp,esp
  4048a0:	add    BYTE PTR [eax],al
  4048a2:	add    al,dh
  4048a4:	aaa    
  4048a5:	adc    edi,DWORD PTR [esp+edx*2+0x4d]
  4048a9:	or     BYTE PTR [ebx+0x47],0x1d
  4048ad:	adc    al,0xd2
  4048af:	daa    
  4048b0:	in     al,dx
  4048b1:	lods   eax,DWORD PTR ds:[esi]
  4048b2:	fst    QWORD PTR [esi]
  4048b4:	cld    
  4048b5:	aaa    
  4048b6:	pop    ebx
  4048b7:	rcl    DWORD PTR [ecx+0x61c2449b],0xd
  4048be:	mov    ch,0xb4
  4048c0:	mov    al,0xb7
  4048c2:	loop   0x40487d
  4048c4:	shl    BYTE PTR [ecx],0x6f
  4048c7:	mov    al,ds:0xa318d4b5
  4048cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048cd:	inc    edx
  4048ce:	cmp    DWORD PTR [ebx],0x3aeef854
  4048d4:	test   BYTE PTR [esi+0x68],ch
  4048d7:	aad    0xf8
  4048d9:	int3   
  4048da:	test   edi,0xc0865ae8
  4048e0:	pop    ss
  4048e1:	loope  0x4048b4
  4048e3:	aad    0x47
  4048e5:	ja     0x404958
  4048e7:	cmp    BYTE PTR [esi],bh
  4048e9:	out    0xde,al
  4048eb:	cmp    eax,0x2d4f702e
  4048f0:	(bad)  
  4048f2:	clc    
  4048f3:	out    dx,eax
  4048f4:	or     ebx,DWORD PTR [eax+eax*1-0x5b]
  4048f8:	out    0x9d,al
  4048fa:	push   DWORD PTR [edx]
  4048fc:	out    0xad,al
  4048fe:	imul   edi,DWORD PTR [ebx+0x1cd3fefb],0x45cef8
  404908:	add    BYTE PTR [eax],al
  40490a:	stos   BYTE PTR es:[edi],al
  40490b:	popf   
  40490c:	loope  0x404986
  40490e:	cmp    eax,0x14eed19f
  404913:	pop    es
  404914:	adc    DWORD PTR [ebx+eax*8+0x4],0xffffffb3
  404919:	ret    0x12d
  40491c:	es popa 
  40491e:	jp     0x404903
  404920:	adc    eax,0x470213f7
  404925:	dec    ebp
  404926:	xchg   esp,eax
  404927:	stc    
  404928:	jbe    0x404905
  40492a:	fs mov edx,0xd2334a6a
  404930:	pop    edx
  404931:	fcomp  QWORD PTR [edx-0x38]
  404934:	or     esp,DWORD PTR [esi-0x3]
  404937:	sar    BYTE PTR [ebx],cl
  404939:	lock and DWORD PTR [edi],0xffffffae
  40493d:	push   ebx
  40493e:	hlt    
  40493f:	sub    al,0x9e
  404941:	lds    ebx,FWORD PTR [ebp+0x15]
  404944:	iret   
  404945:	jg     0x4048d1
  404947:	push   ss
  404948:	(bad)  
  404949:	jmp    0x1d327865
  40494e:	shr    BYTE PTR ds:0x14a98ac2,0x93
  404955:	xor    BYTE PTR [esi],ch
  404957:	das    
  404958:	mov    ds:0x36b3b0a6,eax
  40495d:	add    eax,0x9306d107
  404962:	outs   dx,BYTE PTR ds:[esi]
  404963:	leave  
  404964:	push   edi
  404965:	sub    DWORD PTR [ecx],edi
  404967:	shl    BYTE PTR [edi-0x41],cl
  40496a:	pop    ecx
  40496b:	add    BYTE PTR [edx+0x2e],bh
  40496e:	add    BYTE PTR [eax],al
  404970:	add    BYTE PTR [esi-0xc47b61d],cl
  404976:	ficomp DWORD PTR [ebx]
  404978:	sbb    esi,ecx
  40497a:	add    edx,DWORD PTR ds:0xf921872b
  404980:	mov    ebp,0x8df86cdc
  404985:	push   edx
  404986:	repz (bad) 
  404988:	fsubp  st(0),st
  40498a:	mov    ds:0xad6eef01,al
  40498f:	add    eax,DWORD PTR [eax]
  404991:	repz push es
  404993:	or     DWORD PTR [ecx],esi
  404995:	xor    al,dl
  404997:	in     eax,dx
  404998:	popa   
  404999:	jno    0x404964
  40499b:	(bad)  
  40499c:	push   edx
  40499d:	mov    al,0xc
  40499f:	sbb    ch,al
  4049a1:	out    dx,eax
  4049a2:	call   0xa749:0xfe36f42c
  4049a9:	ins    DWORD PTR es:[edi],dx
  4049aa:	std    
  4049ab:	inc    edx
  4049ac:	xchg   esi,eax
  4049ad:	mov    ah,0xd8
  4049af:	retf   0xeb8a
  4049b2:	faddp  st(1),st
  4049b4:	mov    ebx,0xe8953a3a
  4049b9:	jns    0x404a0c
  4049bb:	mov    al,0xd9
  4049bd:	test   al,0x74
  4049bf:	outs   dx,DWORD PTR ds:[esi]
  4049c0:	dec    edi
  4049c1:	out    0x12,eax
  4049c3:	push   esi
  4049c4:	jle    0x404a04
  4049c6:	sub    DWORD PTR ss:0x1c8c2575,0x12c15aac
  4049d1:	and    ah,BYTE PTR [ecx-0x36]
  4049d4:	and    eax,DWORD PTR [eax]
  4049d6:	add    BYTE PTR [eax],al
  4049d8:	add    edi,DWORD PTR [eax-0x51]
  4049db:	jo     0x404a1d
  4049dd:	(bad)  
  4049de:	xchg   esp,eax
  4049df:	inc    ecx
  4049e0:	xor    DWORD PTR [esi+0x54bed755],0xb3e7e66e
  4049ea:	mov    esi,DWORD PTR [ebp-0x7b7f5ce4]
  4049f0:	gs pop es
  4049f2:	imul   ecx,DWORD PTR [eax],0x5b
  4049f5:	inc    eax
  4049f6:	add    BYTE PTR [ebx],0x5a
  4049f9:	call   FWORD PTR [eax-0x7f3dd52a]
  4049ff:	in     eax,dx
  404a00:	sub    DWORD PTR [ecx+0x3bb62ccf],eax
  404a06:	mov    esi,0x9cfa9f17
  404a0b:	inc    edx
  404a0c:	les    edi,FWORD PTR [ebp+0x7ced499c]
  404a12:	jl     0x404a93
  404a14:	iret   
  404a15:	push   0xaa06846d
  404a1a:	dec    esi
  404a1b:	jno    0x404a4a
  404a1d:	out    0x4e,eax
  404a1f:	pop    edx
  404a20:	sub    BYTE PTR fs:[eax-0x65],bh
  404a24:	shl    BYTE PTR [ecx+edx*4-0x50],cl
  404a28:	mov    ds:0x70c5aaa5,eax
  404a2d:	loop   0x4049c1
  404a2f:	mov    esi,0x46c42381
  404a34:	test   DWORD PTR [eax-0x5b],esi
  404a37:	cmp    eax,0x18c6b18c
  404a3c:	add    BYTE PTR [eax],al
  404a3e:	add    BYTE PTR [edi-0x61cc2912],dh
  404a44:	das    
  404a45:	add    bl,dh
  404a47:	or     DWORD PTR [ebp+0x9],ebp
  404a4a:	fisubr DWORD PTR [edx]
  404a4c:	scas   al,BYTE PTR es:[edi]
  404a4d:	loop   0x404a4b
  404a4f:	sti    
  404a50:	jmp    0x3d46:0x2bbb07da
  404a57:	mov    ebp,0xf4462799
  404a5c:	pop    eax
  404a5d:	add    al,0x33
  404a5f:	mov    edi,0xd6181517
  404a64:	(bad)  
  404a65:	inc    ecx
  404a66:	fldenv [ecx-0x6b]
  404a69:	dec    ebx
  404a6a:	repnz xor dl,BYTE PTR [eax+eax*1+0x60]
  404a6f:	in     al,dx
  404a70:	ja     0x404ae7
  404a72:	pop    ecx
  404a73:	aas    
  404a74:	jge    0x404aaa
  404a76:	(bad)  
  404a77:	jno    0x404ad3
  404a79:	sti    
  404a7a:	out    dx,eax
  404a7b:	je     0x404a08
  404a7d:	mov    edx,0x79bc960c
  404a82:	or     eax,0x3a38adc5
  404a87:	jl     0x404aa8
  404a89:	call   DWORD PTR [ebx+0x5f]
  404a8c:	dec    esi
  404a8d:	mov    esi,0x7d013a28
  404a92:	adc    DWORD PTR [ecx],esi
  404a94:	lock cmp ebx,DWORD PTR [ecx-0x6ffab22a]
  404a9b:	adc    eax,0x40ab441d
  404aa0:	jmp    0x1b00:0xb286
  404aa7:	sti    
  404aa8:	lds    ebx,FWORD PTR [ebp-0x26]
  404aab:	mov    es,WORD PTR [ecx]
  404aad:	ins    BYTE PTR es:[edi],dx
  404aae:	loope  0x404b0f
  404ab0:	inc    eax
  404ab1:	dec    edi
  404ab2:	int3   
  404ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab4:	sub    DWORD PTR [esi],0xffffff9f
  404ab7:	mov    edi,0xc24f21c2
  404abc:	or     eax,0x4c934c08
  404ac1:	jecxz  0x404aed
  404ac3:	fs (bad) 
  404ac5:	cli    
  404ac6:	xor    DWORD PTR [ebp-0x32],0xffffffa5
  404aca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404acb:	pop    es
  404acc:	or     DWORD PTR [ecx+ecx*2+0x66c747d6],esp
  404ad3:	sub    DWORD PTR [ebx-0x35c7a84a],ecx
  404ad9:	arpl   WORD PTR [edx+edi*1],dx
  404adc:	push   esp
  404add:	dec    edx
  404ade:	xlat   BYTE PTR ds:[ebx]
  404adf:	sub    dl,BYTE PTR ds:0xd5dc8261
  404ae5:	js     0x404ac0
  404ae7:	or     al,0x97
  404ae9:	add    BYTE PTR [eax+eiz*2],cl
  404aec:	cwde   
  404aed:	push   eax
  404aee:	adc    eax,0xee11a9b7
  404af3:	popa   
  404af4:	cli    
  404af5:	rol    BYTE PTR [edi+0x7a],cl
  404af8:	retf   
  404af9:	xchg   ebx,eax
  404afa:	cwde   
  404afb:	in     al,0xd6
  404afd:	pop    esp
  404afe:	sar    ecx,0xe5
  404b01:	sbb    eax,0xdeb4deda
  404b06:	jecxz  0x404b3f
  404b08:	test   BYTE PTR [edi+0x34000000],bl
  404b0e:	not    BYTE PTR [ecx]
  404b10:	pop    eax
  404b11:	sbb    eax,0xf619229f
  404b16:	mov    edx,0xa50fda6f
  404b1b:	inc    eax
  404b1c:	fwait
  404b1d:	out    0x65,eax
  404b1f:	imul   esp,DWORD PTR [edi-0x19a58ef2],0x25
  404b26:	int3   
  404b27:	or     DWORD PTR ds:0x643852fc,esp
  404b2d:	retf   
  404b2e:	adc    ch,BYTE PTR [esi-0x60762d5d]
  404b34:	loop   0x404abf
  404b36:	xor    ah,cl
  404b38:	and    DWORD PTR [eax+0x5f60fd3b],esi
  404b3e:	mov    ds:0xa886afe0,eax
  404b43:	iret   
  404b44:	out    dx,al
  404b45:	sbb    eax,0x142d8292
  404b4a:	or     esi,DWORD PTR [edx+0x244fe36c]
  404b50:	stos   DWORD PTR es:[edi],eax
  404b51:	jmp    0x45e5:0xc1ea14d4
  404b58:	sub    DWORD PTR [eax],ebp
  404b5a:	out    dx,eax
  404b5b:	jbe    0x404bc5
  404b5d:	popf   
  404b5e:	test   al,0x78
  404b60:	test   BYTE PTR [ebx+eiz*4+0x47],0xb7
  404b65:	repz xchg edx,eax
  404b67:	or     al,0x1b
  404b69:	out    0xa1,eax
  404b6b:	cmc    
  404b6c:	sub    DWORD PTR [esi],ebx
  404b6e:	pop    ecx
  404b6f:	ss mov esp,0x41000000
  404b75:	jg     0x404bc2
  404b77:	lea    eax,[eax-0x3c21d7ea]
  404b7d:	lea    esp,[ecx]
  404b7f:	out    dx,eax
  404b80:	add    cl,ch
  404b82:	stos   BYTE PTR es:[edi],al
  404b83:	repz sub eax,0x64c29fbb
  404b89:	pop    edx
  404b8a:	mov    ah,0x91
  404b8c:	lahf   
  404b8d:	jns    0x404b5c
  404b8f:	mov    al,ds:0x368e30d6
  404b94:	or     DWORD PTR [edi],esp
  404b96:	jae    0x404b9f
  404b98:	dec    eax
  404b99:	push   ds
  404b9a:	pusha  
  404b9b:	push   esp
  404b9c:	jnp    0x404b23
  404b9e:	imul   esp,DWORD PTR [ebp-0x46],0x389884a8
  404ba5:	into   
  404ba6:	jnp    0x404b51
  404ba8:	stc    
  404ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404baa:	push   esi
  404bab:	cli    
  404bac:	stos   BYTE PTR es:[edi],al
  404bad:	mov    al,ds:0xe16bcb71
  404bb2:	mov    al,0x5d
  404bb4:	cmp    al,0xe2
  404bb6:	xchg   edi,eax
  404bb7:	ins    BYTE PTR es:[edi],dx
  404bb8:	cmc    
  404bb9:	add    bh,BYTE PTR [ebx-0x3a6b51c1]
  404bbf:	push   cs
  404bc0:	addr16 cmp eax,0x3630123e
  404bc6:	inc    ebx
  404bc7:	and    esi,ecx
  404bc9:	out    dx,al
  404bca:	das    
  404bcb:	jo     0x404b7f
  404bcd:	fcomp  DWORD PTR [eax]
  404bcf:	inc    ecx
  404bd0:	jae    0x404c0b
  404bd2:	fcmovbe st,st(6)
  404bd4:	xor    al,0x2a
  404bd6:	out    dx,eax
  404bd7:	in     eax,0x0
  404bd9:	add    BYTE PTR [eax],al
  404bdb:	in     eax,dx
  404bdc:	mov    al,BYTE PTR [esi*4-0x7c02d34a]
  404be3:	outs   dx,DWORD PTR ds:[esi]
  404be4:	pop    es
  404be5:	cwde   
  404be6:	inc    edx
  404be7:	jns    0x404be6
  404be9:	nop
  404bea:	cmp    eax,0x18aa3ea8
  404bef:	dec    ebx
  404bf0:	jg     0x404ba5
  404bf2:	das    
  404bf3:	cmp    al,al
  404bf5:	fsub   st(6),st
  404bf7:	mov    ebp,0xc6d9ecf8
  404bfc:	cmp    esi,ecx
  404bfe:	cld    
  404bff:	(bad)  
  404c01:	scas   eax,DWORD PTR es:[edi]
  404c02:	add    edx,edi
  404c04:	mov    ebx,0xf4f37ba0
  404c09:	mov    BYTE PTR [edx+eiz*8-0x6e8e9dcb],al
  404c10:	jbe    0x404c8d
  404c12:	push   esi
  404c13:	shl    BYTE PTR [edi-0xec9685c],0xa4
  404c1a:	mov    al,0xff
  404c1c:	xor    esi,eax
  404c1e:	lds    edx,FWORD PTR [ebx+esi*2-0x49]
  404c22:	mov    edx,0x857b45d
  404c27:	scas   eax,DWORD PTR es:[edi]
  404c28:	scas   eax,DWORD PTR es:[edi]
  404c29:	push   esi
  404c2a:	push   DWORD PTR [edi+0x6e]
  404c2d:	jne    0x404c01
  404c2f:	mov    esi,0xc5ed642d
  404c34:	in     al,dx
  404c35:	mov    dl,0x2c
  404c37:	dec    edx
  404c38:	lods   al,BYTE PTR ds:[esi]
  404c39:	call   0x3e:0x716b3b13
  404c40:	add    BYTE PTR [eax],al
  404c42:	fsubr  DWORD PTR [ecx]
  404c44:	mov    BYTE PTR [ecx+0x9],cl
  404c47:	jmp    0xa8260e1a
  404c4c:	faddp  st(6),st
  404c4e:	in     al,dx
  404c4f:	mov    bp,0x47ab
  404c53:	es pushf 
  404c55:	xchg   esp,eax
  404c56:	push   cs
  404c57:	in     eax,0xea
  404c59:	push   ebp
  404c5a:	and    BYTE PTR [ebx+0x62b16ae2],0x0
  404c61:	stc    
  404c62:	je     0x404cdb
  404c64:	add    BYTE PTR [bp+si+0x66],dh
  404c68:	es or  eax,0x1cb86835
  404c6e:	xor    bh,BYTE PTR [ecx-0x7]
  404c71:	aas    
  404c72:	xchg   edx,ecx
  404c74:	cmp    bl,BYTE PTR [esi]
  404c76:	mov    BYTE PTR [ebx+0x2dd9697b],bl
  404c7c:	mov    esp,0xfd3c9e60
  404c81:	cmp    esi,DWORD PTR [ebx+0xf]
  404c84:	ds inc edx
  404c86:	ins    BYTE PTR es:[edi],dx
  404c87:	fidivr WORD PTR [esi+0x15]
  404c8a:	repz loop 0x404c3c
  404c8d:	adc    al,0xec
  404c8f:	repz lock test DWORD PTR [edx],0x3fe63243
  404c97:	adc    BYTE PTR [ebx+0x31],dh
  404c9a:	out    0xa7,eax
  404c9c:	mov    ah,0x18
  404c9e:	fdiv   DWORD PTR [esi-0x7a4acc0b]
  404ca4:	ss dec edx
  404ca6:	add    BYTE PTR [eax],al
  404ca8:	add    BYTE PTR [edx-0x764d88ac],dh
  404cae:	mov    al,0x4e
  404cb0:	mov    ebx,0x900fa18e
  404cb5:	ret    
  404cb6:	push   edx
  404cb7:	int3   
  404cb8:	mov    DWORD PTR [ebx+eax*4-0xabaa973],ebx
  404cbf:	dec    ecx
  404cc0:	aaa    
  404cc1:	(bad)  
  404cc2:	in     al,0xa
  404cc4:	push   esp
  404cc5:	push   edi
  404cc6:	pop    ss
  404cc7:	enter  0x1865,0x46
  404ccb:	mov    edx,ebp
  404ccd:	xchg   ecx,eax
  404cce:	cmp    eax,DWORD PTR [esi+0x3]
  404cd1:	(bad)  
  404cd2:	sub    al,0x7
  404cd4:	sbb    BYTE PTR [edx-0x1afe3c27],bl
  404cda:	or     BYTE PTR [ebp-0x67b64300],al
  404ce0:	inc    edx
  404ce1:	inc    esp
  404ce2:	shr    BYTE PTR [eax-0x604a0fd],1
  404ce8:	rcl    BYTE PTR [esi-0x1a],0xca
  404cec:	sbb    ebx,0x721fc4ba
  404cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf3:	repz pop esi
  404cf5:	mov    ecx,0xb09da708
  404cfa:	popf   
  404cfb:	xchg   ebp,eax
  404cfc:	fdiv   st(7),st
  404cfe:	fdivp  st(7),st
  404d00:	sbb    al,BYTE PTR [esi+0x49]
  404d03:	xor    DWORD PTR [edx-0x23],ebx
  404d06:	in     al,0x61
  404d08:	cdq    
  404d09:	aam    0xf9
  404d0b:	push   edx
  404d0c:	fadd   DWORD PTR [eax]
  404d0e:	add    BYTE PTR [eax],al
  404d10:	jecxz  0x404d73
  404d12:	dec    edi
  404d13:	pop    ss
  404d14:	jmp    0x2d4f:0xc1567e7c
  404d1b:	xchg   ebp,eax
  404d1c:	test   al,0xb6
  404d1e:	sbb    al,0xd4
  404d20:	out    0x75,eax
  404d22:	mov    dl,BYTE PTR [ebx]
  404d24:	(bad)  
  404d25:	adc    DWORD PTR [ebx-0x17c2daae],edi
  404d2b:	xchg   ecx,eax
  404d2c:	or     al,0x24
  404d2e:	fnop   
  404d30:	xor    al,0xf9
  404d32:	repnz in al,dx
  404d34:	or     eax,0xf6adc1ee
  404d39:	dec    edx
  404d3a:	xchg   ecx,eax
  404d3b:	outs   dx,BYTE PTR ds:[esi]
  404d3c:	call   ebx
  404d3e:	lahf   
  404d3f:	das    
  404d40:	mov    al,0x95
  404d42:	xor    eax,0x70ab9e8
  404d47:	test   eax,0x6a539fd2
  404d4c:	fwait
  404d4d:	mov    eax,0x212c2b64
  404d52:	jns    0x404d38
  404d54:	adc    eax,0xf3a54838
  404d59:	mov    DWORD PTR [ebx+ebx*1+0xd],esi
  404d5d:	mov    ecx,DWORD PTR [ecx-0x36242bd6]
  404d63:	mov    esp,0x8db33493
  404d68:	push   edx
  404d69:	in     eax,dx
  404d6a:	lahf   
  404d6b:	ficom  WORD PTR [ecx]
  404d6d:	mul    DWORD PTR [edi+ebp*8-0x1ea065f0]
  404d74:	add    BYTE PTR [eax],al
  404d76:	add    BYTE PTR [esi+0x5fd066aa],ah
  404d7c:	(bad)  
  404d7d:	mov    DWORD PTR [ebx-0x4d8b36ec],eax
  404d83:	int    0x1d
  404d85:	mov    bl,0x24
  404d87:	mov    dh,BYTE PTR [esi-0x36]
  404d8a:	adc    eax,0x46a56b3b
  404d8f:	clc    
  404d90:	je     0x404d32
  404d92:	ja     0x404d3d
  404d94:	shl    DWORD PTR [edi],0x6b
  404d97:	pop    esi
  404d98:	bound  ebx,QWORD PTR [esi]
  404d9a:	pop    edx
  404d9b:	daa    
  404d9c:	mov    edi,0xb0dc0931
  404da1:	dec    esp
  404da2:	cmp    BYTE PTR [ebp+0x42ae0b85],al
  404da8:	mov    ?,edx
  404daa:	sahf   
  404dab:	add    esp,DWORD PTR [ebx]
  404dad:	(bad)  
  404daf:	sar    BYTE PTR [eax+ebp*8],0xfc
  404db3:	popa   
  404db4:	mov    al,ds:0x9ef30003
  404db9:	shr    DWORD PTR [edx+0x24],0xa1
  404dbd:	xchg   esp,edx
  404dbf:	inc    ebp
  404dc0:	mov    ds:0xa52abe45,al
  404dc5:	or     ch,BYTE PTR [eax-0x3d375159]
  404dcb:	enter  0x8ea4,0x7c
  404dcf:	sub    DWORD PTR [ebx+0x776164c],0x4f43f0f7
  404dd9:	out    dx,al
  404dda:	mov    dl,0x0
  404ddc:	add    BYTE PTR [eax],al
  404dde:	fadd   DWORD PTR [ebp-0x42918b1c]
  404de4:	fnsave [esi]
  404de6:	pushf  
  404de7:	test   al,0xf0
  404de9:	stc    
  404dea:	mov    ebp,DWORD PTR [ebx]
  404dec:	icebp  
  404ded:	mov    ebx,0x7de33a60
  404df2:	mov    BYTE PTR [eax],0xe2
  404df5:	aas    
  404df6:	mov    ah,0xd3
  404df8:	add    al,0xe6
  404dfa:	xchg   ecx,eax
  404dfb:	pop    ss
  404dfc:	cld    
  404dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dfe:	sub    cl,BYTE PTR [esi-0xa]
  404e01:	popa   
  404e02:	fdivr  st(4),st
  404e04:	out    dx,al
  404e05:	and    ebp,esi
  404e07:	(bad)  
  404e09:	in     al,dx
  404e0a:	stc    
  404e0b:	(bad)
  404e10:	shr    DWORD PTR [eax+0x14],1
  404e13:	leave  
  404e14:	shr    BYTE PTR [edx],1
  404e16:	pushfw 
  404e18:	sti    
  404e19:	(bad)  
  404e1a:	and    bh,BYTE PTR [edi-0x69846b06]
  404e20:	clc    
  404e21:	push   edx
  404e22:	int    0x6c
  404e24:	stc    
  404e25:	adc    BYTE PTR [edi-0x55202389],bh
  404e2b:	cli    
  404e2c:	aam    0x9d
  404e2e:	ret    
  404e2f:	jmp    0x11a5aa12
  404e34:	(bad)  
  404e35:	sbb    edi,edx
  404e37:	inc    ebx
  404e38:	loope  0x404e88
  404e3a:	sub    eax,0xf8ce0a7
  404e3f:	mov    esi,0xcad2
  404e44:	add    BYTE PTR [ecx-0x34f72c7c],al
  404e4a:	dec    edi
  404e4b:	mov    BYTE PTR [edi-0x2b],0xd2
  404e4f:	mov    esi,0x17785
  404e54:	mov    ch,0xb0
  404e56:	rcl    BYTE PTR [ecx-0x54],1
  404e59:	repnz ss gs pop ds
  404e5d:	in     eax,0xfd
  404e5f:	push   edi
  404e60:	push   ss
  404e61:	jae    0x404e76
  404e63:	outs   dx,DWORD PTR ds:[esi]
  404e64:	sbb    al,0x59
  404e66:	leave  
  404e67:	ss adc eax,0xf8015e8f
  404e6d:	mov    edi,0x5f98455
  404e72:	mov    esp,0x2143fbb3
  404e77:	jmp    0x1bcd:0xdd0661fa
  404e7e:	lods   al,BYTE PTR ds:[esi]
  404e7f:	nop
  404e80:	(bad)  
  404e81:	leave  
  404e82:	test   DWORD PTR [edi-0x2287832],esp
  404e88:	(bad)  
  404e89:	pop    ebp
  404e8a:	xor    cl,cl
  404e8c:	retf   0x4412
  404e8f:	dec    esp
  404e90:	retf   
  404e91:	shr    ch,1
  404e93:	jp     0x404e5e
  404e95:	mov    gs,WORD PTR [edi+0x22]
  404e98:	enter  0x9814,0x15
  404e9c:	adc    eax,DWORD PTR [edi]
  404e9e:	pop    ebx
  404e9f:	sub    BYTE PTR [edx],dl
  404ea1:	mov    ebp,0x7b001fb4
  404ea6:	es inc esi
  404ea8:	add    DWORD PTR [eax],eax
  404eaa:	add    BYTE PTR [eax],al
  404eac:	sub    edi,edi
  404eae:	jo     0x404ec4
  404eb0:	fdivrp st(2),st
  404eb2:	repz or eax,0x7c31ca4
  404eb8:	bound  edi,QWORD PTR [esi+0x66c1fe9a]
  404ebe:	lods   eax,DWORD PTR ds:[esi]
  404ebf:	sbb    DWORD PTR [ebp-0x7e],esp
  404ec2:	rcr    BYTE PTR [eax],0x1f
  404ec5:	lods   al,BYTE PTR ds:[esi]
  404ec6:	neg    DWORD PTR [edx]
  404ec8:	fldcw  WORD PTR [edi]
  404eca:	scas   al,BYTE PTR es:[edi]
  404ecb:	sbb    ecx,DWORD PTR [ebx-0x3aff6728]
  404ed1:	sbb    eax,0xdbc41c25
  404ed6:	dec    esi
  404ed7:	sub    esi,DWORD PTR [esi-0x588d0f67]
  404edd:	push   edi
  404ede:	fwait
  404edf:	inc    ebp
  404ee0:	mov    WORD PTR [ebx+0x45bd78dc],es
  404ee6:	mov    dh,0x4f
  404ee8:	mov    edi,0xbe1607ff
  404eed:	shl    DWORD PTR [edx+0x21],0xb3
  404ef1:	mov    BYTE PTR [esp+eiz*4-0x4e],dh
  404ef5:	dec    edx
  404ef6:	push   ds
  404ef7:	xchg   ebx,eax
  404ef8:	inc    eax
  404ef9:	xchg   esp,eax
  404efa:	lahf   
  404efb:	retf   0xc6a1
  404efe:	retf   0x7efd
  404f01:	cmp    al,0x2e
  404f03:	mov    al,0x6f
  404f05:	out    dx,al
  404f06:	inc    ebx
  404f07:	xchg   DWORD PTR [ebp-0x50],ebp
  404f0a:	stc    
  404f0b:	fmulp  st(4),st
  404f0d:	jno    0x404e9f
  404f0f:	jmp    0x61404f14
  404f14:	aaa    
  404f15:	xchg   BYTE PTR [eax+eiz*2-0x7],ch
  404f19:	jmp    0x404f76
  404f1b:	jb     0x404ed8
  404f1d:	push   ecx
  404f1e:	add    dh,BYTE PTR [ebx+0x7d]
  404f21:	cmp    BYTE PTR ds:0x87f1fb8,dh
  404f27:	test   eax,0xab3f14dd
  404f2c:	mov    ds:0x61ba66aa,eax
  404f31:	rcl    DWORD PTR [ecx-0x49],0x28
  404f35:	xlat   BYTE PTR ds:[ebx]
  404f36:	aam    0xb6
  404f38:	out    0xbc,al
  404f3a:	jecxz  0x404ee0
  404f3c:	lods   al,BYTE PTR ds:[esi]
  404f3d:	add    bh,BYTE PTR [edx-0x729694cb]
  404f43:	and    bl,BYTE PTR [eax-0x35]
  404f46:	and    BYTE PTR [ebx],ah
  404f48:	xchg   esi,eax
  404f49:	mov    al,ds:0x36e8f317
  404f4e:	pop    ds
  404f4f:	cmp    eax,0x4a7574e8
  404f54:	fnstsw WORD PTR [ecx-0x81c409d]
  404f5a:	or     BYTE PTR [eax-0x7e48c217],ch
  404f60:	bnd jnp 0x404f40
  404f63:	dec    esi
  404f64:	arpl   WORD PTR [edi+0x16c7b9a],di
  404f6a:	lock inc esp
  404f6c:	bound  eax,QWORD PTR [ebx+0x4e]
  404f6f:	test   DWORD PTR [ecx-0x7b],ebp
  404f72:	and    al,0xb2
  404f74:	pop    esi
  404f75:	enter  0x32,0x0
  404f79:	add    BYTE PTR [edi],dh
  404f7b:	pop    esi
  404f7c:	or     bl,BYTE PTR [eax+0x0]
  404f7f:	pusha  
  404f80:	dec    esp
  404f81:	out    0x19,al
  404f83:	popa   
  404f84:	mov    cs,WORD PTR [esi+eax*1-0x3c976bae]
  404f8b:	pop    edx
  404f8c:	(bad)  
  404f8d:	add    esp,ecx
  404f8f:	push   esp
  404f90:	adc    BYTE PTR [ebp+ecx*1-0x529ada4],bh
  404f97:	jo     0x404f34
  404f99:	shr    BYTE PTR [edi+0x6f],0xdd
  404f9d:	test   eax,0x14176d78
  404fa2:	adc    DWORD PTR [esi+0x59],ebp
  404fa5:	jle    0x404fe5
  404fa7:	inc    edi
  404fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa9:	cmp    DWORD PTR [ebx],ecx
  404fab:	dec    eax
  404fac:	in     al,0x52
  404fae:	xor    al,0xd6
  404fb0:	and    ebp,ebp
  404fb2:	jne    0x404f89
  404fb4:	pop    edi
  404fb5:	xchg   DWORD PTR [edx-0x16],eax
  404fb8:	lods   al,BYTE PTR ds:[esi]
  404fb9:	xchg   ecx,eax
  404fba:	(bad)  
  404fbb:	icebp  
  404fbc:	jmp    0x4945:0x28fbf0fa
  404fc3:	add    DWORD PTR [edi+0x2f],esp
  404fc6:	push   esi
  404fc7:	pop    es
  404fc8:	mov    bh,cl
  404fca:	stc    
  404fcb:	xchg   BYTE PTR [ecx-0x74a59d6f],cl
  404fd1:	push   ebx
  404fd2:	mov    esp,0x8e158aa1
  404fd7:	mov    al,0x8f
  404fd9:	fadd   DWORD PTR [ecx+0x9a8633]
  404fdf:	add    BYTE PTR [eax],al
  404fe1:	call   0x84d5:0x145c8c1e
  404fe8:	push   ds
  404fe9:	test   BYTE PTR [ebx],0x56
  404fec:	loop   0x405018
  404fee:	iret   
  404fef:	dec    esi
  404ff0:	mov    al,ds:0x664501d3
  404ff5:	ins    DWORD PTR es:[edi],dx
  404ff6:	cmp    DWORD PTR [esp],edi
  404ff9:	jg     0x405023
  404ffb:	push   ecx
  404ffc:	jmp    0xa790fb93
  405001:	imul   esi,DWORD PTR [esi+0x7d256d42],0x43
  405008:	sub    eax,edi
  40500a:	push   ebx
  40500b:	and    al,0xf5
  40500d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500e:	xchg   edi,eax
  40500f:	sbb    eax,0x17ca41b3
  405014:	jno    0x404ff5
  405016:	jo     0x405026
  405018:	das    
  405019:	in     eax,dx
  40501a:	pop    edi
  40501b:	add    edi,esi
  40501d:	in     al,dx
  40501e:	loop   0x405021
  405020:	mov    esp,0x79efedb9
  405025:	aaa    
  405026:	inc    ebp
  405027:	icebp  
  405028:	aaa    
  405029:	push   ebp
  40502a:	sbb    al,0xda
  40502c:	add    ecx,DWORD PTR [edx]
  40502e:	aas    
  40502f:	fcmovnb st,st(5)
  405031:	jo     0x405045
  405033:	fnstcw WORD PTR [edi-0x32]
  405036:	call   0xf7dc9212
  40503b:	mov    esp,0xb47ab20a
  405040:	int3   
  405041:	enter  0x65,0xbe
  405045:	add    BYTE PTR [eax],al
  405047:	add    BYTE PTR [ebp+0x7b],dh
  40504a:	cli    
  40504b:	mov    bh,0x3b
  40504d:	xchg   edx,eax
  40504e:	int    0xc0
  405050:	clc    
  405051:	xor    esp,DWORD PTR [eax-0x3f]
  405054:	ficom  DWORD PTR ss:[esi-0x4d]
  405058:	fs jg  0x405069
  40505b:	mov    dl,0xaa
  40505d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40505e:	cmp    DWORD PTR [edi-0x6143641f],esp
  405064:	pop    ds
  405065:	jb     0x404ff2
  405067:	xchg   esp,eax
  405068:	jge    0x405051
  40506a:	ror    DWORD PTR [ebp+0x3ee53cc3],1
  405070:	iret   
  405071:	add    bl,al
  405073:	aaa    
  405074:	or     DWORD PTR [ecx],ebp
  405076:	out    dx,eax
  405077:	cmp    eax,0x34b6ae5b
  40507c:	lea    edx,[edi-0x7f]
  40507f:	sbb    esi,edx
  405081:	push   0x4
  405083:	sbb    BYTE PTR [eax],dl
  405085:	shl    DWORD PTR [ebx],0x1a
  405088:	xchg   edx,eax
  405089:	push   ss
  40508a:	push   0x1b
  40508c:	inc    esp
  40508d:	out    dx,eax
  40508e:	pop    esp
  40508f:	sub    al,0x1a
  405091:	xchg   ecx,eax
  405092:	adc    BYTE PTR ds:0x2f277adc,ah
  405098:	mov    ds,esp
  40509a:	jge    0x4050c2
  40509c:	dec    eax
  40509d:	ror    DWORD PTR [eax+0x2b],1
  4050a0:	add    edi,DWORD PTR [ecx]
  4050a2:	int3   
  4050a3:	sub    al,ch
  4050a5:	sar    dl,cl
  4050a7:	sub    BYTE PTR [edi-0x7c],ah
  4050aa:	mov    ds:0x29,al
  4050af:	and    DWORD PTR [ecx+0x61aab295],ebp
  4050b5:	test   al,0xb3
  4050b7:	ins    BYTE PTR es:[edi],dx
  4050b8:	retf   
  4050b9:	lahf   
  4050ba:	mov    eax,ds:0xa0c60d3e
  4050bf:	clc    
  4050c0:	div    eax
  4050c2:	add    BYTE PTR [esi+0x46],al
  4050c5:	pop    es
  4050c6:	je     0x40510f
  4050c8:	adc    BYTE PTR [ebp+0x43],ch
  4050cb:	xchg   ebp,eax
  4050cc:	retf   
  4050cd:	rcr    DWORD PTR [edx],cl
  4050cf:	test   BYTE PTR ds:0x285b2db9,al
  4050d5:	xchg   esi,eax
  4050d6:	inc    eax
  4050d7:	pop    edx
  4050d8:	fdivp  st(3),st
  4050da:	ja     0x405124
  4050dc:	pushf  
  4050dd:	inc    ecx
  4050de:	cs dec ecx
  4050e0:	bound  ebp,QWORD PTR [eax]
  4050e2:	sbb    DWORD PTR [ecx+esi*1],ebx
  4050e5:	ds pushf 
  4050e7:	sbb    eax,0x4fab53e7
  4050ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ed:	jmp    0x80ab8fe4
  4050f2:	lds    esi,FWORD PTR [ebp+0x2f]
  4050f5:	xbegin 0xcfed4a0f
  4050fb:	push   es
  4050fc:	mov    bl,0x12
  4050fe:	xchg   esi,eax
  4050ff:	pop    ss
  405100:	ins    DWORD PTR es:[edi],dx
  405101:	jns    0x4050a4
  405103:	adc    dh,BYTE PTR [esi]
  405105:	outs   dx,DWORD PTR ds:[esi]
  405106:	and    al,0x13
  405108:	add    BYTE PTR ds:0xbab9c113,al
  40510e:	dec    edx
  40510f:	shl    BYTE PTR [ebx-0x2f],0x7d
  405113:	add    BYTE PTR [eax],al
  405115:	add    bh,ah
  405117:	xor    DWORD PTR ds:0x5f3bc630,0xe0fdd407
  405121:	pop    esi
  405122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405123:	(bad)  
  405124:	mov    ebp,DWORD PTR [ecx-0x40]
  405127:	mov    bl,BYTE PTR [ebp-0x8bb3e14]
  40512d:	fist   DWORD PTR [ebx-0x6d7db6fa]
  405133:	push   eax
  405134:	and    esi,DWORD PTR [ebp-0x779bf277]
  40513a:	mov    bl,cl
  40513c:	or     eax,0xf51df3bf
  405141:	scas   eax,DWORD PTR es:[edi]
  405142:	or     eax,0x22dab71f
  405147:	and    dh,BYTE PTR [edx-0x34]
  40514a:	lahf   
  40514b:	sub    dh,BYTE PTR [esi+eiz*4]
  40514e:	push   eax
  40514f:	and    esi,ebp
  405151:	pop    ss
  405152:	sub    DWORD PTR [eax],ebp
  405154:	mov    al,0x72
  405156:	out    dx,al
  405157:	mov    eax,ss:0xe33593d0
  40515d:	mov    ecx,0x41d4364
  405162:	mov    ch,0x44
  405164:	pop    edi
  405165:	outs   dx,BYTE PTR ds:[esi]
  405166:	mov    edx,0x3778aa37
  40516b:	inc    ecx
  40516c:	in     al,dx
  40516d:	adc    DWORD PTR [eax],edi
  40516f:	dec    ebx
  405170:	lods   al,BYTE PTR es:[esi]
  405172:	add    edx,edx
  405174:	addr16 (bad) 
  405176:	(bad)  
  405177:	adc    BYTE PTR [ecx+eax*4-0x5000000],0x87
  40517f:	shr    dl,cl
  405181:	fadd   QWORD PTR [ecx-0x7502aaf0]
  405187:	dec    esi
  405188:	aas    
  405189:	xor    bh,BYTE PTR [esi-0x65]
  40518c:	sub    DWORD PTR [edi+0x6042d97e],ebp
  405192:	jl     0x4051ab
  405194:	std    
  405195:	cdq    
  405196:	jnp    0x4051ed
  405198:	xchg   edi,eax
  405199:	jle    0x4051cd
  40519b:	mov    edi,0xfd394373
  4051a0:	sbb    BYTE PTR [edi+ebp*1+0x43],dl
  4051a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051a5:	test   DWORD PTR [eax],edi
  4051a7:	or     ebp,0xdbc7cb6a
  4051ad:	out    0xcc,eax
  4051af:	add    eax,0x4bcee8b1
  4051b4:	setno  ch
  4051b7:	mov    DWORD PTR [ebp-0x3a],esp
  4051ba:	push   es
  4051bb:	mov    ds:0xa31ed1ad,al
  4051c0:	out    dx,eax
  4051c1:	mov    ah,0x2f
  4051c3:	xchg   ecx,eax
  4051c4:	xor    ebp,edi
  4051c6:	pop    es
  4051c7:	nop
  4051c8:	jae    0x405229
  4051ca:	aad    0x84
  4051cc:	mov    dh,0x69
  4051ce:	pop    edx
  4051cf:	jl     0x4051c9
  4051d1:	int3   
  4051d2:	mov    dh,BYTE PTR [esi+0x3a]
  4051d5:	inc    ebp
  4051d6:	mov    cl,0x6f
  4051d8:	jl     0x405201
  4051da:	pushf  
  4051db:	jmp    0x614744e3
  4051e0:	pop    eax
  4051e1:	add    BYTE PTR [eax],al
  4051e3:	add    BYTE PTR [esp+0x43],dl
  4051e7:	or     edi,DWORD PTR [ebx-0x73b1047e]
  4051ed:	popf   
  4051ee:	jbe    0x405212
  4051f0:	pop    esp
  4051f1:	ss mov dh,0xb5
  4051f4:	mov    ds:0x4428cbd9,eax
  4051f9:	stos   DWORD PTR es:[edi],eax
  4051fa:	dec    esp
  4051fb:	lods   eax,DWORD PTR ds:[esi]
  4051fc:	fisttp DWORD PTR [edi+0x2c]
  4051ff:	push   eax
  405200:	retf   
  405201:	popf   
  405202:	fmul   QWORD PTR [ebx]
  405204:	cmp    al,0x81
  405206:	(bad)  
  405207:	push   esi
  405208:	xchg   ebx,eax
  405209:	and    esi,DWORD PTR [esi]
  40520b:	add    esi,DWORD PTR [eax+ecx*1-0x4d]
  40520f:	lods   eax,DWORD PTR ds:[esi]
  405210:	xor    al,0x4f
  405212:	cmp    ebp,DWORD PTR [edx]
  405214:	dec    ebx
  405215:	lods   al,BYTE PTR ds:[esi]
  405216:	dec    ecx
  405217:	mov    ch,0xdc
  405219:	fst    DWORD PTR [eax-0x46cafce0]
  40521f:	cli    
  405220:	mov    ebp,0x35f116d
  405225:	xchg   ecx,eax
  405226:	adc    esi,esp
  405228:	gs rep stos BYTE PTR es:[edi],al
  40522b:	cmp    ebx,DWORD PTR [bx+si]
  40522e:	sbb    DWORD PTR es:[ebx],esi
  405231:	mov    edi,0x5c54bc86
  405236:	add    BYTE PTR [edx+eax*1-0x1],bh
  40523a:	inc    edx
  40523b:	sbb    al,0x35
  40523d:	push   ds
  40523e:	es jl  0x4051ce
  405241:	or     eax,0xf6000c70
  405246:	adc    al,0x16
  405248:	add    BYTE PTR [eax],al
  40524a:	add    BYTE PTR [ebx-0x79904ab],dl
  405250:	mov    ebp,0x9f2fe39e
  405255:	daa    
  405256:	mov    eax,DWORD PTR [ebx]
  405258:	jle    0x40529c
  40525a:	jns    0x405202
  40525c:	out    0xab,al
  40525e:	loope  0x40525a
  405260:	inc    ebp
  405261:	leave  
  405262:	dec    ecx
  405263:	ret    0x3e5c
  405266:	add    DWORD PTR [ebp-0x42],esi
  405269:	pop    ebx
  40526a:	jecxz  0x405217
  40526c:	and    al,0xb5
  40526e:	pop    ebx
  40526f:	aas    
  405270:	pop    es
  405271:	rcl    dh,1
  405273:	add    bh,cl
  405275:	push   0xc2d5456
  40527a:	ins    BYTE PTR es:[edi],dx
  40527b:	jmp    0x7ded3516
  405280:	jne    0x405209
  405282:	int3   
  405283:	push   ss
  405284:	xchg   cl,dl
  405286:	cmp    al,0xaa
  405288:	lods   eax,DWORD PTR ds:[esi]
  405289:	mov    ah,0x26
  40528b:	outs   dx,DWORD PTR ds:[esi]
  40528c:	cmp    eax,0xe5a3d65a
  405291:	ds push ebx
  405293:	push   esp
  405294:	test   BYTE PTR [ebp-0x1ce9d765],0xa9
  40529b:	lea    ebp,[esi+0x4e21310d]
  4052a1:	push   0xa1954b19
  4052a6:	mov    cl,0xdf
  4052a8:	ins    DWORD PTR es:[edi],dx
  4052a9:	les    esi,FWORD PTR [ebx+0xb29dd52]
  4052af:	add    BYTE PTR [eax],al
  4052b1:	add    dh,al
  4052b3:	xor    eax,0x406d004f
  4052b8:	outs   dx,DWORD PTR ds:[esi]
  4052b9:	not    ch
  4052bb:	jl     0x4052c5
  4052bd:	xchg   ebx,eax
  4052be:	pop    es
  4052bf:	dec    edx
  4052c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c1:	jge    0x405262
  4052c3:	jne    0x405285
  4052c5:	sbb    bh,dh
  4052c7:	sbb    eax,edx
  4052c9:	dec    esi
  4052ca:	lahf   
  4052cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052cc:	mov    dh,0x2b
  4052ce:	jge    0x4052e0
  4052d0:	sbb    ch,al
  4052d2:	cmc    
  4052d3:	lods   al,BYTE PTR ds:[esi]
  4052d4:	jle    0x405276
  4052d6:	jo     0x40534f
  4052d8:	inc    edi
  4052d9:	sbb    eax,ebx
  4052db:	inc    ebx
  4052dc:	and    BYTE PTR [edx+ecx*8+0x74],bh
  4052e0:	(bad)  
  4052e1:	xchg   edx,eax
  4052e2:	jb     0x4052af
  4052e4:	out    0xf7,eax
  4052e6:	jno    0x405277
  4052e8:	push   edi
  4052e9:	cmp    eax,0x583f30b9
  4052ee:	stos   DWORD PTR es:[edi],eax
  4052ef:	xchg   edi,eax
  4052f0:	(bad)  
  4052f1:	mov    dh,0x53
  4052f3:	and    dh,bh
  4052f5:	rcl    DWORD PTR [esi+0x3e6aceee],cl
  4052fb:	dec    ebp
  4052fc:	test   al,0xf
  4052fe:	fdivr  st(7),st
  405300:	push   es
  405301:	loope  0x405297
  405303:	lds    esp,FWORD PTR [eax-0x7c]
  405306:	lods   al,BYTE PTR ds:[esi]
  405307:	sub    BYTE PTR [eax-0x2e],dh
  40530a:	xor    al,0x97
  40530c:	push   ss
  40530d:	mov    bh,0x26
  40530f:	sub    bh,BYTE PTR [eax-0x2170a1a7]
  405315:	cmp    al,0x0
  405317:	add    BYTE PTR [eax],al
  405319:	fcmovnb st,st(4)
  40531b:	out    0x85,eax
  40531d:	inc    ebx
  40531e:	idiv   BYTE PTR [edi-0x20]
  405321:	mov    eax,ds:0x90e2f4d
  405326:	lock inc edi
  405328:	imul   esp,DWORD PTR [ecx],0x6
  40532b:	cpuid  
  40532d:	imul   esi,DWORD PTR [ebx],0x7ef3c768
  405333:	pop    es
  405334:	(bad)  
  405335:	or     dl,bh
  405337:	dec    ebx
  405338:	mov    al,ds:0x982259a7
  40533d:	mov    dh,BYTE PTR es:[esi+0x2a0483ff]
  405344:	push   eax
  405345:	popf   
  405346:	jae    0x4052f5
  405348:	aaa    
  405349:	clc    
  40534a:	xchg   ebx,eax
  40534b:	dec    esp
  40534c:	daa    
  40534d:	mov    esi,0xdb400873
  405352:	jns    0x4053a7
  405354:	out    dx,eax
  405355:	xor    eax,0x5087ff9a
  40535a:	pop    ds
  40535b:	scas   al,BYTE PTR es:[edi]
  40535c:	mov    al,0x9
  40535e:	pop    es
  40535f:	sub    edx,edi
  405361:	or     DWORD PTR fs:[esi+0x21308278],esi
  405368:	pop    ds
  405369:	fild   QWORD PTR [eax+0x20f0f6e9]
  40536f:	ins    DWORD PTR es:[edi],dx
  405370:	nop
  405371:	dec    ebp
  405372:	psrad  mm7,QWORD PTR [esi]
  405375:	imul   eax,esi,0x76
  405378:	pop    eax
  405379:	(bad)  
  40537a:	leave  
  40537b:	inc    esi
  40537c:	pusha  
  40537d:	add    BYTE PTR [eax],al
  40537f:	add    BYTE PTR [edi-0x66],al
  405382:	mov    eax,DWORD PTR [edi]
  405384:	loop   0x405339
  405386:	inc    eax
  405387:	test   al,0xbc
  405389:	inc    ebx
  40538a:	xchg   esp,eax
  40538b:	iret   
  40538c:	pop    ecx
  40538d:	and    esi,DWORD PTR [ebp-0x21]
  405390:	lahf   
  405391:	arpl   cx,sp
  405393:	mov    bh,0x7a
  405395:	dec    ecx
  405396:	outs   dx,BYTE PTR ds:[esi]
  405397:	pop    ss
  405398:	adc    al,0xca
  40539a:	jmp    0x938f450e
  40539f:	dec    eax
  4053a0:	test   al,0xd6
  4053a2:	ds das 
  4053a4:	inc    ebp
  4053a5:	clc    
  4053a6:	mov    eax,DWORD PTR [eax-0x18b73edd]
  4053ac:	mov    esi,0x6cd29206
  4053b1:	push   0x3a
  4053b3:	xchg   BYTE PTR [ecx*4-0xc2b26d8],ch
  4053ba:	(bad)  
  4053bb:	jge    0x4053a1
  4053bd:	sbb    BYTE PTR ds:0x9dbfe430,cl
  4053c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c4:	ret    
  4053c5:	pop    esp
  4053c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053c7:	aaa    
  4053c8:	sbb    al,0x46
  4053ca:	neg    DWORD PTR [edx+0x7d96e17b]
  4053d0:	jnp    0x4053e9
  4053d2:	neg    eax
  4053d4:	adc    eax,0xb385ecf4
  4053d9:	mov    cs,WORD PTR [ebp+0x869cdd2]
  4053df:	fwait
  4053e0:	or     al,0xe3
  4053e2:	pop    edi
  4053e3:	aaa    
  4053e4:	add    BYTE PTR [eax],al
  4053e6:	add    BYTE PTR [ebx+0x48],ch
  4053e9:	bound  esp,QWORD PTR [esp+eax*8-0x5cd005a6]
  4053f0:	mov    ebp,0xce852b94
  4053f5:	xor    esp,DWORD PTR [edi+0x342e29a2]
  4053fb:	cmp    eax,0xdaa08e57
  405400:	mov    bl,0xb
  405402:	int    0xd3
  405404:	sbb    ah,BYTE PTR [ebx-0x5effd277]
  40540a:	(bad)  
  40540b:	mov    esp,DWORD PTR [edx-0x7a9a7e07]
  405411:	adc    DWORD PTR [edi+0x3379b36d],ebx
  405417:	mov    bl,BYTE PTR [eax+0x6b]
  40541a:	test   al,0x25
  40541c:	sub    dl,BYTE PTR [ebx]
  40541e:	sub    al,0xc2
  405420:	int3   
  405421:	lea    eax,[ecx-0x2b217a06]
  405427:	(bad)  
  405428:	mov    al,ds:0xc86ae400
  40542d:	or     BYTE PTR [ebp+eiz*1+0x64],dh
  405431:	ins    DWORD PTR es:[edi],dx
  405432:	fs mov bh,0xa7
  405435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405436:	in     al,0x74
  405438:	add    ecx,0x2edff9fe
  40543e:	ds pop esp
  405440:	cmp    DWORD PTR [edx-0x45],ecx
  405443:	push   ss
  405444:	adc    al,0xf3
  405446:	jae    0x4053e9
  405448:	not    DWORD PTR [ebp+0x51]
  40544e:	ds dec esp
  405450:	js     0x40541b
  405452:	fwait
  405453:	scas   eax,DWORD PTR es:[edi]
  405454:	sbb    eax,0x4bc06b61
  405459:	test   eax,0xbb2e58c8
  40545e:	ins    DWORD PTR es:[edi],dx
  40545f:	or     al,al
  405461:	inc    ebx
  405462:	mov    al,0x20
  405464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405465:	mov    esi,0x2e1c296a
  40546a:	(bad)
  40546d:	adc    al,0x62
  40546f:	jno    0x405408
  405471:	(bad)  
  405472:	iret   
  405473:	xchg   esi,eax
  405474:	repnz xor al,0xee
  405477:	out    dx,eax
  405478:	add    al,0x94
  40547a:	mov    ecx,DWORD PTR [eax]
  40547c:	pusha  
  40547d:	mov    ss,WORD PTR [esi]
  40547f:	mov    eax,0x50812e8e
  405484:	jmp    0x405431
  405486:	test   eax,0x3c03527b
  40548b:	mov    al,ds:0x40f70137
  405490:	fstp   DWORD PTR [ecx+0x71bbe824]
  405496:	inc    ebx
  405497:	xlat   BYTE PTR ds:[ebx]
  405498:	jmp    0x8f7122b6
  40549d:	or     edi,DWORD PTR [ecx]
  40549f:	(bad)  
  4054a0:	popa   
  4054a1:	jae    0x405479
  4054a3:	push   0x385d0004
  4054a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a9:	mov    ebp,0xd8c104e5
  4054ae:	ja     0x4054e1
  4054b0:	outs   dx,BYTE PTR ds:[esi]
  4054b1:	add    BYTE PTR ss:[eax],al
  4054b4:	add    BYTE PTR [edi],bh
  4054b6:	lea    ecx,[eax]
  4054b8:	push   ebx
  4054b9:	div    eax
  4054bb:	dec    ebp
  4054bc:	call   0xfa9d:0xff29c7af
  4054c3:	test   DWORD PTR [ecx],edx
  4054c5:	adc    eax,0xc874e1be
  4054ca:	xchg   ebp,eax
  4054cb:	fmul   st,st(5)
  4054cd:	inc    eax
  4054ce:	sub    DWORD PTR [esi+0x109c62a8],edi
  4054d4:	inc    esi
  4054d5:	mov    ah,BYTE PTR [eax]
  4054d7:	jbe    0x4054fc
  4054d9:	xor    al,al
  4054db:	data16 jne 0x405498
  4054de:	cld    
  4054df:	add    BYTE PTR [eax],dl
  4054e1:	cwde   
  4054e2:	dec    ecx
  4054e3:	scas   al,BYTE PTR es:[edi]
  4054e4:	(bad)  
  4054e5:	push   eax
  4054e6:	cmc    
  4054e7:	enter  0xd9b,0x1f
  4054eb:	icebp  
  4054ec:	and    dh,BYTE PTR [ebp-0x58b86a65]
  4054f2:	cmp    DWORD PTR es:[ecx-0x33a26df1],ebp
  4054f9:	in     al,dx
  4054fa:	inc    ebp
  4054fb:	out    dx,al
  4054fc:	push   es
  4054fd:	xchg   esp,eax
  4054fe:	jb     0x405489
  405500:	arpl   WORD PTR [esi-0x1172d9c1],ax
  405506:	jp     0x405549
  405508:	call   0x51b8fd80
  40550d:	fist   DWORD PTR [ebx]
  40550f:	push   ds
  405510:	xor    al,0xf9
  405512:	mov    al,ds:0x1d71dab0
  405517:	(bad)  
  405518:	mov    edi,0x69000000
  40551d:	jp     0x4054e5
  40551f:	jmp    0x8ce194a5
  405524:	repz xchg esi,eax
  405526:	xchg   ebx,eax
  405527:	push   cs
  405528:	adc    DWORD PTR [edi+0x40],edi
  40552b:	imul   esi,esp,0xa5516b01
  405531:	and    ah,bh
  405533:	xor    eax,0x99722838
  405538:	push   ds
  405539:	mov    ch,bl
  40553b:	std    
  40553c:	mov    ds:0x6ab937b7,eax
  405541:	or     BYTE PTR [esi+ebx*8+0x7131223f],bl
  405548:	loope  0x4054fb
  40554a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40554b:	push   ss
  40554c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40554d:	ss (bad) 
  40554f:	sub    eax,0x4979af35
  405554:	dec    eax
  405555:	popf   
  405556:	into   
  405557:	in     eax,0xae
  405559:	aam    0x82
  40555b:	adc    ebx,0x7d91a3bc
  405561:	inc    esp
  405562:	xor    dh,dh
  405564:	loopne 0x40554c
  405566:	pushf  
  405567:	pop    ecx
  405568:	imul   BYTE PTR [esi+0x318b3e38]
  40556e:	add    BYTE PTR [esi],0x12
  405571:	jb     0x405540
  405573:	pusha  
  405574:	aaa    
  405575:	pop    eax
  405576:	jp     0x405546
  405578:	mov    edi,edx
  40557a:	(bad)  
  40557b:	test   al,0xbc
  40557d:	inc    edi
  40557e:	push   cs
  40557f:	inc    ecx
  405580:	add    BYTE PTR [eax],al
  405582:	add    BYTE PTR [ebx],cl
  405584:	clc    
  405585:	ret    0x1e26
  405588:	repnz adc eax,0xb9618089
  40558e:	out    dx,al
  40558f:	(bad)
  405592:	aad    0x14
  405594:	jg     0x4055fa
  405596:	mov    cl,0xe9
  405598:	or     al,0xf7
  40559a:	sbb    eax,0x795be48f
  40559f:	jb     0x4055a7
  4055a1:	cli    
  4055a2:	mov    edx,0x1692b01a
  4055a7:	in     eax,dx
  4055a8:	push   esp
  4055a9:	nop
  4055aa:	rcl    DWORD PTR [edx+0x2a],0xe8
  4055ae:	or     eax,0x5c64cd35
  4055b3:	xchg   BYTE PTR gs:0xffa17bf9,al
  4055ba:	arpl   WORD PTR ds:0xa3ef5efc,bx
  4055c0:	sbb    BYTE PTR [edi+0x25],ch
  4055c3:	fstp   QWORD PTR [edi-0x21]
  4055c6:	test   eax,0x1ec5c4c2
  4055cb:	adc    eax,0x6ab274da
  4055d0:	cmp    eax,0x967207f0
  4055d5:	cmp    BYTE PTR [ebx+0x15],cl
  4055d8:	jno    0x405624
  4055da:	add    BYTE PTR [edx-0x22ab2df5],ch
  4055e0:	call   0x3f06080e
  4055e5:	loop   0x405605
  4055e7:	add    BYTE PTR [eax],al
  4055e9:	add    BYTE PTR [edx-0x2564027],bl
  4055ef:	ret    0x2538
  4055f2:	sub    BYTE PTR [ebp+0x269a54b5],0x35
  4055f9:	add    BYTE PTR [ebp+0x524b4f01],ch
  4055ff:	fwait
  405600:	pop    DWORD PTR [edi]
  405602:	cmc    
  405603:	ja     0x4055ee
  405605:	add    esi,ebx
  405607:	push   es
  405608:	jmp    0xe9474910
  40560d:	add    esi,ebx
  40560f:	push   es
  405610:	jmp    0xe9474918
  405615:	add    esi,ebx
  405617:	push   es
  405618:	jmp    0x474920
  40561d:	jmp    0xe9405d12
  405622:	lock push es
  405624:	add    al,ch
  405626:	lock push es
  405628:	add    al,ch
  40562a:	lock push es
  40562c:	add    al,ch
  40562e:	lock push es
  405630:	add    al,ch
  405632:	lock push es
  405634:	add    bl,ch
  405636:	lock push es
  405638:	add    bl,ch
  40563a:	lock push es
  40563c:	add    bl,ch
  40563e:	lock push es
  405640:	add    bl,ch
  405642:	lock push es
  405644:	add    dl,ch
  405646:	lock push es
  405648:	add    dl,ch
  40564a:	lock push es
  40564c:	add    dl,ch
  40564e:	add    BYTE PTR [eax],al
  405650:	add    al,dh
  405652:	push   es
  405653:	add    dl,ch
  405655:	lock push es
  405657:	add    ch,ch
  405659:	lock push es
  40565b:	add    ch,ah
  40565d:	lock push es
  40565f:	add    ch,ch
  405661:	lock push es
  405663:	add    ch,ah
  405665:	lock push es
  405667:	add    ah,ch
  405669:	lock push es
  40566b:	add    ah,ah
  40566d:	lock push es
  40566f:	add    ah,ch
  405671:	lock push es
  405673:	add    ah,ah
  405675:	lock push es
  405677:	add    cl,ch
  405679:	lock push es
  40567b:	add    cl,bl
  40567d:	loope  0x405696
  40567f:	add    cl,ah
  405681:	out    dx,eax
  405682:	clts   
  405684:	jecxz  0x40567b
  405686:	adc    DWORD PTR [esi*8-0x10fdec0d],eax
  40568d:	icebp  
  40568e:	adc    eax,0x6f0e900
  405693:	add    cl,ch
  405695:	lock push es
  405697:	add    BYTE PTR [eax],al
  405699:	call   0x9:0x8a000009
  4056a0:	add    BYTE PTR [ebx-0x64fffff7],cl
  4056a6:	or     DWORD PTR [eax],eax
  4056a8:	add    BYTE PTR [eax-0x77fffff7],bl
  4056ae:	or     DWORD PTR [eax],eax
  4056b0:	add    BYTE PTR [ecx+0x9],cl
  4056b6:	add    BYTE PTR [eax],al
  4056b8:	pop    ecx
  4056b9:	or     DWORD PTR [eax],eax
  4056bb:	add    BYTE PTR [esi+0x9],dl
  4056be:	add    BYTE PTR [eax],al
  4056c0:	push   esi
  4056c1:	or     DWORD PTR [eax],eax
  4056c3:	add    BYTE PTR [edi+0x9],al
  4056c6:	add    BYTE PTR [eax],al
  4056c8:	push   edi
  4056c9:	or     DWORD PTR [eax],eax
  4056cb:	add    BYTE PTR [ecx+ecx*1+0x0],dl
  4056cf:	add    BYTE PTR [ecx+ecx*1+0x0],dl
  4056d3:	add    BYTE PTR [ebp+0x9],al
  4056d6:	add    BYTE PTR [eax],al
  4056d8:	adc    eax,0x22000009
  4056dd:	or     DWORD PTR [eax],eax
  4056df:	add    BYTE PTR [edx],ah
  4056e1:	or     DWORD PTR [eax],eax
  4056e3:	add    BYTE PTR [ebx],dl
  4056e5:	or     DWORD PTR [eax],eax
  4056e7:	add    BYTE PTR [ebx],dl
  4056e9:	or     DWORD PTR [eax],eax
  4056eb:	add    BYTE PTR [eax],al
  4056ed:	or     DWORD PTR [eax],eax
  4056ef:	add    BYTE PTR [eax],al
  4056f1:	or     DWORD PTR [eax],eax
  4056f3:	add    BYTE PTR [ecx],dl
  4056f5:	or     DWORD PTR [eax],eax
  4056f7:	add    cl,dl
  4056f9:	or     BYTE PTR [eax],al
  4056fb:	add    dh,bl
  4056fd:	or     BYTE PTR [eax],al
  4056ff:	add    dh,cl
  405701:	or     BYTE PTR [eax],al
  405703:	add    bh,cl
  405705:	or     BYTE PTR [eax],al
  405707:	add    BYTE PTR [edi-0x25fffff8],ch
  40570d:	or     BYTE PTR [eax],al
  40570f:	add    dl,cl
  405711:	or     BYTE PTR [eax],al
  405713:	add    bl,dh
  405715:	ins    DWORD PTR es:[edi],dx
  405716:	add    eax,DWORD PTR [eax]
  405718:	rep ins DWORD PTR es:[edi],dx
  40571a:	add    eax,DWORD PTR [eax]
  40571c:	add    BYTE PTR [eax],al
  40571e:	add    bl,dh
  405720:	ins    DWORD PTR es:[edi],dx
  405721:	add    eax,DWORD PTR [eax]
  405723:	rep ins DWORD PTR es:[edi],dx
  405725:	add    eax,DWORD PTR [eax]
  405727:	rep ins DWORD PTR es:[edi],dx
  405729:	add    eax,DWORD PTR [eax]
  40572b:	rep ins DWORD PTR es:[edi],dx
  40572d:	add    eax,DWORD PTR [eax]
  40572f:	rep ins DWORD PTR es:[edi],dx
  405731:	add    eax,DWORD PTR [eax]
  405733:	rep ins DWORD PTR es:[edi],dx
  405735:	add    eax,DWORD PTR [eax]
  405737:	rep ins DWORD PTR es:[edi],dx
  405739:	add    eax,DWORD PTR [eax]
  40573b:	rep ins DWORD PTR es:[edi],dx
  40573d:	add    eax,DWORD PTR [eax]
  40573f:	rep ins DWORD PTR es:[edi],dx
  405741:	add    eax,DWORD PTR [eax]
  405743:	rep ins DWORD PTR es:[edi],dx
  405745:	add    eax,DWORD PTR [eax]
  405747:	rep ins DWORD PTR es:[edi],dx
  405749:	add    eax,DWORD PTR [eax]
  40574b:	rep ins DWORD PTR es:[edi],dx
  40574d:	add    eax,DWORD PTR [eax]
  40574f:	rep outs dx,DWORD PTR ds:[esi]
  405751:	add    eax,DWORD PTR [eax]
  405753:	repz jo 0x405759
  405756:	add    bl,dh
  405758:	je     0x40575d
  40575a:	add    bl,dh
  40575c:	ins    DWORD PTR es:[edi],dx
  40575d:	add    eax,DWORD PTR [eax]
  40575f:	repz jns 0x405765
  405762:	or     bl,dh
  405764:	icebp  
  405765:	add    ecx,DWORD PTR [eax]
  405767:	repz test eax,0x21f30803
  40576d:	add    al,0x8
  40576f:	repz sbb DWORD PTR [eax+ecx*1],eax
  405773:	repz xchg ecx,eax
  405775:	add    ecx,DWORD PTR [eax]
  405777:	repz leave 
  405779:	add    ecx,DWORD PTR [eax]
  40577b:	repz rol DWORD PTR [ebx],0x8
  40577f:	repz imul eax,DWORD PTR [ebx],0x8
  405786:	repz loope 0x40578b
  405789:	or     bl,dh
  40578b:	sbb    DWORD PTR [eax+ecx*1],eax
  40578e:	repz xchg ecx,eax
  405790:	add    ecx,DWORD PTR [eax]
  405792:	repz push es
  405794:	in     eax,0x3
  405796:	jmp    0x40579e
  405798:	pop    ebp
  405799:	add    ebp,ebx
  40579b:	push   es
  40579c:	adc    eax,0x8d06fb04
  4057a1:	add    edi,ebx
  4057a3:	push   es
  4057a4:	jmp    0x4057a9
  4057a6:	jmp    0x4057ae
  4057a8:	imul   eax,DWORD PTR [ebx],0xffffffeb
  4057ab:	push   es
  4057ac:	sub    eax,DWORD PTR [ebx+edi*8]
  4057af:	push   es
  4057b0:	stos   DWORD PTR es:[edi],eax
  4057b1:	add    edi,ebx
  4057b3:	push   es
  4057b4:	or     eax,DWORD PTR [ebx+ebp*8]
  4057b7:	push   es
  4057b8:	mov    eax,DWORD PTR [ebx]
  4057ba:	jmp    0x4057c2
  4057bc:	retf   
  4057bd:	add    edi,ebx
  4057bf:	push   es
  4057c0:	dec    ebx
  4057c1:	add    edi,ebx
  4057c3:	push   es
  4057c4:	fild   DWORD PTR [ebx]
  4057c6:	jmp    0x4057ce
  4057c8:	pop    ebx
  4057c9:	add    ebp,ebx
  4057cb:	push   es
  4057cc:	fwait
  4057cd:	add    edi,ebx
  4057cf:	push   es
  4057d0:	sbb    eax,DWORD PTR [ebx]
  4057d2:	sti    
  4057d3:	push   es
  4057d4:	fild   DWORD PTR [ebx]
  4057d6:	jmp    0x4057de
  4057d8:	pop    ebx
  4057d9:	add    ebp,ebx
  4057db:	push   es
  4057dc:	fwait
  4057dd:	add    edi,ebx
  4057df:	push   es
  4057e0:	sbb    eax,DWORD PTR [ebx]
  4057e2:	sti    
  4057e3:	push   es
  4057e4:	repz add ebp,ebx
  4057e7:	push   es
  4057e8:	jae    0x4057ed
  4057ea:	add    BYTE PTR [eax],al
  4057ec:	add    bl,ch
  4057ee:	push   es
  4057ef:	mov    ds:0x2306fb03,eax
  4057f4:	add    edi,ebx
  4057f6:	push   es
  4057f7:	adc    eax,DWORD PTR [ebx+ebp*8]
  4057fa:	push   es
  4057fb:	xchg   ebx,eax
  4057fc:	add    al,0xeb
  4057fe:	push   es
  4057ff:	inc    ebx
  405800:	add    al,0xfb
  405802:	push   es
  405803:	ret    
  405804:	add    al,0xfb
  405806:	push   es
  405807:	jecxz  0x40580c
  405809:	jmp    0x405811
  40580b:	arpl   WORD PTR [ebx+ebp*8],ax
  40580e:	push   es
  40580f:	add    BYTE PTR [ebx],dl
  405811:	test   DWORD PTR [esi],0xeef9300
  405817:	add    bl,ah
  405819:	lock push cs
  40581b:	add    BYTE PTR [ebx-0x11],ah
  40581e:	push   cs
  40581f:	add    BYTE PTR [ebx],dl
  405821:	test   DWORD PTR [esi],0xeef9300
  405827:	add    bh,ch
  405829:	lock push cs
  40582b:	add    BYTE PTR [edi-0x11],ah
  40582e:	push   cs
  40582f:	add    BYTE PTR [edi],ch
  405831:	test   DWORD PTR [esi],0xeefa700
  405837:	add    BYTE PTR [edi],cl
  405839:	test   DWORD PTR [esi],0xeef8700
  40583f:	add    bh,cl
  405841:	lock push cs
  405843:	add    BYTE PTR [edi-0x11],al
  405846:	push   cs
  405847:	add    bh,bl
  405849:	lock push cs
  40584b:	add    BYTE PTR [edi-0x11],dl
  40584e:	push   cs
  40584f:	add    BYTE PTR [edi-0x10000000],bl
  405855:	push   cs
  405856:	add    BYTE PTR [edi],dl
  405858:	out    dx,eax
  405859:	push   cs
  40585a:	add    bh,bl
  40585c:	lock push cs
  40585e:	add    BYTE PTR [edi-0x11],dl
  405861:	push   cs
  405862:	add    BYTE PTR [edi+0x17000ef0],bl
  405868:	out    dx,eax
  405869:	push   cs
  40586a:	add    bh,dh
  40586c:	lock push cs
  40586e:	add    BYTE PTR [edi-0x11],ch
  405871:	push   cs
  405872:	add    BYTE PTR [edi+0x1f000ef0],ah
  405878:	out    dx,eax
  405879:	push   cs
  40587a:	add    BYTE PTR [edi],dl
  40587c:	test   DWORD PTR [esi],0xef08f00
  405882:	add    BYTE PTR [edi-0x9],al
  405885:	push   cs
  405886:	add    BYTE PTR [edi+0xef0],bh
  40588c:	aam    0x5
  40588e:	or     BYTE PTR [eax],al
  405890:	xor    al,0x6
  405892:	or     BYTE PTR [eax],al
  405894:	in     al,0xa
  405896:	or     BYTE PTR [eax],al
  405898:	je     0x40589f
  40589a:	or     BYTE PTR [eax],al
  40589c:	aam    0x5
  40589e:	or     BYTE PTR [eax],al
  4058a0:	adc    al,0x6
  4058a2:	or     BYTE PTR [eax],al
  4058a4:	add    al,0xb
  4058a6:	or     BYTE PTR [eax],al
  4058a8:	je     0x4058af
  4058aa:	or     BYTE PTR [eax],al
  4058ac:	mov    eax,DWORD PTR ds:0x60b0008
  4058b2:	or     BYTE PTR [eax],al
  4058b4:	fisttp DWORD PTR [edx]
  4058b6:	or     BYTE PTR [eax],al
  4058b8:	add    BYTE PTR [eax],al
  4058ba:	add    BYTE PTR [ebx+0x5],bl
  4058bd:	or     BYTE PTR [eax],al
  4058bf:	jmp    0x4058cb
  4058c1:	or     BYTE PTR [eax],al
  4058c3:	imul   eax,DWORD PTR ds:0x53b0008,0x8
  4058ca:	add    BYTE PTR [ebx+0x3b000805],bh
  4058d0:	add    eax,0x5bb0008
  4058d5:	or     BYTE PTR [eax],al
  4058d7:	imul   eax,DWORD PTR ds:0x5eb0008,0x8
  4058de:	add    BYTE PTR [ebx],bl
  4058e0:	add    eax,0x59b0008
  4058e5:	or     BYTE PTR [eax],al
  4058e7:	mov    eax,DWORD PTR ds:0x60b0008
  4058ed:	or     BYTE PTR [eax],al
  4058ef:	and    eax,DWORD PTR ds:0x5a30008
  4058f5:	or     BYTE PTR [eax],al
  4058f7:	push   ebx
  4058f8:	add    eax,0x5d30008
  4058fd:	or     BYTE PTR [eax],al
  4058ff:	jecxz  0x40590b
  405901:	or     BYTE PTR [eax],al
  405903:	arpl   WORD PTR [edx],cx
  405905:	or     BYTE PTR [eax],al
  405907:	xrelease mov BYTE PTR [ebx],0x8
  40590b:	repz inc esi
  40590d:	add    al,0x8
  40590f:	repz add cx,WORD PTR [eax]
  405913:	repz out 0x3,al
  405916:	or     bl,dh
  405918:	push   ss
  405919:	add    al,0x8
  40591b:	repz xchg esi,eax
  40591d:	add    al,0x8
  40591f:	add    BYTE PTR [eax],al
  405921:	add    bl,dh
  405923:	add    cx,WORD PTR [eax]
  405926:	repz out 0x3,al
  405929:	or     bl,dh
  40592b:	push   ss
  40592c:	add    al,0x8
  40592e:	repz xchg esi,eax
  405930:	add    al,0x8
  405932:	repz jb 0x405938
  405935:	or     bl,dh
  405937:	jmp    0x804:0x32f30803
  40593e:	rep stos BYTE PTR es:[edi],al
  405940:	add    al,0x8
  405942:	repz adc al,BYTE PTR [eax+ecx*1]
  405946:	repz mov al,BYTE PTR [eax+ecx*1]
  40594a:	repz push edx
  40594c:	add    ecx,DWORD PTR [eax]
  40594e:	repz retf 0x803
  405952:	repz bound eax,QWORD PTR [ebx]
  405955:	or     bl,dh
  405957:	fiadd  DWORD PTR [ebx]
  405959:	or     bl,dh
  40595b:	mov    ds:0x1af30803,al
  405960:	add    al,0x8
  405962:	repz bound eax,QWORD PTR [ebx]
  405965:	or     bl,dh
  405967:	fiadd  DWORD PTR [ebx]
  405969:	or     bl,dh
  40596b:	mov    ds:0x1af30803,al
  405970:	add    al,0x8
  405972:	repz jp 0x405978
  405975:	or     bl,dh
  405977:	repnz add ecx,DWORD PTR [eax]
  40597a:	rep stos BYTE PTR es:[edi],al
  40597c:	add    ecx,DWORD PTR [eax]
  40597e:	repz and al,BYTE PTR [eax+ecx*1]
  405982:	repz push es
  405984:	adc    al,0x4
  405986:	add    BYTE PTR [eax],al
  405988:	add    bl,ch
  40598a:	push   es
  40598b:	mov    WORD PTR [ebx],es
  40598d:	sti    
  40598e:	push   es
  40598f:	inc    esp
  405990:	add    al,0xfb
  405992:	push   es
  405993:	mov    esp,0xe406eb03
  405998:	add    ebp,ebx
  40599a:	push   es
  40599b:	pop    esp
  40599c:	add    edi,ebx
  40599e:	push   es
  40599f:	adc    al,0x4
  4059a1:	sti    
  4059a2:	push   es
  4059a3:	mov    WORD PTR [ebx],es
  4059a5:	jmp    0x4059ad
  4059a7:	in     al,0x3
  4059a9:	jmp    0x4059b1
  4059ab:	pop    esp
  4059ac:	add    edi,ebx
  4059ae:	push   es
  4059af:	adc    al,0x4
  4059b1:	sti    
  4059b2:	push   es
  4059b3:	mov    WORD PTR [ebx],es
  4059b5:	jmp    0x4059bd
  4059b7:	fiadd  DWORD PTR [ebx]
  4059b9:	jmp    0x5a06:0xfa04da06
  4059c0:	add    edi,edx
  4059c2:	push   es
  4059c3:	pop    edx
  4059c4:	add    al,0xea
  4059c6:	push   es
  4059c7:	mov    edx,0xba06ea03
  4059cc:	add    al,0xfa
  4059ce:	push   es
  4059cf:	cmp    al,BYTE PTR [ebx]
  4059d1:	cli    
  4059d2:	push   es
  4059d3:	cmp    al,BYTE PTR [edx+ebp*8]
  4059d6:	push   es
  4059d7:	cli    
  4059d8:	add    ebp,edx
  4059da:	push   es
  4059db:	cli    
  4059dc:	add    al,0xfa
  4059de:	push   es
  4059df:	jp     0x4059e4
  4059e1:	cli    
  4059e2:	push   es
  4059e3:	jp     0x4059e9
  4059e5:	jmp    0x9a06:0xea039a06
  4059ec:	add    al,0x0
  4059ee:	add    BYTE PTR [eax],al
  4059f0:	cli    
  4059f1:	push   es
  4059f2:	sbb    al,BYTE PTR [ebx]
  4059f4:	cli    
  4059f5:	push   es
  4059f6:	sbb    al,BYTE PTR [edx+ebp*8]
  4059f9:	push   es
  4059fa:	repnz add ebp,edx
  4059fd:	push   es
  4059fe:	repnz add al,0xfa
  405a01:	push   es
  405a02:	add    BYTE PTR [edx-0x10],ah
  405a05:	or     eax,0xdf76200
  405a0a:	add    BYTE PTR [edx],dh
  405a0c:	out    dx,eax
  405a0d:	or     eax,0xff03200
  405a12:	add    BYTE PTR [edx-0x5dfff011],ah
  405a18:	lock lldt WORD PTR [edx]
  405a1c:	out    dx,eax
  405a1d:	lldt   WORD PTR [edx]
  405a20:	lock sldt WORD PTR [edx-0x7dfff011]
  405a28:	lock lldt WORD PTR [edx]
  405a2c:	out    dx,eax
  405a2d:	lldt   WORD PTR [edx]
  405a30:	lock sldt WORD PTR [edx-0x7dfff011]
  405a38:	lock verr dx
  405a3c:	lock verr dx
  405a40:	icebp  
  405a41:	lldt   WORD PTR [edx-0x11]
  405a45:	lldt   WORD PTR [edx-0x10]
  405a49:	sldt   edx
  405a4c:	lock sldt edx
  405a50:	icebp  
  405a51:	(bad)  
  405a53:	xor    al,BYTE PTR [eax]
  405a55:	add    BYTE PTR [eax],al
  405a57:	out    dx,eax
  405a58:	(bad)  
  405a5a:	xor    dh,al
  405a5c:	sldt   WORD PTR [edx]
  405a5f:	out    dx,eax
  405a60:	sldt   WORD PTR [edx]
  405a63:	lock (bad) 
  405a66:	jb     0x405a57
  405a68:	(bad)  
  405a6a:	jb     0x405a5c
  405a6c:	verr   WORD PTR [edx-0x5dfff010]
  405a73:	icebp  
  405a74:	lldt   WORD PTR [edx]
  405a77:	out    dx,eax
  405a78:	lldt   WORD PTR [edx]
  405a7b:	lock sldt WORD PTR [eax]
  405a7f:	add    eax,0x1500090a
  405a84:	or     DWORD PTR [ecx],ecx
  405a86:	add    BYTE PTR [ebp-0x6afff6fe],dl
  405a8c:	or     DWORD PTR [ecx],ecx
  405a8e:	add    ch,al
  405a90:	add    cl,BYTE PTR [ecx]
  405a92:	add    BYTE PTR ds:0x9500090a,dl
  405a98:	or     DWORD PTR [ecx],ecx
  405a9a:	add    BYTE PTR [ebp-0x1afff6f8],dl
  405aa0:	add    cl,BYTE PTR [ecx]
  405aa2:	add    ch,dh
  405aa4:	or     DWORD PTR [ecx],ecx
  405aa6:	add    BYTE PTR [ebp+0x9],dh
  405aa9:	or     DWORD PTR [eax],eax
  405aab:	jne    0x405ab5
  405aad:	or     DWORD PTR [eax],eax
  405aaf:	in     eax,0x2
  405ab1:	or     DWORD PTR [eax],eax
  405ab3:	cmc    
  405ab4:	or     DWORD PTR [ecx],ecx
  405ab6:	add    BYTE PTR [ebp+0x9],dh
  405ab9:	or     DWORD PTR [eax],eax
  405abb:	add    BYTE PTR [eax],al
  405abd:	add    BYTE PTR [ebp+0x8],dh
  405ac0:	or     DWORD PTR [eax],eax
  405ac2:	mov    ch,0x9
  405ac4:	or     DWORD PTR [eax],eax
  405ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac7:	or     BYTE PTR [ecx],cl
  405ac9:	add    BYTE PTR ds:0x2500090a,ah
  405acf:	or     DWORD PTR [ecx],ecx
  405ad1:	add    BYTE PTR ds:0xa5000909,dh
  405ad7:	or     BYTE PTR [ecx],cl
  405ad9:	add    BYTE PTR ds:0x2500090a,ah
  405adf:	or     DWORD PTR [ecx],ecx
  405ae1:	add    BYTE PTR [ebp+0x9],dl
  405ae4:	or     DWORD PTR [eax],eax
  405ae6:	inc    ebp
  405ae7:	or     BYTE PTR [ecx],cl
  405ae9:	add    ch,al
  405aeb:	or     DWORD PTR [ecx],ecx
  405aed:	add    ch,al
  405aef:	or     BYTE PTR [ecx],cl
  405af1:	add    BYTE PTR [ebp+0x9],dl
  405af4:	or     DWORD PTR [eax],eax
  405af6:	test   DWORD PTR [eax],ecx
  405af8:	or     DWORD PTR [eax],eax
  405afa:	repz sbb al,0x3
  405afd:	or     ebx,esi
  405aff:	adc    al,0x2
  405b01:	or     ebx,esi
  405b03:	je     0x405b08
  405b05:	or     ebx,esi
  405b07:	ins    BYTE PTR es:[edi],dx
  405b08:	add    cl,BYTE PTR [ecx]
  405b0a:	repz in al,0x2
  405b0d:	or     ebx,esi
  405b0f:	fadd   QWORD PTR [ecx]
  405b11:	or     ebx,esi
  405b13:	xor    al,0x4
  405b15:	or     ebx,esi
  405b17:	sub    al,0x5
  405b19:	or     ebx,esi
  405b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1c:	add    al,0x9
  405b1e:	repz pushf 
  405b20:	add    eax,0x9
  405b25:	repz adc al,0x4
  405b28:	or     ebx,esi
  405b2a:	or     al,0x5
  405b2c:	or     ebx,esi
  405b2e:	test   BYTE PTR [ecx+ecx*1],al
  405b31:	repz cld 
  405b33:	add    al,0x9
  405b35:	repz adc al,0x4
  405b38:	or     ebx,esi
  405b3a:	or     al,0x5
  405b3c:	or     ebx,esi
  405b3e:	test   BYTE PTR [ecx+ecx*1],al
  405b41:	repz cld 
  405b43:	add    al,0x9
  405b45:	repz add ecx,DWORD PTR fs:[ecx]
  405b49:	repz pop esp
  405b4b:	add    al,0x9
  405b4d:	repz aam 0x3
  405b50:	or     ebx,esi
  405b52:	int3   
  405b53:	add    al,0x9
  405b55:	repz inc esp
  405b57:	add    ecx,DWORD PTR [ecx]
  405b59:	repz mov esp,0x34f30904
  405b5f:	add    al,0x9
  405b61:	repz sub al,0x5
  405b64:	or     ebx,esi
  405b66:	add    al,0x4
  405b68:	or     ebx,esi
  405b6a:	jl     0x405b70
  405b6c:	or     ebx,esi
  405b6e:	hlt    
  405b6f:	add    ecx,DWORD PTR [ecx]
  405b71:	repz in al,dx
  405b73:	add    al,0x9
  405b75:	repz push es
  405b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b78:	add    edi,edx
  405b7a:	push   es
  405b7b:	sahf   
  405b7c:	add    al,0xfa
  405b7e:	push   es
  405b7f:	push   ss
  405b80:	add    al,0xea
  405b82:	push   es
  405b83:	push   cs
  405b84:	add    eax,0x3e906ea
  405b89:	add    BYTE PTR [eax],al
  405b8b:	add    ah,dh
  405b8d:	push   es
  405b8e:	test   eax,0xc906ec03
  405b93:	add    esi,esp
  405b95:	push   es
  405b96:	mov    DWORD PTR [ebx],eax
  405b98:	in     al,dx
  405b99:	push   es
  405b9a:	stc    
  405b9b:	add    esi,esp
  405b9d:	push   es
  405b9e:	cmp    DWORD PTR [esp+ebp*8],eax
  405ba1:	push   es
  405ba2:	sbb    DWORD PTR [esp+esi*8],eax
  405ba5:	push   es
  405ba6:	pop    ecx
  405ba7:	add    al,0xec
  405ba9:	push   es
  405baa:	icebp  
  405bab:	add    esi,esp
  405bad:	push   es
  405bae:	xor    DWORD PTR [esp+ebp*8],eax
  405bb1:	push   es
  405bb2:	add    DWORD PTR [esp+esi*8],eax
  405bb5:	push   es
  405bb6:	inc    ecx
  405bb7:	add    al,0xec
  405bb9:	push   es
  405bba:	add    DWORD PTR [esp+esi*8],eax
  405bbd:	push   es
  405bbe:	inc    ecx
  405bbf:	add    al,0xec
  405bc1:	push   es
  405bc2:	rol    DWORD PTR [ebx],1
  405bc4:	hlt    
  405bc5:	push   es
  405bc6:	adc    DWORD PTR [esp+ebp*8],eax
  405bc9:	push   es
  405bca:	in     eax,dx
  405bcb:	add    esi,esp
  405bcd:	push   es
  405bce:	and    eax,0xcd06ec04
  405bd3:	add    esi,esp
  405bd5:	push   es
  405bd6:	add    eax,0xfd06ec04
  405bdb:	add    esi,esp
  405bdd:	push   es
  405bde:	mov    ch,0x3
  405be0:	in     al,dx
  405be1:	push   es
  405be2:	sbb    eax,0xd506f404
  405be7:	add    ebp,esp
  405be9:	push   es
  405bea:	jmp    0x3:0x6a06fb03
  405bf1:	add    BYTE PTR [eax],al
  405bf3:	sti    
  405bf4:	push   es
  405bf5:	add    BYTE PTR [edx+0x2a000ef0],ch
  405bfb:	lock push cs
  405bfd:	add    dl,cl
  405bff:	lock push cs
  405c01:	add    BYTE PTR [edx-0x10],cl
  405c04:	push   cs
  405c05:	add    BYTE PTR [edx+0xa000ef0],cl
  405c0b:	lock push cs
  405c0d:	add    cl,ch
  405c0f:	lock add DWORD PTR [eax],eax
  405c12:	f2xm1  
  405c14:	add    DWORD PTR [eax],eax
  405c16:	loope  0x405c08
  405c18:	add    DWORD PTR [eax],eax
  405c1a:	shl    eax,1
  405c1c:	add    DWORD PTR [eax],eax
  405c1e:	in     eax,dx
  405c1f:	lock add eax,DWORD PTR [eax]
  405c22:	cmc    
  405c23:	lock add eax,DWORD PTR [eax]
  405c26:	in     eax,0xf0
  405c28:	add    eax,DWORD PTR [eax]
  405c2a:	in     eax,dx
  405c2b:	lock add eax,DWORD PTR [eax]
  405c2e:	jmp    0x405c20
  405c30:	add    eax,DWORD PTR [eax]
  405c32:	fcomi  st,st(0)
  405c34:	add    eax,DWORD PTR [eax]
  405c36:	jecxz  0x405c28
  405c38:	add    eax,DWORD PTR [eax]
  405c3a:	shl    eax,cl
  405c3c:	add    eax,DWORD PTR [eax]
  405c3e:	out    dx,eax
  405c3f:	lock add eax,DWORD PTR [eax]
  405c42:	div    eax
  405c44:	add    eax,DWORD PTR [eax]
  405c46:	out    0xf0,eax
  405c48:	add    eax,DWORD PTR [eax]
  405c4a:	out    dx,eax
  405c4b:	lock add eax,DWORD PTR [eax]
  405c4e:	call   0xd8406043
  405c53:	lock add eax,DWORD PTR [eax]
  405c56:	loopne 0x405c58
  405c58:	add    BYTE PTR [eax],al
  405c5a:	lock add eax,DWORD PTR [eax]
  405c5d:	shl    al,1
  405c5f:	add    eax,DWORD PTR [eax]
  405c61:	in     al,dx
  405c62:	lock add eax,DWORD PTR [eax]
  405c65:	hlt    
  405c66:	lock add eax,DWORD PTR [eax]
  405c69:	in     al,0xf0
  405c6b:	add    eax,DWORD PTR [eax]
  405c6d:	in     al,dx
  405c6e:	lock add eax,DWORD PTR [eax]
  405c71:	add    BYTE PTR [ecx+0x6],bl
  405c74:	add    eax,0x5062900
  405c79:	add    BYTE PTR [ecx+0x6],dl
  405c7c:	add    eax,0x5062100
  405c81:	add    BYTE PTR ds:0x1d000506,bl
  405c87:	push   es
  405c88:	add    eax,0x2050a00
  405c8d:	add    ecx,DWORD PTR [esi]
  405c8f:	add    al,BYTE PTR ds:0x6101c05
  405c95:	push   es
  405c96:	or     eax,0x1207070f
  405c9b:	push   cs
  405c9c:	or     BYTE PTR [eax],cl
  405c9e:	adc    cl,BYTE PTR [esi]
  405ca0:	or     BYTE PTR [eax],cl
  405ca2:	jecxz  0x405cb0
  405ca4:	or     DWORD PTR [ecx],ecx
  405ca6:	jecxz  0x405cb4
  405ca8:	or     DWORD PTR [ecx],ecx
  405caa:	ror    BYTE PTR [ebx],1
  405cac:	or     cl,BYTE PTR [edx]
  405cae:	ror    BYTE PTR [ebx],1
  405cb0:	or     cl,BYTE PTR [edx]
  405cb2:	ror    BYTE PTR [ebx],0xa
  405cb5:	or     al,al
  405cb7:	or     ecx,DWORD PTR [edx]
  405cb9:	or     dl,cl
  405cbb:	or     cl,BYTE PTR [ebx]
  405cbd:	or     eax,DWORD PTR [eax]
  405cbf:	add    BYTE PTR [eax],al
  405cc1:	ror    DWORD PTR [edx],1
  405cc3:	or     ecx,DWORD PTR [ebx]
  405cc5:	mov    eax,ds:0xa10b0b0a
  405cca:	or     cl,BYTE PTR [ebx]
  405ccc:	or     edx,DWORD PTR [esi-0x49f3f3f7]
  405cd2:	or     DWORD PTR [esp+ecx*1],ecx
  405cd5:	xchg   BYTE PTR [ecx],cl
  405cd7:	or     al,0xc
  405cd9:	xchg   esi,eax
  405cda:	or     DWORD PTR [esp+ecx*1],ecx
  405cdd:	xchg   esi,eax
  405cde:	or     DWORD PTR [esp+ecx*1],ecx
  405ce1:	xchg   esi,eax
  405ce2:	or     DWORD PTR [esp+ecx*1],ecx
  405ce5:	or     WORD PTR [esp+ecx*1],cx
  405ce9:	push   esi
  405cea:	or     DWORD PTR [esp+ecx*1],ecx
  405ced:	repz bound ecx,QWORD PTR [esi]
  405cf0:	or     eax,0xd0e5ae6
  405cf5:	(bad)  
  405cf6:	jb     0x405d06
  405cf8:	or     eax,0xd0e6af6
  405cfd:	out    dx,al
  405cfe:	bound  ecx,QWORD PTR [esi]
  405d00:	or     eax,0xd0e5ae6
  405d05:	(bad)  
  405d06:	jb     0x405d16
  405d08:	or     eax,0xd0e6af6
  405d0d:	out    dx,al
  405d0e:	popa   
  405d0f:	adc    DWORD PTR [esi],ecx
  405d11:	in     eax,0x59
  405d13:	adc    DWORD PTR [esi],ecx
  405d15:	std    
  405d16:	jno    0x405d29
  405d18:	push   cs
  405d19:	cmc    
  405d1a:	imul   edx,DWORD PTR [ecx],0x1161ed0e
  405d20:	push   cs
  405d21:	in     eax,0x59
  405d23:	adc    DWORD PTR [esi],ecx
  405d25:	add    BYTE PTR [eax],al
  405d27:	add    ch,bh
  405d29:	outs   dx,DWORD PTR ds:[esi]
  405d2a:	or     eax,0xd67f50e
  405d2f:	push   cs
  405d30:	in     eax,dx
  405d31:	pop    edi
  405d32:	or     eax,0xd57e50e
  405d37:	push   cs
  405d38:	std    
  405d39:	outs   dx,DWORD PTR ds:[esi]
  405d3a:	or     eax,0xd67f50e
  405d3f:	push   cs
  405d40:	in     eax,dx
  405d41:	pop    edi
  405d42:	or     eax,0xd57e50e
  405d47:	push   cs
  405d48:	std    
  405d49:	outs   dx,DWORD PTR ds:[esi]
  405d4a:	or     eax,0xd67f50e
  405d4f:	push   cs
  405d50:	in     eax,dx
  405d51:	pusha  
  405d52:	push   cs
  405d53:	pmulhuw mm3,QWORD PTR [eax+0xe]
  405d57:	paddb  mm6,QWORD PTR [eax+0xe]
  405d5b:	pmuludq mm5,QWORD PTR [eax+0xe]
  405d5f:	paddsb mm4,QWORD PTR [eax+0xe]
  405d63:	pmulhuw mm3,QWORD PTR [eax+0xe]
  405d67:	paddb  mm0,QWORD PTR [esi]
  405d6a:	test   BYTE PTR [esi],0xf4
  405d6d:	pop    es
  405d6e:	out    dx,al
  405d6f:	push   cs
  405d70:	in     al,dx
  405d71:	pop    es
  405d72:	out    0xe,al
  405d74:	in     al,0x7
  405d76:	fimul  WORD PTR [esi]
  405d78:	cld    
  405d79:	pop    es
  405d7a:	test   BYTE PTR [esi],0xf4
  405d7d:	pop    es
  405d7e:	out    dx,al
  405d7f:	push   cs
  405d80:	in     al,dx
  405d81:	pop    es
  405d82:	out    0xe,al
  405d84:	in     al,0x7
  405d86:	fimul  WORD PTR [esi]
  405d88:	cld    
  405d89:	pop    es
  405d8a:	test   BYTE PTR [esi],0x0
  405d8d:	add    BYTE PTR [eax],al
  405d8f:	hlt    
  405d90:	pop    es
  405d91:	out    dx,al
  405d92:	push   cs
  405d93:	in     al,dx
  405d94:	pop    es
  405d95:	jmp    0xfb56609d
  405d9a:	adc    eax,esp
  405d9c:	adc    ebx,ebp
  405d9e:	pop    ss
  405d9f:	fist   WORD PTR [edx]
  405da1:	aam    0x18
  405da3:	out    0x11,al
  405da5:	fist   WORD PTR ds:0x15d710dd
  405dab:	add    eax,0xfc16fe11
  405db0:	psadbw mm2,QWORD PTR [esi]
  405db3:	add    al,0x10
  405db5:	icebp  
  405db6:	sbb    edi,ebx
  405db8:	push   ds
  405db9:	icebp  
  405dba:	sbb    ebp,ebx
  405dbc:	push   ds
  405dbd:	loope  0x405dda
  405dbf:	jmp    0x405ddf
  405dc1:	loope  0x405dde
  405dc3:	fistp  DWORD PTR [esi]
  405dc5:	rcr    BYTE PTR [edx+ebx*8],1
  405dc8:	sbb    eax,0x1e0a1cd0
  405dcd:	add    BYTE PTR ds:0x1d001e0a,bl
  405dd3:	cli    
  405dd4:	sbb    eax,0x1cf919f3
  405dd9:	repz sbb ecx,ebp
  405ddc:	sbb    al,0xe3
  405dde:	sbb    ecx,ebp
  405de0:	sbb    al,0xe3
  405de2:	sbb    ecx,ebx
  405de4:	sbb    al,0x0
  405de6:	rcr    edx,cl
  405de8:	sbb    al,0x1a
  405dea:	ror    DWORD PTR [edx],cl
  405dec:	sbb    eax,0x1d09031a
  405df1:	sbb    al,BYTE PTR [ebx]
  405df3:	add    BYTE PTR [eax],al
  405df5:	add    cl,bh
  405df7:	sbb    al,0x1a
  405df9:	repnz stc 
  405dfb:	sbb    ebx,DWORD PTR [ebx]
  405dfd:	bnd jmp 0xea22791e
  405e03:	sbb    ebx,DWORD PTR [ebx]
  405e05:	loop   0x405de0
  405e07:	sbb    ebx,DWORD PTR [ebx]
  405e09:	rcr    cl,cl
  405e0b:	sbb    ebx,DWORD PTR [ebx]
  405e0d:	ror    BYTE PTR [ecx],cl
  405e0f:	sbb    al,0x1b
  405e11:	add    cl,BYTE PTR [eax]
  405e13:	sbb    al,0x1b
  405e15:	add    bh,al
  405e17:	sbb    ebx,DWORD PTR [ebx]
  405e19:	cmc    
  405e1a:	hlt    
  405e1b:	sbb    bl,BYTE PTR [ebp*8-0x1ae3e514]
  405e22:	in     al,0x1a
  405e24:	sbb    al,0xdd
  405e26:	fcomp  QWORD PTR [edx]
  405e28:	sbb    al,0xd5
  405e2a:	aam    0x1a
  405e2c:	sbb    al,0xcd
  405e2e:	or     al,0x13
  405e30:	sbb    al,0x5
  405e32:	adc    edx,DWORD PTR [ebx]
  405e34:	sbb    al,0xfd
  405e36:	cld    
  405e37:	adc    bl,BYTE PTR [esi*8-0x12e3ed0c]
  405e3e:	in     al,dx
  405e3f:	adc    bl,BYTE PTR [eiz*8-0x22e3ed1c]
  405e46:	fcom   QWORD PTR [edx]
  405e48:	sbb    al,0xd5
  405e4a:	aam    0x12
  405e4c:	sbb    al,0xcd
  405e4e:	or     al,0x13
  405e50:	sbb    al,0x5
  405e52:	rcl    DWORD PTR [edx],cl
  405e54:	sbb    al,0xfd
  405e56:	cld    
  405e57:	adc    bl,BYTE PTR [esp+esi*8]
  405e5a:	add    BYTE PTR [eax],al
  405e5c:	add    ch,dh
  405e5e:	adc    ebx,DWORD PTR ds:0x1d13edec
  405e64:	add    BYTE PTR [edi-0x60e2e2eb],cl
  405e6a:	adc    eax,0x159f1d1d
  405e6f:	sbb    eax,0x1d153f1d
  405e74:	sbb    eax,0x1d1d15ef
  405e79:	pop    edi
  405e7a:	adc    eax,0x155f1d1d
  405e7f:	sbb    eax,0x1d155f1d
  405e84:	sbb    eax,0x1d1d154f
  405e89:	pop    ds
  405e8a:	adc    eax,0x151f1d1d
  405e8f:	sbb    eax,0x1d153f1d
  405e94:	sbb    eax,0x1d1d15ef
  405e99:	pop    ds
  405e9a:	adc    eax,0x90a1d1d
  405e9f:	add    al,BYTE PTR [ebx]
  405ea1:	push   ss
  405ea2:	or     eax,0x2020706
  405ea7:	or     DWORD PTR [ecx],ecx
  405ea9:	add    BYTE PTR [eax],al
  405eab:	or     ecx,DWORD PTR [ebx]
  405ead:	push   cs
  405eae:	push   es
  405eaf:	or     al,0xc
  405eb1:	iret   
  405eb2:	add    al,0xd
  405eb4:	or     eax,0xe0e03dc
  405eb9:	int    0x2
  405ebb:	(bad)  
  405ebc:	pminub mm3,QWORD PTR [ecx]
  405ebf:	adc    BYTE PTR [eax],dl
  405ec1:	add    BYTE PTR [eax],al
  405ec3:	add    dl,cl
  405ec5:	sbb    DWORD PTR [eax],edx
  405ec7:	adc    BYTE PTR [ebx-0x64eeeee8],ch
  405ecd:	sbb    BYTE PTR [ecx],dl
  405ecf:	adc    DWORD PTR [eax-0x37edede9],ebx
  405ed5:	pop    ss
  405ed6:	adc    dl,BYTE PTR [edx]
  405ed8:	test   eax,0x99131316
  405edd:	push   ss
  405ede:	adc    edx,DWORD PTR [ebx]
  405ee0:	repz jae 0x405efa
  405ee3:	adc    al,0xe7
  405ee5:	jnp    0x405efe
  405ee7:	adc    al,0xdf
  405ee9:	push   ebx
  405eea:	pop    ss
  405eeb:	adc    al,0xe7
  405eed:	pop    ebx
  405eee:	pop    ss
  405eef:	adc    al,0xdf
  405ef1:	push   edx
  405ef2:	push   ss
  405ef3:	adc    eax,0x15165b06
  405ef8:	(bad)  
  405ef9:	jb     0x405f11
  405efb:	adc    eax,0x15167b06
  405f00:	(bad)  
  405f01:	jne    0x405f18
  405f03:	push   ss
  405f04:	in     eax,0x7d
  405f06:	adc    eax,0x1555dd16
  405f0b:	push   ss
  405f0c:	in     eax,0x5d
  405f0e:	adc    eax,0x1454dd16
  405f13:	pop    ss
  405f14:	add    al,0x5d
  405f16:	adc    al,0x17
  405f18:	cld    
  405f19:	je     0x405f2f
  405f1b:	pop    ss
  405f1c:	add    al,0x7d
  405f1e:	adc    al,0x17
  405f20:	cld    
  405f21:	ja     0x405f3e
  405f23:	sbb    bl,ch
  405f25:	ja     0x405f42
  405f27:	sbb    BYTE PTR [eax],al
  405f29:	add    BYTE PTR [eax],al
  405f2b:	jmp    0x405f94
  405f2d:	sbb    ebx,DWORD PTR [eax]
  405f2f:	(bad)  [edi+0x1b]
  405f32:	sbb    bl,bl
  405f34:	push   edi
  405f35:	sbb    ebx,DWORD PTR [eax]
  405f37:	or     edx,DWORD PTR [esi+0x1b]
  405f3a:	sbb    BYTE PTR [ebx],cl
  405f3c:	push   es
  405f3d:	sbb    al,0x18
  405f3f:	sti    
  405f40:	add    eax,0x76fb181c
  405f45:	sbb    al,0x19
  405f47:	jmp    0x1c66:0xea191c76
  405f4e:	sbb    edx,ebx
  405f50:	data16 sbb al,0x19
  405f53:	ficom  DWORD PTR [esi+0x1c]
  405f56:	sbb    DWORD PTR [edx],ecx
  405f58:	push   edi
  405f59:	sbb    al,0x19
  405f5b:	or     al,BYTE PTR [edi]
  405f5d:	add    BYTE PTR ds:0x1d000dfa,bl
  405f63:	cli    
  405f64:	or     eax,0x10e91df3
  405f69:	repz sbb eax,0x1de310e9
  405f6f:	fst    DWORD PTR [eax]
  405f71:	jecxz  0x405f90
  405f73:	fst    DWORD PTR [eax]
  405f75:	rcr    DWORD PTR ds:0x1dd31109,cl
  405f7b:	or     DWORD PTR [ecx],edx
  405f7d:	add    ebx,DWORD PTR [esi]
  405f7f:	stc    
  405f80:	adc    BYTE PTR [ebx],al
  405f82:	push   ds
  405f83:	stc    
  405f84:	adc    dl,dh
  405f86:	push   ds
  405f87:	call   0xe85f519b
  405f8c:	psrad  mm3,QWORD PTR [esi]
  405f8f:	add    BYTE PTR [eax],al
  405f91:	add    al,bl
  405f93:	psrad  mm3,QWORD PTR [esi]
  405f96:	fmul   DWORD PTR [edi]
  405f98:	rcr    BYTE PTR [esi],cl
  405f9a:	or     BYTE PTR [eax],dl
  405f9c:	rcr    BYTE PTR [esi],cl
  405f9e:	or     BYTE PTR [eax],dl
  405fa0:	add    bl,BYTE PTR [edi]
  405fa2:	clc    
  405fa3:	lar    ebx,WORD PTR [edi]
  405fa6:	clc    
  405fa7:	adc    ch,cl
  405fa9:	add    esi,ebx
  405fab:	push   es
  405fac:	call   0xeb4752b4
  405fb1:	add    esi,ebx
  405fb3:	push   es
  405fb4:	jmp    0xf303:0xed06f303
  405fbb:	push   es
  405fbc:	in     al,0x3
  405fbe:	repz push es
  405fc0:	out    dx,eax
  405fc1:	add    esi,ebx
  405fc3:	push   es
  405fc4:	out    0x3,al
  405fc6:	repz push es
  405fc8:	loope  0x405fcd
  405fca:	repz push es
  405fcc:	jecxz  0x405fd1
  405fce:	repz push es
  405fd0:	cmc    
  405fd1:	add    esi,ebx
  405fd3:	push   es
  405fd4:	out    dx,eax
  405fd5:	add    esi,ebx
  405fd7:	push   es
  405fd8:	add    cl,bl
  405fda:	lock push es
  405fdc:	add    ch,dl
  405fde:	lock push es
  405fe0:	add    BYTE PTR [ecx],al
  405fe2:	test   DWORD PTR [esi],0x6f0fd00
  405fe8:	add    cl,cl
  405fea:	lock push es
  405fec:	add    cl,al
  405fee:	lock push es
  405ff0:	add    BYTE PTR [ecx-0x3efff910],bh
  405ff6:	add    BYTE PTR [eax],al
  405ff8:	add    al,dh
  405ffa:	push   es
  405ffb:	add    BYTE PTR [ecx],ch
  405ffd:	test   DWORD PTR [esi],0x6ef1900
  406003:	add    cl,cl
  406005:	lock push es
  406007:	add    cl,bl
  406009:	lock push es
  40600b:	add    BYTE PTR [ecx-0x10],ch
  40600e:	push   es
  40600f:	add    BYTE PTR [ecx+0x290006f0],cl
  406015:	lock push es
  406017:	add    BYTE PTR [ecx-0x10],cl
  40601a:	push   es
  40601b:	add    cl,ch
  40601d:	lock push es
  40601f:	add    cl,ch
  406021:	lock push es
  406023:	add    cl,ch
  406025:	lock push es
  406027:	add    al,ch
  406029:	lock push es
  40602b:	add    bl,ch
  40602d:	lock push es
  40602f:	add    dl,ch
  406031:	lock push es
  406033:	add    ch,ch
  406035:	lock push es
  406037:	add    bh,ah
  406039:	lock push es
  40603b:	add    cl,ah
  40603d:	lock push es
  40603f:	add    ch,bl
  406041:	lock push es
  406043:	add    cl,bh
  406045:	lock push es
  406047:	add    BYTE PTR [ecx],al
  406049:	out    dx,eax
  40604a:	push   es
  40604b:	add    BYTE PTR [ecx],cl
  40604d:	test   DWORD PTR [esi],0x6ef1900
  406053:	add    BYTE PTR [eax],al
  406055:	or     cl,BYTE PTR [ebx]
  406057:	add    BYTE PTR [eax],al
  406059:	sub    cl,BYTE PTR [ebx]
  40605b:	add    BYTE PTR [eax],al
  40605d:	add    BYTE PTR [eax],al
  40605f:	add    BYTE PTR [edx],bl
  406061:	or     eax,DWORD PTR [eax]
  406063:	add    BYTE PTR [edx+0xb],bl
  406066:	add    BYTE PTR [eax],al
  406068:	mov    al,BYTE PTR ds:0x60a0000
  40606e:	add    BYTE PTR [eax],al
  406070:	call   0xb:0x9a00000c
  406077:	add    BYTE PTR [edx-0x7500008e],cl
  40607d:	or     BYTE PTR [eax],al
  40607f:	add    BYTE PTR [edx-0x2],bl
  406082:	(bad)  
  406083:	call   FWORD PTR [edx+0xa]
  406086:	add    BYTE PTR [eax],al
  406088:	dec    edx
  406089:	push   ss
  40608a:	add    BYTE PTR [eax],al
  40608c:	dec    edx
  40608d:	push   cs
  40608e:	add    BYTE PTR [eax],al
  406090:	pop    edx
  406091:	add    BYTE PTR es:[eax],al
  406094:	pop    edx
  406095:	add    BYTE PTR ss:[eax],al
  406098:	dec    edx
  406099:	inc    esi
  40609a:	(bad)  
  40609b:	dec    DWORD PTR [edx+0x66]
  40609e:	(bad)  
  40609f:	call   FWORD PTR [esi+0x61]
  4060a2:	aas    
  4060a3:	add    BYTE PTR [esi+0x61],cl
  4060a6:	aas    
  4060a7:	add    BYTE PTR [esi+0x61],cl
  4060aa:	aas    
  4060ab:	add    BYTE PTR [esi+0x61],cl
  4060ae:	aas    
  4060af:	add    BYTE PTR [esi+0x61],bl
  4060b2:	aas    
  4060b3:	add    BYTE PTR [esi+0x61],cl
  4060b6:	aas    
  4060b7:	add    BYTE PTR [esi+0x61],cl
  4060ba:	aas    
  4060bb:	add    BYTE PTR [esi+0x61],cl
  4060be:	aas    
  4060bf:	add    BYTE PTR [esi+0x3f60],bl
  4060c5:	add    BYTE PTR [eax],al
  4060c7:	mov    fs,WORD PTR [eax+0x3f]
  4060ca:	add    cl,cl
  4060cc:	add    eax,0x5cf0004
  4060d1:	push   es
  4060d2:	add    bl,dh
  4060d4:	pusha  
  4060d5:	add    ecx,DWORD PTR [eax]
  4060d7:	repz add cx,WORD PTR [edx]
  4060db:	repz je 0x4060e1
  4060de:	or     eax,0x110360f3
  4060e3:	repz dec esp
  4060e5:	add    edx,DWORD PTR [edi]
  4060e7:	repz push esp
  4060e9:	add    ebx,DWORD PTR [edi]
  4060eb:	repz cmp al,0x3
  4060ee:	sub    esi,ebx
  4060f0:	dec    esp
  4060f1:	add    edi,DWORD PTR [ebx]
  4060f3:	repz sbb al,0x4
  4060f6:	push   ebx
  4060f7:	repz cld 
  4060f9:	add    esi,DWORD PTR [ebx-0xd]
  4060fc:	fadd   QWORD PTR [edx]
  4060fe:	mov    ds:0xe3039cf3,eax
  406103:	repz pop ebp
  406105:	add    al,BYTE PTR [eax]
  406107:	repz pop edi
  406109:	add    eax,DWORD PTR [eax]
  40610b:	rep outs dx,DWORD PTR ds:[esi]
  40610d:	add    edx,DWORD PTR [eax]
  40610f:	rep outs dx,DWORD PTR ds:[esi]
  406111:	add    edx,DWORD PTR [eax]
  406113:	rep outs dx,DWORD PTR ds:[esi]
  406115:	add    edx,DWORD PTR [eax]
  406117:	rep outs dx,DWORD PTR ds:[esi]
  406119:	add    edx,DWORD PTR [eax]
  40611b:	repz dec esi
  40611d:	add    edx,DWORD PTR [ecx]
  40611f:	repz dec esi
  406121:	add    edx,DWORD PTR [ecx]
  406123:	repz dec ebp
  406125:	add    edx,DWORD PTR [edx]
  406127:	repz dec ebp
  406129:	add    edx,DWORD PTR [edx]
  40612b:	add    BYTE PTR [eax],al
  40612d:	add    bl,dh
  40612f:	ins    BYTE PTR es:[edi],dx
  406130:	add    edx,DWORD PTR [ebx]
  406132:	rep ins BYTE PTR es:[edi],dx
  406134:	add    edx,DWORD PTR [ebx]
  406136:	repz jae 0x40613c
  406139:	adc    al,0xf3
  40613b:	jnp    0x406140
  40613d:	adc    al,0xf3
  40613f:	push   edx
  406140:	add    edx,DWORD PTR ds:0x15035af3
  406146:	repz dec ebp
  406148:	add    ecx,DWORD PTR [ecx-0xd]
  40614b:	sbb    al,0x3
  40614d:	add    bl,dh
  40614f:	push   es
  406150:	call   0xea475258
  406155:	add    esi,edi
  406157:	push   es
  406158:	in     al,dx
  406159:	add    ebp,esp
  40615b:	push   es
  40615c:	loopne 0x406161
  40615e:	out    dx,al
  40615f:	push   es
  406160:	fadd   DWORD PTR [ebx]
  406162:	fiadd  DWORD PTR [esi]
  406164:	or     BYTE PTR [edx+eiz*8],al
  406167:	push   es
  406168:	sub    BYTE PTR [edx+edx*1],al
  40616b:	pop    es
  40616c:	push   0xe807b204
  406171:	add    al,0x72
  406173:	push   es
  406174:	call   0xe844537a
  406179:	push   ebx
  40617b:	or     al,ch
  40617d:	or     esi,edx
  40617f:	add    ch,al
  406181:	adc    esi,edx
  406183:	push   cs
  406184:	call   0xe87753ac
  406189:	ret    
  40618a:	repz out 0xe8,al
  40618d:	add    esi,ebx
  40618f:	push   es
  406190:	stc    
  406191:	add    eax,DWORD PTR [eax]
  406193:	add    BYTE PTR [eax],al
  406195:	add    eax,DWORD PTR [edi]
  406197:	stc    
  406198:	add    esp,ebx
  40619a:	push   es
  40619b:	clc    
  40619c:	add    esp,edx
  40619e:	push   es
  40619f:	sti    
  4061a0:	add    esp,ecx
  4061a2:	push   es
  4061a3:	fiadd  DWORD PTR [ebx]
  4061a5:	loopne 0x4061ad
  4061a7:	aad    0x3
  4061a9:	pop    es
  4061aa:	pop    es
  4061ab:	fadd   QWORD PTR [ebx]
  4061ad:	inc    BYTE PTR [esi]
  4061af:	xlat   BYTE PTR ds:[ebx]
  4061b0:	add    eax,DWORD PTR ds:0xfc03fe07
  4061b6:	push   es
  4061b7:	add    DWORD PTR [ebx+ebp*8],eax
  4061ba:	push   es
  4061bb:	lock add ebp,edx
  4061be:	push   es
  4061bf:	repz add ebx,ecx
  4061c2:	push   es
  4061c3:	loop   0x4061c8
  4061c5:	fadd   DWORD PTR [esi]
  4061c7:	fld    QWORD PTR [ebx]
  4061c9:	sysret 
  4061cb:	add    ah,dl
  4061cd:	lock adc DWORD PTR [eax],eax
  4061d0:	test   eax,0x8ffc6f0
  4061d5:	add    dh,0xff
  4061d8:	sbb    BYTE PTR [esi+eax*8-0x1],bh
  4061dc:	fs pop esi
  4061de:	(bad)  
  4061df:	(bad)  
  4061e0:	cmp    ebp,DWORD PTR [esi+eax*8-0x1]
  4061e4:	sbb    DWORD PTR [ebx-0x3a],ebx
  4061e7:	(bad)  
  4061e8:	call   0x884068dd
  4061ed:	out    dx,eax
  4061ee:	or     al,BYTE PTR [ecx]
  4061f0:	mov    esi,edi
  4061f2:	dec    esi
  4061f3:	add    cl,BYTE PTR [edx-0x11]
  4061f6:	lds    eax,FWORD PTR [eax]
  4061f8:	inc    esp
  4061f9:	add    BYTE PTR [eax],al
  4061fb:	add    bh,dh
  4061fd:	xor    DWORD PTR [ecx],eax
  4061ff:	dec    edi
  406200:	out    dx,eax
  406201:	int3   
  406202:	add    BYTE PTR [eax-0x9],al
  406205:	out    0x0,al
  406207:	push   ebx
  406208:	out    dx,eax
  406209:	rol    BYTE PTR [eax],1
  40620b:	push   edx
  40620c:	imul   edx
  40620e:	add    BYTE PTR [ebp-0x11],al
  406211:	in     eax,dx
  406212:	add    BYTE PTR [edi],bh
  406214:	div    ecx
  406216:	add    BYTE PTR [esi-0x67ff1411],dl
  40621c:	test   DWORD PTR [ecx],0x4bef9b01
  406222:	add    bl,BYTE PTR [edx+0x7c00c4f7]
  406228:	out    dx,eax
  406229:	xor    BYTE PTR [ecx],al
  40622b:	ja     0x406224
  40622d:	retf   
  40622e:	add    BYTE PTR [esi-0x11],bh
  406231:	inc    edi
  406232:	add    dh,BYTE PTR [eax-0x9]
  406235:	in     eax,0x0
  406237:	arpl   di,bp
  406239:	iret   
  40623a:	add    BYTE PTR [edx-0x9],ah
  40623d:	jmp    0xed2fb742
  406242:	add    BYTE PTR [edi+esi*8+0x51],cl
  406246:	add    al,BYTE PTR [eax]
  406248:	lods   al,BYTE PTR ds:[esi]
  406249:	or     bh,BYTE PTR [esi+0x1]
  40624c:	sub    eax,0x1a017c03
  406251:	add    edx,DWORD PTR [ecx+eax*1+0x9]
  406255:	add    eax,DWORD PTR [edx]
  406257:	add    DWORD PTR [edi-0x6bfec6f6],eax
  40625d:	or     al,BYTE PTR [esi]
  40625f:	add    DWORD PTR [eax],eax
  406261:	add    BYTE PTR [eax],al
  406263:	xchg   edx,eax
  406264:	or     cl,BYTE PTR [ecx+eax*1]
  406267:	nop
  406268:	or     bl,BYTE PTR [eax]
  40626a:	add    DWORD PTR [esi+0xa],edi
  40626d:	sbb    al,BYTE PTR [ecx]
  40626f:	pop    ebp
  406270:	or     cl,BYTE PTR [esi]
  406272:	add    DWORD PTR [edx+0x7b01100a],ecx
  406278:	or     al,BYTE PTR [ebx+0x1]
  40627b:	pop    eax
  40627c:	or     al,BYTE PTR [edi+0x1]
  40627f:	inc    edi
  406280:	or     dl,BYTE PTR [eax+0x1]
  406283:	inc    edx
  406284:	or     bl,BYTE PTR [eax+0x1]
  406287:	inc    ebx
  406288:	or     ch,BYTE PTR [esi+0x1]
  40628b:	push   ecx
  40628c:	or     dh,BYTE PTR [eax+0x1]
  40628f:	mov    WORD PTR [edx],cs
  406291:	bound  eax,QWORD PTR [ecx]
  406293:	jp     0x40629f
  406295:	push   ebp
  406296:	add    DWORD PTR [ecx+0xa],ebp
  406299:	add    eax,DWORD PTR [ecx]
  40629b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40629c:	or     DWORD PTR [edx],edi
  40629e:	add    DWORD PTR [ecx+ecx*1+0x9b20107],esi
  4062a5:	or     eax,0x1909b001
  4062aa:	add    DWORD PTR [esi-0x42fee4f7],ebx
  4062b0:	or     DWORD PTR [edi],ecx
  4062b2:	add    edx,ebp
  4062b4:	or     DWORD PTR [ecx],edx
  4062b6:	add    ebx,ebx
  4062b8:	or     DWORD PTR [ecx+eax*1-0x8],eax
  4062bc:	or     DWORD PTR [eax+0x1],ecx
  4062bf:	out    0x9,eax
  4062c1:	push   ecx
  4062c2:	add    ebx,esi
  4062c4:	pop    ss
  4062c5:	add    ebx,DWORD PTR [ecx+0x0]
  4062c8:	add    BYTE PTR [eax],al
  4062ca:	repnz push ss
  4062cc:	add    ebp,DWORD PTR [edi-0xe]
  4062cf:	or     BYTE PTR [ebx],al
  4062d1:	jno    0x4062c5
  4062d3:	ins    DWORD PTR es:[edi],dx
  4062d4:	add    ah,BYTE PTR [ebx-0xe]
  4062d7:	je     0x4062db
  4062d9:	fyl2x  
  4062db:	mov    esi,0x7df22601
  4062e0:	add    DWORD PTR [edx+esi*8],esp
  4062e3:	xchg   esi,eax
  4062e4:	add    DWORD PTR [eax],esi
  4062e6:	repnz mov BYTE PTR [ecx],al
  4062e9:	push   ds
  4062ea:	bnd jmp 0x4062ed
  4062ed:	xor    al,0xf2
  4062ef:	out    dx,al
  4062f0:	add    BYTE PTR [edi],ah
  4062f2:	repnz cmc 
  4062f4:	add    BYTE PTR ds:0x3100f6f2,ah
  4062fa:	repnz clc 
  4062fc:	add    BYTE PTR [edi],bl
  4062fe:	repnz jecxz 0x406301
  406301:	xor    eax,0xa01a2f2
  406306:	repnz popf 
  406308:	add    DWORD PTR [eax],ecx
  40630a:	repnz mov dl,0x1
  40630d:	and    dl,dh
  40630f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406310:	add    DWORD PTR [edx+esi*8],ebx
  406313:	mov    al,BYTE PTR [ecx]
  406315:	ins    BYTE PTR es:[edi],dx
  406316:	repnz xchg ebp,eax
  406318:	add    DWORD PTR [edx+esi*8-0x7e],ebx
  40631c:	add    DWORD PTR [ebx],ecx
  40631e:	repnz mov ebp,0xd2f20900
  406324:	add    BYTE PTR [ecx],ah
  406326:	repnz xlat BYTE PTR ds:[ebx]
  406328:	add    BYTE PTR ds:0x6d00baf2,bl
  40632e:	add    BYTE PTR [eax],al
  406330:	add    dl,dh
  406332:	lds    eax,FWORD PTR [eax]
  406334:	pop    ebp
  406335:	repnz add DWORD PTR [eax],0x80f238
  40633c:	push   esi
  40633d:	repnz add BYTE PTR [eax],0x28
  406341:	repnz push es
  406343:	dec    edi
  406344:	add    al,cl
  406346:	pop    es
  406347:	push   ebx
  406348:	add    cl,ah
  40634a:	pop    es
  40634b:	inc    edx
  40634c:	add    cl,dl
  40634e:	pop    es
  40634f:	cmp    eax,0x3a078d00
  406354:	add    BYTE PTR [esi+eax*1+0x34],al
  406358:	add    BYTE PTR [edx],bl
  40635a:	push   es
  40635b:	aas    
  40635c:	add    BYTE PTR [edi],bl
  40635e:	push   es
  40635f:	xor    eax,DWORD PTR [eax]
  406361:	add    BYTE PTR [esi],al
  406363:	mov    ds:0x9d061007,al
  406368:	pop    es
  406369:	dec    esp
  40636a:	push   es
  40636b:	xchg   esp,eax
  40636c:	pop    es
  40636d:	sub    DWORD PTR [esi],eax
  40636f:	mov    es,WORD PTR [edi]
  406371:	sub    BYTE PTR [esi],al
  406373:	test   eax,0xa605f307
  406378:	pop    es
  406379:	aad    0x5
  40637b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637c:	pop    es
  40637d:	add    eax,0xc9079e06
  406382:	add    eax,0x63607b8
  406387:	mov    ebx,0xba063707
  40638c:	pop    es
  40638d:	lds    eax,FWORD PTR ds:0x60107b0
  406393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406394:	pop    es
  406395:	add    BYTE PTR [eax],al
  406397:	add    bl,bl
  406399:	add    eax,0x5d9079f
  40639e:	mov    DWORD PTR [edi],eax
  4063a0:	repnz add eax,0x6040786
  4063a6:	push   ebp
  4063a7:	pop    es
  4063a8:	in     al,0x5
  4063aa:	dec    esi
  4063ab:	pop    es
  4063ac:	sbb    BYTE PTR [esi],al
  4063ae:	pop    eax
  4063af:	pop    es
  4063b0:	mov    ch,0x5
  4063b2:	pop    ebx
  4063b3:	pop    es
  4063b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b5:	add    eax,0x5e4073a
  4063ba:	inc    eax
  4063bb:	pop    es
  4063bc:	mov    al,ds:0xf4340005
  4063c1:	fld    QWORD PTR [eax]
  4063c3:	das    
  4063c4:	in     al,dx
  4063c5:	fild   WORD PTR [eax]
  4063c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c8:	hlt    
  4063c9:	sub    al,0x20
  4063cb:	dec    eax
  4063cc:	sti    
  4063cd:	or     BYTE PTR [eax],dh
  4063cf:	dec    ebx
  4063d0:	jmp    0x4063cc
  4063d2:	das    
  4063d3:	dec    edx
  4063d4:	jmp    0x4063cf
  4063d6:	das    
  4063d7:	dec    ebp
  4063d8:	sti    
  4063d9:	add    eax,0x6ffb4430
  4063de:	xor    BYTE PTR [edi-0x15],cl
  4063e1:	js     0x406413
  4063e3:	inc    esi
  4063e4:	jmp    0x40638b
  4063e6:	xor    BYTE PTR [ecx-0x6fcf580c],dl
  4063ec:	in     al,dx
  4063ed:	mov    eax,ds:0xa3f48330
  4063f2:	xor    BYTE PTR [edx-0x6acf6214],al
  4063f8:	hlt    
  4063f9:	xor    BYTE PTR [si+0x0],cl
  4063fe:	add    ah,ch
  406400:	popa   
  406401:	xor    BYTE PTR [edi+0x7e3063f4],al
  406407:	in     al,dx
  406408:	inc    edi
  406409:	xor    BYTE PTR [ecx-0xc],bl
  40640c:	push   0x30
  40640e:	pop    eax
  40640f:	in     al,dx
  406410:	test   al,0x30
  406412:	pop    ebx
  406413:	hlt    
  406414:	mov    ds:0xa4ec5a30,al
  406419:	xor    BYTE PTR ds:0x34309ef4,bh
  40641f:	in     al,dx
  406420:	mov    al,ds:0x9ff43f30
  406425:	xor    BYTE PTR [esi],dh
  406427:	in     al,dx
  406428:	cdq    
  406429:	xor    BYTE PTR [ecx-0x5fcf640c],ah
  40642f:	in     al,dx
  406430:	mov    ch,0x30
  406432:	xchg   ebx,eax
  406433:	hlt    
  406434:	mov    bh,0x30
  406436:	xchg   edx,eax
  406437:	in     al,dx
  406438:	mov    cl,0x30
  40643a:	add    BYTE PTR [esi+0x3],dh
  40643d:	mov    bh,0x30
  40643f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406440:	add    edi,DWORD PTR [ecx-0x44fc5bd0]
  406446:	xor    BYTE PTR [ebp-0x25cf42fd],al
  40644c:	add    edi,DWORD PTR [edi-0x3efc24d0]
  406452:	xor    al,cl
  406454:	add    eax,esp
  406456:	xor    cl,cl
  406458:	add    eax,esi
  40645a:	xor    BYTE PTR [esi],bl
  40645c:	add    cl,al
  40645e:	xor    BYTE PTR [edi],cl
  406460:	add    cl,dl
  406462:	xor    BYTE PTR [eax],al
  406464:	add    BYTE PTR [eax],al
  406466:	or     al,0x2
  406468:	retf   
  406469:	xor    BYTE PTR ds:0x8230cc02,cl
  40646f:	dec    esp
  406471:	xor    BYTE PTR [ebx-0x6fcf3201],al
  406477:	dec    esi
  406479:	xor    BYTE PTR [ecx+0x6630d1ff],dl
  40647f:	call   esp
  406481:	xor    BYTE PTR [edi-0x1],dl
  406484:	xlat   BYTE PTR ds:[ebx]
  406485:	xor    BYTE PTR [edi+edi*8-0x26],dl
  406489:	xor    BYTE PTR [ebp-0x1],dh
  40648c:	fnsave [eax]
  40648e:	dec    edx
  40648f:	(bad)  
  406490:	fidiv  WORD PTR [eax]
  406492:	dec    ebx
  406493:	(bad)  
  406494:	fbstp  TBYTE PTR [eax]
  406496:	cmp    bh,bh
  406498:	loopne 0x4064ca
  40649a:	cmp    edi,edi
  40649c:	loope  0x4064ce
  40649e:	mov    ?,edi
  4064a0:	jecxz  0x4064d2
  4064a2:	jg     0x4064a3
  4064a4:	in     eax,0x30
  4064a6:	jl     0x4064a7
  4064a8:	out    0x30,eax
  4064aa:	jge    0x4064ab
  4064ac:	call   0xea3f16e1
  4064b1:	xor    BYTE PTR [ebx-0xccf1502],dh
  4064b7:	xor    eax,0x3503ec08
  4064bc:	or     ch,ch
  4064be:	jecxz  0x4064e3
  4064c0:	or     bh,ch
  4064c2:	jecxz  0x4064ce
  4064c4:	or     bl,dh
  4064c6:	jecxz  0x4064d9
  4064c8:	or     BYTE PTR [ebx-0x1d000000],bl
  4064ce:	clc    
  4064cf:	pop    es
  4064d0:	pushf  
  4064d1:	ret    
  4064d2:	rol    DWORD PTR [esi],cl
  4064d4:	or     al,0xed
  4064d6:	in     al,0x6
  4064d8:	sbb    esi,ebp
  4064da:	rol    BYTE PTR [esi],1
  4064dc:	pop    ds
  4064dd:	in     eax,dx
  4064de:	push   ds
  4064df:	pop    es
  4064e0:	and    ebp,esi
  4064e2:	sbb    eax,0x1ced2207
  4064e7:	pop    es
  4064e8:	and    esi,ebp
  4064ea:	sbb    eax,DWORD PTR [edi]
  4064ec:	and    al,0xed
  4064ee:	and    al,BYTE PTR [edi]
  4064f0:	and    eax,0x260699f5
  4064f5:	in     eax,dx
  4064f6:	mov    al,ds:0xa7f52706
  4064fb:	push   es
  4064fc:	sub    ch,ch
  4064fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ff:	push   es
  406500:	sub    ebp,esi
  406502:	mov    ch,0x6
  406504:	sub    ch,ch
  406506:	mov    ah,0x6
  406508:	sub    esi,ebp
  40650a:	mov    ds:0x8aed2c06,eax
  40650f:	push   es
  406510:	sub    eax,0x2e06b1f5
  406515:	in     eax,dx
  406516:	cwde   
  406517:	push   es
  406518:	das    
  406519:	cmc    
  40651a:	scas   eax,DWORD PTR es:[edi]
  40651b:	push   es
  40651c:	xor    ch,ch
  40651e:	scas   al,BYTE PTR es:[edi]
  40651f:	push   es
  406520:	xor    ebp,esi
  406522:	lea    eax,[esi]
  406524:	xor    ch,ch
  406526:	mov    WORD PTR [esi],es
  406528:	xor    esi,ebp
  40652a:	mov    eax,DWORD PTR [esi]
  40652c:	xor    al,0xed
  40652e:	xchg   edx,eax
  40652f:	push   es
  406530:	xor    eax,0xf5000000
  406535:	push   es
  406536:	aas    
  406537:	push   es
  406538:	std    
  406539:	add    BYTE PTR [esi],dh
  40653b:	push   es
  40653c:	add    al,0x1
  40653e:	xor    DWORD PTR [esi],eax
  406540:	sti    
  406541:	add    BYTE PTR [eax],dh
  406543:	push   es
  406544:	jmp    0x4900:0xe9062300
  40654b:	push   es
  40654c:	mov    bl,0x0
  40654e:	dec    eax
  40654f:	push   es
  406550:	mov    dl,0x0
  406552:	dec    ebx
  406553:	push   es
  406554:	mov    cl,0x0
  406556:	or     al,BYTE PTR [esi]
  406558:	mov    al,0x0
  40655a:	add    eax,0xc00b706
  40655f:	push   es
  406560:	scas   al,BYTE PTR es:[edi]
  406561:	add    BYTE PTR [edi],al
  406563:	push   es
  406564:	xor    eax,0x2c060e01
  406569:	add    DWORD PTR [ecx],edx
  40656b:	push   es
  40656c:	sub    eax,DWORD PTR [ecx]
  40656e:	add    BYTE PTR [esi],al
  406570:	sub    al,BYTE PTR [ecx]
  406572:	add    eax,DWORD PTR [esi]
  406574:	cmp    DWORD PTR [ecx],eax
  406576:	ror    BYTE PTR [ecx],cl
  406578:	cmp    BYTE PTR [ecx],al
  40657a:	int    0x9
  40657c:	das    
  40657d:	add    esp,eax
  40657f:	or     DWORD PTR [esi],esp
  406581:	add    DWORD PTR [edi-0x29fec2f7],edi
  406587:	or     DWORD PTR [ecx+eax*1],esi
  40658a:	mov    ecx,0xb8014309
  40658f:	or     DWORD PTR [edx+0x1],eax
  406592:	mov    ebx,0x48012109
  406597:	push   es
  406598:	add    BYTE PTR [eax],al
  40659a:	add    BYTE PTR [ecx],ah
  40659c:	add    ecx,DWORD PTR [ebx+0x6]
  40659f:	and    BYTE PTR [ebx],al
  4065a1:	dec    edx
  4065a2:	push   es
  4065a3:	and    al,BYTE PTR [ebx]
  4065a5:	inc    ebp
  4065a6:	push   es
  4065a7:	mov    DWORD PTR [edx],0x2be064c
  4065ad:	inc    edi
  4065ae:	push   es
  4065af:	lds    eax,FWORD PTR [edx]
  4065b1:	add    BYTE PTR [esi-0x13],cl
  4065b4:	iret   
  4065b5:	add    eax,DWORD PTR [ecx-0xb]
  4065b8:	into   
  4065b9:	add    edx,DWORD PTR [eax-0x6cfc3213]
  4065bf:	cmc    
  4065c0:	int3   
  4065c1:	add    eax,DWORD PTR [edx+0x7d03cbed]
  4065c7:	cmc    
  4065c8:	retf   0x9403
  4065cb:	in     eax,dx
  4065cc:	xchg   ebp,eax
  4065cd:	add    al,0x8f
  4065cf:	cmc    
  4065d0:	enter  0x8603,0xed
  4065d4:	mov    DWORD PTR [ebx],0x2110f579
  4065da:	pop    eax
  4065db:	in     eax,dx
  4065dc:	add    al,0x4
  4065de:	pop    ebx
  4065df:	cmc    
  4065e0:	add    eax,DWORD PTR [edx+ebx*2]
  4065e3:	in     eax,dx
  4065e4:	add    eax,0x2f55504
  4065e9:	add    al,0x3c
  4065eb:	in     eax,dx
  4065ec:	add    DWORD PTR [edi+esi*1],eax
  4065ef:	cmc    
  4065f0:	add    BYTE PTR [esi+edi*1],al
  4065f3:	in     eax,dx
  4065f4:	inc    DWORD PTR [ebx]
  4065f6:	xor    ebp,esi
  4065f8:	inc    BYTE PTR [ebx]
  4065fa:	mov    al,ds:0xa303fdee
  4065ff:	add    BYTE PTR [eax],al
  406601:	add    dh,dh
  406603:	cld    
  406604:	add    edx,DWORD PTR [edx-0x72fc0412]
  40660a:	idiv   dl
  40660c:	add    eax,DWORD PTR [esi+ebp*8-0x980fb6a]
  406613:	clc    
  406614:	add    esi,DWORD PTR [esi-0x12]
  406617:	test   DWORD PTR [ebx],0x3b8f6a9
  40661d:	test   al,0xee
  40661f:	ss add al,0xab
  406622:	div    BYTE PTR ds:0xc0eeaa04
  406628:	add    esp,DWORD PTR [ebp+0x432f6]
  40662e:	xchg   edi,eax
  40662f:	add    DWORD PTR ds:0x44019404,esi
  406635:	add    al,0x85
  406637:	add    DWORD PTR [ebx],esi
  406639:	add    al,0x92
  40663b:	add    DWORD PTR [ebp+0x4],eax
  40663e:	add    eax,DWORD PTR [edx]
  406640:	cmp    BYTE PTR [eax+eax*1],al
  406643:	add    bh,BYTE PTR [ecx]
  406645:	add    al,0x11
  406647:	add    bh,BYTE PTR [edx]
  406649:	add    al,0xe
  40664b:	add    bh,BYTE PTR [ebx]
  40664d:	add    al,0xdf
  40664f:	add    DWORD PTR [esp+eax*1],edi
  406652:	int3   
  406653:	add    DWORD PTR ds:0x3e01cd04,edi
  406659:	add    al,0xea
  40665b:	add    DWORD PTR [edi],edi
  40665d:	add    al,0xcb
  40665f:	add    DWORD PTR [edi+0x4],ecx
  406662:	mov    eax,0x44001
  406667:	add    BYTE PTR [eax],al
  406669:	mov    ecx,0x26044101
  40666e:	or     al,0x42
  406670:	add    al,0x7
  406672:	or     al,0x43
  406674:	add    al,0x4
  406676:	or     al,0x36
  406678:	add    al,0xf5
  40667a:	or     esi,DWORD PTR [edx]
  40667c:	add    al,0xe2
  40667e:	or     ecx,DWORD PTR [esp+eax*1-0x4d]
  406682:	or     eax,0xdb0044b
  406687:	aaa    
  406688:	add    al,0x81
  40668a:	or     eax,0xd5e0448
  40668f:	dec    ebp
  406690:	add    al,0x4f
  406692:	or     eax,0xd7c0449
  406697:	inc    edi
  406698:	add    al,0x7d
  40669a:	or     eax,0xdba044a
  40669f:	cs add al,0x7b
  4066a2:	or     eax,0xd680410
  4066a7:	adc    DWORD PTR [ebx+esi*8],eax
  4066aa:	nop
  4066ab:	push   es
  4066ac:	test   DWORD PTR es:[ebx-0x6d10ebfa],0x8df71506
  4066b7:	push   es
  4066b8:	and    al,0xef
  4066ba:	xchg   esp,eax
  4066bb:	push   es
  4066bc:	adc    esi,edi
  4066be:	xchg   DWORD PTR [esi],eax
  4066c0:	and    eax,0x1805b6ef
  4066c5:	idiv   DWORD PTR [ecx-0x3710e6fb]
  4066cb:	add    eax,0x1a
  4066d0:	mul    DWORD PTR [ebx]
  4066d2:	push   es
  4066d3:	sbb    ebp,edi
  4066d5:	mov    edx,0xd5f71c05
  4066da:	add    eax,0x5ccef1d
  4066df:	push   ds
  4066e0:	neg    DWORD PTR [edi]
  4066e2:	push   es
  4066e3:	pop    ds
  4066e4:	out    dx,eax
  4066e5:	inc    BYTE PTR ds:0x601f72f
  4066eb:	and    bh,ch
  4066ed:	add    BYTE PTR [esi],al
  4066ef:	and    edi,esi
  4066f1:	sti    
  4066f2:	add    eax,0x562ef22
  4066f7:	and    esi,edi
  4066f9:	pop    ebp
  4066fa:	add    eax,0x564ef16
  4066ff:	adc    dh,bh
  406701:	push   edi
  406702:	add    eax,0x566ef2c
  406707:	sub    esi,edi
  406709:	imul   eax,DWORD PTR ds:0x538ef17,0x553f728
  406713:	sub    eax,0x29054aef
  406718:	mul    DWORD PTR [ebp-0x6310d8fb]
  40671e:	add    eax,0x48ef72a
  406723:	xchg   al,dh
  406725:	push   es
  406726:	dec    ebx
  406727:	add    al,0x6b
  406729:	or     DWORD PTR [edx+0x4],ecx
  40672c:	push   0x9
  40672e:	dec    ebp
  40672f:	add    al,0x79
  406731:	or     DWORD PTR [esp+eax*1+0x0],eax
  406735:	add    BYTE PTR [eax],al
  406737:	cdq    
  406738:	or     DWORD PTR [esi+0x4],ecx
  40673b:	outs   dx,DWORD PTR ds:[esi]
  40673c:	or     DWORD PTR [ecx+0x4],edx
  40673f:	or     DWORD PTR gs:[eax+0x4],eax
  406743:	cwde   
  406744:	or     DWORD PTR [edx+0x4],eax
  406747:	je     0x406752
  406749:	xchg   edi,eax
  40674a:	add    al,0x76
  40674c:	or     DWORD PTR [esi-0x67d921fc],ecx
  406752:	add    al,0x5f
  406754:	or     DWORD PTR [ebx+0x7a095604],ebx
  40675a:	add    al,0x4d
  40675c:	or     DWORD PTR [ebp+0x4],esi
  40675f:	inc    esp
  406760:	or     DWORD PTR [esp+eax*1+0x39],edi
  406764:	or     DWORD PTR [edi+0x4],esi
  406767:	arpl   WORD PTR [ecx],cx
  406769:	pop    esi
  40676a:	add    al,0x2f
  40676c:	or     DWORD PTR [ecx+0x4],esp
  40676f:	or     DWORD PTR es:[eax+0x4],edx
  406773:	mov    eax,0xa3045308
  406778:	or     BYTE PTR [edx+0x4],al
  40677b:	lods   eax,DWORD PTR ds:[esi]
  40677c:	or     BYTE PTR [eax],ch
  40677e:	add    al,0x82
  406780:	or     BYTE PTR [ebx],ch
  406782:	add    al,0x61
  406784:	or     BYTE PTR [edx],ch
  406786:	add    al,0x60
  406788:	or     BYTE PTR [ebp-0x5bf798fd],ch
  40678e:	add    ebx,DWORD PTR [esi+0x8]
  406791:	scas   eax,DWORD PTR es:[edi]
  406792:	add    eax,DWORD PTR [ebp+0x7c03a608]
  406798:	or     BYTE PTR [ecx+0x3],dh
  40679e:	jnp    0x4067a8
  4067a0:	mov    al,0x3
  4067a2:	jp     0x4067ac
  4067a4:	add    BYTE PTR [ebx-0x5dfc7f10],ah
  4067aa:	lock jg 0x4067b0
  4067ad:	mov    ch,0xf0
  4067af:	add    BYTE PTR [ebx],0xac
  4067b2:	lock add DWORD PTR [ebx],0x384f0a7
  4067b9:	sahf   
  4067ba:	lock add DWORD PTR [ebx],0xffffff99
  4067be:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c0:	add    ebx,DWORD PTR [eax-0x64fc5a10]
  4067c6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c8:	add    edx,DWORD PTR [ebp+0x3c03aaf0]
  4067ce:	lock test eax,0xacf03703
  4067d4:	add    edi,DWORD PTR [esi]
  4067d6:	lock stos DWORD PTR es:[edi],eax
  4067d8:	add    esi,DWORD PTR [ecx]
  4067da:	lock scas al,BYTE PTR es:[edi]
  4067dc:	add    esp,DWORD PTR [eax]
  4067de:	lock lods eax,DWORD PTR ds:[esi]
  4067e0:	add    ecx,DWORD PTR [eax-0x10]
  4067e3:	xchg   ebp,eax
  4067e4:	add    ecx,DWORD PTR [ebx-0x10]
  4067e7:	cwde   
  4067e8:	add    ecx,DWORD PTR [edx-0x10]
  4067eb:	xchg   edi,eax
  4067ec:	add    ecx,DWORD PTR ds:0x4039af0
  4067f2:	lock cdq 
  4067f4:	add    ecx,DWORD PTR [edi]
  4067f6:	lock pushf 
  4067f8:	add    eax,DWORD PTR [esi]
  4067fa:	lock fwait
  4067fc:	add    edx,DWORD PTR [ecx]
  4067fe:	lock sahf 
  406800:	add    edx,DWORD PTR [eax]
  406802:	add    BYTE PTR [eax],al
  406804:	add    al,dh
  406806:	popf   
  406807:	add    eax,DWORD PTR [ebx]
  406809:	lock mov al,ds:0x9ff00203
  40680f:	add    edx,ebp
  406811:	icebp  
  406812:	mov    ds:0xa1f1cc03,al
  406817:	add    eax,edi
  406819:	icebp  
  40681a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40681b:	add    edi,DWORD PTR [esi+0x3a3f1]
  406821:	pop    edx
  406822:	or     al,al
  406824:	add    ebx,DWORD PTR [ebx+0x8]
  406827:	rol    DWORD PTR [ebx],0x48
  40682a:	or     bl,al
  40682c:	add    ecx,DWORD PTR [ecx+0x8]
  40682f:	ret    0x5e03
  406832:	or     ah,al
  406834:	add    ebx,DWORD PTR [edi+0x8]
  406837:	lds    eax,FWORD PTR [ebx]
  406839:	mov    WORD PTR [eax],cs
  40683b:	mov    BYTE PTR [ebx],0x7d
  40683e:	or     bh,al
  406840:	add    esi,DWORD PTR [edx+0x8]
  406843:	enter  0x7303,0x8
  406847:	leave  
  406848:	add    edi,DWORD PTR [ebx-0x47dc49a1]
  40684e:	pop    edi
  40684f:	or     esp,DWORD PTR ds:0x24ff5f69
  406855:	outs   dx,BYTE PTR ds:[esi]
  406856:	pop    edi
  406857:	pop    ds
  406858:	and    edi,DWORD PTR [edi+0x5f]
  40685b:	and    BYTE PTR [ebx],ah
  40685d:	ins    BYTE PTR es:[edi],dx
  40685e:	pop    edi
  40685f:	add    DWORD PTR ds:0x23a05f6d,esp
  406865:	sbb    BYTE PTR [edi-0x5e],0x23
  406869:	add    BYTE PTR [eax],al
  40686b:	add    BYTE PTR [ebx+0x5f],dh
  40686e:	mov    ds:0xa55f7023,eax
  406873:	and    esp,DWORD PTR [ecx-0x59dc65a1]
  406879:	pop    edi
  40687a:	pushf  
  40687b:	and    esi,DWORD PTR [edi]
  40687d:	pop    esi
  40687e:	popf   
  40687f:	and    esp,DWORD PTR [esi+ebx*2]
  406882:	lahf   
  406883:	and    eax,DWORD PTR [ebp+0x5e]
  406886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406887:	and    ebx,DWORD PTR [edx]
  406889:	pop    esi
  40688a:	stos   DWORD PTR es:[edi],eax
  40688b:	and    eax,DWORD PTR [esi]
  40688d:	pop    esi
  40688e:	arpl   WORD PTR [edx],sp
  406890:	pop    ss
  406891:	pop    esi
  406892:	pop    edi
  406893:	and    dl,BYTE PTR [ebx+eiz*2+0x63552264]
  40689a:	sub    ah,BYTE PTR [edx]
  40689c:	repz scas eax,DWORD PTR es:[edi]
  40689e:	cld    
  40689f:	xor    edx,ecx
  4068a1:	scas   al,BYTE PTR es:[edi]
  4068a2:	cld    
  4068a3:	sbb    al,0xd1
  4068a5:	lods   eax,DWORD PTR ds:[esi]
  4068a6:	cld    
  4068a7:	sbb    eax,0x6fcaad1
  4068ac:	shl    DWORD PTR [edi-0x592ec404],1
  4068b2:	cld    
  4068b3:	inc    edx
  4068b4:	rcr    DWORD PTR [edx-0x4e2d2c04],1
  4068ba:	cld    
  4068bb:	rcl    DWORD PTR [edx],1
  4068bd:	test   eax,0x9a1160fc
  4068c2:	cld    
  4068c3:	sbb    DWORD PTR [ecx],edx
  4068c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c6:	cld    
  4068c7:	adc    DWORD PTR [ecx],0x1182fca5
  4068cd:	jl     0x4068cb
  4068cf:	sub    BYTE PTR [eax],al
  4068d1:	add    BYTE PTR [eax],al
  4068d3:	adc    DWORD PTR [ebx-0x35eed604],edx
  4068d9:	sti    
  4068da:	adc    DWORD PTR es:[ecx],esp
  4068dd:	cld    
  4068de:	daa    
  4068df:	ror    eax,1
  4068e1:	sti    
  4068e2:	add    ecx,edx
  4068e4:	mov    ecx,0xc4f291fb
  4068e9:	sti    
  4068ea:	(bad)  
  4068eb:	shl    BYTE PTR [ebx],cl
  4068ed:	cld    
  4068ee:	nop
  4068ef:	rcr    BYTE PTR [edx],cl
  4068f1:	cld    
  4068f2:	xchg   ecx,eax
  4068f3:	shl    BYTE PTR [ecx],cl
  4068f5:	cld    
  4068f6:	xchg   edx,eax
  4068f7:	ror    al,cl
  4068f9:	cli    
  4068fa:	and    edi,ecx
  4068fc:	psubq  mm0,mm5
  4068ff:	push   ss
  406900:	psubq  mm2,QWORD PTR [ecx+0x8fb0e0e]
  406907:	pop    ss
  406908:	or     eax,0xc0f0bfb
  40690d:	sti    
  40690e:	or     al,0x17
  406910:	adc    edi,ebx
  406912:	or     DWORD PTR [edi],ecx
  406914:	or     bl,bh
  406916:	and    edx,DWORD PTR [edi]
  406918:	pop    es
  406919:	sar    dl,1
  40691b:	jmp    0x53b3c4a
  406920:	sub    al,0xc2
  406922:	cli    
  406923:	hlt    
  406924:	sub    edi,DWORD PTR [ebp-0x2bd41706]
  40692a:	cli    
  40692b:	add    BYTE PTR [edi+ecx*8],ch
  40692e:	cli    
  40692f:	enter  0xc62b,0xfa
  406933:	dec    edx
  406934:	and    eax,0xfab9
  406939:	add    BYTE PTR [ecx],bh
  40693b:	and    eax,0x2a74fa98
  406940:	fwait
  406941:	cli    
  406942:	test   al,0x25
  406944:	call   0xf8fa:0x9525a7fa
  40694b:	sub    edi,DWORD PTR [edx+edi*8+0x10]
  40694f:	sub    al,0x77
  406951:	cli    
  406952:	add    BYTE PTR [esi+edi*2],ch
  406955:	cli    
  406956:	sbb    BYTE PTR [ecx+esi*2],ch
  406959:	cli    
  40695a:	repnz sub ecx,DWORD PTR [eax-0x74d90e03]
  406961:	std    
  406962:	repnz es mov bh,ch
  406966:	lock es test ebp,edi
  40696a:	mul    DWORD PTR [esi]
  40696c:	mov    ebp,?
  40696e:	in     eax,dx
  40696f:	es xchg ebp,edi
  406972:	hlt    
  406973:	es mov ?,ebp
  406976:	sti    
  406977:	es cmp ebp,0xfd5026ea
  40697e:	loopne 0x4069a6
  406980:	push   ebx
  406981:	std    
  406982:	add    DWORD PTR [edi],esp
  406984:	inc    ebp
  406985:	std    
  406986:	adc    DWORD PTR [ebx],ebp
  406988:	aas    
  406989:	std    
  40698a:	push   ss
  40698b:	daa    
  40698c:	push   esi
  40698d:	std    
  40698e:	(bad)  
  406990:	cmp    ebp,edi
  406992:	and    DWORD PTR [esi],esp
  406994:	add    BYTE PTR [eax],bh
  406996:	(bad)  
  406997:	mov    ah,0x20
  406999:	cmp    edi,DWORD PTR [esi+0x9a20bb]
  40699f:	add    BYTE PTR [eax],al
  4069a1:	mov    ecx,0xa99520ba
  4069a6:	mov    ecx,0xb8a99c20
  4069ab:	and    BYTE PTR [edi+0x7e20bf99],dl
  4069b1:	cdq    
  4069b2:	mov    esi,0xb898120
  4069b7:	and    DWORD PTR [edx-0x77],esi
  4069ba:	neg    BYTE PTR [edi]
  4069bc:	ins    DWORD PTR es:[edi],dx
  4069bd:	jns    0x4069ee
  4069bf:	and    esp,DWORD PTR [ecx+edi*2+0x32]
  4069c3:	add    BYTE PTR [edi+0x69],bl
  4069c6:	and    ebp,DWORD PTR cs:[edx-0x5adf4297]
  4069cd:	pop    ecx
  4069ce:	mov    esp,0xc359ac20
  4069d3:	and    BYTE PTR [edi-0x5fdf3db7],ah
  4069d9:	dec    ecx
  4069da:	and    DWORD PTR es:[ebx+0x3525f539],esp
  4069e1:	cmp    DWORD PTR [edi+0x25],eax
  4069e4:	sub    al,0x29
  4069e6:	cdq    
  4069e7:	and    eax,0x254d2927
  4069ec:	push   ds
  4069ed:	sbb    DWORD PTR [ecx-0x7e6e6db],esi
  4069f3:	pop    ds
  4069f4:	sbb    BYTE PTR [ecx],cl
  4069f6:	call   FWORD PTR [edi]
  4069f8:	sbb    ecx,DWORD PTR [ecx]
  4069fa:	cld    
  4069fb:	pop    ds
  4069fc:	sbb    bh,cl
  4069fe:	add    ah,BYTE PTR [eax]
  406a00:	cmp    eax,0x372101f9
  406a05:	add    BYTE PTR [eax],al
  406a07:	add    cl,ch
  406a09:	adc    eax,0x14e93e20
  406a0e:	and    BYTE PTR [eax],dh
  406a10:	fld    DWORD PTR [edx]
  406a12:	daa    
  406a13:	add    BYTE PTR [ecx],dl
  406a15:	pop    ebp
  406a16:	stos   DWORD PTR es:[edi],eax
  406a17:	and    eax,0x25bf5cee
  406a1c:	fistp  WORD PTR [ebp+esi*4+0x25]
  406a20:	in     al,dx
  406a21:	pop    esp
  406a22:	into   
  406a23:	and    eax,0x25ad5dad
  406a28:	mov    edx,0xbb25e55d
  406a2d:	pop    ebp
  406a2e:	stos   BYTE PTR es:[edi],al
  406a2f:	and    eax,0x25ac5da8
  406a34:	test   eax,0xb625b25d
  406a39:	pop    ebp
  406a3a:	mov    esp,0x55db725
  406a3f:	es mov ah,0x5d
  406a42:	and    DWORD PTR [eax],esp
  406a44:	gs pop ebp
  406a46:	test   eax,0xb15d8225
  406a4b:	and    eax,0x25bb5d73
  406a50:	jo     0x406aaf
  406a52:	sbb    esp,DWORD PTR [esi]
  406a54:	sbb    DWORD PTR [ebp+0x1d],0x625d7e26
  406a5b:	outs   dx,DWORD PTR es:[esi]
  406a5d:	pop    ebp
  406a5e:	gs es mov esp,0x9a26645d
  406a65:	pop    ebp
  406a66:	pop    ds
  406a67:	daa    
  406a68:	retf   
  406a69:	pop    ebp
  406a6a:	pop    ds
  406a6b:	and    BYTE PTR [eax],al
  406a6d:	add    BYTE PTR [eax],al
  406a6f:	enter  0x205d,0x20
  406a73:	mov    ecx,0xd627125d
  406a78:	pop    ebp
  406a79:	push   ss
  406a7a:	daa    
  406a7b:	(bad)  
  406a7c:	pop    ebp
  406a7d:	outs   dx,BYTE PTR ds:[esi]
  406a7e:	les    ebx,FWORD PTR es:[ebp+0x6c]
  406a82:	lds    ebx,FWORD PTR es:[ebp+0x41]
  406a86:	rcr    BYTE PTR es:[ebp+0x3f],cl
  406a8a:	adc    esp,DWORD PTR es:[eax+0xd]
  406a8e:	es repz stc 
  406a91:	clc    
  406a92:	adc    al,0x10
  406a94:	stc    
  406a95:	clc    
  406a96:	push   ss
  406a97:	adc    al,BYTE PTR [ecx+edi*8]
  406a9a:	aaa    
  406a9b:	adc    ebx,DWORD PTR [ebx-0x8]
  406a9e:	sbb    DWORD PTR [ebx],edx
  406aa0:	push   esi
  406aa1:	clc    
  406aa2:	sbb    eax,0x3bf9d113
  406aa7:	repz (bad) 
  406aa9:	stc    
  406aaa:	cmp    eax,0x27f977f3
  406aaf:	rol    DWORD PTR [esi-0x502ed907],1
  406ab5:	stc    
  406ab6:	scas   al,BYTE PTR es:[edi]
  406ab7:	repz mov cl,0xf9
  406aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406abb:	shl    DWORD PTR [eax-0x542ed707],1
  406ac1:	stc    
  406ac2:	or     eax,edx
  406ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac5:	stc    
  406ac6:	pop    esi
  406ac7:	repz cdq 
  406ac9:	stc    
  406aca:	pop    ss
  406acb:	adc    DWORD PTR [ecx+edi*8-0x659ef6c],ebp
  406ad2:	mov    ds:0x11000000,eax
  406ad7:	jge    0x406ad2
  406ad9:	retf   0x810e
  406adc:	stc    
  406add:	pop    es
  406ade:	adc    BYTE PTR [esi-0x7],dh
  406ae1:	sub    DWORD PTR [ecx],edx
  406ae3:	js     0x406ade
  406ae5:	adc    BYTE PTR [ecx],0x7a
  406ae8:	stc    
  406ae9:	adc    DWORD PTR [ecx],0xd1a1f8c4
  406aef:	mov    ebx,0x14d1a2f8
  406af4:	clc    
  406af5:	push   ss
  406af6:	ror    edi,cl
  406af8:	test   edi,0xd0f7ceee
  406afe:	not    cl
  406b00:	not    ecx
  406b02:	out    dx,al
  406b03:	shl    bh,1
  406b05:	shl    dh,cl
  406b07:	ret    
  406b08:	not    ebx
  406b0a:	out    dx,al
  406b0b:	push   es
  406b0c:	or     al,0xf8
  406b0e:	mov    DWORD PTR [ebx],0x3bef807
  406b14:	push   cs
  406b15:	clc    
  406b16:	lds    eax,FWORD PTR [ebx]
  406b18:	add    eax,edi
  406b1a:	mov    esp,0xabf81003
  406b1f:	add    edx,DWORD PTR [ebx]
  406b21:	clc    
  406b22:	stos   BYTE PTR es:[edi],al
  406b23:	add    eax,DWORD PTR [edx]
  406b25:	clc    
  406b26:	cdq    
  406b27:	add    edi,ebp
  406b29:	neg    DWORD PTR [eax-0x30082bfd]
  406b2f:	add    ecx,edi
  406b31:	test   esi,0xbdf7c603
  406b37:	add    ebx,ecx
  406b39:	test   DWORD PTR [eax],0x3b40000
  406b3f:	mov    eax,0xbb0393f7
  406b44:	not    DWORD PTR [edx-0x6e0845fd]
  406b4a:	add    esi,DWORD PTR [ebp-0x63fc6f09]
  406b50:	not    DWORD PTR [edi+0x3]
  406b53:	xchg   edi,eax
  406b54:	test   DWORD PTR [esi+0x3],0x355f79e
  406b5b:	xchg   ecx,eax
  406b5c:	test   DWORD PTR [ebx+eax*1-0x80],0x83035bf7
  406b64:	neg    DWORD PTR [edx+0x3]
  406b67:	dec    eax
  406b68:	div    bl
  406b6a:	or     al,0x4b
  406b6c:	div    dl
  406b6e:	or     al,0x8a
  406b70:	div    cl
  406b72:	or     al,0x85
  406b74:	div    al
  406b76:	or     al,0x8c
  406b78:	div    bh
  406b7a:	or     al,0x87
  406b7c:	imul   dh
  406b7e:	or     al,0x8e
  406b80:	div    ch
  406b82:	or     al,0x91
  406b84:	imul   ah
  406b86:	or     al,0x0
  406b88:	add    BYTE PTR ds:0xfd830e0e,0xe
  406b8f:	push   cs
  406b90:	push   edx
  406b91:	in     eax,0x11
  406b93:	push   cs
  406b94:	dec    ebp
  406b95:	fst    QWORD PTR [eax]
  406b97:	push   cs
  406b98:	inc    esp
  406b99:	in     eax,0xb
  406b9b:	push   cs
  406b9c:	aas    
  406b9d:	fisttp QWORD PTR [edx]
  406b9f:	push   cs
  406ba0:	push   esi
  406ba1:	add    BYTE PTR [eax],al
  406ba3:	add    ch,al
  406ba5:	or     eax,0xcbd390e
  406baa:	push   cs
  406bab:	cmp    ch,al
  406bad:	test   DWORD PTR ds:0xdf6bd3b,0xdf8029a
  406bb7:	xchg   ebp,eax
  406bb8:	add    dh,bl
  406bba:	or     eax,0xdf2029c
  406bbf:	xchg   edi,eax
  406bc0:	add    dh,ch
  406bc2:	or     eax,0xdf3e27e
  406bc7:	and    edx,0xe2700dfe
  406bcd:	std    
  406bce:	or     eax,0xe00e273
  406bd3:	bound  eax,QWORD PTR [edx]
  406bd5:	add    BYTE PTR [esi],cl
  406bd7:	pop    ebp
  406bd8:	add    bh,bl
  406bda:	or     eax,0xdfa0254
  406bdf:	dec    edi
  406be0:	add    bh,ch
  406be2:	or     eax,0xdfbe246
  406be7:	test   eax,0xa80e26e2
  406bec:	loop   0x406c13
  406bee:	push   cs
  406bef:	stos   DWORD PTR es:[edi],eax
  406bf0:	loop   0x406c1a
  406bf2:	push   cs
  406bf3:	sub    al,BYTE PTR [edx]
  406bf5:	sub    BYTE PTR [esi],cl
  406bf7:	and    eax,0x2c0e2302
  406bfc:	add    ah,BYTE PTR [edx]
  406bfe:	push   cs
  406bff:	daa    
  406c00:	add    ah,BYTE PTR ds:0xf5dd000e
  406c06:	es push cs
  406c08:	add    BYTE PTR [eax],al
  406c0a:	add    dl,al
  406c0c:	cmc    
  406c0d:	daa    
  406c0e:	push   cs
  406c0f:	shl    ebp,cl
  406c11:	sub    BYTE PTR [esi],cl
  406c13:	shl    ch,1
  406c15:	sub    DWORD PTR [esi],ecx
  406c17:	and    esi,esi
  406c19:	sub    cl,BYTE PTR [esi]
  406c1b:	push   ss
  406c1c:	imul   BYTE PTR [ebx]
  406c1e:	push   cs
  406c1f:	pop    ss
  406c20:	imul   BYTE PTR [esi+ecx*1]
  406c23:	hlt    
  406c24:	cmc    
  406c25:	sub    eax,0x2ef6050e
  406c2a:	push   cs
  406c2b:	jmp    0x30f5:0xdb0e2ff5
  406c32:	push   cs
  406c33:	fdiv   st,st(5)
  406c35:	xor    DWORD PTR [esi],ecx
  406c37:	imul   esi,esi,0xf65e0e32
  406c3d:	xor    ecx,DWORD PTR [esi]
  406c3f:	pop    edi
  406c40:	div    BYTE PTR [esi+ecx*1]
  406c43:	pop    esp
  406c44:	div    BYTE PTR ds:0x36f66d0e
  406c4a:	push   cs
  406c4b:	push   edx
  406c4c:	div    BYTE PTR [edi]
  406c4e:	push   cs
  406c4f:	arpl   si,si
  406c51:	cmp    BYTE PTR [esi],cl
  406c53:	pusha  
  406c54:	idiv   BYTE PTR [ecx]
  406c56:	push   cs
  406c57:	xor    al,0xf6
  406c59:	cmp    eax,0x3ef6a50e
  406c5e:	push   cs
  406c5f:	push   0xfffffff6
  406c61:	aas    
  406c62:	push   cs
  406c63:	imul   esi,esi,0x40
  406c66:	push   cs
  406c67:	js     0x406c5f
  406c69:	inc    ecx
  406c6a:	push   cs
  406c6b:	jns    0x406c63
  406c6d:	inc    edx
  406c6e:	push   cs
  406c6f:	add    BYTE PTR [eax],al
  406c71:	add    BYTE PTR [esi-0xa],ch
  406c74:	inc    ebx
  406c75:	push   cs
  406c76:	outs   dx,DWORD PTR ds:[esi]
  406c77:	test   BYTE PTR [esi+ecx*1-0x44],0xf6
  406c7c:	inc    ebp
  406c7d:	push   cs
  406c7e:	lods   eax,DWORD PTR ds:[esi]
  406c7f:	test   BYTE PTR [esi+0xe],0xf3
  406c83:	lds    ecx,FWORD PTR [edi]
  406c85:	dec    eax
  406c86:	in     eax,0xc6
  406c88:	cmovns edi,ebp
  406c8b:	mov    bh,0xf
  406c8d:	dec    edx
  406c8e:	cmc    
  406c8f:	mov    eax,0xc1ed4b0f
  406c94:	cmovl  esp,ebp
  406c97:	sbb    dl,BYTE PTR [eax]
  406c99:	dec    ebp
  406c9a:	std    
  406c9b:	dec    DWORD PTR [edi]
  406c9d:	push   eax
  406c9e:	cmc    
  406c9f:	dec    BYTE PTR [edi]
  406ca1:	push   ecx
  406ca2:	in     eax,dx
  406ca3:	std    
  406ca4:	rsqrtps xmm4,xmm5
  406ca7:	cld    
  406ca8:	rcpps  xmm7,xmm5
  406cab:	pop    ebx
  406cac:	andps  xmm6,xmm5
  406caf:	push   edx
  406cb0:	andnps xmm5,xmm5
  406cb3:	pop    ecx
  406cb4:	orps   xmm4,xmm5
  406cb7:	push   eax
  406cb8:	xorps  xmm7,xmm5
  406cbb:	addr16 addps xmm6,xmm5
  406cbf:	mulpd  xmm5,xmm5
  406cc3:	mov    ss,WORD PTR [edx]
  406cc5:	xor    edx,esp
  406cc7:	lea    edx,[edx]
  406cc9:	xor    al,dl
  406ccb:	mov    WORD PTR [edx],ss
  406ccd:	xor    eax,edx
  406ccf:	adc    DWORD PTR [edx],0x34
  406cd2:	ret    0x128a
  406cd5:	xor    eax,0xc2000000
  406cda:	adc    DWORD PTR [edx],0x11c92236
  406ce0:	aaa    
  406ce1:	and    bh,BYTE PTR [eax-0x38ddc7ef]
  406ce7:	adc    DWORD PTR [ecx],edi
  406ce9:	and    al,dh
  406ceb:	adc    DWORD PTR [edx],edi
  406ced:	add    dh,BYTE PTR [ebp-0x33fdc4ef]
  406cf3:	adc    DWORD PTR [edx+eax*1],edi
  406cf6:	ret    
  406cf7:	adc    DWORD PTR ds:0x3e121a02,edi
  406cfd:	loop   0x406d05
  406cff:	xchg   esi,eax
  406d00:	adc    ah,ah
  406d02:	pop    ss
  406d03:	cdq    
  406d04:	adc    dh,BYTE PTR [ebx-0x4ded67e9]
  406d0a:	pop    ss
  406d0b:	fwait
  406d0c:	adc    dh,BYTE PTR [ecx-0x4fed85e9]
  406d12:	pop    ss
  406d13:	jne    0x406d27
  406d15:	mov    bh,0x17
  406d17:	jl     0x406d2b
  406d19:	scas   al,BYTE PTR es:[edi]
  406d1a:	pop    ss
  406d1b:	ja     0x406d2f
  406d1d:	xor    eax,0x2c125e18
  406d22:	sbb    BYTE PTR [ecx+0x12],ah
  406d25:	sub    ebx,DWORD PTR [eax]
  406d27:	push   eax
  406d28:	adc    ch,BYTE PTR [edx]
  406d2a:	sbb    BYTE PTR [ebx+0x12],dl
  406d2d:	cmp    DWORD PTR [eax],ebx
  406d2f:	inc    edx
  406d30:	adc    bh,BYTE PTR [eax]
  406d32:	sbb    BYTE PTR ds:0x34182f12,bh
  406d38:	adc    ah,BYTE PTR [esi]
  406d3a:	sbb    BYTE PTR [edi],ch
  406d3c:	adc    al,BYTE PTR [eax]
  406d3e:	add    BYTE PTR [eax],al
  406d40:	cmp    eax,0x3411a618
  406d45:	sbb    BYTE PTR [ecx-0x57e7bcef],ch
  406d4b:	adc    DWORD PTR [edx+0x18],eax
  406d4e:	stos   DWORD PTR es:[edi],eax
  406d4f:	adc    DWORD PTR [ecx],esp
  406d51:	sbb    BYTE PTR [edx-0x5ae7dfef],ch
  406d57:	adc    DWORD PTR [edi],esp
  406d59:	sbb    BYTE PTR [ecx+edx*1+0x11a7181e],ch
  406d60:	lds    edx,FWORD PTR [edi]
  406d62:	scas   al,BYTE PTR es:[edi]
  406d63:	adc    DWORD PTR [edi+edx*1+0x17bb11b1],edi
  406d6a:	mov    al,ds:0xa317ba11
  406d6f:	adc    DWORD PTR [ecx-0x57ee4de9],ebp
  406d75:	pop    ss
  406d76:	lods   eax,DWORD PTR ds:[esi]
  406d77:	adc    DWORD PTR [edi-0x1d5bffe9],ebx
  406d7d:	mov    ebx,0xb9029f30
  406d82:	xor    BYTE PTR [esi],dh
  406d84:	add    bh,BYTE PTR [edx-0x18fdc6d0]
  406d8a:	xor    BYTE PTR [eax],bh
  406d8c:	add    ch,al
  406d8e:	xor    BYTE PTR [ebx],bh
  406d90:	loop   0x406d76
  406d92:	xor    BYTE PTR [edx],bl
  406d94:	loop   0x406d7b
  406d96:	xor    BYTE PTR ds:0x1c11aee2,dl
  406d9c:	loop   0x406d4d
  406d9e:	adc    DWORD PTR [edi],edx
  406da0:	add    ch,BYTE PTR [ebp+0x3e11]
  406da6:	add    BYTE PTR [edx],al
  406da8:	lods   al,BYTE PTR ds:[esi]
  406da9:	adc    DWORD PTR [ecx+0x2],eax
  406dac:	stos   DWORD PTR es:[edi],eax
  406dad:	adc    DWORD PTR [eax],esi
  406daf:	add    ch,BYTE PTR [edx-0x571dccef]
  406db5:	adc    DWORD PTR [edx],esp
  406db7:	loop   0x406d60
  406db9:	adc    DWORD PTR ds:0x141196e2,ebx
  406dbf:	loop   0x406d56
  406dc1:	adc    DWORD PTR [edi],ecx
  406dc3:	add    dl,BYTE PTR [ebp-0x6c0a39ef]
  406dc9:	adc    ecx,ecx
  406dcb:	in     eax,dx
  406dcc:	xchg   edx,eax
  406dcd:	adc    eax,ecx
  406dcf:	in     eax,0x91
  406dd1:	adc    ebx,ecx
  406dd3:	std    
  406dd4:	nop
  406dd5:	adc    edx,ecx
  406dd7:	cmc    
  406dd8:	(bad)  
  406dd9:	adc    ebp,eax
  406ddb:	in     eax,dx
  406ddc:	sahf   
  406ddd:	adc    esp,ecx
  406ddf:	in     eax,0x9d
  406de1:	adc    edi,eax
  406de3:	std    
  406de4:	pushf  
  406de5:	adc    DWORD PTR [esi-0x6eee640b],ecx
  406deb:	in     eax,dx
  406dec:	call   0x8311:0x99e58011
  406df3:	std    
  406df4:	cwde   
  406df5:	adc    DWORD PTR [eax],eax
  406df7:	popa   
  406df8:	or     DWORD PTR [edi-0x3ff691ef],edi
  406dfe:	adc    DWORD PTR [edi+0x9],ebp
  406e01:	rcl    DWORD PTR [ecx],0xac
  406e04:	or     dl,al
  406e06:	adc    DWORD PTR [ebp+0x316d08],edi
  406e0c:	add    BYTE PTR [eax],al
  406e0e:	mov    edx,0xbb317108
  406e13:	or     BYTE PTR [eax+0x31],bh
  406e16:	test   al,0x8
  406e18:	jg     0x406e4b
  406e1a:	leave  
  406e1b:	or     BYTE PTR [ecx-0x7bf739cf],al
  406e21:	xor    DWORD PTR [edi+0x24318608],esi
  406e27:	or     DWORD PTR [ebp-0x71f6facf],ecx
  406e2d:	xor    DWORD PTR [edx],edx
  406e2f:	or     ebx,ebp
  406e31:	adc    DWORD PTR [ebx],eax
  406e33:	or     eax,esi
  406e35:	adc    eax,esp
  406e37:	or     cl,bh
  406e39:	adc    ebp,ebp
  406e3b:	or     BYTE PTR [ecx-0x54abc9e0],ch
  406e41:	and    dh,bh
  406e43:	push   ebx
  406e44:	push   ecx
  406e45:	add    edi,ebx
  406e47:	push   ebx
  406e48:	push   edx
  406e49:	add    DWORD PTR [esp+edx*2+0x77],ecx
  406e4d:	add    DWORD PTR [edx+0x23],ebp
  406e50:	mov    al,ds:0xa1236b20
  406e55:	and    BYTE PTR [eax+0x23],bh
  406e58:	mov    ds:0xa3237920,al
  406e5d:	and    BYTE PTR [esi+0x23],dh
  406e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e61:	and    BYTE PTR [edi+0x23],ah
  406e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e65:	and    BYTE PTR [ebx+eiz*1-0x5a],dh
  406e69:	and    BYTE PTR [ebp-0x3ddf58dd],dh
  406e6f:	and    ebp,DWORD PTR [eax+0x20]
  406e75:	repz (bad) 
  406e77:	and    ch,BYTE PTR [ecx-0x55dd3bed]
  406e7d:	adc    esi,DWORD PTR [ebp-0x35ec54de]
  406e83:	and    ch,BYTE PTR [ebx+edx*1-0xcffa19a]
  406e8a:	add    eax,DWORD PTR gs:[eax]
  406e8d:	repz push esi
  406e8f:	pop    esi
  406e90:	add    bl,dh
  406e92:	push   esi
  406e93:	add    eax,DWORD PTR [eax]
  406e95:	repz fs pop esi
  406e98:	add    bl,dh
  406e9a:	cmp    DWORD PTR [ebx],eax
  406e9c:	add    bl,dh
  406e9e:	push   edx
  406e9f:	pop    esi
  406ea0:	add    bl,dh
  406ea2:	push   0x3
  406ea4:	add    bl,dh
  406ea6:	cmp    al,0x5e
  406ea8:	add    bl,dh
  406eaa:	xor    BYTE PTR [ebx],al
  406eac:	add    bl,dh
  406eae:	or     BYTE PTR [edi+0x0],bl
  406eb1:	repz or BYTE PTR [eax+eax*1],al
  406eb5:	repz cld 
  406eb7:	pop    ebp
  406eb8:	add    bl,dh
  406eba:	xchg   ebp,eax
  406ebb:	add    al,0x0
  406ebd:	rep outs dx,DWORD PTR ds:[esi]
  406ebf:	pop    esi
  406ec0:	add    bl,dh
  406ec2:	dec    ebx
  406ec3:	add    al,0x0
  406ec5:	rep outs dx,BYTE PTR ds:[esi]
  406ec7:	pop    esi
  406ec8:	add    bl,dh
  406eca:	dec    edx
  406ecb:	add    al,0x0
  406ecd:	repz adc DWORD PTR [ebp+0x0],ebx
  406ed1:	repz or eax,0x10f30003
  406ed7:	pop    ebp
  406ed8:	add    BYTE PTR [eax],al
  406eda:	add    BYTE PTR [eax],al
  406edc:	repz or al,0x3
  406edf:	add    bl,dh
  406ee1:	repz pop esp
  406ee3:	add    bl,dh
  406ee5:	test   DWORD PTR [edx],0x5cf2f300
  406eeb:	add    bl,dh
  406eed:	inc    BYTE PTR [edx]
  406eef:	add    bl,dh
  406ef1:	push   es
  406ef2:	aas    
  406ef3:	pop    ebp
  406ef4:	repz push es
  406ef6:	retf   
  406ef7:	add    dh,bl
  406ef9:	push   es
  406efa:	ds pop ebp
  406efc:	repz push es
  406efe:	retf   0xf302
  406f01:	push   es
  406f02:	or     DWORD PTR [ebp-0xd],ebx
  406f05:	push   es
  406f06:	rol    BYTE PTR [ebx],1
  406f08:	repz push es
  406f0a:	or     BYTE PTR [ebp-0xd],bl
  406f0d:	push   es
  406f0e:	mov    ebp,0xcb06f303
  406f13:	pop    esp
  406f14:	repz push es
  406f16:	adc    al,BYTE PTR [ebx+esi*8]
  406f19:	push   es
  406f1a:	retf   0xf35c
  406f1d:	push   es
  406f1e:	cld    
  406f1f:	add    dh,bl
  406f21:	push   es
  406f22:	rcr    DWORD PTR [ebx+esi*8+0x6],cl
  406f26:	push   cs
  406f27:	add    al,0xf3
  406f29:	push   es
  406f2a:	ret    0xf35c
  406f2d:	push   es
  406f2e:	jmp    0xf35d:0x6906f302
  406f35:	push   es
  406f36:	leave  
  406f37:	add    esi,ebx
  406f39:	push   es
  406f3a:	pusha  
  406f3b:	pop    ebp
  406f3c:	repz push es
  406f3e:	loopne 0x406f43
  406f40:	add    BYTE PTR [eax],al
  406f42:	add    bl,dh
  406f44:	push   es
  406f45:	je     0x406fa4
  406f47:	repz push es
  406f49:	in     al,dx
  406f4a:	add    dh,bl
  406f4c:	push   es
  406f4d:	pop    eax
  406f4e:	pop    ebp
  406f4f:	repz push es
  406f51:	jns    0x406f56
  406f53:	repz push es
  406f55:	jnp    0x406fb3
  406f57:	repz push es
  406f59:	pop    eax
  406f5a:	add    al,0xf3
  406f5c:	push   es
  406f5d:	jp     0x406fbb
  406f5f:	repz push es
  406f61:	pop    ebx
  406f62:	add    al,0xf3
  406f64:	push   es
  406f65:	pop    ebp
  406f66:	pop    esp
  406f67:	repz push es
  406f69:	cmp    al,BYTE PTR [ebx+esi*8]
  406f6c:	push   es
  406f6d:	add    BYTE PTR [edi+ecx*8+0x6],bl
  406f71:	add    BYTE PTR ds:0x7f0006ef,al
  406f77:	mov    edi,0xf0c40006
  406f7c:	push   es
  406f7d:	add    BYTE PTR [esi-0x51],bh
  406f80:	push   es
  406f81:	add    bh,al
  406f83:	lock push es
  406f85:	add    BYTE PTR [ecx-0x61],ah
  406f88:	push   es
  406f89:	add    dh,al
  406f8b:	lock push es
  406f8d:	add    BYTE PTR [eax-0x31],dl
  406f90:	push   es
  406f91:	add    cl,al
  406f93:	lock push es
  406f95:	add    BYTE PTR [ebp+0xa0006bf],al
  406f9b:	out    dx,eax
  406f9c:	push   es
  406f9d:	add    BYTE PTR [ebx-0x51],dh
  406fa0:	push   es
  406fa1:	add    BYTE PTR [eax],cl
  406fa3:	out    dx,eax
  406fa4:	push   es
  406fa5:	add    BYTE PTR [edx+0x0],ah
  406fa8:	add    BYTE PTR [eax],al
  406faa:	lahf   
  406fab:	push   es
  406fac:	add    BYTE PTR [ebx],cl
  406fae:	out    dx,eax
  406faf:	push   es
  406fb0:	add    BYTE PTR [edi+ecx*2+0x7],dl
  406fb4:	add    ch,bl
  406fb6:	lock push es
  406fb8:	add    BYTE PTR [edi-0x33fff8c1],al
  406fbe:	lock push es
  406fc0:	add    BYTE PTR [esi+0x2f],dh
  406fc3:	pop    es
  406fc4:	add    BYTE PTR [edi+0x530006f0],bh
  406fca:	pop    ds
  406fcb:	pop    es
  406fcc:	add    BYTE PTR [ebx+0x420006f0],dl
  406fd2:	dec    edi
  406fd3:	pop    es
  406fd4:	add    BYTE PTR [edx-0x6afff910],al
  406fda:	cmp    BYTE PTR [edi],al
  406fdc:	add    BYTE PTR [ebp-0x11],cl
  406fdf:	push   es
  406fe0:	add    BYTE PTR [eax+ebp*1-0x10c3fff9],al
  406fe7:	push   es
  406fe8:	add    BYTE PTR [eax],al
  406fea:	fs mov al,0xff
  406fed:	jmp    DWORD PTR [ebx+ecx*1]
  406ff0:	add    BYTE PTR [eax],al
  406ff2:	jne    0x406fa4
  406ff4:	(bad)  
  406ff5:	jmp    DWORD PTR ds:0xba00000a
  406ffb:	scas   eax,DWORD PTR es:[edi]
  406ffc:	(bad)  
  406ffd:	(bad)  
  406ffe:	jmp    0xffaf:0xab00000a
  407005:	(bad)  
  407006:	sti    
  407007:	or     al,BYTE PTR [eax]
  407009:	add    al,bh
  40700b:	scas   eax,DWORD PTR es:[edi]
  40700c:	(bad)  
  40700d:	inc    DWORD PTR [eax]
  40700f:	add    BYTE PTR [eax],al
  407011:	call   0xe9407020
  407016:	scas   eax,DWORD PTR es:[edi]
  407017:	(bad)  
  407018:	(bad)  
  407019:	stc    
  40701a:	or     al,BYTE PTR [eax]
  40701c:	add    BYTE PTR [esi-0x50],bh
  40701f:	(bad)  
  407020:	jmp    FWORD PTR [esi]
  407022:	or     BYTE PTR [eax],al
  407024:	add    BYTE PTR [edi-0x50],ch
  407027:	(bad)  
  407028:	jmp    FWORD PTR [edi]
  40702a:	or     BYTE PTR [eax],al
  40702c:	add    BYTE PTR [edi+ebp*4-0x1],bh
  407030:	jmp    FWORD PTR [eax+ecx*1]
  407033:	add    BYTE PTR [eax],al
  407035:	ins    DWORD PTR es:[edi],dx
  407036:	mov    al,0xff
  407038:	jmp    FWORD PTR [ebp+0x52000007]
  40703e:	mov    al,0xff
  407040:	inc    DWORD PTR [edx+0x23000007]
  407046:	mov    al,0xff
  407048:	push   DWORD PTR [ebx+0x7]
  40704b:	add    BYTE PTR [eax],al
  40704d:	xor    al,0xb0
  40704f:	(bad)  
  407050:	(bad)  
  407051:	cmp    cl,BYTE PTR [eax]
  407053:	add    BYTE PTR [eax],al
  407055:	in     eax,0xaf
  407057:	(bad)  
  407058:	jmp    FWORD PTR [ebx]
  40705a:	or     BYTE PTR [eax],al
  40705c:	add    BYTE PTR [edx-0x50],cl
  40705f:	(bad)  
  407060:	(bad)  
  407061:	cmp    BYTE PTR [ebx],cl
  407063:	add    BYTE PTR [eax],al
  407065:	repz sahf 
  407067:	pop    edx
  407068:	add    bl,dh
  40706a:	mov    al,0x3
  40706c:	add    bl,dh
  40706e:	lahf   
  40706f:	pop    edx
  407070:	add    bl,dh
  407072:	sbb    DWORD PTR [eax+eax*1],eax
  407075:	add    BYTE PTR [eax],al
  407077:	add    bl,dh
  407079:	mov    al,ds:0x1af3005a
  40707e:	add    al,0x0
  407080:	repz mov eax,ds:0xfbf3005a
  407086:	add    eax,DWORD PTR [eax]
  407088:	repz mov ds:0xfcf3005a,al
  40708e:	add    eax,DWORD PTR [eax]
  407090:	repz mov ds:0x5f3005a,eax
  407096:	add    al,0x0
  407098:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709a:	pop    edx
  40709b:	add    bl,dh
  40709d:	push   esi
  40709e:	add    eax,DWORD PTR [eax]
  4070a0:	repz adc eax,0x67f3005a
  4070a6:	add    eax,DWORD PTR [eax]
  4070a8:	repz es pop edx
  4070ab:	add    bl,dh
  4070ad:	cmp    BYTE PTR [ebx],al
  4070af:	add    bl,dh
  4070b1:	pop    ss
  4070b2:	pop    edx
  4070b3:	add    bl,dh
  4070b5:	xchg   ecx,eax
  4070b6:	add    eax,DWORD PTR [eax]
  4070b8:	repz and al,0x5a
  4070bb:	add    bl,dh
  4070bd:	mov    ds:0x1bf30003,al
  4070c2:	pop    edx
  4070c3:	add    bl,dh
  4070c5:	jno    0x4070ca
  4070c7:	add    bl,dh
  4070c9:	sub    bl,BYTE PTR [edx+0x0]
  4070cc:	repz add BYTE PTR [ebx],0x0
  4070d0:	repz sbb DWORD PTR [edx+0x0],ebx
  4070d4:	repz fild WORD PTR [edx]
  4070d7:	add    bl,dh
  4070d9:	sub    BYTE PTR [edx+0x0],bl
  4070dc:	add    BYTE PTR [eax],al
  4070de:	add    bl,dh
  4070e0:	fiadd  WORD PTR [edx]
  4070e2:	add    bl,dh
  4070e4:	push   es
  4070e5:	mov    ecx,0x6b06f359
  4070ea:	add    al,0xf3
  4070ec:	push   es
  4070ed:	mov    eax,0x6a06f359
  4070f2:	add    al,0xf3
  4070f4:	push   es
  4070f5:	fwait
  4070f6:	pop    ecx
  4070f7:	repz push es
  4070f9:	gs add al,0xf3
  4070fc:	push   es
  4070fd:	call   0xf304:0x6406f359
  407104:	push   es
  407105:	mov    ebp,0x6706f359
  40710a:	add    al,0xf3
  40710c:	push   es
  40710d:	mov    esp,0x6606f359
  407112:	add    al,0xf3
  407114:	push   es
  407115:	mov    BYTE PTR [ecx-0xd],bl
  407118:	push   es
  407119:	dec    ecx
  40711a:	add    al,0xf3
  40711c:	push   es
  40711d:	mov    ebx,DWORD PTR [ecx-0xd]
  407120:	push   es
  407121:	dec    eax
  407122:	add    al,0xf3
  407124:	push   es
  407125:	dec    edx
  407126:	pop    ecx
  407127:	repz push es
  407129:	mov    eax,DWORD PTR [ebx+esi*8]
  40712c:	push   es
  40712d:	dec    ebp
  40712e:	pop    ecx
  40712f:	repz push es
  407131:	mov    al,BYTE PTR [ebx]
  407133:	repz push es
  407135:	push   eax
  407136:	pop    ecx
  407137:	repz push es
  407139:	test   DWORD PTR [ebx+esi*8],eax
  40713c:	push   es
  40713d:	inc    ebx
  40713e:	pop    ecx
  40713f:	repz push es
  407141:	test   BYTE PTR [ebx],al
  407143:	add    BYTE PTR [eax],al
  407145:	add    bl,dh
  407147:	push   es
  407148:	adc    bl,BYTE PTR [ecx-0xd]
  40714b:	push   es
  40714c:	ret    0xf303
  40714f:	push   es
  407150:	add    eax,0xad06f359
  407155:	add    esi,ebx
  407157:	push   es
  407158:	mov    ds,WORD PTR [eax-0xd]
  40715b:	push   es
  40715c:	pushf  
  40715d:	add    esi,ebx
  40715f:	push   es
  407160:	add    al,ch
  407162:	icebp  
  407163:	pop    es
  407164:	add    eax,ebp
  407166:	icebp  
  407167:	pop    es
  407168:	add    eax,ebp
  40716a:	icebp  
  40716b:	pop    es
  40716c:	add    eax,ebp
  40716e:	icebp  
  40716f:	pop    es
  407170:	add    ebp,edx
  407172:	icebp  
  407173:	pop    es
  407174:	add    eax,ebp
  407176:	icebp  
  407177:	pop    es
  407178:	add    eax,ebp
  40717a:	out    dx,al
  40717b:	pop    es
  40717c:	add    ebx,ebp
  40717e:	test   BYTE PTR [edx+eax*1],0xeb
  407182:	out    dx,al
  407183:	add    al,0x2
  407185:	jmp    0x4071e3
  407187:	add    eax,0x4eeeb04
  40718c:	add    al,0xeb
  40718e:	test   BYTE PTR [edx+eax*1],0xeb
  407192:	out    dx,al
  407193:	or     al,BYTE PTR [eiz*8-0x12fdfb0a]
  40719a:	out    dx,al
  40719b:	add    al,0x2
  40719d:	jmp    0x407195
  40719f:	add    al,0x4
  4071a1:	in     eax,dx
  4071a2:	and    al,0x7
  4071a4:	add    ch,bl
  4071a6:	sbb    al,0x6
  4071a8:	add    eax,ebp
  4071aa:	add    BYTE PTR [eax],al
  4071ac:	add    cl,dh
  4071ae:	pop    es
  4071af:	add    esp,esp
  4071b1:	or     eax,0xefe92126
  4071b6:	add    eax,0x5f7ea06
  4071bb:	add    ebp,edx
  4071bd:	out    dx,eax
  4071be:	add    eax,0x3f7ea03
  4071c3:	add    eax,0x309efea
  4071c8:	jmp    0x5f1:0xe80303f7
  4071cf:	add    ebp,eax
  4071d1:	test   DWORD PTR ds:0x5efe803,0x5f7e801
  4071db:	add    BYTE PTR [eax],al
  4071dd:	retf   0x4
  4071e0:	add    BYTE PTR [edx-0x65fffffc],bl
  4071e6:	add    al,0x0
  4071e8:	add    BYTE PTR [edx-0x75fffffc],cl
  4071ee:	add    al,0x0
  4071f0:	add    BYTE PTR [edx-0x65fffffc],bl
  4071f6:	add    al,0x0
  4071f8:	add    BYTE PTR [edx-0x75fffffc],cl
  4071fe:	sub    eax,DWORD PTR [eax]
  407200:	and    esi,esi
  407202:	and    eax,0x45a2726
  407207:	sub    ch,BYTE PTR [ebx]
  407209:	dec    edx
  40720a:	pop    ds
  40720b:	add    BYTE PTR cs:[edx],bh
  40720e:	sti    
  40720f:	xor    DWORD PTR [ebx],esi
  407211:	add    BYTE PTR [eax],al
  407213:	add    BYTE PTR [esi],ah
  407215:	div    DWORD PTR ds:0xfff32237
  40721b:	dec    DWORD PTR [edx+0x4]
  40721e:	add    BYTE PTR [eax],al
  407220:	dec    edx
  407221:	imul   esp,DWORD PTR [ecx+0x63],0xfffffff6
  407225:	gs gs addr16 repnz popa 
  40722a:	imul   ebp,DWORD PTR [ebx+0x1e],0x3a6f6d5f
  407231:	cmp    esi,DWORD PTR [ecx+0x73]
  407234:	es aaa 
  407236:	jne    0x4072af
  407238:	and    dh,BYTE PTR [ebx]
  40723a:	jns    0x40723c
  40723c:	or     al,BYTE PTR [esi+ebx*2]
  40723f:	pop    edi
  407240:	sub    ch,BYTE PTR [ebx+0x61]
  407243:	arpl   WORD PTR [esi-0x4d989a9a],si
  407249:	bound  ebp,QWORD PTR [ecx+0x6b]
  40724c:	sahf   
  40724d:	pop    esi
  40724e:	ins    DWORD PTR es:[edi],dx
  40724f:	outs   dx,DWORD PTR ds:[esi]
  407250:	jp     0x40728c
  407252:	jno    0x4072c7
  407254:	data16 ss jne 0x4072cf
  407258:	repz jne 0x407237
  40725b:	jns    0x407250
  40725d:	add    DWORD PTR [ebx],0x35df37e
  407263:	add    bl,dh
  407265:	pop    ebp
  407266:	add    eax,DWORD PTR [eax]
  407268:	repz pop ebp
  40726a:	add    eax,DWORD PTR [eax]
  40726c:	repz pop ebp
  40726e:	add    eax,DWORD PTR [eax]
  407270:	repz pop ebp
  407272:	add    eax,DWORD PTR [eax]
  407274:	repz pop ebp
  407276:	add    eax,DWORD PTR [eax]
  407278:	add    BYTE PTR [eax],al
  40727a:	add    bl,dh
  40727c:	pop    ebp
  40727d:	add    eax,DWORD PTR [eax]
  40727f:	repz pop ebp
  407281:	add    eax,DWORD PTR [eax]
  407283:	repz pop ebp
  407285:	add    eax,DWORD PTR [eax]
  407287:	repz pop ebp
  407289:	add    eax,DWORD PTR [eax]
  40728b:	repz pop ebp
  40728d:	add    eax,DWORD PTR [eax]
  40728f:	repz pop ebp
  407291:	add    eax,DWORD PTR [eax]
  407293:	repz pop ebp
  407295:	add    eax,DWORD PTR [eax]
  407297:	repz pop ebp
  407299:	add    eax,DWORD PTR [eax]
  40729b:	repz pop ebp
  40729d:	add    eax,DWORD PTR [eax]
  40729f:	repz pop ebp
  4072a1:	add    eax,DWORD PTR [eax]
  4072a3:	repz pop ebp
  4072a5:	add    eax,DWORD PTR [eax]
  4072a7:	repz pop ebp
  4072a9:	add    eax,DWORD PTR [eax]
  4072ab:	repz pop ebp
  4072ad:	add    eax,DWORD PTR [eax]
  4072af:	repz pop ebp
  4072b1:	add    eax,DWORD PTR [eax]
  4072b3:	repz pop ebp
  4072b5:	add    eax,DWORD PTR [eax]
  4072b7:	repz pop ebp
  4072b9:	add    eax,DWORD PTR [eax]
  4072bb:	repz pop ebp
  4072bd:	add    eax,DWORD PTR [eax]
  4072bf:	repz pop ebp
  4072c1:	add    eax,DWORD PTR [eax]
  4072c3:	repz pop ebp
  4072c5:	add    eax,DWORD PTR [eax]
  4072c7:	repz pop edi
  4072c9:	add    eax,DWORD PTR [eax]
  4072cb:	repz pop edi
  4072cd:	add    eax,DWORD PTR [eax]
  4072cf:	repz pop edi
  4072d1:	add    eax,DWORD PTR [eax]
  4072d3:	repz push es
  4072d5:	jmp    0xe94765dd
  4072da:	add    esi,ebx
  4072dc:	push   es
  4072dd:	jmp    0x4072e5
  4072e2:	repz push es
  4072e4:	jmp    0x64765ec
  4072e9:	push   esi
  4072ea:	lods   al,BYTE PTR ds:[esi]
  4072eb:	dec    esi
  4072ec:	(bad)  
  4072ed:	push   ebp
  4072ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ef:	dec    esi
  4072f0:	not    BYTE PTR [ebp-0x64]
  4072f3:	dec    esi
  4072f4:	out    dx,al
  4072f5:	push   ebp
  4072f6:	xchg   esp,eax
  4072f7:	dec    esi
  4072f8:	out    0x55,al
  4072fa:	mov    WORD PTR [esi-0x22],cs
  4072fd:	push   ebp
  4072fe:	test   BYTE PTR [esi-0x2a],cl
  407301:	push   ebp
  407302:	jl     0x407352
  407304:	into   
  407305:	push   ebp
  407306:	je     0x407356
  407308:	(bad)  
  407309:	push   ebp
  40730a:	ins    BYTE PTR es:[edi],dx
  40730b:	dec    esi
  40730c:	mov    esi,0xb64e6455
  407311:	push   ebp
  407312:	pop    esp
  407313:	dec    esi
  407314:	scas   al,BYTE PTR es:[edi]
  407315:	push   ebp
  407316:	push   esp
  407317:	dec    esi
  407318:	jmp    0xe54a641f
  40731d:	(bad)  
  40731e:	out    dx,al
  40731f:	add    eax,0x4e3c0ae1
  407324:	mov    ss,WORD PTR [ebp+0x34]
  407327:	dec    esi
  407328:	xchg   BYTE PTR [edx],cl
  40732a:	clc    
  40732b:	cli    
  40732c:	jmp    0x407333
  40732e:	hlt    
  40732f:	dec    ebp
  407330:	jbe    0x407387
  407332:	sbb    al,0x4e
  407334:	outs   dx,BYTE PTR ds:[esi]
  407335:	push   ebp
  407336:	adc    al,0x4e
  407338:	push   bp
  40733a:	or     al,0x4e
  40733c:	pop    esi
  40733d:	push   ebp
  40733e:	add    al,0x4e
  407340:	push   esi
  407341:	push   ebp
  407342:	cld    
  407343:	dec    ebp
  407344:	dec    esi
  407345:	push   ebp
  407346:	add    BYTE PTR [eax],al
  407348:	add    ah,dh
  40734a:	dec    ebp
  40734b:	inc    esi
  40734c:	or     bh,al
  40734e:	cli    
  40734f:	jmp    0x407356
  407351:	hlt    
  407352:	dec    ebp
  407353:	add    BYTE PTR [esi],dh
  407355:	inc    esi
  407356:	dec    esi
  407357:	jmp    FWORD PTR [esi]
  407359:	ds dec esi
  40735b:	jmp    DWORD PTR [esi]
  40735d:	es dec esi
  40735f:	call   FWORD PTR [esi]
  407361:	push   ds
  407362:	dec    esi
  407363:	call   DWORD PTR [esi]
  407365:	es dec esi
  407367:	dec    DWORD PTR [esi]
  407369:	push   ds
  40736a:	dec    esi
  40736b:	(bad)  
  40736c:	jmp    0xe9407a61
  407371:	lock push es
  407373:	add    cl,ch
  407375:	lock push es
  407377:	add    cl,ch
  407379:	lock push es
  40737b:	add    cl,ch
  40737d:	lock push es
  40737f:	add    cl,ch
  407381:	lock push es
  407383:	add    cl,ch
  407385:	lock push es
  407387:	add    cl,ch
  407389:	lock push es
  40738b:	add    cl,ch
  40738d:	lock push es
  40738f:	add    cl,ch
  407391:	lock push es
  407393:	add    cl,ch
  407395:	lock push es
  407397:	add    cl,ch
  407399:	lock push es
  40739b:	add    cl,ch
  40739d:	lock push es
  40739f:	add    cl,ch
  4073a1:	lock push es
  4073a3:	add    cl,ch
  4073a5:	lock push es
  4073a7:	add    cl,ch
  4073a9:	lock push es
  4073ab:	add    cl,ch
  4073ad:	add    BYTE PTR [eax],al
  4073af:	add    al,dh
  4073b1:	push   es
  4073b2:	add    cl,ch
  4073b4:	lock push es
  4073b6:	add    cl,ch
  4073b8:	lock push es
  4073ba:	add    cl,ch
  4073bc:	lock push es
  4073be:	add    cl,ch
  4073c0:	lock push es
  4073c2:	add    cl,ch
  4073c4:	lock push es
  4073c6:	add    cl,ch
  4073c8:	lock push es
  4073ca:	add    cl,ch
  4073cc:	lock push es
  4073ce:	add    BYTE PTR [eax],al
  4073d0:	fimul  DWORD PTR [eax]
  4073d2:	add    BYTE PTR [eax],al
  4073d4:	fimul  DWORD PTR [eax]
  4073d6:	add    BYTE PTR [eax],al
  4073d8:	retf   0x8
  4073db:	add    dl,cl
  4073dd:	or     BYTE PTR [eax],al
  4073df:	add    dl,bl
  4073e1:	or     BYTE PTR [eax],al
  4073e3:	add    dl,bl
  4073e5:	or     BYTE PTR [eax],al
  4073e7:	add    dl,cl
  4073e9:	or     BYTE PTR [eax],al
  4073eb:	add    dl,cl
  4073ed:	or     BYTE PTR [eax],al
  4073ef:	add    BYTE PTR [edx-0x65fffff8],bl
  4073f5:	or     BYTE PTR [eax],al
  4073f7:	add    BYTE PTR [edx-0x75fffff8],cl
  4073fd:	or     BYTE PTR [eax],al
  4073ff:	add    BYTE PTR [edx-0x65fffff8],bl
  407405:	or     BYTE PTR [eax],al
  407407:	add    BYTE PTR [edx-0x75fffff8],cl
  40740d:	or     BYTE PTR [eax],al
  40740f:	add    BYTE PTR [edx+0x3],bl
  407412:	add    DWORD PTR [eax],eax
  407414:	add    BYTE PTR [eax],al
  407416:	add    BYTE PTR [ebx+0x3],bl
  407419:	add    DWORD PTR [ecx],eax
  40741b:	dec    ebx
  40741c:	add    eax,DWORD PTR [ecx]
  40741e:	add    DWORD PTR [ebx+0x3],ecx
  407421:	add    DWORD PTR [ecx],eax
  407423:	pop    ebx
  407424:	add    eax,DWORD PTR [ecx]
  407426:	add    DWORD PTR [ebx+0x3],ebx
  407429:	add    DWORD PTR [ecx],eax
  40742b:	dec    ebx
  40742c:	add    eax,DWORD PTR [ecx]
  40742e:	add    DWORD PTR [ebx+0x3],ecx
  407431:	add    DWORD PTR [eax],eax
  407433:	sbb    eax,DWORD PTR [ebx]
  407435:	add    DWORD PTR [ecx],eax
  407437:	sbb    eax,DWORD PTR [ebx]
  407439:	add    DWORD PTR [ecx],eax
  40743b:	or     eax,DWORD PTR [ebx]
  40743d:	add    DWORD PTR [ecx],eax
  40743f:	or     eax,DWORD PTR [ebx]
  407441:	add    DWORD PTR [ecx],eax
  407443:	sbb    eax,DWORD PTR [ebx]
  407445:	add    DWORD PTR [ecx],eax
  407447:	sbb    eax,DWORD PTR [ebx]
  407449:	add    DWORD PTR [ecx],eax
  40744b:	repz pop esi
  40744d:	add    al,0x1
  40744f:	repnz pop esi
  407451:	add    al,0x1
  407453:	repnz pop esi
  407455:	add    al,0x1
  407457:	repnz pop esi
  407459:	add    al,0x1
  40745b:	repnz pop esi
  40745d:	add    al,0x1
  40745f:	repnz pop esi
  407461:	add    al,0x1
  407463:	repnz pop esi
  407465:	add    al,0x1
  407467:	repnz pop esi
  407469:	add    al,0x1
  40746b:	repnz pop esi
  40746d:	add    al,0x1
  40746f:	repnz pop esi
  407471:	add    al,0x1
  407473:	repz pop ebp
  407475:	add    eax,DWORD PTR [eax]
  407477:	repz pop ebp
  407479:	add    eax,DWORD PTR [eax]
  40747b:	add    BYTE PTR [eax],al
  40747d:	add    bl,dh
  40747f:	pop    ebp
  407480:	add    eax,DWORD PTR [eax]
  407482:	repz pop ebp
  407484:	add    eax,DWORD PTR [eax]
  407486:	repz pop ebp
  407488:	add    eax,DWORD PTR [eax]
  40748a:	repz pop ebp
  40748c:	add    eax,DWORD PTR [eax]
  40748e:	repz pop ebp
  407490:	add    eax,DWORD PTR [eax]
  407492:	repz pop ebp
  407494:	add    eax,DWORD PTR [eax]
  407496:	repz pop ebp
  407498:	add    eax,DWORD PTR [eax]
  40749a:	repz pop ebp
  40749c:	add    eax,DWORD PTR [eax]
  40749e:	repz pop ebp
  4074a0:	add    eax,DWORD PTR [eax]
  4074a2:	repz pop ebp
  4074a4:	add    eax,DWORD PTR [eax]
  4074a6:	repz pop ebp
  4074a8:	add    eax,DWORD PTR [eax]
  4074aa:	repz pop ebp
  4074ac:	add    eax,DWORD PTR [eax]
  4074ae:	repz pop ebp
  4074b0:	add    eax,DWORD PTR [eax]
  4074b2:	repz pop ebp
  4074b4:	add    eax,DWORD PTR [eax]
  4074b6:	repz pop ebp
  4074b8:	add    eax,DWORD PTR [eax]
  4074ba:	repz pop ebp
  4074bc:	add    eax,DWORD PTR [eax]
  4074be:	repz pop ebp
  4074c0:	add    eax,DWORD PTR [eax]
  4074c2:	repz pop ebp
  4074c4:	add    eax,DWORD PTR [eax]
  4074c6:	repz push es
  4074c8:	jmp    0xe94767d0
  4074cd:	add    esi,ebx
  4074cf:	push   es
  4074d0:	jmp    0xe94767d8
  4074d5:	add    esi,ebx
  4074d7:	push   es
  4074d8:	jmp    0xe94767e0
  4074dd:	add    esi,ebx
  4074df:	push   es
  4074e0:	jmp    0x4074e8
  4074e5:	repz push es
  4074e7:	jmp    0xe94767ef
  4074ec:	add    esi,ebx
  4074ee:	push   es
  4074ef:	jmp    0xe94767f7
  4074f4:	add    esi,ebx
  4074f6:	push   es
  4074f7:	jmp    0x594767ff
  4074fc:	enter  0x8565,0x64
  407500:	lahf   
  407501:	out    0x56,al
  407503:	popa   
  407504:	sub    eax,0xf79245b0
  407509:	ret    0xa89f
  40750c:	adc    eax,eax
  40750e:	add    ecx,DWORD PTR [esi]
  407510:	ret    0x4197
  407513:	int3   
  407514:	in     eax,0x86
  407516:	aad    0xb0
  407518:	fld    DWORD PTR [edx+0x64b779c7]
  40751e:	dec    edx
  40751f:	bound  ebx,QWORD PTR [edi+0xf]
  407522:	cs popa 
  407524:	pop    ebx
  407525:	inc    ebp
  407526:	scas   al,BYTE PTR es:[edi]
  407527:	dec    eax
  407528:	mov    edx,0x55693da5
  40752d:	int3   
  40752e:	mov    ecx,0x35059f20
  407533:	mov    eax,ds:0xf2e7f74c
  407538:	in     al,0x92
  40753a:	mov    dl,0xf
  40753c:	dec    ebp
  40753d:	pop    ebp
  40753e:	cdq    
  40753f:	loop   0x407598
  407541:	mov    ah,0xad
  407543:	jmp    FWORD PTR [ebx*4+0x98ffd2]
  40754a:	add    BYTE PTR [eax],al
  40754c:	lock push es
  40754e:	add    BYTE PTR [ecx-0x17],bh
  407551:	push   0x36
  407553:	mov    ecx,ebx
  407555:	sahf   
  407556:	ss test ecx,ebx
  407559:	xchg   edx,eax
  40755a:	lea    ecx,ss:[ecx]
  40755d:	stc    
  40755e:	cdq    
  40755f:	sub    eax,0x9b546413
  407564:	add    BYTE PTR [ebp+0x3d],dh
  407567:	adc    al,BYTE PTR ss:[esi+edx*2-0x68119025]
  40756f:	mov    ebp,0x6b98391e
  407574:	inc    ebp
  407575:	data16 jbe 0x40753d
  407578:	fist   DWORD PTR [edx]
  40757a:	aaa    
  40757b:	int    0xb
  40757d:	ret    
  40757e:	ss mov ch,0xb
  407581:	mov    bl,0x36
  407583:	popf   
  407584:	sti    
  407585:	loop   0x4075bd
  407587:	test   ebx,edi
  407589:	shl    al,cl
  40758b:	push   0x4a
  40758d:	fild   WORD PTR [eax-0x5c87003e]
  407593:	or     eax,0x39194748
  407598:	xchg   esp,eax
  407599:	aaa    
  40759a:	dec    esp
  40759b:	enter  0x8fbe,0x6e
  40759f:	enter  0x799f,0x4c
  4075a3:	mov    bh,0xfb
  4075a5:	bound  esi,QWORD PTR [edi]
  4075a7:	(bad)  
  4075aa:	aaa    
  4075ab:	lods   eax,DWORD PTR ds:[esi]
  4075ac:	jmp    0x4075b0
  4075ae:	cmp    ch,dh
  4075b0:	add    BYTE PTR [eax],al
  4075b2:	add    al,bh
  4075b4:	repnz aaa 
  4075b6:	std    
  4075b7:	call   0x5066adde
  4075bc:	into   
  4075bd:	inc    esi
  4075be:	aaa    
  4075bf:	in     eax,dx
  4075c0:	stos   DWORD PTR es:[edi],eax
  4075c1:	js     0x4075c3
  4075c3:	and    DWORD PTR [esi],ecx
  4075c5:	jmp    0x8d9cb73b
  4075ca:	jns    0x407601
  4075cc:	sbb    al,0x2f
  4075ce:	rol    BYTE PTR [ebx+0x5e],1
  4075d1:	push   cs
  4075d2:	out    0x6f,al
  4075d4:	push   eax
  4075d5:	xchg   ebx,eax
  4075d6:	cmp    BYTE PTR [esi-0x3],bh
  4075d9:	mov    ds:0xb3fd6e38,eax
  4075de:	cmp    BYTE PTR [esi-0x4],bh
  4075e1:	ret    
  4075e2:	cmp    BYTE PTR [esi],bl
  4075e4:	cld    
  4075e5:	sar    DWORD PTR [eax],cl
  4075e7:	(bad)  
  4075e8:	sub    al,BYTE PTR [esp+ecx*8]
  4075eb:	ret    
  4075ec:	das    
  4075ed:	inc    eax
  4075ee:	adc    BYTE PTR [ecx-0x25632502],dl
  4075f4:	cld    
  4075f5:	add    DWORD PTR [ebx],esp
  4075f7:	mov    ds:0x530448b8,al
  4075fc:	cmp    DWORD PTR [ebx],edi
  4075fe:	sbb    dh,BYTE PTR [ecx+0x5e390c79]
  407604:	std    
  407605:	push   ebx
  407606:	cmp    DWORD PTR [esi-0x3],edi
  407609:	arpl   WORD PTR [ecx],di
  40760b:	outs   dx,BYTE PTR ds:[esi]
  40760c:	std    
  40760d:	jae    0x407648
  40760f:	push   ds
  407610:	std    
  407611:	cmp    DWORD PTR [ecx],0xfffffffe
  407614:	stc    
  407615:	push   esp
  407616:	fld    DWORD PTR [eax]
  407618:	add    BYTE PTR [eax],al
  40761a:	xchg   ebx,eax
  40761b:	scas   al,BYTE PTR es:[edi]
  40761c:	jge    0x4075f6
  40761e:	xchg   edi,eax
  40761f:	pusha  
  407620:	cmp    BYTE PTR [eax-0x3e],dh
  407623:	xchg   DWORD PTR [ebp+0x7c],ecx
  407626:	into   
  407627:	jmp    0xeab6:0x4e674187
  40762e:	scas   al,BYTE PTR es:[edi]
  40762f:	mov    ds:0xfa9e5ae1,al
  407634:	add    edi,DWORD PTR [edx]
  407636:	ds (bad) 
  407638:	adc    edi,DWORD PTR [edx]
  40763a:	ds (bad) 
  40763c:	and    edi,DWORD PTR [edx]
  40763e:	repz inc ecx
  407640:	or     DWORD PTR [ecx+ebp*8],esi
  407643:	cmp    DWORD PTR [ecx],ecx
  407645:	inc    esp
  407646:	sbb    edx,DWORD PTR [edi-0x41]
  407649:	and    DWORD PTR [eax],0x25
  40764c:	add    al,0xb6
  40764e:	adc    eax,0xadfefa71
  407653:	retf   0x4763
  407656:	mov    ch,0xec
  407658:	js     0x407656
  40765a:	adc    ebp,DWORD PTR [esi+esi*4-0x15]
  40765e:	enter  0x9c8,0xb4
  407662:	sub    DWORD PTR [edx+0xa],edi
  407665:	les    ebp,FWORD PTR [ecx]
  407667:	adc    cl,BYTE PTR [edx]
  407669:	aam    0x19
  40766b:	jmp    0xf409:0xc219e409
  407672:	or     DWORD PTR [ebx+0x2982260b],ebx
  407678:	(bad)  
  407679:	cs pop edx
  40767b:	aad    0x23
  40767d:	mov    al,BYTE PTR [eax]
  40767f:	add    BYTE PTR [eax],al
  407681:	jns    0x407633
  407683:	inc    ebp
  407684:	cld    
  407685:	clc    
  407686:	ds pop es
  407688:	xchg   DWORD PTR [edi+0x5c],esp
  40768b:	and    eax,0xbe59de32
  407690:	arpl   ax,bx
  407692:	or     DWORD PTR [edx],0x9d9c874
  407698:	test   al,cl
  40769a:	ror    DWORD PTR [ecx],1
  40769c:	xchg   esp,eax
  40769d:	mov    eax,0xb8a409c9
  4076a2:	adc    DWORD PTR [eax-0x32],0xc2775cc8
  4076a9:	enter  0xbccd,0xac
  4076ad:	aas    
  4076ae:	xor    DWORD PTR [ebp-0x6fb696c3],ebx
  4076b4:	jp     0x4076e9
  4076b6:	push   ebp
  4076b7:	push   ecx
  4076b8:	or     BYTE PTR ss:[edi],al
  4076bb:	cdq    
  4076bc:	repz pop ss
  4076be:	or     edi,ebp
  4076c0:	(bad)  
  4076c1:	ud2    
  4076c3:	lds    ecx,FWORD PTR [edi]
  4076c5:	out    0xa,eax
  4076c7:	int    0xf
  4076c9:	scas   eax,DWORD PTR es:[edi]
  4076ca:	or     dh,BYTE PTR ds:0x1d0ac710
  4076d0:	adc    al,cl
  4076d2:	daa    
  4076d3:	lock adc al,0x9d
  4076d6:	xchg   edx,eax
  4076d7:	loop   0x4076d3
  4076d9:	arpl   WORD PTR [edx-0x18ec22df],cx
  4076df:	push   es
  4076e0:	std    
  4076e1:	add    cl,dh
  4076e3:	or     dl,ah
  4076e5:	add    BYTE PTR [eax],al
  4076e7:	add    bl,bh
  4076e9:	mov    bl,0xb3
  4076eb:	mov    edx,0xf210b54
  4076f0:	xlat   BYTE PTR ds:[ebx]
  4076f1:	add    edi,DWORD PTR [ecx]
  4076f3:	(bad)  
  4076f5:	add    eax,DWORD PTR ds:0xed040711
  4076fb:	adc    BYTE PTR [edi],ch
  4076fd:	add    al,0xb5
  4076ff:	adc    BYTE PTR [edi],ah
  407701:	arpl   WORD PTR [ecx+0x24],si
  407704:	pop    ecx
  407705:	fild   QWORD PTR [ebp+ebx*8+0x64ae7a66]
  40770c:	popa   
  40770d:	(bad)  
  40770e:	push   ebx
  40770f:	push   ds
  407710:	addr16 aas 
  407712:	sbb    esp,DWORD PTR [eax-0x50]
  407715:	mov    bh,BYTE PTR [edi]
  407717:	enter  0x9c9e,0x4
  40771b:	adc    BYTE PTR [edi-0x58f04afc],ch
  407721:	add    al,0xbd
  407723:	jg     0x6d14602d
  407729:	inc    esi
  40772a:	adc    DWORD PTR [ebx+esi*8],eax
  40772d:	push   es
  40772e:	sbb    dl,BYTE PTR [ebx]
  407730:	dec    ecx
  407731:	out    dx,eax
  407732:	rcr    BYTE PTR [esi+edx*8-0x7e],1
  407736:	add    BYTE PTR [esp+eax*4],bh
  407739:	in     eax,0x13
  40773b:	mov    ebp,0xab976e19
  407740:	inc    ecx
  407741:	out    dx,al
  407742:	pop    ds
  407743:	rcr    BYTE PTR [eax-0x68],0xf3
  407747:	pop    eax
  407748:	hlt    
  407749:	push   edx
  40774a:	xor    eax,0x45
  40774f:	std    
  407750:	outs   dx,BYTE PTR ds:[esi]
  407751:	ss push ebp
  407753:	add    eax,0xfd353677
  407758:	dec    edx
  407759:	cmp    BYTE PTR [ecx+0x71383aff],ah
  40775f:	stos   BYTE PTR es:[edi],al
  407760:	sbb    al,BYTE PTR [eax+0x5b]
  407763:	adc    al,0xa4
  407765:	fs iret 
  407767:	icebp  
  407768:	arpl   WORD PTR [ecx],di
  40776a:	stc    
  40776b:	xchg   ecx,eax
  40776c:	in     al,dx
  40776d:	push   ecx
  40776e:	xor    BYTE PTR [eax+0x62],al
  407771:	popf   
  407772:	cs fwait
  407774:	je     0x4077f2
  407776:	mov    edi,0xe53a0516
  40777b:	cli    
  40777c:	pop    edx
  40777d:	cmp    dl,BYTE PTR [ecx]
  40777f:	stc    
  407780:	bound  edi,QWORD PTR [edx]
  407782:	or     ecx,ebp
  407784:	sub    bh,BYTE PTR [edx]
  407786:	sbb    ecx,ebp
  407788:	cmp    bh,BYTE PTR [edx]
  40778a:	adc    ecx,edi
  40778c:	add    eax,0x4b00599e
  407791:	jg     0x407771
  407793:	jp     0x407775
  407795:	fwait
  407796:	jo     0x4077d3
  407798:	loopne 0x40778b
  40779a:	adc    ebp,DWORD PTR [ebp+0x66bfc88]
  4077a0:	fs cmp eax,0x5fe03caa
  4077a6:	jno    0x407793
  4077a8:	xchg   edx,eax
  4077a9:	cmp    edi,DWORD PTR [ecx-0x5]
  4077ac:	call   0x3b:0x7efb713b
  4077b3:	add    BYTE PTR [eax],al
  4077b5:	add    BYTE PTR [esi+0xe],dh
  4077b8:	sar    BYTE PTR [ebx],0x92
  4077bb:	push   cs
  4077bc:	in     al,0x3e
  4077be:	les    edi,FWORD PTR [eax]
  4077c0:	fmul   st,st(4)
  4077c2:	xor    DWORD PTR [ecx-0x61e99fa0],edi
  4077c8:	sbb    dh,BYTE PTR [eax+edx*4]
  4077cb:	mov    edi,0xd6bb70bc
  4077d0:	mov    edx,0xe1ea3313
  4077d5:	mov    esi,0x3d2415f8
  4077da:	or     bh,BYTE PTR [ecx+0xaf6ffff]
  4077e0:	add    BYTE PTR [eax],al
  4077e2:	push   ss
  4077e3:	sbb    eax,0x1d8e3480
  4077e8:	mov    BYTE PTR [ecx+eax*8],dh
  4077eb:	shr    BYTE PTR [esi-0xe],1
  4077ee:	mov    dl,dl
  4077f0:	ins    DWORD PTR es:[edi],dx
  4077f1:	cmp    eax,0x4a861cb5
  4077f6:	arpl   WORD PTR [edx+edx*4],bx
  4077f9:	cmp    dh,al
  4077fb:	test   DWORD PTR [esi+0x40],0x36d4cbc5
  407802:	cmp    al,0x8
  407804:	push   ebx
  407805:	aaa    
  407806:	rcl    DWORD PTR [ecx],1
  407808:	jmp    0xb54f4a46
  40780d:	cmp    al,BYTE PTR [edi+ecx*1]
  407810:	fs cmp al,0x83
  407813:	adc    al,0xb6
  407815:	cmp    al,0xca
  407817:	dec    esi
  407818:	xchg   ecx,eax
  407819:	add    BYTE PTR [eax],0x0
  40781c:	add    BYTE PTR [eax+0x4b],cl
  40781f:	enter  0x3fe2,0x31
  407823:	jae    0x4077b4
  407825:	xlat   BYTE PTR ds:[ebx]
  407826:	dec    ebp
  407827:	call   FWORD PTR [ecx+0x2d]
  40782a:	push   ebx
  40782b:	test   al,0x8
  40782d:	or     al,0x62
  40782f:	les    edi,FWORD PTR [esi+0x28dbecf3]
  407835:	and    al,0x34
  407837:	or     ah,BYTE PTR [esp+ebx*1]
  40783a:	or     eax,0x2314450b
  40783f:	or     esp,DWORD PTR [ebx+0xc]
  407842:	test   DWORD PTR [edx],0xb81047f
  407848:	shl    DWORD PTR [ebx-0x41],0x2
  40784c:	xor    ah,al
  40784e:	popa   
  40784f:	xlat   BYTE PTR ds:[ebx]
  407850:	loop   0x407839
  407852:	and    DWORD PTR [eax+ebp*4+0xe],esi
  407856:	dec    ecx
  407857:	retf   0xcbcf
  40785a:	inc    esp
  40785b:	mov    ecx,0x874019c7
  407860:	mov    dl,0x82
  407862:	jmp    0x407878
  407864:	pop    ebp
  407865:	ret    0x1506
  407868:	outs   dx,DWORD PTR ds:[esi]
  407869:	ret    0x14b0
  40786c:	nop
  40786d:	ret    0x15a4
  407870:	retf   0x422
  407873:	adc    eax,0x21e58ddd
  407878:	xor    ebx,ebx
  40787a:	loop   0x407813
  40787c:	loopne 0x40780f
  40787e:	nop
  40787f:	fwait
  407880:	mov    esi,0xf000000
  407885:	dec    ebx
  407886:	cs xchg ebx,eax
  407888:	sar    DWORD PTR [ebp+eax*4-0x47a2ad73],0x9d
  407890:	cmp    ecx,DWORD PTR fs:[edi]
  407893:	fwait
  407894:	out    0xa,eax
  407896:	adc    BYTE PTR [esi+ebx*8-0x67],ch
  40789a:	adc    BYTE PTR [ebx+0x221139e6],ah
  4078a0:	fst    QWORD PTR [ebx+0x11]
  4078a3:	aaa    
  4078a4:	lds    esi,FWORD PTR [edi+eiz*4]
  4078a7:	das    
  4078a8:	pop    ecx
  4078a9:	pop    ecx
  4078aa:	inc    ebx
  4078ab:	add    BYTE PTR [edx],dl
  4078ad:	pop    es
  4078ae:	(bad)  
  4078af:	inc    BYTE PTR [edx-0x52797d13]
  4078b5:	pop    edx
  4078b6:	(bad)  
  4078b7:	xchg   edx,eax
  4078b8:	cdq    
  4078b9:	clc    
  4078ba:	int3   
  4078bb:	xchg   esp,eax
  4078bc:	enter  0xcf53,0xf9
  4078c0:	das    
  4078c1:	cld    
  4078c2:	mov    dl,0x11
  4078c4:	and    bh,ah
  4078c6:	popf   
  4078c7:	adc    DWORD PTR [edi],esp
  4078c9:	cld    
  4078ca:	leave  
  4078cb:	adc    DWORD PTR [edx-0x4],ecx
  4078ce:	xchg   esi,eax
  4078cf:	adc    DWORD PTR [esi],edi
  4078d1:	cld    
  4078d2:	lods   al,BYTE PTR ds:[esi]
  4078d3:	sub    esi,DWORD PTR [ecx+edi*1+0x1b]
  4078d7:	sbb    DWORD PTR [edi],0x59
  4078da:	sub    ebp,DWORD PTR [ecx-0x39]
  4078dd:	mov    cl,0xc3
  4078df:	xor    al,0x86
  4078e1:	data16 outs dx,BYTE PTR ds:[esi]
  4078e3:	fld    DWORD PTR [ebp-0x2b]
  4078e6:	inc    eax
  4078e7:	fadd   QWORD PTR [eax]
  4078e9:	add    BYTE PTR [eax],al
  4078eb:	push   ebx
  4078ec:	add    DWORD PTR [eax+0x7c80adaf],esp
  4078f2:	xor    BYTE PTR [ecx],bh
  4078f4:	stos   BYTE PTR es:[edi],al
  4078f5:	mov    BYTE PTR [esi+0x2c3f454f],ah
  4078fb:	cmp    BYTE PTR [ebx+0x3623a567],0xe9
  407902:	or     ecx,edi
  407904:	call   DWORD PTR [edx+0xb]
  407907:	outs   dx,BYTE PTR ds:[esi]
  407908:	jmp    DWORD PTR [ecx+0xb]
  40790b:	mov    al,ds:0x82df9fff
  407910:	jbe    0x40790b
  407912:	and    eax,0xb6ee261c
  407917:	mov    ebx,edi
  407919:	outs   dx,DWORD PTR ds:[esi]
  40791a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791b:	push   es
  40791c:	pop    esp
  40791d:	dec    ecx
  40791e:	aaa    
  40791f:	mov    ds:0x9f518380,al
  407924:	pop    ecx
  407925:	dec    ebx
  407926:	ins    BYTE PTR es:[edi],dx
  407927:	adc    al,0x97
  407929:	add    ah,dl
  40792b:	jns    0x407913
  40792d:	jmp    0x40798f
  40792f:	mov    edi,0xbb59a0e
  407934:	pop    edx
  407935:	out    dx,eax
  407936:	hlt    
  407937:	rol    BYTE PTR [edx-0xc8ddb6b],1
  40793d:	ror    BYTE PTR ds:0x6b19df48,1
  407943:	xor    DWORD PTR [eax+ebp*2-0x3b007ad],esi
  40794a:	mov    eax,0xe1363bd8
  40794f:	add    BYTE PTR [eax],al
  407951:	add    bh,dh
  407953:	in     al,dx
  407954:	js     0x407988
  407956:	xchg   edx,eax
  407957:	pop    ebp
  407958:	add    eax,ebx
  40795a:	sbb    dl,bl
  40795c:	jge    0x407978
  40795e:	sahf   
  40795f:	sahf   
  407960:	and    ebx,eax
  407962:	add    al,0x62
  407964:	mov    WORD PTR [eax],?
  407966:	push   esp
  407967:	xchg   edi,eax
  407968:	loope  0x407961
  40796a:	and    BYTE PTR [edx+eax*1],dl
  40796d:	xor    edx,DWORD PTR [eax]
  40796f:	cwde   
  407970:	xor    WORD PTR ds:0xa0c8ffa8,bp
  407977:	(bad)  
  407978:	aad    0x31
  40797a:	mov    edi,gs
  40797c:	jmp    0x68e1:0x21c6cbbf
  407983:	mov    ebp,0xd3beefe4
  407988:	aad    0xcc
  40798a:	mov    ah,BYTE PTR [ebx+0x2d]
  40798d:	push   ebx
  40798e:	push   edi
  40798f:	xchg   edi,eax
  407990:	rcr    DWORD PTR [ebp+0x45],1
  407993:	les    edi,FWORD PTR [ebx]
  407995:	dec    ecx
  407996:	cld    
  407997:	mov    cl,0x23
  407999:	shl    al,cl
  40799b:	jne    0x4079ef
  40799d:	lock push esp
  40799f:	jl     0x40794d
  4079a1:	icebp  
  4079a2:	inc    DWORD PTR [ebp-0x28d3ff95]
  4079a8:	inc    ecx
  4079a9:	pop    edx
  4079aa:	mov    bl,0xa9
  4079ac:	daa    
  4079ad:	xchg   ebp,eax
  4079ae:	push   ebp
  4079af:	popf   
  4079b0:	outs   dx,DWORD PTR ds:[esi]
  4079b1:	xchg   esi,eax
  4079b2:	(bad)  
  4079b3:	shl    BYTE PTR [esi],cl
  4079b5:	test   al,0x0
  4079b7:	add    BYTE PTR [eax],al
  4079b9:	daa    
  4079ba:	dec    eax
  4079bb:	rcl    BYTE PTR [edx],1
  4079bd:	leave  
  4079be:	stc    
  4079bf:	in     al,0xad
  4079c1:	lock (bad) 
  4079c3:	pop    ebp
  4079c4:	sti    
  4079c5:	jl     0x407955
  4079c7:	add    dl,al
  4079c9:	cs mov ebp,0x946076bf
  4079cf:	ss dec ebx
  4079d1:	inc    eax
  4079d2:	xor    edi,DWORD PTR cs:[edx]
  4079d5:	xor    al,0x80
  4079d7:	cs loopne 0x40796f
  4079da:	lahf   
  4079db:	xor    ch,BYTE PTR ds:0x51efcbac
  4079e1:	cld    
  4079e2:	push   ebp
  4079e3:	rcr    DWORD PTR [eax-0x1215cacd],0xf
  4079ea:	out    0xa3,al
  4079ec:	xchg   edx,eax
  4079ed:	leave  
  4079ee:	mov    bh,0x31
  4079f0:	mov    edx,0x57eff5b6
  4079f5:	ins    BYTE PTR es:[edi],dx
  4079f6:	mov    ecx,0x8bd0e632
  4079fb:	inc    edi
  4079fc:	xor    dl,0x1e
  4079ff:	xchg   edi,eax
  407a00:	sub    esi,edx
  407a02:	xchg   ebx,eax
  407a03:	mov    esi,0x154ba458
  407a08:	loop   0x407a50
  407a0a:	int    0x2a
  407a0c:	es shl BYTE PTR gs:[eax],1
  407a10:	mov    bl,0x8f
  407a12:	inc    ecx
  407a13:	xchg   cl,ch
  407a15:	dec    ecx
  407a16:	jecxz  0x407a73
  407a18:	rcl    esi,1
  407a1a:	rol    DWORD PTR [esi+0xe0],cl
  407a20:	or     al,0x4b
  407a22:	push   ebp
  407a23:	(bad)  
  407a24:	repz mov ecx,DWORD PTR [esp+ecx*1+0x4ce4e784]
  407a2c:	stos   BYTE PTR es:[edi],al
  407a2d:	dec    edi
  407a2e:	xor    dh,dh
  407a30:	dec    esi
  407a31:	inc    edi
  407a32:	mov    cs,edx
  407a34:	push   ecx
  407a35:	jecxz  0x4079dd
  407a37:	mov    ecx,0xcd9a6641
  407a3c:	mov    ds:0x6f92dd3c,al
  407a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a42:	loopne 0x407a95
  407a44:	or     BYTE PTR [ebx-0x68226e8a],bl
  407a4a:	repz out 0x22,eax
  407a4d:	das    
  407a4e:	jmp    0x407a7b
  407a50:	dec    esp
  407a51:	scas   eax,DWORD PTR es:[edi]
  407a52:	adc    ebx,DWORD PTR ss:[edx]
  407a55:	add    cl,BYTE PTR [edx]
  407a57:	ror    DWORD PTR [esi-0x53],0xc7
  407a5b:	loope  0x407a9b
  407a5d:	arpl   WORD PTR [edi+0x17],bx
  407a60:	cmp    esi,ebp
  407a62:	js     0x407a7a
  407a64:	xchg   ecx,eax
  407a65:	in     eax,dx
  407a66:	cs adc eax,0x882c5f98
  407a6c:	stos   BYTE PTR es:[edi],al
  407a6d:	jne    0x407a35
  407a6f:	(bad)
  407a73:	test   al,0x44
  407a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a76:	int    0x75
  407a78:	pop    esp
  407a79:	push   0xffffffb4
  407a7b:	lds    ebx,FWORD PTR [edi]
  407a7d:	cmp    dl,BYTE PTR [eax+ebx*2+0x13bed61c]
  407a84:	add    BYTE PTR [eax],al
  407a86:	add    BYTE PTR [ebx+0x6cd7519d],ah
  407a8c:	test   BYTE PTR [ebp-0x64bdad45],bl
  407a92:	ret    0x88ba
  407a95:	arpl   WORD PTR [ecx+0xc6aa6d2],di
  407a9b:	mov    bl,0xad
  407a9d:	push   0xffffffd9
  407a9f:	push   eax
  407aa0:	pop    es
  407aa1:	retf   0x3e8d
  407aa4:	aam    0x2e
  407aa6:	(bad)  
  407aa7:	bound  ebp,QWORD PTR ds:0x5c3634d3
  407aad:	in     al,dx
  407aae:	ja     0x407a94
  407ab0:	leave  
  407ab1:	or     BYTE PTR [ebx+0x2f],ch
  407ab4:	jge    0x407a7b
  407ab6:	loope  0x407a7c
  407ab8:	jae    0x407a8b
  407aba:	mov    dh,0x31
  407abc:	pop    es
  407abd:	jmp    0xe9476dc5
  407ac2:	add    esi,ebx
  407ac4:	push   es
  407ac5:	xchg   esi,eax
  407ac6:	nop
  407ac7:	mov    dl,0x6
  407ac9:	mov    ?,WORD PTR ss:[edx-0xcfc16fa]
  407ad0:	push   es
  407ad1:	jns    0x407a60
  407ad3:	mov    dl,0x6
  407ad5:	lahf   
  407ad6:	lea    esi,[edx-0x1fc6dfa]
  407adc:	push   es
  407add:	jge    0x407b5b
  407adf:	mov    bl,0x6
  407ae1:	mov    al,ds:0x4506f603
  407ae6:	jl     0x407a9b
  407ae8:	push   es
  407ae9:	jecxz  0x407aee
  407aeb:	add    BYTE PTR [eax],al
  407aed:	add    ah,cl
  407aef:	push   es
  407af0:	adc    eax,0x3106b37d
  407af5:	add    al,0xf6
  407af7:	push   es
  407af8:	or     eax,0xfa06b37d
  407afd:	add    esi,esi
  407aff:	push   es
  407b00:	add    eax,0x6506b37d
  407b05:	add    edi,ebp
  407b07:	push   es
  407b08:	mov    ch,0x7c
  407b0a:	xor    eax,DWORD PTR [edi]
  407b0c:	push   es
  407b0d:	add    al,0x7
  407b0f:	pop    es
  407b10:	or     eax,0xac07337d
  407b15:	add    edi,edx
  407b17:	push   es
  407b18:	stc    
  407b19:	jl     0x407b4e
  407b1b:	pop    es
  407b1c:	add    BYTE PTR [eax+0x10004f0],ch
  407b22:	ss (bad) 
  407b24:	call   FWORD PTR ds:0xc90003f0
  407b2a:	daa    
  407b2b:	(bad)  
  407b2c:	call   DWORD PTR [eax-0x12fff610]
  407b32:	pop    ss
  407b33:	(bad)  
  407b34:	jmp    FWORD PTR [ebx-0xeffe610]
  407b3a:	pop    es
  407b3b:	(bad)  
  407b3c:	(bad)  
  407b3d:	fdivrp st(0),st
  407b3f:	adc    BYTE PTR [eax],al
  407b41:	in     eax,dx
  407b42:	stc    
  407b43:	(bad)  
  407b44:	call   FWORD PTR ds:0xd50004f7
  407b4a:	out    0xc6,eax
  407b4c:	inc    DWORD PTR [esi-0x9]
  407b4f:	add    al,0x0
  407b51:	mov    ebp,0xd7000000
  407b56:	(bad)  
  407b57:	(bad)  
  407b58:	mov    eax,0xc9000ff7
  407b5d:	mov    esi,0x2f7ceff
  407b63:	add    BYTE PTR [ecx-0x35003949],dl
  407b69:	lock push cs
  407b6b:	add    BYTE PTR [ebp-0x61003959],ch
  407b71:	test   DWORD PTR [eax+eax*1],0xffc6974d
  407b78:	xor    al,0xf7
  407b7a:	or     DWORD PTR [eax],eax
  407b7c:	inc    ecx
  407b7d:	xchg   esi,eax
  407b7f:	(bad)  
  407b80:	(bad)  
  407b82:	add    al,BYTE PTR [eax]
  407b84:	cmp    DWORD PTR [edi-0x3a],esi
  407b87:	jmp    FWORD PTR [edi-0x7afff010]
  407b8d:	addr16 (bad) 
  407b8f:	(bad)  
  407b90:	cmp    bh,dh
  407b92:	idiv   bh
  407b94:	fcomp  DWORD PTR [eax-0x39]
  407b97:	(bad)  
  407b98:	dec    ecx
  407b9a:	or     DWORD PTR [edi],eax
  407b9c:	add    BYTE PTR [edx-0x18ffc03f],ah
  407ba2:	add    cl,BYTE PTR [ecx]
  407ba4:	add    BYTE PTR [esi-0x3f],ah
  407ba7:	aas    
  407ba8:	add    bh,bh
  407baa:	add    cl,BYTE PTR [edx]
  407bac:	add    BYTE PTR [edx-0x3f],ch
  407baf:	aas    
  407bb0:	add    BYTE PTR [ecx+0x9],ah
  407bb3:	adc    al,BYTE PTR [eax]
  407bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb6:	sar    DWORD PTR [edi],0x0
  407bb9:	add    BYTE PTR [eax],al
  407bbb:	add    BYTE PTR [edi],dh
  407bbd:	add    esp,DWORD PTR [eax]
  407bbf:	add    BYTE PTR [edx-0x51ffc03f],dl
  407bc5:	or     DWORD PTR [eax+eax*1],eax
  407bc8:	call   0x2109:0x93003fc1
  407bcf:	add    BYTE PTR [esi],dh
  407bd1:	mov    edx,0x2ed003f
  407bd6:	xor    al,BYTE PTR [eax]
  407bd8:	cmp    BYTE PTR [edx+0x30d003f],0x22
  407bdf:	add    BYTE PTR [esi-0x28ffc046],bl
  407be5:	or     DWORD PTR [eax+eax*1],ecx
  407be8:	into   
  407be9:	mov    edx,0x94e003f
  407bee:	sbb    eax,DWORD PTR [eax]
  407bf0:	add    bh,BYTE PTR [edi+edi*1+0xf095200]
  407bf7:	add    dl,ah
  407bf9:	mov    ebx,0x9c8003f
  407bfe:	or     BYTE PTR [eax],al
  407c00:	(bad)  
  407c01:	mov    ebx,0x94d003f
  407c06:	add    eax,0x3fbbce00
  407c0b:	add    dl,al
  407c0d:	or     BYTE PTR [edx],al
  407c0f:	add    BYTE PTR [edx-0xcffc045],bl
  407c15:	and    eax,DWORD PTR [ebx]
  407c17:	adc    al,0xf3
  407c19:	add    eax,0xb6f3407d
  407c1e:	add    dl,BYTE PTR [ecx]
  407c20:	add    BYTE PTR [eax],al
  407c22:	add    bl,dh
  407c24:	push   ecx
  407c25:	jl     0x407c67
  407c27:	repz rol BYTE PTR [edx],cl
  407c2a:	adc    ebx,esi
  407c2c:	sub    eax,0xd0f3407c
  407c31:	add    al,BYTE PTR [edi]
  407c33:	repz in eax,0x7c
  407c36:	inc    eax
  407c37:	repz lahf 
  407c39:	add    ecx,DWORD PTR [esi]
  407c3b:	repz add eax,0x6df3407d
  407c41:	add    ecx,DWORD PTR [ebx+esi*8]
  407c44:	in     eax,0x7c
  407c46:	inc    eax
  407c47:	repz or DWORD PTR [ebx],eax
  407c4a:	add    al,0xf3
  407c4c:	sbb    eax,0x68f3407d
  407c51:	add    al,0x7
  407c53:	repz jne 0x407be0
  407c56:	inc    eax
  407c57:	repz and al,BYTE PTR [ebx]
  407c5a:	or     eax,0x408a95f3
  407c5f:	repz jne 0x407c66
  407c62:	or     bl,dh
  407c64:	mov    DWORD PTR [edx+0x475f340],ecx
  407c6a:	or     bl,dh
  407c6c:	lea    ecx,[edx+0x331f340]
  407c72:	pop    es
  407c73:	repz test DWORD PTR [edx+0x499f340],ecx
  407c7a:	adc    eax,0x4089adf3
  407c7f:	repz cld 
  407c81:	add    ecx,DWORD PTR [ebx]
  407c83:	repz xor DWORD PTR [ecx+0x40],ecx
  407c8a:	repz add DWORD PTR [ebx+ecx*1],eax
  407c8e:	repz add eax,0x6f3408a
  407c94:	push   eax
  407c95:	add    al,0x1
  407c97:	pop    es
  407c98:	mov    ch,0x89
  407c9a:	xor    eax,DWORD PTR [edi]
  407c9c:	add    BYTE PTR [edx+ebp*8],al
  407c9f:	push   es
  407ca0:	mov    eax,ds:0x3073389
  407ca5:	add    al,0xe0
  407ca7:	push   es
  407ca8:	cmc    
  407ca9:	mov    DWORD PTR [ebx],esi
  407cab:	pop    es
  407cac:	sahf   
  407cad:	add    ebp,ebx
  407caf:	push   es
  407cb0:	add    DWORD PTR [edx+0x4330733],ecx
  407cb6:	hlt    
  407cb7:	push   es
  407cb8:	add    DWORD PTR [edx+0x4380733],ecx
  407cbe:	in     al,dx
  407cbf:	push   es
  407cc0:	stc    
  407cc1:	mov    DWORD PTR [ebx],esi
  407cc3:	pop    es
  407cc4:	push   esi
  407cc5:	add    al,0xf7
  407cc7:	push   es
  407cc8:	jmp    0x5147b056
  407ccd:	add    al,0xea
  407ccf:	push   es
  407cd0:	cmc    
  407cd1:	mov    BYTE PTR [ebx-0x6fc20fa],dh
  407cd7:	push   es
  407cd8:	ror    DWORD PTR [eax+0x40406b3],1
  407cde:	out    dx,eax
  407cdf:	push   es
  407ce0:	leave  
  407ce1:	mov    BYTE PTR [ebx-0x52fc7bfa],dh
  407ce7:	add    eax,0x6b38761
  407cec:	fadd   QWORD PTR [ebx]
  407cee:	add    BYTE PTR [eax],al
  407cf0:	add    BYTE PTR [esi-0x4c77d6fa],bl
  407cf6:	push   es
  407cf7:	jo     0x407cfc
  407cf9:	fiadd  DWORD PTR [esi]
  407cfb:	cmc    
  407cfc:	xchg   DWORD PTR [ebx-0x16fc58fa],esi
  407d02:	push   es
  407d03:	loope  0x407c8c
  407d05:	mov    bl,0x6
  407d07:	imul   eax,DWORD PTR [ebx],0x869506c0
  407d0d:	mov    bl,0x6
  407d0f:	add    BYTE PTR [edx-0x62fffc10],ah
  407d15:	jne    0x407cde
  407d17:	push   DWORD PTR [eax+0x29000ff0]
  407d1d:	jne    0x407ce6
  407d1f:	jmp    DWORD PTR [ebp-0x10]
  407d22:	jmp    0xeeff:0xc77578ff
  407d29:	lock or al,BYTE PTR [eax]
  407d2c:	imul   esi,DWORD PTR [ebp-0x39],0xc2f09aff
  407d33:	push   eax
  407d35:	jne    0x407cfe
  407d37:	jmp    FWORD PTR [edx-0x26fffd10]
  407d3d:	jne    0x407d06
  407d3f:	call   edx
  407d41:	lock add al,BYTE PTR [eax]
  407d44:	shl    DWORD PTR [ebp-0x39],0xff
  407d48:	fs lock or al,0x0
  407d4c:	fnsave [ebp-0x39]
  407d4f:	dec    DWORD PTR ds:0xd50000f0
  407d55:	add    BYTE PTR [eax],al
  407d57:	add    BYTE PTR [ebp-0x39],dh
  407d5a:	jmp    edi
  407d5c:	lock loopne 0x407d5e
  407d5f:	int3   
  407d60:	jne    0x407d29
  407d62:	(bad)  
  407d63:	jmp    0x407d55
  407d65:	add    eax,DWORD PTR [eax]
  407d67:	lds    esi,FWORD PTR [ebp-0x39]
  407d6a:	(bad)  
  407d6b:	aas    
  407d6c:	out    dx,eax
  407d6d:	add    DWORD PTR [eax],eax
  407d6f:	popf   
  407d70:	jne    0x407d39
  407d72:	jmp    FWORD PTR [esi]
  407d74:	out    dx,eax
  407d75:	add    eax,0xc7759100
  407d7a:	inc    DWORD PTR [ecx-0x56ffee11]
  407d80:	jne    0x407d49
  407d82:	dec    edi
  407d84:	lock or DWORD PTR [eax],eax
  407d87:	pop    ecx
  407d88:	jne    0x407d51
  407d8a:	(bad)  
  407d8b:	(bad)  
  407d8c:	cmp    eax,DWORD PTR [esi]
  407d8e:	add    eax,0x4080a200
  407d93:	add    BYTE PTR ds:0x4a001406,bl
  407d99:	add    DWORD PTR [eax+0x0],0x1e02f2
  407da0:	mov    edx,0x5004083
  407da5:	add    eax,DWORD PTR [edi]
  407da7:	add    BYTE PTR [edx-0x3effbf7d],dh
  407dad:	add    eax,0x83660010
  407db2:	inc    eax
  407db3:	add    BYTE PTR [edi],al
  407db5:	add    eax,DWORD PTR [esi]
  407db7:	add    BYTE PTR [esi+0x4083],cl
  407dbd:	add    BYTE PTR [eax],al
  407dbf:	pop    DWORD PTR ds:0x83620003
  407dc5:	inc    eax
  407dc6:	add    BYTE PTR [esi+0x5],bl
  407dc9:	das    
  407dca:	add    BYTE PTR [edx-0x2effbf7d],al
  407dd0:	add    dl,BYTE PTR [edi]
  407dd2:	add    BYTE PTR [edx-0x48ffbf7d],cl
  407dd8:	add    bl,BYTE PTR [edx]
  407dda:	add    dh,dh
  407ddc:	test   DWORD PTR [eax+0x0],eax
  407ddf:	rol    DWORD PTR [edx],0xf
  407de2:	add    BYTE PTR [esi+0x44004084],ah
  407de8:	add    eax,0x847e0014
  407ded:	inc    eax
  407dee:	add    BYTE PTR [ecx+0x5],dh
  407df1:	pop    ds
  407df2:	add    BYTE PTR [esi+0x36004084],bl
  407df8:	add    eax,0x85e60024
  407dfd:	inc    eax
  407dfe:	add    BYTE PTR [ecx+0x2000a05],cl
  407e04:	xchg   BYTE PTR [eax+0x0],al
  407e07:	repz js 0x407e0d
  407e0a:	add    al,0xf3
  407e0c:	jae    0x39a7152
  407e12:	add    al,0xf3
  407e14:	out    0x82,eax
  407e16:	inc    eax
  407e17:	repz and eax,0xe5f30c03
  407e1d:	add    BYTE PTR [eax-0xd],0x4a
  407e21:	add    edx,DWORD PTR [ecx]
  407e23:	add    BYTE PTR [eax],al
  407e25:	add    bl,dh
  407e27:	adc    DWORD PTR [ebx+0x2d3f340],eax
  407e2d:	push   cs
  407e2e:	repz add DWORD PTR [ebx+0x34af340],eax
  407e35:	or     al,0xf3
  407e37:	push   ecx
  407e38:	add    BYTE PTR [eax-0xd],0x9
  407e3c:	add    al,0x12
  407e3e:	repz sub eax,0x90f34082
  407e44:	add    ebx,DWORD PTR [esi]
  407e46:	repz or eax,0xaff34083
  407e4c:	add    dh,BYTE PTR [ecx]
  407e4e:	repz stc 
  407e50:	add    BYTE PTR [eax-0xd],0x1d
  407e54:	add    ecx,DWORD PTR [ecx]
  407e56:	repz int 0x82
  407e59:	inc    eax
  407e5a:	repz test BYTE PTR [ebx],al
  407e5d:	or     al,0xf3
  407e5f:	fld    QWORD PTR [edx+0x3bbf340]
  407e65:	or     al,0xf3
  407e67:	lods   eax,DWORD PTR ds:[esi]
  407e68:	add    DWORD PTR [eax-0xd],0xffffffc6
  407e6c:	add    eax,DWORD PTR [edi]
  407e6e:	repz aad 0x83
  407e71:	inc    eax
  407e72:	repz rol BYTE PTR [ebx],0x14
  407e76:	repz int 0x83
  407e79:	inc    eax
  407e7a:	repz mov ch,0x3
  407e7d:	add    al,0xf3
  407e7f:	adc    eax,0x6f34084
  407e84:	out    dx,eax
  407e85:	add    esi,edi
  407e87:	push   es
  407e88:	cmp    DWORD PTR [eax+eax*1+0x6b30000],eax
  407e8f:	out    dx,eax
  407e90:	add    esi,edi
  407e92:	push   es
  407e93:	and    DWORD PTR [ebx+esi*4-0xafc28fa],eax
  407e9a:	push   es
  407e9b:	sub    DWORD PTR [ebx+esi*4-0xfb66fa],eax
  407ea2:	push   es
  407ea3:	mov    ecx,0xde073383
  407ea8:	add    esi,edi
  407eaa:	push   es
  407eab:	adc    DWORD PTR [ebx+esi*1-0x12fba5f9],eax
  407eb2:	push   es
  407eb3:	loope  0x407e38
  407eb5:	xor    eax,DWORD PTR [edi]
  407eb7:	mov    al,BYTE PTR [esp+esi*8]
  407eba:	push   es
  407ebb:	jmp    0xdd47b243
  407ec0:	add    edi,esp
  407ec2:	push   es
  407ec3:	cmp    DWORD PTR [edi+0x3a706e4],edi
  407ec9:	call   0xd4ff83d4
  407ece:	push   es
  407ecf:	and    al,BYTE PTR [edx+edi*8]
  407ed2:	push   es
  407ed3:	xor    DWORD PTR [edi+0x3aa06c4],edi
  407ed9:	out    dx,al
  407eda:	push   es
  407edb:	xor    DWORD PTR [edi+0x3ea06b4],edi
  407ee1:	stc    
  407ee2:	push   es
  407ee3:	sub    eax,0x9c0724bf
  407ee8:	add    ebp,esi
  407eea:	push   es
  407eeb:	lea    edi,[esi+0x3da0714]
  407ef1:	add    BYTE PTR [eax],al
  407ef3:	add    ch,ah
  407ef5:	push   es
  407ef6:	jne    0x407eb6
  407ef8:	add    al,0x7
  407efa:	mov    DWORD PTR [ebx],0xbf3d06e6
  407f00:	hlt    
  407f01:	push   es
  407f02:	add    BYTE PTR [ecx-0x10],ah
  407f05:	adc    al,0x0
  407f07:	inc    ecx
  407f08:	fs idiv edi
  407f0b:	ins    BYTE PTR es:[edi],dx
  407f0c:	lock or eax,DWORD PTR [eax]
  407f0f:	cmp    eax,0x1dfff754
  407f14:	test   DWORD PTR [ecx],0xf7441d00
  407f1a:	push   DWORD PTR [ebp-0x10]
  407f1d:	push   ss
  407f1e:	add    cl,al
  407f20:	xor    eax,0xf71efff7
  407f25:	add    al,BYTE PTR [eax]
  407f27:	shl    DWORD PTR [ebp-0xf0a000a],0x1
  407f2e:	add    ch,bh
  407f30:	xchg   ebp,eax
  407f31:	idiv   bh
  407f33:	sbb    bh,dh
  407f35:	add    al,BYTE PTR [eax]
  407f37:	fld    QWORD PTR [ebp-0xf2e000a]
  407f3d:	push   ss
  407f3e:	add    BYTE PTR [ecx+0x76],al
  407f41:	idiv   bh
  407f43:	in     al,dx
  407f44:	lock sbb DWORD PTR [eax],eax
  407f47:	inc    ebp
  407f48:	data16 idiv bh
  407f4b:	stos   BYTE PTR es:[edi],al
  407f4c:	lock add al,0x0
  407f4f:	xor    eax,0xffff656
  407f54:	lock pop ss
  407f56:	add    BYTE PTR [ecx],ch
  407f58:	add    BYTE PTR [eax],al
  407f5a:	add    BYTE PTR [esi-0xa],al
  407f5d:	dec    DWORD PTR [ebx+0x390004f0]
  407f63:	ss idiv bh
  407f66:	pop    ecx
  407f67:	lock push ss
  407f69:	add    BYTE PTR [ebp-0x5a],cl
  407f6c:	idiv   bh
  407f6e:	std    
  407f6f:	lock pop ss
  407f71:	add    BYTE PTR [ecx-0x6b],dh
  407f74:	idiv   bh
  407f76:	(bad)  
  407f77:	neg    DWORD PTR [ebx]
  407f79:	add    BYTE PTR [ecx-0x7b],bl
  407f7c:	idiv   bh
  407f7e:	jmp    DWORD PTR [edx]
  407f80:	or     edx,DWORD PTR [eax+eax*1]
  407f83:	adc    dh,BYTE PTR [ebp+0x3f]
  407f86:	add    ah,bh
  407f88:	or     dl,BYTE PTR [edi]
  407f8a:	add    dl,bl
  407f8c:	je     0x407fcd
  407f8e:	add    ch,ch
  407f90:	or     dl,BYTE PTR [edx]
  407f92:	add    BYTE PTR [esi],ah
  407f94:	je     0x407fd5
  407f96:	add    BYTE PTR [ebp+0xa00180a],al
  407f9c:	je     0x407fdd
  407f9e:	add    BYTE PTR [esi+0xb],al
  407fa1:	and    eax,DWORD PTR [eax]
  407fa3:	data16 jbe 0x407fe5
  407fa6:	add    ah,cl
  407fa8:	or     DWORD PTR ds:0x3f758e00,esp
  407fae:	add    BYTE PTR [edi],ah
  407fb0:	or     ebx,DWORD PTR [ebx]
  407fb2:	add    BYTE PTR [edx+0x59003f75],al
  407fb8:	or     eax,DWORD PTR [ebx]
  407fba:	add    BYTE PTR [esi+0x75],ch
  407fbd:	aas    
  407fbe:	add    BYTE PTR [eax],al
  407fc0:	add    BYTE PTR [eax],al
  407fc2:	mov    ah,0x9
  407fc4:	pop    es
  407fc5:	add    BYTE PTR [esi],dl
  407fc7:	jbe    0x408008
  407fc9:	add    ah,al
  407fcb:	or     DWORD PTR [edi],eax
  407fcd:	add    BYTE PTR [esi],bh
  407fcf:	jbe    0x408010
  407fd1:	add    BYTE PTR [ecx+ecx*1+0x747e001c],ah
  407fd8:	aas    
  407fd9:	add    BYTE PTR [eax+0x6000709],bl
  407fdf:	jne    0x408020
  407fe1:	add    BYTE PTR [eax+0x9],ah
  407fe4:	or     al,BYTE PTR [eax]
  407fe6:	push   0x74
  407fe8:	aas    
  407fe9:	add    BYTE PTR ds:0x4a004c09,dh
  407fef:	je     0x408030
  407ff1:	add    BYTE PTR [ebx+0x4200220a],ch
  407ff7:	jne    0x408038
  407ff9:	add    bl,dh
  407ffb:	add    ebp,DWORD PTR ss:[esi]
  407ffe:	repz xchg edi,eax
  408000:	mov    edi,0x37df33f
  408005:	add    al,0xf3
  408007:	scas   eax,DWORD PTR es:[edi]
  408008:	mov    esi,0x2bcf33f
  40800d:	adc    esi,ebx
  40800f:	ret    
  408010:	mov    esi,0x3dff33f
  408015:	adc    al,0xf3
  408017:	stos   DWORD PTR es:[edi],eax
  408018:	mov    esi,0x336f33f
  40801d:	push   ds
  40801e:	repz or eax,eax
  408021:	aas    
  408022:	repz pop DWORD PTR [ebx]
  408025:	sbb    eax,0xf3000000
  40802a:	jmp    0x407feb
  40802c:	aas    
  40802d:	repz mov ebp,0x3df32002
  408033:	mov    edi,0x2d0f33f
  408038:	addr16 repz gs mov eax,0x372f33f
  408040:	add    eax,0x3fb7b1f3
  408045:	repz sbb BYTE PTR [edx+ecx*1],al
  408049:	repz jge 0x408004
  40804c:	aas    
  40804d:	repz sub eax,DWORD PTR [ebx]
  408050:	cmp    ebx,esi
  408052:	dec    ecx
  408053:	mov    eax,0x331f33f
  408058:	sub    eax,0x3fb859f3
  40805d:	repz add al,0x3
  408060:	pop    es
  408061:	repz jno 0x40801c
  408064:	aas    
  408065:	repz inc BYTE PTR [edx]
  408068:	or     al,0xf3
  40806a:	push   ecx
  40806b:	mov    eax,0x396f33f
  408070:	or     esi,ebx
  408072:	dec    ebp
  408073:	mov    eax,0x5906f33f
  408078:	add    al,0xe8
  40807a:	push   es
  40807b:	in     eax,0xbe
  40807d:	or     al,0x7
  40807f:	inc    ebx
  408080:	add    al,0xf9
  408082:	push   es
  408083:	sar    DWORD PTR [esi+0x4aa06fc],1
  408089:	call   0xff4d94
  40808e:	add    BYTE PTR [eax],al
  408090:	in     al,dx
  408091:	push   es
  408092:	fild   WORD PTR [ebx]
  408094:	test   DWORD PTR [esi],0x6dcbe8d
  40809a:	mov    BYTE PTR [edi+eax*8],0x6
  40809e:	dec    ebp
  40809f:	mov    esi,0x3f506cc
  4080a4:	clc    
  4080a5:	push   es
  4080a6:	dec    ecx
  4080a7:	mov    esi,0x44e06bc
  4080ac:	jecxz  0x4080b4
  4080ae:	ins    DWORD PTR es:[edi],dx
  4080af:	mov    esi,0x3e1072c
  4080b4:	clc    
  4080b5:	push   es
  4080b6:	imul   edi,DWORD PTR [esi+0x3b9071c],0xbdd506e8
  4080c0:	or     al,0x7
  4080c2:	out    dx,al
  4080c3:	add    ebp,esp
  4080c5:	push   es
  4080c6:	mov    ebp,0x2906fcbd
  4080cb:	add    al,0xe1
  4080cd:	push   es
  4080ce:	mov    eax,ds:0x2f06ecbd
  4080d3:	add    al,0xcd
  4080d5:	push   es
  4080d6:	stc    
  4080d7:	mov    ebp,0x38f06dc
  4080dc:	out    0x6,eax
  4080de:	leave  
  4080df:	mov    ebp,0x3be06cc
  4080e4:	fiadd  WORD PTR [esi]
  4080e6:	loope  0x4080a5
  4080e8:	mov    esp,0xe603f206
  4080ed:	push   es
  4080ee:	add    DWORD PTR [ebp-0x21fff8d4],edi
  4080f4:	add    BYTE PTR [eax],al
  4080f6:	add    al,dh
  4080f8:	adc    eax,0xf39e0500
  4080fd:	inc    DWORD PTR [esi]
  4080ff:	out    dx,eax
  408100:	(bad)  
  408101:	inc    eax
  408103:	(bad)  
  408104:	repz dec DWORD PTR [ebx-0x6effec10]
  40810b:	jg     0x408100
  40810d:	call   DWORD PTR [ebx-0x73000210]
  408113:	outs   dx,DWORD PTR ds:[esi]
  408114:	repz jmp DWORD PTR [ebx-0x10]
  408118:	pop    es
  408119:	add    BYTE PTR [ecx-0x17000ca1],al
  40811f:	lock push es
  408121:	add    cl,ch
  408123:	lock push es
  408125:	add    BYTE PTR [ebp+0x47],ah
  408128:	repz (bad) 
  40812a:	fcomip st,st(0)
  40812c:	push   es
  40812d:	add    al,ch
  40812f:	lock push es
  408131:	add    ch,bh
  408133:	scas   eax,DWORD PTR es:[edi]
  408134:	repnz (bad) 
  408136:	out    dx,al
  408137:	lock push es
  408139:	add    BYTE PTR [ecx],al
  40813b:	test   DWORD PTR [esi],0xf297bd00
  408141:	(bad)  
  408142:	cli    
  408143:	lock push es
  408145:	add    cl,dh
  408147:	lock push es
  408149:	add    BYTE PTR [ecx],bl
  40814b:	jle    0x40813f
  40814d:	(bad)  
  40814e:	fdiv   st,st(0)
  408150:	push   es
  408151:	add    cl,ah
  408153:	lock push es
  408155:	add    ch,dl
  408157:	addr16 repnz (bad) 
  40815a:	fild   WORD PTR [eax]
  40815c:	add    BYTE PTR [eax],al
  40815e:	lock push es
  408160:	add    BYTE PTR [ecx],al
  408162:	out    dx,eax
  408163:	push   es
  408164:	add    cl,ch
  408166:	dec    edi
  408167:	bnd jmp ebx
  40816a:	lock push es
  40816c:	add    ch,ah
  40816e:	lock push es
  408170:	add    BYTE PTR [eax],al
  408172:	mov    ecx,DWORD PTR [eax+eax*1]
  408175:	add    BYTE PTR [edx+0x6],bl
  408178:	add    BYTE PTR [eax],al
  40817a:	pop    eax
  40817b:	or     al,0x0
  40817d:	add    BYTE PTR [eax+0x6],cl
  408180:	add    BYTE PTR [eax],al
  408182:	dec    ebx
  408183:	add    eax,0x6560000
  408188:	add    BYTE PTR [eax],al
  40818a:	pop    eax
  40818b:	add    eax,0x6540000
  408190:	add    BYTE PTR [eax],al
  408192:	mov    bl,0xa
  408194:	add    BYTE PTR [eax],al
  408196:	mov    BYTE PTR ss:[eax+0x0],0xe0
  40819b:	or     al,BYTE PTR [eax]
  40819d:	add    BYTE PTR [esi+eax*8+0x40],bl
  4081a1:	add    cl,dl
  4081a3:	or     al,BYTE PTR [eax]
  4081a5:	add    BYTE PTR [edx-0x3a],dl
  4081a8:	inc    eax
  4081a9:	add    dh,bl
  4081ab:	or     al,BYTE PTR [eax]
  4081ad:	add    BYTE PTR [edx-0x34],al
  4081b0:	inc    eax
  4081b1:	add    bh,ch
  4081b3:	or     al,BYTE PTR [eax]
  4081b5:	add    BYTE PTR [esi-0x34],ah
  4081b8:	inc    eax
  4081b9:	add    ah,bl
  4081bb:	add    eax,0xf1ba0000
  4081c0:	inc    eax
  4081c1:	add    BYTE PTR [eax],al
  4081c3:	add    BYTE PTR [eax],al
  4081c5:	int    0x5
  4081c7:	add    BYTE PTR [eax],al
  4081c9:	into   
  4081ca:	icebp  
  4081cb:	inc    eax
  4081cc:	add    BYTE PTR [edx+0xb],bl
  4081cf:	add    BYTE PTR [eax],al
  4081d1:	repnz mov BYTE PTR [eax+0x0],0x4b
  4081d6:	or     eax,DWORD PTR [eax]
  4081d8:	add    BYTE PTR [esi-0xe],al
  4081db:	inc    eax
  4081dc:	add    BYTE PTR [eax],bl
  4081de:	or     eax,DWORD PTR [eax]
  4081e0:	add    BYTE PTR [esi-0xe],al
  4081e3:	inc    eax
  4081e4:	add    BYTE PTR [ecx],cl
  4081e6:	or     eax,DWORD PTR [eax]
  4081e8:	add    BYTE PTR [esi],al
  4081ea:	repnz inc eax
  4081ec:	add    bl,dh
  4081ee:	mov    ds:0xb8f30003,eax
  4081f3:	ds inc ecx
  4081f5:	repz mov ds:0xbef30003,al
  4081fb:	ds inc ecx
  4081fd:	repz mov eax,ds:0xc4f30003
  408203:	ds inc ecx
  408205:	repz mov al,ds:0x1df30002
  40820b:	inc    eax
  40820c:	inc    ecx
  40820d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40820f:	add    al,BYTE PTR [eax]
  408211:	repz and eax,0xb6f34140
  408217:	add    al,BYTE PTR [eax]
  408219:	repz and al,0x40
  40821c:	inc    ecx
  40821d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821f:	add    al,BYTE PTR [eax]
  408221:	repz inc DWORD PTR [eax+0x41]
  408225:	repz mov ah,0x2
  408228:	add    BYTE PTR [eax],al
  40822a:	add    BYTE PTR [eax],al
  40822c:	repz cmovno eax,DWORD PTR [ecx-0xd]
  408231:	stos   DWORD PTR es:[edi],eax
  408232:	add    al,BYTE PTR [eax]
  408234:	repz add eax,DWORD PTR [ecx+0x41]
  408238:	repz mov edx,0xb5f30002
  40823e:	aas    
  40823f:	inc    ecx
  408240:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408242:	add    al,BYTE PTR [eax]
  408244:	repz fisttp QWORD PTR [ebx+0x41]
  408248:	repz mov eax,0x23f30002
  40824e:	dec    ebx
  40824f:	inc    ecx
  408250:	rep lods eax,DWORD PTR ds:[esi]
  408252:	add    al,BYTE PTR [eax]
  408254:	repz fwait
  408256:	dec    edx
  408257:	inc    ecx
  408258:	repz sbb eax,0x1df20103
  40825e:	add    eax,DWORD PTR [eax]
  408260:	repz sbb eax,0x1ef30003
  408266:	add    al,BYTE PTR [eax]
  408268:	repz push es
  40826a:	jmp    0x40826f
  40826c:	repz push es
  40826e:	leave  
  40826f:	leave  
  408270:	test   BYTE PTR [eax],dh
  408272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408273:	add    esi,ebx
  408275:	push   es
  408276:	call   0xef47757e
  40827b:	add    esi,ebx
  40827d:	push   es
  40827e:	mov    ecx,0xec3064ae
  408283:	add    esi,ebx
  408285:	push   es
  408286:	mov    ecx,0xe93054ae
  40828b:	add    al,0xf1
  40828d:	add    esp,ebp
  40828f:	add    BYTE PTR [eax],al
  408291:	add    BYTE PTR [eax],al
  408293:	in     eax,dx
  408294:	pop    es
  408295:	loope  0x4082a3
  408297:	jmp    0xe5495f97
  40829c:	(bad)  
  40829d:	fcom   DWORD PTR [ecx+eax*1]
  4082a0:	adc    al,0xd5
  4082a2:	adc    ch,bh
  4082a4:	pop    ss
  4082a5:	rcr    DWORD PTR [ecx+edi*8],1
  4082a8:	or     ecx,ebp
  4082aa:	sbb    ch,dh
  4082ac:	bswap  ecx
  4082ae:	in     al,0xd2
  4082b0:	jecxz  0x408276
  4082b2:	loopne 0x408282
  4082b4:	out    0xc0,eax
  4082b6:	in     al,dx
  4082b7:	retf   0xbcdb
  4082ba:	call   0xf4f96285
  4082bf:	and    dh,ah
  4082c1:	mov    ah,0xf0
  4082c3:	push   ds
  4082c4:	clc    
  4082c5:	mov    al,0xfc
  4082c7:	sbb    ch,ah
  4082c9:	lods   al,BYTE PTR ds:[esi]
  4082ca:	clc    
  4082cb:	push   ss
  4082cc:	lock test al,0xa4
  4082cf:	push   edx
  4082d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d1:	les    esp,FWORD PTR [eax-0x533f57b2]
  4082d7:	dec    edx
  4082d8:	pushf  
  4082d9:	mov    esp,0xb8a046a8
  4082de:	mov    ah,0x22
  4082e0:	mov    ah,0xb4
  4082e2:	mov    al,0x1e
  4082e4:	mov    eax,0xad5fb0ff
  4082e9:	pop    edx
  4082ea:	lea    edi,[ebx+0x57895ed1]
  4082f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f1:	bound  eax,QWORD PTR [ebp-0x7e9956ad]
  4082f7:	add    BYTE PTR [eax],al
  4082f9:	add    BYTE PTR [edi-0x63],cl
  4082fc:	push   0x7d
  4082fe:	dec    ebx
  4082ff:	mov    eax,ds:0xb5a7796e
  408304:	jb     0x40837b
  408306:	mov    ds:0x9f7176b9,eax
  40830b:	lods   eax,DWORD PTR ds:[esi]
  40830c:	jp     0x40837b
  40830e:	fwait
  40830f:	mov    cl,0x7e
  408311:	imul   esi,DWORD PTR [edi-0x7c],0x88736583
  408318:	xchg   DWORD PTR [ecx+0x6f],esp
  40831b:	jl     0x4082a8
  40831d:	pop    ebp
  40831e:	imul   eax,DWORD PTR [eax-0x6b78a671],0xffffff93
  408325:	push   ebp
  408326:	sbb    DWORD PTR [eax-0x7380ae69],0xffffff9b
  40832d:	dec    ebp
  40832e:	jnp    0x4082c0
  408330:	lahf   
  408331:	dec    ecx
  408332:	xchg   edi,eax
  408333:	mov    fs:0xa7689345,eax
  408339:	inc    ecx
  40833a:	(bad)  
  40833b:	pop    esp
  40833c:	stos   DWORD PTR es:[edi],eax
  40833d:	cmp    eax,0x39af608b
  408342:	addr16 jns 0x4082f8
  408345:	xor    eax,0x31b77563
  40834a:	pop    edi
  40834b:	jno    0x408308
  40834d:	sub    eax,0x29bf6d5b
  408352:	aaa    
  408353:	dec    ecx
  408354:	ret    
  408355:	and    eax,0x21c74533
  40835a:	das    
  40835b:	inc    ecx
  40835c:	retf   
  40835d:	sbb    eax,0x2b000000
  408362:	cmp    eax,0xd30a00cf
  408367:	rcl    ebx,1
  408369:	(bad)  
  40836a:	(bad)  
  40836b:	aad    0xd7
  40836d:	add    cl,bl
  40836f:	(bad)  
  408371:	out    0xce,al
  408373:	fstp   st(7)
  408375:	cli    
  408376:	loop   0x408359
  408378:	jecxz  0x408368
  40837a:	out    0xe5,al
  40837c:	out    0xf2,eax
  40837e:	fucompp 
  408380:	jmp    0x4083f8
  408382:	out    0xed,al
  408384:	out    dx,eax
  408385:	push   0xfffffffa
  408387:	icebp  
  408388:	repz pop esi
  40838a:	fdivrp st(5),st
  40838c:	mul    DWORD PTR [edx-0xe]
  40838f:	stc    
  408390:	sti    
  408391:	inc    esi
  408392:	idiv   ch
  408394:	call   FWORD PTR [edx+0x9]
  408397:	add    al,BYTE PTR [ebx]
  408399:	dec    esi
  40839a:	sub    eax,0x1520705
  40839f:	or     cl,BYTE PTR [ebx]
  4083a1:	push   ss
  4083a2:	add    eax,0x194a0f0e
  4083a7:	adc    dl,BYTE PTR [ebx]
  4083a9:	ds std 
  4083ab:	adc    eax,0x1a114217
  4083b0:	sbb    esp,DWORD PTR [esi]
  4083b2:	adc    eax,0x293a1f1e
  4083b7:	and    DWORD PTR [ebx],esp
  4083b9:	cs dec ebp
  4083bb:	and    eax,0x29213227
  4083c0:	sub    esi,DWORD PTR [esi]
  4083c2:	and    eax,0x2f2d
  4083c7:	add    BYTE PTR [edx-0x61cccec8],ch
  4083cd:	sbb    al,0x35
  4083cf:	aaa    
  4083d0:	mov    ds:0x863b3930,al
  4083d5:	xor    al,0x3d
  4083d7:	aas    
  4083d8:	call   0x658c:0xae636168
  4083df:	addr16 repz inc edi
  4083e2:	stos   BYTE PTR es:[edi],al
  4083e3:	imul   ecx,DWORD PTR [eax+0x6c],0x701c6da6
  4083ea:	mov    dl,0x71
  4083ec:	and    BYTE PTR [esi+ebp*4+0x75],dh
  4083f0:	and    al,0x78
  4083f2:	mov    edx,0xd67c3879
  4083f7:	pop    ebp
  4083f8:	sub    al,0x80
  4083fa:	ret    0x3041
  4083fd:	fs mov esi,0xca683445
  408403:	dec    ecx
  408404:	sub    BYTE PTR [esi+eax*8-0x2d7043b3],cl
  40840b:	push   ecx
  40840c:	rcl    BYTE PTR [ebx-0x683baa32],0xda
  408413:	pop    ecx
  408414:	fcomp  DWORD PTR [ebx-0x6033824b]
  40841a:	add    DWORD PTR [edx-0x79825c90],0x8a89a774
  408424:	push   0x7c8e85cb
  408429:	iret   
  40842a:	xchg   ecx,eax
  40842b:	xchg   edx,eax
  40842c:	add    BYTE PTR [eax],al
  40842e:	add    BYTE PTR [eax-0x7b69722d],al
  408434:	xlat   BYTE PTR ds:[ebx]
  408435:	cdq    
  408436:	call   0xbf6c:0x9e95bb78
  40843d:	popa   
  40843e:	mov    ds:0xa65dc350,al
  408443:	push   esp
  408444:	(bad)  
  408445:	imul   ebp,DWORD PTR [edx-0x519a14b8],0xb271ee9c
  40844f:	mov    al,ds:0xa4b66df2
  408454:	idiv   BYTE PTR [ecx-0x46]
  408457:	cwde   
  408458:	fidiv  DWORD PTR [ebp-0x42]
  40845b:	mov    WORD PTR [edi],es
  40845d:	sub    DWORD PTR [edx-0x4f],eax
  408460:	dec    eax
  408461:	and    eax,0x2144b53e
  408466:	dec    edx
  408467:	test   eax,0xbd461d40
  40846c:	cmp    al,0x19
  40846e:	push   edx
  40846f:	rcr    DWORD PTR [eax+0x15],0x4e
  408473:	lds    edx,FWORD PTR [ecx+edx*1+0x5a]
  408477:	mov    ecx,0xad560d50
  40847c:	dec    esp
  40847d:	or     DWORD PTR [edx],esp
  40847f:	xchg   ecx,eax
  408480:	sub    BYTE PTR ds:0x124951e,al
  408486:	sub    cl,BYTE PTR [ecx+0x5d25fd20]
  40848c:	sbb    al,0xf9
  40848e:	xor    DWORD PTR [ecx+0x38],esp
  408491:	cmc    
  408492:	sub    eax,0x65000000
  408497:	xor    al,0xf1
  408499:	cmp    DWORD PTR [ecx+0x30],ebx
  40849c:	in     eax,dx
  40849d:	xor    eax,0xf1e92c4d
  4084a2:	inc    esp
  4084a3:	sub    al,0xe8
  4084a5:	add    esi,ebx
  4084a7:	push   es
  4084a8:	jmp    0xe94777b0
  4084ad:	add    esi,ebx
  4084af:	push   es
  4084b0:	jmp    0xe94777b8
  4084b5:	add    esi,ebx
  4084b7:	push   es
  4084b8:	jmp    0xe94777c0
  4084bd:	add    esi,ebx
  4084bf:	push   es
  4084c0:	jmp    0xe94777c8
  4084c5:	add    edi,esp
  4084c7:	pop    es
  4084c8:	pop    ss
  4084c9:	add    al,0xf3
  4084cb:	push   es
  4084cc:	(bad)  
  4084ce:	repz push es
  4084d0:	jmp    0xe94777d8
  4084d5:	add    esi,ebx
  4084d7:	push   es
  4084d8:	add    cl,ch
  4084da:	lock push es
  4084dc:	add    cl,ch
  4084de:	lock push es
  4084e0:	add    cl,ch
  4084e2:	lock push es
  4084e4:	add    cl,ch
  4084e6:	lock sub eax,DWORD PTR [ebx]
  4084e9:	jmp    0xe9408bde
  4084ee:	lock push es
  4084f0:	add    cl,ch
  4084f2:	lock push es
  4084f4:	add    cl,ch
  4084f6:	lock push es
  4084f8:	add    cl,ch
  4084fa:	add    BYTE PTR [eax],al
  4084fc:	add    al,dh
  4084fe:	push   es
  4084ff:	add    cl,ch
  408501:	lock push es
  408503:	add    cl,ch
  408505:	lock push es
  408507:	add    cl,ch
  408509:	lock push es
  40850b:	add    BYTE PTR [edi],dl
  40850d:	shr    BYTE PTR [ebx],0x7
  408510:	jmp    0xe9408c05
  408515:	lock push es
  408517:	add    cl,ch
  408519:	lock push es
  40851b:	add    cl,ch
  40851d:	lock push es
  40851f:	add    cl,ch
  408521:	lock push es
  408523:	add    cl,ch
  408525:	lock push es
  408527:	add    cl,ch
  408529:	lock push es
  40852b:	add    cl,ch
  40852d:	lock push es
  40852f:	add    bh,cl
  408531:	loope  0x40855e
  408533:	pop    es
  408534:	jmp    0xe9408c29
  408539:	lock push es
  40853b:	add    cl,ch
  40853d:	lock push es
  40853f:	add    cl,ch
  408541:	lock push es
  408543:	add    cl,ch
  408545:	lock push es
  408547:	add    cl,ch
  408549:	lock sub eax,DWORD PTR [ebx]
  40854c:	xchg   edi,eax
  40854d:	shr    DWORD PTR [ebx],0x87
  408550:	(bad)  
  408551:	and    DWORD PTR [edx],ebp
  408553:	pop    es
  408554:	add    dl,bl
  408556:	push   es
  408557:	add    BYTE PTR [eax],al
  408559:	retf   0x6
  40855c:	add    dl,cl
  40855e:	push   es
  40855f:	add    BYTE PTR [eax],al
  408561:	add    BYTE PTR [eax],al
  408563:	add    dl,bl
  408565:	push   es
  408566:	add    BYTE PTR [eax],al
  408568:	fiadd  DWORD PTR [esi]
  40856a:	add    BYTE PTR [eax],al
  40856c:	sbb    al,0xf5
  40856e:	(bad)  
  40856f:	call   FWORD PTR ds:0x3dfffef5
  408575:	cmc    
  408576:	(bad)  
  408577:	jg     0x408513
  408579:	push   es
  40857a:	add    BYTE PTR [eax],al
  40857c:	mov    al,BYTE PTR [esi]
  40857e:	add    BYTE PTR [eax],al
  408580:	mov    al,BYTE PTR [esi]
  408582:	add    BYTE PTR [eax],al
  408584:	call   0x6:0x9a000006
  40858b:	add    ch,bl
  40858d:	hlt    
  40858e:	(bad)  
  40858f:	(bad)  
  408590:	(bad)  
  408592:	(bad)  
  408593:	(bad)  
  408594:	std    
  408595:	hlt    
  408596:	(bad)  
  408597:	jg     0x4085f3
  408599:	push   es
  40859a:	add    BYTE PTR [eax],al
  40859c:	dec    edx
  40859d:	push   es
  40859e:	add    BYTE PTR [eax],al
  4085a0:	dec    edx
  4085a1:	push   es
  4085a2:	add    BYTE PTR [eax],al
  4085a4:	pop    edx
  4085a5:	push   es
  4085a6:	add    BYTE PTR [eax],al
  4085a8:	pop    edx
  4085a9:	push   es
  4085aa:	add    BYTE PTR [eax],al
  4085ac:	sbb    al,0xf8
  4085ae:	(bad)  
  4085af:	sti    
  4085b0:	dec    ebx
  4085b1:	push   es
  4085b2:	add    al,bh
  4085b4:	sbb    eax,DWORD PTR [esi]
  4085b6:	add    BYTE PTR [eax+0x1a],bh
  4085b9:	push   es
  4085ba:	add    BYTE PTR [eax],al
  4085bc:	or     al,BYTE PTR [esi]
  4085be:	add    BYTE PTR [eax],al
  4085c0:	or     al,BYTE PTR [esi]
  4085c2:	add    BYTE PTR [eax],al
  4085c4:	sbb    al,BYTE PTR [esi]
  4085c6:	add    BYTE PTR [eax],al
  4085c8:	add    BYTE PTR [eax],al
  4085ca:	add    BYTE PTR [ebp-0x8],cl
  4085cd:	(bad)  
  4085ce:	dec    DWORD PTR [edx]
  4085d0:	push   es
  4085d1:	add    BYTE PTR [eax],al
  4085d3:	repz pop ds
  4085d5:	add    eax,DWORD PTR [eax]
  4085d7:	repz pop ds
  4085d9:	add    eax,DWORD PTR [eax]
  4085db:	jae    0x4085fc
  4085dd:	add    eax,DWORD PTR [eax]
  4085df:	repz pop ds
  4085e1:	add    eax,DWORD PTR [eax]
  4085e3:	repz pop ds
  4085e5:	add    eax,DWORD PTR [eax]
  4085e7:	repz pop ds
  4085e9:	add    eax,DWORD PTR [eax]
  4085eb:	repz lahf 
  4085ed:	add    eax,DWORD PTR [eax]
  4085ef:	repz pop ds
  4085f1:	add    eax,DWORD PTR [eax]
  4085f3:	repz pop ds
  4085f5:	add    al,BYTE PTR [ecx]
  4085f7:	repz push ds
  4085f9:	add    al,BYTE PTR [eax]
  4085fb:	repz pop ds
  4085fd:	add    eax,DWORD PTR [eax]
  4085ff:	repz pop ds
  408601:	add    eax,DWORD PTR [eax]
  408603:	repz pop ds
  408605:	add    eax,DWORD PTR [eax]
  408607:	repz pop ds
  408609:	add    eax,DWORD PTR [eax]
  40860b:	repz push ds
  40860d:	add    eax,DWORD PTR [eax]
  40860f:	repz lahf 
  408611:	add    eax,DWORD PTR [eax]
  408613:	repz lahf 
  408615:	add    DWORD PTR [eax-0x7ffce08d],0xfffffff3
  40861c:	and    ecx,DWORD PTR [edi]
  40861e:	sbb    al,0xff
  408620:	dec    ebx
  408621:	nop    edi
  408624:	push   ebx
  408625:	(bad)  
  408627:	repz pop ds
  408629:	add    eax,DWORD PTR [eax]
  40862b:	jae    0x40864c
  40862d:	or     eax,0x1a
  408632:	fld    DWORD PTR ds:0x2de11a0e
  408638:	adc    eax,0x152e0112
  40863d:	adc    al,BYTE PTR [ecx]
  40863f:	dec    esi
  408640:	adc    eax,0x154e0112
  408645:	adc    al,BYTE PTR [ecx]
  408647:	dec    esi
  408648:	adc    eax,0x29f7312
  40864d:	and    bl,0x6
  408650:	jmp    0x34d5f62
  408655:	push   cs
  408656:	fst    DWORD PTR [ebx+edi*8]
  408659:	adc    eax,0x15fb1501
  40865e:	add    DWORD PTR ds:0x150115db,edx
  408664:	fist   DWORD PTR ds:0x15db1501
  40866a:	loope  0x4085f2
  40866c:	imul   eax,DWORD PTR [ebx],0x3e906f3
  408672:	repz push es
  408674:	jmp    0xe947797c
  408679:	add    esi,ebx
  40867b:	push   es
  40867c:	jmp    0xe9477984
  408681:	add    esi,ebx
  408683:	push   es
  408684:	jmp    0xe947798c
  408689:	add    esi,ebx
  40868b:	push   es
  40868c:	jmp    0xe9477994
  408691:	add    esi,ebx
  408693:	push   es
  408694:	jmp    0x40869c
  408699:	repz push es
  40869b:	jmp    0xe94779a3
  4086a0:	add    esi,ebx
  4086a2:	push   es
  4086a3:	jmp    0xe94779ab
  4086a8:	add    esi,ebx
  4086aa:	push   es
  4086ab:	jmp    0xe94779b3
  4086b0:	add    esi,ebx
  4086b2:	push   es
  4086b3:	jmp    0xe94779bb
  4086b8:	add    esi,ebx
  4086ba:	push   es
  4086bb:	jmp    0xe94779c3
  4086c0:	add    esi,ebx
  4086c2:	push   es
  4086c3:	jmp    0xe94779cb
  4086c8:	add    esi,ebx
  4086ca:	push   es
  4086cb:	add    cl,ch
  4086cd:	lock push es
  4086cf:	add    cl,ch
  4086d1:	lock push es
  4086d3:	add    cl,ch
  4086d5:	lock push es
  4086d7:	add    cl,ch
  4086d9:	lock push es
  4086db:	add    cl,ch
  4086dd:	lock push es
  4086df:	add    cl,ch
  4086e1:	lock push es
  4086e3:	add    cl,ch
  4086e5:	lock push es
  4086e7:	add    cl,ch
  4086e9:	lock push es
  4086eb:	add    cl,ch
  4086ed:	lock push es
  4086ef:	add    cl,ch
  4086f1:	lock push es
  4086f3:	add    BYTE PTR [ebp+0x51],dl
  4086f6:	xchg   edi,eax
  4086f7:	jo     0x40874c
  4086f9:	imul   edx,DWORD PTR [esi+0x9170],0x0
  408700:	loopne 0x408757
  408702:	inc    ecx
  408703:	inc    ebx
  408704:	inc    edi
  408705:	xchg   edi,eax
  408706:	jo     0x40875a
  408708:	pop    ss
  408709:	xchg   esi,eax
  40870a:	jo     0x408734
  40870c:	xchg   edi,eax
  40870d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870e:	or     ebx,DWORD PTR [esi+0x6f]
  408711:	daa    
  408712:	xor    bh,BYTE PTR [eax+0x3dd92db5]
  408718:	adc    BYTE PTR [ebx+edi*2-0x3d4df38b],0x33
  408720:	repnz sub cl,bh
  408723:	les    edi,FWORD PTR [edx]
  408725:	hlt    
  408726:	inc    esi
  408727:	into   
  408728:	iret   
  408729:	rol    eax,cl
  40872b:	sub    DWORD PTR [edi],edi
  40872d:	aas    
  40872e:	mov    ebx,0x704ddfed
  408733:	mov    bl,BYTE PTR [esi+0x6e877a6c]
  408739:	into   
  40873a:	cdq    
  40873b:	pop    edx
  40873c:	leave  
  40873d:	jp     0x4086fb
  40873f:	mov    edx,0xf47ffa67
  408744:	mov    ebp,esi
  408746:	ins    DWORD PTR es:[edi],dx
  408747:	add    BYTE PTR [eax+eiz*1+0x53],dh
  40874b:	fist   WORD PTR [edi+0xaf0e764]
  408751:	push   0x842d73fe
  408756:	mov    ebx,0xbb388421
  40875b:	ret    
  40875c:	mov    al,ds:0xe429a473
  408761:	mov    ch,0xf0
  408763:	mov    dh,0x0
  408765:	add    BYTE PTR [eax],al
  408767:	test   ah,dh
  408769:	adc    DWORD PTR [edi+0x64a66bb8],ebx
  40876f:	retf   
  408770:	and    edx,DWORD PTR [edx-0x70]
  408773:	add    eax,DWORD PTR [edi-0x52]
  408776:	sbb    BYTE PTR [edx-0x16],0x4b
  40877a:	sbb    DWORD PTR [edi],esp
  40877c:	div    BYTE PTR [esi+0x5e]
  40877f:	xor    dl,dl
  408781:	mov    DWORD PTR [edi],esi
  408783:	cmp    BYTE PTR [ebx],0x1c
  408786:	sub    BYTE PTR [edi+0x73],dl
  408789:	(bad)  
  40878a:	fwait
  40878b:	into   
  40878c:	sti    
  40878d:	aam    0x22
  40878f:	(bad)  
  408790:	and    al,0xac
  408792:	popa   
  408793:	xor    ebx,edi
  408795:	loop   0x40875a
  408797:	in     al,dx
  408798:	scas   al,BYTE PTR es:[edi]
  408799:	sub    al,0xe4
  40879b:	ret    0x11fd
  40879e:	adc    DWORD PTR [eax-0x2],edi
  4087a1:	mov    dl,0x21
  4087a3:	pop    es
  4087a4:	xchg   edx,eax
  4087a5:	mov    esi,0xb5cfc7ed
  4087aa:	xchg   edi,eax
  4087ab:	cmp    al,0xa7
  4087ad:	inc    esp
  4087ae:	fwait
  4087af:	shr    BYTE PTR [ebx-0x2dd04d0d],0xcc
  4087b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b7:	dec    ebx
  4087b8:	jmp    0x8d41be4
  4087bd:	mov    ecx,0xf8035655
  4087c2:	(bad)
  4087c7:	shr    DWORD PTR [ebx-0x14],cl
  4087ca:	fiadd  WORD PTR [eax]
  4087cc:	add    BYTE PTR [eax],al
  4087ce:	xchg   esi,eax
  4087cf:	je     0x408825
  4087d1:	jns    0x408843
  4087d3:	aaa    
  4087d4:	das    
  4087d5:	and    ebx,ebx
  4087d7:	sub    al,BYTE PTR [esi+0x2427b9]
  4087dd:	jg     0x40884f
  4087df:	popf   
  4087e0:	fbld   TBYTE PTR [eax+0x32f5f29]
  4087e6:	cli    
  4087e7:	jbe    0x4087d7
  4087e9:	push   ds
  4087ea:	add    eax,0x6412f19
  4087ef:	mov    edx,0x33147452
  4087f4:	shr    DWORD PTR [ebp-0x3],1
  4087f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f8:	xchg   DWORD PTR [edi+0x7f],esi
  4087fb:	push   es
  4087fc:	jmp    0x47b138de
  408801:	push   ds
  408802:	lds    edi,FWORD PTR [eax]
  408804:	aaa    
  408805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408806:	fisttp WORD PTR [esi]
  408808:	mov    dl,0x92
  40880a:	jae    0x408806
  40880c:	inc    esp
  40880d:	bound  edi,QWORD PTR [edx-0x40]
  408810:	fld    st(0)
  408812:	mov    dh,0x2f
  408814:	add    eax,DWORD PTR [eax]
  408816:	xrelease mov DWORD PTR [eax+eax*1],eax
  40881a:	repz scas eax,DWORD PTR es:[edi]
  40881c:	add    DWORD PTR [eax],eax
  40881e:	repz push edx
  408820:	add    eax,DWORD PTR [eax]
  408822:	repz mov eax,0xff30003
  408828:	std    
  408829:	jmp    DWORD PTR [edx+ecx*2+0x3]
  40882d:	add    bl,dh
  40882f:	mov    ebx,0x3
  408834:	add    bl,dh
  408836:	paddw  mm7,mm7
  408839:	dec    esp
  40883a:	push   edx
  40883b:	add    eax,DWORD PTR [eax]
  40883d:	repz loop 0x408843
  408840:	add    bl,dh
  408842:	push   es
  408843:	imul   eax,DWORD PTR [ecx],0x40406f3
  408849:	repz push es
  40884b:	xchg   DWORD PTR [ebx],eax
  40884d:	repz push es
  40884f:	imul   eax,DWORD PTR [ecx],0x40c06f3
  408855:	repz push es
  408857:	mov    es,WORD PTR [ebx]
  408859:	repz push es
  40885b:	imul   eax,DWORD PTR [ecx],0x40406f3
  408861:	repz push es
  408863:	pop    ecx
  408864:	add    esi,ebx
  408866:	push   es
  408867:	mov    esp,edi
  408869:	in     al,dx
  40886a:	and    al,0xcd
  40886c:	add    esi,ebx
  40886e:	push   es
  40886f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408871:	pusha  
  408872:	mov    bh,0xfa
  408874:	pushf  
  408875:	push   ecx
  408876:	mov    BYTE PTR [eax+ebp*4],0x42
  40887a:	stos   BYTE PTR es:[edi],al
  40887b:	stc    
  40887c:	mov    al,0xc4
  40887e:	and    al,0x1d
  408880:	popf   
  408881:	push   ebx
  408882:	stos   DWORD PTR es:[edi],eax
  408883:	mov    ah,0x9a
  408885:	push   edx
  408886:	cdq    
  408887:	(bad)  
  408888:	mov    cl,0x2b
  40888a:	(bad)  
  40888b:	call   0x9f477b93
  408890:	mov    bh,0x31
  408892:	cdq    
  408893:	retf   
  408894:	mov    ds:0x9b94aa20,al
  408899:	add    BYTE PTR [eax],al
  40889b:	add    BYTE PTR [edx],al
  40889d:	stos   BYTE PTR es:[edi],al
  40889e:	(bad)  
  40889f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a0:	test   BYTE PTR [edi+ebx*4],ah
  4088a3:	mov    bh,0x31
  4088a5:	cdq    
  4088a6:	mov    esp,DWORD PTR [edx-0x4f4c5600]
  4088ac:	xlat   BYTE PTR ds:[ebx]
  4088ad:	cwde   
  4088ae:	mov    eax,0x83a7d5b1
  4088b3:	mov    al,0xe1
  4088b5:	push   es
  4088b6:	mov    bh,0xb7
  4088b8:	ret    
  4088b9:	cdq    
  4088ba:	xor    DWORD PTR [ecx-0x79003235],0xffffff8e
  4088c1:	mov    ch,0x71
  4088c3:	jl     0x408856
  4088c5:	cwde   
  4088c6:	push   0x71d45956
  4088cb:	dec    esi
  4088cc:	push   esp
  4088cd:	stos   DWORD PTR es:[edi],eax
  4088ce:	jb     0x40892a
  4088d0:	out    dx,eax
  4088d1:	push   es
  4088d2:	add    BYTE PTR [ebx],bh
  4088d4:	arpl   WORD PTR [eax-0x69adc5ac],si
  4088da:	push   ebx
  4088db:	push   ecx
  4088dc:	inc    ebp
  4088dd:	stos   DWORD PTR es:[edi],eax
  4088de:	pusha  
  4088df:	dec    ebp
  4088e0:	sbb    al,0x98
  4088e2:	pusha  
  4088e3:	cmp    eax,DWORD PTR [ebx+0x24]
  4088e6:	push   DWORD PTR ds:0xe4b9653
  4088ec:	xchg   esi,eax
  4088ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ee:	inc    ebx
  4088ef:	add    eax,0x1dff238b
  4088f4:	xchg   ebx,eax
  4088f5:	xchg   ebp,eax
  4088f6:	inc    esi
  4088f7:	or     al,0xa3
  4088f9:	(bad)  
  4088fa:	imul   ecx,DWORD PTR ds:0xd6da68f,0x0
  408901:	add    BYTE PTR [eax],al
  408903:	imul   ebp,DWORD PTR [edx-0x550f4101],0xffffffff
  40890a:	(bad)  
  40890b:	lock call 0xba00:0x6f0e8ff
  408913:	lock sar edi,cl
  408916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408917:	lock mov edx,0xc5f09dff
  40891d:	call   FWORD PTR [edx-0x6b003610]
  408923:	lock sar edi,1
  408926:	mov    edi,0x9affa7f0
  40892b:	lock mov bl,0xff
  40892e:	cdq    
  40892f:	lock mov bl,0xff
  408932:	mov    ?,eax
  408934:	call   0xffff:0xbbf0acff
  40893b:	add    DWORD PTR [edi],0x6e
  40893e:	add    BYTE PTR [esi+0x7],dh
  408941:	outs   dx,DWORD PTR ds:[esi]
  408942:	add    ch,al
  408944:	pop    es
  408945:	jae    0x408947
  408947:	sub    al,BYTE PTR [edi]
  408949:	dec    esi
  40894a:	add    dh,dh
  40894c:	or     bl,BYTE PTR [eax+eax*1-0x27]
  408950:	or     dh,BYTE PTR [ebp+0x0]
  408953:	enter  0x720a,0x0
  408957:	mov    bh,0xa
  408959:	outs   dx,BYTE PTR ds:[esi]
  40895a:	add    dh,dl
  40895c:	or     dl,BYTE PTR [esi+0x0]
  40895f:	mov    bh,0xa
  408961:	jb     0x408963
  408963:	leave  
  408964:	or     ch,BYTE PTR [ecx+0x0]
  408967:	add    BYTE PTR [eax],al
  408969:	add    BYTE PTR [ebp-0x51ff91f6],bh
  40896f:	or     dl,BYTE PTR [eax+0x0]
  408972:	or     BYTE PTR [ebx],cl
  408974:	outs   dx,DWORD PTR ds:[esi]
  408975:	add    ah,dh
  408977:	or     ch,BYTE PTR [ecx+0x0]
  40897a:	fiadd  WORD PTR [esi]
  40897c:	add    BYTE PTR gs:[esi],bl
  40897f:	or     ebp,DWORD PTR [ecx+0x0]
  408982:	leave  
  408983:	push   es
  408984:	je     0x408986
  408986:	fimul  WORD PTR [edx]
  408988:	and    eax,0x6b900
  40898d:	add    BYTE PTR [edx+0x6],bh
  408990:	jb     0x408992
  408992:	mov    ebp,0xb3006606
  408997:	push   es
  408998:	ins    BYTE PTR es:[edi],dx
  408999:	add    BYTE PTR [edi-0x40ffb6fa],dh
  40899f:	push   es
  4089a0:	popa   
  4089a1:	add    BYTE PTR [ebp+0x6a006506],dh
  4089a7:	push   es
  4089a8:	popa   
  4089a9:	add    BYTE PTR [esi+0x6],al
  4089ac:	push   0x68a00
  4089b1:	add    BYTE PTR [edx+0x72],bl
  4089b4:	xor    eax,0xaf2ef319
  4089b9:	xor    eax,0xd0451cfa
  4089be:	fild   DWORD PTR [ebx+0x45]
  4089c1:	ror    bl,1
  4089c3:	cmp    eax,0x2b9139e6
  4089c8:	add    eax,DWORD PTR [eax]
  4089ca:	repz inc edx
  4089cc:	std    
  4089cd:	inc    DWORD PTR [eax]
  4089cf:	add    BYTE PTR [eax],al
  4089d1:	xor    al,0xe6
  4089d3:	jecxz  0x4089d4
  4089d5:	sub    al,0x81
  4089d7:	jno    0x408a19
  4089d9:	repz sub ebp,DWORD PTR [ebx+0x40]
  4089dd:	repz imul DWORD PTR [edx+0x40]
  4089e1:	repz retf 
  4089e3:	rol    DWORD PTR [ecx-0xd],0xc6
  4089e7:	push   0x40
  4089e9:	repz dec edi
  4089eb:	imul   eax,DWORD PTR [eax-0xd],0x30
  4089ef:	push   0x40
  4089f1:	repz jmp 0x4089b5
  4089f4:	inc    ecx
  4089f5:	repz out 0xc1,al
  4089f8:	inc    ecx
  4089f9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fb:	ins    BYTE PTR es:[edi],dx
  4089fc:	inc    eax
  4089fd:	repz das 
  4089ff:	add    eax,DWORD PTR [eax]
  408a01:	repz das 
  408a03:	add    eax,DWORD PTR [eax]
  408a05:	repz ret 0x4033
  408a09:	repz mov es,WORD PTR [eax]
  408a0c:	dec    ebx
  408a0d:	outs   dx,BYTE PTR ds:[esi]
  408a0e:	pop    esi
  408a0f:	adc    al,0xd0
  408a11:	loop   0x4089c1
  408a13:	imul   eax,DWORD PTR [eax],0xffffffb3
  408a16:	jo     0x408a63
  408a18:	pop    edx
  408a19:	pop    edi
  408a1a:	scas   al,BYTE PTR es:[edi]
  408a1b:	iret   
  408a1c:	inc    ebp
  408a1d:	sahf   
  408a1e:	stos   DWORD PTR es:[edi],eax
  408a1f:	adc    al,0xd0
  408a21:	add    dh,BYTE PTR [ebp+0x67]
  408a24:	add    bl,dl
  408a26:	nop
  408a27:	dec    ecx
  408a28:	sar    ecx,1
  408a2a:	cli    
  408a2b:	out    0x84,eax
  408a2d:	jle    0x4089d8
  408a2f:	test   al,0xcf
  408a31:	loop   0x408a39
  408a33:	imul   edx,esi,0x0
  408a36:	add    BYTE PTR [eax],al
  408a38:	ins    BYTE PTR es:[edi],dx
  408a39:	popa   
  408a3a:	scas   al,BYTE PTR es:[edi]
  408a3b:	dec    ebx
  408a3c:	leave  
  408a3d:	pop    edx
  408a3e:	mov    eax,0x674bbb84
  408a43:	test   eax,0xd66af724
  408a48:	dec    esp
  408a49:	popa   
  408a4a:	scas   al,BYTE PTR es:[edi]
  408a4b:	dec    ebx
  408a4c:	test   eax,0x77e81c5a
  408a51:	and    esp,DWORD PTR [edi-0x57]
  408a54:	and    al,0xf7
  408a56:	push   0xffffffd5
  408a58:	sub    al,0x61
  408a5a:	cs dec esp
  408a5c:	leave  
  408a5d:	pop    edx
  408a5e:	adc    BYTE PTR [ebp-0x4333d611],0x43
  408a65:	div    DWORD PTR [edx-0x72]
  408a68:	repz inc esi
  408a6a:	imul   esp,DWORD PTR cs:[edx-0x106a7ceb],0x29
  408a72:	lods   al,BYTE PTR ds:[esi]
  408a73:	mov    esp,0x8e72f723
  408a78:	repz inc esi
  408a7a:	imul   eax,DWORD PTR cs:[edx+0x14],0xffffffe3
  408a7f:	add    esi,ebx
  408a81:	push   es
  408a82:	jno    0x408ab9
  408a84:	xor    eax,DWORD PTR [edi]
  408a86:	cmp    DWORD PTR [edi],esp
  408a88:	xor    eax,DWORD PTR [edi]
  408a8a:	mov    dl,0x29
  408a8c:	xor    eax,DWORD PTR [edi]
  408a8e:	add    al,BYTE PTR [esi+edx*2]
  408a91:	pop    es
  408a92:	sti    
  408a93:	add    eax,DWORD PTR [ebp+0x7]
  408a96:	int3   
  408a97:	add    ebx,DWORD PTR [edi]
  408a99:	pop    es
  408a9a:	sbb    al,BYTE PTR [eax+eax*1]
  408a9d:	add    BYTE PTR [eax],al
  408a9f:	loope  0x408aa7
  408aa1:	pop    es
  408aa2:	add    al,0x17
  408aa4:	pop    es
  408aa5:	mov    ebp,0xe9070703
  408aaa:	add    esi,ebx
  408aac:	push   es
  408aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aae:	sahf   
  408aaf:	add    cl,cl
  408ab1:	(bad)  
  408ab2:	mov    edi,0xbf48ab64
  408ab7:	push   edx
  408ab8:	mov    cl,0x71
  408aba:	xchg   esp,eax
  408abb:	xchg   ecx,eax
  408abc:	xchg   esp,eax
  408abd:	push   0x78c68a8e
  408ac2:	mov    eax,ds:0x7d63b291
  408ac7:	jne    0x408a94
  408ac9:	ja     0x408ab4
  408acb:	lock push es
  408acd:	add    BYTE PTR [edx-0x7fba6b9b],bl
  408ad3:	fs stos DWORD PTR es:[edi],eax
  408ad5:	dec    eax
  408ad6:	jg     0x408a6a
  408ad8:	mov    cl,0x71
  408ada:	push   esp
  408adb:	push   esi
  408adc:	xchg   esp,eax
  408add:	push   0x78c67d4e
  408ae2:	and    DWORD PTR [esi-0x4e],edx
  408ae5:	arpl   WORD PTR ds:0x1bff2052,di
  408aeb:	dec    ebp
  408aec:	(bad)  
  408aed:	pop    ds
  408aee:	stc    
  408aef:	add    ch,dl
  408af1:	sub    eax,0x9d500f9
  408af6:	jmp    0x3b4091eb
  408afb:	lods   eax,DWORD PTR ds:[esi]
  408afc:	lds    ebx,FWORD PTR [edi]
  408afe:	jmp    0x74091f3
  408b03:	add    BYTE PTR [eax],al
  408b05:	add    bh,dh
  408b07:	xchg   ebx,eax
  408b08:	call   FWORD PTR [eax]
  408b0a:	out    dx,eax
  408b0b:	xchg   esp,eax
  408b0c:	(bad)  
  408b0d:	mov    esp,0x4fff0f0
  408b12:	out    dx,eax
  408b13:	mov    dl,0xff
  408b15:	add    al,0xf7
  408b17:	push   es
  408b18:	add    BYTE PTR [ecx],bl
  408b1a:	mov    eax,ds:0x53d94ec0
  408b1f:	mov    cl,0x53
  408b21:	stos   BYTE PTR es:[edi],al
  408b22:	shl    BYTE PTR [esi+ebp*2+0x73aa79ca],0xe9
  408b2a:	lock push es
  408b2c:	add    BYTE PTR [eax],al
  408b2e:	push   0x35
  408b30:	pop    esi
  408b31:	inc    ebx
  408b32:	mov    dh,0x78
  408b34:	jb     0x408b9b
  408b36:	mov    al,BYTE PTR [ebx]
  408b38:	add    BYTE PTR [eax],al
  408b3a:	pop    edx
  408b3b:	xor    eax,0x7785505e
  408b40:	imul   eax,DWORD PTR [eax],0xffffffaa
  408b43:	xor    eax,0x6a6f525e
  408b48:	arpl   WORD PTR [eax],ax
  408b4a:	call   0x7382:0xc8575e35
  408b51:	gs pop edx
  408b53:	add    eax,DWORD PTR [eax]
  408b55:	add    BYTE PTR [edx+0x3],cl
  408b58:	add    BYTE PTR [eax],al
  408b5a:	dec    edx
  408b5b:	add    eax,DWORD PTR [eax]
  408b5d:	add    BYTE PTR [edx],bl
  408b5f:	add    eax,DWORD PTR [eax]
  408b61:	add    BYTE PTR [edx],bl
  408b63:	add    eax,DWORD PTR [ecx]
  408b65:	add    dl,bh
  408b67:	sub    al,0x2f
  408b69:	add    BYTE PTR [eax],al
  408b6b:	add    BYTE PTR [eax],al
  408b6d:	sbb    BYTE PTR [eax],dh
  408b6f:	inc    eax
  408b70:	add    BYTE PTR [edi],cl
  408b72:	daa    
  408b73:	inc    eax
  408b74:	add    BYTE PTR [eax+0x27],ch
  408b77:	inc    eax
  408b78:	add    BYTE PTR [edi],cl
  408b7a:	cs inc eax
  408b7c:	add    BYTE PTR [esi-0x38ffbfd2],bl
  408b82:	or     al,BYTE PTR [eax]
  408b84:	add    bl,bl
  408b86:	or     DWORD PTR [eax+eax*1],eax
  408b89:	mov    al,0x35
  408b8b:	sub    DWORD PTR [eax],eax
  408b8d:	sbb    dl,BYTE PTR [esi+0x52]
  408b90:	push   esp
  408b91:	fimul  DWORD PTR [edx]
  408b93:	add    BYTE PTR [eax],al
  408b95:	or     eax,0x12005348
  408b9a:	aaa    
  408b9b:	push   ebx
  408b9c:	push   eax
  408b9d:	jne    0x408bb2
  408b9f:	sub    eax,0xa9a31
  408ba4:	add    BYTE PTR [ebx+0x69],bl
  408ba7:	bound  esp,QWORD PTR [ebp-0xd]
  408baa:	aas    
  408bab:	scas   eax,DWORD PTR es:[edi]
  408bac:	sub    al,0x27
  408bae:	dec    edi
  408baf:	xchg   ebp,eax
  408bb0:	pushw  es
  408bb2:	dec    edi
  408bb3:	sahf   
  408bb4:	fs leave 
  408bb6:	(bad)  
  408bb8:	add    bl,dh
  408bba:	jo     0x408b52
  408bbc:	ins    DWORD PTR es:[edi],dx
  408bbd:	add    eax,0xda73a243
  408bc2:	je     0x408b59
  408bc4:	cmp    DWORD PTR [ebx],edx
  408bc6:	jno    0x408b5f
  408bc8:	outs   dx,BYTE PTR ds:[esi]
  408bc9:	loopne 0x408b55
  408bcb:	clc    
  408bcc:	or     ebx,esi
  408bce:	jb     0x408b81
  408bd0:	imul   eax,DWORD PTR [eax],0x0
  408bd3:	add    dh,bl
  408bd5:	je     0x408b6c
  408bd7:	sub    eax,0xff978bcf
  408bdc:	cmp    al,0x65
  408bde:	mov    eax,ds:0x9586d273
  408be3:	push   esp
  408be4:	mov    al,ds:0x8c40b1ca
  408be9:	ret    0x7395
  408bec:	sar    BYTE PTR [ebx-0x3b7a974f],0x3
  408bf3:	add    bl,dh
  408bf5:	in     al,dx
  408bf6:	mov    esi,0x32fd353
  408bfb:	add    bl,dh
  408bfd:	push   DWORD PTR [edx+edx*2+0x40f9f]
  408c04:	repz repz call 0xdcff:0xedf7e4ff
  408c0d:	pop    es
  408c0e:	out    dx,eax
  408c0f:	call   esp
  408c11:	pop    es
  408c12:	lock dec esp
  408c15:	div    eax
  408c17:	inc    esp
  408c19:	div    ecx
  408c1b:	(bad)  
  408c1c:	mov    esp,0xb4fff307
  408c21:	add    ebx,DWORD PTR [ebx-0x22f90c8b]
  408c27:	lahf   
  408c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c29:	sbb    eax,0x1d9cb1d5
  408c2e:	shl    DWORD PTR [ecx-0x4e34e26c],0x8c
  408c35:	sbb    eax,0x1eb
  408c3a:	add    cl,dh
  408c3c:	or     dl,ch
  408c3e:	add    ecx,esi
  408c40:	or     bl,ch
  408c42:	add    ecx,esi
  408c44:	or     bl,ah
  408c46:	stc    
  408c47:	cli    
  408c48:	out    0xf2,al
  408c4a:	stc    
  408c4b:	cli    
  408c4c:	adc    bl,dh
  408c4e:	stc    
  408c4f:	jmp    0x98af:0xe2a09a10
  408c56:	scas   eax,DWORD PTR es:[edi]
  408c57:	dec    esp
  408c58:	sbb    eax,0x96c1a197
  408c5d:	rol    DWORD PTR [ebx],0xf3
  408c60:	push   es
  408c61:	stos   DWORD PTR es:[edi],eax
  408c62:	mov    ds:0xe389afc1,al
  408c67:	sub    al,0x1d
  408c69:	xor    BYTE PTR [ecx-0x11aa5243],dh
  408c6f:	loopne 0x408c27
  408c71:	pop    edx
  408c72:	xchg   ebp,eax
  408c73:	xchg   ecx,eax
  408c74:	mov    ds:0x1d0cb159,eax
  408c79:	or     eax,DWORD PTR [esi+ecx*8]
  408c7c:	push   es
  408c7d:	cmp    al,BYTE PTR [ecx+edx*8]
  408c80:	push   es
  408c81:	jmp    0xb477f89
  408c86:	add    al,0x16
  408c88:	pop    es
  408c89:	sbb    al,BYTE PTR [ecx+edx*1]
  408c8c:	pop    es
  408c8d:	leave  
  408c8e:	add    edx,DWORD PTR [esi]
  408c90:	pop    es
  408c91:	sbb    al,BYTE PTR [ebx+esi*8]
  408c94:	push   es
  408c95:	adc    al,0xb1
  408c97:	push   edi
  408c98:	cdq    
  408c99:	or     edx,DWORD PTR [esi-0x67fb12c2]
  408c9f:	add    BYTE PTR [eax],al
  408ca1:	add    BYTE PTR [eax+0x7],cl
  408ca4:	add    BYTE PTR [edx],ch
  408ca6:	and    DWORD PTR [ebx-0x3c720aa0],0x9689df6d
  408cb0:	outs   dx,BYTE PTR ds:[esi]
  408cb1:	iret   
  408cb2:	test   DWORD PTR [ebx-0x4f4d2293],esp
  408cb8:	outs   dx,BYTE PTR ds:[esi]
  408cb9:	retf   0x1c6b
  408cbc:	jmp    FWORD PTR [ebp-0x448c669b]
  408cc2:	addr16 lahf 
  408cc4:	inc    esp
  408cc5:	mov    DWORD PTR [esi-0x51],0xab86be71
  408ccc:	fs xchg edi,eax
  408cce:	xchg   esp,eax
  408ccf:	(bad)  
  408cd0:	imul   ecx,DWORD PTR [esi-0x66004e6d],0xfffffff0
  408cd7:	scas   al,BYTE PTR es:[edi]
  408cd8:	inc    DWORD PTR [ebx-0x6b005510]
  408cde:	lock xlat BYTE PTR ds:[ebx]
  408ce0:	(bad)  
  408ce1:	mov    edx,0x8cffecf0
  408ce6:	lock stos BYTE PTR es:[edi],al
  408ce8:	(bad)  
  408ce9:	jl     0x408cdb
  408ceb:	push   es
  408cec:	add    BYTE PTR [ebx],ah
  408cee:	pop    ebx
  408cef:	or     ecx,DWORD PTR [edx]
  408cf1:	inc    ebp
  408cf2:	dec    edx
  408cf3:	mov    al,0x1f
  408cf5:	or     ecx,DWORD PTR [edx]
  408cf7:	cdq    
  408cf8:	and    esp,ebx
  408cfa:	(bad)  
  408cfb:	lods   eax,DWORD PTR ds:[esi]
  408cfc:	or     DWORD PTR gs:[edx-0x6c],ebx
  408d00:	push   0x21fc5b3a
  408d05:	or     al,0x0
  408d07:	add    BYTE PTR [eax],al
  408d09:	pop    esp
  408d0a:	out    0x1f,al
  408d0c:	inc    esi
  408d0d:	mov    al,ds:0x8cc96e97
  408d12:	sbb    edi,edi
  408d14:	or     esi,edi
  408d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d17:	call   FWORD PTR [edi+ebp*8]
  408d1a:	push   es
  408d1b:	add    BYTE PTR [ecx],ch
  408d1d:	call   0x6e22:0xdd0067a8
  408d24:	data16 hlt 
  408d26:	cmc    
  408d27:	or     DWORD PTR ds:0x6409f6b9,esp
  408d2d:	not    DWORD PTR [esi+0x1f]
  408d30:	das    
  408d31:	push   esp
  408d32:	daa    
  408d33:	and    DWORD PTR ds:0xa0c21b9,esp
  408d39:	mov    al,BYTE PTR [edi]
  408d3b:	add    BYTE PTR [eax],al
  408d3d:	lea    eax,[edi]
  408d3f:	arpl   WORD PTR [eax],ax
  408d41:	cli    
  408d42:	add    ah,BYTE PTR [edx]
  408d44:	add    bh,dh
  408d46:	add    dh,BYTE PTR [ebx+0x0]
  408d49:	call   0x99408d50
  408d4e:	pop    es
  408d4f:	outs   dx,DWORD PTR ds:[esi]
  408d50:	add    BYTE PTR [edi+0x7],bh
  408d53:	push   ebx
  408d54:	add    BYTE PTR [edx+0x7],bh
  408d57:	add    BYTE PTR gs:[ecx+0x7],ch
  408d5b:	add    BYTE PTR [eax],al
  408d5d:	das    
  408d5e:	or     DWORD PTR ds:0x75a0a,ecx
  408d64:	add    BYTE PTR [edx-0xa],bh
  408d67:	or     DWORD PTR ds:0x750,ecx
  408d6d:	add    BYTE PTR [eax],al
  408d6f:	add    BYTE PTR [edi],dh
  408d71:	jg     0x408d72
  408d73:	(bad)  
  408d74:	jmp    0xd940f27b
  408d79:	add    ch,BYTE PTR [eax+0x0]
  408d7c:	mov    bh,0x2
  408d7e:	je     0x408d80
  408d80:	mov    dh,0x2
  408d82:	outs   dx,DWORD PTR ds:[esi]
  408d83:	add    ch,al
  408d85:	add    ch,BYTE PTR [esi+0x0]
  408d88:	fiadd  DWORD PTR [edx]
  408d8a:	jb     0x408d8c
  408d8c:	mov    bl,0x2
  408d8e:	jbe    0x408d90
  408d90:	xor    eax,DWORD PTR [ebx]
  408d92:	ins    BYTE PTR es:[edi],dx
  408d93:	add    bh,dh
  408d95:	add    ah,BYTE PTR [edi+0x0]
  408d98:	test   DWORD PTR [edx],0x12f30000
  408d9e:	add    eax,DWORD PTR [eax]
  408da0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da2:	dec    edx
  408da3:	inc    ecx
  408da4:	repz mov dh,0x4b
  408da7:	inc    ecx
  408da8:	repz cld 
  408daa:	add    edi,DWORD PTR [edx]
  408dac:	repz inc edi
  408dae:	add    ecx,DWORD PTR [ebp-0xd]
  408db1:	sti    
  408db2:	add    edi,DWORD PTR [ebx]
  408db4:	repz in al,0x3
  408db7:	dec    esi
  408db8:	repz pop ebp
  408dba:	add    ecx,DWORD PTR [esi-0xd]
  408dbd:	pop    eax
  408dbe:	add    ecx,DWORD PTR [esi-0xd]
  408dc1:	push   edi
  408dc2:	add    edi,DWORD PTR [ebx]
  408dc4:	repz add al,0x4
  408dc7:	cmp    esi,ebx
  408dc9:	imul   eax,DWORD PTR [ebx],0x57
  408dcc:	repz push es
  408dce:	add    al,0x0
  408dd0:	repz xchg edi,eax
  408dd2:	cmp    al,BYTE PTR [ecx+0x0]
  408dd5:	add    BYTE PTR [eax],al
  408dd7:	repz retf 
  408dd9:	inc    ecx
  408dda:	inc    ecx
  408ddb:	repz mov ch,0x41
  408dde:	inc    ecx
  408ddf:	repz pop esp
  408de1:	add    edi,DWORD PTR [ecx-0xd]
  408de4:	jl     0x408de9
  408de6:	dec    esp
  408de7:	repz jbe 0x408ded
  408dea:	jae    0x408ddf
  408dec:	xchg   ebx,eax
  408ded:	add    dl,BYTE PTR [esi-0xd]
  408df0:	xchg   BYTE PTR [ebx],al
  408df2:	gs pause 
  408df5:	add    dh,BYTE PTR [ebx]
  408df7:	repz std 
  408df9:	add    eax,DWORD PTR [eax]
  408dfb:	repz jmp 0x4303:0xe6f34403
  408e03:	repz fild DWORD PTR [ebx]
  408e06:	imul   esi,ebx,0xf36e03ca
  408e0c:	rol    DWORD PTR [ebx],cl
  408e0e:	add    bl,dh
  408e10:	in     al,dx
  408e11:	add    ebp,DWORD PTR [ecx-0xd]
  408e14:	int3   
  408e15:	add    esp,DWORD PTR [ebp-0xd]
  408e18:	push   es
  408e19:	sbb    eax,DWORD PTR [esp+ecx*2]
  408e1c:	pop    es
  408e1d:	xor    al,0x4
  408e1f:	sub    al,BYTE PTR [edi]
  408e21:	ds add al,0x5d
  408e24:	pop    es
  408e25:	add    eax,0xfb072d04
  408e2a:	add    edx,DWORD PTR [edx+0x7]
  408e2d:	or     al,0x4
  408e2f:	dec    esi
  408e30:	pop    es
  408e31:	jmp    0x2a478139
  408e36:	add    al,0x14
  408e38:	pop    es
  408e39:	xlat   BYTE PTR ds:[ebx]
  408e3a:	add    eax,DWORD PTR [eax]
  408e3c:	add    BYTE PTR [eax],al
  408e3e:	and    BYTE PTR [edi],al
  408e40:	into   
  408e41:	add    eax,DWORD PTR [edi]
  408e43:	pop    es
  408e44:	int3   
  408e45:	add    esp,DWORD PTR [edi+eax*1]
  408e48:	rol    BYTE PTR [ebx],0x15
  408e4b:	pop    es
  408e4c:	int    0x3
  408e4e:	or     al,0x7
  408e50:	mov    dh,0x3
  408e52:	xor    BYTE PTR [edi],al
  408e54:	lds    eax,FWORD PTR [ebx]
  408e56:	rol    BYTE PTR [esi],cl
  408e58:	mov    edx,0xe906e003
  408e5d:	add    esi,ebx
  408e5f:	push   es
  408e60:	retf   0x2003
  408e63:	pop    es
  408e64:	fild   DWORD PTR [ebx]
  408e66:	add    al,0x7
  408e68:	xlat   BYTE PTR ds:[ebx]
  408e69:	add    ecx,DWORD PTR [ebx]
  408e6b:	pop    es
  408e6c:	jmp    0x9a478174
  408e71:	add    edi,DWORD PTR [edx-0x3ffc85fa]
  408e77:	push   es
  408e78:	add    DWORD PTR [ebx],0x44d0692
  408e7e:	mov    WORD PTR [esi],es
  408e80:	push   esi
  408e81:	add    al,0xf3
  408e83:	push   es
  408e84:	das    
  408e85:	retf   
  408e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e87:	retf   
  408e88:	and    eax,DWORD PTR [ebx+esi*8]
  408e8b:	push   es
  408e8c:	shl    BYTE PTR [edx],0xfc
  408e8f:	add    eax,0x44283baa
  408e94:	add    BYTE PTR [edx+edi*2-0xf5f39b8],ch
  408e9b:	push   es
  408e9c:	add    BYTE PTR [ebx-0x5a1dcbcf],cl
  408ea2:	add    BYTE PTR [eax],al
  408ea4:	add    BYTE PTR [edx],ch
  408ea6:	inc    ebp
  408ea7:	xlat   BYTE PTR ds:[ebx]
  408ea8:	test   al,0x8
  408eaa:	sbb    eax,0x1c069ddd
  408eaf:	fsub   DWORD PTR [ebx-0x6a25c6fa]
  408eb5:	fdivr  QWORD PTR [eax+eax*8]
  408eb8:	xchg   ecx,eax
  408eb9:	xor    ecx,DWORD PTR [ecx+edx*8-0x5e]
  408ebd:	xor    DWORD PTR [ebx],ebp
  408ebf:	add    dl,dl
  408ec1:	dec    esp
  408ec2:	lahf   
  408ec3:	outs   dx,BYTE PTR ds:[esi]
  408ec4:	fidivr WORD PTR [ebp-0x56]
  408ec7:	fld    TBYTE PTR ss:[edi-0x70]
  408ecb:	jmp    FWORD PTR [eax-0x30bb3d52]
  408ed1:	pop    ebx
  408ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed3:	push   0x6d9045b3
  408ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ed9:	test   DWORD PTR [esi+0x6f0c07c],edx
  408edf:	add    ch,al
  408ee1:	xor    bh,BYTE PTR [esi-0x5f7863b3]
  408ee7:	inc    eax
  408ee8:	pop    DWORD PTR [ebx-0xf708e56]
  408eee:	push   es
  408eef:	add    cl,ch
  408ef1:	test   BYTE PTR [eax],0x11
  408ef4:	mov    esp,0xc434dc4b
  408ef9:	adc    ebp,edi
  408efb:	cmp    cl,ah
  408efd:	adc    ebp,esi
  408eff:	sub    dl,BYTE PTR [edi]
  408f01:	push   cs
  408f02:	in     eax,dx
  408f03:	ss cmc 
  408f05:	lock push es
  408f07:	add    al,bh
  408f09:	add    BYTE PTR [eax],al
  408f0b:	add    BYTE PTR [ecx],al
  408f0d:	icebp  
  408f0e:	add    edi,ebx
  408f10:	cli    
  408f11:	mov    bl,0x52
  408f13:	add    dl,cl
  408f15:	or     eax,DWORD PTR [eax]
  408f17:	add    DWORD PTR [edx],ecx
  408f19:	add    al,0x0
  408f1b:	add    BYTE PTR [edi-0x55],cl
  408f1e:	mov    eax,ds:0xb1a55fb1
  408f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f24:	pop    eax
  408f25:	mov    DWORD PTR [ebp+edi*4-0x574452bc],edi
  408f2c:	inc    eax
  408f2d:	mov    ebx,0xa75b89a2
  408f32:	mov    ch,0xa5
  408f34:	and    edi,DWORD PTR [ecx-0x6eb34753]
  408f3a:	mov    al,0xba
  408f3c:	dec    esi
  408f3d:	mov    edx,DWORD PTR [edi-0x6ff176]
  408f43:	call   FWORD PTR [ecx]
  408f45:	test   eax,0xae79b7a3
  408f4a:	mov    bl,0xa2
  408f4c:	push   cs
  408f4d:	(bad)  
  408f4e:	mov    ds:0xbca474a8,eax
  408f53:	mov    al,ds:0xffffadfc
  408f58:	cmp    BYTE PTR [ebx+0x6d],ch
  408f5b:	push   0x36
  408f5d:	jle    0x408fcd
  408f5f:	add    BYTE PTR [ebx+esi*1+0x25],bl
  408f63:	xor    dl,BYTE PTR [edx+0xd]
  408f66:	xor    esp,DWORD PTR ds:0x273140
  408f6c:	aaa    
  408f6d:	jge    0x408fc3
  408f6f:	add    BYTE PTR cs:[eax],al
  408f72:	add    BYTE PTR [esi],dh
  408f74:	ds push ebp
  408f76:	sub    bh,BYTE PTR [edx+0x3a]
  408f79:	pop    ecx
  408f7a:	add    cl,ch
  408f7c:	mov    ecx,0xccc40dcd
  408f82:	lock test ecx,0xd962d9c8
  408f89:	(bad)  
  408f8b:	or     al,BYTE PTR [ebx]
  408f8d:	add    BYTE PTR [eax],al
  408f8f:	repz ficom DWORD PTR [edx-0x67496794]
  408f96:	jne    0x408f34
  408f98:	fisub  DWORD PTR [edx+esi*2-0x648c560d]
  408f9f:	jnp    0x408f4d
  408fa1:	jns    0x408f2e
  408fa3:	xchg   BYTE PTR [ecx-0x405b4387],ch
  408fa9:	pop    edi
  408faa:	mov    ds:0x9158b794,al
  408faf:	push   0x8cad66c2
  408fb4:	mov    al,0x57
  408fb6:	in     eax,0x69
  408fb8:	mov    ch,0x7c
  408fba:	cmp    BYTE PTR [esi-0x5d],0x8e
  408fbe:	cwde   
  408fbf:	sub    DWORD PTR [ebp-0x53866392],0x20799a7d
  408fc9:	add    eax,DWORD PTR [eax]
  408fcb:	repz xor BYTE PTR [esi-0x5bc4f59d],ch
  408fd2:	je     0x408fe4
  408fd4:	lock cdq 
  408fd6:	arpl   WORD PTR [eax],ax
  408fd8:	add    BYTE PTR [eax],al
  408fda:	sti    
  408fdb:	pop    ds
  408fdc:	add    eax,DWORD PTR [eax]
  408fde:	repz mov fs,WORD PTR [ecx+esi*4-0x70]
  408fe3:	mov    DWORD PTR [esi-0x4b],ebp
  408fe6:	pop    ecx
  408fe7:	xchg   esi,eax
  408fe8:	push   eax
  408fe9:	lods   al,BYTE PTR ds:[esi]
  408fea:	repz push ss
  408fec:	dec    BYTE PTR ds:0x42041eef
  408ff2:	sti    
  408ff3:	sbb    DWORD PTR ds:0x12cf300,eax
  408ff9:	adc    esi,ebx
  408ffb:	pop    ds
  408ffc:	repnz push cs
  408ffe:	call   0xdc4a:0xf31f0432
  409005:	daa    
  409006:	loop   0x40905f
  409008:	shl    DWORD PTR [edi],1
  40900a:	mov    ds:0xdeec1d06,eax
  40900f:	push   es
  409010:	je     0x408f95
  409012:	arpl   WORD PTR [eax+0x795f8964],ax
  409018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409019:	(bad)  
  40901a:	pusha  
  40901b:	xchg   cl,ch
  40901d:	add    esi,ebx
  40901f:	push   es
  409020:	push   0x73
  409022:	jnp    0x409064
  409024:	outs   dx,DWORD PTR ds:[esi]
  409025:	jp     0x409096
  409027:	push   es
  409028:	es call 0x9d34:0x940daa4c
  409030:	sub    BYTE PTR [ebp+eax*2+0x5b960293],dh
  409037:	fwait
  409038:	or     dl,BYTE PTR [ebx-0x52f048e6]
  40903e:	add    BYTE PTR [eax],al
  409040:	add    BYTE PTR [esi-0x5d],cl
  409043:	add    DWORD PTR [esi-0x670c3cbe],ebx
  409049:	sbb    al,0xa5
  40904b:	adc    al,bl
  40904d:	fdivr  QWORD PTR [eax-0x4cc63e56]
  409053:	mov    edx,0xbec118a2
  409058:	add    esi,ebx
  40905a:	push   es
  40905b:	add    eax,0xcfa914e3
  409060:	or     cl,dl
  409062:	in     eax,dx
  409063:	retf   0xd5ab
  409066:	xchg   ebx,eax
  409067:	jmp    0xf8af:0xba9016ea
  40906e:	fstp   st(4)
  409070:	mov    al,ds:0xf48ea0e0
  409075:	push   cs
  409076:	ror    BYTE PTR [edx-0x1b082f60],cl
  40907c:	add    bl,BYTE PTR [edi+0xcb0a6b3]
  409082:	or     dh,cl
  409084:	mov    al,0xc8
  409086:	mov    bh,0xff
  409088:	retf   0x4f9
  40908b:	pop    ecx
  40908c:	call   0xb12b:0xfd16d163
  409093:	pop    esi
  409094:	pop    ss
  409095:	test   DWORD PTR [esi],0xc1362900
  40909b:	push   edi
  40909c:	jmp    0x4090cd
  40909e:	mov    BYTE PTR [esp+ebx*1+0x2e],0x15
  4090a3:	push   edi
  4090a5:	add    BYTE PTR [eax],al
  4090a7:	add    al,cl
  4090a9:	fsub   QWORD PTR [edi*8-0x16fff910]
  4090b0:	lock push es
  4090b2:	add    BYTE PTR [edx+0x35],cl
  4090b5:	imul   esp,DWORD PTR [esi+esi*4+0x7b868909],0x56d87376
  4090c0:	dec    edx
  4090c1:	pop    esi
  4090c2:	lods   al,BYTE PTR ds:[esi]
  4090c3:	mov    ch,0x3
  4090c5:	inc    esp
  4090c6:	rcl    DWORD PTR [ebx+0x518b61dc],1
  4090cc:	es cmp al,cl
  4090cf:	bound  ebp,QWORD PTR [ebx-0x80]
  4090d2:	lea    ecx,[edi+0x3cdd6a36]
  4090d8:	pop    es
  4090d9:	pop    ebp
  4090da:	mov    bh,0x97
  4090dc:	sbb    ah,BYTE PTR [edx-0xb]
  4090df:	jae    0x409101
  4090e1:	push   ebp
  4090e2:	mov    bl,0x8e
  4090e4:	or     esp,DWORD PTR [edi+eiz*4+0x3c]
  4090e8:	mov    ebx,0xcc8d8743
  4090ed:	imul   ebp,DWORD PTR [ebp-0x5c954583],0x44
  4090f4:	push   0xab259576
  4090f9:	push   ebx
  4090fa:	idiv   DWORD PTR ds:0x38dd41fc
  409100:	stos   BYTE PTR es:[edi],al
  409101:	jbe    0x4090f3
  409103:	add    BYTE PTR [esp+eax*8],al
  409106:	(bad)
  409109:	xchg   ebx,eax
  40910a:	test   BYTE PTR [ecx-0x4000000],al
  409110:	stos   BYTE PTR es:[edi],al
  409111:	mov    ds:0xe8ea88f0,al
  409116:	xchg   esi,eax
  409117:	jns    0x4090d1
  409119:	jecxz  0x4090b8
  40911b:	(bad)  
  40911c:	xchg   ebx,eax
  40911d:	sahf   
  40911e:	add    BYTE PTR [ecx],ch
  409120:	out    0xed,eax
  409122:	out    0x35,al
  409124:	cli    
  409125:	test   DWORD PTR [ebp-0x1b08207e],ecx
  40912b:	mov    ebx,0x96c1ef7d
  409130:	shl    al,cl
  409132:	ret    
  409133:	jg     0x409101
  409135:	(bad)  
  409136:	lds    ebp,FWORD PTR [edi-0x4d2b381f]
  40913c:	ret    0xcbdc
  40913f:	fiadd  DWORD PTR [edi]
  409141:	add    BYTE PTR [eax],al
  409143:	dec    ecx
  409144:	xchg   edi,eax
  409145:	popf   
  409146:	xchg   esi,eax
  409147:	adc    eax,0x72fdf68a
  40914c:	pop    DWORD PTR [edi-0x6811b46c]
  409152:	mov    dh,0xd8
  409154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409155:	mov    ah,0xa2
  409157:	and    BYTE PTR [ecx-0x628a4a6b],0xbe
  40915e:	test   al,0x62
  409160:	or     al,BYTE PTR [eax]
  409162:	add    BYTE PTR [eax+0x4e],dl
  409165:	push   esi
  409166:	pop    edi
  409167:	dec    esp
  409168:	aas    
  409169:	ds xor al,0x6b
  40916c:	push   ebp
  40916d:	inc    eax
  40916e:	pop    ebp
  40916f:	add    BYTE PTR [ebx+0x55],0x78
  409173:	add    BYTE PTR [eax],al
  409175:	add    BYTE PTR [edi-0x729ca396],cl
  40917b:	jb     0x4091f8
  40917d:	pop    esi
  40917e:	imul   esp,DWORD PTR [eax+0x66],0x9383f377
  409185:	(bad)  
  409186:	cmp    al,0x2f
  409188:	jmp    0xf1668db9
  40918d:	and    dl,bh
  40918f:	push   edx
  409190:	fisub  WORD PTR [edx]
  409192:	in     al,0x52
  409194:	or     DWORD PTR [ebx],ebp
  409196:	ror    BYTE PTR [ecx-0x31],cl
  409199:	pop    ds
  40919a:	xchg   edx,eax
  40919b:	sbb    eax,0x62f30003
  4091a0:	xor    al,0xd2
  4091a2:	cmp    eax,DWORD PTR [esp+ebp*1-0x24]
  4091a6:	sbb    BYTE PTR [edi+0x3f],bl
  4091a9:	fdiv   QWORD PTR [ebx]
  4091ab:	push   edi
  4091ac:	adc    al,0xd4
  4091ae:	int    0x65
  4091b0:	dec    esi
  4091b1:	fcomip st,st(3)
  4091b3:	pop    DWORD PTR [esp+eiz*4+0x320a4]
  4091ba:	repz into 
  4091bc:	mov    esp,0xb8d62d48
  4091c1:	dec    esp
  4091c2:	sub    bl,ch
  4091c4:	scas   eax,DWORD PTR es:[edi]
  4091c5:	push   ebp
  4091c6:	xor    bl,dl
  4091c8:	rcr    DWORD PTR [ebp+0x2d],0xeb
  4091cc:	les    eax,FWORD PTR [ebx+0x37]
  4091cf:	out    dx,eax
  4091d0:	mov    edx,0xa0132675
  4091d5:	ins    DWORD PTR es:[edi],dx
  4091d6:	cmp    eax,0x68a4ea
  4091db:	add    BYTE PTR [eax],al
  4091dd:	and    DWORD PTR [ebp-0x44],edx
  4091e0:	push   esi
  4091e1:	sbb    DWORD PTR [ecx-0x4a],esp
  4091e4:	pop    ebx
  4091e5:	sub    BYTE PTR [esi-0x3a],bl
  4091e8:	pop    ebx
  4091e9:	xor    eax,DWORD PTR [edi-0x1]
  4091ec:	push   DWORD PTR [ecx+edi*8-0x31]
  4091f0:	and    al,0x22
  4091f2:	dec    ebx
  4091f3:	shl    DWORD PTR [ecx],1
  4091f5:	adc    edx,DWORD PTR [esi]
  4091f7:	stos   DWORD PTR es:[edi],eax
  4091f8:	sub    al,0x8
  4091fa:	pop    ss
  4091fb:	mov    eax,0xde06c55c
  409200:	aam    0x15
  409202:	(bad)  
  409203:	test   eax,0xc3da038f
  409208:	into   
  409209:	stos   DWORD PTR es:[edi],eax
  40920a:	mov    eax,ss
  40920c:	(bad)  
  40920e:	rcr    ebx,1
  409210:	ret    
  409211:	sub    al,0x12
  409213:	jmp    0xdc47851b
  409218:	int    0xfc
  40921a:	call   0xa2c5bae
  40921f:	pop    ebp
  409220:	add    bh,cl
  409222:	fwait
  409223:	jmp    0xf3f6812b
  409228:	aam    0xc5
  40922a:	shr    BYTE PTR ds:0xdd9ddefe,0xfa
  409231:	push   eax
  409232:	sti    
  409233:	xlat   BYTE PTR ds:[ebx]
  409234:	lock xor dh,ch
  409237:	jmp    0x63a9:0x19d50ff
  40923e:	test   al,0x1c
  409240:	xchg   esi,eax
  409241:	add    BYTE PTR [eax],al
  409243:	add    BYTE PTR [edi],dl
  409245:	jmp    0xe7522510
  40924a:	adc    BYTE PTR [ebx-0x662e69b5],dl
  409250:	loopne 0x409246
  409252:	push   es
  409253:	xchg   esp,eax
  409254:	out    0x97,eax
  409256:	adc    DWORD PTR [ebp-0x37da54ee],ebx
  40925c:	xor    al,0xf2
  40925e:	pop    ds
  40925f:	into   
  409260:	out    0x9,al
  409262:	cli    
  409263:	or     dh,BYTE PTR [esi]
  409265:	pop    es
  409266:	jmp    0xea47856e
  40926b:	add    edx,ebp
  40926d:	add    dl,ah
  40926f:	ret    
  409270:	out    dx,al
  409271:	repz in eax,dx
  409273:	jmp    FWORD PTR [ecx+edx*1-0x4a]
  409277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409278:	fldenv [ecx-0x607f4001]
  40927e:	jmp    FWORD PTR [ebx-0x69986c74]
  409284:	ins    DWORD PTR es:[edi],dx
  409285:	mov    WORD PTR [eax-0x70],fs
  409288:	pop    edi
  409289:	cwde   
  40928a:	pop    eax
  40928b:	into   
  40928c:	pusha  
  40928d:	lods   eax,DWORD PTR ds:[esi]
  40928e:	and    edi,DWORD PTR [edi-0x39be5ab9]
  409294:	pop    ds
  409295:	icebp  
  409296:	pusha  
  409297:	sar    DWORD PTR [ebp-0x5b],0x71
  40929b:	jmp    0x73409990
  4092a0:	jbe    0x409231
  4092a2:	jnp    0x4092fa
  4092a4:	bound  ebx,QWORD PTR [ebp+0xfff]
  4092aa:	add    BYTE PTR [ecx],al
  4092ac:	test   DWORD PTR ds:0xffc8fee7,0x61a99c
  4092b6:	popa   
  4092b7:	push   esi
  4092b8:	imul   esp,DWORD PTR [eax-0x1595b479],0xffffff8f
  4092bf:	dec    edi
  4092c0:	pop    ebp
  4092c1:	stos   DWORD PTR es:[edi],eax
  4092c2:	mov    DWORD PTR [edx+0x68],ecx
  4092c5:	loop   0x40932c
  4092c7:	pop    eax
  4092c8:	adc    BYTE PTR [edx-0x5aedda7],dh
  4092ce:	cdq    
  4092cf:	push   ecx
  4092d0:	push   cs
  4092d1:	add    BYTE PTR [ecx],bh
  4092d3:	popa   
  4092d4:	xchg   ebx,eax
  4092d5:	js     0x4092d5
  4092d7:	and    eax,0x64
  4092da:	clc    
  4092db:	retf   
  4092dc:	(bad)  
  4092dd:	idiv   BYTE PTR fs:[eax-0x5d]
  4092e1:	ins    BYTE PTR es:[edi],dx
  4092e2:	or     dl,BYTE PTR [edx+0x5ad669a9]
  4092e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092e9:	outs   dx,BYTE PTR ds:[esi]
  4092ea:	rcr    DWORD PTR [ebx+0x520378a3],cl
  4092f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f1:	mov    dx,0xf783
  4092f5:	aas    
  4092f6:	add    BYTE PTR [esi+0x4],dl
  4092f9:	add    BYTE PTR [eax],al
  4092fb:	loopne 0x4092a4
  4092fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fe:	mov    ds:0xbfe9a977,eax
  409303:	jno    0x4092f6
  409305:	test   eax,0xe1b0bba8
  40930a:	scas   eax,DWORD PTR es:[edi]
  40930b:	test   eax,0xb3bead
  409310:	add    BYTE PTR [eax],al
  409312:	loop   0x4092c5
  409314:	mov    ah,0xb5
  409316:	cwde   
  409317:	mov    bh,0xb0
  409319:	mov    ds:0xbaa5b3b8,al
  40931e:	cdq    
  40931f:	mov    al,al
  409321:	add    dh,dl
  409323:	clc    
  409324:	out    dx,al
  409325:	cmc    
  409326:	icebp  
  409327:	fnstsw WORD PTR [eax-0x1018ee07]
  40932d:	cmc    
  40932e:	sbb    eax,0x1df5b0dc
  409333:	fsub   st(5),st
  409335:	stc    
  409336:	and    eax,0xdaa6ece8
  40933b:	add    eax,DWORD PTR [eax]
  40933d:	add    BYTE PTR [ebx],al
  40933f:	add    dl,BYTE PTR [ecx]
  409341:	inc    esp
  409342:	int3   
  409343:	pop    es
  409344:	push   cs
  409345:	adc    eax,0x14c11d2
  40934a:	les    edx,FWORD PTR [eax]
  40934c:	add    eax,0xff4bd41a
  409351:	(bad)  
  409352:	stc    
  409353:	push   esi
  409354:	inc    eax
  409355:	push   edi
  409356:	out    0x45,eax
  409358:	dec    ebx
  409359:	inc    eax
  40935a:	xlat   BYTE PTR ds:[ebx]
  40935b:	dec    edi
  40935c:	pop    ebx
  40935d:	inc    ecx
  40935e:	loope  0x4093b4
  409360:	dec    esp
  409361:	pop    ebx
  409362:	repz inc ebp
  409364:	push   eax
  409365:	pop    eax
  409366:	out    0x45,eax
  409368:	push   esp
  409369:	add    BYTE PTR [edi-0x74],dh
  40936c:	mov    ds,WORD PTR [ecx-0x717d8497]
  409372:	repz mov WORD PTR [edx+edx*4+0x64000000],cs
  40937a:	stos   BYTE PTR es:[edi],al
  40937b:	ja     0x409300
  40937d:	xchg   BYTE PTR [eax+0x1d749f76],al
  409383:	add    eax,DWORD PTR [eax]
  409385:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409387:	xchg   DWORD PTR [ecx-0x6a89759c],ebx
  40938d:	imul   ecx,DWORD PTR [eax-0x7b956885],0x6e
  409394:	sahf   
  409395:	jbe    0x409331
  409397:	push   ebx
  409398:	mov    ebp,DWORD PTR [ebx-0x61]
  40939b:	add    eax,DWORD PTR [eax]
  40939d:	repz jnp 0x409340
  4093a0:	outs   dx,DWORD PTR ds:[esi]
  4093a1:	lea    esp,[ecx-0x67]
  4093a4:	jge    0x409344
  4093a6:	xchg   ebx,eax
  4093a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093a8:	jnp    0x409342
  4093aa:	lahf   
  4093ab:	mov    edi,0x3ac8e69
  4093b0:	add    bl,dh
  4093b2:	inc    edi
  4093b3:	and    al,0xf4
  4093b5:	adc    DWORD PTR [ebp+0x22],esp
  4093b8:	out    0xfb,eax
  4093ba:	push   0x51e9f726
  4093bf:	adc    al,0xfe
  4093c1:	fsub   QWORD PTR [eax]
  4093c3:	add    eax,DWORD PTR [eax]
  4093c5:	repz das 
  4093c7:	out    dx,al
  4093c8:	add    edi,edi
  4093ca:	sbb    eax,0x31fd10f0
  4093cf:	add    eax,0x219f203
  4093d4:	add    bl,dh
  4093d6:	mov    ds:0xc26b9e89,eax
  4093db:	jne    0x409377
  4093dd:	add    BYTE PTR [eax],al
  4093df:	add    BYTE PTR [edi-0x65],bh
  4093e2:	sub    DWORD PTR [ebx+esi*2+0x73987bb0],0xf30002a4
  4093ed:	push   esp
  4093ee:	shl    DWORD PTR [eax+eax*8],cl
  4093f1:	push   es
  4093f2:	add    al,ah
  4093f4:	rcl    ebp,cl
  4093f6:	push   ds
  4093f7:	fsubr  st(5),st
  4093f9:	fadd   QWORD PTR [ecx]
  4093fb:	(bad)  [esi+ecx*1-0x28]
  4093ff:	(bad)  
  409400:	rcl    DWORD PTR [ebx-0x65285e5b],1
  409406:	lds    ebx,FWORD PTR [edi-0x65627537]
  40940c:	lds    esp,FWORD PTR [ecx+esi*4+0x706c1a2]
  409413:	std    
  409414:	clc    
  409415:	lock fmul DWORD PTR [eax]
  409418:	icebp  
  409419:	or     ecx,esp
  40941b:	or     ch,bh
  40941d:	stc    
  40941e:	rol    BYTE PTR [ebx+esi*8],1
  409421:	imul   al
  409423:	add    esi,ebx
  409425:	push   es
  409426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409427:	rol    ebp,0xc7
  40942a:	xor    DWORD PTR [ebx-0x386e475a],0x3e8acbe
  409434:	repz push es
  409436:	arpl   WORD PTR [edi-0x61c3736c],dx
  40943c:	mov    ds,WORD PTR [ebp+0x751a440]
  409442:	or     ah,al
  409444:	add    BYTE PTR [eax],al
  409446:	add    BYTE PTR [ebx],ah
  409448:	out    0xeb,al
  40944a:	int3   
  40944b:	daa    
  40944c:	jmp    0xe3627b53
  409451:	call   0x90478759
  409456:	pop    ss
  409457:	mov    eax,ds:0xb8298f0d
  40945c:	and    DWORD PTR [esi+0x7f27bc3b],eax
  409462:	daa    
  409463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409464:	and    ebp,ecx
  409466:	add    esi,ebx
  409468:	push   es
  409469:	fdivr  st,st(6)
  40946b:	retf   0x5
  40946e:	fbld   TBYTE PTR [ebx-0x6e29ecf8]
  409474:	icebp  
  409475:	pop    ss
  409476:	push   es
  409477:	out    dx,eax
  409478:	push   es
  409479:	add    BYTE PTR [ebx-0x13],cl
  40947c:	das    
  40947d:	test   DWORD PTR [eax-0x1c],0x1f42dc20
  409484:	adc    DWORD PTR [eax],eax
  409486:	push   edi
  409487:	or     DWORD PTR [ebp*8-0x2fdeedbc],esi
  40948e:	dec    ebx
  40948f:	imul   DWORD PTR [ebx]
  409491:	call   0xe8587fde
  409496:	adc    ebx,esp
  409498:	push   es
  409499:	add    BYTE PTR [ebp-0x39],bh
  40949c:	jle    0x409440
  40949e:	jnp    0x40950e
  4094a0:	jp     0x40942b
  4094a2:	outs   dx,BYTE PTR ds:[esi]
  4094a3:	test   al,0x6c
  4094a5:	nop
  4094a6:	pop    eax
  4094a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a8:	pop    ebp
  4094a9:	xchg   esp,eax
  4094aa:	imul   eax,DWORD PTR [eax],0x7c750000
  4094b0:	and    DWORD PTR [esi-0x11],0x84580006
  4094b7:	sub    DWORD PTR [edi-0x7b788d7a],0x7b
  4094be:	mov    WORD PTR [ecx-0x63],?
  4094c1:	jne    0x40952d
  4094c3:	push   0x87616398
  4094c8:	xor    BYTE PTR [edx+0x73],0x7
  4094cc:	add    BYTE PTR [esi-0x6516b7e5],dl
  4094d2:	and    ebx,DWORD PTR [ebx]
  4094d4:	rcl    BYTE PTR [ecx-0x3a37c8ff],0xf0
  4094db:	push   es
  4094dc:	add    BYTE PTR [eax],cl
  4094de:	xchg   esp,eax
  4094df:	xchg   ebx,eax
  4094e0:	pop    esi
  4094e1:	or     al,0x54
  4094e3:	scas   al,BYTE PTR es:[edi]
  4094e4:	fs (bad) 
  4094e6:	push   esi
  4094e7:	or     al,0xff
  4094e9:	add    BYTE PTR [ebx+0x581f3425],bh
  4094ef:	and    BYTE PTR [ebx],ch
  4094f1:	sub    ah,BYTE PTR [edx+0x32]
  4094f4:	daa    
  4094f5:	and    al,0xb9
  4094f7:	or     BYTE PTR [eax],al
  4094f9:	add    BYTE PTR [esi-0x4f],dh
  4094fc:	xchg   ebp,eax
  4094fd:	mov    edx,0xa3a1a460
  409502:	push   ebp
  409503:	or     BYTE PTR [eax],al
  409505:	add    BYTE PTR [ebx+0x4],ch
  409508:	and    ecx,DWORD PTR [esi]
  40950a:	dec    eax
  40950b:	add    cl,BYTE PTR [ebx*1+0x1a0853]
  409512:	add    BYTE PTR [eax],al
  409514:	add    BYTE PTR [ebx],ch
  409516:	outs   dx,DWORD PTR ds:[esi]
  409517:	jl     0x409592
  409519:	popf   
  40951a:	push   0x7b
  40951c:	dec    edi
  40951d:	arpl   WORD PTR [edi+0x74],si
  409520:	jno    0x409587
  409522:	bound  esi,QWORD PTR [ebx+0x0]
  409525:	push   es
  409526:	fdivr  DWORD PTR [edi-0x3f39283e]
  40952c:	add    dl,cl
  40952e:	call   0x87cf:0x9d968482
  409535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409536:	ror    BYTE PTR [ecx-0x313e1f59],cl
  40953c:	mov    DWORD PTR [esi-0x40],ecx
  40953f:	rcl    dl,1
  409541:	js     0x4094fc
  409543:	mov    edi,0xc6983dd4
  409548:	cwde   
  409549:	push   ebx
  40954a:	xchg   ecx,eax
  40954b:	(bad)  
  40954c:	call   ebp
  40954e:	adc    BYTE PTR ds:0x7ca07,al
  409554:	add    BYTE PTR [edi-0x5c],ah
  409557:	mov    dh,0xa1
  409559:	pop    edi
  40955a:	mov    esp,0xb664a3be
  40955f:	mov    eax,ds:0x7cabe
  409564:	add    bl,dh
  409566:	and    ecx,DWORD PTR [edx]
  409568:	jg     0x409597
  40956a:	add    al,0x6
  40956c:	add    bl,dh
  40956e:	aam    0xbd
  409570:	inc    esp
  409571:	inc    esi
  409572:	push   ds
  409573:	add    eax,DWORD PTR [eax]
  409575:	repz jmp 0x409533
  409578:	push   ebx
  409579:	add    BYTE PTR [eax],al
  40957b:	add    ch,al
  40957d:	sbb    eax,0xb8f30003
  409582:	pop    ss
  409583:	out    dx,al
  409584:	mov    BYTE PTR ds:0x57f30003,bl
  40958a:	add    BYTE PTR [edx],ah
  40958c:	sbb    al,0x1c
  40958e:	in     al,dx
  40958f:	or     edi,ecx
  409591:	das    
  409592:	fdiv   QWORD PTR ds:0x13ef2af8
  409598:	add    BYTE PTR [ecx],bh
  40959a:	or     al,BYTE PTR [edx]
  40959c:	icebp  
  40959d:	sbb    eax,0x51f30003
  4095a2:	out    dx,al
  4095a3:	xor    edi,ecx
  4095a5:	pop    ds
  4095a6:	icebp  
  4095a7:	sbb    dh,bl
  4095a9:	lods   al,BYTE PTR ds:[esi]
  4095aa:	and    ecx,edi
  4095ac:	xor    dh,ah
  4095ae:	daa    
  4095af:	out    0x11,eax
  4095b1:	or     bl,BYTE PTR [esp+edi*8]
  4095b4:	dec    eax
  4095b5:	sbb    eax,0x63f30003
  4095ba:	in     al,dx
  4095bb:	xor    eax,0x1efe39ce
  4095c0:	shl    dl,0x6
  4095c3:	or     al,0xf6
  4095c5:	sbb    eax,0x2af30003
  4095ca:	lea    esi,gs:[ebx+0x6f]
  4095ce:	push   0xffffffa0
  4095d0:	mov    eax,ds:0xf3000376
  4095d5:	test   BYTE PTR [edi],bl
  4095d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d8:	jl     0x409587
  4095da:	cmp    bh,ch
  4095dc:	fadd   DWORD PTR [eax+0x15]
  4095df:	out    0x0,al
  4095e1:	add    BYTE PTR [eax],al
  4095e3:	xchg   esp,eax
  4095e4:	pop    es
  4095e5:	pop    ebx
  4095e6:	pop    ecx
  4095e7:	rcr    BYTE PTR [esi+0x52],1
  4095ea:	or     eax,0x8569098a
  4095ef:	into   
  4095f0:	or     eax,0x2399188a
  4095f5:	xchg   esi,eax
  4095f6:	sub    DWORD PTR [ecx+0x68],ebx
  4095f9:	bound  edi,QWORD PTR [edi]
  4095fb:	pop    ebp
  4095fc:	push   ebx
  4095fd:	sub    DWORD PTR ds:0x2ba83db8,0xffffffad
  409604:	cmp    BYTE PTR [ecx+0x76],dh
  409607:	inc    bp
  409609:	test   DWORD PTR [ebx],eax
  40960b:	repz push es
  40960d:	mov    ds:0xe0fa18f0,eax
  409612:	or     BYTE PTR [edi],al
  409614:	add    edx,ebx
  409616:	leave  
  409617:	jmp    0xb84b851f
  40961c:	(bad)  
  40961d:	xchg   edx,eax
  40961e:	add    ah,al
  409620:	iret   
  409621:	xchg   esi,eax
  409622:	cli    
  409623:	fdivr  st(7),st
  409625:	add    eax,eax
  409627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409628:	mov    bh,0xe8
  40962a:	mov    esi,DWORD PTR [edx+ecx*1]
  40962d:	sahf   
  40962e:	fwait
  40962f:	mov    ds:0xb5a78d91,al
  409634:	les    ebp,FWORD PTR [ebx-0x53675c3c]
  40963a:	sar    BYTE PTR [eax+edi*4+0xa0cc9ad],0xc5
  409642:	or     ch,bh
  409644:	(bad)  
  409645:	cld    
  409646:	add    DWORD PTR [eax],eax
  409648:	add    BYTE PTR [eax],al
  40964a:	in     al,0xcb
  40964c:	or     edi,edi
  40964e:	repnz std 
  409650:	call   0x96478958
  409655:	jb     0x4096cf
  409657:	jl     0x4096bf
  409659:	ins    BYTE PTR es:[edi],dx
  40965a:	jp     0x4096a6
  40965c:	pop    eax
  40965d:	je     0x4096d3
  40965f:	add    BYTE PTR [eax],0x51
  409662:	jbe    0x40966a
  409664:	add    bl,bh
  409666:	(bad)  
  409669:	idiv   DWORD PTR [ebx-0x1237be07]
  40966f:	out    dx,eax
  409670:	or     ah,BYTE PTR [eax]
  409672:	xchg   esp,eax
  409673:	inc    DWORD PTR [edx]
  409675:	lock lock push es
  409678:	add    BYTE PTR [edx*2+0x67086ca3],ah
  40967f:	mov    BYTE PTR [esi+eiz*1],ch
  409682:	push   ebp
  409683:	sahf   
  409684:	ins    BYTE PTR es:[edi],dx
  409685:	jmp    0xf409d7a
  40968a:	push   edx
  40968b:	(bad)  
  40968c:	gs jmp 0x6d409d82
  409692:	retf   0xa04f
  409695:	jmp    0x89409d8a
  40969a:	imul   ebp,DWORD PTR [eax-0x7e],0x9b62195b
  4096a1:	pop    ebp
  4096a2:	jno    0x4096aa
  4096a4:	add    dh,al
  4096a6:	xchg   esi,eax
  4096a7:	mov    ecx,0xc980ae42
  4096ac:	push   ebp
  4096ad:	mov    DWORD PTR [eax],eax
  4096af:	add    BYTE PTR [eax],al
  4096b1:	pusha  
  4096b2:	mov    al,0x5b
  4096b4:	mov    ds:0xab53be6a,eax
  4096b9:	popa   
  4096ba:	(bad)  
  4096bb:	outs   dx,DWORD PTR ds:[esi]
  4096bc:	mov    al,0x33
  4096be:	ret    
  4096bf:	dec    ebx
  4096c0:	mov    ds:0xa862fb62,al
  4096c5:	inc    ebx
  4096c6:	mov    eax,0x885c900a
  4096cb:	jp     0x4096b6
  4096cd:	lock push es
  4096cf:	add    cl,dl
  4096d1:	mov    ebp,0x23a1cc29
  4096d6:	cmp    cl,bl
  4096d8:	mov    esi,0xd32f03
  4096dd:	(bad)  
  4096de:	ffree  st(5)
  4096e0:	fild   DWORD PTR [edi-0x63000b2a]
  4096e6:	(bad)  
  4096e7:	enter  0x5ec3,0xd5
  4096eb:	sub    ch,0x8c
  4096ee:	(bad)  
  4096ef:	enter  0xed00,0x5e
  4096f3:	pushw  0xd
  4096f6:	push   0x72ae7a73
  4096fb:	and    DWORD PTR [edx+0x5],esp
  4096fe:	imul   ebp,DWORD PTR [edx+0x6a],0x617960f3
  409705:	call   0x1c17:0xae000004
  40970c:	add    al,0x8a
  40970e:	add    eax,0x18ec4c06
  409713:	adc    BYTE PTR [edx],dl
  409715:	add    BYTE PTR [eax],al
  409717:	add    BYTE PTR [eax+0x11],bl
  40971a:	adc    eax,0xc2c4c000
  40971f:	ficom  DWORD PTR [edi+edx*8]
  409722:	xlat   BYTE PTR ds:[ebx]
  409723:	xchg   edx,eax
  409724:	mov    dl,0xbf
  409726:	into   
  409727:	int3   
  409728:	out    0xca,al
  40972a:	(bad)  
  40972b:	call   0xccfb:0xcfc3c4fd
  409732:	(bad)
  409735:	(bad)  
  409736:	(bad)  
  409737:	call   DWORD PTR [esi-0x3543494e]
  40973d:	lods   al,BYTE PTR ds:[esi]
  40973e:	lods   eax,DWORD PTR ds:[esi]
  40973f:	cld    
  409740:	xchg   esp,eax
  409741:	mov    dl,0xb7
  409743:	mov    esp,0xb7b0811d
  409748:	mov    eax,0xbbad9fb9
  40974d:	mov    ecx,0x32f300bd
  409752:	ds ficomp WORD PTR ss:[edx]
  409756:	cmp    eax,0xd3f7f33f
  40975b:	and    al,0xf
  40975d:	or     eax,0xf71c3dcd
  409762:	fnstsw WORD PTR [ecx]
  409764:	or     eax,0xfd64e701
  409769:	push   es
  40976a:	call   0xe85faf9d
  40976f:	and    eax,0xcfe0702
  409774:	bswap  ebx
  409776:	jmp    DWORD PTR [esi]
  409778:	inc    edi
  409779:	sub    esi,esp
  40977b:	adc    DWORD PTR [eax],eax
  40977d:	add    BYTE PTR [eax],al
  40977f:	out    dx,al
  409780:	adc    al,BYTE PTR [ecx]
  409782:	add    ebx,esi
  409784:	adc    ecx,esi
  409786:	push   cs
  409787:	repz mov eax,ds:0x8e85f70f
  40978d:	test   BYTE PTR [eax],al
  40978f:	repz stc 
  409791:	mov    ds:0x8c3e0f66,al
  409796:	jge    0x40975f
  409798:	pop    ebp
  409799:	mov    al,ds:0xa837e76e
  40979e:	jo     0x40977c
  4097a0:	sbb    eax,0xadf30003
  4097a5:	xchg   BYTE PTR [edi-0x50997398],al
  4097ab:	repz fs mov ch,0x5b
  4097af:	mov    ah,0x64
  4097b1:	scas   eax,DWORD PTR es:[edi]
  4097b2:	dec    ebx
  4097b3:	cdq    
  4097b4:	push   ecx
  4097b5:	scas   eax,DWORD PTR es:[edi]
  4097b6:	jp     0x40977b
  4097b8:	jg     0x409743
  4097ba:	fs stos DWORD PTR es:[edi],eax
  4097bc:	jg     0x40974e
  4097be:	push   ebp
  4097bf:	(bad)  
  4097c0:	push   0xffffffbe
  4097c2:	push   ecx
  4097c3:	test   al,0x51
  4097c5:	rcl    BYTE PTR [ecx-0x6f],0x8d
  4097c9:	lahf   
  4097ca:	dec    DWORD PTR [eiz*2-0x6e748d6a]
  4097d1:	lahf   
  4097d2:	imul   edi,DWORD PTR [ebx-0x7c6dc0fa],0x52a556a0
  4097dc:	aaa    
  4097dd:	and    al,0xa5
  4097df:	push   edx
  4097e0:	outs   dx,BYTE PTR ds:[esi]
  4097e1:	jmp    0x4097e9
  4097e6:	repz push es
  4097e8:	repnz std 
  4097ea:	and    al,0x54
  4097ec:	xor    BYTE PTR [ebx+esi*8],al
  4097ef:	push   es
  4097f0:	push   ss
  4097f1:	mov    eax,0xc014502a
  4097f6:	and    DWORD PTR [esi+0x31],esp
  4097f9:	mov    ecx,0xb9372333
  4097fe:	inc    edi
  4097ff:	pop    es
  409800:	mov    edi,0x98f1a90a
  409805:	adc    bl,BYTE PTR [ebx-0x59ed7d01]
  40980b:	fld    QWORD PTR [ecx+0x42039516]
  409811:	sub    DWORD PTR [esi+0x7c1a76f0],ecx
  409817:	pop    es
  409818:	repz fcmovnb st,st(1)
  40981b:	push   es
  40981c:	mov    edx,0xe05ac3cb
  409821:	pop    es
  409822:	clc    
  409823:	push   es
  409824:	test   eax,0xc178e59c
  409829:	add    esi,ebx
  40982b:	push   es
  40982c:	xchg   edi,eax
  40982d:	pushf  
  40982e:	fbstp  TBYTE PTR [ecx-0x3e]
  409831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409832:	shl    DWORD PTR [ecx+ebp*4],0xa5
  409836:	mov    ebp,0xcaa1a675
  40983b:	sbb    al,0xb8
  40983e:	cdq    
  40983f:	push   0x798f8a90
  409844:	adc    ah,0xd9
  409847:	jg     0x4098c4
  409849:	xchg   edx,eax
  40984a:	add    BYTE PTR [eax],al
  40984c:	add    BYTE PTR [eax-0x144d5a83],ah
  409852:	cs add cl,ch
  409855:	pop    ebp
  409856:	push   es
  409857:	jmp    FWORD PTR [ebx]
  409859:	jnp    0x409839
  40985b:	sar    BYTE PTR [ecx-0x29],0x6
  40985f:	add    BYTE PTR [edi+0x2c],dh
  409862:	push   es
  409863:	jmp    0x40983e
  409865:	push   edx
  409866:	sar    DWORD PTR [ebp+0x74ec6],0xf2
  40986d:	aad    0xd
  40986f:	add    cl,ch
  409871:	lock push es
  409873:	add    BYTE PTR [edx],bh
  409875:	pop    esi
  409876:	jne    0x4098ef
  409878:	jmp    0xe8409f6d
  40987d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40987e:	cmp    esp,DWORD PTR ds:0x302bc6c8
  409884:	out    dx,eax
  409885:	sahf   
  409886:	cmp    bh,BYTE PTR ss:[ebp-0x32cdcb40]
  40988d:	mov    edi,0xa9ce1621
  409892:	and    eax,0x19b8b42a
  409897:	or     dh,BYTE PTR [edx+0x52843ad]
  40989d:	out    dx,al
  40989e:	sub    al,0x14
  4098a0:	in     eax,0xf4
  4098a2:	and    ebx,DWORD PTR [edx]
  4098a4:	std    
  4098a5:	dec    edi
  4098a6:	ss pop ss
  4098a8:	jecxz  0x4098f4
  4098aa:	adc    edx,DWORD PTR [ebx]
  4098ac:	out    dx,al
  4098ad:	pop    edi
  4098ae:	inc    ebp
  4098af:	xor    ch,dl
  4098b1:	add    BYTE PTR [eax],al
  4098b3:	add    BYTE PTR [ebx+0x15],al
  4098b6:	or     al,0xed
  4098b8:	inc    esp
  4098b9:	and    BYTE PTR ds:0x808f0f5,dh
  4098bf:	mov    BYTE PTR [edi+0x3a],dh
  4098c2:	fs jmp 0xac409fb8
  4098c8:	mov    esp,DWORD PTR [esi+0x64]
  4098cb:	jge    0x4098fd
  4098cd:	je     0x40993d
  4098cf:	add    BYTE PTR [edi-0x55],ah
  4098d2:	addr16 jle 0x4098ef
  4098d5:	or     DWORD PTR [eax],eax
  4098d7:	add    dh,bl
  4098d9:	sub    ebx,ebp
  4098db:	clc    
  4098dc:	push   cs
  4098dd:	push   ds
  4098de:	sti    
  4098df:	in     eax,dx
  4098e0:	xor    DWORD PTR [esi],edi
  4098e2:	in     al,dx
  4098e3:	out    0xcb,eax
  4098e5:	and    eax,0x1ec3eff2
  4098ea:	rcl    ebp,0xc7
  4098ed:	and    bh,ah
  4098ef:	jmp    0x1e64:0xb4e117b3
  4098f6:	loope  0x4098f4
  4098f8:	call   0xdb0e:0x85dec834
  4098ff:	sar    DWORD PTR [ebx+0x4b],0xc6
  409903:	fstp   QWORD PTR [edx-0x70fffff8]
  409909:	jmp    0x409934
  40990b:	sub    DWORD PTR [edx-0xde6d720],ebp
  409911:	or     al,BYTE PTR [eax]
  409913:	add    BYTE PTR [esp+ebp*2],bl
  409916:	test   al,0xaa
  409918:	add    BYTE PTR [eax],al
  40991a:	add    BYTE PTR [ecx],bh
  40991c:	pop    edi
  40991d:	test   eax,0xe4225900
  409922:	neg    DWORD PTR [ecx]
  409924:	sub    al,0xf4
  409926:	loop   0x40994e
  409928:	dec    esp
  409929:	jecxz  0x409913
  40992b:	mov    esp,0xc4e0fd25
  409930:	sub    al,0xce
  409932:	fidiv  DWORD PTR [eax+0x4e5f328]
  409938:	adc    al,0xee
  40993a:	mov    ebx,0xf3ee2ce3
  40993f:	fnsave [esi]
  409941:	(bad)  
  409942:	rcl    DWORD PTR [edx],1
  409944:	sbb    eax,0x48b1cece
  409949:	ret    
  40994a:	(bad)
  40994d:	sbb    bh,al
  40994f:	xor    BYTE PTR [edx],ch
  409951:	aaa    
  409952:	shl    bl,0x6a
  409955:	dec    eax
  409956:	lods   eax,DWORD PTR ds:[esi]
  409957:	dec    esp
  409958:	inc    esp
  409959:	sbb    BYTE PTR [eax+0x614f5b],bl
  40995f:	repz pop ss
  409961:	and    al,0xed
  409963:	cmc    
  409964:	out    0x18,eax
  409966:	std    
  409967:	fadd   st,st(2)
  409969:	cmp    dl,ch
  40996b:	shl    ah,cl
  40996d:	push   ds
  40996e:	hlt    
  40996f:	retf   0x17d4
  409972:	mov    eax,0xdffa1bc0
  409978:	les    edx,FWORD PTR [eax]
  40997a:	out    0x81,eax
  40997c:	popf   
  40997d:	pop    ss
  40997e:	out    0x0,eax
  409980:	add    BYTE PTR [eax],al
  409982:	mov    ecx,0x9bce2dab
  409987:	sahf   
  409988:	and    al,0xce
  40998a:	mov    ah,0xb4
  40998c:	add    eax,DWORD PTR [eax]
  40998e:	repz or eax,0x241771a3
  409994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409995:	pusha  
  409996:	sbb    al,0x9
  409998:	sar    BYTE PTR [edi+ecx*1],1
  40999b:	sbb    DWORD PTR [ebx-0x6df1e595],edx
  4099a1:	sub    BYTE PTR [esi],al
  4099a3:	sti    
  4099a4:	mov    ds:0x86e5fd70,eax
  4099a9:	and    ch,dl
  4099ab:	retf   
  4099ac:	lahf   
  4099ad:	ins    DWORD PTR es:[edi],dx
  4099ae:	jmp    0x7924f74
  4099b3:	repz repnz adc ah,bh
  4099b7:	mov    ebx,0xf9f615e8
  4099bc:	aam    0x4d
  4099be:	mov    edx,0xa577b0ad
  4099c3:	mov    al,ds:0x6e944bf
  4099c8:	idiv   BYTE PTR [ecx-0x5140ba31]
  4099ce:	mov    dh,0x5e
  4099d0:	xchg   edx,eax
  4099d1:	loop   0x4099a4
  4099d3:	cmp    ecx,edx
  4099d5:	(bad)  
  4099d7:	sub    BYTE PTR [edx-0x29],bh
  4099da:	into   
  4099db:	cmp    eax,0x807d8dbd
  4099e0:	jge    0x40997a
  4099e2:	js     0x409a33
  4099e4:	mov    ds:0x3,al
  4099e9:	repz push es
  4099eb:	mov    cl,0x3a
  4099ed:	leave  
  4099ee:	rol    esi,cl
  4099f0:	cmp    edi,DWORD PTR [edx-0x7998461e]
  4099f6:	fbstp  TBYTE PTR [edi+edi*1+0x42a5e4af]
  4099fd:	jb     0x4099d3
  4099ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a00:	inc    edx
  409a01:	mov    bl,0xc6
  409a03:	test   al,0x7d
  409a05:	mov    bh,0xd0
  409a07:	sahf   
  409a08:	ds test eax,0xa40cc5ca
  409a0e:	add    cl,BYTE PTR [esi+0x5def9f14]
  409a14:	dec    ebx
  409a15:	fs test eax,0x9f755e50
  409a1b:	or     BYTE PTR [edx],0x99
  409a1e:	add    edx,DWORD PTR [edi-0x760d75f5]
  409a24:	push   edi
  409a25:	push   esi
  409a26:	stc    
  409a27:	jns    0x409a45
  409a29:	jle    0x409a11
  409a2b:	xchg   BYTE PTR [eax+0x6873a442],al
  409a31:	mov    DWORD PTR [edi-0x5e68926e],ecx
  409a37:	fs jg  0x409ab6
  409a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a3b:	bound  eax,QWORD PTR [ebp-0x7d996bce]
  409a41:	jae    0x4099c9
  409a43:	jmp    FWORD PTR [eax-0x3f]
  409a46:	retf   
  409a47:	leave  
  409a48:	sub    BYTE PTR [edx-0x7b],dh
  409a4b:	lea    edx,[edi+0x0]
  409a4e:	add    BYTE PTR [eax],al
  409a50:	mov    edi,0xde35e4f8
  409a55:	mov    al,0xa8
  409a57:	pop    ecx
  409a58:	xchg   edx,eax
  409a59:	mov    fs,WORD PTR [ebp-0x6443cb6]
  409a5f:	push   ss
  409a60:	mov    ecx,0xb63dacac
  409a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a66:	mov    ebp,0xa6b6de35
  409a6b:	cmp    bl,BYTE PTR [edx-0x67c24c5e]
  409a71:	dec    ecx
  409a72:	push   edi
  409a73:	ss call 0x5257:0x9b355765
  409a7b:	cli    
  409a7c:	int3   
  409a7d:	adc    al,0x54
  409a7f:	xor    eax,0xe94b5db7
  409a84:	mov    edi,0x8219202b
  409a89:	inc    edi
  409a8a:	push   esp
  409a8b:	das    
  409a8c:	jg     0x409ae4
  409a8e:	inc    edi
  409a8f:	and    al,bl
  409a91:	inc    edx
  409a92:	ins    DWORD PTR es:[edi],dx
  409a93:	sbb    eax,0x15687376
  409a98:	push   edi
  409a99:	jae    0x409ad3
  409a9b:	pop    es
  409a9c:	and    BYTE PTR [esi+0x7c],0x1b
  409aa0:	jge    0x409b0d
  409aa2:	imul   edi,edi,0x51
  409aa5:	push   0x6d
  409aa7:	adc    ebx,DWORD PTR [eax+0x73]
  409aaa:	jle    0x409ab1
  409aac:	push   ebx
  409aad:	xor    dh,BYTE PTR [ecx-0x4]
  409ab0:	or     DWORD PTR [bx+di],esp
  409ab3:	test   DWORD PTR [eax],0x19620000
  409ab9:	pop    ds
  409aba:	mov    esi,0xf9105888
  409abf:	dec    esp
  409ac0:	add    DWORD PTR [esi],edx
  409ac2:	add    BYTE PTR [esi+0x266460b6],bl
  409ac8:	repnz or al,0x18
  409acb:	inc    eax
  409acc:	icebp  
  409acd:	adc    eax,DWORD PTR [ebx]
  409acf:	dec    ebp
  409ad0:	mov    ebp,0xce12113f
  409ad5:	sub    BYTE PTR [edx+ecx*2],ch
  409ad8:	fldenv [eax]
  409ada:	je     0x409b04
  409adc:	shl    BYTE PTR [ebx],1
  409ade:	cmp    BYTE PTR [edx+ebp*8],dh
  409ae1:	and    al,0x30
  409ae3:	cmp    ah,al
  409ae5:	cmp    DWORD PTR [ecx],edx
  409ae7:	cmp    ah,bh
  409ae9:	ss das 
  409aeb:	sub    al,0xd4
  409aed:	xor    esp,DWORD PTR [ebx]
  409aef:	imul   ebx,DWORD PTR [ecx+0x34b62461],0x8b6adbcc
  409af9:	mov    ch,0xb0
  409afb:	mov    al,BYTE PTR [edi-0x2e]
  409afe:	les    edx,FWORD PTR [esp+eax*2-0x7f7e283f]
  409b05:	(bad)  
  409b06:	fst    QWORD PTR [esi-0x692721bd]
  409b0c:	xor    al,0xde
  409b0e:	mov    BYTE PTR [ebp+eax*2-0x2f],bl
  409b12:	int3   
  409b13:	pop    eax
  409b14:	pop    ds
  409b15:	jmp    0xc5:0xef157efc
  409b1c:	add    BYTE PTR [eax],al
  409b1e:	xchg   BYTE PTR [edx],dl
  409b20:	in     al,0xf3
  409b22:	js     0x409b45
  409b24:	loope  0x409b1d
  409b26:	cmp    DWORD PTR [edi],ecx
  409b28:	out    0xe1,eax
  409b2a:	add    al,0x37
  409b2c:	in     al,0xe4
  409b2e:	ins    BYTE PTR es:[edi],dx
  409b2f:	and    eax,0x262baaa5
  409b34:	loop   0x409b24
  409b36:	in     al,0x6c
  409b38:	(bad)  
  409b39:	lds    edi,FWORD PTR [esi-0xcffffe7]
  409b3f:	fidiv  DWORD PTR [ebp+0x2edad5a]
  409b45:	add    bl,dh
  409b47:	mov    BYTE PTR [esi-0x5a],bh
  409b4a:	arpl   WORD PTR [eax+0x75],sp
  409b4d:	test   BYTE PTR [ebx+0x66],bl
  409b50:	ins    DWORD PTR es:[edi],dx
  409b51:	add    bl,dh
  409b53:	and    eax,0x232ef51c
  409b58:	adc    bh,bl
  409b5a:	imul   ecx,DWORD PTR [ebx],0x38f30003
  409b60:	daa    
  409b61:	ret    0x2c29
  409b64:	inc    ecx
  409b65:	int3   
  409b66:	sub    BYTE PTR [edi+0x38],dh
  409b69:	retf   
  409b6a:	ss out dx,al
  409b6c:	add    al,BYTE PTR [eax]
  409b6e:	repz push ecx
  409b70:	fs mov dh,0x53
  409b73:	cmc    
  409b74:	inc    edi
  409b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b76:	repz jo 0x409bd9
  409b79:	mov    dl,0x93
  409b7b:	mov    esp,DWORD PTR [edx-0x53]
  409b7e:	xor    BYTE PTR [ecx+0x5a],0xb2
  409b82:	add    BYTE PTR [eax],al
  409b84:	add    BYTE PTR [edi-0xc43a473],cl
  409b8a:	and    ebp,DWORD PTR [eax-0x6da8f391]
  409b90:	jae    0x409ba2
  409b92:	out    dx,al
  409b93:	add    al,BYTE PTR [eax]
  409b95:	repz cmp edx,DWORD PTR [edi-0x1700e595]
  409b9c:	dec    eax
  409b9d:	add    cl,bh
  409b9f:	mov    esp,0xfdeff00f
  409ba4:	adc    ebx,DWORD PTR [ecx]
  409ba6:	pmaxub mm4,QWORD PTR [ecx]
  409ba9:	repz adc BYTE PTR [ebx-0x46d10689],cl
  409bb0:	push   ebp
  409bb1:	sub    BYTE PTR ds:0x36f30004,bl
  409bb7:	dec    edx
  409bb8:	mov    ah,0x9e
  409bba:	push   es
  409bbb:	jno    0x409c29
  409bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bbe:	test   DWORD PTR [edx+0x7b],ebp
  409bc1:	jne    0x409b5b
  409bc3:	xor    BYTE PTR [eax-0x80],0x8f
  409bc7:	jbe    0x409c37
  409bc9:	repz push es
  409bcb:	add    eax,0xec2f03c7
  409bd0:	call   0xfa1fb9e2
  409bd5:	loopne 0x409bdd
  409bd7:	inc    esi
  409bd8:	and    BYTE PTR [ecx],bl
  409bda:	out    0x3e,eax
  409bdc:	ds pop ds
  409bde:	les    ebp,FWORD PTR [ebx]
  409be0:	xor    eax,0x5f4d062c
  409be5:	dec    edx
  409be6:	mov    dh,0x73
  409be8:	add    DWORD PTR [eax],0x944f0000
  409bee:	push   edi
  409bef:	ins    BYTE PTR es:[edi],dx
  409bf0:	dec    ebx
  409bf1:	xchg   esi,eax
  409bf2:	jb     0x409c48
  409bf4:	pop    ebp
  409bf5:	mov    al,ds:0x93647562
  409bfa:	dec    edi
  409bfb:	add    al,0xf3
  409bfd:	push   es
  409bfe:	dec    ebp
  409bff:	lea    ebp,[edx+0x7e]
  409c02:	sbb    ebx,esi
  409c04:	pop    ss
  409c05:	pop    es
  409c06:	jns    0x409c80
  409c08:	gs xchg edx,eax
  409c0a:	pop    ebp
  409c0b:	mov    ds:0xf303e8d7,al
  409c11:	push   es
  409c12:	imul   ebp,DWORD PTR [eax+0x5d],0xd307c9a2
  409c19:	std    
  409c1a:	call   0x35478f22
  409c1f:	lea    ebp,[ecx]
  409c21:	gs pop es
  409c23:	mov    dl,BYTE PTR [edx]
  409c25:	ja     0x409c34
  409c27:	xchg   esp,eax
  409c28:	push   es
  409c29:	jo     0x409c29
  409c2b:	add    esi,ebx
  409c2d:	push   es
  409c2e:	nop
  409c2f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409c31:	fsubr  QWORD PTR [ebx+0x7ac2a]
  409c37:	inc    ebp
  409c38:	cli    
  409c39:	xchg   ebx,eax
  409c3a:	xchg   edx,eax
  409c3b:	jmp    0xea40a330
  409c40:	xor    dh,BYTE PTR ds:[edi]
  409c43:	or     BYTE PTR [eax],bh
  409c45:	cmp    BYTE PTR [edx-0xb],ch
  409c48:	inc    eax
  409c49:	inc    eax
  409c4a:	cs jmp 0xf840a340
  409c50:	add    BYTE PTR [eax],al
  409c52:	add    BYTE PTR [esp+ebx*1+0x5],cl
  409c56:	fimul  DWORD PTR [edi-0x2]
  409c59:	push   esi
  409c5a:	dec    DWORD PTR [esi+0x14]
  409c5d:	push   ds
  409c5e:	jecxz  0x409c7d
  409c60:	(bad)  
  409c61:	(bad)  
  409c62:	sub    edx,ebp
  409c64:	ror    ch,cl
  409c66:	sub    eax,0x1fffc7b1
  409c6b:	(bad)  
  409c6c:	cld    
  409c6d:	out    dx,eax
  409c6e:	add    esi,esi
  409c70:	cld    
  409c71:	out    0x41,eax
  409c73:	mov    edi,0xedfff4ff
  409c78:	add    ah,bh
  409c7a:	add    esi,eax
  409c7c:	push   es
  409c7d:	add    BYTE PTR [ecx],ch
  409c7f:	push   es
  409c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c81:	(bad)  
  409c82:	retf   
  409c83:	pop    es
  409c84:	in     eax,0xe7
  409c86:	sar    esp,1
  409c88:	in     eax,0xae
  409c8a:	mov    edi,0xcde4effc
  409c8f:	test   DWORD PTR [esi],0x26682e00
  409c95:	inc    eax
  409c96:	inc    esp
  409c97:	data16 outs dx,WORD PTR ds:[esi]
  409c9a:	inc    esi
  409c9b:	xchg   ecx,eax
  409c9c:	pop    ebp
  409c9d:	sub    BYTE PTR [eax],bl
  409c9f:	mov    DWORD PTR [ebx+0x62],ebp
  409ca2:	and    al,ah
  409ca4:	push   ss
  409ca5:	pop    ss
  409ca6:	jmp    0xd540a39b
  409cab:	mov    esp,0x727afefd
  409cb0:	std    
  409cb1:	enter  0x4300,0x2
  409cb5:	add    BYTE PTR [eax],al
  409cb7:	add    BYTE PTR [eax],al
  409cb9:	add    BYTE PTR [ecx+0x2b],dl
  409cbc:	aad    0xdf
  409cbe:	dec    eax
  409cbf:	and    al,0xc0
  409cc1:	int3   
  409cc2:	pop    edx
  409cc3:	or     DWORD PTR [eax],eax
  409cc5:	add    bl,ah
  409cc7:	pusha  
  409cc8:	test   eax,0xe3517eae
  409ccd:	mov    ch,BYTE PTR [eax+ebp*2-0x53]
  409cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd2:	iret   
  409cd3:	pop    edi
  409cd4:	mov    eax,ds:0x53ab8700
  409cd9:	push   edx
  409cda:	mov    bh,BYTE PTR [ebp+ebx*1+0x4fa35876]
  409ce1:	pop    ebx
  409ce2:	mov    ebp,DWORD PTR [edx-0x4ae9fea5]
  409ce8:	inc    eax
  409ce9:	inc    edx
  409cea:	dec    esp
  409ceb:	lods   al,BYTE PTR ds:[esi]
  409cec:	dec    ecx
  409ced:	push   edi
  409cee:	push   edi
  409cef:	jmp    0x44fe9d16
  409cf4:	mov    eax,0xbb5cb3a0
  409cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cfa:	mov    BYTE PTR [edx+eiz*4-0xd],0xa
  409cff:	or     DWORD PTR [eax],eax
  409d01:	add    BYTE PTR [ebp+0x29241fe6],bl
  409d07:	test   BYTE PTR [edx],0x4
  409d0a:	in     eax,0xef
  409d0c:	adc    DWORD PTR [eax],ecx
  409d0e:	fdiv   st,st(1)
  409d10:	push   ss
  409d11:	or     al,0xac
  409d13:	add    DWORD PTR [edx],ecx
  409d15:	inc    esp
  409d16:	add    edx,edi
  409d18:	or     eax,0x6feca03
  409d1d:	or     BYTE PTR [eax],al
  409d1f:	add    BYTE PTR [eax],al
  409d21:	or     BYTE PTR [ebx-0x5b69b2b9],dh
  409d27:	(bad)  
  409d28:	(bad)  
  409d29:	std    
  409d2a:	cwde   
  409d2b:	outs   dx,DWORD PTR ds:[esi]
  409d2c:	je     0x409cb7
  409d2e:	(bad)  
  409d2f:	push   edx
  409d30:	push   esp
  409d31:	repz sub al,0xb9
  409d34:	inc    edx
  409d35:	sub    esi,DWORD PTR [eax]
  409d37:	mov    ebx,0xab242747
  409d3c:	pop    edx
  409d3d:	in     eax,dx
  409d3e:	loopne 0x409cfb
  409d40:	inc    ecx
  409d41:	push   ds
  409d42:	and    esi,DWORD PTR [ebx+ebx*2+0x1afd0bc2]
  409d49:	push   es
  409d4a:	fcmovu st,st(6)
  409d4c:	sub    BYTE PTR [edi],dl
  409d4e:	loope  0x409cef
  409d50:	jno    0x409d32
  409d52:	aad    0xa1
  409d54:	jle    0x409d31
  409d56:	adc    ebx,esp
  409d58:	sub    ecx,eax
  409d5a:	cli    
  409d5b:	out    0xff,al
  409d5d:	cmp    al,0x26
  409d5f:	cmp    ecx,ebx
  409d61:	sbb    eax,0x39de241a
  409d66:	push   ss
  409d67:	and    al,0xdd
  409d69:	xchg   BYTE PTR [ebx],dh
  409d6b:	push   0xffffffc0
  409d6d:	xor    bh,BYTE PTR [esi+edi*2]
  409d70:	int    0x2e
  409d72:	xor    eax,0x41288242
  409d77:	aaa    
  409d78:	(bad)  
  409d79:	aaa    
  409d7a:	sub    al,0x38
  409d7c:	ret    
  409d7d:	xor    bl,bh
  409d7f:	add    DWORD PTR [eax],eax
  409d81:	repz jno 0x409d7f
  409d84:	arpl   WORD PTR [eax],ax
  409d86:	add    BYTE PTR [eax],al
  409d88:	push   edi
  409d89:	out    dx,al
  409d8a:	add    al,BYTE PTR [eax]
  409d8c:	repz loope 0x409d71
  409d8f:	fstp   TBYTE PTR [eax-0x2b6a304a]
  409d95:	mov    eax,0xb5a1d7da
  409d9a:	loope  0x409d6f
  409d9c:	jnp    0x409e10
  409d9e:	iret   
  409d9f:	aam    0xb4
  409da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da2:	xchg   DWORD PTR [edx-0x353a525b],ecx
  409da8:	mov    ah,0x92
  409daa:	enter  0x5bad,0x6
  409dae:	jmp    0x14790b6
  409db3:	cmp    esp,ebx
  409db5:	sub    dl,bl
  409db7:	xor    ebx,edx
  409db9:	jne    0x409da1
  409dbb:	shl    BYTE PTR cs:[ecx],cl
  409dbe:	adc    al,0x7a
  409dc0:	add    esp,DWORD PTR [edi+eiz*1]
  409dc3:	inc    esp
  409dc4:	repz push es
  409dc6:	lods   al,BYTE PTR ds:[esi]
  409dc7:	rcl    BYTE PTR [edi-0x7358c150],cl
  409dcd:	mov    ds:0xfb5cca8f,eax
  409dd2:	push   ebp
  409dd3:	lea    eax,[ebx+0x789b7d91]
  409dd9:	xchg   edx,eax
  409dda:	dec    ebp
  409ddb:	add    al,0xf3
  409ddd:	push   es
  409dde:	loopne 0x409e5a
  409de0:	mov    edi,0xd472ca66
  409de5:	push   es
  409de6:	cmp    al,0xa6
  409de8:	and    eax,0x8b0ea6
  409ded:	add    BYTE PTR [eax],al
  409def:	popa   
  409df0:	mov    ch,0x63
  409df2:	scas   eax,DWORD PTR es:[edi]
  409df3:	pop    ebp
  409df4:	lods   eax,DWORD PTR ds:[esi]
  409df5:	push   es
  409df6:	add    DWORD PTR [eax],ebx
  409df8:	mov    ah,BYTE PTR [edx]
  409dfa:	cwde   
  409dfb:	inc    ebx
  409dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfd:	push   esi
  409dfe:	jmp    0xc0814b58
  409e03:	ds cmc 
  409e05:	or     al,0xec
  409e07:	aaa    
  409e08:	rcr    DWORD PTR [ebx],0x86
  409e0b:	xchg   edx,eax
  409e0c:	mov    ebx,0x96bea545
  409e11:	jg     0x409da3
  409e13:	jns    0x409ddd
  409e15:	(bad)  
  409e16:	cli    
  409e17:	mov    ecx,0xf303e8ab
  409e1c:	push   es
  409e1d:	add    DWORD PTR [edx],ebp
  409e1f:	mov    db7,ebp
  409e22:	and    al,0x13
  409e24:	ds sti 
  409e26:	add    esi,ebx
  409e28:	push   es
  409e29:	add    BYTE PTR [ebx+0x73],cl
  409e2c:	addr16 and ch,cl
  409e2f:	lock push es
  409e31:	add    bl,dl
  409e33:	fistp  QWORD PTR [eax]
  409e35:	add    BYTE PTR [edx-0x4b263394],bh
  409e3b:	stos   BYTE PTR es:[edi],al
  409e3c:	test   edx,ecx
  409e3e:	mov    dl,0x74
  409e40:	mov    esi,0xfaa470d7
  409e45:	(bad)  
  409e46:	out    0x1a,al
  409e48:	sbb    al,0x4
  409e4a:	sbb    al,0xd
  409e4c:	or     BYTE PTR [esi-0x17],dl
  409e4f:	lock push es
  409e51:	add    BYTE PTR [edi+0x2e000000],ah
  409e57:	stos   DWORD PTR es:[edi],eax
  409e58:	mov    al,ds:0x6f0e9
  409e5d:	sub    DWORD PTR [edx+ebx*4],0xdd677495
  409e64:	mov    ebp,0x6f091
  409e69:	add    al,BYTE PTR [ebx+edi*1]
  409e6c:	dec    ebp
  409e6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6e:	rol    BYTE PTR [esi],cl
  409e70:	add    dl,cl
  409e72:	stos   DWORD PTR es:[edi],eax
  409e73:	arpl   WORD PTR [edi+edi*8],dx
  409e76:	test   eax,0x8d9f0006
  409e7b:	gs ror sp,0x39
  409e80:	xor    al,0x7c
  409e82:	rol    BYTE PTR [esi],0x0
  409e85:	jmp    0x409e4f
  409e87:	cs and al,0xc9
  409e8a:	les    ebx,FWORD PTR [ecx]
  409e8c:	addr16 je 0x409ef3
  409e8f:	adc    ch,BYTE PTR [ebx+0x70]
  409e92:	pusha  
  409e93:	push   ss
  409e94:	outs   dx,DWORD PTR ds:[esi]
  409e95:	dec    esp
  409e96:	arpl   WORD PTR [edx],cx
  409e98:	add    bh,ch
  409e9a:	sti    
  409e9b:	pop    ds
  409e9c:	add    BYTE PTR [ebp+0x68],ch
  409e9f:	xchg   ebx,eax
  409ea0:	sahf   
  409ea1:	imul   ebp,edi,0x21000006
  409ea7:	jne    0x409f0f
  409ea9:	jb     0x409ea2
  409eab:	inc    esi
  409eac:	add    BYTE PTR [eax],al
  409eae:	cmp    bh,BYTE PTR [edi+0x7f]
  409eb1:	ds in  eax,0x61
  409eb4:	jae    0x409f30
  409eb6:	mov    edi,0x5
  409ebb:	add    BYTE PTR [eax],al
  409ebd:	out    0x69,al
  409ebf:	imul   edi,DWORD PTR [ecx-0x4],0x98081378
  409ec6:	jo     0x409ef7
  409ec8:	jo     0x409ea5
  409eca:	inc    ebx
  409ecb:	push   edx
  409ecc:	dec    eax
  409ecd:	(bad)  
  409ece:	daa    
  409ecf:	sbb    BYTE PTR [edi+0x5a],ch
  409ed2:	add    eax,0x94830000
  409ed7:	rcr    edx,0xe1
  409eda:	rcr    al,0x8b
  409edd:	fild   WORD PTR [ebp-0x36fa3564]
  409ee3:	(bad)  
  409ee4:	call   DWORD PTR [edi+0x26]
  409ee7:	and    edx,DWORD PTR ds:0x51b
  409eed:	in     al,dx
  409eee:	cs pop ds
  409ef0:	add    dl,BYTE PTR [edx]
  409ef2:	add    eax,0x86380000
  409ef7:	jnp    0x409f72
  409ef9:	push   edi
  409efa:	xor    BYTE PTR [ebx],ah
  409efc:	and    al,BYTE PTR [edx+0x29]
  409eff:	arpl   WORD PTR gs:[edi+0x5d],di
  409f03:	popa   
  409f04:	arpl   WORD PTR [bp+di],bp
  409f07:	and    DWORD PTR [edi],ebp
  409f09:	and    eax,0x7b7f7935
  409f0e:	and    ebp,DWORD PTR [ecx]
  409f10:	daa    
  409f11:	mov    ebp,0x8066753d
  409f16:	add    eax,0x41217b15
  409f1b:	inc    ebx
  409f1c:	pop    ecx
  409f1d:	or     eax,0x464f76
  409f22:	add    BYTE PTR [eax],al
  409f24:	repz es dec ebx
  409f27:	push   cs
  409f28:	repz jo 0x409ec1
  409f2b:	test   al,0x5c
  409f2d:	add    eax,DWORD PTR gs:[eax]
  409f30:	repz jl 0x409ee4
  409f33:	lods   al,BYTE PTR ds:[esi]
  409f34:	pop    ebx
  409f35:	and    dh,0xf1
  409f38:	mov    al,ds:0x56b1b78e
  409f3d:	dec    ebx
  409f3e:	mov    ah,0xba
  409f40:	push   ebx
  409f41:	addr16 mov ah,0xa9
  409f44:	push   esp
  409f45:	push   ebx
  409f46:	shl    edx,0x8d
  409f49:	jp     0x409ecf
  409f4b:	mov    bl,0x47
  409f4d:	push   ecx
  409f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4f:	stos   BYTE PTR es:[edi],al
  409f50:	inc    ebx
  409f51:	pop    esp
  409f52:	call   0x4092:0x92587f97
  409f59:	addr16 xchg ebx,eax
  409f5b:	xchg   esi,eax
  409f5c:	cmp    al,0x80
  409f5e:	call   0x7fc2:0xd67d8290
  409f65:	outs   dx,BYTE PTR ds:[esi]
  409f66:	test   BYTE PTR [ebx-0x7b53a492],cl
  409f6c:	push   ds
  409f6d:	xor    eax,DWORD PTR [ebx]
  409f6f:	add    bl,dh
  409f71:	test   al,0xf7
  409f73:	inc    eax
  409f74:	repz mov dh,0x48
  409f77:	inc    edx
  409f78:	repz test eax,0xa1f34248
  409f7e:	dec    eax
  409f7f:	inc    edx
  409f80:	repz cdq 
  409f82:	dec    eax
  409f83:	inc    edx
  409f84:	repz xchg esi,eax
  409f86:	dec    eax
  409f87:	inc    edx
  409f88:	add    BYTE PTR [eax],al
  409f8a:	add    bl,dh
  409f8c:	div    edi
  409f8e:	inc    eax
  409f8f:	repz fcomip st,st(7)
  409f92:	inc    eax
  409f93:	repz aam 0xf7
  409f96:	inc    eax
  409f97:	repz mov eax,DWORD PTR [edx]
  409f9a:	arpl   bx,si
  409f9c:	in     eax,dx
  409f9d:	add    al,BYTE PTR [eax]
  409f9f:	repz push es
  409fa1:	sub    BYTE PTR [edx+0x30],al
  409fa4:	inc    ebx
  409fa5:	and    al,0x46
  409fa7:	xor    al,0x4f
  409fa9:	and    BYTE PTR [edx+0x38],cl
  409fac:	dec    ebx
  409fad:	sbb    al,0x4e
  409faf:	sub    al,0x57
  409fb1:	sbb    BYTE PTR [edx+0x20],dl
  409fb4:	push   ebx
  409fb5:	adc    al,0x56
  409fb7:	inc    esp
  409fb8:	pop    edi
  409fb9:	adc    BYTE PTR [edx+0x12],bl
  409fbc:	gs dec edx
  409fbe:	push   0x6c0e6116
  409fc3:	or     ch,BYTE PTR [ebp+0x12]
  409fc6:	jo     0x409fe6
  409fc8:	imul   eax,DWORD PTR [esi],0x1a750274
  409fce:	js     0x409fd6
  409fd0:	jno    0x409fd0
  409fd2:	jnp    0x409fce
  409fd4:	jl     0x409f8f
  409fd6:	xor    al,0x21
  409fd8:	xor    al,0xbd
  409fda:	cmp    BYTE PTR ds:0x83cb130,bl
  409fe0:	sub    cl,ch
  409fe2:	add    esi,ebx
  409fe4:	push   es
  409fe5:	jmp    0xd54792ed
  409fea:	daa    
  409feb:	mov    db1,esp
  409fee:	jno    0x409ff0
  409ff0:	add    BYTE PTR [eax],al
  409ff2:	shl    BYTE PTR [edx-0x44],0x75
  409ff6:	mov    esp,0xa879c07e
  409ffb:	and    cl,BYTE PTR ds:0x522cf28
  40a001:	sub    ch,bl
  40a003:	aaa    
  40a004:	test   eax,0xa543b144
  40a009:	dec    eax
  40a00a:	mov    ch,0x3f
  40a00c:	mov    eax,ds:0x9d4bb94c
  40a011:	push   eax
  40a012:	lods   eax,DWORD PTR ds:[esi]
  40a013:	inc    edi
  40a014:	cdq    
  40a015:	push   esp
  40a016:	mov    eax,ds:0x45589553
  40a01b:	pop    esi
  40a01c:	add    ch,cl
  40a01e:	or     al,0x2b
  40a020:	and    al,0xc5
  40a022:	adc    al,0x4f
  40a024:	pop    ecx
  40a025:	inc    ebx
  40a026:	cmp    BYTE PTR [ebx+0x5d],dl
  40a029:	aas    
  40a02a:	sub    al,0x67
  40a02c:	popa   
  40a02d:	dec    ebx
  40a02e:	push   eax
  40a02f:	imul   esp,DWORD PTR [ebp+0x47],0x54
  40a033:	pop    edi
  40a034:	imul   edx,DWORD PTR [ebx+0x48],0x1c4f6d63
  40a03b:	ja     0x40a0ae
  40a03d:	jmp    0x540a732
  40a042:	cmp    al,0x57
  40a044:	push   edx
  40a045:	ss aaa 
  40a047:	push   eax
  40a048:	pop    edi
  40a049:	cmp    bh,BYTE PTR [edx]
  40a04b:	pop    ecx
  40a04c:	push   esi
  40a04d:	sub    al,0x21
  40a04f:	push   esi
  40a050:	dec    eax
  40a051:	push   ds
  40a052:	and    BYTE PTR [ebx+0x5f],bl
  40a055:	int    0x0
  40a057:	add    BYTE PTR [eax],al
  40a059:	lock push es
  40a05b:	add    BYTE PTR [eax],dl
  40a05d:	frstor [eax+0x65]
  40a060:	or     ch,bl
  40a062:	push   es
  40a063:	add    BYTE PTR [edx-0x2dffb6e9],al
  40a069:	adc    cl,BYTE PTR [ecx+0x0]
  40a06c:	test   DWORD PTR [edx],edx
  40a06e:	dec    ecx
  40a06f:	add    BYTE PTR [edx+0x12],dl
  40a072:	dec    ecx
  40a073:	add    BYTE PTR [ebx+0x14004911],bl
  40a079:	out    dx,eax
  40a07a:	jl     0x40a07c
  40a07c:	jmp    0x6540a771
  40a081:	xchg   BYTE PTR [esi],dh
  40a083:	add    BYTE PTR [ebx-0x20],bl
  40a086:	dec    eax
  40a087:	add    BYTE PTR [eax+eiz*8+0x48],dl
  40a08b:	add    BYTE PTR [ebp-0x23],al
  40a08e:	dec    eax
  40a08f:	add    BYTE PTR [eax],cl
  40a091:	aad    0x48
  40a093:	add    BYTE PTR [edx+0x48c0],cl
  40a099:	xchg   BYTE PTR [ecx],bh
  40a09b:	inc    edx
  40a09c:	add    BYTE PTR [ebp-0x62ffffa3],ch
  40a0a2:	push   ebp
  40a0a3:	inc    ebx
  40a0a4:	add    BYTE PTR [ebp+0x29000042],cl
  40a0aa:	or     esp,DWORD PTR [ecx+0x0]
  40a0ad:	cmp    BYTE PTR [ebx],cl
  40a0af:	imul   eax,DWORD PTR [eax],0x650b2c
  40a0b5:	or     ebp,DWORD PTR es:[esi]
  40a0b8:	add    BYTE PTR [esi],ah
  40a0ba:	or     ebp,DWORD PTR [eax+eax*1+0x0]
  40a0be:	add    BYTE PTR [eax],al
  40a0c0:	or     eax,DWORD PTR ds:[eax]
  40a0c3:	add    ah,dl
  40a0c5:	inc    edi
  40a0c6:	dec    ecx
  40a0c7:	inc    ebx
  40a0c8:	fsubr  DWORD PTR [ebp+0x61]
  40a0cb:	je     0x40a0b4
  40a0cd:	or     al,BYTE PTR [eax]
  40a0cf:	add    ah,dl
  40a0d1:	inc    edi
  40a0d2:	dec    ecx
  40a0d3:	inc    ecx
  40a0d4:	neg    BYTE PTR [esi+0x46]
  40a0d7:	imul   edi,DWORD PTR [esi+0x6c],0x47c40000
  40a0de:	dec    ecx
  40a0df:	inc    esi
  40a0e0:	(bad)  
  40a0e1:	jge    0x40a156
  40a0e3:	push   0x69626a19
  40a0e8:	pop    esp
  40a0e9:	ins    BYTE PTR es:[edi],dx
  40a0ea:	je     0x40a0ec
  40a0ec:	test   BYTE PTR [esi+0x49],al
  40a0ef:	inc    esp
  40a0f0:	aaa    
  40a0f1:	jbe    0x40a167
  40a0f3:	jb     0x40a122
  40a0f5:	jo     0x40a0f7
  40a0f7:	add    dl,al
  40a0f9:	clc    
  40a0fa:	add    BYTE PTR ds:[edx-0x1effbdba],bl
  40a101:	hlt    
  40a102:	add    BYTE PTR ds:[esi+0x4c003e94],cl
  40a109:	repz inc eax
  40a10b:	add    BYTE PTR [ebx+esi*8+0x40],cl
  40a10f:	add    BYTE PTR [ebx+0x4b],dl
  40a112:	inc    edx
  40a113:	add    bl,dh
  40a115:	fwait
  40a116:	inc    esp
  40a117:	inc    edx
  40a118:	repz add DWORD PTR [edx+eax*2-0xd],0xffffff8b
  40a11e:	inc    esp
  40a11f:	inc    edx
  40a120:	xrelease xchg BYTE PTR [edx+eax*2+0x0],al
  40a125:	add    BYTE PTR [eax],al
  40a127:	repz jns 0x40a16f
  40a12a:	inc    edx
  40a12b:	repz jbe 0x40a173
  40a12e:	inc    edx
  40a12f:	repz dec edx
  40a131:	inc    esi
  40a132:	inc    edx
  40a133:	repz aas 
  40a135:	popa   
  40a136:	fs dec ebp
  40a138:	inc    ebp
  40a139:	ins    BYTE PTR es:[edi],dx
  40a13a:	push   0x48
  40a13c:	xor    ch,BYTE PTR [edi+0x6e]
  40a13f:	inc    ebx
  40a140:	das    
  40a141:	jb     0x40a1b6
  40a143:	daa    
  40a144:	cmp    al,0x75
  40a146:	js     0x40a171
  40a148:	aas    
  40a149:	imul   ecx,DWORD PTR [si],0xf3007b3b
  40a150:	test   eax,esi
  40a152:	aas    
  40a153:	repz cmp DWORD PTR [ebx+0x42],edx
  40a157:	repz test al,0xfc
  40a15a:	aas    
  40a15b:	repz adc al,BYTE PTR [ecx+ebx*2]
  40a15f:	repz fld QWORD PTR [edx]
  40a162:	add    bl,dh
  40a164:	ret    
  40a165:	add    dh,BYTE PTR [ebx+esi*8-0xb]
  40a169:	add    dh,BYTE PTR [ebx+esi*8-0x23]
  40a16d:	add    al,BYTE PTR [eax]
  40a16f:	repz sbb al,0x65
  40a172:	inc    edx
  40a173:	repz mov esp,0xa9f35102
  40a179:	add    al,BYTE PTR [eax]
  40a17b:	repz call 0x5c04:0x7f34263
  40a183:	repz fld QWORD PTR [edx]
  40a186:	add    bl,dh
  40a188:	jg     0x40a18c
  40a18a:	mov    ds:0xf3000000,eax
  40a18f:	mov    DWORD PTR [edx],eax
  40a191:	add    bl,dh
  40a193:	push   es
  40a194:	lea    eax,[ebx]
  40a196:	call   0x8506:0x83039a06
  40a19d:	add    edx,DWORD PTR [edx-0x5afc6ffa]
  40a1a3:	push   es
  40a1a4:	mov    BYTE PTR [ebx],al
  40a1a6:	pop    esi
  40a1a7:	pop    es
  40a1a8:	test   BYTE PTR [ebx],al
  40a1aa:	repz push es
  40a1ac:	scas   al,BYTE PTR es:[edi]
  40a1ad:	addr16 push di
  40a1b0:	jnp    0x40a21e
  40a1b2:	dec    edi
  40a1b3:	jp     0x40a1ff
  40a1b5:	jo     0x40a1f1
  40a1b7:	gs inc edi
  40a1b9:	imul   esi,ebx,0x6
  40a1bc:	mov    ecx,0x3907317d
  40a1c1:	add    al,0x41
  40a1c3:	pop    es
  40a1c4:	push   esi
  40a1c5:	add    al,0x1b
  40a1c7:	pop    es
  40a1c8:	push   eax
  40a1c9:	add    al,0x11
  40a1cb:	pop    es
  40a1cc:	inc    eax
  40a1cd:	add    al,0x27
  40a1cf:	pop    es
  40a1d0:	and    eax,0x2d073f04
  40a1d5:	add    al,0xf3
  40a1d7:	push   es
  40a1d8:	push   es
  40a1d9:	pusha  
  40a1da:	sbb    dh,BYTE PTR [edi+0x5]
  40a1dd:	jno    0x40a1df
  40a1df:	and    eax,0x7076805
  40a1e4:	cs pusha 
  40a1e6:	fidiv  DWORD PTR [esi+0xd]
  40a1e9:	jno    0x40a1cb
  40a1eb:	push   edi
  40a1ec:	std    
  40a1ed:	fs loope 0x40a26a
  40a1f0:	hlt    
  40a1f1:	jae    0x40a1f3
  40a1f3:	add    BYTE PTR [eax],al
  40a1f5:	repz push es
  40a1f7:	scas   al,BYTE PTR es:[edi]
  40a1f8:	pop    edi
  40a1f9:	fidiv  DWORD PTR [esi-0x33]
  40a1fc:	jo     0x40a1be
  40a1fe:	push   edi
  40a1ff:	shl    DWORD PTR [eax-0x39],0x6a
  40a203:	mov    esi,0xae06c572
  40a208:	pop    edi
  40a209:	call   0x65:0x8e75aa76
  40a210:	mov    ebp,0xb5694893
  40a215:	mov    esp,DWORD PTR [ebp+0x70]
  40a218:	scas   eax,DWORD PTR es:[edi]
  40a219:	xchg   BYTE PTR [ebx+0x6d],ah
  40a21c:	mov    cl,0xae
  40a21e:	cmp    eax,0x56b7a454
  40a223:	add    BYTE PTR [esi-0x528fa26c],ah
  40a229:	pop    edi
  40a22a:	jbe    0x40a29c
  40a22c:	mov    ds,WORD PTR [ebp+0x6c]
  40a22f:	dec    ecx
  40a230:	test   BYTE PTR [edi+0x6a],dl
  40a233:	gs jmp 0x2e40a929
  40a239:	push   ebx
  40a23a:	pusha  
  40a23b:	jo     0x40a263
  40a23d:	push   edx
  40a23e:	jnp    0x40a289
  40a240:	inc    esp
  40a241:	push   esi
  40a242:	push   0x65
  40a244:	and    al,0x49
  40a246:	outs   dx,WORD PTR ds:[esi]
  40a248:	dec    ebp
  40a249:	adc    dh,BYTE PTR [ebp+0x73]
  40a24c:	sbb    dl,BYTE PTR [esi]
  40a24e:	ins    DWORD PTR es:[edi],dx
  40a24f:	gs jmp 0x2640a945
  40a255:	adc    esp,DWORD PTR [eax+0x70]
  40a258:	add    BYTE PTR cs:[eax],al
  40a25b:	add    BYTE PTR [edx],dl
  40a25d:	jnp    0x40a2a8
  40a25f:	or     al,0xe
  40a261:	push   0x65
  40a263:	sub    al,0x9
  40a265:	outs   dx,WORD PTR ds:[esi]
  40a267:	add    eax,0xe9737512
  40a26c:	lock push es
  40a26e:	add    BYTE PTR [esi],ah
  40a270:	rcr    DWORD PTR [edi+0x70],cl
  40a273:	sbb    dl,dh
  40a275:	js     0x40a2dc
  40a277:	and    dl,cl
  40a279:	addr16 addr16 int3 
  40a27c:	mov    esp,0xbed55361
  40a281:	imul   esp,DWORD PTR [ecx-0x3c],0xfffffff0
  40a285:	push   es
  40a286:	add    BYTE PTR [esp+edx*1+0x60001d4d],dl
  40a28d:	hlt    
  40a28e:	sub    eax,DWORD PTR [ebp-0x3a]
  40a291:	into   
  40a292:	pop    ebx
  40a293:	mov    bl,0x7b
  40a295:	pop    es
  40a296:	out    0xeb,eax
  40a298:	in     al,0x88
  40a29a:	inc    eax
  40a29b:	add    BYTE PTR [edi+0x72],ah
  40a29e:	inc    ecx
  40a29f:	add    BYTE PTR [ecx+0x72],ch
  40a2a2:	inc    ecx
  40a2a3:	add    BYTE PTR [ebx],bl
  40a2a5:	xchg   DWORD PTR [eax+0x0],eax
  40a2a8:	mov    edx,cs
  40a2aa:	inc    eax
  40a2ab:	add    BYTE PTR [esi+eax*4+0x40],bh
  40a2af:	add    BYTE PTR [eax],cl
  40a2b1:	xchg   DWORD PTR [eax+0x0],eax
  40a2b4:	pop    ebx
  40a2b5:	retf   
  40a2b6:	inc    eax
  40a2b7:	add    BYTE PTR [ebx+ecx*8+0x40],cl
  40a2bb:	add    BYTE PTR [ecx+0x72],cl
  40a2be:	inc    ecx
  40a2bf:	add    BYTE PTR [eax],al
  40a2c1:	add    BYTE PTR [eax],al
  40a2c3:	jmp    0x6440e353
  40a2c8:	mov    eax,DWORD PTR [eax+0x0]
  40a2cb:	xchg   ecx,eax
  40a2cc:	in     al,dx
  40a2cd:	ds add dh,bl
  40a2d0:	or     cl,BYTE PTR [ecx+0x0]
  40a2d3:	or     DWORD PTR [ebx],ecx
  40a2d5:	push   eax
  40a2d6:	add    dh,dl
  40a2d8:	or     al,BYTE PTR [ecx+0x0]
  40a2db:	add    ecx,DWORD PTR [ebx]
  40a2dd:	add    BYTE PTR [eax],al
  40a2df:	or     ah,BYTE PTR [esi]
  40a2e1:	add    BYTE PTR [eax],al
  40a2e3:	mov    edx,0xb7000005
  40a2e8:	add    eax,0x58a006d
  40a2ed:	add    BYTE PTR [eax],al
  40a2ef:	cmp    al,BYTE PTR ds:0xaec002d
  40a2f5:	add    BYTE PTR [eax],al
  40a2f7:	aaa    
  40a2f8:	add    eax,0x52f006d
  40a2fd:	jo     0x40a2ff
  40a2ff:	dec    DWORD PTR [edx]
  40a301:	jae    0x40a303
  40a303:	pop    edx
  40a304:	add    eax,0xd3f30000
  40a309:	add    ch,BYTE PTR [ebp-0xd]
  40a30c:	iret   
  40a30d:	add    al,BYTE PTR [eax]
  40a30f:	repz mov WORD PTR [edx+0x47],cs
  40a313:	mov    ?,WORD PTR [ebx-0x4f7391b5]
  40a319:	push   0x5eb38446
  40a31e:	sub    DWORD PTR gs:[edi-0x20648b9f],0x2
  40a329:	add    bl,dh
  40a32b:	lds    eax,FWORD PTR [edx]
  40a32d:	add    bl,dh
  40a32f:	retf   0x7302
  40a332:	repz ret 0x3002
  40a336:	repz lds eax,FWORD PTR [edx]
  40a339:	js     0x40a32e
  40a33b:	mov    DWORD PTR [edx],0x36cf325
  40a341:	add    bl,dh
  40a343:	add    al,BYTE PTR [ebx+esi*2]
  40a346:	repz or al,BYTE PTR [eax+esi*1]
  40a34a:	repz adc eax,0xddf37804
  40a350:	add    al,BYTE PTR [eax]
  40a352:	repz out dx,al
  40a354:	sub    BYTE PTR [edx],dh
  40a356:	aad    0xfa
  40a358:	add    al,BYTE PTR [eax]
  40a35a:	repz ds push 0x20
  40a35e:	push   ds
  40a35f:	xor    BYTE PTR [ebp+0x6e],ch
  40a362:	sbb    al,0x11
  40a364:	push   0x20
  40a366:	push   cs
  40a367:	or     al,0x76
  40a369:	outs   dx,DWORD PTR ds:[esi]
  40a36a:	add    DWORD PTR [esi+0x1b106367],edi
  40a370:	jbe    0x40a3e4
  40a372:	(bad)  
  40a373:	add    DWORD PTR [eax+eax*1],eax
  40a376:	repz xor eax,0x12bc4554
  40a37c:	dec    edx
  40a37d:	dec    ebx
  40a37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37f:	adc    BYTE PTR [ecx+0x4e],dl
  40a382:	repz push es
  40a384:	fldenv [edx-0x3f]
  40a387:	jae    0x40a34d
  40a389:	jne    0x40a39e
  40a38b:	pop    esi
  40a38c:	fisub  DWORD PTR [ebx]
  40a38e:	add    BYTE PTR [eax],al
  40a390:	add    bl,al
  40a392:	gs aam 0x74
  40a395:	xchg   esi,eax
  40a396:	push   0xffffffe9
  40a398:	add    esi,ebx
  40a39a:	push   es
  40a39b:	mov    cl,0x53
  40a39d:	mov    dh,0x4f
  40a39f:	cdq    
  40a3a0:	inc    edx
  40a3a1:	mov    esi,0xf33fa453
  40a3a6:	push   es
  40a3a7:	call   0xd36f:0x8a5d816f
  40a3ae:	popa   
  40a3af:	xchg   BYTE PTR [edi-0x72],bl
  40a3b2:	mov    BYTE PTR es:[eax+eiz*2+0x6a],dh
  40a3b7:	jnp    0x40a428
  40a3b9:	pop    edx
  40a3ba:	pusha  
  40a3bb:	(bad)  
  40a3bc:	and    edx,DWORD PTR [ebp+0x66]
  40a3bf:	and    BYTE PTR [edi+0x4e],0x6b
  40a3c3:	jmp    0x314796cb
  40a3c8:	push   esp
  40a3c9:	cs push eax
  40a3cb:	cmp    dl,BYTE PTR [eax+0x21]
  40a3ce:	sub    dl,BYTE PTR ds:[eax-0xd]
  40a3d2:	push   es
  40a3d3:	inc    esp
  40a3d4:	data16 adc BYTE PTR [eax+0x3c],ah
  40a3d8:	popw   ds
  40a3da:	push   0x3b
  40a3dc:	popa   
  40a3dd:	pop    ss
  40a3de:	daa    
  40a3df:	cmp    al,0x66
  40a3e1:	push   cs
  40a3e2:	outs   dx,DWORD PTR ds:[esi]
  40a3e3:	cmp    DWORD PTR [ecx+0x10],esp
  40a3e6:	jnp    0x40a3f4
  40a3e8:	pusha  
  40a3e9:	rcr    DWORD PTR [ebp+0xf],cl
  40a3ec:	jo     0x40a404
  40a3ee:	jne    0x40a3f7
  40a3f0:	gs pop es
  40a3f2:	daa    
  40a3f3:	sbb    dh,BYTE PTR [eax+0x0]
  40a3f6:	add    BYTE PTR [eax],al
  40a3f8:	sar    BYTE PTR [edx+0xc],cl
  40a3fb:	add    al,0xf3
  40a3fd:	push   es
  40a3fe:	xor    DWORD PTR [esi+esi*4+0x4f],edx
  40a402:	add    BYTE PTR [eax],ah
  40a404:	lods   eax,DWORD PTR ds:[esi]
  40a405:	pop    eax
  40a406:	inc    ecx
  40a407:	sbb    eax,0xb05f4abe
  40a40c:	scas   al,BYTE PTR es:[edi]
  40a40d:	pop    edx
  40a40e:	inc    ebp
  40a40f:	mov    ebx,0xb64c45b6
  40a414:	mov    eax,ds:0xb3b5415a
  40a419:	push   es
  40a41a:	add    al,dl
  40a41c:	mov    ?,WORD PTR [eax+0x61]
  40a41f:	int    0x8f
  40a421:	push   0x20
  40a423:	retf   0x608d
  40a426:	jae    0x40a3dd
  40a428:	xchg   edi,eax
  40a429:	pusha  
  40a42a:	je     0x40a3f5
  40a42c:	cmp    DWORD PTR [edx+0x72],0x679690
  40a433:	mov    eax,ds:0xa05f49a0
  40a438:	ss push ebp
  40a43a:	inc    ecx
  40a43b:	mov    ch,0x37
  40a43d:	inc    ebx
  40a43e:	pop    edi
  40a43f:	stos   BYTE PTR es:[edi],al
  40a440:	xor    eax,0x2f9d533d
  40a445:	cmp    eax,0x6f0e954
  40a44a:	add    BYTE PTR [eax+0x4d],dl
  40a44d:	jne    0x40a4b0
  40a44f:	dec    ebp
  40a450:	dec    esi
  40a451:	arpl   WORD PTR [eax],sp
  40a453:	dec    edx
  40a454:	inc    edi
  40a455:	push   0x73104872
  40a45a:	cmp    eax,DWORD PTR gs:[eax]
  40a45d:	add    BYTE PTR [eax],al
  40a45f:	iret   
  40a460:	pop    edi
  40a461:	outs   dx,BYTE PTR ds:[esi]
  40a462:	or     DWORD PTR [eax],edx
  40a464:	pop    edi
  40a465:	jne    0x40a4ae
  40a467:	or     BYTE PTR [edi],ah
  40a469:	jae    0x40a4ab
  40a46b:	or     DWORD PTR [eax+eiz*1+0x11],esp
  40a46f:	adc    ch,BYTE PTR [eax+0x64]
  40a472:	add    al,0x1
  40a474:	pop    es
  40a475:	add    BYTE PTR [ecx],ah
  40a477:	pop    ds
  40a478:	inc    esp
  40a479:	pop    edi
  40a47a:	and    BYTE PTR [ebp+0x1e004154],dh
  40a480:	cmp    al,0x44
  40a482:	pop    edi
  40a483:	or     DWORD PTR [ebx],edi
  40a485:	push   ebp
  40a486:	dec    esi
  40a487:	adc    DWORD PTR [esi+0x53],edx
  40a48a:	dec    ecx
  40a48b:	loopne 0x40a4d4
  40a48d:	add    BYTE PTR [eax],al
  40a48f:	and    esp,DWORD PTR [esi+esi*2+0x61]
  40a493:	cs pop ebx
  40a495:	and    BYTE PTR fs:[ecx],ch
  40a498:	bound  esp,QWORD PTR [ecx+0x72]
  40a49b:	cmp    ebp,DWORD PTR [ecx+0x74]
  40a49e:	gs push 0xea6e692a
  40a4a4:	imul   ebp,DWORD PTR [edi+0x6e],0x746e6756
  40a4ab:	pcmpgtd mm4,QWORD PTR [ebp+0x6e]
  40a4af:	jne    0x40a50f
  40a4b1:	push   0x61676220
  40a4b6:	fs addr16 js 0x40a4ba
  40a4ba:	add    BYTE PTR [edx-0x5ca0baa7],dl
  40a4c0:	inc    ebx
  40a4c1:	push   esi
  40a4c2:	inc    ecx
  40a4c3:	add    BYTE PTR [eax],al
  40a4c5:	add    BYTE PTR [esi-0x76a0bbc6],cl
  40a4cb:	inc    esp
  40a4cc:	dec    esi
  40a4cd:	push   esp
  40a4ce:	xchg   edi,eax
  40a4cf:	inc    ebx
  40a4d0:	push   esp
  40a4d1:	pop    edi
  40a4d2:	(bad)  
  40a4d3:	sub    eax,0x3b06474e
  40a4d8:	add    BYTE PTR [eax],al
  40a4da:	xor    esp,DWORD PTR [ebp+0x76]
  40a4dd:	popa   
  40a4de:	out    dx,al
  40a4df:	popa   
  40a4e0:	and    BYTE PTR fs:[ecx],bh
  40a4e3:	pop    ebx
  40a4e4:	popa   
  40a4e5:	jb     0x40a512
  40a4e7:	push   0x22d86574
  40a4ec:	imul   ebp,DWORD PTR [esi-0x6],0xf661655a
  40a4f3:	dec    ebp
  40a4f4:	jb     0x40a4f6
  40a4f6:	ret    0x4552
  40a4f9:	pop    edi
  40a4fa:	repz es inc esi
  40a4fd:	push   esi
  40a4fe:	mov    dl,0xb
  40a500:	dec    ebx
  40a501:	inc    esp
  40a502:	les    esi,FWORD PTR [edi]
  40a504:	aas    
  40a505:	inc    ecx
  40a506:	mov    bh,0x22
  40a508:	push   edx
  40a509:	pop    edi
  40a50a:	mov    edi,0xbd454924
  40a50f:	fild   WORD PTR [edx]
  40a511:	add    bl,dh
  40a513:	mov    bl,0x3c
  40a515:	and    al,dl
  40a517:	xlat   BYTE PTR ds:[ebx]
  40a518:	popa   
  40a519:	jb     0x40a4ed
  40a51b:	shr    BYTE PTR [esi+0x65],0xa1
  40a51f:	call   FWORD PTR [esi+0x78]
  40a522:	mov    ds:0x96745fba,eax
  40a527:	ret    
  40a528:	add    al,BYTE PTR [eax]
  40a52a:	add    BYTE PTR [eax],al
  40a52c:	add    bl,dh
  40a52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52f:	push   edx
  40a530:	inc    ebp
  40a531:	lods   al,BYTE PTR ds:[esi]
  40a532:	mov    edi,DWORD PTR [edi+ebx*2]
  40a535:	scas   al,BYTE PTR es:[edi]
  40a536:	(bad)  
  40a537:	push   edx
  40a538:	inc    ebp
  40a539:	mov    al,0xb3
  40a53b:	cmp    eax,0x6486f344
  40a540:	jbe    0x40a594
  40a542:	push   0x6a
  40a544:	adc    edi,DWORD PTR fs:[eax+esi*2+0x61]
  40a549:	push   esp
  40a54a:	jnp    0x40a5a9
  40a54c:	outs   dx,BYTE PTR ds:[esi]
  40a54d:	pop    edi
  40a54e:	fiadd  WORD PTR [edx]
  40a550:	add    bl,dh
  40a552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a553:	push   edx
  40a554:	inc    ebp
  40a555:	and    al,0x37
  40a557:	inc    esi
  40a558:	push   esi
  40a559:	xor    bl,BYTE PTR [edx]
  40a55b:	dec    ebx
  40a55c:	inc    esp
  40a55d:	adc    al,0x1c
  40a55f:	push   edx
  40a560:	inc    ecx
  40a561:	xor    al,0xb
  40a563:	aas    
  40a564:	dec    esi
  40a565:	aas    
  40a566:	fiadd  WORD PTR [edx]
  40a568:	add    bl,dh
  40a56a:	push   esi
  40a56b:	data16 jbe 0x40a580
  40a56e:	inc    edx
  40a56f:	imul   esp,DWORD PTR [ebx+edx*8+0x2e],0x6f
  40a574:	add    DWORD PTR gs:[edi],eax
  40a577:	and    BYTE PTR [eax+eax*1],ah
  40a57a:	jae    0x40a597
  40a57c:	imul   eax,DWORD PTR ds:0xf303e964,0x6
  40a583:	and    DWORD PTR [esi+ebp*4+0x4b],edx
  40a587:	xor    BYTE PTR [esi-0x3b],al
  40a58a:	inc    ebp
  40a58b:	sub    eax,0x184baf4b
  40a590:	dec    edi
  40a591:	add    BYTE PTR [eax],al
  40a593:	add    BYTE PTR [esi-0x5faaefa8],dh
  40a599:	push   edx
  40a59a:	mov    ebx,0xe943ad4a
  40a59f:	add    esi,ebx
  40a5a1:	push   es
  40a5a2:	shl    BYTE PTR [ebp-0x5b],0x65
  40a5a6:	mov    ebp,0xb9268f6a
  40a5ab:	bound  esp,QWORD PTR [edi-0xcfc16a2]
  40a5b1:	push   es
  40a5b2:	mov    eax,ds:0xa04bb653
  40a5b7:	inc    ebp
  40a5b8:	popf   
  40a5b9:	inc    ebp
  40a5ba:	mov    ch,0x4a
  40a5bc:	mov    bh,0x4b
  40a5be:	mov    ecx,0xe93e9f42
  40a5c3:	add    esi,ebx
  40a5c5:	push   es
  40a5c6:	and    BYTE PTR [ebp+0x5d],0x66
  40a5ca:	xchg   ebp,eax
  40a5cb:	push   0x57
  40a5cd:	daa    
  40a5ce:	jns    0x40a634
  40a5d0:	popa   
  40a5d1:	jae    0x40a5bc
  40a5d3:	add    esi,ebx
  40a5d5:	push   es
  40a5d6:	mov    eax,ds:0x304c2e53
  40a5db:	inc    edx
  40a5dc:	and    eax,0x2f3d2d46
  40a5e1:	dec    esp
  40a5e2:	cmp    DWORD PTR [ebx+0x41],eax
  40a5e5:	push   ebx
  40a5e6:	jmp    0x504798ee
  40a5eb:	bound  esp,QWORD PTR ds:0xf5d4d66
  40a5f1:	daa    
  40a5f2:	add    BYTE PTR [ecx+0x10],al
  40a5f5:	js     0x40a66b
  40a5f7:	jmp    0xf040a5fc
  40a5fc:	push   es
  40a5fd:	add    BYTE PTR [ecx],dh
  40a5ff:	daa    
  40a600:	inc    edx
  40a601:	pop    edi
  40a602:	xor    BYTE PTR [ecx],dh
  40a604:	push   ebp
  40a605:	inc    ecx
  40a606:	and    eax,0x215f432e
  40a60b:	mov    al,0x57
  40a60d:	push   esp
  40a60e:	jmp    0x1040ad03
  40a613:	shl    DWORD PTR [ecx+eiz*2+0x5],1
  40a617:	scas   al,BYTE PTR es:[edi]
  40a618:	bound  esp,QWORD PTR [eax]
  40a61a:	adc    al,0x9d
  40a61c:	cmp    al,BYTE PTR [eax]
  40a61e:	mov    cl,0xa0
  40a620:	inc    ecx
  40a621:	pop    edi
  40a622:	mov    al,0xb2
  40a624:	push   esp
  40a625:	inc    ecx
  40a626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a627:	out    dx,eax
  40a628:	inc    edx
  40a629:	pop    edi
  40a62a:	mov    ah,0xbe
  40a62c:	cmp    al,BYTE PTR [eax]
  40a62e:	rcl    BYTE PTR [edx-0x48329e8c],1
  40a634:	bound  esp,QWORD PTR [eax]
  40a636:	mov    eax,ds:0x95052a4
  40a63b:	xchg   edx,eax
  40a63c:	popa   
  40a63d:	je     0x40a5d0
  40a63f:	xchg   ecx,eax
  40a640:	bound  eax,QWORD PTR [eax]
  40a642:	mov    cl,0xa0
  40a644:	inc    ecx
  40a645:	pop    edi
  40a646:	mov    al,ds:0x9d415132
  40a64b:	daa    
  40a64c:	inc    ebx
  40a64d:	pop    edi
  40a64e:	mov    ah,0x2b
  40a650:	push   ebx
  40a651:	dec    eax
  40a652:	scas   al,BYTE PTR es:[edi]
  40a653:	sub    al,0x7
  40a655:	add    BYTE PTR [eax+0x7d617152],al
  40a65b:	daa    
  40a65c:	arpl   WORD PTR [eax],sp
  40a65e:	xor    DWORD PTR [eax],eax
  40a660:	add    BYTE PTR [eax],al
  40a662:	sbb    edx,DWORD PTR [ebx+0x50]
  40a665:	or     DWORD PTR [ebx+esi*2],edi
  40a668:	popa   
  40a669:	pop    ebp
  40a66a:	sub    dh,BYTE PTR [esi+0x20]
  40a66d:	dec    edx
  40a66e:	adc    BYTE PTR [ebx+0x65],ah
  40a671:	add    BYTE PTR [edx-0x1dfffffa],cl
  40a677:	push   edx
  40a678:	inc    ebp
  40a679:	pop    edi
  40a67a:	rol    DWORD PTR [esi+edx*2+0x41],cl
  40a67e:	out    0x2b,al
  40a680:	inc    esp
  40a681:	pop    edi
  40a682:	mov    ecx,0xbf54414e
  40a687:	push   ecx
  40a688:	add    BYTE PTR [eax],al
  40a68a:	repz fs jbe 0x40a6ef
  40a68e:	dec    bx
  40a690:	and    BYTE PTR fs:[edx],ah
  40a693:	dec    edi
  40a694:	push   esp
  40a695:	push   eax
  40a696:	sub    dh,BYTE PTR [eax+0x65]
  40a699:	jb     0x40a6e4
  40a69b:	dec    ebx
  40a69c:	outs   dx,DWORD PTR ds:[esi]
  40a69d:	outs   dx,BYTE PTR ds:[esi]
  40a69e:	pop    edx
  40a69f:	push   es
  40a6a0:	add    BYTE PTR [eax],al
  40a6a2:	adc    BYTE PTR [esi+0x45],0x5f
  40a6a6:	or     DWORD PTR [eax+0x56],0x41
  40a6aa:	push   esi
  40a6ab:	sub    eax,DWORD PTR [edi+ebx*2+0x5c]
  40a6af:	aas    
  40a6b0:	push   edx
  40a6b1:	push   ebx
  40a6b2:	arpl   WORD PTR [ebp+0x4e],ax
  40a6b5:	add    BYTE PTR [esi],ch
  40a6b7:	arpl   WORD PTR [ecx+eiz*2-0x6],si
  40a6bb:	jo     0x40a722
  40a6bd:	arpl   WORD PTR [edi],bp
  40a6bf:	dec    ebx
  40a6c0:	jbe    0x40a727
  40a6c2:	outs   dx,BYTE PTR ds:[esi]
  40a6c3:	es popa 
  40a6c5:	data16 add BYTE PTR [eax],al
  40a6c8:	add    BYTE PTR [esi+0x5f],bl
  40a6cb:	jb     0x40a6ed
  40a6cd:	jns    0x40a733
  40a6cf:	ins    DWORD PTR es:[edi],dx
  40a6d0:	jo     0x40a738
  40a6d2:	pop    edi
  40a6d3:	je     0x40a73a
  40a6d5:	outs   dx,BYTE PTR ds:[esi]
  40a6d6:	and    eax,0x67646f63
  40a6db:	arpl   WORD PTR gs:[esi+0x4b],cx
  40a6df:	outs   dx,DWORD PTR ds:[esi]
  40a6e0:	outs   dx,BYTE PTR ds:[esi]
  40a6e1:	and    BYTE PTR ds:0x74256c63,0x65
  40a6e8:	and    BYTE PTR [edi],ah
  40a6ea:	bound  esi,QWORD PTR [ebx+0x73]
  40a6ed:	repz imul esp,DWORD PTR ds:[ebp-0xd],0x3c455427
  40a6f6:	sbb    eax,0x23404f40
  40a6fb:	dec    eax
  40a6fc:	pop    edi
  40a6fd:	xor    BYTE PTR [ecx],ah
  40a6ff:	inc    edx
  40a700:	dec    esi
  40a701:	cs sbb eax,0x322c4958
  40a707:	add    al,0x0
  40a709:	repz adc esp,DWORD PTR [ecx+0x6f]
  40a70d:	adc    eax,DWORD PTR [ebx]
  40a70f:	arpl   WORD PTR [esi-0x16],bp
  40a712:	mov    edi,0xfbd2655a
  40a717:	data16 jb 0x40a72d
  40a71a:	(bad)  
  40a71b:	push   0x74
  40a71d:	(bad)  
  40a71e:	in     al,dx
  40a71f:	and    dh,BYTE PTR [ebx-0x32]
  40a722:	add    ah,BYTE PTR [edx+0x3b]
  40a725:	adc    edx,ecx
  40a727:	js     0x40a78e
  40a729:	rol    ecx,0x5e
  40a72c:	outs   dx,DWORD PTR ds:[esi]
  40a72d:	add    BYTE PTR [eax],al
  40a72f:	add    BYTE PTR [edi+edi*8-0x3d609a99],ah
  40a736:	arpl   WORD PTR [esi+edx*4-0x45],si
  40a73a:	add    al,BYTE PTR [eax]
  40a73c:	repz mov bh,0x52
  40a73f:	inc    ebp
  40a740:	lods   al,BYTE PTR ds:[esi]
  40a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a742:	inc    ebp
  40a743:	inc    ecx
  40a744:	scas   eax,DWORD PTR es:[edi]
  40a745:	mov    ds:0xa9ac5f54,al
  40a74a:	inc    ebp
  40a74b:	push   edx
  40a74c:	lods   eax,DWORD PTR ds:[esi]
  40a74d:	fwait
  40a74e:	aas    
  40a74f:	push   edi
  40a750:	repz mov WORD PTR [esi+0x72],?
  40a754:	dec    esi
  40a755:	jg     0x40a7b4
  40a757:	and    BYTE PTR [esi-0x70],dl
  40a75a:	gs dec di
  40a75d:	mov    esi,0x7f137461
  40a762:	pusha  
  40a763:	and    BYTE PTR [esi],bh
  40a765:	push   0x7437866
  40a76a:	dec    esp
  40a76b:	gs aas 
  40a76d:	bound  eax,QWORD PTR [ebp+0x24]
  40a770:	daa    
  40a771:	pop    esi
  40a772:	inc    esp
  40a773:	addr16 repz push es
  40a776:	and    DWORD PTR [esi+esi*1+0x48],edx
  40a77a:	xor    BYTE PTR [edx+0x3d],al
  40a77d:	inc    esi
  40a77e:	sub    eax,0x2c48373b
  40a783:	inc    ecx
  40a784:	sub    eax,0x32581a48
  40a789:	push   ebx
  40a78a:	sub    al,0x4
  40a78c:	repz push es
  40a78e:	adc    eax,0x626d65c
  40a793:	bound  eax,QWORD PTR [eax]
  40a795:	add    BYTE PTR [eax],al
  40a797:	les    ebx,FWORD PTR [ecx+0x4]
  40a79a:	jne    0x40a77c
  40a79c:	gs push cs
  40a79e:	addr16 mov ah,0x63
  40a7a1:	push   cs
  40a7a2:	pop    edi
  40a7a3:	ret    
  40a7a4:	pop    edx
  40a7a5:	or     al,0x78
  40a7a7:	into   
  40a7a8:	or     ah,BYTE PTR es:[ebx-0x31]
  40a7ac:	pop    edx
  40a7ad:	retf   
  40a7ae:	(bad)  
  40a7af:	rcr    BYTE PTR [ebx+0x9],1
  40a7b2:	push   0xffffff92
  40a7b4:	pop    ebp
  40a7b5:	lds    esp,FWORD PTR [esi-0x71]
  40a7b8:	push   es
  40a7b9:	mov    eax,ds:0xaa47b653
  40a7be:	inc    ebp
  40a7bf:	mov    ah,0x59
  40a7c1:	les    esi,FWORD PTR [eax+eax*4+0x65]
  40a7c5:	into   
  40a7c6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c8:	arpl   WORD PTR [esi-0x73a57ca2],di
  40a7ce:	ja     0x40a75e
  40a7d0:	push   es
  40a7d1:	xchg   ebp,eax
  40a7d2:	pop    ebx
  40a7d3:	push   esi
  40a7d4:	daa    
  40a7d5:	xchg   BYTE PTR [ecx+0x44],ah
  40a7d8:	gs jle 0x40a842
  40a7db:	pop    edx
  40a7dc:	daa    
  40a7dd:	mov    ah,BYTE PTR [edx+0x47]
  40a7e0:	pop    ebx
  40a7e1:	mov    esp,DWORD PTR [edx+0x50]
  40a7e4:	pop    esp
  40a7e5:	add    cl,cl
  40a7e7:	pop    edx
  40a7e8:	imul   di,WORD PTR [ebp+0x55],0x63
  40a7ee:	xor    DWORD PTR [edi],ebx
  40a7f0:	inc    edx
  40a7f1:	pop    edi
  40a7f2:	sub    dh,BYTE PTR [ecx]
  40a7f4:	dec    eax
  40a7f5:	bound  eax,QWORD PTR [esi+0x1b]
  40a7f8:	outs   dx,BYTE PTR ds:[esi]
  40a7f9:	add    BYTE PTR [ebp+0x0],dl
  40a7fc:	add    BYTE PTR [eax],al
  40a7fe:	aas    
  40a7ff:	bound  esp,QWORD PTR [eax]
  40a801:	push   esi
  40a802:	xor    eax,0x16446848
  40a807:	arpl   WORD PTR [ebp+0x3b],sp
  40a80a:	add    BYTE PTR [eax+0x63],cl
  40a80d:	adc    dh,BYTE PTR ds:[edi+0x6c]
  40a811:	or     al,0xfb
  40a813:	popa   
  40a814:	and    BYTE PTR [edx],cl
  40a816:	(bad)  
  40a817:	pop    edx
  40a818:	ins    BYTE PTR es:[edi],dx
  40a819:	or     ecx,esi
  40a81b:	arpl   WORD PTR [ebx-0x37],bp
  40a81e:	(bad)  
  40a81f:	imul   edx,DWORD PTR gs:0x310062ca,0x2a5f41a7
  40a82a:	mov    cl,0x47
  40a82c:	push   0x6562d604
  40a831:	fcmovnb st,st(1)
  40a833:	inc    edi
  40a834:	arpl   si,cx
  40a836:	xchg   ebx,eax
  40a837:	jbe    0x40a8a5
  40a839:	int3   
  40a83a:	pushf  
  40a83b:	popa   
  40a83c:	add    ch,dl
  40a83e:	mov    eax,0xb6d62061
  40a843:	inc    edi
  40a844:	push   0x656297c4
  40a849:	mov    ebx,0xbd6170b5
  40a84e:	jnp    0x40a8b1
  40a850:	and    BYTE PTR [edx-0x7493a571],cl
  40a856:	push   edi
  40a857:	push   0x6b
  40a859:	leave  
  40a85a:	dec    esi
  40a85b:	push   0x6b4b7d69
  40a860:	add    BYTE PTR [eax],al
  40a862:	add    BYTE PTR [eax],al
  40a864:	add    BYTE PTR [edx-0x66a0bac6],ah
  40a86a:	dec    eax
  40a86b:	pop    edi
  40a86c:	push   0x65646b77
  40a871:	cmp    BYTE PTR [ebp+0x76],dl
  40a874:	popa   
  40a875:	push   ds
  40a876:	pusha  
  40a877:	add    BYTE PTR gs:[esi+0x43],al
  40a87b:	and    BYTE PTR gs:0x37685f45,ch
  40a882:	ins    BYTE PTR es:[edi],dx
  40a883:	fs fcom DWORD PTR gs:[ebp+0x66]
  40a888:	imul   esi,DWORD PTR [edi],0x39206467
  40a88e:	ins    BYTE PTR es:[edi],dx
  40a88f:	ins    BYTE PTR es:[edi],dx
  40a890:	ins    BYTE PTR es:[edi],dx
  40a891:	sub    BYTE PTR [ebx+eiz*2+0x6b],ch
  40a895:	stos   BYTE PTR es:[edi],al
  40a896:	ins    BYTE PTR es:[edi],dx
  40a897:	popa   
  40a898:	imul   edi,esi,0x1200646f
  40a89e:	cmp    eax,DWORD PTR [ebp+0x5f]
  40a8a1:	or     DWORD PTR [ecx+0x5f],ecx
  40a8a4:	push   0x65646be7
  40a8a9:	dec    eax
  40a8aa:	push   ebp
  40a8ab:	imul   si,di,0x6466
  40a8b0:	add    BYTE PTR [esi+0x42],al
  40a8b3:	and    BYTE PTR gs:0x48755f44,bl
  40a8ba:	inc    esi
  40a8bb:	and    BYTE PTR [ebx+0x3b],ah
  40a8be:	inc    esi
  40a8bf:	ins    BYTE PTR es:[edi],dx
  40a8c0:	bound  ebp,QWORD PTR [ebx]
  40a8c2:	imul   ebp,DWORD PTR [ebx+0x20],0x6c696b24
  40a8c9:	add    BYTE PTR [eax],al
  40a8cb:	add    BYTE PTR [edi],dh
  40a8cd:	outs   dx,BYTE PTR ds:[esi]
  40a8ce:	add    BYTE PTR [eax],al
  40a8d0:	push   edx
  40a8d1:	cmp    al,BYTE PTR [ebp+0x5f]
  40a8d4:	dec    ecx
  40a8d5:	dec    eax
  40a8d6:	pop    edi
  40a8d7:	jne    0x40a931
  40a8d9:	inc    esi
  40a8da:	add    BYTE PTR [eax],al
  40a8dc:	xchg   BYTE PTR [ecx+0x65],al
  40a8df:	and    bl,dh
  40a8e1:	mov    WORD PTR [edi+ebx*2+0x4e],ds
  40a8e5:	mov    esi,DWORD PTR [ecx+0x73]
  40a8e8:	push   edx
  40a8e9:	xchg   ebp,eax
  40a8ea:	addr16 pop edi
  40a8ec:	push   ecx
  40a8ed:	mov    esp,DWORD PTR [ebp+0x69]
  40a8f0:	push   ebp
  40a8f1:	shl    BYTE PTR [ecx+0x61],1
  40a8f4:	dec    edi
  40a8f5:	fs popa 
  40a8f7:	popa   
  40a8f8:	push   eax
  40a8f9:	cmp    DWORD PTR [esi+eiz*2],esp
  40a8fc:	adc    dh,BYTE PTR [edi]
  40a8fe:	pusha  
  40a8ff:	gs (bad) 
  40a902:	add    al,BYTE PTR [eax]
  40a904:	repz daa 
  40a906:	push   esp
  40a907:	inc    ebp
  40a908:	xor    al,0x31
  40a90a:	inc    edx
  40a90b:	pop    edi
  40a90c:	push   ds
  40a90d:	dec    ebx
  40a90e:	jno    0x40a983
  40a910:	adc    dl,BYTE PTR [ebp+0x67]
  40a913:	pop    edi
  40a914:	adc    DWORD PTR [ebx+0x65],ecx
  40a917:	imul   eax,DWORD PTR ds:0xf30002f0,0xd0637700
  40a921:	adc    dh,BYTE PTR [ecx+0x73]
  40a924:	repz daa 
  40a926:	push   esp
  40a927:	inc    ebp
  40a928:	mov    ah,0x1c
  40a92a:	cmp    DWORD PTR [eax],eax
  40a92c:	repz inc DWORD PTR [edx+0x54]
  40a930:	add    BYTE PTR [eax],al
  40a932:	add    BYTE PTR [eax-0xcfffbd9],dh
  40a938:	cli    
  40a939:	cmp    eax,0x4fb19e53
  40a93e:	inc    ebx
  40a93f:	rcl    DWORD PTR [esi-0x5f0cbac0],0x55
  40a946:	inc    edx
  40a947:	shl    BYTE PTR [eax-0x4d4eb6b0],0x2
  40a94e:	add    bl,dh
  40a950:	mov    ch,0x3b
  40a952:	push   esp
  40a953:	mov    edx,0xf30049b5
  40a958:	sbb    BYTE PTR ds:0xa806ae53,0x51
  40a95f:	xor    BYTE PTR [edi-0x17],cl
  40a962:	add    esi,ebx
  40a964:	push   es
  40a965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a966:	inc    esi
  40a967:	inc    ecx
  40a968:	dec    esp
  40a969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a96a:	add    esi,ebx
  40a96c:	push   es
  40a96d:	stos   BYTE PTR es:[edi],al
  40a96e:	cmp    esi,DWORD PTR [esi]
  40a970:	dec    eax
  40a971:	mov    dl,0x3c
  40a973:	push   ds
  40a974:	cmp    ebp,ecx
  40a976:	add    esi,ebx
  40a978:	push   es
  40a979:	pushf  
  40a97a:	cmp    BYTE PTR [edx],dh
  40a97c:	dec    eax
  40a97d:	cmp    eax,0x354e453b
  40a982:	dec    ebx
  40a983:	repz push es
  40a985:	cmp    eax,DWORD PTR [edi+0x43]
  40a988:	push   esp
  40a989:	cmp    ebx,DWORD PTR [eax-0xd]
  40a98c:	push   es
  40a98d:	sbb    al,0x3e
  40a98f:	aas    
  40a990:	push   esp
  40a991:	sub    bh,BYTE PTR [ecx]
  40a993:	repz push es
  40a995:	sbb    DWORD PTR [edx+0x0],edx
  40a998:	add    BYTE PTR [eax],al
  40a99a:	sub    al,0x37
  40a99c:	sbb    DWORD PTR [ebx+0x1f],eax
  40a99f:	dec    eax
  40a9a0:	xor    DWORD PTR [ebx+esi*8],eax
  40a9a3:	push   es
  40a9a4:	cmp    DWORD PTR [edx-0x4c],edx
  40a9a7:	ss das 
  40a9a9:	cmp    ebp,DWORD PTR [ebp-0xcfc16b6]
  40a9af:	push   es
  40a9b0:	xor    al,0x3d
  40a9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b3:	dec    ecx
  40a9b4:	jmp    0x24479cbc
  40a9b9:	cmp    DWORD PTR [eax-0xcfbe2ad],esi
  40a9bf:	push   es
  40a9c0:	mov    ch,0x3c
  40a9c2:	mov    al,0x4f
  40a9c4:	jmp    0xaa479ccc
  40a9c9:	cmp    al,0xc3
  40a9cb:	cmp    eax,0x6f303e9
  40a9d0:	popf   
  40a9d1:	push   ecx
  40a9d2:	mov    dl,0x47
  40a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d5:	add    esi,ebx
  40a9d7:	push   es
  40a9d8:	add    BYTE PTR [esi-0x61b6c560],ah
  40a9de:	mov    dh,0x37
  40a9e0:	add    BYTE PTR [edx-0x5bb1aad1],ch
  40a9e6:	xor    edi,DWORD PTR [ebx]
  40a9e8:	add    BYTE PTR [ecx-0x5effc4bb],bh
  40a9ee:	sub    eax,0xf0e94446
  40a9f3:	push   es
  40a9f4:	add    BYTE PTR [ebp-0x62baacd3],ah
  40a9fa:	xor    eax,0x8a0007
  40a9ff:	add    BYTE PTR [eax],al
  40aa01:	pop    ss
  40aa02:	jne    0x40aa72
  40aa04:	dec    esp
  40aa05:	adc    al,0x5b
  40aa07:	imul   ecx,DWORD PTR [esi+0x49],0x25590007
  40aa0e:	je     0x40aa88
  40aa10:	push   eax
  40aa11:	cli    
  40aa12:	outs   dx,DWORD PTR ds:[si]
  40aa14:	push   edi
  40aa15:	sub    DWORD PTR [edx+0x63],ebp
  40aa18:	xor    eax,0xe96e7426
  40aa1d:	lock push es
  40aa1f:	add    BYTE PTR [edx+0x18],cl
  40aa22:	jne    0x40aa98
  40aa24:	or     al,0xc9
  40aa26:	pop    edx
  40aa27:	sub    eax,0x6774d20d
  40aa2c:	sbb    eax,0x150006bf
  40aa31:	frstor [ebp+0x6e]
  40aa34:	cli    
  40aa35:	shr    BYTE PTR [ecx+0x72],cl
  40aa38:	int3   
  40aa39:	shl    DWORD PTR [ebx+eiz*2+0x6],cl
  40aa3d:	shr    DWORD PTR [ebp+0x6e],cl
  40aa40:	push   es
  40aa41:	out    dx,eax
  40aa42:	push   es
  40aa43:	add    ah,bl
  40aa45:	mov    al,ds:0xc4c8726b
  40aa4a:	imul   eax,DWORD PTR [eax],0x6e59b8ca
  40aa50:	ret    0x6a93
  40aa53:	add    BYTE PTR [eax],al
  40aa55:	and    DWORD PTR [esi+0x65],esp
  40aa58:	jo     0x40aa51
  40aa5a:	imul   ebp,DWORD PTR [ecx+ebp*2+0x3c],0x29000066
  40aa62:	cmp    ebp,DWORD PTR [edi+0x73]
  40aa65:	add    BYTE PTR [eax],al
  40aa67:	add    BYTE PTR [edi+0x6],bh
  40aa6a:	add    BYTE PTR [eax],al
  40aa6c:	sahf   
  40aa6d:	mov    cl,0x40
  40aa6f:	add    BYTE PTR [ecx-0x53],bh
  40aa72:	inc    eax
  40aa73:	add    BYTE PTR [ebp+0x4b0040c6],dh
  40aa79:	retf   
  40aa7a:	inc    eax
  40aa7b:	add    BYTE PTR [esp+ecx*8+0x40],cl
  40aa7f:	add    BYTE PTR [eax-0x34],dl
  40aa82:	inc    eax
  40aa83:	add    BYTE PTR [ebp+0x45006c06],cl
  40aa89:	or     esp,DWORD PTR [edx+0x0]
  40aa8c:	cmp    ecx,DWORD PTR [ebx]
  40aa8e:	ins    BYTE PTR es:[edi],dx
  40aa8f:	add    dh,ah
  40aa91:	or     al,BYTE PTR [eax]
  40aa93:	add    dh,dh
  40aa95:	or     ch,BYTE PTR [edi+0x0]
  40aa98:	cmp    DWORD PTR [ebx],ecx
  40aa9a:	popa   
  40aa9b:	add    BYTE PTR [esi],dh
  40aa9d:	or     ebx,DWORD PTR [eax+eax*1-0x76]
  40aaa1:	push   es
  40aaa2:	add    BYTE PTR [eax],al
  40aaa4:	xor    dl,BYTE PTR [edi+0x74]
  40aaa7:	jo     0x40aaf9
  40aaa9:	std    
  40aaaa:	cs ja  0x40aaaa
  40aaad:	push   ebp
  40aaae:	(bad)
  40aab4:	jmp    0x5a7017f6
  40aab9:	push   es
  40aaba:	add    BYTE PTR [eax],al
  40aabc:	loop   0x40ab14
  40aabe:	je     0x40ab30
  40aac0:	cmp    ch,0x2e
  40aac3:	ja     0x40ab02
  40aac5:	push   ebp
  40aac6:	cs addr16 inc ebp
  40aac9:	cmp    eax,0x6c67
  40aace:	add    BYTE PTR [edi],ch
  40aad0:	add    BYTE PTR [ebx+0x6f],ah
  40aad3:	repz retf 0x19
  40aad7:	repz add ecx,DWORD PTR [edi-0x709c0cc1]
  40aade:	aas    
  40aadf:	repz jl 0x40aae4
  40aae2:	repz add DWORD PTR gs:[edx],0x63
  40aae7:	repz int 0x2
  40aaea:	push   eax
  40aaeb:	repz jge 0x40aaf0
  40aaee:	imul   esi,ebx,0xf3690279
  40aaf4:	mov    eax,DWORD PTR [edx]
  40aaf6:	xrelease mov BYTE PTR gs:[edx],al
  40aafa:	gs repz out dx,eax
  40aafd:	add    al,BYTE PTR [eax]
  40aaff:	repz rol DWORD PTR [edx],1
  40ab02:	gs repz push edi
  40ab05:	add    esp,DWORD PTR [ebp-0xd]
  40ab08:	out    dx,eax
  40ab09:	add    al,BYTE PTR [eax]
  40ab0b:	repz jle 0x40aafd
  40ab0e:	inc    ecx
  40ab0f:	repz out dx,eax
  40ab11:	add    al,BYTE PTR [eax]
  40ab13:	repz and DWORD PTR [ebp-0x10],edi
  40ab17:	lods   al,BYTE PTR ds:[esi]
  40ab18:	jmp    0xf073f8a7
  40ab1d:	fiadd  DWORD PTR [eax-0x33]
  40ab20:	in     eax,dx
  40ab21:	add    dh,dh
  40ab23:	aaa    
  40ab24:	adc    al,0xfc
  40ab26:	add    bh,bh
  40ab28:	jmp    0xd65d937d
  40ab2d:	add    al,BYTE PTR [eax]
  40ab2f:	js     0x40aada
  40ab31:	dec    ecx
  40ab32:	ret    0x0
  40ab35:	add    bh,dh
  40ab37:	out    dx,eax
  40ab38:	dec    ebp
  40ab39:	mov    eax,DWORD PTR [edi+0x6e]
  40ab3c:	fmul   DWORD PTR [ebx]
  40ab3e:	repnz out dx,eax
  40ab40:	add    dl,BYTE PTR [ebx-0x63]
  40ab43:	clc    
  40ab44:	jl     0x40ab3d
  40ab46:	jo     0x40aba0
  40ab48:	sbb    BYTE PTR [edi],cl
  40ab4a:	jno    0x40ab86
  40ab4c:	add    al,0x0
  40ab4e:	repz push es
  40ab50:	push   0xe90b74e9
  40ab55:	add    ebp,esp
  40ab57:	xchg   ecx,eax
  40ab58:	pop    edi
  40ab59:	add    al,0xf3
  40ab5b:	push   es
  40ab5c:	bound  eax,QWORD PTR [edi-0x5]
  40ab5f:	mov    esp,DWORD PTR [ecx]
  40ab61:	jo     0x40ab59
  40ab63:	adc    DWORD PTR [esi+0x5],esi
  40ab66:	jo     0x40ab46
  40ab68:	jmp    0x6611:0x3085ee6f
  40ab6f:	pop    edx
  40ab70:	jb     0x40abe1
  40ab72:	test   edi,0xe0deec63
  40ab78:	adc    eax,0xe906f300
  40ab7d:	jle    0x40ab4c
  40ab7f:	pop    ebx
  40ab80:	idiv   BYTE PTR [ebp+ebx*4-0x74]
  40ab84:	cs ja  0x40abfe
  40ab87:	fcomip st,st(6)
  40ab89:	call   0x75e09b43
  40ab8e:	repnz push es
  40ab90:	imul   ebp,DWORD PTR [ecx],0xf9395af3
  40ab96:	dec    cx
  40ab98:	jmp    0x40ac10
  40ab9a:	add    BYTE PTR [eax],al
  40ab9c:	add    BYTE PTR ds:0x2bc11bb,ah
  40aba2:	dec    edx
  40aba3:	push   ecx
  40aba4:	mov    esp,0xdbe8e084
  40aba9:	fs push cs
  40abab:	jmp    0x641813b3
  40abb0:	icebp  
  40abb1:	loopne 0x40aba6
  40abb3:	nop
  40abb4:	popa   
  40abb5:	push   cs
  40abb6:	add    eax,0xc83334e9
  40abbb:	out    dx,al
  40abbc:	mov    esp,DWORD PTR [esi+0x7a61e946]
  40abc2:	dec    ecx
  40abc3:	xor    ebp,ebx
  40abc5:	repnz adc esi,DWORD PTR [edi+0x7e]
  40abc9:	inc    esi
  40abca:	pop    ebx
  40abcb:	add    ch,dl
  40abcd:	mov    ds:0x92dd74df,eax
  40abd2:	lea    edi,[ebp-0x3]
  40abd5:	dec    eax
  40abd6:	fimul  WORD PTR [eax]
  40abd8:	jmp    0xf98639cd
  40abdd:	xchg   ebp,eax
  40abde:	lahf   
  40abdf:	je     0x40abd9
  40abe1:	(bad)
  40abe5:	xchg   ecx,edx
  40abe7:	(bad)  
  40abe8:	fld    st(7)
  40abea:	(bad)  
  40abeb:	pop    esi
  40abec:	xchg   edi,eax
  40abed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abee:	int    0xc1
  40abf0:	loope  0x40abe2
  40abf2:	mov    edi,DWORD PTR [ecx+ebx*8]
  40abf5:	add    al,BYTE PTR [edi+0x0]
  40abf8:	fs scas eax,DWORD PTR es:[edi]
  40abfa:	push   ebx
  40abfb:	xor    DWORD PTR es:[eax-0x21],0xe9fe
  40ac03:	add    BYTE PTR [ebp+0x42],al
  40ac06:	dec    eax
  40ac07:	xchg   ebx,eax
  40ac08:	lock xor edi,edi
  40ac0b:	aam    0xc
  40ac0d:	stc    
  40ac0e:	aas    
  40ac0f:	jmp    0x6a48f74b
  40ac14:	ins    BYTE PTR es:[edi],dx
  40ac15:	or     ebp,eax
  40ac17:	add    eax,0x39fedf50
  40ac1c:	xchg   esp,eax
  40ac1d:	pop    edx
  40ac1e:	or     BYTE PTR [edx],bh
  40ac20:	mov    WORD PTR [eax+0x6d8ba582],?
  40ac26:	sub    al,0xc6
  40ac28:	add    dl,BYTE PTR [ebx]
  40ac2a:	lea    esp,[edi]
  40ac2c:	in     eax,dx
  40ac2d:	call   FWORD PTR ss:[esi+0x620bc370]
  40ac34:	lods   eax,DWORD PTR ds:[esi]
  40ac35:	in     al,dx
  40ac36:	mov    dh,0x3a
  40ac38:	ret    0x5738
  40ac3b:	jb     0x40aca4
  40ac3d:	loopne 0x40acb4
  40ac3f:	stc    
  40ac40:	(bad)  
  40ac42:	out    0xcb,eax
  40ac44:	dec    edi
  40ac45:	(bad)  
  40ac47:	add    cl,al
  40ac49:	pop    ds
  40ac4a:	adc    BYTE PTR [ebx+0x4016132f],cl
  40ac50:	dec    edx
  40ac51:	bound  eax,QWORD PTR [ebp+0x10]
  40ac54:	hlt    
  40ac55:	pop    ebx
  40ac56:	inc    esi
  40ac57:	adc    al,0x34
  40ac59:	bound  eax,QWORD PTR [ebp+0x14]
  40ac5c:	mov    DWORD PTR [edi],edi
  40ac5e:	adc    BYTE PTR [eax],al
  40ac60:	stc    
  40ac61:	retf   0x8066
  40ac64:	sbb    al,BYTE PTR [ebx]
  40ac66:	add    BYTE PTR [esi+0x0],ah
  40ac69:	add    BYTE PTR [eax],al
  40ac6b:	sbb    DWORD PTR [edi],0x14
  40ac6e:	lea    ebx,[ebp+0x1b]
  40ac71:	lea    eax,[esi+0x52]
  40ac74:	xor    al,0x50
  40ac76:	inc    DWORD PTR [edi]
  40ac78:	sbb    al,al
  40ac7a:	push   0xffffffbe
  40ac7c:	cmp    al,0x89
  40ac7e:	add    edi,ebp
  40ac80:	ins    BYTE PTR es:[edi],dx
  40ac81:	adc    BYTE PTR [ebx-0xa9f2fc],al
  40ac87:	pop    es
  40ac88:	inc    ecx
  40ac89:	sub    al,0x6a
  40ac8b:	fimul  DWORD PTR [ecx-0x1a9ae93b]
  40ac91:	adc    esi,DWORD PTR [esp+edx*4]
  40ac94:	dec    edx
  40ac95:	add    BYTE PTR [ebx+0x5e5f26d6],al
  40ac9b:	das    
  40ac9c:	push   edx
  40ac9d:	ret    
  40ac9e:	push   ebp
  40ac9f:	and    DWORD PTR [esi-0x766dba77],esi
  40aca5:	jmp    0x826a:0x574cc90c
  40acac:	pop    edi
  40acad:	je     0x40acab
  40acaf:	sar    DWORD PTR [edx+0xa885b80],1
  40acb5:	xor    edi,edi
  40acb7:	popa   
  40acb8:	popf   
  40acb9:	jae    0x40ad1e
  40acbb:	push   ebx
  40acbc:	outs   dx,DWORD PTR ds:[esi]
  40acbd:	cld    
  40acbe:	jle    0x40ac71
  40acc0:	popa   
  40acc1:	inc    esp
  40acc2:	or     bl,dh
  40acc4:	or     edi,edi
  40acc6:	mov    esi,es
  40acc8:	ja     0x40ad13
  40acca:	call   0x42d5a9
  40accf:	add    BYTE PTR [eax],al
  40acd1:	add    al,bh
  40acd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd4:	outs   dx,DWORD PTR ds:[esi]
  40acd5:	dec    esp
  40acd6:	push   0xfa69fc2b
  40acdb:	cmp    dh,BYTE PTR [eax+0x8]
  40acde:	enter  0x4e37,0x5b
  40ace2:	icebp  
  40ace3:	out    dx,eax
  40ace4:	sub    edi,eax
  40ace6:	sahf   
  40ace7:	stc    
  40ace8:	jp     0x40ad2e
  40acea:	psllw  mm7,QWORD PTR [ebp+0x7a31d898]
  40acf1:	xlat   BYTE PTR ds:[ebx]
  40acf2:	and    cl,BYTE PTR [ecx+0x7a]
  40acf5:	repnz in al,0x84
  40acf8:	outs   dx,DWORD PTR ds:[esi]
  40acf9:	clc    
  40acfa:	lock xchg edx,eax
  40acfc:	cli    
  40acfd:	mov    WORD PTR ds:0x66ff52f2,gs
  40ad03:	in     al,dx
  40ad04:	in     eax,0x14
  40ad06:	sbb    ebx,esi
  40ad08:	inc    edx
  40ad09:	add    BYTE PTR [edx],ch
  40ad0b:	xchg   edi,eax
  40ad0c:	jg     0x40accd
  40ad0e:	aas    
  40ad0f:	out    0x64,eax
  40ad11:	add    eax,0xeb03886e
  40ad16:	lock dec ax
  40ad19:	cld    
  40ad1a:	jmp    0xeb39:0xba7ee76a
  40ad21:	push   edi
  40ad22:	cmp    al,0x1e
  40ad24:	dec    ecx
  40ad25:	leave  
  40ad26:	mov    cl,0xe7
  40ad28:	add    cl,BYTE PTR [edi]
  40ad2a:	inc    ebp
  40ad2b:	in     eax,0xf3
  40ad2d:	mov    ch,0x35
  40ad2f:	out    dx,eax
  40ad30:	rcr    edi,0xeb
  40ad33:	lock shr edx,0x0
  40ad37:	add    BYTE PTR [eax],al
  40ad39:	mov    BYTE PTR [ebp-0x1108dbc1],bl
  40ad3f:	dec    esp
  40ad40:	mov    esp,DWORD PTR [edx+0x6]
  40ad43:	scas   al,BYTE PTR es:[edi]
  40ad44:	(bad)  
  40ad45:	js     0x40ad93
  40ad47:	sub    DWORD PTR [edi+ebx*8],eax
  40ad4a:	add    al,0x3f
  40ad4c:	fcom   QWORD PTR [eax]
  40ad4e:	psubsw mm0,QWORD PTR [ebx]
  40ad51:	js     0x40ad17
  40ad53:	es ret 0x6f0
  40ad57:	push   ss
  40ad58:	ja     0x40ad08
  40ad5a:	add    bl,BYTE PTR [ecx]
  40ad5c:	in     eax,0x7
  40ad5e:	repz fld DWORD PTR [ebx-0xd]
  40ad62:	xchg   ecx,eax
  40ad63:	pusha  
  40ad64:	jg     0x40ad83
  40ad66:	push   ebx
  40ad67:	in     eax,dx
  40ad68:	jle    0x40ad88
  40ad6a:	push   edx
  40ad6b:	loope  0x40ade5
  40ad6d:	div    BYTE PTR [eax-0x18]
  40ad70:	js     0x40ada8
  40ad72:	fstp   st(0)
  40ad74:	js     0x40adab
  40ad76:	cmp    eax,0xc933312a
  40ad7b:	fwait
  40ad7c:	js     0x40ad56
  40ad7e:	mov    BYTE PTR [esp+ebp*8+0x71],al
  40ad82:	jmp    0x40ad10
  40ad84:	push   eax
  40ad85:	push   0xe7411dc1
  40ad8a:	xchg   BYTE PTR [ecx-0x56700c05],dl
  40ad90:	neg    DWORD PTR [esi]
  40ad92:	xor    al,0x72
  40ad94:	repz inc edi
  40ad96:	or     ch,BYTE PTR [edx-0x14]
  40ad99:	push   eax
  40ad9a:	push   ebp
  40ad9b:	loope  0x40adf6
  40ad9d:	add    BYTE PTR [eax],al
  40ad9f:	add    cl,dh
  40ada1:	ds add ah,ah
  40ada4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada5:	fsub   st(0),st
  40ada7:	pop    ecx
  40ada8:	out    dx,eax
  40ada9:	mov    DWORD PTR [eax+eiz*1-0x2d],ebx
  40adad:	sar    DWORD PTR ds:[edx+0x4de9062e],0x78
  40adb5:	les    ebx,FWORD PTR [eax]
  40adb7:	pop    edx
  40adb8:	xor    DWORD PTR [esp+ebp*2],edi
  40adbb:	outs   dx,DWORD PTR ds:[esi]
  40adbc:	iret   
  40adbd:	push   ss
  40adbe:	add    cl,al
  40adc0:	xor    eax,0xb9e90051
  40adc5:	cmp    eax,0xed7a985
  40adca:	xor    ebp,DWORD PTR [ecx-0x164a1250]
  40add0:	lock push es
  40add2:	xor    ecx,DWORD PTR [esi+0x2d8d3407]
  40add8:	adc    ebp,DWORD PTR [ebx]
  40adda:	push   eax
  40addb:	mov    edx,0xcd438b46
  40ade0:	or     al,0x37
  40ade2:	mov    ebp,esi
  40ade4:	add    al,0x2f
  40ade6:	mov    ebp,ebx
  40ade8:	cld    
  40ade9:	sub    cl,BYTE PTR [ecx-0x17e90b2b]
  40adef:	cmc    
  40adf0:	push   ebp
  40adf1:	fdiv   st(6),st
  40adf3:	xor    BYTE PTR gs:[ebx+0xbeb0d43],cl
  40adfa:	test   BYTE PTR [ebx-0x10],ch
  40adfd:	push   es
  40adfe:	add    BYTE PTR [esi],dh
  40ae00:	and    esi,DWORD PTR [edi]
  40ae02:	lea    esp,[ebp+0x4000000]
  40ae08:	sti    
  40ae09:	out    0x8a,eax
  40ae0b:	mov    ebx,ebx
  40ae0d:	(bad)  
  40ae0e:	gs mov al,0x57
  40ae11:	outs   dx,BYTE PTR ds:[esi]
  40ae12:	push   ss
  40ae13:	pop    esp
  40ae14:	and    edx,DWORD PTR [edx+eiz*2]
  40ae17:	add    al,0x23
  40ae19:	sbb    al,0x11
  40ae1b:	pop    ss
  40ae1c:	(bad)  
  40ae1d:	(bad)  
  40ae1e:	call   0xd164f0fc
  40ae23:	fcmovnb st,st(4)
  40ae25:	jge    0x40adc0
  40ae27:	sub    ecx,DWORD PTR [eax+0x24]
  40ae2a:	add    DWORD PTR ds:0xd6bb332a,ecx
  40ae30:	shl    eax,cl
  40ae32:	adc    cl,BYTE PTR [ecx+0x52]
  40ae35:	inc    ecx
  40ae36:	pusha  
  40ae37:	sub    esp,DWORD PTR [ebx]
  40ae39:	adc    BYTE PTR [eax],al
  40ae3b:	icebp  
  40ae3c:	shl    BYTE PTR [esp+ebx*1+0x1],1
  40ae40:	addr16 and al,0x14
  40ae43:	shl    DWORD PTR [edx-0x10b18c03],1
  40ae49:	(bad)  
  40ae4a:	ss dec edx
  40ae4c:	pop    es
  40ae4d:	test   al,al
  40ae4f:	dec    BYTE PTR [esi]
  40ae51:	inc    DWORD PTR [esi+edi*1-0x29]
  40ae55:	add    edi,0xea753587
  40ae5b:	jne    0x40ae9b
  40ae5d:	and    al,0x14
  40ae5f:	(bad)  
  40ae60:	fld    DWORD PTR ds:0x42761a00
  40ae66:	and    al,0x36
  40ae68:	out    dx,eax
  40ae69:	gs mov ecx,0xa000000
  40ae6f:	pop    es
  40ae70:	xor    eax,eax
  40ae72:	sar    DWORD PTR [esi],cl
  40ae74:	and    al,0x10
  40ae76:	adc    eax,0xfeebbf53
  40ae7b:	out    0x72,eax
  40ae7d:	and    al,0x1e
  40ae7f:	out    dx,eax
  40ae80:	cli    
  40ae81:	push   es
  40ae82:	or     al,BYTE PTR [edi]
  40ae84:	lea    eax,[esi+edi*8+0x6]
  40ae88:	call   0x4411d7
  40ae8d:	mov    ecx,DWORD PTR ds:0x615b5e46
  40ae93:	lock pop ebx
  40ae95:	ret    
  40ae96:	(bad)
  40ae9a:	(bad)  
  40ae9b:	sbb    al,BYTE PTR [esi]
  40ae9d:	add    dl,cl
  40ae9f:	adc    DWORD PTR [ebx],esi
  40aea1:	fistp  DWORD PTR [ebp+ebx*1-0x77]
  40aea5:	pop    ebp
  40aea6:	cli    
  40aea7:	mov    ebx,DWORD PTR [ebx-0x1c]
  40aeaa:	adc    ecx,DWORD PTR [eax-0x10]
  40aead:	mov    DWORD PTR [edi],esi
  40aeaf:	mov    edi,0x8b4e5d87
  40aeb4:	pop    ebx
  40aeb5:	enter  0x66f3,0x40
  40aeb9:	aam    0xc8
  40aebb:	lods   al,BYTE PTR ds:[esi]
  40aebc:	push   esi
  40aebd:	dec    esi
  40aebe:	in     al,dx
  40aebf:	push   ecx
  40aec0:	js     0x40aec1
  40aec2:	je     0x40aeb4
  40aec4:	test   edi,esi
  40aec6:	icebp  
  40aec7:	adc    edx,edi
  40aec9:	sub    BYTE PTR [ebx-0x13],0x11
  40aecd:	test   DWORD PTR [eax+esi*8+0x2],esi
  40aed1:	add    BYTE PTR [eax],al
  40aed3:	add    BYTE PTR [eax],al
  40aed5:	push   esp
  40aed6:	repz jge 0x172b2e93
  40aedd:	(bad)  
  40aede:	out    dx,eax
  40aedf:	add    ch,bl
  40aee1:	mov    ecx,0x68085054
  40aee6:	pop    ss
  40aee7:	or     BYTE PTR [ebx+0x4647a],cl
  40aeed:	rep ins BYTE PTR es:[edi],dx
  40aeef:	fild   DWORD PTR [ecx]
  40aef1:	in     al,dx
  40aef2:	pop    ebx
  40aef3:	ret    
  40aef4:	xchg   DWORD PTR [esi+0x5f448f73],ebp
  40aefa:	mov    al,ds:0x9f03548f
  40aeff:	mov    ecx,DWORD PTR [edi+ecx*2+0x57]
  40af03:	cmp    BYTE PTR [eax-0x18658496],dh
  40af09:	not    ecx
  40af0b:	add    al,0x0
  40af0d:	fdivr  DWORD PTR [edx-0x71]
  40af10:	mov    esp,0xfee2268b
  40af15:	retf   
  40af16:	cmp    edi,ecx
  40af18:	dec    esp
  40af1a:	bound  esp,QWORD PTR [eax-0x1df73529]
  40af20:	(bad)  
  40af21:	ss clc 
  40af23:	idiv   bh
  40af25:	mov    ah,0xef
  40af27:	(bad)  
  40af28:	mov    ah,0x1f
  40af2a:	shl    eax,1
  40af2c:	(bad)  
  40af2d:	fwait
  40af2e:	ds sbb al,0x0
  40af31:	repz push es
  40af33:	push   ebx
  40af34:	add    ebp,DWORD PTR [eax-0x40]
  40af37:	imul   ecx,DWORD PTR [edi+0x0],0x0
  40af3b:	add    BYTE PTR [ebx-0xce89f12],al
  40af41:	push   es
  40af42:	push   0xffffffc9
  40af44:	iret   
  40af45:	fnstenv [ebx]
  40af47:	in     al,dx
  40af48:	jmp    edi
  40af4a:	push   eax
  40af4b:	mov    edi,?
  40af4d:	push   es
  40af4e:	jmp    0xafef1ee1
  40af53:	loope  0x40afb2
  40af55:	xor    eax,0x12ffe139
  40af5a:	test   DWORD PTR [ebx-0xd],0xd910ac85
  40af61:	pop    es
  40af62:	pop    esp
  40af63:	inc    edi
  40af64:	inc    ebx
  40af65:	ss jb  0x40afaf
  40af68:	jmp    0x40aef7
  40af6a:	and    BYTE PTR [eax],cl
  40af6c:	sbb    ecx,DWORD PTR [eax+0x2d]
  40af6f:	add    esi,ebx
  40af71:	adc    eax,0xd2a61b77
  40af76:	(bad)  
  40af78:	mov    esi,0xf309f2ee
  40af7d:	push   es
  40af7e:	push   esi
  40af7f:	push   edi
  40af80:	add    ebp,esi
  40af82:	jmp    0xf8eb:0x9f06f309
  40af89:	add    ch,cl
  40af8b:	add    esp,DWORD PTR [ecx]
  40af8d:	(bad)  
  40af8e:	aas    
  40af8f:	mov    ecx,0x8ae906f2
  40af94:	addr16 mov ebx,0xefc7576f
  40af9a:	xor    BYTE PTR [ebx+esi*8],bl
  40af9d:	push   es
  40af9e:	pusha  
  40af9f:	inc    edi
  40afa0:	add    BYTE PTR [eax],al
  40afa2:	add    BYTE PTR [edi-0xc18747c],al
  40afa8:	shr    BYTE PTR [ebx-0x1ba44b20],0x8c
  40afaf:	aaa    
  40afb0:	sar    edi,cl
  40afb2:	add    esi,ebp
  40afb4:	ins    BYTE PTR es:[edi],dx
  40afb5:	push   es
  40afb6:	xchg   ecx,eax
  40afb7:	imul   eax,DWORD PTR [ebx-0x30],0x38ef3d70
  40afbe:	push   esp
  40afbf:	stos   DWORD PTR es:[edi],eax
  40afc0:	or     DWORD PTR [esi+0x6ed28],ecx
  40afc6:	bound  edi,QWORD PTR [ebp+0x7ca26aea]
  40afcc:	(bad)  
  40afcd:	pop    esp
  40afce:	mov    eax,ds:0xf0cc5379
  40afd3:	mov    ebp,0xc5f0eb6
  40afd8:	add    eax,0x4367e900
  40afdd:	or     BYTE PTR [edx-0x50],dh
  40afe0:	add    ch,al
  40afe2:	ret    0x5ad
  40afe5:	add    BYTE PTR [ebp+0x30],ah
  40afe8:	or     DWORD PTR [eax+eiz*8+0x720006ee],eax
  40afef:	int    0xca
  40aff1:	add    dh,ah
  40aff3:	inc    eax
  40aff4:	(bad)  
  40aff5:	je     0x40b068
  40aff7:	imul   ebx,DWORD PTR [ebx-0x5c],0x75eabc20
  40affe:	push   es
  40afff:	jle    0x40b054
  40b001:	fadd   st(3),st
  40b003:	cld    
  40b004:	mov    al,BYTE PTR [esi-0x1f]
  40b007:	add    BYTE PTR [eax],al
  40b009:	add    BYTE PTR [edx-0x2b2300ca],bh
  40b00f:	lock aas 
  40b011:	jmp    0x6c4c738d
  40b016:	mov    al,0x53
  40b018:	push   cs
  40b019:	cs xor eax,0xb8ac8adf
  40b01f:	test   ch,al
  40b021:	cmc    
  40b022:	out    dx,eax
  40b023:	inc    ecx
  40b024:	in     al,dx
  40b025:	fwait
  40b026:	mov    dl,0x14
  40b028:	mul    BYTE PTR [edx+0x35]
  40b02b:	jmp    0x40b065
  40b02d:	add    BYTE PTR [edi-0x277af245],al
  40b033:	add    al,0x0
  40b035:	add    BYTE PTR [edi+0x5d],bl
  40b038:	(bad)  
  40b039:	dec    DWORD PTR [edx-0x74357d0a]
  40b03f:	add    eax,DWORD PTR [eax]
  40b041:	(bad)  
  40b042:	rcr    esi,0x8b
  40b045:	jne    0x40b085
  40b047:	jmp    0xc084:0x38a0480
  40b04e:	mov    dh,0xd8
  40b050:	push   0x83fdf14
  40b055:	push   eax
  40b056:	ror    DWORD PTR [ebp-0x24],1
  40b059:	add    ecx,DWORD PTR [ecx+0x3a15ff12]
  40b05f:	sar    DWORD PTR [esi],1
  40b061:	add    cl,bl
  40b063:	into   
  40b064:	or     bh,bh
  40b066:	pop    ss
  40b067:	xlat   BYTE PTR ds:[ebx]
  40b068:	add    ebx,0xd85b8a46
  40b06e:	add    BYTE PTR [eax],al
  40b070:	add    BYTE PTR [edi-0x60acf7e9],bh
  40b076:	cmp    eax,0xaaff89e0
  40b07b:	out    0x74,al
  40b07d:	add    eax,DWORD PTR fs:[eax]
  40b080:	test   edx,ecx
  40b082:	pop    es
  40b083:	mov    DWORD PTR [esi+0x1b],ebp
  40b086:	add    eax,DWORD PTR [eax]
  40b088:	push   ebx
  40b089:	mov    dl,0x1f
  40b08b:	cmp    BYTE PTR [eax],al
  40b08d:	or     bh,BYTE PTR [edi-0x42]
  40b090:	ja     0xda40b1f8
  40b096:	add    ebp,0xe1e30c8b
  40b09c:	xor    cl,dl
  40b09e:	or     al,BYTE PTR [eax+eax*8+0x14d7fdd]
  40b0a5:	fimul  DWORD PTR [edx]
  40b0a7:	or     DWORD PTR [ebp-0xd],0x1f
  40b0ab:	fild   WORD PTR [edx+0x7c120c3e]
  40b0b1:	fimul  WORD PTR [ecx+ebx*2]
  40b0b4:	mov    esp,0xdeec2178
  40b0b9:	(bad)  
  40b0bb:	add    cl,BYTE PTR [ecx-0x4076dfca]
  40b0c1:	in     al,0x57
  40b0c3:	adc    eax,DWORD PTR [ecx]
  40b0c5:	repz fisttp WORD PTR [ecx+0x4368fb44]
  40b0cc:	add    al,0x68
  40b0ce:	jo     0x40b052
  40b0d0:	add    bl,dh
  40b0d2:	(bad)  
  40b0d4:	dec    esp
  40b0d5:	add    BYTE PTR [eax],al
  40b0d7:	add    BYTE PTR [ebx+0x3a],al
  40b0da:	clc    
  40b0db:	mov    WORD PTR [esi+0x5c503267],gs
  40b0e1:	mov    ebx,0xdfb31612
  40b0e6:	add    ebx,0x6a04f9ff
  40b0ec:	sti    
  40b0ed:	push   0x48
  40b0ef:	pushf  
  40b0f0:	mov    ds:0xf2aca687,eax
  40b0f5:	fild   QWORD PTR [eax+0x1]
  40b0f8:	cdq    
  40b0f9:	mov    bl,0x8f
  40b0fb:	inc    esp
  40b0fc:	jnp    0x40b0ee
  40b0fe:	imul   eax,DWORD PTR [eax],0x268df89
  40b104:	push   0xa903eb25
  40b109:	loope  0x40b10d
  40b10b:	mov    ebp,DWORD PTR [ebx]
  40b10d:	arpl   WORD PTR [edx+0x34b770e],di
  40b113:	add    bl,dh
  40b115:	mov    bh,0x7a
  40b117:	cmp    ebx,esi
  40b119:	(bad)  
  40b11b:	xor    eax,0x142c1db
  40b120:	repz dec ax
  40b123:	clc    
  40b124:	jo     0x40b12c
  40b126:	and    DWORD PTR [esi+ecx*2],eax
  40b129:	add    esi,DWORD PTR [edx-0x2e]
  40b12c:	int3   
  40b12d:	aas    
  40b12e:	adc    eax,0xa381bdde
  40b133:	fcmovne st,st(1)
  40b135:	imul   esi,DWORD PTR [edx+0x4a],0xf3a78223
  40b13c:	add    BYTE PTR [eax],al
  40b13e:	add    BYTE PTR [edi-0x3a],ch
  40b141:	jnp    0x40b14a
  40b143:	loopne 0x40b121
  40b145:	add    DWORD PTR [edx],eax
  40b147:	push   si
  40b149:	adc    eax,0xeb2660ec
  40b14e:	add    esi,esp
  40b150:	popf   
  40b151:	test   al,0x87
  40b153:	xchg   BYTE PTR [edx+0xd],bl
  40b156:	push   0xffffffc6
  40b158:	sbb    DWORD PTR [ebx+0x63d7643b],ebx
  40b15e:	mov    dl,0xdf
  40b160:	pop    ss
  40b161:	out    0x94,al
  40b163:	pushf  
  40b164:	sbb    DWORD PTR [eax+0x19bf1866],esp
  40b16a:	and    eax,0x476fd478
  40b16f:	dec    ebx
  40b170:	sbb    DWORD PTR [ebx+0x18],0x3c
  40b174:	aad    0x8d
  40b176:	in     al,dx
  40b177:	xchg   ebp,eax
  40b178:	sbb    eax,0x79903e9
  40b17d:	jb     0x40b145
  40b17f:	ja     0x40b1c4
  40b181:	lods   eax,DWORD PTR ds:[esi]
  40b182:	in     al,dx
  40b183:	(bad)  
  40b184:	sbb    ecx,ebp
  40b186:	add    esi,DWORD PTR [eax-0x33]
  40b189:	adc    ebx,ebp
  40b18b:	mov    edi,0x79e2d3ce
  40b190:	push   ebx
  40b191:	lea    ecx,[ecx-0x26bb21ff]
  40b197:	cmc    
  40b198:	aam    0xf9
  40b19a:	ret    
  40b19b:	sub    al,0x18
  40b19d:	aaa    
  40b19e:	inc    esi
  40b19f:	sub    ch,cl
  40b1a1:	push   DWORD PTR [eax+eax*1-0x7fe50000]
  40b1a8:	inc    esp
  40b1a9:	loope  0x40b216
  40b1ab:	dec    esp
  40b1ac:	add    al,0x72
  40b1ae:	js     0x40b204
  40b1b0:	add    ecx,ebp
  40b1b2:	lock cmp al,0x57
  40b1b5:	bound  esi,QWORD PTR [ebp-0xd45b414]
  40b1bb:	push   es
  40b1bc:	mov    esi,DWORD PTR [eax+esi*4-0x479b397f]
  40b1c3:	dec    edi
  40b1c4:	or     ebx,DWORD PTR [edi+0x1e0436d]
  40b1ca:	mov    ds:0x9be90019,al
  40b1cf:	or     al,0x8d
  40b1d1:	cmp    al,0x8f
  40b1d3:	in     al,dx
  40b1d4:	jle    0x40b1f0
  40b1d6:	test   DWORD PTR [esi],0x2d1ca984
  40b1dc:	mov    edi,DWORD PTR [ebx+eax*1]
  40b1df:	int    0x44
  40b1e1:	mov    esi,0x3df589f1
  40b1e6:	add    edx,esp
  40b1e8:	je     0x40b16b
  40b1ea:	dec    eax
  40b1eb:	div    DWORD PTR [ecx+ebp*8]
  40b1ee:	lock mov DWORD PTR [edi+0x4c81f620],edi
  40b1f5:	mov    DWORD PTR [eax-0x6a],ecx
  40b1f8:	das    
  40b1f9:	jmp    0xf5a539ee
  40b1fe:	lock rol DWORD PTR [ebp+edx*4+0x7b],cl
  40b203:	xor    ebx,eax
  40b205:	mov    edx,0x8144d546
  40b20a:	add    BYTE PTR [eax],al
  40b20c:	add    BYTE PTR [ebx+0x4b],ch
  40b20f:	call   0x3803677e
  40b214:	and    ch,BYTE PTR [edx+ebx*8-0x2cd49af2]
  40b21b:	dec    BYTE PTR [esi+0x17]
  40b21e:	pop    ebx
  40b21f:	lock add BYTE PTR [edx+0x35],al
  40b223:	add    eax,DWORD PTR [eax]
  40b225:	fidivr DWORD PTR [esi+0x53]
  40b228:	mov    esp,0x8bc84d51
  40b22d:	ja     0x40b1fa
  40b22f:	xchg   DWORD PTR [ebp+0x2e],edx
  40b232:	test   DWORD PTR [ebx-0x4c],edx
  40b235:	mov    BYTE PTR [edi-0x48],bl
  40b238:	int    0x8a
  40b23a:	pop    es
  40b23b:	push   0x38
  40b23d:	jp     0x40b257
  40b23f:	mov    DWORD PTR [ebp-0x56],ecx
  40b242:	jge    0x40b287
  40b244:	hlt    
  40b245:	and    edi,DWORD PTR ds:0xc01f89c4
  40b24b:	les    eax,FWORD PTR [ebp-0x1e]
  40b24e:	or     al,ch
  40b250:	cmc    
  40b251:	ss or  eax,0xd64e8300
  40b257:	jle    0x40b2d6
  40b259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25a:	or     DWORD PTR [edi],ecx
  40b25c:	test   cl,al
  40b25e:	lods   eax,DWORD PTR ds:[esi]
  40b25f:	std    
  40b260:	push   DWORD PTR ds:0xf0e8dc35
  40b266:	or     eax,DWORD PTR [eax]
  40b268:	add    ah,bh
  40b26a:	loop   0x40b29e
  40b26c:	add    ecx,DWORD PTR [edx+0x7]
  40b26f:	push   DWORD PTR [ebp+0x0]
  40b272:	add    BYTE PTR [eax],al
  40b274:	push   0xffffffe2
  40b276:	sub    al,BYTE PTR [ebx]
  40b278:	pop    edx
  40b279:	pop    es
  40b27a:	push   DWORD PTR [ebp+0x6a]
  40b27d:	loop   0x40b2a1
  40b27f:	add    ecx,DWORD PTR [edx+0x7]
  40b282:	cmp    DWORD PTR [ebp-0x72],esi
  40b285:	call   FWORD PTR [esi+0x5b1105c0]
  40b28b:	leave  
  40b28c:	dec    eax
  40b28d:	add    al,BYTE PTR [eax]
  40b28f:	push   ebp
  40b290:	xchg   ecx,eax
  40b291:	fiadd  WORD PTR [ecx-0x15746d1c]
  40b297:	sbb    BYTE PTR [ecx+0x16],cl
  40b29a:	push   esi
  40b29b:	push   edi
  40b29c:	repz push 0xb1defedd
  40b2a2:	cmc    
  40b2a3:	aas    
  40b2a4:	repz push esi
  40b2a6:	inc    eax
  40b2a7:	and    al,0x7
  40b2a9:	push   ebp
  40b2aa:	inc    ebx
  40b2ab:	add    al,0x98
  40b2ad:	xor    BYTE PTR ds:0xc5dcf300,al
  40b2b3:	dec    edi
  40b2b4:	int3   
  40b2b5:	shl    esi,cl
  40b2b7:	adc    DWORD PTR [ebx],esi
  40b2b9:	loopne 0x40b2a5
  40b2bb:	xchg   esp,eax
  40b2bc:	or     al,0xe0
  40b2be:	add    cl,BYTE PTR [ebx+0x3ae7adc3]
  40b2c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2c5:	push   ebx
  40b2c6:	xor    al,0x55
  40b2c8:	cmp    al,0x8d
  40b2ca:	ret    0x8ee7
  40b2cd:	aad    0xd9
  40b2cf:	(bad)  
  40b2d0:	outs   dx,DWORD PTR ds:[esi]
  40b2d1:	and    BYTE PTR [ecx+0x27],dl
  40b2d4:	es in  eax,dx
  40b2d6:	ret    
  40b2d7:	push   esi
  40b2d8:	add    BYTE PTR [eax],al
  40b2da:	add    BYTE PTR [ebx],dh
  40b2dc:	mov    eax,0xb97cfab9
  40b2e1:	jle    0x40b2a2
  40b2e3:	(bad)  
  40b2e4:	(bad)  
  40b2e5:	lea    eax,[esi-0x9]
  40b2e8:	push   esp
  40b2e9:	or     DWORD PTR [ebx+0x6802dff2],0x33
  40b2f0:	add    DWORD PTR ds:0xefa0c300,ecx
  40b2f6:	pavgb  mm3,QWORD PTR [edi]
  40b2f9:	add    al,0x85
  40b2fb:	xor    edi,esp
  40b2fd:	lock (bad) 
  40b2ff:	out    0xeb,al
  40b301:	cmc    
  40b302:	aas    
  40b303:	repz data16 aas 
  40b306:	and    al,0xf
  40b308:	js     0x40b356
  40b30a:	das    
  40b30b:	repz fisttp WORD PTR [ebp+0x4f52d8ef]
  40b312:	mov    bh,0xd8
  40b314:	pop    edx
  40b315:	or     al,BYTE PTR [esi+ebp*2-0xcfc17f9]
  40b31c:	jge    0x40b344
  40b31e:	jmp    0x40b35d
  40b320:	pop    ss
  40b321:	jmp    0x58c1929
  40b326:	and    BYTE PTR [ebx-0x37],al
  40b329:	lods   al,BYTE PTR ds:[esi]
  40b32a:	pop    ds
  40b32b:	or     BYTE PTR [edi],al
  40b32d:	jo     0x40b396
  40b32f:	pop    ss
  40b330:	sub    eax,DWORD PTR [ecx-0x1a]
  40b333:	test   BYTE PTR [esi],al
  40b335:	jmp    0xfb9b6958
  40b33a:	xor    ebx,ebx
  40b33c:	pop    ebp
  40b33d:	jmp    0x40b342
  40b33f:	add    BYTE PTR [eax],al
  40b341:	add    bl,dh
  40b343:	test   DWORD PTR [edi+ebx*1+0x75de0b0f],edx
  40b34a:	ins    BYTE PTR es:[edi],dx
  40b34b:	mov    ch,BYTE PTR [eax]
  40b34d:	dec    edi
  40b34e:	sti    
  40b34f:	leave  
  40b350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b351:	pop    ds
  40b352:	rol    DWORD PTR [edi],cl
  40b354:	jmp    0x7f50a65c
  40b359:	(bad)  
  40b35a:	std    
  40b35b:	adc    BYTE PTR [edi+0x7006f304],0x68
  40b362:	xlat   BYTE PTR ds:[ebx]
  40b363:	out    dx,al
  40b364:	popa   
  40b365:	inc    ecx
  40b366:	out    dx,eax
  40b367:	fisub  WORD PTR [ebp+0x6d06f243]
  40b36d:	(bad)  
  40b36e:	cmc    
  40b36f:	mov    bl,BYTE PTR [ebx+0x4]
  40b372:	repz push es
  40b374:	(bad)  
  40b375:	cli    
  40b376:	icebp  
  40b377:	xor    al,BYTE PTR ds:0xf1457ffc
  40b37d:	xor    ebx,DWORD PTR [ebx+0x43]
  40b380:	aam    0x3
  40b382:	repz mov ch,BYTE PTR [eax+0x247ecc4f]
  40b389:	and    BYTE PTR ds:0xfd200487,al
  40b38f:	push   es
  40b390:	idiv   edx
  40b392:	imul   ecx,DWORD PTR [ecx+0x0],0x8c5167ed
  40b399:	call   0x71a8ba8e
  40b39e:	(bad)  
  40b39f:	sar    dh,1
  40b3a1:	mov    ecx,0xfa0ffa1b
  40b3a6:	add    BYTE PTR [eax],al
  40b3a8:	add    BYTE PTR [eax+0x43298506],dh
  40b3ae:	adc    ecx,DWORD PTR [ebx-0x78821b52]
  40b3b4:	imul   esi,eax,0x33620006
  40b3ba:	sub    esp,DWORD PTR [eax]
  40b3bc:	ret    
  40b3bd:	icebp  
  40b3be:	xor    ebp,eax
  40b3c0:	mov    esi,0x64000501
  40b3c5:	mov    bh,0x4f
  40b3c7:	push   ss
  40b3c8:	add    DWORD PTR ds:0x2ce90210,edi
  40b3ce:	nop
  40b3cf:	jae    0x40b3b4
  40b3d1:	retf   0x2444
  40b3d4:	xlat   BYTE PTR ds:[ebx]
  40b3d5:	jo     0x40b423
  40b3d7:	and    al,0xdf
  40b3d9:	xchg   ebp,eax
  40b3da:	push   esi
  40b3db:	mov    bl,0x2
  40b3dd:	hlt    
  40b3de:	fdivrp st(7),st
  40b3e0:	add    al,0xef
  40b3e2:	push   es
  40b3e3:	mov    DWORD PTR [edx],ebp
  40b3e5:	repz enter 0xd43,0x82
  40b3ea:	pop    es
  40b3eb:	or     BYTE PTR [ebp+0x13],0xf9
  40b3ef:	add    al,0x3c
  40b3f1:	arpl   WORD PTR [ebp-0x3c],di
  40b3f4:	jb     0x40b420
  40b3f6:	call   0x731af80
  40b3fb:	dec    ebp
  40b3fc:	push   0xffffffd4
  40b3fe:	sub    bl,BYTE PTR [eax]
  40b400:	loope  0x40b434
  40b402:	inc    esp
  40b403:	and    al,0xf6
  40b405:	icebp  
  40b406:	add    DWORD PTR [ebx-0x33],0x38
  40b40a:	sbb    BYTE PTR [ebp-0x2e],al
  40b40d:	add    BYTE PTR [eax],al
  40b40f:	add    BYTE PTR [edx-0x61fff0f6],bl
  40b415:	sbb    bh,bh
  40b417:	call   FWORD PTR [ebp-0xffba27e]
  40b41d:	or     BYTE PTR [esi-0x18],dl
  40b420:	push   ebx
  40b421:	out    dx,eax
  40b422:	add    BYTE PTR [eax],al
  40b424:	xchg   esi,eax
  40b425:	ret    
  40b426:	jb     0x40b42d
  40b428:	aam    0xf
  40b42a:	and    al,0x17
  40b42c:	or     edi,ebx
  40b42e:	fidivr DWORD PTR [eax]
  40b430:	sahf   
  40b431:	out    dx,eax
  40b432:	push   ss
  40b433:	je     0x40b40a
  40b435:	or     ah,0xe8
  40b438:	bound  ebx,QWORD PTR [esi]
  40b43a:	add    BYTE PTR [eax],al
  40b43c:	push   ecx
  40b43d:	inc    esi
  40b43e:	add    al,0x83
  40b440:	add    bh,dl
  40b442:	jl     0x40b47f
  40b444:	pop    ecx
  40b445:	lods   al,BYTE PTR ds:[esi]
  40b446:	pop    ss
  40b447:	jge    0x40b3d3
  40b449:	scas   al,BYTE PTR es:[edi]
  40b44a:	adc    ecx,DWORD PTR [ecx+edi*4]
  40b44d:	inc    ebx
  40b44e:	add    BYTE PTR [ebx],ch
  40b450:	push   esi
  40b451:	out    dx,eax
  40b452:	sbb    edi,DWORD PTR ds:0xa2c31a
  40b458:	and    al,0x1f
  40b45a:	push   esi
  40b45b:	push   edi
  40b45c:	jo     0x40b468
  40b45e:	pop    eax
  40b45f:	call   0x3e65d6
  40b464:	push   ss
  40b465:	retf   
  40b466:	jae    0x40b47f
  40b468:	mov    ecx,0xb2c0331f
  40b46d:	or     edi,edx
  40b46f:	(bad)  
  40b470:	cmp    eax,0x75be86
  40b475:	add    BYTE PTR [eax],al
  40b477:	pusha  
  40b478:	adc    al,0x57
  40b47a:	push   0x48
  40b47c:	or     ebp,eax
  40b47e:	dec    ebp
  40b47f:	mov    al,ds:0x27fffdb7
  40b484:	pop    es
  40b485:	adc    eax,DWORD PTR [eax+0x5a]
  40b488:	add    BYTE PTR [edx+0x24],0x3e
  40b48c:	mov    eax,0xbff3e834
  40b491:	add    eax,DWORD PTR [eax]
  40b493:	repz pop ss
  40b495:	in     al,dx
  40b496:	pop    ds
  40b497:	repnz fld QWORD PTR [edx]
  40b49a:	mov    esi,DWORD PTR [ecx+ebp*8-0x220d7001]
  40b4a1:	add    dl,BYTE PTR [eax+0xc]
  40b4a4:	mov    edx,0xddb311d2
  40b4a9:	mov    DWORD PTR [esi-0x9],eax
  40b4ac:	push   esp
  40b4ad:	test   BYTE PTR [ebx+0x6802ddf2],cl
  40b4b3:	xor    esi,DWORD PTR [ebp+0x4534fff9]
  40b4b9:	icebp  
  40b4ba:	verr   WORD PTR [eax-0x1a4c7afe]
  40b4c1:	jg     0x40b4b8
  40b4c3:	into   
  40b4c4:	sbb    eax,0x58f7ead7
  40b4c9:	aas    
  40b4ca:	add    al,0xf0
  40b4cc:	and    BYTE PTR [edi+edi*8],dh
  40b4cf:	fsubp  st(7),st
  40b4d1:	icebp  
  40b4d2:	aas    
  40b4d3:	repz pushf 
  40b4d5:	xor    al,0x5d
  40b4d7:	dec    eax
  40b4d8:	pop    ecx
  40b4d9:	loope  0x40b537
  40b4db:	add    BYTE PTR [eax],al
  40b4dd:	add    BYTE PTR [eax-0x10dbc12a],dh
  40b4e3:	fisubr WORD PTR [ebx+ecx*4]
  40b4e6:	and    BYTE PTR ds:0x20786ffe,0x4
  40b4ed:	je     0x40b4e4
  40b4ef:	adc    eax,0xdff3c7ec
  40b4f4:	add    cl,BYTE PTR [ebx+0x3c21e35]
  40b4fa:	repz pop edx
  40b4fc:	int3   
  40b4fd:	je     0x40b4ee
  40b4ff:	mov    WORD PTR [eax+ebp*8],cs
  40b502:	pushf  
  40b503:	loopne 0x40b507
  40b505:	add    BYTE PTR [eax+0x6],dh
  40b508:	add    al,0xeb
  40b50a:	add    DWORD PTR [edi],eax
  40b50c:	jb     0x40b50b
  40b50e:	jno    0x40b4d8
  40b510:	in     al,0x34
  40b512:	outs   dx,BYTE PTR ds:[esi]
  40b513:	(bad)  
  40b514:	sbb    esi,esp
  40b516:	call   0x29a2:0x13108dfe
  40b51d:	add    al,0x1c
  40b51f:	hlt    
  40b520:	in     al,0xf2
  40b522:	aam    0x6
  40b524:	add    BYTE PTR [esi],0xa3
  40b527:	pusha  
  40b528:	loope  0x40b500
  40b52a:	mov    edi,0xf34291e6
  40b52f:	int    0xf3
  40b531:	or     esp,eax
  40b533:	inc    esi
  40b534:	jmp    0xea9461b9
  40b539:	adc    DWORD PTR [ebx-0x73029037],esi
  40b53f:	pop    es
  40b540:	sub    al,BYTE PTR [edx+0x58000000]
  40b546:	and    ebp,ebp
  40b548:	add    eax,DWORD PTR [esi-0x5]
  40b54b:	sub    eax,0xe95ddb0d
  40b550:	add    esi,ebx
  40b552:	mov    esi,eax
  40b554:	add    ecx,eax
  40b556:	sbb    BYTE PTR [edx-0x3],ah
  40b559:	lods   eax,DWORD PTR ds:[esi]
  40b55a:	push   edx
  40b55b:	(bad)  
  40b55e:	(bad)  
  40b55f:	jnp    0x40b567
  40b561:	inc    ebx
  40b562:	into   
  40b563:	mov    bl,0xe3
  40b565:	dec    ecx
  40b566:	dec    ecx
  40b567:	jmp    0xda439d42
  40b56c:	inc    ebx
  40b56d:	repz loope 0x40b565
  40b570:	xor    ecx,DWORD PTR [ecx]
  40b572:	pop    es
  40b573:	fimul  WORD PTR [edi]
  40b575:	xchg   ebx,eax
  40b576:	mov    eax,ds:0xf36c0429
  40b57b:	loopne 0x40b56d
  40b57d:	and    al,0x7
  40b57f:	ins    BYTE PTR es:[edi],dx
  40b580:	(bad)  
  40b581:	out    0x2,eax
  40b583:	sti    
  40b584:	ret    
  40b585:	dec    ecx
  40b586:	add    al,BYTE PTR [eax]
  40b588:	pusha  
  40b589:	dec    ebp
  40b58a:	popf   
  40b58b:	add    BYTE PTR [ebx-0x567cf90d],ch
  40b591:	repz ss push 0xfffffff1
  40b595:	pop    ds
  40b596:	adc    ah,al
  40b598:	inc    edx
  40b599:	mov    dl,0x6
  40b59b:	push   esp
  40b59d:	and    al,0xf8
  40b59f:	aas    
  40b5a0:	jmp    0xc5bc3dd8
  40b5a5:	adc    al,0xcd
  40b5a7:	jae    0x40b596
  40b5a9:	add    BYTE PTR [eax],al
  40b5ab:	add    bl,ah
  40b5ad:	(bad)  
  40b5ae:	jmp    0x8aed:0x24591fdb
  40b5b5:	push   es
  40b5b6:	call   DWORD PTR [edi+ecx*1]
  40b5b9:	mov    al,ds:0xf3c7e942
  40b5be:	add    edi,edx
  40b5c0:	xor    BYTE PTR [edi],al
  40b5c2:	ret    0xf0ed
  40b5c5:	xchg   DWORD PTR [ebx+0x5],edi
  40b5c8:	repz push es
  40b5ca:	je     0x40b5a7
  40b5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5cd:	pop    eax
  40b5ce:	and    al,0xe5
  40b5d0:	pop    edx
  40b5d1:	pop    es
  40b5d2:	(bad)  
  40b5d3:	(bad)  
  40b5d5:	mov    eax,ds:0xf39fe942
  40b5da:	(bad)  
  40b5db:	stc    
  40b5dc:	xor    BYTE PTR [edi],al
  40b5de:	ret    0xf0e5
  40b5e1:	xor    al,0x8b
  40b5e3:	stc    
  40b5e4:	sbb    eax,0x15d673cd
  40b5e9:	shl    BYTE PTR [ebx-0x26],cl
  40b5ec:	ss int3 
  40b5ee:	xor    esi,DWORD PTR [esi]
  40b5f0:	xchg   edi,eax
  40b5f1:	mov    esp,0x83a7e6fe
  40b5f6:	cmc    
  40b5f7:	push   esp
  40b5f8:	mov    ds:0x47afe835,al
  40b5fd:	int    0xfe
  40b5ff:	das    
  40b600:	xor    dh,BYTE PTR [edx]
  40b602:	push   edi
  40b603:	add    bl,bh
  40b605:	jge    0x40b679
  40b607:	and    al,0x3e
  40b609:	jg     0x40b685
  40b60b:	and    al,0x2a
  40b60d:	jg     0x40b659
  40b60f:	and    al,0x0
  40b611:	add    BYTE PTR [eax],al
  40b613:	and    dh,BYTE PTR [edi+0x14b559a2]
  40b619:	ret    0x4a0c
  40b61c:	dec    ebp
  40b61d:	enter  0x2e74,0x1a
  40b621:	mov    esi,DWORD PTR [esi+ebp*1+0x0]
  40b625:	lea    eax,[eax+eiz*1]
  40b628:	pop    ds
  40b629:	repnz dec eax
  40b62b:	jecxz  0x40b5ad
  40b62d:	adc    al,BYTE PTR [esi]
  40b62f:	xchg   edx,eax
  40b630:	xlat   BYTE PTR ds:[ebx]
  40b631:	jae    0x40b62a
  40b633:	hlt    
  40b634:	enter  0x2,0x3c
  40b638:	mov    bl,0x72
  40b63a:	and    al,0x6
  40b63c:	loopne 0x40b6a4
  40b63e:	inc    DWORD PTR [ebp-0x4d]
  40b641:	mov    eax,esi
  40b643:	dec    edi
  40b644:	mov    edx,0x3c351272
  40b649:	and    al,0xc
  40b64b:	adc    eax,0x6c0c243c
  40b650:	mov    dl,0x13
  40b652:	xor    BYTE PTR [edi+eax*2+0x40e8300],bl
  40b659:	mov    eax,esi
  40b65b:	je     0x40b622
  40b65d:	push   es
  40b65e:	add    BYTE PTR [ecx],dl
  40b660:	add    edx,DWORD PTR [esi-0x75]
  40b663:	or     al,BYTE PTR [edi]
  40b665:	retf   
  40b666:	call   0x3e6881
  40b66b:	push   cs
  40b66c:	enter  0x1972,0x11
  40b670:	cli    
  40b671:	add    dh,BYTE PTR [edi]
  40b673:	imul   esi,DWORD PTR [edx+0x2472],0xff0d8600
  40b67d:	adc    eax,0x3ed0da
  40b682:	repz pusha 
  40b684:	enter  0xf20b,0xdc
  40b688:	jge    0x40b64f
  40b68a:	dec    eax
  40b68b:	fist   WORD PTR ds:0x79fb5c0
  40b691:	add    BYTE PTR [ebp+0xaff16ec],ah
  40b697:	sbb    ch,BYTE PTR [eax]
  40b699:	or     al,0xc5
  40b69b:	retf   0xf07d
  40b69e:	or     BYTE PTR [esi+0x7d],ch
  40b6a1:	or     esi,ebp
  40b6a3:	addr16 hlt 
  40b6a5:	cmp    DWORD PTR [ecx],edi
  40b6a7:	repnz add al,BYTE PTR [edi-0x4d]
  40b6ab:	enter  0x244e,0xe7
  40b6af:	iret   
  40b6b0:	loope  0x40b6e4
  40b6b2:	xor    esi,esp
  40b6b4:	xor    edx,eax
  40b6b6:	out    dx,eax
  40b6b7:	fld    QWORD PTR [ecx]
  40b6b9:	mov    dh,0x21
  40b6bb:	aam    0x98
  40b6bd:	ror    al,0x1f
  40b6c0:	fcomip st,st(0)
  40b6c2:	in     al,dx
  40b6c3:	lods   al,BYTE PTR ds:[esi]
  40b6c4:	or     BYTE PTR es:[ecx-0x20],bl
  40b6c8:	shl    DWORD PTR [ebx+0x17],1
  40b6cb:	aam    0xd1
  40b6cd:	adc    al,0x1f
  40b6cf:	mov    dl,0x42
  40b6d1:	add    BYTE PTR [eax+0x1c],dh
  40b6d4:	add    dl,al
  40b6d6:	sti    
  40b6d7:	fistp  QWORD PTR [eax]
  40b6d9:	push   edi
  40b6da:	cli    
  40b6db:	ret    
  40b6dc:	es or  al,0x0
  40b6df:	add    BYTE PTR [eax],al
  40b6e1:	inc    ecx
  40b6e2:	mov    ebp,0xe3d75c1b
  40b6e7:	adc    eax,0x36f078ff
  40b6ec:	jmp    DWORD PTR [edi]
  40b6ee:	mov    esp,0xb39455f6
  40b6f3:	push   cs
  40b6f4:	push   ss
  40b6f5:	xor    esp,eax
  40b6f7:	test   ebx,eax
  40b6f9:	mul    DWORD PTR [edx-0x3c]
  40b6fc:	jae    0x40b6ea
  40b6fe:	push   es
  40b6ff:	cs dec edx
  40b701:	mov    eax,0xe500054a
  40b706:	jecxz  0x40b721
  40b708:	(bad)  
  40b709:	lds    ebp,FWORD PTR [eax]
  40b70b:	stos   DWORD PTR es:[edi],eax
  40b70c:	sti    
  40b70d:	pop    esp
  40b70e:	jge    0x40b6be
  40b710:	ficomp WORD PTR [ebp+0x10]
  40b713:	and    eax,0xd255f728
  40b718:	push   cs
  40b719:	cmp    edx,DWORD PTR [edx-0x2a]
  40b71c:	push   edi
  40b71d:	loop   0x40b73c
  40b71f:	test   al,0x33
  40b721:	mov    ds:0xff2814c9,al
  40b726:	leave  
  40b727:	sti    
  40b728:	adc    edi,ebp
  40b72a:	inc    esi
  40b72b:	jmp    0x393be7b6
  40b730:	add    al,0x8
  40b732:	add    eax,0x332c3bb
  40b737:	jmp    0x3d43aeba
  40b73c:	inc    esi
  40b73d:	repz xor BYTE PTR [edx],bl
  40b740:	les    ebx,FWORD PTR [ebp+0x572f83]
  40b746:	add    BYTE PTR [eax],al
  40b748:	adc    edi,DWORD PTR [esi+0x13]
  40b74b:	fcomp  QWORD PTR [ecx-0x3a8116bb]
  40b751:	jge    0x40b74d
  40b753:	push   cs
  40b754:	pop    edi
  40b755:	and    ebp,ebp
  40b757:	pop    eax
  40b758:	test   BYTE PTR [ebp-0xac02dca],0xa8
  40b75f:	test   BYTE PTR [edx-0xcfc0f02],dh
  40b765:	or     eax,0x159b5528
  40b76a:	sub    DWORD PTR [edx],esi
  40b76c:	inc    ebp
  40b76d:	(bad)
  40b770:	or     al,bh
  40b772:	lock sti 
  40b774:	xchg   esp,eax
  40b775:	leave  
  40b776:	jmp    0x185145
  40b77b:	popa   
  40b77c:	repz add ch,BYTE PTR [edx+ebp*4+0x1a5730f0]
  40b784:	mov    ds:0xa864c014,al
  40b789:	push   ebp
  40b78a:	bound  ebx,QWORD PTR es:[ecx+eiz*8-0x56]
  40b78f:	sub    dh,bh
  40b791:	jge    0x40b784
  40b793:	push   0x1
  40b795:	retf   0xec73
  40b798:	mov    al,0x87
  40b79a:	(bad)
  40b79d:	leave  
  40b79e:	(bad)  
  40b79f:	repnz xor DWORD PTR [edi-0x10],edx
  40b7a3:	xchg   edx,eax
  40b7a4:	repz pop edi
  40b7a6:	shl    cl,0x28
  40b7a9:	leave  
  40b7aa:	(bad)  
  40b7ab:	jmp    0xf77c:0x2e000000
  40b7b2:	adc    al,0xd2
  40b7b4:	inc    edi
  40b7b5:	imul   esi,DWORD PTR [eax-0x16fffee9],0x2aaae162
  40b7bf:	out    dx,eax
  40b7c0:	ficom  WORD PTR [eax+0x6c]
  40b7c3:	and    cl,al
  40b7c5:	sub    DWORD PTR [ecx],0xffffff9b
  40b7c8:	mov    ebx,DWORD PTR es:[ebx+edi*8]
  40b7cc:	call   0xe107:0xc849e942
  40b7d3:	lock push es
  40b7d5:	(bad)  
  40b7d6:	in     al,dx
  40b7d7:	in     al,dx
  40b7d8:	call   0x82e8:0x9f7e942
  40b7df:	cs pop es
  40b7e1:	je     0x40b7ca
  40b7e3:	aas    
  40b7e4:	inc    esp
  40b7e5:	and    al,0xf5
  40b7e7:	cmp    DWORD PTR [ecx],eax
  40b7e9:	mov    esp,DWORD PTR [esi]
  40b7eb:	loop   0x40b815
  40b7ed:	ret    0xf0ed
  40b7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f1:	add    edi,DWORD PTR ds:0x570736
  40b7f7:	and    DWORD PTR [ebx+0x4506c083],edi
  40b7fd:	mov    edx,DWORD PTR ds:0x4169f2
  40b803:	adc    DWORD PTR [ebx-0x337d3699],ecx
  40b809:	(bad)  
  40b80a:	(bad)  
  40b80b:	fild   WORD PTR [edi+0x10]
  40b80e:	clc    
  40b80f:	inc    ebp
  40b810:	mov    bh,0xfd
  40b812:	add    DWORD PTR [eax],0x0
  40b815:	add    BYTE PTR [ebx],al
  40b817:	mov    dh,0x73
  40b819:	or     ebx,ecx
  40b81b:	lods   al,BYTE PTR ds:[esi]
  40b81c:	push   es
  40b81d:	or     BYTE PTR [edx+0x4],bl
  40b820:	dec    edi
  40b821:	jne    0x40b7ab
  40b823:	sti    
  40b824:	div    DWORD PTR [eax+eiz*1+0x4b]
  40b828:	into   
  40b829:	imul   eax,DWORD PTR [ebx+0x1a0006cc],0xb1e8be0e
  40b833:	inc    edx
  40b834:	add    al,ch
  40b836:	push   0xffffffb8
  40b838:	std    
  40b839:	jmp    DWORD PTR [ebx-0x2653fc08]
  40b83f:	add    bl,BYTE PTR [esi+0x5f]
  40b842:	pop    ecx
  40b843:	adc    DWORD PTR [ebx-0x15862614],ecx
  40b849:	stos   DWORD PTR es:[edi],eax
  40b84a:	dec    ecx
  40b84b:	add    al,0x53
  40b84d:	jmp    edi
  40b84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b850:	adc    BYTE PTR [eax-0x26],al
  40b853:	cmp    BYTE PTR [ebx+0x8],0x2d
  40b857:	pop    es
  40b858:	test   bh,dl
  40b85a:	retf   0x3
  40b85d:	or     DWORD PTR [edi+0x560efec7],0xffffff89
  40b864:	(bad)  
  40b865:	dec    edx
  40b867:	cmp    BYTE PTR [ebx+0x10],0xca
  40b86b:	push   es
  40b86c:	test   bl,al
  40b86e:	call   0xfa6a:0xf3ff0003
  40b875:	out    0xa9,eax
  40b877:	test   edi,0xfe
  40b87d:	outs   dx,BYTE PTR ds:[esi]
  40b87e:	sbb    eax,0x528c1056
  40b883:	sti    
  40b884:	out    0x86,eax
  40b886:	iret   
  40b887:	into   
  40b888:	(bad)  
  40b889:	jbe    0x40b8a8
  40b88b:	add    BYTE PTR [esp+ecx*2+0x650002dd],al
  40b892:	and    bh,al
  40b894:	add    BYTE PTR [ebp+0x6e0e5808],bh
  40b89a:	jne    0x40b8a1
  40b89c:	add    al,0xf3
  40b89e:	fnstsw WORD PTR [edi-0x51]
  40b8a1:	cmc    
  40b8a2:	aad    0x2
  40b8a4:	add    BYTE PTR [eax-0x1a],bl
  40b8a7:	jg     0x40b920
  40b8a9:	imul   DWORD PTR [edx]
  40b8ab:	xchg   esp,eax
  40b8ac:	add    ebp,edi
  40b8ae:	fld    QWORD PTR [edx]
  40b8b0:	sub    DWORD PTR [esi-0x5174fd33],0xffffffe1
  40b8b7:	jnp    0x40b8fd
  40b8b9:	jmp    0x40b8aa
  40b8bb:	push   esp
  40b8bc:	mov    edx,0x2dbf3
  40b8c1:	retf   0xf3f2
  40b8c4:	jb     0x40b8b5
  40b8c6:	loopne 0x40b85d
  40b8c8:	push   esp
  40b8c9:	jecxz  0x40b873
  40b8cb:	xchg   ebp,eax
  40b8cc:	add    eax,0x2a968e4
  40b8d1:	mov    al,0x67
  40b8d3:	add    eax,DWORD PTR [ebx+esi*8]
  40b8d6:	scas   eax,DWORD PTR es:[edi]
  40b8d7:	or     ecx,eax
  40b8d9:	gs ret 0xc119
  40b8dd:	dec    ebp
  40b8de:	pop    ss
  40b8df:	push   es
  40b8e0:	sldt   WORD PTR [eax]
  40b8e3:	add    BYTE PTR [esi+esi*4-0x5f53fccd],al
  40b8ea:	xor    eax,0xcef30ce8
  40b8ef:	(bad)  
  40b8f0:	in     al,0x6
  40b8f2:	pop    esi
  40b8f3:	push   es
  40b8f4:	inc    eax
  40b8f5:	(bad)  
  40b8f6:	xchg   ebx,eax
  40b8f7:	sti    
  40b8f8:	icebp  
  40b8f9:	int    0xb8
  40b8fb:	(bad)  
  40b8fd:	ret    
  40b8fe:	or     eax,0xdf080ecf
  40b903:	(bad)  
  40b905:	sub    al,0xd0
  40b907:	add    eax,0x34e67df4
  40b90c:	lock int 0x98
  40b90f:	mov    edx,DWORD PTR ss:[edx]
  40b912:	in     al,0xce
  40b914:	ins    DWORD PTR es:[edi],dx
  40b915:	push   ss
  40b916:	xchg   esi,eax
  40b917:	add    eax,0xdc3e06d9
  40b91c:	punpckhwd mm5,mm0
  40b91f:	add    ebp,DWORD PTR [esi-0x39]
  40b922:	cmp    esp,ebp
  40b924:	repz arpl cx,si
  40b927:	sbb    al,0xa6
  40b929:	push   ss
  40b92a:	cmp    al,0x78
  40b92c:	jns    0x40b8e1
  40b92e:	add    DWORD PTR [edx-0xd],0x1cf8a659
  40b935:	sbb    DWORD PTR [ecx],ebp
  40b937:	add    al,0xc4
  40b939:	add    BYTE PTR fs:[esi],0xc0
  40b93d:	(bad)
  40b940:	add    al,BYTE PTR [edi-0x17]
  40b943:	sub    ch,BYTE PTR [esi+0x3d8c8]
  40b949:	add    BYTE PTR [eax],al
  40b94b:	pushf  
  40b94c:	xchg   ebx,eax
  40b94d:	test   BYTE PTR [edi],0x8
  40b950:	pop    ds
  40b951:	pop    es
  40b952:	sbb    eax,0x3ed0b6d
  40b957:	repz adc eax,0xaf07d96
  40b95d:	jmp    0x264afb65
  40b962:	xor    edi,DWORD PTR [edi+ebp*4]
  40b965:	or     bh,0xcd
  40b968:	(bad)
  40b96b:	outs   dx,BYTE PTR ds:[esi]
  40b96c:	or     al,BYTE PTR [eax]
  40b96e:	in     eax,dx
  40b96f:	lock push es
  40b971:	push   0xffffffe8
  40b973:	std    
  40b974:	scas   al,BYTE PTR es:[edi]
  40b975:	xlat   BYTE PTR ds:[ebx]
  40b976:	dec    eax
  40b977:	lock push es
  40b979:	test   DWORD PTR [ecx],ebp
  40b97b:	dec    ebx
  40b97c:	fcomp  QWORD PTR [esi+0x2a]
  40b97f:	in     eax,0x85
  40b981:	jmp    0x40b9c5
  40b983:	xor    DWORD PTR [edi],eax
  40b985:	push   edi
  40b986:	push   es
  40b987:	mov    esi,DWORD PTR [ecx-0x760f56ef]
  40b98d:	jnp    0x40b95c
  40b98f:	js     0x40b955
  40b991:	jae    0x40b96a
  40b993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b994:	cmp    DWORD PTR [ecx+esi*8],esp
  40b997:	dec    eax
  40b998:	js     0x40b996
  40b99a:	fidiv  WORD PTR [esi]
  40b99c:	mov    bh,BYTE PTR [edi-0x74a4a7a3]
  40b9a2:	fnstenv [edi]
  40b9a4:	imul   edi,esi,0x57633ec6
  40b9aa:	mov    esi,0x2911b53c
  40b9af:	add    BYTE PTR [eax],al
  40b9b1:	add    bh,dh
  40b9b3:	gs ret 0xf0e5
  40b9b7:	scas   al,BYTE PTR es:[edi]
  40b9b8:	out    0xf3,al
  40b9ba:	lock push es
  40b9bc:	test   BYTE PTR [ecx+0x3e5649cb],ch
  40b9c2:	outs   dx,BYTE PTR ds:[esi]
  40b9c3:	mov    cl,0xaa
  40b9c5:	sub    ch,bh
  40b9c7:	pop    ebp
  40b9c8:	(bad)  
  40b9c9:	fsubr  QWORD PTR [edi+edx*1]
  40b9cc:	inc    eax
  40b9cd:	jmp    0xe564f309
  40b9d2:	sbb    BYTE PTR [eax-0x3],al
  40b9d5:	outs   dx,BYTE PTR ds:[esi]
  40b9d6:	es nop
  40b9d8:	out    dx,eax
  40b9d9:	ins    BYTE PTR es:[edi],dx
  40b9da:	lds    edi,FWORD PTR [eax]
  40b9dc:	sbb    eax,0xfec44451
  40b9e1:	push   esi
  40b9e2:	jb     0x40b9f6
  40b9e4:	call   FWORD PTR [edx]
  40b9e6:	scas   eax,DWORD PTR es:[edi]
  40b9e7:	sub    cl,BYTE PTR [ecx+0x40f5c00]
  40b9ed:	add    dl,bl
  40b9ef:	sub    cl,BYTE PTR [ecx-0x13f337a]
  40b9f5:	push   DWORD PTR [edx]
  40b9f7:	sar    ah,0xff
  40b9fa:	aad    0xf9
  40b9fc:	(bad)  
  40b9fd:	adc    eax,0x3eb90a
  40ba02:	gs repnz (bad) 
  40ba05:	and    eax,0x3eba86
  40ba0a:	outs   dx,DWORD PTR ds:[esi]
  40ba0b:	aas    
  40ba0c:	jmp    0x40ba64
  40ba0e:	test   DWORD PTR [ebp+0x14],ebx
  40ba11:	(bad)  
  40ba12:	push   DWORD PTR [edi+0x75fd]
  40ba18:	add    BYTE PTR [esi+0x550873d3],dl
  40ba1e:	mov    ebp,0xb1a161e
  40ba23:	mov    esi,eax
  40ba25:	iret   
  40ba26:	fnstcw WORD PTR [edi+edx*1+0x32]
  40ba2a:	push   ecx
  40ba2b:	or     al,BYTE PTR [eax]
  40ba2d:	pop    edx
  40ba2e:	mov    WORD PTR [esi+0x15e5474],?
  40ba34:	push   esi
  40ba35:	test   DWORD PTR [ebp+0xc],ebx
  40ba38:	(bad)  
  40ba39:	inc    edx
  40ba3b:	out    0x16,al
  40ba3d:	push   esp
  40ba3e:	sar    ebp,cl
  40ba40:	mov    ecx,DWORD PTR [edx+esi*8+0x5c]
  40ba44:	ret    0x81a
  40ba47:	push   ebp
  40ba48:	mov    edx,DWORD PTR [esi+0x2e758af9]
  40ba4e:	sti    
  40ba4f:	(bad)  
  40ba50:	jne    0x40ba8c
  40ba52:	aas    
  40ba53:	jl     0x40ba61
  40ba55:	test   DWORD PTR [esp+ebx*1-0x1],ebx
  40ba59:	jmp    FWORD PTR [edi-0x483000ac]
  40ba5f:	push   ebp
  40ba60:	(bad)  
  40ba61:	mov    edi,0xf315fdbf
  40ba66:	mov    ebp,0x26f33ff4
  40ba6b:	inc    esi
  40ba6c:	sbb    al,0x76
  40ba6e:	in     eax,dx
  40ba6f:	push   ebp
  40ba70:	inc    eax
  40ba71:	outs   dx,BYTE PTR ds:[esi]
  40ba72:	sti    
  40ba73:	push   esi
  40ba74:	cmp    al,0xcb
  40ba76:	or     edi,edx
  40ba78:	push   DWORD PTR [ecx+ebp*1+0x73c3]
  40ba7f:	add    al,ah
  40ba81:	cmp    BYTE PTR ds:0x8648e053,dl
  40ba87:	cmc    
  40ba88:	daa    
  40ba89:	mov    DWORD PTR [edi],0x26a1035d
  40ba8f:	mov    esi,edi
  40ba91:	in     al,dx
  40ba92:	jns    0x40bad8
  40ba94:	ror    eax,cl
  40ba96:	les    esi,FWORD PTR [ecx-0x10]
  40ba99:	es push esi
  40ba9b:	and    BYTE PTR [ecx],cl
  40ba9d:	scas   eax,DWORD PTR es:[edi]
  40ba9e:	retf   
  40ba9f:	je     0x40bab4
  40baa1:	lods   eax,DWORD PTR ds:[esi]
  40baa2:	dec    edi
  40baa3:	fucomip st,st(7)
  40baa5:	in     al,0x50
  40baa7:	or     BYTE PTR [ebx-0x76],cl
  40baaa:	enter  0x54fe,0xf0
  40baae:	push   ds
  40baaf:	jne    0x40bac4
  40bab1:	add    esi,DWORD PTR [ebx-0x181587a6]
  40bab7:	pop    esi
  40bab8:	popf   
  40bab9:	sbb    al,dh
  40babb:	sbb    esi,ebx
  40babd:	sbb    bh,BYTE PTR [edi-0x15]
  40bac0:	lds    ebp,FWORD PTR [eax+edx*2+0x14]
  40bac4:	and    al,0x1a
  40bac6:	hlt    
  40bac7:	(bad)  
  40bac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bac9:	test   eax,0x94eb74c9
  40bace:	lock pop ss
  40bad0:	in     eax,0xed
  40bad2:	add    ecx,DWORD PTR [ebx+0x77d22a03]
  40bad8:	(bad)  
  40bad9:	test   DWORD PTR [eax+0x7eadf308],edi
  40badf:	mov    edi,0x81050767
  40bae4:	add    BYTE PTR [eax],al
  40bae6:	add    dh,bl
  40bae8:	cmp    al,0xf3
  40baea:	retf   0xf67
  40baed:	inc    ecx
  40baee:	push   0xdf4dc2d6
  40baf3:	(bad)  
  40baf4:	sub    al,0xe9
  40baf6:	xor    esp,eax
  40baf8:	cmp    al,0xed
  40bafa:	retf   0xf47
  40bafd:	inc    ecx
  40bafe:	sub    BYTE PTR [esi-0x4980d23e],dh
  40bb04:	popa   
  40bb05:	(bad)  
  40bb06:	(bad)
  40bb09:	mov    ah,0x7e
  40bb0b:	mov    BYTE PTR [esi-0x41],dl
  40bb0e:	jle    0x40bb2f
  40bb10:	sbb    esi,DWORD PTR [esi+0x71e707ca]
  40bb16:	dec    ecx
  40bb17:	test   ecx,0x3c7de773
  40bb1d:	shl    DWORD PTR [ecx],1
  40bb1f:	je     0x40bb5d
  40bb21:	fnstenv [edx]
  40bb23:	ins    BYTE PTR es:[edi],dx
  40bb24:	cmp    al,0xf1
  40bb26:	retf   0x12ff
  40bb29:	test   DWORD PTR [ebx-0xd],0x6fe82b8f
  40bb30:	(bad)  
  40bb31:	push   ebx
  40bb32:	inc    esp
  40bb33:	jbe    0x40baee
  40bb35:	cmp    al,0x2b
  40bb37:	pop    ebx
  40bb38:	ss lock add esi,ebx
  40bb3c:	mov    ch,BYTE PTR [eax-0x97262b1]
  40bb42:	push   ss
  40bb43:	dec    eax
  40bb44:	mov    WORD PTR [esi+0x3bfdb54f],ds
  40bb4a:	hlt    
  40bb4b:	add    BYTE PTR [eax],al
  40bb4d:	add    BYTE PTR [ecx+0x35ff624f],ah
  40bb53:	nop
  40bb54:	and    esp,DWORD PTR [eax+ecx*8]
  40bb57:	enter  0x6fa,0x7a
  40bb5b:	cmp    al,0xc9
  40bb5d:	pop    ebp
  40bb5e:	repz sar edi,0xfb
  40bb62:	rol    cl,1
  40bb64:	jae    0x40baf4
  40bb66:	in     al,dx
  40bb67:	shl    BYTE PTR [ecx+esi*8-0x38],0xb4
  40bb6c:	sti    
  40bb6d:	pop    esi
  40bb6e:	test   eax,0x10dc2b44
  40bb73:	cmp    al,0xd7
  40bb75:	inc    edx
  40bb76:	adc    eax,0x2346f786
  40bb7b:	and    edi,edi
  40bb7d:	aam    0xcc
  40bb7f:	sbb    eax,DWORD PTR [eax-0x17]
  40bb82:	jmp    0x40bbbf
  40bb84:	daa    
  40bb85:	jmp    0x1151f77a
  40bb8a:	ror    DWORD PTR [edi],cl
  40bb8c:	add    cl,ch
  40bb8e:	sbb    al,0x82
  40bb90:	jae    0x40bb73
  40bb92:	test   eax,0xb801083a
  40bb97:	ret    0x6fe
  40bb9a:	add    eax,0xca9e1c4b
  40bb9f:	pop    ebp
  40bba0:	pop    ebp
  40bba1:	sub    ecx,DWORD PTR [ecx+eax*8+0x55f4a689]
  40bba8:	push   esi
  40bba9:	jb     0x40bb6e
  40bbab:	(bad)  
  40bbac:	ja     0x40bb98
  40bbae:	inc    ebx
  40bbaf:	hlt    
  40bbb0:	ficom  DWORD PTR [eax]
  40bbb2:	add    BYTE PTR [eax],al
  40bbb4:	add    BYTE PTR [ecx],cl
  40bbb6:	pop    ds
  40bbb7:	jbe    0x40bbbe
  40bbb9:	les    eax,FWORD PTR ds:0xe6b2ea9f
  40bbbf:	jae    0x40bb98
  40bbc1:	mov    edi,0x2ab66a09
  40bbc6:	xor    eax,0xd1f7d924
  40bbcb:	xor    BYTE PTR [ecx-0x22a756c6],0xf0
  40bbd2:	push   es
  40bbd3:	test   DWORD PTR [ecx-0x2dbcec3d],ebp
  40bbd9:	ficomp DWORD PTR [esi]
  40bbdb:	jb     0x40bbdd
  40bbdd:	dec    esi
  40bbde:	sbb    eax,eax
  40bbe0:	pop    esi
  40bbe1:	ror    eax,1
  40bbe3:	add    al,BYTE PTR [eax]
  40bbe5:	xchg   ecx,eax
  40bbe6:	inc    esp
  40bbe7:	and    al,0x8b
  40bbe9:	or     al,0xaf
  40bbeb:	mov    eax,DWORD PTR [edx+esi*4]
  40bbee:	mov    edi,0x381204b5
  40bbf3:	add    eax,DWORD PTR [ecx+0x3380751]
  40bbf9:	adc    eax,0x4155e2e2
  40bbfe:	fild   QWORD PTR [ecx]
  40bc00:	add    eax,0x4198c6
  40bc05:	pop    ecx
  40bc06:	test   BYTE PTR [edx+0x3eb97635],0x0
  40bc0d:	bound  eax,QWORD PTR gs:[edx]
  40bc10:	xor    edi,ebp
  40bc12:	cmc    
  40bc13:	push   esi
  40bc14:	mov    esp,edx
  40bc16:	aaa    
  40bc17:	inc    esp
  40bc18:	adc    BYTE PTR [eax],al
  40bc1a:	add    BYTE PTR [eax],al
  40bc1c:	dec    edx
  40bc1d:	iret   
  40bc1e:	jae    0x40bc28
  40bc20:	in     eax,dx
  40bc21:	dec    edi
  40bc22:	adc    BYTE PTR [edx+0x7d],ch
  40bc25:	iret   
  40bc26:	aam    0x85
  40bc28:	retf   0x2a56
  40bc2b:	add    edi,DWORD PTR [edi-0x48]
  40bc2e:	push   ebp
  40bc2f:	push   0x56
  40bc31:	cmp    DWORD PTR [eax+edx*1+0x1a],eax
  40bc35:	cli    
  40bc36:	(bad)  
  40bc37:	jne    0x40bc8b
  40bc39:	iret   
  40bc3a:	adc    edx,DWORD PTR [eax+ecx*2-0x657affbc]
  40bc41:	push   eax
  40bc42:	add    al,0xb0
  40bc44:	dec    ebx
  40bc45:	jecxz  0x40bc55
  40bc47:	push   0x4b
  40bc49:	not    DWORD PTR [esi+0x57]
  40bc4c:	add    eax,0x4d1073ce
  40bc51:	push   ecx
  40bc52:	or     bh,bh
  40bc54:	fs sbb al,al
  40bc57:	pop    edi
  40bc58:	repz imul DWORD PTR [ebx*2+0x5602e231]
  40bc60:	pushf  
  40bc61:	mov    DWORD PTR [esi-0x75],ebx
  40bc64:	out    0x7d,al
  40bc66:	add    al,BYTE PTR [eax]
  40bc68:	repz and al,0x35
  40bc6b:	or     al,0x78
  40bc6d:	sbb    esi,eax
  40bc6f:	mov    ah,BYTE PTR [ecx+0x16]
  40bc72:	mov    edx,DWORD PTR [edi]
  40bc74:	rep lods eax,DWORD PTR ds:[esi]
  40bc76:	add    dh,BYTE PTR [ebx]
  40bc78:	aam    0x1c
  40bc7a:	les    ebp,FWORD PTR [ebx+0x246cf0f]
  40bc80:	add    BYTE PTR [eax],al
  40bc82:	add    BYTE PTR [edi],dl
  40bc84:	push   cs
  40bc85:	ret    
  40bc86:	into   
  40bc87:	out    dx,al
  40bc88:	lods   al,BYTE PTR ds:[esi]
  40bc89:	retf   0xc3e1
  40bc8c:	cs enter 0x6f5a,0x63
  40bc91:	pop    esp
  40bc92:	mov    esi,DWORD PTR [ecx]
  40bc94:	mov    esi,0x4726117b
  40bc99:	sub    BYTE PTR [esi-0x50],bl
  40bc9c:	cmp    BYTE PTR [ebx-0x15],0x70
  40bca0:	shr    ebp,0xe7
  40bca3:	dec    eax
  40bca4:	or     al,cl
  40bca6:	(bad)  
  40bca7:	push   eax
  40bca8:	lds    edx,FWORD PTR [esi-0x3ccd0cbe]
  40bcae:	je     0x40bca4
  40bcb0:	jnp    0x40bc74
  40bcb2:	call   0x436baf
  40bcb7:	gs jmp 0xcfe9:0x24c000fb
  40bcbf:	loope  0x40bcae
  40bcc1:	add    edx,DWORD PTR [edi-0x42]
  40bcc4:	mov    edx,0x9c3c0058
  40bcc9:	mov    ds:0x3ec8733,al
  40bcce:	test   DWORD PTR [ebx],esi
  40bcd0:	les    ebx,FWORD PTR [edx]
  40bcd2:	push   0x441a062f
  40bcd7:	repz mov esp,DWORD PTR [eax-0x6a3fbc24]
  40bcde:	(bad)  
  40bcdf:	jns    0x40bce2
  40bce1:	rcl    DWORD PTR [edi+0x5c1906b1],1
  40bce7:	add    BYTE PTR [eax],al
  40bce9:	add    BYTE PTR [edi],ah
  40bceb:	xor    ebp,DWORD PTR [ecx]
  40bced:	add    al,0xb
  40bcef:	(bad)  
  40bcf0:	jbe    0x40bcb9
  40bcf2:	in     eax,dx
  40bcf3:	xchg   edx,eax
  40bcf4:	fisttp DWORD PTR [edi]
  40bcf6:	xchg   edi,eax
  40bcf7:	dec    edx
  40bcf8:	jmp    0xf918830
  40bcfd:	add    dh,bl
  40bcff:	sub    BYTE PTR [eax],0x51
  40bd02:	hlt    
  40bd03:	clc    
  40bd04:	sub    ch,bl
  40bd06:	mov    al,BYTE PTR [edi]
  40bd08:	jmp    0xb3cce210
  40bd0d:	xlat   BYTE PTR ds:[ebx]
  40bd0e:	jl     0x40bd8e
  40bd10:	call   0xfcefb018
  40bd15:	xor    esi,edx
  40bd17:	push   es
  40bd18:	jb     0x40bcd8
  40bd1a:	sub    al,0xbe
  40bd1c:	cmp    DWORD PTR [ebx],edx
  40bd1e:	xchg   esp,eax
  40bd1f:	push   0xffffffd4
  40bd21:	xchg   edi,eax
  40bd22:	xor    DWORD PTR [edi],eax
  40bd24:	sar    BYTE PTR [esi+0x45b82f5],cl
  40bd2a:	repz push es
  40bd2c:	jb     0x40bd3f
  40bd2e:	aaa    
  40bd2f:	sbb    DWORD PTR [ecx+0x79a2db03],ebp
  40bd35:	inc    ebx
  40bd36:	repz push esi
  40bd38:	out    0xad,al
  40bd3a:	aam    0xb2
  40bd3c:	pop    ecx
  40bd3d:	inc    esp
  40bd3e:	repz mov ebp,0x4a9f081b
  40bd44:	jmp    0x29abc1eb
  40bd49:	add    al,0x3c
  40bd4b:	aad    0x50
  40bd4d:	cld    
  40bd4e:	add    BYTE PTR [eax],al
  40bd50:	add    al,al
  40bd52:	inc    esi
  40bd53:	add    cl,ch
  40bd55:	xor    eax,0xb17d3bf3
  40bd5a:	push   es
  40bd5b:	mov    ds:0x497b2d,eax
  40bd60:	sahf   
  40bd61:	inc    esi
  40bd62:	es and al,0x1d
  40bd65:	mov    bh,0x6
  40bd67:	call   esp
  40bd69:	in     al,dx
  40bd6a:	push   0x42
  40bd6c:	jmp    0x2aed03c2
  40bd71:	out    dx,eax
  40bd72:	mov    ebp,0x32ff01d5
  40bd77:	inc    eax
  40bd78:	jmp    0x957cb02a
  40bd7d:	xor    DWORD PTR [edi],eax
  40bd7f:	mov    ds:0x487cad,eax
  40bd84:	push   esi
  40bd85:	sahf   
  40bd86:	and    eax,0x730d544
  40bd8b:	(bad)  
  40bd8c:	cld    
  40bd8d:	hlt    
  40bd8e:	push   0x42
  40bd90:	jmp    0xaaed0b26
  40bd95:	lock mov ebp,0x6ad48ad5
  40bd9b:	inc    edx
  40bd9c:	jmp    0x4d80b990
  40bda1:	xor    DWORD PTR [edi],eax
  40bda3:	jne    0x40bd86
  40bda5:	(bad)  
  40bda6:	sti    
  40bda7:	inc    ebx
  40bda8:	cmp    eax,0xe1740731
  40bdad:	out    dx,eax
  40bdae:	sti    
  40bdaf:	inc    edi
  40bdb0:	dec    ebp
  40bdb1:	xor    DWORD PTR [edi],eax
  40bdb3:	je     0x40bd8e
  40bdb5:	add    BYTE PTR [eax],al
  40bdb7:	add    bh,bh
  40bdb9:	sti    
  40bdba:	dec    edi
  40bdbb:	cmp    eax,0xf17406b1
  40bdc0:	jmp    0x40bd87
  40bdc2:	jae    0x40bda9
  40bdc4:	add    BYTE PTR [esi],0xeb
  40bdc7:	jmp    0x40bdab
  40bdc9:	(bad)  
  40bdca:	pop    ebp
  40bdcb:	cs sbb dl,al
  40bdce:	rol    DWORD PTR [eax],0x4e
  40bdd1:	or     DWORD PTR [ebx-0x75],edx
  40bdd4:	xchg   edx,eax
  40bdd5:	xchg   ecx,esp
  40bdd7:	add    edi,ebp
  40bdd9:	mov    dl,0xe6
  40bddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bddc:	bound  eax,QWORD PTR [edx]
  40bdde:	add    BYTE PTR [edx+ecx*2+0x7830756],al
  40bde5:	jmp    0x85b0195
  40bdea:	push   esi
  40bdeb:	push   edi
  40bdec:	mov    ch,0x26
  40bdee:	lods   al,BYTE PTR ds:[esi]
  40bdef:	inc    ebx
  40bdf0:	or     al,BYTE PTR [ebx+0x2c9ac56]
  40bdf6:	call   0x4a70af
  40bdfb:	pop    edi
  40bdfc:	cmp    DWORD PTR [ebx-0x54],ecx
  40bdff:	inc    ebx
  40be00:	retf   0x84e2
  40be03:	sar    BYTE PTR [edi-0x7e3fcf44],0xc7
  40be0a:	sbb    ebx,0xffffff9f
  40be0d:	mov    esi,0x463a9866
  40be12:	add    al,ch
  40be14:	and    eax,0x32000220
  40be19:	inc    ebx
  40be1a:	rol    DWORD PTR [ecx],1
  40be1c:	add    BYTE PTR [eax],al
  40be1e:	add    BYTE PTR [edx-0x108dfdfc],bl
  40be24:	fisub  DWORD PTR [esi-0x5df77509]
  40be2a:	nop
  40be2b:	sub    al,BYTE PTR [esi+0x0]
  40be2e:	test   dl,bl
  40be30:	dec    ebx
  40be31:	adc    al,ch
  40be33:	mov    ds:0x36ffff79,eax
  40be38:	mov    esp,0x92ace71
  40be3d:	mov    ds:0x462a90,al
  40be42:	test   DWORD PTR [ecx],esi
  40be44:	dec    ebp
  40be45:	add    al,0x3c
  40be47:	dec    eax
  40be48:	push   esi
  40be49:	mov    edi,0x27aef3b0
  40be4e:	ret    
  40be4f:	fistp  DWORD PTR ds:0x57f34298
  40be55:	(bad)
  40be58:	jae    0x40be5c
  40be5a:	add    BYTE PTR [eax+0xa],dl
  40be5d:	cwde   
  40be5e:	inc    edx
  40be5f:	repz and al,bl
  40be62:	jae    0x40be38
  40be64:	cld    
  40be65:	les    ebp,FWORD PTR [edi]
  40be67:	adc    al,0xb3
  40be69:	or     BYTE PTR [edi],0xb3
  40be6c:	lods   eax,DWORD PTR ds:[esi]
  40be6d:	xor    ah,BYTE PTR [ebx+0x3ff9db]
  40be73:	push   edx
  40be74:	retf   0x4296
  40be77:	repz cmp al,0x13
  40be7a:	mov    edi,0x40421f
  40be7f:	pop    ecx
  40be80:	mov    al,0x2a
  40be82:	call   0xc040be87
  40be87:	mov    edx,0xaea30002
  40be8c:	and    eax,ebx
  40be8e:	add    esi,ebp
  40be90:	mov    edi,0x81f97854
  40be95:	jmp    0x40be82
  40be97:	scas   eax,DWORD PTR es:[edi]
  40be98:	add    al,BYTE PTR [eax]
  40be9a:	mov    ebp,0x2600fa62
  40be9f:	or     bl,BYTE PTR [eax+eax*4+0x57]
  40bea3:	jo     0x40bea7
  40bea5:	push   0xfffffff3
  40bea7:	adc    eax,0xadf2ed88
  40beac:	jle    0x40be6d
  40beae:	push   es
  40beaf:	stos   BYTE PTR es:[edi],al
  40beb0:	adc    al,al
  40beb2:	cwde   
  40beb3:	xlat   BYTE PTR ds:[ebx]
  40beb4:	pop    edx
  40beb5:	mov    BYTE PTR [ebp+0x70],cl
  40beb8:	add    ch,BYTE PTR [edx-0xf]
  40bebb:	adc    eax,0xadf2ed9c
  40bec0:	jle    0x40be81
  40bec2:	fistp  QWORD PTR [ecx+0x6f20459]
  40bec8:	jmp    0xe0c224d0
  40becd:	ror    DWORD PTR [ebp-0x45],0x38
  40bed1:	cs repz mov ebx,0x46e2c3f3
  40bed8:	jmp    0xbbff266d
  40bedd:	ret    
  40bede:	sub    eax,0xe024c155
  40bee3:	push   es
  40bee4:	jmp    0x24a81b71
  40bee9:	jo     0x40beeb
  40beeb:	add    BYTE PTR [eax],al
  40beed:	mov    cl,0x6
  40beef:	out    dx,al
  40bef0:	cwde   
  40bef1:	dec    esp
  40bef2:	int    0xaa
  40bef4:	or     bl,dh
  40bef6:	push   ecx
  40bef7:	bound  esi,QWORD PTR [eax+0x860aa73]
  40befd:	repz push es
  40beff:	ja     0x40bf4a
  40bf01:	sti    
  40bf02:	pop    es
  40bf03:	sbb    bl,BYTE PTR [edx+0x3c]
  40bf06:	or     ah,BYTE PTR [ebp-0x76]
  40bf09:	fdivr  QWORD PTR [edx-0x68e87c18]
  40bf0f:	cwde   
  40bf10:	inc    edi
  40bf11:	repz pop es
  40bf13:	out    0x89,al
  40bf15:	js     0x40bf1e
  40bf17:	jmp    0xfa1ebf1f
  40bf1c:	ret    0x8e4e
  40bf1f:	gs xor al,0x20
  40bf22:	inc    edi
  40bf23:	jmp    0x32701eb8
  40bf28:	ret    
  40bf29:	popf   
  40bf2a:	scas   eax,DWORD PTR es:[edi]
  40bf2b:	rcl    BYTE PTR [ecx-0xe],1
  40bf2e:	push   es
  40bf2f:	ins    BYTE PTR es:[edi],dx
  40bf30:	mov    DWORD PTR [esp+edi*4-0x9cb3ceb],eax
  40bf37:	sub    BYTE PTR [ebx+eiz*1-0x46],dl
  40bf3b:	cmp    eax,0xe947003c
  40bf40:	push   ebx
  40bf41:	ins    BYTE PTR es:[edi],dx
  40bf42:	adc    al,0x0
  40bf44:	cdq    
  40bf45:	std    
  40bf46:	inc    esi
  40bf47:	add    BYTE PTR [edi+esi*1+0x33],ah
  40bf4b:	sub    esi,DWORD PTR [edx+0x2a]
  40bf4e:	dec    edx
  40bf4f:	lea    esp,[eax+eax*1+0x0]
  40bf53:	add    BYTE PTR [eax-0x5f290145],cl
  40bf59:	push   esi
  40bf5a:	call   0x483f74
  40bf5f:	ins    BYTE PTR es:[edi],dx
  40bf60:	xor    BYTE PTR [esi],dh
  40bf62:	pop    ss
  40bf63:	mov    esi,0x2aac3e2b
  40bf68:	out    dx,eax
  40bf69:	mov    eax,DWORD PTR [ecx+esi*4+0x39feb933]
  40bf70:	xor    BYTE PTR [ebx],dl
  40bf72:	mov    al,0xfb
  40bf74:	mov    al,0x6
  40bf76:	test   DWORD PTR [ecx-0x597cf244],ebp
  40bf7c:	in     al,dx
  40bf7d:	inc    ebp
  40bf7e:	add    DWORD PTR [esi-0x6d61cb64],0xffffffd4
  40bf85:	sub    al,0xdb
  40bf87:	in     eax,0x75
  40bf89:	test   BYTE PTR [ebx-0x6],dh
  40bf8c:	xor    BYTE PTR [edi],al
  40bf8e:	or     esp,ebp
  40bf90:	shr    BYTE PTR [ebp+0x42],1
  40bf93:	jmp    0xed36d435
  40bf98:	shr    BYTE PTR [ebp+0x42],1
  40bf9b:	jmp    0x684af297
  40bfa0:	jecxz  0x40bf88
  40bfa2:	stos   DWORD PTR es:[edi],eax
  40bfa3:	stos   BYTE PTR es:[edi],al
  40bfa4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa6:	push   cs
  40bfa7:	jmp    0x799f199c
  40bfac:	neg    DWORD PTR [ebp-0x37]
  40bfaf:	sub    ebp,esp
  40bfb1:	push   es
  40bfb2:	push   ebp
  40bfb3:	jb     0x40c011
  40bfb5:	xchg   bl,ch
  40bfb7:	std    
  40bfb8:	add    BYTE PTR [eax],al
  40bfba:	add    dl,bh
  40bfbc:	push   es
  40bfbd:	add    BYTE PTR [edx+0x8b521a],bh
  40bfc3:	scas   eax,DWORD PTR es:[edi]
  40bfc4:	jno    0x40bfd6
  40bfc6:	inc    eax
  40bfc7:	pop    edx
  40bfc8:	in     eax,dx
  40bfc9:	pop    edi
  40bfca:	lds    ebx,FWORD PTR [ecx-0x662800fb]
  40bfd0:	fsubr  DWORD PTR [eax+0x20]
  40bfd3:	stc    
  40bfd4:	ret    0xbe51
  40bfd7:	ss cmp eax,0x8e040042
  40bfdd:	sbb    edx,DWORD PTR [edi+edx*4+0x43]
  40bfe1:	add    BYTE PTR [esi+0x69],ah
  40bfe4:	lds    eax,FWORD PTR es:[ebx+0x1a]
  40bfe8:	out    dx,eax
  40bfe9:	mov    ds:0x435758,al
  40bfee:	mov    DWORD PTR [edi],ebp
  40bff0:	test   eax,0xc60a43c2
  40bff5:	adc    esi,DWORD PTR [esp+eax*1]
  40bff8:	inc    ebp
  40bff9:	add    BYTE PTR [ebx-0xa9e9aa],al
  40bfff:	inc    ebp
  40c000:	mov    DWORD PTR [ebx-0x2388c14],esi
  40c006:	call   0x407a81
  40c00b:	push   ecx
  40c00c:	inc    ebx
  40c00d:	jl     0x40bfb2
  40c00f:	(bad)  
  40c010:	cmp    al,BYTE PTR [edx+0x0]
  40c013:	xchg   ebx,eax
  40c014:	jne    0x40c015
  40c016:	(bad)  
  40c017:	fimul  DWORD PTR [ebx+0x44c288c4]
  40c01d:	dec    ecx
  40c01e:	jne    0x40c020
  40c020:	add    BYTE PTR [eax],al
  40c022:	and    BYTE PTR [eax-0x39ce254d],cl
  40c028:	std    
  40c029:	call   0x407a04
  40c02e:	xchg   edi,eax
  40c02f:	xor    al,BYTE PTR [eax]
  40c031:	add    BYTE PTR [edx+0x595013ea],cl
  40c037:	mov    DWORD PTR [ebx-0x30],esi
  40c03a:	sbb    ebx,ecx
  40c03c:	std    
  40c03d:	call   0x338335
  40c042:	jl     0x40c067
  40c044:	les    edi,FWORD PTR [ebp-0x2a]
  40c047:	xor    al,0xca
  40c049:	dec    edi
  40c04a:	(bad)  ds:0x22f34272
  40c050:	xchg   edi,eax
  40c052:	pop    esi
  40c053:	test   eax,0xee4b4fbf
  40c058:	mov    cl,0x0
  40c05a:	repz and al,bl
  40c05d:	push   cs
  40c05e:	pop    esi
  40c05f:	outs   dx,BYTE PTR ds:[esi]
  40c060:	cld    
  40c061:	ret    0xa6c6
  40c064:	repz mov edi,0xc78636cd
  40c06a:	cs jns 0x40c02c
  40c06d:	mov    eax,0x2af15
  40c072:	outs   dx,BYTE PTR ds:[esi]
  40c073:	and    ebx,ebp
  40c075:	cli    
  40c076:	adc    al,0x61
  40c078:	mov    dl,BYTE PTR [edi]
  40c07a:	mov    bl,0xf6
  40c07c:	ss cli 
  40c07e:	fwait
  40c07f:	stc    
  40c080:	aaa    
  40c081:	inc    eax
  40c082:	repz pop edx
  40c084:	xchg   bh,al
  40c086:	add    BYTE PTR [eax],al
  40c088:	add    dh,dh
  40c08a:	cmp    BYTE PTR [edi+0x6ed2ec4f],0x11
  40c091:	xor    ebp,DWORD PTR [esi+0x28db4c83]
  40c097:	push   esp
  40c098:	push   ebx
  40c099:	dec    ecx
  40c09a:	lods   eax,DWORD PTR ds:[esi]
  40c09b:	push   ebx
  40c09c:	push   0xfffffff2
  40c09e:	aad    0x2
  40c0a0:	add    bl,dh
  40c0a2:	sub    eax,0x4aab848e
  40c0a7:	sar    dh,0x23
  40c0aa:	jmp    0xaeeebcf4
  40c0af:	add    al,BYTE PTR [eax]
  40c0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b2:	(bad)  
  40c0b4:	adc    DWORD PTR [ebx],esi
  40c0b6:	scas   al,BYTE PTR es:[edi]
  40c0b7:	mov    ebp,edi
  40c0b9:	jo     0x40c0c1
  40c0bb:	daa    
  40c0bc:	rol    BYTE PTR [eax],0xe0
  40c0bf:	mov    ecx,0xb8bb2f8e
  40c0c4:	rol    BYTE PTR [edi],0xbb
  40c0c7:	pop    ebx
  40c0c8:	xchg   BYTE PTR [ecx+edi*4+0x50bcc005],ch
  40c0cf:	(bad)  
  40c0d0:	adc    eax,0x3a9151f
  40c0d5:	jbe    0x40c09d
  40c0d7:	je     0x40c0e2
  40c0d9:	push   0xb78de541
  40c0de:	mov    esi,0x66dfbf36
  40c0e3:	cli    
  40c0e4:	inc    ebx
  40c0e5:	repz mov esp,DWORD PTR [ebx]
  40c0e8:	mov    esp,0x38c5be71
  40c0ed:	add    BYTE PTR [eax],al
  40c0ef:	add    bh,dh
  40c0f1:	outs   dx,BYTE PTR ds:[esi]
  40c0f2:	out    0x37,eax
  40c0f4:	icebp  
  40c0f5:	repz test al,0xd5
  40c0f8:	adc    al,0xf3
  40c0fa:	lahf   
  40c0fb:	es push 0xffffff8a
  40c0fe:	sub    ecx,esp
  40c100:	movzx  ebx,WORD PTR [ebp-0x6c31906f]
  40c107:	mov    edi,0x636dadfd
  40c10c:	repz push es
  40c10e:	je     0x40c099
  40c110:	mov    ah,0xb4
  40c112:	jge    0x40c0d3
  40c114:	int3   
  40c115:	(bad)
  40c119:	push   ds
  40c11a:	jge    0x40c187
  40c11c:	xor    DWORD PTR [edi],eax
  40c11e:	jo     0x40c141
  40c120:	(bad)  [edx-0x57]
  40c123:	add    edi,DWORD PTR [edx+0x14]
  40c126:	in     eax,dx
  40c127:	outs   dx,DWORD PTR ds:[esi]
  40c128:	xor    DWORD PTR [edi],eax
  40c12a:	dec    esi
  40c12b:	xlat   BYTE PTR ds:[ebx]
  40c12c:	int3   
  40c12d:	and    DWORD PTR [edx-0x56e10cfc],ebp
  40c133:	xor    eax,0x36000733
  40c138:	cli    
  40c139:	(bad)  
  40c13a:	adc    DWORD PTR [ecx-0x623d0e10],ebp
  40c140:	inc    DWORD PTR [ecx-0x7876ee09]
  40c146:	(bad)  
  40c147:	call   0x2972c995
  40c14c:	jns    0x40c117
  40c14e:	jae    0x40c13e
  40c150:	jno    0x40c155
  40c152:	push   esp
  40c153:	inc    ecx
  40c154:	add    BYTE PTR [eax],al
  40c156:	add    BYTE PTR [eax+0x29010106],dh
  40c15c:	xor    al,0x0
  40c15e:	jmp    0xe8f11618
  40c163:	test   eax,0x7834c2bf
  40c168:	mov    ds:0x8778cd82,al
  40c16d:	jmp    0x40c15c
  40c16f:	in     eax,dx
  40c170:	push   es
  40c171:	add    BYTE PTR [edx],bl
  40c173:	lds    ebx,FWORD PTR [ebp-0x75]
  40c176:	cmp    al,0xf7
  40c178:	stc    
  40c179:	fisubr DWORD PTR [edx+0x55]
  40c17c:	pop    es
  40c17d:	mov    esp,ecx
  40c17f:	in     al,dx
  40c180:	jns    0x40c1c4
  40c182:	jmp    0xfcc9ce52
  40c187:	adc    BYTE PTR [edx+0x42],ah
  40c18a:	jmp    0x8148fccc
  40c18f:	std    
  40c190:	mov    al,0xfe
  40c192:	xchg   BYTE PTR [ebp+esi*2+0x74],dh
  40c196:	out    0xe2,al
  40c198:	jne    0x40c182
  40c19a:	mov    bh,0xf7
  40c19c:	push   es
  40c19d:	add    BYTE PTR [edx],bl
  40c19f:	pop    es
  40c1a0:	pop    es
  40c1a1:	add    cl,dh
  40c1a3:	lock pop ecx
  40c1a5:	push   esp
  40c1a7:	mov    BYTE PTR [edi],dl
  40c1a9:	inc    eax
  40c1aa:	jmp    0xaaeb9800
  40c1af:	lock icebp 
  40c1b1:	ret    0x6f00
  40c1b4:	sbb    bh,bh
  40c1b6:	adc    eax,0x4017e6
  40c1bb:	add    BYTE PTR [eax],al
  40c1bd:	add    BYTE PTR [ecx+0x69],ch
  40c1c0:	test   eax,0x1b818a43
  40c1c5:	in     al,0x21
  40c1c7:	dec    ecx
  40c1c8:	add    bl,ch
  40c1ca:	(bad)  
  40c1cb:	retf   
  40c1cc:	add    esp,esp
  40c1ce:	xor    DWORD PTR [ecx+0x0],ecx
  40c1d1:	add    DWORD PTR [eax+0x0],esi
  40c1d4:	mov    eax,0x491f80
  40c1d9:	pop    ecx
  40c1da:	loop   0x40c1ed
  40c1dc:	add    eax,0x52
  40c1df:	inc    edx
  40c1e0:	jne    0x40c1da
  40c1e2:	shr    DWORD PTR [esi+0xb1a12f2],1
  40c1e8:	push   0x478fd8
  40c1ed:	(bad)  
  40c1ee:	jl     0x40c1d2
  40c1f0:	cmp    edi,DWORD PTR [eax-0x2900f4f7]
  40c1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f7:	ds and al,0x10
  40c1fa:	or     ah,bl
  40c1fc:	add    DWORD PTR [edx],eax
  40c1fe:	or     cl,BYTE PTR [ecx]
  40c200:	mov    DWORD PTR ds:0x4232fe,ebx
  40c206:	push   ebp
  40c207:	sbb    eax,0xada15dc
  40c20c:	mov    eax,DWORD PTR [ebp+0x12]
  40c20f:	popa   
  40c210:	loop   0x40c20d
  40c212:	gs jae 0x40c197
  40c215:	shr    dh,0x87
  40c218:	cmp    ebx,edi
  40c21a:	fbld   TBYTE PTR [edi+0x7f05351]
  40c220:	push   0x58
  40c225:	push   ss
  40c226:	inc    esi
  40c227:	add    bh,bh
  40c229:	iret   
  40c22a:	xor    BYTE PTR [ecx],dl
  40c22c:	inc    eax
  40c22d:	fiadd  DWORD PTR [edi-0x6f0cfff5]
  40c233:	inc    eax
  40c234:	add    BYTE PTR [ecx+eax*4-0x61cf4e41],dh
  40c23b:	test   edx,0xff6029f4
  40c241:	pushf  
  40c242:	std    
  40c243:	stos   DWORD PTR es:[edi],eax
  40c244:	sub    al,0x97
  40c246:	in     eax,0xbc
  40c248:	xor    DWORD PTR [ebx-0x7bb17943],0x15
  40c24f:	mov    ebp,0xaaa606fe
  40c254:	pop    ebx
  40c255:	ja     0x40c25c
  40c257:	mov    ebp,0x86bd3383
  40c25c:	ds fs mov ch,0xbb
  40c260:	inc    BYTE PTR [esi]
  40c262:	pop    edx
  40c263:	adc    al,BYTE PTR [eax-0xd]
  40c266:	inc    eax
  40c267:	cwde   
  40c268:	scas   eax,DWORD PTR es:[edi]
  40c269:	mov    al,0x9d
  40c26b:	idiv   edx
  40c26d:	mov    esi,0x71488ee
  40c272:	mov    bh,BYTE PTR [edi]
  40c274:	add    BYTE PTR [ebx-0x43],cl
  40c277:	jecxz  0x40c27a
  40c279:	repz or cl,al
  40c27c:	push   cs
  40c27d:	outs   dx,DWORD PTR ds:[esi]
  40c27e:	sar    DWORD PTR [ebx+0x7091cfe],cl
  40c284:	xor    al,0x47
  40c286:	loope  0x40c28b
  40c288:	mov    ds:0xb000000,eax
  40c28d:	push   eax
  40c28e:	inc    eax
  40c28f:	add    al,cl
  40c291:	push   0x5a6e2f35
  40c296:	out    0x9f,eax
  40c298:	repnz popf 
  40c29a:	add    ch,al
  40c29c:	loop   0x40c23e
  40c29e:	add    al,BYTE PTR [eax]
  40c2a0:	inc    eax
  40c2a1:	and    eax,DWORD PTR [edi+0x2a2ae23]
  40c2a7:	add    BYTE PTR [ebx+0x25],al
  40c2aa:	imul   BYTE PTR [ebx]
  40c2ac:	lahf   
  40c2ad:	push   es
  40c2ae:	stos   BYTE PTR es:[edi],al
  40c2af:	add    ecx,DWORD PTR [edx-0xcbf65a2]
  40c2b5:	push   ds
  40c2b6:	jno    0x40c32b
  40c2b8:	xor    DWORD PTR [edi],eax
  40c2ba:	xchg   ecx,eax
  40c2bb:	adc    DWORD PTR [eax-0x2d549369],eax
  40c2c1:	in     al,dx
  40c2c2:	jmp    0x27ab:0xe1399c03
  40c2c9:	mov    bl,0x2d
  40c2cb:	mov    esp,0x87f5c670
  40c2d0:	mov    ch,0xb4
  40c2d2:	sbb    eax,0xe14986bc
  40c2d7:	add    edi,edi
  40c2d9:	or     eax,DWORD PTR [ecx]
  40c2db:	mov    cl,0x68
  40c2dd:	mov    bl,0x5
  40c2df:	test   al,0xf2
  40c2e1:	jbe    0x40c2ca
  40c2e3:	stc    
  40c2e4:	xor    DWORD PTR [ebx],eax
  40c2e6:	pop    esp
  40c2e7:	ret    
  40c2e8:	mov    ch,0x54
  40c2ea:	xchg   edx,eax
  40c2eb:	mov    BYTE PTR [edi+0x51],dl
  40c2ee:	stos   DWORD PTR es:[edi],eax
  40c2ef:	add    BYTE PTR [eax],al
  40c2f1:	add    BYTE PTR [eax],al
  40c2f3:	repz pop ecx
  40c2f5:	jb     0x40c29f
  40c2f7:	jno    0x40c2a3
  40c2f9:	rol    BYTE PTR [ebp+0x3e5a648],1
  40c2ff:	repz pop esp
  40c301:	push   ds
  40c302:	mov    DWORD PTR [eax-0x16],ebp
  40c305:	dec    eax
  40c306:	push   es
  40c307:	repz push es
  40c309:	rol    DWORD PTR [ebx-0x7716f90f],0x80
  40c310:	jmp    0x3e7:0xedfeac1a
  40c317:	push   0xf3058e86
  40c31c:	push   es
  40c31d:	add    eax,DWORD PTR [esi]
  40c31f:	jle    0x40c2a4
  40c321:	int3   
  40c322:	mov    dh,ch
  40c324:	push   es
  40c325:	jmp    0x7d9f7e
  40c32a:	loope  0x40c397
  40c32c:	ds and al,0xd5
  40c32f:	sbb    BYTE PTR [edi-0x610f5551],cl
  40c335:	mov    al,0x4
  40c337:	cmc    
  40c338:	push   es
  40c339:	mov    ecx,0x6ee47
  40c33e:	bound  esi,QWORD PTR [ecx+0x30e8ffcc]
  40c344:	inc    eax
  40c345:	jne    0x40c387
  40c347:	push   0x46
  40c349:	and    al,0xe1
  40c34b:	inc    eax
  40c34c:	sbb    eax,0x6328c101
  40c351:	inc    edx
  40c352:	jmp    0xf898dea0
  40c357:	add    BYTE PTR [eax],al
  40c359:	add    BYTE PTR [eax],dh
  40c35b:	pop    es
  40c35c:	mov    ebx,DWORD PTR [ecx]
  40c35e:	jb     0x40c31c
  40c360:	jae    0x40c359
  40c362:	test   eax,0xb0d8181b
  40c367:	push   es
  40c368:	cmp    eax,0x6f736
  40c36d:	jl     0x40c356
  40c36f:	pop    eax
  40c370:	call   esp
  40c372:	rcl    BYTE PTR [edi],1
  40c374:	inc    eax
  40c375:	jmp    0x729f7fb7
  40c37a:	xor    dl,BYTE PTR [ebx+ecx*4-0x34]
  40c37e:	fwait
  40c37f:	les    eax,FWORD PTR [ebx]
  40c381:	jmp    0x6b2c4149
  40c386:	test   BYTE PTR [edx+0xb74cd80],bh
  40c38c:	add    cl,ch
  40c38e:	rol    DWORD PTR [ebx-0x6100fa85],0x0
  40c395:	jmp    0x7de7:0x14ff06f0
  40c39c:	dec    esp
  40c39d:	in     eax,0x6b
  40c39f:	xchg   BYTE PTR [ebx],ah
  40c3a1:	aam    0xec
  40c3a3:	mov    cl,0xfe
  40c3a5:	add    BYTE PTR [edx],cl
  40c3a7:	outs   dx,BYTE PTR ds:[esi]
  40c3a8:	xor    ebp,DWORD PTR [esi+ebp*1]
  40c3ab:	dec    ecx
  40c3ac:	add    BYTE PTR [ebx-0x6797fcf9],cl
  40c3b2:	or     cl,BYTE PTR [ecx+0x0]
  40c3b5:	call   0x416ba0
  40c3ba:	jge    0x40c33c
  40c3bc:	jecxz  0x40c41b
  40c3be:	add    BYTE PTR [eax],al
  40c3c0:	add    BYTE PTR [eax],cl
  40c3c2:	or     al,BYTE PTR [eax]
  40c3c4:	push   ebp
  40c3c5:	adc    DWORD PTR [edx-0x7f],ebp
  40c3c8:	in     al,dx
  40c3c9:	ret    0xff57
  40c3cc:	jne    0x40c35c
  40c3ce:	jle    0x40c413
  40c3d0:	cwde   
  40c3d1:	jp     0x40c43f
  40c3d3:	jae    0x40c3dd
  40c3d5:	xor    ch,BYTE PTR [edx]
  40c3d7:	(bad)  
  40c3d8:	dec    ebp
  40c3da:	jle    0x40c41f
  40c3dc:	cwde   
  40c3dd:	cmp    ah,bl
  40c3df:	jmp    DWORD PTR [edi+0x42]
  40c3e2:	sub    DWORD PTR [edx+0x0],eax
  40c3e5:	std    
  40c3e6:	push   ss
  40c3e7:	pop    eax
  40c3e8:	adc    DWORD PTR [edx-0x280f74fb],ebx
  40c3ee:	ja     0x40c462
  40c3f0:	sbb    esi,DWORD PTR [eax+0x6c]
  40c3f3:	push   esp
  40c3f4:	jmp    DWORD PTR [edi]
  40c3f6:	adc    eax,0x305a4013
  40c3fb:	mov    edi,0x7eb84774
  40c400:	add    BYTE PTR [edx+0x5],cl
  40c403:	je     0x40c413
  40c405:	in     al,0x6f
  40c407:	adc    esp,DWORD PTR [eax+0x33004548]
  40c40d:	dec    edx
  40c40e:	dec    esp
  40c40f:	leave  
  40c410:	ret    0x512
  40c413:	mov    eax,esi
  40c415:	xor    DWORD PTR [edi+0x53],esi
  40c418:	mov    ebx,DWORD PTR [esi+0x55]
  40c41b:	push   ecx
  40c41c:	mov    ecx,DWORD PTR [edi]
  40c41e:	mov    eax,ds:0x9ff343aa
  40c423:	push   ebx
  40c424:	push   edi
  40c425:	add    BYTE PTR [eax],al
  40c427:	add    bl,bl
  40c429:	dec    edi
  40c42a:	loop   0x40c42d
  40c42c:	rep ins BYTE PTR es:[edi],dx
  40c42e:	fisttp DWORD PTR [eax-0x3d0379ca]
  40c434:	pop    esi
  40c435:	mov    eax,ds:0x6bdabff3
  40c43a:	add    eax,DWORD PTR [eax]
  40c43c:	repz rol DWORD PTR [ebx+edx*2],cl
  40c440:	and    BYTE PTR [ebx],ah
  40c442:	aas    
  40c443:	or     BYTE PTR [ebx],ah
  40c445:	jno    0x40c3fe
  40c447:	je     0x40c444
  40c449:	and    eax,0x4919ff57
  40c44e:	mov    ecx,0x42cc5714
  40c453:	add    BYTE PTR [esi-0x22],ch
  40c456:	cs add al,0xb5
  40c459:	imul   esi,DWORD PTR [edi+0x66be5200],0x42
  40c460:	repz sbb al,0xa4
  40c463:	adc    ebp,edx
  40c465:	bound  eax,QWORD PTR [esi]
  40c467:	push   esi
  40c468:	js     0x40c445
  40c46a:	mov    ss,WORD PTR [ecx]
  40c46c:	mov    bl,0x9d
  40c46e:	push   ebx
  40c46f:	mov    eax,0x454213
  40c474:	or     BYTE PTR [ebx-0x624f5412],ah
  40c47a:	sub    al,0x4
  40c47c:	lock loop 0x40c43a
  40c47f:	mov    WORD PTR [esi-0x63afae5f],gs
  40c485:	fcom   st(0)
  40c487:	test   BYTE PTR [ebx],dh
  40c489:	pop    ebx
  40c48a:	add    eax,0xfe
  40c48f:	scas   al,BYTE PTR es:[edi]
  40c490:	enter  0xb853,0xe7
  40c494:	add    DWORD PTR [ebx+0x0],0xabeea2c8
  40c49b:	mov    al,0x9d
  40c49d:	sub    al,0x4
  40c49f:	lock push es
  40c4a1:	sub    al,0xbc
  40c4a3:	outs   dx,DWORD PTR ds:[esi]
  40c4a4:	inc    edx
  40c4a5:	mov    eax,ds:0x9657a352
  40c4aa:	ror    DWORD PTR [esi-0x76],1
  40c4ad:	test   al,0x2e
  40c4af:	lock mov al,0x2b
  40c4b2:	mov    ecx,0x757cf9dd
  40c4b7:	xor    DWORD PTR [edi],eax
  40c4b9:	xor    DWORD PTR [edi-0x4716bc7e],esi
  40c4bf:	aas    
  40c4c0:	scas   eax,DWORD PTR es:[edi]
  40c4c1:	mov    ebp,0x5db76bab
  40c4c6:	mov    eax,0x4dbc670
  40c4cb:	lods   eax,DWORD PTR ds:[esi]
  40c4cc:	dec    ecx
  40c4cd:	dec    esi
  40c4ce:	mov    eax,0x447a06df
  40c4d3:	rep outs dx,BYTE PTR ds:[esi]
  40c4d5:	call   0x3647f64e
  40c4da:	mov    edx,DWORD PTR cs:[edi+0x41]
  40c4de:	sub    DWORD PTR [edi+ebp*4+0x25],edi
  40c4e2:	jg     0x40c520
  40c4e4:	cmp    edx,ebp
  40c4e6:	mov    ecx,0x56d0b02f
  40c4eb:	ins    BYTE PTR es:[edi],dx
  40c4ec:	cmp    dh,ah
  40c4ee:	sub    esi,ebx
  40c4f0:	xchg   al,ch
  40c4f2:	add    eax,DWORD PTR [eax]
  40c4f4:	add    BYTE PTR [eax],al
  40c4f6:	shr    BYTE PTR [edi-0x5042448d],0xdb
  40c4fd:	(bad)  
  40c4fe:	loop   0x40c546
  40c500:	jmp    0xe5f0c2af
  40c505:	mov    bh,0x69
  40c507:	dec    ecx
  40c508:	loope  0x40c565
  40c50a:	sub    al,ah
  40c50c:	loopne 0x40c511
  40c50e:	cdq    
  40c50f:	push   es
  40c510:	into   
  40c511:	icebp  
  40c512:	sub    BYTE PTR [ecx+ebp*1+0x4],dh
  40c516:	sbb    al,0x19
  40c518:	fst    DWORD PTR [edx]
  40c51a:	mov    bl,0x6
  40c51c:	add    BYTE PTR [esi-0x493ff3d1],bh
  40c522:	daa    
  40c523:	les    edx,FWORD PTR [esp+esi*2-0x35]
  40c527:	jmp    0xe902:0x34b688b
  40c52e:	lock push esp
  40c530:	lea    esp,[ebx+edx*1]
  40c533:	push   edi
  40c534:	lea    ebp,[edi+ecx*4]
  40c537:	ds (bad) 
  40c539:	and    al,0x13
  40c53b:	(bad)  
  40c53d:	call   0x91557332
  40c542:	loope  0x40c58a
  40c544:	add    BYTE PTR [edi+esi*4+0x33],ch
  40c548:	or     eax,0xb79f026c
  40c54d:	lahf   
  40c54e:	test   DWORD PTR [esi],0x46a84100
  40c554:	add    ecx,ebp
  40c556:	imul   esi,ebx,0xd733
  40c55c:	add    BYTE PTR [eax],dh
  40c55e:	pop    es
  40c55f:	push   ebx
  40c560:	sahf   
  40c561:	or     DWORD PTR [edx],edx
  40c563:	add    ecx,ebp
  40c565:	lock pop ecx
  40c567:	xor    esp,DWORD PTR [esi]
  40c569:	push   0xffffff83
  40c56b:	outs   dx,DWORD PTR ds:[esi]
  40c56c:	pop    ds
  40c56d:	cmp    al,0xad
  40c56f:	push   esi
  40c570:	mov    ecx,0x2582d4a5
  40c575:	sti    
  40c576:	jnp    0x40c4fc
  40c578:	jns    0x40c520
  40c57a:	lods   eax,DWORD PTR ds:[esi]
  40c57b:	(bad)  
  40c57c:	cdq    
  40c57d:	mov    ebp,DWORD PTR [bx-0x9]
  40c581:	test   DWORD PTR [ebp+0x1884d4fe],ebp
  40c587:	inc    eax
  40c588:	jmp    0xf0b53400
  40c58d:	mov    eax,ds:0x6559847b
  40c592:	lods   eax,DWORD PTR ds:[esi]
  40c593:	inc    dl
  40c595:	stc    
  40c596:	push   ds
  40c597:	add    BYTE PTR [eax],al
  40c599:	or     ecx,DWORD PTR [edx]
  40c59b:	add    BYTE PTR [ebp-0x2d271],cl
  40c5a1:	inc    ebp
  40c5a2:	cmp    eax,0x895cff50
  40c5a7:	ret    0x870c
  40c5aa:	test   BYTE PTR [ebx+0x99bb8],0x0
  40c5b1:	jb     0x40c587
  40c5b3:	inc    ebp
  40c5b4:	add    edx,ebx
  40c5b6:	jle    0x40c62b
  40c5b8:	inc    eax
  40c5b9:	xor    bh,BYTE PTR [eax]
  40c5bb:	(bad)  
  40c5bc:	dec    edx
  40c5be:	popa   
  40c5bf:	rol    BYTE PTR [edi+0x0],1
  40c5c2:	add    BYTE PTR [eax],al
  40c5c4:	fisttp DWORD PTR [ecx]
  40c5c6:	mov    eax,esi
  40c5c8:	jmp    0x134:0x7a8c437f
  40c5cf:	add    dl,cl
  40c5d1:	mov    DWORD PTR [ecx-0x2891cd39],ecx
  40c5d7:	add    DWORD PTR [edx+0x275c437a],ebx
  40c5dd:	div    DWORD PTR [edi]
  40c5df:	mov    eax,0xa19
  40c5e4:	xor    ah,BYTE PTR ds:0x7e9a0146
  40c5ea:	inc    ebx
  40c5eb:	jo     0x40c627
  40c5ed:	fild   WORD PTR [eax]
  40c5ef:	xor    ebx,esp
  40c5f1:	cmp    ecx,DWORD PTR [ebp+0x5759d645]
  40c5f7:	mov    DWORD PTR [edi-0x1b],edi
  40c5fa:	mov    BYTE PTR [ebp-0x26],bh
  40c5fd:	jp     0x40c672
  40c5ff:	push   0x106ffd55
  40c604:	call   0x8d18:0xbfc08509
  40c60b:	inc    ebp
  40c60c:	mov    ds:0xf8d5652,al
  40c611:	stos   DWORD PTR es:[edi],eax
  40c612:	dec    esi
  40c613:	(bad)  
  40c614:	repz push edx
  40c616:	xor    al,0xe8
  40c618:	(bad)  
  40c619:	jns    0x40c61d
  40c61b:	add    BYTE PTR [eax],cl
  40c61d:	mov    al,ds:0x2014c77f
  40c622:	mov    esp,0xf7d887fe
  40c627:	lds    eax,FWORD PTR [eax]
  40c629:	add    BYTE PTR [eax],al
  40c62b:	jge    0x40c601
  40c62d:	push   edx
  40c62e:	inc    DWORD PTR [esi-0x788378e9]
  40c634:	sbb    DWORD PTR [edx],eax
  40c636:	pop    eax
  40c637:	fisttp DWORD PTR [eax]
  40c639:	push   es
  40c63a:	add    bl,dh
  40c63c:	jl     0x40c66c
  40c63e:	push   0xfeb2a4cb
  40c643:	aam    0x39
  40c645:	aas    
  40c646:	ins    BYTE PTR es:[edi],dx
  40c647:	jp     0x40c624
  40c649:	and    ecx,DWORD PTR [ebp-0x4c8421c2]
  40c64f:	repz popf 
  40c651:	add    ch,al
  40c653:	cs add DWORD PTR gs:[eax],eax
  40c657:	inc    eax
  40c658:	and    edi,DWORD PTR [edi+0x6f]
  40c65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c65c:	cmp    eax,0xa0094fb5
  40c661:	test   DWORD PTR [ebx+eiz*1+0x66],edi
  40c665:	stos   BYTE PTR es:[edi],al
  40c666:	cmp    edi,ebp
  40c668:	popf   
  40c669:	add    ch,BYTE PTR [edx-0x5]
  40c66c:	dec    edx
  40c66d:	aas    
  40c66e:	pop    esp
  40c66f:	and    ebx,DWORD PTR [eax+0x79f68d00]
  40c675:	pop    edx
  40c676:	call   0x436a93
  40c67b:	fs xchg ebx,eax
  40c67d:	lea    esi,es:[esi-0x1c8b4aeb]
  40c684:	lea    eax,[edi+0x372b78c5]
  40c68a:	push   eax
  40c68b:	fstp   DWORD PTR [ecx+0x57]
  40c68e:	mov    eax,DWORD PTR [eax]
  40c690:	add    BYTE PTR [eax],al
  40c692:	cmp    eax,0x169d107
  40c697:	pop    es
  40c698:	jmp    0x3657f71d
  40c69d:	mov    ebp,DWORD PTR [edi+0x24813222]
  40c6a3:	push   es
  40c6a4:	inc    esp
  40c6a5:	or     bl,BYTE PTR [ebx+0x72]
  40c6a8:	call   0xb8dfb9b0
  40c6ad:	cmp    eax,0x810f06f2
  40c6b2:	aaa    
  40c6b3:	xor    esi,DWORD PTR [eax+0x3706f0c1]
  40c6b9:	jbe    0x40c72f
  40c6bb:	add    ecx,ebp
  40c6bd:	add    edi,DWORD PTR ds:0x3322e11f
  40c6c3:	pop    es
  40c6c4:	push   ds
  40c6c5:	mov    ch,0xff
  40c6c7:	not    dh
  40c6c9:	inc    ebx
  40c6ca:	repz jg 0x40c6b0
  40c6cd:	mov    ebx,0xe94782
  40c6d2:	out    dx,al
  40c6d3:	repnz xchg esp,eax
  40c6d5:	inc    eax
  40c6d6:	xrelease xchg DWORD PTR [edi+eax*1],esp
  40c6da:	js     0x40c69f
  40c6dc:	add    ebp,eax
  40c6de:	jp     0x40c6f2
  40c6e0:	call   0xb787b3d8
  40c6e5:	cs pushf 
  40c6e7:	dec    esp
  40c6e8:	sub    cl,BYTE PTR [esi+0x78]
  40c6eb:	call   0x3e9:0x7f4a767
  40c6f2:	and    BYTE PTR [edi],bl
  40c6f4:	jno    0x40c6f4
  40c6f6:	add    BYTE PTR [eax],al
  40c6f8:	add    BYTE PTR [ebx+ebp*4-0x70],dh
  40c6fc:	or     edx,edx
  40c6fe:	inc    esi
  40c6ff:	jmp    0xef3368a
  40c704:	mov    ah,0x5d
  40c706:	sahf   
  40c707:	aam    0x4d
  40c709:	repnz push es
  40c70b:	jb     0x40c712
  40c70d:	mov    ds:0xf8abff7f,eax
  40c712:	sahf   
  40c713:	daa    
  40c714:	xchg   edi,eax
  40c715:	lock push es
  40c717:	(bad)  
  40c718:	out    dx,eax
  40c719:	lock or BYTE PTR [eax],al
  40c71c:	jmp    0xdb4329c
  40c721:	jb     0x40c79d
  40c723:	repz iret 
  40c725:	pusha  
  40c726:	lods   al,BYTE PTR ds:[esi]
  40c727:	push   eax
  40c728:	pop    ds
  40c729:	mov    edi,0x43b59c79
  40c72e:	lods   al,BYTE PTR ds:[esi]
  40c72f:	inc    cl
  40c731:	addr16 push edi
  40c733:	add    cl,ch
  40c735:	je     0x40c7a2
  40c737:	jae    0x40c72e
  40c739:	inc    ecx
  40c73a:	icebp  
  40c73b:	mov    ch,BYTE PTR [edx-0x796b60b9]
  40c741:	mov    al,ds:0xe5ebeaa9
  40c746:	push   0x5a
  40c748:	mov    al,0xad
  40c74a:	push   es
  40c74b:	add    BYTE PTR [esp+ecx*2],dl
  40c74e:	sahf   
  40c74f:	add    BYTE PTR [ebp-0x16fff829],0x25
  40c756:	push   ecx
  40c757:	push   edi
  40c758:	mov    ds:0xe90007db,al
  40c75d:	add    BYTE PTR [eax],al
  40c75f:	add    BYTE PTR [ebp+0x7e],al
  40c762:	test   ecx,0xe9403538
  40c768:	jae    0x40c6ed
  40c76a:	retf   
  40c76b:	inc    edi
  40c76c:	pusha  
  40c76d:	test   eax,0xaf3a264f
  40c772:	jmp    0xe85b2700
  40c777:	call   DWORD PTR [ecx-0x57]
  40c77a:	(bad)  
  40c77b:	fidivr DWORD PTR [edx]
  40c77d:	cmc    
  40c77e:	mov    edi,0xf803b373
  40c783:	ftst   
  40c785:	repnz retf 
  40c787:	push   fs
  40c789:	test   eax,0x5ac9003f
  40c78e:	add    dh,BYTE PTR [ebp+0x58]
  40c791:	mov    cl,0xbe
  40c793:	inc    esi
  40c794:	xor    DWORD PTR [ecx+0x70],0x3ec679e8
  40c79b:	lea    edx,[edi+0x2193e68a]
  40c7a1:	push   es
  40c7a2:	add    BYTE PTR [ebx-0x73019149],al
  40c7a8:	xchg   edi,eax
  40c7a9:	imul   edi,esp,0x8b562dff
  40c7af:	(bad)  
  40c7b0:	and    bh,cl
  40c7b2:	repnz add BYTE PTR [edx],bl
  40c7b5:	cmp    BYTE PTR [esi-0x3ad6298c],0xe8
  40c7bc:	mov    cl,0x71
  40c7be:	(bad)  
  40c7bf:	jmp    DWORD PTR [ecx+0x76]
  40c7c2:	xchg   DWORD PTR [ebp+0x0],esi
  40c7c5:	add    BYTE PTR [eax],al
  40c7c7:	cmp    BYTE PTR [esi-0xc],0x7e
  40c7cb:	(bad)  
  40c7cc:	cwde   
  40c7cd:	cld    
  40c7ce:	jbe    0x40c76a
  40c7d0:	enter  0x57fc,0x4d
  40c7d4:	out    dx,eax
  40c7d5:	pop    es
  40c7d6:	lea    edx,[edi]
  40c7d8:	mov    esp,esi
  40c7da:	fcom   st(1)
  40c7dc:	add    eax,0xf20a8400
  40c7e1:	sbb    eax,0x89adcf03
  40c7e6:	(bad)  
  40c7e7:	xchg   BYTE PTR gs:[ebx-0x18],bh
  40c7eb:	xor    dh,ah
  40c7ed:	repnz add BYTE PTR [edx-0x618b417f],cl
  40c7f4:	sub    dh,dh
  40c7f6:	call   0x3f3bd4
  40c7fb:	adc    edi,ebp
  40c7fd:	imul   ebx
  40c7ff:	add    BYTE PTR [esi+0x3002e873],0xf1
  40c806:	add    bl,dh
  40c808:	lahf   
  40c809:	cmc    
  40c80a:	cmc    
  40c80b:	ror    BYTE PTR [edx-0x78],0xcb
  40c80f:	push   ebp
  40c810:	add    BYTE PTR [edx-0x4e700c97],dh
  40c816:	adc    al,0xff
  40c818:	leave  
  40c819:	inc    edx
  40c81a:	add    BYTE PTR [eax-0x1d],dh
  40c81d:	(bad)  
  40c81e:	pop    esi
  40c81f:	push   0x3a5b5159
  40c824:	pop    ebp
  40c825:	pop    es
  40c826:	add    BYTE PTR [esi+0x80a024],bh
  40c82c:	add    BYTE PTR [eax],al
  40c82e:	comiss xmm0,DWORD PTR [edi]
  40c831:	add    bl,dh
  40c833:	or     al,0x5a
  40c835:	push   edi
  40c836:	cdq    
  40c837:	add    ebx,DWORD PTR [edi+edx*1+0x32b07015]
  40c83e:	sbb    BYTE PTR [ebx+eax*8-0x4bcb158d],dh
  40c845:	out    0xa1,eax
  40c847:	add    DWORD PTR [edx],0xf39cd800
  40c84d:	mov    edi,0x425ea690
  40c852:	(bad)
  40c857:	mov    ds:0x3ef30001,al
  40c85c:	in     al,0xab
  40c85e:	xor    BYTE PTR [esi-0x621b20a7],bl
  40c864:	add    cl,BYTE PTR [edi]
  40c866:	ja     0x40c8ba
  40c868:	add    al,0x0
  40c86a:	xrelease xchg BYTE PTR [ebx],al
  40c86d:	or     bl,dh
  40c86f:	popf   
  40c870:	sub    ecx,DWORD PTR ss:[ebx]
  40c873:	dec    edx
  40c874:	pop    es
  40c875:	add    bl,dh
  40c877:	push   ebp
  40c878:	retf   
  40c879:	in     al,dx
  40c87a:	test   cl,dh
  40c87c:	in     al,dx
  40c87d:	ret    0xcf07
  40c880:	scas   eax,DWORD PTR es:[edi]
  40c881:	xor    al,0x77
  40c883:	pop    es
  40c884:	pop    ebx
  40c885:	inc    ebp
  40c886:	repz jnp 0x40c8a1
  40c889:	pushf  
  40c88a:	jmp    0x40c86c
  40c88c:	out    0x3,eax
  40c88e:	push   0x601b7
  40c893:	add    BYTE PTR [eax],al
  40c895:	and    BYTE PTR [ecx+0x4498fc47],dh
  40c89b:	jmp    0xe7bc5a3b
  40c8a0:	add    eax,DWORD PTR [ebp+0x2]
  40c8a3:	leave  
  40c8a4:	pop    edi
  40c8a5:	mov    cl,0x6
  40c8a7:	or     DWORD PTR [eax],edi
  40c8a9:	clc    
  40c8aa:	jns    0x40c847
  40c8ac:	aaa    
  40c8ad:	sub    DWORD PTR [eax-0x56f9642b],ebp
  40c8b3:	int    0xb0
  40c8b5:	sbb    eax,0xb1600902
  40c8ba:	push   es
  40c8bb:	jmp    0x3d47bbc2
  40c8c0:	adc    eax,0x5fe0ea68
  40c8c5:	mov    cl,0x6
  40c8c7:	cmp    dl,BYTE PTR [ebp+0x5b]
  40c8ca:	adc    edx,ebx
  40c8cc:	inc    edx
  40c8cd:	repz push ebx
  40c8cf:	and    DWORD PTR [eax-0x4616fa2b],0x4454e6ef
  40c8d9:	repz inc esi
  40c8db:	cmc    
  40c8dc:	aas    
  40c8dd:	pop    ecx
  40c8de:	sti    
  40c8df:	xor    BYTE PTR [esi],0xce
  40c8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e3:	ins    DWORD PTR es:[edi],dx
  40c8e4:	jo     0x40c8aa
  40c8e6:	jl     0x40c890
  40c8e8:	add    ebp,eax
  40c8ea:	ret    
  40c8eb:	aam    0xff
  40c8ed:	jnp    0x40c8dd
  40c8ef:	pusha  
  40c8f0:	dec    ebx
  40c8f1:	idiv   DWORD PTR [ebp-0x50]
  40c8f4:	sti    
  40c8f5:	imul   esi,DWORD PTR [esi+0x551],0x87b0c000
  40c8ff:	sti    
  40c900:	pop    eax
  40c901:	inc    ebx
  40c902:	add    cl,ch
  40c904:	pop    eax
  40c905:	call   0x1d31b195
  40c90a:	or     al,0x11
  40c90c:	sub    eax,0x571efe9a
  40c911:	les    esi,FWORD PTR [ebx-0x1c]
  40c914:	(bad)  
  40c916:	lds    ebp,FWORD PTR [ecx-0x5e76fa14]
  40c91c:	dec    eax
  40c91d:	jl     0x40c90e
  40c91f:	adc    ch,dh
  40c921:	repz cmc 
  40c923:	dec    eax
  40c924:	cmp    BYTE PTR [ebx+0x42],bl
  40c927:	jmp    0xe8ccd584
  40c92c:	lock mov al,0x4
  40c92f:	or     DWORD PTR [ebx-0x2496ffbc],edx
  40c935:	sti    
  40c936:	mov    bl,ah
  40c938:	sbb    BYTE PTR [ebx+0x42],bl
  40c93b:	jmp    0xeb5207a8
  40c940:	lock out dx,al
  40c942:	pop    esp
  40c943:	loope  0x40c909
  40c945:	in     eax,0x8a
  40c947:	hlt    
  40c948:	clc    
  40c949:	pop    edx
  40c94a:	inc    edx
  40c94b:	jmp    0xe928a3d8
  40c950:	lock addr16 pop es
  40c953:	inc    ebp
  40c954:	xor    BYTE PTR [edi],al
  40c956:	mov    ebx,DWORD PTR [ecx-0xd8c3638]
  40c95c:	push   0xe8e560
  40c961:	add    BYTE PTR [eax],al
  40c963:	lock cmp al,0xe8
  40c966:	fist   WORD PTR [ebx+0x250efea5]
  40c96c:	inc    edx
  40c96d:	leave  
  40c96e:	sub    edi,ebx
  40c970:	push   es
  40c971:	push   ebp
  40c972:	jb     0x40c9c7
  40c974:	xchg   ebx,ebp
  40c976:	in     eax,0xf2
  40c978:	push   es
  40c979:	add    BYTE PTR [edx+ebp*1+0xf],bl
  40c97d:	push   eax
  40c97e:	add    BYTE PTR ds:0x4fc607e0,dh
  40c984:	jne    0x40c984
  40c986:	(bad)  
  40c987:	lahf   
  40c988:	push   cs
  40c989:	adc    BYTE PTR [eax-0x76],al
  40c98c:	(bad)  
  40c98d:	mov    esi,0x57398374
  40c992:	(bad)  
  40c993:	jg     0x40c937
  40c995:	mov    ecx,0xa4b04
  40c99a:	push   0x3fde6a
  40c99f:	(bad)  
  40c9a0:	pop    ss
  40c9a1:	repz std 
  40c9a3:	inc    ebp
  40c9a4:	jne    0x40c98c
  40c9a6:	mov    ah,0x7a
  40c9a8:	or     al,BYTE PTR [eax]
  40c9aa:	pop    ecx
  40c9ab:	arpl   WORD PTR [edi+0x2d47ebe],cx
  40c9b1:	fdiv   DWORD PTR [edx+ebx*8+0xa]
  40c9b5:	mov    eax,edi
  40c9b7:	fidiv  DWORD PTR [edx]
  40c9b9:	add    DWORD PTR [eax],eax
  40c9bb:	or     cl,BYTE PTR [edx+0xb6f45e6]
  40c9c1:	add    BYTE PTR [ebp-0x7cd821a6],al
  40c9c7:	add    BYTE PTR [eax],al
  40c9c9:	add    BYTE PTR [edx+0x75],al
  40c9cc:	jb     0x40c9f1
  40c9ce:	xchg   ecx,eax
  40c9cf:	int3   
  40c9d0:	dec    esi
  40c9d1:	(bad)  
  40c9d2:	out    dx,eax
  40c9d3:	in     eax,dx
  40c9d4:	adc    al,BYTE PTR [eax-0x26]
  40c9d7:	cmp    bh,bh
  40c9d9:	jne    0x40c9b1
  40c9db:	and    dh,al
  40c9dd:	push   eax
  40c9de:	inc    BYTE PTR gs:[ebx+0x11]
  40c9e2:	sbb    cl,BYTE PTR [ebx]
  40c9e4:	dec    eax
  40c9e5:	lea    eax,[ecx]
  40c9e7:	jbe    0x40ca22
  40c9e9:	enter  0xc9a0,0xfc
  40c9ed:	rcl    BYTE PTR [edx+0x4f],0xff
  40c9f1:	dec    edi
  40c9f3:	mov    eax,ds:0xf77215fd
  40c9f8:	aas    
  40c9f9:	add    bl,dh
  40c9fb:	pop    esp
  40c9fc:	dec    ecx
  40c9fd:	mov    ch,BYTE PTR [esi]
  40c9ff:	push   ebp
  40ca00:	mov    esp,0x57affbc1
  40ca05:	mov    edx,DWORD PTR [edi+0x9f7a730]
  40ca0b:	mov    cl,0x9a
  40ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca0e:	jl     0x40ca04
  40ca10:	lods   eax,DWORD PTR ds:[esi]
  40ca11:	xor    DWORD PTR [ebx],0xffffff83
  40ca14:	adc    ch,BYTE PTR [edx-0xd]
  40ca17:	test   DWORD PTR [esi+edi*8],0xc69afc5c
  40ca1e:	mov    bl,0xaf
  40ca20:	add    dh,BYTE PTR [eax+0x3200f8f2]
  40ca26:	xor    ebx,DWORD PTR [eax]
  40ca28:	test   al,0x5c
  40ca2a:	xor    BYTE PTR [edi],al
  40ca2c:	xlat   BYTE PTR ds:[ebx]
  40ca2d:	inc    BYTE PTR [eax]
  40ca2f:	add    BYTE PTR [eax],al
  40ca31:	xor    al,0xb4
  40ca33:	test   DWORD PTR [edi+0x1a15a7],edi
  40ca39:	and    al,0x9a
  40ca3b:	rcl    BYTE PTR [ecx],cl
  40ca3d:	mov    bl,0xaf
  40ca3f:	imul   ecx,DWORD PTR [ecx+edi*4-0x51],0x97ca6602
  40ca47:	xor    eax,0xefd77814
  40ca4c:	cmp    BYTE PTR [edi-0xcbaad52],0xaf
  40ca53:	xor    eax,0x2da7808
  40ca58:	sub    al,dh
  40ca5a:	push   ebp
  40ca5b:	lods   al,BYTE PTR ds:[esi]
  40ca5c:	loopne 0x40ca7e
  40ca5e:	outs   dx,BYTE PTR ds:[esi]
  40ca5f:	shl    bh,0x91
  40ca62:	xchg   ebp,eax
  40ca63:	lods   al,BYTE PTR ds:[esi]
  40ca64:	inc    BYTE PTR [eax]
  40ca66:	outs   dx,BYTE PTR ds:[esi]
  40ca67:	rol    DWORD PTR [ebx],0xf3
  40ca6a:	cli    
  40ca6b:	js     0x40ca58
  40ca6d:	jo     0x40c9f9
  40ca6f:	sbb    edx,DWORD PTR [ebx+0x1d]
  40ca72:	pusha  
  40ca73:	(bad)  
  40ca74:	push   cs
  40ca75:	gs pop es
  40ca77:	pop    edx
  40ca78:	sbb    dh,cl
  40ca7a:	xchg   ecx,eax
  40ca7b:	mov    ds:0x1c922c8b,eax
  40ca80:	ja     0x40ca1a
  40ca82:	sbb    ebp,DWORD PTR [ecx+0x50dd8c03]
  40ca88:	in     al,dx
  40ca89:	mov    esp,DWORD PTR [ebp+edi*1-0x6780c881]
  40ca90:	fwait
  40ca91:	mov    eax,0x3eb01
  40ca96:	add    BYTE PTR [eax],al
  40ca98:	ja     0x40ca61
  40ca9a:	fwait
  40ca9b:	out    0xda,al
  40ca9d:	add    eax,0x377b476c
  40caa2:	push   ss
  40caa3:	test   BYTE PTR [ebp+eax*1+0x10],0xad
  40caa8:	dec    ebp
  40caa9:	xchg   edx,eax
  40caaa:	stos   DWORD PTR es:[edi],eax
  40caab:	mov    esi,DWORD PTR [esi+ebp*4+0x6f10eca]
  40cab2:	ins    DWORD PTR es:[edi],dx
  40cab3:	les    edi,FWORD PTR [edi-0x533f10f1]
  40cab9:	lahf   
  40caba:	jmp    0x40caed
  40cabc:	push   0x31bb4245
  40cac1:	push   edi
  40cac2:	out    0x98,eax
  40cac4:	sbb    al,0x3a
  40cac6:	bound  ebx,QWORD PTR [edi-0x7d3f548f]
  40cacc:	sbb    bl,ch
  40cace:	icebp  
  40cacf:	add    esi,ebx
  40cad1:	aaa    
  40cad2:	pop    ds
  40cad3:	push   ebp
  40cad4:	hlt    
  40cad5:	fldcw  WORD PTR [eax+eiz*2]
  40cad8:	xor    DWORD PTR [edi],eax
  40cada:	je     0x40cb13
  40cadc:	lsl    esp,WORD PTR [edi-0x1707e8b9]
  40cae3:	fwait
  40cae4:	dec    eax
  40cae5:	scas   al,BYTE PTR es:[edi]
  40cae6:	out    0x3,eax
  40cae8:	ja     0x40cab0
  40caea:	cld    
  40caeb:	fnstsw WORD PTR [ecx+0x4a]
  40caee:	lds    ecx,FWORD PTR [edi]
  40caf0:	mov    esp,0xe8cd001a
  40caf5:	xchg   ecx,eax
  40caf6:	jae    0x40cabd
  40caf8:	add    al,0x8e
  40cafa:	inc    ebx
  40cafb:	or     eax,0xb000000
  40cb00:	scas   eax,DWORD PTR es:[edi]
  40cb01:	or     eax,0x8aa44f5d
  40cb06:	push   ecx
  40cb07:	sbb    DWORD PTR [eax],esp
  40cb09:	and    al,0xf5
  40cb0b:	jne    0x40cab1
  40cb0d:	je     0x40cafc
  40cb0f:	xchg   ecx,eax
  40cb10:	inc    edi
  40cb11:	and    al,0xd9
  40cb13:	std    
  40cb14:	inc    edi
  40cb15:	and    al,0xd1
  40cb17:	pop    eax
  40cb18:	mov    ebx,0xaff0e8e8
  40cb1d:	add    esi,DWORD PTR [edx+0x14]
  40cb20:	jmp    0x40cb35
  40cb22:	push   0x70feb0c
  40cb27:	icebp  
  40cb28:	push   es
  40cb29:	add    dh,bl
  40cb2b:	jne    0x40cb19
  40cb2d:	add    cl,ch
  40cb2f:	lock cmp ebp,eax
  40cb32:	xchg   ecx,eax
  40cb33:	push   ds
  40cb34:	add    eax,0x14306d00
  40cb39:	test   BYTE PTR [edi-0xe],bl
  40cb3c:	push   es
  40cb3d:	add    BYTE PTR [ebx-0x12],dl
  40cb40:	xchg   ecx,eax
  40cb41:	inc    ebx
  40cb42:	add    eax,0x196836d3
  40cb47:	(bad)  
  40cb48:	jbe    0x40cb81
  40cb4a:	rcr    ebx,0x9e
  40cb4d:	inc    dh
  40cb4f:	mov    al,BYTE PTR [edi+0x24]
  40cb52:	dec    ecx
  40cb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb54:	xor    BYTE PTR [ecx],al
  40cb56:	inc    ecx
  40cb57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb58:	jb     0x40cb9c
  40cb5a:	jmp    0xf898c6f8
  40cb5f:	xor    BYTE PTR [edi],al
  40cb61:	mov    ebx,DWORD PTR [ecx+0x72000000]
  40cb67:	pushf  
  40cb68:	push   cs
  40cb69:	ins    DWORD PTR es:[edi],dx
  40cb6a:	push   cs
  40cb6b:	add    eax,0xfb99e900
  40cb70:	pop    ss
  40cb71:	add    BYTE PTR [ebx-0x6074ffba],ch
  40cb77:	adc    DWORD PTR es:[eax-0x36],eax
  40cb7b:	scas   eax,DWORD PTR es:[edi]
  40cb7c:	mov    ch,0x0
  40cb7e:	call   0xd16d:0x64057506
  40cb85:	xor    eax,DWORD PTR [eax+ecx*4-0xc]
  40cb89:	clts   
  40cb8b:	dec    esp
  40cb8c:	add    al,BYTE PTR [eax]
  40cb8e:	call   0xa806:0x9a957d7e
  40cb95:	and    BYTE PTR [esi+0x5],al
  40cb98:	or     DWORD PTR ds:0x423eea,0x4a
  40cb9f:	pop    ds
  40cba0:	and    DWORD PTR [esi+ebx*1],0xb
  40cba4:	add    BYTE PTR [eax],al
  40cba6:	call   0x8406:0x4a95967e
  40cbad:	shl    BYTE PTR [edi-0x22],0x8c
  40cbb1:	mov    esp,0x30636
  40cbb6:	dec    edx
  40cbb7:	jle    0x40cbe1
  40cbb9:	sti    
  40cbba:	cmp    eax,0xde83646d
  40cbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc0:	fiadd  WORD PTR [esi]
  40cbc2:	sbb    al,BYTE PTR [esi]
  40cbc4:	add    BYTE PTR [esp+esi*8+0x0],dh
  40cbc8:	adc    eax,0x8d
  40cbcd:	xchg   esi,eax
  40cbce:	shl    edx,0x6
  40cbd1:	sbb    al,BYTE PTR [esi]
  40cbd3:	lea    ecx,[esi+esi*8-0x4e]
  40cbd7:	out    0x4f,al
  40cbd9:	call   0xc6cdcbe8
  40cbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbdf:	xor    dl,BYTE PTR [eax-0x63]
  40cbe2:	idiv   BYTE PTR [edi+0x12]
  40cbe5:	sbb    cl,BYTE PTR [ebx]
  40cbe7:	lea    ecx,[esi+esi*4-0x4f]
  40cbeb:	add    eax,eax
  40cbed:	repz ficomp WORD PTR [esi-0xa4fa6fd]
  40cbf4:	mov    edi,0xba9aae59
  40cbf9:	popa   
  40cbfa:	scas   eax,DWORD PTR es:[edi]
  40cbfb:	add    ch,al
  40cbfd:	nop
  40cbfe:	jle    0x40cc03
  40cc00:	add    BYTE PTR [ebp+0x30abe2aa],ah
  40cc06:	mov    al,0x12
  40cc08:	je     0x40cbf8
  40cc0a:	mov    bh,0x2
  40cc0c:	add    bl,dh
  40cc0e:	das    
  40cc0f:	sbb    eax,0x769a8c14
  40cc14:	adc    esi,DWORD PTR [ebx]
  40cc16:	mov    al,0x1c
  40cc18:	add    DWORD PTR [esi+0x6b],ebp
  40cc1b:	fisub  WORD PTR [ebx+0x23]
  40cc1e:	enter  0x52e9,0xb0
  40cc22:	add    eax,0xe85caa9c
  40cc27:	test   eax,0x22cbb78c
  40cc2c:	push   eax
  40cc2d:	leave  
  40cc2e:	scas   eax,DWORD PTR es:[edi]
  40cc2f:	sbb    al,0x2
  40cc31:	add    BYTE PTR [eax],al
  40cc33:	add    BYTE PTR [edx+ebx*4+0x5a],cl
  40cc37:	adc    DWORD PTR [ebx+0x76f77daf],esi
  40cc3d:	mov    al,ds:0x989c0a2d
  40cc42:	push   cs
  40cc43:	aam    0x1
  40cc45:	jo     0x40cc49
  40cc47:	push   edi
  40cc48:	and    al,0x5c
  40cc4a:	sbb    eax,0xacc00b01
  40cc4f:	(bad)  
  40cc50:	adc    al,0xe1
  40cc52:	rol    DWORD PTR [ebx-0x29],0x9c
  40cc56:	add    edi,edi
  40cc58:	and    BYTE PTR [eax+ebp*1],dl
  40cc5b:	and    al,0xe7
  40cc5d:	mov    dh,0x2e
  40cc5f:	add    ebx,esi
  40cc61:	scas   eax,DWORD PTR es:[edi]
  40cc62:	cmp    DWORD PTR [ebx+0x17],0xffffffbe
  40cc66:	adc    cl,BYTE PTR [edi]
  40cc68:	outs   dx,BYTE PTR ds:[esi]
  40cc69:	pop    es
  40cc6a:	adc    eax,DWORD PTR [ebx]
  40cc6c:	repz push es
  40cc6e:	adc    eax,DWORD PTR [esi]
  40cc70:	dec    ebx
  40cc71:	sbb    al,0xdd
  40cc73:	jp     0x40ccea
  40cc75:	scas   eax,DWORD PTR es:[edi]
  40cc76:	jno    0x40cc29
  40cc78:	lds    esp,FWORD PTR [eax-0x8e8bf91]
  40cc7e:	arpl   sp,ax
  40cc80:	in     eax,0x8a
  40cc82:	daa    
  40cc83:	add    esi,ebx
  40cc85:	push   es
  40cc86:	pop    esp
  40cc87:	adc    al,0x6
  40cc8a:	jmp    0x8ccd:0x1b36f303
  40cc91:	and    al,0x32
  40cc93:	add    esi,ebx
  40cc95:	mov    ch,BYTE PTR [eax]
  40cc97:	xor    BYTE PTR [eax],al
  40cc99:	add    BYTE PTR [eax],al
  40cc9b:	icebp  
  40cc9c:	mov    al,ds:0x72d06329
  40cca1:	test   eax,0x35f90903
  40cca6:	hlt    
  40cca7:	ins    DWORD PTR es:[edi],dx
  40cca8:	cli    
  40cca9:	call   0x6a477fc1
  40ccae:	lods   al,BYTE PTR ds:[esi]
  40ccaf:	repz sbb edi,ebp
  40ccb2:	fwait
  40ccb3:	cdq    
  40ccb4:	repnz jmp 0x5bf8:0xc54b7b03
  40ccbc:	push   es
  40ccbd:	call   0x1c7bfc5
  40ccc2:	add    edi,DWORD PTR [esi-0x4cf0a0f]
  40ccc8:	mov    ecx,ebx
  40ccca:	out    dx,eax
  40cccb:	pop    eax
  40cccc:	inc    esp
  40cccd:	jmp    0xf96fb27a
  40ccd2:	xchg   ebp,eax
  40ccd3:	mov    dl,0x6
  40ccd5:	shl    eax,0xa3
  40ccd8:	push   es
  40ccd9:	jmp    0x744f4c86
  40ccde:	(bad)  
  40ccdf:	shl    BYTE PTR [edx-0x6e0cfc18],1
  40cce5:	jmp    DWORD PTR [esp+ecx*8+0x3]
  40cce9:	add    ebp,ecx
  40cceb:	lock scas al,BYTE PTR es:[edi]
  40cced:	push   esp
  40ccee:	(bad)
  40ccf1:	jmp    0x40ccc1
  40ccf3:	js     0x40cc82
  40ccf5:	cld    
  40ccf6:	xchg   esi,eax
  40ccf7:	fwait
  40ccf8:	cmp    DWORD PTR [edi-0x39ba22],0xffffffe8
  40ccff:	add    BYTE PTR [eax],al
  40cd01:	add    al,dh
  40cd03:	lahf   
  40cd04:	jbe    0x40ccf7
  40cd06:	aaa    
  40cd07:	add    esi,DWORD PTR [eax*2-0x900f8c9]
  40cd0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd0f:	daa    
  40cd10:	cmp    ecx,DWORD PTR [eax+0x36]
  40cd13:	pop    es
  40cd14:	call   0x480d66
  40cd19:	fs add al,0xe4
  40cd1c:	imul   ecx
  40cd1e:	lock push es
  40cd20:	call   0x466cdb
  40cd25:	jno    0x40ccdb
  40cd27:	jmp    0x5585:0xff1f50e
  40cd2e:	lock push es
  40cd30:	add    BYTE PTR [esp+ebx*1-0x15],dh
  40cd34:	and    edi,DWORD PTR [ecx-0x7ead43a1]
  40cd3a:	jo     0x40cda7
  40cd3c:	inc    edx
  40cd3d:	jmp    0xcdc45ee1
  40cd42:	cmp    BYTE PTR [esi],al
  40cd44:	add    cl,ch
  40cd46:	mov    al,ds:0xf0038fae
  40cd4b:	push   es
  40cd4c:	test   DWORD PTR [ecx],ebp
  40cd4e:	sub    edi,DWORD PTR [edx+0x43]
  40cd51:	or     eax,0x55bd724
  40cd56:	sbb    al,0x13
  40cd58:	ins    BYTE PTR es:[edi],dx
  40cd59:	inc    ebx
  40cd5a:	not    BYTE PTR [ecx+0x36d30543]
  40cd60:	push   0x4333f500
  40cd65:	sub    al,BYTE PTR [eax]
  40cd67:	add    BYTE PTR [eax],al
  40cd69:	and    dl,dh
  40cd6b:	cmc    
  40cd6c:	jmp    DWORD PTR [ebp+0x3a244320]
  40cd72:	xor    edx,DWORD PTR [ebx+0x6a]
  40cd75:	retf   
  40cd76:	add    bl,BYTE PTR [eax-0x54]
  40cd79:	or     DWORD PTR [ebx],eax
  40cd7b:	call   DWORD PTR ds:0x3ff922
  40cd81:	push   ecx
  40cd82:	xlat   BYTE PTR ds:[ebx]
  40cd83:	and    esp,DWORD PTR [ebx+eax*2]
  40cd86:	inc    edi
  40cd87:	and    al,0x18
  40cd89:	inc    ebx
  40cd8a:	xlat   BYTE PTR ds:[ebx]
  40cd8b:	and    ebx,DWORD PTR [eax+esi*8]
  40cd8e:	gs cmp ebx,eax
  40cd91:	lahf   
  40cd92:	fwait
  40cd93:	push   esp
  40cd94:	call   FWORD PTR [edi-0x75bfed06]
  40cd9a:	or     DWORD PTR [ebx+edx*2],0x20244717
  40cda1:	dec    edx
  40cda2:	add    BYTE PTR [edx],al
  40cda4:	call   FWORD PTR [edi-0x75bfeed2]
  40cdaa:	and    DWORD PTR [eax+eiz*4],edi
  40cdad:	dec    eax
  40cdae:	dec    edx
  40cdaf:	add    BYTE PTR [ecx],bh
  40cdb1:	jbe    0x40cd71
  40cdb3:	push   ss
  40cdb4:	je     0x40ce02
  40cdb6:	gs jb  0x40cddd
  40cdb9:	repnz gs aad 0xff
  40cdbd:	outs   dx,BYTE PTR ds:[esi]
  40cdbe:	mov    esi,0x4cfdff26
  40cdc3:	call   edi
  40cdc5:	shr    esi,0x23
  40cdc8:	adc    al,0x35
  40cdca:	out    dx,al
  40cdcb:	and    edx,DWORD PTR [eax]
  40cdcd:	add    BYTE PTR [eax],al
  40cdcf:	add    dl,dh
  40cdd1:	lahf   
  40cdd2:	sbb    BYTE PTR [edx],al
  40cdd4:	sbb    cl,BYTE PTR [edx-0x28f4f385]
  40cdda:	or     bh,bh
  40cddc:	(bad)  
  40cddd:	out    dx,al
  40cdde:	stos   DWORD PTR es:[edi],eax
  40cddf:	inc    ebx
  40cde0:	repz scas eax,DWORD PTR es:[edi]
  40cde2:	call   0xb57:0x2b0189a
  40cde9:	xchg   BYTE PTR [edx+0x3f19f4fe],bl
  40cdef:	and    al,0xfc
  40cdf1:	hlt    
  40cdf2:	inc    ebp
  40cdf3:	pop    ebx
  40cdf4:	js     0x40cdb8
  40cdf6:	inc    edi
  40cdf7:	ret    0xafeb
  40cdfa:	dec    edi
  40cdfb:	mov    eax,edi
  40cdfd:	ficom  WORD PTR [edx+0x56]
  40ce00:	add    BYTE PTR [esi+0x4c],bh
  40ce03:	xor    ch,BYTE PTR [eax-0x430d2e79]
  40ce09:	test   BYTE PTR [esi-0x41],bh
  40ce0c:	in     al,0x23
  40ce0e:	(bad)  
  40ce0f:	jmp    FWORD PTR [edi+ebp*4+0x2fec684d]
  40ce16:	add    eax,DWORD PTR [eax]
  40ce18:	pushf  
  40ce19:	call   0x4477:0xb03311c6
  40ce20:	(bad)  
  40ce21:	pop    edi
  40ce22:	icebp  
  40ce23:	fiadd  DWORD PTR [edx+edx*4-0x4fccee5e]
  40ce2a:	push   edx
  40ce2b:	(bad)  
  40ce2c:	fisubr WORD PTR [ebx+0x11]
  40ce2f:	inc    eax
  40ce30:	repz sub BYTE PTR [ebx+0x3a],ch
  40ce37:	gs push ebx
  40ce39:	dec    eax
  40ce3a:	cmp    DWORD PTR [esi+0x684e24e3],edi
  40ce40:	mov    ds:0x7b33846d,eax
  40ce45:	inc    ebx
  40ce46:	data16 jo 0x40ce00
  40ce49:	xlat   BYTE PTR ds:[ebx]
  40ce4a:	je     0x40ce44
  40ce4c:	xchg   esp,eax
  40ce4d:	ins    DWORD PTR es:[edi],dx
  40ce4e:	inc    edi
  40ce4f:	icebp  
  40ce50:	xor    BYTE PTR [ebp+eiz*2-0x177e3b59],bl
  40ce57:	sti    
  40ce58:	adc    esp,eax
  40ce5a:	or     BYTE PTR [edx],0x6
  40ce5d:	out    dx,al
  40ce5e:	das    
  40ce5f:	jmp    0x40ceb0
  40ce61:	push   esp
  40ce62:	fbstp  TBYTE PTR [ecx-0x2f]
  40ce65:	jmp    0x9500:0xa889e498
  40ce6c:	mov    DWORD PTR [eax],eax
  40ce6e:	add    al,0x7f
  40ce70:	cmc    
  40ce71:	sbb    BYTE PTR [ebp+0x43df4707],ah
  40ce77:	repz cmp eax,0x48a0008a
  40ce7d:	jmp    0xb1c8bb1a
  40ce82:	adc    al,0xd8
  40ce84:	or     BYTE PTR [edx-0x47],ch
  40ce87:	in     al,dx
  40ce88:	inc    esp
  40ce89:	shr    BYTE PTR [esi],cl
  40ce8b:	mov    edi,0xb44d3b1b
  40ce90:	repnz pusha 
  40ce92:	adc    dh,BYTE PTR [ebx]
  40ce94:	pop    es
  40ce95:	push   ss
  40ce96:	scas   al,BYTE PTR es:[edi]
  40ce97:	mov    cl,0x9
  40ce99:	cmc    
  40ce9a:	loopne 0x40ce9c
  40ce9c:	add    BYTE PTR [eax],al
  40ce9e:	xchg   esp,eax
  40ce9f:	and    DWORD PTR [edi],ebx
  40cea1:	add    esi,ebx
  40cea3:	scas   al,BYTE PTR es:[edi]
  40cea4:	shr    DWORD PTR [esi],1
  40cea6:	repnz push es
  40cea8:	pop    edi
  40cea9:	jmp    esp
  40ceab:	push   0xffffffa9
  40cead:	add    esi,edi
  40ceaf:	nop
  40ceb0:	and    BYTE PTR [eax],dh
  40ceb2:	(bad)  
  40ceb3:	xor    cl,ch
  40ceb5:	imul   eax,esp,0x5e
  40ceb8:	test   eax,0xf4b45b03
  40cebd:	add    dh,bl
  40cebf:	scas   eax,DWORD PTR es:[edi]
  40cec0:	push   es
  40cec1:	jns    0x40cef4
  40cec3:	(bad)  
  40cec4:	adc    BYTE PTR [eax],al
  40cec6:	inc    ebp
  40cec7:	mov    bh,0xcc
  40cec9:	add    dh,ah
  40cecb:	push   esp
  40cecc:	sub    bl,al
  40cece:	dec    ecx
  40cecf:	or     BYTE PTR [ecx-0x11f9ae7d],bl
  40ced5:	ins    DWORD PTR es:[edi],dx
  40ced6:	xor    DWORD PTR [edi],esi
  40ced8:	add    BYTE PTR [ecx],al
  40ceda:	sbb    eax,0x9aeefea0
  40cedf:	mov    bl,0x83
  40cee1:	ret    0xf1c4
  40cee4:	cmc    
  40cee5:	in     al,0x10
  40cee7:	jo     0x40cf2b
  40cee9:	jmp    0x434ce1e0
  40ceee:	push   esi
  40ceef:	popf   
  40cef0:	adc    al,0xb1
  40cef2:	loop   0x40cf3a
  40cef4:	add    BYTE PTR [edi],bl
  40cef6:	cmp    cl,dh
  40cef8:	ret    0xb0fa
  40cefb:	xchg   edx,ebx
  40cefd:	fisubr WORD PTR [ebx+ebx*2+0x4f]
  40cf01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf02:	add    BYTE PTR [eax],al
  40cf04:	add    ch,ah
  40cf06:	mov    ds:0xcaf72911,al
  40cf0b:	scas   eax,DWORD PTR es:[edi]
  40cf0c:	call   0x6240dac3
  40cf11:	sbb    eax,DWORD PTR cs:[ebp-0x7500fb65]
  40cf18:	daa    
  40cf19:	seto   BYTE PTR [ebp+0xd]
  40cf1d:	inc    ecx
  40cf1e:	aaa    
  40cf1f:	push   ecx
  40cf20:	adc    DWORD PTR [edx-0x5b],0x418be8ff
  40cf27:	push   0x29148dd5
  40cf2c:	pusha  
  40cf2d:	(bad)  
  40cf2e:	mov    esp,DWORD PTR cs:[edi+0x70]
  40cf32:	fwait
  40cf33:	(bad)  
  40cf34:	jmp    0xe0b42b2e
  40cf39:	jmp    0x40cec4
  40cf3b:	sub    ecx,0xfffffff0
  40cf3e:	push   es
  40cf3f:	push   edi
  40cf40:	cwde   
  40cf41:	in     eax,0x19
  40cf43:	fs mov ecx,0x1104148f
  40cf49:	push   ds
  40cf4a:	mov    ds:0x81afe8ff,al
  40cf4f:	mov    edi,0x56f395
  40cf54:	add    BYTE PTR [ecx],cl
  40cf56:	xchg   esi,eax
  40cf57:	mov    esi,0xeb1e87c3
  40cf5c:	mov    edx,DWORD PTR [edi-0x61]
  40cf5f:	push   ecx
  40cf60:	push   esi
  40cf61:	xchg   ecx,eax
  40cf62:	pop    eax
  40cf63:	push   ebp
  40cf64:	cmp    eax,esp
  40cf66:	fimul  DWORD PTR [esi]
  40cf68:	test   DWORD PTR [eax],eax
  40cf6a:	add    BYTE PTR [eax],al
  40cf6c:	sbb    eax,0x99000002
  40cf71:	call   0x835dcfe9
  40cf76:	add    eax,DWORD PTR [ecx]
  40cf78:	or     al,BYTE PTR [edi]
  40cf7a:	mov    edi,DWORD PTR [ebp-0x36]
  40cf7d:	mov    DWORD PTR [ebx+0x14],eax
  40cf80:	push   ecx
  40cf81:	fwait
  40cf82:	xchg   DWORD PTR [ebp-0x2e],edi
  40cf85:	imul   eax,edi,0x0
  40cf88:	retf   0x5306
  40cf8b:	jmp    edi
  40cf8d:	or     cl,BYTE PTR [ebp-0x73295dba]
  40cf93:	inc    esi
  40cf94:	ret    0x396e
  40cf97:	out    dx,eax
  40cf98:	retf   
  40cf99:	push   es
  40cf9a:	add    DWORD PTR [ebp-0x5e],eax
  40cf9d:	test   eax,0x95d48ad6
  40cfa2:	and    bh,BYTE PTR [edi-0x5a]
  40cfa5:	push   cs
  40cfa6:	cmp    al,0x1b
  40cfa8:	popf   
  40cfa9:	(bad)  
  40cfaa:	retf   
  40cfab:	add    BYTE PTR [edx-0x723f7bfa],bl
  40cfb1:	sbb    BYTE PTR [ebx-0x74f97600],0x46
  40cfb8:	ss dec esi
  40cfba:	dec    eax
  40cfbb:	je     0x40cf68
  40cfbd:	dec    esi
  40cfbe:	dec    eax
  40cfbf:	(bad)  
  40cfc1:	mov    ?,esi
  40cfc3:	dec    DWORD PTR [edx-0x45]
  40cfc6:	inc    esp
  40cfc7:	push   0xab825d
  40cfcc:	pop    edx
  40cfcd:	push   es
  40cfce:	push   ebx
  40cfcf:	inc    DWORD PTR [eax]
  40cfd1:	add    BYTE PTR [eax],al
  40cfd3:	repz jp 0x40cfe0
  40cfd6:	push   edi
  40cfd7:	cmp    al,0x93
  40cfd9:	rcl    BYTE PTR ds:0x448dafb3,cl
  40cfdf:	pop    es
  40cfe0:	sub    eax,0xb87a0bc8
  40cfe5:	mov    edi,DWORD PTR [ebx+ebp*8+0x7]
  40cfe9:	out    dx,eax
  40cfea:	(bad)  
  40cfeb:	adc    al,0xa1
  40cfed:	xchg   BYTE PTR [edi-0x72dc04],bh
  40cff3:	add    al,0xb0
  40cff5:	sub    al,0x1
  40cff7:	outs   dx,BYTE PTR ds:[esi]
  40cff8:	dec    edx
  40cff9:	sub    BYTE PTR [eax-0x1d],ch
  40cffc:	fiadd  DWORD PTR [ebx+0x0]
  40cfff:	in     al,dx
  40d000:	rol    BYTE PTR [edi],1
  40d002:	call   0x439bb6
  40d007:	jbe    0x40d078
  40d009:	push   ss
  40d00a:	je     0x40cfe0
  40d00c:	stc    
  40d00d:	and    ecx,DWORD PTR [ebx+0x75a2f835]
  40d013:	daa    
  40d014:	and    eax,0xbc2e8afa
  40d019:	stos   BYTE PTR es:[edi],al
  40d01a:	push   eax
  40d01b:	outs   dx,DWORD PTR ds:[esi]
  40d01c:	scas   eax,DWORD PTR es:[edi]
  40d01d:	add    al,BYTE PTR [ebx+esi*4+0xc833f93]
  40d024:	lods   al,BYTE PTR ds:[esi]
  40d025:	add    cl,BYTE PTR [ebx+0x45c9c01e]
  40d02b:	pop    ds
  40d02c:	stos   DWORD PTR es:[edi],eax
  40d02d:	add    al,BYTE PTR [eax]
  40d02f:	repz xor al,0xfe
  40d032:	mov    ch,BYTE PTR ds:0xc6edb8
  40d038:	add    BYTE PTR [eax],al
  40d03a:	pop    es
  40d03b:	xchg   esp,eax
  40d03c:	mov    eax,ds:0x50151375
  40d041:	or     al,0x6c
  40d043:	push   ecx
  40d044:	mov    edi,DWORD PTR ds:[edi+eax*2]
  40d048:	jmp    0x86f0c3d0
  40d04d:	mov    edi,0x2ddb06df
  40d052:	repz mov ebp,DWORD PTR [esi-0x186eb305]
  40d059:	add    eax,0x123183f3
  40d05e:	outs   dx,BYTE PTR ds:[esi]
  40d05f:	jmp    0x8d6e7269
  40d064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d065:	pop    ss
  40d066:	jo     0x40d006
  40d068:	out    0x21,eax
  40d06a:	jmp    0x9648c0f4
  40d06f:	add    esi,DWORD PTR [edx+0x47]
  40d072:	out    0xe7,eax
  40d074:	add    BYTE PTR [esp+eiz*2-0x7],bl
  40d078:	call   0x41818880
  40d07d:	(bad)  
  40d07e:	xor    al,0x98
  40d080:	test   al,0xad
  40d082:	not    ah
  40d084:	test   al,0xad
  40d086:	repnz push esi
  40d088:	out    0x40,eax
  40d08a:	cmp    eax,0xe4c60c3c
  40d08f:	push   es
  40d090:	fcmovb st,st(3)
  40d092:	or     al,0x8e
  40d094:	daa    
  40d095:	xor    BYTE PTR [eax+0x71936231],dh
  40d09b:	sbb    ebp,edi
  40d09d:	add    al,0x0
  40d09f:	add    BYTE PTR [eax],al
  40d0a1:	ds sti 
  40d0a3:	sbb    eax,0xfe89f12e
  40d0a8:	aas    
  40d0a9:	sbb    esi,ebx
  40d0ab:	sti    
  40d0ac:	inc    ebx
  40d0ad:	repz xchg edi,eax
  40d0af:	cmc    
  40d0b0:	pop    es
  40d0b1:	mov    edi,ebx
  40d0b3:	dec    esp
  40d0b4:	add    al,0xf3
  40d0b6:	aaa    
  40d0b7:	fs (bad) 
  40d0b9:	inc    DWORD PTR [edx]
  40d0bb:	sbb    eax,esp
  40d0bd:	push   ds
  40d0be:	(bad)
  40d0c2:	dec    ecx
  40d0c3:	fxch   st(0)
  40d0c5:	mov    dh,0x2a
  40d0c7:	in     eax,0x3
  40d0c9:	repz push es
  40d0cb:	add    BYTE PTR [ecx+0x74],al
  40d0ce:	pop    es
  40d0cf:	add    ch,cl
  40d0d1:	rol    BYTE PTR [esi],0x5e
  40d0d4:	sub    cl,BYTE PTR [ecx]
  40d0d6:	mov    eax,?
  40d0d8:	jb     0x40d093
  40d0da:	sub    cl,BYTE PTR [eax-0x42]
  40d0dd:	in     al,0xdf
  40d0df:	inc    edi
  40d0e0:	mov    eax,ds:0xeb69dbdd
  40d0e5:	jge    0x40d101
  40d0e7:	pop    esp
  40d0e8:	xchg   ecx,eax
  40d0e9:	sbb    al,0x13
  40d0eb:	inc    eax
  40d0ec:	jmp    0x144e244
  40d0f1:	xor    DWORD PTR [ebp+0x5875e8ff],esp
  40d0f7:	je     0x40d0de
  40d0f9:	push   ds
  40d0fa:	pop    eax
  40d0fb:	jmp    0xf0eb:0x6c422a13
  40d102:	push   es
  40d103:	add    dl,dl
  40d105:	add    BYTE PTR [eax],al
  40d107:	add    al,ch
  40d109:	mov    WORD PTR [ebx+0x5],es
  40d10c:	add    ebp,DWORD PTR ds:0xf7426401
  40d112:	mov    BYTE PTR [edi],ah
  40d114:	(bad)  
  40d115:	mov    edi,0x6f51545
  40d11a:	add    cl,ch
  40d11c:	cwde   
  40d11d:	iret   
  40d11e:	add    bl,ch
  40d120:	lock xchg edi,eax
  40d122:	jae    0x40d0e9
  40d124:	ror    BYTE PTR [edx+0x1352257d],0x24
  40d12b:	fst    DWORD PTR [ebx+0x10]
  40d12e:	add    al,0x81
  40d130:	push   ss
  40d131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d132:	(bad)  
  40d133:	call   0x295b80b3
  40d138:	imul   ebp,DWORD PTR [edi-0x5140a2],0xffffffff
  40d13f:	mov    esi,0xa78a966f
  40d144:	les    ecx,FWORD PTR [esi+0x48]
  40d147:	add    BYTE PTR [ebp+0x586a20f0],cl
  40d14d:	mov    BYTE PTR [esp+ebx*2+0x32],bh
  40d151:	fwait
  40d152:	jae    0x40d194
  40d154:	dec    edx
  40d155:	data16 jne 0x40d15c
  40d158:	loop   0x40d153
  40d15a:	loop   0x40d15c
  40d15c:	pop    edx
  40d15d:	cmp    BYTE PTR [esi-0x414eb18b],0xeb
  40d164:	sub    cl,dh
  40d166:	inc    esp
  40d167:	ins    BYTE PTR es:[edi],dx
  40d168:	sbb    DWORD PTR [ebx],eax
  40d16a:	add    BYTE PTR [eax],al
  40d16c:	add    BYTE PTR [eax],al
  40d16e:	add    BYTE PTR ds:0x971023f0,ah
  40d174:	in     eax,0x5b
  40d176:	call   FWORD PTR [esi-0x5200f161]
  40d17c:	push   cs
  40d17d:	call   0x430ada
  40d182:	test   DWORD PTR [edx-0x65],0xd742f7be
  40d189:	pop    ebp
  40d18a:	ret    0xae2
  40d18d:	push   ecx
  40d18e:	push   ebx
  40d18f:	std    
  40d190:	ja     0x40d20e
  40d192:	or     cl,bl
  40d194:	retf   0x6c5
  40d197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d198:	out    dx,eax
  40d199:	aas    
  40d19a:	add    BYTE PTR [edx+0x50],ah
  40d19d:	mov    DWORD PTR [ecx],eax
  40d19f:	fiadd  DWORD PTR [ecx-0x4641dbbe]
  40d1a5:	fld    st(7)
  40d1a7:	int3   
  40d1a8:	stos   BYTE PTR es:[edi],al
  40d1a9:	jae    0x40d1eb
  40d1ab:	call   0x4a:0x9f2405cd
  40d1b2:	mov    DWORD PTR [edi+ebx*8],eax
  40d1b5:	mov    BYTE PTR [esi-0xe],bl
  40d1b8:	sbb    DWORD PTR [esp+ebp*2-0x23],0x4c
  40d1bd:	jo     0x40d1bf
  40d1bf:	mov    cs,WORD PTR [edx]
  40d1c1:	add    BYTE PTR [edx-0xd],ch
  40d1c4:	mov    ds:0x581b458b,al
  40d1c9:	mov    eax,DWORD PTR [ebp-0x19]
  40d1cc:	push   ss
  40d1cd:	ds jl  0x40d24a
  40d1d0:	ss test bh,bh
  40d1d3:	add    BYTE PTR [eax],al
  40d1d5:	add    BYTE PTR [eax+eiz*4-0x75],bl
  40d1d9:	popf   
  40d1da:	outs   dx,DWORD PTR ds:[esi]
  40d1db:	mov    al,ds:0xcc0a0002
  40d1e0:	out    0xf,al
  40d1e2:	mov    edi,0xc7ff3406
  40d1e7:	ret    
  40d1e8:	test   BYTE PTR [esp+ebp*4-0x4b72cd51],0xaf
  40d1f0:	stos   BYTE PTR es:[edi],al
  40d1f1:	not    BYTE PTR [edi]
  40d1f3:	lahf   
  40d1f4:	add    al,BYTE PTR [ebx+0x316a31b]
  40d1fa:	push   0xffffff86
  40d1fc:	push   ss
  40d1fd:	pop    edi
  40d1fe:	js     0x40d266
  40d200:	cmp    DWORD PTR [ecx+0x31],ebx
  40d203:	cwde   
  40d204:	add    dl,BYTE PTR [esi+0x68]
  40d207:	scas   eax,DWORD PTR es:[edi]
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	adc    dh,bl
  40d20b:	lahf   
  40d20c:	add    dh,dh
  40d20e:	aaa    
  40d20f:	add    al,0xc
  40d211:	add    DWORD PTR [edi-0x52],ebx
  40d214:	xor    al,0xe8
  40d216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d217:	ret    
  40d218:	popf   
  40d219:	(bad)  
  40d21a:	push   0xf7c23c6d
  40d21f:	lahf   
  40d220:	popf   
  40d221:	mov    ch,0x73
  40d223:	lahf   
  40d224:	add    al,BYTE PTR [eax]
  40d226:	mov    ah,0xa5
  40d228:	loop   0x40d29e
  40d22a:	xor    esp,DWORD PTR [eax-0x3c04ba3b]
  40d230:	pop    ss
  40d231:	inc    eax
  40d232:	repz ja 0x40d2b0
  40d235:	jecxz  0x40d1d3
  40d237:	sbb    al,0x9e
  40d239:	jne    0x40d23b
  40d23b:	add    BYTE PTR [eax],al
  40d23d:	js     0x6cdb5b6
  40d243:	data16 (bad) 
  40d245:	cs (bad) 
  40d247:	fmul   QWORD PTR [edx+0x382a06bc]
  40d24d:	push   0x7834b7a2
  40d252:	inc    ebx
  40d253:	cmc    
  40d254:	xor    bh,BYTE PTR [ebp-0x653aec3]
  40d25a:	push   es
  40d25b:	jmp    0x623779ea
  40d260:	xchg   ebx,eax
  40d261:	jnp    0x40d27e
  40d263:	and    eax,0xe8f128ab
  40d268:	add    ebp,DWORD PTR [eax+0x13]
  40d26b:	loope  0x40d1f9
  40d26d:	scas   eax,DWORD PTR es:[edi]
  40d26e:	mov    fs,WORD PTR [ebx-0x6b]
  40d271:	mov    al,ds:0xe3477431
  40d276:	or     ebp,DWORD PTR [esi+edi*2-0x64]
  40d27a:	push   es
  40d27b:	jmp    0xf9c29583
  40d280:	stos   BYTE PTR es:[edi],al
  40d281:	and    DWORD PTR [ecx-0x398f621b],ebp
  40d287:	push   esp
  40d288:	inc    edi
  40d289:	cld    
  40d28a:	sbb    dl,ch
  40d28c:	mov    DWORD PTR [ecx+0x78105395],edi
  40d292:	(bad)  
  40d294:	cmc    
  40d295:	and    al,0x7
  40d297:	push   ss
  40d298:	popf   
  40d299:	(bad)  
  40d29a:	or     BYTE PTR [eax+eiz*4],dh
  40d29d:	aad    0x1a
  40d29f:	mov    cl,0x26
  40d2a1:	add    BYTE PTR [eax],al
  40d2a3:	add    BYTE PTR [esp+ecx*1+0x1ac5e3e3],dh
  40d2aa:	stc    
  40d2ab:	xor    BYTE PTR [ebp-0x6162c1f7],0x8
  40d2b2:	or     al,0x9c
  40d2b4:	jns    0x40d300
  40d2b6:	icebp  
  40d2b7:	and    eax,0x9ec0cac
  40d2bc:	jo     0x40d289
  40d2be:	call   eax
  40d2c0:	jae    0x40d28f
  40d2c2:	add    DWORD PTR [edi+0x222b06f6],esp
  40d2c8:	js     0x40d326
  40d2ca:	sub    ecx,0xfffffff0
  40d2cd:	push   es
  40d2ce:	mov    al,0xe8
  40d2d0:	dec    ebx
  40d2d1:	out    0xfe,eax
  40d2d3:	xchg   esi,eax
  40d2d4:	ja     0x40d26a
  40d2d6:	(bad)  
  40d2d7:	jmp    0x3f236374
  40d2dc:	jle    0x40d2b7
  40d2de:	mov    edi,0x44cf29fa
  40d2e3:	sub    eax,0xe97f8d78
  40d2e8:	lock push es
  40d2ea:	mov    DWORD PTR [esi+0x6b],esp
  40d2ed:	xchg   esp,eax
  40d2ee:	(bad)  
  40d2ef:	jmp    0xaf004ddb
  40d2f4:	out    dx,al
  40d2f5:	das    
  40d2f6:	leave  
  40d2f7:	sub    eax,DWORD PTR [ebx]
  40d2f9:	pop    es
  40d2fa:	adc    DWORD PTR [eax],0xffffffef
  40d2fd:	popf   
  40d2fe:	or     dh,dh
  40d300:	ja     0x40d297
  40d302:	push   esp
  40d303:	bound  eax,QWORD PTR [ebx-0x77]
  40d306:	jmp    0x40d301
  40d308:	add    BYTE PTR [eax],al
  40d30a:	add    BYTE PTR [ebp+0x4b],dh
  40d30d:	lock cmp DWORD PTR [esi-0x5],ebx
  40d311:	cmp    ebx,0xffffffb0
  40d314:	push   es
  40d315:	lea    esp,[edi+eax*4]
  40d318:	inc    ebx
  40d319:	call   0x47c409
  40d31e:	mov    al,0xb3
  40d320:	cmp    cl,BYTE PTR [ebx-0x72c9de3b]
  40d326:	and    al,0x6f
  40d328:	inc    ebx
  40d329:	call   FWORD PTR [edi+esi*8]
  40d32c:	xchg   ebx,eax
  40d32d:	adc    al,0x6d
  40d32f:	ret    0xffd3
  40d332:	popa   
  40d333:	sub    eax,0x531c8a8f
  40d338:	sbb    eax,0x7970000
  40d33d:	add    cl,0xc0
  40d340:	fistp  QWORD PTR [edi-0x6a]
  40d343:	inc    edx
  40d344:	or     BYTE PTR [ecx+0x6241bbd1],al
  40d34a:	dec    BYTE PTR [ebx-0x29]
  40d34d:	out    0x91,eax
  40d34f:	stc    
  40d350:	add    eax,0xbc8c900
  40d355:	add    BYTE PTR [ebx],dh
  40d357:	adc    ebx,esi
  40d359:	pop    es
  40d35a:	mov    ebx,DWORD PTR [ebx]
  40d35c:	into   
  40d35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d35e:	add    DWORD PTR [esi+0x57e8d100],esp
  40d364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d365:	cmp    DWORD PTR [eax-0x2effa0f1],0xee753de2
  40d36f:	add    BYTE PTR [eax],al
  40d371:	add    bl,al
  40d373:	or     ecx,DWORD PTR [ebp+0x469908]
  40d379:	inc    ecx
  40d37a:	fwait
  40d37b:	jo     0x40d37b
  40d37d:	add    BYTE PTR [edx],bl
  40d37f:	pop    es
  40d380:	jb     0x40d35b
  40d382:	fimul  DWORD PTR [eax]
  40d384:	ret    
  40d385:	sbb    DWORD PTR [edi+eax*1+0x75],0x1b
  40d38a:	jb     0x40d3d3
  40d38c:	add    BYTE PTR [eax],al
  40d38e:	sub    ah,ah
  40d390:	add    BYTE PTR [edx+0xa],ch
  40d393:	loope  0x40d394
  40d395:	push   ebp
  40d396:	sbb    eax,0x1a100a95
  40d39b:	or     eax,DWORD PTR [ebp+0x210827c0]
  40d3a1:	push   es
  40d3a2:	fadd   st,st(6)
  40d3a4:	shl    DWORD PTR [eax+0x4687c9cb],0xd2
  40d3ab:	ds dec eax
  40d3ad:	je     0x40d372
  40d3af:	mov    DWORD PTR [eax+eax*1],esp
  40d3b2:	dec    ecx
  40d3b3:	in     eax,0x3
  40d3b5:	add    bl,dh
  40d3b7:	test   BYTE PTR [ebx+eax*4-0x3],al
  40d3bb:	add    BYTE PTR [ebx+0x46637b3c],0x0
  40d3c2:	repz call 0x42c0:0x785456cf
  40d3ca:	repz clc 
  40d3cc:	call   0x7300:0x428e9714
  40d3d3:	repz mov eax,esp
  40d3d6:	add    BYTE PTR [eax],al
  40d3d8:	add    BYTE PTR [eax],dh
  40d3da:	mov    al,ds:0x48047502
  40d3df:	push   ds
  40d3e0:	jmp    DWORD PTR [ecx+ecx*2-0x80]
  40d3e4:	mov    edi,0x2485a1e7
  40d3e9:	jcxz   0x40d432
  40d3ec:	add    bl,dh
  40d3ee:	jmp    0x5d6f5bf3
  40d3f3:	add    al,BYTE PTR [ecx]
  40d3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f6:	lock lock out dx,eax
  40d3f9:	loope  0x40d45a
  40d3fb:	add    bl,BYTE PTR [edi+0x78]
  40d3fe:	jmp    0x458d:0x907855c6
  40d405:	jmp    0x40d45e
  40d407:	dec    edx
  40d408:	je     0x40d400
  40d40a:	and    al,0x42
  40d40c:	add    al,0x76
  40d40e:	loopne 0x40d41f
  40d410:	pop    es
  40d411:	mov    ds:0xe317efa8,eax
  40d416:	fild   WORD PTR [ebx]
  40d418:	mov    edi,DWORD PTR [ebp-0x58c6ede]
  40d41e:	inc    ebp
  40d41f:	add    al,0x56
  40d421:	in     al,0xb2
  40d423:	repnz rdpmc 
  40d426:	mov    al,ds:0x253ec338
  40d42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d42c:	push   eax
  40d42d:	and    dl,bh
  40d42f:	mov    gs,edi
  40d431:	js     0x40d439
  40d433:	das    
  40d434:	or     al,0x2b
  40d436:	aas    
  40d437:	adc    BYTE PTR ss:[esi],dl
  40d43a:	lahf   
  40d43b:	and    DWORD PTR [ebx-0x53000000],ebx
  40d441:	xchg   ecx,eax
  40d442:	fs ret 
  40d444:	pop    ds
  40d445:	or     edi,DWORD PTR [ebx+0x6c1089c3]
  40d44b:	sbb    edi,ebp
  40d44d:	aad    0x91
  40d44f:	fsub   st(5),st
  40d451:	sbb    edi,DWORD PTR [ecx+0x11ff2e8e]
  40d457:	mov    DWORD PTR [eax],0xe310b103
  40d45d:	leave  
  40d45e:	stos   DWORD PTR es:[edi],eax
  40d45f:	xchg   edi,eax
  40d460:	lock xchg al,ch
  40d463:	add    ebx,DWORD PTR [eax+0x9]
  40d466:	cs inc eax
  40d468:	pop    edi
  40d469:	add    eax,0x39f30369
  40d46e:	call   0xfe9a:0x2d1b4c36
  40d475:	xchg   ecx,eax
  40d476:	sti    
  40d477:	out    dx,eax
  40d478:	in     al,dx
  40d479:	inc    esi
  40d47a:	jmp    0xed5c48ff
  40d47f:	mov    WORD PTR ds:0x2436299e,cs
  40d485:	sbb    esi,ebp
  40d487:	call   0xfb15:0xd1fdfea7
  40d48e:	aam    0xf3
  40d490:	int3   
  40d491:	push   es
  40d492:	mov    eax,ds:0xa8ed1c92
  40d497:	inc    esp
  40d498:	or     al,ah
  40d49a:	jno    0x40d49e
  40d49c:	shr    BYTE PTR [ebp+0x322bcb19],0xdd
  40d4a3:	adc    DWORD PTR [eax],eax
  40d4a5:	add    BYTE PTR [eax],al
  40d4a7:	add    al,0x7c
  40d4a9:	sbb    ecx,DWORD PTR [esp+ebp*8]
  40d4ac:	pop    eax
  40d4ad:	aam    0xf2
  40d4af:	and    DWORD PTR [edi-0x6e6a9801],esi
  40d4b5:	(bad)  
  40d4b6:	call   0xf2289aab
  40d4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4bc:	add    al,0x95
  40d4be:	icebp  
  40d4bf:	pop    ds
  40d4c0:	inc    ebp
  40d4c1:	add    BYTE PTR [eax],ch
  40d4c3:	into   
  40d4c4:	inc    ebx
  40d4c5:	or     al,0x1b
  40d4c7:	push   eax
  40d4c8:	jg     0x40d4cf
  40d4ca:	cmp    eax,esi
  40d4cc:	das    
  40d4cd:	pop    esi
  40d4ce:	and    ch,BYTE PTR [eax-0x2216f83a]
  40d4d4:	jnp    0x40d4c1
  40d4d6:	sbb    BYTE PTR [esi+0x40],dh
  40d4d9:	or     BYTE PTR [ebp+ebp*1-0x70],dh
  40d4dd:	dec    eax
  40d4de:	mov    bh,0xe4
  40d4e0:	dec    edx
  40d4e1:	add    DWORD PTR [ebx-0x9],0x1a
  40d4e5:	or     al,0xa3
  40d4e7:	cmc    
  40d4e8:	test   dh,0xac
  40d4eb:	test   ah,dh
  40d4ed:	(bad)  
  40d4ee:	call   0x2e4770e3
  40d4f3:	or     al,0x93
  40d4f5:	psubsw mm6,mm0
  40d4f8:	push   es
  40d4f9:	mov    ebp,DWORD PTR [ecx+0x1d747d3c]
  40d4ff:	mov    ah,0x4f
  40d501:	jae    0x40d4fa
  40d503:	fiadd  WORD PTR [esi]
  40d505:	lea    ebx,[esp+edi*2+0x935737]
  40d50c:	add    BYTE PTR [eax],al
  40d50e:	div    BYTE PTR [esi]
  40d510:	call   esp
  40d512:	call   0x782a150d
  40d517:	cwde   
  40d518:	add    BYTE PTR [ebp+eax*1-0x31],dh
  40d51c:	je     0x40d503
  40d51e:	in     al,dx
  40d51f:	div    BYTE PTR [edx]
  40d521:	test   eax,0xa931fc47
  40d526:	lahf   
  40d527:	pop    es
  40d528:	mov    ebp,ecx
  40d52a:	cmp    DWORD PTR [edi+0x33cd0088],0x0
  40d531:	pop    esi
  40d532:	mov    ds:0xb68b53ca,eax
  40d537:	mov    ch,dl
  40d539:	or     al,0xe9
  40d53b:	aam    0x8c
  40d53d:	jne    0x40d59d
  40d53f:	pop    ebx
  40d540:	jb     0x40d540
  40d542:	push   ebp
  40d543:	outs   dx,BYTE PTR ds:[esi]
  40d544:	std    
  40d545:	jne    0x40d4dd
  40d547:	add    ah,0xff
  40d54a:	inc    DWORD PTR [edx]
  40d54c:	call   0xfdaf4a35
  40d551:	test   BYTE PTR [edx-0x1],cl
  40d554:	push   cs
  40d555:	mov    ebx,DWORD PTR [ebx+ebx*2+0x79]
  40d559:	call   DWORD PTR ds:0x9ec0826f
  40d55f:	(bad)  
  40d560:	mov    cl,0x1
  40d562:	and    DWORD PTR [edx],ecx
  40d564:	xor    bl,bl
  40d566:	xlat   BYTE PTR ds:[ebx]
  40d567:	shl    bl,1
  40d569:	call   0x3e4342
  40d56e:	xchg   esp,eax
  40d56f:	add    ecx,0x5b
  40d575:	and    ecx,edx
  40d577:	push   es
  40d578:	add    BYTE PTR [ebx+0x5b],ch
  40d57b:	push   edx
  40d57c:	loope  0x40d593
  40d57e:	outs   dx,DWORD PTR ds:[esi]
  40d57f:	rcl    DWORD PTR [ecx-0x1e],0xe8
  40d583:	loopne 0x40d584
  40d585:	aad    0xca
  40d587:	push   ebx
  40d588:	mov    esi,esi
  40d58a:	aam    0x52
  40d58c:	push   esi
  40d58d:	(bad)  
  40d58e:	outs   dx,BYTE PTR ds:[esi]
  40d58f:	jae    0x40d5b3
  40d591:	pop    ecx
  40d592:	push   edx
  40d593:	xor    esi,esi
  40d595:	mov    eax,ds:0x695607d0
  40d59a:	outs   dx,BYTE PTR ds:[esi]
  40d59b:	jae    0x40d5ad
  40d59d:	adc    eax,0xa5e80c01
  40d5a2:	(bad)  
  40d5a3:	(bad)  
  40d5a4:	inc    DWORD PTR [ecx-0xc097c86]
  40d5aa:	ss iret 
  40d5ac:	push   edx
  40d5ad:	fnclex 
  40d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b0:	(bad)  
  40d5b1:	fdivr  QWORD PTR [ecx-0x67d17530]
  40d5b7:	sub    BYTE PTR [edx],al
  40d5b9:	jle    0x40d586
  40d5bb:	xchg   edi,eax
  40d5bc:	pop    edx
  40d5bd:	fistp  DWORD PTR [edx+edx*8+0x1]
  40d5c1:	repz sbb al,ah
  40d5c4:	je     0x40d5d4
  40d5c6:	sbb    DWORD PTR [ecx],edx
  40d5c8:	cld    
  40d5c9:	xor    eax,0x78028e09
  40d5ce:	data16 (bad) 
  40d5d0:	fcomip st,st(1)
  40d5d2:	out    dx,eax
  40d5d3:	stos   DWORD PTR es:[edi],eax
  40d5d4:	sti    
  40d5d5:	xchg   ebx,eax
  40d5d6:	or     eax,0x8a97
  40d5db:	add    BYTE PTR [ebx+0x4b74bb1b],ch
  40d5e1:	or     bl,BYTE PTR [edx+0x7f988857]
  40d5e7:	(bad)  
  40d5e8:	jmp    DWORD PTR [ecx-0x2187e175]
  40d5ee:	xor    eax,0x7e23a5b
  40d5f3:	add    dh,al
  40d5f5:	sbb    BYTE PTR [eax+0x3784780],ch
  40d5fb:	add    bl,dh
  40d5fd:	and    BYTE PTR [ecx],bl
  40d5ff:	or     al,0x44
  40d601:	lods   eax,DWORD PTR ds:[esi]
  40d602:	jle    0x40d5a0
  40d604:	repz lahf 
  40d606:	add    dh,dh
  40d608:	scas   al,BYTE PTR es:[edi]
  40d609:	xchg   ebx,eax
  40d60a:	add    BYTE PTR [ebp-0x72cc0c4a],cl
  40d610:	outs   dx,BYTE PTR ds:[esi]
  40d611:	pop    eax
  40d612:	xchg   ebp,eax
  40d613:	(bad)  
  40d614:	sbb    al,0x70
  40d616:	xchg   ebp,eax
  40d617:	je     0x40d600
  40d619:	in     al,0x40
  40d61b:	cld    
  40d61c:	jae    0x40d5be
  40d61e:	add    al,BYTE PTR [eax]
  40d620:	jg     0x40d5d3
  40d622:	xchg   ebp,eax
  40d623:	adc    al,0x3f
  40d625:	pop    es
  40d626:	cld    
  40d627:	inc    ebx
  40d628:	repz sub DWORD PTR [eax-0x5f75fcf1],0xffffff96
  40d630:	fstp   TBYTE PTR [eax-0x720cfc18]
  40d636:	fild   DWORD PTR [ebx]
  40d638:	std    
  40d639:	inc    esi
  40d63a:	jmp    0x6a65aee9
  40d63f:	pop    eax
  40d640:	add    BYTE PTR [eax],al
  40d642:	add    BYTE PTR [esi+ecx*4],bl
  40d645:	lods   eax,DWORD PTR ds:[esi]
  40d646:	xchg   esi,eax
  40d647:	repnz adc edx,ebx
  40d64a:	sub    edi,ebp
  40d64c:	jnp    0x40d6b1
  40d64e:	aaa    
  40d64f:	lods   al,BYTE PTR ds:[esi]
  40d650:	lea    edx,[ebp-0x76bc89cd]
  40d656:	xor    esi,DWORD PTR [ebp-0x74fb09bd]
  40d65c:	mov    ch,0x88
  40d65e:	xchg   esi,eax
  40d65f:	lea    esp,[eax]
  40d661:	jmp    0x40d5eb
  40d663:	outs   dx,DWORD PTR ds:[esi]
  40d664:	xor    BYTE PTR [esi-0x6a],ch
  40d667:	jge    0x40d69f
  40d669:	je     0x40d6ab
  40d66b:	(bad)  
  40d66c:	ss push ecx
  40d66e:	ror    BYTE PTR [ebp+ecx*4+0x55],0xaa
  40d673:	mov    esi,0xc4586a24
  40d678:	lea    eax,[ebp-0x6a]
  40d67b:	std    
  40d67c:	adc    edi,DWORD PTR [ebx+0x29]
  40d67f:	jecxz  0x40d6fc
  40d681:	imul   esp,DWORD PTR [ebx],0x44
  40d684:	lea    ebp,ds:0x9436e33
  40d68a:	xor    ebp,DWORD PTR ds:0x14ffee43
  40d690:	imul   ecx,DWORD PTR [eax],0xeb202596
  40d696:	mov    BYTE PTR [edi+0x30],dh
  40d699:	push   es
  40d69a:	xchg   esi,eax
  40d69b:	adc    eax,0x3406c36
  40d6a0:	add    BYTE PTR ss:[ecx],al
  40d6a3:	jg     0x40d652
  40d6a5:	(bad)  
  40d6a6:	out    dx,al
  40d6a7:	add    BYTE PTR [eax],al
  40d6a9:	add    BYTE PTR [edx-0xe],cl
  40d6ac:	imul   eax,DWORD PTR ds:0x39e0426c,0xd6e0cb9f
  40d6b6:	jle    0x40d64a
  40d6b8:	inc    esp
  40d6b9:	cmc    
  40d6ba:	icebp  
  40d6bb:	adc    cl,BYTE PTR ds:0x3fc14af
  40d6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c2:	or     al,0x8b
  40d6c4:	adc    ecx,ebp
  40d6c6:	lock push es
  40d6c8:	jmp    0x40d6ac
  40d6ca:	jle    0x40d70f
  40d6cc:	psubsb mm6,QWORD PTR [edi+0x43]
  40d6d0:	cld    
  40d6d1:	out    0xf0,eax
  40d6d3:	push   es
  40d6d4:	add    BYTE PTR [ebx-0x1c],ah
  40d6d7:	test   BYTE PTR [edi+0x420f424],0x74
  40d6de:	aam    0xfa
  40d6e0:	dec    edi
  40d6e1:	ins    BYTE PTR es:[edi],dx
  40d6e2:	int3   
  40d6e3:	stos   BYTE PTR es:[edi],al
  40d6e4:	dec    edi
  40d6e5:	scas   eax,DWORD PTR es:[edi]
  40d6e6:	(bad)  
  40d6e7:	cli    
  40d6e8:	add    al,0xa7
  40d6ea:	mov    esp,0x2850fffc
  40d6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f0:	(bad)  
  40d6f1:	pop    esi
  40d6f2:	jp     0x40d737
  40d6f4:	cld    
  40d6f5:	push   0x2f
  40d6f7:	or     BYTE PTR [eax+0x5c],dl
  40d6fa:	sbb    al,0xab
  40d6fc:	dec    edi
  40d6fd:	inc    esi
  40d6fe:	in     al,0xfe
  40d700:	out    0xce,eax
  40d702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d703:	push   es
  40d704:	add    dl,bh
  40d706:	cmp    DWORD PTR [eax-0x39322141],ecx
  40d70c:	mov    ch,BYTE PTR [eax]
  40d70e:	add    BYTE PTR [eax],al
  40d710:	add    BYTE PTR [eax],ch
  40d712:	(bad)  
  40d713:	psubsw mm3,mm5
  40d716:	jg     0x40d703
  40d718:	push   0xe9039c5b
  40d71d:	lock aaa 
  40d71f:	push   esi
  40d720:	add    BYTE PTR [ecx+0x645707fb],ah
  40d726:	pusha  
  40d727:	and    al,0x79
  40d729:	sbb    cl,BYTE PTR [eax]
  40d72b:	xor    ecx,ecx
  40d72d:	dec    esi
  40d72e:	push   es
  40d72f:	sete   BYTE PTR [ebx-0x49]
  40d733:	fst    DWORD PTR [ebx+0x40]
  40d736:	or     BYTE PTR [ebp-0x75283ebb],cl
  40d73c:	(bad)  
  40d73d:	push   ebx
  40d73e:	inc    ebp
  40d73f:	loopne 0x40d729
  40d741:	pop    ss
  40d742:	xor    al,0x0
  40d744:	add    BYTE PTR [esi-0x38],dl
  40d747:	or     eax,0x91884
  40d74c:	add    dl,al
  40d74e:	aam    0xfa
  40d750:	cmovbe esi,DWORD PTR [ecx+0x29a0000]
  40d757:	mov    dh,0x45
  40d759:	adc    esi,0x1c178d4f
  40d75f:	sti    
  40d760:	jmp    FWORD PTR [ebp-0x29]
  40d763:	out    0x52,eax
  40d765:	iret   
  40d766:	or     BYTE PTR [eax],al
  40d768:	test   BYTE PTR [edx+0x2],bl
  40d76b:	test   BYTE PTR [edi],bl
  40d76d:	mov    BYTE PTR [edi],al
  40d76f:	add    BYTE PTR [edi],cl
  40d771:	push   esp
  40d772:	int3   
  40d773:	cli    
  40d774:	jmp    0x40d776
  40d776:	add    BYTE PTR [eax],al
  40d778:	pusha  
  40d779:	aas    
  40d77a:	cmp    BYTE PTR [edi+edx*2-0x520004e5],bl
  40d781:	sti    
  40d782:	cmp    al,0x3b
  40d784:	or     ebp,edi
  40d786:	icebp  
  40d787:	xor    ebx,DWORD PTR [edx]
  40d789:	jnp    0x40d761
  40d78b:	sbb    ebx,DWORD PTR [edx]
  40d78d:	lods   eax,DWORD PTR ds:[esi]
  40d78e:	inc    BYTE PTR [eax]
  40d790:	or     eax,0xd05bd73
  40d795:	or     BYTE PTR [eax],al
  40d797:	add    edx,ebp
  40d799:	add    dh,BYTE PTR [edi+0x3e26f3c0]
  40d79f:	in     al,0x89
  40d7a1:	lahf   
  40d7a2:	test   DWORD PTR [edi+ecx*1+0x6d],eax
  40d7a6:	sub    al,0xe8
  40d7a8:	and    ecx,edx
  40d7aa:	add    DWORD PTR [eax],eax
  40d7ac:	outs   dx,DWORD PTR ds:[esi]
  40d7ad:	fld    QWORD PTR [ebx]
  40d7af:	test   BYTE PTR [esi+ebx*4],bl
  40d7b2:	add    al,BYTE PTR [eax]
  40d7b4:	(bad)  
  40d7b5:	out    0x10,al
  40d7b7:	in     al,0x66
  40d7b9:	nop
  40d7ba:	push   edx
  40d7bb:	add    dl,bl
  40d7bd:	dec    esp
  40d7be:	add    al,0x0
  40d7c0:	repz sub cl,BYTE PTR [eax-0x6d3b80fc]
  40d7c7:	(bad)  
  40d7c8:	fsub   DWORD PTR [eax+0x36]
  40d7cb:	push   0xffffffef
  40d7cd:	and    cl,BYTE PTR [ecx-0x3c]
  40d7d0:	and    esp,DWORD PTR ds:0x69168792
  40d7d6:	fwait
  40d7d7:	loop   0x40d848
  40d7d9:	lahf   
  40d7da:	add    al,BYTE PTR [eax+eax*1-0x5e4d0000]
  40d7e1:	xchg   BYTE PTR [edi-0x7ffd600e],ch
  40d7e7:	push   ss
  40d7e8:	pop    esp
  40d7e9:	or     BYTE PTR [edi],cl
  40d7eb:	jbe    0x40d82f
  40d7ed:	add    eax,0x4909f300
  40d7f2:	loopne 0x40d7e6
  40d7f4:	xchg   ebx,eax
  40d7f5:	repnz (bad) 
  40d7f7:	cs push 0xa06cfffa
  40d7fd:	leave  
  40d7fe:	inc    esp
  40d7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d800:	sahf   
  40d801:	add    al,BYTE PTR [eax]
  40d803:	repz inc esp
  40d805:	add    al,bh
  40d807:	scas   al,BYTE PTR es:[edi]
  40d808:	xchg   DWORD PTR ds:0xc99ff300,eax
  40d80e:	inc    esp
  40d80f:	xchg   DWORD PTR [ecx-0x570cfffe],ebp
  40d815:	pop    eax
  40d816:	inc    esp
  40d817:	sub    al,0x7
  40d819:	mov    cl,0x7e
  40d81b:	out    0x2,eax
  40d81d:	cli    
  40d81e:	inc    ebx
  40d81f:	repz jg 0x40d7d5
  40d822:	stos   DWORD PTR es:[edi],eax
  40d823:	in     eax,dx
  40d824:	cmp    dl,0x4
  40d827:	repz push es
  40d829:	mov    cl,0x3b
  40d82b:	xchg   DWORD PTR [eax],edi
  40d82d:	mov    cl,0x2
  40d82f:	outs   dx,BYTE PTR ds:[esi]
  40d830:	es call 0x6bbecb39
  40d836:	sti    
  40d837:	mov    eax,ds:0x7780f91c
  40d83c:	jmp    0xfc1:0x36e592dd
  40d843:	add    BYTE PTR [eax],al
  40d845:	add    BYTE PTR [edi-0x6b7816f9],bl
  40d84b:	stc    
  40d84c:	ins    BYTE PTR es:[edi],dx
  40d84d:	cmp    al,0xf2
  40d84f:	push   es
  40d850:	jmp    0xe15deb72
  40d855:	xchg   edx,eax
  40d856:	pop    es
  40d857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d858:	add    DWORD PTR [esi-0xd],0x377cbe89
  40d85f:	scas   eax,DWORD PTR es:[edi]
  40d860:	loope  0x40d828
  40d862:	cmc    
  40d863:	adc    BYTE PTR [ebx+eax*1-0x4fcf90d],0x3b
  40d86b:	and    DWORD PTR [eax-0x5],esi
  40d86e:	sbb    dh,bh
  40d870:	imul   eax,DWORD PTR [eax-0x6d8a7618],0x71
  40d877:	(bad)  
  40d878:	loopne 0x40d816
  40d87a:	jp     0x40d882
  40d87c:	jmp    0xf14c5084
  40d881:	fld    DWORD PTR ss:[edi]
  40d884:	fs dec eax
  40d886:	gs ss inc ecx
  40d889:	retf   
  40d88a:	cwde   
  40d88b:	pop    es
  40d88c:	jmp    0x653a6518
  40d891:	or     dl,dh
  40d893:	push   es
  40d894:	add    cl,ch
  40d896:	sub    BYTE PTR [edx],ch
  40d898:	neg    dh
  40d89a:	ins    BYTE PTR es:[edi],dx
  40d89b:	(bad)  
  40d89c:	(bad)  
  40d89d:	call   0xa4f6d292
  40d8a2:	mov    dh,BYTE PTR [eax+edx*2]
  40d8a5:	fs imul esi,ebp,0xfffffffa
  40d8a9:	push   cs
  40d8aa:	add    BYTE PTR [eax],al
  40d8ac:	add    BYTE PTR [ecx-0x432317c7],al
  40d8b2:	push   es
  40d8b3:	add    BYTE PTR [ebp+0x30],ah
  40d8b6:	clc    
  40d8b7:	or     DWORD PTR [ebx],0xfffffff0
  40d8ba:	push   es
  40d8bb:	add    dh,bl
  40d8bd:	call   0x1403:0x6371f642
  40d8c4:	loop   0x40d848
  40d8c6:	mov    DWORD PTR [esp+ebp*1+0x3a53389f],ecx
  40d8cd:	push   esp
  40d8ce:	adc    DWORD PTR [ebx],0xffffffc2
  40d8d1:	bound  ecx,QWORD PTR [ecx-0x40eb8fb1]
  40d8d7:	(bad)  
  40d8d8:	fsub   QWORD PTR [ebx+esi*8]
  40d8db:	aas    
  40d8dc:	jmp    0xf0b4214e
  40d8e1:	mov    edx,0x89e5f743
  40d8e6:	outs   dx,DWORD PTR ds:[esi]
  40d8e7:	(bad)  
  40d8e8:	call   0x6312addd
  40d8ed:	sub    al,0xbf
  40d8ef:	cmp    ch,BYTE PTR [edx+0x370ef3eb]
  40d8f5:	inc    ebp
  40d8f6:	jge    0x40d943
  40d8f8:	fs das 
  40d8fa:	iret   
  40d8fb:	inc    edi
  40d8fc:	in     eax,0xdc
  40d8fe:	jmp    0xcd9d828d
  40d903:	ret    0x7cd4
  40d906:	mov    al,cl
  40d908:	imul   ebp,DWORD PTR [ebp+0x6],0x43292e72
  40d90f:	test   DWORD PTR [eax],0x5e000000
  40d915:	ja     0x40d98a
  40d917:	enter  0x9005,0x6
  40d91b:	push   ss
  40d91c:	mov    al,BYTE PTR [ebx+ebp*8]
  40d91f:	addr16 add eax,0x8aff0ff3
  40d925:	pushf  
  40d926:	out    0x59,al
  40d928:	in     al,0x75
  40d92a:	std    
  40d92b:	mov    DWORD PTR [edi+0x5c],ecx
  40d92e:	cmp    ebx,eax
  40d930:	jg     0x40d930
  40d932:	lds    eax,FWORD PTR [ebp+0xd]
  40d935:	add    eax,0x836cddeb
  40d93a:	ss pop ss
  40d93c:	jg     0x40d98c
  40d93e:	xchg   DWORD PTR [eax+0x22],ebx
  40d941:	or     eax,0xc6c10457
  40d946:	mov    DWORD PTR [ebp-0x1e],edi
  40d949:	shr    BYTE PTR [ecx+0x4],cl
  40d94c:	push   edi
  40d94d:	inc    ecx
  40d94e:	mov    ah,0x50
  40d950:	mov    dl,0xfb
  40d952:	mov    edx,0xbe7fda01
  40d957:	je     0x40d95c
  40d959:	jmp    0x77134371
  40d95e:	xor    esp,eax
  40d960:	jno    0x40d9a4
  40d962:	add    bh,bh
  40d964:	ins    BYTE PTR es:[edi],dx
  40d965:	or     al,0x44
  40d967:	fcom   DWORD PTR [ecx+0x4c0673c2]
  40d96d:	inc    eax
  40d96e:	test   DWORD PTR [ecx],0x2689071
  40d974:	rcr    esp,cl
  40d976:	mov    BYTE PTR [eax],cl
  40d978:	add    BYTE PTR [eax],al
  40d97a:	add    al,ah
  40d97c:	dec    BYTE PTR [ebp+ecx*2+0x4be82be]
  40d983:	fcmovnbe st,st(2)
  40d985:	out    0xcb,eax
  40d987:	mov    bh,0x76
  40d989:	std    
  40d98a:	mov    eax,DWORD PTR [edi-0x75]
  40d98d:	push   ecx
  40d98e:	push   0xfffffff3
  40d990:	fwait
  40d991:	jge    0x40d9d7
  40d993:	xor    ecx,DWORD PTR [ebp-0x66]
  40d996:	mov    BYTE PTR ss:[esi+0x52338402],bl
  40d99d:	icebp  
  40d99e:	inc    dh
  40d9a0:	cmc    
  40d9a1:	call   0x3331:0x8fd81673
  40d9a8:	shl    BYTE PTR [eax],0x5b
  40d9ab:	cmp    bl,bl
  40d9ad:	push   es
  40d9ae:	add    BYTE PTR ds:0xdb008b5a,dh
  40d9b4:	pop    edx
  40d9b5:	xchg   edi,eax
  40d9b6:	push   cs
  40d9b7:	jbe    0x40d976
  40d9b9:	or     BYTE PTR [eax],al
  40d9bb:	repz jg 0x40da39
  40d9be:	inc    esp
  40d9bf:	xor    esp,DWORD PTR [esi+edx*1]
  40d9c2:	fmul   DWORD PTR [ebp-0x3fdb6da]
  40d9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c9:	dec    eax
  40d9ca:	lds    edi,FWORD PTR [ebx]
  40d9cc:	jne    0x40d954
  40d9ce:	mov    edi,0x48026ff6
  40d9d3:	in     al,0xeb
  40d9d5:	icebp  
  40d9d6:	add    al,0xf3
  40d9d8:	outs   dx,DWORD PTR ds:[esi]
  40d9d9:	cmp    dh,BYTE PTR [edx+edi*8-0x53]
  40d9dd:	dec    eax
  40d9de:	test   DWORD PTR [eax],0x46f40000
  40d9e4:	xchg   esi,eax
  40d9e5:	add    al,0xf3
  40d9e7:	outs   dx,DWORD PTR ds:[esi]
  40d9e8:	dec    edx
  40d9e9:	jg     0x40d9de
  40d9eb:	outs   dx,DWORD PTR ds:[esi]
  40d9ec:	add    cl,BYTE PTR [ecx+0x447ce02e]
  40d9f2:	dec    edi
  40d9f3:	jmp    0x40da3d
  40d9f5:	mov    al,0x43
  40d9f7:	jecxz  0x40d981
  40d9f9:	sub    ecx,DWORD PTR [ebp+ecx*4+0x51c4f8e]
  40da00:	stc    
  40da01:	jmp    esi
  40da03:	das    
  40da04:	add    al,0x85
  40da06:	mov    bl,0x65
  40da08:	xchg   edi,edx
  40da0a:	test   DWORD PTR [esi],0xcc7603e9
  40da10:	mov    WORD PTR [esi+ebp*2],?
  40da13:	mov    esp,?
  40da15:	(bad)  
  40da16:	push   ebp
  40da17:	xchg   BYTE PTR [eax-0x7ae3b3ca],bh
  40da1d:	stc    
  40da1e:	add    al,0x7
  40da20:	fs (bad) 
  40da22:	in     eax,dx
  40da23:	mov    esi,DWORD PTR [esi+0x8]
  40da26:	repz push es
  40da28:	mov    DWORD PTR [edx-0x70d9cc91],0x7c871e25
  40da32:	ja     0x40da69
  40da34:	push   ss
  40da35:	(bad)  
  40da36:	adc    eax,0x6f7cdcfc
  40da3b:	retf   
  40da3c:	add    eax,0x5b90058f
  40da41:	aam    0xfd
  40da43:	test   ebp,esi
  40da45:	add    BYTE PTR [eax],0x0
  40da48:	add    BYTE PTR [edi],bh
  40da4a:	xor    ebp,esi
  40da4c:	mov    gs,ebp
  40da4e:	outs   dx,BYTE PTR ds:[esi]
  40da4f:	pop    edi
  40da50:	dec    esi
  40da51:	repz push es
  40da53:	jo     0x40da9d
  40da55:	retf   
  40da56:	mov    eax,edx
  40da58:	mov    fs,ebp
  40da5a:	mov    ah,BYTE PTR [edx+0x7]
  40da5d:	repz push es
  40da5f:	push   ecx
  40da60:	add    esi,ebx
  40da62:	pop    es
  40da63:	jmp    0xfbc6c581
  40da68:	mov    ds:0x8ee8c989,eax
  40da6d:	pop    es
  40da6e:	or     edi,edx
  40da70:	inc    ebx
  40da71:	repz xchg ecx,eax
  40da73:	mov    al,ds:0xdffb99ca
  40da78:	lds    ebp,FWORD PTR [edi]
  40da7a:	jle    0x40da63
  40da7c:	pushf  
  40da7d:	sub    al,0xb
  40da7f:	jmp    0x893c5e87
  40da84:	jp     0x40da8d
  40da86:	ltr    WORD PTR [edx]
  40da89:	fs cli 
  40da8b:	out    0x17,eax
  40da8d:	(bad)  
  40da8e:	xchg   edx,eax
  40da8f:	cli    
  40da90:	data16 jne 0x40da1b
  40da93:	imul   eax
  40da95:	pop    ebp
  40da96:	mov    dh,BYTE PTR [edx]
  40da98:	in     eax,dx
  40da99:	lock push es
  40da9b:	mov    esp,DWORD PTR [eax+ebp*2+0x75554c88]
  40daa2:	mov    BYTE PTR [ecx+ecx*1+0x36fe846d],cl
  40daa9:	mov    bh,0xe2
  40daab:	iret   
  40daac:	pusha  
  40daad:	add    BYTE PTR [eax],al
  40daaf:	add    bl,ah
  40dab1:	bound  ecx,QWORD PTR [eax-0x7bb3b33c]
  40dab7:	cmc    
  40dab8:	outs   dx,BYTE PTR ds:[esi]
  40dab9:	test   dh,bh
  40dabb:	jmp    0x40daad
  40dabd:	push   es
  40dabe:	add    BYTE PTR [eax-0x55],ah
  40dac1:	sbb    eax,0x8e7506fe
  40dac6:	test   ch,bl
  40dac8:	outs   dx,BYTE PTR ds:[esi]
  40dac9:	test   dh,bh
  40dacb:	add    BYTE PTR [esi+0x8],al
  40dace:	add    cl,ch
  40dad0:	jge    0x40dacd
  40dad2:	pop    es
  40dad3:	je     0x40db41
  40dad5:	sbb    dh,bh
  40dad7:	fisubr WORD PTR [esi+0x6c]
  40dada:	xlat   BYTE PTR ds:[ebx]
  40dadb:	nop
  40dadc:	lock push es
  40dade:	test   BYTE PTR [ecx+0x51531eeb],ch
  40dae4:	jbe    0x40da6b
  40dae6:	(bad)  
  40dae7:	call   0xe1b55ef3
  40daec:	sbb    ebx,DWORD PTR [bx+si]
  40daef:	xlat   BYTE PTR ds:[ebx]
  40daf0:	xor    BYTE PTR [edi],al
  40daf2:	test   DWORD PTR [ecx-0x15336d5a],ebp
  40daf8:	lock push es
  40dafa:	call   FWORD PTR [edi+esi*2]
  40dafd:	xchg   ebx,eax
  40dafe:	test   ch,dh
  40db00:	jle    0x40da87
  40db02:	inc    BYTE PTR [eax]
  40db04:	push   ebp
  40db05:	int3   
  40db06:	out    dx,eax
  40db07:	or     BYTE PTR [edx+0x25e80008],0xd0
  40db0e:	(bad)  
  40db0f:	call   esi
  40db11:	dec    edx
  40db12:	or     eax,0x84
  40db17:	jnp    0x40db22
  40db19:	add    BYTE PTR [eax],al
  40db1b:	iret   
  40db1c:	retf   
  40db1d:	out    dx,eax
  40db1e:	push   eax
  40db1f:	iret   
  40db20:	mov    ebp,DWORD PTR [edx]
  40db22:	(bad)  
  40db23:	mov    ebp,0x22534e91
  40db28:	xchg   ebx,eax
  40db29:	std    
  40db2a:	add    BYTE PTR [edx+0x3b],cl
  40db2d:	push   DWORD PTR [ebp-0x4e]
  40db30:	xchg   ecx,eax
  40db31:	adc    edi,DWORD PTR [eax-0x750037b9]
  40db37:	or     al,BYTE PTR [eax]
  40db39:	je     0x40db0f
  40db3b:	adc    DWORD PTR [edi+0x5928e0d],edx
  40db41:	add    BYTE PTR [eax],al
  40db43:	cdq    
  40db44:	xchg   esp,eax
  40db45:	add    al,0xf
  40db47:	cwde   
  40db48:	sbb    al,BYTE PTR [edx]
  40db4a:	add    BYTE PTR [edx],cl
  40db4c:	sub    cl,BYTE PTR [ebx-0x26cd17b]
  40db52:	push   DWORD PTR [eax+edx*2-0x7d]
  40db56:	adc    al,0xce
  40db58:	xchg   edx,eax
  40db59:	std    
  40db5a:	xorps  xmm6,XMMWORD PTR [edx+eax*1]
  40db5e:	add    dl,cl
  40db60:	sub    DWORD PTR [ebx+0xe1cd8f8],eax
  40db66:	mov    edx,DWORD PTR [edi+0x70]
  40db69:	cli    
  40db6a:	(bad)  
  40db6b:	jge    0x40dbbb
  40db6d:	xor    DWORD PTR [eax],0x7d
  40db70:	xchg   edx,eax
  40db71:	std    
  40db72:	jmp    0x40db35
  40db74:	sub    DWORD PTR [ebx+0x1b1ca5f8],eax
  40db7a:	push   0x0
  40db7c:	add    BYTE PTR [eax],al
  40db7e:	call   0x8b9c:0xf3348404
  40db85:	(bad)  
  40db86:	jle    0x40db6a
  40db88:	out    dx,al
  40db89:	sti    
  40db8a:	test   BYTE PTR [edx+ebx*4-0x73fb60a0],cl
  40db91:	test   BYTE PTR [ebx-0xed97a94],dh
  40db97:	ins    DWORD PTR es:[edi],dx
  40db98:	add    al,BYTE PTR [eax+0xf026fe4]
  40db9e:	jbe    0x40db22
  40dba0:	add    BYTE PTR [eax],al
  40dba2:	repz push ebx
  40dba4:	leave  
  40dba5:	push   ds
  40dba6:	cld    
  40dba7:	jmp    0x5cc9:0x6df301f6
  40dbae:	push   edi
  40dbaf:	mov    edx,0x3dbefed0
  40dbb4:	jle    0x40db3a
  40dbb6:	fbstp  TBYTE PTR [esp+ecx*4]
  40dbb9:	inc    bl
  40dbbb:	cli    
  40dbbc:	test   DWORD PTR [ebx+0x4f8c241e],edx
  40dbc2:	or     ecx,edi
  40dbc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbc5:	dec    BYTE PTR [ebx+ecx*4]
  40dbc8:	jg     0x40db86
  40dbca:	pop    edi
  40dbcb:	or     cl,BYTE PTR [esi+edi*8-0x7701051c]
  40dbd2:	push   esi
  40dbd3:	leave  
  40dbd4:	(bad)  
  40dbd5:	(bad)  
  40dbd6:	in     al,dx
  40dbd7:	out    0x6d,eax
  40dbd9:	xchg   edi,eax
  40dbda:	out    0x69,al
  40dbdc:	mov    cl,BYTE PTR [edx+0x447c6036]
  40dbe2:	add    BYTE PTR [eax],al
  40dbe4:	add    bh,cl
  40dbe6:	enter  0xff83,0xcc
  40dbea:	jo     0x40dc63
  40dbec:	test   BYTE PTR [edi],dl
  40dbee:	dec    ecx
  40dbef:	mov    bh,dh
  40dbf1:	and    BYTE PTR [eax],ah
  40dbf3:	mov    edx,DWORD PTR [edi+edi*8]
  40dbf6:	popa   
  40dbf7:	inc    edx
  40dbf8:	add    ah,bh
  40dbfa:	stc    
  40dbfb:	inc    edx
  40dbfc:	add    esi,DWORD PTR [eax+0x7]
  40dbff:	lods   eax,DWORD PTR ds:[esi]
  40dc00:	clc    
  40dc01:	xor    al,0x12
  40dc03:	gs nop
  40dc05:	xchg   esp,eax
  40dc06:	sub    al,0x3b
  40dc09:	cmp    edi,ebx
  40dc0b:	sar    BYTE PTR [ebx],cl
  40dc0d:	hlt    
  40dc0e:	mov    esi,DWORD PTR [edi]
  40dc10:	add    eax,0x8a6a06f3
  40dc15:	ficom  WORD PTR [ecx]
  40dc17:	addr16 pop esp
  40dc19:	repz push es
  40dc1b:	jmp    0xcf1fd83d
  40dc20:	jl     0x40dc99
  40dc22:	xor    ebx,DWORD PTR [esi-0x75]
  40dc25:	push   ebp
  40dc26:	in     eax,dx
  40dc27:	clc    
  40dc28:	js     0x40dbdf
  40dc2a:	or     bh,BYTE PTR [ecx+0x463b6f78]
  40dc30:	mov    edi,DWORD PTR ds:0x434125d7
  40dc36:	and    ebp,ecx
  40dc38:	add    esi,ebx
  40dc3a:	outs   dx,BYTE PTR ds:[esi]
  40dc3b:	(bad)  
  40dc3c:	scas   al,BYTE PTR es:[edi]
  40dc3d:	and    eax,0xbef9282
  40dc42:	imul   ebp,eax,0x3
  40dc45:	repz mov WORD PTR [ebp+0xff],gs
  40dc4c:	jo     0x40dc95
  40dc4e:	fnstsw WORD PTR [edi-0x7f]
  40dc51:	pop    es
  40dc52:	jmp    0x28f9c85a
  40dc57:	jns    0x40dc05
  40dc59:	or     DWORD PTR [edx-0x7c6f026c],esi
  40dc5f:	add    al,0xf3
  40dc61:	push   es
  40dc62:	cmp    DWORD PTR [ecx+0x2d],edi
  40dc65:	or     al,0x38
  40dc67:	jns    0x40dcd0
  40dc69:	call   0x88c0:0xd7cd8ad4
  40dc70:	stos   BYTE PTR es:[edi],al
  40dc71:	add    ebp,0x550b70c1
  40dc77:	xchg   DWORD PTR [ebp+0x2be8ff81],esi
  40dc7d:	fiadd  DWORD PTR [edx+edi*8]
  40dc80:	mov    al,0x92
  40dc82:	dec    esp
  40dc83:	mov    ch,0xe7
  40dc85:	(bad)  
  40dc86:	dec    edi
  40dc87:	jo     0x40dcbc
  40dc89:	push   ebx
  40dc8a:	mov    WORD PTR [esp+ebx*1+0x7e],gs
  40dc8e:	dec    BYTE PTR [esi+0x3d1481c0]
  40dc94:	add    DWORD PTR [ecx+0x0],0x64
  40dc98:	mov    al,0x10
  40dc9a:	test   eax,eax
  40dc9c:	test   DWORD PTR [esi],0x349ebb00
  40dca2:	div    BYTE PTR [edx-0x4d]
  40dca5:	push   edx
  40dca6:	cmp    ah,BYTE PTR [edi]
  40dca8:	in     al,0x15
  40dcaa:	setg   BYTE PTR [esi+0x5c4b8c]
  40dcb1:	add    BYTE PTR [eax],al
  40dcb3:	mov    eax,0xeced483e
  40dcb8:	adc    eax,0x3c4ca98b
  40dcbd:	(bad)  
  40dcbe:	mov    esp,0x69c1837c
  40dcc3:	jbe    0x40dccc
  40dcc5:	jb     0x40dd0d
  40dcc7:	jg     0x40dc49
  40dcc9:	(bad)  
  40dcca:	call   0xf9886abf
  40dccf:	(bad)  
  40dcd0:	(bad)  
  40dcd1:	dec    esp
  40dcd2:	sbb    DWORD PTR [ecx-0xf],edi
  40dcd5:	pop    ss
  40dcd6:	je     0x40dd4b
  40dcd8:	sub    eax,0xd16afeff
  40dcdd:	out    0x5b,eax
  40dcdf:	sahf   
  40dce0:	cmp    esi,0x2bc36d87
  40dce6:	out    0x6a,al
  40dce8:	adc    DWORD PTR [esi],0xb48fdb54
  40dcee:	sub    eax,0x60fe817a
  40dcf3:	xor    al,0x30
  40dcf5:	inc    DWORD PTR [eax]
  40dcf7:	mov    ch,0x8e
  40dcf9:	std    
  40dcfa:	jne    0x40dc82
  40dcfc:	mov    ss,WORD PTR [ebx]
  40dcfe:	or     ah,cl
  40dd00:	(bad)  
  40dd01:	(bad)  
  40dd02:	jmp    0xfea5:0xafc8ba5
  40dd09:	mov    ebp,0x6a048a00
  40dd0e:	add    al,dl
  40dd10:	and    al,0x89
  40dd12:	test   DWORD PTR [esi-0x71],eax
  40dd15:	std    
  40dd16:	inc    DWORD PTR [eax]
  40dd18:	add    BYTE PTR [eax],al
  40dd1a:	loopne 0x40dd22
  40dd1c:	lea    eax,[edi-0x72]
  40dd1f:	xor    al,0x8d
  40dd21:	test   DWORD PTR [edx+0xafffd8f],ebp
  40dd27:	inc    esi
  40dd28:	inc    ebx
  40dd29:	lock pop edx
  40dd2b:	add    al,0x0
  40dd2d:	add    dl,al
  40dd2f:	aas    
  40dd30:	(bad)  
  40dd32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd33:	and    BYTE PTR [eax],cl
  40dd35:	pop    ebx
  40dd36:	sub    al,0x3
  40dd38:	add    ebx,DWORD PTR [edi]
  40dd3a:	leave  
  40dd3b:	dec    ecx
  40dd3c:	add    BYTE PTR [ebx+0x66fd9877],al
  40dd42:	xchg   ebx,eax
  40dd43:	jmp    FWORD PTR [edi+edi*8]
  40dd46:	aad    0x8d
  40dd48:	jae    0x40dd9f
  40dd4a:	add    BYTE PTR [esi+edi*8-0x7c06f501],0x14
  40dd52:	out    0x8d,eax
  40dd54:	std    
  40dd55:	push   0x1a
  40dd57:	xor    al,0xff
  40dd59:	adc    eax,0x3e763e
  40dd5e:	ins    BYTE PTR es:[edi],dx
  40dd5f:	add    eax,DWORD PTR [esp+ebp*1+0x66fd8ee5]
  40dd66:	push   ebx
  40dd67:	add    BYTE PTR [ebx],dl
  40dd69:	std    
  40dd6a:	aad    0x8e
  40dd6c:	or     eax,0xc28a8ab7
  40dd71:	or     al,0xf3
  40dd73:	jmp    0x8887:0x50c6134d
  40dd7a:	ss stos BYTE PTR es:[edi],al
  40dd7c:	call   0x6e78:0x66
  40dd83:	add    cl,BYTE PTR [ecx-0x87cb5ca]
  40dd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8a:	pusha  
  40dd8b:	jle    0x40ddde
  40dd8d:	repnz ins DWORD PTR es:[edi],dx
  40dd8f:	add    dh,BYTE PTR [ebx]
  40dd91:	mov    bl,0xec
  40dd93:	add    eax,0x6d68e4dc
  40dd98:	mov    edi,0xba2ed3b
  40dd9d:	jo     0x40dd4c
  40dd9f:	cld    
  40dda0:	mov    BYTE PTR [esi],ch
  40dda2:	sahf   
  40dda3:	leave  
  40dda4:	pop    esp
  40dda5:	inc    edi
  40dda6:	ja     0x40dd83
  40dda8:	push   cs
  40dda9:	pushf  
  40ddaa:	jmp    0x44c9:0xe85cfed6
  40ddb1:	aaa    
  40ddb2:	pop    edx
  40ddb3:	out    0xfe,eax
  40ddb5:	(bad)  
  40ddb6:	fnsave [ebp-0x7c]
  40ddb9:	pop    ss
  40ddba:	rol    DWORD PTR [edi+0x3df4a3fe],1
  40ddc0:	aam    0xc9
  40ddc2:	ins    DWORD PTR es:[edi],dx
  40ddc3:	fcmovnb st,st(2)
  40ddc5:	ret    
  40ddc6:	jmp    0xec0e:0x30c31efe
  40ddcd:	sbb    al,0x82
  40ddcf:	(bad)  
  40ddd0:	adc    eax,0x7c836db3
  40ddd5:	pop    ds
  40ddd6:	sbb    al,bh
  40ddd8:	add    DWORD PTR [ebp+0x6d],0x2
  40dddc:	add    ah,bh
  40ddde:	add    DWORD PTR [edi-0x77a69174],edx
  40dde4:	inc    BYTE PTR [eax]
  40dde6:	add    BYTE PTR [eax],al
  40dde8:	in     al,dx
  40dde9:	or     BYTE PTR [ecx+0x7e6ff2b5],ah
  40ddef:	mov    edi,0x5c6d06ec
  40ddf4:	aam    0x7e
  40ddf6:	call   0x63982575
  40ddfb:	inc    ecx
  40ddfc:	ret    
  40ddfd:	xlat   BYTE PTR ds:[ebx]
  40ddfe:	pop    ebx
  40ddff:	or     DWORD PTR [eax],0x2487c57e
  40de05:	cmp    ah,BYTE PTR [edx-0x4a8194cd]
  40de0b:	add    al,0xf3
  40de0d:	xor    DWORD PTR [edi-0x21fc91cc],esp
  40de13:	xor    edx,DWORD PTR [esp+esi*8-0x41187874]
  40de1a:	sti    
  40de1b:	inc    ebx
  40de1c:	repz inc ecx
  40de1e:	stos   BYTE PTR es:[edi],al
  40de1f:	pop    es
  40de20:	out    dx,eax
  40de21:	or     eax,0x7dc8793e
  40de26:	jge    0x40ddaf
  40de28:	sub    ecx,esp
  40de2a:	xchg   esp,eax
  40de2b:	adc    edi,ebx
  40de2d:	cmp    DWORD PTR [eax+0x710e6a1e],esp
  40de33:	aaa    
  40de34:	icebp  
  40de35:	in     al,0x69
  40de37:	dec    ecx
  40de38:	sbb    BYTE PTR [esi+0x55],bh
  40de3b:	xchg   ebp,ebx
  40de3d:	or     eax,0x503ec574
  40de42:	push   0x277cf1a5
  40de47:	sub    DWORD PTR [edi+0x7bdd5a],0x0
  40de4e:	add    BYTE PTR [ebp-0x75064bf7],dh
  40de54:	push   ss
  40de55:	je     0x40ded0
  40de57:	loopne 0x40ded6
  40de59:	sbb    eax,0x6a0d1987
  40de5e:	or     DWORD PTR [edi],esp
  40de60:	or     DWORD PTR [esp+eax*2+0x79740289],edx
  40de67:	les    edi,FWORD PTR [ebp-0x3]
  40de6a:	xchg   BYTE PTR [ebx-0x74],al
  40de6d:	jmp    DWORD PTR [ebp-0x2018291c]
  40de73:	(bad)  
  40de74:	jl     0x40de74
  40de76:	push   ebx
  40de77:	icebp  
  40de78:	mov    ecx,DWORD PTR [edi+ecx*1+0x38fe7c74]
  40de7f:	dec    edx
  40de80:	shl    BYTE PTR [esi],cl
  40de82:	iret   
  40de83:	pop    es
  40de84:	outs   dx,DWORD PTR ds:[esi]
  40de85:	cli    
  40de86:	mov    eax,ds:0x34fe7c6d
  40de8b:	push   ebx
  40de8c:	mov    cl,BYTE PTR [ebp+ebx*2+0x18fe7c7b]
  40de93:	loopne 0x40de9e
  40de95:	(bad)  
  40de96:	cmp    esp,eax
  40de98:	jge    0x40df0e
  40de9a:	xchg   ecx,eax
  40de9b:	jne    0x40deaf
  40de9d:	add    al,0xff
  40de9f:	xor    BYTE PTR [edi],al
  40dea1:	jmp    0x40de8e
  40dea3:	mov    eax,ds:0x5b2c8a60
  40dea8:	cmp    cl,cl
  40deaa:	push   0x78
  40deac:	jl     0x40debc
  40deae:	pop    esp
  40deaf:	das    
  40deb0:	mov    es,WORD PTR [ecx+ecx*8+0x76000000]
  40deb7:	jl     0x40deb7
  40deb9:	push   0x2f
  40debb:	pop    es
  40debc:	mov    DWORD PTR [esp+ebx*2+0x7b],ebp
  40dec0:	(bad)  
  40dec1:	push   esi
  40dec2:	leave  
  40dec3:	retf   0x6007
  40dec6:	mov    ebx,0x6d46fe15
  40decb:	nop
  40decc:	dec    esp
  40decd:	push   ecx
  40dece:	scas   eax,DWORD PTR es:[edi]
  40decf:	mov    bl,BYTE PTR [ebx]
  40ded1:	aaa    
  40ded2:	ins    DWORD PTR es:[edi],dx
  40ded3:	jl     0x40df27
  40ded5:	call   0x7c6e:0xfd848be1
  40dedc:	(bad)  
  40dedd:	mov    ecx,0x59147dc1
  40dee2:	add    edi,DWORD PTR ds:0xc306400
  40dee8:	pop    DWORD PTR [eax]
  40deea:	add    eax,DWORD PTR [ebp+0x1761fffd]
  40def0:	in     al,dx
  40def1:	call   0x40a9e7
  40def6:	icebp  
  40def7:	jno    0x40de7a
  40def9:	clc    
  40defa:	int    0xc
  40defc:	push   es
  40defd:	(bad)  
  40defe:	pop    ss
  40deff:	mov    bh,bh
  40df01:	jmp    0x9b05:0xfb5c00d9
  40df08:	fsubr  DWORD PTR ds:[ebp-0x3d8a767e]
  40df0f:	mov    al,ds:0x89a00f3
  40df14:	mov    BYTE PTR [ebp+0x65],0x8
  40df18:	jmp    0x40e00e
  40df1d:	mov    cl,BYTE PTR [eax]
  40df1f:	add    BYTE PTR [ebx],dh
  40df21:	pop    edx
  40df22:	sbb    eax,0x1a853e83
  40df27:	mov    DWORD PTR [esi-0x78],eax
  40df2a:	or     eax,0xf59a6a0d
  40df2f:	inc    esp
  40df30:	or     BYTE PTR [edx],cl
  40df32:	fwait
  40df33:	or     ebx,ecx
  40df35:	fld    QWORD PTR [ecx+0x24d303e9]
  40df3b:	add    al,0x8b
  40df3d:	add    al,0x9b
  40df3f:	xchg   edi,eax
  40df40:	mov    bh,0x5b
  40df42:	or     BYTE PTR [ebx-0x2ff42c10],cl
  40df48:	sub    DWORD PTR [ecx+eax*4+0x2c6840d],0x0
  40df50:	add    ch,ch
  40df52:	or     esp,eax
  40df54:	push   ebx
  40df55:	test   BYTE PTR [ebx],ch
  40df57:	call   0xfdc2c44c
  40df5c:	mov    edx,edx
  40df5e:	test   ebp,edi
  40df60:	add    DWORD PTR [edi+0x3f],esp
  40df63:	lea    eax,[ebp-0xd]
  40df66:	xor    cl,BYTE PTR gs:[ebp-0x17cbc24a]
  40df6d:	scas   eax,DWORD PTR es:[edi]
  40df6e:	mov    BYTE PTR [edx],0x0
  40df71:	js     0x40df65
  40df73:	mov    dl,0x8a
  40df75:	jmp    0x40df5d
  40df77:	push   es
  40df78:	aam    0xcb
  40df7a:	test   BYTE PTR [ecx+0x0],cl
  40df7d:	repz lock cmp esi,0x0
  40df82:	add    BYTE PTR [eax],al
  40df84:	inc    edi
  40df85:	repz sub ebp,eax
  40df88:	jmp    0xa422:0x680003dc
  40df8f:	sub    BYTE PTR [ebx+0x4453326f],0xbd
  40df96:	or     eax,0x8d009b08
  40df9b:	(bad)  
  40df9c:	pushf  
  40df9d:	call   0x6ed5622c
  40dfa2:	or     eax,0xb0128c0b
  40dfa7:	mov    ah,BYTE PTR [esi]
  40dfa9:	call   0x26e:0x4491
  40dfaf:	mov    edi,esi
  40dfb1:	cdq    
  40dfb2:	call   0x6483:0x26eaa30
  40dfb9:	hlt    
  40dfba:	repz cmp DWORD PTR [eax+0x70fe83ec],0xffffffe4
  40dfc2:	add    DWORD PTR [ebx+eiz*4+0x23],esi
  40dfc6:	ds sti 
  40dfc8:	repz enter 0x8b38,0x3d
  40dfcd:	(bad)
  40dfd0:	repnz ins DWORD PTR es:[edi],dx
  40dfd2:	ja     0x40dfc3
  40dfd4:	jo     0x40e011
  40dfd6:	test   BYTE PTR [ebp+ebp*8+0x2b],dh
  40dfda:	ds div esi
  40dfdd:	enter  0x55cc,0xb
  40dfe1:	push   es
  40dfe2:	sub    DWORD PTR ds:0xe1e06f3,ecx
  40dfe8:	add    BYTE PTR [eax],al
  40dfea:	add    BYTE PTR [ebx],dl
  40dfec:	xlat   BYTE PTR ds:[ebx]
  40dfed:	mov    esi,0x10e8784
  40dff2:	and    eax,0x80057afd
  40dff7:	in     al,0x8
  40dff9:	je     0x40dff3
  40dffb:	jns    0x40dfd9
  40dffd:	loopne 0x40e02c
  40dfff:	retf   
  40e000:	enter  0x235,0xf3
  40e004:	ins    DWORD PTR es:[edi],dx
  40e005:	test   BYTE PTR [esi+0xa537ac4],0xad
  40e00c:	(bad)  
  40e00d:	fld    QWORD PTR ds:0xe16106c8
  40e013:	mov    ecx,0xf3bc996f
  40e018:	push   es
  40e019:	mov    esi,0xfe6fbcf9
  40e01e:	pop    edx
  40e01f:	popf   
  40e020:	jp     0x40e084
  40e022:	leave  
  40e023:	cdq    
  40e024:	cmp    ebp,eax
  40e026:	adc    dh,BYTE PTR [esi-0x40]
  40e029:	lahf   
  40e02a:	add    DWORD PTR [ebp+0x7c7b1387],0x9
  40e031:	gs mov bl,0x7b
  40e034:	jp     0x40dfbb
  40e036:	and    edi,0x66
  40e039:	jge    0x40e034
  40e03b:	pop    ebp
  40e03c:	in     eax,dx
  40e03d:	jne    0x40dfc2
  40e03f:	out    0xe,eax
  40e041:	adc    DWORD PTR [edx],0x89657a5d
  40e047:	mov    WORD PTR [edx],cs
  40e049:	je     0x40e08f
  40e04b:	pop    ebx
  40e04c:	xchg   esp,eax
  40e04d:	dec    edi
  40e04e:	add    DWORD PTR [eax],0x0
  40e051:	add    BYTE PTR ds:0x717061d4,bh
  40e057:	imul   ecx,DWORD PTR [eax],0xffffff87
  40e05a:	scas   eax,DWORD PTR es:[edi]
  40e05b:	or     bh,BYTE PTR [esi]
  40e05d:	clc    
  40e05e:	jmp    0x4ecdfd3
  40e063:	add    eax,0xc994a48d
  40e068:	mov    WORD PTR [esp+edx*4-0xb6b0137],gs
  40e06f:	inc    ecx
  40e070:	inc    esp
  40e071:	adc    eax,0xe90006e7
  40e076:	cld    
  40e077:	or     bh,bh
  40e079:	fsubr  QWORD PTR [edx+edx*1-0x468416c0]
  40e080:	jae    0x40e066
  40e082:	jne    0x40e0c5
  40e084:	inc    BYTE PTR [edx]
  40e086:	xor    BYTE PTR [edx+0x14],bh
  40e089:	jmp    0xd240a778
  40e08e:	inc    ecx
  40e08f:	lea    eax,[ecx+eax*8+0x6f]
  40e093:	ret    0x47f7
  40e096:	fs ret 0xd2e5
  40e09a:	cli    
  40e09b:	test   DWORD PTR [ecx+eax*8-0x10],esp
  40e09f:	xor    eax,0xc26e4fc0
  40e0a4:	cmc    
  40e0a5:	arpl   WORD PTR [ebx+0xa2c8809],bp
  40e0ab:	lock pop es
  40e0ad:	ins    BYTE PTR es:[edi],dx
  40e0ae:	mov    ebx,0x7b964f75
  40e0b3:	add    esi,eax
  40e0b5:	and    al,0x0
  40e0b7:	add    BYTE PTR [eax],al
  40e0b9:	sti    
  40e0ba:	jns    0x40e0a2
  40e0bc:	fisubr DWORD PTR [ebx-0x4845fffa]
  40e0c2:	test   DWORD PTR [edi-0x75b9841a],edi
  40e0c8:	test   al,0xa7
  40e0ca:	inc    edi
  40e0cb:	psubsw mm5,QWORD PTR [ebx]
  40e0ce:	mov    ebx,gs
  40e0d0:	push   0xe90131d4
  40e0d5:	lock aad 0x8a
  40e0d8:	lods   al,BYTE PTR ds:[esi]
  40e0d9:	call   0x894137ae
  40e0de:	in     eax,dx
  40e0df:	enter  0x1a6f,0x5
  40e0e3:	xor    ecx,ecx
  40e0e5:	add    ecx,DWORD PTR es:[edi]
  40e0e8:	xchg   esp,eax
  40e0e9:	retf   
  40e0ea:	xor    dh,dh
  40e0ec:	push   esi
  40e0ed:	pusha  
  40e0ee:	or     al,0x8d
  40e0f0:	inc    ebp
  40e0f1:	out    dx,al
  40e0f2:	push   ebp
  40e0f3:	mov    ebx,edi
  40e0f5:	xchg   ebx,eax
  40e0f6:	push   esi
  40e0f7:	jmp    0x5eff:0xffb103e8
  40e0fe:	les    esi,FWORD PTR [ebx+0xf]
  40e101:	test   al,0xc4
  40e103:	out    0xa6,eax
  40e105:	retf   
  40e106:	add    al,0x0
  40e108:	add    BYTE PTR [edi-0x7],0xfe
  40e10c:	jae    0x40e0dc
  40e10e:	mov    edi,ecx
  40e110:	push   esi
  40e111:	and    BYTE PTR [ecx*4-0x19ac5ebb],al
  40e118:	cli    
  40e119:	pop    ecx
  40e11a:	add    al,0x0
  40e11c:	test   BYTE PTR [eax],al
  40e11e:	add    BYTE PTR [eax],al
  40e120:	pop    edx
  40e121:	jo     0x40e109
  40e123:	jmp    0x40e0aa
  40e125:	mov    cl,BYTE PTR [ebx-0x19]
  40e128:	adc    esp,eax
  40e12a:	and    eax,DWORD PTR [eax]
  40e12c:	mov    al,BYTE PTR [edi-0x3bb47502]
  40e132:	call   0x8a036247
  40e137:	ror    DWORD PTR [ebx],1
  40e139:	loope  0x40e139
  40e13b:	dec    BYTE PTR [edx+0x4ae1c104]
  40e141:	or     edx,ecx
  40e143:	rol    DWORD PTR [edx+0x52e2c10b],0xb
  40e14a:	ret    0x8c48
  40e14d:	inc    eax
  40e14e:	cmc    
  40e14f:	pop    edx
  40e150:	pop    ss
  40e151:	test   esi,edi
  40e153:	call   FWORD PTR [edx+0x17]
  40e156:	xchg   DWORD PTR [ebx+esi*8-0x36fffd93],eax
  40e15d:	ins    DWORD PTR es:[edi],dx
  40e15e:	in     al,dx
  40e15f:	add    BYTE PTR [esi-0x55],bh
  40e162:	jnp    0x40e1b3
  40e164:	js     0x40e12b
  40e166:	imul   ebp,DWORD PTR [esi-0x7bfd90a0],0x33
  40e16d:	mov    dl,0x98
  40e16f:	mov    DWORD PTR [esi-0x417c73dc],esi
  40e175:	sub    DWORD PTR [edx+0x43e9fcfe],eax
  40e17b:	jae    0x40e162
  40e17d:	lahf   
  40e17e:	cmp    ebp,0x26dec
  40e184:	add    BYTE PTR [eax],al
  40e186:	add    BYTE PTR [ebp+0x10],ah
  40e189:	imul   edi,DWORD PTR [ecx-0x24],0x70
  40e18d:	jg     0x40e11b
  40e18f:	cs jle 0x40e164
  40e192:	xor    cl,ah
  40e194:	cmp    cl,bl
  40e196:	mov    WORD PTR [esi-0x57],gs
  40e199:	cmp    dh,0xbc
  40e19c:	cmp    eax,0x48c37c8b
  40e1a1:	adc    eax,0x42e06b4
  40e1a6:	test   DWORD PTR [ebx+0x36c60a31],esi
  40e1ac:	mov    ecx,0xe4e0eadb
  40e1b1:	cmc    
  40e1b2:	out    dx,eax
  40e1b3:	cwde   
  40e1b4:	jbe    0x40e139
  40e1b6:	jge    0x40e1a7
  40e1b8:	imul   esi,esi,0x8
  40e1bb:	push   0x7c3b2017
  40e1c0:	adc    dh,BYTE PTR [ebp-0x16]
  40e1c3:	add    ebp,esi
  40e1c5:	enter  0xd917,0x61
  40e1c9:	cmp    DWORD PTR [edi+0x448f1df7],0x4c
  40e1d0:	sbb    eax,0x626cb6c
  40e1d5:	data16 add BYTE PTR [ebp-0xf],0x58
  40e1da:	and    bh,0xe
  40e1dd:	inc    ebx
  40e1df:	xor    al,0x3c
  40e1e1:	push   esi
  40e1e2:	div    DWORD PTR ds:0xca78c386
  40e1e8:	inc    eax
  40e1e9:	mov    ds:0x7c,eax
  40e1ee:	repz pop es
  40e1f0:	ins    BYTE PTR es:[edi],dx
  40e1f1:	sub    al,0xf2
  40e1f3:	push   es
  40e1f4:	jmp    0xabcadee6
  40e1f9:	push   ebx
  40e1fa:	call   0xff32:0xe780b906
  40e201:	ret    
  40e202:	hlt    
  40e203:	and    DWORD PTR [edi+ecx*1],0x59
  40e207:	or     DWORD PTR [ecx+0x18cc7be9],esp
  40e20d:	adc    BYTE PTR [ebp-0x1a34f334],ah
  40e213:	mov    al,BYTE PTR [eax+0x3]
  40e216:	repz push es
  40e218:	xor    eax,edi
  40e21a:	sti    
  40e21b:	dec    esp
  40e21c:	and    esi,DWORD PTR [edi+0x19]
  40e21f:	pusha  
  40e220:	aam    0x4
  40e222:	repz push es
  40e224:	pop    esp
  40e225:	leave  
  40e226:	mov    esp,0xf3b8b15f
  40e22b:	push   es
  40e22c:	jb     0x40e2a2
  40e22e:	imul   edi,esp,0xffffffb8
  40e231:	adc    DWORD PTR [esi-0x7296cb8a],0xfffffffc
  40e238:	xchg   esp,eax
  40e239:	jmp    0x74d3:0x6c39dd2a
  40e240:	xchg   ebp,eax
  40e241:	jg     0x40e2ac
  40e243:	outs   dx,DWORD PTR ds:[esi]
  40e244:	imul   edi,DWORD PTR [edi-0xd],0xaf911efb
  40e24b:	(bad)  
  40e24c:	sbb    BYTE PTR [ecx+0x18ff76b7],dl
  40e252:	add    BYTE PTR [eax],al
  40e254:	add    bh,al
  40e256:	out    dx,al
  40e257:	mov    ch,0xe8
  40e259:	lock xor DWORD PTR [ecx+ebx*2+0x78],0xd0dc887e
  40e262:	ins    DWORD PTR es:[edi],dx
  40e263:	fwait
  40e264:	lahf   
  40e265:	out    dx,al
  40e266:	push   es
  40e267:	or     DWORD PTR [esi-0x54],0xfffffffa
  40e26b:	or     esi,DWORD PTR [edx+0x12]
  40e26e:	push   cs
  40e26f:	(bad)  
  40e270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e272:	shr    al,1
  40e274:	test   edi,ebp
  40e276:	push   es
  40e277:	add    BYTE PTR [esi-0x168c3868],dl
  40e27d:	lock add DWORD PTR [ebp+ecx*1+0x68],0xa76a07d3
  40e286:	pop    es
  40e287:	push   eax
  40e288:	or     edx,0xffffffdc
  40e28b:	push   edx
  40e28c:	adc    DWORD PTR ds:0x69fefe73,edi
  40e292:	jge    0x40e216
  40e294:	imul   bh
  40e296:	sti    
  40e297:	pop    es
  40e298:	out    dx,al
  40e299:	retf   
  40e29a:	push   ebp
  40e29b:	out    0xa5,eax
  40e29d:	jl     0x40e2a5
  40e29f:	add    BYTE PTR [edx-0x45],dh
  40e2a2:	push   ebp
  40e2a3:	out    0x32,eax
  40e2a5:	jge    0x40e2ad
  40e2a7:	add    BYTE PTR [edx+0x2d],ch
  40e2aa:	jne    0x40e2ba
  40e2ac:	ins    DWORD PTR es:[edi],dx
  40e2ad:	xchg   esi,eax
  40e2ae:	je     0x40e2ae
  40e2b0:	mov    esi,0x3d007471
  40e2b5:	jmp    0x40e303
  40e2b7:	inc    esp
  40e2b8:	mov    dl,0x0
  40e2ba:	add    BYTE PTR [eax],al
  40e2bc:	lock add BYTE PTR [edx+eiz*4-0x5b],0xd3
  40e2c2:	pop    edx
  40e2c3:	mov    al,0x32
  40e2c5:	or     al,BYTE PTR [eax]
  40e2c7:	punpckhbw mm1,mm2
  40e2ca:	in     al,0x7
  40e2cc:	jle    0x40e298
  40e2ce:	rol    DWORD PTR [eax],1
  40e2d0:	loope  0x40e310
  40e2d2:	in     eax,0x8d
  40e2d4:	pop    edi
  40e2d5:	fld    DWORD PTR [edi+0x25e17645]
  40e2db:	mov    bl,0x5b
  40e2dd:	or     DWORD PTR [ebx-0x20c2610],ecx
  40e2e3:	(bad)  
  40e2e5:	das    
  40e2e6:	(bad)  
  40e2e7:	call   FWORD PTR [ebp+0x49d5e65b]
  40e2ed:	or     DWORD PTR [eax],eax
  40e2ef:	jmp    DWORD PTR [edi-0x1b]
  40e2f2:	push   0xe658845a
  40e2f7:	jo     0x40e2d8
  40e2f9:	hlt    
  40e2fa:	std    
  40e2fb:	add    edx,0xa
  40e2fe:	jne    0x40e308
  40e300:	inc    esp
  40e301:	loope  0x40e35b
  40e303:	mov    ah,0xb
  40e305:	or     ebx,ebp
  40e307:	jns    0xd4b6e0fe
  40e30d:	retf   0xf743
  40e310:	xchg   ecx,eax
  40e311:	loope  0x40e315
  40e313:	(bad)  
  40e314:	xchg   edi,eax
  40e315:	icebp  
  40e316:	(bad)  
  40e317:	out    0xf1,eax
  40e319:	scas   al,BYTE PTR es:[edi]
  40e31a:	(bad)  
  40e31b:	call   FWORD PTR [edx+0x7]
  40e31e:	sti    
  40e31f:	add    DWORD PTR [eax],eax
  40e321:	add    BYTE PTR [eax],al
  40e323:	daa    
  40e324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e325:	jle    0x40e3a4
  40e327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e328:	push   ecx
  40e329:	jb     0x40e2c1
  40e32b:	popf   
  40e32c:	jl     0x40e318
  40e32e:	inc    DWORD PTR [edi-0x6]
  40e331:	push   0x33e309ff
  40e336:	std    
  40e337:	pop    ebp
  40e338:	repnz add eax,0xffffff8d
  40e33c:	popf   
  40e33d:	mov    esi,0x895c16eb
  40e342:	in     al,dx
  40e343:	sbb    edi,esi
  40e345:	adc    al,BYTE PTR [ebx+0x56feeef7]
  40e34b:	repz call 0x85b6e74e
  40e351:	or     al,0x8e
  40e353:	mov    ebx,DWORD PTR [esi+0x2]
  40e356:	add    BYTE PTR [eax+0xb],dh
  40e359:	jl     0x40e35a
  40e35b:	rol    DWORD PTR [edi],0x3c
  40e35e:	pop    ebx
  40e35f:	xor    al,0x2b
  40e361:	je     0x40e363
  40e363:	repz pop ebp
  40e365:	add    cl,BYTE PTR [ecx+0x588c19e]
  40e36b:	lock mov ds:0x6b8de77a,al
  40e371:	add    al,BYTE PTR [eax]
  40e373:	outs   dx,DWORD PTR ds:[esi]
  40e374:	push   ds
  40e375:	not    DWORD PTR [edi]
  40e377:	push   0x258a76ab
  40e37c:	mov    BYTE PTR [edi+0x3],0xf3
  40e380:	pop    ebp
  40e381:	jnp    0x40e3cf
  40e383:	jmp    FWORD PTR [edi+ecx*8]
  40e386:	out    dx,eax
  40e387:	add    BYTE PTR [eax],al
  40e389:	add    dl,cl
  40e38b:	mov    dl,0x6e
  40e38d:	sub    BYTE PTR [esi+0x78466915],dl
  40e393:	stos   BYTE PTR es:[edi],al
  40e394:	jb     0x40e31e
  40e396:	or     bh,BYTE PTR cs:[ecx]
  40e399:	(bad)  
  40e39a:	pop    esi
  40e39b:	mov    bl,0x87
  40e39d:	jl     0x40e366
  40e39f:	call   0x767f6ea9
  40e3a4:	lea    ecx,[ebx-0xe]
  40e3a7:	jne    0x40e391
  40e3a9:	adc    esp,DWORD PTR [edx]
  40e3ab:	jecxz  0x40e373
  40e3ad:	push   es
  40e3ae:	jmp    0x40e3dd
  40e3b0:	jge    0x40e3c6
  40e3b2:	out    dx,eax
  40e3b3:	jnp    0x40e377
  40e3b5:	push   DWORD PTR [ecx-0x5f]
  40e3b8:	push   cs
  40e3b9:	test   DWORD PTR [ebx+0x2e8b0d3a],esi
  40e3bf:	mov    edx,0xde9bcd87
  40e3c4:	push   es
  40e3c5:	add    bl,dh
  40e3c7:	push   es
  40e3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3c9:	into   
  40e3ca:	js     0x40e3eb
  40e3cc:	mov    ds:0x61732f7c,al
  40e3d1:	(bad)  
  40e3d2:	push   0xad389207
  40e3d7:	or     al,BYTE PTR ds:0x74c95d46
  40e3dd:	mov    dh,dl
  40e3df:	or     dh,BYTE PTR [esi-0x3a]
  40e3e2:	pop    esp
  40e3e3:	add    eax,0xd1f3700c
  40e3e8:	pusha  
  40e3e9:	cmp    bh,BYTE PTR [esi+0x8fed7a]
  40e3ef:	add    BYTE PTR [eax],al
  40e3f1:	mov    ecx,0xc97c5573
  40e3f6:	rcr    DWORD PTR [edi],cl
  40e3f8:	inc    eax
  40e3f9:	mov    esi,0x3588387f
  40e3fe:	pop    esi
  40e3ff:	rol    DWORD PTR [esi],cl
  40e401:	repz push es
  40e403:	ins    DWORD PTR es:[edi],dx
  40e404:	inc    ebx
  40e405:	adc    BYTE PTR [ebx],0x5c
  40e408:	(bad)  
  40e409:	in     al,dx
  40e40a:	(bad)  
  40e40b:	adc    BYTE PTR [ebp-0x10],cl
  40e40e:	push   es
  40e40f:	jmp    0xfb2e189a
  40e414:	mov    BYTE PTR [ebp+0x356b1e7e],dh
  40e41a:	or     cl,ch
  40e41c:	add    esi,DWORD PTR [edi+0x47]
  40e41f:	jae    0x40e427
  40e421:	and    BYTE PTR [edi-0x58],al
  40e424:	fnsave [ecx-0x4e22d6ca]
  40e42a:	fdiv   QWORD PTR [ecx+0x68]
  40e42d:	and    edx,esi
  40e42f:	shl    DWORD PTR ss:[edi-0x34],cl
  40e433:	aam    0xd4
  40e435:	xchg   esp,eax
  40e436:	aad    0x6a
  40e438:	add    al,0xf3
  40e43a:	jge    0x40e3fc
  40e43c:	aaa    
  40e43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43e:	cs mov edi,0xff7dd8f0
  40e444:	adc    ecx,DWORD PTR [ebx]
  40e446:	test   edx,edi
  40e448:	call   0xf1ab1ac9
  40e44d:	or     dh,bh
  40e44f:	rcr    BYTE PTR [esi+0x1dc62cf8],cl
  40e455:	add    BYTE PTR [eax],al
  40e457:	add    al,dh
  40e459:	jg     0x40e48a
  40e45b:	pusha  
  40e45c:	pop    edi
  40e45d:	push   es
  40e45e:	mov    edi,DWORD PTR [ecx+0x72]
  40e461:	jl     0x40e4d6
  40e463:	fbld   TBYTE PTR [edi+0x34]
  40e466:	mov    DWORD PTR [edi],edx
  40e468:	repz pop esi
  40e46a:	(bad)  [edi-0x38]
  40e46d:	jo     0x40e3f1
  40e46f:	out    0x3c,eax
  40e471:	pop    es
  40e472:	jge    0x40e467
  40e474:	mov    ecx,0xc5efe83b
  40e479:	jo     0x40e479
  40e47b:	mov    bh,0x95
  40e47d:	or     cl,BYTE PTR [ebx+0x57098c2f]
  40e483:	push   ecx
  40e484:	xchg   esi,eax
  40e485:	push   edi
  40e486:	(bad)  
  40e487:	les    eax,FWORD PTR ss:[esi+0x5e]
  40e48b:	(bad)  
  40e48c:	and    eax,0x3672c23f
  40e491:	push   es
  40e492:	mov    esi,eax
  40e494:	sbb    eax,0x3e6c56dc
  40e499:	div    BYTE PTR [edx]
  40e49b:	fs das 
  40e49d:	imul   BYTE PTR [esi]
  40e49f:	xchg   edx,eax
  40e4a0:	xor    BYTE PTR [edx],bh
  40e4a2:	mov    eax,DWORD PTR [ecx]
  40e4a4:	rcl    dh,0xe7
  40e4a7:	lods   eax,DWORD PTR ds:[esi]
  40e4a8:	and    eax,0x3f62fe71
  40e4ad:	mov    esi,ebp
  40e4af:	pop    esp
  40e4b0:	repz xor al,0xc0
  40e4b3:	rcl    BYTE PTR [ecx],cl
  40e4b5:	fldenv [edi+0x7f]
  40e4b8:	lock push es
  40e4ba:	add    BYTE PTR [edx+0x0],ah
  40e4bd:	add    BYTE PTR [eax],al
  40e4bf:	xor    DWORD PTR [edx-0x23],ebp
  40e4c2:	add    BYTE PTR [eax],dh
  40e4c4:	or     eax,DWORD PTR [eax]
  40e4c6:	push   esi
  40e4c7:	and    dh,cl
  40e4c9:	out    0xb7,al
  40e4cb:	push   0x598afdec
  40e4d0:	loopne 0x40e4de
  40e4d2:	push   0xffffff8a
  40e4d4:	pop    ebp
  40e4d5:	xchg   esp,eax
  40e4d6:	add    BYTE PTR [edx+0x72c03305],cl
  40e4dc:	xor    DWORD PTR [ecx+0x0],edi
  40e4df:	pop    edx
  40e4e0:	dec    esp
  40e4e1:	pop    esp
  40e4e2:	pop    ebx
  40e4e3:	mov    DWORD PTR [esi-0x77],edx
  40e4e6:	in     al,dx
  40e4e7:	sti    
  40e4e8:	pop    ecx
  40e4e9:	push   ebp
  40e4ea:	xor    eax,ebp
  40e4ec:	cmp    bl,bl
  40e4ee:	mov    DWORD PTR [edi-0x7],edx
  40e4f1:	aaa    
  40e4f2:	jle    0x40e542
  40e4f4:	outs   dx,DWORD PTR ds:[esi]
  40e4f5:	sub    ecx,DWORD PTR [ebx+0x66c7084c]
  40e4fb:	cdq    
  40e4fc:	ins    DWORD PTR es:[edi],dx
  40e4fd:	push   ds
  40e4fe:	add    BYTE PTR [edx+edx*1],bh
  40e501:	push   0x4
  40e503:	mov    ebp,eax
  40e505:	sbb    dl,BYTE PTR [eax-0x2b]
  40e508:	jbe    0x40e510
  40e50a:	jmp    FWORD PTR [edi]
  40e50c:	cmp    DWORD PTR [esi],edx
  40e50e:	inc    eax
  40e50f:	sbb    cl,BYTE PTR [eax-0x3a70f33e]
  40e515:	jae    0x40e51a
  40e517:	aad    0x46
  40e519:	cli    
  40e51a:	inc    ebx
  40e51b:	pop    ecx
  40e51c:	lds    esi,FWORD PTR [esi]
  40e51e:	cmp    edx,DWORD PTR [eax+esi*2+0xd37a]
  40e525:	add    BYTE PTR [ecx+0x47],ah
  40e528:	cli    
  40e529:	pop    edi
  40e52a:	xchg   ecx,eax
  40e52b:	ret    
  40e52c:	rol    BYTE PTR [edx+ebx*8],0x57
  40e530:	mov    esp,ebp
  40e532:	imul   ebx,DWORD PTR [ecx+0x55],0x33
  40e536:	aad    0x3a
  40e538:	fisttp DWORD PTR [ecx+0x7e37ef17]
  40e53e:	repz popa 
  40e540:	clc    
  40e541:	sub    al,0x78
  40e543:	push   0xdd15c703
  40e548:	sti    
  40e549:	xor    esi,ebx
  40e54b:	aaa    
  40e54c:	sbb    ebp,DWORD PTR [edx-0x1d]
  40e54f:	fadd   QWORD PTR [ebx+0x23]
  40e552:	and    esp,DWORD PTR [ecx+0x737c07ee]
  40e558:	ss push ss
  40e55a:	xor    ebx,DWORD PTR [esi-0x7d]
  40e55d:	ret    
  40e55e:	jmp    edx
  40e560:	inc    ebx
  40e561:	je     0x40e553
  40e563:	cmp    BYTE PTR [esi+0x40dcb0fb],0x37
  40e56a:	sbb    BYTE PTR [eax],dl
  40e56c:	add    BYTE PTR [eax+eiz*1-0x1b],bh
  40e570:	mov    esi,0x4b14a4fb
  40e575:	shl    edi,0x5d
  40e578:	rcl    BYTE PTR [esi+0x68],1
  40e57b:	out    0x86,al
  40e57d:	inc    esi
  40e57e:	pmulhw mm6,QWORD PTR [edx+0x4f]
  40e582:	sbb    edi,DWORD PTR [edi]
  40e584:	ja     0x40e584
  40e586:	sbb    al,0xdd
  40e588:	jnp    0x40e58b
  40e58a:	add    BYTE PTR [eax],al
  40e58c:	add    BYTE PTR [esi-0x28397cb5],dl
  40e592:	nop
  40e593:	push   0xffffff9a
  40e595:	add    al,0x21
  40e597:	jns    0x40e51b
  40e599:	sti    
  40e59a:	pop    ebx
  40e59b:	cmc    
  40e59c:	add    eax,eax
  40e59e:	sbb    eax,0x1e20026d
  40e5a3:	les    ebx,FWORD PTR [esi+0x45]
  40e5a6:	sbb    eax,0x7617438d
  40e5ab:	mov    ecx,DWORD PTR [ebx+0xf]
  40e5ae:	bound  ecx,QWORD PTR [ebx-0x351b08c1]
  40e5b4:	add    ecx,DWORD PTR [eax]
  40e5b6:	pop    ds
  40e5b7:	out    dx,eax
  40e5b8:	add    al,BYTE PTR [eax]
  40e5ba:	pop    es
  40e5bb:	test   eax,0x6946d944
  40e5c0:	arpl   WORD PTR [esi-0x5b12563a],bp
  40e5c6:	out    0x63,eax
  40e5c8:	inc    esi
  40e5c9:	fadd   QWORD PTR [esi]
  40e5cb:	push   ebx
  40e5cc:	cmp    al,0x94
  40e5ce:	mul    ah
  40e5d0:	js     0x40e5ae
  40e5d2:	pop    esi
  40e5d3:	adc    al,0x2d
  40e5d5:	icebp  
  40e5d6:	push   es
  40e5d7:	push   0x3f
  40e5d9:	loopne 0x40e61e
  40e5db:	jno    0x40e59c
  40e5dd:	rol    BYTE PTR [edx],1
  40e5df:	jb     0x40e5a8
  40e5e1:	adc    bh,bh
  40e5e3:	ds (bad) 
  40e5e5:	loopne 0x40e611
  40e5e7:	loope  0x40e661
  40e5e9:	test   BYTE PTR es:[eax-0x587c3cf5],ch
  40e5f0:	or     eax,DWORD PTR [eax]
  40e5f2:	add    BYTE PTR [eax],al
  40e5f4:	pop    ebx
  40e5f5:	icebp  
  40e5f6:	jmp    0xeec7d8fe
  40e5fb:	(bad)  
  40e5fc:	cmp    al,0xd1
  40e5fe:	fild   DWORD PTR ds:0xce294e3c
  40e604:	jns    0x40e668
  40e606:	imul   esp,DWORD PTR [edi-0xc],0x697361d8
  40e60d:	shr    ah,0xd0
  40e610:	imul   esi,ecx,0xabc04f0
  40e616:	ret    0xbc4a
  40e619:	pop    esi
  40e61a:	js     0x40e66f
  40e61c:	std    
  40e61d:	outs   dx,BYTE PTR ds:[esi]
  40e61e:	ins    BYTE PTR es:[edi],dx
  40e61f:	inc    ebx
  40e620:	in     eax,0x8a
  40e622:	jae    0x40e627
  40e624:	repz push es
  40e626:	(bad)  
  40e628:	lock (bad) 
  40e62b:	pop    esp
  40e62c:	imul   eax,esp,0xfffffff8
  40e62f:	mov    DWORD PTR [edi],esi
  40e631:	jae    0x40e5f2
  40e633:	fdiv   st,st(0)
  40e635:	in     al,dx
  40e636:	(bad)  
  40e637:	jle    0x40e6b2
  40e639:	retf   
  40e63a:	test   DWORD PTR [edx],0x72db39f6
  40e640:	cld    
  40e641:	or     DWORD PTR [ebp-0x1f],edi
  40e644:	jle    0x40e611
  40e646:	sti    
  40e647:	adc    dl,cl
  40e649:	pop    esi
  40e64a:	jge    0x40e64d
  40e64c:	push   0xf02d8d04
  40e651:	(bad)  
  40e652:	imul   edx,ebp,0xe1467ba0
  40e658:	add    BYTE PTR [eax],al
  40e65a:	add    BYTE PTR [eax-0x1112eb93],ah
  40e660:	(bad)  
  40e661:	jmp    FWORD PTR [ecx+0x33]
  40e664:	add    al,BYTE PTR [ebp-0x12d9c57]
  40e66a:	sub    al,0xeb
  40e66c:	add    BYTE PTR [ebp+ecx*4+0x70],0x49
  40e671:	aaa    
  40e672:	ret    0x5e33
  40e675:	jnp    0x40e618
  40e677:	js     0x40e6be
  40e679:	mov    ah,BYTE PTR [edi+0x6eff08d7]
  40e67f:	les    ecx,FWORD PTR [ecx-0x7e262341]
  40e685:	dec    ebp
  40e686:	in     eax,0x79
  40e688:	inc    edi
  40e689:	push   0x29
  40e68b:	out    0x9,eax
  40e68d:	push   es
  40e68e:	ret    
  40e68f:	fadd   st,st(7)
  40e691:	push   esi
  40e692:	cdq    
  40e693:	addr16 mov esp,0x36e23e03
  40e699:	push   ss
  40e69a:	test   eax,0xddc389f0
  40e69f:	test   edx,eax
  40e6a1:	repz jb 0x40e69e
  40e6a4:	add    eax,0x895ca48b
  40e6a9:	inc    esp
  40e6aa:	adc    DWORD PTR [edi],esp
  40e6ac:	xor    al,BYTE PTR [edi-0x1b]
  40e6af:	in     al,0x7c
  40e6b1:	mov    al,BYTE PTR [eax]
  40e6b3:	pushf  
  40e6b4:	ins    DWORD PTR es:[edi],dx
  40e6b5:	imul   ecx,ecx,0xd014e1b2
  40e6bb:	mov    ebp,0x1aef4
  40e6c0:	add    BYTE PTR [eax],al
  40e6c2:	popa   
  40e6c3:	push   esp
  40e6c4:	pop    esp
  40e6c5:	leave  
  40e6c6:	mov    BYTE PTR [ebp-0x2],ch
  40e6c9:	mov    dl,bh
  40e6cb:	out    dx,al
  40e6cc:	add    eax,0x42
  40e6cf:	mov    ds:0xdae40068,al
  40e6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d5:	add    BYTE PTR [edx+0x1ac9eb09],cl
  40e6db:	jbe    0x40e6ff
  40e6dd:	add    al,0x9a
  40e6df:	cmp    edx,DWORD PTR [ebp-0x75]
  40e6e2:	inc    edx
  40e6e3:	sub    bh,0x74
  40e6e6:	and    cl,0xd3
  40e6e9:	in     al,dx
  40e6ea:	(bad)  
  40e6eb:	hlt    
  40e6ec:	xchg   DWORD PTR [edi+0x56],eax
  40e6ef:	add    ah,0xe8
  40e6f2:	dec    esp
  40e6f3:	out    dx,al
  40e6f4:	std    
  40e6f5:	inc    esi
  40e6f7:	leave  
  40e6f8:	jae    0x40e6fe
  40e6fa:	mov    cl,cl
  40e6fc:	jmp    0x284b82e
  40e701:	inc    ecx
  40e702:	icebp  
  40e703:	mov    ebx,0xc4fee836
  40e708:	std    
  40e709:	call   DWORD PTR [esi-0x6e138d37]
  40e70f:	inc    ebx
  40e710:	add    cl,BYTE PTR [ebx+0x38be60cb]
  40e716:	or     DWORD PTR [ebx+0x68],ebp
  40e719:	cmp    BYTE PTR [ebx+0x3c],bl
  40e71c:	dec    esi
  40e71d:	mov    DWORD PTR [ebp+ebp*2-0x3],ecx
  40e721:	adc    eax,0x3ffafa
  40e726:	add    BYTE PTR [eax],al
  40e728:	add    BYTE PTR [ecx-0x244ff4d3],cl
  40e72e:	push   ebp
  40e72f:	pop    esp
  40e730:	ret    0x59f3
  40e733:	add    dl,BYTE PTR [ebp+0x68]
  40e736:	push   0xffffff80
  40e738:	jmp    0x40e76d
  40e73a:	mov    WORD PTR [edi-0x64e9488c],es
  40e740:	add    dh,bl
  40e742:	pop    ebp
  40e743:	mov    DWORD PTR [ebx+ebp*8-0x79],ecx
  40e747:	add    ecx,DWORD PTR [ebx-0x17ba953]
  40e74d:	lods   al,BYTE PTR ds:[esi]
  40e74e:	dec    ebp
  40e74f:	aad    0xc8
  40e751:	mov    cl,0x5a
  40e753:	add    dl,BYTE PTR [esi+0x44]
  40e756:	jmp    0x56e371d6
  40e75b:	fucomp st(3)
  40e75d:	mov    WORD PTR [ebp-0x1710b976],gs
  40e763:	inc    eax
  40e764:	out    0x4c,eax
  40e766:	call   0x13ef:0x9e6ffe74
  40e76d:	fcom   DWORD PTR [ebx+0x820033b]
  40e773:	cmp    al,0x57
  40e775:	lds    edi,FWORD PTR [esi+ecx*1+0x30]
  40e779:	std    
  40e77a:	sbb    eax,0x5a378304
  40e77f:	mov    dl,0x0
  40e781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e782:	adc    eax,DWORD PTR [ecx+0x54]
  40e785:	push   0xa68ad2ea
  40e78a:	jne    0x40e773
  40e78c:	mov    edi,0xeb000000
  40e791:	pusha  
  40e792:	add    DWORD PTR [esi+0x70],esp
  40e795:	push   ebp
  40e796:	and    al,BYTE PTR [eax]
  40e798:	shl    BYTE PTR [ebx-0x64d22879],0x73
  40e79f:	inc    DWORD PTR [eax+0x7603e88b]
  40e7a5:	lods   eax,DWORD PTR ds:[esi]
  40e7a6:	push   ss
  40e7a7:	lea    esi,[eax-0xbb033c7]
  40e7ad:	push   es
  40e7ae:	cld    
  40e7af:	aaa    
  40e7b0:	add    eax,0xb080e8c7
  40e7b5:	cli    
  40e7b6:	imul   eax,DWORD PTR [eax+eiz*2+0x1c],0xffffffb7
  40e7bb:	mov    BYTE PTR [edi-0x1],bl
  40e7be:	adc    BYTE PTR [eax],bh
  40e7c0:	into   
  40e7c1:	imul   edi,ebp,0xffffff80
  40e7c4:	mov    esp,0x7c96e608
  40e7c9:	sub    BYTE PTR [eax],0xef
  40e7cc:	add    BYTE PTR [edi],ch
  40e7ce:	sub    al,0x8
  40e7d0:	sbb    BYTE PTR es:[ebx+0x0],dl
  40e7d4:	jbe    0x40e799
  40e7d6:	hlt    
  40e7d7:	shr    DWORD PTR [edi-0x39],cl
  40e7da:	in     al,dx
  40e7db:	rcl    DWORD PTR [ebp+0x330df911],cl
  40e7e1:	pop    es
  40e7e2:	push   0x3f
  40e7e4:	clc    
  40e7e5:	inc    esp
  40e7e6:	sub    esi,DWORD PTR [ebp-0xd]
  40e7e9:	sti    
  40e7ea:	jne    0x40e7a8
  40e7ec:	aam    0xe4
  40e7ee:	ffreep st(0)
  40e7f0:	or     al,0xf3
  40e7f2:	out    dx,al
  40e7f3:	add    DWORD PTR [eax],0x0
  40e7f6:	add    bh,ah
  40e7f8:	cli    
  40e7f9:	call   0x6025d8ec
  40e7fe:	shl    ah,0x44
  40e801:	sub    esi,DWORD PTR [ebp-0xd]
  40e804:	in     al,0x69
  40e806:	hlt    
  40e807:	add    BYTE PTR [edi],al
  40e809:	std    
  40e80a:	aad    0xca
  40e80c:	push   ss
  40e80d:	pop    esp
  40e80e:	in     al,dx
  40e80f:	adc    BYTE PTR [edx-0x57],bh
  40e812:	pop    ds
  40e813:	vminss xmm1,xmm5,DWORD PTR [esi]
  40e817:	out    0x14,eax
  40e819:	test   eax,0xdc427003
  40e81e:	jle    0x40e874
  40e820:	repnz adc eax,0xf0f179ce
  40e826:	imul   esp,ebp,0x69
  40e829:	push   DWORD PTR ds:0xebf78887
  40e82f:	out    dx,eax
  40e830:	mov    DWORD PTR [edi+0x33f3306d],edi
  40e836:	loope  0x40e7dd
  40e838:	(bad)  
  40e839:	je     0x40e835
  40e83b:	retf   0x8cfa
  40e83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e83f:	hlt    
  40e840:	(bad)  
  40e841:	mov    WORD PTR [edx-0x2b012914],gs
  40e847:	add    BYTE PTR [ecx],dl
  40e849:	inc    eax
  40e84a:	jmp    0x274c2ec2
  40e84f:	jne    0x40e8ba
  40e851:	add    dh,dh
  40e853:	imul   eax,ecx,0xc5d64733
  40e859:	xor    ebx,DWORD PTR [ebp+0x0]
  40e85c:	add    BYTE PTR [eax],al
  40e85e:	icebp  
  40e85f:	xchg   BYTE PTR [ebp+ebx*8-0x10],bh
  40e863:	repz add ecx,DWORD PTR [edi+0xe]
  40e867:	lds    esi,FWORD PTR [ebx]
  40e869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e86a:	mov    edx,0xaa630069
  40e86f:	imul   ebx,DWORD PTR [ebp+0x12],0xe90747b6
  40e876:	dec    ebp
  40e877:	stos   BYTE PTR es:[edi],al
  40e878:	aaa    
  40e879:	aaa    
  40e87a:	in     al,0x76
  40e87c:	mov    ah,bh
  40e87e:	jae    0x40e896
  40e880:	add    DWORD PTR [edx+0x29],esp
  40e883:	push   es
  40e884:	imul   ebp,DWORD PTR [ecx-0x3d3ef9e1],0xffffff9f
  40e88b:	test   DWORD PTR [edx],0x52327d64
  40e891:	sbb    DWORD PTR ds:0xcc66fe3a,0x7b293207
  40e89b:	stos   BYTE PTR es:[edi],al
  40e89c:	jae    0x40e885
  40e89e:	mov    eax,ds:0x316203bb
  40e8a3:	push   es
  40e8a4:	imul   eax,DWORD PTR [eax],0xffffffc3
  40e8a7:	sbb    ch,al
  40e8a9:	cmp    esp,edx
  40e8ab:	cmc    
  40e8ac:	std    
  40e8ad:	pop    esi
  40e8ae:	leave  
  40e8af:	dec    edi
  40e8b0:	mov    esp,ebp
  40e8b2:	xchg   ecx,eax
  40e8b3:	inc    edi
  40e8b4:	push   es
  40e8b5:	add    DWORD PTR [esi],0xb
  40e8b8:	push   ebx
  40e8b9:	push   edi
  40e8ba:	push   edi
  40e8bb:	push   eax
  40e8bc:	(bad)  
  40e8bd:	call   0x40ebfa
  40e8c2:	add    BYTE PTR [eax],al
  40e8c4:	add    BYTE PTR [ecx-0x21a1c848],bh
  40e8ca:	ja     0x40e8fd
  40e8cc:	xor    eax,ebp
  40e8ce:	call   0x6dd873d7
  40e8d3:	mov    eax,DWORD PTR [ebp+ecx*8+0x6d]
  40e8d7:	mov    edx,DWORD PTR [ebp-0x3a]
  40e8da:	int    0x96
  40e8dc:	add    BYTE PTR [edx+0x17146a05],bl
  40e8e2:	aas    
  40e8e3:	jmp    0xb550:0xd63f3750
  40e8ea:	push   cs
  40e8eb:	cmp    al,0x16
  40e8ed:	fiadd  DWORD PTR [edx]
  40e8ef:	add    esp,0xffffff96
  40e8f2:	jle    0x40e8b2
  40e8f4:	js     0x40e88e
  40e8f6:	inc    eax
  40e8f7:	add    edi,0x45e1852
  40e8fd:	push   es
  40e8fe:	mov    BYTE PTR [ecx+0x595485c8],0xc9
  40e905:	mov    BYTE PTR [ecx],al
  40e907:	add    BYTE PTR [ebx+0x53f4c899],cl
  40e90d:	mov    DWORD PTR [eax-0x11bc6ab],edi
  40e913:	jge    0x40e93a
  40e915:	jns    0x40e90b
  40e917:	mov    DWORD PTR [esi],eax
  40e919:	inc    eax
  40e91a:	adc    DWORD PTR [ebp+0x4e6d0d44],ecx
  40e920:	push   ebx
  40e922:	dec    ebx
  40e923:	es adc al,0x14
  40e926:	jb     0x40e956
  40e928:	push   ss
  40e929:	add    BYTE PTR [eax],al
  40e92b:	add    BYTE PTR [ebx-0x83c7aa1],dh
  40e931:	loop   0x40e975
  40e933:	jae    0x40e917
  40e935:	pushf  
  40e936:	test   esi,eax
  40e938:	mov    ebx,0x6f03d074
  40e93d:	ret    
  40e93e:	test   edi,eax
  40e940:	in     al,0xa9
  40e942:	int    0xc1
  40e944:	neg    DWORD PTR [ebp+0x7d]
  40e947:	ret    0x11c8
  40e94a:	ror    BYTE PTR ss:[edx],cl
  40e94d:	mov    es,WORD PTR [esi]
  40e94f:	je     0x40e95d
  40e951:	sub    BYTE PTR [ebx],0x50
  40e954:	adc    ebp,ebx
  40e956:	or     BYTE PTR [esi-0x6],ah
  40e959:	lea    esi,[esi]
  40e95b:	je     0x40e965
  40e95d:	or     al,0x3b
  40e95f:	push   ebp
  40e960:	jae    0x40e9c9
  40e962:	pop    ss
  40e963:	jae    0x40e952
  40e965:	pusha  
  40e966:	mov    eax,0x2b9f95f0
  40e96b:	push   esp
  40e96c:	cmc    
  40e96d:	jne    0x40e965
  40e96f:	out    dx,eax
  40e970:	jae    0x40e9b9
  40e972:	pop    ss
  40e973:	pcmpgtd mm3,QWORD PTR [esi-0x623e3d2f]
  40e97a:	inc    esp
  40e97b:	push   ebp
  40e97c:	(bad)  
  40e97d:	hlt    
  40e97e:	jne    0x40e9e9
  40e980:	call   DWORD PTR [edx+edi*1+0x2a]
  40e984:	arpl   WORD PTR [ecx],si
  40e986:	jle    0x40e99b
  40e988:	repnz dec ebx
  40e98a:	adc    cl,BYTE PTR [eax+0x4ec257e7]
  40e990:	add    BYTE PTR [eax],al
  40e992:	add    BYTE PTR [esi+0x305dd0f1],bh
  40e998:	or     edi,DWORD PTR [ebp-0x15]
  40e99b:	push   0x1f830023
  40e9a0:	pop    es
  40e9a1:	adc    DWORD PTR [edi-0x41],edi
  40e9a4:	dec    esi
  40e9a5:	push   eax
  40e9a6:	push   edi
  40e9a7:	sbb    eax,0xaf7d5568
  40e9ac:	cli    
  40e9ad:	popa   
  40e9ae:	mov    edi,0x5f9b79f4
  40e9b3:	or     al,0x40
  40e9b5:	cmp    eax,0xdcdcfd71
  40e9ba:	jle    0x40e96b
  40e9bc:	pop    edx
  40e9bd:	cwde   
  40e9be:	jle    0x40e9f7
  40e9c0:	dec    edi
  40e9c1:	mov    eax,0xf72aff70
  40e9c6:	ret    
  40e9c7:	fadd   QWORD PTR [esp+ebp*1-0x1fbb5600]
  40e9ce:	add    esp,DWORD PTR [esi]
  40e9d0:	jl     0x40e9e6
  40e9d2:	sbb    eax,0x6a
  40e9d5:	out    0x3,eax
  40e9d7:	repz rcr BYTE PTR [ebp-0x10fd8082],1
  40e9de:	jo     0x40e98d
  40e9e0:	pop    esi
  40e9e1:	adc    BYTE PTR [edx+esi*8],0x6
  40e9e5:	sbb    al,BYTE PTR [esp+ebx*8+0x79]
  40e9e9:	pop    ebx
  40e9ea:	js     0x40e978
  40e9ec:	jnp    0x40e9b0
  40e9ee:	jo     0x40e97d
  40e9f0:	jns    0x40ea5d
  40e9f2:	sti    
  40e9f3:	xchg   BYTE PTR [edi-0x43],ah
  40e9f6:	rol    DWORD PTR [eax],cl
  40e9f8:	add    BYTE PTR [eax],al
  40e9fa:	jge    0x40ea0d
  40e9fc:	imul   edx,DWORD PTR ds:0x43ea0733,0xfb6b79bc
  40ea06:	addr16 popfw 
  40ea09:	shr    DWORD PTR [ecx+0x40],cl
  40ea0c:	sbb    BYTE PTR [ebp+0x4a],0x67
  40ea10:	lea    esi,[eax+0x4299af8]
  40ea16:	outs   dx,DWORD PTR ds:[esi]
  40ea17:	inc    esi
  40ea18:	hlt    
  40ea19:	das    
  40ea1a:	leave  
  40ea1b:	push   ss
  40ea1c:	add    BYTE PTR [ebp+ebp*2-0x7d],ah
  40ea20:	std    
  40ea21:	outs   dx,BYTE PTR ds:[esi]
  40ea22:	mov    ds:0xc82f8ab7,eax
  40ea27:	push   esi
  40ea28:	jmp    0xbfc48d8b
  40ea2d:	(bad)  
  40ea2f:	jnp    0x40e9f6
  40ea31:	inc    ecx
  40ea32:	sub    BYTE PTR [esi+edi*8+0x46],bl
  40ea36:	ins    BYTE PTR es:[edi],dx
  40ea37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea38:	jae    0x40ea16
  40ea3a:	jg     0x40ea7d
  40ea3c:	out    0x5b,eax
  40ea3e:	xchg   esi,eax
  40ea3f:	push   0x75270fe
  40ea44:	add    cl,ch
  40ea46:	mov    eax,DWORD PTR gs:[ebx]
  40ea49:	pop    ds
  40ea4a:	arpl   WORD PTR [ebp-0x3b],sp
  40ea4d:	jmp    0x9489b142
  40ea52:	pop    ecx
  40ea53:	mov    dh,0x0
  40ea55:	adc    dl,BYTE PTR [esi]
  40ea57:	icebp  
  40ea58:	adc    edx,DWORD PTR [ebx-0x23014210]
  40ea5e:	add    BYTE PTR [eax],al
  40ea60:	add    ah,bh
  40ea62:	cld    
  40ea63:	aas    
  40ea64:	jmp    0x6cce0137
  40ea69:	jnp    0x40eacf
  40ea6b:	(bad)  
  40ea6c:	faddp  st(7),st
  40ea6e:	mov    ebp,0xfce0fcfe
  40ea73:	aas    
  40ea74:	jmp    0x745834ea
  40ea79:	mov    edx,0x1917e75a
  40ea7e:	gs (bad) 
  40ea80:	jo     0x40ea97
  40ea82:	pop    es
  40ea83:	add    cl,ch
  40ea85:	jae    0x40ea12
  40ea87:	add    esp,DWORD PTR [edi-0x163a9b2c]
  40ea8d:	lock (bad) 
  40ea8f:	dec    eax
  40ea90:	sbb    al,0xc6
  40ea92:	pop    ss
  40ea93:	shr    BYTE PTR [esi],0x3d
  40ea96:	dec    edi
  40ea97:	ret    0xda00
  40ea9a:	pop    ss
  40ea9b:	rol    ch,0x9
  40ea9e:	or     eax,DWORD PTR [eax]
  40eaa0:	jne    0x40eb19
  40eaa2:	cmp    al,0xbc
  40eaa4:	fcom   DWORD PTR [edi+0x4a]
  40eaa7:	(bad)  
  40eaa8:	push   ebp
  40eaa9:	(bad)  
  40eaaa:	(bad)  
  40eaab:	jmp    0x40eabf
  40eaad:	dec    edx
  40eaae:	or     al,BYTE PTR [eax+0x41cfca3d]
  40eab4:	add    BYTE PTR [edx],bl
  40eab6:	pop    edi
  40eab7:	adc    eax,0xfdf510e8
  40eabc:	call   DWORD PTR [esi-0x76f18d36]
  40eac2:	das    
  40eac3:	(bad)  
  40eac4:	lds    eax,FWORD PTR [eax]
  40eac6:	add    BYTE PTR [eax],al
  40eac8:	cdq    
  40eac9:	or     DWORD PTR [eax],eax
  40eacb:	(bad)  
  40eacc:	xlat   BYTE PTR ds:[ebx]
  40eacd:	leave  
  40eace:	ret    
  40eacf:	inc    ebx
  40ead0:	retf   0x560a
  40ead3:	call   edi
  40ead5:	fst    DWORD PTR [eax]
  40ead7:	inc    eax
  40ead8:	ficom  DWORD PTR [ebx-0x4a]
  40eadb:	or     al,0x1e
  40eadd:	dec    edx
  40eade:	inc    dl
  40eae0:	pusha  
  40eae1:	std    
  40eae2:	out    0xb5,eax
  40eae4:	mov    ebp,0x9d50fdf4
  40eae9:	pop    ebp
  40eaea:	and    cl,BYTE PTR [ecx*4-0x35e9c402]
  40eaf1:	or     al,BYTE PTR [ebx-0x2923713c]
  40eaf7:	sbb    ebx,DWORD PTR [edx+0x49]
  40eafa:	rol    BYTE PTR [edx+ebx*4],0x38
  40eafe:	mov    DWORD PTR ds:0x3ffb7a,ebx
  40eb04:	jns    0x40eacf
  40eb06:	push   ebx
  40eb07:	ror    WORD PTR [ebx+0x20],cl
  40eb0b:	data16 jecxz 0x40eb59
  40eb0e:	xor    al,0x6a
  40eb10:	data16 xchg BYTE PTR [ebp+0x1],al
  40eb14:	repz pop ds
  40eb16:	add    DWORD PTR [ebp-0x5],0x7a4f5f40
  40eb1d:	cmp    eax,0xe4f76d7b
  40eb22:	push   ecx
  40eb23:	sub    BYTE PTR [edi],0x6b
  40eb26:	fadd   DWORD PTR [ebx]
  40eb28:	xchg   ebp,eax
  40eb29:	xchg   esi,eax
  40eb2a:	fstp   QWORD PTR [eax]
  40eb2c:	add    BYTE PTR [eax],al
  40eb2e:	add    BYTE PTR [edi+0x6467f5b],bl
  40eb34:	mov    al,ds:0x9ff7457f
  40eb39:	ins    DWORD PTR es:[edi],dx
  40eb3a:	rcr    BYTE PTR [eax],cl
  40eb3c:	push   0x82e7457f
  40eb41:	sar    dh,cl
  40eb43:	out    0x5b,al
  40eb45:	adc    al,0x40
  40eb47:	repz push ebp
  40eb49:	jns    0x40eb91
  40eb4b:	or     dh,cl
  40eb4d:	inc    esi
  40eb4e:	or     ecx,DWORD PTR [ebp-0x29]
  40eb51:	les    ebx,FWORD PTR [edi]
  40eb53:	in     eax,0x6d
  40eb55:	add    BYTE PTR [eax+edi*8-0x6d],dh
  40eb59:	sub    ebp,DWORD PTR [edi+0x18]
  40eb5c:	jp     0x40eb75
  40eb5e:	push   0xffffffe3
  40eb60:	fcmovb st,st(5)
  40eb62:	sbb    ah,BYTE PTR [ebx]
  40eb64:	repz les esp,FWORD PTR [ebx]
  40eb67:	and    ebx,DWORD PTR [ebp+0x50]
  40eb6a:	gs js  0x40eb1a
  40eb6d:	sbb    DWORD PTR [ebx+0x11575aaf],eax
  40eb73:	or     DWORD PTR [esi+0x7d],ebx
  40eb76:	inc    ebp
  40eb77:	iret   
  40eb78:	and    dl,ah
  40eb7a:	(bad)  
  40eb7b:	out    0xf9,al
  40eb7d:	adc    eax,0x47f0f340
  40eb82:	or     eax,eax
  40eb84:	lods   eax,DWORD PTR ds:[esi]
  40eb85:	into   
  40eb86:	gs push 0x34
  40eb89:	cmp    BYTE PTR [ebx+0x30],bl
  40eb8c:	add    edi,edx
  40eb8e:	mov    dl,BYTE PTR [esi]
  40eb90:	pop    es
  40eb91:	fst    DWORD PTR ds:0xb3000000
  40eb97:	push   es
  40eb98:	adc    ebx,DWORD PTR [eax]
  40eb9a:	data16 int3 
  40eb9c:	loopne 0x40eb71
  40eb9e:	jg     0x40eb6d
  40eba0:	out    0xd3,eax
  40eba2:	cs or  eax,0x90276ce9
  40eba8:	(bad)  [edi]
  40ebaa:	ffree  st(6)
  40ebac:	call   0x7541c31
  40ebb1:	and    DWORD PTR [ebp-0xf2616da],0xad7eecda
  40ebbb:	add    bh,BYTE PTR [ecx-0x47064982]
  40ebc1:	ins    BYTE PTR es:[edi],dx
  40ebc2:	pop    ds
  40ebc3:	jo     0x40ebb5
  40ebc5:	jle    0x40eb7d
  40ebc7:	stc    
  40ebc8:	rol    BYTE PTR [ebx],cl
  40ebca:	mov    ds:0x79e61963,eax
  40ebcf:	retf   
  40ebd0:	or     BYTE PTR [ecx+0x7a8f12b0],al
  40ebd6:	inc    BYTE PTR ss:[esi-0x16e4aa80]
  40ebdd:	frndint 
  40ebdf:	(bad)  
  40ebe1:	jle    0x40ec10
  40ebe3:	sub    ebx,DWORD PTR [ecx-0x66ffc982]
  40ebe9:	ins    BYTE PTR es:[edi],dx
  40ebea:	lahf   
  40ebeb:	in     al,dx
  40ebec:	popa   
  40ebed:	(bad)
  40ebf0:	and    al,0x0
  40ebf2:	jae    0x40ec08
  40ebf4:	jmp    0x40ec4e
  40ebf6:	out    dx,eax
  40ebf7:	xchg   ecx,eax
  40ebf8:	or     DWORD PTR es:[eax],eax
  40ebfb:	add    BYTE PTR [eax],al
  40ebfd:	or     DWORD PTR [edi],eax
  40ebff:	cmp    DWORD PTR [ebp-0x5f],ebp
  40ec02:	xchg   DWORD PTR [edi+edi*8-0x19dcb93f],esp
  40ec09:	imul   ecx,esp,0x11
  40ec0c:	leave  
  40ec0d:	mov    cl,0xb7
  40ec0f:	call   FWORD PTR [esi]
  40ec11:	dec    ecx
  40ec12:	sbb    ebp,DWORD PTR [edx-0x17]
  40ec15:	aas    
  40ec16:	nop
  40ec17:	out    dx,eax
  40ec18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec19:	add    eax,0xef29161b
  40ec1e:	pop    DWORD PTR [ebp-0x7]
  40ec21:	retf   
  40ec22:	add    dh,BYTE PTR [eax]
  40ec24:	div    DWORD PTR [eax]
  40ec26:	arpl   bp,si
  40ec28:	mov    eax,ds:0x2f8c46eb
  40ec2d:	frstor [edi]
  40ec2f:	shr    DWORD PTR [edx-0x50],0xfb
  40ec33:	imul   edx,ebp,0xf1469240
  40ec39:	inc    eax
  40ec3a:	shr    BYTE PTR fs:[esi+ebp*1-0x35],cl
  40ec3f:	push   cs
  40ec40:	sahf   
  40ec41:	rol    BYTE PTR [edi+0x417ff1c3],0x1a
  40ec48:	aas    
  40ec49:	rcl    DWORD PTR [esi+0xe],cl
  40ec4c:	jbe    0x40ec3c
  40ec4e:	into   
  40ec4f:	inc    edi
  40ec50:	mov    ebp,0xd4e78609
  40ec55:	(bad)  
  40ec57:	imul   edi,ecx,0xb907cc5d
  40ec5d:	push   ebp
  40ec5e:	leave  
  40ec5f:	and    edi,DWORD PTR [ecx+0x5f000000]
  40ec65:	xor    eax,0x8ae6265
  40ec6a:	(bad)  
  40ec6c:	jle    0x40ec73
  40ec6e:	data16 sub BYTE PTR [eax+0xa],dl
  40ec72:	sub    DWORD PTR ds:0x280aecac,0xffffff8e
  40ec79:	pop    DWORD PTR [esi+0x1d]
  40ec7c:	cmp    al,0x28
  40ec7e:	push   0xffffffe5
  40ec80:	sbb    ecx,esp
  40ec82:	add    edi,DWORD PTR [ecx]
  40ec84:	or     cl,cl
  40ec86:	sbb    edi,DWORD PTR [ecx]
  40ec88:	sbb    BYTE PTR ds:0x45010065,dh
  40ec8e:	add    BYTE PTR [edi],cl
  40ec90:	cld    
  40ec91:	pushf  
  40ec92:	add    DWORD PTR [esi-0x65],esp
  40ec95:	jmp    0x40ec9d
  40ec97:	or     DWORD PTR [esi-0x74f49ba1],0x65
  40ec9e:	xchg   DWORD PTR [edi+0x2a],eax
  40eca1:	push   eax
  40eca2:	pop    ecx
  40eca3:	ret    
  40eca4:	or     eax,0xfd51f6e2
  40eca9:	ret    0x1af
  40ecac:	dec    edx
  40ecad:	push   es
  40ecae:	test   eax,eax
  40ecb0:	repnz pop ebx
  40ecb2:	adc    edx,0x2f
  40ecb5:	pop    es
  40ecb6:	mov    edx,0xfe461f44
  40ecbb:	xor    cl,dl
  40ecbd:	cmp    DWORD PTR [ebx+0x37f83fc9],eax
  40ecc3:	add    ch,BYTE PTR [esi]
  40ecc5:	cmp    al,0x83
  40ecc7:	inc    DWORD PTR [eax]
  40ecc9:	add    BYTE PTR [eax],al
  40eccb:	pop    ds
  40eccc:	add    eax,0x50a57b8
  40ecd1:	sub    bl,0x5b
  40ecd4:	scas   al,BYTE PTR es:[edi]
  40ecd5:	js     0x40ecd7
  40ecd7:	fld    QWORD PTR [ebp-0x1383bf17]
  40ecdd:	jb     0x40ed03
  40ecdf:	(bad)  
  40ece1:	outs   dx,DWORD PTR ds:[esi]
  40ece2:	call   FWORD PTR [eax+0x1335537]
  40ece8:	out    dx,al
  40ece9:	adc    ecx,DWORD PTR [eax-0x44]
  40ecec:	inc    ebp
  40eced:	inc    BYTE PTR [edx+0x7ab8fb0e]
  40ecf3:	retf   0x8004
  40ecf6:	test   edx,ebx
  40ecf8:	jb     0x40ed07
  40ecfa:	cmp    ecx,esp
  40ecfc:	push   ebp
  40ecfd:	or     DWORD PTR [ebp-0x71],esi
  40ed00:	fstp   QWORD PTR [edx]
  40ed02:	shl    DWORD PTR ds:[edx-0x77],0xf0
  40ed07:	repz inc esp
  40ed09:	inc    DWORD PTR [edi-0x2780ee19]
  40ed0f:	lock dec ecx
  40ed11:	jge    0x40ecd5
  40ed13:	adc    eax,0xf7784deb
  40ed18:	push   esp
  40ed19:	dec    ebx
  40ed1a:	je     0x40ed15
  40ed1c:	in     al,0xb6
  40ed1e:	and    ebp,edi
  40ed20:	repnz cmp esi,DWORD PTR [ebx-0xf]
  40ed24:	(bad)  
  40ed25:	sub    ebx,DWORD PTR [ebx-0x54]
  40ed28:	lods   eax,DWORD PTR ds:[esi]
  40ed29:	cli    
  40ed2a:	jmp    DWORD PTR [ecx+0xf77f18]
  40ed30:	add    BYTE PTR [eax],al
  40ed32:	mov    ds:0xf22c5c00,al
  40ed37:	outs   dx,DWORD PTR ds:[esi]
  40ed38:	add    dh,BYTE PTR [ebx]
  40ed3a:	dec    eax
  40ed3b:	xchg   esp,eax
  40ed3c:	inc    ebp
  40ed3d:	jnp    0x40ecd5
  40ed3f:	xchg   esp,eax
  40ed40:	push   ebp
  40ed41:	je     0x40ed39
  40ed43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed44:	mov    edx,0x356fb374
  40ed49:	ror    al,0x24
  40ed4c:	lock push ss
  40ed4e:	(bad)  
  40ed4f:	test   BYTE PTR ds:0x6f04ac74,0x74
  40ed56:	in     al,dx
  40ed57:	xchg   ecx,edx
  40ed59:	push   ebp
  40ed5b:	in     eax,dx
  40ed5c:	pop    ebp
  40ed5d:	dec    ebp
  40ed5e:	stos   DWORD PTR es:[edi],eax
  40ed5f:	xchg   esp,eax
  40ed60:	add    al,BYTE PTR [edi]
  40ed62:	jae    0x40ed59
  40ed64:	daa    
  40ed65:	push   esi
  40ed66:	aam    0x7a
  40ed68:	push   ds
  40ed69:	adc    al,0x7e
  40ed6b:	jg     0x40edd6
  40ed6d:	push   ecx
  40ed6e:	sbb    eax,0x37146999
  40ed73:	inc    eax
  40ed74:	ret    0x71ff
  40ed77:	sub    dl,BYTE PTR [ebx]
  40ed79:	mov    ecx,0x80016e29
  40ed7e:	outs   dx,BYTE PTR ds:[esi]
  40ed7f:	cs jmp 0x40ed8b
  40ed82:	fadd   DWORD PTR [esi]
  40ed84:	scas   eax,DWORD PTR es:[edi]
  40ed85:	icebp  
  40ed86:	out    dx,al
  40ed87:	(bad)  
  40ed89:	jl     0x40ed27
  40ed8b:	ins    BYTE PTR es:[edi],dx
  40ed8c:	loopne 0x40ee0a
  40ed8e:	stos   DWORD PTR es:[edi],eax
  40ed8f:	adc    al,0xa9
  40ed91:	loop   0x40edfe
  40ed93:	or     edi,DWORD PTR [esi]
  40ed95:	ja     0x40ed97
  40ed97:	add    BYTE PTR [eax],al
  40ed99:	mov    eax,0xce4571d7
  40ed9e:	mov    DWORD PTR [ecx-0x6fe40f15],edx
  40eda4:	out    dx,eax
  40eda5:	jmp    0xaf89:0xe720348b
  40edac:	lock repnz (bad) 
  40edaf:	iret   
  40edb0:	enter  0x44a9,0xe0
  40edb4:	add    esi,DWORD PTR [esi+0x4e]
  40edb7:	cld    
  40edb8:	xor    eax,0x697d607b
  40edbd:	lods   eax,DWORD PTR ds:[esi]
  40edbe:	mov    bh,0x61
  40edc0:	push   esp
  40edc1:	loope  0x40ee22
  40edc3:	push   0xecdaf32b
  40edc8:	ret    0xd9aa
  40edcb:	push   ebp
  40edcc:	jg     0x40edf0
  40edce:	(bad)  
  40edd0:	test   al,0x9d
  40edd2:	push   es
  40edd3:	out    0x83,al
  40edd5:	ja     0x40ee30
  40edd7:	mov    esp,0xc0606ff6
  40eddc:	add    DWORD PTR [eax],ebx
  40edde:	inc    ebp
  40eddf:	pop    edi
  40ede0:	add    bl,al
  40ede2:	add    ebp,DWORD PTR [edx+0x22]
  40ede5:	repz mov ebp,DWORD PTR ds:0x6109c9c9
  40edec:	ror    esp,1
  40edee:	or     BYTE PTR [ecx+0x7f],ch
  40edf1:	test   ch,bl
  40edf3:	in     eax,0x7e
  40edf5:	(bad)  
  40edf6:	fucompp 
  40edf8:	test   BYTE PTR [esi],cl
  40edfa:	pop    es
  40edfb:	sub    bh,BYTE PTR [edi+0x0]
  40edfe:	add    BYTE PTR [eax],al
  40ee00:	mov    ebx,0x58bcffda
  40ee05:	pusha  
  40ee06:	(bad)  
  40ee07:	out    dx,al
  40ee08:	mov    edi,DWORD PTR [eax+0x5fdfb98a]
  40ee0e:	gs and al,bl
  40ee11:	fiadd  DWORD PTR ds:0x4a06316a
  40ee17:	push   esp
  40ee18:	or     al,0x8b
  40ee1a:	sar    DWORD PTR [esp+esi*2],1
  40ee1d:	mov    al,ds:0x86f3e956
  40ee22:	test   BYTE PTR [edi-0x517aedac],bh
  40ee28:	dec    eax
  40ee29:	or     DWORD PTR [ebx],ebp
  40ee2b:	stos   DWORD PTR es:[edi],eax
  40ee2c:	(bad)  [ecx]
  40ee2e:	jmp    0x40ee1a
  40ee30:	ja     0x40ee5b
  40ee32:	add    BYTE PTR [edx-0x4d],ah
  40ee35:	shr    dl,0xe4
  40ee38:	mov    BYTE PTR [eax-0x758f1201],bh
  40ee3e:	mov    edi,0xf589f200
  40ee43:	std    
  40ee44:	out    dx,eax
  40ee45:	and    DWORD PTR ds:0xc014b7e9,0x22
  40ee4c:	xlat   BYTE PTR ds:[ebx]
  40ee4d:	ror    DWORD PTR ds:0xfe5fd968,cl
  40ee53:	push   esi
  40ee54:	sbb    edx,ebp
  40ee56:	add    eax,0x55f2391
  40ee5b:	imul   ebp,DWORD PTR [edi-0x1b4bfde2],0xa10145
  40ee65:	add    BYTE PTR [eax],al
  40ee67:	aad    0x1e
  40ee69:	add    dl,dh
  40ee6b:	sbb    dl,bl
  40ee6d:	add    DWORD PTR [eax-0xf],esi
  40ee70:	dec    ecx
  40ee71:	xor    ch,BYTE PTR [ecx]
  40ee73:	sbb    ebx,eax
  40ee75:	and    ebp,ebp
  40ee77:	aad    0x4
  40ee79:	cmp    DWORD PTR [ebp+0x750edc],esp
  40ee7f:	ror    BYTE PTR [ecx-0x105ddb86],0xfd
  40ee86:	call   FWORD PTR ds:0x85b80358
  40ee8c:	or     al,BYTE PTR [edi]
  40ee8e:	or     BYTE PTR [eax+0x5b],0xfe
  40ee92:	push   edx
  40ee93:	les    ecx,FWORD PTR [ebp+0x68]
  40ee96:	xor    dl,BYTE PTR [ecx]
  40ee98:	fnstenv [ecx]
  40ee9a:	rcr    cl,0xd1
  40ee9d:	pop    ebp
  40ee9e:	sub    edi,DWORD PTR [ebx]
  40eea0:	loopne 0x40ee37
  40eea2:	int3   
  40eea3:	lods   eax,DWORD PTR ds:[esi]
  40eea4:	out    0x7d,al
  40eea6:	test   DWORD PTR [eax+0x468a0c57],ecx
  40eeac:	push   esp
  40eead:	adc    dl,0xf6
  40eeb0:	pop    ebp
  40eeb1:	xchg   BYTE PTR [ecx],dl
  40eeb3:	sbb    ecx,DWORD PTR [edx+0x4d]
  40eeb6:	jne    0x40ef2a
  40eeb8:	mov    ch,bh
  40eeba:	jne    0x40ef11
  40eebc:	fwait
  40eebd:	dec    ecx
  40eebe:	mov    eax,0x800702f0
  40eec3:	push   esp
  40eec4:	add    al,0x0
  40eec6:	mov    ecx,esi
  40eec8:	adc    BYTE PTR es:[ebp+0x53000000],al
  40eecf:	push   edi
  40eed0:	add    BYTE PTR [ecx+0x5b5c45f3],cl
  40eed6:	fadd   DWORD PTR [esi]
  40eed8:	add    BYTE PTR [ebp-0x6f],dl
  40eedb:	mov    esi,0xe637834f
  40eee0:	(bad)  
  40eee1:	push   edx
  40eee2:	push   esp
  40eee3:	loope  0x40eed5
  40eee5:	xor    edx,DWORD PTR [ecx]
  40eee7:	mov    ah,dh
  40eee9:	je     0x40eee4
  40eeeb:	dec    ebp
  40eeec:	mov    DWORD PTR [ebp-0x42],edi
  40eeef:	add    cl,bh
  40eef1:	test   DWORD PTR [edx],ecx
  40eef3:	push   edi
  40eef4:	adc    cl,BYTE PTR [edi]
  40eef6:	and    eax,0xf3660ef7
  40eefb:	jmp    0x107b:0x85e87351
  40ef02:	jo     0x40ef32
  40ef04:	add    cl,BYTE PTR [eax+0x30]
  40ef07:	scas   al,BYTE PTR es:[edi]
  40ef08:	out    dx,eax
  40ef09:	out    0x44,eax
  40ef0b:	jmp    0x40ef7a
  40ef0d:	je     0x40eef7
  40ef0f:	lock pop esp
  40ef11:	add    DWORD PTR [eax],ebp
  40ef13:	lods   eax,DWORD PTR ds:[esi]
  40ef14:	mov    edi,0xfd7009fb
  40ef19:	jg     0x40eedb
  40ef1b:	scas   eax,DWORD PTR es:[edi]
  40ef1c:	fmul   QWORD PTR [eax+0x7bfe8f2]
  40ef22:	outs   dx,BYTE PTR ds:[esi]
  40ef23:	scas   eax,DWORD PTR es:[edi]
  40ef24:	out    dx,al
  40ef25:	add    DWORD PTR [edx+0x67],edi
  40ef28:	jns    0x40ef6e
  40ef2a:	addr16 cmc 
  40ef2c:	retf   0x31c8
  40ef2f:	add    dl,BYTE PTR [di+0x0]
  40ef33:	add    BYTE PTR [eax],al
  40ef35:	push   0x3a84d373
  40ef3a:	repnz push DWORD PTR [edx]
  40ef3d:	xor    esp,DWORD PTR [esi-0xd91aabf]
  40ef43:	addr16 out 0x31,eax
  40ef46:	test   DWORD PTR [ebp-0x2],esp
  40ef49:	int    0xe2
  40ef4b:	inc    edx
  40ef4c:	jae    0x40ef3c
  40ef4e:	lock cmp bh,dh
  40ef51:	sub    dh,BYTE PTR [eax+0x16174479]
  40ef57:	inc    edx
  40ef58:	push   esp
  40ef59:	js     0x40ef26
  40ef5b:	rol    DWORD PTR [edx+edi*1+0x3332fe3a],cl
  40ef62:	es inc edx
  40ef64:	push   ebp
  40ef65:	call   0x1c44:0xe766
  40ef6b:	data16 inc BYTE PTR [ebp-0x15]
  40ef6f:	inc    edx
  40ef70:	jae    0x40ef68
  40ef72:	lock cmp bh,dh
  40ef75:	stos   BYTE PTR es:[edi],al
  40ef76:	pop    es
  40ef77:	sub    bh,BYTE PTR [edx+0x37]
  40ef7a:	pop    ebx
  40ef7b:	das    
  40ef7c:	inc    edx
  40ef7d:	pop    ds
  40ef7e:	nop
  40ef7f:	add    al,0x66
  40ef81:	inc    edi
  40ef82:	(bad)  
  40ef84:	pop    ebx
  40ef85:	ret    
  40ef86:	pop    ebp
  40ef87:	add    eax,0x80477766
  40ef8c:	sub    eax,0x7b396e
  40ef91:	pop    ecx
  40ef92:	iret   
  40ef93:	jae    0x40ef58
  40ef95:	xchg   esp,eax
  40ef96:	sbb    DWORD PTR [ecx+0x2b],ebp
  40ef9c:	andps  xmm2,XMMWORD PTR ss:[eax]
  40efa0:	or     eax,0xd3efeb1e
  40efa5:	push   ebx
  40efa6:	scas   eax,DWORD PTR es:[edi]
  40efa7:	or     DWORD PTR [edx+0x7e21c788],ebp
  40efad:	xchg   BYTE PTR ds:0xc186ec04,dl
  40efb3:	adc    al,cl
  40efb5:	(bad)  
  40efb6:	adc    edi,esp
  40efb8:	addr16 ret 0xd3f0
  40efbc:	test   BYTE PTR [ebp-0x63],bl
  40efbf:	lds    ebp,FWORD PTR gs:[esi-0xf]
  40efc3:	fs cmp eax,0xf0422b5c
  40efc9:	push   es
  40efca:	sbb    al,0x79
  40efcc:	sbb    BYTE PTR [esi+0x5aaf7b16],dh
  40efd2:	popa   
  40efd3:	mov    edi,0x7361b3f4
  40efd8:	mov    esi,0x14fbab8d
  40efdd:	jnp    0x40f03d
  40efdf:	gs add eax,0xafec2882
  40efe5:	mov    DWORD PTR [ebx-0xf4d9899],ebx
  40efeb:	pop    ebx
  40efec:	push   esp
  40efed:	pop    ebp
  40efee:	cmp    eax,0xff466f65
  40eff3:	mov    al,0xd
  40eff5:	cmp    dh,0xb4
  40eff8:	in     al,dx
  40eff9:	sbb    eax,0x12c3257d
  40effe:	mov    ebp,DWORD PTR [eax+eax*1-0x1e380000]
  40f005:	cmp    al,dl
  40f007:	int3   
  40f008:	sub    dh,bh
  40f00a:	das    
  40f00b:	jmp    0x8589:0xd20f8254
  40f012:	xchg   esi,eax
  40f013:	lock add eax,DWORD PTR [eax+0x745bf502]
  40f01a:	loope  0x40f039
  40f01c:	ret    
  40f01d:	pop    es
  40f01e:	cmp    DWORD PTR [edx],ecx
  40f020:	ret    
  40f021:	sti    
  40f022:	jb     0x40f05b
  40f024:	xchg   ecx,eax
  40f025:	int    0xc1
  40f027:	dec    edx
  40f028:	pop    ecx
  40f029:	dec    dh
  40f02b:	sbb    ecx,DWORD PTR [edi]
  40f02d:	test   esi,eax
  40f02f:	pop    esp
  40f030:	add    dh,BYTE PTR [ebx]
  40f032:	mov    al,0x46
  40f034:	mov    cs,WORD PTR ds:0x3461817
  40f03a:	jmp    0xf564a81a
  40f03f:	(bad)
  40f042:	stc    
  40f043:	and    BYTE PTR [ebx+esi*2-0x33],bl
  40f047:	inc    esp
  40f048:	nop
  40f049:	inc    ebx
  40f04a:	lds    edi,FWORD PTR [ebx+eiz*2]
  40f04d:	test   DWORD PTR [ebp+0x72c25c97],0x640c2734
  40f057:	pop    esp
  40f058:	daa    
  40f059:	adc    BYTE PTR [ecx],bl
  40f05b:	mov    ss,edi
  40f05d:	and    esi,ebp
  40f05f:	mov    eax,edi
  40f061:	and    ebp,ebp
  40f063:	test   al,0xb9
  40f065:	sti    
  40f066:	push   esi
  40f067:	add    BYTE PTR [eax],al
  40f069:	add    BYTE PTR [edi-0x639dabb8],dl
  40f06f:	mov    dh,0x50
  40f071:	add    BYTE PTR [ecx+0x61],bl
  40f074:	push   es
  40f075:	add    BYTE PTR [edi-0x35a849a5],bl
  40f07b:	pop    ebx
  40f07c:	jle    0x40f069
  40f07e:	sahf   
  40f07f:	fisttp WORD PTR [ebx+0x10]
  40f082:	mov    DWORD PTR [esi-0x1d1a014a],edi
  40f088:	mov    eax,ebx
  40f08a:	dec    ecx
  40f08b:	out    dx,eax
  40f08c:	std    
  40f08d:	jne    0x40f05c
  40f08f:	scas   al,BYTE PTR es:[edi]
  40f090:	push   ebp
  40f091:	add    BYTE PTR [ebp+0x195ce986],bl
  40f097:	cmp    esi,esi
  40f099:	add    ah,cl
  40f09b:	cwde   
  40f09c:	std    
  40f09d:	add    BYTE PTR [ebp+eax*4-0x3f],bh
  40f0a1:	add    BYTE PTR [ebx-0x5a47fffa],bl
  40f0a7:	out    0xfd,al
  40f0a9:	jg     0x40f08c
  40f0ab:	sbb    dh,BYTE PTR [ecx+0x6]
  40f0ae:	adc    DWORD PTR [ebx],ebx
  40f0b0:	lds    eax,FWORD PTR [ebp+0x35]
  40f0b3:	add    al,0x8d
  40f0b5:	add    al,0x51
  40f0b7:	xchg   esi,eax
  40f0b8:	mov    esi,DWORD PTR [ebp-0x5e]
  40f0bb:	jmp    0x40f072
  40f0bd:	mov    BYTE PTR [ebp-0x113f7d1a],0xf1
  40f0c4:	(bad)  
  40f0c5:	jne    0x40f105
  40f0c7:	mov    DWORD PTR [ebx+0x10],edx
  40f0ca:	gs inc eax
  40f0cc:	or     cl,BYTE PTR [ebx+0xf000000]
  40f0d2:	mov    ebx,0x3d82cb89
  40f0d7:	cli    
  40f0d8:	jmp    DWORD PTR [ebp-0x5b7e1177]
  40f0de:	cmp    dh,bh
  40f0e0:	push   es
  40f0e1:	mov    bh,BYTE PTR [edi]
  40f0e3:	sbb    eax,DWORD PTR [eax+0x73fee517]
  40f0e9:	push   edx
  40f0ea:	out    0x73,al
  40f0ec:	clc    
  40f0ed:	repz (bad) 
  40f0ef:	or     bh,al
  40f0f1:	hlt    
  40f0f2:	enter  0xc58e,0x4d
  40f0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0f7:	dec    ebx
  40f0f8:	rol    DWORD PTR [ebx],0x70
  40f0fb:	mov    al,ds:0x8268f379
  40f100:	jmp    0xd4d6:0x7459e2ca
  40f107:	enter  0x78f7,0xaa
  40f10b:	or     cl,BYTE PTR [ecx-0x15bdc30e]
  40f111:	rcl    BYTE PTR [edx+0x7f42eb8d],1
  40f117:	test   DWORD PTR [ebx+edi*8+0x6f],edi
  40f11b:	xlat   BYTE PTR ds:[ebx]
  40f11c:	push   es
  40f11d:	pop    ebx
  40f11e:	js     0x40f122
  40f120:	pop    es
  40f121:	jae    0x40f127
  40f123:	aad    0x8a
  40f125:	ds pusha 
  40f127:	mov    ch,0xe7
  40f129:	enter  0x6139,0xfe
  40f12d:	push   0x74fa8597
  40f132:	mov    dl,0xa
  40f134:	mov    eax,0xc4000000
  40f139:	outs   dx,DWORD PTR ds:[esi]
  40f13a:	or     DWORD PTR [eax+0x64872658],eax
  40f140:	pop    ebx
  40f141:	outs   dx,DWORD PTR ds:[esi]
  40f142:	dec    eax
  40f143:	inc    esp
  40f144:	push   esp
  40f145:	outs   dx,DWORD PTR ds:[esi]
  40f146:	mov    eax,0x36f3080
  40f14b:	add    bl,dh
  40f14d:	out    0x61,eax
  40f14f:	(bad)  
  40f150:	cmp    al,0xf0
  40f152:	push   ds
  40f153:	fadd   st,st(1)
  40f155:	popa   
  40f156:	(bad)  
  40f157:	xlat   BYTE PTR ds:[ebx]
  40f158:	xor    eax,0xc000632a
  40f15d:	jmp    0xfe48:0x360bf7d7
  40f164:	adc    al,0xe3
  40f166:	inc    edx
  40f167:	jae    0x40f129
  40f169:	push   es
  40f16a:	data16 fsub st,st(0)
  40f16d:	lea    esi,[ebx-0x1b2d020d]
  40f173:	mov    gs,WORD PTR [edi-0x2bb19ea2]
  40f179:	mov    dl,0x41
  40f17b:	(bad)  
  40f17c:	in     eax,0x8c
  40f17e:	cmp    BYTE PTR [esi+ebx*8+0x730ae8dd],al
  40f185:	ror    bl,cl
  40f187:	or     DWORD PTR [edi+0x58],0xffffffe8
  40f18b:	xlat   BYTE PTR ds:[ebx]
  40f18c:	mov    DWORD PTR [eax-0x6d],ebx
  40f18f:	pop    ebx
  40f190:	aam    0xe0
  40f192:	bound  esi,QWORD PTR cs:[ebp+0x49c1268c]
  40f199:	dec    esi
  40f19a:	sub    dh,bl
  40f19c:	add    BYTE PTR [eax],al
  40f19e:	add    BYTE PTR [edx+ebx*4-0x790bfc7e],ah
  40f1a5:	add    DWORD PTR [edi+ebp*2+0x51],ebp
  40f1a9:	jae    0x40f213
  40f1ab:	jns    0x40f16f
  40f1ad:	loopne 0x40f13c
  40f1af:	aaa    
  40f1b0:	pshufw mm0,QWORD PTR [ebx],0xc0
  40f1b4:	inc    esi
  40f1b5:	shl    DWORD PTR [ebp+0x67],0xc3
  40f1b9:	add    al,0xf4
  40f1bb:	mov    esp,0x3283c57
  40f1c0:	pop    eax
  40f1c1:	xor    al,0x28
  40f1c3:	add    ebx,DWORD PTR [eax+0x3c]
  40f1c6:	sub    BYTE PTR [ebx],al
  40f1c8:	outs   dx,DWORD PTR ds:[esi]
  40f1c9:	sbb    al,0x61
  40f1cb:	dec    ebp
  40f1cc:	pop    eax
  40f1cd:	test   eax,0x40eef8ee
  40f1d2:	mov    ah,0xb1
  40f1d4:	push   es
  40f1d5:	cmp    DWORD PTR [ecx],0x84e904bf
  40f1db:	xchg   edi,eax
  40f1dc:	pop    edx
  40f1dd:	call   0x7e4b9142
  40f1e2:	xlat   BYTE PTR ds:[ebx]
  40f1e3:	hlt    
  40f1e4:	push   edi
  40f1e5:	(bad)  
  40f1e6:	fild   DWORD PTR [eax+0x79e93ff6]
  40f1ec:	ret    
  40f1ed:	jecxz  0x40f241
  40f1ef:	loope  0x40f204
  40f1f1:	shr    BYTE PTR [ecx+0x41648cb7],0xaa
  40f1f8:	ret    0x4fe3
  40f1fb:	push   edx
  40f1fc:	pop    ecx
  40f1fd:	(bad)  
  40f1fe:	push   0xffffffb4
  40f200:	pop    ebx
  40f201:	(bad)  
  40f202:	jb     0x40f204
  40f204:	add    BYTE PTR [eax],al
  40f206:	mov    ah,0x63
  40f208:	out    0x4a,eax
  40f20a:	mov    esp,0xff2b0005
  40f20f:	push   es
  40f210:	push   0xfffffff5
  40f212:	fdivr  DWORD PTR [edi+0x6ef0aa4f]
  40f218:	cwde   
  40f219:	pushf  
  40f21a:	out    dx,al
  40f21b:	push   es
  40f21c:	add    DWORD PTR [esp+ecx*2-0xb8302a8],0x57
  40f224:	je     0x40f217
  40f226:	adc    esi,ebx
  40f228:	jnp    0x40f205
  40f22a:	mov    al,0x57
  40f22c:	xchg   DWORD PTR [esp+edx*1+0x13e54c85],esp
  40f233:	ins    DWORD PTR es:[edi],dx
  40f234:	or     al,0x1a
  40f236:	aaa    
  40f237:	sbb    bl,al
  40f239:	bound  ecx,QWORD PTR [ebp-0x2c5e7da1]
  40f23f:	mov    es,WORD PTR [ebp+eax*8-0x28]
  40f243:	scas   al,BYTE PTR es:[edi]
  40f244:	je     0x40f231
  40f246:	lock inc esp
  40f248:	pop    es
  40f249:	jmp    0x6b2c7eeb
  40f24e:	test   al,0x58
  40f250:	je     0x40f242
  40f252:	rcl    edx,cl
  40f254:	or     ebx,DWORD PTR [esi+0x2911cf45]
  40f25a:	out    dx,eax
  40f25b:	push   edi
  40f25c:	je     0x40f257
  40f25e:	push   0xffffffc7
  40f260:	inc    BYTE PTR [eax]
  40f262:	daa    
  40f263:	pop    es
  40f264:	push   0x0
  40f266:	popf   
  40f267:	xor    BYTE PTR [esi],al
  40f269:	inc    DWORD PTR [eax]
  40f26b:	add    BYTE PTR [eax],al
  40f26d:	aaa    
  40f26e:	das    
  40f26f:	adc    BYTE PTR [eax+0x1a],al
  40f272:	cmp    BYTE PTR [ebx+0x10],0x1a
  40f276:	or     edi,DWORD PTR gs:[ebx]
  40f279:	push   edi
  40f27a:	push   ebx
  40f27b:	jp     0x40f27f
  40f27d:	fld    st(2)
  40f27f:	xor    ecx,ecx
  40f281:	mov    ah,0x81
  40f283:	or     al,BYTE PTR [esi-0x71]
  40f286:	int3   
  40f287:	or     al,BYTE PTR [eax]
  40f289:	xchg   DWORD PTR [ebx+0x125153ea],eax
  40f28f:	push   ebp
  40f290:	push   edi
  40f291:	pop    ecx
  40f292:	mov    bl,0xfd
  40f294:	jne    0x40f257
  40f296:	out    0x73,eax
  40f298:	or     al,0xdd
  40f29a:	pop    esp
  40f29b:	jbe    0x40f2af
  40f29d:	mov    cl,BYTE PTR [edx]
  40f29f:	mov    ebx,eax
  40f2a1:	jo     0x40f2ad
  40f2a3:	push   DWORD PTR [ebp-0x62]
  40f2a6:	sti    
  40f2a7:	cmc    
  40f2a8:	jmp    DWORD PTR [edi]
  40f2aa:	add    cl,BYTE PTR [ebx-0x22a0d3d]
  40f2b0:	call   FWORD PTR [ebp-0x727a097e]
  40f2b6:	xor    eax,0xff0f4723
  40f2bb:	test   DWORD PTR ds:[edx+0x2f],ecx
  40f2bf:	sbb    ebp,eax
  40f2c1:	dec    ebp
  40f2c2:	mov    edi,0xbae1fffd
  40f2c7:	xor    esi,0x26
  40f2ca:	pop    ecx
  40f2cb:	push   ebp
  40f2cc:	call   DWORD PTR [edi]
  40f2ce:	test   DWORD PTR [edx+0xc3],0xe806309d
  40f2d8:	out    0xb5,eax
  40f2da:	std    
  40f2db:	inc    ecx
  40f2dd:	int3   
  40f2de:	jmp    0x4271e5e5
  40f2e3:	pop    esi
  40f2e4:	int    0x18
  40f2e6:	rol    ecx,0xfb
  40f2e9:	pop    edi
  40f2ea:	mov    bh,0x8a
  40f2ec:	pxor   mm6,QWORD PTR [edx-0x272343ab]
  40f2f3:	pop    es
  40f2f4:	js     0x40f2ce
  40f2f6:	mov    dh,al
  40f2f8:	add    al,0x53
  40f2fa:	adc    BYTE PTR [ecx],0xb3
  40f2fd:	pop    edi
  40f2fe:	mov    edi,edx
  40f300:	sbb    WORD PTR fs:[ebp-0x76ff9fc9],cx
  40f308:	cs int3 
  40f30a:	test   BYTE PTR [edi+ebx*8+0x5f],al
  40f30e:	push   es
  40f30f:	add    bl,dh
  40f311:	fiadd  WORD PTR [edx-0x1]
  40f314:	repnz pop edi
  40f316:	add    al,BYTE PTR [ecx-0x5ffda038]
  40f31c:	repz jl 0x40f339
  40f31f:	mov    esp,DWORD PTR [esi]
  40f321:	cld    
  40f322:	imul   esp,DWORD PTR [ecx],0xffffffb7
  40f325:	add    al,0x5f
  40f327:	xor    DWORD PTR [ebx+0x26ff2ed3],0x64
  40f32e:	mov    DWORD PTR ds:0x8d0ad294,eax
  40f334:	not    edi
  40f336:	mov    cl,0x4f
  40f338:	add    BYTE PTR [eax],al
  40f33a:	add    BYTE PTR [edx+edx*2+0x603312ae],al
  40f341:	xchg   DWORD PTR [edi+0x4a8fa7fb],edi
  40f347:	ins    BYTE PTR es:[edi],dx
  40f348:	clc    
  40f349:	inc    esp
  40f34a:	jl     0x40f37e
  40f34c:	pusha  
  40f34d:	pop    edx
  40f34e:	mov    dh,ch
  40f350:	push   eax
  40f351:	dec    ebx
  40f352:	gs push 0x6b
  40f355:	fimul  DWORD PTR [edx-0x7cfeb7cc]
  40f35b:	cmp    eax,DWORD PTR [esi]
  40f35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f35e:	mov    esi,0x41afb19e
  40f363:	in     al,dx
  40f364:	push   es
  40f365:	aas    
  40f366:	mov    bh,0x2d
  40f368:	fcmovb st,st(4)
  40f36a:	vmread DWORD PTR [esi-0x7b],edx
  40f36e:	clc    
  40f36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f370:	clc    
  40f371:	sub    BYTE PTR [eax+ebp*2],al
  40f374:	dec    esi
  40f375:	addr16 inc esi
  40f377:	or     al,0x7
  40f379:	jmp    0xe8966581
  40f37e:	add    edx,DWORD PTR [ebx+0x6]
  40f381:	(bad)  
  40f382:	adc    esp,DWORD PTR [esi-0x3b]
  40f385:	out    0x6b,eax
  40f387:	mov    dl,0x48
  40f389:	dec    ebp
  40f38a:	pop    esi
  40f38b:	jo     0x40f3d4
  40f38d:	mov    esp,0x4dbdc27
  40f392:	hlt    
  40f393:	aad    0xdb
  40f395:	or     al,0xf4
  40f397:	and    eax,0xdf5ef654
  40f39c:	sahf   
  40f39d:	stc    
  40f39e:	ret    
  40f39f:	add    BYTE PTR [eax],al
  40f3a1:	add    BYTE PTR [ebx+ecx*4-0x7d5c24d8],bh
  40f3a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3a9:	pop    esi
  40f3aa:	jmp    0x798a7ef4
  40f3af:	add    eax,0x6eb072f
  40f3b4:	adc    al,BYTE PTR [edx]
  40f3b6:	jo     0x40f3f7
  40f3b8:	cmc    
  40f3b9:	mov    ebp,0x3e0492e
  40f3be:	sbb    eax,0x8a44b881
  40f3c3:	or     ebp,esi
  40f3c5:	xchg   ebp,eax
  40f3c6:	mov    ds:0x10bddfe1,al
  40f3cb:	add    al,0x47
  40f3cd:	sbb    DWORD PTR [ecx-0x10],esp
  40f3d0:	mov    esi,0x6a0c5681
  40f3d5:	inc    esi
  40f3d6:	add    al,0xed
  40f3d8:	(bad)  
  40f3d9:	jmp    0xa9f6f880
  40f3de:	pop    ecx
  40f3df:	call   FWORD PTR [ecx+0xf]
  40f3e2:	fidiv  DWORD PTR [esi]
  40f3e4:	sbb    bh,BYTE PTR [ebx+0x6a066672]
  40f3ea:	mov    cl,0x23
  40f3ec:	jmp    0xb888:0xe9e0
  40f3f2:	push   ss
  40f3f3:	jg     0x40f445
  40f3f5:	jmp    0x40f44d
  40f3f7:	dec    ecx
  40f3f8:	xor    BYTE PTR [ecx-0x52],0xda
  40f3fc:	or     DWORD PTR [esi+0x2b],ebp
  40f3ff:	sub    BYTE PTR [esi+eiz*2],al
  40f402:	add    al,0xd4
  40f404:	adc    DWORD PTR [ecx-0x10000000],ebp
  40f40a:	pop    es
  40f40b:	sar    BYTE PTR [ecx-0x1edc27b1],0x9e
  40f412:	imul   edi,DWORD PTR [edx],0x2d
  40f415:	ds push ebp
  40f417:	xor    dh,BYTE PTR [eax]
  40f419:	int    0x7e
  40f41b:	or     edi,ecx
  40f41d:	xor    cl,BYTE PTR [eax]
  40f41f:	add    BYTE PTR [edx+0x27],ch
  40f422:	push   ebp
  40f423:	je     0x40f418
  40f425:	pop    ds
  40f426:	fsub   DWORD PTR [ebx]
  40f428:	in     eax,0x17
  40f42a:	sti    
  40f42b:	ja     0x40f428
  40f42d:	mov    al,0x53
  40f42f:	dec    esi
  40f430:	push   cs
  40f431:	retf   
  40f432:	daa    
  40f433:	or     BYTE PTR [edi-0x13c03f8],bl
  40f439:	aaa    
  40f43a:	dec    edx
  40f43b:	add    ebp,edi
  40f43d:	lock dec eax
  40f43f:	add    ebp,ecx
  40f441:	jae    0x40f412
  40f443:	and    ebp,ebp
  40f445:	lock fld DWORD PTR [ebx]
  40f448:	sbb    ch,BYTE PTR [edi]
  40f44a:	popa   
  40f44b:	cs push 0xffffffc8
  40f44e:	push   esp
  40f44f:	je     0x40f434
  40f451:	(bad)  
  40f452:	xlat   BYTE PTR ds:[ebx]
  40f453:	and    eax,DWORD PTR [eax]
  40f455:	dec    esi
  40f456:	mov    dl,0x13
  40f458:	cmp    BYTE PTR [eax],0x47
  40f45b:	(bad)  
  40f45c:	push   ebp
  40f45d:	xlat   BYTE PTR ds:[ebx]
  40f45e:	sti    
  40f45f:	dec    DWORD PTR [esp+ecx*1-0x213f7af7]
  40f466:	dec    esi
  40f467:	out    0x78,al
  40f469:	mov    DWORD PTR [edx+0x85fd],esi
  40f46f:	add    BYTE PTR [edx+0x3b],bl
  40f472:	or     DWORD PTR [esi+0x75],edx
  40f475:	cmp    esp,DWORD PTR [edx]
  40f477:	or     al,0xfa
  40f479:	loop   0x40f451
  40f47b:	ret    
  40f47c:	xchg   ebp,eax
  40f47d:	mov    dl,0x5c
  40f47f:	ret    0x71e
  40f482:	cmp    DWORD PTR [esi+ebp*1+0xb],0x0
  40f487:	push   esi
  40f488:	xor    DWORD PTR [edi-0x3526fb8d],0xb4592ce9
  40f492:	std    
  40f493:	jne    0x40f45b
  40f495:	mov    bl,0x72
  40f497:	and    al,0xe2
  40f499:	mov    bl,0x13
  40f49b:	js     0x40f455
  40f49d:	inc    esi
  40f49e:	dec    BYTE PTR [edx+0x144810a]
  40f4a4:	dec    edi
  40f4a5:	(bad)  
  40f4a6:	jb     0x40f48c
  40f4a8:	loop   0x40f499
  40f4aa:	ret    0xd5ff
  40f4ad:	mov    BYTE PTR [esi-0x2636e8c],bh
  40f4b3:	je     0x40f463
  40f4b5:	add    dl,BYTE PTR [eax-0x18]
  40f4b8:	adc    bh,al
  40f4ba:	std    
  40f4bb:	push   DWORD PTR [eax+ecx*8+0x2]
  40f4bf:	add    BYTE PTR [ecx-0x64],ch
  40f4c2:	mov    ecx,esi
  40f4c4:	pop    ebp
  40f4c5:	jg     0x40f4bd
  40f4c7:	test   DWORD PTR [edi+esi*1-0x798874c2],ebx
  40f4ce:	adc    BYTE PTR [eax-0xd],al
  40f4d1:	pop    edi
  40f4d2:	test   esi,edi
  40f4d4:	add    BYTE PTR [eax],al
  40f4d6:	add    BYTE PTR [ebx+edi*4+0xb],ah
  40f4da:	jmp    edi
  40f4dc:	add    esi,esp
  40f4de:	inc    BYTE PTR [eax-0x2b]
  40f4e1:	pop    ebx
  40f4e2:	inc    BYTE PTR ds:0x2b8a3699
  40f4e8:	mov    bl,0x7
  40f4ea:	cmp    ebp,DWORD PTR [esi+0x1c]
  40f4ed:	or     eax,0x45f84b02
  40f4f2:	(bad)  
  40f4f3:	sub    al,0xe4
  40f4f5:	inc    ebx
  40f4f6:	jae    0x40f4f4
  40f4f8:	mov    dl,0xff
  40f4fa:	ds ret 
  40f4fc:	aam    0x1
  40f4fe:	call   FWORD PTR [edi-0x87311b5]
  40f504:	div    DWORD PTR [ebx+0x5a9cb4e7]
  40f50a:	inc    BYTE PTR [ebx+0x5f]
  40f50d:	ins    DWORD PTR es:[edi],dx
  40f50e:	add    ecx,eax
  40f510:	pop    ds
  40f511:	mov    ebx,0x1e485d
  40f516:	add    BYTE PTR [eax+0x43],dh
  40f519:	push   ds
  40f51a:	add    al,0xf3
  40f51c:	ins    BYTE PTR es:[edi],dx
  40f51d:	mov    al,0x56
  40f51f:	push   0x47f08f27
  40f524:	push   edi
  40f525:	lea    edi,[ebx+ecx*2]
  40f528:	cs ret 0x71ff
  40f52c:	and    al,0x5b
  40f52e:	je     0x40f51b
  40f530:	lock iret 
  40f532:	and    eax,DWORD PTR [ebx]
  40f534:	stc    
  40f535:	xor    cl,BYTE PTR [edx-0xedff35]
  40f53b:	add    BYTE PTR [eax],al
  40f53d:	add    ah,al
  40f53f:	aam    0x5b
  40f541:	mov    WORD PTR [edi],fs
  40f543:	xor    DWORD PTR [ebx],eax
  40f545:	call   0xfe9c1330
  40f54a:	outs   dx,DWORD PTR ds:[esi]
  40f54b:	pop    ds
  40f54c:	rcl    BYTE PTR [edx],1
  40f54e:	push   0x75b6ef06
  40f553:	fiadd  DWORD PTR [eax+esi*8]
  40f556:	icebp  
  40f557:	dec    ecx
  40f558:	cmp    BYTE PTR [esp+eiz*2+0x44],ch
  40f55c:	int    0x5a
  40f55e:	mov    WORD PTR [edi],es
  40f560:	rol    BYTE PTR ds:0xba1d4721,cl
  40f566:	test   eax,0x9d03ec44
  40f56b:	push   ecx
  40f56c:	rol    DWORD PTR [ebx-0x7f17391e],cl
  40f572:	je     0x40f544
  40f574:	cmp    edx,DWORD PTR [edi]
  40f576:	cmp    dl,BYTE PTR ds:0x466fb2bb
  40f57c:	push   cs
  40f57d:	cld    
  40f57e:	in     eax,dx
  40f57f:	cdq    
  40f580:	les    esi,FWORD PTR [ecx-0x3037ae8f]
  40f586:	sti    
  40f587:	test   DWORD PTR [ebp+0x6d858e52],ebp
  40f58d:	inc    DWORD PTR [ebp-0x463a57f8]
  40f593:	fsubr  QWORD PTR ss:[ebx+0x19]
  40f597:	inc    esi
  40f598:	arpl   di,bp
  40f59a:	and    BYTE PTR ss:[eax-0x3fc188a6],0xf1
  40f5a2:	add    BYTE PTR [eax],al
  40f5a4:	add    ch,ah
  40f5a6:	xchg   edi,eax
  40f5a7:	cld    
  40f5a8:	int    0x71
  40f5aa:	push   eax
  40f5ab:	or     al,dl
  40f5ad:	sti    
  40f5ae:	and    DWORD PTR ds:0x25845652,0xffffffff
  40f5b5:	cmp    eax,0x2bccb10b
  40f5ba:	pop    ebp
  40f5bb:	mov    ch,0x1e
  40f5bd:	mov    ebp,0x5c80ddd9
  40f5c2:	shl    ecx,1
  40f5c4:	mov    al,ch
  40f5c6:	push   es
  40f5c7:	cwde   
  40f5c8:	mov    ch,0x26
  40f5ca:	pop    edi
  40f5cb:	call   FWORD PTR [edx+0x2e]
  40f5ce:	push   ecx
  40f5cf:	(bad)  
  40f5d0:	mov    edx,0xf588ea2f
  40f5d5:	mov    dl,0x45
  40f5d7:	push   edx
  40f5d8:	aaa    
  40f5d9:	add    eax,0xfad98a2c
  40f5de:	xchg   edi,eax
  40f5df:	add    eax,0x6540a75c
  40f5e4:	push   0xffffffb5
  40f5e6:	(bad)  
  40f5e7:	jbe    0x40f5cd
  40f5e9:	sti    
  40f5ea:	xchg   edi,eax
  40f5eb:	rol    edx,0x49
  40f5ee:	or     DWORD PTR [edi+0x6e],0x51
  40f5f2:	test   ecx,edi
  40f5f4:	in     al,dx
  40f5f5:	and    ecx,DWORD PTR [ecx]
  40f5f7:	add    eax,0xfe4fcab0
  40f5fc:	cmp    cl,0x81
  40f5ff:	dec    edi
  40f600:	outs   dx,BYTE PTR ds:[esi]
  40f601:	adc    DWORD PTR [ebp-0x13bc1307],eax
  40f607:	add    al,0x50
  40f609:	add    BYTE PTR [eax],al
  40f60b:	add    BYTE PTR [edx-0x399201b1],ch
  40f611:	rol    DWORD PTR [esi],cl
  40f613:	loope  0x40f606
  40f615:	lds    esi,FWORD PTR [ecx]
  40f617:	inc    edx
  40f618:	xchg   BYTE PTR [eax],cl
  40f61a:	ror    BYTE PTR [ecx-0xd],0x7e
  40f61e:	add    BYTE PTR [edx-0x143a7c10],bl
  40f624:	dec    edi
  40f625:	mov    fs,WORD PTR [ebp+0x6c]
  40f628:	das    
  40f629:	fild   DWORD PTR [edi]
  40f62b:	gs push cs
  40f62d:	fild   DWORD PTR [ebx]
  40f62f:	jns    0x40f621
  40f631:	pop    ebx
  40f632:	add    ebx,edi
  40f634:	xor    BYTE PTR [edx+0x7c842a5a],dh
  40f63a:	jmp    0x40f6a6
  40f63c:	sbb    edi,esp
  40f63e:	or     BYTE PTR [esp+edi*1+0x6fb75150],0xda
  40f646:	pop    es
  40f647:	add    BYTE PTR [edi],bl
  40f649:	inc    DWORD PTR ds:0x8307578b
  40f64f:	and    BYTE PTR [edx-0x7db2786a],bl
  40f655:	lock (bad) 
  40f659:	mov    eax,0x825afffe
  40f65e:	inc    ebx
  40f65f:	adc    cl,bl
  40f661:	jecxz  0x40f663
  40f663:	mov    DWORD PTR [edi],edx
  40f665:	mov    bh,0xe9
  40f667:	add    eax,0x8b0640e1
  40f66c:	or     BYTE PTR [edx+0xf47b],0x0
  40f673:	pop    edx
  40f674:	sbb    ah,0x74
  40f677:	cs add ah,0x3b
  40f67b:	pop    ebx
  40f67c:	cmp    cl,BYTE PTR [edx]
  40f67e:	mov    ch,BYTE PTR [edx]
  40f680:	icebp  
  40f681:	push   esp
  40f682:	adc    al,0x6
  40f684:	push   eax
  40f685:	cmp    ecx,DWORD PTR ds:[ebx+0x39]
  40f689:	repnz mov esi,DWORD PTR [edx+0x22]
  40f68d:	inc    BYTE PTR [eax-0x7d]
  40f690:	nop
  40f691:	push   es
  40f692:	jmp    0x40f6a3
  40f694:	xchg   ebp,eax
  40f695:	mov    edi,DWORD PTR [ebp+0x12]
  40f698:	sub    bh,0xe8
  40f69b:	fld    DWORD PTR ds:0xb2610000
  40f6a1:	mov    DWORD PTR [ebp+0x3e],ecx
  40f6a4:	jnp    0x40f719
  40f6a6:	or     al,0x3f
  40f6a8:	push   es
  40f6a9:	lea    eax,[edx+ecx*8]
  40f6ac:	or     al,BYTE PTR [eax]
  40f6ae:	call   0x3ec125
  40f6b3:	push   esi
  40f6b4:	retf   0x840d
  40f6b7:	jno    0x40f6c3
  40f6b9:	add    BYTE PTR [eax],al
  40f6bb:	inc    edi
  40f6bc:	scas   eax,DWORD PTR es:[edi]
  40f6bd:	jb     0x40f6d9
  40f6bf:	imul   edi,DWORD PTR [ebx-0x3b],0x5625f3e8
  40f6c6:	(bad)  
  40f6c7:	pushf  
  40f6c8:	jmp    0x16a9f27a
  40f6cd:	mov    WORD PTR [eax],cs
  40f6cf:	jp     0x40f735
  40f6d1:	jno    0x40f657
  40f6d3:	mov    bl,0x65
  40f6d5:	jle    0x40f663
  40f6d7:	add    BYTE PTR [eax],al
  40f6d9:	add    bl,dh
  40f6db:	pop    edi
  40f6dc:	add    dh,dh
  40f6de:	cs push eax
  40f6e0:	add    esi,DWORD PTR [ebp+ebx*8-0x28]
  40f6e4:	enter  0x78fb,0x9e
  40f6e8:	mov    bh,bh
  40f6ea:	outs   dx,DWORD PTR ds:[esi]
  40f6eb:	mov    al,BYTE PTR fs:[edx+0x5ece601b]
  40f6f2:	js     0x40f744
  40f6f4:	lods   al,BYTE PTR ds:[esi]
  40f6f5:	(bad)  
  40f6f6:	ficom  WORD PTR [edi]
  40f6f8:	repnz aas 
  40f6fa:	repz loop 0x40f740
  40f6fd:	jge    0x40f6a0
  40f6ff:	xor    BYTE PTR [eax],dh
  40f701:	xor    ch,BYTE PTR [ebx+eiz*8]
  40f704:	inc    ebx
  40f705:	jge    0x40f704
  40f707:	jmp    0x77b42e13
  40f70c:	and    esi,DWORD PTR [ebx+ebp*8-0x21]
  40f710:	ins    BYTE PTR es:[edi],dx
  40f711:	or     BYTE PTR [ebx-0x79],dh
  40f714:	push   DWORD PTR [esi-0x13]
  40f717:	and    DWORD PTR [edi+0x685bfb3a],edi
  40f71d:	sub    dh,BYTE PTR [ecx]
  40f71f:	rcl    DWORD PTR [edi],cl
  40f721:	xor    bh,BYTE PTR [esi-0x71]
  40f724:	push   ebp
  40f725:	test   cl,al
  40f727:	aaa    
  40f728:	out    dx,al
  40f729:	mov    edi,ebp
  40f72b:	stc    
  40f72c:	cmp    eax,0x13
  40f72f:	mov    WORD PTR [edx],cs
  40f731:	sbb    dl,0x56
  40f734:	cmp    al,0xef
  40f737:	mov    esi,?
  40f739:	inc    edi
  40f73a:	sub    DWORD PTR [edi+0x3a66],edx
  40f740:	add    BYTE PTR [ebp+0x76079f06],dh
  40f746:	inc    esi
  40f747:	sahf   
  40f748:	or     eax,DWORD PTR [ebx-0x4a]
  40f74b:	mov    esi,0xd47fc6b
  40f750:	push   edi
  40f751:	scas   al,BYTE PTR es:[edi]
  40f752:	add    bh,BYTE PTR [ecx+0xc37803]
  40f758:	push   edi
  40f759:	das    
  40f75a:	dec    ebx
  40f75b:	scas   eax,DWORD PTR es:[edi]
  40f75c:	shl    ah,0xfd
  40f75f:	push   0x7
  40f761:	je     0x40f7b0
  40f763:	in     eax,0x8a
  40f765:	mov    bh,0x4a
  40f767:	cmp    eax,0xaa3fc9b6
  40f76c:	repz pop esp
  40f76e:	and    BYTE PTR [ebx],0x58
  40f771:	imul   ecx,DWORD PTR [eax+edx*8+0x3c],0x82bd4d8c
  40f779:	sub    al,0x4d
  40f77b:	shr    DWORD PTR [ecx-0x59],0x81
  40f77f:	mov    esp,0x69fa4882
  40f784:	loopne 0x40f7aa
  40f786:	push   es
  40f787:	cmp    ch,BYTE PTR [esi+0x1d695879]
  40f78d:	repz jnp 0x40f784
  40f790:	or     edi,DWORD PTR [edi+edi*2-0x4c84a7d5]
  40f797:	je     0x40f7b3
  40f799:	xor    ebp,edi
  40f79b:	imul   eax,DWORD PTR [esp+edi*8+0x4c],0x86ec89e8
  40f7a3:	pop    edi
  40f7a4:	and    eax,DWORD PTR [eax]
  40f7a6:	add    BYTE PTR [eax],al
  40f7a8:	add    DWORD PTR [bx+di+0x5c],ebp
  40f7ac:	sti    
  40f7ad:	retf   0x83e3
  40f7b0:	(bad)  
  40f7b2:	int    0xb
  40f7b4:	xor    edi,DWORD PTR [esi-0x55]
  40f7b7:	push   edi
  40f7b8:	or     DWORD PTR [ecx-0x46],ecx
  40f7bb:	pop    esi
  40f7bc:	or     DWORD PTR [ecx-0x1],ecx
  40f7bf:	in     eax,0x71
  40f7c1:	ins    BYTE PTR es:[edi],dx
  40f7c2:	(bad)  
  40f7c3:	call   0x745878b8
  40f7c8:	enter  0x8007,0x22
  40f7cc:	add    eax,0x396904d3
  40f7d1:	es jne 0x40f7ca
  40f7d4:	addr16 retf 
  40f7d6:	sti    
  40f7d7:	adc    bh,ah
  40f7d9:	or     BYTE PTR [esi],0x69
  40f7dc:	daa    
  40f7dd:	in     al,dx
  40f7de:	jae    0x40f7c6
  40f7e0:	jo     0x40f831
  40f7e2:	or     BYTE PTR [ebp-0xd],ch
  40f7e5:	xchg   al,bh
  40f7e7:	hlt    
  40f7e8:	inc    esi
  40f7e9:	add    eax,DWORD PTR [edi+0x22]
  40f7ec:	leave  
  40f7ed:	aad    0xe9
  40f7ef:	bound  esp,QWORD PTR [esi]
  40f7f1:	and    eax,ebx
  40f7f3:	ret    0xf07
  40f7f6:	pop    ds
  40f7f7:	cmp    al,0x42
  40f7f9:	sbb    ecx,ecx
  40f7fb:	ins    BYTE PTR es:[edi],dx
  40f7fc:	xchg   BYTE PTR [ebp-0x16],cl
  40f7ff:	jmp    0x40f832
  40f801:	les    edi,FWORD PTR [edi-0xf]
  40f804:	jl     0x40f7de
  40f806:	clc    
  40f807:	lahf   
  40f808:	mov    al,0x6
  40f80a:	je     0x40f7f0
  40f80c:	add    BYTE PTR [eax],al
  40f80e:	add    BYTE PTR [edi+0x11],ah
  40f811:	cli    
  40f812:	sbb    edx,DWORD PTR [ebx-0xdeb05f0]
  40f818:	dec    ebx
  40f819:	dec    esp
  40f81a:	test   DWORD PTR [edx+0x2d],edi
  40f81d:	sub    bl,BYTE PTR [ebx+ebp*4]
  40f820:	or     BYTE PTR [ecx+esi*2+0x74],0x0
  40f825:	(bad)  
  40f826:	in     eax,0xf0
  40f828:	push   es
  40f829:	add    BYTE PTR [ecx-0x46],dl
  40f82c:	mov    esi,?
  40f82e:	pop    esi
  40f82f:	jae    0x40f7bc
  40f831:	jae    0x40f846
  40f833:	pop    esp
  40f834:	xor    DWORD PTR [ebx+eiz*8+0x3],esi
  40f838:	inc    edi
  40f839:	add    BYTE PTR [bp+0x3e3c],bl
  40f83e:	add    BYTE PTR [edx+0x7fff03de],bl
  40f844:	mov    bl,0x89
  40f846:	ret    
  40f847:	xor    dl,BYTE PTR [eax+0x7dd5fffa]
  40f84d:	or     al,0x8b
  40f84f:	pop    edi
  40f850:	scas   eax,DWORD PTR es:[edi]
  40f851:	xchg   DWORD PTR [ebx+ebx*1],eax
  40f854:	int3   
  40f855:	mov    esi,0x43b29c74
  40f85a:	clc    
  40f85b:	add    DWORD PTR [edx+esi*8-0x5cbfcb9],ebx
  40f862:	mov    ecx,ebp
  40f864:	fbstp  TBYTE PTR ds:0x89b285ff
  40f86a:	inc    ebp
  40f86b:	push   edx
  40f86c:	fimul  WORD PTR [ebx]
  40f86e:	mov    ecx,DWORD PTR [edi]
  40f870:	stos   DWORD PTR es:[edi],eax
  40f871:	mov    DWORD PTR [esi],edi
  40f873:	add    BYTE PTR [eax],al
  40f875:	add    BYTE PTR [edx],dh
  40f877:	call   0x8666f839
  40f87c:	(bad)  
  40f87d:	call   DWORD PTR ds:0x99c95995
  40f883:	pushf  
  40f884:	mov    esp,ebp
  40f886:	leave  
  40f887:	jecxz  0x40f893
  40f889:	sub    DWORD PTR [edi-0x13ad0156],0x7d
  40f890:	lock sub DWORD PTR [edi+eax*1],0xffffff8d
  40f895:	sbb    al,0xd2
  40f897:	cdq    
  40f898:	xchg   DWORD PTR [ebp+0x66],eax
  40f89b:	sbb    BYTE PTR [ebx-0xc],0x31
  40f89f:	(bad)  
  40f8a0:	or     eax,0x75f83
  40f8a5:	add    BYTE PTR ds:0x8383067a,dl
  40f8ab:	daa    
  40f8ac:	je     0x40f8b8
  40f8ae:	pop    ecx
  40f8af:	lods   eax,DWORD PTR ds:[esi]
  40f8b0:	pop    es
  40f8b1:	jb     0x40f888
  40f8b3:	xchg   edi,esi
  40f8b5:	or     eax,0x830828f3
  40f8ba:	mov    bl,0x5e
  40f8bc:	mov    DWORD PTR [edi+ecx*8+0x5],eax
  40f8c0:	inc    ecx
  40f8c1:	jno    0x40f892
  40f8c3:	add    eax,0xcf700e41
  40f8c8:	add    al,BYTE PTR [eax]
  40f8ca:	repz sub BYTE PTR [ebx+0xa87e07],cl
  40f8d1:	sub    DWORD PTR [edx+0x7004ce41],0xfffffff7
  40f8d8:	and    BYTE PTR [ebp+0x0],dh
  40f8db:	add    BYTE PTR [eax],al
  40f8dd:	mul    esp
  40f8df:	xor    DWORD PTR [eax+0x3c68040e],ecx
  40f8e5:	hlt    
  40f8e6:	adc    BYTE PTR [ebx+eax*4],al
  40f8e9:	jp     0x40f92b
  40f8eb:	into   
  40f8ec:	adc    BYTE PTR [eax+0x57],dh
  40f8ef:	or     BYTE PTR [edx-0xa],dh
  40f8f2:	fmul   QWORD PTR [esp+ecx*1-0x23]
  40f8f6:	pusha  
  40f8f7:	test   esi,eax
  40f8f9:	icebp  
  40f8fa:	hlt    
  40f8fb:	dec    esi
  40f8fc:	jno    0x40f94a
  40f8fe:	in     eax,0x32
  40f900:	sub    ch,BYTE PTR [ebx]
  40f902:	xor    eax,0x310a6622
  40f907:	xlat   BYTE PTR ds:[ebx]
  40f908:	adc    eax,0x4680a700
  40f90d:	xor    eax,0x70410745
  40f912:	js     0x40f919
  40f914:	data16 jo 0x40f97f
  40f917:	scas   al,BYTE PTR es:[edi]
  40f918:	jae    0x40f93f
  40f91a:	push   0x44
  40f91c:	add    BYTE PTR [edi-0xe397aa0],bl
  40f922:	inc    esp
  40f923:	dec    ebp
  40f924:	jno    0x40f94b
  40f926:	inc    ebp
  40f927:	dec    ebp
  40f928:	je     0x40f921
  40f92a:	fsubr  st(0),st
  40f92c:	sti    
  40f92d:	icebp  
  40f92e:	in     al,0x32
  40f930:	sub    cl,BYTE PTR [esi+0x7]
  40f933:	gs jg  0x40f96d
  40f936:	dec    edi
  40f937:	imul   eax,DWORD PTR [eax],0x6e
  40f93a:	add    ch,cl
  40f93c:	add    esi,ebx
  40f93e:	aaa    
  40f93f:	push   ecx
  40f940:	pop    esp
  40f941:	add    BYTE PTR [eax],al
  40f943:	add    BYTE PTR [esi],cl
  40f945:	mov    DWORD PTR [ebp+0x53],eax
  40f948:	jo     0x40f990
  40f94a:	mov    ah,0xf
  40f94c:	jbe    0x40f97b
  40f94e:	mov    ebx,0xc04701fd
  40f953:	mov    ebx,0xc3e8c727
  40f958:	cdq    
  40f959:	add    ebx,DWORD PTR [esi]
  40f95b:	fstp   DWORD PTR [eax-0x1aa3d683]
  40f961:	dec    ebp
  40f962:	or     eax,0x71f87953
  40f967:	mov    ecx,0x74e47f7c
  40f96c:	ja     0x40f9b4
  40f96e:	jl     0x40f95b
  40f970:	jne    0x40f935
  40f972:	lock jle 0x40f944
  40f975:	push   edx
  40f976:	imul   ecx,DWORD PTR [edx-0xe],0x69505b7f
  40f97d:	inc    ecx
  40f97e:	mov    edi,0xcd495426
  40f983:	jle    0x40f93c
  40f985:	dec    esi
  40f986:	rol    DWORD PTR [eax],1
  40f988:	js     0x40f94d
  40f98a:	sar    BYTE PTR [esi-0x2],0x5e
  40f98e:	call   0x2d3b:0x69493591
  40f995:	test   eax,0x453baf46
  40f99a:	xor    edi,DWORD PTR [edi+0x8]
  40f99d:	test   DWORD PTR [edi+esi*8+0x2ed9b0c1],eax
  40f9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a5:	adc    eax,0x7c86
  40f9aa:	add    BYTE PTR [edi+0x4b06f52],ah
  40f9b0:	lldt   WORD PTR [ebx+esi*8]
  40f9b4:	stc    
  40f9b5:	test   DWORD PTR [edx-0x10],eax
  40f9b8:	push   es
  40f9b9:	add    BYTE PTR [edx-0x4d],dh
  40f9bc:	push   eax
  40f9bd:	mov    ah,BYTE PTR [eax+ebx*8+0x5561037b]
  40f9c4:	clc    
  40f9c5:	lds    esp,FWORD PTR [ecx+eiz*1+0x24ac8748]
  40f9cc:	jge    0x40f997
  40f9ce:	push   edx
  40f9cf:	mov    ebx,0x103182e2
  40f9d4:	rcr    DWORD PTR [eax],cl
  40f9d6:	(bad)  
  40f9d7:	jne    0x40fa29
  40f9d9:	or     BYTE PTR [ebx+0x2182e0fa],bl
  40f9df:	repz ror BYTE PTR [edx+ebp*2],1
  40f9e3:	das    
  40f9e4:	push   es
  40f9e5:	orps   xmm6,xmm7
  40f9e8:	loopne 0x40f96e
  40f9ea:	sub    DWORD PTR [ebx+0x2ae5ea65],ebp
  40f9f0:	ret    
  40f9f1:	(bad)  
  40f9f2:	call   0x69554335
  40f9f7:	data16 or BYTE PTR [eax],al
  40f9fa:	je     0x40f9ef
  40f9fc:	push   cs
  40f9fd:	lea    ebp,ds:0x5c8d0058
  40fa03:	mov    ebx,0xafd9447e
  40fa08:	leave  
  40fa09:	mov    esp,0xbf83a2c6
  40fa0e:	xor    eax,0x81000000
  40fa13:	test   DWORD PTR [ecx+esi*4-0x11],edi
  40fa17:	jnp    0x40fa75
  40fa19:	mov    ch,0x49
  40fa1b:	add    BYTE PTR [edx-0x37],ch
  40fa1e:	pop    eax
  40fa1f:	loop   0x40f9a9
  40fa21:	in     eax,0x2f
  40fa23:	sar    DWORD PTR [edi+0x14],0xc2
  40fa27:	inc    edi
  40fa28:	jb     0x40fa0b
  40fa2a:	cs es pop eax
  40fa2d:	add    ah,dh
  40fa2f:	retf   
  40fa30:	add    bh,BYTE PTR [ebx-0x2b]
  40fa33:	leave  
  40fa34:	inc    ebx
  40fa35:	in     al,dx
  40fa36:	jge    0x40fa2a
  40fa38:	mov    al,BYTE PTR [ebp+0x6a]
  40fa3b:	enter  0x7b32,0x42
  40fa3f:	mov    cl,0xf7
  40fa41:	(bad)  
  40fa42:	cmp    eax,0x4af07d02
  40fa47:	cmp    ch,bh
  40fa49:	add    BYTE PTR [esi-0x6ddd95fb],ah
  40fa4f:	pop    ebp
  40fa50:	xchg   DWORD PTR [ecx+esi*4],eax
  40fa53:	ds xor eax,eax
  40fa56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa57:	int3   
  40fa58:	add    bh,BYTE PTR [ebx-0x23]
  40fa5b:	aas    
  40fa5c:	test   BYTE PTR [ebx+0x4539bb57],0x8e
  40fa63:	push   es
  40fa64:	adc    BYTE PTR [ebp-0x3],0xb5
  40fa68:	std    
  40fa69:	mov    ebx,ecx
  40fa6b:	xchg   ebp,eax
  40fa6c:	pop    esp
  40fa6d:	pop    ebx
  40fa6e:	ret    
  40fa6f:	rol    BYTE PTR [esi],0x0
  40fa72:	jge    0x40faa4
  40fa74:	bnd call 0xd440fa7a
  40fa7a:	ja     0x40fa79
  40fa7c:	jmp    FWORD PTR [ecx+0x27ede9c3]
  40fa82:	retf   0x56ea
  40fa85:	and    eax,0xf8bf7ca
  40fa8a:	dec    ebx
  40fa8b:	mov    eax,esi
  40fa8d:	xlat   BYTE PTR ds:[ebx]
  40fa8e:	or     al,0x74
  40fa90:	or     al,0xd7
  40fa92:	mov    dh,0x72
  40fa94:	adc    al,0xc9
  40fa96:	or     edi,esi
  40fa98:	jmp    0x40fe3b
  40fa9d:	xchg   edi,eax
  40fa9e:	mov    dh,0x73
  40faa0:	cmovns eax,ebx
  40faa3:	ds jmp 0x40fe43
  40faa9:	repz sub al,0x42
  40faac:	call   0x43582b
  40fab1:	mov    al,ds:0xe177edd4
  40fab6:	sbb    eax,0xcff58304
  40fabb:	aad    0x2f
  40fabd:	jo     0x40faf2
  40fabf:	(bad)  
  40fac0:	(bad)  
  40fac1:	pop    esi
  40fac2:	adc    bh,BYTE PTR [esi+0x6]
  40fac5:	in     al,dx
  40fac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac7:	adc    DWORD PTR [edi],ecx
  40fac9:	xchg   ebp,eax
  40faca:	add    BYTE PTR [edx+esi*8],bl
  40facd:	inc    esi
  40face:	jge    0x40faeb
  40fad0:	iret   
  40fad1:	outs   dx,DWORD PTR ds:[esi]
  40fad2:	lock (bad) 
  40fad4:	push   eax
  40fad5:	xor    al,0xba
  40fad7:	pop    es
  40fad8:	pcmpeqw mm0,QWORD PTR [ecx+ecx*1+0xf]
  40fadd:	add    BYTE PTR [eax],al
  40fadf:	add    BYTE PTR [ebp+0x20],ch
  40fae2:	sbb    al,0xf2
  40fae4:	pop    ds
  40fae5:	push   ds
  40fae6:	pop    esp
  40fae7:	inc    eax
  40fae8:	inc    edx
  40fae9:	and    eax,0x28268a34
  40faee:	jnp    0x40fadf
  40faf0:	jo     0x40fa85
  40faf2:	(bad)  
  40faf3:	(bad)  
  40faf4:	(bad)  
  40faf5:	ss mov bh,0xfe
  40faf8:	mov    al,ds:0x6a07bdb9
  40fafd:	jae    0x40fafd
  40faff:	mov    al,dh
  40fb01:	arpl   WORD PTR [ebx],cx
  40fb03:	repnz fimul WORD PTR [esi]
  40fb06:	mov    ebp,esi
  40fb08:	out    0x42,eax
  40fb0a:	xchg   ecx,edx
  40fb0c:	fbstp  TBYTE PTR [esi]
  40fb0e:	adc    eax,eax
  40fb10:	jbe    0x40fa94
  40fb12:	int    0x14
  40fb14:	hlt    
  40fb15:	lea    edx,[edi+ecx*1]
  40fb18:	jge    0x40fb7f
  40fb1a:	sbb    ebx,esi
  40fb1c:	mov    esi,0xb346c328
  40fb21:	cmp    BYTE PTR [eax+0x7b],al
  40fb24:	adc    al,0x7
  40fb26:	xchg   edx,eax
  40fb27:	add    cl,al
  40fb29:	cmp    cl,bl
  40fb2b:	cmp    al,0x6f
  40fb2d:	cmp    eax,0x92336ee5
  40fb32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb33:	push   edi
  40fb34:	sbb    al,0x22
  40fb36:	test   eax,0xefd36fab
  40fb3b:	dec    esi
  40fb3c:	rol    DWORD PTR [edi+0x15],1
  40fb3f:	scas   al,BYTE PTR es:[edi]
  40fb40:	dec    edi
  40fb41:	dec    ecx
  40fb42:	loopne 0x40fb47
  40fb44:	add    BYTE PTR [eax],al
  40fb46:	add    BYTE PTR [esi],bh
  40fb48:	xchg   edx,eax
  40fb49:	push   esp
  40fb4a:	mov    dh,0x45
  40fb4c:	xchg   edx,eax
  40fb4d:	pop    edi
  40fb4e:	jnp    0x40fb77
  40fb50:	punpckldq mm2,DWORD PTR [edi+esi*2+0x4f]
  40fb55:	sar    edi,cl
  40fb57:	outs   dx,DWORD PTR ds:[esi]
  40fb58:	inc    ebp
  40fb59:	mov    esp,0x3d4e71f7
  40fb5e:	pop    ebp
  40fb5f:	push   ebp
  40fb60:	push   es
  40fb61:	jmp    0xb3867169
  40fb66:	(bad)  
  40fb67:	loope  0x40fbaf
  40fb69:	test   al,0x5c
  40fb6b:	add    DWORD PTR [esi],0x46e003e9
  40fb71:	(bad)  
  40fb72:	jg     0x40fb00
  40fb74:	inc    ebp
  40fb75:	call   0x6964752c
  40fb7a:	repnz mov esp,0x754e6a06
  40fb80:	mov    ebx,0x12ef82c5
  40fb85:	out    dx,al
  40fb86:	fcom   DWORD PTR [ebx]
  40fb88:	push   ss
  40fb89:	sahf   
  40fb8a:	push   es
  40fb8b:	in     al,dx
  40fb8c:	jge    0x40fba5
  40fb8e:	sbb    esp,DWORD PTR [ebx-0x45]
  40fb91:	xor    al,0x1b
  40fb93:	cmp    al,0xac
  40fb95:	arpl   WORD PTR [ebx-0x40],ax
  40fb98:	fld    TBYTE PTR [ecx+0x46]
  40fb9b:	repnz adc eax,0x7de40676
  40fba1:	(bad)  
  40fba2:	cld    
  40fba3:	push   ecx
  40fba5:	out    dx,eax
  40fba6:	xor    eax,0x38443092
  40fbab:	add    BYTE PTR [eax],al
  40fbad:	add    BYTE PTR [eax+ebx*2-0x6fe8d376],ch
  40fbb4:	out    dx,eax
  40fbb5:	push   0x23
  40fbb7:	adc    edi,edi
  40fbb9:	adc    al,0x6
  40fbbb:	fdiv   st(6),st
  40fbbd:	call   0x112b:0x7007d279
  40fbc4:	mov    ebx,DWORD PTR [ebx+esi*8]
  40fbc7:	push   ecx
  40fbc9:	hlt    
  40fbca:	sbb    ecx,DWORD PTR [edx-0x75e8220b]
  40fbd0:	rcl    ebp,1
  40fbd2:	jecxz  0x40fbcd
  40fbd4:	mov    edi,0x18c2026c
  40fbd9:	ficomp WORD PTR [ebp-0x9]
  40fbdc:	push   cs
  40fbdd:	jle    0x40fbac
  40fbdf:	icebp  
  40fbe0:	repnz mov ah,0xb5
  40fbe3:	mov    eax,eax
  40fbe5:	jmp    0x40fc58
  40fbe7:	dec    ebp
  40fbe8:	add    DWORD PTR [ecx+0x127b48f9],ebp
  40fbee:	cmp    DWORD PTR [esi],eax
  40fbf0:	sub    ebx,DWORD PTR [ebx]
  40fbf2:	add    DWORD PTR [esi-0x7c],ecx
  40fbf5:	pop    ds
  40fbf6:	lea    esp,[ebp+0x3d2e62c0]
  40fbfc:	xlat   BYTE PTR ds:[ebx]
  40fbfd:	loop   0x40fc2f
  40fbff:	loope  0x40fb8d
  40fc01:	lods   eax,DWORD PTR ds:[esi]
  40fc02:	ja     0x40fc49
  40fc04:	and    ch,BYTE PTR [eax]
  40fc06:	popf   
  40fc07:	loop   0x40fc65
  40fc09:	sub    ebp,DWORD PTR [eax+0x44]
  40fc0c:	jmp    0x7391e6fd
  40fc11:	in     al,dx
  40fc12:	add    BYTE PTR [eax],al
  40fc14:	add    BYTE PTR [eax],dh
  40fc16:	mov    es,WORD PTR [edi]
  40fc18:	ins    DWORD PTR es:[edi],dx
  40fc19:	or     BYTE PTR [ebx-0x47f6ec0c],bh
  40fc1f:	add    DWORD PTR [eax],eax
  40fc21:	cmp    eax,ecx
  40fc23:	shr    ebx,0x43
  40fc26:	sub    al,BYTE PTR [ecx+0x115edaf9]
  40fc2c:	sbb    DWORD PTR [edx+0x9],0xf
  40fc30:	mov    bh,0x22
  40fc32:	sub    al,BYTE PTR [ebx+0x64e1ffc9]
  40fc38:	and    DWORD PTR [edx],0x48
  40fc3b:	jb     0x40fc3f
  40fc3d:	sub    eax,ecx
  40fc3f:	rcl    DWORD PTR [ebp-0x7f],0xa6
  40fc43:	dec    edi
  40fc44:	mov    ecx,edi
  40fc46:	inc    edx
  40fc47:	xchg   DWORD PTR [ebp+0x66],eax
  40fc4a:	mov    ecx,ds
  40fc4c:	jg     0x40fc1d
  40fc4e:	xchg   dh,al
  40fc50:	jmp    DWORD PTR [ebx]
  40fc52:	(bad)  
  40fc53:	push   esp
  40fc54:	(bad)  
  40fc55:	(bad)  
  40fc56:	sub    eax,0xd1325754
  40fc5b:	mov    edx,0x43c435ff
  40fc60:	or     al,0x5a
  40fc62:	shl    BYTE PTR [ebx-0x4],cl
  40fc65:	pop    ecx
  40fc66:	jp     0x40fc65
  40fc68:	adc    eax,0x3e3576
  40fc6d:	test   eax,0x66896500
  40fc72:	adc    esi,edi
  40fc74:	pop    esi
  40fc75:	or     ebx,edx
  40fc77:	std    
  40fc78:	jne    0x40fc7a
  40fc7a:	add    BYTE PTR [eax],al
  40fc7c:	xchg   ebx,eax
  40fc7d:	jp     0x40fc7c
  40fc7f:	adc    eax,0x3e391a
  40fc84:	ret    
  40fc85:	lds    esi,FWORD PTR [ecx]
  40fc87:	leave  
  40fc88:	ins    BYTE PTR es:[edi],dx
  40fc89:	ror    BYTE PTR [edx],0x47
  40fc8c:	adc    eax,esi
  40fc8e:	push   ecx
  40fc8f:	mov    esi,DWORD PTR [esi-0x15]
  40fc92:	pop    es
  40fc93:	test   DWORD PTR [ebp+0x52],edx
  40fc96:	add    eax,DWORD PTR [ebx-0x3ca62d5e]
  40fc9c:	repz add al,0xb6
  40fc9f:	out    0x8b,eax
  40fca1:	xchg   ecx,eax
  40fca2:	dec    ebx
  40fca3:	(bad)  
  40fca4:	outs   dx,BYTE PTR ds:[esi]
  40fca5:	icebp  
  40fca6:	daa    
  40fca7:	or     al,0xa3
  40fca9:	and    BYTE PTR [ebp-0x659dd3ab],dh
  40fcaf:	adc    dh,BYTE PTR [ebx-0x22bcbbd3]
  40fcb5:	ins    BYTE PTR es:[edi],dx
  40fcb6:	add    al,BYTE PTR [ebx+0x8d5a41b]
  40fcbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcbd:	pushf  
  40fcbe:	cmc    
  40fcbf:	ja     0x40fca2
  40fcc1:	in     eax,dx
  40fcc2:	add    ebx,DWORD PTR [ebx+0x30]
  40fcc5:	jae    0x40fccd
  40fcc7:	xor    bl,dh
  40fcc9:	call   0x8cb9510e
  40fcce:	mov    cl,0x82
  40fcd0:	dec    esi
  40fcd1:	mov    ah,0x2
  40fcd3:	push   esi
  40fcd4:	outs   dx,BYTE PTR ds:[esi]
  40fcd5:	jae    0x40fcc9
  40fcd7:	dec    edi
  40fcd8:	aam    0x5b
  40fcda:	(bad)  
  40fcdb:	xor    dh,BYTE PTR [ebx+0xfbbdab]
  40fce1:	add    BYTE PTR [eax],al
  40fce3:	fisttp DWORD PTR [edi+0x54]
  40fce6:	(bad)  
  40fce7:	mov    esp,0xbd8452b5
  40fcec:	inc    edi
  40fced:	clc    
  40fcee:	(bad)  
  40fcef:	es cld 
  40fcf1:	pop    edx
  40fcf2:	jae    0x40fd5c
  40fcf4:	icebp  
  40fcf5:	dec    ebx
  40fcf6:	jmp    0x7368:0xfbc5b4eb
  40fcfd:	cli    
  40fcfe:	mov    dl,dh
  40fd00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd01:	inc    esp
  40fd02:	pop    ebp
  40fd03:	mov    edx,0x8f8ab5ed
  40fd08:	lahf   
  40fd09:	mov    ah,0x8a
  40fd0b:	sbb    DWORD PTR [ecx+0x737e3d77],0xfffffffe
  40fd12:	dec    edi
  40fd13:	fs mov ebx,0x7308afa
  40fd19:	jb     0x40fd55
  40fd1b:	dec    esp
  40fd1c:	in     eax,dx
  40fd1d:	(bad)  
  40fd1e:	dec    ebx
  40fd1f:	dec    ebp
  40fd20:	nop
  40fd21:	sub    ecx,DWORD PTR [eax+0x71]
  40fd24:	aas    
  40fd25:	int    0xd1
  40fd27:	fimul  DWORD PTR [ebx-0x74182e5f]
  40fd2d:	mov    ebp,0xfe41fbd1
  40fd32:	pop    ebx
  40fd33:	loopne 0x40fdb2
  40fd35:	lods   eax,DWORD PTR ds:[esi]
  40fd36:	dec    ebx
  40fd37:	rol    DWORD PTR [eax],cl
  40fd39:	je     0x40fcf3
  40fd3b:	stc    
  40fd3c:	add    al,0x91
  40fd3e:	jecxz  0x40fd8a
  40fd40:	inc    edx
  40fd41:	xchg   ebp,eax
  40fd42:	jg     0x40fcf3
  40fd44:	inc    edx
  40fd45:	sub    eax,0xaa
  40fd4a:	sub    eax,DWORD PTR [esi+0x1b]
  40fd4d:	jg     0x40fd57
  40fd4f:	fsubr  DWORD PTR [ecx-0x1f]
  40fd52:	call   0x2fba1c5d
  40fd57:	pop    ss
  40fd58:	sbb    DWORD PTR [ebx+0x67],ecx
  40fd5b:	adc    esi,DWORD PTR [ecx+eax*8-0x28]
  40fd5f:	cs enter 0xcd51,0x41
  40fd64:	popa   
  40fd65:	push   esp
  40fd66:	outs   dx,DWORD PTR ds:[esi]
  40fd67:	cmp    bh,cl
  40fd69:	std    
  40fd6a:	mov    ebp,0xb85c44bb
  40fd6f:	jl     0x40fdae
  40fd71:	dec    ebx
  40fd72:	cdq    
  40fd73:	push   cs
  40fd74:	(bad)  
  40fd76:	test   al,0x8d
  40fd78:	fwait
  40fd79:	sti    
  40fd7a:	imul   eax,DWORD PTR [edi],0x72
  40fd7d:	inc    edx
  40fd7e:	ss push eax
  40fd80:	sub    DWORD PTR [ebx-0x3a],ecx
  40fd83:	cs push cs
  40fd85:	mov    es,WORD PTR [ebp+0x26f78241]
  40fd8b:	das    
  40fd8c:	sbb    DWORD PTR [edi-0x4cd6be8b],ecx
  40fd92:	jns    0x40fdd2
  40fd94:	jmp    FWORD PTR [ecx-0x48]
  40fd97:	inc    eax
  40fd98:	je     0x40fd77
  40fd9a:	test   eax,0xa9f123b5
  40fd9f:	sbb    al,BYTE PTR [eax-0x76becf05]
  40fda5:	shl    DWORD PTR [ebx+0x40],1
  40fda8:	jge    0x40fdab
  40fdaa:	sbb    eax,0xc65541
  40fdaf:	add    BYTE PTR [eax],al
  40fdb1:	and    al,0xe5
  40fdb3:	sqrtps xmm1,xmm6
  40fdb6:	inc    edx
  40fdb7:	(bad)  
  40fdb8:	call   0xe9425d85
  40fdbd:	lock pop DWORD PTR ds:0x10b5b06c
  40fdc4:	cmp    DWORD PTR [esi+0x39603c3],ecx
  40fdca:	mov    ecx,0x8ff72911
  40fdcf:	inc    ebp
  40fdd0:	icebp  
  40fdd1:	pusha  
  40fdd2:	push   es
  40fdd3:	jmp    0x40fdc0
  40fdd5:	push   es
  40fdd6:	inc    edi
  40fdd7:	pop    esi
  40fdd8:	stos   DWORD PTR es:[edi],eax
  40fdd9:	in     al,0x40
  40fddb:	jmp    0xf7c6d09d
  40fde0:	or     eax,ebx
  40fde2:	pop    ss
  40fde3:	pushw  0x38
  40fde6:	jmp    0x8613e05e
  40fdeb:	imul   DWORD PTR [ebp+0x6c660bac]
  40fdf1:	xor    BYTE PTR [ebx-0x27ab2cf8],bh
  40fdf7:	gs pusha 
  40fdf9:	out    dx,al
  40fdfa:	add    ecx,0xffffffeb
  40fdfd:	xchg   edx,eax
  40fdfe:	lea    eax,[eax]
  40fe00:	(bad)  
  40fe01:	pop    ss
  40fe02:	push   es
  40fe03:	sub    DWORD PTR [ebx],0xfffffff6
  40fe06:	add    eax,0xffffffeb
  40fe09:	mov    DWORD PTR [ecx+0x0],edi
  40fe0c:	xchg   DWORD PTR [ebx-0x80],esi
  40fe0f:	je     0x40fe11
  40fe11:	mov    esi,0x66c018
  40fe16:	add    BYTE PTR [eax],al
  40fe18:	jecxz  0x40fe23
  40fe1a:	ret    
  40fe1b:	mov    ecx,DWORD PTR [esi+0x51eb0420]
  40fe21:	ret    0x3bff
  40fe24:	pusha  
  40fe25:	push   eax
  40fe26:	pop    es
  40fe27:	cmp    al,0x5f
  40fe29:	push   eax
  40fe2a:	add    eax,DWORD PTR [ecx-0x1f]
  40fe2d:	cld    
  40fe2e:	jo     0x40fe21
  40fe30:	rol    ebx,1
  40fe32:	sub    DWORD PTR [esi+eiz*8+0x6],eax
  40fe36:	cmp    ecx,esi
  40fe38:	out    0x36,al
  40fe3a:	mov    edx,DWORD PTR [ecx+0x1b]
  40fe3d:	adc    edx,esi
  40fe3f:	jae    0x40fe7f
  40fe41:	test   BYTE PTR [edi],dh
  40fe43:	or     eax,0x3a8005f7
  40fe48:	add    BYTE PTR [ecx+0x0],dl
  40fe4b:	mov    edx,DWORD PTR [eax+0x44]
  40fe4e:	xchg   DWORD PTR [edi],ecx
  40fe50:	dec    eax
  40fe51:	pop    es
  40fe52:	add    BYTE PTR [ebp-0x7f],dl
  40fe55:	fiadd  WORD PTR [ecx+0x547aa6ec]
  40fe5b:	mov    ebp,DWORD PTR [ebx-0x2b]
  40fe5e:	inc    esp
  40fe5f:	sbb    al,0xba
  40fe61:	jbe    0x40fed5
  40fe63:	push   edx
  40fe64:	shl    bl,0x55
  40fe67:	lea    edx,[edi-0x6717b10d]
  40fe6d:	xchg   ecx,eax
  40fe6e:	std    
  40fe6f:	dec    DWORD PTR [ecx+0x60]
  40fe72:	jmp    0xf3ff:0x31f2b9ef
  40fe79:	ins    BYTE PTR es:[edi],dx
  40fe7a:	push   cs
  40fe7b:	jbe    0x40fe7d
  40fe7d:	add    BYTE PTR [eax],al
  40fe7f:	clc    
  40fe80:	rol    DWORD PTR [esp+ecx*1-0x77],0xc6
  40fe85:	xchg   DWORD PTR [ebp+0x2e],eax
  40fe88:	ret    0x1044
  40fe8b:	mov    eax,ds:0xf34d8bc6
  40fe90:	std    
  40fe91:	jp     0x40fed7
  40fe93:	xchg   ebx,eax
  40fe94:	add    eax,0x874fe8a
  40fe99:	cmp    BYTE PTR [edi+0x3abf2fe6],0xe5
  40fea0:	pop    ebp
  40fea1:	aam    0xdd
  40fea3:	push   0xffffff8f
  40fea5:	out    dx,al
  40fea6:	mov    BYTE PTR [ebp+0x78405d05],dh
  40feac:	jmp    0x13c8:0xa62c025b
  40feb3:	push   0xffffffe7
  40feb5:	jmp    0x40fe66
  40feb7:	repnz push esp
  40feb9:	push   cs
  40feba:	xor    esi,DWORD PTR [ebx]
  40febc:	cmp    al,0x47
  40febe:	mov    BYTE PTR [ebp+0x23447961],ch
  40fec4:	rol    BYTE PTR ss:[edi],0xe4
  40fec8:	mov    cl,0x45
  40feca:	dec    DWORD PTR [ebp*1-0x594d36ed]
  40fed1:	mov    ch,0xf3
  40fed3:	push   0x22
  40fed5:	dec    esp
  40fed6:	mov    ah,BYTE PTR [ebp-0x4e483cf]
  40fedc:	dec    ecx
  40fedd:	call   0xc8b9ff56
  40fee2:	sldt   WORD PTR [eax]
  40fee5:	add    ah,ch
  40fee7:	mov    ds:0x30d4ff35,al
  40feec:	jns    0x40ff6b
  40feee:	jmp    0x40ff11
  40fef0:	inc    esp
  40fef1:	pop    esi
  40fef2:	and    eax,0xf9c23979
  40fef7:	ins    DWORD PTR es:[edi],dx
  40fef8:	add    DWORD PTR [edi],ecx
  40fefa:	outs   dx,DWORD PTR ds:[esi]
  40fefb:	int3   
  40fefc:	add    al,BYTE PTR [eax]
  40fefe:	repz or dl,cl
  40ff01:	nop    eax
  40ff04:	jnp    0x40ff53
  40ff06:	out    dx,eax
  40ff07:	test   eax,0x7680eee
  40ff0c:	mov    bh,0xe7
  40ff0e:	je     0x40fee4
  40ff10:	sbb    eax,0x9d0bb351
  40ff15:	lds    eax,FWORD PTR [esi-0x28301fb8]
  40ff1b:	mov    esi,DWORD PTR [ecx-0x20c01378]
  40ff21:	shl    cl,1
  40ff23:	xchg   BYTE PTR [ecx],ch
  40ff25:	and    ebp,DWORD PTR [esi-0x2f]
  40ff28:	sub    eax,0x5e205b83
  40ff2d:	add    DWORD PTR [ebx+0x49],esi
  40ff30:	or     BYTE PTR [ebx+0xf],bl
  40ff33:	(bad)  
  40ff34:	cmp    eax,DWORD PTR [edi+0x49]
  40ff37:	sbb    al,0xde
  40ff39:	test   DWORD PTR [ecx],esi
  40ff3b:	xlat   BYTE PTR ds:[ebx]
  40ff3c:	vhaddpd xmm2,xmm1,XMMWORD PTR [ebx]
  40ff40:	sub    DWORD PTR [ecx+edi*2],eax
  40ff43:	pop    edi
  40ff44:	in     eax,0x85
  40ff46:	mov    bh,0x3d
  40ff48:	sbb    BYTE PTR [edi+0x0],al
  40ff4b:	add    BYTE PTR [eax],al
  40ff4d:	call   DWORD PTR [esi-0x79f33c04]
  40ff53:	and    eax,DWORD PTR [edi+0x79]
  40ff56:	les    ebx,FWORD PTR [eax-0x2dc25886]
  40ff5c:	sub    DWORD PTR [eax+0x8be7edc],eax
  40ff62:	or     ebp,esi
  40ff64:	jp     0x40ffca
  40ff66:	inc    edx
  40ff67:	loop   0x40ff39
  40ff69:	adc    BYTE PTR [edi+0x1e5ff972],al
  40ff6f:	jb     0x40ff2a
  40ff71:	les    eax,FWORD PTR [ecx]
  40ff73:	scas   eax,DWORD PTR es:[edi]
  40ff74:	repz cmc 
  40ff76:	mov    ebx,ebx
  40ff78:	inc    esi
  40ff79:	mov    ebp,0xe8b6613d
  40ff7e:	(bad)  
  40ff7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff80:	or     al,0xf2
  40ff82:	or     eax,0x3da5dc64
  40ff87:	push   DWORD PTR ds:0x31443c5c
  40ff8d:	cmp    ch,ch
  40ff8f:	jg     0x40ffb4
  40ff91:	mov    DWORD PTR [eax*4-0x1c2d240],ecx
  40ff98:	imul   ebp,DWORD PTR [eax],0x3f640f0b
  40ff9e:	cmp    al,0xfe
  40ffa0:	push   es
  40ffa1:	call   0x9f03f370
  40ffa6:	add    eax,0x3c336a0f
  40ffab:	(bad)  
  40ffac:	out    dx,al
  40ffad:	fxch   st(3)
  40ffaf:	add    esp,DWORD PTR [ecx]
  40ffb1:	add    BYTE PTR [eax],al
  40ffb3:	add    BYTE PTR [ebx+0x73ee0106],al
  40ffb9:	hlt    
  40ffba:	(bad)  
  40ffbb:	(bad)  
  40ffbc:	mov    ch,0xfd
  40ffbe:	(bad)  
  40ffbf:	and    al,0xa3
  40ffc1:	(bad)  
  40ffc2:	(bad)  
  40ffc3:	sub    al,0xbf
  40ffc5:	std    
  40ffc6:	(bad)  
  40ffc7:	and    al,0xc3
  40ffc9:	mov    es,WORD PTR [ecx+edi*4-0x17]
  40ffcd:	les    eax,FWORD PTR [edi]
  40ffcf:	fidiv  WORD PTR [ebx+0x11]
  40ffd2:	jmp    DWORD PTR [esi-0x6840074b]
  40ffd8:	inc    esi
  40ffd9:	and    DWORD PTR [ecx],eax
  40ffdb:	pusha  
  40ffdc:	ss adc eax,0xbce81574
  40ffe2:	psadbw mm3,QWORD PTR [esp+edi*2-0x18]
  40ffe7:	out    dx,eax
  40ffe8:	sub    eax,0x9662fe3d
  40ffed:	add    al,0x8a
  40ffef:	pop    ds
  40fff0:	out    dx,al
  40fff1:	(bad)  
  40fff2:	push   ebp
  40fff3:	in     eax,dx
  40fff4:	mov    al,0x1
  40fff6:	ret    
  40fff7:	fcmovb st,st(5)
  40fff9:	hlt    
  40fffa:	or     ebp,ebx
  40fffc:	lods   al,BYTE PTR ds:[esi]
  40fffd:	xor    bh,BYTE PTR [edx]
  40ffff:	sub    ah,BYTE PTR [ebx+0x5c008b04]
  410005:	cmp    bh,ah
  410007:	mov    ah,0xe4
  410009:	(bad)  
  41000a:	std    
  41000b:	push   0xffffffea
  41000d:	ins    BYTE PTR es:[edi],dx
  41000e:	mov    ecx,DWORD PTR [ebp-0x6]
  410011:	jb     0x40fff9
  410013:	stos   DWORD PTR es:[edi],eax
  410014:	adc    al,ch
  410016:	std    
  410017:	add    DWORD PTR [eax],eax
  410019:	add    BYTE PTR [eax],al
  41001b:	dec    edi
  41001c:	in     al,dx
  41001d:	daa    
  41001e:	inc    ebp
  41001f:	ret    0x7cba
  410022:	sbb    cl,dh
  410024:	sbb    cl,BYTE PTR [ebx-0x38f699ba]
  41002a:	mov    DWORD PTR [edi+0x3a4689e4],ecx
  410030:	and    edi,eax
  410032:	lea    esi,[edi-0x8]
  410035:	xchg   DWORD PTR [ebp+0x3a],eax
  410038:	(bad)  [edi]
  41003a:	(bad)  
  41003b:	and    eax,0x324d89c2
  410040:	push   es
  410041:	iret   
  410042:	mov    esp,edx
  410044:	sub    al,BYTE PTR [edx+0x76bd25c0]
  41004a:	(bad)  
  41004b:	gs ret 0x3b45
  41004f:	in     al,0x32
  410051:	jo     0x410025
  410053:	xor    esp,DWORD PTR [esi-0x4]
  410056:	call   DWORD PTR [ebp+0x43]
  410059:	out    0x9f,eax
  41005b:	fs ret 0x55fd
  41005f:	xchg   ecx,eax
  410060:	fiadd  WORD PTR [ecx+0xf4c65f8]
  410066:	mov    esp,DWORD PTR [edi]
  410068:	aas    
  410069:	out    0x67,al
  41006b:	jne    0x41002e
  41006d:	std    
  41006e:	and    DWORD PTR [edx-0x3e],0x73
  410072:	add    al,0x99
  410074:	(bad)  
  410075:	jmp    0xdb5789ae
  41007a:	push   ebx
  41007b:	mov    edx,eax
  41007d:	jae    0x41008f
  41007f:	add    BYTE PTR [eax],al
  410081:	add    bl,dh
  410083:	jnp    0x410037
  410085:	(bad)  
  410086:	ds pop edx
  410088:	scas   eax,DWORD PTR es:[edi]
  410089:	(bad)  
  41008a:	es ss inc ebx
  41008d:	adc    al,0x23
  41008f:	pusha  
  410090:	ret    0xd9ff
  410093:	lock lds edx,FWORD PTR [ecx]
  410096:	fimul  DWORD PTR [edx-0x4d1f820e]
  41009c:	imul   DWORD PTR [edi]
  41009e:	retf   
  41009f:	inc    esi
  4100a0:	inc    ebx
  4100a1:	jae    0x41008b
  4100a3:	pop    eax
  4100a4:	mov    ebp,0xf21f70f
  4100a9:	rcr    BYTE PTR [eax+0x2f],0x7a
  4100ad:	sbb    al,cl
  4100af:	call   0xeb77:0x9af30b40
  4100b6:	push   0xa455f262
  4100bb:	xlat   BYTE PTR ds:[ebx]
  4100bc:	add    edi,edi
  4100be:	mov    esi,0x3cf60f29
  4100c3:	(bad)  
  4100c5:	out    0x5b,eax
  4100c7:	dec    esp
  4100c8:	inc    ebx
  4100c9:	(bad)  
  4100ca:	js     0x410111
  4100cc:	jge    0x4100cc
  4100ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100cf:	and    DWORD PTR [edi],ecx
  4100d1:	ror    BYTE PTR [eax],0x37
  4100d4:	mov    ebx,0x8bdf0b56
  4100d9:	dec    BYTE PTR [eax+edi*4]
  4100dc:	push   edx
  4100dd:	test   ch,bh
  4100df:	adc    BYTE PTR [ebp-0x76],dl
  4100e2:	mov    dh,0x3d
  4100e4:	scas   eax,DWORD PTR es:[edi]
  4100e5:	push   esi
  4100e6:	add    BYTE PTR [eax],al
  4100e8:	add    ah,dh
  4100ea:	adc    eax,edi
  4100ec:	mov    WORD PTR [ecx+eax*4+0x43],cs
  4100f0:	je     0x4100ed
  4100f2:	xchg   edi,eax
  4100f3:	aam    0xfe
  4100f5:	fdiv   QWORD PTR [ecx+0x265fc307]
  4100fb:	lods   al,BYTE PTR ds:[esi]
  4100fc:	out    0x7c,eax
  4100fe:	pop    es
  4100ff:	sahf   
  410100:	inc    esp
  410101:	(bad)
  410104:	pop    eax
  410105:	jmp    0x7030ac97
  41010a:	inc    edi
  41010b:	aam    0x1
  41010d:	jp     0x41012e
  41010f:	jb     0x41014e
  410111:	dec    ecx
  410112:	ficomp DWORD PTR [esi-0x16e84d5a]
  410118:	js     0x41014a
  41011a:	jecxz  0x4100f8
  41011c:	js     0x410156
  41011e:	jecxz  0x410110
  410120:	lods   eax,DWORD PTR ds:[esi]
  410121:	jns    0x4100d6
  410123:	(bad)  
  410124:	sti    
  410125:	jge    0x410118
  410127:	imul   eax,DWORD PTR [ebx-0x1b],0xfd4269d6
  41012e:	lods   al,BYTE PTR cs:[esi]
  410130:	pop    edx
  410131:	cmp    ch,BYTE PTR gs:[eax-0x3b]
  410135:	lock push es
  410137:	xchg   edi,eax
  410138:	into   
  410139:	repnz xor DWORD PTR [eax],edx
  41013c:	inc    eax
  41013d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013e:	(bad)  
  41013f:	aam    0xd5
  410141:	mov    ds:0x6f3c238f,eax
  410146:	(bad)  
  410147:	rcl    ah,1
  410149:	int3   
  41014a:	aaa    
  41014b:	(bad)
  41014e:	add    BYTE PTR [eax],al
  410150:	sub    al,0xa2
  410152:	mov    eax,ds:0xbe06f305
  410157:	mov    ecx,0x402b40e8
  41015c:	repz cmp DWORD PTR [ebx],esi
  41015f:	or     al,0x1b
  410161:	push   esp
  410162:	clc    
  410163:	add    eax,0x18a485f3
  410168:	sub    al,BYTE PTR [ebp-0x20]
  41016b:	add    ecx,DWORD PTR [ecx+0x7e0a6012]
  410171:	shr    ah,0xad
  410174:	in     al,0xc9
  410176:	jge    0x410191
  410178:	daa    
  410179:	adc    DWORD PTR [eax],eax
  41017b:	sub    edi,ebp
  41017d:	test   ebx,eax
  41017f:	frstor [ebx-0x3d]
  410182:	pop    ss
  410183:	mov    ecx,0xfbf41331
  410188:	mov    al,0x39
  41018a:	mov    DWORD PTR [edi],ebp
  41018c:	sub    al,0xd3
  41018e:	mov    bh,BYTE PTR ds:0x6a0bc27c
  410194:	jecxz  0x4101a7
  410196:	push   ebx
  410197:	push   0x37
  410199:	dec    edx
  41019a:	push   ebp
  41019b:	sahf   
  41019c:	repz data16 add cl,ch
  4101a0:	lock or DWORD PTR [edi+0x6ef0b],eax
  4101a7:	jb     0x410153
  4101a9:	add    DWORD PTR [ebx+0x13aceb29],eax
  4101af:	mov    ecx,0x11f3c27f
  4101b4:	add    BYTE PTR [eax],al
  4101b6:	add    ah,ah
  4101b8:	cs (bad) 
  4101ba:	inc    BYTE PTR [eax+0x38]
  4101bd:	adc    al,0xb5
  4101bf:	cli    
  4101c0:	(bad)  
  4101c1:	jmp    FWORD PTR [ecx-0x45]
  4101c4:	or     eax,0x82e1a985
  4101c9:	mov    esi,0xe806f0e9
  4101ce:	(bad)  
  4101cf:	sahf   
  4101d0:	cmp    dh,bh
  4101d2:	pusha  
  4101d3:	cmp    esi,DWORD PTR [ecx]
  4101d5:	mov    WORD PTR [ebx+eiz*8],gs
  4101d8:	hlt    
  4101d9:	cmc    
  4101da:	sbb    DWORD PTR [esi-0x4e],ebp
  4101dd:	out    dx,eax
  4101de:	ror    DWORD PTR ds:0x7fe8ffa2,0xc2
  4101e5:	sti    
  4101e6:	loop   0x4101a2
  4101e8:	mov    dl,0x3
  4101ea:	fidiv  DWORD PTR [ecx+0x3362732c]
  4101f0:	sub    eax,0xb4fe8e82
  4101f5:	add    al,BYTE PTR [eax]
  4101f7:	add    BYTE PTR [ecx],cl
  4101f9:	pop    edi
  4101fa:	cmp    ebx,DWORD PTR [esi+edi*2+0x2c]
  4101fe:	lea    eax,[edx]
  410200:	adc    al,0x6a
  410202:	adc    al,0x5d
  410204:	jg     0x4101f8
  410206:	push   ebx
  410207:	dec    ebp
  410208:	pop    ds
  410209:	cmp    al,0x16
  41020b:	mov    al,BYTE PTR [ebx+eax*4]
  41020e:	(bad)  
  41020f:	into   
  410210:	(bad)  
  410211:	mov    esi,0x7f4ecf74
  410216:	ret    
  410217:	rol    DWORD PTR [edx],1
  410219:	add    BYTE PTR [eax],al
  41021b:	add    BYTE PTR [eax],al
  41021d:	add    cl,dh
  41021f:	sti    
  410220:	jo     0x410204
  410222:	xor    DWORD PTR [ecx],ecx
  410224:	imul   esi,esi,0x2e1
  41022a:	cdq    
  41022b:	jg     0x410227
  41022d:	jne    0x41028a
  41022f:	xor    eax,edx
  410231:	test   ebp,ebx
  410233:	outs   dx,DWORD PTR ds:[esi]
  410234:	das    
  410235:	mov    edx,DWORD PTR [edi+0x56c081f8]
  41023b:	test   BYTE PTR [esi+0x4],dh
  41023e:	dec    ecx
  41023f:	xchg   edi,eax
  410240:	outs   dx,BYTE PTR ds:[esi]
  410241:	cld    
  410242:	aad    0x57
  410244:	mov    DWORD PTR [eax],ecx
  410246:	xlat   BYTE PTR ds:[ebx]
  410247:	retf   0x1272
  41024a:	adc    ecx,DWORD PTR [eax-0xa]
  41024d:	jbe    0x41029e
  41024f:	mov    ebx,DWORD PTR [ebx-0x8]
  410252:	icebp  
  410253:	fstp   TBYTE PTR [edi-0x5]
  410256:	call   0x404e:0xe9005987
  41025d:	add    eax,0x451
  410262:	and    edi,ebx
  410264:	jo     0x41023b
  410266:	xchg   ecx,eax
  410267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410268:	(bad)  [bx+di]
  41026b:	add    al,0x0
  41026d:	add    BYTE PTR [edi-0xcfe2677],cl
  410273:	sub    eax,0x8a668d02
  410278:	sub    ebx,DWORD PTR [ebp-0x62]
  41027b:	add    BYTE PTR [eax-0x7d],0xb3
  41027f:	xor    bl,BYTE PTR [ecx]
  410281:	inc    DWORD PTR [eax]
  410283:	add    BYTE PTR [eax],al
  410285:	pop    esi
  410286:	mov    dl,0x2b
  410288:	adc    eax,DWORD PTR [ebp+0x3e8c40a8]
  41028e:	fisubr WORD PTR [ebx]
  410290:	neg    DWORD PTR [edi]
  410292:	add    dh,BYTE PTR cs:[edx]
  410295:	mov    bl,0x70
  410297:	loopne 0x4102f3
  410299:	mov    edx,0x78000feb
  41029e:	push   0x3e
  4102a0:	mov    edi,fs
  4102a2:	sub    al,0xc7
  4102a4:	addr16 mov eax,0x1900022e
  4102aa:	cs fdivr st,st(6)
  4102ad:	ficomp WORD PTR [ecx+0x18]
  4102b0:	inc    eax
  4102b1:	repz sub BYTE PTR [eax+0x44],bh
  4102b5:	jecxz  0x410263
  4102b7:	inc    edi
  4102b8:	or     esp,DWORD PTR [ebp+esi*8+0x1c]
  4102bc:	rcl    BYTE PTR [eax],0x6b
  4102bf:	cmp    al,ch
  4102c1:	mov    ch,0x35
  4102c3:	add    cl,BYTE PTR [ecx+0x448b29ad]
  4102c9:	call   FWORD PTR [ebp-0x38048bc1]
  4102cf:	mov    al,BYTE PTR [ebp-0x16]
  4102d2:	lods   al,BYTE PTR ds:[esi]
  4102d3:	dec    eax
  4102d4:	or     bl,BYTE PTR [ebp+0x5301550]
  4102da:	out    dx,al
  4102db:	add    eax,DWORD PTR [ebx-0x17cced1]
  4102e1:	repnz out dx,eax
  4102e3:	(bad)  
  4102e4:	out    0x7e,eax
  4102e6:	inc    ebp
  4102e7:	aas    
  4102e8:	inc    BYTE PTR [eax]
  4102ea:	add    BYTE PTR [eax],al
  4102ec:	js     0x4102e0
  4102ee:	aas    
  4102ef:	push   esi
  4102f0:	popf   
  4102f1:	push   es
  4102f2:	xchg   ecx,eax
  4102f3:	(bad)  
  4102f5:	ss popf 
  4102f7:	test   ch,dh
  4102f9:	or     ebx,DWORD PTR [edi]
  4102fb:	jmp    0x410358
  4102fd:	ss mov cl,0x2
  410300:	repz push es
  410302:	adc    ebx,DWORD PTR [eax]
  410304:	fdivr  QWORD PTR [esp+esi*2-0x43018f72]
  41030b:	inc    ecx
  41030c:	int    0x36
  41030e:	sbb    BYTE PTR [ecx-0x21],al
  410311:	repnz inc bl
  410314:	mov    esp,0x6e0f2489
  410319:	inc    edi
  41031a:	in     eax,0x96
  41031c:	mov    cl,0xa1
  41031e:	loop   0x410300
  410320:	and    al,0x32
  410322:	out    0xb6,eax
  410324:	call   0x6980b65e
  410329:	dec    esi
  41032a:	inc    eax
  41032b:	in     al,dx
  41032c:	adc    BYTE PTR [edi],al
  41032e:	jmp    0x9b779fc0
  410333:	aas    
  410334:	xchg   esp,eax
  410335:	mov    ds:0x84754053,al
  41033a:	fwait
  41033b:	xor    edx,DWORD PTR [esi+eax*8-0x54]
  41033f:	add    esi,ebx
  410341:	sub    BYTE PTR [ecx],0x2a
  410344:	ret    0xfd35
  410347:	aas    
  410348:	mov    edi,0x58840481
  41034d:	pop    ss
  41034e:	call   0x839d:0xd9
  410355:	sub    eax,DWORD PTR [eax-0x54]
  410358:	push   ds
  410359:	mov    al,ds:0x613634a3
  41035e:	cmp    al,0x7b
  410360:	mov    ah,0xd4
  410362:	mov    DWORD PTR ds:0x5cf1ecbc,esp
  410368:	and    dl,BYTE PTR [edx-0x75]
  41036b:	lahf   
  41036c:	xor    bh,bh
  41036e:	popa   
  41036f:	cmp    al,BYTE PTR [esi]
  410371:	push   esi
  410372:	push   ss
  410373:	xlat   BYTE PTR ds:[ebx]
  410374:	push   ecx
  410375:	cld    
  410376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410377:	mov    esp,0x42e5fd88
  41037c:	or     DWORD PTR [edx-0x13],ebp
  41037f:	into   
  410380:	dec    ebx
  410381:	inc    esp
  410382:	cli    
  410383:	lock mov esi,ebp
  410386:	std    
  410387:	mov    ah,0x82
  410389:	inc    esi
  41038a:	repnz addr16 retf 0x60f7
  41038f:	mov    dh,BYTE PTR [ecx]
  410391:	push   cs
  410392:	lods   al,BYTE PTR ss:[esi]
  410394:	dec    BYTE PTR [edx-0x129134c]
  41039a:	aam    0xf8
  41039c:	lahf   
  41039d:	inc    edx
  41039f:	neg    BYTE PTR [esi]
  4103a1:	sub    eax,0x8b06f2e2
  4103a6:	cmp    DWORD PTR [edx+0x3b],ebp
  4103a9:	jae    0x410388
  4103ab:	imul   ecx,edx,0x808f6207
  4103b1:	fld    QWORD PTR [ecx-0x35]
  4103b4:	and    edi,edi
  4103b6:	call   0x744103bb
  4103bb:	jne    0x410430
  4103bd:	in     eax,0x2e
  4103bf:	retf   
  4103c0:	adc    ch,al
  4103c2:	sbb    BYTE PTR [ebx+ebp*4+0xe],cl
  4103c6:	and    al,0x81
  4103c8:	jl     0x4103c7
  4103ca:	sbb    eax,0xab74fbc3
  4103cf:	fsubr  st(7),st
  4103d1:	pop    ds
  4103d2:	retf   
  4103d3:	xor    al,0xfe
  4103d5:	arpl   WORD PTR [edx],di
  4103d7:	sbb    BYTE PTR [edi+0x47],bl
  4103da:	sbb    BYTE PTR [esi],bh
  4103dc:	shr    ebp,0xf0
  4103df:	fisttp DWORD PTR [edx+0x52d647c5]
  4103e5:	aaa    
  4103e6:	cmp    al,0x80
  4103e8:	jns    0x4103ea
  4103ea:	cmp    al,BYTE PTR [eax+0x1074f7f5]
  4103f0:	test   BYTE PTR [ebp-0xfdce328],0x9a
  4103f7:	jae    0x4103fa
  4103f9:	xor    al,BYTE PTR [ecx-0x306bf241]
  4103ff:	(bad)  
  410400:	out    0xef,al
  410402:	stos   BYTE PTR es:[edi],al
  410403:	or     eax,DWORD PTR [eax]
  410405:	pop    cx
  410407:	lock cs jae 0x4103d9
  41040b:	ss mov esi,0xfd7dffeb
  410411:	jne    0x4103f1
  410413:	cmp    ecx,ebx
  410415:	jmp    0x4103f0
  410417:	xchg   edi,eax
  410418:	pop    ebp
  410419:	sub    al,0x41
  41041b:	mov    esi,0xd3e6
  410420:	add    dl,bh
  410422:	or     al,BYTE PTR [eax]
  410424:	jge    0xcdcc561a
  41042a:	fbld   TBYTE PTR [eax-0x3b]
  41042d:	xor    eax,0x54c083f5
  410432:	sar    ebp,1
  410434:	jne    0x4103fc
  410436:	pop    esp
  410437:	push   ecx
  410438:	call   0x3ecbed
  41043d:	or     al,BYTE PTR [edi-0x6]
  410440:	add    DWORD PTR [edi+0x26],ebx
  410443:	mov    BYTE PTR [esi+0x5b],al
  410446:	mov    WORD PTR [esi-0x390d9e8c],?
  41044c:	push   edi
  41044d:	gs mov edx,0x977a53be
  410453:	inc    esp
  410454:	add    al,0x6a
  410456:	add    eax,0x585946b6
  41045b:	mov    DWORD PTR [ebp+0x42],eax
  41045e:	repz cs call 0x3fe62b
  410465:	repz lea eax,[edx]
  410468:	pop    edi
  410469:	(bad)  
  41046c:	shl    edi,0x1d
  41046f:	aad    0x8a
  410471:	pop    es
  410472:	lahf   
  410473:	das    
  410474:	stos   DWORD PTR es:[edi],eax
  410475:	lock sbb eax,0x1c9d5302
  41047b:	pop    DWORD PTR [ebx+eax*1-0x12]
  41047f:	sub    ebx,DWORD PTR [ecx-0x76fde26f]
  410485:	add    BYTE PTR [eax],al
  410487:	add    BYTE PTR [esi],dh
  410489:	mov    al,BYTE PTR [esi-0xfd2a141]
  41048f:	mov    edi,0x64bca
  410494:	repz mov eax,0xb376efb6
  41049a:	mov    bh,0xd
  41049c:	js     0x410509
  41049e:	sub    ebx,esp
  4104a0:	sub    BYTE PTR [esp+edi*1-0x7935d178],0xbf
  4104a8:	sub    BYTE PTR es:[ebx],bh
  4104ab:	je     0x410444
  4104ad:	lds    eax,FWORD PTR [edx]
  4104af:	mov    ah,0x9c
  4104b1:	int3   
  4104b2:	sub    cl,bl
  4104b4:	jo     0x410500
  4104b6:	pop    esi
  4104b7:	dec    DWORD PTR [ebx+edi*2]
  4104ba:	adc    al,BYTE PTR [eax]
  4104bc:	call   FWORD PTR [edi+edi*2-0x2f6c0d03]
  4104c3:	mov    dh,dh
  4104c5:	xor    eax,0x710b5e8d
  4104ca:	cmp    edx,DWORD PTR [edi+edx*2]
  4104cd:	das    
  4104ce:	ret    0x71ff
  4104d1:	cmp    BYTE PTR [edx],0xff
  4104d4:	outs   dx,DWORD PTR ds:[esi]
  4104d5:	cmp    esi,DWORD PTR [esi+0x2eb27832]
  4104db:	sub    BYTE PTR [ecx+ebp*1],0x7f
  4104df:	(bad)
  4104e2:	push   ebx
  4104e3:	sbb    BYTE PTR [ebp-0x10e92225],bl
  4104e9:	sbb    al,0x29
  4104eb:	add    al,0x0
  4104ed:	add    BYTE PTR [eax],al
  4104ef:	jo     0x41053b
  4104f1:	fadd   QWORD PTR [esi+0x3cd9ba5c]
  4104f7:	scas   eax,DWORD PTR es:[edi]
  4104f8:	cs jno 0x4104c1
  4104fb:	add    al,0x85
  4104fd:	scas   al,BYTE PTR es:[edi]
  4104fe:	pop    eax
  4104ff:	repz push es
  410501:	jmp    0x1a77bcfe
  410506:	pop    esi
  410507:	or     DWORD PTR [edx+esi*2],ecx
  41050a:	(bad)  
  41050b:	in     al,0x80
  41050d:	sub    esp,DWORD PTR [eax+0x41]
  410510:	xor    dh,bl
  410512:	xor    eax,DWORD PTR [edx]
  410514:	(bad)  
  410515:	call   0xb97864a2
  41051a:	pop    eax
  41051b:	and    DWORD PTR [edi+0x6f303a4],ebx
  410521:	sbb    cl,BYTE PTR [edi-0x6caf80c9]
  410527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410528:	or     cl,ch
  41052a:	lock ins BYTE PTR es:[edi],dx
  41052c:	push   es
  41052d:	pop    edi
  41052e:	sti    
  41052f:	das    
  410530:	pop    ss
  410531:	daa    
  410532:	(bad)  
  410533:	imul   ecx,DWORD PTR [ebx],0xfffffff6
  410536:	xchg   esi,eax
  410537:	push   esp
  410538:	jg     0x4104d5
  41053a:	cmp    al,0x7b
  41053c:	mov    esp,0x27278a18
  410541:	test   al,0xc
  410543:	dec    esp
  410544:	dec    ecx
  410545:	outs   dx,DWORD PTR ds:[esi]
  410546:	(bad)  
  410547:	pushf  
  410548:	out    dx,al
  410549:	sub    DWORD PTR [esi*2-0xcfc1645],ecx
  410550:	jge    0x4104f5
  410552:	pop    edi
  410553:	add    BYTE PTR [eax],al
  410555:	add    cl,dh
  410557:	inc    ebp
  410558:	mov    ecx,0xf8bc5d51
  41055d:	out    dx,eax
  41055e:	mov    WORD PTR [ebp+0x7f8eeeff],ds
  410564:	inc    esp
  410565:	xor    eax,0x9f7c8319
  41056a:	cld    
  41056b:	pop    esp
  41056c:	gs xchg edx,eax
  41056e:	and    al,0x31
  410570:	mov    bl,bl
  410572:	push   esi
  410573:	cmp    al,0xda
  410575:	call   0x3c440c6a
  41057a:	retf   
  41057b:	jle    0x4105d1
  41057d:	mov    ch,0xf8
  41057f:	jns    0x4105ce
  410581:	push   cs
  410582:	jbe    0x41053f
  410584:	rol    DWORD PTR [edi-0x4],cl
  410587:	inc    eax
  410588:	push   cs
  410589:	ins    BYTE PTR es:[edi],dx
  41058a:	xchg   ecx,eax
  41058b:	xor    esi,edi
  41058d:	jmp    0xd0bef424
  410592:	stc    
  410593:	mov    ebx,DWORD PTR [ebx-0x74f90f17]
  410599:	sub    al,0x13
  41059b:	mov    dl,0x3b
  41059d:	f2xm1  
  41059f:	add    DWORD PTR [ebp+0x6ed06],eax
  4105a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105a6:	repz push ss
  4105a8:	add    DWORD PTR [edx+esi*4+0x1],esi
  4105ac:	push   eax
  4105ad:	jo     0x410619
  4105af:	xor    eax,0x314fdde7
  4105b4:	(bad)  
  4105b5:	bound  edi,QWORD PTR [edi]
  4105b7:	mov    ebx,edx
  4105b9:	mov    ebp,0x4c000000
  4105be:	out    dx,al
  4105bf:	jl     0x41059a
  4105c1:	inc    edx
  4105c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c3:	sub    BYTE PTR [edi],0xf8
  4105c6:	jg     0x41063c
  4105c8:	inc    ecx
  4105c9:	push   0xffffffb4
  4105cb:	push   cs
  4105cc:	xchg   ebx,eax
  4105cd:	in     al,0x31
  4105cf:	je     0x4105e2
  4105d1:	inc    ecx
  4105d2:	xor    BYTE PTR [edx*8+0x69ffc702],dl
  4105d9:	mov    bl,0xfd
  4105db:	test   BYTE PTR [eax],al
  4105dd:	or     dh,BYTE PTR [edi+0xc]
  4105e0:	inc    edi
  4105e1:	fcmovnb st,st(4)
  4105e3:	fld    DWORD PTR [ecx]
  4105e5:	pop    edx
  4105e6:	add    eax,0x7b1a7d3b
  4105eb:	fucomip st,st(3)
  4105ed:	aad    0x63
  4105ef:	std    
  4105f0:	fistp  DWORD PTR [ebx]
  4105f2:	add    eax,0x30410300
  4105f7:	stc    
  4105f8:	jb     0x41061d
  4105fa:	add    BYTE PTR [ebx+0x10],0xc3
  4105fe:	retf   0x1d9
  410601:	sbb    al,BYTE PTR ds:0x7c8fc303
  410607:	fld    DWORD PTR [ecx]
  410609:	or     al,BYTE PTR ds:0xb85de857
  41060f:	std    
  410610:	inc    DWORD PTR [ecx+0x56c0320a]
  410616:	les    esi,FWORD PTR [edx+0xc]
  410619:	ins    DWORD PTR es:[edi],dx
  41061a:	aas    
  41061b:	push   cs
  41061c:	mov    eax,DWORD PTR [edi]
  41061e:	sbb    edx,DWORD PTR [ebx-0x18]
  410621:	add    BYTE PTR [eax],al
  410623:	add    dl,ch
  410625:	imul   edi,esi,0x92e2e9ff
  41062b:	mov    dl,0x4d
  41062d:	in     eax,dx
  41062e:	mov    esi,DWORD PTR [ebp+0x16]
  410631:	fdiv   QWORD PTR [esi+0x59]
  410634:	call   0x4:0x9be0e904
  41063b:	xor    ebx,eax
  41063d:	add    cl,0xf7
  410640:	push   edi
  410641:	aam    0x39
  410643:	push   ebp
  410644:	retf   0x2c78
  410647:	cmp    WORD PTR [ebp+0xad1840d],0x0
  410650:	pusha  
  410651:	or     bl,BYTE PTR [eax+0x66]
  410654:	jecxz  0x41069c
  410656:	mov    dl,0xf
  410658:	repz iret 
  41065a:	shl    BYTE PTR [edi],0xd5
  41065d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41065e:	enter  0xcd26,0xde
  410662:	and    eax,DWORD PTR [edi]
  410664:	aad    0x34
  410666:	inc    ebx
  410667:	gs jp  0x4106cd
  41066a:	jo     0x4105f8
  41066c:	mov    ch,0x3c
  41066e:	lods   al,BYTE PTR ds:[esi]
  41066f:	add    esp,DWORD PTR [ebx+0x18b7beba]
  410675:	add    esp,DWORD PTR [edx+0x916a538]
  41067b:	test   BYTE PTR [edi+0x1f],bh
  41067e:	add    al,BYTE PTR [eax]
  410680:	mov    DWORD PTR [eax-0x26],edx
  410683:	gs jp  0x410671
  410686:	outs   dx,DWORD PTR ds:[esi]
  410687:	push   cs
  410688:	add    BYTE PTR [eax],al
  41068a:	add    BYTE PTR ds:0x6865fde0,bh
  410690:	adc    bl,bh
  410692:	xor    bh,BYTE PTR gs:[edi+0xb]
  410696:	data16 clc 
  410698:	pop    esi
  410699:	mov    eax,ds:0x86d02e88
  41069e:	inc    ebp
  41069f:	or     al,BYTE PTR [esp+edx*1]
  4106a2:	push   eax
  4106a3:	data16 loop 0x41071d
  4106a6:	dec    edi
  4106a7:	int3   
  4106a8:	pop    edx
  4106a9:	repnz adc eax,0xb7071e33
  4106af:	ss cli 
  4106b1:	test   bl,al
  4106b3:	out    0x53,eax
  4106b5:	add    eax,ebp
  4106b7:	popa   
  4106b8:	je     0x4106bc
  4106ba:	add    ah,dh
  4106bc:	pop    DWORD PTR [ebx+0x4f]
  4106bf:	outs   dx,BYTE PTR ds:[esi]
  4106c0:	stos   BYTE PTR es:[edi],al
  4106c1:	(bad)  
  4106c3:	xchg   esp,eax
  4106c4:	enter  0x492b,0xc7
  4106c8:	push   ds
  4106c9:	add    cl,BYTE PTR [ebx+0x2f37262e]
  4106cf:	outs   dx,BYTE PTR ds:[esi]
  4106d0:	pop    DWORD PTR [edi]
  4106d2:	push   0xfffffff0
  4106d4:	push   es
  4106d5:	ret    0xaf86
  4106d8:	into   
  4106d9:	sbb    al,0x39
  4106db:	gs jge 0x410681
  4106de:	sub    edx,DWORD PTR [edi+edx*4-0x2c]
  4106e2:	add    dh,bl
  4106e4:	das    
  4106e5:	jnp    0x4106f6
  4106e7:	jle    0x4106b2
  4106e9:	xor    al,0xac
  4106eb:	pop    esp
  4106ec:	in     al,dx
  4106ed:	call   0x4106f5
  4106f2:	push   0xa8fe003f
  4106f7:	push   es
  4106f8:	jmp    0x20fb737c
  4106fd:	cmp    DWORD PTR [edi-0x580c69e6],ebx
  410703:	push   es
  410704:	jmp    0x212391d9
  410709:	xchg   DWORD PTR [edi-0x63799482],esp
  41070f:	xor    dh,BYTE PTR [ebp+0x1daa1438]
  410715:	add    al,0xf3
  410717:	mov    ch,BYTE PTR [eax+0x132e0aaf]
  41071d:	adc    BYTE PTR [eax-0x44],bh
  410720:	in     al,0x8c
  410722:	repz aad 0x5b
  410725:	mov    ?,WORD PTR [ebx+ebp*1]
  410728:	test   DWORD PTR [eax],edi
  41072a:	and    ch,BYTE PTR [esi]
  41072c:	fdivr  DWORD PTR [edi-0x7c]
  41072f:	(bad)  
  410730:	imul   eax,DWORD PTR [edx+esi*8],0x6
  410734:	jmp    0xe97446c5
  410739:	scas   al,BYTE PTR es:[edi]
  41073a:	nop
  41073b:	xchg   DWORD PTR [esi],ebx
  41073d:	add    al,0xf4
  41073f:	cmp    DWORD PTR [ebx+eax*1],0xfffffff3
  410743:	push   es
  410744:	inc    ecx
  410745:	jmp    0x802a0fce
  41074a:	dec    esp
  41074b:	(bad)  
  41074c:	fs inc eax
  41074e:	test   BYTE PTR [esi],ch
  410750:	(bad)  
  410751:	call   0xfb38cacb
  410756:	add    BYTE PTR [eax],al
  410758:	add    BYTE PTR [ebx-0xe103a43],bh
  41075e:	jg     0x4107dc
  410760:	adc    eax,0xe95e5418
  410765:	lock adc edi,0x70b9bbd2
  41076c:	rol    BYTE PTR [ebp+0x77877536],0x39
  410773:	imul   ebx,ebp,0x5ce7b2fb
  410779:	xor    bh,ch
  41077b:	dec    edi
  41077c:	out    0x2,al
  41077e:	jmp    0x410795
  410780:	sub    edi,ebp
  410782:	mov    ebx,eax
  410784:	in     eax,0x73
  410786:	outs   dx,BYTE PTR ds:[esi]
  410787:	jae    0x410768
  410789:	push   ebp
  41078a:	xchg   ebp,eax
  41078c:	mov    ds:0x20006f6,al
  410791:	dec    edx
  410792:	ss jno 0x41072c
  410795:	enter  0xfded,0x27
  410799:	out    0x86,eax
  41079b:	jge    0x41078e
  41079d:	icebp  
  41079e:	mov    ah,0x2d
  4107a0:	adc    BYTE PTR [ecx+edx*2],bl
  4107a3:	add    cl,ch
  4107a5:	lock or ebx,edi
  4107a8:	rcr    BYTE PTR [ecx],cl
  4107aa:	mov    eax,0x35b27218
  4107af:	push   0x728a9
  4107b4:	jmp    0x5ecd51aa
  4107b9:	sbb    BYTE PTR [edi],al
  4107bb:	add    cl,ch
  4107bd:	add    BYTE PTR [eax],al
  4107bf:	add    BYTE PTR [ebp-0x2364b4db],bh
  4107c5:	sub    al,0xea
  4107c7:	jmp    0x41076b
  4107c9:	ins    DWORD PTR es:[edi],dx
  4107ca:	sub    DWORD PTR [ecx],0x63
  4107cd:	or     bh,bh
  4107cf:	add    BYTE PTR [edi-0xf],al
  4107d2:	mov    DWORD PTR [ebp+0x32],eax
  4107d5:	pop    edx
  4107d6:	out    0xad,al
  4107d8:	or     DWORD PTR gs:[eax],eax
  4107db:	push   ebx
  4107dc:	xor    dh,ah
  4107de:	scas   al,BYTE PTR es:[edi]
  4107df:	call   DWORD PTR ds:0x2f47380
  4107e5:	fcom   DWORD PTR [ebp+0x0]
  4107e8:	dec    edx
  4107e9:	xor    BYTE PTR [ebx+0x8],0xb7
  4107ed:	je     0x410805
  4107ef:	push   edi
  4107f0:	cmc    
  4107f1:	pop    ss
  4107f2:	in     al,dx
  4107f3:	adc    bl,BYTE PTR [edx+0x45146a09]
  4107f9:	jbe    0x4107e1
  4107fb:	or     DWORD PTR [edi+eax*1],0x56
  4107ff:	jmp    FWORD PTR [edi]
  410801:	xor    eax,0x881a4014
  410806:	ret    0x8f0c
  410809:	leave  
  41080a:	jae    0x410819
  41080c:	mov    al,0x16
  41080e:	push   eax
  41080f:	push   esi
  410810:	xor    eax,0xda163416
  410815:	add    al,BYTE PTR [ebx-0x2c3e93c]
  41081b:	adc    eax,0x40173a
  410820:	addr16 mov bh,0x56
  410823:	cld    
  410824:	add    BYTE PTR [eax],al
  410826:	add    BYTE PTR [ebp-0x46bc190b],al
  41082c:	add    eax,DWORD PTR [eax]
  41082e:	mov    eax,DWORD PTR [edi]
  410830:	jecxz  0x410873
  410832:	mov    DWORD PTR [edi],edx
  410834:	jecxz  0x41086f
  410836:	pop    ebp
  410837:	xchg   edx,eax
  410838:	add    eax,0xf5473082
  41083d:	std    
  41083e:	jmp    0x411068
  410843:	daa    
  410844:	inc    edi
  410845:	push   cs
  410846:	xor    esi,DWORD PTR [ecx]
  410848:	pop    eax
  410849:	xchg   DWORD PTR [ebp-0xd],ebx
  41084c:	and    DWORD PTR [edx],ebp
  41084e:	icebp  
  41084f:	xor    eax,0x3689021e
  410854:	dec    edx
  410855:	stc    
  410856:	ret    0x76ff
  410859:	sti    
  41085a:	pop    esp
  41085b:	jecxz  0x4108c8
  41085d:	test   BYTE PTR [ebp+esi*8-0x261076b4],0x29
  410865:	xchg   DWORD PTR [ebp-0xc],eax
  410868:	je     0x41083c
  41086a:	inc    BYTE PTR [esi]
  41086c:	push   edx
  41086d:	or     al,0x40
  41086f:	repz mov al,ds:0xde760b3e
  410875:	scas   al,BYTE PTR es:[edi]
  410876:	or     eax,0xda3c9eb0
  41087b:	repnz sbb eax,0x4d963b02
  410881:	mov    al,0xdf
  410883:	sbb    BYTE PTR [ebx],ch
  410885:	cmp    BYTE PTR [ebp-0x5],0x1d
  410889:	scas   al,BYTE PTR es:[edi]
  41088a:	push   cs
  41088b:	add    BYTE PTR [eax],al
  41088d:	add    BYTE PTR [ebx+ecx*8],bl
  410890:	jnp    0x457d3644
  410896:	sti    
  410897:	sbb    eax,0x1da5f12a
  41089c:	add    bh,bh
  41089e:	xchg   BYTE PTR [ecx+0x2a],cl
  4108a1:	xor    eax,DWORD PTR [ebx+0x5d]
  4108a4:	xor    al,0x8c
  4108a6:	data16 xor ch,BYTE PTR [edx]
  4108a9:	pop    ss
  4108aa:	cmp    al,0x1e
  4108ac:	add    cl,BYTE PTR [ebx+0x7685265e]
  4108b2:	sti    
  4108b3:	repz xor al,0x14
  4108b6:	fisttp WORD PTR [edi-0x3e]
  4108b9:	(bad)  
  4108ba:	jns    0x41089e
  4108bc:	dec    edi
  4108bd:	imul   esp,edi,0x230e43a0
  4108c3:	mov    eax,ds:0x744033c
  4108c8:	pavgw  xmm2,XMMWORD PTR [ecx+ebp*4]
  4108cd:	add    esi,DWORD PTR [eax+0x42]
  4108d0:	in     al,0xcd
  4108d2:	xchg   ebp,eax
  4108d3:	adc    DWORD PTR [ecx+0x12],ebx
  4108d6:	xor    eax,DWORD PTR [edi]
  4108d8:	je     0x410949
  4108da:	sbb    al,0x2b
  4108dc:	cmp    eax,0x35c1b635
  4108e1:	add    ecx,DWORD PTR [ebx-0xcfd0585]
  4108e7:	sub    ebx,DWORD PTR [ebx+0x4d1f4c27]
  4108ed:	xor    eax,0x1f9b2b5d
  4108f2:	add    BYTE PTR [eax],al
  4108f4:	add    BYTE PTR [edi+eiz*1+0x3d],cl
  4108f8:	xor    eax,0x34ab804d
  4108fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108fe:	int3   
  4108ff:	mov    eax,ds:0xe916324a
  410904:	into   
  410905:	imul   ebx,DWORD PTR [edx],0x8b02867
  41090b:	jmp    0x3615c913
  410910:	xchg   DWORD PTR [edi+0x46],esp
  410913:	shl    DWORD PTR [edx*1+0xc2e5c1e],cl
  41091a:	sub    edi,ecx
  41091c:	pop    eax
  41091d:	ja     0x4108e0
  41091f:	js     0x4108f4
  410921:	imul   ecx,ecx,0xffffffb8
  410924:	mov    dl,BYTE PTR [edi-0x1f29a0e6]
  41092a:	add    BYTE PTR [ebx+0x3c],0x7b
  41092e:	int3   
  41092f:	pushf  
  410930:	sub    edi,DWORD PTR [eax-0x33]
  410933:	call   0x2c31563b
  410938:	je     0x41097a
  41093a:	div    DWORD PTR [ebx-0x42]
  41093d:	xchg   esp,eax
  41093e:	xlat   BYTE PTR ds:[ebx]
  41093f:	imul   edi,DWORD PTR [esi-0x7f002840],0xffffffcc
  410946:	std    
  410947:	add    cl,ch
  410949:	sub    al,0x6a
  41094b:	jae    0x410953
  41094d:	fidiv  WORD PTR [edx+0x364d5efb]
  410953:	out    0x61,eax
  410955:	or     DWORD PTR [edx],ebp
  410957:	dec    BYTE PTR [esi+0x0]
  41095a:	add    BYTE PTR [eax],al
  41095c:	pop    ebp
  41095d:	mov    BYTE PTR ss:[eax+eax*8-0x387185df],ch
  410965:	sub    BYTE PTR [eax+0x5c7ec494],cl
  41096b:	xor    DWORD PTR [ecx-0x35],edi
  41096e:	sti    
  41096f:	je     0x410956
  410971:	inc    ebp
  410972:	cld    
  410973:	push   ds
  410974:	daa    
  410975:	mov    edx,0xba04ac8c
  41097a:	out    0x10,eax
  41097c:	cli    
  41097d:	pop    es
  41097e:	add    BYTE PTR [ebp-0x50],ch
  410981:	mov    ch,0x1e
  410983:	dec    BYTE PTR [esi+0x47cfe2e]
  410989:	and    dl,BYTE PTR [eax+eax*2-0x10]
  41098d:	push   es
  41098e:	call   FWORD PTR [ebx+ebp*8+0x7e]
  410992:	inc    esp
  410993:	int    0xff
  410995:	shr    DWORD PTR [esi+0x5c7ee0d6],0xd5
  41099c:	mov    cs,edx
  41099e:	div    DWORD PTR [eax+0x22]
  4109a1:	cs (bad) 
  4109a3:	xor    al,0xbb
  4109a5:	and    DWORD PTR [esi],esi
  4109a7:	xchg   al,al
  4109a9:	sub    BYTE PTR [ecx-0x28],ch
  4109ac:	jae    0x410958
  4109ae:	fild   DWORD PTR [ecx+0x7]
  4109b1:	fiadd  DWORD PTR ds:0x4c7df0e8
  4109b7:	test   esp,eax
  4109b9:	cmp    al,0xb7
  4109bb:	and    eax,0xffffe98a
  4109c0:	add    BYTE PTR [eax],al
  4109c2:	add    BYTE PTR [ebp-0x20c639bf],bh
  4109c8:	repnz dec edi
  4109ca:	sysret 
  4109cc:	inc    eax
  4109cd:	out    dx,al
  4109ce:	push   eax
  4109cf:	sbb    eax,0xdfe3ab0
  4109d4:	test   BYTE PTR [ecx+0x43865ac7],0xe8
  4109db:	pop    ecx
  4109dc:	push   ebp
  4109dd:	out    0xbb,al
  4109df:	xor    dh,dh
  4109e1:	std    
  4109e2:	adc    esi,0xfffffffa
  4109e5:	(bad)  
  4109e6:	jne    0x4109a2
  4109e8:	test   eax,0xa4b4e8ee
  4109ed:	std    
  4109ee:	call   FWORD PTR ds:0xfce8ea70
  4109f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f5:	std    
  4109f6:	inc    DWORD PTR ds:0xf5f619d5
  4109fc:	int3   
  4109fd:	and    DWORD PTR [ebp-0xe],esi
  410a00:	cwde   
  410a01:	in     al,dx
  410a02:	add    DWORD PTR [edx+0x5],ebx
  410a05:	mov    eax,esi
  410a07:	iret   
  410a08:	xchg   DWORD PTR [esi-0x790bc203],edi
  410a0e:	sbb    DWORD PTR [ebx+0x6b],ebx
  410a11:	jae    0x410a0d
  410a13:	lods   eax,DWORD PTR ds:[esi]
  410a14:	push   esp
  410a15:	pop    ecx
  410a16:	leave  
  410a17:	dec    ecx
  410a18:	dec    esi
  410a19:	mov    esp,ebp
  410a1b:	mov    ecx,esp
  410a1d:	test   BYTE PTR [ecx-0x16eb2],0x1a
  410a24:	push   eax
  410a25:	mov    ecx,ebx
  410a27:	add    BYTE PTR [eax],al
  410a29:	add    BYTE PTR [ecx-0x2aa9fdb0],al
  410a2f:	jg     0x410a01
  410a31:	je     0x4109fa
  410a33:	cmc    
  410a34:	jae    0x410a46
  410a36:	popa   
  410a37:	inc    edi
  410a38:	push   es
  410a39:	inc    DWORD PTR [edi]
  410a3b:	pop    es
  410a3c:	push   0x5
  410a3e:	repz cmc 
  410a40:	sbb    edx,DWORD PTR [edi+edi*1+0x1e]
  410a44:	add    al,BYTE PTR [ebx+esi*4-0x1c9657d6]
  410a4b:	call   0x971c:0x15df23ae
  410a52:	neg    BYTE PTR [esi]
  410a54:	add    bh,bh
  410a56:	and    BYTE PTR [esi],dh
  410a58:	jg     0x410acd
  410a5a:	xlat   BYTE PTR ds:[ebx]
  410a5b:	sub    DWORD PTR [ecx],esi
  410a5d:	jb     0x410a4e
  410a5f:	(bad)
  410a62:	mov    WORD PTR [ecx-0x65853983],?
  410a68:	out    0x93,al
  410a6a:	repz sbb eax,0xf055e802
  410a70:	xor    esi,edi
  410a72:	js     0x410a62
  410a74:	xchg   ebp,esi
  410a76:	fild   QWORD PTR [ecx]
  410a78:	fmul   DWORD PTR [edx+0x437f6e34]
  410a7e:	(bad)  
  410a80:	shl    bh,cl
  410a82:	sub    edi,esp
  410a84:	xor    esi,edi
  410a86:	popf   
  410a87:	adc    eax,0x293cadd0
  410a8c:	jle    0x410ad1
  410a8e:	add    BYTE PTR [eax],al
  410a90:	add    BYTE PTR [edi],cl
  410a92:	push   esi
  410a93:	sar    dh,cl
  410a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a96:	dec    ebp
  410a97:	xor    DWORD PTR [edi+esi*8+0x20],esi
  410a9b:	mov    dh,0x7
  410a9d:	sbb    al,0xcd
  410a9f:	sti    
  410aa0:	out    0xf5,eax
  410aa2:	in     eax,dx
  410aa3:	add    eax,DWORD PTR [eax]
  410aa5:	jle    0x410a79
  410aa7:	out    0x17,eax
  410aa9:	jns    0x410b11
  410aab:	sbb    ecx,DWORD PTR [edx-0x76cf96d6]
  410ab1:	xor    BYTE PTR [ecx],dl
  410ab3:	rcr    BYTE PTR [edx+0x78],cl
  410ab6:	inc    edx
  410ab7:	into   
  410ab8:	shl    edi,0x6
  410abb:	jmp    0x695b7496
  410ac0:	and    al,bh
  410ac2:	sar    BYTE PTR ds:0xec9cdc7d,1
  410ac8:	jle    0x410af9
  410aca:	and    ebx,DWORD PTR [eax]
  410acc:	fimul  DWORD PTR [edx+0x28]
  410acf:	mov    ecx,0x511b530
  410ad4:	push   ss
  410ad5:	xor    eax,DWORD PTR [edi]
  410ad7:	fs inc esp
  410ad9:	and    bh,ah
  410adb:	scas   eax,DWORD PTR es:[di]
  410add:	mov    al,ds:0xf303f906
  410ae2:	mov    cl,0xfd
  410ae4:	cmp    BYTE PTR [edi],dh
  410ae6:	das    
  410ae7:	out    0x2,eax
  410ae9:	repz push es
  410aeb:	mov    esp,0x44b1c801
  410af0:	jge    0x410b21
  410af2:	aaa    
  410af3:	icebp  
  410af4:	dec    ecx
  410af5:	add    BYTE PTR [eax],al
  410af7:	add    dh,ah
  410af9:	add    al,BYTE PTR [edx]
  410afb:	dec    edx
  410afc:	jns    0x410b2c
  410afe:	jno    0x410b49
  410b00:	mov    ebp,0xbf452fc8
  410b05:	jnp    0x410b0b
  410b07:	test   DWORD PTR [eax-0x26],ebx
  410b0a:	mov    dh,0xf4
  410b0c:	ds jnp 0x410b38
  410b0f:	jnp    0x410ad8
  410b11:	adc    BYTE PTR cs:[ebp+esi*1+0x27],bl
  410b16:	cmc    
  410b17:	test   BYTE PTR [eax+ecx*1],ah
  410b1a:	fiadd  WORD PTR [ebp+0x3e9061e]
  410b20:	outs   dx,BYTE PTR ds:[esi]
  410b21:	rcr    esp,0xd3
  410b24:	mov    al,dh
  410b26:	inc    edx
  410b27:	adc    ah,BYTE PTR [eax-0x20cf3264]
  410b2d:	mov    ds:0x81fcc3da,al
  410b32:	test   al,0x0
  410b34:	outs   dx,DWORD PTR ds:[esi]
  410b35:	dec    ecx
  410b36:	(bad)  
  410b37:	call   0xaab122c
  410b3c:	fs retf 
  410b3e:	rcl    DWORD PTR [ebx],cl
  410b40:	xchg   esi,edx
  410b42:	(bad)  
  410b43:	hlt    
  410b44:	fdiv   st(4),st
  410b46:	aas    
  410b47:	jmp    0x374c55c3
  410b4c:	gs add al,0x8d
  410b4f:	sub    al,0x1b
  410b51:	(bad)  
  410b52:	push   edx
  410b53:	adc    eax,DWORD PTR [edx]
  410b55:	and    eax,0xc7050114
  410b5a:	jmp    DWORD PTR [ebx+0x0]
  410b5d:	add    BYTE PTR [eax],al
  410b5f:	xor    BYTE PTR ds:0x6f08b84,dl
  410b65:	add    BYTE PTR [esi-0x402c5ceb],dh
  410b6b:	cmovge ecx,DWORD PTR [edi+0x42]
  410b6f:	or     BYTE PTR [ecx],0xf0
  410b72:	push   0xffffffc2
  410b74:	add    ecx,DWORD PTR [edi]
  410b76:	data16 hlt 
  410b78:	and    eax,0x14eee9fe
  410b7d:	xor    BYTE PTR [eax],0x9
  410b80:	call   0xec74:0x2e096904
  410b87:	outs   dx,DWORD PTR ds:[esi]
  410b88:	push   ds
  410b89:	add    al,0x9c
  410b8b:	dec    eax
  410b8c:	xchg   ecx,eax
  410b8d:	ret    0x2dc2
  410b90:	adc    al,BYTE PTR [ecx]
  410b92:	scas   al,BYTE PTR es:[edi]
  410b93:	icebp  
  410b94:	mov    al,0xff
  410b96:	imul   eax,DWORD PTR [edx],0xadd8730b
  410b9c:	mov    eax,ds:0x2e4b1534
  410ba1:	xchg   esp,eax
  410ba2:	inc    edi
  410ba3:	icebp  
  410ba4:	push   es
  410ba5:	and    ecx,0xffffffc4
  410ba8:	call   0x2c2:0x9138c2c5
  410baf:	cmp    dl,BYTE PTR [edx]
  410bb1:	lea    eax,[eax]
  410bb3:	mov    ah,0xf
  410bb5:	sub    eax,0xf
  410bb8:	mov    ds:0x3d8f3542,eax
  410bbd:	mov    eax,DWORD PTR [ebp+0x7e]
  410bc0:	cmp    bh,ch
  410bc2:	jne    0x410bc4
  410bc4:	add    BYTE PTR [eax],al
  410bc6:	out    0xcb,al
  410bc8:	inc    edx
  410bc9:	xor    eax,0x358a039e
  410bce:	dec    esi
  410bcf:	stc    
  410bd0:	aas    
  410bd1:	add    al,dh
  410bd3:	cmc    
  410bd4:	std    
  410bd5:	(bad)  
  410bd6:	dec    edi
  410bd7:	retf   
  410bd8:	jb     0x410c0b
  410bda:	inc    ecx
  410bdb:	push   eax
  410bdc:	push   es
  410bdd:	sub    ebx,DWORD PTR [ecx-0x77]
  410be0:	out    0x5,al
  410be2:	sbb    DWORD PTR [eax+0xe],ebx
  410be5:	add    ah,cl
  410be7:	dec    edi
  410be8:	shr    cl,cl
  410bea:	and    edx,DWORD PTR [eax-0x2d]
  410bed:	je     0x410b81
  410bef:	mov    al,ds:0xe2110c53
  410bf4:	std    
  410bf5:	push   ebp
  410bf6:	call   0x4386:0x8f69fe7f
  410bfd:	aam    0x8a
  410bff:	cmp    BYTE PTR [eax-0x1],ch
  410c02:	adc    eax,0x7ec083bd
  410c07:	or     BYTE PTR [ecx-0x74a9ed83],cl
  410c0d:	inc    ebp
  410c0e:	out    0x3a,al
  410c10:	std    
  410c11:	jne    0x410c09
  410c13:	sbb    BYTE PTR [ebx+edx*2],0x60
  410c17:	hlt    
  410c18:	std    
  410c19:	adc    eax,0x3ff76e
  410c1e:	xchg   ecx,eax
  410c1f:	dec    edi
  410c20:	neg    BYTE PTR [esi-0x2d]
  410c23:	enter  0xa,0xf9
  410c27:	retf   0x8c0
  410c2a:	add    BYTE PTR [eax],al
  410c2c:	add    BYTE PTR [edx],cl
  410c2e:	ds mov esp,ebp
  410c31:	repz scas al,BYTE PTR es:[edi]
  410c33:	push   ds
  410c34:	mov    ds:0x56022ff1,eax
  410c39:	jbe    0x410ca3
  410c3b:	mov    dh,0x43
  410c3d:	lea    esi,[eax+0x1c60ffe9]
  410c43:	jg     0x410bf9
  410c45:	push   ebx
  410c46:	jae    0x410c75
  410c48:	dec    bl
  410c4a:	jbe    0x410c4d
  410c4c:	add    ebx,esi
  410c4e:	mov    al,0xa7
  410c50:	repz repz mov al,0xa7
  410c54:	sti    
  410c55:	repz loopne 0x410bd8
  410c58:	inc    esp
  410c59:	(bad)  
  410c5a:	(bad)  
  410c5b:	sbb    esi,DWORD PTR [edx]
  410c5d:	jmp    0x410c8d
  410c5f:	add    al,BYTE PTR [ebx+esi*4+0x1eff1722]
  410c66:	mov    dl,0x79
  410c68:	lds    ebx,FWORD PTR [ebx+eax*2+0x5df36936]
  410c6f:	call   0x5be8:0x22df3cb
  410c76:	inc    edx
  410c77:	add    eax,DWORD PTR [eax]
  410c79:	jl     0x410cde
  410c7b:	ss out 0xf8,eax
  410c7e:	xchg   ecx,eax
  410c7f:	sub    eax,0xb7c5c0fe
  410c84:	stos   DWORD PTR es:[edi],eax
  410c85:	fs cmc 
  410c87:	int3   
  410c88:	enter  0x6330,0x79
  410c8c:	jmp    0x410cfe
  410c8e:	or     ch,BYTE PTR [ebx]
  410c90:	add    BYTE PTR [eax],0x0
  410c93:	add    BYTE PTR [edi-0x66],bl
  410c96:	pop    es
  410c97:	add    bl,dh
  410c99:	pusha  
  410c9a:	aam    0x56
  410c9c:	outs   dx,BYTE PTR ds:[esi]
  410c9d:	jb     0x410c85
  410c9f:	adc    eax,DWORD PTR [eax]
  410ca1:	sbb    al,0xd1
  410ca3:	mov    BYTE PTR [edi-0x4b17f5af],ah
  410ca9:	add    BYTE PTR [edx],0x0
  410cac:	ja     0x410cb5
  410cae:	test   eax,0xe88170fd
  410cb3:	add    esi,ebx
  410cb5:	cs stos DWORD PTR es:[edi],eax
  410cb7:	(bad)  
  410cb8:	add    al,0x24
  410cba:	popa   
  410cbb:	dec    esp
  410cbc:	imul   eax,ebx,0xc
  410cbf:	or     al,0x6a
  410cc1:	ret    
  410cc2:	add    al,0x14
  410cc4:	in     eax,0x47
  410cc6:	fdiv   DWORD PTR [esi-0x329cd0f6]
  410ccc:	repz push es
  410cce:	aas    
  410ccf:	icebp  
  410cd0:	mov    ecx,0x961c29bc
  410cd5:	(bad)  
  410cd6:	out    0x3,eax
  410cd8:	jo     0x410cac
  410cda:	les    ecx,FWORD PTR [ebx]
  410cdc:	jecxz  0x410c6d
  410cde:	and    al,0xe8
  410ce0:	fsubr  QWORD PTR [edi]
  410ce2:	sbb    DWORD PTR [esi],esi
  410ce4:	mov    cl,0x5
  410ce6:	cld    
  410ce7:	adc    BYTE PTR [ebx-0xcfd07dc],bl
  410ced:	xchg   ecx,eax
  410cee:	in     al,0xe7
  410cf0:	hlt    
  410cf1:	cs mov esp,0x69238d6f
  410cf7:	cmp    DWORD PTR [eax],eax
  410cf9:	add    BYTE PTR [eax],al
  410cfb:	repz das 
  410cfd:	adc    DWORD PTR [esi],esi
  410cff:	mov    cl,0x8
  410d01:	mov    ebp,0xe8288cf9
  410d06:	add    esi,ebx
  410d08:	xchg   DWORD PTR [ecx+0x2f],ecx
  410d0b:	pop    ecx
  410d0c:	repnz ss inc ecx
  410d0f:	lock call 0x3e9:0x5aa1bf2
  410d17:	jo     0x410d40
  410d19:	adc    DWORD PTR [ecx],ebx
  410d1b:	out    0x1c,eax
  410d1d:	sub    esp,eax
  410d1f:	(bad)  
  410d20:	aad    0x73
  410d22:	mov    eax,0x7c10ff10
  410d27:	mov    eax,ds:0x8e90005
  410d2c:	mov    ebx,0x8ff0e90f
  410d31:	int    0x6a
  410d33:	fninit 
  410d35:	out    0x93,eax
  410d37:	inc    ebx
  410d38:	push   es
  410d39:	add    BYTE PTR [edx],dl
  410d3b:	and    esp,edi
  410d3d:	andnps xmm4,xmm2
  410d40:	xchg   ecx,eax
  410d41:	inc    ebx
  410d42:	or     eax,0xe869b6df
  410d47:	mov    al,BYTE PTR [esi]
  410d49:	pop    eax
  410d4a:	pusha  
  410d4b:	mov    ah,0xe6
  410d4d:	pop    ss
  410d4e:	rol    DWORD PTR [eax-0x4b],0xff
  410d52:	call   0xf564a3ac
  410d57:	call   0xf12a5ed1
  410d5c:	rcr    DWORD PTR [ebp-0x26],0x0
  410d60:	add    BYTE PTR [eax],al
  410d62:	xor    BYTE PTR [ebp+0x48a58c8a],bh
  410d68:	add    ebp,ecx
  410d6a:	jo     0x410d4f
  410d6c:	(bad)  
  410d6d:	cmp    DWORD PTR [ebx-0x740900de],esi
  410d73:	mov    esp,0xb8c61a56
  410d78:	push   esi
  410d79:	mov    dh,0x68
  410d7b:	sbb    dh,cl
  410d7d:	test   eax,0x4e56b9f0
  410d82:	in     eax,0xb6
  410d84:	adc    DWORD PTR [ecx+0x2ef8df0],ebp
  410d8a:	es xchg esi,eax
  410d8c:	push   ds
  410d8d:	shr    eax,0xf4
  410d90:	(bad)  
  410d91:	call   0xf9552edc
  410d96:	add    eax,edi
  410d98:	jmp    DWORD PTR [ebx-0x50]
  410d9b:	xchg   ebp,eax
  410d9c:	pop    es
  410d9d:	mov    esi,0xb514211e
  410da2:	loop   0x410d6a
  410da4:	(bad)  
  410da5:	call   DWORD PTR [ebx+esi*8+0x13]
  410da9:	mov    al,ds:0x5efe4648
  410dae:	jl     0x410d77
  410db0:	push   ebx
  410db1:	mov    ebx,DWORD PTR [esi]
  410db3:	mov    ds:0x80d430ea,al
  410db8:	dec    edi
  410db9:	lea    esp,[edi-0x6517a946]
  410dbf:	or     BYTE PTR [ecx],al
  410dc1:	add    BYTE PTR ds:0x6a0658,ch
  410dc7:	add    BYTE PTR [eax],al
  410dc9:	or     bh,dh
  410dcb:	mov    BYTE PTR [edx-0x7ba1fa25],ah
  410dd1:	call   0x4ebb:0x178d1656
  410dd8:	push   edi
  410dda:	and    bh,ch
  410ddc:	jne    0x410da0
  410dde:	std    
  410ddf:	cwde   
  410de0:	mov    ds:0xc08505db,eax
  410de5:	out    0x7,al
  410de7:	xor    eax,eax
  410de9:	or     al,BYTE PTR [edx]
  410deb:	add    DWORD PTR [ebx],esi
  410ded:	pop    edx
  410dee:	jecxz  0x410db0
  410df0:	add    al,0x9a
  410df2:	ss mov esp,ebp
  410df5:	or     edi,esp
  410df7:	test   BYTE PTR [ecx+0x373e],0x9a
  410dfe:	aaa    
  410dff:	push   0x22570f53
  410e04:	sub    BYTE PTR [edx-0x3],al
  410e07:	cmp    BYTE PTR [edx],al
  410e09:	mov    eax,DWORD PTR ds:0x3b40c68b
  410e0f:	xchg   DWORD PTR [esi+esi*8+0x1e],eax
  410e13:	mov    esi,DWORD PTR [esi+esi*8+0x16]
  410e17:	push   esi
  410e18:	call   0x42195f
  410e1d:	fild   WORD PTR [esi+0x22]
  410e20:	push   eax
  410e21:	repz pop edi
  410e23:	sbb    cl,BYTE PTR [ebx-0x7cd4efc4]
  410e29:	xor    esp,DWORD PTR [ebx+0x82eb]
  410e2f:	add    BYTE PTR [edi+0x77fff64b],dl
  410e35:	jae    0x410e15
  410e37:	dec    edi
  410e38:	push   0x6b
  410e3a:	fimul  WORD PTR [edi]
  410e3c:	data16 repz fild WORD PTR [edi]
  410e40:	jp     0x410e2d
  410e42:	fist   WORD PTR [edi]
  410e44:	js     0x410eb7
  410e46:	ror    BYTE PTR [edi+esi*4-0x5038ebf5],cl
  410e4d:	adc    ecx,DWORD PTR [eax*1-0x38fdd20d]
  410e54:	das    
  410e55:	adc    ah,ah
  410e57:	add    bl,dh
  410e59:	sub    eax,0x522fc702
  410e5e:	fiadd  WORD PTR [ecx]
  410e60:	repz sub eax,0x2b49e802
  410e66:	add    eax,DWORD PTR [eax]
  410e68:	sbb    eax,0xb05c1fa5
  410e6d:	add    edi,DWORD PTR [edi-0x15]
  410e70:	jb     0x410e04
  410e72:	cli    
  410e73:	add    ebx,esi
  410e75:	sub    eax,0xb39b8477
  410e7a:	sub    esi,edi
  410e7c:	inc    ebx
  410e7d:	mov    dh,0xef
  410e7f:	dec    BYTE PTR [ecx+eax*8+0x24ffbf7e]
  410e86:	ja     0x410e14
  410e88:	jnp    0x410e5d
  410e8a:	sub    esi,edi
  410e8c:	mov    esi,edx
  410e8e:	pop    esp
  410e8f:	add    bl,dh
  410e91:	(bad)  
  410e92:	inc    ebp
  410e93:	push   esp
  410e94:	add    BYTE PTR [eax],al
  410e96:	add    BYTE PTR [eax-0x36],bh
  410e99:	test   ebx,ebp
  410e9b:	(bad)  
  410e9c:	jl     0x410e6e
  410e9e:	mov    bl,dh
  410ea0:	push   es
  410ea1:	icebp  
  410ea2:	jle    0x410e9a
  410ea4:	mov    bh,0x6f
  410ea6:	mov    eax,0xfba39240
  410eab:	mov    ds:0x69f7931f,eax
  410eb0:	cmp    eax,0x69a2a92
  410eb5:	xchg   ebx,eax
  410eb6:	add    al,0xbd
  410eb8:	lea    edx,[ebx-0x6748e2cd]
  410ebe:	adc    BYTE PTR [eax+edx*1+0x6c],0x47
  410ec3:	or     al,0x20
  410ec5:	call   0x23d2fd46
  410eca:	sub    al,0xa3
  410ecc:	mov    ebx,DWORD PTR [ebx]
  410ece:	clc    
  410ecf:	mov    WORD PTR [esi+0x3b],?
  410ed2:	(bad)  
  410ed3:	in     al,dx
  410ed4:	and    BYTE PTR [edi],dh
  410ed6:	cld    
  410ed7:	and    BYTE PTR ds:[eax],bl
  410eda:	fdiv   QWORD PTR [edi+0x46]
  410edd:	fnstsw WORD PTR [esi+0x7c]
  410ee0:	push   es
  410ee1:	jmp    0xa10a86e9
  410ee6:	jge    0x410ed4
  410ee8:	xchg   ecx,eax
  410ee9:	cmp    ebx,DWORD PTR [edx+eiz*1]
  410eec:	lods   eax,DWORD PTR ds:[esi]
  410eed:	enter  0xd89d,0xb6
  410ef1:	test   DWORD PTR [ebx+0x3e906b8],edx
  410ef7:	outs   dx,BYTE PTR ds:[esi]
  410ef8:	inc    esi
  410ef9:	sti    
  410efa:	mov    al,0x0
  410efc:	add    BYTE PTR [eax],al
  410efe:	ror    ecx,cl
  410f00:	ins    BYTE PTR es:[edi],dx
  410f01:	jmp    0x410f32
  410f03:	das    
  410f04:	fisub  WORD PTR [ebp-0x408ec43f]
  410f0a:	cwde   
  410f0b:	mov    edx,esp
  410f0d:	add    al,0xdf
  410f0f:	mov    DWORD PTR [ebp-0x50],ecx
  410f12:	xor    BYTE PTR [ebp-0x58],dl
  410f15:	jl     0x410f4c
  410f17:	test   DWORD PTR cs:[edi],edx
  410f1a:	gs pop ds
  410f1c:	jmp    FWORD PTR [ebx-0x49]
  410f1f:	xchg   ebx,eax
  410f20:	ss xchg esi,eax
  410f22:	jbe    0x410f43
  410f24:	xor    DWORD PTR [ecx],0x56c281a
  410f2a:	sbb    ah,BYTE PTR [ecx]
  410f2c:	mov    dl,BYTE PTR [ecx]
  410f2e:	mov    esp,0xb7c97320
  410f33:	rcl    BYTE PTR [ebx],cl
  410f35:	sahf   
  410f36:	ja     0x410f7f
  410f38:	(bad)  
  410f39:	adc    DWORD PTR [edx+0x29],ebx
  410f3c:	(bad)  
  410f3d:	neg    BYTE PTR [edi+ebx*2-0x2d68268d]
  410f44:	adc    ebx,DWORD PTR [edx]
  410f46:	mov    bh,0xa7
  410f48:	mov    edi,0x3e1f2f54
  410f4d:	rcr    DWORD PTR [edi+0x29],0xfe
  410f51:	into   
  410f52:	and    esp,DWORD PTR [edi]
  410f54:	mov    esi,0xfe1d1b90
  410f59:	and    al,0x1b
  410f5b:	xchg   ecx,eax
  410f5c:	inc    esp
  410f5d:	mov    ch,0x77
  410f5f:	dec    ecx
  410f60:	aas    
  410f61:	repnz add BYTE PTR [eax],al
  410f64:	add    BYTE PTR [ebp+0x4f4a7126],dl
  410f6a:	mov    ebx,0x1a8572ef
  410f6f:	mov    ah,cl
  410f71:	inc    ebp
  410f72:	mov    bl,0xe7
  410f74:	cmp    ebx,DWORD PTR [edi+0x2fd1501d]
  410f7a:	ret    
  410f7b:	div    DWORD PTR [edx-0x58]
  410f7e:	into   
  410f7f:	(bad)  
  410f80:	sbb    BYTE PTR [edi+0x17dd741d],bl
  410f86:	add    al,0x56
  410f88:	data16 mov al,ds:0x7cd4fefa
  410f8e:	xchg   ecx,eax
  410f8f:	add    eax,0x741df1c3
  410f94:	loope  0x410f38
  410f96:	sbb    eax,0x9d8e004f
  410f9b:	mov    esi,0xfd35ce0f
  410fa0:	jmp    DWORD PTR ds:0xd10873ef
  410fa6:	pop    es
  410fa7:	push   esi
  410fa8:	dec    DWORD PTR [edx+0x4a7d8952]
  410fae:	fwait
  410faf:	add    al,0x57
  410fb1:	jo     0x410fbd
  410fb3:	push   esi
  410fb4:	(bad)  
  410fb5:	jp     0x410fcd
  410fb7:	add    eax,0xffffffaf
  410fba:	dec    edi
  410fbb:	aaa    
  410fbc:	inc    edi
  410fbd:	and    dh,BYTE PTR [eax+0x57]
  410fc0:	mov    ecx,DWORD PTR [ecx]
  410fc2:	xchg   ebp,eax
  410fc3:	dec    ebx
  410fc4:	or     BYTE PTR [ebx+0x37],bh
  410fc7:	std    
  410fc8:	ja     0x410fca
  410fca:	add    BYTE PTR [eax],al
  410fcc:	push   ds
  410fcd:	cmp    ebp,edi
  410fcf:	push   eax
  410fd0:	fiadd  DWORD PTR [edi-0x5e328a42]
  410fd6:	add    DWORD PTR [ebp+0x6a50f2d7],ecx
  410fdc:	(bad)  
  410fde:	jne    0x410fe4
  410fe0:	or     esi,esp
  410fe2:	dec    esi
  410fe3:	sbb    BYTE PTR [edi-0x3d],cl
  410fe6:	jae    0x411005
  410fe8:	test   DWORD PTR [edi+0x12],edx
  410feb:	mov    eax,DWORD PTR [edi]
  410fed:	xlat   BYTE PTR ds:[ebx]
  410fee:	push   ebp
  410fef:	(bad)  
  410ff0:	fistp  WORD PTR [esi]
  410ff2:	mov    ebx,edx
  410ff4:	gs push edi
  410ff6:	push   cs
  410ff7:	call   0x3ef528
  410ffc:	and    DWORD PTR [eax+0xe],ecx
  410fff:	mov    esp,DWORD PTR [edx-0x6dae02c7]
  411005:	mov    al,ds:0x58055701
  41100a:	push   es
  41100b:	push   ebx
  41100c:	adc    eax,0xda854233
  411011:	push   esi
  411012:	sar    bh,0xf3
  411015:	cmp    bh,dl
  411017:	mov    dh,al
  411019:	pusha  
  41101a:	and    eax,0xc464bb4f
  41101f:	pop    edx
  411020:	cmp    dh,cl
  411022:	adc    eax,DWORD PTR [eax]
  411024:	(bad)  
  411025:	test   al,0x17
  411027:	add    BYTE PTR [edi+0x5b],0x3
  41102b:	add    bl,dh
  41102d:	pusha  
  41102e:	int3   
  41102f:	push   esi
  411030:	add    BYTE PTR [eax],al
  411032:	add    bl,bl
  411034:	mov    edi,0x87f33fb0
  411039:	bound  esi,QWORD PTR [ebx+esi*4+0x2f]
  41103d:	sbb    bh,dl
  41103f:	mov    ds:0x238b022e,eax
  411044:	pusha  
  411045:	dec    ecx
  411046:	cmp    ah,BYTE PTR [eax]
  411048:	and    al,0x7e
  41104a:	mov    ?,ebx
  41104c:	das    
  41104d:	add    dl,BYTE PTR [ebx-0x60]
  411050:	xchg   esi,eax
  411051:	(bad)  
  411052:	sti    
  411053:	js     0x41107a
  411055:	int3   
  411056:	(bad)  
  411057:	mov    ds:0x7ebf7f23,eax
  41105c:	into   
  41105d:	jp     0x411064
  41105f:	jle    0x411034
  411061:	sub    edx,DWORD PTR [eax+0x40]
  411064:	mov    eax,0xfedc5601
  411069:	jne    0x6814e422
  41106f:	jae    0x41106c
  411071:	ret    
  411072:	dec    DWORD PTR [esi+edi*8-0x50]
  411076:	aas    
  411077:	repz test DWORD PTR [edx+0x6f],eax
  41107b:	repnz sub eax,0x88e8f779
  411081:	scas   al,BYTE PTR es:[edi]
  411082:	xor    DWORD PTR [esi-0x1d],esi
  411085:	daa    
  411086:	dec    edi
  411087:	outs   dx,BYTE PTR ds:[esi]
  411088:	stos   DWORD PTR es:[edi],eax
  411089:	mov    bh,ch
  41108b:	xchg   esp,eax
  41108c:	lods   eax,DWORD PTR ds:[esi]
  41108d:	ror    BYTE PTR [esi+esi*1-0x7a2c66f9],cl
  411094:	xchg   edx,eax
  411095:	pusha  
  411096:	jp     0x411098
  411098:	add    BYTE PTR [eax],al
  41109a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109b:	nop
  41109c:	and    eax,0xa4572f3e
  4110a1:	add    esi,ebx
  4110a3:	push   es
  4110a4:	cmp    BYTE PTR cs:[ebp+ebx*1+0x3d],0x26
  4110aa:	add    al,0x6
  4110ac:	jmp    0x2b555bb4
  4110b1:	es dec ebp
  4110b3:	nop
  4110b4:	in     eax,dx
  4110b5:	into   
  4110b6:	inc    ebp
  4110b7:	mov    bh,0xf0
  4110b9:	jp     0x411072
  4110bb:	push   ds
  4110bc:	popa   
  4110bd:	sti    
  4110be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bf:	sbb    esi,DWORD PTR [edi-0x60fa8605]
  4110c5:	es mov ah,0xe
  4110c8:	adc    DWORD PTR [edi+0x73],ebx
  4110cb:	push   es
  4110cc:	jmp    0xac5bc84b
  4110d1:	(bad)  
  4110d2:	jmp    0x718dee1d
  4110d7:	inc    edi
  4110d8:	inc    ecx
  4110d9:	cmc    
  4110da:	inc    ebp
  4110db:	inc    edi
  4110dc:	shr    BYTE PTR [ecx+edi*8+0x4ec5cd1b],0xc0
  4110e4:	scas   eax,DWORD PTR es:[edi]
  4110e5:	inc    ecx
  4110e6:	aas    
  4110e7:	nop
  4110e8:	int3   
  4110e9:	or     eax,0xffffff9a
  4110ec:	jmp    0x16f903f4
  4110f1:	int    0x89
  4110f3:	push   es
  4110f4:	call   0x6bf903fc
  4110f9:	ja     0x41116b
  4110fb:	sbb    DWORD PTR [ebp+0x25],edx
  411101:	and    ebx,DWORD PTR [ebx+edx*1]
  411104:	clc    
  411105:	jns    0x41111d
  411107:	jno    0x411107
  411109:	ds sbb al,0x18
  41110c:	adc    BYTE PTR [esi+0x46],dh
  41110f:	(bad)  
  411110:	cld    
  411111:	xchg   esi,eax
  411112:	mov    BYTE PTR [ebp+ebx*8-0x10],ah
  411116:	das    
  411117:	adc    esi,DWORD PTR [esp+eax*1-0x78]
  41111b:	cld    
  41111c:	pop    esi
  41111d:	(bad)  
  41111e:	retf   
  41111f:	imul   ebp,ecx,0x41fe4373
  411125:	jb     0x41114c
  411127:	inc    BYTE PTR [esi-0x18]
  41112a:	ret    0x720b
  41112d:	pop    ebp
  41112e:	mov    eax,0x1973648c
  411133:	(bad)  
  411134:	and    BYTE PTR cs:[esp+esi*2],bl
  411138:	add    DWORD PTR ds:0x43f54f1c,esi
  41113e:	sbb    al,0x84
  411140:	sub    DWORD PTR [ebx-0x77376fe],eax
  411146:	das    
  411147:	adc    dh,BYTE PTR [esp+eiz*4-0x79]
  41114b:	std    
  41114c:	(bad)  
  41114d:	xlat   BYTE PTR ds:[ebx]
  41114e:	retf   
  41114f:	push   esi
  411150:	push   0xffffffd7
  411152:	sbb    al,0xe7
  411154:	xchg   ebp,eax
  411155:	rcr    BYTE PTR [esi+edi*8],cl
  411158:	jo     0x41119f
  41115a:	repz mov ah,bh
  41115d:	and    ecx,DWORD PTR [edx+0x1ccc6d8c]
  411163:	(bad)  
  411164:	cmp    BYTE PTR [eax],al
  411166:	add    BYTE PTR [eax],al
  411168:	push   ss
  411169:	xchg   ebx,eax
  41116a:	sbb    ebx,DWORD PTR [edi]
  41116c:	push   cs
  41116d:	retf   0x6413
  411170:	xor    BYTE PTR [ebx-0x79aa9bef],dl
  411176:	sti    
  411177:	scas   al,BYTE PTR es:[edi]
  411178:	pop    ss
  411179:	retf   0x6a56
  41117c:	or     BYTE PTR [ecx],bl
  41117e:	out    0xcd,eax
  411180:	adc    bl,BYTE PTR [ecx]
  411182:	(bad)  
  411183:	bound  ecx,QWORD PTR [eax]
  411185:	lea    eax,ds:0x501e655c
  41118b:	add    BYTE PTR [ebp+0x69],ch
  41118e:	push   cs
  41118f:	push   esi
  411190:	sbb    eax,0x4a850e36
  411195:	push   0x2
  411197:	xor    edi,0xffffffee
  41119a:	dec    BYTE PTR [edx-0x7b46e6c]
  4111a0:	cmp    esp,ebx
  4111a2:	jae    0x4111b8
  4111a4:	xor    al,0xe3
  4111a6:	dec    esi
  4111a7:	adc    bh,dl
  4111a9:	lds    esi,FWORD PTR [edx+0x4]
  4111ac:	fnstcw WORD PTR [eax-0xa]
  4111af:	add    BYTE PTR [eax-0x80],al
  4111b2:	mov    esi,DWORD PTR [ebp-0x3a]
  4111b5:	dec    ebp
  4111b6:	out    0xad,al
  4111b8:	sbb    al,0x6
  4111ba:	add    BYTE PTR [edx+0x69],ch
  4111bd:	xchg   ecx,eax
  4111be:	jae    0x4111a8
  4111c0:	xor    bh,dh
  4111c2:	mov    al,ds:0x8b064afe
  4111c7:	push   ebp
  4111c8:	and    ch,BYTE PTR [esi+0x7546]
  4111ce:	add    BYTE PTR [edx+0x6],bl
  4111d1:	test   edi,edi
  4111d3:	mov    eax,ds:0x15450dd5
  4111d8:	pushf  
  4111d9:	ror    BYTE PTR [edi],1
  4111db:	push   esi
  4111dc:	mov    dh,0x81
  4111de:	jge    0x4111f2
  4111e0:	add    ecx,DWORD PTR [ebx-0x72fe5938]
  4111e6:	dec    ebp
  4111e7:	xor    al,BYTE PTR [edx+0x5fda0c7b]
  4111ed:	or     eax,0x8af71745
  4111f2:	jne    0x4111de
  4111f4:	push   eax
  4111f5:	dec    edi
  4111f6:	call   DWORD PTR [edi]
  4111f8:	out    0x4e,eax
  4111fa:	inc    DWORD PTR [edi]
  4111fc:	or     ecx,DWORD PTR [ebp-0x2aca9bb]
  411202:	ss pop ebp
  411204:	pop    ds
  411205:	jle    0x411219
  411207:	repz out dx,eax
  411209:	add    ecx,DWORD PTR [ebx-0x18b65b35]
  41120f:	imul   esi,DWORD PTR [edx+eiz*1-0x2],0xfeff6370
  411217:	push   ds
  411218:	and    al,0x2a
  41121a:	adc    edx,DWORD PTR [eax+ebp*4+0x22]
  41121e:	(bad)  
  41121f:	inc    BYTE PTR [edi]
  411221:	sub    al,0xb
  411223:	push   esp
  411224:	mov    eax,0x298b5622
  411229:	imul   edi,esi,0x5ac0686c
  41122f:	cmp    ch,ch
  411231:	(bad)  
  411232:	inc    DWORD PTR [eax]
  411234:	add    BYTE PTR [eax],al
  411236:	(bad)  
  411237:	xchg   esp,eax
  411238:	das    
  411239:	add    BYTE PTR [edi-0x55],0x5
  41123d:	add    bl,dh
  41123f:	jl     0x4111f9
  411241:	push   esi
  411242:	fisttp DWORD PTR [edi+0x77f33f97]
  411248:	mov    dl,0x74
  41124a:	mov    bl,0x2f
  41124c:	sub    bh,dh
  41124e:	popf   
  41124f:	add    cl,BYTE PTR cs:[ebx-0x77c2a3dd]
  411256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411257:	neg    esi
  411259:	repnz in al,0xab
  41125c:	and    al,BYTE PTR [eax]
  41125e:	repz das 
  411260:	lea    eax,ds:0x55b52e99
  411266:	push   0xffffffda
  411268:	sbb    edi,esi
  41126a:	mov    ds:0xfcbf88ef,eax
  41126f:	mov    ds:0x2df3003c,al
  411274:	lea    eax,ds:0x502feb6e
  41127a:	dec    ecx
  41127b:	and    BYTE PTR [eax-0x78cddc02],bh
  411281:	mov    edi,0x496c06f4
  411286:	repz push es
  411288:	jmp    0xe947a3b9
  41128d:	add    edi,DWORD PTR [eax-0x3e]
  411290:	mov    WORD PTR [esi+0x181b89ec],cs
  411296:	inc    edx
  411297:	mov    bh,0x7d
  411299:	mov    ah,0x0
  41129b:	add    BYTE PTR [eax],al
  41129d:	fadd   QWORD PTR [ecx-0x7d89ed58]
  4112a3:	out    0x3,eax
  4112a5:	repz ffree st(3)
  4112a8:	pop    ss
  4112a9:	in     eax,dx
  4112aa:	sbb    ah,0x4
  4112ad:	repz push es
  4112af:	(bad)  
  4112b0:	enter  0x8c68,0xe0
  4112b4:	popa   
  4112b5:	fs pop es
  4112b7:	jmp    0x53cad7bf
  4112bc:	adc    DWORD PTR [esi+0x18],0x35
  4112c0:	mov    ch,0xd4
  4112c2:	push   ss
  4112c3:	jmp    0x25f7f5a0
  4112c8:	mov    ah,0xe0
  4112ca:	sub    DWORD PTR [eax],0xb38def97
  4112d0:	adc    ebx,DWORD PTR [ecx]
  4112d2:	hlt    
  4112d3:	pop    ebx
  4112d4:	mov    BYTE PTR [eax+ebx*1-0x4c53ddfb],ah
  4112db:	imul   ecx,DWORD PTR [ebx+0x15],0xd23102f
  4112e2:	sbb    BYTE PTR [edi-0x38],bl
  4112e5:	adc    al,0x8c
  4112e7:	sub    esp,DWORD PTR [eax]
  4112e9:	imul   ecx,DWORD PTR [edi],0x875f8f37
  4112ef:	shl    DWORD PTR [ecx],cl
  4112f1:	in     eax,dx
  4112f2:	mov    ah,0x40
  4112f4:	adc    al,0xf1
  4112f6:	aam    0xdc
  4112f8:	mov    bl,0xdd
  4112fa:	mov    ch,0xd4
  4112fc:	xchg   BYTE PTR [edx+edx*4+0xecff],dl
  411303:	add    BYTE PTR [edi+0x75dbea18],ah
  411309:	cmp    BYTE PTR [edi-0x5c],0x12
  41130d:	sbb    DWORD PTR [edi+0x3a],ecx
  411310:	outs   dx,BYTE PTR ds:[esi]
  411311:	aas    
  411312:	inc    BYTE PTR [ecx-0x7101c7e6]
  411318:	jbe    0x411329
  41131a:	imul   edx,DWORD PTR [eax],0x2183926c
  411320:	(bad)  
  411321:	mov    ch,0xfc
  411323:	jmp    0xf4887218
  411328:	mov    al,0x17
  41132a:	mov    DWORD PTR [ecx],edi
  41132c:	sahf   
  41132d:	sbb    al,0x73
  41132f:	jmp    0x411398
  411331:	xor    BYTE PTR [edx+0x748d00a4],cl
  411337:	push   ecx
  411338:	inc    esi
  411339:	dec    esp
  41133a:	push   cs
  41133b:	lods   eax,DWORD PTR ds:[esi]
  41133c:	test   al,0xdc
  41133e:	repnz mov ch,0xe6
  411341:	mov    al,ds:0x264d738
  411346:	mov    eax,0xffd75c29
  41134b:	mov    edx,0xa48cc781
  411350:	ins    BYTE PTR es:[edi],dx
  411351:	(bad)  
  411352:	push   ebp
  411353:	push   ss
  411354:	and    al,0x97
  411356:	adc    DWORD PTR [ecx+0x74d78bf0],ebp
  41135c:	xor    al,0xf
  41135e:	out    0x74,eax
  411360:	(bad)  
  411361:	sbb    dh,bh
  411363:	push   0xffffffbb
  411365:	pop    es
  411366:	push   DWORD PTR [eax+eax*1+0x0]
  41136a:	add    al,ah
  41136c:	mov    edi,gs
  41136e:	shr    DWORD PTR [ebp+0x3bdefe62],1
  411374:	pop    ds
  411375:	(bad)  
  411376:	mov    WORD PTR [ebx],ss
  411378:	adc    eax,0x9b13cf82
  41137d:	add    eax,DWORD PTR [eax]
  41137f:	dec    ecx
  411380:	ins    DWORD PTR es:[edi],dx
  411381:	repnz add BYTE PTR [ebp+ecx*2+0x3c0e02f2],bl
  411389:	push   0xc27d2772
  41138e:	pop    eax
  41138f:	(bad)  
  411390:	(bad)  
  411392:	add    dl,cl
  411394:	test   DWORD PTR [ebx-0x8],eax
  411397:	jmp    0x661c:0x2003f462
  41139e:	lock mov DWORD PTR [ecx+0xb1f6810],edx
  4113a5:	sahf   
  4113a6:	adc    dh,dl
  4113a8:	loope  0x4113ab
  4113aa:	popf   
  4113ab:	test   al,0x62
  4113ad:	out    dx,al
  4113ae:	add    esi,DWORD PTR [edx+0x1c]
  4113b1:	mov    esi,eax
  4113b3:	cmp    al,BYTE PTR [ebx+0x4cb2fc43]
  4113b9:	sti    
  4113ba:	push   DWORD PTR [ebp+0x4ef443ef]
  4113c0:	jle    0x4113f3
  4113c2:	push   0xffffff9b
  4113c4:	test   DWORD PTR [ebx-0x30],esi
  4113c7:	(bad)
  4113cc:	or     cl,BYTE PTR [ebp+0x45]
  4113d2:	adc    bl,BYTE PTR [edx+0x66]
  4113d5:	test   BYTE PTR [ecx-0x40],0x11
  4113d9:	push   0x13c50b0a
  4113de:	jb     0x4113dd
  4113e0:	add    edx,ecx
  4113e2:	cmp    DWORD PTR [edx-0x19],esp
  4113e5:	add    esp,ebx
  4113e7:	sbb    ah,BYTE PTR [esi-0x10]
  4113ea:	sbb    esi,ecx
  4113ec:	adc    DWORD PTR [ebx+0x458959cc],ecx
  4113f2:	push   ss
  4113f3:	jecxz  0x4113ff
  4113f5:	std    
  4113f6:	adc    eax,0xf345f4f6
  4113fb:	xor    ecx,DWORD PTR [ebx]
  4113fd:	je     0x41141f
  4113ff:	retf   0x8c93
  411402:	data16 ins BYTE PTR es:[edi],dx
  411404:	mov    ebx,0x3545ee7
  411409:	add    BYTE PTR [esi-0x1e],bh
  41140c:	sbb    ecx,DWORD PTR [edi+0x5b]
  41140f:	pop    esi
  411410:	add    ch,BYTE PTR [edx]
  411412:	out    0xf7,eax
  411414:	adc    eax,DWORD PTR [edx]
  411416:	or     bl,BYTE PTR [edx+ebp*4]
  411419:	hlt    
  41141a:	lock dec ebp
  41141c:	mul    BYTE PTR [edi-0x66]
  41141f:	and    bh,ch
  411421:	adc    ecx,DWORD PTR [ebx]
  411423:	nop
  411424:	add    ch,BYTE PTR [eax]
  411426:	call   FWORD PTR [eax-0x1d87b0bb]
  41142c:	pop    ds
  41142d:	out    0xa0,eax
  41142f:	mov    ds:0x3268fe1e,eax
  411434:	sub    dh,BYTE PTR [edx]
  411436:	add    BYTE PTR [eax],al
  411438:	add    BYTE PTR [eax+0x78fbc898],bl
  41143e:	daa    
  41143f:	mov    dl,0xfe
  411441:	ret    0x8927
  411444:	inc    esp
  411445:	dec    edi
  411446:	cwde   
  411447:	or     ecx,DWORD PTR [ebp+0x4fb1d3be]
  41144d:	dec    esp
  41144e:	outs   dx,BYTE PTR ds:[esi]
  41144f:	test   BYTE PTR [ebx+esi*1+0x3d478634],0xec
  411457:	push   ds
  411458:	mov    ch,BYTE PTR [esi-0x3cf874fd]
  41145e:	cld    
  41145f:	mov    ah,0x7
  411461:	js     0x411490
  411463:	mov    ah,0xfe
  411465:	ret    
  411466:	pop    ss
  411467:	mov    DWORD PTR [ebx+ebx*1+0x79],ebx
  41146b:	mov    edi,0x1a261b57
  411470:	inc    BYTE PTR [esp+eax*4]
  411473:	mov    esp,0xaa062a5a
  411478:	mov    eax,0x2f672269
  41147d:	js     0x411486
  41147f:	jmp    0x35fe5487
  411484:	xchg   ecx,eax
  411485:	addr16 dec ebx
  411487:	rcl    BYTE PTR [esi],1
  411489:	fld    DWORD PTR [edi]
  41148b:	jmp    0x62445bae
  411490:	inc    ebp
  411491:	xor    al,0xa1
  411493:	add    BYTE PTR [ebx+0x1f1c526f],bh
  411499:	mov    ch,0x14
  41149b:	nop
  41149c:	test   DWORD PTR [eax],eax
  41149e:	add    BYTE PTR [eax],al
  4114a0:	xchg   esp,eax
  4114a1:	adc    al,0x95
  4114a3:	mov    esp,0x9da88a4b
  4114a8:	sar    DWORD PTR [edi+0x2b],cl
  4114ab:	or     al,0x68
  4114ad:	jmp    FWORD PTR [ebx-0x48]
  4114b0:	clc    
  4114b1:	mov    eax,0xb7223661
  4114b6:	ins    DWORD PTR es:[edi],dx
  4114b7:	je     0x411519
  4114b9:	pop    es
  4114ba:	jmp    0xd38882c2
  4114bf:	or     DWORD PTR [eax-0x66],edi
  4114c2:	in     al,0x2b
  4114c4:	pusha  
  4114c5:	xchg   bh,ah
  4114c7:	add    ecx,DWORD PTR [eax+0x9]
  4114ca:	cli    
  4114cb:	inc    ebx
  4114cc:	mov    ch,0xb4
  4114ce:	mov    eax,ds:0xe8ff324c
  4114d3:	mov    eax,0x2f672379
  4114d8:	xor    BYTE PTR [edi],al
  4114da:	jmp    0xb5fdb4e2
  4114df:	mov    ch,BYTE PTR [edi+0x148abdfe]
  4114e5:	mov    ebp,0x1ec4aa82
  4114ea:	jae    0x41150a
  4114ec:	adc    eax,0x9ab59514
  4114f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f2:	call   FWORD PTR [edi+0x3b]
  4114f5:	and    BYTE PTR [edi+0x1],dl
  4114f8:	jo     0x41150f
  4114fa:	(bad)  
  4114fb:	out    0x3e,al
  4114fd:	mov    edx,0xca784e69
  411502:	out    dx,eax
  411503:	xor    DWORD PTR [eax],eax
  411505:	add    BYTE PTR [eax],al
  411507:	pop    ss
  411508:	cdq    
  411509:	dec    dh
  41150b:	(bad)  
  41150c:	mov    esp,0x7ea35355
  411511:	inc    esp
  411512:	ror    DWORD PTR [edi-0x19499ad5],1
  411518:	adc    al,0x56
  41151a:	pop    ss
  41151b:	mov    DWORD PTR [edx-0x43ccd378],esp
  411521:	out    0x40,eax
  411523:	push   cs
  411524:	adc    eax,0xceebdafe
  411529:	pop    esp
  41152a:	jge    0x411594
  41152c:	retf   0xf6f7
  41152f:	sbb    eax,0x4dc1fecb
  411534:	adc    al,0xe
  411536:	ins    DWORD PTR es:[edi],dx
  411537:	mov    eax,ds:0x69e90006
  41153c:	mov    dl,0xdf
  41153e:	jo     0x411574
  411540:	daa    
  411541:	cmp    BYTE PTR [eax+ebx*1-0x639df568],bh
  411548:	sub    ecx,DWORD PTR [esp+eiz*4-0xe50d3ec]
  41154f:	lock push es
  411551:	mov    DWORD PTR [esp+eiz*8+0x6b395cce],ebx
  411558:	(bad)  [ecx-0x36]
  41155b:	ins    DWORD PTR es:[edi],dx
  41155c:	call   0xe9fa:0xea08c1cf
  411563:	lock adc esi,DWORD PTR [ecx+ebx*1+0x7a]
  411568:	dec    ecx
  411569:	dec    edi
  41156a:	add    DWORD PTR [eax],0x0
  41156d:	add    ah,ch
  41156f:	scas   eax,DWORD PTR es:[edi]
  411570:	mov    WORD PTR [eax],es
  411572:	outs   dx,DWORD PTR ds:[esi]
  411573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411574:	out    0xb8,al
  411576:	cmc    
  411577:	icebp  
  411578:	std    
  411579:	pop    ecx
  41157a:	arpl   WORD PTR [ebx+eax*2-0x19266e20],ax
  411581:	add    BYTE PTR [edx],0x7
  411584:	add    BYTE PTR [ebx],dh
  411586:	mov    cl,0xf3
  411588:	jae    0x411582
  41158a:	push   ecx
  41158b:	xor    DWORD PTR [esi+0x12],edi
  41158e:	or     cl,BYTE PTR [ebx]
  411590:	call   edi
  411592:	repz push ecx
  411594:	div    BYTE PTR [ebp+eax*1-0x78]
  411598:	test   BYTE PTR [ecx],0xfc
  41159b:	je     0x411526
  41159d:	enter  0xe54b,0xff
  4115a1:	dec    edx
  4115a3:	xchg   BYTE PTR [edi+0x5],dh
  4115a6:	jecxz  0x41152f
  4115a8:	(bad)  
  4115a9:	(bad)  
  4115aa:	fstp   TBYTE PTR [ecx+0x5f]
  4115ad:	cdq    
  4115ae:	mov    cl,0xc8
  4115b0:	iret   
  4115b1:	clc    
  4115b2:	and    ecx,DWORD PTR [ecx-0x32]
  4115b5:	jne    0x41154d
  4115b7:	aaa    
  4115b8:	mov    esi,0x5fde97eb
  4115bd:	mov    ds:0x4587f30d,eax
  4115c2:	mov    dh,0x2e
  4115c4:	shl    DWORD PTR [ebp+edx*4+0x7f],0xc6
  4115c9:	mov    edx,DWORD PTR [edi-0x54cb1912]
  4115cf:	repnz std 
  4115d1:	test   BYTE PTR [eax],al
  4115d3:	add    BYTE PTR [eax],al
  4115d5:	or     bh,BYTE PTR [edx+0x2f]
  4115d8:	lea    edx,[edi+0x69534ebe]
  4115de:	push   edi
  4115df:	std    
  4115e0:	jne    0x411600
  4115e2:	add    DWORD PTR [ebx-0x30],0x15fd5679
  4115e9:	mov    edx,0xf3003e15
  4115ee:	pushf  
  4115ef:	sbb    al,BYTE PTR [eax]
  4115f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f2:	sbb    BYTE PTR [ebx],bl
  4115f4:	je     0x41161d
  4115f6:	xchg   ebp,eax
  4115f7:	(bad)
  4115fa:	stos   DWORD PTR es:[edi],eax
  4115fb:	cmp    edi,esi
  4115fd:	add    al,0x19
  4115ff:	xchg   esp,eax
  411600:	retf   
  411601:	push   0x6b
  411603:	push   ss
  411604:	(bad)  
  411605:	fiadd  WORD PTR [edi+0x30f33ff5]
  41160b:	nop
  41160c:	rcr    ebx,cl
  41160e:	loope  0x411676
  411610:	(bad)  
  411611:	fadd   st(5),st
  411613:	lods   eax,DWORD PTR ds:[esi]
  411614:	mov    WORD PTR [esi-0x3301e4f5],ds
  41161a:	out    0x2b,eax
  41161c:	jno    0x4115e7
  41161e:	pop    ds
  41161f:	add    ch,BYTE PTR [edx+0x40]
  411622:	mov    bl,0x90
  411624:	mov    bh,0x1b
  411626:	js     0x4115ca
  411628:	stc    
  411629:	repz pop ds
  41162b:	lea    edx,[edi+ebx*4-0x5c]
  41162f:	enter  0xd8db,0x4c
  411633:	pop    ebx
  411634:	inc    edi
  411635:	push   ds
  411636:	loopne 0x41163b
  411638:	sldt   WORD PTR [eax]
  41163b:	add    BYTE PTR [edi],dh
  41163d:	jo     0x41161d
  41163f:	retf   0xe3f4
  411642:	dec    ebx
  411643:	cmp    BYTE PTR [esi],bl
  411645:	mov    WORD PTR [edi-0x711e97ff],cs
  41164b:	je     0x411650
  41164d:	dec    esi
  41164e:	mov    bl,0x4f
  411650:	xor    ah,BYTE PTR fs:[edx]
  411653:	mov    WORD PTR [esi+0x3],?
  411656:	sbb    edi,esi
  411658:	push   esp
  411659:	enter  0xeb90,0x4c
  41165d:	pop    edx
  41165e:	or     dl,BYTE PTR [eax+0x44]
  411661:	adc    DWORD PTR [ecx],ebx
  411663:	(bad)  
  411664:	push   0x4bc58ef7
  411669:	push   es
  41166a:	jo     0x41168f
  41166c:	sub    eax,0x8406911
  411671:	adc    bl,BYTE PTR [ebx+0x4a25140f]
  411677:	sbb    edx,DWORD PTR ds:0x79277b11
  41167d:	fld    TBYTE PTR [eax-0x9f93b0a]
  411683:	xor    ebp,edi
  411685:	call   0x2c5b:0x111e1af8
  41168c:	in     eax,dx
  41168d:	cmp    ebp,ebx
  41168f:	nop
  411690:	enter  0xbe10,0x1a
  411694:	addr16 bswap ebp
  411697:	xor    DWORD PTR [edx-0x36],ebp
  41169a:	lds    edi,FWORD PTR [edx+0x45afac2e]
  4116a0:	add    BYTE PTR [eax],al
  4116a2:	add    al,bh
  4116a4:	push   es
  4116a5:	sbb    al,0x8f
  4116a7:	enter  0xbc86,0x5b
  4116ab:	repnz push es
  4116ad:	jmp    0x37444e40
  4116b2:	xchg   DWORD PTR [ebx+eiz*8+0x38],esp
  4116b6:	sbb    esp,DWORD PTR [edi]
  4116b8:	call   FWORD PTR [ebx-0x80]
  4116bb:	sub    al,0x12
  4116bd:	test   DWORD PTR [edx],ebx
  4116bf:	cmp    al,0x7e
  4116c1:	sub    edx,DWORD PTR [eax]
  4116c3:	mov    esi,?
  4116c5:	push   ecx
  4116c6:	add    al,0xf3
  4116c8:	mov    DWORD PTR [eax-0x18e190f6],ebp
  4116ce:	add    esi,ebx
  4116d0:	and    DWORD PTR [ebx-0x35],0xb3551067
  4116d7:	push   esp
  4116d8:	xchg   esi,eax
  4116d9:	int    0x4
  4116db:	repz jnp 0x411716
  4116de:	mov    edi,es
  4116e0:	push   ss
  4116e1:	arpl   WORD PTR [ecx],dx
  4116e3:	cmc    
  4116e4:	mov    bh,bh
  4116e6:	sbb    bh,dh
  4116e8:	push   es
  4116e9:	add    BYTE PTR [edx-0xe],ah
  4116ec:	or     DWORD PTR [ebp+esi*8+0x67],0xb479feba
  4116f4:	paddd  mm5,mm1
  4116f7:	jae    0x411749
  4116f9:	push   cs
  4116fa:	fs ret 
  4116fc:	push   es
  4116fd:	add    cl,ch
  4116ff:	jge    0x4116cc
  411701:	or     esi,DWORD PTR [edx-0x8]
  411704:	adc    DWORD PTR [ecx+eiz*8+0x0],0xc0460000
  41170c:	(bad)  
  41170d:	cwde   
  41170e:	cld    
  41170f:	mov    bh,BYTE PTR [edi+0x796df6]
  411715:	jmp    0x4397cb0a
  41171a:	xchg   ecx,eax
  41171b:	xor    BYTE PTR [ecx+edx*4-0x69],0x27
  411720:	js     0x4116e2
  411722:	test   DWORD PTR [esi],0x9cf72c8b
  411728:	(bad)  
  411729:	bound  esi,QWORD PTR [ecx]
  41172b:	shr    BYTE PTR [ecx-0x21],0x78
  41172f:	daa    
  411730:	sbb    cl,BYTE PTR [edx+ecx*1-0x8eb01ef]
  411737:	jnp    0x411775
  411739:	sub    DWORD PTR [esi-0x289e0031],esp
  41173f:	sbb    dl,bl
  411741:	jecxz  0x411712
  411743:	adc    dh,dl
  411745:	jg     0x411775
  411747:	add    DWORD PTR [ebp+edx*1+0x6a0006f0],eax
  41174e:	push   esp
  41174f:	pop    es
  411750:	add    bl,dl
  411752:	xchg   ebx,eax
  411753:	xor    BYTE PTR [ebp+ebx*4-0x59],0x27
  411758:	inc    eax
  411759:	push   eax
  41175a:	test   DWORD PTR [esi],0x7beca48b
  411760:	pop    es
  411761:	add    bh,al
  411763:	pop    edi
  411764:	(bad)  
  411765:	push   edx
  411766:	rcl    esp,0x50
  411769:	push   eax
  41176a:	add    eax,0x9294
  41176f:	add    BYTE PTR [eax],al
  411771:	dec    edx
  411772:	add    eax,DWORD PTR [ebp-0x74f77040]
  411778:	jne    0x41172c
  41177a:	loop   0x4117d2
  41177c:	jg     0x411789
  41177e:	add    ecx,DWORD PTR [ecx+0x2e1e645]
  411784:	cmp    DWORD PTR [edi-0x9],0xfffffffe
  411788:	imul   esp,DWORD PTR [edx-0x78],0xdb629073
  41178f:	or     al,0xf9
  411791:	or     al,BYTE PTR [ebx]
  411793:	mov    eax,DWORD PTR [ebp-0x1a]
  411796:	jnp    0x41179e
  411798:	lea    ebx,[edi]
  41179a:	jecxz  0x4117ec
  41179c:	mov    ebx,DWORD PTR [esp+edx*2-0x61a400b2]
  4117a3:	(bad)  
  4117a4:	(bad)  
  4117a5:	fimul  DWORD PTR [ebp+0x7bd775be]
  4117ab:	jae    0x41178d
  4117ad:	mov    dl,0x2d
  4117af:	jge    0x4117b2
  4117b1:	retf   0x4381
  4117b4:	clc    
  4117b5:	or     DWORD PTR [esi],0xa526581
  4117bb:	push   0x69
  4117bd:	pop    ss
  4117be:	mov    ebp,0xef65ff4e
  4117c3:	push   esi
  4117c4:	call   0x400a1b
  4117c9:	add    DWORD PTR [ebp-0xa],edi
  4117cc:	mov    ebx,edi
  4117ce:	out    dx,al
  4117cf:	mov    DWORD PTR [ebp-0x2],eax
  4117d2:	mov    esp,?
  4117d4:	mov    ecx,0xa2000000
  4117d9:	jge    0x411819
  4117db:	add    BYTE PTR [ebp+0x4e],dl
  4117de:	out    dx,eax
  4117df:	test   ebx,esi
  4117e1:	rol    DWORD PTR [edi],1
  4117e3:	inc    esp
  4117e4:	inc    edx
  4117e5:	mov    eax,ds:0x5b7a0342
  4117ea:	ss mov dh,bl
  4117ed:	mov    ds:0x3de87342,al
  4117f2:	xor    DWORD PTR [edi],0xfffffff3
  4117f5:	push   ebx
  4117f6:	std    
  4117f7:	mov    eax,0xffc26b33
  4117fc:	mov    esi,0x768cb151
  411801:	push   eax
  411802:	pop    ss
  411803:	(bad)  
  411804:	adc    al,0x50
  411806:	test   DWORD PTR [ebx+edi*8+0x6f],eax
  41180a:	sub    bh,BYTE PTR [edi-0x7de9f2f2]
  411810:	aaa    
  411811:	sub    al,0x17
  411813:	je     0x41180c
  411815:	test   al,0x12
  411817:	inc    ah
  411819:	and    al,0x90
  41181b:	mul    esp
  41181d:	push   esp
  41181e:	xor    ch,0x5c
  411821:	and    dl,al
  411823:	fisubr DWORD PTR [edi+0x58]
  411826:	push   es
  411827:	test   BYTE PTR [esi+0x1f],dh
  41182a:	add    al,BYTE PTR [eax]
  41182c:	pop    ecx
  41182d:	ror    BYTE PTR [eax-0x2e08288c],cl
  411833:	fcmove st,st(3)
  411835:	retf   
  411836:	sbb    edi,edi
  411838:	lods   al,BYTE PTR ds:[esi]
  411839:	cwde   
  41183a:	cwde   
  41183b:	repz add BYTE PTR [eax],al
  41183e:	add    BYTE PTR [esi-0x1e],dh
  411841:	or     edx,DWORD PTR [eax+0x70]
  411844:	pop    esp
  411845:	or     edx,DWORD PTR [edi+0x68]
  411848:	gs mov bl,0x8a
  41184b:	ss adc al,0x2a
  41184e:	mov    ds:0x83168c87,al
  411853:	mov    bl,0xb
  411855:	add    dh,bh
  411857:	mov    al,0x9
  411859:	xchg   ebp,eax
  41185a:	mov    esi,fs
  41185c:	push   es
  41185d:	dec    ebp
  41185e:	mov    esp,0x460c34c
  411863:	repz jnp 0x411811
  411866:	or     eax,ebx
  411868:	mov    ch,0x61
  41186a:	ds mov esp,0x5b07ab81
  411870:	mov    BYTE PTR [edi+edx*1],bh
  411873:	cmp    eax,0xf2902882
  411878:	or     al,0x29
  41187a:	stos   BYTE PTR es:[edi],al
  41187b:	pushf  
  41187c:	jnp    0x411819
  41187e:	pop    ds
  41187f:	mov    esp,0x1c1bc41e
  411884:	or     eax,0xb6ecc163
  411889:	mov    ch,0x8a
  41188b:	ss mov dh,0x71
  41188e:	sar    eax,0x1e
  411891:	xchg   DWORD PTR [edi],edx
  411893:	std    
  411894:	or     al,0x6c
  411896:	inc    esp
  411897:	or     BYTE PTR [eax],0xef
  41189a:	inc    edx
  41189b:	jo     0x4118cd
  41189d:	pop    esp
  41189e:	push   es
  41189f:	in     al,0x92
  4118a1:	lock mov al,BYTE PTR [eax]
  4118a4:	add    BYTE PTR [eax],al
  4118a6:	das    
  4118a7:	sub    ebp,DWORD PTR [ecx+0x4b]
  4118aa:	aad    0x1f
  4118ac:	inc    eax
  4118ad:	cmp    ebp,ecx
  4118af:	or     al,0xc5
  4118b1:	nop
  4118b2:	in     al,dx
  4118b3:	push   ds
  4118b4:	and    BYTE PTR [ebx-0x43],0xc
  4118b8:	popa   
  4118b9:	nop
  4118ba:	les    ebp,FWORD PTR [ecx+edx*1+0x71fb378b]
  4118c1:	or     eax,DWORD PTR [ebx+0xc]
  4118c4:	aaa    
  4118c5:	or     al,0x68
  4118c7:	add    eax,0xff24173f
  4118cc:	fld    DWORD PTR [ebx+0x2e]
  4118cf:	ds stos BYTE PTR es:[edi],al
  4118d1:	or     esi,ebx
  4118d3:	xlat   BYTE PTR ds:[ebx]
  4118d4:	test   al,0xc3
  4118d6:	mov    dl,0xfb
  4118d8:	(bad)  
  4118d9:	call   0x692c9a21
  4118de:	adc    al,0x74
  4118e0:	add    ecx,ebp
  4118e2:	lock xlat BYTE PTR ds:[ebx]
  4118e4:	mov    edi,0x53043221
  4118e9:	out    0xe3,al
  4118eb:	dec    ebx
  4118ec:	push   ebp
  4118ed:	mov    dh,0x7b
  4118ef:	push   ebx
  4118f0:	jae    0x411938
  4118f2:	fisttp QWORD PTR [esi+eax*8]
  4118f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f6:	or     BYTE PTR [eax+0x74],cl
  4118f9:	test   eax,0x8ebf87f0
  4118fe:	fcomp  DWORD PTR [ebp-0xa]
  411901:	jmp    0x6ca1b9f6
  411906:	cmp    DWORD PTR [edi+edx*2],0x1
  41190a:	add    BYTE PTR [eax],al
  41190c:	add    BYTE PTR [ebp+0x79e8ff14],bl
  411912:	inc    edx
  411913:	dec    edi
  411914:	je     0x411989
  411916:	cwde   
  411917:	(bad)  
  411918:	(bad)  
  411919:	out    0xbb,al
  41191b:	mov    edx,0x8006f0e8
  411920:	pop    esp
  411921:	dec    ebx
  411922:	mov    al,ds:0x80fee6fc
  411927:	ret    0x36d1
  41192a:	test   BYTE PTR [eax],al
  41192c:	jmp    0xa67b25f4
  411931:	test   BYTE PTR [edx+0x6f0e9c0],0x83
  411938:	shl    esi,0xfc
  41193b:	xor    DWORD PTR [ecx-0x11],0x6
  41193f:	add    BYTE PTR [ebx+0x51],al
  411942:	jp     0x4119b8
  411944:	lods   eax,DWORD PTR ds:[esi]
  411945:	addr16 jle 0x4119c4
  411948:	(bad)  
  411949:	iret   
  41194a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41194b:	imul   cl
  41194d:	lock jns 0x411994
  411950:	xchg   ecx,eax
  411951:	inc    edi
  411952:	popf   
  411953:	add    BYTE PTR [eax],al
  411955:	in     eax,0x83
  411957:	xor    DWORD PTR [ebp+edi*8-0xf],0xfffffffd
  41195c:	push   eax
  41195d:	fnstcw WORD PTR [edi+0x5b]
  411960:	clc    
  411961:	shl    DWORD PTR [ebx-0xe],cl
  411964:	jmp    DWORD PTR [edi+0x77]
  411967:	push   cs
  411968:	inc    eax
  411969:	dec    edx
  41196a:	mov    WORD PTR [esi+0x43845675],?
  411970:	hlt    
  411971:	add    BYTE PTR [eax],al
  411973:	add    BYTE PTR [edx+0x6ac6895a],cl
  411979:	test   BYTE PTR [ebx-0x8],bh
  41197c:	mov    ds:0x4a018818,al
  411981:	ss std 
  411983:	jmp    0x41199e
  411985:	xchg   dh,al
  411987:	jmp    DWORD PTR [ebx-0x2d7c11b5]
  41198d:	icebp  
  41198e:	jae    0x4119a0
  411990:	jo     0x411991
  411992:	mov    WORD PTR [ebp-0x16],es
  411995:	pop    ecx
  411996:	dec    esi
  411997:	jmp    DWORD PTR [edi]
  411999:	cmp    edx,DWORD PTR [eax+eax*2]
  41199c:	or     al,BYTE PTR [esi+0x51700cc2]
  4119a2:	mov    esi,DWORD PTR [ebp+0x46]
  4119a5:	dec    ebx
  4119a6:	out    0x9,al
  4119a8:	lds    eax,FWORD PTR [esi]
  4119aa:	add    BYTE PTR [ebx-0x7bc826c],cl
  4119b0:	dec    edi
  4119b1:	dec    ecx
  4119b2:	out    0x89,al
  4119b4:	pop    ss
  4119b5:	ror    DWORD PTR [ebx-0x20de17b],cl
  4119bb:	inc    DWORD PTR [ebx+0x49]
  4119be:	ror    BYTE PTR [ebp+0x4587eb07],cl
  4119c4:	jle    0x411947
  4119c6:	sub    DWORD PTR [edi+ecx*2-0xd],0xfffffffd
  4119cb:	push   eax
  4119cc:	cmovno ecx,esi
  4119cf:	(bad)  
  4119d0:	repz fidivr DWORD PTR [ebx]
  4119d3:	add    al,0xf3
  4119d5:	pop    ds
  4119d6:	add    al,bh
  4119d8:	add    BYTE PTR [eax],al
  4119da:	add    BYTE PTR [esi],ch
  4119dc:	add    BYTE PTR [ecx],0x0
  4119df:	repz pop ds
  4119e1:	cmp    eax,DWORD PTR [edi+ecx*4+0x1e]
  4119e5:	add    al,BYTE PTR [eax]
  4119e7:	repz xchg esi,edi
  4119ea:	call   0xed4f:0x5c871ff2
  4119f1:	inc    ebx
  4119f2:	aaa    
  4119f3:	scas   al,BYTE PTR es:[edi]
  4119f4:	daa    
  4119f5:	add    edx,DWORD PTR [ebp+0x63429d33]
  4119fb:	pop    ebx
  4119fc:	(bad)  
  4119fd:	adc    dh,bh
  4119ff:	cmp    al,0x69
  411a01:	mov    ah,0x5a
  411a03:	sub    bl,dh
  411a05:	(bad)  
  411a06:	inc    edi
  411a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a09:	adc    BYTE PTR es:[edi],0x94
  411a0d:	add    BYTE PTR [eax],al
  411a0f:	repz dec esp
  411a11:	lods   al,BYTE PTR ds:[esi]
  411a12:	push   esi
  411a13:	mov    DWORD PTR [edx-0x7b],ecx
  411a16:	je     0x411a8b
  411a18:	pop    eax
  411a19:	sub    bl,BYTE PTR [ecx+0x33021ffd]
  411a1f:	add    eax,0x73448572
  411a24:	jo     0x4119ab
  411a26:	mov    esp,0xfe121b6b
  411a2b:	stos   DWORD PTR es:[edi],eax
  411a2c:	sbb    eax,0x37730002
  411a31:	inc    edx
  411a32:	xchg   dl,dh
  411a34:	pop    ds
  411a35:	test   edi,esi
  411a37:	int3   
  411a38:	sub    BYTE PTR [esi+0x21ff10a],al
  411a3e:	cmp    eax,DWORD PTR [eax]
  411a40:	add    BYTE PTR [eax],al
  411a42:	mov    ch,0x18
  411a44:	xchg   BYTE PTR [edx],al
  411a46:	icebp  
  411a47:	pop    ds
  411a48:	add    cl,BYTE PTR [ebx+0x1412efb4]
  411a4e:	dec    ebx
  411a4f:	pop    es
  411a50:	sti    
  411a51:	ret    
  411a52:	pushf  
  411a53:	jle    0x411a78
  411a55:	xor    al,0xd9
  411a57:	inc    eax
  411a58:	in     eax,0x87
  411a5a:	popf   
  411a5b:	pop    es
  411a5c:	jmp    0x73f23364
  411a61:	xchg   ecx,eax
  411a62:	mov    al,0xae
  411a64:	nop
  411a65:	icebp  
  411a66:	jle    0x411a6e
  411a68:	jmp    0x6df74feb
  411a6d:	cdq    
  411a6e:	xor    al,0x9
  411a70:	sti    
  411a71:	dec    edi
  411a72:	add    al,bh
  411a74:	call   0x6d3a4947
  411a79:	dec    ebx
  411a7a:	repz push es
  411a7c:	jmp    0xb3bcb93a
  411a81:	bt     DWORD PTR [ebx-0x55],edi
  411a85:	and    esp,DWORD PTR [ebx+0x6c891809]
  411a8b:	stc    
  411a8c:	arpl   WORD PTR [edi-0xd],dx
  411a8f:	push   es
  411a90:	jmp    0x7167d213
  411a95:	cld    
  411a96:	addr16 mov bl,0x30
  411a99:	mov    dh,0x7f
  411a9b:	mov    bl,0x1c
  411a9d:	mov    dh,0xb4
  411a9f:	jg     0x411b1c
  411aa1:	or     edi,ebp
  411aa3:	mov    dh,0x84
  411aa5:	mov    BYTE PTR [eax],al
  411aa7:	add    BYTE PTR [eax],al
  411aa9:	xor    al,0xf9
  411aab:	imul   ecx,DWORD PTR [esi+0x7ee906f3],0x2f
  411ab2:	daa    
  411ab3:	jno    0x411ab0
  411ab5:	outs   dx,DWORD PTR ds:[esi]
  411ab6:	mov    dl,0xb4
  411ab8:	mov    ch,0x67
  411aba:	mov    dl,0xa8
  411abc:	mov    ch,0x5a
  411abe:	div    DWORD PTR [esi]
  411ac0:	adc    edi,DWORD PTR [edi]
  411ac2:	das    
  411ac3:	lds    ebx,FWORD PTR [eax-0x4b424858]
  411ac9:	cld    
  411aca:	cmp    edi,0x4b81f1a8
  411ad0:	call   0x24c421c5
  411ad5:	aaa    
  411ad6:	add    al,0xf
  411ad8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411ada:	pop    es
  411adb:	add    cl,ch
  411add:	or     eax,0x8862d3c3
  411ae2:	jnp    0x411b38
  411ae4:	xchg   ecx,eax
  411ae5:	inc    esi
  411ae6:	mov    al,ds:0x890e8ff
  411aeb:	dec    esi
  411aec:	jbe    0x411a95
  411aee:	rol    BYTE PTR [ecx+ebp*4-0x17e17e0f],1
  411af5:	lock push es
  411af7:	mov    esp,DWORD PTR [eax+edi*8-0x749bf884]
  411afe:	inc    eax
  411aff:	push   ecx
  411b00:	mov    bh,0x80
  411b02:	or     DWORD PTR [eax+0xd],edx
  411b05:	push   0x48
  411b07:	push   cs
  411b08:	fs lock add eax,0xe900
  411b0f:	add    BYTE PTR [ebp+0x2862e7c2],ch
  411b15:	jnp    0x411b6b
  411b17:	inc    ebp
  411b18:	data16 mov dl,0xfe
  411b1b:	xchg   esp,eax
  411b1c:	fdiv   DWORD PTR [edi-0x7cb34702]
  411b22:	mov    edi,0xff217bde
  411b27:	call   0x1d85971c
  411b2c:	ja     0x411ac0
  411b2e:	out    dx,eax
  411b2f:	mov    al,0xc0
  411b31:	clc    
  411b32:	test   DWORD PTR [esi],ebx
  411b34:	lock push es
  411b36:	add    BYTE PTR [eax-0x7c],dh
  411b39:	and    ecx,DWORD PTR [edx+0x7b7b0b2c]
  411b3f:	call   0xd5b59938
  411b44:	mov    eax,0xc5000390
  411b49:	jge    0x411ae1
  411b4b:	add    dl,cl
  411b4d:	add    ecx,DWORD PTR [ecx+0x4589b675]
  411b53:	or     BYTE PTR [ecx-0x4ecd15c0],bl
  411b59:	mov    DWORD PTR [esi],eax
  411b5b:	add    DWORD PTR [ebx-0x55fd01ec],0xdf491f6f
  411b65:	mov    DWORD PTR [bx+si-0x7e],edx
  411b69:	mov    al,al
  411b6b:	call   0x3efec1
  411b70:	ffreep st(2)
  411b72:	jb     0x411bd3
  411b74:	add    BYTE PTR [eax],al
  411b76:	add    BYTE PTR [eax],cl
  411b78:	add    dh,0xff
  411b7b:	out    0x47,eax
  411b7d:	imul   al
  411b7f:	jp     0x411b59
  411b81:	std    
  411b82:	call   eax
  411b84:	fucompp 
  411b86:	aaa    
  411b87:	shl    DWORD PTR [edx+0x6],1
  411b8a:	mov    dl,0x8a
  411b8c:	mov    al,ah
  411b8e:	call   0x3eff00
  411b93:	lahf   
  411b94:	ret    0x3d72
  411b97:	jl     0x411c02
  411b99:	inc    BYTE PTR [edx+0x6de6f5e2]
  411b9f:	mov    dl,0xf5
  411ba1:	std    
  411ba2:	mov    ebp,edx
  411ba4:	jg     0x411b9a
  411ba6:	je     0x411bcc
  411ba8:	dec    ebp
  411ba9:	or     eax,0xf84b87f5
  411baf:	loop   0x411c26
  411bb1:	fdivr  st,st(7)
  411bb3:	in     eax,0x84
  411bb5:	aad    0x56
  411bb7:	repnz cmp DWORD PTR [edi+edi*8-0x7b0c242b],ebx
  411bbf:	mov    cl,0x9e
  411bc1:	adc    DWORD PTR [ebx],esi
  411bc3:	repz scas eax,DWORD PTR es:[edi]
  411bc5:	cdq    
  411bc6:	mov    edi,0x4004303e
  411bcb:	outs   dx,BYTE PTR ds:[esi]
  411bcc:	cmp    ecx,DWORD PTR [edi+eiz*8]
  411bcf:	push   edx
  411bd0:	stos   BYTE PTR es:[edi],al
  411bd1:	adc    dh,bh
  411bd3:	cwde   
  411bd4:	repnz aam 0xf5
  411bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bd8:	sub    ebx,DWORD PTR [eax]
  411bda:	mov    al,BYTE PTR [eax]
  411bdc:	add    BYTE PTR [eax],al
  411bde:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411be0:	test   BYTE PTR [edi+eax*4+0x0],al
  411be4:	int    0x46
  411be6:	imul   esp
  411be8:	sub    DWORD PTR [edx-0x7c],0xffffff95
  411bec:	adc    BYTE PTR [edx+0x76108c36],cl
  411bf2:	jmp    0x411c6c
  411bf4:	stc    
  411bf5:	dec    edi
  411bf6:	ins    BYTE PTR es:[edi],dx
  411bf7:	pop    ds
  411bf8:	in     al,dx
  411bf9:	(bad)  
  411bfa:	scas   al,BYTE PTR es:[edi]
  411bfb:	jg     0x411c79
  411bfd:	inc    esp
  411bfe:	aas    
  411bff:	jns    0x411bbf
  411c01:	out    dx,eax
  411c02:	jo     0x411baf
  411c04:	and    eax,0xe8080b
  411c09:	cmp    bh,0x54
  411c0c:	adc    dh,bh
  411c0e:	push   0xe28a0dbb
  411c13:	lahf   
  411c14:	mov    dl,0xfe
  411c16:	rcl    edi,0x7c
  411c19:	inc    esp
  411c1a:	sbb    ebp,DWORD PTR [ecx-0x7]
  411c1d:	dec    edi
  411c1e:	sbb    al,0xbf
  411c20:	stc    
  411c21:	mov    ch,BYTE PTR [esi-0x5cf883c5]
  411c27:	sbb    al,0xb2
  411c29:	pop    es
  411c2a:	js     0x411bd7
  411c2c:	or     eax,0x7c2786fe
  411c31:	pop    es
  411c32:	mov    ds:0x7817b004,eax
  411c37:	mov    dl,0x21
  411c39:	mov    bh,bl
  411c3b:	lahf   
  411c3c:	adc    BYTE PTR [eax-0x15],dl
  411c3f:	push   es
  411c40:	jb     0x411c0b
  411c42:	add    BYTE PTR [eax],al
  411c44:	add    al,bl
  411c46:	xchg   ecx,eax
  411c47:	out    dx,eax
  411c48:	mov    bl,0xcd
  411c4a:	push   edi
  411c4b:	fistp  QWORD PTR [edx+0x27]
  411c4e:	inc    DWORD PTR [ecx-0x48]
  411c51:	and    al,0xef
  411c53:	cmp    BYTE PTR [esi*4-0x436640fb],dl
  411c5a:	add    eax,0x4702afdd
  411c5f:	out    0xae,eax
  411c61:	bound  esi,QWORD PTR ds:[eax-0x746dc0bd]
  411c68:	test   DWORD PTR [eax-0xcfc1736],ebx
  411c6e:	pop    ecx
  411c6f:	xor    eax,0xde2714b7
  411c74:	ret    
  411c75:	je     0x411ce4
  411c77:	daa    
  411c78:	imul   DWORD PTR [edi+eax*1]
  411c7b:	jg     0x411c51
  411c7d:	iret   
  411c7e:	pop    es
  411c7f:	out    0x7a,eax
  411c81:	fs (bad) 
  411c83:	in     al,0x23
  411c85:	outs   dx,DWORD PTR ds:[esi]
  411c86:	add    eax,0x77087ef
  411c8b:	out    0x3,eax
  411c8d:	fstp   DWORD PTR [esi+0x5c]
  411c90:	cdq    
  411c91:	sub    al,0x5e
  411c93:	dec    edi
  411c94:	xlat   BYTE PTR ds:[ebx]
  411c95:	inc    eax
  411c96:	push   es
  411c97:	out    0x99,eax
  411c99:	retf   
  411c9a:	xchg   ebx,eax
  411c9b:	mov    esp,0xfbeebc27
  411ca0:	pop    ss
  411ca1:	sbb    al,0x5
  411ca3:	jae    0x411cac
  411ca5:	jo     0x411d12
  411ca7:	adc    eax,DWORD PTR [eax+eax*1]
  411caa:	add    BYTE PTR [eax],al
  411cac:	js     0x411c82
  411cae:	mov    eax,0xb8d6b780
  411cb3:	mov    dh,0xfd
  411cb5:	push   ebp
  411cb6:	xrelease mov BYTE PTR [edx*1+0x6f3c864],dh
  411cbe:	add    cl,ch
  411cc0:	imul   ecx,DWORD PTR ds:0x56e89c8b,0x24a0e655
  411cca:	sub    DWORD PTR [ecx-0x17cd7433],0xfffffff0
  411cd1:	push   es
  411cd2:	push   0x33
  411cd4:	jb     0x411c91
  411cd6:	test   al,0xc7
  411cd8:	in     eax,0x4
  411cda:	pop    ecx
  411cdb:	rol    DWORD PTR [ecx],1
  411cdd:	stc    
  411cde:	add    cl,ch
  411ce0:	sub    DWORD PTR [ebx-0x8],ecx
  411ce3:	bound  ebx,QWORD PTR [eax-0xcc702ac]
  411ce9:	in     eax,dx
  411cea:	cld    
  411ceb:	jmp    0x3ccc23e0
  411cf0:	rcl    DWORD PTR [ebp+0x50],cl
  411cf3:	mov    es,WORD PTR [edi+0x18]
  411cf6:	sub    DWORD PTR [ecx-0x1613748b],0xfffffff0
  411cfd:	push   es
  411cfe:	mov    DWORD PTR [ebx+edx*1],ebp
  411d01:	xchg   ecx,eax
  411d02:	or     BYTE PTR [ebx+ebx*4-0xc],bl
  411d06:	push   edx
  411d07:	rol    DWORD PTR [eax+0x1d],1
  411d0a:	inc    eax
  411d0b:	jmp    0x6c512290
  411d10:	add    BYTE PTR [eax],al
  411d12:	add    BYTE PTR [eax-0xfdc7cec],dh
  411d18:	push   es
  411d19:	add    BYTE PTR [edi],ch
  411d1b:	sub    eax,DWORD PTR ds:0x4ac6ee00
  411d21:	std    
  411d22:	cdq    
  411d23:	jae    0x411cb0
  411d25:	test   al,0x2f
  411d27:	in     eax,dx
  411d28:	add    al,0x51
  411d2a:	xchg   ebx,eax
  411d2b:	cmp    al,0x61
  411d2d:	mov    ebx,DWORD PTR [eax+esi*1+0x2]
  411d31:	(bad)  
  411d32:	push   ss
  411d33:	call   0xed4ffd7e
  411d38:	pop    esi
  411d39:	push   edi
  411d3a:	add    BYTE PTR [edi+0x448e0e47],al
  411d40:	or     BYTE PTR [eax],al
  411d42:	add    BYTE PTR [ecx-0x31],dl
  411d45:	in     eax,dx
  411d46:	push   0x76
  411d48:	mov    al,0x8c
  411d4a:	push   ebp
  411d4b:	ret    0x52b8
  411d4e:	lea    eax,[edi+0x3]
  411d51:	(bad)  
  411d52:	call   FWORD PTR [ebp+0x510067b8]
  411d58:	cmp    cl,BYTE PTR [edi-0x77]
  411d5b:	mov    db1,edx
  411d5e:	or     BYTE PTR [edx],cl
  411d60:	adc    dl,BYTE PTR [eax+0xc]
  411d63:	pop    ss
  411d64:	dec    ebx
  411d65:	je     0x411dc3
  411d67:	xor    al,0x86
  411d69:	mov    esp,0xfe114d08
  411d6e:	add    BYTE PTR [edi],bl
  411d70:	mov    WORD PTR ds:0x71115dff,es
  411d76:	sbb    BYTE PTR [eax],al
  411d78:	add    BYTE PTR [eax],al
  411d7a:	popf   
  411d7b:	pop    edx
  411d7c:	mov    WORD PTR [eax],cs
  411d7e:	ins    DWORD PTR es:[edi],dx
  411d7f:	adc    esi,edi
  411d81:	data16 (bad) [edi]
  411d84:	cmp    eax,0xbd864974
  411d89:	add    bh,BYTE PTR ds:0xc766055a
  411d8f:	aas    
  411d90:	je     0x411d81
  411d92:	xor    al,0x86
  411d94:	xor    eax,0x31052640
  411d99:	rcl    bh,0x4a
  411d9c:	jno    0x411dd0
  411d9e:	mov    edi,0xedff058b
  411da3:	adc    DWORD PTR [ebp-0x7d],ecx
  411da6:	rcl    BYTE PTR [ecx],cl
  411da8:	mov    WORD PTR [ebp-0x1a],cs
  411dab:	and    dl,BYTE PTR [ebx-0x7eee3228]
  411db1:	shl    BYTE PTR [esi-0xd],0x32
  411db5:	shl    bl,0x85
  411db8:	inc    ecx
  411db9:	je     0x411d6e
  411dbb:	in     eax,dx
  411dbc:	ror    DWORD PTR [esi+eiz*4-0x347ee5ff],0x1
  411dc4:	or     eax,0xc6cf9ea
  411dc9:	jns    0x411e32
  411dcb:	jmp    0x411d4d
  411dcd:	div    edx
  411dcf:	bound  eax,QWORD PTR [eax]
  411dd1:	(bad)  
  411dd2:	ss loope 0x411d9e
  411dd5:	pop    esp
  411dd6:	(bad)  
  411dd7:	jmp    0xd1fd635f
  411ddc:	or     al,0x8a
  411dde:	add    BYTE PTR [eax],al
  411de0:	add    BYTE PTR [esi],ch
  411de2:	sar    BYTE PTR [eax+0x7],0x43
  411de6:	shl    DWORD PTR [edx+0x243b7807],0x8a
  411ded:	les    edi,FWORD PTR ss:[eax+0x7]
  411df1:	inc    ebx
  411df2:	test   eax,0x2b7807b2
  411df7:	or     al,0x8a
  411df9:	sti    
  411dfa:	aas    
  411dfb:	or     edx,DWORD PTR [eax-0x1d]
  411dfe:	push   0x41
  411e00:	mov    ch,BYTE PTR [esi]
  411e02:	mov    BYTE PTR [eax+0x7],bh
  411e05:	cld    
  411e06:	imul   ebx,DWORD PTR [ebx],0xfffffffd
  411e09:	fs jns 0x411dbd
  411e0c:	inc    dl
  411e0e:	out    0x78,eax
  411e10:	push   es
  411e11:	mov    esp,0x7807b168
  411e16:	ret    
  411e17:	adc    eax,0x19b79c69
  411e1c:	mov    dh,0x4d
  411e1e:	push   ecx
  411e1f:	or     al,0x5e
  411e21:	xchg   ebp,eax
  411e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e23:	cmp    al,dl
  411e25:	ret    0x4557
  411e28:	jae    0x411e1c
  411e2a:	out    dx,eax
  411e2b:	int    0x3
  411e2d:	mov    eax,ds:0xcff97e1
  411e32:	pop    es
  411e33:	cmp    al,0x9
  411e35:	or     eax,0x6ca1002
  411e3a:	add    dl,BYTE PTR [edi]
  411e3c:	sbb    dl,ch
  411e3e:	out    dx,al
  411e3f:	mov    dl,BYTE PTR [edi]
  411e41:	cmc    
  411e42:	add    DWORD PTR [eax],edx
  411e44:	and    eax,0xe9000000
  411e49:	add    edi,edi
  411e4b:	sbb    al,BYTE PTR [edi-0xb]
  411e4e:	test   BYTE PTR [ebx],0x4a
  411e51:	or     bh,bh
  411e53:	dec    edx
  411e54:	fiadd  DWORD PTR [ecx]
  411e56:	out    0xad,eax
  411e58:	mov    cl,0x59
  411e5a:	jb     0x411e68
  411e5c:	outs   dx,DWORD PTR ds:[esi]
  411e5d:	aam    0x5b
  411e5f:	fucomp st(5)
  411e61:	mov    ecx,0xc66fa1e9
  411e66:	cmp    esp,ebp
  411e68:	jno    0x411e68
  411e6a:	not    DWORD PTR [eax-0x3981ee01]
  411e70:	repnz test DWORD PTR [edi+0x6a0c208c],ebp
  411e77:	or     al,0x24
  411e79:	jl     0x411e61
  411e7b:	sbb    esp,ebx
  411e7d:	push   es
  411e7e:	out    0x3,eax
  411e80:	sbb    al,0xc6
  411e82:	jg     0x411e08
  411e84:	je     0x411e87
  411e86:	call   0xc6c65035
  411e8b:	add    ebx,ecx
  411e8d:	push   cs
  411e8e:	bts    DWORD PTR [ecx],esi
  411e91:	xor    eax,0x7a24cfa7
  411e96:	sar    edx,1
  411e98:	test   DWORD PTR [eax*8-0x3685d332],ecx
  411e9f:	mov    cl,0x1
  411ea1:	stc    
  411ea2:	push   0xd
  411ea4:	add    al,0x7c
  411ea6:	(bad)  
  411ea8:	gs dec esp
  411eaa:	jmp    0x411f35
  411eaf:	sub    edi,DWORD PTR [esi+0x0]
  411eb2:	mov    ebp,0x91f785f3
  411eb7:	or     DWORD PTR [edx],0x6a
  411eba:	in     eax,dx
  411ebb:	pop    eax
  411ebc:	add    al,0xd0
  411ebe:	mov    edx,0x640ab809
  411ec3:	dec    esi
  411ec4:	shl    DWORD PTR [esi+0x6a],1
  411ec7:	in     al,0xe
  411ec9:	jne    0x411ebc
  411ecb:	cmc    
  411ecc:	clc    
  411ecd:	mov    esi,DWORD PTR [ebp-0x1]
  411ed0:	iret   
  411ed1:	jmp    0xbda07a9f
  411ed6:	xchg   DWORD PTR [ebp-0x3],ebp
  411ed9:	add    ebx,DWORD PTR [esi-0x31]
  411edc:	add    eax,0xf7746cf6
  411ee1:	mov    edx,0x6e5793b9
  411ee7:	xchg   edx,eax
  411ee8:	test   ecx,edi
  411eea:	in     al,dx
  411eeb:	or     DWORD PTR ds:0x742bb701,0xc67580ef
  411ef5:	add    al,dl
  411ef7:	xor    DWORD PTR [ebp+0x66],ebx
  411efa:	ins    BYTE PTR es:[edi],dx
  411efb:	iret   
  411efc:	jae    0x411eff
  411efe:	push   0xffffffc8
  411f00:	push   es
  411f01:	xchg   esi,ebx
  411f03:	dec    edx
  411f04:	lds    ebp,FWORD PTR [edx-0x1f]
  411f07:	test   DWORD PTR [eax],0x35a2aa58
  411f0d:	test   dl,0x22
  411f10:	je     0x411f58
  411f12:	out    0x0,al
  411f14:	add    BYTE PTR [eax],al
  411f16:	ror    DWORD PTR ds:0x741ab266,0x3e
  411f1d:	sbb    dh,BYTE PTR [edi+0x620cf784]
  411f23:	or     ebp,DWORD PTR [edx-0x15]
  411f26:	mov    ch,ch
  411f28:	adc    eax,0x732ce76a
  411f2d:	add    BYTE PTR [edi+0x21],cl
  411f30:	or     eax,0x38129966
  411f35:	ja     0x411f76
  411f37:	mov    eax,ds:0x55350af3
  411f3c:	enter  0x6e8d,0xfe
  411f40:	int    0x83
  411f42:	fmul   DWORD PTR [ecx]
  411f44:	or     eax,0xf88910b7
  411f49:	xor    BYTE PTR [ecx+0x27],bl
  411f4c:	arpl   WORD PTR [ebp-0x7cfd6fdd],ax
  411f52:	and    cl,BYTE PTR [ebx]
  411f54:	test   al,0x2
  411f56:	pop    esi
  411f57:	add    eax,0x8f1def5
  411f5c:	push   0x8
  411f5e:	xor    bh,BYTE PTR [esi+esi*1+0x5e]
  411f62:	cdq    
  411f63:	scas   eax,DWORD PTR es:[edi]
  411f64:	mov    ch,ah
  411f66:	push   ecx
  411f67:	ror    BYTE PTR [ecx],0x81
  411f6a:	jbe    0x411f6a
  411f6c:	add    BYTE PTR [eax],al
  411f6e:	call   0x3:0x9800bbb5
  411f75:	push   edi
  411f76:	mov    ds:0x796fd3,eax
  411f7b:	add    BYTE PTR [eax],al
  411f7d:	cld    
  411f7e:	or     eax,0x22c90874
  411f83:	gs call 0x37a:0x7d820d65
  411f8b:	je     0x411fb1
  411f8d:	gs (bad) 
  411f8f:	or     eax,0xfb16bf83
  411f94:	jmp    ebp
  411f96:	or     cl,BYTE PTR [ebx-0x1f3217b]
  411f9c:	push   DWORD PTR [edx-0x3d]
  411f9f:	add    BYTE PTR [ecx],al
  411fa1:	pop    edx
  411fa2:	adc    bl,0x8b
  411fa5:	add    DWORD PTR [eax-0x7c],edi
  411fa8:	hlt    
  411fa9:	repz push edi
  411fab:	pop    es
  411fac:	dec    BYTE PTR [ebx-0x2a]
  411faf:	add    eax,DWORD PTR [ecx]
  411fb1:	rep outs dx,BYTE PTR ds:[esi]
  411fb3:	retf   
  411fb4:	inc    ebx
  411fb5:	mov    dl,0x97
  411fb7:	mov    esi,0x9c5de74
  411fbc:	add    bl,dh
  411fbe:	in     eax,dx
  411fbf:	jbe    0x412033
  411fc1:	sti    
  411fc2:	mov    edi,0xa276019b
  411fc7:	stc    
  411fc8:	push   edi
  411fc9:	or     eax,ebx
  411fcb:	dec    ecx
  411fcc:	(bad)  
  411fcd:	hlt    
  411fce:	arpl   WORD PTR [ebp-0x24ed7f9],di
  411fd4:	je     0x411fe8
  411fd6:	dec    eax
  411fd7:	adc    al,BYTE PTR [eax]
  411fd9:	repz out dx,eax
  411fdb:	lahf   
  411fdc:	cmp    ch,ch
  411fde:	je     0x411fd0
  411fe0:	push   cs
  411fe1:	add    BYTE PTR [eax],al
  411fe3:	add    BYTE PTR [esi+ebp*8+0x3ff74c7c],al
  411fea:	jns    0x411fec
  411fec:	outs   dx,BYTE PTR ds:[esi]
  411fed:	xor    esi,edi
  411fef:	dec    edi
  411ff0:	and    al,cl
  411ff2:	push   es
  411ff3:	cwde   
  411ff4:	lods   al,BYTE PTR ds:[esi]
  411ff5:	lds    edx,FWORD PTR [ecx+0x0]
  411ff8:	cwde   
  411ff9:	repnz sar DWORD PTR [edi-0x3ec6e9c4],cl
  412000:	out    0xef,eax
  412002:	scas   al,BYTE PTR es:[edi]
  412003:	mov    bl,BYTE PTR [edi-0xdf8ea91]
  412009:	out    dx,eax
  41200a:	add    DWORD PTR [esi+0x24],edx
  41200d:	push   ebp
  41200e:	(bad)  
  412010:	repz out dx,eax
  412012:	jl     0x412003
  412014:	js     0x411fc3
  412016:	lahf   
  412017:	cmp    cl,BYTE PTR [ebx-0xa]
  41201a:	std    
  41201b:	xor    DWORD PTR [ebx],esi
  41201d:	mov    DWORD PTR [eax-0x4e4e63f2],esp
  412023:	inc    dh
  412025:	push   es
  412026:	out    dx,eax
  412027:	jbe    0x411fc7
  412029:	adc    BYTE PTR [ecx+0x56a0301b],bh
  41202f:	or     dl,cl
  412031:	push   es
  412032:	add    cl,BYTE PTR [eax*8+0xcb32909]
  412039:	jge    0x411fe4
  41203b:	add    dh,bl
  41203d:	outs   dx,BYTE PTR ds:[esi]
  41203e:	das    
  41203f:	add    dh,bl
  412041:	push   es
  412042:	pop    esp
  412043:	shl    esp,0x56
  412046:	xchg   ecx,eax
  412047:	add    eax,0x8d000000
  41204c:	(bad)  
  41204d:	push   DWORD PTR [esi+0x7e]
  412050:	add    ch,BYTE PTR [edi-0x57bd11c0]
  412056:	mov    cl,0x37
  412058:	out    dx,eax
  412059:	dec    ecx
  41205a:	push   eax
  41205b:	in     eax,0xfd
  41205d:	push   0xffffff86
  41205f:	call   0xd61f9b6a
  412064:	jae    0x412041
  412066:	test   BYTE PTR [edi-0x3af81a02],dl
  41206c:	push   es
  41206d:	ins    BYTE PTR es:[edi],dx
  41206e:	add    esp,0xcc07d6fc
  412074:	jns    0x41205d
  412076:	add    al,0xf3
  412078:	shl    bh,0x1
  41207b:	repz push es
  41207d:	ins    BYTE PTR es:[edi],dx
  41207e:	and    DWORD PTR [esp+edi*8-0x4873f84a],0xb6f304e7
  412089:	call   0xaa114734
  41208e:	cld    
  41208f:	jl     0x4120e3
  412091:	bound  ebx,QWORD PTR [eax]
  412093:	jae    0x41207f
  412095:	jmp    0x412099
  412097:	repz push es
  412099:	sbb    ch,BYTE PTR [esi+0x1e7ff73]
  41209f:	repz push es
  4120a1:	add    bl,bh
  4120a3:	jle    0x41202f
  4120a5:	mov    ecx,fs
  4120a7:	lock cld 
  4120a9:	std    
  4120aa:	enterw 0x87ed,0xac
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    ah,ch
  4120b3:	inc    eax
  4120b4:	mov    edi,0x7b888ede
  4120b9:	loope  0x4120ab
  4120bb:	xchg   ecx,eax
  4120bc:	push   es
  4120bd:	jo     0x4120f1
  4120bf:	cmc    
  4120c0:	je     0x4120c9
  4120c2:	hlt    
  4120c3:	jb     0x4120cd
  4120c5:	push   0xffffff92
  4120c7:	in     eax,0xfe
  4120c9:	cs hlt 
  4120cb:	std    
  4120cc:	mov    WORD PTR [edi+eiz*8-0x5],gs
  4120d0:	std    
  4120d1:	push   ds
  4120d2:	fist   WORD PTR ds:0x70f0e800
  4120d8:	add    al,0xb3
  4120da:	imul   ecx,DWORD PTR [ebx-0x8],0x74
  4120de:	jb     0x4120c4
  4120e0:	(bad)  
  4120e1:	(bad)  
  4120e2:	cmc    
  4120e3:	jecxz  0x412133
  4120e5:	call   0x6cc027d9
  4120ea:	clc    
  4120eb:	inc    edi
  4120ec:	aas    
  4120ed:	aas    
  4120ee:	mov    dl,0x73
  4120f0:	push   ds
  4120f1:	fisub  WORD PTR [ebx+0x4]
  4120f4:	mov    ebp,DWORD PTR [edi+ebx*8]
  4120f7:	dec    ebx
  4120f8:	push   esi
  4120f9:	pop    esp
  4120fa:	sbb    ebp,eax
  4120fc:	cld    
  4120fd:	(bad)  
  4120fe:	in     eax,dx
  4120ff:	les    eax,FWORD PTR [ebx-0x47]
  412102:	lock or BYTE PTR [eax],al
  412105:	jmp    0xaf3f8602
  41210a:	cmc    
  41210b:	xchg   eax,eax
  41210d:	sbb    al,0x7d
  41210f:	inc    edx
  412110:	cmp    DWORD PTR [ebx+eiz*8],edx
  412113:	jno    0x4120b7
  412115:	fiadd  DWORD PTR [eax]
  412117:	add    BYTE PTR [eax],al
  412119:	xor    BYTE PTR [edx+0x59],bl
  41211c:	mov    al,ds:0x7b2
  412121:	loope  0x41215c
  412123:	jmp    0x6e83:0xe98007f6
  41212a:	hlt    
  41212b:	mov    al,BYTE PTR [ebp+0x2e]
  41212e:	stos   BYTE PTR es:[edi],al
  41212f:	mov    dh,BYTE PTR [ebx+0xe]
  412132:	adc    BYTE PTR [ecx+0x1e],0xe6
  412136:	stos   DWORD PTR es:[edi],eax
  412137:	mov    bh,BYTE PTR [ebp+0x52]
  41213a:	loope  0x412136
  41213c:	add    edx,ebp
  41213e:	mov    bh,0x56
  412140:	push   ebx
  412141:	mov    eax,ds:0xe6458840
  412146:	pop    ds
  412147:	das    
  412148:	int3   
  412149:	or     ecx,DWORD PTR [eax]
  41214b:	mov    eax,DWORD PTR [ebp-0x3e]
  41214e:	mov    bh,0x67
  412150:	inc    eax
  412151:	int    0x96
  412153:	or     edi,edi
  412155:	addr16 add bh,bh
  412158:	adc    eax,0x3df64e
  41215d:	push   edi
  41215e:	dec    eax
  41215f:	jno    0x41219f
  412161:	test   eax,0xdd4d853a
  412166:	iret   
  412167:	dec    esp
  412168:	or     al,0x54
  41216a:	jecxz  0x41217a
  41216c:	mov    dh,0x67
  41216e:	add    al,0x8a
  412170:	inc    ebp
  412171:	ret    0x517d
  412174:	adc    eax,0x811d7ba
  412179:	pushf  
  41217a:	mov    ebx,0x80fe
  41217f:	add    BYTE PTR [edi],bh
  412181:	add    al,BYTE PTR [ecx]
  412183:	jne    0x41211b
  412185:	cmp    DWORD PTR [edi+edi*8-0x76],eax
  412189:	enter  0x4d3a,0x8e
  41218d:	xchg   ebp,eax
  41218e:	fimul  WORD PTR [ebp-0xb2f529]
  412194:	out    0xa,eax
  412196:	(bad)  
  412197:	jne    0x412127
  412199:	add    dh,BYTE PTR [eax+ecx*1-0xd]
  41219d:	xchg   esp,eax
  41219e:	in     eax,dx
  41219f:	dec    ebx
  4121a0:	add    DWORD PTR [esi],ebp
  4121a2:	add    al,0xff
  4121a4:	fidivr WORD PTR [ecx+0x77]
  4121a7:	rol    ah,cl
  4121a9:	jl     0x41213b
  4121ab:	sbb    eax,0xe737691f
  4121b0:	ds test al,0x1
  4121b3:	add    BYTE PTR [ebx+eax*8-0x12103ec6],ah
  4121ba:	js     0x4121bb
  4121bc:	jno    0x412213
  4121be:	add    esi,DWORD PTR [ebx-0x8]
  4121c1:	bound  eax,QWORD PTR [ebx+esi*2-0x14]
  4121c5:	popf   
  4121c6:	add    al,0x14
  4121c8:	push   ebx
  4121c9:	ffreep st(1)
  4121cb:	push   DWORD PTR [ecx]
  4121cd:	call   0x820c:0x4170eb78
  4121d4:	pop    ss
  4121d5:	icebp  
  4121d6:	mov    al,0x69
  4121d8:	repz js 0x412207
  4121db:	mov    ch,BYTE PTR [esi-0x1301210b]
  4121e1:	mov    DWORD PTR [edi+ecx*2],eax
  4121e4:	add    BYTE PTR [eax],al
  4121e6:	add    ah,ah
  4121e8:	jnp    0x4121d7
  4121ea:	imul   esi,ebx,0xd40f8ef8
  4121f0:	jnp    0x4121e7
  4121f2:	inc    BYTE PTR [esi-0x18]
  4121f5:	add    al,0x14
  4121f7:	add    edi,esi
  4121f9:	sar    edi,0x71
  4121fc:	call   0x1e309605
  412201:	inc    esp
  412202:	jmp    0xeff3:0x17bed0d6
  412209:	cmp    edi,0x178ded6b
  41220f:	jo     0x412235
  412211:	loopne 0x41221a
  412213:	mov    WORD PTR [ebp-0x4b],gs
  412216:	and    esi,edi
  412218:	push   es
  412219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221a:	jbe    0x41224c
  41221c:	and    ebp,edi
  41221e:	mov    bl,0x24
  412220:	push   edi
  412221:	add    DWORD PTR [ebx+ebx*2],eax
  412224:	in     eax,dx
  412225:	jmp    0xe8f8152d
  41222a:	test   al,0x69
  41222c:	in     al,0x1c
  41222e:	inc    edx
  41222f:	add    BYTE PTR [edi],al
  412231:	sbb    al,0x79
  412233:	pop    eax
  412234:	pop    eax
  412235:	sbb    BYTE PTR [edi-0x51],dh
  412238:	(bad)  
  412239:	mov    bh,0x78
  41223b:	mov    bh,0xe
  41223d:	pop    esi
  41223e:	shl    DWORD PTR ds:0xecf1ff14,cl
  412244:	push   es
  412245:	fs inc ebx
  412247:	lahf   
  412248:	add    bh,cl
  41224a:	inc    ebx
  41224b:	add    BYTE PTR [eax],al
  41224d:	add    BYTE PTR [ecx],cl
  41224f:	or     al,0x72
  412251:	mov    esi,0x78ed901c
  412256:	mov    bh,0xfa
  412258:	pusha  
  412259:	mov    ebp,0x3ae8b6f0
  41225e:	xor    al,BYTE PTR [ebx]
  412260:	out    0xae,eax
  412262:	imul   ebp,ebx,0x85fc176a
  412268:	test   BYTE PTR [edi],cl
  41226a:	in     al,0x50
  41226c:	mov    edx,0x6c084a43
  412271:	xchg   ah,bl
  412273:	lods   eax,DWORD PTR ds:[esi]
  412274:	fs mov esi,0x8dee56c0
  41227a:	mov    esp,0xbe0c2c8d
  41227f:	jae    0x412254
  412281:	add    eax,DWORD PTR [edx]
  412283:	cli    
  412284:	cld    
  412285:	inc    edi
  412286:	add    DWORD PTR [edi-0x19],eax
  412289:	mov    BYTE PTR [ebx-0x4cca148d],dh
  41228f:	in     eax,dx
  412290:	in     al,dx
  412291:	mov    ?,WORD PTR [eax]
  412293:	repz add BYTE PTR [eax-0x7],ah
  412297:	pop    DWORD PTR [ebx-0x4f]
  41229a:	jbe    0x4122dc
  41229c:	add    al,0x59
  41229e:	neg    BYTE PTR [ebx-0x39]
  4122a1:	stos   DWORD PTR es:[edi],eax
  4122a2:	jmp    0x4122aa
  4122a4:	std    
  4122a5:	sbb    eax,0xe96a0b1b
  4122aa:	icebp  
  4122ab:	jae    0x4122d1
  4122ad:	fyl2x  
  4122af:	jae    0x4122d5
  4122b1:	fld    DWORD PTR [eax]
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	icebp  
  4122b6:	aaa    
  4122b7:	std    
  4122b8:	fdiv   QWORD PTR [esp+edx*1-0x21b616c0]
  4122bf:	sbb    DWORD PTR [ecx],ebp
  4122c1:	cmp    dh,bl
  4122c3:	ret    0xf0ed
  4122c6:	push   ebp
  4122c7:	mov    DWORD PTR [ebp-0x63],eax
  4122ca:	push   es
  4122cb:	mov    esp,DWORD PTR [eax+eax*1+0xbcfd57]
  4122d2:	nop
  4122d3:	inc    ebx
  4122d4:	icebp  
  4122d5:	icebp  
  4122d6:	jb     0x4122e4
  4122d8:	ss (bad) 
  4122da:	sti    
  4122db:	adc    esi,ebp
  4122dd:	fiadd  WORD PTR [esi+0x0]
  4122e0:	ins    BYTE PTR es:[edi],dx
  4122e1:	aaa    
  4122e2:	jne    0x4122e7
  4122e4:	push   0x27
  4122e6:	sti    
  4122e7:	jmp    0x1085a0d6
  4122ec:	lods   al,BYTE PTR ds:[esi]
  4122ed:	scas   al,BYTE PTR es:[edi]
  4122ee:	or     eax,DWORD PTR [eax]
  4122f0:	call   0xc478:0xdc38de25
  4122f7:	inc    ecx
  4122f8:	jmp    0x2f975448
  4122fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122fe:	les    eax,FWORD PTR [ecx-0x17]
  412301:	sbb    bh,dl
  412303:	adc    ecx,ebp
  412305:	fiadd  WORD PTR [esi+0x0]
  412308:	adc    edx,edx
  41230a:	sahf   
  41230b:	ret    
  41230c:	sub    ch,bh
  41230e:	jae    0x412327
  412310:	add    BYTE PTR [ebx],ah
  412312:	daa    
  412313:	or     al,0xb7
  412315:	leave  
  412316:	add    al,BYTE PTR [ebp+0x1d]
  41231c:	xchg   edx,eax
  41231d:	mov    ebp,0x2713003f
  412322:	pushf  
  412323:	(bad)
  412326:	mov    BYTE PTR ds:0x3fcf72,0x5b
  41232d:	pop    esi
  41232e:	sti    
  41232f:	adc    eax,0x40128a
  412334:	adc    al,0xa2
  412336:	or     BYTE PTR [edi-0x3cc8fcf7],dh
  41233c:	dec    edi
  41233d:	sub    al,0x68
  41233f:	sar    BYTE PTR [edi],1
  412341:	inc    esp
  412342:	add    bh,bh
  412344:	aas    
  412345:	aam    0x12
  412347:	inc    eax
  412348:	dec    edx
  412349:	cmp    DWORD PTR [edi-0x1393d08c],edi
  41234f:	jne    0x4123ab
  412351:	add    al,0x50
  412353:	(bad)  
  412354:	aas    
  412355:	mov    eax,0xa10a4012
  41235a:	or     BYTE PTR [edi-0x3cc8fba7],dh
  412360:	aas    
  412361:	add    BYTE PTR [edx],dh
  412363:	shl    cl,0x1e
  412366:	xchg   DWORD PTR [esi+ebp*1+0xc],ecx
  41236a:	push   0x28
  41236c:	add    eax,0xa9102470
  412371:	add    al,0x30
  412373:	(bad)  
  412374:	cli    
  412375:	cld    
  412376:	fcomp  DWORD PTR [ebx]
  412378:	or     bh,ch
  41237a:	fcomp  DWORD PTR [ebx+0x18]
  41237d:	or     al,0x0
  41237f:	push   ebx
  412380:	add    BYTE PTR [eax],al
  412382:	add    BYTE PTR [ecx+0x721d38d8],cl
  412388:	mov    edi,0x3d1f003f
  41238d:	push   esi
  41238e:	mov    esi,0x41c5b5f3
  412393:	repz das 
  412395:	call   DWORD PTR [ebx]
  412397:	(bad)  
  412398:	fild   DWORD PTR [ecx+0x0]
  41239b:	fcmovnu st,st(2)
  41239d:	cdq    
  41239e:	ret    
  41239f:	xor    dh,ch
  4123a1:	jbe    0x4123ba
  4123a3:	jp     0x41236f
  4123a5:	or     eax,0x8aee30b5
  4123aa:	sbb    ebp,ebx
  4123ac:	push   eax
  4123ad:	inc    ebx
  4123ae:	add    BYTE PTR [edx-0xe],bh
  4123b1:	popf   
  4123b2:	ret    
  4123b3:	mov    al,0xed
  4123b5:	mov    DWORD PTR [ebx],0x43aa7b
  4123bb:	repnz ud0 edx,DWORD PTR [ebx]
  4123bf:	inc    ebx
  4123c0:	fild   DWORD PTR [ecx+0x0]
  4123c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c4:	dec    esi
  4123c5:	adc    BYTE PTR [ebp-0x3ec31250],dh
  4123cb:	mov    esi,0xa6d06c15
  4123d0:	lods   eax,DWORD PTR ds:[esi]
  4123d1:	add    ebp,edi
  4123d3:	(bad)  
  4123d4:	cmp    eax,0x4f34016
  4123d9:	ret    
  4123da:	je     0x4123da
  4123dc:	aad    0xd
  4123de:	jbe    0x412393
  4123e0:	in     eax,dx
  4123e1:	push   ecx
  4123e2:	std    
  4123e3:	fisubr WORD PTR [ecx+0x16]
  4123e6:	inc    eax
  4123e7:	add    BYTE PTR [eax],al
  4123e9:	add    bl,dh
  4123eb:	dec    esp
  4123ec:	adc    BYTE PTR [ebp-0x3ec31250],dh
  4123f2:	data16 in al,0x33
  4123f5:	rcr    al,0xfb
  4123f8:	mov    WORD PTR [edi+edx*1-0x8],cs
  4123fc:	imul   ebp,DWORD PTR [eax],0xffffffd4
  4123ff:	jl     0x412426
  412401:	adc    BYTE PTR [eax],ah
  412403:	std    
  412404:	xor    bh,ch
  412406:	mov    ds:0xb319d9fd,eax
  41240b:	pop    es
  41240c:	(bad)  
  41240e:	sbb    cl,cl
  412410:	out    dx,eax
  412411:	add    eax,DWORD PTR [eax-0x7e]
  412414:	ret    
  412415:	test   BYTE PTR [edi+0x6a593523],dl
  41241b:	je     0x4123f4
  41241d:	mov    WORD PTR [ebx+0x1077be8c],fs
  412423:	fucomip st,st(0)
  412425:	jo     0x4123ab
  412427:	imul   bl
  412429:	pop    es
  41242a:	add    DWORD PTR [ebx+0x74],edx
  41242d:	inc    esi
  41242e:	lahf   
  41242f:	push   edi
  412430:	xor    eax,0x96f535ec
  412435:	add    BYTE PTR [esi-0x39],ch
  412438:	adc    al,0x8
  41243a:	and    edi,eax
  41243c:	xchg   edx,eax
  41243d:	jl     0x4124b1
  41243f:	je     0x412430
  412441:	add    edi,DWORD PTR [edx+0x3c]
  412444:	mov    bh,0x19
  412446:	mov    bl,0x6
  412448:	add    DWORD PTR [esi+ebx*4],ecx
  41244b:	jp     0x412441
  41244d:	pop    eax
  41244e:	add    BYTE PTR [eax],al
  412450:	add    BYTE PTR [eax+0x4c],ch
  412453:	xor    edx,DWORD PTR [ebx+0x2e]
  412456:	jl     0x412437
  412458:	add    BYTE PTR [edx+ecx*4],bh
  41245b:	and    ecx,DWORD PTR [edi]
  41245d:	jb     0x4124d3
  41245f:	repz add ebx,DWORD PTR [edi-0x4f7169fd]
  412466:	rcl    BYTE PTR [edi+0x2e027f00],cl
  41246c:	fnstenv [edx-0x35]
  41246f:	xrelease xchg BYTE PTR [edx],bl
  412472:	jnp    0x412466
  412474:	pop    eax
  412475:	js     0x4124c2
  412477:	or     edx,DWORD PTR [ebx+0x42]
  41247a:	div    BYTE PTR ds:0x9e02b784
  412480:	mov    ?,WORD PTR [eax]
  412482:	jecxz  0x41241b
  412484:	add    BYTE PTR [edi+0x17],al
  412487:	add    dh,dh
  412489:	stos   DWORD PTR es:[edi],eax
  41248a:	fild   QWORD PTR [esp+eiz*2]
  41248d:	lahf   
  41248e:	jg     0x412455
  412490:	imul   BYTE PTR [ebx]
  412492:	enter  0xde50,0x2a
  412496:	add    edi,ebp
  412498:	pop    esp
  412499:	div    ebx
  41249b:	ss into 
  41249d:	cli    
  41249e:	adc    ch,BYTE PTR es:[ecx]
  4124a1:	out    dx,eax
  4124a2:	mov    eax,eax
  4124a4:	xor    eax,0x3dfd896f
  4124a9:	fimul  WORD PTR [ecx+0x60e235d9]
  4124af:	or     BYTE PTR [edx],bh
  4124b1:	sbb    al,0xf4
  4124b3:	adc    ebx,ecx
  4124b5:	add    BYTE PTR [eax],al
  4124b7:	add    BYTE PTR [esi],al
  4124b9:	inc    edi
  4124ba:	add    BYTE PTR [edx+0x3b],ch
  4124bd:	add    dh,BYTE PTR [eax-0x38ab4218]
  4124c3:	stos   DWORD PTR es:[edi],eax
  4124c4:	add    eax,DWORD PTR [edi]
  4124c6:	push   ebx
  4124c7:	jb     0x41250c
  4124c9:	inc    ebp
  4124ca:	push   ecx
  4124cb:	jbe    0x412497
  4124cd:	(bad)  
  4124ce:	cld    
  4124cf:	aam    0xf8
  4124d1:	sbb    BYTE PTR [eax-0x17],al
  4124d4:	jno    0x4124c4
  4124d6:	std    
  4124d7:	aad    0xbc
  4124d9:	xchg   DWORD PTR [ebx+0x55],ecx
  4124dc:	and    al,0x87
  4124de:	loopne 0x4124d9
  4124e0:	aaa    
  4124e1:	out    0x13,al
  4124e3:	cdq    
  4124e4:	mov    al,BYTE PTR [edi]
  4124e6:	push   0xffffffe6
  4124e8:	cwde   
  4124e9:	push   es
  4124ea:	add    cl,ch
  4124ec:	jo     0x4124e1
  4124ee:	jae    0x4124d1
  4124f0:	arpl   WORD PTR [ecx-0x4],cx
  4124f3:	adc    DWORD PTR [eax],eax
  4124f5:	repnz std 
  4124f7:	push   ds
  4124f8:	jnp    0x4124c1
  4124fa:	je     0x4124c4
  4124fc:	pop    edx
  4124fd:	pop    es
  4124fe:	push   0xffffffe9
  412500:	fnstsw WORD PTR [eax+0xc]
  412503:	add    BYTE PTR [ecx-0x31ba762f],bl
  412509:	loopne 0x412517
  41250b:	(bad)  
  41250c:	mov    ebp,0x46c084f5
  412511:	add    al,0x89
  412513:	inc    ebp
  412514:	into   
  412515:	loopne 0x4124d2
  412517:	cld    
  412518:	int    0xf5
  41251a:	mov    al,0x1
  41251c:	add    BYTE PTR [eax],al
  41251e:	add    BYTE PTR [ecx-0x51ba7702],dh
  412524:	loopne 0x4124d5
  412526:	cld    
  412527:	lods   eax,DWORD PTR ds:[esi]
  412528:	cmc    
  412529:	xor    al,al
  41252b:	rol    ecx,1
  41252d:	ret    0x9a08
  412530:	dec    edi
  412531:	xchg   esp,ebp
  412533:	or     esp,esp
  412535:	sub    al,0x83
  412537:	iret   
  412538:	push   cs
  412539:	add    BYTE PTR [esi+0x6],dl
  41253c:	js     0x412526
  41253e:	repnz out dx,eax
  412540:	or     DWORD PTR [eax],eax
  412542:	cmp    al,0x56
  412544:	jbe    0x4125b0
  412546:	lea    eax,[edi]
  412548:	rcl    DWORD PTR [eax+0x53],cl
  41254b:	bound  edi,QWORD PTR [ebp-0x74420007]
  412551:	shl    BYTE PTR [ecx+edi*1-0x77],0x79
  412556:	or     BYTE PTR [edx-0x7f],cl
  412559:	xor    DWORD PTR [eax],esi
  41255b:	and    al,0x48
  41255d:	add    BYTE PTR [esp+ecx*1+0x5e],dh
  412561:	or     bh,bh
  412563:	inc    edi
  412564:	add    BYTE PTR [ecx-0x4a82dbb],cl
  41256a:	(bad)  
  41256b:	cdq    
  41256c:	retf   
  41256d:	or     al,0x83
  41256f:	aas    
  412570:	add    al,0x0
  412572:	je     0x412590
  412574:	pop    esi
  412575:	or     bh,bh
  412577:	push   edi
  412578:	add    al,0x89
  41257a:	inc    ebp
  41257b:	cli    
  41257c:	push   edi
  41257d:	sti    
  41257e:	(bad)  
  41257f:	repz pusha 
  412581:	lds    ecx,FWORD PTR [eax+eax*1]
  412584:	add    BYTE PTR [eax],al
  412586:	jo     0x41250a
  412588:	adc    DWORD PTR [eax],eax
  41258a:	pop    edi
  41258b:	cld    
  41258c:	addr16 or ah,cl
  41258f:	jp     0x4125a2
  412591:	mov    ebp,DWORD PTR [esi]
  412593:	push   es
  412594:	push   ecx
  412595:	std    
  412596:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412597:	pusha  
  412598:	lds    ecx,FWORD PTR [ecx+ecx*2]
  41259b:	idiv   ah
  41259d:	jae    0x4125a6
  41259f:	arpl   WORD PTR [ebp-0x10],ax
  4125a2:	inc    ebx
  4125a3:	fst    st(6)
  4125a5:	xor    DWORD PTR [edi-0x44bc712f],0x97e84f0d
  4125af:	mov    dl,0xfb
  4125b1:	std    
  4125b2:	cwde   
  4125b3:	aam    0xfc
  4125b5:	jae    0x41259a
  4125b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b8:	jne    0x4125c6
  4125ba:	je     0x4125ce
  4125bc:	or     al,0xfd
  4125be:	and    BYTE PTR [ebp+0x1e014015],dl
  4125c4:	add    al,0xf5
  4125c6:	cmp    edi,eax
  4125c8:	shl    ebp,0x3b
  4125cb:	sub    ecx,ecx
  4125cd:	ret    0xdde3
  4125d0:	imul   eax,DWORD PTR [eax-0x2fe220d],0xfd09c9c7
  4125da:	fsubp  st(5),st
  4125dc:	cmovo  esi,ebx
  4125df:	push   esp
  4125e0:	js     0x412606
  4125e2:	out    dx,eax
  4125e3:	pop    esp
  4125e4:	adc    eax,0x19e011c
  4125e9:	cmc    
  4125ea:	add    BYTE PTR [eax],al
  4125ec:	add    BYTE PTR [ebx],bh
  4125ee:	call   0x1f6d1bb4
  4125f3:	or     BYTE PTR [eax],al
  4125f5:	sahf   
  4125f6:	push   0xd90f81f0
  4125fb:	or     BYTE PTR [ebx-0x9],0x5
  4125ff:	es push ecx
  412601:	inc    ebp
  412602:	pop    edi
  412603:	addr16 add al,0xf3
  412606:	push   es
  412607:	add    DWORD PTR [eax],0x37f0649
  41260d:	repz push es
  41260f:	addr16 std 
  412611:	inc    eax
  412612:	jmp    FWORD PTR [ebx+0x47]
  412615:	(bad)  
  412616:	fist   WORD PTR [ebx]
  412618:	stc    
  412619:	mov    esi,0x3fc463f2
  41261e:	addr16 je 0x412667
  412621:	scas   eax,DWORD PTR es:[edi]
  412622:	push   edi
  412623:	ins    BYTE PTR es:[edi],dx
  412624:	jbe    0x4125c9
  412626:	fild   WORD PTR [ebx]
  412628:	add    BYTE PTR [ebp+0x1fc363f2],bl
  41262e:	push   edi
  41262f:	cli    
  412630:	fadd   st,st(4)
  412632:	push   ebx
  412633:	mov    bl,0x74
  412635:	sub    al,0x7e
  412637:	cmp    al,0xf4
  412639:	add    DWORD PTR [eax+ebp*2],eax
  41263c:	std    
  41263d:	repz push es
  41263f:	inc    edi
  412640:	add    esp,esi
  412642:	xor    ah,al
  412644:	pop    esi
  412645:	pop    edi
  412646:	jp     0x412633
  412648:	cmp    BYTE PTR [edx+0x79],ah
  41264b:	sub    dl,BYTE PTR [esi+0x4b]
  41264e:	jb     0x4126aa
  412650:	cld    
  412651:	add    BYTE PTR [eax],al
  412653:	add    BYTE PTR [esi-0x80],cl
  412656:	out    0x38,al
  412658:	xor    bh,BYTE PTR [ebx-0x32]
  41265b:	push   eax
  41265c:	push   0x9d52df44
  412661:	push   esi
  412662:	data16 jbe 0x412694
  412665:	repnz hlt 
  412667:	aaa    
  412668:	add    DWORD PTR [edi-0x19],eax
  41266b:	xchg   BYTE PTR [ebx],dh
  41266d:	jnp    0x41264a
  41266f:	mov    BYTE PTR [eax-0x7f39fe02],dh
  412675:	or     esi,DWORD PTR [eax+0x44]
  412678:	out    dx,eax
  412679:	fld    QWORD PTR [eax]
  41267b:	aad    0xff
  41267d:	cmp    ebp,eax
  41267f:	mov    ebx,0x74fdf463
  412684:	xor    eax,0xebbce8f3
  412689:	repz std 
  41268b:	(bad)  [eax-0x4ddfa6b0]
  412691:	or     al,BYTE PTR [eax]
  412693:	jo     0x412684
  412695:	mov    DWORD PTR [ebp-0x1b],ebx
  412698:	jne    0x4126df
  41269a:	cld    
  41269b:	add    DWORD PTR [eax],ebp
  41269d:	lock std 
  41269f:	out    dx,al
  4126a0:	xor    ecx,0x3e7dd0ea
  4126a6:	aas    
  4126a7:	imul   esp,DWORD PTR [esi+0x70fd71f1],0xf05402f9
  4126b1:	aaa    
  4126b2:	(bad)  
  4126b3:	dec    edi
  4126b4:	jle    0x4126b2
  4126b6:	call   0x4127ac
  4126bb:	jo     0x4126b6
  4126bd:	add    al,0x3c
  4126bf:	hlt    
  4126c0:	xchg   DWORD PTR [edx],esp
  4126c2:	jmp    0x7371652d
  4126c7:	mov    bh,0x31
  4126c9:	cmp    dh,BYTE PTR [ecx-0x5775fb24]
  4126cf:	call   0x587ae78c
  4126d4:	jp     0x4126fa
  4126d6:	icebp  
  4126d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d8:	ficom  WORD PTR [ebp+0x5a]
  4126db:	dec    eax
  4126dc:	repz ret 0xf0ed
  4126e0:	push   ebp
  4126e1:	mov    DWORD PTR [ebp-0x62],edi
  4126e4:	inc    ecx
  4126e5:	or     eax,0x50feb09e
  4126ea:	jae    0x4126b4
  4126ec:	ss push esi
  4126ee:	out    0x61,al
  4126f0:	jne    0x412702
  4126f2:	fisub  WORD PTR [ecx-0x37]
  4126f5:	mov    eax,DWORD PTR [eax]
  4126f7:	dec    esi
  4126f8:	(bad)  
  4126f9:	cli    
  4126fa:	pcmpeqw mm0,mm2
  4126fd:	or     ebp,DWORD PTR [edi-0x2d4d0246]
  412703:	xchg   edx,eax
  412704:	dec    edi
  412705:	sti    
  412706:	cmovl  eax,DWORD PTR [esi-0x5]
  41270a:	data16 aad 0x9d
  41270d:	inc    ecx
  41270e:	or     al,0xd5
  412710:	mov    dh,0xd7
  412712:	add    edi,eax
  412714:	pop    es
  412715:	retf   0x250f
  412718:	clc    
  412719:	or     ebp,DWORD PTR [edi-0x7b67dff]
  41271f:	add    BYTE PTR [eax],al
  412721:	add    ch,dl
  412723:	mov    ch,0xc0
  412725:	cmp    edx,esp
  412727:	sti    
  412728:	sbb    BYTE PTR [eax+0xf00049a],0x7d
  41272f:	les    eax,FWORD PTR [ebp+0x5b819a45]
  412735:	adc    al,0x9
  412737:	addr16 or al,0x0
  41273a:	cdq    
  41273b:	sar    DWORD PTR [edi+0x7d],cl
  41273e:	stos   BYTE PTR es:[edi],al
  41273f:	add    al,0x76
  412741:	adc    DWORD PTR es:[edi+0xc],eax
  412745:	mov    ebx,edi
  412747:	add    bh,bh
  412749:	ret    0x802a
  41274c:	ret    
  41274d:	call   0x3d1305
  412752:	push   ebp
  412753:	mov    dh,0x43
  412755:	inc    ecx
  412756:	dec    ebx
  412757:	inc    edi
  412758:	or     BYTE PTR [edi],cl
  41275a:	or     al,0x45
  41275c:	xor    BYTE PTR [ecx],al
  41275e:	ud0    eax,DWORD PTR [esi+0x41315645]
  412765:	adc    BYTE PTR [eax],bh
  412767:	rol    BYTE PTR [edi+0x4380f24f],cl
  41276d:	inc    ecx
  41276e:	sbb    DWORD PTR [edi],edi
  412770:	clc    
  412771:	cmp    al,0xf3
  412773:	fidiv  WORD PTR [eax+0x11]
  412776:	push   0x300111ab
  41277b:	push   ebp
  41277c:	dec    DWORD PTR [ecx+0x3f1475e0]
  412782:	mov    al,0xf4
  412784:	fnstenv [edx+0x0]
  412787:	add    BYTE PTR [eax],al
  412789:	std    
  41278a:	inc    esp
  41278b:	and    eax,0x1692f13c
  412790:	mov    DWORD PTR [esi],ebp
  412792:	out    dx,al
  412793:	push   es
  412794:	ror    eax,0xdf
  412797:	mov    edx,DWORD PTR [ecx]
  412799:	imul   ebp,esi,0x44
  41279c:	inc    ecx
  41279d:	or     BYTE PTR [esi],ah
  41279f:	jae    0x412797
  4127a1:	fcomp  st(2)
  4127a3:	xor    eax,0x8ecf4604
  4127a8:	inc    ebx
  4127a9:	jecxz  0x412787
  4127ab:	(bad)  
  4127ac:	jmp    0x88549ba6
  4127b1:	add    bl,BYTE PTR [edi]
  4127b3:	inc    ebx
  4127b4:	cmp    DWORD PTR [ebx+0x2689f24b],edi
  4127ba:	(bad)  
  4127bb:	add    ecx,DWORD PTR [ebp-0x1]
  4127be:	jbe    0x412805
  4127c0:	clc    
  4127c1:	enter  0x79f,0x86
  4127c5:	or     eax,0x15fdf7b9
  4127ca:	adc    eax,0xddffc2c9
  4127cf:	dec    esi
  4127d0:	mov    DWORD PTR [edi+0x5c],edx
  4127d3:	call   0x4f70e808
  4127d8:	xor    DWORD PTR [ecx-0x34],eax
  4127db:	clc    
  4127dc:	inc    ebp
  4127dd:	add    BYTE PTR [esi+0x765b5389],bl
  4127e3:	dec    ebp
  4127e4:	lock push 0x12
  4127e7:	fadd   QWORD PTR [edi+0x533989b6]
  4127ed:	add    BYTE PTR [eax],al
  4127ef:	add    BYTE PTR [edi],al
  4127f1:	pop    es
  4127f2:	test   BYTE PTR [ecx+0x3e7057a],0x6a
  4127f9:	inc    ecx
  4127fa:	fisttp WORD PTR [edx+0x4760d2c0]
  412800:	pop    ds
  412801:	jnp    0x4127b7
  412803:	adc    ebp,DWORD PTR [ecx+ebx*2+0x3f]
  412807:	cmp    eax,0x6064ff29
  41280c:	hlt    
  41280d:	out    dx,al
  41280e:	out    0x8c,eax
  412810:	cmp    bl,bl
  412812:	jb     0x412863
  412814:	jmp    0x412797
  412816:	jmp    0x41282a
  412818:	imul   edi,DWORD PTR [esi+edx*1],0x3e
  41281c:	sub    BYTE PTR [edi],cl
  41281e:	fidivr WORD PTR [edi+0xd]
  412821:	or     bh,ah
  412823:	add    edi,DWORD PTR [eax+0x57]
  412826:	inc    al
  412828:	xor    bh,ah
  41282a:	call   0x62481b32
  41282f:	hlt    
  412830:	jmp    0x5c82:0x4976fb43
  412837:	call   0x8d1c94b0
  41283c:	cmp    bl,dh
  41283e:	bound  esi,QWORD PTR [esi-0x75]
  412841:	das    
  412842:	repz cmp al,0x0
  412845:	inc    ebp
  412846:	jb     0x412820
  412848:	mov    edx,0xe576d74b
  41284d:	or     DWORD PTR [eax+esi*8],0x6ee1fb2b
  412854:	add    BYTE PTR [eax],al
  412856:	add    ch,ch
  412858:	inc    ebp
  412859:	loop   0x4128d1
  41285b:	add    ebp,DWORD PTR [ebx-0x67]
  41285e:	dec    eax
  41285f:	sbb    dh,bh
  412861:	adc    al,0x2
  412863:	je     0x4128d1
  412865:	(bad)
  412869:	ret    0x4376
  41286c:	ins    BYTE PTR es:[edi],dx
  41286d:	add    dl,ch
  41286f:	imul   esi,DWORD PTR [edx-0x10],0xe6a56a
  412876:	out    0xf8,eax
  412878:	das    
  412879:	jnp    0x4128cc
  41287b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41287c:	pop    es
  41287d:	inc    edx
  41287e:	inc    edx
  41287f:	adc    al,0x87
  412881:	arpl   WORD PTR [ecx-0x10],cx
  412884:	jg     0x412901
  412886:	fyl2x  
  412888:	jno    0x41287e
  41288a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288b:	mov    edi,0x4bb51479
  412890:	cmp    BYTE PTR [ebx+0x45],0x7f
  412894:	inc    ecx
  412895:	call   0x2a30566c
  41289a:	cmp    DWORD PTR [ecx],esi
  41289c:	dec    ecx
  41289d:	xchg   DWORD PTR [esp+esi*4+0x1f19537f],edi
  4128a4:	pop    edx
  4128a5:	clc    
  4128a6:	jb     0x4128c5
  4128a8:	jecxz  0x4128d3
  4128aa:	stc    
  4128ab:	hlt    
  4128ac:	fwait
  4128ad:	xlat   BYTE PTR ds:[ebx]
  4128ae:	stos   DWORD PTR es:[edi],eax
  4128af:	imul   edi,DWORD PTR [ecx-0x2c],0x39f85bde
  4128b6:	(bad)  
  4128b7:	sbb    eax,0x3c88ff
  4128bc:	add    BYTE PTR [eax],al
  4128be:	xchg   ebx,eax
  4128bf:	test   DWORD PTR [ebx-0x37],ecx
  4128c2:	mov    BYTE PTR [ecx+ecx*4],al
  4128c5:	sub    al,0xa3
  4128c7:	test   DWORD PTR [ebx-0x37],edx
  4128ca:	outs   dx,DWORD PTR ds:[esi]
  4128cb:	jno    0x4128e9
  4128cd:	jmp    0x3c43643d
  4128d2:	lock or DWORD PTR [ebp-0x16],0xf6105979
  4128da:	lea    ebx,[ecx+0x14]
  4128dd:	loop   0x412909
  4128df:	sti    
  4128e0:	mov    WORD PTR [edi-0x11],ds
  4128e3:	push   es
  4128e4:	add    BYTE PTR [esi+0x80ceb2],cl
  4128ea:	out    dx,eax
  4128eb:	push   cs
  4128ec:	add    BYTE PTR [ebx+0x7710547],cl
  4128f2:	sar    BYTE PTR [edi],1
  4128f4:	sti    
  4128f5:	mov    BYTE PTR [esi+0x1c],cl
  4128f8:	inc    ebx
  4128f9:	mov    bl,BYTE PTR [edi-0xf]
  4128fc:	shl    cl,0x16
  4128ff:	inc    edi
  412901:	mov    BYTE PTR [esi],cl
  412903:	sbb    al,0x8a
  412905:	dec    ebp
  412906:	mov    edx,0xbbc0c5f4
  41290b:	push   es
  41290c:	mov    DWORD PTR [ebx-0x43],edx
  41290f:	add    dl,cl
  412911:	add    esp,edx
  412913:	jp     0x412961
  412915:	aaa    
  412916:	fisttp DWORD PTR [ecx+0x6e6302c3]
  41291c:	in     al,0x89
  41291e:	xchg   edi,eax
  41291f:	fadd   QWORD PTR [ebp+0x5d]
  412925:	sbb    dh,BYTE PTR [eax]
  412927:	mov    edi,0x5181997d
  41292c:	loopne 0x41296f
  41292e:	ds clc 
  412930:	add    ebx,ebx
  412932:	jns    0x412985
  412934:	aam    0x51
  412936:	push   esi
  412937:	fmul   QWORD PTR [ecx+0x1ae7e887]
  41293d:	and    DWORD PTR [edi],edi
  41293f:	clc    
  412940:	jmp    0x4128e9
  412942:	mov    DWORD PTR [ecx-0xc],edi
  412945:	mov    ebp,0xc78b145c
  41294a:	loop   0x4128d3
  41294c:	jne    0x4128d0
  41294e:	jle    0x4129a9
  412950:	sbb    BYTE PTR [ecx+0x781c88d3],cl
  412956:	inc    ebx
  412957:	aaa    
  412958:	dec    ebp
  412959:	xchg   BYTE PTR [esi+eiz*8-0x75],dh
  41295d:	pop    ds
  41295e:	adc    edi,ebx
  412960:	inc    ebp
  412961:	xchg   BYTE PTR [ebx],al
  412963:	dec    ecx
  412964:	loopne 0x412959
  412966:	push   0xb08f448
  41296b:	aam    0x7c
  41296d:	and    eax,DWORD PTR [ebp+0x1b68f840]
  412973:	adc    al,0x37
  412975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412976:	jne    0x41297e
  412978:	mov    WORD PTR [ebp-0x1f0209a4],cs
  41297e:	das    
  41297f:	add    al,0x4b
  412981:	aas    
  412982:	fisttp WORD PTR [eax-0x14]
  412985:	mov    bl,0x18
  412987:	aas    
  412988:	adc    al,0x0
  41298a:	add    BYTE PTR [eax],al
  41298c:	cld    
  41298d:	dec    ecx
  41298e:	jae    0x41298e
  412990:	add    al,0x45
  412992:	mov    al,BYTE PTR [ebx-0x11]
  412995:	ja     0x4129df
  412997:	fsubr  DWORD PTR [ebx-0x1a]
  41299a:	mov    al,ch
  41299c:	dec    esp
  41299d:	jl     0x4129f9
  41299f:	(bad)  
  4129a0:	mov    cl,0x5
  4129a2:	add    al,0x31
  4129a4:	mov    bl,0x18
  4129a6:	lock push ebx
  4129a8:	push   0x3bec8201
  4129ad:	imul   ecx,DWORD PTR [eax+0x8],0x5615b678
  4129b4:	and    al,0x77
  4129b6:	dec    eax
  4129b7:	lock push 0xa9890da2
  4129bd:	push   0xb5f01050
  4129c2:	(bad)  
  4129c3:	stc    
  4129c4:	loopne 0x412999
  4129c6:	mov    esi,0xbbdd9643
  4129cb:	inc    ebx
  4129cc:	(bad)  
  4129cd:	fisttp QWORD PTR [edx+0x75764b4b]
  4129d3:	shr    BYTE PTR [edx+0x22],0xec
  4129d7:	cmp    DWORD PTR [edx-0xd45791c],esi
  4129dd:	fld    QWORD PTR [ecx]
  4129df:	sub    DWORD PTR [ebx],edi
  4129e1:	push   es
  4129e2:	cmp    cl,BYTE PTR [ebx+0x192baa8]
  4129e8:	push   0x51
  4129ea:	test   DWORD PTR [eax+0x4f60c6b0],0x57000000
  4129f4:	das    
  4129f5:	xchg   edi,eax
  4129f6:	add    eax,0x3e87a68
  4129fb:	repz pop ds
  4129fd:	test   eax,0x82d6b08b
  412a02:	add    DWORD PTR [edx+0x41],edi
  412a05:	aaa    
  412a06:	push   0x3
  412a08:	dec    esi
  412a09:	jo     0x412a52
  412a0b:	pop    ds
  412a0c:	jge    0x4129b2
  412a0e:	xlat   BYTE PTR ds:[ebx]
  412a0f:	retf   0xccc5
  412a12:	add    BYTE PTR [ecx+eax*2+0x3b],ch
  412a16:	mov    DWORD PTR [eax+0x78c302ba],esi
  412a1c:	pop    es
  412a1d:	pusha  
  412a1e:	aas    
  412a1f:	iret   
  412a20:	jle    0x4129ae
  412a22:	xlat   BYTE PTR ds:[ebx]
  412a23:	div    BYTE PTR [ecx-0x4e11144c]
  412a29:	mov    ah,0xe7
  412a2b:	push   0x6c
  412a2d:	fist   WORD PTR [eax-0x32]
  412a30:	je     0x412a45
  412a32:	cmc    
  412a33:	inc    eax
  412a34:	test   DWORD PTR [edi],0xfeeabfbf
  412a3a:	add    al,0x86
  412a3c:	dec    esp
  412a3d:	sti    
  412a3e:	mov    BYTE PTR [eax],bh
  412a40:	sti    
  412a41:	popa   
  412a42:	aas    
  412a43:	mov    ds:0xf3e04c86,eax
  412a48:	test   DWORD PTR [esp+eiz*8-0xd],eax
  412a4c:	jnp    0x412a61
  412a4e:	push   es
  412a4f:	xor    eax,0x6c03e6c1
  412a54:	je     0x4129d9
  412a56:	mov    al,BYTE PTR [eax]
  412a58:	add    BYTE PTR [eax],al
  412a5a:	sbb    bh,cl
  412a5c:	jo     0x412a9c
  412a5e:	stos   DWORD PTR es:[edi],eax
  412a5f:	rol    DWORD PTR [eax],0x2c
  412a62:	popw   es
  412a64:	(bad)  
  412a65:	and    al,0xf6
  412a67:	push   es
  412a68:	(bad)  
  412a69:	sub    al,0x43
  412a6b:	jmp    0xb284:0xea5b24c3
  412a72:	(bad)  
  412a73:	push   esp
  412a74:	or     DWORD PTR [ebx+edx*2],0x6aec7307
  412a7b:	pop    ss
  412a7c:	mov    BYTE PTR [esi+edi*1],dl
  412a7f:	jge    0x412a81
  412a81:	mov    bl,0xed
  412a83:	jmp    0x412af8
  412a85:	in     al,0x1f
  412a87:	inc    esi
  412a88:	in     al,0x52
  412a8a:	in     eax,dx
  412a8b:	xchg   DWORD PTR [ebx+0x49],edi
  412a8e:	lock jne 0x412a96
  412a91:	das    
  412a92:	int    0xea
  412a94:	add    BYTE PTR [ecx-0x3b],ah
  412a97:	adc    edi,DWORD PTR [edx]
  412a99:	lods   al,BYTE PTR ds:[esi]
  412a9a:	out    dx,eax
  412a9b:	jne    0x412ab0
  412a9d:	ds mov ch,0xe6
  412aa0:	mov    DWORD PTR [eax+edi*4+0x30114beb],ebp
  412aa7:	mov    BYTE PTR [ebx+0x41],bh
  412aaa:	lock add DWORD PTR [ebx+0x31],0xede9c35f
  412ab2:	mov    es,WORD PTR [ebp-0x2c]
  412ab5:	jmp    0xc3257035
  412aba:	std    
  412abb:	out    0x76,al
  412abd:	icebp  
  412abe:	add    BYTE PTR [eax],al
  412ac0:	add    BYTE PTR [edx+0x45],ch
  412ac3:	std    
  412ac4:	arpl   WORD PTR ds:0x7ae7e914,di
  412aca:	inc    ebp
  412acb:	adc    eax,0x80ec3a73
  412ad0:	pop    esp
  412ad1:	mov    ds:0xe83c8806,al
  412ad6:	jb     0x412adb
  412ad8:	adc    edi,DWORD PTR [edx]
  412ada:	ret    
  412adb:	je     0x412add
  412add:	test   BYTE PTR [ebp-0xfdfdf5],al
  412ae3:	or     eax,0xfdf81fc6
  412ae8:	xchg   DWORD PTR [edi],ecx
  412aea:	mov    edi,0xf7178046
  412aef:	add    BYTE PTR [edi],cl
  412af1:	iret   
  412af2:	jl     0x412af4
  412af4:	add    BYTE PTR [edx-0x7b],bl
  412af7:	or     ecx,DWORD PTR [eax]
  412af9:	fidiv  DWORD PTR [edi-0x2c]
  412afc:	add    al,al
  412afe:	std    
  412aff:	jae    0x412b20
  412b01:	retf   0xfe77
  412b04:	add    BYTE PTR [eax+0xf74134f],dl
  412b0a:	sbb    edx,DWORD PTR [ecx-0x5]
  412b0d:	ds cli 
  412b0f:	or     eax,DWORD PTR [edx+eiz*4]
  412b12:	std    
  412b13:	xchg   DWORD PTR [esp+edx*1],edx
  412b16:	mov    edi,0x6d1bfe41
  412b1b:	push   ecx
  412b1c:	sti    
  412b1d:	dec    esp
  412b1e:	enter  0xc08,0x1a
  412b22:	mov    edi,0xfe41
  412b27:	add    dl,bl
  412b29:	ins    BYTE PTR es:[edi],dx
  412b2a:	add    edi,edi
  412b2c:	lahf   
  412b2d:	ror    BYTE PTR [ecx+0x71f5e404],1
  412b33:	(bad)  
  412b34:	cmc    
  412b35:	ins    DWORD PTR es:[edi],dx
  412b36:	fdiv   st(7),st
  412b38:	outs   dx,DWORD PTR ds:[esi]
  412b39:	lock push eax
  412b3b:	call   FWORD PTR [edi-0xc]
  412b3e:	call   0xfc3521f1
  412b43:	add    edi,DWORD PTR [edx+0x6c75c07f]
  412b49:	cmc    
  412b4a:	jno    0x412b28
  412b4c:	lds    ebp,FWORD PTR [ebp+0x6f95e849]
  412b52:	hlt    
  412b53:	(bad)  
  412b55:	dec    edi
  412b56:	in     al,dx
  412b57:	push   ebx
  412b59:	dec    edx
  412b5a:	hlt    
  412b5b:	mov    esi,edi
  412b5d:	jns    0x412b26
  412b5f:	add    eax,0x87074f2
  412b64:	imul   esp,DWORD PTR [ebx],0xffffffef
  412b67:	mov    BYTE PTR [esi+0x689cd9af],dh
  412b6d:	cdq    
  412b6e:	repnz mov DWORD PTR [esi-0x2102a90f],esi
  412b75:	lea    eax,[esi]
  412b77:	(bad)  
  412b78:	mov    ds:0x448ee485,eax
  412b7d:	jns    0x412b85
  412b7f:	icebp  
  412b80:	jo     0x412b9d
  412b82:	loopne 0x412b94
  412b84:	push   0x9e81e023
  412b89:	lea    edx,[ecx]
  412b8b:	cmp    DWORD PTR [eax],eax
  412b8d:	add    BYTE PTR [eax],al
  412b8f:	scas   al,BYTE PTR es:[edi]
  412b90:	popf   
  412b91:	add    cl,BYTE PTR [eax+ebx*4+0x70fdf25f]
  412b98:	mov    ds:0x9b7810d9,eax
  412b9d:	fld    DWORD PTR [ecx+0x39110996]
  412ba3:	mov    dh,0x85
  412ba5:	add    cl,BYTE PTR [esp+eiz*4+0x48fdf227]
  412bac:	xchg   ecx,eax
  412bad:	jle    0x412b75
  412baf:	inc    ebp
  412bb0:	daa    
  412bb1:	ret    
  412bb2:	adc    bl,dh
  412bb4:	stos   BYTE PTR es:[edi],al
  412bb5:	jle    0x412ba3
  412bb7:	jo     0x412bb2
  412bb9:	sbb    al,0x51
  412bbb:	and    eax,0xd236a9
  412bc0:	stc    
  412bc1:	dec    ecx
  412bc2:	xor    DWORD PTR [ebx+0x6aec5876],esi
  412bc8:	xchg   edx,eax
  412bc9:	cmc    
  412bca:	xchg   DWORD PTR [esi+0x12],eax
  412bcd:	jl     0x412c4a
  412bcf:	fwait
  412bd0:	mov    dh,0x58
  412bd2:	adc    al,0xec
  412bd4:	push   es
  412bd5:	jne    0x412b80
  412bd7:	xchg   esp,eax
  412bd8:	out    0xe7,eax
  412bda:	jl     0x412c14
  412bdc:	call   FWORD PTR [edi+0x57]
  412bdf:	xchg   ebx,eax
  412be0:	jge    0x412bfe
  412be2:	hlt    
  412be3:	push   0x39
  412be5:	xlat   BYTE PTR ds:[ebx]
  412be6:	jp     0x412c08
  412be8:	jmp    0x412bec
  412bea:	mov    esi,0x33578fe
  412bef:	repz push es
  412bf1:	bound  edi,QWORD PTR [edi]
  412bf3:	add    BYTE PTR [eax],al
  412bf5:	add    BYTE PTR [edi+0x7b],bl
  412bf8:	cmp    al,0xf4
  412bfa:	repnz mov ebp,0xf72b3f70
  412c00:	pop    ebp
  412c01:	add    cl,bh
  412c03:	pusha  
  412c04:	sar    BYTE PTR [esi],cl
  412c06:	fcomi  st,st(7)
  412c08:	push   0x58
  412c0a:	xor    al,0xe7
  412c0c:	out    0x7c,eax
  412c0e:	inc    esp
  412c0f:	jge    0x412c25
  412c11:	fdivr  DWORD PTR [eax+0x56]
  412c14:	outs   dx,BYTE PTR ds:[esi]
  412c15:	leave  
  412c16:	mov    al,0xe2
  412c18:	call   0x72481f20
  412c1d:	hlt    
  412c1e:	retf   0xfb41
  412c21:	outs   dx,BYTE PTR ds:[esi]
  412c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c23:	jnp    0x412bc1
  412c25:	repz je 0x412c61
  412c28:	aas    
  412c29:	jge    0x412bd3
  412c2b:	into   
  412c2c:	jb     0x412c9d
  412c2e:	jmp    0x412c9d
  412c30:	lock psadbw mm3,QWORD PTR [ebx-0x65]
  412c35:	jl     0x412c8f
  412c37:	jecxz  0x412cab
  412c39:	rcr    DWORD PTR [edx],0x54
  412c3c:	imul   DWORD PTR [esi-0x2]
  412c3f:	xchg   ecx,eax
  412c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c41:	jmp    0x412c90
  412c43:	and    bl,ch
  412c45:	push   0x40
  412c47:	or     eax,0xf7382cae
  412c4c:	jp     0x412c40
  412c4e:	and    al,BYTE PTR ds:[eax]
  412c51:	stc    
  412c52:	sbb    eax,0xbc6c870d
  412c57:	mov    ?,WORD PTR [ebx-0x23]
  412c5a:	add    BYTE PTR [eax],al
  412c5c:	add    bh,al
  412c5e:	popa   
  412c5f:	hlt    
  412c60:	pop    esp
  412c61:	test   BYTE PTR [ebp+0x626fdd7b],0xe4
  412c68:	jmp    0x447a3b6f
  412c6d:	xchg   ebx,eax
  412c6e:	arpl   WORD PTR [ecx],ax
  412c70:	sub    ecx,DWORD PTR [esi+0xb]
  412c73:	or     DWORD PTR [ebx+ebx*2+0x7],0x8071c89
  412c7b:	(bad)  
  412c7c:	call   0xe2880b96
  412c81:	(bad)  
  412c84:	inc    ecx
  412c85:	(bad)  
  412c86:	popa   
  412c87:	call   0x2a3429ee
  412c8c:	xor    al,0x43
  412c8e:	xor    al,dl
  412c90:	sub    BYTE PTR [ebp-0x587eac73],dh
  412c96:	cmp    esp,esi
  412c98:	ret    0xe2c5
  412c9b:	mov    esp,eax
  412c9d:	cmp    BYTE PTR [eax],dh
  412c9f:	lock out dx,al
  412ca1:	push   ebx
  412ca2:	mov    esi,0xbe7d6042
  412ca7:	or     eax,0xde20067e
  412cac:	xbegin 0x69928840
  412cb2:	push   edx
  412cb3:	in     al,0x42
  412cb5:	cli    
  412cb6:	(bad)  
  412cb7:	pop    ebx
  412cb8:	adc    DWORD PTR [ecx+0x3a],ebx
  412cbb:	in     al,0x69
  412cbd:	inc    ebp
  412cbe:	add    eax,DWORD PTR [eax]
  412cc0:	ins    BYTE PTR es:[edi],dx
  412cc1:	add    BYTE PTR [eax],al
  412cc3:	add    BYTE PTR [ebx],dh
  412cc5:	or     DWORD PTR [ebx-0x16],esi
  412cc8:	inc    ebp
  412cc9:	push   esp
  412cca:	add    al,0x62
  412ccc:	and    eax,0x1d000cf7
  412cd1:	cmp    eax,0x33080314
  412cd6:	retf   0xd0f
  412cd9:	retf   0x0
  412cdc:	mov    dl,dh
  412cde:	inc    ecx
  412cdf:	fmul   QWORD PTR [edx]
  412ce1:	pop    eax
  412ce2:	sbb    al,0x0
  412ce4:	add    DWORD PTR [eax+0xc],esp
  412ce7:	jne    0x412c78
  412ce9:	pusha  
  412cea:	dec    ecx
  412ceb:	aam    0x12
  412ced:	pop    es
  412cee:	xor    ecx,DWORD PTR [eax-0x7d02e1e2]
  412cf4:	xchg   ebp,eax
  412cf5:	or     BYTE PTR [edx-0x223561b3],cl
  412cfb:	add    al,0x50
  412cfd:	mov    eax,ds:0x5f350c88
  412d02:	dec    ecx
  412d03:	in     al,0x6c
  412d05:	mov    ds:0x8656e1c0,eax
  412d0a:	dec    edi
  412d0b:	call   DWORD PTR [eax-0x61]
  412d0e:	call   edi
  412d10:	ret    0x3346
  412d13:	add    DWORD PTR [ecx+0x1f8902cd],ebx
  412d19:	rol    DWORD PTR [ebp+0x5963a245],0xd4
  412d20:	ror    ecx,1
  412d22:	jns    0x412d69
  412d24:	cmp    DWORD PTR [edi],0x8be4
  412d2a:	add    BYTE PTR [edi-0xb],cl
  412d2d:	call   eax
  412d2f:	xchg   ebx,eax
  412d30:	aas    
  412d31:	fmul   DWORD PTR [ebx+0x5585e957]
  412d37:	rcr    BYTE PTR ss:[ebx+ecx*4],0x8f
  412d3c:	hlt    
  412d3d:	out    0x17,eax
  412d3f:	dec    ecx
  412d40:	push   esi
  412d41:	clc    
  412d42:	push   DWORD PTR [esi-0x6]
  412d45:	xchg   BYTE PTR [ebp-0xa],dl
  412d48:	ins    BYTE PTR es:[edi],dx
  412d49:	xchg   DWORD PTR [ebp-0xd],esi
  412d4c:	aad    0x7a
  412d4e:	pop    ebx
  412d4f:	jmp    0x412d41
  412d51:	aam    0x66
  412d53:	push   0xffffffa2
  412d55:	push   edx
  412d56:	aas    
  412d57:	call   0x8fbdf70e
  412d5c:	imul   edi,DWORD PTR [edi],0xe9ab9c10
  412d62:	jmp    DWORD PTR [edi]
  412d64:	sar    BYTE PTR [edx+0x4b],cl
  412d67:	mov    ebp,DWORD PTR [ecx]
  412d69:	aas    
  412d6a:	aam    0x7
  412d6c:	lods   al,BYTE PTR ds:[esi]
  412d6d:	out    dx,al
  412d6e:	inc    ebx
  412d6f:	jg     0x412dda
  412d71:	inc    eax
  412d72:	adc    BYTE PTR [edx+0x7f0df01a],bh
  412d78:	push   0xffffffeb
  412d7a:	std    
  412d7b:	fs loope 0x412d4d
  412d7e:	jmp    FWORD PTR [edi-0xd38fd33]
  412d84:	sbb    dh,ah
  412d86:	inc    eax
  412d87:	or     BYTE PTR [ebx],ch
  412d89:	sbb    BYTE PTR ds:0xfdee1077,cl
  412d8f:	add    BYTE PTR [eax],al
  412d91:	add    BYTE PTR [ecx+ebp*2],bh
  412d94:	dec    eax
  412d95:	or     al,0x69
  412d97:	sbb    edx,eax
  412d99:	mov    bl,bh
  412d9b:	pop    eax
  412d9c:	(bad)  
  412d9d:	pop    ebp
  412d9e:	(bad)  
  412da1:	ret    0xedfb
  412da4:	xor    al,al
  412da6:	or     BYTE PTR [ebx+0x58],al
  412da9:	mov    DWORD PTR [edi],ebx
  412dab:	jno    0x412d8a
  412dad:	push   eax
  412dae:	js     0x412d5b
  412db0:	stc    
  412db1:	mov    BYTE PTR [edx+0x6a5553f1],ch
  412db7:	fwait
  412db8:	cmc    
  412db9:	mov    DWORD PTR [esi],edi
  412dbb:	mov    edx,0x8278fa7a
  412dc0:	adc    DWORD PTR [ecx],eax
  412dc2:	stos   DWORD PTR es:[edi],eax
  412dc3:	lock out 0x31,eax
  412dc6:	fld    QWORD PTR [esi]
  412dc8:	sub    eax,0x2506cd48
  412dcd:	dec    eax
  412dce:	mov    BYTE PTR [esi],0x60
  412dd1:	inc    eax
  412dd2:	or     DWORD PTR [ebp+0x496caf8c],0x13
  412dd9:	sub    ch,BYTE PTR [ebx+edx*1+0x6c]
  412ddd:	out    0xa4,al
  412ddf:	jecxz  0x412dc8
  412de1:	sbb    ch,BYTE PTR [ebx-0x54bf9fc9]
  412de7:	out    dx,eax
  412de8:	jmp    0x4747:0x71f72078
  412def:	lea    edi,[esp+esi*8]
  412df2:	mov    edx,0x7edeb6
  412df7:	add    BYTE PTR [eax],al
  412df9:	cmp    al,0x5
  412dfb:	out    0x3,eax
  412dfd:	sbb    cl,cl
  412dff:	jo     0x412e48
  412e01:	aaa    
  412e02:	out    dx,eax
  412e03:	jmp    0xbc14:0x41d2b078
  412e0a:	lea    esi,[esp+ebp*8]
  412e0d:	je     0x412e60
  412e0f:	mov    edi,0xea618429
  412e14:	jp     0x412dc6
  412e16:	fisub  WORD PTR [edx+0x47]
  412e19:	sub    ebx,DWORD PTR [edi]
  412e1b:	test   al,0x6f
  412e1d:	repnz lea esp,[esp+ecx*8]
  412e21:	jp     0x412e64
  412e23:	(bad)  
  412e24:	std    
  412e25:	addr16 push ecx
  412e27:	jnp    0x412e26
  412e29:	pop    edi
  412e2a:	cmp    DWORD PTR [edi+0x79],edx
  412e2d:	mov    BYTE PTR [esi],cl
  412e2f:	mov    edx,0x56de80ec
  412e34:	ja     0x412e3d
  412e36:	out    dx,al
  412e37:	inc    ecx
  412e38:	in     al,dx
  412e39:	mul    dl
  412e3b:	neg    BYTE PTR [eax+ecx*2-0x8c08d21]
  412e42:	lea    eax,[eax]
  412e44:	lods   al,BYTE PTR ds:[esi]
  412e45:	in     al,0x88
  412e47:	arpl   WORD PTR ds:0x96387ef,cx
  412e4d:	test   DWORD PTR [edi-0x7810ee9d],0x8df70d63
  412e57:	cmp    al,0xdf
  412e59:	cs leave 
  412e5b:	add    eax,0xe9
  412e60:	sub    DWORD PTR [esi-0x4c],edx
  412e63:	jo     0x412e99
  412e65:	mov    ebx,0xc9b4ac87
  412e6a:	inc    ebx
  412e6b:	sbb    eax,esi
  412e6d:	enter  0xfe43,0xf1
  412e71:	test   ecx,ebx
  412e73:	pop    edi
  412e74:	and    ecx,DWORD PTR [eax+0x55f0c17b]
  412e7a:	push   es
  412e7b:	fidivr WORD PTR [edi]
  412e7d:	test   DWORD PTR [esi-0x4aebbce4],0x431fcee9
  412e87:	xchg   ebp,eax
  412e88:	in     eax,0x5
  412e8a:	std    
  412e8b:	and    al,0x37
  412e8d:	lock sbb BYTE PTR [edx-0x23],ch
  412e91:	jmp    0xafd0:0x8f481400
  412e98:	mov    ch,0xfb
  412e9a:	call   FWORD PTR [edi-0x63]
  412e9d:	out    0x66,al
  412e9f:	ret    0xe6b5
  412ea2:	jae    0x412e7a
  412ea4:	pop    ss
  412ea5:	inc    esi
  412ea6:	in     al,0x62
  412ea8:	mov    ch,0xca
  412eaa:	std    
  412eab:	sbb    al,0x3b
  412ead:	mov    al,al
  412eaf:	jmp    0x412f24
  412eb1:	pop    esi
  412eb2:	aam    0xe9
  412eb4:	mov    DWORD PTR [ebp-0x3c],eax
  412eb7:	(bad)  
  412eb8:	dec    esp
  412eb9:	lock add al,0x27
  412ebc:	lods   eax,DWORD PTR ds:[esi]
  412ebd:	mov    dh,0x0
  412ebf:	add    BYTE PTR [ecx+0x49],ah
  412ec2:	call   0x412f02
  412ec7:	(bad)
  412ecb:	aad    0x9a
  412ecd:	inc    ecx
  412ece:	fdiv   QWORD PTR [ebp-0x1e1fae66]
  412ed4:	fisttp QWORD PTR [edi+esi*4]
  412ed7:	(bad)  
  412ed8:	in     eax,0xb
  412eda:	mov    bh,0x7f
  412edc:	rol    DWORD PTR [eax-0x7afa1b83],1
  412ee2:	push   ebp
  412ee3:	(bad)  
  412ee4:	pop    ecx
  412ee5:	push   es
  412ee6:	data16 mov cl,0x48
  412ee9:	shl    BYTE PTR [eax+eax*8-0x7b],0xb
  412eee:	add    dl,BYTE PTR [edx]
  412ef0:	or     cl,BYTE PTR [esi]
  412ef2:	(bad)  
  412ef4:	mov    edx,0x5d82e8bd
  412ef9:	inc    esp
  412efa:	push   cs
  412efb:	mov    eax,edi
  412efd:	inc    ecx
  412efe:	dec    BYTE PTR [ebx-0x263fae9e]
  412f04:	les    eax,FWORD PTR [edx]
  412f06:	and    BYTE PTR [edi],0xf6
  412f09:	dec    DWORD PTR [esi]
  412f0b:	iret   
  412f0c:	nop
  412f0d:	add    BYTE PTR [eax],al
  412f0f:	dec    edx
  412f10:	test   DWORD PTR [ebx],ecx
  412f12:	or     dl,bl
  412f14:	outs   dx,DWORD PTR ds:[esi]
  412f15:	rol    BYTE PTR [eax],1
  412f17:	rol    BYTE PTR ds:0x6fca3174,0xfb
  412f1e:	add    dh,bl
  412f20:	loopne 0x412f85
  412f22:	mov    ecx,DWORD PTR [edi]
  412f24:	iret   
  412f25:	cmp    di,di
  412f28:	mov    dl,0x74
  412f2a:	sub    DWORD PTR [eax],eax
  412f2c:	add    BYTE PTR [eax],al
  412f2e:	adc    eax,0x36dc5194
  412f33:	loope  0x412eba
  412f35:	pop    es
  412f36:	add    DWORD PTR [edi-0x24],0xbedf0e88
  412f3d:	call   0x44bb1735
  412f42:	in     eax,0xee
  412f44:	mov    edi,0x7cefec43
  412f49:	push   ebx
  412f4a:	stos   DWORD PTR es:[edi],eax
  412f4b:	ins    DWORD PTR es:[edi],dx
  412f4c:	ret    0xc802
  412f4f:	out    0xf5,al
  412f51:	shrd   DWORD PTR [ebx-0xe84ff16],ebp,cl
  412f58:	jmp    0xbc0e:0x73a373
  412f5f:	add    ecx,0xfffffffd
  412f62:	ds push ss
  412f64:	jmp    0xeabfdadc
  412f69:	jae    0x412f0a
  412f6b:	mul    BYTE PTR [eax-0x4]
  412f6e:	pushf  
  412f6f:	fld    DWORD PTR [esi]
  412f71:	lock outs dx,BYTE PTR ds:[esi]
  412f73:	outs   dx,DWORD PTR cs:[esi]
  412f75:	cmp    BYTE PTR [ebx+eax*2+0x333c0dcc],cl
  412f7c:	fdivr  st,st(5)
  412f7e:	push   es
  412f7f:	mov    dh,0xfa
  412f81:	mov    ah,0x1e
  412f83:	mov    esi,0x556773ea
  412f88:	jo     0x412f3e
  412f8a:	sub    eax,0xde8904e9
  412f8f:	in     eax,0x79
  412f91:	inc    ebx
  412f92:	add    BYTE PTR [eax],al
  412f94:	add    BYTE PTR [ebp+0x66],dl
  412f97:	inc    eax
  412f98:	std    
  412f99:	pop    ebx
  412f9a:	pusha  
  412f9b:	repnz std 
  412f9d:	inc    esp
  412f9e:	push   ebp
  412f9f:	inc    eax
  412fa0:	or     al,0xf0
  412fa2:	xchg   esp,eax
  412fa3:	push   esi
  412fa4:	std    
  412fa5:	mov    esi,0xc3c60679
  412faa:	jne    0x412f78
  412fac:	mov    ah,BYTE PTR [ecx+eiz*2]
  412faf:	push   es
  412fb0:	icebp  
  412fb1:	jo     0x412fe6
  412fb3:	hlt    
  412fb4:	adc    BYTE PTR [eax+0x2b],ch
  412fb7:	hlt    
  412fb8:	sbb    DWORD PTR [esi-0x35ecccfa],0x68fa9b49
  412fc2:	push   ecx
  412fc3:	push   ebp
  412fc4:	jmp    0x8c03:0xd7a483f6
  412fcb:	lods   al,BYTE PTR ds:[esi]
  412fcc:	xlat   BYTE PTR ds:[ebx]
  412fcd:	jb     0x413040
  412fcf:	das    
  412fd0:	adc    ebx,DWORD PTR [edx]
  412fd2:	dec    edx
  412fd3:	ja     0x412fcf
  412fd5:	push   0xceea2d24
  412fda:	cmp    eax,esi
  412fdc:	jle    0x412f8b
  412fde:	inc    eax
  412fdf:	xor    ch,al
  412fe1:	jecxz  0x412fe9
  412fe3:	mov    esp,0xfb83c77e
  412fe8:	push   ss
  412fe9:	inc    edx
  412fea:	cmp    DWORD PTR [esi-0x1ec3eca],ebx
  412ff0:	inc    ecx
  412ff1:	loop   0x412fb9
  412ff3:	pusha  
  412ff4:	push   eax
  412ff5:	mov    ds:0xef948d,eax
  412ffa:	add    BYTE PTR [eax],al
  412ffc:	je     0x413037
  412ffe:	ret    
  412fff:	jnp    0x413009
  413001:	repz and BYTE PTR [edi-0x19],cl
  413005:	pcmpgtw mm3,QWORD PTR [esi+0x7ce7df74]
  41300c:	mov    eax,0x4f4f700e
  413011:	lea    ebp,[esp+eiz*8]
  413014:	push   0x51
  413016:	xlat   BYTE PTR ds:[ebx]
  413017:	jp     0x412fd9
  413019:	loop   0x41300d
  41301b:	mov    ebp,0x36790fe
  413020:	repz push es
  413022:	jb     0x41305b
  413024:	aas    
  413025:	mov    esi,DWORD PTR [esp+eiz*8]
  413028:	je     0x41300f
  41302a:	jmp    0x72ffe8a9
  41302f:	clc    
  413030:	sti    
  413031:	sbb    ebp,DWORD PTR [esp+ecx*1]
  413034:	out    dx,al
  413035:	mov    al,BYTE PTR [eax]
  413037:	push   ds
  413038:	lock push es
  41303a:	add    BYTE PTR [eax-0x3c],ah
  41303d:	fimul  WORD PTR [ebx+0x43c91bb9]
  413043:	push   ecx
  413044:	lock push es
  413046:	add    cl,ch
  413048:	ja     0x413020
  41304a:	cmp    DWORD PTR [esp+edi*8+0x1c725761],esp
  413051:	mov    edi,0x16c8bc89
  413056:	cmp    al,0xe2
  413058:	inc    ebp
  413059:	push   eax
  41305a:	mov    DWORD PTR [esp+edx*8+0xe2cd90],ebp
  413061:	add    BYTE PTR [eax],al
  413063:	std    
  413064:	idiv   BYTE PTR [edx-0x11]
  413067:	aas    
  413068:	push   edx
  413069:	clc    
  41306a:	sar    BYTE PTR [edi+ebx*4+0x2033e773],1
  413071:	jnp    0x41304c
  413073:	or     al,0xd9
  413075:	dec    ebp
  413076:	ret    0x5aa0
  413079:	push   es
  41307a:	pusha  
  41307b:	or     al,0xd7
  41307d:	xchg   DWORD PTR [esp+ebx*4+0x20],ebp
  413081:	jnp    0x413060
  413083:	or     eax,0x835c8708
  413088:	mov    BYTE PTR [ebx-0x3f],bh
  41308b:	lock pop esp
  41308d:	or     BYTE PTR [edx],dl
  41308f:	aam    0xd6
  413091:	jl     0x41307d
  413093:	scas   al,BYTE PTR es:[edi]
  413094:	out    dx,eax
  413095:	add    al,0x6a
  413097:	mov    ebp,0xcd6200ee
  41309c:	idiv   BYTE PTR [esi+0x144f6c6]
  4130a2:	(bad)  
  4130a3:	pop    ss
  4130a4:	pop    edx
  4130a5:	adc    al,0x1d
  4130a7:	pop    ebp
  4130a8:	nop
  4130a9:	jnp    0x413030
  4130ab:	mov    bh,0x51
  4130ad:	lock ret 0xdae5
  4130b1:	sub    DWORD PTR [eax],eax
  4130b3:	mov    cl,BYTE PTR [ecx+0x42]
  4130b6:	mov    DWORD PTR [edi],eax
  4130b8:	mov    edi,0xfa965587
  4130bd:	push   eax
  4130be:	cld    
  4130bf:	xchg   ecx,eax
  4130c0:	inc    esp
  4130c1:	in     al,dx
  4130c2:	sub    ebp,DWORD PTR [edx+0xd9acde]
  4130c8:	add    BYTE PTR [eax],al
  4130ca:	dec    eax
  4130cb:	popa   
  4130cc:	jno    0x4130a6
  4130ce:	or     eax,0x1c3bf27f
  4130d3:	jo     0x4130dd
  4130d5:	mov    ecx,DWORD PTR [edi+0x424d85b5]
  4130db:	mov    ebx,0xd17f8b06
  4130e0:	test   DWORD PTR [ebp+0x32],edx
  4130e3:	mov    bh,BYTE PTR [ecx+0x1c]
  4130e6:	ficom  DWORD PTR [ebx+ecx*2+0x2]
  4130ea:	add    cl,BYTE PTR [bx+di-0x3bb1]
  4130ef:	pop    edx
  4130f0:	push   ecx
  4130f1:	adc    ch,cl
  4130f3:	jle    0x413146
  4130f5:	adc    al,0xdb
  4130f7:	jecxz  0x4130fb
  4130f9:	cmp    esp,eax
  4130fb:	fimul  WORD PTR [ebp+ecx*8-0xfff676]
  413102:	push   edi
  413103:	lds    eax,FWORD PTR [eax-0x78fd1183]
  413109:	jne    0x413099
  41310b:	push   esi
  41310c:	pop    ss
  41310d:	mov    ecx,edi
  41310f:	jmp    0xfa49:0x61050c88
  413116:	loop   0x413156
  413118:	xor    eax,DWORD PTR [ecx]
  41311a:	loop   0x41313a
  41311c:	xor    eax,DWORD PTR [edx]
  41311e:	rcr    BYTE PTR [edi],1
  413120:	test   DWORD PTR [eax-0x7d00d212],0x4d8a0695
  41312a:	pop    esi
  41312b:	ret    0x4dd
  41312e:	add    BYTE PTR [eax],al
  413130:	add    bl,dh
  413132:	jmp    0xb540b9f0
  413137:	ja     0x413184
  413139:	sbb    eax,DWORD PTR [ebp-0x1ced3f45]
  41313f:	js     0x413192
  413141:	adc    al,0xe9
  413143:	mov    bh,0x1
  413145:	sub    esp,DWORD PTR [edi+0x38]
  413148:	xor    eax,0x2bd70f2
  41314d:	push   0xffffffba
  41314f:	aad    0x87
  413151:	scas   al,BYTE PTR es:[edi]
  413152:	aaa    
  413153:	jnp    0x4131b0
  413155:	(bad)  
  413156:	stc    
  413157:	sar    BYTE PTR [ebx+0x30],0x59
  41315b:	dec    edi
  41315c:	call   0x226dcc9
  413161:	ret    0x4f67
  413164:	fdivr  DWORD PTR [eax+0x73]
  413167:	fld    QWORD PTR [edi+0x1ad8f61e]
  41316d:	push   0xdee9e5ab
  413172:	jo     0x4131db
  413174:	clc    
  413175:	lods   al,BYTE PTR ds:[esi]
  413176:	jb     0x413185
  413178:	mov    DWORD PTR [esi],edi
  41317a:	idiv   BYTE PTR [eax+0x73]
  41317d:	sti    
  41317e:	pop    eax
  41317f:	inc    edi
  413180:	or     al,dh
  413182:	(bad)  
  413183:	jp     0x4131b9
  413185:	pusha  
  413186:	scas   eax,DWORD PTR es:[edi]
  413187:	sub    cl,BYTE PTR [ebx-0x55]
  41318a:	(bad)  
  41318b:	fimul  WORD PTR [ecx+0x43e6de2e]
  413191:	jnp    0x413182
  413193:	cmp    al,ch
  413195:	add    BYTE PTR [eax],al
  413197:	add    BYTE PTR [eax-0x5],bh
  41319a:	jmp    0x4131d5
  41319c:	mov    dh,0x79
  41319e:	rcr    BYTE PTR gs:[ebx+eiz*1-0x18],1
  4131a3:	mov    DWORD PTR [esi+0x4f4b2cbd],esp
  4131a9:	mov    ebp,0x7458275
  4131ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131af:	out    0x2,al
  4131b1:	mov    ecx,0xc64f38e8
  4131b6:	mov    BYTE PTR [ecx],al
  4131b8:	sub    al,0x4b
  4131ba:	xchg   DWORD PTR [ebx-0x16],eax
  4131bd:	inc    ecx
  4131be:	fcomi  st,st(6)
  4131c0:	push   0x16e67d3c
  4131c5:	nop
  4131c6:	sub    al,0xf8
  4131c8:	jp     0x413214
  4131ca:	mov    edi,DWORD PTR [ebx-0x5]
  4131cd:	(bad)  
  4131ce:	cs inc esi
  4131d0:	popf   
  4131d1:	aas    
  4131d2:	xor    cl,al
  4131d4:	fild   DWORD PTR [esi]
  4131d6:	sbb    al,ah
  4131d8:	fcmovbe st,st(1)
  4131da:	mov    ah,0x7a
  4131dc:	xlat   BYTE PTR ds:[ebx]
  4131dd:	xchg   DWORD PTR [ebx+0x53],edx
  4131e0:	push   0x49
  4131e2:	out    dx,eax
  4131e3:	jp     0x413211
  4131e5:	sti    
  4131e6:	pushf  
  4131e7:	dec    esi
  4131e8:	je     0x413233
  4131ea:	aaa    
  4131eb:	jp     0x413225
  4131ed:	div    DWORD PTR [ecx-0x17]
  4131f0:	push   0x31
  4131f2:	jmp    0x4131f6
  4131f4:	stos   DWORD PTR es:[edi],eax
  4131f5:	pop    es
  4131f6:	adc    DWORD PTR [edx],esi
  4131f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f9:	les    esp,FWORD PTR [ebp+eiz*8-0xd000000]
  413200:	les    ebp,FWORD PTR [esi+eiz*8-0x4c53720d]
  413207:	ins    BYTE PTR es:[edi],dx
  413208:	pop    ecx
  413209:	daa    
  41320a:	jl     0x41323c
  41320c:	out    dx,eax
  41320d:	mov    dl,0xc4
  41320f:	test   BYTE PTR [ecx+0x6f303ce],0x12
  413216:	mov    esp,0xd99f496c
  41321b:	repnz (bad) 
  41321d:	xor    al,0xf8
  41321f:	jnp    0x413262
  413221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413222:	jnp    0x4131e4
  413224:	jmp    0x7200:0x89e6d402
  41322b:	lock push es
  41322d:	add    BYTE PTR [edx],al
  41322f:	xor    DWORD PTR [ebx+0x51ab543],eax
  413235:	mov    DWORD PTR [ebx+edi*2],esp
  413238:	jo     0x41324a
  41323a:	xor    BYTE PTR [eax-0x239f0bb1],ch
  413240:	fidivr WORD PTR [ecx]
  413242:	test   al,0x94
  413244:	add    eax,0x8d232487
  413249:	inc    ebx
  41324a:	mov    eax,ds:0xea7b9bda
  41324f:	mov    DWORD PTR [edi-0x8],eax
  413252:	mov    si,ds
  413255:	or     eax,0xfdeebc96
  41325a:	(bad)  
  41325c:	or     al,0xb5
  41325e:	mov    ah,0xbc
  413260:	fdiv   QWORD PTR [ebx+0x39]
  413263:	add    BYTE PTR [eax],al
  413265:	add    BYTE PTR [edx+0x5e],bl
  413268:	or     BYTE PTR [ecx-0x30],dl
  41326b:	sar    ebp,cl
  41326d:	ss dec edx
  41326f:	inc    esi
  413270:	clc    
  413271:	ficomp WORD PTR [edi+0x46]
  413274:	hlt    
  413275:	push   0x1c
  413277:	mov    edi,0xbb146a00
  41327c:	add    BYTE PTR [edx+0x4c],ch
  41327f:	out    0x0,eax
  413281:	push   0x44
  413283:	jecxz  0x413285
  413285:	jb     0x4132b3
  413287:	xlat   BYTE PTR ds:[ebx]
  413288:	mov    edi,DWORD PTR [ebp-0x1139bf12]
  41328e:	lock xor DWORD PTR [ebx+0x31],0x70b44608
  413296:	mov    ebp,0x9f24c6b2
  41329b:	fcmovb st,st(3)
  41329d:	sub    al,0x2
  41329f:	fiadd  DWORD PTR [ecx+ebp*4+0x8148ce]
  4132a6:	mov    bh,0xe2
  4132a8:	add    BYTE PTR [ebp+0x4f],dh
  4132ab:	pop    edi
  4132ac:	add    cl,BYTE PTR [ecx+0x287cb1f]
  4132b2:	inc    ecx
  4132b3:	sbb    eax,ebx
  4132b5:	jne    0x413306
  4132b7:	jecxz  0x4132fa
  4132b9:	loopne 0x41331c
  4132bb:	or     DWORD PTR [edi+0x7d],edi
  4132be:	jle    0x4132c6
  4132c0:	jno    0x4132c9
  4132c2:	dec    esp
  4132c3:	sbb    DWORD PTR [edi],ecx
  4132c5:	add    BYTE PTR [ebx+0x3bdc18],ah
  4132cb:	add    BYTE PTR [eax],al
  4132cd:	iret   
  4132ce:	into   
  4132cf:	jno    0x4132e2
  4132d1:	test   DWORD PTR [eax],ebx
  4132d3:	in     al,0xff
  4132d5:	out    0xb6,eax
  4132d7:	jg     0x41329b
  4132d9:	push   cs
  4132da:	xchg   DWORD PTR [ecx-0x2c],edi
  4132dd:	or     ah,BYTE PTR [ebx-0x38]
  4132e0:	jmp    0x4132c0
  4132e2:	fwait
  4132e3:	inc    ecx
  4132e4:	rcr    dl,1
  4132e6:	pop    esi
  4132e7:	inc    ecx
  4132e8:	in     al,0xf3
  4132ea:	sbb    eax,esp
  4132ec:	jbe    0x4132d0
  4132ee:	pop    esi
  4132ef:	inc    ecx
  4132f0:	fcom   DWORD PTR [ecx+0x11]
  4132f3:	fsub   st(3),st
  4132f5:	int3   
  4132f6:	pop    esi
  4132f7:	inc    ecx
  4132f8:	fadd   QWORD PTR [ecx+0x11]
  4132fb:	fadd   DWORD PTR [eax+0x7400e357]
  413301:	lahf   
  413302:	cs inc ecx
  413304:	les    edi,FWORD PTR [esi-0x4]
  413307:	jg     0x413318
  413309:	mov    BYTE PTR [ebp+0x4],bl
  41330c:	push   ds
  41330d:	and    DWORD PTR [esi+0x5d92eabd],esi
  413313:	push   esp
  413314:	push   ds
  413315:	fwait
  413316:	pop    esi
  413317:	rol    cl,1
  413319:	mov    al,ds:0x4e4586d2
  41331e:	ret    
  41331f:	call   0x38a9263c
  413324:	push   ds
  413325:	icebp  
  413326:	addr16 dec eax
  413328:	push   ds
  413329:	lock test eax,0x6cf2fe47
  41332f:	retf   0x4
  413332:	add    BYTE PTR [eax],al
  413334:	jae    0x413348
  413336:	cmc    
  413337:	push   ebp
  413339:	bound  esp,QWORD PTR [esi-0x7e100d00]
  41333f:	or     eax,0xd05f6feb
  413344:	repz or DWORD PTR gs:[esp+ebx*8+0x6f],esi
  41334a:	pop    edi
  41334b:	std    
  41334c:	repz fisttp DWORD PTR [eax]
  41334f:	cmp    DWORD PTR [esi-0xcba7e5],esp
  413355:	jmp    0x4132e0
  413357:	add    eax,0x88ffbb7b
  41335c:	xor    ch,BYTE PTR [esi]
  41335e:	in     al,dx
  41335f:	or     BYTE PTR [ebx-0x5d],ch
  413362:	(bad)  
  413363:	(bad)  
  413364:	jns    0x413395
  413366:	ret    
  413367:	call   0xbc909a6f
  41336c:	mov    dl,0x37
  41336e:	cld    
  41336f:	xchg   DWORD PTR [edi],ebp
  413371:	mov    eax,0xb03f8803
  413376:	push   es
  413377:	(bad)  
  413378:	sub    DWORD PTR cs:[ebx],eax
  41337b:	xor    DWORD PTR [ebp-0x18f71116],0xac43c7dd
  413385:	out    dx,al
  413386:	mov    DWORD PTR ds:0x8bb173a4,eax
  41338c:	neg    edi
  41338e:	loop   0x413403
  413390:	scas   eax,DWORD PTR es:[edi]
  413391:	fstp   DWORD PTR [eax-0x8]
  413394:	mov    WORD PTR [ebx-0x2b],ds
  413397:	push   eax
  413398:	add    BYTE PTR [eax],al
  41339a:	add    BYTE PTR [ebx+edx*2+0x716e8d1],al
  4133a1:	jecxz  0x413385
  4133a3:	jbe    0x4133a9
  4133a5:	xlat   BYTE PTR ds:[ebx]
  4133a6:	mov    BYTE PTR [ebx],dh
  4133a8:	push   edx
  4133a9:	adc    ebx,esp
  4133ab:	loopne 0x41338b
  4133ad:	ficomp WORD PTR [edx+0x58c6eea8]
  4133b3:	pop    edi
  4133b4:	or     BYTE PTR [esi+0x38],dh
  4133b7:	pop    edi
  4133b8:	fdivr  DWORD PTR [esp+edx*8]
  4133bb:	jp     0x41340f
  4133bd:	outs   dx,DWORD PTR ds:[esi]
  4133be:	leave  
  4133bf:	test   BYTE PTR ds:0x8eeb6072,0x24
  4133c6:	loop   0x413443
  4133c8:	inc    edx
  4133c9:	xchg   esi,eax
  4133ca:	jmp    0x413443
  4133cc:	aam    0x8e
  4133ce:	loop   0x41343a
  4133d0:	inc    edx
  4133d1:	cmp    eax,esp
  4133d3:	adc    eax,DWORD PTR ds:0xd680e317
  4133d9:	pmulhw mm6,QWORD PTR fs:0xd875d07f
  4133e1:	pushw  es
  4133e3:	add    eax,DWORD PTR [esp+eiz*4-0x5373fc11]
  4133ea:	out    dx,eax
  4133eb:	jb     0x413456
  4133ed:	sbb    esi,ebx
  4133ef:	sbb    eax,DWORD PTR [edx+0x27]
  4133f2:	adc    ah,BYTE PTR [edi+0x4a]
  4133f5:	cmp    eax,0xac83cee2
  4133fa:	jmp    0x4133df
  4133fc:	mov    esp,DWORD PTR [ebx+ebp*8+0x72000000]
  413403:	imul   ebp,DWORD PTR [edi],0x5741fbf3
  413409:	adc    bh,BYTE PTR [edi+0x26]
  41340c:	adc    eax,0x6237a6e2
  413411:	leave  
  413412:	cmp    eax,0xf30f29ce
  413417:	xor    DWORD PTR [edx-0x11],esi
  41341a:	jp     0x41345d
  41341c:	add    ch,ah
  41341e:	in     eax,0x43
  413420:	adc    dh,bl
  413422:	imul   esi,DWORD PTR [esi+0x0],0x5635f0e9
  413429:	jb     0x4133f5
  41342b:	repnz add BYTE PTR [ebx+eax*1+0x16],bl
  413430:	fst    DWORD PTR [eax]
  413432:	sbb    al,0xf3
  413434:	jne    0x41343f
  413436:	xor    cx,WORD PTR [eax]
  413439:	ins    BYTE PTR es:[edi],dx
  41343a:	sti    
  41343b:	adc    eax,0xee3a6250
  413440:	loop   0x4133fd
  413442:	push   edx
  413443:	(bad)  ds:0xff17aa5f
  413449:	and    edi,edi
  41344b:	or     DWORD PTR [esi-0x27fa00d2],esi
  413451:	rcr    ch,cl
  413453:	bnd jno 0x4133df
  413456:	inc    cx
  413458:	sbb    BYTE PTR [edx-0x3c],dh
  41345b:	repnz mov DWORD PTR [esi],edx
  41345e:	mov    al,0x5
  413460:	inc    ebx
  413461:	(bad)  
  413463:	mov    al,0x89
  413465:	aaa    
  413466:	add    BYTE PTR [eax],al
  413468:	add    BYTE PTR [edi-0x23],ch
  41346b:	call   ebx
  41346d:	loopne 0x41347e
  41346f:	repnz (bad) 
  413472:	adc    BYTE PTR [edi],0x61
  413475:	fist   WORD PTR [esi]
  413477:	aas    
  413478:	add    ah,BYTE PTR [ebp+0x1f52f659]
  41347e:	xchg   ecx,edi
  413480:	jmp    0x41349f
  413482:	idiv   DWORD PTR [eax]
  413484:	cmp    esp,DWORD PTR [esi]
  413486:	hlt    
  413487:	mov    DWORD PTR [eax],eax
  413489:	addr16 out dx,eax
  41348b:	aas    
  41348c:	test   al,0xf
  41348e:	shl    DWORD PTR [edx+0x1f],0x96
  413492:	clc    
  413493:	jg     0x4134a7
  413495:	jmp    0x4134f0
  413497:	push   cs
  413498:	add    BYTE PTR [ecx+0xa6fbc],dh
  41349e:	rol    BYTE PTR [ebp+0x37495a18],cl
  4134a4:	retf   0xaff8
  4134a7:	xchg   DWORD PTR [ebp+0x7e],eax
  4134aa:	or     eax,DWORD PTR [ebx+0xc]
  4134ad:	jecxz  0x4134fb
  4134af:	or     al,0x3b
  4134b1:	pop    ss
  4134b2:	fisttp DWORD PTR [esi+eax*4]
  4134b5:	(bad)  
  4134b6:	out    0xfb,eax
  4134b8:	dec    DWORD PTR [esp+edx*1]
  4134bb:	popf   
  4134bc:	adc    ch,al
  4134be:	dec    edx
  4134bf:	add    BYTE PTR [ebp-0x68],bl
  4134c2:	(bad)  
  4134c4:	push   esp
  4134c5:	shl    ebp,1
  4134c7:	xchg   DWORD PTR [ebp+0x3e],ecx
  4134ca:	div    DWORD PTR [edx+0x51]
  4134d0:	pop    ss
  4134d1:	mov    ebp,esp
  4134d3:	inc    esp
  4134d4:	jmp    0xe61c63e9
  4134d9:	cmp    eax,0x66
  4134dc:	xor    DWORD PTR [ebx+0xb34840b],ebx
  4134e2:	add    BYTE PTR [eax],al
  4134e4:	or     eax,0xf4076d6f
  4134e9:	repz out dx,al
  4134eb:	jbe    0xda4135c1
  4134f1:	div    BYTE PTR [edx-0x2ff524bf]
  4134f7:	jne    0x2296ba98
  4134fd:	pusha  
  4134fe:	xchg   DWORD PTR [ecx-0x27],edx
  413501:	pop    edi
  413502:	call   ebp
  413504:	int    0x6e
  413506:	ror    BYTE PTR [ecx+0x5d85cd67],cl
  41350c:	sbb    DWORD PTR cs:[ecx-0x14],0x8bcc1523
  413514:	repz jl 0xc409e05e
  41351b:	or     eax,0x606b1f5c
  413520:	sub    eax,0xde03657
  413525:	cdq    
  413526:	shl    DWORD PTR [ecx-0xa],1
  413529:	push   si
  41352b:	lock mov ch,ah
  41352e:	push   cs
  41352f:	mov    ch,0x33
  413531:	push   esi
  413532:	inc    edi
  413533:	lock add BYTE PTR [eax],al
  413536:	add    ch,cl
  413538:	clc    
  413539:	ss enter 0x60ec,0x5d
  41353e:	add    dh,bl
  413540:	fbld   TBYTE PTR [ebx-0x7f]
  413543:	into   
  413544:	pop    DWORD PTR [ecx*1+0x2136f]
  41354b:	repz mov ah,0x96
  41354e:	push   ebx
  41354f:	inc    ebx
  413550:	fcom   QWORD PTR [ebx-0x511b1cbb]
  413556:	ret    0x227a
  413559:	in     al,dx
  41355a:	or     eax,0x87011e64
  41355f:	mov    esi,0x17438b73
  413564:	pop    eax
  413565:	inc    edi
  413566:	les    edi,FWORD PTR [eax-0x2e]
  413569:	in     eax,0x29
  41356b:	xor    eax,0x89c096b4
  413570:	mov    edi,0xe286637
  413575:	push   ecx
  413576:	add    edi,DWORD PTR [edx-0x6d]
  413579:	aad    0xe9
  41357b:	cmc    
  41357c:	mov    ah,0x96
  41357e:	shr    BYTE PTR [edx-0x5d],0xd5
  413582:	data16 or BYTE PTR [ebx+0x7700dc5],bl
  413589:	add    al,BYTE PTR [eax]
  41358b:	repz retf 
  41358d:	cmp    BYTE PTR [ebx-0x41],0x7
  413591:	out    0xe,eax
  413593:	ja     0x41358a
  413595:	call   0x5e45289d
  41359a:	cmp    DWORD PTR [eax],eax
  41359c:	add    BYTE PTR [eax],al
  41359e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41359f:	add    al,0x56
  4135a1:	inc    edi
  4135a2:	jmp    0x4135a7
  4135a4:	ds into 
  4135a6:	(bad)  
  4135a7:	fwait
  4135a8:	je     0x41358d
  4135aa:	js     0x4135df
  4135ac:	fcomp  st(6)
  4135ae:	out    dx,al
  4135af:	mov    ds:0xc6460f0f,eax
  4135b4:	jo     0x41360e
  4135b6:	imul   eax,DWORD PTR [edx*4+0x2c082356],0xffffffdc
  4135be:	repnz xor edi,ecx
  4135c1:	push   cs
  4135c2:	xchg   ch,cl
  4135c4:	jo     0x413616
  4135c6:	and    eax,DWORD PTR [esi+ecx*4]
  4135c9:	mov    ebp,0x83e3427a
  4135ce:	add    al,0x7
  4135d0:	pusha  
  4135d1:	cmp    BYTE PTR [ebx],bl
  4135d3:	jle    0x413601
  4135d5:	mov    al,ds:0x3b48afe
  4135da:	repz push es
  4135dc:	popa   
  4135dd:	dec    esi
  4135de:	jecxz  0x413566
  4135e0:	nop
  4135e1:	add    al,0xa0
  4135e3:	adc    esi,DWORD PTR [edx-0x2d]
  4135e6:	retf   0xeec7
  4135e9:	xchg   BYTE PTR [ecx+0x6],cl
  4135ec:	out    0x3,eax
  4135ee:	push   0x4c
  4135f0:	iret   
  4135f1:	mov    ch,BYTE PTR [eax-0xd3a1522]
  4135f7:	mov    esi,0xfb35070
  4135fc:	sub    BYTE PTR [edx-0x5],dl
  4135ff:	jg     0x41359f
  413601:	test   DWORD PTR [eax],0xbf0b0000
  413607:	jmp    0xe319:0xe7fa79cd
  41360e:	add    eax,DWORD PTR [eax]
  413610:	ins    BYTE PTR es:[edi],dx
  413611:	nop
  413612:	push   es
  413613:	add    cl,ch
  413615:	xor    BYTE PTR [esi],cl
  413617:	inc    ebx
  413618:	sub    DWORD PTR [edx-0x1e],eax
  41361b:	add    DWORD PTR [esi-0x600ef20c],edx
  413621:	pusha  
  413622:	jmp    0x4135a7
  413624:	call   0xc13d19
  413629:	repnz push edi
  41362b:	aas    
  41362c:	jb     0x4135e6
  41362e:	or     eax,0x5c75e6c1
  413633:	(bad)  
  413634:	call   0x186b429
  413639:	jp     0x413672
  41363b:	call   0xd046682a
  413640:	adc    dh,BYTE PTR [ecx]
  413642:	push   ebp
  413643:	sbb    esp,DWORD PTR [edx-0x42]
  413646:	cli    
  413647:	sub    BYTE PTR [ecx+0x3487e3f2],bh
  41364d:	das    
  41364e:	jge    0x4136c3
  413650:	test   eax,0xe7347dd5
  413655:	into   
  413656:	or     eax,0x85ea1c30
  41365b:	shr    bl,0xb
  41365e:	leave  
  41365f:	jb     0x4135e5
  413661:	repnz inc ecx
  413663:	or     al,0xd2
  413665:	sub    ebx,DWORD PTR [esi+ecx*8-0x70]
  413669:	add    BYTE PTR [eax],al
  41366b:	add    dh,ch
  41366d:	sar    ebp,cl
  41366f:	jmp    0xe64611e4
  413674:	jne    0x413692
  413676:	(bad)  
  413677:	call   0x2309b46c
  41367c:	mov    dl,0x4
  41367e:	test   DWORD PTR ds:0x620006f0,ecx
  413684:	ss out dx,eax
  413686:	mov    BYTE PTR [eax+ecx*8-0x26ff40f8],dh
  41368d:	xchg   esi,eax
  41368e:	aaa    
  41368f:	ret    0xcf89
  413692:	mov    BYTE PTR [edi-0x62],dh
  413695:	pop    ds
  413696:	lock add edi,ebx
  413699:	jge    0x41370c
  41369b:	shl    BYTE PTR [ecx],0x3a
  41369e:	ror    BYTE PTR [ebx+0x30370cbe],0x7f
  4136a5:	xlat   BYTE PTR ds:[ebx]
  4136a6:	add    al,0x8e
  4136a9:	out    dx,eax
  4136aa:	shl    DWORD PTR [edx-0x1b],0x7
  4136ae:	dec    ebx
  4136af:	or     al,0xb1
  4136b1:	mov    edi,0xbbf3d076
  4136b6:	add    BYTE PTR [eax],al
  4136b8:	mov    al,BYTE PTR [ebx]
  4136ba:	mov    dh,0x47
  4136bc:	sbb    ebx,DWORD PTR [esi-0x40]
  4136bf:	add    dh,ch
  4136c1:	or     al,BYTE PTR [eax]
  4136c3:	add    ebp,0x36
  4136c6:	add    DWORD PTR [eax+edx*2+0x5],esi
  4136ca:	inc    ecx
  4136cb:	cld    
  4136cc:	jns    0x4136a4
  4136ce:	mov    ah,0x43
  4136d0:	add    BYTE PTR [eax],al
  4136d2:	add    BYTE PTR [edx-0x21],bl
  4136d5:	or     cl,BYTE PTR [ebx+0x4489e717]
  4136db:	dec    ebx
  4136dc:	cmc    
  4136dd:	test   BYTE PTR [ebp+0x56],al
  4136e0:	jg     0x413723
  4136e2:	in     al,dx
  4136e3:	mov    eax,ds:0xd68dfc40
  4136e8:	add    eax,0xc6ff8d0c
  4136ed:	call   0xfbf3cfcf
  4136f2:	test   BYTE PTR [edx+0x3],bl
  4136f5:	test   BYTE PTR [ecx-0x74fff9f6],bh
  4136fb:	iret   
  4136fc:	(bad)  
  4136fd:	inc    DWORD PTR [esi+esi*1+0x6c]
  413701:	xchg   DWORD PTR [ebp+0x3a],edx
  413704:	ins    BYTE PTR es:[edi],dx
  413705:	mov    ebp,0x63e7f3c2
  41370a:	xchg   DWORD PTR [ebx],eax
  41370c:	retf   0x5388
  41370f:	xlat   BYTE PTR ds:[ebx]
  413710:	rol    edx,0xc2
  413713:	sti    
  413714:	leave  
  413715:	mov    dl,BYTE PTR [eax-0xf]
  413718:	ror    DWORD PTR [eax-0x3d363cad],0xc2
  41371f:	sti    
  413720:	or     DWORD PTR [edx-0x777610b0],0xc281a753
  41372a:	ret    0x89eb
  41372d:	mov    dl,BYTE PTR [eax-0xb]
  413730:	push   esp
  413731:	xor    al,0x50
  413733:	jp     0x4137a4
  413735:	or     DWORD PTR [ecx-0x4000000],eax
  41373b:	stos   DWORD PTR es:[edi],eax
  41373c:	push   es
  41373d:	mov    ebp,DWORD PTR [ebx]
  41373f:	mov    ah,0x55
  413741:	or     eax,0x51ec326c
  413746:	cmp    bl,BYTE PTR fs:[eax-0x273fb4b1]
  41374d:	std    
  41374e:	push   esp
  41374f:	les    esi,FWORD PTR [esi]
  413751:	or     eax,0x48432085
  413756:	mov    edi,0x13744c07
  41375b:	sub    BYTE PTR [esp+esi*2-0x13],cl
  41375f:	pop    esp
  413760:	pop    edi
  413761:	cld    
  413762:	repz je 0x41379b
  413765:	std    
  413766:	sahf   
  413767:	(bad)  
  413768:	lea    edx,[ebx+0x47]
  41376b:	js     0x4137bc
  41376d:	clc    
  41376e:	push   0x7855b42a
  413773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413774:	in     al,dx
  413775:	xchg   esi,eax
  413776:	or     DWORD PTR [eax-0x27],edx
  413779:	jmp    0xd8909049
  41377e:	push   0x66fdaffa
  413783:	pop    es
  413784:	pop    edi
  413785:	(bad)  
  413786:	xor    BYTE PTR [edi+0x59cb32b8],dh
  41378c:	pop    ebp
  41378d:	fcmovnbe st,st(6)
  41378f:	fdiv   st(2),st
  413791:	fiadd  DWORD PTR [eax-0x51]
  413794:	jb     0x4137c7
  413796:	lahf   
  413797:	shl    BYTE PTR [ebx+ebx*8+0x35174a6a],1
  41379e:	add    BYTE PTR [eax],al
  4137a0:	add    BYTE PTR [esi],bl
  4137a2:	fbld   TBYTE PTR [ebp-0x2a]
  4137a5:	scas   al,BYTE PTR es:[edi]
  4137a6:	shl    BYTE PTR [eax+0x41],1
  4137a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137aa:	mov    ah,BYTE PTR [edi]
  4137ac:	push   eax
  4137ad:	call   0x9728dc2d
  4137b2:	dec    edx
  4137b3:	sbb    ecx,DWORD PTR [ecx-0x730cf9c9]
  4137b9:	xor    bl,ah
  4137bb:	jb     0x4137fe
  4137bd:	xchg   DWORD PTR [esi],eax
  4137bf:	lods   al,BYTE PTR ds:[esi]
  4137c0:	fild   QWORD PTR [edx+0x42]
  4137c3:	fisttp DWORD PTR [esi-0x552f3d38]
  4137c9:	push   0xc08eded0
  4137ce:	out    0xea,al
  4137d0:	xor    BYTE PTR [ebx-0x22],ah
  4137d3:	xor    cl,bl
  4137d5:	dec    esi
  4137d6:	shr    BYTE PTR [esi+edi*4-0x40],1
  4137da:	or     DWORD PTR [ecx+0x6],edx
  4137dd:	popf   
  4137de:	fcomi  st,st(0)
  4137e0:	push   ss
  4137e1:	xor    ebp,DWORD PTR [ecx+0x60]
  4137e4:	inc    eax
  4137e5:	call   FWORD PTR [ebx+ebp*8-0x78]
  4137e9:	mov    al,0x2
  4137eb:	aaa    
  4137ec:	(bad)  [eax+0x32c50cfe]
  4137f2:	inc    DWORD PTR [ecx*4-0xa70ff58]
  4137f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137fa:	add    eax,0x5b337fe7
  4137ff:	add    dh,bl
  413801:	sbb    DWORD PTR [esp+ebp*8+0x6e],edx
  413805:	add    BYTE PTR [eax],al
  413807:	add    BYTE PTR [ebx-0x4d],al
  41380a:	std    
  41380b:	fdiv   st(0),st
  41380d:	fiadd  WORD PTR [eax]
  41380f:	enter  0x6f7,0x84
  413813:	sub    DWORD PTR [esp+eax*1],esp
  413816:	xor    DWORD PTR [edi+0x32],edx
  413819:	fiadd  WORD PTR [edx]
  41381b:	cli    
  41381c:	mov    ds:0xc81d73d1,al
  413821:	dec    esi
  413822:	xor    BYTE PTR [esi],0x99
  413825:	jge    0x4137ed
  413827:	inc    edx
  413828:	not    BYTE PTR ds:0x2deac6c0
  41382e:	(bad)  
  41382f:	sub    ebp,eax
  413831:	push   es
  413832:	xor    ah,BYTE PTR [eax]
  413834:	test   DWORD PTR [edx],ecx
  413836:	iret   
  413837:	add    DWORD PTR [edx+0x34e8a88f],ebp
  41383d:	iret   
  41383e:	mov    DWORD PTR [ebp+0x60660adc],edx
  413844:	out    dx,al
  413845:	jge    0x41388b
  413847:	(bad)  
  41384a:	or     BYTE PTR [ebx+0x725306f7],ch
  413850:	dec    ebx
  413851:	test   esp,ebp
  413853:	in     eax,0x1f
  413855:	cmp    DWORD PTR [ebp+0x43],edx
  413858:	minps  xmm1,XMMWORD PTR [eax]
  41385b:	(bad)  
  41385c:	hlt    
  41385d:	out    0xa9,al
  41385f:	sub    dh,bh
  413861:	jge    0x41385b
  413863:	bound  edi,QWORD PTR [eax-0x2f]
  413866:	adc    esp,ebp
  413868:	daa    
  413869:	(bad)  
  41386b:	jb     0x41386d
  41386d:	add    BYTE PTR [eax],al
  41386f:	aas    
  413870:	xor    esi,0xffffffee
  413873:	pushf  
  413874:	(bad)  
  413875:	(bad)  
  413876:	call   0xe1bcbe6b
  41387b:	lock xchg DWORD PTR [esi],ebx
  41387e:	add    ah,dh
  413880:	add    DWORD PTR [ebx],0x8448366
  413886:	lgs    eax,FWORD PTR [ebp+0x4]
  41388a:	(bad)  
  41388b:	pop    ss
  41388c:	mov    al,0x0
  41388e:	data16 arpl WORD PTR [ecx+0xa],cx
  413892:	orps   xmm0,XMMWORD PTR [ebp+edi*8-0x1]
  413897:	retf   0xb2ff
  41389a:	dec    esi
  41389b:	rcr    BYTE PTR [edx],cl
  41389d:	dec    ebp
  41389e:	push   ebx
  41389f:	sub    eax,0x8a10b1de
  4138a4:	or     al,BYTE PTR [ecx+0x4dd176c0]
  4138aa:	push   0x9f2
  4138af:	int    0x3d
  4138b1:	or     BYTE PTR [ebp-0x72b221ac],cl
  4138b7:	inc    edi
  4138b8:	add    dl,BYTE PTR [eax+0x53]
  4138bb:	repnz aam 0xb7
  4138be:	add    DWORD PTR [edx-0x35ccfd25],ebx
  4138c4:	add    DWORD PTR [esi+0x10],0x840bc307
  4138cb:	dec    esi
  4138cc:	or     DWORD PTR [eax],eax
  4138ce:	add    cl,ah
  4138d0:	xor    al,0x8
  4138d2:	data16 add BYTE PTR [eax],al
  4138d5:	add    cl,ah
  4138d7:	inc    esi
  4138d8:	push   cs
  4138d9:	pcmpeqw mm0,QWORD PTR [eax+0x8]
  4138dd:	data16 fwait
  4138df:	loop   0x4138e0
  4138e1:	xchg   DWORD PTR [ebx+esi*8],edx
  4138e4:	or     dh,BYTE PTR [esi-0x3e550076]
  4138ea:	rol    DWORD PTR [edi+0xc],cl
  4138ed:	test   al,0x19
  4138ef:	ds push es
  4138f1:	cmp    DWORD PTR [edx-0x4a],0x7f
  4138f5:	rcl    BYTE PTR [esi],0x81
  4138f8:	inc    esi
  4138f9:	or     al,0xf3
  4138fb:	imul   eax,DWORD PTR [eax+0xe],0x88241e7e
  413902:	lock pop ecx
  413904:	inc    eax
  413905:	push   cs
  413906:	imul   esp,DWORD PTR [esi],0x21
  413909:	(bad)  
  41390a:	lods   eax,DWORD PTR ds:[esi]
  41390b:	rol    DWORD PTR [ecx],0x66
  41390e:	jo     0x4138ec
  413910:	pop    es
  413911:	or     ah,dh
  413913:	dec    edx
  413914:	ror    DWORD PTR [eax-0xe7fecb],0x5f
  41391b:	retf   0xb508
  41391e:	xor    al,0xae
  413920:	test   al,bh
  413922:	jecxz  0x4138ae
  413924:	lock les esi,FWORD PTR [esi]
  413927:	fadd   DWORD PTR [ecx]
  413929:	jl     0x41391e
  41392b:	ffreep st(0)
  41392d:	inc    ebx
  41392e:	stos   DWORD PTR es:[edi],eax
  41392f:	aas    
  413930:	add    al,0x0
  413932:	repz sbb al,0x3e
  413935:	hlt    
  413936:	cld    
  413937:	fild   WORD PTR [ecx]
  413939:	add    BYTE PTR [eax],al
  41393b:	add    BYTE PTR [eax],al
  41393d:	mov    cl,bl
  41393f:	test   al,bh
  413941:	shl    DWORD PTR [edx-0x12],cl
  413944:	les    ebp,FWORD PTR [esi]
  413946:	fadd   DWORD PTR [ecx]
  413948:	add    BYTE PTR [edi+ebx*8-0x40],bh
  41394c:	inc    ebx
  41394d:	jnp    0x41392e
  41394f:	fadd   DWORD PTR [eax]
  413951:	repz and al,0x3e
  413954:	hlt    
  413955:	fild   WORD PTR fs:[ecx]
  413958:	add    BYTE PTR [esi+0x25],ch
  41395b:	sub    dl,BYTE PTR [eax+0x66]
  41395e:	sbb    eax,0x22785020
  413963:	or     al,0xe8
  413965:	pop    ds
  413966:	vpaddw ymm5,ymm5,YMMWORD PTR [esi+0x25]
  41396b:	sub    DWORD PTR [eax+0x66],edx
  41396e:	sbb    eax,0x2278501e
  413973:	fsub   st(0),st
  413975:	das    
  413976:	push   es
  413977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413978:	xlat   BYTE PTR ds:[ebx]
  413979:	push   ds
  41397a:	jnp    0x4139a1
  41397c:	sub    bl,al
  41397e:	jnp    0x4139ad
  413980:	sub    al,0xa3
  413982:	and    DWORD PTR [eax+edx*8],0xd785921b
  413989:	(bad)  
  41398a:	pop    edi
  41398b:	xlat   BYTE PTR ds:[ebx]
  41398c:	xor    ch,BYTE PTR [eax+0x44]
  41398f:	mov    eax,0x683cdb33
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	out    0x81,al
  413997:	lods   eax,DWORD PTR ds:[esi]
  413998:	adc    ebp,DWORD PTR [ebx+0x45]
  41399b:	test   al,0x6
  41399d:	sahf   
  41399e:	inc    ebp
  41399f:	loope  0x4139a7
  4139a1:	add    BYTE PTR [eax],al
  4139a3:	add    BYTE PTR [esi+0x2dbddb45],bl
  4139a9:	adc    ebp,eax
  4139ab:	xor    BYTE PTR [ebx-0x4f141bad],0x87
  4139b2:	xlat   BYTE PTR ss:[ebx]
  4139b4:	je     0x4139fb
  4139b6:	iret   
  4139b7:	xor    BYTE PTR [ebx+0x25d6fd53],0xf7
  4139be:	sbb    eax,0x6f2960e
  4139c3:	hlt    
  4139c4:	int3   
  4139c5:	push   es
  4139c6:	pusha  
  4139c7:	ds out dx,eax
  4139c9:	and    DWORD PTR [edi],0xa4c4f750
  4139cf:	(bad)  
  4139d0:	je     0x413a07
  4139d2:	push   DWORD PTR [eax-0x7c11338d]
  4139d8:	call   0xec9221a8
  4139dd:	retf   
  4139de:	push   ebp
  4139df:	hlt    
  4139e0:	push   edi
  4139e1:	repnz retf 0xcf3
  4139e5:	pop    es
  4139e6:	xor    eax,0xc68733ec
  4139eb:	(bad)  
  4139ec:	add    dl,ch
  4139ee:	jb     0x4139ad
  4139f0:	xchg   esi,eax
  4139f1:	sub    al,0x0
  4139f3:	adc    bh,BYTE PTR [esi]
  4139f5:	leave  
  4139f6:	add    al,0xe9
  4139f8:	cmp    eax,0xeea60455
  4139fd:	leave  
  4139fe:	adc    ecx,DWORD PTR [ecx-0x69fff3e0]
  413a04:	mov    esi,0xf4fcf6
  413a09:	add    BYTE PTR [eax],al
  413a0b:	and    al,0xf7
  413a0d:	aas    
  413a0e:	jmp    0x915d8f38
  413a13:	ja     0x41399b
  413a15:	std    
  413a16:	jbe    0x4139dd
  413a18:	push   esp
  413a19:	sbb    BYTE PTR [ecx+0x66fd875f],al
  413a1f:	lds    edx,FWORD PTR [esp+eax*2+0x51]
  413a23:	addr16 xchg ch,bh
  413a26:	push   esi
  413a27:	push   ds
  413a28:	fild   WORD PTR [ecx-0x3e366297]
  413a2e:	pushf  
  413a2f:	imul   ebx,edx,0x579d974f
  413a35:	or     al,0x36
  413a37:	mov    ds:0xf0a91253,eax
  413a3c:	jge    0x413a2e
  413a3e:	int3   
  413a3f:	lock push es
  413a41:	std    
  413a42:	jmp    0x100f6b0
  413a47:	cmp    dh,0xbe
  413a4a:	bound  ebp,QWORD PTR [esi-0x5a1620b5]
  413a50:	push   es
  413a51:	add    BYTE PTR [edx+0x46],dh
  413a54:	mov    esp,edx
  413a56:	fyl2xp1 
  413a58:	sar    BYTE PTR [edi-0x207407ff],0xf1
  413a5f:	jmp    0x4139ec
  413a61:	xchg   DWORD PTR [ebx+edi*1],esp
  413a64:	pusha  
  413a65:	add    al,0x64
  413a67:	or     al,0xcb
  413a69:	push   eax
  413a6a:	into   
  413a6b:	mov    ah,0xfe
  413a6d:	out    0x0,eax
  413a6f:	add    BYTE PTR [eax],al
  413a71:	add    BYTE PTR [ecx-0x310002ec],bh
  413a77:	ret    0x1874
  413a7a:	lahf   
  413a7b:	mov    esp,0xb1fc1074
  413a80:	jno    0x413a8e
  413a82:	push   ebp
  413a83:	cmp    ecx,DWORD PTR [eax]
  413a85:	call   0x3e4f1f
  413a8a:	sahf   
  413a8b:	ret    0x474
  413a8e:	stos   BYTE PTR es:[edi],al
  413a8f:	pop    es
  413a90:	out    0x2,eax
  413a92:	cmp    bh,al
  413a94:	pop    esi
  413a95:	leave  
  413a96:	dec    eax
  413a97:	cli    
  413a98:	call   DWORD PTR [ecx+edx*2-0x21]
  413a9c:	jge    0x413a8a
  413a9e:	(bad)  
  413a9f:	or     BYTE PTR [eax],al
  413aa1:	add    BYTE PTR [ecx-0x63f3a681],bl
  413aa7:	sbb    eax,DWORD PTR [edi+0xc60d27d]
  413aad:	push   0x4038f2
  413ab2:	pop    ebp
  413ab3:	fisubr WORD PTR [ebp+0x5e]
  413ab6:	retf   
  413ab7:	push   es
  413ab8:	test   al,al
  413aba:	xchg   ebp,eax
  413abb:	dec    edx
  413abc:	sti    
  413abd:	pop    es
  413abe:	call   0xfdcf:0x7d406806
  413ac5:	imul   eax,DWORD PTR [esi+0x4ac84181],0x9b5d97de
  413acf:	push   es
  413ad0:	test   al,al
  413ad2:	test   DWORD PTR [edx-0x1d],ecx
  413ad5:	pop    es
  413ad6:	add    BYTE PTR [eax],al
  413ad8:	add    BYTE PTR [edx-0x7dfb95fa],cl
  413ade:	push   ss
  413adf:	mov    DWORD PTR [ebp+0x12],ecx
  413ae2:	push   ss
  413ae3:	mov    ch,0x38
  413ae5:	mov    esp,0x52e80042
  413aea:	(bad)  
  413aed:	repz pop edx
  413aef:	ror    DWORD PTR ds:0xfffc6b6e,0x3c
  413af6:	pop    eax
  413af7:	ds int 0x6b
  413afa:	and    ebp,DWORD PTR [edi-0x796f5175]
  413b00:	inc    ebx
  413b01:	aaa    
  413b02:	enter  0x5c0,0xf3
  413b06:	fild   WORD PTR [esi+0x3e5b0e7b]
  413b0c:	rcr    BYTE PTR [ebx],1
  413b0e:	cmp    ah,bh
  413b10:	inc    DWORD PTR [ecx+ebp*4]
  413b13:	mov    eax,DWORD PTR [ebx+0x16]
  413b16:	ror    DWORD PTR [ebx-0x3efe0bb5],1
  413b1c:	loopne 0x413b19
  413b1e:	stc    
  413b1f:	push   es
  413b20:	mov    edi,0x3c110f4
  413b25:	fisub  WORD PTR [ebx-0x2c]
  413b28:	std    
  413b29:	call   0x18b9:0xf30000df
  413b30:	mov    edi,0x58560f4
  413b35:	repz fisttp WORD PTR [eax-0x163d8ff7]
  413b3c:	add    BYTE PTR [eax],al
  413b3e:	add    BYTE PTR [eax],al
  413b40:	loopne 0x413b52
  413b42:	xchg   BYTE PTR [ebx-0x65],al
  413b45:	mov    al,ds:0xf4468b31
  413b4a:	mov    DWORD PTR [ebx-0x79],edi
  413b4d:	call   0x9ab93f81
  413b52:	in     eax,0x89
  413b54:	mov    ebx,0x89bfb164
  413b59:	scas   eax,DWORD PTR es:[edi]
  413b5a:	sbb    bh,0xf3
  413b5d:	(bad)  
  413b5f:	add    al,bh
  413b61:	and    eax,0xdfa5d088
  413b66:	aam    0x0
  413b68:	repz push es
  413b6a:	or     bh,BYTE PTR [edx-0x108196c]
  413b70:	cmp    al,0x5c
  413b72:	jmp    0x413af4
  413b74:	mov    al,0xe6
  413b76:	test   al,0xdd
  413b78:	jmp    0x413b41
  413b7a:	leave  
  413b7b:	cld    
  413b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7d:	leave  
  413b7e:	xor    al,0xfc
  413b80:	sti    
  413b81:	mov    esp,0xde134160
  413b86:	xchg   BYTE PTR [ecx],dh
  413b88:	sbb    al,0xc9
  413b8a:	imul   eax,esp,0xffffffa0
  413b8d:	add    ch,BYTE PTR [edx+0x41]
  413b90:	pop    ds
  413b91:	leave  
  413b92:	bound  ecx,QWORD PTR [ecx+0x17]
  413b95:	test   DWORD PTR [edi+0x4],edi
  413b98:	out    dx,al
  413b99:	and    ch,0xa
  413b9c:	repz push es
  413b9e:	das    
  413b9f:	add    esi,DWORD PTR [eax+0x25]
  413ba2:	out    dx,al
  413ba3:	add    eax,DWORD PTR [eax]
  413ba5:	add    BYTE PTR [eax],al
  413ba7:	repz pop esi
  413ba9:	daa    
  413baa:	pop    ebx
  413bab:	cli    
  413bac:	push   es
  413bad:	mov    esi,0x6bff587e
  413bb2:	dec    ecx
  413bb3:	into   
  413bb4:	aaa    
  413bb5:	aas    
  413bb6:	nop
  413bb7:	daa    
  413bb8:	push   es
  413bb9:	out    0x87,eax
  413bbb:	mov    bl,0xf8
  413bbd:	push   0xfffffffc
  413bbf:	out    dx,eax
  413bc0:	push   es
  413bc1:	out    0x83,eax
  413bc3:	sub    al,cl
  413bc5:	out    0x7e,eax
  413bc7:	cli    
  413bc8:	not    DWORD PTR [ebx-0x3a]
  413bcb:	sahf   
  413bcc:	xor    al,0xef
  413bce:	xchg   DWORD PTR [ebx-0xa279d08],esi
  413bd4:	push   es
  413bd5:	out    0x7e,eax
  413bd7:	cli    
  413bd8:	add    DWORD PTR [ebx+eiz*8+0x7bac79f3],0x23
  413be0:	jp     0x413b76
  413be2:	jecxz  0x413c52
  413be4:	xor    al,0x0
  413be6:	in     eax,0xe5
  413be8:	mov    esi,0x82f02083
  413bed:	(bad)  
  413bef:	lock push es
  413bf1:	std    
  413bf2:	push   esp
  413bf3:	inc    edi
  413bf4:	jge    0x413c39
  413bf6:	popa   
  413bf7:	sub    BYTE PTR [esp+edi*8-0x32],dl
  413bfb:	and    DWORD PTR [esi-0x28],edi
  413bfe:	ins    BYTE PTR es:[edi],dx
  413bff:	test   edx,edi
  413c01:	and    DWORD PTR [edx+edi*8-0x3449fffa],0xffffffe6
  413c09:	std    
  413c0a:	aam    0x0
  413c0c:	add    BYTE PTR [eax],al
  413c0e:	test   al,0xf4
  413c10:	aas    
  413c11:	jmp    0xf08acd07
  413c16:	(bad)  
  413c17:	into   
  413c18:	bound  bp,DWORD PTR [ebp+0x10a865fe]
  413c1f:	jmp    DWORD PTR [ebp-0xe]
  413c22:	das    
  413c23:	popa   
  413c24:	xchg   DWORD PTR [ebx+eiz*2],esp
  413c27:	popa   
  413c28:	mov    DWORD PTR [edx],ebp
  413c2a:	in     eax,0xfa
  413c2c:	mov    ch,0x22
  413c2e:	fsub   QWORD PTR [ecx-0x41]
  413c31:	dec    ecx
  413c32:	fsub   DWORD PTR [ecx+0x9]
  413c35:	sub    BYTE PTR [edx-0x80],bl
  413c38:	inc    ebx
  413c39:	ja     0x413c80
  413c3b:	ret    0xe923
  413c3e:	lock leave 
  413c40:	add    BYTE PTR [edx-0x4f],dh
  413c43:	xchg   edi,esp
  413c45:	fldcw  WORD PTR [ebp-0x50d97678]
  413c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c4c:	adc    BYTE PTR [edx+0x59],ah
  413c4f:	and    eax,0x8756f2d6
  413c54:	call   0x8e8f44a
  413c59:	loop   0x413c0a
  413c5b:	jg     0x413ca0
  413c5d:	pop    ecx
  413c5e:	push   ds
  413c5f:	test   DWORD PTR [edx+0x50234900],0x50a3978d
  413c69:	call   0x3c7236
  413c6e:	je     0x413c32
  413c70:	inc    ecx
  413c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c72:	add    BYTE PTR [eax],al
  413c74:	add    BYTE PTR [edx+0x5d],ah
  413c77:	mov    ebp,0x63ca7445
  413c7c:	rcl    DWORD PTR [edi],0x6b
  413c7f:	or     BYTE PTR [edx+0x42],ch
  413c82:	dec    eax
  413c83:	inc    ecx
  413c84:	pushf  
  413c85:	fidiv  DWORD PTR [ebp-0x5bbdf78f]
  413c8b:	pop    esp
  413c8c:	add    DWORD PTR [edx],ebx
  413c8e:	jg     0x413c50
  413c90:	setbe  dl
  413c93:	add    eax,0xfb800a00
  413c98:	je     0x413ca0
  413c9a:	push   cs
  413c9b:	sti    
  413c9c:	jne    0x413d18
  413c9e:	mov    ch,0x71
  413ca0:	or     BYTE PTR [edx+0x4c],dh
  413ca3:	pop    esp
  413ca4:	add    DWORD PTR [edx],ecx
  413ca6:	jg     0x413c68
  413ca8:	orps   xmm7,XMMWORD PTR [ebx+0x43da0003]
  413caf:	cmp    DWORD PTR [esp+eax*8],esi
  413cb2:	dec    edx
  413cb3:	add    BYTE PTR [eax+0xd84d],bh
  413cb9:	ins    BYTE PTR es:[edi],dx
  413cba:	fadd   DWORD PTR [eax]
  413cbc:	add    dl,bl
  413cbe:	inc    ebx
  413cbf:	enter  0xb456,0x41
  413cc3:	inc    ecx
  413cc4:	fstp   TBYTE PTR [edi]
  413cc6:	mov    cs,WORD PTR [eax+0x6ad7edfe]
  413ccc:	add    BYTE PTR [edx-0x7527be30],cl
  413cd2:	xor    BYTE PTR [ebp-0x2c27ccb3],al
  413cd8:	push   esi
  413cd9:	add    BYTE PTR [eax],al
  413cdb:	add    BYTE PTR [ecx-0xc7a7620],ch
  413ce1:	daa    
  413ce2:	int    0xfd
  413ce4:	jl     0x413d64
  413ce6:	xor    ebp,edi
  413ce8:	pushf  
  413ce9:	xor    eax,ecx
  413ceb:	sbb    BYTE PTR [edx+0x3b],bh
  413cee:	leave  
  413cef:	xchg   esi,ebx
  413cf1:	or     eax,DWORD PTR [ebx+0xb05b7b]
  413cf7:	xchg   BYTE PTR [edx],bh
  413cf9:	mov    al,0x1
  413cfb:	add    cl,bl
  413cfd:	scas   eax,DWORD PTR es:[edi]
  413cfe:	pop    ecx
  413cff:	sub    al,0xf2
  413d01:	scas   eax,DWORD PTR es:[edi]
  413d02:	add    DWORD PTR [ebx+0x3131a7b6],ecx
  413d08:	xor    ebx,eax
  413d0a:	xor    BYTE PTR [esi-0xe],bl
  413d0d:	scas   eax,DWORD PTR es:[edi]
  413d0e:	test   al,bh
  413d10:	and    al,0xad
  413d12:	xchg   BYTE PTR [esi-0x2fe500d],bh
  413d18:	inc    bl
  413d1a:	idiv   DWORD PTR [edi]
  413d1c:	repz loop 0x413d5c
  413d1f:	and    eax,0x8300aff3
  413d24:	push   0xffffffab
  413d26:	add    DWORD PTR [eax],eax
  413d28:	jo     0x413d35
  413d2a:	clc    
  413d2b:	jmp    DWORD PTR [eax-0x47]
  413d2e:	pop    ebx
  413d2f:	std    
  413d30:	in     al,0xc2
  413d32:	cmc    
  413d33:	cld    
  413d34:	push   es
  413d35:	loopne 0x413d2b
  413d37:	aas    
  413d38:	repz cmp BYTE PTR [esi+0xc],al
  413d3c:	js     0x413cf5
  413d3e:	rcl    BYTE PTR [eax+0x0],1
  413d41:	add    BYTE PTR [eax],al
  413d43:	jecxz  0x413d6d
  413d45:	dec    esi
  413d46:	clc    
  413d47:	jo     0x413d13
  413d49:	icebp  
  413d4a:	jmp    FWORD PTR [edi+0x4c]
  413d4d:	push   ebp
  413d4e:	outs   dx,DWORD PTR ds:[esi]
  413d4f:	jo     0x413d1b
  413d51:	fld    DWORD PTR [eax]
  413d53:	sbb    ch,bh
  413d55:	stc    
  413d56:	mov    BYTE PTR [esi],dh
  413d58:	add    al,0x7c
  413d5a:	dec    ebx
  413d5b:	mov    eax,DWORD PTR [esi]
  413d5d:	je     0x413d76
  413d5f:	mov    WORD PTR [ebx],gs
  413d61:	push   0x51
  413d63:	lock push es
  413d65:	popf   
  413d66:	cmp    al,0x15
  413d68:	mov    cl,BYTE PTR [ebp-0x54c30cf8]
  413d6e:	cmp    DWORD PTR [esi+0x3b],ebp
  413d71:	out    dx,eax
  413d72:	jl     0x413da6
  413d74:	scas   al,BYTE PTR es:[edi]
  413d75:	push   esi
  413d76:	fcomp  DWORD PTR [esi-0x3b]
  413d79:	push   0xffffffcb
  413d7b:	push   esi
  413d7c:	adc    eax,0x6f1eb6b
  413d81:	out    0x88,eax
  413d83:	xor    edx,DWORD PTR ds:0x6f1f36b
  413d89:	out    0x82,eax
  413d8b:	cmp    eax,DWORD PTR [edi]
  413d8d:	cmp    al,0x23
  413d8f:	jp     0x413ddc
  413d91:	xlat   BYTE PTR ds:[ebx]
  413d92:	inc    ebx
  413d93:	jmp    0x1cc6:0x159af4b
  413d9a:	int3   
  413d9b:	jb     0x413d52
  413d9d:	lock jp 0x413dde
  413da0:	xchg   ebx,eax
  413da1:	adc    al,0xe0
  413da3:	sbb    ebp,DWORD PTR [ebx]
  413da5:	adc    ecx,edi
  413da7:	add    BYTE PTR [eax],al
  413da9:	add    dh,bh
  413dab:	mov    al,0xdf
  413dad:	pop    ecx
  413dae:	in     al,dx
  413daf:	pop    esp
  413db0:	(bad)  
  413db1:	repnz outs dx,BYTE PTR ds:[esi]
  413db3:	les    edi,FWORD PTR [esi-0x31]
  413db6:	xor    BYTE PTR [edi],dl
  413db8:	bound  ecx,QWORD PTR [ecx+0x3]
  413dbb:	mov    BYTE PTR [esp+ebx*8],ah
  413dbe:	in     al,dx
  413dbf:	jmp    FWORD PTR [ebx+0x6a9d41cb]
  413dc5:	push   ecx
  413dc6:	fild   WORD PTR [esi]
  413dc8:	out    0x87,al
  413dca:	or     al,ah
  413dcc:	dec    esi
  413dcd:	iret   
  413dce:	mov    dh,0x3a
  413dd0:	fcmovne st,st(6)
  413dd2:	add    BYTE PTR [ebx],bl
  413dd4:	fld    DWORD PTR [ebx-0xd]
  413dd7:	lods   eax,DWORD PTR ds:[esi]
  413dd8:	add    ah,dl
  413dda:	lods   eax,DWORD PTR ds:[esi]
  413ddb:	ret    0x62fd
  413dde:	inc    edx
  413ddf:	punpckhbw mm5,QWORD PTR [ecx-0x6cffe1db]
  413de6:	out    dx,eax
  413de7:	pop    DWORD PTR [ebx+0x16]
  413dea:	(bad)  
  413deb:	scas   al,BYTE PTR es:[edi]
  413dec:	call   0x6c29:0x8406efb3
  413df3:	mov    BYTE PTR [edi+0xd06f0e5],bh
  413df9:	aas    
  413dfa:	stos   BYTE PTR es:[edi],al
  413dfb:	rol    DWORD PTR [ecx-0x7bee10ff],0x5
  413e02:	sti    
  413e03:	push   es
  413e04:	add    BYTE PTR [ecx],dh
  413e06:	pop    es
  413e07:	adc    al,BYTE PTR [esp+ebp*4+0x210006f2]
  413e0e:	add    BYTE PTR [eax],al
  413e10:	add    BYTE PTR [eax+ecx*4],dh
  413e13:	sub    ebp,ebx
  413e15:	lock push es
  413e17:	dec    eax
  413e18:	out    dx,al
  413e19:	ins    BYTE PTR es:[edi],dx
  413e1a:	sar    bh,1
  413e1c:	call   0x654e8d11
  413e21:	push   ecx
  413e22:	pop    es
  413e23:	add    cl,ch
  413e25:	enter  0x8311,0x79
  413e29:	in     al,dx
  413e2a:	push   es
  413e2b:	add    BYTE PTR [ecx],al
  413e2d:	mov    bh,0x39
  413e2f:	sbb    ecx,ebp
  413e31:	call   0xe857:0x672c8b05
  413e38:	sbb    BYTE PTR [ecx],bl
  413e3a:	(bad)  
  413e3b:	std    
  413e3c:	ins    DWORD PTR es:[edi],dx
  413e3d:	mov    al,0x11
  413e3f:	test   cl,dh
  413e41:	in     al,dx
  413e42:	push   es
  413e43:	add    cl,dl
  413e45:	xor    BYTE PTR [edx],bh
  413e47:	sbb    ecx,ebp
  413e49:	sub    cl,BYTE PTR [ebx]
  413e4b:	mov    ebp,DWORD PTR [esp+esi*4+0x910e856]
  413e52:	(bad)  
  413e53:	std    
  413e54:	add    BYTE PTR [esi],bl
  413e56:	enter  0x840b,0xba
  413e5a:	or     eax,DWORD PTR [eax]
  413e5c:	add    BYTE PTR [ecx],dl
  413e5e:	inc    edi
  413e5f:	les    ecx,FWORD PTR [ebx-0x1135]
  413e65:	aad    0x7
  413e67:	xchg   ecx,edx
  413e69:	fcmovnu st,st(5)
  413e6b:	adc    BYTE PTR [ebx],cl
  413e6d:	enter  0xcd40,0xc1
  413e71:	call   0x122bd2d
  413e76:	add    BYTE PTR [eax],al
  413e78:	pop    edx
  413e79:	aam    0x0
  413e7b:	add    BYTE PTR [ecx+0x7a],ah
  413e7e:	mov    ebp,0xe2ca52e8
  413e83:	or     BYTE PTR [ecx-0x3b],dl
  413e86:	test   DWORD PTR [ebp-0x62],eax
  413e89:	dec    edx
  413e8a:	or     eax,DWORD PTR [ebx+eiz*8+0x3200000e]
  413e91:	mov    eax,0x3d25ff79
  413e96:	lock test DWORD PTR [ecx+eax*8-0x7f],ebp
  413e9b:	sbb    cl,BYTE PTR [esi]
  413e9d:	pop    es
  413e9e:	add    BYTE PTR [eax-0x36],ch
  413ea1:	pop    ecx
  413ea2:	pop    ss
  413ea3:	add    BYTE PTR [ebp+0x5b],al
  413ea6:	les    edx,FWORD PTR [esi+0x62]
  413ea9:	scas   al,BYTE PTR es:[edi]
  413eaa:	push   ebp
  413eab:	add    DWORD PTR [edx],ebx
  413ead:	mov    eax,eax
  413eaf:	jle    0xa414072
  413eb5:	ds inc ecx
  413eb7:	or     al,0x61
  413eb9:	cli    
  413eba:	ret    
  413ebb:	mov    esp,edx
  413ebd:	cld    
  413ebe:	cli    
  413ebf:	push   eax
  413ec0:	(bad)  
  413ec1:	cld    
  413ec2:	out    0x13,eax
  413ec4:	(bad)  
  413ec5:	sar    ebx,cl
  413ec7:	jmp    0x3d0fbb
  413ecc:	inc    ecx
  413ecd:	push   edx
  413ece:	or     BYTE PTR [eax-0xd],ch
  413ed1:	outs   dx,DWORD PTR ds:[esi]
  413ed2:	push   esp
  413ed3:	sbb    ebx,esi
  413ed5:	lds    eax,FWORD PTR [esi]
  413ed7:	mov    esi,DWORD PTR [esi]
  413ed9:	add    BYTE PTR [eax+ebp*8],dh
  413edc:	add    BYTE PTR [eax],al
  413ede:	add    BYTE PTR [ecx+0x67],ah
  413ee1:	add    al,BYTE PTR [eax]
  413ee3:	ja     0x413ed5
  413ee5:	cli    
  413ee6:	cmp    DWORD PTR [edx+0x150001ad],0xffffffef
  413eed:	inc    esp
  413eee:	out    dx,eax
  413eef:	sti    
  413ef0:	mov    edx,eax
  413ef2:	inc    ebx
  413ef3:	sub    BYTE PTR [eax+0x10c01557],0x8e
  413efa:	add    BYTE PTR [ebx-0x50],dh
  413efd:	add    ebp,edi
  413eff:	(bad)  
  413f00:	pop    ebx
  413f01:	clc    
  413f02:	aas    
  413f03:	repz xor al,ah
  413f06:	pushw  0xaa6b
  413f0a:	or     eax,0x65eef366
  413f0f:	or     ch,bl
  413f11:	shl    BYTE PTR [ebx-0x17],1
  413f14:	push   ecx
  413f15:	ja     0x413f5a
  413f17:	sbb    BYTE PTR [edx+0x9],cl
  413f1a:	inc    ebx
  413f1b:	and    BYTE PTR [eax*1+0x12ff2be],al
  413f22:	add    BYTE PTR [ecx-0xd],ch
  413f25:	stos   DWORD PTR es:[edi],eax
  413f26:	mov    ah,BYTE PTR [esi+0x73d0777f]
  413f2c:	pop    DWORD PTR [edx]
  413f2e:	adc    BYTE PTR [ecx],0xaf
  413f31:	pop    es
  413f32:	retf   0xd187
  413f35:	test   edi,eax
  413f37:	jg     0x413ef7
  413f39:	adc    bh,al
  413f3b:	sub    edi,ebx
  413f3d:	out    dx,al
  413f3e:	or     al,0x7f
  413f40:	outs   dx,BYTE PTR ds:[esi]
  413f41:	cmp    al,BYTE PTR [ecx-0x2e000000]
  413f47:	mov    cl,0x80
  413f49:	mov    edi,0x30fc84f1
  413f4e:	mov    edx,0xe23f1f06
  413f53:	adc    DWORD PTR [ebx-0x3e],esi
  413f56:	xor    al,0x86
  413f58:	dec    eax
  413f59:	push   DWORD PTR [ebx-0x39]
  413f5c:	jecxz  0x413f56
  413f5e:	popf   
  413f5f:	mov    WORD PTR [ebx+edx*8-0x1d982987],?
  413f66:	test   DWORD PTR [esi-0x3326f8b7],0xcf7725b3
  413f70:	fwait
  413f71:	bnd ret 
  413f73:	iret   
  413f74:	fistp  QWORD PTR [esi]
  413f76:	loop   0x413f89
  413f78:	jnp    0x413f3c
  413f7a:	sub    al,0x86
  413f7c:	or     cl,cl
  413f7e:	jb     0x413f47
  413f80:	out    dx,eax
  413f81:	fdiv   st,st(6)
  413f83:	cmc    
  413f84:	das    
  413f85:	or     ebp,DWORD PTR [eax-0x6b8819eb]
  413f8b:	dec    edi
  413f8c:	push   0xffffffe2
  413f8e:	inc    edi
  413f8f:	test   DWORD PTR [eax+0x71b7fbf4],ebp
  413f95:	cmp    DWORD PTR [ebx-0x7a],eax
  413f98:	enter  0xf06,0x5
  413f9c:	adc    DWORD PTR [edi+eiz*4+0x6fc3fa16],edi
  413fa3:	iret   
  413fa4:	out    dx,al
  413fa5:	outs   dx,DWORD PTR ds:[esi]
  413fa6:	xor    ecx,DWORD PTR [esi+0x6a]
  413fa9:	in     al,0x0
  413fab:	add    BYTE PTR [eax],al
  413fad:	adc    eax,DWORD PTR [ebp-0x4905bb59]
  413fb3:	popf   
  413fb4:	inc    ecx
  413fb5:	add    ecx,DWORD PTR [esi]
  413fb7:	adc    edi,ebp
  413fb9:	mov    bh,BYTE PTR [esi]
  413fbb:	push   0xe70ef3ba
  413fc0:	add    ecx,DWORD PTR [esi-0x47]
  413fc3:	sub    al,0xd4
  413fc5:	add    edi,DWORD PTR [ebx]
  413fc7:	lock pop ebp
  413fc9:	imul   eax,DWORD PTR [esi+0xeefa700],0x0
  413fd0:	jmp    0x74446cee
  413fd5:	xor    dh,BYTE PTR [edi-0x20cd93b0]
  413fdb:	push   eax
  413fdc:	inc    ecx
  413fdd:	cs ds std 
  413fe0:	dec    esi
  413fe1:	test   al,0x7b
  413fe3:	inc    ebx
  413fe4:	cmp    ah,al
  413fe6:	push   esi
  413fe7:	or     eax,0x50b03276
  413fec:	bound  esi,QWORD PTR [edx]
  413fee:	adc    ecx,DWORD PTR [ecx-0x226f21f]
  413ff4:	mov    ecx,0x1c12a998
  413ff9:	test   al,0xc2
  413ffb:	mov    DWORD PTR [eax+edi*2+0x5d964028],edx
  414002:	shl    BYTE PTR [edi-0x12],0xeb
  414006:	inc    ebx
  414007:	xchg   esp,eax
  414008:	cdq    
  414009:	cmp    BYTE PTR [edx-0x750f17a8],dl
  41400f:	rcr    dh,0x0
  414012:	add    BYTE PTR [eax],al
  414014:	int3   
  414015:	js     0x414019
  414017:	jmp    0x75bcc70c
  41401c:	lock adc DWORD PTR [ebx-0x3f85c657],edx
  414023:	cmp    DWORD PTR [ebx+eax*2-0x719f8d6b],ebp
  41402a:	enter  0x3fa8,0x17
  41402e:	jg     0x413ffb
  414030:	lock push es
  414032:	std    
  414033:	jmp    0xb1cb1145
  414038:	das    
  414039:	loopne 0x41404b
  41403b:	(bad)  
  41403c:	lock rol DWORD PTR [eax],0xe9
  414040:	cmc    
  414041:	(bad)  
  414042:	mov    DWORD PTR [ebx+ebp*8],esp
  414045:	sbb    bh,0x0
  414048:	loop   0x414014
  41404a:	jmp    0x5d08:0x877ae108
  414051:	hlt    
  414052:	adc    ebp,ecx
  414054:	add    ecx,eax
  414056:	sti    
  414057:	inc    DWORD PTR [ecx+0x4f]
  41405a:	or     BYTE PTR [eax-0x76],ch
  41405d:	push   esp
  41405e:	pop    ss
  41405f:	add    BYTE PTR [eax+0xe458ac2],dh
  414065:	hlt    
  414066:	out    0x36,eax
  414068:	push   edx
  414069:	or     al,BYTE PTR [eax]
  41406b:	test   dl,cl
  41406d:	mov    esp,0x3885d81
  414072:	add    BYTE PTR [esi-0x25],ah
  414075:	inc    esi
  414076:	leave  
  414077:	or     BYTE PTR [eax],al
  414079:	add    BYTE PTR [eax],al
  41407b:	je     0x414047
  41407d:	inc    ecx
  41407e:	iret   
  41407f:	and    BYTE PTR ds:0xbbbb45bd,0x63
  414086:	rcl    DWORD PTR [edi+0x6f800878],0x77
  41408d:	add    BYTE PTR [edi],cl
  41408f:	mov    ebx,0xcc99c92f
  414095:	mov    BYTE PTR [ebp-0x12],al
  414098:	adc    cl,BYTE PTR [ecx-0x8]
  41409b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409c:	mov    al,0x88
  41409e:	inc    ebp
  41409f:	cs mov eax,eax
  4140a2:	pop    es
  4140a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a4:	or     ecx,DWORD PTR [eax-0x2]
  4140a7:	(bad)  
  4140a8:	mov    edi,0x4f223963
  4140ad:	add    eax,0x5ca8947
  4140b2:	cmp    ebx,edi
  4140b4:	shl    BYTE PTR [edx-0x14],cl
  4140b7:	add    DWORD PTR [eax-0x8],ecx
  4140ba:	jne    0x4140af
  4140bc:	int    0x41
  4140be:	clc    
  4140bf:	xor    edi,0x66f36bf7
  4140c5:	stc    
  4140c6:	mov    ah,BYTE PTR [esi+0x3c]
  4140c9:	fcomp  QWORD PTR [esi+0x6a]
  4140cc:	test   edi,eax
  4140ce:	test   BYTE PTR [ebx-0xd018253],dh
  4140d4:	scas   eax,DWORD PTR es:[edi]
  4140d5:	add    DWORD PTR [ecx-0x34],ebp
  4140d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d9:	add    al,0x7b
  4140db:	xlat   BYTE PTR ds:[ebx]
  4140dc:	(bad)  
  4140de:	mov    al,BYTE PTR [eax]
  4140e0:	add    BYTE PTR [eax],al
  4140e2:	ss in  al,dx
  4140e4:	xor    edx,DWORD PTR [ebp-0x35]
  4140e7:	jb     0x414134
  4140e9:	std    
  4140ea:	lods   al,BYTE PTR ds:[esi]
  4140eb:	inc    edi
  4140ec:	sbb    al,0xfc
  4140ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140ef:	inc    ebp
  4140f0:	pop    esp
  4140f1:	inc    eax
  4140f2:	and    al,0xa9
  4140f4:	add    DWORD PTR [edx-0xe],ebp
  4140f7:	hlt    
  4140f8:	dec    esp
  4140f9:	or     BYTE PTR [ebx-0x7b00d64b],bl
  4140ff:	sub    al,0xc4
  414101:	or     eax,0x10077
  414106:	repz sub BYTE PTR [ebp+0x8],al
  41410a:	fld    TBYTE PTR [edi+0x50]
  41410d:	sbb    ebx,esi
  41410f:	cdq    
  414110:	add    ecx,DWORD PTR [ebx-0x17cbfc4a]
  414116:	gs popf 
  414118:	add    al,BYTE PTR [eax]
  41411a:	ja     0x41410c
  41411c:	test   BYTE PTR [ebx+0x1af7e],0xec
  414123:	xchg   esp,eax
  414124:	ss in  al,0x70
  414127:	push   ecx
  414128:	cmp    BYTE PTR [eax],al
  41412a:	js     0x41419b
  41412c:	push   ds
  41412d:	std    
  41412e:	repz scas eax,DWORD PTR es:[edi]
  414130:	add    DWORD PTR [edi-0x183d47ed],edi
  414136:	jmp    0x4140e0
  414138:	ret    0x7a66
  41413b:	icebp  
  41413c:	cmp    esp,DWORD PTR [esi+0x6e]
  41413f:	pop    es
  414140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414141:	clc    
  414142:	jo     0x4140d1
  414144:	out    0x3,eax
  414146:	add    BYTE PTR [eax],al
  414148:	add    bl,dh
  41414a:	or     eax,0xa5accb5e
  41414f:	jmp    0x7284a3ca
  414154:	mov    eax,0xc8ffdfcb
  414159:	(bad)  
  41415a:	and    BYTE PTR [edi-0x17c08f08],0x3
  414161:	repz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414164:	push   eax
  414165:	fiadd  DWORD PTR [esi]
  414167:	mov    dh,0xc8
  414169:	std    
  41416a:	xchg   ecx,eax
  41416b:	aam    0xfb
  41416d:	xchg   esp,eax
  41416e:	add    BYTE PTR [esi+0x2782f302],dh
  414174:	clc    
  414175:	jo     0x41419e
  414177:	call   0xcccb347f
  41417c:	repz mov eax,?
  41417f:	es (bad) 
  414181:	repz mov ebp,0x21503e7
  414187:	stos   BYTE PTR es:[edi],al
  414188:	cmp    eax,DWORD PTR [edx]
  41418a:	pop    ecx
  41418b:	bound  eax,QWORD PTR [ecx]
  41418d:	(bad)  
  41418e:	jne    0x41412c
  414190:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414193:	jmp    0xeaefea12
  414198:	mov    ebx,0xd362076a
  41419d:	mov    WORD PTR [edi+edx*8-0x1f16b484],fs
  4141a4:	sti    
  4141a5:	inc    edi
  4141a6:	or     eax,0xc7f24d95
  4141ab:	int    0xfc
  4141ad:	add    BYTE PTR [eax],al
  4141af:	add    BYTE PTR [ebp-0x52],ch
  4141b2:	(bad)  
  4141b4:	pop    ds
  4141b5:	jmp    0x8f4e3d62
  4141ba:	clc    
  4141bb:	jp     0x41416f
  4141bd:	inc    edx
  4141be:	add    BYTE PTR [edx-0x5e],ah
  4141c1:	scas   al,BYTE PTR es:[edi]
  4141c2:	push   0xffffffe4
  4141c4:	xlat   BYTE PTR ds:[ebx]
  4141c5:	cmc    
  4141c6:	or     ebp,edi
  4141c8:	mov    ds:0xbb328707,eax
  4141cd:	mov    ebx,0x8e4ef943
  4141d2:	dec    ebx
  4141d3:	stc    
  4141d4:	inc    esi
  4141d5:	dec    BYTE PTR [eax+0x31]
  4141d8:	inc    ecx
  4141d9:	jb     0x4141c4
  4141db:	in     al,0x6a
  4141dd:	pop    es
  4141de:	std    
  4141df:	jmp    0x1d82cfd4
  4141e4:	dec    eax
  4141e5:	iret   
  4141e6:	mov    edi,0xf08fc748
  4141eb:	or     ah,BYTE PTR [ecx-0x389d31f2]
  4141f1:	jl     0x4141e1
  4141f3:	loope  0x4141c6
  4141f5:	mov    eax,0x49e07f0d
  4141fa:	mov    edi,0xce0f9748
  4141ff:	loop   0x41424b
  414201:	test   BYTE PTR [ecx-0x67],cl
  414204:	jno    0x4141c5
  414206:	add    ebx,DWORD PTR [ebx+ebx*8-0xf02867b]
  41420d:	or     DWORD PTR [ebx-0x245c61c],eax
  414213:	add    DWORD PTR [eax],0x8640000
  414219:	add    cl,ch
  41421b:	mov    edx,0x50b4fd0e
  414220:	outs   dx,BYTE PTR ds:[esi]
  414221:	inc    ecx
  414222:	jmp    0xda455a5c
  414227:	mov    al,0x6
  414229:	xchg   DWORD PTR [edx],ebp
  41422b:	dec    ebx
  41422c:	mov    eax,eax
  41422e:	out    dx,al
  41422f:	jae    0x4141db
  414231:	cli    
  414232:	(bad)  
  414233:	xor    eax,0xf0e9a7a4
  414238:	push   es
  414239:	std    
  41423a:	add    cl,bl
  41423c:	scas   al,BYTE PTR es:[edi]
  41423d:	in     eax,0xbb
  41423f:	mov    dl,0xc3
  414241:	sti    
  414242:	cmp    DWORD PTR [ecx+0x63e8fdae],0xffffffce
  414249:	sti    
  41424a:	jmp    edx
  41424c:	inc    edx
  41424d:	jae    0x41426a
  41424f:	or     bl,BYTE PTR [esi-0x1]
  414252:	dec    BYTE PTR [edi]
  414254:	mov    ebx,0x21ce8e5
  414259:	add    BYTE PTR [edx+ecx*4-0x357e7e4c],al
  414260:	pop    es
  414261:	add    BYTE PTR [ebx+0x4065bfc7],cl
  414267:	mov    ebp,0xba69fdb0
  41426c:	ds inc ecx
  41426e:	mov    ah,0x7a
  414270:	fistp  QWORD PTR [ebx]
  414272:	push   esi
  414273:	fwait
  414274:	pop    es
  414275:	test   al,al
  414277:	mov    esi,0x7d805d
  41427c:	add    BYTE PTR [eax],al
  41427e:	push   ds
  41427f:	call   0x4f4b4ef7
  414284:	mov    ah,0x10
  414286:	dec    esi
  414287:	mov    ecx,0xbffe7d7d
  41428c:	jb     0x4142e6
  41428e:	or     cl,BYTE PTR [edi-0x4d]
  414291:	add    BYTE PTR [esi-0xb],bl
  414294:	rcr    DWORD PTR gs:[edi+0x1b66088f],0x47
  41429c:	mov    edx,0x41c26c08
  4142a1:	mov    esp,0xb6798762
  4142a6:	pop    edx
  4142a7:	pop    ebp
  4142a8:	adc    BYTE PTR [edi],cl
  4142aa:	lahf   
  4142ab:	(bad)  
  4142ac:	mov    BYTE PTR [ebp+0x5c],al
  4142af:	xor    eax,DWORD PTR [ecx-0x4c]
  4142b2:	cli    
  4142b3:	xor    edi,DWORD PTR [edi]
  4142b5:	xor    ebx,esi
  4142b7:	std    
  4142b8:	mov    ebp,0xd9ae5c43
  4142bd:	jl     0x41425a
  4142bf:	(bad)
  4142c3:	xor    esp,eax
  4142c5:	call   0x3f8068ba
  4142ca:	sbb    dl,BYTE PTR [esi]
  4142cc:	retf   0xfcfd
  4142cf:	das    
  4142d0:	inc    ebp
  4142d1:	adc    al,0xf3
  4142d3:	adc    edx,esi
  4142d5:	cld    
  4142d6:	mov    sp,0x13c4
  4142da:	(bad)  
  4142db:	mov    ebp,0xa9c80041
  4142e0:	push   edi
  4142e1:	add    BYTE PTR [eax],al
  4142e3:	add    BYTE PTR [eax],al
  4142e5:	retf   
  4142e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e7:	dec    ecx
  4142e8:	std    
  4142e9:	int3   
  4142ea:	and    eax,0x3125e8cf
  4142ef:	ret    
  4142f0:	std    
  4142f1:	mov    esp,0xe8e8d5db
  4142f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f7:	(bad)  
  4142f8:	std    
  4142f9:	cwde   
  4142fa:	mov    esp,0x9b9bf178
  4142ff:	int3   
  414300:	std    
  414301:	pushf  
  414302:	push   ebp
  414303:	idiv   esp
  414305:	push   ds
  414306:	pop    eax
  414307:	ret    
  414308:	jae    0x414305
  41430a:	inc    edi
  41430b:	dec    edi
  41430c:	cmc    
  41430d:	test   cl,ch
  41430f:	and    bl,BYTE PTR [esi+0x18]
  414312:	test   ecx,0x7871f310
  414318:	lock jbe 0x414335
  41431b:	push   eax
  41431c:	dec    edi
  41431d:	jns    0x4142c1
  41431f:	jge    0x4142e1
  414321:	out    0x74,eax
  414323:	adc    dl,dl
  414325:	pop    ss
  414326:	retf   
  414327:	dec    esi
  414328:	add    ebx,ecx
  41432a:	lods   eax,DWORD PTR ds:[esi]
  41432b:	daa    
  41432c:	jmp    0x7359af20
  414331:	repnz push es
  414333:	sub    eax,0xa6f4e57a
  414338:	and    DWORD PTR [edi+esi*8],0x52
  41433c:	in     eax,dx
  41433d:	ret    
  41433e:	xchg   al,dl
  414340:	or     bl,BYTE PTR [esi+0x1ef97a16]
  414346:	scas   al,BYTE PTR es:[edi]
  414347:	jmp    0x41440e
  41434c:	fcomip st,st(6)
  41434e:	sub    al,0x7a
  414350:	cmc    
  414351:	xchg   BYTE PTR [eax+0x42ad7813],dh
  414357:	sub    BYTE PTR [ebx+esi*1],0xea
  41435b:	cmp    BYTE PTR [ecx-0x4c7219f9],0xb0
  414362:	test   eax,0x10016701
  414367:	(bad)  
  414368:	(bad)  
  414369:	push   es
  41436a:	out    0x3,eax
  41436c:	jnp    0x41436f
  41436e:	(bad)
  414373:	cld    
  414374:	and    al,0xc1
  414376:	out    dx,al
  414377:	add    edx,DWORD PTR ds:0x1903d1c6
  41437d:	pop    es
  41437e:	rol    DWORD PTR [ebx],0x19
  414381:	add    eax,0x329e03c1
  414386:	or     ebp,eax
  414388:	xchg   edi,eax
  414389:	adc    edi,DWORD PTR [edi]
  41438b:	repz int3 
  41438d:	push   es
  41438e:	bound  esi,QWORD PTR [edi]
  414390:	iret   
  414391:	add    ah,BYTE PTR [eax+0x42]
  414394:	div    ebp
  414396:	das    
  414397:	jle    0x41434c
  414399:	or     DWORD PTR [ebx+eax*8+0x31],esi
  41439d:	push   cs
  41439e:	out    0x2e,eax
  4143a0:	jp     0x41434c
  4143a2:	push   0xffffffd7
  4143a4:	add    eax,ecx
  4143a6:	lods   al,BYTE PTR ds:[esi]
  4143a7:	lds    edx,FWORD PTR [edx+eax*4+0x27]
  4143ab:	dec    edi
  4143ac:	into   
  4143ad:	push   ebp
  4143ae:	add    BYTE PTR [edi+0x17000000],bl
  4143b4:	mov    ?,WORD PTR [edi-0x1f]
  4143b7:	mov    ecx,0xe872f445
  4143bc:	add    DWORD PTR [ebx-0x27],0x4b74c67a
  4143c3:	je     0x4143f8
  4143c5:	clc    
  4143c6:	ficomp WORD PTR [edx+0x2972045b]
  4143cc:	rol    BYTE PTR [ebx-0x42],0xf7
  4143d0:	scas   al,BYTE PTR es:[edi]
  4143d1:	push   es
  4143d2:	mov    al,ds:0xb181bb30
  4143d7:	shl    DWORD PTR [eax*2+0x50beaa74],1
  4143de:	adc    esi,DWORD PTR [edi]
  4143e0:	sub    eax,0xba153f1e
  4143e5:	std    
  4143e6:	hlt    
  4143e7:	adc    al,0x15
  4143e9:	inc    eax
  4143ea:	jmp    0xbbb60b5a
  4143ef:	push   ds
  4143f0:	pop    es
  4143f1:	sub    DWORD PTR [edx-0xb02a97c],0x666a5180
  4143fb:	mov    al,0x14
  4143fd:	xchg   esp,eax
  4143fe:	sti    
  4143ff:	xor    BYTE PTR [edi],al
  414401:	sub    DWORD PTR [ecx],0xffffffeb
  414404:	add    al,dh
  414406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414407:	mov    cl,0xb8
  414409:	mov    WORD PTR [eax+ebx*2+0x48b4fd57],gs
  414410:	sub    eax,0xb9d69f1e
  414415:	std    
  414416:	aam    0x0
  414418:	add    BYTE PTR [eax],al
  41441a:	aam    0x14
  41441c:	inc    eax
  41441d:	jmp    0xea3e8092
  414422:	sub    eax,DWORD PTR [ebx]
  414424:	(bad)  
  414425:	lods   al,BYTE PTR ds:[esi]
  414426:	xor    al,BYTE PTR [edi]
  414428:	and    DWORD PTR [esi],0x4bba07
  41442e:	push   esi
  41442f:	dec    DWORD PTR [eax-0x75a693a1]
  414435:	inc    ebp
  414436:	cmp    al,0xcb
  414438:	mov    edi,0xfa896556
  41443d:	mov    ebx,DWORD PTR [ebx]
  41443f:	mov    DWORD PTR [ecx],ecx
  414441:	xor    al,0x7e
  414443:	inc    ecx
  414444:	add    BYTE PTR [edi-0x1c],dl
  414447:	push   0xffffffa0
  414449:	lods   al,BYTE PTR ds:[esi]
  41444a:	or     eax,DWORD PTR [edi+ebp*1]
  41444d:	leave  
  41444e:	repz xor DWORD PTR [eax-0x54],eax
  414452:	fld    DWORD PTR [edx]
  414454:	jno    0x41445c
  414456:	xchg   ebx,eax
  414457:	cmp    al,BYTE PTR [eax-0x54]
  41445a:	leave  
  41445b:	add    bh,BYTE PTR [edi-0x3f]
  41445e:	push   es
  41445f:	xor    ebp,0x5b690818
  414465:	pop    esi
  414466:	cdq    
  414467:	pop    esi
  414468:	xchg   esp,ebp
  41446a:	sbb    edx,DWORD PTR [eax+0x56]
  41446d:	mov    edx,edi
  41446f:	pop    es
  414470:	das    
  414471:	fisttp DWORD PTR [ecx-0x3b0cc836]
  414477:	sbb    eax,DWORD PTR [edi-0x3f7f2dbb]
  41447d:	or     al,0x0
  41447f:	add    BYTE PTR [eax],al
  414481:	adc    ebx,DWORD PTR [ebx-0xc]
  414484:	je     0x414445
  414486:	mov    bl,BYTE PTR [eax-0x4]
  414489:	adc    bl,BYTE PTR [edi*1+0x3713ca83]
  414490:	into   
  414491:	pop    eax
  414492:	jne    0x41441b
  414494:	(bad)  
  414495:	mov    eax,ds:0xb0571fc3
  41449a:	inc    ebx
  41449b:	push   0x37a00
  4144a0:	push   eax
  4144a1:	cmp    ecx,ebp
  4144a3:	cli    
  4144a4:	jmp    DWORD PTR [edi-0x1d]
  4144a7:	adc    DWORD PTR [eax-0xd],eax
  4144aa:	lods   eax,DWORD PTR ds:[esi]
  4144ab:	mov    ?,eax
  4144ad:	sbb    BYTE PTR ds:0x626a4d35,dl
  4144b3:	mov    ebp,0xf12f4039
  4144b8:	mov    BYTE PTR [esi-0x1439795b],bh
  4144be:	and    al,0x5f
  4144c0:	clc    
  4144c1:	retf   
  4144c2:	cmp    al,0xec
  4144c4:	ds repz lock mov esi,0x59c52776
  4144cc:	enter  0xc81c,0x85
  4144d0:	rcr    BYTE PTR [edi-0xfc17526],0xc5
  4144d7:	mov    edi,0x4a250743
  4144dc:	add    al,0x68
  4144de:	loop   0x41449f
  4144e0:	sub    DWORD PTR ds:0x42fcbd,0x11ff0000
  4144ea:	fimul  DWORD PTR [ecx+0x42faac2e]
  4144f0:	fistp  WORD PTR [ebx]
  4144f2:	or     al,0xb0
  4144f4:	repnz cwde 
  4144f6:	adc    dh,BYTE PTR [edx]
  4144f8:	mov    bl,0x99
  4144fa:	or     ecx,DWORD PTR [ecx-0x565657ca]
  414500:	mov    ebp,0xb332bf25
  414505:	int    0x5f
  414507:	pop    ecx
  414508:	mov    edx,0x52000be2
  41450d:	fs ins DWORD PTR es:[edi],dx
  41450f:	inc    ecx
  414510:	repz sub al,ah
  414513:	je     0x4144fc
  414515:	in     al,0x4
  414517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414518:	push   edi
  414519:	popa   
  41451a:	add    DWORD PTR [edx-0x70],ebp
  41451d:	pop    edi
  41451e:	add    ecx,ebp
  414520:	in     al,dx
  414521:	jle    0x414567
  414523:	lods   al,BYTE PTR ds:[esi]
  414524:	xor    BYTE PTR [edi],al
  414526:	out    0xc8,eax
  414528:	lock push 0x43
  41452b:	inc    ebp
  41452c:	repz jns 0x414538
  41452f:	inc    ebx
  414530:	repz imul eax,DWORD PTR [edi+0x68],0x544806b2
  414538:	lahf   
  414539:	dec    edx
  41453a:	out    0x64,eax
  41453c:	sub    DWORD PTR [ebx-0x56],0x3
  414540:	pop    esp
  414541:	jg     0x414517
  414543:	inc    ebx
  414544:	repz imul esp,DWORD PTR [edi-0x77f94d99],0x83
  41454f:	add    BYTE PTR [edi-0x19],al
  414552:	fs inc ebx
  414554:	imul   ebp,DWORD PTR [edx],0x4
  414557:	je     0x4145c0
  414559:	fadd   QWORD PTR [ebx-0xd]
  41455c:	imul   eax,edi,0x8806b267
  414562:	imul   esp,eax,0x46
  414565:	out    0x64,eax
  414567:	add    ebp,DWORD PTR [ebx+0x2a]
  41456a:	add    al,0x8c
  41456c:	xor    dh,ah
  41456e:	inc    ebx
  41456f:	repz imul esp,edi,0x48073266
  414576:	xchg   ebx,eax
  414577:	add    BYTE PTR [edi-0x19],al
  41457a:	fs jecxz 0x4145e8
  41457d:	sub    al,BYTE PTR [esp+eiz*2]
  414580:	call   0x66c7:0x69f343dc
  414587:	xor    al,BYTE PTR [edi]
  414589:	mov    BYTE PTR [ebx+0x64e74700],bl
  41458f:	jecxz  0x4145fc
  414591:	stos   BYTE PTR es:[edi],al
  414592:	add    edi,DWORD PTR [edx+ebp*2-0xc]
  414596:	inc    ebx
  414597:	repz imul esp,DWORD PTR [edi-0x77f8cd9a],0x46e087
  4145a2:	jmp    0xaae49cbe
  4145a7:	lock xchg ebp,eax
  4145a9:	pushf  
  4145aa:	cld    
  4145ab:	mov    al,0x6
  4145ad:	mov    eax,ds:0x47cd89
  4145b2:	dec    eax
  4145b3:	add    BYTE PTR [eax],al
  4145b5:	add    BYTE PTR [ecx+ebx*1+0x40],ch
  4145b9:	jmp    0xaae47c8d
  4145be:	lock xchg ebp,eax
  4145c0:	sbb    al,0xd7
  4145c2:	mov    al,0x6
  4145c4:	mov    eax,ds:0x47d569
  4145c9:	dec    eax
  4145ca:	push   eax
  4145cb:	sbb    eax,DWORD PTR [eax-0x17]
  4145ce:	xchg   ecx,eax
  4145cf:	xchg   esi,eax
  4145d0:	mov    ds:0x1095ef2a,eax
  4145d5:	push   DWORD PTR [eax-0x75765efa]
  4145db:	inc    edi
  4145dc:	add    BYTE PTR [eax-0x16bfe311],cl
  4145e2:	xchg   ecx,eax
  4145e3:	jbe    0x414588
  4145e5:	sub    dh,bh
  4145e7:	xchg   ebp,eax
  4145e8:	or     al,0xd7
  4145ea:	mov    al,0x6
  4145ec:	mov    eax,ds:0x465aa9
  4145f1:	dec    eax
  4145f2:	rcr    DWORD PTR [ebx],cl
  4145f4:	inc    eax
  4145f5:	jmp    0x2ae51d4b
  4145fa:	out    dx,eax
  4145fb:	xchg   ebx,eax
  4145fc:	xor    ah,bl
  4145fe:	xor    BYTE PTR [edi],al
  414600:	mov    eax,ds:0x465a89
  414605:	dec    eax
  414606:	dec    ebx
  414607:	sbb    eax,DWORD PTR [eax-0x17]
  41460a:	push   ecx
  41460b:	mov    bh,0xa3
  41460d:	stos   BYTE PTR es:[edi],al
  41460e:	lock xchg ebx,eax
  414610:	cmp    al,0xf4
  414612:	xor    BYTE PTR [edi],al
  414614:	mov    eax,ds:0x4616e9
  414619:	mov    BYTE PTR [eax],al
  41461b:	add    BYTE PTR [eax],al
  41461d:	mov    ebx,0x9a00401b
  414622:	sub    DWORD PTR [eax],edx
  414624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414625:	pop    ecx
  414626:	or     BYTE PTR [ebp+0x489f2c],bl
  41462c:	mov    ds:0x3f2cea,eax
  414631:	mov    ebx,0x5a401466
  414636:	sub    DWORD PTR [eax],esi
  414638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414639:	mov    DWORD PTR [eax],ecx
  41463b:	popf   
  41463c:	fcomp  DWORD PTR [esi+0x48]
  41463f:	add    BYTE PTR [ebx+0x3f2a9a],ah
  414645:	mov    ebx,0x4a4012ae
  41464a:	sub    DWORD PTR [eax-0x5a],edx
  41464d:	mov    DWORD PTR [eax],ecx
  41464f:	popf   
  414650:	sub    BYTE PTR [edi],ch
  414652:	dec    eax
  414653:	add    BYTE PTR [ebx+0x3f2cba],ah
  414659:	imul   esp,DWORD PTR [eax],0x14
  41465c:	inc    eax
  41465d:	or     ch,BYTE PTR [ecx]
  41465f:	jo     0x414607
  414661:	(bad)  [edx]
  414663:	popf   
  414664:	lods   al,BYTE PTR ds:[esi]
  414665:	push   ds
  414666:	dec    eax
  414667:	add    BYTE PTR [ebx+0x3f298a],ah
  41466d:	imul   edi,DWORD PTR [eax],0x14
  414670:	inc    eax
  414671:	fisubr DWORD PTR [eax]
  414673:	nop
  414674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414675:	sbb    DWORD PTR [ebx],ecx
  414677:	popf   
  414678:	cwde   
  414679:	fiadd  WORD PTR [edi+0x0]
  41467c:	mov    ds:0x3f2a2a,eax
  414681:	add    BYTE PTR [eax],al
  414683:	add    BYTE PTR [ebx],bh
  414685:	jl     0x41469b
  414687:	inc    eax
  414688:	fisubr DWORD PTR [eax]
  41468a:	mov    al,0xa6
  41468c:	or     DWORD PTR [ebx],ecx
  41468e:	popf   
  41468f:	enter  0x479e,0x0
  414693:	mov    ds:0x3f29da,eax
  414698:	jnp    0x414701
  41469a:	adc    al,0x40
  41469c:	repz popf 
  41469e:	(bad)  
  41469f:	ror    BYTE PTR [ebp+0x60],1
  4146a2:	add    DWORD PTR [edi+0x41d14b],ebx
  4146a8:	push   eax
  4146a9:	cmp    eax,0x7ef34163
  4146ae:	dec    ecx
  4146af:	adc    esi,DWORD PTR [ebx]
  4146b1:	sahf   
  4146b2:	(bad)  
  4146b3:	lock xchg ebp,eax
  4146b5:	pusha  
  4146b6:	add    DWORD PTR [edi+0x41b95b],ebx
  4146bc:	nop
  4146bd:	popf   
  4146be:	inc    cx
  4146c0:	repz ds int 0x14
  4146c4:	mov    bl,0x9d
  4146c6:	bound  edx,QWORD PTR [eax]
  4146c8:	mov    WORD PTR [eax+0x1],fs
  4146cb:	lahf   
  4146cc:	mov    bl,0xd2
  4146ce:	inc    ecx
  4146cf:	add    BYTE PTR [eax-0xcbe9943],dl
  4146d5:	jle    0x41467f
  4146d7:	adc    al,0xb3
  4146d9:	popf   
  4146da:	pusha  
  4146db:	xor    BYTE PTR [eax+eiz*8+0x3],dl
  4146df:	lahf   
  4146e0:	xor    edi,DWORD PTR [ecx-0x22afffbf]
  4146e6:	bound  eax,QWORD PTR [ecx+0x0]
  4146e9:	add    BYTE PTR [eax],al
  4146eb:	repz jle 0x414752
  4146ee:	adc    al,0xb3
  4146f0:	popf   
  4146f1:	pusha  
  4146f2:	push   eax
  4146f3:	dec    esp
  4146f4:	loopne 0x4146f9
  4146f6:	lahf   
  4146f7:	sub    esi,DWORD PTR [ebx+0x900041]
  4146fd:	arpl   WORD PTR [ecx-0xd],ax
  414700:	ds mov esp,0x60a03314
  414706:	jo     0x41469c
  414708:	fld    QWORD PTR [ebx]
  41470a:	lahf   
  41470b:	mov    ds:0x900041dc,eax
  414710:	and    BYTE PTR [ebx+0x41],ah
  414713:	repz ds push eax
  414716:	adc    esi,DWORD PTR [ebx]
  414718:	pop    es
  414719:	out    0x60,eax
  41471b:	sub    DWORD PTR [edx-0x56],0x3
  41471f:	jl     0x4146c4
  414721:	sti    
  414722:	inc    ebx
  414723:	xrelease xchg DWORD PTR gs:[ebp+0x32],esp
  414728:	pop    es
  414729:	mov    al,cl
  41472b:	fild   WORD PTR [esi-0x19]
  41472e:	pusha  
  41472f:	inc    ebx
  414730:	push   0xffffffaa
  414732:	add    edx,DWORD PTR [ebx+esi*2-0x2d]
  414736:	inc    ebx
  414737:	repz gs daa 
  41473a:	gs mov dl,0x6
  41473d:	dec    eax
  41473e:	add    al,0x0
  414740:	inc    edi
  414741:	out    0x60,eax
  414743:	inc    ebx
  414744:	push   0xffffffaa
  414746:	add    ebp,DWORD PTR [ebx+ecx*2-0x24]
  41474a:	inc    ebx
  41474b:	repz gs pop es
  41474e:	add    BYTE PTR gs:[eax],al
  414751:	add    BYTE PTR [edx-0x204bb7fa],dh
  414757:	inc    esi
  414758:	out    0x60,eax
  41475a:	and    ebp,DWORD PTR [edx+0x2a]
  41475d:	add    al,0x84
  41475f:	mov    bl,0xf3
  414761:	inc    ebx
  414762:	repz gs out 0x6b,eax
  414766:	mov    dl,0x6
  414768:	mov    BYTE PTR [edi+0x29e746e3],bl
  41476e:	retf   
  41476f:	push   ds
  414770:	xchg   DWORD PTR [edi-0x4e],esp
  414773:	push   es
  414774:	mov    dl,BYTE PTR [ebx]
  414776:	dec    ebx
  414777:	inc    esi
  414778:	out    0xab,eax
  41477a:	div    BYTE PTR [ebx+0x55b2bca6]
  414780:	xor    eax,0xf9732089
  414785:	inc    ebx
  414786:	repz push ds
  414788:	xor    esi,DWORD PTR [esi]
  41478a:	xor    eax,DWORD PTR [edi]
  41478c:	push   ds
  41478d:	mov    ebp,0x360f1e9d
  414792:	xor    eax,DWORD PTR [edi]
  414794:	add    BYTE PTR [esi],bl
  414796:	push   edx
  414797:	out    0xa7,eax
  414799:	sub    dh,bh
  41479b:	mov    bl,0xd6
  41479d:	rcr    esp,1
  41479f:	cmp    BYTE PTR [eax-0x17],al
  4147a2:	inc    edi
  4147a3:	push   0x7338130
  4147a8:	std    
  4147a9:	aaa    
  4147aa:	fdiv   DWORD PTR [edx]
  4147ac:	jbe    0x414757
  4147ae:	lock pop ebx
  4147b0:	mov    eax,ds:0x4808a9
  4147b5:	add    BYTE PTR ss:[eax],al
  4147b8:	add    BYTE PTR [esi-0x4f487be2],bl
  4147be:	push   es
  4147bf:	push   ebp
  4147c0:	dec    edx
  4147c1:	rcr    BYTE PTR [esi+0x41],0xe9
  4147c5:	lahf   
  4147c6:	fsubr  DWORD PTR [edx-0x14]
  4147c9:	or     bh,ah
  4147cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147cc:	stos   BYTE PTR es:[edi],al
  4147cd:	lock addr16 pusha 
  4147d0:	push   ecx
  4147d1:	mov    bl,0x6
  4147d3:	call   0xfdf4c410
  4147d8:	arpl   WORD PTR [eax],bx
  4147da:	mov    bl,cl
  4147dc:	jne    0x4147f3
  4147de:	mov    dl,0x33
  4147e0:	push   ecx
  4147e1:	xchg   edi,eax
  4147e2:	inc    edi
  4147e3:	add    BYTE PTR [edx+0x30],dh
  4147e6:	mov    bl,0x33
  4147e8:	xor    DWORD PTR [edi+0x2ce0047],eax
  4147ee:	dec    ecx
  4147ef:	test   al,0x2a
  4147f1:	out    dx,eax
  4147f2:	mov    bl,0x33
  4147f4:	add    DWORD PTR [edi+0x2b60047],ecx
  4147fa:	jmp    0x9f3872a6
  4147ff:	addr16 es out dx,eax
  414802:	push   es
  414803:	pop    esi
  414804:	jae    0x4147ba
  414806:	dec    esi
  414807:	sar    DWORD PTR [esp+eiz*2],0xa3
  41480b:	dec    edi
  41480c:	cmp    BYTE PTR [eax],ah
  41480e:	sbb    eax,0xee3f0007
  414813:	neg    DWORD PTR [eax+0x62]
  414816:	push   cs
  414817:	retf   0xca00
  41481a:	add    ebx,0x50
  414820:	sbb    eax,0xf1e807f6
  414825:	sbb    eax,0xcb17fffb
  41482a:	jno    0x414833
  41482c:	sub    BYTE PTR [ebx+edi*8+0x0],0x9a
  414831:	popa   
  414832:	pop    ds
  414833:	push   0xffffff80
  414835:	jg     0x4148b0
  414837:	clc    
  414838:	push   edx
  414839:	pop    esp
  41483a:	cld    
  41483b:	leave  
  41483c:	mov    al,BYTE PTR [edi+eax*4]
  41483f:	(bad)  
  414840:	mov    ch,BYTE PTR [ebp+0x71]
  414843:	or     BYTE PTR [edx],al
  414845:	jno    0x4147f3
  414847:	(bad)  
  414848:	std    
  414849:	test   eax,eax
  41484b:	jne    0x414892
  41484d:	sub    al,0xfe
  41484f:	call   FWORD PTR [edx+0x4]
  414852:	out    0x2,eax
  414854:	mov    esp,eax
  414856:	pop    ebx
  414857:	leave  
  414858:	or     BYTE PTR [edi],al
  41485a:	add    BYTE PTR [ebp-0x2f],dl
  41485d:	pop    esi
  41485e:	push   0x3a
  414860:	jo     0x414866
  414862:	dec    edi
  414863:	jmp    DWORD PTR [edi]
  414865:	mov    al,ds:0x810a4013
  41486a:	push   ecx
  41486b:	or     al,0x8f
  41486d:	inc    eax
  41486e:	add    al,0x83
  414870:	push   esi
  414871:	or     BYTE PTR [ecx-0x7ee73937],al
  414877:	rol    bh,cl
  414879:	add    eax,0x4ab744ba
  41487e:	add    BYTE PTR [ebp-0x17b000e9],cl
  414884:	add    BYTE PTR [eax],al
  414886:	add    BYTE PTR ds:0x57fffb22,ch
  41488c:	jbe    0x414902
  41488e:	adc    esi,ebx
  414890:	sbb    eax,0xd04629f7
  414895:	cmp    DWORD PTR [esi-0xe],0x8309d
  41489c:	pop    esi
  41489d:	pop    ds
  41489e:	xchg   DWORD PTR [eax],esi
  4148a0:	jo     0x414850
  4148a2:	cmp    bh,BYTE PTR [esi-0x24]
  4148a5:	icebp  
  4148a6:	sbb    BYTE PTR [ebp-0x1276182f],0x29
  4148ad:	int3   
  4148ae:	je     0x41487b
  4148b0:	sbb    eax,0xb80630bc
  4148b5:	mov    ecx,DWORD PTR [esi-0xe]
  4148b8:	sbb    eax,0xab0778bc
  4148bd:	xor    edi,0x890c731b
  4148c3:	cmp    eax,0xf3089045
  4148c8:	popf   
  4148c9:	scas   al,BYTE PTR es:[edi]
  4148ca:	adc    al,ah
  4148cc:	xor    al,0xb9
  4148ce:	mov    DWORD PTR ds:0xf306e105,edi
  4148d4:	popf   
  4148d5:	pop    edx
  4148d6:	jmp    0x670db5c9
  4148db:	push   0xffffffb5
  4148dd:	mov    es,WORD PTR [ebx-0x15]
  4148e0:	and    al,cl
  4148e2:	je     0x4148e0
  4148e4:	sbb    eax,0xb39e29f9
  4148e9:	cmp    DWORD PTR [eax+0x0],0x9df20000
  4148f0:	cs add al,0xe0
  4148f3:	pop    ebp
  4148f4:	stos   DWORD PTR es:[edi],eax
  4148f5:	push   es
  4148f6:	mov    ds:0x4fd0fc5,eax
  4148fb:	enter  0x8722,0xb0
  4148ff:	add    eax,0x9debc255
  414904:	dec    esi
  414905:	mov    edi,ebx
  414907:	and    DWORD PTR [eax-0x6cf88d08],esp
  41490d:	xor    bh,0x6
  414910:	out    0x54,eax
  414912:	push   0x4c
  414914:	fisttp WORD PTR [edx+esi*8+0x374c55fd]
  41491b:	push   ebp
  41491c:	push   0xffffffca
  41491e:	mov    esi,0xf3b97e71
  414923:	push   es
  414924:	push   ds
  414925:	mov    esp,DWORD PTR [edi]
  414927:	jecxz  0x4148fb
  414929:	mov    bl,BYTE PTR [edi]
  41492b:	jecxz  0x414923
  41492d:	and    edx,ebx
  41492f:	rcl    bl,0x3e
  414932:	sub    DWORD PTR ds:0xee07ce12,esp
  414938:	rol    BYTE PTR ds:0x4870251c,0xd7
  41493f:	push   cs
  414940:	out    dx,al
  414941:	jno    0x41496e
  414943:	cmp    al,0xcd
  414945:	mov    WORD PTR [ebx+0x53c2c53a],?
  41494b:	dec    DWORD PTR [esp+ecx*1-0x206483d5]
  414952:	add    BYTE PTR [eax],al
  414954:	add    ah,bh
  414956:	and    al,0x60
  414958:	dec    eax
  414959:	pop    ss
  41495a:	adc    DWORD PTR [esi],esp
  41495c:	inc    eax
  41495d:	ud2    
  41495f:	xchg   BYTE PTR [ebx],al
  414961:	repz pop es
  414963:	movaps xmm4,XMMWORD PTR [ebx-0x487518f9]
  41496a:	loop   0x41493e
  41496c:	cld    
  41496d:	cs (bad) 
  41496f:	push   0x44
  414971:	icebp  
  414972:	push   es
  414973:	out    0x53,eax
  414975:	or     edx,DWORD PTR [eax]
  414977:	clc    
  414978:	add    esi,ebx
  41497a:	sub    edx,0x4d0ebb86
  414980:	lea    esi,[ebx+0x67ac1840]
  414986:	push   edi
  414987:	add    al,ch
  414989:	lock test DWORD PTR [ebp+eax*1-0x1],eax
  41498e:	out    dx,eax
  41498f:	vsubss xmm5,xmm1,xmm1
  414993:	add    ecx,ebp
  414995:	lock push esi
  414997:	call   0x482a2d
  41499c:	mov    ss,WORD PTR [ebx+eiz*8]
  41499f:	setno  BYTE PTR [ebp+0x17]
  4149a3:	add    cl,ch
  4149a5:	addr16 pop es
  4149a7:	imul   cl
  4149a9:	icebp  
  4149aa:	xor    al,BYTE PTR [ebx]
  4149ac:	push   0xffffffb0
  4149ae:	add    ch,cl
  4149b0:	jmp    0x414959
  4149b2:	ins    DWORD PTR es:[edi],dx
  4149b3:	mov    esi,DWORD PTR [edx+0x56503c94]
  4149b9:	add    BYTE PTR [eax],al
  4149bb:	add    ah,bl
  4149bd:	loop   0x4149d6
  4149bf:	cdq    
  4149c0:	out    dx,eax
  4149c1:	and    BYTE PTR [edi+eiz*4],al
  4149c4:	dec    eax
  4149c5:	push   ebp
  4149c6:	(bad)  
  4149c7:	call   0xe701ccbc
  4149cc:	in     al,dx
  4149cd:	mov    al,ds:0x7ff0e8ff
  4149d2:	add    esi,esi
  4149d4:	jecxz  0x414a1c
  4149d6:	dec    esp
  4149d7:	int3   
  4149d8:	call   0x484f:0x1ce900ab
  4149df:	xchg   ebp,eax
  4149e0:	fisubr WORD PTR [ebx+0x7feccd74]
  4149e6:	pop    esp
  4149e7:	(bad)
  4149ea:	inc    ebx
  4149eb:	cwde   
  4149ec:	icebp  
  4149ed:	push   es
  4149ee:	out    0x24,eax
  4149f0:	icebp  
  4149f1:	push   es
  4149f2:	add    BYTE PTR [edx-0x1d],dh
  4149f5:	loop   0x414a06
  4149f7:	push   ebx
  4149f8:	out    dx,eax
  4149f9:	and    bh,bh
  4149fb:	arpl   WORD PTR [ebx+0x783914e2],si
  414a01:	lods   al,BYTE PTR ds:[esi]
  414a02:	call   0xfd858907
  414a07:	dec    DWORD PTR [esi+0x5a1c74c2]
  414a0d:	out    dx,eax
  414a0e:	and    ecx,DWORD PTR [edi]
  414a10:	iret   
  414a11:	test   DWORD PTR [edi],0x8d438256
  414a17:	push   DWORD PTR [ebp+0x60]
  414a1a:	or     DWORD PTR [eax+0x40ca6e6],eax
  414a20:	add    BYTE PTR [eax],al
  414a22:	add    bh,bl
  414a24:	lods   al,BYTE PTR ds:[esi]
  414a25:	push   ebx
  414a26:	call   0x3cdb72
  414a2b:	bound  esp,QWORD PTR ds:0x899a0152
  414a31:	dec    esp
  414a32:	and    al,0xca
  414a34:	jne    0x414a1b
  414a36:	test   DWORD PTR [ebx-0x7495fff8],ecx
  414a3c:	jne    0x414a4f
  414a3e:	cld    
  414a3f:	mov    cl,BYTE PTR [eax+0x0]
  414a42:	push   eax
  414a43:	xor    eax,0x4a110016
  414a48:	or     BYTE PTR [edx+0x0],ch
  414a4b:	pop    es
  414a4c:	xchg   DWORD PTR [esp+edx*4],esp
  414a4f:	pop    edx
  414a50:	or     BYTE PTR [eax],al
  414a52:	push   eax
  414a53:	xor    bh,BYTE PTR [edi+0x45]
  414a56:	aaa    
  414a57:	inc    ebx
  414a58:	pusha  
  414a59:	and    edi,DWORD PTR [esi-0xb]
  414a5c:	jae    0x4149e7
  414a5e:	test   BYTE PTR [esi],bh
  414a60:	cwde   
  414a61:	add    BYTE PTR [eax],al
  414a63:	pop    edx
  414a64:	pop    eax
  414a65:	call   0x449932
  414a6a:	test   BYTE PTR [edx],cl
  414a6c:	add    al,0x84
  414a6e:	dec    ebp
  414a6f:	sbb    ecx,DWORD PTR [eax]
  414a71:	add    BYTE PTR [edx+0x1b],ch
  414a74:	jg     0x414a12
  414a76:	and    al,0x16
  414a78:	or     BYTE PTR [eax],al
  414a7a:	add    BYTE PTR [edx-0x49],al
  414a7d:	mov    eax,0x7d9df300
  414a82:	shl    ah,0x21
  414a85:	(bad)  
  414a87:	add    BYTE PTR [eax],al
  414a89:	add    ah,bh
  414a8b:	popf   
  414a8c:	mov    dh,0x13
  414a8e:	or     edx,ecx
  414a90:	inc    ecx
  414a91:	add    BYTE PTR [esi+0x5d],dh
  414a94:	push   es
  414a95:	xchg   ebx,eax
  414a96:	das    
  414a97:	add    al,BYTE PTR ds:0x55a5b831
  414a9d:	and    al,0xe4
  414a9f:	pushf  
  414aa0:	adc    BYTE PTR [edi+0x6a019df3],0x3f
  414aa7:	dec    ebx
  414aa8:	sub    eax,0xabe60f24
  414aad:	(bad)  
  414aae:	lods   al,BYTE PTR ds:[esi]
  414aaf:	popf   
  414ab0:	add    DWORD PTR [ebx+0x289b977],ecx
  414ab6:	repz popf 
  414ab8:	push   ecx
  414ab9:	push   0xfffffff7
  414abb:	push   ebp
  414abc:	fisub  DWORD PTR [ebp-0xe]
  414abf:	popf   
  414ac0:	jge    0x414a82
  414ac2:	pop    es
  414ac3:	fmul   DWORD PTR [edx+0x7d4b23c6]
  414ac9:	and    al,0x6f
  414acb:	lahf   
  414acc:	add    DWORD PTR [eax],eax
  414ace:	and    ecx,DWORD PTR [esi-0x61241557]
  414ad4:	add    DWORD PTR [ebx+0x6a207133],eax
  414ada:	mov    bh,0xc3
  414adc:	dec    ebx
  414add:	mov    ebp,DWORD PTR [edi-0x5caeba3f]
  414ae3:	adc    al,0x10
  414ae5:	xor    al,0xdd
  414ae7:	pop    ebp
  414ae8:	add    DWORD PTR [ecx-0x7b774ec9],eax
  414aee:	add    BYTE PTR [eax],al
  414af0:	add    BYTE PTR [edi],cl
  414af2:	dec    esi
  414af3:	add    DWORD PTR [eax],eax
  414af5:	repz es cmp eax,0x3d4ac324
  414afc:	and    al,0xfb
  414afe:	push   es
  414aff:	aaa    
  414b00:	xchg   DWORD PTR [edi-0x5dabd51e],ebp
  414b06:	push   edi
  414b07:	fs or  bh,0x8e
  414b0b:	jmp    0x70983e13
  414b10:	xor    bh,cl
  414b12:	dec    edx
  414b13:	iret   
  414b14:	xor    bl,BYTE PTR [edi+eax*1-0x19]
  414b18:	jle    0x414acd
  414b1a:	xor    eax,DWORD PTR ds:0xe7166b2c
  414b20:	add    edx,esi
  414b22:	xor    eax,ebx
  414b24:	pop    ss
  414b25:	into   
  414b26:	adc    al,0xf7
  414b28:	adc    BYTE PTR [ebx],dh
  414b2a:	pop    es
  414b2b:	mov    ?,WORD PTR [eax]
  414b2d:	pop    ss
  414b2e:	or     esi,DWORD PTR [edx-0x11]
  414b31:	push   esp
  414b32:	adc    eax,0xd1ae0427
  414b37:	jbe    0x414b69
  414b39:	iret   
  414b3a:	push   cs
  414b3b:	outs   dx,BYTE PTR ds:[esi]
  414b3c:	into   
  414b3d:	mov    ch,0x43
  414b3f:	or     eax,DWORD PTR ds:0x50ba5594
  414b45:	sbb    eax,DWORD PTR [esi]
  414b47:	test   DWORD PTR [ebx],0xc3f4a9f3
  414b4d:	loop   0x414b95
  414b4f:	out    0x83,eax
  414b51:	mul    edx
  414b53:	in     eax,dx
  414b54:	add    al,BYTE PTR [eax]
  414b56:	add    BYTE PTR [eax],al
  414b58:	loopne 0x414ba3
  414b5a:	ss jo  0x414b6c
  414b5d:	dec    edi
  414b5e:	jmp    0x6bbd3e66
  414b63:	loopne 0x414bbd
  414b65:	pop    es
  414b66:	out    0x3,eax
  414b68:	dec    esi
  414b69:	jae    0x414b36
  414b6b:	mov    bh,0xf3
  414b6d:	push   es
  414b6e:	out    0x8a,eax
  414b70:	mov    bh,0xe2
  414b72:	mov    dh,0x86
  414b74:	scas   eax,DWORD PTR es:[edi]
  414b75:	loop   0x414b2d
  414b77:	push   ebx
  414b78:	xor    eax,DWORD PTR cs:[eax]
  414b7b:	int    0xfc
  414b7d:	ret    
  414b7e:	inc    esp
  414b7f:	lds    esp,FWORD PTR [esi+edx*1]
  414b82:	in     eax,dx
  414b83:	sub    bh,ch
  414b85:	ret    
  414b86:	inc    esp
  414b87:	add    eax,0x2b4631b7
  414b8c:	out    dx,eax
  414b8d:	ret    
  414b8e:	inc    esp
  414b8f:	add    eax,0x28ee4db3
  414b94:	out    dx,eax
  414b95:	ret    
  414b96:	inc    esp
  414b97:	add    eax,0x28ee2a3f
  414b9c:	out    dx,eax
  414b9d:	ret    
  414b9e:	inc    esp
  414b9f:	add    eax,0x28eebf2b
  414ba4:	out    dx,eax
  414ba5:	ret    
  414ba6:	inc    esp
  414ba7:	lds    esp,FWORD PTR [eax]
  414ba9:	scas   al,BYTE PTR es:[edi]
  414baa:	out    dx,al
  414bab:	sub    bh,ch
  414bad:	ret    
  414bae:	inc    esp
  414baf:	lds    ebp,FWORD PTR [ebx+edx*1]
  414bb2:	in     eax,dx
  414bb3:	sub    bh,ch
  414bb5:	sahf   
  414bb6:	or     BYTE PTR [esi-0x17955499],0x0
  414bbd:	add    BYTE PTR [eax],al
  414bbf:	ins    DWORD PTR es:[edi],dx
  414bc0:	and    BYTE PTR [ebp*2+0x510006f0],0xe1
  414bc8:	push   0x0
  414bca:	jmp    0x6249994a
  414bcf:	aam    0xe2
  414bd1:	cmovno ebp,esi
  414bd4:	cmp    edi,edi
  414bd6:	call   0xd5657e46
  414bdb:	cwde   
  414bdc:	std    
  414bdd:	dec    esi
  414bde:	call   0xbc29a3d3
  414be3:	pop    ss
  414be4:	lods   al,BYTE PTR ds:[esi]
  414be5:	std    
  414be6:	(bad)  
  414be7:	mov    esi,0x7bc2bff7
  414bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bed:	pop    ebx
  414bee:	sub    eax,DWORD PTR [ecx+ebp*4+0x54]
  414bf2:	bound  edx,QWORD PTR [ecx+ebp*1+0x73200ec]
  414bf9:	add    BYTE PTR [eax],al
  414bfb:	mov    DWORD PTR [ebx],edi
  414bfd:	mov    DWORD PTR [ebp-0x1e],esi
  414c00:	pop    ebp
  414c01:	xlat   BYTE PTR ds:[ebx]
  414c02:	push   0x5d87050b
  414c07:	and    bl,bh
  414c09:	jle    0x414c86
  414c0b:	fiadd  WORD PTR [edx]
  414c0d:	mov    BYTE PTR [ebp+0x1d],0x2
  414c11:	or     eax,DWORD PTR [esp+ebx*4+0x7f000003]
  414c18:	inc    ecx
  414c19:	sbb    BYTE PTR [ecx-0xac74e9],cl
  414c1f:	daa    
  414c20:	mov    esp,DWORD PTR [esi-0x75]
  414c23:	add    BYTE PTR [eax],al
  414c25:	add    BYTE PTR [ecx],cl
  414c27:	jmp    0x25d5013
  414c2c:	add    BYTE PTR [ebx-0x786d56e],cl
  414c32:	pop    ecx
  414c33:	je     0x414c30
  414c35:	jne    0x414bed
  414c37:	outs   dx,BYTE PTR ds:[esi]
  414c38:	inc    DWORD PTR [eax]
  414c3a:	mov    ebp,0x9a016380
  414c3f:	add    al,0x68
  414c41:	mov    cl,cl
  414c43:	add    al,0x0
  414c45:	jmp    DWORD PTR [edi+0x58]
  414c48:	mov    dl,0x43
  414c4a:	mov    dh,BYTE PTR [ebp+0x11]
  414c4d:	adc    BYTE PTR [ecx-0x67c2ffbc],cl
  414c53:	add    eax,DWORD PTR [eax]
  414c55:	add    BYTE PTR [ebx],dh
  414c57:	inc    edx
  414c58:	std    
  414c59:	dec    DWORD PTR [edx+0x5c4de84d]
  414c5f:	add    al,0x0
  414c61:	push   edi
  414c62:	mov    dl,0xfd
  414c64:	or     eax,0xb1874a00
  414c69:	enter  0x740f,0xfb
  414c6d:	call   0x417b18
  414c72:	repz and al,BYTE PTR [edi-0x4f06c134]
  414c79:	push   eax
  414c7a:	sub    cx,bp
  414c7d:	cmp    DWORD PTR [ebx],0x60f999a9
  414c83:	mov    cl,0xb2
  414c85:	mov    BYTE PTR [esi+0xc08597],dh
  414c8b:	add    BYTE PTR [eax],al
  414c8d:	lahf   
  414c8e:	adc    edi,DWORD PTR [ebp+0x1]
  414c91:	or     al,0x53
  414c93:	ror    BYTE PTR [ecx-0x11a4682],1
  414c99:	in     eax,dx
  414c9a:	pop    ecx
  414c9c:	cmc    
  414c9d:	sbb    esp,DWORD PTR [ebp-0x5dc7743f]
  414ca3:	out    0xbe,al
  414ca5:	inc    ebx
  414ca6:	or     DWORD PTR [edi+edi*8-0x2c],esi
  414caa:	dec    eax
  414cab:	jge    0x414cac
  414cad:	aam    0x32
  414caf:	cmp    ah,bl
  414cb1:	jnp    0x414c95
  414cb3:	mov    cl,0xe8
  414cb5:	mov    DWORD PTR [edx+esi*4-0x3],ecx
  414cb9:	jp     0x414ce2
  414cbb:	add    al,0x0
  414cbd:	repz xor cl,BYTE PTR [eax-0x4dd75138]
  414cc4:	(bad)  
  414cc5:	repz popf 
  414cc7:	inc    ecx
  414cc8:	inc    edi
  414cc9:	es aaa 
  414ccb:	jmp    0x85f1e21a
  414cd0:	shl    bl,0x9d
  414cd3:	add    DWORD PTR [edx-0xd],ebp
  414cd6:	ret    
  414cd7:	add    DWORD PTR [ebx+0x31515636],ecx
  414cdd:	mov    bl,0x55
  414cdf:	adc    cl,BYTE PTR [ebp-0xe]
  414ce2:	popf   
  414ce3:	out    dx,al
  414ce4:	inc    edx
  414ce5:	imul   esp,DWORD PTR [eax-0x620c5778],0x1
  414cec:	mov    esi,edx
  414cee:	push   es
  414cef:	pop    ds
  414cf0:	sbb    eax,DWORD PTR [eax]
  414cf2:	add    BYTE PTR [eax],al
  414cf4:	add    esi,DWORD PTR [edx]
  414cf6:	out    0x3,eax
  414cf8:	fld    DWORD PTR [ecx]
  414cfa:	fs dec eax
  414cfc:	inc    ebx
  414cfd:	push   esi
  414cfe:	dec    DWORD PTR [edx]
  414d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d01:	add    eax,0x323387e7
  414d06:	loopne 0x414d31
  414d08:	jb     0x414d33
  414d0a:	test   DWORD PTR [edi],0x7ade14a0
  414d10:	mov    al,0xb4
  414d12:	ds jg  0x414cbd
  414d15:	call   0x7ce7:0x57a6fcf
  414d1c:	cwde   
  414d1d:	inc    cl
  414d1f:	push   es
  414d20:	rol    esi,0x6b
  414d23:	les    esp,FWORD PTR [edi+0x19]
  414d26:	out    dx,al
  414d27:	jns    0x414d59
  414d29:	fwait
  414d2a:	pop    ds
  414d2b:	cmp    al,0x67
  414d2d:	adc    DWORD PTR [edi],ebx
  414d2f:	cmp    al,0x60
  414d31:	cmp    ebp,DWORD PTR [ebp-0x6df731b9]
  414d37:	inc    edx
  414d38:	dec    ebp
  414d39:	mov    dl,BYTE PTR [esi+esi*4]
  414d3c:	neg    DWORD PTR [ebx]
  414d3e:	es jg  0x414d71
  414d41:	pop    edi
  414d42:	(bad)  
  414d43:	popf   
  414d44:	push   ss
  414d45:	or     bh,ah
  414d47:	sbb    eax,0xb0df30f7
  414d4c:	loopne 0x414cf4
  414d4e:	inc    edx
  414d4f:	inc    ebp
  414d50:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d52:	cld    
  414d53:	pop    es
  414d54:	loop   0x414d9c
  414d56:	out    0x7c,eax
  414d58:	add    BYTE PTR [eax],al
  414d5a:	add    BYTE PTR [ebx-0x2bc7a274],al
  414d60:	xchg   ecx,eax
  414d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d62:	lahf   
  414d63:	or     DWORD PTR [edi],eax
  414d65:	popf   
  414d66:	jp     0x414d75
  414d68:	xchg   edx,eax
  414d69:	out    0x1b,eax
  414d6b:	adc    al,0xf4
  414d6d:	jmp    DWORD PTR [edi-0x16ffd110]
  414d73:	out    dx,al
  414d74:	push   es
  414d75:	mov    esp,DWORD PTR [eax+ebx*8+0x68e5468d]
  414d7c:	fldenv [edi-0x18]
  414d7f:	lock mov al,al
  414d82:	xchg   esp,eax
  414d83:	jmp    0xfda4:0xc27e83c
  414d8a:	(bad)  
  414d8b:	fnsave [edx-0x5c03e018]
  414d91:	std    
  414d92:	imul   eax,esp,0x74f600a3
  414d98:	inc    edi
  414d99:	std    
  414d9a:	fiadd  WORD PTR [ebx-0x70]
  414d9d:	jae    0x414d70
  414d9f:	pop    eax
  414da0:	ds dec ebp
  414da2:	call   0xc6bcd497
  414da7:	lock sbb DWORD PTR [edi],eax
  414daa:	mov    bh,0xef
  414dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dad:	push   cs
  414dae:	ins    BYTE PTR es:[edi],dx
  414daf:	push   cs
  414db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414db1:	std    
  414db2:	scas   al,BYTE PTR es:[edi]
  414db3:	inc    ebx
  414db4:	xchg   edx,eax
  414db5:	jae    0x414e18
  414db7:	push   0xf0e8685a
  414dbc:	mov    ds:0x3971,eax
  414dc1:	add    BYTE PTR [edi-0x3e],bl
  414dc4:	sahf   
  414dc5:	call   0x682985ba
  414dca:	or     eax,0xba72fda4
  414dcf:	scas   al,BYTE PTR es:[edi]
  414dd0:	xor    ecx,DWORD PTR [esi]
  414dd2:	lock push es
  414dd4:	pop    esi
  414dd5:	mov    edx,0x2bc73fb0
  414dda:	hlt    
  414ddb:	push   es
  414ddc:	push   ebx
  414ddd:	jb     0x414e43
  414ddf:	xchg   esp,ebp
  414de1:	frstor [edi]
  414de3:	cmp    eax,0x9077c355
  414de8:	jae    0x414dea
  414dea:	es push edx
  414dec:	call   0x4b5ca6
  414df1:	mov    ebx,DWORD PTR [edi+0x66580a1]
  414df7:	or     dh,dh
  414df9:	push   es
  414dfa:	pop    ebx
  414dfb:	add    eax,DWORD PTR [edx]
  414dfd:	pop    ebx
  414dfe:	pop    esi
  414dff:	stc    
  414e00:	imul   edx,DWORD PTR [eax],0x50044fd7
  414e06:	xchg   edi,eax
  414e07:	hlt    
  414e08:	sti    
  414e09:	mov    ebx,ecx
  414e0b:	and    DWORD PTR [eax-0x768ada75],0xfb3e427e
  414e15:	adc    eax,0x3ffba2
  414e1a:	retf   0x893d
  414e1d:	jge    0x414e3d
  414e1f:	and    DWORD PTR [edi-0x4de6f18],edi
  414e25:	inc    DWORD PTR [eax]
  414e27:	add    BYTE PTR [eax],al
  414e29:	mov    ecx,0xa4a4687
  414e2e:	xchg   BYTE PTR [ecx-0x8],bh
  414e31:	popa   
  414e32:	enter  0x7be8,0x51
  414e36:	je     0x414e33
  414e38:	call   FWORD PTR [edi]
  414e3a:	jae    0x414dc5
  414e3c:	inc    ebp
  414e3d:	xchg   BYTE PTR [ecx+esi*2-0xc],dh
  414e41:	push   edi
  414e42:	(bad)  
  414e43:	mov    edi,edi
  414e45:	fist   WORD PTR [esi+0x50]
  414e48:	push   0xffffffaa
  414e4a:	push   ecx
  414e4b:	call   0xfbb5394c
  414e50:	or     DWORD PTR [esi-0x5],0x7e
  414e54:	clc    
  414e55:	lds    esp,FWORD PTR [ebp+0x88ab682]
  414e5b:	add    BYTE PTR [ebx+0x16a3add],cl
  414e61:	mov    ds:0xf343ac50,al
  414e66:	lods   eax,DWORD PTR ds:[esi]
  414e67:	scas   al,BYTE PTR es:[edi]
  414e68:	adc    ebx,DWORD PTR [ebx]
  414e6a:	lahf   
  414e6b:	inc    ecx
  414e6c:	add    BYTE PTR [edx+0x73],bh
  414e6f:	stc    
  414e70:	xor    BYTE PTR [ebx],0xb5
  414e73:	test   DWORD PTR [ecx-0x2fe520d],ebx
  414e79:	(bad)  
  414e7a:	mov    ch,0x14
  414e7c:	inc    eax
  414e7d:	rep stos BYTE PTR es:[edi],al
  414e7f:	jbe    0x414e81
  414e81:	rep lods eax,DWORD PTR ds:[esi]
  414e83:	cmp    BYTE PTR [ebx],cl
  414e85:	cmp    al,0x83
  414e87:	stc    
  414e88:	cld    
  414e89:	fimul  WORD PTR [ebp+0x12]
  414e8c:	inc    eax
  414e8d:	add    BYTE PTR [eax],al
  414e8f:	add    bl,dh
  414e91:	xor    BYTE PTR [edi],ah
  414e93:	or     bl,dh
  414e95:	xor    BYTE PTR [edi],ch
  414e97:	or     bl,dh
  414e99:	and    DWORD PTR [edx],ebp
  414e9b:	push   0xffffffbb
  414e9d:	xchg   ecx,edi
  414e9f:	cld    
  414ea0:	(bad)  
  414ea1:	int    0x5a
  414ea3:	inc    ecx
  414ea4:	repz les ebx,FWORD PTR [eax]
  414ea7:	add    al,0xe0
  414ea9:	in     eax,dx
  414eaa:	add    ecx,DWORD PTR [ecx+0x74ae2afb]
  414eb0:	dec    esi
  414eb1:	sbb    DWORD PTR [eax],edx
  414eb3:	xor    ch,bh
  414eb5:	in     eax,dx
  414eb6:	add    ebp,DWORD PTR [edx+0x3]
  414eb9:	sub    eax,DWORD PTR [ebx+0x4]
  414ebc:	inc    ebx
  414ebd:	inc    ebx
  414ebe:	inc    esi
  414ebf:	add    al,0x23
  414ec1:	ins    DWORD PTR es:[edi],dx
  414ec2:	ror    BYTE PTR [ecx-0x79160813],cl
  414ec8:	hlt    
  414ec9:	xor    bl,al
  414ecb:	adc    al,0x66
  414ecd:	in     al,dx
  414ece:	pop    ss
  414ecf:	push   esi
  414ed0:	inc    ebx
  414ed1:	(bad)  
  414ed2:	ror    BYTE PTR [ecx-0x3b7d69d2],cl
  414ed8:	sti    
  414ed9:	adc    eax,DWORD PTR [ecx+0x7cae277d]
  414edf:	inc    ebp
  414ee0:	and    eax,DWORD PTR [edi]
  414ee2:	fucomi st,st(0)
  414ee4:	add    al,0x24
  414ee6:	inc    DWORD PTR [ebx]
  414ee8:	pop    es
  414ee9:	add    al,0xcd
  414eeb:	xor    dh,0x50
  414eee:	out    0x37,eax
  414ef0:	or     edi,DWORD PTR [edi+ecx*8]
  414ef3:	add    al,BYTE PTR [eax]
  414ef5:	add    BYTE PTR [eax],al
  414ef7:	and    eax,DWORD PTR [esi-0x19]
  414efa:	sbb    esi,ebx
  414efc:	push   es
  414efd:	fild   WORD PTR [ebx]
  414eff:	dec    ebx
  414f00:	add    BYTE PTR [esi+0x2789f303],bh
  414f06:	aaa    
  414f07:	out    dx,eax
  414f08:	push   esi
  414f09:	call   0xff7d32a8
  414f0e:	daa    
  414f0f:	(bad)  
  414f10:	mov    ds:0xea0ae0e,eax
  414f15:	sets   BYTE PTR [eax+0x5cf1e705]
  414f1c:	inc    ebx
  414f1d:	xchg   ebp,eax
  414f1e:	dec    edx
  414f1f:	sub    al,0xc8
  414f21:	jecxz  0x414f26
  414f23:	mov    al,ds:0xf81d38f
  414f28:	sahf   
  414f29:	push   0xffffffa0
  414f2b:	(bad)  
  414f2c:	aaa    
  414f2d:	cmp    eax,0x3f088955
  414f32:	jecxz  0x414f35
  414f34:	jecxz  0x414f70
  414f36:	pushf  
  414f37:	mov    al,ds:0x74adbe20
  414f3c:	dec    ebx
  414f3d:	or     edx,DWORD PTR [eax]
  414f3f:	jo     0x414f08
  414f41:	xor    al,0x6
  414f43:	xor    esi,DWORD PTR [eax+0x6f30316]
  414f49:	adc    DWORD PTR [ebx+0x1492fcbe],esi
  414f4f:	xor    eax,DWORD PTR [edi]
  414f51:	aaa    
  414f52:	lods   eax,DWORD PTR ds:[esi]
  414f53:	add    BYTE PTR [edi],al
  414f55:	fadd   DWORD PTR [ebx-0xd]
  414f58:	scas   al,BYTE PTR es:[edi]
  414f59:	cdq    
  414f5a:	sub    al,BYTE PTR [eax]
  414f5c:	add    BYTE PTR [eax],al
  414f5e:	sahf   
  414f5f:	mov    ds:0x14af6d00,al
  414f64:	test   BYTE PTR [ecx],ah
  414f66:	lock push es
  414f68:	add    BYTE PTR [eax-0x72],dl
  414f6b:	mov    eax,ds:0x52fbe9fd
  414f70:	and    al,0xf9
  414f72:	cmc    
  414f73:	cmp    ah,BYTE PTR [esi*8+0x46a94f88]
  414f7a:	xchg   esi,eax
  414f7b:	mov    al,BYTE PTR [ebp+eax*1-0xd]
  414f7f:	xchg   eax,edi
  414f81:	ss push esi
  414f83:	xchg   BYTE PTR [ecx+ebp*8-0x727ef910],ah
  414f8a:	dec    esp
  414f8b:	add    al,BYTE PTR [eax]
  414f8d:	xchg   ebx,eax
  414f8e:	mov    al,ds:0x18cd448d
  414f93:	xor    BYTE PTR [eax],al
  414f95:	mov    ecx,0xe8cab188
  414f9a:	lock (bad) 
  414f9c:	jl     0x414f63
  414f9e:	adc    BYTE PTR [edi+0x2373e5c4],al
  414fa4:	and    al,0xdd
  414fa6:	hlt    
  414fa7:	adc    eax,0xa2ffe67a
  414fac:	adc    esp,DWORD PTR [ecx-0x1f]
  414faf:	inc    esi
  414fb0:	add    BYTE PTR [edx+0x48],ch
  414fb3:	out    0x72,eax
  414fb5:	cmp    al,0x6a
  414fb7:	fmul   QWORD PTR [edx+0x31e5db35]
  414fbd:	mov    ds:0x198b095a,al
  414fc2:	add    BYTE PTR [eax],al
  414fc4:	add    BYTE PTR [edi+0x7e0fa86],bh
  414fca:	or     ecx,DWORD PTR [edx-0x75079455]
  414fd0:	cmp    DWORD PTR [esi-0x79],ecx
  414fd3:	cli    
  414fd4:	in     al,dx
  414fd5:	dec    DWORD PTR [edx]
  414fd7:	add    al,0xa0
  414fd9:	mov    ecx,DWORD PTR [ebx+ecx*4]
  414fdc:	add    BYTE PTR [edx],cl
  414fde:	xchg   esp,eax
  414fdf:	cmp    dl,0x97
  414fe2:	ficom  DWORD PTR [edx]
  414fe4:	add    al,0x33
  414fe6:	mov    dl,bh
  414fe8:	je     0x414f7f
  414fea:	popf   
  414feb:	inc    BYTE PTR [eax-0x18]
  414fee:	iret   
  414fef:	out    0x7,eax
  414ff1:	retf   0x465
  414ff4:	mov    BYTE PTR [ebx-0x4eba02ea],cl
  414ffa:	retf   0xc084
  414ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ffe:	mov    ebp,0xa9a7db81
  415003:	les    eax,FWORD PTR [esi+eiz*8-0x56]
  415007:	(bad)  
  415008:	call   FWORD PTR [edx+0x5]
  41500b:	sti    
  41500c:	ja     0x415050
  41500e:	push   ds
  41500f:	jae    0x41501d
  415011:	fstp   st(2)
  415013:	add    ecx,DWORD PTR [ebp-0x17c65682]
  415019:	xchg   ebp,eax
  41501a:	ins    DWORD PTR es:[edi],dx
  41501b:	sti    
  41501c:	call   FWORD PTR [edi+0x7a202449]
  415022:	jge    0x414fe9
  415024:	std    
  415025:	sbb    eax,0x44876d
  41502a:	add    BYTE PTR [eax],al
  41502c:	mov    eax,ss:0x6da16be5
  415032:	sti    
  415033:	(bad)  
  415034:	(bad)  
  415035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415036:	or     eax,0x76d3250
  41503b:	add    edx,ebx
  41503d:	xchg   eax,eax
  41503f:	xorps  xmm3,XMMWORD PTR [ebx+0x1e9dfffc]
  415046:	inc    esp
  415047:	and    al,0xc2
  415049:	xor    al,0xe8
  41504b:	test   DWORD PTR [eax-0x4d74fffc],esp
  415051:	xchg   bh,dl
  415053:	je     0x41506a
  415055:	and    BYTE PTR [esp-0xd],bh
  415059:	xchg   ebp,eax
  41505a:	cmp    ch,0x27
  41505d:	mov    bh,0x7e
  41505f:	icebp  
  415060:	jo     0x415074
  415062:	loopne 0x415083
  415064:	repz repz push ebx
  415067:	mov    ebp,DWORD PTR [edi]
  415069:	rcr    cl,cl
  41506b:	imul   esi,ebx,0xb91e9bfd
  415071:	scas   eax,DWORD PTR es:[edi]
  415072:	add    DWORD PTR [ecx+0x3a1bb2b7],eax
  415078:	data16 jb 0x415058
  41507b:	aaa    
  41507c:	lds    ebx,FWORD PTR [ebp-0x56]
  41507f:	adc    esp,DWORD PTR [ebx]
  415081:	rol    BYTE PTR [ecx+0x0],0x70
  415085:	jmp    0x4fe4:0x11af8af7
  41508c:	pop    ebx
  41508d:	int    0xa8
  41508f:	std    
  415090:	add    BYTE PTR [eax],al
  415092:	add    BYTE PTR [ebp+ebp*1-0x3e],al
  415096:	cmp    ch,BYTE PTR [edx+edi*2+0x104b51bc]
  41509d:	push   ds
  41509e:	std    
  41509f:	sub    al,0x86
  4150a1:	icebp  
  4150a2:	jb     0x415097
  4150a4:	lods   eax,DWORD PTR ds:[esi]
  4150a5:	stos   BYTE PTR es:[edi],al
  4150a6:	xor    ebx,DWORD PTR [edi]
  4150a8:	fadd   QWORD PTR [eax+eax*1+0x14]
  4150ac:	ret    
  4150ad:	adc    DWORD PTR [ecx],edx
  4150af:	mov    bl,0xad
  4150b1:	call   0x1ef42b7
  4150b6:	or     eax,0xfda92577
  4150bb:	hlt    
  4150bc:	mov    eax,0xc60f242d
  4150c1:	lods   al,BYTE PTR ds:[esi]
  4150c2:	cdq    
  4150c3:	repnz lods eax,DWORD PTR ds:[esi]
  4150c5:	idiv   BYTE PTR [edi-0x76b2ffc4]
  4150cb:	into   
  4150cc:	cli    
  4150cd:	lds    eax,FWORD PTR [ebx+esi*8]
  4150d0:	cli    
  4150d1:	jl     0x4150bf
  4150d3:	jo     0x4150db
  4150d5:	xchg   ebx,eax
  4150d6:	aas    
  4150d7:	and    bh,BYTE PTR [ecx]
  4150d9:	ss stos DWORD PTR es:[edi],eax
  4150db:	inc    eax
  4150dc:	adc    esp,DWORD PTR [eax+ecx*2+0x6f]
  4150e0:	lahf   
  4150e1:	adc    al,0xfc
  4150e3:	jnp    0x41507b
  4150e5:	pop    ebp
  4150e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150e8:	lahf   
  4150e9:	jle    0x415071
  4150eb:	adc    BYTE PTR [edi-0x5ccf8719],bl
  4150f1:	pop    ss
  4150f2:	pushf  
  4150f3:	xchg   ecx,eax
  4150f4:	std    
  4150f5:	out    0x3,al
  4150f7:	add    BYTE PTR [eax],al
  4150f9:	add    BYTE PTR [edx-0x42],ch
  4150fc:	jo     0x415146
  4150fe:	jmp    0x415089
  415100:	xor    dh,BYTE PTR [eax]
  415102:	push   cs
  415103:	xchg   edx,eax
  415104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415105:	addr16 ret 
  415107:	shl    DWORD PTR [esi],cl
  415109:	inc    ebx
  41510a:	dec    ebx
  41510b:	adc    ecx,esp
  41510d:	add    esi,ebx
  41510f:	mov    WORD PTR [edi],cs
  415111:	js     0x4150d3
  415113:	sahf   
  415114:	aas    
  415115:	dec    eax
  415116:	hlt    
  415117:	push   es
  415118:	out    0x4a,eax
  41511a:	popf   
  41511b:	mov    WORD PTR [edx],gs
  41511d:	dec    esi
  41511e:	sub    al,0xc4
  415120:	fild   WORD PTR [ebx]
  415122:	jp     0x41513d
  415124:	or     eax,DWORD PTR [esi-0x7f18ed70]
  41512a:	and    eax,0x9a78b91a
  41512f:	fsub   DWORD PTR [ebx+0x40]
  415132:	xor    esi,DWORD PTR [esi]
  415134:	pop    esp
  415135:	inc    edx
  415136:	xor    eax,0x574ecf36
  41513b:	lahf   
  41513c:	fidivr WORD PTR [edi+0x33]
  41513f:	sbb    edx,edi
  415141:	and    DWORD PTR [edx+0x6],edi
  415144:	inc    ebp
  415145:	in     eax,dx
  415146:	xor    DWORD PTR [ecx-0x6da901c4],ebx
  41514c:	es push es
  41514e:	dec    ebp
  41514f:	loop   0x415150
  415151:	sub    eax,DWORD PTR [ebx+0x4ae4b13]
  415157:	or     eax,DWORD PTR [ecx+0x72d5cdae]
  41515d:	in     eax,dx
  41515e:	add    BYTE PTR [eax],al
  415160:	add    dh,bh
  415162:	int    0x69
  415164:	lahf   
  415165:	popf   
  415166:	xchg   ecx,eax
  415167:	inc    ebx
  415168:	dec    ebp
  415169:	aas    
  41516a:	xor    DWORD PTR [edx],edi
  41516c:	and    ah,BYTE PTR [edx+eiz*1]
  41516f:	cld    
  415170:	ins    BYTE PTR es:[edi],dx
  415171:	aam    0xe
  415173:	(bad)  
  415174:	sub    al,0x8a
  415176:	sahf   
  415177:	mov    ah,dh
  415179:	dec    esp
  41517a:	scas   eax,DWORD PTR es:[edi]
  41517b:	mov    ds:0x839c4bd3,eax
  415180:	sub    ebx,eax
  415182:	clc    
  415183:	mov    BYTE PTR [esp+edx*4-0x61a92e28],ch
  41518a:	pushf  
  41518b:	jae    0x41517e
  41518d:	js     0x41511c
  41518f:	pop    ss
  415190:	jmp    0xe684e085
  415195:	fwait
  415196:	sbb    cl,BYTE PTR [eax]
  415198:	inc    ecx
  415199:	and    BYTE PTR [esi],0xfd
  41519c:	es mov ebp,0xff100d41
  4151a2:	fwait
  4151a3:	std    
  4151a4:	push   ss
  4151a5:	(bad)  
  4151a6:	scas   al,BYTE PTR es:[edi]
  4151a7:	loope  0x415129
  4151a9:	pop    ebx
  4151aa:	pushf  
  4151ab:	xor    ah,BYTE PTR [edx]
  4151ad:	js     0x4151d7
  4151af:	std    
  4151b0:	dec    BYTE PTR [ebx+0x35]
  4151b3:	mov    eax,edi
  4151b5:	lea    edx,[ebp+ecx*1+0x76d65]
  4151bc:	jmp    0xbbc5463f
  4151c1:	les    ebx,FWORD PTR [edx]
  4151c3:	push   ebp
  4151c4:	sbb    al,BYTE PTR [eax]
  4151c6:	add    BYTE PTR [eax],al
  4151c8:	test   al,0xd7
  4151ca:	cld    
  4151cb:	imul   edx,DWORD PTR [esi-0x46ff8d2a],0x4a01561b
  4151d5:	ins    BYTE PTR es:[edi],dx
  4151d6:	js     0x41524c
  4151d8:	fisttp WORD PTR [ecx+0x8ff58fa]
  4151de:	push   0x4
  4151e0:	dec    ecx
  4151e1:	enter  0x5f02,0xf9
  4151e5:	sbb    al,0x16
  4151e7:	(bad)  
  4151e8:	loopne 0x41519c
  4151ea:	cmp    bl,0x93
  4151ed:	(bad)  
  4151ee:	pcmpgtd mm4,QWORD PTR [ebp+0x6bc1d22f]
  4151f5:	popf   
  4151f6:	arpl   WORD PTR [ebx],ax
  4151f8:	push   eax
  4151f9:	out    0x7e,eax
  4151fb:	jmp    0x8d6fcc4a
  415200:	mov    al,0x2e
  415202:	cmp    bl,0x8f
  415205:	(bad)  
  415206:	pcmpgtd mm2,QWORD PTR [ebp+0x2f]
  41520a:	rol    cl,cl
  41520c:	mov    ebx,0x2003639d
  415211:	call   0x7a9f3b94
  415216:	push   ss
  415217:	lea    esp,[eax-0x72]
  41521a:	cmp    bl,0x4f
  41521d:	(bad)  
  41521e:	adc    esp,DWORD PTR [esi+0x45]
  415221:	das    
  415222:	rol    cl,cl
  415224:	jmp    0x4151c3
  415226:	arpl   WORD PTR [ebx],ax
  415228:	shl    bh,1
  41522a:	jle    0x415215
  41522c:	add    BYTE PTR [eax],al
  41522e:	add    BYTE PTR [ebp-0x62],bl
  415231:	mov    ah,0xc9
  415233:	dec    esp
  415234:	jp     0x4151e8
  415236:	pop    ebx
  415237:	mov    ?,WORD PTR [ebx+0x5e990374]
  41523d:	std    
  41523e:	gs xchg ebx,eax
  415240:	mov    eax,ds:0x44b5c788
  415245:	mov    edi,0x8004333
  41524a:	data16 repz es cld 
  41524e:	push   edi
  41524f:	inc    ebp
  415250:	jno    0x4152d1
  415252:	shl    BYTE PTR [edi-0x6],cl
  415255:	jns    0x415261
  415257:	outs   dx,DWORD PTR ds:[esi]
  415258:	push   edi
  415259:	xor    BYTE PTR [esi+0x0],cl
  41525c:	outs   dx,BYTE PTR ds:[esi]
  41525d:	test   bh,dh
  41525f:	push   ss
  415260:	sar    esi,cl
  415262:	imul   esi,ecx,0x73039945
  415268:	fnstenv [bp+si-0xe]
  41526c:	out    dx,eax
  41526d:	dec    ebp
  41526e:	xor    DWORD PTR [ebp-0x657ff277],ebx
  415274:	(bad)  
  415275:	es pop ss
  415277:	or     BYTE PTR [edx+edi*8],dl
  41527a:	gs cld 
  41527c:	sar    DWORD PTR [edx+0x1e1ef066],cl
  415282:	or     DWORD PTR [ebp+0x7db4f4fe],0x730a7770
  41528c:	aaa    
  41528d:	hlt    
  41528e:	jp     0x4152e1
  415290:	and    bh,BYTE PTR [ebx+0x74]
  415296:	lock xor BYTE PTR [edi+edi*8-0x5749eb1b],bh
  41529e:	icebp  
  41529f:	pop    ecx
  4152a0:	sti    
  4152a1:	data16 cmp ch,ch
  4152a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152a5:	add    bl,dh
  4152a7:	mov    edi,DWORD PTR [ebp+ecx*1-0x6b]
  4152ab:	lock lock mov edi,0x871ba599
  4152b2:	in     al,dx
  4152b3:	push   ebp
  4152b4:	ret    0x6853
  4152b7:	repnz and ah,0x1b
  4152bb:	das    
  4152bc:	cwde   
  4152bd:	nop
  4152be:	repnz lods eax,DWORD PTR ds:[esi]
  4152c0:	add    DWORD PTR [ebx+0x6851c1ef],ecx
  4152c6:	icebp  
  4152c7:	push   es
  4152c8:	jmp    0xf4dd45d0
  4152cd:	mov    DWORD PTR [eax],0xcbaee747
  4152d3:	jmp    DWORD PTR [esi+0x24a16a43]
  4152d9:	ret    
  4152da:	(bad)  
  4152db:	loope  0x415293
  4152dd:	adc    BYTE PTR [ebx],dh
  4152df:	pop    es
  4152e0:	scas   al,BYTE PTR es:[edi]
  4152e1:	std    
  4152e2:	nop
  4152e3:	adc    al,0x27
  4152e5:	add    al,0x73
  4152e7:	(bad)  [esi-0x40]
  4152ea:	xor    al,BYTE PTR [edi]
  4152ec:	out    0x30,eax
  4152ee:	jmp    0x415323
  4152f0:	push   esi
  4152f1:	retf   
  4152f2:	mov    al,0x47
  4152f4:	out    0x4e,eax
  4152f6:	sahf   
  4152f7:	icebp  
  4152f8:	xchg   edx,eax
  4152f9:	adc    DWORD PTR [eax],eax
  4152fb:	add    BYTE PTR [eax],al
  4152fd:	xor    eax,DWORD PTR [edi]
  4152ff:	addr16 call 0x46c1459
  415305:	repz adc ecx,edx
  415308:	fwait
  415309:	dec    edi
  41530a:	fwait
  41530b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41530d:	outs   dx,DWORD PTR ds:[esi]
  41530e:	(bad)  
  41530f:	rcl    DWORD PTR [esi+esi*1],cl
  415312:	add    DWORD PTR [ebx-0x7ef94d40],eax
  415318:	in     eax,dx
  415319:	sbb    eax,0x8b002d07
  41531e:	shr    DWORD PTR [edx+0x36344c03],0x10
  415325:	inc    ebx
  415326:	clc    
  415327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415328:	add    ebx,DWORD PTR [esi-0xf205470]
  41532e:	xchg   DWORD PTR [ebp-0x7278d001],ebp
  415334:	sti    
  415335:	and    al,0x83
  415337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415338:	imul   DWORD PTR [edx+0x42]
  41533b:	retf   
  41533c:	sti    
  41533d:	ins    BYTE PTR es:[edi],dx
  41533e:	inc    esp
  41533f:	in     al,dx
  415340:	jp     0x415377
  415342:	enter  0xe100,0xf0
  415346:	xor    al,0x89
  415348:	clc    
  415349:	pop    ecx
  41534a:	mov    esp,0x94f0e900
  41534f:	inc    esp
  415350:	add    eax,0xef7199ef
  415355:	ss scas eax,DWORD PTR es:[edi]
  415357:	inc    ecx
  415358:	inc    ecx
  415359:	xchg   esi,eax
  41535a:	pushf  
  41535b:	mov    DWORD PTR [edi-0x16fb3ad3],ebp
  415361:	add    BYTE PTR [eax],al
  415363:	add    BYTE PTR ds:0x6b68ec90,bh
  415369:	pop    ds
  41536a:	(bad)  
  41536b:	call   0x4d481760
  415370:	add    eax,0x94690047
  415375:	(bad)  
  415377:	sub    ch,bh
  415379:	push   es
  41537a:	push   ebp
  41537b:	adc    al,0x8d
  41537d:	pop    ebx
  41537e:	fsubr  DWORD PTR [edx+esi*1-0x381aaf9]
  415385:	stos   BYTE PTR es:[edi],al
  415386:	adc    ch,BYTE PTR [ecx]
  415388:	out    dx,eax
  415389:	xchg   BYTE PTR [ebx],bh
  41538b:	inc    ecx
  41538c:	cmp    al,0x48
  41538e:	add    cl,ch
  415390:	(bad)  
  415393:	pop    es
  415394:	xchg   esi,eax
  415395:	pushf  
  415396:	std    
  415397:	ins    DWORD PTR es:[edi],dx
  415398:	das    
  415399:	adc    ecx,DWORD PTR [edi]
  41539b:	es pop esp
  41539d:	outs   dx,BYTE PTR ds:[esi]
  41539e:	ret    
  41539f:	stos   BYTE PTR es:[edi],al
  4153a0:	lock ins BYTE PTR es:[edi],dx
  4153a2:	ss test al,0xf0
  4153a5:	rol    BYTE PTR [ebx],0x81
  4153a8:	test   BYTE PTR [eax+0x0],cl
  4153ab:	call   0x1954ef5f
  4153b0:	loope  0x4153f8
  4153b2:	add    BYTE PTR [esp+ebp*8-0x66],ch
  4153b6:	push   eax
  4153b7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4153b9:	mov    ?,esi
  4153bb:	push   cs
  4153bc:	push   esi
  4153bd:	aaa    
  4153be:	push   0xfda60600
  4153c3:	jmp    DWORD PTR [edx+0x63]
  4153c6:	sti    
  4153c7:	add    BYTE PTR [eax],al
  4153c9:	add    BYTE PTR [eax],al
  4153cb:	sbb    ah,BYTE PTR [ebx+0x71]
  4153ce:	or     ch,cl
  4153d0:	(bad)  
  4153d1:	cld    
  4153d2:	dec    DWORD PTR [edx]
  4153d4:	sbb    eax,0x8cdfc79
  4153d9:	int3   
  4153da:	adc    eax,0xc081031a
  4153df:	inc    esi
  4153e0:	clc    
  4153e1:	push   edx
  4153e2:	lea    eax,[edi+0x1e]
  4153e5:	(bad)  
  4153e6:	dec    DWORD PTR [ebp+0x7d4fffff]
  4153ec:	or     BYTE PTR [esi+edx*1],dh
  4153ef:	or     al,BYTE PTR [ebx]
  4153f1:	jg     0x4153b7
  4153f3:	mov    esi,0x8ce4b986
  4153f8:	(bad)  
  4153f9:	sti    
  4153fa:	push   es
  4153fb:	fst    st(6)
  4153fd:	push   cs
  4153fe:	sub    DWORD PTR [edi],0x7a
  415401:	(bad)  
  415402:	jmp    FWORD PTR [ebp-0xc]
  415405:	or     dl,BYTE PTR [ebp+0x24c8635a]
  41540b:	cwde   
  41540c:	sbb    eax,0x99710d46
  415411:	ret    
  415412:	inc    esi
  415413:	jg     0x415419
  415415:	xchg   DWORD PTR [ebp-0x49bda],eax
  41541b:	mov    dl,0xb1
  41541d:	(bad)  
  41541e:	dec    DWORD PTR [edx-0x7a]
  415421:	data16 or BYTE PTR [edx+0x1d],cl
  415425:	inc    esi
  415426:	or     al,0xc1
  415428:	fadd   DWORD PTR [edi]
  41542a:	mov    DWORD PTR [ecx+ebx*4+0xc688],edx
  415431:	add    BYTE PTR [ebx],dl
  415433:	enter  0x4,0x74
  415437:	push   ds
  415438:	in     eax,dx
  415439:	(bad)  
  41543a:	sbb    edi,DWORD PTR [ecx]
  41543c:	jbe    0x41547e
  41543e:	repz scas eax,DWORD PTR es:[edi]
  415440:	cdq    
  415441:	jg     0x415436
  415443:	scas   eax,DWORD PTR es:[edi]
  415444:	add    DWORD PTR [esi+0x30],ebx
  415447:	sub    al,0x23
  415449:	add    al,0xc
  41544b:	adc    eax,DWORD PTR [eax]
  41544d:	mov    al,0xf2
  41544f:	in     al,dx
  415450:	repz mov ch,0xb5
  415453:	mov    edx,0xd7e67439
  415458:	pop    ss
  415459:	add    DWORD PTR [ecx],esp
  41545b:	outs   dx,BYTE PTR ds:[esi]
  41545c:	lds    ebp,FWORD PTR [edx-0xf]
  41545f:	(bad)  
  415460:	sub    eax,0xd6a3c80f
  415465:	(bad)  
  415466:	xor    dh,BYTE PTR [edx+ecx*1]
  415469:	mov    dh,BYTE PTR ds:0xb9e83baa
  41546f:	scas   al,BYTE PTR es:[edi]
  415470:	add    DWORD PTR [eax],eax
  415472:	and    edi,edi
  415474:	xor    edi,ebp
  415476:	fisub  WORD PTR [ebp-0x9]
  415479:	aas    
  41547a:	repz mov esp,0x71ab81cc
  415480:	mov    eax,DWORD PTR [esi-0x9]
  415483:	mov    eax,0x2db0c078
  415488:	and    cl,BYTE PTR [eax]
  41548a:	repz xchg ecx,eax
  41548c:	or     dh,BYTE PTR [edi]
  41548e:	add    eax,0xb39412be
  415493:	ins    DWORD PTR es:[edi],dx
  415494:	mov    eax,ds:0x13
  415499:	ja     0x415436
  41549b:	inc    ecx
  41549c:	add    BYTE PTR [edx+0x60],bh
  41549f:	or     DWORD PTR [ebx+0x54e3ba33],eax
  4154a5:	ret    
  4154a6:	dec    eax
  4154a7:	sbb    al,BYTE PTR [esp+edx*2]
  4154aa:	mov    ebx,0xadb313a5
  4154af:	mov    al,al
  4154b1:	mov    esi,0xe37e8ca7
  4154b6:	sbb    eax,0x734c103
  4154bb:	popf   
  4154bc:	or     ebp,DWORD PTR [esi]
  4154be:	repnz ss stc 
  4154c1:	in     al,0x6
  4154c3:	push   0x2a
  4154c5:	jmp    0x4154cd
  4154c7:	fld    st(3)
  4154c9:	xor    cl,BYTE PTR [ebp+ebp*4-0x1608df9]
  4154d0:	pop    ss
  4154d1:	(bad)  [ecx+ebp*8]
  4154d4:	xor    edi,esi
  4154d6:	icebp  
  4154d7:	(bad)  
  4154d8:	clc    
  4154d9:	mov    ah,0x6
  4154db:	out    0x19,al
  4154dd:	not    DWORD PTR [edi+0x46fefff4]
  4154e3:	out    0x86,eax
  4154e5:	sub    eax,0x2d8ece03
  4154ea:	(bad)  
  4154ec:	ret    
  4154ed:	inc    edi
  4154ee:	or     al,0x17
  4154f0:	mov    ds:0x43dcb6e0,eax
  4154f5:	repz add DWORD PTR [ebp+0xc],0xfffffff3
  4154fa:	ret    
  4154fb:	cmp    al,0x8f
  4154fd:	add    BYTE PTR [eax],al
  4154ff:	add    BYTE PTR [edi-0x5be4747b],bl
  415505:	xchg   edi,eax
  415506:	out    0x90,eax
  415508:	xor    BYTE PTR [ebx-0x718f6ec9],bl
  41550e:	test   DWORD PTR [edx+0x80f368e],esp
  415514:	rol    DWORD PTR [esi],cl
  415516:	out    0x2b,eax
  415518:	jle    0x4154b1
  41551a:	out    0x3,eax
  41551c:	jbe    0x41552f
  41551e:	out    dx,eax
  41551f:	retf   0x9ab0
  415522:	rol    DWORD PTR [ebx+esi*8],cl
  415525:	push   es
  415526:	push   esi
  415527:	clc    
  415528:	sub    cl,dh
  41552a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552b:	add    esi,DWORD PTR [eax-0x3a]
  41552e:	mov    esp,0x13817a10
  415533:	mov    eax,ds:0x41009746
  415538:	cmp    al,0x97
  41553a:	std    
  41553b:	jmp    0x297359c5
  415540:	aas    
  415541:	les    eax,FWORD PTR [ecx+ebp*8]
  415544:	add    DWORD PTR [ecx-0x40],edx
  415547:	mov    eax,ds:0x95480d04
  41554c:	in     eax,dx
  41554d:	aad    0xbf
  41554f:	sub    bl,dh
  415551:	icebp  
  415552:	push   edi
  415553:	sub    dl,dh
  415555:	add    al,0x58
  415557:	sub    ch,BYTE PTR [eax+0x6de2744e]
  41555d:	scas   al,BYTE PTR es:[edi]
  41555e:	adc    ebx,DWORD PTR [ebp-0xa]
  415561:	fdivr  DWORD PTR [edi+0xaa]
  415567:	aas    
  415568:	or     ecx,eax
  41556a:	cdq    
  41556b:	lock (bad) 
  41556d:	or     eax,0x48032f97
  415572:	cmp    eax,0xea743efd
  415577:	lahf   
  415578:	push   esi
  415579:	rol    DWORD PTR [ebx-0xd],0x2e
  41557d:	rol    DWORD PTR [ebx-0x41],0x3e
  415581:	shl    esi,0x4b
  415584:	pop    es
  415585:	dec    eax
  415586:	xor    DWORD PTR [ebx],ecx
  415588:	add    eax,DWORD PTR [ecx+0x11aa481]
  41558e:	fidiv  DWORD PTR [eax-0x371a9538]
  415594:	(bad)  
  415595:	push   0xffffffd9
  415597:	enter  0x53c7,0x62
  41559b:	inc    ebx
  41559c:	inc    esi
  41559d:	mov    DWORD PTR [edi+0x66fdce47],esp
  4155a3:	xchg   edx,eax
  4155a4:	aaa    
  4155a5:	push   0xffffffe9
  4155a7:	xchg   ebx,eax
  4155a8:	sbb    cl,BYTE PTR [eax]
  4155aa:	pusha  
  4155ab:	mov    ah,0x92
  4155ad:	std    
  4155ae:	hlt    
  4155af:	cmp    al,0xfc
  4155b1:	aas    
  4155b2:	add    BYTE PTR [edx-0x75],bl
  4155b5:	les    ecx,FWORD PTR [edi+edx*8]
  4155b8:	dec    ebp
  4155b9:	cld    
  4155ba:	push   eax
  4155bb:	add    eax,0x7cff07fe
  4155c0:	push   cs
  4155c1:	sti    
  4155c2:	adc    eax,0x3d901a
  4155c7:	std    
  4155c8:	push   edx
  4155c9:	pop    ss
  4155ca:	rol    BYTE PTR [eax],0x0
  4155cd:	add    BYTE PTR [edx-0x3f],cl
  4155d0:	ret    0xa04
  4155d3:	fld    QWORD PTR [esi-0x397c9414]
  4155d9:	call   0x3cbd87
  4155de:	pop    edx
  4155df:	in     al,0xff
  4155e1:	(bad)  
  4155e2:	jg     0x4155e5
  4155e4:	test   DWORD PTR [ebp-0x2a],eax
  4155e7:	adc    WORD PTR [esp+ebx*8],si
  4155eb:	dec    ecx
  4155ec:	add    BYTE PTR [ebx+0x4589058e],al
  4155f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f3:	fsqrt  
  4155f5:	jne    0x4155b9
  4155f7:	data16 jbe 0x4155fe
  4155fa:	test   DWORD PTR [ecx+edi*4-0xcf4f5eb],ebx
  415601:	fsub   DWORD PTR [ecx+0x58c940c9]
  415607:	or     eax,0x9efeff00
  41560c:	add    edi,edi
  41560e:	cli    
  41560f:	add    bh,bl
  415611:	jo     0x4155a1
  415613:	adc    ax,sp
  415616:	scas   eax,DWORD PTR es:[edi]
  415617:	dec    ecx
  415618:	add    bh,dh
  41561a:	push   edx
  41561b:	xchg   edx,eax
  41561c:	mov    ebp,0xd4840
  415621:	push   ebp
  415622:	adc    DWORD PTR [esi+0x7f],esp
  415625:	in     al,dx
  415626:	or     bl,ah
  415628:	push   ebp
  415629:	push   edi
  41562a:	loope  0x4156a4
  41562c:	xchg   eax,ebx
  41562e:	repz inc edi
  415630:	in     al,0xfd
  415632:	add    BYTE PTR [eax],al
  415634:	add    BYTE PTR [esp+eax*2-0x7b],dl
  415638:	rol    bh,0x95
  41563b:	sub    esi,DWORD PTR [ecx]
  41563d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41563e:	aaa    
  41563f:	cmp    dh,bh
  415641:	cmp    al,0xdc
  415643:	test   al,al
  415645:	mov    edi,0xf0b50f09
  41564a:	and    BYTE PTR [ecx+0x2baa9e02],bl
  415650:	adc    BYTE PTR [ebx+0x2a310f08],bh
  415656:	and    BYTE PTR [ecx-0x3dcd03eb],bl
  41565c:	mov    esi,DWORD PTR [edx-0x201f7e6c]
  415662:	outs   dx,DWORD PTR ds:[esi]
  415663:	xor    al,0xfd
  415665:	jge    0x415612
  415667:	mov    al,ds:0x4193cb13
  41566c:	add    BYTE PTR [esi+0x5e],ch
  41566f:	sbb    BYTE PTR [edx],ch
  415671:	push   0x3315f7fb
  415676:	sahf   
  415677:	sahf   
  415678:	aad    0x88
  41567a:	xchg   ecx,eax
  41567b:	out    0xff,al
  41567d:	les    edx,FWORD PTR [edi]
  41567f:	inc    edi
  415680:	cld    
  415681:	clc    
  415682:	pusha  
  415683:	sbb    BYTE PTR [esi],cl
  415685:	retf   
  415686:	cmc    
  415687:	popf   
  415688:	std    
  415689:	lods   al,BYTE PTR ds:[esi]
  41568a:	ins    DWORD PTR es:[edi],dx
  41568b:	pop    ss
  41568c:	cld    
  41568d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568e:	fwait
  41568f:	in     eax,0x15
  415691:	xor    ebx,DWORD PTR [esi+0x60d8d59e]
  415697:	pop    ss
  415698:	xor    al,BYTE PTR [eax]
  41569a:	add    BYTE PTR [eax],al
  41569c:	cwde   
  41569d:	cwde   
  41569e:	push   ecx
  41569f:	call   FWORD PTR [ecx-0x5cbc6c3c]
  4156a5:	scas   al,BYTE PTR es:[edi]
  4156a6:	sbb    BYTE PTR ds:0x8b099b74,dl
  4156ac:	mov    dh,0x6
  4156ae:	aaa    
  4156af:	xor    al,0x7a
  4156b1:	dec    edx
  4156b2:	jmp    0x4156dd
  4156b4:	add    ebx,DWORD PTR [edi+0x6f302b1]
  4156ba:	fs (bad) 
  4156bc:	(bad)  
  4156bd:	test   eax,0x12720f52
  4156c2:	inc    ebx
  4156c3:	add    al,0xc7
  4156c5:	lods   eax,DWORD PTR ds:[esi]
  4156c6:	sbb    DWORD PTR ss:[edi-0x6c],ecx
  4156ca:	aam    0xe7
  4156cc:	push   es
  4156cd:	inc    edi
  4156ce:	out    0xd1,eax
  4156d0:	fs xor al,0xbd
  4156d3:	cmp    dh,BYTE PTR [ecx+ecx*8]
  4156d6:	fild   WORD PTR [ebx]
  4156d8:	mov    ebp,0x4cd3177f
  4156dd:	xchg   DWORD PTR [ebp-0x11c2fbf0],eax
  4156e3:	js     0x415718
  4156e5:	sub    BYTE PTR [edi-0x62],0x72
  4156e9:	lods   al,BYTE PTR ds:[esi]
  4156ea:	in     al,0x90
  4156ec:	outs   dx,BYTE PTR ds:[esi]
  4156ed:	or     bh,cl
  4156ef:	sub    ch,al
  4156f1:	xchg   ebx,eax
  4156f2:	fiadd  WORD PTR [edi-0x53dce54d]
  4156f8:	xchg   ecx,eax
  4156f9:	xchg   ecx,eax
  4156fa:	into   
  4156fb:	sahf   
  4156fc:	ja     0x4156c4
  4156fe:	cmp    eax,DWORD PTR [ebx+0x0]
  415701:	add    BYTE PTR [eax],al
  415703:	neg    BYTE PTR [ebx-0x16]
  415706:	cmp    BYTE PTR [ebx+0x49093c08],0xf7
  41570d:	push   cs
  41570e:	stos   DWORD PTR es:[edi],eax
  41570f:	std    
  415710:	xlat   BYTE PTR ds:[ebx]
  415711:	scas   eax,DWORD PTR es:[edi]
  415712:	sub    BYTE PTR [ebx+0x5c78edfb],0x81
  415719:	sub    BYTE PTR [edi+0x33eba672],bl
  41571f:	and    dl,BYTE PTR [ebp+edi*8+0x72f98607]
  415726:	clc    
  415727:	mov    esp,0xb06c0006
  41572c:	pop    ss
  41572d:	pop    ss
  41572e:	imul   ecx,DWORD PTR [esi],0xf5dbff00
  415734:	and    BYTE PTR [esi+ebx*2],dl
  415737:	push   es
  415738:	or     edi,ebp
  41573a:	cld    
  41573b:	sub    bh,dh
  41573d:	aas    
  41573e:	jmp    0xedb51dbe
  415743:	mov    al,ds:0x5dd7ea93
  415748:	not    DWORD PTR [ebx]
  41574a:	fbstp  TBYTE PTR [eax+0x58318906]
  415750:	jg     0x41574d
  415752:	test   DWORD PTR es:[ecx],edi
  415755:	std    
  415756:	hlt    
  415757:	adc    al,0xf9
  415759:	aas    
  41575a:	jmp    0xaf9eaaa1
  41575f:	xor    DWORD PTR [edi],esi
  415761:	mov    DWORD PTR ds:0xe990a26f,edx
  415767:	add    BYTE PTR [eax],al
  415769:	add    al,dh
  41576b:	push   es
  41576c:	push   ecx
  41576d:	adc    esi,0x7f
  415770:	xor    DWORD PTR [edi-0x73],0xffffff94
  415774:	std    
  415775:	push   ebx
  415776:	out    dx,eax
  415777:	ss call 0xfdd409be
  41577d:	bound  ebp,QWORD PTR [edi+edi*8]
  415780:	mov    DWORD PTR [ecx],ebp
  415782:	jecxz  0x41570b
  415784:	(bad)  
  415785:	cmc    
  415786:	cwde   
  415787:	(bad)  
  415788:	sti    
  415789:	mov    esi,0x6c87295e
  41578e:	fist   DWORD PTR [ebx-0x9205103]
  415794:	and    al,0xe9
  415796:	lock dec esi
  415798:	xor    BYTE PTR [edi+esi*8],dl
  41579b:	push   es
  41579c:	call   0xfdd33d8c
  4157a1:	push   0xffffffd4
  4157a3:	call   0x66f8:0x4a030000
  4157aa:	add    DWORD PTR [edx-0x8],ecx
  4157ad:	dec    bx
  4157af:	retf   
  4157b0:	or     BYTE PTR [esi-0x2d],ah
  4157b3:	mov    DWORD PTR [esi-0x1],esi
  4157b6:	int    0x73
  4157b8:	xchg   DWORD PTR [ebp+0x62],eax
  4157bb:	sbb    DWORD PTR [ecx-0x48c428c],0xfb7340e8
  4157c5:	call   esi
  4157c7:	retf   0x3571
  4157ca:	std    
  4157cb:	cdq    
  4157cc:	adc    DWORD PTR [esi],edx
  4157ce:	add    BYTE PTR [eax],al
  4157d0:	add    BYTE PTR [edx-0xabfc6fa],cl
  4157d6:	or     al,BYTE PTR [eax]
  4157d8:	jne    0x415815
  4157da:	jae    0x41581d
  4157dc:	clc    
  4157dd:	mov    esi,ecx
  4157df:	div    DWORD PTR [eax]
  4157e1:	ja     0x4157e9
  4157e3:	add    BYTE PTR [esi+0x15],dh
  4157e6:	retf   
  4157e7:	inc    ecx
  4157e8:	clc    
  4157e9:	sub    ch,BYTE PTR [ebx+0x48fdfffd]
  4157ef:	hlt    
  4157f0:	mov    eax,0x442a
  4157f5:	je     0x4157a3
  4157f7:	inc    edx
  4157f8:	hlt    
  4157f9:	dec    eax
  4157fa:	ss xor al,al
  4157fd:	xor    DWORD PTR [esi+0x35ca04c2],edi
  415803:	std    
  415804:	jmp    0xc541:0x574ed4a5
  41580b:	call   0xfbb3d784
  415810:	xor    esp,DWORD PTR [ecx-0x2a]
  415813:	dec    esi
  415814:	(bad)  
  415815:	jmp    0x415815
  415817:	test   BYTE PTR [esi+esi*4-0x67],al
  41581b:	cld    
  41581c:	adc    eax,0x3d984a
  415821:	repz and al,0x99
  415824:	or     DWORD PTR [eax+eax*4-0x12dfe0eb],0x8be6fd32
  41582f:	idiv   BYTE PTR [edi]
  415831:	repz icebp 
  415833:	sub    DWORD PTR [eax+eax*1],edx
  415836:	add    BYTE PTR [eax],al
  415838:	pop    ebx
  415839:	lea    esp,[eax]
  41583b:	std    
  41583c:	fs in  al,0xbe
  41583f:	je     0x415844
  415841:	pop    ecx
  415842:	mov    al,dh
  415844:	dec    ebx
  415845:	cbw    
  415847:	std    
  415848:	dec    esp
  415849:	and    al,0x91
  41584b:	jmp    0xea02e53d
  415850:	mov    dh,0x8c
  415852:	xchg   ebx,eax
  415853:	cmp    DWORD PTR [eax+0x53],eax
  415856:	icebp  
  415857:	imul   edx,eax,0x274ea980
  41585d:	call   0x7b74dcfd
  415862:	cli    
  415863:	mov    BYTE PTR ds:0xfb69eb04,ch
  415869:	push   esp
  41586a:	daa    
  41586b:	add    bl,BYTE PTR [eax+ecx*1+0x5fe6e7f6]
  415872:	add    DWORD PTR [ebp-0xc],edx
  415875:	mov    cl,0xfd
  415877:	adc    eax,0x10a89e33
  41587c:	in     al,0x93
  41587e:	in     eax,dx
  41587f:	adc    eax,0xd88e9e33
  415884:	push   0x79ff2ba0
  415889:	jo     0x415824
  41588b:	adc    BYTE PTR [eax],ah
  41588d:	leave  
  41588e:	out    dx,eax
  41588f:	and    esp,ebp
  415891:	fld    QWORD PTR [ebx]
  415893:	xor    DWORD PTR [ebx+0x4a5938f8],esi
  415899:	pop    ebp
  41589a:	add    BYTE PTR cs:[eax],al
  41589d:	add    BYTE PTR [eax],al
  41589f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a0:	pop    es
  4158a1:	sbb    esp,eax
  4158a3:	call   0xe9216c37
  4158a8:	(bad)  
  4158a9:	sbb    BYTE PTR [eax],al
  4158ab:	mov    ?,edx
  4158ad:	out    dx,al
  4158ae:	icebp  
  4158af:	les    eax,FWORD PTR [esi]
  4158b1:	test   eax,0x7239f30c
  4158b6:	test   al,0x72
  4158b8:	mov    ds:0x37c536c3,eax
  4158bd:	bound  ebx,QWORD PTR [edx+edi*2+0x4abe7296]
  4158c4:	aaa    
  4158c5:	jb     0x4158c9
  4158c7:	mov    esi,0x4eca6233
  4158cc:	aaa    
  4158cd:	jecxz  0x41584f
  4158cf:	xor    edx,DWORD PTR [ecx]
  4158d1:	in     eax,dx
  4158d2:	push   es
  4158d3:	sbb    ebx,esp
  4158d5:	ds scas eax,DWORD PTR es:[edi]
  4158d7:	clc    
  4158d8:	sbb    bl,BYTE PTR [edi-0x2b04ff66]
  4158de:	inc    ebx
  4158df:	repz rcr ecx,1
  4158e2:	loop   0x415900
  4158e4:	nop
  4158e5:	xchg   esp,eax
  4158e6:	inc    ecx
  4158e7:	mov    edx,esi
  4158e9:	fwait
  4158ea:	add    esi,ebx
  4158ec:	and    DWORD PTR [edi+ebp*4+0xbac7ba3],0xe90ee589
  4158f7:	cmc    
  4158f8:	(bad)  
  4158f9:	out    0x80,eax
  4158fb:	mov    bl,0x19
  4158fd:	mov    esi,0x7bb3091
  415902:	adc    BYTE PTR [eax],al
  415904:	add    BYTE PTR [eax],al
  415906:	lock int 0x23
  415909:	test   al,0x60
  41590b:	(bad)  
  41590d:	inc    eax
  41590e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41590f:	add    eax,0x11720253
  415914:	lahf   
  415915:	add    eax,DWORD PTR [eax-0x1a]
  415918:	arpl   WORD PTR [edx+0x79006336],bx
  41591e:	div    DWORD PTR [ecx]
  415920:	pop    esi
  415921:	adc    dh,BYTE PTR [esi-0x3716fb3c]
  415927:	adc    esp,DWORD PTR ds:0x1391f0e9
  41592d:	int    0x82
  41592f:	iret   
  415930:	(bad)  
  415931:	fidiv  DWORD PTR [eax-0x1c791563]
  415937:	mov    ds:0x135978e9,al
  41593c:	fadd   DWORD PTR [edx+0x7d893394]
  415942:	pop    ds
  415943:	jle    0x415904
  415945:	push   ecx
  415946:	mov    dl,0x92
  415948:	std    
  415949:	pop    esi
  41594a:	addr16 inc ebx
  41594c:	cld    
  41594d:	bound  esi,QWORD PTR [ebx+0x4531f4fe]
  415953:	dec    edi
  415954:	mov    ebx,DWORD PTR [esp+eiz*2+0x5999c1e5]
  41595b:	adc    ecx,DWORD PTR [eax]
  41595d:	ret    
  41595e:	lock xchg ecx,eax
  415960:	jae    0x41593b
  415962:	mov    DWORD PTR [ebx],edx
  415964:	or     al,0x26
  415966:	pop    es
  415967:	or     edi,ebp
  415969:	hlt    
  41596a:	add    BYTE PTR [eax],al
  41596c:	add    BYTE PTR [eax+0x3fe93ff3],bh
  415972:	les    ecx,FWORD PTR [ecx+ebp*8]
  415975:	(bad)  
  415976:	push   es
  415977:	std    
  415978:	jge    0x415996
  41597a:	sti    
  41597b:	cld    
  41597c:	jne    0x415992
  41597e:	sti    
  41597f:	cld    
  415980:	js     0x41596e
  415982:	mov    edx,DWORD PTR [ebx]
  415984:	leave  
  415985:	loop   0x415955
  415987:	jmp    FWORD PTR [edx+0x725306ef]
  41598d:	mov    ecx,DWORD PTR [eax+0x350605ec]
  415993:	push   ebp
  415994:	bound  esp,QWORD PTR [edi-0x80]
  415997:	out    dx,eax
  415998:	add    BYTE PTR [ecx+0x4d],al
  41599b:	out    0x4c,eax
  41599d:	inc    ecx
  41599e:	cdq    
  41599f:	mov    ch,0x0
  4159a1:	xchg   edx,eax
  4159a2:	or     al,BYTE PTR [eax]
  4159a4:	cmp    esp,DWORD PTR [edx+0x0]
  4159a7:	dec    esi
  4159a8:	(bad)  
  4159a9:	fcmovbe st,st(3)
  4159ab:	xchg   dh,cl
  4159ad:	jne    0x415984
  4159af:	or     eax,DWORD PTR [ebp+0x305f15a]
  4159b5:	inc    edx
  4159b6:	pushf  
  4159b7:	cmc    
  4159b8:	jmp    0x41595f
  4159ba:	(bad)  
  4159bb:	cmp    edi,edi
  4159bd:	lahf   
  4159be:	sahf   
  4159bf:	adc    eax,DWORD PTR [eax+0x5a]
  4159c2:	mov    ch,0x30
  4159c4:	daa    
  4159c5:	pop    edx
  4159c6:	or     dh,BYTE PTR [ecx+0x2d]
  4159c9:	aad    0xfd
  4159cb:	pop    es
  4159cc:	lea    ecx,[edi+0x8b505e]
  4159d2:	add    BYTE PTR [eax],al
  4159d4:	lahf   
  4159d5:	push   es
  4159d6:	push   0x2
  4159d8:	mov    dl,0xdd
  4159da:	(bad)  
  4159db:	dec    DWORD PTR [edx+0xd]
  4159de:	shl    BYTE PTR [ebp+0x52],0x78
  4159e2:	inc    ecx
  4159e3:	aam    0x18
  4159e5:	inc    BYTE PTR [eax]
  4159e7:	cmp    DWORD PTR [edi+0x56],ecx
  4159ea:	jno    0x4159fd
  4159ec:	(bad)  
  4159ed:	outs   dx,DWORD PTR ds:[esi]
  4159ee:	jnp    0x4159a0
  4159f0:	mov    edx,0x415e5b09
  4159f5:	rol    edx,0x8
  4159f8:	sbb    dh,BYTE PTR [ebp+edi*4+0x716effeb]
  4159ff:	fdivr  st(5),st
  415a01:	pushf  
  415a02:	and    DWORD PTR [esi],edx
  415a04:	call   0xe8ca:0x51f1e709
  415a0b:	mov    cl,dl
  415a0d:	outs   dx,BYTE PTR ds:[esi]
  415a0e:	sti    
  415a0f:	push   eax
  415a10:	mov    ch,0xfd
  415a12:	and    ecx,DWORD PTR [eax]
  415a14:	repz dec ecx
  415a16:	add    al,0xfd
  415a18:	aas    
  415a19:	add    al,0xfc
  415a1b:	cld    
  415a1c:	inc    edi
  415a1d:	cld    
  415a1e:	sti    
  415a1f:	cld    
  415a20:	inc    edx
  415a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a22:	cwde   
  415a23:	adc    esi,edi
  415a25:	lods   eax,DWORD PTR ds:[esi]
  415a26:	inc    ecx
  415a27:	add    al,ah
  415a29:	data16 test al,bh
  415a2c:	pushf  
  415a2d:	xchg   esp,eax
  415a2e:	outs   dx,BYTE PTR ds:[esi]
  415a2f:	shl    BYTE PTR [ecx+0x7853019b],0x83
  415a36:	test   ah,ch
  415a38:	add    BYTE PTR [eax],al
  415a3a:	add    bh,dh
  415a3c:	and    BYTE PTR [esi],bl
  415a3e:	cld    
  415a3f:	repz lock cs std 
  415a43:	(bad)  
  415a44:	xchg   edi,eax
  415a45:	mov    WORD PTR [ebx],?
  415a47:	push   edi
  415a48:	stos   BYTE PTR es:[edi],al
  415a49:	inc    ecx
  415a4a:	add    BYTE PTR [ebp+edx*4+0x9],ah
  415a4e:	mov    DWORD PTR [ebx],edi
  415a50:	and    al,0xf
  415a52:	add    al,0x54
  415a54:	aam    0x7d
  415a56:	rol    bh,0xa7
  415a59:	test   cl,cl
  415a5b:	inc    esp
  415a5c:	inc    esi
  415a5d:	mov    al,BYTE PTR [eax]
  415a5f:	repz lahf 
  415a61:	mov    WORD PTR [esi-0x15],cs
  415a64:	lar    eax,WORD PTR [edi-0x26823442]
  415a6b:	lahf   
  415a6c:	mov    ds:0xe51b5b8a,al
  415a71:	ror    BYTE PTR ds:0x4389df5d,0xfb
  415a78:	hlt    
  415a79:	or     eax,0x8d627610
  415a7e:	push   0xfffffff3
  415a80:	outs   dx,DWORD PTR ds:[esi]
  415a81:	cwde   
  415a82:	jae    0x415a6f
  415a84:	mov    ebx,gs
  415a86:	mov    bl,0x1
  415a88:	pop    esi
  415a89:	add    DWORD PTR [ecx+0x73bc23cb],ecx
  415a8f:	inc    DWORD PTR [esi]
  415a91:	out    0x11,al
  415a93:	out    0x7f,eax
  415a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a96:	lods   al,BYTE PTR ds:[esi]
  415a97:	fs nop
  415a99:	(bad)  
  415a9a:	xchg   edi,eax
  415a9b:	outs   dx,DWORD PTR ds:[esi]
  415a9c:	(bad)  
  415a9d:	push   ebx
  415a9e:	or     eax,0x6a000000
  415aa3:	inc    edx
  415aa4:	repz (bad) 
  415aa7:	adc    bl,BYTE PTR [edx-0x5d782e55]
  415aad:	xchg   edi,eax
  415aae:	call   0xf013:0x9c9b69ea
  415ab5:	mov    esi,0x38a8b30
  415aba:	repz push es
  415abc:	add    BYTE PTR [edi],0x4
  415abf:	nop
  415ac0:	jmp    0xfc484dc9
  415ac5:	(bad)  
  415ac6:	scas   eax,DWORD PTR es:[edi]
  415ac7:	inc    edx
  415ac8:	jnp    0x415b12
  415aca:	push   ss
  415acb:	pop    es
  415acc:	out    0x96,eax
  415ace:	(bad)  
  415ad0:	ins    DWORD PTR es:[edi],dx
  415ad1:	push   cs
  415ad2:	jmp    0x415a5f
  415ad4:	(bad)  
  415ad6:	push   edi
  415ad7:	mov    ah,0x64
  415ad9:	(bad)  
  415ada:	mov    DWORD PTR [edi],0x8846cb6a
  415ae0:	int3   
  415ae1:	xchg   edi,eax
  415ae2:	repz adc dh,al
  415ae5:	xchg   esi,eax
  415ae6:	ror    BYTE PTR [edx-0xb2f0ec2],0xa6
  415aed:	add    eax,esi
  415aef:	jg     0x415b1b
  415af1:	cmp    esi,DWORD PTR [ecx+ecx*8]
  415af4:	repz add eax,eax
  415af7:	jg     0x415b04
  415af9:	sbb    DWORD PTR [edi],0xfffffffb
  415afc:	fld    st(3)
  415afe:	mov    ds:0xeb495c36,eax
  415b03:	xor    eax,0x3397
  415b08:	add    BYTE PTR [ecx-0x18be9406],cl
  415b0e:	add    BYTE PTR ss:[ecx+0x51fd8be4],al
  415b15:	test   BYTE PTR [edi],dl
  415b17:	or     BYTE PTR [esi-0x17006ccd],ch
  415b1d:	lock push es
  415b1f:	lds    ebp,FWORD PTR [edi+eiz*2]
  415b22:	mul    BYTE PTR [ecx+ebp*8]
  415b25:	lock rol DWORD PTR [ebx-0x3b],0x68
  415b2a:	cmc    
  415b2b:	(bad)  
  415b2c:	call   0xdd1552b6
  415b31:	xor    BYTE PTR [edi],al
  415b33:	cmc    
  415b34:	xchg   ecx,eax
  415b35:	cdq    
  415b36:	dec    ebx
  415b37:	inc    eax
  415b38:	mov    al,0xb2
  415b3a:	add    al,BYTE PTR [eax]
  415b3c:	xor    al,0x78
  415b3e:	call   0x5cbf:0xd5f3034f
  415b45:	sub    ecx,DWORD PTR [ebx+0x20bf294f]
  415b4b:	push   es
  415b4c:	jle    0x415b51
  415b4e:	inc    DWORD PTR [esi+0x13898b2c]
  415b54:	jge    0x415bb9
  415b56:	retf   
  415b57:	call   FWORD PTR [ebp-0x68]
  415b5a:	in     eax,dx
  415b5b:	mov    edi,0x4c83fa9
  415b60:	jmp    0x32729366
  415b65:	push   cs
  415b66:	inc    esi
  415b67:	add    BYTE PTR [edi+eax*8],0xc7
  415b6b:	inc    ecx
  415b6c:	jmp    0xf0415b71
  415b71:	xor    DWORD PTR [ebx-0x4],esi
  415b74:	mov    esi,0xf0aac3ae
  415b79:	xor    al,0xfd
  415b7b:	cld    
  415b7c:	dec    esp
  415b7d:	clc    
  415b7e:	aas    
  415b7f:	jmp    0x2ce92af4
  415b84:	mov    cl,0x6
  415b86:	add    BYTE PTR [edi+edi*8-0xaff865e],dl
  415b8d:	jo     0x415b8a
  415b8f:	test   BYTE PTR [edx],bl
  415b91:	cli    
  415b92:	(bad)  
  415b94:	xlat   BYTE PTR ds:[ebx]
  415b95:	and    al,cl
  415b97:	inc    ebx
  415b98:	retf   0x3620
  415b9b:	inc    ecx
  415b9c:	retf   0x197e
  415b9f:	test   al,0x97
  415ba1:	dec    eax
  415ba2:	add    BYTE PTR [esi-0x63],dl
  415ba5:	call   0x448a:0x30a12ed
  415bac:	out    0x96,al
  415bae:	in     eax,0xce
  415bb0:	mov    bl,0x74
  415bb2:	sti    
  415bb3:	mov    esp,DWORD PTR [edi-0x75bfee92]
  415bb9:	loopne 0x415bc0
  415bbb:	mov    edx,DWORD PTR [edx-0x28]
  415bbe:	push   edx
  415bbf:	inc    DWORD PTR [ebp+ebx*8+0xc]
  415bc3:	push   0xffffff98
  415bc5:	fild   DWORD PTR [esi-0x78a69218]
  415bcb:	clc    
  415bcc:	or     DWORD PTR [edx-0x5],esi
  415bcf:	je     0x415c28
  415bd1:	xchg   ebx,edi
  415bd3:	inc    DWORD PTR [eax]
  415bd5:	add    BYTE PTR [eax],al
  415bd7:	or     BYTE PTR [bp+si],dh
  415bda:	fcmovnbe st,st(1)
  415bdc:	mov    ecx,0x68a1619
  415be1:	push   ecx
  415be2:	inc    DWORD PTR [esp+ebx*8]
  415be5:	cli    
  415be6:	(bad)  
  415be7:	jge    0x415bbd
  415be9:	pop    eax
  415bea:	mov    cl,BYTE PTR [ecx]
  415bec:	rol    cl,1
  415bee:	add    al,0x4a
  415bf0:	fld    DWORD PTR [esi+0x145e99ec]
  415bf6:	push   ebx
  415bf7:	sub    DWORD PTR [edi+0x56],ecx
  415bfa:	cmp    BYTE PTR [edi],ch
  415bfc:	push   ds
  415bfd:	rol    DWORD PTR [ebx+0xa],0xf9
  415c01:	xor    BYTE PTR [esi+0x3f49b2],bh
  415c07:	repz dec ecx
  415c09:	xchg   esp,eax
  415c0a:	adc    ecx,DWORD PTR [edi]
  415c0c:	mov    es,WORD PTR [ecx+0x0]
  415c0f:	mov    ebx,0x30c369a2
  415c14:	mov    al,ds:0x8ddb1a0e
  415c19:	mov    edi,ebp
  415c1b:	fsub   QWORD PTR [ebx]
  415c1d:	les    esi,FWORD PTR [edx+eax*1+0x59]
  415c21:	(bad)  
  415c22:	stos   DWORD PTR es:[edi],eax
  415c23:	mov    dh,0xdc
  415c25:	add    ebp,DWORD PTR [edx-0x39fc2103]
  415c2b:	test   BYTE PTR [edi-0x610cbe42],0x2b
  415c32:	std    
  415c33:	push   es
  415c34:	push   eax
  415c35:	out    dx,eax
  415c36:	aas    
  415c37:	repz and eax,0x83e
  415c3d:	add    BYTE PTR [eax+0x46],al
  415c40:	add    ch,al
  415c42:	xor    DWORD PTR [edi-0x6c],esp
  415c45:	std    
  415c46:	and    ebp,DWORD PTR [ecx-0x12]
  415c49:	neg    esi
  415c4b:	fild   WORD PTR [ebx]
  415c4d:	xchg   DWORD PTR [esi],esi
  415c4f:	js     0x415bd1
  415c51:	clc    
  415c52:	je     0x415bde
  415c54:	std    
  415c55:	xor    BYTE PTR [ebx],dh
  415c57:	je     0x415c72
  415c59:	mov    DWORD PTR [esi],ebx
  415c5b:	ins    BYTE PTR es:[edi],dx
  415c5c:	out    dx,al
  415c5d:	aas    
  415c5e:	repz lock cs push ecx
  415c62:	push   dx
  415c64:	xchg   ebp,eax
  415c65:	dec    edi
  415c66:	mov    al,ds:0xa2ec461a
  415c6b:	dec    esp
  415c6c:	xor    BYTE PTR [ebp+0x48019fe5],bh
  415c72:	pushf  
  415c73:	outs   dx,DWORD PTR ds:[esi]
  415c74:	mov    bl,BYTE PTR [ebx-0x5]
  415c77:	push   ss
  415c78:	ss cld 
  415c7a:	and    al,0xe9
  415c7c:	jg     0x415c76
  415c7e:	sbb    al,0x52
  415c80:	inc    eax
  415c81:	std    
  415c82:	inc    BYTE PTR [esi]
  415c84:	sti    
  415c85:	in     eax,dx
  415c86:	int3   
  415c87:	push   es
  415c88:	fdivr  st(5),st
  415c8a:	iret   
  415c8b:	push   es
  415c8c:	out    0xe,eax
  415c8e:	lds    edi,FWORD PTR [ebp-0x5c]
  415c91:	xchg   edi,eax
  415c92:	mov    edx,0xd4e77bc5
  415c97:	fistp  WORD PTR [ebp-0x5381196c]
  415c9d:	or     ebx,DWORD PTR [edx]
  415c9f:	les    esi,FWORD PTR [ebx-0x20]
  415ca2:	add    BYTE PTR [eax],al
  415ca4:	add    BYTE PTR [ebx+0x34],al
  415ca7:	je     0x415cf2
  415ca9:	iret   
  415caa:	aaa    
  415cab:	ficomp WORD PTR [ecx]
  415cad:	(bad)  
  415cae:	mov    BYTE PTR [esp+edi*8+0x23],bl
  415cb2:	xor    al,0x36
  415cb4:	xchg   ebx,eax
  415cb5:	inc    eax
  415cb6:	pop    esi
  415cb8:	mov    edx,0xff33c770
  415cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cbe:	adc    bl,bh
  415cc0:	fwait
  415cc1:	out    0x27,eax
  415cc3:	scas   al,BYTE PTR es:[edi]
  415cc4:	xchg   ebx,eax
  415cc5:	ins    BYTE PTR es:[edi],dx
  415cc6:	sub    ch,bh
  415cc8:	xchg   edx,eax
  415cc9:	add    BYTE PTR [edi-0xf170662],cl
  415ccf:	es add al,0x6a
  415cd2:	inc    edx
  415cd3:	fbstp  TBYTE PTR [edx]
  415cd5:	adc    eax,0xf7c6b02c
  415cda:	push   es
  415cdb:	adc    al,0x7f
  415cdd:	push   edi
  415cde:	test   BYTE PTR [ebx+0x1630c200],al
  415ce4:	(bad)  
  415ce5:	xchg   esp,eax
  415ce6:	lahf   
  415ce7:	mov    BYTE PTR [esi+ecx*2+0x4b296a88],cl
  415cee:	pop    es
  415cef:	bound  ebp,QWORD PTR [esi+esi*1-0x14fbacbe]
  415cf6:	push   es
  415cf7:	out    0xc9,eax
  415cf9:	mov    al,0x87
  415cfb:	out    0x92,eax
  415cfd:	mov    al,ds:0xfa640092
  415d02:	mov    gs,eax
  415d04:	mov    ah,0xe2
  415d06:	mov    ebp,edi
  415d08:	jb     0x415d0a
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	loop   0x415c9c
  415d0e:	test   BYTE PTR [ecx],ch
  415d10:	jmp    0x415cf6
  415d12:	mov    ch,BYTE PTR [esp+eiz*2-0xf7caac9]
  415d19:	sbb    al,0x2e
  415d1b:	call   0x730:0xd9ebf381
  415d22:	mov    ecx,edi
  415d24:	jne    0x415cae
  415d26:	ins    DWORD PTR es:[edi],dx
  415d27:	je     0x415d1b
  415d29:	mov    BYTE PTR [ebx-0x1a],al
  415d2c:	jo     0x415d39
  415d2e:	std    
  415d2f:	jmp    0xfede:0xeee9b8de
  415d36:	pop    ebp
  415d37:	fs pop edx
  415d39:	adc    cl,BYTE PTR [eax]
  415d3b:	push   ds
  415d3c:	(bad)
  415d40:	adc    ebp,0xf3801ffc
  415d46:	and    ebx,ebx
  415d48:	xor    BYTE PTR [edi],al
  415d4a:	mov    DWORD PTR [esi-0x4fa6d73f],ebp
  415d50:	lods   eax,DWORD PTR ds:[esi]
  415d51:	xor    ecx,DWORD PTR [ecx+0x3b86c785]
  415d57:	inc    ecx
  415d58:	stos   DWORD PTR es:[edi],eax
  415d59:	inc    ebp
  415d5a:	add    cl,ch
  415d5c:	or     ecx,edi
  415d5e:	push   ebp
  415d5f:	aas    
  415d60:	cwde   
  415d61:	ret    
  415d62:	inc    ecx
  415d63:	jmp    0x7d54e782
  415d68:	pop    esi
  415d69:	(bad)  
  415d6a:	jmp    FWORD PTR [eax+0x23]
  415d6d:	pop    edi
  415d6e:	ret    
  415d6f:	stos   BYTE PTR es:[edi],al
  415d70:	add    BYTE PTR [eax],al
  415d72:	add    al,dh
  415d74:	push   es
  415d75:	jae    0x415d6a
  415d77:	pop    eax
  415d78:	repz dec si
  415d7b:	popa   
  415d7c:	add    al,0x0
  415d7f:	outs   dx,BYTE PTR ds:[esi]
  415d80:	xchg   edx,eax
  415d81:	les    eax,FWORD PTR ds:0x3fbe76
  415d87:	jo     0x415d36
  415d89:	ds add ah,cl
  415d8c:	(bad)  
  415d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8e:	lds    ebx,FWORD PTR [ecx+0x3]
  415d91:	std    
  415d92:	push   ebp
  415d93:	in     eax,0x8e
  415d95:	in     eax,dx
  415d96:	adc    cl,BYTE PTR [edx+0x3]
  415d99:	pop    esi
  415d9a:	lea    ecx,[edi+0x77]
  415d9d:	push   eax
  415d9e:	jmp    FWORD PTR [edi-0x7a]
  415da1:	mov    BYTE PTR [ebp-0x1e],al
  415da4:	and    al,0x0
  415da6:	(bad)  
  415da7:	(bad)  
  415da8:	xchg   esi,eax
  415da9:	xor    BYTE PTR [eax],al
  415dab:	retf   0xe80a
  415dae:	sbb    eax,0x50fb98d2
  415db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db4:	push   ds
  415db5:	or     bh,bh
  415db7:	mov    edi,0xca40114e
  415dbc:	(bad)  
  415dbd:	shl    BYTE PTR [eax+ecx*8+0x22],0xa0
  415dc2:	jbe    0x415d9e
  415dc4:	or     bh,bl
  415dc6:	jne    0x415d5e
  415dc8:	xchg   edi,eax
  415dc9:	adc    DWORD PTR [ebx+edi*4],ecx
  415dcc:	retf   0x31ff
  415dcf:	pop    edx
  415dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd1:	add    dh,BYTE PTR [eax+0x8c2c19b]
  415dd7:	add    BYTE PTR [eax],al
  415dd9:	add    BYTE PTR [edx+0x9ec873d],cl
  415ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de0:	push   eax
  415de1:	push   0xfffd825a
  415de6:	adc    BYTE PTR [edx+0x1e5ff59],0x41
  415ded:	lock iret 
  415def:	dec    edx
  415df0:	jno    0x415e01
  415df2:	and    BYTE PTR [edx-0x7f11ea04],al
  415df8:	cmp    eax,0xc421f300
  415dfd:	out    0xb4,eax
  415dff:	outs   dx,BYTE PTR ds:[esi]
  415e00:	add    DWORD PTR [eax],eax
  415e02:	rol    BYTE PTR [eax-0xd43a93f],0xc
  415e09:	div    DWORD PTR ds:0x490089b3
  415e0f:	jmp    0xb0b96658
  415e14:	stc    
  415e15:	xchg   BYTE PTR [esi-0x10bc84bd],ch
  415e1b:	call   0xabab6663
  415e20:	mov    eax,ds:0xc8643689
  415e25:	inc    ebx
  415e26:	(bad)  [ecx+0x1]
  415e29:	add    bl,dh
  415e2b:	bnd ret 
  415e2d:	je     0x415e18
  415e2f:	out    0x44,al
  415e31:	in     al,0xb4
  415e33:	xor    bl,BYTE PTR [ecx+eax*1-0x7efe900d]
  415e3a:	push   esi
  415e3b:	fs add esi,eax
  415e3e:	add    BYTE PTR [eax],al
  415e40:	add    BYTE PTR [esi],ch
  415e42:	push   ebp
  415e43:	add    edi,esp
  415e45:	into   
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	add    DWORD PTR [eax],eax
  415e49:	outs   dx,BYTE PTR ds:[esi]
  415e4a:	scas   eax,DWORD PTR es:[edi]
  415e4b:	adc    eax,0x2b77014
  415e50:	or     eax,0x1bd6e
  415e55:	repz clc 
  415e57:	adc    eax,0xfc42780c
  415e5c:	mov    bh,dh
  415e5e:	xchg   esi,eax
  415e5f:	pushf  
  415e60:	pop    es
  415e61:	push   0xce88fc1a
  415e66:	jnp    0x415ee6
  415e68:	jnp    0x415ed5
  415e6a:	repnz inc ebp
  415e6c:	mov    al,0xc3
  415e6e:	cld    
  415e6f:	push   ss
  415e70:	or     BYTE PTR [ebp+edi*2+0x5],dl
  415e74:	std    
  415e75:	out    0x6,al
  415e77:	inc    edi
  415e78:	test   BYTE PTR [edi+eax*1],0x64
  415e7c:	ret    
  415e7d:	out    dx,al
  415e7e:	mov    ecx,DWORD PTR [ebx+eax*1-0xd]
  415e82:	push   es
  415e83:	push   ebp
  415e84:	inc    esi
  415e85:	arpl   WORD PTR [edi],ax
  415e87:	mov    ebx,0x72cb7a20
  415e8c:	xchg   BYTE PTR [ebx],dh
  415e8e:	cli    
  415e8f:	test   eax,0x407ab07a
  415e94:	mov    bl,0xf3
  415e96:	push   es
  415e97:	out    0x7c,eax
  415e99:	mov    eax,0x87ba641e
  415e9e:	and    ah,BYTE PTR [edx+0x2]
  415ea1:	push   0x34fadb
  415ea6:	add    BYTE PTR [eax],al
  415ea8:	out    dx,al
  415ea9:	cli    
  415eaa:	div    BYTE PTR [ebx]
  415eac:	cmp    eax,0xb387d784
  415eb1:	adc    al,0x6b
  415eb3:	push   edi
  415eb4:	repz push es
  415eb6:	out    0x7c,eax
  415eb8:	xor    BYTE PTR [ebx+0x6c],dh
  415ebb:	les    eax,FWORD PTR [ebp+0x1f]
  415ebe:	ficomp WORD PTR [ecx]
  415ec0:	out    0x8f,eax
  415ec2:	cmp    al,0x94
  415ec4:	mov    dh,0xfa
  415ec6:	idiv   BYTE PTR [edx-0x46]
  415ec9:	outs   dx,DWORD PTR ds:[esi]
  415eca:	(bad)  
  415ecb:	mov    ah,BYTE PTR [esi-0x113b9c7c]
  415ed1:	mov    bl,BYTE PTR [esp+eax*1-0xd]
  415ed5:	push   es
  415ed6:	bound  eax,QWORD PTR [esi]
  415ed8:	sbb    eax,DWORD PTR [edi]
  415eda:	out    dx,eax
  415edb:	add    esi,ebx
  415edd:	adc    DWORD PTR [esp+edx*4],0x6a
  415ee1:	push   ebp
  415ee2:	xchg   esi,eax
  415ee3:	xor    al,0xef
  415ee5:	lea    esp,[eax+eiz*4]
  415ee8:	jo     0x415f31
  415eea:	push   es
  415eeb:	pop    edi
  415eec:	fcom   QWORD PTR [ecx]
  415eee:	jle    0x415ee9
  415ef0:	add    BYTE PTR ds:0x3fef2900,bl
  415ef6:	xor    esi,eax
  415ef8:	lock push es
  415efa:	jae    0x415ed5
  415efc:	pop    esi
  415efd:	enter  0x9af,0xdb
  415f01:	pop    ds
  415f02:	mov    DWORD PTR [eax+edi*2-0x562b3f78],ebp
  415f09:	ds add eax,0xbc
  415f0f:	and    eax,0x3dfeee
  415f14:	or     edi,ebp
  415f16:	fdivr  QWORD PTR [eax+0x18]
  415f19:	inc    eax
  415f1a:	jmp    0xb9b4a69a
  415f1f:	cs or  bh,bh
  415f22:	push   0x9bff7ee2
  415f27:	out    dx,al
  415f28:	xchg   BYTE PTR [ebx+0x10],bh
  415f2b:	idiv   dl
  415f2d:	cmp    al,BYTE PTR [esi]
  415f2f:	or     dl,BYTE PTR [edi]
  415f31:	mov    esp,DWORD PTR [esp+ecx*4+0x6598fff0]
  415f38:	mul    edi
  415f3a:	out    dx,al
  415f3b:	retf   
  415f3c:	mov    bh,0x12
  415f3e:	sub    edi,ebp
  415f40:	aas    
  415f41:	add    ch,al
  415f43:	lock push es
  415f45:	or     eax,0xfd81ee6c
  415f4a:	into   
  415f4b:	mov    ch,0xc7
  415f4d:	repz xor eax,0xd2fd838c
  415f53:	mov    DWORD PTR [esi],esi
  415f55:	(bad)  
  415f56:	push   0x68
  415f58:	or     BYTE PTR ds:0x7ecbb754,cl
  415f5e:	mov    BYTE PTR [ebx+0x5],al
  415f61:	add    cl,ch
  415f63:	jno    0x415f28
  415f65:	push   es
  415f66:	pusha  
  415f67:	xor    edi,DWORD PTR [ebx-0x17]
  415f6a:	in     eax,0x36
  415f6c:	(bad)  
  415f6d:	cld    
  415f6e:	add    BYTE PTR [ebx-0x6c],bl
  415f71:	jno    0x415f63
  415f73:	add    BYTE PTR [eax],al
  415f75:	add    BYTE PTR [edx-0x2200a40e],al
  415f7b:	mov    BYTE PTR [ecx-0xc],bh
  415f7e:	pop    edx
  415f7f:	xor    al,0x5e
  415f81:	pop    ebx
  415f82:	es cmp ah,0x75
  415f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f87:	xchg   esp,eax
  415f88:	adc    DWORD PTR [esp+esi*1],esp
  415f8b:	(bad)  
  415f8c:	dec    DWORD PTR [ecx-0x3d3a6ba9]
  415f92:	inc    esi
  415f93:	pop    es
  415f94:	push   esi
  415f95:	mov    esp,DWORD PTR [edi]
  415f97:	fist   DWORD PTR [ebx]
  415f99:	inc    eax
  415f9a:	or     bh,BYTE PTR [edx+ebp*2]
  415f9d:	add    ebp,ebx
  415f9f:	sbb    esp,DWORD PTR [esp+edx*1]
  415fa2:	loope  0x416019
  415fa4:	mov    BYTE PTR [esi+esi*1-0x7d],dl
  415fa8:	mov    bh,cl
  415faa:	repnz shl bh,0x0
  415fae:	fimul  DWORD PTR [edx+0x20e174c0]
  415fb4:	call   DWORD PTR [esi-0x23]
  415fb7:	mov    ebx,0x9147f887
  415fbc:	jno    0x415fa4
  415fbe:	jge    0x415ff4
  415fc0:	ret    0xda08
  415fc3:	cmp    DWORD PTR [edi-0x750b614],eax
  415fc9:	sub    DWORD PTR [esi-0x1aa9af81],0xffffff93
  415fd0:	jno    0x415fde
  415fd2:	and    DWORD PTR [ebp-0x25d8a05],edx
  415fd8:	jae    0x415ffe
  415fda:	add    BYTE PTR [eax],al
  415fdc:	add    dh,ah
  415fde:	std    
  415fdf:	dec    ebx
  415fe0:	and    al,0xa2
  415fe2:	xchg   ebx,eax
  415fe3:	adc    eax,edi
  415fe5:	mov    esi,eax
  415fe7:	dec    DWORD PTR [edx+0xfd78ab2]
  415fed:	repz repz jbe 0x415ff1
  415ff1:	rep outs dx,DWORD PTR ds:[esi]
  415ff3:	cld    
  415ff4:	mov    ah,0xb6
  415ff6:	ja     0x416076
  415ff8:	inc    esp
  415ff9:	pop    ss
  415ffa:	push   0x53dffd31
  415fff:	cmc    
  416000:	or     al,0x84
  416002:	sub    eax,DWORD PTR [eax]
  416004:	push   0xfffffff1
  416006:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416008:	adc    al,ch
  41600a:	cs xor al,0x6a
  41600d:	repz inc edi
  41600f:	test   DWORD PTR [eax],eax
  416011:	rep outs dx,DWORD PTR ds:[esi]
  416013:	xor    ch,bh
  416015:	(bad)  
  416016:	jae    0x41600d
  416018:	aas    
  416019:	repz jmp 0xe9a8:0x7cef73c3
  416021:	scas   eax,DWORD PTR es:[edi]
  416022:	in     al,0x47
  416024:	and    al,0xeb
  416026:	in     al,dx
  416027:	mov    edi,ebp
  416029:	xchg   BYTE PTR [edx+0x7cf73378],dh
  41602f:	inc    ecx
  416030:	add    BYTE PTR [ecx+0x20],bl
  416033:	das    
  416034:	xchg   DWORD PTR [edi+0x54],eax
  416037:	in     eax,dx
  416038:	cld    
  416039:	(bad)
  41603c:	inc    DWORD PTR [eax]
  41603e:	mov    al,0x1
  416040:	or     eax,DWORD PTR [eax]
  416042:	add    BYTE PTR [eax],al
  416044:	rep outs dx,DWORD PTR ds:[esi]
  416046:	add    DWORD PTR [eax],ecx
  416048:	and    edx,esi
  41604a:	xchg   ebx,eax
  41604b:	push   ecx
  41604c:	mov    esp,0xe7738cb8
  416051:	in     al,0x34
  416053:	and    al,0xd3
  416055:	push   eax
  416056:	push   ss
  416057:	or     BYTE PTR [eax+0x3b],bh
  41605a:	call   0x8b17eb76
  41605f:	std    
  416060:	xchg   esp,eax
  416061:	lds    edx,FWORD PTR [ebx-0x13f3f803]
  416067:	mov    BYTE PTR [ebx-0x2f4a59fa],ch
  41606d:	sbb    DWORD PTR [esi+0xd67e8c],0xc2fa6e94
  416077:	out    dx,eax
  416078:	addr16 pop ecx
  41607a:	xchg   edx,eax
  41607b:	add    eax,0x1f37870
  416080:	ins    BYTE PTR es:[edi],dx
  416081:	or     BYTE PTR [esi],dl
  416083:	cs jp  0x4160cb
  416086:	adc    bh,BYTE PTR [ecx+0x50]
  416089:	jecxz  0x4160b3
  41608b:	sti    
  41608c:	cmp    al,0xd4
  41608e:	imul   edi,DWORD PTR [ebx],0x42
  416091:	fdivr  DWORD PTR [ebp-0x29f7db80]
  416097:	cmp    eax,0xa8f978e2
  41609c:	push   0xc5983dce
  4160a1:	lea    ebp,[ebx-0x1c730319]
  4160a7:	add    al,BYTE PTR [eax]
  4160a9:	add    BYTE PTR [eax],al
  4160ab:	xlat   BYTE PTR ds:[ebx]
  4160ac:	ss jecxz 0x4160a9
  4160af:	xchg   DWORD PTR [esi],edi
  4160b1:	arpl   WORD PTR [eax-0x3c16e581],bp
  4160b7:	das    
  4160b8:	push   cs
  4160b9:	(bad)  
  4160ba:	push   edi
  4160bc:	shl    BYTE PTR [edi],0x6a
  4160bf:	dec    ecx
  4160c0:	or     eax,0x92d6949e
  4160c5:	test   eax,0xde5c7702
  4160ca:	dec    ebp
  4160cb:	mov    bl,0x10
  4160cd:	jnp    0x416096
  4160cf:	bnd jbe 0x416102
  4160d2:	xchg   DWORD PTR [eax+eax*4+0x54e2b956],edi
  4160d9:	inc    ecx
  4160da:	(bad)  
  4160db:	jnp    0x416126
  4160dd:	and    BYTE PTR [ebx-0x6c567374],dl
  4160e3:	mov    ebx,0x37a9001c
  4160e8:	outs   dx,BYTE PTR ds:[esi]
  4160e9:	add    bh,bl
  4160eb:	mov    al,0xe2
  4160ed:	pop    ebp
  4160ee:	inc    edx
  4160ef:	mov    ch,0xb
  4160f1:	add    BYTE PTR [ebx],dl
  4160f3:	jg     0x4160ce
  4160f5:	cmp    BYTE PTR [eax-0x56cef9fc],ch
  4160fb:	sub    al,0xd6
  4160fd:	mov    ah,ch
  4160ff:	icebp  
  416100:	mov    WORD PTR ds:0x9f43dbd,es
  416106:	lds    edi,FWORD PTR [esp+edi*1]
  416109:	add    dh,bh
  41610b:	repnz xor eax,0xc2c0
  416111:	add    BYTE PTR ds:0xbbb70db0,dh
  416117:	stc    
  416118:	inc    BYTE PTR [ecx+0x2c]
  41611b:	mov    es,WORD PTR [esi]
  41611d:	or     eax,0x506f63f
  416122:	cs sti 
  416124:	add    ah,BYTE PTR [edi+0x38727725]
  41612a:	cmp    al,0x77
  41612c:	je     0x4160be
  41612e:	jo     0x416171
  416130:	pop    esi
  416131:	pushf  
  416132:	int3   
  416133:	adc    DWORD PTR [esi+0x29507428],esi
  416139:	es mov esp,0x21a07347
  41613f:	outs   dx,DWORD PTR ds:[esi]
  416140:	push   eax
  416141:	push   es
  416142:	push   0x3298481
  416147:	inc    edx
  416148:	inc    esi
  416149:	bound  esi,QWORD PTR [ecx-0x4696f993]
  41614f:	loope  0x4161c4
  416151:	in     al,dx
  416152:	xor    bh,BYTE PTR [esi]
  416154:	icebp  
  416155:	pop    ebx
  416156:	popa   
  416157:	cmp    eax,0x8ecb5df1
  41615c:	into   
  41615d:	add    ah,BYTE PTR [edi-0x7b]
  416160:	test   DWORD PTR [eax],0x461f1988
  416166:	and    DWORD PTR [esi+0x6100be7],edi
  41616c:	cmp    al,0x30
  41616e:	enter  0x3981,0x39
  416172:	fld    QWORD PTR ds:0x3b46
  416178:	add    BYTE PTR [ecx+0x19],bl
  41617b:	in     eax,dx
  41617c:	mov    ebx,DWORD PTR [eax+eiz*2+0x7f8283be]
  416183:	outs   dx,DWORD PTR ds:[esi]
  416184:	push   es
  416185:	loope  0x4161cc
  416187:	daa    
  416188:	mov    DWORD PTR [ecx-0x1b3fd0f7],0xd155bf2f
  416192:	xchg   edi,eax
  416193:	jg     0x416181
  416195:	fidiv  WORD PTR [edi]
  416197:	push   esi
  416198:	mov    ebx,DWORD PTR [edx+0x6d084100]
  41619e:	add    al,BYTE PTR [ecx-0x8]
  4161a1:	mov    cl,0x6f
  4161a3:	mov    BYTE PTR [ebp-0x4e],bh
  4161a6:	add    dh,al
  4161a8:	call   0x3cedf3
  4161ad:	xchg   ecx,eax
  4161ae:	stos   DWORD PTR es:[edi],eax
  4161af:	sbb    ebx,0x45fc793f
  4161b5:	sar    BYTE PTR ds:0x13fafe7f,cl
  4161bb:	jecxz  0x4161f0
  4161bd:	sbb    dh,BYTE PTR [ecx]
  4161bf:	pop    esi
  4161c0:	pop    ebx
  4161c1:	adc    eax,DWORD PTR [eax+ecx*1+0x0]
  4161c5:	rcl    DWORD PTR [ebp+0xac67d80],0x85
  4161cc:	jne    0x416194
  4161ce:	rol    edi,1
  4161d0:	add    dl,bl
  4161d2:	or     dh,BYTE PTR [ecx+0x4]
  4161d5:	adc    DWORD PTR [ebx+0x3641e372],edx
  4161db:	clc    
  4161dc:	add    DWORD PTR [eax],0x0
  4161df:	add    bl,dh
  4161e1:	retf   0xfff7
  4161e4:	ja     0x4161fa
  4161e6:	sti    
  4161e7:	ss ss inc esp
  4161ea:	push   ss
  4161eb:	add    DWORD PTR [edx+0x23],ebp
  4161ee:	mov    BYTE PTR [ecx+0x7604b40e],al
  4161f4:	in     al,0xe8
  4161f6:	xor    al,0xc
  4161f8:	push   0xb229882b
  4161fd:	jmp    0x4161c6
  4161ff:	cs pop ebx
  416201:	cwde   
  416202:	mov    bh,ch
  416204:	fs jecxz 0x4161ca
  416207:	jae    0x4161f1
  416209:	test   BYTE PTR ds:0xf823680c,bh
  41620f:	cmp    BYTE PTR [esi+0x44df15f3],dh
  416215:	jae    0x41620c
  416217:	push   ebp
  416218:	dec    ebx
  416219:	sub    BYTE PTR ds:0xcdcf300,0xf8
  416220:	js     0x4161fa
  416222:	jp     0x4161e5
  416224:	sbb    ecx,DWORD PTR [edx+0x6f]
  416227:	std    
  416228:	sbb    al,0x5a
  41622a:	inc    DWORD PTR [esi+0x73753bae]
  416230:	aas    
  416231:	cwde   
  416232:	cdq    
  416233:	cs inc edx
  416235:	jo     0x416238
  416237:	xor    DWORD PTR [ecx],esp
  416239:	call   0x6ff4d889
  41623e:	jl     0x416208
  416240:	sub    BYTE PTR [edx],bl
  416242:	test   DWORD PTR [edx+0x0],0x56b40000
  416249:	cs cld 
  41624b:	inc    edx
  41624c:	jne    0x41628c
  41624e:	inc    ebx
  41624f:	xlat   BYTE PTR ds:[ebx]
  416250:	lahf   
  416251:	jl     0x416219
  416253:	and    esp,DWORD PTR [edx+0x6fb96833]
  416259:	add    DWORD PTR [eax],eax
  41625b:	retf   
  41625c:	push   es
  41625d:	int    0x4c
  41625f:	repz push es
  416261:	push   0xffffffbf
  416263:	or     edx,esi
  416265:	mov    esi,0xce7e3cbe
  41626a:	mov    BYTE PTR [eax],ah
  41626c:	jnp    0x41623d
  41626e:	inc    esi
  41626f:	cmp    al,0x7e
  416271:	mov    esi,0x20b307c
  416276:	aas    
  416277:	sti    
  416278:	or     DWORD PTR [edx-0x6f80cffc],ebp
  41627e:	aas    
  41627f:	jbe    0x4162fe
  416281:	sahf   
  416282:	cs jp  0x4162ef
  416285:	push   0xe708b397
  41628a:	add    eax,ebp
  41628c:	aad    0xe
  41628e:	scas   al,BYTE PTR es:[edi]
  41628f:	repz push es
  416291:	out    0x1d,eax
  416293:	repz mov ebp,0x6b250cf
  416299:	push   ss
  41629a:	mov    eax,esp
  41629c:	xor    bh,ch
  41629e:	inc    ebx
  41629f:	xrelease mov DWORD PTR [ebx],esp
  4162a2:	neg    DWORD PTR [edx+0x5e79bf08]
  4162a8:	leave  
  4162a9:	out    0x1b,al
  4162ab:	add    BYTE PTR [eax],al
  4162ad:	add    ah,ah
  4162af:	daa    
  4162b0:	dec    edi
  4162b1:	cmc    
  4162b2:	or     al,0xb4
  4162b4:	lds    ecx,FWORD PTR [eax-0x3a8374f2]
  4162ba:	or     BYTE PTR [ebp+0x2e],bh
  4162bd:	fwait
  4162be:	mov    ecx,0xf003e79d
  4162c3:	pop    eax
  4162c4:	call   0xfb3255cc
  4162c9:	xor    ebx,DWORD PTR [ecx+0x7]
  4162cc:	pop    esp
  4162cd:	push   cs
  4162ce:	mov    ds:0xcb882f88,eax
  4162d3:	test   eax,0x82ce885a
  4162d8:	add    BYTE PTR [ecx],ch
  4162da:	cli    
  4162db:	and    eax,0xbf88748b
  4162e0:	mov    ch,0xe9
  4162e2:	lock push es
  4162e4:	call   0x48aa4e
  4162e9:	xor    dh,BYTE PTR fs:[edi-0x28a29db0]
  4162f0:	push   esp
  4162f1:	sar    DWORD PTR [esp+ecx*8],1
  4162f4:	(bad)  
  4162f5:	call   0x5c4eaa6d
  4162fa:	scas   eax,DWORD PTR es:[edi]
  4162fb:	add    eax,0x34
  4162fe:	jg     0x416337
  416300:	ror    BYTE PTR [edi],0x10
  416303:	pop    ds
  416304:	mov    ch,0x2a
  416306:	neg    ecx
  416308:	mov    dh,0x87
  41630a:	out    dx,al
  41630b:	push   es
  41630c:	add    BYTE PTR [edx+esi*2+0x49],bl
  416310:	sti    
  416311:	xchg   BYTE PTR [eax],al
  416313:	add    BYTE PTR [eax],al
  416315:	ins    BYTE PTR es:[edi],dx
  416316:	ffree  st(5)
  416318:	jmp    0xfc882a0d
  41631d:	ja     0x4162d6
  41631f:	call   FWORD PTR [edi+0x6c068e30]
  416325:	das    
  416326:	repz push es
  416328:	mov    ecx,0xe889c788
  41632d:	lock test DWORD PTR [esi],esp
  416330:	jmp    0x817cea66
  416335:	xor    al,dh
  416337:	(bad)  
  416338:	call   0x77725b1b
  41633d:	push   edi
  41633e:	dec    eax
  41633f:	inc    ecx
  416340:	jmp    0x1554dd13
  416345:	add    DWORD PTR [eax+eax*1],edi
  416348:	imul   edi,DWORD PTR [edx-0xf553c4d],0x78f67306
  416352:	xor    eax,0x83ed00fd
  416357:	test   al,al
  416359:	inc    esi
  41635a:	jb     0x4162dc
  41635c:	and    eax,0x3f45fe
  416361:	retf   0x1b9
  416364:	mov    eax,0xffc887
  416369:	in     al,0x83
  41636b:	adc    eax,esi
  41636d:	test   al,0xc7
  41636f:	jmp    DWORD PTR [edi+0x3c]
  416372:	int    0x3e
  416374:	add    BYTE PTR [eax+0x3],al
  416377:	push   0x58
  41637c:	jle    0x416346
  41637e:	(bad)  
  41637f:	(bad)  
  416380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416381:	das    
  416382:	or     eax,0xf0008a40
  416387:	test   DWORD PTR [ebx+ecx*1+0x17],edx
  41638b:	push   0xffffff8d
  41638d:	sub    ebx,edi
  41638f:	adc    eax,0x3d786a
  416394:	xlat   BYTE PTR ds:[ebx]
  416395:	inc    edi
  416396:	je     0x4163b7
  416398:	das    
  416399:	xchg   DWORD PTR [eax],eax
  41639b:	add    BYTE PTR [edx+0xb],bl
  41639e:	sbb    BYTE PTR [esi-0x43],dl
  4163a1:	jbe    0x416340
  4163a3:	adc    cl,BYTE PTR [edx]
  4163a5:	add    ebp,DWORD PTR [edi]
  4163a7:	shr    BYTE PTR [esi+eax*4],0xc0
  4163ab:	je     0x4163c9
  4163ad:	add    BYTE PTR [esp+0x16],cl
  4163b1:	cli    
  4163b2:	cld    
  4163b3:	scas   eax,DWORD PTR es:[edi]
  4163b4:	or     esp,DWORD PTR [eax-0x5f3b74fa]
  4163ba:	jmp    0x4873df1
  4163bf:	add    BYTE PTR [edi+0x0],ah
  4163c2:	in     al,dx
  4163c3:	cmp    DWORD PTR [esi-0x6dc28289],0x46
  4163ca:	aas    
  4163cb:	add    dl,bl
  4163cd:	sub    al,0x53
  4163cf:	jne    0x4163c4
  4163d1:	pop    esp
  4163d2:	inc    ebx
  4163d3:	fdiv   DWORD PTR [esi-0x2ba9fe53]
  4163d9:	pop    ebx
  4163da:	xchg   ebp,eax
  4163db:	adc    dh,BYTE PTR [ebx]
  4163dd:	jo     0x416360
  4163df:	cmp    eax,DWORD PTR [eax]
  4163e1:	add    BYTE PTR [eax],al
  4163e3:	mov    ebp,DWORD PTR [ebx]
  4163e5:	inc    edx
  4163e6:	add    bl,dh
  4163e8:	repnz in eax,dx
  4163ea:	out    0x91,eax
  4163ec:	bound  eax,QWORD PTR [ebx+0x10b077fd]
  4163f2:	push   cs
  4163f3:	jo     0x416400
  4163f5:	dec    eax
  4163f6:	ret    
  4163f7:	xor    BYTE PTR [eax+0x1],dh
  4163fa:	(bad)  
  4163fb:	out    dx,al
  4163fc:	xchg   DWORD PTR [ebp+0x2b6ef341],edi
  416402:	std    
  416403:	fidivr WORD PTR [edi-0x3a0cc00e]
  416409:	add    DWORD PTR [eax+0x66],ebx
  41640c:	sbb    edx,DWORD PTR [eax+ebp*8-0x27ceba0]
  416413:	js     0x416440
  416415:	cld    
  416416:	add    al,BYTE PTR [ebx-0x34fffe90]
  41641c:	ins    DWORD PTR es:[edi],dx
  41641d:	add    al,BYTE PTR [eax]
  41641f:	repz pop ds
  416421:	ja     0x4163e9
  416423:	pop    ebx
  416424:	adc    eax,0x63cfd0d
  416429:	add    BYTE PTR [ebx-0x76ce8c52],cl
  41642f:	xor    eax,0x247335d8
  416434:	shl    DWORD PTR [ebx+edi*2+0x1f],1
  416438:	in     eax,0xbd
  41643a:	call   0xfdc61f4c
  41643f:	cdq    
  416440:	push   ebx
  416441:	test   BYTE PTR [ebx-0x1d],dh
  416444:	xor    BYTE PTR ds:0xfc,cl
  41644a:	cld    
  41644b:	push   edx
  41644c:	xor    eax,0xe706b316
  416451:	xor    BYTE PTR [edi-0x24418df6],0x5
  416458:	pushf  
  416459:	test   dh,bl
  41645b:	fldcw  WORD PTR [edx+edi*4+0x2ee70ab1]
  416462:	jp     0x4164ce
  416464:	push   0xe7032f98
  416469:	add    esi,DWORD PTR [ebx+0x3b]
  41646c:	push   edi
  41646d:	push   esp
  41646e:	xor    al,BYTE PTR [edi]
  416470:	call   0x7213a9a5
  416475:	stos   DWORD PTR es:[edi],eax
  416476:	push   ds
  416477:	add    bl,BYTE PTR [ecx]
  416479:	les    edx,FWORD PTR [ebx+edx*1-0x740cfc18]
  416480:	jl     0x416435
  416482:	mov    BYTE PTR [ecx-0x42],bh
  416485:	fwait
  416486:	jno    0x416423
  416488:	out    0x3,eax
  41648a:	push   0x7633a2c3
  41648f:	repz out dx,al
  416491:	js     0x4164c8
  416493:	(bad)  
  416494:	mov    ss,esp
  416496:	addr16 jns 0x41642f
  416499:	jle    0x4164d5
  41649b:	repz mov ebx,0x1742b076
  4164a1:	sbb    al,0xeb
  4164a3:	mov    cl,0x2a
  4164a5:	add    al,0xdb
  4164a7:	pop    es
  4164a8:	out    0x3,eax
  4164aa:	jae    0x416525
  4164ac:	aam    0xb
  4164ae:	add    BYTE PTR [eax],al
  4164b0:	add    dl,ah
  4164b2:	(bad)  
  4164b3:	out    0x8c,al
  4164b5:	dec    ebx
  4164b6:	sbb    al,0x27
  4164b8:	test   DWORD PTR [ebx],esi
  4164ba:	mov    esp,0x6f30245
  4164bf:	bound  esi,QWORD PTR [ebp+0x42e7072d]
  4164c5:	mov    ecx,0x399a3ff3
  4164ca:	push   es
  4164cb:	add    cl,ch
  4164cd:	lock xchg DWORD PTR [ebx-0x28493df],esp
  4164d4:	jmp    0x1fa1e93e
  4164d9:	outs   dx,DWORD PTR ds:[esi]
  4164da:	jp     0x41652c
  4164dc:	fs pop ebp
  4164de:	dec    edi
  4164df:	cld    
  4164e0:	push   cs
  4164e1:	outs   dx,DWORD PTR ds:[esi]
  4164e2:	outs   dx,DWORD PTR ds:[esi]
  4164e3:	lea    eax,[edi-0x10]
  4164e6:	push   es
  4164e7:	mov    DWORD PTR [esp+edi*4-0x71],esi
  4164eb:	shl    DWORD PTR [ebp+edi*1+0x4f],1
  4164ef:	cld    
  4164f0:	out    dx,al
  4164f1:	jo     0x416562
  4164f3:	retf   
  4164f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f5:	test   DWORD PTR [esi],0x4eefe27f
  4164fb:	add    cl,ch
  4164fd:	call   0x5b6f:0x91ea6a05
  416504:	cli    
  416505:	aas    
  416506:	xchg   cl,bh
  416508:	in     eax,0xe1
  41650a:	xchg   ebx,eax
  41650b:	mov    edi,0x88d8f543
  416510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416511:	test   DWORD PTR [eax+0x2a],edi
  416514:	test   al,0x0
  416516:	add    BYTE PTR [eax],al
  416518:	fisttp WORD PTR [esi]
  41651a:	add    al,ch
  41651c:	lock or DWORD PTR [esi+0x3ff13351],esi
  416523:	jmp    0xfc40df95
  416528:	or     BYTE PTR [ebx+eax*2-0x7c72df0f],cl
  41652f:	test   eax,0x19fd79bc
  416534:	fs inc esi
  416536:	mov    esp,eax
  416538:	cld    
  416539:	jg     0x4164ee
  41653b:	sub    DWORD PTR [ecx+edi*2-0x4603be03],esp
  416542:	add    cl,ch
  416544:	gs ja  0x4164ca
  416547:	add    ah,cl
  416549:	jge    0x416565
  41654b:	mov    ecx,0x1b4
  416550:	xchg   edi,eax
  416551:	(bad)  
  416552:	sar    ch,1
  416554:	lds    eax,FWORD PTR [ebx+0x43da00c6]
  41655a:	inc    esi
  41655b:	jne    0x416570
  41655d:	jmp    0x7587:0x8405ff1d
  416564:	mov    dh,0x8a
  416566:	pop    ecx
  416567:	or     ch,dh
  416569:	jge    0x416570
  41656b:	lea    ecx,[edi+0x5a5755bf]
  416571:	imul   edx,DWORD PTR ds:0xe80389b7,0xffffff94
  416578:	fiadd  DWORD PTR [ecx]
  41657a:	add    BYTE PTR [edx-0x4e000000],cl
  416580:	cmp    BYTE PTR [ecx+0xc],dh
  416583:	ds or  eax,0x5d48e856
  416589:	cld    
  41658a:	push   DWORD PTR [ebx-0xb]
  41658d:	cld    
  41658e:	call   FWORD PTR [edx+0x47d08196]
  416594:	test   bl,bh
  416596:	(bad)  
  416597:	mov    al,BYTE PTR [ebx]
  416599:	inc    eax
  41659a:	dec    ecx
  41659b:	psubd  mm1,QWORD PTR [ecx+0x586525c3]
  4165a2:	leave  
  4165a3:	mov    BYTE PTR [ebx],cl
  4165a5:	add    BYTE PTR [ebp-0x2f],dl
  4165a8:	out    0x7e,eax
  4165aa:	in     al,0x72
  4165ac:	sub    ah,0x4c
  4165af:	dec    esi
  4165b0:	add    eax,DWORD PTR [eax]
  4165b2:	push   ebx
  4165b3:	fcomp  QWORD PTR [ebx-0x76]
  4165b6:	mov    ah,0x2e
  4165b8:	arpl   si,di
  4165ba:	call   FWORD PTR [edx]
  4165bc:	jmp    0x416613
  4165be:	pushf  
  4165bf:	sbb    al,BYTE PTR [ebx]
  4165c1:	mov    DWORD PTR [ebx+esi*8+0x9],eax
  4165c5:	and    BYTE PTR [eax+0x14],dl
  4165c8:	push   edx
  4165c9:	or     DWORD PTR [ecx+0x2699d35],ecx
  4165cf:	add    eax,0xaf8b8238
  4165d4:	or     DWORD PTR [edi+ecx*2],edx
  4165d7:	mov    DWORD PTR [esi+0x36],ebp
  4165da:	fld    DWORD PTR [eax-0x18]
  4165dd:	add    eax,DWORD PTR [eax]
  4165df:	repz fucomip st,st(0)
  4165e2:	pop    ss
  4165e3:	add    BYTE PTR [eax],al
  4165e5:	add    BYTE PTR [ecx+eiz*4-0x5395afff],ah
  4165ec:	and    eax,0x25ac7a24
  4165f1:	and    ah,al
  4165f3:	pop    ebx
  4165f4:	icebp  
  4165f5:	rdpmc  
  4165f7:	pusha  
  4165f8:	mov    al,al
  4165fa:	ds pop edx
  4165fc:	nop
  4165fd:	inc    esp
  4165fe:	xlat   BYTE PTR ds:[ebx]
  4165ff:	jnp    0x4165d2
  416601:	mov    ch,BYTE PTR [edi]
  416603:	or     al,0x20
  416605:	push   eax
  416606:	outs   dx,BYTE PTR ds:[esi]
  416607:	and    al,0x28
  416609:	and    al,0x43
  41660b:	sar    edi,cl
  41660d:	and    ebp,edi
  41660f:	push   edi
  416610:	fidivr DWORD PTR [edi]
  416612:	repnz pop edi
  416614:	ins    BYTE PTR es:[edi],dx
  416615:	add    DWORD PTR [eax-0x58],esi
  416618:	jg     0x4165a1
  41661a:	das    
  41661b:	or     al,0x18
  41661d:	sub    DWORD PTR [ebx-0x53],0x6076840f
  416624:	add    DWORD PTR [eax],eax
  416626:	sbb    BYTE PTR [ecx+0x606e840f],ah
  41662c:	add    DWORD PTR [eax],eax
  41662e:	jo     0x41663c
  416630:	sub    BYTE PTR [eax],bl
  416632:	bnd jp 0x416667
  416635:	push   eax
  416636:	cmp    al,0x74
  416638:	and    eax,0x28046610
  41663d:	sbb    al,0x7e
  41663f:	pop    es
  416640:	fwait
  416641:	sub    bl,cl
  416643:	or     edi,esp
  416645:	add    esi,DWORD PTR [esi]
  416647:	mov    ecx,DWORD PTR [ebx]
  416649:	fadd   QWORD PTR [eax]
  41664b:	add    BYTE PTR [eax],al
  41664d:	repz push es
  41664f:	out    0x5,eax
  416651:	repz push es
  416653:	out    0x6b,eax
  416655:	fdiv   QWORD PTR [ebp-0x501fc19]
  41665b:	or     dl,BYTE PTR [eax]
  41665d:	push   0x77
  41665f:	aas    
  416660:	jae    0x4166a2
  416662:	jbe    0x41668a
  416664:	mov    ebx,DWORD PTR [edi+0x2b]
  416667:	jmp    0x41669d
  416669:	mov    edx,0xe3286b83
  41666e:	pop    es
  41666f:	out    0x3,eax
  416671:	and    eax,DWORD PTR [ebx+ebp*4-0x647fd8d9]
  416678:	daa    
  416679:	pop    ds
  41667a:	pop    edi
  41667b:	in     eax,dx
  41667c:	mov    esi,0xf86206f3
  416681:	rcr    BYTE PTR [edx],1
  416683:	and    dh,BYTE PTR [ebp+0x1f]
  416686:	push   es
  416687:	jb     0x416658
  416689:	rol    BYTE PTR [edx],1
  41668b:	bound  ebx,QWORD PTR [ecx+0x68]
  41668e:	retf   0xdc02
  416691:	xchg   esp,eax
  416692:	cmp    al,0x85
  416694:	add    esi,ebx
  416696:	and    DWORD PTR [eax+edx*1],0x63b49ba
  41669d:	ins    BYTE PTR es:[edi],dx
  41669e:	ss jo  0x416712
  4166a1:	ins    BYTE PTR es:[edi],dx
  4166a2:	jne    0x41668b
  4166a4:	mov    gs,WORD PTR [edi+0x2a]
  4166a7:	pop    es
  4166a8:	add    esi,ebx
  4166aa:	push   es
  4166ab:	pop    edi
  4166ac:	sbb    esi,DWORD PTR [ebx+0x7e13bf]
  4166b2:	add    BYTE PTR [eax],al
  4166b4:	jp     0x416680
  4166b6:	retf   0x5a0f
  4166b9:	sbb    al,BYTE PTR [eax+0x71]
  4166bc:	cmp    al,0x75
  4166be:	add    cl,ch
  4166c0:	mov    ah,BYTE PTR gs:[ecx+ecx*1]
  4166c4:	lock push es
  4166c6:	add    BYTE PTR [ecx+0x8],dh
  4166c9:	mov    DWORD PTR [esi-0x2c],0xb6c0379e
  4166d0:	adc    cl,dh
  4166d2:	mov    BYTE PTR [ebp+ebp*1+0x47],al
  4166d6:	or     cl,ch
  4166d8:	sbb    eax,0x1a98ec7e
  4166dd:	add    BYTE PTR [ebx+0x35],0x20
  4166e1:	(bad)  
  4166e3:	inc    eax
  4166e4:	ds jne 0x4166e4
  4166e7:	es ins DWORD PTR es:[edi],dx
  4166e9:	inc    edi
  4166ea:	je     0x4166e7
  4166ec:	ja     0x4166de
  4166ee:	sti    
  4166ef:	in     eax,dx
  4166f0:	fld    QWORD PTR [eax]
  4166f2:	mov    ecx,ebx
  4166f4:	mov    al,ds:0x739c5d6c
  4166f9:	jb     0x416684
  4166fb:	daa    
  4166fc:	dec    edi
  4166fd:	dec    DWORD PTR [edi+0x1]
  416700:	popf   
  416701:	frndint 
  416703:	out    dx,al
  416704:	loopne 0x41674c
  416706:	pop    esi
  416707:	mov    al,0x30
  416709:	fmul   DWORD PTR [eax+0x54dac6cd]
  41670f:	fs stos BYTE PTR es:[edi],al
  416711:	jo     0x416763
  416713:	inc    ebx
  416714:	icebp  
  416715:	pop    esi
  416716:	cwde   
  416717:	mov    DWORD PTR [eax],0x72040000
  41671d:	mov    DWORD PTR [ecx-0x298b8296],edi
  416723:	imul   ecx,eax,0xf7f681fb
  416729:	pop    ss
  41672a:	jb     0x41676e
  41672c:	or     al,0x56
  41672e:	adc    edi,edx
  416730:	inc    ebx
  416731:	call   0x8b4a2e6c
  416736:	mov    cs,esp
  416738:	fsubr  st(7),st
  41673a:	add    BYTE PTR [edi+ecx*2-0x4],cl
  41673e:	(bad)  
  41673f:	cli    
  416740:	or     edi,esp
  416742:	or     ah,dl
  416744:	loop   0x416759
  416746:	push   ebp
  416747:	popf   
  416748:	repz xor eax,eax
  41674b:	sub    eax,0x16c2c652
  416750:	or     BYTE PTR [ecx-0x75],dl
  416753:	scas   al,BYTE PTR es:[edi]
  416754:	xchg   esp,esp
  416756:	clc    
  416757:	fwait
  416758:	test   BYTE PTR [ebx+0x53081a05],0xff
  41675f:	inc    edi
  416760:	add    al,ch
  416762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416763:	mov    ebp,0x1a84faf3
  416768:	outs   dx,BYTE PTR ds:[esi]
  416769:	xor    BYTE PTR [ebp-0x17f7d472],cl
  41676f:	mov    esi,0x51fffc5e
  416774:	push   esi
  416775:	add    eax,0xe81f568d
  41677a:	add    ebx,edx
  41677c:	pop    es
  41677d:	push   eax
  41677e:	push   0x0
  416780:	add    BYTE PTR [eax],al
  416782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416783:	push   esp
  416784:	mov    bh,al
  416786:	repnz mov bh,0x8c
  416789:	call   FWORD PTR [ebp-0x65fa7aa1]
  41678f:	pop    es
  416790:	mov    DWORD PTR [esi+esi*8+0x16],eax
  416794:	push   0x0
  416796:	(bad)  
  416798:	adc    BYTE PTR [esp+eax*4],dh
  41679b:	inc    edi
  41679c:	std    
  41679d:	adc    BYTE PTR [esi+0x3],0x5b
  4167a1:	mov    esi,DWORD PTR [edi-0x75fb409a]
  4167a7:	dec    esi
  4167a8:	mov    ah,ch
  4167aa:	or     ebx,DWORD PTR [edx+0x53]
  4167ad:	push   0x5e
  4167af:	hlt    
  4167b0:	jo     0x4167ba
  4167b2:	adc    BYTE PTR [ecx-0x630c00af],0x90
  4167b9:	inc    ebx
  4167ba:	dec    edi
  4167bb:	sub    eax,0xf45b62ea
  4167c0:	jg     0x4167bf
  4167c2:	cmp    al,0xf8
  4167c4:	jo     0x416749
  4167c6:	cmp    eax,0x33320572
  4167cb:	mov    BYTE PTR [ecx+ecx*4],ah
  4167ce:	scas   al,BYTE PTR es:[edi]
  4167cf:	jmp    0x5c316055
  4167d4:	add    ch,BYTE PTR [edx-0x19]
  4167d7:	mov    ch,0xd1
  4167d9:	push   ebp
  4167da:	or     al,0x5a
  4167dc:	or     ebp,edi
  4167de:	fisubr WORD PTR [ebp+0x13]
  4167e1:	inc    eax
  4167e2:	repz loopne 0x416829
  4167e5:	or     al,0x0
  4167e7:	add    BYTE PTR [eax],al
  4167e9:	popf   
  4167ea:	(bad)
  4167ed:	in     al,dx
  4167ee:	and    DWORD PTR [ecx+0x3f3746ff],esi
  4167f4:	add    al,0xf3
  4167f6:	mov    edx,0xaf42ec8a
  4167fb:	rcl    DWORD PTR [esi+edi*2-0x55],cl
  4167ff:	jge    0x416851
  416801:	pop    ebx
  416802:	cmp    BYTE PTR [ecx],al
  416804:	add    bl,dh
  416806:	pop    ss
  416807:	scas   eax,DWORD PTR es:[edi]
  416808:	sti    
  416809:	mov    ah,0x79
  41680b:	xchg   eax,esi
  41680d:	jbe    0x416889
  41680f:	neg    BYTE PTR [ebx]
  416811:	js     0x416836
  416813:	sub    BYTE PTR [edx-0xe],0xd5
  416817:	add    ecx,DWORD PTR [ecx-0x6dfab75b]
  41681d:	repnz pop edi
  41681f:	mov    al,bh
  416821:	outs   dx,BYTE PTR ds:[esi]
  416822:	dec    ecx
  416823:	cmc    
  416824:	add    eax,0x54395825
  416829:	je     0x4167e4
  41682b:	xchg   ebp,eax
  41682d:	int3   
  41682e:	add    DWORD PTR [ecx-0x3f],ecx
  416831:	mov    esi,0x72707206
  416836:	hlt    
  416837:	out    dx,al
  416838:	add    eax,edx
  41683a:	sti    
  41683b:	imul   cl
  41683d:	dec    esp
  41683e:	jmp    0x43ba:0x6f3049e
  416845:	dec    ebx
  416846:	sub    eax,0x5e367d7b
  41684b:	mov    eax,0x8e
  416850:	mov    al,0xfe
  416852:	push   ss
  416853:	jmp    0xfea0:0x7ce7e024
  41685a:	dec    esi
  41685b:	xchg   edx,eax
  41685c:	data16 or bh,ah
  41685f:	xchg   BYTE PTR [ebx],dh
  416861:	cld    
  416862:	loop   0x416895
  416864:	xor    ebx,DWORD PTR [esi-0x20]
  416867:	jl     0x4167e9
  416869:	dec    dh
  41686b:	dec    ebx
  41686c:	repz push es
  41686e:	out    0x6b,eax
  416870:	add    dh,BYTE PTR [ebx+0x2e]
  416873:	jge    0x41685b
  416875:	sti    
  416876:	out    dx,al
  416877:	mov    DWORD PTR [ebx-0x282eeea2],edi
  41687d:	jno    0x4168e0
  41687f:	inc    ecx
  416880:	sub    dl,ah
  416882:	sub    BYTE PTR [eax],cl
  416884:	repz test DWORD PTR [edi],ecx
  416887:	add    al,0x47
  416889:	std    
  41688a:	scas   al,BYTE PTR es:[edi]
  41688b:	div    ebx
  41688d:	xor    eax,0x36194127
  416892:	pop    DWORD PTR [eax+0x19]
  416895:	xor    eax,0x7e40413f
  41689a:	retf   
  41689b:	add    BYTE PTR [edi-0x7399dee],0xd5
  4168a2:	sbb    DWORD PTR [ecx+0x1d],ebx
  4168a5:	fisubr DWORD PTR [edi-0x22]
  4168a8:	js     0x4168d8
  4168aa:	fisttp WORD PTR [edi+ebp*2]
  4168ad:	lods   eax,DWORD PTR ds:[esi]
  4168ae:	add    cl,ch
  4168b0:	lock push es
  4168b2:	mov    esp,DWORD PTR [eax+eax*1]
  4168b5:	add    BYTE PTR [eax],al
  4168b7:	jae    0x41688f
  4168b9:	out    0x53,eax
  4168bb:	fidiv  DWORD PTR [ebx-0x3]
  4168be:	gs mov al,0x3
  4168c1:	test   BYTE PTR [ebx-0x10],al
  4168c4:	push   es
  4168c5:	add    BYTE PTR [edx+0x2d],ah
  4168c8:	or     eax,ebp
  4168ca:	inc    edx
  4168cb:	mov    edi,0x256cfd73
  4168d0:	or     DWORD PTR [edi+0x19],ecx
  4168d3:	js     0x41689a
  4168d5:	test   DWORD PTR [ecx+0x66fd729a],0x7207ed6b
  4168df:	mov    al,ds:0x982788db
  4168e4:	jle    0x4168e7
  4168e6:	jmp    0xbd01f3db
  4168eb:	jmp    0xfd72:0x23c3e7d8
  4168f2:	cli    
  4168f3:	data16 ss std 
  4168f6:	cli    
  4168f7:	xor    BYTE PTR [edi+0x5b],bh
  4168fa:	adc    DWORD PTR [ecx-0x14],ebp
  4168fd:	jmp    0x41696f
  4168ff:	frstor [eax-0x79]
  416902:	mov    ah,0x44
  416904:	cs icebp 
  416906:	xchg   ebp,eax
  416907:	loope  0x416937
  416909:	push   ds
  41690a:	jl     0x416902
  41690c:	(bad)  
  41690d:	aaa    
  41690e:	lahf   
  41690f:	icebp  
  416910:	cli    
  416911:	add    BYTE PTR [edi+0x2a39761b],ch
  416917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416918:	xor    ebp,edi
  41691a:	pop    esp
  41691b:	add    BYTE PTR [eax],al
  41691d:	add    bl,ch
  41691f:	jnp    0x41699c
  416921:	rol    DWORD PTR [edi],1
  416923:	adc    eax,0x8af0e904
  416928:	rcl    BYTE PTR [ebp-0x51],0x73
  41692c:	jae    0x41692e
  41692e:	cmp    al,BYTE PTR [eax+0x7635ec41]
  416934:	cmc    
  416935:	call   0x3c5949
  41693a:	rcl    dl,1
  41693c:	mov    BYTE PTR [ebp-0x7e],dh
  41693f:	jecxz  0x416954
  416941:	add    ecx,DWORD PTR [edx+0x4]
  416944:	mov    DWORD PTR [ebp+0x66],esi
  416947:	jecxz  0x416958
  416949:	cli    
  41694a:	jne    0x416938
  41694c:	mov    ebx,eax
  41694e:	popa   
  41694f:	sbb    eax,0x544675fb
  416954:	cld    
  416955:	adc    eax,0x401b4a
  41695a:	(bad)
  41695e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41695f:	inc    ebp
  416960:	in     eax,0xe8
  416962:	pushf  
  416963:	pop    es
  416964:	add    BYTE PTR [eax],al
  416966:	loope  0x41692f
  416968:	jo     0x416950
  41696a:	mov    cl,0xb9
  41696c:	mov    DWORD PTR [ebp-0x5e],esi
  41696f:	loop   0x416954
  416971:	add    cl,BYTE PTR [edx]
  416973:	add    al,0x89
  416975:	jne    0x41699d
  416977:	jecxz  0x416958
  416979:	stc    
  41697a:	adc    eax,0xb5c031ec
  41697f:	dec    ebp
  416980:	pop    eax
  416981:	leave  
  416982:	add    BYTE PTR [eax],al
  416984:	add    BYTE PTR [eax],cl
  416986:	add    eax,DWORD PTR [eax]
  416988:	push   ebp
  416989:	push   ecx
  41698a:	fisttp WORD PTR [ecx+edx*2-0x77]
  41698e:	push   ebp
  41698f:	push   esp
  416990:	lea    ecx,[edi+0x1d684feb]
  416996:	or     eax,DWORD PTR [eax]
  416998:	add    dl,dh
  41699a:	sbb    al,0xfc
  41699c:	call   DWORD PTR [ebp-0x30390f80]
  4169a2:	jmp    0x4169a3
  4169a4:	test   BYTE PTR [edi+ebx*2+0x2af38b39],bh
  4169ab:	jl     0x416a17
  4169ad:	jmp    0x4169bb
  4169af:	push   esi
  4169b0:	mov    DWORD PTR [edx+0x6ef57128],esi
  4169b6:	mov    esi,eax
  4169b8:	sub    edi,DWORD PTR [esi+0x59]
  4169bb:	xor    al,0x89
  4169bd:	gs je  0x416a36
  4169c0:	jno    0x4169d2
  4169c2:	adc    al,0x10
  4169c4:	std    
  4169c5:	fidiv  WORD PTR [ebp-0x78]
  4169c8:	inc    ebp
  4169c9:	imul   DWORD PTR ds:0x78071379
  4169cf:	sar    edi,0x71
  4169d2:	mov    eax,ds:0x79338305
  4169d7:	or     al,0x81
  4169d9:	xor    al,0x55
  4169db:	ds stc 
  4169dd:	mov    eax,ds:0x35046e7c
  4169e2:	mov    ds:0xd5beff7a,al
  4169e7:	mov    edx,DWORD PTR [edx+0x0]
  4169ea:	add    BYTE PTR [eax],al
  4169ec:	or     al,0xd8
  4169ee:	mov    al,BYTE PTR [ebx+0x4]
  4169f1:	mov    al,ds:0x1b2a58d7
  4169f6:	std    
  4169f7:	call   FWORD PTR [edi+0x6e8164f4]
  4169fd:	push   0xb43d5101
  416a02:	xor    BYTE PTR [ecx+0x7601745e],al
  416a08:	add    al,0xd
  416a0a:	lock or ecx,esp
  416a0d:	mov    ecx,DWORD PTR [ecx]
  416a0f:	call   0xfdbc1cb6
  416a14:	push   0x3ef67d70
  416a19:	fs xor eax,eax
  416a1c:	cwde   
  416a1d:	dec    eax
  416a1e:	mov    es,WORD PTR [ebx-0x9]
  416a21:	xchg   ebp,eax
  416a22:	jmp    0xe7485dbe
  416a27:	add    ecx,DWORD PTR [ebx-0x71861f1f]
  416a2d:	aad    0x60
  416a2f:	pop    esp
  416a30:	fwait
  416a31:	retf   0x7938
  416a34:	jle    0x4169b7
  416a36:	stos   BYTE PTR es:[edi],al
  416a37:	ins    DWORD PTR es:[edi],dx
  416a38:	in     eax,0xe0
  416a3a:	out    0xeb,al
  416a3c:	test   BYTE PTR [edi],al
  416a3e:	out    0x3,eax
  416a40:	and    al,BYTE PTR [edi-0x41]
  416a43:	aam    0x5a
  416a45:	outs   dx,BYTE PTR ds:[esi]
  416a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a47:	fidivr DWORD PTR [ebx-0xcf35735]
  416a4d:	shl    DWORD PTR [ecx+0x68],cl
  416a50:	add    BYTE PTR [eax],al
  416a52:	add    BYTE PTR [edi+edx*8+0x6ab08734],dh
  416a59:	pop    ss
  416a5a:	in     al,dx
  416a5b:	pop    ebp
  416a5c:	pop    es
  416a5d:	out    0x3,eax
  416a5f:	sbb    esi,edi
  416a61:	jno    0x416adc
  416a63:	sbb    BYTE PTR es:[edi+0x2f3347f],0x8d
  416a6b:	mov    al,0x6a
  416a6d:	rcl    DWORD PTR [eax],1
  416a6f:	ret    0xb558
  416a72:	jo     0x416a71
  416a74:	cmp    DWORD PTR [ecx],0xffffffef
  416a77:	out    dx,al
  416a78:	das    
  416a79:	mov    esp,0x71ff8177
  416a7e:	iret   
  416a7f:	hlt    
  416a80:	jg     0x416a6b
  416a82:	mov    WORD PTR [ecx+eiz*2+0x5dd4d2df],fs
  416a89:	mov    eax,0x2739d678
  416a8e:	fidiv  DWORD PTR [ebp+0x3403eb48]
  416a94:	mov    cl,BYTE PTR [ebx-0x65f914e1]
  416a9a:	rcr    DWORD PTR [edi],1
  416a9c:	repz mov ah,0x7e
  416a9f:	mov    bl,0xf2
  416aa1:	(bad)  
  416aa2:	mov    edx,0x6215ad97
  416aa7:	pop    ds
  416aa8:	aam    0xfc
  416aaa:	pop    ebp
  416aab:	ror    DWORD PTR [esi],cl
  416aad:	call   0xfdac0fd3
  416ab2:	bound  eax,QWORD PTR [eax]
  416ab4:	mov    dh,dh
  416ab6:	push   esp
  416ab7:	add    BYTE PTR [eax],al
  416ab9:	add    bl,dh
  416abb:	cmp    al,al
  416abd:	rcl    bl,cl
  416abf:	aam    0x67
  416ac1:	pusha  
  416ac2:	lock push es
  416ac4:	add    BYTE PTR [edx-0x4d],ah
  416ac7:	pop    esi
  416ac8:	shl    BYTE PTR [eax+0x73566bdb],cl
  416ace:	mov    eax,0xca38a95e
  416ad3:	imul   ecx,DWORD PTR [edx+0x69fcd7aa],0xffffffe9
  416ada:	dec    eax
  416adb:	xchg   esp,eax
  416adc:	add    cl,ch
  416ade:	lock aaa 
  416ae0:	rcl    BYTE PTR [ecx+0x76fd7568],0x4b
  416ae7:	retf   
  416ae8:	pop    eax
  416ae9:	adc    BYTE PTR [ebp+0x67bc0002],dh
  416aef:	pop    edx
  416af0:	dec    edi
  416af1:	mov    bh,0x23
  416af3:	add    BYTE PTR [ebx+0x55],0x20
  416af7:	in     eax,0x99
  416af9:	jmp    0x1f2971ee
  416afe:	jbe    0x416b6b
  416b00:	std    
  416b01:	jb     0x416b63
  416b03:	mov    dh,dh
  416b05:	mov    ebp,0x2d437e10
  416b0a:	cdq    
  416b0b:	dec    esi
  416b0c:	(bad)  
  416b0d:	call   0x7313a102
  416b12:	dec    ecx
  416b13:	jb     0x416b0a
  416b15:	ins    BYTE PTR es:[edi],dx
  416b16:	push   ds
  416b17:	clc    
  416b18:	or     eax,0x7270b5d0
  416b1d:	add    BYTE PTR [eax],al
  416b1f:	add    BYTE PTR [eax],al
  416b21:	ret    
  416b22:	jnp    0x416b6d
  416b24:	or     BYTE PTR [ebx],ah
  416b26:	or     DWORD PTR [edi+0x55fff1c6],eax
  416b2c:	call   0x3dc4a9
  416b31:	stc    
  416b32:	ret    0x5e5a
  416b35:	inc    ebx
  416b36:	leave  
  416b37:	add    eax,DWORD PTR [eax]
  416b39:	retf   
  416b3a:	xchg   DWORD PTR [esp-0x6e],edi
  416b3e:	or     BYTE PTR [edi+0x56],cl
  416b41:	aad    0x76
  416b43:	test   DWORD PTR ss:[edx-0x6596cd89],ebx
  416b4a:	sar    ah,1
  416b4c:	dec    DWORD PTR [edx-0x7f]
  416b4f:	clc    
  416b50:	push   edi
  416b51:	lea    esi,[edi+0x21]
  416b54:	sbb    BYTE PTR [edx+0x7c],ah
  416b57:	dec    ebp
  416b58:	call   FWORD PTR [ebp-0x80]
  416b5b:	lock test DWORD PTR [esi+esi*2+0x1],esp
  416b60:	xor    cl,BYTE PTR [edx+0x25622e0]
  416b66:	xchg   ecx,eax
  416b67:	add    BYTE PTR [eax],al
  416b69:	sbb    al,BYTE PTR [ecx-0x14a4173d]
  416b6f:	cli    
  416b70:	call   DWORD PTR [esi+edi*2-0x28]
  416b74:	call   0x3dbe79
  416b79:	nop
  416b7a:	(bad)  
  416b7b:	out    0xe,al
  416b7d:	xor    BYTE PTR [eax],cl
  416b7f:	push   0x80a9a
  416b84:	xor    eax,DWORD PTR [eax]
  416b86:	add    BYTE PTR [eax],al
  416b88:	sbb    bl,bl
  416b8a:	adc    bh,cl
  416b8c:	sbb    eax,0x815e5af4
  416b91:	dec    edx
  416b92:	mov    edi,0x8856ca04
  416b97:	in     al,dx
  416b98:	mov    edx,DWORD PTR [edx+0x53]
  416b9b:	(bad)  
  416b9c:	repz call 0x3:0xf44b5075
  416ba4:	repz adc eax,0x6cacfa2e
  416baa:	mov    cl,al
  416bac:	outs   dx,BYTE PTR ds:[esi]
  416bad:	lock sbb ebp,DWORD PTR es:[eax-0x5e]
  416bb2:	jne    0x416c1e
  416bb4:	fist   DWORD PTR [eax]
  416bb6:	push   edx
  416bb7:	pop    esi
  416bb8:	test   BYTE PTR [ebx-0x80],dl
  416bbb:	sar    dh,cl
  416bbd:	arpl   WORD PTR [ebx+esi*2],di
  416bc0:	jg     0x416b91
  416bc2:	or     cl,BYTE PTR [ecx+0x28c761e]
  416bc8:	js     0x416b68
  416bca:	push   0x8
  416bcc:	ret    0xb045
  416bcf:	push   eax
  416bd0:	pop    esp
  416bd1:	pushf  
  416bd2:	xor    al,al
  416bd4:	mov    ch,0xb6
  416bd6:	aas    
  416bd7:	add    al,0xf3
  416bd9:	xor    cl,BYTE PTR [ecx-0x31d15d14]
  416bdf:	mov    dh,BYTE PTR [esi-0x30962e87]
  416be5:	xchg   ebp,eax
  416be6:	imul   esi,edi,0x2c
  416be9:	in     al,dx
  416bea:	mov    eax,ecx
  416bec:	add    BYTE PTR [eax],al
  416bee:	add    BYTE PTR [esi-0x5a],ch
  416bf1:	in     eax,dx
  416bf2:	sbb    ebp,DWORD PTR [eax+0x22]
  416bf5:	js     0x416c61
  416bf7:	fst    DWORD PTR [eax]
  416bf9:	push   edx
  416bfa:	pop    esi
  416bfb:	add    al,0xd3
  416bfd:	jg     0x416bd1
  416bff:	jle    0x416c64
  416c01:	cmp    al,0x73
  416c03:	dec    DWORD PTR [esi+0xc]
  416c06:	mov    DWORD PTR [esi+0x78028c75],ebx
  416c0c:	pop    ds
  416c0d:	push   0x8
  416c0f:	inc    edx
  416c10:	enter  0x4fef,0xdc
  416c14:	sbb    DWORD PTR [edx],esi
  416c16:	shl    BYTE PTR ds:0xf7413007,0x6
  416c1d:	mov    ah,0x8a
  416c1f:	xlat   BYTE PTR ds:[ebx]
  416c20:	xchg   BYTE PTR [ebx],cl
  416c22:	jnp    0x416c50
  416c24:	xchg   BYTE PTR [ebx+ecx*1-0x31632a0d],cl
  416c2b:	and    BYTE PTR ds:0x191f4364,dh
  416c31:	add    BYTE PTR [ebx-0x27],0x7d
  416c35:	out    dx,eax
  416c36:	int    0x97
  416c38:	hlt    
  416c39:	out    dx,al
  416c3a:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffdd
  416c3e:	jne    0x416cba
  416c40:	ja     0x416cae
  416c42:	outs   dx,BYTE PTR ds:[esi]
  416c43:	add    BYTE PTR [ebx],al
  416c45:	sbb    DWORD PTR [edx+ecx*4+0x28],eax
  416c49:	sbb    eax,0xa67dd0ea
  416c4e:	ins    BYTE PTR es:[edi],dx
  416c4f:	mov    esi,0x75b66e
  416c54:	add    BYTE PTR [eax],al
  416c56:	lds    edi,FWORD PTR [edi+ecx*4+0x6c]
  416c5a:	and    edx,edi
  416c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c5d:	jne    0x416cd8
  416c5f:	inc    esi
  416c60:	xchg   edx,eax
  416c61:	or     ecx,ebx
  416c63:	push   es
  416c64:	add    eax,esp
  416c66:	add    eax,DWORD PTR [edi+0x7f]
  416c69:	les    edi,FWORD PTR [edx+ebp*2]
  416c6c:	xchg   ch,dl
  416c6e:	into   
  416c6f:	int    0x71
  416c71:	pop    edi
  416c72:	enter  0xeb44,0x3
  416c76:	ret    0x9235
  416c79:	cmp    al,0xf5
  416c7b:	repz out dx,al
  416c7d:	je     0x416c04
  416c7f:	dec    BYTE PTR [esi+0xb]
  416c82:	mov    ds:0xdd8c5669,eax
  416c87:	jg     0x416c36
  416c89:	jmp    FWORD PTR [ebp-0x37]
  416c8c:	out    dx,al
  416c8d:	mov    cl,BYTE PTR [ebp-0x5]
  416c90:	mov    eax,ds:0xfffb5940
  416c95:	rcr    BYTE PTR [eax],0xd7
  416c98:	inc    eax
  416c99:	jmp    0xe93f11e6
  416c9e:	lock aaa 
  416ca0:	shl    dl,cl
  416ca2:	cmp    dh,bl
  416ca4:	cmp    BYTE PTR [edx-0x3c],ch
  416ca7:	add    DWORD PTR [edx],eax
  416ca9:	pop    DWORD PTR ds:0xe2055382
  416caf:	inc    esi
  416cb0:	xchg   DWORD PTR [esp+eax*2-0x5a1ebcd0],esp
  416cb7:	and    eax,0xd538
  416cbc:	add    al,ch
  416cbe:	cmc    
  416cbf:	adc    ah,BYTE PTR [ecx]
  416cc1:	mov    ds:0xee53ff01,eax
  416cc6:	xchg   eax,eax
  416cc8:	jmp    0x416c85
  416cca:	lds    eax,FWORD PTR [edi]
  416ccc:	fisub  WORD PTR [esi+eax*2-0x7f]
  416cd0:	xor    al,0xeb
  416cd2:	imul   ebp,ecx,0xffffffd9
  416cd5:	xor    BYTE PTR [esi-0x27],bl
  416cd8:	cli    
  416cd9:	mov    al,0xc6
  416cdb:	shl    BYTE PTR [edx+0x35],0x61
  416cdf:	xor    DWORD PTR [ebx+ecx*8],0xd8a9326b
  416ce6:	xchg   ebp,eax
  416ce7:	std    
  416ce8:	call   0xe945b1dd
  416ced:	add    edx,DWORD PTR [ebp+0x37]
  416cf0:	sbb    eax,0xca7402d3
  416cf5:	jnp    0x416d20
  416cf7:	or     BYTE PTR [edx-0x45e40d4e],dh
  416cfd:	test   eax,0xf4dc102e
  416d02:	cs push eax
  416d04:	call   0x12806c1d
  416d09:	sub    esp,DWORD PTR ds:0x28f7d504
  416d0f:	jmp    0xc078b414
  416d14:	jmp    0x416ce2
  416d16:	inc    esp
  416d17:	call   0x586be1f
  416d1c:	ret    0x4ce
  416d1f:	xchg   DWORD PTR [eax+0x0],ecx
  416d22:	add    BYTE PTR [eax],al
  416d24:	(bad)  
  416d25:	jmp    0x8003e2ee
  416d2a:	dec    eax
  416d2b:	or     BYTE PTR [ebx+0x3c],dl
  416d2e:	or     ebx,ebp
  416d30:	mov    cl,0x7f
  416d32:	push   eax
  416d33:	or     BYTE PTR [ecx+0x7c2071be],dh
  416d39:	jg     0x416dab
  416d3b:	add    al,0x89
  416d3d:	div    BYTE PTR [esi]
  416d3f:	into   
  416d40:	fs ja  0x416d55
  416d43:	mov    cl,BYTE PTR [ebx-0x69b779bd]
  416d49:	adc    dl,0x75
  416d4c:	pushf  
  416d4d:	sbb    ecx,DWORD PTR ds:0x86439175
  416d53:	dec    eax
  416d54:	xor    ax,ax
  416d57:	ret    
  416d58:	fldenv [edx+0x9]
  416d5b:	add    cl,dl
  416d5d:	inc    edx
  416d5e:	or     ebx,eax
  416d60:	retf   0x33
  416d63:	je     0x416dc2
  416d65:	xor    al,al
  416d67:	jmp    0x41702d
  416d6c:	stc    
  416d6d:	repz jae 0x416d94
  416d70:	push   edx
  416d71:	cmc    
  416d72:	adc    BYTE PTR [eax+0x48],bh
  416d75:	inc    esp
  416d76:	std    
  416d77:	mov    dl,BYTE PTR [edx+0x7e]
  416d7a:	xlat   BYTE PTR ds:[ebx]
  416d7b:	jg     0x416d8b
  416d7d:	xor    al,al
  416d7f:	jmp    0x416da0
  416d81:	dec    esi
  416d82:	mov    dh,BYTE PTR [edi+0x2]
  416d85:	cmp    DWORD PTR [esi],0x0
  416d8b:	pop    ds
  416d8c:	and    DWORD PTR [ecx-0x2ea40cbd],ecx
  416d92:	out    0x10,eax
  416d94:	mov    BYTE PTR [edx-0x3],dh
  416d97:	jp     0x416df0
  416d99:	mov    al,al
  416d9b:	pop    edi
  416d9c:	add    dl,ch
  416d9e:	cld    
  416d9f:	addr16 cli 
  416da1:	adc    edx,DWORD PTR [eax-0x2c]
  416da4:	push   edx
  416da5:	xor    DWORD PTR [esi],edx
  416da7:	xor    ebx,DWORD PTR [esi-0x7a]
  416daa:	(bad)  
  416dab:	div    esi
  416dad:	rol    BYTE PTR [ebx],1
  416daf:	enter  0x7e3f,0x45
  416db3:	out    dx,eax
  416db4:	retf   0x17bf
  416db7:	repnz adc eax,0x68a44e0d
  416dbd:	test   eax,eax
  416dbf:	es pop edx
  416dc1:	xor    eax,eax
  416dc3:	mov    BYTE PTR [ecx+0x308c0e7e],dh
  416dc9:	or     BYTE PTR [ecx],al
  416dcb:	xor    al,0x62
  416dcd:	(bad)  
  416dce:	cld    
  416dcf:	pop    es
  416dd0:	cli    
  416dd1:	adc    ecx,DWORD PTR [edi+0x74]
  416dd4:	jb     0x416e07
  416dd6:	push   ss
  416dd7:	mov    bl,0x5d
  416dd9:	xchg   ah,al
  416ddb:	neg    DWORD PTR [esi-0x2e]
  416dde:	add    ebp,DWORD PTR [eax+0x18]
  416de1:	or     BYTE PTR [ecx+0x8059fe5],cl
  416de7:	repz mov al,ds:0x207803ca
  416ded:	or     BYTE PTR [ecx-0x13000000],cl
  416df3:	xchg   edi,eax
  416df4:	add    eax,0xca78f308
  416df9:	add    esp,DWORD PTR [ebx+0x5e]
  416dfc:	iret   
  416dfd:	pop    eax
  416dfe:	xor    DWORD PTR [ecx+0x1],esp
  416e01:	push   ebx
  416e02:	push   0xf33d8181
  416e07:	jno    0x416e0e
  416e09:	xor    dh,BYTE PTR [ebx]
  416e0b:	push   es
  416e0c:	push   edx
  416e0d:	in     al,0x9e
  416e0f:	addr16 aam 0xfb
  416e12:	imul   esi,DWORD PTR [edi],0x3f
  416e15:	arpl   bp,si
  416e17:	dec    si
  416e19:	jle    0x416dfe
  416e1b:	nop
  416e1c:	mov    esp,0xb45d71fb
  416e21:	pop    es
  416e22:	and    DWORD PTR [edi+0x42],eax
  416e25:	mov    ebx,0x182dbd43
  416e2a:	dec    ebx
  416e2b:	stc    
  416e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2d:	add    edi,DWORD PTR [edx-0x2a]
  416e30:	loop   0x416db2
  416e32:	sbb    ecx,DWORD PTR [eax]
  416e34:	fs pop es
  416e36:	add    dh,BYTE PTR [edx]
  416e38:	pop    ds
  416e39:	and    BYTE PTR [esi],0xf
  416e3c:	jmp    0xf4f7:0xfdb73401
  416e43:	fdiv   QWORD PTR gs:[ebx]
  416e46:	std    
  416e47:	(bad)  
  416e48:	out    0x1c,al
  416e4a:	or     esi,DWORD PTR cs:[edx-0x3f]
  416e4e:	lock mov DWORD PTR [ebx-0x2f75e600],esp
  416e55:	add    eax,DWORD PTR [eax]
  416e57:	add    BYTE PTR [eax],al
  416e59:	add    BYTE PTR [esi],dl
  416e5b:	into   
  416e5c:	cmp    bl,BYTE PTR [ebx+0x26]
  416e5f:	xor    eax,0x58a6671
  416e64:	add    al,0x5e
  416e66:	(bad)  
  416e67:	jmp    0x4fbf:0x376ef05c
  416e6e:	push   di
  416e70:	add    esp,DWORD PTR [ebp-0xcf7573d]
  416e76:	mov    ebx,0xbda26061
  416e7b:	popa   
  416e7c:	dec    edx
  416e7d:	sbb    ebx,ebp
  416e7f:	out    0x3,al
  416e81:	rep outs dx,BYTE PTR ds:[esi]
  416e83:	loopne 0x416e8c
  416e85:	repz push es
  416e87:	add    BYTE PTR [edx+0x1a50b7a7],bh
  416e8d:	sbb    cl,0xf
  416e90:	jb     0x416e29
  416e92:	mov    ebx,0xf918f4fc
  416e97:	aas    
  416e98:	jmp    0x4147fbb8
  416e9d:	lock aam 0xfc
  416ea0:	inc    esi
  416ea1:	sbb    BYTE PTR ds:0x4726e573,al
  416ea7:	jmp    0x6ba0124f
  416eac:	test   eax,0xf9434bf0
  416eb1:	in     al,dx
  416eb2:	push   es
  416eb3:	add    cl,ch
  416eb5:	sahf   
  416eb6:	or     DWORD PTR [ebx-0x3491352],ecx
  416ebc:	(bad)  
  416ebd:	add    BYTE PTR [eax],al
  416ebf:	add    BYTE PTR [ebx],ah
  416ec1:	sbb    eax,0xfa24dcfd
  416ec6:	aas    
  416ec7:	jmp    0xf649ba43
  416ecc:	push   ebp
  416ecd:	adc    eax,0xb6a60173
  416ed2:	imul   ebp,edx,0x54fcb69f
  416ed8:	repz arpl WORD PTR [ebx-0x1f],si
  416edc:	add    ebx,DWORD PTR ds:0xf858f4fd
  416ee2:	aas    
  416ee3:	jmp    0x2453bd1
  416ee8:	mov    dh,0xd9
  416eea:	push   es
  416eeb:	bound  ebp,QWORD PTR [edx-0xf16f592]
  416ef1:	push   es
  416ef2:	jmp    0x5ea6ef54
  416ef7:	inc    edx
  416ef8:	sub    al,0x47
  416efa:	or     al,0xe9
  416efc:	sbb    bh,BYTE PTR [edx+0x27c89988]
  416f02:	add    BYTE PTR [eax],al
  416f04:	sbb    cl,BYTE PTR [ecx]
  416f06:	xchg   DWORD PTR [esi+0x16],eax
  416f09:	loop   0x416f43
  416f0b:	jl     0x416f44
  416f0d:	dec    ecx
  416f0e:	std    
  416f0f:	test   BYTE PTR [edx+0x5d],bl
  416f12:	add    al,0x50
  416f14:	lea    edi,[esi+0x916667e]
  416f1a:	xchg   DWORD PTR [esi],eax
  416f1c:	xchg   ecx,ecx
  416f1e:	jae    0x416f26
  416f20:	stos   BYTE PTR es:[edi],al
  416f21:	xlat   BYTE PTR ds:[ebx]
  416f22:	rol    BYTE PTR [ebx-0xc000000],cl
  416f28:	or     bl,BYTE PTR [ebx+0x5e]
  416f2b:	or     ebx,esp
  416f2d:	inc    ebp
  416f2e:	or     BYTE PTR [edi-0x38],al
  416f31:	jae    0x416f3e
  416f33:	push   0xffffffd7
  416f35:	adc    BYTE PTR [edi+eax*8+0x48],bh
  416f39:	std    
  416f3a:	xor    BYTE PTR [eax+eiz*2-0x3],0xc2
  416f3f:	ja     0x416f24
  416f41:	jmp    0x416ec4
  416f43:	scas   al,BYTE PTR es:[edi]
  416f44:	adc    ebp,edi
  416f46:	call   FWORD PTR [edx+0x5789533b]
  416f4c:	hlt    
  416f4d:	jle    0x416fb4
  416f4f:	sahf   
  416f50:	or     edx,DWORD PTR [ebx-0x75]
  416f53:	mov    esi,DWORD PTR [eax-0x73810100]
  416f59:	je     0x416f60
  416f5b:	push   ecx
  416f5c:	or     edi,ebx
  416f5e:	dec    esp
  416f5f:	push   es
  416f60:	add    DWORD PTR [esp+esi*2],0x54
  416f64:	mov    eax,edi
  416f66:	add    BYTE PTR [edx-0x78],bl
  416f69:	add    BYTE PTR [edi+0x3d5d96],bh
  416f6f:	jb     0x416f7b
  416f71:	jno    0x416f78
  416f73:	ffree  st(6)
  416f75:	jne    0x416fb7
  416f77:	pop    edx
  416f78:	shr    BYTE PTR [edx+0x69f45dff],0x0
  416f7f:	repz and ah,bl
  416f82:	ja     0x416fdf
  416f84:	xor    DWORD PTR [edx+ebp*2],eax
  416f87:	repz cmc 
  416f89:	push   ebx
  416f8a:	jbe    0x416f8c
  416f8c:	add    BYTE PTR [eax],al
  416f8e:	mov    bl,0x6d
  416f90:	outs   dx,BYTE PTR ds:[esi]
  416f91:	jae    0x416f7e
  416f93:	add    al,0x6d
  416f95:	jbe    0x416f8e
  416f97:	hlt    
  416f98:	push   ss
  416f99:	jo     0x416f79
  416f9b:	lods   eax,DWORD PTR ds:[esi]
  416f9c:	add    DWORD PTR [edi-0x3f77aa4b],eax
  416fa2:	in     al,0xf1
  416fa4:	jb     0x416fa6
  416fa6:	rep ins DWORD PTR es:[edi],dx
  416fa8:	xlat   BYTE PTR ds:[ebx]
  416fa9:	add    esi,DWORD PTR [esi-0x66]
  416fac:	stc    
  416fad:	dec    esi
  416fae:	dec    ecx
  416faf:	mov    bl,0xd1
  416fb1:	les    ebp,FWORD PTR [esi]
  416fb3:	data16 add al,0x0
  416fb6:	rep ins DWORD PTR es:[edi],dx
  416fb8:	outs   dx,BYTE PTR ds:[esi]
  416fb9:	adc    esi,DWORD PTR [edi+0x62]
  416fbc:	sar    edi,0xd4
  416fbf:	cmp    ah,BYTE PTR [ebx]
  416fc1:	push   DWORD PTR [eax+ebp*8-0x51f993d2]
  416fc8:	add    DWORD PTR [ecx-0x5ffe920d],edi
  416fce:	fild   QWORD PTR [ecx-0x8]
  416fd1:	or     cl,BYTE PTR [ebx-0x7300dc6e]
  416fd7:	jmp    0xf2b07d1f
  416fdc:	add    BYTE PTR [eax],al
  416fde:	repz repnz mov DWORD PTR [edi],0xf787eb23
  416fe6:	ins    DWORD PTR es:[edi],dx
  416fe7:	push   esp
  416fe8:	outs   dx,BYTE PTR ds:[esi]
  416fe9:	push   eax
  416fea:	sub    al,0x32
  416fec:	cld    
  416fed:	push   ebx
  416fef:	ins    DWORD PTR es:[edi],dx
  416ff0:	add    ebp,edi
  416ff2:	add    BYTE PTR [eax],al
  416ff4:	add    dh,bh
  416ff6:	xchg   ecx,eax
  416ff7:	adc    al,BYTE PTR [eax-0xd]
  416ffa:	jmp    0x6e5f:0x6da7340
  417001:	repz push es
  417003:	out    0x2c,eax
  417005:	mov    al,0xe
  417007:	out    0xc1,al
  417009:	mov    cl,0xe
  41700b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41700c:	xchg   eax,esi
  41700e:	pop    ebp
  41700f:	test   DWORD PTR [esi+0x1e],ebp
  417012:	push   es
  417013:	ins    BYTE PTR es:[edi],dx
  417014:	mov    BYTE PTR [esp+eiz*2],bl
  417017:	jbe    0x417087
  417019:	mov    ds:0xe2ebd463,eax
  41701e:	(bad)  
  41701f:	out    0x7c,al
  417021:	mov    al,0xe
  417023:	fs inc ebx
  417025:	jg     0x416fec
  417027:	rcl    BYTE PTR [eax+edi*2],0x8c
  41702b:	aas    
  41702c:	ins    DWORD PTR es:[edi],dx
  41702d:	out    0x62,al
  41702f:	iret   
  417030:	dec    edi
  417031:	gs (bad) 
  417033:	out    0xd3,al
  417035:	xlat   BYTE PTR ds:[ebx]
  417036:	cld    
  417037:	not    BYTE PTR ds:0xc8620733
  41703d:	in     al,dx
  41703e:	test   DWORD PTR [ebx],ebp
  417040:	call   DWORD PTR [ebx+edi*8-0x6d]
  417044:	ret    
  417045:	mov    ah,0x93
  417047:	imul   ecx,DWORD PTR [eax],0xffffffa4
  41704a:	popa   
  41704b:	push   cs
  41704c:	outs   dx,BYTE PTR ds:[esi]
  41704d:	inc    ebx
  41704e:	(bad)  
  41704f:	fdiv   st(7),st
  417051:	in     eax,dx
  417052:	(bad)  
  417053:	out    0x7a,al
  417055:	xor    BYTE PTR [edi],cl
  417057:	call   0xf6b3:0x82
  41705e:	xchg   esi,eax
  41705f:	xor    BYTE PTR [eax+0x6f],0xe5
  417063:	ins    DWORD PTR es:[edi],dx
  417064:	jle    0x41701d
  417066:	(bad)  
  417068:	in     al,dx
  417069:	popa   
  41706a:	mov    esi,0xe762e881
  41706f:	test   BYTE PTR [edx],0xb6
  417072:	push   eax
  417073:	adc    ebx,ecx
  417075:	push   esi
  417076:	xor    eax,0x6154c4
  41707b:	aas    
  41707c:	dec    edi
  41707d:	arpl   bp,dx
  41707f:	push   0xffffffd7
  417081:	popa   
  417082:	je     0x417085
  417084:	add    al,BYTE PTR [edi+0x50]
  417087:	cmp    DWORD PTR [edi],ebx
  417089:	sar    ah,cl
  41708b:	pop    ds
  41708c:	das    
  41708d:	arpl   WORD PTR [ebx],dx
  41708f:	imul   edi,esp,0x8f69ffc6
  417095:	popa   
  417096:	je     0x41707d
  417098:	call   0xfe7b:0xa8eee946
  41709f:	outs   dx,BYTE PTR ds:[esi]
  4170a0:	xchg   esi,eax
  4170a1:	adc    al,0xc0
  4170a3:	(bad)  
  4170a4:	cs mov edi,0x6eb2bc6
  4170aa:	push   ebx
  4170ab:	bound  edx,QWORD PTR [ebx-0x2e]
  4170ae:	dec    esi
  4170af:	mov    edx,0x9ef08ebe
  4170b4:	jne    0x41710e
  4170b6:	je     0x4170a7
  4170b8:	mov    edx,0xa6e96a09
  4170bd:	bound  edx,QWORD PTR [ebx]
  4170bf:	cmc    
  4170c0:	add    BYTE PTR [eax],al
  4170c2:	add    dh,bl
  4170c4:	(bad)  
  4170c5:	jmp    FWORD PTR [ecx+0x2b]
  4170c8:	adc    eax,DWORD PTR [ecx-0x42f8b77c]
  4170ce:	jmp    0xb64177d3
  4170d3:	dec    eax
  4170d4:	inc    edi
  4170d5:	dec    ecx
  4170d6:	push   es
  4170d7:	push   cs
  4170d8:	nop
  4170d9:	fsub   DWORD PTR [edx+ebp*1+0x14]
  4170dd:	test   BYTE PTR [ebp-0x9],ah
  4170e0:	push   es
  4170e1:	add    BYTE PTR [edx-0x6c],ch
  4170e4:	or     eax,0xece15d00
  4170e9:	(bad)  
  4170ea:	fnstsw WORD PTR [ebp+0xd]
  4170ed:	std    
  4170ee:	cld    
  4170ef:	add    al,bh
  4170f1:	aas    
  4170f2:	jmp    0x40760c
  4170f7:	dec    edx
  4170f8:	add    eax,0x48c76371
  4170fd:	stc    
  4170fe:	push   eax
  4170ff:	ror    DWORD PTR [eax+0x5],1
  417102:	push   edi
  417103:	jmp    0xc349e0fb
  417108:	jo     0x417103
  41710a:	(bad)  
  41710b:	aas    
  41710c:	jne    0x41711f
  41710e:	inc    eax
  41710f:	sbb    cl,BYTE PTR [eax-0x202f8b40]
  417115:	inc    eax
  417116:	cld    
  417117:	pop    ebp
  417119:	jae    0x417154
  41711b:	or     ecx,DWORD PTR [eax-0xb]
  41711e:	add    DWORD PTR [edi],0x1a0cc9ed
  417124:	add    eax,0x3773
  417129:	add    BYTE PTR [edi-0x7e478c25],cl
  41712f:	mov    ds:0xbc120301,eax
  417134:	ror    DWORD PTR [edx+0x35],0xf3
  417138:	add    eax,0xffffff9e
  41713b:	sub    ebx,edi
  41713d:	jne    0x417155
  41713f:	fild   WORD PTR ds:0x4f089c03
  417145:	push   eax
  417146:	adc    eax,0x8a162ff9
  41714b:	add    al,0x87
  41714d:	inc    ebp
  41714e:	(bad)  
  41714f:	xchg   ah,al
  417151:	or     al,0x9b
  417153:	dec    edx
  417154:	add    ebx,ebp
  417156:	inc    ebp
  417157:	aaa    
  417158:	in     eax,0x5f
  41715a:	popa   
  41715b:	repz cli 
  41715d:	mov    al,0x8b
  41715f:	mov    edi,0x38f2530e
  417164:	dec    eax
  417165:	call   DWORD PTR [ebp-0x728b0976]
  41716b:	in     eax,dx
  41716c:	xor    eax,0xfc9fc0e8
  417171:	push   ebx
  417173:	sti    
  417174:	inc    ebx
  417175:	pop    ebp
  417176:	lds    edx,FWORD PTR [ebx+edi*1]
  417179:	ret    0x6deb
  41717c:	ror    BYTE PTR [eax+0x1457ed47],1
  417182:	mov    al,ds:0xa0d93500
  417187:	lds    eax,FWORD PTR [ebx-0x24920d00]
  41718d:	add    DWORD PTR [eax],eax
  41718f:	add    BYTE PTR [eax],al
  417191:	mov    al,ds:0xf36802f3
  417196:	ins    DWORD PTR es:[edi],dx
  417197:	add    DWORD PTR [eax+0x24],eax
  41719a:	sti    
  41719b:	test   DWORD PTR [edi+0x136988be],0xffc13be3
  4171a5:	jns    0x41717d
  4171a7:	test   ch,bh
  4171a9:	add    al,0x41
  4171ab:	jge    0x417148
  4171ad:	rep ins DWORD PTR es:[edi],dx
  4171af:	add    DWORD PTR [esi+0x35],edx
  4171b2:	outs   dx,BYTE PTR ds:[esi]
  4171b3:	adc    DWORD PTR [eax],eax
  4171b5:	repz lahf 
  4171b7:	pop    ecx
  4171b8:	in     al,0x39
  4171ba:	shr    DWORD PTR [eax-0x79],1
  4171bd:	and    ch,BYTE PTR ss:0x7c9b5fc1
  4171c4:	pop    ebx
  4171c5:	retf   
  4171c6:	push   esi
  4171c7:	enter  0x3f0f,0x3f
  4171cb:	(bad)  
  4171cc:	cld    
  4171cd:	inc    esi
  4171ce:	pop    esi
  4171cf:	push   0x13
  4171d1:	jecxz  0x41722f
  4171d3:	sar    edi,0xef
  4171d6:	imul   eax,DWORD PTR [eax+eax*1],0xfffffff3
  4171da:	jp     0x4171a9
  4171dc:	mov    dh,BYTE PTR [esi]
  4171de:	pop    esi
  4171df:	ror    DWORD PTR [eax-0x330a9d2],1
  4171e5:	push   es
  4171e6:	bound  ebp,QWORD PTR [edx+0x70]
  4171e9:	sti    
  4171ea:	jo     0x4171fc
  4171ec:	nop
  4171ed:	out    0x6,al
  4171ef:	daa    
  4171f0:	add    al,0x70
  4171f2:	inc    esi
  4171f3:	push   ebx
  4171f4:	sub    BYTE PTR [eax],al
  4171f6:	add    BYTE PTR [eax],al
  4171f8:	jp     0x4171c3
  4171fa:	(bad)  
  4171fb:	cs xor bl,dl
  4171fe:	add    BYTE PTR ds:0xe8685eb0,al
  417204:	pop    esp
  417205:	push   es
  417206:	out    0xa3,eax
  417208:	repz xlat BYTE PTR ds:[ebx]
  41720a:	call   esi
  41720c:	jns    0x4171df
  41720e:	mov    edx,0x1c5facd4
  417213:	jo     0x4171b3
  417215:	pop    edi
  417216:	hlt    
  417217:	daa    
  417218:	add    edi,eax
  41721a:	out    0x80,al
  41721c:	xor    ebx,edx
  41721e:	repz jle 0x4171d1
  417221:	push   esi
  417222:	ret    0x8c0
  417225:	fimul  DWORD PTR [ecx+0x5e]
  417228:	cli    
  417229:	mov    bh,0x75
  41722b:	adc    bh,dl
  41722d:	hlt    
  41722e:	es add al,0x35
  417231:	leave  
  417232:	gs add al,0xf6
  417235:	fcom   DWORD PTR [edx+0x5b]
  417238:	jnp    0x41720b
  41723a:	push   ebp
  41723b:	push   0x3e
  41723d:	pop    esi
  41723e:	hlt    
  41723f:	mov    ds:0xc9e6c701,eax
  417244:	sbb    al,0xbc
  417246:	cmp    eax,0xbc5df4f0
  41724b:	test   esp,0xbe6a74b5
  417251:	xchg   ecx,eax
  417252:	lods   al,BYTE PTR ds:[esi]
  417253:	push   0x16
  417255:	ret    0x452f
  417258:	inc    DWORD PTR [esi]
  41725a:	mov    esp,0x7e
  41725f:	xchg   edi,eax
  417260:	mov    bh,bl
  417262:	or     al,BYTE PTR [edx-0x4b]
  417265:	popf   
  417266:	push   0x20
  417268:	or     ebp,DWORD PTR [eax+esi*8-0x68]
  41726c:	outs   dx,DWORD PTR ds:[esi]
  41726d:	add    BYTE PTR [ecx-0x50],dh
  417270:	pop    esi
  417271:	std    
  417272:	gs xor bl,dl
  417275:	dec    ecx
  417276:	imul   ecx,DWORD PTR [eax+eiz*2-0xf93abfe],0x8c63603
  417281:	xor    esi,ecx
  417283:	retf   0xfd9
  417286:	jb     0x4172cc
  417288:	push   es
  417289:	std    
  41728a:	xor    al,0xdf
  41728c:	pop    ebx
  41728d:	jae    0x417254
  41728f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417290:	add    eax,0x82caaefc
  417295:	rcr    BYTE PTR ds:0x99735be3,0xae
  41729c:	inc    ebx
  41729d:	mov    DWORD PTR [edi-0x71035f39],esp
  4172a3:	mov    al,BYTE PTR [edx-0x68eb0240]
  4172a9:	call   DWORD PTR [ecx+0x76d918f5]
  4172af:	adc    al,0x72
  4172b1:	call   0xfd9cb191
  4172b6:	data16 add al,0x6e
  4172b9:	call   0xfd9c21b1
  4172be:	arpl   WORD PTR [esi],bp
  4172c0:	mov    esp,0xb25d
  4172c5:	add    BYTE PTR [ecx],bl
  4172c7:	dec    ecx
  4172c8:	or     al,0xe9
  4172ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172cb:	mov    gs,esp
  4172cd:	cwde   
  4172ce:	mov    eax,ds:0xb0be03e5
  4172d3:	pop    ebp
  4172d4:	(bad)  
  4172d5:	aam    0xf4
  4172d7:	or     eax,0xca39e940
  4172dc:	mul    DWORD PTR [edi+esi*1-0x26]
  4172e0:	add    DWORD PTR [eax],esp
  4172e2:	cs mov eax,0xd4008154
  4172e8:	aas    
  4172e9:	add    BYTE PTR [edx-0x7200cfc7],cl
  4172ef:	or     al,0xbc
  4172f1:	adc    bl,BYTE PTR [edx+0x9]
  4172f4:	xchg   eax,ebx
  4172f6:	pop    ss
  4172f7:	int3   
  4172f8:	jae    0x41733e
  4172fa:	and    al,BYTE PTR [edi]
  4172fc:	adc    BYTE PTR [eax],al
  4172fe:	pop    edx
  4172ff:	cmp    eax,DWORD PTR ds:0xa6e307ff
  417305:	inc    ebx
  417306:	dec    edx
  417307:	out    dx,al
  417308:	adc    BYTE PTR [ecx+edi*1],al
  41730b:	dec    ecx
  41730c:	std    
  41730d:	mov    dh,BYTE PTR [edx]
  41730f:	fdiv   st(2),st
  417311:	je     0x417304
  417313:	cmp    BYTE PTR [edx+0x54398e45],cl
  417319:	mov    esi,0xfffd5e8d
  41731e:	add    BYTE PTR [ebx],al
  417320:	test   DWORD PTR [ebp+0x7e],esi
  417323:	out    dx,al
  417324:	into   
  417325:	test   DWORD PTR [edx+0x6c],ecx
  417328:	or     ecx,DWORD PTR [ebx-0x39000000]
  41732e:	out    dx,al
  41732f:	ss (bad) 
  417331:	sbb    eax,0x16c6c342
  417336:	push   es
  417337:	add    bl,ch
  417339:	adc    al,0x36
  41733b:	in     eax,0x8f
  41733d:	inc    ebx
  41733e:	out    dx,al
  41733f:	cli    
  417340:	pop    esi
  417341:	dec    ebp
  417342:	ins    DWORD PTR es:[edi],dx
  417343:	cmc    
  417344:	jmp    edi
  417346:	inc    esp
  417347:	cmovo  ecx,edx
  41734a:	fcmovnb st,st(2)
  41734c:	pop    edi
  41734d:	xchg   ecx,eax
  41734e:	and    DWORD PTR [edi+0x4cb44155],edi
  417354:	xor    DWORD PTR [edi+0x5155ffe4],0x2d
  41735b:	fs adc eax,0x8d53088a
  417361:	push   edi
  417362:	in     al,0x4f
  417364:	push   0xfffffff3
  417366:	ins    DWORD PTR es:[edi],dx
  417367:	(bad)  [ecx]
  417369:	pushf  
  41736a:	jae    0x417365
  41736c:	cld    
  41736d:	mov    ebp,0x3b7340eb
  417372:	inc    edi
  417373:	mov    esi,0x68b0fffb
  417378:	adc    ebx,ebx
  41737a:	ds sar edi,0x71
  41737e:	jmp    0xbed9:0x2b72
  417384:	sti    
  417385:	mov    bl,0xb9
  417387:	xor    eax,ebp
  417389:	add    esp,DWORD PTR [edi]
  41738b:	gs std 
  41738d:	push   0xfd7f46
  417392:	add    BYTE PTR [eax],al
  417394:	mov    DWORD PTR [edi+esi*2],0xccfe4743
  41739b:	imul   edx,DWORD PTR [ecx],0x3407efad
  4173a1:	pushf  
  4173a2:	cmp    eax,0x8913f2f2
  4173a8:	scas   al,BYTE PTR es:[edi]
  4173a9:	popa   
  4173aa:	add    al,0xa7
  4173ad:	bound  edi,QWORD PTR [edx+0x4b]
  4173b0:	pop    ss
  4173b1:	xlat   BYTE PTR ds:[ebx]
  4173b2:	sti    
  4173b3:	mov    BYTE PTR [ecx+edi*2],dh
  4173b6:	cld    
  4173b7:	push   esp
  4173b8:	sbb    edi,DWORD PTR [esp+edi*4]
  4173bb:	cld    
  4173bc:	cld    
  4173bd:	mov    al,ds:0x16955d41
  4173c2:	inc    edx
  4173c3:	or     bl,dh
  4173c5:	xchg   edx,eax
  4173c6:	jp     0x4173b4
  4173c8:	inc    edx
  4173c9:	icebp  
  4173ca:	fdivp  st(3),st
  4173cc:	repz xchg ebx,eax
  4173ce:	jp     0x417403
  4173d0:	pop    edi
  4173d1:	cmp    eax,ecx
  4173d3:	jmp    DWORD PTR ds:0x23fbbeeb
  4173d9:	dec    eax
  4173da:	add    ebp,edi
  4173dc:	inc    esi
  4173dd:	cmp    ah,BYTE PTR [esi+0x73]
  4173e0:	jmp    0x4173e8
  4173e2:	es dec esi
  4173e4:	jo     0x41742c
  4173e6:	xchg   esp,eax
  4173e7:	es fadd st(1),st
  4173ea:	adc    dh,al
  4173ec:	ficomp DWORD PTR [ebx-0xc]
  4173ef:	or     esp,esp
  4173f1:	(bad)  
  4173f2:	out    0x82,al
  4173f4:	mov    esp,eax
  4173f6:	jae    0x41740e
  4173f8:	add    BYTE PTR [eax],al
  4173fa:	add    BYTE PTR [edx-0x3f],bh
  4173fd:	repnz xor BYTE PTR [ebx-0x74e18cf8],0x7a
  417405:	das    
  417406:	outs   dx,BYTE PTR ds:[si]
  417408:	(bad)  
  417409:	fild   WORD PTR [eax+0x78f2d266]
  41740f:	mov    al,0x5a
  417411:	aaa    
  417412:	iret   
  417413:	push   edi
  417414:	shl    edx,1
  417416:	data16 ror BYTE PTR [esi],0xbe
  41741a:	dec    ebp
  41741b:	jb     0x41747b
  41741d:	call   0xa6d16512
  417422:	pop    edx
  417423:	jmp    0x4173d8
  417425:	mov    ds,WORD PTR [eax+0x329e5bbb]
  41742b:	xor    edi,DWORD PTR [ebx+0xe313d34]
  417431:	out    0xd0,eax
  417433:	imul   ebp,DWORD PTR [edx+0x18],0xffffffd5
  417437:	jae    0x41741a
  417439:	jp     0x41743e
  41743b:	mov    ds:0x80671db4,al
  417440:	or     ch,BYTE PTR [esi+0x10]
  417443:	jnp    0x41743d
  417445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417446:	add    ebp,esi
  417448:	aam    0xf2
  41744a:	jp     0x41746c
  41744c:	mov    ds:0x8ddcc3fc,eax
  417451:	das    
  417452:	js     0x417484
  417454:	pop    ebx
  417455:	xchg   edi,eax
  417456:	inc    ax
  417458:	or     edi,DWORD PTR [esi+0x66]
  41745b:	mov    BYTE PTR [edi],0x0
  41745e:	jmp    0xad417463
  417463:	pop    ebx
  417464:	jae    0x417447
  417466:	dec    ebp
  417467:	xor    DWORD PTR [ebx-0x3415cd7],eax
  41746d:	hlt    
  41746e:	clc    
  41746f:	or     DWORD PTR [eax-0x17],eax
  417472:	jno    0x4174d3
  417474:	jp     0x41740a
  417476:	mov    edi,0xd905438f
  41747b:	ds or  eax,0x73c731a6
  417481:	scas   eax,DWORD PTR es:[edi]
  417482:	sbb    dl,bh
  417484:	inc    edi
  417485:	out    dx,al
  417486:	push   cs
  417487:	add    BYTE PTR [ebx-0x1f],0xec
  41748b:	inc    esi
  41748c:	je     0x4174b1
  41748e:	xor    dh,BYTE PTR [edi-0x35a4a304]
  417494:	cld    
  417495:	hlt    
  417496:	in     al,0x9
  417498:	inc    eax
  417499:	jmp    0x6c554a75
  41749e:	test   BYTE PTR [esi+0x50],bl
  4174a1:	mov    dh,0x4c
  4174a3:	push   edx
  4174a4:	push   ebp
  4174a5:	scas   al,BYTE PTR es:[edi]
  4174a6:	inc    esp
  4174a7:	add    bh,ch
  4174a9:	mov    edi,0x13ff5f72
  4174ae:	add    BYTE PTR [eax+0x469df943],dl
  4174b4:	je     0x41749a
  4174b6:	fwait
  4174b7:	int    0xfb
  4174b9:	jo     0x4174ca
  4174bb:	pop    DWORD PTR [ebx-0x7f]
  4174be:	stos   BYTE PTR es:[edi],al
  4174bf:	or     al,0xfd
  4174c1:	cld    
  4174c2:	mov    BYTE PTR [esi+0x11],ch
  4174c5:	and    DWORD PTR [eax],eax
  4174c7:	add    BYTE PTR [eax],al
  4174c9:	mov    ds,WORD PTR [ebx+0x31]
  4174cc:	sub    DWORD PTR [esi+0x313058bb],esi
  4174d2:	idiv   edi
  4174d4:	mov    ebx,0x3d816b5b
  4174d9:	(bad)  [esi+0x2a410055]
  4174df:	fs adc eax,0x6a53059a
  4174e5:	into   
  4174e6:	dec    esi
  4174e7:	mov    al,BYTE PTR [ebp+0x6]
  4174ea:	xor    ecx,DWORD PTR [edx+0x67330e45]
  4174f0:	adc    eax,0x89056a05
  4174f5:	addr16 loope 0x4174f2
  4174f8:	(bad)  
  4174f9:	adc    DWORD PTR [edx],esp
  4174fb:	jl     0x417512
  4174fd:	pop    edx
  4174fe:	add    eax,0x9a011ae7
  417503:	icebp  
  417504:	test   edx,ecx
  417506:	push   esi
  417507:	push   ds
  417508:	lea    edx,[edi-0x1f]
  41750b:	dec    esp
  41750c:	lea    esp,[edi]
  41750e:	xlat   BYTE PTR ds:[ebx]
  41750f:	dec    esp
  417510:	push   0x5f
  417512:	xor    eax,0xdc524586
  417517:	pop    eax
  417518:	cld    
  417519:	and    eax,0x4275facb
  41751e:	fadd   QWORD PTR [eax-0x8]
  417521:	test   edx,ecx
  417523:	jle    0x4175a2
  417525:	add    BYTE PTR ds:0x40e5d871,0x58
  41752c:	leave  
  41752d:	add    BYTE PTR [eax],al
  41752f:	add    BYTE PTR [eax+0x59],bl
  417532:	std    
  417533:	push   esp
  417534:	mov    eax,ds:0x7d514cb1
  417539:	cwde   
  41753a:	or     DWORD PTR [eax],eax
  41753c:	or     al,BYTE PTR ds:0x161e7460
  417542:	shr    bl,0xf6
  417545:	xchg   DWORD PTR [ecx-0x8],esp
  417548:	or     dh,BYTE PTR [esi]
  41754a:	push   ebx
  41754b:	mov    edi,DWORD PTR [edi]
  41754d:	jns    0x417560
  41754f:	inc    eax
  417550:	fidivr DWORD PTR [esi]
  417552:	std    
  417553:	mov    WORD PTR [edi-0xc72b014],cs
  417559:	stos   BYTE PTR es:[edi],al
  41755a:	fs push eax
  41755c:	aam    0x33
  41755e:	cmc    
  41755f:	cld    
  417560:	inc    esi
  417561:	push   esi
  417562:	fs (bad) 
  417564:	outs   dx,BYTE PTR ds:[esi]
  417565:	cs out dx,al
  417567:	inc    ebp
  417568:	mov    esp,0x330f093b
  41756d:	outs   dx,BYTE PTR ds:[esi]
  41756e:	cmp    al,0x29
  417571:	jnp    0x41759b
  417573:	mov    DWORD PTR [esi],ebp
  417575:	shl    DWORD PTR es:[ebx-0x1a],0x5
  41757a:	das    
  41757b:	inc    ebp
  41757c:	xchg   esp,eax
  41757d:	or     DWORD PTR [eax-0x28],edi
  417580:	jbe    0x4175a7
  417582:	in     eax,dx
  417583:	sub    DWORD PTR [ecx],ebx
  417585:	outs   dx,BYTE PTR ds:[esi]
  417586:	jbe    0x4175cb
  417588:	jnp    0x417608
  41758a:	sar    ah,1
  41758c:	(bad)  
  41758d:	cmp    DWORD PTR [ebx+esi*2-0x5],esp
  417591:	pusha  
  417592:	cmp    al,BYTE PTR [ecx+0x6b000000]
  417598:	outs   dx,DWORD PTR ds:[esi]
  417599:	fmul   DWORD PTR [edi]
  41759b:	push   0x3382f42b
  4175a0:	mov    dl,0x6
  4175a2:	mov    DWORD PTR [esi+0x78088b45],edi
  4175a8:	lods   eax,DWORD PTR ds:[esi]
  4175a9:	ins    DWORD PTR es:[edi],dx
  4175aa:	or     BYTE PTR [eax+0x34451745],ah
  4175b0:	test   eax,0xc4cdc015
  4175b5:	dec    edx
  4175b6:	ret    0x6df7
  4175b9:	mov    eax,0x6fed0f88
  4175be:	adc    al,al
  4175c0:	ud1    esi,DWORD PTR [eax]
  4175c3:	or     al,0xd5
  4175c5:	push   ebx
  4175c6:	aaa    
  4175c7:	xchg   BYTE PTR [ebp-0x2b],dl
  4175ca:	dec    ecx
  4175cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175cc:	add    eax,0x6df3004c
  4175d1:	bound  esi,QWORD PTR [ebx-0x5]
  4175d4:	push   es
  4175d5:	je     0x417598
  4175d7:	call   0xdcc7364a
  4175dc:	push   edi
  4175dd:	pusha  
  4175de:	leave  
  4175df:	loopne 0x4175fc
  4175e1:	adc    esi,DWORD PTR es:[edi-0x6a]
  4175e5:	call   0xa4cd68ed
  4175ea:	pop    edi
  4175eb:	jb     0x41764b
  4175ed:	ficom  WORD PTR [edx]
  4175ef:	jno    0x417593
  4175f1:	call   0xfe2e68f9
  4175f6:	push   ss
  4175f7:	sar    DWORD PTR [ebp+0x5515],0x0
  4175fe:	fisubr DWORD PTR [edi]
  417600:	out    0x88,al
  417602:	add    BYTE PTR ds:0xed2603e7,0x8a
  417609:	bound  eax,QWORD PTR [eax]
  41760b:	(bad)  
  41760d:	rol    DWORD PTR [ebp+ecx*4+0x248b5fac],0x69
  417615:	add    eax,0x91096bf3
  41761a:	mov    al,0x5a
  41761c:	aaa    
  41761d:	ins    BYTE PTR es:[edi],dx
  41761e:	js     0x417672
  417620:	(bad)  
  417621:	bound  ebp,QWORD PTR [ecx+eax*8-0x2e]
  417625:	push   ds
  417626:	ss pop es
  417628:	imul   esi,ecx,0x45
  41762b:	push   edi
  41762c:	out    0x90,eax
  41762e:	mov    al,0x5e
  417630:	pop    ss
  417631:	in     al,dx
  417632:	pop    esp
  417633:	push   es
  417634:	out    0x3,eax
  417636:	sbb    ecx,DWORD PTR [esi]
  417638:	xchg   edi,eax
  417639:	bound  esp,QWORD PTR [esi]
  41763b:	mov    ebx,DWORD PTR [edi+0x6b071e88]
  417641:	retf   
  417642:	adc    eax,0x8886e757
  417647:	pop    esi
  417648:	mov    bh,0x12
  41764a:	jno    0x417664
  41764c:	call   0xcd6954
  417651:	sub    al,0x97
  417653:	mov    cl,0xe7
  417655:	cmc    
  417656:	test   eax,0x306cfd53
  41765b:	add    al,0x8e
  41765d:	or     al,0xf6
  41765f:	push   es
  417660:	add    BYTE PTR [edx+0x0],ch
  417663:	add    BYTE PTR [eax],al
  417665:	ror    DWORD PTR [esi],cl
  417667:	add    ch,dl
  417669:	jmp    0x417627
  41766b:	out    0x21,eax
  41766d:	cli    
  41766e:	push   es
  41766f:	add    BYTE PTR [ebp+0x30],ah
  417672:	ficom  DWORD PTR [edx+edi*8]
  417675:	sbb    dl,BYTE PTR [ebx+esi*2+0x35]
  417679:	sbb    bh,dl
  41767b:	inc    ebp
  41767c:	adc    DWORD PTR es:[edi+eiz*8-0x2ac556d],edi
  417684:	bound  ebp,QWORD PTR [edx]
  417686:	outs   dx,BYTE PTR ds:[esi]
  417687:	adc    eax,0xfd06f0e8
  41768c:	jl     0x4176aa
  41768e:	add    BYTE PTR [ebx-0x3],0x9
  417692:	xlat   BYTE PTR ds:[ebx]
  417693:	repz not BYTE PTR [edx]
  417696:	push   esp
  417697:	jae    0x41768a
  417699:	stos   BYTE PTR es:[edi],al
  41769a:	outs   dx,BYTE PTR ds:[esi]
  41769b:	rcr    dl,1
  41769d:	rcl    BYTE PTR [ebx-0x77],cl
  4176a0:	and    al,0xd3
  4176a2:	fistp  QWORD PTR [edi+0x74476de5]
  4176a8:	fstp   st(0)
  4176aa:	add    DWORD PTR [esi-0x3a],eax
  4176ad:	ror    BYTE PTR [ebp+0x4775f143],cl
  4176b3:	jae    0x4176a1
  4176b5:	inc    esi
  4176b6:	push   esp
  4176b7:	pop    esi
  4176b8:	ret    0x8253
  4176bb:	pop    esi
  4176bc:	icebp  
  4176bd:	pop    edi
  4176be:	push   ebx
  4176bf:	adc    ecx,DWORD PTR [ebp+0x62001625]
  4176c5:	test   eax,0xea245e
  4176ca:	add    BYTE PTR [eax],al
  4176cc:	lock push es
  4176ce:	mov    DWORD PTR [eax],eax
  4176d0:	xlat   BYTE PTR ds:[ebx]
  4176d1:	scas   al,BYTE PTR es:[edi]
  4176d2:	test   BYTE PTR [esi+0x22],al
  4176d5:	add    DWORD PTR [ecx-0x4],0xffffff93
  4176d9:	inc    eax
  4176da:	sub    DWORD PTR [ebx+0x46850317],ecx
  4176e0:	or     ah,bl
  4176e2:	mov    esi,ebp
  4176e4:	retf   0x2f09
  4176e7:	shl    BYTE PTR ds:0x978bf93e,cl
  4176ed:	mov    cl,0x4e
  4176ef:	mov    DWORD PTR [ecx+ebp*1-0x7e09b97b],ebp
  4176f6:	push   esi
  4176f7:	xor    al,0xfd
  4176f9:	pop    ebp
  4176fa:	in     eax,dx
  4176fb:	adc    bl,BYTE PTR [edx+0x9]
  4176fe:	das    
  4176ff:	call   DWORD PTR [ebx-0x578ac699]
  417705:	mov    ss,WORD PTR [edi+edx*2+0x55]
  417709:	out    0x10,al
  41770b:	mov    eax,0x88fd4988
  417710:	push   esp
  417711:	cmc    
  417712:	mov    DWORD PTR ss:[edi],0xd4e85459
  417719:	dec    ebp
  41771a:	cld    
  41771b:	inc    DWORD PTR [ebp+0x4d45cfe1]
  417721:	out    0x69,al
  417723:	(bad)  
  417724:	mov    dl,0xe3
  417726:	jp     0x417727
  417728:	mov    ah,0x26
  41772a:	sti    
  41772b:	adc    eax,0x3d5b86
  417730:	add    BYTE PTR [eax],al
  417732:	add    BYTE PTR [edi+0x498b3547],bh
  417738:	bnd ret 0xe874
  41773c:	test   DWORD PTR [ecx+0x8],ecx
  41773f:	or     ebx,DWORD PTR [ebx+0x583a15fc]
  417745:	cmp    eax,0x73c99700
  41774a:	adc    esi,ebx
  41774c:	(bad)  
  41774e:	pop    es
  41774f:	lock pop esi
  417751:	add    DWORD PTR [eax],eax
  417753:	jg     0x4177ae
  417755:	pusha  
  417756:	xor    esp,edi
  417758:	cmp    DWORD PTR [ecx-0x75a04cee],esp
  41775e:	cmp    DWORD PTR [edx],ebp
  417760:	cdq    
  417761:	(bad)  
  417762:	and    bh,BYTE PTR [eax+0x6c]
  417765:	add    eax,0xbc364551
  41776a:	pop    ebx
  41776b:	xor    bl,BYTE PTR [esi-0x17]
  41776e:	dec    esp
  417770:	add    ax,bp
  417773:	mov    edx,0x7700010d
  417778:	push   ds
  417779:	(bad)  
  41777a:	or     BYTE PTR [ecx+0x5e],cl
  41777d:	imul   esi,DWORD PTR [esi+esi*1+0x25],0xf8f36a60
  417785:	jnp    0x4177b8
  417787:	pushf  
  417788:	popf   
  417789:	imul   ebp,DWORD PTR [eax+0x2e],0x9b555ffd
  417790:	add    dh,0xfc
  417793:	test   BYTE PTR [ecx+0x4041],dl
  417799:	add    BYTE PTR [eax+0x7f73602f],cl
  41779f:	push   es
  4177a0:	mov    dh,0x42
  4177a2:	ins    BYTE PTR es:[edi],dx
  4177a3:	gs mov ch,0xe7
  4177a6:	mov    ah,0x22
  4177a8:	pop    ebp
  4177a9:	std    
  4177aa:	jo     0x417742
  4177ac:	pop    ebp
  4177ad:	pop    ebp
  4177ae:	mov    ch,0x18
  4177b0:	dec    ebx
  4177b1:	ret    0x5df7
  4177b4:	mov    eax,0xb2ef5788
  4177b9:	push   eax
  4177ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177bb:	loop   0x41779a
  4177bd:	pop    es
  4177be:	pushf  
  4177bf:	out    0xde,al
  4177c1:	imul   DWORD PTR [ebx+edi*1]
  4177c4:	ins    DWORD PTR es:[edi],dx
  4177c5:	adc    dh,BYTE PTR [ebx+0x3a12e706]
  4177cb:	push   cs
  4177cc:	cmp    eax,0x61da9f2c
  4177d1:	(bad)  
  4177d2:	fmul   DWORD PTR [edi]
  4177d4:	stos   BYTE PTR es:[edi],al
  4177d5:	fcomp  DWORD PTR [ecx-0x7a9fdb83]
  4177db:	sbb    al,0x7e
  4177dd:	mov    al,0x7f
  4177e0:	sub    eax,0x76392218
  4177e5:	(bad)  
  4177e6:	sbb    BYTE PTR [esi-0x43],bh
  4177e9:	pop    ss
  4177ea:	dec    edx
  4177eb:	cmp    ebx,ebp
  4177ed:	add    bh,BYTE PTR ds:0x45a6217
  4177f3:	mov    ah,0xde
  4177f5:	xlat   BYTE PTR ds:[ebx]
  4177f6:	or     al,0x54
  4177f8:	fmul   QWORD PTR [edi]
  4177fa:	loop   0x4177c2
  4177fc:	out    0x2a,al
  4177fe:	add    BYTE PTR [eax],al
  417800:	add    BYTE PTR [esi],ch
  417802:	push   ebx
  417804:	arpl   WORD PTR [edx-0xb2d18f6],ax
  41780a:	push   ebx
  41780b:	lods   al,BYTE PTR ds:[esi]
  41780c:	pop    edi
  41780d:	push   0xffffffc9
  41780f:	sbb    bl,BYTE PTR [ebx]
  417811:	sub    eax,0x8e499923
  417816:	(bad)  [esi]
  417818:	imul   edx,ebp,0x7d
  41781b:	out    0x8c,al
  41781d:	push   ds
  41781e:	or     esi,DWORD PTR [eax-0x41]
  417821:	in     al,dx
  417822:	jg     0x4177d1
  417824:	pop    ss
  417825:	fiadd  DWORD PTR [esi-0x2a]
  417828:	add    ch,BYTE PTR [ebp-0x5308aee2]
  41782e:	push   ebx
  41782f:	push   esp
  417830:	or     al,0x56
  417832:	stc    
  417833:	push   ss
  417834:	test   BYTE PTR [edi+eax*1],0x6a
  417838:	inc    edi
  417839:	not    DWORD PTR [ebx+0x3c]
  41783c:	pop    esp
  41783d:	ds stc 
  41783f:	mov    dh,0xf1
  417841:	hlt    
  417842:	push   es
  417843:	add    BYTE PTR [ecx-0x9],bh
  417846:	pop    ebp
  417847:	pop    es
  417848:	push   ss
  417849:	(bad)  
  41784a:	imul   edi
  41784c:	sti    
  41784d:	xor    BYTE PTR [ebx+0x2f],dl
  417850:	test   eax,0xabc6ae55
  417855:	hlt    
  417856:	push   es
  417857:	push   ebx
  417858:	bound  edx,QWORD PTR [ebp+eax*4-0x45be2614]
  41785f:	lds    esp,FWORD PTR [esp+edx*4]
  417862:	push   es
  417863:	std    
  417864:	fadd   QWORD PTR [eax]
  417866:	add    BYTE PTR [eax],al
  417868:	cld    
  417869:	idiv   DWORD PTR [edi]
  41786b:	jmp    0xafccc7e9
  417870:	call   0x40e5ff2b
  417875:	push   esp
  417876:	adc    eax,DWORD PTR [ebp-0x3e]
  417879:	adc    al,BYTE PTR [eax]
  41787b:	sbb    cl,BYTE PTR [eax]
  41787d:	mov    bl,BYTE PTR [ebx+0x41]
  417880:	fbstp  TBYTE PTR [eax+0x7f95b72b]
  417886:	inc    ebx
  417887:	loope  0x4178fa
  417889:	inc    edi
  41788a:	add    al,0x60
  41788c:	mov    ebx,0xe8c48756
  417891:	jg     0x4178d9
  417893:	ror    DWORD PTR [edx-0x77527509],1
  417899:	push   es
  41789a:	push   eax
  41789b:	push   cs
  41789c:	stos   DWORD PTR es:[edi],eax
  41789d:	push   esi
  41789e:	std    
  41789f:	(bad)  
  4178a1:	clc    
  4178a2:	aas    
  4178a3:	jmp    0x6c4dc419
  4178a8:	mov    al,0xd5
  4178aa:	inc    esp
  4178ab:	bound  ebp,QWORD PTR [esi]
  4178ad:	and    al,BYTE PTR [ecx]
  4178af:	sub    al,0xef
  4178b1:	xchg   BYTE PTR [ebx-0x13],bh
  4178b4:	lock aad 0xb
  4178b7:	sbb    bh,BYTE PTR [eax+0x37600889]
  4178bd:	push   es
  4178be:	xchg   DWORD PTR [eax],eax
  4178c0:	add    al,BYTE PTR [ebx]
  4178c2:	out    0x2b,eax
  4178c4:	rol    DWORD PTR [edx],0x81
  4178c7:	leave  
  4178c8:	out    dx,al
  4178c9:	test   BYTE PTR [esi+0xd7],0xf1
  4178d0:	adc    eax,0x57a2fa7d
  4178d5:	std    
  4178d6:	(bad)  
  4178d7:	clc    
  4178d8:	push   ecx
  4178d9:	cld    
  4178da:	inc    eax
  4178db:	push   ds
  4178dc:	pusha  
  4178dd:	add    bl,BYTE PTR [ecx-0x6d]
  4178e0:	repnz xor al,0x48
  4178e3:	push   cs
  4178e4:	cmp    BYTE PTR ds:0x8502f289,al
  4178ea:	dec    eax
  4178eb:	(bad)  
  4178ed:	add    eax,DWORD PTR [ebx-0x39fffd06]
  4178f3:	(bad)  
  4178f4:	mov    dl,0xfc
  4178f6:	dec    BYTE PTR [edi+0x224586ad]
  4178fc:	mov    BYTE PTR [ecx+0x8],al
  4178ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417900:	xchg   BYTE PTR [edi+0x2948f117],bh
  417906:	jb     0x41794f
  417908:	mov    ah,0x70
  41790a:	lock in eax,0x59
  41790d:	in     eax,dx
  41790e:	adc    bl,BYTE PTR [edx+0x5]
  417911:	mov    al,BYTE PTR [ebp-0x2b]
  417914:	xchg   ebx,eax
  417915:	pop    eax
  417916:	leave  
  417917:	enter  0x2,0x55
  41791b:	adc    edi,edx
  41791d:	jle    0x417903
  41791f:	loop   0x4178a8
  417921:	in     al,dx
  417922:	adc    BYTE PTR [ecx],al
  417924:	or     BYTE PTR [edi+0x60680],al
  41792a:	add    BYTE PTR [esp+edi*2+0x7e462444],cl
  417931:	aas    
  417932:	cmp    al,0x0
  417934:	add    BYTE PTR [eax],al
  417936:	sbb    eax,0x5e24447e
  41793b:	xchg   dh,cl
  41793d:	push   ebx
  41793f:	adc    edx,ebp
  417941:	push   DWORD PTR [edi+0x2b]
  417944:	sub    BYTE PTR [eax],bl
  417946:	mov    ds:0xdefd01b5,eax
  41794b:	fucomi st,st(6)
  41794d:	aas    
  41794e:	repz pop edx
  417950:	(bad)  
  417951:	(bad)  
  417952:	and    al,0x5f
  417954:	aad    0x6
  417956:	jo     0x4178ff
  417958:	add    cl,BYTE PTR ds:0xda6e
  41795e:	repz fsubr st(4),st
  417961:	and    edi,ebx
  417963:	pop    edi
  417964:	adc    al,al
  417966:	outs   dx,BYTE PTR ds:[esi]
  417967:	or     ebp,DWORD PTR [eax]
  417969:	or     al,0x48
  41796b:	loop   0x41792c
  41796d:	pop    es
  41796e:	inc    ebx
  41796f:	fprem1 
  417971:	jmp    0x417974
  417973:	push   ds
  417974:	add    al,0x89
  417976:	xor    dh,bh
  417978:	test   al,al
  41797a:	pop    edi
  41797b:	cld    
  41797c:	xchg   BYTE PTR [ecx+0x17],cl
  41797f:	jecxz  0x4179ca
  417981:	je     0x41796b
  417983:	mov    ?,WORD PTR [ecx+0x5c9dcee7]
  417989:	std    
  41798a:	push   0xd74187c6
  41798f:	out    0xc4,al
  417991:	and    esi,edi
  417993:	jmp    0x4d80:0xe7ed735b
  41799a:	add    BYTE PTR [eax],al
  41799c:	add    BYTE PTR [ecx],al
  41799e:	pop    esi
  41799f:	push   0x257a7805
  4179a4:	or     BYTE PTR [eax-0x10],dh
  4179a7:	pop    ebx
  4179a8:	mov    esi,DWORD PTR [eax]
  4179aa:	push   esi
  4179ab:	mov    cl,0xfc
  4179ad:	fimul  WORD PTR [ebp-0x10]
  4179b0:	aas    
  4179b1:	repz loop 0x417a0f
  4179b4:	je     0x417a2d
  4179b6:	ins    DWORD PTR es:[edi],dx
  4179b7:	imul   ebp,DWORD PTR [edx+0x3e706f0],0x354476f
  4179c1:	lea    eax,[edi+0x5d44f626]
  4179c7:	add    al,0x5b
  4179c9:	(bad)  
  4179ca:	sub    dh,bl
  4179cc:	mov    dl,0xca
  4179ce:	or     dl,BYTE PTR [ecx+0x4]
  4179d1:	cdq    
  4179d2:	adc    al,0xb6
  4179d4:	pop    ss
  4179d5:	sbb    ebx,edx
  4179d7:	sub    al,0x4
  4179d9:	repz call FWORD PTR [esp+edx*2+0x1e]
  4179de:	xor    DWORD PTR [edx],eax
  4179e0:	push   edx
  4179e1:	mov    WORD PTR [eax-0x19],gs
  4179e4:	jp     0x4179b5
  4179e6:	push   es
  4179e7:	push   0xd8c07342
  4179ec:	add    ebx,DWORD PTR [esi-0x10391ea2]
  4179f2:	dec    edi
  4179f3:	or     bh,0xe7
  4179f6:	dec    edi
  4179f7:	outs   dx,BYTE PTR ds:[esi]
  4179f8:	mov    ebx,0xb94c7c3e
  4179fd:	mov    bl,0xb3
  4179ff:	jno    0x4179b9
  417a01:	add    BYTE PTR [eax],al
  417a03:	add    BYTE PTR [eax],dl
  417a05:	(bad)  
  417a06:	ds inc bh
  417a09:	dec    edi
  417a0a:	dec    esi
  417a0b:	pop    ss
  417a0c:	mov    bl,0xab
  417a0e:	sub    BYTE PTR [eax],al
  417a10:	repz mov bl,0x94
  417a13:	mov    fs,WORD PTR [ebx-0x13459c49]
  417a19:	mov    bl,0x2d
  417a1b:	icebp  
  417a1c:	mov    ah,dh
  417a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1f:	add    ebp,DWORD PTR [eax-0x30]
  417a22:	into   
  417a23:	pop    edx
  417a24:	(bad)  
  417a25:	pop    esi
  417a26:	or     eax,0xe4f87c6
  417a2b:	ror    ah,cl
  417a2d:	pop    esi
  417a2e:	and    eax,0x914f77c6
  417a33:	repz les ecx,FWORD PTR [eax+0x0]
  417a37:	out    dx,al
  417a38:	lock leave 
  417a3a:	inc    edi
  417a3b:	je     0x4179fc
  417a3d:	test   esi,eax
  417a3f:	or     DWORD PTR [eax+0x36b3e818],edi
  417a45:	push   edx
  417a46:	std    
  417a47:	inc    ebx
  417a48:	imul   DWORD PTR [esi-0x370f183b]
  417a4e:	inc    edi
  417a4f:	cmp    al,0x96
  417a51:	mov    ch,0xfc
  417a53:	aam    0xc0
  417a55:	hlt    
  417a56:	aas    
  417a57:	jmp    0xaa9a2bc5
  417a5c:	arpl   WORD PTR [esi-0x14],di
  417a5f:	push   0xe8ff0e8c
  417a64:	lock mov ch,0x55
  417a67:	add    BYTE PTR ds:[eax],al
  417a6a:	add    BYTE PTR [ebx+ecx*8+0x7],dh
  417a6e:	vpcmpeqw k5{z},xmm0,xmm7
  417a74:	push   es
  417a75:	add    BYTE PTR [eax-0x4d],dh
  417a78:	pop    edx
  417a79:	(bad)  
  417a7a:	sub    al,0x44
  417a7c:	pop    es
  417a7d:	mov    ecx,0xfd4ec3b9
  417a82:	je     0x417a37
  417a84:	xor    dl,BYTE PTR [eax+0x72]
  417a87:	and    DWORD PTR [edi+0x42],ebx
  417a8a:	push   esp
  417a8b:	sub    DWORD PTR [esp+eax*4+0x29],ecx
  417a8f:	jmp    0xf12b4916
  417a94:	push   es
  417a95:	mov    ah,BYTE PTR [eax+edx*1+0x49150a5f]
  417a9c:	dec    esp
  417a9d:	mov    DWORD PTR [ecx],edi
  417a9f:	jne    0x417aee
  417aa1:	add    bl,BYTE PTR [esp+edx*4-0xeedf020]
  417aa8:	xchg   esi,edi
  417aaa:	(bad)  
  417aab:	mov    ds:0x38ed6a09,eax
  417ab0:	pop    edi
  417ab1:	add    al,BYTE PTR [eax]
  417ab3:	cmp    edx,ecx
  417ab5:	dec    edi
  417ab6:	lea    edx,[edi-0x75ff9556]
  417abc:	mov    cl,0x10
  417abe:	xor    al,0x44
  417ac0:	dec    edx
  417ac1:	std    
  417ac2:	add    BYTE PTR [esi-0x58769a01],0xa2
  417ac9:	dec    esi
  417aca:	dec    esi
  417acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acc:	push   eax
  417acd:	sub    dh,0x0
  417ad0:	add    BYTE PTR [eax],al
  417ad2:	inc    edi
  417ad3:	inc    DWORD PTR [eax+0xa4a97]
  417ad9:	push   0x4a
  417adb:	test   DWORD PTR [ecx-0x1f],eax
  417ade:	or     al,BYTE PTR [esi-0x500557bf]
  417ae4:	adc    BYTE PTR [eax],dh
  417ae6:	adc    al,0x4a
  417ae8:	std    
  417ae9:	adc    BYTE PTR [esi-0x1],0xe6
  417aed:	push   es
  417aee:	xchg   ecx,eax
  417aef:	(bad)  
  417af0:	fimul  WORD PTR [ecx-0x74995929]
  417af6:	(bad)  
  417af7:	mov    ecx,0x3e6d0169
  417afc:	frstor [esi-0x65]
  417aff:	ret    0x8d07
  417b02:	out    0xc1,eax
  417b04:	mov    DWORD PTR gs:[edi+0x3351e8a3],eax
  417b0b:	mov    al,0xfa
  417b0d:	jmp    DWORD PTR [edi+0x6a4588bd]
  417b13:	pop    edx
  417b14:	or     eax,0x8709ca27
  417b19:	into   
  417b1a:	inc    edx
  417b1b:	gs fcos 
  417b1e:	fld    QWORD PTR [esi-0x7d3e8b40]
  417b24:	jns    0x417b32
  417b26:	mov    bh,BYTE PTR ds:0xbd67ff53
  417b2c:	xchg   BYTE PTR [ebp-0xd],dl
  417b2f:	arpl   WORD PTR [ecx+ebp*2-0x3173680a],si
  417b36:	add    BYTE PTR [eax],al
  417b38:	add    BYTE PTR [ebx+0x6cfd36d4],cl
  417b3e:	jecxz  0x417b83
  417b40:	jae    0x417af4
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    esi,DWORD PTR [esi+0x5c88b3fb]
  417b4a:	aaa    
  417b4b:	pop    ds
  417b4c:	sti    
  417b4d:	dec    esp
  417b4e:	sub    al,0x86
  417b50:	jae    0x417b8d
  417b52:	pushf  
  417b53:	mov    esi,0xc3b597c7
  417b58:	dec    DWORD PTR [eax+ebp*4+0x3b]
  417b5c:	std    
  417b5d:	sub    al,0x8d
  417b5f:	mov    esi,0x5b1273f8
  417b64:	add    ebp,esp
  417b66:	loope  0x417b5f
  417b68:	cld    
  417b69:	adc    al,0xa4
  417b6b:	adc    eax,eax
  417b6d:	lods   al,BYTE PTR ds:[esi]
  417b6e:	or     eax,0x6331c6bb
  417b73:	add    DWORD PTR [edx-0xe],ebp
  417b76:	stos   BYTE PTR es:[edi],al
  417b77:	mov    ebp,0x4fd8a3db
  417b7c:	call   0xfd994668
  417b81:	fdivr  DWORD PTR [ecx-0x15]
  417b84:	or     al,0x6e
  417b86:	pop    ebx
  417b87:	xchg   ebp,eax
  417b88:	pop    eax
  417b89:	retf   
  417b8a:	sar    BYTE PTR [eax+0x0],1
  417b8d:	rep lods al,BYTE PTR ds:[esi]
  417b8f:	int    0xf
  417b91:	jbe    0x417bfe
  417b93:	inc    ebp
  417b94:	(bad)  
  417b95:	mov    esp,0xe77357bd
  417b9a:	mov    ch,0x15
  417b9c:	pop    esp
  417b9d:	add    BYTE PTR [eax],al
  417b9f:	add    BYTE PTR [ebp+ecx*1-0x16fc8c74],ch
  417ba6:	aas    
  417ba7:	xchg   DWORD PTR [esi-0x5a],esi
  417baa:	pop    eax
  417bab:	std    
  417bac:	xchg   esp,eax
  417bad:	pop    es
  417bae:	je     0x417b6e
  417bb0:	jo     0x417b69
  417bb2:	push   cs
  417bb3:	jg     0x417b5f
  417bb5:	dec    esp
  417bb6:	push   ss
  417bb7:	jg     0x417b6c
  417bb9:	ror    esp,cl
  417bbb:	or     BYTE PTR [esi],bh
  417bbd:	ret    0xcb6a
  417bc0:	mov    ah,0xd2
  417bc2:	jecxz  0x417b48
  417bc4:	pop    ebx
  417bc5:	bnd jnp 0x417bc9
  417bc8:	and    al,BYTE PTR [edi-0x7b]
  417bcb:	mov    dh,BYTE PTR [eax-0x587e8b7c]
  417bd1:	dec    ebx
  417bd2:	ficom  WORD PTR [edi-0x5d]
  417bd5:	jns    0x417c03
  417bd7:	and    BYTE PTR [ebx+0x3662755e],0x4c
  417bde:	imul   eax,DWORD PTR [edi+eiz*4-0xd],0x6b
  417be3:	cmp    DWORD PTR [edi-0x3ca849b5],0xc3982479
  417bed:	jns    0x417c5b
  417bef:	dec    eax
  417bf0:	or     eax,0xcb49e4c
  417bf5:	ins    DWORD PTR es:[edi],dx
  417bf6:	xor    edx,DWORD PTR [edi-0x2]
  417bf9:	jns    0x417c5f
  417bfb:	dec    eax
  417bfc:	cmc    
  417bfd:	dec    ebx
  417bfe:	xchg   BYTE PTR [edi+ebp*8+0x8972d1],dh
  417c05:	add    BYTE PTR [eax],al
  417c07:	xor    BYTE PTR [edi],bh
  417c09:	sbb    ch,BYTE PTR [esi+0x62805f2c]
  417c0f:	(bad)  
  417c10:	dec    ebx
  417c11:	je     0x417ba4
  417c13:	mov    edi,0x79575e4c
  417c18:	cs aas 
  417c1a:	mov    al,0x18
  417c1c:	dec    esp
  417c1d:	dec    esi
  417c1e:	mov    eax,DWORD PTR [eax-0x1]
  417c21:	rol    BYTE PTR [ebx],1
  417c23:	js     0x417be6
  417c25:	sbb    dh,BYTE PTR [esp+ecx*4+0x4434ffb6]
  417c2c:	dec    edx
  417c2d:	mov    esi,DWORD PTR [eax+ebp*1+0x53314342]
  417c34:	aam    0x3f
  417c36:	jmp    0x171b8453
  417c3b:	and    al,0x81
  417c3d:	rol    DWORD PTR [eax],0xe1
  417c40:	dec    ecx
  417c41:	std    
  417c42:	push   es
  417c43:	mov    ds:0xdb68ec7e,al
  417c48:	mov    ds:0xb5f0e903,al
  417c4d:	push   esp
  417c4e:	out    dx,al
  417c4f:	arpl   di,di
  417c51:	adc    BYTE PTR [ecx],ch
  417c53:	idiv   DWORD PTR [ebp+0x4b]
  417c56:	icebp  
  417c57:	ja     0x417c20
  417c59:	jmp    0x417cbd
  417c5b:	ds dec edx
  417c5d:	mov    al,0x5d
  417c5f:	out    dx,eax
  417c60:	push   es
  417c61:	add    BYTE PTR [ebx+eiz*2+0x5f],dh
  417c65:	push   0xfd4b43f9
  417c6a:	inc    ebx
  417c6b:	add    BYTE PTR [eax],al
  417c6d:	add    bl,dh
  417c6f:	scas   al,BYTE PTR es:[edi]
  417c70:	out    0x4a,eax
  417c72:	fisttp QWORD PTR [ecx-0x3]
  417c75:	ins    DWORD PTR es:[edi],dx
  417c76:	mov    al,0xd7
  417c78:	add    al,0xdb
  417c7a:	mov    al,0x63
  417c7c:	stc    
  417c7d:	jmp    0xe7ca8372
  417c82:	popf   
  417c83:	xlat   BYTE PTR ds:[ebx]
  417c84:	pop    es
  417c85:	jb     0x417cf7
  417c87:	xchg   edi,edi
  417c89:	call   0x718d047e
  417c8e:	inc    ebp
  417c8f:	jle    0x417cec
  417c91:	jns    0x417cdb
  417c93:	cmp    al,0x92
  417c95:	call   0xd601ff8a
  417c9a:	dec    BYTE PTR [ebx+0x73]
  417c9d:	pop    ecx
  417c9e:	imul   eax,esi,0xb9d141f3
  417ca4:	cld    
  417ca5:	add    BYTE PTR ds:0x4f89d6f5,dh
  417cab:	fidiv  WORD PTR [esi]
  417cad:	ret    
  417cae:	xchg   ebp,eax
  417caf:	test   BYTE PTR [eax+eax*1-0x4276f976],ah
  417cb6:	mov    dh,0xb0
  417cb8:	cli    
  417cb9:	jmp    edx
  417cbb:	ins    BYTE PTR es:[edi],dx
  417cbc:	push   eax
  417cbd:	jmp    ebp
  417cbf:	jl     0x417d0a
  417cc1:	lock jo 0x417cc7
  417cc4:	mov    DWORD PTR [ebp-0x54c21],eax
  417cca:	mov    bh,BYTE PTR [ebp+0x41]
  417ccd:	hlt    
  417cce:	xor    DWORD PTR [edi-0x1b],eax
  417cd1:	call   0x38417cd6
  417cd6:	xor    al,0xfe
  417cd8:	inc    ecx
  417cda:	stos   BYTE PTR es:[edi],al
  417cdb:	ss sti 
  417cdd:	sahf   
  417cde:	mov    BYTE PTR cs:[edi],al
  417ce1:	rol    DWORD PTR [edx+0x19],1
  417ce4:	mov    DWORD PTR [edi],eax
  417ce6:	mov    bl,0x36
  417ce8:	inc    ebp
  417ce9:	inc    esi
  417cea:	aaa    
  417ceb:	add    eax,DWORD PTR [ebx-0x14055529]
  417cf1:	push   es
  417cf2:	cwde   
  417cf3:	gs enter 0x60a,0x0
  417cf8:	push   edi
  417cf9:	bound  esi,QWORD PTR [edi+0x7a]
  417cfc:	add    DWORD PTR [edx],ebx
  417cfe:	out    dx,eax
  417cff:	mov    esi,0x57ed0f74
  417d04:	or     al,0xdf
  417d06:	push   esp
  417d07:	push   eax
  417d08:	push   0xfffffffe
  417d0a:	fwait
  417d0b:	in     eax,0xa2
  417d0d:	lock add eax,0x36893b00
  417d13:	(bad)  
  417d15:	add    bh,bh
  417d17:	jae    0x417d26
  417d19:	lea    edi,[esi-0x3a]
  417d1c:	call   0x3c2828
  417d21:	repz out 0xbc,al
  417d24:	test   eax,0x9bc68707
  417d2a:	rcl    BYTE PTR [edi-0x3],0xa4
  417d2e:	ins    BYTE PTR es:[edi],dx
  417d2f:	jmp    0x1a170ca
  417d34:	xor    DWORD PTR [ebx+0xe7f3c7],esi
  417d3a:	add    BYTE PTR [eax],al
  417d3c:	mov    WORD PTR [eax],fs
  417d3e:	scas   eax,DWORD PTR es:[edi]
  417d3f:	imul   ebx,DWORD PTR [bx+0x1],0x0
  417d44:	rcr    BYTE PTR [edi],0x6c
  417d47:	add    DWORD PTR [ebx-0x493aad08],ecx
  417d4d:	pop    es
  417d4e:	add    DWORD PTR [eax],eax
  417d50:	repz pop edi
  417d52:	push   esp
  417d53:	xor    eax,0xfd12e94b
  417d58:	push   esp
  417d59:	jo     0x417dc4
  417d5b:	ror    BYTE PTR [ecx+eiz*2],1
  417d5e:	push   esp
  417d5f:	std    
  417d60:	mov    esi,0xfcc8692f
  417d65:	xor    BYTE PTR [ecx+ecx*4-0x13],dl
  417d69:	cmp    dh,cl
  417d6b:	idiv   DWORD PTR [eax+0x12]
  417d6e:	or     al,0x89
  417d70:	jae    0x417d51
  417d72:	add    DWORD PTR [eax],eax
  417d74:	repz inc edi
  417d76:	mov    bl,0x91
  417d78:	repnz pop edi
  417d7a:	adc    al,al
  417d7c:	jo     0x417da0
  417d7e:	pop    esp
  417d7f:	push   ebp
  417d81:	rol    DWORD PTR [eax+0x5d],cl
  417d84:	cwde   
  417d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d86:	aas    
  417d87:	add    al,0xf3
  417d89:	add    eax,0x4c6ee7f0
  417d8e:	push   esp
  417d8f:	std    
  417d90:	inc    ebx
  417d91:	fstp   TBYTE PTR [ebx-0x122ebcfd]
  417d97:	cmp    edi,ebp
  417d99:	sbb    eax,0x7b78104
  417d9e:	repz jle 0x417da1
  417da1:	add    BYTE PTR [eax],al
  417da3:	mov    bl,0xd3
  417da5:	in     eax,0x11
  417da7:	mov    bl,0x5e
  417da9:	sub    eax,0xde06f303
  417dae:	mov    WORD PTR [esi],?
  417db0:	jmp    0x417d4b
  417db2:	scas   al,BYTE PTR es:[edi]
  417db3:	jecxz  0x417e0e
  417db5:	xchg   ebp,eax
  417db6:	fstp   st(3)
  417db8:	inc    ecx
  417db9:	mov    ebx,0x2bb6baf
  417dbe:	hlt    
  417dbf:	jnp    0x417dbf
  417dc1:	mov    WORD PTR [edx],ds
  417dc3:	add    al,0xeb
  417dc5:	out    0x3,eax
  417dc7:	repz shr DWORD PTR [ebx-0x779f8a17],1
  417dce:	xor    al,0x6e
  417dd0:	dec    eax
  417dd1:	jb     0x417e26
  417dd3:	sub    dl,BYTE PTR [edx+0x73]
  417dd6:	sbb    esp,DWORD PTR [ecx+ebx*1]
  417dd9:	jne    0x417e00
  417ddb:	push   0xca80e2a9
  417de0:	add    dh,bh
  417de2:	fsubr  st,st(1)
  417de4:	jnp    0x417dd0
  417de6:	mov    BYTE PTR [ebx],dh
  417de8:	sar    ebp,cl
  417dea:	xchg   BYTE PTR [ebx],dh
  417dec:	add    eax,DWORD PTR [ecx+0x8]
  417def:	ret    
  417df0:	jns    0x417e20
  417df2:	in     al,dx
  417df3:	mov    ah,0x47
  417df5:	aam    0xf
  417df7:	add    eax,0x2f86e6c7
  417dfc:	sti    
  417dfd:	arpl   WORD PTR [edi+eax*4-0x2f],ax
  417e01:	sub    eax,DWORD PTR [edi+0x21e1ff32]
  417e07:	add    BYTE PTR [eax],al
  417e09:	add    BYTE PTR [edi+0x31],bh
  417e0c:	cmp    eax,0x8e07cf5c
  417e11:	push   ebx
  417e12:	dec    BYTE PTR [edi+0x5a22222e]
  417e18:	add    eax,0xffd2b00f
  417e1d:	sbb    al,0x54
  417e1f:	mov    ebx,0x4dd923
  417e24:	data16 and BYTE PTR [esi-0x18],ch
  417e28:	(bad)  
  417e29:	call   0xc384521e
  417e2e:	out    dx,al
  417e2f:	pop    esi
  417e30:	add    ch,BYTE PTR [esi]
  417e32:	inc    eax
  417e33:	dec    edx
  417e34:	mov    DWORD PTR [ecx],edi
  417e36:	hlt    
  417e37:	push   ebx
  417e38:	je     0x417e3b
  417e3a:	out    dx,al
  417e3b:	sbb    BYTE PTR [esi+0x7],bh
  417e3e:	jb     0x417de8
  417e40:	add    ebp,DWORD PTR [edx-0x44]
  417e43:	add    ebx,DWORD PTR [esp+ebx*4]
  417e46:	cmp    DWORD PTR [esi+0x1],0x64
  417e4a:	aaa    
  417e4b:	rcl    DWORD PTR [edx+ebp*2],cl
  417e4e:	das    
  417e4f:	jmp    FWORD PTR [ecx-0x7]
  417e52:	mov    al,ds:0xa0e7457c
  417e57:	dec    edx
  417e58:	adc    edi,DWORD PTR [ebp+0x6a00075a]
  417e5e:	stos   DWORD PTR es:[edi],eax
  417e5f:	cli    
  417e60:	sub    BYTE PTR [ecx],0x2b
  417e63:	icebp  
  417e64:	inc    edx
  417e65:	push   0xffffffad
  417e67:	(bad)  
  417e68:	cmp    BYTE PTR [edi],cl
  417e6a:	and    esi,DWORD PTR [esi+edx*2]
  417e6d:	rol    DWORD PTR [eax],0x0
  417e70:	add    BYTE PTR [ebx+0x6cefd08],ch
  417e76:	inc    edi
  417e77:	pop    esi
  417e78:	and    al,0x54
  417e7a:	inc    ebp
  417e7b:	add    al,0xe9
  417e7d:	pop    edx
  417e7e:	pop    edi
  417e7f:	mov    ch,0xf7
  417e81:	ror    DWORD PTR [ecx-0x50],0xe8
  417e85:	lods   eax,DWORD PTR ds:[esi]
  417e86:	push   esi
  417e87:	push   esi
  417e88:	jb     0x417ea6
  417e8a:	and    ecx,DWORD PTR [eax]
  417e8c:	ss jl  0x417edb
  417e8f:	mov    DWORD PTR [ecx],edi
  417e91:	repz jge 0x417ea8
  417e94:	pop    ebx
  417e95:	ins    DWORD PTR es:[edi],dx
  417e96:	mov    bh,0x67
  417e98:	add    cl,bl
  417e9a:	fadd   QWORD PTR [esi-0x32da11b0]
  417ea0:	cmp    esp,DWORD PTR [eax+0x58]
  417ea3:	add    DWORD PTR [ebx],esi
  417ea5:	call   0xfee:0x96f629e5
  417eac:	add    DWORD PTR [ecx+0x5e],edi
  417eaf:	das    
  417eb0:	test   DWORD PTR ds:0x5a8b1758,ebx
  417eb6:	sbb    ah,BYTE PTR [edi]
  417eb8:	icebp  
  417eb9:	popf   
  417eba:	mov    al,ds:0x3e240f15
  417ebf:	or     ecx,DWORD PTR [edx+0x414b0dbe]
  417ec5:	xor    BYTE PTR [esi],0xff
  417ec8:	je     0x417eb6
  417eca:	(bad)  
  417ecb:	sti    
  417ecc:	jg     0x417eaf
  417ece:	sbb    al,0xc0
  417ed0:	inc    eax
  417ed1:	inc    ecx
  417ed2:	jns    0x417f2f
  417ed4:	ret    0x0
  417ed7:	add    BYTE PTR [edx+0xa],dl
  417eda:	mov    dl,BYTE PTR [ecx]
  417edc:	loopne 0x417eed
  417ede:	dec    ebx
  417edf:	inc    ecx
  417ee0:	xchg   esp,eax
  417ee1:	adc    al,0xc2
  417ee3:	jne    0x417f29
  417ee5:	(bad)  
  417ee6:	sti    
  417ee7:	jg     0x417f34
  417ee9:	in     al,0xe5
  417eeb:	xor    ebx,DWORD PTR [edx-0x3eaa1f1c]
  417ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ef2:	jl     0x417ee0
  417ef4:	or     DWORD PTR ss:[eax],eax
  417ef7:	add    cl,ch
  417ef9:	or     BYTE PTR [eax-0x7780b98b],0xfa
  417f00:	mov    eax,ds:0x3d2ce4f1
  417f05:	or     al,BYTE PTR [eax]
  417f07:	mov    edx,edi
  417f09:	out    dx,al
  417f0a:	ss inc esi
  417f0c:	add    al,BYTE PTR [edi]
  417f0e:	jg     0x417f44
  417f10:	std    
  417f11:	or     DWORD PTR [eax],eax
  417f13:	div    bl
  417f15:	repnz and eax,DWORD PTR [edx]
  417f18:	js     0x417f04
  417f1a:	jmp    0x417ea2
  417f1c:	cs cwde 
  417f1e:	fmul   DWORD PTR [eax+ebp*2]
  417f21:	jmp    0x437d:0x682e86ef
  417f28:	mov    ebx,0x7acbaca6
  417f2d:	jb     0x417f1c
  417f2f:	mov    esp,ebp
  417f31:	mov    al,0xe4
  417f33:	out    dx,eax
  417f34:	repz mov al,0xe4
  417f37:	jmp    0x417f2c
  417f39:	fs xchg edi,eax
  417f3b:	mov    edi,0x7a000000
  417f40:	jb     0x417f8f
  417f42:	sbb    DWORD PTR [ebx+0x4685007d],0xfc000406
  417f4c:	mov    ebp,0x6e775173
  417f51:	add    ebp,edi
  417f53:	xlat   BYTE PTR ds:[ebx]
  417f54:	mov    edx,0x3032891a
  417f59:	add    BYTE PTR [esi-0x49ffd14c],dh
  417f5f:	mov    ah,0x31
  417f61:	inc    edx
  417f62:	loopne 0x417f4f
  417f64:	cmp    BYTE PTR [edx-0x80],al
  417f67:	aam    0x30
  417f69:	mov    ah,0x86
  417f6b:	mov    dh,0x5b
  417f6d:	add    BYTE PTR [ebx+0x12f5e],al
  417f73:	jo     0x417f97
  417f75:	push   esp
  417f76:	ret    
  417f77:	mov    al,0x2f
  417f79:	add    DWORD PTR ds:0xaa77,ecx
  417f7f:	repz cmp al,0x97
  417f82:	inc    ebp
  417f83:	idiv   DWORD PTR [eax-0xd959442]
  417f89:	outs   dx,DWORD PTR ds:[esi]
  417f8a:	mov    DWORD PTR [ebp+0x53437a63],esi
  417f90:	push   es
  417f91:	jb     0x417f5c
  417f93:	xchg   esp,eax
  417f94:	icebp  
  417f95:	scas   al,BYTE PTR es:[edi]
  417f96:	jp     0x417f40
  417f98:	outs   dx,BYTE PTR ds:[esi]
  417f99:	bound  edi,QWORD PTR [esi+0x7a9eeff4]
  417f9f:	xor    BYTE PTR [ebx+0x70],ch
  417fa2:	mov    esi,0x88000000
  417fa7:	nop
  417fa8:	mov    dl,0x1c
  417faa:	stos   DWORD PTR es:[edi],eax
  417fab:	adc    al,0x3d
  417fad:	enter  0x45f1,0x87
  417fb1:	sti    
  417fb2:	ins    DWORD PTR es:[edi],dx
  417fb3:	rcl    BYTE PTR [esi-0x1b2b7b00],cl
  417fb9:	cld    
  417fba:	jne    0x417fd0
  417fbc:	popf   
  417fbd:	shl    ah,0x8d
  417fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc1:	inc    ebx
  417fc2:	idiv   BYTE PTR [esi+ebp*4+0x8]
  417fc6:	pop    esp
  417fc7:	daa    
  417fc8:	out    dx,eax
  417fc9:	cld    
  417fca:	push   ebp
  417fcb:	mov    gs,WORD PTR [edi+eax*2+0x6ad6ca7a]
  417fd2:	fimul  DWORD PTR [eax+0x38]
  417fd5:	dec    ebx
  417fd6:	je     0x417fa2
  417fd8:	push   edx
  417fd9:	jl     0x418048
  417fdb:	mov    esp,edi
  417fdd:	add    esi,ebx
  417fdf:	lea    esp,[ebx+ecx*4+0x35f8d7a]
  417fe6:	repz push es
  417fe8:	ins    BYTE PTR es:[edi],dx
  417fe9:	mov    esi,0x6bac4c7c
  417fee:	dec    esp
  417fef:	inc    esp
  417ff0:	out    0x3,eax
  417ff2:	ins    BYTE PTR es:[edi],dx
  417ff3:	retf   0x4fa2
  417ff6:	loopne 0x41802e
  417ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff9:	ret    
  417ffa:	xor    al,0x8b
  417ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffd:	(bad)  
  417ffe:	jg     0x417fa2
  418000:	loope  0x418005
  418002:	repz adc ebp,DWORD PTR [edi+0x56]
  418006:	retf   
  418007:	push   es
  418008:	out    0x82,eax
  41800a:	add    BYTE PTR [eax],al
  41800c:	add    BYTE PTR [esi],ch
  41800e:	or     eax,0x7446400
  418013:	or     eax,0x4b8d0977
  418018:	cdq    
  418019:	jo     0x418057
  41801b:	data16 out dx,al
  41801d:	ins    BYTE PTR es:[edi],dx
  41801e:	sub    al,0xff
  418020:	call   0x7390615
  418025:	in     al,0x87
  418027:	loopne 0x418011
  418029:	lock push es
  41802b:	add    DWORD PTR [eax+0x6a58b7cb],0x1773a83e
  418035:	jo     0x418072
  418037:	push   0xb612c4dc
  41803c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41803d:	out    dx,eax
  41803e:	adc    DWORD PTR [esi-0x1f7c0d5a],esi
  418044:	loope  0x417fef
  418046:	test   BYTE PTR [ecx],al
  418048:	inc    ecx
  418049:	ds mov edi,edi
  41804c:	call   0xd850e41
  418051:	mov    bh,0xd3
  418053:	imul   ebp,eax,0x9cfe43aa
  418059:	mov    BYTE PTR [esi-0x47da4837],cl
  41805f:	movhps xmm1,QWORD PTR [edx+0xf]
  418063:	std    
  418064:	xchg   esp,eax
  418065:	push   0xac07902b
  41806a:	inc    ecx
  41806b:	add    DWORD PTR [ecx],0x4f8411ee
  418071:	add    BYTE PTR [eax],al
  418073:	add    BYTE PTR [ebx+0x43],al
  418076:	std    
  418077:	fs scas eax,DWORD PTR es:[edi]
  418079:	mov    edx,0x3f4d2408
  41807e:	std    
  41807f:	fidiv  WORD PTR ds:0xf7018088
  418085:	push   es
  418086:	add    DWORD PTR [ebx+ebp*1+0x2c],ecx
  41808a:	inc    ebx
  41808b:	add    BYTE PTR [ebx],cl
  41808d:	pop    es
  41808e:	add    BYTE PTR [edi],cl
  418090:	pushf  
  418091:	dec    esp
  418092:	add    DWORD PTR [edi],ecx
  418094:	mov    WORD PTR [edx+eax*1-0x3f],?
  418098:	cmp    bh,BYTE PTR [edi]
  41809a:	or     dl,al
  41809c:	or     edi,eax
  41809e:	ss inc ebp
  4180a0:	cli    
  4180a1:	push   ebp
  4180a2:	or     cl,BYTE PTR [ebx+0x3c7f072c]
  4180a8:	pop    eax
  4180a9:	push   es
  4180aa:	or     ecx,DWORD PTR [ebp+0x855]
  4180b0:	dec    ecx
  4180b1:	das    
  4180b2:	icebp  
  4180b3:	add    BYTE PTR [ecx-0x2d],bl
  4180b6:	pusha  
  4180b7:	cmovg  ecx,DWORD PTR [eax]
  4180ba:	std    
  4180bb:	dec    edx
  4180bd:	mov    ebp,0x2f49284d
  4180c2:	adc    DWORD PTR [eax],eax
  4180c4:	jmp    0x418093
  4180c6:	jle    0x418146
  4180c8:	cli    
  4180c9:	or     al,BYTE PTR [ebp+0x48c2da45]
  4180cf:	in     al,dx
  4180d0:	push   esp
  4180d1:	call   0x41dd36e0
  4180d6:	mov    bl,0x51
  4180d8:	add    BYTE PTR [eax],al
  4180da:	add    BYTE PTR [ebx-0x7ef72035],bl
  4180e0:	enter  0x4536,0xda
  4180e4:	pop    ecx
  4180e5:	push   cs
  4180e6:	add    edx,DWORD PTR [edx+ebp*8-0x42a1ba06]
  4180ed:	inc    eax
  4180ee:	adc    al,0xe3
  4180f0:	inc    esi
  4180f1:	jmp    0x7c280d31
  4180f6:	(bad)  
  4180f8:	dec    esi
  4180f9:	adc    DWORD PTR [ebx],edi
  4180fb:	mov    esi,fs
  4180fd:	or     cl,BYTE PTR [ebp+0xb95]
  418103:	ror    DWORD PTR [ecx-0x17],0x89
  418107:	repz repnz push ebx
  41810a:	cmp    DWORD PTR [ebp+0x684bd607],ebp
  418110:	repz push ebx
  418112:	sub    DWORD PTR [ebp+0x343790b],ebp
  418118:	lods   eax,DWORD PTR ds:[esi]
  418119:	inc    ebx
  41811a:	add    ah,BYTE PTR [ebx+0x70ebc4a4]
  418120:	jo     0x418124
  418122:	push   eax
  418123:	hlt    
  418124:	cmp    cl,BYTE PTR [ecx]
  418126:	push   ss
  418127:	xor    esi,DWORD PTR [eax]
  418129:	stos   BYTE PTR es:[edi],al
  41812a:	push   esi
  41812b:	outs   dx,BYTE PTR ds:[esi]
  41812c:	outs   dx,DWORD PTR ds:[esi]
  41812d:	aad    0x2b
  41812f:	push   0x9d0d53fa
  418134:	cs cld 
  418136:	mov    ch,0x22
  418138:	das    
  418139:	inc    edx
  41813a:	loopne 0x418137
  41813c:	and    al,0x3f
  41813e:	add    DWORD PTR [eax],eax
  418140:	add    BYTE PTR [eax],al
  418142:	mov    bl,0xe4
  418144:	les    ecx,FWORD PTR [edi]
  418146:	xor    edi,DWORD PTR ss:[eax+0x56]
  41814a:	jmp    FWORD PTR [edi+ecx*1+0x7e60f382]
  418151:	push   edx
  418153:	das    
  418154:	add    DWORD PTR [ecx+0x3903fc0e],eax
  41815a:	cmp    eax,0x78b3d308
  41815f:	push   0x5d
  418161:	std    
  418162:	ss inc esp
  418164:	jp     0x4181a9
  418166:	xor    DWORD PTR [esp+eax*8+0x21722813],0x7b
  41816e:	mov    esp,0x70ebc4a4
  418173:	out    dx,eax
  418174:	add    DWORD PTR [edi+0x437713ae],eax
  41817a:	inc    ebx
  41817b:	sub    al,0xc3
  41817d:	and    edi,DWORD PTR [edx+0x6a]
  418180:	push   ecx
  418181:	xor    DWORD PTR [ebx],0x37b3e906
  418187:	mov    ebx,0xff004cca
  41818c:	cld    
  41818d:	ret    
  41818e:	and    al,0xde
  418190:	das    
  418191:	xchg   DWORD PTR [ebx],esi
  418193:	mov    ebx,0x36a878f8
  418198:	out    dx,al
  418199:	xchg   ebp,eax
  41819a:	or     al,0x10
  41819c:	jge    0x418158
  41819e:	add    eax,0xebfbc746
  4181a3:	inc    edi
  4181a4:	jmp    0xcbba:0x43
  4181ab:	test   dh,0xf9
  4181ae:	mov    esp,DWORD PTR ds:0x68037200
  4181b4:	add    ebp,esi
  4181b6:	xchg   ecx,eax
  4181b7:	data16 add dh,bl
  4181ba:	push   es
  4181bb:	push   0xffffffe6
  4181bd:	rol    BYTE PTR [edi],0x76
  4181c0:	(bad)  
  4181c1:	loopne 0x41814e
  4181c3:	and    al,0xf8
  4181c5:	sti    
  4181c6:	enter  0xd006,0x82
  4181ca:	adc    BYTE PTR [ebp-0x62ee523c],dl
  4181d0:	mov    esp,0xfb4745f2
  4181d5:	jmp    0x41821c
  4181d7:	jmp    0x3:0x32c2724b
  4181de:	push   cs
  4181df:	addr16 or al,0x1f
  4181e2:	adc    BYTE PTR [ecx+ebp*4-0xd],ah
  4181e6:	push   es
  4181e7:	out    0x80,eax
  4181e9:	scas   al,BYTE PTR es:[edi]
  4181ea:	add    al,0x6a
  4181ec:	into   
  4181ed:	push   0xc086e5a4
  4181f2:	and    ah,bh
  4181f4:	add    ebp,DWORD PTR [edx-0x36]
  4181f7:	retf   0xa4c3
  4181fa:	lods   al,BYTE PTR ds:[esi]
  4181fb:	call   0x64424c
  418200:	(bad)  
  418201:	inc    DWORD PTR [ecx+0x73]
  418204:	rol    DWORD PTR [esi-0x4a068cbd],1
  41820a:	dec    ebp
  41820b:	std    
  41820c:	push   esp
  41820d:	add    BYTE PTR [eax],al
  41820f:	add    BYTE PTR [ebx],ch
  418211:	inc    ebx
  418212:	jae    0x4181f5
  418214:	enter  0xfc33,0xce
  418218:	test   al,0x27
  41821a:	clc    
  41821b:	pxor   mm0,QWORD PTR [esi]
  41821e:	mov    DWORD PTR [edi-0x7d],edx
  418221:	push   es
  418222:	add    cl,ch
  418224:	jae    0x41827b
  418226:	or     eax,0xfd40d665
  41822b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822c:	clc    
  41822d:	jns    0x418274
  41822f:	in     eax,0xe9
  418231:	jns    0x418280
  418233:	in     al,dx
  418234:	das    
  418235:	daa    
  418236:	or     dl,ah
  418238:	aaa    
  418239:	mov    BYTE PTR [ebx-0x7f],al
  41823c:	jmp    0x8411:0xf0e9fd41
  418243:	fsubp  st(7),st
  418245:	push   es
  418246:	add    BYTE PTR [edx+0x6d0d03b6],dh
  41824c:	mov    ecx,0x75e9fd40
  418251:	mov    ds:0xbb6de9f3,eax
  418256:	out    dx,eax
  418257:	(bad)  
  418258:	cdq    
  418259:	test   BYTE PTR [eax+0x46],dh
  41825c:	sub    BYTE PTR [edx-0x77],al
  41825f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418260:	call   0xf11ee5ea
  418265:	test   DWORD PTR [esi+0x9],edi
  418268:	test   DWORD PTR [edi-0x1a56eabd],0x126f570c
  418272:	mov    dh,0xb9
  418274:	add    BYTE PTR [eax],al
  418276:	add    bh,ch
  418278:	jg     0x418259
  41827a:	loope  0x4182d9
  41827c:	dec    ebp
  41827d:	cmp    DWORD PTR [eax],eax
  41827f:	lahf   
  418280:	retf   
  418281:	jae    0x418294
  418283:	pop    ecx
  418284:	inc    ebp
  418285:	and    edi,edi
  418287:	xchg   edi,eax
  418288:	das    
  418289:	mov    BYTE PTR [ebp+0x26],cl
  41828c:	ret    0xec40
  41828f:	adc    DWORD PTR [ebp+0x1d],edi
  418292:	jl     0x418300
  418294:	rol    BYTE PTR [eax+0x14],0x1
  418298:	inc    ebp
  418299:	sbb    eax,0xfb19bf0f
  41829e:	jmp    FWORD PTR ds:0x83ec40c0
  4182a4:	inc    esi
  4182a5:	in     eax,dx
  4182a6:	cmp    edx,esp
  4182a8:	and    dh,BYTE PTR [esi+0x47]
  4182ab:	xchg   ecx,eax
  4182ac:	inc    esi
  4182ad:	in     eax,dx
  4182ae:	sub    eax,esp
  4182b0:	out    0x84,al
  4182b2:	inc    ebp
  4182b3:	mov    al,BYTE PTR [ebp-0x41d5fd40]
  4182b9:	inc    eax
  4182ba:	in     al,dx
  4182bb:	dec    ecx
  4182bc:	retf   0x5001
  4182bf:	ins    DWORD PTR es:[edi],dx
  4182c0:	aaa    
  4182c1:	xor    eax,0x55031a16
  4182c6:	pop    ecx
  4182c7:	push   edi
  4182c8:	retf   0x2770
  4182cb:	push   ecx
  4182cc:	jg     0x4182bb
  4182ce:	andps  xmm6,XMMWORD PTR [ebx]
  4182d1:	or     al,0xb6
  4182d3:	pop    ebx
  4182d4:	add    edi,DWORD PTR [ebp-0x40c26d1e]
  4182da:	mov    eax,DWORD PTR [eax]
  4182dc:	add    BYTE PTR [eax],al
  4182de:	and    al,0xae
  4182e0:	(bad)  
  4182e1:	dec    DWORD PTR [edx-0x3afbbde3]
  4182e7:	icebp  
  4182e8:	push   ss
  4182e9:	rcr    BYTE PTR [edx-0x45],0x40
  4182ed:	hlt    
  4182ee:	inc    edi
  4182ef:	inc    esi
  4182f0:	cmp    BYTE PTR [esi-0x5e],cl
  4182f3:	pop    ecx
  4182f4:	mov    dh,0x8b
  4182f6:	xchg   edi,eax
  4182f7:	(bad)  
  4182f8:	cli    
  4182f9:	inc    ebp
  4182fa:	repz cmp edi,DWORD PTR [ebx+eax*2+0x63]
  4182ff:	test   eax,0x6e1813bf
  418304:	and    DWORD PTR ds:0xfd46f97e,ecx
  41830a:	inc    esp
  41830b:	test   eax,0xf070ebbf
  418310:	add    al,BYTE PTR [edi+0x437b53ae]
  418316:	and    esi,DWORD PTR [ecx]
  418318:	mov    edi,0x53eb7a23
  41831d:	xor    DWORD PTR [ebx],0x9efcb132
  418323:	push   ebx
  418324:	inc    edi
  418325:	adc    ecx,ebx
  418327:	push   ebp
  418328:	sar    edi,0xab
  41832b:	push   ss
  41832c:	jge    0x4182ee
  41832e:	in     al,dx
  41832f:	mov    ds:0x64f4fea5,al
  418334:	jnp    0x418381
  418336:	jecxz  0x418364
  418338:	(bad)  
  418339:	aas    
  41833a:	repnz and al,0x8f
  41833d:	pop    es
  41833e:	mov    dl,0x8e
  418340:	cld    
  418341:	or     BYTE PTR [eax],al
  418343:	add    BYTE PTR [eax],al
  418345:	mov    dl,0xb8
  418347:	jns    0x4182dd
  418349:	repz das 
  41834b:	add    DWORD PTR [ecx],ebp
  41834d:	xor    ch,BYTE PTR [eax+edx*2]
  418350:	fcomp  st(0)
  418352:	outs   dx,DWORD PTR ds:[esi]
  418353:	les    eax,FWORD PTR [esi+0x14ccdc2e]
  418359:	lods   al,BYTE PTR ds:[esi]
  41835a:	(bad)  
  41835b:	in     eax,dx
  41835c:	mov    BYTE PTR [esi],ch
  41835e:	cmp    al,0xc
  418360:	inc    esi
  418361:	ror    DWORD PTR [ebx-0x6c],cl
  418364:	out    0x23,eax
  418366:	mov    BYTE PTR [esi-0x3],0xb4
  41836a:	bound  ecx,QWORD PTR [ebp-0x1]
  41836d:	test   BYTE PTR [edi],ch
  41836f:	add    DWORD PTR [edx-0x10],ebp
  418372:	xchg   edi,eax
  418373:	pop    edx
  418374:	outs   dx,BYTE PTR ds:[esi]
  418375:	jne    0x41837d
  418377:	es dec ecx
  418379:	(bad)  
  41837a:	je     0x418322
  41837c:	add    dh,dh
  41837e:	je     0x418326
  418380:	add    eax,0xfcdf269c
  418385:	xchg   ebp,eax
  418386:	mov    ebx,ebx
  418388:	add    esi,DWORD PTR [ebx+edx*8-0xa]
  41838c:	jp     0x4183fb
  41838e:	and    bh,0x3
  418391:	repz add DWORD PTR [ebp-0x51f54711],edx
  418398:	shl    esp,0x7
  41839b:	out    0x3,eax
  41839d:	repz das 
  41839f:	xchg   BYTE PTR [edx],al
  4183a1:	repz push es
  4183a3:	bound  edi,QWORD PTR [ecx+0x5c947e8]
  4183a9:	add    BYTE PTR [eax],al
  4183ab:	add    BYTE PTR [ebx+edx*8-0x2e],dh
  4183af:	jl     0x41834e
  4183b1:	push   ss
  4183b2:	add    dh,BYTE PTR [edx+ebp*2]
  4183b5:	adc    bl,BYTE PTR [eax+0x7c]
  4183b8:	mov    al,0x12
  4183ba:	jo     0x4183ab
  4183bc:	hlt    
  4183bd:	(bad)  
  4183be:	xor    eax,0xc2507bf8
  4183c3:	mov    ecx,0xf41b8e54
  4183c8:	lock (bad) 
  4183ca:	sub    al,0x54
  4183cc:	add    al,0xc2
  4183ce:	(bad)  
  4183cf:	clc    
  4183d0:	ja     0x418359
  4183d2:	call   0xa7c976da
  4183d7:	add    eax,0x5af6c26c
  4183dc:	and    BYTE PTR [esi],al
  4183de:	out    0x3,eax
  4183e0:	jp     0x41845f
  4183e2:	jnp    0x4183e7
  4183e4:	repz push es
  4183e6:	sbb    bh,BYTE PTR [ebx]
  4183e8:	fidivr DWORD PTR ds:0x1a967ff6
  4183ee:	out    0x3,eax
  4183f0:	mov    esp,0x7becffcb
  4183f5:	mov    esi,ebx
  4183f7:	int3   
  4183f8:	lock push es
  4183fa:	mov    esi,esi
  4183fc:	jmp    0xf12b188d
  418401:	push   es
  418402:	mov    DWORD PTR [esi-0x141f82a0],ebp
  418408:	mov    al,ds:0xbbf5753b
  41840d:	mov    ah,0xb
  41840f:	inc    BYTE PTR [eax]
  418411:	add    BYTE PTR [eax],al
  418413:	push   esi
  418414:	int3   
  418415:	adc    eax,0x458df0a9
  41841a:	aad    0xb7
  41841c:	mov    ecx,0xc327007
  418421:	mov    DWORD PTR [edi+eax*8],esp
  418424:	test   esp,eax
  418426:	in     eax,0x9f
  418428:	(bad)  
  418429:	pop    ss
  41842a:	sar    dh,0x3d
  41842d:	std    
  41842e:	mov    BYTE PTR [edx+esi*2],0x45
  418432:	call   0x6a594bbe
  418437:	mov    esp,0xa80be708
  41843c:	cmp    ebp,edi
  41843e:	jb     0x4183f2
  418440:	out    0x3f,eax
  418442:	cmp    ecx,ecx
  418444:	cmp    esp,DWORD PTR [edi-0x17]
  418447:	xor    eax,0x845c17b8
  41844c:	push   es
  41844d:	push   esi
  41844e:	xchg   BYTE PTR [edx+0x2cb2890b],ah
  418454:	mov    eax,0x3a2760b
  418459:	call   0xfd7bae08
  41845e:	push   0x3f
  418460:	cmp    al,0x71
  418462:	or     eax,0x56fc13fa
  418467:	xor    al,0xb3
  418469:	and    ah,BYTE PTR [edi+ebp*1-0x4d]
  41846d:	or     BYTE PTR [eax],al
  41846f:	mul    DWORD PTR [ecx+edi*8]
  418472:	inc    ebp
  418474:	xor    eax,DWORD PTR [edx+0xb0]
  41847a:	out    dx,al
  41847b:	add    al,BYTE PTR [eax]
  41847d:	paddb  mm7,QWORD PTR [ebx-0x2]
  418481:	push   cs
  418482:	int3   
  418483:	jae    0x418484
  418485:	sar    dl,0x3a
  418488:	or     cl,al
  41848a:	dec    ecx
  41848b:	iret   
  41848c:	jg     0x4184cd
  41848e:	sahf   
  41848f:	dec    ebx
  418490:	scas   al,BYTE PTR es:[edi]
  418491:	jmp    0x4184ef
  418493:	rol    BYTE PTR [ebp+0x70],0xc3
  418497:	inc    ebp
  418498:	add    eax,0xc768580
  41849d:	test   BYTE PTR [edi],bh
  41849f:	and    edi,ebp
  4184a1:	dec    DWORD PTR [esi+eax*2+0x1d]
  4184a5:	add    DWORD PTR ds:0xa1d7986,edx
  4184ab:	pop    es
  4184ac:	or     esi,DWORD PTR [esi-0x49f4fe33]
  4184b2:	lds    ecx,FWORD PTR [eax]
  4184b4:	mov    ebp,0xbe4002e0
  4184b9:	add    eax,DWORD PTR [edx-0x79]
  4184bc:	cmp    edx,DWORD PTR [esi+edi*4-0x22]
  4184c0:	xchg   BYTE PTR [esi+0x65a],al
  4184c6:	pop    ecx
  4184c7:	stc    
  4184c8:	dec    BYTE PTR [eax-0x6c19ccf1]
  4184ce:	add    cl,0xfa
  4184d1:	mov    ebx,DWORD PTR [edi]
  4184d3:	out    0x3f,eax
  4184d5:	push   eax
  4184d6:	loopne 0x4184da
  4184d8:	push   0x0
  4184da:	inc    ebp
  4184db:	push   edi
  4184dc:	adc    eax,0x8d
  4184e1:	fld    QWORD PTR ds:0x36cfff56
  4184e7:	mov    bl,cl
  4184e9:	inc    ebp
  4184ea:	push   edi
  4184eb:	or     edi,edi
  4184ed:	repz pop edx
  4184ef:	stc    
  4184f0:	out    0xdf,eax
  4184f2:	aad    0x45
  4184f4:	std    
  4184f5:	jo     0x4184bf
  4184f7:	add    ecx,DWORD PTR ds:0xffe4db6f
  4184fd:	jl     0x418532
  4184ff:	in     al,dx
  418500:	sti    
  418501:	je     0x4184ec
  418503:	cmc    
  418504:	add    DWORD PTR [ecx+0x26000404],0x3c
  41850b:	inc    ebp
  41850c:	std    
  41850d:	pop    esp
  41850e:	pushf  
  41850f:	adc    bh,BYTE PTR [ebx]
  418511:	clc    
  418512:	or     eax,DWORD PTR [esi-0x3]
  418515:	(bad)  
  418516:	push   ebx
  418517:	or     BYTE PTR [edx],bl
  418519:	inc    edi
  41851a:	cmp    DWORD PTR [ebx+0x74],eax
  41851d:	push   ss
  41851e:	stos   DWORD PTR es:[edi],eax
  41851f:	inc    eax
  418520:	je     0x41850a
  418522:	push   0xffffffe3
  418524:	sti    
  418525:	sub    al,0x21
  418527:	repz sub bh,0x3
  41852b:	add    al,0x0
  41852d:	in     al,dx
  41852e:	cdq    
  41852f:	mov    ebx,0xb391e5fe
  418534:	add    DWORD PTR [edx],esi
  418536:	push   eax
  418537:	cld    
  418538:	or     BYTE PTR [edx],dh
  41853a:	sub    eax,0x1bbc8049
  41853f:	rcl    BYTE PTR [ebx-0x4a0babf8],1
  418545:	add    BYTE PTR [eax],al
  418547:	add    BYTE PTR [edi+ebp*1],dh
  41854a:	hlt    
  41854b:	mov    ch,0x34
  41854d:	cs inc edx
  41854f:	loopne 0x41853c
  418551:	and    al,0x42
  418553:	add    ebx,ebx
  418555:	scas   eax,DWORD PTR es:[edi]
  418556:	add    dl,BYTE PTR [edi+eax*2-0x6c]
  41855a:	dec    esi
  41855b:	inc    ebx
  41855c:	adc    ebp,DWORD PTR [edi]
  41855e:	hlt    
  41855f:	sub    BYTE PTR [edi+0x70000153],0x60
  418566:	jmp    esi
  418568:	lods   al,BYTE PTR ds:[esi]
  418569:	push   es
  41856a:	pusha  
  41856b:	inc    ebp
  41856c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856d:	or     DWORD PTR [ebp-0x62f76243],edx
  418573:	mov    ch,0xf2
  418575:	inc    edi
  418576:	inc    edi
  418577:	cld    
  418578:	sti    
  418579:	inc    edi
  41857a:	adc    ch,BYTE PTR [edx+ecx*8]
  41857d:	fmul   st,st(6)
  41857f:	hlt    
  418580:	jb     0x41859e
  418582:	rol    DWORD PTR [ebx],cl
  418584:	repz std 
  418586:	mov    ebx,cs
  418588:	jecxz  0x4185e7
  41858a:	jo     0x418532
  41858c:	fsubr  QWORD PTR ds:0x37188135
  418592:	sub    al,0xc1
  418594:	push   esp
  418595:	cmp    esi,ebx
  418597:	jg     0x418602
  418599:	push   es
  41859a:	out    0x3,eax
  41859c:	div    BYTE PTR [eax-0x5a]
  41859f:	add    ch,BYTE PTR [edx-0x38]
  4185a2:	cmp    BYTE PTR [edx+0x70],0xaa
  4185a6:	in     eax,dx
  4185a7:	inc    esp
  4185a8:	lea    ebp,cs:0xf8
  4185af:	ins    DWORD PTR es:[edi],dx
  4185b0:	adc    DWORD PTR [edi+0x45],0x1e
  4185b4:	cmp    DWORD PTR [edx-0x43],esp
  4185b7:	mov    ebp,gs
  4185b9:	sahf   
  4185ba:	jp     0x418634
  4185bc:	mov    esi,0x8d0644c5
  4185c1:	sub    al,0xfc
  4185c3:	retf   
  4185c4:	dec    esi
  4185c5:	pusha  
  4185c6:	jle    0x418647
  4185c8:	cmp    DWORD PTR [esi+0x238a7444],ebp
  4185ce:	inc    ebp
  4185cf:	out    0x38,al
  4185d1:	jb     0x41860b
  4185d3:	or     cl,BYTE PTR [edi-0x1a]
  4185d6:	lea    ebp,[esi]
  4185d8:	add    eax,0x8dfb63a8
  4185dd:	xor    al,0x84
  4185df:	div    BYTE PTR [eax+0x2e]
  4185e2:	add    edx,ebp
  4185e4:	inc    ebp
  4185e5:	add    dh,ah
  4185e7:	retfw  0x6002
  4185eb:	ins    DWORD PTR es:[edi],dx
  4185ec:	mov    BYTE PTR ds:0xbf04679f,cl
  4185f2:	dec    ecx
  4185f3:	cwde   
  4185f4:	movsx  esp,WORD PTR [eax+0x55]
  4185f8:	xchg   esp,eax
  4185f9:	mov    DWORD PTR [eax+eax*4-0x3ed4d66f],esp
  418600:	xchg   DWORD PTR ds:[esp+edi*8-0xf927973],esp
  418608:	push   es
  418609:	add    BYTE PTR [eax-0x53],ah
  41860c:	or     BYTE PTR [ecx+0x6d86f],0xe9
  418613:	add    BYTE PTR [eax],al
  418615:	add    ch,ah
  418617:	mov    ebp,DWORD PTR [eax+0x16]
  41861a:	scas   eax,DWORD PTR es:[edi]
  41861b:	cmp    ebp,eax
  41861d:	sub    BYTE PTR fs:[ebx],bh
  418620:	std    
  418621:	push   es
  418622:	icebp  
  418623:	push   es
  418624:	add    cl,ch
  418626:	mov    ecx,0x46f68bc3
  41862b:	sub    bl,al
  41862d:	stos   BYTE PTR es:[edi],al
  41862e:	lock add eax,0xfffffff6
  418632:	and    DWORD PTR [ecx+0x4],0x8809f0e9
  418639:	(bad)  
  41863a:	or     eax,0xb86afd38
  41863f:	add    bh,ah
  418641:	pop    ss
  418642:	(bad)  
  418643:	cmp    ebp,edi
  418645:	jo     0x418679
  418647:	adc    al,0x87
  418649:	adc    al,0xbf
  41864b:	lea    eax,[ebx+0x5]
  41864e:	mov    bh,0xc7
  418650:	imul   ebp,ecx,0x6c1bb431
  418656:	mov    eax,0xf71cfd06
  41865b:	(bad)  
  41865c:	leave  
  41865d:	aaa    
  41865e:	xor    BYTE PTR [edi+ecx*1+0x97d6d00],dh
  418665:	inc    edi
  418667:	or     ebp,eax
  418669:	enter  0xc442,0xfa
  41866d:	and    DWORD PTR [edx],0x2
  418670:	je     0x418697
  418672:	pop    ss
  418673:	ret    
  418674:	jae    0x418681
  418676:	jmp    esp
  418678:	sti    
  418679:	inc    DWORD PTR [eax]
  41867b:	add    BYTE PTR [eax],al
  41867d:	cmp    eax,0xf8bc8114
  418682:	add    al,BYTE PTR [eax]
  418684:	(bad)  
  418686:	dec    esp
  418687:	dec    BYTE PTR [esi]
  418689:	add    al,0x54
  41868b:	inc    eax
  41868d:	sub    cl,BYTE PTR [ebx]
  41868f:	pop    es
  418690:	rcr    DWORD PTR [ecx-0x5],0x7f
  418694:	aas    
  418695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418696:	outs   dx,DWORD PTR ds:[esi]
  418697:	mov    ah,0xeb
  418699:	push   esp
  41869a:	mov    BYTE PTR [esi+0x70],al
  41869d:	ror    DWORD PTR [ebp+0x5],cl
  4186a0:	mov    dl,BYTE PTR [ebp+0x37]
  4186a3:	pop    edx
  4186a4:	je     0x4186e8
  4186a6:	aaa    
  4186a7:	push   ecx
  4186a8:	(bad)  
  4186aa:	or     eax,0x144a0017
  4186af:	mov    dh,0x47
  4186b1:	sbb    edx,DWORD PTR [esi+esi*4]
  4186b4:	dec    edi
  4186b5:	sbb    dl,al
  4186b7:	fisttp WORD PTR [eax]
  4186b9:	and    edx,eax
  4186bb:	(bad)  
  4186bc:	test   DWORD PTR [edx+0x4e745404],0x81553b83
  4186c6:	lea    eax,[eax-0x78fcf600]
  4186cc:	pop    esi
  4186cd:	mov    dh,0x89
  4186cf:	inc    ecx
  4186d0:	adc    ch,cl
  4186d2:	mov    ss,WORD PTR [ebp+0x36c98dfe]
  4186d8:	pop    ebp
  4186d9:	jp     0x4186f4
  4186db:	test   BYTE PTR [eax-0x2bd620d],dl
  4186e1:	add    BYTE PTR [eax],al
  4186e3:	add    BYTE PTR [esi-0x13],bh
  4186e6:	add    al,0x80
  4186e8:	or     esp,DWORD PTR [edi]
  4186ea:	mov    WORD PTR [ebx+0x13],es
  4186ed:	cmp    edx,DWORD PTR [edx]
  4186ef:	mov    DWORD PTR [esi],esp
  4186f1:	pop    eax
  4186f2:	adc    dh,BYTE PTR [esi-0x2079d3cc]
  4186f8:	stos   DWORD PTR es:[edi],eax
  4186f9:	cmp    DWORD PTR [edi+eax*4+0x36],eax
  4186fd:	or     BYTE PTR [ebp-0x7ea030bd],cl
  418703:	cmp    eax,0x504da924
  418708:	hlt    
  418709:	mov    ds:0x1ff3151c,al
  41870e:	mov    ss,WORD PTR [ebx-0x2d]
  418711:	dec    ecx
  418712:	add    ebp,edi
  418714:	out    0x43,al
  418716:	inc    edx
  418717:	jae    0x418724
  418719:	jbe    0x41875d
  41871b:	jae    0x418720
  41871d:	adc    eax,0x93540bb8
  418722:	or     eax,ebp
  418724:	out    0x17,eax
  418726:	inc    edx
  418727:	std    
  418728:	outs   dx,BYTE PTR ds:[esi]
  418729:	loopne 0x41873c
  41872b:	and    edi,0x41
  41872e:	add    DWORD PTR [eax],eax
  418730:	push   0xb7e714bb
  418735:	pop    esp
  418736:	add    DWORD PTR [eax],eax
  418738:	hlt    
  418739:	xchg   ebp,eax
  41873a:	(bad)  
  41873b:	(bad)  
  41873c:	in     eax,dx
  41873d:	popf   
  41873e:	iret   
  41873f:	add    DWORD PTR [edx],esi
  418741:	inc    eax
  418742:	or     al,0x9
  418744:	xor    ah,BYTE PTR [ecx]
  418746:	cmp    DWORD PTR [eax-0x3c000000],eax
  41874c:	adc    edi,DWORD PTR [eax+0x3c1a0aeb]
  418752:	std    
  418753:	hlt    
  418754:	test   al,0xc4
  418756:	and    esi,DWORD PTR [eax+eiz*8]
  418759:	shr    DWORD PTR [ecx-0xd],cl
  41875c:	push   es
  41875d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875e:	mov    bh,0xf8
  418760:	xor    DWORD PTR [esi+0x620f6041],0x1436254d
  41876a:	adc    al,0xc6
  41876c:	mov    ebx,0xff4040f2
  418771:	mov    cs,WORD PTR [esi-0x42]
  418774:	xor    eax,0x5b38776
  418779:	fs dec esi
  41877b:	add    al,0x7
  41877d:	out    0x10,eax
  41877f:	gs int 0xe7
  418782:	adc    BYTE PTR [ebp-0x3b],bl
  418785:	call   0xe2401acc
  41878a:	inc    edx
  41878b:	repnz add DWORD PTR cs:[bx],esp
  418790:	mov    ebx,0x33942b4a
  418795:	ss inc ecx
  418797:	mov    dh,0x81
  418799:	adc    DWORD PTR es:[ebp-0x5aef1842],ebx
  4187a0:	(bad)  
  4187a1:	call   0xe23fbbe8
  4187a6:	dec    ebp
  4187a7:	repnz inc edi
  4187a9:	addr16 cld 
  4187ab:	mov    al,ds:0x8d12ba
  4187b0:	add    BYTE PTR [eax],al
  4187b2:	test   al,0xea
  4187b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b5:	ror    dl,cl
  4187b7:	push   es
  4187b8:	div    BYTE PTR [esi+0x4978408]
  4187be:	es mov ebx,0xdc2a8cfe
  4187c4:	fnsave [esi+0x105c35e4]
  4187ca:	push   cs
  4187cb:	mov    ebx,0x3d942bde
  4187d0:	mov    BYTE PTR [eax+0x70],0x46
  4187d4:	out    dx,al
  4187d5:	xchg   BYTE PTR [edi+eiz*8+0x2bf0e8ff],al
  4187dc:	mov    eax,ds:0x453233b6
  4187e1:	neg    BYTE PTR [edx-0x36]
  4187e4:	(bad)  
  4187e5:	in     eax,dx
  4187e6:	pop    edx
  4187e7:	ret    0xa801
  4187ea:	adc    bh,bh
  4187ec:	or     BYTE PTR [eax-0x397fd111],ch
  4187f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f3:	mov    eax,0x306e90eb
  4187f8:	std    
  4187f9:	jbe    0x4187fe
  4187fb:	jge    0x41884a
  4187fd:	call   0xeb870505
  418802:	xor    DWORD PTR [eax+ecx*1-0xe],edx
  418806:	sub    BYTE PTR [esi-0x3b],bh
  418809:	add    dh,BYTE PTR [eax]
  41880b:	xchg   DWORD PTR [eax],edi
  41880d:	enter  0xc879,0x13
  418811:	mov    ebx,0xdd4b7de0
  418816:	add    BYTE PTR [eax],al
  418818:	add    BYTE PTR [edi-0x3c],ah
  41881b:	add    esp,DWORD PTR [edx-0x7]
  41881e:	mov    edx,DWORD PTR [ebx+0x39]
  418821:	jns    0x4187e3
  418823:	sbb    edx,DWORD PTR [edx]
  418825:	hlt    
  418826:	test   DWORD PTR [ebx+0x19],esp
  418829:	lock or BYTE PTR [eax],0x69
  41882d:	or     edi,ecx
  41882f:	or     al,0x65
  418831:	mov    eax,0x70e9000d
  418836:	cmp    al,0x57
  418838:	out    dx,al
  418839:	ins    BYTE PTR es:[edi],dx
  41883a:	jb     0x418855
  41883c:	jmp    0x94390f31
  418841:	add    ecx,DWORD PTR [ebx+0x6f702b6]
  418847:	and    al,0x38
  41884a:	add    eax,DWORD PTR [esp+eax*4+0x690006e8]
  418851:	(bad)  
  418852:	iret   
  418853:	or     al,0x0
  418855:	mov    ds,WORD PTR [esi-0x77f5ffea]
  41885b:	cmc    
  41885c:	pop    edi
  41885d:	add    al,BYTE PTR cs:[eax-0x7efbc707]
  418864:	fwait
  418865:	retf   0x7
  418868:	(bad)  
  41886a:	inc    ebx
  41886b:	add    BYTE PTR [edi],cl
  41886d:	sub    al,0x4b
  41886f:	add    ecx,eax
  418871:	jnp    0x418875
  418873:	pop    es
  418874:	enter  0xf47,0x5
  418878:	mov    DWORD PTR [edi],eax
  41887a:	out    dx,eax
  41887b:	test   BYTE PTR [esi+0x1e000000],cl
  418881:	or     eax,DWORD PTR [eax]
  418883:	add    BYTE PTR [ecx+0x59],ah
  418886:	adc    DWORD PTR [ebx+eiz*4-0x34],edi
  41888a:	inc    ebp
  41888b:	cmp    BYTE PTR [ebx+0x31000007],cl
  418891:	and    eax,0x80a64688
  418896:	retf   0x5c8b
  418899:	pop    ss
  41889a:	daa    
  41889b:	push   ebp
  41889c:	mov    esi,0xd390147f
  4188a1:	push   cs
  4188a2:	mov    BYTE PTR [ebx-0x3c78fc84],cl
  4188a8:	inc    ecx
  4188a9:	dec    ecx
  4188aa:	mov    DWORD PTR gs:[esi-0x6874fb83],ecx
  4188b1:	sti    
  4188b2:	mov    BYTE PTR [ebx+edx*2],al
  4188b5:	xor    al,BYTE PTR [edx+0x10]
  4188b8:	jne    0x4188c3
  4188ba:	jg     0x41887c
  4188bc:	dec    eax
  4188bd:	add    BYTE PTR [ecx+0x10],0x91
  4188c1:	pushf  
  4188c2:	xchg   esp,eax
  4188c3:	add    BYTE PTR [edx],bl
  4188c5:	pop    es
  4188c6:	adc    edx,0x4a3631be
  4188cc:	push   cs
  4188cd:	outs   dx,BYTE PTR ds:[esi]
  4188ce:	xor    DWORD PTR [ebx+0xd8a57f3],ecx
  4188d4:	jp     0x4188a9
  4188d6:	xchg   esp,eax
  4188d7:	add    bl,dh
  4188d9:	sbb    eax,0x5ee3458a
  4188de:	and    DWORD PTR [edx],eax
  4188e0:	inc    ebx
  4188e1:	jns    0x418899
  4188e3:	or     eax,DWORD PTR [eax]
  4188e5:	add    BYTE PTR [eax],al
  4188e7:	in     al,0xfa
  4188e9:	paddw  mm0,QWORD PTR [esi]
  4188ec:	push   eax
  4188ed:	adc    eax,DWORD PTR [eax-0xd]
  4188f0:	mov    ah,0xc5
  4188f2:	adc    edi,DWORD PTR [eax+0x19]
  4188f5:	or     al,0x87
  4188f7:	xor    BYTE PTR cs:[edx+0x449dcb43],cl
  4188fe:	or     al,0x6a
  418900:	jmp    0x41891d
  418902:	out    0x74,eax
  418904:	mov    dl,0x3d
  418906:	std    
  418907:	js     0x4188f4
  418909:	pop    ss
  41890a:	sbb    ah,0x72
  41890d:	mov    cl,BYTE PTR [ebx-0x75]
  418910:	mov    bh,0xcf
  418912:	pop    ss
  418913:	cld    
  418914:	mov    ds:0xc184fbaa,eax
  418919:	stc    
  41891a:	pop    edx
  41891b:	cmp    DWORD PTR [ecx],0xffffff85
  41891e:	arpl   WORD PTR [edi-0xf],si
  418921:	cmp    eax,0x1a3f2b80
  418926:	shl    BYTE PTR [eax-0x40],0x3a
  41892a:	xor    DWORD PTR [ebx],0xbc3d811e
  418930:	mov    dh,0xc7
  418932:	pop    ds
  418933:	cld    
  418934:	mov    ds:0x1ff312e9,al
  418939:	mov    al,BYTE PTR [ebx+0x17]
  41893c:	pusha  
  41893d:	shr    DWORD PTR [ecx-0xd],1
  418940:	xor    BYTE PTR [ebp+0x2917e1b],dh
  418946:	dec    edi
  418947:	mov    ebp,0xfb520
  41894c:	add    BYTE PTR [eax],al
  41894e:	push   0xa03db207
  418953:	add    bl,dh
  418955:	mov    bh,0xf4
  418957:	push   ds
  418958:	fidiv  WORD PTR [edi]
  41895a:	push   es
  41895b:	xor    ah,BYTE PTR [esp+eax*2-0x12]
  41895f:	mov    edi,DWORD PTR [esi+0x6f31d]
  418965:	(bad)  
  418966:	or     al,0x2
  418968:	ins    BYTE PTR es:[edi],dx
  418969:	xchg   BYTE PTR [ecx],cl
  41896b:	pop    es
  41896c:	out    0x88,eax
  41896e:	pop    eax
  41896f:	sbb    edx,DWORD PTR [eax-0x18f8fe1e]
  418975:	or     BYTE PTR [ebp-0xd],0xe6
  418979:	mov    bh,0xed
  41897b:	in     eax,dx
  41897c:	sub    al,0xac
  41897e:	out    dx,eax
  41897f:	mov    ch,BYTE PTR [eax]
  418981:	sbb    al,0xf3
  418983:	push   es
  418984:	jne    0x41894d
  418986:	add    al,0x5
  418988:	sti    
  418989:	test   eax,0xf8fec07b
  41898e:	lds    edi,FWORD PTR [edx-0x5cc9073d]
  418994:	in     eax,dx
  418995:	xchg   edx,ebx
  418997:	push   cs
  418998:	out    0x3,eax
  41899a:	jp     0x418964
  41899c:	out    dx,al
  41899d:	xchg   BYTE PTR [ebx-0x6206f946],dh
  4189a3:	add    DWORD PTR [ebp+0x20],esp
  4189a6:	or     eax,DWORD PTR [edi]
  4189a8:	out    0xa9,eax
  4189aa:	fs (bad) 
  4189ac:	xchg   esi,eax
  4189ad:	mov    es,ebp
  4189af:	adc    dh,BYTE PTR [edx+0x41]
  4189b2:	add    BYTE PTR [eax],al
  4189b4:	add    BYTE PTR [ebx-0x4a],cl
  4189b7:	jo     0x4189bd
  4189b9:	repz mov esp,DWORD PTR [edi]
  4189bc:	or     eax,0x3ef086f
  4189c1:	repz sbb eax,0x12ad88d4
  4189c7:	jmp    0x72e6:0x4fea4b
  4189ce:	cmp    edx,DWORD PTR ds:0xc97ff0e9
  4189d4:	adc    ah,BYTE PTR [edi+0x25230f7c]
  4189da:	fisttp QWORD PTR [esp+ebp*2]
  4189dd:	fcomp  DWORD PTR [ebx]
  4189df:	add    cl,ch
  4189e1:	jae    0x418a11
  4189e3:	(bad)  
  4189e4:	cmp    al,0xe3
  4189e6:	jl     0x418a27
  4189e8:	call   0xe66c54d7
  4189ed:	ins    DWORD PTR es:[edi],dx
  4189ee:	pop    edx
  4189ef:	adc    eax,0xe6c9f0e9
  4189f4:	xchg   DWORD PTR ds:0xaee2fd32,ebx
  4189fa:	test   al,0xe8
  4189fc:	xchg   BYTE PTR [ebx-0x77],bh
  4189ff:	mov    cl,ch
  418a01:	lock push es
  418a03:	add    DWORD PTR [edi],ebp
  418a05:	xchg   edi,ebp
  418a07:	xlat   BYTE PTR ds:[ebx]
  418a08:	xchg   edx,eax
  418a09:	rol    BYTE PTR [edi+0x25dbe15b],cl
  418a0f:	mul    BYTE PTR [edi+edi*8]
  418a12:	add    al,0x74
  418a14:	lods   al,BYTE PTR ds:[esi]
  418a15:	imul   eax,ecx,0x6b
  418a18:	and    al,BYTE PTR [eax]
  418a1a:	add    BYTE PTR [eax],al
  418a1c:	sub    BYTE PTR [esi+0x18ae6237],dh
  418a22:	sub    DWORD PTR [ecx],0x44
  418a25:	add    ebp,DWORD PTR [edx-0x17]
  418a28:	mov    al,ds:0x7bdd567d
  418a2d:	inc    esi
  418a2e:	call   0x49039b
  418a33:	inc    edx
  418a34:	imul   edi,DWORD PTR [esi+0x46],0x39484a05
  418a3b:	inc    eax
  418a3c:	dec    DWORD PTR [ecx+0x6f0fe8a]
  418a42:	mov    ah,dl
  418a44:	cmp    al,dl
  418a46:	sub    eax,DWORD PTR [eax]
  418a48:	cmp    eax,0x1a177b89
  418a4d:	add    al,0x7f
  418a4f:	clc    
  418a50:	sbb    edi,DWORD PTR [eax-0x60]
  418a53:	mov    cl,BYTE PTR [ecx+0x5]
  418a56:	out    0x95,eax
  418a58:	mov    DWORD PTR [ebp+edi*1+0x0],ebp
  418a5c:	and    DWORD PTR [ecx+0xada7e7f],ebx
  418a62:	or     eax,DWORD PTR [ebp+0x13b7]
  418a68:	mov    DWORD PTR [ebp+ecx*2+0x0],ebp
  418a6c:	daa    
  418a6d:	push   0xffffff88
  418a6f:	dec    esi
  418a70:	cs xor dh,dl
  418a73:	je     0x418ac0
  418a75:	add    BYTE PTR [esi+0x18],0x47
  418a79:	retf   
  418a7a:	jae    0x418a9b
  418a7c:	rcl    edx,1
  418a7e:	or     al,BYTE PTR [ebx+0x13000000]
  418a84:	adc    al,0x0
  418a86:	add    al,dh
  418a88:	or     dl,BYTE PTR [eax-0x73]
  418a8b:	aam    0xe
  418a8d:	xchg   ebx,eax
  418a8f:	and    BYTE PTR [esi],0x86
  418a92:	add    BYTE PTR [edx+0x160fc086],bl
  418a98:	aaa    
  418a99:	adc    al,0x0
  418a9b:	mov    ah,al
  418a9d:	and    al,0x8b
  418a9f:	push   esp
  418aa0:	pop    ss
  418aa1:	daa    
  418aa2:	enter  0xd1e1,0xa
  418aa6:	xchg   edi,esi
  418aa8:	adc    eax,DWORD PTR [eax]
  418aaa:	add    BYTE PTR [eax],al
  418aac:	add    BYTE PTR [edx],bh
  418aae:	dec    esi
  418aaf:	(bad)  
  418ab0:	sti    
  418ab1:	sbb    BYTE PTR [edx],0x45
  418ab4:	add    eax,DWORD PTR [eax]
  418ab6:	and    DWORD PTR [edx],0xa
  418ab9:	je     0x418ac7
  418abb:	loopne 0x418b04
  418abd:	(bad)  
  418abe:	cmp    DWORD PTR [esi+ebx*1+0x26f3850c],edx
  418ac5:	adc    al,BYTE PTR [eax]
  418ac7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac9:	shr    DWORD PTR [ebx+0x8],0x60
  418acd:	adc    eax,0x3a30e8e7
  418ad2:	std    
  418ad3:	call   0x714e306f
  418ad8:	cmp    cl,BYTE PTR [edi]
  418ada:	add    bl,dh
  418adc:	push   esi
  418add:	sbb    al,0xfd
  418adf:	or     al,0x50
  418ae1:	mov    cs,WORD PTR [esi-0x69]
  418ae4:	adc    al,0x5b
  418ae6:	or     eax,0x77000000
  418aeb:	dec    edi
  418aec:	cmp    bh,ch
  418aee:	hlt    
  418aef:	mov    bl,0xbe
  418af1:	pop    ss
  418af2:	jbe    0x418b54
  418af4:	lods   eax,DWORD PTR ds:[esi]
  418af5:	and    ch,BYTE PTR [eax]
  418af7:	xchg   edi,eax
  418af8:	mov    dh,0xe
  418afa:	dec    ecx
  418afb:	and    cl,dl
  418afd:	mov    bh,BYTE PTR ds:0xdbc18d04
  418b03:	ror    DWORD PTR [eax+0x409af300],cl
  418b09:	jae    0x418b19
  418b0b:	push   ecx
  418b0c:	inc    ecx
  418b0d:	mov    DWORD PTR [esi],esp
  418b0f:	xor    al,0x8c
  418b11:	mov    cs,WORD PTR [edi-0x65fffee0]
  418b17:	in     eax,0x19
  418b19:	add    bl,dh
  418b1b:	test   al,0xbe
  418b1d:	sbb    ecx,eax
  418b1f:	idiv   ebp
  418b21:	(bad)  
  418b22:	add    al,0xc5
  418b24:	mov    cl,BYTE PTR [ecx]
  418b26:	leave  
  418b27:	gs in  eax,0x72
  418b2a:	xchg   ebx,eax
  418b2b:	mov    eax,ds:0x3800ff38
  418b30:	mov    eax,DWORD PTR [ecx-0xe]
  418b33:	or     edx,eax
  418b35:	sub    bl,dh
  418b37:	adc    BYTE PTR [esi-0x3df730ba],cl
  418b3d:	sbb    ebx,DWORD PTR [eax]
  418b3f:	pop    es
  418b40:	aas    
  418b41:	mov    al,0x35
  418b43:	and    BYTE PTR [ebp+0x39],dl
  418b46:	inc    esi
  418b47:	cs rcr cl,cl
  418b4a:	aam    0xb3
  418b4c:	loop   0x418b44
  418b4e:	add    BYTE PTR [eax],al
  418b50:	add    BYTE PTR ds:0xcefee322,ch
  418b56:	scas   al,BYTE PTR es:[edi]
  418b57:	jne    0x418b5a
  418b59:	js     0x418b25
  418b5b:	cmc    
  418b5c:	mov    esi,DWORD PTR [ebp-0x4d8e2252]
  418b62:	sub    eax,0xfdc0ca72
  418b67:	xchg   esp,eax
  418b68:	or     bl,bh
  418b6a:	inc    edi
  418b6b:	rol    BYTE PTR [eax],0x72
  418b6e:	sub    al,ch
  418b70:	cld    
  418b71:	xchg   esi,eax
  418b72:	call   0x7f3a:0xc47a1a38
  418b79:	mov    bl,0xb2
  418b7b:	frndint 
  418b7d:	cmp    edi,edi
  418b7f:	xor    al,0xa
  418b81:	and    bl,BYTE PTR [ecx+0x29]
  418b84:	mov    esp,DWORD PTR ds:0xf645e1cb
  418b8a:	jge    0x418be6
  418b8c:	add    al,0xf3
  418b8e:	push   es
  418b8f:	fiadd  DWORD PTR [ebx-0x36]
  418b92:	push   ss
  418b93:	div    BYTE PTR [ecx-0xe]
  418b96:	adc    DWORD PTR ds:0xeb74f7f0,0xe31e5c05
  418ba0:	test   BYTE PTR [ebx+0x36117107],dl
  418ba6:	xchg   DWORD PTR [ecx-0x1],esp
  418ba9:	add    DWORD PTR [eax],eax
  418bab:	sbb    dl,BYTE PTR [esi-0x46]
  418bae:	inc    edi
  418baf:	fimul  WORD PTR [edi-0xb11de4f]
  418bb5:	add    BYTE PTR [eax],al
  418bb7:	add    BYTE PTR [edx-0xf],al
  418bba:	daa    
  418bbb:	or     DWORD PTR [eax-0x4a9dffb8],eax
  418bc1:	mov    eax,eax
  418bc3:	(bad)  
  418bc5:	es icebp 
  418bc7:	or     ah,BYTE PTR es:[esi]
  418bca:	inc    ebx
  418bcb:	push   ds
  418bcc:	or     ch,BYTE PTR [ecx+ecx*4]
  418bcf:	scas   eax,DWORD PTR es:[edi]
  418bd0:	fdivr  DWORD PTR [edi+0x4e]
  418bd3:	jge    0x418b8a
  418bd5:	inc    esi
  418bd6:	je     0x418bba
  418bd8:	das    
  418bd9:	push   esp
  418bda:	jno    0x418b99
  418bdc:	push   esi
  418bdd:	sub    eax,0x1141644d
  418be2:	mov    DWORD PTR [edx],ebp
  418be4:	(bad)  
  418be5:	dec    edi
  418be6:	test   ecx,ebp
  418be8:	lock mov eax,eax
  418beb:	out    dx,al
  418bec:	test   eax,ebp
  418bee:	cld    
  418bef:	(bad)  
  418bf0:	mov    ebx,0x3262231f
  418bf5:	adc    DWORD PTR [ecx],ebp
  418bf7:	mov    cl,0xef
  418bf9:	push   ebp
  418bfa:	jne    0x418bd9
  418bfc:	jbe    0x418bfc
  418bfe:	cmp    DWORD PTR [edi],esp
  418c00:	retf   
  418c01:	mov    ecx,0x2c186a12
  418c06:	push   cs
  418c07:	ins    DWORD PTR es:[edi],dx
  418c08:	repz sub ebp,edi
  418c0b:	sahf   
  418c0c:	jbe    0x418bd4
  418c0e:	(bad)  
  418c0f:	shl    BYTE PTR [edx-0x89af31f],cl
  418c15:	sub    al,0xfd
  418c17:	xchg   BYTE PTR [edi+0x46],bh
  418c1a:	inc    ecx
  418c1b:	ret    0x0
  418c1e:	add    BYTE PTR [edx-0x2e94f360],dh
  418c24:	das    
  418c25:	std    
  418c26:	outs   dx,BYTE PTR ds:[esi]
  418c27:	lds    edi,FWORD PTR [bp+di+0x6c]
  418c2b:	xor    dl,bh
  418c2d:	add    DWORD PTR [ebp-0x36],0x29
  418c31:	std    
  418c32:	adc    ah,BYTE PTR [esp+eax*1+0x2d17670d]
  418c39:	std    
  418c3a:	add    BYTE PTR [ebp-0x1cbe39ce],dh
  418c40:	cmp    eax,0xff0b3b59
  418c45:	(bad)  
  418c46:	int    0x4
  418c48:	out    dx,eax
  418c49:	cli    
  418c4a:	push   0xffffffee
  418c4c:	dec    edi
  418c4d:	out    0xc7,al
  418c4f:	in     al,0xee
  418c51:	cli    
  418c52:	cmp    eax,DWORD PTR [esp+eiz*2-0x49ea2e90]
  418c59:	dec    BYTE PTR [edx-0x9bfe39c]
  418c5f:	push   cs
  418c60:	add    BYTE PTR [ecx+ebp*8],al
  418c63:	out    dx,eax
  418c64:	in     eax,dx
  418c65:	cli    
  418c66:	jmp    DWORD PTR [ecx+0x4e]
  418c69:	imul   esi,DWORD PTR [ebx+0x56],0x8103b604
  418c70:	inc    esp
  418c71:	xor    DWORD PTR [ebx+0x1c],eax
  418c74:	pop    es
  418c75:	or     BYTE PTR [edx*1-0x4a016654],al
  418c7c:	repz in al,0x87
  418c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c80:	repz cli 
  418c82:	cmp    eax,DWORD PTR [eax]
  418c84:	add    BYTE PTR [eax],al
  418c86:	add    al,0x5f
  418c88:	jo     0x418c2b
  418c8a:	mov    ch,0x99
  418c8c:	dec    BYTE PTR [edx-0x9bfc8fc]
  418c92:	into   
  418c93:	(bad)  
  418c94:	cld    
  418c95:	call   0x3c81b9
  418c9a:	mov    eax,ds:0x26736951
  418c9f:	add    al,0xb6
  418ca1:	add    esp,DWORD PTR [ecx]
  418ca3:	inc    ebp
  418ca4:	xor    DWORD PTR [ebx+0x1c],eax
  418ca7:	pop    es
  418ca8:	or     BYTE PTR [ecx],al
  418caa:	jno    0x418c70
  418cac:	ss pop esi
  418cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418caf:	add    al,0x7f
  418cb1:	jbe    0x418cd8
  418cb3:	hlt    
  418cb4:	cli    
  418cb5:	psllq  mm1,QWORD PTR [ebx+0x12258901]
  418cbc:	shl    ebp,0xf7
  418cbf:	xor    eax,0xeb79e711
  418cc4:	xor    al,0xfd
  418cc6:	sbb    BYTE PTR [ebp+eiz*4+0x367a700c],dl
  418ccd:	std    
  418cce:	dec    esp
  418ccf:	xor    al,0x6b
  418cd1:	add    DWORD PTR [eax+0x5b],edi
  418cd4:	in     eax,dx
  418cd5:	inc    eax
  418cd6:	inc    ebp
  418cd7:	sbb    DWORD PTR [ecx],ecx
  418cd9:	adc    BYTE PTR [eax-0x64],cl
  418cdc:	mov    BYTE PTR [esi-0x61],cl
  418cdf:	dec    eax
  418ce0:	pop    esp
  418ce1:	or     eax,0xfd366270
  418ce6:	sbb    al,0x24
  418ce8:	imul   eax,DWORD PTR [ecx],0x0
  418ceb:	add    BYTE PTR [eax],al
  418ced:	mov    al,0xa0
  418cef:	cmp    ecx,DWORD PTR [edx]
  418cf1:	cld    
  418cf2:	cdq    
  418cf3:	sbb    edi,ebx
  418cf5:	add    al,0x4c
  418cf7:	push   es
  418cf8:	xchg   dl,dl
  418cfa:	push   ebx
  418cfb:	ss std 
  418cfd:	jo     0x418d54
  418cff:	add    eax,0x389d1176
  418d04:	or     ebx,DWORD PTR [edi-0x5]
  418d07:	test   BYTE PTR [edx+0x74011ff3],0xfd
  418d0e:	sbb    bl,dh
  418d10:	pop    ds
  418d11:	repz pop ds
  418d13:	push   es
  418d14:	xchg   dh,ch
  418d16:	mov    DWORD PTR [esi],esi
  418d18:	std    
  418d19:	inc    BYTE PTR [esi-0x1f]
  418d1c:	push   DWORD PTR [ecx+ecx*2-0x7e510582]
  418d23:	xor    DWORD PTR ss:[ebx-0x13a044b9],esi
  418d2a:	call   0xdc2b:0x9994fb33
  418d31:	pop    DWORD PTR [edi]
  418d33:	ss retfw 0xee4f
  418d38:	and    BYTE PTR [edi+0x7336562b],0xee
  418d3f:	loopne 0x418d47
  418d41:	jo     0x418d81
  418d43:	inc    ebx
  418d44:	ss data16 (bad) 
  418d47:	dec    edi
  418d48:	inc    eax
  418d49:	pop    edi
  418d4a:	sub    dh,BYTE PTR [esi]
  418d4c:	cli    
  418d4d:	mov    dh,0x9a
  418d4f:	fld    QWORD PTR [edx+0x2a000000]
  418d55:	sub    DWORD PTR [esi],esp
  418d57:	div    BYTE PTR ss:[eax-0x16]
  418d5b:	jl     0x418d4a
  418d5d:	push   cs
  418d5e:	out    0x3,eax
  418d60:	mov    dl,0xed
  418d62:	daa    
  418d63:	scas   al,BYTE PTR es:[edi]
  418d64:	fyl2xp1 
  418d66:	push   0x6e
  418d68:	sub    BYTE PTR [edx],ch
  418d6a:	inc    BYTE PTR [ecx+0x7fe6001b]
  418d70:	inc    ebp
  418d71:	sub    al,0xee
  418d73:	xor    eax,0x5072f72
  418d78:	outs   dx,DWORD PTR ds:[esi]
  418d79:	fdiv   QWORD PTR fs:0x486ebfe
  418d80:	repz push es
  418d82:	fidivr WORD PTR [edi-0x77]
  418d85:	sub    eax,esi
  418d87:	xor    eax,0x3d58728
  418d8c:	repz pop ds
  418d8e:	mov    bh,0x36
  418d90:	(bad)  
  418d91:	sub    esp,ebp
  418d93:	add    edx,DWORD PTR [ebx]
  418d95:	pop    es
  418d96:	out    0x4,eax
  418d98:	jno    0x418d4b
  418d9a:	call   0xb4e3:0xe0ebbe35
  418da1:	sub    esi,ebx
  418da3:	jge    0x418dce
  418da5:	sub    al,0x86
  418da7:	xor    eax,0x3c6d9e8
  418dac:	repz stc 
  418dae:	jmp    FWORD PTR [esi+ecx*2+0x2c]
  418db2:	std    
  418db3:	outs   dx,BYTE PTR ds:[esi]
  418db4:	test   dl,cl
  418db6:	pop    ds
  418db7:	jmp    0xf0418dbc
  418dbc:	sti    
  418dbd:	add    ebp,0xffffffc5
  418dc0:	sub    edi,ebp
  418dc2:	adc    al,0xef
  418dc4:	idiv   bh
  418dc6:	call   0x473ffae4
  418dcb:	push   ds
  418dcc:	lock pop ebp
  418dce:	int    0xf7
  418dd0:	xchg   DWORD PTR [edx+0x37],esp
  418dd3:	push   ds
  418dd4:	sub    al,0xd
  418dd6:	ja     0x418dca
  418dd8:	jno    0x418de8
  418dda:	add    edi,ebp
  418ddc:	push   es
  418ddd:	inc    ecx
  418dde:	loop   0x418d91
  418de0:	mov    bl,0x2a
  418de2:	out    0xb4,al
  418de4:	idiv   bl
  418de6:	push   cs
  418de7:	out    0x87,al
  418de9:	clc    
  418dea:	lock out dx,eax
  418dec:	and    BYTE PTR ds:0x812be7fd,0xf1
  418df3:	adc    dl,bh
  418df5:	or     edi,0xffffffc4
  418df8:	sub    edi,ebp
  418dfa:	and    al,0x8f
  418dfc:	push   es
  418dfd:	add    cl,ch
  418dff:	test   DWORD PTR [edx+0x2bbfd511],0x6fe693b
  418e09:	add    al,dl
  418e0b:	lods   al,BYTE PTR ds:[esi]
  418e0c:	sub    eax,0x28e5befd
  418e11:	sbb    eax,0x81f9f0e9
  418e16:	fld    QWORD PTR ds:0xfae4fd2a
  418e1c:	out    0xff,al
  418e1e:	call   0xf7418e23
  418e23:	xor    cl,0x92
  418e26:	jmp    FWORD PTR [ecx]
  418e28:	cmp    edi,DWORD PTR [esi+0xfd2890]
  418e2e:	popf   
  418e2f:	test   al,0xe7
  418e31:	sti    
  418e32:	sbb    eax,0xaa5f38f3
  418e37:	add    al,0x0
  418e39:	movlhps xmm2,xmm1
  418e3c:	idiv   bh
  418e3e:	or     eax,0x8a2ffd31
  418e43:	add    al,0xe5
  418e45:	push   ss
  418e46:	pop    ds
  418e47:	repz cli 
  418e49:	cmp    ebx,DWORD PTR [eax+eiz*2-0xf3c7cf4]
  418e50:	cli    
  418e51:	dec    DWORD PTR [ebp-0x66]
  418e54:	inc    BYTE PTR [edx-0x37]
  418e57:	jmp    0x418e62
  418e59:	psubusb mm6,QWORD PTR [eax-0x78f2000a]
  418e60:	clc    
  418e61:	or     eax,0xfcc1aa4d
  418e66:	(bad)  
  418e68:	cmp    BYTE PTR [ebp+0xf00041a],al
  418e6e:	xchg   esi,eax
  418e6f:	call   0x2024:0x321dfffb
  418e76:	or     al,BYTE PTR [ebx+ecx*1]
  418e79:	xchg   BYTE PTR [esi+ebp*8+0x49cffffa],bh
  418e80:	sbb    eax,0x86050a00
  418e85:	mov    eax,ds:0x1e000000
  418e8a:	hlt    
  418e8b:	cli    
  418e8c:	jmp    0x3c66dd
  418e91:	icebp  
  418e92:	push   esp
  418e93:	imul   ecx,DWORD PTR [edi],0xfff89f49
  418e99:	popf   
  418e9a:	add    esi,DWORD PTR [esi-0x77fe6fd]
  418ea0:	or     bh,BYTE PTR [ebp+0x5dfc8681]
  418ea6:	repz jle 0x418ea1
  418ea9:	repz and al,BYTE PTR [edx]
  418eac:	xchg   BYTE PTR [edx*4-0x651902cf],bl
  418eb3:	add    eax,DWORD PTR [eax]
  418eb5:	repz sbb BYTE PTR [ebp+0x30b09864],al
  418ebc:	cmp    edx,esp
  418ebe:	cmp    eax,0x97f40001
  418ec3:	test   al,0xfb
  418ec5:	jl     0x418e8f
  418ec7:	out    dx,al
  418ec8:	rcr    DWORD PTR es:0x59740d01,cl
  418ecf:	sub    eax,0xbad664fd
  418ed4:	clc    
  418ed5:	pop    esp
  418ed6:	call   0x1eee44db
  418edb:	add    dh,BYTE PTR [esi-0x1fbbe444]
  418ee1:	sti    
  418ee2:	xor    al,0x44
  418ee4:	add    DWORD PTR [ebx],esi
  418ee6:	pushf  
  418ee7:	dec    eax
  418ee8:	add    DWORD PTR [edx+0x5a],ebp
  418eeb:	xor    DWORD PTR [ecx],edi
  418eed:	add    BYTE PTR [eax],al
  418eef:	add    BYTE PTR [esi+0x7810b02d],dh
  418ef5:	outs   dx,DWORD PTR ds:[esi]
  418ef6:	std    
  418ef7:	mov    dh,bh
  418ef9:	sahf   
  418efa:	jl     0x418f04
  418efc:	outs   dx,BYTE PTR ds:[esi]
  418efd:	out    0xab,al
  418eff:	add    al,0x78
  418f01:	lea    eax,ds:0x542229
  418f07:	xor    DWORD PTR [ecx],esp
  418f09:	out    0xd9,al
  418f0b:	inc    edi
  418f0c:	jle    0x418f25
  418f0e:	jle    0x418f66
  418f10:	pop    edi
  418f11:	or     DWORD PTR [ebp+0x42],edx
  418f14:	jns    0x418f4b
  418f16:	jl     0x418f6b
  418f18:	out    0x24,eax
  418f1a:	(bad)  
  418f1b:	or     al,0x71
  418f1d:	jp     0x418f20
  418f1f:	add    bl,dh
  418f21:	xor    edi,DWORD PTR [esi-0x1cf8d08b]
  418f27:	shr    bh,0x8d
  418f2a:	lods   eax,DWORD PTR ds:[esi]
  418f2b:	add    esi,ebx
  418f2d:	push   es
  418f2e:	out    0x79,al
  418f30:	inc    esi
  418f31:	or     ebx,edx
  418f33:	cmp    al,0xe7
  418f35:	shl    ebp,cl
  418f37:	jns    0x418f6f
  418f39:	or     esi,ebp
  418f3b:	xchg   edi,eax
  418f3c:	push   esp
  418f3d:	nop
  418f3e:	and    al,0x20
  418f40:	(bad)  
  418f41:	pop    esp
  418f42:	push   ds
  418f43:	add    eax,0xfeef2844
  418f48:	mov    ah,0x16
  418f4a:	xchg   ebp,eax
  418f4b:	retf   0x47f3
  418f4e:	inc    edi
  418f4f:	sti    
  418f50:	sti    
  418f51:	dec    eax
  418f52:	pusha  
  418f53:	rol    BYTE PTR [eax],0x0
  418f56:	add    BYTE PTR [eax-0x70],ch
  418f59:	lods   al,BYTE PTR ds:[esi]
  418f5a:	sub    esp,eax
  418f5c:	push   cs
  418f5d:	jg     0x418f91
  418f5f:	push   esi
  418f60:	es mov dh,0x7c
  418f63:	mov    al,0x1e
  418f65:	(bad)  
  418f66:	fadd   DWORD PTR [eax-0x76]
  418f69:	or     BYTE PTR cs:[edx-0xc],cl
  418f6d:	in     eax,dx
  418f6e:	jns    0x418fa3
  418f70:	xchg   esp,eax
  418f71:	lahf   
  418f72:	ins    DWORD PTR es:[edi],dx
  418f73:	jb     0x418f9d
  418f75:	call   0xf67447f6
  418f7a:	jno    0x418fe7
  418f7c:	imul   ecx,DWORD PTR [ebx+eax*8-0x7ccaeaec],0x3a6b459
  418f87:	scas   al,BYTE PTR es:[edi]
  418f88:	(bad)  
  418f89:	xor    al,0x30
  418f8b:	je     0x418f59
  418f8d:	fiadd  WORD PTR [edi+0x6bde9c33]
  418f93:	out    dx,al
  418f94:	and    eax,0xcb6db1ce
  418f99:	mov    esi,0x6315c187
  418f9e:	fcmovnb st,st(4)
  418fa0:	and    eax,0x37c6b600
  418fa5:	inc    edx
  418fa6:	pusha  
  418fa7:	pushf  
  418fa8:	stc    
  418fa9:	cmp    BYTE PTR [ebx+0x14fcf383],dh
  418faf:	out    0x8f,eax
  418fb1:	push   ebx
  418fb2:	popf   
  418fb3:	loop   0x418f4e
  418fb5:	out    dx,eax
  418fb6:	bound  edi,QWORD PTR [ecx]
  418fb8:	nop
  418fb9:	leave  
  418fba:	xchg   ecx,eax
  418fbb:	add    BYTE PTR [eax],al
  418fbd:	add    BYTE PTR [ebp+0x32],bh
  418fc0:	std    
  418fc1:	jle    0x41902f
  418fc3:	inc    esi
  418fc4:	or     eax,0xfff8446d
  418fc9:	call   0x673551bd
  418fce:	mov    ah,0xf9
  418fd0:	mov    BYTE PTR [esp+ebx*8-0x5eaabd21],ah
  418fd7:	cmp    eax,0x90149c89
  418fdc:	inc    ebx
  418fdd:	inc    ecx
  418fde:	dec    esi
  418fdf:	dec    ebp
  418fe0:	or     eax,0xfd33f865
  418fe5:	ss jbe 0x418f89
  418fe8:	jmp    0x418fd3
  418fea:	repz mov bh,BYTE PTR [ebx-0x76f90f03]
  418ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff2:	add    al,0x8e
  418ff4:	inc    ebx
  418ff5:	std    
  418ff6:	scas   eax,DWORD PTR es:[edi]
  418ff7:	leave  
  418ff8:	and    ebp,DWORD PTR [ecx-0x66dc3657]
  418ffe:	stc    
  418fff:	mov    WORD PTR [ecx+ebp*8],ss
  419002:	lock and esi,DWORD PTR [ebx-0x2f]
  419006:	(bad)  
  419007:	mov    ecx,0x353deef3
  41900c:	mov    DWORD PTR [edi-0x917b081],ebp
  419012:	shl    DWORD PTR [ebx],cl
  419014:	std    
  419015:	ins    BYTE PTR es:[edi],dx
  419016:	xor    BYTE PTR [edx],dl
  419018:	test   BYTE PTR [ebx],cl
  41901a:	cld    
  41901b:	push   es
  41901c:	add    BYTE PTR [eax],al
  41901e:	leave  
  41901f:	push   ebp
  419020:	icebp  
  419021:	jmp    0x80419026
  419026:	out    0xfa,eax
  419028:	call   DWORD PTR [edi+0x4f]
  41902b:	inc    BYTE PTR [edx+0x4586298d]
  419031:	pop    esi
  419032:	mov    ds:0x5d0c3c02,al
  419037:	push   0x3c
  419039:	shl    DWORD PTR [eax+0x3a],1
  41903c:	cmp    al,0x7
  41903e:	pop    esi
  41903f:	bound  ecx,QWORD PTR [edi]
  419041:	fdivr  QWORD PTR [esi]
  419043:	add    DWORD PTR [ebx],esi
  419045:	arpl   WORD PTR [edx+ecx*2],si
  419048:	bswap  esp
  41904a:	dec    esi
  41904b:	dec    DWORD PTR [esi]
  41904d:	push   ds
  41904e:	leave  
  41904f:	test   BYTE PTR [ebp+0x26],cl
  419052:	pop    es
  419053:	mov    dh,0x4f
  419055:	mov    ecx,ecx
  419057:	fmul   QWORD PTR [eax]
  419059:	push   ecx
  41905a:	loopne 0x419066
  41905c:	mov    dh,0x8d
  41905e:	or     edi,DWORD PTR [ebp-0x40dc9d20]
  419064:	mov    DWORD PTR [edi+0x24584f4],eax
  41906a:	pop    ebp
  41906b:	add    eax,0xfad715b8
  419070:	jg     0x419035
  419072:	dec    esp
  419073:	cmc    
  419074:	or     DWORD PTR ds:0x1537e70d,0xffffff9e
  41907b:	mov    edi,0x7eb2528d
  419080:	loope  0x41908d
  419082:	mov    eax,ds:0x9605ec48
  419087:	xchg   DWORD PTR [edx+0x77000000],esp
  41908d:	dec    eax
  41908e:	std    
  41908f:	push   cs
  419090:	aam    0x87
  419092:	stos   BYTE PTR es:[edi],al
  419093:	ins    DWORD PTR es:[edi],dx
  419094:	retf   0x430a
  419097:	mov    edi,eax
  419099:	(bad)  
  41909a:	test   BYTE PTR [ebp-0xd],al
  41909d:	xor    eax,0x205ec087
  4190a2:	imul   edi,ebp,0xe8ad4cdc
  4190a8:	jmp    0x4190ca
  4190aa:	cmp    al,0x3f
  4190ac:	js     0x41911c
  4190ae:	jnp    0x4190fb
  4190b0:	(bad)  
  4190b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b2:	(bad)  
  4190b3:	test   DWORD PTR [eax],0x1e86c260
  4190b9:	sbb    ch,dl
  4190bb:	leave  
  4190bc:	das    
  4190bd:	inc    esp
  4190be:	jmp    0x9889:0x8245175d
  4190c5:	mov    WORD PTR ds:0x7a305d0d,gs
  4190cb:	enter  0x7fc0,0x81
  4190cf:	fucomip st,st(4)
  4190d1:	out    dx,eax
  4190d2:	push   eax
  4190d3:	loop   0x41913d
  4190d5:	pop    edx
  4190d6:	xor    eax,0x77308bbf
  4190db:	add    al,0xfb
  4190dd:	jo     0x419064
  4190df:	shl    ah,1
  4190e1:	test   eax,0xcc5cf9c8
  4190e6:	sub    al,0x43
  4190e8:	call   FWORD PTR [eax+0x6b0afbbe]
  4190ee:	adc    eax,0x7e
  4190f3:	ss test al,0xc6
  4190f6:	idiv   eax
  4190f8:	aad    0xfc
  4190fa:	sbb    DWORD PTR [eax],0x13
  4190fd:	sub    eax,0x1d7a70fd
  419102:	add    BYTE PTR [edx-0x7e],bh
  419105:	adc    eax,0x17f3770d
  41910a:	add    bl,dh
  41910c:	cwde   
  41910d:	(bad)  
  41910e:	and    esi,DWORD PTR [ebx-0x5cdc395a]
  419114:	push   es
  419115:	xchg   edi,eax
  419116:	adc    al,0xf3
  419118:	push   es
  419119:	out    0x7a,eax
  41911b:	lods   eax,DWORD PTR ds:[esi]
  41911c:	mov    dl,0x19
  41911e:	cmp    eax,0xeb28461a
  419123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419124:	adc    bl,BYTE PTR [ebx-0x15]
  419127:	add    DWORD PTR [edi],eax
  419129:	out    0x79,eax
  41912b:	repnz vshufps ymm1,ymm0,ymm5,0x11
  419131:	ins    BYTE PTR es:[edi],dx
  419132:	dec    dl
  419134:	and    ch,BYTE PTR [esi-0x59e9bae4]
  41913a:	cs push 0xffffffc9
  41913d:	or     dh,bl
  41913f:	mov    ch,0xee
  419141:	test   eax,0xde47ebc4
  419146:	jg     0x41914e
  419148:	cld    
  419149:	out    0x3,al
  41914b:	out    0x58,al
  41914d:	fidivr DWORD PTR [edx+0x35]
  419150:	xlat   BYTE PTR ds:[ebx]
  419151:	in     eax,0x75
  419153:	or     BYTE PTR ss:[ecx+0x17],ah
  419157:	add    BYTE PTR [eax],al
  419159:	add    cl,dh
  41915b:	lds    ebx,FWORD PTR [esi]
  41915d:	sbb    BYTE PTR [ebp+ebp*1+0x39],dh
  419161:	(bad)  
  419162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419163:	retf   0xfee7
  419166:	sahf   
  419167:	shr    al,cl
  419169:	inc    esp
  41916a:	push   ebx
  41916b:	pslld  mm0,QWORD PTR [esp+ebp*2-0x34]
  419170:	cmp    al,BYTE PTR [edx-0x4ebdf9ca]
  419176:	das    
  419177:	int3   
  419178:	ss add al,0xf3
  41917b:	push   es
  41917c:	out    0xfe,eax
  41917e:	jle    0x41914a
  419180:	out    0xfe,eax
  419182:	mov    dx,0x82e8
  419186:	nop
  419187:	and    ah,bh
  419189:	inc    esp
  41918a:	adc    ecx,DWORD PTR [edi]
  41918c:	repnz inc ecx
  41918e:	loop   0x4191c4
  419190:	addr16 sub al,0xd5
  419193:	adc    DWORD PTR [eax],eax
  419195:	pop    ebp
  419196:	mov    dl,0x89
  419198:	push   ebx
  419199:	std    
  41919a:	fidivr DWORD PTR [eax]
  41919c:	or     DWORD PTR [ebx+eax*8+0x6],0x222724c5
  4191a4:	std    
  4191a5:	jmp    0x142a5d9a
  4191aa:	loop   0x41920d
  4191ac:	inc    eax
  4191ad:	jo     0x41915b
  4191af:	xor    DWORD PTR [edi-0xdcffcdc],eax
  4191b5:	push   0xffffff8c
  4191b7:	sbb    eax,0xc730fa00
  4191bc:	xchg   BYTE PTR [eax+eax*1],ch
  4191bf:	add    BYTE PTR [eax],al
  4191c1:	dec    ebx
  4191c3:	call   0xdf10bf8e
  4191c8:	push   0xffffffd0
  4191ca:	and    DWORD PTR [eax-0x41ec2ce4],ecx
  4191d0:	jno    0x4191aa
  4191d2:	lods   eax,DWORD PTR ds:[esi]
  4191d3:	aas    
  4191d4:	jmp    0x98c1f568
  4191d9:	fs loope 0x4191db
  4191dc:	and    eax,0x70fbcdf8
  4191e1:	lods   al,BYTE PTR ds:[esi]
  4191e2:	sbb    DWORD PTR [ebx-0x47f65bd7],eax
  4191e8:	push   esi
  4191e9:	push   ss
  4191ea:	and    al,0x7d
  4191ec:	pusha  
  4191ed:	xor    al,0x19
  4191ef:	or     eax,0xf5cbfe7f
  4191f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f5:	clc    
  4191f6:	and    DWORD PTR [eax-0x7bec0364],ecx
  4191fc:	inc    ebp
  4191fd:	test   DWORD PTR [esi],0xf1757200
  419203:	or     al,0x57
  419205:	repz adc DWORD PTR [ecx],esi
  419208:	cmp    ebp,DWORD PTR [eax+0x5c62f3cd]
  41920e:	sbb    eax,0x39a30042
  419213:	adc    DWORD PTR [ebx],edi
  419215:	rcl    BYTE PTR [esi+0x2a],0xeb
  419219:	sbb    DWORD PTR [esi],edx
  41921b:	iret   
  41921c:	inc    edx
  41921d:	inc    ecx
  41921e:	push   ebx
  41921f:	imul   ecx,DWORD PTR [edi],0x115089
  419225:	add    BYTE PTR [eax],al
  419227:	add    dl,bl
  419229:	and    esi,DWORD PTR [ebx+0x2d625113]
  41922f:	je     0xf3849955
  419235:	pop    edi
  419236:	icebp  
  419237:	xorps  xmm6,xmm7
  41923a:	hlt    
  41923b:	(bad)  
  41923c:	jge    0x419231
  41923e:	inc    eax
  41923f:	adc    al,0x51
  419241:	popa   
  419242:	stc    
  419243:	cmp    edi,edi
  419245:	(bad)  
  419246:	jge    0x41921d
  419248:	xchg   ecx,eax
  419249:	fmul   QWORD PTR [edx]
  41924b:	test   BYTE PTR [ecx+eax*1],ah
  41924e:	sti    
  41924f:	dec    DWORD PTR [ecx]
  419251:	jno    0x41923c
  419253:	add    BYTE PTR [ebp-0x65ebb577],bl
  419259:	add    al,0x85
  41925b:	pop    ebp
  41925c:	(bad)  
  41925d:	lds    edi,FWORD PTR cs:[ebp+0x4e]
  419261:	popf   
  419262:	dec    eax
  419263:	adc    al,0xd1
  419265:	push   eax
  419266:	imul   esi,DWORD PTR [ebx-0x10],0xd113b321
  41926d:	popa   
  41926e:	sub    eax,0x720840f
  419273:	cmp    DWORD PTR [edi-0x66da8f28],ebx
  419279:	repz inc eax
  41927b:	adc    al,0x43
  41927d:	dec    ecx
  41927e:	adc    DWORD PTR [ecx+ebp*4-0x2],edi
  419282:	sbb    DWORD PTR [ebx-0x3f7d8f7c],ecx
  419288:	xchg   bh,dh
  41928a:	ss pop ebp
  41928c:	add    BYTE PTR [eax],al
  41928e:	add    bl,dh
  419290:	and    eax,0xe6e00db3
  419295:	rol    DWORD PTR [esi-0x4117965b],0xfc
  41929c:	mov    al,0x22
  41929e:	test   DWORD PTR [ecx+ebx*1],0x2e037b7d
  4192a5:	cld    
  4192a6:	xor    BYTE PTR [edx+edi*1-0x1cd702d7],0x27
  4192ae:	or     eax,0xfd2c8d71
  4192b3:	fsub   QWORD PTR [esi+edi*4-0x4168ccdd]
  4192ba:	and    ecx,esp
  4192bc:	fcmovu st,st(7)
  4192be:	mov    BYTE PTR [ebx+eax*8+0x5246fd03],bl
  4192c5:	jle    0x419290
  4192c7:	mov    ah,0x2
  4192c9:	or     al,0x56
  4192cb:	lods   al,BYTE PTR ds:[esi]
  4192cc:	cli    
  4192cd:	adc    edi,ebp
  4192cf:	push   ds
  4192d0:	sub    ch,BYTE PTR [edx]
  4192d2:	jae    0x4192bf
  4192d4:	test   DWORD PTR [esi-0x14],edx
  4192d7:	xchg   esp,eax
  4192d8:	mov    BYTE PTR [ebp-0x7fcf4c7e],bh
  4192de:	iret   
  4192df:	(bad)  ds:0xb21e3901
  4192e5:	mov    ah,0xd3
  4192e7:	mov    dh,BYTE PTR ds:0x946cfd29
  4192ed:	mov    dh,0xfb
  4192ef:	sub    al,0x72
  4192f1:	or     eax,0xff
  4192f6:	pop    esp
  4192f7:	sub    eax,0x2e5a8101
  4192fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192fd:	push   ds
  4192fe:	or     BYTE PTR [eax+0x4e700c95],al
  419304:	sub    al,0xfd
  419306:	cmp    al,0x40
  419308:	outs   dx,DWORD PTR ds:[esi]
  419309:	or     DWORD PTR [eax+0x20b8e006],esi
  41930f:	pcmpgtb mm0,mm7
  419312:	sbb    al,0x1f
  419314:	push   ss
  419315:	sub    esi,DWORD PTR [eax+0x18b961fa]
  41931b:	fnsave [ebx-0x3dc072f1]
  419321:	cmp    esi,esi
  419323:	mov    ch,BYTE PTR ds:0x6a1efe18
  419329:	test   eax,0xb8700608
  41932e:	add    BYTE PTR [esi],cl
  419330:	fs push edx
  419332:	add    al,BYTE PTR [edi]
  419334:	out    0x7c,eax
  419336:	cmp    BYTE PTR [ebx],bl
  419338:	adc    bh,BYTE PTR [eax+ebx*2]
  41933b:	fld    DWORD PTR [ecx]
  41933d:	retf   0x9a58
  419340:	fsqrt  
  419342:	jle    0x419356
  419344:	lock mov eax,0xc70394c0
  41934a:	mov    bh,0xc4
  41934c:	cli    
  41934d:	in     al,dx
  41934e:	xor    ebx,esi
  419350:	sbb    bl,BYTE PTR [esi]
  419352:	call   0xa784:0x18c16201
  419359:	scas   eax,DWORD PTR es:[edi]
  41935a:	add    BYTE PTR [eax],al
  41935c:	add    BYTE PTR [ebx],al
  41935e:	loop   0x419383
  419360:	cld    
  419361:	push   es
  419362:	or     eax,0x8fc43cba
  419367:	and    eax,0xde47bbc8
  41936c:	jp     0x419346
  41936e:	pop    ds
  41936f:	data16 sub dh,BYTE PTR [edx-0x64]
  419373:	push   esi
  419374:	add    esi,esi
  419376:	sbb    ebp,0x17
  419379:	pop    esi
  41937a:	push   ds
  41937b:	adc    cl,cl
  41937d:	pop    eax
  41937e:	push   cs
  41937f:	imul   edx,DWORD PTR [edx+0x46],0xb07e3e1e
  419386:	loop   0x419387
  419388:	test   al,0xbf
  41938a:	leave  
  41938b:	and    ebp,DWORD PTR [esi]
  41938d:	sub    edx,0xffffff88
  419390:	mov    ds,WORD PTR ds:[esi]
  419393:	(bad)  
  419394:	xchg   esp,eax
  419395:	in     al,dx
  419396:	(bad)
  41939a:	not    BYTE PTR [ebp+0xe]
  41939d:	arpl   WORD PTR [esi],cx
  41939f:	std    
  4193a0:	jl     0x4193a6
  4193a2:	sbb    esi,DWORD PTR [ebx-0xf]
  4193a5:	call   0xcb387faf
  4193aa:	iret   
  4193ab:	sub    BYTE PTR [ecx],0xf9
  4193ae:	mov    BYTE PTR [eax],cl
  4193b0:	push   eax
  4193b2:	push   es
  4193b3:	cmp    DWORD PTR [ebx+ebx*1],edi
  4193b6:	cwde   
  4193b7:	rol    eax,cl
  4193b9:	push   0x13
  4193bb:	std    
  4193bc:	into   
  4193bd:	(bad)  
  4193be:	mov    ebx,0xf66b
  4193c3:	add    BYTE PTR [edi+0x63],dh
  4193c6:	clc    
  4193c7:	mov    esi,0xe2b60c1a
  4193cc:	mov    bh,0x13
  4193ce:	inc    ebx
  4193cf:	shl    ecx,1
  4193d1:	xchg   edx,eax
  4193d2:	sbb    BYTE PTR [edx-0x4f],dh
  4193d5:	in     eax,dx
  4193d6:	or     al,0x57
  4193d8:	ret    0x871c
  4193db:	in     eax,0x98
  4193dd:	xchg   ch,al
  4193df:	jmp    0x419369
  4193e1:	adc    DWORD PTR [edx],eax
  4193e3:	test   BYTE PTR ds:0xda7eec0b,0x25
  4193ea:	outs   dx,DWORD PTR ds:[esi]
  4193eb:	jle    0x4193b7
  4193ed:	sbb    ecx,DWORD PTR ds:0x821cb237
  4193f3:	cs cmc 
  4193f5:	fistp  QWORD PTR [esi-0x49f3faae]
  4193fb:	scas   al,BYTE PTR es:[edi]
  4193fc:	icebp  
  4193fd:	or     esi,DWORD PTR [esi-0x1fa21162]
  419403:	add    BYTE PTR [edx+0x1a],al
  419406:	mov    esi,0x7ee58f89
  41940b:	(bad)  
  41940c:	dec    ecx
  41940d:	add    BYTE PTR [ecx+0xb094a00],al
  419413:	mov    dh,0x5d
  419415:	or     BYTE PTR [ebx],cl
  419417:	mov    dh,0x5d
  419419:	add    edi,DWORD PTR [edi+0x65]
  41941c:	push   es
  41941d:	add    edi,DWORD PTR [ebp-0x40e5ed20]
  419423:	xor    ebp,eax
  419425:	xor    ch,0x33
  419428:	add    BYTE PTR [eax],al
  41942a:	add    BYTE PTR ds:0x5f89c28d,dl
  419430:	cmc    
  419431:	out    0xda,al
  419433:	mov    DWORD PTR [ebp-0x7],edi
  419436:	add    BYTE PTR [ebp-0x25fe12a3],bl
  41943c:	or     BYTE PTR [eax],al
  41943e:	inc    edi
  41943f:	mov    cl,0x4c
  419441:	xor    al,al
  419443:	or     ah,BYTE PTR [eax+0x5d43f040]
  419449:	stc    
  41944a:	jmp    0x4193d4
  41944c:	and    DWORD PTR [ecx-0x4],0xffffffca
  419450:	adc    edi,DWORD PTR [ebp-0x12a2acc0]
  419456:	inc    edi
  419457:	or     DWORD PTR [ecx+0xc],0xb07cdb6
  41945e:	mov    dh,0xd5
  419460:	add    al,0x7f
  419462:	data16 or BYTE PTR gs:[ebp+0x40c782e0],bh
  41946a:	lock fwait
  41946c:	or     BYTE PTR [eax],al
  41946e:	add    BYTE PTR [ecx+0x179ae6c9],dl
  419474:	pusha  
  419475:	rol    DWORD PTR [ebx+0x4d8508bb],1
  41947b:	mov    dh,0x1e
  41947d:	mov    ebx,0x9671f388
  419482:	aas    
  419483:	repz cmp al,0x67
  419486:	xor    BYTE PTR [edi],0x33
  419489:	sar    edi,0xad
  41948c:	xchg   esi,eax
  41948d:	mov    ch,0xfb
  41948f:	add    BYTE PTR [eax],al
  419491:	add    BYTE PTR [edx+0x6b],ch
  419494:	sub    DWORD PTR [ebx-0x4806accd],eax
  41949a:	sub    al,0xe5
  41949c:	daa    
  41949d:	jge    0x419519
  41949f:	arpl   WORD PTR [ecx],bp
  4194a1:	or     eax,0xf5c01d65
  4194a6:	scas   al,BYTE PTR es:[edi]
  4194a7:	adc    eax,0x19a68702
  4194ac:	cmc    
  4194ad:	or     DWORD PTR [edi],0x2e
  4194b0:	add    DWORD PTR [eax],eax
  4194b2:	push   0x3d0cf164
  4194b7:	cmp    dl,BYTE PTR [edx]
  4194b9:	xor    ecx,eax
  4194bb:	xchg   esi,eax
  4194bc:	mov    dh,0xf3
  4194be:	js     0x4194aa
  4194c0:	daa    
  4194c1:	inc    edx
  4194c2:	push   0xffffffda
  4194c4:	(bad)  
  4194c6:	test   eax,0xf0e8d6c9
  4194cb:	and    BYTE PTR [edi+0x42],cl
  4194ce:	or     ah,bh
  4194d0:	xchg   edi,eax
  4194d1:	or     al,0x70
  4194d3:	imul   edx,DWORD PTR [ebx],0x0
  4194d6:	repz cmp al,0x6b
  4194d9:	adc    DWORD PTR [eax-0x2d],edi
  4194dc:	repz or al,0x5d
  4194df:	sub    edi,esi
  4194e1:	inc    eax
  4194e2:	(bad)  
  4194e4:	das    
  4194e5:	or     eax,0xfd2e096f
  4194ea:	mov    WORD PTR [edi+edi*4+0x27ea7813],es
  4194f1:	aaa    
  4194f2:	cmp    ah,BYTE PTR cs:[ebx+0xd2]
  4194f9:	mov    eax,0x6c83f565
  4194fe:	push   es
  4194ff:	push   ecx
  419500:	daa    
  419501:	xchg   sp,bx
  419504:	pop    ss
  419505:	repz lea esp,[edi+ecx*1+0x11c581e6]
  41950d:	repz push es
  41950f:	jo     0x4194da
  419511:	dec    eax
  419512:	fild   QWORD PTR [esi]
  419514:	test   eax,0x9794e005
  419519:	ret    
  41951a:	add    dh,bl
  41951c:	ins    DWORD PTR es:[edi],dx
  41951d:	add    dl,BYTE PTR [eax+0x54f7f3b5]
  419523:	jmp    0x41951e
  419525:	in     eax,0xc9
  419527:	sbb    dh,BYTE PTR [eax-0x3ef2382f]
  41952d:	loopne 0x41950c
  41952f:	stos   DWORD PTR es:[edi],eax
  419530:	ja     0x6a4ba75d
  419536:	les    esi,FWORD PTR [edx-0x80]
  419539:	xor    edx,DWORD PTR [edx+0xf49ead9]
  41953f:	pop    ebp
  419540:	mul    BYTE PTR [ebx]
  419542:	push   eax
  419543:	sub    BYTE PTR [ebp+0x2d],bh
  419546:	mov    ebx,0x89e64511
  41954b:	push   ds
  41954c:	das    
  41954d:	into   
  41954e:	sbb    ch,BYTE PTR [edx-0x58]
  419551:	aam    0x7
  419553:	out    dx,al
  419554:	or     BYTE PTR [ebx-0x5d949d3],0xbb
  41955b:	stos   BYTE PTR es:[edi],al
  41955c:	test   BYTE PTR [eax],0x0
  41955f:	add    BYTE PTR [edx+0x10],dh
  419562:	popf   
  419563:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419565:	mov    fs,WORD PTR [eax+eiz*8]
  419568:	fmul   QWORD PTR [edi-0x6b681fd4]
  41956e:	ret    0xa67a
  419571:	lods   eax,DWORD PTR ds:[esi]
  419572:	out    0x26,al
  419574:	add    bl,bh
  419576:	jno    0x4195b2
  419578:	jle    0x41950e
  41957a:	call   eax
  41957c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41957d:	sbb    esi,DWORD PTR [ebx-0x27]
  419580:	adc    eax,0xa3660b96
  419585:	add    ch,al
  419587:	and    bh,cl
  419589:	sbb    edi,ebp
  41958b:	ins    BYTE PTR es:[edi],dx
  41958c:	mov    al,0xb
  41958e:	adc    DWORD PTR [edx],0xffffffe3
  419591:	push   es
  419592:	add    BYTE PTR [edx-0x450442a7],dh
  419598:	lods   al,BYTE PTR ds:[esi]
  419599:	and    edi,ecx
  41959b:	cmp    al,0xd
  41959d:	sbb    al,0x89
  41959f:	pushf  
  4195a0:	aam    0x43
  4195a2:	inc    ebx
  4195a3:	std    
  4195a4:	out    dx,eax
  4195a5:	push   es
  4195a6:	add    cl,ch
  4195a8:	jno    0x4195bc
  4195aa:	call   DWORD PTR [edi+ecx*1+0x57d5ddf]
  4195b1:	xchg   edx,ecx
  4195b3:	dec    esi
  4195b5:	sbb    ecx,DWORD PTR ds:0x36c6f937
  4195bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195bc:	les    ecx,FWORD PTR [ebx]
  4195be:	test   BYTE PTR ds:0xe6fd1c23,bh
  4195c4:	add    BYTE PTR [eax],al
  4195c6:	add    BYTE PTR [ebp+esi*8-0x2df4d378],ah
  4195cd:	dec    edx
  4195ce:	std    
  4195cf:	mov    ?,WORD PTR [edx]
  4195d1:	cmp    DWORD PTR [ecx-0x2cd27a3a],esp
  4195d7:	push   cs
  4195d8:	sbb    al,0x81
  4195da:	cmp    al,0xdb
  4195dc:	push   es
  4195dd:	xchg   DWORD PTR [ebx+eiz*8],esp
  4195e0:	or     eax,DWORD PTR [ebx+0x700ba]
  4195e6:	jo     0x419594
  4195e8:	sbb    eax,0xd754b139
  4195ed:	cmp    BYTE PTR [edi],dh
  4195ef:	jnp    0x419587
  4195f1:	adc    dh,bl
  4195f3:	push   ds
  4195f4:	adc    BYTE PTR [edi],dh
  4195f6:	add    BYTE PTR [edi-0x36da8c2a],bh
  4195fc:	jecxz  0x41963e
  4195fe:	adc    al,0x43
  419600:	pop    eax
  419601:	adc    DWORD PTR [eax+esi*2-0x1],edi
  419605:	sbb    DWORD PTR [ebx-0x3f7d9e6c],ecx
  41960b:	inc    esi
  41960c:	div    BYTE PTR [esi]
  41960e:	pop    ebp
  41960f:	push   edx
  419610:	imul   ecx,DWORD PTR [ebx],0x33
  419613:	adc    eax,DWORD PTR [esi-0x7a]
  419616:	dec    esi
  419617:	mov    gs,WORD PTR [esi]
  419619:	mov    esi,0xf598cd0f
  41961e:	(bad)  
  41961f:	std    
  419620:	xchg   DWORD PTR [ecx-0x10],edi
  419623:	sbb    dl,BYTE PTR [edx]
  419625:	sbb    bh,0x3
  419628:	in     al,0xfa
  41962a:	cmp    eax,DWORD PTR [eax]
  41962c:	add    BYTE PTR [eax],al
  41962e:	pop    edi
  41962f:	loope  0x41963b
  419631:	or     BYTE PTR [edx-0x18],0xfa
  419635:	call   DWORD PTR [ecx-0x7cbfdea7]
  41963b:	pop    ecx
  41963c:	and    edi,edi
  41963e:	xchg   DWORD PTR [ecx],edi
  419640:	mov    bh,dl
  419642:	jo     0x419649
  419644:	sti    
  419645:	jne    0x419605
  419647:	lahf   
  419648:	(bad)  
  419649:	inc    DWORD PTR [edi+0xb]
  41964c:	push   esi
  41964d:	inc    DWORD PTR [edi-0xd]
  419650:	cli    
  419651:	jne    0x419621
  419653:	jecxz  0x4196c5
  419655:	or     BYTE PTR [edx-0x520019aa],dh
  41965b:	cdq    
  41965c:	mov    edi,0x1056570f
  419661:	add    dl,cl
  419663:	pop    edi
  419664:	cmp    BYTE PTR [ebp+0x5e],bl
  419667:	push   edi
  419668:	shr    ecx,1
  41966a:	mov    ds:0x8dfffae9,al
  41966f:	stos   BYTE PTR es:[edi],al
  419670:	dec    edx
  419671:	add    ebx,esi
  419673:	and    BYTE PTR [ebx+0x45],ch
  419676:	icebp  
  419677:	outs   dx,BYTE PTR ds:[esi]
  419678:	and    cl,BYTE PTR [eax]
  41967a:	clc    
  41967b:	push   ebp
  41967c:	js     0x41963d
  41967e:	mov    ah,0xe3
  419680:	pop    ss
  419681:	push   DWORD PTR [esi+ebp*1+0x1]
  419685:	xchg   DWORD PTR [esi-0xf3a8057],esi
  41968b:	mov    dh,0x72
  41968d:	add    bl,dh
  41968f:	sub    eax,0xb5f4
  419694:	add    BYTE PTR [esi+ebp*1+0x2ba4b5f4],ah
  41969b:	inc    edx
  41969c:	(bad)  
  41969e:	adc    al,0x37
  4196a0:	xchg   DWORD PTR [esi+0xc6efc5],ebp
  4196a6:	out    dx,al
  4196a7:	cmp    BYTE PTR ds:0xfbbda6b3,0xf4
  4196ae:	cdq    
  4196af:	inc    ecx
  4196b0:	xor    DWORD PTR [ebp*1-0x5af8b486],0x8718f7b5
  4196bb:	cmp    al,0x43
  4196bd:	add    ebp,DWORD PTR [edi]
  4196bf:	add    DWORD PTR [eax],eax
  4196c1:	repz pop esp
  4196c3:	inc    ecx
  4196c4:	xchg   DWORD PTR [esi+0x41e8b911],ebp
  4196ca:	pop    ebp
  4196cb:	inc    ecx
  4196cc:	inc    eax
  4196cd:	jp     0x4196b9
  4196cf:	adc    ebp,ecx
  4196d1:	loope  0x4196cf
  4196d3:	dec    edx
  4196d4:	aas    
  4196d5:	and    BYTE PTR [esi-0x75],ch
  4196d8:	dec    ebx
  4196d9:	ret    
  4196da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196db:	(bad)  
  4196dc:	sti    
  4196dd:	sub    al,0x35
  4196df:	ret    
  4196e0:	or     al,0x85
  4196e2:	call   0xf8bea3e9
  4196e7:	add    eax,0xd62592bf
  4196ec:	mov    edi,0x142c06ac
  4196f1:	pushf  
  4196f2:	pop    ss
  4196f3:	out    0x3,eax
  4196f5:	jmp    0x0:0x74824c
  4196fc:	js     0x4196cc
  4196fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ff:	pop    DWORD PTR [ebx+eax*4-0x79]
  419703:	add    eax,0x138ac174
  419708:	xor    eax,0x2cb17f85
  41970d:	pop    es
  41970e:	fisub  WORD PTR [ecx+0x6c]
  419711:	push   ss
  419712:	aam    0xc3
  419714:	pop    esp
  419715:	shr    BYTE PTR [edi-0x37],0x58
  419719:	lea    esp,[ebx+ebx*1+0xbd44d70]
  419720:	jl     0x419739
  419722:	inc    esi
  419723:	and    edi,DWORD PTR [esi-0x19e45373]
  419729:	push   eax
  41972a:	fmulp  st(2),st
  41972c:	jne    0x4196df
  41972e:	xor    cl,BYTE PTR [ecx-0x548af8cd]
  419734:	repz push es
  419736:	out    0x86,eax
  419738:	xor    DWORD PTR [edx+ebp*2],ebx
  41973b:	push   ds
  41973c:	inc    BYTE PTR [edi]
  41973e:	data16 sbb al,0xe3
  419741:	push   es
  419742:	out    0x22,eax
  419744:	xlat   BYTE PTR ds:[ebx]
  419745:	jno    0x419779
  419747:	nop
  419748:	mov    ah,0x6
  41974a:	mov    edx,0x28d23135
  41974f:	adc    esi,DWORD PTR [edi-0x40]
  419752:	jmp    0x34c18a5a
  419757:	clc    
  419758:	retf   
  419759:	or     bl,BYTE PTR [edx]
  41975b:	xor    DWORD PTR ss:[edx+0xb01d],eax
  419762:	add    BYTE PTR [ebx],cl
  419764:	xor    dh,dh
  419766:	xchg   BYTE PTR [edi],ch
  419768:	push   es
  419769:	out    0x3,eax
  41976b:	jb     0x419702
  41976d:	call   eax
  41976f:	lock call 0x176:0x13ef431b
  419777:	cmp    BYTE PTR [ebp+0x1f2d721b],0xb2
  41977e:	adc    eax,0xa98306f7
  419783:	loope  0x41970e
  419785:	idiv   DWORD PTR [edx-0x2f]
  419788:	adc    ecx,DWORD PTR [ecx+0x231fd324]
  41978e:	bound  ebp,QWORD PTR [edx+0x45a328f2]
  419794:	cmp    eax,0x6d0575
  419799:	cmp    ch,BYTE PTR [edi+0x6a129944]
  41979f:	out    dx,al
  4197a0:	adc    eax,0x1805650e
  4197a5:	std    
  4197a6:	inc    esi
  4197a7:	outs   dx,BYTE PTR ds:[esi]
  4197a8:	sar    dh,0x2
  4197ab:	and    ecx,esp
  4197ad:	or     al,0x6d
  4197af:	rcl    DWORD PTR [edi],0xfd
  4197b2:	cs jne 0x419777
  4197b5:	imul   DWORD PTR [edx-0x1fec362f]
  4197bb:	sub    edi,edx
  4197bd:	jge    0x419835
  4197bf:	fbstp  TBYTE PTR [edx+eax*1]
  4197c2:	jmp    0x959817b7
  4197c7:	add    BYTE PTR [eax],al
  4197c9:	add    BYTE PTR ds:0xe1233946,cl
  4197cf:	mov    eax,edx
  4197d1:	std    
  4197d2:	adc    dl,BYTE PTR [ecx+eax*1]
  4197d5:	adc    DWORD PTR [edi],edx
  4197d7:	inc    ecx
  4197d8:	add    ch,cl
  4197da:	lock dec ebx
  4197dc:	inc    ebx
  4197dd:	cmc    
  4197de:	icebp  
  4197df:	push   es
  4197e0:	add    cl,ch
  4197e2:	ja     0x4197f2
  4197e4:	(bad)  
  4197e5:	fnsave [eax+edx*2+0x2]
  4197e9:	add    dl,cl
  4197eb:	or     DWORD PTR [edi],esi
  4197ed:	pop    esi
  4197ee:	es clc 
  4197f0:	jle    0x419794
  4197f2:	outs   dx,BYTE PTR ds:[esi]
  4197f3:	out    0xfa,eax
  4197f5:	nop    DWORD PTR [eax+eax*2]
  4197f9:	adc    DWORD PTR [eax+0x4],0x74
  4197fd:	test   DWORD PTR es:[edi-0x7e],esi
  419801:	repz gs out 0x7e,eax
  419805:	cli    
  419806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419807:	addr16 push cs
  419809:	xor    DWORD PTR [eax+0x5],0x74
  41980d:	and    ecx,DWORD PTR [ebx]
  41980f:	cmc    
  419810:	add    BYTE PTR [eax],0x5a
  419813:	or     DWORD PTR [ebx],ecx
  419815:	test   DWORD PTR [esi-0x6],esp
  419818:	cli    
  419819:	dec    ecx
  41981b:	push   0x8c45005d
  419820:	(bad)
  419825:	inc    ebp
  419826:	xor    BYTE PTR ds:[edx+0x14],al
  41982a:	xor    al,0xc9
  41982c:	in     al,0x75
  41982e:	add    BYTE PTR [eax],al
  419830:	add    BYTE PTR [eax+0x9],cl
  419833:	add    BYTE PTR [ebx],bh
  419835:	test   BYTE PTR [ebp+0x70],ah
  419838:	out    dx,al
  419839:	call   0xe84c:0x3750733
  419840:	out    0xcd,al
  419842:	dec    ebp
  419843:	adc    DWORD PTR [ecx],eax
  419845:	sbb    cl,BYTE PTR [ecx]
  419847:	add    BYTE PTR [ebx-0x73f4f61e],al
  41984d:	push   edx
  41984e:	or     eax,DWORD PTR [eax]
  419850:	add    BYTE PTR [ecx],dh
  419852:	inc    edi
  419853:	imul   ecx,DWORD PTR [edi],0xfff14b59
  419859:	aad    0xf7
  41985b:	mov    ch,0x13
  41985d:	or     DWORD PTR [edx-0x733af606],ecx
  419863:	and    dh,bl
  419865:	repz cmp al,0x20
  419868:	or     ecx,0xda840efe
  41986e:	push   eax
  41986f:	and    ch,bh
  419871:	jb     0x4198bb
  419873:	popa   
  419874:	add    bl,dh
  419876:	sbb    eax,0x50f68410
  41987b:	and    ch,bh
  41987d:	pushf  
  41987e:	jecxz  0x419877
  419880:	ss sbb bl,BYTE PTR cs:[edi+0x33e9aca]
  419888:	add    bl,dh
  41988a:	ins    BYTE PTR es:[edi],dx
  41988b:	(bad)  
  41988c:	adc    esi,edx
  41988e:	sbb    eax,0x86700001
  419893:	add    cl,BYTE PTR ds:0x7f000000
  419899:	add    eax,DWORD PTR cs:[eax]
  41989c:	repz pop eax
  41989e:	mov    edi,0x18a0ec6b
  4198a3:	icebp  
  4198a4:	push   esp
  4198a5:	mov    ch,0xf
  4198a7:	mov    dh,0xe0
  4198a9:	pusha  
  4198aa:	test   dl,bh
  4198ac:	cli    
  4198ad:	cmp    edx,esi
  4198af:	cmp    BYTE PTR [ecx],0xfe
  4198b2:	xchg   edi,eax
  4198b3:	or     esi,DWORD PTR [edx-0x38]
  4198b6:	pusha  
  4198b7:	add    bl,dh
  4198b9:	sbb    eax,0xd0368310
  4198be:	pop    ds
  4198bf:	std    
  4198c0:	sbb    al,0x63
  4198c2:	cmc    
  4198c3:	ss scas al,BYTE PTR es:[edi]
  4198c5:	sbb    DWORD PTR [edi+0x1fe1ad2],ebx
  4198cb:	add    bl,dh
  4198cd:	in     al,dx
  4198ce:	lds    edx,FWORD PTR [ebx]
  4198d0:	repnz sbb eax,0x6700001
  4198d6:	add    cl,BYTE PTR ds:0x1ed7f
  4198dc:	repz pop eax
  4198de:	mov    edi,0x6a06ec6b
  4198e3:	pop    esp
  4198e4:	loop   0x4198f9
  4198e6:	fimul  WORD PTR [edi]
  4198e8:	test   edi,esi
  4198ea:	sub    DWORD PTR [ebx-0x6b4ff37],eax
  4198f0:	jae    0x419902
  4198f2:	hlt    
  4198f3:	push   cs
  4198f4:	gs jns 0x4198b0
  4198f7:	pop    ds
  4198f8:	scas   al,BYTE PTR es:[edi]
  4198f9:	test   DWORD PTR [ecx+0x89],esi
  4198ff:	repz push es
  419901:	out    0xe,eax
  419903:	ja     0x419982
  419905:	cdq    
  419906:	pop    ds
  419907:	xchg   esi,eax
  419908:	adc    esp,DWORD PTR [eax+edi*8]
  41990b:	vpsubd xmm3,xmm6,XMMWORD PTR [ebp+0x56b1db5]
  419913:	repz push es
  419915:	scas   al,BYTE PTR es:[edi]
  419916:	leave  
  419917:	loopne 0x41991e
  419919:	out    0x3,eax
  41991b:	xrelease xchg DWORD PTR [edi+0x5],ebp
  41991f:	test   BYTE PTR [edx+0x6f3055b],0x22
  419926:	mov    esi,0x986a03c8
  41992b:	inc    ebx
  41992c:	adc    edx,DWORD PTR [esi+0xf]
  41992f:	jge    0x419928
  419931:	test   eax,0xf6003982
  419936:	(bad)  
  419937:	popf   
  419938:	sbb    BYTE PTR [esi],bh
  41993a:	pop    ds
  41993b:	jb     0x41994d
  41993d:	in     al,0x9d
  41993f:	clc    
  419940:	test   DWORD PTR [ecx],esi
  419942:	mov    ebx,esi
  419944:	push   es
  419945:	out    0xe,eax
  419947:	jo     0x419912
  419949:	sbb    BYTE PTR [edi],bl
  41994b:	push   cs
  41994c:	adc    ebp,DWORD PTR [edi+esi*8-0x620d3643]
  419953:	sub    eax,0xf3049f1d
  419958:	push   es
  419959:	mov    edx,0x803131
  41995e:	pushf  
  41995f:	fmul   st(7),st
  419961:	rcr    esi,0x0
  419964:	add    BYTE PTR [eax],al
  419966:	ins    BYTE PTR es:[edi],dx
  419967:	mov    ebp,0x1ff0e8fe
  41996c:	add    DWORD PTR [edx],ebx
  41996e:	add    ebp,eax
  419970:	cmp    BYTE PTR [edi],dh
  419972:	add    DWORD PTR [ebx],0xffffff81
  419975:	cmp    esp,edx
  419977:	push   es
  419978:	add    dh,dh
  41997a:	push   ds
  41997b:	add    BYTE PTR [ecx+0xc80cb17],cl
  419981:	fdiv   DWORD PTR [ecx-0x121a216e]
  419987:	test   DWORD PTR [edi],eax
  419989:	fwait
  41998a:	cmc    
  41998b:	adc    edi,ebp
  41998d:	and    al,0x8b
  41998f:	fld    DWORD PTR [edx-0x3]
  419992:	cmp    di,sp
  419995:	lock test DWORD PTR [esi],0xc4c2ba00
  41999c:	xchg   BYTE PTR [ebx+ebp*2],dl
  41999f:	iret   
  4199a0:	shl    esi,0x74
  4199a3:	add    edi,edi
  4199a5:	call   0x1a42b99a
  4199aa:	and    ebp,eax
  4199ac:	cmp    BYTE PTR [edi-0x7efc64],bh
  4199b2:	jecxz  0x4199ba
  4199b4:	add    dh,bl
  4199b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b7:	dec    DWORD PTR [eax+0xc801c9f]
  4199bd:	fdiv   DWORD PTR [ecx]
  4199bf:	xchg   edx,eax
  4199c0:	fsubp  st(5),st
  4199c2:	cmc    
  4199c3:	mov    cl,bl
  4199c5:	cmp    ch,bh
  4199c7:	adc    edi,ebp
  4199c9:	lods   al,BYTE PTR ds:[esi]
  4199ca:	add    BYTE PTR [eax],al
  4199cc:	add    BYTE PTR [ecx+ebx*8],bl
  4199cf:	inc    edx
  4199d0:	cmc    
  4199d1:	outs   dx,BYTE PTR ds:[esi]
  4199d2:	cmp    edi,esp
  4199d4:	xor    al,0xf0
  4199d6:	push   es
  4199d7:	add    dl,bl
  4199d9:	ret    0x86c4
  4199dc:	add    BYTE PTR [edi+0x1a],dl
  4199df:	cmp    dl,al
  4199e1:	fld    QWORD PTR [ecx+0x5da00d2]
  4199e7:	out    0x3,eax
  4199e9:	cdq    
  4199ea:	xlat   BYTE PTR ds:[ebx]
  4199eb:	inc    ecx
  4199ec:	cmp    ebp,DWORD PTR [edi+edx*2]
  4199ef:	or     al,0x83
  4199f1:	mov    al,0xf6
  4199f3:	(bad)  
  4199f4:	dec    ebp
  4199f6:	mov    ebx,0x2f048b06
  4199fb:	xchg   DWORD PTR [ebx+ebx*4],ecx
  4199fe:	inc    esi
  4199ff:	jge    0x4199e2
  419a01:	fwait
  419a02:	add    al,BYTE PTR [ecx-0x50c946f]
  419a08:	call   edi
  419a0a:	push   cs
  419a0b:	ss inc ebp
  419a0d:	xchg   esi,eax
  419a0e:	jae    0x4199e6
  419a10:	jmp    0x41a550
  419a15:	test   eax,0xc78941d7
  419a1a:	push   cs
  419a1b:	cmp    dl,al
  419a1d:	jge    0x4199a0
  419a1f:	xchg   esi,eax
  419a20:	add    BYTE PTR [edx+0x5],bl
  419a23:	out    0x3,eax
  419a25:	test   eax,0xec3b41d7
  419a2a:	push   esi
  419a2b:	or     al,0x83
  419a2d:	ins    BYTE PTR es:[edi],dx
  419a2e:	idiv   bh
  419a30:	inc    DWORD PTR [eax]
  419a32:	add    BYTE PTR [eax],al
  419a34:	pop    ebp
  419a35:	mov    ebx,0x39848b06
  419a3a:	xchg   DWORD PTR [ebx+edi*1],ecx
  419a3d:	inc    esi
  419a3e:	jge    0x419a21
  419a40:	dec    ebx
  419a41:	add    al,BYTE PTR [ebp+edx*2-0x50c15]
  419a48:	push   edi
  419a49:	sbb    DWORD PTR [esi],esi
  419a4b:	inc    ebp
  419a4c:	inc    esi
  419a4d:	jae    0x419a25
  419a4f:	jmp    0x4199d3
  419a51:	ss iret 
  419a53:	inc    edx
  419a54:	sbb    DWORD PTR [ecx+0x11],0x3b
  419a58:	repz fstp QWORD PTR [edi-0x2fe3f7a2]
  419a5f:	shl    DWORD PTR [ecx-0x39444bc],1
  419a65:	pushf  
  419a66:	test   al,0xb
  419a68:	repz sbb eax,0xa4e8b60c
  419a6e:	mov    ch,0x33
  419a70:	imul   ebx,DWORD PTR [edx],0x3f7340f2
  419a76:	icebp  
  419a77:	or     al,0x6e
  419a79:	(bad)  
  419a7a:	adc    ch,bh
  419a7c:	mov    esp,0xfa13c641
  419a81:	loop   0x419a7a
  419a83:	jge    0x419a4f
  419a85:	xor    eax,0xdcc130d0
  419a8a:	mov    BYTE PTR [ebx+0x7],dl
  419a8d:	adc    eax,0x74c77c3f
  419a92:	add    BYTE PTR [ecx],dh
  419a94:	mov    eax,ds:0x5dd6dc
  419a99:	add    BYTE PTR [eax],al
  419a9b:	pop    ss
  419a9c:	sub    DWORD PTR [eax+0x11def34],eax
  419aa2:	or     eax,0x5688153d
  419aa7:	daa    
  419aa8:	xchg   esp,eax
  419aa9:	or     al,0xf
  419aab:	mov    al,0x9d
  419aad:	and    DWORD PTR [eax],edx
  419aaf:	in     al,dx
  419ab0:	test   eax,0xa954f027
  419ab5:	sbb    eax,DWORD PTR [ebx-0x19]
  419ab8:	out    0xc4,al
  419aba:	adc    eax,ebp
  419abc:	(bad)  
  419abd:	xchg   DWORD PTR [ebx+0x3b],ecx
  419ac0:	cmc    
  419ac1:	inc    eax
  419ac2:	or     eax,0xfd26386f
  419ac7:	sub    al,0x9d
  419ac9:	popf   
  419aca:	jmp    0x419abf
  419acc:	sub    BYTE PTR [esi+0x11dee92],al
  419ad2:	mov    DWORD PTR [esi+0x31801b06],edi
  419ad8:	or     eax,0x8408be70
  419add:	adc    DWORD PTR [esi+ebp*8],ecx
  419ae0:	xchg   DWORD PTR [eax+0x606f30e],edx
  419ae6:	out    0x81,eax
  419ae8:	sti    
  419ae9:	imul   eax,edx,0xffffffe4
  419aec:	jle    0x419a9a
  419aee:	neg    DWORD PTR [ebx]
  419af0:	inc    esi
  419af1:	ins    BYTE PTR es:[edi],dx
  419af2:	fwait
  419af3:	imul   ecx,eax,0x52
  419af6:	fbld   TBYTE PTR [ebx+edx*4-0x10ba78cb]
  419afd:	out    0x8f,al
  419aff:	add    BYTE PTR [eax],al
  419b01:	add    dl,bl
  419b03:	pushf  
  419b04:	out    0x1a,al
  419b06:	cmp    eax,0x784c71ef
  419b0b:	mov    eax,0x1eb28eda
  419b10:	sub    BYTE PTR [ebp+0x44640f9c],bl
  419b16:	and    BYTE PTR [ecx+0x1b84c971],bh
  419b1c:	cld    
  419b1d:	mov    ds,WORD PTR ds:0xba45c1f3
  419b23:	cs push ss
  419b25:	lock push 0x3
  419b28:	rol    ecx,0x18
  419b2b:	call   0xd7fb:0x56986eb
  419b32:	push   0xffffffc3
  419b34:	out    0xdd,eax
  419b36:	scas   al,BYTE PTR es:[edi]
  419b37:	loope  0x419b13
  419b39:	iret   
  419b3a:	mov    bl,0xf
  419b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b3d:	out    dx,eax
  419b3e:	std    
  419b3f:	sar    edx,0x97
  419b42:	sbb    DWORD PTR [ebx],0x0
  419b45:	out    dx,eax
  419b46:	sub    al,0x7b
  419b48:	lods   eax,DWORD PTR ds:[esi]
  419b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4a:	jnp    0x419b82
  419b4c:	adc    dh,BYTE PTR [edi]
  419b4e:	jmp    0xd87e:0x51bf003c
  419b55:	bound  esi,QWORD PTR [ecx]
  419b57:	mov    eax,DWORD PTR [edx+0x38f66329]
  419b5d:	mov    esp,0xda0d98f8
  419b62:	scas   eax,DWORD PTR es:[edi]
  419b63:	iret   
  419b64:	xchg   BYTE PTR [edi+0x3c000000],bl
  419b6a:	into   
  419b6b:	mov    esi,0xeea679f6
  419b70:	dec    BYTE PTR [ecx]
  419b72:	mov    BYTE PTR [ebx-0x7],bh
  419b75:	lock sti 
  419b77:	sub    BYTE PTR [ebx],0x13
  419b7a:	or     al,0xfd
  419b7c:	and    cl,BYTE PTR [edx-0x3294f2ee]
  419b82:	push   ds
  419b83:	std    
  419b84:	(bad)  
  419b85:	ins    DWORD PTR es:[edi],dx
  419b86:	retf   0x2923
  419b89:	retfw  0xc623
  419b8d:	sub    edx,0xffffff88
  419b90:	xchg   esi,eax
  419b91:	push   esi
  419b92:	push   cs
  419b93:	(bad)  
  419b94:	cmp    al,0x9b
  419b96:	jg     0x419b61
  419b98:	scas   al,BYTE PTR es:[edi]
  419b99:	xor    esi,0x55
  419b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b9d:	arpl   si,di
  419b9f:	cld    
  419ba0:	adc    al,0xfb
  419ba2:	or     esi,DWORD PTR [ebx-0x1f]
  419ba5:	enter  0xe3b9,0x8e
  419ba9:	fnstcw WORD PTR [edi-0x7606567e]
  419baf:	push   esp
  419bb0:	out    dx,eax
  419bb1:	lock push es
  419bb3:	cmp    DWORD PTR [ebx+edi*8],edx
  419bb6:	xchg   edi,eax
  419bb7:	rol    DWORD PTR [eax+0x66fd1c05],cl
  419bbd:	cmc    
  419bbe:	xor    eax,0xca7798e9
  419bc3:	adc    edx,DWORD PTR [edx]
  419bc5:	mov    dh,0x91
  419bc7:	test   eax,0x38a23262
  419bcc:	add    BYTE PTR [eax],al
  419bce:	add    BYTE PTR [eax],al
  419bd0:	shl    BYTE PTR [esi+eax*4+0xf],cl
  419bd4:	pushf  
  419bd5:	adc    al,0x80
  419bd7:	cli    
  419bd8:	pop    ss
  419bd9:	ja     0x419be4
  419bdb:	inc    ebx
  419bdc:	and    edx,edx
  419bde:	outs   dx,BYTE PTR ds:[esi]
  419bdf:	xchg   esi,eax
  419be0:	call   0x1cdd:0x2e75072c
  419be7:	and    eax,0xfffffffb
  419bea:	jae    0x419c08
  419bec:	mov    DWORD PTR [edi+0x5d],ebp
  419bef:	add    BYTE PTR [edi-0x72],ch
  419bf2:	jle    0x419bee
  419bf4:	loope  0x419c73
  419bf6:	push   cs
  419bf7:	and    eax,0x4
  419bfa:	je     0x419c08
  419bfc:	dec    ebx
  419bfd:	in     al,dx
  419bfe:	add    BYTE PTR [eax],0xda
  419c01:	or     DWORD PTR [ebx],ecx
  419c03:	test   DWORD PTR [eax+esi*8],esi
  419c06:	cli    
  419c07:	dec    DWORD PTR [ecx]
  419c09:	lock inc eax
  419c0b:	adc    al,0xe3
  419c0d:	inc    ebp
  419c0e:	adc    DWORD PTR [esp+esi*2-0x1f],edi
  419c12:	pop    edi
  419c13:	jmp    DWORD PTR [ebp-0x11]
  419c16:	ss pop esi
  419c18:	add    BYTE PTR ss:[edi+0x3d],bh
  419c1c:	inc    ebp
  419c1d:	out    dx,eax
  419c1e:	cli    
  419c1f:	cvttps2pi mm2,QWORD PTR [eax+eax*4]
  419c23:	cli    
  419c24:	cmp    esi,0xffffff83
  419c27:	dec    ebx
  419c28:	gs out dx,eax
  419c2a:	cli    
  419c2b:	and    DWORD PTR [eax+0x22],0xc
  419c2f:	test   BYTE PTR [eax],bl
  419c31:	lock cli 
  419c33:	inc    DWORD PTR [eax]
  419c35:	add    BYTE PTR [eax],al
  419c37:	fucomi st,st(4)
  419c39:	lahf   
  419c3a:	add    BYTE PTR [edx+0x9],cl
  419c3d:	or     eax,DWORD PTR [esp+ebx*4-0x66000512]
  419c44:	dec    ecx
  419c45:	cmp    cl,al
  419c47:	es ftst 
  419c4a:	sub    esi,ebx
  419c4c:	mov    ah,0x16
  419c4e:	std    
  419c4f:	clc    
  419c50:	pop    ebp
  419c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c52:	or     al,0x70
  419c54:	pop    ss
  419c55:	sbb    ch,bh
  419c57:	and    al,0x1c
  419c59:	dec    edi
  419c5a:	adc    DWORD PTR [eax-0x27],esi
  419c5d:	or     BYTE PTR [edx+eax*1-0x5f],dh
  419c61:	sbb    eax,0x82138720
  419c66:	cli    
  419c67:	push   ebx
  419c68:	pop    ds
  419c69:	add    DWORD PTR [eax],eax
  419c6b:	in     al,dx
  419c6c:	call   0x3fc2:0xfbf4fd08
  419c73:	sub    bh,bl
  419c75:	xchg   edi,eax
  419c76:	xlat   BYTE PTR ds:[ebx]
  419c77:	fimul  DWORD PTR [edi+edx*1]
  419c7a:	std    
  419c7b:	fcomp  QWORD PTR [ecx-0x49]
  419c7e:	imul   esp,esp,0xffffffa0
  419c81:	cmp    bh,dh
  419c83:	int3   
  419c84:	and    eax,0xa0e0b608
  419c89:	sbb    cl,BYTE PTR [edx]
  419c8b:	in     al,dx
  419c8c:	cdq    
  419c8d:	sub    esi,edi
  419c8f:	mov    ah,0x3d
  419c91:	test   dl,bh
  419c93:	clc    
  419c94:	adc    al,0x7d
  419c96:	loopne 0x419c3d
  419c98:	dec    ebp
  419c99:	sbb    BYTE PTR [ecx-0x67000000],al
  419c9f:	and    cl,BYTE PTR [eax]
  419ca1:	test   BYTE PTR [esp+ebx*2+0x6870fd18],bh
  419ca8:	push   es
  419ca9:	or     eax,0xfd175c6f
  419cae:	jl     0x419c4f
  419cb0:	sbb    al,BYTE PTR [ebx+0xd011df3]
  419cb6:	ja     0x419d18
  419cb8:	pop    ss
  419cb9:	std    
  419cba:	fs loope 0x419c80
  419cbd:	cmp    BYTE PTR [edx],dh
  419cbf:	adc    dl,BYTE PTR [edi-0x19]
  419cc2:	pushf  
  419cc3:	pushf  
  419cc4:	pop    ss
  419cc5:	std    
  419cc6:	or     BYTE PTR [edi],al
  419cc8:	lds    esp,FWORD PTR [edi+0x197387f7]
  419cce:	ds or  al,0xe6
  419cd1:	push   ecx
  419cd2:	loop   0x419c5b
  419cd4:	push   ecx
  419cd5:	or     eax,0x1d69efa7
  419cda:	cli    
  419cdb:	xchg   edx,eax
  419cdc:	aam    0x84
  419cde:	sbb    ebx,edi
  419ce0:	mov    edx,0xdc1173f2
  419ce5:	(bad)  
  419ce6:	clc    
  419ce7:	test   DWORD PTR [ecx],esp
  419ce9:	jle    0x419cde
  419ceb:	push   es
  419cec:	out    0x8,eax
  419cee:	jo     0x419c70
  419cf0:	adc    eax,0xa6c7f618
  419cf5:	fsubr  QWORD PTR [ebp+0x732a348a]
  419cfb:	or     al,0xfe
  419cfd:	pop    ss
  419cfe:	je     0x419cc1
  419d00:	fcmovu st,st(4)
  419d02:	add    BYTE PTR [eax],al
  419d04:	add    BYTE PTR [ebp-0x3171a405],dl
  419d0a:	or     esp,esi
  419d0c:	(bad)  [esi]
  419d0e:	fwait
  419d0f:	in     eax,dx
  419d10:	and    BYTE PTR [ecx],0xd
  419d13:	(bad)  
  419d14:	pop    ss
  419d15:	out    0x54,al
  419d17:	jmp    0x300:0xbcd3458a
  419d1e:	add    ebp,esi
  419d20:	cmp    BYTE PTR [edi],0xd
  419d23:	mov    dh,0x17
  419d25:	xor    cl,BYTE PTR [esp]
  419d28:	lock lds edi,FWORD PTR [ecx+0x1da697fa]
  419d2f:	sub    eax,0x600b7e16
  419d34:	shl    eax,0xcf
  419d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d38:	pop    es
  419d39:	js     0x419d02
  419d3b:	test   BYTE PTR [edi],dl
  419d3d:	iretw  
  419d3f:	sbb    al,0xa8
  419d41:	out    dx,eax
  419d42:	xchg   DWORD PTR [eax],eax
  419d44:	leave  
  419d45:	dec    BYTE PTR [ecx]
  419d47:	std    
  419d48:	fidivr WORD PTR [esi+0x34bf8905]
  419d4e:	adc    DWORD PTR [ecx+edi*8],eax
  419d51:	cmp    al,0xfa
  419d53:	add    DWORD PTR [ebx],0xffffffdd
  419d56:	or     ebp,edi
  419d58:	stos   BYTE PTR es:[edi],al
  419d59:	add    eax,0x3a0013c8
  419d5e:	idiv   DWORD PTR [ebx+0x1f]
  419d61:	into   
  419d62:	jmp    0xd543:0x83fc36fd
  419d69:	add    BYTE PTR [eax],al
  419d6b:	add    BYTE PTR [ecx],ch
  419d6d:	dec    esp
  419d6e:	or     eax,0xfd08fe74
  419d73:	push   ds
  419d74:	sbb    BYTE PTR [ecx+0x1c71e66b],ch
  419d7a:	sti    
  419d7b:	push   cs
  419d7c:	add    al,0xfc
  419d7e:	mov    ch,0xea
  419d80:	jns    0x419d33
  419d82:	xor    esi,edi
  419d84:	fdiv   st(2),st
  419d86:	(bad)  
  419d87:	in     eax,0x73
  419d89:	psubq  mm5,mm6
  419d8c:	in     eax,0xc7
  419d8e:	cld    
  419d8f:	sub    al,0xc3
  419d91:	ror    DWORD PTR [edx-0xb],1
  419d94:	fs sub al,0xe7
  419d97:	ret    
  419d98:	fisttp DWORD PTR [ebx]
  419d9a:	std    
  419d9b:	pusha  
  419d9c:	mov    bl,0xf6
  419d9e:	cmp    BYTE PTR [eax-0x43228213],ch
  419da4:	add    eax,0x4b17390c
  419da9:	sti    
  419daa:	sub    BYTE PTR [ebp-0x15],0xb
  419dae:	std    
  419daf:	div    BYTE PTR [esi]
  419db1:	or     BYTE PTR [ecx+0x414a337],cl
  419db7:	stc    
  419db8:	out    dx,eax
  419db9:	sti    
  419dba:	and    DWORD PTR [edi+0xfd0c0b],0x19
  419dc1:	repnz inc eax
  419dc3:	adc    al,0x33
  419dc5:	aas    
  419dc6:	adc    DWORD PTR [esp+edi*2-0x25],edi
  419dca:	mov    bh,0xfd
  419dcc:	(bad)  
  419dce:	test   BYTE PTR [ebp+0x0],al
  419dd1:	add    BYTE PTR [eax],al
  419dd3:	inc    esi
  419dd4:	sub    eax,0x9ecf0fbe
  419dd9:	clc    
  419dda:	call   FWORD PTR [ebp+0x4d6c5b2c]
  419de0:	test   DWORD PTR [edx+0xaf0adfd],ecx
  419de6:	mov    dh,0x9
  419de8:	jge    0x419e40
  419dea:	xor    al,0xd4
  419dec:	or     DWORD PTR ds:0x94872d10,ecx
  419df2:	std    
  419df3:	int    0xf0
  419df5:	notrack call DWORD PTR [edi+0x1a]
  419df9:	ss dec ebp
  419dfb:	div    BYTE PTR [ecx-0x25]
  419dfe:	jmp    0x3c8d57
  419e03:	arpl   WORD PTR [edi+0x11],ax
  419e06:	cmp    ecx,DWORD PTR [ebx]
  419e08:	add    DWORD PTR [ecx-0x50c2085],ecx
  419e0e:	cmp    edi,DWORD PTR [ecx+eiz*2+0xc]
  419e12:	xor    DWORD PTR [edx],0xfffffff2
  419e15:	cli    
  419e16:	dec    ebp
  419e18:	mov    ebx,0x36f48afe
  419e1d:	repz add al,0xaa
  419e20:	adc    eax,0xf238840c
  419e25:	cli    
  419e26:	dec    ecx
  419e28:	repz inc eax
  419e2a:	adc    al,0xa3
  419e2c:	inc    eax
  419e2d:	adc    DWORD PTR [esp+edi*2-0x23],edi
  419e31:	push   ebx
  419e32:	std    
  419e33:	dec    ebp
  419e34:	repz or dh,BYTE PTR [esi-0x2b000000]
  419e3b:	push   es
  419e3c:	or     esi,DWORD PTR [esi-0x41031f0d]
  419e42:	push   ebx
  419e43:	daa    
  419e44:	or     BYTE PTR [edi+0xfb0376],bh
  419e4a:	dec    eax
  419e4b:	sbb    BYTE PTR [esi+esi*4],al
  419e4e:	lods   al,BYTE PTR ds:[esi]
  419e4f:	push   ds
  419e50:	add    al,0xb6
  419e52:	mov    esp,0xfbe0421d
  419e57:	adc    al,0x42
  419e59:	add    DWORD PTR [ebx],edi
  419e5b:	lahf   
  419e5c:	rcl    BYTE PTR [ebx-0x41],cl
  419e5f:	ret    
  419e60:	sub    BYTE PTR [ecx+0xd12b817],dl
  419e66:	pop    ebp
  419e67:	push   eax
  419e68:	add    BYTE PTR ds:0xbefd7065,cl
  419e6e:	adc    ah,BYTE PTR [edi]
  419e70:	or     dl,cl
  419e72:	jp     0x419ede
  419e74:	or     eax,0xc3243a01
  419e79:	adc    ebp,esp
  419e7b:	fwait
  419e7c:	aam    0x0
  419e7e:	repz pop ds
  419e80:	cmp    al,0x52
  419e83:	jp     0x419e8f
  419e85:	lds    ebp,FWORD PTR [esi]
  419e87:	ds (bad) 
  419e89:	push   ebx
  419e8b:	sbb    eax,0x7b704d28
  419e90:	loope  0x419e91
  419e92:	fldenv [edi-0x78]
  419e95:	inc    ebx
  419e96:	pmaxub mm6,QWORD PTR [ebx+0x2fe46fc]
  419e9d:	mov    dh,0x0
  419e9f:	add    BYTE PTR [eax],al
  419ea1:	in     al,dx
  419ea2:	xor    BYTE PTR [esi+0x716ffc1b],cl
  419ea8:	nop
  419ea9:	inc    esi
  419eaa:	fiadd  WORD PTR [ebx]
  419eac:	std    
  419ead:	es es add ch,dl
  419eb1:	cmp    eax,0x780f8e51
  419eb6:	gs adc al,0x73
  419eb9:	test   DWORD PTR [esi],0x1ef48ea6
  419ebf:	inc    edx
  419ec0:	and    esi,DWORD PTR [esi+0x8]
  419ec3:	ins    BYTE PTR es:[edi],dx
  419ec4:	inc    ebx
  419ec5:	out    0xfb,eax
  419ec7:	retf   
  419ec8:	cmc    
  419ec9:	push   0x70048608
  419ece:	mov    bl,0xf1
  419ed0:	add    esi,ebx
  419ed2:	idiv   DWORD PTR [esp+edi*4]
  419ed5:	dec    ebp
  419ed6:	stc    
  419ed7:	xor    al,0xc4
  419ed9:	repnz inc ebp
  419edb:	inc    edi
  419edc:	or     ebp,edx
  419ede:	inc    ebp
  419edf:	jmp    0xfe02:0xae50e61b
  419ee6:	push   eax
  419ee7:	sahf   
  419ee8:	add    DWORD PTR [edi+eiz*1-0x11],esp
  419eec:	or     BYTE PTR [edi+eax*4-0x5],bl
  419ef0:	fcmovnb st,st(0)
  419ef2:	xchg   edx,eax
  419ef3:	mov    al,BYTE PTR [eax+0x4e6e688]
  419ef9:	jo     0x419f60
  419efb:	jmp    0xe7fc:0x54f7f303
  419f02:	push   eax
  419f03:	addr16 jae 0x419f06
  419f06:	add    BYTE PTR [eax],al
  419f08:	dec    eax
  419f09:	(bad)  
  419f0a:	out    0x0,al
  419f0c:	jmp    0x419f29
  419f0e:	popf   
  419f0f:	mov    BYTE PTR [eax-0xd],al
  419f12:	nop
  419f13:	add    esi,edx
  419f15:	xchg   ecx,eax
  419f16:	rcl    BYTE PTR [eax+eax*2],cl
  419f19:	out    dx,eax
  419f1a:	xchg   esp,eax
  419f1b:	adc    al,0x40
  419f1d:	mul    ebp
  419f1f:	cdq    
  419f20:	call   0xcd3df32c
  419f25:	push   cs
  419f26:	(bad)  
  419f27:	adc    ebp,DWORD PTR [esi+0x7003a781]
  419f2d:	push   cs
  419f2e:	icebp  
  419f2f:	add    esi,ebx
  419f31:	jnp    0x419f6f
  419f33:	in     al,0x8b
  419f35:	(bad)  
  419f37:	popa   
  419f38:	mov    dl,0xe3
  419f3a:	mov    BYTE PTR [ebx+ecx*4],dl
  419f3d:	enter  0x394e,0xe0
  419f41:	xchg   ebx,eax
  419f42:	sbb    esi,DWORD PTR [edx-0x4c]
  419f45:	or     DWORD PTR [ebx-0x7f],esi
  419f48:	test   eax,0x1f9730a
  419f4d:	xchg   esp,eax
  419f4e:	or     eax,DWORD PTR [esi-0x4d180086]
  419f54:	(bad)  
  419f56:	std    
  419f57:	ins    BYTE PTR es:[edi],dx
  419f58:	mov    bh,0xf9
  419f5a:	and    BYTE PTR [edx+0x6afd0745],0xa8
  419f61:	add    eax,0x750c481
  419f66:	mov    ch,bh
  419f68:	cmp    eax,0x4e03c1
  419f6d:	add    BYTE PTR [eax],al
  419f6f:	stc    
  419f70:	stc    
  419f71:	sub    DWORD PTR [esi],0xd3fd09d7
  419f77:	call   0xf1254c9b
  419f7c:	push   es
  419f7d:	push   0x42
  419f7f:	out    0x5e,al
  419f81:	or     ch,cl
  419f83:	lock jge 0x419fd1
  419f86:	(bad)
  419f89:	push   ebp
  419f8a:	call   0x953ef546
  419f8f:	rcl    BYTE PTR [ecx+0x7a01eb44],1
  419f95:	sbb    al,0x70
  419f97:	stos   BYTE PTR es:[edi],al
  419f98:	adc    bh,ch
  419f9a:	jl     0x419f74
  419f9c:	(bad)
  419fa0:	jns    0x419fb2
  419fa2:	cmp    eax,esi
  419fa4:	mov    esp,0x871aee04
  419fa9:	(bad)  
  419faa:	xor    al,0xb7
  419fac:	push   es
  419fad:	(bad)  
  419fae:	push   esp
  419faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb0:	pop    es
  419fb1:	lds    eax,FWORD PTR [eax]
  419fb3:	mov    DWORD PTR [edx],edi
  419fb5:	call   0xfb5b4a26
  419fba:	mov    eax,DWORD PTR [edx-0x75]
  419fbd:	cli    
  419fbe:	sbb    eax,0x75fb1956
  419fc3:	neg    DWORD PTR [ecx]
  419fc5:	jbe    0x41a037
  419fc7:	push   ebp
  419fc8:	lahf   
  419fc9:	or     bh,bh
  419fcb:	outs   dx,DWORD PTR ds:[esi]
  419fcc:	rcl    BYTE PTR [edx],cl
  419fce:	inc    eax
  419fcf:	pop    edx
  419fd0:	mov    bl,0x55
  419fd2:	test   DWORD PTR [eax],eax
  419fd4:	add    BYTE PTR [eax],al
  419fd6:	mov    bl,BYTE PTR [edi-0x650b76f9]
  419fdc:	mov    DWORD PTR [edi-0x3b],eax
  419fdf:	and    cl,BYTE PTR [ecx+0xa]
  419fe2:	pop    edx
  419fe3:	or     bh,BYTE PTR [edi-0x42]
  419fe6:	jbe    0x419ff2
  419fe8:	add    BYTE PTR [eax],al
  419fea:	dec    edx
  419feb:	lahf   
  419fec:	add    eax,0x86065f8b
  419ff1:	xchg   BYTE PTR [esi-0x5efffff7],dl
  419ff7:	push   eax
  419ff8:	in     eax,0x34
  419ffa:	and    BYTE PTR [edx],cl
  419ffc:	add    BYTE PTR [ebx+0x503cee5f],cl
  41a002:	aad    0x9e
  41a004:	sbb    al,0xf
  41a006:	pushf  
  41a007:	adc    bl,bh
  41a009:	jne    0x41a001
  41a00b:	or     BYTE PTR [esi+0x3cb76a90],dh
  41a011:	add    ch,dh
  41a013:	sahf   
  41a014:	adc    al,0x3
  41a016:	std    
  41a017:	mov    edi,0x84ba75fb
  41a01c:	(bad)  
  41a01d:	dec    DWORD PTR [edi+0x6]
  41a020:	cld    
  41a021:	jne    0x419ff5
  41a023:	and    ebp,edi
  41a025:	(bad)  
  41a027:	pop    ss
  41a028:	add    eax,0x9fc8cc5
  41a02e:	repz out dx,eax
  41a030:	add    BYTE PTR [eax-0x2f12bf7],bh
  41a036:	mov    ch,BYTE PTR [ecx+0x1b]
  41a039:	std    
  41a03a:	add    BYTE PTR [eax],al
  41a03c:	add    BYTE PTR [eax+edi*2+0x203323c5],dl
  41a043:	psrlq  mm3,0xe4
  41a047:	push   esi
  41a048:	add    eax,0xcf0227c
  41a04d:	cmp    eax,0xb35b747f
  41a052:	out    dx,eax
  41a053:	(bad)  
  41a055:	or     esi,ecx
  41a057:	aaa    
  41a058:	push   esi
  41a059:	pop    esp
  41a05a:	add    dh,cl
  41a05c:	mov    BYTE PTR [eax],ch
  41a05e:	test   BYTE PTR [ebp-0x6fdb3f5],dl
  41a064:	out    0x2f,eax
  41a066:	xchg   esp,eax
  41a067:	push   cs
  41a068:	std    
  41a069:	jbe    0x41a09a
  41a06b:	inc    DWORD PTR [edx+0xf62f]
  41a071:	imul   edi,eax,0xc
  41a074:	std    
  41a075:	and    al,0x46
  41a077:	lods   eax,DWORD PTR ds:[esi]
  41a078:	call   0x43bcec99
  41a07d:	iret   
  41a07e:	hlt    
  41a07f:	push   esi
  41a080:	push   ebp
  41a081:	repnz scas eax,DWORD PTR es:[edi]
  41a083:	mov    al,0xfc
  41a085:	jle    0x41a096
  41a087:	push   DWORD PTR [ebp+0x1b952cf4]
  41a08d:	in     al,0x5d
  41a08f:	test   BYTE PTR [eax-0x2ff51b2],dl
  41a095:	pop    esi
  41a096:	test   BYTE PTR [ebx],0xc5
  41a099:	inc    ebp
  41a09a:	or     eax,0x1df00f95
  41a09f:	(bad)  
  41a0a1:	add    BYTE PTR [eax],al
  41a0a3:	add    bh,bh
  41a0a5:	push   0xe63efd3b
  41a0aa:	sbb    BYTE PTR [edi-0x64],bh
  41a0ad:	pop    es
  41a0ae:	out    0x10,al
  41a0b0:	jo     0x41a079
  41a0b2:	in     eax,dx
  41a0b3:	xchg   BYTE PTR [esi+ecx*1],ch
  41a0b6:	out    0x3,eax
  41a0b8:	imul   esp,DWORD PTR [eax],0xffffffcb
  41a0bb:	adc    BYTE PTR [esi+0x6c05ad88],bl
  41a0c1:	lds    ebx,FWORD PTR [edx+0x3]
  41a0c4:	repz push es
  41a0c6:	shl    BYTE PTR [ecx+0x7ce706ed],0x30
  41a0cd:	sub    esp,DWORD PTR [edi]
  41a0cf:	mov    ah,0x77
  41a0d1:	jp     0x41a09a
  41a0d3:	add    BYTE PTR [ebp+0x896960c],ah
  41a0d9:	adc    al,0x55
  41a0db:	jae    0x41a060
  41a0dd:	bound  esp,QWORD PTR [edi]
  41a0df:	add    al,0x56
  41a0e1:	jp     0x41a0c2
  41a0e3:	add    al,0x26
  41a0e5:	pop    ebp
  41a0e6:	jbe    0x41a07e
  41a0e8:	hlt    
  41a0e9:	(bad)  
  41a0ea:	mov    eax,ds:0x6612c010
  41a0ef:	xchg   esi,eax
  41a0f0:	in     al,dx
  41a0f1:	out    dx,al
  41a0f2:	and    DWORD PTR [ecx],esi
  41a0f4:	cs add al,0x6c
  41a0f7:	inc    ebx
  41a0f8:	test   BYTE PTR [ecx+0x41cfb11],0x70
  41a0ff:	mov    cl,0x84
  41a101:	mov    esi,0x40e0fda
  41a106:	inc    eax
  41a107:	xor    al,BYTE PTR [eax]
  41a109:	add    BYTE PTR [eax],al
  41a10b:	sbb    DWORD PTR [esi+ebp*1],eax
  41a10e:	jl     0x41a0c0
  41a110:	sub    dh,dh
  41a112:	pop    ecx
  41a113:	sahf   
  41a114:	add    eax,0x79efb3a7
  41a119:	mov    DWORD PTR [eax],0x960e0b9d
  41a11f:	clc    
  41a120:	adc    edi,DWORD PTR ds:0xa7618383
  41a126:	add    ecx,esi
  41a128:	jns    0x41a12a
  41a12a:	shr    edi,1
  41a12c:	leave  
  41a12d:	push   ebp
  41a12e:	out    dx,al
  41a12f:	adc    ax,WORD PTR [ecx]
  41a132:	mov    ecx,0x720c77e4
  41a137:	call   0x923143d
  41a13c:	clc    
  41a13d:	(bad)  
  41a13f:	in     al,dx
  41a140:	xchg   DWORD PTR [edi+0x7f76bf6],edi
  41a146:	jmp    0xec06273b
  41a14b:	pop    es
  41a14c:	test   DWORD PTR [eax+0x71],esi
  41a14f:	cmp    bh,0xfc
  41a152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a153:	(bad)  
  41a154:	out    0x7,eax
  41a156:	jmp    0xcd842f4b
  41a15b:	xor    BYTE PTR [ebx-0x3],dl
  41a15e:	adc    al,0x57
  41a160:	adc    dh,BYTE PTR [esi+0x1c77e5ee]
  41a166:	out    dx,al
  41a167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a168:	xchg   esi,eax
  41a169:	(bad)  
  41a16a:	adc    al,0x2f
  41a16c:	add    edi,esi
  41a16e:	hlt    
  41a16f:	add    BYTE PTR [eax],al
  41a171:	add    BYTE PTR [eax+0x6],cl
  41a174:	aad    0xbf
  41a176:	in     eax,0x77
  41a178:	adc    BYTE PTR [edx-0x18],dh
  41a17b:	add    DWORD PTR [ebx-0x1b],esi
  41a17e:	cmc    
  41a17f:	ja     0x41a189
  41a181:	inc    ecx
  41a182:	shl    esp,0xfc
  41a185:	inc    esi
  41a186:	push   0xffffffc6
  41a188:	or     al,0x64
  41a18a:	mov    eax,ds:0xb8e9000e
  41a18f:	and    al,0xfc
  41a191:	cs in  al,dx
  41a193:	jmp    0x41a1dd
  41a195:	adc    esp,esp
  41a197:	add    DWORD PTR [ecx-0x49ec2b5c],ecx
  41a19d:	mov    esi,0xe5046ef
  41a1a2:	jp     0x41a1c6
  41a1a4:	or     eax,0xfb0a1400
  41a1a9:	jne    0x41a159
  41a1ab:	add    DWORD PTR [ebx+0x3cb82a80],esi
  41a1b1:	add    ch,cl
  41a1b3:	lahf   
  41a1b4:	adc    al,0x3
  41a1b6:	test   DWORD PTR [ebx+edi*8-0x2ffa558b],edi
  41a1bd:	inc    DWORD PTR [edi+0x7]
  41a1c0:	xchg   ebx,ecx
  41a1c2:	lods   eax,DWORD PTR ds:[esi]
  41a1c3:	lahf   
  41a1c4:	add    al,0xe8
  41a1c6:	cmp    eax,0x17fffb31
  41a1cb:	inc    esi
  41a1cc:	or     eax,DWORD PTR [ebp-0x2fcd3]
  41a1d2:	add    dh,ah
  41a1d4:	clc    
  41a1d5:	inc    DWORD PTR [eax]
  41a1d7:	add    BYTE PTR [eax],al
  41a1d9:	dec    ebp
  41a1da:	and    esp,ebp
  41a1dc:	dec    BYTE PTR [ebp+0x4e468711]
  41a1e2:	dec    ebx
  41a1e3:	fld    QWORD PTR [edx]
  41a1e5:	sar    ecx,1
  41a1e7:	std    
  41a1e8:	mov    BYTE PTR [edi],bl
  41a1ea:	inc    DWORD PTR [edi-0x7af5a4b4]
  41a1f0:	dec    ebp
  41a1f1:	outs   dx,BYTE PTR ds:[esi]
  41a1f2:	jge    0x41a242
  41a1f4:	adc    BYTE PTR [ecx],dh
  41a1f6:	(bad)  
  41a1f7:	lock mov DWORD PTR [edi+0x16],esi
  41a1fb:	mov    DWORD PTR [edx+eiz*4],eax
  41a1fe:	jl     0x41a208
  41a200:	mov    DWORD PTR [edi+0xe],ecx
  41a203:	xchg   DWORD PTR [esi+0x596],ecx
  41a209:	mov    ds:0xc18be4c6,eax
  41a20e:	fmul   QWORD PTR [edx+0x68]
  41a211:	cdq    
  41a212:	xchg   esi,eax
  41a213:	clc    
  41a214:	bound  edx,QWORD PTR [ebx-0x3af68e03]
  41a21a:	into   
  41a21b:	sbb    al,0x2
  41a21d:	fiadd  DWORD PTR ds:0xf3f3eb00
  41a223:	and    DWORD PTR [ebx+0x13],0xf4379f0
  41a22a:	mov    al,0x7b
  41a22c:	inc    ebx
  41a22d:	pop    ss
  41a22e:	add    DWORD PTR [ebp+0x641f423],edx
  41a234:	std    
  41a235:	inc    esi
  41a236:	sar    ch,1
  41a238:	mov    ch,0x63
  41a23a:	jg     0x41a1e9
  41a23c:	aas    
  41a23d:	add    BYTE PTR [eax],al
  41a23f:	add    bl,dh
  41a241:	loopne 0x41a1d7
  41a243:	sbb    esi,eax
  41a245:	ror    BYTE PTR [edx],0x73
  41a248:	sti    
  41a249:	fs aaa 
  41a24b:	push   esi
  41a24c:	xchg   esp,eax
  41a24d:	inc    edx
  41a24e:	hlt    
  41a24f:	cld    
  41a250:	push   es
  41a251:	hlt    
  41a252:	or     esi,DWORD PTR [ebx-0x5]
  41a255:	(bad)  
  41a256:	and    eax,0x84b07cdb
  41a25b:	sar    bh,0xf4
  41a25e:	int    0x1d
  41a260:	outs   dx,DWORD PTR ds:[esi]
  41a261:	mov    al,ds:0xb86e0d0a
  41a266:	add    al,BYTE PTR [eax]
  41a268:	repz fs mov ebp,0x88796ae7
  41a26f:	add    bl,dh
  41a271:	out    dx,eax
  41a272:	sti    
  41a273:	mov    ch,0xb4
  41a275:	out    dx,al
  41a276:	sti    
  41a277:	mov    ch,0xa4
  41a279:	in     eax,dx
  41a27a:	inc    ecx
  41a27b:	fucomip st,st(3)
  41a27d:	hlt    
  41a27e:	add    DWORD PTR ss:[edx],ebp
  41a281:	outs   dx,DWORD PTR ds:[esi]
  41a282:	retf   
  41a283:	push   ebx
  41a284:	lahf   
  41a285:	test   BYTE PTR [esi+0x56],dh
  41a288:	out    dx,eax
  41a289:	fs mov ebp,0x10ca6813
  41a28f:	xchg   edi,ecx
  41a291:	fidiv  WORD PTR [edi+0x56]
  41a294:	mul    DWORD PTR [ebp+ecx*4-0x15]
  41a298:	push   0xffffffb3
  41a29a:	icebp  
  41a29b:	add    ebp,DWORD PTR [eax+0x6]
  41a29e:	mov    ch,0xf3
  41a2a0:	sbb    edx,DWORD PTR [edx+0x13]
  41a2a3:	jns    0x41a2a5
  41a2a5:	add    BYTE PTR [eax],al
  41a2a7:	cmp    eax,0xe48f6213
  41a2ac:	mov    cs,edx
  41a2ae:	jns    0x41a2c8
  41a2b0:	and    DWORD PTR [ebx],eax
  41a2b2:	or     eax,0x78f07bce
  41a2b7:	xor    BYTE PTR [ebx],dl
  41a2b9:	pusha  
  41a2ba:	xchg   BYTE PTR [edi+0x7],bl
  41a2bd:	out    0x3,eax
  41a2bf:	add    al,bh
  41a2c1:	iret   
  41a2c2:	test   esi,esi
  41a2c4:	push   es
  41a2c5:	out    0x78,eax
  41a2c7:	xor    BYTE PTR [ebx],ch
  41a2c9:	daa    
  41a2ca:	mov    ah,0x9f
  41a2cc:	jp     0x41a2d5
  41a2ce:	std    
  41a2cf:	pop    esi
  41a2d0:	or     dh,al
  41a2d2:	xchg   esi,eax
  41a2d3:	call   0x63b517e7
  41a2d8:	bound  esp,QWORD PTR [edi]
  41a2da:	add    al,0x7e
  41a2dc:	jp     0x41a2ad
  41a2de:	add    BYTE PTR [esi-0x36959a7],bl
  41a2e4:	mov    esi,DWORD PTR [ecx-0x69ed1ff4]
  41a2ea:	xchg   esi,eax
  41a2eb:	hlt    
  41a2ec:	out    dx,al
  41a2ed:	cmp    DWORD PTR [edi],ebp
  41a2ef:	push   esi
  41a2f0:	add    BYTE PTR [ebx+eax*2-0x2],ch
  41a2f4:	mov    DWORD PTR [ecx],ebx
  41a2f6:	add    eax,0x128006f3
  41a2fb:	dec    ebx
  41a2fc:	add    BYTE PTR [esi-0x38],ch
  41a2ff:	cdq    
  41a300:	push   cs
  41a301:	fsub   st(3),st
  41a303:	in     eax,0x50
  41a305:	mov    bl,0x96
  41a307:	push   esi
  41a308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30a:	stos   DWORD PTR es:[edi],eax
  41a30b:	add    BYTE PTR [eax],al
  41a30d:	add    BYTE PTR [eax+0x6b856210],ah
  41a313:	pop    es
  41a314:	out    0x3,eax
  41a316:	repnz dec eax
  41a318:	iret   
  41a319:	retf   0xeb1
  41a31c:	add    BYTE PTR [ebp-0x26bd7275],bh
  41a322:	jns    0x41a2ac
  41a324:	jg     0x41a30f
  41a326:	lock push es
  41a328:	mov    DWORD PTR [eax+ebp*8+0x5b994588],esp
  41a32f:	inc    esp
  41a330:	or     al,0x60
  41a332:	outs   dx,BYTE PTR ds:[esi]
  41a333:	mov    ds:0x8df0e8ff,al
  41a338:	inc    edx
  41a339:	std    
  41a33a:	loopne 0x41a31a
  41a33c:	sbb    BYTE PTR [ecx],ch
  41a33e:	aad    0x17
  41a340:	cld    
  41a341:	out    dx,al
  41a342:	call   0xb79f00ce
  41a347:	call   0x732894f
  41a34c:	xor    DWORD PTR [ecx-0x18041749],ebp
  41a352:	lock push es
  41a354:	or     eax,0xe00b07f
  41a359:	ja     0x41a39b
  41a35b:	add    eax,0xc0532789
  41a360:	(bad)  
  41a362:	jne    0x41a329
  41a364:	add    BYTE PTR [eax-0x1ddfbc12],ch
  41a36a:	scas   eax,DWORD PTR es:[edi]
  41a36b:	jae    0x41a373
  41a36d:	push   0xffffff92
  41a36f:	sar    edi,cl
  41a371:	add    DWORD PTR [eax],0x125f0000
  41a377:	mov    dh,0x31
  41a379:	hlt    
  41a37a:	adc    DWORD PTR [esi-0x21400cd7],esi
  41a380:	loope  0x41a3bf
  41a382:	mov    DWORD PTR [esi-0x7a71fce4],0x6f77d
  41a38c:	jo     0x41a3c0
  41a38e:	iret   
  41a38f:	mov    ch,BYTE PTR [eax+eiz*8-0x108a7a79]
  41a396:	push   es
  41a397:	add    BYTE PTR [eax],al
  41a399:	add    esp,0x7cd830c
  41a39f:	test   DWORD PTR [ebp-0x1e],edi
  41a3a2:	add    DWORD PTR [ecx-0x20],0x7f1e1289
  41a3a9:	loope  0x41a42a
  41a3ab:	mov    eax,esi
  41a3ad:	add    al,0x12
  41a3af:	sti    
  41a3b0:	mov    DWORD PTR [edi+0x511ce726],edx
  41a3b6:	cmp    edi,DWORD PTR [ebp+0x1111d8e1]
  41a3bc:	jo     0x41a3e0
  41a3be:	(bad)  
  41a3bf:	cld    
  41a3c0:	mov    BYTE PTR [edi+0x3fc08126],cl
  41a3c6:	or     DWORD PTR [edx-0x6],ebp
  41a3c9:	ret    
  41a3ca:	xchg   DWORD PTR ds:0x417d9a00,eax
  41a3d0:	loopne 0x41a41d
  41a3d2:	sub    al,BYTE PTR [edx]
  41a3d4:	push   eax
  41a3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d6:	cwde   
  41a3d7:	or     bh,bh
  41a3d9:	add    BYTE PTR [eax],al
  41a3db:	add    bh,cl
  41a3dd:	cs sti 
  41a3df:	adc    eax,0x3cf88a
  41a3e4:	adc    edi,eax
  41a3e6:	or     al,0x8b
  41a3e8:	xlat   BYTE PTR ds:[ebx]
  41a3e9:	out    0x85,al
  41a3eb:	inc    ebp
  41a3ec:	jle    0x41a46b
  41a3ee:	inc    ecx
  41a3ef:	and    al,ah
  41a3f1:	or     DWORD PTR [edi-0x3c],edi
  41a3f4:	push   esi
  41a3f5:	(bad)  
  41a3f6:	pop    ebp
  41a3f7:	sbb    esp,DWORD PTR [ebp-0x7b]
  41a3fa:	loop   0x41a3fa
  41a3fc:	(bad)  [eax+0x2]
  41a3ff:	inc    ecx
  41a400:	ret    
  41a401:	mov    esi,0xde3fff20
  41a406:	or     esi,DWORD PTR [esi-0x6f4cfe76]
  41a40c:	stos   BYTE PTR es:[edi],al
  41a40d:	scas   al,BYTE PTR es:[edi]
  41a40e:	cmp    al,0x0
  41a410:	sbb    DWORD PTR [edi+0x54f3571c],esi
  41a416:	nop
  41a417:	sbb    ebp,DWORD PTR [eax+0x29]
  41a41a:	or     dh,BYTE PTR [ebx-0x15]
  41a41d:	popf   
  41a41e:	or     DWORD PTR [ebx-0x1d],esi
  41a421:	cmp    al,0x90
  41a423:	or     edi,esp
  41a425:	mov    edx,0xbcfe7f8
  41a42a:	or     bh,ch
  41a42c:	jp     0x41a3d8
  41a42e:	in     al,dx
  41a42f:	sub    bl,0xee
  41a432:	stc    
  41a433:	add    DWORD PTR [edi+0x160000ef],0xfffffff7
  41a43a:	add    al,0xfd
  41a43c:	int3   
  41a43d:	hlt    
  41a43e:	jl     0x41a3c7
  41a440:	add    BYTE PTR [eax],al
  41a442:	add    bl,dh
  41a444:	out    dx,eax
  41a445:	add    BYTE PTR [ebx+0x3b027bb3],al
  41a44b:	aad    0xeb
  41a44d:	push   es
  41a44e:	std    
  41a44f:	es push ecx
  41a451:	jne    0x41a496
  41a453:	ret    
  41a454:	jbe    0x41a3d8
  41a456:	xchg   esp,eax
  41a457:	repz out dx,eax
  41a459:	add    BYTE PTR [ecx-0x1fbf2fd2],cl
  41a45f:	icebp  
  41a460:	pop    ds
  41a461:	pop    es
  41a462:	jae    0x41a40b
  41a464:	mov    esp,0xda7c0b91
  41a469:	rcl    BYTE PTR ds:0x437bf033,1
  41a46f:	adc    esi,ebp
  41a471:	dec    esi
  41a472:	dec    eax
  41a473:	repnz in al,dx
  41a475:	dec    esi
  41a476:	push   eax
  41a477:	icebp  
  41a478:	scas   al,BYTE PTR es:[edi]
  41a479:	and    BYTE PTR [eax],cl
  41a47b:	call   0x7b00a729
  41a480:	sub    ah,ah
  41a482:	mov    ebx,esi
  41a484:	jo     0x41a4c6
  41a486:	or     al,0xff
  41a488:	sbb    esi,edi
  41a48a:	cmp    DWORD PTR [ebx+0x78fd076c],0x6
  41a491:	lods   al,BYTE PTR ds:[esi]
  41a492:	xor    edi,DWORD PTR [edx+0x4b]
  41a495:	cmp    edi,DWORD PTR [ebx+0x75]
  41a498:	xchg   edx,eax
  41a499:	out    0x3,al
  41a49b:	repz mov esp,DWORD PTR [ebx+0x14]
  41a49f:	or     eax,0x2ccd45fd
  41a4a4:	or     eax,0xb563
  41a4a9:	add    BYTE PTR [edi],dl
  41a4ab:	std    
  41a4ac:	xor    eax,0x7f72e009
  41a4b1:	(bad)
  41a4b4:	scas   al,BYTE PTR es:[edi]
  41a4b5:	and    dh,ah
  41a4b7:	cld    
  41a4b8:	jno    0x41a471
  41a4ba:	mov    eax,0xd5146b8a
  41a4bf:	cld    
  41a4c0:	or     eax,0xed73b4cd
  41a4c5:	or     al,ah
  41a4c7:	jb     0x41a518
  41a4c9:	lds    edi,FWORD PTR [ecx+edx*4-0x74321055]
  41a4d0:	jecxz  0x41a4d5
  41a4d2:	repz (bad) 
  41a4d4:	sub    esi,DWORD PTR [edx+edi*2]
  41a4d7:	dec    edx
  41a4d8:	mov    ebx,0xe693757a
  41a4dd:	add    esi,ebx
  41a4df:	mov    DWORD PTR [ebx+0x13],esp
  41a4e2:	(bad)  
  41a4e3:	cld    
  41a4e4:	(bad)
  41a4e7:	jae    0x41a4ce
  41a4e9:	or     al,ah
  41a4eb:	jb     0x41a56c
  41a4ed:	les    esi,FWORD PTR [ecx+edi*1-0x59]
  41a4f1:	ret    
  41a4f2:	push   ebp
  41a4f3:	adc    BYTE PTR [esi+0x23906608],cl
  41a4f9:	loopne 0x41a566
  41a4fb:	push   edx
  41a4fc:	sti    
  41a4fd:	ret    
  41a4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4ff:	sti    
  41a500:	adc    esp,esp
  41a502:	dec    edi
  41a503:	jb     0x41a4e8
  41a505:	or     al,al
  41a507:	out    dx,al
  41a508:	(bad)  
  41a509:	mov    edi,0x75fffc1e
  41a50e:	add    BYTE PTR [eax],al
  41a510:	add    BYTE PTR [edi+0x72601047],dh
  41a516:	xchg   edi,edi
  41a518:	call   0xf184330d
  41a51d:	cdq    
  41a51e:	pop    esp
  41a51f:	je     0x41a581
  41a521:	xor    ch,BYTE PTR [ecx+ebp*8+0x1f]
  41a525:	pop    DWORD PTR [edi-0x8]
  41a528:	add    BYTE PTR [eax+ebx*1+0xd],al
  41a52c:	ins    BYTE PTR es:[edi],dx
  41a52d:	(bad)  
  41a52e:	in     al,0xfc
  41a530:	ss jmp 0x41a5aa
  41a533:	sbb    BYTE PTR [edx-0x63],ah
  41a536:	idiv   esp
  41a538:	pushf  
  41a539:	add    BYTE PTR [esi-0x10e08d3b],cl
  41a53f:	mov    bl,0x33
  41a541:	jmp    0x41a53c
  41a543:	sub    BYTE PTR [ecx],0xcb
  41a546:	xchg   DWORD PTR [ecx+ebp*8-0x63fef910],edi
  41a54d:	in     al,dx
  41a54e:	stc    
  41a54f:	inc    edx
  41a550:	fucomp st(3)
  41a552:	ja     0x41a578
  41a554:	xor    eax,0xfffffff9
  41a557:	jb     0x41a55e
  41a559:	sub    dl,dl
  41a55b:	cld    
  41a55c:	push   esp
  41a55d:	(bad)  
  41a55e:	mov    cs,eax
  41a560:	aas    
  41a561:	in     al,dx
  41a562:	ja     0x41a574
  41a564:	into   
  41a565:	bound  ecx,QWORD PTR [edi]
  41a567:	std    
  41a568:	cmp    al,0x87
  41a56a:	jecxz  0x41a557
  41a56c:	mov    ds:0xa982f9f4,eax
  41a571:	arpl   WORD PTR [ebp+0xc2e6],si
  41a577:	add    bl,dh
  41a579:	push   es
  41a57a:	add    BYTE PTR [eax-0x66],dh
  41a57d:	inc    DWORD PTR [esi-0x37c19cd4]
  41a583:	adc    al,0x9d
  41a585:	cli    
  41a586:	jb     0x41a579
  41a588:	leave  
  41a589:	push   edi
  41a58a:	hlt    
  41a58b:	add    BYTE PTR [ebp-0x6b],ch
  41a58e:	in     al,dx
  41a58f:	mov    edx,DWORD PTR [edi+edi*2+0x30e9e8c7]
  41a596:	sti    
  41a597:	call   DWORD PTR [edi+0x19107442]
  41a59d:	scas   al,BYTE PTR es:[edi]
  41a59e:	lock call DWORD PTR [edi-0x15]
  41a5a2:	xchg   DWORD PTR [ebp+0x16],eax
  41a5a5:	rol    BYTE PTR [ecx-0x8],1
  41a5a8:	ds and esp,edi
  41a5ab:	pop    ds
  41a5ac:	xor    DWORD PTR [eax+edi*2+0x1496c385],0x6e935c3b
  41a5b7:	adc    esp,ecx
  41a5b9:	scas   eax,DWORD PTR es:[edi]
  41a5ba:	add    al,0x76
  41a5bc:	(bad)  
  41a5be:	mov    esp,0x58b96340
  41a5c3:	cmp    edx,DWORD PTR [edx]
  41a5c5:	repnz mov esi,DWORD PTR [eax-0xb]
  41a5c9:	add    ebx,edi
  41a5cb:	cmp    ecx,DWORD PTR [edi-0x797df4fe]
  41a5d1:	sbb    al,0xfb
  41a5d3:	call   DWORD PTR [ecx-0x38]
  41a5d6:	and    BYTE PTR [eax+0x13],al
  41a5d9:	enter  0xff20,0x0
  41a5dd:	add    BYTE PTR [eax],al
  41a5df:	inc    edi
  41a5e0:	out    0x87,eax
  41a5e2:	xlat   BYTE PTR ds:[ebx]
  41a5e3:	inc    eax
  41a5e4:	add    edi,ebx
  41a5e6:	jne    0x41a586
  41a5e8:	jge    0x41a5b1
  41a5ea:	jmp    DWORD PTR [edi]
  41a5ec:	jmp    0x41a640
  41a5ee:	inc    edi
  41a5f0:	repnz sti 
  41a5f2:	jne    0x41a582
  41a5f4:	add    DWORD PTR [ecx+0x8],esi
  41a5f7:	mov    dl,0x9c
  41a5f9:	(bad)  
  41a5fa:	call   FWORD PTR [ebp-0x28f04079]
  41a600:	fwait
  41a601:	add    BYTE PTR [eax],al
  41a603:	dec    edx
  41a604:	fstp   QWORD PTR [ecx-0xc]
  41a607:	repz aam 0xa7
  41a60a:	sti    
  41a60b:	sar    BYTE PTR [ebp-0x7eb105e5],0x5
  41a612:	mov    DWORD PTR [ebp-0x1b388005],ebp
  41a618:	imul   edx,DWORD PTR [esi],0xffffffe3
  41a61b:	sub    al,0x69
  41a61d:	retf   0x975d
  41a620:	lock jle 0x41a609
  41a623:	push   ss
  41a624:	pop    ecx
  41a625:	push   es
  41a626:	cmp    DWORD PTR [esi+0x2e85f5e7],esi
  41a62c:	inc    ebx
  41a62d:	push   es
  41a62e:	std    
  41a62f:	shr    BYTE PTR [edi],0xc1
  41a632:	xchg   BYTE PTR [ebp+0xac7c99b],dh
  41a638:	xor    ebx,DWORD PTR [ebx]
  41a63a:	std    
  41a63b:	in     al,dx
  41a63c:	fs shl bh,0x2a
  41a640:	stos   DWORD PTR es:[edi],eax
  41a641:	in     al,dx
  41a642:	or     al,0x0
  41a644:	add    BYTE PTR [eax],al
  41a646:	outs   dx,BYTE PTR ds:[esi]
  41a647:	and    esp,DWORD PTR [eax]
  41a649:	std    
  41a64a:	aam    0xd4
  41a64c:	mov    ds:0x356cfc6b,al
  41a651:	out    0xc4,al
  41a653:	add    dh,dh
  41a655:	mov    ch,0xf0
  41a657:	je     0x41a692
  41a659:	xor    DWORD PTR [ecx+0x3105246c],esp
  41a65f:	sbb    eax,0xdc36891f
  41a664:	inc    eax
  41a665:	call   0x8421c5a
  41a66a:	xor    BYTE PTR [esp+esi*1+0xd],ch
  41a66e:	ja     0x41a6db
  41a670:	sbb    eax,0xbcc084fd
  41a675:	adc    edi,DWORD PTR [edx+esi*1-0x20]
  41a679:	imul   esi,ebx,0x781b8cb0
  41a67f:	nop
  41a680:	add    dh,BYTE PTR [ebx+0xb]
  41a683:	pop    es
  41a684:	jb     0x41a6bf
  41a686:	(bad)  
  41a689:	hlt    
  41a68a:	push   edi
  41a68b:	jae    0x41a670
  41a68d:	add    al,0xc0
  41a68f:	push   cs
  41a690:	jg     0x41a6c4
  41a692:	sbb    al,0xf9
  41a694:	test   DWORD PTR [edi+0x33],edi
  41a697:	jb     0x41a6df
  41a699:	sbb    esp,DWORD PTR [eax*1+0x5b7403e7]
  41a6a0:	imul   ecx,ecx,0x2c
  41a6a3:	jnp    0x41a65c
  41a6a5:	enter  0x6abe,0xda
  41a6a9:	fild   DWORD PTR [eax]
  41a6ab:	add    BYTE PTR [eax],al
  41a6ad:	out    0xb0,eax
  41a6af:	jmp    0x3976e22c
  41a6b4:	and    DWORD PTR [ecx+eax*1],0x8d1130a9
  41a6bb:	stos   DWORD PTR es:[edi],eax
  41a6bc:	sysenter 
  41a6be:	out    dx,al
  41a6bf:	jmp    0x63509e3d
  41a6c4:	xor    al,0x5f
  41a6c6:	das    
  41a6c7:	stos   BYTE PTR es:[edi],al
  41a6c8:	add    al,0x30
  41a6ca:	adc    esi,DWORD PTR [edx-0x41]
  41a6cd:	add    BYTE PTR [esp+ebp*4],bh
  41a6d0:	or     ecx,DWORD PTR [edi-0x2e]
  41a6d3:	add    edx,ebp
  41a6d5:	jnp    0x41a718
  41a6d7:	cmp    DWORD PTR [esi-0x4d],0x73
  41a6db:	fcmove st,st(0)
  41a6dd:	sbb    DWORD PTR [edi],ecx
  41a6df:	jge    0x41a6d6
  41a6e1:	jecxz  0x41a6b0
  41a6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e4:	jp     0x41a71b
  41a6e6:	pop    ebx
  41a6e7:	and    al,BYTE PTR [ebx-0x12]
  41a6ea:	xchg   DWORD PTR ds:0x11f8961e,esi
  41a6f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f1:	mov    BYTE PTR [eax],cl
  41a6f3:	imul   ebp,eax,0x78c5f891
  41a6f9:	xor    BYTE PTR [ebx],ah
  41a6fb:	daa    
  41a6fc:	jnp    0x41a72e
  41a6fe:	and    eax,DWORD PTR [eax]
  41a700:	mov    dh,0x7d
  41a702:	and    al,0x89
  41a704:	xchg   esi,eax
  41a705:	mov    bh,al
  41a707:	std    
  41a708:	sbb    al,0x4b
  41a70a:	(bad)
  41a70e:	adc    BYTE PTR [esi-0x6a],dl
  41a711:	add    BYTE PTR [eax],al
  41a713:	add    BYTE PTR [ebp+0x8],bh
  41a716:	std    
  41a717:	adc    al,0x4b
  41a719:	sti    
  41a71a:	jb     0x41a70d
  41a71c:	fmul   DWORD PTR [ebx-0x29]
  41a71f:	jle    0x41a710
  41a721:	cmp    DWORD PTR [edi+0x14bade6],0xffffffe9
  41a728:	lock dec ebp
  41a72a:	cmp    esp,eax
  41a72c:	hlt    
  41a72d:	jne    0x41a703
  41a72f:	push   eax
  41a730:	shl    edx,cl
  41a732:	cld    
  41a733:	push   esi
  41a734:	mov    eax,DWORD PTR [eax+0x7c]
  41a737:	fs mov al,0x9
  41a73a:	test   BYTE PTR [ecx],ah
  41a73c:	fdiv   st(1),st
  41a73e:	cld    
  41a73f:	add    cl,BYTE PTR [eax+eax*1+0xd]
  41a743:	outs   dx,DWORD PTR ds:[esi]
  41a744:	daa    
  41a745:	jecxz  0x41a743
  41a747:	cs or  ebp,esi
  41a74a:	loop   0x41a772
  41a74c:	test   DWORD PTR [ebp-0x38aa62bb],0xe3376d0c
  41a756:	cld    
  41a757:	push   cs
  41a758:	mov    ebx,0x3ef6085c
  41a75d:	mov    cl,0xe3
  41a75f:	(bad)  
  41a760:	lock jg 0x41a7b8
  41a763:	xchg   ebp,eax
  41a764:	mov    ebx,0x510e6c5
  41a769:	cli    
  41a76a:	cld    
  41a76b:	jb     0x41a797
  41a76d:	and    eax,DWORD PTR [eax+0x70]
  41a770:	inc    edx
  41a771:	adc    eax,DWORD PTR [edi-0x16a924d4]
  41a777:	inc    BYTE PTR [eax]
  41a779:	add    BYTE PTR [eax],al
  41a77b:	jne    0x41a7c1
  41a77d:	clc    
  41a77e:	add    bl,dh
  41a780:	dec    ebp
  41a781:	adc    al,0xf
  41a783:	pop    es
  41a784:	nop
  41a785:	loopne 0x41a786
  41a787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a788:	aaa    
  41a789:	pop    esi
  41a78a:	ins    BYTE PTR es:[edi],dx
  41a78b:	inc    ebp
  41a78c:	adc    BYTE PTR [edi+0xb0395e5],0xb6
  41a793:	dec    ecx
  41a794:	mov    BYTE PTR [edx+0x30],cl
  41a797:	push   ebp
  41a798:	mov    ebp,0x3a190800
  41a79d:	inc    ecx
  41a79e:	hlt    
  41a79f:	inc    ebp
  41a7a0:	mov    ?,WORD PTR [edx-0x1c]
  41a7a3:	mov    ch,0x3
  41a7a5:	sti    
  41a7a6:	inc    ebp
  41a7a7:	dec    esi
  41a7a8:	add    al,0x71
  41a7aa:	and    al,0xf0
  41a7ac:	add    bh,bl
  41a7ae:	jne    0x41a7a6
  41a7b0:	xchg   ebx,edx
  41a7b2:	(bad)  
  41a7b3:	aas    
  41a7b4:	sbb    eax,DWORD PTR [edi+0x71044ccb]
  41a7ba:	adc    BYTE PTR [ebp+0x3fff0c7d],dh
  41a7c0:	or     ebp,eax
  41a7c2:	lods   al,BYTE PTR ds:[esi]
  41a7c3:	rol    BYTE PTR [ebx],cl
  41a7c5:	sti    
  41a7c6:	test   DWORD PTR [edx],ebx
  41a7c8:	outs   dx,DWORD PTR ds:[esi]
  41a7c9:	mov    dl,0xe9
  41a7cb:	jno    0x41a7da
  41a7cd:	add    BYTE PTR [eax],al
  41a7cf:	popa   
  41a7d0:	inc    eax
  41a7d1:	and    al,0x40
  41a7d3:	arpl   WORD PTR [eax+0x24],ax
  41a7d6:	push   eax
  41a7d7:	icebp  
  41a7d8:	and    al,BYTE PTR [edi+0x4133e245]
  41a7de:	adc    al,0x0
  41a7e0:	add    BYTE PTR [eax],al
  41a7e2:	lds    edx,FWORD PTR [edi+0x9b5e432]
  41a7e8:	aaa    
  41a7e9:	pop    esi
  41a7ea:	jbe    0x41a805
  41a7ec:	jg     0x41a82c
  41a7ee:	out    dx,eax
  41a7ef:	or     ebx,edi
  41a7f1:	(bad)  
  41a7f3:	or     eax,0xeecf393f
  41a7f8:	or     eax,DWORD PTR [ebp-0x318000d]
  41a7fe:	test   ch,al
  41a800:	inc    edi
  41a801:	adc    al,0x7c
  41a803:	xor    ebp,DWORD PTR [eax]
  41a805:	push   0xfffffff3
  41a807:	mov    ah,0x77
  41a809:	sbb    al,0x78
  41a80b:	xchg   ebp,eax
  41a80c:	add    DWORD PTR [ebx+0xb],esi
  41a80f:	imul   ecx,esi,0x14135c55
  41a815:	std    
  41a816:	fsubrp st(3),st
  41a818:	add    DWORD PTR [ebx-0x5],esi
  41a81b:	xchg   DWORD PTR [esi-0x28],edx
  41a81e:	inc    esp
  41a81f:	test   DWORD PTR [edi-0x13b93841],eax
  41a825:	push   edx
  41a826:	icebp  
  41a827:	fild   WORD PTR [eax]
  41a829:	mov    DWORD PTR [esi-0x5178bf3d],esi
  41a82f:	retf   
  41a830:	push   eax
  41a831:	jmp    0xf88a2102
  41a836:	fisubr DWORD PTR [edx+0x407e0d14]
  41a83c:	out    0xfc,al
  41a83e:	add    al,0x19
  41a840:	bound  ebp,QWORD PTR [esp+ebp*8+0x60]
  41a844:	jmp    0x41a92c
  41a849:	hlt    
  41a84a:	xor    al,0x12
  41a84c:	mov    dh,0xf0
  41a84e:	push   0x7df4304f
  41a853:	add    eax,0x47e73008
  41a858:	hlt    
  41a859:	in     al,0x6b
  41a85b:	(bad)  
  41a85c:	loopne 0x41a82a
  41a85e:	sbb    al,0x2
  41a860:	inc    ebx
  41a861:	fild   WORD PTR [eax+edi*2]
  41a864:	and    al,0x49
  41a866:	loopne 0x41a869
  41a868:	jae    0x41a841
  41a86a:	js     0x41a846
  41a86c:	cld    
  41a86d:	fmul   DWORD PTR es:[ebp+0x74e53dc8]
  41a874:	adc    BYTE PTR [esi+eax*1+0x7b96105c],bl
  41a87b:	out    dx,eax
  41a87c:	jmp    0x41a803
  41a87e:	fst    st(5)
  41a880:	add    DWORD PTR [eax-0x3a],esi
  41a883:	push   edx
  41a884:	mov    dh,0x95
  41a886:	out    dx,al
  41a887:	out    0x3,eax
  41a889:	repz and DWORD PTR [ebx],0x2b7fb328
  41a890:	sub    bl,al
  41a892:	loope  0x41a892
  41a894:	mov    WORD PTR [ecx-0xb92012],?
  41a89a:	add    eax,0xf553856c
  41a89f:	xchg   ebp,eax
  41a8a0:	cmp    eax,0x84de62a5
  41a8a5:	imul   ebp,edx,0xffffff85
  41a8a8:	add    esi,esp
  41a8aa:	mov    esp,0x44e9
  41a8af:	add    ah,ah
  41a8b1:	dec    ebx
  41a8b2:	jnp    0x41a8c5
  41a8b4:	outs   dx,DWORD PTR ds:[esi]
  41a8b5:	arpl   WORD PTR [edx-0x540ae1ff],cx
  41a8bb:	pop    ss
  41a8bc:	push   ss
  41a8bd:	jnp    0x41a8c2
  41a8bf:	outs   dx,BYTE PTR ds:[esi]
  41a8c0:	repz cmc 
  41a8c2:	fistp  DWORD PTR [edi]
  41a8c4:	jp     0x41a8a3
  41a8c6:	dec    ebp
  41a8c7:	ja     0x41a8a4
  41a8c9:	xor    DWORD PTR [ecx],0xd77af65a
  41a8cf:	add    BYTE PTR [eax+0x3],ah
  41a8d2:	ss ja  0x41a8d0
  41a8d5:	fimul  WORD PTR [ecx+0x6bf4dfd9]
  41a8db:	les    esp,FWORD PTR [eax-0x52]
  41a8de:	xsha1  (bad)
  41a8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e0:	int    0xf4
  41a8e2:	out    0x6d,al
  41a8e4:	rcr    esi,0x70
  41a8e7:	add    esi,ebx
  41a8e9:	push   es
  41a8ea:	jb     0x41a933
  41a8ec:	mov    bh,0x7e
  41a8ee:	mov    ds:0x4a7a17,eax
  41a8f3:	int    0x30
  41a8f5:	mov    WORD PTR [edx-0x3b],es
  41a8f8:	inc    eax
  41a8f9:	in     al,dx
  41a8fa:	pop    edi
  41a8fb:	call   0x24caaff0
  41a900:	(bad)  
  41a901:	cmp    eax,0x7fe3fd43
  41a906:	sbb    cl,dl
  41a908:	repz icebp 
  41a90a:	mov    BYTE PTR [edi],dh
  41a90c:	add    ebp,DWORD PTR [esi]
  41a90e:	xlat   BYTE PTR ds:[ebx]
  41a90f:	out    dx,al
  41a910:	ja     0x41a939
  41a912:	in     al,0xb6
  41a914:	add    BYTE PTR [eax],al
  41a916:	add    bl,dh
  41a918:	test   DWORD PTR [edx-0x4b],edi
  41a91b:	in     al,dx
  41a91c:	ja     0x41a95f
  41a91e:	jb     0x41a8ca
  41a920:	push   cs
  41a921:	sub    DWORD PTR [ecx-0x1695e63c],0xffffffa0
  41a928:	jg     0x41a97f
  41a92a:	in     eax,dx
  41a92b:	outs   dx,DWORD PTR ds:[esi]
  41a92c:	(bad)  
  41a92d:	out    0x50,eax
  41a92f:	mov    DWORD PTR [esi],0x3306400
  41a935:	cmp    DWORD PTR [ecx+0xe],0xfffffff3
  41a939:	cld    
  41a93a:	adc    ch,0x7d
  41a93d:	inc    ebp
  41a93e:	add    eax,0x4038bec6
  41a943:	mov    edx,DWORD PTR [edx]
  41a945:	mov    ah,dl
  41a947:	mov    BYTE PTR [esp+ebp*1-0x2c],0xe5
  41a94c:	test   edi,esi
  41a94e:	call   0x4c143436
  41a953:	repz icebp 
  41a955:	mov    DWORD PTR [edx-0x3b9cf0f],ebp
  41a95b:	add    ecx,DWORD PTR [ebx-0xe0cf43a]
  41a961:	mov    BYTE PTR [esp+eax*8+0x6feab602],ch
  41a968:	mov    ah,0xf9
  41a96a:	stos   BYTE PTR es:[edi],al
  41a96b:	ja     0x41a969
  41a96d:	or     al,0x0
  41a96f:	mov    ebp,0xadff6f7e
  41a974:	repz sti 
  41a976:	and    al,0xf
  41a978:	inc    ebx
  41a979:	mov    DWORD PTR [ecx+0x0],eax
  41a97c:	add    BYTE PTR [eax],al
  41a97e:	mov    cl,BYTE PTR [edx-0x7462f50c]
  41a984:	rol    DWORD PTR [eax],cl
  41a986:	call   0xfbe8:0x7a860b07
  41a98d:	dec    DWORD PTR [ecx]
  41a98f:	repz or BYTE PTR [esi-0x66],dh
  41a993:	mov    ah,dh
  41a995:	or     eax,0x85391026
  41a99a:	pop    edx
  41a99b:	pop    es
  41a99c:	add    BYTE PTR [edi],cl
  41a99e:	xlat   BYTE PTR ds:[ebx]
  41a99f:	jg     0x41a97f
  41a9a1:	dec    DWORD PTR [ebp+0x1439c037]
  41a9a7:	imul   ecx,DWORD PTR [ebx],0xffffff85
  41a9aa:	fsubr  st,st(0)
  41a9ac:	sti    
  41a9ad:	push   DWORD PTR [ebx-0x4a]
  41a9b0:	cld    
  41a9b1:	dec    DWORD PTR [edx+0x30]
  41a9b4:	pop    esi
  41a9b5:	ins    BYTE PTR es:[edi],dx
  41a9b6:	sbb    eax,0x1a009f88
  41a9bb:	pop    es
  41a9bc:	cmp    BYTE PTR [ebx],0x10
  41a9bf:	add    al,0x81
  41a9c1:	call   0x8ea3:0x4300070a
  41a9c8:	cld    
  41a9c9:	call   FWORD PTR [edx]
  41a9cb:	mov    ah,dh
  41a9cd:	or     DWORD PTR ds:0xade2568b,ebx
  41a9d3:	repz jg 0x41a9ce
  41a9d6:	cli    
  41a9d7:	add    DWORD PTR [ecx+edx*2+0x3dfbf238],eax
  41a9de:	push   0xb
  41a9e0:	add    BYTE PTR [eax],al
  41a9e2:	add    BYTE PTR [eax],al
  41a9e4:	add    BYTE PTR [ecx],al
  41a9e6:	jo     0x41aa67
  41a9e8:	clc    
  41a9e9:	ret    
  41a9ea:	jp     0x41aa62
  41a9ec:	xor    ebx,0x17
  41a9ef:	and    al,0x74
  41a9f1:	inc    edx
  41a9f2:	ret    
  41a9f3:	mov    al,ds:0xde0b4ff
  41a9f8:	and    esi,0xfffffffd
  41a9fb:	cld    
  41a9fc:	cld    
  41a9fd:	cwde   
  41a9fe:	test   BYTE PTR [ecx+0x5e6de9f7],al
  41aa04:	sbb    DWORD PTR [ebx-0x2979f205],0xc6fcfdbd
  41aa0e:	bound  eax,QWORD PTR [ecx]
  41aa10:	add    bl,dh
  41aa12:	les    ecx,FWORD PTR [ebx-0x7f]
  41aa15:	jnp    0x41aa0d
  41aa17:	or     eax,0xfdbe0682
  41aa1c:	cld    
  41aa1d:	jo     0x41a9d7
  41aa1f:	pcmpeqd mm6,QWORD PTR [edx+0x54ff87e2]
  41aa26:	loopne 0x41aa11
  41aa28:	int    0x78
  41aa2a:	and    bh,BYTE PTR [eax]
  41aa2c:	imul   bh
  41aa2e:	out    0x4,eax
  41aa30:	jmp    0x348d0f6b
  41aa35:	cmp    eax,0x180408e4
  41aa3a:	mov    esi,0x71df4d89
  41aa3f:	add    eax,0xb184f208
  41aa44:	mov    BYTE PTR [ebp+0x3f613],ah
  41aa4a:	add    BYTE PTR [eax],al
  41aa4c:	sti    
  41aa4d:	fsubp  st(1),st
  41aa4f:	vmread DWORD PTR [edx-0x180809cc],ebp
  41aa56:	adc    cl,ch
  41aa58:	push   edx
  41aa59:	jne    0x41aaa6
  41aa5b:	xor    al,0xe5
  41aa5d:	jmp    0x41aa67
  41aa5f:	adc    ah,dh
  41aa61:	arpl   si,cx
  41aa63:	(bad)  
  41aa65:	and    dh,bh
  41aa67:	inc    edx
  41aa68:	inc    DWORD PTR [esi]
  41aa6a:	es js  0x41aa84
  41aa6d:	pop    ebp
  41aa6e:	out    0xfe,eax
  41aa70:	inc    ecx
  41aa71:	adc    esp,DWORD PTR [edx-0x2a]
  41aa74:	mov    edi,0xab8aef7b
  41aa79:	pop    eax
  41aa7a:	push   es
  41aa7b:	js     0x41aa80
  41aa7d:	bnd jae 0x41aa8f
  41aa80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa81:	jnp    0x41aa62
  41aa83:	jmp    0x41aa76
  41aa85:	fsubr  st,st(5)
  41aa87:	std    
  41aa88:	jno    0x41aa50
  41aa8a:	cmc    
  41aa8b:	xchg   DWORD PTR [ecx],ecx
  41aa8d:	icebp  
  41aa8e:	(bad)  
  41aa90:	fwait
  41aa91:	add    eax,0x5224f941
  41aa96:	sub    eax,0x6c4ac59
  41aa9b:	add    al,0x83
  41aa9d:	rol    BYTE PTR [ebx+0x43],1
  41aaa0:	repz mov dl,0x41
  41aaa3:	inc    ebx
  41aaa4:	xrelease mov DWORD PTR [ecx+0x43],0x4311c0f3
  41aaac:	repz push es
  41aaae:	or     al,0x43
  41aab0:	add    BYTE PTR [eax],al
  41aab2:	add    bl,dh
  41aab4:	icebp  
  41aab5:	add    eax,DWORD PTR [ebx-0xd]
  41aab8:	sbb    bh,ch
  41aaba:	inc    edx
  41aabb:	repz and DWORD PTR ds:0xd4af343,edx
  41aac2:	inc    ebx
  41aac3:	repz pop eax
  41aac5:	add    eax,0xfd61f343
  41aaca:	inc    edx
  41aacb:	repz jno 0x41aaa2
  41aace:	inc    edx
  41aacf:	repz mov edi,0x8bf342cb
  41aad5:	les    eax,FWORD PTR [edx-0xd]
  41aad8:	idiv   DWORD PTR [edx+eax*2+0x42d65cf3]
  41aadf:	repz jecxz 0x41aaaf
  41aae2:	inc    edx
  41aae3:	repz push ds
  41aae5:	add    BYTE PTR [ecx-0x4264f8cf],bh
  41aaeb:	xor    DWORD PTR [edi],eax
  41aaed:	lea    edx,[ebp-0x78d8f8cf]
  41aaf3:	xor    DWORD PTR [edi],eax
  41aaf5:	cmp    eax,DWORD PTR [edx-0x7d2ef8cf]
  41aafb:	xor    DWORD PTR [edi],eax
  41aafd:	xchg   edi,eax
  41aafe:	jnp    0x41ab31
  41ab00:	pop    es
  41ab01:	mov    edx,0x2307317b
  41ab06:	jl     0x41ab39
  41ab08:	pop    es
  41ab09:	cmp    edi,DWORD PTR [edx+0x31]
  41ab0c:	pop    es
  41ab0d:	neg    DWORD PTR [ebx+0x30]
  41ab10:	pop    es
  41ab11:	fistp  DWORD PTR [ebx+0x30]
  41ab14:	pop    es
  41ab15:	adc    eax,0x5a
  41ab1a:	xor    BYTE PTR [edi],al
  41ab1c:	and    ebx,DWORD PTR [edx+0x30]
  41ab1f:	pop    es
  41ab20:	xor    BYTE PTR [edx],bh
  41ab22:	mov    al,0x6
  41ab24:	repnz cmp esi,DWORD PTR [eax-0x4fc32bfa]
  41ab2b:	push   es
  41ab2c:	jbe    0x41ab62
  41ab2e:	mov    al,0x6
  41ab30:	pop    esi
  41ab31:	sbb    al,0xb0
  41ab33:	push   es
  41ab34:	xchg   esp,eax
  41ab35:	adc    al,0xb0
  41ab37:	push   es
  41ab38:	mov    ds:0xab06b01c,al
  41ab3d:	adc    al,0xb0
  41ab3f:	push   es
  41ab40:	mov    edx,0x4206b1fc
  41ab45:	add    DWORD PTR [eax-0x4e0124fa],esi
  41ab4b:	push   es
  41ab4c:	mov    esp,0x306b1f6
  41ab51:	loope  0x41ab04
  41ab53:	push   es
  41ab54:	adc    al,0xe1
  41ab56:	mov    cl,0x6
  41ab58:	sbb    al,0xd1
  41ab5a:	mov    cl,0x6
  41ab5c:	sub    dl,cl
  41ab5e:	mov    cl,0x6
  41ab60:	mov    al,0x0
  41ab62:	stos   DWORD PTR es:[edi],eax
  41ab63:	inc    esp
  41ab64:	add    BYTE PTR [ebp-0x56],ch
  41ab67:	inc    esp
  41ab68:	add    BYTE PTR [edi],ah
  41ab6a:	dec    esi
  41ab6b:	inc    ebp
  41ab6c:	add    BYTE PTR [ebp-0x53],bh
  41ab6f:	inc    esp
  41ab70:	add    BYTE PTR [edi],dl
  41ab72:	arpl   WORD PTR [eax+eax*1-0x2f],ax
  41ab76:	arpl   WORD PTR [eax+eax*1+0x38],ax
  41ab7a:	ins    BYTE PTR es:[edi],dx
  41ab7b:	inc    esp
  41ab7c:	add    bh,al
  41ab7e:	add    BYTE PTR [eax],al
  41ab80:	add    BYTE PTR [esp+eax*2+0x0],ch
  41ab84:	pop    ebx
  41ab85:	jge    0x41abcb
  41ab87:	add    BYTE PTR [edx+eax*4],ch
  41ab8a:	inc    esp
  41ab8b:	add    BYTE PTR [ecx+0x66004525],al
  41ab91:	add    eax,0x3b810045
  41ab96:	dec    edx
  41ab97:	add    BYTE PTR [eax],dh
  41ab99:	and    ecx,DWORD PTR [edx+0x0]
  41ab9c:	jb     0x41abd1
  41ab9e:	dec    edx
  41ab9f:	add    BYTE PTR [edx+0xa],bh
  41aba2:	dec    edx
  41aba3:	add    BYTE PTR [ebx+ebx*8],ch
  41aba6:	dec    ecx
  41aba7:	add    BYTE PTR [ecx-0x25],ch
  41abaa:	dec    ecx
  41abab:	add    BYTE PTR [ebp-0xaffb635],dh
  41abb1:	retf   
  41abb2:	dec    ecx
  41abb3:	add    BYTE PTR [esi],bh
  41abb5:	fmul   DWORD PTR [ecx+0x0]
  41abb8:	jnp    0x41ab92
  41abba:	dec    ecx
  41abbb:	add    bh,ch
  41abbd:	retf   0x49
  41abc0:	les    esi,FWORD PTR [esi]
  41abc2:	dec    edx
  41abc3:	add    BYTE PTR [edx-0x1],bh
  41abc6:	dec    ecx
  41abc7:	add    BYTE PTR [edi+0x20004a03],dh
  41abcd:	xchg   ecx,eax
  41abce:	dec    ecx
  41abcf:	add    BYTE PTR [eax],al
  41abd1:	or     ecx,DWORD PTR [ecx]
  41abd3:	inc    DWORD PTR [ebx]
  41abd5:	push   ds
  41abd6:	push   es
  41abd7:	push   es
  41abd8:	pop    es
  41abd9:	add    al,BYTE PTR [edx]
  41abdb:	or     cl,BYTE PTR [ebx]
  41abdd:	repz jmp 0xd2ebf2e7
  41abe3:	push   es
  41abe4:	or     eax,0x3000000
  41abe9:	iret   
  41abea:	dec    ebx
  41abeb:	adc    al,BYTE PTR [eax]
  41abed:	aam    0xf
  41abef:	push   ss
  41abf0:	add    al,0xd8
  41abf2:	sbb    ebx,DWORD PTR [edx]
  41abf4:	stc    
  41abf5:	fstp   DWORD PTR [edx]
  41abf7:	sbb    ch,cl
  41abf9:	or     BYTE PTR ds:0x19ede61c,bl
  41abff:	and    BYTE PTR [edx],dl
  41ac01:	mov    edi,0xbf121f23
  41ac06:	and    ah,BYTE PTR [edx]
  41ac08:	sar    BYTE PTR [ebx-0x2833d9e1],1
  41ac0e:	sub    BYTE PTR [eax],ch
  41ac10:	retf   
  41ac11:	(bad)  
  41ac12:	sub    BYTE PTR [edi],ah
  41ac14:	retf   0x2dc9
  41ac17:	sub    al,0xde
  41ac19:	adc    eax,0x373a474b
  41ac1e:	dec    ebx
  41ac1f:	inc    edi
  41ac20:	sub    ah,BYTE PTR [edi]
  41ac22:	sub    DWORD PTR ds:0x3233102a,ebp
  41ac28:	and    ah,ch
  41ac2a:	sub    al,0x34
  41ac2c:	push   ds
  41ac2d:	imul   BYTE PTR [edi]
  41ac2f:	ss and al,0xf8
  41ac32:	cmp    edi,DWORD PTR [edx]
  41ac34:	sbb    bh,dh
  41ac36:	cmp    bh,BYTE PTR [ecx]
  41ac38:	mov    edx,0xba474b36
  41ac3d:	retf   
  41ac3e:	aaa    
  41ac3f:	ds cld 
  41ac41:	pop    ds
  41ac42:	inc    ebx
  41ac43:	inc    edx
  41ac44:	mov    al,0x23
  41ac46:	aas    
  41ac47:	inc    esi
  41ac48:	repz sbb al,0x4c
  41ac4b:	nop
  41ac4c:	add    BYTE PTR [eax],al
  41ac4e:	add    BYTE PTR [edi+0xa],dh
  41ac51:	inc    ebx
  41ac52:	add    BYTE PTR [ebx],ch
  41ac54:	cli    
  41ac55:	inc    ebx
  41ac56:	add    bh,ch
  41ac58:	clc    
  41ac59:	inc    ebx
  41ac5a:	add    BYTE PTR [ebx-0xcbb1dfa],dh
  41ac60:	outs   dx,DWORD PTR ds:[esi]
  41ac61:	loop   0x41aca7
  41ac63:	repz pushf 
  41ac65:	rol    DWORD PTR [ebx+esi*8-0x6a],1
  41ac69:	into   
  41ac6a:	inc    esp
  41ac6b:	repz add al,0xc0
  41ac6e:	inc    esp
  41ac6f:	repz add al,0xc0
  41ac72:	inc    esp
  41ac73:	xrelease xchg DWORD PTR [edi+0x44],ebx
  41ac77:	xrelease xchg DWORD PTR [edi+0x44],ebx
  41ac7b:	repz adc BYTE PTR [eax-0x5f950cbc],ah
  41ac82:	inc    esp
  41ac83:	repz ret 0x448f
  41ac87:	repz add dl,BYTE PTR [ecx-0x7ec10cbc]
  41ac8e:	inc    esp
  41ac8f:	repz cld 
  41ac91:	jl     0x41acd7
  41ac93:	repz inc esi
  41ac95:	jne    0x41acdb
  41ac97:	repz js 0x41ad07
  41ac9a:	inc    esp
  41ac9b:	repz mov ds:0xd4f34364,al
  41aca1:	pop    esp
  41aca2:	inc    ebx
  41aca3:	repz (bad) 
  41aca5:	push   ebp
  41aca6:	inc    ebx
  41aca7:	repz std 
  41aca9:	dec    edx
  41acaa:	inc    ebx
  41acab:	repz arpl WORD PTR [ebx+0x43],ax
  41acaf:	repz arpl WORD PTR [ebx],di
  41acb2:	inc    ebx
  41acb3:	add    BYTE PTR [eax],al
  41acb5:	add    bl,dh
  41acb7:	xchg   DWORD PTR [edi+0x43],ebx
  41acba:	xrelease xchg DWORD PTR [edi+0x43],ebx
  41acbe:	repz retf 
  41acc0:	and    al,BYTE PTR [ebx-0xd]
  41acc3:	push   eax
  41acc4:	sbb    al,0x43
  41acc6:	repz test DWORD PTR [ebx],edx
  41acc9:	inc    ebx
  41acca:	repz mov esp,0x3f3430b
  41acd0:	add    eax,0x70b1f343
  41acd5:	inc    ebx
  41acd6:	repz ret 0x62ff
  41acda:	mov    al,0x6
  41acdc:	retf   
  41acdd:	arpl   WORD PTR [eax-0x4f8c29fa],si
  41ace3:	push   es
  41ace4:	fnsave [ebx-0x50]
  41ace7:	push   es
  41ace8:	call   0xf3485d50
  41aced:	arpl   WORD PTR [eax],si
  41acef:	pop    es
  41acf0:	repz jae 0x41ad23
  41acf3:	pop    es
  41acf4:	repz jae 0x41ad27
  41acf7:	pop    es
  41acf8:	jg     0x41ad5a
  41acfa:	xor    BYTE PTR [edi],al
  41acfc:	jg     0x41ad5e
  41acfe:	xor    BYTE PTR [edi],al
  41ad00:	adc    esi,DWORD PTR [ebx+0x30]
  41ad03:	pop    es
  41ad04:	pop    edi
  41ad05:	jae    0x41ad37
  41ad07:	pop    es
  41ad08:	jp     0x41ad6d
  41ad0a:	xor    BYTE PTR [edi],al
  41ad0c:	(bad)  
  41ad0d:	arpl   WORD PTR [eax],si
  41ad0f:	pop    es
  41ad10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad11:	jae    0x41ad43
  41ad13:	pop    es
  41ad14:	push   ebx
  41ad15:	jb     0x41aca2
  41ad17:	ins    DWORD PTR es:[edi],dx
  41ad18:	in     al,dx
  41ad19:	mov    ebp,0xf1000000
  41ad1e:	push   es
  41ad1f:	add    BYTE PTR [edx+0x34],ch
  41ad22:	repz cld 
  41ad24:	push   0x2d
  41ad26:	idiv   esp
  41ad28:	push   0x35
  41ad2a:	mov    ebx,0x51663afc
  41ad2f:	or     BYTE PTR [edi],dh
  41ad31:	fst    DWORD PTR es:[edx+esi*2+0x68]
  41ad36:	add    DWORD PTR [eax-0x42],0x60e05969
  41ad3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3e:	mov    esi,0x852b1486
  41ad43:	pop    edx
  41ad44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad45:	jns    0x41ada0
  41ad47:	call   0x8918aabc
  41ad4c:	sahf   
  41ad4d:	div    eax
  41ad4f:	or     al,0x65
  41ad51:	or     al,0x2
  41ad53:	add    BYTE PTR [eax],al
  41ad55:	sbb    ch,BYTE PTR [ebx]
  41ad57:	fimul  DWORD PTR [edi]
  41ad59:	xchg   esi,eax
  41ad5a:	adc    eax,DWORD PTR [ebx]
  41ad5c:	add    BYTE PTR [edx],cl
  41ad5e:	xor    DWORD PTR [ecx+0x10],edx
  41ad61:	pop    es
  41ad62:	add    DWORD PTR ds:0x8aff0655,esi
  41ad68:	push   cs
  41ad69:	adc    eax,0x37390008
  41ad6e:	cld    
  41ad6f:	js     0x41ad78
  41ad71:	mov    al,0xf8
  41ad73:	in     eax,0x4
  41ad75:	aad    0x7
  41ad77:	add    BYTE PTR [edi],cl
  41ad79:	gs inc edi
  41ad7b:	sbb    BYTE PTR [ebx],al
  41ad7d:	add    eax,0x508181
  41ad82:	add    BYTE PTR [eax],al
  41ad84:	sbb    eax,0x250ffbef
  41ad89:	inc    edi
  41ad8a:	sbb    al,0x89
  41ad8c:	push   edi
  41ad8d:	inc    eax
  41ad8e:	sti    
  41ad8f:	(bad)  
  41ad90:	(bad)  
  41ad92:	mov    dl,0x47
  41ad94:	mov    al,ds:0xed4c8180
  41ad99:	out    dx,al
  41ad9a:	sti    
  41ad9b:	mov    eax,0xb414a
  41ada0:	adc    ebp,DWORD PTR [ebp+0x29]
  41ada3:	call   FWORD PTR [ebp-0x157a7a0d]
  41ada9:	repz sti 
  41adab:	inc    DWORD PTR [ecx]
  41adad:	sub    al,0x20
  41adaf:	mov    DWORD PTR [edi+0x424585c2],esi
  41adb5:	das    
  41adb6:	ret    0x5575
  41adb9:	lods   al,BYTE PTR ds:[esi]
  41adba:	inc    ecx
  41adbb:	clc    
  41adbc:	push   edx
  41adbd:	popa   
  41adbe:	inc    eax
  41adbf:	add    bl,cl
  41adc1:	xor    eax,DWORD PTR [ecx+0x52]
  41adc4:	sbb    DWORD PTR [ebx+0x74],edx
  41adc7:	es mov edi,0x5dfec885
  41adcd:	repz dec esp
  41adcf:	push   0xfffffff3
  41add1:	fld    QWORD PTR [edi-0xb84d47e]
  41add7:	cld    
  41add8:	ret    
  41add9:	js     0x41ad98
  41addb:	out    0xfd,eax
  41addd:	mov    bl,0x3
  41addf:	add    BYTE PTR [eax+0x6d],ch
  41ade2:	jg     0x41add9
  41ade4:	xchg   ah,ah
  41ade6:	data16 cld 
  41ade8:	add    BYTE PTR [eax],al
  41adea:	add    BYTE PTR [edx],bl
  41adec:	jo     0x41adec
  41adee:	(bad)  
  41adef:	cld    
  41adf0:	psrld  mm1,QWORD PTR [eax-0x38761a53]
  41adf7:	mov    dl,0x48
  41adf9:	adc    bh,BYTE PTR [edi-0x207e2326]
  41adff:	repnz pop esp
  41ae01:	jecxz  0x41ae01
  41ae03:	imul   ebx,DWORD PTR [ebx-0x5d7bf334],0x16
  41ae0a:	xchg   DWORD PTR [esi],esi
  41ae0c:	dec    eax
  41ae0d:	add    eax,0xc3dc2db5
  41ae12:	out    0xf0,al
  41ae14:	pop    esp
  41ae15:	jecxz  0x41ae15
  41ae17:	jnp    0x41ae64
  41ae19:	and    ch,bh
  41ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1c:	add    DWORD PTR ds:0x5cc2db5,eax
  41ae22:	lods   eax,DWORD PTR ds:[esi]
  41ae23:	stos   DWORD PTR es:[edi],eax
  41ae24:	loope  0x41add3
  41ae26:	inc    ebp
  41ae27:	jmp    0x41ae8f
  41ae29:	push   edi
  41ae2a:	nop
  41ae2b:	lock inc edx
  41ae2d:	or     BYTE PTR [ecx],al
  41ae2f:	lods   al,BYTE PTR ds:[esi]
  41ae30:	ffree  st(3)
  41ae32:	xchg   BYTE PTR [esi],ch
  41ae34:	mov    WORD PTR fs:[edx-0x5d],ss
  41ae38:	addr16 pop eax
  41ae3a:	xchg   esp,eax
  41ae3b:	js     0x41ae57
  41ae3d:	or     al,0xbf
  41ae3f:	dec    ebx
  41ae40:	jecxz  0x41ae73
  41ae42:	(bad)  
  41ae43:	mov    dl,0xfc
  41ae45:	ret    0x7686
  41ae48:	cmp    ch,dh
  41ae4a:	cld    
  41ae4b:	inc    esp
  41ae4c:	pop    es
  41ae4d:	jb     0x41ae8c
  41ae4f:	add    BYTE PTR [eax],al
  41ae51:	add    bl,ch
  41ae53:	(bad)  
  41ae54:	mov    cs,WORD PTR [edx]
  41ae56:	adc    cl,al
  41ae58:	pop    edi
  41ae59:	inc    eax
  41ae5a:	pop    ss
  41ae5b:	and    BYTE PTR [ebx+0x67],0x26
  41ae5f:	jmp    0xeba7:0xfeb68a85
  41ae66:	stc    
  41ae67:	and    eax,0x73718ca8
  41ae6c:	outs   dx,BYTE PTR ds:[esi]
  41ae6d:	test   BYTE PTR [edi],0x7e
  41ae70:	lods   al,BYTE PTR ds:[esi]
  41ae71:	or     edi,DWORD PTR [edi+ebx*8]
  41ae74:	jmp    DWORD PTR [edx]
  41ae76:	xor    al,0x80
  41ae78:	imul   esi,DWORD PTR [ebx-0x12],0xffffffe9
  41ae7c:	dec    ebp
  41ae7d:	mov    dh,BYTE PTR [ecx]
  41ae7f:	out    dx,eax
  41ae80:	outs   dx,DWORD PTR ds:[esi]
  41ae81:	add    BYTE PTR [edx+ebp*8+0x3d],0xf6
  41ae86:	icebp  
  41ae87:	inc    esi
  41ae88:	jmp    0xc65f:0x537ff303
  41ae8f:	jmp    0x5ea33ab9
  41ae94:	push   ds
  41ae95:	div    BYTE PTR [edi-0x51888481]
  41ae9b:	jmp    0x87833aad
  41aea0:	outs   dx,DWORD PTR ds:[esi]
  41aea1:	push   eax
  41aea2:	push   edi
  41aea3:	jg     0x41ae38
  41aea5:	jg     0x41af14
  41aea7:	push   ebx
  41aea8:	sub    ecx,DWORD PTR [ecx+eiz*1+0x28805fab]
  41aeaf:	jmp    0x8aef:0x406bf5e5
  41aeb6:	add    BYTE PTR [eax],al
  41aeb8:	add    BYTE PTR [ecx],bl
  41aeba:	sti    
  41aebb:	jg     0x41aec1
  41aebd:	repz xchg bh,ah
  41aec0:	outs   dx,DWORD PTR ds:[esi]
  41aec1:	stc    
  41aec2:	(bad)  
  41aec3:	into   
  41aec4:	or     eax,0x3f6fc812
  41aec9:	imul   ebx,ebp,0xffffffff
  41aecc:	jmp    0x62ca034a
  41aed1:	add    eax,0xf0e922ff
  41aed6:	jbe    0x41aed8
  41aed8:	adc    esi,ecx
  41aeda:	dec    ebx
  41aedb:	je     0x41aeec
  41aedd:	in     al,0x6
  41aedf:	add    cl,bh
  41aee1:	lock jb 0x41af35
  41aee4:	(bad)  
  41aee5:	lock push es
  41aee7:	and    cl,ch
  41aee9:	test   BYTE PTR [ebx+0x3b],al
  41aeec:	jmp    0xf541e5e1
  41aef1:	cmc    
  41aef2:	sub    eax,0x6b0e900
  41aef7:	je     0x41aeac
  41aef9:	mov    ebp,0xf0b90006
  41aefe:	jb     0x41af39
  41af00:	ret    
  41af01:	fabs   
  41af03:	sub    esp,0xfffffff0
  41af06:	push   es
  41af07:	mov    eax,0x6edf3
  41af0c:	pusha  
  41af0d:	jl     0x41af37
  41af0f:	std    
  41af10:	cs mov esi,0xf0e9fd2d
  41af16:	push   es
  41af17:	jle    0x41aef4
  41af19:	imul   eax,eax,0xffffffbe
  41af1c:	adc    BYTE PTR [eax],al
  41af1e:	add    BYTE PTR [eax],al
  41af20:	(bad)  
  41af21:	jg     0x41aedd
  41af23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af24:	lahf   
  41af25:	jmp    0x41af23
  41af27:	jno    0x41af9d
  41af29:	push   esp
  41af2a:	std    
  41af2b:	(bad)  
  41af2c:	lahf   
  41af2d:	add    BYTE PTR [edx-0x3147864],0x2
  41af34:	in     al,0x5c
  41af36:	or     al,BYTE PTR [ecx-0x76]
  41af39:	aad    0x69
  41af3b:	in     al,dx
  41af3c:	mov    esi,ecx
  41af3e:	xchg   BYTE PTR [eax+esi*4+0x5bcefce9],dl
  41af45:	adc    al,0x87
  41af47:	add    bh,ah
  41af49:	inc    ebx
  41af4a:	sti    
  41af4b:	call   DWORD PTR [ebp-0x2876f721]
  41af51:	daa    
  41af52:	sti    
  41af53:	call   DWORD PTR [ebp-0x6aab7e84]
  41af59:	repz sti 
  41af5b:	mov    ecx,DWORD PTR [ebx+edi*8]
  41af5e:	xchg   BYTE PTR [ebp+0x2e],bh
  41af61:	xchg   esp,ebx
  41af63:	pop    es
  41af64:	xchg   ebx,eax
  41af65:	push   0xf375ff1d
  41af6a:	xchg   edi,eax
  41af6c:	xchg   ebx,eax
  41af6d:	pop    ebp
  41af6e:	call   FWORD PTR [eax-0x73]
  41af71:	in     al,dx
  41af72:	or     esi,DWORD PTR [edi-0x5d8eb34]
  41af78:	sub    al,0x69
  41af7a:	mov    ebp,0xc47dd174
  41af7f:	mov    ebx,DWORD PTR ds:0x98ff5e
  41af85:	add    BYTE PTR [eax],al
  41af87:	mov    eax,ds:0x223bf7da
  41af8c:	jo     0x41afb7
  41af8e:	lea    esi,[ebx-0x260098fc]
  41af94:	jle    0x41af61
  41af96:	sar    DWORD PTR [ebx],0x6
  41af99:	sti    
  41af9a:	adc    eax,0x3f9b5a
  41af9f:	inc    ecx
  41afa0:	int3   
  41afa1:	test   DWORD PTR [ebp-0x40d32],ebx
  41afa7:	bswap  edi
  41afa9:	jno    0x41afb2
  41afab:	sub    ch,0xe5
  41afae:	loopne 0x41af3e
  41afb0:	add    eax,DWORD PTR [eax]
  41afb2:	(bad)  
  41afb3:	pop    edi
  41afb4:	jecxz  0x41afb3
  41afb6:	call   FWORD PTR [edx+0x10be703]
  41afbc:	adc    BYTE PTR ds:[ecx-0x4d0f1],cl
  41afc3:	repz sar BYTE PTR [edi+edx*8+0x76],1
  41afc8:	loope  0x41affb
  41afca:	xchg   edi,eax
  41afcb:	leave  
  41afcc:	fmul   QWORD PTR [ebx-0xb]
  41afcf:	pop    edx
  41afd0:	pop    esp
  41afd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd2:	pop    edi
  41afd3:	dec    esp
  41afd4:	mov    al,0xf0
  41afd6:	push   DWORD PTR [ecx+0xa]
  41afd9:	mov    al,ds:0x2c626afc
  41afde:	std    
  41afdf:	xor    al,0x88
  41afe1:	jp     0x41af65
  41afe3:	out    dx,eax
  41afe4:	nop
  41afe5:	lock cld 
  41afe7:	hlt    
  41afe8:	push   eax
  41afe9:	dec    edx
  41afea:	adc    BYTE PTR [eax],al
  41afec:	add    BYTE PTR [eax],al
  41afee:	outs   dx,BYTE PTR ds:[esi]
  41afef:	sbb    DWORD PTR [edx+eax*1],eax
  41aff2:	push   0x22
  41aff4:	loopne 0x41b02e
  41aff6:	mov    dh,0xc9
  41aff8:	outs   dx,BYTE PTR ds:[esi]
  41aff9:	add    DWORD PTR [edx-0x26],edi
  41affc:	fadd   QWORD PTR [edx-0x76e536e8]
  41b002:	scas   al,BYTE PTR es:[edi]
  41b003:	cmp    DWORD PTR [ebx-0x29fe4ed8],ecx
  41b009:	into   
  41b00a:	jmp    0x41afbe
  41b00c:	jg     0x41b019
  41b00e:	cwde   
  41b00f:	stc    
  41b010:	ror    DWORD PTR [edx-0x197ac111],cl
  41b016:	neg    eax
  41b018:	mov    eax,0xfb70e371
  41b01d:	cld    
  41b01e:	jo     0x41b017
  41b020:	pop    es
  41b021:	cmp    DWORD PTR [ebx-0x7177097f],ebp
  41b027:	(bad)  
  41b028:	icebp  
  41b029:	cld    
  41b02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02b:	jno    0x41b09c
  41b02d:	fdiv   st,st(3)
  41b02f:	bound  esp,QWORD PTR [eax]
  41b031:	imul   BYTE PTR ds:0xd47402f4
  41b037:	in     al,dx
  41b038:	mov    ecx,0xbc68df45
  41b03d:	jle    0x41afd1
  41b03f:	pop    es
  41b040:	out    0x3,al
  41b042:	repz push es
  41b044:	test   al,0xdb
  41b046:	hlt    
  41b047:	mov    esi,eax
  41b049:	add    al,0x6c
  41b04b:	push   esp
  41b04c:	sar    DWORD PTR [ecx+esi*4-0x32],cl
  41b050:	cmp    al,BYTE PTR [ecx]
  41b052:	add    BYTE PTR [eax],al
  41b054:	add    BYTE PTR [edx-0x74],ch
  41b057:	push   ds
  41b058:	repz dec edi
  41b05a:	out    0xe5,al
  41b05c:	mov    ecx,0x48600ef0
  41b061:	inc    edi
  41b062:	(bad)  [eax+eax*1]
  41b065:	out    dx,eax
  41b066:	pop    edx
  41b067:	lds    eax,FWORD PTR [edx]
  41b069:	dec    bp
  41b06b:	std    
  41b06c:	jle    0x41b09a
  41b06e:	enter  0xfb7e,0x9d
  41b072:	out    0x85,eax
  41b074:	add    esi,ebx
  41b076:	push   es
  41b077:	push   0xffffffe3
  41b079:	or     eax,0x7bd02b8f
  41b07e:	dec    esp
  41b07f:	outs   dx,DWORD PTR ds:[esi]
  41b080:	add    al,BYTE PTR [ebp-0x75]
  41b083:	out    dx,al
  41b084:	add    esi,esp
  41b086:	in     eax,0xe6
  41b088:	jl     0x41b0c3
  41b08a:	xlat   BYTE PTR ds:[ebx]
  41b08b:	pop    edi
  41b08c:	dec    eax
  41b08d:	mov    bh,0x91
  41b08f:	mov    ds:0x433b6bff,eax
  41b094:	jl     0x41b0c7
  41b096:	fbld   TBYTE PTR [ebx-0x32]
  41b099:	inc    eax
  41b09a:	jmp    DWORD PTR [ecx+0x48]
  41b09d:	xlat   BYTE PTR ds:[ebx]
  41b09e:	xchg   ebx,eax
  41b09f:	fiadd  DWORD PTR [esi+0x199bffb]
  41b0a5:	or     dl,dl
  41b0a7:	scas   eax,DWORD PTR es:[edi]
  41b0a8:	les    edx,FWORD PTR [ebp-0x537957f8]
  41b0ae:	in     eax,0x61
  41b0b0:	out    dx,al
  41b0b1:	mov    ds:0xbf7069b1,eax
  41b0b6:	push   es
  41b0b7:	jae    0x41b122
  41b0b9:	add    BYTE PTR [eax],al
  41b0bb:	add    BYTE PTR [edx-0x20],bh
  41b0be:	push   DWORD PTR [ecx-0x728f84d5]
  41b0c4:	jne    0x41b066
  41b0c6:	aas    
  41b0c7:	out    0x82,al
  41b0c9:	loop   0x41b0ca
  41b0cb:	push   esp
  41b0cc:	adc    eax,0xe6cd72e4
  41b0d1:	push   eax
  41b0d2:	xchg   esp,eax
  41b0d3:	into   
  41b0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d5:	and    eax,0x9062c6fd
  41b0da:	xchg   edx,eax
  41b0db:	and    eax,0x62fce242
  41b0e0:	cmp    ch,ch
  41b0e2:	cmp    eax,0x8906f745
  41b0e7:	cmp    al,0x43
  41b0e9:	mov    BYTE PTR [edi+0x28efe614],bh
  41b0ef:	bound  ebp,QWORD PTR [edx+edi*2-0x1c549bd8]
  41b0f6:	cld    
  41b0f7:	xchg   dh,al
  41b0f9:	fidiv  WORD PTR [edi+ebx*8-0x72]
  41b0fd:	or     bh,BYTE PTR [edx]
  41b0ff:	ins    BYTE PTR es:[edi],dx
  41b100:	stos   DWORD PTR es:[edi],eax
  41b101:	jecxz  0x41b0ff
  41b103:	outs   dx,BYTE PTR ds:[esi]
  41b104:	test   dl,bh
  41b106:	and    BYTE PTR [ebx+ebp*4-0xfa1031d],0x5a
  41b10e:	packsswb mm7,QWORD PTR [edx]
  41b111:	in     al,0x36
  41b113:	fs inc esp
  41b115:	loop   0x41b113
  41b117:	inc    esi
  41b118:	pop    ebx
  41b119:	or     eax,0x7b5c0245
  41b11e:	jno    0x41b0ad
  41b120:	add    BYTE PTR [eax],al
  41b122:	add    BYTE PTR [eax+0x61],cl
  41b125:	or     al,0xfa
  41b127:	mov    al,0x1d
  41b129:	inc    ebx
  41b12a:	sbb    eax,0xa4374843
  41b12f:	push   0xf5023658
  41b134:	adc    DWORD PTR [esi+0x57911feb],esi
  41b13a:	add    ch,ch
  41b13c:	aad    0xfb
  41b13e:	pinsrw mm1,WORD PTR [esi],0x8
  41b142:	cmp    edx,DWORD PTR [edi-0x24]
  41b145:	or     eax,DWORD PTR [esi+ebx*8-0x37fffff6]
  41b14c:	pop    edi
  41b14d:	push   edx
  41b14e:	cld    
  41b14f:	adc    DWORD PTR [esp+ecx*1],edi
  41b152:	jb     0x41b18f
  41b154:	sar    DWORD PTR [edx+0xb084a00],0xb6
  41b15b:	dec    eax
  41b15c:	xor    eax,DWORD PTR [ecx-0xc]
  41b15f:	pop    ebp
  41b160:	mov    WORD PTR [esi+0x42085a00],gs
  41b166:	mov    edi,esp
  41b168:	(bad)  
  41b169:	aaa    
  41b16a:	push   ebp
  41b16b:	ds pop edx
  41b16d:	out    0xe9,eax
  41b16f:	mov    dh,0x7
  41b171:	add    BYTE PTR [eax],al
  41b173:	inc    ebx
  41b174:	lea    esp,[eax]
  41b176:	jmp    FWORD PTR [ebp-0x29]
  41b179:	or     eax,DWORD PTR [edx+edx*4+0x31000007]
  41b180:	cmp    eax,0x86940f90
  41b185:	cld    
  41b186:	inc    DWORD PTR [eax]
  41b188:	add    BYTE PTR [eax],al
  41b18a:	or     al,bl
  41b18c:	pop    esi
  41b18d:	or     DWORD PTR [edi+0x48],0xfffffffb
  41b191:	dec    DWORD PTR [ebp+0x8]
  41b194:	je     0x41b1be
  41b196:	add    DWORD PTR [eax+edx*4],edi
  41b199:	jbe    0x41b135
  41b19b:	(bad)  
  41b19c:	jno    0x41b182
  41b19e:	popa   
  41b19f:	dec    ebp
  41b1a0:	cld    
  41b1a1:	inc    DWORD PTR [edi-0x696a7689]
  41b1a7:	(bad)  
  41b1a8:	sti    
  41b1a9:	dec    DWORD PTR ds:0xdff3c9d
  41b1af:	xlat   BYTE PTR ds:[ebx]
  41b1b0:	in     al,0xf0
  41b1b2:	jns    0x41b1bb
  41b1b4:	add    BYTE PTR [ebx-0x7d135d0d],cl
  41b1ba:	mov    bl,0x7a
  41b1bc:	sub    cl,ch
  41b1be:	(bad)  
  41b1bf:	pop    eax
  41b1c0:	scas   al,BYTE PTR es:[edi]
  41b1c1:	inc    ebx
  41b1c2:	mov    esp,fs
  41b1c4:	in     al,dx
  41b1c5:	mov    BYTE PTR [esi],ch
  41b1c7:	ds add al,0xc5
  41b1ca:	mov    eax,0x691e72fd
  41b1cf:	pop    edx
  41b1d0:	pop    eax
  41b1d1:	std    
  41b1d2:	ins    BYTE PTR es:[edi],dx
  41b1d3:	les    edi,FWORD PTR [eax-0x3f]
  41b1d6:	sbb    BYTE PTR [ebp-0x2219f7d5],dh
  41b1dc:	cmp    esp,0x8a1821f2
  41b1e2:	jle    0x41b1de
  41b1e4:	in     al,dx
  41b1e5:	cld    
  41b1e6:	inc    esp
  41b1e7:	aad    0x38
  41b1e9:	inc    eax
  41b1eb:	out    0x3e,al
  41b1ed:	xchg   DWORD PTR [eax],eax
  41b1ef:	add    BYTE PTR [eax],al
  41b1f1:	sahf   
  41b1f2:	test   eax,0xffff5328
  41b1f7:	mov    bh,BYTE PTR [edi-0x57]
  41b1fa:	jl     0x41b1fa
  41b1fc:	jb     0x41b1d1
  41b1fe:	jo     0x41b1af
  41b200:	aas    
  41b201:	adc    al,0x8c
  41b203:	in     al,dx
  41b204:	inc    BYTE PTR [eax-0x4c457e2a]
  41b20a:	pop    esp
  41b20b:	in     eax,dx
  41b20c:	cld    
  41b20d:	icebp  
  41b20e:	(bad)  
  41b210:	cmp    BYTE PTR [esi+0x730771d9],bl
  41b216:	es cli 
  41b218:	jb     0x41b209
  41b21a:	lods   eax,DWORD PTR ds:[esi]
  41b21b:	jnp    0x41b26f
  41b21d:	fbld   TBYTE PTR [ebp+0x6f]
  41b220:	clc    
  41b221:	and    BYTE PTR [edi],dl
  41b223:	jnp    0x41b29f
  41b225:	inc    DWORD PTR [esi]
  41b227:	aas    
  41b228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b229:	ds int 0x2b
  41b22c:	dec    ebx
  41b22d:	ret    
  41b22e:	mov    ah,0x4a
  41b230:	mov    DWORD PTR [edi+eax*1-0x11163e2e],ebp
  41b237:	jmp    0xbaa5a53f
  41b23c:	xor    dh,BYTE PTR [ebx-0x180863e0]
  41b242:	and    DWORD PTR [esi],0x3
  41b245:	mov    cl,0x1e
  41b247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b248:	sar    esi,cl
  41b24a:	dec    edx
  41b24b:	mov    al,0x40
  41b24d:	lahf   
  41b24e:	pop    ebx
  41b24f:	retf   
  41b250:	sub    ch,BYTE PTR [esi+0x746a12]
  41b256:	add    BYTE PTR [eax],al
  41b258:	ins    BYTE PTR es:[edi],dx
  41b259:	loop   0x41b241
  41b25b:	(bad)  
  41b25c:	sahf   
  41b25d:	(bad)  
  41b25f:	sub    ebp,DWORD PTR [eax+0x1a2252d6]
  41b265:	push   esp
  41b266:	mov    bl,0x77
  41b268:	call   0x55b3588a
  41b26d:	out    dx,al
  41b26e:	into   
  41b26f:	sub    dh,BYTE PTR [esi]
  41b271:	adc    ch,BYTE PTR [edx+0x58]
  41b274:	xor    al,0xe2
  41b276:	out    0xfe,al
  41b278:	data16 (bad) 
  41b27b:	sub    edi,DWORD PTR [eax-0x25f9e52a]
  41b281:	leave  
  41b282:	sbb    bl,dh
  41b284:	or     ecx,DWORD PTR [eax]
  41b286:	das    
  41b287:	sub    esi,DWORD PTR [esi]
  41b289:	adc    ch,BYTE PTR [edx+0x30]
  41b28c:	add    al,0xe2
  41b28e:	out    0x7c,al
  41b290:	mov    cl,0xb6
  41b292:	popa   
  41b293:	jo     0x41b28c
  41b295:	lea    edi,[ebx-0x4938dc81]
  41b29b:	push   ebx
  41b29c:	inc    ebx
  41b29d:	loop   0x41b23a
  41b29f:	and    ebx,esi
  41b2a1:	loope  0x41b2f0
  41b2a3:	sub    BYTE PTR [ecx+0x2e],0x46
  41b2a7:	out    dx,al
  41b2a8:	iret   
  41b2a9:	aaa    
  41b2aa:	rol    DWORD PTR [ecx],1
  41b2ac:	and    edi,DWORD PTR [edx]
  41b2ae:	add    BYTE PTR [edx+0x7d],ah
  41b2b1:	mov    BYTE PTR [edx+0x51],bh
  41b2b4:	aaa    
  41b2b5:	pop    ebp
  41b2b6:	mov    al,ds:0xfd297b70
  41b2bb:	push   ds
  41b2bc:	add    BYTE PTR [eax],al
  41b2be:	add    BYTE PTR [ebp-0x72d8e817],dl
  41b2c4:	loop   0x41b2f6
  41b2c6:	and    BYTE PTR [ecx],bl
  41b2c8:	mov    edx,0x5574b436
  41b2cd:	or     eax,eax
  41b2cf:	xor    ebp,edi
  41b2d1:	jb     0x41b2c2
  41b2d3:	stc    
  41b2d4:	inc    esp
  41b2d5:	mov    al,ds:0x7eef2b60
  41b2da:	loop   0x41b2d5
  41b2dc:	loop   0x41b2da
  41b2de:	fisub  WORD PTR [esi-0x7b]
  41b2e1:	in     al,dx
  41b2e2:	jmp    0xd2c0b9d7
  41b2e7:	jmp    0xb803:0xcbc6fce2
  41b2ee:	fst    QWORD PTR [edx+eiz*8-0x4]
  41b2f2:	repnz sub BYTE PTR [ebp+0x52],dl
  41b2f6:	fidiv  WORD PTR [esi-0xf170041]
  41b2fc:	popa   
  41b2fd:	stc    
  41b2fe:	call   DWORD PTR [edx+eiz*8]
  41b301:	cld    
  41b302:	pop    ss
  41b303:	pop    ds
  41b304:	push   ds
  41b305:	xlat   BYTE PTR ds:[ebx]
  41b306:	fisubr WORD PTR [ebp-0x31]
  41b309:	(bad)  
  41b30a:	call   0x7dbc42ff
  41b30f:	scas   al,BYTE PTR es:[edi]
  41b310:	pop    ss
  41b311:	fnstenv [eax+0x73baad]
  41b317:	jp     0x41b35d
  41b319:	cld    
  41b31a:	and    BYTE PTR [eax+eiz*1-0x3],bh
  41b31e:	pop    esi
  41b31f:	(bad)  
  41b320:	push   esp
  41b321:	xor    BYTE PTR [edx],dl
  41b323:	add    BYTE PTR [eax],al
  41b325:	add    BYTE PTR [ebx+edi*2],dh
  41b328:	jo     0x41b2da
  41b32a:	(bad)  
  41b32b:	push   ebp
  41b32c:	in     al,0x0
  41b32e:	inc    ecx
  41b32f:	and    BYTE PTR [edi+edi*8-0x4b4c1],dl
  41b336:	add    eax,0x5449260
  41b33b:	repnz sti 
  41b33d:	call   0x421715
  41b342:	bswap  ebx
  41b344:	or     eax,DWORD PTR [ebp+0xb25]
  41b34a:	icebp  
  41b34b:	xor    dh,BYTE PTR ds:0xbb5f127d
  41b351:	mov    eax,DWORD PTR [edi]
  41b353:	mov    edi,fs
  41b355:	mov    esi,0x2b942011
  41b35a:	pop    ss
  41b35b:	dec    edi
  41b35c:	sti    
  41b35d:	call   DWORD PTR [ebp+0x2f]
  41b360:	mov    ebp,0x8a5cfb77
  41b365:	push   esp
  41b366:	inc    ebp
  41b367:	repz sti 
  41b369:	cmp    BYTE PTR [edx+0x59],dl
  41b36c:	adc    eax,DWORD PTR [ebx-0x4b789]
  41b372:	test   DWORD PTR ds:0x88d07374,eax
  41b378:	push   ecx
  41b379:	inc    DWORD PTR [ebp+0x564d87f3]
  41b37f:	sub    al,0x3d
  41b381:	add    esi,edi
  41b383:	test   DWORD PTR [di-0x7a],edi
  41b387:	sub    eax,0xd859
  41b38c:	add    bh,bh
  41b38e:	dec    edi
  41b38f:	aaa    
  41b390:	jge    0x41b404
  41b392:	pop    ebx
  41b393:	pop    eax
  41b394:	add    BYTE PTR ds:0x357509f3,0x2f
  41b39b:	jns    0x41b395
  41b39d:	stc    
  41b39e:	std    
  41b39f:	jg     0x41b3e0
  41b3a1:	loopne 0x41b3fb
  41b3a3:	and    esi,esi
  41b3a5:	mov    edi,ds
  41b3a7:	sbb    al,0x75
  41b3a9:	repz fdivr DWORD PTR [edi-0x46]
  41b3ad:	xor    edx,DWORD PTR [ecx-0x14]
  41b3b0:	cld    
  41b3b1:	repnz mov eax,ds:0xad86810e
  41b3b7:	jmp    0x41b3b5
  41b3b9:	mov    esp,0x700774eb
  41b3be:	jb     0x41b405
  41b3c0:	std    
  41b3c1:	lods   al,BYTE PTR ds:[esi]
  41b3c2:	sub    bh,bh
  41b3c4:	jb     0x41b3b5
  41b3c6:	test   al,0x79
  41b3c8:	jp     0x41b369
  41b3ca:	into   
  41b3cb:	dec    ebp
  41b3cc:	les    ebp,FWORD PTR [eax+0x72]
  41b3cf:	xor    eax,0xda088cfd
  41b3d4:	rol    BYTE PTR [edi-0x67cf1720],cl
  41b3da:	add    al,0x12
  41b3dc:	xor    DWORD PTR [eax+0x2844eb9c],ebx
  41b3e2:	leave  
  41b3e3:	outs   dx,DWORD PTR ds:[esi]
  41b3e4:	pop    eax
  41b3e5:	jb     0x41b3cb
  41b3e7:	or     bh,ah
  41b3e9:	pop    esp
  41b3ea:	mov    eax,0x5270506f
  41b3ef:	in     al,0xff
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    al,al
  41b3f5:	fnstcw WORD PTR [ebp-0x76]
  41b3f8:	jmp    DWORD PTR [eax-0x3dc30318]
  41b3fe:	ins    BYTE PTR es:[edi],dx
  41b3ff:	test   al,0xb0
  41b401:	in     eax,dx
  41b402:	pop    edx
  41b403:	hlt    
  41b404:	retf   
  41b405:	jb     0x41b3d4
  41b407:	jae    0x41b401
  41b409:	in     al,0xc8
  41b40b:	jae    0x41b401
  41b40d:	(bad)
  41b411:	in     eax,dx
  41b412:	add    BYTE PTR [eax],al
  41b414:	js     0x41b430
  41b416:	fadd   QWORD PTR [edx-0x7edf26c6]
  41b41c:	jle    0x41b3df
  41b41e:	add    ecx,DWORD PTR ds:0x43565
  41b424:	repz push es
  41b426:	adc    bh,BYTE PTR [ecx]
  41b428:	sti    
  41b429:	xchg   ecx,eax
  41b42a:	mov    bl,0x13
  41b42c:	je     0x41b43f
  41b42e:	bound  edi,QWORD PTR [ecx]
  41b430:	(bad)  [edx]
  41b432:	pushf  
  41b433:	sti    
  41b434:	jne    0x41b487
  41b436:	jmp    0x41b414
  41b438:	jb     0x41b441
  41b43a:	out    0x3,eax
  41b43c:	jb     0x41b40d
  41b43e:	xor    eax,0xb39239df
  41b443:	pmulhuw mm1,QWORD PTR [ebx+0x7]
  41b447:	jo     0x41b42e
  41b449:	mov    DWORD PTR [eax+eax*1],ebx
  41b44c:	pop    ds
  41b44d:	sub    DWORD PTR [eax+eax*1+0x60],esp
  41b451:	fisttp WORD PTR ds:0x72378feb
  41b457:	add    DWORD PTR [eax],0xddc00000
  41b45d:	std    
  41b45e:	jmp    0x446a:0x53dec773
  41b465:	xlat   BYTE PTR ds:[ebx]
  41b466:	xchg   BYTE PTR [edi+ecx*1+0x1701eb37],ch
  41b46d:	cmc    
  41b46e:	inc    ebx
  41b46f:	xrelease mov DWORD PTR [edx+0x7f541df7],ebp
  41b476:	imul   esi,ebp,0x4663838f
  41b47c:	fidivr WORD PTR [ebp-0x49ec9682]
  41b482:	jmp    0x4a5b:0x6fd3de37
  41b489:	out    0x86,eax
  41b48b:	imul   esp,DWORD PTR [edi-0x62],0x1b071fea
  41b492:	add    dl,ah
  41b494:	mov    BYTE PTR [ecx+0x4f447bfb],0x8c
  41b49b:	fcmovne st,st(0)
  41b49d:	xchg   edi,eax
  41b49e:	jmp    0x41b513
  41b4a0:	(bad)  
  41b4a2:	jmp    0xf4cd:0xa931028b
  41b4a9:	mov    BYTE PTR [eax+edi*2+0x5d79532e],bh
  41b4b0:	push   ecx
  41b4b1:	adc    BYTE PTR [eax-0x1],ah
  41b4b4:	(bad)  
  41b4b5:	push   edx
  41b4b6:	ins    DWORD PTR es:[edi],dx
  41b4b7:	in     eax,dx
  41b4b8:	cmp    DWORD PTR [eax-0x16fce090],edx
  41b4be:	jmp    0x57dd:0x1e000000
  41b4c5:	xchg   esi,eax
  41b4c6:	sub    al,BYTE PTR [eax-0x39]
  41b4c9:	sub    eax,DWORD PTR [eax]
  41b4cb:	pop    es
  41b4cc:	push   ebx
  41b4cd:	jb     0x41b48b
  41b4cf:	dec    esp
  41b4d0:	push   ecx
  41b4d1:	mov    bh,0x1d
  41b4d3:	pop    ecx
  41b4d4:	or     BYTE PTR [esi-0x4880777],bh
  41b4da:	xor    BYTE PTR [edi],al
  41b4dc:	xchg   DWORD PTR [esp+ecx*4-0x216c2a3],ebp
  41b4e3:	retf   
  41b4e4:	jae    0x41b4a3
  41b4e6:	idiv   bl
  41b4e8:	adc    DWORD PTR [edx],0xffffffdc
  41b4eb:	sub    ch,BYTE PTR [ecx]
  41b4ed:	fsubrp st(6),st
  41b4ef:	mov    dl,0x83
  41b4f1:	ret    0xf3e3
  41b4f4:	mov    ebx,esi
  41b4f6:	aam    0xbe
  41b4f8:	jae    0x41b503
  41b4fa:	dec    edx
  41b4fb:	fwait
  41b4fc:	add    ebx,edi
  41b4fe:	dec    ebx
  41b4ff:	fcom   DWORD PTR [edx]
  41b502:	ss pop eax
  41b504:	push   es
  41b505:	sub    eax,DWORD PTR [edi]
  41b507:	add    edx,DWORD PTR [esi]
  41b509:	xor    al,0x48
  41b50b:	pop    ebp
  41b50c:	cmp    ch,cl
  41b50e:	xchg   esp,eax
  41b50f:	adc    BYTE PTR [edi],bh
  41b511:	jae    0x41b4fb
  41b513:	inc    esp
  41b514:	test   BYTE PTR [edx-0x5fcf4b7c],dh
  41b51a:	mov    esp,es
  41b51c:	jae    0x41b51e
  41b51e:	xor    DWORD PTR [edx+0x42],ebx
  41b521:	cld    
  41b522:	(bad)  
  41b523:	push   ss
  41b524:	std    
  41b525:	jg     0x41b527
  41b527:	add    BYTE PTR [eax],al
  41b529:	cmp    al,0x24
  41b52b:	jno    0x41b4e3
  41b52d:	mov    eax,ds:0xd4740815
  41b532:	mov    BYTE PTR [ebp-0x1],dh
  41b535:	hlt    
  41b536:	imul   esp,DWORD PTR [edi-0x2f64973],0xffffffb1
  41b53d:	hlt    
  41b53e:	pop    ecx
  41b53f:	ret    
  41b540:	call   0x3cc9a6
  41b545:	push   edi
  41b546:	ret    
  41b547:	jno    0x41b552
  41b549:	push   esp
  41b54a:	out    dx,eax
  41b54b:	adc    DWORD PTR [eax-0x38],edi
  41b54e:	dec    eax
  41b54f:	add    bl,ch
  41b551:	cwde   
  41b552:	sti    
  41b553:	lds    ecx,FWORD PTR [ebx+0x185d44f]
  41b559:	adc    ecx,ecx
  41b55b:	out    0x2,eax
  41b55d:	test   eax,0xc35b5ac8
  41b562:	les    eax,FWORD PTR [eax+eax*1]
  41b565:	addr16 pop ebx
  41b567:	jmp    0x4f70a3ef
  41b56c:	push   edi
  41b56d:	jo     0x41b593
  41b56f:	pop    ebx
  41b570:	push   edi
  41b571:	or     edx,ecx
  41b573:	mov    DWORD PTR [ebp-0x6a],eax
  41b576:	xor    edx,DWORD PTR [eax-0x1]
  41b579:	push   edi
  41b57a:	sub    al,0x16
  41b57c:	inc    eax
  41b57d:	pop    edx
  41b57e:	adc    eax,eax
  41b580:	inc    eax
  41b581:	fstp   DWORD PTR [ebx-0x34e876f8]
  41b587:	test   DWORD PTR [ebp+0x76],eax
  41b58a:	popa   
  41b58b:	inc    edx
  41b58c:	cld    
  41b58d:	add    BYTE PTR [eax],al
  41b58f:	add    bh,cl
  41b591:	sbb    al,0xc4
  41b593:	push   eax
  41b594:	jmp    0x22b7b0ca
  41b599:	popa   
  41b59a:	jp     0x41b560
  41b59c:	repz je 0x41b5ac
  41b59f:	pusha  
  41b5a0:	out    0x2d,al
  41b5a2:	add    al,0x83
  41b5a4:	xor    ebx,ebx
  41b5a6:	push   DWORD PTR [ecx]
  41b5a8:	xor    esi,DWORD PTR [edi-0x4e]
  41b5ab:	push   esp
  41b5ad:	in     eax,dx
  41b5ae:	pop    edx
  41b5af:	adc    BYTE PTR [ebp-0x7a],al
  41b5b2:	jle    0x41b5bd
  41b5b4:	in     al,0x64
  41b5b6:	call   0x3e9a7d2d
  41b5bb:	fmul   st,st(3)
  41b5bd:	inc    ebx
  41b5be:	ds std 
  41b5c0:	int3   
  41b5c1:	data16 (bad) 
  41b5c3:	cmp    BYTE PTR [eax-0x12171f67],dh
  41b5c9:	pop    eax
  41b5ca:	ds lock jae 0x41b5a3
  41b5ce:	pop    ss
  41b5cf:	jae    0x41b5c9
  41b5d1:	sub    al,0x36
  41b5d3:	hlt    
  41b5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d5:	stos   BYTE PTR es:[edi],al
  41b5d6:	lock ss repnz outs dx,DWORD PTR ds:[esi]
  41b5db:	jmp    0x41b645
  41b5dd:	stos   BYTE PTR es:[edi],al
  41b5de:	in     al,0x88
  41b5e0:	ds bnd jne 0x41b65f
  41b5e4:	sti    
  41b5e5:	out    dx,al
  41b5e6:	jne    0x41b62c
  41b5e8:	repnz enter 0x72c3,0xef
  41b5ed:	mov    al,ds:0x5f6e8c0
  41b5f2:	pop    es
  41b5f3:	pop    es
  41b5f4:	add    BYTE PTR [eax],al
  41b5f6:	add    BYTE PTR [esp+eiz*8+0x7a],ah
  41b5fa:	inc    ebp
  41b5fb:	imul   DWORD PTR [eax]
  41b5fd:	shl    DWORD PTR [edx-0x16],0xb4
  41b601:	sub    eax,0xe5e6b0e8
  41b606:	cld    
  41b607:	pop    eax
  41b608:	mov    fs,esp
  41b60a:	jb     0x41b653
  41b60c:	sub    eax,0xfd4372e5
  41b611:	fld    TBYTE PTR [edi-0x6]
  41b614:	lods   al,BYTE PTR ds:[esi]
  41b615:	in     al,0xfc
  41b617:	sahf   
  41b618:	push   es
  41b619:	mov    ds:0x7202b67b,eax
  41b61e:	cmp    DWORD PTR [edi],ebx
  41b620:	fistp  DWORD PTR [ebx]
  41b622:	in     al,dx
  41b623:	jns    0x41b667
  41b625:	fild   WORD PTR [ebx+eiz*4]
  41b628:	out    dx,al
  41b629:	and    ch,bh
  41b62b:	(bad)  
  41b62c:	fidiv  DWORD PTR [ecx+0x3e]
  41b62f:	out    dx,eax
  41b630:	(bad)  
  41b631:	out    0x16,al
  41b633:	jp     0x41b676
  41b635:	jecxz  0x41b6b2
  41b637:	or     BYTE PTR [edx],al
  41b639:	jb     0x41b67c
  41b63b:	out    0x47,eax
  41b63d:	jo     0x41b67d
  41b63f:	jmp    0x41b6a1
  41b641:	bound  eax,QWORD PTR [ecx-0x51]
  41b644:	popa   
  41b645:	pusha  
  41b646:	test   DWORD PTR ds:[ebp-0x108c2c55],0x4ee56fe9
  41b651:	mov    ebx,0xdd397b00
  41b656:	(bad)  
  41b658:	shr    BYTE PTR [ebp+esi*8-0xe000000],0xed
  41b660:	loop   0x41b61f
  41b662:	cs or  eax,ebp
  41b665:	mov    bl,0x8d
  41b667:	cmp    DWORD PTR [edx-0x18fc4d44],esi
  41b66d:	push   eax
  41b66e:	push   0xffffffeb
  41b670:	imul   ebx,eax,0xe69e30e4
  41b676:	loope  0x41b686
  41b678:	pop    esp
  41b679:	jno    0x41b6de
  41b67b:	push   ss
  41b67c:	out    0xdb,al
  41b67e:	dec    esi
  41b67f:	(bad)  
  41b681:	out    0x70,al
  41b683:	(bad)  
  41b684:	pop    edx
  41b685:	ins    DWORD PTR es:[edi],dx
  41b686:	jp     0x41b6cc
  41b688:	sar    DWORD PTR [edx-0x47],cl
  41b68b:	fisubr WORD PTR [edi+edi*8+0x4071da3d]
  41b692:	aas    
  41b693:	(bad)  
  41b694:	jmp    eax
  41b696:	mov    al,0x82
  41b698:	(bad)  
  41b699:	xor    al,0x16
  41b69b:	inc    edx
  41b69c:	cmp    DWORD PTR [ebx+eiz*1],ebp
  41b69f:	push   esi
  41b6a0:	add    ebp,DWORD PTR [ecx-0x38]
  41b6a3:	sub    esi,DWORD PTR [ebx-0x64]
  41b6a6:	jo     0x41b6ba
  41b6a8:	sub    eax,0xc017f115
  41b6ad:	ins    BYTE PTR es:[edi],dx
  41b6ae:	xor    BYTE PTR [esi+0x3d],dl
  41b6b1:	imul   ecx,DWORD PTR [eax+0x1ffdfcd9],0xcda18137
  41b6bb:	loope  0x41b6b1
  41b6bd:	lods   eax,DWORD PTR ds:[esi]
  41b6be:	aad    0xda
  41b6c0:	mov    BYTE PTR [ecx+0x0],bl
  41b6c3:	add    BYTE PTR [eax],al
  41b6c5:	jae    0x41b69a
  41b6c7:	jae    0x41b6cc
  41b6c9:	das    
  41b6ca:	pop    es
  41b6cb:	add    cl,bh
  41b6cd:	lock ins BYTE PTR es:[edi],dx
  41b6cf:	add    bl,dl
  41b6d1:	lock xor ch,bh
  41b6d4:	aam    0x90
  41b6d6:	idiv   BYTE PTR [edi]
  41b6d8:	jmp    0xd9b45050
  41b6dd:	outs   dx,DWORD PTR ss:[esi]
  41b6df:	out    0x24,eax
  41b6e1:	lock push es
  41b6e3:	xor    DWORD PTR [ecx],0xabe6e18d
  41b6e9:	xchg   ebp,eax
  41b6ea:	fimul  DWORD PTR [eax+0x5cef3611]
  41b6f0:	icebp  
  41b6f1:	xchg   ebp,eax
  41b6f2:	(bad)  
  41b6f4:	je     0x41b676
  41b6f6:	loope  0x41b74c
  41b6f8:	loope  0x41b74f
  41b6fa:	(bad)  
  41b6fc:	je     0x41b752
  41b6fe:	loope  0x41b74c
  41b700:	icebp  
  41b701:	push   edi
  41b702:	fimul  DWORD PTR [eax-0x38c7515a]
  41b708:	stos   DWORD PTR es:[edi],eax
  41b709:	repz push es
  41b70b:	push   esi
  41b70c:	bound  edi,QWORD PTR [edi]
  41b70e:	pop    ecx
  41b70f:	ds add dh,dh
  41b712:	imul   edi,ebp,0x2b20ca45
  41b718:	jne    0x41b735
  41b71a:	sbb    edx,DWORD PTR [ebx-0x1]
  41b71d:	fisub  WORD PTR [esi]
  41b71f:	or     al,0x56
  41b721:	push   ebp
  41b722:	or     DWORD PTR [ebx+edx*1-0x3f7efd36],ebx
  41b729:	add    BYTE PTR [eax],al
  41b72b:	add    bh,ch
  41b72d:	add    ecx,DWORD PTR [edx-0x42a6cbfc]
  41b733:	je     0x41b753
  41b735:	and    DWORD PTR [eax],esp
  41b737:	je     0x41b753
  41b739:	and    DWORD PTR ds:0x920de72,eax
  41b73f:	jbe    0x41b713
  41b741:	and    BYTE PTR [esi],bh
  41b743:	je     0x41b713
  41b745:	and    BYTE PTR [ebx],ch
  41b747:	jne    0x41b717
  41b749:	xchg   esp,eax
  41b74a:	std    
  41b74b:	jmp    0x718:0x5ec016d8
  41b752:	add    BYTE PTR [ebp+0x41],dl
  41b755:	mov    edi,0x179aec7f
  41b75a:	lds    edx,FWORD PTR [edi-0x57]
  41b75d:	jecxz  0x41b6e4
  41b75f:	dec    ebp
  41b760:	ficomp WORD PTR [edx+0x4a]
  41b763:	(bad)  
  41b764:	and    esp,DWORD PTR [eax-0x10]
  41b767:	mov    DWORD PTR [edi-0x14],eax
  41b76a:	xor    eax,0x82d3924d
  41b76f:	ss fwait
  41b771:	add    al,0x0
  41b773:	push   esi
  41b774:	loope  0x41b77a
  41b776:	das    
  41b777:	leave  
  41b778:	mov    bl,0x11
  41b77a:	hlt    
  41b77b:	je     0x41b7d1
  41b77d:	test   BYTE PTR [eax],bh
  41b77f:	pop    ds
  41b780:	xchg   esp,eax
  41b781:	imul   ecx,DWORD PTR [eax],0xe5d727ff
  41b787:	or     eax,0x8d00044b
  41b78c:	repz stc 
  41b78e:	add    cl,BYTE PTR [edx-0x13000000]
  41b794:	or     DWORD PTR [eax],ebp
  41b796:	or     eax,0x7376
  41b79b:	repz push esp
  41b79d:	ds hlt 
  41b79f:	sub    al,0x2b
  41b7a1:	lock xor BYTE PTR [ebx],0xb9
  41b7a5:	jge    0x41b798
  41b7a7:	repz in eax,dx
  41b7a9:	add    BYTE PTR [ecx-0xae82a62],cl
  41b7af:	jae    0x41b7a4
  41b7b1:	in     eax,0xff
  41b7b3:	ja     0x41b7d7
  41b7b5:	add    edi,edi
  41b7b7:	sbb    BYTE PTR [esi-0x17130281],0x7a
  41b7be:	fpatan 
  41b7c0:	in     eax,dx
  41b7c1:	add    BYTE PTR [eax-0x7d0c66d5],al
  41b7c7:	ret    0xed
  41b7ca:	add    BYTE PTR [ebx+0x6e],cl
  41b7cd:	ins    BYTE PTR es:[edi],dx
  41b7ce:	inc    eax
  41b7cf:	repz ret 
  41b7d1:	cli    
  41b7d2:	aas    
  41b7d3:	and    al,0x46
  41b7d5:	daa    
  41b7d6:	std    
  41b7d7:	mov    esp,0xe4bf7d40
  41b7dc:	popa   
  41b7dd:	test   al,0xff
  41b7df:	lods   al,BYTE PTR ds:[esi]
  41b7e0:	in     eax,dx
  41b7e1:	mov    edx,0xd9eda542
  41b7e6:	mov    cl,0xf3
  41b7e8:	in     eax,dx
  41b7e9:	add    BYTE PTR [edx-0x13],ch
  41b7ec:	cwde   
  41b7ed:	daa    
  41b7ee:	cmc    
  41b7ef:	add    eax,0xfc8058d9
  41b7f4:	lods   eax,DWORD PTR ds:[esi]
  41b7f5:	add    al,ch
  41b7f7:	add    BYTE PTR [eax],al
  41b7f9:	add    bl,bl
  41b7fb:	add    ah,ah
  41b7fd:	cld    
  41b7fe:	outs   dx,DWORD PTR ds:[esi]
  41b7ff:	sub    eax,0xaa35076d
  41b804:	loop   0x41b804
  41b806:	pop    ebx
  41b807:	xor    DWORD PTR [ecx],eax
  41b809:	add    bl,dh
  41b80b:	push   es
  41b80c:	lods   eax,DWORD PTR ds:[esi]
  41b80d:	dec    ecx
  41b80e:	push   esi
  41b80f:	push   es
  41b810:	out    dx,al
  41b811:	cdq    
  41b812:	mov    cl,0xd7
  41b814:	in     eax,0x99
  41b816:	jl     0x41b886
  41b818:	push   esi
  41b819:	inc    esp
  41b81a:	repz sbb edi,DWORD PTR [esi-0xd2821a6]
  41b821:	mov    BYTE PTR [esi+ebp*4+0x417a0429],ch
  41b828:	mov    bh,0x91
  41b82a:	mov    al,0xfe
  41b82c:	out    0xeb,eax
  41b82e:	adc    eax,ebx
  41b830:	popf   
  41b831:	jecxz  0x41b8a3
  41b833:	(bad)  
  41b834:	sbb    ecx,DWORD PTR [edi]
  41b836:	add    eax,0x79848e41
  41b83b:	xlat   BYTE PTR ds:[ebx]
  41b83c:	repnz push ebp
  41b83e:	and    al,0xeb
  41b840:	sbb    eax,0x764ca513
  41b845:	mov    fs,WORD PTR [ebx+ebx*2-0xa]
  41b849:	inc    ebx
  41b84a:	repz loope 0x41b7fd
  41b84d:	sbb    al,0x28
  41b84f:	fcmovnbe st,st(3)
  41b851:	push   ecx
  41b852:	jae    0x41b8a8
  41b854:	push   ebp
  41b855:	add    al,0x40
  41b857:	aas    
  41b858:	or     edx,DWORD PTR [ecx]
  41b85a:	inc    edi
  41b85b:	dec    ebx
  41b85c:	add    ecx,DWORD PTR [esi]
  41b85e:	add    BYTE PTR [eax],al
  41b860:	add    BYTE PTR [edi],bh
  41b862:	inc    edi
  41b863:	sti    
  41b864:	or     al,0x27
  41b866:	adc    esi,ebx
  41b868:	sub    DWORD PTR [eax],esp
  41b86a:	and    al,0x62
  41b86c:	dec    ecx
  41b86d:	jmp    0x41b890
  41b86f:	xchg   DWORD PTR cs:[esp+ecx*1+0xc192695],ebx
  41b877:	jg     0x41b804
  41b879:	inc    DWORD PTR [esi-0x19]
  41b87c:	nop
  41b87d:	xor    dh,dh
  41b87f:	out    0x33,eax
  41b881:	jbe    0x41b87f
  41b883:	pop    edx
  41b884:	imul   DWORD PTR [edi+eax*1]
  41b887:	add    BYTE PTR [edi+ebp*1+0x59],ch
  41b88b:	or     esp,DWORD PTR [edx-0x56]
  41b88e:	into   
  41b88f:	sub    BYTE PTR [edi+edi*1],0x9
  41b893:	(bad)  
  41b894:	in     eax,0x48
  41b896:	imul   al
  41b898:	loope  0x41b910
  41b89a:	or     al,0x89
  41b89c:	sbb    al,0x1f
  41b89e:	mov    es,WORD PTR [ebx]
  41b8a0:	loopne 0x41b8f3
  41b8a2:	dec    ecx
  41b8a3:	clc    
  41b8a4:	jb     0x41b839
  41b8a6:	(bad)  
  41b8a7:	inc    esp
  41b8a8:	pusha  
  41b8a9:	xchg   ebx,eax
  41b8aa:	(bad)  
  41b8ab:	cmp    BYTE PTR [edi+ebp*8],ch
  41b8ae:	add    eax,DWORD PTR [edx-0x32ced49]
  41b8b4:	aas    
  41b8b5:	jl     0x41b900
  41b8b7:	clc    
  41b8b8:	ret    0x739
  41b8bb:	inc    ebx
  41b8bc:	loope  0x41b86f
  41b8be:	int    0xc1
  41b8c0:	in     eax,dx
  41b8c1:	lock cmp al,0x89
  41b8c4:	jns    0x41b8c6
  41b8c6:	add    BYTE PTR [eax],al
  41b8c8:	sub    DWORD PTR [eax],ebx
  41b8ca:	sar    BYTE PTR [edx-0x3abbe32f],0xe0
  41b8d1:	add    al,BYTE PTR [esi+0x6f06e]
  41b8d7:	mov    edx,0xf924417d
  41b8dc:	jbe    0x41b8df
  41b8de:	or     eax,0x72f59f69
  41b8e3:	out    dx,eax
  41b8e4:	stos   BYTE PTR es:[edi],al
  41b8e5:	or     DWORD PTR [eax],esi
  41b8e7:	adc    bl,BYTE PTR [edx+ebp*2+0x58003080]
  41b8ee:	or     ch,BYTE PTR [ecx-0x41]
  41b8f1:	and    BYTE PTR [esp+ebp*8+0x70],dh
  41b8f5:	fsubr  QWORD PTR ds:0xf7558c94
  41b8fb:	test   al,0x1d
  41b8fd:	or     al,BYTE PTR [eax+0x125bdf10]
  41b903:	add    bh,bh
  41b905:	sbb    ah,BYTE PTR [ecx+0x72fef080]
  41b90b:	add    eax,0x755bb2da
  41b910:	push   edi
  41b911:	mov    ebp,esi
  41b913:	jp     0x41b8c9
  41b915:	icebp  
  41b916:	mov    ecx,edx
  41b918:	call   0x7ff7:0x3b8000e4
  41b91f:	cli    
  41b920:	push   ebx
  41b921:	neg    BYTE PTR [ebp+0x7cc32cc3]
  41b927:	jecxz  0x41b93e
  41b929:	mov    DWORD PTR [edi+0x30],edi
  41b92f:	sbb    BYTE PTR [ebx-0x9ec0684],dl
  41b935:	popf   
  41b936:	ret    0xc44c
  41b939:	jl     0x41b91d
  41b93b:	adc    eax,0x5430be89
  41b940:	(bad)  
  41b941:	das    
  41b942:	and    eax,0x5c849808
  41b947:	cmp    cl,BYTE PTR [eax]
  41b949:	mov    BYTE PTR [edx+ebp*4+0xa],dl
  41b94d:	jg     0x41b90f
  41b94f:	fsub   st,st(3)
  41b951:	inc    DWORD PTR [edi+0x4042f8be]
  41b957:	adc    DWORD PTR [edi+0x24],esp
  41b95a:	adc    al,0xdd
  41b95c:	mov    dh,BYTE PTR [edi-0x1]
  41b95f:	sbb    eax,0x145f57e6
  41b964:	inc    DWORD PTR ds:0x4ca8c00
  41b96a:	add    BYTE PTR [ecx],ah
  41b96c:	aas    
  41b96d:	and    al,0x8
  41b96f:	mov    cl,0xc8
  41b971:	(bad)  
  41b972:	aas    
  41b973:	test   BYTE PTR [esp+ebx*1],bh
  41b976:	call   0x3cc58c
  41b97b:	add    DWORD PTR [ebx+0x71f3f681],edi
  41b981:	icebp  
  41b982:	cld    
  41b983:	pop    es
  41b984:	retf   0xfd0c
  41b987:	inc    ecx
  41b989:	or     al,0xe8
  41b98b:	sub    ch,dl
  41b98d:	(bad)  
  41b98f:	js     0x41b9b5
  41b991:	jmp    0x41b994
  41b993:	add    BYTE PTR [eax],al
  41b995:	add    BYTE PTR [eax],ah
  41b997:	push   ds
  41b998:	inc    edx
  41b999:	ret    0xddeb
  41b99c:	xor    eax,0xed615f89
  41b9a1:	or     esi,DWORD PTR [eax+0x3b]
  41b9a4:	hlt    
  41b9a5:	add    eax,ebp
  41b9a7:	mov    bl,0xdf
  41b9a9:	jb     0x41b98e
  41b9ab:	int3   
  41b9ac:	cmc    
  41b9ad:	ja     0x41b9b0
  41b9af:	push   ds
  41b9b0:	add    al,0x87
  41b9b2:	scas   al,BYTE PTR es:[edi]
  41b9b3:	cdq    
  41b9b4:	jmp    0x41b9b9
  41b9b6:	jo     0x41ba03
  41b9b8:	loopne 0x41b9b9
  41b9ba:	imul   esp,DWORD PTR [ebx],0xe1be890c
  41b9c0:	xor    edx,DWORD PTR [esi+0x76]
  41b9c3:	mov    dl,0x8
  41b9c5:	mov    DWORD PTR [esi-0xce17c27],ebp
  41b9cb:	pop    eax
  41b9cc:	mov    ecx,0xdbf27a54
  41b9d1:	cmp    BYTE PTR [ebp+0x6e514dd0],ch
  41b9d7:	loop   0x41b9b1
  41b9d9:	out    0x1f,eax
  41b9db:	cdq    
  41b9dc:	(bad)  
  41b9de:	js     0x41ba45
  41b9e0:	adc    al,0xd2
  41b9e2:	or     BYTE PTR [eax],bh
  41b9e4:	push   ebp
  41b9e5:	inc    ebx
  41b9e6:	clc    
  41b9e7:	mov    ds:0x6e27308,al
  41b9ec:	xor    eax,0x83a32710
  41b9f1:	jp     0x41b9f6
  41b9f3:	fist   WORD PTR [ebp+eax*2+0x70]
  41b9f7:	mov    ds:0x1f0,al
  41b9fc:	add    BYTE PTR [edi],bl
  41b9fe:	pop    es
  41b9ff:	test   al,0x1c
  41ba01:	or     bl,dl
  41ba03:	xchg   esp,eax
  41ba04:	std    
  41ba05:	xchg   DWORD PTR [ecx+0x13],ebx
  41ba08:	xor    al,0x7e
  41ba0a:	pop    ecx
  41ba0b:	mul    eax
  41ba0d:	loope  0x41ba81
  41ba0f:	fld    DWORD PTR [ebx-0xd]
  41ba12:	mov    DWORD PTR [esi],esp
  41ba14:	push   esi
  41ba15:	in     al,dx
  41ba16:	jg     0x41b9c3
  41ba18:	(bad)  
  41ba1a:	adc    ch,dl
  41ba1c:	sbb    eax,0x417251df
  41ba21:	dec    ebx
  41ba22:	bsr    edx,DWORD PTR [edx-0x7e]
  41ba26:	pop    ss
  41ba27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba28:	aas    
  41ba29:	popf   
  41ba2a:	das    
  41ba2b:	mov    al,ds:0x6a06e4c2
  41ba30:	popa   
  41ba31:	add    ecx,DWORD PTR [eax]
  41ba33:	xor    al,0xd5
  41ba35:	jnp    0x41ba80
  41ba37:	scas   eax,DWORD PTR es:[edi]
  41ba38:	mov    ebp,DWORD PTR [ecx+0x6dd401fa]
  41ba3e:	adc    eax,0xa79e792
  41ba43:	dec    BYTE PTR [edx+0x53af0f03]
  41ba49:	pop    ds
  41ba4a:	sbb    ah,0x83
  41ba4d:	std    
  41ba4e:	and    eax,0xd07309fb
  41ba53:	out    dx,eax
  41ba54:	pop    edi
  41ba55:	test   BYTE PTR [esi-0x2a1ee91],0x69
  41ba5c:	(bad)  
  41ba5e:	push   ebp
  41ba5f:	jmp    0x41b9ed
  41ba61:	add    BYTE PTR [eax],al
  41ba63:	add    BYTE PTR [eax+0x7c],al
  41ba66:	push   edx
  41ba67:	inc    edx
  41ba68:	sub    eax,0xd352570e
  41ba6d:	xchg   BYTE PTR [eax+0x2],dl
  41ba70:	inc    ecx
  41ba71:	call   0xfab3:0x7036169
  41ba78:	jae    0x41bace
  41ba7a:	add    cl,bl
  41ba7c:	neg    DWORD PTR [edx+0xc]
  41ba7f:	push   0x12
  41ba81:	test   DWORD PTR [ecx],0x5a7f829c
  41ba87:	and    DWORD PTR [eax],esi
  41ba89:	loopne 0x41ba96
  41ba8b:	bound  esi,QWORD PTR [edx]
  41ba8d:	fisttp DWORD PTR [eax-0x16b8675c]
  41ba93:	jmp    0xfac2:0x72f44579
  41ba9a:	sub    BYTE PTR [edx],ch
  41ba9c:	outs   dx,BYTE PTR ds:[esi]
  41ba9d:	shr    ecx,1
  41ba9f:	into   
  41baa0:	cmp    esi,0x1c
  41baa3:	je     0x41bab1
  41baa5:	or     bh,bh
  41baa7:	jb     0x41ba9a
  41baa9:	adc    ah,BYTE PTR [eax]
  41baab:	pop    ebp
  41baac:	out    dx,eax
  41baad:	adc    al,BYTE PTR [edi]
  41baaf:	dec    ebp
  41bab0:	in     al,dx
  41bab1:	adc    cl,BYTE PTR [ebx]
  41bab3:	inc    esi
  41bab4:	lock inc edi
  41bab6:	jmp    0x14873489
  41babb:	add    ch,BYTE PTR [eax]
  41babd:	mov    DWORD PTR [edi],eax
  41babf:	bound  esi,QWORD PTR [ecx]
  41bac1:	jmp    0xd36f612b
  41bac6:	push   edx
  41bac7:	jb     0x41bac9
  41bac9:	add    BYTE PTR [eax],al
  41bacb:	adc    al,0x41
  41bacd:	dec    edi
  41bace:	aas    
  41bacf:	(bad)  
  41bad0:	shl    DWORD PTR [edx-0x7],cl
  41bad3:	adc    eax,0x30db77f5
  41bad8:	pop    es
  41bad9:	mov    esp,esi
  41badb:	clc    
  41badc:	mov    DWORD PTR [edx+0x71],eax
  41badf:	imul   eax,DWORD PTR [esp+ecx*1+0x5c],0x5e3908f4
  41bae7:	and    DWORD PTR [edi+0x51],ecx
  41baea:	jb     0x41ba99
  41baec:	push   ds
  41baed:	(bad)  
  41baee:	mov    ecx,0x4e55fd4a
  41baf3:	mov    ebx,0x5a001635
  41baf8:	add    eax,0x8296c47f
  41bafd:	inc    ecx
  41bafe:	cld    
  41baff:	shufps xmm6,XMMWORD PTR [ecx+0x5],0x13
  41bb04:	addr16 cld 
  41bb06:	jmp    0x41baa1
  41bb08:	mov    al,0x41
  41bb0a:	cld    
  41bb0b:	add    DWORD PTR [edi-0x4],eax
  41bb0e:	sub    eax,esp
  41bb10:	test   bh,dh
  41bb12:	add    DWORD PTR [esi+0x41],ebx
  41bb15:	jg     0x41bb12
  41bb17:	pop    eax
  41bb18:	add    DWORD PTR cs:[eax+0x4273f6a4],eax
  41bb1f:	sar    DWORD PTR [esi],1
  41bb21:	clc    
  41bb22:	lea    edx,[edx-0x5326c8f6]
  41bb28:	cmc    
  41bb29:	jg     0x41bb67
  41bb2b:	dec    esp
  41bb2c:	out    dx,eax
  41bb2d:	jo     0x41bb5a
  41bb2f:	add    BYTE PTR [eax],al
  41bb31:	add    dl,bh
  41bb33:	sbb    bl,bh
  41bb35:	jne    0x41bb71
  41bb37:	mov    dl,0x11
  41bb39:	pushf  
  41bb3a:	dec    ecx
  41bb3b:	inc    ebp
  41bb3c:	add    BYTE PTR [ebp+0x2b1c395a],al
  41bb42:	out    0xe6,eax
  41bb44:	push   ebx
  41bb45:	(bad)  
  41bb46:	(bad)  
  41bb48:	push   edx
  41bb49:	dec    DWORD PTR [edi]
  41bb4b:	cmc    
  41bb4c:	adc    eax,0x591c1a40
  41bb51:	or     al,0x91
  41bb53:	xor    DWORD PTR [eax],ecx
  41bb55:	or     DWORD PTR [esi-0xa],0xfffffffe
  41bb59:	jl     0x41bb41
  41bb5b:	(bad)  
  41bb5d:	mov    bl,bh
  41bb5f:	mov    al,0x37
  41bb61:	neg    eax
  41bb63:	jle    0x41bbbc
  41bb65:	mov    ecx,DWORD PTR [edi]
  41bb67:	neg    DWORD PTR [edx+0x5e]
  41bb6a:	add    eax,ebp
  41bb6c:	or     BYTE PTR [eax],al
  41bb6e:	jg     0x41bbef
  41bb70:	call   0xf48baef8
  41bb75:	push   eax
  41bb76:	sbb    eax,0x78145541
  41bb7b:	rcr    DWORD PTR [eax+0x12],cl
  41bb7e:	xor    ebx,esi
  41bb80:	fcmovnbe st,st(5)
  41bb82:	pushf  
  41bb83:	xchg   ebx,eax
  41bb84:	lock xchg BYTE PTR [esi],ch
  41bb87:	and    bl,bl
  41bb89:	aad    0x78
  41bb8b:	fwait
  41bb8c:	or     al,0x87
  41bb8e:	cs out dx,al
  41bb90:	xchg   BYTE PTR [edx-0x15],al
  41bb93:	push   0x18
  41bb95:	or     BYTE PTR [eax],al
  41bb97:	add    BYTE PTR [eax],al
  41bb99:	push   0x675a8916
  41bb9e:	(bad)
  41bba1:	jo     0x41bbe0
  41bba3:	add    al,0x0
  41bba5:	repz jo 0x41bbd7
  41bba8:	mov    edx,esi
  41bbaa:	fld1   
  41bbac:	jb     0x41bb68
  41bbae:	call   0xe5f0428e
  41bbb3:	test   DWORD PTR [edi-0x719e14],edi
  41bbb9:	xor    al,0xde
  41bbbb:	xchg   DWORD PTR [edx+0x23],edi
  41bbbe:	add    eax,0xf8a875c3
  41bbc3:	cs std 
  41bbc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc6:	lods   eax,DWORD PTR ds:[esi]
  41bbc7:	fist   DWORD PTR [edx]
  41bbc9:	ja     0x41bb78
  41bbcb:	inc    eax
  41bbcc:	add    BYTE PTR [esi-0x62],dh
  41bbcf:	push   ebp
  41bbd0:	ins    BYTE PTR es:[edi],dx
  41bbd1:	jae    0x41bb85
  41bbd3:	pop    ss
  41bbd4:	cmp    al,BYTE PTR [esi-0x4b57901]
  41bbda:	fadd   st(7),st
  41bbdc:	inc    esp
  41bbdd:	sbb    BYTE PTR [edi+0x55],cl
  41bbe0:	sub    DWORD PTR [eax-0x6],edi
  41bbe3:	fisttp WORD PTR [eax+0x73af62b4]
  41bbe9:	out    dx,eax
  41bbea:	xor    al,BYTE PTR [ebp+0x15]
  41bbed:	repnz push es
  41bbef:	and    al,BYTE PTR [edi-0x35]
  41bbf2:	pop    eax
  41bbf3:	in     al,dx
  41bbf4:	xor    ch,BYTE PTR [eax-0x6]
  41bbf7:	out    dx,al
  41bbf8:	mov    BYTE PTR [esi+0x33de],ah
  41bbfe:	add    BYTE PTR [eax],al
  41bc00:	scas   al,BYTE PTR es:[edi]
  41bc01:	iret   
  41bc02:	push   ecx
  41bc03:	mov    cr7,ebp
  41bc06:	xchg   esp,eax
  41bc07:	xor    dh,dl
  41bc09:	ret    
  41bc0a:	xchg   esi,eax
  41bc0b:	jmp    0x41bc51
  41bc0d:	add    ebp,DWORD PTR [esi]
  41bc0f:	fdiv   QWORD PTR [ebx+0x51]
  41bc12:	and    eax,DWORD PTR [ebx]
  41bc14:	std    
  41bc15:	neg    DWORD PTR ds:0xeac87f56
  41bc1b:	cld    
  41bc1c:	aam    0xcf
  41bc1e:	xchg   ebx,eax
  41bc1f:	div    DWORD PTR [edi-0x4b03157f]
  41bc25:	ficom  WORD PTR [eax+eax*1+0x5e]
  41bc29:	iret   
  41bc2a:	jmp    0xa3bd138d
  41bc2f:	or     ebx,DWORD PTR [edx]
  41bc31:	xlat   BYTE PTR ds:[ebx]
  41bc32:	jmp    0xdf93d809
  41bc37:	pop    es
  41bc38:	inc    edx
  41bc39:	jge    0x41bc96
  41bc3b:	or     dl,dh
  41bc3d:	(bad)  
  41bc3e:	out    0x58,eax
  41bc40:	daa    
  41bc41:	jnp    0x41bc66
  41bc43:	shr    bl,1
  41bc45:	mov    al,0xed
  41bc47:	test   DWORD PTR [edi-0x48244a31],edi
  41bc4d:	jnp    0x41bc72
  41bc4f:	or     BYTE PTR [ebp-0xb394fd5],ch
  41bc55:	push   es
  41bc56:	xor    al,0x8f
  41bc58:	or     BYTE PTR ds:0x196a323a,dh
  41bc5e:	psadbw mm5,QWORD PTR [edi+eax*1]
  41bc62:	push   ds
  41bc63:	fild   DWORD PTR [eax]
  41bc65:	add    BYTE PTR [eax],al
  41bc67:	popa   
  41bc68:	sti    
  41bc69:	jge    0x41bc1d
  41bc6b:	fist   WORD PTR [eax+eax*1-0x1f]
  41bc6f:	gs (bad) 
  41bc71:	cld    
  41bc72:	xchg   edi,eax
  41bc73:	jb     0x41bc40
  41bc75:	jge    0x41bc3e
  41bc77:	jae    0x41bc07
  41bc79:	jge    0x41bc3e
  41bc7b:	ins    DWORD PTR es:[edi],dx
  41bc7c:	dec    ecx
  41bc7d:	or     BYTE PTR [ebx-0x58502128],bl
  41bc83:	leave  
  41bc84:	retf   
  41bc85:	sub    BYTE PTR [ecx],0x43
  41bc88:	cmp    eax,DWORD PTR [eax-0x67]
  41bc8b:	outs   dx,DWORD PTR ds:[esi]
  41bc8c:	dec    ecx
  41bc8d:	or     BYTE PTR [esi],dh
  41bc8f:	popa   
  41bc90:	test   DWORD PTR [edx+0x2d],eax
  41bc93:	jp     0x41bcdf
  41bc95:	cmp    bl,ch
  41bc97:	jae    0x41bc27
  41bc99:	jae    0x41bc7e
  41bc9b:	mov    BYTE PTR [ecx+0x7f981601],bl
  41bca1:	xlat   BYTE PTR ds:[ebx]
  41bca2:	lods   al,BYTE PTR fs:[esi]
  41bca4:	pop    edx
  41bca5:	sub    eax,0x54fab272
  41bcaa:	cdq    
  41bcab:	and    eax,0x39ea10df
  41bcb0:	retf   
  41bcb1:	mov    cl,0xae
  41bcb3:	jnp    0x41bccf
  41bcb5:	cmp    ecx,edx
  41bcb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb8:	inc    esp
  41bcb9:	std    
  41bcba:	ficomp WORD PTR [ecx]
  41bcbc:	pop    ecx
  41bcbd:	or     dh,bl
  41bcbf:	js     0x41bcb1
  41bcc1:	mov    edi,0xc2081005
  41bcc6:	jno    0x41bcba
  41bcc8:	jg     0x41bd0c
  41bcca:	mov    ebp,0xb2000000
  41bccf:	fidivr WORD PTR [esi-0x7734c609]
  41bcd5:	stos   BYTE PTR es:[edi],al
  41bcd6:	sbb    eax,0xfb1cfd00
  41bcdb:	jg     0x41bca1
  41bcdd:	xchg   ecx,eax
  41bcde:	pop    es
  41bcdf:	or     edi,ebp
  41bce1:	xchg   esi,eax
  41bce2:	mov    ecx,0xb6a0592c
  41bce7:	add    eax,0x7e070000
  41bcec:	call   0xfe1b2b72
  41bcf1:	dec    edx
  41bcf3:	adc    al,0x56
  41bcf5:	push   edi
  41bcf6:	lock or BYTE PTR [edi+0x41c7b2f0],al
  41bcfd:	sti    
  41bcfe:	retf   0x40ea
  41bd01:	or     ch,cl
  41bd03:	xchg   DWORD PTR [ebx+0x50099a00],eax
  41bd09:	push   0x40394a
  41bd0e:	and    eax,eax
  41bd10:	in     al,0xa5
  41bd12:	inc    esi
  41bd13:	mov    al,0xfb
  41bd15:	test   edx,ebx
  41bd17:	ss jbe 0x41bca7
  41bd1a:	push   esp
  41bd1b:	pop    es
  41bd1c:	mov    cl,BYTE PTR [eax]
  41bd1e:	or     ch,BYTE PTR [ebx-0x766f8be4]
  41bd24:	cmc    
  41bd25:	or     DWORD PTR [esi+0x1],edi
  41bd28:	cmp    cl,0x5f
  41bd2b:	xor    bh,bh
  41bd2d:	aas    
  41bd2e:	add    esi,esp
  41bd30:	daa    
  41bd31:	lock add BYTE PTR [eax],al
  41bd34:	add    BYTE PTR [ecx+0x36],cl
  41bd37:	or     BYTE PTR [ebp+0x5056017f],cl
  41bd3d:	mov    edi,0x1dfeec7d
  41bd42:	scas   eax,DWORD PTR es:[edi]
  41bd43:	ret    
  41bd44:	test   DWORD PTR [edx],ebx
  41bd46:	mov    al,0xfb
  41bd48:	call   FWORD PTR [ecx]
  41bd4a:	or     DWORD PTR [eax],eax
  41bd4c:	add    BYTE PTR [edx+0xc],al
  41bd4f:	add    BYTE PTR [bp+si],cl
  41bd52:	jp     0x41bd28
  41bd54:	test   DWORD PTR [ecx+0xb23a36],eax
  41bd5a:	loope  0x41bd35
  41bd5c:	inc    ebp
  41bd5d:	dec    ebp
  41bd5e:	scas   eax,DWORD PTR es:[edi]
  41bd5f:	xchg   eax,edi
  41bd61:	xchg   edi,eax
  41bd62:	scas   eax,DWORD PTR es:[edi]
  41bd63:	jo     0x41bd8c
  41bd65:	repz adc BYTE PTR [edx+0xdeeee6],bl
  41bd6c:	sub    DWORD PTR [eax+0x1f9debec],esi
  41bd72:	dec    ebp
  41bd73:	xlat   BYTE PTR ds:[ebx]
  41bd74:	mov    BYTE PTR [esi],ah
  41bd76:	loop   0x41bdb7
  41bd78:	push   ebp
  41bd79:	jp     0x41bd5a
  41bd7b:	cmp    DWORD PTR cs:[ebx-0x72139b],0x2688d72c
  41bd86:	into   
  41bd87:	mov    esi,edi
  41bd89:	mov    dh,0xa3
  41bd8b:	(bad)  
  41bd8d:	inc    ecx
  41bd8e:	ss aad 0xfe
  41bd91:	popf   
  41bd92:	or     eax,0x7598428e
  41bd97:	ss pop ecx
  41bd99:	add    BYTE PTR [eax],al
  41bd9b:	add    BYTE PTR [edx+0x1e000820],bh
  41bda1:	pop    ecx
  41bda2:	call   0x8cd25f7
  41bda7:	add    DWORD PTR [esi],edx
  41bda9:	into   
  41bdaa:	mov    eax,esp
  41bdac:	js     0x41bdbf
  41bdae:	in     al,dx
  41bdaf:	sub    eax,0x8400ddf3
  41bdb4:	xor    edx,DWORD PTR [ebx-0x3]
  41bdb7:	xor    BYTE PTR [ebx],dh
  41bdb9:	or     DWORD PTR [ecx],esp
  41bdbb:	push   esi
  41bdbc:	dec    esp
  41bdbd:	push   ebx
  41bdbe:	icebp  
  41bdbf:	mov    ah,bh
  41bdc1:	loopne 0x41be10
  41bdc3:	or     BYTE PTR [ebx+esi*1],bh
  41bdc6:	or     BYTE PTR [esi+0x34],dl
  41bdc9:	retf   
  41bdca:	adc    BYTE PTR [esi],dl
  41bdcc:	mov    bl,0xdd
  41bdce:	add    ebx,0xfffffff7
  41bdd1:	or     BYTE PTR [edi],dh
  41bdd3:	add    al,0xa5
  41bdd5:	loopne 0x41bd60
  41bdd7:	pop    esp
  41bdd8:	out    dx,eax
  41bdd9:	push   0xfaa85dbf
  41bdde:	lds    ecx,FWORD PTR [ebx]
  41bde0:	repz push es
  41bde2:	cmp    eax,0xe2340c8d
  41bde7:	xor    ebx,ebp
  41bde9:	push   esp
  41bdea:	retf   0x3e8c
  41bded:	sti    
  41bdee:	pop    ebx
  41bdef:	inc    edx
  41bdf0:	out    0x81,al
  41bdf2:	test   al,0x4f
  41bdf4:	jmp    0xb16654cc
  41bdf9:	pop    es
  41bdfa:	test   al,0x8c
  41bdfc:	(bad)  
  41bdfd:	fucomip st,st(0)
  41bdff:	mov    WORD PTR [eax],es
  41be01:	add    BYTE PTR [eax],al
  41be03:	retf   0x4f33
  41be06:	repz mov ebp,0x747f5dcc
  41be0c:	push   edx
  41be0d:	in     al,dx
  41be0e:	mov    ch,BYTE PTR [esi]
  41be10:	call   DWORD PTR [esi+0x2a2d4602]
  41be16:	cs push 0xffffffda
  41be19:	xchg   edi,eax
  41be1a:	xor    DWORD PTR [eax+0x41],ebp
  41be1d:	fbstp  TBYTE PTR [ebx]
  41be1f:	sbb    edi,edi
  41be21:	sub    eax,0x1d17fb4e
  41be26:	fsub   st,st(1)
  41be28:	test   DWORD PTR es:[ebx-0xd],0x284f2681
  41be30:	int3   
  41be31:	xchg   ebx,eax
  41be32:	or     ebx,DWORD PTR [ebx+0x7c]
  41be35:	mov    eax,0xf67ff303
  41be3a:	jge    0x41be9a
  41be3c:	push   edx
  41be3d:	int    0x84
  41be3f:	leave  
  41be40:	cli    
  41be41:	out    0x4f,al
  41be43:	adc    edi,DWORD PTR [edx+0x2b]
  41be46:	fsubr  DWORD PTR [eax+eiz*2-0x53e291d]
  41be4d:	inc    eax
  41be4e:	or     BYTE PTR [esi],ch
  41be50:	push   ecx
  41be51:	(bad)  
  41be53:	add    DWORD PTR [edi],edx
  41be55:	xlat   BYTE PTR ds:[ebx]
  41be56:	inc    ebx
  41be57:	repz and DWORD PTR [esi+0x34eb51],0xfdcbe2c1
  41be62:	scas   al,BYTE PTR es:[edi]
  41be63:	loopne 0x41be39
  41be65:	cld    
  41be66:	sbb    al,0x0
  41be68:	add    BYTE PTR [eax],al
  41be6a:	out    dx,eax
  41be6b:	leave  
  41be6c:	adc    cl,BYTE PTR [ecx+0x1]
  41be6f:	or     eax,DWORD PTR [eax]
  41be71:	bound  ebp,QWORD PTR [ebp-0x85438d4]
  41be77:	push   es
  41be78:	push   ebx
  41be79:	jb     0x41be46
  41be7b:	xchg   ebx,ebp
  41be7d:	fld    QWORD PTR [esi]
  41be7f:	xor    al,0x31
  41be81:	jbe    0x41be9f
  41be83:	pop    ebp
  41be84:	add    al,0x6e
  41be86:	ret    0xf12
  41be89:	test   eax,0x6aef7ff0
  41be8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be8f:	retf   
  41be90:	cmp    BYTE PTR [ecx+0x43],bl
  41be93:	push   ss
  41be94:	mov    esp,DWORD PTR [esp+eax*8+0x322e563a]
  41be9b:	jecxz  0x41beb8
  41be9d:	jmp    0xdd3ec592
  41bea2:	loopne 0x41be9d
  41bea4:	aas    
  41bea5:	jmp    0xaccab543
  41beaa:	mov    al,ds:0x23f1430f
  41beaf:	retf   0x6445
  41beb2:	mov    dl,0xe2
  41beb4:	dec    edi
  41beb5:	mov    bh,0x3d
  41beb7:	cmc    
  41beb8:	xor    ebx,eax
  41beba:	mov    al,0x6
  41bebc:	sub    DWORD PTR [ecx],0xffffffc2
  41bebf:	ficom  WORD PTR [ebp-0xa]
  41bec2:	inc    ebx
  41bec3:	push   0x11
  41bec5:	test   eax,0x46c47ff0
  41beca:	add    eax,0xe5c1c2
  41becf:	add    BYTE PTR [eax],al
  41bed1:	lock xor eax,0xde71c589
  41bed7:	pop    ss
  41bed8:	cmp    bh,BYTE PTR [edx+0x45]
  41bedb:	clc    
  41bedc:	add    dl,bh
  41bede:	cmc    
  41bedf:	(bad)  
  41bee0:	push   ebx
  41bee1:	shl    BYTE PTR [edx],0xfb
  41bee4:	adc    eax,0x3cd646
  41bee9:	jmp    0x45:0xfa2811b1
  41bef0:	test   DWORD PTR [edx+0x37],ecx
  41bef3:	push   ss
  41bef4:	lea    ebx,[edi]
  41bef6:	stos   DWORD PTR es:[edi],eax
  41bef7:	dec    esp
  41bef8:	push   0xffffffba
  41befa:	pop    edi
  41befb:	sti    
  41befc:	(bad)  
  41befd:	mov    edi,0xca401025
  41bf02:	xchg   BYTE PTR [ebp+esi*2-0x14400822],bh
  41bf09:	out    0x7f,al
  41bf0b:	inc    ecx
  41bf0c:	in     al,dx
  41bf0d:	jp     0x41bebf
  41bf0f:	jno    0x41bf19
  41bf11:	or     eax,0x9a01e847
  41bf16:	add    eax,0x46cd5300
  41bf1b:	hlt    
  41bf1c:	add    cl,BYTE PTR [edx-0x4000fffb]
  41bf22:	in     eax,dx
  41bf23:	cmovo  ebx,DWORD PTR [edx-0x48b437a]
  41bf2a:	adc    eax,0x4707534f
  41bf2f:	call   0x71f1f884
  41bf34:	clc    
  41bf35:	add    BYTE PTR [eax],al
  41bf37:	add    BYTE PTR ds:0x9a1038d7,al
  41bf3d:	add    eax,0x1dec081
  41bf42:	sti    
  41bf43:	adc    eax,0x3cd252
  41bf48:	ffreep st(5)
  41bf4a:	jno    0x41bf4e
  41bf4c:	or     DWORD PTR [ebx],eax
  41bf4e:	sti    
  41bf4f:	jne    0x41bfa3
  41bf51:	mov    bl,0x11
  41bf53:	mov    al,ds:0x8a004538
  41bf58:	repz pushf 
  41bf5a:	ss (bad) 
  41bf5c:	xor    ebx,esp
  41bf5e:	add    BYTE PTR [ebx+0x68],dl
  41bf61:	mov    bl,0x30
  41bf63:	dec    edi
  41bf64:	rcr    BYTE PTR [edx+0x3d],0xf8
  41bf68:	mov    ds:0x46a0c45,eax
  41bf6d:	int3   
  41bf6e:	mov    bh,0xfc
  41bf70:	out    0xbf,al
  41bf72:	lock aas 
  41bf74:	repz (bad) 
  41bf76:	les    ecx,FWORD PTR [edi+esi*2]
  41bf79:	dec    edx
  41bf7a:	add    al,0x0
  41bf7c:	repz adc BYTE PTR [edi+0x40ae233a],al
  41bf83:	add    BYTE PTR [esi+0x23],ah
  41bf86:	fmul   DWORD PTR [edi+0x20]
  41bf89:	in     eax,dx
  41bf8a:	imul   edx,DWORD PTR [edi],0xfcd8d3c4
  41bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf91:	pop    ebx
  41bf92:	les    esi,FWORD PTR [edx+0x41]
  41bf95:	sub    ebp,ebp
  41bf97:	pop    ss
  41bf98:	add    bl,BYTE PTR [esi+0x8100]
  41bf9e:	add    BYTE PTR [ebx+0x68654db4],ch
  41bfa4:	fwait
  41bfa5:	aam    0x38
  41bfa7:	mov    al,0x92
  41bfa9:	pusha  
  41bfaa:	push   esi
  41bfab:	fwait
  41bfac:	sbb    eax,0x6584fdd3
  41bfb1:	aam    0x38
  41bfb3:	sub    BYTE PTR [edx+0x2f],0x8b
  41bfb7:	cs jmp 0x6a2d:0xf1e6fd33
  41bfbf:	or     bh,cl
  41bfc1:	dec    esp
  41bfc2:	clc    
  41bfc3:	pop    esp
  41bfc4:	jmp    0xc4217f45
  41bfc9:	shl    DWORD PTR ds:0x1024ab4c,cl
  41bfcf:	mov    bl,0xdd
  41bfd1:	pop    ss
  41bfd2:	rol    edi,0x6
  41bfd5:	adc    eax,0xaa0e348a
  41bfda:	dec    ebp
  41bfdb:	fcomi  st,st(7)
  41bfdd:	pushf  
  41bfde:	ret    
  41bfdf:	lods   al,BYTE PTR ds:[esi]
  41bfe0:	ss into 
  41bfe2:	or     eax,0xf40af21e
  41bfe7:	aam    0x6
  41bfe9:	add    al,cl
  41bfeb:	sub    bh,0x61
  41bfee:	add    ecx,eax
  41bff0:	push   es
  41bff1:	pop    es
  41bff2:	add    al,0xf3
  41bff4:	push   ebx
  41bff5:	jmp    0x41bf87
  41bff7:	cmc    
  41bff8:	fdivr  st(0),st
  41bffa:	push   ss
  41bffb:	repz push ss
  41bffd:	out    0x3,eax
  41bfff:	or     DWORD PTR [esi+eiz*2+0xc0],ebp
  41c006:	repz xor BYTE PTR [edi+0x7dc8d776],cl
  41c00d:	xor    eax,0xd46f51ce
  41c012:	loope  0x41bfba
  41c014:	fadd   DWORD PTR [ebx-0xd]
  41c017:	daa    
  41c018:	jno    0x41bfda
  41c01a:	sbb    edi,DWORD PTR [esi-0x2585d1d7]
  41c020:	mov    bh,0x80
  41c022:	adc    ebx,ecx
  41c024:	out    0x6b,al
  41c026:	ret    
  41c027:	push   ecx
  41c028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c029:	add    edx,DWORD PTR [esi-0x330ee90f]
  41c02f:	push   es
  41c030:	ins    BYTE PTR es:[edi],dx
  41c031:	ret    
  41c032:	add    BYTE PTR [edi],ah
  41c034:	mov    edi,0xe747077b
  41c039:	xor    esi,DWORD PTR [esi-0xf]
  41c03c:	pop    edx
  41c03d:	icebp  
  41c03e:	sub    al,0x7
  41c040:	ins    BYTE PTR es:[edi],dx
  41c041:	ret    
  41c042:	loopne 0x41c03a
  41c044:	pop    ebx
  41c045:	inc    esi
  41c046:	pop    edi
  41c047:	xor    eax,0xb657d491
  41c04c:	arpl   bx,ax
  41c04e:	rol    DWORD PTR [edx],0x0
  41c051:	mov    ebx,0x6ac0c030
  41c056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c057:	retf   0xf5ff
  41c05a:	mov    ebx,0xeaaac687
  41c05f:	jge    0x41c04c
  41c061:	push   0x13
  41c063:	das    
  41c064:	push   esi
  41c065:	sbb    bl,BYTE PTR [esi+0x16]
  41c068:	test   BYTE PTR [edi+0x0],0x0
  41c06c:	add    BYTE PTR [esi+0x3902fc3c],dl
  41c072:	push   esp
  41c073:	sbb    al,BYTE PTR [ebx-0x45]
  41c076:	jnp    0x41c0ba
  41c078:	cmp    DWORD PTR [ecx-0x230302ca],0x75e93ff0
  41c082:	retf   0xae0b
  41c085:	cmp    ch,BYTE PTR [edi+0x43]
  41c088:	jmp    0x2cccc77d
  41c08d:	ja     0x41c020
  41c08f:	dec    edx
  41c090:	jge    0x41c090
  41c092:	cmp    DWORD PTR [eax],ecx
  41c094:	std    
  41c095:	in     eax,dx
  41c096:	(bad)
  41c09a:	pop    ecx
  41c09b:	in     al,dx
  41c09c:	mov    ebx,0xed72c400
  41c0a1:	jmp    0x560a:0xf0e9002e
  41c0a8:	mov    bh,0xda
  41c0aa:	push   ebp
  41c0ab:	push   esi
  41c0ac:	inc    esi
  41c0ad:	call   0xbf89:0xf0a90eee
  41c0b4:	mov    ebp,0xd972fde6
  41c0b9:	and    al,0x17
  41c0bb:	push   0xfffffff9
  41c0bd:	jae    0x41c108
  41c0bf:	in     al,dx
  41c0c0:	mov    ecx,0x1103941
  41c0c5:	push   cs
  41c0c6:	(bad)  
  41c0c7:	std    
  41c0c8:	push   cs
  41c0c9:	cmp    al,0x16
  41c0cb:	std    
  41c0cc:	add    bh,dl
  41c0ce:	fld    DWORD PTR [edi+0x35]
  41c0d4:	mov    edx,0x3d003cbc
  41c0d9:	cmp    bl,0x75
  41c0dc:	ds (bad) 
  41c0df:	mov    eax,DWORD PTR [edi]
  41c0e1:	(bad)  
  41c0e3:	add    cl,BYTE PTR [ecx]
  41c0e5:	retf   
  41c0e6:	pop    edx
  41c0e7:	leave  
  41c0e8:	pop    eax
  41c0e9:	(bad)  
  41c0ea:	cld    
  41c0eb:	push   esp
  41c0ec:	xchg   ecx,eax
  41c0ed:	in     eax,0x52
  41c0ef:	xor    edx,DWORD PTR [edi+eax*4+0x41]
  41c0f3:	or     al,0xf3
  41c0f5:	pop    edi
  41c0f6:	or     al,0x75
  41c0f8:	sub    ecx,ebx
  41c0fa:	jno    0x41c104
  41c0fc:	mov    dl,0xa2
  41c0fe:	jae    0x41c140
  41c100:	or     bh,dl
  41c102:	out    0xf,eax
  41c104:	sbb    edx,ebx
  41c106:	sti    
  41c107:	adc    DWORD PTR [esi+0x6d14e7c5],0x5e
  41c10e:	or     al,0xff
  41c110:	xlat   BYTE PTR ds:[ebx]
  41c111:	shl    DWORD PTR [esp+esi*4-0x3b],0x49
  41c116:	add    BYTE PTR [eax+0x72],dl
  41c119:	sar    BYTE PTR [esi],cl
  41c11b:	dec    DWORD PTR [ebp-0x73]
  41c11e:	rcl    BYTE PTR [eax],0x11
  41c121:	sar    DWORD PTR [edx+0x1b],1
  41c124:	dec    ebp
  41c125:	pop    edi
  41c126:	sbb    BYTE PTR [ebx+0x75fbbd57],cl
  41c12c:	call   0xfb1a:0x420c71d8
  41c133:	dec    ebp
  41c135:	fdiv   DWORD PTR [ecx+0xc]
  41c138:	add    BYTE PTR [eax],al
  41c13a:	add    BYTE PTR [ecx],dl
  41c13c:	(bad)  
  41c13e:	jae    0x41c10c
  41c140:	xlat   BYTE PTR ds:[ebx]
  41c141:	sti    
  41c142:	mov    eax,esp
  41c144:	neg    DWORD PTR [eax-0x3e]
  41c147:	or     WORD PTR [ecx-0x75],dx
  41c14b:	repz or eax,DWORD PTR [esi+0x157ccbeb]
  41c152:	std    
  41c153:	retf   
  41c154:	repz pop ecx
  41c156:	inc    eax
  41c157:	repz ss push eax
  41c15a:	lock inc esp
  41c15c:	loop   0x41c14a
  41c15e:	push   cs
  41c15f:	mov    bl,0xaf
  41c161:	jnp    0x41c1a5
  41c163:	aas    
  41c164:	call   0x6ab8ce2f
  41c169:	add    eax,DWORD PTR [eax]
  41c16b:	repz add BYTE PTR [edx],bh
  41c16e:	mov    esi,esp
  41c170:	xchg   ebx,eax
  41c171:	cmc    
  41c172:	aas    
  41c173:	repz push edi
  41c175:	mov    ah,0x74
  41c177:	mov    bl,0xaf
  41c179:	xor    ch,bh
  41c17b:	sbb    eax,0xb374dc47
  41c180:	scas   eax,DWORD PTR es:[edi]
  41c181:	iret   
  41c182:	jb     0x41c183
  41c184:	aaa    
  41c185:	lods   al,BYTE PTR ds:[esi]
  41c186:	cld    
  41c187:	lds    esi,FWORD PTR [edi]
  41c189:	inc    ebp
  41c18a:	in     al,dx
  41c18b:	sub    BYTE PTR [ebp-0x2],bh
  41c18e:	add    DWORD PTR [eax+0x180000ae],0x75
  41c195:	inc    BYTE PTR [ebx+0xae78]
  41c19b:	sbb    al,0x3d
  41c19d:	push   ebp
  41c19e:	or     BYTE PTR [eax],al
  41c1a0:	add    BYTE PTR [eax],al
  41c1a2:	outs   dx,BYTE PTR ds:[esi]
  41c1a3:	jmp    0x41c170
  41c1a5:	dec    edi
  41c1a6:	push   0xffffffab
  41c1a8:	enter  0xc0fc,0x2b
  41c1ac:	les    esi,FWORD PTR [edx-0x10]
  41c1af:	es dec ebp
  41c1b1:	clc    
  41c1b2:	or     DWORD PTR [edx+0x2e],ebp
  41c1b5:	xor    DWORD PTR [ebx+0x368766a4],esi
  41c1bb:	add    bh,BYTE PTR [ebp+0x42]
  41c1be:	imul   esp,DWORD PTR [ebp-0x461902d0],0xfffffff6
  41c1c5:	aas    
  41c1c6:	repz push es
  41c1c8:	jb     0x41c209
  41c1ca:	inc    DWORD PTR [edi+0x3a6c0022]
  41c1d0:	outs   dx,DWORD PTR ds:[esi]
  41c1d1:	jnp    0x41c1ac
  41c1d3:	rol    ax,1
  41c1d6:	loope  0x41c1df
  41c1d8:	je     0x41c219
  41c1da:	dec    edi
  41c1db:	xchg   edx,eax
  41c1dc:	mov    ds:0xab91b4af,eax
  41c1e1:	imul   ebp,DWORD PTR [edi+ecx*4+0x569fcba3],0xffffffde
  41c1e9:	stos   DWORD PTR es:[edi],eax
  41c1ea:	or     eax,edi
  41c1ec:	add    eax,DWORD PTR [edi+ebp*8]
  41c1ef:	push   es
  41c1f0:	out    0xfe,eax
  41c1f2:	sbb    al,0xc4
  41c1f4:	out    0x7,al
  41c1f6:	ret    
  41c1f7:	pop    ebx
  41c1f8:	push   ds
  41c1f9:	cmp    DWORD PTR [ebx+ebx*2-0x3c04a942],edi
  41c200:	fist   DWORD PTR [edi]
  41c202:	jecxz  0x41c24a
  41c204:	out    0x86,eax
  41c206:	add    BYTE PTR [eax],al
  41c208:	add    BYTE PTR [ebx+edi*1],dh
  41c20b:	std    
  41c20c:	shl    BYTE PTR [ecx-0x59],1
  41c20f:	jno    0x41c227
  41c211:	xchg   ebx,eax
  41c212:	sbb    BYTE PTR [edi],ah
  41c214:	add    al,0xde
  41c216:	fmul   QWORD PTR [ebp-0x633c48aa]
  41c21c:	jl     0x41c24f
  41c21e:	stos   DWORD PTR es:[edi],eax
  41c21f:	outs   dx,DWORD PTR ds:[esi]
  41c220:	inc    esi
  41c221:	ret    
  41c222:	std    
  41c223:	repz retf 
  41c225:	inc    eax
  41c226:	or     eax,0xc3bb566e
  41c22b:	mov    ebx,0x5339afdf
  41c230:	rol    BYTE PTR [ecx],1
  41c232:	arpl   cx,di
  41c234:	inc    ebx
  41c235:	repz fs mov dl,0x7c
  41c239:	xor    DWORD PTR [edi+0xeb2baa5],esi
  41c23f:	out    0x7c,eax
  41c241:	or     eax,DWORD PTR cs:[eax]
  41c244:	sahf   
  41c245:	inc    DWORD PTR [eax]
  41c247:	mov    al,ds:0x830730db
  41c24c:	sub    esp,eax
  41c24e:	add    eax,0x8eab1e50
  41c253:	add    eax,0x137306c
  41c258:	mov    ecx,0xd969da43
  41c25d:	or     ch,BYTE PTR [edi-0x3ddc00b1]
  41c263:	pop    esp
  41c264:	sub    al,BYTE PTR ds:0xad5ceb8e
  41c26a:	push   ss
  41c26b:	push   eax
  41c26c:	push   ebx
  41c26d:	add    BYTE PTR [eax],al
  41c26f:	add    bh,dh
  41c271:	shl    DWORD PTR [edx-0x7],0x35
  41c275:	cmp    BYTE PTR [esi+edx*8],cl
  41c278:	mov    edx,0x25e96a0e
  41c27d:	sbb    BYTE PTR [eax-0x25],dl
  41c280:	mov    al,0x6
  41c282:	sub    DWORD PTR [ecx-0x49afed55],0xfffffffa
  41c289:	mov    ds:0x8def2911,al
  41c28e:	inc    edx
  41c28f:	stc    
  41c290:	leave  
  41c291:	or     BYTE PTR [ecx],dh
  41c293:	test   eax,0xe90bc522
  41c298:	sbb    edx,DWORD PTR [eax+0x32d368eb]
  41c29e:	add    ecx,ebp
  41c2a0:	lock pop eax
  41c2a2:	push   ebp
  41c2a3:	ins    BYTE PTR es:[edi],dx
  41c2a4:	jp     0x41c264
  41c2a6:	std    
  41c2a7:	jbe    0x41c255
  41c2a9:	push   edx
  41c2aa:	std    
  41c2ab:	hlt    
  41c2ac:	mov    eax,0xa05512c3
  41c2b1:	add    al,BYTE PTR [eax]
  41c2b3:	ins    BYTE PTR es:[edi],dx
  41c2b4:	jp     0x41c274
  41c2b6:	std    
  41c2b7:	push   esi
  41c2b8:	lods   al,BYTE PTR ds:[esi]
  41c2b9:	push   edx
  41c2ba:	push   eax
  41c2bb:	ror    DWORD PTR [eax-0x65ffbfc6],0x91
  41c2c2:	push   0x89069a02
  41c2c7:	mov    ch,0x1a
  41c2c9:	xlat   BYTE PTR ds:[ebx]
  41c2ca:	sti    
  41c2cb:	push   DWORD PTR [edx]
  41c2cd:	mov    ah,0x3d
  41c2cf:	call   DWORD PTR ds:0xcc086
  41c2d5:	add    BYTE PTR [eax],al
  41c2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d8:	hlt    
  41c2d9:	add    al,0x84
  41c2dc:	mov    edx,0xd6da8589
  41c2e1:	sti    
  41c2e2:	jmp    FWORD PTR [edx-0x22]
  41c2e5:	or     al,BYTE PTR [eax]
  41c2e7:	pop    edx
  41c2e8:	push   es
  41c2e9:	test   al,al
  41c2eb:	mov    esi,0xf101b009
  41c2f0:	add    al,0x32
  41c2f2:	shl    BYTE PTR [ebx-0x38],0x0
  41c2f6:	add    bh,bl
  41c2f8:	cmp    eax,0x623681e9
  41c2fd:	add    DWORD PTR [eax],eax
  41c2ff:	or     dh,ch
  41c301:	push   edx
  41c302:	lea    ebx,[edi+0x45fff999]
  41c308:	mul    BYTE PTR [edi+0x3c]
  41c30b:	ret    0x4a
  41c30e:	call   0x3e901a
  41c313:	pop    esi
  41c314:	(bad)  
  41c315:	or     eax,DWORD PTR [ebp+esi*2+0x57000005]
  41c31c:	(bad)  
  41c31d:	lods   al,BYTE PTR ds:[esi]
  41c31e:	cld    
  41c31f:	ror    BYTE PTR gs:[ebp+ecx*4+0x5f],1
  41c324:	call   0x15fa:0xf645fff9
  41c32b:	jbe    0x41c2e1
  41c32d:	cmp    al,0x0
  41c32f:	pop    ss
  41c330:	(bad)  
  41c331:	lods   al,BYTE PTR ds:[esi]
  41c332:	cld    
  41c333:	adc    eax,0xbfff4cd1
  41c338:	mov    ebp,0x4589
  41c33d:	add    bl,dh
  41c33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c340:	pop    eax
  41c341:	inc    esp
  41c342:	sbb    esi,DWORD PTR [eax+0x0]
  41c345:	push   eax
  41c346:	fwait
  41c347:	imul   eax,DWORD PTR [ebx-0x3],0xffffff84
  41c34b:	sub    al,0xc5
  41c34d:	pshufw mm6,mm7,0xcd
  41c351:	or     al,0x6f
  41c353:	test   BYTE PTR [eax],al
  41c355:	add    bl,dh
  41c357:	jg     0x41c326
  41c359:	jb     0x41c356
  41c35b:	xor    cl,BYTE PTR [eax-0x31e7a14d]
  41c361:	dec    edi
  41c362:	dec    ebx
  41c363:	jmp    0x858:0x84cffcb
  41c36a:	jns    0x41c353
  41c36c:	fcom   DWORD PTR [edi+0x3f]
  41c36f:	mov    ecx,0xe01883ca
  41c374:	test   BYTE PTR [esi-0x74ff500d],al
  41c37a:	outs   dx,BYTE PTR ds:[esi]
  41c37b:	fwait
  41c37c:	int3   
  41c37d:	cld    
  41c37e:	sbb    al,0xff
  41c380:	pop    ebx
  41c381:	fs fwait
  41c383:	out    dx,eax
  41c384:	add    edi,DWORD PTR [ecx+0xaefd]
  41c38a:	jbe    0x41c3ce
  41c38c:	js     0x41c387
  41c38e:	cld    
  41c38f:	ja     0x41c36c
  41c391:	push   cs
  41c392:	mov    bl,0x70
  41c394:	retf   0x4a56
  41c397:	sub    eax,0x865fccc
  41c39c:	pop    esp
  41c39d:	add    al,0xf2
  41c39f:	lods   eax,DWORD PTR ds:[esi]
  41c3a0:	add    BYTE PTR [ebx+0x6e000000],cl
  41c3a6:	pop    edx
  41c3a7:	int    0xfc
  41c3a9:	int3   
  41c3aa:	push   ds
  41c3ab:	pop    esp
  41c3ac:	je     0x41c3f9
  41c3ae:	out    dx,al
  41c3af:	add    edi,ebp
  41c3b1:	out    0xd1,al
  41c3b3:	icebp  
  41c3b4:	aas    
  41c3b5:	repz in eax,0xc
  41c3b8:	add    dh,dl
  41c3ba:	push   es
  41c3bb:	out    0x3,eax
  41c3bd:	push   ds
  41c3be:	dec    eax
  41c3bf:	rol    DWORD PTR [edi-0x1e],1
  41c3c2:	mov    edi,0x58574763
  41c3c7:	mov    bh,0xcc
  41c3c9:	loope  0x41c3c5
  41c3cb:	fadd   QWORD PTR [ebx-0xd]
  41c3ce:	and    DWORD PTR [edx],0x0
  41c3d1:	ret    0xccc6
  41c3d4:	jp     0x41c407
  41c3d6:	mov    bl,0x95
  41c3d8:	jle    0x41c38b
  41c3da:	xor    BYTE PTR [esi+0x728a7834],0xca
  41c3e1:	pop    edi
  41c3e2:	shl    BYTE PTR [esi+0xb7b717e],0xcd
  41c3e9:	dec    edi
  41c3ea:	push   edi
  41c3eb:	cs inc edi
  41c3ed:	xchg   DWORD PTR [ebx-0x19],ecx
  41c3f0:	add    esi,ebx
  41c3f2:	(bad)  
  41c3f3:	stos   DWORD PTR es:[edi],eax
  41c3f4:	(bad)  ds:0x1b03e6c0
  41c3fa:	pmulhuw mm1,mm4
  41c3fd:	daa    
  41c3fe:	mov    eax,0xb85ce8be
  41c403:	scas   al,BYTE PTR es:[edi]
  41c404:	fsub   st,st(6)
  41c406:	xchg   ecx,eax
  41c407:	arpl   WORD PTR [edi+0x9000000],dx
  41c40d:	rol    ch,0x33
  41c410:	sbb    esp,DWORD PTR [ecx-0xb0032bb]
  41c416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c417:	sub    al,0x9a
  41c419:	int    0xa8
  41c41b:	pop    es
  41c41c:	repz mov ebp,DWORD PTR [eax+eax*1]
  41c420:	jo     0x41c3e8
  41c422:	adc    al,BYTE PTR ds:0x3ffbc043
  41c428:	add    eax,DWORD PTR [edi-0x19]
  41c42b:	js     0x41c3e3
  41c42d:	lods   eax,DWORD PTR ds:[esi]
  41c42e:	inc    eax
  41c42f:	jmp    0x41c3f8
  41c431:	mov    edi,0xaecc7914
  41c436:	push   DWORD PTR [ecx+0x65fcc2c8]
  41c43c:	mov    al,0x33
  41c43e:	cmp    DWORD PTR [esi+0x720c4225],edi
  41c444:	test   DWORD PTR [ebx+0x56efddbf],0x16ccf4fd
  41c44e:	inc    eax
  41c44f:	jmp    0xed65ffc7
  41c454:	lock cmp ah,BYTE PTR [eax]
  41c457:	sahf   
  41c458:	sbb    al,BYTE PTR [edi]
  41c45a:	push   0xffffffe9
  41c45c:	enter  0xff1a,0xe8
  41c460:	lock shl DWORD PTR [ebx-0x3b],0x4c
  41c465:	ret    0x1635
  41c468:	pop    ebp
  41c469:	inc    edi
  41c46a:	adc    BYTE PTR [ecx+0x7cbf83f0],ch
  41c470:	add    BYTE PTR [eax],al
  41c472:	add    dh,ch
  41c474:	pop    ds
  41c475:	add    eax,0x1ae30bb
  41c47a:	cmp    ecx,esi
  41c47c:	popa   
  41c47d:	pop    esi
  41c47e:	sub    esi,esp
  41c480:	push   es
  41c481:	push   ebx
  41c482:	jb     0x41c4cf
  41c484:	push   eax
  41c485:	dec    edi
  41c486:	jb     0x41c43f
  41c488:	adc    al,ch
  41c48a:	sub    al,0x2b
  41c48c:	add    eax,DWORD PTR [eax]
  41c48e:	jmp    0x3e014883
  41c493:	shr    DWORD PTR [eax+eax*1],cl
  41c496:	ins    BYTE PTR es:[edi],dx
  41c497:	mov    edx,0xba644ec2
  41c49c:	mov    esi,0x4eee434e
  41c4a1:	std    
  41c4a2:	cld    
  41c4a3:	and    al,0x17
  41c4a5:	inc    eax
  41c4a6:	jmp    0xe4b5431e
  41c4ab:	ins    DWORD PTR es:[edi],dx
  41c4ac:	inc    ecx
  41c4ad:	cld    
  41c4ae:	in     eax,0x23
  41c4b0:	add    al,0x89
  41c4b2:	add    BYTE PTR [edi],dl
  41c4b4:	retf   
  41c4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b6:	pop    es
  41c4b7:	mov    BYTE PTR [edi+ebp*1],0xc0
  41c4bb:	and    eax,DWORD PTR [esi-0x3b66f822]
  41c4c1:	mov    ebp,0xbf7b99f8
  41c4c6:	push   ebp
  41c4c7:	and    edi,ebx
  41c4c9:	dec    edi
  41c4ca:	mov    esp,edx
  41c4cc:	cmp    eax,0xd20de8c4
  41c4d1:	sti    
  41c4d2:	push   ecx
  41c4d4:	push   0x70
  41c4d6:	add    al,0x0
  41c4d8:	add    BYTE PTR [eax],al
  41c4da:	js     0x41c4a6
  41c4dc:	out    0x56,eax
  41c4de:	push   esp
  41c4df:	cmc    
  41c4e0:	cli    
  41c4e1:	jne    0x41c535
  41c4e3:	loop   0x41c53f
  41c4e5:	sti    
  41c4e6:	or     al,0xd2
  41c4e8:	xchg   eax,esi
  41c4ea:	xlat   BYTE PTR ds:[ebx]
  41c4eb:	fdiv   DWORD PTR [ecx+0x4]
  41c4ee:	cmp    dl,cl
  41c4f0:	out    0x41,eax
  41c4f2:	scas   eax,DWORD PTR es:[edi]
  41c4f3:	inc    esi
  41c4f4:	push   ds
  41c4f5:	inc    ecx
  41c4f7:	xor    BYTE PTR [edi],0xf0
  41c4fa:	mov    ecx,0xd21186ad
  41c4ff:	test   DWORD PTR [esi],0xe424a8a
  41c505:	mov    ah,bh
  41c507:	mov    ebp,0x21a883d
  41c50c:	aaa    
  41c50d:	enter  0xdeb8,0x66
  41c511:	add    BYTE PTR [eax-0x18804fe],dh
  41c517:	hlt    
  41c518:	push   ebp
  41c519:	inc    ebp
  41c51b:	push   es
  41c51c:	sti    
  41c51d:	adc    eax,0x3cb2ca
  41c522:	dec    edi
  41c523:	repnz cli 
  41c525:	div    DWORD PTR [ecx+0x7c56d7ab]
  41c52b:	(bad)  
  41c52c:	in     al,0xa7
  41c52e:	repz cdq 
  41c530:	(bad)  
  41c531:	cld    
  41c532:	jns    0x41c5a4
  41c534:	es pop ecx
  41c536:	es jb  0x41c535
  41c539:	jmp    DWORD PTR [edi]
  41c53b:	cmp    ebp,edx
  41c53d:	jle    0x41c53f
  41c53f:	add    BYTE PTR [eax],al
  41c541:	(bad)  
  41c542:	pop    ss
  41c543:	add    eax,DWORD PTR [eax]
  41c545:	repz and BYTE PTR ds:0x26e83dd9,dl
  41c54c:	adc    al,0x27
  41c54e:	mov    edx,0x480372c9
  41c553:	fdiv   DWORD PTR ds:0x6de4c8c
  41c559:	and    eax,DWORD PTR [ebp+0x50]
  41c55c:	adc    BYTE PTR [ebx+0x74fccc7b],cl
  41c562:	sub    cl,dl
  41c564:	cmp    BYTE PTR [eax+0x73],ah
  41c567:	and    al,0x89
  41c569:	scas   al,BYTE PTR es:[edi]
  41c56a:	mov    bl,0x31
  41c56c:	mov    ebx,DWORD PTR [esi+0x54fcc757]
  41c572:	pop    es
  41c573:	pop    esp
  41c574:	dec    edi
  41c575:	repz scas eax,DWORD PTR es:[edi]
  41c577:	pop    edx
  41c578:	add    esi,DWORD PTR [esi-0x7e]
  41c57b:	rcl    BYTE PTR [edi+0x4b],1
  41c57e:	popf   
  41c57f:	xor    eax,DWORD PTR [eax]
  41c581:	repz popf 
  41c583:	ja     0x41c507
  41c585:	pop    ebx
  41c586:	lods   eax,DWORD PTR ds:[esi]
  41c587:	(bad)  
  41c588:	cld    
  41c589:	ret    
  41c58a:	cmp    BYTE PTR [edi-0x101d91b1],bh
  41c590:	dec    edi
  41c591:	or     ecx,DWORD PTR [ebx]
  41c593:	pop    es
  41c594:	std    
  41c595:	or     al,0x30
  41c597:	ror    BYTE PTR [edi],0xa4
  41c59a:	xor    ah,cl
  41c59c:	cld    
  41c59d:	xchg   esp,ebx
  41c59f:	(bad)  
  41c5a0:	jb     0x41c581
  41c5a2:	sub    BYTE PTR ds:0x8,bh
  41c5a8:	inc    eax
  41c5a9:	ins    DWORD PTR es:[edi],dx
  41c5aa:	push   ebx
  41c5ab:	or     ah,ah
  41c5ad:	pop    es
  41c5ae:	cld    
  41c5af:	daa    
  41c5b0:	add    BYTE PTR [edi-0x19],al
  41c5b3:	test   ah,bl
  41c5b5:	push   es
  41c5b6:	sbb    al,0x6
  41c5b8:	jns    0x41c599
  41c5ba:	lea    ecx,[edi-0x21]
  41c5bd:	scas   al,BYTE PTR es:[edi]
  41c5be:	in     al,0xcd
  41c5c0:	mov    esi,0xdcdc14bc
  41c5c5:	shl    BYTE PTR [ecx+ecx*8+0x4e],0x91
  41c5ca:	test   eax,0xf6c9ac2d
  41c5cf:	add    eax,DWORD PTR [eax-0x70]
  41c5d2:	dec    edx
  41c5d3:	test   DWORD PTR [eax-0x4c0a2b5],ecx
  41c5d9:	push   ss
  41c5da:	mov    edx,0xd93ee97c
  41c5df:	inc    ebx
  41c5e0:	repz push ebx
  41c5e2:	mov    bl,0x58
  41c5e4:	jb     0x41c623
  41c5e6:	jecxz  0x41c5fd
  41c5e8:	in     eax,0x2d
  41c5ea:	xor    eax,0x8b386402
  41c5ef:	pop    ebp
  41c5f0:	icebp  
  41c5f1:	mov    DWORD PTR [ebx+0xaebcc3],ebx
  41c5f7:	xor    al,0xf3
  41c5f9:	push   es
  41c5fa:	push   cs
  41c5fb:	push   edx
  41c5fc:	test   DWORD PTR [edi+0xec6c92d],0x5723c897
  41c606:	cmp    ebx,0xdc1d8fc4
  41c60c:	add    BYTE PTR [eax],al
  41c60e:	add    BYTE PTR [esi+0x7703e727],dh
  41c614:	(bad)  
  41c615:	push   edx
  41c616:	or     DWORD PTR [ecx+0x7466407],ecx
  41c61c:	pop    edi
  41c61d:	mov    edi,0xe706b4be
  41c622:	jbe    0x41c5d5
  41c624:	push   cs
  41c625:	pop    ss
  41c626:	leave  
  41c627:	jle    0x41c60b
  41c629:	inc    eax
  41c62b:	ss stos BYTE PTR es:[edi],al
  41c62d:	cld    
  41c62e:	scas   al,BYTE PTR es:[edi]
  41c62f:	gs jl  0x41c6a5
  41c632:	or     dh,BYTE PTR [esi+0x40]
  41c635:	or     cl,ch
  41c637:	inc    edx
  41c638:	pusha  
  41c639:	push   0xffffffe8
  41c63b:	add    BYTE PTR [esi+0x626e142],cl
  41c641:	push   esi
  41c642:	xchg   ecx,eax
  41c643:	stos   BYTE PTR es:[edi],al
  41c644:	mov    ecx,0x42377efc
  41c649:	adc    al,0x6c
  41c64b:	mov    al,0x37
  41c64d:	dec    eax
  41c64e:	add    ebp,edi
  41c650:	mov    ecx,0x33ef975
  41c655:	jmp    0x187b357a
  41c65a:	jmp    0xe837ba9c
  41c65f:	icebp  
  41c660:	xor    dh,BYTE PTR [esp+esi*2]
  41c663:	xor    eax,0x98293073
  41c668:	aas    
  41c669:	push   eax
  41c66a:	jmp    0xddb7805f
  41c66f:	out    0xc2,eax
  41c671:	cld    
  41c672:	lahf   
  41c673:	add    BYTE PTR [eax],al
  41c675:	add    BYTE PTR [eax+0x4b],bl
  41c678:	std    
  41c679:	cmp    ah,BYTE PTR [eax]
  41c67b:	xor    DWORD PTR [eax],ecx
  41c67d:	mov    cl,0xcf
  41c67f:	retf   0x9e7
  41c682:	into   
  41c683:	push   es
  41c684:	add    BYTE PTR [ebp+0x30],ch
  41c687:	aaa    
  41c688:	adc    BYTE PTR [edx-0x4e],dh
  41c68b:	or     ch,BYTE PTR [edx-0x17]
  41c68e:	cmp    esi,DWORD PTR [ecx]
  41c690:	or     BYTE PTR [ebx-0x6917ab0f],al
  41c696:	xor    eax,0xc83efcba
  41c69b:	ret    
  41c69c:	shr    ebp,0xf0
  41c69f:	xchg   ebp,esi
  41c6a1:	push   ebp
  41c6a2:	into   
  41c6a3:	lea    ecx,[edx]
  41c6a5:	add    dh,ah
  41c6a7:	mov    bh,BYTE PTR [edi]
  41c6a9:	add    cl,bh
  41c6ab:	mov    BYTE PTR [ecx-0x7847d137],0x15
  41c6b2:	repnz mov bh,BYTE PTR [edi]
  41c6b5:	add    bl,dl
  41c6b7:	sbb    BYTE PTR [esi+ecx*1+0xa],dh
  41c6bb:	test   BYTE PTR [esi+0x6da88],bh
  41c6c1:	cmp    ebx,DWORD PTR [ebx-0x7d7c12ab]
  41c6c7:	ret    0x8bbf
  41c6ca:	(bad)  
  41c6cb:	adc    bh,BYTE PTR [eax+0x50f59a43]
  41c6d1:	push   esi
  41c6d2:	sbb    DWORD PTR [eax-0x1635cc05],eax
  41c6d8:	mov    dh,0x88
  41c6da:	add    BYTE PTR [eax],al
  41c6dc:	add    BYTE PTR [edx-0x2c7afffa],cl
  41c6e2:	push   esi
  41c6e3:	and    al,0x8b
  41c6e5:	fistp  WORD PTR [edx]
  41c6e7:	mov    eax,0xd33d8a43
  41c6ec:	xor    eax,0x2
  41c6ef:	je     0x41c6fa
  41c6f1:	call   0xf455:0x1b3bcf05
  41c6f8:	jmp    0x41c75e
  41c6fa:	cmp    eax,0x3af569f5
  41c6ff:	std    
  41c700:	call   FWORD PTR [edx+0x5]
  41c703:	dec    BYTE PTR [ebx+0x412d57f2]
  41c709:	arpl   WORD PTR [ebx-0x7c],di
  41c70c:	add    BYTE PTR [edx+0x6],cl
  41c70f:	mov    esi,0x45e228
  41c714:	call   0x3c9563
  41c719:	mov    es,ebp
  41c71b:	jo     0x41c75f
  41c71d:	mov    eax,ds:0xf3b82c1e
  41c722:	in     al,dx
  41c723:	add    edi,ebp
  41c725:	out    dx,al
  41c726:	mov    ebx,0x34f34088
  41c72b:	enter  0xf466,0x37
  41c72f:	add    DWORD PTR [eax],eax
  41c731:	rep lods al,BYTE PTR ds:[esi]
  41c733:	pop    es
  41c734:	sub    BYTE PTR [ebx+0x157403ec],ch
  41c73a:	std    
  41c73b:	sub    al,0xe8
  41c73d:	xchg   ebx,eax
  41c73e:	retw   0xfc
  41c742:	add    BYTE PTR [eax],al
  41c744:	js     0x41c731
  41c746:	pop    ds
  41c747:	adc    al,0x0
  41c749:	jne    0x41c78c
  41c74b:	push   0xfffffff3
  41c74d:	xor    cl,BYTE PTR [esi+0x18]
  41c750:	push   0xffffffa0
  41c752:	jnp    0x41c7b0
  41c754:	test   DWORD PTR [edi-0x500def1d],0xe8248b31
  41c75e:	fcmovnbe st,st(7)
  41c760:	add    BYTE PTR [edi+0x252d5d00],ch
  41c766:	rcr    BYTE PTR [edx+0x28],0xee
  41c76a:	cld    
  41c76b:	jmp    FWORD PTR [ecx+0x74]
  41c76e:	lock push ebp
  41c770:	sbb    al,0xbd
  41c772:	lds    esi,FWORD PTR [eax]
  41c774:	xor    ebp,DWORD PTR [edx]
  41c776:	mov    esp,0x52250673
  41c77b:	or     al,0x68
  41c77d:	stc    
  41c77e:	retf   0xf101
  41c781:	xchg   edx,eax
  41c782:	idiv   BYTE PTR [edi]
  41c784:	jo     0x41c773
  41c786:	adc    BYTE PTR [ecx],bh
  41c788:	xor    bl,BYTE PTR [ebp-0x6b15172f]
  41c78e:	shr    BYTE PTR [edi],0xf0
  41c791:	loope  0x41c80c
  41c793:	mul    DWORD PTR [esi+0x3a6943cd]
  41c799:	jg     0x41c812
  41c79b:	jo     0x41c78c
  41c79d:	push   es
  41c79e:	iret   
  41c79f:	jns    0x41c7c0
  41c7a1:	mov    eax,0x324c80dd
  41c7a6:	bnd js 0x41c7a9
  41c7a9:	add    BYTE PTR [eax],al
  41c7ab:	mov    bl,0x16
  41c7ad:	(bad)  
  41c7ae:	int3   
  41c7af:	mov    edi,DWORD PTR [ecx-0x744aff0a]
  41c7b5:	add    esi,DWORD PTR es:[esp+eax*2-0x29]
  41c7ba:	dec    edi
  41c7bb:	in     al,dx
  41c7bc:	mov    ebp,DWORD PTR [ecx]
  41c7be:	cld    
  41c7bf:	jne    0x41c801
  41c7c1:	jmp    0x41c780
  41c7c3:	out    dx,eax
  41c7c4:	add    al,0x72
  41c7c6:	mov    ebp,0x2eaa592f
  41c7cb:	jp     0x41c803
  41c7cd:	not    DWORD PTR [eax]
  41c7cf:	mov    bl,0x50
  41c7d1:	ins    BYTE PTR es:[edi],dx
  41c7d2:	into   
  41c7d3:	inc    eax
  41c7d4:	sbb    eax,0x8bf74b72
  41c7d9:	pop    ds
  41c7da:	clc    
  41c7db:	jnp    0x41c7b3
  41c7dd:	scas   eax,DWORD PTR es:[edi]
  41c7de:	dec    ecx
  41c7df:	div    DWORD PTR [ecx]
  41c7e1:	in     al,dx
  41c7e2:	int    0xf2
  41c7e4:	add    al,0xd3
  41c7e6:	test   ah,0x83
  41c7e9:	sub    BYTE PTR [edx+ecx*8],dl
  41c7ec:	rcr    al,0xd5
  41c7ef:	ret    
  41c7f0:	(bad)  
  41c7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f2:	and    eax,0x14272cb2
  41c7f7:	repnz lds eax,FWORD PTR [ecx-0x32]
  41c7fb:	jp     0x41c7fe
  41c7fd:	jg     0x41c801
  41c7ff:	loopne 0x41c84e
  41c801:	dec    edi
  41c802:	add    ebx,edi
  41c804:	pop    es
  41c805:	jb     0x41c845
  41c807:	sti    
  41c808:	and    DWORD PTR [esi],0xff570250
  41c80e:	lods   al,BYTE PTR ds:[esi]
  41c80f:	add    BYTE PTR [eax],al
  41c811:	add    BYTE PTR [edi+0xbd905b8],cl
  41c817:	mov    eax,0x417bf774
  41c81c:	add    cl,bl
  41c81e:	dec    eax
  41c81f:	mov    esi,0xb9f0e975
  41c824:	jne    0x41c817
  41c826:	cmp    ah,cl
  41c828:	hlt    
  41c829:	fbstp  TBYTE PTR [edi]
  41c82b:	mov    ebx,0xc428fd75
  41c830:	hlt    
  41c831:	iret   
  41c832:	aaa    
  41c833:	mov    ebx,0x7c170975
  41c838:	hlt    
  41c839:	mov    edi,0x175bab7
  41c83e:	(bad)  
  41c83f:	jae    0x41c835
  41c841:	scas   eax,DWORD PTR es:[edi]
  41c842:	mov    bh,0x2d
  41c844:	xor    BYTE PTR [edi],bh
  41c846:	mov    bh,0x98
  41c848:	neg    DWORD PTR [edi-0x14fa3e49]
  41c84e:	mov    bl,0x56
  41c850:	push   ebx
  41c851:	aaa    
  41c852:	push   cs
  41c853:	mov    ?,edi
  41c855:	adc    BYTE PTR [esi-0xf170081],ch
  41c85b:	add    eax,0x4678c13b
  41c860:	add    BYTE PTR [edx-0x3e8b453b],bh
  41c866:	sbb    ebx,ebp
  41c868:	out    0x73,eax
  41c86a:	mov    edi,0x3756fcb9
  41c86f:	aaa    
  41c870:	call   0xfcfb77e0
  41c875:	inc    esi
  41c876:	add    BYTE PTR [eax],al
  41c878:	add    BYTE PTR [edi+0x37],ah
  41c87b:	add    cl,ch
  41c87d:	lock scas al,BYTE PTR es:[edi]
  41c87f:	je     0x41c8bf
  41c881:	cs mov edx,0x29e91230
  41c887:	adc    BYTE PTR [edi-0x128b719d],bl
  41c88d:	repz mov bl,0xe7
  41c890:	xchg   DWORD PTR [edi],ebp
  41c892:	mov    edx,0xc473aafc
  41c897:	das    
  41c898:	add    BYTE PTR [ecx],dh
  41c89a:	loop   0x41c8ab
  41c89c:	jb     0x41c89d
  41c89e:	ret    0xc73
  41c8a1:	bnd call 0x654fc799
  41c8a7:	sub    BYTE PTR [eax-0x778fd37],bh
  41c8ad:	xchg   edi,eax
  41c8ae:	ret    0x5170
  41c8b1:	xchg   ecx,eax
  41c8b2:	sbb    eax,0x2c9b828
  41c8b7:	xchg   eax,ecx
  41c8b9:	mov    ds:0xda0084c9,eax
  41c8be:	or     cl,BYTE PTR [ecx-0x50d3474]
  41c8c4:	dec    DWORD PTR [ebp-0x8ffca72]
  41c8ca:	add    edi,DWORD PTR [ebp-0x17]
  41c8cd:	inc    edx
  41c8ce:	or     eax,DWORD PTR [eax]
  41c8d0:	add    BYTE PTR ds:0x623bf1f0,cl
  41c8d6:	out    dx,eax
  41c8d7:	sub    DWORD PTR [ebp+0x520df06d],eax
  41c8dd:	add    BYTE PTR [eax],al
  41c8df:	add    BYTE PTR [edx+0x1dfef314],al
  41c8e5:	lods   al,BYTE PTR ds:[esi]
  41c8e6:	cmp    DWORD PTR [eax],ebp
  41c8e8:	loop   0x41c937
  41c8ea:	add    bl,ch
  41c8ec:	cwde   
  41c8ed:	test   ebx,ecx
  41c8ef:	imul   eax,ebx,0x9afffc82
  41c8f5:	mov    BYTE PTR [eax+edi*4],ah
  41c8f8:	dec    ecx
  41c8f9:	or     ch,al
  41c8fb:	cmp    eax,0x89fbc8b4
  41c900:	outs   dx,DWORD PTR ds:[esi]
  41c901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c902:	mov    ah,0x43
  41c904:	pop    edx
  41c905:	sub    DWORD PTR [esi+0x5d],ebx
  41c908:	or     ebp,0x8bfe8b51
  41c90e:	call   0x4c0bbf
  41c913:	push   esi
  41c914:	repz mov ebx,edi
  41c917:	mov    al,BYTE PTR [esi+0x34fcc19c]
  41c91d:	push   0x9fbd15a8
  41c922:	add    BYTE PTR [ebx-0x3427b92],cl
  41c928:	sbb    al,0x90
  41c92a:	sub    al,BYTE PTR [eax]
  41c92c:	or     ecx,DWORD PTR [edx+esi*4]
  41c92f:	dec    DWORD PTR [esp+ebp*1]
  41c932:	ror    DWORD PTR [edi+ebp*2],0xf3
  41c936:	add    al,BYTE PTR [eax]
  41c938:	repz sub bh,al
  41c93b:	dec    edi
  41c93c:	and    sp,WORD PTR ds:0x5074ecf9
  41c943:	push   eax
  41c944:	add    BYTE PTR [eax],al
  41c946:	add    bl,bl
  41c948:	pop    es
  41c949:	mov    cl,0xff
  41c94b:	fsubr  QWORD PTR [edx]
  41c94d:	ror    DWORD PTR [edi+ebp*2],0xaa
  41c951:	add    eax,DWORD PTR [eax]
  41c953:	repz sbb ebp,edi
  41c956:	mov    bh,BYTE PTR [esi]
  41c958:	xor    al,0x59
  41c95a:	call   0x45dbfd
  41c95f:	push   0x768b5065
  41c964:	or     edi,DWORD PTR [ebp-0x70f05b04]
  41c96a:	cmp    BYTE PTR [edi],0x37
  41c96d:	ret    0x43fc
  41c970:	pop    eax
  41c971:	ret    0xf3ed
  41c974:	lahf   
  41c975:	xchg   DWORD PTR [edi-0xeadc0c],edi
  41c97b:	jl     0x41c91c
  41c97d:	pop    DWORD PTR [edx-0x33db8e9]
  41c983:	ret    
  41c984:	hlt    
  41c985:	pop    ss
  41c986:	cmp    BYTE PTR [ecx],al
  41c988:	pusha  
  41c989:	add    BYTE PTR [ecx-0x7bee1ba5],al
  41c98f:	push   ebp
  41c990:	push   es
  41c991:	out    0x3,eax
  41c993:	repz and bl,bl
  41c996:	nop
  41c997:	sar    DWORD PTR [esi+0x435eabae],0xe7
  41c99e:	add    ecx,ecx
  41c9a0:	repz jae 0x41c9db
  41c9a3:	arpl   WORD PTR [esi+0xf],cx
  41c9a6:	xchg   esi,eax
  41c9a7:	mov    ecx,0x2de706
  41c9ac:	add    BYTE PTR [eax],al
  41c9ae:	fld    QWORD PTR [ebx-0x61434c8d]
  41c9b4:	outs   dx,BYTE PTR ds:[esi]
  41c9b5:	dec    edi
  41c9b6:	repz push es
  41c9b8:	cmp    cl,dl
  41c9ba:	mov    cl,0xb5
  41c9bc:	out    0x58,al
  41c9be:	out    dx,al
  41c9bf:	jl     0x41c9e4
  41c9c1:	shl    DWORD PTR [ebx+eax*4+0x213ccc2b],0xf1
  41c9c9:	pop    esp
  41c9ca:	js     0x41c9fe
  41c9cc:	xchg   ebx,eax
  41c9cd:	lods   al,BYTE PTR ds:[esi]
  41c9ce:	in     eax,dx
  41c9cf:	lock lods eax,DWORD PTR ds:[esi]
  41c9d1:	sar    DWORD PTR ds:0xcdbc6a4e,0x5
  41c9d8:	imul   edi,DWORD PTR [edx-0x3c],0xffffffb4
  41c9dc:	out    0x8e,al
  41c9de:	jno    0x41ca33
  41c9e0:	nop
  41c9e1:	shl    DWORD PTR [edi+0x79c11157],0x4a
  41c9e8:	aaa    
  41c9e9:	push   esp
  41c9ea:	jp     0x41c9b8
  41c9ec:	push   ss
  41c9ed:	rol    DWORD PTR [ecx],0x47
  41c9f0:	fadd   DWORD PTR [ebx-0xd]
  41c9f3:	jg     0x41ca53
  41c9f5:	test   DWORD PTR [edi+0x6187edb4],ecx
  41c9fb:	pop    es
  41c9fc:	out    0x3,eax
  41c9fe:	push   0x77baaa8a
  41ca03:	mov    ah,0x96
  41ca05:	sub    esi,edi
  41ca07:	add    eax,0x8a7803e7
  41ca0c:	inc    esp
  41ca0e:	popf   
  41ca0f:	mov    bl,0xfc
  41ca11:	cdq    
  41ca12:	add    BYTE PTR [eax],al
  41ca14:	add    BYTE PTR [edi-0x46],bl
  41ca17:	push   ebp
  41ca18:	je     0x41c9ce
  41ca1a:	mov    dh,0x4f
  41ca1c:	ins    BYTE PTR es:[edi],dx
  41ca1d:	lods   al,BYTE PTR ds:[esi]
  41ca1e:	ror    BYTE PTR [edi+0x16],cl
  41ca21:	in     al,0xf2
  41ca23:	push   cs
  41ca24:	test   eax,0x7dbf87f0
  41ca29:	sar    BYTE PTR [edi-0x7e],1
  41ca2c:	lea    esp,[ebp-0x4d]
  41ca2f:	cld    
  41ca30:	(bad)  
  41ca31:	sbb    DWORD PTR [ecx+0x6b],edi
  41ca34:	in     al,dx
  41ca35:	xor    esi,DWORD PTR [ebx-0x7a25028d]
  41ca3b:	aaa    
  41ca3c:	push   cs
  41ca3d:	mov    esp,0x98356a0c
  41ca42:	sub    al,0x87
  41ca44:	loope  0x41cab5
  41ca46:	je     0x41ca49
  41ca48:	dec    edi
  41ca49:	call   0x700f3d31
  41ca4e:	mov    dl,0xfe
  41ca50:	cmp    ecx,ecx
  41ca52:	add    BYTE PTR [edx-0x34d6bc3],0x39
  41ca59:	jl     0x41c9e3
  41ca5b:	arpl   WORD PTR [edx+0x644fb2b3],sp
  41ca61:	jne    0x41caba
  41ca63:	cmc    
  41ca64:	mov    ?,WORD PTR [ebx+0x62d9e843]
  41ca6a:	mov    bl,0xfc
  41ca6c:	fs mov al,0x37
  41ca6f:	sbb    ah,BYTE PTR [ebp+ebp*2+0x57]
  41ca73:	cmc    
  41ca74:	outs   dx,BYTE PTR ds:[esi]
  41ca75:	mov    bl,0x9e
  41ca77:	add    eax,0x74
  41ca7c:	jge    0x41ca9d
  41ca7e:	sti    
  41ca7f:	pop    esi
  41ca80:	mov    bl,0x7e
  41ca82:	push   edx
  41ca83:	loope  0x41cacd
  41ca85:	sbb    eax,DWORD PTR [eax]
  41ca87:	jmp    0x101557c
  41ca8c:	scas   al,BYTE PTR es:[edi]
  41ca8d:	add    al,0xfe
  41ca8f:	inc    ebp
  41ca90:	and    eax,0x20ff7988
  41ca95:	pop    ss
  41ca96:	sub    BYTE PTR [ebx],0x5
  41ca99:	(bad)  
  41ca9a:	sti    
  41ca9b:	pop    edi
  41ca9c:	xor    DWORD PTR ds:0x74ec2c5,esp
  41caa2:	push   ecx
  41caa3:	mov    esi,esi
  41caa5:	mov    al,ch
  41caa7:	ins    BYTE PTR es:[edi],dx
  41caa8:	dec    ecx
  41caa9:	pop    es
  41caaa:	add    BYTE PTR [esi-0x73],dl
  41caad:	loope  0x41cae8
  41caaf:	lea    ebx,[edi+0x7f89546b]
  41cab5:	jnp    0x41ca3e
  41cab7:	stc    
  41cab8:	repnz or BYTE PTR [eax+0x0],0x1a
  41cabd:	add    dl,0x50
  41cac0:	mov    ebp,0x26948195
  41cac5:	jae    0x41cac2
  41cac7:	push   eax
  41cac8:	xor    dh,BYTE PTR [edi]
  41caca:	jmp    0x4e0f:0xbc7fda00
  41cad1:	das    
  41cad2:	std    
  41cad3:	dec    edx
  41cad5:	mov    ch,0xf2
  41cad7:	push   esi
  41cad8:	xor    cl,BYTE PTR [ebx-0x1f250004]
  41cade:	add    DWORD PTR [esi+0x0],edx
  41cae1:	add    BYTE PTR [eax],al
  41cae3:	loopne 0x41caf0
  41cae5:	push   0x4006ca00
  41caea:	lea    ecx,[edi-0x71]
  41caed:	clc    
  41caee:	push   DWORD PTR [ebp+0x5b]
  41caf1:	sti    
  41caf2:	adc    eax,0x40186a
  41caf7:	adc    eax,DWORD PTR [eax-0x4]
  41cafa:	and    DWORD PTR [edx],0x72
  41cafd:	or     eax,DWORD PTR [ebx+eax*1+0x4900000b]
  41cb04:	loopne 0x41cb40
  41cb06:	(bad)  
  41cb07:	repz call 0x325c:0x4174fd9f
  41cb0f:	dec    eax
  41cb10:	pop    eax
  41cb11:	add    ecx,DWORD PTR [ebx+esi*8-0x61]
  41cb15:	push   edx
  41cb16:	mov    DWORD PTR [esi],esp
  41cb18:	mov    esp,0x52f3400e
  41cb1d:	inc    edi
  41cb1e:	clc    
  41cb1f:	mov    ds:0x44ff4628,eax
  41cb24:	mov    al,ds:0x3c768b55
  41cb29:	mov    esi,0xbd7034fc
  41cb2e:	jb     0x41cb5f
  41cb30:	or     esi,edx
  41cb32:	xor    BYTE PTR [ebx],0x3c
  41cb35:	cmc    
  41cb36:	ss sahf 
  41cb38:	mov    bh,0x37
  41cb3a:	sub    eax,0xffb52370
  41cb3f:	cmp    ah,0xbc
  41cb42:	jb     0x41cb43
  41cb44:	rcl    BYTE PTR [edi],1
  41cb46:	js     0x41cb48
  41cb48:	add    BYTE PTR [eax],al
  41cb4a:	loope  0x41cb2b
  41cb4c:	add    ebp,DWORD PTR [edx-0xd]
  41cb4f:	and    al,0xb9
  41cb51:	mov    dh,BYTE PTR [esi]
  41cb53:	enter  0x5550,0xe4
  41cb57:	cli    
  41cb58:	mov    bh,0xfc
  41cb5a:	data16 jl 0x41cb1a
  41cb5d:	aad    0x6e
  41cb5f:	pop    edi
  41cb60:	xor    al,0x7
  41cb62:	or     ch,bl
  41cb64:	mov    ebx,0x44cef72
  41cb69:	jmp    0xfd1b995f
  41cb6e:	test   BYTE PTR ds:[ebp+0x40cddf12],bh
  41cb75:	add    BYTE PTR [edx+edi*4+0x4006fcbc],ah
  41cb7c:	cmovo  esi,ebx
  41cb7f:	sub    ebx,edx
  41cb81:	pop    eax
  41cb82:	push   es
  41cb83:	pop    es
  41cb84:	pause  
  41cb86:	jno    0x41cb22
  41cb88:	pop    edx
  41cb89:	mov    esi,0x2b3f567f
  41cb8e:	adc    esi,DWORD PTR [edx+0x7a35e4d]
  41cb94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb95:	int3   
  41cb96:	xor    ebx,DWORD PTR [ebx+0x72]
  41cb99:	scas   eax,DWORD PTR es:[edi]
  41cb9a:	jae    0x41cb3e
  41cb9c:	mov    esi,0x76971983
  41cba1:	inc    edx
  41cba2:	repz pop es
  41cba4:	mov    edx,0x167d9e55
  41cba9:	push   cs
  41cbaa:	jne    0x41cb3e
  41cbac:	out    0x3,al
  41cbae:	add    BYTE PTR [eax],al
  41cbb0:	add    bl,dh
  41cbb2:	push   ds
  41cbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb4:	xor    eax,0x180606b3
  41cbb9:	inc    ebx
  41cbba:	adc    al,0xa7
  41cbbc:	add    esi,DWORD PTR [eax-0x3a]
  41cbbf:	in     eax,0x87
  41cbc1:	ins    DWORD PTR es:[edi],dx
  41cbc2:	push   es
  41cbc3:	out    0x3,eax
  41cbc5:	jo     0x41cb7f
  41cbc7:	pop    edx
  41cbc8:	lea    eax,ds:[ebp+0x2e87041c]
  41cbcf:	cmp    eax,0xf886e1bd
  41cbd4:	inc    ebx
  41cbd5:	repz sub edx,0xe706f286
  41cbdc:	add    eax,DWORD PTR [ebx-0x61]
  41cbdf:	fdiv   QWORD PTR [edi-0x439e4f2a]
  41cbe5:	jno    0x41cb97
  41cbe7:	sbb    ah,BYTE PTR [edi]
  41cbe9:	jp     0x41cbc3
  41cbeb:	jno    0x41cbbb
  41cbed:	aam    0x97
  41cbef:	iret   
  41cbf0:	mov    esp,0x375c58b7
  41cbf5:	mov    ds:0x8cbdae84,eax
  41cbfa:	icebp  
  41cbfb:	mov    edi,0x589fbc
  41cc00:	arpl   WORD PTR [edi+0x4d7510a8],si
  41cc06:	mov    bl,0x83
  41cc08:	inc    edx
  41cc09:	retf   
  41cc0a:	dec    edx
  41cc0b:	push   0xffffffa9
  41cc0d:	ins    DWORD PTR es:[edi],dx
  41cc0e:	sub    eax,0x848b198
  41cc13:	dec    ecx
  41cc14:	jmp    0xf041cc19
  41cc19:	mov    cl,0x72
  41cc1b:	cmp    DWORD PTR [edx-0x35],edi
  41cc1e:	dec    edi
  41cc1f:	ins    BYTE PTR es:[edi],dx
  41cc20:	mov    ah,0xb2
  41cc22:	dec    edi
  41cc23:	inc    ecx
  41cc24:	inc    edx
  41cc25:	clc    
  41cc26:	cld    
  41cc27:	cs jb  0x41cbee
  41cc2a:	or     ebp,DWORD PTR [edi+ebp*1+0x3]
  41cc2e:	popf   
  41cc2f:	sub    cl,BYTE PTR [edi+0x761637af]
  41cc35:	test   al,bl
  41cc37:	xchg   ebp,eax
  41cc38:	or     DWORD PTR [edx-0x57a8fa8e],esi
  41cc3e:	sti    
  41cc3f:	(bad)  
  41cc40:	pop    edi
  41cc41:	mov    bl,0x72
  41cc43:	cmc    
  41cc44:	dec    eax
  41cc45:	aam    0xf0
  41cc47:	out    dx,eax
  41cc48:	dec    edi
  41cc49:	lahf   
  41cc4a:	add    al,0x53
  41cc4c:	out    dx,eax
  41cc4d:	sahf   
  41cc4e:	aam    0xdd
  41cc50:	aas    
  41cc51:	mov    bl,0x5c
  41cc53:	aaa    
  41cc54:	call   0x809b:0x7a34c0c7
  41cc5b:	aad    0x8
  41cc5d:	push   esi
  41cc5e:	push   esi
  41cc5f:	push   ss
  41cc60:	loop   0x41cc30
  41cc62:	addr16 in eax,0x58
  41cc65:	inc    edi
  41cc66:	add    BYTE PTR [edx-0x80],ah
  41cc69:	mov    BYTE PTR [edx],bl
  41cc6b:	ror    DWORD PTR [eax+0x47],1
  41cc6e:	add    BYTE PTR [eax-0x23],dh
  41cc71:	loop   0x41cc2a
  41cc73:	sub    ch,bh
  41cc75:	mov    cl,0x12
  41cc77:	xchg   ebp,eax
  41cc78:	add    al,BYTE PTR [edi+0x0]
  41cc7b:	add    BYTE PTR [eax],al
  41cc7d:	add    BYTE PTR [eax],al
  41cc7f:	and    DWORD PTR [ecx+0x8],ecx
  41cc82:	mov    ds:0x402bb6,eax
  41cc87:	adc    DWORD PTR [ecx+0xc],ecx
  41cc8a:	mov    ds:0x403b1e,eax
  41cc8f:	add    DWORD PTR [ecx+0x10],ecx
  41cc92:	mov    ds:0x402b8a,eax
  41cc97:	adc    DWORD PTR [ecx+0x14],ecx
  41cc9a:	mov    ds:0x403306,eax
  41cc9f:	loope  0x41cce9
  41cca1:	sbb    BYTE PTR [edx+0x58],ch
  41cca4:	es cmc 
  41cca6:	mov    bh,0x89
  41cca8:	add    ecx,DWORD PTR [ecx-0x7ab44d83]
  41ccae:	xor    eax,0x402b56
  41ccb3:	loop   0x41cc95
  41ccb5:	dec    ecx
  41ccb6:	add    BYTE PTR [edx+0x7e],cl
  41ccb9:	ret    
  41ccba:	push   eax
  41ccbb:	fs jle 0x41ccef
  41ccbe:	mov    esp,0xff004348
  41ccc3:	add    al,0xde
  41ccc5:	mov    cs:0x403316,eax
  41cccb:	scas   eax,DWORD PTR es:[edi]
  41cccc:	lock out dx,eax
  41ccce:	pop    eax
  41cccf:	and    bl,BYTE PTR [ecx+0x4a]
  41ccd2:	add    BYTE PTR [edx],cl
  41ccd4:	add    bl,0x50
  41ccd7:	sbb    eax,0x19b800b5
  41ccdc:	add    edi,ebx
  41ccde:	(bad)  
  41ccdf:	inc    eax
  41cce0:	mov    bh,0x9f
  41cce2:	or     BYTE PTR [eax],al
  41cce4:	add    BYTE PTR [eax],al
  41cce6:	jb     0x41cd2e
  41cce8:	add    BYTE PTR [ebp-0x17ab8ce1],cl
  41ccee:	les    edi,FWORD PTR [eax+eax*1]
  41ccf1:	add    BYTE PTR [ecx-0x36],al
  41ccf4:	dec    esp
  41ccf5:	jmp    DWORD PTR [edi-0xcbc4b52]
  41ccfb:	lahf   
  41ccfc:	mov    ecx,0x65d319d5
  41cd01:	adc    ebx,DWORD PTR [ecx+eiz*8+0x3]
  41cd05:	mov    ebx,DWORD PTR [esi]
  41cd07:	cwde   
  41cd08:	pop    ebx
  41cd09:	call   0x45b706
  41cd0e:	js     0x41cd75
  41cd10:	push   ebx
  41cd11:	std    
  41cd12:	mov    esi,0xf340789b
  41cd17:	dec    esp
  41cd18:	shl    BYTE PTR [eax+0x4497c3],cl
  41cd1e:	sub    bl,BYTE PTR [ebx-0x604f4b54]
  41cd24:	sub    al,0x19
  41cd26:	sbb    cl,bl
  41cd28:	or     BYTE PTR [eax+0x112c9fb0],bh
  41cd2e:	or     bh,BYTE PTR [ebx-0x604f4af4]
  41cd34:	sub    al,0x9
  41cd36:	xor    eax,0xb0a89fa3
  41cd3b:	lahf   
  41cd3c:	add    edi,DWORD PTR [ecx]
  41cd3e:	xor    BYTE PTR [ebx-0x4f97802],dl
  41cd44:	ins    BYTE PTR es:[edi],dx
  41cd45:	inc    eax
  41cd46:	repz mov WORD PTR [esi+0x59],ss
  41cd4a:	add    BYTE PTR [eax],al
  41cd4c:	add    BYTE PTR [edx],ch
  41cd4e:	loop   0x41cd5f
  41cd50:	add    BYTE PTR [esi+0x1780a828],ah
  41cd56:	push   esp
  41cd57:	push   edx
  41cd58:	push   ebp
  41cd59:	mov    ebx,esp
  41cd5b:	push   esp
  41cd5c:	call   0xfcf89e98
  41cd61:	pop    ecx
  41cd62:	lods   eax,DWORD PTR ds:[esi]
  41cd63:	xchg   DWORD PTR [edx-0x61],edi
  41cd66:	out    0xab,eax
  41cd68:	mov    edi,0x6a00a02a
  41cd6d:	pop    es
  41cd6e:	and    edi,DWORD PTR [eax]
  41cd70:	shr    BYTE PTR [ebx],0xc8
  41cd73:	outs   dx,DWORD PTR ds:[esi]
  41cd74:	inc    esi
  41cd75:	repz push es
  41cd77:	out    0x8e,eax
  41cd79:	inc    ecx
  41cd7a:	pop    ss
  41cd7b:	jb     0x41cdb5
  41cd7d:	out    0x7b,eax
  41cd7f:	sub    esp,DWORD PTR [esp+edi*1+0x3e51e921]
  41cd86:	lahf   
  41cd87:	mov    bl,0xa7
  41cd89:	lahf   
  41cd8a:	lods   eax,DWORD PTR ds:[esi]
  41cd8b:	arpl   bx,ax
  41cd8d:	out    0x82,eax
  41cd8f:	xchg   edx,eax
  41cd90:	add    eax,0xc0106f3
  41cd95:	and    eax,DWORD PTR [edx+0x3b69a3ab]
  41cd9b:	xchg   ebx,eax
  41cd9c:	stos   DWORD PTR es:[edi],eax
  41cd9d:	ds repnz push ebp
  41cda0:	mov    edx,0x80ddc671
  41cda5:	cs or  bh,ah
  41cda8:	add    ebp,DWORD PTR [eax+0x43]
  41cdab:	dec    ebx
  41cdac:	push   ebx
  41cdad:	leave  
  41cdae:	pop    es
  41cdaf:	popf   
  41cdb0:	push   edx
  41cdb1:	add    BYTE PTR [eax],al
  41cdb3:	add    BYTE PTR [ebx+0x68],bl
  41cdb6:	cmp    bh,BYTE PTR [edx-0x305480b9]
  41cdbc:	jno    0x41cd84
  41cdbe:	in     eax,dx
  41cdbf:	jg     0x41cd47
  41cdc1:	or     bh,ah
  41cdc3:	add    esi,DWORD PTR [edx+0x2b]
  41cdc6:	sti    
  41cdc7:	add    dh,dh
  41cdc9:	or     BYTE PTR [edx+0x5],0xf3
  41cdcd:	push   es
  41cdce:	ins    BYTE PTR es:[edi],dx
  41cdcf:	inc    eax
  41cdd0:	or     edx,DWORD PTR [esi-0x7f]
  41cdd3:	add    esp,DWORD PTR [ebp+0x1882ff55]
  41cdd9:	lods   eax,DWORD PTR ds:[esi]
  41cdda:	in     eax,0x8b
  41cddc:	mov    cl,0xba
  41cdde:	arpl   sp,ax
  41cde0:	out    0x82,eax
  41cde2:	bound  eax,QWORD PTR [esi]
  41cde4:	repz push es
  41cde6:	push   0x37
  41cde8:	fild   DWORD PTR [edi]
  41cdea:	idiv   BYTE PTR [edi+0x72]
  41cded:	or     edi,esp
  41cdef:	add    ebp,DWORD PTR [eax+0x42]
  41cdf2:	add    BYTE PTR [ecx-0x56bd7fd9],bh
  41cdf8:	pop    ds
  41cdf9:	push   ebp
  41cdfa:	push   ebp
  41cdfb:	xchg   ecx,eax
  41cdfc:	sbb    ebx,DWORD PTR [ebx+0x49689efc]
  41ce02:	fsubr  DWORD PTR [edi+esi*4-0x5]
  41ce06:	add    DWORD PTR [ecx],0xffffffed
  41ce09:	push   es
  41ce0a:	add    BYTE PTR [edx-0x1c],ch
  41ce0d:	mov    dh,0xff
  41ce0f:	in     eax,dx
  41ce10:	adc    al,0x4a
  41ce12:	add    ch,cl
  41ce14:	lock jg 0x41ce59
  41ce17:	test   DWORD PTR [eax],eax
  41ce19:	add    BYTE PTR [eax],al
  41ce1b:	pop    ds
  41ce1c:	and    DWORD PTR [ecx],eax
  41ce1e:	mov    edi,0x4d399f23
  41ce23:	cmp    ch,BYTE PTR [ebx-0x76c7537a]
  41ce29:	mov    edi,0x241e4de
  41ce2e:	jmp    0x35a45423
  41ce33:	out    dx,eax
  41ce34:	and    BYTE PTR [edx],ch
  41ce36:	fs add al,0x93
  41ce39:	push   edi
  41ce3a:	inc    ecx
  41ce3b:	xchg   esp,eax
  41ce3c:	inc    esp
  41ce3d:	add    cl,ch
  41ce3f:	jne    0x41ce8a
  41ce41:	clc    
  41ce42:	mov    ecx,0xbf4fc367
  41ce47:	imul   edi,DWORD PTR [ecx],0xc
  41ce4a:	add    edi,edi
  41ce4c:	call   0xaa73:0x6b9c06fc
  41ce53:	outs   dx,DWORD PTR ds:[esi]
  41ce54:	xor    eax,edi
  41ce56:	jmp    0xeb585156
  41ce5b:	lock push es
  41ce5d:	and    DWORD PTR [edi+edi*1-0x2],0x8eb660c
  41ce65:	add    cl,ch
  41ce67:	inc    eax
  41ce68:	jle    0x41ceac
  41ce6a:	shr    DWORD PTR [ebp+0x38],1
  41ce6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6e:	add    dl,al
  41ce70:	(bad)  
  41ce71:	sub    edi,edi
  41ce73:	xchg   ebp,eax
  41ce74:	test   BYTE PTR [ecx-0xc],bh
  41ce77:	push   ecx
  41ce78:	(bad)  
  41ce79:	in     al,0x42
  41ce7b:	test   al,0x7
  41ce7d:	add    BYTE PTR [eax-0x38000000],ch
  41ce83:	inc    BYTE PTR [eax+0x7cbf1]
  41ce89:	mov    ebx,edi
  41ce8b:	xor    ax,0x7e45
  41ce8f:	inc    BYTE PTR [ecx+0x78be5]
  41ce95:	sub    edi,ecx
  41ce97:	jbe    0x41ce80
  41ce99:	or     bl,BYTE PTR [ecx]
  41ce9b:	cmc    
  41ce9c:	jecxz  0x41ce9e
  41ce9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce9f:	sub    al,0xd3
  41cea1:	add    DWORD PTR [edx-0x7dba78f9],ecx
  41cea7:	(bad)  
  41cea8:	inc    DWORD PTR [ecx]
  41ceaa:	pop    edx
  41ceab:	pop    es
  41ceac:	add    BYTE PTR [ebx+0x769fb9a],cl
  41ceb2:	or     eax,0x4a31dfed
  41ceb7:	pop    es
  41ceb8:	add    BYTE PTR [esi-0x21],bl
  41cebb:	(bad)  
  41cebc:	jp     0x41cef2
  41cebe:	push   0x6e
  41cec0:	adc    esp,esi
  41cec2:	popf   
  41cec3:	inc    edx
  41cec4:	add    BYTE PTR [ecx-0x3d],bl
  41cec7:	in     al,dx
  41cec8:	fild   DWORD PTR [ebp+0x6a20dbda]
  41cece:	cmp    al,0x84
  41ced0:	jns    0x41ce7a
  41ced2:	push   edx
  41ced3:	pop    edi
  41ced4:	pop    esp
  41ced5:	dec    eax
  41ced6:	or     al,BYTE PTR [edi]
  41ced8:	xchg   DWORD PTR [ebp-0x1a],ecx
  41cedb:	fld    DWORD PTR [ebx+ecx*4]
  41cede:	int    0x5f
  41cee0:	adc    edx,esi
  41cee2:	adc    al,0x73
  41cee4:	add    eax,0x9f000000
  41ceea:	add    BYTE PTR [edx+0x8],ch
  41ceed:	repz pop eax
  41ceef:	ds loopne 0x41cf15
  41cef2:	mov    al,ds:0x353d0000
  41cef7:	aas    
  41cef8:	lock push 0x840ca7db
  41cefe:	push   0x0
  41cf00:	(bad)  
  41cf01:	jbe    0x41cee7
  41cf03:	or     edi,edi
  41cf05:	ja     0x41cf67
  41cf07:	das    
  41cf08:	add    ecx,ebx
  41cf0a:	xchg   ecx,eax
  41cf0b:	mov    bl,0xfd
  41cf0d:	lods   al,BYTE PTR ds:[esi]
  41cf0e:	daa    
  41cf0f:	inc    ecx
  41cf10:	or     BYTE PTR [esi+0x60],ch
  41cf13:	or     BYTE PTR cs:[eax-0x25],ch
  41cf17:	scas   eax,DWORD PTR es:[edi]
  41cf18:	out    0xf,al
  41cf1a:	lahf   
  41cf1b:	add    BYTE PTR [eax],al
  41cf1d:	js     0x41cf57
  41cf1f:	mov    DWORD PTR [edx-0x6d],eax
  41cf22:	mov    BYTE PTR [esi],cl
  41cf24:	dec    eax
  41cf25:	repz lahf 
  41cf27:	mov    DWORD PTR [edx-0x7d],eax
  41cf2a:	xor    eax,0x50c30849
  41cf2f:	das    
  41cf30:	fdiv   st,st(0)
  41cf32:	or     DWORD PTR [ebx-0x79],edx
  41cf35:	loopne 0x41ceea
  41cf37:	test   al,0x37
  41cf39:	(bad)  
  41cf3a:	jmp    0x4a89:0xa3b1feb4
  41cf41:	pop    ds
  41cf42:	and    bl,bh
  41cf44:	sub    al,0x68
  41cf46:	pop    ebp
  41cf47:	add    al,0x74
  41cf49:	jmp    0x4a2082
  41cf4e:	add    BYTE PTR [eax],al
  41cf50:	xor    eax,0x242d109c
  41cf55:	pop    ebp
  41cf56:	add    al,0x89
  41cf58:	mov    dh,0x13
  41cf5a:	push   esp
  41cf5b:	dec    edi
  41cf5c:	push   0xb8010475
  41cf61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf62:	push   ebx
  41cf63:	call   0xfcf47e5c
  41cf68:	repnz push es
  41cf6a:	sub    cl,BYTE PTR [eax]
  41cf6c:	push   0x46
  41cf6e:	jmp    0x41cefa
  41cf70:	cmp    edi,edi
  41cf72:	inc    eax
  41cf73:	jmp    0x420d226
  41cf78:	push   0xcb5b972b
  41cf7d:	imul   esp,DWORD PTR ds:0x2b7bf304,0xa57e34bc
  41cf87:	push   ebx
  41cf88:	mov    esi,0x41b6f733
  41cf8d:	sti    
  41cf8e:	mov    ds,ebx
  41cf90:	call   0xf432:0x648095a9
  41cf97:	mov    ah,BYTE PTR [ecx]
  41cf99:	scas   eax,DWORD PTR es:[edi]
  41cf9a:	imul   ebp,DWORD PTR [ebp-0x74e906e0],0xffffffb6
  41cfa1:	sahf   
  41cfa2:	je     0x41cf8b
  41cfa4:	xchg   DWORD PTR [ecx+0x7fe3425f],ebp
  41cfaa:	(bad)  [edi]
  41cfac:	push   0x43
  41cfae:	sub    ecx,DWORD PTR [ecx+0x30b6ed6c]
  41cfb4:	add    BYTE PTR [eax],al
  41cfb6:	add    bh,dh
  41cfb8:	test   ebx,ecx
  41cfba:	stos   DWORD PTR es:[edi],eax
  41cfbb:	lock xor ebp,ebp
  41cfbe:	mov    ebp,0xaae80eb3
  41cfc3:	out    0xea,al
  41cfc5:	lods   eax,DWORD PTR ds:[esi]
  41cfc6:	push   es
  41cfc7:	jo     0x41d01f
  41cfc9:	cs mov dh,0x3f
  41cfcc:	test   DWORD PTR [ebx+0x63f9f3ab],esp
  41cfd2:	cmp    eax,0xbd15a92e
  41cfd7:	mov    bl,0xe
  41cfd9:	out    0x29,eax
  41cfdb:	retf   0x837b
  41cfde:	pop    edi
  41cfdf:	mov    esp,0xf33e9c9e
  41cfe4:	push   es
  41cfe5:	add    BYTE PTR [ebx+esi*4-0x52],ah
  41cfe9:	dec    edi
  41cfea:	bound  edi,QWORD PTR ds:0xdf5cfd39
  41cff0:	stos   DWORD PTR es:[edi],eax
  41cff1:	jb     0x41cfe0
  41cff3:	cwde   
  41cff4:	xor    ebp,edx
  41cff6:	(bad)  
  41cff7:	sahf   
  41cff8:	test   DWORD PTR [edi+0x727dec55],edi
  41cffe:	rcl    DWORD PTR [edx+esi*4+0x73],0xef
  41d003:	and    BYTE PTR [esi-0x3b],bh
  41d006:	rcr    DWORD PTR [esp+ebx*8-0x4],0xae
  41d00b:	push   0x2701c47
  41d010:	out    0x88,eax
  41d012:	and    al,0x53
  41d014:	jge    0x41d05d
  41d016:	xchg   esi,eax
  41d017:	jo     0x41cfca
  41d019:	cld    
  41d01a:	mov    es,WORD PTR [eax]
  41d01c:	add    BYTE PTR [eax],al
  41d01e:	test   BYTE PTR [esi],0x75
  41d021:	lock imul edi,DWORD PTR ds:0xe33a70c8,0xffffff86
  41d029:	sub    dl,BYTE PTR [edi-0x3ba3d1e2]
  41d02f:	bound  edx,QWORD PTR [edi+0x51]
  41d032:	loopne 0x41d075
  41d034:	add    cl,ch
  41d036:	jne    0x41d07d
  41d038:	clc    
  41d039:	mov    ecx,0x4e4fc37b
  41d03e:	or     al,0x17
  41d040:	std    
  41d041:	mov    esp,0x53299eec
  41d046:	xchg   BYTE PTR [ebx-0x4e3bc678],ch
  41d04c:	jae    0x41d04f
  41d04e:	jb     0x41d07d
  41d050:	clc    
  41d051:	jmp    0xaaccb55c
  41d056:	and    BYTE PTR [eax],bh
  41d058:	mov    ebp,DWORD PTR [edx-0x6b02c7f4]
  41d05e:	pop    eax
  41d05f:	jg     0x41d026
  41d061:	add    BYTE PTR [edx],al
  41d063:	scas   al,BYTE PTR es:[edi]
  41d064:	jmp    0xbd69de68
  41d069:	jne    0x41d079
  41d06b:	jg     0x41d0ae
  41d06d:	clc    
  41d06e:	fs pop esp
  41d070:	xor    al,0x2c
  41d072:	or     eax,0x6438573
  41d077:	pop    ebx
  41d078:	push   esi
  41d079:	fwait
  41d07a:	mov    ebp,0xa438572
  41d07f:	jle    0x41d0c2
  41d081:	or     BYTE PTR [eax],al
  41d083:	add    BYTE PTR [eax],al
  41d085:	arpl   WORD PTR [edi+0x4],ax
  41d088:	jmp    0x3d42b2
  41d08d:	pop    ecx
  41d08e:	mov    esp,0xbbec5ffb
  41d093:	mov    esi,0x8738ca0c
  41d098:	in     al,dx
  41d099:	sbb    DWORD PTR [eax+0x20],esp
  41d09c:	push   ebx
  41d09d:	adc    esp,ecx
  41d09f:	xchg   DWORD PTR [ebp-0x66],eax
  41d0a2:	push   es
  41d0a3:	mov    edi,0xe7fe9656
  41d0a8:	push   0x8bfb717d
  41d0ad:	or     ch,BYTE PTR [ecx]
  41d0af:	repz jne 0x41d047
  41d0b2:	mov    dh,0xbc
  41d0b4:	jmp    0x41d417
  41d0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ba:	(bad)  [ecx]
  41d0bc:	lea    edi,[edi]
  41d0be:	iret   
  41d0bf:	push   esp
  41d0c0:	call   0x41ba99
  41d0c5:	fucomip st,st(0)
  41d0c7:	sti    
  41d0c8:	push   eax
  41d0c9:	shr    DWORD PTR [edx+0x4c],0x53
  41d0cd:	std    
  41d0ce:	fadd   DWORD PTR [edi]
  41d0d0:	call   0x3d2d40
  41d0d5:	ret    
  41d0d6:	call   0xd81c56d2
  41d0db:	pusha  
  41d0dc:	push   0xfffffff3
  41d0de:	mov    ds:0x6d0f4285,eax
  41d0e3:	mov    bl,0x72
  41d0e5:	add    eax,DWORD PTR [ecx]
  41d0e7:	push   cs
  41d0e8:	pop    eax
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    ch,ah
  41d0ed:	pop    ebp
  41d0ee:	add    BYTE PTR [ecx+0x4285a12f],al
  41d0f4:	jge    0xabbce3ad
  41d0fa:	inc    eax
  41d0fb:	add    BYTE PTR [eax-0x25],bh
  41d0fe:	stos   DWORD PTR es:[edi],eax
  41d0ff:	sub    BYTE PTR [esi],bh
  41d101:	test   al,0x52
  41d103:	std    
  41d104:	data16 test al,0x56
  41d107:	call   0xfcf38e64
  41d10c:	and    esi,DWORD PTR [ebx]
  41d10e:	aas    
  41d10f:	in     al,dx
  41d110:	and    ch,BYTE PTR [ebx]
  41d112:	add    BYTE PTR [edx],dh
  41d114:	and    cl,al
  41d116:	push   ds
  41d117:	in     eax,dx
  41d118:	mov    ch,0x6d
  41d11a:	jle    0x41d157
  41d11c:	icebp  
  41d11d:	sbb    BYTE PTR [edi-0x4],al
  41d120:	fcomp  DWORD PTR [ecx-0x24]
  41d123:	xlat   BYTE PTR ds:[ebx]
  41d124:	lock jmp 0x3e08:0x1b4350ab
  41d12c:	and    edi,DWORD PTR [eax+0x56]
  41d12f:	in     eax,dx
  41d130:	test   DWORD PTR ds:0x7f427f,ebx
  41d136:	push   ds
  41d137:	add    eax,esi
  41d139:	sub    BYTE PTR [ecx+0x56],bl
  41d13c:	pop    ebx
  41d13d:	out    0x9a,eax
  41d13f:	cld    
  41d140:	fs xor eax,esp
  41d143:	jb     0x41d12e
  41d145:	pop    ebp
  41d146:	cwde   
  41d147:	inc    DWORD PTR [ebp+0x4e]
  41d14a:	mov    cl,0x30
  41d14c:	xor    edi,DWORD PTR [ecx]
  41d14e:	or     edi,ebp
  41d150:	add    BYTE PTR [eax],al
  41d152:	add    BYTE PTR [esi-0x108d4e41],bh
  41d158:	jg     0x41d0f2
  41d15a:	sub    eax,DWORD PTR [edi+eax*1+0x25]
  41d15e:	mov    bl,0x7b
  41d160:	dec    esp
  41d161:	repz jl 0x41d138
  41d164:	xchg   ecx,eax
  41d165:	sub    eax,0xe9a2b1df
  41d16a:	dec    eax
  41d16b:	add    eax,DWORD PTR [esi-0x5b]
  41d16e:	dec    esi
  41d16f:	xor    al,0xc9
  41d171:	(bad)  
  41d172:	add    esp,DWORD PTR [eax+0x8870291]
  41d178:	and    ebp,DWORD PTR [edx+0x29]
  41d17b:	outs   dx,DWORD PTR ds:[esi]
  41d17c:	pop    es
  41d17d:	je     0x41d1c7
  41d17f:	ja     0x41d1b7
  41d181:	fidivr WORD PTR [eax]
  41d183:	sti    
  41d184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d185:	sti    
  41d186:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d188:	dec    ecx
  41d189:	out    0x4c,eax
  41d18b:	cmp    al,0x8c
  41d18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18e:	cmp    ch,dh
  41d190:	inc    esi
  41d191:	add    BYTE PTR [ecx+0x77],cl
  41d194:	sbb    ch,cl
  41d196:	idiv   BYTE PTR [edi+ecx*8-0x58]
  41d19a:	pop    es
  41d19b:	repz cmp eax,0xed737a6
  41d1a1:	sahf   
  41d1a2:	sbb    bh,cl
  41d1a4:	pop    esi
  41d1a5:	sub    DWORD PTR [edx+ebp*2],eax
  41d1a8:	sahf   
  41d1a9:	das    
  41d1aa:	mov    DWORD PTR [edi-0x367c2be6],edx
  41d1b0:	stos   DWORD PTR es:[edi],eax
  41d1b1:	push   ecx
  41d1b2:	inc    esi
  41d1b3:	repz push es
  41d1b5:	sti    
  41d1b6:	out    0x0,eax
  41d1b8:	add    BYTE PTR [eax],al
  41d1ba:	xchg   esp,eax
  41d1bb:	push   ecx
  41d1bc:	ins    BYTE PTR es:[edi],dx
  41d1bd:	mov    cl,0x77
  41d1bf:	mov    ah,BYTE PTR [esi]
  41d1c1:	aaa    
  41d1c2:	or     bh,BYTE PTR ds:0x499cff9d
  41d1c8:	out    0x59,eax
  41d1ca:	pop    esi
  41d1cb:	sti    
  41d1cc:	cmp    dl,BYTE PTR ds:0x9b9e06b3
  41d1d2:	test   eax,0x9eb23d9b
  41d1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d8:	(bad)  
  41d1d9:	fild   DWORD PTR [eax-0x5d16c009]
  41d1df:	pop    esp
  41d1e1:	(bad)  
  41d1e2:	xor    eax,0xdc725636
  41d1e7:	jmp    0x56fb:0xf861bf0b
  41d1ee:	lods   eax,DWORD PTR ds:[esi]
  41d1ef:	push   es
  41d1f0:	mov    DWORD PTR [ecx],esp
  41d1f2:	mov    edi,0x1774d889
  41d1f7:	mov    ch,dh
  41d1f9:	jge    0x41d1f6
  41d1fb:	fadd   QWORD PTR [edx]
  41d1fd:	add    al,0x95
  41d1ff:	inc    esi
  41d200:	add    BYTE PTR [ebp-0x34],bl
  41d203:	lods   al,BYTE PTR ds:[esi]
  41d204:	add    ah,bl
  41d206:	mov    eax,ds:0x1ba983a3
  41d20b:	jmp    0x41d261
  41d20d:	mov    ?,ebx
  41d20f:	pop    esi
  41d210:	inc    eax
  41d211:	jmp    0xcd547441
  41d216:	fld    QWORD PTR [esi+0x0]
  41d219:	rcr    DWORD PTR [eax+ebx*4-0x4],0xae
  41d21e:	add    BYTE PTR [eax],al
  41d220:	add    BYTE PTR [esi-0x64],ch
  41d223:	cld    
  41d224:	sbb    eax,0x9780aef4
  41d229:	bound  esp,QWORD PTR [ebx-0x68fb69ac]
  41d22f:	adc    DWORD PTR [ecx],ebp
  41d231:	out    dx,eax
  41d232:	inc    ecx
  41d233:	pop    esi
  41d234:	jb     0x41d1ec
  41d236:	aas    
  41d237:	rcl    DWORD PTR [esi],0x6
  41d23a:	sbb    al,0x74
  41d23c:	ret    0x1ec8
  41d23f:	je     0x41d1f2
  41d241:	xchg   DWORD PTR [eax],esp
  41d243:	and    al,0xf5
  41d245:	out    dx,eax
  41d246:	dec    ebx
  41d247:	jo     0x41d237
  41d249:	and    eax,0xf7e52423
  41d24e:	dec    esi
  41d24f:	js     0x41d207
  41d251:	shl    DWORD PTR [ecx-0x501ff8d],0xe7
  41d258:	aaa    
  41d259:	mov    ah,0x58
  41d25b:	sti    
  41d25c:	add    DWORD PTR [edx-0x7db77910],eax
  41d262:	mov    bl,0x44
  41d264:	je     0x41d1f5
  41d266:	push   cs
  41d267:	cmp    BYTE PTR [eax-0x79],0x8
  41d26b:	je     0x41d27a
  41d26d:	jb     0x41d213
  41d26f:	mov    ah,0x43
  41d271:	or     dl,BYTE PTR [edi+0x11]
  41d274:	lock sub BYTE PTR [eax+0x0],cl
  41d278:	jmp    0x41d2ac
  41d27a:	mov    BYTE PTR [esp+edi*2+0xa],dh
  41d27e:	ds je  0x41d294
  41d281:	xchg   ecx,eax
  41d282:	call   0xce00:0x87e4
  41d289:	push   esi
  41d28a:	sti    
  41d28b:	adc    edx,0x56
  41d28e:	jo     0x41d2a9
  41d290:	mov    dl,0x14
  41d292:	idiv   bh
  41d294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d295:	or     BYTE PTR [esi],0x8d
  41d298:	or     bl,bl
  41d29a:	cli    
  41d29b:	mov    ss:0x85feea30,al
  41d2a1:	add    DWORD PTR [eax],edx
  41d2a3:	push   esi
  41d2a4:	mov    dl,0x2d
  41d2a6:	jmp    0x41d2a6
  41d2a8:	push   ebp
  41d2a9:	dec    DWORD PTR [ebx]
  41d2ab:	mov    eax,0x15fb0ad9
  41d2b0:	jp     0x41d2ab
  41d2b2:	aas    
  41d2b3:	add    ah,al
  41d2b5:	and    esp,eax
  41d2b7:	pop    edi
  41d2b8:	pop    eax
  41d2b9:	lahf   
  41d2ba:	cld    
  41d2bb:	mov    bl,BYTE PTR [ebx-0x5e8b4374]
  41d2c1:	fild   WORD PTR [esi-0x75f451ac]
  41d2c7:	adc    al,0x6a
  41d2c9:	xchg   esi,esi
  41d2cb:	or     eax,0xfa800c3e
  41d2d0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d2:	xor    eax,0x7ba65407
  41d2d7:	iret   
  41d2d8:	mov    ebx,0x4d72d332
  41d2dd:	out    dx,eax
  41d2de:	add    al,0x0
  41d2e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e1:	sub    BYTE PTR [ebp-0x7e2ab080],bl
  41d2e7:	jmp    0x41d270
  41d2e9:	lods   eax,DWORD PTR ds:[esi]
  41d2ea:	add    BYTE PTR [eax],al
  41d2ec:	add    BYTE PTR [eax],al
  41d2ee:	add    al,al
  41d2f0:	pop    ebx
  41d2f1:	jnp    0x41d365
  41d2f3:	jmp    0x41d31d
  41d2f5:	inc    edi
  41d2f6:	or     BYTE PTR [ebp+ebx*2-0x5628bc87],bh
  41d2fd:	scas   eax,DWORD PTR es:[edi]
  41d2fe:	adc    cl,BYTE PTR [ebx+0x6a0040bf]
  41d304:	jno    0x41d2ea
  41d306:	sbb    ebp,DWORD PTR [eax+0x6b]
  41d309:	loopne 0x41d291
  41d30b:	aaa    
  41d30c:	adc    al,0xdc
  41d30e:	mov    BYTE PTR ds:0x6a291a0c,ch
  41d314:	hlt    
  41d315:	out    0x2f,eax
  41d317:	push   sp
  41d319:	call   0x42f9fe6d
  41d31e:	inc    esp
  41d31f:	repz scas eax,DWORD PTR es:[edi]
  41d321:	jg     0x41d366
  41d323:	pop    ss
  41d324:	adc    al,0x54
  41d326:	mov    DWORD PTR [ebx+eax*2+0x6943184e],ebp
  41d32d:	lock sub BYTE PTR [ebp+0x6a35ad9c],0xdc
  41d335:	out    0x1f,eax
  41d337:	push   0xfffffffc
  41d339:	out    0x23,eax
  41d33b:	(bad)  [esp+edi*8+0x24302d84]
  41d343:	retf   
  41d344:	scas   eax,DWORD PTR es:[edi]
  41d345:	jnp    0x41d38a
  41d347:	iret   
  41d348:	iret   
  41d349:	jns    0x41d38d
  41d34b:	sti    
  41d34c:	push   es
  41d34d:	jb     0x41d38b
  41d34f:	test   DWORD PTR [ebp+0x13a6],0xb537400
  41d359:	hlt    
  41d35a:	ins    DWORD PTR es:[edi],dx
  41d35b:	dec    ebx
  41d35c:	add    edi,eax
  41d35e:	dec    DWORD PTR [edx+0x6f30497]
  41d364:	ins    BYTE PTR es:[edi],dx
  41d365:	dec    eax
  41d366:	pop    ss
  41d367:	call   DWORD PTR [esi-0x18cf8365]
  41d36d:	add    esi,DWORD PTR [edi-0x39]
  41d370:	cmc    
  41d371:	xchg   edi,esp
  41d373:	pop    es
  41d374:	out    0x3,eax
  41d376:	mov    esi,ebp
  41d378:	arpl   WORD PTR [eax],si
  41d37a:	iret   
  41d37b:	loop   0x41d32b
  41d37d:	fwait
  41d37e:	adc    BYTE PTR [esi-0x19],al
  41d381:	add    edi,DWORD PTR [edx-0x36]
  41d384:	xchg   esi,eax
  41d385:	scas   al,BYTE PTR es:[edi]
  41d386:	ret    
  41d387:	mov    eax,ds:0xaed19bbc
  41d38c:	in     eax,dx
  41d38d:	scas   al,BYTE PTR es:[edi]
  41d38e:	out    dx,eax
  41d38f:	fdiv   DWORD PTR [ecx-0x46]
  41d392:	ins    DWORD PTR es:[edi],dx
  41d393:	add    eax,0xa1dfd9cf
  41d398:	aad    0x19
  41d39a:	jmp    0x5129f632
  41d39f:	aaa    
  41d3a0:	(bad)  
  41d3a1:	aaa    
  41d3a2:	pand   mm7,QWORD PTR [ebp+0x26f91b18]
  41d3a9:	add    al,0x72
  41d3ab:	retf   0x19da
  41d3ae:	fst    DWORD PTR [ebx+0x3ee8e822]
  41d3b4:	(bad)  
  41d3b5:	pusha  
  41d3b6:	xor    eax,DWORD PTR [edi]
  41d3b8:	out    0x80,eax
  41d3ba:	add    BYTE PTR [eax],al
  41d3bc:	add    BYTE PTR [eax],dh
  41d3be:	jmp    0x41d3ea
  41d3c0:	push   esp
  41d3c1:	jp     0x41d38c
  41d3c3:	push   ss
  41d3c4:	scas   eax,DWORD PTR es:[edi]
  41d3c5:	ret    
  41d3c6:	mov    eax,ds:0xa8b79bb4
  41d3cb:	push   DWORD PTR [ebp+0x45]
  41d3ce:	test   BYTE PTR [edi+0x438c5af5],bh
  41d3d4:	or     eax,0xf4fd370f
  41d3d9:	or     ch,dh
  41d3db:	aas    
  41d3dc:	jmp    0xe2429dba
  41d3e1:	push   0x9547e863
  41d3e6:	test   DWORD PTR [edi-0x318b12],edi
  41d3ec:	call   0x58561e1
  41d3f1:	xlat   BYTE PTR ds:[ebx]
  41d3f2:	mov    DWORD PTR ss:[esi],ebp
  41d3f5:	shl    BYTE PTR [ebx-0x56d9e1d0],0x56
  41d3fc:	add    DWORD PTR [ebp-0x5e],eax
  41d3ff:	cld    
  41d400:	xlat   BYTE PTR ds:[ebx]
  41d401:	mov    esi,ecx
  41d403:	xchg   dl,ch
  41d405:	push   0x4efefd5c
  41d40a:	scas   al,BYTE PTR es:[edi]
  41d40b:	dec    eax
  41d40c:	or     DWORD PTR [eax],0xffffff8c
  41d40f:	jnp    0x41d3d6
  41d411:	inc    eax
  41d412:	aas    
  41d413:	call   0x490653
  41d418:	ins    BYTE PTR es:[edi],dx
  41d419:	sub    ebp,ebx
  41d41b:	pop    edi
  41d41c:	cmp    DWORD PTR [esp+eax*2+0x24],edx
  41d420:	or     eax,0x27000000
  41d425:	mov    es,esp
  41d427:	sbb    ecx,ebp
  41d429:	repnz pop esp
  41d42b:	ins    BYTE PTR es:[edi],dx
  41d42c:	cmp    esp,esp
  41d42e:	jg     0x41d419
  41d430:	lock push es
  41d432:	call   0xfce57b4a
  41d437:	push   0xffffffbb
  41d439:	or     al,0x83
  41d43b:	test   eax,0x158920db
  41d440:	mov    edx,DWORD PTR [eax]
  41d442:	mov    DWORD PTR [edi+0x88b80a],ebx
  41d448:	(bad)  
  41d449:	scas   al,BYTE PTR es:[edi]
  41d44a:	adc    BYTE PTR [ecx+0x62],dl
  41d44d:	inc    edx
  41d44e:	jmp    0xbcc9d251
  41d453:	je     0x41d447
  41d455:	sbb    eax,0x1f662471
  41d45a:	fmul   QWORD PTR [ebx+0x24791f49]
  41d460:	out    dx,al
  41d461:	pop    ds
  41d462:	dec    ecx
  41d463:	cmp    BYTE PTR [esi+0x7c],dl
  41d466:	cmp    ch,bl
  41d468:	lods   al,BYTE PTR ds:[esi]
  41d469:	jno    0x41d3eb
  41d46b:	rol    BYTE PTR [esi+0x490386e3],0xa
  41d472:	push   0x4
  41d474:	xor    cl,BYTE PTR [eax+0x341a4074]
  41d47a:	call   0xfbb2c2a6
  41d47f:	mov    ecx,DWORD PTR [edi+eax*4]
  41d482:	inc    DWORD PTR [ebx]
  41d484:	sbb    DWORD PTR [edi+0xff53],ebx
  41d48a:	add    BYTE PTR [esi-0x1daed759],al
  41d490:	imul   ebx
  41d492:	(bad)  
  41d493:	std    
  41d494:	add    al,0x37
  41d496:	mov    ebx,DWORD PTR [edi-0x64]
  41d499:	sti    
  41d49a:	ja     0x41d49e
  41d49c:	or     eax,0xffffffeb
  41d49f:	mov    esp,0xbd068772
  41d4a4:	xlat   BYTE PTR ds:[ebx]
  41d4a5:	and    ebp,DWORD PTR [eax]
  41d4a7:	push   ebx
  41d4a8:	dec    ebx
  41d4a9:	sub    BYTE PTR [ebx+0x2c441cd9],cl
  41d4af:	mov    ds:0x7dfee82c,al
  41d4b4:	std    
  41d4b5:	adc    edx,DWORD PTR [esi-0x4e]
  41d4b8:	sub    ecx,ebp
  41d4ba:	dec    BYTE PTR [ebp+0x13]
  41d4bd:	(bad)  
  41d4be:	jmp    0xd7f3:0x5fbc9588
  41d4c5:	inc    esi
  41d4c6:	mov    DWORD PTR [esi-0xcfc3e0e],edx
  41d4cc:	add    dh,BYTE PTR [edi-0x15]
  41d4cf:	jo     0x41d462
  41d4d1:	and    al,0x51
  41d4d3:	sbb    eax,0x730c3625
  41d4d8:	scas   eax,DWORD PTR es:[edi]
  41d4d9:	cld    
  41d4da:	(bad)  
  41d4db:	mov    ebp,0xf3f08598
  41d4e0:	lods   eax,DWORD PTR ds:[esi]
  41d4e1:	add    BYTE PTR [ecx+0x627fa5dd],cl
  41d4e7:	dec    edi
  41d4e8:	lods   eax,DWORD PTR ds:[esi]
  41d4e9:	jge    0x41d52d
  41d4eb:	inc    edi
  41d4ec:	jge    0x41d504
  41d4ee:	push   ss
  41d4ef:	add    BYTE PTR [eax],al
  41d4f1:	add    BYTE PTR [ebp+0x34a0b735],ah
  41d4f7:	fdiv   DWORD PTR [edi-0x29]
  41d4fa:	jp     0x41d48e
  41d4fc:	test   al,0x82
  41d4fe:	dec    eax
  41d4ff:	add    BYTE PTR [ebx],0x32
  41d502:	xor    esi,esi
  41d504:	mov    ?,esi
  41d506:	adc    al,0xad
  41d508:	push   ss
  41d509:	sub    bh,BYTE PTR [esi-0x6e]
  41d50c:	aam    0x57
  41d50e:	sbb    ecx,DWORD PTR [ebx+0x73f3003e]
  41d514:	fmul   DWORD PTR [edx-0x17b7128a]
  41d51a:	inc    esp
  41d51b:	jb     0x41d51d
  41d51d:	add    BYTE PTR [esi-0x15],dh
  41d520:	iret   
  41d521:	dec    edi
  41d522:	fdiv   QWORD PTR [ebx]
  41d524:	test   al,0x50
  41d526:	retf   
  41d527:	sbb    eax,0x29ccfca2
  41d52c:	mov    ecx,0x9c01234e
  41d531:	mov    dl,ch
  41d533:	pop    ebp
  41d534:	test   al,0x50
  41d536:	data16 jecxz 0x41d4e0
  41d539:	xchg   BYTE PTR [esi],dh
  41d53b:	ins    BYTE PTR es:[edi],dx
  41d53c:	fwait
  41d53d:	mov    fs,WORD PTR [esi+0x1caba607]
  41d543:	loop   0x41d52b
  41d545:	xor    bl,ch
  41d547:	cmp    DWORD PTR [edi-0x1f],edi
  41d54a:	fwait
  41d54b:	popf   
  41d54c:	lea    ebx,[edi+0x78bf3143]
  41d552:	stc    
  41d553:	mov    ds:0x9c1e,al
  41d558:	add    al,bl
  41d55a:	dec    eax
  41d55b:	out    0x3,eax
  41d55d:	(bad)  
  41d55f:	pop    ebx
  41d560:	sub    DWORD PTR [ebx+0x3f],esp
  41d563:	dec    edi
  41d564:	adc    eax,0x7ee706b1
  41d569:	das    
  41d56a:	aaa    
  41d56b:	fs inc ecx
  41d56d:	xor    esi,DWORD PTR [edi]
  41d56f:	pop    esp
  41d570:	inc    ecx
  41d571:	dec    edi
  41d572:	aaa    
  41d573:	shl    esi,1
  41d575:	lahf   
  41d576:	mov    esi,DWORD PTR [ebx+0x5fe4c87]
  41d57c:	stos   DWORD PTR es:[edi],eax
  41d57d:	das    
  41d57e:	mov    ah,BYTE PTR [edx]
  41d580:	clc    
  41d581:	jno    0x41d54a
  41d583:	call   0xa5cc:0x71cd6bc0
  41d58a:	mov    edx,DWORD PTR [ebx+0xf4479a7]
  41d590:	pushf  
  41d591:	jle    0x41d544
  41d593:	add    al,0xab
  41d595:	jno    0x41d55e
  41d597:	jb     0x41d587
  41d599:	mov    WORD PTR [edx+0x30f3436e],es
  41d59f:	jecxz  0x41d5ef
  41d5a1:	js     0x41d5e6
  41d5a3:	fistp  WORD PTR [ebx-0x55234dae]
  41d5a9:	jno    0x41d571
  41d5ab:	pop    edx
  41d5ac:	jecxz  0x41d629
  41d5ae:	inc    ebx
  41d5af:	fistp  QWORD PTR [esi+0x39]
  41d5b2:	lahf   
  41d5b3:	jno    0x41d605
  41d5b5:	mov    edi,0xd87ba1d9
  41d5ba:	idiv   edi
  41d5bc:	pop    edi
  41d5bd:	add    BYTE PTR [eax],al
  41d5bf:	add    al,ch
  41d5c1:	push   ss
  41d5c2:	xchg   DWORD PTR [ecx],ebx
  41d5c4:	jecxz  0x41d54b
  41d5c6:	push   edi
  41d5c7:	and    ecx,edx
  41d5c9:	test   DWORD PTR [edi+0x1d],edx
  41d5cc:	adc    al,0x49
  41d5ce:	or     al,0xaf
  41d5d0:	xor    BYTE PTR [ebx],cl
  41d5d2:	(bad)  
  41d5d3:	jg     0x41d61d
  41d5d5:	popf   
  41d5d6:	cld    
  41d5d7:	jmp    0x913a16d9
  41d5dc:	ficomp DWORD PTR [ebx+0xf0876fc]
  41d5e2:	adc    cl,ch
  41d5e4:	lock scas al,BYTE PTR es:[edi]
  41d5e6:	ins    BYTE PTR es:[edi],dx
  41d5e7:	push   ebx
  41d5e8:	mov    bl,BYTE PTR [edx-0x418cbe78]
  41d5ee:	or     al,0x6d
  41d5f0:	jecxz  0x41d58d
  41d5f2:	cld    
  41d5f3:	dec    esi
  41d5f4:	retf   
  41d5f5:	push   eax
  41d5f6:	or     al,0x98
  41d5f8:	fadd   DWORD PTR [esi]
  41d5fa:	adc    cl,ch
  41d5fc:	lock xchg ecx,eax
  41d5fe:	inc    eax
  41d5ff:	out    dx,eax
  41d600:	rcr    BYTE PTR [ebx-0x7a61e8b],0x8f
  41d607:	cld    
  41d608:	mov    al,0x6
  41d60a:	and    DWORD PTR [ecx],0xd2830bef
  41d610:	pop    ecx
  41d611:	call   0x7c00:0xadb6afc
  41d618:	jmp    0xa0e2d94d
  41d61d:	mov    WORD PTR cs:[ecx+0x30],?
  41d621:	pop    es
  41d622:	push   ecx
  41d623:	add    DWORD PTR [eax],eax
  41d625:	add    BYTE PTR [eax],al
  41d627:	imul   ebp,DWORD PTR [esi+0x4958e6fd],0xc
  41d62e:	rol    DWORD PTR [eax-0x67],1
  41d631:	cld    
  41d632:	(bad)  
  41d633:	dec    esi
  41d634:	dec    ecx
  41d635:	or     dh,cl
  41d637:	das    
  41d638:	add    ebp,ecx
  41d63a:	add    bh,bl
  41d63c:	ins    DWORD PTR es:[edi],dx
  41d63d:	jno    0x41d64b
  41d63f:	inc    ecx
  41d640:	push   edx
  41d641:	fs xchg esp,eax
  41d643:	loop   0x41d687
  41d645:	add    BYTE PTR [edx-0x71],ch
  41d648:	dec    edi
  41d649:	call   0xfbb19aa5
  41d64e:	pop    ecx
  41d64f:	xor    eax,DWORD PTR [edx+0x1c95fff4]
  41d655:	idiv   dh
  41d657:	jne    0x41d6c7
  41d659:	(bad)  
  41d65a:	(bad)  
  41d65b:	mov    ss,WORD PTR [eax]
  41d65d:	or     DWORD PTR [edx],ecx
  41d65f:	or     ebx,eax
  41d661:	inc    BYTE PTR [edx+0x107408e2]
  41d667:	aad    0xeb
  41d669:	or     ecx,DWORD PTR [ebp-0x72b2f95f]
  41d66f:	inc    esi
  41d670:	adc    BYTE PTR [ebp-0x18],cl
  41d673:	cwde   
  41d674:	jp     0x41d670
  41d676:	call   FWORD PTR [ebx-0x23]
  41d679:	or     ecx,DWORD PTR [ebx+0x4c2948f]
  41d67f:	push   edx
  41d680:	xchg   ebp,eax
  41d681:	sti    
  41d682:	inc    ebp
  41d683:	push   ss
  41d684:	sbb    eax,DWORD PTR [edx+0xc]
  41d687:	int3   
  41d688:	push   es
  41d689:	sbb    BYTE PTR [edx],cl
  41d68b:	add    BYTE PTR [eax],al
  41d68d:	add    ch,dl
  41d68f:	fisttp DWORD PTR [ebx]
  41d691:	mov    ecx,DWORD PTR [edi-0x60]
  41d694:	xchg   DWORD PTR [ebp+0x16],ecx
  41d697:	sbb    DWORD PTR [eax+edi*2+0x1a],0x21
  41d69c:	push   ebp
  41d69d:	jo     0x41d622
  41d69f:	fidiv  DWORD PTR [ebx+0x66]
  41d6a2:	int    0x42
  41d6a4:	jl     0x41d6a6
  41d6a6:	ficom  DWORD PTR [edi]
  41d6a8:	(bad)  
  41d6a9:	pop    esi
  41d6aa:	je     0x41d6f6
  41d6ac:	(bad)
  41d6af:	pop    es
  41d6b0:	xchg   DWORD PTR [eax-0x32],eax
  41d6b3:	ss sti 
  41d6b5:	je     0x41d6aa
  41d6b7:	or     esp,edi
  41d6b9:	mov    cl,BYTE PTR [ebx-0x6a]
  41d6bc:	cmp    DWORD PTR [edi-0x15ac4a19],0xffffffb5
  41d6c3:	pop    esp
  41d6c4:	scas   eax,DWORD PTR es:[edi]
  41d6c5:	xlat   BYTE PTR ds:[ebx]
  41d6c6:	or     BYTE PTR [esi-0x51],ch
  41d6c9:	xlat   BYTE PTR ds:[ebx]
  41d6ca:	inc    esp
  41d6cb:	jo     0x41d6c9
  41d6cd:	inc    DWORD PTR [edi+0x19]
  41d6d0:	xchg   ebp,eax
  41d6d1:	add    BYTE PTR [edi+0x785653b1],0x7e
  41d6d8:	jnp    0x41d71f
  41d6da:	jmp    0x41d704
  41d6dc:	cmp    DWORD PTR [esp],eax
  41d6df:	pop    ss
  41d6e0:	dec    esi
  41d6e1:	clc    
  41d6e2:	push   0xffffffe2
  41d6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6e5:	cmp    BYTE PTR [edx],0xa4
  41d6e8:	jl     0x41d769
  41d6ea:	rep lods eax,DWORD PTR ds:[esi]
  41d6ec:	add    BYTE PTR [ecx+0x730099da],al
  41d6f2:	add    BYTE PTR [eax],al
  41d6f4:	add    BYTE PTR [ebx-0x31751049],dh
  41d6fa:	dec    ecx
  41d6fb:	dec    ecx
  41d6fc:	call   0x42446d
  41d701:	in     al,dx
  41d702:	sbb    al,0x3f
  41d704:	adc    ah,BYTE PTR [ebx+0x3456fac]
  41d70a:	jle    0x41d787
  41d70c:	(bad)
  41d710:	pop    ebp
  41d711:	outs   dx,BYTE PTR ds:[esi]
  41d712:	jp     0x41d6c8
  41d714:	out    0x80,eax
  41d716:	retf   0xfca7
  41d719:	jo     0x41d704
  41d71b:	hlt    
  41d71c:	xor    BYTE PTR [ebx],0x71
  41d71f:	adc    DWORD PTR [ecx-0x7736e7d3],ecx
  41d725:	scas   al,BYTE PTR es:[edi]
  41d726:	cdq    
  41d727:	dec    esi
  41d728:	call   0xfce668a1
  41d72d:	outs   dx,DWORD PTR ds:[esi]
  41d72e:	lock sub eax,0xaf077021
  41d734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d735:	retf   
  41d736:	fist   DWORD PTR [eax+0x2]
  41d739:	sub    bl,bh
  41d73b:	das    
  41d73c:	or     BYTE PTR [eax+0x0],al
  41d73f:	(bad)  
  41d740:	lds    ebp,FWORD PTR [ecx+0x1f]
  41d743:	fistp  WORD PTR [ebx]
  41d745:	fist   WORD PTR [ebx]
  41d747:	daa    
  41d748:	add    al,0x72
  41d74a:	(bad)  
  41d74b:	ficomp DWORD PTR [ebx-0x58534f46]
  41d751:	jno    0x41d71a
  41d753:	xchg   ecx,eax
  41d754:	retf   
  41d755:	imul   eax,DWORD PTR [ebx+ebx*4+0x7b],0x0
  41d75a:	add    BYTE PTR [eax],al
  41d75c:	int3   
  41d75d:	add    dl,BYTE PTR [esi+0x2b8e8b31]
  41d763:	cld    
  41d764:	mov    dh,0x47
  41d766:	jecxz  0x41d76c
  41d768:	push   0x44
  41d76a:	jnp    0x41d708
  41d76c:	mov    ah,0x99
  41d76e:	jne    0x41d717
  41d770:	jo     0x41d739
  41d772:	repnz les esp,FWORD PTR [ebx]
  41d775:	mov    ebp,0x28cfba45
  41d77b:	add    bl,dh
  41d77d:	xor    eax,0x187a4dbc
  41d782:	out    dx,eax
  41d783:	jp     0x41d73b
  41d785:	add    dh,BYTE PTR [edx-0x66]
  41d788:	jno    0x41d751
  41d78a:	mov    dl,0xe9
  41d78c:	lods   al,BYTE PTR ds:[esi]
  41d78d:	push   ds
  41d78e:	rol    DWORD PTR [ecx+ebx*4],cl
  41d791:	add    al,0x92
  41d793:	xor    dl,bh
  41d795:	xor    DWORD PTR [esp+ebp*1-0x5],esi
  41d799:	push   DWORD PTR cs:[eax]
  41d79c:	mov    bl,0x6
  41d79e:	push   0xffffffc4
  41d7a0:	loopne 0x41d750
  41d7a2:	mov    ds,WORD PTR [esi+edi*8+0x3480a599]
  41d7a9:	adc    al,0xe4
  41d7ab:	xor    BYTE PTR [ecx+ebx*4-0x7008fe01],0x45
  41d7b3:	in     eax,0x58
  41d7b5:	xor    bl,BYTE PTR [edx+esi*2]
  41d7b8:	sub    al,0xe3
  41d7ba:	sysenter 
  41d7bc:	dec    eax
  41d7bd:	(bad)  
  41d7be:	out    0xdf,eax
  41d7c0:	add    BYTE PTR [eax],al
  41d7c2:	add    BYTE PTR [esi-0x4f9a0366],cl
  41d7c8:	adc    eax,0x3bb0fae3
  41d7cd:	pop    ebx
  41d7ce:	and    dh,BYTE PTR [ecx+0x2f620005]
  41d7d4:	inc    DWORD PTR [eax+0x7406f331]
  41d7da:	leave  
  41d7db:	sbb    edx,ebx
  41d7dd:	add    edi,DWORD PTR [edx]
  41d7df:	or     BYTE PTR [esi],bh
  41d7e1:	and    al,0xe1
  41d7e3:	xor    eax,0x22c5778e
  41d7e8:	mov    BYTE PTR [edi-0x1928a737],bh
  41d7ee:	jg     0x41d785
  41d7f0:	cmp    bl,BYTE PTR [ecx+0x6c]
  41d7f3:	xor    BYTE PTR [ebx+eax*1],dl
  41d7f6:	push   0xffffff98
  41d7f8:	call   0xe5c1:0x5961ebe8
  41d7ff:	lock or esi,DWORD PTR [ebp+0x3e8ff4b8]
  41d806:	icebp  
  41d807:	scas   al,BYTE PTR es:[edi]
  41d808:	pop    eax
  41d809:	(bad)  
  41d80a:	jmp    0x2a7deff
  41d80f:	cmp    eax,0x71ec713b
  41d814:	lahf   
  41d815:	arpl   WORD PTR [edx+0x260f8ff3],di
  41d81b:	mov    dl,0x2
  41d81d:	data16 jb 0x41d7c7
  41d820:	repnz imul ebp,eax,0xe14f81e6
  41d827:	add    BYTE PTR [eax],al
  41d829:	add    BYTE PTR [eax-0x57],bl
  41d82c:	add    BYTE PTR [eax],al
  41d82e:	or     eax,DWORD PTR ds:0x3719c02f
  41d834:	xchg   esp,ebp
  41d836:	pop    ecx
  41d837:	jo     0x41d849
  41d839:	or     BYTE PTR [edi-0x35bc5899],0x4
  41d840:	dec    edi
  41d841:	push   esi
  41d842:	add    eax,0xd9838092
  41d847:	add    al,0x0
  41d849:	call   0x3c41ee
  41d84e:	inc    esi
  41d84f:	ret    
  41d850:	or     eax,DWORD PTR [esp+eiz*8+0x19000005]
  41d857:	loopne 0x41d864
  41d859:	add    BYTE PTR [ebp-0x75fc96e8],bh
  41d85f:	add    al,0x7f
  41d861:	jge    0x41d7ed
  41d863:	add    al,0xb
  41d865:	mov    ?,eax
  41d867:	add    eax,0xe8110000
  41d86c:	pop    es
  41d86d:	push   esi
  41d86e:	bound  eax,QWORD PTR [ebp+esi*8-0x1]
  41d872:	in     eax,dx
  41d873:	xchg   BYTE PTR [edi+ecx*1-0xcc2a],bh
  41d87a:	dec    edx
  41d87b:	pop    ds
  41d87c:	cmp    ch,ah
  41d87e:	pop    eax
  41d87f:	inc    esp
  41d880:	add    BYTE PTR [ebx+0x402c5e],bh
  41d886:	mov    DWORD PTR [ebx-0x2d],esp
  41d889:	call   0x3d49ee
  41d88e:	add    BYTE PTR [eax],al
  41d890:	add    bl,al
  41d892:	xlat   BYTE PTR ds:[ebx]
  41d893:	sti    
  41d894:	xor    DWORD PTR [edx-0xe7bf49f],0x5
  41d89b:	add    BYTE PTR [eax],al
  41d89d:	xor    eax,esp
  41d89f:	test   BYTE PTR [eax],al
  41d8a1:	or     al,BYTE PTR [edi+edi*8]
  41d8a4:	add    al,0x22
  41d8a6:	sub    al,0x40
  41d8a8:	add    bl,dh
  41d8aa:	sub    al,0x2c
  41d8ac:	je     0x41d8a1
  41d8ae:	jb     0x41d8aa
  41d8b0:	jg     0x41d92d
  41d8b2:	add    BYTE PTR [eax],0x74
  41d8b5:	add    ebx,DWORD PTR [ecx+0x1ae4102d]
  41d8bb:	cmc    
  41d8bc:	out    0xa6,eax
  41d8be:	xchg   esi,eax
  41d8bf:	mov    ds:0xff01cafc,eax
  41d8c4:	push   ebx
  41d8c6:	adc    al,0xc9
  41d8c8:	mov    BYTE PTR [eax-0x3413b9da],bh
  41d8ce:	push   ss
  41d8cf:	xchg   esp,eax
  41d8d0:	cld    
  41d8d1:	mov    ah,0x16
  41d8d3:	ds lock loopne 0x41d944
  41d8d7:	sbb    al,BYTE PTR [edi+0x42755a2e]
  41d8dd:	(bad)  
  41d8de:	es inc eax
  41d8e0:	push   eax
  41d8e1:	push   0x8530b3ea
  41d8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e7:	mov    edx,0x77e873
  41d8ec:	inc    DWORD PTR [eax]
  41d8ee:	nop
  41d8ef:	push   eax
  41d8f0:	std    
  41d8f1:	(bad)  
  41d8f2:	jno    0x41d88c
  41d8f4:	stc    
  41d8f5:	add    BYTE PTR [eax],al
  41d8f7:	add    BYTE PTR [eax+0x18],ch
  41d8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8fb:	xor    DWORD PTR [ebx],0xffffffa0
  41d8fe:	jl     0x41d8a9
  41d900:	icebp  
  41d901:	lods   eax,DWORD PTR ds:[esi]
  41d902:	add    BYTE PTR [ecx-0x5167ce52],cl
  41d908:	js     0x41d96c
  41d90a:	xchg   esp,eax
  41d90b:	mov    BYTE PTR [ebx+0x29],ch
  41d90e:	add    DWORD PTR [eax],eax
  41d910:	repz hlt 
  41d912:	lds    esi,FWORD PTR [ebp-0x65]
  41d915:	push   es
  41d916:	inc    ebp
  41d917:	adc    ah,bh
  41d919:	imul   eax,DWORD PTR [ebp+0x10],0xffffffc0
  41d91d:	shl    BYTE PTR [eax+0x7f],1
  41d920:	rep lods eax,DWORD PTR ds:[esi]
  41d922:	add    ch,bh
  41d924:	sahf   
  41d925:	push   es
  41d926:	repz fwait
  41d928:	push   esp
  41d929:	lahf   
  41d92a:	sbb    al,0xa4
  41d92c:	jnp    0x41d96f
  41d92e:	add    ebx,edx
  41d930:	fs and dh,0x3
  41d934:	repz mov ebp,DWORD PTR [ebx+0x627f7b97]
  41d93b:	add    esi,ebx
  41d93d:	push   es
  41d93e:	mov    dl,0xb5
  41d940:	popa   
  41d941:	std    
  41d942:	in     eax,dx
  41d943:	jb     0x41d999
  41d945:	pop    es
  41d946:	out    0x3,eax
  41d948:	fild   DWORD PTR [edx-0x3a]
  41d94b:	mov    ds:0xb02b82c7,al
  41d950:	jne    0x41d9a9
  41d952:	data16 add al,0xf3
  41d955:	push   es
  41d956:	shl    ch,cl
  41d958:	jnp    0x41d8e1
  41d95a:	data16 add al,0x0
  41d95d:	add    BYTE PTR [eax],al
  41d95f:	repz push es
  41d961:	sbb    BYTE PTR [ecx+0x3417eee8],dl
  41d967:	mov    esp,DWORD PTR [edx]
  41d969:	mov    fs,WORD PTR [edx-0x4fdc7d71]
  41d96f:	fwait
  41d970:	sbb    eax,0x4a3b1055
  41d975:	out    0x39,eax
  41d977:	jbe    0x41d975
  41d979:	jbe    0x41d971
  41d97b:	sub    al,0x7
  41d97d:	jle    0x41d998
  41d97f:	add    edx,DWORD PTR [esi+0x1c5e0ffb]
  41d985:	fbld   TBYTE PTR [edx+0x479edb01]
  41d98b:	repz cmp DWORD PTR [esi],0x6c033087
  41d992:	mov    edi,0x5b67eef
  41d997:	repz push es
  41d999:	popf   
  41d99a:	mov    ds:0xbb38247,al
  41d99f:	sbb    esp,DWORD PTR [esi-0x1]
  41d9a2:	inc    ebx
  41d9a3:	push   eax
  41d9a4:	xchg   ebx,eax
  41d9a5:	mov    BYTE PTR [ecx],dh
  41d9a7:	adc    sp,di
  41d9aa:	push   0x50
  41d9ac:	xchg   ebx,eax
  41d9ad:	or     al,0x65
  41d9af:	push   eax
  41d9b0:	xchg   ebp,eax
  41d9b1:	cld    
  41d9b2:	jmp    0xea31eb2c
  41d9b7:	fldenv gs:[edi]
  41d9ba:	inc    ecx
  41d9bb:	xor    al,0x7
  41d9bd:	je     0x41d9a2
  41d9bf:	jne    0x41d983
  41d9c1:	data16 and BYTE PTR [eax],al
  41d9c4:	add    BYTE PTR [eax],al
  41d9c6:	outs   dx,DWORD PTR ds:[esi]
  41d9c7:	xchg   ebp,eax
  41d9c8:	cld    
  41d9c9:	jmp    0x8d299ebb
  41d9ce:	adc    BYTE PTR [edx-0x68c48f04],0x82
  41d9d5:	test   eax,0xe8d68ae1
  41d9da:	lock push es
  41d9dc:	mov    DWORD PTR [esi-0x16783921],ebp
  41d9e2:	lock push es
  41d9e4:	add    DWORD PTR [edi-0x513b791],ebp
  41d9ea:	jp     0x41da22
  41d9ec:	std    
  41d9ed:	sbb    al,0xe3
  41d9ef:	xchg   DWORD PTR [edi+0x657ad8e1],edi
  41d9f5:	sub    edi,esi
  41d9f7:	sahf   
  41d9f8:	mov    ebp,0x8906f07f
  41d9fd:	cmp    DWORD PTR [edi+0x10],0x184607f8
  41da04:	hlt    
  41da05:	jmp    DWORD PTR [edx]
  41da07:	or     BYTE PTR [edx+0x7d],0x1a
  41da0b:	mov    BYTE PTR [esi+0x1f19f21],bh
  41da11:	call   0xde1eba06
  41da16:	cld    
  41da17:	jg     0x41da5b
  41da19:	cmp    eax,0x838d65
  41da1e:	sbb    cl,BYTE PTR [ecx]
  41da20:	add    BYTE PTR [ebx],al
  41da22:	loope  0x41da9a
  41da24:	lods   al,BYTE PTR ds:[esi]
  41da25:	or     BYTE PTR [edx],0x9
  41da28:	add    al,ch
  41da2a:	add    BYTE PTR [eax],al
  41da2c:	add    BYTE PTR [edx-0x610005a2],bl
  41da32:	leave  
  41da33:	or     eax,DWORD PTR [edx+ebx*4-0x6efffff6]
  41da3a:	ds in  al,dx
  41da3c:	mov    edx,DWORD PTR [edx-0x25000373]
  41da42:	jg     0x41da09
  41da44:	je     0x41da04
  41da46:	test   DWORD PTR [eax+eax*4-0x36],edi
  41da4a:	or     BYTE PTR [eax],al
  41da4c:	lea    edi,[esi-0x7574b170]
  41da52:	arpl   WORD PTR [ebx-0x78995b1a],bx
  41da58:	inc    ebp
  41da59:	mov    dh,0x82
  41da5b:	dec    ecx
  41da5c:	or     al,0xf9
  41da5e:	or     ebx,ecx
  41da60:	push   ecx
  41da61:	mov    ch,0x3b
  41da63:	jge    0x41da65
  41da65:	call   0xfb69:0xac73e808
  41da6c:	mov    ecx,edi
  41da6e:	push   esi
  41da6f:	std    
  41da70:	xchg   edi,eax
  41da71:	push   ds
  41da72:	or     eax,DWORD PTR [eax]
  41da74:	add    BYTE PTR [ecx+0x11df876e],ch
  41da7a:	dec    esp
  41da7b:	lock cmp ecx,DWORD PTR [edi+ebp*8+0x21]
  41da80:	cmp    edx,DWORD PTR [ecx+ebp*8+0x45fff1d]
  41da87:	mov    DWORD PTR [eax+0x36],edi
  41da8a:	mov    edi,DWORD PTR [eax+ebp*1-0x11ce18e]
  41da91:	add    BYTE PTR [eax],al
  41da93:	add    ch,dl
  41da95:	mov    edi,DWORD PTR [edi+ecx*1-0x2fa32]
  41da9c:	repz popf 
  41da9e:	mov    eax,DWORD PTR [edx+0x43]
  41daa1:	sub    DWORD PTR ds:0x29d3e0f8,ebx
  41daa7:	aaa    
  41daa8:	sahf   
  41daa9:	(bad)  [esi]
  41daab:	xchg   BYTE PTR [ebx-0x62],ch
  41daae:	add    BYTE PTR [eax],al
  41dab0:	fsubr  st,st(3)
  41dab2:	push   cs
  41dab3:	test   BYTE PTR [ebx-0x62],dh
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	dec    edx
  41dab9:	(bad)  
  41daba:	add    eax,DWORD PTR [eax]
  41dabc:	repz sbb ecx,0x4a
  41dac0:	(bad)  
  41dac1:	jp     0x41dacc
  41dac3:	push   eax
  41dac4:	fild   DWORD PTR [eax+0x18e4fc98]
  41daca:	inc    ebp
  41dacb:	lock push 0x2688e85d
  41dad1:	xchg   edx,eax
  41dad2:	mov    DWORD PTR [esi],edi
  41dad4:	inc    ebx
  41dad5:	sbb    DWORD PTR [esi-0x10],eax
  41dad8:	js     0x41dab7
  41dada:	out    dx,eax
  41dadb:	mov    BYTE PTR [esi],ch
  41dadd:	retf   0x3e89
  41dae0:	aas    
  41dae1:	sub    DWORD PTR [esi-0x14],eax
  41dae4:	jp     0x41dab3
  41dae6:	sbb    ecx,DWORD PTR [ecx+0x3fc6c22e]
  41daec:	pop    ds
  41daed:	sahf   
  41daee:	mov    ecx,DWORD PTR [edx-0x79]
  41daf1:	cwde   
  41daf2:	mov    esi,0x885d670c
  41daf7:	add    BYTE PTR ds:[eax],al
  41dafa:	add    BYTE PTR [esi],al
  41dafc:	sbb    DWORD PTR [esi-0x10],eax
  41daff:	push   0xffffffed
  41db01:	jmp    0x41da8b
  41db03:	cs jp  0x41da89
  41db06:	mov    edi,0xf783038f
  41db0b:	shl    BYTE PTR [edi+eax*4+0x9df389],1
  41db12:	mov    DWORD PTR [esi+0x136fa00d],ebp
  41db18:	pop    es
  41db19:	dec    edi
  41db1a:	mov    ss,WORD PTR [ecx-0x6c]
  41db1d:	pop    ebp
  41db1e:	mov    WORD PTR [ecx-0x20ecaa6a],?
  41db24:	sahf   
  41db25:	push   0x71932ea6
  41db2a:	inc    esi
  41db2b:	and    esp,DWORD PTR [eax]
  41db2d:	rol    DWORD PTR [esp+ebx*2-0x72546906],cl
  41db34:	lods   al,BYTE PTR ds:[esi]
  41db35:	sub    al,0xa0
  41db37:	adc    eax,0x7a023af
  41db3c:	jg     0x41dae9
  41db3e:	scas   eax,DWORD PTR es:[edi]
  41db3f:	push   es
  41db40:	inc    ebp
  41db41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db42:	add    DWORD PTR [ecx+0x619cd1f3],0xffffffee
  41db49:	ror    ecx,0x60
  41db4c:	sub    al,0xc2
  41db4e:	rcr    DWORD PTR [esi+0x28],0x9d
  41db52:	sub    eax,DWORD PTR [ecx-0x30601261]
  41db58:	cld    
  41db59:	out    dx,al
  41db5a:	pop    ebx
  41db5b:	xor    eax,DWORD PTR [edi]
  41db5d:	inc    eax
  41db5e:	cmp    eax,0x72000000
  41db63:	mov    esi,0xce26abd5
  41db68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db69:	sbb    BYTE PTR [ecx],dh
  41db6b:	shl    BYTE PTR [esi],1
  41db6d:	lock push ds
  41db6f:	aam    0x71
  41db71:	inc    esp
  41db72:	retf   
  41db73:	jg     0x41db9c
  41db75:	adc    al,0x6a
  41db77:	dec    esp
  41db78:	mov    bh,0x8b
  41db7a:	int3   
  41db7b:	loop   0x41dbee
  41db7d:	push   ecx
  41db7e:	xchg   edi,eax
  41db7f:	and    BYTE PTR [edi],0x18
  41db82:	push   0x4c
  41db84:	or     DWORD PTR [ebp+0x49620f04],0x5f
  41db8b:	leave  
  41db8c:	and    BYTE PTR es:[ebp+edi*2+0x2b],ah
  41db91:	mov    al,0x1b
  41db93:	mov    cl,0xff
  41db95:	in     eax,0xdc
  41db97:	push   ecx
  41db98:	xchg   DWORD PTR [eax],ebp
  41db9a:	adc    al,BYTE PTR [eax+0x22765942]
  41dba0:	sub    BYTE PTR [edx-0x26],dh
  41dba3:	xchg   esi,eax
  41dba4:	out    0xe7,eax
  41dba6:	adc    DWORD PTR [ebx-0x721dbf04],0xfffffffc
  41dbad:	inc    esi
  41dbae:	js     0x41dbf5
  41dbb0:	cld    
  41dbb1:	push   ecx
  41dbb2:	out    0x9d,al
  41dbb4:	cld    
  41dbb5:	mov    DWORD PTR ss:[edx],0x93f0aab8
  41dbbc:	adc    bl,BYTE PTR [ecx]
  41dbbe:	add    edx,edx
  41dbc0:	push   DWORD PTR [ecx+0x30]
  41dbc3:	lahf   
  41dbc4:	aaa    
  41dbc5:	add    DWORD PTR [eax],0x4ee40000
  41dbcb:	inc    eax
  41dbcc:	jmp    0xdc31d05e
  41dbd1:	xor    BYTE PTR [edi],al
  41dbd3:	push   0xfffffff1
  41dbd5:	or     BYTE PTR [edi-0x19],dh
  41dbd8:	div    BYTE PTR [ebp-0x6e]
  41dbdb:	adc    ah,cl
  41dbdd:	sub    BYTE PTR [edi+0x0],al
  41dbe0:	inc    eax
  41dbe1:	push   es
  41dbe2:	mov    bh,al
  41dbe4:	fimul  WORD PTR [ecx-0x4429af08]
  41dbea:	mov    eax,ds:0x93f72911
  41dbef:	jb     0x41dbca
  41dbf1:	test   DWORD PTR [esp+ecx*1],edx
  41dbf4:	mov    esi,0xdcfcfefb
  41dbf9:	mov    esp,0x71e94059
  41dbfe:	lds    ecx,FWORD PTR [ebx]
  41dc00:	inc    esi
  41dc01:	lds    ebp,FWORD PTR [edi]
  41dc03:	(bad)  
  41dc04:	stos   BYTE PTR es:[edi],al
  41dc05:	imul   ecx,DWORD PTR [ecx+0x60],0x8938ba3a
  41dc0c:	sbb    DWORD PTR [edi],ebp
  41dc0e:	cmp    al,0x89
  41dc10:	add    dl,dh
  41dc12:	inc    esi
  41dc13:	mov    ecx,0x44b20c
  41dc18:	push   ebp
  41dc19:	dec    ecx
  41dc1a:	jp     0x41dc43
  41dc1c:	stc    
  41dc1d:	fisttp QWORD PTR [esi+0x59a12ec]
  41dc23:	push   ebx
  41dc24:	push   esi
  41dc25:	sar    ecx,0x23
  41dc28:	sbb    al,0x74
  41dc2a:	jo     0x41dc3d
  41dc2c:	clc    
  41dc2d:	add    BYTE PTR [eax],al
  41dc2f:	add    BYTE PTR [ebp-0x2d74ffbc],al
  41dc35:	test   al,al
  41dc37:	or     al,0x89
  41dc39:	ins    BYTE PTR es:[edi],dx
  41dc3a:	sti    
  41dc3b:	je     0x41dbbe
  41dc3d:	into   
  41dc3e:	cli    
  41dc3f:	adc    eax,0x3c97ce
  41dc44:	loop   0x41dbe4
  41dc46:	out    0xff,eax
  41dc48:	fld    QWORD PTR [esp+esi*8+0x669457ff]
  41dc4f:	or     BYTE PTR [edx+0x14],dh
  41dc52:	in     eax,0xff
  41dc54:	in     eax,dx
  41dc55:	cld    
  41dc56:	xlat   BYTE PTR ds:[ebx]
  41dc57:	inc    edi
  41dc59:	cld    
  41dc5a:	mov    bh,0x43
  41dc5c:	retf   0x54d3
  41dc5f:	jmp    0x41dbeb
  41dc61:	jecxz  0x41dc22
  41dc63:	mov    dl,bl
  41dc65:	add    al,0x0
  41dc67:	add    edx,edi
  41dc69:	pushf  
  41dc6a:	mov    ah,0x43
  41dc6c:	retf   0xdbaf
  41dc6f:	jne    0x41dc16
  41dc71:	jg     0x41dcc7
  41dc73:	fs pop ds
  41dc75:	sti    
  41dc76:	push   edi
  41dc77:	jmp    DWORD PTR [esp+ebx*2+0x725ce434]
  41dc7e:	data16 adc ah,ah
  41dc81:	bound  esp,QWORD PTR [ecx]
  41dc83:	in     eax,0x4c
  41dc85:	jb     0x41dc6e
  41dc87:	or     DWORD PTR [ebx-0xc00a034],ecx
  41dc8d:	in     eax,0x27
  41dc8f:	xor    DWORD PTR [eax-0x23],ecx
  41dc92:	xor    al,0xfd
  41dc94:	add    BYTE PTR [eax],al
  41dc96:	add    dh,bh
  41dc98:	or     eax,0xf0f33ff2
  41dc9d:	cmp    eax,0x365d685b
  41dca2:	ret    0x9df7
  41dca5:	das    
  41dca6:	push   esi
  41dca7:	js     0x41dcd7
  41dca9:	test   BYTE PTR [ebp-0x31],bh
  41dcac:	popf   
  41dcad:	xchg   esi,edx
  41dcaf:	mov    edi,0x9b4586fe
  41dcb4:	hlt    
  41dcb5:	mov    ebx,0xbef4ec74
  41dcba:	xchg   BYTE PTR [ebp-0x37fa584b],dh
  41dcc0:	cmc    
  41dcc1:	jle    0x41dd28
  41dcc3:	fwait
  41dcc4:	popf   
  41dcc5:	sub    BYTE PTR [ebx+ecx*2],cl
  41dcc8:	pop    ebp
  41dcc9:	add    ch,bh
  41dccb:	out    0xed,al
  41dccd:	icebp  
  41dcce:	aas    
  41dccf:	repz add al,0x2a
  41dcd2:	push   ebp
  41dcd3:	lods   al,BYTE PTR ds:[esi]
  41dcd4:	mov    cl,0x58
  41dcd6:	inc    eax
  41dcd7:	repz jo 0x41dc75
  41dcda:	adc    ah,bl
  41dcdc:	stos   DWORD PTR es:[edi],eax
  41dcdd:	inc    eax
  41dcde:	add    BYTE PTR [eax+0xf],ch
  41dce1:	sub    DWORD PTR [ecx],edi
  41dce3:	lods   eax,DWORD PTR ds:[esi]
  41dce4:	mov    al,0x3e
  41dce6:	icebp  
  41dce7:	sbb    eax,0xdb2414a9
  41dcec:	adc    al,0x15
  41dcee:	and    al,0xdb
  41dcf0:	iret   
  41dcf1:	call   0x7800:0x3f78ab12
  41dcf8:	gs jg  0x41dcbe
  41dcfb:	add    BYTE PTR [eax],al
  41dcfd:	add    bh,ch
  41dcff:	sbb    al,0x98
  41dd01:	cld    
  41dd02:	pop    ds
  41dd03:	xchg   esp,eax
  41dd04:	xor    edi,ebp
  41dd06:	out    0x51,al
  41dd08:	out    dx,al
  41dd09:	aas    
  41dd0a:	repz push es
  41dd0c:	(bad)  
  41dd0d:	mov    DWORD PTR es:[edi-0x70837f63],ecx
  41dd14:	sbb    esi,ecx
  41dd16:	(bad)  
  41dd18:	(bad)  
  41dd19:	jae    0x41dd67
  41dd1b:	pop    DWORD PTR [ebp-0x2c70c4f8]
  41dd21:	or     ebx,DWORD PTR [ebx-0x5bc518bd]
  41dd27:	(bad)  [edx]
  41dd2a:	xor    edi,DWORD PTR [esi-0x1a]
  41dd2d:	add    esi,ebx
  41dd2f:	add    esp,esp
  41dd31:	jmp    0x41ddaf
  41dd33:	inc    ebx
  41dd34:	out    0xea,eax
  41dd36:	les    ebx,FWORD PTR [esi]
  41dd38:	mov    dh,0x9c
  41dd3a:	add    DWORD PTR [edi+0x2ff343d8],edx
  41dd40:	popf   
  41dd41:	mov    BYTE PTR [ebx],dh
  41dd43:	sub    ebp,DWORD PTR [ecx]
  41dd45:	or     esi,ebx
  41dd47:	cmp    DWORD PTR [edx-0x51],esp
  41dd4a:	jae    0x41dcf6
  41dd4c:	push   ds
  41dd4d:	or     BYTE PTR [eax],0x8a
  41dd50:	out    0x3,al
  41dd52:	repz xor ebx,edx
  41dd55:	mov    eax,0xfecf3646
  41dd5a:	shl    DWORD PTR [edx-0x57],1
  41dd5d:	add    ebp,esi
  41dd5f:	cmp    BYTE PTR [eax],0x3
  41dd62:	add    BYTE PTR [eax],al
  41dd64:	add    bl,dh
  41dd66:	push   es
  41dd67:	dec    DWORD PTR ds:0x86ed8dc1
  41dd6d:	test   dh,bh
  41dd6f:	push   0x61
  41dd71:	mov    esp,0x19dce68e
  41dd76:	sti    
  41dd77:	in     eax,0x7f
  41dd79:	mov    BYTE PTR [edi],al
  41dd7b:	out    0x3,eax
  41dd7d:	fsubr  QWORD PTR [ebx]
  41dd7f:	xlat   BYTE PTR ds:[ebx]
  41dd80:	or     ch,BYTE PTR [ebp+0x7a]
  41dd83:	out    0x3,al
  41dd85:	repz cmp edi,0xe834ff3b
  41dd8c:	pop    ss
  41dd8d:	arpl   WORD PTR [ebx-0x4489204],cx
  41dd93:	sub    DWORD PTR [ebx-0x11],0x6
  41dd97:	add    BYTE PTR [esi-0x5],dl
  41dd9a:	dec    esi
  41dd9b:	inc    eax
  41dd9c:	jmp    0x955469c2
  41dda1:	gs into 
  41dda3:	call   DWORD PTR [eax+0x76fca59e]
  41dda9:	jl     0x41dd49
  41ddab:	xchg   ch,dh
  41ddad:	and    al,0xf6
  41ddaf:	and    BYTE PTR [edi+0x58],0x1a
  41ddb3:	pop    ebp
  41ddb4:	shl    BYTE PTR [edx-0x7a],1
  41ddb7:	(bad)  
  41ddb8:	call   0x174e5ad
  41ddbd:	mov    DWORD PTR [esi+0x0],0x762ad900
  41ddc4:	in     eax,dx
  41ddc5:	jns    0x41dde0
  41ddc7:	or     BYTE PTR [edx+0x0],ah
  41ddca:	add    BYTE PTR [eax],al
  41ddcc:	xor    DWORD PTR [esi-0x7497d0bb],esp
  41ddd2:	call   0x686dfd99
  41ddd7:	xchg   edi,eax
  41ddd8:	(bad)  
  41ddd9:	jle    0x41de25
  41dddb:	stc    
  41dddc:	mov    DWORD PTR [eax],ebx
  41ddde:	or     al,0x62
  41dde0:	mov    cl,0x8a
  41dde2:	jb     0x41ddd5
  41dde4:	mov    dl,al
  41dde6:	std    
  41dde7:	(bad)  
  41dde8:	jns    0x41dd88
  41ddea:	inc    ebx
  41ddeb:	mul    bl
  41dded:	test   BYTE PTR [edx-0x2be5b73],0x5c
  41ddf4:	jmp    0x41dd81
  41ddf6:	jb     0x41dde9
  41ddf8:	mov    BYTE PTR [esp+ebp*8+0x438489d6],bl
  41ddff:	add    eax,0xf786ab
  41de04:	mov    ch,0xf6
  41de06:	das    
  41de07:	mov    ecx,esi
  41de09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de0a:	adc    al,0xe8
  41de0c:	xchg   esp,eax
  41de0d:	pop    esp
  41de0e:	sti    
  41de0f:	call   DWORD PTR [ecx]
  41de11:	(bad)
  41de14:	jmp    0x41de18
  41de16:	add    BYTE PTR [edi+0x55],dl
  41de19:	xchg   esi,eax
  41de1a:	in     al,dx
  41de1b:	adc    bl,BYTE PTR [edx]
  41de1d:	add    edi,ebx
  41de1f:	jne    0x41de8b
  41de21:	jo     0x41de94
  41de23:	or     al,0x75
  41de25:	test   BYTE PTR [edi],0xff
  41de28:	aas    
  41de29:	jno    0x41ddde
  41de2b:	inc    ebx
  41de2c:	pop    edx
  41de2d:	test   al,al
  41de2f:	or     al,0x0
  41de31:	add    BYTE PTR [eax],al
  41de33:	cmc    
  41de34:	rcl    BYTE PTR [esi-0x75],1
  41de37:	scas   eax,DWORD PTR es:[edi]
  41de38:	into   
  41de39:	mov    esi,0x2f018cff
  41de3e:	fild   DWORD PTR [ebx]
  41de40:	iret   
  41de41:	and    ecx,DWORD PTR [ebp+eax*2+0xd]
  41de45:	aas    
  41de46:	add    cl,BYTE PTR [edx]
  41de48:	or     DWORD PTR [ecx+0x503aee44],ecx
  41de4e:	call   0x41bbf0
  41de53:	xchg   ebx,eax
  41de54:	int    0x23
  41de56:	and    BYTE PTR [edx-0x78dc8bfe],ah
  41de5c:	int    0x23
  41de5e:	dec    eax
  41de5f:	repnz call 0x15fa:0xd9da005d
  41de67:	ficom  DWORD PTR [ebx-0x1f86ffc4]
  41de6d:	sahf   
  41de6e:	call   0x163d4d38
  41de73:	shl    BYTE PTR [eax],cl
  41de75:	inc    eax
  41de76:	add    BYTE PTR [ebx],dh
  41de78:	sar    BYTE PTR [esi-0x38],1
  41de7b:	xchg   ebp,eax
  41de7c:	pop    edx
  41de7d:	mov    cl,0x89
  41de7f:	repz rcr edi,1
  41de82:	pop    ss
  41de83:	jp     0x41de5f
  41de85:	fist   WORD PTR [ebx]
  41de87:	dec    ebx
  41de88:	mov    al,ds:0x9f098407
  41de8d:	add    BYTE PTR [eax],al
  41de8f:	js     0x41df05
  41de91:	stos   DWORD PTR es:[edi],eax
  41de92:	scas   al,BYTE PTR es:[edi]
  41de93:	call   0x0:0x88965d
  41de9a:	fwait
  41de9b:	sbb    edi,DWORD PTR [ebx+0x4326f0c]
  41dea1:	add    bl,dh
  41dea3:	and    BYTE PTR [eax+0x23],bl
  41dea6:	outs   dx,DWORD PTR ds:[esi]
  41dea7:	sahf   
  41dea8:	add    BYTE PTR [eax],al
  41deaa:	repnz xchg esp,eax
  41deac:	jge    0x41de3e
  41deae:	repz popf 
  41deb0:	add    BYTE PTR [ecx-0x7f4581],cl
  41deb6:	inc    esp
  41deb7:	sahf   
  41deb8:	xor    DWORD PTR [esi-0x9],0xffffff9d
  41debc:	pop    es
  41debd:	test   BYTE PTR [ecx-0x62],dh
  41dec0:	add    BYTE PTR [eax],al
  41dec2:	jle    0x41df1e
  41dec4:	fadd   QWORD PTR [edi+0x76]
  41dec7:	mov    edx,0xc0b23dc
  41decc:	and    eax,DWORD PTR [eax]
  41dece:	repz int3 
  41ded0:	dec    edi
  41ded1:	and    esi,DWORD PTR [ebx-0x62]
  41ded4:	add    BYTE PTR [eax],al
  41ded6:	jnp    0x41df3a
  41ded8:	fcom   QWORD PTR [eax+ebp*2]
  41dedb:	sbb    ah,al
  41dedd:	xchg   ebx,esi
  41dedf:	popf   
  41dee0:	add    al,ch
  41dee2:	(bad)  
  41dee3:	jle    0x41dee5
  41dee5:	add    BYTE PTR [ebx+0x79],dh
  41dee8:	fcom   QWORD PTR [eax]
  41deea:	repz xchg esp,eax
  41deec:	jl     0x41def6
  41deee:	repnz popf 
  41def0:	add    BYTE PTR [edx-0x34],ch
  41def3:	xchg   esp,eax
  41def4:	or     al,0x24
  41def6:	call   FWORD PTR [ebp+ebp*8+0x2706e00f]
  41defd:	add    al,0x0
  41deff:	add    BYTE PTR [eax],al
  41df01:	mov    dh,0x12
  41df03:	add    ebp,esp
  41df05:	xchg   esp,eax
  41df06:	ret    
  41df07:	(bad)  
  41df08:	cdq    
  41df09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0a:	mov    edx,DWORD PTR [edx-0x20]
  41df0d:	int3   
  41df0e:	mov    ebx,ebx
  41df10:	arpl   WORD PTR [edx],ax
  41df12:	inc    edi
  41df13:	out    0x8c,eax
  41df15:	or     bl,ah
  41df17:	add    bh,BYTE PTR [edi-0x79]
  41df1a:	sti    
  41df1b:	bound  esp,QWORD PTR [ebx-0x79197484]
  41df21:	xor    bl,ah
  41df23:	lods   al,BYTE PTR cs:[esi]
  41df25:	fsub   DWORD PTR [esi]
  41df27:	out    0x3,eax
  41df29:	jp     0x41df64
  41df2b:	test   DWORD PTR [eax+esi*4-0x4c3e1d1e],0xcb8ae6fa
  41df36:	(bad)  
  41df37:	lods   al,BYTE PTR ds:[esi]
  41df38:	add    al,0x44
  41df3a:	or     BYTE PTR [eax+0x2d1eb68a],ch
  41df40:	inc    ecx
  41df41:	mov    DWORD PTR ds:0x8b2e6350,0xf6a19855
  41df4b:	dec    ebp
  41df4c:	push   cs
  41df4d:	out    dx,eax
  41df4e:	sahf   
  41df4f:	push   edx
  41df50:	mov    ds:0x3f6f8b16,al
  41df55:	xlat   BYTE PTR ds:[ebx]
  41df56:	out    dx,al
  41df57:	imul   eax,ebx,0xffffff81
  41df5a:	out    dx,al
  41df5b:	sub    eax,0xe686d04f
  41df60:	add    esi,ebx
  41df62:	jg     0x41dfc6
  41df64:	fild   WORD PTR [eax]
  41df66:	add    BYTE PTR [eax],al
  41df68:	je     0x41df71
  41df6a:	out    0x3,eax
  41df6c:	fild   DWORD PTR [eax-0x600cfc7a]
  41df72:	jae    0x41df77
  41df74:	repz push es
  41df76:	and    eax,0xff89f304
  41df7b:	jl     0x41df21
  41df7d:	cmp    cl,BYTE PTR [ecx-0x17cd635b]
  41df83:	lahf   
  41df84:	mov    edx,0x3070fc8b
  41df89:	dec    DWORD PTR [eax+0xa936d]
  41df8f:	jmp    0xf5826184
  41df94:	imul   eax,DWORD PTR [esi+0x6f76523],0x81914300
  41df9e:	inc    eax
  41df9f:	fldcw  WORD PTR [ebx+0xe]
  41dfa2:	and    al,0xe1
  41dfa4:	mov    eax,0xf0e12c9e
  41dfa9:	push   es
  41dfaa:	push   0xffffffca
  41dfac:	jnp    0x41dfbc
  41dfae:	and    al,0xc1
  41dfb0:	sbb    BYTE PTR [edi+0x6f0c120],bl
  41dfb6:	mov    DWORD PTR [esi-0x32bc81f9],esp
  41dfbc:	sub    BYTE PTR [edx],bh
  41dfbe:	std    
  41dfbf:	hlt    
  41dfc0:	inc    eax
  41dfc1:	mov    esi,DWORD PTR [ebx+0xd]
  41dfc4:	push   ebx
  41dfc5:	mov    ds:0x8b843dfa,al
  41dfca:	imul   ecx,DWORD PTR [eax+eax*1],0xb2780000
  41dfd1:	mov    cl,ch
  41dfd3:	cmp    al,0xf2
  41dfd5:	push   edi
  41dfd6:	push   ecx
  41dfd7:	out    dx,al
  41dfd8:	into   
  41dfd9:	(bad)  
  41dfda:	call   0x9a91a358
  41dfdf:	pop    ebp
  41dfe0:	push   ss
  41dfe1:	and    al,0x9
  41dfe3:	dec    edi
  41dfe4:	leave  
  41dfe5:	(bad)  [esi]
  41dfe7:	pop    esp
  41dfe8:	and    BYTE PTR ds:0x7b7caf72,ah
  41dfee:	int    0xc8
  41dff0:	xor    eax,ebp
  41dff2:	pop    es
  41dff3:	lods   al,BYTE PTR ds:[esi]
  41dff4:	mov    esp,edi
  41dff6:	add    BYTE PTR [ecx+0x4a],ah
  41dff9:	dec    esp
  41dffa:	push   ebx
  41dffb:	int    0xf9
  41dffd:	and    esp,DWORD PTR [eax]
  41dfff:	repnz test al,0xd8
  41e002:	dec    ebp
  41e004:	jp     0x41e046
  41e006:	and    al,0xb6
  41e008:	jnp    0x41e04a
  41e00a:	and    al,0xfa
  41e00c:	push   es
  41e00d:	je     0x41e066
  41e00f:	adc    edx,esi
  41e011:	and    ebx,DWORD PTR [eax]
  41e013:	pop    ss
  41e014:	jno    0x41e087
  41e016:	or     BYTE PTR [ecx],ah
  41e018:	out    dx,eax
  41e019:	or     ecx,DWORD PTR [ebx+0x4e792ef]
  41e01f:	adc    edx,edx
  41e021:	and    edx,DWORD PTR [edi+ebx*1]
  41e024:	retf   0x1823
  41e027:	mov    edx,0x6247071
  41e02c:	jle    0x41dfed
  41e02e:	inc    DWORD PTR [esi]
  41e030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e031:	jo     0x41e08a
  41e033:	add    BYTE PTR [eax],al
  41e035:	add    BYTE PTR [edx+0x75],dh
  41e038:	in     al,dx
  41e039:	jmp    FWORD PTR [ebp+0x70]
  41e03c:	jo     0x41e062
  41e03e:	(bad)  
  41e03f:	jnp    0x41e081
  41e041:	and    al,0x22
  41e043:	pop    ebp
  41e044:	nop
  41e045:	loopne 0x41e013
  41e047:	jo     0x41e0c8
  41e049:	jl     0x41e031
  41e04b:	xchg   esi,eax
  41e04c:	cld    
  41e04d:	je     0x41e06c
  41e04f:	lods   al,BYTE PTR ds:[esi]
  41e050:	jns    0x41e05e
  41e052:	inc    esi
  41e053:	aas    
  41e054:	test   DWORD PTR [esi+esi*8-0x76],edi
  41e058:	test   DWORD PTR [esi+eiz*8-0x6a],ebx
  41e05c:	out    0xb,eax
  41e05e:	icebp  
  41e05f:	out    dx,eax
  41e060:	or     esi,DWORD PTR [esp+edx*1-0x28]
  41e064:	out    0x73,eax
  41e066:	stos   BYTE PTR es:[edi],al
  41e067:	jae    0x41e064
  41e069:	mov    ecx,DWORD PTR [esi-0x57]
  41e06c:	adc    al,0x85
  41e06e:	or     eax,0xf38d28f8
  41e073:	pop    ecx
  41e074:	fadd   QWORD PTR [edi-0x35]
  41e077:	shl    BYTE PTR ds:0x3d14f300,0x24
  41e07e:	out    dx,eax
  41e07f:	sbb    al,0x1b
  41e081:	pusha  
  41e082:	repz cmp ebp,DWORD PTR es:[eax+0x68]
  41e087:	(bad)  
  41e088:	fcom   QWORD PTR [ebx]
  41e08a:	push   0xffffffd8
  41e08c:	aaa    
  41e08d:	mov    DWORD PTR [esi],esi
  41e08f:	mov    ?,WORD PTR [edx-0x7661e8bb]
  41e095:	jge    0x41e0d2
  41e097:	daa    
  41e098:	ds add BYTE PTR fs:[eax],al
  41e09c:	add    BYTE PTR [edx-0x73036b21],cl
  41e0a2:	sbb    eax,DWORD PTR [eax+0x24]
  41e0a5:	cmp    eax,esi
  41e0a7:	cwde   
  41e0a8:	pop    ebp
  41e0a9:	repz popf 
  41e0ab:	xchg   DWORD PTR [ebx-0x31],eax
  41e0ae:	add    DWORD PTR [edi-0x3e62fcb6],eax
  41e0b4:	xchg   BYTE PTR [ebp-0x30ba41fb],ch
  41e0ba:	popf   
  41e0bb:	test   eax,0x92815634
  41e0c0:	push   edx
  41e0c1:	js     0x41e13d
  41e0c3:	cmp    DWORD PTR [edx],0x4e
  41e0c6:	inc    ebp
  41e0c7:	aas    
  41e0c8:	add    bl,dh
  41e0ca:	in     al,dx
  41e0cb:	xchg   BYTE PTR [edx-0x15],bl
  41e0ce:	inc    edi
  41e0cf:	sub    esi,DWORD PTR [edx+eiz*4-0x14]
  41e0d3:	xchg   edx,eax
  41e0d4:	cmp    BYTE PTR [edx+ebp*4+0x27],al
  41e0d8:	aaa    
  41e0d9:	sahf   
  41e0da:	test   eax,0x80b6612
  41e0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e0:	std    
  41e0e1:	or     al,0x22
  41e0e3:	les    esi,FWORD PTR [ebx-0x5a]
  41e0e6:	lds    eax,FWORD PTR [eax+edi*4]
  41e0e9:	mov    al,0x9d
  41e0eb:	xchg   ebx,eax
  41e0ec:	adc    al,BYTE PTR [edi]
  41e0ee:	pop    es
  41e0ef:	stc    
  41e0f0:	inc    ebx
  41e0f1:	repz int 0x9b
  41e0f4:	pop    es
  41e0f5:	gs inc ebp
  41e0f7:	sbb    eax,0xe802da40
  41e0fc:	mov    esp,cr7
  41e0ff:	mov    edx,0x98
  41e104:	aam    0x73
  41e106:	add    al,0x95
  41e108:	mov    DWORD PTR [ebx-0x20bf6b12],0x66cc37f
  41e112:	out    0x3,eax
  41e114:	repnz add DWORD PTR [edi],ecx
  41e117:	pop    esp
  41e118:	xor    eax,DWORD PTR [edi]
  41e11a:	push   0x1b
  41e11c:	daa    
  41e11d:	pop    es
  41e11e:	push   esp
  41e11f:	fcom   DWORD PTR [edi+ecx*1]
  41e122:	inc    esp
  41e123:	add    al,0x0
  41e125:	shl    DWORD PTR [ecx-0x35],1
  41e128:	mov    WORD PTR [eax-0x33],?
  41e12b:	xchg   esp,eax
  41e12c:	jg     0x41e0af
  41e12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12f:	(bad)  
  41e131:	nop
  41e132:	out    0x2,al
  41e134:	loopne 0x41e116
  41e136:	and    eax,0x12fae9d9
  41e13b:	push   esi
  41e13c:	aam    0xfa
  41e13e:	dec    esi
  41e13f:	inc    eax
  41e140:	repz xchg ebx,ebx
  41e143:	xchg   ebx,eax
  41e144:	loop   0x41e18c
  41e146:	out    0x94,eax
  41e148:	shl    esi,0x75
  41e14b:	push   cs
  41e14c:	out    dx,eax
  41e14d:	xor    ebp,DWORD PTR [esi-0x12]
  41e150:	xor    al,0x4f
  41e152:	test   eax,0xeac27203
  41e157:	xor    al,0xc5
  41e159:	sub    esi,DWORD PTR [eax+eax*8+0x408efa94]
  41e160:	repz xchg ebx,ebx
  41e163:	xchg   ebx,eax
  41e164:	loop   0x41e1ac
  41e166:	out    0xd0,eax
  41e168:	add    BYTE PTR [eax],al
  41e16a:	add    BYTE PTR [esi+eax*2+0x0],al
  41e16e:	iret   
  41e16f:	imul   eax,DWORD PTR [ebx-0x7],0xe8c26be7
  41e176:	or     eax,0xa473586d
  41e17b:	jp     0x41e18d
  41e17d:	test   BYTE PTR [eax],ah
  41e17f:	in     al,dx
  41e180:	inc    ebx
  41e181:	xor    DWORD PTR [ecx],ebp
  41e183:	jo     0x41e202
  41e185:	sub    bh,BYTE PTR [ebp+ecx*8-0x10]
  41e189:	add    DWORD PTR [ecx-0xf7ff665],esp
  41e18f:	aam    0xf9
  41e191:	(bad)  
  41e192:	stos   BYTE PTR es:[edi],al
  41e193:	push   es
  41e194:	cmp    dh,dh
  41e196:	shl    BYTE PTR [edi+0x20f706],cl
  41e19c:	sbb    DWORD PTR [ecx-0x21],ebp
  41e19f:	popf   
  41e1a0:	adc    edi,DWORD PTR [esi+0xdfa72a0]
  41e1a6:	cdq    
  41e1a7:	xor    eax,0x76690991
  41e1ac:	ss jnp 0x41e16f
  41e1af:	imul   ecx,DWORD PTR [ebp+0x73],0xffffffea
  41e1b3:	ins    DWORD PTR es:[edi],dx
  41e1b4:	dec    esi
  41e1b5:	(bad)  
  41e1b6:	push   eax
  41e1b7:	cmc    
  41e1b8:	cli    
  41e1b9:	add    DWORD PTR [esi+0x37348da1],edx
  41e1bf:	xor    al,0x87
  41e1c1:	and    al,0xe9
  41e1c3:	test   BYTE PTR [esi],0x58
  41e1c6:	stos   BYTE PTR es:[edi],al
  41e1c7:	or     dl,BYTE PTR [eax+0x7e9b6aeb]
  41e1cd:	add    BYTE PTR [ebp+0x1b000000],0xd7
  41e1d4:	push   ebp
  41e1d5:	push   ss
  41e1d6:	sbb    al,0x83
  41e1d8:	and    ah,0x24
  41e1db:	test   DWORD PTR [edi+0xd1e0cdd],eax
  41e1e1:	imul   edi,esp,0xffffff85
  41e1e4:	cld    
  41e1e5:	jmp    0x65ac5d
  41e1ea:	adc    bh,BYTE PTR [edx]
  41e1ec:	call   0xfbdb71e8
  41e1f1:	test   dl,cl
  41e1f3:	or     DWORD PTR [ecx+ebx*2+0x33000a0b],eax
  41e1fa:	sbb    cl,bl
  41e1fc:	test   BYTE PTR [esi+ebp*4+0x6d],al
  41e200:	xor    eax,0x8608de45
  41e205:	cmp    al,0xcb
  41e207:	or     DWORD PTR [eax],eax
  41e209:	mov    edx,edi
  41e20b:	adc    DWORD PTR [edx],edx
  41e20d:	inc    eax
  41e20e:	fiadd  DWORD PTR [edx+ecx*2]
  41e211:	adc    BYTE PTR [ebp+0x23],bl
  41e214:	sti    
  41e215:	(bad)  
  41e216:	jle    0x41e1a2
  41e218:	push   ebx
  41e219:	call   0x3d51ec
  41e21e:	and    DWORD PTR [edx+0x6aee7485],ebx
  41e224:	aaa    
  41e225:	div    DWORD PTR [ebp-0x65fedd73]
  41e22b:	or     DWORD PTR [eax+0x7409967d],eax
  41e231:	push   cs
  41e232:	fcomp  QWORD PTR [ecx+0x871]
  41e238:	add    BYTE PTR [edx-0x6a007956],dh
  41e23e:	mov    ds:0x95a00e6,al
  41e243:	xchg   DWORD PTR [ebp+0x52],eax
  41e246:	mov    eax,ds:0x98658abd
  41e24b:	test   DWORD PTR [esi+edi*1+0x75],eax
  41e24f:	mov    DWORD PTR [esi+ebp*1+0x7d],eax
  41e253:	dec    esp
  41e254:	mov    DWORD PTR [esi+0x6d],eax
  41e257:	adc    al,0xe8
  41e259:	xchg   esp,eax
  41e25a:	mov    ?,ebx
  41e25c:	call   FWORD PTR [esi-0x7a7bf4b7]
  41e262:	or     DWORD PTR [eax],eax
  41e264:	add    bl,dh
  41e266:	jmp    0x7391:0xbfcb2444
  41e26d:	xlat   BYTE PTR ds:[ebx]
  41e26e:	setl   dl
  41e271:	ins    BYTE PTR es:[edi],dx
  41e272:	inc    esp
  41e273:	xchg   edx,eax
  41e274:	mov    BYTE PTR [edi-0x587923ed],ch
  41e27a:	or     ebx,eax
  41e27c:	dec    esi
  41e27d:	js     0x41e2b5
  41e27f:	mov    DWORD PTR [ebx+0xf],0x3787005a
  41e286:	push   edx
  41e287:	int3   
  41e288:	xchg   BYTE PTR [edi+0x4a],dl
  41e28b:	inc    eax
  41e28c:	call   0xfcd3dee1
  41e291:	outs   dx,DWORD PTR ds:[esi]
  41e292:	add    al,BYTE PTR cs:[eax+esi*2+0x1d00006e]
  41e29a:	sub    al,0x45
  41e29c:	and    al,0x0
  41e29e:	add    BYTE PTR [eax],al
  41e2a0:	add    BYTE PTR [esi-0x71],ch
  41e2a3:	sar    BYTE PTR [ebx+esi*8],1
  41e2a6:	aas    
  41e2a7:	and    al,0xe7
  41e2a9:	out    0x47,al
  41e2ab:	and    al,0xe3
  41e2ad:	out    0xf,al
  41e2af:	and    al,0xe7
  41e2b1:	push   ebp
  41e2b2:	imul   ecx,DWORD PTR [ebp-0x10853a7c],0xffffffb8
  41e2b9:	les    edx,FWORD PTR [edi]
  41e2bb:	popa   
  41e2bc:	sbb    eax,0xbf88b2b5
  41e2c1:	push   ecx
  41e2c2:	loopne 0x41e313
  41e2c4:	mov    ebp,0x272417a4
  41e2c9:	popa   
  41e2ca:	shl    bh,0x92
  41e2cd:	sub    eax,0xae770004
  41e2d2:	pop    ss
  41e2d3:	sbb    al,0x44
  41e2d5:	jp     0x41e2bb
  41e2d7:	movd   mm7,DWORD PTR [edx-0x1c]
  41e2db:	xor    ecx,DWORD PTR [ebx+0x7c]
  41e2de:	jg     0x41e2dc
  41e2e0:	sub    al,0x7
  41e2e2:	imul   eax,esp,0xffffffa0
  41e2e5:	or     eax,0x16d7405e
  41e2ea:	sub    eax,0xe813cf48
  41e2ef:	aam    0xf
  41e2f1:	test   BYTE PTR [edx-0x4d7c0b19],ch
  41e2f7:	out    0xec,eax
  41e2f9:	xchg   ecx,eax
  41e2fa:	mov    ds:0x9b6ec0e7,al
  41e2ff:	sub    edi,0x947183
  41e305:	add    BYTE PTR [eax],al
  41e307:	sub    edi,DWORD PTR [ebx+edx*4+0x56]
  41e30b:	pop    esp
  41e30c:	add    ecx,ebx
  41e30e:	add    bl,dh
  41e310:	cli    
  41e311:	not    DWORD PTR [eax+0x7cbf2b40]
  41e317:	xor    BYTE PTR [ebx],ch
  41e319:	mov    edi,0xc72b4090
  41e31e:	fwait
  41e31f:	ret    
  41e320:	mov    ebp,ebp
  41e322:	nop
  41e323:	jns    0x41e31f
  41e325:	or     dl,ah
  41e327:	mov    WORD PTR [edi-0x6e606f95],?
  41e32d:	pop    edx
  41e32e:	call   0x87be5233
  41e333:	pop    DWORD PTR [ebx+0x26cf17c5]
  41e339:	iret   
  41e33a:	dec    edx
  41e33b:	cdq    
  41e33c:	test   BYTE PTR [ebp+0x32b307c],dh
  41e342:	inc    esp
  41e343:	je     0x41e30f
  41e345:	retf   0x2be7
  41e348:	retf   0xf2
  41e34b:	jno    0x41e39d
  41e34d:	xchg   esp,eax
  41e34e:	nop
  41e34f:	push   edi
  41e350:	xchg   ecx,eax
  41e351:	adc    ch,al
  41e353:	in     al,0x6e
  41e355:	jo     0x41e2de
  41e357:	inc    edi
  41e358:	xor    DWORD PTR [esi],0x2
  41e35b:	dec    edx
  41e35c:	verr   WORD PTR [esp+ebx*8+0x2a]
  41e361:	sbb    BYTE PTR [ecx+0x66fc8afd],al
  41e367:	ds ret 
  41e369:	pop    esp
  41e36a:	mov    edi,0xcf000000
  41e36f:	(bad)  
  41e370:	loop   0x41e326
  41e372:	adc    eax,DWORD PTR cs:[eax]
  41e375:	sbb    dh,BYTE PTR [edi]
  41e377:	inc    ebx
  41e378:	pop    es
  41e379:	in     al,dx
  41e37a:	cmp    BYTE PTR [ebx-0x79c816c0],bh
  41e380:	or     dh,cl
  41e382:	test   al,0xc6
  41e384:	(bad)  
  41e385:	jmp    0x3ae5:0x6ac18140
  41e38c:	mov    eax,0xb00ef0aa
  41e391:	call   0xfdcab945
  41e396:	jo     0x41e3fe
  41e398:	imul   DWORD PTR [eax+0x64]
  41e39b:	xchg   bh,bh
  41e39d:	call   0x9e97bb92
  41e3a2:	lahf   
  41e3a3:	pop    edi
  41e3a4:	push   eax
  41e3a5:	add    DWORD PTR [ebx-0x2191071],0xa
  41e3ac:	push   ecx
  41e3ad:	sar    esp,1
  41e3af:	and    eax,0xece0d6fd
  41e3b4:	cld    
  41e3b5:	into   
  41e3b6:	in     eax,0xe
  41e3b8:	xchg   DWORD PTR ds:0xd1512e9b,ebp
  41e3be:	int3   
  41e3bf:	and    eax,0xecc0b6fd
  41e3c4:	cld    
  41e3c5:	scas   al,BYTE PTR es:[edi]
  41e3c6:	add    eax,0x5b2d8713
  41e3cb:	ss push ecx
  41e3cd:	xchg   ecx,eax
  41e3ce:	sbb    al,0x26
  41e3d0:	std    
  41e3d1:	xchg   esi,eax
  41e3d2:	add    BYTE PTR [eax],al
  41e3d4:	add    al,bl
  41e3d6:	jno    0x41e35e
  41e3d8:	adc    eax,0x37325b
  41e3dd:	push   cs
  41e3de:	outs   dx,DWORD PTR ds:[esi]
  41e3df:	sbb    al,0xf
  41e3e1:	(bad)  
  41e3e2:	sub    edi,ebp
  41e3e4:	dec    DWORD PTR [edx+0x53]
  41e3e7:	pop    eax
  41e3e8:	and    al,0x32
  41e3ea:	add    DWORD PTR [eax+0x61b57],0x8081b93b
  41e3f4:	dec    edi
  41e3f5:	or     eax,DWORD PTR [esi]
  41e3f7:	add    BYTE PTR [eax],bh
  41e3f9:	pop    edi
  41e3fa:	jle    0x41e46c
  41e3fc:	adc    al,0xad
  41e3fe:	push   ds
  41e3ff:	and    al,0x28
  41e401:	mov    ebp,0xb224241e
  41e406:	push   ecx
  41e407:	outs   dx,BYTE PTR ds:[esi]
  41e408:	call   FWORD PTR ds:0xc4e9d4fd
  41e40e:	or     al,BYTE PTR [eax]
  41e410:	add    BYTE PTR [edi-0x31],cl
  41e413:	and    esp,DWORD PTR [edx+ebx*4]
  41e416:	add    bl,BYTE PTR [ecx+0x24]
  41e419:	stos   BYTE PTR es:[edi],al
  41e41a:	popf   
  41e41b:	cs mov ebp,gs
  41e41e:	xchg   ecx,eax
  41e41f:	xchg   eax,edi
  41e421:	inc    ebx
  41e422:	pop    ss
  41e423:	and    al,0x1c
  41e425:	or     DWORD PTR [ebx+ecx*1+0xacb84],0x24198d00
  41e430:	sub    BYTE PTR [edi],cl
  41e432:	xor    ah,BYTE PTR [eax+ebx*2]
  41e435:	mov    ebp,0x242419
  41e43a:	add    BYTE PTR [eax],al
  41e43c:	mov    dl,0xab
  41e43e:	jmp    FWORD PTR gs:[ebp-0x9db8f04]
  41e445:	test   DWORD PTR [eax+0x24],esp
  41e448:	mov    ds:0xf644c605,al
  41e44d:	cmp    esp,0x80808484
  41e453:	fisttp WORD PTR [edx+0x5]
  41e456:	add    BYTE PTR [ebx-0xd],ch
  41e459:	mov    eax,ds:0xe23488c6
  41e45e:	cmp    BYTE PTR [edx],bh
  41e460:	lock add BYTE PTR [edx-0x35ea0841],al
  41e467:	xchg   BYTE PTR [edi-0x487917ad],ah
  41e46d:	dec    ebx
  41e46e:	hlt    
  41e46f:	pop    eax
  41e470:	(bad)  
  41e471:	hlt    
  41e472:	test   BYTE PTR [ebx],ah
  41e474:	imul   ebp,DWORD PTR [edi+0x0],0xc0f28d00
  41e47b:	jae    0x41e476
  41e47d:	dec    ecx
  41e47e:	retf   
  41e47f:	inc    esp
  41e480:	mov    ebp,0xf37f8778
  41e485:	outs   dx,DWORD PTR ds:[esi]
  41e486:	add    BYTE PTR [esi+0x68],ah
  41e489:	repz in al,0x8b
  41e48c:	rep ins DWORD PTR es:[edi],dx
  41e48e:	add    BYTE PTR [esi+0x6e],ah
  41e491:	cs adc eax,0x45675506
  41e497:	cmp    BYTE PTR [esi-0x75],bl
  41e49a:	jg     0x41e4df
  41e49c:	pop    ss
  41e49d:	mov    dh,0x30
  41e49f:	data16 add BYTE PTR [eax],al
  41e4a2:	add    BYTE PTR [edx+esi*4+0x53fc37e4],ch
  41e4a9:	jnp    0x41e4ee
  41e4ab:	(bad)  
  41e4ad:	lea    edx,[edx]
  41e4af:	sub    ebx,DWORD PTR [eax+eax*2+0x0]
  41e4b3:	jp     0x41e4e7
  41e4b5:	call   0xe86c4cf5
  41e4ba:	cmovae esp,edi
  41e4bd:	inc    edi
  41e4be:	and    al,0x37
  41e4c0:	push   ecx
  41e4c1:	hlt    
  41e4c2:	ja     0x41e4a5
  41e4c4:	sub    eax,0xa2f8b04
  41e4c9:	fadd   DWORD PTR [esi-0x3ab7edd1]
  41e4cf:	mov    bh,0x9
  41e4d1:	xor    al,0x5
  41e4d3:	repz push es
  41e4d5:	out    0x3,eax
  41e4d7:	dec    ebx
  41e4d8:	bswap  ecx
  41e4da:	mov    WORD PTR [edi-0x75],ss
  41e4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4de:	sbb    BYTE PTR [edx],bl
  41e4e0:	cmp    al,0xb
  41e4e2:	call   0x7934d9cf
  41e4e7:	test   al,0x2a
  41e4e9:	shl    DWORD PTR [edx+ebp*2],cl
  41e4ec:	dec    ecx
  41e4ed:	jle    0x41e525
  41e4ef:	dec    eax
  41e4f0:	sub    DWORD PTR [ebp-0x73],0xdb0b2ab8
  41e4f7:	mov    eax,0x23d8f72a
  41e4fc:	and    BYTE PTR [edx+0x522be4e7],0xdb
  41e503:	test   al,0x2a
  41e505:	fcmovnb st,st(5)
  41e507:	add    BYTE PTR [eax],al
  41e509:	add    BYTE PTR [eax-0x9fd11d6],dh
  41e50f:	retf   0xec0a
  41e512:	jnp    0x41e4de
  41e514:	add    ch,al
  41e516:	in     eax,0xdb
  41e518:	retf   0xddf3
  41e51b:	fcmovnb st,st(2)
  41e51d:	div    ebx
  41e51f:	jnp    0x41e4f0
  41e521:	inc    edi
  41e522:	pop    ss
  41e523:	pop    ds
  41e524:	fiadd  WORD PTR [ecx-0x72fa7fc7]
  41e52a:	cmp    al,0x3
  41e52c:	ret    
  41e52d:	cld    
  41e52e:	mov    ah,0xf3
  41e530:	jecxz  0x41e4be
  41e532:	and    BYTE PTR [ebx],ch
  41e534:	retf   
  41e535:	fwait
  41e536:	adc    cl,BYTE PTR [ebp+eiz*8-0x2ea19574]
  41e53d:	add    ecx,esp
  41e53f:	pop    ebx
  41e540:	aad    0x17
  41e542:	xlat   BYTE PTR ds:[ebx]
  41e543:	and    bh,BYTE PTR [edi-0x3a7f543e]
  41e549:	jle    0x41e54b
  41e54b:	sub    ecx,DWORD PTR [ebx]
  41e54d:	pushf  
  41e54e:	push   eax
  41e54f:	test   bh,bh
  41e551:	mov    ch,0x7f
  41e553:	xor    BYTE PTR [ebx+0x5],0x4f
  41e557:	lods   al,BYTE PTR ds:[si]
  41e559:	ret    0x826e
  41e55c:	cld    
  41e55d:	adc    eax,0x4fe8274b
  41e562:	fwait
  41e563:	cmp    esp,0x302adc8e
  41e569:	xchg   ecx,eax
  41e56a:	int    0x5e
  41e56c:	std    
  41e56d:	jle    0x41e56f
  41e56f:	add    BYTE PTR [eax],al
  41e571:	pop    es
  41e572:	loope  0x41e4fd
  41e574:	stos   BYTE PTR es:[edi],al
  41e575:	fisttp DWORD PTR [ebp+0x3310ce2]
  41e57b:	add    BYTE PTR [ebx+ebx*4+0x6845806b],bh
  41e582:	mov    ?,WORD PTR [esi+0x72037a6a]
  41e588:	loopne 0x41e574
  41e58a:	jg     0x41e570
  41e58c:	fild   QWORD PTR [esi-0x7e]
  41e58f:	cld    
  41e590:	push   edx
  41e591:	repnz xor al,0xc0
  41e594:	bound  edx,QWORD PTR [ebp+0x6b94c0e1]
  41e59a:	jb     0x41e51c
  41e59c:	or     eax,0x6abe8f68
  41e5a1:	push   0xa
  41e5a3:	jb     0x41e585
  41e5a5:	jmp    0xfc7b:0x7513e806
  41e5ac:	adc    dh,dl
  41e5ae:	cmp    al,al
  41e5b0:	jb     0x41e53f
  41e5b2:	loope  0x41e574
  41e5b4:	fwait
  41e5b5:	loope  0x41e5a7
  41e5b7:	inc    BYTE PTR [edx-0x1ad2910f]
  41e5bd:	push   0xde3bc07b
  41e5c2:	lock inc DWORD PTR [edx-0xa]
  41e5c6:	outs   dx,BYTE PTR ds:[esi]
  41e5c7:	and    ebp,ecx
  41e5c9:	js     0x41e646
  41e5cb:	rol    BYTE PTR [eax],0xdf
  41e5ce:	std    
  41e5cf:	call   0x7dcd9457
  41e5d4:	in     al,dx
  41e5d5:	add    BYTE PTR [eax],al
  41e5d7:	add    BYTE PTR [esi+0x4],cl
  41e5da:	add    BYTE PTR [eax],al
  41e5dc:	or     DWORD PTR [ecx],edi
  41e5de:	push   ebx
  41e5df:	mov    DWORD PTR [esi],ebx
  41e5e1:	addr16 or al,0x89
  41e5e4:	push   es
  41e5e5:	adc    BYTE PTR [bp+di+0x460],al
  41e5ea:	or     eax,DWORD PTR [esi+0x366]
  41e5f0:	loop   0x41e5d4
  41e5f2:	cld    
  41e5f3:	dec    DWORD PTR [edx-0x5e]
  41e5f6:	hlt    
  41e5f7:	fisub  DWORD PTR [ecx+edx*4+0x4861f62f]
  41e5fe:	jo     0x41e60b
  41e600:	mov    eax,ds:0x934fe48a
  41e605:	add    al,BYTE PTR [eax]
  41e607:	mov    eax,edx
  41e609:	popf   
  41e60a:	(bad)  
  41e60b:	xor    al,cl
  41e60d:	dec    ebp
  41e60e:	fimul  DWORD PTR [edi]
  41e610:	mov    gs,ecx
  41e612:	cld    
  41e613:	dec    DWORD PTR [edx]
  41e615:	push   ebp
  41e616:	sti    
  41e617:	inc    edi
  41e618:	jecxz  0x41e61f
  41e61a:	and    al,0x10
  41e61c:	pushf  
  41e61d:	je     0x41e5a6
  41e61f:	inc    esp
  41e620:	scas   al,BYTE PTR es:[edi]
  41e621:	ins    DWORD PTR es:[edi],dx
  41e622:	sti    
  41e623:	xor    al,0x52
  41e625:	fwait
  41e626:	cmp    ecx,0x3b4309da
  41e62c:	jbe    0x41e68b
  41e62e:	or     al,0x72
  41e630:	out    0xff,eax
  41e632:	inc    edi
  41e633:	add    al,0x41
  41e635:	add    al,0xfb
  41e637:	push   eax
  41e638:	sahf   
  41e639:	xchg   BYTE PTR [esp+esi*2+0x20000000],bh
  41e640:	sbb    al,0x18
  41e642:	call   0x3c91cb
  41e647:	ror    DWORD PTR [eax+0x70],1
  41e64a:	push   ds
  41e64b:	rep lods al,BYTE PTR ds:[esi]
  41e64d:	add    ah,dh
  41e64f:	ja     0x41e680
  41e651:	add    al,0x87
  41e653:	add    esi,DWORD PTR [ebx+edi*2+0x6f]
  41e657:	jecxz  0x41e5fd
  41e659:	inc    eax
  41e65a:	or     bl,dh
  41e65c:	loop   0x41e69e
  41e65e:	add    BYTE PTR ds:0x6bfef02f,ch
  41e664:	(bad)  
  41e665:	dec    DWORD PTR [eax+0x3102985b]
  41e66b:	dec    esp
  41e66c:	pop    eax
  41e66d:	xchg   BYTE PTR [ebx-0x48],dh
  41e670:	fidivr DWORD PTR [esp]
  41e673:	fistp  DWORD PTR [edi]
  41e675:	push   ds
  41e676:	add    ecx,DWORD PTR [ebx-0x69]
  41e679:	mov    bl,0xff
  41e67b:	sub    al,0xeb
  41e67d:	shl    BYTE PTR [ebx-0x7],0xda
  41e681:	cmp    al,0x24
  41e683:	sti    
  41e684:	mov    edi,0x6f543198
  41e689:	add    BYTE PTR [esi-0x5b],dl
  41e68c:	mov    esp,0xb1c6e118
  41e691:	add    BYTE PTR [esi-0x5b],dl
  41e694:	(bad)  
  41e695:	out    dx,eax
  41e696:	dec    edi
  41e697:	loope  0x41e648
  41e699:	add    BYTE PTR [ecx],bh
  41e69b:	mov    ch,0xbb
  41e69d:	repnz mov ah,ch
  41e6a0:	inc    edi
  41e6a1:	add    ecx,DWORD PTR [ecx-0x54000000]
  41e6a7:	and    eax,0x97ec88f1
  41e6ac:	add    ecx,DWORD PTR [ecx-0x170eea44]
  41e6b2:	jecxz  0x41e671
  41e6b4:	mov    DWORD PTR [edx],edx
  41e6b6:	xchg   ebx,eax
  41e6b7:	pusha  
  41e6b8:	inc    eax
  41e6b9:	add    BYTE PTR [ebx-0x64fb6291],al
  41e6bf:	add    BYTE PTR [bx+si],al
  41e6c2:	repz mov edi,0x73d5cc0
  41e6c8:	inc    edx
  41e6c9:	jge    0x41e65c
  41e6cb:	fisubr DWORD PTR [ecx+0x376b7a2f]
  41e6d1:	xor    edi,DWORD PTR [edx-0x38]
  41e6d4:	loop   0x41e65a
  41e6d6:	adc    DWORD PTR [edi-0x1a],edi
  41e6d9:	xor    DWORD PTR [esi],ebx
  41e6db:	mov    dh,BYTE PTR [ecx]
  41e6dd:	add    BYTE PTR [esi],dh
  41e6df:	or     BYTE PTR [edi+0x70],ah
  41e6e2:	and    al,0x7
  41e6e4:	scas   al,BYTE PTR es:[edi]
  41e6e5:	xor    al,0xf7
  41e6e7:	and    DWORD PTR [esi+0x3881d10],0x19914c88
  41e6f1:	cld    
  41e6f2:	repz icebp 
  41e6f4:	mov    cl,BYTE PTR [ecx-0x521b90fa]
  41e6fa:	ss jl  0x41e77a
  41e6fd:	adc    bh,bl
  41e6ff:	outs   dx,BYTE PTR ds:[esi]
  41e700:	fsubr  QWORD PTR [ebp+0x126d7c26]
  41e706:	add    ebp,DWORD PTR [edi-0xc]
  41e709:	lods   eax,DWORD PTR ds:[esi]
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	add    BYTE PTR [esi],dl
  41e70e:	jl     0x41e781
  41e710:	inc    ebp
  41e711:	idiv   DWORD PTR [ebx-0x55]
  41e714:	mov    esi,DWORD PTR [ebx-0x3e]
  41e717:	dec    edx
  41e718:	in     al,dx
  41e719:	imul   edx,eax,0x2a488ea
  41e71f:	add    BYTE PTR [edi],bh
  41e721:	jmp    0x41e71b
  41e723:	and    al,0x77
  41e725:	arpl   WORD PTR [ebx],bx
  41e727:	aas    
  41e728:	stos   DWORD PTR es:[edi],eax
  41e729:	jne    0x41e7a6
  41e72b:	and    eax,0x260f6389
  41e730:	inc    ebp
  41e731:	test   DWORD PTR [esi+0x6ef3447a],0x7bbeab08
  41e73b:	cdq    
  41e73c:	fwait
  41e73d:	cwde   
  41e73e:	pop    ebp
  41e73f:	cld    
  41e740:	mov    BYTE PTR [edi-0x70],cl
  41e743:	jmp    FWORD PTR [ecx]
  41e745:	fld    DWORD PTR [ebx-0x40]
  41e748:	mov    ebx,0xf48046b0
  41e74d:	test   al,0xb3
  41e74f:	inc    eax
  41e750:	jmp    0xaa4092d5
  41e755:	outs   dx,DWORD PTR ds:[esi]
  41e756:	adc    BYTE PTR [eax],bh
  41e758:	xchg   ecx,eax
  41e759:	aaa    
  41e75a:	pop    es
  41e75b:	add    al,0x79
  41e75d:	icebp  
  41e75e:	inc    ebp
  41e75f:	push   edx
  41e760:	jb     0x41e6e6
  41e762:	cld    
  41e763:	jmp    0x41e766
  41e765:	in     eax,dx
  41e766:	push   es
  41e767:	add    BYTE PTR [edx],bl
  41e769:	inc    esi
  41e76a:	pop    esi
  41e76b:	push   esp
  41e76c:	jo     0x41e773
  41e76e:	imul   ecx,DWORD PTR [eax+0xa0],0xffffffc8
  41e775:	loopne 0x41e773
  41e777:	push   0x76
  41e779:	jl     0x41e788
  41e77b:	addr16 es jl 0x41e77b
  41e77f:	jmp    0x745aa3b
  41e784:	cmp    BYTE PTR [ebx],dl
  41e786:	or     eax,0xfc7c126d
  41e78b:	jmp    0xfd3ebe72
  41e790:	mov    BYTE PTR [esi],dl
  41e792:	inc    eax
  41e793:	jmp    0xe6405b0f
  41e798:	test   DWORD PTR [edi+edi*8+0x7479f0e8],ecx
  41e79f:	in     eax,dx
  41e7a0:	jge    0x41e79a
  41e7a2:	fild   QWORD PTR [edx-0x58]
  41e7a5:	jnp    0x41e78e
  41e7a7:	push   eax
  41e7a8:	fidivr DWORD PTR [ebx-0x4]
  41e7ab:	gs mov al,0xb
  41e7ae:	test   BYTE PTR [edi],ah
  41e7b0:	lock push es
  41e7b2:	add    BYTE PTR [ebp+ecx*2+0x52],ch
  41e7b6:	cli    
  41e7b7:	push   ss
  41e7b8:	jnp    0x41e784
  41e7ba:	out    0x7a,eax
  41e7bc:	mov    BYTE PTR [edx-0x4],bh
  41e7bf:	add    BYTE PTR [esi+0x46],al
  41e7c2:	jo     0x41e825
  41e7c4:	lods   eax,DWORD PTR ds:[esi]
  41e7c5:	or     al,0xe0
  41e7c7:	call   0x3d9df3
  41e7cc:	adc    DWORD PTR [esi+0x4036f337],edx
  41e7d2:	push   esi
  41e7d3:	lea    edx,[edi]
  41e7d5:	stos   DWORD PTR es:[edi],eax
  41e7d6:	stc    
  41e7d7:	inc    DWORD PTR [eax]
  41e7d9:	add    BYTE PTR [eax],al
  41e7db:	popf   
  41e7dc:	xor    edx,DWORD PTR [eax-0x18]
  41e7df:	data16 mov ah,0xfc
  41e7e2:	inc    DWORD PTR [edi]
  41e7e4:	inc    ebx
  41e7e5:	jo     0x41e822
  41e7e7:	or     DWORD PTR [edx-0x38301f8f],eax
  41e7ed:	out    dx,eax
  41e7ee:	push   eax
  41e7ef:	shr    DWORD PTR [edi],cl
  41e7f1:	lock mov DWORD PTR [edi-0x6da27a6a],ebp
  41e7f8:	fwait
  41e7f9:	mov    edx,0x80825d8e
  41e7fe:	shl    dh,0x6b
  41e801:	sti    
  41e802:	xor    eax,0x3fd56e
  41e807:	lahf   
  41e808:	xchg   esp,edx
  41e80a:	std    
  41e80b:	popf   
  41e80c:	or     DWORD PTR [ebp+ecx*4-0x29],0xdfe84c92
  41e814:	(bad)  
  41e815:	sti    
  41e816:	inc    DWORD PTR [edx+0x578dfac7]
  41e81c:	xchg   esi,eax
  41e81d:	in     al,0x5a
  41e81f:	xchg   ecx,eax
  41e820:	cmp    ebx,0xd48fa256
  41e826:	(bad)  
  41e827:	sub    eax,0x32e07200
  41e82c:	jnp    0x41e848
  41e82e:	dec    DWORD PTR ds:0xc6681d9e
  41e834:	add    al,BYTE PTR [eax]
  41e836:	add    BYTE PTR [edi-0x78],bl
  41e839:	aam    0xfd
  41e83b:	repz adc BYTE PTR [ebp+0x4f],al
  41e842:	mov    esp,0xdefcfc90
  41e847:	stos   DWORD PTR es:[edi],eax
  41e848:	repz aas 
  41e84a:	repz mov bh,0xc7
  41e84d:	add    edx,esi
  41e84f:	outs   dx,DWORD PTR ds:[esi]
  41e850:	add    BYTE PTR [ebp+0x15],dh
  41e853:	and    bh,BYTE PTR [edi]
  41e855:	std    
  41e856:	repnz daa 
  41e858:	daa    
  41e859:	std    
  41e85a:	pop    es
  41e85b:	cmp    edi,DWORD PTR [ecx+0x42]
  41e85e:	xchg   edi,eax
  41e85f:	sbb    al,0x8e
  41e861:	cmp    BYTE PTR [ebx+0x6d],0xa
  41e865:	sbb    BYTE PTR [eax-0x51],dh
  41e868:	or     BYTE PTR [edi+0x70],0xa0
  41e86c:	clc    
  41e86d:	push   esp
  41e86e:	pop    ebx
  41e86f:	addr16 out 0xfc,al
  41e872:	pop    esp
  41e873:	in     al,0x90
  41e875:	cmp    BYTE PTR [eax+0x1a],ah
  41e878:	inc    DWORD PTR [edi+0x389998ae]
  41e87e:	fldcw  WORD PTR [esi+0x31]
  41e881:	push   esi
  41e882:	outs   dx,BYTE PTR ds:[esi]
  41e883:	loop   0x41e82d
  41e885:	cli    
  41e886:	xor    al,0x80
  41e888:	xor    BYTE PTR [ecx-0x40],dl
  41e88b:	clc    
  41e88c:	out    dx,eax
  41e88d:	inc    edi
  41e88e:	add    BYTE PTR [eax],dh
  41e890:	add    al,0x81
  41e892:	sbb    ecx,DWORD PTR [edi-0xb]
  41e895:	pushf  
  41e896:	scas   al,BYTE PTR es:[edi]
  41e897:	loopne 0x41e861
  41e899:	pop    edx
  41e89a:	or     al,0x52
  41e89c:	jmp    0x768b:0x2abca050
  41e8a3:	aaa    
  41e8a4:	mov    ah,bh
  41e8a6:	add    BYTE PTR [eax],al
  41e8a8:	add    ah,dh
  41e8aa:	sahf   
  41e8ab:	cwde   
  41e8ac:	mov    dl,0xca
  41e8ae:	cmp    DWORD PTR [esi+0x6f61b382],eax
  41e8b4:	inc    edx
  41e8b5:	fcom   QWORD PTR [eax+0x7bb6f98]
  41e8bb:	and    eax,0xa38d2e86
  41e8c0:	xchg   BYTE PTR [edi],ah
  41e8c2:	fcomp  QWORD PTR [edi]
  41e8c4:	ret    0xb1d4
  41e8c7:	popa   
  41e8c8:	add    esi,ebx
  41e8ca:	mov    dh,0xe7
  41e8cc:	ret    0xed43
  41e8cf:	out    0xd2,al
  41e8d1:	retf   
  41e8d2:	in     eax,dx
  41e8d3:	out    0x42,al
  41e8d5:	mov    edx,DWORD PTR [esi+0x60]
  41e8d8:	add    esi,ebx
  41e8da:	mov    WORD PTR [ecx+0x136eb229],gs
  41e8e0:	test   BYTE PTR [bx+si+0x39],bh
  41e8e4:	sub    eax,0x4461430b
  41e8e9:	repz in al,dx
  41e8eb:	out    0xd1,al
  41e8ed:	dec    ebx
  41e8ee:	js     0x41e8c3
  41e8f0:	outs   dx,DWORD PTR ds:[esi]
  41e8f1:	hlt    
  41e8f2:	(bad)  
  41e8f3:	out    0x78,al
  41e8f5:	sub    BYTE PTR fs:[ebp+0x71d21f10],0xd7
  41e8fd:	js     0x41e916
  41e8ff:	daa    
  41e900:	add    al,0x9d
  41e902:	in     al,dx
  41e903:	out    0x98,al
  41e905:	jecxz  0x41e8d7
  41e907:	(bad)  
  41e908:	out    dx,eax
  41e909:	ins    BYTE PTR es:[edi],dx
  41e90a:	pop    ss
  41e90b:	daa    
  41e90c:	add    al,0x0
  41e90e:	add    BYTE PTR [eax],al
  41e910:	jo     0x41e959
  41e912:	repnz cld 
  41e914:	mov    ah,0x77
  41e916:	fld    TBYTE PTR [ebx-0x14]
  41e919:	(bad)  
  41e91a:	out    0x2d,al
  41e91c:	mov    esi,0x1c793b77
  41e921:	adc    BYTE PTR [edi+ecx*1+0xf],0xd7
  41e926:	mov    ebp,0xf378fd50
  41e92b:	jae    0x41e911
  41e92d:	(bad)  
  41e92e:	out    0x25,al
  41e930:	dec    eax
  41e931:	fdiv   DWORD PTR [eax-0x3f]
  41e934:	dec    ebx
  41e935:	inc    esp
  41e936:	call   FWORD PTR [edx-0x3d0112df]
  41e93c:	lock outs dx,BYTE PTR ds:[esi]
  41e93e:	int    0x21
  41e940:	jbe    0x41e9bc
  41e942:	sar    BYTE PTR [ebx-0x7d0012ff],0xf0
  41e949:	outs   dx,BYTE PTR ds:[esi]
  41e94a:	rcl    DWORD PTR [ecx],0x6e
  41e94d:	jp     0x41e90f
  41e94f:	pushf  
  41e950:	sub    ebp,DWORD PTR [esi+edi*2+0xd]
  41e954:	xchg   ebx,eax
  41e955:	add    eax,DWORD PTR [eax]
  41e957:	jmp    0x34ccbb2a
  41e95c:	dec    ebp
  41e95d:	jle    0x41e95b
  41e95f:	out    0x9,al
  41e961:	aad    0xfb
  41e963:	jb     0x41e9de
  41e965:	pop    edi
  41e966:	mov    ?,esp
  41e968:	lock push es
  41e96a:	add    ebx,DWORD PTR [ebx+0x530006f1]
  41e970:	arpl   di,ax
  41e972:	imul   ebp,ecx,0xdd000000
  41e978:	hlt    
  41e979:	shr    DWORD PTR [edx-0x68],cl
  41e97c:	jp     0x41e965
  41e97e:	mov    al,0x61
  41e980:	jp     0x41e97e
  41e982:	ins    BYTE PTR es:[edi],dx
  41e983:	xor    cl,bh
  41e985:	sbb    dh,BYTE PTR [edx-0x7a]
  41e988:	(bad)  
  41e989:	addr16 popa 
  41e98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e98c:	(bad)  
  41e98d:	call   FWORD PTR [ebx-0x4b]
  41e990:	dec    ebx
  41e991:	cli    
  41e992:	xchg   BYTE PTR [edi-0x39],dh
  41e995:	out    0xed,eax
  41e997:	pusha  
  41e998:	ja     0x41e996
  41e99a:	ins    BYTE PTR es:[edi],dx
  41e99b:	xor    BYTE PTR [edx],cl
  41e99d:	xchg   ebx,eax
  41e99e:	test   eax,0xf072b794
  41e9a3:	and    esi,DWORD PTR [edi+0x4b857065]
  41e9a9:	cli    
  41e9aa:	push   esi
  41e9ab:	ja     0x41e95d
  41e9ad:	in     eax,dx
  41e9ae:	call   0xccf0a3
  41e9b3:	pop    edi
  41e9b4:	lods   al,BYTE PTR ds:[esi]
  41e9b5:	idiv   edi
  41e9b7:	and    eax,0x8afffcb4
  41e9bc:	xor    DWORD PTR [ecx-0x7],esi
  41e9bf:	mov    dl,0x26
  41e9c1:	je     0x41ea03
  41e9c3:	(bad)  
  41e9c5:	or     esp,0x50fb8ae7
  41e9cb:	in     eax,0x64
  41e9cd:	test   al,0x12
  41e9cf:	mov    cl,BYTE PTR [edx]
  41e9d1:	jg     0x41ea50
  41e9d3:	test   BYTE PTR [eax],0x76
  41e9d6:	and    al,0x21
  41e9d8:	xor    eax,DWORD PTR [esi+eiz*2]
  41e9db:	add    BYTE PTR [eax],al
  41e9dd:	add    BYTE PTR [ecx],cl
  41e9df:	inc    edx
  41e9e0:	cld    
  41e9e1:	jae    0x41e9a4
  41e9e3:	cmp    bh,bl
  41e9e5:	adc    eax,0x401d1a
  41e9ea:	cdq    
  41e9eb:	retf   0xff4c
  41e9ee:	sbb    eax,0x568588ff
  41e9f3:	mov    bl,bh
  41e9f5:	dec    DWORD PTR [edx]
  41e9f7:	jecxz  0x41e994
  41e9f9:	aam    0x5a
  41e9fb:	or     ah,bh
  41e9fd:	or     al,0xd7
  41e9ff:	jg     0x41e9c9
  41ea01:	std    
  41ea02:	test   DWORD PTR [edx+0x4d4be84c],ecx
  41ea08:	sti    
  41ea09:	inc    DWORD PTR ds:0xffc3c569
  41ea0f:	test   eax,ebp
  41ea11:	sub    DWORD PTR [esi-0xd],0x4d
  41ea15:	push   ecx
  41ea16:	or     DWORD PTR [ecx-0x77],edx
  41ea19:	je     0x41ea49
  41ea1b:	add    ch,al
  41ea1d:	mov    ah,0xa
  41ea20:	add    BYTE PTR [ebx-0x60f21cb4],cl
  41ea26:	sbb    cl,BYTE PTR [edx]
  41ea28:	test   al,al
  41ea2a:	push   ds
  41ea2b:	adc    ch,al
  41ea2d:	mov    bl,dh
  41ea2f:	sbb    BYTE PTR [ecx-0x70a0bf04],al
  41ea35:	dec    ebx
  41ea36:	pop    ss
  41ea37:	js     0x41eaa1
  41ea39:	fild   DWORD PTR [ebp+0x695e005f]
  41ea3f:	and    ch,bl
  41ea41:	mov    BYTE PTR [eax],al
  41ea43:	add    BYTE PTR [eax],al
  41ea45:	into   
  41ea46:	add    BYTE PTR [ebp+0x31],0xa8
  41ea4a:	sbb    BYTE PTR [ebp-0x19],ch
  41ea4d:	mov    eax,ds:0x83fc8158
  41ea52:	pop    esi
  41ea53:	inc    ebp
  41ea54:	out    0x32,eax
  41ea56:	mov    ah,0x81
  41ea58:	cld    
  41ea59:	arpl   WORD PTR [esi+0x45],bx
  41ea5c:	push   edx
  41ea5d:	js     0x41ea62
  41ea5f:	sub    ebx,0x53
  41ea62:	popa   
  41ea63:	add    BYTE PTR [eax],al
  41ea65:	inc    eax
  41ea66:	jmp    0x2085f6c5
  41ea6b:	or     BYTE PTR [esi+0x1c],dl
  41ea6e:	into   
  41ea6f:	xchg   BYTE PTR [edi-0x6a479afa],bh
  41ea75:	repz pop edi
  41ea77:	add    cl,ch
  41ea79:	and    eax,0x6407fde1
  41ea7e:	cmp    esi,DWORD PTR [ebx+ecx*4]
  41ea81:	sahf   
  41ea82:	mov    edi,0x4754fc7e
  41ea87:	mov    bh,0x2a
  41ea89:	repz pop edi
  41ea8b:	xor    DWORD PTR [eax-0x5],0x6e4f49f8
  41ea92:	loop   0x41ea3c
  41ea94:	std    
  41ea95:	xor    al,0x84
  41ea97:	jmp    0x24fe:0xd3c6bcff
  41ea9e:	pop    edi
  41ea9f:	push   0x81fcedf9
  41eaa4:	sub    BYTE PTR [edi],0x4f
  41eaa7:	xchg   DWORD PTR [edi-0x79000000],edi
  41eaad:	push   es
  41eaae:	idiv   DWORD PTR [ebx+0x3e70675]
  41eab4:	push   0xf7817eb3
  41eab9:	je     0x41eaf9
  41eabb:	mov    BYTE PTR [ecx],bl
  41eabd:	pop    es
  41eabe:	out    0x6b,eax
  41eac0:	jmp    0x475f:0x4303e6f5
  41eac7:	push   ss
  41eac8:	aam    0x74
  41eaca:	popa   
  41eacb:	clc    
  41eacc:	clc    
  41eacd:	jge    0x41eabb
  41eacf:	mov    BYTE PTR [esp+eax*1+0x74bca263],al
  41ead6:	out    0x8c,al
  41ead8:	xor    DWORD PTR [ebx],eax
  41eada:	fiadd  DWORD PTR [ebx+0x16]
  41eadd:	cs stos BYTE PTR es:[edi],al
  41eadf:	pop    es
  41eae0:	js     0x41ead4
  41eae2:	jmp    0x98c8:0x5f478012
  41eae9:	pop    edi
  41eaea:	(bad)  
  41eaeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaec:	mov    WORD PTR [edx+ebp*2+0x44],?
  41eaf0:	add    dh,dh
  41eaf2:	push   eax
  41eaf3:	or     BYTE PTR [ebx],cl
  41eaf5:	inc    edi
  41eaf6:	dec    esi
  41eaf7:	les    esi,FWORD PTR [esp+ebp*8-0x61]
  41eafb:	add    al,0xf3
  41eafd:	push   es
  41eafe:	(bad)  
  41eaff:	cmp    bl,BYTE PTR [ebx+0x3e]
  41eb02:	in     eax,dx
  41eb03:	add    dh,bl
  41eb05:	mov    ah,BYTE PTR [esi-0x291f4508]
  41eb0b:	add    bl,0x2
  41eb0e:	cmovl  eax,DWORD PTR [eax]
  41eb11:	add    BYTE PTR [eax],al
  41eb13:	inc    esp
  41eb14:	je     0x41eafc
  41eb16:	add    BYTE PTR [esi],0x5f
  41eb19:	pop    edx
  41eb1a:	adc    DWORD PTR [esp+esi*2],esi
  41eb1d:	bound  eax,QWORD PTR [eax+eiz*4-0x37]
  41eb21:	adc    BYTE PTR [eax],cl
  41eb23:	js     0x41eaef
  41eb25:	jp     0x41eafb
  41eb27:	xchg   esp,eax
  41eb28:	inc    eax
  41eb29:	(bad)  
  41eb2a:	call   0xb83ef21f
  41eb2f:	cwde   
  41eb30:	xchg   ecx,eax
  41eb31:	or     al,0xe8
  41eb33:	lock mov bh,BYTE PTR [edi-0x7d803c2b]
  41eb3a:	xor    DWORD PTR [ecx+0x73],0x1873b9fc
  41eb41:	js     0x41eb1e
  41eb43:	mov    al,0x73
  41eb45:	dec    esp
  41eb46:	ins    BYTE PTR es:[edi],dx
  41eb47:	je     0x41eaf4
  41eb49:	std    
  41eb4a:	ss jb  0x41eb10
  41eb4d:	addr16 and dh,bh
  41eb50:	push   es
  41eb51:	add    BYTE PTR [esi],ah
  41eb53:	or     DWORD PTR [edi+0x76],ebx
  41eb56:	out    dx,al
  41eb57:	icebp  
  41eb58:	push   es
  41eb59:	test   BYTE PTR [ecx],ch
  41eb5b:	mov    ebx,0xa488fd
  41eb60:	dec    ebp
  41eb61:	jmp    edi
  41eb63:	pusha  
  41eb64:	je     0x41eb4f
  41eb66:	aam    0x6f
  41eb68:	cmp    DWORD PTR [ebx-0x2ff6301],eax
  41eb6e:	mov    bh,0x18
  41eb70:	inc    esp
  41eb71:	shl    bh,cl
  41eb73:	jae    0x41eb4e
  41eb75:	out    0xb3,eax
  41eb77:	add    BYTE PTR [eax],al
  41eb79:	add    BYTE PTR ds:0x2f1bfc72,ah
  41eb7f:	rcr    DWORD PTR [ebp+0x32],cl
  41eb82:	mov    eax,0xa0e90b45
  41eb87:	je     0x41eb47
  41eb89:	in     eax,0xf0
  41eb8b:	xlat   BYTE PTR ds:[ebx]
  41eb8c:	mov    ch,al
  41eb8e:	outs   dx,DWORD PTR ds:[esi]
  41eb8f:	pop    edi
  41eb90:	inc    edi
  41eb91:	sbb    ch,BYTE PTR [ecx]
  41eb93:	jle    0x41ebc7
  41eb95:	fldl2e 
  41eb97:	(bad)  
  41eb98:	push   DWORD PTR ds:0x1cfd034d
  41eb9e:	out    0x7f,eax
  41eba0:	inc    edx
  41eba1:	mov    ch,0x40
  41eba3:	jb     0x41eb7a
  41eba5:	add    BYTE PTR [ecx+0x166a08cb],bl
  41ebab:	test   BYTE PTR [ecx-0x1c],al
  41ebae:	cli    
  41ebaf:	loop   0x41eb36
  41ebb1:	(bad)  
  41ebb2:	pushf  
  41ebb3:	xchg   BYTE PTR [edi+0x65],bh
  41ebb6:	sahf   
  41ebb7:	pop    es
  41ebb8:	mov    DWORD PTR [ebp-0x52],eax
  41ebbb:	push   edi
  41ebbc:	in     al,0x83
  41ebbe:	push   ds
  41ebbf:	xchg   bl,bh
  41ebc1:	test   BYTE PTR [edx],bl
  41ebc3:	jns    0x41ebd3
  41ebc5:	lea    esp,[edi-0x61981b1e]
  41ebcb:	xchg   ebx,edi
  41ebcd:	mov    eax,0x639
  41ebd2:	xor    ebx,DWORD PTR [ecx-0x7e250003]
  41ebd8:	inc    ecx
  41ebd9:	aam    0x7a
  41ebdb:	fidivr WORD PTR [ecx-0x7e]
  41ebde:	add    BYTE PTR [eax],al
  41ebe0:	add    ch,bl
  41ebe2:	xchg   BYTE PTR [eax-0x76e37940],al
  41ebe8:	jne    0x41ebe8
  41ebea:	fld    QWORD PTR [esp+edi*2-0x63]
  41ebee:	repnz mov ah,0x92
  41ebf1:	mov    al,BYTE PTR [esi]
  41ebf3:	add    cl,ch
  41ebf5:	add    al,0x5
  41ebf7:	add    BYTE PTR [eax],al
  41ebf9:	sbb    DWORD PTR [eax-0x14],esp
  41ebfc:	add    BYTE PTR [edi],cl
  41ebfe:	inc    eax
  41ebff:	in     al,dx
  41ec00:	push   eax
  41ec01:	mov    dl,0x4c
  41ec03:	js     0x41ec04
  41ec05:	cmp    eax,0x5f75bc7f
  41ec0a:	xchg   edi,eax
  41ec0b:	jno    0x41ebfd
  41ec0d:	inc    edx
  41ec0e:	and    BYTE PTR [edi+edi*8-0x63],bh
  41ec12:	in     al,0x3b
  41ec14:	add    DWORD PTR [edx+0x6],ebx
  41ec17:	push   0x14
  41ec19:	mov    edi,0xcf50d03f
  41ec1e:	aas    
  41ec1f:	mov    esp,0x5598f350
  41ec24:	xor    BYTE PTR [edi],0x54
  41ec27:	push   0x7c8a2246
  41ec2c:	xchg   BYTE PTR [esi+0x1f428f33],dh
  41ec32:	adc    ah,ch
  41ec34:	xchg   esp,eax
  41ec35:	repz pop edi
  41ec37:	add    al,ch
  41ec39:	fwait
  41ec3a:	imul   edi,DWORD PTR [ebp-0x4],0x728ad068
  41ec41:	or     esp,ebx
  41ec43:	jne    0x41ec51
  41ec45:	add    BYTE PTR [eax],al
  41ec47:	add    BYTE PTR [edi+0x28],dh
  41ec4a:	add    al,0x0
  41ec4c:	repz hlt 
  41ec4e:	fdivrp st(3),st
  41ec50:	dec    ecx
  41ec51:	push   0x1c68d231
  41ec56:	fcomi  st,st(4)
  41ec58:	ret    0x51ea
  41ec5b:	or     al,0x6e
  41ec5d:	int3   
  41ec5e:	add    eax,DWORD PTR [eax]
  41ec60:	repz pop esp
  41ec62:	pop    edx
  41ec63:	xchg   DWORD PTR [esi],ebx
  41ec65:	gs mov ebp,edi
  41ec68:	call   0x72c2f979
  41ec6d:	pop    edi
  41ec6e:	add    BYTE PTR [eax],al
  41ec70:	outs   dx,BYTE PTR ds:[esi]
  41ec71:	test   eax,0x782e8718
  41ec76:	cmp    BYTE PTR [edx-0x8],0x5f
  41ec7a:	mul    DWORD PTR [ecx]
  41ec7c:	sbb    DWORD PTR [edi+ecx*4+0x42],esi
  41ec80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec81:	das    
  41ec82:	pop    DWORD PTR [edi+ebp*8+0x2f]
  41ec86:	jge    0x41ec9a
  41ec88:	das    
  41ec89:	jp     0x41ec4b
  41ec8b:	push   DWORD PTR [ecx-0x5d]
  41ec8e:	or     al,0x83
  41ec90:	xor    edi,DWORD PTR [edx]
  41ec92:	or     DWORD PTR [ecx+0x48bfbae],ecx
  41ec98:	xor    eax,0x59ff092a
  41ec9d:	push   es
  41ec9e:	sub    DWORD PTR [ebx-0x3fdbd209],ecx
  41eca4:	mov    edi,0x68d06203
  41eca9:	sbb    eax,0x849f
  41ecae:	add    BYTE PTR ds:0xf30cc086,bl
  41ecb4:	clc    
  41ecb5:	int3   
  41ecb6:	cmp    al,0xb8
  41ecb8:	outs   dx,BYTE PTR ds:[esi]
  41ecb9:	stc    
  41ecba:	pop    ds
  41ecbb:	jp     0x41ed02
  41ecbd:	ror    eax,0xfc
  41ecc0:	(bad)  
  41ecc2:	fsub   QWORD PTR [ebp+0x79]
  41ecc5:	pop    edi
  41ecc6:	jmp    0x6f61:0x7eb70e34
  41eccd:	mov    ch,0x7e
  41eccf:	add    DWORD PTR [edi],esi
  41ecd1:	ffree  st(3)
  41ecd3:	fadd   QWORD PTR [ebp+0xf490f22]
  41ecd9:	(bad)  
  41ecda:	sub    al,0x30
  41ecdc:	jnp    0x41ecdf
  41ecde:	pop    esp
  41ecdf:	sbb    ebp,DWORD PTR [edi-0x31]
  41ece2:	enter  0x84c4,0xa3
  41ece6:	jnp    0x41ecc4
  41ece8:	sub    DWORD PTR ds:0x986bea1b,0xffffff8a
  41ecef:	and    al,0xf2
  41ecf1:	icebp  
  41ecf2:	add    esp,DWORD PTR [eax]
  41ecf4:	enter  0xc86b,0x58
  41ecf8:	xlat   BYTE PTR ds:[ebx]
  41ecf9:	sbb    BYTE PTR [ebx],0x2a
  41ecfc:	sub    BYTE PTR [ebx+0x77],0x79
  41ed00:	retf   0x6cce
  41ed03:	xchg   edx,eax
  41ed04:	pop    ebx
  41ed05:	fdivr  QWORD PTR [ebp+0x71]
  41ed08:	inc    edi
  41ed09:	pop    ebx
  41ed0a:	outs   dx,BYTE PTR cs:[esi]
  41ed0c:	cli    
  41ed0d:	mov    esi,0xc45b246c
  41ed12:	jge    0x41ed14
  41ed14:	add    BYTE PTR [eax],al
  41ed16:	push   ebp
  41ed17:	ins    DWORD PTR es:[edi],dx
  41ed18:	mov    esp,0xffd9577d
  41ed1d:	rol    BYTE PTR [ebx+ebx*2],0xfd
  41ed21:	scas   al,BYTE PTR es:[edi]
  41ed22:	pop    ecx
  41ed23:	sbb    BYTE PTR [eax+0x39],bl
  41ed26:	push   0x2c6cf3c5
  41ed2b:	lods   al,BYTE PTR ds:[esi]
  41ed2c:	dec    edi
  41ed2d:	add    DWORD PTR [edx+0x7a8efd54],0x247f8260
  41ed37:	or     bh,ah
  41ed39:	mov    al,ds:0x62fc7295
  41ed3e:	add    al,0x68
  41ed40:	mov    BYTE PTR [ebx+ecx*4],ah
  41ed43:	fldenv [edi+0x7e]
  41ed46:	test   DWORD PTR [esi],0xf2c75100
  41ed4c:	cld    
  41ed4d:	push   esi
  41ed4e:	lds    edi,FWORD PTR [ebp-0x29]
  41ed51:	inc    ecx
  41ed52:	lock pop edx
  41ed54:	std    
  41ed55:	inc    esi
  41ed56:	ins    BYTE PTR es:[edi],dx
  41ed57:	hlt    
  41ed58:	out    dx,eax
  41ed59:	push   ecx
  41ed5a:	dec    esp
  41ed5b:	out    dx,al
  41ed5c:	cld    
  41ed5d:	ss jnp 0x41edae
  41ed60:	jb     0x41ed40
  41ed62:	jne    0x41ed58
  41ed64:	jmp    0x41ed77
  41ed66:	sbb    dh,ch
  41ed68:	cld    
  41ed69:	push   ds
  41ed6a:	ja     0x41ecec
  41ed6c:	(bad)  
  41ed6d:	call   0x5c4b4b62
  41ed72:	pushf  
  41ed73:	pop    ebx
  41ed74:	out    0x33,eax
  41ed76:	cdq    
  41ed77:	jb     0x41ed75
  41ed79:	mov    edx,0x30000000
  41ed7e:	rcr    DWORD PTR [ebp-0x6e],cl
  41ed81:	cmp    DWORD PTR [esi+0x3],eax
  41ed84:	jmp    0x692d6c26
  41ed89:	or     al,0xa8
  41ed8b:	add    ecx,ebp
  41ed8d:	lock aad 0x55
  41ed90:	ds jp  0x41edf2
  41ed93:	xor    dh,cl
  41ed95:	mov    BYTE PTR ds:[edx+0x0],bh
  41ed99:	call   0x8018:0x95fc717c
  41eda0:	adc    bl,BYTE PTR [edx]
  41eda2:	or     ecx,DWORD PTR [ecx+0x797c0c1c]
  41eda8:	clc    
  41eda9:	ret    
  41edaa:	jo     0x41ed9c
  41edac:	cmp    ebx,DWORD PTR [ecx+0x2]
  41edaf:	jg     0x41ed66
  41edb1:	sbb    al,BYTE PTR [ebx]
  41edb3:	add    BYTE PTR [ebx+0x458586cf],cl
  41edb9:	sbb    dh,0xc
  41edbc:	paddusw mm7,mm3
  41edbf:	jle    0x41edba
  41edc1:	adc    BYTE PTR [edi+0x8],dh
  41edc4:	add    DWORD PTR [ebx-0x76f88c00],0xffffffc3
  41edcb:	(bad)  
  41edcc:	cmp    cl,cl
  41edce:	jne    0x41edb8
  41edd0:	mov    eax,DWORD PTR [edx+0x1f]
  41edd3:	jns    0x41edd1
  41edd5:	sub    ebp,ebx
  41edd7:	aaa    
  41edd8:	ret    
  41edd9:	sahf   
  41edda:	adc    cl,BYTE PTR [ecx-0x38d037b8]
  41ede0:	jae    0x41ede2
  41ede2:	add    BYTE PTR [eax],al
  41ede4:	aam    0x64
  41ede6:	jg     0x41ee20
  41ede8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede9:	jne    0x41edef
  41edeb:	dec    cx
  41eded:	xor    DWORD PTR [edx],ecx
  41edef:	jne    0x41edb9
  41edf1:	jg     0x41edb0
  41edf3:	sbb    edx,0x7
  41edf6:	xchg   DWORD PTR [ebp+0x2],ecx
  41edf9:	jge    0x41ee03
  41edfb:	lea    ecx,[esi+0x700000a]
  41ee01:	jne    0x41edf3
  41ee03:	mov    DWORD PTR [edi-0x12],ebx
  41ee06:	in     al,0x91
  41ee08:	call   0x4ac6e9f8
  41ee0d:	ja     0x41ee59
  41ee0f:	test   DWORD PTR [ebp-0xc00ec89],edx
  41ee15:	retf   0x886b
  41ee18:	sub    al,0x48
  41ee1a:	out    0xc,eax
  41ee1c:	pop    esp
  41ee1d:	inc    ebp
  41ee1e:	mov    WORD PTR [edx+0x5f],cs
  41ee21:	stc    
  41ee22:	into   
  41ee23:	idiv   DWORD PTR [edx+0x5c]
  41ee26:	xchg   ebx,eax
  41ee27:	xor    BYTE PTR [ebx],0x34
  41ee2a:	xor    eax,0x8ca7b689
  41ee2f:	dec    edx
  41ee30:	aas    
  41ee31:	(bad)  
  41ee33:	jle    0x41eea5
  41ee35:	pop    eax
  41ee36:	add    BYTE PTR [esp+ebp*8-0x18],dh
  41ee3a:	xor    ebp,eax
  41ee3c:	xchg   esp,eax
  41ee3d:	dec    edi
  41ee3e:	jns    0x41ee3c
  41ee40:	adc    al,0x23
  41ee42:	jl     0x41ee7a
  41ee44:	scas   al,BYTE PTR es:[edi]
  41ee45:	repz or BYTE PTR [edx-0x69000000],al
  41ee4c:	fdivr  QWORD PTR [eax-0x4]
  41ee4f:	jo     0x41eeb4
  41ee51:	js     0x41ee4f
  41ee53:	jle    0x41ee5b
  41ee55:	inc    ecx
  41ee56:	inc    edx
  41ee57:	jecxz  0x41ee47
  41ee59:	add    eax,DWORD PTR [eax]
  41ee5b:	xrelease mov BYTE PTR [ebx],0xff
  41ee5f:	fcomp  QWORD PTR [edi-0x73]
  41ee62:	inc    edx
  41ee63:	fcmovnu st,st(2)
  41ee65:	div    bl
  41ee67:	fist   DWORD PTR [ecx+0x55]
  41ee6a:	std    
  41ee6b:	(bad)  
  41ee6c:	enter  0x3060,0xbc
  41ee70:	div    di
  41ee73:	in     al,0xe5
  41ee75:	push   esi
  41ee76:	jmp    FWORD PTR [edi+ebx*2+0x5ea74241]
  41ee7d:	add    BYTE PTR [eax],al
  41ee7f:	repz div dh
  41ee82:	jmp    0x41eeec
  41ee84:	mov    ds:0x43e886c,al
  41ee89:	cmp    edi,DWORD PTR [ebx+edi*8]
  41ee8c:	dec    esp
  41ee8d:	jl     0x41ee33
  41ee8f:	repz push es
  41ee91:	out    0x3,eax
  41ee93:	push   0x2
  41ee95:	out    dx,eax
  41ee96:	loope  0x41eebd
  41ee98:	das    
  41ee99:	out    0x7f,al
  41ee9b:	mov    eax,DWORD PTR [esi]
  41ee9d:	out    0x3,eax
  41ee9f:	ret    
  41eea0:	ins    DWORD PTR es:[edi],dx
  41eea1:	fild   DWORD PTR [ebx-0x711938fe]
  41eea7:	rcr    DWORD PTR [edx+0x61],0x4b
  41eeab:	jnp    0x41ee70
  41eead:	mov    dl,0x8e
  41eeaf:	add    BYTE PTR [eax],al
  41eeb1:	add    al,dh
  41eeb3:	add    al,0x74
  41eeb5:	ror    BYTE PTR [esi+ebx*2-0x75],1
  41eeb9:	adc    eax,0x5b616d2e
  41eebe:	jae    0x41ef31
  41eec0:	lea    ecx,[edx]
  41eec2:	ja     0x41ef3e
  41eec4:	out    0x3,al
  41eec6:	repz xor DWORD PTR [esi+0x61e4aff1],ebx
  41eecd:	dec    DWORD PTR [ecx]
  41eecf:	push   ds
  41eed0:	cld    
  41eed1:	ret    
  41eed2:	cld    
  41eed3:	jns    0x41ee70
  41eed5:	(bad)  
  41eed7:	ins    BYTE PTR es:[edi],dx
  41eed8:	pop    ebp
  41eed9:	imul   esi,DWORD PTR [edx+0x7a03e71e],0x45
  41eee0:	popa   
  41eee1:	lock aam 0xd7
  41eee4:	inc    ebp
  41eee5:	xor    esi,edx
  41eee7:	adc    dh,BYTE PTR [edi+0x15]
  41eeea:	xor    eax,DWORD PTR [edi]
  41eeec:	ins    BYTE PTR es:[edi],dx
  41eeed:	inc    ebx
  41eeee:	inc    eax
  41eeef:	jmp    DWORD PTR [ebp-0x66f0407a]
  41eef5:	push   eax
  41eef6:	retf   
  41eef7:	or     eax,0x3d7b5672
  41eefc:	adc    eax,0x7c1ba80f
  41ef01:	ret    
  41ef02:	pushf  
  41ef03:	mov    BYTE PTR [esi],ah
  41ef05:	lock out 0x7f,eax
  41ef08:	mov    ds:0xffba7b77,eax
  41ef0d:	loopne 0x41ef40
  41ef0f:	leave  
  41ef10:	out    dx,eax
  41ef11:	push   ebp
  41ef12:	lock push es
  41ef14:	add    BYTE PTR [eax+0x0],dh
  41ef17:	add    BYTE PTR [eax],al
  41ef19:	lock test esp,edi
  41ef1c:	add    DWORD PTR [ebx+edi*8-0x78],ebx
  41ef20:	sub    al,0xeb
  41ef22:	jle    0x41ef6e
  41ef24:	loope  0x41eed9
  41ef26:	enter  0x5cef,0xef
  41ef2a:	push   es
  41ef2b:	add    BYTE PTR [eax-0x10],dh
  41ef2e:	jge    0x41efaa
  41ef30:	shl    DWORD PTR [esi+0x47],0xe7
  41ef34:	pop    ds
  41ef35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef36:	imul   edi,esp,0xeff16e0f
  41ef3c:	jmp    0x9672fa5e
  41ef41:	outs   dx,BYTE PTR ds:[esi]
  41ef42:	leave  
  41ef43:	jmp    0x41ef2a
  41ef45:	fwait
  41ef46:	enter  0x72fb,0x54
  41ef4a:	jo     0x41ef93
  41ef4c:	ret    0x744d
  41ef4f:	or     al,0x6b
  41ef51:	shr    DWORD PTR [ecx-0x4],0x6e
  41ef55:	mov    es,WORD PTR [edx]
  41ef57:	lds    ebp,FWORD PTR [eax+eax*4-0xf170084]
  41ef5e:	jge    0x41efa2
  41ef60:	push   ecx
  41ef61:	jbe    0x41ef53
  41ef63:	repz inc ecx
  41ef65:	add    al,0x59
  41ef67:	std    
  41ef68:	inc    esi
  41ef69:	sar    DWORD PTR [esi+0x42],1
  41ef6c:	cmp    DWORD PTR [edx+0x2d2058c9],ebp
  41ef72:	or     BYTE PTR [eax],al
  41ef74:	xchg   esp,eax
  41ef75:	outs   dx,DWORD PTR ds:[esi]
  41ef76:	pop    edi
  41ef77:	or     BYTE PTR ds:0x85eb8737,0x0
  41ef7e:	add    BYTE PTR [eax],al
  41ef80:	(bad)  
  41ef81:	rcl    DWORD PTR [ebx+eax*4-0x12],1
  41ef85:	ficom  WORD PTR [esi-0x18798db6]
  41ef8b:	add    BYTE PTR [ebp-0x32],dh
  41ef8e:	cli    
  41ef8f:	dec    DWORD PTR [ecx-0x12]
  41ef92:	test   DWORD PTR [esi+esi*4+0xf],eax
  41ef96:	aaa    
  41ef97:	mov    DWORD PTR [edi],0xcac02f00
  41ef9d:	(bad)  
  41ef9f:	add    DWORD PTR [edx+0x7],ebx
  41efa2:	das    
  41efa3:	ror    bh,0x5b
  41efa6:	and    BYTE PTR [eax-0x2d],al
  41efa9:	xor    al,0x38
  41efab:	mov    eax,0x93e80309
  41efb0:	push   eax
  41efb1:	out    dx,al
  41efb2:	sti    
  41efb3:	mov    eax,DWORD PTR [edi]
  41efb5:	sti    
  41efb6:	mov    BYTE PTR [esi+esi*8+0xe],al
  41efba:	test   DWORD PTR [esi+eiz*1+0x33],eax
  41efbe:	das    
  41efbf:	shl    BYTE PTR [ecx+0x3644c3bd],0x13
  41efc6:	les    edi,FWORD PTR [eax-0x36]
  41efc9:	add    al,bl
  41efcb:	inc    esp
  41efcc:	es and ebp,esp
  41efcf:	mov    edx,ebx
  41efd1:	add    ch,al
  41efd3:	call   0xe941f7e9
  41efd8:	int3   
  41efd9:	pop    es
  41efda:	add    BYTE PTR [eax],al
  41efdc:	mov    DWORD PTR [edx+0x8],ebp
  41efdf:	adc    ch,bl
  41efe1:	mov    BYTE PTR [edx+0x0],ah
  41efe7:	fiadd  DWORD PTR [esi]
  41efe9:	push   esi
  41efea:	mov    edi,DWORD PTR [ecx]
  41efec:	fisubr WORD PTR [esi]
  41efee:	or     al,0xcb
  41eff0:	push   es
  41eff1:	xchg   eax,edi
  41eff3:	push   edi
  41eff4:	out    dx,eax
  41eff5:	or     eax,DWORD PTR [esi+eiz*1+0x65000006]
  41effc:	fidiv  WORD PTR [eax+0x7fef0dfb]
  41f002:	dec    esp
  41f003:	mov    dh,0x16
  41f005:	sti    
  41f006:	psllq  mm1,mm0
  41f009:	jo     0x41f070
  41f00b:	jbe    0x41f01f
  41f00d:	out    dx,al
  41f00e:	ss push 0x3c8b049d
  41f014:	push   eax
  41f015:	rol    DWORD PTR [eax-0x1917af65],1
  41f01b:	jle    0x41f07d
  41f01d:	add    al,ch
  41f01f:	mov    ds:0x7afc7575,al
  41f024:	and    al,0x20
  41f026:	adc    al,0x6e
  41f028:	mov    al,ds:0xef9d04ee
  41f02d:	add    eax,DWORD PTR [eax]
  41f02f:	repz push esp
  41f031:	push   es
  41f032:	mov    edi,DWORD PTR [edi+0x5b4f1403]
  41f038:	mov    edi,0x493cfc76
  41f03d:	lods   eax,DWORD PTR ds:[esi]
  41f03e:	out    dx,eax
  41f03f:	xor    al,0xc
  41f041:	and    BYTE PTR [ebx+ebx*1],dl
  41f044:	push   esi
  41f045:	push   ebx
  41f046:	std    
  41f047:	and    al,0xe5
  41f049:	mov    edi,0x23
  41f04e:	add    eax,DWORD PTR [edx]
  41f050:	mov    esi,DWORD PTR [ebx-0x31]
  41f053:	aas    
  41f054:	mov    eax,DWORD PTR [ebx-0x29]
  41f057:	inc    ebx
  41f058:	mov    edi,DWORD PTR [ebx-0x31]
  41f05b:	inc    edi
  41f05c:	cmp    al,BYTE PTR [ebx-0x29]
  41f05f:	dec    eax
  41f060:	add    BYTE PTR [edx-0xd],ch
  41f063:	push   ebp
  41f064:	add    ecx,DWORD PTR [ebx+0x4fcc0437]
  41f06a:	jbe    0x41f0b7
  41f06c:	sbb    al,0x38
  41f06e:	retf   
  41f06f:	ret    0x28
  41f072:	repz fild DWORD PTR [ebx+0x72]
  41f076:	in     eax,0x57
  41f078:	mov    BYTE PTR [eax],dl
  41f07a:	repz pop edi
  41f07c:	jne    0x41f090
  41f07e:	stos   DWORD PTR es:[edi],eax
  41f07f:	dec    ebp
  41f080:	sar    bh,0xb6
  41f083:	push   es
  41f084:	stos   DWORD PTR es:[edi],eax
  41f085:	pop    ds
  41f086:	inc    BYTE PTR [esi+0x4f61f9a]
  41f08c:	cdq    
  41f08d:	dec    edi
  41f08e:	inc    edi
  41f08f:	pop    edi
  41f090:	or     BYTE PTR [esi+edx*4+0x69],dl
  41f094:	jno    0x41f087
  41f096:	hlt    
  41f097:	jge    0x41f0c2
  41f099:	mov    esi,DWORD PTR [esi+0x7c0acd5e]
  41f09f:	imul   edi,DWORD PTR [ecx+0x214e6b76],0x1e83ff57
  41f0a9:	ja     0x41f112
  41f0ab:	imul   edx,DWORD PTR [ecx],0xcdfbe06f
  41f0b1:	sub    eax,0x4b000000
  41f0b6:	test   eax,0xd04f7596
  41f0bb:	into   
  41f0bc:	mov    esp,0xa3b56834
  41f0c1:	add    al,0xaf
  41f0c3:	sub    DWORD PTR [ebx+ecx*4],eax
  41f0c6:	push   ss
  41f0c7:	sbb    ebx,ebp
  41f0c9:	jns    0x41f08d
  41f0cb:	ret    0xc313
  41f0ce:	jg     0x41f0e2
  41f0d0:	and    BYTE PTR [edi],al
  41f0d2:	pop    edi
  41f0d3:	ins    BYTE PTR es:[edi],dx
  41f0d4:	out    dx,al
  41f0d5:	pop    ss
  41f0d6:	imul   ebp,DWORD PTR [edx+0x43],0x1b8f2a80
  41f0dd:	mov    ch,BYTE PTR [ecx+0x75]
  41f0e0:	xor    BYTE PTR [esi+eiz*1],0x60
  41f0e4:	mov    edi,0xbf7412d0
  41f0e9:	adc    BYTE PTR [ebx],dl
  41f0eb:	mov    bh,0xe9
  41f0ed:	in     eax,0xde
  41f0ef:	jmp    0xd776:0xcea5d4db
  41f0f6:	push   0x5ee31fba
  41f0fb:	js     0x41f101
  41f0fd:	les    ebp,FWORD PTR [eax-0x1]
  41f100:	imul   ebp,ebx,0xf0aaac26
  41f106:	push   ss
  41f107:	push   0x8006f0e9
  41f10c:	xchg   ebx,eax
  41f10d:	hlt    
  41f10e:	jg     0x41f18b
  41f110:	int    0xf8
  41f112:	imul   edx,DWORD PTR [edx],0xffc6e45d
  41f118:	jae    0x41f11a
  41f11a:	add    BYTE PTR [eax],al
  41f11c:	pushf  
  41f11d:	and    al,0x10
  41f11f:	adc    DWORD PTR [ebx+0xaf6fcf3],esi
  41f125:	mov    esi,0xfe84e1a7
  41f12a:	out    0x5a,eax
  41f12c:	std    
  41f12d:	addr16 cld 
  41f12f:	mov    DWORD PTR [edi],esp
  41f131:	scas   eax,DWORD PTR es:[edi]
  41f132:	inc    eax
  41f133:	jmp    0x6b5f8c0
  41f138:	inc    edi
  41f139:	nop
  41f13a:	ja     0x41f165
  41f13c:	neg    DWORD PTR [esi+0x6c]
  41f13f:	scas   al,BYTE PTR es:[edi]
  41f140:	mov    esi,0x78f19e6a
  41f145:	(bad)  
  41f146:	inc    DWORD PTR [eax-0x11]
  41f149:	push   es
  41f14a:	add    BYTE PTR [ecx-0x40],ch
  41f14d:	pop    edi
  41f14e:	or     BYTE PTR [ecx-0x17962910],0x2f
  41f155:	rcl    DWORD PTR [esi+ecx*4-0x1c],cl
  41f159:	(bad)  
  41f15a:	movaps xmm7,xmm6
  41f15d:	pop    ebp
  41f15e:	push   cs
  41f15f:	push   ecx
  41f160:	repz repnz or al,BYTE PTR [ecx]
  41f164:	test   DWORD PTR [esi],0x14096900
  41f16a:	std    
  41f16b:	cld    
  41f16c:	je     0x41f181
  41f16e:	inc    eax
  41f16f:	jmp    0xf165e5d3
  41f174:	dec    eax
  41f175:	sub    al,0xff
  41f177:	out    0xf0,eax
  41f179:	jnp    0x41f1be
  41f17b:	add    dh,bh
  41f17d:	dec    edx
  41f17e:	dec    esp
  41f17f:	mov    DWORD PTR [eax],0x78e0000
  41f185:	xor    ah,ch
  41f187:	push   ebx
  41f188:	inc    ebx
  41f189:	cld    
  41f18a:	(bad)  
  41f18b:	lahf   
  41f18c:	fisttp DWORD PTR [esi]
  41f18e:	inc    eax
  41f18f:	call   0x874e:0x645fc036
  41f196:	in     eax,0x67
  41f198:	lds    eax,FWORD PTR [eax]
  41f19a:	add    BYTE PTR [esi+edi*2-0x14],bl
  41f19e:	push   edi
  41f19f:	dec    ecx
  41f1a0:	ret    
  41f1a1:	xchg   esi,ecx
  41f1a3:	dec    ecx
  41f1a4:	repnz in al,0x28
  41f1a7:	nop
  41f1a8:	add    al,0x0
  41f1aa:	test   edx,ecx
  41f1ac:	jbe    0x41f215
  41f1ae:	mov    esp,DWORD PTR [edx+ebp*4+0x4601ce4]
  41f1b5:	add    BYTE PTR [ebp-0x7a0fa776],al
  41f1bb:	and    eax,0x5c8b5757
  41f1c0:	repnz ins BYTE PTR es:[edi],dx
  41f1c2:	adc    al,0xea
  41f1c4:	fisub  DWORD PTR [edx]
  41f1c6:	rol    BYTE PTR [edx+esi*8-0x26300f79],1
  41f1cd:	jo     0x41f1f1
  41f1cf:	add    BYTE PTR [edi],al
  41f1d1:	call   0xfc334761
  41f1d6:	test   DWORD PTR [edx+0x57],ecx
  41f1d9:	add    DWORD PTR [ebx+0x2e7032a],eax
  41f1df:	dec    ecx
  41f1e0:	ret    
  41f1e1:	add    eax,0x308568fe
  41f1e7:	add    BYTE PTR [eax],al
  41f1e9:	add    BYTE PTR [ecx-0x23f7180d],dl
  41f1ef:	fimul  DWORD PTR [edi+ecx*8-0x9d024ac]
  41f1f6:	pushf  
  41f1f7:	jb     0x41f269
  41f1f9:	int    0xf3
  41f1fb:	scas   al,BYTE PTR es:[edi]
  41f1fc:	add    BYTE PTR [edx-0xd],ch
  41f1ff:	(bad)  
  41f200:	sub    dl,dl
  41f202:	int3   
  41f203:	int    0x7d
  41f205:	mov    edi,0xf57d3b3e
  41f20a:	inc    edi
  41f20b:	imul   esi,DWORD PTR [ebx+0x35],0xffffffcb
  41f20f:	mov    ds:0xa6acfd43,al
  41f214:	push   0x7406b46b
  41f219:	xor    DWORD PTR [ebx-0xd5000f7],esi
  41f21f:	mov    ah,0xd2
  41f221:	shl    BYTE PTR [esi],0xd9
  41f224:	adc    BYTE PTR fs:[edi-0xd9630c0],0x84
  41f22c:	jae    0x41f240
  41f22e:	pop    ds
  41f22f:	inc    eax
  41f230:	sar    bh,0x77
  41f233:	mov    al,0xf7
  41f235:	jbe    0x41f257
  41f237:	dec    ecx
  41f238:	aam    0x50
  41f23a:	leave  
  41f23b:	outs   dx,BYTE PTR ds:[esi]
  41f23c:	frndint 
  41f23e:	(bad)  
  41f23f:	pop    ss
  41f240:	adc    al,0x40
  41f242:	repz repnz inc ebx
  41f245:	jae    0x41f222
  41f247:	add    BYTE PTR [edi+0x42],bh
  41f24a:	aas    
  41f24b:	add    dh,bl
  41f24d:	inc    BYTE PTR [eax]
  41f24f:	add    BYTE PTR [eax],al
  41f251:	int3   
  41f252:	sub    ebx,0x3f
  41f255:	rep lods al,BYTE PTR ds:[esi]
  41f257:	push   ss
  41f258:	pop    esp
  41f259:	add    esi,DWORD PTR [eax]
  41f25b:	add    al,0x83
  41f25d:	xor    eax,DWORD PTR [ebx+ebp*1]
  41f260:	mov    ebp,DWORD PTR [esi-0x49752c85]
  41f266:	xchg   ebx,edx
  41f268:	mov    ch,BYTE PTR [esi-0x79032c21]
  41f26e:	fstp   TBYTE PTR [edx+0x5a]
  41f271:	sti    
  41f272:	hlt    
  41f273:	push   ss
  41f274:	pusha  
  41f275:	add    eax,DWORD PTR [edi]
  41f277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f278:	add    esi,DWORD PTR [eax+0x46]
  41f27b:	rcl    BYTE PTR [edi],cl
  41f27d:	(bad)  
  41f27f:	pop    edx
  41f280:	jae    0x41f2e3
  41f282:	pop    edi
  41f283:	dec    ebp
  41f284:	stc    
  41f285:	fdivr  QWORD PTR [ebp-0x8b0e6bb]
  41f28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f28c:	add    esi,DWORD PTR [eax+0x46]
  41f28f:	mov    ebx,0x2adbb600
  41f294:	jae    0x41f297
  41f296:	jg     0x41f290
  41f298:	ret    
  41f299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f29a:	mov    BYTE PTR [ebx+0x1a219f6f],ch
  41f2a0:	clc    
  41f2a1:	call   0x8d41d6f3
  41f2a6:	gs out 0x7c,al
  41f2a9:	push   es
  41f2aa:	or     esi,DWORD PTR [eax-0x2e]
  41f2ad:	hlt    
  41f2ae:	xchg   ecx,eax
  41f2af:	stos   DWORD PTR es:[edi],eax
  41f2b0:	outs   dx,DWORD PTR ds:[esi]
  41f2b1:	mov    ecx,DWORD PTR [eax]
  41f2b3:	mov    edx,0x43
  41f2b8:	retf   
  41f2b9:	dec    edi
  41f2ba:	test   eax,0x37727bd8
  41f2bf:	fisubr DWORD PTR [ebx+0x1b]
  41f2c2:	pop    ss
  41f2c3:	adc    al,0xb3
  41f2c5:	push   es
  41f2c6:	xor    DWORD PTR ss:[ecx+0x44de1662],0x3ddde6ef
  41f2d1:	fs cmp edi,esp
  41f2d4:	aaa    
  41f2d5:	cmp    al,0x63
  41f2d7:	inc    ebx
  41f2d8:	mov    eax,ds:0xb18a620
  41f2dd:	clc    
  41f2de:	es add al,0x72
  41f2e1:	pop    esi
  41f2e2:	adc    cl,bh
  41f2e4:	(bad)  
  41f2e5:	xchg   ecx,eax
  41f2e6:	and    esi,DWORD PTR [eax+0x71]
  41f2e9:	inc    esi
  41f2ea:	cli    
  41f2eb:	sbb    ebx,DWORD PTR [ebx]
  41f2ed:	out    dx,al
  41f2ee:	lods   al,BYTE PTR ds:[esi]
  41f2ef:	jno    0x41f2f0
  41f2f1:	nop
  41f2f2:	push   DWORD PTR [eax+0x6b]
  41f2f5:	bound  esi,QWORD PTR [ebx-0x34]
  41f2f8:	jae    0x41f2c3
  41f2fa:	sti    
  41f2fb:	mov    ecx,0xb6fbd961
  41f300:	mov    esi,0xd8dcfd65
  41f305:	arpl   bp,dx
  41f307:	fs xor al,bl
  41f30a:	add    esi,DWORD PTR [edx+0x39]
  41f30d:	outs   dx,DWORD PTR ds:[esi]
  41f30e:	pop    es
  41f30f:	xchg   esi,eax
  41f310:	sbb    ah,bl
  41f312:	int    0x37
  41f314:	inc    ecx
  41f315:	pop    ss
  41f316:	ror    BYTE PTR [esi-0x123eb23e],0x0
  41f31d:	add    BYTE PTR [eax],al
  41f31f:	lock mov esp,0x28a4570c
  41f325:	or     BYTE PTR [esi-0x1e4f5f8d],bh
  41f32b:	test   DWORD PTR [esi],0x87f17200
  41f331:	(bad)  
  41f332:	jne    0x41f31e
  41f334:	(bad)  
  41f335:	inc    BYTE PTR [edx+0x6a0f61ef]
  41f33b:	sbb    DWORD PTR [edi],eax
  41f33d:	xor    DWORD PTR [ecx+0x6586ea42],ebp
  41f343:	data16 cld 
  41f345:	(bad)  
  41f346:	call   0xe603b83b
  41f34b:	lock mov bh,0x88
  41f34e:	aad    0x70
  41f350:	jo     0x41f349
  41f352:	jmp    0x1f92fa47
  41f357:	sbb    dl,BYTE PTR [ecx+0x4a478142]
  41f35d:	inc    edx
  41f35e:	mov    ds:0x20716eef,al
  41f363:	mov    ds:0xb31c8a62,al
  41f368:	imul   edx,ecx,0x74
  41f36b:	test   DWORD PTR [esi],0xbef70081
  41f371:	cld    
  41f372:	mov    bl,BYTE PTR [esi+ecx*8+0x41]
  41f376:	int3   
  41f377:	sub    ah,ah
  41f379:	cmp    al,0x0
  41f37b:	jb     0x41f317
  41f37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f37e:	add    dl,bl
  41f380:	loop   0x41f3db
  41f382:	or     BYTE PTR [eax],al
  41f384:	add    BYTE PTR [eax],al
  41f386:	dec    edi
  41f387:	mov    dl,BYTE PTR [ecx+eax*1]
  41f38a:	retf   0x8507
  41f38d:	inc    ebp
  41f38e:	cmp    ah,ah
  41f390:	jg     0x41f39a
  41f392:	fild   DWORD PTR [edi]
  41f394:	add    dh,al
  41f396:	xchg   edi,eax
  41f397:	ret    
  41f398:	cld    
  41f399:	mov    BYTE PTR [edi+0x5a6d05db],0x7
  41f3a0:	test   DWORD PTR [ebp-0x2a],eax
  41f3a3:	fild   WORD PTR [ecx-0x18]
  41f3a6:	and    DWORD PTR [esp+eiz*8-0x75],ecx
  41f3aa:	mov    edx,0x11f441e2
  41f3af:	jae    0x41f3b0
  41f3b1:	mov    WORD PTR [esi+0x34],gs
  41f3b4:	test   al,0x89
  41f3b6:	call   edi
  41f3b8:	xor    esi,0x45894af6
  41f3be:	idiv   BYTE PTR [edx]
  41f3c0:	mov    DWORD PTR [ebp-0x5e],eax
  41f3c3:	aaa    
  41f3c4:	or     BYTE PTR fs:[edx+0x7],bl
  41f3c8:	add    BYTE PTR [eax+0x3d],ch
  41f3cb:	(bad)  
  41f3cc:	cld    
  41f3cd:	(bad)  
  41f3ce:	cmp    eax,0x17c7005d
  41f3d3:	out    dx,eax
  41f3d4:	add    BYTE PTR [eax],al
  41f3d6:	dec    edx
  41f3d7:	pop    es
  41f3d8:	sti    
  41f3d9:	adc    eax,0x3ffc8e
  41f3de:	xchg   edi,eax
  41f3df:	(bad)  
  41f3e0:	jno    0x41f3f7
  41f3e2:	lahf   
  41f3e3:	dec    esp
  41f3e4:	les    edx,FWORD PTR [eax+0x7d]
  41f3e7:	pop    ebp
  41f3e8:	add    al,0xff
  41f3ea:	add    BYTE PTR [eax],al
  41f3ec:	add    bl,dh
  41f3ee:	bound  eax,QWORD PTR [edi+ecx*1]
  41f3f1:	mov    bl,0x6d
  41f3f3:	test   DWORD PTR [edi-0x19a0d0c],edi
  41f3f9:	cld    
  41f3fa:	ins    BYTE PTR es:[edi],dx
  41f3fb:	outs   dx,DWORD PTR ds:[esi]
  41f3fc:	jb     0x41f405
  41f3fe:	test   DWORD PTR ds:0x7bf1ecfd,esp
  41f404:	inc    edx
  41f405:	fistp  WORD PTR [ecx-0x4a]
  41f408:	aas    
  41f409:	fsub   QWORD PTR [eax-0x46b803a8]
  41f40f:	outs   dx,DWORD PTR ds:[esi]
  41f410:	xor    DWORD PTR [ebx+0x7066083b],0x9
  41f417:	add    al,0xd
  41f419:	ja     0x41f449
  41f41b:	add    al,BYTE PTR [eax]
  41f41d:	repz pop esp
  41f41f:	inc    eax
  41f420:	gs jp  0x41f48c
  41f423:	inc    esi
  41f424:	inc    edx
  41f425:	test   al,0x6f
  41f427:	pop    ecx
  41f428:	mov    bl,0xf2
  41f42a:	outs   dx,DWORD PTR ds:[esi]
  41f42b:	add    BYTE PTR [edx-0x1],ch
  41f42e:	pop    es
  41f42f:	(bad)  
  41f430:	retf   0x118d
  41f433:	xchg   BYTE PTR [edi+0x4a7b40ff],bh
  41f439:	xchg   DWORD PTR [ecx-0x4a],esi
  41f43c:	push   cs
  41f43d:	in     al,0x21
  41f43f:	mov    edx,0x7b7ec1fc
  41f444:	out    dx,eax
  41f445:	pop    ebx
  41f446:	in     al,0xe7
  41f448:	cld    
  41f449:	pop    esp
  41f44a:	aad    0x73
  41f44c:	call   0x82b7f142
  41f451:	add    BYTE PTR [eax],al
  41f453:	add    BYTE PTR [ebp+0x41],al
  41f456:	test   BYTE PTR [edi-0x76ff900e],al
  41f45c:	mov    esi,0x3942457b
  41f461:	jo     0x41f3ea
  41f463:	cld    
  41f464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f465:	add    al,0x79
  41f467:	add    al,0x76
  41f469:	pop    es
  41f46a:	xor    al,0x50
  41f46c:	lods   eax,DWORD PTR ds:[esi]
  41f46d:	mov    ecx,0x8bc4d49d
  41f472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f473:	stc    
  41f474:	jmp    0x29335e61
  41f479:	(bad)  
  41f47a:	cmc    
  41f47b:	xchg   edi,eax
  41f47c:	cmp    al,0x8b
  41f47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f47f:	stc    
  41f480:	in     eax,0x8d
  41f482:	in     eax,dx
  41f483:	(bad)  
  41f485:	mov    ecx,0x5a20d46d
  41f48a:	or     dh,BYTE PTR ds:[ebx+0x317c2660]
  41f491:	pop    ebp
  41f492:	popa   
  41f493:	leave  
  41f494:	fcom   QWORD PTR [ecx]
  41f496:	xchg   esi,eax
  41f497:	or     al,0x8b
  41f499:	test   BYTE PTR ds:0x1e8f304,0x4c
  41f4a0:	inc    edx
  41f4a1:	iret   
  41f4a2:	outs   dx,BYTE PTR ds:[esi]
  41f4a3:	xor    al,0x20
  41f4a5:	pop    es
  41f4a6:	out    0xe5,eax
  41f4a8:	jmp    0x41f4e8
  41f4aa:	popf   
  41f4ab:	sub    eax,0x896be109
  41f4b0:	out    0x61,al
  41f4b2:	adc    eax,0xb7071a6f
  41f4b7:	pop    ebx
  41f4b8:	add    BYTE PTR [eax],al
  41f4ba:	add    BYTE PTR [esi+0x6903e82d],dl
  41f4c0:	enter  0x82ea,0xb0
  41f4c4:	adc    bh,bh
  41f4c6:	fcmovnbe st,st(6)
  41f4c8:	popa   
  41f4c9:	in     eax,dx
  41f4ca:	in     eax,0xa5
  41f4cc:	inc    ebp
  41f4cd:	out    dx,al
  41f4ce:	in     eax,0x75
  41f4d0:	mov    ebp,edx
  41f4d2:	outs   dx,BYTE PTR ds:[esi]
  41f4d3:	push   edi
  41f4d4:	popa   
  41f4d5:	dec    esp
  41f4d6:	jge    0x41f541
  41f4d8:	adc    dh,cl
  41f4da:	outs   dx,BYTE PTR ds:[esi]
  41f4db:	inc    edi
  41f4dc:	xchg   ebx,eax
  41f4dd:	arpl   di,di
  41f4df:	aas    
  41f4e0:	popa   
  41f4e1:	mov    ebp,0xff6e2e7a
  41f4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e7:	adc    eax,0xb065fc62
  41f4ec:	aam    0x4e
  41f4ee:	aas    
  41f4ef:	mov    edi,0x859e67c9
  41f4f4:	test   DWORD PTR [edi+0x58ff21c],edi
  41f4fa:	add    ebp,esi
  41f4fc:	(bad)  
  41f4fd:	int    0x86
  41f4ff:	loopne 0x41f56a
  41f501:	fucomip st,st(1)
  41f503:	lock push es
  41f505:	mov    ebp,DWORD PTR [esp+ebp*8+0x63]
  41f509:	cld    
  41f50a:	outs   dx,BYTE PTR ds:[esi]
  41f50b:	rcl    BYTE PTR [edi],0xd9
  41f50e:	push   ecx
  41f50f:	loop   0x41f4fb
  41f511:	cld    
  41f512:	pop    esi
  41f513:	ins    BYTE PTR es:[edi],dx
  41f514:	mov    al,ds:0x9bcdf773
  41f519:	sbb    ch,0x55
  41f51c:	arpl   sp,di
  41f51e:	mov    cl,0x0
  41f520:	add    BYTE PTR [eax],al
  41f522:	js     0x41f4f8
  41f524:	add    ch,BYTE PTR [edx+0x18]
  41f527:	cmc    
  41f528:	jb     0x41f518
  41f52a:	lods   eax,DWORD PTR ds:[esi]
  41f52b:	fwait
  41f52c:	call   0x378f:0xfc6315df
  41f533:	inc    edi
  41f534:	pop    es
  41f535:	out    dx,al
  41f536:	pop    ebp
  41f537:	aas    
  41f538:	mov    BYTE PTR [eax+eax*1+0x2ef186ea],ch
  41f53f:	(bad)  
  41f542:	stc    
  41f543:	(bad)  
  41f544:	out    0x72,eax
  41f546:	mov    bl,0x40
  41f548:	xchg   BYTE PTR [ecx-0x78103b17],bh
  41f54e:	jmp    0xf0b257b2
  41f553:	cmp    esp,0xffffffee
  41f556:	ins    BYTE PTR es:[edi],dx
  41f557:	(bad)  
  41f558:	(bad)  
  41f559:	call   0x5c46834e
  41f55e:	test   BYTE PTR [eax],bh
  41f560:	dec    esi
  41f561:	add    ch,bl
  41f563:	icebp  
  41f564:	dec    esp
  41f565:	sub    bh,cl
  41f567:	retf   0x1471
  41f56a:	mov    esp,0x55d87985
  41f56f:	bound  edx,QWORD PTR [eax+0x710516c0]
  41f575:	or     BYTE PTR [ecx-0x32ff95f7],ah
  41f57b:	icebp  
  41f57c:	dec    esp
  41f57d:	sub    al,0x91
  41f57f:	inc    edi
  41f580:	lock bsf ecx,DWORD PTR [edx]
  41f584:	dec    eax
  41f585:	je     0x41f587
  41f587:	add    BYTE PTR [eax],al
  41f589:	add    al,0x9c
  41f58b:	jno    0x41f5de
  41f58d:	lock pusha 
  41f58f:	ret    
  41f590:	inc    ebp
  41f591:	outs   dx,BYTE PTR ds:[esi]
  41f592:	repz (bad) 
  41f594:	dec    edx
  41f596:	mov    esi,0xcac76a05
  41f59b:	inc    ecx
  41f59c:	in     al,0xdc
  41f59e:	add    eax,DWORD PTR [eax]
  41f5a0:	add    BYTE PTR [edx+0x22b471e0],al
  41f5a6:	sbb    bl,BYTE PTR [edi]
  41f5a8:	add    dl,cl
  41f5aa:	fiadd  WORD PTR [ecx-0x10]
  41f5ad:	xchg   ebp,eax
  41f5ae:	call   0x6a4c:0xc9114ffc
  41f5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b6:	dec    esi
  41f5b7:	mov    DWORD PTR [ebp+0x1a],edi
  41f5ba:	ret    
  41f5bb:	ror    DWORD PTR [edi],0xe5
  41f5be:	icebp  
  41f5bf:	push   ebp
  41f5c0:	pop    ecx
  41f5c1:	bswap  ebx
  41f5c3:	jp     0x41f5db
  41f5c5:	cmc    
  41f5c6:	push   edi
  41f5c7:	loopne 0x41f554
  41f5c9:	dec    edi
  41f5ca:	ror    DWORD PTR [ebx],cl
  41f5cc:	mov    bh,0x5a
  41f5ce:	xor    eax,DWORD PTR [edi+0x41e08ac7]
  41f5d4:	int3   
  41f5d5:	sbb    al,bl
  41f5d7:	outs   dx,DWORD PTR ds:[esi]
  41f5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d9:	dec    edx
  41f5da:	add    eax,DWORD PTR [edi-0x7f5e0c83]
  41f5e0:	jp     0x41f62b
  41f5e2:	ins    DWORD PTR es:[edi],dx
  41f5e3:	hlt    
  41f5e4:	pop    es
  41f5e5:	push   0x9dffd670
  41f5ea:	mov    al,ds:0x33d0
  41f5ef:	add    BYTE PTR [eax-0x6],bh
  41f5f2:	sti    
  41f5f3:	std    
  41f5f4:	scas   al,BYTE PTR es:[edi]
  41f5f5:	mov    eax,ds:0x710b427f
  41f5fa:	jg     0x41f63e
  41f5fc:	adc    ebp,DWORD PTR [ebx+0x7f]
  41f5ff:	inc    edx
  41f600:	pop    es
  41f601:	cmp    BYTE PTR gs:[edx+0x17],0x69
  41f606:	sti    
  41f607:	add    DWORD PTR [edx-0x76],0x2a68fc6b
  41f60e:	pop    eax
  41f60f:	xor    BYTE PTR [ebx-0x47709a4],0xff
  41f616:	push   0x4e
  41f618:	jmp    0x41f60a
  41f61a:	in     eax,0xd3
  41f61c:	repz fdivr DWORD PTR [edi-0x75]
  41f620:	repnz outs dx,DWORD PTR ds:[esi]
  41f622:	add    BYTE PTR [edi+0x11070],al
  41f628:	repz fdivr DWORD PTR [edi]
  41f62b:	lds    esi,FWORD PTR [eax+0x8]
  41f62e:	add    DWORD PTR [eax],eax
  41f630:	rep outs dx,BYTE PTR ds:[esi]
  41f632:	pop    eax
  41f633:	jp     0x41f628
  41f635:	outs   dx,DWORD PTR ds:[esi]
  41f636:	add    BYTE PTR [ebx+esi*4+0x5d0d067c],al
  41f63d:	icebp  
  41f63e:	sub    bh,bh
  41f640:	mov    WORD PTR [eax+0x77],?
  41f643:	mov    BYTE PTR [edi],ah
  41f645:	outs   dx,DWORD PTR ds:[esi]
  41f646:	add    BYTE PTR [eax],al
  41f648:	push   0xffffffd4
  41f64a:	jg     0x41f66b
  41f64c:	repnz outs dx,DWORD PTR ds:[esi]
  41f64e:	add    dh,bh
  41f650:	jo     0x41f5ea
  41f652:	add    DWORD PTR [eax],eax
  41f654:	add    BYTE PTR [eax],al
  41f656:	add    bl,dh
  41f658:	call   0x70bba1a
  41f65d:	jmp    0x41f62c
  41f65f:	imul   ecx,DWORD PTR [eax],0x64
  41f662:	inc    esp
  41f663:	shl    ch,0xe5
  41f666:	mov    cl,0x83
  41f668:	pop    ds
  41f669:	call   0x26d3e971
  41f66e:	cld    
  41f66f:	ins    DWORD PTR es:[edi],dx
  41f670:	cmp    DWORD PTR [ecx+0x24],0x2c
  41f674:	pop    esi
  41f675:	out    0x69,al
  41f677:	jae    0x41f698
  41f679:	call   0xa7cbe981
  41f67e:	add    BYTE PTR [ecx-0x767b442d],ch
  41f684:	popa   
  41f685:	out    0xf0,eax
  41f687:	in     eax,0xf0
  41f689:	fidivr DWORD PTR [eax-0x4f]
  41f68c:	scas   al,BYTE PTR es:[edi]
  41f68d:	push   ss
  41f68e:	jns    0x41f641
  41f690:	xchg   edx,eax
  41f691:	push   ss
  41f692:	imul   eax,DWORD PTR [ecx],0x17
  41f695:	ffree  st(3)
  41f697:	in     al,0x88
  41f699:	mov    ds:0x9ac369f8,al
  41f69e:	aam    0x4a
  41f6a0:	in     al,0xd0
  41f6a2:	mul    DWORD PTR [edi+ebp*2]
  41f6a5:	or     esi,edi
  41f6a7:	(bad)  
  41f6a8:	pop    ebp
  41f6a9:	pop    ebx
  41f6aa:	icebp  
  41f6ab:	test   al,0x6e
  41f6ad:	lds    esp,FWORD PTR [eax-0x3662a24c]
  41f6b3:	dec    ebx
  41f6b4:	push   eax
  41f6b5:	sub    BYTE PTR [eax],al
  41f6b7:	repz mov ah,0x95
  41f6ba:	jle    0x41f6bc
  41f6bc:	add    BYTE PTR [eax],al
  41f6be:	mov    WORD PTR [ecx],ds
  41f6c0:	es sub eax,0x3e7ba55
  41f6c6:	repz shr esi,cl
  41f6c9:	rcr    BYTE PTR [edi],cl
  41f6cb:	mov    dh,0xb5
  41f6cd:	push   0xffffffe1
  41f6cf:	sahf   
  41f6d0:	fadd   st,st(3)
  41f6d2:	je     0x41f662
  41f6d4:	fs enter 0x5d6d,0xff
  41f6d9:	call   0xe5b43af3
  41f6de:	es inc edi
  41f6e0:	call   0x5d9e97d0
  41f6e5:	aas    
  41f6e6:	mov    ah,0xb8
  41f6e8:	mov    ch,al
  41f6ea:	ins    DWORD PTR es:[edi],dx
  41f6eb:	jno    0x41f718
  41f6ed:	cmp    bh,BYTE PTR [ebp+esi*1+0x5c386a88]
  41f6f4:	cld    
  41f6f5:	jmp    0x631dbfa9
  41f6fa:	ins    DWORD PTR es:[edi],dx
  41f6fb:	adc    edi,edi
  41f6fd:	call   0x2cc8abf2
  41f702:	xchg   ebx,eax
  41f703:	nop
  41f704:	sbb    ch,0xf7
  41f707:	push   es
  41f708:	add    BYTE PTR [esi],bh
  41f70a:	mov    esp,0x3604f54
  41f70f:	xor    eax,0x5c8f2cc4
  41f714:	cld    
  41f715:	jmp    0x81847b0a
  41f71a:	pop    ecx
  41f71b:	stc    
  41f71c:	jmp    0x41f6f9
  41f71e:	mov    al,0x5c
  41f720:	xchg   esp,ebx
  41f722:	add    BYTE PTR [eax],al
  41f724:	add    BYTE PTR [eax+0x15],cl
  41f727:	mov    cl,0xc1
  41f729:	test   DWORD PTR [esi],0xda72e600
  41f72f:	(bad)  
  41f730:	call   0x9dc28525
  41f735:	out    dx,eax
  41f736:	push   es
  41f737:	add    BYTE PTR [edx+0x6b],dh
  41f73a:	push   esp
  41f73b:	mov    ch,bh
  41f73d:	sub    BYTE PTR [edx+0x42],al
  41f740:	das    
  41f741:	lock xchg ebp,esi
  41f744:	not    BYTE PTR [eax+edi*4]
  41f747:	(bad)  
  41f748:	call   0xe187853d
  41f74d:	jae    0x41f6eb
  41f74f:	jae    0x41f749
  41f751:	sahf   
  41f752:	pop    esp
  41f753:	dec    esp
  41f754:	add    ch,ch
  41f756:	test   BYTE PTR [edi],0x13
  41f759:	call   0x38dc:0x4dc08108
  41f760:	add    DWORD PTR [edx+0x8],ecx
  41f763:	mov    BYTE PTR [ebp+0x4f],0x3
  41f767:	mov    BYTE PTR [ebp+0x2d],0x3
  41f76b:	or     esi,DWORD PTR [esi-0x1f4211e9]
  41f771:	dec    ecx
  41f772:	fisttp DWORD PTR [eax+0x5]
  41f775:	mov    fs,eax
  41f777:	inc    ecx
  41f778:	in     al,dx
  41f779:	xchg   edi,eax
  41f77a:	pop    ds
  41f77b:	or     al,0x84
  41f77d:	push   esi
  41f77e:	add    eax,DWORD PTR [eax]
  41f780:	add    BYTE PTR ds:0xe20c3d96,bh
  41f786:	push   esi
  41f787:	or     BYTE PTR [eax+0x0],cl
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	out    0xf5,eax
  41f78e:	mov    BYTE PTR [esi-0x3a],al
  41f791:	push   0xbb05387f
  41f796:	add    ecx,DWORD PTR [ebp-0x7c9db93c]
  41f79c:	mov    dl,0x1
  41f79e:	jno    0x41f7a5
  41f7a0:	push   ebx
  41f7a1:	pushf  
  41f7a2:	lock jmp 0x41f77b
  41f7a5:	and    BYTE PTR [ecx-0xc],0xca
  41f7a9:	cmp    BYTE PTR [ecx-0xc],0xda
  41f7ad:	pop    esi
  41f7ae:	adc    BYTE PTR [ebp+0xf0007da],0x65
  41f7b5:	dec    eax
  41f7b6:	adc    BYTE PTR [ebx+0x3986f754],cl
  41f7bc:	mov    dh,BYTE PTR [ecx]
  41f7be:	sti    
  41f7bf:	jne    0x41f7a7
  41f7c1:	in     eax,dx
  41f7c2:	push   ebx
  41f7c3:	adc    BYTE PTR [esi],dl
  41f7c5:	ret    
  41f7c6:	jo     0x41f7d2
  41f7c8:	or     DWORD PTR [esp+ebp*8],edi
  41f7cb:	add    ah,dl
  41f7cd:	fwait
  41f7ce:	cli    
  41f7cf:	add    ebx,esi
  41f7d1:	or     cl,ch
  41f7d3:	cld    
  41f7d4:	out    0x51,al
  41f7d6:	push   cs
  41f7d7:	inc    eax
  41f7d8:	repz mov al,0x24
  41f7dc:	rep ins DWORD PTR es:[edi],dx
  41f7de:	sub    edi,DWORD PTR [edi+0x55ec91e4]
  41f7e4:	push   0xf6e68125
  41f7e9:	or     al,0x4
  41f7eb:	add    bh,al
  41f7ed:	sub    DWORD PTR [ebx+0xe6],eax
  41f7f3:	frstor [esp+edi*2-0x43]
  41f7f7:	rep ins DWORD PTR es:[edi],dx
  41f7f9:	add    BYTE PTR [ecx+0x3dec514a],al
  41f7ff:	js     0x41f823
  41f801:	pop    eax
  41f802:	or     al,0x5d
  41f804:	sub    ebp,edi
  41f806:	xlat   BYTE PTR ds:[ebx]
  41f807:	ret    
  41f808:	inc    ebp
  41f809:	sar    eax,0x14
  41f80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80d:	shl    edi,cl
  41f80f:	xchg   esp,eax
  41f810:	test   al,0x67
  41f812:	cld    
  41f813:	add    al,0xc0
  41f815:	(bad)  
  41f816:	(bad)  
  41f817:	cld    
  41f818:	ins    BYTE PTR es:[edi],dx
  41f819:	adc    bl,BYTE PTR [bx]
  41f81c:	aas    
  41f81d:	sar    bh,0xd9
  41f820:	dec    edx
  41f821:	and    eax,0x700c41
  41f826:	jl     0x41f7ec
  41f828:	stos   DWORD PTR es:[edi],eax
  41f829:	mov    esp,0xe66ff324
  41f82e:	or     eax,0x1fa20e
  41f833:	repz cmp edi,edi
  41f836:	cmp    ah,BYTE PTR [edx]
  41f838:	add    DWORD PTR [eax+eax*1],eax
  41f83b:	ds cmp DWORD PTR cs:[edx-0x53],0xad0bed70
  41f844:	stos   DWORD PTR es:[edi],eax
  41f845:	data16 (bad) 
  41f847:	imul   esp,DWORD PTR [ebx+0x6f0e870],0x25
  41f84e:	mov    esi,0x68a35989
  41f853:	add    al,0xdc
  41f855:	adc    eax,0x5
  41f85a:	out    dx,al
  41f85b:	test   ah,dh
  41f85d:	push   0xe6665a77
  41f862:	imul   eax,DWORD PTR ds:0xc17a1374,0xd39c7ede
  41f86c:	stos   DWORD PTR es:[edi],eax
  41f86d:	inc    eax
  41f86e:	scas   al,BYTE PTR es:[edi]
  41f86f:	or     ah,BYTE PTR [esi]
  41f871:	pop    ds
  41f872:	repz push es
  41f874:	rcr    BYTE PTR [ecx],cl
  41f876:	jae    0x41f854
  41f878:	aam    0x4
  41f87a:	(bad)  
  41f87b:	sub    BYTE PTR [edx-0x1a],ch
  41f87e:	les    eax,FWORD PTR [esi]
  41f880:	cmp    al,0x10
  41f882:	sbb    edi,esp
  41f884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f885:	data16 daa 
  41f887:	mov    gs,WORD PTR [ecx-0x30]
  41f88a:	sbb    eax,0xa97ae65a
  41f88f:	pop    esi
  41f890:	imul   esp,DWORD PTR [eax],0x1092077b
  41f896:	jp     0x41f859
  41f898:	fiadd  WORD PTR [eax+0x7adbd33c]
  41f89e:	test   eax,0xf8b66f56
  41f8a3:	mov    dh,0x7d
  41f8a5:	adc    DWORD PTR [edi-0x21fbd90c],edi
  41f8ab:	ret    
  41f8ac:	outs   dx,BYTE PTR ds:[esi]
  41f8ad:	jnp    0x41f8e0
  41f8af:	pop    edi
  41f8b0:	and    DWORD PTR [ebx+0x3e70824],eax
  41f8b6:	test   BYTE PTR [eax+ebp*2+0x6159bf66],0x6b
  41f8be:	add    BYTE PTR [eax],al
  41f8c0:	add    ah,cl
  41f8c2:	leave  
  41f8c3:	out    0x3,eax
  41f8c5:	repz pop ecx
  41f8c7:	mov    bl,0x5b
  41f8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ca:	repz (bad) 
  41f8cc:	cmp    BYTE PTR [ecx],al
  41f8ce:	(bad)  
  41f8cf:	dec    DWORD PTR [ebp+0x2ac6beae]
  41f8d5:	mov    ds:0x2b6aeb8e,al
  41f8da:	repnz push ebp
  41f8dc:	mov    esi,0xaa8851f9
  41f8e1:	loopne 0x41f868
  41f8e3:	mov    edi,0xff69ecf6
  41f8e8:	call   0xd08249dd
  41f8ed:	test   DWORD PTR [ebx],0x6ef0784
  41f8f3:	add    BYTE PTR [ebx+0x31],dh
  41f8f6:	lock add BYTE PTR [edi+edx*8+0x59],0xfa
  41f8fc:	mov    eax,ds:0x5cfcc4b8
  41f901:	mov    ch,0x1d
  41f903:	(bad)  
  41f904:	call   0x24c8aff9
  41f909:	retf   
  41f90a:	pop    edx
  41f90b:	adc    al,ch
  41f90d:	add    al,bh
  41f90f:	jmp    FWORD PTR [ecx+0x4d]
  41f912:	mov    cl,0xfe
  41f914:	call   0x674f0009
  41f919:	push   edx
  41f91a:	pop    ecx
  41f91b:	cld    
  41f91c:	jmp    0xe8957b9a
  41f921:	lock push es
  41f923:	mov    DWORD PTR [eax+eax*1],esi
  41f926:	add    BYTE PTR [eax],al
  41f928:	pop    edi
  41f929:	(bad)  
  41f92a:	xor    esi,DWORD PTR [ecx+0x67]
  41f92d:	aad    0xf3
  41f92f:	ins    BYTE PTR es:[edi],dx
  41f930:	dec    esi
  41f931:	aam    0x4b
  41f933:	bound  edx,QWORD PTR [esi-0x23d67d00]
  41f939:	lds    ebp,FWORD PTR [ecx-0x17]
  41f93c:	mov    al,ds:0xe1f9125b
  41f941:	(bad)  
  41f942:	jmp    DWORD PTR [ebx+0x30]
  41f945:	aad    0x37
  41f947:	add    BYTE PTR [ecx],ah
  41f949:	call   0xc081:0xd44f896c
  41f950:	pop    esi
  41f951:	xacquire xchg BYTE PTR [esi-0x46],dh
  41f955:	fld    QWORD PTR [ecx-0xc]
  41f958:	sbb    esp,eax
  41f95a:	adc    dh,bh
  41f95c:	les    ecx,FWORD PTR [esi+esi*8]
  41f95f:	and    ebx,edx
  41f961:	cmp    eax,0x584c8d10
  41f966:	dec    esp
  41f967:	lea    ebx,[ecx+0x3fff500e]
  41f96d:	and    BYTE PTR [esi],dl
  41f96f:	inc    eax
  41f970:	dec    edx
  41f971:	test   eax,eax
  41f973:	or     al,0xcf
  41f975:	ret    
  41f976:	jno    0x41f980
  41f978:	rcl    BYTE PTR [edi+0x60c38fb],0x74
  41f97f:	adc    BYTE PTR ds:0xf8bf498,ah
  41f985:	jmp    0x41f9be
  41f987:	xchg   edx,edx
  41f989:	add    eax,DWORD PTR [eax]
  41f98b:	add    BYTE PTR [eax],al
  41f98d:	add    BYTE PTR [eax],al
  41f98f:	call   0x9175e109
  41f994:	addr16 in al,dx
  41f996:	mov    ecx,DWORD PTR [esi+ebx*8-0x39]
  41f99a:	call   0x3c9af5
  41f99f:	sbb    DWORD PTR [eax+0x574a8504],0x5eec8307
  41f9a9:	cld    
  41f9aa:	dec    edi
  41f9ab:	jne    0x41f9b4
  41f9ad:	aam    0x12
  41f9af:	sbb    al,BYTE PTR [ebx]
  41f9b1:	xchg   DWORD PTR [ebp+0x5e],esi
  41f9b4:	mov    ebx,0xe244bff2
  41f9b9:	xchg   DWORD PTR [edi+0x48e],eax
  41f9bf:	inc    ecx
  41f9c0:	nop
  41f9c1:	hlt    
  41f9c2:	xor    ebx,0x9
  41f9c5:	jl     0x41f9c6
  41f9c7:	imul   esp,DWORD PTR [edx-0x5a8bc798],0x91f30001
  41f9d1:	std    
  41f9d2:	out    0x34,eax
  41f9d4:	outs   dx,BYTE PTR ds:[esi]
  41f9d5:	add    BYTE PTR [eax],al
  41f9d7:	xchg   esp,eax
  41f9d8:	xchg   edx,eax
  41f9d9:	push   esp
  41f9da:	cld    
  41f9db:	out    0xfd,al
  41f9dd:	adc    DWORD PTR [eax-0xd],eax
  41f9e0:	hlt    
  41f9e1:	sub    esi,ebp
  41f9e3:	fwait
  41f9e4:	loop   0x41f99c
  41f9e6:	adc    eax,0xbf1f2dd8
  41f9eb:	jns    0x41f982
  41f9ed:	(bad)  
  41f9ee:	jg     0x41fa4a
  41f9f0:	fwait
  41f9f1:	in     eax,dx
  41f9f2:	or     al,0x0
  41f9f4:	add    BYTE PTR [eax],al
  41f9f6:	jo     0x41fa25
  41f9f8:	add    BYTE PTR [eax+0x68],dl
  41f9fb:	push   eax
  41f9fc:	pop    eax
  41f9fd:	imul   esi,esp,0x3384006d
  41fa03:	mov    cl,0xb
  41fa05:	push   ecx
  41fa06:	cmp    al,0x78
  41fa08:	cmp    dh,0x34
  41fa0b:	ins    DWORD PTR es:[edi],dx
  41fa0c:	pop    eax
  41fa0d:	rol    DWORD PTR [edx],0x6f
  41fa10:	add    BYTE PTR [ebx+esi*1+0x6854fc11],al
  41fa17:	lods   al,BYTE PTR ds:[esi]
  41fa18:	pop    eax
  41fa19:	and    eax,0x5d006def
  41fa1e:	lods   eax,DWORD PTR ds:[esi]
  41fa1f:	xchg   esi,eax
  41fa20:	aas    
  41fa21:	xor    BYTE PTR [edx],bh
  41fa23:	cmp    al,0x4e
  41fa25:	ss ins BYTE PTR es:[edi],dx
  41fa27:	adc    eax,0xeff30001
  41fa2c:	das    
  41fa2d:	push   esi
  41fa2e:	jle    0x41fa45
  41fa30:	int    0xfe
  41fa32:	in     al,0x60
  41fa34:	iret   
  41fa35:	mov    ch,dh
  41fa37:	loopne 0x41fa5d
  41fa39:	nop
  41fa3a:	repz pop ebx
  41fa3c:	sti    
  41fa3d:	mov    bh,ch
  41fa3f:	push   es
  41fa40:	ja     0x41fabc
  41fa42:	call   0xfc03a1c5
  41fa47:	jge    0x41f9f7
  41fa49:	add    dh,bl
  41fa4b:	push   es
  41fa4c:	fstp   DWORD PTR [ebx+0x4b]
  41fa4f:	adc    bl,BYTE PTR [eax]
  41fa51:	out    dx,eax
  41fa52:	idiv   BYTE PTR [edi+0x6d]
  41fa55:	retf   
  41fa56:	popf   
  41fa57:	push   esi
  41fa58:	out    0xd8,al
  41fa5a:	add    BYTE PTR [eax],al
  41fa5c:	add    BYTE PTR [ebp-0x496bc125],ch
  41fa62:	push   ebp
  41fa63:	and    eax,0xb3bab3c5
  41fa68:	int3   
  41fa69:	imul   edx,DWORD PTR [ebx+ebx*8],0xd
  41fa6d:	xor    eax,DWORD PTR [edi]
  41fa6f:	fimul  DWORD PTR [eax-0x26]
  41fa72:	div    BYTE PTR [ebx+0x7d]
  41fa75:	in     al,dx
  41fa76:	pop    es
  41fa77:	out    0x3,eax
  41fa79:	ss or  eax,0x714eafb
  41fa7f:	call   0xf305:0x467575d3
  41fa86:	push   es
  41fa87:	jo     0x41fa0b
  41fa89:	rol    BYTE PTR [edi],1
  41fa8b:	out    0x3,eax
  41fa8d:	ss ds inc eax
  41fa90:	or     al,0x78
  41fa92:	(bad)  
  41fa93:	fiadd  WORD PTR [ebx+esi*8]
  41fa96:	push   es
  41fa97:	sbb    dh,BYTE PTR [edi+ebx*1+0x69fc403e]
  41fa9e:	lea    eax,[esi]
  41faa0:	add    eax,0xb43a06f3
  41faa5:	pop    es
  41faa6:	imul   ecx,DWORD PTR ds:[eax-0x30],0x568bfae0
  41faae:	psubsb mm0,QWORD PTR [ebx]
  41fab1:	repz pop esi
  41fab3:	sbb    BYTE PTR [ebp-0x1a],0x55
  41fab7:	push   ss
  41fab8:	xchg   ecx,eax
  41fab9:	or     eax,DWORD PTR ss:[eax]
  41fabc:	or     DWORD PTR [ecx+eiz*1+0x0],0xe9
  41fac4:	jge    0x41fae6
  41fac6:	hlt    
  41fac7:	sti    
  41fac8:	mov    al,0x55
  41faca:	mov    esp,DWORD PTR [edi+0x13]
  41facd:	push   esi
  41face:	cld    
  41facf:	jmp    0x5d144d54
  41fad4:	jns    0x41fac3
  41fad6:	(bad)  
  41fad7:	call   0x5fc8b1cc
  41fadc:	pop    ebx
  41fadd:	push   esp
  41fade:	cld    
  41fadf:	jmp    0xe8996e4b
  41fae4:	lock push es
  41fae6:	xchg   DWORD PTR [edi-0x1603ab4d],eax
  41faec:	adc    DWORD PTR [ecx],edi
  41faee:	mov    BYTE PTR [ebp+0x6786f6cc],ch
  41faf4:	adc    DWORD PTR [esp+edi*8-0x17],0xffffff83
  41faf9:	mov    ecx,DWORD PTR [edi+0x5006f0e8]
  41faff:	pusha  
  41fb00:	jno    0x41fad7
  41fb02:	(bad)  
  41fb03:	call   0x6ddf88f8
  41fb08:	out    dx,eax
  41fb09:	push   es
  41fb0a:	add    dh,bl
  41fb0c:	sti    
  41fb0d:	in     eax,dx
  41fb0e:	jmp    0x8b48ebfd
  41fb13:	addr16 pop eax
  41fb15:	push   esp
  41fb16:	cld    
  41fb17:	jmp    0x973ec079
  41fb1c:	jne    0x41fb67
  41fb1e:	or     edx,DWORD PTR [esi]
  41fb20:	xor    bh,BYTE PTR [esi-0x3b]
  41fb23:	adc    dh,BYTE PTR [ebp+0x3e0009]
  41fb29:	add    BYTE PTR [eax],al
  41fb2b:	je     0x41fb89
  41fb2d:	out    0xfa,eax
  41fb2f:	lock push es
  41fb31:	add    BYTE PTR [edi-0x17f7d6d4],bl
  41fb37:	les    ecx,FWORD PTR [edx]
  41fb39:	push   ebp
  41fb3a:	add    BYTE PTR [edx+0x5dfec287],al
  41fb40:	test   ebx,eax
  41fb42:	pop    edi
  41fb43:	mov    BYTE PTR [eax+eax*1],cl
  41fb46:	push   ebx
  41fb47:	in     al,0x64
  41fb49:	add    bh,al
  41fb4b:	aad    0xbc
  41fb4d:	je     0x41fb8f
  41fb4f:	retf   0xb377
  41fb52:	or     bl,cl
  41fb54:	or     BYTE PTR [eax],al
  41fb56:	pop    ebx
  41fb57:	adc    esi,esi
  41fb59:	or     cl,0x66
  41fb5c:	inc    BYTE PTR [esi-0x4f43fff]
  41fb62:	adc    BYTE PTR [ecx],cl
  41fb64:	mov    esi,0xd6474b00
  41fb69:	xor    eax,0xbb29f
  41fb6e:	add    BYTE PTR [esi+eax*1-0x79],ah
  41fb72:	xchg   DWORD PTR [esi],esi
  41fb74:	or     eax,DWORD PTR [eax]
  41fb76:	add    bh,cl
  41fb78:	or     ebx,DWORD PTR [eax+0x74083283]
  41fb7e:	pop    es
  41fb7f:	loope  0x41fb78
  41fb81:	out    0x39,eax
  41fb83:	sbb    al,0xe6
  41fb85:	sti    
  41fb86:	inc    ebx
  41fb87:	or     DWORD PTR [ecx+0x85a0154],0xe272
  41fb91:	add    cl,al
  41fb93:	sti    
  41fb94:	out    0x12,eax
  41fb96:	or     cl,BYTE PTR [ebx]
  41fb98:	mov    DWORD PTR [edi+0x7fe],eax
  41fb9e:	or     ah,dh
  41fba0:	sar    bh,cl
  41fba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba3:	mov    ?,ebp
  41fba5:	dec    DWORD PTR [edx]
  41fba7:	loopne 0x41fbd9
  41fba9:	(bad)  
  41fbaa:	pop    esp
  41fbab:	out    0x87,al
  41fbad:	xchg   DWORD PTR [esi-0x68fffff9],ebp
  41fbb3:	retf   0x770
  41fbb6:	repz or eax,0x4f93125f
  41fbbc:	sar    bh,0x77
  41fbbf:	in     al,0xeb
  41fbc1:	(bad)  
  41fbc2:	fcomp  QWORD PTR [ebp-0x50]
  41fbc5:	cld    
  41fbc6:	mov    ebp,0xf28f86ea
  41fbcb:	pop    ebp
  41fbcc:	add    BYTE PTR [eax-0x3c],dl
  41fbcf:	adc    ebx,DWORD PTR [edi-0x4c]
  41fbd2:	push   ebx
  41fbd3:	pop    edi
  41fbd4:	add    BYTE PTR [eax],al
  41fbd6:	retf   
  41fbd7:	arpl   WORD PTR [esi-0x3],ax
  41fbda:	lods   al,BYTE PTR ds:[esi]
  41fbdb:	mov    ds:0xd9230447,eax
  41fbe0:	ret    
  41fbe1:	(bad)  
  41fbe2:	cmp    DWORD PTR [ecx],esp
  41fbe4:	mov    ch,0x88
  41fbe6:	xchg   DWORD PTR [esi-0x4f],ebp
  41fbe9:	mov    dh,BYTE PTR [ecx+eiz*2+0x1]
  41fbed:	add    bl,dh
  41fbef:	lea    eax,[esi+0x42]
  41fbf2:	jl     0x41fc51
  41fbf4:	mov    DWORD PTR [edx+0x0],eax
  41fbf7:	add    BYTE PTR [eax],al
  41fbf9:	jnp    0x41fbf7
  41fbfb:	hlt    
  41fbfc:	jmp    0x41fbff
  41fbfe:	sahf   
  41fbff:	add    BYTE PTR [edi-0x5c],bh
  41fc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc03:	add    DWORD PTR [eax],eax
  41fc05:	repz push esp
  41fc07:	pop    edi
  41fc08:	call   DWORD PTR [esp+edx*8-0x4f]
  41fc0c:	mov    BYTE PTR [eax*1+0x6c44f93e],dh
  41fc13:	test   BYTE PTR [edi-0x7374d439],bh
  41fc19:	fwait
  41fc1a:	pop    esi
  41fc1b:	add    BYTE PTR [eax],al
  41fc1d:	mov    dl,0xc8
  41fc1f:	dec    eax
  41fc20:	jae    0x41fbdf
  41fc22:	ficom  DWORD PTR [edi+0x5df253]
  41fc28:	call   0xfca09d4b
  41fc2d:	ja     0x41fbcc
  41fc2f:	aam    0x28
  41fc31:	jbe    0x41fc39
  41fc33:	sub    cl,BYTE PTR [eax]
  41fc35:	mov    ds:0xe3fff353,eax
  41fc3a:	(bad)  
  41fc3b:	out    0x8c,al
  41fc3d:	ja     0x41fbee
  41fc3f:	out    0x3,eax
  41fc41:	repz jge 0x41fc38
  41fc44:	mov    bh,al
  41fc46:	xchg   DWORD PTR [ebp-0x68],edi
  41fc49:	cmp    BYTE PTR [eax],cl
  41fc4b:	out    0x3,eax
  41fc4d:	into   
  41fc4e:	mov    cl,BYTE PTR [esi]
  41fc50:	add    esi,ebx
  41fc52:	push   es
  41fc53:	data16 mul BYTE PTR [eax-0x52fc590b]
  41fc5a:	int3   
  41fc5b:	push   ebp
  41fc5c:	add    al,BYTE PTR [eax]
  41fc5e:	add    BYTE PTR [eax],al
  41fc60:	dec    ebp
  41fc61:	push   edx
  41fc62:	rcr    DWORD PTR [ebx-0x59],cl
  41fc65:	cld    
  41fc66:	ss cmc 
  41fc68:	fadd   QWORD PTR [esi]
  41fc6a:	jno    0x41fc32
  41fc6c:	xchg   edi,eax
  41fc6d:	inc    eax
  41fc6e:	sub    DWORD PTR [esi+0x6f69637b],esi
  41fc74:	clc    
  41fc75:	jge    0x41fc22
  41fc77:	or     esp,DWORD PTR ds:0xe4db71ba
  41fc7d:	test   DWORD PTR [esi],esp
  41fc7f:	stc    
  41fc80:	addr16 xor dh,cl
  41fc83:	pusha  
  41fc84:	adc    ecx,DWORD PTR [edi+0x73]
  41fc87:	test   BYTE PTR [eax],bl
  41fc89:	or     bh,ah
  41fc8b:	add    eax,ebx
  41fc8d:	dec    eax
  41fc8e:	stos   DWORD PTR es:[edi],eax
  41fc8f:	pusha  
  41fc90:	dec    esp
  41fc91:	test   DWORD PTR ds:0xdacc6c07,esp
  41fc97:	pop    edi
  41fc98:	loope  0x41fcfc
  41fc9a:	clc    
  41fc9b:	ret    
  41fc9c:	xor    al,0x15
  41fc9e:	fisttp QWORD PTR [ebp-0x6cf0b15f]
  41fca4:	mov    esp,0xa503e707
  41fca9:	loopne 0x41fd1c
  41fcab:	add    eax,0x7
  41fcae:	add    cl,ch
  41fcb0:	lock jge 0x41fcb6
  41fcb3:	jns    0x41fd2d
  41fcb5:	or     al,BYTE PTR [ebx+0x36cc1bb0]
  41fcbb:	sub    al,0xe7
  41fcbd:	ficomp DWORD PTR [edi]
  41fcbf:	bound  esi,QWORD PTR [esi+0xa88101]
  41fcc5:	add    BYTE PTR [eax],al
  41fcc7:	fstp   QWORD PTR [edx-0x29]
  41fcca:	loop   0x41fcfc
  41fccc:	daa    
  41fccd:	mov    edi,0xbf86db13
  41fcd2:	in     eax,dx
  41fcd3:	cmp    BYTE PTR [edx-0x71b2b04],0x3f
  41fcda:	jmp    0x644d4250
  41fcdf:	das    
  41fce0:	aad    0x1e
  41fce2:	bound  esi,QWORD PTR [eax-0x4b]
  41fce5:	(bad)  
  41fce6:	call   0x79757cdb
  41fceb:	sysenter 
  41fced:	mov    ebx,0x4a7f343f
  41fcf2:	xor    DWORD PTR [eax-0x7a],edi
  41fcf5:	push   ebx
  41fcf6:	call   0xcdc303eb
  41fcfb:	push   0x15a4c251
  41fd00:	push   ecx
  41fd01:	mov    DWORD PTR [eax],ebx
  41fd03:	xor    eax,0x8117288
  41fd08:	cwde   
  41fd09:	push   edi
  41fd0a:	call   0x5eb403ff
  41fd0f:	outs   dx,DWORD PTR ds:[esi]
  41fd10:	int3   
  41fd11:	cld    
  41fd12:	jmp    0xf2cb073b
  41fd17:	fdiv   st,st(1)
  41fd19:	cli    
  41fd1a:	out    0x9d,al
  41fd1c:	push   edx
  41fd1d:	jb     0x41fcf4
  41fd1f:	xchg   ebp,eax
  41fd20:	hlt    
  41fd21:	out    dx,eax
  41fd22:	sti    
  41fd23:	xor    BYTE PTR [ecx-0x7a],dl
  41fd26:	and    al,0xc4
  41fd28:	mov    dl,0x5d
  41fd2a:	add    BYTE PTR [eax],al
  41fd2c:	add    BYTE PTR [eax],al
  41fd2e:	arpl   di,ax
  41fd30:	add    BYTE PTR [eax],al
  41fd32:	(bad)  
  41fd33:	jge    0x41fd1d
  41fd35:	xor    DWORD PTR [esi],0x29
  41fd38:	dec    edi
  41fd39:	push   esi
  41fd3a:	fucom  st(2)
  41fd3c:	pop    ecx
  41fd3d:	icebp  
  41fd3e:	push   esp
  41fd3f:	mov    al,0x87
  41fd41:	clc    
  41fd42:	and    DWORD PTR [esi-0x14],0xffffff85
  41fd46:	test   DWORD PTR [edi],ebp
  41fd48:	add    esi,DWORD PTR [edx]
  41fd4a:	call   0x7f04:0xca0081e3
  41fd51:	jge    0x41fd0d
  41fd53:	add    al,0x87
  41fd55:	pop    edi
  41fd56:	fmulp  st(2),st
  41fd58:	inc    ecx
  41fd59:	(bad)  
  41fd5a:	fisubr DWORD PTR [edi]
  41fd5c:	or     cl,BYTE PTR [ebp-0x161aef71]
  41fd62:	sub    al,BYTE PTR [eax+eax*1]
  41fd65:	lea    ebx,[edi+0x10]
  41fd68:	xchg   BYTE PTR [ebp-0x56],al
  41fd6b:	mov    cl,0x71
  41fd6d:	adc    BYTE PTR [ecx],ah
  41fd6f:	das    
  41fd70:	add    al,0xe8
  41fd72:	mov    esi,0x1f000008
  41fd77:	or     eax,0x5f194b7b
  41fd7c:	hlt    
  41fd7d:	add    BYTE PTR [ebx],al
  41fd7f:	inc    edi
  41fd80:	lock mov ecx,DWORD PTR [ebp+0x70f84105]
  41fd87:	add    al,0xfb
  41fd89:	jne    0x41fde1
  41fd8b:	mov    cl,0x71
  41fd8d:	sbb    ch,dh
  41fd8f:	cs adc bh,bh
  41fd92:	add    BYTE PTR [eax],al
  41fd94:	add    bh,bl
  41fd96:	push   ebx
  41fd97:	sti    
  41fd98:	jne    0x41fdf0
  41fd9a:	fmul   st(0),st
  41fd9c:	sbb    DWORD PTR [ebx+0x4],ebx
  41fd9f:	xchg   eax,esi
  41fda1:	iret   
  41fda2:	mov    eax,0x2fc11a70
  41fda7:	add    al,0x8b
  41fda9:	repz xchg edi,eax
  41fdab:	imul   eax,DWORD PTR [ebp+eiz*1+0x41],0x5a
  41fdb0:	xor    DWORD PTR [ebx],0x12
  41fdb3:	or     dh,al
  41fdb5:	scas   al,BYTE PTR es:[edi]
  41fdb6:	nop
  41fdb7:	add    al,ch
  41fdb9:	jmp    0x5423:0x78fc5dd9
  41fdc0:	xor    BYTE PTR [esi-0x5902e45b],0x79
  41fdc7:	aam    0xbb
  41fdc9:	in     al,dx
  41fdca:	xor    BYTE PTR [eax+0x23],ch
  41fdcd:	scas   eax,DWORD PTR es:[edi]
  41fdce:	jg     0x41fe2a
  41fdd0:	push   esp
  41fdd1:	retf   
  41fdd2:	addr16 inc esp
  41fdd4:	std    
  41fdd5:	aam    0xd3
  41fdd7:	(bad)  
  41fdd8:	cld    
  41fdd9:	sub    al,0xf8
  41fddb:	mov    dh,0xc6
  41fddd:	mov    cl,0x35
  41fddf:	add    BYTE PTR [ebx+0x68],dl
  41fde2:	mov    ecx,0xdce7eb7e
  41fde7:	in     al,0xfb
  41fde9:	repz mov WORD PTR [ebx-0x7899d978],?
  41fdf0:	xlat   BYTE PTR ds:[ebx]
  41fdf1:	push   0x94fe8fe0
  41fdf6:	pop    ebp
  41fdf7:	mov    DWORD PTR [edx+0x0],eax
  41fdfa:	add    BYTE PTR [eax],al
  41fdfc:	xchg   esp,esp
  41fdfe:	mov    esi,0x58aa7a07
  41fe03:	out    0x81,eax
  41fe05:	sub    bl,BYTE PTR [ebx-0x4]
  41fe08:	outs   dx,DWORD PTR ds:[esi]
  41fe09:	sbb    eax,0x726c53d8
  41fe0e:	or     al,0x89
  41fe10:	es mov edx,0x73f33ff1
  41fe16:	add    BYTE PTR [ebx+0x69b059ae],cl
  41fe1c:	icebp  
  41fe1d:	pop    eax
  41fe1e:	xor    eax,DWORD PTR [eax+0x30d55e4b]
  41fe24:	jo     0x41fe2c
  41fe26:	bound  edx,QWORD PTR [eax]
  41fe28:	repz fsincos 
  41fe2b:	mov    BYTE PTR [ebx-0x7292a2a],dh
  41fe31:	jnp    0x41fe59
  41fe33:	or     al,0x74
  41fe35:	leave  
  41fe36:	mov    esi,0x238214e9
  41fe3b:	pop    eax
  41fe3c:	mov    esp,0x1f5ce8dc
  41fe41:	adc    ecx,ebp
  41fe43:	add    dh,bl
  41fe45:	push   es
  41fe46:	sbb    al,0x6
  41fe48:	jb     0x41fe0b
  41fe4a:	call   0x254a:0xda01db5c
  41fe51:	adc    ch,BYTE PTR [eax+0x337ff3d6]
  41fe57:	pusha  
  41fe58:	inc    ebx
  41fe59:	sbb    BYTE PTR [ebx],0xc
  41fe5c:	fucomi st,st(5)
  41fe5e:	je     0x41febc
  41fe60:	add    BYTE PTR [eax],al
  41fe62:	add    bh,al
  41fe64:	and    BYTE PTR [ebx],0x60
  41fe67:	pop    ds
  41fe68:	mov    dl,0x2f
  41fe6a:	inc    ecx
  41fe6b:	in     al,dx
  41fe6c:	push   es
  41fe6d:	mov    ah,0x88
  41fe6f:	cwde   
  41fe70:	mov    al,BYTE PTR [edx-0x3d]
  41fe73:	inc    ebx
  41fe74:	mov    ch,0x61
  41fe76:	push   ebx
  41fe77:	imul   eax,ebp,0xffffffd6
  41fe7a:	push   esp
  41fe7b:	mov    esp,0x3e8e26f2
  41fe80:	cmc    
  41fe81:	or     DWORD PTR [ebx+0x1f],eax
  41fe84:	mov    ah,BYTE PTR [esi]
  41fe86:	sti    
  41fe87:	sub    al,0x5f
  41fe89:	jbe    0x41fee0
  41fe8b:	jbe    0x41fedb
  41fe8d:	bound  eax,QWORD PTR [ebx-0x20]
  41fe90:	add    eax,0x7a4d43d9
  41fe95:	out    0x3,eax
  41fe97:	repz jnp 0x41fe1d
  41fe9a:	inc    ebx
  41fe9b:	imul   eax,DWORD PTR [ebp+0xe],0x7d
  41fe9f:	inc    edi
  41fea0:	dec    ebp
  41fea1:	push   ebp
  41fea3:	dec    edi
  41fea4:	xchg   DWORD PTR [edx+0x9],edi
  41fea7:	lock mov cs,WORD PTR [edi]
  41feaa:	push   cs
  41feab:	out    dx,eax
  41feac:	push   es
  41fead:	mov    bh,0x19
  41feaf:	inc    edx
  41feb0:	dec    esi
  41feb1:	cld    
  41feb2:	pop    ebp
  41feb3:	sti    
  41feb4:	in     al,0x36
  41feb6:	and    al,0x97
  41feb8:	xlat   BYTE PTR ds:[ebx]
  41feb9:	xlat   BYTE PTR ds:[ebx]
  41feba:	dec    edi
  41febb:	test   cl,0xdf
  41febe:	(bad)
  41fec2:	xor    al,0xa3
  41fec4:	dec    ebp
  41fec5:	jo     0x41fea4
  41fec7:	add    BYTE PTR [eax],al
  41fec9:	add    BYTE PTR [edx],dl
  41fecb:	adc    eax,0x491d9d43
  41fed0:	gs loopne 0x41fe8e
  41fed3:	pop    ecx
  41fed4:	je     0x41ff2c
  41fed6:	je     0x41fea8
  41fed8:	pop    es
  41fed9:	pop    esp
  41feda:	jo     0x41ff59
  41fedc:	(bad)  
  41fedd:	call   0x2507b5d2
  41fee2:	sub    al,0x4e
  41fee4:	ret    0x262c
  41fee7:	dec    ebp
  41fee8:	std    
  41fee9:	aam    0xa8
  41feeb:	cld    
  41feec:	aas    
  41feed:	jmp    0x744e8c65
  41fef2:	mov    dl,0x4f
  41fef4:	out    0x9a,eax
  41fef6:	sbb    BYTE PTR [esp+edi*8+0x62],cl
  41fefa:	fisttp WORD PTR [eax-0x78eb0928]
  41ff00:	(bad)  
  41ff01:	call   0x218480f6
  41ff06:	aas    
  41ff07:	jle    0x41fef9
  41ff09:	inc    ecx
  41ff0a:	inc    ebp
  41ff0b:	pop    ecx
  41ff0c:	std    
  41ff0d:	es jb  0x41fe9d
  41ff10:	ja     0x41feef
  41ff12:	jge    0x41ff71
  41ff14:	push   0x3108071f
  41ff19:	imul   edi,DWORD PTR [edx],0xdfffff4f
  41ff1f:	das    
  41ff20:	mov    esp,0xfc5b2e74
  41ff25:	push   edx
  41ff26:	repnz outs dx,DWORD PTR ds:[esi]
  41ff28:	out    dx,al
  41ff29:	dec    BYTE PTR [ebp-0x1f]
  41ff2c:	cmc    
  41ff2d:	fiadd  WORD PTR [eax]
  41ff2f:	add    BYTE PTR [eax],al
  41ff31:	dec    esp
  41ff32:	mov    al,0x87
  41ff34:	retf   
  41ff35:	mov    ds:0x66e80047,eax
  41ff3a:	loopne 0x41ff36
  41ff3c:	call   DWORD PTR [edx+0x21ebf746]
  41ff42:	pop    ebx
  41ff43:	std    
  41ff44:	push   edx
  41ff45:	and    ah,BYTE PTR [edx-0x7ec20112]
  41ff4b:	inc    ecx
  41ff4c:	stc    
  41ff4d:	xchg   ecx,eax
  41ff4e:	cs add al,0xeb
  41ff51:	and    DWORD PTR [ecx+0x3cdafa79],ecx
  41ff57:	and    DWORD PTR [ebx+0x7d320701],eax
  41ff5d:	int    0x5a
  41ff5f:	std    
  41ff60:	mov    WORD PTR [edi],es
  41ff62:	ret    
  41ff63:	xchg   ebx,ecx
  41ff65:	bound  ecx,QWORD PTR ds:0xcc3dfeee
  41ff6b:	mov    esp,0xc77d9d74
  41ff70:	call   0x3ce0e3
  41ff75:	push   ss
  41ff76:	enter  0x470,0xd4
  41ff7a:	inc    esi
  41ff7b:	test   DWORD PTR [ecx],0x7fe7f52d
  41ff81:	enter  0xfbad,0x53
  41ff85:	and    ch,BYTE PTR [ebx]
  41ff87:	mov    esi,0x7987bdfe
  41ff8c:	cli    
  41ff8d:	mov    bh,BYTE PTR [ecx+ecx*1]
  41ff90:	lea    eax,ds:0xfffdd8
  41ff96:	add    BYTE PTR [eax],al
  41ff98:	pop    edx
  41ff99:	cwde   
  41ff9a:	sti    
  41ff9b:	adc    eax,0x3ff2edf3
  41ffa0:	repz fst st(7)
  41ffa3:	clc    
  41ffa4:	repz leave 
  41ffa6:	add    DWORD PTR [eax-0x74090e],esi
  41ffac:	inc    esp
  41ffad:	pop    esi
  41ffae:	cmp    BYTE PTR [edx+0x3a],0x5e
  41ffb2:	or     DWORD PTR [esi+ecx*2+0x7efc5664],eax
  41ffb9:	in     eax,0xeb
  41ffbb:	(bad)  
  41ffbc:	and    al,0x5e
  41ffbe:	mov    al,0x86
  41ffc0:	mov    dh,0x65
  41ffc2:	push   edi
  41ffc3:	adc    al,BYTE PTR [edi]
  41ffc5:	xor    al,al
  41ffc7:	(bad)  
  41ffc8:	jg     0x41ffed
  41ffca:	dec    esp
  41ffcb:	mov    ah,BYTE PTR [esi+edi*4+0x0]
  41ffcf:	add    bl,dh
  41ffd1:	in     eax,dx
  41ffd2:	mov    dh,al
  41ffd4:	or     edx,ebp
  41ffd6:	push   edx
  41ffd7:	std    
  41ffd8:	in     al,dx
  41ffd9:	loop   0x42001e
  41ffdb:	ja     0x41ffea
  41ffdd:	jmp    0x36276835
  41ffe2:	add    esi,DWORD PTR [ecx]
  41ffe4:	dec    ecx
  41ffe5:	pop    esi
  41ffe6:	mov    bl,0x8a
  41ffe8:	dec    esi
  41ffe9:	sahf   
  41ffea:	imul   edi,edi,0xffffffc2
  41ffed:	rcl    DWORD PTR [esi-0x79],cl
  41fff0:	fldcw  WORD PTR ss:[ebx+0x36]
  41fff4:	xchg   ebp,eax
  41fff5:	jecxz  0x42004d
  41fff7:	xchg   BYTE PTR ds:0xc08b62,dh
  41fffd:	add    BYTE PTR [eax],al
  41ffff:	fwait
  420000:	repnz push ebx
  420002:	std    
  420003:	pushf  
  420004:	enter  0x6a2b,0xf2
  420008:	sar    BYTE PTR [edi+edi*4+0x396c1878],cl
  42000f:	adc    BYTE PTR [ebx],0x57
  420012:	xchg   DWORD PTR [esi],esi
  420014:	sbb    DWORD PTR [eax-0x3f90041],eax
  42001a:	sub    BYTE PTR [edi-0xcfc181e],0x76
  420021:	out    0x3,eax
  420023:	repz int3 
  420025:	fist   WORD PTR [ebx+esi*1]
  420028:	jg     0x42005b
  42002a:	ins    BYTE PTR es:[edi],dx
  42002b:	fwait
  42002c:	pop    eax
  42002d:	cld    
  42002e:	pop    eax
  42002f:	inc    edi
  420030:	rcr    esi,1
  420032:	pop    eax
  420033:	loope  0x42008b
  420035:	fadd   st,st(3)
  420037:	xor    al,0x7d
  420039:	sub    ebx,DWORD PTR [ebp-0x31]
  42003c:	lods   al,BYTE PTR ds:[esi]
  42003d:	inc    ecx
  42003e:	dec    ebx
  42003f:	xor    al,BYTE PTR [edx]
  420041:	out    0xae,eax
  420043:	imul   ebx,DWORD PTR [edx+0x69],0x67
  420047:	lods   al,BYTE PTR ds:[esi]
  420048:	mov    ah,0x73
  42004a:	test   BYTE PTR [ebp+eax*1-0x4961fc19],dl
  420051:	lods   al,BYTE PTR ds:[esi]
  420052:	mov    esi,0xbe6005ff
  420057:	add    al,0x4b
  420059:	sti    
  42005a:	addr16 add al,bh
  42005d:	out    0x14,al
  42005f:	mov    bl,0x80
  420061:	sub    ebx,DWORD PTR [eax+eax*1+0x0]
  420065:	add    BYTE PTR ds:0xf3030286,ah
  42006b:	push   es
  42006c:	test   BYTE PTR [ecx+0x3e707cd],0x6c
  420073:	les    edi,FWORD PTR [edx-0x74]
  420076:	jnp    0x42005f
  420078:	out    0x3,eax
  42007a:	repz add eax,0xd47b4fe4
  420080:	out    dx,al
  420081:	xchg   BYTE PTR [edi],ch
  420083:	push   DWORD PTR [esi+0x4c55916b]
  420089:	pop    eax
  42008a:	jno    0x4200d3
  42008c:	cmc    
  42008d:	mov    bh,BYTE PTR [ecx+0x7]
  420090:	out    0x3,eax
  420092:	jge    0x420058
  420094:	jmp    esp
  420096:	icebp  
  420097:	aad    0xb
  420099:	bound  esi,QWORD PTR [edx]
  42009b:	xchg   DWORD PTR [edi-0x13],esi
  42009e:	push   es
  42009f:	cld    
  4200a0:	mov    ah,BYTE PTR [eax-0x10]
  4200a3:	push   es
  4200a4:	add    BYTE PTR [edi],bl
  4200a6:	popf   
  4200a7:	inc    BYTE PTR [ecx]
  4200a9:	xchg   ebp,eax
  4200aa:	xor    al,0xe0
  4200ac:	aaa    
  4200ad:	je     0x42003c
  4200af:	xchg   edx,eax
  4200b0:	push   esp
  4200b1:	cdq    
  4200b2:	stos   DWORD PTR es:[edi],eax
  4200b3:	hlt    
  4200b4:	das    
  4200b5:	fbstp  TBYTE PTR [eax]
  4200b7:	dec    edx
  4200b8:	mov    DWORD PTR [eax+ebx*4+0x7bf5c386],esp
  4200bf:	jg     0x420120
  4200c1:	call   0xfd2a07b6
  4200c6:	ret    0xfc4b
  4200c9:	into   
  4200ca:	add    BYTE PTR [eax],al
  4200cc:	add    BYTE PTR [edx+0x5a],al
  4200cf:	cld    
  4200d0:	xor    al,0xaf
  4200d2:	xchg   BYTE PTR [edx-0x4b],ch
  4200d5:	out    0x4b,eax
  4200d7:	adc    bh,BYTE PTR [ecx+0x62000a01]
  4200dd:	push   0xf0e8feca
  4200e2:	fdiv   st(7),st
  4200e4:	imul   esi,DWORD PTR [edx+0x30da4f91],0x62
  4200eb:	mov    edi,ecx
  4200ed:	out    dx,eax
  4200ee:	push   es
  4200ef:	sub    DWORD PTR [ecx-0x17960a5b],0x7b
  4200f6:	les    esi,FWORD PTR [edi+0x52623562]
  4200fc:	jns    0x42011b
  4200fe:	dec    ebx
  4200ff:	sub    DWORD PTR [ecx],0xffffffc3
  420102:	add    eax,0x493da4c6
  420107:	std    
  420108:	fadd   QWORD PTR [eax+0x4b]
  42010b:	adc    bh,BYTE PTR ds:0x9a1
  420111:	and    DWORD PTR [edx+0x66],eax
  420114:	add    BYTE PTR [ecx],al
  420116:	or     cl,BYTE PTR [eax-0x1005cd32]
  42011c:	inc    ch
  42011e:	xchg   BYTE PTR [esp+esi*2-0x74de23bf],bh
  420125:	xchg   edi,eax
  420126:	std    
  420127:	xchg   al,dh
  420129:	jno    0x4200e6
  42012b:	xor    al,0x3
  42012d:	cmp    ebx,DWORD PTR [edi-0x4]
  420130:	push   eax
  420131:	add    BYTE PTR [eax],al
  420133:	add    dl,ah
  420135:	(bad)  
  420136:	in     al,dx
  420137:	inc    BYTE PTR [ebp-0x37]
  42013a:	mov    esp,0x420b4e74
  42013f:	dec    DWORD PTR [ebx+0x7c]
  420142:	jnp    0x420148
  420144:	shl    DWORD PTR [eax],cl
  420146:	add    BYTE PTR [ebx+0xd],dh
  420149:	jp     0x4201c5
  42014b:	add    al,0x4c
  42014d:	inc    esi
  42014e:	sti    
  42014f:	add    DWORD PTR [ecx-0x7e720bba],edx
  420155:	gs std 
  420157:	call   FWORD PTR [edx]
  420159:	fld    QWORD PTR [ebx-0x44fbb0f]
  42015f:	dec    ebp
  420160:	inc    edx
  420161:	test   BYTE PTR [ecx-0xc],ch
  420164:	shl    BYTE PTR [ecx+0x4761f841],cl
  42016a:	hlt    
  42016b:	or     DWORD PTR [edi],0xffffffb7
  42016e:	xor    al,0x3b
  420170:	dec    ecx
  420171:	sub    ch,bh
  420173:	(bad)  
  420174:	fiadd  DWORD PTR [ecx]
  420176:	mov    WORD PTR [edx],es
  420178:	inc    ebp
  420179:	mov    cl,0xfb
  42017b:	(bad)  
  42017c:	mov    edi,0x3a15fbb4
  420181:	push   esi
  420182:	cmp    al,0x0
  420184:	sbb    ch,BYTE PTR [edi]
  420186:	sti    
  420187:	add    BYTE PTR [esi-0xcba7904],bh
  42018d:	gs push 0x55b885b8
  420193:	mov    DWORD PTR [esi],esi
  420195:	shl    DWORD PTR [ebp+0x5d],0xba
  42019c:	sbb    al,0x9
  42019e:	add    BYTE PTR [ecx],cl
  4201a0:	pop    esi
  4201a1:	push   ebp
  4201a2:	scas   eax,DWORD PTR es:[edi]
  4201a3:	addr16 pop edi
  4201a5:	add    BYTE PTR [eax],al
  4201a7:	ins    BYTE PTR es:[edi],dx
  4201a8:	dec    ebx
  4201a9:	lock adc BYTE PTR [ebx-0x728b2a3],dh
  4201b0:	sbb    eax,0x9130d74e
  4201b5:	adc    ebp,edi
  4201b7:	jae    0x420179
  4201b9:	test   al,0xfe
  4201bb:	inc    esp
  4201bc:	pop    esi
  4201bd:	add    BYTE PTR [esi-0x3],dh
  4201c0:	pusha  
  4201c1:	mov    al,BYTE PTR [ebp+0x5f8a]
  4201c7:	cld    
  4201c8:	test   DWORD PTR [bx+0x5df2],esp
  4201cd:	add    BYTE PTR [ecx],al
  4201cf:	xor    al,0xed
  4201d1:	xor    esp,esi
  4201d3:	and    al,ah
  4201d5:	out    dx,eax
  4201d6:	cld    
  4201d7:	xchg   ecx,edi
  4201d9:	pop    es
  4201da:	imul   esp,DWORD PTR [ecx],0xc1838532
  4201e0:	add    DWORD PTR [eax],0x0
  4201e3:	repz in eax,dx
  4201e5:	push   edx
  4201e6:	adc    ch,BYTE PTR [edi]
  4201e8:	dec    eax
  4201e9:	sar    bh,0x71
  4201ec:	mov    eax,ds:0xe9b38307
  4201f1:	pop    ds
  4201f2:	or     eax,0xfeabdf9d
  4201f7:	int3   
  4201f8:	pop    ebp
  4201f9:	mov    ebx,0x3e4bcb38
  4201fe:	mov    DWORD PTR [eax],eax
  420200:	add    BYTE PTR [eax],al
  420202:	lds    eax,FWORD PTR gs:[eax]
  420205:	add    bl,dh
  420207:	fstp   QWORD PTR [ecx+0x31]
  42020a:	and    BYTE PTR [edi],al
  42020c:	clc    
  42020d:	add    al,0x5d
  42020f:	cmp    al,0x5c
  420211:	inc    edx
  420212:	je     0x420284
  420214:	jle    0x420219
  420216:	repz push es
  420218:	inc    edx
  420219:	test   dl,0x46
  42021c:	push   ecx
  42021d:	push   cs
  42021e:	jns    0x4201a0
  420220:	pop    DWORD PTR [ebx]
  420222:	repz push es
  420224:	out    0x8d,al
  420226:	lods   al,BYTE PTR ds:[esi]
  420227:	dec    eax
  420228:	es add eax,0x8df546a5
  42022e:	push   0x6d
  420230:	adc    eax,0x3f707455
  420235:	add    esi,ebx
  420237:	push   es
  420238:	or     BYTE PTR [edx-0x20],0xdc
  42023c:	ficom  DWORD PTR [eax+eax*8+0x22]
  420240:	jmp    0x4201c8
  420242:	jo     0x420259
  420244:	inc    ecx
  420245:	add    esi,ebx
  420247:	push   es
  420248:	xchg   edi,eax
  420249:	push   esp
  42024a:	add    DWORD PTR [edi],edx
  42024c:	std    
  42024d:	ret    
  42024e:	and    al,0x84
  420250:	mov    ds:0x36056307,al
  420255:	inc    edx
  420256:	lock push es
  420258:	(bad)  
  420259:	icebp  
  42025a:	ror    DWORD PTR [ecx+ecx*4],cl
  42025d:	inc    eax
  42025e:	mov    eax,ds:0x1080ca7b
  420263:	dec    esi
  420264:	addr16 add BYTE PTR [bx+si],al
  420268:	add    al,bl
  42026a:	jmp    esi
  42026c:	add    eax,DWORD PTR [edx-0x23]
  42026f:	cmp    eax,0xe7017cec
  420274:	add    ebp,DWORD PTR [edx+0x40]
  420277:	xchg   ebp,eax
  420278:	out    dx,al
  420279:	lods   al,BYTE PTR ds:[esi]
  42027a:	sbb    DWORD PTR [edi],esp
  42027c:	add    al,0x78
  42027e:	mov    ebx,0xe9ccb3ca
  420283:	aas    
  420284:	add    esi,ebx
  420286:	xchg   ecx,eax
  420287:	(bad)  
  420288:	mov    ebx,0xe9401824
  42028d:	jne    0x420219
  42028f:	and    edi,DWORD PTR [ecx]
  420291:	lock push es
  420293:	add    BYTE PTR [ecx-0x727fa3b9],bh
  420299:	hlt    
  42029a:	jb     0x42029b
  42029c:	call   0xe9ac0991
  4202a1:	call   0x23a2:0x75293145
  4202a8:	jno    0x42029a
  4202aa:	push   es
  4202ab:	add    BYTE PTR [eax-0x7c],ah
  4202ae:	jmp    0x15e8:0x6f0e9af
  4202b5:	inc    ebp
  4202b6:	inc    esi
  4202b7:	cld    
  4202b8:	xor    eax,0xffffffb0
  4202bb:	add    edx,ebx
  4202bd:	mov    al,0x90
  4202bf:	fwait
  4202c0:	int    0xb8
  4202c2:	inc    ebp
  4202c3:	cld    
  4202c4:	jmp    0xe9bc2a91
  4202c9:	lock xchg ecx,eax
  4202cb:	inc    ebx
  4202cc:	lds    eax,FWORD PTR [eax]
  4202ce:	add    BYTE PTR [eax],al
  4202d0:	pusha  
  4202d1:	lea    eax,[ebx-0x3b9a4f3]
  4202d7:	jmp    0xfd65cc7b
  4202dc:	jae    0x4202a8
  4202de:	and    esi,ecx
  4202e0:	inc    eax
  4202e1:	lea    edi,[ebx-0x3b9a4f3]
  4202e7:	jmp    0xdd65c46b
  4202ec:	mov    eax,ds:0x4f4885b
  4202f1:	sbb    eax,0xdc6e940
  4202f6:	xor    edx,eax
  4202f8:	jb     0x4202c3
  4202fa:	and    ebx,ebp
  4202fc:	popf   
  4202fd:	aad    0xfc
  4202ff:	mov    bh,0x74
  420301:	dec    ecx
  420302:	or     eax,DWORD PTR [eax]
  420304:	loopne 0x420340
  420306:	mov    DWORD PTR [esi+esi*4+0x15],eax
  42030a:	dec    edi
  42030b:	push   eax
  42030c:	cmp    eax,0xcec48001
  420311:	jl     0x42029c
  420313:	inc    esp
  420314:	idiv   BYTE PTR [esi]
  420316:	test   DWORD PTR [esi+esi*8+0x46],ebx
  42031a:	test   DWORD PTR [esi+eiz*8+0x7a],ebx
  42031e:	in     al,0xd6
  420320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420321:	fdivr  st,st(3)
  420323:	mov    edx,ebp
  420325:	xchg   DWORD PTR [eax+0xb2224],esi
  42032b:	add    BYTE PTR [edx],dh
  42032d:	enter  0xff03,0x1d
  420331:	mov    BYTE PTR [eax+0x24],al
  420337:	mov    edx,0xe300000a
  42033c:	xchg   ecx,eax
  42033d:	jl     0x420340
  42033f:	dec    edx
  420340:	or     DWORD PTR [ecx-0x7ac6c9bc],ecx
  420346:	xchg   esi,edx
  420348:	or     eax,DWORD PTR [eax]
  42034a:	add    cl,al
  42034c:	rcl    BYTE PTR [ebx-0x77],1
  42034f:	(bad)
  420352:	call   FWORD PTR [edx]
  420354:	loope  0x4202de
  420356:	lock or eax,0x420866d8
  42035c:	mov    ds:0x143dfeba,al
  420361:	mov    edi,0xfcd02f74
  420366:	lahf   
  420367:	mov    esp,0xb288fc4a
  42036c:	push   cs
  42036d:	xchg   eax,esi
  42036f:	xor    DWORD PTR [ebx],ecx
  420371:	das    
  420372:	test   BYTE PTR [edi+0x4c],0x20
  420376:	push   eax
  420377:	adc    BYTE PTR [eax+0x59],0x0
  42037b:	retf   0xbc8c
  42037e:	jne    0x420373
  420380:	sub    BYTE PTR [ebp-0x3c],bh
  420383:	fisttp DWORD PTR [ebp+0x4e]
  420386:	cld    
  420387:	les    esi,FWORD PTR [edx+0x16ad7240]
  42038d:	in     al,0xe9
  42038f:	repz sub eax,0x4e748ab5
  420395:	add    eax,DWORD PTR [eax]
  420397:	repz jge 0x42039b
  42039a:	mov    dh,0x0
  42039c:	add    BYTE PTR [eax],al
  42039e:	je     0x420386
  4203a0:	add    al,BYTE PTR [eax]
  4203a2:	repz jge 0x4203f6
  4203a5:	adc    al,BYTE PTR [edi+0x40]
  4203a8:	sar    bh,0x71
  4203ab:	(bad)  
  4203ac:	push   ecx
  4203ad:	jae    0x420390
  4203af:	inc    edx
  4203b0:	add    bh,bh
  4203b2:	je     0x4203e2
  4203b4:	aam    0x8
  4203b6:	cld    
  4203b7:	mov    ebx,0x2df23781
  4203bc:	add    BYTE PTR [ecx],bh
  4203be:	xor    ah,BYTE PTR [eax+0x504b54f3]
  4203c4:	push   eax
  4203c5:	cld    
  4203c6:	dec    esp
  4203c7:	jecxz  0x42038d
  4203c9:	and    esp,DWORD PTR [ebx-0xc47e1eb]
  4203cf:	sub    eax,0xaa68ba5d
  4203d4:	mov    DWORD PTR [edi],ebx
  4203d6:	repnz sub eax,0xba743900
  4203dc:	add    BYTE PTR [eax],al
  4203de:	repz xor al,0x84
  4203e1:	sub    eax,0x89002df2
  4203e6:	je     0x4203da
  4203e8:	add    BYTE PTR [eax],al
  4203ea:	repz or BYTE PTR [edx+esi*2],bh
  4203ee:	out    dx,al
  4203ef:	or     BYTE PTR [ebx+0x73],al
  4203f2:	jmp    0x4e81:0x54e746a8
  4203f9:	cld    
  4203fa:	fadd   DWORD PTR [esi]
  4203fc:	jp     0x42047a
  4203fe:	cmp    bl,ch
  420400:	jmp    0xca9d:0x0
  420407:	retf   0x7bff
  42040a:	mov    ah,BYTE PTR [ebp-0x4]
  42040d:	lds    eax,FWORD PTR [ebx-0x1a]
  420410:	or     al,0xb2
  420412:	mov    edx,0xf2b0ae3
  420417:	sti    
  420418:	repz scas al,BYTE PTR es:[edi]
  42041a:	retf   0xffc2
  42041d:	and    al,0xc3
  42041f:	or     al,BYTE PTR [eax]
  420421:	idiv   DWORD PTR [eax+0x6935b46]
  420427:	out    0x3,eax
  420429:	(bad)  
  42042a:	jl     0x4203ce
  42042c:	daa    
  42042d:	test   DWORD PTR [edi+0x5f4897a],0x37ba03e7
  420437:	in     eax,0x87
  420439:	aas    
  42043a:	push   es
  42043b:	out    0x3,eax
  42043d:	js     0x420409
  42043f:	retf   0xacd7
  420442:	inc    ebx
  420443:	xchg   esp,eax
  420444:	sti    
  420445:	push   edi
  420446:	mov    esp,0x26e150ea
  42044b:	repz ret 
  42044d:	inc    esp
  42044e:	mov    ah,BYTE PTR [esi]
  420450:	add    DWORD PTR [eax+0x6d],esi
  420453:	out    0x3,al
  420455:	repz cmp al,0xaa
  420458:	daa    
  420459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42045a:	push   cs
  42045b:	jae    0x420479
  42045d:	fsub   QWORD PTR [edx+0x431c880a]
  420463:	out    0x0,al
  420465:	add    BYTE PTR [esi+0x10],0x45
  420469:	add    BYTE PTR [eax],al
  42046b:	add    bh,bh
  42046d:	mov    DWORD PTR [esi+0x3],esi
  420470:	repz push es
  420472:	sar    bh,cl
  420474:	lods   al,BYTE PTR ds:[esi]
  420475:	(bad)  
  420476:	gs xor ebp,0x42
  42047a:	(bad)  
  42047b:	call   0xe84d8cc8
  420480:	lock (bad) 
  420482:	int    0x91
  420484:	cmp    cl,bl
  420486:	cld    
  420487:	sahf   
  420488:	out    0x47,eax
  42048a:	jb     0x42040c
  42048c:	sub    al,dh
  42048e:	and    edx,DWORD PTR ds:0xc055baf0
  420494:	mov    esi,fs
  420496:	ja     0x420486
  420498:	cmp    eax,0xc5aa3982
  42049d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42049e:	mov    bh,ah
  4204a0:	enter  0x292,0xe9
  4204a4:	lock lea ecx,[ebx-0x3bedcfb]
  4204ab:	jmp    0x5cd91f1
  4204b0:	iret   
  4204b1:	inc    ecx
  4204b2:	cld    
  4204b3:	jmp    0x3f0f93f9
  4204b8:	inc    eax
  4204b9:	or     bh,BYTE PTR [ecx]
  4204bb:	sub    al,BYTE PTR [edx-0x11]
  4204be:	mov    bl,BYTE PTR [ebp+0xc]
  4204c1:	lahf   
  4204c2:	(bad)  
  4204c3:	call   0x6dccd6b8
  4204c8:	or     al,0x23
  4204ca:	(bad)  
  4204cb:	call   0xd129d6c0
  4204d0:	add    BYTE PTR [eax],al
  4204d2:	add    BYTE PTR [edi+0x44],bl
  4204d5:	cld    
  4204d6:	jb     0x420478
  4204d8:	(bad)  
  4204d9:	lock jne 0x42051c
  4204dc:	(bad)  
  4204dd:	frstor [edx-0x45]
  4204e0:	sub    DWORD PTR [ecx-0xb],esp
  4204e3:	mov    ah,0x42
  4204e5:	out    0x19,eax
  4204e7:	jp     0x42052d
  4204e9:	cld    
  4204ea:	sbb    cl,al
  4204ec:	cmp    eax,DWORD PTR [ebx+0xd]
  4204ef:	sub    ecx,DWORD PTR [eax]
  4204f1:	or     eax,0xfc445065
  4204f6:	add    BYTE PTR ds:0xb6245c14,dh
  4204fc:	inc    ecx
  4204fd:	xchg   ecx,eax
  4204fe:	shl    al,0xc4
  420501:	or     eax,DWORD PTR [edx+eiz*4-0x6a000430]
  420508:	pop    esi
  420509:	and    BYTE PTR [ecx+eiz*2],cl
  42050c:	repnz in al,0xb7
  42050f:	je     0x4204e2
  420511:	sti    
  420512:	xor    eax,DWORD PTR [ecx+0x64dbe479]
  420518:	sar    ebx,1
  42051a:	jmp    0x3dd8d5
  42051f:	pop    ss
  420520:	pop    edi
  420521:	and    BYTE PTR [eax+0x72],dl
  420524:	xor    esi,DWORD PTR [eax+eax*1-0x17ce4376]
  42052b:	cwde   
  42052c:	inc    ebp
  42052d:	cld    
  42052e:	mov    WORD PTR [esi],ds
  420530:	out    dx,eax
  420531:	inc    DWORD PTR [eax]
  420533:	call   0x0:0xff5005
  42053a:	fdivr  QWORD PTR [ebp+0x4598a039]
  420540:	cld    
  420541:	cmp    BYTE PTR [esi+0x4c744be9],al
  420547:	shl    BYTE PTR [eax+0x24],1
  42054a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42054b:	rcl    bl,1
  42054d:	cmp    DWORD PTR [esi+0x5c7447e9],edx
  420553:	shl    BYTE PTR [eax+0x24],1
  420556:	xchg   edx,eax
  420557:	rcl    bl,1
  420559:	lea    ecx,[esi+0x11e80fe9]
  42055f:	push   esp
  420560:	sti    
  420561:	call   DWORD PTR [edi-0x75e7dfb2]
  420567:	rcl    dl,1
  420569:	lea    ecx,[esi+0xa00a7e9]
  42056f:	add    eax,0xd9f3ace8
  420574:	add    eax,DWORD PTR [eax]
  420576:	jbe    0x420563
  420578:	daa    
  420579:	push   eax
  42057a:	or     ebp,ebx
  42057c:	xchg   ebp,eax
  42057d:	push   esp
  42057f:	pop    ds
  420580:	scas   al,BYTE PTR es:[edi]
  420581:	pop    eax
  420582:	js     0x4205d7
  420584:	scas   eax,DWORD PTR es:[edi]
  420585:	sar    BYTE PTR [esi],0xa5
  420588:	pop    esp
  420589:	adc    bh,0x66
  42058c:	sub    ebx,0xe7b4fd13
  420592:	sub    al,0x65
  420594:	dec    edx
  420595:	cld    
  420596:	js     0x4205ab
  420598:	clc    
  420599:	xor    DWORD PTR [ebx+0x8acc42],0x0
  4205a0:	add    BYTE PTR [edi],ch
  4205a2:	dec    edx
  4205a3:	cld    
  4205a4:	dec    edi
  4205a5:	sbb    DWORD PTR [esi+0x7f],edx
  4205a8:	inc    ebx
  4205a9:	iret   
  4205aa:	push   ebp
  4205ab:	mov    al,0x69
  4205ad:	repz or BYTE PTR [ebp+0x12],0x2b
  4205b2:	xchg   edx,eax
  4205b3:	sar    edi,0x77
  4205b6:	out    dx,al
  4205b7:	enter  0x7060,0x52
  4205bb:	and    al,0x14
  4205bd:	repz sub DWORD PTR [eax+eax*4+0x2409f7],0x734d2ae7
  4205c9:	femms  
  4205cb:	pop    esp
  4205cc:	dec    edx
  4205cd:	cwde   
  4205ce:	jmp    0x9b758820
  4205d3:	mov    eax,0x2051c7fc
  4205d8:	call   0xfc8cecbc
  4205dd:	push   0xbfd887e6
  4205e2:	inc    esi
  4205e3:	(bad)  
  4205e4:	inc    ecx
  4205e6:	add    eax,0x3125ca24
  4205eb:	test   BYTE PTR [edi+0x190d06a7],bh
  4205f1:	lock cli 
  4205f3:	mov    al,cl
  4205f5:	or     al,0xb
  4205f7:	not    DWORD PTR [eax+0x7d506c4]
  4205fd:	shl    DWORD PTR [edx+0x29],cl
  420600:	add    al,0xe3
  420602:	mov    edx,0x78ef
  420607:	add    BYTE PTR [ecx],bh
  420609:	and    edi,edx
  42060b:	adc    BYTE PTR [esi+eax*1-0x2e95fc19],0x2
  420613:	jnp    0x42066a
  420615:	ja     0x4205fd
  420617:	add    esi,ebx
  420619:	rcl    DWORD PTR [ebp+0x271464f7],cl
  42061f:	add    al,0xbe
  420621:	mov    ecx,0xe7414cca
  420626:	jge    0x4205ff
  420628:	or     BYTE PTR [eax-0x5],al
  42062b:	jmp    0x42066c
  42062d:	inc    eax
  42062e:	repz repz lahf 
  420631:	mov    ecx,0xf214cf2
  420636:	pop    esi
  420637:	test   esp,0x2603a972
  42063d:	fsub   QWORD PTR [ecx+0x67]
  420640:	sbb    DWORD PTR [ebp+0x6],eax
  420643:	add    al,0x20
  420645:	mov    WORD PTR [edx-0x7d],cs
  420648:	pop    eax
  420649:	push   edx
  42064a:	call   0x2e15f952
  42064f:	xlat   BYTE PTR ds:[ebx]
  420650:	or     al,0x8c
  420652:	ret    
  420653:	sti    
  420654:	push   edi
  420655:	mov    ecx,0xeec14cca
  42065a:	adc    eax,0x934010d7
  42065f:	and    edi,DWORD PTR [esi]
  420661:	mov    ecx,0x1ec14ce2
  420666:	(bad)  
  420667:	(bad)  
  420668:	add    BYTE PTR [eax-0x1],al
  42066b:	jnp    0x42066d
  42066d:	add    BYTE PTR [eax],al
  42066f:	and    BYTE PTR [edx+0x72],al
  420672:	frstor [ebx+0x42]
  420675:	adc    ch,BYTE PTR ds:0x6fffc653
  42067b:	xor    eax,0x7a982eb
  420680:	xchg   edi,esp
  420682:	jmp    0x2d380d77
  420687:	retf   
  420688:	aas    
  420689:	or     eax,0xfc3e1e65
  42068e:	jmp    0x654e6600
  420693:	es ds cld 
  420696:	jmp    0xe94dc80e
  42069b:	iret   
  42069c:	mov    cl,bl
  42069e:	jmp    0x342a0d93
  4206a3:	stc    
  4206a4:	cmp    edi,esp
  4206a6:	ins    DWORD PTR es:[edi],dx
  4206a7:	xor    BYTE PTR [ebx],cl
  4206a9:	test   BYTE PTR [esi],bh
  4206ab:	lock push es
  4206ad:	add    BYTE PTR [esi+0x3],dh
  4206b0:	cmp    al,0x12
  4206b2:	adc    eax,0x6bfffea0
  4206b7:	xor    BYTE PTR [ebx],cl
  4206b9:	test   BYTE PTR [esi-0x46fff910],cl
  4206bf:	sub    cl,bh
  4206c1:	(bad)  
  4206c2:	dec    edi
  4206c3:	das    
  4206c4:	test   DWORD PTR [edx-0x7],eax
  4206c7:	ins    DWORD PTR es:[edi],dx
  4206c8:	jle    0x4206d6
  4206ca:	fidivr WORD PTR gs:0xd39ee9fc
  4206d1:	mov    dl,dh
  4206d3:	add    BYTE PTR [eax],al
  4206d5:	add    BYTE PTR [edx],bh
  4206d7:	ds dec esp
  4206d9:	adc    ecx,ebp
  4206db:	inc    ebp
  4206dc:	std    
  4206dd:	push   ds
  4206de:	retf   
  4206df:	sub    eax,0x8a0c9c86
  4206e4:	cmc    
  4206e5:	xchg   ebp,eax
  4206e6:	cs out dx,eax
  4206e8:	xor    al,BYTE PTR [eax]
  4206ea:	jbe    0x42068a
  4206ec:	aas    
  4206ed:	add    BYTE PTR [ecx-0x6872f7b4],ah
  4206f3:	adc    eax,0x790dfff9
  4206f8:	sti    
  4206f9:	aaa    
  4206fa:	mov    ecx,eax
  4206fc:	or     al,0xb3
  4206fe:	fiadd  DWORD PTR [edx]
  420700:	ret    
  420701:	test   esi,esp
  420703:	iret   
  420704:	sti    
  420705:	dec    DWORD PTR [ecx]
  420707:	or     bh,ch
  420709:	jmp    FWORD PTR ds:0x1a114838
  42070f:	add    eax,DWORD PTR [ecx-0x78bcd940]
  420715:	test   DWORD PTR [esi-0x2e000431],ebx
  42071b:	push   es
  42071c:	dec    esp
  42071d:	lods   al,BYTE PTR ds:[esi]
  42071e:	sbb    DWORD PTR [ebx],eax
  420720:	jno    0x420754
  420722:	fs pop es
  420724:	and    BYTE PTR [ecx+ecx*1-0x3b8beffd],ch
  42072b:	adc    al,0xb1
  42072d:	in     al,0x2f
  42072f:	sar    bl,cl
  420731:	lea    edx,[edi]
  420733:	pop    ss
  420734:	stc    
  420735:	dec    DWORD PTR ds:0x37fb73
  42073b:	add    BYTE PTR [eax],al
  42073d:	and    ebx,DWORD PTR [eax-0x2dd20220]
  420743:	ret    
  420744:	test   esi,esp
  420746:	iret   
  420747:	sti    
  420748:	dec    DWORD PTR [eax+0x2dfffd09]
  42074e:	cmp    BYTE PTR [ecx+edx*1-0x66],cl
  420752:	or     DWORD PTR [ecx+0x6433a7c0],eax
  420758:	add    dl,cl
  42075a:	add    al,BYTE PTR [eax]
  42075c:	push   0x4a
  42075e:	shl    BYTE PTR [ecx+0x24],1
  420761:	in     eax,dx
  420762:	adc    eax,0xe3f315fb
  420767:	cmc    
  420768:	aas    
  420769:	repz or al,0xcf
  42076c:	das    
  42076d:	xor    al,0x5a
  42076f:	mov    al,ds:0xa92fb311
  420774:	pop    ebp
  420775:	js     0x4207e1
  420777:	adc    al,0x59
  420779:	sub    dh,cl
  42077b:	pop    ss
  42077c:	add    BYTE PTR [esi+0x70e754b8],bh
  420782:	jbe    0x4207ca
  420784:	cld    
  420785:	outs   dx,DWORD PTR ds:[esi]
  420786:	outs   dx,DWORD PTR ds:[esi]
  420787:	iret   
  420788:	add    al,0x9e
  42078a:	dec    esp
  42078b:	pop    ds
  42078c:	push   eax
  42078d:	inc    edi
  42078e:	lock add edx,DWORD PTR [ecx+0x45]
  420792:	mov    ecx,0x1c3c13cf
  420797:	dec    ecx
  420798:	jb     0x42079d
  42079a:	enter  0xfd03,0x5e
  42079e:	ss dec ecx
  4207a0:	adc    al,BYTE PTR [eax]
  4207a2:	add    BYTE PTR [eax],al
  4207a4:	daa    
  4207a5:	retf   0xffc5
  4207a8:	push   ds
  4207a9:	xchg   ebp,eax
  4207aa:	iret   
  4207ab:	punpckhbw mm2,QWORD PTR [esi-0x7b188db7]
  4207b2:	iret   
  4207b3:	pop    es
  4207b4:	lods   al,BYTE PTR ds:[esi]
  4207b5:	push   ebx
  4207b6:	mov    al,0xab
  4207b8:	xor    BYTE PTR [esi],ch
  4207ba:	jge    0x420793
  4207bc:	jbe    0x42076b
  4207be:	retf   
  4207bf:	push   ebx
  4207c0:	outs   dx,BYTE PTR ds:[esi]
  4207c1:	leave  
  4207c2:	enter  0x764f,0xd4
  4207c6:	int3   
  4207c7:	dec    ebx
  4207c8:	jo     0x4207de
  4207ca:	add    al,0x74
  4207cc:	xor    al,0xb1
  4207ce:	(bad)  
  4207cf:	psllq  mm7,QWORD PTR [ecx-0x3d]
  4207d3:	mov    ebp,0xffc5862f
  4207d8:	mov    esi,0x1ebeff4
  4207dd:	outs   dx,BYTE PTR ds:[esi]
  4207de:	add    dh,dh
  4207e0:	out    dx,al
  4207e1:	push   es
  4207e2:	mov    ebx,0xe806b38b
  4207e7:	rcl    BYTE PTR [ecx],1
  4207e9:	scas   eax,DWORD PTR es:[edi]
  4207ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207eb:	sar    esp,1
  4207ed:	push   es
  4207ee:	push   cs
  4207ef:	lock and al,0x19
  4207f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207f3:	add    esi,DWORD PTR [eax+0x47]
  4207f6:	jb     0x4207f4
  4207f8:	jnp    0x420839
  4207fa:	(bad)  
  4207fb:	mov    al,ds:0x5ded3bb6
  420800:	repnz clc 
  420802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420803:	or     BYTE PTR [ebx+esi*4-0x1b],0x84
  420808:	add    BYTE PTR [eax],al
  42080a:	add    cl,bh
  42080c:	ror    BYTE PTR [esi+0x3506fcc5],cl
  420812:	dec    ecx
  420813:	loope  0x42084b
  420815:	fadd   st,st(3)
  420817:	in     al,dx
  420818:	fcomp  QWORD PTR [edi*2+0x4613dfb3]
  42081f:	in     al,dx
  420820:	push   es
  420821:	aas    
  420822:	pop    edx
  420823:	aad    0x3b
  420825:	out    0xdb,al
  420827:	xchg   esp,eax
  420828:	jbe    0x420853
  42082a:	add    al,0x1d
  42082c:	cmp    al,0xfb
  42082e:	adc    esp,ebp
  420830:	(bad)  
  420831:	out    0x84,al
  420833:	mov    al,0xa
  420835:	sbb    eax,0xe708b25c
  42083a:	add    edi,DWORD PTR [edx+0x44]
  42083d:	test   eax,0x692a6baf
  420842:	pop    eax
  420843:	int3   
  420844:	xlat   BYTE PTR ds:[ebx]
  420845:	mov    ebp,0xe7059e88
  42084a:	add    ebx,DWORD PTR [esi]
  42084c:	mov    cl,0xe6
  42084e:	mov    cl,0x7f
  420850:	adc    DWORD PTR [ebx],edx
  420852:	repnz mov ah,0x6
  420855:	push   0x40
  420857:	clc    
  420858:	mov    DWORD PTR [edi+edi*8-0x900724c],esp
  42085f:	mov    eax,0xaa2fc77c
  420864:	mov    es,WORD PTR [edx-0xf]
  420867:	leave  
  420868:	sar    DWORD PTR [ebx+0x6c],0x71
  42086c:	mov    ebx,0xe8ff
  420871:	add    al,dh
  420873:	(bad)  
  420874:	out    0x36,eax
  420876:	xchg   esi,eax
  420877:	cmp    edi,esp
  420879:	xchg   ebx,eax
  42087a:	lock mov al,0x27
  42087d:	ins    BYTE PTR es:[edi],dx
  42087e:	fs push ebx
  420880:	dec    edi
  420881:	add    edi,ecx
  420883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420884:	(bad)  
  420885:	call   0x34ccebc0
  42088a:	fist   WORD PTR [eax+0x6f07985]
  420890:	add    BYTE PTR [eax],bh
  420892:	lahf   
  420893:	xchg   ebp,eax
  420894:	pop    ds
  420895:	jmp    0xc73e828a
  42089a:	lock push es
  42089c:	push   0xffffffe8
  42089e:	addr16 inc ebx
  4208a0:	out    0x5b,eax
  4208a2:	(bad)  
  4208a3:	cmp    bh,ah
  4208a5:	fiadd  WORD PTR [ebx+0x4fe86952]
  4208ab:	inc    ebx
  4208ac:	mov    esi,0x8022c08a
  4208b1:	or     esi,edi
  4208b3:	push   es
  4208b4:	or     eax,0xc10f3056
  4208b9:	jo     0x42092d
  4208bb:	and    al,0xfe
  4208bd:	call   0x6240b5b2
  4208c2:	xor    esp,DWORD PTR [edx]
  4208c4:	ins    BYTE PTR es:[edi],dx
  4208c5:	or     ebp,edi
  4208c7:	push   es
  4208c8:	or     eax,0xfeafd89e
  4208cd:	jno    0x420902
  4208cf:	jns    0x4208b1
  4208d1:	stc    
  4208d2:	sbb    dl,bl
  4208d4:	popa   
  4208d5:	jmp    0xf04208da
  4208da:	or     esi,DWORD PTR [ebp-0x40c4e600]
  4208e0:	pop    edi
  4208e1:	jecxz  0x42086a
  4208e3:	out    0x1,al
  4208e5:	dec    edx
  4208e6:	push   es
  4208e7:	xchg   esi,eax
  4208e9:	cmp    ebp,0x695a04be
  4208ef:	xchg   esp,ebp
  4208f1:	mov    esi,DWORD PTR [edi-0x45]
  4208f4:	out    dx,al
  4208f5:	dec    ebx
  4208f6:	push   es
  4208f7:	add    BYTE PTR [edi+0x70],dl
  4208fa:	push   es
  4208fb:	dec    edi
  4208fc:	dec    DWORD PTR [edi+0xa]
  4208ff:	push   ss
  420900:	inc    eax
  420901:	sbb    al,BYTE PTR [ebx+0x47970cc0]
  420907:	dec    eax
  420908:	push   eax
  420909:	jo     0x42090d
  42090b:	test   DWORD PTR [ebx],edi
  42090d:	mov    ch,0xbf
  42090f:	inc    edi
  420910:	add    al,0x81
  420912:	stc    
  420913:	in     al,0x25
  420915:	sbb    eax,ecx
  420917:	sti    
  420918:	mov    ecx,DWORD PTR [esi+eax*8-0x43250004]
  42091f:	cmp    DWORD PTR [eax],esi
  420921:	mov    esp,0x988fc45
  420926:	dec    edi
  420927:	data16 adc BYTE PTR [edi],dh
  42092a:	mov    ecx,0x5da00c4
  42092f:	push   eax
  420930:	lea    ebx,[ecx-0x7d]
  420933:	cld    
  420934:	dec    edx
  420936:	jne    0x420933
  420938:	xlat   BYTE PTR ds:[ebx]
  420939:	repnz add al,0xfd
  42093c:	inc    DWORD PTR [eax]
  42093e:	add    BYTE PTR [eax],al
  420940:	call   0x5:0x9ad882be
  420947:	push   eax
  420948:	pop    ss
  420949:	xchg   BYTE PTR [eax+eax*1-0xaffa76],cl
  420950:	int    0x85
  420952:	rcr    BYTE PTR [eax],0x25
  420955:	mov    eax,ebp
  420957:	add    esi,ebx
  420959:	das    
  42095a:	add    BYTE PTR [ebx+0xc36d],cl
  420960:	repz lahf 
  420962:	ja     0x4208e9
  420964:	inc    edi
  420965:	add    BYTE PTR cs:[eax],al
  420968:	ret    
  420969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096a:	dec    eax
  42096b:	out    0x53,eax
  42096d:	add    BYTE PTR cs:[eax],al
  420970:	dec    esp
  420971:	fsincos 
  420973:	add    eax,0x85772ff3
  420978:	repz sub DWORD PTR [eax],eax
  42097b:	add    BYTE PTR [ebx-0xf088226],ah
  420981:	das    
  420982:	add    BYTE PTR [eax+0x1b],dl
  420985:	dec    eax
  420986:	(bad)  
  420987:	push   ebx
  420989:	mov    ds:0x2fed137d,al
  42098e:	add    BYTE PTR [eax+0x78],dl
  420991:	ins    BYTE PTR es:[edi],dx
  420992:	pop    eax
  420993:	xchg   cl,dh
  420995:	das    
  420996:	add    BYTE PTR [ebp+0x4ffc],bh
  42099c:	mov    DWORD PTR [esi],ebp
  42099e:	jns    0x420964
  4209a0:	(bad)  [ebx+eiz*8+0xff]
  4209a7:	in     al,0x29
  4209a9:	lea    edi,[edi-0x790fb14e]
  4209af:	cs push 0xffffffd6
  4209b2:	(bad)  
  4209b3:	jns    0x420a1e
  4209b5:	pop    eax
  4209b6:	xchg   DWORD PTR [edx+0x2e],edx
  4209b9:	add    BYTE PTR ds:0x42f96e84,cl
  4209bf:	mov    bh,0xe9
  4209c1:	jp     0x420943
  4209c3:	xchg   ebp,eax
  4209c4:	das    
  4209c5:	add    BYTE PTR [eax],al
  4209c7:	js     0x420969
  4209c9:	in     al,0x7
  4209cb:	repz sub eax,0x2f89807b
  4209d1:	add    BYTE PTR [eax],al
  4209d3:	js     0x4209dc
  4209d5:	sub    bh,BYTE PTR [ebx+esi*4]
  4209d8:	shl    BYTE PTR [ecx-0x29],cl
  4209db:	ror    BYTE PTR [esi],1
  4209dd:	mov    ebp,0xe2c269ae
  4209e2:	mov    bl,0xda
  4209e4:	cli    
  4209e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e6:	js     0x4209a3
  4209e8:	retf   0x3e71
  4209eb:	push   esp
  4209ec:	shl    BYTE PTR [esi],cl
  4209ee:	inc    ebp
  4209ef:	push   edi
  4209f0:	mov    WORD PTR [ebx-0x29058439],fs
  4209f6:	in     eax,dx
  4209f7:	add    al,0x7
  4209f9:	jo     0x42097d
  4209fb:	xor    BYTE PTR [edi],al
  4209fd:	out    0x3,eax
  4209ff:	leave  
  420a00:	push   ss
  420a01:	pop    esp
  420a02:	sub    BYTE PTR [esi+eax*1-0x763cfc19],0x69
  420a0a:	cmp    eax,DWORD PTR [eax]
  420a0c:	add    BYTE PTR [eax],al
  420a0e:	sbb    al,0x38
  420a10:	out    0xb3,al
  420a12:	pop    ss
  420a13:	push   eax
  420a14:	jle    0x420a17
  420a16:	or     al,0x38
  420a18:	out    0x76,al
  420a1a:	jno    0x4209b3
  420a1c:	out    0x3,al
  420a1e:	repz (bad) 
  420a20:	arpl   WORD PTR [ecx+0x3e7071c],ax
  420a26:	inc    ebx
  420a27:	cmp    BYTE PTR [ebp+0x4f1eb081],bl
  420a2d:	add    ah,bl
  420a2f:	aaa    
  420a30:	out    0x76,al
  420a32:	jno    0x4209c8
  420a34:	out    0x3,eax
  420a36:	repz (bad) 
  420a38:	jae    0x4209cb
  420a3a:	test   al,0x5
  420a3c:	out    0x3,eax
  420a3e:	dec    ecx
  420a3f:	pop    es
  420a40:	push   0x3c
  420a42:	mov    bh,0x2e
  420a44:	call   DWORD PTR [ecx-0x52]
  420a47:	aaa    
  420a48:	jno    0x420ac9
  420a4a:	push   esi
  420a4b:	add    eax,0x837403e7
  420a50:	inc    DWORD PTR [edx+esi*8-0x70fcfffa]
  420a57:	mov    WORD PTR [edx+0x6f08f],es
  420a5d:	mov    ecx,0xeae38705
  420a62:	lock push es
  420a64:	push   eax
  420a65:	dec    esi
  420a66:	push   ds
  420a67:	xchg   ebx,eax
  420a69:	cmc    
  420a6a:	dec    eax
  420a6b:	add    edi,edi
  420a6d:	call   0x7bc49662
  420a72:	add    BYTE PTR [eax],al
  420a74:	add    al,dh
  420a76:	push   es
  420a77:	add    BYTE PTR [ecx-0x1508893b],bl
  420a7d:	lock push es
  420a7f:	push   0xffffffe9
  420a81:	jae    0x420ac2
  420a83:	cld    
  420a84:	add    ebx,ebx
  420a86:	xor    al,0xfd
  420a88:	push   cs
  420a89:	stos   BYTE PTR es:[edi],al
  420a8a:	test   ch,cl
  420a8c:	call   0x6ac91181
  420a91:	pop    ds
  420a92:	add    DWORD PTR [eax],eax
  420a94:	jmp    0x64cd09d3
  420a99:	int    0x38
  420a9b:	cld    
  420a9c:	jmp    0xe9c296e1
  420aa1:	(bad)  
  420aa2:	ss cld 
  420aa4:	cmp    DWORD PTR [esi-0x1b5a7fae],ebp
  420aaa:	scas   al,BYTE PTR es:[edi]
  420aab:	add    ebp,eax
  420aad:	lock push es
  420aaf:	mov    esp,DWORD PTR [edx+eiz*1+0x35]
  420ab3:	cld    
  420ab4:	jmp    0xd5f28c59
  420ab9:	into   
  420aba:	ss cld 
  420abc:	adc    ebp,edi
  420abe:	xchg   edi,eax
  420ac0:	sahf   
  420ac1:	sbb    BYTE PTR [ebx],ah
  420ac3:	out    dx,al
  420ac4:	xchg   edi,eax
  420ac5:	das    
  420ac6:	jg     0x420a4a
  420ac8:	xor    ecx,0x6
  420acb:	add    BYTE PTR [eax],al
  420acd:	int    0x6c
  420acf:	test   DWORD PTR [ebx-0x3cd42],eax
  420ad5:	dec    eax
  420ad7:	add    BYTE PTR [eax],al
  420ad9:	add    BYTE PTR [eax],al
  420adb:	add    bh,ah
  420add:	scas   eax,DWORD PTR es:[edi]
  420ade:	call   0xfd742964
  420ae3:	dec    DWORD PTR [edx+0x1cf8a187]
  420ae9:	retf   
  420aea:	sti    
  420aeb:	add    BYTE PTR [edi-0x46],dl
  420aee:	cld    
  420aef:	call   FWORD PTR [edx+0x7a]
  420af2:	mov    DWORD PTR [ebp-0x4344e],eax
  420af8:	mov    dl,0x94
  420afa:	sbb    al,BYTE PTR [eax]
  420afc:	pop    edx
  420afd:	xchg   DWORD PTR [ecx+0xc],edi
  420b00:	pop    edx
  420b01:	inc    esi
  420b02:	or     eax,0x873e878b
  420b07:	dec    ebp
  420b08:	push   edx
  420b09:	mov    ebp,0xcafcf881
  420b0e:	sti    
  420b0f:	call   0x3e361b
  420b14:	jecxz  0x420add
  420b16:	add    al,0x0
  420b18:	ja     0x420ac9
  420b1a:	call   0x7e0401a2
  420b1f:	in     al,dx
  420b20:	xchg   BYTE PTR [eax],al
  420b22:	add    BYTE PTR [eax],al
  420b24:	lds    edx,FWORD PTR [edi+0xafa24b8]
  420b2a:	add    BYTE PTR [eax],al
  420b2c:	mov    dl,0x9d
  420b2e:	ret    
  420b2f:	(bad)  
  420b30:	lods   eax,DWORD PTR ds:[esi]
  420b31:	lea    esp,[eax+0x24]
  420b34:	loop   0x420b3f
  420b36:	mov    DWORD PTR [esi+eiz*8-0x25fffecd],eax
  420b3d:	pop    ecx
  420b3e:	mov    DWORD PTR [eax+eax*1+0x0],eax
  420b42:	add    BYTE PTR [esi-0x43a417fb],dh
  420b48:	or     DWORD PTR [eax],eax
  420b4a:	mov    esi,ebx
  420b4c:	jmp    0x0:0x1e9dba0b
  420b53:	jbe    0x420b38
  420b55:	out    0x7,eax
  420b57:	mov    ecx,esi
  420b59:	and    BYTE PTR [eax],al
  420b5b:	repz sbb al,0x8d
  420b5e:	loop   0x420b8e
  420b60:	bound  eax,QWORD PTR [edi]
  420b62:	add    BYTE PTR [eax+0x7b],bh
  420b65:	in     al,0x3
  420b67:	and    BYTE PTR [esi-0x71],bh
  420b6a:	mov    ah,0x61
  420b6c:	push   ds
  420b6d:	add    BYTE PTR [eax],al
  420b6f:	pop    ebx
  420b70:	xchg   ebp,eax
  420b71:	cs std 
  420b73:	mov    al,fs:0x65e7fc3b
  420b79:	cmc    
  420b7a:	fadd   st,st(0)
  420b7c:	nop
  420b7d:	stos   BYTE PTR es:[edi],al
  420b7e:	adc    esp,DWORD PTR [ebp+0xf73418f]
  420b84:	inc    eax
  420b85:	aad    0x50
  420b87:	cmp    al,0x3a
  420b89:	mov    al,0x11
  420b8b:	mov    bl,0x1f
  420b8d:	std    
  420b8e:	shr    BYTE PTR [ebp-0x1cf470a3],0x47
  420b95:	(bad)  
  420b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b98:	sub    al,0x85
  420b9a:	idiv   edi
  420b9c:	mov    edx,0x89ea87eb
  420ba1:	or     ch,bh
  420ba3:	jg     0x420ba8
  420ba5:	sbb    BYTE PTR [ebx+0x74000000],cl
  420bab:	lea    eax,[ebx]
  420bad:	add    bl,dh
  420baf:	out    dx,eax
  420bb0:	inc    eax
  420bb1:	adc    ah,BYTE PTR [ebx]
  420bb3:	cmp    al,0xc0
  420bb5:	(bad)  
  420bb6:	jns    0x420b9a
  420bb8:	out    0x1f,eax
  420bba:	push   0xffffffad
  420bbc:	outs   dx,BYTE PTR ds:[esi]
  420bbd:	(bad)  
  420bbe:	aam    0x1e
  420bc0:	test   ebx,eax
  420bc2:	jmp    FWORD PTR [ebp+0x7285e03]
  420bc8:	test   eax,0xa6f8f30f
  420bcd:	cs mov edi,0xf0e82280
  420bd3:	xlat   BYTE PTR ds:[ebx]
  420bd4:	xor    al,0x91
  420bd6:	pop    edi
  420bd7:	jns    0x420bc0
  420bd9:	add    esi,ebx
  420bdb:	push   ds
  420bdc:	test   BYTE PTR [eax],dh
  420bde:	xchg   esi,eax
  420bdf:	xor    al,0x69
  420be1:	cmp    ecx,DWORD PTR [edi-0x5408e345]
  420be7:	fdivr  DWORD PTR [ecx-0x49231f53]
  420bed:	inc    edx
  420bee:	add    bl,ch
  420bf0:	push   es
  420bf1:	xlat   BYTE PTR ds:[ebx]
  420bf2:	ret    
  420bf3:	xor    esi,ebx
  420bf5:	mov    bl,0x2
  420bf7:	(bad)  
  420bf8:	out    0xfe,al
  420bfa:	xor    esi,DWORD PTR [ebp-0x9176f0c]
  420c00:	out    dx,al
  420c01:	fmul   QWORD PTR [edi-0x45]
  420c04:	in     eax,0x86
  420c06:	cmp    al,0x1b
  420c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c09:	in     al,dx
  420c0a:	je     0x420c1a
  420c0c:	xchg   ecx,eax
  420c0d:	or     eax,DWORD PTR [eax]
  420c0f:	add    BYTE PTR [eax],al
  420c11:	ss mov ebx,0x8c7817ca
  420c17:	and    al,0x4
  420c19:	repz push es
  420c1b:	xchg   edi,eax
  420c1c:	inc    edx
  420c1d:	add    edi,esi
  420c1f:	aam    0xc3
  420c21:	adc    al,0x81
  420c23:	stos   BYTE PTR es:[edi],al
  420c24:	out    0xec,eax
  420c26:	jge    0x420c8d
  420c28:	push   ecx
  420c29:	add    eax,0x3084e634
  420c2e:	add    edx,DWORD PTR [edi-0x57306afd]
  420c34:	adc    bl,dh
  420c36:	clc    
  420c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c38:	sub    eax,0xe8327fdf
  420c3d:	lock xlat BYTE PTR ds:[ebx]
  420c3f:	adc    al,0x8f
  420c41:	test   BYTE PTR [eax-0x1],bl
  420c44:	out    0xf0,eax
  420c46:	push   es
  420c47:	call   0xfc74207b
  420c4c:	push   0xffffffff
  420c4e:	xor    dh,BYTE PTR [ebx-0x31]
  420c51:	mov    edi,0x5d3a504e
  420c56:	pop    ss
  420c57:	push   esi
  420c58:	cmp    DWORD PTR [edx],esi
  420c5a:	mov    eax,0xd6c7c923
  420c5f:	cld    
  420c60:	aam    0x60
  420c62:	adc    eax,0x468fe940
  420c67:	jge    0x420c40
  420c69:	jne    0x420c6a
  420c6b:	das    
  420c6c:	and    DWORD PTR [eax+0x6fe67332],ebx
  420c72:	cmp    edx,DWORD PTR [ebx]
  420c74:	aam    0x0
  420c76:	add    BYTE PTR [eax],al
  420c78:	stc    
  420c79:	jle    0x420c91
  420c7b:	cdq    
  420c7c:	lock aam 0x58
  420c7f:	sub    ebp,ebx
  420c81:	push   es
  420c82:	xor    ch,BYTE PTR [ecx]
  420c84:	push   es
  420c85:	cmp    edx,DWORD PTR [edx+0x62]
  420c88:	add    esi,DWORD PTR [ebp+0x6eee5eb]
  420c8e:	add    BYTE PTR [edx-0x179825e6],bh
  420c94:	icebp  
  420c95:	push   es
  420c96:	add    BYTE PTR [esp+esi*2+0x2f],ah
  420c9a:	cli    
  420c9b:	push   cs
  420c9c:	mov    dl,0xc3
  420c9e:	cld    
  420c9f:	jl     0x420c89
  420ca1:	xor    DWORD PTR [edx],edx
  420ca3:	and    eax,0x61ffc6fe
  420ca8:	scas   eax,DWORD PTR es:[edi]
  420ca9:	mov    al,bl
  420cab:	outs   dx,DWORD PTR ds:[esi]
  420cac:	pop    ss
  420cad:	idiv   ah
  420caf:	sbb    bh,BYTE PTR [ecx+0x44a5b532]
  420cb5:	repz jmp DWORD PTR [ecx-0x7e]
  420cb9:	jb     0x420d26
  420cbb:	sub    edi,ebp
  420cbd:	jge    0x420c41
  420cbf:	add    BYTE PTR [esi-0x500040f],dh
  420cc5:	cmp    DWORD PTR [edi-0x5118718],0xffffffff
  420ccc:	dec    edi
  420ccd:	(bad)  
  420cce:	jo     0x420ce2
  420cd0:	dec    ecx
  420cd1:	ror    BYTE PTR [eax],0x47
  420cd4:	dec    ecx
  420cd5:	enter  0x7244,0x63
  420cd9:	cmp    edi,DWORD PTR [edi+ebx*2-0x2c000000]
  420ce0:	push   ebx
  420ce1:	(bad)
  420ce4:	push   es
  420ce5:	inc    DWORD PTR [bp-0x78a0]
  420cea:	xchg   DWORD PTR [edx+0x62],edx
  420ced:	cmp    al,0x0
  420cef:	jno    0x420cd2
  420cf1:	push   ecx
  420cf2:	mov    esp,DWORD PTR [esi]
  420cf4:	test   eax,ebp
  420cf6:	hlt    
  420cf7:	lea    eax,[esi]
  420cf9:	add    BYTE PTR [esi-0x53],dl
  420cfc:	pop    esi
  420cfd:	mov    BYTE PTR [ecx],al
  420cff:	pop    edx
  420d00:	push   es
  420d01:	dec    edi
  420d02:	call   0x3cbda0
  420d07:	adc    eax,0x9a116019
  420d0c:	push   es
  420d0d:	test   DWORD PTR [ebx+0x4e],eax
  420d10:	mov    esi,esp
  420d12:	call   FWORD PTR [edi-0x1]
  420d15:	xor    eax,eax
  420d17:	jecxz  0x420d57
  420d19:	(bad)  
  420d1a:	call   FWORD PTR [edx]
  420d1c:	cmp    esi,edx
  420d1e:	push   esi
  420d1f:	(bad)  
  420d20:	dec    eax
  420d21:	adc    BYTE PTR [eax-0x7e],0x15
  420d25:	xchg   ebp,eax
  420d26:	mov    BYTE PTR [esi+0x4c28fdd],cl
  420d2c:	repnz mov DWORD PTR [ebp-0x72],eax
  420d30:	push   ebp
  420d31:	sti    
  420d32:	adc    eax,0x400eea
  420d37:	add    DWORD PTR [ebp+0x4],0x3b
  420d3b:	repz popa 
  420d3d:	mov    bh,0xd4
  420d3f:	pop    ecx
  420d40:	pop    ds
  420d41:	pop    DWORD PTR [edx+0x0]
  420d44:	add    BYTE PTR [eax],al
  420d46:	ja     0x420d57
  420d48:	lods   al,BYTE PTR ds:[esi]
  420d49:	adc    DWORD PTR [edx-0x49],edi
  420d4c:	xchg   edi,esp
  420d4e:	inc    ecx
  420d4f:	pop    esi
  420d50:	cmp    eax,0x87ea76fc
  420d55:	dec    edi
  420d56:	and    eax,0x1bbd0316
  420d5b:	(bad)  
  420d5c:	sar    bh,0x45
  420d5f:	cdq    
  420d60:	push   ss
  420d61:	mov    eax,0x8703e001
  420d66:	xor    BYTE PTR [ecx+edi*8],bh
  420d69:	lds    ebx,FWORD PTR [edi]
  420d6b:	ret    
  420d6c:	test   eax,0x87e27ffe
  420d71:	dec    edi
  420d72:	sbb    edi,DWORD PTR [esi]
  420d74:	call   0xcc19e8f0
  420d79:	shl    DWORD PTR [ebp-0x30],0x8e
  420d7d:	inc    edx
  420d7e:	ja     0x420def
  420d80:	rcl    BYTE PTR [esp+eiz*2+0x3a],cl
  420d84:	fmul   DWORD PTR [esi]
  420d86:	mov    bl,0x1f
  420d88:	mov    eax,DWORD PTR [eax-0x1]
  420d8b:	add    al,0x46
  420d8d:	jae    0x420e08
  420d8f:	inc    ebp
  420d90:	add    ecx,DWORD PTR [ebx+0x67d3abae]
  420d96:	adc    DWORD PTR [esi+0x4a4b97bb],edi
  420d9c:	ds std 
  420d9e:	sub    al,0xaa
  420da0:	mov    BYTE PTR [ebx-0x7117783d],0x43
  420da7:	sbb    al,0xd2
  420da9:	imul   eax,DWORD PTR [eax],0x98ef0000
  420daf:	sar    ah,cl
  420db1:	out    0x37,al
  420db3:	adc    BYTE PTR [eax-0xd],al
  420db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db7:	add    BYTE PTR [ecx],bh
  420db9:	xor    eax,0x9887f606
  420dbe:	xor    ebp,ebx
  420dc0:	ds inc esi
  420dc2:	fnstcw WORD PTR [edx+ebp*4]
  420dc5:	repnz (bad) 
  420dc7:	int    0x18
  420dc9:	jae    0x420de1
  420dcb:	daa    
  420dcc:	add    al,0x1a
  420dce:	dec    ecx
  420dcf:	in     eax,dx
  420dd0:	xchg   DWORD PTR [eax+esi*1],esi
  420dd3:	mov    ch,0x3e
  420dd5:	ins    DWORD PTR es:[edi],dx
  420dd6:	(bad)  
  420dd7:	(bad)  
  420dd8:	or     BYTE PTR [ebx],cl
  420dda:	push   es
  420ddb:	out    0x3,eax
  420ddd:	sbb    eax,0xb51c297e
  420de2:	retf   0x391
  420de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de6:	sbb    bh,BYTE PTR [edi+0x17]
  420de9:	xor    eax,DWORD PTR [edi]
  420deb:	jo     0x420db5
  420ded:	mov    al,ds:0x770ea4ec
  420df2:	mov    ch,0xe7
  420df4:	add    esi,ebx
  420df6:	jnp    0x420da3
  420df8:	pop    ebx
  420df9:	in     al,dx
  420dfa:	(bad)  
  420dfb:	out    0xa9,al
  420dfd:	in     al,dx
  420dfe:	(bad)  
  420dff:	outs   dx,DWORD PTR ds:[esi]
  420e00:	mov    dl,0x10
  420e02:	jle    0x420ddd
  420e04:	jmp    0x420e6d
  420e06:	pop    eax
  420e07:	ror    BYTE PTR [ecx],0x5e
  420e0a:	mov    edx,0xe2b38c3a
  420e0f:	cmp    eax,0x56
  420e14:	jnp    0x420dd2
  420e16:	add    dl,ah
  420e18:	mov    ch,0x2f
  420e1a:	mov    bl,0x37
  420e1c:	jne    0x420de2
  420e1e:	(bad)  
  420e1f:	ds loope 0x420e9c
  420e22:	test   bl,0x2c
  420e25:	in     eax,dx
  420e26:	sub    al,0xb7
  420e28:	add    edi,edx
  420e2a:	mov    ah,0xd5
  420e2c:	imul   eax,esp,0xca69d3c6
  420e32:	not    dl
  420e34:	btc    edi,0xfc
  420e38:	fld    DWORD PTR [ebx+ebp*8+0x11df0e9]
  420e3f:	sbb    ch,BYTE PTR [edi+0x78d57232]
  420e45:	(bad)  
  420e46:	sbb    edi,DWORD PTR [edi]
  420e48:	es adc eax,0x2fb0f440
  420e4e:	aaa    
  420e4f:	cmp    dl,BYTE PTR [ebx]
  420e51:	add    al,BYTE PTR [esp+edx*8+0x620006f1]
  420e58:	mov    ah,0x1f
  420e5a:	bound  esi,QWORD PTR gs:[eax+0x7a86601]
  420e61:	pop    es
  420e62:	mov    BYTE PTR [edx],ch
  420e64:	scas   eax,DWORD PTR es:[edi]
  420e65:	add    dh,BYTE PTR [esi+0x4061f6a9]
  420e6b:	mov    ebp,0x5133c669
  420e70:	repnz mov edx,0x2bd76a05
  420e76:	sub    BYTE PTR [ecx-0x5000000],0xbf
  420e7d:	xchg   BYTE PTR [edx],ch
  420e7f:	jnp    0x420ea8
  420e81:	or     al,0x9d
  420e83:	mov    ch,0x32
  420e85:	jg     0x420e63
  420e87:	clc    
  420e88:	das    
  420e89:	ret    0x2bac
  420e8c:	xor    DWORD PTR ds:0xfc2fd364,ecx
  420e92:	jmp    0x414d7afc
  420e97:	push   cs
  420e98:	xor    eax,ebp
  420e9a:	lods   al,BYTE PTR ds:[esi]
  420e9b:	or     esi,DWORD PTR [eax]
  420e9d:	in     al,0xa5
  420e9f:	mov    ah,0x31
  420ea1:	cld    
  420ea2:	xchg   ebx,eax
  420ea3:	loopne 0x420e43
  420ea5:	xchg   edi,eax
  420ea6:	pop    ecx
  420ea7:	xor    ch,BYTE PTR [edi]
  420ea9:	mov    ebp,DWORD PTR [edx-0x101840dc]
  420eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb0:	xor    esp,edi
  420eb2:	add    BYTE PTR [edi+0xdfd92b7],bl
  420eb8:	repnz in al,0xa1
  420ebb:	add    esi,edx
  420ebd:	sti    
  420ebe:	mov    ecx,DWORD PTR [edx+0xafffde8]
  420ec4:	jl     0x420f05
  420ec6:	dec    esp
  420ec7:	xchg   ebx,eax
  420ec8:	fdiv   st(5),st
  420eca:	(bad)  
  420ecb:	fidivr DWORD PTR [edi-0x3e]
  420ece:	(bad)  
  420ecf:	retf   0x400a
  420ed2:	dec    ecx
  420ed3:	pop    ss
  420ed4:	repnz fs add bl,bl
  420ed8:	or     al,BYTE PTR [eax]
  420eda:	lea    edx,[edi+0x35]
  420edd:	clc    
  420ede:	inc    DWORD PTR [eax]
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	lea    ebx,[edx-0x77]
  420ee5:	inc    ebx
  420ee6:	cli    
  420ee7:	push   edx
  420ee8:	in     al,0xe7
  420eea:	dec    ecx
  420eeb:	in     al,dx
  420eec:	sti    
  420eed:	push   0xffffff9b
  420eef:	jge    0x420f32
  420ef1:	test   dl,bl
  420ef3:	pop    edx
  420ef4:	push   ds
  420ef5:	mov    cl,0x12
  420ef7:	adc    ch,al
  420ef9:	(bad)  
  420efa:	pop    edx
  420efb:	in     al,dx
  420efc:	sti    
  420efd:	(bad)  
  420efe:	xlat   BYTE PTR ds:[ebx]
  420eff:	jle    0x420f4d
  420f01:	xor    ecx,DWORD PTR ds:0x5e586453
  420f07:	inc    edi
  420f08:	cld    
  420f09:	(bad)  
  420f0a:	addr16 push edx
  420f0c:	or     eax,0x7f815a40
  420f11:	pusha  
  420f12:	dec    ebx
  420f13:	or     al,BYTE PTR [eax]
  420f15:	cmp    eax,DWORD PTR ds:0xc0b83fb
  420f1b:	jmp    0x420f18
  420f1d:	push   edi
  420f1e:	std    
  420f1f:	adc    al,0xe8
  420f21:	adc    al,0x8a
  420f23:	or     al,BYTE PTR [edi+0x70f351f0]
  420f29:	dec    ecx
  420f2a:	fs jmp 0x420f3e
  420f2d:	mov    al,0xf3
  420f2f:	das    
  420f30:	sar    bh,0x6b
  420f33:	mov    eax,ds:0x2014fed4
  420f38:	test   esp,0xfea66f87
  420f3e:	call   0x10f3:0xe6fcd21e
  420f45:	inc    eax
  420f46:	add    BYTE PTR [eax],al
  420f48:	add    bl,dh
  420f4a:	mov    dh,0x84
  420f4c:	pop    ebx
  420f4d:	repnz pop ds
  420f4f:	add    BYTE PTR [ecx],bh
  420f51:	lods   al,BYTE PTR ds:[esi]
  420f52:	retf   
  420f53:	sbb    al,0x50
  420f55:	fcom   QWORD PTR [eax+0x1fd4fecf]
  420f5b:	cmp    DWORD PTR [edx],edx
  420f5d:	ror    DWORD PTR [edi-0x40],cl
  420f60:	(bad)  
  420f61:	jnp    0x420f03
  420f63:	(bad)  
  420f65:	mov    esp,0x3fc4fd1f
  420f6a:	sbb    al,0x3e
  420f6c:	inc    edx
  420f6d:	test   al,0x1e
  420f6f:	into   
  420f70:	push   esp
  420f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f72:	sub    al,al
  420f74:	adc    dh,BYTE PTR [ebx]
  420f76:	and    BYTE PTR [edx-0x261b67be],cl
  420f7c:	(bad)  
  420f7d:	mov    cl,0x23
  420f7f:	add    BYTE PTR [ecx+0x78],dl
  420f82:	push   edx
  420f83:	sbb    al,0xf
  420f85:	xor    esp,DWORD PTR [eax]
  420f87:	into   
  420f88:	mov    BYTE PTR [ebx-0x3be43e48],al
  420f8e:	mov    ds:0x6ff07343,al
  420f93:	cmp    eax,edx
  420f95:	push   0x16890465
  420f9a:	adc    BYTE PTR ds:0x43a2f340,0x73
  420fa1:	lock (bad) 
  420fa3:	cmp    esp,edx
  420fa5:	push   0x3b80fc65
  420faa:	push   es
  420fab:	es mov al,0x0
  420fae:	add    BYTE PTR [eax],al
  420fb0:	not    esi
  420fb2:	sbb    eax,0xa7178f11
  420fb7:	add    ebp,DWORD PTR [edx-0x3c]
  420fba:	repnz adc BYTE PTR [edx+esi*4-0x17],0xd3
  420fc0:	andnps xmm6,XMMWORD PTR [ecx-0x3e]
  420fc4:	hlt    
  420fc5:	and    DWORD PTR [esi],0xffffffb0
  420fc8:	not    esi
  420fca:	in     eax,dx
  420fcb:	adc    bh,bh
  420fcd:	adc    eax,0x57a0427
  420fd2:	fs inc ebx
  420fd4:	pusha  
  420fd5:	or     BYTE PTR [edi],dh
  420fd7:	cmp    eax,edi
  420fd9:	xchg   DWORD PTR [edx-0x20],ecx
  420fdc:	in     al,0x6
  420fde:	cmp    edi,DWORD PTR [ebp+0x51e857b]
  420fe4:	repz push es
  420fe6:	ins    BYTE PTR es:[edi],dx
  420fe7:	inc    ebx
  420fe8:	inc    eax
  420fe9:	cli    
  420fea:	push   ss
  420feb:	cmp    edi,DWORD PTR [esi-0x2d]
  420fee:	out    0x3,eax
  420ff0:	repz sub esi,ebx
  420ff3:	and    esi,esp
  420ff5:	(bad)  
  420ff6:	out    0x8e,al
  420ff8:	jbe    0x420fc5
  420ffa:	out    0x3,eax
  420ffc:	repz and DWORD PTR [esi+0x7dd6f3af],0x1a857b56
  421007:	add    eax,0x436406f3
  42100c:	add    BYTE PTR [edi+esi*4],al
  42100f:	cmp    al,BYTE PTR [ecx]
  421011:	push   ebx
  421012:	test   bl,0x0
  421015:	add    BYTE PTR [eax],al
  421017:	sub    DWORD PTR fs:[ebx+eiz*4+0x5d],0x9480e62c
  421020:	mov    bl,0xe9
  421022:	ror    DWORD PTR [edi+0x54],cl
  421025:	jno    0x420fa8
  421027:	les    eax,FWORD PTR ds:0x87f0e900
  42102d:	mov    edi,0xff9e4eb5
  421032:	mov    eax,0xfa1018e9
  421037:	xor    BYTE PTR [ebx+edi*1],ch
  42103a:	jmp    0x421033
  42103c:	push   es
  42103d:	add    BYTE PTR [ebp-0x6d005f02],dl
  421043:	lock mov al,ds:0x8383fe11
  421049:	(bad)  
  42104a:	call   0x19543a3f
  42104f:	ffree  st(6)
  421051:	jmp    DWORD PTR [edi+0x31]
  421054:	mov    al,0xfe
  421056:	call   0x9e0b2f4b
  42105b:	sbb    ch,BYTE PTR [ebx]
  42105d:	pop    esp
  42105e:	das    
  42105f:	mov    dh,0x45
  421061:	add    ebp,ecx
  421063:	jg     0x421029
  421065:	jae    0xea3e3bda
  42106b:	cmp    al,0x6c
  42106d:	jae    0x4210a3
  42106f:	outs   dx,DWORD PTR ds:[esi]
  421070:	scas   eax,DWORD PTR es:[edi]
  421071:	and    ebp,ebp
  421073:	lock aad 0xc
  421076:	jne    0x4210a6
  421078:	sar    ch,cl
  42107a:	mov    ds:0xea000000,al
  42107f:	je     0x421070
  421081:	retf   
  421082:	test   BYTE PTR ss:[ebx],bl
  421085:	imul   DWORD PTR [edx+0x3d493bce]
  42108b:	into   
  42108c:	cmp    ecx,DWORD PTR [eax+0x41]
  42108f:	jmp    0xa835acf
  421094:	cmp    al,0x8c
  421096:	mov    ds:0xd37883ba,al
  42109b:	sub    edi,esp
  42109d:	jmp    0x78c6102f
  4210a2:	mov    ah,0x2b
  4210a4:	cld    
  4210a5:	add    BYTE PTR [edx+0x5c],bl
  4210a8:	add    BYTE PTR [ebx],dh
  4210aa:	sbb    bl,dl
  4210ac:	dec    BYTE PTR [edx+0x123d7b08]
  4210b2:	mov    cl,0x36
  4210b4:	adc    BYTE PTR [ecx+0x2b8],0x7f
  4210bb:	add    eax,DWORD PTR [ecx+edx*4+0x2a9]
  4210c2:	jg     0x4210ef
  4210c4:	das    
  4210c5:	shl    cl,0x4
  4210c8:	xchg   edx,eax
  4210ca:	add    BYTE PTR [edi+0xd],0xeb
  4210ce:	and    ebp,DWORD PTR [ebx+0x70aa08d]
  4210d4:	add    BYTE PTR [ebp-0x1a],dh
  4210d7:	stos   BYTE PTR es:[edi],al
  4210d8:	lea    esp,[ecx+0x750006da]
  4210de:	into   
  4210df:	xor    edi,DWORD PTR [ebx+ebp*8-0x38000000]
  4210e6:	jnp    0x4210a6
  4210e8:	mov    BYTE PTR [ebx],bl
  4210ea:	adc    ebp,DWORD PTR [edi]
  4210ec:	ror    BYTE PTR [esi+0x55],0xfd
  4210f0:	jae    0x4210bd
  4210f2:	inc    esi
  4210f3:	adc    BYTE PTR [ecx-0x38],0x5a
  4210f7:	inc    DWORD PTR [edx+0x51840462]
  4210fd:	mov    ds,WORD PTR [edx-0x1]
  421100:	adc    BYTE PTR [edx+0x16],0x84
  421104:	push   ecx
  421105:	call   0x802a:0x4282ff5a
  42110c:	push   ecx
  42110d:	stos   DWORD PTR es:[edi],eax
  42110e:	pop    edx
  42110f:	inc    DWORD PTR [edx+0x4c1fe52]
  421115:	mov    bh,BYTE PTR [ecx]
  421117:	xchg   esp,ebp
  421119:	(bad)  [ecx]
  42111b:	cmc    
  42111c:	xor    DWORD PTR [esi-0xc000347],0xfefcd31f
  421126:	pop    ebx
  421127:	adc    DWORD PTR [eax-0xd],eax
  42112a:	(bad)  
  42112b:	aaa    
  42112c:	adc    ah,bh
  42112e:	push   ebx
  42112f:	sar    bh,0x77
  421132:	loopne 0x4210e0
  421134:	bound  esp,QWORD PTR [esi-0x74]
  421137:	fadd   QWORD PTR [ebx]
  421139:	ret    0x9c95
  42113c:	mov    dh,BYTE PTR [edi-0x76b147bd]
  421142:	sbb    eax,0xf7fefcd0
  421147:	adc    eax,DWORD PTR [eax+0x0]
  42114a:	add    BYTE PTR [eax],al
  42114c:	repz call 0x23b4:0x9cb77340
  421154:	mul    DWORD PTR [ecx-0x53]
  421157:	inc    edx
  421158:	mov    DWORD PTR [edi],ebx
  42115a:	test   DWORD PTR [ebx+0x17],eax
  42115d:	xor    al,0xd0
  42115f:	addr16 jbe 0x421158
  421162:	in     al,dx
  421163:	es retf 
  421165:	sahf   
  421166:	jne    0x421165
  421168:	aam    0xc5
  42116a:	(bad)  
  42116b:	mov    dh,BYTE PTR [edi]
  42116d:	cld    
  42116e:	pop    es
  42116f:	mov    esi,DWORD PTR [edi]
  421171:	add    al,0xb0
  421173:	out    0xbf,eax
  421175:	scas   al,BYTE PTR es:[edi]
  421176:	xor    eax,0xae5f6efc
  42117b:	push   ds
  42117c:	inc    ebx
  42117d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42117e:	(bad)  [edi-0x6cd7dfd0]
  421184:	cwde   
  421185:	nop
  421186:	xor    al,0x83
  421188:	mov    bl,0x13
  42118a:	or     eax,DWORD PTR [ecx+0x40643ffe]
  421190:	repz and ebp,DWORD PTR [ecx]
  421193:	push   es
  421194:	or     DWORD PTR [eax],esp
  421196:	mov    eax,eax
  421198:	mov    esi,DWORD PTR [ecx+0x66cfc36]
  42119e:	ret    0x518a
  4211a1:	retf   
  4211a2:	sub    DWORD PTR [ebx+0x3eeae2b0],ecx
  4211a8:	repnz iretw 
  4211ab:	ret    
  4211ac:	dec    esp
  4211ad:	jl     0x421146
  4211af:	out    0x0,eax
  4211b1:	add    BYTE PTR [eax],al
  4211b3:	sbb    ebx,eax
  4211b5:	add    cl,BYTE PTR [ebp-0xc688214]
  4211bb:	or     ebx,eax
  4211bd:	dec    BYTE PTR [esp+edi*4-0x3f7a8dfe]
  4211c4:	pop    es
  4211c5:	out    0x3,eax
  4211c7:	xor    DWORD PTR [edx],eax
  4211c9:	out    0xd0,eax
  4211cb:	imul   ebx,DWORD PTR [edx],0x69
  4211ce:	sub    BYTE PTR [ebp+edi*2+0x5ab98927],ah
  4211d5:	nop
  4211d6:	adc    esi,DWORD PTR [ebx+edi*4-0xe]
  4211da:	mov    BYTE PTR [edx+eiz*8+0x1b398898],ah
  4211e1:	aaa    
  4211e2:	lea    esi,[ecx]
  4211e4:	pop    ds
  4211e5:	into   
  4211e6:	add    BYTE PTR [ecx+ebp*1-0x2b0d562b],cl
  4211ed:	int    0x73
  4211ef:	and    BYTE PTR [esi],al
  4211f1:	out    0x3,eax
  4211f3:	(bad)  
  4211f4:	adc    ah,BYTE PTR [edi]
  4211f6:	adc    BYTE PTR [ebx],dh
  4211f8:	pop    es
  4211f9:	inc    ecx
  4211fa:	add    al,0xb6
  4211fc:	adc    dh,BYTE PTR [edi+0x6c073312]
  421202:	inc    ebx
  421203:	and    ch,bh
  421205:	mov    DWORD PTR ss:[ecx],esi
  421208:	pop    ds
  421209:	ss sub al,0xd0
  42120c:	ror    BYTE PTR [ebp+0x1c44b536],cl
  421212:	iret   
  421213:	jnp    0x42124b
  421215:	jno    0x4211d4
  421217:	add    BYTE PTR [eax],al
  421219:	add    ah,ch
  42121b:	daa    
  42121c:	(bad)  
  42121d:	cmp    BYTE PTR [ecx+ebp*1-0x4],dh
  421221:	jmp    0xe841929f
  421226:	lock push es
  421228:	dec    edi
  421229:	sar    DWORD PTR [edi+edi*2-0x7],cl
  42122d:	sbb    al,cl
  42122f:	shl    bh,1
  421231:	sbb    BYTE PTR [ebx],ah
  421233:	sub    edi,esp
  421235:	ins    BYTE PTR es:[edi],dx
  421236:	mov    al,0xb3
  421238:	or     edi,DWORD PTR [esi]
  42123a:	mov    esp,fs
  42123c:	or     ebx,DWORD PTR [ecx+0x72e74369]
  421242:	sub    al,0x29
  421244:	cld    
  421245:	(bad)  
  421246:	ds inc esi
  421248:	add    ebp,ecx
  42124a:	in     eax,0xb3
  42124c:	and    esp,ebp
  42124e:	imul   ebp,DWORD PTR [ecx-0x4],0xfcfc2c95
  421255:	jge    0x42127b
  421257:	cld    
  421258:	push   ecx
  421259:	adc    DWORD PTR [ebx],edi
  42125b:	dec    edi
  42125c:	(bad)  
  42125d:	call   0x2b420e14
  421262:	in     al,dx
  421263:	daa    
  421264:	push   ebx
  421265:	jb     0x421282
  421267:	xchg   ebx,esp
  421269:	loope  0x4212d5
  42126b:	les    ecx,FWORD PTR [ebx]
  42126d:	push   0xb
  42126f:	or     al,0x51
  421271:	aaa    
  421272:	mov    esi,0xeec4f786
  421277:	xor    BYTE PTR [eax-0x18],0xf0
  42127b:	push   es
  42127c:	or     eax,0x6f
  421281:	mov    ebx,0x73e9fc28
  421286:	das    
  421287:	cld    
  421288:	mul    BYTE PTR [edi]
  42128a:	idiv   esi
  42128c:	call   0xe1b43c81
  421291:	fist   WORD PTR [eax+edi*2]
  421294:	cmc    
  421295:	mov    al,0x27
  421297:	mov    DWORD PTR [eax],eax
  421299:	jb     0x421242
  42129b:	sti    
  42129c:	movhps xmm2,QWORD PTR [eax-0x3]
  4212a0:	dec    DWORD PTR [edx+0x46244886]
  4212a6:	repnz push ebx
  4212a8:	jmp    DWORD PTR [edi-0x41]
  4212ab:	cmovo  ecx,DWORD PTR [edx+0x36]
  4212af:	xlat   BYTE PTR ds:[ebx]
  4212b0:	mov    DWORD PTR [esi+0x5abe0c47],eax
  4212b6:	daa    
  4212b7:	cld    
  4212b8:	call   edi
  4212ba:	ret    0x247a
  4212bd:	fs push esi
  4212bf:	push   ebx
  4212c0:	call   DWORD PTR [edi]
  4212c2:	mov    ebx,0xa71a400f
  4212c7:	mov    esp,0x4f392a79
  4212cc:	push   edi
  4212cd:	std    
  4212ce:	push   edi
  4212cf:	add    al,0xff
  4212d1:	pop    ss
  4212d2:	mov    bh,0xf
  4212d4:	inc    eax
  4212d5:	sbb    bh,BYTE PTR [eax+ebx*2+0x24]
  4212d9:	es inc esi
  4212db:	aaa    
  4212dc:	pop    esp
  4212dd:	adc    edi,DWORD PTR ss:[esp+ebx*8-0x55]
  4212e2:	pop    edx
  4212e3:	mov    ah,0x43
  4212e5:	add    BYTE PTR [eax],al
  4212e7:	add    dl,bl
  4212e9:	fld    TBYTE PTR [esp+eax*1-0xfff525]
  4212f0:	jp     0x4212fc
  4212f2:	std    
  4212f3:	dec    edx
  4212f5:	push   ebx
  4212f6:	sti    
  4212f7:	jne    0x4212cb
  4212f9:	fist   DWORD PTR [ecx]
  4212fb:	or     BYTE PTR [esi-0x6d7503b6],ah
  421301:	xchg   edi,esi
  421303:	dec    ebp
  421305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421306:	hlt    
  421307:	add    BYTE PTR [edx-0x1aaca9f6],bl
  42130d:	fist   DWORD PTR [ecx]
  42130f:	enter  0x4a99,0xfc
  421313:	mov    bl,dh
  421315:	repz fisttp WORD PTR [edi]
  421318:	retf   0xdff3
  42131b:	adc    edi,edi
  42131d:	xor    eax,0x41931233
  421322:	sar    bh,0xc
  421325:	mov    al,0xfc
  421327:	jmp    FWORD PTR [ecx+eax*1-0x35]
  42132b:	cld    
  42132c:	ficom  WORD PTR [edi]
  42132e:	xor    edx,DWORD PTR [edx]
  421330:	inc    edi
  421331:	and    eax,eax
  421333:	push   DWORD PTR [ecx+0x3b]
  421336:	add    al,0xfe
  421338:	cld    
  421339:	stos   DWORD PTR es:[edi],eax
  42133a:	cmp    eax,0x2a3044ff
  42133f:	inc    ebx
  421340:	pop    ss
  421341:	inc    eax
  421342:	dec    DWORD PTR [esi+ebp*2]
  421345:	call   0x23bc:0xddf30000
  42134c:	add    BYTE PTR [eax],al
  42134e:	add    BYTE PTR [ebx],al
  421350:	and    BYTE PTR [edx+eax*2+0x12335cc0],ch
  421357:	add    esp,DWORD PTR [eax+eax*8]
  42135a:	(bad)  
  42135b:	jns    0x42135d
  42135d:	jle    0x421354
  42135f:	hlt    
  421360:	mov    bl,0x61
  421362:	(bad)  
  421363:	cld    
  421364:	das    
  421365:	test   DWORD PTR [ebx-0x31],eax
  421368:	aaa    
  421369:	rcl    BYTE PTR [eax+0x44],1
  42136c:	xor    eax,0x22e407aa
  421371:	adc    al,0x14
  421373:	xor    esi,DWORD PTR [eax]
  421375:	xchg   DWORD PTR [edi-0x854c1c],edi
  42137b:	int3   
  42137c:	das    
  42137d:	call   0x47fc:0xfbe2c5ff
  421384:	or     al,0xe0
  421386:	cld    
  421387:	aas    
  421388:	adc    al,0xe8
  42138a:	addr16 repz out dx,eax
  42138d:	add    eax,DWORD PTR [eax]
  42138f:	cmp    eax,0x5f19a607
  421394:	stc    
  421395:	es add al,0x8a
  421398:	mov    ah,0x9d
  42139a:	enter  0xf6d0,0xe6
  42139e:	sti    
  42139f:	test   BYTE PTR ds:0x46c207fa,ah
  4213a5:	xchg   ecx,eax
  4213a6:	add    DWORD PTR [edx],esp
  4213a8:	mov    esi,0xfb0b1975
  4213ad:	es add al,0x72
  4213b0:	push   ds
  4213b1:	gs mov eax,0xc3000000
  4213b7:	mov    al,0xe6
  4213b9:	add    bl,BYTE PTR [esi-0x26449ba]
  4213bf:	pop    es
  4213c0:	out    0x3,eax
  4213c2:	inc    esi
  4213c3:	fwait
  4213c4:	out    dx,al
  4213c5:	xor    ah,cl
  4213c7:	inc    edx
  4213c8:	fld    st(3)
  4213ca:	xor    al,0x30
  4213cc:	repz add ah,BYTE PTR [esi+0x36]
  4213d0:	daa    
  4213d1:	sbb    al,0xf4
  4213d3:	(bad)
  4213d7:	adc    eax,0x68a4556
  4213dc:	push   ss
  4213dd:	mov    ecx,0xe7a28ff4
  4213e2:	int3   
  4213e3:	inc    edi
  4213e4:	unpcklps xmm1,XMMWORD PTR [ebx-0xb38c142]
  4213eb:	xchg   ecx,eax
  4213ec:	stos   BYTE PTR es:[edi],al
  4213ed:	out    0x10,eax
  4213ef:	mov    ss,WORD PTR [edx+0x328e10e7]
  4213f5:	call   0xf7a64306
  4213fa:	aam    0x24
  4213fc:	sar    edi,0xcf
  4213ff:	fidivr DWORD PTR [esi]
  421401:	ins    BYTE PTR es:[edi],dx
  421402:	xor    eax,DWORD PTR [edi]
  421404:	(bad)  
  421405:	sbb    BYTE PTR [edi-0x5],al
  421408:	es add al,0xb6
  42140b:	(bad)  
  42140d:	dec    esp
  42140e:	pop    ds
  42140f:	(bad)  
  421410:	jmp    FWORD PTR [ebp+0x29113b0b]
  421416:	test   ecx,0xda5d
  42141c:	add    BYTE PTR [eax],dh
  42141e:	mov    edi,0x46a38c88
  421423:	pop    es
  421424:	jmp    0x6b2da3d4
  421429:	fsub   QWORD PTR [edi+0x7090e4f5]
  42142f:	inc    eax
  421430:	jmp    0x816faf29
  421435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421436:	popa   
  421437:	std    
  421438:	data16 je 0x42149f
  42143b:	jae    0x421441
  42143d:	jne    0x421463
  42143f:	mov    ebp,DWORD PTR [esp+edi*2-0x78a3982c]
  421446:	(bad)  [esi]
  421448:	push   ecx
  421449:	enter  0xfd5e,0x3e
  42144d:	add    DWORD PTR [ecx-0x7fc49bf1],ebx
  421453:	cld    
  421454:	mov    ah,0x24
  421456:	and    esi,DWORD PTR [edx-0xf]
  421459:	inc    eax
  42145a:	and    edx,DWORD PTR [edx]
  42145c:	in     eax,dx
  42145d:	cld    
  42145e:	(bad)  
  42145f:	inc    DWORD PTR [ecx]
  421461:	icebp  
  421462:	and    DWORD PTR [edx-0x7],esi
  421465:	rcr    DWORD PTR [eax+0xc3b060b],0xfd
  42146c:	aam    0xa4
  42146e:	idiv   DWORD PTR [edi]
  421470:	jmp    0xe94d5aa4
  421475:	sub    cl,BYTE PTR [ecx]
  421477:	and    BYTE PTR [ebp+0x550023b6],dl
  42147d:	repnz cs cld 
  421480:	xchg   ebp,eax
  421481:	add    BYTE PTR [eax],al
  421483:	add    BYTE PTR [ecx],al
  421485:	and    eax,DWORD PTR [ebx+0x31098ba9]
  42148b:	add    BYTE PTR [edx-0x35fb41b6],cl
  421491:	(bad)  
  421492:	and    DWORD PTR [eax],esi
  421494:	iret   
  421495:	inc    edi
  421496:	cld    
  421497:	push   esp
  421498:	adc    edi,esp
  42149a:	repnz add eax,0x3fc3aa
  4214a0:	mov    ?,WORD PTR ds:0x5b967587
  4214a6:	sbb    eax,0xfa9640e8
  4214ab:	dec    DWORD PTR [esi]
  4214ad:	retf   
  4214ae:	jo     0x4214c8
  4214b0:	mov    cl,0x1c
  4214b2:	pop    esp
  4214b3:	mov    eax,0x10710b19
  4214b8:	aad    0x5b
  4214ba:	or     al,0x8b
  4214bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214bd:	sti    
  4214be:	cli    
  4214bf:	jne    0x421523
  4214c1:	push   DWORD PTR [ecx-0x182a5a03]
  4214c7:	adc    BYTE PTR [ebp+0x7fff105b],dh
  4214cd:	not    DWORD PTR [ebp-0x1]
  4214d0:	jg     0x4214f1
  4214d2:	sti    
  4214d3:	adc    eax,0x3ffe7e
  4214d8:	je     0x42152e
  4214da:	mov    esi,0x873c0a10
  4214df:	in     al,dx
  4214e0:	cld    
  4214e1:	or     esp,DWORD PTR [eax]
  4214e3:	lods   al,BYTE PTR ds:[esi]
  4214e4:	pop    ecx
  4214e5:	pop    es
  4214e6:	add    al,0x56
  4214e8:	add    BYTE PTR [eax],al
  4214ea:	add    BYTE PTR [ecx+0x2b74085b],dl
  4214f0:	call   DWORD PTR [eax-0x7f2a0b44]
  4214f6:	shr    BYTE PTR [esi+0xe],0x37
  4214fa:	xor    eax,0x3fae7a
  4214ff:	aas    
  421500:	sti    
  421501:	cli    
  421502:	jne    0x4214de
  421504:	mov    ds:0x38f31449,eax
  421509:	mov    ch,0x7
  42150b:	fndisi(8087 only) 
  42150d:	sub    al,0xfc
  42150f:	mov    esp,0x3efd1035
  421514:	cmp    al,0x2f
  421516:	jb     0x42151b
  421518:	add    ch,BYTE PTR [edi]
  42151a:	jb     0x421517
  42151c:	jo     0x421533
  42151e:	cmp    al,0x6
  421520:	lock add ebx,DWORD PTR [esi+0x36]
  421524:	outs   dx,BYTE PTR ds:[esi]
  421525:	adc    BYTE PTR [eax],al
  421527:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421529:	sbb    al,0xf5
  42152b:	out    dx,al
  42152c:	dec    edi
  42152d:	pop    esp
  42152e:	inc    eax
  42152f:	repz xor edx,esi
  421532:	mov    dh,bh
  421534:	xor    esi,DWORD PTR [esi+ebx*1-0x29015a5]
  42153b:	lods   al,BYTE PTR fs:[esi]
  42153d:	inc    eax
  42153e:	jae    0x42153b
  421540:	in     al,0xf4
  421542:	pop    edi
  421543:	fwait
  421544:	ins    DWORD PTR es:[edi],dx
  421545:	add    BYTE PTR [ebx-0x1d],dh
  421548:	mov    eax,0x83780fb5
  42154d:	adc    al,0xfd
  42154f:	add    BYTE PTR [eax],al
  421551:	add    dh,al
  421553:	pop    ss
  421554:	sbb    BYTE PTR [esi],ah
  421556:	ss loope 0x421588
  421559:	call   0x13f7ee61
  42155e:	and    al,0x5b
  421560:	adc    BYTE PTR [esi+0x1c],dl
  421563:	cmp    eax,0xfffffffc
  421566:	(bad)  
  421567:	fist   DWORD PTR [eax+eax*2]
  42156a:	repz pop ecx
  42156c:	int    0xc1
  42156e:	jecxz  0x42159f
  421570:	aad    0x88
  421572:	mov    cr0,edx
  421575:	and    BYTE PTR [edi+0x6d],al
  421578:	add    BYTE PTR [eax*2+0x5f0bb5a5],al
  42157f:	dec    edi
  421580:	sbb    BYTE PTR [edi],al
  421582:	lahf   
  421583:	push   es
  421584:	in     eax,0x2f
  421586:	jo     0x4215ce
  421588:	push   edx
  421589:	or     al,0xa
  42158b:	fadd   QWORD PTR [esi+0x6c]
  42158e:	xor    eax,DWORD PTR [edi]
  421590:	push   esp
  421591:	adc    al,0xbe
  421593:	fwait
  421594:	(bad)  
  421595:	jp     0x4215c0
  421597:	sti    
  421598:	mov    ebp,0xc92ef4b9
  42159d:	xor    BYTE PTR [edi-0x61eb3edf],ah
  4215a3:	fwait
  4215a4:	cli    
  4215a5:	cs and edi,esi
  4215a8:	xor    al,0x2f
  4215aa:	add    DWORD PTR [edi],ecx
  4215ac:	xchg   esi,eax
  4215ad:	sbb    edi,edx
  4215af:	sti    
  4215b0:	es add al,0x1d
  4215b3:	les    ebp,FWORD PTR [eax+0x14]
  4215b9:	repz mov ebx,0xb662071
  4215bf:	(bad)  
  4215c0:	pop    edi
  4215c1:	mov    bl,0x6
  4215c3:	jecxz  0x42159a
  4215c5:	imul   ebx,DWORD PTR [ebx+0x2ef5b7f6],0x28
  4215cc:	imul   ecx,DWORD PTR [esi+0x21],0x6a
  4215d0:	inc    esp
  4215d1:	sar    dh,0x11
  4215d4:	stc    
  4215d5:	pushf  
  4215d6:	pop    esi
  4215d7:	test   eax,0x3df6c003
  4215dc:	mov    ecx,0xba38e00
  4215e1:	ficomp WORD PTR es:[ebx]
  4215e5:	jns    0x421609
  4215e7:	and    eax,0x1df50b2f
  4215ec:	mov    ecx,0x179b21e4
  4215f1:	popf   
  4215f2:	and    DWORD PTR [ebx-0x11650001],edx
  4215f8:	cs loope 0x42157d
  4215fb:	rol    bl,cl
  4215fd:	in     al,dx
  4215fe:	ret    0x93ff
  421601:	xor    dh,ah
  421603:	call   DWORD PTR [ebx-0x130ad3a7]
  421609:	shr    BYTE PTR [eax+eax*2-0x17],1
  42160d:	hlt    
  42160e:	mov    eax,0x9adf5c88
  421613:	push   ds
  421614:	ror    DWORD PTR [edi+0x6cc6fd5f],0x60
  42161b:	jae    0x4215fe
  42161d:	add    BYTE PTR [eax],al
  42161f:	add    BYTE PTR [ecx-0x4e8ea02b],bl
  421625:	and    BYTE PTR [ebx-0x27],dh
  421628:	int    0x94
  42162a:	adc    esi,DWORD PTR [edx-0x4d]
  42162d:	clc    
  42162e:	cld    
  42162f:	adc    al,0x8f
  421631:	sub    BYTE PTR [ebx-0x6b],dl
  421634:	aad    0x22
  421636:	call   0x17d6e435
  42163b:	xchg   BYTE PTR [ebx],bh
  42163d:	hlt    
  42163e:	push   ebp
  42163f:	jle    0x4215ec
  421641:	or     al,0xfd
  421643:	cld    
  421644:	push   0x4911223
  421649:	(bad)  
  42164a:	inc    esi
  42164c:	inc    ebx
  42164d:	inc    esi
  42164e:	adc    ebp,ecx
  421650:	sub    ecx,DWORD PTR [edi-0x1904a015]
  421656:	stos   DWORD PTR es:[edi],eax
  421657:	stos   BYTE PTR es:[edi],al
  421658:	lock or dl,BYTE PTR [esi+0x72]
  42165c:	jnp    0x42166a
  42165e:	je     0x421668
  421660:	(bad)  
  421662:	mov    eax,0xbf83d537
  421667:	mov    ch,0xe8
  421669:	fnsave [edx]
  42166b:	mov    DWORD PTR [eax-0x1f6c003a],ecx
  421671:	and    DWORD PTR [edx-0x7],esi
  421674:	mov    esp,ecx
  421676:	adc    ecx,DWORD PTR [esi]
  421678:	cmp    ecx,DWORD PTR [eax]
  42167a:	call   0xfc32177f
  42167f:	inc    DWORD PTR [ecx]
  421681:	hlt    
  421682:	cli    
  421683:	jne    0x421685
  421685:	add    BYTE PTR [eax],al
  421687:	(bad)  
  421688:	lock jno 0x42169b
  42168b:	test   al,dh
  42168d:	jno    0x421697
  42168f:	int    0xf7
  421691:	xor    edx,DWORD PTR ds:0x5d5e0b1a
  421697:	cwde   
  421698:	cli    
  421699:	call   DWORD PTR [ecx+edx*2-0x19]
  42169d:	repnz add eax,0x3fa6ea
  4216a3:	xchg   esi,eax
  4216a4:	cmp    DWORD PTR [edi+0x1d578e75],eax
  4216aa:	call   0x3cc35f
  4216af:	push   es
  4216b0:	retf   
  4216b1:	jo     0x4216cb
  4216b3:	xchg   ecx,eax
  4216b4:	sbb    BYTE PTR [eax+edi*4-0x27],bl
  4216b8:	or     dh,BYTE PTR [ecx+0x10]
  4216bb:	ins    DWORD PTR es:[edi],dx
  4216bc:	push   edi
  4216bd:	or     al,0x8b
  4216bf:	mov    edi,0x6275fafe
  4216c4:	sti    
  4216c5:	sar    ebx,0xdd
  4216c8:	icebp  
  4216c9:	out    0x10,eax
  4216cb:	int    0x57
  4216cd:	adc    bh,bh
  4216cf:	aaa    
  4216d0:	repz push ebp
  4216d2:	jmp    DWORD PTR [edi]
  4216d4:	sbb    edi,ebx
  4216d6:	adc    eax,0x3ff7f2
  4216db:	mov    WORD PTR [eax-0x42],ss
  4216de:	adc    BYTE PTR [edx+0x38],cl
  4216e1:	xchg   esp,ebp
  4216e3:	in     al,0x7
  4216e5:	and    BYTE PTR [ecx+ebx*2+0x560403],ch
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	xchg   ecx,eax
  4216ef:	push   edi
  4216f0:	or     al,0x74
  4216f2:	sub    edi,ebx
  4216f4:	mov    al,ds:0x80f1ecba
  4216f9:	shl    bl,0x81
  4216fc:	or     BYTE PTR [ecx],bh
  4216fe:	(bad)  
  4216ff:	lea    ebp,[eax+0x40]
  421702:	repz mov ds:0x3466fd10,al
  421708:	ja     0x421754
  42170a:	or     edx,DWORD PTR ds:0xadcb0bb5
  421710:	daa    
  421711:	cld    
  421712:	aam    0x39
  421714:	paddw  mm0,QWORD PTR [esi+0x8]
  421718:	sub    esi,DWORD PTR [edx-0x21]
  42171b:	(bad)  [edx]
  42171d:	jb     0x42170e
  42171f:	dec    esp
  421720:	mov    ch,0x7
  421722:	mov    ah,0x3b
  421724:	pop    eax
  421725:	adc    esi,DWORD PTR [ebx]
  421727:	xor    dl,cl
  421729:	pop    edx
  42172a:	mov    cl,0x3c
  42172c:	add    BYTE PTR [ebx+0x68],dl
  42172f:	pop    esp
  421730:	xor    al,BYTE PTR [edx]
  421732:	shl    DWORD PTR [ebx-0x2a0f0041],cl
  421738:	jbe    0x4217ac
  42173a:	jecxz  0x421737
  42173c:	loopne 0x421725
  42173e:	sbb    BYTE PTR [edx+0x706ffc2a],bh
  421744:	mov    ah,0x17
  421746:	sub    BYTE PTR [ebx-0x60],dl
  421749:	mov    bh,0xb0
  42174b:	das    
  42174c:	mov    ch,0xf
  42174e:	pop    esp
  42174f:	adc    edx,DWORD PTR [ecx+ecx*4]
  421752:	add    BYTE PTR [eax],al
  421754:	add    BYTE PTR [esi-0x8dd4f9],ah
  42175a:	mov    bh,0xf2
  42175c:	clc    
  42175d:	inc    esp
  42175e:	mov    ch,0x17
  421760:	adc    BYTE PTR [ebx+esi*1],bh
  421763:	or     ch,bh
  421765:	mov    esi,0xa6fcd23b
  42176a:	sub    ebp,DWORD PTR [ebx]
  42176c:	jb     0x421769
  42176e:	aam    0x15
  421770:	lods   al,BYTE PTR ds:[esi]
  421771:	pop    es
  421772:	jo     0x421774
  421774:	pop    esi
  421775:	mov    dh,0x6
  421777:	sub    DWORD PTR [edi],edx
  421779:	repz loope 0x42175f
  42177c:	addr16 loopne 0x421745
  42177f:	out    0xb6,al
  421781:	neg    BYTE PTR [esi-0x27]
  421784:	xor    dh,BYTE PTR [ebp-0xe17d5fa]
  42178a:	fcmovbe st,st(3)
  42178c:	ret    
  42178d:	in     al,0x92
  42178f:	in     al,dx
  421790:	imul   esp,DWORD PTR [ebp+0x18],0xffffffa7
  421794:	add    esi,DWORD PTR [edx-0x1e10141f]
  42179a:	(bad)  
  42179b:	out    0xb0,al
  42179d:	out    dx,al
  42179e:	pop    esi
  42179f:	mov    bl,0x36
  4217a1:	std    
  4217a2:	push   es
  4217a3:	stos   BYTE PTR es:[edi],al
  4217a4:	fcomip st,st(1)
  4217a6:	out    dx,al
  4217a7:	fcmovnb st,st(3)
  4217a9:	lods   al,BYTE PTR ds:[esi]
  4217aa:	adc    al,0x9e
  4217ac:	btr    DWORD PTR ds:0x19d3e196,edx
  4217b3:	daa    
  4217b4:	add    al,0xb2
  4217b6:	mov    bl,0x71
  4217b8:	sbb    BYTE PTR [eax],al
  4217ba:	add    BYTE PTR [eax],al
  4217bc:	jae    0x4217e8
  4217be:	into   
  4217bf:	xor    ecx,esi
  4217c1:	out    0x42,al
  4217c3:	(bad)  
  4217c4:	jl     0x4217cf
  4217c6:	xor    eax,0xfb0f017f
  4217cb:	fst    DWORD PTR [ecx+edi*1+0x3f]
  4217cf:	sub    ah,BYTE PTR [edi-0x7e]
  4217d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d3:	mov    al,0x11
  4217d5:	test   BYTE PTR [eax+esi*4-0xb],dh
  4217d9:	xchg   ecx,eax
  4217da:	lods   al,BYTE PTR ds:[esi]
  4217db:	call   DWORD PTR [edx+edi*2+0x5d]
  4217df:	sub    eax,DWORD PTR [edi-0x7d]
  4217e2:	es mov al,0xe1
  4217e5:	mov    al,0xfe
  4217e7:	shr    DWORD PTR [ecx-0x35],1
  4217ea:	push   ds
  4217eb:	aad    0x14
  4217ed:	aad    0x91
  4217ef:	sub    ah,BYTE PTR [edi]
  4217f1:	(bad)  
  4217f2:	jmp    FWORD PTR [ebx+0x114290b4]
  4217f8:	aas    
  4217f9:	cs (bad) 
  4217fb:	mov    esi,0xf5aff8d9
  421800:	xor    BYTE PTR ds:0x9b5205a,bl
  421806:	add    BYTE PTR [ebp+esi*2-0x30ea7fcf],dh
  42180d:	adc    al,BYTE PTR [edx]
  42180f:	leave  
  421810:	cmp    al,0xc7
  421812:	(bad)  
  421813:	in     al,dx
  421814:	ret    0x728f
  421817:	loope  0x42179d
  421819:	jmp    0x65fc:0x1a5f6fe7
  421820:	add    BYTE PTR [eax],al
  421822:	add    BYTE PTR [eax],dh
  421824:	cwde   
  421825:	and    ch,BYTE PTR [edx+eax*1-0x68]
  421829:	push   ds
  42182a:	bound  esi,QWORD PTR [edx-0x27c917f8]
  421830:	sbb    bh,ah
  421832:	xor    BYTE PTR fs:[eax-0x4d40bcee],bl
  421839:	mov    bl,BYTE PTR [edi+eiz*1]
  42183c:	int    0xe7
  42183e:	xchg   ebx,eax
  42183f:	cs sbb bh,ah
  421842:	jo     0x4217f7
  421844:	inc    eax
  421845:	mov    ch,BYTE PTR [edi+ebp*1]
  421848:	int3   
  421849:	call   0x125dbb36
  42184e:	popa   
  42184f:	cld    
  421850:	(bad)  
  421851:	call   FWORD PTR [esi]
  421853:	es inc esi
  421855:	add    ebp,ecx
  421857:	inc    ebx
  421858:	(bad)  
  421859:	jmp    0x4218c5
  42185b:	cld    
  42185c:	jmp    0x421853
  42185e:	in     al,dx
  42185f:	push   eax
  421860:	jo     0x4218a2
  421862:	jmp    0xdccacaab
  421867:	cmp    BYTE PTR [eax+0x55474130],bl
  42186d:	std    
  42186e:	add    BYTE PTR [ebp+0x74bc9b],dh
  421874:	xchg   dl,dh
  421876:	je     0x421864
  421878:	cmp    DWORD PTR [edx],0x30
  42187b:	pop    edi
  42187c:	and    eax,DWORD PTR [edi-0x5fffdba]
  421882:	(bad)  
  421883:	in     eax,0xf0
  421885:	add    eax,0x5e000000
  42188b:	imul   DWORD PTR [ecx+0x30]
  42188e:	cmp    al,0x9f
  421890:	dec    ecx
  421891:	ror    BYTE PTR [ebx-0x1b556b01],1
  421897:	in     eax,dx
  421898:	test   DWORD PTR [ebp+0x2],eax
  42189b:	lahf   
  42189c:	inc    ecx
  42189d:	sar    BYTE PTR [edx-0x4],1
  4218a0:	std    
  4218a1:	push   ebp
  4218a2:	aad    0xb
  4218a4:	hlt    
  4218a5:	adc    al,0x1a
  4218a7:	add    ebx,DWORD PTR [esi-0x37]
  4218aa:	mov    BYTE PTR [esi],al
  4218ac:	add    BYTE PTR [ebp+0x51],dl
  4218af:	(bad)  
  4218b0:	jg     0x42189e
  4218b2:	stos   BYTE PTR es:[edi],al
  4218b3:	aad    0x1
  4218b5:	and    BYTE PTR [esi+0x41],dh
  4218b8:	cld    
  4218b9:	add    edi,esp
  4218bb:	cdq    
  4218bc:	jno    0x4218c6
  4218be:	ficom  WORD PTR [ecx]
  4218c0:	in     al,0xe7
  4218c2:	adc    dh,cl
  4218c4:	sti    
  4218c5:	test   BYTE PTR [edx+0x56],bl
  4218c8:	test   DWORD PTR es:[esi+edx*2+0x22],ebx
  4218cd:	and    DWORD PTR [edi+edx*1+0x48e12171],0x4
  4218d5:	call   0x3e099b
  4218da:	iret   
  4218db:	ret    0x1570
  4218de:	lock adc dl,BYTE PTR [edx-0x73]
  4218e2:	xchg   DWORD PTR [edi-0x467317b3],esi
  4218e8:	cli    
  4218e9:	push   ebx
  4218eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218ec:	mov    esp,0xd7
  4218f1:	bound  dx,DWORD PTR [eax+0x4f]
  4218f5:	sbb    BYTE PTR [esi],ch
  4218f7:	into   
  4218f8:	cld    
  4218f9:	(bad)  
  4218fa:	aad    0xf
  4218fc:	inc    eax
  4218fd:	repz jae 0x421939
  421900:	shr    edi,0x2d
  421903:	cmp    DWORD PTR [ebx-0x29],0x29
  421907:	add    dl,BYTE PTR [esi+0x78]
  42190a:	(bad)  
  42190b:	div    BYTE PTR [ebp-0x7f2b8515]
  421911:	cli    
  421912:	lods   al,BYTE PTR es:[esi]
  421914:	sbb    esi,DWORD PTR [eax+0x7]
  421917:	cmc    
  421918:	jb     0x421960
  42191a:	push   0xffffffeb
  42191c:	lds    esp,FWORD PTR [eax+0x25]
  42191f:	xor    BYTE PTR [edi-0xe],0x25
  421923:	lods   eax,DWORD PTR ds:[esi]
  421924:	add    bl,BYTE PTR [ecx+0x2e]
  421927:	enter  0xf0e8,0xfc
  42192b:	inc    ebx
  42192c:	aas    
  42192d:	push   0x2e
  42192f:	sbb    eax,DWORD PTR ds:0x12eac
  421935:	repz das 
  421937:	repz mov edi,0x80e53533
  42193d:	call   0xf457:0x7035a426
  421944:	jge    0x4218de
  421946:	lods   eax,DWORD PTR ds:[esi]
  421947:	sub    DWORD PTR [edx],ecx
  421949:	jmp    FWORD PTR [eax-0x7f]
  42194c:	div    BYTE PTR [esi+0x30]
  42194f:	add    BYTE PTR [eax],al
  421951:	call   DWORD PTR [edi]
  421953:	xor    esi,0x14000000
  421959:	push   eax
  42195a:	add    BYTE PTR [eax],al
  42195c:	in     eax,0x3b
  42195e:	xor    esi,0x500a
  421964:	aam    0x33
  421966:	aas    
  421967:	add    eax,esi
  421969:	push   es
  42196a:	out    0x3,eax
  42196c:	repz sub eax,0xe07cf42a
  421972:	stos   BYTE PTR es:[edi],al
  421973:	fucomip st,st(0)
  421975:	or     DWORD PTR [ebx+eax*2-0x14],esi
  421979:	sub    eax,0xb964f47c
  42197e:	sub    bl,bh
  421980:	sbb    al,0xc2
  421982:	imul   esp,DWORD PTR [edi-0x716fd30],0xf9c0f46
  42198c:	jb     0x4219ae
  42198e:	lock scas eax,DWORD PTR es:[edi]
  421990:	mov    ds:0xfd8426d5,eax
  421995:	or     edx,DWORD PTR [esi+ebx*4+0x3e804b7]
  42199c:	repz push es
  42199e:	adc    al,bh
  4219a0:	jae    0x4219c1
  4219a2:	loopne 0x421953
  4219a4:	pop    ss
  4219a5:	cdq    
  4219a6:	scas   eax,DWORD PTR es:[edi]
  4219a7:	test   ch,al
  4219a9:	or     esp,DWORD PTR [ebp-0x28]
  4219ac:	inc    ebp
  4219ad:	and    BYTE PTR [ebx+0x4],ah
  4219b0:	repz push es
  4219b2:	pop    ebx
  4219b3:	or     al,0x34
  4219b5:	and    BYTE PTR ds:0x4419ace4,al
  4219bb:	loopne 0x4219bd
  4219bd:	add    BYTE PTR [eax],al
  4219bf:	and    eax,0x9ce40f20
  4219c4:	sbb    DWORD PTR ds:0xea04ae08,esi
  4219ca:	add    esi,ebx
  4219cc:	push   es
  4219cd:	xchg   edx,eax
  4219ce:	(bad)  
  4219cf:	ret    
  4219d0:	inc    esi
  4219d1:	fistp  QWORD PTR [edi-0x6f19f530]
  4219d7:	xor    al,0xc6
  4219d9:	and    esp,0x3e80437
  4219df:	repz push es
  4219e1:	xchg   edx,eax
  4219e2:	or     ah,BYTE PTR [edx]
  4219e4:	inc    edi
  4219e5:	inc    DWORD PTR [ecx-0x3abc201a]
  4219eb:	dec    eax
  4219ec:	xchg   ebx,eax
  4219ed:	or     BYTE PTR [ecx-0x69],ch
  4219f0:	sbb    cl,BYTE PTR [edx]
  4219f2:	aam    0xf3
  4219f4:	lods   al,BYTE PTR ds:[esi]
  4219f5:	add    DWORD PTR [ecx+0x293106d9],esi
  4219fb:	aaa    
  4219fc:	add    BYTE PTR [ecx],0xfa
  4219ff:	mov    al,0xd9
  421a01:	shr    ebp,0xf0
  421a04:	or     esi,DWORD PTR [ebp-0x3cfa65d7]
  421a0a:	jns    0x421a79
  421a0c:	fcos   
  421a0e:	fldenv [edx+0x987c6d6]
  421a14:	leave  
  421a15:	add    DWORD PTR [edx-0x46774f19],ebx
  421a1b:	in     al,dx
  421a1c:	or     esi,DWORD PTR [ebp+0x31f46af8]
  421a22:	mov    ebx,0x0
  421a27:	aad    0xce
  421a29:	test   al,0x58
  421a2b:	hlt    
  421a2c:	cmp    eax,0x1c0d987
  421a31:	pop    ebx
  421a32:	out    0xb9,al
  421a34:	or     al,0x96
  421a36:	mov    al,0x6
  421a38:	(bad)  
  421a39:	in     eax,dx
  421a3a:	enter  0xc118,0xde
  421a3e:	sbb    eax,0x33ed8a58
  421a43:	push   0xd5f72965
  421a48:	(bad)  
  421a49:	cli    
  421a4a:	inc    edx
  421a4b:	mov    ds:0x95f12138,al
  421a50:	sub    BYTE PTR [edx],bh
  421a52:	mov    ah,0x8f
  421a54:	ja     0x421a3b
  421a56:	test   DWORD PTR [edx+0x17],edx
  421a59:	out    0x5,al
  421a5b:	dec    esi
  421a5c:	gs (bad) 
  421a5f:	fisttp DWORD PTR [eax+eax*1]
  421a62:	hlt    
  421a63:	adc    esi,edi
  421a65:	cwd    
  421a67:	out    dx,al
  421a68:	mov    bh,0xff
  421a6a:	dec    edx
  421a6b:	add    al,0x0
  421a6d:	cmp    bp,bp
  421a70:	ds retw 
  421a73:	pop    ds
  421a74:	dec    edx
  421a75:	adc    WORD PTR [ebx],si
  421a78:	(bad)  
  421a79:	jno    0x421a7e
  421a7b:	inc    ecx
  421a7c:	push   edi
  421a7d:	jne    0xe37518c7
  421a83:	jns    0x421a0a
  421a85:	or     al,0x54
  421a87:	lds    eax,FWORD PTR [edi+0x41]
  421a8d:	jbe    0x421a94
  421a8f:	inc    esp
  421a90:	and    al,0x12
  421a92:	das    
  421a93:	cld    
  421a94:	(bad)  
  421a95:	mov    edx,0x451d7303
  421a9a:	loope  0x421b0c
  421a9c:	and    al,0xe
  421a9e:	lahf   
  421a9f:	jne    0x421af1
  421aa1:	std    
  421aa2:	and    BYTE PTR [si],cl
  421aa5:	in     eax,dx
  421aa6:	push   0xb975e800
  421aab:	sti    
  421aac:	(bad)  
  421aad:	jge    0x421a35
  421aaf:	mov    esp,0xfd93d674
  421ab4:	jmp    0x3c2:0xc2bc15d8
  421abb:	push   0x1
  421abd:	dec    ecx
  421abe:	les    ecx,FWORD PTR [eax+ebp*8]
  421ac1:	push   0x2afffcc5
  421ac6:	add    al,0xbf
  421ac8:	push   esi
  421ac9:	and    esp,edx
  421acb:	sti    
  421acc:	jbe    0x421ac8
  421ace:	cli    
  421acf:	xor    BYTE PTR [eax+0x44f2e15c],ch
  421ad5:	mov    dh,0x1b
  421ad7:	std    
  421ad8:	(bad)  
  421ad9:	xchg   esp,eax
  421ada:	pop    edi
  421adb:	xchg   DWORD PTR [eax-0xd],eax
  421ade:	sub    eax,0x85c505ac
  421ae3:	loopne 0x421a8c
  421ae5:	xor    BYTE PTR gs:[esi-0x3b],0xbd
  421aea:	imul   edi,edi,0xffffffff
  421aed:	mov    esi,0x8017a4
  421af2:	add    BYTE PTR [eax],al
  421af4:	push   edi
  421af5:	xchg   ebp,eax
  421af6:	sub    bl,0xf7
  421af9:	adc    al,0x0
  421afb:	add    BYTE PTR [eax-0x634010b1],ah
  421b01:	ins    DWORD PTR es:[edi],dx
  421b02:	jne    0x421b7f
  421b04:	xlat   BYTE PTR ds:[ebx]
  421b05:	std    
  421b06:	jbe    0x421ade
  421b08:	sbb    eax,DWORD PTR [edi+0x1c1cffb5]
  421b0e:	inc    eax
  421b0f:	les    ebp,FWORD PTR [edi+0x7aeff409]
  421b15:	ins    DWORD PTR es:[edi],dx
  421b16:	add    BYTE PTR [edi-0x7fb691],al
  421b1c:	cld    
  421b1d:	sub    al,0x79
  421b1f:	or     edi,0xffffffa9
  421b22:	add    eax,DWORD PTR [eax]
  421b24:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b26:	jg     0x421b4b
  421b28:	jnp    0x421b4a
  421b2a:	add    BYTE PTR [eax],al
  421b2c:	mov    ah,0xac
  421b2e:	fisttp WORD PTR [ebx+0x1ff3]
  421b34:	repnz pop ds
  421b36:	add    BYTE PTR [ecx-0x188efc8],cl
  421b3c:	outs   dx,DWORD PTR ds:[esi]
  421b3d:	test   eax,0xd46654fb
  421b42:	fistp  WORD PTR [ebx]
  421b44:	inc    ecx
  421b45:	test   eax,0xf23103cf
  421b4a:	cmp    eax,0x28d743
  421b4f:	std    
  421b50:	add    esp,DWORD PTR [eax+eax*2+0x1e6770c]
  421b57:	add    BYTE PTR [eax],al
  421b59:	add    BYTE PTR [eax],al
  421b5b:	repz push es
  421b5d:	je     0x421b1e
  421b5f:	shl    dl,1
  421b61:	ss call 0xeae0:0x24e7a074
  421b69:	ret    0xd1b
  421b6c:	sub    ah,dh
  421b6e:	add    esi,DWORD PTR [ebx+ecx*8-0x3e]
  421b72:	adc    ebp,DWORD PTR [edx-0x35]
  421b75:	retf   0x7a0b
  421b78:	jmp    DWORD PTR [ecx-0x46]
  421b7b:	call   0x4039ccff
  421b80:	xlat   BYTE PTR ds:[ebx]
  421b81:	jno    0x421bb6
  421b83:	dec    esp
  421b84:	mov    cs,WORD PTR [ebp+0x3ebd2f25]
  421b8a:	or     BYTE PTR [edi+0x15],0x45
  421b8e:	sbb    BYTE PTR [eax-0x19fc2916],0x8a
  421b95:	test   al,0x1
  421b97:	repz push es
  421b99:	addr16 in al,0x4
  421b9c:	and    DWORD PTR [edx+0x444ed0df],0x3
  421ba3:	repz push es
  421ba5:	pushf  
  421ba6:	add    dh,BYTE PTR [ebx]
  421ba8:	pop    ds
  421ba9:	test   BYTE PTR ds:0x677315e7,ah
  421baf:	adc    BYTE PTR [edi-0x1a],al
  421bb2:	add    esi,ebx
  421bb4:	dec    esi
  421bb5:	dec    ebx
  421bb6:	add    esi,ebx
  421bb8:	push   es
  421bb9:	dec    ebp
  421bbb:	(bad)  
  421bbc:	adc    eax,0x91e5
  421bc1:	add    BYTE PTR [eax-0xcfaef16],al
  421bc7:	push   es
  421bc8:	mov    edi,0xcd159813
  421bcd:	and    edx,DWORD PTR [ebx+edx*4]
  421bd0:	jae    0x421b9a
  421bd2:	rcr    dh,1
  421bd4:	mov    ebp,0xfffad098
  421bd9:	sbb    BYTE PTR [edx+ecx*2+0x4f],bh
  421bdd:	pop    esp
  421bde:	mov    ebx,0x62392fe9
  421be3:	leave  
  421be4:	and    edx,ecx
  421be6:	inc    eax
  421be7:	sub    eax,0x131189dc
  421bec:	and    BYTE PTR [ebp-0x9407799],0xdb
  421bf3:	inc    edi
  421bf4:	mov    dh,0x8f
  421bf6:	out    dx,al
  421bf7:	push   es
  421bf8:	add    BYTE PTR [edx-0x47],ah
  421bfb:	dec    ebx
  421bfc:	(bad)  
  421bfd:	call   0x60b4e832
  421c02:	ins    BYTE PTR es:[edi],dx
  421c03:	cwde   
  421c04:	pop    es
  421c05:	gs std 
  421c07:	cwde   
  421c08:	inc    ebx
  421c09:	push   esi
  421c0a:	mov    al,BYTE PTR ds:0xe90ca589
  421c10:	sub    BYTE PTR [ebp-0x4b0302ec],ch
  421c16:	in     al,0x7f
  421c18:	push   ebx
  421c19:	or     eax,0x41cd7ff3
  421c1e:	(bad)  
  421c1f:	leave  
  421c20:	cld    
  421c21:	imul   edx,DWORD PTR es:[ebp+0x73],0xffffffff
  421c26:	add    BYTE PTR [eax],al
  421c28:	add    cl,dl
  421c2a:	cwde   
  421c2b:	punpckldq mm7,DWORD PTR [ebx-0x75f1ec18]
  421c32:	add    BYTE PTR [ecx-0x77172b63],cl
  421c38:	das    
  421c39:	pop    es
  421c3a:	lea    eax,[ebx-0xa]
  421c3d:	adc    DWORD PTR [eax+0x4cfb75bf],ecx
  421c43:	inc    ebx
  421c44:	or     eax,0x55fd13e0
  421c49:	retf   
  421c4a:	clc    
  421c4b:	out    0xaf,eax
  421c4d:	sbb    dl,BYTE PTR [edx]
  421c4f:	cld    
  421c50:	into   
  421c51:	jl     0x421c3b
  421c53:	sbb    eax,DWORD PTR [eax]
  421c55:	ret    0xa2a7
  421c58:	(bad)  
  421c59:	push   ebp
  421c5a:	mov    BYTE PTR [eax+0x24],bh
  421c5d:	xchg   ebp,eax
  421c5e:	or     BYTE PTR [ebx],cl
  421c60:	test   ah,dl
  421c62:	or     DWORD PTR [eax],eax
  421c64:	add    BYTE PTR [ebx-0x5f],ah
  421c67:	cld    
  421c68:	dec    DWORD PTR [edx-0x11db7f12]
  421c6e:	pop    es
  421c6f:	add    BYTE PTR [eax],al
  421c71:	pop    ebx
  421c72:	jl     0x421c7e
  421c74:	xor    DWORD PTR [esi+0x4a00942b],0x8
  421c7b:	add    BYTE PTR [edi],cl
  421c7d:	fild   QWORD PTR [edx-0x3]
  421c80:	call   FWORD PTR [edx-0x12]
  421c83:	and    BYTE PTR [esi+edi*4],0x7
  421c87:	add    BYTE PTR [eax],al
  421c89:	jmp    0x0:0x830a6e
  421c90:	xchg   BYTE PTR [eax+ebp*4],ch
  421c93:	add    BYTE PTR [edx],bl
  421c95:	or     BYTE PTR [eax],al
  421c97:	jg     0xb4219df
  421c9d:	test   eax,0x81a07fc
  421ca2:	out    0x47,eax
  421ca4:	aad    0x7b
  421ca6:	and    BYTE PTR [eax],dl
  421ca8:	xchg   DWORD PTR [ebx+0x8091c20],ecx
  421cae:	add    BYTE PTR [eax+0x57],dl
  421cb1:	dec    esp
  421cb2:	and    BYTE PTR [eax-0x56],ch
  421cb5:	jbe    0x421cf7
  421cb7:	and    al,0xa6
  421cb9:	fbstp  TBYTE PTR [ebx-0x52]
  421cbc:	retf   0x3707
  421cbf:	inc    esp
  421cc0:	mov    esi,0xb4850b17
  421cc5:	or     al,BYTE PTR [eax]
  421cc7:	add    BYTE PTR [eax+0x3f],al
  421cca:	and    BYTE PTR [edi-0x12],dl
  421ccd:	gs jo  0x421cd8
  421cd0:	repz stc 
  421cd2:	cli    
  421cd3:	or     al,0x6e
  421cd5:	xor    eax,DWORD PTR [ecx]
  421cd7:	add    bl,dh
  421cd9:	or     ebx,edi
  421cdb:	or     al,0x6f
  421cdd:	add    eax,DWORD PTR gs:[eax]
  421ce0:	repz mov al,ds:0x1de3239f
  421ce6:	je     0x423a64
  421cec:	push   0x7f8ab72b
  421cf1:	inc    ecx
  421cf2:	cld    
  421cf3:	add    BYTE PTR [eax],al
  421cf5:	add    BYTE PTR [eax],al
  421cf7:	repz sbb eax,0x8c2d88b1
  421cfd:	mov    bl,0x3
  421cff:	push   0xffffffe9
  421d01:	out    0xf,eax
  421d03:	jbe    0x421d62
  421d05:	cwde   
  421d06:	sahf   
  421d07:	inc    esp
  421d08:	cmp    dh,ah
  421d0a:	adc    eax,0x30dd1db3
  421d0f:	or     al,0x1e
  421d11:	add    BYTE PTR ds:0x3cf76,cl
  421d17:	repz les edx,FWORD PTR [ebx+ecx*1-0x68185e92]
  421d1f:	repz sbb eax,0x62785000
  421d25:	lock imul edx,edx,0xfc43c4c5
  421d2c:	jmp    0x421cb2
  421d2e:	mov    edi,0xfcdfa9e4
  421d33:	in     al,dx
  421d34:	stc    
  421d35:	sar    BYTE PTR [edi+0x38162d33],cl
  421d3b:	mov    ch,0x19
  421d3d:	test   DWORD PTR [edi-0x76ffe00d],esp
  421d43:	pop    DWORD PTR [eax+eax*4-0x1]
  421d47:	les    esp,FWORD PTR [eax]
  421d49:	mov    eax,DWORD PTR [ebx+0x36b0717]
  421d4f:	repz push es
  421d51:	push   ecx
  421d52:	add    eax,DWORD PTR [ebp+0x7e]
  421d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d56:	mov    ah,BYTE PTR [eax-0x15]
  421d59:	pop    esi
  421d5a:	add    eax,DWORD PTR [eax]
  421d5c:	add    BYTE PTR [eax],al
  421d5e:	repz push es
  421d60:	jo     0x421db9
  421d62:	rol    BYTE PTR [edx+0x7ff303e6],1
  421d68:	jp     0x421d51
  421d6a:	je     0x421d73
  421d6c:	out    0x3,eax
  421d6e:	mov    esp,DWORD PTR [edx+0x7df30389]
  421d74:	xchg   esi,eax
  421d75:	xchg   BYTE PTR [esi-0x65],ah
  421d78:	add    eax,0x217dee8d
  421d7d:	adc    BYTE PTR [edx],bl
  421d7f:	mov    edi,0x7dcb96e2
  421d84:	xor    esp,esi
  421d86:	jnp    0x421d90
  421d88:	sbb    eax,0x6e0ab421
  421d8d:	fnstenv [ebx+ecx*8+0xa]
  421d91:	cmc    
  421d92:	dec    esp
  421d93:	jle    0x421d18
  421d95:	and    DWORD PTR [edi],ebp
  421d97:	mov    ecx,0x1151863e
  421d9c:	dec    ebp
  421d9d:	sbb    DWORD PTR [eax-0x60fc0a16],0xffffffbc
  421da4:	cmp    eax,0xb186f0c4
  421da9:	or     esi,ebx
  421dab:	fwait
  421dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dad:	mov    ?,WORD PTR [eax+0x692ba6ea]
  421db3:	inc    edi
  421db4:	out    0x3,al
  421db6:	jo     0x421dfe
  421db8:	in     eax,0x90
  421dba:	je     0x421dcf
  421dbc:	or     eax,0xb9e0cb20
  421dc1:	sbb    DWORD PTR [eax],eax
  421dc3:	add    BYTE PTR [eax],al
  421dc5:	test   BYTE PTR ds:[edx-0xe0cf19],ch
  421dcc:	push   cs
  421dcd:	xor    BYTE PTR [edx],dl
  421dcf:	cld    
  421dd0:	xchg   DWORD PTR [edi-0x43],ebp
  421dd3:	and    edi,DWORD PTR ds:0xe8ff4a17
  421dd9:	lock test al,0x28
  421ddc:	mov    eax,ds:0xd6be5bf4
  421de1:	fucomip st,st(6)
  421de3:	mov    edi,0xe707cf6a
  421de8:	pop    ss
  421de9:	in     al,dx
  421dea:	adc    bh,ah
  421dec:	push   ds
  421ded:	xlat   BYTE PTR ds:[ebx]
  421dee:	aad    0xa2
  421df0:	scas   eax,DWORD PTR es:[edi]
  421df1:	fcom   QWORD PTR [edx]
  421df3:	mov    bl,0xcd
  421df5:	jo     0x421e08
  421df7:	cld    
  421df8:	jmp    0x97e50815
  421dfd:	add    al,0xb3
  421dff:	pop    ebp
  421e00:	pop    ecx
  421e01:	imul   BYTE PTR [edi+0x47328c88]
  421e07:	or     ebp,ecx
  421e09:	in     eax,dx
  421e0a:	xchg   ebp,eax
  421e0b:	and    esp,ebp
  421e0d:	jno    0x421dba
  421e0f:	add    ebp,ecx
  421e11:	fst    QWORD PTR [ebp-0x34510add]
  421e17:	pop    es
  421e18:	call   0xdb53083
  421e1d:	pop    ds
  421e1e:	sub    ecx,eax
  421e20:	pop    ecx
  421e21:	std    
  421e22:	adc    al,BYTE PTR [ebx+0x31087b29]
  421e28:	sub    DWORD PTR [eax],eax
  421e2a:	add    BYTE PTR [eax],al
  421e2c:	sub    bl,cl
  421e2e:	add    edx,edx
  421e30:	mov    al,0x1a
  421e32:	xlat   BYTE PTR ds:[ebx]
  421e33:	sub    esp,ebx
  421e35:	push   es
  421e36:	push   ebx
  421e37:	jb     0x421dfc
  421e39:	rcl    BYTE PTR [eax-0x26],0x29
  421e3d:	fstp   DWORD PTR [edx-0x7]
  421e40:	mov    eax,DWORD PTR [ebx]
  421e42:	mov    DWORD PTR [eax+ebp*8+0x63001787],esp
  421e49:	push   ebx
  421e4a:	add    BYTE PTR [ecx+0x1affc92],cl
  421e50:	icebp  
  421e51:	pop    esp
  421e52:	push   edx
  421e53:	push   edi
  421e54:	push   ecx
  421e55:	es ins BYTE PTR es:[edi],dx
  421e57:	adc    cl,BYTE PTR [edx]
  421e59:	or     ecx,DWORD PTR [edi+0x53]
  421e5c:	jmp    0xaab819b4
  421e61:	icebp  
  421e62:	jno    0x421e70
  421e64:	fldenv [edx-0x1b]
  421e67:	std    
  421e68:	mov    al,BYTE PTR [ebx+edi*8]
  421e6b:	xlat   BYTE PTR ds:[ebx]
  421e6c:	add    esp,esi
  421e6e:	aaa    
  421e6f:	repz mov esp,0x8b468920
  421e75:	push   esp
  421e76:	in     al,0x8f
  421e78:	es repnz sti 
  421e7b:	mov    DWORD PTR [edi],edx
  421e7d:	out    0x37,eax
  421e7f:	ret    
  421e80:	push   es
  421e81:	adc    DWORD PTR [edi+0x53],ecx
  421e84:	and    al,0x5b
  421e86:	sti    
  421e87:	jne    0x421ec3
  421e89:	icebp  
  421e8a:	jno    0x421e98
  421e8c:	jmp    0x14003f3
  421e91:	add    BYTE PTR [eax],al
  421e93:	pop    edx
  421e94:	add    al,0xfb
  421e96:	xlat   BYTE PTR ds:[ebx]
  421e97:	or     edx,0x6ecd0c70
  421e9d:	clc    
  421e9e:	call   0x3cc643
  421ea3:	or     bl,cl
  421ea5:	out    0x16,eax
  421ea7:	xchg   ecx,eax
  421ea8:	ss clc 
  421eaa:	mov    eax,DWORD PTR [edi-0x4]
  421ead:	xchg   DWORD PTR [ebx+ecx*1],ebx
  421eb0:	add    DWORD PTR [ebx+ecx*4],0x4f
  421eb4:	adc    al,0x85
  421eb6:	dec    eax
  421eb7:	push   ss
  421eb8:	sub    DWORD PTR [eax+ecx*1-0x66],0xa
  421ebd:	pop    ebx
  421ebe:	pop    esi
  421ebf:	mov    cl,0xc2
  421ec1:	mov    esi,0x891df30c
  421ec6:	dec    ebx
  421ec7:	pop    ss
  421ec8:	sub    BYTE PTR es:[ebx-0x7fe1f848],ch
  421ecf:	retf   
  421ed0:	adc    BYTE PTR [ebx+eax*1+0xd29de01],dl
  421ed7:	and    esp,DWORD PTR [ecx]
  421ed9:	xchg   ebp,eax
  421eda:	and    esp,edi
  421edc:	sub    BYTE PTR [edi-0x4aca00dd],dl
  421ee2:	cld    
  421ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee4:	cmp    BYTE PTR [ecx+0x7],al
  421ee7:	repz fiadd DWORD PTR [esi+0x33972eb]
  421eee:	add    dh,bl
  421ef0:	sbb    eax,0xc41c55af
  421ef5:	add    DWORD PTR [eax+0x0],ebp
  421ef8:	add    BYTE PTR [eax],al
  421efa:	or     DWORD PTR [edi+0x6568846e],0x2b
  421f01:	mov    ds:0x301a6fa2,al
  421f06:	dec    eax
  421f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f08:	ret    0x1807
  421f0b:	pop    ebp
  421f0c:	or     al,BYTE PTR [ebp+ebp*8+0x7e00001e]
  421f13:	fiadd  DWORD PTR [ebx]
  421f15:	inc    BYTE PTR [eax+ebx*4+0x2b]
  421f19:	fisttp QWORD PTR [edx-0x60]
  421f1c:	sbb    cl,BYTE PTR [eax+0x4a7ed7ae]
  421f22:	das    
  421f23:	mov    al,0xc
  421f25:	add    bl,dh
  421f27:	popf   
  421f28:	add    edx,DWORD PTR [eax-0x20]
  421f2b:	fstp   st(3)
  421f2d:	pop    edx
  421f2e:	jmp    0x421f48
  421f30:	jne    0x421ef1
  421f32:	jo     0x421f11
  421f34:	dec    BYTE PTR [edi-0x67]
  421f37:	push   ds
  421f38:	test   al,0xff
  421f3a:	cld    
  421f3b:	sbb    al,0x40
  421f3d:	mov    ch,BYTE PTR [esi+eax*1-0x3b864c09]
  421f44:	sbb    ch,BYTE PTR [esi+edx*8]
  421f47:	add    dl,BYTE PTR [esi]
  421f49:	sbb    eax,0x87dd4770
  421f4e:	xchg   BYTE PTR [edi],al
  421f50:	out    0x3,eax
  421f52:	js     0x421f18
  421f54:	cli    
  421f55:	mov    bl,0x79
  421f57:	xchg   esp,eax
  421f58:	imul   BYTE PTR [ebx]
  421f5a:	cli    
  421f5b:	cli    
  421f5c:	in     eax,dx
  421f5d:	sbb    al,0x0
  421f5f:	add    BYTE PTR [eax],al
  421f61:	jo     0x421faa
  421f63:	cmc    
  421f64:	xchg   DWORD PTR [edx-0x23fc18f9],ecx
  421f6a:	stos   DWORD PTR es:[edi],eax
  421f6b:	ficom  DWORD PTR [ebp+esi*8-0x6bebb479]
  421f72:	push   cs
  421f73:	out    0xf3,al
  421f75:	add    dl,dh
  421f77:	sbb    DWORD PTR [ecx+0x202b7c23],esi
  421f7d:	xchg   esp,eax
  421f7e:	jg     0x421f5a
  421f80:	sbb    al,0x77
  421f82:	and    DWORD PTR [esi+0x130df997],0x20
  421f89:	addr16 hlt 
  421f8b:	push   ds
  421f8c:	repnz sbb al,0x7
  421f8f:	fs inc ebx
  421f91:	loope  0x421f84
  421f93:	jae    0x421f5b
  421f95:	dec    eax
  421f96:	pop    ds
  421f97:	imul   ecx,DWORD PTR [eax],0x46
  421f9a:	push   cs
  421f9b:	das    
  421f9c:	sub    eax,0x8ee60e3d
  421fa1:	jno    0x421faa
  421fa3:	gs sbb al,0x2f
  421fa6:	jg     0x421fa6
  421fa8:	ret    
  421fa9:	lods   eax,DWORD PTR ds:[esi]
  421faa:	xchg   ebx,eax
  421fab:	push   eax
  421fac:	sub    BYTE PTR [esi+0x171fa381],cl
  421fb2:	xchg   esp,eax
  421fb3:	push   eax
  421fb4:	cmp    BYTE PTR [ecx+0xcb33d0a],0xc5
  421fbb:	dec    DWORD PTR [esi+0x2a3906f0]
  421fc1:	pop    ebp
  421fc2:	in     eax,dx
  421fc3:	push   eax
  421fc4:	adc    DWORD PTR [eax],eax
  421fc6:	add    BYTE PTR [eax],al
  421fc8:	lods   eax,DWORD PTR ds:[esi]
  421fc9:	or     eax,0xc875e9fc
  421fce:	sti    
  421fcf:	add    DWORD PTR [eax+0x390efcfe],ebx
  421fd5:	sbb    al,0xfe
  421fd7:	call   0xe9c4a1cc
  421fdc:	out    0xa,al
  421fde:	cld    
  421fdf:	popa   
  421fe0:	mov    eax,0xda7446cd
  421fe5:	push   ds
  421fe6:	ss jo  0x421f99
  421fe9:	add    DWORD PTR [ebx+0x39260b24],ecx
  421fef:	loop   0x421fea
  421ff1:	or     dh,BYTE PTR [esi+0x6eebf]
  421ff7:	je     0x42206b
  421ff9:	or     eax,0x85e8befa
  421ffe:	pop    ss
  421fff:	sub    DWORD PTR [esi-0x11860668],ebp
  422005:	pop    ds
  422006:	sbb    BYTE PTR [edx+esi*1+0x11],dh
  42200a:	out    0xfc,eax
  42200c:	cmc    
  42200d:	or     edi,esp
  42200f:	push   eax
  422010:	or     DWORD PTR ds:0x886be9fc,ecx
  422016:	inc    DWORD PTR [esi-0x1e78f518]
  42201c:	xor    ah,al
  42201e:	jb     0x422093
  422020:	and    eax,0x740f5c4d
  422025:	inc    esp
  422026:	shr    ebp,0xf0
  422029:	mov    ecx,0x4d88
  42202e:	add    BYTE PTR [esi+0x21],ch
  422031:	repz call 0x1a932727
  422037:	aam    0xb3
  422039:	add    BYTE PTR ss:[ebp+0x5],dl
  42203d:	je     0x422098
  42203f:	repnz dec edi
  422041:	add    al,0x75
  422043:	std    
  422044:	jge    0x421ff7
  422046:	adc    ah,al
  422048:	icebp  
  422049:	sti    
  42204a:	call   0x3dfba1
  42204f:	ror    DWORD PTR [edi-0x2a],cl
  422052:	ja     0x422023
  422054:	sub    ebx,DWORD PTR [ecx-0x2a]
  422057:	jl     0x42206c
  422059:	xchg   DWORD PTR [edi-0x3a],ebx
  42205c:	jg     0x42209f
  42205e:	(bad)  
  42205f:	push   0x58
  422061:	dec    esp
  422062:	push   eax
  422063:	repnz push cs
  422065:	or     bh,bh
  422067:	lds    esi,FWORD PTR ds:0x3c4b9d7
  42206d:	add    BYTE PTR [eax],al
  42206f:	pop    ss
  422070:	xchg   DWORD PTR [esi+edi*8],ecx
  422073:	(bad)
  422076:	sbb    dl,cl
  422078:	cmp    DWORD PTR [ecx-0x6],esi
  42207b:	add    DWORD PTR [ecx+0x8],edi
  42207e:	cmp    ecx,DWORD PTR [ecx+0x7c]
  422081:	add    eax,ebp
  422083:	in     eax,dx
  422084:	add    al,BYTE PTR [eax]
  422086:	add    BYTE PTR [ebx],dl
  422088:	push   ecx
  422089:	or     BYTE PTR [eax],bh
  42208b:	mov    bh,0xfa
  42208d:	jae    0x422098
  42208f:	xlat   BYTE PTR ds:[ebx]
  422090:	dec    eax
  422091:	or     al,0x50
  422093:	add    BYTE PTR [eax],al
  422095:	add    BYTE PTR [edx-0x80],dh
  422098:	or     bh,bh
  42209a:	gs jge 0x4220e0
  42209d:	or     BYTE PTR [ecx],dh
  42209f:	lds    esi,FWORD PTR [eax+0x9]
  4220a2:	jmp    0x8508:0x4ad3ccda
  4220a9:	pop    edi
  4220aa:	push   edx
  4220ab:	dec    esi
  4220ac:	push   edi
  4220ad:	leave  
  4220ae:	fmul   DWORD PTR [ebx]
  4220b0:	cld    
  4220b1:	mov    cl,BYTE PTR [eax*4+0x29f3fff4]
  4220b8:	or     eax,0x1323383
  4220bd:	push   eax
  4220be:	or     al,0x2b
  4220c0:	in     al,0x11
  4220c2:	mov    bl,0x1d
  4220c4:	(bad)  
  4220c5:	lds    ecx,FWORD PTR [ebx]
  4220c7:	inc    edi
  4220c8:	or     bh,ch
  4220ca:	hlt    
  4220cb:	jae    0x4220f5
  4220cd:	outs   dx,DWORD PTR ds:[esi]
  4220ce:	xchg   ecx,eax
  4220cf:	jecxz  0x4220ea
  4220d1:	mov    BYTE PTR [ebp-0x30775020],ch
  4220d7:	mov    al,ds:0xa0f307a1
  4220dc:	mov    eax,ds:0x249ef30b
  4220e1:	pop    ss
  4220e2:	icebp  
  4220e3:	sbb    eax,0xa3255100
  4220e8:	dec    edi
  4220e9:	jmp    0x8a583da4
  4220ee:	dec    esp
  4220ef:	push   cs
  4220f0:	sub    BYTE PTR ds:0x2162c9b,dl
  4220f6:	popa   
  4220f7:	push   ds
  4220f8:	add    BYTE PTR [eax],al
  4220fa:	add    BYTE PTR [eax],al
  4220fc:	add    BYTE PTR [ecx],cl
  4220fe:	adc    dh,BYTE PTR [eax-0x736d0c97]
  422104:	xlat   BYTE PTR ds:[ebx]
  422105:	jo     0x42215c
  422107:	push   ss
  422108:	out    0xfd,eax
  42210a:	jno    0x422125
  42210c:	cld    
  42210d:	outs   dx,BYTE PTR ds:[esi]
  42210e:	pop    ebp
  42210f:	cdq    
  422110:	adc    al,0x78
  422112:	pop    ebx
  422113:	mov    bl,0x67
  422115:	jnp    0x4220d2
  422117:	ret    0xc1ff
  42211a:	test   DWORD PTR [esi-0x67],ebp
  42211d:	repz sbb eax,0xaafcbf7d
  422123:	inc    ebx
  422124:	xor    DWORD PTR [ebx],0x12
  422127:	std    
  422128:	xor    BYTE PTR [ebx],dh
  42212a:	sti    
  42212b:	mov    BYTE PTR [eax],al
  42212d:	jp     0x4220ba
  42212f:	add    BYTE PTR [eax],al
  422131:	repz push es
  422133:	je     0x4221b4
  422135:	sbb    cl,BYTE PTR [ecx]
  422137:	pop    ebp
  422138:	sbb    DWORD PTR [esi],esi
  42213a:	push   es
  42213b:	out    0xc3,eax
  42213d:	lods   eax,DWORD PTR ds:[esi]
  42213e:	xchg   ecx,eax
  42213f:	dec    edi
  422140:	mov    edx,0x4aa1437b
  422145:	xor    esi,DWORD PTR [ecx+0x22732871]
  42214b:	or     DWORD PTR cs:[eax],0x6
  42214f:	jmp    0xabc01457
  422154:	or     esp,DWORD PTR [edx]
  422156:	inc    eax
  422157:	mov    ah,0xb0
  422159:	jne    0x422116
  42215b:	retf   0x1a07
  42215e:	dec    eax
  42215f:	xchg   edx,eax
  422160:	add    eax,0x74000000
  422165:	call   DWORD PTR [edi+0x521fb38c]
  42216b:	pop    ss
  42216c:	mov    edi,0xe7446a0a
  422171:	or     BYTE PTR [ebp+0x4],0xf3
  422175:	push   es
  422176:	je     0x422107
  422178:	shr    dh,1
  42217a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42217b:	mov    edi,0x2be6f6d0
  422180:	data16 and cl,ch
  422183:	sbb    BYTE PTR [ebx-0x6a],bh
  422186:	repnz sub eax,DWORD PTR [ebx+0x64]
  42218a:	out    0x3,al
  42218c:	ja     0x4221d5
  42218e:	cmp    bl,BYTE PTR [edi-0x79257195]
  422194:	jo     0x422179
  422196:	dec    esi
  422197:	add    esi,ebx
  422199:	push   es
  42219a:	aaa    
  42219b:	xchg   DWORD PTR [eax+0x4cb3f6e2],esi
  4221a1:	cli    
  4221a2:	inc    esp
  4221a3:	add    esi,ebx
  4221a5:	and    BYTE PTR [esi-0xd824771],0xdf
  4221ac:	call   0x1537212c
  4221b1:	test   BYTE PTR [esi-0x1809b30b],0xc5
  4221b8:	dec    esp
  4221b9:	or     bh,ah
  4221bb:	gs mov al,0x94
  4221be:	pop    ss
  4221bf:	ins    BYTE PTR es:[edi],dx
  4221c0:	add    dl,BYTE PTR [esi+0x22224e0a]
  4221c6:	jl     0x422150
  4221c8:	add    BYTE PTR [eax],al
  4221ca:	add    dl,ch
  4221cc:	or     dl,BYTE PTR [ebp+0x51]
  4221cf:	pop    ecx
  4221d0:	imul   edi,ebp,0x23a66f36
  4221d6:	(bad)  
  4221d8:	pop    ds
  4221d9:	and    esi,DWORD PTR [edx-0x5b]
  4221dc:	add    DWORD PTR [ebx-0x76fe93d7],eax
  4221e2:	mov    ds:0xc1467fec,al
  4221e7:	jns    0x4221ea
  4221e9:	mov    DWORD PTR [edx-0xeb88014],ebp
  4221ef:	imul   edi,esi,0x81eca988
  4221f5:	inc    eax
  4221f6:	in     eax,0xdf
  4221f8:	add    al,0xc6
  4221fa:	sub    eax,0xddfef993
  4221ff:	and    ebp,0xf
  422202:	(bad)  
  422203:	clc    
  422204:	and    DWORD PTR [eax],esi
  422206:	iret   
  422207:	in     al,0xa
  422209:	mov    dh,0xd7
  42220b:	out    dx,al
  42220c:	push   es
  42220d:	add    BYTE PTR [ebx+esi*4-0x1b],ch
  422211:	pop    ss
  422212:	scas   eax,DWORD PTR es:[edi]
  422213:	out    dx,eax
  422214:	push   es
  422215:	inc    eax
  422216:	and    BYTE PTR [edx+0x532d8810],al
  42221c:	std    
  42221d:	pop    esp
  42221e:	aas    
  42221f:	push   0xf3ab5a24
  422224:	push   es
  422225:	push   ebx
  422226:	bound  ebx,QWORD PTR [ebx]
  422228:	xchg   ebx,esp
  42222a:	add    BYTE PTR [edx-0x7b],dh
  42222d:	call   0x42226e
  422232:	fstp   DWORD PTR [eax+0x53]
  422235:	call   0x3e5dd0
  42223a:	or     bl,bl
  42223c:	ja     0x42221c
  42223e:	sbb    al,BYTE PTR ds:0xcd97d887
  422244:	or     eax,DWORD PTR [edx+ebp*8-0x50fffffd]
  42224b:	outs   dx,BYTE PTR ds:[esi]
  42224c:	and    BYTE PTR [eax],dl
  42224e:	or     DWORD PTR [esi+0x20],0x10
  422252:	mov    ds:0xa0067c9,al
  422257:	mov    DWORD PTR [edi+ecx*1-0x30eaa],edi
  42225e:	fidivr DWORD PTR [edi+0x70]
  422261:	and    al,0xb6
  422263:	fdiv   QWORD PTR [ebx+0x6a04ca6c]
  422269:	and    DWORD PTR [ecx-0x37],edx
  42226c:	dec    esp
  42226d:	push   0x62
  42226f:	push   ebp
  422270:	in     al,0x69
  422272:	adc    BYTE PTR [ebx],al
  422274:	add    BYTE PTR [edx+ecx*1-0x651f7c00],al
  42227b:	add    al,0x0
  42227d:	mov    edx,DWORD PTR [ebp+0x54]
  422280:	in     al,0x1b
  422282:	add    eax,DWORD PTR cs:[eax]
  422285:	test   BYTE PTR [edx+0x1],cl
  422288:	test   al,dl
  42228a:	call   0x1026:0xc68d0004
  422291:	call   0x3e8422
  422296:	add    BYTE PTR [eax],al
  422298:	add    BYTE PTR [eax],dh
  42229a:	inc    BYTE PTR [esi+0x695d0ac6]
  4222a0:	push   ebx
  4222a1:	sub    BYTE PTR ds:0x884a00d6,0xbc
  4222a8:	psllq  mm3,QWORD PTR [ecx+0x1e4cff4e]
  4222af:	xchg   DWORD PTR [ebx+0xf],eax
  4222b2:	cs mov al,0xe7
  4222b5:	cmc    
  4222b6:	or     eax,DWORD PTR [eax]
  4222b8:	add    BYTE PTR [eax-0x72],ch
  4222bb:	jg     0x4222b2
  4222bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222be:	cmp    edx,DWORD PTR ds:0xaa0dcf73
  4222c4:	imul   ecx,DWORD PTR [esp+ecx*2+0x1e391528],0x627b5600
  4222cf:	fcom   QWORD PTR [eax]
  4222d1:	sbb    eax,DWORD PTR [eax+0x60]
  4222d4:	std    
  4222d5:	cld    
  4222d6:	popf   
  4222d7:	xchg   esp,eax
  4222d8:	and    esp,esp
  4222da:	sbb    eax,0x1d738405
  4222df:	add    BYTE PTR [eax],al
  4222e1:	jae    0x422345
  4222e3:	or     BYTE PTR [eax],al
  4222e5:	addr16 jo 0x42226f
  4222e8:	inc    ebx
  4222e9:	femms  
  4222eb:	mov    al,0xe7
  4222ed:	push   edi
  4222ee:	mov    DWORD PTR [eax],eax
  4222f0:	add    BYTE PTR [eax+0xd],bh
  4222f3:	jl     0x4222ea
  4222f5:	inc    edi
  4222f6:	sub    BYTE PTR ds:0xaa2e0f73,dl
  4222fc:	imul   eax,DWORD PTR [eax],0x6d1d0000
  422302:	sub    ch,bl
  422304:	retf   0x1d
  422307:	push   esi
  422308:	imul   esp,ecx,0xffffffdf
  42230b:	adc    BYTE PTR [ebx-0x73029c29],cl
  422311:	popf   
  422312:	xchg   edi,eax
  422313:	and    esi,esp
  422315:	sbb    eax,0xc96e4b8c
  42231a:	fist   WORD PTR [ebx]
  42231c:	mov    ebp,DWORD PTR [ebx]
  42231e:	mov    edi,?
  422320:	ins    BYTE PTR es:[edi],dx
  422321:	ret    
  422322:	xrelease mov BYTE PTR [esi+eax*1],ch
  422326:	aaa    
  422327:	stos   BYTE PTR es:[edi],al
  422328:	int3   
  422329:	mov    bl,0x8e
  42232b:	dec    ebp
  42232c:	cmp    eax,0x8c7fe706
  422331:	xchg   edx,eax
  422332:	fadd   DWORD PTR [esi-0x4c291d50]
  422338:	push   esp
  422339:	cmp    eax,0x7bf303f2
  42233e:	jbe    0x4223bf
  422340:	es xchg edx,eax
  422342:	int3   
  422343:	adc    al,0xa0
  422345:	loop   0x42233d
  422347:	lods   eax,DWORD PTR ds:[esi]
  422348:	mov    dl,BYTE PTR [ebp+0x2d7e2bb9]
  42234e:	out    0x3,al
  422350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422351:	jle    0x4222f5
  422353:	(bad)  
  422355:	push   ds
  422356:	inc    esp
  422357:	jne    0x422357
  422359:	push   es
  42235a:	cbw    
  42235c:	shl    bh,1
  42235e:	out    0x8f,al
  422360:	lock xchg ecx,eax
  422362:	sub    DWORD PTR es:[eax],eax
  422365:	add    BYTE PTR [eax],al
  422367:	test   DWORD PTR ds:0xa6c82bd7,0xef43151b
  422371:	or     esi,DWORD PTR [ebp-0x32]
  422374:	push   es
  422375:	xlat   BYTE PTR ds:[ebx]
  422376:	inc    ebx
  422377:	daa    
  422378:	gs sahf 
  42237a:	mov    cl,dl
  42237c:	fs daa 
  42237e:	add    bl,dh
  422380:	pop    ebx
  422381:	pop    esi
  422382:	sub    BYTE PTR [ebx-0x15],dh
  422385:	icebp  
  422386:	sbb    BYTE PTR [eax-0xcfc12d5],0x87
  42238d:	pop    esp
  42238e:	cld    
  42238f:	xchg   esp,eax
  422390:	push   es
  422391:	mov    al,BYTE PTR [ebx]
  422393:	and    bl,BYTE PTR [ebp+0x32]
  422396:	add    eax,0x3e86a72
  42239b:	repz out dx,al
  42239d:	add    esp,ecx
  42239f:	je     0x4223a7
  4223a1:	add    DWORD PTR [ecx],ebx
  4223a3:	pop    ds
  4223a4:	and    ebx,ebp
  4223a6:	jmp    0xdb1ab39b
  4223ab:	pop    es
  4223ac:	aas    
  4223ad:	fucomi st,st(6)
  4223af:	aam    0x51
  4223b1:	add    ecx,ebp
  4223b3:	lock xchg ecx,eax
  4223b5:	inc    esp
  4223b6:	lds    edx,FWORD PTR [esi+edx*2-0x77]
  4223ba:	and    eax,0x93e81e53
  4223bf:	mov    al,BYTE PTR [esi]
  4223c1:	cld    
  4223c2:	ins    DWORD PTR es:[edi],dx
  4223c3:	mov    al,0x12
  4223c5:	test   al,al
  4223c7:	icebp  
  4223c8:	push   es
  4223c9:	add    BYTE PTR [eax+eax*1+0x0],dh
  4223cd:	add    BYTE PTR [edx+ebp*1+0x10],bl
  4223d1:	mov    ecx,0xe96c1bc8
  4223d6:	lock (bad) 
  4223d8:	lock adc dh,dh
  4223db:	jns    0x4223fb
  4223dd:	inc    esi
  4223de:	ins    BYTE PTR es:[edi],dx
  4223df:	sub    dl,BYTE PTR [eax]
  4223e1:	xchg   edi,eax
  4223e2:	dec    edx
  4223e3:	jb     0x422434
  4223e5:	inc    ecx
  4223e6:	repz fld QWORD PTR [eax]
  4223e9:	jmp    0xcd86b184
  4223ee:	jecxz  0x4223dd
  4223f0:	addr16 jle 0x4223f1
  4223f3:	add    al,BYTE PTR [ecx+0x12ac95]
  4223f9:	fiadd  WORD PTR [ebx+edi*8+0x0]
  4223fd:	jmp    0xc5b6b5f2
  422402:	mov    eax,0xf084a7ed
  422407:	push   es
  422408:	data16 fdivr QWORD PTR [ebx-0x35]
  42240c:	push   eax
  42240d:	push   ebx
  42240e:	push   edx
  42240f:	push   esi
  422410:	call   0xfc47ebd6
  422415:	ins    DWORD PTR es:[edi],dx
  422416:	aaa    
  422417:	adc    eax,DWORD PTR [eax+esi*4+0x6ef]
  42241e:	and    BYTE PTR [edi],cl
  422420:	push   0xfbcb32c0
  422425:	imul   ebp,DWORD PTR [edi],0x82c1e3be
  42242b:	or     al,BYTE PTR [eax]
  42242d:	test   BYTE PTR [edx+0xc28409],cl
  422433:	add    BYTE PTR [eax],al
  422435:	dec    edx
  422436:	or     DWORD PTR [eax],eax
  422438:	push   0x5e
  42243a:	xchg   BYTE PTR [esi],bh
  42243c:	or     BYTE PTR [edx],cl
  42243e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42243f:	jne    0x422494
  422441:	bound  esp,QWORD PTR [ebp-0x2d]
  422444:	add    BYTE PTR [edx-0x73],cl
  422447:	mov    ebx,0xfb669e0f
  42244c:	call   FWORD PTR [edx]
  42244e:	shl    BYTE PTR [esi+0x18],cl
  422451:	cmp    al,0xff
  422453:	cld    
  422454:	jne    0x422448
  422456:	sbb    DWORD PTR [esi+0x14],ebp
  422459:	xor    BYTE PTR [eax+0x328ae850],ah
  42245f:	sti    
  422460:	dec    DWORD PTR [esi-0x647bf3b6]
  422466:	or     al,BYTE PTR [eax]
  422468:	add    bl,ah
  42246a:	xchg   edi,eax
  42246b:	pop    es
  42246c:	je     0x422433
  42246e:	sbb    DWORD PTR [esi+0xc],ebp
  422471:	and    BYTE PTR [ebx+0x3312e850],0xfb
  422478:	call   FWORD PTR [esi+0x4b]
  42247b:	outs   dx,DWORD PTR ds:[esi]
  42247c:	jge    0x422421
  42247e:	xchg   edi,eax
  42247f:	or     esi,DWORD PTR [ebp+eax*8+0x19]
  422483:	outs   dx,BYTE PTR ds:[esi]
  422484:	adc    BYTE PTR [eax-0x5e],ah
  422487:	push   eax
  422488:	call   0x3d578b
  42248d:	push   cs
  42248e:	dec    ebx
  42248f:	outs   dx,DWORD PTR ds:[esi]
  422490:	imul   esp,DWORD PTR [edi],0x4c281f94
  422496:	int3   
  422497:	pop    ds
  422498:	sldt   WORD PTR [eax]
  42249b:	add    bl,dh
  42249d:	in     eax,dx
  42249e:	pop    ss
  42249f:	push   esp
  4224a0:	xchg   ebp,edx
  4224a2:	push   cs
  4224a3:	imul   esi,edx,0xfee74678
  4224a9:	(bad)  
  4224aa:	push   cs
  4224ab:	cld    
  4224ac:	ja     0x42245c
  4224ae:	xchg   ebx,eax
  4224af:	das    
  4224b0:	jbe    0x42252c
  4224b2:	jecxz  0x4224f3
  4224b4:	icebp  
  4224b5:	in     eax,dx
  4224b6:	jmp    edi
  4224b8:	fimul  WORD PTR [ecx+0x1a78fc0e]
  4224be:	call   0xe3ac9af6
  4224c3:	iret   
  4224c4:	icebp  
  4224c5:	in     eax,dx
  4224c6:	dec    DWORD PTR [edi-0x60]
  4224c9:	xchg   ebp,eax
  4224ca:	push   ecx
  4224cb:	sahf   
  4224cc:	repz in eax,dx
  4224ce:	ja     0x422513
  4224d0:	iret   
  4224d1:	in     al,0x4c
  4224d3:	in     eax,dx
  4224d4:	repnz in eax,dx
  4224d6:	dec    DWORD PTR [eax-0xd3d3]
  4224dc:	mov    bl,0xa6
  4224de:	cwde   
  4224df:	neg    BYTE PTR [ecx-0x28847f13]
  4224e5:	sbb    DWORD PTR [ebx+ebp*2],ebx
  4224e8:	clc    
  4224e9:	inc    esp
  4224ea:	push   cs
  4224eb:	cld    
  4224ec:	and    BYTE PTR [esi-0x68],al
  4224ef:	popf   
  4224f0:	in     eax,0x34
  4224f2:	mov    dl,0xe7
  4224f4:	dec    esp
  4224f5:	mov    WORD PTR [ecx],ss
  4224f7:	cld    
  4224f8:	imul   ebp,DWORD PTR [ecx-0x1327f31d],0x300e
  422502:	add    bl,bl
  422504:	(bad)  
  422505:	jno    0x422504
  422507:	mov    esp,0x555b17a0
  42250c:	add    edx,DWORD PTR [edx]
  42250e:	xor    DWORD PTR [ebx+0x7858b19c],esi
  422514:	or     dh,BYTE PTR [eax-0x16f8f83f]
  42251a:	mov    dh,0x6b
  42251c:	repnz outs dx,BYTE PTR ds:[esi]
  42251e:	or     dh,BYTE PTR [edx-0xe]
  422521:	cmp    eax,0xe8711fb5
  422526:	jle    0x422551
  422528:	mov    bl,0x18
  42252a:	mov    edx,0xb4badfc3
  42252f:	sbb    al,0x8a
  422531:	test   eax,0x248faf97
  422536:	pop    eax
  422537:	sbb    DWORD PTR [edi],eax
  422539:	jmp    0xdcba79a1
  42253e:	retf   0xbea9
  422541:	sbb    al,0xcc
  422543:	mov    ah,0x8d
  422545:	and    al,0xc
  422547:	push   esp
  422548:	add    esp,DWORD PTR [ebp+0x12]
  42254b:	aaa    
  42254c:	pop    DWORD PTR [ecx-0x3f85d433]
  422552:	jl     0x422542
  422554:	xchg   ecx,eax
  422555:	sbb    al,0xc
  422557:	lods   eax,DWORD PTR ds:[esi]
  422558:	add    ebx,ebp
  42255a:	or     edi,DWORD PTR [edi-0x74ba5a4]
  422560:	mov    DWORD PTR [ecx],ebp
  422562:	xchg   edi,eax
  422563:	cmc    
  422564:	add    edx,ebp
  422566:	or     eax,DWORD PTR [eax]
  422568:	add    BYTE PTR [eax],al
  42256a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42256b:	add    edi,DWORD PTR [ebp-0x188f5c05]
  422571:	sbb    ecx,DWORD PTR [ecx]
  422573:	add    DWORD PTR [ebx],esi
  422575:	adc    DWORD PTR [edx-0x21],edi
  422578:	xchg   edx,eax
  422579:	sbb    ecx,esp
  42257b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42257c:	and    edx,DWORD PTR [ecx]
  42257e:	aaa    
  42257f:	lea    esp,[esi]
  422581:	lods   eax,DWORD PTR ds:[esi]
  422582:	mov    ch,0xc5
  422584:	in     eax,dx
  422585:	add    esp,DWORD PTR [eax]
  422587:	mov    ?,ebp
  422589:	test   al,cl
  42258b:	sbb    esp,DWORD PTR [esi-0x59]
  42258e:	mov    eax,0x317e9607
  422593:	pop    ds
  422594:	add    BYTE PTR [ecx+0x5c147503],bl
  42259a:	mov    ah,0xfa
  42259c:	push   eax
  42259d:	je     0x42254c
  42259f:	(bad)  
  4225a0:	push   eax
  4225a1:	shl    DWORD PTR [esi+0x6dd6fadc],1
  4225a7:	ret    0xe574
  4225aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ab:	ret    0x32e7
  4225ae:	test   BYTE PTR [eax+edi*8+0x12],0x34
  4225b3:	(bad)  
  4225b4:	jg     0x422602
  4225b6:	adc    eax,DWORD PTR [edx]
  4225b8:	jg     0x4225fe
  4225ba:	sti    
  4225bb:	add    ecx,edx
  4225bd:	mov    eax,ds:0x9d7603a0
  4225c2:	int    0x44
  4225c4:	in     al,dx
  4225c5:	cmp    edi,esp
  4225c7:	mov    al,0xf8
  4225c9:	mov    fs,ebx
  4225cb:	add    dh,BYTE PTR [esi-0x7b]
  4225ce:	add    BYTE PTR [eax],al
  4225d0:	add    BYTE PTR [esi-0x629c1727],dh
  4225d6:	add    edi,esp
  4225d8:	ins    DWORD PTR es:[edi],dx
  4225d9:	xlat   BYTE PTR ds:[ebx]
  4225da:	jne    0x4225ee
  4225dc:	outs   dx,BYTE PTR ds:[esi]
  4225dd:	test   esi,esi
  4225df:	sti    
  4225e0:	fdivr  st(4),st
  4225e2:	add    dh,BYTE PTR [esi-0x7]
  4225e5:	jecxz  0x42265b
  4225e7:	or     al,0x56
  4225e9:	pop    ebp
  4225ea:	or     ch,al
  4225ec:	xchg   ch,ch
  4225ee:	add    bh,ah
  4225f0:	jae    0x4225ba
  4225f2:	add    dh,BYTE PTR [esi+0x4d]
  4225f5:	or     BYTE PTR [edx-0x63],bh
  4225f8:	aaa    
  4225f9:	add    edx,DWORD PTR [eax-0x38e66d41]
  4225ff:	push   ebp
  422600:	jb     0x4225f6
  422602:	xchg   ah,ch
  422604:	in     eax,dx
  422605:	xchg   DWORD PTR [edx-0x5],ebx
  422608:	pushf  
  422609:	enter  0x7d8c,0x15
  42260d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42260e:	fsubp  st(0),st
  422610:	add    BYTE PTR [ecx-0x4],ch
  422613:	cld    
  422614:	call   DWORD PTR [esi]
  422616:	inc    esi
  422617:	outs   dx,DWORD PTR ds:[esi]
  422618:	and    eax,0x39f39b9d
  42261d:	outs   dx,DWORD PTR ds:[esi]
  42261e:	add    ebp,edi
  422620:	jne    0x4225d8
  422622:	jge    0x422662
  422624:	or     BYTE PTR [ebp-0x28f0f461],ch
  42262a:	iret   
  42262b:	pop    es
  42262c:	push   eax
  42262d:	xor    BYTE PTR ds:0x11af64e8,al
  422633:	cld    
  422634:	inc    DWORD PTR [eax]
  422636:	add    BYTE PTR [eax],al
  422638:	daa    
  422639:	pop    ds
  42263a:	mov    eax,ebx
  42263c:	xor    bl,bh
  42263e:	xchg   esi,eax
  42263f:	dec    BYTE PTR [ebp-0x4e3c764f]
  422645:	inc    ebx
  422646:	ror    DWORD PTR [edx+ebx*2],0xbe
  42264a:	mov    ah,ch
  42264c:	(bad)  [esi]
  42264e:	(bad)  
  422650:	dec    edx
  422651:	add    eax,0x12c15751
  422656:	xchg   BYTE PTR [ebp-0x3f282],al
  42265c:	or     ah,BYTE PTR [ebx+0x50a00f5]
  422662:	xor    ebx,ebx
  422664:	(bad)  
  422665:	call   DWORD PTR [ebx]
  422667:	adc    ebx,DWORD PTR [edx+0x5]
  42266a:	dec    eax
  42266b:	cmp    eax,0xaa7
  422670:	and    eax,0xb68586b0
  422675:	pop    ss
  422676:	cld    
  422677:	dec    DWORD PTR [edx+0x501063b5]
  42267d:	retf   
  42267e:	sti    
  42267f:	mov    WORD PTR [edi+0x27],ss
  422682:	clc    
  422683:	dec    DWORD PTR ds:0x6e15fcbb
  422689:	sti    
  42268a:	cmp    eax,DWORD PTR [eax]
  42268c:	repz jb 0x4226d3
  42268f:	jae    0x4226c3
  422691:	arpl   WORD PTR [ecx+0xb09b6f3],cx
  422697:	dec    edi
  422698:	fwait
  422699:	inc    ebx
  42269a:	cld    
  42269b:	cld    
  42269c:	add    BYTE PTR [eax],al
  42269e:	add    BYTE PTR [edx+esi*2+0x62e27344],ah
  4226a5:	mov    ebx,esi
  4226a7:	xchg   esi,eax
  4226a8:	jmp    0x2edd75b7
  4226ad:	(bad)  
  4226ae:	inc    DWORD PTR [edx+esi*2-0x2f2d8cc1]
  4226b5:	cwde   
  4226b6:	pop    es
  4226b7:	push   0x7e500831
  4226bc:	imul   edx,DWORD PTR [ebx],0xfffffffa
  4226bf:	fs mov ecx,0xb0b3e7af
  4226c5:	or     bh,ah
  4226c7:	imul   eax,esi,0xa3478280
  4226cd:	or     bh,ah
  4226cf:	mov    ds:0x3c077785,eax
  4226d4:	xchg   ecx,eax
  4226d5:	stos   BYTE PTR es:[edi],al
  4226d6:	mov    DWORD PTR [eax],esi
  4226d8:	and    eax,0xedf7c13d
  4226dd:	mov    eax,0x1b6f1788
  4226e2:	and    esi,ecx
  4226e4:	in     eax,dx
  4226e5:	call   DWORD PTR [ebp-0x44]
  4226e8:	push   ebp
  4226e9:	test   BYTE PTR [edx-0xd],0xed
  4226ed:	cdq    
  4226ee:	add    al,al
  4226f0:	cmp    ebp,DWORD PTR [esp+esi*8-0xe692fe]
  4226f7:	and    dl,0xb9
  4226fa:	jae    0x4226f6
  4226fc:	sub    al,cl
  4226fe:	imul   ebp
  422700:	in     eax,dx
  422701:	(bad)  
  422702:	inc    DWORD PTR [eax]
  422704:	add    BYTE PTR [eax],al
  422706:	enter  0x42dd,0x42
  42270a:	fild   DWORD PTR [esi]
  42270c:	in     eax,dx
  42270d:	add    esi,ebx
  42270f:	push   es
  422710:	push   cs
  422711:	push   es
  422712:	scas   al,BYTE PTR es:[edi]
  422713:	dec    ecx
  422714:	adc    DWORD PTR [ecx],eax
  422716:	repz push es
  422718:	jmp    0xacd41ab6
  42271d:	and    eax,0x99e96d3c
  422722:	repz pop esi
  422724:	add    DWORD PTR [eax-0x6616f8cf],ecx
  42272a:	(bad)  
  42272b:	pop    esi
  42272c:	dec    ebx
  42272d:	jnp    0x422760
  42272f:	jmp    0x42279d
  422731:	xchg   DWORD PTR [eax+0x2c0dd301],ebp
  422737:	mov    WORD PTR [esp+ecx*1],fs
  42273a:	jmp    0xf7461045
  42273f:	push   esi
  422740:	ins    BYTE PTR es:[edi],dx
  422741:	(bad)  
  422742:	push   eax
  422743:	push   esi
  422744:	jae    0x4227c2
  422746:	mov    es,WORD PTR [ebx-0x17]
  422749:	mov    ch,0xca
  42274b:	push   es
  42274c:	xchg   ecx,eax
  42274d:	dec    DWORD PTR [edi]
  42274f:	pop    es
  422750:	jmp    0x92cb63cd
  422755:	xchg   edi,eax
  422756:	lock xor al,0xa9
  422759:	sbb    DWORD PTR [edi],eax
  42275b:	xchg   edx,eax
  42275c:	sub    al,0x14
  42275e:	mov    esp,0xee0a9158
  422763:	push   DWORD PTR [edx-0x78]
  422766:	pop    esp
  422767:	jns    0x422741
  422769:	cdq    
  42276a:	add    BYTE PTR [eax],al
  42276c:	add    ah,ch
  42276e:	xchg   ecx,eax
  42276f:	lods   al,BYTE PTR ds:[esi]
  422770:	adc    ebx,DWORD PTR [edx-0x1ef346fa]
  422776:	cmp    bh,bl
  422778:	ret    
  422779:	cld    
  42277a:	and    DWORD PTR ds:0x4178f600,0x7f
  422781:	xor    edi,esi
  422783:	cdq    
  422784:	mov    ah,0x7b
  422786:	jl     0x422788
  422788:	loope  0x422782
  42278a:	inc    esp
  42278b:	in     eax,0x2e
  42278d:	out    0x5a,al
  42278f:	pop    edx
  422790:	xor    BYTE PTR [ecx],dh
  422792:	or     al,BYTE PTR [eax]
  422794:	mov    ah,0x4b
  422796:	repnz push ecx
  422798:	mov    eax,0x63f98f87
  42279d:	aaa    
  42279e:	inc    BYTE PTR [eax]
  4227a0:	jmp    0xfe8fb695
  4227a5:	sub    al,BYTE PTR [esi+0x6f0e801]
  4227ab:	mov    BYTE PTR [esi+eiz*8+0x485dce88],bl
  4227b2:	(bad)  
  4227b3:	dec    ebp
  4227b4:	icebp  
  4227b5:	stos   DWORD PTR es:[edi],eax
  4227b6:	retf   
  4227b7:	dec    edi
  4227b8:	pusha  
  4227b9:	cmp    eax,0x773489f6
  4227be:	push   esp
  4227bf:	cli    
  4227c0:	sub    al,0xfe
  4227c2:	or     dh,BYTE PTR [edx+0x148ff634]
  4227c8:	out    dx,eax
  4227c9:	lock pop ecx
  4227cb:	cli    
  4227cc:	fidivr WORD PTR [esi+0x73fa50]
  4227d2:	add    BYTE PTR [eax],al
  4227d4:	pop    esp
  4227d5:	std    
  4227d6:	cmp    ebp,0xffffffee
  4227d9:	mov    ss,WORD PTR [eax+ebp*8]
  4227dc:	aas    
  4227dd:	mov    ah,0xc
  4227df:	out    0x37,eax
  4227e1:	mov    ah,0xce
  4227e3:	jmp    0xdd71:0x81558eea
  4227ea:	sti    
  4227eb:	jmp    0xddc82ee0
  4227f0:	icebp  
  4227f1:	cmp    BYTE PTR [ebx+eiz*1],cl
  4227f4:	(bad)
  4227f8:	inc    ebp
  4227f9:	push   es
  4227fa:	jne    0x42282b
  4227fc:	dec    esi
  4227fd:	pop    edi
  4227fe:	xchg   BYTE PTR [edi+eiz*8-0x25ff777b],bl
  422805:	or     BYTE PTR [eax],al
  422807:	add    BYTE PTR [eax-0x43],ah
  42280a:	std    
  42280b:	mov    BYTE PTR [edx+0x9],dl
  42280e:	sti    
  42280f:	dec    edx
  422811:	stos   BYTE PTR es:[edi],al
  422812:	ret    0xdec2
  422815:	or     DWORD PTR [ebp-0x75],edx
  422818:	adc    edx,edi
  42281a:	ret    0xe585
  42281d:	xchg   ebp,eax
  42281e:	sbb    dl,BYTE PTR [ebx+0x7c]
  422821:	jle    0x422814
  422823:	sub    ebp,DWORD PTR [edx+0x21060f7e]
  422829:	scas   al,BYTE PTR es:[edi]
  42282a:	pop    ds
  42282b:	adc    BYTE PTR [eax-0xb],bl
  42282e:	adc    al,BYTE PTR [ecx+0x12]
  422831:	cli    
  422832:	cmp    BYTE PTR [esi+edi*8-0xa],cl
  422836:	outs   dx,BYTE PTR ds:[esi]
  422837:	add    al,BYTE PTR [eax]
  422839:	add    BYTE PTR [eax],al
  42283b:	jmp    0x1f91637b
  422840:	sub    bl,BYTE PTR [ebp+0x5b]
  422843:	lds    eax,FWORD PTR [ebx+eax*1+0x0]
  422847:	movd   edi,mm4
  42284a:	mov    ecx,DWORD PTR [edi]
  42284c:	sti    
  42284d:	sub    ah,0x56
  422850:	test   BYTE PTR [esi+0xc],dh
  422853:	dec    edx
  422854:	add    BYTE PTR [esi+0x95ad5],al
  42285a:	push   ebx
  42285b:	xlat   BYTE PTR ds:[ebx]
  42285c:	mov    bh,0xf3
  42285e:	push   esi
  42285f:	xor    DWORD PTR [ebx],edi
  422861:	push   esp
  422862:	mov    esp,DWORD PTR [ebx-0x64]
  422865:	add    dh,al
  422867:	fist   WORD PTR [ecx]
  422869:	sti    
  42286a:	mov    edi,ss
  42286c:	or     bl,BYTE PTR [ebp-0x7d]
  42286f:	daa    
  422870:	cmc    
  422871:	sti    
  422872:	jne    0x4228ab
  422874:	jnp    0x422885
  422876:	setne  BYTE PTR [edi+0x104ffe07]
  42287d:	adc    DWORD PTR [ecx],0xfffffff3
  422880:	dec    eax
  422881:	add    eax,esi
  422883:	repnz out dx,eax
  422885:	les    ecx,FWORD PTR [ebp+0x66]
  422888:	dec    esp
  422889:	div    DWORD PTR [ebp-0x3184b9ca]
  42288f:	mov    dl,0x48
  422891:	add    cl,BYTE PTR [edx+0x3f7dd679]
  422897:	repz hlt 
  422899:	push   ecx
  42289a:	push   edx
  42289b:	retf   0x2571
  42289e:	add    BYTE PTR [eax],al
  4228a0:	add    BYTE PTR [eax],al
  4228a2:	push   0xefde4520
  4228a7:	cs push ss
  4228a9:	add    edi,eax
  4228ab:	(bad)  
  4228ac:	jge    0x42283b
  4228ae:	or     edi,DWORD PTR [eax-0x3c]
  4228b1:	push   DWORD PTR [ecx+0x2d]
  4228b4:	add    eax,DWORD PTR [eax-0x77fb12ea]
  4228ba:	fist   DWORD PTR ds:[ecx-0x476c0bec]
  4228c1:	stc    
  4228c2:	jo     0x422894
  4228c4:	idiv   BYTE PTR [esi-0x19bb0f6f]
  4228ca:	cmc    
  4228cb:	clc    
  4228cc:	cmp    eax,0x7de68289
  4228d1:	aas    
  4228d2:	repz enter 0xb205,0x16
  4228d7:	outs   dx,BYTE PTR ds:[esi]
  4228d8:	mov    ah,bh
  4228da:	icebp  
  4228db:	sbb    esi,edi
  4228dd:	or     al,0x7d
  4228df:	sub    ecx,DWORD PTR [edx]
  4228e1:	adc    BYTE PTR [edx-0x2b],0x7d
  4228e5:	xchg   bl,bl
  4228e7:	addr16 mov edi,0x54f019ff
  4228ed:	cmp    dh,BYTE PTR [ebx-0x5]
  4228f0:	out    dx,eax
  4228f1:	jmp    DWORD PTR [eax+0x20b5f6ce]
  4228f7:	add    al,0x7d
  4228f9:	das    
  4228fa:	cld    
  4228fb:	push   es
  4228fc:	fwait
  4228fd:	nop
  4228fe:	add    DWORD PTR [ebx+edx*4],ecx
  422901:	xor    eax,0xa120b4ef
  422906:	add    BYTE PTR [eax],al
  422908:	add    BYTE PTR [ebp+0x77],ch
  42290b:	out    0xa1,eax
  42290d:	jne    0x422965
  42290f:	in     eax,dx
  422910:	mov    eax,ds:0x86e34e6d
  422915:	pushf  
  422916:	push   cs
  422917:	ds hlt 
  422919:	ins    BYTE PTR es:[edi],dx
  42291a:	push   ds
  42291b:	pop    edi
  42291c:	test   al,0xc1
  42291e:	mov    es,ecx
  422920:	add    al,0x7b
  422922:	push   esi
  422923:	out    0x7b,eax
  422925:	xor    al,0x8
  422927:	inc    bx
  422929:	lock xchg DWORD PTR [edi+esi*8-0x3495f354],ecx
  422931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422932:	sti    
  422933:	cli    
  422934:	test   eax,0xc0be603e
  422939:	in     al,dx
  42293a:	int    0x27
  42293c:	test   DWORD PTR [edx+edx*2-0x158ce792],0x8a27b4ed
  422947:	adc    eax,0xe1416a03
  42294c:	jl     0x422993
  42294e:	lea    ebp,[eax+edx*1]
  422951:	sub    ecx,esp
  422953:	jmp    0xbd03:0xe9068f84
  42295a:	aaa    
  42295b:	mov    bl,0xd5
  42295d:	and    bh,BYTE PTR [edi]
  42295f:	ret    0xb695
  422962:	cmp    BYTE PTR [eax-0x318eca80],dh
  422968:	cmp    DWORD PTR [ecx+0x7de90a],0x0
  42296f:	add    bl,bh
  422971:	jb     0x42295f
  422973:	test   BYTE PTR [ebx],dh
  422975:	or     BYTE PTR [esi+0x89b203],cl
  42297b:	sub    ah,al
  42297d:	aas    
  42297e:	dec    ebx
  42297f:	test   BYTE PTR [edi],0xa
  422982:	mov    dl,0x28
  422984:	test   DWORD PTR [ebx-0x4c88ccb],eax
  42298a:	out    0xeb,al
  42298c:	push   ds
  42298d:	les    eax,FWORD PTR [eax+eiz*1+0x40800d83]
  422994:	ror    DWORD PTR [ebp-0x6925d5bf],cl
  42299a:	shl    DWORD PTR [edi],0x18
  42299d:	sub    al,cl
  42299f:	repnz sbb edi,DWORD PTR [eax-0x3b]
  4229a3:	ins    DWORD PTR es:[edi],dx
  4229a4:	or     BYTE PTR [esi+0x3],dh
  4229a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a8:	jmp    0x3ef2:0xc5a588c0
  4229af:	push   0xfffffffd
  4229b1:	add    eax,0xf424577c
  4229b6:	je     0x42296a
  4229b8:	push   ds
  4229b9:	dec    ebp
  4229ba:	clc    
  4229bb:	arpl   WORD PTR [ecx+esi*8-0x7a],dx
  4229bf:	xchg   esp,eax
  4229c0:	stc    
  4229c1:	mov    ecx,0xe230ebe1
  4229c6:	add    al,0xf3
  4229c8:	xor    DWORD PTR [eax+0x44f8d34d],edx
  4229ce:	cld    
  4229cf:	arpl   WORD PTR [ecx+0xefe1b9],si
  4229d5:	add    BYTE PTR [eax],al
  4229d7:	dec    bp
  4229d9:	imul   DWORD PTR [ecx-0x3e3ff9ea]
  4229df:	out    dx,al
  4229e0:	or     al,0xbe
  4229e2:	popa   
  4229e3:	test   esp,edi
  4229e5:	lea    edi,[edi]
  4229e7:	cli    
  4229e8:	ss leave 
  4229ea:	jno    0x422a69
  4229ec:	std    
  4229ed:	test   DWORD PTR [ebx+0x1487156a],edi
  4229f3:	add    edx,DWORD PTR [eax+0x21f0044]
  4229f9:	cld    
  4229fa:	inc    ebp
  4229fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229fc:	jge    0x422a03
  4229fe:	test   DWORD PTR [ebx-0x77],edx
  422a01:	sti    
  422a02:	inc    eax
  422a03:	inc    ecx
  422a04:	cmp    al,0x77
  422a06:	jmp    0x4229d9
  422a08:	das    
  422a09:	or     al,0x82
  422a0b:	cmp    DWORD PTR [edi],ecx
  422a0d:	cld    
  422a0e:	(bad)  
  422a0f:	cmp    al,0x7b
  422a11:	ds hlt 
  422a13:	icebp  
  422a14:	mov    ecx,0x3c915f03
  422a19:	ror    DWORD PTR [eax],0xca
  422a1c:	mov    bh,0x88
  422a1e:	lock push eax
  422a20:	or     BYTE PTR [eax-0x5f3a6ff],cl
  422a26:	jne    0x4229ee
  422a28:	jo     0x422a64
  422a2a:	add    DWORD PTR [ecx-0x22b579ec],esp
  422a30:	jnp    0x422a41
  422a32:	push   es
  422a33:	enter  0xfcb5,0x88
  422a37:	retf   0x42c5
  422a3a:	jne    0x422a3c
  422a3c:	add    BYTE PTR [eax],al
  422a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a3f:	scas   al,BYTE PTR es:[edi]
  422a40:	sar    BYTE PTR [ecx],0x16
  422a43:	(bad)  
  422a45:	jae    0x4229f4
  422a47:	mov    dh,0xfc
  422a49:	je     0x422a41
  422a4b:	cli    
  422a4c:	push   ebp
  422a4d:	inc    DWORD PTR [edi-0x75bfea2b]
  422a53:	test   BYTE PTR [edi-0x34630f4],bh
  422a59:	test   DWORD PTR [edx+0xe8a0996],ebx
  422a5f:	sar    esp,cl
  422a61:	xor    BYTE PTR [esi-0x2b],cl
  422a64:	inc    ebx
  422a65:	jne    0x4229eb
  422a67:	inc    esp
  422a68:	(bad)  
  422a69:	inc    DWORD PTR [edi]
  422a6b:	jle    0x422a54
  422a6d:	push   ecx
  422a6e:	stc    
  422a6f:	aad    0xc2
  422a71:	push   esi
  422a72:	repz cmp BYTE PTR [edx+ecx*2+0x2c],bh
  422a77:	addr16 mov ecx,0x7c768dfd
  422a7d:	push   ebx
  422a7f:	out    dx,eax
  422a80:	dec    DWORD PTR [eax-0xfbcadd]
  422a86:	or     al,0xef
  422a88:	ja     0x422a97
  422a8a:	mov    dl,0xa9
  422a8c:	popf   
  422a8d:	cmp    BYTE PTR [ecx],ch
  422a8f:	fisttp QWORD PTR [edx]
  422a91:	mov    BYTE PTR [ebx],al
  422a93:	fs push es
  422a95:	or     al,0xa5
  422a97:	fwait
  422a98:	add    cl,BYTE PTR [eax+0xb79f646]
  422a9e:	cli    
  422a9f:	jae    0x422a8b
  422aa1:	add    DWORD PTR [eax],eax
  422aa3:	add    BYTE PTR [eax],al
  422aa5:	test   eax,0xfcfdb8ee
  422aaa:	outs   dx,DWORD PTR ds:[esi]
  422aab:	mov    ecx,0x50279fd
  422ab0:	(bad)  
  422ab1:	sbb    DWORD PTR ss:[ebp+ebx*1+0x6b],edi
  422ab6:	cli    
  422ab7:	add    al,0xd
  422ab9:	gs fwait
  422abb:	add    bh,BYTE PTR [eax]
  422abd:	ss repnz nop
  422ac0:	add    esi,DWORD PTR [ebp+0x2eff02a3]
  422ac6:	mov    eax,ds:0x882ccc90
  422acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422acc:	(bad)  
  422acd:	mov    cl,0xf6
  422acf:	jmp    DWORD PTR [edi-0xf]
  422ad2:	out    dx,al
  422ad3:	(bad)  
  422ad4:	push   DWORD PTR [edx+ebx*2-0x20]
  422ad8:	pop    es
  422ad9:	jo     0x422a89
  422adb:	sti    
  422adc:	dec    edi
  422add:	fs fcmovne st,st(7)
  422ae0:	adc    eax,0xc37eedb3
  422ae5:	out    0xab,eax
  422ae7:	sti    
  422ae8:	call   esp
  422aea:	jmp    0x422af0
  422aec:	add    bl,dh
  422aee:	push   es
  422aef:	inc    bx
  422af1:	lock push esi
  422af3:	call   0xdcf0:0x920b108f
  422afa:	adc    BYTE PTR [ecx],ch
  422afc:	add    al,0x72
  422afe:	ret    
  422aff:	cmc    
  422b00:	inc    ecx
  422b01:	lock push es
  422b03:	outs   dx,BYTE PTR ds:[esi]
  422b04:	sti    
  422b05:	jae    0x422af5
  422b07:	jmp    0x422b9b
  422b0c:	cli    
  422b0d:	dec    ebp
  422b0e:	hlt    
  422b0f:	hlt    
  422b10:	ins    DWORD PTR es:[edi],dx
  422b11:	ja     0x422b00
  422b13:	jl     0x422ac1
  422b15:	push   cs
  422b16:	es mov cl,0x73
  422b19:	(bad)  
  422b1a:	in     eax,dx
  422b1b:	lods   eax,DWORD PTR ds:[esi]
  422b1c:	aam    0x55
  422b1e:	dec    edx
  422b1f:	push   es
  422b20:	out    0xc3,eax
  422b22:	outs   dx,BYTE PTR ds:[esi]
  422b23:	sti    
  422b24:	jae    0x422b13
  422b26:	jmp    0xbd9038ba
  422b2b:	bnd jae 0x422b1b
  422b2e:	out    0x8f,al
  422b30:	repz xor al,0x29
  422b33:	inc    edx
  422b34:	imul   ecx,eax,0x6e
  422b37:	cmp    eax,0x613eccc
  422b3c:	scas   eax,DWORD PTR es:[edi]
  422b3d:	jmp    0x422b2a
  422b3f:	push   es
  422b40:	adc    al,0xf
  422b42:	outs   dx,BYTE PTR ds:[esi]
  422b43:	cmp    DWORD PTR [edi-0x51851a8a],ebx
  422b49:	mov    ebx,DWORD PTR [ebx]
  422b4b:	sbb    edx,DWORD PTR [eax-0x64fa1506]
  422b51:	or     esp,DWORD PTR [esi+0x44]
  422b54:	lock push eax
  422b56:	outs   dx,BYTE PTR ds:[esi]
  422b57:	mov    WORD PTR ss:[ebp-0x2b],ds
  422b5b:	add    eax,0x40e8b66f
  422b60:	jno    0x422b52
  422b62:	cmp    al,0x1
  422b64:	and    al,bh
  422b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b67:	jns    0x422b55
  422b69:	add    DWORD PTR [eax],0xffffffc0
  422b6c:	div    DWORD PTR [edx+0x3c]
  422b6f:	and    BYTE PTR [eax],al
  422b71:	add    BYTE PTR [eax],al
  422b73:	arpl   WORD PTR [ecx],sp
  422b75:	dec    ecx
  422b76:	sbb    eax,0xf974404e
  422b7b:	jns    0x422bf1
  422b7d:	out    0x62,al
  422b7f:	fisttp QWORD PTR [esi-0x204d9d35]
  422b85:	sahf   
  422b86:	xchg   esi,esi
  422b88:	cli    
  422b89:	out    0xb9,eax
  422b8b:	jp     0x422b84
  422b8d:	out    0xeb,al
  422b8f:	push   0xfffffff8
  422b91:	push   ebp
  422b92:	push   ss
  422b93:	mov    cl,dh
  422b95:	call   0xfc3d16cf
  422b9a:	sub    ch,dh
  422b9c:	or     BYTE PTR [bp+si+0x25],ah
  422ba0:	repz jo 0x422b88
  422ba3:	imul   ecx,ebx,0xffffff87
  422ba6:	sbb    bh,bh
  422ba8:	cmp    esp,0xddeee3e
  422bae:	push   0x37
  422bb0:	or     cl,BYTE PTR [edi+0x62]
  422bb3:	adc    eax,0xf611cb7f
  422bb8:	out    dx,al
  422bb9:	sti    
  422bba:	push   ds
  422bbb:	cmp    cl,ah
  422bbd:	mov    edi,0x42a6b62
  422bc2:	bound  ebp,QWORD PTR [eax+0x4fb0495c]
  422bc8:	jg     0x422bba
  422bca:	jne    0x422b6e
  422bcc:	dec    ebp
  422bcd:	jne    0x422ba4
  422bcf:	push   0x7
  422bd1:	das    
  422bd2:	sbb    edi,esp
  422bd4:	dec    ebx
  422bd5:	(bad)  
  422bd6:	aas    
  422bd7:	add    BYTE PTR [eax],al
  422bd9:	add    dh,ch
  422bdb:	in     al,0xc1
  422bdd:	leave  
  422bde:	repnz fisttp WORD PTR ds:0xce37f243
  422be5:	pop    esp
  422be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422be7:	or     BYTE PTR [ecx+0x0],bl
  422bea:	popf   
  422beb:	sbb    DWORD PTR [edx-0x1c45b620],edi
  422bf1:	xchg   edi,eax
  422bf2:	lods   eax,DWORD PTR ds:[esi]
  422bf3:	or     edi,esp
  422bf5:	mov    eax,DWORD PTR [edx-0xe8b038b]
  422bfb:	outs   dx,DWORD PTR ds:[esi]
  422bfc:	aas    
  422bfd:	and    al,0x46
  422bff:	adc    bl,BYTE PTR [edi-0x1]
  422c02:	test   DWORD PTR [ebx],ecx
  422c04:	jle    0x422bc6
  422c06:	(bad)  
  422c07:	cld    
  422c08:	mov    BYTE PTR [esi+ebp*1-0x6],cl
  422c0c:	jle    0x422bd7
  422c0e:	push   ds
  422c0f:	or     BYTE PTR [ebx-0x17cd6eff],al
  422c15:	or     ch,bl
  422c17:	adc    cl,BYTE PTR [ebx+0x300a9497]
  422c1d:	shl    BYTE PTR ds:0xda08c1ac,0xa3
  422c24:	mov    cl,dh
  422c26:	push   ecx
  422c27:	repnz sub cl,0xca
  422c2b:	test   DWORD PTR [eax],ebp
  422c2d:	dec    ecx
  422c2e:	sahf   
  422c2f:	in     al,0x80
  422c31:	jmp    0x3241b20f
  422c36:	sbb    ch,BYTE PTR [eax+eax*8-0x69183a9]
  422c3d:	call   0xc5422c42
  422c42:	or     edi,esp
  422c44:	jmp    DWORD PTR [ebp+0xe]
  422c47:	sbb    eax,0x88f18aff
  422c4c:	retf   0x99f5
  422c4f:	dec    DWORD PTR [edx-0x172a9134]
  422c55:	cld    
  422c56:	(bad)  
  422c57:	sti    
  422c58:	push   ecx
  422c5a:	out    dx,al
  422c5b:	add    al,0x8e
  422c5e:	dec    edi
  422c5f:	or     esi,0xffffffa2
  422c62:	push   ebp
  422c63:	repz push ebx
  422c66:	fdiv   QWORD PTR [ecx+eax*1+0x5356a0c5]
  422c6d:	push   0x680c284b
  422c72:	scas   al,BYTE PTR es:[edi]
  422c73:	mov    ebx,edi
  422c75:	(bad)  
  422c76:	jecxz  0x422caa
  422c78:	rcr    BYTE PTR [eax+0x12],0x8b
  422c7c:	or     BYTE PTR [eax-0x6a],dh
  422c7f:	add    al,0x74
  422c81:	cld    
  422c82:	ss js  0x422ca4
  422c85:	mov    edx,0x9f491213
  422c8a:	call   0x114ca1db
  422c8f:	in     al,dx
  422c90:	rcl    DWORD PTR [esi],0x74
  422c93:	jmp    edi
  422c95:	ret    
  422c96:	or     DWORD PTR [edi+eiz*8],eax
  422c99:	icebp  
  422c9a:	or     DWORD PTR ds:0x8b246852,eax
  422ca0:	(bad)  
  422ca1:	or     ebx,DWORD PTR [eax+eax*1+0xfc]
  422ca8:	in     al,dx
  422ca9:	dec    ecx
  422caa:	and    al,0xfb
  422cac:	arpl   si,sp
  422cae:	mov    cl,bl
  422cb0:	fsubr  QWORD PTR [esi+0x56ad8703]
  422cb6:	(bad)  
  422cb7:	test   esp,0x210deb3d
  422cbd:	popa   
  422cbe:	les    eax,FWORD PTR [eax+ebp*2]
  422cc1:	xor    eax,0x12cbca8b
  422cc6:	cli    
  422cc7:	sti    
  422cc8:	lods   al,BYTE PTR ds:[esi]
  422cc9:	imul   eax,edi,0x820455b
  422ccf:	add    BYTE PTR [eax-0x1c],ch
  422cd2:	mov    cl,BYTE PTR [edi+ecx*8-0xb]
  422cd6:	inc    edi
  422cd7:	dec    eax
  422cd8:	push   es
  422cd9:	loopne 0x422caf
  422cdb:	jmp    0xb129bbfc
  422ce0:	gs pop es
  422ce2:	jecxz  0x422ce6
  422ce4:	imul   ebp,edi,0x64
  422ce7:	add    ah,dh
  422ce9:	adc    edx,edx
  422ceb:	ja     0x422cfc
  422ced:	add    ebx,DWORD PTR [esi+0x57]
  422cf0:	pop    ss
  422cf1:	add    ebp,DWORD PTR [esi-0x2e]
  422cf4:	ins    BYTE PTR es:[edi],dx
  422cf5:	int    0xd1
  422cf7:	ja     0x422d41
  422cf9:	hlt    
  422cfa:	mov    dl,0x88
  422cfc:	xor    edi,DWORD PTR [ebx-0x21]
  422cff:	mov    BYTE PTR [ebx+edi*2],ah
  422d02:	out    0x8c,eax
  422d04:	xor    al,0x81
  422d06:	mov    ds:0x815bfbee,al
  422d0b:	test   al,0x0
  422d0d:	add    BYTE PTR [eax],al
  422d0f:	xor    ebp,0x5433368a
  422d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d16:	or     esi,ebx
  422d18:	repz mov ah,0xff
  422d1b:	dec    edx
  422d1c:	dec    eax
  422d1d:	jmp    0x6bdf8d0d
  422d22:	add    al,bl
  422d24:	mov    BYTE PTR [esi-0x16b7c501],0xa6
  422d2b:	repz mov al,0xa6
  422d2e:	add    eax,DWORD PTR [esi+edi*8-0x380cb972]
  422d35:	pushf  
  422d36:	mov    es,edi
  422d38:	xchg   DWORD PTR [ebp+0x27],ecx
  422d3b:	jp     0x422d7e
  422d3d:	dec    ecx
  422d3e:	mov    ?,WORD PTR [esi]
  422d40:	call   FWORD PTR [edi+0x50]
  422d43:	xlat   BYTE PTR ds:[ebx]
  422d44:	jg     0x422cfa
  422d46:	punpckhdq mm0,QWORD PTR [ecx+0x11]
  422d4a:	mov    ?,WORD PTR [esi]
  422d4c:	pop    ss
  422d4d:	pusha  
  422d4e:	push   eax
  422d4f:	xchg   edi,eax
  422d50:	xchg   DWORD PTR [ecx],esp
  422d52:	add    al,0x6e
  422d54:	inc    ecx
  422d55:	and    eax,0x1d49b069
  422d5a:	es aad 0x7d
  422d5d:	add    BYTE PTR [eax+ecx*4-0xdf2cf22],ch
  422d64:	repnz leave 
  422d66:	stos   DWORD PTR es:[edi],eax
  422d67:	jecxz  0x422d6f
  422d69:	push   ebp
  422d6a:	jb     0x422dcf
  422d6c:	jae    0x422d5a
  422d6e:	std    
  422d6f:	outs   dx,DWORD PTR ds:[esi]
  422d70:	imul   esi,eax,0xe9
  422d76:	ja     0x422de9
  422d78:	or     al,0xf1
  422d7a:	mov    edx,0xff3c8757
  422d7f:	enter  0xb645,0xef
  422d83:	jns    0x422da0
  422d85:	bound  ebp,QWORD PTR [edx+0x370c7f02]
  422d8b:	push   es
  422d8c:	test   DWORD PTR [ecx+0x26871aab],ebp
  422d92:	test   DWORD PTR [ebx+0x32779175],0xfe9cc231
  422d9c:	cli    
  422d9d:	and    al,0xf
  422d9f:	sub    eax,0xdf7d7145
  422da4:	xchg   esp,esi
  422da6:	loopne 0x422e25
  422da8:	push   ebp
  422da9:	pop    ebp
  422daa:	outs   dx,BYTE PTR ds:[esi]
  422dab:	cld    
  422dac:	or     al,0xee
  422dae:	jbe    0x422db4
  422db0:	add    ecx,ebp
  422db2:	lock mov DWORD PTR [edx],eax
  422db5:	push   0xffffffdf
  422db7:	add    ecx,DWORD PTR [ebx]
  422db9:	imul   ebx,esp,0x7
  422dbc:	add    cl,ch
  422dbe:	cmovl  esi,esp
  422dc1:	out    0x7b,al
  422dc3:	jecxz  0x422dc5
  422dc5:	jmp    0xed8cb7ba
  422dca:	ins    DWORD PTR es:[edi],dx
  422dcb:	inc    esp
  422dcc:	or     al,0xee
  422dce:	je     0x422d8e
  422dd0:	add    cl,ch
  422dd2:	lock cmc 
  422dd4:	shr    ecx,0xf0
  422dd7:	push   es
  422dd8:	rol    BYTE PTR [eax],0x0
  422ddb:	add    BYTE PTR [eax],al
  422ddd:	popf   
  422dde:	mov    bh,BYTE PTR [ebx-0x7ff96600]
  422de4:	jge    0x422e63
  422de6:	push   es
  422de7:	je     0x422df5
  422de9:	test   ebp,eax
  422deb:	add    BYTE PTR [eax],al
  422ded:	mov    al,BYTE PTR [esi+0x7]
  422df0:	test   BYTE PTR [ebx-0x2efffffa],cl
  422df6:	aam    0x81
  422df8:	loop   0x422e44
  422dfa:	push   es
  422dfb:	add    BYTE PTR [eax+0x45f70c16],al
  422e01:	mov    al,BYTE PTR [ebx+0x6f120c45]
  422e07:	dec    eax
  422e08:	dec    eax
  422e09:	push   es
  422e0a:	xor    cl,BYTE PTR [eax+0x48]
  422e0d:	(bad)  
  422e0e:	xor    eax,0x7a16e87b
  422e13:	and    al,0x83
  422e15:	jb     0x422e15
  422e17:	jae    0x422e30
  422e19:	mov    ebp,ebx
  422e1b:	adc    BYTE PTR [edi],cl
  422e1d:	xchg   DWORD PTR [ecx-0x5ae60000],ecx
  422e23:	add    al,0xba
  422e25:	(bad)  [edx]
  422e27:	xor    eax,DWORD PTR [esi+0x12]
  422e2a:	jns    0x422e9e
  422e2c:	test   DWORD PTR [eax-0x6a748f1e],edi
  422e32:	adc    eax,0xe2e64f83
  422e37:	cmp    DWORD PTR [ebx+0x4d82fd95],ecx
  422e3d:	xor    ah,bl
  422e3f:	xor    DWORD PTR [ebx-0x67000000],ecx
  422e45:	sub    DWORD PTR [ebx+0x29e3f24b],eax
  422e4b:	mov    ecx,DWORD PTR [ecx-0x49b47ceb]
  422e51:	loop   0x422e74
  422e53:	mov    bl,BYTE PTR [ecx+0xd]
  422e56:	test   al,al
  422e58:	repz xchg edx,eax
  422e5a:	pop    es
  422e5b:	repz mov dl,0xdf
  422e5e:	(bad)  
  422e60:	repz jb 0x422e6e
  422e63:	cmp    al,0xf2
  422e65:	jp     0x422eab
  422e67:	repz mov dl,0xdf
  422e6a:	pop    ds
  422e6b:	add    bl,dh
  422e6d:	jnp    0x422eab
  422e6f:	xchg   DWORD PTR [eax],esi
  422e71:	clc    
  422e72:	xchg   BYTE PTR [edi-0x1],al
  422e75:	je     0x422e89
  422e77:	jg     0x422ee2
  422e79:	jmp    0x422eee
  422e7b:	and    DWORD PTR [eax-0x2b],esi
  422e7e:	sbb    BYTE PTR [edx+0xa],dh
  422e81:	pop    ebp
  422e82:	mov    esi,0x141a0af4
  422e87:	jne    0x422e9b
  422e89:	andps  xmm1,XMMWORD PTR [ebp+0x2f4fd3b5]
  422e90:	xor    al,0x97
  422e92:	lds    ebp,FWORD PTR [edi+0x7d87902d]
  422e98:	sti    
  422e99:	(bad)  
  422e9a:	les    edi,FWORD PTR [eax-0x12]
  422e9d:	cwde   
  422e9e:	inc    edx
  422e9f:	add    al,0xf3
  422ea1:	(bad)  
  422ea3:	jg     0x422e2c
  422ea5:	aam    0xc5
  422ea7:	inc    ebp
  422ea8:	add    BYTE PTR [eax],al
  422eaa:	add    BYTE PTR [esi+ebx*8],al
  422ead:	xchg   BYTE PTR [edx],al
  422eaf:	retf   0xf82a
  422eb2:	inc    DWORD PTR [esp+ebx*2]
  422eb5:	xor    esp,0x7ee0ff
  422ebb:	in     al,0x59
  422ebd:	sti    
  422ebe:	sbb    BYTE PTR [esi+0x41],0x4
  422ec2:	jne    0x422eb0
  422ec4:	in     al,dx
  422ec5:	mov    edi,0x792e3639
  422eca:	inc    DWORD PTR [ecx]
  422ecc:	push   ds
  422ecd:	inc    esp
  422ece:	pop    ebx
  422ecf:	sbb    eax,0xf30cbe27
  422ed4:	push   es
  422ed5:	xlat   BYTE PTR ds:[ebx]
  422ed6:	ret    
  422ed7:	xchg   esp,eax
  422ed8:	stc    
  422ed9:	mov    ah,0x8a
  422edb:	xchg   edi,eax
  422edc:	xchg   BYTE PTR ds:0xe906f65c,al
  422ee2:	push   edx
  422ee3:	inc    ecx
  422ee4:	pop    eax
  422ee5:	outs   dx,BYTE PTR ds:[esi]
  422ee6:	cmp    ebx,0x6e43a27b
  422eec:	(bad)  
  422eed:	jl     0x422ef5
  422eef:	int    0xc6
  422ef1:	add    BYTE PTR [ebp-0x11],bh
  422ef4:	push   es
  422ef5:	jmp    0xe9492265
  422efa:	adc    ebx,ebx
  422efc:	hlt    
  422efd:	cmp    al,0x4
  422eff:	repz push esi
  422f01:	pop    esp
  422f02:	pusha  
  422f03:	inc    edi
  422f04:	fcomip st,st(4)
  422f06:	shl    ebx,cl
  422f08:	push   es
  422f09:	jo     0x422f53
  422f0b:	xchg   DWORD PTR [edx+0x77a9],ecx
  422f11:	add    BYTE PTR [eax],bl
  422f13:	test   BYTE PTR [eax+esi*8],ch
  422f16:	jmp    0x422f95
  422f18:	sub    al,0xec
  422f1a:	clc    
  422f1b:	test   BYTE PTR [eax],ch
  422f1d:	or     bl,dh
  422f1f:	push   es
  422f20:	jle    0x422f24
  422f22:	je     0x422f6e
  422f24:	or     DWORD PTR [edx+0xb8083eb],0x7b884f8
  422f2e:	repz push es
  422f30:	scas   al,BYTE PTR es:[edi]
  422f31:	push   eax
  422f32:	verr   WORD PTR [edx+0x2b]
  422f36:	out    dx,eax
  422f37:	push   es
  422f38:	jmp    0xb940e2bf
  422f3d:	mov    ah,dl
  422f3f:	add    DWORD PTR [ebx+0xb],0x55
  422f43:	daa    
  422f44:	mov    edi,0x6ed86c03
  422f49:	fidivr WORD PTR [edx+0x79]
  422f4c:	dec    ecx
  422f4d:	mov    WORD PTR [esi],gs
  422f4f:	jmp    0x422f51
  422f51:	inc    ecx
  422f52:	push   ss
  422f53:	in     eax,dx
  422f54:	sti    
  422f55:	cs ins BYTE PTR es:[edi],dx
  422f57:	(bad)  
  422f58:	or     ebp,DWORD PTR [ebp+0x5b]
  422f5b:	out    dx,eax
  422f5c:	sti    
  422f5d:	jmp    0x6326a907
  422f62:	(bad)  
  422f63:	push   0xdef08301
  422f68:	adc    BYTE PTR [edi],al
  422f6a:	(bad)  
  422f6b:	jmp    0x422ef1
  422f6d:	sub    ebp,esi
  422f6f:	mov    cl,BYTE PTR [ebx-0x4f90f16]
  422f75:	je     0x422f77
  422f77:	add    BYTE PTR [eax],al
  422f79:	mov    WORD PTR [edi+0x68f153d2],es
  422f7f:	add    cl,dl
  422f81:	imul   esi,ecx,0xc66bd6fb
  422f87:	or     esp,DWORD PTR [ebp-0x28]
  422f8a:	out    dx,eax
  422f8b:	sti    
  422f8c:	jmp    0x7326a8e0
  422f91:	sbb    eax,0xf7430468
  422f96:	fsubrp st(4),st
  422f98:	lods   al,BYTE PTR ds:[esi]
  422f99:	ss jmp 0x422f20
  422f9c:	test   eax,0xea5f8afe
  422fa1:	lock push es
  422fa3:	xchg   DWORD PTR [esi],esi
  422fa5:	add    ecx,DWORD PTR [eax+0x4969e143]
  422fab:	hlt    
  422fac:	ins    BYTE PTR es:[edi],dx
  422fad:	sub    ch,BYTE PTR [ebp+0x7]
  422fb0:	sbb    DWORD PTR [esi],eax
  422fb2:	sbb    DWORD PTR [eax-0x25],edi
  422fb5:	mov    al,0x6
  422fb7:	xchg   DWORD PTR [ecx+0x1e7ad76c],edx
  422fbd:	jl     0x423003
  422fbf:	sar    BYTE PTR [ecx-0x4917e1a6],1
  422fc5:	sbb    eax,0x2462fbf2
  422fca:	xlat   BYTE PTR ds:[ebx]
  422fcb:	jg     0x422fcd
  422fcd:	mov    edi,0x978900be
  422fd2:	(bad)  
  422fd3:	push   ecx
  422fd4:	mov    edx,DWORD PTR [edx]
  422fd6:	lds    eax,FWORD PTR [ebp-0x40]
  422fd9:	retf   0x4581
  422fdc:	enter  0x0,0x0
  422fe0:	add    bh,dl
  422fe2:	cmp    edi,edi
  422fe4:	add    eax,0xf0fc07f
  422fe9:	pop    es
  422fea:	add    DWORD PTR [eax],eax
  422fec:	mov    bh,BYTE PTR [ebp+0x75]
  422fef:	shl    dl,0xc5
  422ff2:	cmp    edi,edi
  422ff4:	test   DWORD PTR [edi+0x75],edi
  422ff7:	loopne 0x42300a
  422ff9:	dec    esi
  422ffa:	in     al,0xc6
  422ffc:	dec    edi
  422ffd:	out    dx,eax
  422ffe:	add    dh,al
  423000:	pop    ds
  423001:	clc    
  423002:	add    BYTE PTR [ecx-0x1841141],cl
  423008:	push   esi
  423009:	sti    
  42300a:	jns    0x423031
  42300c:	dec    eax
  42300d:	or     al,BYTE PTR [eax]
  42300f:	mov    ebx,DWORD PTR [ecx-0x79]
  423012:	clc    
  423013:	or     al,0x55
  423015:	mov    BYTE PTR [edx],dl
  423017:	add    cl,BYTE PTR [edx+0xa]
  42301a:	xor    eax,DWORD PTR [ebp+0x7e]
  42301d:	sti    
  42301e:	jle    0x423031
  423020:	sbb    BYTE PTR [edx],cl
  423022:	add    BYTE PTR [ebx-0x3e11011f],cl
  423028:	or     cl,BYTE PTR [edx]
  42302a:	add    BYTE PTR [eax],ah
  42302c:	xor    eax,0x1a01f186
  423031:	or     bh,BYTE PTR [ebx-0x8]
  423034:	push   ss
  423035:	sti    
  423036:	jge    0x423020
  423038:	or     ecx,DWORD PTR [edx]
  42303a:	add    dh,dh
  42303c:	dec    ebx
  42303d:	or     DWORD PTR [edi],eax
  42303f:	test   BYTE PTR ds:0x9,dh
  423045:	add    BYTE PTR [eax],al
  423047:	pusha  
  423048:	inc    ebx
  423049:	sbb    BYTE PTR [ebx+esi*8-0x23f78de1],al
  423050:	push   ds
  423051:	dec    DWORD PTR [edi]
  423053:	repz fbstp TBYTE PTR [edx+0x14]
  423057:	pop    es
  423058:	fisttp WORD PTR [eax*4-0x2155]
  42305f:	mov    esp,0xf31fff1e
  423064:	fisttp WORD PTR [esp+eax*4]
  423067:	addr16 fdivp st(7),st
  42306a:	push   DWORD PTR [ebx-0x6e]
  42306d:	lock add ah,ah
  423070:	(bad)  
  423071:	cmc    
  423072:	add    bl,dh
  423074:	fild   QWORD PTR [ecx-0x1]
  423077:	and    eax,0x79aab25b
  42307c:	hlt    
  42307d:	imul   eax
  42307f:	(bad)  
  423080:	push   ss
  423081:	cld    
  423082:	sti    
  423083:	js     0x423054
  423085:	in     al,dx
  423086:	xchg   ebx,eax
  423087:	xlat   BYTE PTR ds:[ebx]
  423088:	(bad)  
  42308a:	cmp    esi,edi
  42308c:	push   eax
  42308d:	add    esp,DWORD PTR [esi-0xf]
  423090:	sbb    al,0x89
  423092:	and    BYTE PTR [ecx],0xde
  423095:	(bad)  
  423096:	(bad)  
  423097:	(bad)  
  423099:	dec    edi
  42309a:	repz bound si,DWORD PTR [ecx-0x863cb98]
  4230a2:	jg     0x4230df
  4230a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a5:	in     al,dx
  4230a6:	outs   dx,DWORD PTR ds:[esi]
  4230a7:	ss (bad) 
  4230a9:	test   DWORD PTR [ebp+0x33000000],0xf39689e4
  4230b3:	(bad)  
  4230b5:	jle    0x4230c3
  4230b7:	loope  0x423129
  4230b9:	push   edx
  4230ba:	jbe    0x4230ee
  4230bc:	inc    esp
  4230bd:	sti    
  4230be:	cld    
  4230bf:	jae    0x42307d
  4230c1:	mov    bl,0xf3
  4230c3:	(bad)  
  4230c5:	out    0x3a,eax
  4230c7:	pop    es
  4230c8:	dec    edi
  4230c9:	sti    
  4230ca:	call   0xd8ae9549
  4230cf:	in     al,dx
  4230d0:	push   edx
  4230d1:	push   esp
  4230d2:	ins    BYTE PTR es:[edi],dx
  4230d3:	lds    edi,FWORD PTR [ecx+0x425857ee]
  4230d9:	jno    0x42309a
  4230db:	push   ebp
  4230dc:	cmp    dl,BYTE PTR [ecx]
  4230de:	cmp    ebx,DWORD PTR [ecx]
  4230e0:	test   eax,0xe1612303
  4230e5:	pop    ebx
  4230e6:	je     0x4230a5
  4230e8:	adc    DWORD PTR [edi-0x59],ebp
  4230eb:	in     al,dx
  4230ec:	sbb    al,BYTE PTR [eax-0x77098d4d]
  4230f2:	mov    DWORD PTR cs:[ecx],0x2ebcc69
  4230f9:	pop    DWORD PTR [ebx-0x648f0c7e]
  4230ff:	fdivp  st(0),st
  423101:	stc    
  423102:	js     0x4230f0
  423104:	pop    esp
  423105:	jno    0x42313a
  423107:	fistp  WORD PTR [ebx-0x2f1397bb]
  42310d:	add    al,0x5d
  42310f:	in     al,dx
  423110:	jmp    0x42319b
  423115:	pop    eax
  423116:	or     BYTE PTR [edi+ebx*1+0x7e],dl
  42311a:	mov    dl,0x8d
  42311c:	stc    
  42311d:	dec    eax
  42311e:	in     al,dx
  42311f:	cmp    DWORD PTR [ebx-0x1416f90d],0xfaaade49
  423129:	jle    0x4230ad
  42312b:	adc    ebx,edi
  42312d:	sub    ah,ch
  42312f:	cmp    DWORD PTR [edi-0x77b91fcf],ecx
  423135:	outs   dx,BYTE PTR ds:[esi]
  423136:	pop    edi
  423137:	mov    bh,dl
  423139:	or     BYTE PTR [edi-0x7e],dl
  42313c:	jo     0x423139
  42313e:	jns    0x4231a4
  423140:	xchg   edi,eax
  423141:	(bad)  
  423142:	jmp    0x423144
  423144:	jbe    0x4230e6
  423146:	fiadd  WORD PTR ds:0x8506f062
  42314c:	sub    ecx,edi
  42314e:	xchg   ecx,eax
  42314f:	shl    BYTE PTR [ebp-0x50],0x71
  423153:	or     DWORD PTR [edx],ebx
  423155:	scas   eax,DWORD PTR es:[edi]
  423156:	push   0xea646489
  42315b:	sti    
  42315c:	inc    esi
  42315d:	xchg   eax,esp
  42315f:	add    ecx,ebp
  423161:	lock jns 0x4230e9
  423164:	xchg   DWORD PTR [esi-0xfd80411],esi
  42316a:	push   es
  42316b:	inc    eax
  42316c:	mov    al,0x23
  42316e:	out    dx,al
  42316f:	ret    0xa5a4
  423172:	add    eax,0xde6dea87
  423177:	or     al,0xb9
  423179:	add    BYTE PTR [eax],al
  42317b:	add    BYTE PTR [ebx+0x2b],bh
  42317e:	or     al,0x99
  423180:	jnp    0x4231eb
  423182:	nop
  423183:	mov    edx,0x3997deb0
  423188:	jp     0x423179
  42318a:	test   BYTE PTR [ecx],ch
  42318c:	stc    
  42318d:	add    BYTE PTR [eax+ebp*8-0x21d0f910],0x74
  423195:	jns    0x42318b
  423197:	xlat   BYTE PTR ds:[ebx]
  423198:	pop    edx
  423199:	out    dx,eax
  42319a:	das    
  42319b:	xlat   BYTE PTR ds:[ebx]
  42319c:	jge    0x4231e0
  42319e:	xor    eax,0xcdde5759
  4231a3:	mov    edi,0xa87f483a
  4231a8:	repz imul edi,edx,0xffffffd9
  4231ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231ad:	loopne 0x4231de
  4231af:	test   eax,0x6c017d91
  4231b4:	mov    ah,0xca
  4231b6:	push   ecx
  4231b7:	add    esi,eax
  4231b9:	push   edi
  4231ba:	lea    ebx,[ebx+ebp*2-0x16]
  4231be:	sti    
  4231bf:	add    BYTE PTR [ebp-0x56],ch
  4231c2:	add    DWORD PTR [eax],eax
  4231c4:	or     al,BYTE PTR [edi+0x2b455051]
  4231ca:	fadd   DWORD PTR [edx+ebx*8]
  4231cd:	push   es
  4231ce:	add    BYTE PTR [ecx-0x31842d69],cl
  4231d4:	cmp    eax,0xda7015f0
  4231d9:	inc    esi
  4231da:	add    BYTE PTR [ebp-0x72bda5e6],al
  4231e0:	add    BYTE PTR [eax],al
  4231e2:	add    BYTE PTR [edi-0x6872af32],dl
  4231e8:	scas   al,BYTE PTR es:[edi]
  4231e9:	push   eax
  4231ea:	push   edi
  4231eb:	push   ebp
  4231ec:	add    DWORD PTR [ebp-0x810230c],0xdc59cd50
  4231f6:	jmp    DWORD PTR [edi-0x75bfef9e]
  4231fc:	out    dx,eax
  4231fd:	jne    0x4231db
  4231ff:	pop    ss
  423200:	ret    
  423201:	pop    es
  423202:	inc    esp
  423203:	pop    es
  423204:	into   
  423205:	not    DWORD PTR ds:0x401606
  42320b:	or     ebp,ebp
  42320d:	add    al,0x75
  42320f:	ds sub eax,0x6a5d0873
  423215:	add    DWORD PTR [ecx],eax
  423217:	dec    edx
  423218:	push   es
  423219:	call   0xf832a20e
  42321e:	mov    edx,DWORD PTR [ecx]
  423220:	sti    
  423221:	cli    
  423222:	dec    esp
  423223:	jb     0x423250
  423225:	enter  0xd50f,0xdf
  423229:	add    BYTE PTR [eax],al
  42322b:	dec    edx
  42322c:	jnp    0x4232ab
  42322e:	or     BYTE PTR [ecx-0x28391fa8],dl
  423234:	jmp    0x423237
  423236:	mov    ecx,DWORD PTR [ecx]
  423238:	sbb    eax,0xdcf3f445
  42323d:	xlat   BYTE PTR ds:[ebx]
  42323e:	jg     0x4231ce
  423240:	xchg   ebx,eax
  423241:	add    ecx,DWORD PTR [ebx]
  423243:	jo     0x4231ea
  423245:	repnz sti 
  423247:	add    BYTE PTR [eax],al
  423249:	add    ah,bh
  42324b:	je     0x423287
  42324d:	call   0x2815b36
  423252:	pop    ebx
  423253:	loopne 0x423254
  423255:	push   DWORD PTR [ebx]
  423257:	mov    al,0xf8
  423259:	jae    0x42328e
  42325b:	pop    ebx
  42325c:	push   edx
  42325d:	aam    0xcb
  42325f:	sub    al,bl
  423261:	add    bl,dh
  423263:	fs (bad) 
  423265:	mov    DWORD PTR [esi],esi
  423267:	inc    eax
  423268:	jp     0x423233
  42326a:	in     al,dx
  42326b:	arpl   WORD PTR [esi-0x73200d00],bp
  423271:	pop    ebp
  423272:	(bad)  
  423273:	in     al,dx
  423274:	mov    edi,0xec0c2e89
  423279:	adc    eax,0xf684ee68
  42327e:	in     eax,dx
  42327f:	lea    ebx,[ecx]
  423281:	aaa    
  423282:	mov    al,ds:0x32f21d90
  423287:	fdiv   st(6),st
  423289:	je     0x423273
  42328b:	aam    0xdd
  42328d:	jmp    FWORD PTR [edx-0x1ffd03a4]
  423293:	add    esp,ebp
  423295:	or     DWORD PTR [esi+0x1e],esi
  423298:	cli    
  423299:	mov    BYTE PTR [esi+0x593e89d3],dh
  42329f:	shl    BYTE PTR [ecx-0xc],1
  4232a2:	add    BYTE PTR [edi-0xfb7b2c4],ah
  4232a8:	nop
  4232a9:	shr    DWORD PTR [edx+0x1a],0xa4
  4232ad:	call   0x544232b2
  4232b2:	mov    ds:0x98c5fbf2,al
  4232b7:	jno    0x42329d
  4232b9:	jp     0x4232c1
  4232bb:	sub    al,0xa0
  4232bd:	or     ecx,DWORD PTR [edi+0x7d18f678]
  4232c3:	and    al,0xe4
  4232c5:	jp     0x423302
  4232c7:	pop    ecx
  4232c8:	mov    esi,DWORD PTR [esi+0x6adab6d2]
  4232ce:	inc    ebx
  4232cf:	push   ecx
  4232d0:	lea    edi,[esi-0x66]
  4232d3:	pusha  
  4232d4:	dec    ecx
  4232d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232d6:	cs or  al,0xa0
  4232d9:	pop    esi
  4232da:	add    ah,BYTE PTR [eax]
  4232dc:	pop    ecx
  4232dd:	out    0x72,eax
  4232df:	in     eax,0x3a
  4232e1:	xchg   esp,eax
  4232e2:	jb     0x4232c3
  4232e4:	mov    BYTE PTR [esi-0x59],al
  4232e7:	inc    ecx
  4232e8:	push   es
  4232e9:	jecxz  0x4232f1
  4232eb:	jmp    0x9c7033da
  4232f0:	out    dx,eax
  4232f1:	ds ds pop esi
  4232f4:	inc    edi
  4232f5:	out    dx,eax
  4232f6:	inc    ebp
  4232f7:	mov    esi,0x9a7a0bcc
  4232fc:	cmp    ecx,DWORD PTR [ebx-0x670986e2]
  423302:	sub    DWORD PTR [ecx],0x70
  423305:	push   ss
  423306:	jl     0x4232a2
  423308:	aaa    
  423309:	ins    BYTE PTR es:[edi],dx
  42330a:	(bad)  
  42330b:	mov    es,ebx
  42330d:	fild   DWORD PTR [ebx]
  42330f:	jecxz  0x423355
  423311:	push   0x38
  423313:	mov    ch,0x69
  423315:	add    BYTE PTR [eax],al
  423317:	add    BYTE PTR [ebx],cl
  423319:	jp     0x4232b7
  42331b:	mov    ds:0xcd156c2,eax
  423320:	sub    cl,0xda
  423323:	jmp    0x4274:0xc547d54
  42332a:	ror    DWORD PTR [edx-0x17d3e20d],0xf2
  423331:	inc    ecx
  423332:	rol    DWORD PTR [edx-0x1eff254a],1
  423338:	cmc    
  423339:	addr16 pop es
  42333b:	lods   eax,DWORD PTR ds:[esi]
  42333c:	sbb    eax,0x2431e7ec
  423341:	je     0x42337b
  423343:	jb     0x42331a
  423345:	sub    ch,al
  423347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423348:	cmc    
  423349:	push   es
  42334a:	add    BYTE PTR [ebx],al
  42334c:	out    0x79,eax
  42334e:	inc    ebp
  42334f:	dec    ecx
  423350:	mov    al,ds:0x8bd5b7d
  423355:	add    eax,0x7de57791
  42335a:	inc    ebx
  42335b:	mov    cl,0x29
  42335d:	test   al,0x74
  42335f:	in     al,dx
  423360:	in     eax,0x43
  423362:	cmp    al,0x52
  423364:	adc    DWORD PTR [edx+0x75],edi
  423367:	mov    eax,ebx
  423369:	xchg   ebp,eax
  42336a:	or     ebp,ecx
  42336c:	lock fistp WORD PTR [ecx]
  42336f:	je     0x4233b4
  423371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423372:	call   0x4920dd
  423377:	ss sbb eax,0xa6872f
  42337d:	add    BYTE PTR [eax],al
  42337f:	(bad)  
  423381:	xchg   ebp,eax
  423382:	div    al
  423384:	push   es
  423385:	mov    DWORD PTR [esi-0x2aa48228],edi
  42338b:	test   DWORD PTR [ecx-0x44],esi
  42338e:	add    DWORD PTR [edi],ecx
  423390:	xchg   edi,eax
  423391:	cli    
  423392:	push   es
  423393:	rol    esi,0x37
  423396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423397:	mov    esp,0x49fec00f
  42339c:	dec    ebx
  42339d:	pop    edx
  42339e:	xchg   edx,eax
  42339f:	aaa    
  4233a0:	test   al,0x4
  4233a2:	jmp    0x6b2eb354
  4233a7:	dec    ebx
  4233a8:	dec    esi
  4233a9:	dec    edi
  4233aa:	aas    
  4233ab:	mov    esi,0x7be17d7f
  4233b0:	inc    ebx
  4233b1:	inc    eax
  4233b2:	add    bh,cl
  4233b4:	ret    0x8407
  4233b7:	or     BYTE PTR ds:0x71990000,al
  4233bd:	sub    BYTE PTR [eax],al
  4233bf:	inc    ebp
  4233c0:	cmp    BYTE PTR [bp+si],al
  4233c3:	or     al,BYTE PTR [ebx]
  4233c5:	push   0x10030a00
  4233ca:	push   0x376e
  4233cf:	retf   0x5d7f
  4233d2:	fsub   DWORD PTR [edx+0x5e]
  4233d5:	ret    
  4233d6:	add    BYTE PTR [edx],cl
  4233d8:	xchg   BYTE PTR [ebp-0x2c],ah
  4233db:	fimul  DWORD PTR [edi-0x3cf07410]
  4233e1:	push   eax
  4233e2:	mov    eax,DWORD PTR [eax]
  4233e4:	add    BYTE PTR [eax],al
  4233e6:	and    al,0xa5
  4233e8:	inc    ebp
  4233e9:	enter  0x91ca,0x45
  4233ed:	int3   
  4233ee:	push   ebx
  4233ef:	jbe    0x4233c1
  4233f1:	call   0x397ec2
  4233f6:	dec    esi
  4233f7:	retf   
  4233f8:	pop    es
  4233f9:	test   BYTE PTR [eax],dh
  4233fb:	or     al,BYTE PTR [eax]
  4233fd:	add    BYTE PTR [ecx+0x5ef685ca],ch
  423403:	or     eax,DWORD PTR [eax-0x8a75c2]
  423409:	aas    
  42340a:	or     bl,BYTE PTR [ebp+0x1]
  42340d:	add    BYTE PTR [esi+0x7],ch
  423410:	ds jmp 0x4233fe
  423413:	add    eax,0x8a8a0001
  423418:	jns    0x42341f
  42341a:	inc    edx
  42341b:	xchg   eax,ecx
  42341d:	(bad)  
  42341e:	call   0xa:0x5bd3850b
  423425:	(bad)  
  423426:	pavgb  mm0,QWORD PTR [eax]
  423429:	jmp    0x423425
  42342b:	lea    eax,[ebp-0x38]
  42342e:	repz (bad) 
  423430:	dec    esi
  423431:	inc    eax
  423432:	inc    esp
  423433:	aad    0x86
  423435:	inc    ebp
  423436:	push   edi
  423437:	jae    0x4233f8
  423439:	or     ebp,DWORD PTR [edi-0x6d]
  42343c:	(bad)  
  42343d:	push   ebx
  42343f:	pushf  
  423440:	ins    BYTE PTR es:[edi],dx
  423441:	or     al,0x78
  423443:	(bad)  [edi+0xe]
  423446:	mov    bl,0xef
  423448:	hlt    
  423449:	jae    0x42344b
  42344b:	add    BYTE PTR [eax],al
  42344d:	jmp    0x42346f
  42344f:	cmc    
  423450:	shl    BYTE PTR [ebx+0x3887bfc0],cl
  423456:	mov    BYTE PTR [ecx+edi*8],dl
  423459:	cld    
  42345a:	mov    WORD PTR [ebx-0x40],?
  42345d:	jle    0x42341f
  42345f:	add    BYTE PTR [ebp-0x45],0x87
  423463:	push   ds
  423464:	inc    eax
  423465:	in     al,0x74
  423467:	mov    al,bl
  423469:	jbe    0x4234b3
  42346b:	push   0xffffffbe
  42346d:	retf   0xfec2
  423470:	push   ebx
  423472:	leave  
  423473:	sbb    eax,0x3a42f166
  423478:	lock and ecx,DWORD PTR [ebp+0x6c]
  42347c:	and    al,0x68
  42347e:	lods   al,BYTE PTR ds:[esi]
  42347f:	daa    
  423480:	call   0xfc375efa
  423485:	jp     0x423431
  423487:	fistp  QWORD PTR [edi-0x65]
  42348a:	sub    al,0x4
  42348c:	test   BYTE PTR ds:0x19ffffef,dh
  423492:	mov    ecx,0xaa77fe69
  423497:	xlat   BYTE PTR ds:[ebx]
  423498:	push   eax
  423499:	jl     0x4234fd
  42349b:	(bad)  
  42349d:	popf   
  42349e:	in     al,0x6d
  4234a0:	in     al,0x5b
  4234a2:	xchg   edx,eax
  4234a3:	ret    0x64fa
  4234a6:	data16 cmp ah,ah
  4234a9:	jo     0x4234b1
  4234ab:	loope  0x4234a0
  4234ad:	call   0x474c3c
  4234b2:	add    BYTE PTR [eax],al
  4234b4:	repz push es
  4234b6:	pop    esi
  4234b7:	dec    ebx
  4234b8:	sbb    ebx,DWORD PTR [edx]
  4234ba:	scas   al,BYTE PTR es:[edi]
  4234bb:	das    
  4234bc:	jl     0x423519
  4234be:	in     al,dx
  4234bf:	jl     0x423457
  4234c1:	fcmove st,st(6)
  4234c3:	cld    
  4234c4:	adc    al,0xa
  4234c6:	(bad)  
  4234c8:	sub    BYTE PTR [edi-0x393307dc],cl
  4234ce:	jo     0x423521
  4234d0:	or     ebx,DWORD PTR [edi]
  4234d2:	and    al,0xf8
  4234d4:	clc    
  4234d5:	mov    ah,dh
  4234d7:	add    al,0xf3
  4234d9:	push   es
  4234da:	pusha  
  4234db:	dec    ecx
  4234dc:	nop    DWORD PTR [esp+eiz*8]
  4234e0:	call   0xf346e271
  4234e5:	push   es
  4234e6:	pop    esi
  4234e7:	jns    0x4234c0
  4234e9:	nop
  4234ea:	and    al,0xf4
  4234ec:	pop    esp
  4234ed:	and    ebx,DWORD PTR [ecx-0x737517fc]
  4234f3:	add    al,0xf3
  4234f5:	push   es
  4234f6:	pop    esi
  4234f7:	or     BYTE PTR [ebx-0x55781e6f],al
  4234fd:	adc    al,0x6d
  4234ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423500:	repz push es
  423502:	jmp    0xe232dd3d
  423507:	xchg   DWORD PTR [edx+0x754ae05b],edi
  42350d:	adc    esp,ecx
  42350f:	sbb    DWORD PTR [edx-0x23096bde],0xffffffc6
  423516:	pusha  
  423517:	dec    ecx
  423518:	add    BYTE PTR [eax],al
  42351a:	add    BYTE PTR [edi+0x1e7a41e],ah
  423520:	cmp    BYTE PTR [esi+0x41],ch
  423523:	fwait
  423524:	xchg   edx,eax
  423525:	in     eax,0x84
  423527:	in     al,dx
  423528:	push   ds
  423529:	add    cl,ch
  42352b:	fsub   QWORD PTR [edx]
  42352d:	xchg   ecx,ebp
  42352f:	jo     0x423550
  423531:	add    BYTE PTR [ebp+0x1a],bl
  423534:	mov    WORD PTR [ebp-0x27],cs
  423537:	int    0x2
  423539:	mov    cl,0x39
  42353b:	fld    st(7)
  42353d:	inc    ebp
  42353e:	add    DWORD PTR [ecx],0x932c892d
  423544:	loopne 0x42355b
  423546:	inc    ecx
  423547:	add    eax,0xb3640047
  42354c:	scas   al,BYTE PTR es:[edi]
  42354d:	mov    DWORD PTR [edi+eiz*2],esp
  423550:	mov    ds,WORD PTR [ebp+0x5d]
  423553:	xchg   edi,eax
  423554:	popa   
  423555:	mov    eax,0xffcabba6
  42355a:	call   0xf2a3c4f
  42355f:	sbb    esp,ecx
  423561:	sti    
  423562:	jb     0x423507
  423564:	out    dx,al
  423565:	test   BYTE PTR [ecx+0x2c871c6b],ch
  42356b:	ret    
  42356c:	inc    esi
  42356d:	mov    DWORD PTR [ebx+eax*8],esp
  423570:	sbb    eax,DWORD PTR [ebp+0x4d]
  423573:	pop    esi
  423574:	mov    dl,0x85
  423576:	inc    edx
  423577:	inc    esp
  423578:	ja     0x50af22a
  42357e:	jmp    0x8724:0xa000000
  423585:	lods   al,BYTE PTR ds:[esi]
  423586:	rcr    bh,0x34
  423589:	jns    0x42352c
  42358b:	stc    
  42358c:	ja     0x423569
  42358e:	xor    BYTE PTR [edi],al
  423590:	xchg   DWORD PTR [eax+eiz*4+0x5fddfb36],ebx
  423597:	mov    ecx,DWORD PTR [ebp+0x15]
  42359a:	cmc    
  42359b:	retf   
  42359c:	push   ecx
  42359d:	add    DWORD PTR [edi-0x70],ecx
  4235a0:	cli    
  4235a1:	push   cs
  4235a2:	cmc    
  4235a3:	mov    esi,0xbf4f0089
  4235a8:	cmp    DWORD PTR [ebp+0x62],0xffffffd8
  4235ac:	inc    ebp
  4235ad:	in     al,dx
  4235ae:	ror    DWORD PTR [esi-0x14],1
  4235b1:	cmp    edx,DWORD PTR [edi-0x97df819]
  4235b7:	aad    0xf7
  4235b9:	call   DWORD PTR [ecx]
  4235bb:	sub    BYTE PTR ss:[ebp+0x50],dh
  4235bf:	(bad)  
  4235c0:	jne    0x4235b6
  4235c2:	xor    al,BYTE PTR [edi-0x7a]
  4235c5:	(bad)  
  4235c6:	sub    eax,0x51851cc1
  4235cb:	pop    ebx
  4235cc:	add    edi,edi
  4235ce:	out    0xde,eax
  4235d0:	call   0xf81af208
  4235d5:	and    DWORD PTR [edi+0x664583de],ebp
  4235db:	pop    edi
  4235dc:	aas    
  4235dd:	and    al,0x93
  4235df:	xor    eax,0xf1d7c628
  4235e4:	add    DWORD PTR [ebx-0x39000000],ecx
  4235ea:	out    dx,al
  4235eb:	cmp    DWORD PTR [ebp-0x6e],0xffffffc3
  4235ef:	xor    al,0x8e
  4235f1:	pop    esp
  4235f2:	fadd   DWORD PTR [ebx+0x7d646a45]
  4235f8:	lock inc edx
  4235fa:	inc    BYTE PTR [ebp+0x75622dfe]
  423600:	enter  0xc232,0x3d
  423604:	jmp    FWORD PTR ds:0x21fb4561
  42360a:	loope  0x423598
  42360c:	jne    0x4235f0
  42360e:	ret    0x3de0
  423611:	fst    st(7)
  423613:	sub    al,al
  423615:	ins    DWORD PTR es:[edi],dx
  423616:	cmp    BYTE PTR [ebx-0x37],dl
  423619:	enter  0xe,0x55
  42361d:	add    edi,esp
  42361f:	sub    esp,0xfff7cff3
  423625:	jl     0x423694
  423627:	arpl   ax,di
  423629:	repz jl 0x423685
  42362c:	push   ebx
  42362d:	fisttp DWORD PTR [ebx]
  42362f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423630:	aas    
  423631:	repz xor DWORD PTR [ebx-0xd],eax
  423635:	pop    esp
  423636:	icebp  
  423637:	adc    ch,ah
  423639:	add    DWORD PTR [eax],esi
  42363b:	add    al,0xa1
  42363d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42363f:	inc    esp
  423640:	add    BYTE PTR [eax+0x3],bh
  423643:	lock mov ecx,0x4576efb0
  423649:	inc    ebx
  42364a:	ins    DWORD PTR es:[edi],dx
  42364b:	out    0xc,eax
  42364d:	add    BYTE PTR [eax],al
  42364f:	add    BYTE PTR [eax],bl
  423651:	fstp   TBYTE PTR [edx+eax*1+0x70]
  423655:	cwde   
  423656:	sti    
  423657:	ins    DWORD PTR es:[edi],dx
  423658:	loopne 0x42362e
  42365a:	inc    edx
  42365b:	lock pushf 
  42365d:	mov    ecx,0xeef742f9
  423662:	jae    0x42367c
  423664:	js     0x423681
  423666:	cld    
  423667:	cli    
  423668:	add    bl,0x7a
  42366b:	inc    edx
  42366c:	out    0x88,eax
  42366e:	je     0x423678
  423670:	and    BYTE PTR [ecx+0x4f],ah
  423673:	call   0xfc338290
  423678:	jbe    0x423629
  42367a:	pop    si
  42367c:	push   0xc34516f1
  423681:	in     al,dx
  423682:	out    dx,eax
  423683:	jg     0x4236cb
  423685:	inc    eax
  423686:	sti    
  423687:	mov    BYTE PTR [esi+0x48],al
  42368a:	je     0x42364e
  42368c:	push   0x9767f7aa
  423691:	xchg   BYTE PTR [eax+eax*1-0x5c],al
  423695:	ret    0xeef
  423698:	xor    esi,eax
  42369a:	jl     0x4236db
  42369c:	xor    eax,DWORD PTR [edi]
  42369e:	ins    BYTE PTR es:[edi],dx
  42369f:	ret    
  4236a0:	clc    
  4236a1:	mov    al,BYTE PTR [eax+0x2]
  4236a4:	repz push es
  4236a6:	add    DWORD PTR [ebx],0x5bf906f3
  4236ac:	test   BYTE PTR [ebx],bh
  4236ae:	jmp    0x9cd5f9b6
  4236b3:	mov    edi,0x5b000000
  4236b8:	test   al,0x21
  4236ba:	add    esi,ebx
  4236bc:	lea    ebx,[edi+edi*4+0x4b16bd4]
  4236c3:	jp     0x423718
  4236c5:	test   eax,0xabce6c55
  4236ca:	dec    ecx
  4236cb:	jg     0x4236d3
  4236cd:	pusha  
  4236ce:	dec    ecx
  4236cf:	das    
  4236d0:	out    dx,al
  4236d1:	daa    
  4236d2:	xor    DWORD PTR [eax],ebp
  4236d4:	loope  0x42373b
  4236d6:	(bad)  
  4236d7:	clc    
  4236d8:	mov    cl,BYTE PTR [edi+0x5]
  4236db:	repz push es
  4236dd:	rol    BYTE PTR [edi+0x59e906f2],0xc
  4236e4:	inc    eax
  4236e5:	ins    BYTE PTR es:[edi],dx
  4236e6:	mov    ecx,0xef92d911
  4236eb:	or     esi,ebx
  4236ed:	mov    bh,0xef
  4236ef:	clc    
  4236f0:	mov    WORD PTR [ecx-0x24],?
  4236f3:	push   eax
  4236f4:	imul   ebp,ecx,0xf60b2703
  4236fa:	add    dl,BYTE PTR [ebp+0x5]
  4236fd:	or     al,BYTE PTR [ecx+0x3e8b571]
  423703:	rep ins BYTE PTR es:[edi],dx
  423705:	cmc    
  423706:	push   ebx
  423707:	dec    ebp
  423708:	pop    es
  423709:	fs mov ecx,0xef4ae007
  42370f:	xor    al,0xcf
  423711:	inc    edx
  423712:	fsub   st(4),st
  423714:	(bad)  
  423715:	cmp    ebp,edi
  423717:	outs   dx,BYTE PTR ds:[esi]
  423718:	mov    DWORD PTR [eax],0xb7
  42371e:	adc    BYTE PTR [eax-0x5],ah
  423721:	jmp    0x42373e
  423723:	add    ecx,DWORD PTR [ebp-0x42294a4]
  423729:	push   ds
  42372a:	push   edi
  42372b:	xchg   esp,eax
  42372c:	add    cl,ch
  42372e:	lock out dx,al
  423730:	sbb    eax,0x8ddc8405
  423735:	ins    BYTE PTR es:[edi],dx
  423736:	sub    ebx,esp
  423738:	sti    
  423739:	inc    al
  42373b:	xchg   edx,eax
  42373d:	cdq    
  42373e:	cmp    DWORD PTR [ecx],ebp
  423740:	jg     0x423730
  423742:	icebp  
  423743:	pop    ecx
  423744:	pop    ss
  423745:	je     0x4236d2
  423747:	fwait
  423748:	std    
  423749:	ficom  WORD PTR [ebp-0x61]
  42374c:	mov    eax,0xe806f0e9
  423751:	int    0x51
  423753:	fdiv   st(3),st
  423755:	je     0x4237d2
  423757:	sbb    edi,ebx
  423759:	mov    esi,0xaf873715
  42375e:	cmp    edx,eax
  423760:	lea    esp,[esp+ebx*8-0x25]
  423764:	sti    
  423765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423766:	mov    al,ds:0x73f175db
  42376b:	mov    bl,ah
  42376d:	xchg   ebx,eax
  42376e:	or     eax,0xe18150dc
  423773:	mov    DWORD PTR [eax],eax
  423775:	jmp    0x544dfdf5
  42377a:	mov    al,0x8a
  42377c:	sar    ah,0xdf
  42377f:	xor    al,al
  423781:	pop    es
  423782:	add    BYTE PTR [eax],al
  423784:	add    BYTE PTR [esi-0x76],dl
  423787:	fsub   QWORD PTR [ebx-0x23]
  42378a:	fstp   TBYTE PTR [ecx+0x6ef4f]
  423790:	fs imul esp,esp,0xfffffff3
  423794:	dec    esi
  423795:	(bad)
  423798:	add    BYTE PTR [edx+0x33754943],bl
  42379e:	pop    ebp
  42379f:	inc    ebp
  4237a0:	call   0xe9bd13b6
  4237a5:	mov    dh,0x84
  4237a7:	ror    BYTE PTR [ebx+ecx*2],0x33
  4237ab:	lea    edi,[ebp+0x72]
  4237ae:	adc    al,0xc0
  4237b0:	call   0x38b5e5
  4237b5:	push   cs
  4237b6:	les    esi,FWORD PTR [edx+eax*2-0x19]
  4237ba:	xchg   BYTE PTR [esi+edi*8+0x65],cl
  4237be:	icebp  
  4237bf:	sub    esi,esi
  4237c1:	rol    BYTE PTR [edi+0x35],1
  4237c4:	cwde   
  4237c5:	repnz (bad) 
  4237c7:	mov    edi,0x7b4855fe
  4237cc:	ror    DWORD PTR [esi-0x7a],0xf6
  4237d0:	adc    BYTE PTR [eax-0x533fd440],bl
  4237d6:	pop    ebx
  4237d7:	add    eax,ebp
  4237d9:	mov    ebp,0xa3fff682
  4237de:	inc    edi
  4237df:	lock push 0xe
  4237e2:	pusha  
  4237e3:	inc    ebp
  4237e4:	lock cli 
  4237e6:	cmp    al,0x4
  4237e8:	lea    eax,[eax]
  4237ea:	add    BYTE PTR [eax],al
  4237ec:	lahf   
  4237ed:	inc    esi
  4237ee:	idiv   bh
  4237f0:	cmp    cl,BYTE PTR gs:[ebp-0x813b97b]
  4237f7:	(bad)  
  4237f8:	mov    edx,0xda75e5c2
  4237fd:	or     ch,al
  4237ff:	jl     0x423860
  423801:	in     al,dx
  423802:	imul   ecx
  423804:	cmp    al,0xed
  423806:	idiv   edi
  423808:	push   eax
  423809:	add    al,0x3c
  42380b:	and    DWORD PTR [esi-0x61d2c3f2],ebp
  423811:	idiv   BYTE PTR [ebx]
  423813:	inc    eax
  423814:	repz mov ebx,0xb4153bfb
  42381a:	add    ebp,DWORD PTR [esi]
  42381c:	enter  0xfd39,0xae
  423820:	out    dx,eax
  423821:	cmp    dh,dh
  423823:	scas   al,BYTE PTR es:[edi]
  423824:	icebp  
  423825:	dec    eax
  423826:	add    ch,BYTE PTR [edi-0x5101b710]
  42382c:	repnz lods al,BYTE PTR ds:[esi]
  42382e:	js     0x4238a5
  423830:	sti    
  423831:	cld    
  423832:	jno    0x423840
  423834:	jl     0x4238b4
  423836:	not    DWORD PTR [edx+0x74]
  423839:	shl    DWORD PTR [edi+0xe],cl
  42383c:	mov    bl,0xef
  42383e:	dec    edi
  42383f:	das    
  423840:	xor    ebx,DWORD PTR [ecx-0x43]
  423843:	call   0xfc2f130e
  423848:	outs   dx,DWORD PTR ds:[esi]
  423849:	xor    BYTE PTR [eax+0x29],bh
  42384c:	cld    
  42384d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42384e:	sar    BYTE PTR [edi+0x0],0x0
  423852:	add    BYTE PTR [ebx-0x10],bl
  423855:	jae    0x42386f
  423857:	stos   DWORD PTR es:[edi],eax
  423858:	in     al,0x83
  42385a:	(bad)  
  42385b:	repz out dx,eax
  42385d:	inc    DWORD PTR [edi-0x4]
  423860:	imul   edi,DWORD PTR [edx+0x0],0xfffffff3
  423864:	out    dx,eax
  423865:	aaa    
  423866:	je     0x423858
  423868:	daa    
  423869:	jae    0x423873
  42386b:	jo     0x423868
  42386d:	jmp    0x423870
  42386f:	xor    eax,0x7301f52b
  423874:	test   eax,0x62ed7501
  423879:	inc    edx
  42387a:	mov    esp,0xfb2b9e0b
  42387f:	in     al,dx
  423880:	pop    eax
  423881:	out    0x85,eax
  423883:	in     al,0xd2
  423885:	test   DWORD PTR [ebp+0x7cd71466],ecx
  42388b:	sbb    BYTE PTR [ebp-0x14],ch
  42388e:	xchg   DWORD PTR [esi],ebp
  423890:	pop    es
  423891:	icebp  
  423892:	cmc    
  423893:	cs fucomip st,st(0)
  423896:	cld    
  423897:	ja     0x42389d
  423899:	call   0xd6d42ba1
  42389e:	push   DWORD PTR [ebp+0x49]
  4238a1:	icebp  
  4238a2:	jp     0x4238d2
  4238a4:	pcmpgtb mm6,mm5
  4238a7:	sbb    dl,BYTE PTR [edx]
  4238a9:	cdq    
  4238aa:	in     al,dx
  4238ab:	(bad)  
  4238ac:	pop    esi
  4238ad:	xlat   BYTE PTR ds:[ebx]
  4238ae:	inc    ebx
  4238af:	repz xchg ecx,eax
  4238b1:	sbb    DWORD PTR [esi-0x2494f27f],eax
  4238b7:	add    BYTE PTR [eax],al
  4238b9:	add    bl,dh
  4238bb:	push   es
  4238bc:	jmp    0xb9f9673f
  4238c1:	pop    ecx
  4238c2:	sbb    eax,0x68373aef
  4238c7:	(bad)  [esi+0x3e]
  4238ca:	inc    ebx
  4238cb:	mov    DWORD PTR [ebx+eiz*8-0x3463700d],ecx
  4238d2:	mov    ds:0xaec2b191,al
  4238d7:	mov    dl,0xe9
  4238d9:	jl     0x423891
  4238db:	mov    edx,0xddfc3dc1
  4238e0:	retf   0x3380
  4238e3:	or     eax,0x6f3896c
  4238e8:	jmp    0xc1f4df65
  4238ed:	or     esp,ebx
  4238ef:	(bad)  [edx-0x16f9a723]
  4238f5:	add    ecx,DWORD PTR [ebp+0x6e533a1a]
  4238fb:	xor    DWORD PTR ds:0xffdcf8eb,0x3
  423902:	inc    ebx
  423903:	(bad)  
  423905:	das    
  423906:	add    DWORD PTR [edi-0x17],eax
  423909:	xchg   BYTE PTR [edi+0x7264000b],dh
  42390f:	mov    bl,0xf9
  423911:	outs   dx,BYTE PTR ds:[esi]
  423912:	fmul   DWORD PTR [esi-0x1f262a7b]
  423918:	sti    
  423919:	ins    BYTE PTR es:[edi],dx
  42391a:	jb     0x423957
  42391c:	sti    
  42391d:	push   esi
  42391e:	add    BYTE PTR [eax],al
  423920:	add    al,cl
  423922:	aaa    
  423923:	jmpw   0x92c0
  423927:	or     al,0x70
  423929:	pop    edx
  42392a:	cmp    edi,ebx
  42392c:	ds mov al,ah
  42392f:	jb     0x423912
  423931:	mov    cl,0x82
  423933:	jo     0x423963
  423935:	cwde   
  423936:	loopne 0x423937
  423938:	out    0xf0,eax
  42393a:	push   es
  42393b:	sti    
  42393c:	hlt    
  42393d:	adc    dl,dh
  42393f:	aas    
  423940:	jmp    0xde4418b2
  423945:	jae    0x42395d
  423947:	sti    
  423948:	push   es
  423949:	pop    eax
  42394a:	pop    esp
  42394b:	mov    ebp,0xfbe04979
  423950:	jmp    0xee66bfae
  423955:	pop    ecx
  423956:	loopne 0x4238e5
  423958:	ins    BYTE PTR es:[edi],dx
  423959:	xor    al,0xde
  42395b:	sti    
  42395c:	fisub  WORD PTR [eax-0x10aed812]
  423962:	push   es
  423963:	jmp    0xfc225362
  423968:	scas   eax,DWORD PTR es:[edi]
  423969:	mov    bl,0xd7
  42396b:	add    al,dl
  42396d:	push   ds
  42396e:	loope  0x42396b
  423970:	mov    dh,0xc2
  423972:	fbstp  TBYTE PTR [ebp-0x1f]
  423975:	mov    eax,ds:0xdd2115df
  42397a:	inc    esi
  42397b:	add    BYTE PTR [ecx],bh
  42397d:	(bad)  
  42397e:	mov    BYTE PTR [edi-0xc02e75a],0x8e
  423985:	add    BYTE PTR [eax],al
  423987:	add    cl,bl
  423989:	add    al,0x0
  42398c:	out    0xf4,eax
  42398e:	mov    WORD PTR [ebp-0x7a],es
  423991:	mov    edi,0xf15d3b24
  423996:	cmp    eax,0x57
  423999:	icebp  
  42399a:	jne    0x423975
  42399c:	and    edi,DWORD PTR [eax]
  42399e:	idiv   edi
  4239a0:	sbb    eax,0x32d4755f
  4239a5:	aas    
  4239a6:	xor    bh,bh
  4239a8:	cmp    eax,0x9bf84d85
  4239ad:	test   BYTE PTR [ebx+0x20],dh
  4239b0:	jmp    0x423a06
  4239b2:	daa    
  4239b3:	push   0xffffffbf
  4239b5:	pop    esi
  4239b6:	mov    ebp,0xf7f0dcbc
  4239bb:	pop    eax
  4239bc:	loop   0x423a10
  4239be:	loope  0x4239bf
  4239c0:	fstp   QWORD PTR [ebx+ebp*2+0x1c]
  4239c4:	jo     0x4239e8
  4239c6:	add    edi,0xffffffd1
  4239c9:	popf   
  4239ca:	call   0xf8301af3
  4239cf:	test   DWORD PTR [edx],ecx
  4239d1:	push   edi
  4239d2:	pop    es
  4239d3:	mov    al,BYTE PTR [edx+eiz*1-0x2439c4c4]
  4239da:	jg     0x42399c
  4239dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239dd:	push   es
  4239de:	jnp    0x423a2d
  4239e0:	push   edx
  4239e1:	repnz add BYTE PTR [ebx-0x12],0x11
  4239e6:	test   DWORD PTR [ecx-0x38cc4141],0xe6000000
  4239f0:	sbb    BYTE PTR [esi+0x39],bl
  4239f3:	repnz push esi
  4239f5:	xor    DWORD PTR [ebx-0x38cced37],ecx
  4239fb:	(bad)  
  4239fc:	cld    
  4239fd:	pop    ebp
  4239fe:	cmp    DWORD PTR [edx],edx
  423a00:	imul   esp,DWORD PTR ds:0xb553fc6a,0xffffffe4
  423a07:	repz jno 0x4239f3
  423a0a:	sti    
  423a0b:	dec    ebx
  423a0c:	mov    BYTE PTR [ebp-0x1f],cl
  423a0f:	in     al,0x81
  423a11:	jmp    0xbe975d85
  423a16:	sti    
  423a17:	pusha  
  423a18:	les    ecx,FWORD PTR [edi-0x73]
  423a1b:	ss pop esp
  423a1d:	push   esp
  423a1e:	call   0xfc284c63
  423a23:	jo     0x423a49
  423a25:	adc    al,0xe7
  423a27:	pop    es
  423a28:	gs inc ebp
  423a2a:	xor    al,0xe8
  423a2c:	and    BYTE PTR [eax+0x5c],dh
  423a2f:	jae    0x423a39
  423a31:	add    al,0x74
  423a33:	inc    esp
  423a34:	mov    dh,0x8
  423a36:	lea    ebx,[esi-0x14]
  423a39:	jmp    0xd7bac739
  423a3e:	es xchg edx,eax
  423a40:	and    ecx,ebp
  423a42:	sti    
  423a43:	add    BYTE PTR [esp+edi*2+0x3b6323c2],dh
  423a4a:	in     al,dx
  423a4b:	ret    
  423a4c:	pop    es
  423a4d:	cmp    ecx,edx
  423a4f:	add    DWORD PTR gs:[ebp+0xc4],eax
  423a56:	out    dx,eax
  423a57:	(bad)  
  423a58:	sar    BYTE PTR [edx+0x20],0xed
  423a5c:	mov    edi,0xd3534c50
  423a61:	(bad)  
  423a62:	(bad)  
  423a63:	retf   
  423a64:	pop    ebp
  423a65:	(bad)  
  423a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a67:	mov    bh,0xf2
  423a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a6a:	xor    eax,0x17457cb1
  423a6f:	idiv   edx
  423a71:	pop    es
  423a72:	imul   ebp,DWORD PTR ds:0x98ed7504,0x5a0bec6a
  423a7c:	jbe    0x423a78
  423a7e:	or     al,0x6d
  423a80:	pop    edx
  423a81:	in     al,dx
  423a82:	repz push es
  423a84:	mov    ?,edx
  423a86:	jge    0x423ad3
  423a88:	mov    eax,ds:0x4f0f5423
  423a8d:	inc    esp
  423a8e:	xrelease xchg BYTE PTR [ecx+esi*8],cl
  423a92:	call   0x64c617ea
  423a97:	jmp    edi
  423a99:	outs   dx,BYTE PTR ds:[esi]
  423a9a:	icebp  
  423a9b:	test   esi,ebp
  423a9d:	sbb    esi,ebx
  423a9f:	push   ecx
  423aa0:	fcomi  st,st(1)
  423aa2:	fisttp WORD PTR cs:[ecx]
  423aa5:	jo     0x423a96
  423aa7:	in     eax,dx
  423aa8:	jecxz  0x423a2d
  423aaa:	ss shr al,cl
  423aad:	outs   dx,BYTE PTR ds:[esi]
  423aae:	test   DWORD PTR [ebp-0x2f041464],0x9ebebac
  423ab8:	gs aam 0x0
  423abb:	add    BYTE PTR [eax],al
  423abd:	repnz push es
  423abf:	jmp    0x23710740
  423ac4:	ds in  al,dx
  423ac6:	push   es
  423ac7:	ins    BYTE PTR es:[edi],dx
  423ac8:	ret    
  423ac9:	push   es
  423aca:	cmc    
  423acb:	mov    ss,WORD PTR [eax]
  423acd:	pop    bx
  423acf:	pop    ebp
  423ad0:	dec    ebx
  423ad1:	pop    ebx
  423ad2:	popa   
  423ad3:	or     eax,ebp
  423ad5:	push   0xd5532a8d
  423ada:	add    DWORD PTR [esi],ecx
  423adc:	dec    esp
  423add:	popa   
  423ade:	inc    ebx
  423adf:	icebp  
  423ae0:	adc    al,bh
  423ae2:	sbb    eax,0xef0f73ea
  423ae7:	fwait
  423ae8:	sar    DWORD PTR [ecx],0xd9
  423aeb:	outs   dx,BYTE PTR ds:[esi]
  423aec:	aam    0x6a
  423aee:	xor    ebx,ecx
  423af0:	cmp    DWORD PTR ds:0xf28f6509,0x3332e906
  423afa:	pop    ds
  423afb:	es sbb al,0xa1
  423afe:	inc    esp
  423aff:	add    BYTE PTR [ebx+0xb],ah
  423b02:	or     DWORD PTR [eax+0x253e5b0],eax
  423b08:	scas   eax,DWORD PTR es:[edi]
  423b09:	repz test BYTE PTR ds:0xf958f692,0xc2
  423b11:	arpl   WORD PTR [ebx],ax
  423b13:	ret    0xe5
  423b16:	daa    
  423b17:	inc    eax
  423b18:	ret    0x2f31
  423b1b:	outs   dx,BYTE PTR ds:[esi]
  423b1c:	mov    bh,BYTE PTR [eax+0xf27ef8]
  423b22:	add    BYTE PTR [eax],al
  423b24:	adc    BYTE PTR [edi],al
  423b26:	or     esp,DWORD PTR [esp+0x6]
  423b2a:	add    cl,ch
  423b2c:	sbb    bh,bh
  423b2e:	mov    esp,ds
  423b30:	pop    eax
  423b31:	aas    
  423b32:	call   0xfc1ecc1a
  423b37:	bound  esp,QWORD PTR [edi+esi*1+0x66]
  423b3b:	lock sub bh,ch
  423b3e:	pop    edi
  423b3f:	and    al,0x8d
  423b41:	fmul   QWORD PTR [ecx+0x7d5880ac]
  423b47:	cmp    edi,ebp
  423b49:	or     eax,DWORD PTR [ebp+ebp*4+0x6a0006f7]
  423b50:	adc    ch,bh
  423b52:	add    BYTE PTR [edi-0x29],dl
  423b55:	sar    DWORD PTR [edi],0xe9
  423b58:	mov    dh,0xdb
  423b5a:	adc    eax,0x470115
  423b5f:	xchg   DWORD PTR [edi-0xf553ac5],ecx
  423b65:	test   DWORD PTR fs:[ecx],ebp
  423b68:	ret    
  423b69:	inc    ebp
  423b6a:	xchg   esp,esi
  423b6c:	lods   al,BYTE PTR ds:[esi]
  423b6d:	sar    DWORD PTR [edi],0xe9
  423b70:	jae    0x423b40
  423b72:	je     0x423b92
  423b74:	and    al,0x95
  423b76:	sar    BYTE PTR [eax],0x47
  423b79:	loopne 0x423b3f
  423b7b:	add    BYTE PTR [ecx+eiz*8],dh
  423b7e:	test   eax,eax
  423b80:	fdivp  st(4),st
  423b82:	push   es
  423b83:	mov    bh,0x2f
  423b85:	inc    eax
  423b86:	lds    eax,FWORD PTR [ebx+0x0]
  423b89:	add    BYTE PTR [eax],al
  423b8b:	sbb    dl,BYTE PTR ds:0xbacf89c9
  423b91:	test   edx,edx
  423b93:	fimul  WORD PTR [esi+ebx*2]
  423b96:	add    esi,0x1b
  423b99:	and    BYTE PTR [ebx-0x33],dh
  423b9c:	cmp    eax,0x59ec5a20
  423ba1:	adc    al,0x48
  423ba3:	lds    ebp,FWORD PTR [eax+0x449f5c15]
  423ba9:	add    BYTE PTR [ecx-0x7f],al
  423bac:	popf   
  423bad:	push   0xffffffe6
  423baf:	jl     0x423b91
  423bb1:	adc    eax,0x43b8f0
  423bb6:	dec    ecx
  423bb8:	fild   DWORD PTR [edx+0x3dc643]
  423bbe:	call   0x39004d
  423bc3:	and    esp,ebp
  423bc5:	test   edi,edi
  423bc7:	xchg   ebp,eax
  423bc8:	push   edi
  423bc9:	mov    ah,0x0
  423bcb:	call   0x8d49:0xb43c6203
  423bd2:	test   edx,ebp
  423bd4:	loope  0x423bcd
  423bd6:	push   DWORD PTR [eax+0x3]
  423bd9:	push   eax
  423bda:	call   FWORD PTR [edi+0x27]
  423bdd:	push   cs
  423bde:	inc    eax
  423bdf:	dec    edx
  423be0:	test   ah,al
  423be2:	or     al,0xc7
  423be4:	xchg   al,ah
  423be6:	inc    BYTE PTR [ebp-0x1f]
  423be9:	push   eax
  423bea:	push   0x5a
  423bec:	loopne 0x423c59
  423bee:	or     al,0x0
  423bf0:	add    BYTE PTR [eax],al
  423bf2:	ret    
  423bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf4:	loopne 0x423bf4
  423bf6:	adc    eax,0xf373f7e1
  423bfb:	in     eax,0xe4
  423bfd:	adc    eax,0x3fd293
  423c02:	jo     0x423bc9
  423c04:	push   DWORD PTR [ebx+ebx*4+0x33]
  423c08:	or     cl,BYTE PTR [ebp-0x41cdeba]
  423c0e:	add    al,0xf5
  423c10:	(bad)  [esi+0x1c]
  423c13:	mov    al,ds:0x6ada66e5
  423c18:	stos   DWORD PTR es:[edi],eax
  423c19:	sbb    al,0xec
  423c1b:	jge    0x423c02
  423c1d:	pop    eax
  423c1e:	(bad)  [eax*8+0x6361dcfb]
  423c25:	in     al,dx
  423c26:	repz pop eax
  423c28:	dec    ebx
  423c29:	call   0xb85665a6
  423c2e:	cmp    ebx,ebx
  423c30:	aas    
  423c31:	add    BYTE PTR [eax+0x30],ch
  423c34:	cmc    
  423c35:	inc    esp
  423c36:	ds inc esp
  423c38:	jnp    0x423c08
  423c3a:	cld    
  423c3b:	mov    ds:0xbbba85cf,eax
  423c40:	cli    
  423c41:	mov    eax,0x3f965b
  423c46:	popf   
  423c47:	stos   DWORD PTR es:[edi],eax
  423c48:	out    0x1,eax
  423c4a:	pop    es
  423c4b:	out    0x72,al
  423c4d:	test   edi,esp
  423c4f:	and    al,0xe5
  423c51:	sti    
  423c52:	jl     0x423cc7
  423c54:	out    dx,eax
  423c55:	push   edx
  423c56:	add    BYTE PTR [eax],al
  423c58:	add    BYTE PTR [ecx],ah
  423c5a:	(bad)  
  423c5b:	dec    edi
  423c5c:	push   ebx
  423c5d:	jle    0x423cc2
  423c5f:	cmp    ch,bh
  423c61:	fs add eax,0x61332f54
  423c67:	mov    ds:0xe4d555ec,eax
  423c6c:	add    al,0xd9
  423c6e:	fcomip st,st(4)
  423c70:	xchg   ebx,eax
  423c71:	xor    edi,DWORD PTR [ebp-0x80]
  423c74:	shr    al,0x6
  423c77:	cmp    esp,ebx
  423c79:	dec    edi
  423c7a:	loopne 0x423c56
  423c7c:	in     al,0xac
  423c7e:	retf   0x7c01
  423c81:	scas   al,BYTE PTR es:[edi]
  423c82:	add    DWORD PTR [edx],esi
  423c84:	fdiv   QWORD PTR [ebx]
  423c86:	mov    es,ebx
  423c88:	in     al,0x18
  423c8a:	pop    esp
  423c8b:	rcr    ebx,1
  423c8d:	dec    ebx
  423c8e:	mov    ?,WORD PTR [ebx-0x46a3f71c]
  423c94:	fild   DWORD PTR [ebx-0x72]
  423c97:	mov    ds:0xee5473e4,eax
  423c9c:	add    esp,DWORD PTR [esi+0xb]
  423c9f:	pop    si
  423ca1:	jmp    0x423c80
  423ca3:	mov    ch,BYTE PTR [esi-0x31]
  423ca6:	fisub  WORD PTR [ebx+0x7c]
  423ca9:	(bad)  
  423cab:	jae    0x423ceb
  423cad:	retf   
  423cae:	pop    es
  423caf:	cld    
  423cb0:	xor    dh,BYTE PTR [edi+ebx*8]
  423cb3:	inc    ebp
  423cb4:	icebp  
  423cb5:	mov    eax,0x3fc36dd5
  423cba:	or     esp,DWORD PTR [esi+0x36]
  423cbd:	add    BYTE PTR [eax],al
  423cbf:	add    BYTE PTR [ebx-0x54c1a4f8],ch
  423cc5:	not    ah
  423cc7:	push   es
  423cc8:	sbb    al,0x52
  423cca:	add    eax,0x6e001e03
  423ccf:	inc    eax
  423cd0:	retf   
  423cd1:	mov    DWORD PTR [ecx-0x24a57b01],esi
  423cd7:	push   eax
  423cd8:	mov    esi,esp
  423cda:	sbb    esp,esp
  423cdc:	js     0x423c68
  423cde:	sub    DWORD PTR [edi-0x9],ebp
  423ce1:	mov    DWORD PTR [ebx+ebp*8-0x146b2a11],esp
  423ce8:	je     0x423cc3
  423cea:	adc    DWORD PTR [esi],esi
  423cec:	data16 aad 0xfa
  423cef:	ja     0x423ca7
  423cf1:	into   
  423cf2:	add    BYTE PTR [esi+0x2bc93dae],dl
  423cf8:	cmp    al,0xd5
  423cfa:	push   esp
  423cfb:	jb     0x423d40
  423cfd:	lea    eax,[ebp+0x1]
  423d00:	je     0x423ce4
  423d02:	adc    al,0x3a
  423d04:	jmp    0xaaa46d96
  423d09:	repnz xchg cl,ch
  423d0c:	fld    DWORD PTR [ebx-0x20ee1884]
  423d12:	and    ch,al
  423d14:	lock push es
  423d16:	sub    bh,0xcb
  423d19:	add    DWORD PTR [ebp+0x6ee05],eax
  423d1f:	jae    0x423d4a
  423d21:	push   es
  423d22:	adc    BYTE PTR [ebx-0x1000000],0xff
  423d29:	jge    0x423d24
  423d2b:	test   DWORD PTR [esi],0xeb56900
  423d31:	or     esp,DWORD PTR [esi-0x8]
  423d34:	add    eax,0x4275e900
  423d39:	sbb    BYTE PTR [edx-0x12],ah
  423d3c:	and    edx,edi
  423d3e:	je     0x423d69
  423d40:	shl    bh,1
  423d42:	out    0x70,al
  423d44:	(bad)  
  423d46:	fdiv   st(2),st
  423d48:	adc    ecx,DWORD PTR [eax+0x12]
  423d4b:	scas   eax,DWORD PTR es:[edi]
  423d4c:	pop    ecx
  423d4d:	cmc    
  423d4e:	aas    
  423d4f:	lods   al,BYTE PTR ds:[esi]
  423d50:	push   es
  423d51:	or     esp,DWORD PTR [eax+ebx*4+0x7]
  423d55:	add    cl,ch
  423d57:	jo     0x423d36
  423d59:	xor    BYTE PTR [esp+esi*8-0x35ed3fdd],dh
  423d60:	add    DWORD PTR [ebp+0x1d],0xe175d027
  423d67:	js     0x423da3
  423d69:	cld    
  423d6a:	daa    
  423d6b:	stos   BYTE PTR es:[edi],al
  423d6c:	rol    DWORD PTR [eax],1
  423d6e:	add    BYTE PTR [edx],al
  423d70:	stc    
  423d71:	jne    0x423d71
  423d73:	dec    ebp
  423d74:	(bad)  
  423d75:	clc    
  423d76:	add    DWORD PTR [ebp-0x7c],ecx
  423d79:	mov    edx,0x33084a00
  423d7e:	inc    ebp
  423d7f:	cmp    bh,cl
  423d81:	jp     0x423d3c
  423d83:	sbb    cl,BYTE PTR [eax]
  423d85:	add    BYTE PTR [ebx+0x48cf6cf],cl
  423d8b:	add    BYTE PTR [eax],al
  423d8d:	add    BYTE PTR [ebx-0x7b],cl
  423d90:	or     BYTE PTR [ebx-0x6dd014e],cl
  423d96:	sbb    DWORD PTR [edi],esi
  423d98:	adc    al,0x57
  423d9a:	jmp    0x423d7e
  423d9c:	sbb    al,BYTE PTR [edi+0x4589e94c]
  423da2:	push   edx
  423da3:	jg     0x423d9c
  423da5:	je     0x423d89
  423da7:	jle    0x423d69
  423da9:	orps   xmm3,XMMWORD PTR [edi+0x10ca0000]
  423db0:	sbb    eax,0xffffff82
  423db3:	push   ecx
  423db4:	jbe    0x423db5
  423db6:	dec    ebp
  423db7:	test   DWORD PTR [ebp+0x1c],edx
  423dba:	push   ecx
  423dbb:	fiadd  DWORD PTR [edx+0x1c3f51d8]
  423dc1:	mov    ecx,edx
  423dc3:	jbe    0x423e41
  423dc5:	sbb    BYTE PTR [ebp+eax*4+0x45],cl
  423dc9:	sbb    BYTE PTR [ecx],dl
  423dcb:	or     BYTE PTR [ebx-0x72470e38],al
  423dd1:	dec    esp
  423dd2:	mov    ebx,0x3f023e5
  423dd7:	aaa    
  423dd8:	hlt    
  423dd9:	mov    DWORD PTR [edi-0x49],eax
  423ddc:	xor    DWORD PTR [ebp-0x5e],0x76
  423de0:	inc    edi
  423de1:	add    edx,esp
  423de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423de4:	test   esi,edi
  423de6:	or     eax,0xf374c08c
  423deb:	mov    cl,BYTE PTR [edx+0x2ad68c2]
  423df1:	jne    0x423df3
  423df3:	add    BYTE PTR [eax],al
  423df5:	arpl   WORD PTR [eax-0x26],sp
  423df8:	inc    cl
  423dfa:	scas   eax,DWORD PTR es:[edi]
  423dfb:	fidiv  WORD PTR [ebp+0x3f]
  423dfe:	push   0x49
  423e00:	(bad)  
  423e01:	lods   al,BYTE PTR ds:[esi]
  423e02:	xor    al,BYTE PTR [ebx]
  423e04:	das    
  423e05:	mov    ds:0x2d8287b5,eax
  423e0a:	mov    ah,0xed
  423e0c:	adc    DWORD PTR [ebp+0x274d8cec],ebx
  423e12:	xor    al,BYTE PTR [esi-0x2]
  423e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e16:	pop    edx
  423e17:	clc    
  423e18:	sbb    esp,DWORD PTR cs:[edx-0x7a]
  423e1c:	cli    
  423e1d:	add    al,0xf0
  423e1f:	loopne 0x423e96
  423e21:	sti    
  423e22:	cli    
  423e23:	loopne 0x423e3a
  423e25:	ret    
  423e26:	sar    DWORD PTR [edi],cl
  423e28:	add    BYTE PTR [eax-0x54],dh
  423e2b:	adc    bl,bh
  423e2d:	pop    esi
  423e2e:	js     0x423e1c
  423e30:	and    al,0x75
  423e32:	and    cl,0x87
  423e35:	cs in  al,dx
  423e37:	xchg   BYTE PTR [eax],bh
  423e39:	js     0x423e66
  423e3b:	cld    
  423e3c:	xchg   bl,dh
  423e3e:	push   0x58
  423e40:	sbb    bh,BYTE PTR [ebx+esi*1-0x5d4bc7a0]
  423e47:	sbb    al,0xf3
  423e49:	cld    
  423e4a:	pop    ebp
  423e4b:	mov    dl,0xfa
  423e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e4e:	cmp    DWORD PTR [ecx+eax*1-0x36c35dc4],edx
  423e55:	mov    cl,0xe8
  423e57:	jmp    FWORD PTR ds:0xb3000000
  423e5d:	xor    eax,0x17fefbd3
  423e62:	in     al,dx
  423e63:	hlt    
  423e64:	jbe    0x423e88
  423e66:	loope  0x423e4f
  423e68:	add    DWORD PTR [edi],0x865f8cbc
  423e6e:	or     eax,0xe14c6c40
  423e73:	mov    ebx,?
  423e75:	xor    eax,0x2de8cb3
  423e7a:	outs   dx,BYTE PTR ds:[esi]
  423e7b:	adc    ah,BYTE PTR [eax+0x7f6c3105]
  423e81:	jge    0x423e2c
  423e83:	add    ebp,DWORD PTR [edx+0x44]
  423e86:	icebp  
  423e87:	sub    al,0x2b
  423e89:	cmp    BYTE PTR [edi-0x9],cl
  423e8c:	(bad)
  423e8f:	loope  0x423e84
  423e91:	fidivr WORD PTR [eax+0x5ed21989]
  423e97:	mov    ebx,0x87f2ae6e
  423e9c:	outs   dx,BYTE PTR ds:[esi]
  423e9d:	pop    es
  423e9e:	jmp    0xe596aaa6
  423ea3:	cmp    DWORD PTR [esi-0x2f],0xffffffe9
  423ea7:	push   esi
  423ea8:	mov    ebx,0x6e8ec95c
  423ead:	scas   eax,DWORD PTR es:[edi]
  423eae:	inc    ecx
  423eaf:	in     al,dx
  423eb0:	xchg   edi,eax
  423eb1:	mov    dl,0x92
  423eb3:	loopne 0x423f23
  423eb5:	dec    ebx
  423eb6:	xor    DWORD PTR [ebx],0xe0b9e8cb
  423ebc:	enter  0xa98a,0x57
  423ec0:	add    BYTE PTR [eax],al
  423ec2:	add    cl,ch
  423ec4:	add    DWORD PTR [edx],edi
  423ec6:	inc    esi
  423ec7:	iret   
  423ec8:	ss pop esi
  423eca:	enter  0x5d23,0x19
  423ece:	inc    ecx
  423ecf:	jle    0x423f2c
  423ed1:	xchg   ecx,eax
  423ed2:	jmp    0x423f37
  423ed4:	mov    edi,0x5b74e053
  423ed9:	fisttp QWORD PTR [ebx+ebx*4-0x77795fd1]
  423ee0:	push   ecx
  423ee1:	out    0x14,eax
  423ee3:	mov    BYTE PTR [ebp+0x0],bh
  423ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ee7:	cwde   
  423ee8:	sub    edi,eax
  423eea:	push   0xffffff89
  423eec:	sti    
  423eed:	push   eax
  423eee:	je     0x423eaf
  423ef0:	sti    
  423ef1:	mov    ebp,fs
  423ef3:	repz aaa 
  423ef5:	push   eax
  423ef6:	pusha  
  423ef7:	mov    ch,0xda
  423ef9:	sti    
  423efa:	hlt    
  423efb:	and    ch,dh
  423efd:	aas    
  423efe:	jmp    0x964f097a
  423f03:	jne    0x423f50
  423f05:	test   al,0x99
  423f07:	pop    es
  423f08:	into   
  423f09:	adc    eax,0x113ab9
  423f0e:	jb     0x423ed2
  423f10:	inc    BYTE PTR [esi-0x18ba7c10]
  423f16:	call   0x62501111
  423f1b:	stos   BYTE PTR es:[edi],al
  423f1c:	fidivr DWORD PTR [edi-0x53]
  423f1f:	jecxz  0x423f7f
  423f21:	mov    ah,0x73
  423f23:	scas   eax,DWORD PTR es:[edi]
  423f24:	push   es
  423f25:	mov    DWORD PTR [eax+eax*1],esp
  423f28:	add    BYTE PTR [eax],al
  423f2a:	pop    ds
  423f2b:	sub    eax,ecx
  423f2d:	sbb    BYTE PTR [ecx+0x3aaf56fb],cl
  423f33:	int3   
  423f34:	add    DWORD PTR [ecx-0x69057af5],edx
  423f3a:	push   0xe4b285af
  423f3f:	mov    DWORD PTR [edx-0x7a],esp
  423f42:	lods   al,BYTE PTR ds:[esi]
  423f43:	int3   
  423f44:	xchg   BYTE PTR [esp+eiz*4],ah
  423f47:	sub    al,0x5a
  423f49:	adc    ch,BYTE PTR [esi-0x416f76f]
  423f4f:	xchg   esp,ebp
  423f51:	push   0xffffffa3
  423f53:	test   DWORD PTR [esi-0x49],0xc3f087dd
  423f5a:	test   BYTE PTR [edi+0x5a67b3d6],0xf4
  423f61:	add    BYTE PTR [ecx],al
  423f63:	retf   0xf233
  423f66:	dec    eax
  423f67:	rol    DWORD PTR [edx+0x6ab68130],1
  423f6d:	sbb    DWORD PTR [ecx+0x6e77f42f],eax
  423f73:	push   0xffffff83
  423f75:	jge    0x423fe1
  423f77:	push   0xffffff85
  423f79:	js     0x423fc9
  423f7b:	das    
  423f7c:	adc    DWORD PTR [ecx],ebp
  423f7e:	jg     0x423f38
  423f80:	sti    
  423f81:	lds    esi,FWORD PTR [ebx]
  423f83:	pmuludq mm6,QWORD PTR [ebx-0x5]
  423f87:	hlt    
  423f88:	mov    edi,0x999e9
  423f8d:	add    BYTE PTR [eax],al
  423f8f:	add    BYTE PTR [eax],al
  423f91:	leave  
  423f92:	leave  
  423f93:	dec    BYTE PTR [edx-0x390de2ec]
  423f99:	iret   
  423f9a:	scas   eax,DWORD PTR es:[edi]
  423f9b:	add    BYTE PTR [ecx+0x7d89bad7],cl
  423fa1:	cmp    BYTE PTR ds:[edi],al
  423fa4:	push   edi
  423fa5:	cdq    
  423fa6:	ret    
  423fa7:	dec    BYTE PTR [edi+0x22]
  423faa:	sub    DWORD PTR [ebp+0x458345fe],eax
  423fb0:	clc    
  423fb1:	xor    DWORD PTR [eax],ecx
  423fb3:	jnp    0x42401a
  423fb5:	xchg   edx,eax
  423fb6:	add    eax,DWORD PTR [ebp+0x7b3bfeff]
  423fbc:	jge    0x423f40
  423fbe:	add    esi,DWORD PTR [eax+edx*1+0x37]
  423fc2:	aas    
  423fc3:	hlt    
  423fc4:	push   eax
  423fc5:	inc    edi
  423fc6:	aas    
  423fc7:	clc    
  423fc8:	push   eax
  423fc9:	bound  ebp,QWORD PTR [eax+0x7d45fff6]
  423fcf:	jge    0x423fc5
  423fd1:	dec    edi
  423fd2:	mov    cl,0x74
  423fd4:	xor    DWORD PTR [ecx],ebx
  423fd6:	addr16 clc 
  423fd8:	add    BYTE PTR [ebp-0xcfecd79],dl
  423fde:	(bad)  
  423fe0:	xchg   BYTE PTR [esi],bl
  423fe2:	out    0x90,al
  423fe4:	inc    ebp
  423fe5:	xchg   DWORD PTR [ebp-0x70],ebp
  423fe8:	inc    ebp
  423fe9:	mov    ebp,DWORD PTR [ebp-0x26]
  423fec:	outs   dx,DWORD PTR ds:[esi]
  423fed:	jecxz  0x424007
  423fef:	pop    eax
  423ff0:	or     al,0x1d
  423ff2:	and    DWORD PTR [eax-0x10],ebx
  423ff5:	add    BYTE PTR [eax],al
  423ff7:	add    BYTE PTR [ebx+0x4],bl
  423ffa:	loope  0x423ff7
  423ffc:	imul   edi,DWORD PTR fs:[edi+0x4d5770b],0x6064f300
  424007:	hlt    
  424008:	pop    eax
  424009:	fadd   QWORD PTR [esi+0x7e87fb75]
  42400f:	jge    0x423ff4
  424011:	in     eax,0xa
  424013:	test   DWORD PTR [ebp-0x64000023],ecx
  424019:	cdq    
  42401a:	xchg   BYTE PTR [eax-0xd],al
  42401d:	mov    al,0x53
  42401f:	lock or esi,DWORD PTR [eax]
  424022:	pop    ecx
  424023:	cli    
  424024:	adc    al,0x5c
  424026:	fdiv   st(1),st
  424028:	xchg   bl,bl
  42402a:	adc    al,al
  42402c:	outs   dx,BYTE PTR ds:[esi]
  42402d:	popf   
  42402e:	or     eax,0xffdd0a88
  424033:	(bad)  
  424034:	mov    eax,0x700b102a
  424039:	add    BYTE PTR [eax+eax*1],0xf3
  42403d:	pop    eax
  42403e:	pop    ecx
  42403f:	adc    al,0x6e
  424041:	lods   al,BYTE PTR ds:[esi]
  424042:	lds    esp,FWORD PTR [edi]
  424044:	push   ebp
  424045:	in     al,0x0
  424047:	cmp    dh,al
  424049:	add    bl,al
  42404b:	or     ebp,DWORD PTR [edi-0x64]
  42404e:	add    al,0x0
  424050:	repz push 0x61d3e8c5
  424056:	(bad)  
  424058:	jp     0x424061
  42405a:	lods   al,BYTE PTR ds:[esi]
  42405b:	repz add BYTE PTR [eax],al
  42405e:	add    BYTE PTR [edi-0x39],ch
  424061:	jmp    0x9803:0xe9076587
  424068:	adc    eax,0x36e3514a
  42406d:	inc    edx
  42406e:	not    esp
  424070:	hlt    
  424071:	test   al,0x3
  424073:	je     0x42407a
  424075:	out    0x46,al
  424077:	jecxz  0x424002
  424079:	and    eax,0x1d546810
  42407e:	fstp   st(6)
  424080:	into   
  424081:	mov    ecx,0xfb1706dc
  424086:	inc    ebx
  424087:	repz and DWORD PTR [ebx-0x22bd8bf9],0x258a3b28
  424092:	adc    BYTE PTR [edx+0x35f39e81],ah
  424098:	(bad)  
  424099:	pop    esi
  42409a:	push   es
  42409b:	je     0x4240f1
  42409d:	stc    
  42409e:	add    BYTE PTR [ecx],dh
  4240a0:	or     ah,BYTE PTR [eax+ebx*8]
  4240a3:	ret    0xd236
  4240a6:	test   ah,0xf4
  4240a9:	sub    BYTE PTR [esp+ecx*4],al
  4240ac:	ret    0xdcf5
  4240af:	xchg   esp,eax
  4240b0:	not    al
  4240b2:	call   0xf684:0x8ab2cc7c
  4240b9:	pop    edi
  4240ba:	pop    eax
  4240bb:	pop    es
  4240bc:	lds    ebp,FWORD PTR [ebx*8-0x7ec51e0e]
  4240c3:	add    BYTE PTR [eax],al
  4240c5:	add    BYTE PTR [esi-0x31],bl
  4240c8:	jmp    0xe3c45123
  4240cd:	mov    BYTE PTR [ecx+0x3],cl
  4240d0:	outs   dx,BYTE PTR ds:[esi]
  4240d1:	dec    eax
  4240d2:	jecxz  0x4240f5
  4240d4:	xor    DWORD PTR [esp+edi*4],0xc71800c5
  4240db:	int3   
  4240dc:	jg     0x42414d
  4240de:	iret   
  4240df:	jg     0x424126
  4240e1:	popa   
  4240e2:	ins    DWORD PTR es:[edi],dx
  4240e3:	(bad)  
  4240e4:	je     0x424104
  4240e6:	out    0x85,al
  4240e8:	fadd   DWORD PTR [ecx+0x72]
  4240eb:	push   ebp
  4240ec:	sti    
  4240ed:	dec    esi
  4240ee:	jns    0x424133
  4240f0:	hlt    
  4240f1:	jb     0x42409b
  4240f3:	test   DWORD PTR [ebp-0x1f],ebx
  4240f6:	imul   ecx,ebp,0xffffff86
  4240f9:	mov    esp,0xf14c7a7c
  4240fe:	icebp  
  4240ff:	fisubr WORD PTR [ebp-0x7b2eb995]
  424105:	sub    esp,eax
  424107:	jmp    0x42408f
  424109:	out    dx,eax
  42410a:	repz int 0x52
  42410d:	push   cs
  42410e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42410f:	into   
  424110:	push   eax
  424111:	push   es
  424112:	cmp    eax,0xf0a9121d
  424117:	int    0x36
  424119:	(bad)  
  42411a:	out    dx,al
  42411b:	dec    ebp
  42411c:	(bad)  
  42411d:	fnsave [esi]
  42411f:	add    al,BYTE PTR [ebx]
  424121:	repz mov cl,0x7f
  424124:	aaa    
  424125:	faddp  st(2),st
  424127:	into   
  424128:	call   0x42415c
  42412d:	ins    BYTE PTR es:[edi],dx
  42412e:	sar    bl,1
  424130:	arpl   WORD PTR [edx-0x3bd8a42f],si
  424136:	mov    edi,0x33f0d5be
  42413b:	xchg   ebp,eax
  42413d:	ins    BYTE PTR es:[edi],dx
  42413e:	fisub  DWORD PTR [eax]
  424140:	sbb    ah,BYTE PTR [ecx]
  424142:	sbb    al,0xc0
  424144:	ds je  0x424191
  424147:	or     BYTE PTR [eax+0x32],dh
  42414a:	jecxz  0x4240d5
  42414c:	sub    al,0xc7
  42414e:	push   cs
  42414f:	inc    ebx
  424150:	in     eax,dx
  424151:	stc    
  424152:	mov    bh,cl
  424154:	add    bl,bl
  424156:	or     BYTE PTR [eax],al
  424158:	mov    DWORD PTR [edi],edx
  42415a:	fild   WORD PTR [ebx+0x7505a277]
  424160:	in     al,dx
  424161:	imul   ecx,DWORD PTR [ebp+0x7da276f7],0xc00c4e
  42416b:	dec    edi
  42416c:	call   0x3a20e6
  424171:	push   ss
  424172:	ret    
  424173:	pop    es
  424174:	test   BYTE PTR ds:0xbd000002,cl
  42417a:	cmp    BYTE PTR [eax],cl
  42417c:	mov    edx,DWORD PTR [esp+eax*1+0x62]
  424180:	adc    BYTE PTR [ebp+0xdeca1e0],al
  424186:	mov    al,0x84
  424188:	ror    BYTE PTR [ebp+0x4c],0x89
  42418c:	add    DWORD PTR [edx+0x8],ecx
  42418f:	add    DWORD PTR [esi+0x0],0x0
  424193:	add    BYTE PTR [esi+0x23],al
  424196:	pop    ebp
  424197:	lock cmp ecx,DWORD PTR [edi]
  42419a:	hlt    
  42419b:	mov    ebx,DWORD PTR [eax+ebx*8-0x78]
  42419f:	inc    ebp
  4241a0:	ds test eax,edi
  4241a3:	push   es
  4241a4:	dec    ebp
  4241a5:	or     bh,0x0
  4241a8:	sbb    cl,BYTE PTR [eax]
  4241aa:	add    DWORD PTR [ebx],0xffffff89
  4241ad:	scas   eax,DWORD PTR es:[edi]
  4241ae:	dec    BYTE PTR [esi]
  4241b0:	mov    BYTE PTR [edi+0x0],dl
  4241b3:	add    BYTE PTR [edx],bl
  4241b5:	in     eax,dx
  4241b6:	inc    esp
  4241b7:	cld    
  4241b8:	std    
  4241b9:	mov    BYTE PTR [edi+0x0],bh
  4241bc:	or     cl,BYTE PTR [eax]
  4241be:	pop    es
  4241bf:	mov    bh,0xd1
  4241c1:	push   es
  4241c2:	out    dx,al
  4241c3:	rol    esi,0x3b
  4241c6:	ins    DWORD PTR es:[edi],dx
  4241c7:	cmp    BYTE PTR [ebx-0x35],0x6
  4241cb:	mov    dh,0xa3
  4241cd:	mov    eax,0xa6f31bd9
  4241d2:	and    cl,0xdb
  4241d5:	pusha  
  4241d6:	les    esp,FWORD PTR [eax]
  4241d8:	hlt    
  4241d9:	or     al,0xcc
  4241db:	mov    DWORD PTR [esi],ebp
  4241dd:	jle    0x424161
  4241df:	clc    
  4241e0:	in     eax,0xcb
  4241e2:	xor    eax,0x1c57b37f
  4241e7:	aas    
  4241e8:	stc    
  4241e9:	stos   BYTE PTR es:[edi],al
  4241ea:	dec    ebp
  4241eb:	sti    
  4241ec:	and    al,0xd2
  4241ee:	mov    BYTE PTR [edi],bh
  4241f0:	in     eax,dx
  4241f1:	xor    al,0x4e
  4241f3:	adc    BYTE PTR [esi-0x46],bh
  4241f6:	xlat   BYTE PTR ds:[ebx]
  4241f7:	push   eax
  4241f8:	add    BYTE PTR [eax],al
  4241fa:	add    BYTE PTR [ebx+0x7cfaa4af],bl
  424200:	pusha  
  424201:	xlat   BYTE PTR ds:[ebx]
  424202:	add    edi,esi
  424204:	int    0x8a
  424206:	push   ebp
  424207:	sti    
  424208:	sub    cl,BYTE PTR [eax-0xc]
  42420b:	ret    0x4852
  42420e:	lock ret 0x4fec
  424212:	loopne 0x42427c
  424214:	sub    BYTE PTR [edi],ch
  424216:	sti    
  424217:	(bad)  
  424218:	cmc    
  424219:	mov    DWORD PTR [ebp+0x47],eax
  42421c:	cmc    
  42421d:	inc    esi
  42421e:	std    
  42421f:	cmp    al,0xcc
  424221:	jp     0x4241e3
  424223:	mov    edi,0x1745d6e0
  424228:	fmul   QWORD PTR [ebx-0x8]
  42422b:	imul   ebx,ebp,0x7f
  42422e:	add    bl,dh
  424230:	mov    ch,0x47
  424232:	jle    0x424249
  424234:	mov    ah,0x8d
  424236:	jge    0x424233
  424238:	push   0xc1ae2905
  42423d:	add    eax,0xd80a70d8
  424242:	add    ah,ah
  424244:	pusha  
  424245:	pop    ebx
  424246:	sti    
  424247:	in     al,dx
  424248:	cdq    
  424249:	test   DWORD PTR [ebp-0x21],edi
  42424c:	pop    es
  42424d:	jmp    0xd30c63a3
  424252:	mov    WORD PTR [eax],?
  424254:	add    eax,DWORD PTR [ecx]
  424256:	jmp    0x424226
  424258:	pop    es
  424259:	jmp    0x83cda849
  42425e:	fld    DWORD PTR [eax]
  424260:	add    BYTE PTR [eax],al
  424262:	je     0x424213
  424264:	fs mov ebp,0x4f71f03f
  42426a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42426b:	retf   0xd3f4
  42426e:	or     eax,0xaa6bb607
  424273:	pop    es
  424274:	jmp    0x475dcd7c
  424279:	(bad)  [eax+0x5034136]
  42427f:	leave  
  424280:	inc    edx
  424281:	fld    DWORD PTR [esi]
  424283:	xlat   BYTE PTR ds:[ebx]
  424284:	push   ecx
  424285:	(bad)  [edx-0x37]
  424288:	xor    dl,dl
  42428a:	icebp  
  42428b:	pop    es
  42428c:	fidivr DWORD PTR [edi-0x7e]
  42428f:	pop    es
  424290:	jmp    0x61250d98
  424295:	inc    ebp
  424296:	repz leave 
  424298:	cld    
  424299:	out    0xfd,eax
  42429b:	inc    esi
  42429c:	jmp    0x31ff58c
  4242a1:	fnstenv [ecx+eax*2-0x13]
  4242a5:	mov    WORD PTR [ecx+0x2f3f5ffe],ds
  4242ab:	xchg   cl,dh
  4242ad:	pop    es
  4242ae:	xchg   ebp,eax
  4242af:	pop    esi
  4242b0:	outs   dx,BYTE PTR ds:[esi]
  4242b1:	add    al,0x9c
  4242b3:	into   
  4242b4:	in     eax,dx
  4242b5:	push   ebp
  4242b6:	xchg   edx,eax
  4242b7:	or     eax,0x2a80d82c
  4242bc:	pop    esi
  4242bd:	dec    esp
  4242be:	out    dx,eax
  4242bf:	shr    DWORD PTR [eax+0x906f303],1
  4242c5:	push   eax
  4242c6:	add    BYTE PTR [eax],al
  4242c8:	add    BYTE PTR [edi-0xb4eff7b],ch
  4242ce:	push   esp
  4242cf:	cmp    esi,DWORD PTR [edi-0x1c8bf84f]
  4242d5:	outs   dx,DWORD PTR ds:[esi]
  4242d6:	sti    
  4242d7:	jmp    DWORD PTR [edx+0x2f]
  4242da:	pop    es
  4242db:	jmp    DWORD PTR [eax+0x2ab9ca6a]
  4242e1:	out    dx,eax
  4242e2:	(bad)  
  4242e4:	imul   ebx,DWORD PTR [edx+0x24a984cd],0x7fbafb28
  4242ee:	sti    
  4242ef:	sti    
  4242f0:	xor    BYTE PTR [edi],ch
  4242f2:	pop    es
  4242f3:	push   ebx
  4242f5:	lock nop
  4242f7:	aas    
  4242f8:	jmp    0xfd3d7adc
  4242fd:	loopne 0x4242f3
  4242ff:	aas    
  424300:	jmp    0x2dc10c7c
  424305:	hlt    
  424306:	pop    es
  424307:	add    eax,0x956e9
  42430c:	(bad)  
  42430d:	(bad)  
  424310:	jmp    0x4998:0xeafc4419
  424317:	jge    0x424336
  424319:	in     al,dx
  42431a:	pop    ecx
  42431b:	cwde   
  42431c:	sub    DWORD PTR [edi+ecx*4],0xf32be93f
  424323:	out    dx,eax
  424324:	(bad)  [eax+0x48a4fb06]
  42432a:	add    DWORD PTR [ebp+0x1],0x77000000
  424331:	inc    ebx
  424332:	in     al,dx
  424333:	rol    DWORD PTR [edi],1
  424335:	inc    esi
  424336:	sbb    al,0xf6
  424338:	jb     0x424350
  42433a:	cli    
  42433b:	fidivr WORD PTR [ecx+ebx*1]
  42433e:	rcl    BYTE PTR [edx],0xb2
  424341:	loop   0x42439e
  424343:	repnz xor BYTE PTR [ebx+esi*8],ch
  424347:	add    BYTE PTR [edx+0xd],dl
  42434a:	leave  
  42434b:	ret    0x50e
  42434e:	dec    esi
  42434f:	mov    ebp,DWORD PTR [edx-0x4df79150]
  424355:	repnz cmp dh,0x95
  424359:	mov    al,0x6e
  42435b:	adc    BYTE PTR [edx+0x65fe811a],al
  424361:	mov    al,0x6e
  424363:	sbb    al,0x72
  424365:	and    al,BYTE PTR [ecx+0x6eb075fe]
  42436b:	sub    al,0x62
  42436d:	retf   0xfe80
  424370:	and    eax,0x72306eb0
  424375:	rol    BYTE PTR [eax+0x6eb015fe],cl
  42437b:	xor    al,0x42
  42437d:	cli    
  42437e:	cmp    dh,0x25
  424381:	jl     0x4243f1
  424383:	inc    eax
  424384:	ud1    esi,DWORD PTR [ebp+ecx*1+0x35]
  424389:	stc    
  42438a:	out    0xfb,eax
  42438c:	or     dh,BYTE PTR [ecx-0x4a4da909]
  424392:	cmp    dh,0x0
  424395:	add    BYTE PTR [eax],al
  424397:	adc    eax,0x7cffbb11
  42439c:	enter  0xebe3,0xca
  4243a0:	mov    al,0xf7
  4243a2:	jmp    FWORD PTR [esp+edi*8-0x19]
  4243a6:	jecxz  0x424382
  4243a8:	mov    al,0xf7
  4243aa:	(bad)  
  4243ab:	mov    esp,0xcadbe3d3
  4243b0:	mov    al,0xf7
  4243b2:	ret    
  4243b3:	lea    edi,[ebp-0x8]
  4243b6:	test   DWORD PTR ds:0xa1560e38,edx
  4243bc:	mov    eax,0x3f2f663
  4243c1:	je     0x4243e7
  4243c3:	repz loope 0x424444
  4243c6:	jmp    0xc0fc:0xfbc5c5eb
  4243cd:	inc    edx
  4243ce:	jne    0x4243ce
  4243d0:	out    0x32,eax
  4243d2:	jmp    0xfc17a17b
  4243d7:	ds gs jecxz 0x42445a
  4243db:	xlat   BYTE PTR ds:[ebx]
  4243dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243dd:	xchg   BYTE PTR [ebp-0x15],al
  4243e0:	pop    esp
  4243e1:	jecxz  0x42443f
  4243e3:	and    BYTE PTR [eax],cl
  4243e5:	sub    edi,ebx
  4243e7:	inc    ebx
  4243e8:	loop   0x424372
  4243ea:	je     0x424403
  4243ec:	(bad)  
  4243ed:	out    0xba,eax
  4243ef:	cmp    eax,0xb384d249
  4243f4:	loopne 0x424471
  4243f6:	pushf  
  4243f7:	repnz (bad) 
  4243fa:	add    BYTE PTR cs:[eax],al
  4243fd:	add    BYTE PTR [eax-0x30bb4549],bh
  424403:	sar    edi,1
  424405:	add    BYTE PTR [ebx-0x6f],bh
  424408:	sbb    ecx,DWORD PTR [edi]
  42440a:	fwait
  42440b:	pop    esi
  42440c:	or     eax,0xcf547cfb
  424411:	or     esi,DWORD PTR ds:0xfc0f1ba1
  424417:	dec    edi
  424418:	cmp    eax,DWORD PTR [edi+edi*8]
  42441b:	ins    BYTE PTR es:[edi],dx
  42441c:	cs dec edi
  42441e:	ret    
  42441f:	xchg   edx,edx
  424421:	adc    eax,0x3fd2cb
  424426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424427:	cmp    sp,WORD PTR [edi+eiz*8]
  42442b:	add    eax,0x3d8064
  424430:	sbb    al,0x5c
  424432:	(bad)  
  424434:	add    al,BYTE PTR [ebp+ebp*8-0x3f000022]
  42443b:	ins    BYTE PTR es:[edi],dx
  42443c:	imul   edi,edi,0xd53606c1
  424442:	lahf   
  424443:	and    dh,BYTE PTR ds:0x252287d5
  424449:	aad    0x7f
  42444b:	and    dl,BYTE PTR ds:0xdc4ee6d5
  424451:	inc    ebx
  424452:	repz jge 0x42447a
  424455:	and    BYTE PTR [edi],dl
  424457:	add    ah,BYTE PTR [esi-0x17e890fb]
  42445d:	add    esi,ebx
  42445f:	xchg   ecx,eax
  424460:	sub    al,0xc
  424462:	add    BYTE PTR [eax],al
  424464:	add    BYTE PTR [edi+eax*1+0x69],ch
  424468:	pop    esp
  424469:	jmp    0x424472
  42446b:	push   ebx
  42446c:	rol    BYTE PTR [ecx+0x47],0xe9
  424470:	dec    edi
  424471:	test   BYTE PTR [ebp+esi*4-0x49f8ccb2],0xca
  424479:	jae    0x4244be
  42447b:	int    0x41
  42447d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42447e:	pop    ecx
  42447f:	fisubr DWORD PTR [esi-0x4e]
  424482:	push   eax
  424483:	push   0x6906f3e3
  424488:	add    al,0x72
  42448a:	shr    cl,1
  42448c:	int3   
  42448d:	test   DWORD PTR [edx+0x377830b8],0x3da36bf1
  424497:	test   eax,0xd3b6803
  42449c:	dec    eax
  42449d:	rol    ebp,0xb5
  4244a0:	pop    ds
  4244a1:	mov    bl,0xc5
  4244a3:	cld    
  4244a4:	push   ebx
  4244a5:	inc    BYTE PTR [esi-0x17]
  4244a8:	mov    BYTE PTR [ebx+0x2],al
  4244ab:	push   ss
  4244ac:	add    eax,0x3e97d6f
  4244b1:	repz xor dh,bl
  4244b4:	xchg   BYTE PTR [edi+0x1b3bb0ea],dh
  4244ba:	loop   0x4244bc
  4244bc:	pop    ds
  4244bd:	ds ret 0xe968
  4244c1:	lock push es
  4244c3:	mov    al,ds:0xc38e3e53
  4244c8:	cmp    DWORD PTR [eax],eax
  4244ca:	add    BYTE PTR [eax],al
  4244cc:	ffree  st(1)
  4244ce:	adc    eax,0x61445
  4244d3:	inc    ebx
  4244d4:	stc    
  4244d5:	xchg   edx,eax
  4244d6:	jl     0x4244e5
  4244d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d9:	pop    esi
  4244da:	call   0xfc03e35e
  4244df:	bound  edi,QWORD PTR ds:0xf9e6870f
  4244e5:	pop    esi
  4244e6:	and    BYTE PTR [edi],bl
  4244e8:	add    eax,edx
  4244ea:	jo     0x4244e9
  4244ec:	jne    0x424538
  4244ee:	and    al,0x21
  4244f0:	call   DWORD PTR [ebx+0x56dcc544]
  4244f6:	call   0xfc02f800
  4244fb:	push   0x6c
  4244fd:	adc    al,BYTE PTR [ebp+0x681e3ea9]
  424503:	jmp    0xd3e24bf8
  424508:	mov    edi,0xd30574c1
  42450d:	pop    eax
  42450e:	sti    
  42450f:	cld    
  424510:	or     al,0x1c
  424512:	inc    eax
  424513:	jmp    0xe5667fbf
  424518:	mov    BYTE PTR [edx+0x7b],al
  42451b:	aas    
  42451c:	inc    edi
  42451d:	lea    eax,[ebx]
  42451f:	ss shr dh,0xfa
  424523:	mov    ecx,0xbf4f55fc
  424528:	aas    
  424529:	sbb    eax,DWORD PTR [eax+0x7f06b0f4]
  42452f:	adc    DWORD PTR [eax],eax
  424531:	add    BYTE PTR [eax],al
  424533:	icebp  
  424534:	cmp    ebp,DWORD PTR [esi]
  424536:	mov    edx,0x244a75
  42453b:	push   ds
  42453c:	stc    
  42453d:	mov    WORD PTR [esi+esi*1-0xf],es
  424541:	dec    edi
  424542:	push   0x20000949
  424547:	test   BYTE PTR [edx+0xece2444],al
  42454d:	add    BYTE PTR [eax],al
  42454f:	sbb    al,BYTE PTR [edx+0x5c]
  424552:	and    al,0xe6
  424554:	fst    DWORD PTR ds:0x4907a4
  42455a:	xor    DWORD PTR [edx],0xb
  42455d:	jne    0x424569
  42455f:	pop    ebx
  424560:	push   edi
  424561:	and    al,0x20
  424563:	xchg   edx,eax
  424564:	or     eax,DWORD PTR [eax]
  424566:	add    BYTE PTR [esi],ah
  424568:	push   eax
  424569:	dec    esi
  42456a:	call   edi
  42456c:	push   esp
  42456d:	adc    eax,0x74d9da40
  424572:	and    al,0xb6
  424574:	fst    DWORD PTR ds:0x48c77c
  42457a:	push   DWORD PTR [esi-0x3800e814]
  424580:	push   esp
  424581:	adc    eax,0x44d69a40
  424586:	and    al,0xb9
  424588:	mov    BYTE PTR [esp-0x67],bh
  42458c:	or     al,BYTE PTR [edi]
  42458e:	sbb    BYTE PTR [ecx],0xd9
  424591:	idiv   edi
  424593:	sbb    eax,0x34245f
  424598:	add    BYTE PTR [eax],al
  42459a:	xor    cl,BYTE PTR [edx]
  42459c:	ja     0x42459c
  42459e:	sub    eax,0xf22474d8
  4245a3:	loop   0x42459d
  4245a5:	jle    0x4245c3
  4245a7:	fcom   DWORD PTR [edi+0x5e]
  4245aa:	pop    ecx
  4245ab:	enter  0x8b53,0xe7
  4245af:	cmc    
  4245b0:	mov    ecx,0x74d95a04
  4245b5:	and    al,0xf3
  4245b7:	loope  0x424590
  4245b9:	in     al,0xbd
  4245bb:	adc    ecx,edi
  4245bd:	sti    
  4245be:	mov    edi,0x48e807d1
  4245c3:	inc    esp
  4245c4:	sar    ebx,1
  4245c6:	cdq    
  4245c7:	fnstcw WORD PTR [ebx+esi*2-0x15]
  4245cb:	bound  edx,QWORD PTR [eax+0x24]
  4245ce:	jecxz  0x424615
  4245d0:	(bad)  
  4245d2:	es in  eax,0xce
  4245d5:	mov    DWORD PTR [edi-0x62190fef],esp
  4245db:	inc    edi
  4245dc:	and    BYTE PTR [esi-0x10],ah
  4245df:	cmp    al,BYTE PTR [ebx+0x24]
  4245e2:	adc    ebx,DWORD PTR [esi]
  4245e4:	jnp    0x42462a
  4245e6:	femms  
  4245e8:	aaa    
  4245e9:	call   0xfc13779f
  4245ee:	cmp    al,0x37
  4245f0:	inc    ebx
  4245f1:	and    al,0x1b
  4245f3:	xchg   esi,eax
  4245f4:	pushf  
  4245f5:	jp     0x4245bc
  4245f7:	pushf  
  4245f8:	jp     0x42463e
  4245fa:	pop    ss
  4245fb:	retf   0xf882
  4245fe:	add    BYTE PTR [eax],al
  424600:	add    BYTE PTR [ecx+eax*8-0x3753d0f9],dh
  424607:	ret    0xda72
  42460a:	sub    BYTE PTR [ebx+0x24],al
  42460d:	sti    
  42460e:	bound  eax,QWORD PTR [ebx]
  424610:	mov    eax,0x155805da
  424615:	mov    WORD PTR ds:0xc00b15cf,ds
  42461b:	aas    
  42461c:	add    BYTE PTR [ebx],ah
  42461e:	sub    DWORD PTR [ebx+0x24],eax
  424621:	xlat   BYTE PTR ds:[ebx]
  424622:	dec    esp
  424623:	adc    edi,DWORD PTR [eax-0xf9fa5]
  424629:	sub    BYTE PTR fs:[ebx+0x24],al
  42462d:	pop    ss
  42462e:	ins    DWORD PTR es:[edi],dx
  42462f:	or     bh,al
  424631:	loope  0x424639
  424633:	cmp    bh,BYTE PTR [esi-0x31]
  424636:	jmp    0xd213:0x446fdc00
  42463d:	outs   dx,BYTE PTR ds:[esi]
  42463e:	dec    edx
  42463f:	(bad)
  424642:	xchg   ecx,eax
  424643:	lods   eax,DWORD PTR ds:[esi]
  424644:	daa    
  424645:	or     edx,DWORD PTR [edi+0x6c]
  424648:	inc    edi
  424649:	iret   
  42464a:	cli    
  42464b:	cwde   
  42464c:	cmp    DWORD PTR [ebx],ecx
  42464e:	je     0x424604
  424650:	rcr    BYTE PTR [eax],cl
  424652:	(bad)  
  424653:	loope  0x424662
  424655:	add    al,0x39
  424657:	(bad)  
  424658:	(bad)  [ebx-0x592e2d3d]
  42465e:	(bad)  
  42465f:	mov    ebp,0x1b57a233
  424664:	jnp    0x424666
  424666:	add    BYTE PTR [eax],al
  424668:	lock cmc 
  42466a:	popf   
  42466b:	jnp    0x4246b5
  42466d:	lss    edx,FWORD PTR [ebx-0x9]
  424671:	sar    DWORD PTR [ecx],0xfc
  424674:	int3   
  424675:	or     BYTE PTR [esi],bl
  424677:	ror    eax,1
  424679:	xchg   esp,eax
  42467a:	adc    cl,BYTE PTR [eax]
  42467c:	and    edx,DWORD PTR [eax+0x3ee6d0eb]
  424682:	test   DWORD PTR [ebx-0xd],0x7ed02c8f
  424689:	dec    esp
  42468a:	jge    0x4246c0
  42468c:	inc    ecx
  42468d:	scas   eax,DWORD PTR es:[edi]
  42468e:	int    0xcb
  424690:	cwde   
  424691:	ret    0xa5e
  424694:	ins    BYTE PTR es:[edi],dx
  424695:	push   esp
  424696:	gs jl  0x424688
  424699:	pop    es
  42469a:	and    dl,dh
  42469c:	add    ch,ah
  42469e:	mov    ch,0x34
  4246a0:	and    BYTE PTR [edi],ch
  4246a2:	xchg   esi,eax
  4246a3:	repnz mov dh,0x6
  4246a6:	xchg   esi,eax
  4246a7:	xor    al,0x68
  4246a9:	sbb    al,0x99
  4246ab:	cmc    
  4246ac:	and    al,0x7
  4246ae:	add    BYTE PTR [eax-0x56],ah
  4246b1:	adc    dh,BYTE PTR [edi]
  4246b3:	sub    bh,BYTE PTR [ebx+0x2fe8b00a]
  4246b9:	adc    bl,bh
  4246bb:	xlat   BYTE PTR ds:[ebx]
  4246bc:	sub    BYTE PTR [edi-0xedde883],ch
  4246c2:	mov    edi,0xbfd007af
  4246c7:	lahf   
  4246c8:	scas   eax,DWORD PTR es:[edi]
  4246c9:	mov    dh,0x7f
  4246cb:	aas    
  4246cc:	add    BYTE PTR [eax],al
  4246ce:	add    bl,bl
  4246d0:	sar    bl,0xe9
  4246d3:	lock cmp esp,DWORD PTR [eax]
  4246d6:	xor    eax,0x28e9000e
  4246dc:	jae    0x42475b
  4246de:	fbld   TBYTE PTR [ebx]
  4246e0:	nop
  4246e1:	or     BYTE PTR ds:0x640006f5,0x30
  4246e8:	cmp    al,0xc
  4246ea:	push   ebx
  4246eb:	out    dx,eax
  4246ec:	mov    esp,0x1e90515
  4246f1:	add    bl,bh
  4246f3:	mov    al,0x5c
  4246f5:	mov    edi,0xbf5cf179
  4246fa:	aas    
  4246fb:	mov    ds:0x47ed243a,al
  424700:	mov    bh,0xfb
  424702:	sbb    eax,0x81e8130b
  424707:	mov    esp,0xb0bafbbc
  42470c:	lds    eax,FWORD PTR [edx]
  42470e:	xchg   ebp,eax
  42470f:	es inc edi
  424711:	add    BYTE PTR [eax+0x2a],ah
  424714:	sbb    ecx,DWORD PTR [ecx+0x68467]
  42471a:	jmp    0xeb66cc28
  42471f:	lock push es
  424721:	mov    DWORD PTR [edi-0x28],ebp
  424724:	sar    bl,0xe9
  424727:	test   esp,0xbe18005a
  42472d:	sti    
  42472e:	push   ebp
  42472f:	loope  0x424705
  424731:	call   0x424749
  424736:	dec    edx
  424737:	add    eax,0xe98ef600
  42473c:	pop    es
  42473d:	add    DWORD PTR [esi+0xf],ebp
  424740:	dec    esi
  424741:	call   0x3897a6
  424746:	ror    edi,1
  424748:	push   esi
  424749:	ret    0x54e
  42474c:	div    DWORD PTR [esi+0xb3e]
  424752:	int    0xf
  424754:	aam    0x8a
  424756:	dec    edx
  424757:	add    eax,0xd78753e8
  42475c:	test   DWORD PTR [ebx+0x15d2e344],0xf64ed125
  424766:	dec    ecx
  424767:	or     esi,DWORD PTR [eax+edx*1-0x50]
  42476b:	mov    esi,0xbd6878c
  424770:	add    BYTE PTR [eax],al
  424772:	adc    BYTE PTR [ecx+esi*8],bh
  424775:	call   0x39f6bc
  42477a:	pushf  
  42477b:	(bad)  
  42477c:	cli    
  42477d:	jae    0x424721
  42477f:	cmp    eax,0x8fc22444
  424784:	shl    BYTE PTR [esp+edx*8-0x7b],0xc0
  424789:	add    al,0xfa
  42478b:	test   DWORD PTR [edi],edi
  42478d:	adc    al,0x82
  42478f:	inc    esi
  424790:	in     al,0xff
  424792:	and    eax,0x1ee80adc
  424797:	mov    al,ds:0xfff6
  42479c:	add    al,dh
  42479e:	mov    esi,0x87b0f082
  4247a3:	aas    
  4247a4:	adc    al,0x22
  4247a6:	pop    esp
  4247a7:	in     al,0xff
  4247a9:	repz pop eax
  4247ab:	jge    0x424748
  4247ad:	retf   
  4247ae:	stos   DWORD PTR es:[edi],eax
  4247af:	(bad)  
  4247b0:	dec    ebp
  4247b2:	jmp    0x4247bb
  4247b4:	add    BYTE PTR [ebp+0x1774ca98],bh
  4247ba:	fidiv  WORD PTR [esi-0xf]
  4247bd:	push   esp
  4247be:	jp     0x4247e3
  4247c0:	adc    BYTE PTR [ebx+0x27],bl
  4247c3:	in     eax,dx
  4247c4:	cli    
  4247c5:	inc    esp
  4247c6:	xor    eax,0x983c85cc
  4247cb:	out    0xf1,al
  4247cd:	ins    DWORD PTR es:[edi],dx
  4247ce:	mov    BYTE PTR [ecx],0x0
  4247d1:	rep stos DWORD PTR es:[edi],eax
  4247d3:	push   ebx
  4247d4:	push   cs
  4247d5:	outs   dx,BYTE PTR ds:[esi]
  4247d6:	rcl    DWORD PTR [ebx+0xa],0x68
  4247da:	push   0x23
  4247dc:	or     al,0x66
  4247de:	push   0xd62486f3
  4247e3:	inc    ebx
  4247e4:	in     eax,0x4
  4247e6:	loope  0x42485e
  4247e8:	ret    
  4247e9:	pushf  
  4247ea:	idiv   DWORD PTR [ebp+0x31fcf308]
  4247f0:	sti    
  4247f1:	addr16 adc bh,al
  4247f4:	xchg   dl,ah
  4247f6:	adc    BYTE PTR [ebx+0x24],0x7
  4247fa:	jns    0x42484f
  4247fc:	and    al,0xff
  4247fe:	vunpckhps ymm0,ymm2,YMMWORD PTR [eax]
  424802:	add    BYTE PTR [eax],al
  424804:	int3   
  424805:	push   0xc46ed876
  42480a:	dec    ebp
  42480b:	xor    eax,0xfe172fc5
  424810:	mov    ah,0xad
  424812:	add    DWORD PTR [edi+ebx*8+0x20],esi
  424816:	cmp    DWORD PTR [edx-0x5429],0x52f36f70
  424820:	push   0x90d9d767
  424825:	push   es
  424826:	(bad)  
  424827:	into   
  424828:	outs   dx,BYTE PTR ds:[esi]
  424829:	fcmovnbe st,st(5)
  42482b:	add    BYTE PTR [edx+edx*2+0xd],dh
  42482f:	clc    
  424830:	ins    DWORD PTR es:[edi],dx
  424831:	rcr    DWORD PTR [esi-0x3b],cl
  424834:	pop    ebx
  424835:	mov    eax,0x5768ce4d
  42483a:	outs   dx,BYTE PTR ds:[esi]
  42483b:	lds    ecx,FWORD PTR [ebx+0x67]
  42483e:	inc    esi
  42483f:	into   
  424840:	pop    eax
  424841:	pop    edi
  424842:	mov    edi,DWORD PTR [edx-0x74]
  424845:	pop    ebx
  424846:	daa    
  424847:	inc    DWORD PTR [edx+ebx*2+0x6e]
  42484b:	fbld   TBYTE PTR [edx-0x418544ab]
  424851:	adc    dh,BYTE PTR [edx+0x6ab82a7a]
  424857:	sbb    esp,DWORD PTR ds:0x6a04e9bf
  42485d:	inc    ecx
  42485e:	cmc    
  42485f:	std    
  424860:	jo     0x4247f4
  424862:	jmp    0xdbcc3b6a
  424867:	std    
  424868:	add    BYTE PTR [eax],al
  42486a:	add    BYTE PTR [edx-0x76],bh
  42486d:	jmp    0xaace3b75
  424872:	fcom   QWORD PTR [ebp+0x77cdcac0]
  424878:	(bad)  
  424879:	cmp    al,0x7
  42487b:	fs iret 
  42487d:	mov    edx,0x628c5ed9
  424882:	and    ch,dl
  424884:	mov    esi,0x1b707ee9
  424889:	call   0x709a3b91
  42488e:	aas    
  42488f:	mov    ebx,0xcb002c90
  424894:	sub    eax,DWORD PTR [esi+0x4292a8cd]
  42489a:	sub    BYTE PTR [ebp-0xc741642],ah
  4248a0:	push   cs
  4248a1:	add    cl,ch
  4248a3:	lock cmc 
  4248a5:	out    dx,eax
  4248a6:	fmulp  st(5),st
  4248a8:	mov    dh,0x87
  4248aa:	lods   al,BYTE PTR ds:[esi]
  4248ab:	test   BYTE PTR [ebp-0x79],cl
  4248ae:	mov    esp,0x4abfa678
  4248b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248b4:	ret    0xcc87
  4248b7:	cmp    al,0x59
  4248b9:	sti    
  4248ba:	jle    0x4248d7
  4248bc:	mov    ebp,0xd1dbe9fb
  4248c1:	call   0xfc03911e
  4248c6:	pusha  
  4248c7:	mov    ah,0xe
  4248c9:	aaa    
  4248ca:	das    
  4248cb:	stos   DWORD PTR es:[edi],eax
  4248cc:	sbb    al,0xfb
  4248ce:	xchg   esp,eax
  4248cf:	add    BYTE PTR [eax],al
  4248d1:	add    BYTE PTR [eax],ch
  4248d3:	xchg   BYTE PTR [ebp-0x1b],al
  4248d6:	sbb    BYTE PTR [ebx],dl
  4248d8:	fisttp WORD PTR [esi]
  4248da:	ds ds jge 0x4248cf
  4248de:	lock inc eax
  4248e0:	adc    DWORD PTR [edx+0x6e],esi
  4248e3:	jecxz  0x4248e2
  4248e5:	call   0xe1b7ceda
  4248ea:	mov    eax,DWORD PTR [ebx+0xc]
  4248ed:	ror    DWORD PTR [ecx+0x7bdefbdd],1
  4248f3:	inc    ebx
  4248f4:	or     BYTE PTR [edx],dh
  4248f6:	sbb    dl,BYTE PTR [eax]
  4248f8:	push   edx
  4248f9:	into   
  4248fa:	inc    ebp
  4248fb:	psubsb mm4,QWORD PTR [eax]
  4248fe:	fadd   st,st(0)
  424900:	sti    
  424901:	push   ds
  424902:	or     eax,0xf0e1bed0
  424907:	push   ebx
  424908:	xchg   DWORD PTR [ebp+0x3f0caa73],edi
  42490e:	dec    edx
  42490f:	xor    al,0x10
  424911:	ss cmp al,al
  424914:	repnz outs dx,BYTE PTR ds:[esi]
  424916:	fdivr  DWORD PTR [ebx+edi*8+0x7d8ff1e9]
  42491d:	add    BYTE PTR [esi],ah
  42491f:	push   esi
  424920:	pop    edi
  424921:	test   DWORD PTR [esp+ecx*2],esp
  424924:	pop    ebx
  424925:	mov    eax,DWORD PTR [ebp-0x1f]
  424928:	stos   BYTE PTR es:[edi],al
  424929:	std    
  42492a:	sbb    eax,0xa6c084cb
  42492f:	and    eax,0x98200b8
  424934:	add    BYTE PTR [ebx],bh
  424936:	add    BYTE PTR [eax],al
  424938:	add    BYTE PTR [edx],bl
  42493a:	cmp    eax,0x9582c87
  42493f:	add    BYTE PTR [edi],cl
  424941:	lahf   
  424942:	(bad)  [ebx-0x73]
  424945:	aad    0xad
  424947:	add    BYTE PTR [eax],al
  424949:	dec    edx
  42494a:	clc    
  42494b:	mov    BYTE PTR [ebp+0x1e],cl
  42494e:	inc    ecx
  42494f:	inc    ebp
  424950:	adc    dl,ah
  424952:	xchg   ebx,eax
  424953:	(bad)  
  424955:	fnstsw WORD PTR [esi]
  424957:	pop    ebp
  424958:	or     al,0xcf
  42495a:	and    BYTE PTR [edx+eax*1],0x1a
  42495e:	or     DWORD PTR [ebx-0x7bb5cc8],eax
  424964:	mov    edx,DWORD PTR [edi-0x47]
  424967:	jecxz  0x42497c
  424969:	jmp    0x88424138
  42496e:	int    0x83
  424970:	inc    ebp
  424971:	or     ah,cl
  424973:	jl     0x424957
  424975:	sbb    eax,0x224583d1
  42497a:	cmp    eax,0xd024f44d
  42497f:	xor    bh,bh
  424981:	daa    
  424982:	mov    ebx,0xd1d365e3
  424987:	neg    DWORD PTR [ebx-0x4f]
  42498a:	mov    edi,0xbf07ff51
  42498f:	div    BYTE PTR [ebp-0x3e]
  424992:	loopne 0x4249e2
  424994:	sbb    DWORD PTR [ebp-0x30],ebx
  424997:	push   edi
  424998:	pop    esi
  424999:	repz retw 0xc
  42499e:	add    BYTE PTR [eax],al
  4249a0:	repz bnd jp 0x424990
  4249a4:	jo     0x424938
  4249a6:	clc    
  4249a7:	xchg   BYTE PTR [edx-0x4a],al
  4249aa:	xor    al,BYTE PTR [edi-0x78d0e406]
  4249b0:	mov    ebx,ebp
  4249b2:	xchg   ecx,eax
  4249b3:	inc    ebx
  4249b4:	retf   
  4249b5:	cmp    BYTE PTR [edi+0x34],cl
  4249b8:	enter  0xf700,0xaa
  4249bc:	mov    ds:0x18bf96a5,eax
  4249c1:	pusha  
  4249c2:	jge    0x424a39
  4249c4:	cmp    DWORD PTR [di+0x4],edx
  4249c8:	push   0x73
  4249ca:	retf   
  4249cb:	or     eax,DWORD PTR [ebp+edi*2-0x4ea300f5]
  4249d2:	dec    esi
  4249d3:	sbb    BYTE PTR [ebx+0x63],dh
  4249d6:	idiv   edi
  4249d8:	imul   esi,DWORD PTR [ebx-0x39],0x74
  4249dc:	jmp    0x424a06
  4249de:	aas    
  4249df:	and    BYTE PTR [edx+0x63],bh
  4249e2:	mul    esi
  4249e4:	in     eax,dx
  4249e5:	ss push ecx
  4249e7:	or     BYTE PTR [eax+0x35],ch
  4249ea:	pop    ds
  4249eb:	xchg   DWORD PTR [edx+0x75d1aa1],edi
  4249f1:	fst    QWORD PTR [esi+0x28b0bf5b]
  4249f7:	or     ah,bh
  4249f9:	mov    dl,0xbb
  4249fb:	adc    BYTE PTR [ebx+0x2b437dad],dh
  424a01:	or     al,BYTE PTR ds:0x75
  424a07:	adc    BYTE PTR [ecx],bh
  424a09:	inc    eax
  424a0a:	or     al,cl
  424a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a0d:	jp     0x424a5c
  424a0f:	(bad)  [edx]
  424a11:	add    ecx,DWORD PTR [eax]
  424a13:	fsub   DWORD PTR [ebx+0x67b087d]
  424a19:	repz inc ecx
  424a1b:	xor    eax,DWORD PTR [eax]
  424a1d:	mov    ds:0x1c07c155,al
  424a22:	enter  0x42ac,0x8d
  424a26:	push   cs
  424a27:	cmp    BYTE PTR fs:[ebp-0x1904b822],cl
  424a2e:	push   eax
  424a2f:	retf   
  424a30:	(bad)  
  424a31:	sub    al,0xfc
  424a33:	xchg   ebp,eax
  424a34:	sbb    DWORD PTR [esi+0x38],ebx
  424a37:	mov    eax,DWORD PTR [edi]
  424a39:	xor    esi,ebx
  424a3b:	out    dx,eax
  424a3c:	and    al,0x6e
  424a3e:	repz adc cl,BYTE PTR [esi+0x83186fb]
  424a45:	retw   
  424a47:	add    BYTE PTR gs:[eax],ch
  424a4a:	push   ebp
  424a4b:	arpl   WORD PTR [edi],ax
  424a4d:	mov    ah,0xc7
  424a4f:	push   esp
  424a50:	inc    edx
  424a51:	xor    eax,0xa388c0e
  424a56:	ficomp WORD PTR [ebx]
  424a58:	sti    
  424a59:	in     al,dx
  424a5a:	push   eax
  424a5b:	pop    ss
  424a5c:	nop
  424a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a5e:	sti    
  424a5f:	dec    ebp
  424a60:	pop    ds
  424a61:	pop    esi
  424a62:	cmp    BYTE PTR [ebx],ch
  424a64:	pop    es
  424a65:	and    esi,ebx
  424a67:	in     eax,dx
  424a68:	(bad)  
  424a69:	fnstcw WORD PTR [eax+eax*1+0x0]
  424a6d:	add    BYTE PTR [ecx],al
  424a6f:	mov    BYTE PTR [ebx],ah
  424a71:	call   DWORD PTR [ebp+0x320eedc6]
  424a77:	cmp    bh,dh
  424a79:	add    eax,0x3ee6ba7e
  424a7e:	(bad)  
  424a7f:	(bad)  
  424a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a81:	push   esi
  424a82:	adc    bl,BYTE PTR [ebx+0x33]
  424a85:	sub    eax,0x3e5c5ba
  424a8a:	ds mov ss,ebp
  424a8d:	or     edi,0x67
  424a90:	jmp    0x983d98
  424a95:	pop    ds
  424a96:	add    bh,BYTE PTR [esi-0x40b8228b]
  424a9c:	call   0xfc00c77b
  424aa1:	out    dx,al
  424aa2:	arpl   di,ax
  424aa4:	mov    DWORD PTR [ebx+eax*8],ebp
  424aa7:	outs   dx,DWORD PTR ds:[esi]
  424aa8:	add    DWORD PTR ds:0x900176f2,edx
  424aae:	sar    DWORD PTR [ecx-0x2e001605],cl
  424ab4:	bound  esi,QWORD PTR [edx-0x59f9cb49]
  424aba:	les    esi,FWORD PTR [edx+0x6f0e8fe]
  424ac0:	xchg   DWORD PTR [esp+eiz*4-0x4306a301],esp
  424ac7:	or     eax,0x1b4eba8
  424acc:	and    eax,0x72a44
  424ad1:	push   0x0
  424ad3:	add    BYTE PTR [eax],al
  424ad5:	xchg   edi,eax
  424ad6:	jns    0x85ce8788
  424adc:	leave  
  424add:	cmp    edi,DWORD PTR [esi+0x342bb9fb]
  424ae3:	or     al,0x70
  424ae5:	or     al,0xab
  424ae7:	mov    DWORD PTR [eax+eax*2-0x57fea270],esi
  424aee:	pop    ebx
  424aef:	in     al,0x2e
  424af1:	pushf  
  424af2:	es sti 
  424af4:	(bad)  
  424af5:	sub    edi,ebx
  424af7:	(bad)  
  424af8:	call   0xb15808ed
  424afd:	adc    al,0xfa
  424aff:	jmp    FWORD PTR [ebx+0x30]
  424b02:	xor    al,0x3
  424b04:	sbb    ebp,DWORD PTR [edi]
  424b06:	mov    al,0xca
  424b08:	jmp    0x424afa
  424b0a:	push   es
  424b0b:	xchg   DWORD PTR [edi+edi*8],edx
  424b0e:	adc    al,BYTE PTR [eax+0x0]
  424b11:	retf   0x8cf6
  424b14:	test   DWORD PTR [esi],ebp
  424b16:	shl    bh,1
  424b18:	(bad)  
  424b19:	jmp    0xcecf:0xeac44531
  424b20:	test   DWORD PTR [edx+0x42c294be],ecx
  424b26:	jmp    0x49ab861c
  424b2b:	sbb    ecx,DWORD PTR [ebx-0x7a7cf8fb]
  424b31:	add    dl,al
  424b33:	idiv   edi
  424b35:	mov    cl,0xc4
  424b37:	jge    0x424b3e
  424b39:	add    BYTE PTR [eax],al
  424b3b:	add    BYTE PTR [ecx+0xa4589c4],dh
  424b41:	cmp    eax,DWORD PTR [edi]
  424b43:	mov    ecx,DWORD PTR [edi]
  424b45:	pop    edx
  424b46:	idiv   edi
  424b48:	adc    eax,0x5f7dc10b
  424b4d:	sbb    al,cl
  424b4f:	mov    DWORD PTR [edi+0x1e4583d1],ecx
  424b55:	and    eax,0x2
  424b58:	jecxz  0x424b52
  424b5a:	mov    ebx,0x45d69674
  424b5f:	test   BYTE PTR [edx+0x5],bl
  424b62:	add    BYTE PTR [eax],ah
  424b64:	pop    esi
  424b65:	mov    eax,0xda395d83
  424b6a:	inc    ecx
  424b6b:	push   edi
  424b6c:	xchg   edi,eax
  424b6d:	cmp    BYTE PTR [edi+edi*8-0xb],dh
  424b71:	into   
  424b72:	push   eax
  424b73:	lea    ecx,[edi+0x69]
  424b76:	push   eax
  424b77:	(bad)  
  424b78:	cld    
  424b79:	cmp    al,al
  424b7b:	imul   edi,eax
  424b7e:	or     bh,BYTE PTR [eax]
  424b80:	ja     0x424b34
  424b82:	outs   dx,DWORD PTR ds:[esi]
  424b83:	sub    BYTE PTR [ecx-0x7074fc0f],al
  424b89:	dec    edx
  424b8a:	idiv   edi
  424b8c:	repz rol BYTE PTR [edi],1
  424b8f:	shl    DWORD PTR [esi-0x5d],0x16
  424b93:	shr    DWORD PTR [edx-0x15],0xdf
  424b97:	xchg   esp,esp
  424b99:	xor    al,0x81
  424b9b:	je     0x424b69
  424b9d:	jno    0x424b62
  424b9f:	aaa    
  424ba0:	add    BYTE PTR [eax],al
  424ba2:	add    BYTE PTR [edx-0x4dd90a15],dh
  424ba8:	aaa    
  424ba9:	inc    ecx
  424baa:	call   0x55b9f977
  424baf:	add    dh,dl
  424bb1:	sub    dh,dh
  424bb3:	push   ds
  424bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bb5:	pop    es
  424bb6:	pop    ebp
  424bb7:	add    BYTE PTR [ecx+0x3995f87b],dh
  424bbd:	ret    
  424bbe:	dec    edi
  424bbf:	mov    ebx,ds
  424bc1:	xlat   BYTE PTR ds:[ebx]
  424bc2:	adc    al,0x33
  424bc4:	scas   al,BYTE PTR es:[edi]
  424bc5:	jbe    0x424bbf
  424bc7:	mov    eax,0xb683f324
  424bcc:	pop    eax
  424bcd:	ret    
  424bce:	sti    
  424bcf:	les    edx,FWORD PTR [eax-0xf]
  424bd2:	scas   eax,DWORD PTR es:[edi]
  424bd3:	add    ebp,DWORD PTR [esi-0x1]
  424bd6:	push   edx
  424bd7:	shl    BYTE PTR [esp+edx*8],0xfb
  424bdb:	(bad)  
  424bdc:	ins    DWORD PTR es:[edi],dx
  424bdd:	lock aas 
  424bdf:	repz mov ah,0xce
  424be2:	or     ebp,DWORD PTR [edi+0x2]
  424be5:	ret    
  424be6:	sti    
  424be7:	cmp    al,0x35
  424be9:	dec    ecx
  424bea:	or     BYTE PTR [ecx+edx*4],dh
  424bed:	jecxz  0x424c40
  424bef:	sub    al,0xbb
  424bf1:	fist   WORD PTR [eax]
  424bf3:	mov    bl,0xad
  424bf5:	jl     0x424c3c
  424bf7:	xor    eax,ebp
  424bf9:	mov    esi,0xc28fe775
  424bfe:	adc    eax,0x3fde27
  424c03:	sbb    ah,BYTE PTR [edx+0xfbc2]
  424c09:	add    ah,bh
  424c0b:	push   es
  424c0c:	stos   DWORD PTR es:[edi],eax
  424c0d:	inc    eax
  424c0e:	cld    
  424c0f:	add    eax,0x7b4e0d43
  424c14:	loop   0x424c95
  424c16:	bound  eax,QWORD PTR [esi]
  424c18:	jmp    0xf583c020
  424c1d:	jl     0x424c4d
  424c1f:	outs   dx,BYTE PTR ds:[si]
  424c21:	inc    eax
  424c22:	scas   eax,DWORD PTR es:[edi]
  424c23:	jmp    0x424c50
  424c25:	mov    al,0x7a
  424c27:	xor    DWORD PTR [ebp+0x6e77367c],eax
  424c2d:	inc    eax
  424c2e:	shr    ebx,cl
  424c30:	and    ebp,DWORD PTR [eax+esi*4-0xcfbaebf]
  424c37:	push   es
  424c38:	jmp    0x74b582b9
  424c3d:	inc    eax
  424c3e:	ja     0x424c96
  424c40:	jp     0x424c52
  424c42:	das    
  424c43:	jg     0x424c6b
  424c45:	add    al,0x7a
  424c47:	pop    ecx
  424c48:	inc    ecx
  424c49:	jl     0x424c69
  424c4b:	imul   esp,DWORD PTR [edx-0x10],0x8
  424c4f:	push   ss
  424c50:	test   eax,0x4f397303
  424c55:	add    al,0x6c
  424c57:	stc    
  424c58:	sub    al,0xf2
  424c5a:	sbb    al,0x7
  424c5c:	mov    esp,0x25416648
  424c61:	xor    edi,DWORD PTR [esi+0x41]
  424c64:	sbb    eax,0xfd114833
  424c69:	out    dx,eax
  424c6a:	cld    
  424c6b:	push   es
  424c6c:	ins    BYTE PTR es:[edi],dx
  424c6d:	ret    
  424c6e:	add    BYTE PTR [eax],al
  424c70:	add    BYTE PTR [esi+0x6c6b32b],bh
  424c76:	retf   
  424c77:	stc    
  424c78:	inc    ebx
  424c79:	repz lea esp,[edi+ecx*8+0x501559da]
  424c81:	out    dx,al
  424c82:	std    
  424c83:	fwait
  424c84:	rol    DWORD PTR [edi+0x2d9a0008],cl
  424c8a:	xor    eax,esi
  424c8c:	out    dx,al
  424c8d:	lods   al,BYTE PTR ds:[esi]
  424c8e:	stos   BYTE PTR es:[edi],al
  424c8f:	push   edx
  424c90:	out    0x4,al
  424c92:	ja     0x424ca4
  424c94:	sub    edi,esi
  424c96:	lea    eax,[ebp-0x1f]
  424c99:	and    eax,DWORD PTR [ebp+ecx*2-0x2e2405b]
  424ca0:	(bad)  
  424ca1:	scas   al,BYTE PTR es:[edi]
  424ca2:	inc    esi
  424ca3:	callw  0xd8cf
  424ca7:	add    cl,ch
  424ca9:	lock mov cl,0x75
  424cac:	fnstsw WORD PTR [eax]
  424cae:	push   esp
  424caf:	pushf  
  424cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cb1:	xchg   bh,ch
  424cb3:	pop    esp
  424cb4:	jge    0x424cf2
  424cb6:	sbb    BYTE PTR [esi-0x15],ah
  424cb9:	(bad)  
  424cba:	push   ds
  424cbb:	adc    ebp,edx
  424cbd:	lock push es
  424cbf:	sti    
  424cc0:	cld    
  424cc1:	pushf  
  424cc2:	mov    cl,0x15
  424cc4:	inc    ebp
  424cc5:	xor    esi,0xffffffff
  424cc8:	popa   
  424cc9:	(bad)  
  424cca:	(bad)  
  424ccb:	gs call 0x520690d6
  424cd1:	xchg   esi,eax
  424cd2:	mov    bl,0xfb
  424cd4:	pop    esi
  424cd5:	add    BYTE PTR [eax],al
  424cd7:	add    BYTE PTR [esi],dh
  424cd9:	cmp    al,0xf4
  424cdb:	mov    edi,0xf9d01c2f
  424ce0:	mov    al,0x6
  424ce2:	add    ah,0x63
  424ce5:	pop    es
  424ce6:	or     esp,DWORD PTR [esi+ebx*8+0x6]
  424cea:	add    cl,ch
  424cec:	stc    
  424ced:	push   ebx
  424cee:	call   0x5dd085a7
  424cf3:	cli    
  424cf4:	jmp    0x2cd8314c
  424cf9:	enter  0xfa45,0xf1
  424cfd:	pop    eax
  424cfe:	sti    
  424cff:	hlt    
  424d00:	fs pop ss
  424d02:	inc    eax
  424d03:	add    BYTE PTR [edx],cl
  424d05:	xor    DWORD PTR [ebp-0xc],eax
  424d08:	xor    ch,ch
  424d0a:	or     dh,BYTE PTR [esp+ecx*1-0x9]
  424d0e:	div    BYTE PTR [ebp-0xa]
  424d11:	retf   
  424d12:	jne    0x424cfc
  424d14:	mov    ah,0xcb
  424d16:	adc    eax,0x49eac0
  424d1b:	mov    edx,DWORD PTR [edi]
  424d1d:	mov    bl,0x4a
  424d1f:	(bad)  
  424d20:	push   DWORD PTR [esi-0x18]
  424d23:	cdq    
  424d24:	scas   al,BYTE PTR es:[edi]
  424d25:	retf   0x53f7
  424d28:	in     al,0x50
  424d2a:	adc    al,0xff
  424d2c:	pop    es
  424d2d:	scas   eax,DWORD PTR es:[edi]
  424d2e:	not    bh
  424d30:	lea    eax,[esp+esi*8-0x9]
  424d34:	mov    dl,0x9e
  424d36:	mov    ebx,0x4531e440
  424d3b:	mov    eax,0x7d000000
  424d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d41:	retf   
  424d42:	adc    dl,cl
  424d44:	or     bh,BYTE PTR [eax]
  424d46:	pop    ebp
  424d47:	mov    ecx,0xd530645
  424d4c:	inc    ebp
  424d4d:	in     al,0xff
  424d4f:	xchg   ecx,edx
  424d51:	dec    esi
  424d52:	jmp    DWORD PTR [edi-0x75bfef37]
  424d58:	test   BYTE PTR [edx+0x6a],0x5d
  424d5c:	retf   0xc75
  424d5f:	shr    ah,cl
  424d61:	fwait
  424d62:	jmp    DWORD PTR ds:0x979c5d02
  424d68:	mov    eax,0x51640465
  424d6d:	lsl    ebx,WORD PTR [edx+0x9]
  424d71:	div    DWORD PTR [ebp+0x1e]
  424d74:	retf   0xa415
  424d77:	ss dec ecx
  424d79:	add    BYTE PTR [ebx+0x165b157],cl
  424d7f:	repz sub dh,BYTE PTR [edx]
  424d82:	aam    0xb
  424d84:	ret    
  424d85:	ret    
  424d86:	sti    
  424d87:	adc    al,0x90
  424d89:	les    esi,FWORD PTR ds:0x4047af
  424d8f:	add    al,0xd2
  424d91:	push   ebx
  424d92:	adc    DWORD PTR [ebx-0x2bd2761],esi
  424d98:	loope  0x424d51
  424d9a:	add    al,0x67
  424d9c:	dec    ecx
  424d9d:	std    
  424d9e:	pop    esp
  424d9f:	xlat   BYTE PTR ds:[ebx]
  424da0:	push   ebx
  424da1:	or     DWORD PTR [ecx],edi
  424da3:	add    BYTE PTR [eax],al
  424da5:	add    BYTE PTR [esi],bh
  424da7:	into   
  424da8:	cmp    BYTE PTR [edx],cl
  424daa:	inc    eax
  424dab:	int    0x39
  424dad:	lock int3 
  424daf:	sti    
  424db0:	scas   eax,DWORD PTR es:[edi]
  424db1:	push   edx
  424db2:	(bad)  
  424db3:	sar    DWORD PTR [edi+0x529e3310],cl
  424db9:	lea    esp,[esi]
  424dbb:	bound  ecx,QWORD PTR [ebx-0x4455643d]
  424dc1:	sti    
  424dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dc3:	or     BYTE PTR [esi],cl
  424dc5:	push   edx
  424dc6:	or     edi,DWORD PTR [ebp-0x730cfffe]
  424dcc:	cmp    DWORD PTR [esp+ecx*4],ecx
  424dcf:	(bad)  [ebx+0x14]
  424dd2:	xor    ebx,DWORD PTR [esi+0x136e012d]
  424dd8:	enter  0xac87,0x56
  424ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ddd:	imul   DWORD PTR [ebp+edx*2-0x41]
  424de1:	jne    0x424e16
  424de3:	je     0x424da3
  424de5:	adc    eax,0x3fae53
  424dea:	mov    ebp,0xe3d4194c
  424def:	pop    ebp
  424df0:	inc    DWORD PTR [ebp+0x5a5ef8ae]
  424df6:	cwde   
  424df7:	out    0xc1,al
  424df9:	or     al,0xf3
  424dfb:	push   es
  424dfc:	sbb    ecx,DWORD PTR [ecx+0x27]
  424dff:	call   DWORD PTR [edx+eiz*8+0x390551ea]
  424e06:	imul   ch
  424e08:	stos   DWORD PTR es:[edi],eax
  424e09:	mov    bl,0x0
  424e0b:	add    BYTE PTR [eax],al
  424e0d:	lahf   
  424e0e:	add    al,0x96
  424e10:	ret    0xb686
  424e13:	cli    
  424e14:	cmp    BYTE PTR [edi],dl
  424e16:	pop    ebp
  424e17:	repnz sbb BYTE PTR [ebx],dh
  424e1a:	pop    ss
  424e1b:	test   eax,0x3481a403
  424e20:	enter  0xcb74,0xd1
  424e24:	data16 fdiv QWORD PTR [ebx-0x4bbea92e]
  424e2b:	push   esp
  424e2c:	adc    al,bl
  424e2e:	sbb    DWORD PTR [ecx],edx
  424e30:	sbb    BYTE PTR [ebx],dh
  424e32:	pop    es
  424e33:	fs ret 
  424e35:	ds popaw 
  424e38:	pusha  
  424e39:	les    ebx,FWORD PTR [edi-0x1911467f]
  424e3f:	push   esp
  424e40:	inc    esi
  424e41:	repz or dh,BYTE PTR [esi]
  424e44:	pop    DWORD PTR [edi-0x15]
  424e47:	loopne 0x424ea2
  424e49:	inc    eax
  424e4a:	or     BYTE PTR ds:0x333b00e8,0xac
  424e51:	daa    
  424e52:	mov    bh,BYTE PTR [ebx-0x3e]
  424e55:	outs   dx,DWORD PTR ds:[esi]
  424e56:	(bad)  
  424e57:	std    
  424e58:	dec    eax
  424e59:	jbe    0x424e0e
  424e5b:	cmc    
  424e5c:	inc    esp
  424e5d:	js     0x424e58
  424e5f:	les    edi,FWORD PTR [ebx+0x2c]
  424e62:	pop    es
  424e63:	pop    edx
  424e64:	sbb    bl,bl
  424e66:	adc    eax,0xb67403a9
  424e6b:	fs mov ecx,0x61fde3df
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    bh,dh
  424e75:	cmp    DWORD PTR [edi],ecx
  424e77:	cs mov bl,0x5b
  424e7a:	add    BYTE PTR [ecx+0xe],al
  424e7d:	cmp    dl,bh
  424e7f:	cs gs dec eax
  424e82:	or     BYTE PTR [eax-0x7],dh
  424e85:	mov    eax,DWORD PTR [edx-0x3]
  424e88:	ja     0x424ed1
  424e8a:	add    al,0x83
  424e8c:	add    BYTE PTR [edx+0x33c0dd42],al
  424e92:	ret    
  424e93:	icebp  
  424e94:	test   eax,0x3277939e
  424e99:	scas   eax,DWORD PTR es:[edi]
  424e9a:	xchg   DWORD PTR [edi-0x17fd3718],ebp
  424ea0:	inc    ebp
  424ea1:	(bad)  
  424ea2:	push   edx
  424ea3:	cmp    dh,BYTE PTR [edx+0x30f5e01c]
  424ea9:	pop    es
  424eaa:	pop    ebx
  424eab:	aaa    
  424eac:	ds jno 0x424eb7
  424eaf:	jmp    0x95625b4e
  424eb4:	ss pop es
  424eb6:	add    al,0x17
  424eb8:	jbe    0x424ef5
  424eba:	and    al,0xe1
  424ebc:	add    al,0x12
  424ebe:	call   0xfbefba86
  424ec3:	ins    DWORD PTR es:[edi],dx
  424ec4:	mov    bh,0x3b
  424ec6:	push   ss
  424ec7:	sahf   
  424ec8:	pushf  
  424ec9:	dec    esi
  424eca:	mov    eax,0x15adf72a
  424ecf:	add    DWORD PTR [eax],eax
  424ed1:	inc    edi
  424ed2:	add    BYTE PTR [edi+esi*4+0x3b],ch
  424ed6:	push   es
  424ed7:	ret    0x0
  424eda:	add    al,al
  424edc:	or     dh,BYTE PTR [ebp-0x14]
  424edf:	xchg   DWORD PTR [edx+0x40],esi
  424ee2:	and    dh,0xad
  424ee5:	je     0x424ef4
  424ee7:	add    edx,DWORD PTR [ebp-0x5]
  424eea:	hlt    
  424eeb:	call   0xd32b8f0a
  424ef0:	jo     0x424efa
  424ef2:	jmp    0x12ed8b4
  424ef7:	or     al,0xa
  424ef9:	and    BYTE PTR [ecx+ebx*4+0x5d560406],ch
  424f00:	cmp    DWORD PTR [ebp+0x8],0x7e
  424f04:	scas   eax,DWORD PTR es:[edi]
  424f05:	jecxz  0x424eae
  424f07:	sahf   
  424f08:	(bad)  
  424f09:	test   DWORD PTR [edx+ebx*8+0x3fff25ee],0xa43b852
  424f14:	(bad)  
  424f15:	adc    eax,0x462b68
  424f1a:	mov    ecx,DWORD PTR [edx]
  424f1c:	mov    esi,ebp
  424f1e:	je     0x424f46
  424f20:	mov    bl,0x79
  424f22:	add    al,0x7f
  424f24:	push   cs
  424f25:	out    dx,al
  424f26:	inc    ebp
  424f27:	jmp    0xbf8:0xc50974c5
  424f2e:	(bad)  
  424f2f:	fild   QWORD PTR [ecx+0x10]
  424f32:	inc    eax
  424f33:	retf   0x3e82
  424f36:	or     BYTE PTR [edi+edi*8-0x39281500],bl
  424f3d:	jne    0x424f4f
  424f3f:	add    BYTE PTR [eax],al
  424f41:	add    BYTE PTR [ebp-0x7aa8f408],al
  424f47:	sbb    BYTE PTR [eax+0x15],cl
  424f4a:	fimul  DWORD PTR [edx]
  424f4c:	push   edi
  424f4d:	pop    esi
  424f4e:	out    0xc8,eax
  424f50:	or     al,0x0
  424f52:	jl     0x424f5c
  424f54:	and    BYTE PTR [ecx+ecx*8+0x156040a],ch
  424f5b:	cli    
  424f5c:	and    ecx,DWORD PTR [eax]
  424f5e:	jle    0x424eff
  424f60:	jecxz  0x424fb1
  424f62:	push   cs
  424f63:	enter  0x84f7,0x4a
  424f67:	stc    
  424f68:	sbb    al,0xff
  424f6a:	(bad)  
  424f6c:	mov    eax,0x15c65a43
  424f71:	push   0x3faef3
  424f76:	outs   dx,BYTE PTR ds:[esi]
  424f77:	fbstp  TBYTE PTR [edx]
  424f79:	or     eax,0x75037008
  424f7e:	sti    
  424f7f:	jmp    0x5faa5082
  424f84:	pop    es
  424f85:	out    0xec,eax
  424f87:	cdq    
  424f88:	rcl    BYTE PTR ds:0x3fb31b,0xc5
  424f8f:	fld    QWORD PTR [edx]
  424f91:	add    BYTE PTR ds:0xb0abdfa2,ah
  424f97:	lahf   
  424f98:	add    edx,DWORD PTR [edx+0x78]
  424f9b:	xor    esp,ebx
  424f9d:	pop    es
  424f9e:	jg     0x424f69
  424fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fa1:	adc    BYTE PTR [edi-0x47],dh
  424fa4:	mov    ebx,0x84
  424fa9:	xor    edi,DWORD PTR [ebx]
  424fab:	sbb    bh,bl
  424fad:	es dec edx
  424faf:	jl     0x424ff0
  424fb1:	repz rcr BYTE PTR [ecx],1
  424fb4:	push   0x8503de02
  424fb9:	mov    bl,0x5a
  424fbb:	adc    DWORD PTR [edi],esi
  424fbd:	inc    ebx
  424fbe:	mov    ds:0x9ead0838,al
  424fc3:	add    al,0x87
  424fc5:	xor    esp,DWORD PTR [esi+0x611d03a6]
  424fcb:	sbb    esp,ecx
  424fcd:	pop    es
  424fce:	fiadd  WORD PTR [ebx]
  424fd0:	pop    edx
  424fd1:	mov    cl,0xaa
  424fd3:	push   ecx
  424fd5:	idiv   BYTE PTR [ebp-0x560cc095]
  424fdb:	push   ebp
  424fdc:	xchg   DWORD PTR [edi],eax
  424fde:	ret    0x740b
  424fe1:	rcl    BYTE PTR [ebp+0x397d7fd5],1
  424fe7:	mov    al,al
  424fe9:	call   ebx
  424feb:	mov    edx,0xa106cf35
  424ff0:	inc    ebx
  424ff1:	repz scas eax,DWORD PTR es:[edi]
  424ff3:	hlt    
  424ff4:	sub    eax,DWORD PTR [edx]
  424ff6:	inc    edi
  424ff7:	jmp    0xdf7d8384
  424ffc:	cli    
  424ffd:	fdiv   st(6),st
  424fff:	mov    ebx,0xa9c71408
  425004:	stos   BYTE PTR es:[edi],al
  425005:	hlt    
  425006:	pop    eax
  425007:	xor    bh,BYTE PTR [eax]
  425009:	lsl    ebp,WORD PTR [edx]
  42500c:	sbb    DWORD PTR [eax],eax
  42500e:	add    BYTE PTR [eax],al
  425010:	mov    bl,0x19
  425012:	test   eax,0xf1c4c903
  425017:	add    eax,esi
  425019:	jnp    0x425020
  42501b:	mov    dh,0xee
  42501d:	out    0x3c,al
  42501f:	inc    ebx
  425020:	repz or dl,BYTE PTR [esi-0x6d015976]
  425027:	aaa    
  425028:	mov    BYTE PTR [esi-0x50067c9d],bl
  42502e:	les    esp,FWORD PTR gs:[edi+0x29]
  425032:	loop   0x42502c
  425034:	dec    eax
  425035:	outs   dx,DWORD PTR ds:[esi]
  425036:	es add al,0xd8
  425039:	sbb    DWORD PTR [ecx+0x15],eax
  42503c:	xor    eax,DWORD PTR [edi]
  42503e:	pop    esi
  42503f:	mov    bl,0x76
  425041:	mov    eax,0x50fc583d
  425046:	in     eax,0x38
  425048:	sub    BYTE PTR [esp+esi*1-0x25c50cf0],al
  42504f:	sub    DWORD PTR [ebx],eax
  425051:	sub    BYTE PTR [ebx],0x10
  425054:	inc    ebx
  425055:	and    BYTE PTR [eax+edx*1],0x43
  425059:	lahf   
  42505a:	xchg   DWORD PTR [edi],esi
  42505c:	cdq    
  42505d:	scas   eax,DWORD PTR es:[edi]
  42505e:	inc    ax
  425060:	jecxz  0x425068
  425062:	std    
  425063:	lock and DWORD PTR [eax+0x19780bf3],esi
  42506a:	add    BYTE PTR [ebp+0x30046e0],ah
  425070:	imul   DWORD PTR [ebx+0xf172]
  425076:	add    BYTE PTR [ecx-0x52],bh
  425079:	data16 cmc 
  42507b:	shr    DWORD PTR [ebx+0x47013515],0x0
  425082:	push   esi
  425083:	sub    BYTE PTR [edi],dl
  425085:	rcr    BYTE PTR [esi-0x56f7cb7b],0x6f
  42508c:	inc    esp
  42508d:	sbb    al,0x36
  42508f:	fcmovnbe st,st(6)
  425091:	adc    BYTE PTR [ecx+0x292f4bf0],ch
  425097:	mov    al,0x7e
  425099:	add    dl,BYTE PTR [edx]
  42509b:	add    ebp,DWORD PTR [ebp+esi*2+0xc3955f9]
  4250a2:	mov    edx,0xdde4194d
  4250a7:	mov    al,0x6
  4250a9:	pop    edx
  4250aa:	mov    ds:0xe90c7093,al
  4250af:	fwait
  4250b0:	xchg   esp,ebp
  4250b2:	div    esp
  4250b4:	out    0xab,al
  4250b6:	sub    ch,bh
  4250b8:	add    cl,BYTE PTR [edi+0x72]
  4250bb:	cmp    al,0xff
  4250bd:	push   ecx
  4250be:	pop    ebp
  4250bf:	pop    ds
  4250c0:	lahf   
  4250c1:	imul   DWORD PTR [ebx-0x73]
  4250c4:	mov    dl,0x84
  4250c6:	test   eax,0xf4fb2a0b
  4250cb:	sbb    al,0x6f
  4250cd:	aas    
  4250ce:	jmp    0xd8aa654a
  4250d3:	xor    BYTE PTR [edi],al
  4250d5:	xchg   DWORD PTR [ecx+0x3474b96c],ebx
  4250db:	add    BYTE PTR [eax],al
  4250dd:	add    BYTE PTR [edx+0x3f1c0450],bl
  4250e3:	mov    dl,0x72
  4250e5:	icebp  
  4250e6:	dec    edi
  4250e7:	cmp    DWORD PTR [eax+eax*1],edx
  4250ea:	ins    DWORD PTR es:[edi],dx
  4250eb:	cmc    
  4250ec:	ud0    eax,DWORD PTR [esi+edi*8+0x6b8e75f6]
  4250f4:	adc    eax,0x4a4ac8
  4250f9:	or     DWORD PTR [edi+0x1a],0x0
  4250fd:	je     0x4250ee
  4250ff:	push   ebx
  425100:	div    DWORD PTR [esi+0x52]
  425103:	imul   edx,DWORD PTR ds:0x4a4acc,0x6a
  42510a:	pop    edx
  42510b:	imul   ebp,DWORD PTR [esi+0x8],0xffffffc1
  42510f:	push   0x62
  425111:	adc    al,0x59
  425113:	imul   edx,DWORD PTR ds:0x4a49dc,0xfffffff7
  42511a:	mov    dl,0xf
  42511c:	rcl    BYTE PTR [edi-0x3],0xf4
  425120:	pop    es
  425121:	inc    eax
  425122:	xchg   ebx,eax
  425123:	inc    esp
  425124:	sbb    al,0xff
  425126:	pop    es
  425127:	ficom  DWORD PTR [eax]
  425129:	inc    eax
  42512a:	sbb    cl,BYTE PTR [ebx+0x62]
  42512d:	add    dl,ah
  42512f:	add    al,0x1
  425131:	pop    eax
  425132:	icebp  
  425133:	std    
  425134:	div    BYTE PTR [ebp-0x36]
  425137:	push   0x75
  425139:	or     al,0x29
  42513b:	ins    BYTE PTR es:[edi],dx
  42513c:	adc    eax,0x49e6c0
  425141:	pop    esi
  425142:	add    BYTE PTR [eax],al
  425144:	add    BYTE PTR [ecx],ah
  425146:	dec    esi
  425147:	mov    edx,0x8354da0c
  42514c:	in     al,dx
  42514d:	inc    ecx
  42514e:	add    DWORD PTR [eax-0x7ef635ff],0xffffffec
  425155:	stos   BYTE PTR es:[edi],al
  425156:	add    eax,0x55090000
  42515b:	test   eax,eax
  42515d:	push   es
  42515e:	punpckldq mm0,DWORD PTR [eax]
  425161:	fisubr DWORD PTR [ebx+0x15]
  425164:	adc    bl,dh
  425166:	mov    al,0x3f
  425168:	add    dh,cl
  42516a:	mov    eax,ds:0xb4f3fffe
  42516f:	xor    ebx,0xfffffff3
  425172:	lahf   
  425173:	dec    DWORD PTR [esp+edx*2-0xc00014d]
  42517a:	sub    BYTE PTR [eax-0x4331fe18],dh
  425180:	sti    
  425181:	outs   dx,BYTE PTR ds:[esi]
  425182:	xchg   edx,eax
  425183:	loope  0x42517b
  425185:	push   esp
  425186:	push   esp
  425187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425188:	dec    edx
  425189:	mov    bh,BYTE PTR [esp+edi*4]
  42518c:	add    eax,0xffff9e61
  425191:	leave  
  425192:	ror    DWORD PTR [edi+0x66],cl
  425195:	repz and dh,BYTE PTR [edx]
  425198:	xor    BYTE PTR [eax-0x19],0xbb
  42519c:	call   0xfbffa3fe
  4251a1:	jbe    0x425182
  4251a3:	cmp    al,0x1d
  4251a5:	push   0x684edd
  4251aa:	add    BYTE PTR [eax],al
  4251ac:	jae    0x425199
  4251ae:	aas    
  4251af:	add    BYTE PTR [esi+0x1a],dh
  4251b2:	paddw  mm7,mm4
  4251b5:	stos   DWORD PTR es:[edi],eax
  4251b6:	dec    esi
  4251b7:	call   0x41d9e6
  4251bc:	jbe    0x42519c
  4251be:	or     edx,DWORD PTR [ebp+0x75c41ab3]
  4251c4:	jmp    0x141b:0x6a62c410
  4251cb:	std    
  4251cc:	int3   
  4251cd:	mov    ebp,0x9df2ea7d
  4251d2:	dec    DWORD PTR [esi+esi*2-0x4b044500]
  4251d9:	pop    esp
  4251da:	add    al,0x0
  4251dc:	xor    esp,edi
  4251de:	xor    cl,bh
  4251e0:	inc    edx
  4251e1:	pop    es
  4251e2:	je     0x425165
  4251e4:	sti    
  4251e5:	stos   DWORD PTR es:[edi],eax
  4251e6:	call   0xc04d:0x641f43bb
  4251ed:	fld    QWORD PTR [eax-0x7d528ca8]
  4251f3:	cs aaa 
  4251f5:	dec    ebp
  4251f6:	adc    ecx,DWORD PTR [ecx+0x3ff5f2e]
  4251fc:	ret    
  4251fd:	stos   DWORD PTR es:[edi],eax
  4251fe:	aam    0xef
  425200:	add    al,BYTE PTR [edi-0x17]
  425203:	xchg   BYTE PTR [edi],dh
  425205:	sti    
  425206:	pop    ecx
  425207:	xor    esp,edi
  425209:	jns    0x425277
  42520b:	sbb    al,0x48
  42520d:	lods   al,BYTE PTR ds:[esi]
  42520e:	dec    edx
  42520f:	lea    eax,[eax]
  425211:	add    BYTE PTR [eax],al
  425213:	mov    esi,0x8341705e
  425218:	lods   al,BYTE PTR ds:[esi]
  425219:	aam    0x2f
  42521b:	loop   0x425263
  42521d:	jmp    0x99f908aa
  425222:	mov    BYTE PTR [esi-0xcd246a2],ch
  425228:	push   ds
  425229:	adc    DWORD PTR [esi-0x7e9bf94d],ecx
  42522f:	jecxz  0x4251da
  425231:	or     bh,BYTE PTR [ebx+0x2fda9ea3]
  425237:	clc    
  425238:	stos   DWORD PTR es:[edi],eax
  425239:	les    edi,FWORD PTR fs:[esi+0x2]
  42523d:	mov    bh,0xc3
  42523f:	aam    0xf7
  425241:	jle    0x425256
  425243:	jbe    0x425286
  425245:	fst    DWORD PTR [ebx+0x2c]
  425248:	lahf   
  425249:	jecxz  0x425281
  42524b:	fldcw  WORD PTR [ebx-0x543353bf]
  425251:	jmp    0xc23d9310
  425256:	adc    bl,ah
  425258:	pop    ss
  425259:	sub    DWORD PTR [esi+ebp*2],eax
  42525c:	mov    BYTE PTR [eax],0x3d
  42525f:	add    al,0x25
  425261:	add    BYTE PTR [esi+0x1915b09d],ch
  425267:	push   es
  425268:	inc    edi
  425269:	add    BYTE PTR [edx+0x5d],dh
  42526c:	sahf   
  42526d:	es sbb al,0x48
  425270:	scas   eax,DWORD PTR es:[edi]
  425271:	out    0xa2,eax
  425273:	add    BYTE PTR [esi],al
  425275:	pop    edx
  425276:	and    al,BYTE PTR [eax]
  425278:	add    BYTE PTR [eax],al
  42527a:	scas   al,BYTE PTR es:[edi]
  42527b:	imul   edx,DWORD PTR [ebp+0x72],0x4c
  42527f:	sub    esp,esp
  425281:	jno    0x4252f8
  425283:	call   0x6601:0x24c01720
  42528a:	add    ebp,DWORD PTR [ebx+0x56f0a910]
  425290:	sti    
  425291:	cld    
  425292:	lock adc eax,0xf189e940
  425298:	arpl   WORD PTR [ecx-0x378f94b],ax
  42529e:	and    al,0xfc
  4252a0:	aas    
  4252a1:	jmp    0xf4ca2a0f
  4252a6:	adc    al,BYTE PTR fs:[eax-0x17]
  4252aa:	dec    ebp
  4252ab:	inc    ecx
  4252ac:	test   DWORD PTR [ecx],ebp
  4252ae:	les    edi,FWORD PTR [ebx]
  4252b0:	xchg   DWORD PTR [ebp-0x1bc904d4],ebp
  4252b6:	shr    BYTE PTR [esi+0x3f],1
  4252b9:	jmp    0x7dc14481
  4252be:	adc    al,0x17
  4252c0:	cld    
  4252c1:	jl     0x42529d
  4252c3:	addr16 push 0x66072d31
  4252c9:	call   0xfd668669
  4252ce:	aad    0x16
  4252d0:	add    ecx,ebp
  4252d2:	lock push ds
  4252d4:	pop    eax
  4252d5:	xchg   ecx,eax
  4252d6:	cs pop es
  4252d8:	call   0xf7bb02dd
  4252dd:	inc    DWORD PTR [eax]
  4252df:	add    BYTE PTR [eax],al
  4252e1:	inc    ecx
  4252e2:	add    ch,BYTE PTR [eax-0x48]
  4252e5:	fld    DWORD PTR [edx]
  4252e7:	mov    BYTE PTR [ecx+0x5ee],al
  4252ed:	push   ebp
  4252ee:	call   0xd7f7:0x2c9b85f
  4252f5:	lock add ah,BYTE PTR [edx+0x0]
  4252f9:	lock outs dx,DWORD PTR ds:[esi]
  4252fb:	lea    eax,[esi+ebp*4+0xe]
  4252ff:	push   eax
  425300:	call   FWORD PTR [esp+eax*4-0x8]
  425304:	jmp    FWORD PTR [edi+0x1d]
  425307:	sub    ecx,ecx
  425309:	iret   
  42530a:	ret    0xf57
  42530d:	faddp  st(2),st
  42530f:	push   esi
  425310:	mov    ebp,DWORD PTR [edi-0x2eaa44af]
  425316:	pop    esi
  425317:	sub    esp,0x2d2
  42531d:	pop    esp
  42531e:	push   edi
  42531f:	div    DWORD PTR [ebp+0x42]
  425322:	jnp    0x42531c
  425324:	call   0x397f0a
  425329:	inc    ebp
  42532a:	aaa    
  42532b:	ror    BYTE PTR [ecx+0x1a85a4f],0x5
  425332:	sub    DWORD PTR [esi],edi
  425334:	add    DWORD PTR [edx],ebx
  425336:	push   es
  425337:	lea    eax,[ebp-0x1e]
  42533a:	push   edx
  42533b:	div    DWORD PTR [ebp+0x2]
  42533e:	outs   dx,DWORD PTR ds:[esi]
  42533f:	adc    eax,0x4619e4
  425344:	test   DWORD PTR [eax],eax
  425346:	add    BYTE PTR [eax],al
  425348:	sbb    dh,bh
  42534a:	sub    ebp,DWORD PTR [edx-0x28]
  42534d:	cmp    BYTE PTR [edi],0x50
  425350:	sbb    dh,BYTE PTR [eax+0x75]
  425353:	clc    
  425354:	inc    edi
  425355:	inc    edi
  425356:	cmp    al,0x50
  425358:	repz and al,0x40
  42535b:	dec    esp
  42535c:	jbe    0x4253a8
  42535e:	aaa    
  42535f:	sti    
  425360:	mov    esp,0x8f5ea7c0
  425365:	lahf   
  425366:	dec    DWORD PTR [esi+esi*2-0x5b044709]
  42536d:	shrd   eax,edi,0x51
  425371:	lahf   
  425372:	inc    DWORD PTR [edi+0x4ac892e]
  425378:	mov    ch,0xda
  42537a:	mov    eax,0xb8fa7300
  42537f:	add    BYTE PTR [eax+0x6a],ch
  425382:	sub    edx,DWORD PTR [ecx]
  425384:	xor    esp,DWORD PTR [eax-0x259ab6d5]
  42538a:	scas   eax,DWORD PTR es:[edi]
  42538b:	adc    dh,bl
  42538d:	fdivr  QWORD PTR [eax-0x2edf108d]
  425393:	or     ebx,DWORD PTR [esp+ebx*2+0x64840b03]
  42539a:	pop    es
  42539b:	rcl    DWORD PTR [ebx-0x51],0xc
  42539f:	shr    esp,0x28
  4253a2:	or     al,0x50
  4253a4:	in     al,0x30
  4253a6:	inc    esp
  4253a7:	add    al,0x32
  4253a9:	aas    
  4253aa:	sysret 
  4253ac:	add    BYTE PTR [eax],al
  4253ae:	add    BYTE PTR [edx],dh
  4253b0:	(bad)  
  4253b1:	mov    eax,0x29e0eb73
  4253b6:	or     BYTE PTR [edx+esi*4],dl
  4253b9:	repz adc esi,DWORD PTR [ebx+0x7fc07a9f]
  4253c0:	lods   al,BYTE PTR ds:[esi]
  4253c1:	sub    eax,0x327fc64
  4253c6:	sti    
  4253c7:	fmulp  st(7),st
  4253c9:	adc    al,0x40
  4253cb:	repz sbb bh,BYTE PTR [edi-0x11190f5]
  4253d2:	push   ebx
  4253d4:	push   es
  4253d5:	ror    DWORD PTR [esi+edx*8-0x4c7f2558],1
  4253dc:	xor    ecx,DWORD PTR [ebx-0x75]
  4253df:	xor    BYTE PTR [edi],dl
  4253e1:	aas    
  4253e2:	adc    al,0x2c
  4253e4:	add    bl,ch
  4253e6:	add    al,0xf3
  4253e8:	push   es
  4253e9:	sbb    DWORD PTR [edi+eiz*1-0x57484cca],ebp
  4253f0:	xor    ch,bl
  4253f2:	mov    dh,0xc1
  4253f4:	test   al,0x1c
  4253f6:	or     al,0xd
  4253f8:	stos   DWORD PTR es:[edi],eax
  4253f9:	call   0xf28c:0x5aa7fb2f
  425400:	push   es
  425401:	jmp    0xd7193abc
  425406:	inc    ebx
  425407:	repz sub DWORD PTR [ecx-0x7ee0d4d0],0x6a06f303
  425412:	das    
  425413:	add    BYTE PTR [eax],al
  425415:	add    bh,ch
  425417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425418:	cld    
  425419:	adc    esp,esp
  42541b:	inc    esi
  42541c:	jmp    0xf87487a1
  425421:	mov    dh,BYTE PTR [eax+0x177c6916]
  425427:	push   es
  425428:	jmp    0xdf744630
  42542d:	mov    DWORD PTR [esi-0x72a3c159],esi
  425433:	push   es
  425434:	pop    esp
  425435:	outs   dx,DWORD PTR ds:[esi]
  425436:	lahf   
  425437:	add    eax,0xf11803e9
  42543c:	sbb    DWORD PTR [ecx],edx
  42543e:	adc    DWORD PTR ds:0x211b03a9,0xffffff96
  425445:	mov    dh,0xf8
  425447:	jnp    0x4253f5
  425449:	pop    es
  42544a:	add    BYTE PTR [edi-0x3b],al
  42544d:	add    esi,ebx
  42544f:	push   es
  425450:	add    BYTE PTR [ecx+0x6a4ef223],ch
  425456:	mov    bh,0x2
  425458:	push   eax
  425459:	je     0x42548e
  42545b:	mov    ds:0xf6e3de50,eax
  425460:	adc    ebp,DWORD PTR [ecx]
  425462:	out    dx,eax
  425463:	and    BYTE PTR [edx],al
  425465:	pop    esp
  425466:	xor    esp,DWORD PTR [ebx+0x5345c650]
  42546c:	add    ecx,ebp
  42546e:	lock stos DWORD PTR es:[edi],eax
  425470:	adc    eax,0x470329
  425475:	inc    ebx
  425476:	hlt    
  425477:	and    BYTE PTR [esi],al
  425479:	je     0x42547b
  42547b:	add    BYTE PTR [eax],al
  42547d:	xor    esp,DWORD PTR [ebx+0x531d9e50]
  425483:	add    ecx,ebp
  425485:	lock stos DWORD PTR es:[edi],eax
  425487:	adc    eax,0x46ecd5
  42548c:	cmp    edi,ebp
  42548e:	dec    ebx
  42548f:	pop    edx
  425490:	mov    al,0x32
  425492:	(bad)  
  425493:	call   FWORD PTR [ebx]
  425495:	js     0x425431
  425497:	jg     0x42541e
  425499:	cwde   
  42549a:	daa    
  42549b:	in     al,dx
  42549c:	add    eax,0x5b8754c0
  4254a1:	jns    0x4254e7
  4254a3:	adc    al,0xbe
  4254a5:	test   DWORD PTR [esi],eax
  4254a7:	cmp    al,0xe9
  4254a9:	lock push es
  4254ab:	sti    
  4254ac:	mov    edi,0x54c7de4
  4254b1:	pop    es
  4254b2:	push   esi
  4254b3:	sti    
  4254b4:	fsubr  QWORD PTR [eax]
  4254b6:	adc    eax,DWORD PTR [eax-0x17]
  4254b9:	jae    0x425481
  4254bb:	or     ebp,DWORD PTR [ebp+0x7e]
  4254be:	push   es
  4254bf:	add    cl,ch
  4254c1:	jns    0x425507
  4254c3:	adc    al,0x62
  4254c5:	mov    eax,0xf028f2e2
  4254ca:	push   es
  4254cb:	add    BYTE PTR [eax],al
  4254cd:	dec    edx
  4254ce:	xlat   BYTE PTR ds:[ebx]
  4254cf:	add    al,0x8d
  4254d1:	ins    BYTE PTR es:[edi],dx
  4254d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d3:	loop   0x4254da
  4254d5:	push   ecx
  4254d6:	pushf  
  4254d7:	jp     0x4254a0
  4254d9:	mov    dh,0x75
  4254db:	rol    DWORD PTR [eax],0xca
  4254de:	or     dl,BYTE PTR [eax]
  4254e0:	je     0x4254e2
  4254e2:	add    BYTE PTR [eax],al
  4254e4:	sbb    BYTE PTR [eax+0x4ac6301d],dl
  4254ea:	add    BYTE PTR [edi+0x49],dl
  4254ed:	retf   
  4254ee:	adc    al,0x50
  4254f0:	aas    
  4254f1:	inc    edi
  4254f2:	and    al,0x1c
  4254f4:	or     bl,BYTE PTR [ebx+ecx*8-0x7b]
  4254f8:	pop    edx
  4254f9:	or     al,0x95
  4254fb:	rcl    BYTE PTR [esi],0xcb
  4254fe:	jne    0x42552d
  425500:	and    ebp,esp
  425502:	adc    eax,DWORD PTR [ebx-0xb008a6]
  425508:	xchg   esi,eax
  42550a:	cmovo  ecx,DWORD PTR [edx-0x278b3fdb]
  425511:	(bad)  
  425512:	ds adc al,0x5
  425515:	mov    al,al
  425517:	add    al,0xa
  425519:	mov    es,WORD PTR [esp+0x2e]
  42551d:	cmp    dh,bh
  42551f:	rol    edi,cl
  425521:	retf   0x9507
  425524:	sbb    dh,BYTE PTR [eax-0x6]
  425527:	xor    DWORD PTR [edx],ebx
  425529:	xchg   eax,eax
  42552b:	je     0x425511
  42552d:	pop    ebx
  42552e:	outs   dx,BYTE PTR ds:[esi]
  42552f:	adc    al,0xc1
  425531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425532:	div    BYTE PTR [esi+esi*8-0x6]
  425536:	sbb    bh,0xb2
  425539:	jo     0x425538
  42553b:	dec    ebp
  42553d:	(bad)  
  42553e:	(bad)  
  42553f:	(bad)  
  425540:	jbe    0x425508
  425542:	pop    es
  425543:	mov    DWORD PTR [esi-0x3a],edx
  425546:	jnp    0xf342554c
  42554c:	jne    0x425559
  42554e:	mov    DWORD PTR [edi-0x21051835],esi
  425554:	lahf   
  425555:	adc    BYTE PTR [eax-0xd],al
  425558:	sub    al,ah
  42555a:	je     0x425554
  42555c:	jg     0x4254e0
  42555e:	inc    esp
  42555f:	pop    ss
  425560:	mov    esp,0xa124e84f
  425565:	mov    ah,0xfb
  425567:	sub    al,0xe6
  425569:	jae    0x42556c
  42556b:	sub    BYTE PTR [ecx],ch
  42556d:	call   0x22ec:0x88dab05d
  425574:	add    DWORD PTR [ebx-0x7d0050bb],eax
  42557a:	pop    ecx
  42557b:	sti    
  42557c:	(bad)  
  42557d:	ins    DWORD PTR es:[edi],dx
  42557e:	int    0x9c
  425580:	je     0x42550a
  425582:	dec    ebp
  425583:	out    0x16,eax
  425585:	(bad)  
  425586:	push   esi
  425587:	jbe    0x4255f8
  425589:	sub    al,BYTE PTR [ecx+eax*8]
  42558c:	outs   dx,DWORD PTR ds:[esi]
  42558d:	test   al,0x16
  42558f:	jo     0x4255a3
  425591:	mov    eax,0x8099fd01
  425596:	jge    0x425593
  425598:	popa   
  425599:	xor    BYTE PTR [eax+eiz*1],al
  42559c:	jo     0x425546
  42559e:	jmp    DWORD PTR [ecx]
  4255a0:	jo     0x4255e1
  4255a2:	xchg   DWORD PTR [esi-0x7cfe7861],esp
  4255a8:	scas   al,BYTE PTR es:[edi]
  4255a9:	(bad)  
  4255aa:	mov    esi,0x874aaff7
  4255af:	add    BYTE PTR [eax],al
  4255b1:	add    BYTE PTR [edi+0x30],cl
  4255b4:	fwait
  4255b5:	clc    
  4255b6:	jo     0x4255f3
  4255b8:	add    ecx,DWORD PTR [edi-0x3b]
  4255bb:	sbb    BYTE PTR [esi+0x77d7653],ch
  4255c1:	data16 repz sub al,al
  4255c5:	mov    DWORD PTR [edi+0x1b1bcd06],ebx
  4255cb:	jmp    0x4255fa
  4255cd:	mov    ah,0x8
  4255cf:	mov    ch,BYTE PTR [ecx]
  4255d1:	das    
  4255d2:	mov    bh,0xa5
  4255d4:	xchg   esi,eax
  4255d5:	jmp    FWORD PTR [ebp+0x21]
  4255d8:	cmc    
  4255d9:	mov    ah,0x1c
  4255db:	scas   eax,DWORD PTR es:[edi]
  4255dc:	scas   eax,DWORD PTR es:[edi]
  4255dd:	das    
  4255de:	repz push es
  4255e0:	ins    DWORD PTR es:[edi],dx
  4255e1:	ret    
  4255e2:	neg    BYTE PTR [di+0x30]
  4255e6:	out    0xae,eax
  4255e8:	in     al,dx
  4255e9:	cmp    bl,dh
  4255eb:	push   es
  4255ec:	mov    ds:0xe7f80f48,eax
  4255f1:	xchg   DWORD PTR [ebx+0x2fc9e41a],esi
  4255f7:	jmp    0x4255ce
  4255f9:	add    esi,DWORD PTR [eax+ecx*2-0x13]
  4255fd:	xchg   BYTE PTR [ebx],ch
  4255ff:	out    dx,eax
  425600:	call   0x5556fa83
  425605:	les    eax,FWORD PTR [ebx-0x51]
  425608:	add    eax,eax
  42560a:	mov    BYTE PTR [ecx+ebp*2-0x170830d0],ah
  425611:	cmp    dh,ch
  425613:	(bad)  
  425614:	adc    eax,0xe8
  425619:	loopne 0x4255a2
  42561b:	stos   DWORD PTR es:[edi],eax
  42561c:	or     al,0xc1
  42561e:	scas   al,BYTE PTR es:[edi]
  42561f:	jl     0x4255ef
  425621:	imul   esp,DWORD PTR [esi+ebx*2-0x425114b7],0xc2a45892
  42562c:	push   ecx
  42562d:	add    DWORD PTR [esi],0xffffffbe
  425630:	jle    0x425680
  425632:	inc    edx
  425633:	daa    
  425634:	or     bl,dh
  425636:	adc    edx,DWORD PTR [ebx+0x5136ef45]
  42563c:	fidivr DWORD PTR [esi]
  42563e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42563f:	cmp    bh,BYTE PTR [edi-0x49]
  425642:	jmp    0xa587:0x59fe0ff
  425649:	or     al,0x10
  42564b:	ret    0xf7e9
  42564e:	repz mov edi,0x950fefe0
  425654:	sub    DWORD PTR ds:0xab620013,esi
  42565a:	jmp    0xfefb:0x80a81103
  425661:	pusha  
  425662:	push   es
  425663:	mov    esi,0xb20ff0ed
  425668:	test   al,0xec
  42566a:	and    ebp,eax
  42566c:	jmp    0x558a6975
  425671:	in     al,dx
  425672:	repz mov edi,0xbdfb48aa
  425678:	mov    ecx,0xdab86408
  42567d:	add    BYTE PTR [eax],al
  42567f:	add    BYTE PTR [esi+0x4baa78b6],dh
  425685:	mov    esp,gs
  425687:	push   0x54
  425689:	sahf   
  42568a:	cmp    DWORD PTR [ebp-0x16fff584],0x72533925
  425694:	push   edi
  425695:	lss    ebp,FWORD PTR [esi]
  425698:	jmp    0x4256bd
  42569a:	call   0x24654e88
  42569f:	loope  0x4256c5
  4256a1:	cli    
  4256a2:	inc    edi
  4256a3:	hlt    
  4256a4:	inc    esi
  4256a5:	enter  0xcd44,0x5c
  4256a9:	std    
  4256aa:	(bad)  
  4256ab:	call   0xd871ea0
  4256b0:	jmp    0x425688
  4256b2:	je     0x42569d
  4256b4:	lock stos DWORD PTR es:[edi],eax
  4256b6:	adc    BYTE PTR [esi],ch
  4256b8:	mov    ah,0xea
  4256ba:	or     esi,ebp
  4256bc:	lock push es
  4256be:	add    BYTE PTR [eax],al
  4256c0:	fisttp QWORD PTR [ebx+0x24]
  4256c3:	adc    al,0x3a
  4256c5:	add    DWORD PTR [eax],0x244bcd00
  4256cb:	adc    BYTE PTR [eax],dl
  4256cd:	pop    es
  4256ce:	add    BYTE PTR [eax],al
  4256d0:	or     DWORD PTR [ebx+0x24],0x60c7630c
  4256d7:	jmp    0xa32e:0x4489070a
  4256de:	add    BYTE PTR [esi+edi*4-0xa],0x68
  4256e3:	rol    BYTE PTR [eax],0x0
  4256e6:	add    BYTE PTR [edx-0x7c],bh
  4256e9:	add    BYTE PTR [eax],al
  4256eb:	push   ebx
  4256ec:	dec    edx
  4256ed:	and    al,0x10
  4256ef:	cdq    
  4256f0:	(bad)  
  4256f1:	lea    esi,[esi+edi*8-0x4e]
  4256f5:	jecxz  0x42571a
  4256f7:	pop    ebp
  4256f8:	push   ebp
  4256f9:	idiv   edi
  4256fb:	push   ds
  4256fc:	scas   eax,DWORD PTR es:[edi]
  4256fd:	psubsw mm6,QWORD PTR [ebp+0x27000005]
  425704:	dec    edi
  425705:	and    al,0x14
  425707:	or     al,BYTE PTR [ebx+0x58651c9e]
  42570d:	test   eax,eax
  42570f:	fisub  WORD PTR [ecx-0x175b17b5]
  425715:	cmc    
  425716:	call   FWORD PTR [ecx]
  425718:	xlat   BYTE PTR ds:[ebx]
  425719:	and    edx,DWORD PTR [edx+ecx*4]
  42571c:	fld    DWORD PTR [ecx]
  42571e:	mov    eax,0xfffbb102
  425723:	sbb    DWORD PTR [esi-0x79a60000],0x77
  42572a:	add    al,0x4a
  42572c:	pop    es
  42572d:	test   DWORD PTR [esi-0x72fff9b6],ebx
  425733:	push   esi
  425734:	stos   BYTE PTR es:[edi],al
  425735:	arpl   WORD PTR [edx],si
  425737:	mov    cl,0x82
  425739:	xchg   ebx,eax
  42573a:	retf   
  42573b:	repz cmp BYTE PTR [ecx+0x7c5a3d2f],dh
  425742:	ret    
  425743:	sbb    ecx,DWORD PTR [eax+0x2c24fbb7]
  425749:	les    esi,FWORD PTR [eax+eax*1+0x0]
  42574d:	add    bl,bh
  42574f:	and    al,0x48
  425751:	and    al,0x9f
  425753:	xchg   esi,eax
  425754:	das    
  425755:	sub    ah,bh
  425757:	and    ch,al
  425759:	test   BYTE PTR [eax],ch
  42575b:	mov    cl,0x93
  42575d:	shr    ah,0x41
  425760:	les    edx,FWORD PTR [eax+0xb]
  425763:	fidivr WORD PTR [ecx+0x7a81ecfb]
  425769:	jl     0x42577a
  42576b:	xchg   esp,eax
  42576c:	xchg   edi,eax
  42576d:	enter  0x98a9,0xb0
  425771:	test   BYTE PTR [eax+0x3786f61a],bh
  425777:	adc    al,0x0
  425779:	jmp    0x4206fe
  42577e:	outs   dx,BYTE PTR ds:[esi]
  42577f:	jnp    0x425764
  425781:	xchg   ecx,esi
  425783:	scas   eax,DWORD PTR es:[edi]
  425784:	inc    edx
  425786:	ja     0x42579b
  425788:	test   dh,bh
  42578a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42578b:	scas   eax,DWORD PTR es:[edi]
  42578c:	stos   DWORD PTR es:[edi],eax
  42578d:	xchg   BYTE PTR [ebx],dh
  42578f:	mov    al,0x97
  425791:	inc    ebx
  425792:	test   al,0x70
  425794:	mov    al,0xfb
  425796:	(bad)  
  425797:	imul   esi,DWORD PTR [ebp+0x3f],0xfffffff3
  42579b:	xor    al,BYTE PTR [ebx-0x5288dc]
  4257a1:	jmp    FWORD PTR [edx-0x15]
  4257a4:	out    0x37,eax
  4257a6:	lds    ebx,FWORD PTR [edx]
  4257a8:	inc    ebx
  4257a9:	and    al,0xb3
  4257ab:	loopne 0x425747
  4257ad:	mov    DWORD PTR [ebx+0x8d4faf],esi
  4257b3:	add    BYTE PTR [eax],al
  4257b5:	(bad)  
  4257b7:	out    dx,eax
  4257b8:	mov    bh,cl
  4257ba:	push   es
  4257bb:	or     eax,0x31304cf4
  4257c0:	mov    al,0x38
  4257c2:	(bad)  
  4257c3:	aad    0xe7
  4257c5:	adc    BYTE PTR ds:0xea6f7ee9,ch
  4257cb:	je     0x4257d2
  4257cd:	repz push es
  4257cf:	outs   dx,DWORD PTR ds:[esi]
  4257d0:	retf   
  4257d1:	or     ebp,DWORD PTR [ecx]
  4257d3:	pop    ds
  4257d4:	mov    al,0x18
  4257d6:	lods   eax,DWORD PTR ds:[esi]
  4257d7:	cwde   
  4257d8:	mov    al,0xe6
  4257da:	adc    dh,dh
  4257dc:	inc    ebx
  4257dd:	repz lea ebp,[edx-0x62308805]
  4257e4:	jmp    FWORD PTR [ebp-0x4a]
  4257e7:	mov    esi,0xe99d72d2
  4257ec:	dec    edi
  4257ed:	adc    DWORD PTR [edx],ecx
  4257ef:	jae    0x4257f5
  4257f1:	push   0x48
  4257f3:	loope  0x4257a5
  4257f5:	push   ds
  4257f6:	mov    ds:0x91f34437,eax
  4257fb:	sub    eax,0x258de4e8
  425800:	call   0x812a8509
  425805:	das    
  425806:	jmp    0x425830
  425808:	push   esp
  425809:	jle    0x425826
  42580b:	or     eax,0x54bb1f4
  425810:	fdivr  st(0),st
  425812:	mov    ebp,DWORD PTR [ecx]
  425814:	add    al,0xb1
  425816:	dec    ebx
  425817:	add    eax,0xe0
  42581c:	mov    ecx,cs
  42581e:	sub    eax,0x70b2d4e8
  425823:	inc    esp
  425824:	repz scas al,BYTE PTR es:[edi]
  425826:	loopne 0x4257e3
  425828:	js     0x4257ca
  42582a:	pop    edi
  42582b:	int3   
  42582c:	je     0x425879
  42582e:	int    0xff
  425830:	jo     0x4257ee
  425832:	hlt    
  425833:	pop    es
  425834:	je     0x425881
  425836:	add    ch,cl
  425838:	add    BYTE PTR [eax+0x36f8c57c],cl
  42583e:	sti    
  42583f:	sbb    al,0x83
  425841:	jno    0x425882
  425843:	jmp    0xfa5252d5
  425848:	mov    al,0x6
  42584a:	cmp    eax,0x6f7eb
  42584f:	imul   BYTE PTR [ecx+ebx*2-0x6]
  425853:	ds dec esp
  425855:	xchg   edx,eax
  425856:	inc    esp
  425857:	or     eax,0xd4fb36bf
  42585c:	push   0xb5e94011
  425861:	cmp    al,0x57
  425863:	jb     0x4258af
  425865:	inc    edx
  425866:	mov    edi,0x51b279bc
  42586b:	mov    eax,0xe9f82971
  425870:	cmp    eax,0x23c0faf0
  425875:	pcmpeqb mm4,QWORD PTR [edi+0x1135883e]
  42587c:	loopne 0x4258c4
  42587e:	add    BYTE PTR [eax+eax*1+0x0],dh
  425882:	add    BYTE PTR [ebx],bh
  425884:	lahf   
  425885:	push   eax
  425886:	ss jb  0x4258d2
  425889:	cld    
  42588a:	cmp    ecx,ebx
  42588c:	mov    al,ds:0x9caf54fa
  425891:	shr    BYTE PTR [eax+esi*4+0x19],cl
  425895:	cs jb  0x4258c3
  425898:	lahf   
  425899:	test   DWORD PTR [ecx-0x56811824],ebp
  42589f:	repnz sbb ah,BYTE PTR [ecx+edx*4]
  4258a3:	fidiv  DWORD PTR [edx]
  4258a5:	cli    
  4258a6:	sahf   
  4258a7:	stc    
  4258a8:	sahf   
  4258a9:	test   DWORD PTR [esi+0x248cf7bc],edx
  4258af:	outs   dx,DWORD PTR ds:[esi]
  4258b0:	dec    edi
  4258b1:	sti    
  4258b2:	add    BYTE PTR [edi+0x6b],ah
  4258b5:	dec    edi
  4258b6:	push   0x48
  4258b8:	jo     0x42592f
  4258ba:	or     ch,bl
  4258bc:	mov    ecx,0x9b47c085
  4258c1:	dec    esi
  4258c2:	call   0x385883
  4258c7:	fldcw  WORD PTR [edi+0x56]
  4258ca:	mov    eax,DWORD PTR ds:0x16c2c951
  4258d0:	add    ecx,DWORD PTR [ebx+0x57]
  4258d3:	lods   eax,DWORD PTR ds:[esi]
  4258d4:	xlat   BYTE PTR ds:[ebx]
  4258d5:	and    ecx,DWORD PTR [eax+ebx*1]
  4258d8:	int3   
  4258d9:	call   0xf7b3366b
  4258de:	mov    eax,edx
  4258e0:	mov    ?,edi
  4258e2:	je     0x425905
  4258e4:	cmp    edi,esi
  4258e6:	je     0x4258e8
  4258e8:	add    BYTE PTR [eax],al
  4258ea:	ss mul edi
  4258ed:	jge    0x4258cc
  4258ef:	jo     0x4258e8
  4258f1:	mov    ecx,DWORD PTR [edx]
  4258f3:	(bad)  
  4258f4:	out    dx,al
  4258f5:	je     0x4258bd
  4258f7:	xor    al,0x4f
  4258f9:	inc    edi
  4258fb:	sbb    cl,BYTE PTR [edx]
  4258fd:	inc    eax
  4258fe:	retf   0xc08f
  425901:	jne    0x4258db
  425903:	ins    BYTE PTR es:[edi],dx
  425904:	mov    ebx,0x6bdea256
  425909:	(bad)  
  42590a:	popf   
  42590b:	xor    al,0xe8
  42590d:	inc    edi
  42590e:	cs ins DWORD PTR es:[edi],dx
  425910:	neg    DWORD PTR [esi-0x23]
  425913:	and    BYTE PTR [ebx-0x464a7a5],bh
  425919:	(bad)  
  42591a:	out    0xae,al
  42591c:	(bad)  
  42591d:	(bad)  
  42591e:	mov    bh,0xe
  425920:	adc    eax,0xe83a9a40
  425925:	stos   DWORD PTR es:[edi],eax
  425926:	dec    ebp
  425927:	ins    BYTE PTR es:[edi],dx
  425928:	test   DWORD PTR [edx+ecx*2-0xc00fa2a],0x6c03e7fb
  425933:	xchg   ebx,eax
  425934:	unpckhps xmm6,XMMWORD PTR [ebx-0x183f7d51]
  42593b:	mov    al,0xf0
  42593d:	mov    edi,0x871b3
  425942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425943:	sub    BYTE PTR [eax+0x50f4577f],ah
  425949:	push   edx
  42594a:	add    BYTE PTR [ecx+0x55],cl
  42594d:	lea    eax,[eax]
  42594f:	add    BYTE PTR [eax],al
  425951:	mov    esi,0xf3936c4b
  425956:	scas   eax,DWORD PTR es:[edi]
  425957:	inc    DWORD PTR [edi+0x329c44c6]
  42595d:	xor    ch,bl
  42595f:	lods   al,BYTE PTR ds:[esi]
  425960:	mov    ebx,0xfffaff3
  425965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425966:	cmp    BYTE PTR [eax-0x3e],0xa3
  42596a:	in     al,0x12
  42596c:	inc    esp
  42596d:	out    0x6f,eax
  42596f:	dec    DWORD PTR [eax-0x41170852]
  425975:	xchg   bp,ax
  425977:	push   eax
  425978:	push   ebx
  425979:	inc    eax
  42597a:	sbb    edx,eax
  42597c:	push   eax
  42597d:	fdiv   QWORD PTR [edx-0x4fcceaf9]
  425983:	jbe    0x4259ca
  425985:	retf   
  425986:	pop    eax
  425987:	ror    BYTE PTR [ebx],0x6f
  42598a:	mov    edi,?
  42598c:	push   ebx
  42598e:	mov    esp,0xefde1c12
  425993:	add    edi,ebx
  425995:	es mov eax,0xb79f4576
  42599b:	sub    eax,0x835c9cfb
  4259a0:	shl    ah,0x2b
  4259a3:	add    BYTE PTR [eax],0xf3
  4259a6:	scas   eax,DWORD PTR es:[edi]
  4259a7:	js     0x4259ee
  4259a9:	sti    
  4259aa:	push   es
  4259ab:	jo     0x4259f3
  4259ad:	jmp    0x425990
  4259af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259b0:	ss in  eax,0x8b
  4259b3:	sub    al,0xd8
  4259b5:	add    BYTE PTR [eax],al
  4259b7:	add    BYTE PTR [edx+0x43],bh
  4259ba:	loope  0x425a34
  4259bc:	arpl   WORD PTR [esi+0x61],bx
  4259bf:	add    esi,ebx
  4259c1:	push   es
  4259c2:	xchg   ecx,eax
  4259c3:	rcl    BYTE PTR [ebp-0x43ab8d63],1
  4259c9:	cmp    DWORD PTR [edx+0x36],ebp
  4259cc:	sti    
  4259cd:	popf   
  4259ce:	cld    
  4259cf:	jmp    eax
  4259d1:	inc    esi
  4259d2:	jmp    0x56239d4f
  4259d7:	ss pop es
  4259d9:	cmp    dh,BYTE PTR [edx+0x4239b450]
  4259df:	ss jmp 0x42597f
  4259e2:	aam    0xff
  4259e4:	inc    DWORD PTR [esi-0x17]
  4259e7:	js     0x4259ec
  4259e9:	loope  0x425a20
  4259eb:	aaa    
  4259ec:	rcr    DWORD PTR [ebp+0x46e24ffc],0xe9
  4259f3:	push   ebx
  4259f4:	clc    
  4259f5:	repnz hlt 
  4259f7:	pop    ss
  4259f8:	xor    eax,DWORD PTR [edi]
  4259fa:	mov    bl,0x53
  4259fc:	fcmovnb st,st(0)
  4259fe:	add    ebp,DWORD PTR [eax+ebx*8-0x16c9d67d]
  425a05:	xor    al,0xf2
  425a07:	adc    eax,0x3a8f217
  425a0c:	jnp    0x425a48
  425a0e:	loop   0x425991
  425a10:	mov    bl,0x13
  425a12:	in     eax,0xc1
  425a14:	cs pushf 
  425a16:	call   0x935026c
  425a1b:	adc    DWORD PTR [eax],eax
  425a1d:	add    BYTE PTR [eax],al
  425a1f:	xor    eax,DWORD PTR [edi]
  425a21:	add    DWORD PTR [ecx-0x68],ecx
  425a24:	adc    ch,ah
  425a26:	in     al,dx
  425a27:	aaa    
  425a28:	xchg   ebx,eax
  425a29:	add    BYTE PTR ds:0xb575a18f,bh
  425a2f:	addr16 xchg esi,eax
  425a31:	cli    
  425a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a33:	dec    eax
  425a34:	mov    al,ds:0xf248a175
  425a39:	adc    edi,esp
  425a3b:	mov    al,0x6
  425a3d:	xchg   BYTE PTR [eax+ebx*4],ah
  425a40:	inc    eax
  425a41:	pop    edx
  425a42:	and    bl,BYTE PTR [esi-0x7616fba3]
  425a48:	adc    esp,DWORD PTR [ebp*8+0x6f669368]
  425a4f:	cwde   
  425a50:	pop    esp
  425a51:	sti    
  425a52:	fstp   QWORD PTR [eax+ecx*1]
  425a55:	call   0xfbe3304d
  425a5a:	sub    al,dl
  425a5c:	sub    esp,0xffffffb8
  425a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a60:	inc    ecx
  425a61:	or     al,0x9a
  425a63:	ret    0x6637
  425a66:	jmp    0x76f:0x6abefba5
  425a6d:	je     0x425a6e
  425a6f:	enter  0x1e12,0xb1
  425a73:	int3   
  425a74:	clc    
  425a75:	xchg   BYTE PTR [eax+eiz*8+0x6ce6c081],ah
  425a7c:	pop    es
  425a7d:	add    ecx,ebp
  425a7f:	lock mov DWORD PTR [eax],0x9e
  425a86:	lock push es
  425a88:	add    BYTE PTR [eax],dl
  425a8a:	mov    ds:0xb1e90006,al
  425a8f:	inc    ecx
  425a90:	cld    
  425a91:	jmp    0xd3026186
  425a96:	loopne 0x425a5f
  425a98:	inc    ebp
  425a99:	(bad)  
  425a9b:	push   es
  425a9c:	add    BYTE PTR [ecx],ch
  425a9e:	mov    WORD PTR [edi],es
  425aa0:	ret    
  425aa1:	and    al,0x5b
  425aa3:	push   es
  425aa4:	add    BYTE PTR [eax],al
  425aa6:	mov    al,BYTE PTR [edi+0x29864583]
  425aac:	add    BYTE PTR [edi],al
  425aae:	call   0x408:0x3c21b07
  425ab5:	add    BYTE PTR [edx-0x51803f54],cl
  425abb:	jmp    0x425aeb
  425abd:	test   DWORD PTR [edx+0x5a3d2aeb],ebx
  425ac3:	add    al,BYTE PTR [eax]
  425ac5:	add    BYTE PTR [esi-0xf],bl
  425ac8:	cmp    al,0x0
  425aca:	dec    eax
  425acb:	pop    es
  425acc:	add    BYTE PTR [ebp+eax*4-0x52],dh
  425ad0:	sti    
  425ad1:	add    bl,BYTE PTR [edx+0x7]
  425ad4:	jne    0x425a79
  425ad6:	and    BYTE PTR [ecx],al
  425ad8:	jecxz  0x425adc
  425ada:	and    BYTE PTR [ebx-0x51d014ae],bl
  425ae0:	sti    
  425ae1:	add    al,0x1a
  425ae3:	pop    es
  425ae4:	je     0x425af1
  425ae6:	test   DWORD PTR [edx],0xfffe
  425aec:	add    BYTE PTR [edx],cl
  425aee:	jmp    0x425b10
  425af0:	cmp    ebx,eax
  425af2:	(bad)  
  425af3:	xchg   DWORD PTR [ebx],esi
  425af5:	loope  0x425b3b
  425af7:	bound  ecx,QWORD PTR [eax]
  425af9:	xor    eax,0x604be838
  425afe:	ins    DWORD PTR es:[edi],dx
  425aff:	test   DWORD PTR [ebx+0x75ee870a],0x104519c5
  425b09:	dec    edi
  425b0a:	(bad)  
  425b0b:	je     0x425b87
  425b0d:	arpl   WORD PTR [esi+0x77076e2],bp
  425b13:	jecxz  0x425adf
  425b15:	jo     0x425ab1
  425b17:	jecxz  0x425b48
  425b19:	and    BYTE PTR [ebp-0x9],ch
  425b1c:	test   DWORD PTR [edx-0xc7cfb29],ecx
  425b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b23:	test   al,0xe7
  425b25:	icebp  
  425b26:	cld    
  425b27:	ret    
  425b28:	xchg   DWORD PTR [esi],ebp
  425b2a:	xchg   esp,eax
  425b2b:	mov    esi,0x9f2ff0e9
  425b30:	add    DWORD PTR [edx-0x56],edi
  425b33:	ja     0x425b7f
  425b35:	out    dx,eax
  425b36:	and    al,ah
  425b38:	jne    0x425b22
  425b3a:	adc    al,0x3b
  425b3c:	adc    BYTE PTR [esi+0x70],ch
  425b3f:	xor    BYTE PTR [ecx+0x7a],al
  425b42:	mov    eax,0x2fdb3d9c
  425b47:	add    al,0x0
  425b49:	repz cld 
  425b4b:	sbb    edi,edi
  425b4d:	push   ebp
  425b4e:	xchg   ebx,eax
  425b4f:	mov    ds:0xfb,eax
  425b54:	(bad)  
  425b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b56:	xchg   edi,eax
  425b57:	push   ss
  425b58:	and    DWORD PTR [edx],ebp
  425b5a:	test   eax,0xfbbc3384
  425b5f:	xchg   BYTE PTR ds:0xae86dd35,ch
  425b65:	lahf   
  425b66:	jp     0x425b63
  425b68:	lahf   
  425b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b6a:	test   al,0x15
  425b6c:	sti    
  425b6d:	mov    esi,0xa16a003f
  425b72:	jl     0x425bae
  425b74:	jbe    0x425b47
  425b76:	das    
  425b77:	or     eax,0xdf9be178
  425b7c:	and    ah,dl
  425b7e:	test   al,0x53
  425b80:	or     esi,esi
  425b82:	push   ss
  425b83:	cli    
  425b84:	in     al,dx
  425b85:	pop    ecx
  425b86:	xchg   edi,eax
  425b87:	in     al,0x5a
  425b89:	or     ch,BYTE PTR [ecx+0x4900ab7f]
  425b8f:	pop    edx
  425b90:	cmp    bh,dl
  425b92:	ror    DWORD PTR [ebx+esi*8],0x2a
  425b96:	les    esi,FWORD PTR [esp+eax*1+0x2d]
  425b9a:	lods   al,BYTE PTR ds:[esi]
  425b9b:	sti    
  425b9c:	inc    edi
  425b9d:	pop    es
  425b9e:	pop    ds
  425b9f:	test   DWORD PTR [edi],esi
  425ba1:	jecxz  0x425b87
  425ba3:	add    esp,DWORD PTR [edi]
  425ba5:	(bad)  
  425ba6:	gs daa 
  425ba8:	iret   
  425ba9:	push   cs
  425baa:	jmp    0xef5e4f2b
  425baf:	sbb    eax,0xdfd49a40
  425bb4:	inc    BYTE PTR [esi-0x17]
  425bb7:	pushf  
  425bb8:	add    BYTE PTR [eax],al
  425bba:	add    ch,dh
  425bbc:	cdq    
  425bbd:	xor    eax,0x1d99f4e0
  425bc2:	loopne 0x425bb0
  425bc4:	ss xchg ecx,eax
  425bc6:	xchg   BYTE PTR ds:0x337e9298,bh
  425bcc:	pop    ds
  425bcd:	out    dx,al
  425bce:	jle    0x425c31
  425bd0:	adc    bl,ch
  425bd2:	test   al,0xfe
  425bd4:	(bad)  
  425bd5:	xlat   BYTE PTR ds:[ebx]
  425bd6:	inc    ebx
  425bd7:	repz (bad) 
  425bd9:	jmp    0x425b77
  425bdb:	in     eax,dx
  425bdc:	xor    DWORD PTR [ebx+0x2f],0xfffffff1
  425be0:	shr    ebx,0x50
  425be3:	repz push es
  425be5:	jmp    0x27db976e
  425bea:	sti    
  425beb:	and    al,0x32
  425bed:	pop    esi
  425bee:	xchg   edi,eax
  425bef:	lods   al,BYTE PTR ds:[esi]
  425bf0:	xor    BYTE PTR [esi-0x4d],ch
  425bf3:	les    edi,FWORD PTR [ebp+0x4d87b4fe]
  425bf9:	test   ax,0x1208
  425bfd:	mov    ds:0x9d0e9fea,eax
  425c02:	inc    edx
  425c03:	mov    ebx,0xf42fe538
  425c08:	mov    ebp,ebx
  425c0a:	sbb    eax,0x9bb635e5
  425c0f:	es mov ch,0x3
  425c12:	test   al,0x6c
  425c14:	rcl    DWORD PTR [ebp+0xf3676],1
  425c1a:	cdq    
  425c1b:	and    ebx,DWORD PTR [ebp+esi*2+0xe1]
  425c22:	mov    edx,ebp
  425c24:	cli    
  425c25:	cld    
  425c26:	int3   
  425c27:	or     al,BYTE PTR [eax-0x17]
  425c2a:	jae    0x425bf3
  425c2c:	je     0x425c1a
  425c2e:	xchg   edi,eax
  425c2f:	sbb    ecx,DWORD PTR [eax]
  425c31:	push   ebp
  425c32:	push   es
  425c33:	xor    BYTE PTR [ebp-0xb],0x89
  425c37:	test   eax,0xf255e274
  425c3c:	pop    ss
  425c3d:	fdiv   DWORD PTR [eax]
  425c3f:	pop    es
  425c40:	mov    edi,esp
  425c42:	pop    ecx
  425c43:	test   BYTE PTR [esi-0x7908a752],0x24
  425c4a:	imul   edx,ecx,0xffffffbe
  425c4d:	sbb    eax,0x3600c565
  425c52:	test   DWORD PTR [esi],0x9c976a00
  425c58:	pop    edx
  425c59:	and    bh,BYTE PTR [edx-0x5c16f7a8]
  425c5f:	jg     0x425c4d
  425c61:	sbb    BYTE PTR [esi+0x72588734],ah
  425c67:	xchg   ebp,eax
  425c68:	je     0x425c18
  425c6a:	jno    0x425c09
  425c6c:	sti    
  425c6d:	fucomp st(2)
  425c6f:	pop    ss
  425c70:	call   0x4839295e
  425c75:	mov    ebp,0xfe754018
  425c7a:	jmp    0xbfe9:0x4425398
  425c81:	test   eax,0x292e9959
  425c86:	add    BYTE PTR [eax],al
  425c88:	add    BYTE PTR [edi+0x7ff1457f],bl
  425c8e:	dec    eax
  425c8f:	push   eax
  425c90:	(bad)  
  425c91:	in     eax,0x9f
  425c93:	mov    eax,0x849b9538
  425c98:	add    BYTE PTR [edx],cl
  425c9a:	xlat   BYTE PTR ds:[ebx]
  425c9b:	or     bh,bh
  425c9d:	test   BYTE PTR [esi],bl
  425c9f:	jne    0x425c99
  425ca1:	repnz cli 
  425ca3:	sar    dh,1
  425ca5:	int    0x17
  425ca7:	shl    BYTE PTR [edi+eax*8+0x1c],0x45
  425cac:	clc    
  425cad:	ror    DWORD PTR [eax*4-0x908b901],0x15
  425cb5:	mov    ds:0x23003ff2,al
  425cba:	cdq    
  425cbb:	loop   0x425cc7
  425cbd:	pop    ss
  425cbe:	popa   
  425cbf:	je     0x425cc7
  425cc1:	push   ebp
  425cc2:	cwde   
  425cc3:	dec    esi
  425cc4:	add    BYTE PTR [edx+0x4dc87b03],cl
  425cca:	inc    ecx
  425ccb:	leave  
  425ccc:	ret    0x356
  425ccf:	test   esi,esi
  425cd1:	push   es
  425cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cd3:	jp     0x425cd3
  425cd5:	ins    DWORD PTR es:[edi],dx
  425cd6:	out    0x15,eax
  425cd8:	push   edi
  425cd9:	loope  0x425c7c
  425cdb:	test   bh,bh
  425cdd:	inc    esi
  425cde:	sahf   
  425cdf:	add    bh,0x72
  425ce2:	sbb    edx,eax
  425ce4:	dec    ch
  425ce6:	dec    eax
  425ce7:	call   0xf7a37f7b
  425cec:	push   esi
  425ced:	add    BYTE PTR [eax],al
  425cef:	add    dl,al
  425cf1:	sbb    ch,BYTE PTR [eax-0x2]
  425cf4:	mov    ebp,0xc95fbb94
  425cf9:	xchg   al,al
  425cfb:	je     0x425d01
  425cfd:	pop    eax
  425cfe:	add    BYTE PTR [edi+0x1a],dl
  425d01:	add    eax,DWORD PTR [eax]
  425d03:	adc    edx,0x60
  425d06:	mov    ebx,0x816f9155
  425d0b:	in     al,dx
  425d0c:	add    al,BYTE PTR ds:0x11a50000
  425d12:	jge    0x425d2c
  425d14:	repz sub al,BYTE PTR [eax-0x5dfa2108]
  425d1b:	push   eax
  425d1c:	push   0x1de7f763
  425d21:	mov    ds:0x2424ffff,al
  425d26:	mov    edi,0x2ba4e774
  425d2b:	adc    al,0x66
  425d2d:	and    ebp,DWORD PTR [ebp+edi*8+0x75a5b5ac]
  425d34:	test   edi,0xc59e379b
  425d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d3b:	leave  
  425d3c:	mov    al,0x19
  425d3e:	cmp    edx,DWORD PTR [esi+esi*2]
  425d41:	pusha  
  425d42:	xor    BYTE PTR [edx],al
  425d44:	lods   al,BYTE PTR ds:[esi]
  425d45:	mov    al,ds:0x9ff3004c
  425d4a:	or     al,0x74
  425d4d:	push   edi
  425d4e:	rol    DWORD PTR [edi+0x51fbcbb7],0x0
  425d55:	add    BYTE PTR [eax],al
  425d57:	fs hlt 
  425d59:	fisttp WORD PTR [edi]
  425d5b:	push   0x5417dffc
  425d60:	xchg   esp,eax
  425d61:	fisttp DWORD PTR [edi]
  425d63:	pop    ebx
  425d64:	loopne 0x425d07
  425d66:	sti    
  425d67:	inc    esp
  425d68:	inc    al
  425d6a:	xchg   DWORD PTR [edi+0x3452fbcb],esi
  425d70:	mov    ah,0xdb
  425d72:	adc    edi,DWORD PTR [eax-0x4c]
  425d75:	fist   DWORD PTR [ebx]
  425d77:	and    al,0xb4
  425d79:	fisttp DWORD PTR [edi]
  425d7b:	or     edi,DWORD PTR [ecx+0x6d14fba5]
  425d81:	rol    BYTE PTR [edi+0x51fc0bb7],0x78
  425d88:	push   esp
  425d89:	fild   DWORD PTR [edi]
  425d8b:	or     ebp,DWORD PTR [esi-0x5c]
  425d8e:	sti    
  425d8f:	hlt    
  425d90:	push   es
  425d91:	ret    
  425d92:	shl    BYTE PTR [edx+ecx*2-0x3b],0xf7
  425d97:	ins    DWORD PTR es:[edi],dx
  425d98:	inc    edx
  425d99:	int    0xff
  425d9b:	inc    ecx
  425d9c:	xchg   esi,eax
  425d9d:	xchg   ebp,eax
  425d9e:	fucomip st,st(0)
  425da0:	add    DWORD PTR [ebp+0x289ee4df],0x9295c8a6
  425daa:	shl    BYTE PTR [esi],0x82
  425dad:	std    
  425dae:	add    bh,0xfe
  425db1:	out    0x3,al
  425db3:	repz cmp eax,0x8403266e
  425db9:	ins    BYTE PTR es:[edi],dx
  425dba:	stos   DWORD PTR es:[edi],eax
  425dbb:	add    BYTE PTR [eax],al
  425dbd:	add    BYTE PTR [esi+0x6c53ca95],bl
  425dc3:	dec    ebx
  425dc4:	icebp  
  425dc5:	fwait
  425dc6:	js     0x425dcf
  425dc8:	jmp    0xa9cd85d0
  425dcd:	das    
  425dce:	out    0x83,eax
  425dd0:	fs stos DWORD PTR es:[edi],eax
  425dd2:	jbe    0x425d69
  425dd4:	mov    ds:0xb6845b53,al
  425dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dda:	push   0xf72fa98a
  425ddf:	fldcw  WORD PTR [eax-0x4e766b46]
  425de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425de6:	cmp    cl,cl
  425de8:	adc    al,0x79
  425dea:	push   edi
  425deb:	xchg   DWORD PTR [ebp-0x166ac2ed],eax
  425df1:	push   eax
  425df2:	mov    eax,ds:0x7e00cf3d
  425df7:	sbb    esp,DWORD PTR [ecx+0x44]
  425dfa:	lea    esp,[edi]
  425dfc:	mov    edi,0xab9ebb29
  425e01:	adc    esi,ebx
  425e03:	push   es
  425e04:	retf   
  425e05:	jp     0x425df8
  425e07:	mov    DWORD PTR [ebx],esp
  425e09:	add    DWORD PTR [eax+0x344001b],edi
  425e0f:	push   ebp
  425e10:	bound  esp,QWORD PTR [eax-0x4b]
  425e13:	nop
  425e14:	xchg   DWORD PTR [eax+eax*1+0x186ad6e4],ebp
  425e1b:	or     eax,DWORD PTR [ecx]
  425e1d:	pushf  
  425e1e:	fisttp QWORD PTR [ebp+0xe170]
  425e24:	add    BYTE PTR [ebx-0x6b],bh
  425e27:	inc    DWORD PTR cs:[esi-0x76]
  425e2b:	lock cld 
  425e2d:	nop
  425e2e:	nop
  425e2f:	push   eax
  425e30:	add    DWORD PTR [ebx+0x20e90000],esp
  425e36:	add    BYTE PTR [ebp-0x1f],0xe7
  425e3a:	test   edx,eax
  425e3c:	pop    es
  425e3d:	sti    
  425e3e:	push   es
  425e3f:	add    BYTE PTR [edi],bh
  425e41:	push   eax
  425e42:	cli    
  425e43:	jnp    0x425e3d
  425e45:	xor    BYTE PTR [edi],al
  425e47:	test   DWORD PTR [ecx+0x648d16eb],ebp
  425e4d:	pop    edi
  425e4e:	xchg   edx,eax
  425e4f:	sti    
  425e50:	mov    dh,0xc7
  425e52:	(bad)  
  425e53:	adc    eax,0xffd47c55
  425e58:	jno    0x425e99
  425e5a:	add    BYTE PTR [ebp-0x46f6d67],0x60
  425e61:	ret    0x36f6
  425e64:	mov    eax,ds:0x4873afb
  425e69:	jecxz  0x425df6
  425e6b:	jne    0x425e5e
  425e6d:	ins    DWORD PTR es:[edi],dx
  425e6e:	enter  0x6afa,0x29
  425e72:	xchg   ebp,eax
  425e73:	jecxz  0x425e84
  425e75:	jno    0x425e08
  425e77:	sti    
  425e78:	push   0xffffff8f
  425e7a:	nop
  425e7b:	je     0x425e9c
  425e7d:	fadd   QWORD PTR [ebx+0x53]
  425e80:	mov    edi,0xf9758fe0
  425e85:	fld    QWORD PTR [ebx-0x5]
  425e88:	add    BYTE PTR [eax],al
  425e8a:	add    BYTE PTR [eax],al
  425e8c:	das    
  425e8d:	clc    
  425e8e:	or     DWORD PTR [eax+0x1a],eax
  425e91:	mov    ch,0xba
  425e93:	jle    0x425e85
  425e95:	mov    bl,0xf2
  425e97:	jle    0x425ead
  425e99:	ja     0x425ea7
  425e9b:	xor    dl,dl
  425e9d:	shl    dh,cl
  425e9f:	je     0x425e6d
  425ea1:	mov    ah,0xbe
  425ea3:	jge    0x425e85
  425ea5:	jg     0x425ec0
  425ea7:	push   0xffffffc8
  425ea9:	fisttp WORD PTR [ebx]
  425eab:	mov    ebx,DWORD PTR [edx-0x3d8a08f9]
  425eb1:	push   0x479c3015
  425eb6:	add    BYTE PTR [ebx],dh
  425eb8:	or     cl,BYTE PTR [esp+eax*8-0x59c25f4]
  425ebf:	xor    bl,BYTE PTR [edx+0x48]
  425ec2:	push   esi
  425ec3:	pop    ebx
  425ec4:	push   ebx
  425ec5:	int3   
  425ec6:	sub    eax,eax
  425ec8:	retf   0x55cb
  425ecb:	mov    esp,DWORD PTR [esi-0x23c31374]
  425ed1:	iret   
  425ed2:	cmp    BYTE PTR [ebp-0x5a],0xd0
  425ed6:	div    BYTE PTR [ebp-0x5e]
  425ed9:	loope  0x425eda
  425edb:	imul   ebx,DWORD PTR [edx+0x68],0xb9820875
  425ee2:	stc    
  425ee3:	inc    DWORD PTR [ebp-0x717c0f7c]
  425ee9:	fwait
  425eea:	test   dh,dh
  425eec:	dec    esi
  425eed:	fdivr  DWORD PTR [edx-0x2]
  425ef0:	add    BYTE PTR [eax],al
  425ef2:	add    ch,al
  425ef4:	sti    
  425ef5:	popa   
  425ef6:	mov    ecx,DWORD PTR [esi+esi*2+0x4d]
  425efa:	(bad)  
  425efb:	(bad)  [edi+0x30]
  425efe:	jmp    FWORD PTR [edi]
  425f00:	(bad)  
  425f01:	or     eax,0xc07e1a40
  425f06:	jne    0x425efb
  425f08:	stos   BYTE PTR es:[edi],al
  425f09:	mov    al,BYTE PTR [ebp-0x5]
  425f0c:	inc    ebp
  425f0d:	mov    eax,0x824c0cfd
  425f12:	enter  0x3804,0x4a
  425f16:	lea    esi,[esi-0x5172d12b]
  425f1c:	cmc    
  425f1d:	cs sti 
  425f1f:	push   es
  425f20:	and    al,0xf4
  425f22:	aas    
  425f23:	repz sub bh,BYTE PTR [edi+0x17f90374]
  425f2a:	adc    BYTE PTR [esi+0x6b],ah
  425f2d:	xchg   edi,eax
  425f2e:	sti    
  425f2f:	inc    esi
  425f30:	pushf  
  425f31:	das    
  425f32:	sti    
  425f33:	fiadd  WORD PTR [edi+0x24f33ff4]
  425f39:	dec    eax
  425f3a:	les    ebp,FWORD PTR [eax+0x73]
  425f3d:	repz jle 0x425ed3
  425f40:	add    DWORD PTR [esi],esp
  425f42:	mov    edx,esi
  425f44:	sbb    al,0x21
  425f46:	add    al,0xf2
  425f48:	xor    al,BYTE PTR [ebx]
  425f4a:	xchg   DWORD PTR [eax+ebp*4],edx
  425f4d:	lods   al,BYTE PTR ds:[esi]
  425f4e:	inc    cl
  425f50:	enter  0x7b84,0xdf
  425f54:	sahf   
  425f55:	adc    cl,BYTE PTR [eax]
  425f57:	add    BYTE PTR [eax],al
  425f59:	add    dh,ch
  425f5b:	pop    ds
  425f5c:	add    al,0x0
  425f5e:	repz dec ecx
  425f60:	xchg   DWORD PTR [ecx],eax
  425f62:	js     0x425fc6
  425f64:	inc    ecx
  425f65:	pop    edx
  425f66:	cmp    bl,BYTE PTR [ebp+0x33]
  425f69:	xchg   DWORD PTR [edi+0x1f],ecx
  425f6c:	mov    al,0x8
  425f6e:	icebp  
  425f6f:	lahf   
  425f70:	dec    DWORD PTR [esi-0x5b]
  425f73:	adc    al,0xd3
  425f75:	psrad  mm3,mm7
  425f78:	add    eax,DWORD PTR [edi-0x790bf7e5]
  425f7e:	mov    bl,0x9f
  425f80:	xor    al,0xfb
  425f82:	inc    ebp
  425f83:	pop    es
  425f84:	ins    BYTE PTR es:[edi],dx
  425f85:	les    ebx,FWORD PTR [esi-0x14b69208]
  425f8b:	or     esi,ebx
  425f8d:	add    eax,0xa0b906f3
  425f92:	xchg   dh,bh
  425f94:	inc    ecx
  425f95:	imul   esp
  425f97:	imul   DWORD PTR [eax+0x3e084303]
  425f9d:	inc    eax
  425f9e:	mov    edi,edx
  425fa0:	pop    ebp
  425fa1:	inc    esp
  425fa2:	repz xor eax,0xc66eba22
  425fa8:	xchg   esp,eax
  425fa9:	or     esi,DWORD PTR [ecx+ecx*2-0x1f]
  425fad:	test   BYTE PTR [ebx+0x55c1fdf8],dh
  425fb3:	add    eax,0x466c0f91
  425fb8:	jmp    0x653e17f1
  425fbd:	cmc    
  425fbe:	add    BYTE PTR [eax],al
  425fc0:	add    ah,dh
  425fc2:	push   es
  425fc3:	les    esp,FWORD PTR fs:[esi]
  425fc6:	fist   DWORD PTR [eax+0x8]
  425fc9:	repnz push es
  425fcb:	jmp    0x3646bc54
  425fd0:	xor    al,0x66
  425fd2:	pop    ebx
  425fd3:	rcr    DWORD PTR [esi-0x34996e78],1
  425fd9:	mov    BYTE PTR [esi-0x6e869c18],bl
  425fdf:	ins    BYTE PTR es:[edi],dx
  425fe0:	ret    
  425fe1:	stc    
  425fe2:	out    dx,al
  425fe3:	pop    ebp
  425fe4:	leave  
  425fe5:	ret    
  425fe6:	jge    0x426012
  425fe8:	or     al,0xee
  425fea:	call   0x373563d3
  425fef:	xchg   edx,eax
  425ff0:	push   ss
  425ff1:	jmp    0x425f91
  425ff3:	cmc    
  425ff4:	inc    ecx
  425ff5:	repz push es
  425ff7:	ins    BYTE PTR es:[edi],dx
  425ff8:	ret    
  425ff9:	mov    esi,0x99c3b764
  425ffe:	sub    eax,0xa2ea000
  426003:	add    BYTE PTR [edx],bl
  426005:	inc    esi
  426006:	mov    eax,0xfdecc739
  42600b:	test   BYTE PTR [eax+esi*8+0x18c10006],al
  426012:	mov    BYTE PTR [eax-0x17],al
  426015:	push   ebx
  426016:	sti    
  426017:	push   edi
  426018:	(bad)  [eax+0x1fe78906]
  42601e:	push   eax
  42601f:	or     ebp,DWORD PTR [ebp-0x80]
  426022:	push   es
  426023:	add    cl,ch
  426025:	add    BYTE PTR [eax],al
  426027:	add    BYTE PTR [eax],bl
  426029:	das    
  42602a:	or     ecx,ebp
  42602c:	lock sub BYTE PTR [eax],cl
  42602f:	push   ds
  426030:	lds    esi,FWORD PTR [eax-0x740f5559]
  426036:	adc    eax,0xffd0c7e5
  42603b:	outs   dx,DWORD PTR ds:[esi]
  42603c:	cmp    bh,bh
  42603e:	ss sub ah,ah
  426041:	and    dl,BYTE PTR [ebx+0x62]
  426044:	xchg   ebp,eax
  426045:	dec    esp
  426046:	push   cs
  426047:	test   eax,0x72301ef0
  42604c:	das    
  42604d:	pop    es
  42604e:	sti    
  42604f:	pop    ss
  426050:	jl     0x426006
  426052:	xchg   DWORD PTR [edi],esp
  426054:	out    0x1e,eax
  426056:	cmp    al,0x62
  426058:	aaa    
  426059:	pop    es
  42605a:	mov    DWORD PTR [eax],ebp
  42605c:	sti    
  42605d:	mov    esi,DWORD PTR [edx]
  42605f:	mov    esi,0xe14a8844
  426064:	enter  0x873e,0x29
  426068:	idiv   DWORD PTR [ebp+0x41]
  42606b:	icebp  
  42606c:	test   ebp,edx
  42606e:	cli    
  42606f:	mov    dh,0x68
  426071:	cmp    eax,0x88170108
  426076:	inc    eax
  426077:	jmp    0x4ea6fb
  42607c:	ins    DWORD PTR es:[edi],dx
  42607d:	mov    ecx,0x40c1d7f6
  426082:	or     BYTE PTR [ecx+0x46829b0b],cl
  426088:	adc    dl,cl
  42608a:	cmp    BYTE PTR [eax+0x0],bl
  42608d:	add    BYTE PTR [eax],al
  42608f:	push   ss
  426090:	clc    
  426091:	push   cs
  426092:	cmp    DWORD PTR [edx],esi
  426094:	cld    
  426095:	jae    0x4260a9
  426097:	add    edx,ebx
  426099:	or     esi,DWORD PTR [edi+ebp*1-0x4d]
  42609d:	push   ebx
  42609e:	adc    BYTE PTR [esi-0x4],al
  4260a1:	sub    al,al
  4260a3:	dec    edx
  4260a4:	cmp    DWORD PTR [esi],0x4
  4260a7:	popa   
  4260a8:	lds    edx,FWORD PTR [eax-0x18]
  4260ab:	sub    bh,bl
  4260ad:	cmc    
  4260ae:	jmp    DWORD PTR [ebx-0x2f]
  4260b1:	pop    es
  4260b2:	inc    esp
  4260b4:	jo     0x4260cb
  4260b6:	pop    esp
  4260b7:	fadd   DWORD PTR [ebx+0x0]
  4260ba:	mov    esp,ebx
  4260bc:	mov    ch,0xbb
  4260be:	pop    ebx
  4260bf:	sbb    DWORD PTR [esi+edi*1+0x8],edi
  4260c3:	gs (bad) 
  4260c5:	sbb    eax,0x5003ca04
  4260ca:	mov    edi,0xa96
  4260cf:	in     eax,0x6f
  4260d1:	adc    eax,0x439918
  4260d6:	test   DWORD PTR [edx-0x12],ecx
  4260d9:	(bad)  
  4260da:	xor    DWORD PTR [edx+0x62],ebx
  4260dd:	clc    
  4260de:	add    BYTE PTR [edx-0x7db17cfd],bl
  4260e4:	jl     0x42613a
  4260e6:	and    al,0x92
  4260e8:	fadd   DWORD PTR [eax+0x53cc1]
  4260ee:	add    BYTE PTR [edx+0xfe9c4a],al
  4260f4:	add    BYTE PTR [eax],al
  4260f6:	jge    0x426176
  4260f8:	shl    BYTE PTR [ebp-0xd],0x7b
  4260fc:	xchg   BYTE PTR [edx-0x5],cl
  4260ff:	xor    eax,0x844fb9a
  426104:	lea    eax,[ecx-0x57fd]
  42610a:	push   0x72890be7
  42610f:	pop    ecx
  426110:	add    eax,0x4514f300
  426115:	or     al,al
  426117:	in     al,dx
  426118:	mov    dh,0x89
  42611a:	jnp    0x426111
  42611c:	add    DWORD PTR [eax],eax
  42611e:	repz and al,0x45
  426121:	or     BYTE PTR [edx+0x25],bh
  426124:	fild   DWORD PTR [ecx]
  426126:	repz popf 
  426128:	xchg   BYTE PTR [edx-0x15],al
  42612b:	es ja  0x42616e
  42612e:	cmc    
  42612f:	lahf   
  426130:	inc    DWORD PTR [esi-0x7f3d67d3]
  426136:	aaa    
  426137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426138:	(bad)  
  426139:	push   edx
  42613b:	lahf   
  42613c:	(bad)  
  42613d:	(bad)  
  42613e:	js     0x4261a6
  426140:	pop    es
  426141:	mov    DWORD PTR [ebx+0x58],ebp
  426144:	add    eax,0x4518f300
  426149:	or     BYTE PTR [eax],al
  42614b:	out    0x24,eax
  42614d:	mov    DWORD PTR [ebx+0x70],edi
  426150:	add    eax,0x4218f300
  426155:	or     BYTE PTR [ebx-0x78],ch
  426158:	add    al,BYTE PTR cs:[eax]
  42615b:	add    BYTE PTR [eax],al
  42615d:	repz lahf 
  42615f:	mov    BYTE PTR [edx-0x5],al
  426162:	inc    edi
  426163:	out    dx,al
  426164:	xchg   BYTE PTR [ebx],dh
  426166:	mov    al,ds:0x9ff44e02
  42616b:	dec    DWORD PTR [edi+0x74]
  42616e:	stos   DWORD PTR es:[edi],eax
  42616f:	or     edx,DWORD PTR [ecx]
  426171:	mov    bl,0x9f
  426173:	mov    BYTE PTR [edx-0x5],al
  426176:	push   es
  426177:	stac   
  42617a:	imul   BYTE PTR [ebp+0x44]
  42617d:	repz add esi,DWORD PTR [edi]
  426180:	or     al,0xf3
  426182:	push   es
  426183:	cmp    DWORD PTR [ebp+0x43d7f2de],ebx
  426189:	repz and DWORD PTR [ebx],0x617ba10c
  426190:	aam    0xf2
  426192:	push   es
  426193:	jmp    0x1afcfcca
  426198:	inc    edx
  426199:	repz push ds
  42619b:	ja     0x426172
  42619d:	(bad)  
  42619e:	push   es
  42619f:	rcr    DWORD PTR [ecx],0xc0
  4261a2:	dec    eax
  4261a3:	jmp    0xa717eed3
  4261a8:	add    ecx,DWORD PTR [ebx-0xcbe0dc8]
  4261ae:	push   ds
  4261af:	out    dx,eax
  4261b0:	aam    0x2e
  4261b2:	pop    es
  4261b3:	rcl    DWORD PTR [eax+0x2be94921],0x40
  4261ba:	shl    DWORD PTR [esi-0x22c3b4fd],cl
  4261c0:	inc    ecx
  4261c1:	add    BYTE PTR [eax],al
  4261c3:	add    bl,dh
  4261c5:	jnp    0x426162
  4261c7:	cvtdq2ps xmm3,XMMWORD PTR [edx+ebx*2]
  4261cb:	inc    esp
  4261cc:	repz aaa 
  4261ce:	cli    
  4261cf:	xor    ebp,edi
  4261d1:	and    DWORD PTR [ebx+0x5e077a0b],0xad89fb46
  4261db:	xlat   BYTE PTR ds:[ebx]
  4261dc:	int    0xbf
  4261de:	and    ah,bh
  4261e0:	cmp    eax,0x28c37bfe
  4261e5:	leave  
  4261e6:	in     eax,0x3
  4261e8:	ins    BYTE PTR es:[edi],dx
  4261e9:	inc    esp
  4261ea:	in     eax,dx
  4261eb:	dec    ebx
  4261ec:	pop    es
  4261ed:	or     dh,BYTE PTR [ecx]
  4261ef:	pop    ss
  4261f0:	fild   WORD PTR [ecx+0xdff2f00]
  4261f6:	cmp    cl,ch
  4261f8:	cld    
  4261f9:	cli    
  4261fa:	cli    
  4261fb:	fnstcw WORD PTR [edi+0x36]
  4261fe:	adc    BYTE PTR [edx-0x52],dh
  426201:	(bad)  
  426202:	jle    0x4261cd
  426204:	lock das 
  426206:	mov    edi,0x7f9a7a34
  42620b:	xchg   ebp,eax
  42620c:	in     al,dx
  42620d:	cmp    eax,0xfadd7e53
  426212:	cli    
  426213:	fdiv   QWORD PTR [eax-0x4]
  426216:	aas    
  426217:	jmp    0x4271f097
  42621c:	ins    DWORD PTR es:[edi],dx
  42621d:	dec    ecx
  42621e:	sti    
  42621f:	jo     0x4261f6
  426221:	xchg   edx,eax
  426222:	mov    DWORD PTR [esp+ebp*2+0xe9f9cb],esi
  426229:	add    BYTE PTR [eax],al
  42622b:	lock push es
  42622d:	or     ebp,DWORD PTR [esi-0x7d]
  426230:	push   es
  426231:	add    cl,ch
  426233:	imul   eax,DWORD PTR [eax+0x8],0x62
  426237:	and    eax,0xf1e567ff
  42623c:	push   es
  42623d:	add    BYTE PTR [edx-0x4f],ch
  426240:	stc    
  426241:	out    0x1f,eax
  426243:	pop    edx
  426244:	xchg   ecx,eax
  426245:	sti    
  426246:	ins    BYTE PTR es:[edi],dx
  426247:	mov    al,0x12
  426249:	jl     0x426201
  42624b:	adc    cl,BYTE PTR [si]
  42624e:	je     0x426285
  426250:	xchg   ebx,eax
  426251:	push   eax
  426252:	adc    DWORD PTR [esi],ecx
  426254:	push   ecx
  426255:	sti    
  426256:	div    BYTE PTR [ebp-0x39]
  426259:	je     0x4261dd
  42625b:	jno    0x426267
  42625d:	cld    
  42625e:	jmp    0x5b42695a
  426263:	mov    ds:0xe2d6533d,al
  426268:	cli    
  426269:	dec    esi
  42626a:	rcl    eax,0x63
  42626d:	cli    
  42626e:	add    BYTE PTR [ebp-0x33740784],dh
  426274:	cli    
  426275:	xchg   DWORD PTR [eax+0x4e],ebx
  426278:	pop    ebp
  426279:	add    cl,BYTE PTR [ebx+0x7d82fb0c]
  42627f:	jle    0x42624a
  426281:	inc    eax
  426282:	adc    al,0x4b
  426284:	lods   eax,DWORD PTR ds:[esi]
  426285:	bnd je 0x4262ba
  426288:	jge    0x4262c8
  42628a:	or     al,dh
  42628c:	add    DWORD PTR [eax-0x5a],ebp
  42628f:	add    BYTE PTR [eax],al
  426291:	add    BYTE PTR [edx],dh
  426293:	inc    edx
  426294:	add    BYTE PTR [eax-0x19],ch
  426297:	pop    ss
  426298:	inc    eax
  426299:	add    dl,dh
  42629b:	and    al,0x38
  42629d:	inc    edx
  42629e:	sbb    dl,ch
  4262a0:	dec    esi
  4262a1:	push   0x407d1e
  4262a6:	mov    ch,0xb2
  4262a8:	not    BYTE PTR [eax+0x12]
  4262ab:	test   esp,eax
  4262ad:	and    BYTE PTR [edi-0x366af83e],cl
  4262b3:	stos   DWORD PTR es:[edi],eax
  4262b4:	jl     0x4262aa
  4262b6:	ds push es
  4262b8:	dec    edi
  4262b9:	call   0x3847ea
  4262be:	adc    eax,0x4e8f3f6
  4262c3:	in     eax,0xf5
  4262c5:	jmp    DWORD PTR [eax-0x3c]
  4262c8:	jecxz  0x4262d4
  4262ca:	in     eax,0xf5
  4262cc:	repz call 0x3847ca
  4262d2:	js     0x42629b
  4262d4:	push   edi
  4262d5:	pop    ebx
  4262d6:	add    eax,ebp
  4262d8:	or     BYTE PTR [eax],al
  4262da:	(bad)  
  4262db:	jl     0x4262c9
  4262dd:	mov    ecx,DWORD PTR [edi+0x3]
  4262e0:	sub    esp,0x1a2
  4262e6:	fld    QWORD PTR [ebx-0x320cd340]
  4262ec:	xchg   esi,eax
  4262ed:	jne    0x4262ea
  4262ef:	sub    al,BYTE PTR [eax-0x693b8108]
  4262f5:	push   eax
  4262f6:	add    BYTE PTR [eax],al
  4262f8:	add    BYTE PTR [eax-0x3a],ch
  4262fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262fc:	es enter 0xff9d,0x84
  426301:	xor    edx,ecx
  426303:	loop   0x42628b
  426305:	mov    ah,0x91
  426307:	xor    DWORD PTR [edi-0x7b775e24],eax
  42630d:	mov    dh,0x75
  42630f:	cwde   
  426310:	sti    
  426311:	inc    esp
  426312:	int    0x88
  426314:	test   DWORD PTR [ebx],edi
  426316:	adc    BYTE PTR [esi-0x6d8a5c05],0xfa
  42631d:	sub    al,0x14
  42631f:	cmp    DWORD PTR [ebx+esi*1-0x4b04fd6f],eax
  426326:	xchg   ebp,eax
  426327:	sar    BYTE PTR [edi+0x8c4d6b4],cl
  42632d:	repz dec edx
  42632f:	mov    ch,ah
  426331:	jo     0x4262fc
  426333:	retf   0xa54e
  426336:	nop
  426337:	mov    edx,0x401ae766
  42633c:	fadd   QWORD PTR [eax+0x70]
  42633f:	mov    WORD PTR [ebp-0x3d],ds
  426342:	daa    
  426343:	cmp    ah,dl
  426345:	push   0xffffffc3
  426347:	mov    bh,0xfb
  426349:	(bad)  
  42634a:	mov    bl,0xf1
  42634c:	aas    
  42634d:	repz sbb al,0xbb
  426350:	or     al,0x76
  426352:	jae    0x426303
  426354:	mov    DWORD PTR [esi],ebx
  426356:	clc    
  426357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426358:	ret    0x89b7
  42635b:	cdq    
  42635c:	test   BYTE PTR [eax],al
  42635e:	add    BYTE PTR [eax],al
  426360:	mov    bl,0xa1
  426362:	jnp    0x4262fe
  426364:	repz lahf 
  426366:	(bad)  
  426367:	cli    
  426368:	es pop es
  42636a:	icebp  
  42636b:	stos   DWORD PTR es:[edi],eax
  42636c:	or     al,0x8c
  42636e:	ficomp DWORD PTR [ecx+0x7fe2c777]
  426374:	jns    0x42637d
  426376:	jmp    0xed54d77e
  42637b:	xchg   BYTE PTR [esi],ch
  42637d:	mov    bh,0x13
  42637f:	shl    DWORD PTR [esi-0x4c72b266],0x6
  426386:	pusha  
  426387:	aas    
  426388:	arpl   WORD PTR [eax-0xba76fbc],ax
  42638e:	push   0x60070cf6
  426393:	aas    
  426394:	dec    ebx
  426395:	into   
  426396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426397:	adc    ch,bh
  426399:	and    BYTE PTR [esi+0x18],ah
  42639c:	mov    cl,0x88
  42639e:	sbb    eax,0x6046f710
  4263a3:	aas    
  4263a4:	sub    ecx,DWORD PTR [edx+0x446ffff2]
  4263aa:	push   ebp
  4263ab:	lea    ebp,[eax]
  4263ad:	and    dl,0xab
  4263b0:	test   BYTE PTR [ebx],ch
  4263b2:	jmp    0x556e2dba
  4263b7:	adc    bl,cl
  4263b9:	jge    0x426367
  4263bb:	mov    ebx,0x44521b8b
  4263c0:	repz push ds
  4263c2:	xchg   esp,ebx
  4263c4:	add    BYTE PTR [eax],al
  4263c6:	add    BYTE PTR [esi],ah
  4263c8:	pop    es
  4263c9:	xchg   esi,eax
  4263ca:	cwde   
  4263cb:	and    ecx,DWORD PTR [edx-0x3cabf847]
  4263d1:	stc    
  4263d2:	shl    DWORD PTR [esi],0xfe
  4263d5:	out    0x7e,eax
  4263d7:	mov    bl,0x13
  4263d9:	out    0x8b,al
  4263db:	push   ds
  4263dc:	(bad)  
  4263dd:	jae    0x4263ee
  4263df:	mov    ds:0xa899d39e,eax
  4263e4:	mov    DWORD PTR [eax],eax
  4263e6:	(bad)  
  4263e7:	in     al,0xb2
  4263e9:	dec    eax
  4263ea:	jne    0x4263e3
  4263ec:	ds jne 0x4263e0
  4263ef:	jnp    0x426404
  4263f1:	fcom   st(1)
  4263f3:	mov    ecx,0xa9d6fa27
  4263f8:	sub    dl,al
  4263fa:	push   ebp
  4263fb:	call   0x5bdbd98d
  426400:	repz pop ebx
  426402:	(bad)  [eax-0x9d379fa]
  426408:	mov    eax,ds:0xb6ed5c29
  42640d:	call   0xfbcfe1a5
  426412:	jb     0x426421
  426414:	mov    bl,0x48
  426416:	sbb    eax,0xe1753eee
  42641b:	pop    ebx
  42641c:	adc    ebx,eax
  42641e:	xchg   ecx,eax
  42641f:	mov    ebp,0x497efa27
  426424:	sub    dl,al
  426426:	std    
  426427:	stc    
  426428:	lea    esi,[ebp-0x67]
  42642b:	add    BYTE PTR [eax],al
  42642d:	add    BYTE PTR [ebx-0xd],bh
  426430:	pop    ebx
  426431:	sti    
  426432:	mov    al,0x6
  426434:	cs sub edx,ecx
  426437:	xor    ecx,ecx
  426439:	sub    eax,DWORD PTR [ecx+ecx*4]
  42643c:	push   ebp
  42643d:	(bad)  
  42643e:	in     al,dx
  42643f:	loop   0x426448
  426441:	jb     0x426435
  426443:	xor    eax,0x378b2f87
  426448:	add    al,0x6c
  42644a:	mov    al,0x12
  42644c:	add    eax,0xe78cab6a
  426451:	test   DWORD PTR [esi],0x96114b89
  426457:	sbb    eax,0x8f7716fa
  42645c:	test   DWORD PTR [esi],ecx
  42645e:	in     al,dx
  42645f:	mul    bh
  426461:	add    BYTE PTR [esp+esi*8-0x3be9000b],dl
  426468:	je     0x426471
  42646a:	adc    DWORD PTR [esi],eax
  42646c:	or     esi,0xffffff8d
  42646f:	aad    0x7
  426471:	or     DWORD PTR [ebp+0x170a7470],0x70
  426478:	je     0x426480
  42647a:	lds    ebx,FWORD PTR [edx+0x7c]
  42647d:	xchg   edx,eax
  42647e:	mov    al,BYTE PTR [ebx+eax*4]
  426481:	push   es
  426482:	and    BYTE PTR [edx],al
  426484:	or     esi,0xffffffad
  426487:	xchg   ebx,eax
  426488:	push   esi
  426489:	xor    ebx,DWORD PTR [edx+0x4a04b9d1]
  42648f:	xlat   BYTE PTR ds:[ebx]
  426490:	sub    ah,0x0
  426493:	add    BYTE PTR [eax],al
  426495:	sbb    ebx,eax
  426497:	cmp    al,0xd7
  42649a:	js     0x426511
  42649c:	add    al,0x28
  42649e:	(bad)
  4264a2:	outs   dx,DWORD PTR ds:[esi]
  4264a3:	je     0x4264b9
  4264a5:	loopne 0x4264a9
  4264a7:	dec    esi
  4264a8:	push   0x3dae79
  4264ad:	lock add ch,al
  4264b0:	pop    ebp
  4264b1:	add    DWORD PTR [ebx],eax
  4264b3:	add    BYTE PTR [eax+0x13e37147],cl
  4264b9:	inc    esp
  4264ba:	(bad)  
  4264bc:	cmp    eax,0x620458
  4264c1:	mov    dl,0x1a
  4264c3:	pop    ebx
  4264c4:	jmp    FWORD PTR [ebp+0x470fc085]
  4264ca:	inc    esi
  4264cb:	test   DWORD PTR [eax+0x7500709f],0x69fe7cd2
  4264d5:	retf   
  4264d6:	jl     0x42649e
  4264d8:	dec    edx
  4264da:	jge    0x426521
  4264dc:	push   ebx
  4264de:	push   eax
  4264df:	int3   
  4264e0:	mov    edi,0x81a82526
  4264e5:	(bad)  
  4264e6:	or     ebp,edi
  4264e8:	jmp    FWORD PTR [esp+ebp*2-0x3589acd3]
  4264ef:	arpl   bp,di
  4264f1:	pushf  
  4264f2:	cwde   
  4264f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264f4:	xchg   esi,eax
  4264f5:	dec    ebp
  4264f6:	mov    al,ds:0xfb92
  4264fb:	add    BYTE PTR [esi],al
  4264fd:	call   0x810:0xb0797d86
  426504:	jb     0x4264b6
  426506:	into   
  426507:	cwde   
  426508:	loop   0x4264ca
  42650a:	mov    WORD PTR [ebp+0x67],?
  42650d:	mov    ch,0xda
  42650f:	pusha  
  426510:	gs push eax
  426512:	into   
  426513:	(bad)  
  426514:	push   0xffffffe2
  426516:	fwait
  426517:	aaa    
  426518:	xor    cl,ch
  42651a:	and    ebx,edi
  42651c:	(bad)  
  42651d:	cdq    
  42651e:	das    
  42651f:	xchg   DWORD PTR ds:0x3ca90285,ebp
  426525:	js     0x426550
  426527:	adc    al,0x66
  426529:	sbb    dh,BYTE PTR [ecx]
  42652b:	sti    
  42652c:	sub    al,0x8
  42652e:	das    
  42652f:	dec    edi
  426530:	jbe    0x4264bc
  426532:	push   edi
  426533:	jg     0x426560
  426535:	sbb    BYTE PTR [edi-0x6de0862d],ah
  42653b:	test   DWORD PTR [ebx],esi
  42653d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42653e:	clc    
  42653f:	xchg   BYTE PTR ds:0x4d88274d,ch
  426545:	pop    esp
  426546:	dec    DWORD PTR [esi+ebp*2-0x130469db]
  42654d:	mov    al,ds:0x704be6a7
  426552:	inc    DWORD PTR [ebx+esi*4+0x19c07065]
  426559:	pop    es
  42655a:	es adc dl,bh
  42655d:	cmp    DWORD PTR [ecx],ebp
  42655f:	sbb    eax,0x7a000000
  426564:	mov    WORD PTR [ecx-0x66],?
  426567:	mov    eax,0x5b805c86
  42656c:	add    BYTE PTR [edx],0x96
  42656f:	inc    ebx
  426570:	xchg   ah,dl
  426572:	jae    0x426568
  426574:	(bad)  
  426575:	call   0x74d655a3
  42657a:	mov    ds:0x4d716f3b,eax
  42657f:	mov    BYTE PTR [esi+0x4dec3771],al
  426585:	sub    al,0x98
  426587:	repnz push es
  426589:	jmp    0x8064f191
  42658e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42658f:	repnz push es
  426591:	jmp    0xb4e9d41c
  426596:	xchg   ebp,eax
  426597:	pop    eax
  426598:	(bad)  
  426599:	rol    DWORD PTR [ebx-0x56],1
  42659c:	sti    
  42659d:	sahf   
  42659e:	ror    BYTE PTR [eax+esi*2+0x6f304bc],cl
  4265a5:	pop    esi
  4265a6:	pop    ss
  4265a7:	inc    edi
  4265a8:	fimul  WORD PTR [ecx+0x2c94370f]
  4265ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265af:	ret    
  4265b0:	lock aam 0x38
  4265b3:	jbe    0x4265b9
  4265b5:	pop    ecx
  4265b6:	lods   al,BYTE PTR ds:[esi]
  4265b7:	and    ch,BYTE PTR [edx+0x4a94956b]
  4265bd:	cmc    
  4265be:	or     BYTE PTR [ebx],0x86
  4265c1:	jmp    0x3:0xe907697f
  4265c8:	add    BYTE PTR [eax],al
  4265ca:	je     0x42661a
  4265cc:	mov    ecx,0x3e9f6e86
  4265d1:	xchg   ebp,eax
  4265d2:	call   0x83c1d1ad
  4265d7:	jg     0x4265d9
  4265d9:	ss xchg dh,dl
  4265dc:	out    0xc5,eax
  4265de:	sbb    BYTE PTR [edi],al
  4265e0:	add    BYTE PTR [edi+esi*4+0x11],ch
  4265e4:	test   BYTE PTR [ecx-0x11],ch
  4265e7:	push   es
  4265e8:	add    dl,bl
  4265ea:	jnp    0x4265c1
  4265ec:	addr16 imul ebp,edi,0xf1930006
  4265f3:	aad    0x4e
  4265f5:	xchg   ecx,eax
  4265f6:	lock push es
  4265f8:	add    BYTE PTR [ecx],ch
  4265fa:	je     0x426587
  4265fc:	nop
  4265fd:	lock jg 0x426581
  426600:	push   eax
  426601:	out    0x9d,al
  426603:	xor    eax,0x8def290e
  426608:	lock push 0x66
  42660b:	xor    DWORD PTR [ebp-0x10],0xd8181b5f
  426612:	mov    al,0x6
  426614:	jg     0x4265d7
  426616:	and    ah,bh
  426618:	dec    edi
  426619:	mov    dh,0x1d
  42661b:	add    DWORD PTR [ecx-0x9184d4],0xffffffe8
  426622:	lock hlt 
  426624:	adc    DWORD PTR [edx-0x1a82724e],0x3
  42662b:	xchg   esp,eax
  42662c:	inc    ebp
  42662d:	lea    eax,[eax]
  42662f:	add    BYTE PTR [eax],al
  426631:	add    dl,bl
  426633:	cli    
  426634:	cld    
  426635:	mov    al,bl
  426637:	cli    
  426638:	aam    0x3c
  42663a:	adc    eax,DWORD PTR [eax-0x17]
  42663d:	popf   
  42663e:	inc    esi
  42663f:	je     0x426621
  426641:	push   esi
  426642:	retf   
  426643:	push   es
  426644:	call   0xd63e6872
  426649:	repz mov ds,WORD PTR [ebp-0x1e]
  42664d:	into   
  42664e:	adc    DWORD PTR ds:0x4502fd,0x159b8c00
  426658:	mov    al,ds:0x37ffc8c8
  42665d:	xchg   DWORD PTR [edi],ecx
  42665f:	jne    0x42666d
  426661:	aaa    
  426662:	add    eax,0x9b15f990
  426667:	push   eax
  426668:	call   0x38b604
  42666d:	in     eax,0x14
  42666f:	clc    
  426670:	call   0x38a1dd
  426675:	xor    ebp,DWORD PTR [edx-0x7265ffff]
  42667b:	test   DWORD PTR [eax-0x39086759],esp
  426681:	mov    cl,BYTE PTR [eax]
  426683:	inc    eax
  426684:	dec    ecx
  426685:	das    
  426686:	xchg   edx,eax
  426687:	add    BYTE PTR [ebp-0x7f],0x39
  42668b:	push   esi
  42668c:	pop    ebx
  42668d:	push   ebx
  42668e:	dec    ebp
  42668f:	or     BYTE PTR [eax],al
  426691:	mov    edi,0x81ec03
  426696:	add    BYTE PTR [eax],al
  426698:	inc    esi
  426699:	mov    ebx,0x3d5a0008
  42669e:	dec    esi
  42669f:	push   edi
  4266a0:	xlat   BYTE PTR ds:[ebx]
  4266a1:	fst    QWORD PTR [ebx-0x17677a03]
  4266a7:	stc    
  4266a8:	mov    esi,0x3e6af797
  4266ad:	xor    eax,0xd0cf8d4b
  4266b2:	idiv   bh
  4266b4:	cmp    esp,DWORD PTR gs:[edx+0x0]
  4266b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b9:	sbb    eax,0x986283ac
  4266be:	call   0xf7db2a21
  4266c3:	test   DWORD PTR [edx+0x19],ecx
  4266c6:	sbb    eax,0x683adc8b
  4266cb:	mov    BYTE PTR [esp+ecx*8-0x1],dh
  4266cf:	mov    ebx,?
  4266d1:	bnd jg 0x4266cb
  4266d4:	hlt    
  4266d5:	aam    0x33
  4266d7:	call   0x420c3e
  4266dc:	outs   dx,BYTE PTR ds:[esi]
  4266dd:	sub    eax,0xf1b394ff
  4266e2:	ret    
  4266e3:	jne    0x4266cf
  4266e5:	cmp    BYTE PTR [edi+0x7ff27a62],0xf7
  4266ec:	les    esp,FWORD PTR [ecx+eax*4]
  4266ef:	test   DWORD PTR [edi+0x18],ebp
  4266f2:	(bad)  
  4266f3:	sti    
  4266f4:	and    edx,DWORD PTR ds:0xae008ff9
  4266fa:	inc    DWORD PTR [esi+0x66000000]
  426700:	add    ecx,DWORD PTR [esi-0x8786305]
  426706:	mov    WORD PTR [esi],ds
  426708:	sbb    ch,BYTE PTR [eax+ebp*8]
  42670b:	cli    
  42670c:	mov    ds:0x5c72fb8e,eax
  426711:	rcr    BYTE PTR [eax-0x78c9a31e],cl
  426717:	lods   eax,DWORD PTR ds:[esi]
  426718:	cmp    eax,0x55777d81
  42671d:	ins    DWORD PTR es:[edi],dx
  42671e:	sahf   
  42671f:	les    ebp,FWORD PTR gs:[ecx+ebx*2]
  426723:	jo     0x4266da
  426725:	mov    cs,WORD PTR [ebx]
  426727:	outs   dx,DWORD PTR ds:[esi]
  426728:	cmp    al,0x5
  42672a:	add    bl,dh
  42672c:	clc    
  42672d:	lds    edx,FWORD PTR [eax+0x76]
  426730:	jmp    0x8d2f:0x9c3cf77a
  426737:	outs   dx,BYTE PTR ds:[esi]
  426738:	jmp    0x1d6f62c8
  42673d:	pushf  
  42673e:	or     bh,BYTE PTR [ebp+ebp*2+0x6c3384ff]
  426745:	sbb    DWORD PTR [ecx-0xe],0x6d
  426749:	dec    DWORD PTR [esi+esi*2+0x89b1d06]
  426750:	cmp    DWORD PTR [ecx+0x508a7680],0xffffff92
  426757:	clc    
  426758:	aad    0x49
  42675a:	clc    
  42675b:	je     0x426775
  42675d:	test   eax,0x34ec6403
  426762:	add    eax,DWORD PTR [eax]
  426764:	add    BYTE PTR [eax],al
  426766:	push   0xffffffcc
  426768:	cmp    BYTE PTR [esi-0x78257d25],al
  42676e:	jmp    0x4446507a
  426773:	aam    0x20
  426775:	xchg   edx,eax
  426776:	outs   dx,BYTE PTR ds:[esi]
  426777:	mov    WORD PTR [ecx-0x467d4766],cs
  42677d:	xor    BYTE PTR [esi-0x6d],0xfe
  426781:	xchg   ecx,eax
  426782:	test   al,0xd7
  426784:	imul   ecx,DWORD PTR [eax-0x6e0d7f89],0x43
  42678b:	outs   dx,DWORD PTR ds:[esi]
  42678c:	and    eax,0x6c06f339
  426791:	(bad)  
  426792:	clc    
  426793:	mov    bl,BYTE PTR [esp+eax*1-0x7bbef90d]
  42679a:	repz push es
  42679c:	jmp    0xe632d3be
  4267a1:	sbb    esi,ebx
  4267a3:	push   es
  4267a4:	jmp    0x6dced62c
  4267a9:	mov    ebx,DWORD PTR [eax-0x7e]
  4267ac:	sbb    DWORD PTR [edi-0x4a],edi
  4267af:	jle    0x426742
  4267b1:	aad    0x32
  4267b3:	sbb    DWORD PTR [edx+0x6d123388],0xe906f36c
  4267bd:	jle    0x426775
  4267bf:	jle    0x4267da
  4267c1:	jg     0x426761
  4267c3:	push   0xffffffb7
  4267c5:	lods   al,BYTE PTR ds:[esi]
  4267c6:	or     eax,DWORD PTR [eax+eax*1]
  4267c9:	scas   eax,DWORD PTR es:[edi]
  4267ca:	add    BYTE PTR [eax],al
  4267cc:	add    BYTE PTR [ecx-0x14567b82],al
  4267d2:	out    0x86,eax
  4267d4:	fmul   QWORD PTR [edx+ecx*4-0x3e]
  4267d8:	repnz mov ch,0x6e
  4267db:	je     0x42679b
  4267dd:	outs   dx,DWORD PTR ds:[esi]
  4267de:	add    al,0xe8
  4267e0:	jmp    0xf1b03ff0
  4267e5:	jno    0x426863
  4267e7:	add    cl,ch
  4267e9:	push   eax
  4267ea:	pop    es
  4267eb:	jae    0x42679b
  4267ed:	push   ebp
  4267ee:	vpacksswb ymm6,ymm0,YMMWORD PTR [edi+0x35113dfa]
  4267f6:	in     al,0xf9
  4267f8:	push   ds
  4267f9:	ds jg  0x426781
  4267fc:	push   ss
  4267fd:	(bad)  ds:0x13f81785
  426803:	data16 sahf 
  426805:	sbb    DWORD PTR [ebx],0x24
  426808:	(bad)  [eax]
  42680a:	pop    es
  42680b:	jg     0x42682e
  42680d:	sub    BYTE PTR [ecx+0x7],0x97
  426811:	retf   
  426812:	xchg   ebx,eax
  426813:	inc    ebp
  426814:	loope  0x4267d6
  426816:	outs   dx,BYTE PTR ds:[esi]
  426817:	mov    ebx,0x377d62a7
  42681c:	scas   eax,DWORD PTR es:[edi]
  42681d:	fucom  st(2)
  42681f:	push   ecx
  426820:	ss in  al,dx
  426822:	mov    edx,DWORD PTR [esp+eax*8+0x5e87d83]
  426829:	leave  
  42682a:	jge    0x426827
  42682c:	bound  ebp,QWORD PTR [ebp+0xf9890e]
  426832:	add    BYTE PTR [eax],al
  426834:	leave  
  426835:	add    esi,esp
  426837:	pop    edx
  426838:	icebp  
  426839:	jge    0x4268b0
  42683b:	mov    eax,ds:0xfba01b63
  426840:	mov    al,0x6
  426842:	jg     0x426860
  426844:	jg     0x4268c3
  426846:	test   BYTE PTR [eax],al
  426848:	push   ecx
  426849:	sbb    DWORD PTR [ecx*4-0x67669],ecx
  426850:	popf   
  426851:	xor    eax,0x975376e8
  426856:	test   DWORD PTR [ebx+0x7500990f],0xf84501e0
  426860:	mov    dl,0xd
  426862:	(bad)  
  426865:	add    DWORD PTR [ebp-0x868dacc],eax
  42686b:	push   eax
  42686c:	sbb    eax,0xb7fff019
  426871:	hlt    
  426872:	adc    BYTE PTR [eax-0x26],al
  426875:	mov    eax,eax
  426877:	xorps  xmm2,XMMWORD PTR [ecx-0x5d22000a]
  42687e:	adc    BYTE PTR [edi-0xe],dl
  426881:	sub    BYTE PTR [ebp-0x2],bl
  426884:	std    
  426885:	mov    ds:0x8c578dab,al
  42688a:	call   0xf7d83fdd
  42688f:	call   DWORD PTR [edi]
  426891:	xchg   esp,eax
  426892:	not    DWORD PTR ds:0x3b752e
  426898:	add    BYTE PTR [eax],al
  42689a:	add    BYTE PTR [ebx-0x5f],dl
  42689d:	add    DWORD PTR [eax],eax
  42689f:	mov    al,BYTE PTR [edi-0x6f606b7b]
  4268a5:	test   esi,0x4940045a
  4268ab:	daa    
  4268ac:	xchg   edx,eax
  4268ad:	add    DWORD PTR [ebp-0x5a],0xffffff9c
  4268b1:	adc    al,0xb9
  4268b3:	sub    al,0xa
  4268b5:	add    BYTE PTR [eax],al
  4268b7:	scas   eax,DWORD PTR es:[edi]
  4268b8:	lea    edx,[ebp+edi*8+0xbe908d]
  4268bf:	dec    edx
  4268c0:	les    ecx,FWORD PTR [eax+0x75]
  4268c3:	repz xchg esi,eax
  4268c5:	iret   
  4268c6:	mov    edi,0xc9272fcc
  4268cb:	xor    DWORD PTR [edx-0x1],esi
  4268ce:	push   esp
  4268cf:	push   0xffec8592
  4268d4:	imul   edi,edi,0xffffffff
  4268d7:	jo     0x4268fc
  4268d9:	mov    ebx,?
  4268db:	mov    al,ds:0x89d6d1bf
  4268e0:	imul   eax,DWORD PTR [eax-0x7524f87b],0x18d143fb
  4268ea:	or     BYTE PTR [ecx+0x70],bl
  4268ed:	daa    
  4268ee:	call   0x41d0fb
  4268f3:	data16 repnz lahf 
  4268f6:	std    
  4268f7:	int3   
  4268f8:	xor    BYTE PTR [ebx+edi*8],dh
  4268fb:	ds jp  0x426888
  4268fe:	jne    0x426900
  426900:	add    BYTE PTR [eax],al
  426902:	fist   DWORD PTR ds:0x6df35527
  426908:	jbe    0x4268fa
  42690a:	jbe    0x426923
  42690c:	sbb    BYTE PTR [edi],bh
  42690e:	jo     0x42689a
  426910:	out    dx,eax
  426911:	jmp    DWORD PTR [eax]
  426913:	pop    esi
  426914:	mov    dh,BYTE PTR [ebp+0x3]
  426917:	jns    0x426931
  426919:	sbb    BYTE PTR [edx+ebx*2+0x6e330f83],cl
  426920:	mov    al,al
  426922:	pop    es
  426923:	sbb    cl,BYTE PTR [ebx+0x47eadf75]
  426929:	clc    
  42692a:	fldcw  WORD PTR [esi+0x19]
  42692d:	add    bl,bl
  42692f:	ins    DWORD PTR es:[edi],dx
  426930:	(bad)  
  426931:	push   DWORD PTR [ebx]
  426933:	rcr    BYTE PTR [eax],0x18
  426936:	dec    ebx
  426937:	stc    
  426938:	ret    0x4cfa
  42693b:	jmp    0x72adefe
  426940:	mov    ds:0x2915e4f8,al
  426945:	add    al,0xb4
  426947:	jle    0x426982
  426949:	sbb    al,dh
  42694b:	inc    ecx
  42694c:	push   edx
  42694d:	add    esi,ebx
  42694f:	push   es
  426950:	cld    
  426951:	push   es
  426952:	sbb    DWORD PTR [ebx+0x69],eax
  426955:	mov    cl,BYTE PTR [edi+0x2d25ef4]
  42695b:	xchg   ecx,eax
  42695c:	and    al,0x8c
  42695e:	sbb    eax,DWORD PTR [ebp+ebp*1+0x238af88d]
  426965:	sub    eax,0x9c000000
  42696a:	dec    ebp
  42696b:	daa    
  42696c:	imul   esp
  42696e:	rcr    DWORD PTR [ebp-0x61],cl
  426971:	inc    edx
  426972:	fmul   st,st(6)
  426974:	add    ebx,DWORD PTR [ebx-0x2b030102]
  42697a:	xchg   di,ax
  42697c:	or     bl,dh
  42697e:	push   es
  42697f:	jo     0x42691c
  426981:	les    edi,FWORD PTR [esi-0x17]
  426984:	jp     0x426928
  426986:	jbe    0x42698f
  426988:	jl     0x4269b8
  42698a:	jg     0x426a0b
  42698c:	add    esi,DWORD PTR [eax+ecx*2+0x60]
  426990:	cmp    BYTE PTR [edi-0xcf74091],ah
  426996:	push   es
  426997:	mov    dh,0xbc
  426999:	xchg   esp,eax
  42699a:	ret    
  42699b:	lock sbb bl,dh
  42699e:	sbb    DWORD PTR [edi+ecx*4+0x40a171b],ebx
  4269a5:	repz xlat BYTE PTR ds:[ebx]
  4269a7:	cmp    BYTE PTR [ecx+ebx*8+0x6c03e9bc],bl
  4269ae:	add    eax,0x8fef34f6
  4269b3:	jmp    0x426a2f
  4269b5:	rol    DWORD PTR [edx],0xb0
  4269b8:	shr    DWORD PTR [ebx+eax*8-0x1],0xc
  4269bd:	inc    edi
  4269be:	xor    eax,0xf9470544
  4269c3:	adc    BYTE PTR [ebx],bl
  4269c5:	cmp    DWORD PTR [ebp+0x3534c544],eax
  4269cb:	inc    esp
  4269cc:	int    0x0
  4269ce:	add    BYTE PTR [eax],al
  4269d0:	hlt    
  4269d1:	stc    
  4269d2:	add    al,0xda
  4269d4:	xor    bh,al
  4269d6:	out    0xeb,al
  4269d8:	inc    ebx
  4269d9:	mov    esi,0xd3f0d9be
  4269de:	xchg   BYTE PTR [ebp+0x1a306b72],al
  4269e4:	mov    ebp,0x44ac8cd9
  4269e9:	xlat   BYTE PTR ds:[ebx]
  4269ea:	mov    WORD PTR [esp+ecx*2-0x73537329],fs
  4269f1:	(bad)  
  4269f2:	xchg   BYTE PTR [eax+ebp*8+0x7f255d8a],ah
  4269f9:	ss ret 0x663f
  4269fd:	add    al,0xe6
  426a00:	je     0x426a7d
  426a02:	add    cl,ch
  426a04:	lock test DWORD PTR [ebp-0xb],eax
  426a08:	cmp    ebx,DWORD PTR [edi]
  426a0a:	xchg   DWORD PTR [ecx+0x62c385ec],esp
  426a10:	xor    BYTE PTR [eax+eax*1-0x46d1b357],0x69
  426a18:	hlt    
  426a19:	push   es
  426a1a:	add    al,al
  426a1c:	sub    eax,0xe7d36e77
  426a21:	add    edi,DWORD PTR [ecx]
  426a23:	je     0x426a89
  426a25:	in     al,dx
  426a26:	push   cs
  426a27:	out    0xe5,al
  426a29:	jbe    0x426a2a
  426a2b:	fisub  DWORD PTR [edi-0xd]
  426a2e:	jmp    0x426a2a
  426a30:	xor    esi,edx
  426a32:	push   ecx
  426a33:	rol    DWORD PTR [eax],0x0
  426a36:	add    BYTE PTR [ebp-0x7f],ch
  426a39:	sti    
  426a3a:	add    BYTE PTR ds:0x8a31fa9e,dh
  426a40:	test   eax,eax
  426a42:	pmaxub mm7,mm4
  426a45:	(bad)  
  426a46:	call   FWORD PTR [edx-0x2]
  426a49:	mov    esi,0x4450598b
  426a4e:	call   0x5b0db2b
  426a53:	inc    ebx
  426a54:	adc    al,0xe4
  426a56:	jb     0x426a81
  426a58:	mov    dh,BYTE PTR [ebp-0x18]
  426a5b:	or     DWORD PTR [edi+0x766e75f7],edx
  426a61:	rcl    BYTE PTR [eax-0x14],0x9a
  426a65:	pop    eax
  426a66:	call   DWORD PTR [ebp-0x27fd1c76]
  426a6c:	inc    edx
  426a6d:	test   al,al
  426a6f:	push   ds
  426a70:	and    eax,0x9751c783
  426a75:	cmp    DWORD PTR [ebp+0x3a],eax
  426a78:	push   ss
  426a79:	adc    dh,BYTE PTR [edi-0x31]
  426a7c:	push   ecx
  426a7d:	je     0x426a5b
  426a7f:	cwde   
  426a80:	ja     0x426a78
  426a82:	jne    0x426abe
  426a84:	pop    es
  426a85:	jmp    0x7ac1:0xbac7fff
  426a8c:	xor    ch,al
  426a8e:	das    
  426a8f:	aad    0x8a
  426a91:	imul   ebx
  426a93:	cwde   
  426a94:	push   esi
  426a95:	mov    ebx,0x3313da84
  426a9a:	mov    eax,DWORD PTR [eax]
  426a9c:	add    BYTE PTR [eax],al
  426a9e:	int    0xfe
  426aa0:	jmp    0xd1a:0x6ab04f39
  426aa7:	add    eax,0x15de7539
  426aac:	or     edi,edi
  426aae:	pop    ds
  426aaf:	stos   DWORD PTR es:[edi],eax
  426ab0:	sti    
  426ab1:	icebp  
  426ab2:	xchg   ebp,eax
  426ab3:	push   ss
  426ab4:	aam    0x13
  426ab6:	repz scas al,BYTE PTR es:[edi]
  426ab8:	xor    al,0x52
  426aba:	pop    ebx
  426abb:	fs xchg bl,bh
  426abe:	pop    esp
  426abf:	pop    ecx
  426ac0:	add    ch,BYTE PTR [esi]
  426ac2:	xor    esp,edx
  426ac4:	ret    
  426ac5:	je     0x426aa8
  426ac7:	call   0xaeb07b0c
  426acc:	adc    BYTE PTR [ebx],al
  426ace:	jo     0x426b46
  426ad0:	xchg   BYTE PTR [edi-0x55],bh
  426ad3:	popa   
  426ad4:	xchg   BYTE PTR [eax-0x792a770e],dh
  426ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426adb:	pop    ecx
  426adc:	js     0x426b53
  426ade:	daa    
  426adf:	xchg   esi,eax
  426ae0:	outs   dx,BYTE PTR ds:[esi]
  426ae1:	cli    
  426ae2:	adc    al,0xfd
  426ae4:	cmp    BYTE PTR [ebp-0x1d],0x6d
  426ae8:	or     edx,DWORD PTR [ecx]
  426aea:	cdq    
  426aeb:	gs jp  0x426ab0
  426aee:	mov    ds:0xf41010e4,eax
  426af3:	jb     0x426ac4
  426af5:	adc    DWORD PTR [ebx],esi
  426af7:	outs   dx,BYTE PTR ds:[esi]
  426af8:	add    ah,0xf7
  426afb:	call   0xaab07328
  426b00:	mov    edx,DWORD PTR [eax+0x0]
  426b03:	add    BYTE PTR [eax],al
  426b05:	inc    ebx
  426b06:	sahf   
  426b07:	das    
  426b08:	call   0xfbc8971a
  426b0d:	and    al,0x8c
  426b0f:	sub    cl,cl
  426b11:	mov    cl,0x71
  426b13:	call   DWORD PTR [eax+ebp*2+0x9]
  426b17:	test   esp,ebp
  426b19:	or     esi,DWORD PTR [eax-0x1]
  426b1c:	inc    DWORD PTR [eax-0x4c]
  426b1f:	cs sti 
  426b21:	es jb  0x426b9c
  426b24:	test   DWORD PTR [edi-0x73047986],eax
  426b2a:	cli    
  426b2b:	test   BYTE PTR [edi-0x65],0xa1
  426b2f:	xor    al,BYTE PTR [eax]
  426b31:	repz push es
  426b33:	outs   dx,BYTE PTR ds:[esi]
  426b34:	xchg   ebx,eax
  426b35:	outs   dx,BYTE PTR ds:[esi]
  426b36:	je     0x426b22
  426b38:	jg     0x426b6a
  426b3a:	push   es
  426b3b:	jmp    0xbca3c43
  426b40:	add    al,0xe8
  426b42:	add    BYTE PTR [ebx+eax*1+0x386606f3],0xff
  426b4a:	jnp    0x426b42
  426b4c:	mov    ch,BYTE PTR [esi+0x7b]
  426b4f:	xor    al,0xf5
  426b51:	outs   dx,DWORD PTR ds:[esi]
  426b52:	adc    DWORD PTR [ebp+0x397b3888],0xf68f068b
  426b5c:	inc    ebx
  426b5d:	repz sub DWORD PTR [ecx-0x164109f1],0x1908f303
  426b68:	push   ds
  426b69:	add    BYTE PTR [eax],al
  426b6b:	add    BYTE PTR [ebp*8+0x6f31be9],cl
  426b72:	jmp    0x55c3d9ba
  426b77:	mov    al,bh
  426b79:	jp     0x426b34
  426b7b:	js     0x426bb3
  426b7d:	or     eax,DWORD PTR [ecx+0x7e]
  426b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b81:	jns    0x426bcd
  426b83:	jg     0x426b38
  426b85:	repz sar BYTE PTR [eax+0x2e],0x73
  426b8a:	cdq    
  426b8b:	or     al,0xf4
  426b8e:	add    DWORD PTR [ebx+0x405c173e],ecx
  426b94:	out    dx,eax
  426b95:	(bad)  
  426b96:	adc    BYTE PTR [ecx+edi*4],dh
  426b99:	jp     0x426bb5
  426b9b:	jg     0x426b50
  426b9d:	xrelease mov BYTE PTR [esi+0x100a7326],al
  426ba4:	aam    0x85
  426ba6:	test   BYTE PTR [ebx+0x32c3f498],cl
  426bac:	and    BYTE PTR [eax+eax*1-0x5288b54],cl
  426bb3:	je     0x426b39
  426bb5:	jge    0x426bcc
  426bb7:	or     DWORD PTR [ebp+0x3a],edi
  426bba:	add    BYTE PTR [edi+esi*1+0x62],ah
  426bbe:	adc    BYTE PTR [esp+0x73],ah
  426bc2:	push   eax
  426bc3:	cmp    DWORD PTR [edi],esp
  426bc5:	mov    WORD PTR [ebp-0xb],ds
  426bc8:	js     0x426bc4
  426bca:	les    edi,FWORD PTR [edi+0x3dc0837a]
  426bd0:	add    BYTE PTR [eax],al
  426bd2:	add    BYTE PTR [edx],ch
  426bd4:	jge    0x426c4b
  426bd6:	(bad)  [ebx+0x14]
  426bd9:	mov    al,ds:0x7f06b0fb
  426bde:	sub    al,0x2b
  426be0:	jge    0x426c34
  426be2:	cs jp  0x426bf9
  426be5:	nop
  426be6:	cli    
  426be7:	mov    al,0x6
  426be9:	test   DWORD PTR [ecx+0x6a620103],ebp
  426bef:	cmp    DWORD PTR [edx+0xa],edi
  426bf2:	ins    BYTE PTR es:[edi],dx
  426bf3:	int3   
  426bf4:	jge    0x426bf1
  426bf6:	outs   dx,BYTE PTR ds:[esi]
  426bf7:	test   bl,al
  426bf9:	or     edx,DWORD PTR [ecx-0x11]
  426bfc:	mov    eax,0x8475efa
  426c01:	out    0xe3,eax
  426c03:	pop    ebp
  426c04:	les    ecx,FWORD PTR [ebx]
  426c06:	inc    ecx
  426c07:	add    DWORD PTR [edi-0x6],0x46
  426c0b:	mov    ebp,0x1f9f5bb9
  426c10:	push   eax
  426c11:	mov    esi,0x4981f0e5
  426c16:	sar    DWORD PTR [edi],1
  426c18:	or     bl,bh
  426c1a:	stc    
  426c1b:	lahf   
  426c1c:	dec    esi
  426c1d:	test   BYTE PTR [ecx],ch
  426c1f:	stos   BYTE PTR es:[edi],al
  426c20:	xchg   edx,eax
  426c21:	shl    DWORD PTR [eax+esi*1+0x7e],0xbf
  426c26:	push   cs
  426c27:	add    esp,DWORD PTR [ebx]
  426c29:	add    al,0x0
  426c2b:	and    DWORD PTR [esi],edi
  426c2d:	sbb    BYTE PTR [ebx+0x50f7339b],cl
  426c33:	xchg   esi,eax
  426c34:	push   edx
  426c35:	enter  0x84,0x0
  426c39:	add    dl,cl
  426c3b:	jg     0x426bd1
  426c3d:	sar    edi,0xc4
  426c40:	test   dl,0x56
  426c43:	add    eax,0x6f674f7
  426c48:	or     DWORD PTR [ecx+0x62],0xfffffffa
  426c4c:	add    BYTE PTR [edx+0x2d],dl
  426c4f:	xor    eax,0xf9833308
  426c54:	mov    edi,0x8d44a70f
  426c59:	inc    ecx
  426c5a:	lea    eax,[ebx+0x4]
  426c5d:	add    BYTE PTR [ebp-0x5efbdbf7],cl
  426c63:	cmp    al,0x18
  426c65:	mov    ebx,DWORD PTR [ebx]
  426c67:	xor    esi,edi
  426c69:	push   eax
  426c6a:	ds push edx
  426c6c:	enter  0x4a84,0x7e
  426c70:	xchg   esp,eax
  426c71:	rcr    DWORD PTR [edi+0x16c2f6c4],0x5
  426c78:	or     DWORD PTR [ecx+0x22],0xfffffffa
  426c7c:	add    bh,bh
  426c7e:	cmp    dh,BYTE PTR [ebp+0x2a]
  426c81:	leave  
  426c82:	push   esi
  426c83:	inc    esp
  426c84:	pop    es
  426c85:	xchg   ebp,eax
  426c86:	sbb    esi,ecx
  426c88:	inc    eax
  426c89:	dec    DWORD PTR [ecx]
  426c8b:	(bad)  
  426c8c:	je     0x426cb2
  426c8e:	(bad)  
  426c8f:	sti    
  426c90:	dec    eax
  426c91:	sbb    BYTE PTR [ecx+0x5],al
  426c94:	dec    edx
  426c95:	jmp    FWORD PTR [edx+0x68]
  426c98:	sub    cl,cl
  426c9a:	push   esi
  426c9b:	inc    esp
  426c9c:	pop    es
  426c9d:	xchg   ebp,eax
  426c9e:	add    BYTE PTR [eax],al
  426ca0:	add    BYTE PTR [ebx],cl
  426ca2:	icebp  
  426ca3:	inc    eax
  426ca4:	(bad)  
  426ca5:	fdiv   DWORD PTR [edi-0x5]
  426ca8:	mov    dh,bl
  426caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cab:	out    0x86,eax
  426cad:	repnz or BYTE PTR [edi],ch
  426cb0:	sbb    al,ah
  426cb2:	ss jnp 0x426c75
  426cb5:	cld    
  426cb6:	sar    BYTE PTR [ebp-0x408ecd73],cl
  426cbc:	push   edx
  426cbd:	and    ebx,ebx
  426cbf:	movups xmm5,XMMWORD PTR [ecx+ebp*2+0x6db38703]
  426cc7:	jl     0x426d0c
  426cc9:	sti    
  426cca:	inc    ebp
  426ccb:	jne    0x426d41
  426ccd:	rep ins DWORD PTR es:[edi],dx
  426ccf:	jl     0x426d4c
  426cd1:	or     ebp,DWORD PTR [ecx+0x22c1303b]
  426cd7:	add    BYTE PTR ds:[ecx+ebp*1],ch
  426cdb:	rol    BYTE PTR [ebx-0x3cfbd44a],1
  426ce1:	lods   al,BYTE PTR ds:[esi]
  426ce2:	gs gs inc ebp
  426ce5:	mov    cl,0x6d
  426ce7:	mov    edx,0x40d5e743
  426cec:	repz mov al,ds:0x2b41403b
  426cf3:	add    BYTE PTR ds:[ecx+eiz*1],dh
  426cf7:	inc    eax
  426cf8:	in     eax,0xae
  426cfa:	sub    eax,DWORD PTR [ebx+eax*8]
  426cfd:	mov    ah,0x25
  426cff:	add    DWORD PTR [ebp-0x4f],0x6d
  426d03:	jbe    0x426cc8
  426d05:	add    BYTE PTR [eax],al
  426d07:	add    BYTE PTR [ebp+0x2d],cl
  426d0a:	mov    al,BYTE PTR [edi+ecx*1+0x6a]
  426d0e:	add    al,0x52
  426d10:	push   0x5702bade
  426d15:	cmc    
  426d16:	inc    ebx
  426d17:	add    BYTE PTR [edi+0x60],al
  426d1a:	sub    eax,0x8595bce8
  426d1f:	sti    
  426d20:	push   0xefbe221f
  426d25:	push   es
  426d26:	jmp    0x59865f7e
  426d2b:	add    eax,0xd2e90e65
  426d30:	stos   DWORD PTR es:[edi],eax
  426d31:	mov    ds:0x6d449f9,eax
  426d36:	test   al,0x4b
  426d38:	jecxz  0x426cf6
  426d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d3b:	add    esp,DWORD PTR [ecx]
  426d3d:	mov    ecx,ds
  426d3f:	jp     0x426cce
  426d41:	inc    ebp
  426d42:	sti    
  426d43:	in     eax,0xc5
  426d45:	je     0x426d97
  426d47:	mov    ss,esi
  426d49:	(bad)  
  426d4a:	loop   0x426d63
  426d4c:	fs jbe 0x426daf
  426d4f:	adc    esi,edi
  426d51:	sub    DWORD PTR [ecx-0x4ac64c01],0xffffffc2
  426d58:	or     al,0x7
  426d5a:	cmp    eax,0xe5097aa5
  426d5f:	dec    ecx
  426d60:	cld    
  426d61:	push   es
  426d62:	or     eax,ebx
  426d64:	xchg   edx,eax
  426d65:	or     bl,BYTE PTR [edi+0x42]
  426d68:	repz cmp DWORD PTR [ecx],ebx
  426d6b:	add    al,BYTE PTR [eax]
  426d6d:	add    BYTE PTR [eax],al
  426d6f:	repz push es
  426d71:	loop   0x426dea
  426d73:	arpl   WORD PTR [esi],ax
  426d75:	jmp    0xb6122e7d
  426d7a:	mov    cl,0x49
  426d7c:	ja     0x426df8
  426d7e:	xchg   BYTE PTR [eax-0x8856075],cl
  426d84:	mov    ebp,edx
  426d86:	dec    ecx
  426d87:	mov    ah,0x6
  426d89:	push   ss
  426d8a:	add    BYTE PTR [esi+0x17],bh
  426d8d:	lahf   
  426d8e:	inc    edx
  426d8f:	repz sub DWORD PTR [ebx],ebp
  426d92:	shl    al,cl
  426d94:	cmp    ecx,0x49
  426d97:	adc    al,0x7
  426d99:	outs   dx,BYTE PTR ds:[esi]
  426d9a:	mov    esp,DWORD PTR [edx-0xd6199a1]
  426da0:	cmp    DWORD PTR [eax],eax
  426da2:	in     eax,dx
  426da3:	sub    esi,DWORD PTR [edi+0x25f0aaa8]
  426da9:	add    al,0x74
  426dab:	in     al,dx
  426dac:	inc    esi
  426dad:	aas    
  426dae:	jmp    0x6446ede5
  426db3:	mov    al,ds:0x6fe93fbc
  426db8:	jge    0x426d99
  426dba:	jmp    0x2bbe74af
  426dbf:	outs   dx,DWORD PTR ds:[esi]
  426dc0:	jge    0x426e2d
  426dc2:	jmp    0x426db4
  426dc4:	push   es
  426dc5:	jge    0x426d81
  426dc7:	sti    
  426dc8:	add    dl,BYTE PTR [ebp+0x35baf9]
  426dce:	jb     0x426dc0
  426dd0:	and    eax,0xed41
  426dd5:	add    BYTE PTR [ebx+0x48],dl
  426dd8:	das    
  426dd9:	call   0xcec1dcb9
  426dde:	lock lea edi,[esp+edi*2]
  426de2:	lahf   
  426de3:	sahf   
  426de4:	aas    
  426de5:	jmp    0xadb71d0d
  426dea:	outs   dx,BYTE PTR ds:[esi]
  426deb:	jb     0x426dbe
  426ded:	xchg   ecx,eax
  426dee:	inc    edx
  426def:	jle    0x426d7a
  426df1:	loopne 0x426e66
  426df3:	dec    eax
  426df4:	add    al,0x68
  426df6:	push   0xef2abf43
  426dfb:	repnz shl DWORD PTR [edx+0x4],cl
  426dff:	inc    edx
  426e00:	mov    edi,0x10a7ef2a
  426e05:	xor    esi,DWORD PTR [edx+0x12a82f06]
  426e0b:	dec    eax
  426e0c:	das    
  426e0d:	sub    BYTE PTR [edx+0x3f],ch
  426e10:	rcl    DWORD PTR [ecx+0x72],1
  426e13:	add    DWORD PTR [bp+si],ebx
  426e16:	repz xor DWORD PTR [eax+0x5b073281],0x0
  426e1e:	leave  
  426e1f:	je     0x426e5c
  426e21:	rcr    BYTE PTR [ecx+0x16a35609],0x48
  426e28:	cmp    eax,DWORD PTR [eax]
  426e2a:	mov    ecx,0x1f0c8349
  426e2f:	jnp    0x426de6
  426e31:	inc    ebx
  426e32:	call   0xffc8:0x400c9ac9
  426e39:	mov    al,BYTE PTR [eax]
  426e3b:	add    BYTE PTR [eax],al
  426e3d:	retf   
  426e3e:	dec    ecx
  426e3f:	call   0x83f3b74f
  426e44:	shr    DWORD PTR [edi-0x7ac5a824],0x48
  426e4b:	loopne 0x426e54
  426e4d:	cmp    DWORD PTR [ecx-0x11003e7d],esi
  426e53:	(bad)  
  426e54:	inc    DWORD PTR [ebp+0x48]
  426e57:	loopne 0x426e68
  426e59:	stc    
  426e5a:	mov    dl,0x83
  426e5c:	ror    DWORD PTR [ebx-0x64ccf56f],0x46
  426e63:	push   ebp
  426e64:	mov    esi,DWORD PTR [esi]
  426e66:	cmp    BYTE PTR [ecx+0x68],dl
  426e69:	pop    edx
  426e6a:	inc    esi
  426e6b:	cmp    eax,DWORD PTR [eax]
  426e6d:	test   DWORD PTR [edi+ebp*8+0x12],esp
  426e71:	fimul  DWORD PTR [edx]
  426e73:	lea    eax,[ebp+0x52]
  426e76:	cmp    edi,esi
  426e78:	adc    eax,0x3b789e
  426e7d:	(bad)
  426e81:	jne    0x426ee7
  426e83:	pop    es
  426e84:	adc    ebx,edx
  426e86:	or     ah,bl
  426e88:	add    edx,DWORD PTR [ecx-0x4c1707cc]
  426e8e:	mov    esi,edi
  426e90:	dec    DWORD PTR [edx-0x3d3c36f7]
  426e96:	mov    eax,0x5df343bb
  426e9b:	test   BYTE PTR ds:0x3f70cb,dl
  426ea1:	add    BYTE PTR [eax],al
  426ea3:	add    BYTE PTR [eax-0x51703e22],dh
  426ea9:	mov    eax,ds:0xe920ffff
  426eae:	loope  0x426e9f
  426eb0:	loope  0x426e4f
  426eb2:	call   DWORD PTR [ecx+0x44]
  426eb5:	stc    
  426eb6:	shr    ebx,0x1
  426eb9:	sahf   
  426eba:	push   DWORD PTR [ebp+ecx*8-0x25]
  426ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ebf:	lds    esi,FWORD PTR [eax]
  426ec1:	pop    esi
  426ec2:	sub    eax,0xc1dea4fb
  426ec7:	(bad)  
  426ec8:	scas   al,BYTE PTR es:[edi]
  426ec9:	mov    eax,ds:0x5806ffff
  426ece:	xchg   edi,eax
  426ecf:	xchg   esp,eax
  426ed0:	je     0x426f37
  426ed2:	jg     0x426e58
  426ed4:	xor    edx,edx
  426ed6:	adc    al,0xc3
  426ed8:	out    dx,al
  426ed9:	stc    
  426eda:	dec    eax
  426edb:	aas    
  426edc:	repz mov ecx,0xabf33dc7
  426ee2:	or     DWORD PTR [eax+0x1042136],edx
  426ee8:	popf   
  426ee9:	mov    ah,0x53
  426eeb:	mov    edx,0xffc3a123
  426ef0:	sahf   
  426ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef2:	push   edi
  426ef3:	call   0xfbc21aa0
  426ef8:	mov    ebp,0x40fb7bf8
  426efd:	jmp    0x38f7ca48
  426f02:	inc    ebx
  426f03:	aaa    
  426f04:	mov    bh,0x41
  426f06:	add    esi,DWORD PTR [edx+0x0]
  426f09:	add    BYTE PTR [eax],al
  426f0b:	in     eax,0x58
  426f0d:	ret    
  426f0e:	and    esi,edi
  426f10:	adc    eax,esp
  426f12:	xchg   BYTE PTR [ebx],al
  426f14:	jnp    0x426f19
  426f16:	das    
  426f17:	mov    bl,0x6
  426f19:	dec    esi
  426f1a:	adc    ebx,ebx
  426f1c:	jge    0x426f78
  426f1e:	sbb    eax,0x37
  426f21:	aaa    
  426f22:	jnp    0x426f05
  426f24:	jg     0x426f4d
  426f26:	pop    es
  426f27:	aaa    
  426f28:	sub    esi,ecx
  426f2a:	loope  0x426eb2
  426f2c:	or     ch,cl
  426f2e:	(bad)  ds:0x10f7f07d
  426f34:	add    esi,DWORD PTR [ebx+0x5b044023]
  426f3a:	add    bh,cl
  426f3c:	sbb    dh,BYTE PTR [edx-0x16f96745]
  426f42:	add    ecx,DWORD PTR [ebx-0x777cf54d]
  426f48:	jg     0x426eff
  426f4a:	daa    
  426f4b:	idiv   DWORD PTR [esi-0x1b]
  426f4e:	adc    DWORD PTR [ecx],esi
  426f50:	xor    BYTE PTR [ebp+0x27],bh
  426f53:	jecxz  0x426f4d
  426f55:	add    ebx,esp
  426f57:	retf   0xf548
  426f5a:	add    edi,DWORD PTR [esi+0x4f86cd7f]
  426f60:	sbb    bh,BYTE PTR [ebx]
  426f62:	sbb    esi,0x16
  426f65:	shl    DWORD PTR [eax-0x713d8cb8],0x43
  426f6c:	jge    0x426fa2
  426f6e:	jl     0x426f70
  426f70:	add    BYTE PTR [eax],al
  426f72:	dec    ebx
  426f73:	cmp    DWORD PTR [edx-0x1662c77e],esi
  426f79:	add    al,0xf3
  426f7b:	push   es
  426f7c:	sbb    eax,0x8cc93014
  426f81:	lahf   
  426f82:	je     0x426f4a
  426f84:	call   0x59b91dd3
  426f89:	mov    ?,WORD PTR [ebx+0x30118e06]
  426f8f:	leave  
  426f90:	mov    WORD PTR [ebx-0x1700398c],?
  426f96:	test   eax,0x7d4defc9
  426f9b:	(bad)  
  426f9c:	(bad)  
  426f9d:	mov    ecx,0xbc895a1d
  426fa2:	pop    esp
  426fa3:	sbb    BYTE PTR [ebp-0x7],0x15
  426fa7:	bound  ecx,QWORD PTR [ebx]
  426fa9:	addr16 in eax,dx
  426fab:	pop    es
  426fac:	add    cl,ch
  426fae:	jne    0x426f7c
  426fb0:	pop    es
  426fb1:	push   0x50
  426fb3:	pop    ss
  426fb4:	mov    DWORD PTR [esp+edi*1+0xac7ed6],ebp
  426fbb:	jno    0x427031
  426fbd:	xlat   BYTE PTR ds:[ebx]
  426fbe:	sbb    BYTE PTR [ecx-0x6],ch
  426fc1:	push   ds
  426fc2:	jno    0x426f64
  426fc4:	add    al,ch
  426fc6:	lock push es
  426fc8:	je     0x426fc3
  426fca:	cmp    esp,ecx
  426fcc:	jmp    0x427033
  426fce:	jne    0x426f97
  426fd0:	jmp    DWORD PTR ds:0x62b062ab
  426fd6:	add    BYTE PTR [eax],al
  426fd8:	add    BYTE PTR [eax-0x4620198e],dh
  426fde:	retf   
  426fdf:	jmp    0x426f7a
  426fe1:	jbe    0x426faa
  426fe3:	jmp    DWORD PTR [ebp+0x629c6234]
  426fe9:	das    
  426fea:	jb     0x42706a
  426fec:	inc    esp
  426fed:	out    0x6,eax
  426fef:	jg     0x427035
  426ff1:	retf   
  426ff2:	push   es
  426ff3:	je     0x427004
  426ff5:	outs   dx,BYTE PTR ds:[esi]
  426ff6:	mov    dl,0x27
  426ff8:	sub    al,0x73
  426ffa:	repnz imul eax
  426ffd:	sub    ah,BYTE PTR [esi]
  426fff:	call   0xfbb0e159
  427004:	jb     0x426fb5
  427006:	scas   al,BYTE PTR es:[edi]
  427007:	add    eax,ebp
  427009:	lock push es
  42700b:	pop    ds
  42700c:	mov    eax,ds:0x753ece
  427011:	sub    BYTE PTR [ebx+0x2ae00c4d],al
  427017:	pop    eax
  427018:	xchg   bx,ax
  42701a:	(bad)  
  42701b:	pop    eax
  42701c:	mov    edi,edi
  42701e:	xchg   cl,ch
  427020:	pushf  
  427021:	fiadd  DWORD PTR ds:0xfd97f600
  427027:	pop    ds
  427028:	je     0x427023
  42702a:	mov    ebx,edx
  42702c:	jne    0x427002
  42702e:	out    dx,eax
  42702f:	inc    esp
  427030:	or     BYTE PTR [edx+0x6f],bl
  427033:	sub    al,ch
  427035:	mov    dl,0x87
  427037:	idiv   edi
  427039:	mov    al,0x8
  42703b:	sub    edx,edx
  42703d:	add    BYTE PTR [eax],al
  42703f:	add    BYTE PTR [ebx-0x177a0f12],al
  427045:	jns    0x42705f
  427047:	push   edx
  427048:	cmp    ah,0x57
  42704b:	call   0x39f518
  427050:	adc    DWORD PTR [edx+0x7],eax
  427053:	pinsrw mm1,edx,0x5d
  427057:	or     edx,0x3a
  42705a:	pop    esi
  42705b:	mov    DWORD PTR [esi-0x2e9c1db4],eax
  427061:	dec    ecx
  427062:	or     ecx,DWORD PTR [ebx-0x7413763a]
  427068:	pop    ss
  427069:	pop    ss
  42706a:	lea    edi,[edx+eiz*1]
  42706d:	cmp    al,0xc0
  42706f:	cmp    DWORD PTR [ecx+edx*4],0x165a4083
  427076:	xchg   ebp,eax
  427077:	shl    BYTE PTR [eax+0x2a83480a],0x17
  42707e:	jnp    0x427040
  427080:	pop    ss
  427081:	fisttp QWORD PTR [ebx-0x1179b202]
  427087:	inc    ebp
  427088:	and    al,BYTE PTR [esi+ebx*2]
  42708b:	psllq  mm3,mm1
  42708e:	add    dh,BYTE PTR [eax]
  427090:	xchg   ebp,eax
  427091:	out    0x7,al
  427093:	jne    0x427064
  427095:	icebp  
  427096:	rol    DWORD PTR [edi],0xf1
  427099:	jnp    0x4270ab
  42709b:	test   DWORD PTR [eax],ebx
  42709d:	jae    0x4270ab
  42709f:	xchg   DWORD PTR [esi],esi
  4270a1:	push   edx
  4270a2:	jmp    0x427125
  4270a7:	addr16 inc esi
  4270a9:	and    DWORD PTR [eax],0x45796167
  4270af:	jmp    0x427116
  4270b1:	repz adc bl,bl
  4270b4:	pop    esi
  4270b5:	cmp    ebx,0x73fe96c4
  4270bb:	jmp    0x427042
  4270bd:	pop    edi
  4270be:	sti    
  4270bf:	repz pop ebp
  4270c1:	jmp    0xf22764c6
  4270c6:	div    DWORD PTR [eax]
  4270c8:	sub    edx,eax
  4270ca:	psubusb mm5,QWORD PTR [edi]
  4270cd:	adc    BYTE PTR [esi-0x5d],bh
  4270d0:	sbb    BYTE PTR [eax-0x3de7d305],al
  4270d6:	pop    es
  4270d7:	jecxz  0x42707d
  4270d9:	repz sbb BYTE PTR [esi+0x78],dh
  4270dd:	repnz adc al,0x68
  4270e0:	mov    ds:0xedbf8d0b,eax
  4270e5:	and    BYTE PTR [edx+0x70],0x27
  4270e9:	and    al,0x75
  4270eb:	call   0xa740ddcc
  4270f0:	shl    BYTE PTR [edi-0x19],cl
  4270f3:	lock in al,0xc8
  4270f6:	or     eax,DWORD PTR [eax]
  4270f8:	mov    bh,0x72
  4270fa:	inc    ebp
  4270fb:	jmp    0x427164
  4270fd:	in     eax,0x88
  4270ff:	out    0x2d,eax
  427101:	clc    
  427102:	push   cs
  427103:	cld    
  427104:	clc    
  427105:	or     edi,DWORD PTR [edi+0x2a]
  427108:	pop    es
  427109:	or     dl,dh
  42710b:	add    BYTE PTR [eax],al
  42710d:	add    ch,dh
  42710f:	and    DWORD PTR [eax+0x6608a1fa],0x45
  427116:	adc    ebp,ecx
  427118:	pop    edi
  427119:	or     al,0x6c
  42711b:	dec    ecx
  42711c:	and    ecx,DWORD PTR [ebp+0x3d]
  42711f:	add    ebp,ecx
  427121:	mov    BYTE PTR [ecx],al
  427123:	sti    
  427124:	ror    BYTE PTR [edx-0x3c5ae102],cl
  42712a:	in     al,0x34
  42712c:	sub    DWORD PTR [ecx-0x75090556],ecx
  427132:	(bad)  
  427133:	sub    ch,BYTE PTR ds:0x172eccc3
  427139:	clc    
  42713a:	in     eax,dx
  42713b:	(bad)  
  42713c:	gs inc edx
  42713e:	or     ebp,DWORD PTR [eax+ebp*1]
  427141:	repnz rol BYTE PTR [ebx-0x2c9380df],0x93
  427149:	mov    dl,BYTE PTR [edi]
  42714b:	sub    esi,ebp
  42714d:	sub    BYTE PTR [ebx+0x405ad66f],0x7c
  427154:	adc    DWORD PTR [ebx],edi
  427156:	xchg   esp,eax
  427157:	jmp    DWORD PTR [eax+ecx*4-0xd]
  42715b:	push   es
  42715c:	jmp    0x25615feb
  427161:	ret    
  427162:	je     0x427198
  427164:	sub    esi,edx
  427166:	and    eax,0x6c24733c
  42716b:	sbb    DWORD PTR ds:0x6e071c48,ecx
  427171:	jno    0x427173
  427173:	add    BYTE PTR [eax],al
  427175:	sbb    dl,BYTE PTR [ecx]
  427177:	pop    ebp
  427178:	or     dh,BYTE PTR [ebx-0x3d45c7d]
  42717e:	inc    ebp
  42717f:	aaa    
  427180:	js     0x4271d6
  427182:	sti    
  427183:	ins    DWORD PTR es:[edi],dx
  427184:	jae    0x427152
  427186:	js     0x427188
  427188:	add    eax,esi
  42718a:	pusha  
  42718b:	xchg   DWORD PTR [ecx+0x1241282b],esi
  427191:	scas   al,BYTE PTR es:[edi]
  427192:	push   ds
  427193:	mov    edx,0x2facc5
  427198:	adc    DWORD PTR [ecx+0x6c8ef9bf],0x68287446
  4271a2:	xor    DWORD PTR [eax],ebp
  4271a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271a5:	xor    DWORD PTR [edi-0x6],ebp
  4271a8:	in     al,dx
  4271a9:	sbb    BYTE PTR [ebx+0x3f],al
  4271ac:	jmp    0x5fa9ec2a
  4271b1:	or     BYTE PTR [esi+0x34],ch
  4271b4:	add    eax,0xdd002e2b
  4271b9:	sbb    BYTE PTR [esi+0x7fa1ba4e],bh
  4271bf:	sub    dh,BYTE PTR [ecx-0x62]
  4271c2:	or     bh,bl
  4271c4:	aam    0x78
  4271c6:	std    
  4271c7:	aas    
  4271c8:	jmp    0x2e5e333e
  4271cd:	ja     0x427198
  4271cf:	pop    es
  4271d0:	jo     0x427190
  4271d2:	add    cl,BYTE PTR [ecx+0x5a8000bf]
  4271d8:	std    
  4271d9:	add    BYTE PTR [eax],al
  4271db:	add    BYTE PTR [edi-0x2f],bh
  4271de:	pop    ss
  4271df:	pusha  
  4271e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271e1:	push   cs
  4271e2:	mov    DWORD PTR [edi-0x603c7a2c],esp
  4271e8:	xchg   ebp,eax
  4271e9:	retf   
  4271ea:	push   esi
  4271eb:	sub    esi,esp
  4271ed:	push   es
  4271ee:	push   edx
  4271ef:	(bad)  
  4271f0:	loopne 0x4271d7
  4271f2:	icebp  
  4271f3:	adc    edx,esi
  4271f5:	xor    esp,DWORD PTR [eiz*4-0x29ad91ce]
  4271fc:	inc    ebp
  4271fd:	push   es
  4271fe:	jg     0x427207
  427200:	out    dx,eax
  427201:	jno    0x427218
  427203:	add    BYTE PTR [edx+0x19],ch
  427206:	inc    eax
  427207:	add    BYTE PTR [ebp+0x75],dh
  42720a:	pop    es
  42720b:	call   0x3bc83c
  427210:	push   ebp
  427211:	jne    0x42721e
  427213:	mov    ecx,esp
  427215:	push   cs
  427216:	call   0xf72ecb6c
  42721b:	(bad)  
  42721c:	in     al,dx
  42721d:	or     ch,al
  42721f:	and    edi,DWORD PTR [esi-0x3740914]
  427225:	and    eax,0x3fef685
  42722a:	dec    esi
  42722b:	call   0x397006
  427230:	cmp    ebx,DWORD PTR [ebx]
  427232:	les    eax,FWORD PTR [ebx-0x36]
  427235:	jle    0x42722f
  427237:	test   DWORD PTR [edx],ecx
  427239:	outs   dx,DWORD PTR ds:[esi]
  42723a:	inc    esp
  42723b:	mov    ecx,edi
  42723d:	and    eax,0x43c4
  427242:	add    dl,bl
  427244:	jle    0x42720e
  427246:	imul   eax,DWORD PTR [ebx],0x1b
  427249:	lea    ecx,[ebx+ebx*4-0x2f]
  42724d:	jp     0x427288
  42724f:	call   0x471b:0x33830174
  427256:	jne    0x427257
  427258:	das    
  427259:	clc    
  42725a:	je     0x427209
  42725c:	test   bh,dh
  42725e:	jne    0x4271f4
  427260:	push   edi
  427261:	jecxz  0x427246
  427263:	dec    ecx
  427264:	jmp    0x42725c
  427266:	and    DWORD PTR [edi-0x75bc3bdb],esi
  42726c:	fiadd  WORD PTR [esi]
  42726e:	mov    edx,DWORD PTR ds:0x1428c860
  427274:	pop    ds
  427275:	les    eax,FWORD PTR [ebx+0x4a]
  427278:	loope  0x42727b
  42727a:	push   ebx
  42727b:	xor    al,0xea
  42727d:	mov    BYTE PTR ds:0x3f4807f3,bh
  427283:	repz sbb al,0xda
  427286:	mov    esi,0x516af8a6
  42728b:	mov    ds:0xbc18bc15,al
  427290:	and    BYTE PTR [ebx+edi*8],al
  427293:	inc    ebx
  427294:	out    0xc1,al
  427296:	test   DWORD PTR [ebx],0x14f9ddfd
  42729c:	clc    
  42729d:	icebp  
  42729e:	pop    es
  42729f:	ja     0x427240
  4272a1:	or     al,0x84
  4272a3:	ins    BYTE PTR es:[edi],dx
  4272a4:	pop    edi
  4272a5:	(bad)  
  4272a6:	inc    DWORD PTR [eax]
  4272a8:	add    BYTE PTR [eax],al
  4272aa:	push   0xfb7f141a
  4272af:	scas   eax,DWORD PTR es:[edi]
  4272b0:	repz xor dh,BYTE PTR [eax-0xa]
  4272b4:	les    esi,FWORD PTR [ebx+0x21]
  4272b7:	loope  0x42732f
  4272b9:	adc    eax,DWORD PTR fs:[bx+di+0x45f8]
  4272bf:	push   ebx
  4272c0:	out    dx,eax
  4272c1:	xchg   BYTE PTR [esi],bh
  4272c3:	push   0xffffff80
  4272c5:	gs (bad) 
  4272c7:	pop    esi
  4272c8:	and    BYTE PTR [ebp-0x15],0x5d
  4272cc:	mov    al,BYTE PTR [ebp-0x15]
  4272cf:	lea    ecx,[edx+0x7c8eaf45]
  4272d5:	jne    0x4272e2
  4272d7:	xchg   esp,eax
  4272d8:	addr16 out 0xe8,eax
  4272db:	pop    ebp
  4272dc:	inc    DWORD PTR [ebx+esi*4-0x64ae306d]
  4272e3:	mov    eax,ds:0x8f3000f
  4272e8:	(bad)  
  4272e9:	dec    esi
  4272ea:	and    al,0xc5
  4272ec:	or     al,ah
  4272ee:	xor    BYTE PTR [esi-0x2c],bl
  4272f1:	cli    
  4272f2:	push   es
  4272f3:	add    dl,BYTE PTR [ecx]
  4272f5:	inc    eax
  4272f6:	repz add eax,0x75cfa33
  4272fc:	loop   0x427334
  4272fe:	cmp    al,0x88
  427300:	loope  0x42737d
  427302:	(bad)  
  427303:	divps  xmm1,XMMWORD PTR [ecx]
  427306:	cmovae esp,DWORD PTR [esi]
  427309:	add    al,0xd4
  42730b:	inc    esi
  42730c:	adc    DWORD PTR [eax+eax*1],edi
  42730f:	add    BYTE PTR [eax],al
  427311:	xchg   edi,eax
  427312:	(bad)  
  427313:	in     al,0xef
  427315:	clc    
  427316:	imul   edi,DWORD PTR ds:0xd46bfb0c,0x4f
  42731d:	in     eax,dx
  42731e:	(bad)  
  42731f:	call   0x9a16c79d
  427324:	adc    DWORD PTR [ebx],eax
  427326:	sbb    DWORD PTR [ecx],ebp
  427328:	add    al,0xa8
  42732a:	sub    BYTE PTR [esi+0x660480df],0xf9
  427331:	in     al,0xe2
  427333:	hlt    
  427334:	adc    ebp,eax
  427336:	icebp  
  427337:	sar    BYTE PTR [edx+0x5e],1
  42733a:	adc    ebp,DWORD PTR [edx-0xf]
  42733d:	in     al,dx
  42733e:	imul   ebx,esp,0x7
  427341:	inc    ecx
  427342:	ins    BYTE PTR es:[edi],dx
  427343:	mov    ah,0x7b
  427345:	sub    DWORD PTR [esi],edi
  427347:	daa    
  427348:	adc    bl,dh
  42734a:	aad    0xb5
  42734c:	shl    BYTE PTR [ebp+0x4d],1
  42734f:	imul   BYTE PTR [eax-0x4]
  427352:	dec    ecx
  427353:	mov    ah,0x2
  427355:	fld    QWORD PTR [esi+0x40]
  427358:	or     dl,dh
  42735a:	push   es
  42735b:	jmp    0xa68a084b
  427360:	add    ebx,DWORD PTR [eax+0x33160d11]
  427366:	pop    es
  427367:	sub    eax,eax
  427369:	sar    bh,1
  42736b:	call   0x2d4941ac
  427370:	(bad)  
  427371:	je     0x427365
  427373:	(bad)  
  427375:	add    BYTE PTR [eax],al
  427377:	add    bh,al
  427379:	fdivp  st(7),st
  42737b:	out    0xf0,eax
  42737d:	add    al,BYTE PTR [eax]
  42737f:	out    dx,al
  427380:	add    ebp,DWORD PTR [edi+0xe]
  427383:	sub    edi,ebp
  427385:	mov    eax,DWORD PTR [eax]
  427387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427388:	xor    eax,0xf9ac366b
  42738d:	add    bh,0xe9
  427390:	lock push es
  427392:	xchg   esp,esi
  427394:	call   0xe62bb2db
  427399:	inc    esi
  42739a:	aaa    
  42739b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42739c:	and    dl,BYTE PTR [edi]
  42739e:	xchg   esp,edx
  4273a0:	sbb    al,0x47
  4273a2:	aas    
  4273a3:	jmp    0xeec07e7f
  4273a8:	mov    WORD PTR [ebx-0x390f1700],es
  4273ae:	ss test al,0x6
  4273b1:	pop    edi
  4273b2:	push   edx
  4273b3:	je     0x4273a1
  4273b5:	jns    0x4273bb
  4273b7:	jmp    0xedfc7aac
  4273bc:	and    al,0x2a
  4273be:	add    BYTE PTR [ecx+0x66f9d829],al
  4273c4:	push   esp
  4273c5:	inc    edi
  4273c6:	or     esp,DWORD PTR [ebp+0x60]
  4273c9:	pop    es
  4273ca:	add    cl,ch
  4273cc:	(bad)  
  4273cd:	inc    ebx
  4273cf:	stos   BYTE PTR es:[edi],al
  4273d0:	lock or DWORD PTR ds:0x29f4ed,0xf02e372
  4273db:	test   eax,0xf0000000
  4273e0:	aad    0x65
  4273e2:	or     ch,BYTE PTR [esi+0xb]
  4273e5:	and    DWORD PTR [esi],0xaac3fef3
  4273eb:	lock sar edx,cl
  4273ee:	fdivr  st(0),st
  4273f0:	inc    edx
  4273f1:	aas    
  4273f2:	jmp    0xc9c8f0
  4273f7:	repnz sub ch,bh
  4273fa:	je     0x42738b
  4273fc:	pop    esp
  4273fd:	add    dl,BYTE PTR [ebp+0x5d]
  427400:	sbb    al,BYTE PTR [eax]
  427402:	les    ecx,FWORD PTR [ecx-0x1e2908fa]
  427408:	repnz xor dh,ch
  42740b:	shl    DWORD PTR [ecx],0x0
  42740e:	adc    ebx,DWORD PTR [edx]
  427410:	add    esi,DWORD PTR [ebx+edi*1-0x50]
  427414:	add    cl,BYTE PTR [edi+0x56]
  427417:	test   BYTE PTR ds:0x5ec89b2,al
  42741d:	mov    esi,0xbe5e1746
  427422:	inc    esi
  427423:	adc    al,0xa7
  427425:	inc    ebx
  427426:	inc    edx
  427427:	or     cl,al
  427429:	cmp    eax,0x3bdb590a
  42742e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42742f:	pop    esp
  427430:	lock test al,al
  427433:	out    0xfc,al
  427435:	mov    ebp,0x1132644
  42743a:	jmp    0x4273f5
  42743c:	mov    DWORD PTR [ebx+0x24],0x1ee304d1
  427443:	add    BYTE PTR [eax],al
  427445:	add    BYTE PTR [ecx+ebx*2],al
  427448:	sti    
  427449:	(bad)  
  42744a:	test   DWORD PTR [edx],0xeeda43c4
  427450:	aam    0x57
  427452:	mov    al,0x5
  427454:	div    DWORD PTR ds:0x3b29ca
  42745a:	sub    eax,0xa20df6ba
  42745f:	sub    DWORD PTR [ebx],edi
  427461:	add    BYTE PTR [ebp+0x4f],bh
  427464:	arpl   ax,bp
  427466:	leave  
  427467:	inc    ebx
  427468:	sti    
  427469:	(bad)  
  42746a:	xchg   edi,eax
  42746b:	cmc    
  42746c:	or     DWORD PTR [eax-0x66],eax
  42746f:	jnp    0x4274b5
  427471:	and    al,0xf3
  427473:	rcl    BYTE PTR fs:[esi+0x1a],cl
  427477:	sbb    eax,0xdc8786cb
  42747c:	addr16 or al,0xc0
  42747f:	xchg   ecx,eax
  427480:	mov    WORD PTR ds:0xffbf4acf,?
  427486:	lds    eax,FWORD PTR [ebp-0x3fc47905]
  42748c:	add    BYTE PTR [ebp+0x4f],0x2f
  427490:	add    DWORD PTR [ebp+0x3f],0x2f
  427494:	jmp    0x34fb:0xf1e6a000
  42749b:	mov    DWORD PTR [edx-0x40],edi
  42749e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42749f:	dec    edi
  4274a0:	mov    WORD PTR [ebp+0x1f],cs
  4274a3:	fiadd  DWORD PTR [ebp+0x74]
  4274a6:	jmp    0x0:0xfaad47
  4274ad:	adc    al,0xa0
  4274af:	jnp    0x427471
  4274b1:	xchg   DWORD PTR [eax-0x7e],ebp
  4274b4:	inc    ebp
  4274b5:	pop    es
  4274b6:	das    
  4274b7:	add    DWORD PTR [ebp-0x5],0x2e
  4274bb:	jmp    0xecfb:0xf1f6a014
  4274c2:	nop
  4274c3:	jp     0x427485
  4274c5:	pop    edi
  4274c6:	popa   
  4274c7:	test   BYTE PTR [ebp-0x25],bh
  4274ca:	pop    esi
  4274cb:	jmp    0x4274d5
  4274cd:	push   0x8ee77743
  4274d2:	or     al,0x44
  4274d4:	out    0xf1,eax
  4274d6:	(bad)  
  4274d7:	(bad)  
  4274d8:	pop    edx
  4274d9:	sbb    eax,0x1ebf46b5
  4274de:	repz loop 0x427504
  4274e1:	jnp    0x4274c2
  4274e3:	bound  esi,QWORD PTR [edx+esi*8+0x5d]
  4274e7:	dec    DWORD PTR [esi+0x45]
  4274ea:	in     eax,0x29
  4274ec:	hlt    
  4274ed:	add    DWORD PTR [edi],eax
  4274ef:	test   eax,0x1a342003
  4274f4:	jmp    0x4274ee
  4274f6:	inc    edx
  4274f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274f8:	add    esi,DWORD PTR [edi+ecx*2+0x60]
  4274fc:	ss iret 
  4274fe:	inc    edx
  4274ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427500:	add    edi,DWORD PTR [edx+0x2a]
  427503:	sar    DWORD PTR [edi],1
  427505:	and    al,0x7
  427507:	repnz push eax
  427509:	aad    0x22
  42750b:	xchg   edx,eax
  42750c:	mov    eax,0x426444b
  427511:	add    BYTE PTR [eax],al
  427513:	add    BYTE PTR [eax-0x1ed00b99],ah
  427519:	(bad)  
  42751a:	call   0x323daca1
  42751f:	ja     0x427542
  427521:	xchg   DWORD PTR [esp+edx*4],eax
  427524:	arpl   sp,ax
  427526:	call   0x7ec36d2f
  42752b:	add    eax,0x5b6406f3
  427530:	lahf   
  427531:	das    
  427532:	or     eax,DWORD PTR [ebx+0x351506c4]
  427538:	(bad)  
  427539:	les    esp,FWORD PTR [ebx-0xf]
  42753c:	lods   al,BYTE PTR ds:[esi]
  42753d:	into   
  42753e:	sbb    bl,0x4c
  427541:	push   0x7a33ea82
  427546:	hlt    
  427547:	pop    ebx
  427548:	dec    ebx
  427549:	pop    edi
  42754a:	sbb    DWORD PTR [eax+ebx*8-0x188e999],ebp
  427551:	xchg   bh,dh
  427553:	ret    
  427554:	int3   
  427555:	jp     0x4274fc
  427557:	add    eax,ebp
  427559:	mov    bh,0xb5
  42755b:	jmp    0xd3e6ef53
  427560:	and    al,0x7c
  427562:	sub    edx,esp
  427564:	xchg   esp,eax
  427565:	inc    esi
  427566:	inc    DWORD PTR [ebx]
  427568:	repz fdiv st(7),st
  42756b:	test   eax,0x91c3f16b
  427570:	or     BYTE PTR [ecx],ah
  427572:	test   al,0x26
  427574:	add    al,0xe1
  427576:	inc    ebx
  427577:	ins    BYTE PTR es:[edi],dx
  427578:	add    BYTE PTR [eax],al
  42757a:	add    BYTE PTR [edx-0x1bfea82d],al
  427580:	sahf   
  427581:	sti    
  427582:	push   cs
  427583:	mov    edx,eax
  427585:	mov    WORD PTR [eax+eiz*1-0x31],?
  427589:	out    0xd5,eax
  42758b:	cwde   
  42758c:	imul   edi,ebx,0x64
  42758f:	xor    dl,bl
  427591:	mov    BYTE PTR [eax+ecx*2+0x3370c280],ah
  427598:	fisttp DWORD PTR [esp+edx*2+0x5d454457]
  42759f:	icebp  
  4275a0:	push   es
  4275a1:	add    cl,ch
  4275a3:	imul   ecx,DWORD PTR [edi+ecx*2],0x50433374
  4275aa:	jle    0x42759b
  4275ac:	push   es
  4275ad:	add    BYTE PTR [ecx+0x69],ch
  4275b0:	inc    ebx
  4275b1:	call   0x494d6e
  4275b6:	ins    BYTE PTR es:[edi],dx
  4275b7:	mov    al,0xf2
  4275b9:	adc    DWORD PTR [edx+0x13],ebp
  4275bc:	xlat   BYTE PTR ds:[ebx]
  4275bd:	inc    DWORD PTR [edx]
  4275bf:	repz jns 0x427607
  4275c2:	sbb    DWORD PTR [edi],ebx
  4275c4:	loope  0x4275c9
  4275c6:	sbb    bh,BYTE PTR [edx-0x34]
  4275c9:	ret    
  4275ca:	sbb    DWORD PTR [edi-0x3c],edx
  4275cd:	xor    eax,0xc1e5f0e9
  4275d2:	in     eax,0x5d
  4275d4:	aam    0x73
  4275d6:	fdivr  QWORD PTR [ecx]
  4275d8:	in     eax,dx
  4275d9:	inc    ecx
  4275da:	ins    BYTE PTR es:[edi],dx
  4275db:	ret    
  4275dc:	cmp    bl,BYTE PTR [eax+0x41]
  4275df:	add    BYTE PTR [eax],al
  4275e1:	add    BYTE PTR [ebp-0x35b10456],al
  4275e7:	leave  
  4275e8:	mov    WORD PTR [eax],es
  4275ea:	outs   dx,DWORD PTR ds:[esi]
  4275eb:	dec    esi
  4275ec:	push   ebx
  4275ed:	call   0x39fb10
  4275f2:	pop    ss
  4275f3:	inc    edi
  4275f4:	outs   dx,DWORD PTR ds:[esi]
  4275f5:	push   eax
  4275f6:	mov    al,0xb
  4275f8:	sub    ebx,ebx
  4275fa:	dec    ecx
  4275fb:	pop    DWORD PTR [ebp-0x2c]
  4275fe:	dec    edx
  4275ff:	push   ebp
  427600:	mov    BYTE PTR [ebp+0x5e],bh
  427603:	fst    QWORD PTR [eax+esi*2]
  427606:	jp     0x427652
  427608:	sti    
  427609:	test   BYTE PTR [edx],bl
  42760b:	push   edi
  42760c:	or     al,0x8b
  42760e:	or     al,0x3a
  427610:	mov    WORD PTR [ebp-0x22],?
  427613:	icebp  
  427614:	repz cmp cl,BYTE PTR [edx+0xa]
  427618:	jecxz  0x42761c
  42761a:	call   0x9f02f9e9
  42761f:	test   DWORD PTR [ebp+eax*2+0x458c3b16],0xc7823b7e
  42762a:	inc    edx
  42762b:	pop    edi
  42762c:	cmp    BYTE PTR [eax],al
  42762e:	sbb    ah,ch
  427630:	mov    edi,0xff704274
  427635:	mov    edi,cs
  427637:	pop    edx
  427638:	dec    ebx
  427639:	push   0x1e
  42763b:	lea    eax,[ebp+0x4c]
  42763e:	retf   0x458d
  427641:	aam    0xba
  427643:	xchg   ecx,eax
  427644:	pop    ebp
  427645:	jo     0x427647
  427647:	add    BYTE PTR [eax],al
  427649:	jb     0x427610
  42764b:	cmp    BYTE PTR [eax],al
  42764d:	fisubr DWORD PTR [edi+0x43]
  427650:	(bad)  
  427651:	fild   WORD PTR [ebp-0x7c0517a8]
  427657:	idiv   edi
  427659:	lock push ecx
  42765b:	mov    WORD PTR [ebp+0x12],?
  42765e:	inc    ebx
  42765f:	jecxz  0x4276a6
  427661:	ins    DWORD PTR es:[edi],dx
  427662:	fcomi  st,st(6)
  427664:	push   0xfffffff3
  427666:	test   eax,0x98177582
  42766b:	addr16 ss push esp
  42766e:	int3   
  42766f:	je     0x4275fe
  427671:	or     BYTE PTR cs:[edi+0x39e93745],al
  427678:	mov    DWORD PTR [esi],ebp
  42767a:	test   al,0x86
  42767c:	pop    ebp
  42767d:	pop    es
  42767e:	xor    eax,0x6fee6fbb
  427683:	(bad)  
  427684:	(bad)  
  427685:	jl     0x427609
  427687:	jmp    0x427615
  427689:	cs int3 
  42768b:	shl    DWORD PTR [ebp-0x44],cl
  42768e:	test   al,0x82
  427690:	mov    ebp,0xfb7464ef
  427695:	dec    ebx
  427696:	and    BYTE PTR [ecx-0x2989ab06],dl
  42769c:	test   BYTE PTR [ebx],dh
  42769e:	in     eax,dx
  42769f:	xor    ah,BYTE PTR [esi-0xf]
  4276a2:	repnz icebp 
  4276a4:	inc    ebx
  4276a5:	popf   
  4276a6:	call   0xeaa8c5be
  4276ab:	cli    
  4276ac:	cli    
  4276ad:	add    BYTE PTR [eax],al
  4276af:	add    BYTE PTR [esp+ecx*2],ch
  4276b2:	iret   
  4276b3:	mov    bh,0xf2
  4276b5:	outs   dx,DWORD PTR ds:[esi]
  4276b6:	(bad)  
  4276b7:	jg     0x4276c4
  4276b9:	mov    ds:0xeaf30037,al
  4276be:	ds je  0x4276ab
  4276c1:	lock fldcw WORD PTR [ebx-0xd]
  4276c5:	stc    
  4276c6:	dec    DWORD PTR [esi+esi*4-0x109a2bf5]
  4276cd:	and    BYTE PTR [ebx+0x748cf785],al
  4276d3:	sti    
  4276d4:	inc    ebx
  4276d5:	jbe    0x4276ac
  4276d7:	cmp    bl,dh
  4276d9:	ins    DWORD PTR es:[edi],dx
  4276da:	add    bl,0xef
  4276dd:	add    ebp,ebx
  4276df:	enter  0x7cc,0xac
  4276e3:	out    dx,eax
  4276e4:	leave  
  4276e5:	rcr    al,cl
  4276e7:	out    dx,al
  4276e8:	pop    esp
  4276e9:	les    esi,FWORD PTR [edx-0x2eb5ca28]
  4276ef:	dec    edx
  4276f0:	ins    BYTE PTR es:[edi],dx
  4276f1:	mov    edx,0x7372676d
  4276f6:	leave  
  4276f7:	or     esi,ebx
  4276f9:	push   es
  4276fa:	xchg   esi,eax
  4276fb:	int    0x99
  4276fd:	(bad)  
  4276ff:	xor    BYTE PTR [edx+edx*4-0x3d85a064],ah
  427706:	sbb    al,0x6b
  427708:	ret    
  427709:	shr    eax,1
  42770b:	add    ebp,DWORD PTR [edi+0x47]
  42770e:	fidivr DWORD PTR [edi-0x4e]
  427711:	add    eax,0x3e9
  427716:	add    BYTE PTR [eax+esi*8+0x5ab686e7],dh
  42771d:	cdq    
  42771e:	je     0x4276fe
  427720:	push   0x5e
  427722:	mov    esi,0x81446f54
  427727:	dec    ecx
  427728:	outs   dx,BYTE PTR fs:[esi]
  42772a:	je     0x42779a
  42772c:	retf   0x7dcc
  42772f:	mov    esi,0xbea9c15e
  427734:	push   es
  427735:	jmp    0xeaa6a0c0
  42773a:	xchg   edx,edi
  42773c:	add    eax,0xf0c003e9
  427741:	fbstp  TBYTE PTR [esi]
  427743:	cmp    eax,0x1cdab90
  427748:	push   esi
  427749:	fs push esi
  42774b:	call   0xf34705d9
  427750:	push   es
  427751:	(bad)  
  427752:	mov    esi,0xcc8ce17f
  427757:	int3   
  427758:	add    eax,DWORD PTR [ebx+0x73]
  42775b:	fdiv   st,st(0)
  42775d:	jmp    DWORD PTR [edx+esi*2]
  427760:	loope  0x427739
  427762:	adc    DWORD PTR [edi],ebp
  427764:	sti    
  427765:	mov    eax,ds:0xce344066
  42776a:	jo     0x42770e
  42776c:	or     esi,DWORD PTR [edi]
  42776e:	pop    edx
  42776f:	lock mov al,bl
  427772:	jmp    0xb4c97e67
  427777:	test   al,0x8c
  427779:	inc    ebp
  42777a:	xor    eax,0x1c000000
  42777f:	sbb    ecx,DWORD PTR [eax-0x7a8c65a0]
  427785:	aaa    
  427786:	lock mov bh,BYTE PTR [eax-0x7ff90f17]
  42778d:	fcomip st,st(0)
  42778f:	je     0x4966db
  427795:	bound  esp,QWORD PTR [ebx-0x75]
  427798:	add    al,0x70
  42779a:	bound  eax,QWORD PTR [ebx-0x7b]
  42779d:	(bad)  
  42779e:	icebp  
  42779f:	mov    ah,BYTE PTR [eax-0x7ff90f17]
  4277a5:	scas   al,BYTE PTR es:[edi]
  4277a6:	lock je 0x49682b
  4277ad:	jb     0x4277db
  4277af:	mov    ecx,DWORD PTR [eax]
  4277b1:	ins    BYTE PTR es:[edi],dx
  4277b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b3:	je     0x49681b
  4277b9:	imul   edx,ebp,0x76650b06
  4277bf:	push   es
  4277c0:	add    cl,ch
  4277c2:	ins    DWORD PTR es:[edi],dx
  4277c3:	dec    esi
  4277c4:	sti    
  4277c5:	sbb    DWORD PTR ds:0xb591c78c,esp
  4277cb:	jbe    0x4277c7
  4277cd:	sahf   
  4277ce:	imul   eax,DWORD PTR [esi+0x74],0xffffffd8
  4277d2:	jae    0x42779d
  4277d4:	jecxz  0x427810
  4277d6:	(bad)  
  4277d7:	popf   
  4277d8:	cmp    BYTE PTR [eax],al
  4277da:	loop   0x4277e2
  4277dc:	add    BYTE PTR [ebp-0x1059d9],cl
  4277e2:	add    BYTE PTR [eax],al
  4277e4:	add    BYTE PTR [ebp-0x42],bl
  4277e7:	mov    ebx,0x58d55c92
  4277ec:	pop    ecx
  4277ed:	pop    ecx
  4277ee:	out    dx,al
  4277ef:	div    BYTE PTR [esp+edi*2-0x1f]
  4277f3:	lds    edx,FWORD PTR [ecx+0x4f]
  4277f6:	inc    edi
  4277f7:	imul   eax
  4277f9:	shl    ecx,0xf5
  4277fc:	call   DWORD PTR [esi]
  4277fe:	(bad)  
  4277ff:	jae    0x427850
  427801:	and    DWORD PTR [edi-0x15],ebx
  427804:	mov    ebx,DWORD PTR [edi-0x1a]
  427807:	dec    esi
  427808:	push   esi
  427809:	das    
  42780a:	dec    edi
  42780b:	rcl    DWORD PTR [eax+0xd],cl
  42780e:	or     BYTE PTR cs:[eax],al
  427811:	mov    al,BYTE PTR [edi-0x2b2a5f4b]
  427817:	imul   al
  427819:	sar    BYTE PTR [ebx-0xa],1
  42781c:	(bad)  
  42781d:	fxch   st(1)
  42781f:	or     eax,DWORD PTR [ebx+0x2b73d4f2]
  427825:	rol    edi,1
  427827:	push   eax
  427828:	lea    ebp,[edi-0xe]
  42782b:	out    0x48,eax
  42782d:	rcl    esp,0xf6
  427830:	test   BYTE PTR [edx+0x783175f],cl
  427836:	arpl   WORD PTR [eax],cx
  427838:	mov    edx,edi
  42783a:	bound  eax,QWORD PTR [edx-0xcb60e2d]
  427840:	js     0x5e426f62
  427846:	les    ecx,FWORD PTR [ebx]
  427848:	inc    DWORD PTR [eax]
  42784a:	add    BYTE PTR [eax],al
  42784c:	(bad)  
  42784d:	(bad)  
  42784e:	out    0x2f,eax
  427850:	mov    esp,0xf783f6d4
  427855:	(bad)  
  427856:	dec    DWORD PTR [edx-0x7893cd0d]
  42785c:	outs   dx,BYTE PTR ds:[esi]
  42785d:	jl     0x4278bb
  42785f:	cmp    al,0x35
  427861:	mov    dh,BYTE PTR [ecx+0x5b]
  427864:	push   0x385a702a
  427869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42786a:	inc    edx
  42786b:	add    al,0xf3
  42786d:	cli    
  42786e:	jl     0x42785c
  427870:	js     0x427824
  427872:	sti    
  427873:	or     bh,0x57
  427876:	add    eax,0x84a0f300
  42787b:	rcr    bh,0x9f
  42787e:	jo     0x4278f5
  427880:	sti    
  427881:	fiadd  DWORD PTR [edx+0x71209ef8]
  427887:	push   eax
  427888:	push   0x35625c16
  42788d:	jo     0x42788e
  42788f:	test   BYTE PTR [ebx+0x34f1e883],dh
  427895:	ins    BYTE PTR es:[edi],dx
  427896:	add    eax,0x82eb2474
  42789b:	clc    
  42789c:	outs   dx,BYTE PTR ds:[esi]
  42789d:	adc    BYTE PTR [ecx+0x50],dh
  4278a0:	pop    ebx
  4278a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278a2:	jno    0x42789f
  4278a4:	pop    esp
  4278a5:	(bad)  
  4278a6:	ret    0x6e0b
  4278a9:	das    
  4278aa:	clc    
  4278ab:	cmp    esp,DWORD PTR [eax+0xfacf79]
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	fsubrp st(7),st
  4278b5:	adc    DWORD PTR [eax-0xd],eax
  4278b8:	aam    0xbf
  4278ba:	or     ebp,DWORD PTR [eax-0x69]
  4278bd:	jp     0x427932
  4278bf:	sti    
  4278c0:	ins    BYTE PTR es:[edi],dx
  4278c1:	cmp    al,0xe8
  4278c3:	sbb    ebp,DWORD PTR es:[esi-0x5]
  4278c7:	ja     0x427878
  4278c9:	repz adc DWORD PTR [eax+0x30],ebp
  4278cd:	add    bh,bh
  4278cf:	idiv   ah
  4278d1:	jo     0x427948
  4278d3:	test   DWORD PTR [esi],0x16e67139
  4278d9:	repz ret 
  4278db:	hlt    
  4278dc:	sub    DWORD PTR [ebp-0x23400c01],0x70
  4278e3:	pop    esi
  4278e4:	adc    edx,DWORD PTR [ecx+0x7a612e8e]
  4278ea:	sar    DWORD PTR ds:0xf2082a59,1
  4278f0:	fcmovu st,st(4)
  4278f2:	jle    0x427962
  4278f4:	pop    edi
  4278f5:	fs jo  0x4278b0
  4278f8:	mov    bh,0x50
  4278fa:	fistp  QWORD PTR [ebx+0x61]
  4278fd:	push   edx
  4278fe:	xor    al,0xb3
  427900:	rcr    BYTE PTR [edi],0x45
  427903:	sti    
  427904:	push   es
  427905:	pushf  
  427906:	jl     0x427897
  427908:	test   BYTE PTR [ebp+0x6b],al
  42790b:	jb     0x427980
  42790d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42790e:	add    eax,0xdd9306f3
  427913:	cmp    DWORD PTR [edx+0x279d],edx
  427919:	add    BYTE PTR [edi+0x4fa410be],bh
  42791f:	pusha  
  427920:	adc    bh,BYTE PTR [ecx+esi*1-0x6e]
  427924:	popf   
  427925:	daa    
  427926:	mov    ebx,0x10c76fb5
  42792b:	movzx  eax,BYTE PTR [ebx-0x3d]
  42792f:	mov    dh,0x7e
  427931:	and    ah,BYTE PTR [ebx-0x18d85ab9]
  427937:	sahf   
  427938:	outs   dx,BYTE PTR ds:[esi]
  427939:	les    edi,FWORD PTR [edi+ecx*4]
  42793c:	cmp    eax,0x2d8e1328
  427941:	sub    bh,dl
  427943:	lea    esp,ds:0xdc5fdb28
  427949:	shr    ebp,cl
  42794b:	(bad)  
  42794c:	call   0x1cacd9
  427951:	inc    esi
  427952:	sub    eax,edx
  427954:	mov    WORD PTR ds:0x91581adb,?
  42795a:	adc    al,0xa4
  42795c:	sti    
  42795d:	sahf   
  42795e:	jb     0x42792b
  427960:	and    esp,ecx
  427962:	outs   dx,DWORD PTR ds:[esi]
  427963:	retf   
  427964:	and    esi,ecx
  427966:	jae    0x427932
  427968:	and    esi,DWORD PTR [ecx]
  42796a:	pop    esi
  42796b:	retf   
  42796c:	and    ebx,ebp
  42796e:	jae    0x42793a
  427970:	and    ebp,ebp
  427972:	dec    edi
  427973:	retf   
  427974:	and    eax,ebp
  427976:	jae    0x427942
  427978:	and    esi,DWORD PTR [ecx+0x54c92a0]
  42797e:	add    BYTE PTR [eax],al
  427980:	add    bl,ah
  427982:	inc    ebx
  427983:	inc    esp
  427984:	or     eax,0xe9000adb
  427989:	lock inc ebx
  42798b:	inc    esp
  42798c:	or     eax,0xe90005d3
  427991:	lock inc ebx
  427993:	inc    esp
  427994:	or     eax,0xe9fb60c7
  427999:	lock outs dx,BYTE PTR ds:[esi]
  42799b:	pop    esi
  42799c:	mov    cl,0xf0
  42799e:	push   es
  42799f:	xchg   DWORD PTR [edi],esp
  4279a1:	lahf   
  4279a2:	xchg   edx,eax
  4279a3:	inc    esp
  4279a4:	int    0xac
  4279a6:	iret   
  4279a7:	dec    edi
  4279a8:	add    DWORD PTR [eax-0x36],eax
  4279ab:	(bad)  
  4279ac:	call   0xdbb6c01c
  4279b1:	jae    0x42797d
  4279b3:	and    esp,DWORD PTR [ecx-0x3ab36de0]
  4279b9:	hlt    
  4279ba:	lea    eax,[ebp+ecx*1+0x17]
  4279be:	outs   dx,DWORD PTR ds:[esi]
  4279bf:	cmp    dh,BYTE PTR [ecx]
  4279c1:	out    dx,eax
  4279c2:	push   es
  4279c3:	repnz stos BYTE PTR es:[edi],al
  4279c5:	repnz fimul DWORD PTR ds:0x10232c62
  4279cc:	add    BYTE PTR [ecx+0xb890346],ah
  4279d2:	fadd   QWORD PTR [ebx+0x24]
  4279d5:	fmul   QWORD PTR cs:[esp+ecx*1-0x6d]
  4279da:	or     dl,BYTE PTR [esi-0x75]
  4279dd:	outs   dx,DWORD PTR ds:[esi]
  4279de:	ss mov ebp,0x823e0a08
  4279e4:	in     al,dx
  4279e5:	add    BYTE PTR [eax],al
  4279e7:	add    BYTE PTR [ecx-0x42],bl
  4279ea:	arpl   WORD PTR [ebx+0x1c],dx
  4279ed:	mov    WORD PTR ss:[ebp+0x76],es
  4279f1:	cmp    cl,BYTE PTR [ebp+eax*2+0x2653a5e]
  4279f8:	loope  0x4279b4
  4279fa:	or     edi,edi
  4279fc:	push   ebp
  4279fd:	in     eax,dx
  4279fe:	sub    bl,bl
  427a00:	adc    edi,DWORD PTR [eax]
  427a02:	imul   DWORD PTR [edx-0x79]
  427a05:	pop    ebp
  427a06:	inc    esp
  427a07:	pop    ebp
  427a08:	dec    esi
  427a09:	xchg   DWORD PTR [ebp-0x60],esi
  427a0c:	(bad)  
  427a0e:	mov    cl,0xa3
  427a10:	xor    eax,0x74e61ed
  427a15:	push   edi
  427a16:	out    dx,eax
  427a17:	pop    eax
  427a18:	xor    ch,BYTE PTR [ebx-0x66]
  427a1b:	call   ebp
  427a1d:	loopne 0x4279dd
  427a1f:	test   DWORD PTR [ecx],esi
  427a21:	push   esi
  427a22:	std    
  427a23:	mov    cl,cl
  427a25:	cmp    DWORD PTR [ebp+eax*2+0x6539ba],ecx
  427a2c:	jo     0x427a38
  427a2e:	bound  eax,QWORD PTR [ecx]
  427a30:	add    bl,BYTE PTR [edi-0x57]
  427a33:	call   DWORD PTR [ebp-0x78]
  427a36:	les    edx,FWORD PTR [ecx+ebp*2]
  427a39:	ret    0x4c53
  427a3c:	push   esp
  427a3d:	in     al,dx
  427a3e:	push   esi
  427a3f:	pop    esi
  427a40:	mov    cl,0x21
  427a42:	mov    ebx,0x7ae6c155
  427a47:	in     al,dx
  427a48:	repz not eax
  427a4b:	push   ecx
  427a4c:	add    BYTE PTR [eax],al
  427a4e:	add    BYTE PTR [edi+eax*8+0x6ff31007],bh
  427a55:	js     0x427a4f
  427a57:	push   0xd37f1423
  427a5c:	outs   dx,DWORD PTR ds:[esi]
  427a5d:	and    BYTE PTR [ebx],0xf3
  427a60:	leave  
  427a61:	sti    
  427a62:	cli    
  427a63:	(bad)  
  427a64:	(bad)  
  427a65:	cdq    
  427a66:	aas    
  427a67:	repz jl 0x427a7d
  427a6a:	add    al,0x0
  427a6c:	xor    BYTE PTR [edi+eax*4],al
  427a6f:	retf   
  427a70:	out    0xca,al
  427a72:	repz jbe 0x427a1d
  427a75:	repz add ah,BYTE PTR [ecx]
  427a78:	mov    al,0x57
  427a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a7b:	rep outs dx,DWORD PTR ds:[esi]
  427a7d:	(bad)  
  427a7e:	cli    
  427a7f:	ds cmp al,0x6c
  427a82:	adc    eax,0xffbf5f47
  427a87:	dec    edx
  427a88:	clc    
  427a89:	leave  
  427a8a:	push   ecx
  427a8b:	jle    0x427a37
  427a8d:	cmp    esp,DWORD PTR [esi-0xd]
  427a90:	lahf   
  427a91:	inc    ebp
  427a92:	inc    ebp
  427a93:	cwde   
  427a94:	outs   dx,BYTE PTR ds:[esi]
  427a95:	ins    BYTE PTR es:[edi],dx
  427a96:	adc    eax,0xffbf35df
  427a9b:	jnp    0x427a37
  427a9d:	cmp    edi,DWORD PTR [edi-0x51]
  427aa0:	cmp    esi,DWORD PTR [esi+0x5d]
  427aa3:	xchg   ebx,eax
  427aa4:	in     eax,0x3
  427aa6:	adc    bl,dh
  427aa8:	outs   dx,DWORD PTR ds:[esi]
  427aa9:	jg     0x427b28
  427aab:	pop    es
  427aac:	jo     0x427aa0
  427aae:	push   cs
  427aaf:	jbe    0x427a53
  427ab1:	arpl   WORD PTR [eax+0x0],dx
  427ab4:	add    BYTE PTR [eax],al
  427ab6:	lds    eax,FWORD PTR [ebx+esi*8]
  427ab9:	repz push esp
  427abb:	shl    dh,cl
  427abd:	cli    
  427abe:	out    0xbf,al
  427ac0:	adc    al,BYTE PTR [eax-0xd]
  427ac3:	or     BYTE PTR [ebx],dl
  427ac5:	sti    
  427ac6:	mov    BYTE PTR [esi],0x1
  427ac9:	jg     0x427a79
  427acb:	dec    edx
  427acc:	dec    edi
  427acd:	cld    
  427ace:	mov    esp,0x7bfc5c5d
  427ad3:	rol    esp,cl
  427ad5:	ins    BYTE PTR es:[edi],dx
  427ad6:	push   es
  427ad7:	jae    0x427ab5
  427ad9:	ret    
  427ada:	adc    al,0x82
  427adc:	test   eax,0xdc5de4f6
  427ae1:	or     esp,edx
  427ae3:	(bad)  
  427ae4:	call   0xe94b9117
  427ae9:	add    edi,DWORD PTR [esi+0x27]
  427aec:	ins    BYTE PTR es:[edi],dx
  427aed:	xabort 0xb6
  427af0:	sub    ch,0x68
  427af3:	pop    es
  427af4:	jmp    0x24d31c51
  427af9:	push   0x10f5406e
  427afe:	enter  0x7cd2,0x78
  427b02:	test   DWORD PTR cs:[eax+0x625d2f24],0x88d2b386
  427b0d:	inc    ebp
  427b0e:	ss pusha 
  427b10:	jmp    0x41959981
  427b15:	xor    BYTE PTR [ebx*2+0x8342],0x0
  427b1d:	push   ss
  427b1e:	pusha  
  427b1f:	jmp    0xacd2721a
  427b24:	adc    ecx,DWORD PTR [eax+0x35f24117]
  427b2a:	pop    ebp
  427b2b:	and    bh,BYTE PTR [ecx+0x2e]
  427b2e:	pusha  
  427b2f:	mov    edx,0x274dc5cd
  427b34:	pop    ss
  427b35:	repz mov cl,0x5d
  427b38:	pop    edi
  427b39:	fsub   QWORD PTR [edx+0x1]
  427b3c:	add    BYTE PTR [edi+0x13],0x66
  427b40:	mov    edi,0xf6000f10
  427b45:	xor    al,0x85
  427b47:	sbb    eax,0xffc6e3fd
  427b4c:	ds and ah,ah
  427b4f:	or     esp,DWORD PTR [ebp-0x2e79a3cc]
  427b55:	cwde   
  427b56:	dec    ebx
  427b57:	xchg   DWORD PTR [esi],edx
  427b59:	mov    edi,0x88c6f1fb
  427b5e:	fcomi  st,st(7)
  427b60:	mov    esi,0xeb008808
  427b65:	lock push es
  427b67:	xchg   esp,ebx
  427b69:	fadd   QWORD PTR [edx+0x3f]
  427b6c:	jmp    0x6c6b1786
  427b71:	and    ecx,DWORD PTR [edi]
  427b73:	das    
  427b74:	mov    al,ds:0xde13d116
  427b79:	jb     0x427be8
  427b7b:	add    ecx,ebp
  427b7d:	lock fstp TBYTE PTR [ecx-0x2b]
  427b81:	add    BYTE PTR [eax],al
  427b83:	add    bh,dh
  427b85:	ror    DWORD PTR ds:0x390bb162,1
  427b8b:	and    ebx,esi
  427b8d:	rol    BYTE PTR ds:0x8927b172,cl
  427b93:	out    0x4f,al
  427b95:	ss add ecx,ebp
  427b98:	lock add DWORD PTR [ebp-0x7],0xffffffcd
  427b9d:	inc    ebp
  427b9e:	je     0x427b8b
  427ba0:	pop    ss
  427ba1:	movq   QWORD PTR [edi+0x6c0b5ff4],mm7
  427ba8:	xchg   ecx,eax
  427ba9:	push   es
  427baa:	add    cl,ch
  427bac:	std    
  427bad:	enter  0x2f07,0xb1
  427bb1:	pop    es
  427bb2:	add    DWORD PTR [edi+0x6b],ebx
  427bb5:	inc    edi
  427bb6:	aas    
  427bb7:	jmp    0xc58709fe
  427bbc:	hlt    
  427bbd:	pop    edi
  427bbe:	adc    eax,0x3ff15a00
  427bc3:	add    BYTE PTR [ebp+0x56],cl
  427bc6:	adc    ecx,DWORD PTR [ebp-0xcc046a]
  427bcc:	(bad)  
  427bcd:	or     edx,DWORD PTR [eax-0x1]
  427bd0:	xchg   esi,eax
  427bd1:	es and al,0x8d
  427bd4:	(bad)  
  427bd5:	es inc esp
  427bd7:	inc    DWORD PTR ds:0x2dfe74bb
  427bdd:	lock dec ebp
  427bdf:	mov    dh,al
  427be1:	ud0    ebp,DWORD PTR es:[ecx-0x24]
  427be6:	cs call 0xa3427bec
  427bec:	(bad)  
  427bed:	idiv   bh
  427bef:	xchg   ecx,eax
  427bf0:	xlat   BYTE PTR ds:[ebx]
  427bf1:	jp     0x427bf1
  427bf3:	dec    ebp
  427bf4:	pusha  
  427bf5:	jg     0x427b83
  427bf7:	fild   DWORD PTR [esi]
  427bf9:	add    BYTE PTR [eax+0xb26fe],al
  427bff:	mov    ebp,0xca0190da
  427c04:	push   es
  427c05:	arpl   si,si
  427c07:	mov    ds:0x96243501,al
  427c0c:	inc    ecx
  427c0d:	sti    
  427c0e:	mov    WORD PTR [esi],ss
  427c10:	daa    
  427c11:	and    al,0x50
  427c13:	add    al,0x48
  427c15:	(bad)  
  427c16:	dec    DWORD PTR [ebp+0x15]
  427c19:	call   0xf7301726
  427c1e:	lea    edi,[esi-0x6]
  427c21:	sub    edx,DWORD PTR [ecx+0x23]
  427c24:	call   0x162:0x501241f
  427c2b:	push   0xffffffbe
  427c2d:	les    eax,FWORD PTR [edx]
  427c2f:	int    0xec
  427c31:	mov    BYTE PTR [esi+eiz*4-0x2],al
  427c35:	add    BYTE PTR [esi+0x6a],0xdb
  427c39:	inc    ebx
  427c3a:	and    al,0xf3
  427c3c:	aaa    
  427c3d:	jp     0x427c81
  427c3f:	pop    es
  427c40:	cmp    eax,0x4baf894a
  427c45:	and    edi,DWORD PTR [ecx]
  427c47:	scas   eax,DWORD PTR es:[edi]
  427c48:	inc    ebx
  427c49:	pop    ds
  427c4a:	or     ebp,DWORD PTR [edi-0x37]
  427c4d:	(bad)  
  427c4e:	inc    DWORD PTR [eax]
  427c50:	add    BYTE PTR [eax],al
  427c52:	repz mov edx,0x201323ba
  427c58:	pop    esp
  427c59:	adc    BYTE PTR [ecx+edi*1],dh
  427c5c:	imul   eax,DWORD PTR [ebx+esi*1-0xc6a849f],0xd265ff6f
  427c67:	inc    eax
  427c68:	xor    eax,ebp
  427c6a:	fisubr WORD PTR [esi+0x68]
  427c6d:	sti    
  427c6e:	js     0x427c08
  427c70:	sub    eax,0xe13687f7
  427c75:	cmp    ah,dl
  427c77:	sti    
  427c78:	cmc    
  427c79:	cli    
  427c7a:	addr16 inc esp
  427c7c:	sub    edi,ebx
  427c7e:	pop    edi
  427c7f:	dec    esp
  427c80:	sub    edx,DWORD PTR [ebx-0x35]
  427c83:	loop   0x427c45
  427c85:	call   esp
  427c87:	clc    
  427c88:	pop    ebx
  427c89:	sbb    al,0x39
  427c8b:	fisubr DWORD PTR [eax-0x5]
  427c8e:	aas    
  427c8f:	dec    esp
  427c90:	pop    ds
  427c91:	xchg   DWORD PTR [edi],esi
  427c93:	inc    esp
  427c94:	pop    ss
  427c95:	dec    edi
  427c96:	retf   
  427c97:	fistp  QWORD PTR [edi-0x6]
  427c9a:	lods   al,BYTE PTR ds:[esi]
  427c9b:	(bad)  
  427c9c:	mov    edi,0x44f50b23
  427ca1:	je     0x427ce7
  427ca3:	js     0x427ca9
  427ca5:	adc    bl,dh
  427ca7:	outs   dx,DWORD PTR ds:[esi]
  427ca8:	jbe    0x427cee
  427caa:	xlat   BYTE PTR ds:[ebx]
  427cab:	cmp    edx,DWORD PTR [edi-0x3b]
  427cae:	cmp    dl,BYTE PTR [edx]
  427cb0:	imul   eax,DWORD PTR [edi+0x746c547b],0xb9000000
  427cba:	push   es
  427cbb:	je     0x427c7d
  427cbd:	adc    bl,bh
  427cbf:	mov    eax,0xccd269d0
  427cc4:	and    esi,DWORD PTR [eax]
  427cc6:	add    DWORD PTR [ecx+0x206f303],edi
  427ccc:	bts    ebx,esi
  427ccf:	test   al,0x3
  427cd1:	outs   dx,BYTE PTR ds:[esi]
  427cd2:	inc    esi
  427cd3:	jge    0x427ce2
  427cd5:	je     0x427c98
  427cd7:	loopne 0x427d05
  427cd9:	je     0x427cad
  427cdb:	cmc    
  427cdc:	loope  0x427cc9
  427cde:	(bad)  
  427cdf:	push   esp
  427ce0:	cli    
  427ce1:	sub    edx,edx
  427ce3:	or     al,0x30
  427ce5:	sbb    dl,dl
  427ce7:	add    al,0x30
  427ce9:	ret    
  427cea:	outs   dx,BYTE PTR ds:[esi]
  427ceb:	or     cl,al
  427ced:	or     al,0x59
  427cef:	adc    bl,BYTE PTR [ebx+ecx*2-0x31]
  427cf3:	mov    dl,0x68
  427cf5:	clc    
  427cf6:	rol    DWORD PTR [esp+ecx*1],1
  427cf9:	or     ebp,DWORD PTR [ecx+0x58e86a30]
  427cff:	adc    eax,0x4b6f1320
  427d04:	mov    edx,0xef8a58da
  427d09:	adc    BYTE PTR [edi],ch
  427d0b:	xchg   ecx,eax
  427d0c:	xchg   BYTE PTR [edx],bh
  427d0e:	pop    ecx
  427d0f:	jp     0x427d8d
  427d11:	das    
  427d12:	and    edi,DWORD PTR [ecx+0x5dff317a]
  427d18:	mov    edi,0xc1701310
  427d1d:	add    BYTE PTR [eax],al
  427d1f:	add    BYTE PTR [eax],cl
  427d21:	mov    WORD PTR [ebx+0x525f2407],fs
  427d27:	out    dx,eax
  427d28:	sub    al,0x2c
  427d2a:	mov    ds:0xbd5f6c23,eax
  427d2f:	sub    ecx,DWORD PTR [edx+ebx*8]
  427d32:	lock add edi,esi
  427d35:	hlt    
  427d36:	inc    eax
  427d38:	lock idiv bh
  427d3b:	call   0xe9628488
  427d40:	lock outs dx,BYTE PTR ds:[esi]
  427d42:	inc    ebx
  427d43:	sbb    ebx,ebx
  427d45:	pop    ebx
  427d46:	mov    DWORD PTR [esp+eiz*2+0x5bdd7d1f],ebp
  427d4d:	sbb    bh,BYTE PTR [ebp-0xb]
  427d50:	ja     0x427d2c
  427d52:	pop    es
  427d53:	jmp    0xafc986ac
  427d58:	call   0x240bc2b4
  427d5d:	enter  0x5cfa,0x2f
  427d61:	pusha  
  427d62:	xor    DWORD PTR [eax],0xffffff8d
  427d65:	pop    ebx
  427d66:	add    DWORD PTR [edi-0x29],edx
  427d69:	jg     0x427db0
  427d6b:	stc    
  427d6c:	jae    0x427db5
  427d6e:	je     0x427d5b
  427d70:	(bad)  
  427d71:	push   ds
  427d72:	ret    
  427d73:	and    eax,0xe900f2d3
  427d78:	lock push es
  427d7a:	push   0x17b4dd
  427d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d80:	add    dl,BYTE PTR [edi+0xe]
  427d83:	sub    DWORD PTR [eax],eax
  427d85:	add    BYTE PTR [eax],al
  427d87:	out    dx,eax
  427d88:	jg     0x427dce
  427d8a:	int    0xec
  427d8c:	mov    ebx,0x62583259
  427d91:	pop    ebp
  427d92:	stos   DWORD PTR es:[edi],eax
  427d93:	jecxz  0x427d9b
  427d95:	cmp    ch,0xe4
  427d98:	pop    es
  427d99:	add    ch,bh
  427d9b:	jmp    0x107f1fb
  427da0:	outs   dx,DWORD PTR ds:[esi]
  427da1:	or     esi,DWORD PTR [eax+0x5f7f5c16]
  427da7:	or     al,0xd3
  427da9:	or     al,0x88
  427dab:	rol    DWORD PTR [edx+0x3f],cl
  427dae:	jmp    0x6ad36c
  427db3:	fadd   QWORD PTR [esi+0x1]
  427db6:	add    al,0x9a
  427db8:	test   BYTE PTR [esp-0x62],ah
  427dbc:	add    ebp,DWORD PTR [eax-0x1c]
  427dbf:	je     0x427dc4
  427dc1:	add    bh,bh
  427dc3:	outs   dx,DWORD PTR ds:[esi]
  427dc4:	test   DWORD PTR [ecx],0xb3bc5a40
  427dca:	push   ebp
  427dcb:	sar    DWORD PTR [esi+0x345aec7a],1
  427dd1:	gs inc esp
  427dd3:	ins    BYTE PTR es:[edi],dx
  427dd4:	(bad)  
  427dd6:	call   0x3c17f0
  427ddb:	rol    DWORD PTR [ebp+0x3],1
  427dde:	(bad)  
  427ddf:	dec    esp
  427de0:	add    al,BYTE PTR [eax]
  427de2:	add    BYTE PTR [edx],bl
  427de4:	fidivr DWORD PTR ds:0x73e08f04
  427dea:	xor    eax,DWORD PTR [eax]
  427dec:	add    BYTE PTR [eax],al
  427dee:	cmp    al,0xc4
  427df0:	add    BYTE PTR [ebp-0x16],dh
  427df3:	xor    ebx,0x4
  427df6:	int3   
  427df7:	or     eax,DWORD PTR [ecx+0x7402a23f]
  427dfd:	add    BYTE PTR [edi-0x4f142f0d],bh
  427e03:	add    al,BYTE PTR [ebx+0x53]
  427e06:	sub    eax,0x2488fb31
  427e0b:	dec    edi
  427e0c:	jecxz  0x427ddb
  427e0e:	pop    edx
  427e0f:	in     al,dx
  427e10:	imul   bl
  427e12:	loop   0x427de3
  427e14:	cmp    bh,bh
  427e16:	in     eax,dx
  427e17:	sar    DWORD PTR ds:0x850b620c,cl
  427e1d:	inc    BYTE PTR [ebp-0x4f]
  427e20:	add    DWORD PTR [ebp+0x50504ed4],ecx
  427e26:	inc    edx
  427e27:	pop    esp
  427e28:	idiv   dh
  427e2a:	inc    ebp
  427e2b:	sar    DWORD PTR ds:0x3ee2f308,cl
  427e31:	jne    0x427e1f
  427e33:	icebp  
  427e34:	inc    ebx
  427e35:	jmp    0x41dec0
  427e3a:	jbe    0x427dea
  427e3c:	or     edx,DWORD PTR [eax+0x76]
  427e3f:	sbb    eax,0x604e84f2
  427e44:	(bad)  
  427e45:	(bad)  
  427e46:	fild   DWORD PTR [eax-0x1]
  427e49:	push   DWORD PTR [ebx-0xb]
  427e4c:	out    dx,eax
  427e4d:	pop    es
  427e4e:	dec    ebx
  427e4f:	mov    ch,0xfe
  427e51:	cli    
  427e52:	add    BYTE PTR [eax],al
  427e54:	add    BYTE PTR [ebp+ebx*4+0x7c],dl
  427e58:	inc    edx
  427e59:	jecxz  0x427e35
  427e5b:	mov    edi,0xbfe2a3fb
  427e60:	out    dx,eax
  427e61:	mov    ds:0xbefb1889,eax
  427e66:	cmp    al,BYTE PTR [di+0x2f]
  427e6a:	push   edi
  427e6b:	(bad)  
  427e6c:	push   ebx
  427e6e:	xor    al,0xb
  427e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e71:	push   es
  427e72:	and    BYTE PTR [edi+edi*2],al
  427e75:	sbb    ebx,DWORD PTR [edi-0x16]
  427e78:	adc    ecx,edx
  427e7a:	and    ch,BYTE PTR [eax+0x72]
  427e7d:	hlt    
  427e7e:	(bad)  
  427e80:	out    dx,eax
  427e81:	mov    ds:0x767ee912,eax
  427e86:	mov    ds:0xd79f7500,eax
  427e8b:	mov    ecx,0x242d7617
  427e90:	push   eax
  427e91:	dec    ebx
  427e92:	pop    edi
  427e93:	(bad)  
  427e94:	push   DWORD PTR [ebx-0x7c]
  427e97:	jmp    0x427ea0
  427e99:	(bad)  
  427e9b:	add    edi,ebx
  427e9d:	(bad)  
  427e9e:	(bad)  
  427e9f:	mov    ecx,0x1422681b
  427ea4:	lea    ebp,[ebx]
  427ea6:	in     eax,0x7e
  427ea8:	stc    
  427ea9:	lods   al,BYTE PTR ds:[esi]
  427eaa:	push   es
  427eab:	(bad)  
  427eac:	cmc    
  427ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eae:	fsub   st(3),st
  427eb0:	js     0x427ee0
  427eb2:	add    ebp,DWORD PTR [ebx+edi*1+0x1f]
  427eb6:	or     eax,0xb660
  427ebb:	add    al,dl
  427ebd:	jg     0x427e6a
  427ebf:	sbb    ecx,DWORD PTR ds:0xf4ef39f3
  427ec5:	pop    esi
  427ec6:	inc    ecx
  427ec7:	data16 jns 0x427f1f
  427eca:	pop    esi
  427ecb:	dec    esp
  427ecc:	jbe    0x427eff
  427ece:	popf   
  427ecf:	int    0xd2
  427ed1:	mov    esi,ebx
  427ed3:	add    esp,edi
  427ed5:	mov    dh,0x7e
  427ed7:	push   es
  427ed8:	pop    eax
  427ed9:	fneni(8087 only) 
  427edb:	pop    ebx
  427edc:	cmp    eax,0x6e650354
  427ee1:	inc    esi
  427ee2:	jne    0x427f0b
  427ee4:	ror    DWORD PTR [ecx+0x1cbf03b1],1
  427eea:	pusha  
  427eeb:	(bad)  
  427eec:	fdivr  DWORD PTR [edi+0x2b]
  427eef:	xor    al,0xc
  427ef1:	adc    dl,bl
  427ef3:	out    dx,al
  427ef4:	hlt    
  427ef5:	pop    esi
  427ef6:	sub    ah,BYTE PTR [esi+0x19]
  427ef9:	push   ebp
  427efa:	pusha  
  427efb:	mov    ebp,0xc2b4cfc
  427f00:	repz popa 
  427f02:	jl     0x427e87
  427f04:	jle    0x427f5c
  427f06:	sub    dh,ch
  427f08:	outs   dx,DWORD PTR ds:[esi]
  427f09:	and    ebp,DWORD PTR [edx+0x2488e864]
  427f0f:	push   0x206405e4
  427f14:	fcom   DWORD PTR [edx+edx*4+0x3d]
  427f18:	xor    edi,ebp
  427f1a:	call   0x8296c179
  427f1f:	add    BYTE PTR fs:[eax],al
  427f22:	add    BYTE PTR [ebx],ah
  427f24:	pop    edi
  427f25:	pop    edi
  427f26:	mov    esp,0x1a0054ba
  427f2b:	pop    ss
  427f2c:	jnp    0x427f71
  427f2e:	outs   dx,DWORD PTR ds:[esi]
  427f2f:	pop    ss
  427f30:	pop    edi
  427f31:	and    DWORD PTR [edx+0xe],ebx
  427f34:	push   eax
  427f35:	mov    DWORD PTR [edi-0x4dfe5b50],esp
  427f3b:	fst    DWORD PTR [esp+ecx*1-0x13724217]
  427f42:	push   0x24
  427f44:	dec    edi
  427f45:	jg     0x427f94
  427f47:	xchg   esp,eax
  427f48:	lea    eax,[ebp-0x23]
  427f4b:	mov    ds:0x202e52b6,eax
  427f50:	mov    WORD PTR [ebp-0x7],es
  427f53:	iret   
  427f54:	push   ss
  427f55:	xchg   DWORD PTR [esp+eiz*2+0x73e17551],esp
  427f5c:	dec    esp
  427f5d:	sti    
  427f5e:	(bad)  
  427f5f:	fld    DWORD PTR [ecx+0x7f7ccd74]
  427f65:	pop    esp
  427f66:	lds    edx,FWORD PTR [eax]
  427f68:	pop    edi
  427f69:	ins    BYTE PTR es:[edi],dx
  427f6a:	not    eax
  427f6c:	dec    edi
  427f6d:	test   BYTE PTR [ecx],ch
  427f6f:	daa    
  427f70:	mov    BYTE PTR [edx],bl
  427f72:	jmp    0x427f64
  427f74:	push   es
  427f75:	xchg   DWORD PTR [edi+ebp*8],esp
  427f78:	pop    esi
  427f79:	pop    esi
  427f7a:	fcom   QWORD PTR [eax-0x24da77b1]
  427f80:	inc    DWORD PTR [esi+0x4c6c3faf]
  427f86:	add    BYTE PTR [eax],0x0
  427f89:	add    BYTE PTR [eax-0x34d276b1],dl
  427f8f:	out    dx,al
  427f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f91:	call   0x21aa7a5a
  427f96:	and    BYTE PTR [edi],al
  427f98:	add    BYTE PTR [esi+0x290e27da],bl
  427f9e:	out    dx,eax
  427f9f:	shl    DWORD PTR [ebx-0x3b],cl
  427fa2:	les    edx,FWORD PTR [ebx-0x18]
  427fa5:	add    BYTE PTR [edi+0x9],bl
  427fa8:	add    BYTE PTR [eax],al
  427faa:	and    cl,BYTE PTR ds:0xa488407
  427fb0:	add    BYTE PTR [eax],al
  427fb2:	sbb    DWORD PTR [edi+0x1f],ebx
  427fb5:	adc    BYTE PTR [edx-0x2bb91204],bl
  427fbb:	ds pop ds
  427fbd:	push   cs
  427fbe:	mov    esi,edx
  427fc0:	jae    0x427fe6
  427fc2:	mov    esi,0x3e8b452e
  427fc7:	sub    edi,DWORD PTR [eax-0x7d]
  427fca:	mov    bl,0xb
  427fcc:	add    BYTE PTR [edx+ecx*2+0x76],dh
  427fd0:	inc    esp
  427fd1:	and    al,0x9a
  427fd3:	jbe    0x428051
  427fd5:	and    al,0x36
  427fd7:	fbld   TBYTE PTR [ebx-0x7c180238]
  427fdd:	shl    BYTE PTR [esi-0x13],0x8c
  427fe1:	inc    esp
  427fe2:	test   DWORD PTR ss:[edi-0x18],0xfffb3005
  427fea:	cmp    eax,0x281f3b
  427fef:	add    BYTE PTR [eax],al
  427ff1:	repnz or eax,0xe81dfe3e
  427ff7:	jae    0x42801d
  427ff9:	or     ch,al
  427ffb:	adc    al,0xa0
  427ffd:	sbb    BYTE PTR [edi-0x5],al
  428000:	mov    al,dh
  428002:	push   ds
  428003:	sub    al,0x89
  428005:	(bad)  
  428006:	push   ds
  428007:	adc    BYTE PTR [ebp-0x76f3c4a6],al
  42800d:	(bad)  
  42800e:	push   ds
  42800f:	adc    al,0xeb
  428011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428012:	mov    bh,BYTE PTR [esp-0x33]
  428016:	push   es
  428017:	jne    0x428020
  428019:	xchg   esp,eax
  42801a:	dec    edx
  42801b:	pop    ds
  42801c:	push   cs
  42801d:	retf   0x4de1
  428020:	push   0xfffffff3
  428022:	ds nop
  428024:	jl     0x42803d
  428026:	dec    eax
  428027:	mov    bh,0xe7
  428029:	nop
  42802a:	jmp    0x428089
  42802c:	sti    
  42802d:	push   0x3314eb9b
  428032:	pusha  
  428033:	out    0xff,eax
  428035:	lods   al,BYTE PTR ds:[esi]
  428036:	pusha  
  428037:	lahf   
  428038:	dec    edi
  428039:	js     0x42805c
  42803b:	scas   eax,DWORD PTR es:[edi]
  42803c:	cli    
  42803d:	es pop eax
  42803f:	pop    esi
  428040:	ror    BYTE PTR [ecx],cl
  428042:	add    al,0x91
  428044:	jl     0x42801d
  428046:	(bad)  
  428047:	mov    ebx,0x5deb70e7
  42804c:	sti    
  42804d:	cmp    BYTE PTR [eax-0x1],ah
  428050:	push   DWORD PTR [ebx+0x6d]
  428053:	in     eax,dx
  428054:	cli    
  428055:	add    BYTE PTR [eax],al
  428057:	add    BYTE PTR [eax+0x29],bh
  42805a:	scas   eax,DWORD PTR es:[edi]
  42805b:	cli    
  42805c:	ficom  WORD PTR [edi+0x5e]
  42805f:	ror    cl,cl
  428061:	dec    ecx
  428062:	nop
  428063:	jl     0x428074
  428065:	dec    eax
  428066:	mov    bh,0xe7
  428068:	aam    0xe2
  42806a:	pop    ebp
  42806b:	sti    
  42806c:	mov    al,ds:0x34875e75
  428071:	jo     0x4280d1
  428073:	jne    0x428060
  428075:	pop    eax
  428076:	cmp    BYTE PTR [edi+0x38],bh
  428079:	popa   
  42807a:	mov    eax,ds:0x41d2f0c
  42807f:	push   ebx
  428080:	sbb    al,0x5b
  428082:	imul   ecx,DWORD PTR [esi],0xffffffb3
  428085:	pop    edi
  428086:	jg     0x428104
  428088:	xlat   BYTE PTR ds:[ebx]
  428089:	xor    edi,edi
  42808b:	or     ch,BYTE PTR [edi-0x21]
  42808e:	add    eax,DWORD PTR [eax]
  428090:	repz aam 0xd2
  428093:	pop    es
  428094:	or     esi,DWORD PTR [edi]
  428096:	dec    esi
  428097:	sti    
  428098:	in     al,dx
  428099:	push   esp
  42809a:	inc    esp
  42809b:	jne    0x428096
  42809d:	push   es
  42809e:	cmp    ebp,DWORD PTR [esi+eiz*1+0x58]
  4280a2:	call   0x75ed:0x1d461c61
  4280a9:	push   esi
  4280aa:	dec    eax
  4280ab:	sub    BYTE PTR [edi-0x3d13173b],ch
  4280b1:	push   ds
  4280b2:	jp     0x42808c
  4280b4:	add    al,0xf7
  4280b6:	pop    ebp
  4280b7:	enter  0xfadc,0x80
  4280bb:	sbb    DWORD PTR [eax],eax
  4280bd:	add    BYTE PTR [eax],al
  4280bf:	scas   al,BYTE PTR es:[edi]
  4280c0:	push   ecx
  4280c1:	bound  esp,QWORD PTR [ebx+0x3a64ad7]
  4280c7:	cwde   
  4280c8:	(bad)  
  4280ca:	sti    
  4280cb:	xchg   esp,eax
  4280cc:	add    eax,0xa78861a3
  4280d1:	or     eax,0x6606bc48
  4280d6:	call   0xa32b6fcd
  4280db:	pop    ss
  4280dc:	dec    ebx
  4280dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280de:	add    esp,esp
  4280e0:	jmp    0x47c5:0xa7f323ea
  4280e7:	adc    al,0x7
  4280e9:	pusha  
  4280ea:	shl    dl,0xf2
  4280ed:	inc    edi
  4280ee:	sub    BYTE PTR [edi],ch
  4280f0:	(bad)
  4280f3:	scas   eax,DWORD PTR es:[edi]
  4280f4:	sub    al,BYTE PTR [ecx-0x26f75876]
  4280fa:	mov    ds:0x3a64ad7,al
  4280ff:	ins    BYTE PTR es:[edi],dx
  428100:	ret    0xe00c
  428103:	imul   eax,edx,0xffffffe2
  428106:	not    DWORD PTR [ebx+0x2a]
  428109:	lods   eax,DWORD PTR ds:[esi]
  42810a:	les    ecx,FWORD PTR [esp+edi*2]
  42810d:	sbb    eax,0x357fe328
  428112:	or     dl,bh
  428114:	pop    ebp
  428115:	or     DWORD PTR [ecx+0x7f],esp
  428118:	sub    al,BYTE PTR [eax]
  42811a:	xor    DWORD PTR [esi-0x75],edi
  42811d:	and    al,0x69
  42811f:	lock push es
  428121:	add    BYTE PTR [ecx+0x27000000],dl
  428127:	dec    ebx
  428128:	sti    
  428129:	sahf   
  42812a:	outs   dx,DWORD PTR ds:[esi]
  42812b:	shl    DWORD PTR [ebx],cl
  42812d:	stc    
  42812e:	lock fimul DWORD PTR [eax]
  428131:	mov    ds,WORD PTR [esp+0x52479110]
  428138:	cli    
  428139:	jle    0x4281b6
  42813b:	dec    ebp
  42813c:	adc    eax,0x10a679
  428141:	sub    ch,0x8b
  428144:	or     al,0x2d
  428146:	mov    bh,0x50
  428148:	cmc    
  428149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42814a:	int3   
  42814b:	out    dx,al
  42814c:	add    ebx,ebp
  42814e:	dec    ebx
  42814f:	mov    DWORD PTR [ebp+eax*1-0x65],eax
  428153:	mov    DWORD PTR [ebp-0x27],ecx
  428156:	imul   eax,DWORD PTR [esi],0xdecca587
  42815c:	xchg   BYTE PTR [esp+eiz*2-0x2c17774b],ah
  428163:	stc    
  428164:	jmp    0x428161
  428166:	xor    BYTE PTR [eax-0x7a],dl
  428169:	xchg   esp,eax
  42816a:	call   0xd35bc7cd
  42816f:	dec    ebx
  428170:	aaa    
  428171:	sub    bl,BYTE PTR ds:0x4a11520a
  428177:	pusha  
  428178:	sti    
  428179:	(bad)  
  42817a:	fmul   DWORD PTR [edi+0x577fc874]
  428180:	mov    eax,ds:0xfacc5
  428185:	push   edx
  428186:	lds    ebx,FWORD PTR [esi]
  428188:	sti    
  428189:	push   ebp
  42818a:	add    BYTE PTR [eax],al
  42818c:	add    ch,ch
  42818e:	add    ch,al
  428190:	das    
  428191:	cmp    cl,BYTE PTR [esi-0x5]
  428194:	bound  edi,QWORD PTR [ebx]
  428196:	and    al,0x64
  428198:	add    BYTE PTR [ecx-0x363bdc0b],al
  42819e:	or     cl,BYTE PTR [ecx+0x4effd444]
  4281a4:	(bad)  
  4281a5:	mov    edi,0xca4009b3
  4281aa:	jbe    0x4281f0
  4281ac:	and    al,0xa
  4281ae:	jecxz  0x42819b
  4281b0:	ret    
  4281b1:	gs scas eax,DWORD PTR es:[edi]
  4281b3:	add    BYTE PTR [esi+ebp*4+0x57],0x56
  4281b8:	pop    esi
  4281b9:	adc    DWORD PTR [ebp+eiz*8+0x5d],edi
  4281bd:	mov    BYTE PTR [edx-0x5],bl
  4281c0:	push   esp
  4281c1:	adc    edi,edx
  4281c3:	out    0xcb,eax
  4281c5:	or     DWORD PTR [ecx+0x2eca84f6],esi
  4281cb:	cmp    edx,DWORD PTR [esi-0x7]
  4281ce:	mov    eax,0x378a7538
  4281d3:	push   ss
  4281d4:	cmp    DWORD PTR [edi-0x5de58c01],ebx
  4281da:	add    eax,DWORD PTR [eax]
  4281dc:	add    BYTE PTR [edx-0x51],ch
  4281df:	je     0x4281f1
  4281e1:	and    eax,0x9fff072e
  4281e6:	sti    
  4281e7:	not    BYTE PTR ds:0x3b4e9e
  4281ed:	jecxz  0x42821c
  4281ef:	or     ecx,DWORD PTR [ecx+0x6f000000]
  4281f5:	dec    DWORD PTR [ebp+eax*2+0x458c9342]
  4281fc:	push   ds
  4281fd:	xchg   ebx,eax
  4281fe:	push   ecx
  4281ff:	(bad)  
  428200:	mov    edi,0xf2c92afb
  428205:	call   0xf87a:0x9115fffc
  42820c:	adc    eax,0x355cfe2e
  428211:	push   ds
  428212:	mov    BYTE PTR ds:0x5d041df3,dl
  428218:	xor    DWORD PTR [ecx-0x1],ebx
  42821b:	push   esp
  42821c:	push   0xa0746739
  428221:	(bad)  
  428222:	pop    edx
  428223:	test   BYTE PTR [ebx+0x2051c40c],dh
  428229:	xchg   esi,eax
  42822a:	sbb    al,0x75
  42822c:	add    ebp,esp
  42822e:	cli    
  42822f:	cmp    BYTE PTR [esi+0x5c],bl
  428232:	rcl    DWORD PTR ds:0xffff605b,cl
  428238:	xchg   ebx,eax
  428239:	jge    0x428213
  42823b:	bsf    ecx,DWORD PTR [ebx+0xb]
  42823f:	sti    
  428240:	ds pop eax
  428242:	pop    edx
  428243:	adc    eax,0xffbf2b1f
  428248:	jnp    0x42829d
  42824a:	out    dx,eax
  42824b:	mov    BYTE PTR [esi],ah
  42824d:	push   esp
  42824e:	nop
  42824f:	inc    ebp
  428250:	sti    
  428251:	(bad)  
  428252:	nop
  428253:	inc    ebp
  428254:	out    0x8f,eax
  428256:	mov    ch,0xfa
  428258:	add    BYTE PTR [eax],al
  42825a:	add    dh,bh
  42825c:	addr16 push cs
  42825e:	leave  
  42825f:	mov    eax,edi
  428261:	pop    edx
  428262:	sti    
  428263:	je     0x4282d3
  428265:	jle    0x42825f
  428267:	ins    BYTE PTR es:[edi],dx
  428268:	mov    eax,DWORD PTR [edx]
  42826a:	pop    ebp
  42826b:	add    eax,DWORD PTR fs:[ebp+edx*1-0x423fa04d]
  428273:	call   FWORD PTR [edi-0x48]
  428276:	xchg   BYTE PTR [edi-0x1f],bl
  428279:	(bad)  
  42827a:	clc    
  42827b:	jo     0x4282c9
  42827d:	sub    dl,BYTE PTR [edx+0x4b]
  428280:	cs scas al,BYTE PTR es:[edi]
  428282:	stc    
  428283:	xor    al,0xe4
  428285:	ds je  0x42822e
  428288:	nop
  428289:	push   ebp
  42828a:	data16 fld TBYTE PTR [edx+0x6ef23c2]
  428291:	and    bh,dl
  428293:	call   0xbcf8766b
  428298:	dec    ebp
  428299:	cld    
  42829a:	pop    ss
  42829b:	loope  0x428263
  42829d:	call   0xaa3dba22
  4282a2:	enter  0xfed0,0x10
  4282a6:	add    al,0xf3
  4282a8:	push   es
  4282a9:	mov    esi,0xdcd3e811
  4282ae:	mov    bl,0xd4
  4282b0:	loope  0x4282de
  4282b2:	pop    esi
  4282b3:	fmul   DWORD PTR [edi]
  4282b5:	adc    eax,0xccd2e728
  4282ba:	sbb    bh,BYTE PTR [edi]
  4282bc:	and    edi,ecx
  4282be:	xlat   BYTE PTR ds:[ebx]
  4282bf:	add    BYTE PTR [eax],al
  4282c1:	add    dl,bl
  4282c3:	fsubp  st(0),st
  4282c5:	add    esi,ebx
  4282c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282c8:	jp     0x4282a2
  4282ca:	shr    dh,1
  4282cc:	jno    0x4282a6
  4282ce:	shr    dh,1
  4282d0:	imul   edx,edi,0xb7fc4df4
  4282d6:	inc    esi
  4282d8:	call   0xf9658a67
  4282dd:	mov    bh,bh
  4282df:	and    dh,ch
  4282e1:	mov    ?,WORD PTR [edi]
  4282e3:	and    ecx,DWORD PTR [ecx]
  4282e5:	mov    ah,0x67
  4282e7:	ret    0x2404
  4282ea:	ret    
  4282eb:	mov    ah,0x31
  4282ed:	xlat   BYTE PTR ds:[ebx]
  4282ee:	in     al,dx
  4282ef:	sbb    DWORD PTR [eax],esp
  4282f1:	ins    BYTE PTR es:[edi],dx
  4282f2:	aam    0x4a
  4282f4:	and    bl,BYTE PTR [ebp-0x2c]
  4282f7:	dec    esi
  4282f8:	sbb    dl,bh
  4282fa:	call   0xfb6a307a
  4282ff:	popa   
  428300:	out    0x88,al
  428302:	mov    dh,0xfa
  428304:	add    edi,edx
  428306:	fmul   QWORD PTR [ebp+0x74]
  428309:	imul   DWORD PTR [ecx]
  42830b:	sar    edi,cl
  42830d:	fsub   DWORD PTR [eax+0x50]
  428310:	jne    0x4282f3
  428312:	mov    edi,0x30fc9ff3
  428317:	dec    ebp
  428318:	pop    ebp
  428319:	jb     0x4282b0
  42831b:	stos   DWORD PTR es:[edi],eax
  42831c:	mov    ebp,0x86b3f0fd
  428321:	mov    ebp,0x6af86273
  428326:	add    BYTE PTR [eax],al
  428328:	add    BYTE PTR [edx+ebx*1-0x453e2eae],al
  42832f:	stc    
  428330:	mov    dh,0x6c
  428332:	inc    edi
  428333:	je     0x428369
  428335:	add    bl,BYTE PTR [ecx+0x66]
  428338:	shl    DWORD PTR [ebp-0x3d],1
  42833b:	and    ebp,ebp
  42833d:	jmp    0xbc5e8f13
  428342:	mov    dh,0x4f
  428344:	mov    es,ebp
  428346:	sbb    BYTE PTR [edx],dl
  428348:	sub    edi,ebp
  42834a:	retf   
  42834b:	ret    
  42834c:	in     eax,dx
  42834d:	aaa    
  42834e:	ret    
  42834f:	and    esp,ecx
  428351:	fadd   DWORD PTR [esi]
  428353:	add    cl,ch
  428355:	or     ebx,DWORD PTR [ebx+edi*8]
  428358:	fsubr  st(4),st
  42835a:	mov    dh,0xe7
  42835c:	daa    
  42835d:	mov    bl,0x4e
  42835f:	sti    
  428360:	adc    BYTE PTR [ebx-0x2b2aebd8],ch
  428366:	or     eax,0xd87f0d74
  42836b:	sbb    ecx,edx
  42836d:	lock push es
  42836f:	add    BYTE PTR [ecx-0x2edc2d39],cl
  428375:	mov    edi,0xb60123d2
  42837a:	rol    DWORD PTR [edi],1
  42837c:	push   ds
  42837d:	inc    ebp
  42837e:	loopne 0x428394
  428380:	test   eax,0xc5747df0
  428385:	inc    eax
  428386:	jg     0x4283fc
  428388:	add    BYTE PTR [esi],ah
  42838a:	push   esp
  42838b:	mov    WORD PTR [eax+eax*1+0x0],es
  42838f:	add    BYTE PTR [esi],dh
  428391:	sub    BYTE PTR [eax-0x73],dl
  428394:	push   esi
  428395:	and    al,0x20
  428397:	push   eax
  428398:	test   BYTE PTR [ebx-0x4606f78c],ch
  42839e:	out    0xc6,eax
  4283a0:	adc    DWORD PTR [eax-0x4fdd7c0a],esi
  4283a6:	je     0x4283c4
  4283a8:	lahf   
  4283a9:	inc    esi
  4283aa:	pop    ds
  4283ab:	or     BYTE PTR [ecx],ah
  4283ad:	add    al,0x83
  4283af:	inc    ebp
  4283b0:	fidiv  WORD PTR [eax+0x359d1874]
  4283b6:	ud0    esp,DWORD PTR [edi]
  4283b9:	push   ebx
  4283ba:	dec    ebx
  4283bb:	push   edi
  4283bd:	cli    
  4283be:	not    BYTE PTR ds:0x3b5622
  4283c4:	cld    
  4283c5:	jnp    0x4283ac
  4283c7:	pop    ebp
  4283c8:	mov    BYTE PTR [esi-0x5],dl
  4283cb:	push   edx
  4283cc:	aam    0x7b
  4283ce:	je     0x4283f4
  4283d0:	sahf   
  4283d1:	xchg   ebp,eax
  4283d2:	not    BYTE PTR ds:0x3b569e
  4283d8:	adc    DWORD PTR [ebx],ecx
  4283da:	call   0xf6efdfa6
  4283df:	test   dl,bl
  4283e1:	ss pop ds
  4283e3:	push   edi
  4283e4:	pop    ebp
  4283e5:	inc    bl
  4283e7:	inc    ebx
  4283e8:	mov    bl,BYTE PTR [eax+0x551e15f6]
  4283ee:	cmp    eax,DWORD PTR [eax]
  4283f0:	ret    0xed0e
  4283f3:	inc    DWORD PTR [eax]
  4283f5:	add    BYTE PTR [eax],al
  4283f7:	sbb    eax,0xa6fff884
  4283fc:	push   es
  4283fd:	call   0xf6f2809a
  428402:	push   edi
  428403:	in     eax,dx
  428404:	push   ebp
  428405:	jmp    0x428419
  428407:	repz popf 
  428409:	call   FWORD PTR [edx-0x63]
  42840c:	call   0x5973db53
  428411:	call   DWORD PTR [eax+edi*2-0x7]
  428415:	imul   edx,DWORD PTR [eax-0x7ba9ac3e],0x33
  42841c:	shr    DWORD PTR [ebx],1
  42841e:	das    
  42841f:	xor    esp,DWORD PTR [esi]
  428421:	ror    DWORD PTR [ebx],0x87
  428424:	call   FWORD PTR [eax*2+0x38f8abe3]
  42842b:	mov    dh,0x51
  42842d:	retf   
  42842e:	pop    ss
  42842f:	mov    ds:0x77556ed,eax
  428434:	fstp   TBYTE PTR [edi-0xbf41bf9]
  42843a:	cli    
  42843b:	data16 sub al,0x67
  42843e:	dec    ecx
  42843f:	fsub   QWORD PTR [ecx+0x69cb7f56]
  428445:	rol    BYTE PTR [edx],1
  428447:	es jno 0x42846a
  42844a:	nop
  42844b:	out    0x1f,al
  42844d:	add    al,0x5d
  42844f:	mov    cl,0x30
  428451:	call   DWORD PTR [eax+edi*2+0x7c]
  428455:	mov    cl,0xe7
  428457:	xor    al,0xef
  428459:	push   ebp
  42845a:	sti    
  42845b:	add    BYTE PTR [eax],al
  42845d:	add    BYTE PTR [eax+0x53],ch
  428460:	add    eax,DWORD PTR [ebx+esi*4-0x7a7ad3d4]
  428467:	xor    al,0x20
  428469:	xchg   DWORD PTR ds:0x7ce804c,ebx
  42846f:	pop    edx
  428470:	mov    BYTE PTR [edx-0x25],al
  428473:	aam    0x6
  428475:	test   DWORD PTR [edx],edi
  428477:	xchg   esp,eax
  428478:	lock cli 
  42847a:	fisubr WORD PTR [ebx]
  42847c:	in     eax,dx
  42847d:	add    bl,al
  42847f:	outs   dx,BYTE PTR ds:[esi]
  428480:	mov    ch,0x8c
  428482:	scas   al,BYTE PTR es:[edi]
  428483:	push   es
  428484:	icebp  
  428485:	imul   esi,esi,0x51
  428488:	sbb    bl,BYTE PTR [edx-0x3c]
  42848b:	dec    esi
  42848c:	adc    dl,al
  42848e:	in     al,dx
  42848f:	dec    ecx
  428490:	xchg   esp,eax
  428491:	out    dx,eax
  428492:	cmp    esp,edx
  428494:	fdiv   DWORD PTR [ecx+0x5af0d429]
  42849a:	(bad)  
  42849b:	jb     0x428479
  42849d:	ret    
  42849e:	sbb    al,0xac
  4284a0:	mov    eax,DWORD PTR [ebp+0x3]
  4284a3:	pop    es
  4284a4:	cmp    al,0x8d
  4284a6:	pop    ds
  4284a7:	pop    edi
  4284a8:	out    0xb2,eax
  4284aa:	or     cl,BYTE PTR [edx+0x6d]
  4284ad:	inc    esp
  4284ae:	xchg   edi,ebp
  4284b0:	leave  
  4284b1:	iret   
  4284b2:	loopne 0x42852f
  4284b4:	sub    al,0xc
  4284b6:	push   ebp
  4284b7:	add    eax,0xdcf8cfba
  4284bc:	call   0x9ea461ae
  4284c1:	push   edx
  4284c2:	add    BYTE PTR [eax],al
  4284c4:	add    al,bl
  4284c6:	dec    ecx
  4284c7:	pop    sp
  4284c9:	enter  0xe1d3,0xb6
  4284cd:	leave  
  4284ce:	and    esi,DWORD PTR [ecx-0x11]
  4284d1:	cld    
  4284d2:	push   es
  4284d3:	sub    al,0x46
  4284d5:	jecxz  0x4284dd
  4284d7:	sbb    al,0x8d
  4284d9:	lahf   
  4284da:	pop    esi
  4284db:	xchg   edi,eax
  4284dc:	mov    ah,0xaa
  4284de:	dec    ecx
  4284df:	ins    DWORD PTR es:[edi],dx
  4284e0:	inc    esp
  4284e1:	daa    
  4284e2:	lds    edx,FWORD PTR [edx]
  4284e4:	mov    cl,0x59
  4284e6:	cli    
  4284e7:	sub    al,0xc5
  4284e9:	mov    WORD PTR [eax-0xb6710a7],?
  4284ef:	test   al,0x3
  4284f1:	je     0x4284c6
  4284f3:	loopne 0x428560
  4284f5:	xchg   esp,eax
  4284f6:	pop    edx
  4284f7:	inc    edx
  4284f8:	pop    ecx
  4284f9:	in     al,dx
  4284fa:	dec    esi
  4284fb:	cmp    dl,al
  4284fd:	or     bl,dh
  4284ff:	jmp    FWORD PTR [eax]
  428501:	cmovp  eax,DWORD PTR [eax*1+0x6a0009b3]
  428509:	das    
  42850a:	cmc    
  42850b:	add    BYTE PTR [ebx+edi*8+0x77f94881],dl
  428512:	iret   
  428513:	add    ebp,ecx
  428515:	and    al,0x7
  428517:	xchg   DWORD PTR [ecx-0xeba7ff4],ebp
  42851d:	arpl   WORD PTR [ebp+edx*1-0x7],cx
  428521:	or     DWORD PTR es:[eax],eax
  428524:	mov    ds,WORD PTR [edx-0x56]
  428527:	cli    
  428528:	or     al,0x0
  42852a:	add    BYTE PTR [eax],al
  42852c:	push   ebx
  42852d:	repz aas 
  42852f:	jmp    0xd7930bcc
  428534:	fwait
  428535:	add    al,0x55
  428538:	call   0xff4fd1be
  42853d:	pop    esi
  42853e:	mov    ah,0xcf
  428540:	dec    ebx
  428541:	dec    esp
  428542:	sti    
  428543:	or     al,0x73
  428545:	repnz aas 
  428547:	jmp    0xa7926494
  42854c:	sub    eax,DWORD PTR [ebx+0x7ff815c0]
  428552:	dec    esp
  428553:	int    0xe8
  428555:	pop    esi
  428556:	pushf  
  428557:	jg     0x428574
  428559:	dec    esp
  42855a:	sti    
  42855b:	int3   
  42855c:	and    al,0xf2
  42855e:	aas    
  42855f:	jmp    0x6b2f06b9
  428564:	(bad)  
  428567:	hlt    
  428568:	mov    ds:0x8cfd7cc9,eax
  42856d:	rcl    DWORD PTR [eax],cl
  42856f:	push   ecx
  428570:	mov    cl,0xb8
  428572:	stc    
  428573:	push   esi
  428574:	cld    
  428575:	inc    esi
  428576:	je     0x428559
  428578:	addr16 mov edx,0x35c2000f
  42857e:	jmp    0xf6d3ab82
  428583:	and    eax,0x3b58d6
  428588:	jg     0x428605
  42858a:	in     al,dx
  42858b:	and    esi,0x4d3
  428591:	add    BYTE PTR [eax],al
  428593:	pop    edx
  428594:	xchg   esi,eax
  428595:	dec    esi
  428596:	push   0x3a
  428598:	pop    edx
  428599:	sti    
  42859a:	push   edx
  42859b:	shr    DWORD PTR [ebx+0x566e15f6],1
  4285a1:	cmp    eax,DWORD PTR [eax]
  4285a3:	cdq    
  4285a4:	pop    es
  4285a5:	or     al,0x80
  4285a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285a8:	sti    
  4285a9:	push   DWORD PTR [esi+ebx*2-0x7d]
  4285ad:	jge    0x4285bb
  4285af:	sbb    bh,BYTE PTR [eax]
  4285b1:	push   ds
  4285b2:	test   DWORD PTR ds:0x9fff1a37,esp
  4285b8:	inc    BYTE PTR [edx+0x4a2432c7]
  4285be:	(bad)  
  4285bf:	mov    ch,0x79
  4285c1:	inc    ebp
  4285c2:	cld    
  4285c3:	dec    edi
  4285c4:	ret    
  4285c5:	jne    0x4285d9
  4285c7:	std    
  4285c8:	scas   eax,DWORD PTR es:[edi]
  4285c9:	je     0x4285d7
  4285cb:	mov    dl,0xcf
  4285cd:	inc    eax
  4285ce:	(bad)  
  4285cf:	xchg   ebp,eax
  4285d0:	jnp    0x4285c2
  4285d2:	mov    edi,esp
  4285d4:	inc    BYTE PTR [esi+esi*8-0x3fd5c521]
  4285db:	jae    0x428646
  4285dd:	add    BYTE PTR [eax],al
  4285df:	call   0x6f3b:0xa245ae00
  4285e6:	push   cs
  4285e7:	shl    BYTE PTR ds:0xfecf8de6,cl
  4285ed:	dec    edi
  4285ee:	push   0x2c3
  4285f3:	and    edx,edi
  4285f5:	mov    WORD PTR [ebp+0x0],es
  4285f8:	add    BYTE PTR [eax],al
  4285fa:	repz popa 
  4285fc:	scas   eax,DWORD PTR es:[edi]
  4285fd:	addr16 test eax,0x5bffff5d
  428603:	push   0xd464fa69
  428608:	push   ebx
  428609:	test   DWORD PTR [ebp-0x77],esp
  42860c:	das    
  42860d:	xchg   DWORD PTR [esi+0x22e7ad29],ebp
  428613:	mov    ss,WORD PTR [ebp-0x5]
  428616:	jp     0x4285ba
  428618:	push   ebx
  428619:	test   DWORD PTR [ebx],esi
  42861b:	jo     0x428624
  42861d:	push   edx
  42861e:	dec    ebx
  42861f:	sti    
  428620:	ret    
  428621:	stc    
  428622:	sub    al,0xf4
  428624:	fwait
  428625:	lea    esp,[esi-0x33]
  428628:	pop    eax
  428629:	sti    
  42862a:	sbb    al,0x5
  42862c:	sbb    edx,DWORD PTR [ecx+0x15]
  42862f:	pop    eax
  428630:	jmp    0x7c1d0634
  428635:	cli    
  428636:	add    al,0x28
  428638:	scas   eax,DWORD PTR es:[edi]
  428639:	xchg   BYTE PTR [esi-0x8bad99f],dh
  42863f:	jecxz  0x428685
  428641:	call   0x4654b2
  428646:	js     0x428690
  428648:	mov    WORD PTR [ebp-0x21],?
  42864b:	mov    bl,0x51
  42864d:	je     0x4285f4
  42864f:	mov    al,0xd7
  428651:	pop    es
  428652:	repz mov eax,0x443386f9
  428658:	mov    edi,?
  42865a:	inc    eax
  42865b:	aas    
  42865c:	push   edx
  42865d:	xor    eax,DWORD PTR [eax]
  42865f:	add    BYTE PTR [eax],al
  428661:	retf   
  428662:	sar    BYTE PTR [esi+0x6c25acf9],cl
  428668:	pushf  
  428669:	xor    eax,esi
  42866b:	push   ecx
  42866c:	jg     0x428684
  42866e:	mov    esp,0x2b6b67fe
  428673:	(bad)  
  428674:	(bad)  
  428675:	jle    0x42867e
  428677:	ins    BYTE PTR es:[edi],dx
  428678:	sar    DWORD PTR [esi+0x46],cl
  42867b:	pop    edx
  42867c:	jmp    0xf0945cfd
  428681:	rcr    BYTE PTR [ecx+ebp*4],0x3
  428685:	je     0x428653
  428687:	hlt    
  428688:	sub    BYTE PTR [edi],0x13
  42868b:	cdq    
  42868c:	lods   eax,DWORD PTR ds:[esi]
  42868d:	(bad)  
  42868e:	or     BYTE PTR [eax-0x3e],ah
  428691:	in     al,dx
  428692:	xchg   ebx,eax
  428693:	scas   al,BYTE PTR es:[edi]
  428694:	jmp    DWORD PTR [edi+ecx*4+0x765b0796]
  42869b:	mov    ebx,0xac923855
  4286a0:	push   edi
  4286a1:	cwde   
  4286a2:	in     al,0x1f
  4286a4:	inc    ecx
  4286a5:	sti    
  4286a6:	push   es
  4286a7:	add    cl,ch
  4286a9:	clc    
  4286aa:	cs lahf 
  4286ac:	ret    
  4286ad:	sbb    al,BYTE PTR [esi+0x7f]
  4286b0:	repz mov es,WORD PTR [esi]
  4286b3:	xchg   ebx,eax
  4286b4:	push   esi
  4286b5:	out    0xfa,al
  4286b7:	cli    
  4286b8:	ret    
  4286b9:	add    al,0x89
  4286bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286bc:	or     BYTE PTR [ebx*8+0xed0d05d],bh
  4286c3:	pop    esi
  4286c4:	mov    BYTE PTR [eax],0x0
  4286c7:	add    BYTE PTR [eax],ch
  4286c9:	xchg   esp,eax
  4286ca:	sub    eax,esp
  4286cc:	xor    al,0x91
  4286ce:	and    ebx,DWORD PTR [ecx+eax*2]
  4286d1:	das    
  4286d2:	inc    edi
  4286d3:	add    al,0xf3
  4286d5:	push   es
  4286d6:	adc    ebp,DWORD PTR [ebx+eax*1-0x39]
  4286da:	mov    ds:0x3b471455,al
  4286df:	inc    edx
  4286e0:	test   DWORD PTR [esi],0xd7c7893c
  4286e6:	aaa    
  4286e7:	mov    ecx,esi
  4286e9:	xchg   ecx,eax
  4286ea:	imul   eax,DWORD PTR [edx+esi*8+0x41b0e906],0xe8fc0046
  4286f5:	xchg   ebx,eax
  4286f6:	pop    ebp
  4286f7:	jno    0x428718
  4286f9:	ror    BYTE PTR [ebp-0x3f750f17],cl
  4286ff:	aad    0xe2
  428701:	inc    ecx
  428702:	jne    0x428759
  428704:	push   0x48
  428706:	sti    
  428707:	aam    0xc8
  428709:	inc    ecx
  42870a:	jne    0x428701
  42870c:	fcom   DWORD PTR [eax+0x0]
  42870f:	jmp    0x31b7c904
  428714:	push   0x3e
  428716:	call   0xfb836d56
  42871b:	jb     0x428762
  42871d:	mov    WORD PTR [ebp-0xf],cs
  428720:	imul   eax,DWORD PTR [esi+0x6f0e880],0x53
  428727:	add    DWORD PTR [ecx-0x6c],edi
  42872a:	add    cl,ch
  42872c:	add    BYTE PTR [eax],al
  42872e:	add    BYTE PTR [ebx],al
  428730:	inc    edi
  428731:	test   esi,edi
  428733:	mul    DWORD PTR [ecx+0x4e5b96c0]
  428739:	mov    esi,0x86dbf0e1
  42873e:	aad    0x73
  428740:	xor    dh,BYTE PTR [eax]
  428742:	cmp    ch,BYTE PTR [edx+0x5e]
  428745:	or     ebx,DWORD PTR [edi+0x3651ceb3]
  42874b:	jp     0x428783
  42874d:	je     0x42873f
  42874f:	mov    eax,0x9da705bb
  428754:	inc    eax
  428755:	retw   0x46d4
  428759:	inc    ebp
  42875a:	lods   eax,DWORD PTR ds:[esi]
  42875b:	fsubr  DWORD PTR [edx+0x40b5a5ff]
  428761:	lea    esp,[edi+eax*1]
  428764:	lods   eax,DWORD PTR ds:[esi]
  428765:	inc    DWORD PTR [eax-0x17001c78]
  42876b:	jnp    0x428776
  42876d:	xchg   DWORD PTR [eax],eax
  42876f:	sbb    cl,BYTE PTR [eax-0x7275ffff]
  428775:	dec    ebp
  428776:	sar    bl,1
  428778:	fnstenv [esp+ecx*1+0x1d]
  42877c:	push   ebp
  42877d:	add    ebp,eax
  42877f:	fdiv   QWORD PTR [edi-0x1ffe0001]
  428785:	test   bh,bh
  428787:	xchg   esi,eax
  428788:	xor    eax,0x72b2574a
  42878d:	idiv   bh
  42878f:	lods   eax,DWORD PTR ds:[esi]
  428790:	(bad)  
  428791:	fmul   DWORD PTR [ebx+0x55000000]
  428797:	add    BYTE PTR cs:[ebx-0x75f024f3],cl
  42879e:	sbb    DWORD PTR [edi-0x70ab74cb],ebp
  4287a4:	add    BYTE PTR [eax-0x72fff7b5],0x8f
  4287ab:	or     al,0x51
  4287ad:	lea    ecx,[edi-0x5800aef0]
  4287b3:	(bad)  
  4287b5:	mov    cl,cl
  4287b7:	scas   eax,DWORD PTR es:[edi]
  4287b8:	outs   dx,DWORD PTR ds:[esi]
  4287b9:	(bad)
  4287bd:	rol    BYTE PTR [esi-0x18a09c4],0xc4
  4287c4:	mov    ebp,0x4a42a7ff
  4287c9:	call   0x428fd0
  4287ce:	mov    ebp,0x9a85035d
  4287d3:	pop    es
  4287d4:	xchg   edi,eax
  4287d5:	ret    
  4287d6:	ret    0x3711
  4287d9:	(bad)  
  4287da:	popf   
  4287db:	jecxz  0x42879c
  4287dd:	xor    bl,BYTE PTR [edx-0x7ca4a689]
  4287e3:	int3   
  4287e4:	pop    es
  4287e5:	add    BYTE PTR [edi],al
  4287e7:	(bad)  
  4287e8:	jmp    0x42876d
  4287ea:	repz xchg ecx,eax
  4287ec:	dec    esp
  4287ed:	jg     0x42878e
  4287ef:	xor    DWORD PTR [edx-0x2672c3af],esi
  4287f5:	or     ebp,DWORD PTR [eax-0x43]
  4287f8:	jp     0x42883f
  4287fa:	add    BYTE PTR [eax],al
  4287fc:	add    BYTE PTR [ebx],al
  4287fe:	or     BYTE PTR [ecx*4-0x17e0b5d1],al
  428805:	push   0xffffffaa
  428807:	dec    esi
  428808:	sti    
  428809:	push   0x69
  42880b:	and    ecx,DWORD PTR [esi+ebp*2]
  42880e:	in     eax,dx
  42880f:	fadd   DWORD PTR [edi]
  428811:	jo     0x4287f8
  428813:	dec    esi
  428814:	jmp    0x41b561
  428819:	outs   dx,BYTE PTR ds:[esi]
  42881a:	adc    DWORD PTR [edi],0x2f
  42881d:	cmp    BYTE PTR [edi+esi*2+0x4e5a175c],ah
  428824:	adc    eax,0xffbf3f57
  428829:	in     eax,dx
  42882a:	fcmovne st,st(0)
  42882c:	pop    es
  42882d:	stos   DWORD PTR es:[edi],eax
  42882e:	mov    eax,ds:0xc4a64820
  428833:	add    edx,0x3705b90b
  428839:	mov    bh,0x49
  42883b:	out    0x6e,eax
  42883d:	(bad)  
  42883e:	cmp    al,0xd8
  428840:	or     edi,DWORD PTR [eax+0x6a]
  428843:	out    dx,eax
  428844:	cmp    ch,BYTE PTR [di]
  428847:	(bad)  
  428848:	dec    DWORD PTR [ebx]
  42884a:	push   esi
  42884b:	imul   edi,edx,0x743eb0f4
  428851:	inc    ebx
  428852:	pop    ss
  428853:	out    dx,al
  428854:	or     bh,BYTE PTR [esi+0x70]
  428857:	ja     0x42889d
  428859:	pop    ss
  42885a:	pusha  
  42885b:	pop    edx
  42885c:	sub    al,0x70
  42885e:	jb     0x428857
  428860:	xchg   BYTE PTR [eax],al
  428862:	add    BYTE PTR [eax],al
  428864:	cmc    
  428865:	xor    al,0xc3
  428867:	and    ebp,ebx
  428869:	push   es
  42886a:	push   ss
  42886b:	push   cs
  42886c:	mov    eax,0xccffc4bb
  428871:	mov    ebx,0x8ba8517e
  428876:	test   eax,0xfc41d7d7
  42887b:	push   DWORD PTR [ebp-0x34]
  42887e:	fcomp  st(3)
  428880:	scas   al,BYTE PTR es:[edi]
  428881:	pop    es
  428882:	jmp    0x83b8238a
  428887:	push   ecx
  428888:	mov    BYTE PTR [ebx+0x2edbd729],cl
  42888e:	adc    DWORD PTR [edx+0x78],edx
  428891:	inc    edx
  428892:	mov    edi,0x4cb7ff3
  428897:	lock mov ah,0xd8
  42889a:	inc    ecx
  42889b:	clc    
  42889c:	or     al,0x19
  42889e:	test   eax,0x665e0403
  4288a3:	inc    edi
  4288a4:	inc    ebp
  4288a6:	xchg   ecx,eax
  4288a7:	push   edx
  4288a8:	fidiv  WORD PTR [esi]
  4288aa:	test   ebx,0x5be8b03c
  4288b0:	xchg   ebx,eax
  4288b1:	mov    dl,0xe8
  4288b3:	add    ebp,DWORD PTR [edx+ebp*4-0x7adb083c]
  4288ba:	inc    BYTE PTR [ebx]
  4288bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288bd:	sbb    ebp,DWORD PTR [ecx-0x30]
  4288c0:	in     al,dx
  4288c1:	add    al,0x7c
  4288c3:	jmp    0x4288ce
  4288c5:	mov    ebx,0xf3c4
  4288ca:	add    BYTE PTR [ecx],cl
  4288cc:	mov    ebx,0xd314f40c
  4288d1:	adc    eax,0xe02df304
  4288d6:	jle    0x42893f
  4288d8:	jmp    0x4288ca
  4288da:	pop    ebx
  4288db:	leave  
  4288dc:	inc    ebx
  4288dd:	ret    0x7451
  4288e0:	mov    edx,0xf8d80004
  4288e5:	inc    eax
  4288e7:	in     al,0xfc
  4288e9:	stc    
  4288ea:	scas   al,BYTE PTR es:[edi]
  4288eb:	mov    DWORD PTR [ecx],ebp
  4288ed:	sub    esp,edi
  4288ef:	and    bh,BYTE PTR [esi]
  4288f1:	lea    edx,ds:0xfbe81b0b
  4288f7:	adc    eax,0x2e62fb3d
  4288fc:	ficomp WORD PTR [ecx+0x22]
  4288ff:	push   ds
  428900:	sub    al,0x5d
  428902:	stos   DWORD PTR es:[edi],eax
  428903:	repz push es
  428905:	push   edx
  428906:	push   ds
  428907:	push   cs
  428908:	aas    
  428909:	(bad)  
  42890a:	test   BYTE PTR [eax+0x2264ad29],0x3e
  428911:	(bad)  
  428912:	(bad)  
  428913:	mov    BYTE PTR [ecx],ch
  428915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428916:	push   esp
  428917:	ret    0x8d3d
  42891a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42891b:	or     bh,dl
  42891d:	cli    
  42891e:	fdivr  QWORD PTR [eax-0x2816bff0]
  428924:	mov    ebp,0xbaa26c03
  428929:	add    dl,BYTE PTR [esi-0x45fe45d]
  42892f:	add    BYTE PTR [eax],al
  428931:	add    BYTE PTR [eax],dh
  428933:	inc    ecx
  428934:	pop    edx
  428935:	mov    edi,0xe1b20daf
  42893a:	imul   esi,DWORD PTR [ebp+0xd3da007],0x2808b38d
  428944:	jmp    FWORD PTR [ebx+0x55]
  428947:	or     DWORD PTR [ebp+0x2e052420],eax
  42894d:	sub    DWORD PTR [esi-0x14c77935],esp
  428953:	aam    0x86
  428955:	push   ebp
  428956:	retf   
  428957:	push   cs
  428958:	mov    edi,edi
  42895a:	repz jae 0x4289cd
  42895d:	jmp    0xc3cb:0x4073f3
  428964:	push   eax
  428965:	or     al,0xc5
  428967:	addr16 mov esi,0x1a586885
  42896d:	mov    edx,DWORD PTR [ebx]
  42896f:	inc    ebx
  428970:	xor    al,cl
  428972:	fnsave [esi]
  428974:	and    cl,al
  428976:	rol    esi,1
  428978:	push   es
  428979:	inc    edx
  42897a:	mov    edi,DWORD PTR [esi-0x6]
  42897d:	iret   
  42897e:	call   0xbe66fd58
  428983:	mov    ebp,0x14bfff2e
  428988:	push   cs
  428989:	inc    eax
  42898a:	call   0x7b0b:0x710cc48b
  428991:	daa    
  428992:	mov    dl,BYTE PTR [ecx+eax*1+0x5e]
  428999:	enter  0xfb3b,0x54
  42899d:	rcr    edi,1
  42899f:	push   eax
  4289a0:	push   ecx
  4289a1:	inc    ebp
  4289a2:	sahf   
  4289a3:	dec    ecx
  4289a4:	add    ecx,ecx
  4289a6:	fsub   QWORD PTR [edi+0x56]
  4289a9:	sahf   
  4289aa:	xor    al,0x48
  4289ac:	dec    ecx
  4289ad:	mov    cs,WORD PTR [edi]
  4289af:	sub    al,al
  4289b1:	mov    bl,0x6e
  4289b3:	add    BYTE PTR [eax],al
  4289b5:	dec    edx
  4289b6:	shr    DWORD PTR [edi+0x18],0xe1
  4289ba:	or     cl,BYTE PTR [ebp+0x7c31270]
  4289c0:	sub    DWORD PTR [edi-0x34],0xffffffff
  4289c4:	push   edx
  4289c5:	jge    0x42898a
  4289c7:	mov    eax,0x40b8c
  4289cc:	lea    esp,[edx+0x1c]
  4289cf:	dec    ebx
  4289d0:	call   FWORD PTR [edi]
  4289d2:	loopne 0x4289dd
  4289d4:	inc    eax
  4289d5:	or     bh,BYTE PTR [ebp-0x3570f3c3]
  4289db:	jae    0x4289ef
  4289dd:	repz pop eax
  4289df:	rol    BYTE PTR [edi],cl
  4289e1:	inc    ebx
  4289e2:	inc    esi
  4289e3:	fwait
  4289e4:	cmp    eax,0x457d48dd
  4289e9:	(bad)  [ecx+eax*8+0x4ff27a07]
  4289f0:	dec    edi
  4289f1:	les    ebx,FWORD PTR [edx+0x4f]
  4289f4:	push   cs
  4289f5:	xor    ebp,DWORD PTR [esi]
  4289f7:	jle    0x428a76
  4289f9:	mov    ebx,0x4d762d
  4289fe:	add    BYTE PTR [eax],al
  428a00:	sti    
  428a01:	add    BYTE PTR [ecx-0x6e558ab],al
  428a07:	jle    0x428a1f
  428a09:	mov    al,BYTE PTR [eax+ebp*2]
  428a0c:	jecxz  0x428a48
  428a0e:	(bad)  
  428a0f:	call   FWORD PTR [ecx]
  428a11:	xor    ah,BYTE PTR [edi+0x4a93afe7]
  428a17:	sti    
  428a18:	shr    ebp,0x56
  428a1b:	aas    
  428a1c:	xor    eax,0x6cffd91d
  428a21:	jg     0x4289fc
  428a23:	add    ecx,ebx
  428a25:	sbb    esp,DWORD PTR [edi]
  428a27:	call   0xfb8c6dcf
  428a2c:	outs   dx,DWORD PTR ds:[esi]
  428a2d:	in     eax,dx
  428a2e:	xlat   BYTE PTR ds:[ebx]
  428a2f:	and    al,0x78
  428a31:	jb     0x428a7e
  428a33:	xchg   DWORD PTR [esi-0x14b2890b],ebx
  428a39:	xor    BYTE PTR [ebp+0x49c357e7],0xfb
  428a40:	ja     0x428a2f
  428a42:	xlat   BYTE PTR ds:[ebx]
  428a43:	adc    BYTE PTR [eax-0x5e],bh
  428a46:	not    DWORD PTR [edx-0x77]
  428a49:	xor    DWORD PTR [edi+0x5735be8c],esp
  428a4f:	mov    ecx,0x864a372a
  428a54:	sub    esi,DWORD PTR [eax]
  428a56:	fdiv   st,st(7)
  428a58:	or     eax,DWORD PTR [esi]
  428a5a:	mov    bl,0xf
  428a5c:	stc    
  428a5d:	outs   dx,DWORD PTR ds:[esi]
  428a5f:	inc    edx
  428a60:	dec    eax
  428a61:	loop   0x428a95
  428a63:	cmp    eax,0xa5000000
  428a68:	add    ebp,ecx
  428a6a:	mov    ah,0x43
  428a6c:	aam    0x6d
  428a6e:	fist   WORD PTR [eax]
  428a70:	pop    ds
  428a71:	adc    esi,DWORD PTR [edi-0x299bc08b]
  428a77:	or     al,0xd5
  428a79:	pop    edi
  428a7a:	xlat   BYTE PTR ds:[ebx]
  428a7b:	adc    BYTE PTR [edi],dl
  428a7d:	mov    ds:0x2919c8f8,al
  428a82:	add    al,0x74
  428a84:	(bad)  
  428a85:	in     al,dx
  428a86:	or     dh,BYTE PTR [eax]
  428a88:	movlps QWORD PTR [edx],xmm1
  428a8b:	mov    cl,0xc3
  428a8d:	int3   
  428a8e:	and    esi,edx
  428a90:	mov    esi,edx
  428a92:	pop    es
  428a93:	je     0x428a9a
  428a95:	push   ss
  428a96:	jge    0x428a97
  428a98:	loop   0x428a6e
  428a9a:	mov    BYTE PTR [ebx+0x74d9b4b3],dh
  428aa0:	into   
  428aa1:	pop    ecx
  428aa2:	clc    
  428aa3:	cld    
  428aa4:	sbb    DWORD PTR [ecx-0x17f6d9fd],ebp
  428aaa:	add    esi,ebx
  428aac:	mov    bl,0xf7
  428aae:	adc    DWORD PTR [esi+edi*1],edi
  428ab1:	mov    ch,0x27
  428ab3:	jecxz  0x428af2
  428ab5:	fcom   QWORD PTR [ebx-0xb]
  428ab8:	(bad)  
  428ab9:	call   0xc2250737
  428abe:	lods   eax,DWORD PTR ds:[esi]
  428abf:	xchg   edi,eax
  428ac0:	fistp  QWORD PTR [edi+0x5e070341]
  428ac6:	enter  0x124,0xa2
  428aca:	jmp    0x428acc
  428acc:	add    BYTE PTR [eax],al
  428ace:	mov    ds:0xd0c72b05,al
  428ad3:	out    0xe6,al
  428ad5:	pop    edx
  428ad6:	dec    edi
  428ad7:	aad    0xff
  428ad9:	cmc    
  428ada:	cld    
  428adb:	sub    eax,0xecf0a90e
  428ae0:	mov    edi,0x3241c5d2
  428ae5:	fsubrp st(4),st
  428ae7:	popf   
  428ae8:	push   cs
  428ae9:	sub    edi,ebp
  428aeb:	mov    ebp,0x7db8e921
  428af0:	add    cl,ch
  428af2:	lock cs pop ss
  428af5:	std    
  428af6:	ds inc edx
  428af8:	xchg   DWORD PTR [ecx+0x7574386c],edi
  428afe:	cmp    bl,BYTE PTR [eax+esi*1]
  428b01:	push   DWORD PTR [eax+0x3fe1693d]
  428b07:	mov    bl,0x23
  428b09:	leave  
  428b0a:	pop    esi
  428b0b:	inc    eax
  428b0c:	iret   
  428b0d:	arpl   WORD PTR [ebx+0x6f112fe9],bp
  428b13:	push   es
  428b14:	add    cl,ch
  428b16:	or     ecx,eax
  428b18:	cmp    esp,DWORD PTR [ebp+esi*4-0x3]
  428b1c:	gs jmp 0x21851069
  428b22:	es adc al,0x34
  428b25:	div    DWORD PTR [eax]
  428b27:	cmp    eax,0xff0ca586
  428b2c:	jle    0x428b53
  428b2e:	dec    edi
  428b2f:	or     cl,0xbd
  428b32:	add    BYTE PTR [eax],al
  428b34:	add    BYTE PTR [esi+0x48bc7ea7],bl
  428b3a:	cmp    eax,0x7747a675
  428b3f:	inc    ebp
  428b40:	loopne 0x428b98
  428b42:	test   BYTE PTR [ebp-0xf],dl
  428b45:	dec    esi
  428b46:	inc    esi
  428b47:	fdivrp st(1),st
  428b49:	push   ss
  428b4a:	add    al,0xbe
  428b4c:	out    0x7f,al
  428b4e:	or     edx,DWORD PTR cs:[esi-0x10]
  428b52:	add    BYTE PTR cs:[eax],0xf7
  428b56:	int3   
  428b57:	test   BYTE PTR [eax-0x74dc1aaa],0xdb
  428b5e:	ficomp DWORD PTR [ecx+0x4fca0cd5]
  428b64:	push   ecx
  428b65:	mov    ch,0xcb
  428b67:	retf   0x840f
  428b6a:	inc    esp
  428b6b:	pop    ds
  428b6c:	xor    BYTE PTR [ecx-0x3c],bl
  428b6f:	or     ecx,DWORD PTR [eax+0x46]
  428b72:	xor    eax,0x60b97443
  428b77:	jnp    0x428b79
  428b79:	fimul  DWORD PTR [eax]
  428b7b:	bound  eax,QWORD PTR [eax]
  428b7d:	in     eax,0xc9
  428b7f:	adc    al,0x34
  428b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b82:	dec    eax
  428b83:	sti    
  428b84:	add    BYTE PTR [esi-0xbfb1dc4],0xbf
  428b8b:	gs inc edx
  428b8d:	adc    DWORD PTR [edi+ebx*1+0x28],ecx
  428b91:	adc    ebx,eax
  428b93:	out    0x6d,eax
  428b95:	push   edi
  428b96:	or     BYTE PTR [eax],al
  428b98:	mov    eax,DWORD PTR [eax]
  428b9a:	add    BYTE PTR [eax],al
  428b9c:	out    dx,al
  428b9d:	out    dx,al
  428b9e:	adc    edx,DWORD PTR [ebx-0x1c]
  428ba1:	pop    edx
  428ba2:	push   ss
  428ba3:	pop    edi
  428ba4:	enter  0x6802,0x0
  428ba8:	mov    al,BYTE PTR [eax-0x5]
  428bab:	out    0x26,eax
  428bad:	adc    eax,0xc7d60000
  428bb2:	jae    0x428bbb
  428bb4:	jns    0x428bbf
  428bb6:	jmp    0xf70d38bb
  428bbb:	push   esi
  428bbc:	mov    ds:0xfdfe3250,al
  428bc1:	xchg   BYTE PTR [ebx],bl
  428bc3:	add    BYTE PTR [ebx+0xdfff5d7],dh
  428bc9:	jne    0x428b4d
  428bcb:	in     al,dx
  428bcc:	imul   esi,DWORD PTR [edx-0x7e],0xfffffff0
  428bd0:	repz mov ds:0x73c3fbc1,al
  428bd6:	fscale 
  428bd8:	sub    eax,0xf2044b6b
  428bdd:	sub    eax,0xf9defaff
  428be2:	out    dx,eax
  428be3:	aas    
  428be4:	repz mov eax,ds:0xb8c1743e
  428bea:	sar    bl,0x76
  428bed:	ins    DWORD PTR es:[edi],dx
  428bee:	shl    BYTE PTR [esi],1
  428bf0:	and    BYTE PTR [edi-0x22],ah
  428bf3:	mov    bh,ch
  428bf5:	jecxz  0x428c71
  428bf7:	ret    0x74d
  428bfa:	div    BYTE PTR [ebx+0x15]
  428bfd:	sub    eax,0x88e
  428c02:	add    BYTE PTR [eax+0x76],dh
  428c05:	pop    ss
  428c06:	je     0x428bfe
  428c08:	mov    al,0x4c
  428c0a:	pop    esp
  428c0b:	ds sub al,0xdd
  428c0e:	jnp    0x428c5a
  428c10:	add    al,0x7d
  428c12:	or     BYTE PTR [eax+0x6d],dh
  428c15:	add    ah,BYTE PTR [edx+0x70]
  428c18:	push   ebp
  428c19:	push   DWORD PTR [edi+ecx*4-0x68]
  428c1d:	cld    
  428c1e:	gs or  esp,esi
  428c21:	pop    ebx
  428c22:	dec    esi
  428c23:	popa   
  428c24:	mov    ah,0x46
  428c26:	pop    edx
  428c27:	stos   BYTE PTR es:[edi],al
  428c28:	jo     0x428bdb
  428c2a:	xchg   BYTE PTR [edi+0x72f85fb0],al
  428c30:	leave  
  428c31:	iret   
  428c32:	(bad)  
  428c33:	fs sub eax,0x20c451b2
  428c39:	sub    ebp,DWORD PTR [eax+0x2f]
  428c3c:	mov    eax,0xb5a1ffc3
  428c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c42:	and    ebx,esp
  428c44:	hlt    
  428c45:	lock xchg ebx,eax
  428c47:	jecxz  0x428cb6
  428c49:	dec    DWORD PTR [eax-0xc32f951]
  428c4f:	in     eax,0x47
  428c51:	jmp    0x7403:0xe905e47f
  428c58:	icebp  
  428c59:	pop    esp
  428c5a:	hlt    
  428c5b:	aam    0x6
  428c5d:	xchg   esi,eax
  428c5e:	mov    bl,0xdd
  428c60:	cmp    edi,edx
  428c62:	xor    DWORD PTR [edi+eax*2+0xf37d],edi
  428c69:	add    BYTE PTR [ebx+edi*1-0x3c20e08b],ch
  428c70:	loope  0x428ca3
  428c72:	and    al,0x46
  428c74:	push   esp
  428c75:	push   eax
  428c76:	sbb    al,0x3e
  428c78:	pop    esp
  428c79:	(bad)  
  428c7a:	mov    dl,0xc3
  428c7c:	add    al,0xfb
  428c7e:	repz das 
  428c80:	repz add al,0xf3
  428c83:	push   es
  428c84:	dec    edi
  428c85:	shl    DWORD PTR [edi-0x4d],1
  428c88:	or     al,0x24
  428c8a:	sbb    edx,DWORD PTR [eax-0x7024dff3]
  428c90:	inc    ebp
  428c91:	and    BYTE PTR [edi],al
  428c93:	das    
  428c94:	test   DWORD PTR [eax+ebp*4+0x3a],esi
  428c98:	(bad)  
  428c99:	jmp    FWORD PTR [esi+ecx*4]
  428c9c:	mov    ds:0xd962de7e,eax
  428ca1:	ret    
  428ca2:	mov    edx,cs
  428ca4:	imul   edi,DWORD PTR [edi+0x4b18e6d0],0x7
  428cab:	jecxz  0x428c75
  428cad:	dec    edx
  428cae:	mov    eax,ds:0x70fa2984
  428cb3:	pop    esi
  428cb4:	jmp    0xadd07fbc
  428cb9:	pop    ds
  428cba:	pop    es
  428cbb:	(bad)  
  428cbc:	and    eax,0x28f5f0d0
  428cc1:	pop    esi
  428cc2:	imul   BYTE PTR [esi]
  428cc4:	mov    ds:0x3a490d,al
  428cc9:	pusha  
  428cca:	jl     0x428cb2
  428ccc:	pop    ss
  428ccd:	repnz add BYTE PTR [eax],al
  428cd0:	add    BYTE PTR [ebp-0xf987bf3],ch
  428cd6:	push   es
  428cd7:	add    BYTE PTR [ebx-0x527336dc],dl
  428cdd:	cld    
  428cde:	loop   0x428d2f
  428ce0:	pop    esp
  428ce1:	push   esp
  428ce2:	out    0x1f,al
  428ce4:	cdq    
  428ce5:	mov    ecx,0xb9c923b2
  428cea:	push   esp
  428ceb:	test   DWORD PTR [ecx],ebp
  428ced:	stc    
  428cee:	test   DWORD PTR [esi+0x6806f0e9],edx
  428cf4:	lods   eax,DWORD PTR ds:[esi]
  428cf5:	outs   dx,BYTE PTR ds:[esi]
  428cf6:	(bad)  
  428cf7:	jmp    FWORD PTR [ecx+0x27]
  428cfa:	lea    ebx,ds:[ebp+0x13]
  428cfe:	mov    ebx,0x3fc106e7
  428d03:	sti    
  428d04:	jb     0x428d37
  428d06:	xlat   BYTE PTR ds:[ebx]
  428d07:	cli    
  428d08:	aam    0xc8
  428d0a:	adc    al,BYTE PTR [eax-0x17]
  428d0d:	inc    ebp
  428d0e:	ret    
  428d0f:	and    eax,DWORD PTR [ecx]
  428d11:	jg     0x428d4f
  428d13:	adc    eax,0xfff9a56d
  428d18:	adc    al,cl
  428d1a:	mov    dh,BYTE PTR [ebp+ecx*8-0xc]
  428d1e:	fsubrp st(7),st
  428d20:	sub    eax,0x74fb3e20
  428d25:	jae    0x428d09
  428d27:	ja     0x428d11
  428d29:	lock push es
  428d2b:	call   0xfb80b67c
  428d30:	fisub  WORD PTR [ebx-0x3e]
  428d33:	and    edx,DWORD PTR [ecx]
  428d35:	add    BYTE PTR [eax],al
  428d37:	add    BYTE PTR [edi+0x4a5b30c],ah
  428d3d:	in     eax,dx
  428d3e:	dec    edi
  428d3f:	out    0x83,al
  428d41:	ret    0x1723
  428d44:	lahf   
  428d45:	mov    al,BYTE PTR [eax+eax*1+0x86fe]
  428d4c:	pop    edx
  428d4d:	jne    0x428cdb
  428d4f:	test   dh,ch
  428d51:	mov    edx,0x754a0000
  428d56:	add    dh,0x6a
  428d59:	pop    ebx
  428d5a:	cmp    DWORD PTR [ebx-0x69],ebx
  428d5d:	mov    fs,WORD PTR [eax+edx*1]
  428d60:	or     eax,DWORD PTR ds:0x41a5e800
  428d66:	stc    
  428d67:	call   FWORD PTR [ecx-0x257ae83a]
  428d6d:	dec    esp
  428d6e:	sbb    edi,edi
  428d70:	jle    0x428d8b
  428d72:	adc    al,0x8b
  428d74:	int    0xcf
  428d76:	jae    0x428d9c
  428d78:	div    BYTE PTR [edx+0x63]
  428d7b:	les    esp,FWORD PTR [ecx+0x44]
  428d7e:	sti    
  428d7f:	imul   ecx,eax,0xa599e8dc
  428d85:	iret   
  428d86:	add    eax,0xe
  428d89:	cmp    cl,al
  428d8b:	inc    esp
  428d8c:	out    dx,al
  428d8d:	cmp    eax,0xcf613300
  428d92:	jae    0x428db8
  428d94:	mov    ds:0x5439afdc,al
  428d99:	iret   
  428d9a:	dec    edx
  428d9b:	inc    DWORD PTR [eax]
  428d9d:	add    BYTE PTR [eax],al
  428d9f:	(bad)  
  428da0:	out    0x13,al
  428da2:	call   FWORD PTR [edi-0x75bff04c]
  428da8:	mov    edx,0x6f852443
  428dad:	pop    ecx
  428dae:	pop    ebx
  428daf:	add    ecx,ebx
  428db1:	pop    esp
  428db2:	ret    
  428db3:	fistp  QWORD PTR [ecx-0x33917c15]
  428db9:	sub    ah,0xd6
  428dbc:	add    DWORD PTR [eax],eax
  428dbe:	add    BYTE PTR [ecx-0xc8a7d8a],ch
  428dc4:	and    eax,0x3ddefab0
  428dc9:	dec    eax
  428dca:	jne    0x428dcb
  428dcc:	xchg   edi,eax
  428dcd:	dec    eax
  428dce:	adc    eax,0xffbf5e67
  428dd3:	imul   ebp,DWORD PTR [edx+0x1b],0x10
  428dd7:	outs   dx,BYTE PTR ds:[esi]
  428dd8:	out    dx,al
  428dd9:	test   DWORD PTR [ebx-0xd0fe],0xffef631c
  428de3:	sbb    al,0x2e
  428de5:	out    dx,eax
  428de6:	or     ch,BYTE PTR [esi+0x22]
  428de9:	(bad)  
  428dea:	push   ebx
  428dec:	stos   BYTE PTR es:[edi],al
  428ded:	push   eax
  428dee:	or     ebp,DWORD PTR [edi+0x3a]
  428df1:	(bad)  
  428df2:	push   ebx
  428df4:	lods   al,BYTE PTR ds:[esi]
  428df5:	or     BYTE PTR [eax],al
  428df7:	in     al,0x9f
  428df9:	push   ebx
  428dfa:	add    bl,dh
  428dfc:	sub    eax,0x2def7a7e
  428e01:	repnz add DWORD PTR [eax],0x0
  428e05:	add    dl,cl
  428e07:	sub    eax,0x53cbffff
  428e0c:	mov    ebx,0x43a9ccf9
  428e11:	or     ebp,DWORD PTR [edi-0x67]
  428e14:	add    al,0x0
  428e16:	repz mov ds:0x1e1323bf,al
  428e1c:	inc    ebx
  428e1d:	adc    eax,0xffbf3b77
  428e22:	sbb    dl,BYTE PTR [eax]
  428e24:	jns    0x428dda
  428e26:	xlat   BYTE PTR ds:[ebx]
  428e27:	imul   eax,DWORD PTR [eax+eax*1],0x565bf5f3
  428e2e:	arpl   WORD PTR [eax-0x550399bd],ax
  428e34:	iret   
  428e35:	and    eax,edi
  428e37:	adc    eax,0xa8634a5c
  428e3c:	inc    edx
  428e3d:	lea    esi,[edi+0x6]
  428e40:	or     eax,0xe906f204
  428e45:	pop    ebx
  428e46:	cmp    BYTE PTR [ecx],0x52
  428e49:	inc    edi
  428e4a:	call   0x136233be
  428e4f:	xlat   BYTE PTR ds:[ebx]
  428e50:	icebp  
  428e51:	mov    gs,WORD PTR [edi-0x164bfd1e]
  428e57:	outs   dx,DWORD PTR ds:[esi]
  428e58:	lods   eax,DWORD PTR ds:[esi]
  428e59:	pop    ds
  428e5a:	or     edi,edx
  428e5c:	pop    ebp
  428e5d:	ds ret 
  428e5f:	mov    DWORD PTR [ebp+0x20],ebp
  428e62:	add    eax,DWORD PTR [esi]
  428e64:	jmp    0x6dcc516c
  428e69:	and    BYTE PTR [eax],al
  428e6b:	add    BYTE PTR [eax],al
  428e6d:	aas    
  428e6e:	push   es
  428e6f:	jmp    0xc2ef3177
  428e74:	stos   BYTE PTR es:[edi],al
  428e75:	ja     0x428e31
  428e77:	les    ebp,FWORD PTR [ebx+0x45757214]
  428e7d:	clc    
  428e7e:	and    BYTE PTR ds:0x634777ec,0xd2
  428e85:	ins    DWORD PTR es:[edi],dx
  428e86:	int3   
  428e87:	lock inc esi
  428e89:	and    esi,DWORD PTR [esi]
  428e8b:	pop    ecx
  428e8c:	add    BYTE PTR [esi+ecx*2+0x39],ch
  428e90:	adc    ecx,eax
  428e92:	fimul  WORD PTR [esi+0x2]
  428e95:	(bad)  [edi]
  428e97:	popa   
  428e98:	inc    esi
  428e99:	mov    eax,0x1bcfa98b
  428e9e:	xor    BYTE PTR [eax+edi*8],0xe5
  428ea2:	cmp    eax,0xf012b21d
  428ea7:	fcmove st,st(7)
  428ea9:	das    
  428eaa:	test   BYTE PTR ds:0x89d73320,ch
  428eb0:	lock or al,0x19
  428eb3:	sub    DWORD PTR [ecx*1+0x743810ff],eax
  428eba:	(bad)  
  428ebb:	(bad)  
  428ebc:	call   0x218659bc
  428ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ec2:	cs (bad) 
  428ec4:	and    DWORD PTR [ebp+0x3e302f31],ebp
  428eca:	jg     0x428f14
  428ecc:	loope  0x428e54
  428ece:	xor    DWORD PTR [ebp+eax*1+0x0],0x0
  428ed3:	add    BYTE PTR [edi-0x4b],bl
  428ed6:	mov    DWORD PTR [esi-0x58],0xb53f7d91
  428edd:	mov    al,al
  428edf:	mov    ebp,0x574314a
  428ee4:	sbb    eax,DWORD PTR [ebx+0x3164cd44]
  428eea:	je     0x428eb1
  428eec:	or     dh,al
  428eee:	push   edx
  428eef:	xor    edx,0x1e
  428ef2:	mov    BYTE PTR [ecx-0x4b],dh
  428ef5:	xor    eax,ebp
  428ef7:	js     0x428f34
  428ef9:	xor    bl,bh
  428efb:	jb     0x428f39
  428efd:	jmp    0x486:0xdd4e960f
  428f04:	fwait
  428f05:	jae    0x428f13
  428f07:	jmp    0xe9abc4d6
  428f0c:	pop    ds
  428f0d:	or     eax,ebx
  428f0f:	bound  ebp,QWORD PTR [edi+0x48f4fa35]
  428f15:	sbb    DWORD PTR [eax-0x17],eax
  428f18:	dec    ecx
  428f19:	leave  
  428f1a:	add    esi,DWORD PTR [edx-0x3]
  428f1d:	jne    0x428f71
  428f1f:	bound  esp,QWORD PTR [eax]
  428f21:	pop    ds
  428f22:	psubsw mm6,mm0
  428f25:	push   es
  428f26:	repnz sub eax,0x1500fed3
  428f2c:	popf   
  428f2d:	xlat   BYTE PTR ds:[ebx]
  428f2e:	out    0xcf,eax
  428f30:	call   0xcda58a65
  428f35:	sar    BYTE PTR [ebp+0x0],1
  428f3b:	xchg   esi,eax
  428f3c:	or     DWORD PTR [esi-0x75],ecx
  428f3f:	sti    
  428f40:	scas   eax,DWORD PTR es:[edi]
  428f41:	cmp    eax,0xd3344504
  428f46:	mov    ebx,DWORD PTR [edx]
  428f48:	or     eax,DWORD PTR [ebp+0x7a3446c0]
  428f4e:	clc    
  428f4f:	dec    ebx
  428f50:	inc    esp
  428f51:	add    eax,0xdb957ff
  428f56:	inc    eax
  428f57:	pop    edx
  428f58:	xchg   BYTE PTR [esi+0x4],al
  428f5b:	lods   eax,DWORD PTR ds:[esi]
  428f5c:	ins    BYTE PTR es:[edi],dx
  428f5d:	mov    edx,0x84358a8b
  428f62:	shl    BYTE PTR [esi+0x3a],0x7a
  428f66:	clc    
  428f67:	sbb    eax,DWORD PTR [ebp+0x5]
  428f6a:	cmp    eax,0x80010814
  428f6f:	xchg   BYTE PTR [esi],al
  428f71:	sub    eax,eax
  428f73:	leave  
  428f74:	pop    ss
  428f75:	rol    BYTE PTR [eax-0x27],0x65
  428f79:	sub    ah,0x6b
  428f7c:	xchg   BYTE PTR [ebp-0x4],ah
  428f7f:	or     bh,BYTE PTR [esp+eax*2+0x74ca5afc]
  428f86:	or     al,0x72
  428f88:	or     DWORD PTR [eax+eax*1-0x26],eax
  428f8c:	dec    esi
  428f8d:	sti    
  428f8e:	inc    BYTE PTR [edi+0x33]
  428f91:	not    BYTE PTR ds:0x3b2256
  428f97:	push   edi
  428f98:	enter  0x777,0x41
  428f9c:	jne    0x428f95
  428f9e:	test   DWORD PTR [eax],eax
  428fa0:	add    BYTE PTR [eax],al
  428fa2:	mov    al,BYTE PTR [ebp-0x3]
  428fa5:	xor    cl,BYTE PTR [edx-0x65f7460f]
  428fab:	bound  eax,QWORD PTR [edx-0x4c87d0f]
  428fb1:	dec    DWORD PTR [edx-0xcdbbc3e]
  428fb7:	and    eax,0xfbf573fe
  428fbc:	pop    ebx
  428fbd:	mov    al,ds:0x87448bbc
  428fc2:	mov    ch,0x14
  428fc4:	ds add al,0xf3
  428fc7:	test   al,0xbc
  428fc9:	pop    es
  428fca:	xor    al,0x2c
  428fcc:	pop    ebx
  428fcd:	xchg   DWORD PTR [ebx-0x183f85e3],esi
  428fd3:	aaa    
  428fd4:	js     0x428fde
  428fd6:	ret    
  428fd7:	fsubr  QWORD PTR [ebp-0x8b38ff9]
  428fdd:	inc    DWORD PTR [ebp+0x74]
  428fe0:	repz cli 
  428fe2:	out    0x5d,al
  428fe4:	lock aas 
  428fe6:	repz test al,0x34
  428fe9:	jmp    0xfb8674ae
  428fee:	mov    esi,0xc55152b8
  428ff3:	push   eax
  428ff4:	dec    ebp
  428ff5:	push   edx
  428ff6:	mov    ebp,0xa6fed973
  428ffb:	jnp    0x428faa
  428ffd:	gs add al,0x94
  429000:	inc    esp
  429001:	adc    eax,0xffbf5c6f
  429006:	add    BYTE PTR [eax],al
  429008:	add    BYTE PTR [ecx+0x2e06cae3],bh
  42900e:	push   edi
  42900f:	inc    BYTE PTR [eax]
  429011:	jae    0x428fe4
  429013:	pop    es
  429014:	cs mov bl,0x58
  429017:	clc    
  429018:	push   edx
  429019:	dec    ebx
  42901a:	ds pop ss
  42901c:	inc    eax
  42901d:	repz lds esi,FWORD PTR [ebx+0x18]
  429021:	xor    ebx,DWORD PTR [esi]
  429023:	daa    
  429024:	push   ebx
  429025:	mov    esp,0xbb873f74
  42902a:	cmp    BYTE PTR [ecx+0x75],al
  42902d:	imul   DWORD PTR [edi]
  42902f:	aas    
  429030:	out    0xa,eax
  429032:	pop    es
  429033:	ss inc ebx
  429035:	add    ebx,DWORD PTR es:[edx+0x2917d719]
  42903c:	add    al,0x74
  42903e:	dec    esi
  42903f:	pop    esi
  429040:	or     edi,DWORD PTR [esp+edx*2+0x342010fc]
  429047:	sbb    DWORD PTR [eax*8-0x351cf1ba],ecx
  42904e:	cmp    eax,0x81f30ca7
  429053:	mov    ah,0x3f
  429055:	ret    0xb2dc
  429058:	fld    st(2)
  42905a:	fdivr  QWORD PTR [edx-0x46cc5e2a]
  429060:	(bad)  
  429062:	leave  
  429063:	hlt    
  429064:	mov    ?,eax
  429066:	fstp   TBYTE PTR [ecx]
  429068:	aam    0xec
  42906a:	xlat   BYTE PTR ds:[ebx]
  42906b:	xor    DWORD PTR [ecx],ebx
  42906d:	add    BYTE PTR [eax],al
  42906f:	add    BYTE PTR [ebx-0x15fc56e9],dh
  429075:	mov    ecx,0xed2db8f4
  42907a:	xchg   ebx,eax
  42907b:	aas    
  42907c:	lahf   
  42907d:	inc    esp
  42907e:	mov    ebx,0x7f0796d9
  429083:	push   es
  429084:	mov    eax,ds:0xf80d8edc
  429089:	mov    eax,0x8ade42fc
  42908e:	fcmovnb st,st(3)
  429090:	in     al,dx
  429091:	mov    ebp,DWORD PTR [ecx]
  429093:	(bad)  
  429094:	xor    ebx,DWORD PTR cs:[ebp+0xc]
  429098:	je     0x429099
  42909a:	cmp    BYTE PTR [ebx+0x42],al
  42909d:	(bad)  
  42909e:	mov    ebp,0xe0c4746f
  4290a3:	mov    WORD PTR [edx],?
  4290a5:	(bad)  
  4290a6:	js     0x4290ac
  4290a8:	aam    0x6b
  4290aa:	adc    al,0x8f
  4290ac:	(bad)  
  4290ad:	mov    BYTE PTR [eax],al
  4290af:	lds    ecx,FWORD PTR [ebx+ecx*1]
  4290b2:	add    cl,ch
  4290b4:	mov    ebp,0xb9c22dd8
  4290b9:	sub    eax,0xc6fee115
  4290be:	jmp    FWORD PTR [ecx-0x38]
  4290c1:	sub    eax,0x17170d74
  4290c6:	je     0x4290b8
  4290c8:	ins    DWORD PTR es:[edi],dx
  4290c9:	ds call 0xfb750b58
  4290cf:	cmp    dl,0xd5
  4290d2:	out    0xf4,eax
  4290d4:	add    BYTE PTR [eax],al
  4290d6:	add    dh,cl
  4290d8:	sub    al,0xfb
  4290da:	ins    DWORD PTR es:[edi],dx
  4290db:	mov    al,0xbb
  4290dd:	fs shr esp,1
  4290e0:	pop    es
  4290e1:	add    cl,ch
  4290e3:	jge    0x42913b
  4290e5:	lea    ebx,[esp+edx*1+0x34]
  4290e9:	sti    
  4290ea:	inc    esi
  4290eb:	or     BYTE PTR [edi],dl
  4290ed:	push   0x3f
  4290ef:	mov    cl,0x83
  4290f1:	test   DWORD PTR [ebp-0x4d],eax
  4290f4:	sub    eax,0x1bb199fb
  4290f9:	nop
  4290fa:	cli    
  4290fb:	xor    BYTE PTR [edx],dh
  4290fd:	mov    WORD PTR [esp+ebx*8-0xf163f92],ss
  429104:	push   es
  429105:	call   0xfb70f477
  42910a:	je     0x429177
  42910c:	sub    esi,edi
  42910e:	(bad)  
  42910f:	mov    dl,0xd6
  429111:	gs jmp 0x5c92d594
  429117:	jnp    0x42913b
  429119:	std    
  42911a:	out    0x32,al
  42911c:	xlat   BYTE PTR ds:[ebx]
  42911d:	cli    
  42911e:	hlt    
  42911f:	xchg   esp,eax
  429120:	push   ss
  429121:	inc    eax
  429122:	jmp    0xedb6d79c
  429127:	xchg   esi,eax
  429128:	push   es
  429129:	lea    eax,[eax]
  42912b:	dec    edi
  42912c:	fcomip st,st(2)
  42912e:	push   DWORD PTR [ebp+0x5a]
  429131:	dec    esi
  429132:	dec    edi
  429134:	lea    edx,[ecx]
  429136:	inc    eax
  429137:	call   0x0:0xe48580
  42913e:	push   ecx
  42913f:	(bad)  
  429140:	not    BYTE PTR [eax-0x7e]
  429143:	push   ss
  429144:	call   0x750c:0x74c765fe
  42914b:	jns    0x429150
  42914d:	push   edi
  42914e:	bound  ecx,QWORD PTR [edx-0x7675ffd5]
  429154:	shl    BYTE PTR [ebp+0x46],0x2d
  429158:	inc    esp
  429159:	adc    BYTE PTR [edi+0x8],bl
  42915c:	cmp    bl,0x60
  42915f:	jns    0x429172
  429161:	push   0xfffb1e5a
  429166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429167:	sbb    eax,ecx
  429169:	adc    bl,BYTE PTR [edx-0x5c3c09fb]
  42916f:	push   esi
  429170:	idiv   bh
  429172:	cmc    
  429173:	mov    edx,0x3b18eb00
  429178:	mov    ebx,0xb9bc815e
  42917d:	or     al,0xa
  42917f:	pop    eax
  429180:	sub    ah,0x8b
  429183:	not    BYTE PTR [edi]
  429185:	add    DWORD PTR [edx],ebx
  429187:	add    eax,0xc63d564b
  42918c:	xor    al,0x7c
  42918e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42918f:	dec    ebx
  429190:	sti    
  429191:	mov    WORD PTR [edi-0xb],?
  429194:	out    0x9f,eax
  429196:	test   eax,0x1a840004
  42919b:	push   ss
  42919c:	test   BYTE PTR [esi-0x7cfffb36],dl
  4291a2:	add    BYTE PTR [eax],al
  4291a4:	add    BYTE PTR [edi],dh
  4291a6:	add    eax,DWORD PTR [eax]
  4291a8:	(bad)  
  4291a9:	repz loop 0x4291ec
  4291ac:	add    BYTE PTR [esi],bh
  4291ae:	and    BYTE PTR [eax+0x75],al
  4291b1:	jecxz  0x429167
  4291b3:	mov    ecx,0x37fbb40b
  4291b8:	sti    
  4291b9:	outs   dx,BYTE PTR es:[esi]
  4291bb:	daa    
  4291bc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291be:	popa   
  4291bf:	inc    eax
  4291c0:	mov    BYTE PTR [esi],dh
  4291c2:	imul   ecx,DWORD PTR [edx+0xa96a345],0x2c1df334
  4291cc:	addr16 js 0x4291d2
  4291cf:	cmp    BYTE PTR [ebx+0x7c],dl
  4291d2:	xor    ebp,DWORD PTR [edi]
  4291d4:	call   0xfb8409c3
  4291d9:	js     0x429189
  4291db:	mov    DWORD PTR [ebp+0x63],eax
  4291de:	xchg   BYTE PTR [edx],dh
  4291e0:	das    
  4291e1:	repz sbb eax,0x6edff282
  4291e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291e8:	xchg   esi,esi
  4291ea:	sbb    eax,0x3efb67ff
  4291ef:	mov    edi,0x26a36fff
  4291f4:	cli    
  4291f5:	xor    al,0xf1
  4291f7:	es inc edx
  4291f9:	(bad)  
  4291fa:	stc    
  4291fb:	aas    
  4291fc:	push   eax
  4291fd:	js     0x429210
  4291ff:	mov    edx,es
  429201:	or     ebx,DWORD PTR [ebp-0x65]
  429204:	cli    
  429205:	adc    al,0xab
  429207:	ds je  0x42920a
  42920a:	add    BYTE PTR [eax],al
  42920c:	fld    TBYTE PTR [edx+0x105e889]
  429212:	inc    eax
  429213:	push   ecx
  429214:	cld    
  429215:	mov    dl,0x6
  429217:	mov    bh,0x5
  429219:	pop    ds
  42921a:	(bad)  
  42921b:	(bad)  
  42921c:	fstp   TBYTE PTR [esi-0x561b0565]
  429222:	ds je  0x429228
  429225:	pop    es
  429226:	loop   0x4291e1
  429228:	in     al,0xd7
  42922a:	ins    DWORD PTR es:[edi],dx
  42922b:	sar    eax,0xd8
  42922e:	rol    BYTE PTR [edi-0x7335d037],0x36
  429235:	xor    BYTE PTR [ebx],bl
  429237:	sub    al,0xf7
  429239:	stc    
  42923a:	mov    edx,0xb1c9753f
  42923f:	fisttp WORD PTR [edx-0x34]
  429242:	lahf   
  429243:	inc    edx
  429244:	out    dx,eax
  429245:	push   es
  429246:	cmp    al,0x8b
  429248:	xchg   DWORD PTR [ebp+0x2f8ee88d],eax
  42924e:	jmp    0x89bc0a28
  429253:	inc    ecx
  429254:	js     0x429285
  429256:	xchg   ecx,eax
  429257:	daa    
  429258:	std    
  429259:	das    
  42925a:	jp     0x4291ed
  42925c:	jbe    0x429288
  42925e:	je     0x42929f
  429260:	push   0x59a8fed6
  429265:	not    DWORD PTR [eax+0x1b]
  429268:	enter  0xe906,0x87
  42926c:	xor    ebp,DWORD PTR [ebp+0x43]
  42926f:	add    eax,0xf3000000
  429274:	push   es
  429275:	pop    esi
  429276:	inc    esi
  429277:	(bad)  
  429278:	sti    
  429279:	sub    al,BYTE PTR [ebx+esi*8]
  42927c:	(bad)  
  42927d:	scas   eax,DWORD PTR es:[edi]
  42927e:	mov    eax,0x2b28f42b
  429283:	scas   eax,DWORD PTR es:[edi]
  429284:	dec    eax
  429285:	jmp    0x9c00458d
  42928a:	cmp    al,0xb
  42928c:	cmp    eax,0x9c083d82
  429291:	cld    
  429292:	sub    eax,DWORD PTR [ebp-0x59]
  429295:	or     bh,BYTE PTR [edi]
  429297:	mov    ds:0xc03e8a9c,eax
  42929c:	push   ds
  42929d:	xchg   ecx,eax
  42929e:	lods   eax,DWORD PTR ds:[esi]
  42929f:	in     al,dx
  4292a0:	add    BYTE PTR cs:[ebp+0x2f],ch
  4292a4:	mov    bl,0xd6
  4292a6:	pop    esp
  4292a7:	stos   BYTE PTR es:[edi],al
  4292a8:	pop    edx
  4292a9:	push   eax
  4292aa:	shr    DWORD PTR [edi],1
  4292ac:	push   edx
  4292ad:	cli    
  4292ae:	ficom  WORD PTR [esi-0xf428353]
  4292b4:	mov    dl,0x10
  4292b6:	pop    esp
  4292b7:	stos   DWORD PTR es:[edi],eax
  4292b8:	pop    edx
  4292b9:	push   eax
  4292ba:	push   ebx
  4292bb:	mov    WORD PTR [ecx],?
  4292bd:	xor    edx,ecx
  4292bf:	xor    eax,0x6ce8ffa1
  4292c4:	inc    edi
  4292c5:	je     0x42933a
  4292c7:	and    BYTE PTR [eax],cl
  4292c9:	pop    edx
  4292ca:	mov    al,0x31
  4292cc:	aam    0x86
  4292ce:	lea    esi,[edi+0x1b]
  4292d1:	call   0x524983bf
  4292d6:	mov    es,WORD PTR [eax]
  4292d8:	add    BYTE PTR [eax],al
  4292da:	(bad)  
  4292dc:	push   cs
  4292dd:	sub    edi,ebp
  4292df:	test   eax,esi
  4292e1:	ins    BYTE PTR es:[edi],dx
  4292e2:	cmp    edi,DWORD PTR [edx]
  4292e4:	push   eax
  4292e5:	scas   al,BYTE PTR es:[edi]
  4292e6:	cmp    edi,DWORD PTR [edx]
  4292e8:	or     cl,ch
  4292ea:	lock push es
  4292ec:	sti    
  4292ed:	cld    
  4292ee:	in     al,dx
  4292ef:	adc    eax,DWORD PTR [eax-0x17]
  4292f2:	jnp    0x42933b
  4292f4:	je     0x4292e2
  4292f6:	jns    0x429341
  4292f8:	daa    
  4292f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292fa:	clc    
  4292fb:	jg     0x429342
  4292fd:	inc    ecx
  4292fe:	addr16 (bad) 
  429300:	in     al,0x6c
  429302:	cmp    edi,DWORD PTR [esi]
  429304:	push   eax
  429305:	das    
  429306:	cmp    ecx,DWORD PTR [esi+0x1]
  429309:	pusha  
  42930a:	pop    ebx
  42930b:	daa    
  42930c:	sti    
  42930d:	cld    
  42930e:	push   0x63e93ffd
  429313:	(bad)  
  429314:	iret   
  429315:	mov    ecx,0xf505ed8
  42931a:	mov    ebp,0xe300457f
  42931f:	xchg   esi,eax
  429320:	test   DWORD PTR [ebp*8-0x22af0915],ebx
  429327:	adc    eax,0x98a1290
  42932c:	add    DWORD PTR [ebp-0x91412],0x21
  429333:	ret    
  429334:	ret    
  429335:	mov    DWORD PTR [edi],edx
  429337:	fisub  WORD PTR [ecx+0x11]
  42933a:	pop    ds
  42933b:	inc    esi
  42933c:	fist   DWORD PTR [eax+0x0]
  42933f:	add    BYTE PTR [eax],al
  429341:	inc    ecx
  429342:	inc    esi
  429343:	add    ebp,DWORD PTR [edx+0x41]
  429346:	in     al,dx
  429347:	das    
  429348:	call   0x3df0a3
  42934d:	in     al,dx
  42934e:	sar    DWORD PTR [ecx-0x7dab75fc],0xec
  429355:	sbb    edi,esi
  429357:	xorps  xmm6,xmm0
  42935a:	sub    DWORD PTR [ebp+0x0],esp
  42935d:	(bad)  
  42935e:	jmp    0x429374
  429360:	xor    al,0x94
  429362:	dec    ecx
  429363:	sti    
  429364:	adc    BYTE PTR [esi+0x21d6216],0x65
  42936b:	mov    BYTE PTR [esi+0x4b],al
  42936e:	jl     0x4293b5
  429370:	lock call 0xd652:0xa200fdc3
  429378:	(bad)  
  429379:	popf   
  42937a:	add    BYTE PTR fs:[ebp-0x66],0x64
  42937f:	mov    BYTE PTR [esi+0x47],al
  429382:	arpl   WORD PTR [edx-0x779b17bb],ax
  429388:	inc    esi
  429389:	adc    eax,0x7afc457c
  42938e:	loope  0x429386
  429390:	loop   0x42935e
  429392:	jmp    0x42934a
  429394:	(bad)  
  429395:	in     eax,dx
  429396:	add    al,BYTE PTR [eax]
  429398:	test   ebx,esi
  42939a:	fbstp  TBYTE PTR [edi+0x3b8a680d]
  4293a0:	aaa    
  4293a1:	and    al,0x34
  4293a3:	(bad)  
  4293a4:	retf   0x0
  4293a7:	add    BYTE PTR [ebx-0x7c],al
  4293aa:	xchg   BYTE PTR [edx-0x6],cl
  4293ad:	add    eax,0x1ddd2f53
  4293b2:	mov    al,BYTE PTR [ebp-0x29]
  4293b5:	out    dx,al
  4293b6:	sub    esi,DWORD PTR [esi]
  4293b8:	ror    DWORD PTR [esp+edi*1-0x7b],1
  4293bc:	mov    bl,0xca
  4293be:	or     eax,0xf83a2e87
  4293c3:	retf   0xdce4
  4293c6:	dec    esp
  4293c7:	push   eax
  4293c8:	adc    eax,0x9b06ccb7
  4293cd:	lods   al,BYTE PTR ds:[esi]
  4293ce:	out    dx,eax
  4293cf:	stc    
  4293d0:	pushf  
  4293d1:	retf   
  4293d2:	sar    ebx,0x43
  4293d5:	xchg   esi,eax
  4293d6:	and    ecx,0xc0828d8d
  4293dc:	jmp    FWORD PTR [esi]
  4293de:	idiv   BYTE PTR [edi+edi*2-0x12]
  4293e2:	or     al,0x42
  4293e4:	test   BYTE PTR [ecx+0x1aed88a5],0x27
  4293eb:	cwde   
  4293ec:	and    BYTE PTR [ebx+edi*1-0x31664973],dh
  4293f3:	addr16 jnp 0x429414
  4293f6:	(bad)  
  4293f7:	call   FWORD PTR [ebx-0x3f]
  4293fa:	pop    edx
  4293fb:	cli    
  4293fc:	inc    esp
  4293fd:	jne    0x429381
  4293ff:	rol    bh,0x2e
  429402:	cmp    BYTE PTR [ebp+0x37],0x2e
  429406:	mov    cl,0x4
  429408:	xchg   ebp,eax
  429409:	mov    al,ds:0xfecc
  42940e:	add    bl,dh
  429410:	lea    esp,[edi]
  429412:	je     0x4293f4
  429414:	fstp   TBYTE PTR [ebx]
  429416:	leave  
  429417:	xor    BYTE PTR [edi],al
  429419:	mov    esp,0xd861f88
  42941e:	fild   DWORD PTR [esi]
  429420:	sub    al,0xe9
  429422:	shl    BYTE PTR [edx-0xdf8b22d],1
  429428:	push   es
  429429:	jmp    0x4dc413fe
  42942e:	ds call 0xdcec2d5f
  429434:	sub    al,0xd4
  429436:	inc    ebx
  429437:	in     eax,0xc6
  429439:	call   0xf335a2cc
  42943e:	ret    
  42943f:	les    edi,FWORD PTR [esi+0x2c]
  429442:	cmp    al,0x76
  429444:	inc    esi
  429445:	push   ebp
  429446:	pop    ss
  429447:	data16 jns 0x4293df
  42944a:	cmp    DWORD PTR [eax+0x1e89182b],ebp
  429450:	push   ebx
  429451:	rcr    esp,0x24
  429454:	sub    eax,0xb1b380aa
  429459:	rep lods eax,DWORD PTR ds:[esi]
  42945b:	clc    
  42945c:	jns    0x429482
  42945e:	push   eax
  42945f:	or     eax,0xa03b3907
  429464:	xchg   DWORD PTR [ebp-0x76ee87f8],esp
  42946a:	push   ss
  42946b:	mov    bl,0x6
  42946d:	outs   dx,BYTE PTR ds:[esi]
  42946e:	xor    al,0xc1
  429470:	sub    ebx,esp
  429472:	add    DWORD PTR [eax],0x0
  429475:	add    ch,ch
  429477:	(bad)  
  429478:	call   0xe948e8f9
  42947d:	add    eax,DWORD PTR [esi+eax*2]
  429480:	mov    bl,0x88
  429482:	mov    esi,0x33c8e21a
  429487:	push   ds
  429488:	add    al,0xbc
  42948a:	cmp    ch,BYTE PTR [ebx]
  42948c:	ins    DWORD PTR es:[edi],dx
  42948d:	inc    esp
  42948e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42948f:	cli    
  429490:	into   
  429491:	pop    es
  429492:	ins    BYTE PTR es:[edi],dx
  429493:	inc    esp
  429494:	add    bl,al
  429496:	lock (bad) 
  429498:	cli    
  429499:	push   ss
  42949a:	ins    BYTE PTR es:[edi],dx
  42949b:	inc    edx
  42949c:	or     al,0x74
  42949e:	xor    dh,BYTE PTR [ebx]
  4294a0:	push   eax
  4294a1:	ins    BYTE PTR es:[edi],dx
  4294a2:	jb     0x4294fe
  4294a4:	std    
  4294a5:	push   ss
  4294a6:	mov    eax,0x67eb65d6
  4294ab:	leave  
  4294ac:	test   DWORD PTR [esi],0xa90f7302
  4294b2:	lock add al,0x7d
  4294b6:	add    bh,BYTE PTR [ebp+eax*4+0x3d]
  4294ba:	sbb    ch,BYTE PTR [esi]
  4294bc:	sti    
  4294bd:	cmp    DWORD PTR [esp+eax*8-0x9],edi
  4294c1:	ins    BYTE PTR es:[edi],dx
  4294c2:	or     DWORD PTR [edx-0x18],0xffffffc0
  4294c6:	xor    DWORD PTR [eax],0xb43065fb
  4294cc:	or     al,0x53
  4294ce:	sti    
  4294cf:	jnp    0x429516
  4294d1:	leave  
  4294d2:	push   esi
  4294d3:	sub    cl,BYTE PTR [ebx-0x4a]
  4294d6:	inc    ecx
  4294d7:	stos   BYTE PTR es:[edi],al
  4294d8:	ret    
  4294d9:	fld    QWORD PTR [eax]
  4294db:	add    BYTE PTR [eax],al
  4294dd:	imul   eax,esp,0xffffffcb
  4294e0:	cmp    DWORD PTR [edx-0x3c],edi
  4294e3:	ret    
  4294e4:	cmp    DWORD PTR [edx-0x3c],edi
  4294e7:	mov    ebx,0xb3c46a39
  4294ec:	cmp    DWORD PTR [ebp+0x2d],eax
  4294ef:	sti    
  4294f0:	(bad)  
  4294f2:	pop    ss
  4294f3:	inc    eax
  4294f4:	jmp    0xedb7dc6c
  4294f9:	gs cmp bh,ah
  4294fc:	enter  0xc465,0xb3
  429500:	jb     0x42953d
  429502:	jb     0x42956a
  429504:	jmp    0x28c29bfc
  429509:	dec    esi
  42950a:	mov    ds:0x758777f,al
  42950f:	add    DWORD PTR [eax],0x6249230b
  429515:	in     al,0x52
  429517:	dec    ebx
  429518:	call   0x427983
  42951d:	xchg   ecx,eax
  42951e:	cmc    
  42951f:	or     BYTE PTR [ebp-0x1e],0x0
  429523:	dec    ebp
  429524:	hlt    
  429525:	add    DWORD PTR [esi-0x29],0xa03468d
  42952c:	mov    DWORD PTR [edi-0x12],eax
  42952f:	test   bl,bl
  429531:	outs   dx,DWORD PTR ds:[esi]
  429532:	add    eax,0x8503ff2b
  429537:	add    BYTE PTR [eax],al
  429539:	retf   0xbb78
  42953c:	call   0x3bc8e6
  429541:	add    BYTE PTR [eax],al
  429543:	add    BYTE PTR [ecx-0x15],al
  429546:	test   bh,bh
  429548:	push   ds
  429549:	imul   eax,ecx,0x93a4cb07
  42954f:	mov    al,0x9
  429551:	add    ecx,DWORD PTR [ecx-0x705a64b9]
  429557:	mov    al,0xd9
  429559:	add    cl,BYTE PTR [ebp+0x3f7db85f]
  42955f:	add    eax,0x11b7f945
  429564:	fiadd  DWORD PTR [edx]
  429566:	pop    esi
  429567:	mov    ebp,ecx
  429569:	add    al,0x89
  42956b:	ja     0x4294ff
  42956d:	add    BYTE PTR [di+0x46],0x7b
  429572:	xor    eax,0xfb454c30
  429577:	gs jecxz 0x4295c1
  42957a:	pop    es
  42957b:	shr    WORD PTR [ecx-0x11],1
  42957f:	rol    WORD PTR [edi+0x9],cl
  429583:	shr    WORD PTR [ecx-0x1d],0x66
  429588:	ret    
  429589:	inc    edi
  42958a:	or     ecx,DWORD PTR [edi]
  42958c:	repz mov cl,al
  42958f:	or     esp,DWORD PTR [ebx-0x3f2c5548]
  429595:	ror    BYTE PTR [ebp+0xb],0x5c
  429599:	pusha  
  42959a:	add    edi,edi
  42959c:	inc    esp
  42959d:	and    BYTE PTR [eax+0x43],dh
  4295a0:	in     eax,0x9c
  4295a2:	aas    
  4295a3:	or     al,0xa3
  4295a5:	loopne 0x429551
  4295a7:	jmp    0x4295a9
  4295a9:	add    BYTE PTR [eax],al
  4295ab:	mov    al,ds:0x440b4e08
  4295b0:	pop    eax
  4295b1:	movq   QWORD PTR [edi],mm5
  4295b4:	dec    ebx
  4295b5:	iret   
  4295b6:	or     ah,BYTE PTR [ecx+ebx*2-0x1a104f7]
  4295bd:	add    al,0xbf
  4295bf:	inc    ebx
  4295c0:	xor    DWORD PTR [ecx-0x79],edx
  4295c3:	ss ss test ah,al
  4295c7:	push   DWORD PTR [edx+0x6bdbd3a9]
  4295cd:	mov    cl,0xf9
  4295cf:	mov    esp,0xcbeba9a3
  4295d4:	jae    0x429587
  4295d6:	stc    
  4295d7:	lods   al,BYTE PTR ds:[esi]
  4295d8:	mov    bl,0xa9
  4295da:	fistp  WORD PTR [ebx-0x63064ea5]
  4295e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295e1:	mov    ecx,0x8c566a07
  4295e6:	ret    
  4295e7:	sub    al,0xc0
  4295e9:	fmul   st(0),st
  4295eb:	mov    cl,0x22
  4295ed:	dec    DWORD PTR [esi+0x26]
  4295f0:	jmp    0x86349832
  4295f5:	and    eax,DWORD PTR [esi]
  4295f7:	repz sbb eax,0x4c572d8c
  4295fd:	mov    edi,0x879521ff
  429602:	inc    edx
  429603:	repnz fcom DWORD PTR [esi-0x3b]
  429607:	mov    al,0x6
  429609:	jmp    0x24817e09
  42960e:	les    eax,FWORD PTR [eax]
  429610:	add    BYTE PTR [eax],al
  429612:	cmp    al,0xb3
  429614:	add    cl,dl
  429616:	cmp    DWORD PTR [edx+0x11],edx
  429619:	pop    ss
  42961a:	cmp    eax,DWORD PTR [edx-0x5a]
  42961d:	add    ebx,DWORD PTR [esi-0x1429aef0]
  429623:	push   es
  429624:	jmp    0xdbf5c9a8
  429629:	mov    ch,dh
  42962b:	cmp    ch,BYTE PTR [esp+eax*8]
  42962e:	add    al,0x42
  429630:	in     al,0x4b
  429632:	ss (bad) 
  429634:	call   0xf46a363b
  429639:	xor    edi,ebp
  42963b:	(bad)  
  42963c:	call   0x253729e2
  429641:	(bad)  
  429642:	fsub   QWORD PTR [ecx+0x1fd6c15f]
  429648:	or     BYTE PTR ds:0xbe7106f3,cl
  42964e:	lock out dx,al
  429650:	sti    
  429651:	dec    ebx
  429652:	mov    dh,0xc3
  429654:	call   0xca12a309
  429659:	push   ecx
  42965a:	jmp    0x429665
  42965c:	mov    cl,0x41
  42965e:	in     al,0x6
  429660:	xor    al,0xe
  429662:	mov    ecx,DWORD PTR [ebx]
  429664:	loopne 0x429669
  429666:	repz sub BYTE PTR [ecx+0x47dffb0],0x48
  42966e:	scas   al,BYTE PTR es:[edi]
  42966f:	ret    
  429670:	call   0xac818cb2
  429675:	ret    
  429676:	add    BYTE PTR [eax],al
  429678:	add    BYTE PTR [esi+eax*1+0x32],dh
  42967c:	aaa    
  42967d:	push   es
  42967e:	aaa    
  42967f:	xlat   BYTE PTR ds:[ebx]
  429680:	ret    
  429681:	mov    eax,fs:0xc330ee47
  429687:	(bad)  
  429688:	call   0xe4851503
  42968d:	sbb    BYTE PTR [eax+0x6],cl
  429690:	jmp    0xe6851485
  429695:	add    eax,0x30f8a412
  42969a:	daa    
  42969b:	pop    edx
  42969c:	lods   al,BYTE PTR ds:[esi]
  42969d:	mov    ?,WORD PTR [esi+0x42]
  4296a0:	repnz dec ecx
  4296a2:	push   0xa7cb7255
  4296a7:	jecxz  0x4296da
  4296a9:	outs   dx,BYTE PTR ds:[esi]
  4296aa:	sbb    dl,BYTE PTR [ebx+ebp*8-0x40b0f910]
  4296b1:	xor    eax,0xe651152c
  4296b6:	(bad)  
  4296b7:	(bad)  
  4296b8:	fstp   DWORD PTR [ecx-0x233abb83]
  4296be:	fnstsw WORD PTR [esi-0x400a1a84]
  4296c4:	adc    al,bl
  4296c6:	and    al,0xfb
  4296c8:	jmp    0xe943d355
  4296cd:	lock lods al,BYTE PTR ds:[esi]
  4296cf:	pop    es
  4296d0:	out    0xc3,al
  4296d2:	inc    esi
  4296d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296d4:	sub    dh,bh
  4296d6:	dec    ecx
  4296d7:	inc    esp
  4296d8:	or     eax,0xe9fb24cf
  4296dd:	add    BYTE PTR [eax],al
  4296df:	add    al,dh
  4296e1:	and    DWORD PTR ds:0xffc701ed,edx
  4296e7:	jno    0x4296c1
  4296e9:	(bad)  
  4296eb:	cmp    eax,0x5849437
  4296f0:	addr16 pop es
  4296f2:	add    cl,ch
  4296f4:	mov    al,ds:0x93114ed5
  4296f9:	(bad)  
  4296fa:	(bad)  
  4296fb:	call   0xe845dfa1
  429700:	jg     0x4296c5
  429702:	and    eax,DWORD PTR [eax]
  429704:	fst    QWORD PTR ds:[eax+edx*2]
  429708:	cmp    DWORD PTR [edx-0x5],ecx
  42970b:	test   BYTE PTR [edx-0x2972f2a9],cl
  429711:	inc    ebp
  429712:	mov    eax,DWORD PTR [eax]
  429714:	pop    edx
  429715:	or     dl,BYTE PTR [eax-0x1]
  429718:	inc    edi
  429719:	mov    cl,BYTE PTR [ebx]
  42971b:	inc    eax
  42971c:	dec    edx
  42971d:	xchg   ebx,eax
  42971e:	inc    esp
  42971f:	and    al,0x22
  429721:	jb     0x429706
  429723:	mov    ebx,DWORD PTR [edx+0xa]
  429726:	lea    eax,[esi+esi*8+0x28]
  42972a:	dec    ebx
  42972b:	push   DWORD PTR [edi]
  42972d:	adc    dl,BYTE PTR [ecx]
  42972f:	inc    eax
  429730:	sbb    cl,BYTE PTR [edi-0x5dbddb8c]
  429736:	pushf  
  429737:	add    BYTE PTR [edx],cl
  429739:	or     ch,al
  42973b:	mov    eax,ds:0x8bf6dc85
  429740:	adc    al,0xe4
  429742:	inc    ebx
  429743:	and    al,0x0
  429745:	add    BYTE PTR [eax],al
  429747:	mov    dh,0xa
  429749:	mov    edi,0x1a31b644
  42974e:	add    dl,cl
  429750:	or     DWORD PTR [ecx-0x77d249bc],ecx
  429756:	pop    esp
  429757:	neg    BYTE PTR [edx]
  429759:	sbb    DWORD PTR [esi+esi*8+0xb],0xffffff89
  42975e:	pop    esp
  42975f:	out    0xfa,al
  429761:	or     BYTE PTR [esi+esi*8-0x6],0x2a
  429766:	rcr    dl,0xb7
  429769:	fild   WORD PTR [ebp+0xf2f26d6]
  42976f:	push   es
  429770:	jb     0x429772
  429772:	add    BYTE PTR [edx-0x79dbbb72],bl
  429778:	fstp   TBYTE PTR [esi]
  42977a:	add    DWORD PTR [ecx],ecx
  42977c:	inc    edi
  42977d:	pop    ds
  42977e:	adc    al,0xf3
  429780:	and    DWORD PTR [edx-0x40560bcc],eax
  429786:	and    esi,esp
  429788:	xchg   edi,eax
  429789:	stc    
  42978a:	or     ah,BYTE PTR [ebp+0x337e9a6f]
  429790:	out    dx,al
  429791:	cdq    
  429792:	mov    BYTE PTR [edi-0x5072ecb5],dh
  429798:	adc    ebx,DWORD PTR [eax]
  42979a:	push   eax
  42979b:	xor    eax,0xf310db6b
  4297a0:	mov    esp,0x7002a00a
  4297a5:	inc    DWORD PTR [edi-0x45]
  4297a8:	sbb    al,0x7b
  4297aa:	mov    esi,0xf3000000
  4297af:	das    
  4297b0:	inc    DWORD PTR [edi-0x1c]
  4297b3:	mov    bl,0x6e
  4297b5:	add    bl,dh
  4297b7:	das    
  4297b8:	(bad)  
  4297b9:	or     ch,BYTE PTR [edi-0x30]
  4297bc:	add    eax,DWORD PTR [eax]
  4297be:	repz push edi
  4297c0:	add    al,0x84
  4297c2:	pop    esi
  4297c3:	das    
  4297c4:	(bad)  
  4297c5:	(bad)  
  4297c6:	cmp    eax,DWORD PTR [ebp+0x7a]
  4297c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297ca:	repz sub eax,0x4a37c1ff
  4297d0:	add    al,BYTE PTR ds:0x443d2fa3
  4297d6:	pop    ss
  4297d7:	inc    esp
  4297d8:	inc    DWORD PTR [ebx-0x1d84e24d]
  4297de:	repz sub eax,0x2eee67ff
  4297e4:	(bad)  
  4297e5:	(bad)  
  4297e6:	jle    0x429792
  4297e8:	ficom  DWORD PTR [ebx+0x4fff2df3]
  4297ee:	inc    eax
  4297ef:	add    ecx,edx
  4297f1:	dec    esi
  4297f2:	inc    eax
  4297f3:	stos   DWORD PTR es:[edi],eax
  4297f4:	mov    edx,0x34fdcb23
  4297f9:	adc    eax,0xc3f807b3
  4297fe:	jl     0x42978b
  429800:	test   eax,0xe9906f04
  429805:	add    esi,ebx
  429807:	xlat   BYTE PTR ds:[ebx]
  429808:	test   al,0x9d
  42980a:	jnp    0x429797
  42980c:	int    0x9b
  42980e:	pop    ebp
  42980f:	and    al,0xe9
  429811:	xchg   BYTE PTR [eax],al
  429813:	add    BYTE PTR [eax],al
  429815:	outs   dx,DWORD PTR ds:[esi]
  429816:	jmp    0x429870
  429818:	add    esi,ebx
  42981a:	push   es
  42981b:	sbb    DWORD PTR ds:0xc3fd8ede,esi
  429821:	cmp    al,0x8f
  429823:	mov    ebp,0x2dd904df
  429828:	xchg   BYTE PTR [edi+0x92c04ea],dh
  42982e:	or     al,0xe9
  429830:	add    esi,DWORD PTR [esi+0x47]
  429833:	mov    ch,0xd5
  429835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429836:	xchg   ecx,eax
  429837:	ins    DWORD PTR es:[edi],dx
  429838:	fbld   TBYTE PTR [eax+0x7]
  42983b:	jmp    0xfc663b43
  429840:	jae    0x429824
  429842:	(bad)  
  429843:	call   0xa9dccbc6
  429848:	jg     0x42980e
  42984a:	call   0xf17d:0x5dc83ca
  429851:	outs   dx,DWORD PTR ds:[esi]
  429852:	(bad)  
  429853:	cli    
  429854:	not    ch
  429856:	pushf  
  429857:	mov    ecx,0xdaeb373d
  42985c:	adc    ecx,esp
  42985e:	(bad)  
  42985f:	stos   BYTE PTR es:[edi],al
  429860:	enter  0x1210,0xe5
  429864:	push   ds
  429865:	loope  0x4298b3
  429867:	sub    eax,0xbe07ffe8
  42986c:	add    esi,DWORD PTR [ecx-0x62fef336]
  429872:	sbb    dh,BYTE PTR cs:[ebx]
  429875:	cwde   
  429876:	and    eax,DWORD PTR [eax]
  429878:	scas   eax,DWORD PTR es:[edi]
  429879:	add    BYTE PTR [eax],al
  42987b:	add    BYTE PTR [ebx+0x7ee80ce7],bh
  429881:	arpl   cx,bp
  429883:	cmp    al,0xc0
  429885:	pop    ds
  429886:	sti    
  429887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429888:	stos   DWORD PTR es:[edi],eax
  429889:	out    0x9,eax
  42988b:	(bad)  ds:0x5b25c20a
  429891:	or     eax,0x2bb48720
  429896:	xchg   ebp,eax
  429897:	mov    edx,0xcd4491a5
  42989c:	xor    bl,dl
  42989e:	mov    WORD PTR ds:0xba4fdf5b,fs
  4298a4:	jae    0x429870
  4298a6:	and    edx,DWORD PTR [ecx]
  4298a8:	pop    ds
  4298a9:	and    BYTE PTR ds:0xffc70695,dl
  4298af:	arpl   WORD PTR [edi+0x2b721b9a],bp
  4298b5:	out    0x37,eax
  4298b7:	jo     0x4298e2
  4298b9:	and    DWORD PTR [esi-0x7720eb53],eax
  4298bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298c0:	cli    
  4298c1:	mov    eax,DWORD PTR [ebp+ecx*8+0x30]
  4298c5:	mov    es,WORD PTR [edx-0xd]
  4298c8:	jne    0x429894
  4298ca:	and    ebp,DWORD PTR [ebp+0x6309c56f]
  4298d0:	mov    ebx,0xb4f309e6
  4298d5:	out    0xc,al
  4298d7:	jb     0x42988c
  4298d9:	out    0xf,al
  4298db:	popa   
  4298dc:	mov    ecx,0x9d3907
  4298e1:	add    BYTE PTR [eax],al
  4298e3:	int3   
  4298e4:	cli    
  4298e5:	je     0x4298d3
  4298e7:	mov    esp,0xee2787a2
  4298ec:	sbb    al,0x44
  4298ee:	or     eax,0x5441df0
  4298f3:	inc    DWORD PTR [esi+0x5ee007c]
  4298f9:	adc    cl,BYTE PTR [edi]
  4298fb:	or     BYTE PTR [ebx-0x7],bl
  4298fe:	inc    DWORD PTR [ebp-0x7a]
  429901:	jl     0x429927
  429903:	out    dx,al
  429904:	or     al,BYTE PTR [ebx+0x4ba18245]
  42990a:	and    al,0x7e
  42990c:	mov    ds:0xd5537507,eax
  429911:	jae    0x429937
  429913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429914:	(bad)  
  429915:	lahf   
  429916:	cs je  0x4298ee
  429919:	add    bh,0xf5
  42991c:	xor    al,0x52
  42991e:	mov    edi,DWORD PTR [edi+0x37]
  429921:	mov    ebp,0x823f5a04
  429926:	in     al,dx
  429927:	leave  
  429928:	jmp    0x31e91d24
  42992d:	dec    edx
  42992e:	push   esi
  42992f:	ins    DWORD PTR es:[edi],dx
  429930:	test   BYTE PTR [ebx],al
  429932:	xor    esp,ecx
  429934:	aaa    
  429935:	adc    dh,0xa7
  429938:	dec    ecx
  429939:	pop    ds
  42993a:	sbb    al,0xa3
  42993c:	push   ecx
  42993d:	pop    ds
  42993e:	sbb    al,0x93
  429940:	push   ecx
  429941:	pop    ds
  429942:	and    BYTE PTR [ebx+0x241f51],dl
  429948:	add    BYTE PTR [eax],al
  42994a:	int    0x49
  42994c:	pop    ds
  42994d:	sub    BYTE PTR [edx+0x6],cl
  429950:	add    BYTE PTR [eax],al
  429952:	repnz cwde 
  429954:	sub    edi,edi
  429956:	cmc    
  429957:	mov    al,ds:0x89d6244b
  42995c:	shl    BYTE PTR [esp+eax*8-0x60],0x43
  429961:	and    al,0xba
  429963:	or     cl,al
  429965:	mov    DWORD PTR [esi],edi
  429967:	sub    bl,BYTE PTR [ebx]
  429969:	cmp    ecx,DWORD PTR [ecx-0x5daef3a7]
  42996f:	pop    ebp
  429970:	sub    esi,edi
  429972:	repz cmp ch,dh
  429975:	mov    edi,0x51a9a
  42997a:	repz sbb al,0x3f
  42997d:	lea    edx,[edi]
  42997f:	or     al,0x13
  429981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429982:	adc    eax,0x2fc25a85
  429987:	or     al,0x18
  429989:	add    DWORD PTR [ebx+0x74fa401f],ecx
  42998f:	xchg   esp,eax
  429990:	xor    ecx,DWORD PTR [ecx+0x370f53e7]
  429996:	pusha  
  429997:	inc    eax
  429998:	sbb    DWORD PTR [ebx],0xfffffff2
  42999b:	das    
  42999c:	inc    DWORD PTR [esi+0x40195ff6]
  4299a2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299a4:	lds    edi,FWORD PTR [edi]
  4299a6:	jo     0x42993f
  4299a8:	or     ecx,DWORD PTR [ebx]
  4299aa:	ja     0x42996c
  4299ac:	add    eax,DWORD PTR [eax]
  4299ae:	add    BYTE PTR [eax],al
  4299b0:	add    bl,dh
  4299b2:	add    al,BYTE PTR [ebp+0x2ff300]
  4299b8:	test   BYTE PTR [edi],dl
  4299ba:	das    
  4299bb:	(bad)  
  4299bc:	push   DWORD PTR [eax+0x49]
  4299bf:	ret    
  4299c0:	add    ah,ah
  4299c2:	stos   BYTE PTR es:[edi],al
  4299c3:	and    DWORD PTR [eax],eax
  4299c5:	repz das 
  4299c7:	pop    ss
  4299c8:	cmp    ebp,esp
  4299ca:	das    
  4299cb:	(bad)  
  4299cc:	cmp    esi,edi
  4299ce:	jge    0x4299c6
  4299d0:	repnz lods eax,DWORD PTR ds:[esi]
  4299d2:	daa    
  4299d3:	jg     0x4299d6
  4299d5:	repz sub eax,0x9070061c
  4299db:	add    eax,DWORD PTR [eax]
  4299dd:	data16 adc al,0x84
  4299e0:	jp     0x429a0d
  4299e2:	add    BYTE PTR cs:[ebx+esi*4+0xffff2e],al
  4299ea:	out    dx,al
  4299eb:	cdq    
  4299ec:	add    DWORD PTR [ebp+0x7],edx
  4299ef:	jo     0x4299b8
  4299f1:	adc    bh,dl
  4299f3:	aas    
  4299f4:	jg     0x429a25
  4299f6:	jmp    0x4299fa
  4299f8:	xor    eax,0xb15e6d4c
  4299fd:	in     al,dx
  4299fe:	sub    ebx,DWORD PTR [edx]
  429a00:	jge    0x429a32
  429a02:	adc    esp,DWORD PTR [ebx+eax*2+0x7]
  429a06:	rcr    BYTE PTR [ebp-0x40],cl
  429a09:	hlt    
  429a0a:	xor    DWORD PTR [eax+0xb010613],0xffffff85
  429a11:	mov    ebx,0xc1404
  429a16:	add    BYTE PTR [eax],al
  429a18:	jne    0x4299ed
  429a1a:	int3   
  429a1b:	repnz push 0xffffffcb
  429a1e:	(bad)  
  429a1f:	bnd jo 0x429a70
  429a22:	cld    
  429a23:	hlt    
  429a24:	aad    0x46
  429a26:	in     eax,0x9d
  429a28:	lock mov dh,0x63
  429a2b:	(bad)  
  429a2c:	adc    ah,bl
  429a2e:	jge    0x429a12
  429a30:	mov    ebp,0xd6b7051d
  429a35:	test   al,0x65
  429a37:	jmp    0x429a3a
  429a39:	call   0x3216:0xeab77df4
  429a40:	mov    bh,0xea
  429a42:	test   BYTE PTR [edi-0x7b2765d6],0x33
  429a49:	movsx  edx,WORD PTR [ebx]
  429a4c:	mov    ds:0xb9e7a591,eax
  429a51:	mov    dh,0x21
  429a53:	push   esp
  429a54:	je     0x429aa0
  429a56:	in     eax,dx
  429a57:	jl     0x429ac1
  429a59:	(bad)  
  429a5b:	xor    BYTE PTR [esi+0x6a],bl
  429a5e:	cmp    DWORD PTR [ecx+esi*1-0x21],0xffffff8a
  429a63:	jp     0x429a94
  429a65:	jmp    0x429a33
  429a67:	jl     0x429a9a
  429a69:	(bad)  
  429a6a:	jmp    FWORD PTR [edi]
  429a6c:	add    eax,DWORD PTR [edi]
  429a6e:	add    cl,ch
  429a70:	iret   
  429a71:	inc    edi
  429a72:	push   ss
  429a73:	mov    al,0xfd
  429a75:	xor    eax,0xc528b11e
  429a7a:	cmp    esp,DWORD PTR [ecx+0x0]
  429a7d:	add    BYTE PTR [eax],al
  429a7f:	mov    bl,0xe3
  429a81:	sub    DWORD PTR [eax-0x16ffe434],edx
  429a87:	dec    esi
  429a88:	mov    cs,WORD PTR [ebp+eax*1-0x54]
  429a8c:	fadd   st,st(0)
  429a8e:	ds cli 
  429a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a91:	mov    BYTE PTR ds:0x265ec8b,ah
  429a97:	jb     0x429a63
  429a99:	and    ebx,ecx
  429a9b:	inc    eax
  429a9c:	sbb    al,0x74
  429a9e:	int    0x48
  429aa0:	xchg   edx,eax
  429aa1:	jl     0x429a68
  429aa3:	cmp    BYTE PTR [edi],ah
  429aa5:	sub    al,0xd2
  429aa7:	add    eax,0x8ba9851c
  429aac:	add    edi,edx
  429aae:	sub    eax,0xf786fe5b
  429ab3:	cmp    BYTE PTR [edx+0x306bf6f2],cl
  429ab9:	cli    
  429aba:	pop    esi
  429abb:	fcomp  QWORD PTR [ebx]
  429abd:	je     0x429acc
  429abf:	jmp    FWORD PTR [esi]
  429ac1:	(bad)  
  429ac2:	sti    
  429ac3:	into   
  429ac4:	sbb    ebp,DWORD PTR [edi]
  429ac6:	and    bh,BYTE PTR [ecx+0x6]
  429ac9:	call   0xfb5f4e0e
  429ace:	bound  edi,QWORD PTR [edi+0x3fb5eed7]
  429ad4:	mov    ds,WORD PTR [ebp+ecx*8-0x20]
  429ad8:	fstp   QWORD PTR [ecx]
  429ada:	lahf   
  429adb:	(bad)  [ebx-0x698e12a6]
  429ae1:	add    edi,ecx
  429ae3:	add    BYTE PTR [eax],al
  429ae5:	add    BYTE PTR [ebx-0x36ff7919],bl
  429aeb:	pop    eax
  429aed:	je     0x429ac0
  429aef:	cmp    bh,0x82
  429af2:	sbb    cl,BYTE PTR [edi]
  429af4:	push   eax
  429af5:	inc    DWORD PTR [esi+0x26]
  429af8:	and    ecx,DWORD PTR [ebp-0x17dcd0b2]
  429afe:	gs inc eax
  429b00:	idiv   bh
  429b02:	pop    ss
  429b03:	retf   0x473
  429b06:	lods   al,BYTE PTR ds:[esi]
  429b07:	inc    esi
  429b08:	pop    ds
  429b09:	sbb    ch,BYTE PTR [ebp+0x1101f46]
  429b0f:	inc    esi
  429b10:	pop    ds
  429b11:	adc    BYTE PTR [ecx],bl
  429b13:	leave  
  429b14:	pop    es
  429b15:	cmp    edx,DWORD PTR [esi+ebp*2+0x34b133c5]
  429b1c:	jecxz  0x429ac9
  429b1e:	ds in  al,dx
  429b20:	imul   BYTE PTR [edx+0x58]
  429b23:	add    bl,BYTE PTR [ebx-0x7d129334]
  429b29:	lock xor ecx,ebx
  429b2c:	jae    0x429b77
  429b2e:	ret    
  429b2f:	dec    ebp
  429b30:	pop    ds
  429b31:	adc    BYTE PTR [ebx-0x60c489f4],al
  429b37:	dec    ebx
  429b38:	inc    DWORD PTR [edx+0x751c0651]
  429b3e:	sti    
  429b3f:	mov    eax,ds:0x55da84fa
  429b44:	adc    ch,BYTE PTR [edx+0x1a]
  429b47:	mov    eax,eax
  429b49:	or     BYTE PTR [eax],al
  429b4b:	add    BYTE PTR [eax],al
  429b4d:	jp     0x429b3c
  429b4f:	jae    0x429b75
  429b51:	loop   0x429ada
  429b53:	jl     0x429b79
  429b55:	repnz cli 
  429b57:	sub    BYTE PTR [edx],0xcd
  429b5a:	in     al,dx
  429b5b:	test   al,al
  429b5d:	push   esi
  429b5e:	push   es
  429b5f:	test   BYTE PTR [esi+esi*4+0x10],0xf7
  429b64:	inc    esp
  429b65:	repz dec ebx
  429b67:	ja     0x7f51dfa4
  429b6d:	mov    al,0x17
  429b6f:	out    0x1,al
  429b71:	dec    edi
  429b72:	(bad)  
  429b74:	(bad)  
  429b75:	sbb    eax,0xbd2bd808
  429b7a:	sub    al,0x98
  429b7c:	pop    es
  429b7d:	data16 jmp 0x429b67
  429b80:	pop    ss
  429b81:	inc    ebx
  429b82:	loope  0x429bfe
  429b84:	jl     0x429b55
  429b86:	pop    es
  429b87:	ja     0x429be5
  429b89:	xlat   BYTE PTR ds:[ebx]
  429b8a:	push   cs
  429b8b:	sbb    al,0x4d
  429b8d:	leave  
  429b8e:	inc    esp
  429b8f:	sub    eax,0xe4043787
  429b94:	xchg   BYTE PTR [esi],dh
  429b96:	sub    al,dl
  429b98:	mov    dl,dh
  429b9a:	inc    edi
  429b9b:	out    dx,eax
  429b9c:	sub    esi,DWORD PTR [ebp+0x64]
  429b9f:	jns    0x429be5
  429ba1:	pop    ss
  429ba2:	sbb    al,0xcc
  429ba4:	pop    ecx
  429ba5:	enter  0x22a8,0x5d
  429ba9:	xor    DWORD PTR [ebx],esp
  429bab:	call   DWORD PTR [eax+ebp*2+0x73]
  429baf:	sub    esp,0xc3000000
  429bb5:	add    dl,dl
  429bb7:	gs jecxz 0x429bc3
  429bba:	add    al,0x53
  429bbc:	cmp    al,0x32
  429bbe:	repz adc DWORD PTR [ebx-0x3b7fd1],esi
  429bc5:	stos   BYTE PTR es:[edi],al
  429bc6:	ret    0xc3a7
  429bc9:	in     eax,dx
  429bca:	add    al,0x1
  429bcc:	xor    al,0x62
  429bce:	push   edi
  429bcf:	inc    eax
  429bd0:	repz das 
  429bd2:	(bad)  
  429bd3:	cli    
  429bd4:	out    0x93,al
  429bd6:	push   cs
  429bd7:	inc    eax
  429bd8:	rep stos BYTE PTR es:[edi],al
  429bda:	inc    ebx
  429bdb:	je     0x429bad
  429bdd:	test   al,0xc2
  429bdf:	mov    bl,0x68
  429be1:	push   es
  429be2:	mov    ah,0x73
  429be4:	clc    
  429be5:	push   0x28
  429be7:	sbb    BYTE PTR [edx-0x4c7902d1],dh
  429bed:	xchg   edx,eax
  429bee:	jecxz  0x429b70
  429bf0:	ficomp DWORD PTR [ebx+edi*2]
  429bf3:	add    al,0x1c
  429bf5:	dec    esi
  429bf6:	enter  0xc0be,0x30
  429bfa:	out    0x7a,al
  429bfc:	adc    esp,DWORD PTR ss:[eax-0x43]
  429c00:	xrelease mov DWORD PTR [esp+edi*1],ebp
  429c04:	inc    ebx
  429c05:	sbb    al,0xf4
  429c07:	pop    DWORD PTR [edx]
  429c09:	(bad)  
  429c0a:	call   0xe95f347a
  429c0f:	add    ebx,esp
  429c11:	shl    DWORD PTR [esi+edi*2+0x43de7706],0x0
  429c19:	add    BYTE PTR [eax],al
  429c1b:	xor    BYTE PTR [edi],0x6
  429c1e:	(bad)  
  429c1f:	cwde   
  429c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c21:	pop    edi
  429c22:	(bad)  
  429c23:	out    dx,eax
  429c24:	pop    esi
  429c25:	add    DWORD PTR [ebx],0xfffffff3
  429c28:	push   es
  429c29:	xchg   ecx,eax
  429c2a:	and    ch,ah
  429c2c:	sbb    edx,DWORD PTR [edx+0x5116e67e]
  429c32:	mov    ebx,?
  429c34:	push   es
  429c35:	jmp    0x7acbbd55
  429c3a:	sub    al,0x6c
  429c3c:	inc    ebp
  429c3d:	sbb    DWORD PTR [edi-0x4a],edi
  429c40:	jbe    0x429c5b
  429c42:	ins    BYTE PTR es:[edi],dx
  429c43:	xor    eax,0x1b83e91c
  429c48:	push   ecx
  429c49:	cmc    
  429c4a:	add    esi,ebx
  429c4c:	(bad)  
  429c4d:	sbb    al,0x98
  429c4f:	pop    es
  429c50:	(bad)  
  429c51:	call   0xaad040ef
  429c56:	add    al,0x8
  429c58:	xor    eax,0xc46cbdcf
  429c5d:	jmp    ecx
  429c5f:	iret   
  429c60:	cmp    BYTE PTR [esi-0x62],ah
  429c63:	jnp    0x429ca3
  429c65:	sti    
  429c66:	aas    
  429c67:	ins    DWORD PTR es:[edi],dx
  429c68:	int3   
  429c69:	cli    
  429c6a:	pusha  
  429c6b:	adc    eax,0xcbe90020
  429c70:	ss jae 0x429c51
  429c73:	push   ebp
  429c74:	mov    bh,0xfa
  429c76:	ret    0x9821
  429c79:	pop    es
  429c7a:	xchg   DWORD PTR [ecx-0x40],ecx
  429c7d:	or     ecx,DWORD PTR [edi+0x39000000]
  429c83:	enter  0x8f09,0xab
  429c87:	dec    esi
  429c88:	mov    edi,0x7f2b2c3c
  429c8d:	(bad)
  429c90:	in     al,dx
  429c91:	sbb    eax,0x3a0006f6
  429c96:	sar    DWORD PTR [eax+0x3484a92e],0x89
  429c9d:	sbb    eax,0x358cc393
  429ca2:	xchg   ebx,eax
  429ca3:	iret   
  429ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca5:	cmp    BYTE PTR [ebx+ebx*2-0x77],0x45
  429caa:	push   ebx
  429cab:	mov    bh,0x8c
  429cad:	sbb    eax,0x42a6b353
  429cb2:	fidivr WORD PTR [edx+0x5b5c0923]
  429cb8:	lea    eax,ds:0x6ca6a753
  429cbe:	and    edi,0x37
  429cc1:	pusha  
  429cc2:	sub    esp,edi
  429cc4:	das    
  429cc5:	inc    edx
  429cc6:	xlat   BYTE PTR ds:[ebx]
  429cc7:	pop    edi
  429cc8:	out    dx,al
  429cc9:	data16 fmul DWORD PTR [ecx+0x67305b4]
  429cd0:	add    cl,ch
  429cd2:	mov    BYTE PTR [esi+0x0],ah
  429cd5:	jmp    0x86e4ca
  429cda:	(bad)  
  429cdb:	sub    bl,bh
  429cdd:	mov    ebx,DWORD PTR [edx+0x7]
  429ce0:	mov    DWORD PTR [esi+ebp*8+0x42],ebx
  429ce4:	mov    BYTE PTR [eax+eax*1+0x0],bl
  429ce8:	add    dh,ch
  429cea:	inc    esi
  429ceb:	jecxz  0x429d16
  429ced:	pop    eax
  429cee:	out    dx,al
  429cef:	test   BYTE PTR [ebp+0xa7273e],0xca
  429cf6:	push   es
  429cf7:	mov    eax,0x6caa1
  429cfc:	call   0x3a21d3
  429d01:	inc    ecx
  429d02:	lds    ecx,FWORD PTR [edi-0x73]
  429d05:	mov    ?,WORD PTR [edx]
  429d07:	aaa    
  429d08:	push   eax
  429d09:	repnz dec esp
  429d0b:	jmp    0xf075:0xbf9a95ff
  429d12:	lahf   
  429d13:	and    DWORD PTR [esi+ecx*1],0x6
  429d17:	add    BYTE PTR [eax],al
  429d19:	ficomp DWORD PTR [edi+0x32f62443]
  429d1f:	jecxz  0x429d69
  429d21:	dec    ecx
  429d22:	in     eax,dx
  429d23:	test   BYTE PTR [edx+ecx*2-0x74bf80e3],0x6
  429d2b:	add    BYTE PTR [ebx+0x400a2257],cl
  429d31:	pop    edx
  429d32:	lahf   
  429d33:	inc    ebx
  429d34:	and    al,0x12
  429d36:	pushf  
  429d37:	inc    ebx
  429d38:	and    al,0x2a
  429d3a:	lahf   
  429d3b:	inc    ebx
  429d3c:	and    al,0xee
  429d3e:	fwait
  429d3f:	inc    ebx
  429d40:	and    al,0x2e
  429d42:	lahf   
  429d43:	inc    ebx
  429d44:	and    al,0xea
  429d46:	fwait
  429d47:	inc    ebx
  429d48:	and    al,0x32
  429d4a:	lahf   
  429d4b:	inc    ebx
  429d4c:	and    al,0x0
  429d4e:	add    BYTE PTR [eax],al
  429d50:	cli    
  429d51:	fwait
  429d52:	inc    ebx
  429d53:	and    al,0x1e
  429d55:	lds    eax,FWORD PTR [ebx+0x24]
  429d58:	repz adc ebp,DWORD PTR [edi]
  429d5b:	xchg   DWORD PTR [ebx-0x28bbc1d1],esi
  429d61:	repz add al,BYTE PTR [eax]
  429d64:	repz das 
  429d66:	jp     0x429dac
  429d68:	xlat   BYTE PTR ds:[ebx]
  429d69:	xor    esp,DWORD PTR [ecx+0x6abaf386]
  429d6f:	and    al,0xcb
  429d71:	das    
  429d72:	(bad)  
  429d73:	(bad)  
  429d74:	fcmovnb st,st(3)
  429d76:	cmp    ebx,0xffffffdc
  429d79:	ss ret 
  429d7b:	and    ebp,DWORD PTR [edi]
  429d7d:	jae    0x429d91
  429d7f:	push   0xffbe94af
  429d84:	(bad)
  429d87:	inc    esp
  429d88:	pop    ss
  429d89:	ins    BYTE PTR es:[edi],dx
  429d8a:	jmp    0xf300:0x3ca3e4be
  429d91:	das    
  429d92:	jb     0x429d18
  429d94:	iret   
  429d95:	inc    edi
  429d96:	add    al,0x0
  429d98:	repz fbstp TBYTE PTR [esi+0x5c]
  429d9c:	iret   
  429d9d:	adc    ebp,DWORD PTR [eax]
  429d9f:	sar    DWORD PTR [eax+0x5f],cl
  429da2:	in     eax,dx
  429da3:	out    dx,al
  429da4:	(bad)  
  429da5:	cmp    BYTE PTR [esp+eax*2-0x29],bh
  429da9:	out    dx,eax
  429daa:	jl     0x429db4
  429dac:	data16 repz fisttp WORD PTR [edi]
  429db0:	rcr    esp,0x99
  429db3:	das    
  429db4:	add    BYTE PTR [eax],al
  429db6:	add    BYTE PTR [ebp-0x38dc4f88],bh
  429dbc:	fild   QWORD PTR [eax]
  429dbe:	push   ecx
  429dbf:	ret    
  429dc0:	mov    ds:0x96f77443,al
  429dc5:	(bad)  
  429dc6:	and    esp,ebx
  429dc8:	icebp  
  429dc9:	sub    BYTE PTR ds:0xffbf3cb3,dl
  429dcf:	imul   esp,ebx,0x67a0fdf
  429dd5:	lods   eax,DWORD PTR ds:[esi]
  429dd6:	(bad)  
  429dd8:	frstor ds:0xe98670f9
  429dde:	add    esi,ebx
  429de0:	(bad)  
  429de1:	loope  0x429e59
  429de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429de4:	loop   0x429dba
  429de6:	aad    0x77
  429de8:	mov    dl,0x4
  429dea:	in     al,dx
  429deb:	scas   al,BYTE PTR es:[edi]
  429dec:	lods   al,BYTE PTR ds:[esi]
  429ded:	out    0x9b,eax
  429def:	in     al,0xe1
  429df1:	call   0xb85ae0f9
  429df6:	adc    ebp,DWORD PTR [esi+0x47]
  429df9:	xchg   esp,eax
  429dfa:	int3   
  429dfb:	pop    ebp
  429dfc:	fwait
  429dfd:	int3   
  429dfe:	xchg   edi,eax
  429dff:	repz xchg ecx,eax
  429e01:	mov    ah,0x7c
  429e03:	aaa    
  429e04:	jecxz  0x429dc2
  429e06:	jl     0x429e03
  429e08:	mov    bl,0x95
  429e0a:	jbe    0x429e33
  429e0c:	jecxz  0x429e7e
  429e0e:	aad    0x25
  429e10:	scas   eax,DWORD PTR es:[edi]
  429e11:	lock jl 0x429e47
  429e14:	pop    es
  429e15:	cmp    DWORD PTR [ecx],ebp
  429e17:	inc    edx
  429e18:	mul    DWORD PTR [ebx+0x43]
  429e1b:	add    BYTE PTR [eax],al
  429e1d:	add    BYTE PTR [esi],ah
  429e1f:	call   0xe35a236e
  429e24:	pop    eax
  429e25:	cld    
  429e26:	pop    es
  429e27:	sti    
  429e28:	ins    DWORD PTR es:[edi],dx
  429e29:	mov    edi,0x44fd9ed0
  429e2e:	pop    es
  429e2f:	repz dec edx
  429e31:	jmp    0x429e0f
  429e33:	xchg   edx,eax
  429e34:	(bad)  
  429e36:	jne    0x429dfb
  429e38:	int3   
  429e39:	or     ebp,DWORD PTR [edi+edx*8+0x65]
  429e3d:	cmp    ebx,DWORD PTR [eax+0x2f]
  429e40:	mov    al,ds:0x5c185a99
  429e45:	mov    edi,0x29189710
  429e4a:	(bad)  
  429e4c:	aad    0xc3
  429e4e:	cmp    al,0x8d
  429e50:	add    BYTE PTR ds:0xe186d453,ch
  429e56:	inc    eax
  429e57:	sbb    eax,0xc2a7f151
  429e5c:	and    eax,DWORD PTR [ecx]
  429e5e:	sahf   
  429e5f:	push   cs
  429e60:	push   eax
  429e61:	push   esi
  429e62:	inc    ecx
  429e63:	add    BYTE PTR [edi-0x5b],bh
  429e66:	sub    al,0xfc
  429e68:	std    
  429e69:	imul   eax,DWORD PTR [esp+eiz*8+0x13],0x23cacbe5
  429e71:	add    eax,0x2ff282fa
  429e76:	sbb    ebx,DWORD PTR [ecx*4-0x18303b63]
  429e7d:	cmp    DWORD PTR [ecx],esp
  429e7f:	sbb    al,0xfb
  429e81:	add    BYTE PTR fs:[eax],al
  429e84:	add    BYTE PTR [ebx+eiz*8+0x15e0011f],al
  429e8b:	sti    
  429e8c:	push   es
  429e8d:	dec    ecx
  429e8e:	mov    ebx,0x3d3fd123
  429e93:	ret    
  429e94:	lods   eax,DWORD PTR ds:[esi]
  429e95:	xchg   esp,eax
  429e96:	neg    DWORD PTR [edi]
  429e98:	pop    ebp
  429e99:	mov    al,0x17
  429e9b:	jecxz  0x429e71
  429e9d:	lock push es
  429e9f:	add    BYTE PTR [ebp+0x37],ah
  429ea2:	xchg   ebx,eax
  429ea3:	sub    esp,DWORD PTR [edx-0x4d]
  429ea6:	jecxz  0x429ecf
  429ea8:	bound  ecx,QWORD PTR [edi-0x20f2ab76]
  429eae:	enter  0xbe4f,0xa6
  429eb2:	test   DWORD PTR [ecx+ebp*4+0x6a620042],0xa60fe39b
  429ebd:	pop    esp
  429ebe:	jae    0x429e80
  429ec0:	xchg   edx,eax
  429ec1:	icebp  
  429ec2:	call   0x92f20c86
  429ec7:	pop    es
  429ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ec9:	xor    esp,ebx
  429ecb:	das    
  429ecc:	add    BYTE PTR [ebx+0x3],bl
  429ecf:	add    BYTE PTR [eax],al
  429ed1:	iret   
  429ed2:	push   esi
  429ed3:	pop    ds
  429ed4:	and    BYTE PTR [edx-0x78],dh
  429ed7:	sti    
  429ed8:	call   FWORD PTR [edx]
  429eda:	pushf  
  429edb:	dec    ebx
  429edc:	and    al,0x42
  429ede:	add    al,0x4c
  429ee0:	and    al,0x5e
  429ee2:	pushf  
  429ee3:	inc    ebx
  429ee4:	and    al,0x5a
  429ee6:	sahf   
  429ee7:	pop    ebx
  429ee8:	add    DWORD PTR [eax],eax
  429eea:	add    BYTE PTR [eax],al
  429eec:	adc    bl,BYTE PTR [edx-0x79eddba5]
  429ef2:	shl    DWORD PTR [ebp+0x16],cl
  429ef5:	adc    al,0xf6
  429ef7:	jmp    0x429f27
  429ef9:	pushf  
  429efa:	mov    edx,0xf9335de8
  429eff:	jmp    DWORD PTR [ecx-0x1d]
  429f02:	test   bh,bh
  429f04:	xchg   BYTE PTR [ebp-0x7e],cl
  429f07:	inc    esp
  429f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f09:	sbb    al,BYTE PTR [edx+0x4004aa35]
  429f0f:	add    BYTE PTR [ebx+0x56],al
  429f12:	add    dh,al
  429f14:	aad    0xb
  429f16:	add    BYTE PTR [esi+eiz*4+0x3a],0x83
  429f1b:	inc    edi
  429f1c:	xchg   edi,eax
  429f1d:	nop
  429f1e:	inc    ebx
  429f1f:	and    al,0x2e
  429f21:	xchg   ebx,eax
  429f22:	ds push es
  429f24:	and    BYTE PTR [esi+0x1f],dl
  429f27:	push   0xefe5512
  429f2c:	fs push ebp
  429f2e:	add    al,0x50
  429f30:	lods   eax,DWORD PTR ds:[esi]
  429f31:	popw   ds
  429f33:	dec    esp
  429f34:	cmovge eax,DWORD PTR [ebx]
  429f37:	push   ebx
  429f38:	cmp    eax,0x15b606c4
  429f3d:	or     bl,bh
  429f3f:	xlat   BYTE PTR ds:[ebx]
  429f40:	pop    ebp
  429f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f42:	ds push es
  429f44:	sbb    ch,dh
  429f46:	jae    0x429f6c
  429f48:	repz add ecx,edi
  429f4b:	cli    
  429f4c:	and    eax,0x436d35
  429f51:	add    BYTE PTR [eax],al
  429f53:	in     al,dx
  429f54:	out    dx,eax
  429f55:	repnz mov cl,0xb4
  429f58:	sub    eax,0x1c0f7422
  429f5d:	(bad)  
  429f5e:	mov    esi,0x874ca4c3
  429f63:	mov    DWORD PTR [ebx],0xc377ee8
  429f69:	jns    0x429fdf
  429f6b:	iret   
  429f6c:	addr16 pop ss
  429f6e:	xchg   ebx,eax
  429f6f:	sahf   
  429f70:	lds    esp,FWORD PTR [ecx]
  429f72:	lea    edi,[edi+0x3]
  429f75:	shl    bh,1
  429f77:	ins    DWORD PTR es:[edi],dx
  429f78:	inc    ebx
  429f79:	and    eax,0xdb5466fb
  429f7e:	pop    edi
  429f7f:	fld    TBYTE PTR [edx-0x671b0669]
  429f85:	mov    edi,0x77076a07
  429f8a:	ret    
  429f8b:	xor    al,0x5e
  429f8d:	mov    BYTE PTR [esi+0x44162d6],0xf3
  429f94:	cwde   
  429f95:	mov    dh,0xb
  429f97:	jbe    0x429f6f
  429f99:	scas   eax,DWORD PTR es:[edi]
  429f9a:	pop    es
  429f9b:	push   0x3b88f767
  429fa0:	xor    al,0x16
  429fa2:	das    
  429fa3:	js     0x429f74
  429fa5:	sti    
  429fa6:	ss test eax,0x6851dbb1
  429fac:	scas   eax,DWORD PTR es:[edi]
  429fad:	dec    DWORD PTR [edi+eiz*8-0x46c93e4f]
  429fb4:	rol    BYTE PTR [edi],1
  429fb6:	bound  eax,QWORD PTR [eax]
  429fb8:	add    BYTE PTR [eax],al
  429fba:	push   0xf1c1802e
  429fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fc0:	mov    ebx,0x4daad50b
  429fc5:	jne    0x42a028
  429fc7:	push   es
  429fc8:	or     ebp,ebx
  429fca:	add    ebx,DWORD PTR [ebx+ebp*8+0x60083280]
  429fd1:	mov    esp,0x41a8d9f8
  429fd6:	les    esp,FWORD PTR [esi-0x398bfc0c]
  429fdc:	in     al,dx
  429fdd:	inc    eax
  429fde:	sahf   
  429fdf:	add    DWORD PTR [ebp+0x12ea1f81],0xa64aeb66
  429fe9:	add    eax,ecx
  429feb:	dec    ebp
  429fec:	in     al,0xeb
  429fee:	xor    cl,cl
  429ff0:	call   0xe94991fc
  429ff5:	and    al,0xde
  429ff7:	dec    edx
  429ff8:	xlat   BYTE PTR ds:[ebx]
  429ff9:	ret    
  429ffa:	cld    
  429ffb:	mov    DWORD PTR [ecx],ebp
  429ffd:	cmc    
  429ffe:	jo     0x42a002
  42a000:	call   0xe6e39308
  42a005:	retf   0x22b
  42a008:	mov    cl,0x3f
  42a00a:	sbb    al,0x7
  42a00c:	jmp    0x9303:0xe907d67e
  42a013:	mov    ecx,0xd9c4c123
  42a018:	push   ss
  42a019:	call   0x62d93a11
  42a01e:	add    BYTE PTR [eax],al
  42a020:	add    bh,dh
  42a022:	dec    edx
  42a023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a024:	add    ebp,DWORD PTR [edi+ecx*1]
  42a027:	in     al,0xae
  42a029:	add    eax,0xdc402966
  42a02e:	push   es
  42a02f:	push   ds
  42a030:	inc    edx
  42a031:	push   ds
  42a032:	(bad)  
  42a033:	stos   BYTE PTR es:[edi],al
  42a034:	(bad)  
  42a035:	fmul   QWORD PTR [edx+0x26]
  42a038:	add    al,0xf2
  42a03a:	pop    ds
  42a03b:	inc    ebp
  42a03c:	cmp    DWORD PTR [ebx+0x6],0x45bc0035
  42a043:	add    BYTE PTR [edx+eiz*4],bh
  42a046:	mov    WORD PTR ds:0xffd424f9,cs
  42a04c:	xchg   ecx,eax
  42a04d:	jnp    0x429fe4
  42a04f:	mul    edi
  42a051:	test   DWORD PTR [esi-0x2c4cd660],esp
  42a057:	call   ecx
  42a059:	mov    dl,0x99
  42a05b:	or     BYTE PTR [edi+0x2ac3e43d],ch
  42a061:	out    dx,eax
  42a062:	or     ah,bh
  42a064:	sbb    eax,0xf4010f72
  42a069:	pop    edi
  42a06a:	inc    esi
  42a06b:	add    eax,0xffd3b319
  42a070:	out    0xfb,al
  42a072:	enter  0x2835,0x5c
  42a076:	or     BYTE PTR [edx+ebp*8],bh
  42a079:	push   ebp
  42a07a:	into   
  42a07b:	mov    al,ds:0xffd3b305
  42a080:	imul   ecx,eax,0xd87509
  42a086:	add    BYTE PTR [eax],al
  42a088:	fld    DWORD PTR [edx]
  42a08a:	inc    eax
  42a08b:	and    eax,0xd57413b3
  42a090:	push   ds
  42a091:	or     dh,BYTE PTR [eax]
  42a093:	and    eax,0x1fe13b3
  42a098:	rcl    DWORD PTR [edi+esi*8-0x5f126a19],cl
  42a09f:	test   eax,0xc1ffd3fc
  42a0a4:	xor    bl,BYTE PTR [edx-0x1c52d0f8]
  42a0aa:	ret    
  42a0ab:	stos   BYTE PTR es:[edi],al
  42a0ac:	lock or edi,esp
  42a0af:	cmc    
  42a0b0:	jne    0x42a0c0
  42a0b2:	add    DWORD PTR [eax+ebp*8+0x48],edx
  42a0b6:	add    eax,0xffd43b19
  42a0bb:	in     eax,0xf
  42a0bd:	retf   
  42a0be:	ret    
  42a0bf:	add    cl,cl
  42a0c1:	or     bh,BYTE PTR [ecx+0xa35ff]
  42a0c7:	cmp    edx,DWORD PTR [edx-0x740837ed]
  42a0cd:	sub    eax,ebx
  42a0cf:	mov    eax,0xa95
  42a0d4:	in     al,dx
  42a0d5:	or     DWORD PTR ds:0xfb4b9e32,0x4bfe2365
  42a0df:	lds    ecx,FWORD PTR [ecx]
  42a0e1:	or     ebp,DWORD PTR [edi+0x15]
  42a0e4:	in     al,dx
  42a0e5:	xor    DWORD PTR [esi+ecx*2],edx
  42a0e8:	pop    edi
  42a0e9:	dec    ebx
  42a0ea:	sti    
  42a0eb:	je     0x42a0ed
  42a0ed:	add    BYTE PTR [eax],al
  42a0ef:	inc    esi
  42a0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0f1:	dec    ebx
  42a0f2:	lds    ecx,FWORD PTR [ecx+0x7]
  42a0f5:	call   0x1cea:0xfb4bce34
  42a0fc:	jg     0x42a113
  42a0fe:	xor    al,0xce
  42a100:	dec    ebx
  42a101:	sti    
  42a102:	mov    WORD PTR [edi-0x2d],cs
  42a105:	dec    edi
  42a106:	call   FWORD PTR [edi]
  42a108:	xchg   ebx,eax
  42a109:	adc    BYTE PTR [eax-0x26],al
  42a10c:	pusha  
  42a10d:	add    BYTE PTR [ebp-0xa],0x5c
  42a111:	call   0xcbaf:0xfb4a0e36
  42a118:	loope  0x42a144
  42a11a:	xor    ecx,DWORD PTR [eax]
  42a11c:	cmp    bh,BYTE PTR [ebx+0xbd668]
  42a122:	add    BYTE PTR [ecx+ebp*4+0x29],ch
  42a126:	les    ecx,FWORD PTR [ecx-0x5a47b5fa]
  42a12c:	in     eax,0xff
  42a12e:	(bad)  
  42a12f:	jl     0x42a1af
  42a131:	adc    eax,0xfb494e30
  42a136:	xchg   DWORD PTR [edi-0xcbc40c6],ebx
  42a13c:	pop    ds
  42a13d:	test   eax,0xc26bbd9e
  42a142:	(bad)  
  42a143:	jge    0x42a178
  42a145:	rcl    DWORD PTR [ecx],cl
  42a147:	xor    esp,DWORD PTR [eax]
  42a149:	add    ah,0xff
  42a14c:	or     eax,0x5d3a5a3f
  42a151:	jg     0x42a190
  42a153:	add    BYTE PTR [eax],al
  42a155:	add    BYTE PTR [ebx],ch
  42a157:	arpl   dx,ax
  42a159:	call   DWORD PTR [ebx+edi*8-0x28]
  42a15d:	push   ecx
  42a15e:	lea    ebx,[eax+0x48]
  42a161:	aas    
  42a162:	repz fstp DWORD PTR [esi]
  42a165:	adc    eax,0xffbf2e4f
  42a16a:	mov    ah,0x52
  42a16c:	inc    edi
  42a16d:	lds    esi,FWORD PTR [eax-0x38b00e1]
  42a173:	xchg   DWORD PTR [eax-0x7d56e307],ebx
  42a179:	rcr    BYTE PTR [edi+0x3f258221],0xe3
  42a180:	sar    edi,0x4
  42a183:	jmp    0xff:0x5d36c807
  42a18a:	popf   
  42a18b:	shl    bh,1
  42a18d:	out    dx,eax
  42a18e:	add    DWORD PTR [eax-0x1],esp
  42a191:	pop    ecx
  42a192:	xchg   ebx,eax
  42a193:	cmovae edi,DWORD PTR [edi]
  42a196:	repz fdivr QWORD PTR [esi+0x3d]
  42a19a:	stos   DWORD PTR es:[edi],eax
  42a19b:	jmp    0x51d8:0x72ccffc1
  42a1a2:	test   edi,edx
  42a1a4:	inc    edi
  42a1a5:	aas    
  42a1a6:	repz jno 0x42a1c7
  42a1a9:	adc    eax,0xffbf2dc7
  42a1ae:	sub    al,0x5b
  42a1b0:	inc    edi
  42a1b1:	lds    esi,FWORD PTR [eax]
  42a1b3:	and    bh,bh
  42a1b5:	je     0x42a1bb
  42a1b7:	pop    es
  42a1b8:	rcl    ebx,1
  42a1ba:	add    BYTE PTR [eax],al
  42a1bc:	add    BYTE PTR [edx-0x4c7725ef],bl
  42a1c2:	call   0xc5a4:0x42ce84e2
  42a1c9:	jl     0x42a1dc
  42a1cb:	stos   DWORD PTR es:[edi],eax
  42a1cc:	pop    es
  42a1cd:	stos   DWORD PTR es:[edi],eax
  42a1ce:	dec    ebx
  42a1cf:	es add al,0xf2
  42a1d2:	mov    eax,0xf454f7b1
  42a1d7:	sub    BYTE PTR [ecx+edi*4],al
  42a1da:	data16 fld QWORD PTR [edi+0x14]
  42a1de:	pop    es
  42a1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1e0:	mov    bh,0x75
  42a1e2:	and    bh,BYTE PTR [eax]
  42a1e4:	mov    ch,0x15
  42a1e6:	cs sar esi,1
  42a1e9:	xor    al,0x4b
  42a1eb:	es add al,0xbe
  42a1ee:	aad    0x12
  42a1f0:	bound  ecx,QWORD PTR [ebx+0x4b]
  42a1f3:	es add al,0xc1
  42a1f6:	adc    esp,edx
  42a1f8:	das    
  42a1f9:	in     eax,dx
  42a1fa:	(bad)  
  42a1fb:	call   0x248199db
  42a200:	lds    ecx,FWORD PTR [edx+ebx*4]
  42a203:	cli    
  42a204:	sub    ebx,DWORD PTR [ebx]
  42a206:	adc    ecx,DWORD PTR [edx+0x21]
  42a209:	ja     0x42a251
  42a20b:	mov    ebp,0x2cf36a0e
  42a210:	inc    edi
  42a211:	sub    al,0x7
  42a213:	sub    eax,DWORD PTR [edi]
  42a215:	mov    ebx,0xf203a64a
  42a21a:	mov    eax,0xf5c4f721
  42a21f:	test   al,0x3
  42a221:	add    BYTE PTR [eax],al
  42a223:	add    BYTE PTR [ecx],ch
  42a225:	lahf   
  42a226:	cmp    BYTE PTR [edi-0x409ff8fc],dl
  42a22c:	mov    eax,0xe533dc10
  42a231:	(bad)  
  42a232:	call   0xffde1013
  42a237:	scas   eax,DWORD PTR es:[edi]
  42a238:	pop    eax
  42a239:	add    BYTE PTR [ecx+ebp*4-0x3054910],cl
  42a240:	xor    al,0x1
  42a242:	inc    eax
  42a243:	jmp    0xb6f3f7
  42a248:	je     0x42a20c
  42a24a:	sti    
  42a24b:	cmp    dl,ah
  42a24d:	push   ebx
  42a24e:	or     eax,0xffd02c37
  42a253:	pop    ss
  42a254:	add    dl,BYTE PTR [ebp+ecx*1+0x25]
  42a258:	lods   al,BYTE PTR ds:[esi]
  42a259:	iret   
  42a25a:	call   DWORD PTR [edi]
  42a25c:	adc    bl,dl
  42a25e:	aas    
  42a25f:	lods   eax,DWORD PTR ds:[esi]
  42a260:	das    
  42a261:	adc    dl,bh
  42a263:	aam    0x2c
  42a265:	inc    esp
  42a266:	aas    
  42a267:	jmp    0xa9c7d97f
  42a26c:	adc    DWORD PTR gs:[eax+0x45881324],ecx
  42a273:	jge    0x42a2e4
  42a275:	aas    
  42a276:	mov    edi,0xe816761f
  42a27b:	(bad)  
  42a27d:	push   es
  42a27e:	add    BYTE PTR [edi+0x2c],bl
  42a281:	in     al,0x7
  42a283:	call   0x4194a8ec
  42a288:	add    BYTE PTR [eax],al
  42a28a:	add    BYTE PTR [ebp-0x16],ch
  42a28d:	stc    
  42a28e:	dec    esi
  42a28f:	outs   dx,DWORD PTR ds:[esi]
  42a290:	inc    ebp
  42a291:	pop    edx
  42a292:	sub    ebp,esp
  42a294:	push   es
  42a295:	xchg   DWORD PTR [edi+0x90243f8],esp
  42a29b:	add    esi,0xffffffff
  42a29e:	arpl   WORD PTR [eax],si
  42a2a0:	fwait
  42a2a1:	add    eax,0xfab6e872
  42a2a6:	mov    eax,0xe1618ff8
  42a2ab:	lock xchg edx,ecx
  42a2ae:	add    BYTE PTR [ecx-0x12ff04de],dh
  42a2b4:	pop    eax
  42a2b5:	sub    ah,0x8b
  42a2b8:	push   esp
  42a2b9:	jp     0x42a336
  42a2bb:	xchg   edx,eax
  42a2bc:	add    esi,DWORD PTR [esp+eax*1-0x26]
  42a2c0:	add    al,0xc9
  42a2c2:	ret    
  42a2c3:	or     DWORD PTR [esi-0xd],ebx
  42a2c6:	add    ah,al
  42a2c8:	bound  ebx,QWORD PTR [ebx+0x17]
  42a2cb:	fimul  DWORD PTR [edx]
  42a2cd:	push   0xfb438580
  42a2d2:	out    0xd3,eax
  42a2d4:	aad    0xf6
  42a2d6:	jmp    ecx
  42a2d8:	cli    
  42a2d9:	test   dh,dh
  42a2db:	es sub eax,0x5dc90682
  42a2e1:	test   DWORD PTR [eax],0x51f735df
  42a2e7:	add    al,0xf0
  42a2e9:	dec    edi
  42a2ea:	sbb    al,0xd7
  42a2ec:	retf   0x2274
  42a2ef:	add    BYTE PTR [eax],al
  42a2f1:	add    cl,dl
  42a2f3:	cmp    eax,0x6e8a85f7
  42a2f8:	adc    cl,BYTE PTR [ebx-0x7aa89de]
  42a2fe:	or     BYTE PTR [ebx-0xa],bl
  42a301:	push   ecx
  42a302:	cs jle 0x42a2c5
  42a305:	je     0x42a30d
  42a307:	test   BYTE PTR [ebp-0x8],ah
  42a30a:	sbb    bh,BYTE PTR [ebp+eax*2-0x4]
  42a30e:	xchg   ecx,eax
  42a30f:	add    dl,BYTE PTR [eax-0x1]
  42a312:	cmp    edi,ebx
  42a314:	add    BYTE PTR [esi],0x54
  42a317:	lock dec edi
  42a319:	or     BYTE PTR [ecx+0x40],ah
  42a31c:	repz pop esi
  42a31e:	push   edi
  42a31f:	ret    
  42a320:	jae    0x42a327
  42a322:	push   ebx
  42a323:	dec    edx
  42a324:	add    ebp,ebx
  42a326:	jno    0x42a361
  42a328:	mov    ebx,0x825019c9
  42a32d:	in     al,dx
  42a32e:	repz dec esi
  42a330:	xchg   BYTE PTR [eax-0x15],al
  42a333:	mov    al,ds:0x98f3fba8
  42a338:	or     ecx,DWORD PTR [ebp+0x4fb10c46]
  42a33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a33f:	outs   dx,DWORD PTR ds:[esi]
  42a340:	mov    DWORD PTR [ebx+esi*4+0xe7f0294],0x3686ff24
  42a34b:	sub    al,0x4c
  42a34d:	mov    edi,0x12b3c81d
  42a352:	xor    esp,DWORD PTR [eax]
  42a354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a355:	outs   dx,DWORD PTR ds:[esi]
  42a356:	add    BYTE PTR [eax],al
  42a358:	add    ah,bl
  42a35a:	fild   WORD PTR [ebx]
  42a35c:	call   0xfb5cdfa6
  42a361:	js     0x42a3b3
  42a363:	mov    dl,dh
  42a365:	out    0xf7,eax
  42a367:	mov    dl,0xfa
  42a369:	fistp  QWORD PTR [ebx]
  42a36b:	or     edi,ebx
  42a36d:	out    0x2b,al
  42a36f:	out    dx,al
  42a370:	aas    
  42a371:	repz test al,0x16
  42a374:	test   DWORD PTR [esp+esi*8],edi
  42a377:	fadd   DWORD PTR [esi-0x54e1313]
  42a37d:	ret    
  42a37e:	aas    
  42a37f:	mov    al,al
  42a381:	sahf   
  42a382:	dec    ecx
  42a383:	or     dh,BYTE PTR [ebx-0x7910bc51]
  42a389:	in     eax,dx
  42a38a:	dec    esi
  42a38b:	mov    ch,0xfa
  42a38d:	mov    ds:0x7ec088e7,eax
  42a392:	sbb    DWORD PTR [edx],ebx
  42a394:	je     0x42a36d
  42a396:	adc    eax,DWORD PTR [esi-0x513b62fe]
  42a39c:	das    
  42a39d:	jbe    0x42a37e
  42a39f:	xchg   edi,eax
  42a3a0:	or     edi,DWORD PTR [eax+0x1d]
  42a3a3:	test   eax,0xaedd46ff
  42a3a8:	aas    
  42a3a9:	outs   dx,BYTE PTR ds:[esi]
  42a3aa:	push   es
  42a3ab:	sub    DWORD PTR [edi-0x4a1c7e0c],edx
  42a3b1:	leave  
  42a3b2:	mov    dh,0xe0
  42a3b4:	rol    dl,cl
  42a3b6:	mov    ch,0x9
  42a3b8:	clc    
  42a3b9:	hlt    
  42a3ba:	stc    
  42a3bb:	test   al,0x3
  42a3bd:	add    BYTE PTR [eax],al
  42a3bf:	add    BYTE PTR [esp+eax*2-0x66],dh
  42a3c3:	mov    ebp,0xb8e8fa66
  42a3c8:	jne    0x42a3e4
  42a3ca:	cwde   
  42a3cb:	mov    ch,BYTE PTR [esi]
  42a3cd:	(bad)  
  42a3ce:	cmp    dh,BYTE PTR [ebp+0x1dd9ac94]
  42a3d4:	mov    BYTE PTR [ecx-0x6d7e7827],al
  42a3da:	and    al,BYTE PTR [ecx-0x7716f4f2]
  42a3e0:	icebp  
  42a3e1:	jnp    0x42a40f
  42a3e3:	and    dl,al
  42a3e5:	or     eax,0x55e9f83c
  42a3ea:	sbb    al,0xf4
  42a3ec:	ret    
  42a3ed:	mov    ah,0xa1
  42a3ef:	mov    ah,0x14
  42a3f1:	test   BYTE PTR [ecx+0xc89f098],ch
  42a3f7:	and    bl,dh
  42a3f9:	and    ebx,0xf0b639b5
  42a3ff:	mov    BYTE PTR [esi+0x6e146e0a],dh
  42a405:	inc    esi
  42a406:	std    
  42a407:	cli    
  42a408:	jne    0x42a408
  42a40a:	(bad)  
  42a40b:	sbb    al,0xc3
  42a40d:	or     eax,0xe75b3b8
  42a412:	outs   dx,BYTE PTR ds:[esi]
  42a413:	push   es
  42a414:	mov    eax,ds:0xcc0bb90d
  42a419:	inc    esi
  42a41a:	fs sbb eax,0x292972e8
  42a420:	cmp    ecx,DWORD PTR [esp+esi*4]
  42a423:	test   DWORD PTR [eax],0x92e90000
  42a429:	(bad)  
  42a42a:	fdivr  st,st(7)
  42a42c:	xchg   ecx,eax
  42a42d:	or     eax,DWORD PTR [ecx-0x33]
  42a430:	adc    ebx,edi
  42a432:	es jp  0x42a444
  42a435:	test   DWORD PTR [esi],ebx
  42a437:	pop    esp
  42a438:	or     BYTE PTR [esi],ch
  42a43a:	sub    DWORD PTR [edx],ecx
  42a43c:	xlat   BYTE PTR ds:[ebx]
  42a43d:	xchg   BYTE PTR [eax+ebp*8+0xef8e7bb],ah
  42a444:	adc    bl,bh
  42a446:	jb     0x42a447
  42a448:	xor    edx,0xd6dcf47c
  42a44e:	add    bl,BYTE PTR [ebx+0x453e0285]
  42a454:	adc    DWORD PTR [eax+0x9],edx
  42a457:	jp     0x42a488
  42a459:	xchg   edi,ebp
  42a45b:	inc    esi
  42a45c:	adc    DWORD PTR [eax-0x1f],edx
  42a45f:	ins    DWORD PTR es:[edi],dx
  42a460:	xor    al,0xb
  42a462:	pop    ebp
  42a463:	mov    bl,0x83
  42a465:	add    edx,DWORD PTR [esi]
  42a467:	push   es
  42a468:	mov    bh,0x7
  42a46a:	arpl   WORD PTR [ebx-0x57f0a54d],si
  42a470:	dec    esp
  42a471:	adc    cl,ch
  42a473:	test   DWORD PTR [ebp-0xceb9514],eax
  42a479:	dec    esi
  42a47a:	aas    
  42a47b:	xchg   BYTE PTR [edi+ebp*8+0x630c30f7],ah
  42a482:	fldenv [edi]
  42a484:	int3   
  42a485:	call   DWORD PTR [eax+0x76fb23bc]
  42a48b:	add    BYTE PTR [eax],al
  42a48d:	add    BYTE PTR [ebx+0x2f],ch
  42a490:	das    
  42a491:	ja     0x42a4ce
  42a493:	cs je  0x42a477
  42a496:	jnp    0x42a4a4
  42a498:	push   ebp
  42a499:	mov    edx,0xe9fc76e7
  42a49e:	lock push es
  42a4a0:	xchg   edx,ebp
  42a4a2:	ds mov ebp,0x284a00fa
  42a4a8:	add    BYTE PTR [eax],al
  42a4aa:	fidivr DWORD PTR [esi-0x5]
  42a4ad:	imul   esp,DWORD PTR ds:0xc290f657,0x41000008
  42a4b7:	pop    es
  42a4b8:	dec    esi
  42a4b9:	push   ebx
  42a4ba:	in     eax,0x97
  42a4bc:	clac   
  42a4bf:	pop    es
  42a4c0:	add    DWORD PTR [ebx],0x17
  42a4c3:	cmp    eax,0x78251f7
  42a4c8:	cmovo  ebx,DWORD PTR [edx+0xf10f656]
  42a4cf:	enter  0x3d74,0x37
  42a4d3:	inc    ebp
  42a4d4:	out    0x50,eax
  42a4d6:	xchg   ebp,eax
  42a4d7:	adc    eax,0x2da132f
  42a4dc:	bound  ecx,QWORD PTR [ebx]
  42a4de:	ret    0x8868
  42a4e1:	inc    ebp
  42a4e2:	ss sub esp,0x10
  42a4e6:	imul   eax,edi,0xf70f895d
  42a4ec:	add    BYTE PTR [ebp-0x5a],0x7b
  42a4f0:	or     BYTE PTR [ebx-0x7a000000],cl
  42a4f6:	jge    0x42a56d
  42a4f8:	in     al,dx
  42a4f9:	mov    edi,0x2e68a4a5
  42a4fe:	add    DWORD PTR [eax+0x0],0xfffffffa
  42a502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a503:	not    BYTE PTR [ecx+0x20a]
  42a509:	mov    eax,ds:0x228bf745
  42a50e:	push   edi
  42a50f:	not    BYTE PTR [ecx+0x12]
  42a512:	push   eax
  42a513:	pop    ecx
  42a514:	mov    ecx,DWORD PTR [ecx+0x4b]
  42a517:	enter  0x4fc3,0x7c
  42a51b:	in     al,dx
  42a51c:	xor    DWORD PTR [esi-0xca9b5f6],0x4c
  42a523:	inc    ecx
  42a524:	inc    ebp
  42a525:	hlt    
  42a526:	sbb    al,0x27
  42a528:	dec    ebx
  42a529:	in     al,dx
  42a52a:	rcl    DWORD PTR [esi],0x87
  42a52d:	retf   
  42a52e:	mov    ds:0xa352743a,eax
  42a533:	shl    bh,0x43
  42a536:	f2xm1  
  42a538:	xor    esp,eax
  42a53a:	pop    edi
  42a53b:	jmp    DWORD PTR [ebp-0x5]
  42a53e:	inc    edi
  42a53f:	push   ss
  42a540:	jne    0x42a52d
  42a542:	jns    0x42a4d0
  42a544:	inc    ebp
  42a545:	retf   
  42a546:	stc    
  42a547:	lock cmp eax,DWORD PTR [eax]
  42a54a:	pusha  
  42a54b:	dec    DWORD PTR [eax-0x3f7fefd2]
  42a551:	daa    
  42a552:	pop    eax
  42a553:	mov    bh,bh
  42a555:	imul   edx,DWORD PTR [bx],0x51
  42a559:	add    BYTE PTR [eax],al
  42a55b:	add    BYTE PTR [eax+0x34],dh
  42a55e:	out    dx,eax
  42a55f:	xchg   BYTE PTR [edi+0x56e78f9b],al
  42a565:	jnp    0x42a5c7
  42a567:	dec    edi
  42a568:	dec    esi
  42a569:	cmp    DWORD PTR [edi-0x18],ebp
  42a56c:	repz pop ds
  42a56e:	inc    DWORD PTR [ebx+esi*1+0x70620ad3]
  42a575:	rcr    DWORD PTR [ebx],cl
  42a577:	sti    
  42a578:	fisub  WORD PTR [ebx]
  42a57a:	inc    ecx
  42a57b:	inc    ebp
  42a57c:	dec    esp
  42a57d:	pop    ds
  42a57e:	mov    BYTE PTR [ebp+0x5b],al
  42a581:	rcl    BYTE PTR [esi],1
  42a583:	adc    eax,0xffbf0cfb
  42a588:	mov    ah,0xfa
  42a58a:	push   ss
  42a58b:	add    BYTE PTR [esi-0x3e0075e9],ah
  42a591:	mov    BYTE PTR [esi-0x498b1ff9],ch
  42a597:	pop    ecx
  42a598:	push   0x31c8ba5d
  42a59d:	pop    es
  42a59e:	in     eax,dx
  42a59f:	add    ebx,DWORD PTR [esi+0x75b44d7d]
  42a5a5:	add    DWORD PTR [eax+ecx*8-0x8],esp
  42a5a9:	mov    bh,0xb2
  42a5ab:	sbb    al,BYTE PTR [ebx-0x61]
  42a5ae:	imul   eax,DWORD PTR [ebx+0x5f],0x3
  42a5b2:	data16 mov al,ds:0x15e06d8
  42a5b8:	inc    ecx
  42a5b9:	or     bl,BYTE PTR [ecx+0x24c3740b]
  42a5bf:	dec    esp
  42a5c0:	add    BYTE PTR [eax],al
  42a5c2:	add    BYTE PTR [ebp+edi*2-0x4f51290f],al
  42a5c9:	imul   ecx,DWORD PTR [edi+edi*1-0xa],0x65
  42a5ce:	inc    ebx
  42a5cf:	idiv   DWORD PTR [ebp-0x47]
  42a5d2:	fisub  WORD PTR [eax]
  42a5d4:	jecxz  0x42a5c6
  42a5d6:	(bad)
  42a5da:	inc    ebx
  42a5db:	out    dx,eax
  42a5dc:	int    0x17
  42a5de:	xchg   ebp,eax
  42a5df:	pushf  
  42a5e0:	aam    0xa8
  42a5e2:	mov    edx,0x53e90246
  42a5e7:	repnz sbb eax,0x1a6dafd1
  42a5ed:	push   0xe907ff28
  42a5f2:	add    eax,ecx
  42a5f4:	aad    0xb2
  42a5f6:	lea    esi,[esi-0x1ebe120a]
  42a5fc:	mov    ebx,0x92481c65
  42a601:	sti    
  42a602:	aam    0x36
  42a604:	dec    edi
  42a605:	xchg   ecx,eax
  42a606:	add    eax,0x139a06f3
  42a60b:	retf   0x8134
  42a60e:	add    eax,0xbf7006f3
  42a613:	sbb    al,0x7f
  42a615:	adc    al,0x18
  42a617:	je     0x42a5dc
  42a619:	(bad)  
  42a61a:	fdiv   DWORD PTR [eax]
  42a61c:	adc    al,0xd8
  42a61e:	shl    BYTE PTR [eax+0xe614d7b],cl
  42a624:	inc    esi
  42a625:	push   eax
  42a626:	mov    bh,0x0
  42a628:	add    BYTE PTR [eax],al
  42a62a:	inc    edx
  42a62b:	jp     0x42a5b2
  42a62d:	pop    ebp
  42a62e:	(bad)  ds:0x45a2b9fb
  42a634:	test   DWORD PTR ds:0xe8fb0c09,edi
  42a63a:	lock push es
  42a63c:	add    BYTE PTR [eax+0x3c],ah
  42a63f:	psubd  mm5,QWORD PTR [esi]
  42a642:	jmp    0xffc8:0xd459150b
  42a649:	imul   ebx,edi,0x82c37505
  42a64f:	or     eax,0x920bdd75
  42a654:	pop    es
  42a655:	sahf   
  42a656:	or     esi,edx
  42a658:	pop    ss
  42a659:	xlat   BYTE PTR ds:[ebx]
  42a65a:	mov    al,0x8
  42a65c:	ss das 
  42a65e:	jns    0x42a650
  42a660:	sub    BYTE PTR [esp+esi*8-0x560ebafb],ah
  42a667:	xchg   ebx,eax
  42a668:	or     ebx,DWORD PTR [esi+0x6a]
  42a66b:	fdivr  DWORD PTR [edi+0xafc6410]
  42a671:	jne    0x42a623
  42a673:	lods   al,BYTE PTR ds:[esi]
  42a674:	enter  0xecab,0x6
  42a678:	cs test eax,0x6255140f
  42a67e:	or     al,0xb6
  42a680:	push   edx
  42a681:	ret    0xd48
  42a684:	jne    0x42a67f
  42a686:	ja     0x42a612
  42a688:	pop    es
  42a689:	sahf   
  42a68a:	xor    eax,0xe865fc
  42a68f:	add    BYTE PTR [eax],al
  42a691:	ins    DWORD PTR es:[edi],dx
  42a692:	ret    0x39fa
  42a695:	fbstp  TBYTE PTR [ebx-0x1092ff06]
  42a69b:	add    eax,0x26
  42a69e:	add    DWORD PTR [ebx+0x7d],edi
  42a6a1:	push   cs
  42a6a2:	add    al,0x75
  42a6a4:	loop   0x42a670
  42a6a6:	add    al,0x57
  42a6a8:	leave  
  42a6a9:	fdivr  st,st(7)
  42a6ab:	push   DWORD PTR [ecx]
  42a6ad:	retf   0xeeda
  42a6b0:	push   0xa
  42a6b2:	out    dx,eax
  42a6b3:	jae    0x42a6d9
  42a6b5:	jmp    0x73ee:0xca2473ee
  42a6bc:	and    al,0xba
  42a6be:	out    dx,al
  42a6bf:	adc    al,0x20
  42a6c1:	mov    ah,0x43
  42a6c3:	sti    
  42a6c4:	cmp    dl,BYTE PTR [esi+0x460f0727]
  42a6ca:	les    edi,FWORD PTR [ecx-0x510135f4]
  42a6d0:	pop    es
  42a6d1:	je     0x42a72c
  42a6d3:	add    DWORD PTR [edx-0x65],ebp
  42a6d6:	push   ebx
  42a6d7:	not    BYTE PTR ds:0x3b18f2
  42a6dd:	and    esp,esi
  42a6df:	jp     0x42a6df
  42a6e1:	popf   
  42a6e2:	js     0x42a702
  42a6e4:	xor    ebx,edx
  42a6e6:	gs jp  0x42a728
  42a6e9:	cwde   
  42a6ea:	add    BYTE PTR [ebp-0x1f7c3d40],dl
  42a6f0:	hlt    
  42a6f1:	or     ebx,eax
  42a6f3:	sbb    edx,DWORD PTR [eax+0x0]
  42a6f6:	add    BYTE PTR [eax],al
  42a6f8:	and    eax,0x9215f659
  42a6fd:	adc    eax,0xc2d7003b
  42a702:	jae    0x42a70e
  42a704:	hlt    
  42a705:	out    dx,eax
  42a706:	adc    al,0x1c
  42a708:	and    al,0x43
  42a70a:	sti    
  42a70b:	cmp    BYTE PTR [edi+ebp*8-0x7e],0xc6
  42a710:	cld    
  42a711:	ret    
  42a712:	push   esp
  42a713:	mov    esi,ebx
  42a715:	xor    DWORD PTR [ebp-0x662f3fb0],0x21533c0
  42a71f:	mov    bl,0x3b
  42a721:	dec    esp
  42a722:	adc    cl,BYTE PTR [ebp+0x52af25ae]
  42a728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a729:	cwde   
  42a72a:	nop
  42a72b:	pop    es
  42a72c:	jp     0x42a750
  42a72e:	adc    ecx,DWORD PTR [ecx+0x1512a57e]
  42a734:	aas    
  42a735:	or     bh,BYTE PTR [edi-0x6fcf8801]
  42a73b:	pop    es
  42a73c:	jo     0x42a776
  42a73e:	adc    ebp,ecx
  42a740:	jno    0x42a732
  42a742:	(bad)  
  42a743:	(bad)  
  42a744:	cmp    eax,0xd8079169
  42a749:	push   es
  42a74a:	xchg   BYTE PTR [edx-0x11],al
  42a74d:	jo     0x42a76b
  42a74f:	inc    BYTE PTR [edi+0x0]
  42a752:	adc    dh,BYTE PTR [edx-0x1d]
  42a755:	sbb    al,0x8a
  42a757:	pop    ss
  42a758:	fwait
  42a759:	shl    bl,0xf9
  42a75c:	add    BYTE PTR [eax],al
  42a75e:	add    BYTE PTR [edi+esi*2-0x1e77043f],ah
  42a765:	jge    0x42a75f
  42a767:	cld    
  42a768:	add    BYTE PTR ds:0x11e005fb,0x72
  42a76f:	jmp    0x42a748
  42a771:	aad    0x20
  42a773:	jge    0x42a75a
  42a775:	mov    eax,DWORD PTR [ebp+0x7b]
  42a778:	imul   ecx,DWORD PTR [ebp-0x7022d7e5],0xc4364c9
  42a782:	sti    
  42a783:	push   es
  42a784:	clc    
  42a785:	in     al,dx
  42a786:	aas    
  42a787:	repz push 0xa670fbc0
  42a78d:	adc    DWORD PTR [edi],esi
  42a78f:	sub    al,0x7
  42a791:	sbb    eax,0x2ff7409
  42a796:	lea    ebx,[ebx+0x29db8108]
  42a79c:	push   es
  42a79d:	mov    cl,BYTE PTR [edx+0x1c039223]
  42a7a3:	jbe    0x42a7ab
  42a7a5:	cmc    
  42a7a6:	repz xchg ebp,eax
  42a7a8:	add    al,0x72
  42a7aa:	nop
  42a7ab:	cmc    
  42a7ac:	ins    BYTE PTR es:[edi],dx
  42a7ad:	pusha  
  42a7ae:	mov    dh,0x6
  42a7b0:	out    dx,al
  42a7b1:	pop    es
  42a7b2:	pop    ss
  42a7b3:	clc    
  42a7b4:	add    eax,0x7bf8136e
  42a7b9:	push   ebp
  42a7ba:	sub    esi,DWORD PTR [edi+0x26]
  42a7bd:	dec    ebx
  42a7be:	push   ss
  42a7bf:	call   0x6de93f
  42a7c4:	add    BYTE PTR [eax],al
  42a7c6:	pop    edi
  42a7c7:	daa    
  42a7c8:	cmp    edx,DWORD PTR [esi]
  42a7ca:	ins    BYTE PTR es:[edi],dx
  42a7cb:	int3   
  42a7cc:	xchg   edx,eax
  42a7cd:	mov    dh,0x25
  42a7cf:	shl    BYTE PTR [esi],1
  42a7d1:	inc    esp
  42a7d3:	pop    ebx
  42a7d4:	mov    edx,0x5215bb8a
  42a7d9:	dec    BYTE PTR [esi+0xd]
  42a7dc:	jg     0x42a7e2
  42a7de:	inc    ebx
  42a7df:	push   es
  42a7e0:	hlt    
  42a7e1:	sbb    edi,esi
  42a7e3:	inc    esi
  42a7e4:	jmp    0xfacc4b73
  42a7e9:	adc    eax,0x43b64a1f
  42a7ee:	adc    DWORD PTR [edx-0x6407fe57],ecx
  42a7f4:	test   al,0xcc
  42a7f6:	std    
  42a7f7:	out    0xd4,al
  42a7f9:	xor    DWORD PTR [ebx-0x3d52c6de],0xfe0ff405
  42a803:	inc    esi
  42a804:	jmp    0xecbddb87
  42a809:	test   eax,0xb6005cf3
  42a80e:	pop    esp
  42a80f:	int    0x14
  42a811:	sub    edi,ebp
  42a813:	mov    edi,DWORD PTR [edi+0x1500381d]
  42a819:	cmc    
  42a81a:	inc    esi
  42a81b:	inc    ebp
  42a81c:	add    BYTE PTR [edi],bh
  42a81e:	jp     0x42a81e
  42a820:	cli    
  42a821:	hlt    
  42a822:	sbb    al,0x17
  42a824:	inc    eax
  42a825:	jmp    0xc557a879
  42a82a:	add    BYTE PTR [eax],al
  42a82c:	add    BYTE PTR [esi],al
  42a82e:	inc    ebp
  42a82f:	add    BYTE PTR [edx-0x4b],ch
  42a832:	add    DWORD PTR [ebx+0x62],ebx
  42a835:	lds    esp,FWORD PTR [eax-0x41]
  42a838:	mov    esp,0x6d247275
  42a83d:	jo     0x42a831
  42a83f:	paddsb mm6,mm0
  42a842:	push   es
  42a843:	push   edx
  42a844:	mov    dh,0x7b
  42a846:	inc    edx
  42a847:	mov    al,0xdc
  42a849:	mov    al,0x4
  42a84b:	cs aaa 
  42a84d:	or     ch,BYTE PTR [edx-0x77]
  42a850:	mov    esp,0xc5b53f60
  42a855:	(bad)  
  42a857:	cli    
  42a858:	lahf   
  42a859:	jp     0x42a7e8
  42a85b:	inc    esp
  42a85c:	cdq    
  42a85d:	imul   ecx,DWORD PTR [ebx+0x78184],0xfffffffb
  42a864:	shl    BYTE PTR [ebx],cl
  42a866:	jp     0x42a870
  42a868:	jb     0x42a81e
  42a86a:	or     BYTE PTR [ecx-0x112b354],0x5f
  42a871:	inc    esp
  42a872:	jo     0x42a8c6
  42a874:	xor    eax,0x75e9000a
  42a87a:	xchg   edx,eax
  42a87b:	arpl   dx,sp
  42a87d:	(bad)  
  42a87f:	push   eax
  42a880:	cmp    DWORD PTR [esi],eax
  42a882:	sbb    bl,BYTE PTR [eax]
  42a884:	div    DWORD PTR [eax]
  42a886:	add    al,0x88
  42a888:	add    BYTE PTR [edi],cl
  42a88a:	mov    bl,0x79
  42a88c:	clc    
  42a88d:	dec    ebx
  42a88e:	pushf  
  42a88f:	dec    esi
  42a890:	push   esi
  42a891:	add    BYTE PTR [eax],al
  42a893:	add    dl,ch
  42a895:	mov    eax,DWORD PTR [esp+eiz*2+0x50f71b81]
  42a89c:	xchg   ebp,eax
  42a89d:	xchg   ebp,eax
  42a89e:	data16 (bad) 
  42a8a0:	aas    
  42a8a1:	call   0xdf5ce8b6
  42a8a6:	inc    ebx
  42a8a7:	push   0x45f5dbff
  42a8ac:	sbb    cl,BYTE PTR [edi-0x7ace8fbc]
  42a8b2:	inc    DWORD PTR fs:[ebp-0x6e5995e6]
  42a8b9:	les    esi,FWORD PTR [esi+0x56]
  42a8bc:	cmp    al,0x91
  42a8be:	test   BYTE PTR [ebp+edx*4+0x1a],ch
  42a8c2:	not    DWORD PTR [esi+0x57]
  42a8c5:	test   DWORD PTR [edi+edi*8+0x35],esp
  42a8c9:	sbb    edx,DWORD PTR [eax+0x56]
  42a8cc:	or     eax,0x15ff6485
  42a8d1:	sbb    edi,edx
  42a8d3:	(bad)  
  42a8d4:	fiadd  DWORD PTR [edi]
  42a8d6:	mov    DWORD PTR [ebp-0x8e54e],ebx
  42a8dc:	adc    eax,0xcbf87b33
  42a8e1:	or     cl,BYTE PTR [ebp-0x8e4fa94]
  42a8e7:	pop    edi
  42a8e8:	push   esp
  42a8e9:	xchg   ah,al
  42a8eb:	je     0x42a8d0
  42a8ed:	inc    ebp
  42a8ee:	add    al,0x0
  42a8f0:	jg     0x42a880
  42a8f2:	jmp    0x42a875
  42a8f4:	test   BYTE PTR [ebx],0x1
  42a8f7:	add    BYTE PTR [eax],al
  42a8f9:	add    BYTE PTR [eax],al
  42a8fb:	call   0x81bd:0x825d81b6
  42a902:	lock add esi,ecx
  42a905:	push   es
  42a906:	(bad)  
  42a907:	repz sub eax,DWORD PTR ds:0x932d6a7f
  42a90e:	js     0x42a986
  42a910:	lods   eax,DWORD PTR ds:[esi]
  42a911:	xchg   edi,eax
  42a912:	pop    ss
  42a913:	and    BYTE PTR [eax-0x120f17b6],ah
  42a919:	(bad)  
  42a91a:	repnz inc eax
  42a91c:	push   0xbfca07b1
  42a921:	sbb    edi,edi
  42a923:	xor    al,0xed
  42a925:	jnp    0x42a96c
  42a927:	sub    esp,DWORD PTR [esi-0x47]
  42a92a:	sti    
  42a92b:	cdq    
  42a92c:	jmp    0x85b935e2
  42a931:	or     eax,0x7d1d14fb
  42a936:	lea    eax,[edi]
  42a938:	jnp    0x42a949
  42a93a:	sti    
  42a93b:	sbb    esp,DWORD PTR [ebx]
  42a93d:	out    dx,eax
  42a93e:	stc    
  42a93f:	cld    
  42a940:	jno    0x42a958
  42a942:	je     0x42a922
  42a944:	js     0x42a98c
  42a946:	rcl    ebx,0xee
  42a949:	scas   al,BYTE PTR es:[edi]
  42a94a:	cli    
  42a94b:	pop    esi
  42a94c:	add    BYTE PTR [eax+0xf4adf85],al
  42a952:	sti    
  42a953:	inc    ebx
  42a954:	pop    eax
  42a955:	fstp   DWORD PTR [edx]
  42a957:	int    0x39
  42a959:	sar    DWORD PTR [edi-0x730554f8],cl
  42a95f:	add    BYTE PTR [eax],al
  42a961:	add    BYTE PTR [esi],ch
  42a963:	sub    bl,ch
  42a965:	mov    edi,0x65b42f10
  42a96a:	repz test esi,edi
  42a96d:	mov    WORD PTR [esi+0x1c],gs
  42a970:	push   cs
  42a971:	sti    
  42a972:	pushf  
  42a973:	mov    al,ds:0xdb95ff9c
  42a978:	dec    esi
  42a979:	adc    eax,0xc087f033
  42a97e:	(bad)  
  42a97f:	fist   DWORD PTR [esi-0x16f92bb5]
  42a985:	add    edi,DWORD PTR [eax+0x1c]
  42a988:	add    eax,0x66072cfa
  42a98d:	cmp    ebp,DWORD PTR [eax+0x61]
  42a990:	cs cmp eax,0x86e9139d
  42a996:	pop    ebx
  42a997:	add    dh,BYTE PTR ds:0xb1f91c16
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	xchg   ebp,eax
  42a99f:	xchg   esp,eax
  42a9a0:	arpl   WORD PTR [edi],dx
  42a9a2:	cmp    DWORD PTR [edx],eax
  42a9a4:	mov    ds:0x9a02f61b,al
  42a9a9:	adc    dh,BYTE PTR [edi-0x39]
  42a9ac:	sbb    edi,esp
  42a9ae:	mov    dl,0x85
  42a9b0:	mov    al,BYTE PTR [ecx*4+0x6c398dee]
  42a9b7:	or     esi,DWORD PTR [esi]
  42a9b9:	push   ds
  42a9ba:	daa    
  42a9bb:	pop    esp
  42a9bc:	pop    esi
  42a9bd:	pop    ds
  42a9be:	or     BYTE PTR [ebp+ebx*8-0x2a],bh
  42a9c2:	cmp    al,0x6d
  42a9c4:	jmp    0x42a9db
  42a9c9:	jle    0x42a9d9
  42a9cb:	test   eax,0x5202151b
  42a9d0:	adc    ah,BYTE PTR [edi+edi*8+0x49]
  42a9d4:	xchg   edi,eax
  42a9d5:	add    BYTE PTR [ebx+esi*4-0x1692bc01],dl
  42a9dc:	mov    bl,0xb1
  42a9de:	dec    ebx
  42a9df:	in     eax,0x83
  42a9e1:	repz push es
  42a9e3:	jmp    0xfc098ffa
  42a9e8:	ret    
  42a9e9:	mov    ah,0x62
  42a9eb:	daa    
  42a9ec:	sti    
  42a9ed:	lods   al,BYTE PTR ds:[esi]
  42a9ee:	test   BYTE PTR [edx],dl
  42a9f0:	adc    bl,BYTE PTR [edi]
  42a9f2:	pop    ss
  42a9f3:	jg     0x42a9fa
  42a9f5:	inc    ecx
  42a9f6:	add    bl,ah
  42a9f8:	sbb    edi,esi
  42a9fa:	inc    esi
  42a9fb:	jmp    0x5e33b9
  42aa00:	aad    0x8a
  42aa02:	inc    ecx
  42aa03:	add    BYTE PTR [edx],ch
  42aa05:	icebp  
  42aa06:	mov    ch,0x1
  42aa08:	ds push ebp
  42aa0a:	push   ss
  42aa0b:	data16 jmp 0x42a9ae
  42aa0e:	cld    
  42aa0f:	adc    al,0xd1
  42aa11:	pop    esp
  42aa12:	inc    ecx
  42aa13:	add    BYTE PTR [edx-0x11],ah
  42aa16:	cmp    ebx,0x2f247bc6
  42aa1c:	test   eax,0xeb3a8099
  42aa21:	repz fwait
  42aa23:	mov    edi,0xf3e67621
  42aa28:	push   0xffffffaf
  42aa2a:	and    dl,BYTE PTR [eax+0x37]
  42aa2d:	add    BYTE PTR [eax],al
  42aa2f:	add    BYTE PTR [edx-0x4],ch
  42aa32:	adc    al,0x9d
  42aa34:	sbb    al,0x41
  42aa36:	add    BYTE PTR [edi+esi*4+0x7a],ah
  42aa3a:	push   es
  42aa3b:	push   ds
  42aa3c:	add    bl,BYTE PTR [esp+ebx*1]
  42aa3f:	xlat   BYTE PTR ds:[ebx]
  42aa40:	xor    BYTE PTR [ecx],al
  42aa42:	jle    0x42a9ea
  42aa44:	loop   0x42a9cf
  42aa46:	ret    0xb60e
  42aa49:	pop    ebx
  42aa4a:	xchg   DWORD PTR [ebp+0x40],edx
  42aa4d:	push   esi
  42aa4e:	dec    edi
  42aa4f:	mov    bh,0x6f
  42aa51:	cmp    bh,BYTE PTR [ebx+edi*8-0x3e9cff50]
  42aa58:	pop    esp
  42aa59:	inc    edi
  42aa5a:	add    BYTE PTR [esi-0x46],al
  42aa5d:	std    
  42aa5e:	rcl    ecx,1
  42aa60:	je     0x42a9f5
  42aa62:	aas    
  42aa63:	jmp    0x11c9de4b
  42aa68:	loop   0x42aa3e
  42aa6a:	jle    0x42a9f8
  42aa6c:	call   0x745c3177
  42aa71:	fdiv   DWORD PTR [ebx-0x3f]
  42aa74:	ins    DWORD PTR es:[edi],dx
  42aa75:	cmc    
  42aa76:	jae    0x42aa3d
  42aa78:	sbb    eax,0x7a00fc4a
  42aa7d:	mov    ds:0xfc07fefa,al
  42aa82:	cmc    
  42aa83:	rcl    DWORD PTR [edi],cl
  42aa85:	dec    ebx
  42aa86:	jne    0x42aa9d
  42aa88:	lea    ebx,[ecx+0x17458b06]
  42aa8e:	jne    0x42aa8c
  42aa90:	inc    edx
  42aa91:	cmc    
  42aa92:	cli    
  42aa93:	inc    DWORD PTR [eax]
  42aa95:	add    BYTE PTR [eax],al
  42aa97:	pop    edx
  42aa98:	pop    ss
  42aa99:	jne    0x42aa97
  42aa9b:	ror    eax,cl
  42aa9d:	repnz push DWORD PTR [ebx+eax*4+0x45]
  42aaa2:	clc    
  42aaa3:	in     al,dx
  42aaa4:	mov    cl,0xc7
  42aaa6:	ret    0x452
  42aaa9:	push   ebp
  42aaaa:	mov    edi,DWORD PTR [esi-0x75]
  42aaad:	jmp    0x42aafb
  42aaaf:	stc    
  42aab0:	mov    esp,0xf9ce3581
  42aab5:	cmp    al,BYTE PTR [eax]
  42aab7:	in     eax,0x81
  42aab9:	clc    
  42aaba:	push   0x407fa2
  42aabf:	ins    DWORD PTR es:[edi],dx
  42aac0:	fistp  QWORD PTR [ebp-0x50981bb]
  42aac6:	call   FWORD PTR [edx]
  42aac8:	pop    ss
  42aac9:	into   
  42aaca:	push   0x407fc6
  42aacf:	(bad)  
  42aad0:	fiadd  WORD PTR [ecx+0x683e4dd8]
  42aad6:	int3   
  42aad7:	dec    esi
  42aad8:	(bad)  
  42aad9:	cli    
  42aada:	inc    BYTE PTR ds:0x2df0457c
  42aae0:	ds sub esi,esi
  42aae3:	inc    ebx
  42aae4:	leave  
  42aae5:	loop   0x42ab22
  42aae7:	fadd   QWORD PTR [esi]
  42aae9:	test   BYTE PTR [ebx],dh
  42aaeb:	retf   
  42aaec:	add    eax,DWORD PTR [eax]
  42aaee:	cmp    DWORD PTR [edi+0x13],edx
  42aaf1:	pop    es
  42aaf2:	test   al,al
  42aaf4:	add    al,0x0
  42aaf6:	add    bl,dh
  42aaf8:	aam    0x48
  42aafa:	or     eax,DWORD PTR [eax]
  42aafc:	add    BYTE PTR [eax],al
  42aafe:	ja     0x42aacb
  42ab00:	std    
  42ab01:	push   ebx
  42ab03:	jp     0x42aac7
  42ab05:	repz and esi,DWORD PTR [ebx-0x3e]
  42ab09:	sti    
  42ab0a:	and    esp,DWORD PTR [edi-0x6e]
  42ab0d:	imul   DWORD PTR [edx+0x7a]
  42ab10:	or     ecx,DWORD PTR [ecx-0x30f51e02]
  42ab16:	jbe    0x42aac5
  42ab18:	cli    
  42ab19:	test   cl,dh
  42ab1b:	out    dx,al
  42ab1c:	(bad)  
  42ab1d:	jmp    FWORD PTR [eax+0x2a]
  42ab20:	sbb    BYTE PTR [edi],dh
  42ab22:	sub    eax,0xf3f382f8
  42ab27:	in     eax,dx
  42ab28:	(bad)  
  42ab29:	cmp    BYTE PTR [esi+0x4d83fab9],bh
  42ab2f:	in     eax,dx
  42ab30:	(bad)  
  42ab31:	dec    DWORD PTR [ebx-0x5c]
  42ab34:	out    dx,eax
  42ab35:	stc    
  42ab36:	sub    al,0x74
  42ab38:	sub    al,0x37
  42ab3a:	inc    ebp
  42ab3b:	call   0xee3686c2
  42ab40:	dec    BYTE PTR [esi+0x14]
  42ab43:	add    dl,BYTE PTR [ebx]
  42ab45:	sti    
  42ab46:	xchg   BYTE PTR [ecx+0x7203550b],al
  42ab4c:	inc    esp
  42ab4d:	jne    0x42ab09
  42ab4f:	mov    dh,0x97
  42ab51:	sti    
  42ab52:	jge    0x42ab75
  42ab54:	xor    DWORD PTR [edi+0x23],0x5efad35d
  42ab5b:	in     al,0x9
  42ab5d:	adc    eax,0xffbf02a3
  42ab62:	add    BYTE PTR [eax],al
  42ab64:	add    BYTE PTR [edi+0x30],ch
  42ab67:	cwde   
  42ab68:	push   es
  42ab69:	xor    eax,0x84c4371
  42ab6e:	mov    ebx,0x49cb6e0a
  42ab73:	stc    
  42ab74:	mov    bp,0xb507
  42ab78:	cdq    
  42ab79:	cld    
  42ab7a:	or     DWORD PTR [esi],edx
  42ab7c:	mov    dh,0x77
  42ab7e:	inc    esp
  42ab7f:	xor    DWORD PTR [esp+edx*4-0x67f213e2],esi
  42ab86:	mov    cl,BYTE PTR [ebx-0xcc60cf1]
  42ab8c:	mov    dl,0x8c
  42ab8e:	(bad)  
  42ab8f:	aam    0xd
  42ab91:	js     0x42abd3
  42ab93:	je     0x42aba4
  42ab95:	call   0xf3461b1d
  42ab9a:	push   es
  42ab9b:	ins    BYTE PTR es:[edi],dx
  42ab9c:	enter  0x575c,0x16
  42aba0:	cmpxchg BYTE PTR [ebp+0x33],dl
  42aba4:	paddd  mm0,QWORD PTR [esi-0x7cb33c26]
  42abab:	test   al,0x98
  42abad:	ret    0x3c3f
  42abb0:	or     al,0xc7
  42abb2:	ja     0x42ac14
  42abb4:	cwde   
  42abb5:	jl     0x42abf7
  42abb7:	sbb    al,0x20
  42abb9:	mov    eax,ds:0x8cf40f3e
  42abbe:	loop   0x42ac24
  42abc0:	ret    
  42abc1:	sbb    al,0x8b
  42abc3:	and    edx,DWORD PTR [eax-0x3d]
  42abc6:	out    dx,al
  42abc7:	sahf   
  42abc8:	out    dx,eax
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [edx],cl
  42abcd:	(bad)  
  42abce:	ins    DWORD PTR es:[edi],dx
  42abcf:	enter  0x723c,0xa9
  42abd3:	out    dx,eax
  42abd4:	xor    DWORD PTR [ebx-0x1c],eax
  42abd7:	xor    ebp,edi
  42abd9:	push   es
  42abda:	jmp    0xa1861fe2
  42abdf:	call   0xcaf7:0x8f601aa4
  42abe6:	pop    ebp
  42abe7:	enter  0x719c,0x29
  42abeb:	out    dx,eax
  42abec:	jg     0x42ac39
  42abee:	dec    ebp
  42abef:	jl     0x42ac28
  42abf1:	add    al,0x0
  42abf3:	sbb    eax,0x5cb843ed
  42abf8:	stos   DWORD PTR es:[edi],eax
  42abf9:	mov    ch,0x4f
  42abfb:	je     0x42abb8
  42abfd:	aad    0x4f
  42abff:	push   ds
  42ac00:	mov    esi,ebp
  42ac02:	cli    
  42ac03:	pushf  
  42ac04:	cwde   
  42ac05:	add    BYTE PTR [ebp+0x1],dl
  42ac08:	imul   eax,esi,0xffffff86
  42ac0b:	lods   al,BYTE PTR ds:[esi]
  42ac0c:	clc    
  42ac0d:	jb     0x42ac16
  42ac0f:	jb     0x42ab99
  42ac11:	dec    ebp
  42ac12:	sti    
  42ac13:	cwde   
  42ac14:	js     0x42aba4
  42ac16:	je     0x42ac09
  42ac18:	ficom  DWORD PTR [eax]
  42ac1a:	xchg   DWORD PTR [ecx],esp
  42ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac1d:	push   edi
  42ac1e:	das    
  42ac1f:	mov    al,0xa0
  42ac21:	sub    al,0xce
  42ac23:	cmp    esp,DWORD PTR [edi-0x240aad00]
  42ac29:	inc    ebx
  42ac2a:	clc    
  42ac2b:	shl    cl,cl
  42ac2d:	sub    eax,0x1ec0
  42ac32:	add    BYTE PTR [ebp+0x3fabc954],dl
  42ac38:	std    
  42ac39:	push   ebx
  42ac3a:	bound  edx,QWORD PTR [ebx]
  42ac3c:	xchg   BYTE PTR [ebp+esi*8+0x71],al
  42ac40:	jmp    0x3f4f:0x6f0eb07
  42ac47:	call   0x1006:0xfda02ef7
  42ac4e:	push   ds
  42ac4f:	imul   ecx,DWORD PTR [ebp+0x7f],0xffffffa9
  42ac53:	adc    ecx,DWORD PTR [ebp-0x5]
  42ac56:	cld    
  42ac57:	clc    
  42ac58:	mov    DWORD PTR [ecx+esi*2-0x4604fe1c],eax
  42ac5f:	or     BYTE PTR [ecx-0x7e0f16ec],al
  42ac65:	mov    edi,0x7985a7dd
  42ac6a:	in     eax,0x5b
  42ac6c:	dec    eax
  42ac6d:	or     BYTE PTR [eax],al
  42ac6f:	inc    edi
  42ac70:	mov    edx,0xa113302
  42ac75:	push   eax
  42ac76:	add    al,0x4f
  42ac78:	inc    ebx
  42ac79:	je     0x42ac9f
  42ac7b:	push   ecx
  42ac7c:	ret    0xff06
  42ac7f:	into   
  42ac80:	jo     0x42ac0f
  42ac82:	test   edx,edx
  42ac84:	or     esi,edi
  42ac86:	call   FWORD PTR [edx+0x20]
  42ac89:	stos   DWORD PTR es:[edi],eax
  42ac8a:	push   ebp
  42ac8b:	in     al,0x9
  42ac8d:	test   eax,eax
  42ac8f:	push   cs
  42ac90:	fild   DWORD PTR [ecx+0x477d8247]
  42ac96:	or     BYTE PTR [eax],al
  42ac98:	add    BYTE PTR [eax],al
  42ac9a:	dec    ecx
  42ac9b:	or     edx,DWORD PTR [eax+0x4]
  42ac9e:	inc    ecx
  42ac9f:	xor    BYTE PTR [edx-0x24],ch
  42aca2:	rcr    dl,0x57
  42aca5:	push   ecx
  42aca6:	inc    ebp
  42aca7:	aad    0xf6
  42aca9:	mov    dl,0x9
  42acab:	add    esi,edi
  42acad:	adc    eax,0x3af75a
  42acb2:	lea    esi,[eax]
  42acb4:	adc    eax,eax
  42acb6:	fldenv [edi]
  42acb8:	test   BYTE PTR [ebx+0x5e57068a],0xe1
  42acbf:	aas    
  42acc0:	mov    edx,0xbad71a08
  42acc5:	inc    eax
  42acc6:	adc    DWORD PTR [edi+esi*8],0x82002e74
  42accd:	dec    ecx
  42acce:	adc    cl,BYTE PTR [ebx]
  42acd0:	je     0x42acf6
  42acd2:	add    bh,BYTE PTR [edi+0x1]
  42acd5:	(bad)  
  42acd6:	jmp    0xd813:0x4ab6070e
  42acdd:	sbb    ecx,DWORD PTR [edx-0x79]
  42ace0:	(bad)  
  42ace2:	pop    ecx
  42ace3:	dec    eax
  42ace4:	cli    
  42ace5:	shl    edx,0x7
  42ace8:	dec    esi
  42ace9:	mov    esi,ebx
  42aceb:	pop    esi
  42acec:	or     al,0x72
  42acee:	out    dx,eax
  42acef:	and    al,0x5
  42acf1:	hlt    
  42acf2:	jg     0x42aca1
  42acf4:	(bad)  
  42acf5:	out    0x48,eax
  42acf7:	jmp    0xa3b1a808
  42acfc:	mul    bh
  42acfe:	add    BYTE PTR [eax],al
  42ad00:	add    bh,dl
  42ad02:	out    dx,al
  42ad03:	(bad)  
  42ad04:	jmp    DWORD PTR [ebp-0xdf81d57]
  42ad0a:	and    al,0x5
  42ad0c:	jo     0x42ad76
  42ad0e:	lods   eax,DWORD PTR ds:[esi]
  42ad0f:	(bad)  
  42ad10:	jae    0x42acff
  42ad12:	mov    bl,0x16
  42ad14:	pusha  
  42ad15:	call   0xadc9b91d
  42ad1a:	fwait
  42ad1b:	inc    eax
  42ad1c:	add    al,0xf3
  42ad1e:	push   0xa0ef23bb
  42ad23:	mov    ah,0xe7
  42ad25:	mov    BYTE PTR [edi],bh
  42ad27:	push   es
  42ad28:	sti    
  42ad29:	jo     0x42ad10
  42ad2b:	push   es
  42ad2c:	je     0x42ace3
  42ad2e:	push   0x44
  42ad30:	je     0x42ace3
  42ad32:	int3   
  42ad33:	(bad)  
  42ad34:	and    edi,edi
  42ad36:	aad    0x9b
  42ad38:	push   edx
  42ad39:	inc    ebp
  42ad3a:	mov    esp,0x9876d87a
  42ad3f:	(bad)  
  42ad40:	mov    al,cs:0x7bf0ac
  42ad46:	cs add al,0x87
  42ad49:	lods   al,BYTE PTR ds:[esi]
  42ad4a:	std    
  42ad4b:	ja     0x42ad51
  42ad4d:	jbe    0x42ad38
  42ad4f:	(bad)  
  42ad50:	push   ebx
  42ad52:	pop    edx
  42ad53:	(bad)  
  42ad54:	or     esp,DWORD PTR [ebx+0x5166395]
  42ad5a:	jl     0x42acdc
  42ad5c:	rol    BYTE PTR [edi-0x1cbc861c],0x68
  42ad63:	test   BYTE PTR [eax+0xf000000],0x7
  42ad6a:	push   0x9917300b
  42ad6f:	add    eax,0x1bb60fd4
  42ad74:	out    dx,eax
  42ad75:	sbb    eax,0xc71d0b4b
  42ad7a:	mov    ds:0xe90386ae,al
  42ad7f:	dec    ebx
  42ad80:	rcl    DWORD PTR [edi],1
  42ad82:	sub    ebx,DWORD PTR [eax+0x74]
  42ad85:	push   esp
  42ad86:	pop    esi
  42ad87:	sbb    BYTE PTR [ebx+eiz*8],ch
  42ad8a:	and    BYTE PTR [edi+0x43d62397],al
  42ad90:	sub    al,0x51
  42ad92:	pop    esi
  42ad93:	adc    eax,0xefc5436a
  42ad98:	jnp    0x42addd
  42ad9a:	int    0xeb
  42ad9c:	jnp    0x42ade1
  42ad9e:	(bad)
  42ada1:	inc    ebx
  42ada2:	int    0xdb
  42ada4:	ins    DWORD PTR es:[edi],dx
  42ada5:	inc    ecx
  42ada6:	in     eax,0xb2
  42ada8:	jnp    0x42aded
  42adaa:	or     eax,0xedbeccf0
  42adaf:	add    esi,ebx
  42adb1:	mov    esi,0xfa54f358
  42adb6:	mov    eax,ds:0xe51710bf
  42adbb:	js     0x42ad70
  42adbd:	push   es
  42adbe:	jo     0x42ad4f
  42adc0:	adc    BYTE PTR [ebx],dl
  42adc2:	shl    DWORD PTR [esp+esi*2-0x6],0xa9
  42adc7:	jle    0x42adb7
  42adc9:	push   ss
  42adca:	test   bl,0x0
  42adcd:	add    BYTE PTR [eax],al
  42adcf:	and    al,0x4a
  42add1:	call   0x1804:0x25b518d0
  42add8:	ror    BYTE PTR [ebp+0x5],cl
  42addb:	repnz push es
  42addd:	jmp    0x2ad07400
  42ade2:	add    BYTE PTR [eax+ecx*1+0x0],dh
  42ade6:	fs inc esp
  42ade8:	sbb    BYTE PTR es:[ebx],bl
  42adeb:	clc    
  42adec:	push   ss
  42aded:	test   BYTE PTR [ecx],ch
  42adef:	je     0x42ae27
  42adf1:	sti    
  42adf2:	aad    0xbc
  42adf4:	sbb    eax,0x9b4ad8d
  42adf9:	lea    ebx,[ebp-0x5276e254]
  42adff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae00:	sbb    eax,0xf9c34ce8
  42ae05:	cli    
  42ae06:	shr    DWORD PTR [eax],0x2
  42ae09:	add    cl,ch
  42ae0b:	cmp    BYTE PTR [edi+0x13],dh
  42ae0e:	jmp    0x2a859d03
  42ae13:	jmp    0xc358fe15
  42ae18:	std    
  42ae19:	lods   eax,DWORD PTR ds:[esi]
  42ae1a:	stos   BYTE PTR es:[edi],al
  42ae1b:	lock std 
  42ae1d:	rol    dl,cl
  42ae1f:	sub    eax,0x4a9ebb73
  42ae24:	push   eax
  42ae25:	xchg   DWORD PTR [ebx+ecx*2],ecx
  42ae28:	mov    eax,0xc6076251
  42ae2d:	add    ecx,ebp
  42ae2f:	fld    QWORD PTR [esi+0x0]
  42ae32:	rol    DWORD PTR [eax],1
  42ae34:	add    BYTE PTR [eax],al
  42ae36:	addr16 stc 
  42ae38:	cli    
  42ae39:	jmp    0xa6472329
  42ae3e:	icebp  
  42ae3f:	push   ss
  42ae40:	lea    ebp,[ecx]
  42ae42:	out    dx,eax
  42ae43:	out    dx,al
  42ae44:	ss jecxz 0x42ae31
  42ae47:	std    
  42ae48:	pop    ecx
  42ae49:	stos   BYTE PTR es:[edi],al
  42ae4a:	add    DWORD PTR [eax+0xd7969f0],0x54151d00
  42ae54:	das    
  42ae55:	sahf   
  42ae56:	sub    BYTE PTR [edi+0x8],bh
  42ae59:	pop    ds
  42ae5a:	and    BYTE PTR [eax+0x32fbe541],al
  42ae60:	mov    eax,0x14e16200
  42ae65:	(bad)  
  42ae66:	jge    0x42ae2f
  42ae68:	xor    DWORD PTR [esi+0x12],edi
  42ae6b:	xchg   ebx,eax
  42ae6c:	in     eax,0x5f
  42ae6e:	pop    ebp
  42ae6f:	xchg   ebp,eax
  42ae70:	(bad)  
  42ae71:	out    0xdc,eax
  42ae73:	jmp    0xfffe:0xa549fff8
  42ae7a:	dec    ecx
  42ae7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae7c:	add    al,BYTE PTR [eax]
  42ae7e:	pushf  
  42ae7f:	inc    ebx
  42ae80:	dec    esi
  42ae81:	mov    ecx,DWORD PTR [ebx]
  42ae83:	xor    DWORD PTR [ebp+0xc],0xffffffca
  42ae87:	mov    bh,0x81
  42ae89:	jl     0x42ae71
  42ae8b:	(bad)  
  42ae8c:	outs   dx,BYTE PTR ds:[esi]
  42ae8d:	adc    dl,BYTE PTR [ecx]
  42ae8f:	(bad)  
  42ae92:	(bad)  
  42ae93:	dec    esp
  42ae94:	call   0xf74fa284
  42ae99:	mov    eax,DWORD PTR [eax]
  42ae9b:	add    BYTE PTR [eax],al
  42ae9d:	inc    esp
  42ae9e:	clc    
  42ae9f:	jns    0x42aec5
  42aea1:	and    al,BYTE PTR [ebx]
  42aea3:	dec    edi
  42aea4:	mov    edi,DWORD PTR [edx+ebx*1+0x48a0005]
  42aeab:	push   edi
  42aeac:	pop    esi
  42aead:	enter  0x6,0x8b
  42aeb1:	xchg   esi,eax
  42aeb2:	fdivr  st,st(6)
  42aeb4:	push   ebp
  42aeb5:	and    eax,0xc58df97a
  42aeba:	push   es
  42aebb:	or     DWORD PTR [esi],0xffffffcf
  42aebe:	out    0x7f,eax
  42aec0:	mov    edx,DWORD PTR ds:0xdb048bfb
  42aec6:	retf   0x72cf
  42aec9:	inc    ecx
  42aeca:	jno    0x42af0e
  42aecc:	add    al,0xd8
  42aece:	sbb    dh,ch
  42aed0:	sbb    bl,BYTE PTR [edi+ecx*1-0x1d]
  42aed4:	add    cl,BYTE PTR [eax+0x44]
  42aed7:	test   al,al
  42aed9:	push   es
  42aeda:	(bad)  
  42aedb:	cmc    
  42aedc:	dec    edi
  42aedd:	repz in eax,0x7b
  42aee0:	inc    ebx
  42aee1:	sti    
  42aee2:	scas   al,BYTE PTR es:[edi]
  42aee3:	push   ds
  42aee4:	(bad)  
  42aee5:	mov    ah,0x95
  42aee7:	ficomp WORD PTR [eax]
  42aee9:	std    
  42aeea:	js     0x42ae94
  42aeec:	pop    ecx
  42aeed:	xor    edx,ebp
  42aeef:	(bad)  
  42aef0:	push   ecx
  42aef1:	js     0x42af71
  42aef3:	pop    ss
  42aef4:	cmp    esp,esp
  42aef6:	pusha  
  42aef7:	or     dl,dh
  42aef9:	aaa    
  42aefa:	add    bh,ah
  42aefc:	add    BYTE PTR [edi-0x18],bl
  42aeff:	mov    al,0xe7
  42af01:	add    BYTE PTR [eax],al
  42af03:	add    BYTE PTR [eax-0xa],dh
  42af06:	or     bl,bh
  42af08:	js     0x42af31
  42af0a:	test   eax,0xa9edf7bd
  42af0f:	xchg   bh,al
  42af11:	sahf   
  42af12:	mov    bl,0x52
  42af14:	lods   al,BYTE PTR ds:[esi]
  42af15:	mov    dl,0xf6
  42af17:	cs enter 0x96bc,0x75
  42af1c:	imul   ebp
  42af1e:	inc    BYTE PTR [edi+0x15081136]
  42af24:	(bad)  
  42af26:	mov    esi,0xcc0579ff
  42af2b:	test   BYTE PTR [edi],0x8e
  42af2e:	mov    al,0x4e
  42af30:	je     0x42afac
  42af32:	repz out 0xc,eax
  42af35:	ror    DWORD PTR [eax],0xfb
  42af38:	js     0x42af17
  42af3a:	(bad)  
  42af3b:	out    dx,al
  42af3c:	out    0x35,eax
  42af3e:	xlat   BYTE PTR ds:[ebx]
  42af3f:	add    al,0x1f
  42af41:	cmp    BYTE PTR [esi-0x50c35e01],0x4
  42af48:	mov    cl,0x7c
  42af4a:	(bad)  
  42af4b:	jmp    FWORD PTR [esp+ebx*1-0x25cbad51]
  42af52:	cmp    dl,BYTE PTR [ecx]
  42af54:	mov    bl,0xed
  42af56:	jnp    0x42af9d
  42af58:	sti    
  42af59:	push   es
  42af5a:	fiadd  WORD PTR [edx-0x59]
  42af5d:	sbb    edx,DWORD PTR [ecx]
  42af5f:	hlt    
  42af60:	rol    DWORD PTR [esi],1
  42af62:	jmp    0xf953b91a
  42af67:	repnz add BYTE PTR [eax],al
  42af6a:	add    ah,al
  42af6c:	push   es
  42af6d:	adc    BYTE PTR [ecx+0x63d3f7f4],0xe5
  42af74:	inc    esi
  42af75:	jmp    0xe838e5b7
  42af7a:	sbb    bh,cl
  42af7c:	pop    esi
  42af7d:	jmp    0xb649a305
  42af82:	lods   eax,DWORD PTR ds:[esi]
  42af83:	inc    ecx
  42af84:	idiv   bl
  42af86:	aaa    
  42af87:	std    
  42af88:	inc    esi
  42af89:	jmp    0x895f793c
  42af8e:	repnz cld 
  42af90:	push   es
  42af91:	fwait
  42af92:	jns    0x42afc2
  42af94:	not    BYTE PTR [ecx-0x1f364456]
  42af9a:	add    edi,DWORD PTR [esi]
  42af9c:	adc    BYTE PTR [eax*4+0x3e7578f],0xf3
  42afa4:	pop    ecx
  42afa5:	pop    esi
  42afa6:	jmp    0x3ebc917
  42afab:	and    DWORD PTR [esi-0x4a],ebx
  42afae:	push   es
  42afaf:	mov    cl,0x4c
  42afb1:	cli    
  42afb2:	add    ebp,DWORD PTR [edx+0x74]
  42afb5:	std    
  42afb6:	jl     0x42afa6
  42afb8:	out    dx,al
  42afb9:	xchg   ecx,eax
  42afba:	cdq    
  42afbb:	data16 cmc 
  42afbd:	sti    
  42afbe:	retf   
  42afbf:	add    eax,DWORD PTR [edi-0x17]
  42afc2:	jl     0x42af72
  42afc4:	neg    BYTE PTR [edi-0x78]
  42afc7:	pop    eax
  42afc8:	mov    dl,al
  42afca:	push   es
  42afcb:	clc    
  42afcc:	mov    bh,ah
  42afce:	add    al,0x0
  42afd0:	add    BYTE PTR [eax],al
  42afd2:	repz push es
  42afd4:	ins    BYTE PTR es:[edi],dx
  42afd5:	add    BYTE PTR [ebx-0xa4a000c],0x56
  42afdc:	sti    
  42afdd:	xor    al,0xff
  42afdf:	leave  
  42afe0:	test   BYTE PTR [ecx-0x15],bl
  42afe3:	icebp  
  42afe4:	cli    
  42afe5:	int    0xf2
  42afe7:	push   es
  42afe8:	add    BYTE PTR [esi+0x2910ce03],dl
  42afee:	out    dx,eax
  42afef:	(bad)  
  42aff1:	jmp    0x6cc9b6e6
  42aff6:	test   al,0xf3
  42aff8:	cli    
  42aff9:	jbe    0x42afb4
  42affb:	ror    BYTE PTR [edx],0x67
  42affe:	sysret 
  42b000:	add    cl,ch
  42b002:	test   eax,0xb1999402
  42b007:	cmc    
  42b008:	or     DWORD PTR [ebp+0x3],ebp
  42b00b:	pop    es
  42b00c:	add    cl,ch
  42b00e:	mov    eax,ds:0xe8c438b5
  42b013:	js     0x42b023
  42b015:	jb     0x42af9a
  42b017:	stc    
  42b018:	cmp    ch,ah
  42b01a:	jb     0x42b01d
  42b01c:	test   BYTE PTR [ebx],ch
  42b01e:	lock push es
  42b020:	add    BYTE PTR [ecx-0x6407b557],ch
  42b026:	(bad)  
  42b027:	push   edi
  42b028:	call   0xfb32442b
  42b02d:	pusha  
  42b02e:	mov    bl,0xed
  42b030:	ss test DWORD PTR cs:[ecx+0xe9a6],ecx
  42b038:	add    al,dh
  42b03a:	push   es
  42b03b:	sti    
  42b03c:	cmp    al,0xb8
  42b03e:	repz cli 
  42b040:	out    dx,al
  42b041:	xchg   esi,eax
  42b042:	ins    DWORD PTR es:[edi],dx
  42b043:	add    ch,ch
  42b045:	lock push es
  42b047:	sti    
  42b048:	hlt    
  42b049:	cmp    al,0x16
  42b04b:	inc    eax
  42b04c:	jmp    0xd679a71c
  42b051:	mov    DWORD PTR ds:[ebp+0x94a00],eax
  42b058:	lea    ecx,[edi]
  42b05a:	daa    
  42b05b:	push   eax
  42b05c:	push   esi
  42b05d:	xor    dl,BYTE PTR [esi+0xe]
  42b060:	call   DWORD PTR [ebp-0x5c]
  42b063:	cmp    eax,0xff853755
  42b069:	inc    BYTE PTR [ebp-0x4081ba7f]
  42b06f:	add    esi,DWORD PTR [eax]
  42b071:	mov    bh,0xfa
  42b074:	je     0x42b064
  42b076:	or     ebp,DWORD PTR [edi]
  42b078:	call   FWORD PTR [edi]
  42b07a:	mov    DWORD PTR [edi],ecx
  42b07c:	inc    eax
  42b07d:	fidivr DWORD PTR [edi-0x39d9d7fd]
  42b083:	cli    
  42b084:	je     0x42b024
  42b086:	outs   dx,DWORD PTR ds:[esi]
  42b087:	pop    es
  42b088:	push   eax
  42b089:	imul   esp,edi,0xffffffa6
  42b08c:	inc    ebx
  42b08d:	fisubr DWORD PTR [edi+0x0]
  42b090:	call   0x3b93a2
  42b095:	dec    edi
  42b096:	dec    ebx
  42b097:	jne    0x42b0da
  42b099:	inc    ecx
  42b09a:	mov    esp,0x8df2
  42b09f:	add    BYTE PTR [esi-0x65fffb83],dl
  42b0a5:	or     BYTE PTR [ebp+0x2212fe75],cl
  42b0ab:	pop    ss
  42b0ac:	hlt    
  42b0ad:	or     DWORD PTR [eax+eax*8+0x5581cf6e],eax
  42b0b4:	loop   0x42b123
  42b0b6:	test   DWORD PTR [eax-0x7408f609],edi
  42b0bc:	inc    edi
  42b0bd:	add    al,0xf7
  42b0bf:	jne    0x42b0b3
  42b0c1:	or     DWORD PTR [ebp-0x8],eax
  42b0c4:	push   ebp
  42b0c5:	mov    ch,0xe6
  42b0c7:	mov    DWORD PTR [esi+0x79],ecx
  42b0ca:	div    DWORD PTR [ebp-0x8f26e]
  42b0d0:	repz lds esi,FWORD PTR [esi+0x7ac544f9]
  42b0d7:	rol    bh,0xe1
  42b0da:	cmp    al,0x45
  42b0dc:	xor    al,0xdf
  42b0de:	stos   DWORD PTR es:[edi],eax
  42b0df:	out    0x64,eax
  42b0e1:	aad    0x4
  42b0e3:	sti    
  42b0e4:	loopne 0x42b08a
  42b0e6:	add    esi,DWORD PTR [ebp+0xb]
  42b0e9:	lods   eax,DWORD PTR ds:[esi]
  42b0ea:	das    
  42b0eb:	lea    ebp,[esi+0x4e]
  42b0ee:	add    bh,bl
  42b0f0:	or     al,0x2e
  42b0f2:	add    eax,0xe9850375
  42b0f7:	retf   
  42b0f8:	loop   0x42b117
  42b0fa:	add    al,0x85
  42b0fc:	xor    esp,ebp
  42b0fe:	jns    0x42b0f9
  42b100:	in     eax,dx
  42b101:	jl     0x42b107
  42b103:	sti    
  42b104:	add    BYTE PTR [eax],al
  42b106:	add    BYTE PTR [esi+0x6e],bl
  42b109:	add    al,0xcf
  42b10b:	sbb    ch,bl
  42b10d:	adc    cl,BYTE PTR [ebx]
  42b10f:	outs   dx,BYTE PTR ds:[esi]
  42b110:	cdq    
  42b111:	add    al,0xfb
  42b113:	int3   
  42b114:	pop    esp
  42b115:	mov    dh,bl
  42b117:	fistp  DWORD PTR [edi-0x14]
  42b11a:	stc    
  42b11b:	mov    esp,0x14faba77
  42b120:	xchg   esp,eax
  42b121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b122:	enter  0x92b0,0x77
  42b126:	in     al,dx
  42b127:	inc    edx
  42b128:	xchg   ecx,eax
  42b129:	lods   al,BYTE PTR ds:[esi]
  42b12a:	mov    WORD PTR [esi],gs
  42b12c:	sub    ch,BYTE PTR [esi-0x1680d9b]
  42b132:	cli    
  42b133:	push   es
  42b134:	out    0x75,al
  42b136:	inc    ebp
  42b137:	xchg   DWORD PTR [ebp-0x31fceafd],ebp
  42b13d:	mov    esi,0x8a1d6fff
  42b142:	sbb    bl,bl
  42b144:	in     eax,0x0
  42b146:	add    bl,dh
  42b148:	pushf  
  42b149:	jno    0x42b190
  42b14b:	jmp    0x42b153
  42b14d:	cmp    DWORD PTR [ebx],eax
  42b14f:	fiadd  WORD PTR [edx]
  42b151:	ins    BYTE PTR es:[edi],dx
  42b152:	jns    0x42b1a3
  42b154:	fidiv  WORD PTR [eax+0x5e06f304]
  42b15a:	fcom   QWORD PTR [ebp+0x7]
  42b15d:	iretw  
  42b15f:	cmp    DWORD PTR [edi+0x76a703bd],eax
  42b165:	mov    ebx,0x3e79f3c7
  42b16a:	xchg   DWORD PTR [eax],eax
  42b16c:	add    BYTE PTR [eax],al
  42b16e:	lahf   
  42b16f:	(bad)  
  42b170:	out    0x77,eax
  42b172:	icebp  
  42b173:	xchg   DWORD PTR [ebx],ebx
  42b175:	or     al,0xd
  42b177:	jp     0x42b1ab
  42b179:	mov    DWORD PTR ds:0x3336e279,ebx
  42b17f:	ins    BYTE PTR es:[edi],dx
  42b180:	jo     0x42b18d
  42b182:	or     al,0x56
  42b184:	cwde   
  42b185:	out    dx,eax
  42b186:	jg     0x42b1ce
  42b188:	jb     0x42b1f4
  42b18a:	xor    esp,DWORD PTR fs:[edx]
  42b18d:	add    al,0x66
  42b18f:	push   es
  42b190:	scas   al,BYTE PTR es:[edi]
  42b191:	out    dx,al
  42b192:	in     al,0x46
  42b194:	sbb    al,0x8
  42b196:	repnz push es
  42b198:	jmp    0x2078b813
  42b19d:	push   0x6a
  42b19f:	add    ebp,DWORD PTR [edx+0x40869c8e]
  42b1a5:	push   es
  42b1a6:	and    DWORD PTR [ebx],esp
  42b1a8:	cmp    bx,0xb404
  42b1ad:	sub    DWORD PTR [eax-0x21],eax
  42b1b0:	call   DWORD PTR [esi-0x67]
  42b1b3:	repnz ins DWORD PTR es:[edi],dx
  42b1b5:	hlt    
  42b1b6:	ja     0x42b1b1
  42b1b8:	pushf  
  42b1b9:	adc    al,0x1b
  42b1bb:	or     ebp,eax
  42b1bd:	add    esi,ebx
  42b1bf:	pop    ecx
  42b1c0:	fwait
  42b1c1:	add    bl,dh
  42b1c3:	dec    edx
  42b1c4:	fadd   DWORD PTR [ebx-0xd]
  42b1c7:	mov    edi,edi
  42b1c9:	sub    dl,ch
  42b1cb:	icebp  
  42b1cc:	jge    0x42b1f0
  42b1ce:	lock push esp
  42b1d0:	call   0x42b28c
  42b1d5:	cli    
  42b1d6:	in     al,dx
  42b1d7:	cli    
  42b1d8:	jb     0x42b20f
  42b1da:	jmp    0xed7b1bdd
  42b1df:	pop    ecx
  42b1e0:	xor    ch,BYTE PTR [esi]
  42b1e2:	mov    ah,0x7
  42b1e4:	jmp    0x192e3b84
  42b1e9:	(bad)  
  42b1ea:	jno    0x42b251
  42b1ec:	mov    ch,0xf0
  42b1ee:	or     DWORD PTR [ecx+esi*4-0x39],0x68
  42b1f3:	add    DWORD PTR [ebx],edx
  42b1f5:	out    dx,eax
  42b1f6:	in     eax,dx
  42b1f7:	je     0x42b1ea
  42b1f9:	jg     0x42b246
  42b1fb:	clc    
  42b1fc:	cmp    eax,esi
  42b1fe:	sbb    esi,DWORD PTR [eax-0x7]
  42b201:	mov    al,0x6
  42b203:	test   DWORD PTR [ecx+0x13520f7b],ebp
  42b209:	sti    
  42b20a:	add    DWORD PTR [ebp+esi*2+0x40],0xffffff84
  42b20f:	inc    esp
  42b210:	loope  0x42b252
  42b212:	out    dx,al
  42b213:	je     0x42b20a
  42b215:	cmp    DWORD PTR [edx-0x8],0x51
  42b219:	in     eax,dx
  42b21a:	push   es
  42b21b:	add    cl,ch
  42b21d:	push   edx
  42b21e:	jmp    0x417e:0xeca869fe
  42b225:	in     al,dx
  42b226:	jnp    0x42b22d
  42b228:	add    BYTE PTR [edx],bh
  42b22a:	push   DWORD PTR [ebx-0x13]
  42b22d:	ins    DWORD PTR es:[edi],dx
  42b22e:	push   0xfffffffc
  42b230:	jmp    0x313efca2
  42b235:	scas   al,BYTE PTR es:[edi]
  42b236:	or     DWORD PTR [eax],eax
  42b238:	mov    ah,0x0
  42b23a:	add    BYTE PTR [eax],al
  42b23c:	jge    0x42b21b
  42b23e:	push   edx
  42b23f:	cmp    ebx,DWORD PTR fs:[ebx]
  42b242:	push   eax
  42b243:	push   cs
  42b244:	sti    
  42b245:	push   ss
  42b246:	jg     0x42b248
  42b248:	mov    ebp,0x5e75f704
  42b24d:	arpl   WORD PTR [eax],ax
  42b24f:	jmp    edi
  42b251:	std    
  42b252:	div    BYTE PTR [esi]
  42b254:	dec    ebp
  42b255:	sbb    DWORD PTR [eax+edx*1+0xa],ebp
  42b259:	or     esi,edi
  42b25b:	xlat   BYTE PTR ss:[ebx]
  42b25d:	retf   0x4405
  42b260:	lahf   
  42b261:	push   cs
  42b262:	not    DWORD PTR ds:0x401aa6
  42b268:	sar    DWORD PTR [edi+0x1a585d55],0x0
  42b26f:	push   ebp
  42b270:	xchg   ecx,eax
  42b271:	test   BYTE PTR [edi+0x53],0x19
  42b275:	ror    BYTE PTR [ecx-0x73],cl
  42b278:	fild   WORD PTR [esi]
  42b27a:	push   ecx
  42b27b:	push   ebx
  42b27c:	loopne 0x42b286
  42b27e:	dec    ebx
  42b27f:	push   ebx
  42b280:	leave  
  42b281:	pop    es
  42b282:	jne    0x42b28c
  42b284:	mov    ds:0x8a000005,al
  42b289:	pop    edx
  42b28a:	mov    DWORD PTR [ebp+0x6e],eax
  42b28d:	push   es
  42b28e:	adc    eax,0x44ca68
  42b293:	test   DWORD PTR [edx-0x4800da88],ecx
  42b299:	or     al,0xf7
  42b29b:	jne    0x42b263
  42b29d:	pop    es
  42b29e:	jne    0x42b2b0
  42b2a0:	add    BYTE PTR [eax],al
  42b2a2:	add    BYTE PTR [ecx+0x2d0c7507],cl
  42b2a8:	js     0x42b2a6
  42b2aa:	call   DWORD PTR [edi-0x65bfef94]
  42b2b0:	mov    DWORD PTR [edx-0x44678b],edi
  42b2b6:	(bad)  
  42b2b7:	addr16 lock cmc 
  42b2ba:	adc    eax,0x401476
  42b2bf:	add    dl,cl
  42b2c1:	push   ecx
  42b2c2:	leave  
  42b2c3:	repz sbb ebx,DWORD PTR [eax]
  42b2c6:	add    BYTE PTR [esi],ah
  42b2c8:	gs lock jle 0x42b253
  42b2cc:	cli    
  42b2cd:	or     DWORD PTR [ebx+ebp*2-0xf],0x53
  42b2d2:	push   edx
  42b2d3:	js     0x42b288
  42b2d5:	push   0x10
  42b2d7:	mov    bl,0xdd
  42b2d9:	mov    DWORD PTR [edi+edx*2+0x2e],eax
  42b2dd:	xor    eax,0x71d0a0d7
  42b2e2:	or     al,0x7a
  42b2e4:	cmp    eax,DWORD PTR [eax]
  42b2e6:	dec    edi
  42b2e7:	cmp    al,0x5b
  42b2e9:	or     al,0xfb
  42b2eb:	cld    
  42b2ec:	enter  0x84d8,0x33
  42b2f0:	cmp    ecx,DWORD PTR [ebp-0x79]
  42b2f3:	scas   al,BYTE PTR es:[edi]
  42b2f4:	mov    ecx,0xeaa6bf3b
  42b2f9:	test   DWORD PTR [ebx+ebx*1-0x6b],ebx
  42b2fd:	aas    
  42b2fe:	jg     0x42b333
  42b300:	jmp    0x70e6:0xd57fbf3b
  42b307:	add    BYTE PTR [eax],al
  42b309:	add    dh,ah
  42b30b:	jg     0x42b30c
  42b30d:	mov    BYTE PTR [esi+0x67bf3c71],ch
  42b313:	ret    0x4c89
  42b316:	out    0xe,eax
  42b318:	push   esp
  42b319:	sti    
  42b31a:	data16 rcl BYTE PTR [ebx-0x5],cl
  42b31e:	pop    esi
  42b31f:	idiv   bh
  42b321:	xor    cl,ah
  42b323:	aaa    
  42b324:	cmp    BYTE PTR [edi+0x448bee3e],0xe3
  42b32b:	fs dec edx
  42b32d:	hlt    
  42b32e:	push   0xfffffff5
  42b330:	mov    eax,DWORD PTR [edi+ebp*4+0x76]
  42b334:	inc    edx
  42b335:	clc    
  42b336:	cwde   
  42b337:	in     eax,0xff
  42b339:	je     0x42b2e2
  42b33b:	inc    ebp
  42b33c:	outs   dx,BYTE PTR ds:[esi]
  42b33d:	adc    eax,0x220695
  42b342:	shr    bh,0xf3
  42b345:	ja     0x42b32a
  42b347:	inc    esi
  42b348:	jmp    0xab31ead9
  42b34d:	pop    esp
  42b34e:	stos   BYTE PTR es:[edi],al
  42b34f:	(bad)  
  42b350:	hlt    
  42b351:	add    edi,DWORD PTR [ebx+esi*1+0x56c35329]
  42b358:	cdq    
  42b359:	add    bh,ah
  42b35b:	sub    dl,cl
  42b35d:	add    BYTE PTR [ecx],ah
  42b35f:	lock sti 
  42b361:	outs   dx,DWORD PTR ds:[esi]
  42b362:	jecxz  0x42b3aa
  42b364:	jmp    0xb0beb667
  42b369:	mul    DWORD PTR ds:0xfeae0c
  42b36f:	add    BYTE PTR [eax],al
  42b371:	jne    0x42b362
  42b373:	(bad)  [edi+0x3]
  42b376:	inc    edi
  42b377:	jmp    0xa78e1905
  42b37c:	or     bl,dh
  42b37e:	pop    ecx
  42b37f:	pop    esi
  42b380:	lock xchg ebp,eax
  42b382:	loop   0x42b3bc
  42b384:	push   ebx
  42b385:	mov    eax,ds:0x8cdad657
  42b38a:	xor    ah,BYTE PTR [ebp+0x44]
  42b38d:	repz jge 0x42b3bb
  42b390:	in     al,dx
  42b391:	stc    
  42b392:	sbb    ch,ah
  42b394:	adc    al,0x33
  42b396:	pop    es
  42b397:	jo     0x42b3e2
  42b399:	mov    edi,0x770fa632
  42b39e:	jbe    0x42b388
  42b3a0:	add    esi,ebx
  42b3a2:	pop    esi
  42b3a3:	mov    cl,0x8f
  42b3a5:	or     al,0x7
  42b3a7:	mov    ecx,0xf6aadffe
  42b3ac:	inc    ebx
  42b3ad:	repz lds esp,FWORD PTR [ebx-0x16f90c39]
  42b3b4:	add    edi,DWORD PTR [edx+0x4c]
  42b3b7:	xor    DWORD PTR [ebp+0x5fffbb47],ecx
  42b3bd:	adc    dl,bh
  42b3bf:	ss sub ah,ah
  42b3c2:	add    BYTE PTR [ebp-0x18],0xf0
  42b3c6:	push   es
  42b3c7:	dec    edi
  42b3c8:	ins    BYTE PTR es:[edi],dx
  42b3c9:	and    al,bl
  42b3cb:	push   eax
  42b3cc:	fs and cl,bh
  42b3cf:	push   eax
  42b3d0:	push   cs
  42b3d1:	lahf   
  42b3d2:	cmp    DWORD PTR [edi+0xf6],0x7b
  42b3d9:	cmp    DWORD PTR [ecx],eax
  42b3db:	jmp    0x9a91f1d0
  42b3e0:	enter  0x8d1e,0xa9
  42b3e4:	lock icebp 
  42b3e6:	adc    al,0xa5
  42b3e8:	loopne 0x42b430
  42b3ea:	add    BYTE PTR [edx+0x48],dh
  42b3ed:	jg     0x42b46b
  42b3ef:	leave  
  42b3f0:	stc    
  42b3f1:	cmc    
  42b3f2:	or     ah,BYTE PTR [ebp-0x10]
  42b3f5:	pop    es
  42b3f6:	add    cl,ch
  42b3f8:	vunpcklpd xmm7,xmm1,XMMWORD PTR [ecx+0x0]
  42b3fd:	inc    edi
  42b3fe:	add    BYTE PTR [eax-0x55],ah
  42b401:	out    dx,al
  42b402:	ss stos BYTE PTR es:[edi],al
  42b404:	in     eax,0x82
  42b406:	loop   0x42b3f1
  42b408:	lock push es
  42b40a:	push   0xfaee6f29
  42b40f:	cmp    ah,BYTE PTR [eax-0x10ff019c]
  42b415:	jno    0x42b417
  42b417:	jmp    0x7557a65d
  42b41c:	add    DWORD PTR [edi+0x0],eax
  42b41f:	pusha  
  42b420:	sub    esi,ebx
  42b422:	ss stos BYTE PTR es:[edi],al
  42b424:	pop    esp
  42b425:	daa    
  42b426:	lea    esi,[eax+eax*4-0x14a1afaa]
  42b42d:	adc    BYTE PTR [ebx],0xa9
  42b430:	lock cmp DWORD PTR [edi+0x447be6d5],0x0
  42b438:	out    0x59,al
  42b43a:	not    DWORD PTR ds:0xf2000000
  42b440:	cmovo  eax,DWORD PTR [eax]
  42b443:	bswap  edx
  42b445:	jae    0x42b44a
  42b447:	adc    esp,DWORD PTR [edi-0xc]
  42b44a:	mov    ebp,DWORD PTR [edi-0x65bff52f]
  42b450:	pop    edi
  42b451:	or     BYTE PTR [edi-0x1b],dl
  42b454:	shl    DWORD PTR [edx+ecx*1+0x3d],cl
  42b458:	jp     0x42b49d
  42b45a:	lock cmc 
  42b45c:	ror    DWORD PTR [edx-0x1],cl
  42b45f:	(bad)  
  42b461:	xchg   DWORD PTR [ebp-0x12],eax
  42b464:	push   esp
  42b465:	not    DWORD PTR ds:0x401a1e
  42b46b:	ret    
  42b46c:	inc    ebp
  42b46d:	in     al,dx
  42b46e:	cmp    ebx,DWORD PTR [ecx-0x20748d92]
  42b474:	loop   0x42b480
  42b476:	inc    eax
  42b477:	dec    edx
  42b478:	pop    ecx
  42b479:	div    DWORD PTR [ebp+0x32]
  42b47c:	jmp    0x42b44e
  42b47e:	mov    edi,ecx
  42b480:	out    0x31,al
  42b482:	ret    
  42b483:	fimul  WORD PTR [eax+ebp*2+0x20]
  42b487:	or     bh,BYTE PTR [ebp+0x53c9533a]
  42b48d:	div    DWORD PTR [ebp+0x6e]
  42b490:	jmp    0x42b505
  42b492:	lock mov ecx,0x6275f757
  42b498:	jmp    0x42b4ad
  42b49a:	mov    eax,0x850048ca
  42b49f:	call   0x0:0x39396f
  42b4a6:	pop    es
  42b4a7:	out    dx,eax
  42b4a8:	outs   dx,BYTE PTR ds:[esi]
  42b4a9:	and    BYTE PTR [ecx+0x3c],dl
  42b4ac:	int3   
  42b4ad:	sub    eax,DWORD PTR [edi+0xa4581b4]
  42b4b3:	jmp    0xc746:0xe4f3f473
  42b4ba:	or     BYTE PTR [ebx+0x213b0ab6],ah
  42b4c0:	push   esp
  42b4c1:	push   ecx
  42b4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4c3:	mov    bl,0xf6
  42b4c5:	cli    
  42b4c6:	push   es
  42b4c7:	pop    esi
  42b4c8:	sbb    BYTE PTR [eax-0xd],al
  42b4cb:	sbb    al,0x73
  42b4cd:	or     BYTE PTR [esi-0x5d],bh
  42b4d0:	sar    dl,cl
  42b4d2:	(bad)  
  42b4d3:	stc    
  42b4d4:	jmp    0x42b4a9
  42b4d6:	xchg   BYTE PTR ds:0xfdf686fd,dl
  42b4dc:	xchg   BYTE PTR [ebx+ebx*2+0x5],al
  42b4e0:	jae    0x42b4be
  42b4e2:	fs jae 0x42b4dc
  42b4e5:	cli    
  42b4e6:	inc    ebp
  42b4e7:	cmc    
  42b4e8:	jno    0x42b4d6
  42b4ea:	push   esp
  42b4eb:	shl    edx,cl
  42b4ed:	btr    ebp,ebx
  42b4f0:	sti    
  42b4f1:	je     0x42b53e
  42b4f3:	int    0x11
  42b4f5:	aam    0xe3
  42b4f7:	sbb    eax,0xf3345304
  42b4fc:	ror    BYTE PTR [edi],cl
  42b4fe:	mov    bl,0xdd
  42b500:	xor    eax,0x24323f5d
  42b505:	push   0x3f61bb
  42b50a:	add    BYTE PTR [eax],al
  42b50c:	add    BYTE PTR [ebx+esi*1],dl
  42b50f:	fdivr  st,st(2)
  42b511:	out    0x61,al
  42b513:	adc    DWORD PTR [eax-0xd],eax
  42b516:	call   0x953928da
  42b51b:	jno    0x42b4f5
  42b51d:	hlt    
  42b51e:	lods   eax,DWORD PTR ds:[esi]
  42b51f:	sti    
  42b520:	je     0x42b4e9
  42b522:	test   BYTE PTR [ecx],dl
  42b524:	pop    esp
  42b525:	add    DWORD PTR [esi],ebx
  42b527:	add    al,0x87
  42b529:	xchg   BYTE PTR ss:[ebx+0x5a],bl
  42b52d:	cmp    BYTE PTR [edi+0x6f303c0],ah
  42b533:	mov    esp,0xd4ec2055
  42b538:	daa    
  42b539:	jecxz  0x42b526
  42b53b:	sti    
  42b53c:	and    esi,0x46
  42b53f:	jmp    0x50ec59cc
  42b544:	add    bl,dh
  42b546:	push   es
  42b547:	(bad)  
  42b548:	(bad)  
  42b549:	sbb    bh,BYTE PTR [ecx]
  42b54b:	jae    0x42b5b0
  42b54d:	scas   al,BYTE PTR es:[edi]
  42b54e:	inc    edi
  42b54f:	jmp    0x15543da9
  42b554:	adc    DWORD PTR [ebx],esi
  42b556:	pop    es
  42b557:	sbb    dh,BYTE PTR [esi]
  42b559:	daa    
  42b55a:	ret    0x3a5
  42b55d:	mov    esp,DWORD PTR [edi-0xa]
  42b560:	std    
  42b561:	imul   eax,DWORD PTR [edi+0x472e57cb],0xc70c03e9
  42b56b:	call   0x40:0x244a7465
  42b572:	add    BYTE PTR [eax],al
  42b574:	repz jmp 0x42b572
  42b577:	repz test BYTE PTR [esi-0x17],0xec
  42b57c:	xchg   edx,eax
  42b57d:	push   es
  42b57e:	jmp    0x49a15986
  42b583:	shr    ebp,0x6
  42b586:	ret    0x1711
  42b589:	sbb    BYTE PTR [ecx],ch
  42b58b:	add    al,0xe8
  42b58d:	mov    bl,0xd3
  42b58f:	push   edi
  42b590:	cs inc edi
  42b592:	jmp    0x3ceedd9d
  42b597:	rol    ebp,0x6
  42b59a:	(bad)  
  42b59c:	cmp    BYTE PTR [edi],0x50
  42b59f:	aam    0xf1
  42b5a1:	push   es
  42b5a2:	jmp    0x83580092
  42b5a7:	sti    
  42b5a8:	jo     0x42b571
  42b5aa:	hlt    
  42b5ab:	imul   ebp,eax,0x3ce3ffb1
  42b5b1:	les    edi,FWORD PTR [esi]
  42b5b3:	jmp    0x2e697935
  42b5b8:	adc    al,0xbf
  42b5ba:	mov    ebp,?
  42b5bc:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5be:	push   ebx
  42b5bf:	sub    al,0x2c
  42b5c1:	pop    es
  42b5c2:	dec    esi
  42b5c3:	pop    esp
  42b5c4:	sti    
  42b5c5:	ds push ecx
  42b5c7:	cdq    
  42b5c8:	cwde   
  42b5c9:	xor    cl,BYTE PTR [edi]
  42b5cb:	aas    
  42b5cc:	cwde   
  42b5cd:	jmp    0x29f652e5
  42b5d2:	add    BYTE PTR [ebx+esi*8+0x2d],bl
  42b5d6:	push   eax
  42b5d7:	add    BYTE PTR es:[eax],al
  42b5da:	add    BYTE PTR [ebx],al
  42b5dc:	and    ebx,DWORD PTR [eax]
  42b5de:	mov    ebx,0x170f2688
  42b5e3:	js     0x42b64d
  42b5e5:	mov    DWORD PTR [esp+eax*8+0x55e93ec3],edi
  42b5ec:	aaa    
  42b5ed:	(bad)  
  42b5ee:	in     eax,dx
  42b5ef:	std    
  42b5f0:	ficom  WORD PTR [ebx+ebx*8]
  42b5f3:	pop    edx
  42b5f4:	in     eax,dx
  42b5f5:	sub    DWORD PTR [ecx],0xffffffc3
  42b5f8:	and    eax,DWORD PTR [edi+0x3ec3b4f4]
  42b5fe:	jmp    0x397dbc6e
  42b603:	call   0x326fbabd
  42b608:	sub    DWORD PTR [eax],eax
  42b60a:	(bad)  
  42b60b:	xchg   esp,eax
  42b60c:	and    bl,BYTE PTR [eax]
  42b60e:	ins    BYTE PTR es:[edi],dx
  42b60f:	sbb    al,0x47
  42b611:	push   eax
  42b612:	rcr    DWORD PTR [edi],0xfc
  42b615:	stc    
  42b616:	scas   al,BYTE PTR es:[edi]
  42b617:	xchg   edx,eax
  42b618:	jg     0x42b636
  42b61a:	inc    ebp
  42b61b:	xor    ch,BYTE PTR [ecx]
  42b61d:	add    BYTE PTR [ecx],dl
  42b61f:	xchg   edi,eax
  42b620:	ret    
  42b621:	ds jmp 0xfc32c920
  42b627:	xor    BYTE PTR [edi],al
  42b629:	push   edi
  42b62a:	add    BYTE PTR ds:0xd6c25d4d,cl
  42b630:	add    eax,0xc7eabe4e
  42b635:	cmp    DWORD PTR [eax],eax
  42b637:	in     al,0xed
  42b639:	adc    ebp,esp
  42b63b:	enter  0x45,0x6a
  42b63f:	add    BYTE PTR [eax],al
  42b641:	add    dh,al
  42b643:	dec    ebp
  42b644:	div    DWORD PTR ds:0x39c6ee
  42b64a:	mov    ah,0xa0
  42b64c:	push   edx
  42b64d:	lds    ebx,FWORD PTR [ecx+0x5]
  42b650:	call   0xf6326ed0
  42b655:	xor    ecx,edx
  42b657:	sub    al,BYTE PTR [esp-0x6e]
  42b65b:	pop    ecx
  42b65c:	or     eax,0x80966ff
  42b661:	push   eax
  42b662:	or     DWORD PTR [esi+0x41f2e8f5],edi
  42b668:	idiv   bh
  42b66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b66b:	mov    al,ds:0x599c426
  42b670:	not    DWORD PTR ds:0x40125a
  42b676:	jl     0x42b63b
  42b678:	(bad)  
  42b679:	jmp    DWORD PTR [edi+0x78]
  42b67c:	out    0x83,al
  42b67e:	ss jmp 0x0:0x3a6ec7f
  42b686:	stc    
  42b687:	push   esp
  42b688:	dec    edi
  42b689:	mov    edi,DWORD PTR [edi+0x1dff84fa]
  42b68f:	imul   esi,DWORD PTR [esi],0xe8050a01
  42b695:	out    dx,eax
  42b696:	jmp    0x83ff:0x5a84f5ec
  42b69d:	xor    bl,BYTE PTR [ebx]
  42b69f:	add    eax,0x6d58b00
  42b6a4:	cmp    eax,0x1
  42b6a9:	repz (bad) 
  42b6ac:	(bad)  
  42b6ad:	cld    
  42b6ae:	bound  esi,QWORD PTR [ebp+0x66dee4ff]
  42b6b4:	pusha  
  42b6b5:	mov    dh,0x1d
  42b6b7:	add    al,0xfb
  42b6b9:	inc    BYTE PTR [ecx-0xcbfef]
  42b6bf:	test   BYTE PTR [ebx+ebp*1],bh
  42b6c2:	sbb    eax,DWORD PTR [ebp+0x0]
  42b6c5:	repz fadd DWORD PTR [eax-0x1220c74]
  42b6cc:	mov    bh,0xac
  42b6ce:	cmp    DWORD PTR [eax+eax*1],eax
  42b6d1:	or     eax,0xb657f9df
  42b6d6:	popf   
  42b6d7:	dec    BYTE PTR [edi+ebx*1+0x68b81ffa]
  42b6de:	fdivp  st(6),st
  42b6e0:	call   FWORD PTR [ebx+0x7cfb65d6]
  42b6e6:	jne    0x42b6a6
  42b6e8:	dec    edi
  42b6e9:	mov    eax,DWORD PTR [ecx-0x8]
  42b6ec:	cli    
  42b6ed:	ins    BYTE PTR es:[edi],dx
  42b6ee:	addr16 inc eax
  42b6f0:	and    al,0xf7
  42b6f2:	pop    edx
  42b6f3:	les    esi,FWORD PTR [ebx-0x30]
  42b6f6:	pop    edx
  42b6f7:	jo     0x42b71d
  42b6f9:	pop    ss
  42b6fa:	ss xchg edi,eax
  42b6fc:	dec    DWORD PTR [esi+ebx*8-0x1a]
  42b700:	add    eax,0x8cf7e0da
  42b705:	mov    DWORD PTR [ecx],0xde59b814
  42b70b:	(bad)  
  42b70c:	inc    DWORD PTR [eax]
  42b70e:	add    BYTE PTR [eax],al
  42b710:	sbb    edi,DWORD PTR [edx+0x7f24fb66]
  42b716:	and    al,ah
  42b718:	mov    al,0xdd
  42b71a:	jns    0x42b6db
  42b71c:	lahf   
  42b71d:	fisttp DWORD PTR [ebx+0x2d30cef]
  42b723:	btr    DWORD PTR [esi],eax
  42b726:	jmp    0x7574af7e
  42b72b:	mov    bl,0xb5
  42b72d:	push   es
  42b72e:	fs aas 
  42b730:	pop    ss
  42b731:	inc    ebx
  42b732:	xor    edx,DWORD PTR [esp+ebx*4+0x2]
  42b736:	call   0x3cbcaa3e
  42b73b:	pop    ds
  42b73c:	imul   eax,DWORD PTR ds:0x76db03e9,0x14
  42b743:	cli    
  42b744:	leave  
  42b745:	jnp    0x42b723
  42b747:	pop    ds
  42b748:	fild   WORD PTR [ebx-0x4093ecdc]
  42b74e:	mov    eax,0x4a73ddeb
  42b753:	clc    
  42b754:	ins    DWORD PTR es:[edi],dx
  42b755:	add    BYTE PTR [ebx+0x6dff2cf8],bl
  42b75b:	jbe    0x42b748
  42b75d:	pop    esi
  42b75e:	leave  
  42b75f:	mov    esi,0xe2a06cd
  42b764:	adc    DWORD PTR [ecx+ebp*4],0x3
  42b768:	xchg   esp,eax
  42b769:	jne    0x42b747
  42b76b:	add    esi,edx
  42b76d:	push   es
  42b76e:	jmp    0x89c68ce1
  42b773:	or     eax,DWORD PTR [eax]
  42b775:	add    BYTE PTR [eax],al
  42b777:	cld    
  42b778:	jb     0x42b707
  42b77a:	xchg   BYTE PTR [eax+0x58538122],dh
  42b780:	adc    DWORD PTR [ecx+0xf],edi
  42b783:	mov    bl,0x6
  42b785:	fs ret 
  42b787:	rcl    BYTE PTR [ecx+0x4f],0x4
  42b78b:	aad    0xfd
  42b78d:	imul   eax,DWORD PTR [eax+0xf],0xf
  42b791:	cmp    DWORD PTR [ecx+0x4652270],ecx
  42b797:	repz push es
  42b799:	sbb    DWORD PTR [edi],eax
  42b79b:	pop    eax
  42b79c:	aas    
  42b79d:	jmp    0x42b7bf
  42b79f:	sbb    BYTE PTR [esi],al
  42b7a1:	add    cl,ch
  42b7a3:	lock push esi
  42b7a5:	sti    
  42b7a6:	ss imul ebx
  42b7a9:	adc    al,0x25
  42b7ab:	jecxz  0x42b7f3
  42b7ad:	add    BYTE PTR [edi+ebp*1+0x6d],ah
  42b7b1:	sub    eax,0x7507ef6a
  42b7b6:	fdiv   QWORD PTR [ecx+0x61]
  42b7b9:	or     cl,dh
  42b7bb:	arpl   WORD PTR [eax],dx
  42b7bd:	push   0x266bc1
  42b7c2:	cmp    ch,0x61
  42b7c5:	or     BYTE PTR [edi],al
  42b7c7:	jo     0x42b82b
  42b7c9:	and    al,0xf9
  42b7cb:	adc    BYTE PTR [ebp+0x11],dh
  42b7ce:	sbb    ah,BYTE PTR [esi-0x135a7698]
  42b7d4:	test   BYTE PTR [ebp+eiz*4+0x514ff704],0x0
  42b7dc:	add    BYTE PTR [eax],al
  42b7de:	or     ah,ah
  42b7e0:	cli    
  42b7e1:	ds and al,0xe2
  42b7e4:	adc    al,0x39
  42b7e6:	jecxz  0x42b82e
  42b7e8:	add    BYTE PTR [esi+0xc873e1e],cl
  42b7ee:	sbb    ah,BYTE PTR [ebp-0x71dc16fd]
  42b7f4:	jmp    0x42b7b5
  42b7f6:	jns    0x42b853
  42b7f8:	or     BYTE PTR [esi+0x514e1b6],dh
  42b7fe:	add    eax,DWORD PTR [edi+0x0]
  42b801:	jb     0x42b85a
  42b803:	(bad)  
  42b804:	jl     0x42b7e7
  42b806:	pop    eax
  42b807:	xchg   edx,eax
  42b808:	sbb    ch,bh
  42b80a:	cmp    eax,0x3c5cbf8a
  42b80f:	(bad)  
  42b810:	ret    0x6bd0
  42b813:	out    0xfa,al
  42b815:	jmp    0x654d998d
  42b81a:	jb     0x42b802
  42b81c:	cli    
  42b81d:	add    BYTE PTR [edx],cl
  42b81f:	mov    eax,edi
  42b821:	add    esi,ebx
  42b823:	adc    BYTE PTR [ebx-0x2],bh
  42b826:	pop    ss
  42b827:	jbe    0x42b82e
  42b829:	adc    DWORD PTR [ebp+eiz*8+0x73],0x73
  42b82e:	mov    ecx,0x3a15f755
  42b833:	sti    
  42b834:	aas    
  42b835:	add    BYTE PTR [ecx-0x3e],dl
  42b838:	sbb    ebx,0xfffffffe
  42b83b:	add    si,0x22
  42b83f:	push   edi
  42b840:	sbb    eax,0x83
  42b845:	and    bl,0x6e
  42b848:	or     DWORD PTR [ecx-0xe],ebx
  42b84b:	add    BYTE PTR [ebp-0x5e],dh
  42b84e:	nop
  42b84f:	icebp  
  42b850:	jmp    0x42b80f
  42b852:	cmp    BYTE PTR [edx+0x1],ah
  42b855:	dec    ecx
  42b856:	shl    ch,cl
  42b858:	call   0x3908ef
  42b85d:	adc    edx,esp
  42b85f:	loope  0x42b869
  42b861:	jns    0x42b8d2
  42b863:	add    bl,ch
  42b865:	and    eax,0x1f087b91
  42b86a:	(bad)  [esi+0x2d]
  42b86d:	adc    al,0x6a
  42b86f:	lds    eax,FWORD PTR [ebx-0x76]
  42b872:	push   ebx
  42b873:	not    DWORD PTR ds:0x3ff7e6
  42b879:	jb     0x42b898
  42b87b:	lea    eax,[eax+0x5a]
  42b87e:	icebp  
  42b87f:	enter  0xf5fc,0xdc
  42b883:	dec    ebp
  42b884:	call   0x3896ab
  42b889:	ins    BYTE PTR es:[edi],dx
  42b88a:	fcom   QWORD PTR [ebx]
  42b88c:	lock sub BYTE PTR [ecx+0x0],cl
  42b890:	cmp    edx,DWORD PTR [ecx+0x56]
  42b893:	(bad)  
  42b894:	push   esi
  42b895:	and    dl,BYTE PTR [ecx+0x10]
  42b898:	(bad)  
  42b899:	repz mov esp,0xd4fb74f4
  42b89f:	or     dl,ah
  42b8a1:	add    dh,BYTE PTR [eax]
  42b8a3:	add    al,0x57
  42b8a5:	push   0x5b0c2a
  42b8aa:	add    BYTE PTR [eax],al
  42b8ac:	lods   eax,DWORD PTR ds:[esi]
  42b8ad:	cli    
  42b8ae:	mov    ebp,0x3a68f303
  42b8b3:	add    al,0x76
  42b8b5:	scas   eax,DWORD PTR es:[edi]
  42b8b6:	outs   dx,DWORD PTR ds:[esi]
  42b8b7:	pop    es
  42b8b8:	mov    ds:0x3f40a84,eax
  42b8bd:	cs add al,0x7f
  42b8c0:	dec    ebp
  42b8c1:	jmp    0x73c4:0x72f586fe
  42b8c8:	jmp    0x9357adca
  42b8cd:	sar    BYTE PTR [esi],0x0
  42b8d0:	jo     0x42b89e
  42b8d2:	(bad)  
  42b8d3:	mov    esi,0xffffde4b
  42b8d8:	repz mov ch,0x96
  42b8db:	dec    edi
  42b8dc:	xor    dh,ch
  42b8de:	out    0xb1,al
  42b8e0:	fs out dx,al
  42b8e2:	(bad)  
  42b8e3:	cs pushf 
  42b8e5:	push   edi
  42b8e6:	jae    0x42b8c8
  42b8e8:	push   0xffffffa3
  42b8ea:	shl    BYTE PTR [ebp-0xf],cl
  42b8ed:	test   BYTE PTR [ebx-0x73],cl
  42b8f0:	cs dec esi
  42b8f2:	push   esp
  42b8f3:	sti    
  42b8f4:	push   es
  42b8f5:	(bad)  
  42b8f7:	xor    al,0x77
  42b8f9:	inc    eax
  42b8fa:	inc    ecx
  42b8fb:	add    cl,bl
  42b8fd:	cld    
  42b8fe:	mov    BYTE PTR [edi+ecx*4],dh
  42b901:	loopne 0x42b941
  42b903:	add    BYTE PTR [esp+eax*1+0x7b],bl
  42b907:	mov    edi,0xc030ecde
  42b90c:	pop    edx
  42b90d:	or     BYTE PTR [eax+eax*1],al
  42b910:	add    BYTE PTR [eax],al
  42b912:	add    bl,dh
  42b914:	xchg   DWORD PTR [eax],eax
  42b916:	push   ebx
  42b917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b918:	push   es
  42b919:	je     0x42b959
  42b91b:	pop    ss
  42b91c:	aaa    
  42b91d:	fisubr DWORD PTR [esi-0x1]
  42b920:	jecxz  0x42b93d
  42b922:	add    al,0x54
  42b924:	dec    eax
  42b925:	jmp    0x9b26d193
  42b92a:	jle    0x42b980
  42b92c:	pop    ebx
  42b92d:	leave  
  42b92e:	imul   eax,edi,0xe
  42b931:	jmp    0xaa514639
  42b936:	adc    esi,DWORD PTR cs:[eax-0x607fbdb]
  42b93d:	in     al,0x10
  42b93f:	xor    eax,DWORD PTR [edi]
  42b941:	pop    esi
  42b942:	fstp   TBYTE PTR [ebx+0x41]
  42b945:	mov    cl,0x38
  42b947:	mov    eax,0xf269ad5a
  42b94c:	sahf   
  42b94d:	jns    0x42b952
  42b94f:	repz push es
  42b951:	xor    DWORD PTR [edx-0x75],0xbd8b69e3
  42b958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b959:	sbb    BYTE PTR [ebx+esi*8],cl
  42b95c:	push   es
  42b95d:	jo     0x42b9d7
  42b95f:	test   ebx,0x70607a5
  42b965:	jmp    0xd98a276d
  42b96a:	push   ebx
  42b96b:	mov    esi,DWORD PTR [ebx+0x7f]
  42b96e:	cmc    
  42b96f:	mov    DWORD PTR [edi+0x477be3ab],ecx
  42b975:	in     eax,dx
  42b976:	mov    BYTE PTR [eax],al
  42b978:	add    BYTE PTR [eax],al
  42b97a:	aaa    
  42b97b:	ret    
  42b97c:	outs   dx,DWORD PTR ds:[esi]
  42b97d:	inc    eax
  42b97e:	xor    edx,DWORD PTR [edx-0x1c971ead]
  42b984:	adc    ebx,ebp
  42b986:	sbb    bh,BYTE PTR [edx]
  42b988:	or     dh,ah
  42b98a:	lods   al,BYTE PTR ds:[esi]
  42b98b:	out    dx,al
  42b98c:	xor    DWORD PTR [ebp+0x58],ecx
  42b98f:	jecxz  0x42b9d0
  42b991:	in     eax,0xf3
  42b993:	push   es
  42b994:	add    cl,ch
  42b996:	jnp    0x42b95d
  42b998:	shr    ecx,0xf0
  42b99b:	inc    esi
  42b99c:	dec    ecx
  42b99d:	pop    esp
  42b99e:	inc    esi
  42b99f:	enter  0xb984,0x21
  42b9a3:	loopne 0x42b99f
  42b9a5:	in     eax,dx
  42b9a6:	lock push es
  42b9a8:	add    BYTE PTR [edx+0x38],ah
  42b9ab:	mov    esi,gs
  42b9ad:	je     0x42ba19
  42b9af:	sar    ecx,cl
  42b9b1:	mov    esi,0x3fb4eb00
  42b9b6:	add    al,ah
  42b9b8:	shl    DWORD PTR [eax+esi*8],0x5
  42b9bc:	jg     0x42b9ca
  42b9be:	add    esp,ebx
  42b9c0:	test   DWORD PTR [edi+ebp*8],edx
  42b9c3:	fnsave [ecx-0x1f]
  42b9c6:	inc    esi
  42b9c7:	pop    es
  42b9c8:	sti    
  42b9c9:	pop    ss
  42b9ca:	jmp    0x42b9a9
  42b9cc:	adc    al,0xbd
  42b9ce:	cli    
  42b9cf:	inc    esi
  42b9d0:	add    BYTE PTR [edx-0x45],ch
  42b9d3:	push   cs
  42b9d4:	push   ebx
  42b9d5:	sbb    al,al
  42b9d7:	pop    eax
  42b9d8:	add    al,0x6e
  42b9da:	ficom  DWORD PTR [esi]
  42b9dc:	adc    ch,BYTE PTR [ecx-0x10000000]
  42b9e2:	popa   
  42b9e3:	(bad)  
  42b9e4:	in     eax,dx
  42b9e5:	jne    0x42ba3a
  42b9e7:	cld    
  42b9e8:	push   esi
  42b9e9:	les    edx,FWORD PTR [edi+ebp*1]
  42b9ec:	sub    DWORD PTR [edi],esi
  42b9ee:	mov    ds:0xc8b8cc86,al
  42b9f3:	inc    esp
  42b9f4:	out    dx,al
  42b9f5:	lock popa 
  42b9f7:	dec    ebp
  42b9f8:	xor    eax,0x115c8980
  42b9fd:	and    al,0xef
  42b9ff:	jmp    0xf1a4:0x85dd82f7
  42ba06:	out    dx,al
  42ba07:	rcl    DWORD PTR [edi-0x11],cl
  42ba0a:	push   es
  42ba0b:	mov    esi,0x873bf0e1
  42ba10:	add    dh,bh
  42ba12:	mov    esp,esi
  42ba14:	mov    BYTE PTR [edi+0x6],dl
  42ba17:	add    BYTE PTR [esi+0x65],dl
  42ba1a:	xchg   DWORD PTR [ebx-0xa2abf88],edi
  42ba20:	call   0x38b00f
  42ba25:	mov    eax,ds:0x3dfa929e
  42ba2a:	aad    0x62
  42ba2c:	mov    BYTE PTR [edi],dl
  42ba2e:	push   es
  42ba2f:	add    BYTE PTR [ebx+0x50004445],cl
  42ba35:	dec    ebp
  42ba36:	push   DWORD PTR [ebx]
  42ba38:	push   ss
  42ba39:	fimul  DWORD PTR [edx]
  42ba3b:	jnp    0x42ba01
  42ba3d:	push   ds
  42ba3e:	(bad)  
  42ba3f:	shl    DWORD PTR [eax+ecx*1+0x63],1
  42ba43:	sub    dh,BYTE PTR [ebx]
  42ba45:	add    BYTE PTR [eax],al
  42ba47:	add    BYTE PTR [edx-0x32a00f72],bl
  42ba4d:	jns    0x42ba09
  42ba4f:	pop    esi
  42ba50:	xchg   ebx,eax
  42ba51:	enter  0x2462,0xcb
  42ba55:	add    eax,0x36426800
  42ba5a:	cmp    eax,DWORD PTR [eax]
  42ba5c:	jb     0x42baaa
  42ba5e:	mov    dh,0x0
  42ba60:	retf   0xd318
  42ba63:	mov    DWORD PTR [edi-0x19ba741b],ebp
  42ba69:	xor    eax,0xfc3a15f7
  42ba6e:	aas    
  42ba6f:	add    BYTE PTR [edx-0x2c],bl
  42ba72:	adc    ecx,DWORD PTR [ecx+edi*4+0x45]
  42ba76:	add    BYTE PTR [ecx-0x3cce2ea9],cl
  42ba7c:	lea    ecx,[ecx+0x58a010a]
  42ba82:	cmp    DWORD PTR [ebp-0x4a],ebx
  42ba85:	push   edi
  42ba86:	cmp    eax,0x81d1978b
  42ba8b:	xor    al,0xf3
  42ba8d:	push   edi
  42ba8e:	mov    cl,dh
  42ba90:	out    0xc7,eax
  42ba92:	pop    esp
  42ba93:	dec    ah
  42ba95:	scas   eax,DWORD PTR es:[edi]
  42ba96:	jg     0x42bad7
  42ba98:	repz jns 0x42ba88
  42ba9b:	adc    al,0xc3
  42ba9d:	mov    esp,0x2f76003e
  42baa2:	js     0x42bab6
  42baa4:	and    WORD PTR [eax],cx
  42baa7:	lea    ebp,[esi+0x30dbc7]
  42baad:	add    BYTE PTR [eax],al
  42baaf:	mov    al,ds:0x3384f0b9
  42bab4:	cmp    cl,BYTE PTR [ecx]
  42bab6:	xchg   DWORD PTR [esi-0x79407d59],ebp
  42babc:	xlat   BYTE PTR ds:[ebx]
  42babd:	inc    ebx
  42babe:	aaa    
  42babf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bac0:	sub    DWORD PTR [edi-0x38],0x8
  42bac4:	in     al,dx
  42bac5:	jne    0x42bb0b
  42bac7:	adc    ebp,DWORD PTR [eax-0x2413238e]
  42bacd:	xchg   BYTE PTR ds:0x7c83ee33,cl
  42bad3:	shr    esi,cl
  42bad5:	inc    DWORD PTR [ebx-0x11168]
  42badb:	jo     0x42bac0
  42badd:	fdivp  st(2),st
  42badf:	hlt    
  42bae0:	jno    0x42ba91
  42bae2:	(bad)  
  42bae3:	mov    esp,0xe4ffb0ee
  42bae8:	in     eax,dx
  42bae9:	(bad)  
  42baea:	push   ecx
  42baeb:	fwait
  42baec:	xor    al,0xfb
  42baee:	stc    
  42baef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baf0:	gs in  al,dx
  42baf2:	mov    BYTE PTR [esi],bl
  42baf4:	push   ss
  42baf5:	cmp    edx,0xffffffe4
  42baf8:	jno    0x42ba81
  42bafa:	dec    DWORD PTR [esi+ebp*8-0x3c0c99a8]
  42bb01:	(bad)  
  42bb02:	div    DWORD PTR gs:[ebx+edx*2-0x5]
  42bb07:	inc    BYTE PTR [esi]
  42bb09:	or     ecx,esi
  42bb0b:	pop    es
  42bb0c:	xchg   edi,esi
  42bb0e:	inc    ebx
  42bb0f:	repz lea ebp,[ebx+0xcf]
  42bb16:	ja     0x42badf
  42bb18:	xchg   esp,eax
  42bb19:	inc    ebp
  42bb1a:	aam    0x69
  42bb1c:	add    eax,0x9236a104
  42bb21:	lock fist WORD PTR [esi]
  42bb24:	fild   DWORD PTR [ebx-0xd]
  42bb27:	and    DWORD PTR [eax+eax*1],0x6a
  42bb2b:	xor    BYTE PTR [ecx+esi*8-0x26921fd7],0x6d
  42bb33:	shl    BYTE PTR [ebx-0x7a],1
  42bb36:	sub    cl,ah
  42bb38:	leave  
  42bb39:	lock or al,0x19
  42bb3c:	cmp    esi,ecx
  42bb3e:	or     DWORD PTR [ebx+ebp*1-0x1d13f610],eax
  42bb45:	xor    al,0x33
  42bb47:	inc    edi
  42bb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb49:	jl     0x42bada
  42bb4b:	out    dx,al
  42bb4c:	gs ds out dx,eax
  42bb4f:	fild   QWORD PTR [ebp+0x6e]
  42bb52:	retf   
  42bb53:	fistp  WORD PTR [ebx]
  42bb55:	rcr    cl,1
  42bb57:	stc    
  42bb58:	xchg   esp,eax
  42bb59:	adc    esi,DWORD PTR [ebx]
  42bb5b:	pop    es
  42bb5c:	inc    ecx
  42bb5d:	xor    edi,ebx
  42bb5f:	push   es
  42bb60:	jmp    0xfd4deb8f
  42bb65:	(bad)  
  42bb66:	and    DWORD PTR [ebx+ecx*1-0x19c73304],ecx
  42bb6d:	add    esi,ebx
  42bb6f:	mov    WORD PTR [eax-0x24],es
  42bb72:	hlt    
  42bb73:	ss mov edx,0x4a0f27f0
  42bb79:	push   ss
  42bb7a:	add    BYTE PTR [eax],al
  42bb7c:	add    bl,ah
  42bb7e:	clc    
  42bb7f:	test   al,0x3
  42bb81:	or     al,0xcb
  42bb83:	in     al,dx
  42bb84:	mov    ah,0xf3
  42bb86:	aaa    
  42bb87:	add    BYTE PTR [ecx+0x5],al
  42bb8a:	adc    bh,dl
  42bb8c:	cs ins BYTE PTR es:[edi],dx
  42bb8e:	mov    eax,0x5a63f473
  42bb93:	loopne 0x42bbb3
  42bb95:	std    
  42bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb97:	or     eax,0x96f0a9
  42bb9c:	add    ch,dh
  42bb9e:	xor    al,al
  42bba0:	adc    DWORD PTR [esi],ecx
  42bba2:	mov    ds:0x32ee8ff,al
  42bba7:	add    BYTE PTR [ebx+0x6a895b94],bh
  42bbad:	sbb    esi,esi
  42bbaf:	loope  0x42bbdb
  42bbb1:	shl    BYTE PTR [esi+0x5],cl
  42bbb4:	adc    eax,0x9538c396
  42bbb9:	push   ebp
  42bbba:	ret    
  42bbbb:	sub    DWORD PTR [esi+0x4b],edx
  42bbbe:	outs   dx,BYTE PTR ds:[esi]
  42bbbf:	fiadd  WORD PTR [esi+eiz*1]
  42bbc2:	ins    BYTE PTR es:[edi],dx
  42bbc3:	cmc    
  42bbc4:	retf   0xea24
  42bbc7:	or     al,0x1c
  42bbc9:	sbb    al,0x5e
  42bbcb:	icebp  
  42bbcc:	inc    esi
  42bbcd:	aam    0x76
  42bbcf:	test   DWORD PTR [ebx],eax
  42bbd1:	adc    al,0x78
  42bbd3:	jp     0x42bbdd
  42bbd5:	xchg   ebx,eax
  42bbd6:	icebp  
  42bbd7:	add    DWORD PTR [ebx],edx
  42bbd9:	cs jns 0x42bb64
  42bbdc:	icebp  
  42bbdd:	adc    DWORD PTR [eax+edi*2+0x69],ecx
  42bbe4:	fwait
  42bbe5:	mov    ecx,0xeaa48b31
  42bbea:	or     al,0xbe
  42bbec:	mov    al,ds:0x15f4d983
  42bbf1:	ja     0x42bb73
  42bbf3:	or     DWORD PTR [esp+esi*8-0x3b],ecx
  42bbf7:	cli    
  42bbf8:	iret   
  42bbf9:	or     eax,0x802871ee
  42bbfe:	pop    edi
  42bbff:	jno    0x42bc05
  42bc01:	jb     0x42bc1e
  42bc03:	add    BYTE PTR [ebp+0x2e],cl
  42bc06:	ror    BYTE PTR [edx],1
  42bc08:	ss retf 
  42bc0a:	sbb    edx,DWORD PTR [esi+0x49]
  42bc0d:	cmp    eax,0xba7e8878
  42bc12:	gs pusha 
  42bc14:	mov    DWORD PTR [eax-0x334d1f2],ebp
  42bc1a:	(bad)
  42bc1e:	inc    ebx
  42bc1f:	pop    ecx
  42bc20:	lock push ecx
  42bc22:	mov    ah,0x2e
  42bc24:	(bad)  
  42bc25:	in     eax,0x65
  42bc27:	loop   0x42bbb5
  42bc29:	inc    edx
  42bc2a:	data16 cmc 
  42bc2c:	jecxz  0x42bcab
  42bc2e:	ss dec ecx
  42bc30:	ins    DWORD PTR es:[edi],dx
  42bc31:	or     BYTE PTR [edx+0x74],0x95
  42bc35:	test   al,0xce
  42bc37:	lds    ebp,FWORD PTR cs:[ebp-0x42]
  42bc3b:	cmc    
  42bc3c:	sbb    ecx,esp
  42bc3e:	and    dl,0xd9
  42bc41:	add    BYTE PTR [eax-0x6a42c7f6],dl
  42bc47:	lahf   
  42bc48:	add    BYTE PTR [eax],al
  42bc4a:	add    BYTE PTR [ebp-0x1],ch
  42bc4d:	dec    edx
  42bc4e:	jg     0x42bc04
  42bc50:	scas   al,BYTE PTR es:[edi]
  42bc51:	(bad)  
  42bc52:	cs mov ebp,0x846c4ff6
  42bc58:	sti    
  42bc59:	sbb    al,0x4e
  42bc5b:	sbb    DWORD PTR [esi],edi
  42bc5d:	shl    dl,0xb1
  42bc60:	outs   dx,DWORD PTR ds:[esi]
  42bc61:	addr16 cmc 
  42bc63:	mov    bh,0xfb
  42bc65:	data16 jle 0x42bc81
  42bc68:	xor    bl,BYTE PTR ds:0xc066194e
  42bc6e:	loop   0x42bbf8
  42bc70:	jmp    0x1ee3:0xbc69f565
  42bc77:	xor    al,0xc3
  42bc79:	(bad)
  42bc7d:	into   
  42bc7e:	cs repz or al,0xa3
  42bc82:	xchg   DWORD PTR [ecx],ebp
  42bc84:	fimul  WORD PTR [eax+0x66]
  42bc87:	nop
  42bc88:	adc    ah,dl
  42bc8a:	push   0x7e
  42bc8c:	cmp    DWORD PTR [esi-0x4c],edx
  42bc8f:	(bad)  
  42bc91:	imul   edi,DWORD PTR [eax+0x15],0xffffffc0
  42bc95:	shr    DWORD PTR [edx+0x7d],cl
  42bc98:	dec    esp
  42bc99:	inc    esi
  42bc9a:	jle    0x42bd08
  42bc9c:	shl    ch,1
  42bc9e:	jg     0x42bc59
  42bca0:	or     eax,0x84e84bd7
  42bca5:	sbb    ebx,eax
  42bca7:	scas   eax,DWORD PTR es:[edi]
  42bca8:	push   esp
  42bca9:	inc    ecx
  42bcaa:	and    DWORD PTR [esi],edi
  42bcac:	addr16 xchg esp,eax
  42bcae:	jns    0x42bcb0
  42bcb0:	add    BYTE PTR [eax],al
  42bcb2:	call   0x6d04d643
  42bcb7:	shl    ch,1
  42bcb9:	ror    ecx,cl
  42bcbb:	aam    0x83
  42bcbd:	pop    ds
  42bcbe:	mov    edx,0xd984d444
  42bcc3:	ds pop ebp
  42bcc5:	nop
  42bcc6:	push   0xffffff90
  42bcc8:	and    BYTE PTR ds:0x185d30bd,bl
  42bcce:	loope  0x42bcd4
  42bcd0:	pop    edi
  42bcd1:	in     eax,0x3
  42bcd3:	jl     0x42bcee
  42bcd5:	retf   
  42bcd6:	lahf   
  42bcd7:	jmp    0x42bc7b
  42bcd9:	je     0x42bd1f
  42bcdb:	mov    al,0x7
  42bcdd:	add    BYTE PTR [esi],bh
  42bcdf:	pop    ecx
  42bce0:	loopne 0x42bc62
  42bce2:	iret   
  42bce3:	inc    edx
  42bce4:	add    al,0x0
  42bce6:	repz and BYTE PTR [edx+0x53],dl
  42bcea:	pop    ecx
  42bceb:	sar    BYTE PTR [ecx+0x44],cl
  42bcee:	stos   DWORD PTR es:[edi],eax
  42bcef:	test   BYTE PTR [ebx-0x54],0x30
  42bcf3:	out    dx,al
  42bcf4:	das    
  42bcf5:	xlat   BYTE PTR ds:[ebx]
  42bcf6:	jne    0x42bce6
  42bcf8:	push   cs
  42bcf9:	add    bl,dh
  42bcfb:	push   es
  42bcfc:	mov    ecx,0x6fdf477a
  42bd01:	ja     0x42bca2
  42bd03:	fdiv   st(3),st
  42bd05:	xor    eax,DWORD PTR [ecx]
  42bd07:	inc    edi
  42bd08:	jmp    0x964e6d8d
  42bd0d:	push   ebp
  42bd0e:	xor    al,0x6f
  42bd10:	in     eax,0x3
  42bd12:	repz push cs
  42bd14:	fs inc edi
  42bd16:	add    BYTE PTR [eax],al
  42bd18:	add    BYTE PTR [ebx+0x31ecbf37],bl
  42bd1e:	inc    edx
  42bd1f:	or     DWORD PTR [ebx],eax
  42bd21:	repz push es
  42bd23:	jmp    0xf921c514
  42bd28:	inc    ebx
  42bd29:	repz (bad) 
  42bd2b:	adc    BYTE PTR [ebx-0x31],bh
  42bd2e:	sar    BYTE PTR [ebp-0x6d003f18],cl
  42bd34:	push   eax
  42bd35:	lods   al,BYTE PTR ds:[esi]
  42bd36:	jo     0x42bd23
  42bd38:	push   esp
  42bd39:	cmp    dl,dh
  42bd3b:	push   0x7006b313
  42bd40:	inc    esi
  42bd41:	sub    esp,DWORD PTR [eax]
  42bd43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd44:	jbe    0x42bd40
  42bd46:	mov    DWORD PTR [ebx-0x8],ebx
  42bd49:	or     al,0x8a
  42bd4b:	int    0xec
  42bd4d:	or     DWORD PTR [edx-0x7df307c5],ecx
  42bd53:	mov    ebp,0xa918f9ec
  42bd58:	dec    esp
  42bd59:	cdq    
  42bd5a:	aas    
  42bd5b:	mov    al,ds:0x6106f4c1
  42bd60:	cmp    esi,DWORD PTR [esi+0x46]
  42bd63:	jmp    0x1c4dfb93
  42bd68:	pop    es
  42bd69:	fwait
  42bd6a:	dec    esi
  42bd6b:	adc    al,0x44
  42bd6d:	repz sbb bl,BYTE PTR ss:[ebx+eiz*1-0x76]
  42bd73:	sub    BYTE PTR [esp+ebp*1],al
  42bd76:	mov    bh,bh
  42bd78:	imul   ebx,DWORD PTR [eax+eiz*8],0xfffffffa
  42bd7c:	outs   dx,BYTE PTR ds:[esi]
  42bd7d:	add    BYTE PTR [eax],al
  42bd7f:	add    BYTE PTR [eax+0x65],al
  42bd82:	sbb    al,al
  42bd84:	enter  0x3eb8,0x5f
  42bd88:	(bad)  
  42bd89:	pop    esp
  42bd8a:	(bad)  
  42bd8b:	std    
  42bd8c:	ins    DWORD PTR es:[edi],dx
  42bd8d:	fwait
  42bd8e:	je     0x42bdbb
  42bd90:	sub    al,BYTE PTR [edi-0x73]
  42bd93:	lods   al,BYTE PTR ds:[esi]
  42bd94:	pop    esp
  42bd95:	dec    esp
  42bd96:	push   eax
  42bd97:	push   ecx
  42bd98:	ja     0x42bdfb
  42bd9a:	add    cl,ch
  42bd9c:	ret    
  42bd9d:	(bad)  
  42bd9e:	mov    BYTE PTR [esp+edx*2-0x74ee8376],cl
  42bda5:	pop    esp
  42bda6:	(bad)  
  42bda7:	in     eax,dx
  42bda8:	jnp    0x42bd4e
  42bdaa:	mov    WORD PTR [esp+ecx*2+0x60a48d4b],gs
  42bdb1:	dec    ebx
  42bdb2:	dec    edi
  42bdb3:	call   0x4ba3:0xe86602aa
  42bdba:	lea    ebp,[esp+ebx*4-0x21]
  42bdbe:	cli    
  42bdbf:	out    dx,al
  42bdc0:	rcr    edi,0x74
  42bdc3:	icebp  
  42bdc4:	xor    DWORD PTR [edx-0x70],eax
  42bdc7:	and    eax,0xd60006f7
  42bdcc:	add    ch,BYTE PTR [edi]
  42bdce:	adc    DWORD PTR [ecx],ebp
  42bdd0:	test   DWORD PTR [ecx-0x75f7c341],0xd91fb574
  42bdda:	cmc    
  42bddb:	mov    dh,0x8
  42bddd:	cmp    DWORD PTR [esi-0x521a040],0xa6
  42bde7:	fcom   DWORD PTR [ebx-0x1c]
  42bdea:	ins    BYTE PTR es:[edi],dx
  42bdeb:	xor    dl,bl
  42bded:	dec    edi
  42bdee:	cmp    ebp,0x738efad1
  42bdf4:	call   0xe873:0xedaa0073
  42bdfb:	cmp    eax,0xa11d7f8
  42be00:	add    edi,DWORD PTR [ebx-0x8]
  42be03:	sbb    eax,0x9bb2fa57
  42be08:	in     eax,dx
  42be09:	jae    0x42bdef
  42be0b:	and    DWORD PTR [eax],ebx
  42be0d:	mov    al,ds:0xf7064a12
  42be12:	(bad)  
  42be13:	cmp    eax,0xe4ffe858
  42be18:	mov    ecx,0xbf0155b5
  42be1d:	or     DWORD PTR [ebp-0x6e],0x580ce683
  42be24:	push   es
  42be25:	add    BYTE PTR [ebx-0x5c],dl
  42be28:	xor    eax,0xd839c02b
  42be2d:	loop   0x42be67
  42be2f:	xchg   DWORD PTR [esi],eax
  42be31:	add    BYTE PTR [ebp-0x8dda8e6],al
  42be37:	call   0x73f6:0x4afffada
  42be3e:	adc    ecx,edx
  42be40:	fidivr DWORD PTR [ecx-0x7]
  42be43:	aas    
  42be44:	push   esp
  42be45:	add    al,BYTE PTR [ebp+0x3b046a44]
  42be4b:	add    BYTE PTR [eax],al
  42be4d:	add    BYTE PTR [eax+ebx*2],cl
  42be50:	cli    
  42be51:	mov    bh,BYTE PTR [edx]
  42be53:	pop    ecx
  42be54:	dec    esp
  42be55:	or     BYTE PTR [edx],dh
  42be57:	hlt    
  42be58:	inc    esp
  42be59:	add    BYTE PTR [edx],bl
  42be5b:	xchg   DWORD PTR [edx-0xf78af8b],edi
  42be61:	jne    0x42be69
  42be63:	adc    al,0xc0
  42be65:	jmp    0x42be8e
  42be67:	cmp    DWORD PTR [ebx+0xc],0xffffffda
  42be6b:	push   esi
  42be6c:	add    eax,0x740ebc83
  42be71:	icebp  
  42be72:	repz jo 0x42bee4
  42be75:	or     BYTE PTR [eax+0x9],bh
  42be78:	clc    
  42be79:	out    0x22,eax
  42be7b:	sub    eax,DWORD PTR [eax+eax*1]
  42be7e:	push   0x3fd67fa7
  42be83:	nop
  42be84:	ja     0x42be0a
  42be86:	stos   DWORD PTR es:[edi],eax
  42be87:	push   0xffffffe6
  42be89:	cli    
  42be8a:	inc    ebx
  42be8b:	mov    eax,0xf0338d5e
  42be90:	rol    BYTE PTR [esp+eiz*8-0x11],0xd6
  42be95:	or     bh,dl
  42be97:	out    dx,eax
  42be98:	inc    BYTE PTR [ebx+0x532d9bb3]
  42be9e:	and    BYTE PTR [ebx-0x80],ch
  42bea1:	div    DWORD PTR [esi+0x10]
  42bea4:	out    0x4f,al
  42bea6:	pop    ebx
  42bea7:	repnz std 
  42bea9:	push   ebx
  42beab:	imul   edi,DWORD PTR [edi+0x296d1673],0x1d
  42beb2:	add    BYTE PTR [eax],al
  42beb4:	add    ah,ah
  42beb6:	pop    ebx
  42beb7:	mov    edi,0x4f2f850a
  42bebc:	lea    ebp,[esi+0x7]
  42bebf:	call   0xd6c1fbbe
  42bec4:	sub    BYTE PTR ds:0xb687e8d0,dh
  42beca:	mov    eax,0xe22b8477
  42becf:	call   0x17fa82ce
  42bed4:	jb     0x42beeb
  42bed6:	mov    al,0x54
  42bed8:	call   0xfb2ba48d
  42bedd:	jns    0x42bf09
  42bedf:	stc    
  42bee0:	pop    edx
  42bee1:	popf   
  42bee2:	and    al,0xb7
  42bee4:	mov    ebp,0x8749efeb
  42bee9:	fild   QWORD PTR [edi-0x28]
  42beec:	repz repnz push es
  42beef:	jmp    0x13cefff7
  42bef4:	cld    
  42bef5:	jae    0x42bf50
  42bef7:	call   0xe949ba0e
  42befc:	push   eax
  42befd:	aas    
  42befe:	add    BYTE PTR [edi-0x179b343d],dh
  42bf04:	add    esi,ebx
  42bf06:	xchg   edi,eax
  42bf07:	mov    eax,0x11d8acfb
  42bf0c:	pop    esi
  42bf0d:	repz xor esp,DWORD PTR [edx+0xf]
  42bf11:	out    0xf0,eax
  42bf13:	test   al,0x3
  42bf15:	push   0x5c
  42bf17:	in     eax,dx
  42bf18:	jl     0x42bf1a
  42bf1a:	add    BYTE PTR [eax],al
  42bf1c:	xor    cl,BYTE PTR [esi]
  42bf1e:	data16 sar al,0x8d
  42bf22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf23:	imul   DWORD PTR [edi+0x41]
  42bf26:	in     al,dx
  42bf27:	push   ebx
  42bf28:	or     eax,0xb57691f2
  42bf2d:	neg    BYTE PTR [ebp-0x3f]
  42bf30:	dec    esp
  42bf31:	retf   0xe9a7
  42bf34:	pop    ecx
  42bf35:	mov    WORD PTR [edx-0x2abb95d0],fs
  42bf3b:	jl     0x42beef
  42bf3d:	sbb    esp,DWORD PTR [eax+0x45]
  42bf40:	mov    bl,0x89
  42bf42:	stos   BYTE PTR es:[edi],al
  42bf43:	inc    eax
  42bf44:	mov    ds:0x6648bd6c,eax
  42bf49:	dec    esp
  42bf4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf4b:	jl     0x42bf7e
  42bf4d:	out    dx,eax
  42bf4e:	cmp    BYTE PTR [ebx+0x29],al
  42bf51:	fsubr  DWORD PTR [ebp-0x7f]
  42bf54:	pop    ecx
  42bf55:	pop    es
  42bf56:	jmp    0x195d2b5e
  42bf5b:	adc    dh,BYTE PTR [ebx+0x30846006]
  42bf61:	pop    es
  42bf62:	jmp    0x6c39546a
  42bf67:	xor    DWORD PTR ds:0xf0e90007,0xa86a8d36
  42bf71:	xlat   BYTE PTR ds:[ebx]
  42bf72:	cli    
  42bf73:	jmp    0x6b159bb8
  42bf78:	xchg   esp,eax
  42bf79:	or     ebp,DWORD PTR [eax-0x15]
  42bf7c:	icebp  
  42bf7d:	push   es
  42bf7e:	add    BYTE PTR [eax+eax*1+0x0],bl
  42bf82:	add    BYTE PTR [edx-0x38],dh
  42bf85:	(bad)  
  42bf86:	call   0x6acff67b
  42bf8b:	test   al,0xd7
  42bf8d:	cli    
  42bf8e:	jmp    0x6b159bd3
  42bf93:	or     edi,DWORD PTR fs:[ebx+0x6f1ed]
  42bf9a:	push   0xe900b2b2
  42bf9f:	lock xor al,0x8d
  42bfa2:	bound  ebp,QWORD PTR [esi+eax*1-0x3b001700]
  42bfa9:	out    0xa1,eax
  42bfab:	xor    ebp,ebx
  42bfad:	cli    
  42bfae:	ins    BYTE PTR es:[edi],dx
  42bfaf:	xor    BYTE PTR [eax*4-0x523a467],cl
  42bfb6:	xchg   ebx,eax
  42bfb7:	icebp  
  42bfb8:	mov    DWORD PTR [ecx+edi*8+0x1fadc4a],esi
  42bfbf:	add    al,0x4c
  42bfc1:	sti    
  42bfc2:	push   cs
  42bfc3:	mov    ebp,0x6b30114f
  42bfc9:	sti    
  42bfca:	(bad)  
  42bfcb:	mov    ch,0x97
  42bfcd:	je     0x42bfa9
  42bfcf:	pop    ecx
  42bfd0:	in     eax,dx
  42bfd1:	add    cl,ch
  42bfd3:	lock jg 0x42bf97
  42bfd6:	scas   eax,DWORD PTR es:[edi]
  42bfd7:	test   DWORD PTR [esi],0xdda23040
  42bfdd:	call   0xfb1ed3ef
  42bfe2:	mov    al,BYTE PTR ss:[edx-0x42]
  42bfe6:	add    BYTE PTR [eax],al
  42bfe8:	add    BYTE PTR [eax],al
  42bfea:	ficomp DWORD PTR [ebp-0x56]
  42bfed:	clc    
  42bfee:	or     DWORD PTR [ebx],eax
  42bff0:	add    BYTE PTR [edx-0x26],ch
  42bff3:	mov    edx,eax
  42bff5:	push   DWORD PTR [edx-0x6a01c49d]
  42bffb:	mov    BYTE PTR [edx-0x175c2281],bh
  42c001:	add    edx,ebx
  42c003:	or     cl,BYTE PTR [ebp-0xa13357b]
  42c009:	dec    DWORD PTR [ebx+ecx*1+0x58034000]
  42c010:	stc    
  42c011:	jmp    0x38ad44
  42c016:	adc    DWORD PTR [eax-0x2a],ecx
  42c019:	mov    DWORD PTR [ecx],ecx
  42c01b:	rol    DWORD PTR [eax],cl
  42c01d:	add    BYTE PTR [edx+0x5f8d0830],cl
  42c023:	les    ecx,FWORD PTR [edx-0x73]
  42c026:	sbb    DWORD PTR [ebx],ecx
  42c028:	(bad)  
  42c029:	dec    DWORD PTR [edx+0x7a15f73a]
  42c02f:	add    al,0x40
  42c031:	add    cl,bl
  42c033:	mov    BYTE PTR [esi],0xb9
  42c036:	and    al,0xc
  42c038:	add    BYTE PTR [eax],al
  42c03a:	out    0x87,eax
  42c03c:	or     bh,dh
  42c03e:	cmc    
  42c03f:	in     eax,dx
  42c040:	rol    BYTE PTR [eax],0x5a
  42c043:	dec    edx
  42c044:	dec    ecx
  42c045:	jne    0x42c02a
  42c047:	push   ecx
  42c048:	je     0x42c052
  42c04a:	(bad)  
  42c04b:	push   esp
  42c04c:	in     al,0x5
  42c04e:	add    BYTE PTR [eax],al
  42c050:	add    BYTE PTR [edx+0xa],cl
  42c053:	push   eax
  42c054:	lea    edx,[ecx+0x1afffdf6]
  42c05a:	push   ecx
  42c05b:	mov    esi,0xf64a86e8
  42c060:	dec    DWORD PTR [edi-0xc7afa37]
  42c066:	and    esp,0xfffffffa
  42c069:	add    al,0x69
  42c06b:	jge    0x42c069
  42c06d:	hlt    
  42c06e:	(bad)  
  42c070:	mov    BYTE PTR [eax-0x4c],dh
  42c073:	idiv   bh
  42c075:	in     al,dx
  42c076:	dec    edi
  42c077:	add    al,0x5b
  42c079:	inc    ebp
  42c07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c07b:	rol    BYTE PTR [ebx],0xf3
  42c07e:	adc    dh,BYTE PTR [edi-0x15]
  42c081:	inc    eax
  42c082:	mov    cl,0xc5
  42c084:	push   ecx
  42c085:	and    al,0xb8
  42c087:	pop    es
  42c088:	mov    al,ds:0x750420ae
  42c08d:	or     eax,0x30c4c74e
  42c092:	loopne 0x42c0e0
  42c094:	sti    
  42c095:	push   es
  42c096:	mov    WORD PTR [eax],ss
  42c098:	inc    eax
  42c099:	repz xchg edi,eax
  42c09b:	pop    es
  42c09c:	mov    al,ds:0x74fea0b6
  42c0a1:	add    BYTE PTR [edi+0x8],dl
  42c0a4:	js     0x42c05c
  42c0a6:	mov    al,ds:0x8be688fe
  42c0ab:	mov    edi,0x25f33e
  42c0b0:	mov    al,ds:0xfea0ae
  42c0b5:	add    BYTE PTR [eax],al
  42c0b7:	add    ch,al
  42c0b9:	sbb    al,0x10
  42c0bb:	lock add DWORD PTR [eax-0x28497902],esp
  42c0c2:	adc    eax,0x36badfbf
  42c0c7:	dec    eax
  42c0c8:	mov    edi,0xa7e77436
  42c0ce:	push   0x10
  42c0d0:	stos   DWORD PTR es:[edi],eax
  42c0d1:	fdivr  QWORD PTR [edi-0x3c]
  42c0d4:	repz (bad) 
  42c0d7:	mov    edx,0x3eb543
  42c0dc:	cdq    
  42c0dd:	retf   
  42c0de:	aad    0x1d
  42c0e0:	pop    esp
  42c0e1:	push   es
  42c0e2:	test   eax,0x4f06b30e
  42c0e7:	pop    ds
  42c0e8:	adc    al,0xef
  42c0ea:	xchg   ecx,eax
  42c0eb:	in     al,0xe2
  42c0ed:	inc    esi
  42c0ee:	jmp    0xd9248c4c
  42c0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0f4:	inc    esp
  42c0f5:	cld    
  42c0f6:	sub    BYTE PTR [edx*2-0x5602420d],al
  42c0fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0fe:	rol    BYTE PTR [ebx-0xd],cl
  42c101:	pusha  
  42c102:	jmp    DWORD PTR [edx+0x425ca5c]
  42c108:	sub    DWORD PTR [eax],edx
  42c10a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c10b:	outs   dx,DWORD PTR ds:[esi]
  42c10c:	adc    al,0x5f
  42c10e:	jmp    0x8249f47e
  42c113:	bt     ecx,edi
  42c116:	sub    BYTE PTR [esp+eiz*8],al
  42c119:	(bad)  
  42c11a:	cld    
  42c11b:	add    al,0x0
  42c11d:	add    BYTE PTR [eax],al
  42c11f:	sbb    ebx,DWORD PTR [edi+0x5c]
  42c122:	inc    esp
  42c123:	repz bound ecx,QWORD PTR ss:[edi]
  42c127:	push   edi
  42c128:	stc    
  42c129:	test   al,0x3
  42c12b:	ins    BYTE PTR es:[edi],dx
  42c12c:	dec    edi
  42c12d:	sub    al,0x41
  42c12f:	repz (bad) 
  42c132:	outs   dx,DWORD PTR ds:[esi]
  42c133:	call   0x5627f1bf
  42c138:	dec    edi
  42c139:	and    al,0x41
  42c13b:	repz fucomip st,st(3)
  42c13e:	mov    ds:0x3a5c9dc,al
  42c143:	fmul   st(6),st
  42c145:	and    DWORD PTR [eax-0x4e],esi
  42c148:	(bad)  
  42c14a:	jo     0x42c15a
  42c14c:	and    BYTE PTR [ebx-0x7ec85c05],0x3
  42c153:	jecxz  0x42c15b
  42c155:	jmp    0x63f9f9a6
  42c15a:	les    esp,FWORD PTR [edi-0x4b9dffb9]
  42c160:	inc    BYTE PTR [esi+0x46c249c]
  42c166:	call   0x402ac85b
  42c16b:	(bad)  
  42c16c:	sar    dl,1
  42c16e:	(bad)  
  42c16f:	xchg   ebp,eax
  42c170:	inc    BYTE PTR [esi+0x73fb17d9]
  42c176:	fbstp  TBYTE PTR [eax+0x5dba3706]
  42c17c:	sub    edi,ebx
  42c17e:	cmp    al,0xeb
  42c180:	rcl    BYTE PTR [ebp*1+0x2000000],1
  42c187:	inc    edi
  42c188:	add    BYTE PTR [ecx-0xf],bl
  42c18b:	jmp    0x42c1a5
  42c18d:	sahf   
  42c18e:	pop    ebp
  42c18f:	add    eax,DWORD PTR [ecx+0x16f0a7]
  42c195:	jmp    0x1a9505bd
  42c19a:	into   
  42c19b:	cli    
  42c19c:	dec    edi
  42c19d:	fidiv  DWORD PTR [eax]
  42c19f:	pop    es
  42c1a0:	test   DWORD PTR [ecx-0x56d24635],ebp
  42c1a6:	aaa    
  42c1a7:	xor    DWORD PTR [edi-0x3c],edx
  42c1aa:	mov    dl,0xb
  42c1ac:	add    BYTE PTR [ebx+ecx*1+0xd6a50e0],dh
  42c1b3:	idiv   edi
  42c1b5:	aam    0x85
  42c1b7:	mov    WORD PTR [ecx+ebx*8+0x16],es
  42c1bb:	push   esp
  42c1bc:	cmp    BYTE PTR [ebp-0x5380f523],bl
  42c1c2:	add    ch,dl
  42c1c4:	dec    ebp
  42c1c5:	xchg   edi,eax
  42c1c6:	fistp  DWORD PTR [edx+0x8]
  42c1c9:	mov    esi,0x650ad5d5
  42c1ce:	das    
  42c1cf:	sar    edx,cl
  42c1d1:	jmp    0x14f04a1
  42c1d6:	gs or  eax,0x4eed00fa
  42c1dc:	repz sub DWORD PTR ds:0x68405e7,0x8
  42c1e4:	add    BYTE PTR [eax],al
  42c1e6:	loope  0x42c1bb
  42c1e8:	(bad)  
  42c1e9:	inc    DWORD PTR [eax]
  42c1eb:	add    BYTE PTR [eax],al
  42c1ed:	or     dh,ah
  42c1ef:	repnz setns BYTE PTR [edi-0x7be50006]
  42c1f7:	dec    ebx
  42c1f8:	adc    BYTE PTR [edx],dh
  42c1fa:	jne    0x42c234
  42c1fc:	(bad)  
  42c1fd:	sub    eax,0x59fc4381
  42c202:	mov    bl,0xf5
  42c204:	orps   xmm7,XMMWORD PTR [edx-0x6]
  42c208:	dec    edx
  42c20a:	icebp  
  42c20b:	mov    edx,0xfaa2490f
  42c210:	(bad)  
  42c211:	fidivr DWORD PTR [edi-0xb]
  42c214:	jne    0x42c1e8
  42c216:	jg     0x42c1d2
  42c218:	orps   xmm0,XMMWORD PTR [esi+0x7fcafffa]
  42c21f:	mov    edx,0x74f1c075
  42c224:	or     al,0xa6
  42c226:	fmul   QWORD PTR [ebx+0x500c4d44]
  42c22c:	push   DWORD PTR [edi-0x7800b1fe]
  42c232:	test   BYTE PTR ds:0xbe899a40,0xc
  42c239:	inc    esp
  42c23a:	in     eax,0x13
  42c23c:	jl     0x42c1d7
  42c23e:	inc    esi
  42c23f:	add    BYTE PTR [ebx+0x3e3ee31c],cl
  42c245:	sbb    al,0xe6
  42c247:	mov    eax,DWORD PTR [esp+edx*4]
  42c24a:	loope  0x42c2b5
  42c24c:	test   DWORD PTR ds:0x8b4d2f,ecx
  42c252:	add    BYTE PTR [eax],al
  42c254:	lahf   
  42c255:	add    cl,BYTE PTR [ebp+0x68b8f334]
  42c25b:	jg     0x42c21c
  42c25d:	mov    cl,0xe0
  42c25f:	pop    ebx
  42c260:	in     al,0x32
  42c262:	dec    ecx
  42c263:	or     esp,eax
  42c265:	pop    ds
  42c266:	sbb    al,0x45
  42c268:	hlt    
  42c269:	call   0xab3381e5
  42c26e:	(bad)  
  42c270:	sub    eax,0xbf6ec325
  42c275:	es push ecx
  42c277:	or     BYTE PTR [edi-0x17],bh
  42c27a:	cmp    BYTE PTR [ecx-0x4],dl
  42c27d:	cmp    cl,BYTE PTR [ebx+edi*8]
  42c280:	fmulp  st(7),st
  42c282:	clc    
  42c283:	aas    
  42c284:	repz pop esp
  42c286:	ret    
  42c287:	or     esi,edx
  42c289:	adc    cl,BYTE PTR [eax+eax*4]
  42c28c:	pop    esi
  42c28d:	mov    cl,0xfe
  42c28f:	jae    0x42c277
  42c291:	push   esp
  42c292:	push   eax
  42c293:	or     BYTE PTR [eax+0x2a],dh
  42c296:	or     al,0xfe
  42c298:	pop    edx
  42c299:	sbb    al,0x3c
  42c29b:	bound  ebp,QWORD PTR [edx-0x22]
  42c29e:	mov    DWORD PTR [ebx+ebp*8+0x54],esi
  42c2a2:	dec    eax
  42c2a3:	cld    
  42c2a4:	jle    0x42c2d1
  42c2a6:	add    al,0xfe
  42c2a8:	xor    al,0x59
  42c2aa:	pop    eax
  42c2ab:	adc    BYTE PTR [ebp+0x61],al
  42c2ae:	clc    
  42c2af:	das    
  42c2b0:	std    
  42c2b1:	lahf   
  42c2b2:	(bad)  
  42c2b3:	jle    0x42c26c
  42c2b5:	jecxz  0x42c2ef
  42c2b7:	sti    
  42c2b8:	add    BYTE PTR [eax],al
  42c2ba:	add    dh,bl
  42c2bc:	mov    ebx,0x64f33ff1
  42c2c1:	leave  
  42c2c2:	out    0xf1,al
  42c2c4:	int3   
  42c2c5:	mov    esi,0xcba4cd5a
  42c2ca:	mov    ebp,0x418fdff7
  42c2cf:	out    dx,eax
  42c2d0:	outs   dx,DWORD PTR ds:[esi]
  42c2d1:	fst    QWORD PTR [edi+ebx*2]
  42c2d4:	push   es
  42c2d5:	test   DWORD PTR [ebx-0xd],0xf28c2915
  42c2dc:	jg     0x42c288
  42c2de:	pop    es
  42c2df:	push   0x48
  42c2e1:	loope  0x42c271
  42c2e3:	xor    al,ch
  42c2e5:	call   0xebe2:0xb5d6743a
  42c2ec:	adc    BYTE PTR [ebx-0xc],bh
  42c2ef:	jne    0x42c339
  42c2f1:	in     eax,0xe2
  42c2f3:	loopne 0x42c283
  42c2f5:	loope  0x42c2ee
  42c2f7:	ins    BYTE PTR es:[edi],dx
  42c2f8:	hlt    
  42c2f9:	sub    BYTE PTR [eax+esi*4],al
  42c2fc:	or     eax,0xd1085613
  42c301:	push   edx
  42c302:	or     BYTE PTR [ebx],cl
  42c304:	adc    ebx,ebp
  42c306:	loope  0x42c2f1
  42c308:	test   BYTE PTR [edx-0x242fbef0],ah
  42c30e:	jmp    0x42c2fe
  42c310:	inc    esi
  42c311:	jmp    0x3806fc56
  42c316:	xor    eax,0x8f987c21
  42c31b:	xor    al,BYTE PTR [ebx]
  42c31d:	cmp    DWORD PTR [ebx+0x30000000],ecx
  42c323:	sub    ebx,ebp
  42c325:	loopne 0x42c306
  42c327:	loop   0x42c2ff
  42c329:	inc    ebx
  42c32a:	repz adc ebx,DWORD PTR [esi-0x400b6e5]
  42c331:	aaa    
  42c332:	inc    esi
  42c333:	adc    al,0x7c
  42c335:	sbb    edi,ecx
  42c337:	pop    eax
  42c338:	and    al,0x39
  42c33a:	je     0x42c385
  42c33c:	in     eax,0x8c
  42c33e:	xchg   DWORD PTR [esp+edx*1-0x1ab8364],eax
  42c345:	ins    DWORD PTR es:[edi],dx
  42c346:	repz iret 
  42c348:	cld    
  42c349:	fwait
  42c34a:	imul   edi,edx,0x724f4d8
  42c350:	add    BYTE PTR [edi+esi*1-0x77],ch
  42c354:	inc    ecx
  42c355:	in     eax,0xbd
  42c357:	add    bl,bh
  42c359:	(bad)  [eax-0x33]
  42c35c:	adc    al,0x49
  42c35e:	cmp    eax,0xa9620010
  42c363:	or     bh,BYTE PTR [edi-0x3b]
  42c366:	pop    eax
  42c367:	shl    ch,1
  42c369:	out    dx,al
  42c36a:	jg     0x42c368
  42c36c:	mov    bh,0x70
  42c36e:	add    ebp,DWORD PTR [edi+0x3e]
  42c371:	lods   al,BYTE PTR ds:[esi]
  42c372:	call   FWORD PTR [esi+ebp*2]
  42c375:	and    al,0xb2
  42c377:	jge    0x42c392
  42c379:	jb     0x42c3ba
  42c37b:	(bad)  
  42c37c:	loopne 0x42c369
  42c37e:	outs   dx,DWORD PTR ds:[esi]
  42c37f:	mov    BYTE PTR [ebx],0xc1
  42c382:	test   DWORD PTR [ecx],0xcefa
  42c388:	add    BYTE PTR [ebp-0xf28c35],dh
  42c38e:	retf   
  42c38f:	adc    al,0xb9
  42c391:	fimul  WORD PTR [edi]
  42c393:	add    BYTE PTR [edi],dl
  42c395:	push   ds
  42c396:	cs mov edi,0x50db6614
  42c39c:	cmp    BYTE PTR [esi],al
  42c39e:	add    BYTE PTR [edx-0x13],0xa
  42c3a2:	aaa    
  42c3a3:	mov    DWORD PTR [edi+ebx*4],ebp
  42c3a6:	int3   
  42c3a7:	adc    al,0x7d
  42c3a9:	mov    esi,0x6fba000f
  42c3ae:	push   cs
  42c3af:	pop    ebx
  42c3b0:	icebp  
  42c3b1:	add    ecx,DWORD PTR [edx+0x6f0e989]
  42c3b7:	cmp    DWORD PTR [ebx+eax*1],ecx
  42c3ba:	cld    
  42c3bb:	sub    DWORD PTR [eax+esi*8+0x6],0x0
  42c3c0:	jb     0x42c3a5
  42c3c2:	xor    DWORD PTR [edx-0x13],0xe58cfb6d
  42c3c9:	lock push es
  42c3cb:	add    BYTE PTR [eax],al
  42c3cd:	jecxz  0x42c407
  42c3cf:	cld    
  42c3d0:	call   0x38cb47
  42c3d5:	into   
  42c3d6:	ret    
  42c3d7:	outs   dx,BYTE PTR ds:[esi]
  42c3d8:	ins    DWORD PTR es:[edi],dx
  42c3d9:	jns    0x42c43c
  42c3db:	add    al,0xff
  42c3dd:	outs   dx,DWORD PTR ds:[esi]
  42c3de:	shl    ebp,cl
  42c3e0:	jne    0x42c438
  42c3e2:	out    0x73,al
  42c3e4:	or     BYTE PTR [ecx-0x1a],bh
  42c3e7:	adc    edx,DWORD PTR [eax+0x38]
  42c3ea:	inc    ebx
  42c3eb:	add    BYTE PTR [ebx+0x2a000000],cl
  42c3f1:	jmp    0x42c3dd
  42c3f3:	je     0x42c45f
  42c3f5:	in     al,dx
  42c3f6:	pop    esp
  42c3f7:	adc    al,0x9e
  42c3f9:	icebp  
  42c3fa:	popa   
  42c3fb:	add    bh,BYTE PTR [ecx+0x1a]
  42c3fe:	div    DWORD PTR [ebp+0xe]
  42c401:	pop    ebp
  42c402:	not    DWORD PTR [esi-0x60]
  42c405:	scas   eax,DWORD PTR es:[edi]
  42c406:	cmc    
  42c407:	adc    eax,0x3ad46e
  42c40c:	(bad)
  42c410:	mov    ch,0xd0
  42c412:	adc    dl,BYTE PTR [ecx]
  42c414:	sbb    al,BYTE PTR [ebx]
  42c416:	push   eax
  42c417:	push   esi
  42c418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c419:	ror    BYTE PTR [esi+0x12],1
  42c41c:	or     al,BYTE PTR [ebx]
  42c41e:	dec    esi
  42c41f:	dec    edi
  42c421:	stos   BYTE PTR es:[edi],al
  42c422:	or     al,0x40
  42c424:	fiadd  DWORD PTR [ecx-0x192074fb]
  42c42a:	mov    edi,0x58e2c8e1
  42c42f:	add    al,0x74
  42c431:	scas   al,BYTE PTR es:[edi]
  42c432:	loope  0x42c449
  42c434:	and    DWORD PTR [esi],eax
  42c436:	or     DWORD PTR [ebp+0x26],0xffffff82
  42c43a:	pop    es
  42c43b:	mov    DWORD PTR [esi-0x7d],ebx
  42c43e:	cmc    
  42c43f:	pop    es
  42c440:	dec    esp
  42c441:	lods   eax,DWORD PTR ds:[esi]
  42c442:	adc    ebx,eax
  42c444:	mov    ecx,DWORD PTR [edx+0x0]
  42c447:	mov    bl,0xf3
  42c449:	fcompp 
  42c44b:	je     0x42c4c8
  42c44d:	cmp    eax,0xa001eff9
  42c452:	(bad)  
  42c453:	pop    ecx
  42c454:	add    BYTE PTR [eax],al
  42c456:	add    BYTE PTR [ecx+0x21],bh
  42c459:	aaa    
  42c45a:	leave  
  42c45b:	xor    DWORD PTR [eax+0x68c050fe],esi
  42c461:	add    esp,ebp
  42c463:	loope  0x42c404
  42c465:	(bad)  
  42c466:	push   esp
  42c467:	pushf  
  42c468:	pop    edx
  42c469:	pop    edx
  42c46a:	or     al,0xa4
  42c46c:	hlt    
  42c46d:	scas   al,BYTE PTR es:[edi]
  42c46e:	cli    
  42c46f:	lods   eax,DWORD PTR ds:[esi]
  42c470:	out    0x31,eax
  42c472:	sti    
  42c473:	push   es
  42c474:	shl    al,1
  42c476:	aas    
  42c477:	pause  
  42c479:	out    dx,eax
  42c47a:	shl    DWORD PTR [edi-0x25fef645],0x8d
  42c481:	push   esp
  42c482:	xor    BYTE PTR [eax-0x22],bh
  42c485:	and    eax,0x3ee870c5
  42c48a:	outs   dx,BYTE PTR ds:[esi]
  42c48b:	lock dec ecx
  42c48d:	inc    esp
  42c48e:	pop    eax
  42c48f:	push   0xec6607ee
  42c494:	cmp    DWORD PTR ds:0x3376f78d,eax
  42c49a:	push   eax
  42c49b:	fsubr  QWORD PTR [edx-0x1fccf26e]
  42c4a1:	xchg   DWORD PTR [edi-0x3b8228ba],edi
  42c4a7:	xor    ebp,ecx
  42c4a9:	sub    al,0x6e
  42c4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c4ac:	mov    BYTE PTR [edi],al
  42c4ae:	ret    0xc42f
  42c4b1:	or     DWORD PTR [eax],eax
  42c4b3:	inc    esp
  42c4b4:	test   DWORD PTR [ebp+0x31d835fa],ebp
  42c4ba:	sti    
  42c4bb:	add    BYTE PTR [eax],al
  42c4bd:	add    BYTE PTR [esi],al
  42c4bf:	push   eax
  42c4c0:	icebp  
  42c4c1:	aas    
  42c4c2:	repz imul eax,DWORD PTR [ebx+0x24],0x40c206fc
  42c4ca:	sbb    al,0x30
  42c4cc:	cmp    BYTE PTR es:[edx+ebx*8+0x67],dh
  42c4d1:	out    dx,eax
  42c4d2:	adc    al,0x3
  42c4d4:	jmp    0xa3c480dc
  42c4d9:	or     eax,ecx
  42c4db:	xor    eax,0x466f83d1
  42c4e0:	jmp    0x84c62b17
  42c4e5:	fimul  DWORD PTR [ecx-0x33]
  42c4e8:	mov    eax,0x3cde438a
  42c4ed:	fistp  QWORD PTR [ecx]
  42c4ef:	int    0x6b
  42c4f1:	ret    
  42c4f2:	mov    edi,0xcb027efe
  42c4f7:	fistp  WORD PTR [esp+eax*1-0x7793f90d]
  42c4fe:	dec    eax
  42c4ff:	retf   
  42c500:	icebp  
  42c501:	frstor [ebx+edi*2-0x32fa589d]
  42c508:	loope  0x42c53e
  42c50a:	or     bl,dh
  42c50c:	jo     0x42c501
  42c50e:	mov    esp,0xeb476006
  42c513:	mov    eax,edx
  42c515:	frstor [edi+0x3]
  42c518:	dec    edi
  42c519:	or     ah,cl
  42c51b:	mov    cl,0xf5
  42c51d:	fsubr  QWORD PTR [edi-0x7e]
  42c520:	nop
  42c521:	fild   WORD PTR [eax]
  42c523:	add    BYTE PTR [eax],al
  42c525:	fxch   st(4)
  42c527:	shr    dl,0xcd
  42c52a:	int3   
  42c52b:	call   0x643f49b7
  42c530:	mov    eax,0x88e8ccbc
  42c535:	jmp    0x839b:0x878ee77f
  42c53c:	(bad)  [ecx-0x1322e9c7]
  42c542:	cmp    edi,0x7eff3ba8
  42c548:	jno    0x42c53a
  42c54a:	fnsave [edi-0xdf90f17]
  42c550:	fs inc ebx
  42c552:	retf   
  42c553:	cli    
  42c554:	push   esi
  42c555:	jg     0x42c558
  42c557:	test   BYTE PTR [ebp-0x9],ah
  42c55a:	push   es
  42c55b:	add    BYTE PTR [edi],bh
  42c55d:	lods   eax,DWORD PTR ds:[esi]
  42c55e:	(bad)  
  42c55f:	std    
  42c560:	mov    ah,0x13
  42c562:	jp     0x42c4e8
  42c564:	adc    DWORD PTR [ecx+edx*8],esi
  42c567:	cli    
  42c568:	cdq    
  42c569:	pop    eax
  42c56a:	(bad)  
  42c56c:	call   0x96024861
  42c571:	inc    ebx
  42c572:	test   DWORD PTR [ecx],ecx
  42c574:	(bad)  
  42c575:	lock jns 0x42c50c
  42c578:	cmp    eax,0x9bfad14c
  42c57d:	jecxz  0x42c54e
  42c57f:	dec    edi
  42c580:	in     eax,0x75
  42c582:	mov    WORD PTR [ebx+ebp*1+0x3d],?
  42c586:	inc    esi
  42c587:	or     al,ch
  42c589:	add    BYTE PTR [eax],al
  42c58b:	add    BYTE PTR [eax+edx*2-0x34b79373],ah
  42c592:	cli    
  42c593:	faddp  st(0),st
  42c595:	cmp    ecx,DWORD PTR [ebp-0x52ab394]
  42c59b:	into   
  42c59c:	and    bh,bl
  42c59e:	xor    ch,al
  42c5a0:	(bad)  
  42c5a1:	rol    BYTE PTR [ecx+ebp*4-0x1599fdbb],1
  42c5a8:	pop    ss
  42c5a9:	in     al,0x19
  42c5ab:	pop    esp
  42c5ac:	jne    0x42c555
  42c5ae:	mul    BYTE PTR [esi-0x5078c459]
  42c5b4:	enter  0xfaf4,0x96
  42c5b8:	xchg   edi,eax
  42c5b9:	test   bh,dh
  42c5bb:	fs iret 
  42c5bd:	push   edi
  42c5be:	dec    ebp
  42c5bf:	add    BYTE PTR [ecx],bl
  42c5c1:	stos   DWORD PTR es:[edi],eax
  42c5c2:	push   DWORD PTR [ebx-0x11]
  42c5c5:	test   ebp,esi
  42c5c7:	add    dl,BYTE PTR [esi+0x110e835f]
  42c5cd:	or     DWORD PTR [edi-0x73],ecx
  42c5d0:	pop    es
  42c5d1:	pushf  
  42c5d2:	sti    
  42c5d3:	call   FWORD PTR ds:0x3aff4b16
  42c5d9:	(bad)  
  42c5da:	jp     0x42c5d4
  42c5dc:	pop    ecx
  42c5dd:	xor    esi,DWORD PTR [eax-0xa55ca17]
  42c5e3:	jmp    DWORD PTR [edx+eax*2]
  42c5e6:	or     BYTE PTR [esi+edx*4],al
  42c5e9:	lea    eax,es:[ebp-0xa531e]
  42c5f0:	add    BYTE PTR [eax],al
  42c5f2:	add    BYTE PTR [edx+0x4a0067df],cl
  42c5f8:	pop    es
  42c5f9:	test   al,al
  42c5fb:	push   esi
  42c5fc:	(bad)  
  42c5fd:	or     DWORD PTR [esi],0x958d0891
  42c603:	mov    esi,0x78fff5ac
  42c608:	push   ss
  42c609:	not    DWORD PTR [eax+0x6]
  42c60c:	test   BYTE PTR [edx-0x7c83df8b],bh
  42c612:	lods   al,BYTE PTR ds:[esi]
  42c613:	imul   esi,ebp
  42c616:	push   eax
  42c617:	sbb    eax,0xf7ff0835
  42c61c:	push   esi
  42c61d:	adc    BYTE PTR [eax-0x26],al
  42c620:	xchg   DWORD PTR [edx-0x8fba8f1],edi
  42c626:	call   FWORD PTR [ebp-0x6cccfe26]
  42c62c:	xor    dl,0x2
  42c62f:	lods   eax,DWORD PTR ds:[esi]
  42c630:	push   edi
  42c631:	ror    BYTE PTR [ebp+0x15f70413],0xf2
  42c638:	sar    DWORD PTR [edx],cl
  42c63a:	add    bl,dh
  42c63c:	fs aam 0x84
  42c63f:	lods   al,BYTE PTR ds:[esi]
  42c640:	repz or edi,DWORD PTR [edi-0x5b]
  42c644:	scas   al,BYTE PTR es:[edi]
  42c645:	dec    edx
  42c646:	dec    DWORD PTR [edx]
  42c648:	in     al,0x35
  42c64a:	sti    
  42c64b:	push   ds
  42c64c:	call   0xafc1db26
  42c651:	add    BYTE PTR ds:0x23f161,bl
  42c658:	add    BYTE PTR [eax],al
  42c65a:	loope  0x42c5fb
  42c65c:	inc    BYTE PTR [esi+0x573891ac]
  42c662:	cmp    bl,BYTE PTR [esi]
  42c664:	add    BYTE PTR [eax],al
  42c666:	mov    esp,0xdf38d5cc
  42c66b:	add    ecx,DWORD PTR [esi*2-0x19413211]
  42c672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c673:	fs ds adc al,0x18
  42c677:	sbb    DWORD PTR [eax+0x4c],edx
  42c67a:	stos   DWORD PTR es:[edi],eax
  42c67b:	jae    0x42c697
  42c67d:	dec    eax
  42c67e:	mov    esi,0x37a1d00
  42c683:	jb     0x42c671
  42c685:	xchg   BYTE PTR [ebp+0x5b33d5d3],ch
  42c68b:	leave  
  42c68c:	dec    edx
  42c68d:	and    al,0xe7
  42c68f:	shr    bh,1
  42c691:	imul   esp,eax,0xffffff9f
  42c694:	inc    BYTE PTR [ebx+esi*1-0x47bcd6d5]
  42c69b:	sub    esp,esi
  42c69d:	ins    DWORD PTR es:[edi],dx
  42c69e:	or     eax,0x3586c8c5
  42c6a3:	lods   al,BYTE PTR ds:[esi]
  42c6a4:	mov    esi,DWORD PTR [edi-0x9]
  42c6a7:	mov    ah,0x5
  42c6a9:	push   eax
  42c6aa:	fcom   QWORD PTR [ebx]
  42c6ac:	and    BYTE PTR [esp+edx*8],cl
  42c6af:	stos   BYTE PTR es:[edi],al
  42c6b0:	bound  ecx,QWORD PTR [edi]
  42c6b2:	xor    esp,eax
  42c6b4:	jg     0x42c675
  42c6b6:	ds pop es
  42c6b8:	repz mov ?,WORD PTR [edx]
  42c6bb:	sti    
  42c6bc:	nop
  42c6bd:	inc    edx
  42c6be:	add    BYTE PTR [eax],al
  42c6c0:	add    BYTE PTR [ebp-0x4fe16e37],bl
  42c6c6:	push   ebx
  42c6c7:	test   dh,ch
  42c6c9:	pop    ebx
  42c6ca:	xchg   esi,eax
  42c6cb:	out    0x3a,eax
  42c6cd:	pop    ebp
  42c6ce:	add    ch,cl
  42c6d0:	xor    BYTE PTR [edx+ebx*8+0x15],ch
  42c6d4:	xor    bl,ah
  42c6d6:	lods   eax,DWORD PTR ds:[esi]
  42c6d7:	adc    eax,0xe906736c
  42c6dc:	add    edx,DWORD PTR ds:0xf26db605
  42c6e2:	pop    esi
  42c6e3:	jmp    0x4a89b9eb
  42c6e8:	push   eax
  42c6e9:	sti    
  42c6ea:	leave  
  42c6eb:	fist   DWORD PTR [ebx]
  42c6ed:	in     eax,dx
  42c6ee:	inc    esi
  42c6ef:	jmp    0x32c80b82
  42c6f4:	fcmovb st,st(0)
  42c6f6:	adc    al,dh
  42c6f8:	cmp    bh,dh
  42c6fa:	push   edx
  42c6fb:	(bad)  
  42c6fc:	sbb    al,0x9e
  42c6fe:	not    BYTE PTR [ecx+esi*8-0xc54845b]
  42c705:	mov    esp,0x29f393c9
  42c70a:	push   ebx
  42c70b:	cmc    
  42c70c:	xor    DWORD PTR [eax],ebx
  42c70e:	repz mov esp,0x6c06d4f5
  42c714:	ret    
  42c715:	add    BYTE PTR [esi+esi*1],0x4
  42c719:	mov    eax,ds:0xeea3fbc9
  42c71e:	inc    esi
  42c71f:	jmp    0x5d49c4a7
  42c724:	or     al,0x0
  42c726:	add    BYTE PTR [eax],al
  42c728:	call   0x62ea87f
  42c72d:	pop    ecx
  42c72e:	ret    
  42c72f:	fnstcw WORD PTR [edx]
  42c731:	jge    0x42c6d8
  42c733:	cmp    eax,0xe4ffc536
  42c738:	lock xor DWORD PTR [edi+0x533600bd],eax
  42c73f:	ficomp DWORD PTR [ebx-0x11ecaccb]
  42c745:	xor    esp,DWORD PTR [esi-0x18]
  42c748:	sbb    BYTE PTR [edi],al
  42c74a:	add    cl,ch
  42c74c:	jo     0x42c71b
  42c74e:	je     0x42c741
  42c750:	mov    ebx,0x30db2ff3
  42c755:	pop    es
  42c756:	mov    DWORD PTR [edi],ebp
  42c758:	inc    DWORD PTR [edi-0x8]
  42c75b:	outs   dx,BYTE PTR ds:[esi]
  42c75c:	and    edx,DWORD PTR [edi-0x73]
  42c75f:	mov    ah,0x98
  42c761:	aaa    
  42c762:	push   eax
  42c763:	pop    esi
  42c764:	test   BYTE PTR [eax],ah
  42c766:	push   cs
  42c767:	test   eax,0xd5bf81f0
  42c76c:	sub    BYTE PTR [esi],cl
  42c76e:	jge    0x42c7b5
  42c770:	lods   al,BYTE PTR ds:[esi]
  42c771:	aaa    
  42c772:	xchg   DWORD PTR [eax+edi*1-0x1012be81],esp
  42c779:	ret    
  42c77a:	je     0x42c761
  42c77c:	jns    0x42c78c
  42c77e:	out    0xda,eax
  42c780:	into   
  42c781:	add    ch,BYTE PTR [eax-0x17]
  42c784:	loopne 0x42c78c
  42c786:	add    BYTE PTR [ecx+0x514cbe3],bh
  42c78c:	add    BYTE PTR [eax],al
  42c78e:	add    BYTE PTR [eax],ah
  42c790:	or     BYTE PTR [eax],al
  42c792:	jo     0x42c785
  42c794:	movnti DWORD PTR [ebp+0x0],esi
  42c798:	xor    al,0x8d
  42c79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c79b:	clc    
  42c79c:	xor    eax,0x380477fb
  42c7a1:	sti    
  42c7a2:	pop    edi
  42c7a3:	out    dx,eax
  42c7a4:	retf   
  42c7a5:	adc    al,0x15
  42c7a7:	std    
  42c7a8:	pop    es
  42c7a9:	add    BYTE PTR [eax+esi*4+0x53],ch
  42c7ad:	or     al,0x62
  42c7af:	and    eax,0xc0036ff
  42c7b4:	pop    es
  42c7b5:	jne    0x42c7bb
  42c7b7:	pop    edx
  42c7b8:	add    eax,0x33219e3
  42c7bd:	add    BYTE PTR [eax],0xda
  42c7c0:	push   ss
  42c7c1:	div    DWORD PTR [esi]
  42c7c3:	xchg   ebp,eax
  42c7c4:	fcomp  st(2)
  42c7c6:	adc    DWORD PTR [edx],ecx
  42c7c8:	add    esi,edi
  42c7ca:	jbe    0x42c75e
  42c7cc:	scas   al,BYTE PTR es:[edi]
  42c7cd:	adc    esp,DWORD PTR [eax+0x320043a8]
  42c7d3:	dec    edx
  42c7d4:	push   cs
  42c7d5:	leave  
  42c7d6:	ret    0x38e
  42c7d9:	dec    esi
  42c7da:	mov    ecx,DWORD PTR [edx]
  42c7dc:	jnp    0x42c7de
  42c7de:	test   DWORD PTR [edx+0x37],ebx
  42c7e1:	push   es
  42c7e2:	push   0xfffa838a
  42c7e7:	mov    al,ds:0x6fff5003
  42c7ec:	jecxz  0x42c7fd
  42c7ee:	inc    eax
  42c7ef:	pop    edx
  42c7f0:	jp     0x42c862
  42c7f2:	or     BYTE PTR [eax],al
  42c7f4:	add    BYTE PTR [eax],al
  42c7f6:	iret   
  42c7f7:	mov    ch,0x6e
  42c7f9:	pop    es
  42c7fa:	jl     0x42c7aa
  42c7fc:	adc    esp,DWORD PTR [eax+0x5e004328]
  42c802:	sbb    DWORD PTR [ecx],ebx
  42c804:	sub    esp,0xffffffcb
  42c807:	fisttp WORD PTR [edx]
  42c809:	add    al,0x4a
  42c80b:	add    ecx,DWORD PTR [ebx+0x56]
  42c80e:	ins    DWORD PTR es:[edi],dx
  42c80f:	add    BYTE PTR [ebx-0xa50fe10],0x50
  42c816:	xor    BYTE PTR [ebp-0x51f50006],0x13
  42c81d:	sbb    BYTE PTR [ecx],ch
  42c81f:	inc    ebx
  42c820:	add    BYTE PTR [eax+0x57],cl
  42c823:	mov    eax,0x380afffa
  42c828:	ins    BYTE PTR es:[edi],dx
  42c829:	xor    ebx,DWORD PTR [edi+ebp*4]
  42c82c:	jae    0x42c836
  42c82e:	repz (bad) 
  42c830:	mov    esi,0x33d5e4a8
  42c835:	push   0x443b53
  42c83a:	dec    ebx
  42c83b:	sub    al,0x89
  42c83d:	aas    
  42c83e:	repz cmp BYTE PTR [eax],al
  42c841:	add    ebx,esi
  42c843:	scas   eax,DWORD PTR es:[edi]
  42c844:	xchg   DWORD PTR [ebx+edi*4-0x34052d95],edi
  42c84b:	lods   eax,DWORD PTR ds:[esi]
  42c84c:	aas    
  42c84d:	cli    
  42c84e:	lods   al,BYTE PTR ds:[esi]
  42c84f:	xor    eax,eax
  42c851:	pshufw mm3,QWORD PTR [eax+0x38dc73d2],0xbb
  42c859:	dec    edi
  42c85a:	add    BYTE PTR [eax],al
  42c85c:	add    BYTE PTR [esi+0x2b],ah
  42c85f:	aam    0xf6
  42c861:	mov    WORD PTR ds:0xe3fefb34,?
  42c867:	out    0x7d,al
  42c869:	jp     0x42c898
  42c86b:	rol    DWORD PTR [ebx+esi*4-0xc99e124],cl
  42c872:	(bad)  
  42c873:	jle    0x42c874
  42c875:	fs mov al,0x68
  42c878:	add    ecx,ecx
  42c87a:	scas   eax,DWORD PTR es:[edi]
  42c87b:	push   0xfeafcb01
  42c880:	push   DWORD PTR [ebx]
  42c882:	std    
  42c883:	push   eax
  42c884:	or     al,0x44
  42c886:	fisttp DWORD PTR [esi]
  42c888:	push   cs
  42c889:	mov    bl,0xaf
  42c88b:	jge    0x42c884
  42c88d:	xor    al,0x9b
  42c88f:	lock inc ecx
  42c891:	jb     0x42c8b1
  42c893:	int3   
  42c894:	jmp    DWORD PTR [eax+esi*4]
  42c897:	push   eax
  42c898:	xchg   edx,eax
  42c899:	loope  0x42c88a
  42c89b:	xor    bl,BYTE PTR [edx-0x48]
  42c89e:	idiv   BYTE PTR [ebp-0x2e600cf9]
  42c8a4:	adc    al,0x53
  42c8a6:	loop   0x42c8e6
  42c8a8:	add    BYTE PTR [ebx+0x7],al
  42c8ab:	call   0x6e9ed39a
  42c8b0:	out    0x73,eax
  42c8b2:	mov    dl,0xf8
  42c8b4:	jmp    esp
  42c8b6:	lds    esi,FWORD PTR ds:0x6b94402e
  42c8bc:	rcr    ebp,cl
  42c8be:	lds    edi,FWORD PTR [ecx+0x33]
  42c8c4:	pop    ebx
  42c8c5:	mov    ebp,0xc5f303e8
  42c8ca:	sar    ebx,cl
  42c8cc:	in     eax,dx
  42c8cd:	inc    esi
  42c8ce:	jmp    0xe8febf1e
  42c8d3:	add    esi,ebx
  42c8d5:	cmp    eax,0xaea1133c
  42c8da:	enter  0x99ac,0xc5
  42c8de:	sbb    BYTE PTR [ebx+edx*1-0x6c],ch
  42c8e2:	sub    BYTE PTR [ebx+ebx*1],al
  42c8e5:	lahf   
  42c8e6:	arpl   WORD PTR [ebx-0xd],ax
  42c8e9:	and    esp,0x7406f304
  42c8ef:	cwde   
  42c8f0:	jl     0x42c8b5
  42c8f2:	pop    ecx
  42c8f3:	(bad)  
  42c8f4:	push   esp
  42c8f5:	sub    ch,BYTE PTR [ebp+0x248969d5]
  42c8fb:	pop    es
  42c8fc:	fdivr  QWORD PTR [esi-0x6df3b0bf]
  42c902:	and    DWORD PTR [ebx],esi
  42c904:	jle    0x42c891
  42c906:	cmp    dl,bl
  42c908:	dec    ecx
  42c909:	lds    ebx,FWORD PTR [eax+0x110ec7d6]
  42c90f:	mov    dh,0x3c
  42c911:	lds    ebx,FWORD PTR [ecx]
  42c913:	sub    BYTE PTR [edx+edi*1-0x1e],0x69
  42c918:	repz lds edx,FWORD PTR [ebx+0x251b180b]
  42c91f:	hlt    
  42c920:	aam    0x6
  42c922:	fs ret 
  42c924:	xchg   DWORD PTR ds:0xaf00,edx
  42c92a:	add    BYTE PTR [ecx-0x41],dh
  42c92d:	arpl   WORD PTR [ebx+0x4b],di
  42c930:	repz mov edi,0xc95dbd46
  42c936:	stos   DWORD PTR es:[edi],eax
  42c937:	repz push es
  42c939:	mov    al,0xe8
  42c93b:	fstp   TBYTE PTR [ebx+0x2043a984]
  42c941:	bound  ebp,QWORD PTR [edx-0x9]
  42c944:	lock je 0x42c927
  42c947:	div    DWORD PTR [edi+0x47]
  42c94a:	jmp    0x42c972
  42c94c:	mov    cl,al
  42c94e:	xor    eax,0xd7f943eb
  42c953:	and    eax,0x4f6a620c
  42c958:	or     eax,DWORD PTR [eax]
  42c95a:	sbb    al,0xf3
  42c95c:	repz mov edi,0xbff5b229
  42c962:	stos   BYTE PTR es:[edi],al
  42c963:	loop   0x42c9be
  42c965:	xchg   DWORD PTR ds:0x1e5212d3,ecx
  42c96b:	aam    0xf4
  42c96d:	(bad)  
  42c96e:	outs   dx,BYTE PTR ds:[esi]
  42c96f:	mov    WORD PTR [edi+ecx*1],gs
  42c972:	test   eax,0x64ef8bf0
  42c977:	cmp    eax,0x3461fe3b
  42c97c:	adc    DWORD PTR [ebx+0x5bbc73e7],esi
  42c982:	mov    ebp,0xef843ea
  42c987:	mov    ds:0x2f6c6209,eax
  42c98c:	cmp    ebp,DWORD PTR [edx+eiz*2]
  42c98f:	add    BYTE PTR [eax],al
  42c991:	add    BYTE PTR [edi],bl
  42c993:	cmc    
  42c994:	mov    edi,0x18d96bc
  42c999:	push   ds
  42c99a:	sbb    al,0xfc
  42c99c:	or     eax,0xf843f0a9
  42c9a1:	push   cs
  42c9a2:	lods   al,BYTE PTR ds:[esi]
  42c9a3:	adc    DWORD PTR [esi+0x0],esp
  42c9a6:	or     dh,ch
  42c9a8:	not    BYTE PTR ds:0x3ab7ee
  42c9ae:	xchg   edi,eax
  42c9af:	retf   0x2e1
  42c9b2:	mov    dl,0xba
  42c9b4:	outs   dx,BYTE PTR ds:[esi]
  42c9b5:	shld   DWORD PTR [ebx-0xa],eax,0x74
  42c9ba:	loop   0x42ca1d
  42c9bc:	mov    DWORD PTR [esi],edi
  42c9be:	pop    ecx
  42c9bf:	cmp    ah,0xea
  42c9c2:	outs   dx,DWORD PTR ds:[esi]
  42c9c3:	xchg   esi,eax
  42c9c4:	call   FWORD PTR [esi+0xc]
  42c9c7:	cld    
  42c9c8:	add    ebx,0xfffec911
  42c9ce:	out    0x8d,eax
  42c9d0:	out    0x83,al
  42c9d2:	mov    dh,0xdf
  42c9d4:	jg     0x42c9c2
  42c9d6:	xor    al,BYTE PTR [edi]
  42c9d8:	add    BYTE PTR [eax],al
  42c9da:	in     al,0xf1
  42c9dc:	or     BYTE PTR [bx],0x48
  42c9e0:	add    BYTE PTR [ebx+0x448cf283],cl
  42c9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9e7:	mov    bh,0x4a
  42c9e9:	call   0x38a98c
  42c9ee:	pop    ss
  42c9ef:	enter  0x7a6e,0x1f
  42c9f3:	inc    esp
  42c9f4:	pop    ds
  42c9f5:	adc    BYTE PTR [eax],al
  42c9f7:	add    BYTE PTR [eax],al
  42c9f9:	mov    BYTE PTR [edi],al
  42c9fb:	add    BYTE PTR [eax-0x21],dl
  42c9fe:	add    esp,DWORD PTR [esp+ecx*1]
  42ca01:	stos   BYTE PTR es:[edi],al
  42ca02:	ficom  DWORD PTR [ebx]
  42ca04:	mov    BYTE PTR [ebx+0x47],bl
  42ca07:	add    BYTE PTR [ebx-0x778e6],cl
  42ca0d:	xchg   BYTE PTR [edi],ah
  42ca0f:	lea    eax,[esi+esi*8+0x4afffa1e]
  42ca16:	scas   eax,DWORD PTR es:[edi]
  42ca17:	daa    
  42ca18:	dec    DWORD PTR ds:0x87c07edb
  42ca1e:	adc    DWORD PTR [ebp+0x12d1f384],ecx
  42ca24:	(bad)  
  42ca25:	sbb    al,0xad
  42ca27:	cs push ebx
  42ca29:	data16 jno 0x42ca46
  42ca2c:	adc    BYTE PTR [ebx+0x4f2c815],ah
  42ca32:	mov    esp,0xd487bf7c
  42ca37:	int3   
  42ca38:	or     edi,0xffffffbd
  42ca3b:	add    al,0x0
  42ca3d:	repz mov edi,0xec760752
  42ca43:	daa    
  42ca44:	or     bl,cl
  42ca46:	sub    bh,cl
  42ca48:	cli    
  42ca49:	aam    0xd5
  42ca4b:	stc    
  42ca4c:	mov    WORD PTR [edi],?
  42ca4e:	or     al,0xfc
  42ca50:	dec    edi
  42ca51:	fcmovnbe st,st(7)
  42ca53:	pop    ecx
  42ca54:	cli    
  42ca55:	mov    esp,0xe3238863
  42ca5a:	lods   eax,DWORD PTR ds:[esi]
  42ca5b:	(bad)  
  42ca5c:	inc    DWORD PTR [eax]
  42ca5e:	add    BYTE PTR [eax],al
  42ca60:	inc    ebx
  42ca61:	cli    
  42ca62:	into   
  42ca63:	adc    al,0x83
  42ca65:	mov    edi,0x7076003e
  42ca6a:	pop    eax
  42ca6b:	mov    ds:0x8bf8893d,eax
  42ca70:	loop   0x42ca61
  42ca72:	add    ebp,DWORD PTR [eax+0x73]
  42ca75:	mov    al,0xfe
  42ca77:	jmp    DWORD PTR [ecx+esi*1]
  42ca7a:	stc    
  42ca7b:	psraw  mm5,QWORD PTR [edi-0x2]
  42ca7f:	push   edx
  42ca80:	ins    BYTE PTR es:[edi],dx
  42ca81:	mov    ebx,0xafb310d6
  42ca86:	xchg   DWORD PTR [edi-0x40881f44],edi
  42ca8c:	mov    ch,0x34
  42ca8e:	jmp    0x4877faef
  42ca93:	and    al,0xfb
  42ca95:	test   al,0x9d
  42ca97:	inc    ebx
  42ca98:	pop    ss
  42ca99:	in     al,0x2e
  42ca9b:	call   0xd165d1c4
  42caa0:	sub    esi,eax
  42caa2:	sbb    DWORD PTR [eax-0x31],ebx
  42caa5:	push   cs
  42caa6:	add    ecx,ebp
  42caa8:	sbb    al,ah
  42caaa:	or     edi,eax
  42caac:	mov    es,WORD PTR [edx]
  42caae:	(bad)  
  42caaf:	sti    
  42cab0:	or     esp,edi
  42cab2:	or     BYTE PTR [edi-0x70df93b],bl
  42cab8:	lock adc eax,0xc76e03a9
  42cabe:	pop    esp
  42cabf:	stc    
  42cac0:	mov    cl,0x46
  42cac2:	or     DWORD PTR [eax+0x0],esp
  42cac5:	add    BYTE PTR [eax],al
  42cac7:	xchg   ebx,eax
  42cac8:	inc    esp
  42cac9:	jmp    0x4d2de798
  42cace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cacf:	push   ss
  42cad0:	pop    es
  42cad1:	stos   BYTE PTR es:[edi],al
  42cad2:	inc    ebx
  42cad3:	sbb    ecx,DWORD PTR [esi]
  42cad5:	jmp    0x5e08bddd
  42cada:	or     DWORD PTR [esi-0x3a],esi
  42cadd:	xor    al,0x29
  42cadf:	ins    BYTE PTR es:[edi],dx
  42cae0:	push   eax
  42cae1:	in     eax,dx
  42cae2:	cmp    al,0x27
  42cae4:	push   cs
  42cae5:	xor    BYTE PTR [ecx-0x7],bl
  42cae8:	push   esi
  42cae9:	sub    DWORD PTR [esi+0x1d],0xf2dee907
  42caf0:	push   esi
  42caf1:	xchg   ecx,eax
  42caf2:	xchg   BYTE PTR [ebx],dl
  42caf4:	pop    es
  42caf5:	jmp    0x5af18dcc
  42cafa:	sar    DWORD PTR [edi-0x3f],1
  42cafd:	gs sub ebx,esi
  42cb00:	test   edx,ecx
  42cb02:	pop    es
  42cb03:	repz lds esi,FWORD PTR [ebx+0x4485587e]
  42cb0a:	(bad)  
  42cb0b:	(bad)  [ebx]
  42cb0d:	push   ebp
  42cb0e:	add    edx,esp
  42cb10:	sub    eax,DWORD PTR [ecx+0x3]
  42cb13:	mov    eax,ds:0x4ccb6e59
  42cb18:	xchg   ebp,eax
  42cb19:	push   DWORD PTR ds:0x3986bc21
  42cb1f:	imul   esi,DWORD PTR [edi-0x1314c8d],0x67
  42cb26:	push   ecx
  42cb27:	jae    0x42cb2a
  42cb29:	add    BYTE PTR [ebx+0x47000000],al
  42cb2f:	push   edi
  42cb30:	call   0x497f66
  42cb35:	ins    BYTE PTR es:[edi],dx
  42cb36:	xor    BYTE PTR [edx],bh
  42cb38:	xor    DWORD PTR [edx-0x45],esi
  42cb3b:	push   cs
  42cb3c:	mov    edi,ebp
  42cb3e:	jge    0x42cb8a
  42cb40:	or     al,0x60
  42cb42:	stos   BYTE PTR es:[edi],al
  42cb43:	or     al,BYTE PTR [edi+0x418fe72c]
  42cb49:	in     eax,dx
  42cb4a:	addr16 add eax,0x8e1aed66
  42cb50:	je     0x42cb27
  42cb52:	stos   BYTE PTR es:[edi],al
  42cb53:	dec    ebx
  42cb54:	clc    
  42cb55:	jmp    0x42cb47
  42cb57:	push   es
  42cb58:	add    BYTE PTR [eax+0x39],dh
  42cb5b:	pop    ss
  42cb5c:	call   0x4a1cc6
  42cb61:	bound  esi,QWORD PTR [ecx]
  42cb63:	sbb    ecx,DWORD PTR [ecx-0x1947d00a]
  42cb69:	lock jmp 0x65bd:0xac9722ae
  42cb71:	(bad)  
  42cb72:	loop   0x42cb05
  42cb74:	je     0x42cbf3
  42cb76:	scas   eax,DWORD PTR es:[edi]
  42cb77:	(bad)  
  42cb78:	sti    
  42cb79:	jle    0x42cb1d
  42cb7b:	mov    edx,eax
  42cb7d:	push   ss
  42cb7e:	ror    ebp,0xbd
  42cb81:	(bad)  
  42cb83:	pop    ecx
  42cb84:	xchg   DWORD PTR [ebp+0x76],edx
  42cb87:	lods   al,BYTE PTR ds:[esi]
  42cb88:	pop    ss
  42cb89:	mov    edx,0xba51d7ff
  42cb8e:	daa    
  42cb8f:	push   eax
  42cb90:	xchg   DWORD PTR [esi],esp
  42cb92:	add    BYTE PTR [eax],al
  42cb94:	add    al,bl
  42cb96:	pop    esp
  42cb97:	and    BYTE PTR [eax],al
  42cb99:	ret    
  42cb9a:	cmc    
  42cb9b:	and    ecx,DWORD PTR [ecx-0x3317e39b]
  42cba1:	sub    al,0xd6
  42cba3:	cmc    
  42cba4:	test   BYTE PTR [edx],cl
  42cba6:	push   es
  42cba7:	test   BYTE PTR [eax+0x5700041a],bh
  42cbad:	xchg   edi,eax
  42cbae:	push   edi
  42cbaf:	call   0xf671229c
  42cbb4:	dec    DWORD PTR [esi-0x427bfa36]
  42cbba:	or     al,BYTE PTR [eax]
  42cbbc:	add    BYTE PTR [ebx+0x6789efef],al
  42cbc2:	fsub   st,st(1)
  42cbc4:	add    bh,BYTE PTR [ecx]
  42cbc6:	jae    0x42cc2c
  42cbc8:	add    eax,0x50f84967
  42cbcd:	sbb    eax,0xc466b6e3
  42cbd2:	(bad)  
  42cbd3:	xor    ebx,eax
  42cbd5:	mov    ch,0x87
  42cbd7:	add    DWORD PTR [eax],0xffffffda
  42cbda:	add    edi,DWORD PTR [ebx-0x8]
  42cbdd:	iret   
  42cbde:	pop    eax
  42cbdf:	pop    edx
  42cbe0:	mov    ecx,DWORD PTR [edi]
  42cbe2:	shr    DWORD PTR [ecx],cl
  42cbe4:	inc    edi
  42cbe5:	mov    ds:0xca184641,al
  42cbea:	add    ah,bh
  42cbec:	xor    edi,DWORD PTR [edx+eax*2-0x2d]
  42cbf0:	add    esp,edi
  42cbf2:	fiadd  DWORD PTR [edi+0x73ba8245]
  42cbf8:	hlt    
  42cbf9:	add    BYTE PTR [eax],al
  42cbfb:	add    BYTE PTR [ecx],bl
  42cbfd:	retf   
  42cbfe:	add    eax,DWORD PTR [ebx+0x7533035c]
  42cc04:	jbe    0x42cc64
  42cc06:	cmp    al,0x72
  42cc08:	(bad)  
  42cc09:	adc    bl,BYTE PTR [ebp-0x18]
  42cc0c:	dec    ebp
  42cc0d:	sbb    BYTE PTR ds:0xfa635a00,bh
  42cc13:	jbe    0x42cc08
  42cc15:	pop    es
  42cc16:	pop    edx
  42cc17:	add    BYTE PTR [ebp+0x5bc27b7c],bh
  42cc1d:	pushf  
  42cc1e:	push   0xbf2944fa
  42cc23:	jae    0x42cbd5
  42cc25:	sub    al,0x48
  42cc27:	and    dl,dh
  42cc29:	es sub dh,al
  42cc2c:	jp     0x42cbd0
  42cc2e:	sar    BYTE PTR [esi-0x44],cl
  42cc31:	leave  
  42cc32:	(bad)  
  42cc33:	icebp  
  42cc34:	mov    dh,0x19
  42cc36:	(bad)  
  42cc37:	je     0x42cbbc
  42cc39:	sub    al,0x4a
  42cc3b:	clc    
  42cc3c:	repz aas 
  42cc3e:	jge    0x42cc3a
  42cc40:	lods   al,BYTE PTR ds:[esi]
  42cc41:	aad    0xdb
  42cc43:	test   al,al
  42cc45:	adc    al,0x34
  42cc47:	sti    
  42cc48:	jle    0x42cc03
  42cc4a:	jbe    0x42cc0e
  42cc4c:	in     al,dx
  42cc4d:	pop    ebx
  42cc4e:	aam    0xe7
  42cc50:	adc    eax,DWORD PTR [esi-0x36]
  42cc53:	cli    
  42cc54:	ja     0x42ccc6
  42cc56:	push   edi
  42cc57:	adc    ah,dl
  42cc59:	adc    eax,0xe23b14cb
  42cc5e:	add    BYTE PTR ds:[eax],al
  42cc61:	add    BYTE PTR [eax],al
  42cc63:	outs   dx,BYTE PTR ds:[esi]
  42cc64:	jo     0x42ccbd
  42cc66:	add    al,0x83
  42cc68:	scas   eax,DWORD PTR es:[edi]
  42cc69:	aad    0xfd
  42cc6b:	add    dh,BYTE PTR [eax+0x29]
  42cc6e:	push   edi
  42cc6f:	mov    edx,0x3c523471
  42cc74:	sbb    dl,BYTE PTR [eax+ebp*8]
  42cc77:	hlt    
  42cc78:	xchg   edx,eax
  42cc79:	sar    dl,1
  42cc7b:	outs   dx,BYTE PTR ds:[esi]
  42cc7c:	jo     0x42ccd5
  42cc7e:	sbb    bh,BYTE PTR [eax-0xc]
  42cc81:	daa    
  42cc82:	adc    al,0x70
  42cc84:	mov    eax,0xa82b7ec9
  42cc89:	leave  
  42cc8a:	jle    0x42ccb7
  42cc8c:	fmul   st(1),st
  42cc8e:	jle    0x42cc63
  42cc90:	push   es
  42cc91:	stc    
  42cc92:	add    esp,esp
  42cc94:	es cmc 
  42cc96:	add    ebp,DWORD PTR [edx+0x4f]
  42cc99:	icebp  
  42cc9a:	jp     0x42cce0
  42cc9c:	mov    dl,0xe6
  42cc9e:	adc    al,BYTE PTR [ecx-0x7c]
  42cca1:	cmp    bl,BYTE PTR [ecx-0x11]
  42cca4:	stc    
  42cca5:	sub    bl,bl
  42cca7:	out    0x91,al
  42cca9:	lods   al,BYTE PTR ds:[esi]
  42ccaa:	daa    
  42ccab:	jecxz  0x42cc3e
  42ccad:	sub    bh,BYTE PTR [ebp-0xe]
  42ccb0:	scas   al,BYTE PTR es:[edi]
  42ccb1:	ds into 
  42ccb3:	sub    DWORD PTR [esi+0x5a7c464],edi
  42ccb9:	add    DWORD PTR [esi],esi
  42ccbb:	mov    ebp,0x10db09bd
  42ccc0:	xchg   edx,eax
  42ccc1:	sub    ch,BYTE PTR [edi]
  42ccc3:	test   eax,0xfc275f
  42ccc8:	add    BYTE PTR [eax],al
  42ccca:	cld    
  42cccb:	push   edx
  42cccc:	pop    esi
  42cccd:	loopne 0x42cd44
  42cccf:	stos   BYTE PTR es:[edi],al
  42ccd0:	shl    BYTE PTR [edx],1
  42ccd2:	inc    ecx
  42ccd3:	mov    WORD PTR [ebx],gs
  42ccd5:	add    BYTE PTR [ebx-0x42],al
  42ccd8:	push   ebx
  42ccd9:	add    BYTE PTR [edx+eiz*8],cl
  42ccdc:	xor    eax,0xc10f5fcf
  42cce1:	cmp    DWORD PTR [ebx],ecx
  42cce3:	pop    es
  42cce4:	jmp    0xfe51fc65
  42cce9:	ret    0x82e9
  42ccec:	mov    eax,DWORD PTR [ebx]
  42ccee:	repz push es
  42ccf0:	aas    
  42ccf1:	add    bh,BYTE PTR [edx+ebx*2]
  42ccf4:	outs   dx,BYTE PTR ds:[esi]
  42ccf5:	(bad)  
  42ccf6:	mov    WORD PTR [esi-0x7d6631fd],es
  42ccfc:	test   al,0xfe
  42ccfe:	jo     0x42cc90
  42cd00:	call   0x7498c008
  42cd05:	pop    eax
  42cd06:	fwait
  42cd07:	scas   al,BYTE PTR es:[edi]
  42cd08:	retf   
  42cd09:	push   0x6cffbd79
  42cd0e:	mov    al,0x39
  42cd10:	jge    0x42cd74
  42cd12:	mov    ch,0x1e
  42cd14:	das    
  42cd15:	lods   al,BYTE PTR ds:[esi]
  42cd16:	push   0x611d3484
  42cd1b:	std    
  42cd1c:	call   FWORD PTR [edi-0x55]
  42cd1f:	mov    dl,0x85
  42cd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd22:	pop    eax
  42cd23:	dec    esp
  42cd24:	mov    BYTE PTR [eax+edi*1+0x3d448a],ch
  42cd2b:	and    eax,0x6405
  42cd30:	add    BYTE PTR [ebx+0x52e4fb2],ch
  42cd36:	ret    0x6cd1
  42cd39:	xor    BYTE PTR [ecx],bh
  42cd3b:	cmp    ebp,DWORD PTR [edx-0x3d]
  42cd3e:	mov    edx,0x4de79c04
  42cd43:	lea    esp,[esp+edi*1+0x87cfb4d]
  42cd4a:	shl    BYTE PTR [ebp+ebp*8+0x2d],0xf8
  42cd4f:	cli    
  42cd50:	pop    ds
  42cd51:	imul   edi,DWORD PTR [ebp+0x73],0xffffffc7
  42cd55:	imul   eax,DWORD PTR [ebx+0x8],0x74bb2c20
  42cd5c:	push   DWORD PTR [ebx+0x49]
  42cd5f:	and    al,ch
  42cd61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd62:	stc    
  42cd63:	adc    BYTE PTR [esi],ch
  42cd65:	sbb    eax,eax
  42cd67:	inc    edx
  42cd68:	adc    DWORD PTR [esi+0x30db2c13],esi
  42cd6e:	pop    es
  42cd6f:	sti    
  42cd70:	cmp    al,0xf3
  42cd72:	scas   al,BYTE PTR es:[edi]
  42cd73:	lods   eax,DWORD PTR cs:[esi]
  42cd75:	mov    esp,0xcbe8afc1
  42cd7a:	sbb    al,0x4f
  42cd7c:	sahf   
  42cd7d:	inc    esp
  42cd7e:	stos   DWORD PTR es:[edi],eax
  42cd7f:	xchg   BYTE PTR [esi-0x7e17cc5a],ch
  42cd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd86:	sub    dl,bh
  42cd88:	add    BYTE PTR [ebp-0x36],ch
  42cd8b:	sub    eax,0xa00a7ff
  42cd90:	inc    eax
  42cd91:	mov    cl,bl
  42cd93:	jae    0x42cda1
  42cd95:	add    BYTE PTR [eax],al
  42cd97:	add    BYTE PTR [edx-0x48],dh
  42cd9a:	idiv   ch
  42cd9c:	int    0x18
  42cd9e:	rcr    BYTE PTR [esi+0x31],0x81
  42cda2:	mov    esp,0x82f54a08
  42cda7:	in     al,dx
  42cda8:	fldenv [esi-0x133eacf6]
  42cdae:	adc    edx,DWORD PTR [edi-0x3f]
  42cdb1:	dec    esp
  42cdb2:	adc    bl,ch
  42cdb4:	inc    eax
  42cdb5:	pop    esi
  42cdb6:	add    eax,0x4ad0578d
  42cdbb:	push   esi
  42cdbc:	add    ch,BYTE PTR [eax-0x7a0201a2]
  42cdc2:	repnz add eax,0x45831077
  42cdc8:	loop   0x42cddf
  42cdca:	sbb    BYTE PTR ds:[eax+0x4c32fbfb],al
  42cdd1:	mov    al,0x8b
  42cdd3:	push   eax
  42cdd4:	pop    es
  42cdd5:	inc    ecx
  42cdd6:	jl     0x42cdc8
  42cdd8:	fxch   st(5)
  42cdda:	xchg   DWORD PTR [ebp-0x3a],ebx
  42cddd:	xchg   cl,cl
  42cddf:	add    BYTE PTR [ebx+0x45],ah
  42cde2:	clc    
  42cde3:	mov    BYTE PTR [edi],cl
  42cde5:	xlat   BYTE PTR ds:[ebx]
  42cde6:	lock rcr ebx,0x54
  42cdea:	add    al,0x85
  42cdec:	call   0x4ef6:0xca6a1554
  42cdf3:	mov    eax,DWORD PTR [edi+ebx*8-0x35a39b79]
  42cdfa:	jle    0x42cdbc
  42cdfc:	add    BYTE PTR [eax],al
  42cdfe:	add    BYTE PTR [edi],al
  42ce00:	xchg   edx,eax
  42ce01:	sub    al,0xc0
  42ce03:	fucomp st(5)
  42ce05:	enter  0xf3c3,0x28
  42ce09:	inc    edx
  42ce0a:	lock jp 0x42cdf0
  42ce0d:	sti    
  42ce0e:	xchg   BYTE PTR [esi],ch
  42ce10:	cmp    dh,BYTE PTR [esi+0x41]
  42ce13:	out    dx,eax
  42ce14:	ss dec ebp
  42ce16:	adc    BYTE PTR [edx+0x13],ch
  42ce19:	clc    
  42ce1a:	scas   eax,DWORD PTR es:[edi]
  42ce1b:	repnz mov ah,ah
  42ce1e:	push   eax
  42ce1f:	js     0x42ce8d
  42ce21:	test   BYTE PTR [esi-0x30885654],0x10
  42ce28:	jmp    FWORD PTR [edi]
  42ce2a:	push   edx
  42ce2b:	jo     0x42ce84
  42ce2d:	int3   
  42ce2e:	jae    0x42ce09
  42ce30:	xor    BYTE PTR [edi+0x7fadc904],bh
  42ce36:	shl    bl,1
  42ce38:	sahf   
  42ce39:	xchg   DWORD PTR cs:[eax*2-0x1bda9bbb],esi
  42ce41:	cmp    BYTE PTR [edi+0x727772a7],0x3
  42ce48:	leave  
  42ce49:	push   ebx
  42ce4a:	or     BYTE PTR [eax-0x45],dh
  42ce4d:	add    al,0x52
  42ce4f:	sbb    eax,ebx
  42ce51:	(bad)  
  42ce52:	cld    
  42ce53:	cld    
  42ce54:	aaa    
  42ce55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce56:	test   BYTE PTR [eax],bl
  42ce58:	cmp    DWORD PTR [edi],edi
  42ce5a:	test   ebp,esp
  42ce5c:	aaa    
  42ce5d:	cli    
  42ce5e:	gs cmp al,0xa1
  42ce61:	lock and eax,DWORD PTR [eax]
  42ce64:	add    BYTE PTR [eax],al
  42ce66:	add    eax,esi
  42ce68:	add    edi,DWORD PTR [edi-0x55]
  42ce6b:	rcr    edx,1
  42ce6d:	pop    es
  42ce6e:	and    eax,0xe82efd
  42ce73:	dec    esp
  42ce74:	(bad)  
  42ce75:	cli    
  42ce76:	clc    
  42ce77:	popa   
  42ce78:	push   eax
  42ce79:	sbb    eax,0x73c5af49
  42ce7e:	xlat   BYTE PTR ds:[ebx]
  42ce7f:	xlat   BYTE PTR ds:[ebx]
  42ce80:	jns    0x42ce43
  42ce82:	js     0x42ce8b
  42ce84:	scas   al,BYTE PTR es:[edi]
  42ce85:	fmul   QWORD PTR [eax+0x6c03e8ff]
  42ce8b:	dec    ebx
  42ce8c:	int    0xf3
  42ce8e:	jnp    0x42ce98
  42ce90:	les    eax,FWORD PTR fs:[eax]
  42ce93:	add    edi,DWORD PTR [ecx]
  42ce95:	add    eax,0xdc160f94
  42ce9a:	fdivr  QWORD PTR [ebp-0x38e1348d]
  42cea0:	or     ch,BYTE PTR [edi]
  42cea2:	retf   0xf0c4
  42cea5:	add    eax,esi
  42cea7:	lea    ecx,[edi+edi*2-0x51]
  42ceab:	push   cs
  42ceac:	data16 fdivr st,st(4)
  42ceaf:	push   ebp
  42ceb0:	pop    esi
  42ceb1:	sub    edi,esi
  42ceb3:	in     eax,0x25
  42ceb5:	xor    bh,BYTE PTR [esi+edi*4-0x6f8f04c7]
  42cebc:	call   0x5c94c1c4
  42cec1:	push   ecx
  42cec2:	and    ebp,DWORD PTR [edi-0x45e69944]
  42cec8:	les    eax,FWORD PTR fs:[eax]
  42cecb:	add    BYTE PTR [eax],al
  42cecd:	mov    al,ds:0x728ce3a
  42ced2:	xor    dl,BYTE PTR [edx-0x547204ab]
  42ced8:	sti    
  42ced9:	lds    eax,FWORD PTR [ebx-0x7]
  42cedc:	push   esi
  42cedd:	xchg   BYTE PTR [ebp-0x7b132c75],al
  42cee3:	or     edi,0xffffffe4
  42cee6:	das    
  42cee7:	jmp    0x6df636b6
  42ceec:	ret    0x33d9
  42ceef:	(bad)  
  42cef1:	imul   esp,DWORD PTR ds:0xc670cacb,0x3c
  42cef8:	ss push ebp
  42cefa:	add    al,0x6c
  42cefc:	inc    eax
  42cefd:	mov    ebx,0xcf1e0056
  42cf02:	popa   
  42cf03:	pop    esi
  42cf04:	scas   eax,DWORD PTR es:[edi]
  42cf05:	mov    ecx,0x43ecf838
  42cf0a:	dec    eax
  42cf0b:	xchg   DWORD PTR [edi+eiz*4],edx
  42cf0e:	call   0x4551c085
  42cf13:	sbb    cl,bl
  42cf15:	xor    edi,DWORD PTR [ebx-0x1780e37a]
  42cf1b:	mov    edi,0x4bb83a72
  42cf20:	jns    0x42cf11
  42cf22:	xor    bh,al
  42cf24:	fidiv  DWORD PTR [ebx-0xcd7814e]
  42cf2a:	cmp    eax,edx
  42cf2c:	jmp    0xdd332318
  42cf31:	add    BYTE PTR [eax],al
  42cf33:	add    BYTE PTR [eax-0x80],cl
  42cf36:	push   esp
  42cf37:	push   ebp
  42cf38:	cmc    
  42cf39:	push   ebx
  42cf3a:	or     al,0xbd
  42cf3c:	dec    esi
  42cf3d:	mov    cs,WORD PTR [ecx+edi*1-0x49]
  42cf41:	inc    edx
  42cf42:	hlt    
  42cf43:	repnz mov bl,0xa
  42cf46:	jae    0x42cf2e
  42cf48:	mov    esi,0x18b43666
  42cf4d:	aaa    
  42cf4e:	xchg   edi,eax
  42cf4f:	(bad)  [eax]
  42cf51:	pop    edi
  42cf52:	push   edi
  42cf53:	and    BYTE PTR [esi],dh
  42cf55:	add    DWORD PTR [eax],eax
  42cf57:	pop    ss
  42cf58:	mov    bl,0xba
  42cf5a:	add    BYTE PTR [esi+eiz*1-0x7e],bh
  42cf5e:	icebp  
  42cf5f:	jne    0x42cf7b
  42cf61:	xor    BYTE PTR [ecx+edi*8+0x68],0x45
  42cf66:	adc    al,0x60
  42cf68:	inc    ecx
  42cf69:	jns    0x4ad2aaad
  42cf6f:	stc    
  42cf70:	add    BYTE PTR [edi],0xe7
  42cf73:	mov    ah,0x1c
  42cf75:	sub    bl,0x62
  42cf78:	xor    DWORD PTR [edi],ecx
  42cf7a:	xchg   DWORD PTR [eax],eax
  42cf7c:	add    al,0xbf
  42cf7e:	adc    eax,0xec7973e9
  42cf84:	retf   0xf483
  42cf87:	(bad)  
  42cf88:	ficom  WORD PTR [ebp+0x62]
  42cf8b:	add    bl,bl
  42cf8d:	repnz add dh,0x82
  42cf91:	int    0x5c
  42cf93:	(bad)  
  42cf94:	xchg   DWORD PTR gs:[edx+0x74],edi
  42cf9b:	repnz pop eax
  42cf9d:	add    eax,0x4ad6cf8d
  42cfa2:	push   esi
  42cfa3:	bound  esi,QWORD PTR [eax-0x7e1a01a7]
  42cfa9:	repnz add eax,0x4e82f75f
  42cfaf:	repnz adc ecx,DWORD PTR [ebp-0xc]
  42cfb3:	sti    
  42cfb4:	out    dx,eax
  42cfb5:	repz mov cl,BYTE PTR [ebx]
  42cfb8:	cmp    eax,eax
  42cfba:	xor    cl,BYTE PTR [edi-0x4aff9b34]
  42cfc0:	push   esp
  42cfc1:	or     al,0xc
  42cfc3:	dec    ebx
  42cfc4:	iret   
  42cfc5:	jo     0x42cfcf
  42cfc7:	sub    dl,al
  42cfc9:	add    BYTE PTR [ebp-0x1e],0x39
  42cfcd:	shr    eax,0xc9
  42cfd0:	and    dh,dh
  42cfd2:	dec    DWORD PTR [esi+0x702d6ec2]
  42cfd8:	add    al,0x8d
  42cfda:	inc    ebp
  42cfdb:	div    dl
  42cfdd:	popa   
  42cfde:	add    eax,0x50f3f787
  42cfe3:	cmc    
  42cfe4:	adc    eax,0xb1a615f7
  42cfe9:	cmp    al,BYTE PTR [eax]
  42cfeb:	dec    edi
  42cfec:	ret    
  42cfed:	outs   dx,BYTE PTR ds:[esi]
  42cfee:	adc    eax,0x5fc4149
  42cff3:	aas    
  42cff4:	mov    esi,0xd0f336f5
  42cff9:	cmp    BYTE PTR [eax],ch
  42cffb:	les    esi,FWORD PTR [edx+0xe12]
  42d001:	add    BYTE PTR [ebx],dh
  42d003:	scas   al,BYTE PTR es:[edi]
  42d004:	mov    es,WORD PTR [eax]
  42d006:	stos   BYTE PTR es:[edi],al
  42d007:	ins    BYTE PTR es:[edi],dx
  42d008:	adc    al,0xc0
  42d00a:	mov    edx,0x964f716c
  42d00f:	sub    al,0xcd
  42d011:	or     ch,ah
  42d013:	sub    BYTE PTR [edx],bh
  42d015:	add    ebx,esi
  42d017:	lods   eax,DWORD PTR ds:[esi]
  42d018:	(bad)  
  42d019:	and    esp,DWORD PTR [esi-0x16]
  42d01c:	mov    al,ds:0xc62df33d
  42d021:	sub    al,BYTE PTR [edi]
  42d023:	mov    al,ds:0xb1c9f87e
  42d028:	in     eax,0x7f
  42d02a:	cmp    cl,ch
  42d02c:	jle    0x42d026
  42d02e:	rcr    al,cl
  42d030:	test   BYTE PTR [edi],ah
  42d032:	repnz lods eax,DWORD PTR ds:[esi]
  42d034:	(bad)  
  42d035:	jg     0x42d091
  42d037:	mov    ds:0xaeec82f7,eax
  42d03c:	(bad)  
  42d03d:	(bad)  
  42d03e:	fnstenv [ecx-0x60350225]
  42d044:	es mov edi,0xc57f1e69
  42d04a:	shr    DWORD PTR ds:0xa6a160cd,cl
  42d050:	jle    0x42d047
  42d052:	cdq    
  42d053:	mov    al,0x80
  42d055:	add    dh,dl
  42d057:	lods   eax,DWORD PTR ds:[esi]
  42d058:	(bad)  
  42d059:	jg     0x42d065
  42d05b:	shl    edi,cl
  42d05d:	test   BYTE PTR [eax],cl
  42d05f:	lods   eax,DWORD PTR ds:[esi]
  42d060:	(bad)  
  42d061:	dec    DWORD PTR [ecx+0xbf26da]
  42d067:	add    BYTE PTR [eax],al
  42d069:	jae    0x42d071
  42d06b:	sbb    BYTE PTR [ebx],cl
  42d06d:	jbe    0x42d07d
  42d06f:	(bad)  
  42d070:	push   ebx
  42d072:	mov    eax,esi
  42d074:	push   edi
  42d075:	mov    al,0x7
  42d077:	imul   ecx,ebp,0xe5640609
  42d07d:	int3   
  42d07e:	mov    dh,0xe8
  42d080:	pop    ecx
  42d081:	loopne 0x42d0d1
  42d083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d084:	test   BYTE PTR [ebx+0x4d003c52],bh
  42d08a:	mov    ebx,db0
  42d08d:	jbe    0x42d057
  42d08f:	in     al,0x23
  42d091:	out    0x27,eax
  42d093:	aaa    
  42d094:	add    bh,bl
  42d096:	xor    BYTE PTR [ebx],bl
  42d098:	in     al,dx
  42d099:	adc    al,0xb0
  42d09b:	fadd   DWORD PTR [edi-0xa]
  42d09e:	xchg   BYTE PTR [edi+0x6905090d],cl
  42d0a4:	int    0xca
  42d0a6:	cmp    dh,al
  42d0a8:	cmp    DWORD PTR [ebx-0x1c],0xffffffe9
  42d0ac:	sbb    BYTE PTR [edi+eax*1+0x11cd03e9],0x11
  42d0b4:	ret    
  42d0b5:	jbe    0x42d07f
  42d0b7:	hlt    
  42d0b8:	and    edx,DWORD PTR [edi]
  42d0ba:	sub    bh,dl
  42d0bc:	dec    DWORD PTR [eax]
  42d0be:	xor    ebx,ebx
  42d0c0:	rol    esp,cl
  42d0c2:	scas   eax,DWORD PTR es:[edi]
  42d0c3:	sbb    BYTE PTR [eax-0xa],cl
  42d0c6:	xchg   BYTE PTR [edi],bh
  42d0c8:	or     eax,0xcd68acb9
  42d0cd:	add    BYTE PTR [eax],al
  42d0cf:	add    dl,bl
  42d0d1:	cmp    cl,BYTE PTR [eax-0x7c]
  42d0d4:	sub    esp,esp
  42d0d6:	mov    ah,0xa7
  42d0d8:	pushf  
  42d0d9:	scas   eax,DWORD PTR es:[edi]
  42d0da:	shl    esi,1
  42d0dc:	jo     0x42d0fd
  42d0de:	sbb    al,bh
  42d0e0:	or     DWORD PTR [edi-0x80f5f1],eax
  42d0e6:	push   0x803bb9cd
  42d0eb:	pop    ecx
  42d0ec:	fmul   DWORD PTR [esi+0x26]
  42d0ef:	pop    edx
  42d0f0:	cmovg  eax,DWORD PTR [eax]
  42d0f3:	sub    ch,BYTE PTR [edi-0x52]
  42d0f6:	pop    esp
  42d0f7:	je     0x42d0d5
  42d0f9:	sub    edx,DWORD PTR [esi]
  42d0fb:	inc    ecx
  42d0fc:	mov    al,0x35
  42d0fe:	stc    
  42d0ff:	sbb    DWORD PTR [ebx],edi
  42d101:	or     al,0x80
  42d103:	shl    bh,1
  42d105:	xor    BYTE PTR [ecx],dl
  42d107:	arpl   WORD PTR [edi+0x4e052001],si
  42d10d:	and    eax,0x394efd04
  42d112:	add    eax,0x74fbb769
  42d117:	sbb    al,0x39
  42d119:	adc    BYTE PTR [eax-0x56],bl
  42d11c:	jo     0x42d0cc
  42d11e:	sub    ch,dh
  42d120:	or     al,0xeb
  42d122:	cli    
  42d123:	xchg   esi,eax
  42d124:	lods   eax,DWORD PTR ds:[esi]
  42d125:	xor    eax,0x752ccef9
  42d12a:	jg     0x42d0bc
  42d12c:	loopne 0x42d0b4
  42d12e:	clc    
  42d12f:	lock mov ebp,0xd465e5
  42d135:	add    BYTE PTR [eax],al
  42d137:	sbb    BYTE PTR [esi+0xa],dh
  42d13a:	aaa    
  42d13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d13c:	xor    eax,0x46d0f1b6
  42d141:	add    cl,ch
  42d143:	mov    ds:0x11507fe8,eax
  42d148:	cmp    al,0xa0
  42d14a:	ret    
  42d14b:	pop    ss
  42d14c:	dec    edi
  42d14d:	mov    edi,0x7fd666f6
  42d152:	sub    DWORD PTR [eax],0x55
  42d155:	inc    eax
  42d156:	jmp    0xc3470c4b
  42d15b:	ror    BYTE PTR [esi-0x41],1
  42d15e:	imul   esp,DWORD PTR [edi],0x70067414
  42d164:	scas   al,BYTE PTR es:[edi]
  42d165:	cmp    bl,BYTE PTR [ebp-0x56401a0f]
  42d16b:	xor    DWORD PTR [eax],eax
  42d16d:	mov    dl,0x0
  42d16f:	fisttp DWORD PTR [ecx+0x487a08b4]
  42d175:	add    BYTE PTR [eax],al
  42d177:	addr16 fabs 
  42d17a:	in     al,0xbd
  42d17c:	or     bh,0x80
  42d17f:	nop
  42d180:	mov    bl,0x5a
  42d182:	inc    eax
  42d183:	fimul  DWORD PTR [eax]
  42d185:	je     0x42d18b
  42d187:	xor    cl,ch
  42d189:	push   edi
  42d18a:	ret    
  42d18b:	dec    edx
  42d18c:	rcr    BYTE PTR [ecx],0x74
  42d18f:	mov    cs,WORD PTR [ebx+0x76e73ff7]
  42d195:	loope  0x42d187
  42d197:	lea    eax,[edx+0x80cf]
  42d19d:	add    BYTE PTR [eax],ah
  42d19f:	mov    bl,0x5a
  42d1a1:	inc    eax
  42d1a2:	mov    cl,BYTE PTR [eax]
  42d1a4:	jne    0x42d16f
  42d1a6:	sbb    al,al
  42d1a8:	sbb    DWORD PTR [esi+edx*2-0x32],esi
  42d1ac:	mov    ah,0x8b
  42d1ae:	ins    DWORD PTR es:[edi],dx
  42d1af:	(bad)  
  42d1b0:	mov    ds:0xa3cf8a42,eax
  42d1b5:	inc    edx
  42d1b6:	pop    edx
  42d1b7:	scas   eax,DWORD PTR es:[edi]
  42d1b8:	mov    al,ds:0xa0a05a42
  42d1bd:	inc    edx
  42d1be:	dec    edx
  42d1bf:	adc    eax,0x1e4a429e
  42d1c4:	mov    eax,ds:0xa1395a42
  42d1c9:	inc    edx
  42d1ca:	pop    edx
  42d1cb:	inc    edx
  42d1cc:	sahf   
  42d1cd:	inc    edx
  42d1ce:	dec    edx
  42d1cf:	loop   0x42d16e
  42d1d1:	inc    edx
  42d1d2:	dec    edx
  42d1d3:	jae    0x42d175
  42d1d5:	inc    edx
  42d1d6:	sbb    al,BYTE PTR [ecx+0x771a42a0]
  42d1dc:	mov    al,ds:0xa0d00a42
  42d1e1:	inc    edx
  42d1e2:	or     dh,BYTE PTR [edx-0x5be5bd63]
  42d1e8:	popf   
  42d1e9:	inc    edx
  42d1ea:	repz popf 
  42d1ec:	push   cs
  42d1ed:	mov    ds:0x87299db1,eax
  42d1f2:	pop    es
  42d1f3:	and    eax,esp
  42d1f5:	div    DWORD PTR [eax+0x1]
  42d1f8:	sbb    BYTE PTR [edi-0x78d031ca],al
  42d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d200:	sub    al,0x87
  42d202:	add    BYTE PTR [eax],al
  42d204:	add    bl,ah
  42d206:	adc    ah,al
  42d208:	mov    BYTE PTR [edi],dh
  42d20a:	or     ch,ah
  42d20c:	mov    BYTE PTR [edi],ch
  42d20e:	add    dh,ah
  42d210:	mov    BYTE PTR [edi],dh
  42d212:	or     ch,al
  42d214:	mov    BYTE PTR [edi],ch
  42d216:	add    dh,al
  42d218:	test   DWORD PTR ds:0xcf4376dd,esi
  42d21e:	test   al,0x7e
  42d220:	arpl   di,dx
  42d222:	test   al,0x43
  42d224:	push   ebx
  42d225:	push   0xf473f7ea
  42d22a:	sar    BYTE PTR [esi-0x150c518],1
  42d230:	push   DWORD PTR [esi+0x66]
  42d233:	dec    ecx
  42d234:	inc    ebp
  42d235:	imul   edi,ebx,0xb93a83fe
  42d23b:	adc    eax,DWORD PTR [eax-0x16b36096]
  42d241:	jae    0x42d279
  42d243:	sti    
  42d244:	jae    0x42d295
  42d246:	sbb    eax,0xf4c710c6
  42d24b:	jle    0x42d245
  42d24d:	push   es
  42d24e:	shl    edi,cl
  42d250:	xchg   BYTE PTR [eax-0x4040864b],dh
  42d256:	adc    BYTE PTR [eax-0x37],bh
  42d259:	sub    al,0xd
  42d25b:	jp     0x42d21c
  42d25d:	lahf   
  42d25e:	call   0xa4713db
  42d263:	jge    0x42d270
  42d265:	in     al,dx
  42d266:	push   es
  42d267:	jno    0x42d2a6
  42d269:	add    BYTE PTR [eax],al
  42d26b:	add    al,ah
  42d26d:	lahf   
  42d26e:	pop    ecx
  42d26f:	pop    ds
  42d270:	jnp    0x42d274
  42d272:	loope  0x42d2ef
  42d274:	mov    dl,0x1b
  42d276:	(bad)  
  42d277:	ret    
  42d278:	mov    ah,0x9d
  42d27a:	call   0x6ef5bf71
  42d27f:	cmp    eax,0x4ec2f2f2
  42d284:	idiv   DWORD PTR [edi+0x6c]
  42d287:	pop    ds
  42d288:	div    edx
  42d28a:	sbb    BYTE PTR [ecx],bh
  42d28c:	idiv   DWORD PTR [edi+0x5c]
  42d28f:	call   0x3fb574
  42d294:	jmp    0x8eb:0x388ce539
  42d29b:	xchg   ecx,eax
  42d29c:	lock add DWORD PTR [eax+0x40],esi
  42d2a0:	iret   
  42d2a1:	push   ss
  42d2a2:	pusha  
  42d2a3:	dec    eax
  42d2a4:	xlat   BYTE PTR ds:[ebx]
  42d2a5:	jmp    0x12e4:0x8ae9bbed
  42d2ac:	repz push es
  42d2ae:	imul   eax,DWORD PTR [edx-0xe],0x235eee
  42d2b5:	pop    ss
  42d2b6:	mov    cl,BYTE PTR [edx-0x11]
  42d2b9:	xchg   DWORD PTR [edx],eax
  42d2bb:	or     bl,dh
  42d2bd:	inc    esi
  42d2be:	call   0xcccac6
  42d2c3:	adc    esi,ebx
  42d2c5:	push   es
  42d2c6:	pop    esi
  42d2c7:	inc    ecx
  42d2c8:	jmp    0x42d2cb
  42d2ca:	fwait
  42d2cb:	dec    edx
  42d2cc:	repnz ds mov sp,0x0
  42d2d2:	add    BYTE PTR [edi],al
  42d2d4:	add    ch,BYTE PTR [edx-0x50]
  42d2d7:	jmp    0x1105bbe2
  42d2dc:	mov    ebx,ds
  42d2de:	jl     0x42d2ce
  42d2e0:	push   es
  42d2e1:	imul   edi,DWORD PTR [edi+0x6d0001f7],0xe9000063
  42d2eb:	jo     0x42d2a6
  42d2ed:	add    eax,0x9d174f6
  42d2f2:	jmp    0xea6459e7
  42d2f7:	jne    0x42d339
  42d2f9:	or     BYTE PTR [esi],cl
  42d2fb:	ins    BYTE PTR es:[edi],dx
  42d2fc:	inc    eax
  42d2fd:	or     al,0x6
  42d2ff:	jge    0x42d308
  42d301:	add    BYTE PTR [edx],0x37
  42d304:	inc    BYTE PTR [ebx+0x6f61a]
  42d30a:	lds    edx,FWORD PTR [ecx+ecx*4+0x83aaf01]
  42d311:	adc    edx,edx
  42d313:	inc    edi
  42d314:	xor    dh,bh
  42d316:	in     al,0xe1
  42d318:	mov    dl,BYTE PTR [esi-0x7ff90f1a]
  42d31e:	ret    0xfdfe
  42d321:	test   BYTE PTR [edx-0x7],ah
  42d324:	push   es
  42d325:	add    BYTE PTR [edi-0x3dccf7d6],ch
  42d32b:	rdmsr  
  42d32d:	div    esp
  42d32f:	loope  0x42d2bb
  42d331:	mov    ebx,esi
  42d333:	lock push es
  42d335:	adc    BYTE PTR [edx-0x12000000],0xfd
  42d33c:	test   BYTE PTR [edi-0x1a],ch
  42d33f:	push   es
  42d340:	add    BYTE PTR [edx+0x2c],ch
  42d343:	jmp    0x42d358
  42d345:	jmp    0xbb441a84
  42d34a:	and    al,0x8b
  42d34c:	xchg   BYTE PTR [esi],ah
  42d34e:	add    ecx,DWORD PTR [edi+edi*4+0x53885cdd]
  42d355:	add    eax,0xd4b89eb
  42d35a:	out    0xe9,eax
  42d35c:	lds    edi,FWORD PTR [eax+0xfabf65]
  42d362:	or     bh,BYTE PTR [edi-0x46]
  42d365:	je     0x42d387
  42d367:	add    DWORD PTR [eax+0x17],0xffffffee
  42d36b:	jle    0x42d373
  42d36d:	add    al,0x92
  42d36f:	aas    
  42d370:	jp     0x7f66dfd2
  42d376:	or     BYTE PTR [ecx+0x24],0xf
  42d37a:	adc    eax,0xa00797e
  42d37f:	add    eax,0x18be647b
  42d384:	add    cl,ch
  42d386:	(bad)  
  42d387:	(bad)
  42d38a:	dec    edx
  42d38b:	jno    0x42d3a7
  42d38d:	cmovle ebx,eax
  42d390:	add    DWORD PTR [eax],eax
  42d392:	fiadd  DWORD PTR [ecx+esi*8-0x3e772af7]
  42d399:	or     ecx,edx
  42d39b:	add    al,0xbe
  42d39d:	inc    esi
  42d39e:	add    BYTE PTR [eax],al
  42d3a0:	add    bl,cl
  42d3a2:	mov    eax,ds:0xc6b52ce7
  42d3a7:	cmc    
  42d3a8:	xor    BYTE PTR [ecx-0x27af8ff],0x9
  42d3af:	add    BYTE PTR [eax],al
  42d3b1:	adc    ch,bh
  42d3b3:	mov    edi,0x31c98e8
  42d3b8:	(bad)  
  42d3b9:	phaddd mm0,QWORD PTR [eax]
  42d3bd:	mov    bh,BYTE PTR [esi+0x1ca20140]
  42d3c3:	or     esi,DWORD PTR [ebp+0x60]
  42d3c6:	test   BYTE PTR [eax+0x16],bh
  42d3c9:	dec    edi
  42d3ca:	clc    
  42d3cb:	add    esi,DWORD PTR [ebx]
  42d3cd:	mov    ah,BYTE PTR [edx-0x7]
  42d3d0:	xor    cl,BYTE PTR [edx+0x5de0c04b]
  42d3d6:	add    al,BYTE PTR [esp+0x55]
  42d3da:	jl     0x42d41c
  42d3dc:	pop    ss
  42d3dd:	repz and al,0x49
  42d3e0:	adc    BYTE PTR [esi-0x22],ch
  42d3e3:	aaa    
  42d3e4:	vmread eax,edi
  42d3e7:	ror    bh,0x70
  42d3ea:	push   esi
  42d3eb:	add    al,0x74
  42d3ed:	jmp    0x9bc7e357
  42d3f2:	iret   
  42d3f3:	(bad)  
  42d3f4:	push   DWORD PTR [ebx-0x48]
  42d3f7:	jle    0x42d37e
  42d3f9:	lods   eax,DWORD PTR ds:[esi]
  42d3fa:	mov    eax,0x626b7ae2
  42d3ff:	loop   0x42d40b
  42d401:	in     al,0x29
  42d403:	into   
  42d404:	stc    
  42d405:	add    BYTE PTR [eax],al
  42d407:	add    ah,ch
  42d409:	or     BYTE PTR [ebp-0x1431f0bd],cl
  42d40f:	inc    esp
  42d410:	out    dx,eax
  42d411:	push   es
  42d412:	cmp    DWORD PTR [ebx],ecx
  42d414:	repz popf 
  42d416:	mov    eax,DWORD PTR [edi+edi*8+0x14]
  42d41a:	dec    eax
  42d41b:	and    al,0xe3
  42d41d:	xor    al,0x51
  42d41f:	or     al,0xf0
  42d421:	loop   0x42d436
  42d423:	cdq    
  42d424:	push   0xd74385d3
  42d429:	adc    eax,0x4fb418d
  42d42e:	shl    DWORD PTR [edx+0x3],1
  42d431:	in     al,dx
  42d432:	add    eax,0xec0a2f37
  42d437:	outs   dx,BYTE PTR ds:[esi]
  42d438:	sti    
  42d439:	xor    al,0xcf
  42d43b:	mov    BYTE PTR [edi],dh
  42d43d:	retf   0xe6f2
  42d440:	jmp    0x42d466
  42d442:	push   ebx
  42d443:	and    al,0xcb
  42d445:	cmp    esp,DWORD PTR es:[edi+eiz*1]
  42d449:	sbb    eax,0x9e0b243b
  42d44e:	xor    DWORD PTR [eax],ecx
  42d450:	push   0x6a0fe2b9
  42d455:	mov    eax,ds:0x71817e2
  42d45a:	daa    
  42d45b:	sbb    al,0xb7
  42d45d:	jmp    0x475d:0xfeb28b14
  42d464:	movhps QWORD PTR [edi+eax*2+0x3],xmm3
  42d469:	mov    al,0x6f
  42d46b:	inc    edi
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	add    bh,cl
  42d470:	push   ss
  42d471:	outs   dx,BYTE PTR ds:[esi]
  42d472:	dec    ecx
  42d473:	jmp    0x42d470
  42d475:	daa    
  42d476:	mov    ch,BYTE PTR [edx-0x6e7925fe]
  42d47c:	add    ecx,ebp
  42d47e:	add    esi,DWORD PTR [ecx]
  42d480:	dec    eax
  42d481:	call   0xcd8d8e87
  42d486:	sbb    ebp,eax
  42d488:	mov    bl,BYTE PTR [ecx+eax*8+0x3e6daee9]
  42d48f:	sti    
  42d490:	and    DWORD PTR [ecx+0x7cc77617],0xc5536dee
  42d49a:	sbb    esi,DWORD PTR [ebx+edi*1+0xd]
  42d49e:	adc    al,0xc
  42d4a0:	shl    DWORD PTR [edi],0x55
  42d4a3:	je     0x42d462
  42d4a5:	rcl    esp,1
  42d4a7:	outs   dx,DWORD PTR ds:[esi]
  42d4a8:	(bad)  
  42d4a9:	push   esp
  42d4aa:	or     dh,BYTE PTR [ebp+0x45]
  42d4ad:	(bad)  
  42d4af:	jb     0x42d4ac
  42d4b1:	loop   0x42d43e
  42d4b3:	xor    dl,BYTE PTR [esi]
  42d4b5:	pop    edi
  42d4b6:	inc    esi
  42d4b7:	add    bl,ah
  42d4b9:	sub    DWORD PTR [eax+esi*1+0x6e0ef1e3],ecx
  42d4c0:	inc    ecx
  42d4c1:	call   0xdce8:0xc8a79bf
  42d4c8:	push   es
  42d4c9:	or     BYTE PTR [esi],0x69
  42d4cc:	scas   al,BYTE PTR es:[edi]
  42d4cd:	add    DWORD PTR [ebp+ebx*2+0x87e9fc],0xfbe90000
  42d4d8:	(bad)  
  42d4d9:	call   0xe4395bce
  42d4de:	std    
  42d4df:	add    BYTE PTR [ecx],0xf4
  42d4e2:	lock push es
  42d4e4:	xchg   BYTE PTR [edi-0x1a7a1d1b],ah
  42d4ea:	jmp    0xc206:0xf0dcf09f
  42d4f1:	scas   eax,DWORD PTR es:[edi]
  42d4f2:	out    dx,eax
  42d4f3:	lods   eax,DWORD PTR ds:[esi]
  42d4f4:	test   esi,edi
  42d4f6:	imul   esi,DWORD PTR [ecx+0x2636d0a],0x0
  42d4fd:	jmp    0x3f3d957b
  42d502:	jp     0x42d572
  42d504:	jae    0x42d4f9
  42d506:	push   0x48
  42d508:	adc    ecx,ebp
  42d50a:	outs   dx,DWORD PTR ds:[esi]
  42d50b:	add    al,BYTE PTR [ecx]
  42d50d:	popa   
  42d50e:	xor    eax,0xfdaf861a
  42d513:	loop   0x42d58f
  42d515:	jno    0x42d542
  42d517:	jecxz  0x42d523
  42d519:	out    0x6c,al
  42d51b:	les    ecx,FWORD PTR [ebx]
  42d51d:	jmp    0xd865b12
  42d522:	(bad)  
  42d524:	inc    esp
  42d525:	in     eax,dx
  42d526:	xor    BYTE PTR [eax+0x6f0e768],ah
  42d52c:	adc    dl,0x44
  42d52f:	xor    al,0x6
  42d531:	jae    0x42d521
  42d533:	loop   0x42d531
  42d535:	in     eax,dx
  42d536:	idiv   DWORD PTR [esi+0x1]
  42d539:	ret    0x0
  42d53c:	add    BYTE PTR [ebx-0x79],al
  42d53f:	mul    BYTE PTR [esp+edi*8]
  42d542:	or     DWORD PTR [esp+esi*8],0xfffffff0
  42d546:	push   es
  42d547:	add    bh,0x3c
  42d54a:	mov    DWORD PTR [ecx-0x1],0xea41c8f2
  42d551:	repnz enter 0x41,0x5b
  42d556:	pop    ss
  42d557:	jmp    0x4c23ee
  42d55c:	and    BYTE PTR [eax+ecx*1],0x7b
  42d560:	dec    esi
  42d561:	push   edx
  42d562:	ins    BYTE PTR es:[edi],dx
  42d563:	jns    0x42d5b3
  42d565:	ds ins BYTE PTR es:[edi],dx
  42d567:	jp     0x42d564
  42d569:	inc    eax
  42d56a:	cmc    
  42d56b:	mov    eax,DWORD PTR [eax-0x788be95f]
  42d571:	call   0x6d0:0x970f4270
  42d578:	add    BYTE PTR [edx],cl
  42d57a:	ret    
  42d57b:	inc    eax
  42d57c:	add    DWORD PTR [edi],eax
  42d57e:	pop    edx
  42d57f:	jae    0x42d580
  42d581:	(bad)  [edx+edi*2-0x5]
  42d585:	inc    esi
  42d586:	cld    
  42d587:	test   BYTE PTR [ebx+ecx*1+0x44c60009],cl
  42d58e:	add    bh,dh
  42d590:	call   0x42d238
  42d595:	pop    edx
  42d596:	jno    0x42d5e6
  42d598:	xorps  xmm5,xmm6
  42d59b:	add    BYTE PTR [eax],al
  42d59d:	retf   0x40c2
  42d5a0:	add    DWORD PTR [eax],eax
  42d5a2:	add    BYTE PTR [eax],al
  42d5a4:	aad    0x5b
  42d5a6:	cmp    eax,0x8008da0c
  42d5ab:	sti    
  42d5ac:	cli    
  42d5ad:	stc    
  42d5ae:	test   BYTE PTR [eax-0x35],ch
  42d5b1:	or     BYTE PTR [eax],al
  42d5b3:	(bad)  
  42d5b4:	aam    0x7
  42d5b6:	or     cl,ch
  42d5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5b9:	cld    
  42d5ba:	(bad)  
  42d5bb:	dec    DWORD PTR [edx]
  42d5bd:	outs   dx,BYTE PTR ds:[esi]
  42d5be:	and    eax,0x155070f
  42d5c3:	add    BYTE PTR [edx-0x7cfebf3e],bl
  42d5c9:	popa   
  42d5ca:	sbb    DWORD PTR [edx+ecx*4],ecx
  42d5cd:	or     BYTE PTR [ebp-0x920cbd],cl
  42d5d3:	or     ah,ah
  42d5d5:	out    dx,eax
  42d5d6:	and    DWORD PTR [ebx],ecx
  42d5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5d9:	popa   
  42d5da:	and    DWORD PTR [edi+0x4b],edi
  42d5dd:	outs   dx,BYTE PTR ds:[esi]
  42d5de:	and    al,0x89
  42d5e0:	lods   eax,DWORD PTR ds:[esi]
  42d5e1:	int    0xc4
  42d5e3:	inc    ecx
  42d5e4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5e7:	add    dh,bh
  42d5e9:	popf   
  42d5ea:	(bad)  
  42d5eb:	jg     0x42d625
  42d5ed:	cld    
  42d5ee:	xor    cl,BYTE PTR [ecx]
  42d5f0:	sub    eax,0x1a06fd5c
  42d5f5:	push   edi
  42d5f6:	or     DWORD PTR [eax],eax
  42d5f8:	repz sbb eax,0x179f2fb9
  42d5fe:	test   dh,dh
  42d600:	fidiv  DWORD PTR [ecx+eiz*8+0x61]
  42d604:	js     0x42d66a
  42d606:	push   cs
  42d607:	bound  eax,QWORD PTR [eax]
  42d609:	add    BYTE PTR [eax],al
  42d60b:	cwde   
  42d60c:	fld    QWORD PTR ds:0xc94bec62
  42d612:	popa   
  42d613:	lock fisub WORD PTR [ecx]
  42d616:	jg     0x42d5f3
  42d618:	int    0x24
  42d61a:	mov    DWORD PTR ds:0xf0e275ce,ebp
  42d620:	popf   
  42d621:	(bad)  
  42d622:	popa   
  42d623:	sbb    bh,bl
  42d625:	or     al,0x82
  42d627:	mov    ecx,0x79fffea8
  42d62c:	fist   DWORD PTR [esp]
  42d62f:	push   0x7ee90799
  42d634:	mov    eax,ds:0xe07efffe
  42d639:	sar    DWORD PTR [ebx],cl
  42d63b:	cli    
  42d63c:	in     al,dx
  42d63d:	stos   BYTE PTR es:[edi],al
  42d63e:	popa   
  42d63f:	in     al,dx
  42d640:	sub    eax,eax
  42d642:	popa   
  42d643:	jo     0x42d60a
  42d645:	out    dx,al
  42d646:	popa   
  42d647:	jp     0x42d62c
  42d649:	or     eax,0xe8072dc2
  42d64e:	jp     0xf346c3bc
  42d654:	xchg   BYTE PTR [ebp-0x5d02181d],cl
  42d65a:	inc    ebp
  42d65b:	repnz stc 
  42d65d:	(bad)  
  42d65e:	xchg   edi,eax
  42d65f:	cmc    
  42d660:	push   es
  42d661:	jmp    0xf53933e9
  42d666:	(bad)  
  42d667:	int3   
  42d668:	scas   eax,DWORD PTR es:[edi]
  42d669:	scas   eax,DWORD PTR es:[edi]
  42d66a:	cmp    al,0x33
  42d66c:	and    al,0x6e
  42d66e:	inc    ebp
  42d66f:	add    BYTE PTR [eax],al
  42d671:	add    ch,ch
  42d673:	and    al,0xce
  42d675:	ret    
  42d676:	out    dx,al
  42d677:	and    al,0xe2
  42d679:	jge    0x42d6b0
  42d67b:	and    al,0xe6
  42d67d:	ret    0x8792
  42d680:	push   eax
  42d681:	repz xchg edx,eax
  42d683:	jge    0x42d627
  42d685:	adc    DWORD PTR [ecx*4-0x15dcbf9d],ecx
  42d68c:	fbstp  TBYTE PTR [esi+ebx*8]
  42d68f:	and    al,0xf2
  42d691:	jge    0x42d6d0
  42d693:	and    al,0x66
  42d695:	stos   DWORD PTR es:[edi],eax
  42d696:	les    esp,FWORD PTR [eax+eiz*2]
  42d699:	inc    ebp
  42d69a:	pop    es
  42d69b:	shl    DWORD PTR [edx-0x646006fe],0x8
  42d6a2:	repz push es
  42d6a4:	imul   edi,DWORD PTR [eax+0x4f6cf9f4],0x89e906f4
  42d6ae:	xor    dl,BYTE PTR [edx]
  42d6b0:	or     eax,0xcffae888
  42d6b5:	repz call 0xedcbbfc1
  42d6bb:	(bad)  
  42d6bc:	or     al,0xd
  42d6be:	and    cl,ah
  42d6c0:	dec    edx
  42d6c1:	(bad)  
  42d6c2:	xor    dl,BYTE PTR [ebx]
  42d6c4:	inc    ebx
  42d6c5:	das    
  42d6c6:	mov    bl,0xfd
  42d6c8:	dec    DWORD PTR [esi-0x8]
  42d6cb:	ins    BYTE PTR es:[edi],dx
  42d6cc:	mov    BYTE PTR [edi-0x14],0xc7
  42d6d0:	popa   
  42d6d1:	push   0x4f
  42d6d3:	fidivr DWORD PTR [eax+0x86]
  42d6d9:	in     al,dx
  42d6da:	push   es
  42d6db:	add    BYTE PTR [edi],cl
  42d6dd:	jle    0x42d727
  42d6df:	adc    al,0x7
  42d6e1:	fs (bad) 
  42d6e3:	jb     0x42d69a
  42d6e5:	mov    ?,ecx
  42d6e7:	push   es
  42d6e8:	jmp    0xe4395ddd
  42d6ed:	sbb    al,0xe1
  42d6ef:	jg     0x42d763
  42d6f1:	cli    
  42d6f2:	xor    cl,BYTE PTR [edi]
  42d6f4:	imul   edi,DWORD PTR [edx+ecx*1+0x75],0x14831a1
  42d6fc:	out    0x5f,al
  42d6fe:	mov    cl,0x5
  42d700:	jmp    0xf5395df5
  42d705:	jecxz  0x42d706
  42d707:	shl    DWORD PTR [edi+0x44e916ef],0xfd
  42d70e:	push   es
  42d70f:	add    BYTE PTR [ecx+0x44],ch
  42d712:	add    al,0xb
  42d714:	ins    BYTE PTR es:[edi],dx
  42d715:	push   ebx
  42d716:	add    al,0x0
  42d718:	jmp    0xc4441f4f
  42d71d:	lahf   
  42d71e:	rol    BYTE PTR ds:0xf686f0e9,1
  42d724:	repz or al,0x99
  42d727:	test   DWORD PTR [edi-0x1a6a1cff],esp
  42d72d:	out    dx,al
  42d72e:	lahf   
  42d72f:	shl    dl,0xf0
  42d732:	push   es
  42d733:	and    dl,0xeb
  42d736:	std    
  42d737:	sub    DWORD PTR [eax+0x690006e6],0x0
  42d73e:	add    BYTE PTR [eax],al
  42d740:	ins    DWORD PTR es:[edi],dx
  42d741:	add    ecx,DWORD PTR [ebx]
  42d743:	sub    BYTE PTR gs:[eax+eax*1],al
  42d747:	add    BYTE PTR [edx+0x9032085],cl
  42d74d:	inc    eax
  42d74e:	or     bh,bh
  42d750:	sbb    DWORD PTR [eax+0xc],eax
  42d753:	call   DWORD PTR [eax]
  42d755:	rol    DWORD PTR [esi],0x20
  42d758:	xchg   esi,eax
  42d759:	loop   0x42d761
  42d75b:	cmp    BYTE PTR [esi-0x8],0xff
  42d75f:	inc    DWORD PTR [esi-0x15]
  42d762:	push   es
  42d763:	xchg   DWORD PTR [esi-0x8],eax
  42d766:	(bad)  
  42d767:	jmp    DWORD PTR [ebp+0x2f]
  42d76a:	mov    edx,0x150cc6
  42d76f:	(bad)  
  42d770:	sbb    al,0x2
  42d772:	add    DWORD PTR [ebx+0x48773fc2],eax
  42d778:	push   ds
  42d779:	inc    ebp
  42d77a:	jnp    0x42d764
  42d77c:	mov    ecx,ebx
  42d77e:	xor    al,0x48
  42d780:	dec    esi
  42d781:	mov    eax,ds:0xd919e879
  42d786:	and    BYTE PTR [eax+0x5e],cl
  42d789:	or     eax,0xd90ee87b
  42d78e:	or     al,0x48
  42d790:	adc    eax,0x1a0ad886
  42d795:	add    eax,0xfafc46be
  42d79a:	loop   0x42d7fb
  42d79c:	int3   
  42d79d:	inc    edi
  42d79e:	push   cs
  42d79f:	or     ecx,esi
  42d7a1:	dec    edx
  42d7a2:	mov    esi,0x46
  42d7a7:	fadd   QWORD PTR [edx]
  42d7a9:	jecxz  0x42d7fe
  42d7ab:	or     al,0x46
  42d7ad:	push   cs
  42d7ae:	add    DWORD PTR [ecx],eax
  42d7b0:	aas    
  42d7b1:	mov    esi,0xe304ac46
  42d7b6:	inc    edi
  42d7b7:	or     al,0x46
  42d7b9:	push   cs
  42d7ba:	add    eax,0x46be44a1
  42d7bf:	mov    esp,0xf33be2f8
  42d7c4:	sbb    al,0xac
  42d7c6:	dec    edx
  42d7c7:	pop    ds
  42d7c8:	or     al,0x4c
  42d7ca:	je     0x42d796
  42d7cc:	cmc    
  42d7cd:	dec    ebx
  42d7ce:	je     0x42d7c4
  42d7d0:	cmc    
  42d7d1:	das    
  42d7d2:	adc    bh,BYTE PTR [ebx]
  42d7d4:	jmp    0x59d:0x22f44802
  42d7db:	repz popf 
  42d7dd:	rol    BYTE PTR [ecx-0x23],0x97
  42d7e1:	stos   DWORD PTR es:[edi],eax
  42d7e2:	sbb    esi,DWORD PTR ds:0x58030dd8
  42d7e8:	mov    al,0xc0
  42d7ea:	inc    ecx
  42d7eb:	add    eax,0x2d0fabcb
  42d7f0:	loopne 0x42d7ff
  42d7f2:	or     ebx,DWORD PTR [eax-0x5c]
  42d7f5:	rol    BYTE PTR [ecx-0x23],0x9c
  42d7f9:	stos   DWORD PTR es:[edi],eax
  42d7fa:	add    esi,DWORD PTR ds:0x2d021058
  42d800:	pusha  
  42d801:	std    
  42d802:	or     eax,0xfab1991a
  42d807:	and    al,0x22
  42d809:	fisttp QWORD PTR [edx]
  42d80b:	add    BYTE PTR [eax],al
  42d80d:	add    BYTE PTR [edi-0x2a],dh
  42d810:	or     al,0x0
  42d812:	repz xor ecx,DWORD PTR [esi+0x12]
  42d816:	cld    
  42d817:	daa    
  42d818:	ret    0xef86
  42d81b:	and    bl,BYTE PTR [edi+ebx*4-0x50]
  42d81f:	popf   
  42d820:	jle    0x42d818
  42d822:	rcl    DWORD PTR [edx-0x62c279f7],cl
  42d828:	pop    es
  42d829:	mov    dl,0xea
  42d82b:	sbb    eax,0x2af302f8
  42d830:	push   es
  42d831:	ret    0x9f2d
  42d834:	adc    ebp,ecx
  42d836:	retf   
  42d837:	popf   
  42d838:	(bad)  
  42d839:	(bad)  
  42d83a:	jns    0x42d7c3
  42d83c:	add    ecx,DWORD PTR [ebx]
  42d83e:	test   DWORD PTR [esi],eax
  42d840:	loopne 0x42d83f
  42d842:	fdivr  st,st(7)
  42d844:	jmp    0xe94973c8
  42d849:	add    esi,DWORD PTR [ebx-0x54]
  42d84c:	jecxz  0x42d87c
  42d84e:	leave  
  42d84f:	xchg   BYTE PTR [edi+0x68f91e02],bh
  42d855:	mov    esp,0xc1e03234
  42d85a:	xor    dl,BYTE PTR [ecx]
  42d85c:	fsubr  DWORD PTR [edx+0x3e906a3]
  42d862:	jae    0x42d811
  42d864:	out    0x8,al
  42d866:	jbe    0x42d7f6
  42d868:	fiadd  WORD PTR [ebx]
  42d86a:	xrelease xchg BYTE PTR [ebp+0x7181e853],cl
  42d871:	or     eax,0xf3000000
  42d876:	push   es
  42d877:	mov    ds:0x7ffee141,eax
  42d87c:	jno    0x42d8c2
  42d87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d87f:	call   0xdc3f1f07
  42d884:	dec    ecx
  42d885:	jae    0x42d834
  42d887:	out    0x2e,eax
  42d889:	loop   0x42d811
  42d88b:	dec    ebp
  42d88c:	dec    eax
  42d88d:	sahf   
  42d88e:	std    
  42d88f:	and    al,BYTE PTR [ecx+0x1]
  42d892:	cld    
  42d893:	dec    edi
  42d894:	cdq    
  42d895:	adc    al,0xa7
  42d897:	call   0xbc47e41f
  42d89c:	sbb    DWORD PTR [ebx-0x55],esi
  42d89f:	mov    ds:0xaac0ea2e,eax
  42d8a4:	adc    ebp,esp
  42d8a6:	popf   
  42d8a7:	ins    DWORD PTR es:[edi],dx
  42d8a8:	add    esi,ebx
  42d8aa:	push   es
  42d8ab:	imul   edi,DWORD PTR [edx-0x7c21e40d],0x17bf4e5
  42d8b5:	mov    cl,0x4d
  42d8b7:	rcl    DWORD PTR [esp+edx*8],cl
  42d8ba:	and    al,BYTE PTR [eax]
  42d8bc:	imul   ecx,DWORD PTR [ecx+0x366409a4],0x70e9000d
  42d8c6:	popf   
  42d8c7:	inc    eax
  42d8c8:	out    dx,al
  42d8c9:	jae    0x42d8aa
  42d8cb:	add    eax,0x41c8f0e9
  42d8d0:	test   DWORD PTR [eax],0x56695eae
  42d8d6:	pop    es
  42d8d7:	jne    0x42d8ec
  42d8d9:	add    BYTE PTR [eax],al
  42d8db:	add    BYTE PTR [edi-0x64],dh
  42d8de:	(bad)  
  42d8df:	cmp    edx,DWORD PTR [edx-0x3de408da]
  42d8e5:	or     dl,al
  42d8e7:	das    
  42d8e8:	in     eax,0x12
  42d8ea:	out    0x2f,eax
  42d8ec:	ja     0x42d88b
  42d8ee:	push   esp
  42d8ef:	sbb    al,0x65
  42d8f1:	enter  0xf741,0x5c
  42d8f5:	lods   eax,DWORD PTR ds:[esi]
  42d8f6:	imul   ebx,DWORD PTR ds:[eax-0x69bf4b9],0x86e9000c
  42d901:	dec    eax
  42d902:	adc    dl,dh
  42d904:	mov    edx,ebx
  42d906:	jg     0x42d968
  42d908:	icebp  
  42d909:	sbb    edx,DWORD PTR [eax]
  42d90b:	imul   ebp,DWORD PTR [ecx+0x10],0x9d70e275
  42d912:	dec    esi
  42d913:	aam    0x1e
  42d915:	enter  0xdf41,0xe6
  42d919:	lods   eax,DWORD PTR ds:[esi]
  42d91a:	sbb    ch,BYTE PTR [ecx+0x4e]
  42d91d:	or     cl,BYTE PTR [ebx]
  42d91f:	ins    BYTE PTR es:[edi],dx
  42d920:	pushf  
  42d921:	verw   cx
  42d924:	jo     0x42d8c2
  42d926:	or     esi,esi
  42d928:	jae    0x42d962
  42d92a:	or     ecx,ebp
  42d92c:	lock xchg dh,dh
  42d92f:	mov    ecx,0xe04c8bed
  42d934:	lock push es
  42d936:	ret    0x8400
  42d939:	adc    ecx,DWORD PTR ds:0x48931bfe
  42d93f:	add    eax,DWORD PTR [eax]
  42d941:	add    BYTE PTR [eax],al
  42d943:	repz into 
  42d945:	add    al,BYTE PTR [eax]
  42d947:	retf   0xf189
  42d94a:	and    BYTE PTR [ebp-0x65f745db],bh
  42d950:	or     DWORD PTR [ebx+0x7c],edi
  42d953:	imul   BYTE PTR [edx-0x6f6d8b06]
  42d959:	ds and al,0xba
  42d95c:	xchg   edx,eax
  42d95d:	ds and al,0xfa
  42d960:	mov    bh,BYTE PTR [eax+0x16]
  42d963:	xchg   edi,eax
  42d964:	(bad)  
  42d965:	add    eax,esi
  42d967:	aam    0xb
  42d969:	(bad)  
  42d96a:	unpcklps xmm4,xmm4
  42d96d:	add    BYTE PTR [edx-0x91a8e5f],cl
  42d973:	jge    0x42d9d1
  42d975:	add    BYTE PTR [esi+0x4b],0x9d
  42d979:	dec    DWORD PTR [esi]
  42d97b:	(bad)  
  42d97c:	xchg   ebp,eax
  42d97d:	add    al,BYTE PTR [eax]
  42d97f:	pop    edx
  42d980:	pop    DWORD PTR [eax+0x17]
  42d983:	mov    eax,DWORD PTR ss:[esi]
  42d986:	push   cs
  42d987:	jae    0x42d965
  42d989:	or     BYTE PTR [eax],al
  42d98b:	dec    edx
  42d98c:	mov    ecx,esi
  42d98e:	or     al,BYTE PTR [esi+0x6c]
  42d991:	jp     0x42d98e
  42d993:	pmaddwd mm4,mm1
  42d996:	add    cl,0xa9
  42d999:	outs   dx,BYTE PTR ds:[esi]
  42d99a:	in     eax,0xc1
  42d99c:	into   
  42d99d:	jp     0x42d99a
  42d99f:	add    ch,dh
  42d9a1:	jo     0xbb6e868
  42d9a7:	add    BYTE PTR [eax],al
  42d9a9:	add    BYTE PTR [edx-0x738ae5a0],cl
  42d9af:	arpl   WORD PTR [eax+0x1],ax
  42d9b2:	mov    ecx,0xf3331271
  42d9b7:	in     eax,dx
  42d9b8:	sbb    al,0x89
  42d9ba:	xor    eax,0x3b09289e
  42d9bf:	cs mov dh,0xc
  42d9c2:	push   ebp
  42d9c3:	pop    ss
  42d9c4:	cmp    eax,0xbf42f40e
  42d9c9:	add    ecx,DWORD PTR [edi]
  42d9cb:	es cmp eax,0xdfe26801
  42d9d1:	pop    ds
  42d9d2:	jbe    0x42da34
  42d9d4:	add    al,0x84
  42d9d6:	in     eax,0xa5
  42d9d8:	(bad)  
  42d9d9:	jmp    FWORD PTR [eax+0x55]
  42d9dc:	add    BYTE PTR [ebp-0x79141d6c],al
  42d9e2:	aaa    
  42d9e3:	or     dl,BYTE PTR [edi+eiz*1]
  42d9e6:	mov    cl,0xfe
  42d9e8:	mov    cl,cl
  42d9ea:	jl     0x42da69
  42d9ec:	jp     0x42d9ad
  42d9ee:	call   DWORD PTR [edi-0x35fbbe78]
  42d9f4:	or     BYTE PTR [ebx],0xf1
  42d9f7:	and    eax,0xec69133a
  42d9fc:	or     al,0x24
  42d9fe:	aam    0x15
  42da00:	inc    eax
  42da01:	and    al,0xfc
  42da03:	mov    ah,0x79
  42da05:	inc    ebx
  42da06:	dec    eax
  42da07:	sbb    eax,0xc9d77eb5
  42da0c:	fdivp  st(7),st
  42da0e:	add    BYTE PTR [eax],al
  42da10:	add    BYTE PTR [ebx-0x4d],cl
  42da13:	push   es
  42da14:	add    bl,dh
  42da16:	sub    eax,0x31f41fb9
  42da1b:	mov    eax,0x7eadf302
  42da20:	imul   BYTE PTR [ebx-0x4aa8664]
  42da26:	lods   eax,DWORD PTR ds:[esi]
  42da27:	inc    cl
  42da29:	lods   eax,DWORD PTR ds:[esi]
  42da2a:	scas   al,BYTE PTR es:[edi]
  42da2b:	(bad)  
  42da2d:	or     DWORD PTR [ebp+0x773fffe],ebp
  42da33:	push   ds
  42da34:	push   eax
  42da35:	clc    
  42da36:	mov    ebp,ebp
  42da38:	mov    dh,0xe9
  42da3a:	mov    ds:0xe9f23e2a,eax
  42da3f:	(bad)  
  42da40:	fcomi  st,st(1)
  42da42:	push   es
  42da43:	jmp    0xea7d9fcb
  42da48:	jle    0x42da15
  42da4a:	mov    ds:0x4cb2b4f1,al
  42da4f:	call   0xea0fa631
  42da54:	add    esi,ebx
  42da56:	xchg   ch,bl
  42da58:	push   ebx
  42da59:	clc    
  42da5a:	mov    ecx,ecx
  42da5c:	mov    bh,0x99
  42da5e:	mov    ds:0xebf23da2,eax
  42da63:	iret   
  42da64:	outs   dx,DWORD PTR ds:[esi]
  42da65:	icebp  
  42da66:	push   es
  42da67:	jmp    0xe23657ef
  42da6c:	jle    0x42da15
  42da6e:	mov    ds:0x4cb2b4a9,al
  42da73:	call   0x42db63
  42da78:	pop    ebx
  42da79:	push   0x91f303e1
  42da7e:	and    eax,0xda0f18c5
  42da83:	jl     0x42daac
  42da85:	lahf   
  42da86:	xor    DWORD PTR [edx+edx*8-0x2d3fc4ed],0xd2f38087
  42da91:	lea    esp,[edx]
  42da93:	adc    al,0x31
  42da95:	dec    esp
  42da96:	call   0xe1caf685
  42da9b:	add    esi,ebx
  42da9d:	xchg   BYTE PTR [ebp-0x1b],cl
  42daa0:	jmp    0x19fb432e
  42daa5:	mov    ds:0xf0f23d2a,eax
  42daaa:	dec    edi
  42daab:	xor    esi,eax
  42daad:	push   es
  42daae:	add    cl,ch
  42dab0:	jne    0x42da96
  42dab2:	iret   
  42dab3:	in     eax,dx
  42dab4:	jmp    0xabc55dc8
  42dab9:	popf   
  42daba:	cli    
  42dabb:	xchg   edi,ebp
  42dabd:	pop    esp
  42dabe:	mov    esi,0x2faa738f
  42dac3:	xchg   DWORD PTR [ecx+0x48],ebp
  42dac6:	push   cs
  42dac7:	das    
  42dac8:	push   cs
  42dac9:	or     BYTE PTR [edi],ah
  42dacb:	adc    BYTE PTR [eax],ah
  42dacd:	push   es
  42dace:	add    cl,ch
  42dad0:	jo     0x42da6b
  42dad2:	or     al,0x74
  42dad4:	jmp    0xcd2b1c9d
  42dad9:	scas   eax,DWORD PTR es:[edi]
  42dada:	cmp    eax,0xe6
  42dadf:	lock push es
  42dae1:	adc    dl,0x9d
  42dae4:	or     eax,0x9d633484
  42dae9:	cli    
  42daea:	rcl    BYTE PTR [edi],1
  42daec:	cdq    
  42daed:	cli    
  42daee:	mov    esi,0xe605996f
  42daf3:	je     0x42db3a
  42daf5:	cld    
  42daf6:	scas   al,BYTE PTR es:[edi]
  42daf7:	inc    eax
  42daf8:	mov    WORD PTR [ecx-0x2],es
  42dafb:	push   esp
  42dafc:	jbe    0x42db09
  42dafe:	cmc    
  42daff:	xchg   eax,edi
  42db01:	pop    es
  42db02:	jmp    0xe8849ff7
  42db07:	pop    ecx
  42db08:	scas   eax,DWORD PTR es:[edi]
  42db09:	adc    esi,ebp
  42db0b:	lock push es
  42db0d:	or     esi,DWORD PTR [edi]
  42db0f:	sub    al,0x8c
  42db11:	jg     0x42daf4
  42db13:	mov    ds:0x2f650046,al
  42db18:	or     eax,0x6f86884
  42db1d:	add    BYTE PTR [edx-0x1d],ch
  42db20:	jmp    0x9d87:0xedbe91b
  42db27:	or     al,0x12
  42db29:	mov    DWORD PTR [eax],eax
  42db2b:	inc    esi
  42db2c:	stos   BYTE PTR es:[edi],al
  42db2d:	push   ss
  42db2e:	je     0x2a2b54fe
  42db34:	rol    BYTE PTR [eax+0x3],1
  42db37:	or     dl,al
  42db39:	inc    eax
  42db3a:	add    esp,eax
  42db3c:	fldcw  WORD PTR [ebx]
  42db3e:	add    DWORD PTR [edx],0x8
  42db41:	je     0x42db61
  42db43:	add    BYTE PTR [eax],al
  42db45:	add    BYTE PTR [ecx-0x7d],cl
  42db48:	(bad)  
  42db49:	jae    0x42db25
  42db4b:	fld    QWORD PTR [esi]
  42db4d:	test   DWORD PTR [edx+ecx*1+0x4d0c0000],edx
  42db54:	cli    
  42db55:	pop    es
  42db56:	xrelease mov BYTE PTR [eax],0x0
  42db5a:	retf   0x40cf
  42db5d:	add    bl,BYTE PTR [ebp-0x65f9467e]
  42db63:	add    eax,0xe8846be
  42db68:	jmp    0x486827
  42db6d:	(bad)  
  42db6e:	fmul   QWORD PTR [eax]
  42db70:	add    ecx,ebp
  42db72:	or     edx,DWORD PTR [eax]
  42db74:	add    BYTE PTR [eax],al
  42db76:	xchg   ebp,eax
  42db77:	pop    ds
  42db78:	mov    edx,0x589e0a8a
  42db7d:	inc    eax
  42db7e:	pop    edx
  42db7f:	mov    DWORD PTR [edx-0x6431f1],edi
  42db85:	dec    DWORD PTR [edx+0x4]
  42db88:	scas   al,BYTE PTR es:[edi]
  42db89:	dec    esi
  42db8a:	dec    eax
  42db8b:	loop   0x42dc07
  42db8d:	stc    
  42db8e:	inc    ecx
  42db8f:	add    al,0x7f
  42db91:	xchg   edx,eax
  42db92:	dec    esp
  42db93:	add    eax,0x862eff00
  42db98:	or     edi,DWORD PTR [edx+0x46f60b08]
  42db9e:	sbb    DWORD PTR [ecx-0x3a60f09b],esi
  42dba4:	clc    
  42dba5:	enter  0x13f3,0x2
  42dba9:	jmp    0xb542dbae
  42dbae:	lods   eax,DWORD PTR ds:[esi]
  42dbaf:	(bad)  
  42dbb0:	dec    DWORD PTR ds:0x953c0171
  42dbb6:	mov    al,0x97
  42dbb8:	mov    edi,0xfee2e6fd
  42dbbd:	or     eax,DWORD PTR [edx-0x180cfffc]
  42dbc3:	dec    eax
  42dbc4:	jmp    FWORD PTR [eax]
  42dbc6:	nop
  42dbc7:	xor    cl,BYTE PTR [edx]
  42dbc9:	pop    ds
  42dbca:	cmp    ch,0x94
  42dbcd:	mov    bl,0x10
  42dbcf:	mov    bh,0x23
  42dbd1:	cmc    
  42dbd2:	mul    dh
  42dbd4:	std    
  42dbd5:	les    ebp,FWORD PTR [esi-0x4e0ebe38]
  42dbdb:	fwait
  42dbdc:	inc    esi
  42dbdd:	in     eax,dx
  42dbde:	lods   eax,DWORD PTR ds:[esi]
  42dbdf:	(bad)  
  42dbe0:	stc    
  42dbe1:	xor    eax,0xf0497cad
  42dbe6:	sub    eax,0x30ec05a7
  42dbeb:	ret    
  42dbec:	call   DWORD PTR [esi+ebp*4+0x4a2b1ff]
  42dbf3:	adc    BYTE PTR [ebx],0x5f
  42dbf6:	out    dx,al
  42dbf7:	add    ecx,DWORD PTR [ebx]
  42dbf9:	jbe    0x42dc1b
  42dbfb:	add    al,0x0
  42dbfd:	repz sub eax,0x32fc08a7
  42dc03:	call   0xc8f0cf09
  42dc08:	inc    ecx
  42dc09:	icebp  
  42dc0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc0b:	xchg   ebp,eax
  42dc0c:	push   ss
  42dc0d:	in     eax,dx
  42dc0e:	lods   eax,DWORD PTR ds:[esi]
  42dc0f:	(bad)  
  42dc10:	stc    
  42dc11:	add    BYTE PTR [eax],al
  42dc13:	add    BYTE PTR [ebp-0xfb68354],dh
  42dc19:	sub    eax,0x30ec0fa7
  42dc1e:	xchg   ebx,eax
  42dc1f:	push   DWORD PTR [esi+ebp*4]
  42dc22:	push   DWORD PTR [ecx-0x79e0f8be]
  42dc28:	add    al,0x7b
  42dc2a:	test   al,0x3
  42dc2c:	call   0xf34746ba
  42dc31:	push   es
  42dc32:	imul   ebp,DWORD PTR [ebx-0x4dcd5407],0x426f03b2
  42dc3c:	cld    
  42dc3d:	pop    ds
  42dc3e:	xor    BYTE PTR [edx],al
  42dc40:	sbb    BYTE PTR [eax],0xda
  42dc43:	jns    0x42dc08
  42dc45:	fsub   QWORD PTR [esi-0x8]
  42dc48:	add    BYTE PTR [esi-0x17],0x36
  42dc4c:	push   esp
  42dc4d:	xchg   DWORD PTR [edi],ecx
  42dc4f:	(bad)  
  42dc50:	jmp    0xf34a0bde
  42dc55:	push   es
  42dc56:	sub    ecx,DWORD PTR [edx-0x3b]
  42dc59:	or     eax,0x6f7d410
  42dc5e:	jmp    0x5f470f14
  42dc63:	inc    edx
  42dc64:	lods   al,BYTE PTR ds:[esi]
  42dc65:	pop    ds
  42dc66:	loopne 0x42dc7a
  42dc68:	and    BYTE PTR [ecx-0x16],dl
  42dc6b:	jns    0x42dc30
  42dc6d:	fsub   QWORD PTR [esi+0x47]
  42dc70:	jg     0x42dcb8
  42dc72:	jmp    0xbfc9a8ad
  42dc77:	adc    eax,DWORD PTR [eax]
  42dc79:	add    BYTE PTR [eax],al
  42dc7b:	clc    
  42dc7c:	mov    DWORD PTR [edi+0x6],esi
  42dc7f:	repz push es
  42dc81:	stos   DWORD PTR es:[edi],eax
  42dc82:	dec    ecx
  42dc83:	jne    0x42dc91
  42dc85:	rcr    BYTE PTR [ebx-0x9],0x6
  42dc89:	jmp    0x6f468f3f
  42dc8e:	inc    ecx
  42dc8f:	pop    esp
  42dc90:	pop    ds
  42dc91:	nop
  42dc92:	or     al,ah
  42dc94:	call   0xdc665672
  42dc99:	dec    bx
  42dc9b:	pop    edi
  42dc9c:	inc    esi
  42dc9d:	jmp    0xffc9c0d8
  42dca2:	outs   dx,DWORD PTR ds:[esi]
  42dca3:	jmp    0x6:0xf560850b
  42dcaa:	das    
  42dcab:	mov    edx,0x705006a0
  42dcb0:	or     al,BYTE PTR [eax]
  42dcb2:	jmp    0xde627527
  42dcb7:	je     0x42dccd
  42dcb9:	add    eax,0x41c4f0e9
  42dcbe:	jmp    0x42dcb0
  42dcc0:	lods   eax,DWORD PTR ds:[esi]
  42dcc1:	imul   ebp,esp,0x328006f0
  42dcc7:	ficom  WORD PTR [ebx]
  42dcc9:	dec    ecx
  42dcca:	das    
  42dccb:	cmp    cl,BYTE PTR [eax]
  42dccd:	sub    esi,DWORD PTR [edx+0x44]
  42dcd0:	jecxz  0x42dced
  42dcd2:	ins    BYTE PTR es:[edi],dx
  42dcd3:	mov    esi,0xf5b08411
  42dcd8:	push   es
  42dcd9:	add    BYTE PTR [edx+0x3],dh
  42dcdc:	jne    0x42dde0
  42dce2:	add    eax,0xccad86ef
  42dce7:	push   cs
  42dce8:	daa    
  42dce9:	sub    eax,DWORD PTR [eax-0x7a]
  42dcec:	leave  
  42dced:	out    0xbc,al
  42dcef:	cmp    DWORD PTR [edi+0x41849955],0xfffffffe
  42dcf6:	mov    WORD PTR ds:0x4808ea0c,ds
  42dcfc:	adc    esi,DWORD PTR [ebx+0x2d]
  42dcff:	cli    
  42dd00:	and    edi,DWORD PTR [esi]
  42dd02:	dec    DWORD PTR [ecx+0x24]
  42dd05:	out    0x75,al
  42dd07:	sbb    DWORD PTR [edx-0x4f],0xffffff9c
  42dd0b:	mov    eax,ds:0x25b0d7e
  42dd10:	add    BYTE PTR [eax-0x16fffca9],dl
  42dd16:	jo     0x42dcad
  42dd18:	or     al,0x14
  42dd1a:	cmc    
  42dd1b:	enter  0x41,0x5b
  42dd1f:	cwde   
  42dd20:	loope  0x42dcd2
  42dd22:	retf   0x471
  42dd25:	xrstors [edx]
  42dd28:	add    al,0x0
  42dd2a:	sbb    al,ah
  42dd2c:	inc    eax
  42dd2d:	add    edi,edi
  42dd2f:	sbb    DWORD PTR [edi+0x5a29180],0xebf84
  42dd39:	add    BYTE PTR [edx-0x69f0f88f],bl
  42dd3f:	pop    esi
  42dd40:	(bad)  
  42dd41:	dec    DWORD PTR [edx]
  42dd43:	cdq    
  42dd44:	mov    edx,0x39
  42dd49:	inc    esi
  42dd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd4b:	push   cs
  42dd4c:	jne    0x42dd20
  42dd4e:	and    BYTE PTR [edi+0x24],al
  42dd51:	jmp    0x40c3:0xe624471a
  42dd58:	add    DWORD PTR [edx+0x5a034121],edi
  42dd5e:	jb     0x42dd6b
  42dd60:	jne    0x42dde1
  42dd62:	jecxz  0x42dd22
  42dd64:	inc    esi
  42dd65:	retf   
  42dd66:	xchg   edi,eax
  42dd67:	cli    
  42dd68:	cmp    BYTE PTR [esi+0x160f0ea5],al
  42dd6e:	pop    ebx
  42dd6f:	(bad)  
  42dd70:	call   FWORD PTR [edx-0x2ef389e0]
  42dd76:	push   0x6e
  42dd78:	sub    al,0x11
  42dd7a:	ss and al,0x14
  42dd7d:	adc    DWORD PTR [esi+0x24],eax
  42dd80:	adc    cl,ah
  42dd82:	enter  0x8b4a,0x4c
  42dd86:	ins    BYTE PTR es:[edi],dx
  42dd87:	int    0x85
  42dd89:	dec    edx
  42dd8a:	aad    0x1
  42dd8c:	mov    dl,BYTE PTR [esi+esi*8]
  42dd8f:	and    eax,DWORD PTR [esi+ebx*2+0x65468805]
  42dd96:	pop    ds
  42dd97:	inc    ecx
  42dd98:	pop    ss
  42dd99:	repz retf 
  42dd9b:	sub    DWORD PTR [eax+0xaf9c3b7],ecx
  42dda1:	outs   dx,BYTE PTR ds:[esi]
  42dda2:	pop    ecx
  42dda3:	mov    cl,0xfa
  42dda5:	cmp    al,0x30
  42dda7:	and    esp,DWORD PTR [edi+ebx*8]
  42ddaa:	scas   eax,DWORD PTR es:[edi]
  42ddab:	fwait
  42ddac:	xchg   BYTE PTR [eax],al
  42ddae:	add    BYTE PTR [eax],al
  42ddb0:	imul   DWORD PTR [edi-0x66d78002]
  42ddb6:	aaa    
  42ddb7:	add    dh,BYTE PTR ds:0x82d0365
  42ddbd:	test   ecx,edi
  42ddbf:	mov    cl,0xbd
  42ddc1:	mov    cl,0x78
  42ddc3:	mov    esi,0xe87f0ff7
  42ddc8:	jmp    0x3d0e:0x7f494353
  42ddcf:	je     0x42ddd1
  42ddd1:	les    eax,FWORD PTR [bx+di-0xf]
  42ddd5:	lods   eax,DWORD PTR ds:[esi]
  42ddd6:	stc    
  42ddd7:	test   BYTE PTR [ecx-0x5e],dl
  42ddda:	(bad)  
  42dddb:	push   DWORD PTR [ebx-0x5c]
  42ddde:	ds jmp 0x41800d
  42dde4:	pop    es
  42dde5:	xchg   ecx,eax
  42dde6:	stc    
  42dde7:	xchg   esp,eax
  42dde8:	mov    bl,0x9c
  42ddea:	mov    ch,0x23
  42ddec:	out    0x8,al
  42ddee:	out    dx,al
  42ddef:	mov    WORD PTR [eax],?
  42ddf1:	(bad)  
  42ddf2:	jmp    0xf303:0xb72cf408
  42ddf9:	lods   eax,DWORD PTR ds:[esi]
  42ddfa:	sti    
  42ddfb:	mov    ecx,0x2f9c31b0
  42de00:	push   0x27
  42de02:	inc    edx
  42de03:	or     BYTE PTR [edx-0x4],bh
  42de06:	(bad)  
  42de07:	call   0x417fcd
  42de0c:	mov    bh,0x48
  42de0e:	xor    ecx,DWORD PTR [ecx]
  42de10:	xor    eax,0x9fde4
  42de15:	add    BYTE PTR [eax],al
  42de17:	pop    edx
  42de18:	pop    es
  42de19:	int3   
  42de1a:	pop    es
  42de1b:	repz push es
  42de1d:	frstor [eax]
  42de1f:	call   0x34f18695
  42de24:	jecxz  0x42ddff
  42de26:	jnp    0x42ddda
  42de28:	or     BYTE PTR [eax-0x16f908e8],dl
  42de2e:	cmp    BYTE PTR [eax+0x3103dce2],0x45
  42de35:	call   0xebc5d82b
  42de3a:	pop    es
  42de3b:	repz push es
  42de3d:	outs   dx,BYTE PTR ds:[esi]
  42de3e:	sub    eax,0x9b5181e7
  42de43:	les    ebx,FWORD PTR [ebx+0x54f9ad49]
  42de49:	mov    dl,0x1
  42de4b:	jne    0x42de15
  42de4d:	in     al,dx
  42de4e:	jecxz  0x42dec5
  42de50:	popf   
  42de51:	jecxz  0x42de4f
  42de53:	jns    0x42deae
  42de55:	call   0x6d4ed15d
  42de5a:	test   esp,ebx
  42de5c:	fwait
  42de5d:	call   0xe249a9e2
  42de62:	xchg   DWORD PTR [ebp+0x4403e907],esp
  42de68:	scas   al,BYTE PTR es:[edi]
  42de69:	out    dx,eax
  42de6a:	cld    
  42de6b:	jo     0x42de25
  42de6d:	in     eax,0x3
  42de6f:	repz dec ebp
  42de71:	jge    0x42de72
  42de73:	cmp    ecx,DWORD PTR [eiz*2-0x17645a44]
  42de7a:	call   0xe906:0x48000000
  42de81:	add    esi,DWORD PTR [ebx-0x61]
  42de84:	or     ch,bh
  42de86:	jo     0x42dee8
  42de88:	in     eax,0x3
  42de8a:	xrelease xchg BYTE PTR [ebp-0xd75160d],bh
  42de91:	pop    es
  42de92:	repz push es
  42de94:	add    BYTE PTR [ecx-0x65],ch
  42de97:	fimul  WORD PTR [edx]
  42de99:	pop    esi
  42de9a:	inc    ebp
  42de9b:	pop    es
  42de9c:	add    cl,ch
  42de9e:	fisttp DWORD PTR [ebp+0x8]
  42dea1:	adc    ebp,edi
  42dea3:	bts    DWORD PTR [edx+0x17fb04ea],0xf3
  42deab:	sbb    ebp,eax
  42dead:	mov    ecx,0x81873669
  42deb2:	mov    ebx,0xec05e7b1
  42deb7:	push   es
  42deb8:	add    dl,ch
  42deba:	pop    eax
  42debb:	or     al,0xd6
  42debd:	and    ch,BYTE PTR [ebp-0x1294f4f6]
  42dec3:	add    al,BYTE PTR [eax]
  42dec5:	jmp    0xcf79ec91
  42deca:	or     BYTE PTR [eax],dl
  42decc:	jle    0x42df11
  42dece:	repz push es
  42ded0:	add    BYTE PTR [edx+0x2f],dh
  42ded3:	cld    
  42ded4:	mov    esi,0xa9d986a
  42ded9:	test   DWORD PTR gs:[ecx+0x2059e9fa],ebx
  42dee0:	or     BYTE PTR [eax+0x0],dh
  42dee3:	add    BYTE PTR [eax],al
  42dee5:	es or  ebp,ecx
  42dee8:	mov    ah,0xf3
  42deea:	push   es
  42deeb:	add    BYTE PTR [edi],cl
  42deed:	cs call 0xe6f8:0x86f3b788
  42def5:	mov    bh,0x85
  42def7:	shl    ah,cl
  42def9:	pop    eax
  42defa:	popf   
  42defb:	or     dh,BYTE PTR [edi]
  42defd:	rcl    esp,0x7d
  42df00:	dec    ecx
  42df01:	sbb    edx,0xffffffff
  42df04:	in     eax,dx
  42df05:	jae    0x42dec9
  42df07:	cld    
  42df08:	(bad)  
  42df09:	pop    eax
  42df0a:	sbb    bh,cl
  42df0c:	out    0x89,eax
  42df0e:	xor    DWORD PTR [ecx],0x0
  42df11:	mov    DWORD PTR [esi],eax
  42df13:	add    dh,al
  42df15:	int3   
  42df16:	add    BYTE PTR [eax],dl
  42df18:	jmp    0x42e114
  42df1d:	fldcw  WORD PTR [ebx+0x8]
  42df20:	je     0x42df48
  42df22:	xor    bh,0xf
  42df25:	(bad)  
  42df26:	cmc    
  42df27:	jp     0x42deea
  42df29:	push   0xffffff82
  42df2b:	test   DWORD PTR [edx],0xfd8d8825
  42df31:	jne    0x42dfa1
  42df33:	pusha  
  42df34:	(bad)  
  42df35:	or     al,0x4
  42df37:	xor    BYTE PTR [eax],al
  42df39:	jae    0x42deda
  42df3b:	stc    
  42df3c:	call   FWORD PTR [edx]
  42df3e:	jo     0x42df80
  42df40:	add    esp,DWORD PTR [eax-0x6c800524]
  42df46:	pop    es
  42df47:	pop    es
  42df48:	xchg   DWORD PTR [eax],eax
  42df4a:	add    BYTE PTR [eax],al
  42df4c:	pushf  
  42df4d:	outs   dx,DWORD PTR ds:[esi]
  42df4e:	cmc    
  42df4f:	jmp    DWORD PTR ds:0x883ad018
  42df55:	(bad)  
  42df56:	xchg   ebx,eax
  42df57:	inc    eax
  42df58:	or     bl,BYTE PTR [ebp+0x6e277783]
  42df5e:	cmc    
  42df5f:	and    BYTE PTR [ebx],0x7
  42df62:	pop    es
  42df63:	test   edi,ebp
  42df65:	add    BYTE PTR [eax],al
  42df67:	add    BYTE PTR [eax*2-0x310cee06],cl
  42df6e:	cld    
  42df6f:	(bad)  
  42df70:	fisubr DWORD PTR [edi+0x40]
  42df73:	add    eax,DWORD PTR [eax-0x23]
  42df76:	cli    
  42df77:	jg     0x42df6c
  42df79:	cwde   
  42df7a:	add    eax,0xf56e8c87
  42df7f:	inc    ebp
  42df81:	pop    ss
  42df82:	sar    BYTE PTR [edx],1
  42df84:	or     dh,bh
  42df86:	xchg   ebx,eax
  42df87:	inc    eax
  42df88:	mov    bl,BYTE PTR [ebx+eax*4-0x5a4d0cb9]
  42df8f:	cli    
  42df90:	jae    0x42df48
  42df92:	sti    
  42df93:	or     dh,BYTE PTR [esi+0x1a]
  42df96:	add    eax,0x4061f300
  42df9b:	inc    BYTE PTR [ebx]
  42df9d:	(bad)  
  42df9e:	push   edx
  42df9f:	std    
  42dfa0:	fs scas eax,DWORD PTR es:[edi]
  42dfa2:	jle    0x42df9a
  42dfa4:	jmp    0x5d0f5f39
  42dfa9:	js     0x42df50
  42dfab:	or     al,BYTE PTR [ebp+0x7f01e9]
  42dfb1:	add    BYTE PTR [eax],al
  42dfb3:	pop    ebx
  42dfb4:	lahf   
  42dfb5:	rol    BYTE PTR [ecx-0xe],0x5e
  42dfb9:	sub    dl,BYTE PTR [esi]
  42dfbb:	stos   DWORD PTR es:[edi],eax
  42dfbc:	xchg   ebx,eax
  42dfbd:	cmc    
  42dfbe:	inc    edi
  42dfbf:	cld    
  42dfc0:	sub    dh,BYTE PTR [ebx-0x3]
  42dfc3:	and    al,0xaf
  42dfc5:	jle    0x42dfd0
  42dfc7:	add    esi,DWORD PTR [edi]
  42dfc9:	jnp    0x42dfc8
  42dfcb:	adc    al,0xaf
  42dfcd:	jle    0x42dfd8
  42dfcf:	sti    
  42dfd0:	inc    esi
  42dfd1:	and    edi,esi
  42dfd3:	add    al,0xaf
  42dfd5:	jle    0x42dfe0
  42dfd7:	div    DWORD PTR [esi]
  42dfd9:	sub    edi,esi
  42dfdb:	hlt    
  42dfdc:	scas   al,BYTE PTR es:[edi]
  42dfdd:	rol    BYTE PTR [ecx-0xe],0x0
  42dfe1:	popf   
  42dfe2:	data16 icebp 
  42dfe4:	lods   eax,DWORD PTR ds:[esi]
  42dfe5:	inc    BYTE PTR [esi+0x478f6b5]
  42dfeb:	rep lods eax,DWORD PTR ds:[esi]
  42dfed:	jg     0x42dfae
  42dfef:	inc    edi
  42dff0:	popf   
  42dff1:	jl     0x42dff4
  42dff3:	shrd   ebp,esi,cl
  42dff6:	mov    cl,0xb3
  42dff8:	cdq    
  42dff9:	lds    edx,FWORD PTR [esi]
  42dffb:	mov    bl,0x2d
  42dffd:	lahf   
  42dffe:	out    dx,al
  42dfff:	jo     0x42dfef
  42e001:	adc    esp,edi
  42e003:	lock pop esp
  42e005:	mov    esi,0x2b076b3f
  42e00a:	add    ebp,DWORD PTR [eax+ebx*1+0x1]
  42e00e:	jg     0x42df99
  42e010:	or     BYTE PTR [ebp-0x18],ch
  42e013:	xchg   BYTE PTR [eax+0x7ce8],bl
  42e019:	add    BYTE PTR [edx+0x347f9998],ch
  42e01f:	or     BYTE PTR [ebp+0x52],ah
  42e022:	cbw    
  42e024:	mov    cl,0x7e
  42e026:	mov    dl,0xef
  42e028:	add    al,0x81
  42e02a:	call   0x5e84702e
  42e02f:	cwde   
  42e030:	cdq    
  42e031:	test   BYTE PTR [ebp+0xd],al
  42e034:	loop   0x42e0b4
  42e036:	scas   eax,DWORD PTR es:[edi]
  42e037:	(bad)
  42e03b:	and    ch,ch
  42e03d:	add    eax,DWORD PTR [ecx+0x41]
  42e040:	rol    BYTE PTR [ebx+0x63e81f9],cl
  42e046:	repz push es
  42e048:	pop    edi
  42e049:	or     dh,BYTE PTR [ebp-0x3c]
  42e04c:	sub    BYTE PTR [esi+edx*1-0x18d0f7a0],bl
  42e053:	outs   dx,BYTE PTR ds:[esi]
  42e054:	out    0xf8,eax
  42e056:	outs   dx,DWORD PTR ds:[esi]
  42e057:	xchg   ecx,eax
  42e058:	out    0x3,eax
  42e05a:	repz mov ebp,DWORD PTR [edx-0x12b69205]
  42e061:	jl     0x42e01f
  42e063:	or     ebx,DWORD PTR [eax]
  42e065:	das    
  42e066:	hlt    
  42e067:	mov    esp,DWORD PTR [edx]
  42e069:	pushf  
  42e06a:	add    eax,DWORD PTR [edx]
  42e06c:	jmp    0x95094e74
  42e071:	xchg   ecx,eax
  42e072:	dec    esp
  42e073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e074:	in     eax,0xf8
  42e076:	add    bl,0xfd
  42e079:	test   ebp,ebx
  42e07b:	lds    esp,FWORD PTR [ebp-0x54]
  42e07e:	add    BYTE PTR [eax],al
  42e080:	add    BYTE PTR [ecx+0x32c1f012],bh
  42e086:	push   es
  42e087:	add    BYTE PTR [ebp-0x16ff3f77],dh
  42e08d:	lock xchg dh,bl
  42e090:	jmp    0x978c:0x7ce808c4
  42e097:	cli    
  42e098:	ins    BYTE PTR es:[edi],dx
  42e099:	mov    al,0x13
  42e09b:	or     DWORD PTR [edi-0x2fc2f9ce],esp
  42e0a1:	add    al,0x7
  42e0a3:	add    cl,ch
  42e0a5:	out    dx,eax
  42e0a6:	(bad)
  42e0a9:	fs xchg edi,eax
  42e0ab:	cli    
  42e0ac:	xor    BYTE PTR fs:[esp+eax*4],cl
  42e0b0:	inc    ecx
  42e0b1:	mov    bl,BYTE PTR [edx+edi*8-0x297ccf26]
  42e0b8:	out    0x75,al
  42e0ba:	push   edi
  42e0bb:	inc    edi
  42e0bc:	push   0xffffff90
  42e0be:	or     bh,BYTE PTR [edi-0x57]
  42e0c1:	xor    al,0xae
  42e0c3:	inc    edi
  42e0c4:	jle    0x42e121
  42e0c6:	pushf  
  42e0c7:	jle    0x42e0be
  42e0c9:	inc    esp
  42e0ca:	out    dx,eax
  42e0cb:	push   ebx
  42e0cd:	sbb    BYTE PTR [eax-0x7200f2bd],al
  42e0d3:	inc    ebx
  42e0d4:	add    eax,0xd437fff
  42e0d9:	adc    edi,DWORD PTR [edi]
  42e0db:	mov    DWORD PTR [ebp-0x4316f8e4],esp
  42e0e1:	icebp  
  42e0e2:	push   es
  42e0e3:	add    dh,ch
  42e0e5:	add    BYTE PTR [eax],al
  42e0e7:	add    BYTE PTR [edx+0x55],ah
  42e0ea:	test   DWORD PTR [ecx-0x18],ebp
  42e0ed:	xor    DWORD PTR [eax-0x17],eax
  42e0f0:	aam    0x91
  42e0f2:	or     ch,BYTE PTR [ebp+0x17]
  42e0f5:	xchg   ebp,eax
  42e0f6:	cli    
  42e0f7:	jmp    0x710231c7
  42e0fc:	dec    ecx
  42e0fd:	dec    eax
  42e0fe:	or     BYTE PTR [eax+0x22],ah
  42e101:	add    eax,edx
  42e103:	add    BYTE PTR [ecx+ecx*1+0x98be934],al
  42e10a:	add    BYTE PTR [eax],al
  42e10c:	sbb    ah,BYTE PTR [ebx+0xb]
  42e10f:	jne    0x42e0a4
  42e111:	enter  0x140,0xf4
  42e115:	jae    0x42e150
  42e117:	add    DWORD PTR [edx+0x59b6070a],ebx
  42e11d:	adc    DWORD PTR [ebx+0x4acd08],ecx
  42e123:	xor    BYTE PTR [eax-0x25e88c92],0x61
  42e12a:	xor    DWORD PTR [ebx+edx*2-0x76],esi
  42e12e:	icebp  
  42e12f:	and    BYTE PTR ds:0x4a020887,bh
  42e135:	or     bh,BYTE PTR [esi-0x1868a4ba]
  42e13b:	push   ds
  42e13c:	pop    ebx
  42e13d:	or     al,BYTE PTR [eax]
  42e13f:	mov    ebp,esp
  42e141:	mov    es,WORD PTR [ecx-0x39eebdba]
  42e147:	movzx  ecx,bl
  42e14a:	inc    al
  42e14c:	add    BYTE PTR [eax],al
  42e14e:	add    BYTE PTR [edx+0x7],bh
  42e151:	sbb    eax,0x3d
  42e154:	sub    al,0xbd
  42e156:	cdq    
  42e157:	or     edx,eax
  42e159:	or     edx,ecx
  42e15b:	rcr    DWORD PTR [ebp+0x5],1
  42e15e:	sbb    BYTE PTR [eax+0x2500000b],0x93
  42e165:	xor    DWORD PTR [esi+0x2],ebx
  42e168:	popf   
  42e169:	jl     0x42e1e2
  42e16b:	fisttp DWORD PTR [ecx]
  42e16d:	add    BYTE PTR [ebx-0x7c4055e7],cl
  42e173:	and    ch,BYTE PTR [esi+0x5]
  42e176:	test   BYTE PTR [eax+0x4300000a],al
  42e17c:	dec    ebp
  42e17d:	or     BYTE PTR [ecx-0x170d920d],cl
  42e183:	cdq    
  42e184:	lahf   
  42e185:	(bad)  
  42e186:	push   DWORD PTR [ebx+0x8]
  42e189:	stc    
  42e18a:	or     dh,BYTE PTR [esi-0x12]
  42e18d:	add    eax,DWORD PTR [eax]
  42e18f:	repz or BYTE PTR [edi+0x7f],bh
  42e193:	cwde   
  42e194:	test   eax,0xb2a384f1
  42e199:	mov    eax,ds:0xfbed78fa
  42e19e:	jle    0x42e1ad
  42e1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1a1:	inc    BYTE PTR [esi]
  42e1a3:	xor    eax,0x73082fb4
  42e1a8:	popf   
  42e1a9:	fsubp  st(0),st
  42e1ab:	cmp    eax,0x2dfaa15a
  42e1b0:	in     eax,0x4
  42e1b2:	cmp    DWORD PTR [eax],eax
  42e1b4:	add    BYTE PTR [eax],al
  42e1b6:	dec    edx
  42e1b7:	xchg   dh,bh
  42e1b9:	push   ebx
  42e1bb:	sbb    BYTE PTR [eax+0xc],al
  42e1be:	js     0x42e1b3
  42e1c0:	fisttp WORD PTR [edi]
  42e1c2:	js     0x42e1b1
  42e1c4:	test   DWORD PTR [esi-0x3d2a5863],0x9913e2f0
  42e1ce:	call   0xa1490b2c
  42e1d3:	mov    ds:0xaba0d7e5,eax
  42e1d8:	jne    0x42e198
  42e1da:	push   0xd77b7dce
  42e1df:	pop    es
  42e1e0:	add    al,0x75
  42e1e2:	out    dx,eax
  42e1e3:	and    esp,DWORD PTR es:[ebx+ebx*8]
  42e1e7:	or     ah,cl
  42e1e9:	mov    WORD PTR [edi+0x3788a1a4],gs
  42e1ef:	or     dl,BYTE PTR [edi+edx*1]
  42e1f2:	mov    ecx,0xb206be29
  42e1f7:	daa    
  42e1f8:	inc    ebp
  42e1f9:	or     BYTE PTR [edx+0x7],ch
  42e1fc:	mov    bl,0xf7
  42e1fe:	inc    edi
  42e1ff:	sub    ah,BYTE PTR [ebx]
  42e201:	cmp    eax,0x45fdd0f2
  42e206:	jae    0x42e198
  42e208:	fcomi  st,st(6)
  42e20a:	outs   dx,DWORD PTR ds:[esi]
  42e20b:	xchg   ebx,edi
  42e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e20e:	test   eax,0xfcdf7c88
  42e213:	push   es
  42e214:	sub    edi,DWORD PTR ds:0x3a74cff2
  42e21a:	add    BYTE PTR [eax],al
  42e21c:	add    BYTE PTR [esp+edx*1-0x3],ch
  42e220:	jle    0x42e1ab
  42e222:	sbb    ecx,DWORD PTR ds:0xf0eb2079
  42e228:	js     0x42e25a
  42e22a:	jmp    0x42e224
  42e22c:	fdiv   DWORD PTR [esi]
  42e22e:	aaa    
  42e22f:	outs   dx,BYTE PTR ds:[esi]
  42e230:	mov    dh,0x69
  42e232:	mov    esp,0xe0c463
  42e237:	pop    edi
  42e238:	ds add bl,ch
  42e23b:	(bad)  
  42e23c:	clc    
  42e23d:	bnd jle 0x42e26a
  42e240:	or     eax,0xdff24d75
  42e245:	leave  
  42e246:	jle    0x42e274
  42e248:	loopne 0x42e233
  42e24a:	add    esp,DWORD PTR [edi+esi*1+0x44]
  42e24e:	xchg   esp,eax
  42e24f:	add    DWORD PTR [ecx+0x3e0ea90],0xa968f60c
  42e259:	test   BYTE PTR [ebx],0x64
  42e25c:	repnz pop ds
  42e25e:	xchg   esp,eax
  42e25f:	popa   
  42e260:	adc    DWORD PTR [edx-0x4d4216f6],0xb0a51605
  42e26a:	jmp    0x78d8:0xeab078f8
  42e271:	in     al,0xcf
  42e273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e274:	fist   WORD PTR [eax]
  42e276:	add    al,0x0
  42e278:	ins    BYTE PTR es:[edi],dx
  42e279:	sahf   
  42e27a:	mov    ds:0x335a2efa,eax
  42e27f:	or     BYTE PTR [edx+0x0],ch
  42e282:	add    BYTE PTR [eax],al
  42e284:	sbb    ebp,ebx
  42e286:	sbb    ebp,ecx
  42e288:	mov    edi,0xf0e9e887
  42e28d:	push   es
  42e28e:	xchg   DWORD PTR [edx-0x9407548],ebp
  42e294:	sub    al,0xae
  42e296:	(bad)  
  42e297:	call   0xcd966e8c
  42e29c:	hlt    
  42e29d:	mov    ecx,edx
  42e29f:	ret    0xeadc
  42e2a2:	sbb    edi,DWORD PTR [eax]
  42e2a4:	or     bh,BYTE PTR [esi+0x5405b9fa]
  42e2aa:	jae    0x42e28f
  42e2ac:	cli    
  42e2ad:	inc    ebp
  42e2ae:	adc    eax,DWORD PTR ds:0x70feff72
  42e2b4:	cs clc 
  42e2b6:	icebp  
  42e2b7:	daa    
  42e2b8:	test   BYTE PTR [edi],0xb
  42e2bb:	ins    DWORD PTR es:[edi],dx
  42e2bc:	iret   
  42e2bd:	xchg   ebx,eax
  42e2be:	cli    
  42e2bf:	jmp    0xb92bab9f
  42e2c4:	adc    DWORD PTR [eax-0x7f98c06],0xfe446023
  42e2ce:	call   0x49d34c
  42e2d3:	jae    0x42e2c3
  42e2d5:	mul    DWORD PTR [ebx]
  42e2d7:	popa   
  42e2d8:	sbb    al,0xfb
  42e2da:	call   0x49d34c
  42e2df:	arpl   si,dx
  42e2e1:	mul    DWORD PTR [ebx]
  42e2e3:	je     0x42e2e9
  42e2e5:	add    ah,bh
  42e2e7:	loop   0x42e2e9
  42e2e9:	add    BYTE PTR [eax],al
  42e2eb:	mov    al,BYTE PTR [ebp+0x13]
  42e2ee:	or     eax,0x4214ff6c
  42e2f3:	ret    0x418c
  42e2f6:	add    ch,cl
  42e2f8:	mov    dl,0x90
  42e2fa:	or     al,0xbc
  42e2fc:	outs   dx,DWORD PTR ds:[esi]
  42e2fd:	mov    cl,BYTE PTR [si+0x2403]
  42e302:	test   DWORD PTR [esi-0x32b97d6f],esi
  42e308:	ins    DWORD PTR es:[edi],dx
  42e309:	xor    ecx,0xc6816ae5
  42e30f:	repnz adc edi,ebp
  42e312:	dec    edx
  42e314:	adc    DWORD PTR [ebx+0x110c974],edi
  42e31a:	and    al,0x99
  42e31c:	fwait
  42e31d:	mov    al,0xc0
  42e31f:	popf   
  42e320:	mov    ebp,0x6609c011
  42e325:	jmp    0xe1df3dad
  42e32a:	add    ebp,ecx
  42e32c:	retf   0x883a
  42e32f:	int3   
  42e330:	or     eax,DWORD PTR [ebx-0xa807d81]
  42e336:	pmaxub mm4,mm3
  42e339:	jmp    0xc8c5893d
  42e33e:	(bad)  
  42e33f:	jge    0x42e2c1
  42e341:	mov    edx,0xea47ce0f
  42e346:	call   DWORD PTR [ebp+0x2e174081]
  42e34c:	jge    0x42e354
  42e34e:	pop    es
  42e34f:	add    BYTE PTR [eax],al
  42e351:	add    dl,dl
  42e353:	cmp    al,0xf
  42e355:	jmp    0x385c2e
  42e35a:	mov    al,ds:0xbd240f3c
  42e35f:	test   BYTE PTR [esi],0xeb
  42e362:	or     eax,0x2e174084
  42e367:	adc    eax,DWORD PTR [edi]
  42e369:	sbb    DWORD PTR [edx+0x4c8a0f3c],eax
  42e36f:	lea    esp,[edx-0x78570c81]
  42e375:	push   ds
  42e376:	add    al,BYTE PTR [ecx-0x61]
  42e379:	and    ecx,DWORD PTR [edi+0x79e6fa9b]
  42e37f:	sbb    al,0x20
  42e381:	and    al,0x7
  42e383:	mov    al,ds:0x5c682a12
  42e388:	or     al,BYTE PTR [ebp-0x791a8c4d]
  42e38e:	pop    ds
  42e38f:	int3   
  42e390:	xacquire xchg BYTE PTR [esp+eax*8+0x4edf244a],ch
  42e398:	mov    ecx,ecx
  42e39a:	lods   al,BYTE PTR ds:[esi]
  42e39b:	out    dx,eax
  42e39c:	mov    BYTE PTR [edi+0x418c961f],bh
  42e3a2:	add    al,0xc4
  42e3a4:	or     BYTE PTR [ebx],0xef
  42e3a7:	daa    
  42e3a8:	inc    esi
  42e3a9:	adc    eax,DWORD PTR [ebp-0xb85091f]
  42e3af:	sub    dh,bl
  42e3b1:	cli    
  42e3b2:	jl     0x42e36c
  42e3b4:	cmp    DWORD PTR [ebx+0x0],0xffcf0000
  42e3bb:	add    esi,DWORD PTR [ebp+ebx*1+0x15]
  42e3bf:	inc    edx
  42e3c0:	add    al,0x6e
  42e3c2:	pop    edi
  42e3c3:	adc    ah,BYTE PTR [ebx]
  42e3c5:	push   0x681fe7f3
  42e3ca:	jo     0x42e3b5
  42e3cc:	dec    ebx
  42e3cd:	pop    ss
  42e3ce:	shl    BYTE PTR [ebx],0x87
  42e3d1:	xor    eax,0x3384ae70
  42e3d6:	repz or DWORD PTR [esi+0x7de298ad],eax
  42e3dd:	call   FWORD PTR [ebp+0x19fc4186]
  42e3e3:	dec    ecx
  42e3e4:	adc    ebx,DWORD PTR [eax+ebp*4+0x2015da87]
  42e3eb:	sahf   
  42e3ec:	jle    0x42e37d
  42e3ee:	push   es
  42e3ef:	or     eax,0xd1504fc
  42e3f4:	(bad)  
  42e3f5:	mov    ebp,0x80c36bfa
  42e3fa:	jmp    0x42e459
  42e3fc:	aaa    
  42e3fd:	pop    ss
  42e3fe:	out    dx,eax
  42e3ff:	ins    DWORD PTR es:[edi],dx
  42e400:	ror    BYTE PTR ds:0xaa8e97bd,cl
  42e406:	nop
  42e407:	sbb    BYTE PTR [eax-0x7220e46c],cl
  42e40d:	xor    bh,al
  42e40f:	int3   
  42e410:	mov    eax,edi
  42e412:	or     BYTE PTR [ecx+0x49],dh
  42e415:	loopne 0x42e3af
  42e417:	stos   BYTE PTR es:[edi],al
  42e418:	cli    
  42e419:	cmp    DWORD PTR [eax],eax
  42e41b:	outs   dx,DWORD PTR fs:[esi]
  42e41d:	add    BYTE PTR [eax],al
  42e41f:	add    BYTE PTR [edx+0x2f8e0190],ch
  42e425:	neg    DWORD PTR [ecx+0xb7c4441]
  42e42b:	inc    eax
  42e42c:	push   ebp
  42e42d:	add    ebp,ecx
  42e42f:	dec    esp
  42e430:	push   ebp
  42e431:	inc    ebp
  42e432:	jmp    0xe9883f66
  42e437:	fs push esi
  42e439:	inc    ebp
  42e43a:	jmp    0xe988330f
  42e43f:	cdq    
  42e440:	xchg   esi,eax
  42e441:	inc    ebp
  42e442:	jmp    0xe9887052
  42e447:	std    
  42e448:	xchg   ebp,eax
  42e449:	inc    ebp
  42e44a:	jmp    0xe988723e
  42e44f:	loope  0x42e3e6
  42e451:	inc    ebp
  42e452:	jmp    0xe9887094
  42e457:	fs xchg ebp,eax
  42e459:	inc    ebp
  42e45a:	jmp    0xe98871bf
  42e45f:	xchg   ebx,eax
  42e460:	push   ebp
  42e461:	inc    ebp
  42e462:	jmp    0xe9883d49
  42e467:	sub    DWORD PTR [edi+0x45],ecx
  42e46a:	add    cl,ch
  42e46c:	push   0x5c
  42e46e:	cmp    eax,0x3d5b8be9
  42e473:	jmp    0xe9804644
  42e478:	test   DWORD PTR [ebp+0x3d],ebx
  42e47b:	jmp    0xe98042b9
  42e480:	test   eax,0xe93d5d
  42e485:	add    BYTE PTR [eax],al
  42e487:	test   eax,0x99e93d5d
  42e48c:	pop    ebp
  42e48d:	cmp    eax,0x3d5d99e9
  42e492:	jmp    0xe9804220
  42e497:	xchg   esi,eax
  42e498:	pop    ebp
  42e499:	cmp    eax,0x3d5d8ee9
  42e49e:	jmp    0xe980421c
  42e4a3:	pop    esi
  42e4a4:	pop    ebp
  42e4a5:	cmp    eax,0x3d5d56e9
  42e4aa:	jmp    0xe98041fd
  42e4af:	inc    esi
  42e4b0:	pop    ebp
  42e4b1:	cmp    eax,0x3d5d5ee9
  42e4b6:	jmp    0xe9804211
  42e4bb:	mov    esp,0xdbe93d5b
  42e4c0:	pop    ebx
  42e4c1:	cmp    eax,0x3d5c79e9
  42e4c6:	jmp    0xe98041b2
  42e4cb:	int    0x5c
  42e4cd:	cmp    eax,0x3d5cd3e9
  42e4d2:	jmp    0xe980410a
  42e4d7:	popa   
  42e4d8:	pop    esp
  42e4d9:	cmp    eax,0x3d5f41e9
  42e4de:	jmp    0xe9804428
  42e4e3:	jb     0x42e54c
  42e4e5:	cmp    eax,0xab331a00
  42e4ea:	inc    edx
  42e4eb:	add    BYTE PTR [eax],al
  42e4ed:	add    BYTE PTR [edx],cl
  42e4ef:	shr    BYTE PTR [ecx-0x5cd2f5be],cl
  42e4f5:	inc    edx
  42e4f6:	sbb    dl,BYTE PTR [ebx+0x381a42a7]
  42e4fc:	scas   eax,DWORD PTR es:[edi]
  42e4fd:	inc    edx
  42e4fe:	or     bl,BYTE PTR [edi-0x4d]
  42e501:	inc    edx
  42e502:	or     dl,BYTE PTR [ebx+0x7fda42b0]
  42e508:	mov    al,0x42
  42e50a:	ficom  DWORD PTR [ecx+esi*4]
  42e50d:	inc    edx
  42e50e:	retf   0xa79b
  42e511:	inc    edx
  42e512:	retf   0xb3ad
  42e515:	inc    edx
  42e516:	fidiv  DWORD PTR [edx]
  42e518:	mov    cl,0x42
  42e51a:	fiadd  DWORD PTR [edi+ebp*4]
  42e51d:	inc    edx
  42e51e:	retf   0xaeda
  42e521:	inc    edx
  42e522:	retf   0xa815
  42e525:	inc    edx
  42e526:	call   0xae70:0x9a42b3b7
  42e52d:	inc    edx
  42e52e:	mov    dl,BYTE PTR [eax-0x56]
  42e531:	inc    edx
  42e532:	mov    bl,BYTE PTR [edi-0x56]
  42e535:	inc    edx
  42e536:	call   0xaf94:0x9a42aa72
  42e53d:	inc    edx
  42e53e:	mov    al,BYTE PTR [ecx+esi*4+0x42]
  42e542:	mov    bl,bl
  42e544:	mov    al,0x42
  42e546:	pop    edx
  42e547:	adc    esi,DWORD PTR [eax-0x4fd4a5be]
  42e54d:	inc    edx
  42e54e:	dec    edx
  42e54f:	arpl   WORD PTR [edi+0x42],bp
  42e555:	dec    edx
  42e556:	arpl   WORD PTR [edi-0x509ca5be],bp
  42e55c:	inc    edx
  42e55d:	pop    edx
  42e55e:	arpl   WORD PTR [edi-0x7e26b5be],bp
  42e564:	push   ds
  42e565:	rep ins DWORD PTR es:[edi],dx
  42e567:	mov    esi,0xae1a0fe
  42e56c:	mov    bl,0xb5
  42e56e:	stos   DWORD PTR es:[edi],eax
  42e56f:	xor    DWORD PTR [edi-0x66d805ce],eax
  42e575:	mov    ah,0xc
  42e577:	fwait
  42e578:	pop    edx
  42e579:	jo     0x42e593
  42e57b:	add    eax,0xcf67d474
  42e580:	(bad)  
  42e581:	cld    
  42e582:	lahf   
  42e583:	and    al,0x37
  42e585:	sub    ebp,DWORD PTR [edi+eiz*8+0x24c3b37e]
  42e58c:	aaa    
  42e58d:	mov    ebx,0xb085ff4b
  42e592:	fild   QWORD PTR [ebx+0x18ff8cfd]
  42e598:	adc    al,0x9b
  42e59a:	sahf   
  42e59b:	pop    ss
  42e59c:	adc    BYTE PTR [eax+0x5d],bh
  42e59f:	push   es
  42e5a0:	pop    ds
  42e5a1:	xor    eax,0xb4f77d9c
  42e5a6:	push   0x7
  42e5a8:	das    
  42e5a9:	mov    bl,0x5f
  42e5ab:	xor    eax,0x36dfe0bf
  42e5b0:	mov    edi,0x61941945
  42e5b5:	jo     0x42e5cc
  42e5b7:	out    dx,eax
  42e5b8:	inc    DWORD PTR [eax]
  42e5ba:	add    BYTE PTR [eax],al
  42e5bc:	push   es
  42e5bd:	mov    al,0x24
  42e5bf:	jg     0x42e5c6
  42e5c1:	xchg   edx,eax
  42e5c2:	(bad)  
  42e5c3:	jno    0x42e5af
  42e5c5:	mov    ch,0x4
  42e5c7:	adc    bh,bh
  42e5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5ca:	int    0xbf
  42e5cc:	int    0x60
  42e5ce:	xchg   esp,eax
  42e5cf:	add    ebx,edi
  42e5d1:	retf   
  42e5d2:	xchg   edx,eax
  42e5d3:	out    0x6d,eax
  42e5d5:	dec    esp
  42e5d6:	cdq    
  42e5d7:	cli    
  42e5d8:	pop    esp
  42e5d9:	ja     0x42e5d0
  42e5db:	mov    edi,0x52befdb3
  42e5e0:	js     0x42e5e8
  42e5e2:	and    edi,esp
  42e5e4:	(bad)  
  42e5e5:	out    0xe,al
  42e5e7:	add    al,0xa1
  42e5e9:	(bad)  
  42e5ea:	sti    
  42e5eb:	xlat   BYTE PTR ds:[ebx]
  42e5ec:	add    al,BYTE PTR [edi-0x17]
  42e5ef:	mov    edx,esi
  42e5f1:	fsubr  DWORD PTR [eax+ebp*8]
  42e5f4:	add    BYTE PTR [edx+0x9cf0fa4],cl
  42e5fa:	mov    ecx,0xc50a8c05
  42e5ff:	or     esi,ebx
  42e601:	jg     0x42e5e5
  42e603:	sti    
  42e604:	cdq    
  42e605:	adc    esp,esp
  42e607:	sub    edx,esp
  42e609:	cs ds or eax,0x1f65c71c
  42e610:	lsl    ebp,ax
  42e613:	push   cs
  42e614:	xchg   edi,eax
  42e616:	imul   eax,DWORD PTR [edi-0xd],0x8
  42e61a:	imul   esp,DWORD PTR ds:0x456086e0,0xf2000000
  42e624:	enter  0x3ec,0x75
  42e628:	inc    esi
  42e629:	repnz mov DWORD PTR [edi+eax*4+0x2271e06],esp
  42e631:	imul   ebx,DWORD PTR [ecx-0x7d25ee03],0x3e4e318
  42e63b:	call   0xb6e00cb2
  42e640:	xchg   DWORD PTR [esi],eax
  42e642:	cli    
  42e643:	(bad)  
  42e644:	mov    dh,0x68
  42e646:	mov    ds:0x8cb8d8f9,al
  42e64b:	and    esi,esp
  42e64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e64e:	or     bl,dh
  42e650:	xlat   BYTE PTR ds:[ebx]
  42e651:	test   al,0x2a
  42e653:	pop    ss
  42e654:	aaa    
  42e655:	jo     0x42e69d
  42e657:	jmp    0x42e6d6
  42e659:	and    dl,BYTE PTR [eax]
  42e65b:	push   0x45
  42e65d:	add    cl,bl
  42e65f:	jge    0x42e6a7
  42e661:	adc    bh,dl
  42e663:	cmp    DWORD PTR [ebx+eax*8],edi
  42e666:	das    
  42e667:	jmp    0x42e66e
  42e669:	add    cl,ch
  42e66b:	lock mov DWORD PTR [ecx],0xffcbab15
  42e672:	push   es
  42e673:	js     0x42e6b3
  42e675:	adc    al,0x86
  42e677:	and    al,0xd8
  42e679:	adc    DWORD PTR [ecx],ebp
  42e67b:	out    dx,eax
  42e67c:	or     eax,esp
  42e67e:	in     eax,0x7b
  42e680:	(bad)  
  42e681:	mov    esi,0xe7977a17
  42e686:	cli    
  42e687:	add    BYTE PTR [eax],al
  42e689:	add    al,dh
  42e68b:	push   es
  42e68c:	add    BYTE PTR [edi-0x55],dl
  42e68f:	loop   0x42e698
  42e691:	call   0x4194ef9a
  42e696:	lock mov ds:0xc56a46fc,al
  42e69c:	pop    ecx
  42e69d:	sub    ebp,ebx
  42e69f:	push   es
  42e6a0:	xchg   DWORD PTR [edi-0x52fe3808],ebp
  42e6a6:	cmp    al,0xcc
  42e6a8:	jmp    FWORD PTR [ebx-0x49]
  42e6ab:	pop    ss
  42e6ac:	add    edi,DWORD PTR [ecx-0x4600da9]
  42e6b2:	xor    BYTE PTR [edi],al
  42e6b4:	sti    
  42e6b5:	xchg   edi,eax
  42e6b6:	mov    al,ds:0x7c0adaa3
  42e6bb:	nop
  42e6bc:	ret    0x14e7
  42e6bf:	ds inc eax
  42e6c1:	jmp    0xe1bcf379
  42e6c6:	lock adc DWORD PTR [edx],edx
  42e6c9:	push   ebx
  42e6ca:	mul    DWORD PTR [eax+eax*1]
  42e6cd:	push   ebx
  42e6ce:	lock and al,0x0
  42e6d1:	(bad)  
  42e6d2:	gs push ebx
  42e6d4:	or     eax,0x417def29
  42e6d9:	add    BYTE PTR [edx-0x7c],ah
  42e6dc:	mov    edx,0x29c64b75
  42e6e1:	rcr    BYTE PTR [edx],0xc6
  42e6e4:	add    eax,0x798f1bb7
  42e6e9:	clc    
  42e6ea:	es repnz cli 
  42e6ed:	xor    al,BYTE PTR [eax]
  42e6ef:	add    BYTE PTR [eax],al
  42e6f1:	mov    al,dh
  42e6f3:	add    eax,0x798ad3b6
  42e6f8:	rcr    BYTE PTR [esi-0x62],0xbf
  42e6fc:	ret    
  42e6fd:	(bad)  
  42e6fe:	jge    0x42e6e6
  42e700:	and    DWORD PTR [esi-0x59],0x50
  42e704:	push   edi
  42e705:	xchg   ecx,eax
  42e706:	outs   dx,DWORD PTR ds:[esi]
  42e707:	sub    eax,eax
  42e709:	fidivr DWORD PTR [ebx+0x73]
  42e70c:	in     al,0xa2
  42e70e:	aam    0xff
  42e710:	std    
  42e711:	xchg   ebp,eax
  42e712:	pop    edi
  42e713:	add    BYTE PTR [ebp+eax*2+0x3645876b],cl
  42e71a:	jns    0x42e75f
  42e71c:	lock jp 0x42e78a
  42e71f:	adc    edx,DWORD PTR [ebx+edi*4+0x1a850046]
  42e726:	icebp  
  42e727:	or     esp,DWORD PTR [ecx]
  42e729:	(bad)  
  42e72a:	jb     0x42e721
  42e72c:	adc    eax,0x3a97c6
  42e731:	inc    ebx
  42e732:	inc    ecx
  42e733:	lock push 0xffffffae
  42e736:	pop    esi
  42e737:	cmp    al,0x16
  42e739:	hlt    
  42e73a:	push   0x4a
  42e73c:	lea    ecx,[edi+0x62]
  42e73f:	loop   0x42e6e1
  42e741:	mov    ch,BYTE PTR [ebp+esi*8-0x7c]
  42e745:	(bad)  
  42e747:	das    
  42e748:	push   0xffffff92
  42e74a:	jns    0x42e78f
  42e74c:	lock mov edx,0xa2e4437f
  42e752:	jge    0x42e74e
  42e754:	std    
  42e755:	add    BYTE PTR [eax],al
  42e757:	add    bl,dh
  42e759:	mov    al,0x7f
  42e75b:	mov    edi,0x42c99df
  42e760:	outs   dx,BYTE PTR ds:[esi]
  42e761:	fist   DWORD PTR [edi-0x601c99b1]
  42e767:	out    0xcf,eax
  42e769:	lahf   
  42e76a:	cwde   
  42e76b:	cli    
  42e76c:	outs   dx,DWORD PTR ds:[esi]
  42e76d:	pusha  
  42e76e:	(bad)  
  42e770:	outs   dx,BYTE PTR ds:[esi]
  42e771:	fistp  DWORD PTR [edi-0x67611e19]
  42e777:	cli    
  42e778:	ja     0x42e7da
  42e77a:	adc    BYTE PTR [edx],bl
  42e77c:	cdq    
  42e77d:	xchg   ebx,eax
  42e77e:	sub    al,0x0
  42e780:	les    eax,FWORD PTR [eax-0x2002cc10]
  42e786:	add    esp,DWORD PTR [esi-0x5]
  42e789:	and    al,BYTE PTR [ecx-0x10]
  42e78c:	mov    ds:0xa40bbf1c,eax
  42e791:	and    cl,dh
  42e793:	das    
  42e794:	fstp   QWORD PTR [edi-0x2]
  42e797:	jle    0x42e750
  42e799:	xchg   edi,eax
  42e79a:	xchg   DWORD PTR [edi+ecx*8+0x47],eax
  42e79e:	stc    
  42e79f:	(bad)  
  42e7a0:	fiadd  WORD PTR [eax+0x37]
  42e7a3:	pop    edx
  42e7a4:	stos   BYTE PTR es:[edi],al
  42e7a5:	fsubr  QWORD PTR ds:0xabcf7853
  42e7ab:	ins    DWORD PTR es:[edi],dx
  42e7ac:	js     0x42e786
  42e7ae:	xchg   esi,eax
  42e7af:	or     al,BYTE PTR [ebp-0x4b458321]
  42e7b5:	lahf   
  42e7b6:	(bad)  
  42e7b7:	(bad)  
  42e7b8:	js     0x42e79a
  42e7ba:	mov    ?,eax
  42e7bc:	add    BYTE PTR [eax],al
  42e7be:	add    BYTE PTR [ebp-0x74ee7423],ah
  42e7c4:	arpl   WORD PTR [ecx+0x509894fa],cx
  42e7ca:	mov    edi,0x8595886a
  42e7cf:	das    
  42e7d0:	les    eax,FWORD PTR [edx]
  42e7d2:	xchg   DWORD PTR [esi-0x4b0de6fa],edi
  42e7d8:	push   es
  42e7d9:	jno    0x42e81c
  42e7db:	ins    DWORD PTR es:[edi],dx
  42e7dc:	jg     0x42e80a
  42e7de:	loopne 0x42e7d4
  42e7e0:	jle    0x42e804
  42e7e2:	pop    es
  42e7e3:	outs   dx,BYTE PTR ds:[esi]
  42e7e4:	inc    eax
  42e7e5:	in     eax,dx
  42e7e6:	cdq    
  42e7e7:	xchg   esi,eax
  42e7e8:	test   DWORD PTR [eax+eiz*8],edi
  42e7eb:	loopne 0x42e7f3
  42e7ed:	popa   
  42e7ee:	xor    edx,esi
  42e7f0:	adc    bl,bl
  42e7f2:	sub    eax,0xe01c89e7
  42e7f7:	fdiv   QWORD PTR [esi]
  42e7f9:	call   0xefae:0xe4c2adb2
  42e800:	sahf   
  42e801:	call   0xecc01a0
  42e806:	lock or al,0xf
  42e809:	aam    0x99
  42e80b:	or     DWORD PTR [esi],esi
  42e80d:	rcr    sp,0x30
  42e811:	push   0xffffffb2
  42e813:	jge    0x42e7d7
  42e815:	hlt    
  42e816:	cmp    bl,BYTE PTR [ecx+0x4103ecc4]
  42e81c:	xor    BYTE PTR [esi-0x65],bl
  42e81f:	outs   dx,DWORD PTR ds:[esi]
  42e820:	mov    bl,dl
  42e822:	or     eax,DWORD PTR [eax]
  42e824:	add    BYTE PTR [eax],al
  42e826:	jbe    0x42e7d4
  42e828:	mov    esp,0x4e0413dd
  42e82d:	shl    DWORD PTR [edi-0x54],1
  42e830:	mov    esp,0xe74077d1
  42e835:	cmp    BYTE PTR [ebx+edx*1-0x2e],0xab
  42e83a:	sti    
  42e83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e83c:	sbb    ebx,DWORD PTR [edx-0x6e94688b]
  42e842:	and    bl,ah
  42e844:	adc    bl,0x27
  42e847:	pop    es
  42e848:	jmp    0xc54e547f
  42e84d:	out    dx,eax
  42e84e:	and    bl,BYTE PTR [edi-0x724f1c01]
  42e854:	cli    
  42e855:	gs mov al,0x13
  42e858:	push   es
  42e859:	aas    
  42e85a:	inc    edi
  42e85b:	cmp    al,0xde
  42e85d:	fmul   QWORD PTR [edx+0x4fc2bfda]
  42e863:	jg     0x42e893
  42e865:	cdq    
  42e866:	lock lahf 
  42e868:	adc    eax,0x133f51
  42e86d:	jmp    0xdb67475
  42e872:	inc    ebx
  42e873:	mov    al,ds:0x8d5aa977
  42e878:	test   dl,al
  42e87a:	ror    BYTE PTR gs:[edx],0x74
  42e87e:	aaa    
  42e87f:	mov    es,edi
  42e881:	retf   
  42e882:	xor    DWORD PTR ds:0x6f3ab5a,ebp
  42e888:	push   ebp
  42e889:	jb     0x42e88b
  42e88b:	add    BYTE PTR [eax],al
  42e88d:	dec    ebx
  42e88e:	or     esp,ebp
  42e890:	loope  0x42e909
  42e892:	or     ecx,DWORD PTR [ecx+ebp*8]
  42e895:	sar    BYTE PTR [ebp+0x74],cl
  42e898:	sub    DWORD PTR [edi+0x43],0xffffffec
  42e89c:	fsubr  st(6),st
  42e89e:	and    BYTE PTR ds:0x447e12c1,al
  42e8a4:	inc    ecx
  42e8a5:	pop    ds
  42e8a6:	mov    al,ds:0x2fcdc312
  42e8ab:	data16 fnstcw WORD PTR [ebx+0x12]
  42e8af:	or     al,0xc7
  42e8b1:	jns    0x42e8f5
  42e8b3:	call   0x4fdced1c
  42e8b8:	inc    ecx
  42e8b9:	aam    0xa9
  42e8bb:	cld    
  42e8bc:	es add eax,0x58a48cf2
  42e8c2:	aaa    
  42e8c3:	sti    
  42e8c4:	pushf  
  42e8c5:	clc    
  42e8c6:	sahf   
  42e8c7:	push   edi
  42e8c8:	sub    DWORD PTR [edx-0x74],edi
  42e8cb:	add    DWORD PTR [eax],0xffffffca
  42e8ce:	neg    BYTE PTR [esi+eiz*2]
  42e8d1:	pop    ss
  42e8d2:	jne    0x42e942
  42e8d4:	adc    ecx,DWORD PTR [ebp-0x72af3eca]
  42e8da:	clc    
  42e8db:	ud0    edx,DWORD PTR [edi]
  42e8de:	sti    
  42e8df:	out    0x40,eax
  42e8e1:	call   0x4f7:0x9a84f56e
  42e8e8:	xor    ecx,DWORD PTR [edx+0x5902e343]
  42e8ee:	ret    
  42e8ef:	mov    edx,0x5e000000
  42e8f5:	add    ecx,DWORD PTR [ebx-0x39]
  42e8f8:	push   ebp
  42e8f9:	or     DWORD PTR [esi-0x2e4db5c0],0x56
  42e900:	ret    
  42e901:	into   
  42e902:	pop    es
  42e903:	mov    ebp,ebp
  42e905:	(bad)  
  42e906:	mov    esi,0x8e7b1647
  42e90b:	inc    eax
  42e90c:	or     bl,bl
  42e90e:	out    0x8b,eax
  42e910:	retf   0x8d02
  42e913:	inc    edi
  42e914:	es jnp 0x42e96c
  42e917:	sbb    al,0x93
  42e919:	into   
  42e91a:	pop    ds
  42e91b:	mov    ebp,ebp
  42e91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e91e:	xchg   DWORD PTR [edi-0x1e],ebx
  42e921:	sar    BYTE PTR [ebp-0xa6015b9],cl
  42e927:	adc    eax,0x3a79d2
  42e92c:	aas    
  42e92d:	pop    ss
  42e92e:	sub    al,0xb8
  42e930:	or     BYTE PTR [edx],0x0
  42e933:	add    BYTE PTR [edx],ah
  42e935:	(bad)  [edx]
  42e937:	(bad)  
  42e938:	std    
  42e939:	nop
  42e93a:	ins    DWORD PTR es:[edi],dx
  42e93b:	and    al,0x6c
  42e93d:	xchg   ecx,eax
  42e93e:	push   ebp
  42e93f:	sub    BYTE PTR [edi+eax*8],al
  42e942:	sbb    eax,DWORD PTR [ecx]
  42e944:	aad    0xc6
  42e946:	pop    ds
  42e947:	cmp    dh,bl
  42e949:	outs   dx,DWORD PTR ds:[esi]
  42e94a:	(bad)  
  42e94b:	jmp    FWORD PTR [eax+0x2d]
  42e94e:	cmp    al,0xbf
  42e950:	ds stc 
  42e952:	mov    ds:0x83783e86,al
  42e957:	jmp    0x42e959
  42e959:	add    BYTE PTR [eax],al
  42e95b:	out    0xa5,eax
  42e95d:	das    
  42e95e:	call   0xfadb41bf
  42e963:	push   0xfcf18060
  42e968:	cmc    
  42e969:	dec    esi
  42e96a:	jmp    DWORD PTR [eax+esi*2+0x7d]
  42e96e:	stc    
  42e96f:	pop    esp
  42e970:	gs jp  0x42e918
  42e973:	rep outs dx,DWORD PTR ds:[esi]
  42e975:	(bad)  
  42e976:	jle    0x42e94e
  42e978:	dec    ebx
  42e979:	add    edi,ebx
  42e97b:	mov    esi,0x6ebfcd67
  42e980:	xor    ebp,DWORD PTR [esi+eiz*4-0x59992678]
  42e987:	js     0x42e937
  42e989:	stos   DWORD PTR es:[edi],eax
  42e98a:	dec    esi
  42e98b:	push   es
  42e98c:	sahf   
  42e98d:	xchg   edx,eax
  42e98e:	cs sbb al,0xe7
  42e991:	inc    eax
  42e992:	in     al,0xd8
  42e994:	mov    ah,0x2
  42e996:	test   BYTE PTR [esi+0x70],dh
  42e999:	(bad)  
  42e99a:	push   DWORD PTR [esi+0x74]
  42e99d:	int3   
  42e99e:	mov    BYTE PTR [esi+0x3448887],dh
  42e9a4:	shr    BYTE PTR [ebx+edi*8],0x66
  42e9a8:	js     0x42e9d3
  42e9aa:	call   0xfad4f0c5
  42e9af:	push   0xffffffaa
  42e9b1:	mov    ds:0xfdc2ac36,al
  42e9b6:	mov    BYTE PTR [esi+0x40],cl
  42e9b9:	mov    DWORD PTR [ebx+ecx*8-0x61],eax
  42e9bd:	sub    al,0xfb
  42e9bf:	add    BYTE PTR [eax],al
  42e9c1:	add    BYTE PTR [esi+0x68],al
  42e9c4:	es jmp 0x42bf080
  42e9ca:	fwait
  42e9cb:	pop    ss
  42e9cc:	rcl    BYTE PTR [ebp-0x70547057],1
  42e9d2:	in     eax,0x4d
  42e9d4:	xchg   ebx,eax
  42e9d5:	add    ch,BYTE PTR [edx+0x3]
  42e9d8:	add    DWORD PTR [ebx+0x2aa912cd],ecx
  42e9de:	mov    bl,0x1e
  42e9e0:	fs adc ebp,ebx
  42e9e3:	(bad)  
  42e9e4:	add    BYTE PTR [eax],dh
  42e9e6:	xchg   ebx,eax
  42e9e7:	and    ecx,0x7f
  42e9ea:	lods   al,BYTE PTR ds:[esi]
  42e9eb:	cli    
  42e9ec:	stc    
  42e9ed:	sub    DWORD PTR [ebx],ecx
  42e9ef:	xchg   esp,eax
  42e9f0:	sub    esp,DWORD PTR [eax+0x82591ac]
  42e9f6:	int3   
  42e9f7:	inc    esi
  42e9f8:	loopne 0x42e9fc
  42e9fa:	icebp  
  42e9fb:	(bad)  
  42e9fc:	mov    ecx,0x291d14f0
  42ea01:	add    al,0xbc
  42ea03:	dec    edx
  42ea04:	fcom   QWORD PTR [esi+0x45912f5]
  42ea0a:	adc    al,0x20
  42ea0c:	call   0x1fa3:0x4a6e0f10
  42ea13:	test   DWORD PTR [ecx+0x626e0710],ecx
  42ea19:	mov    ds:0x1079850f,eax
  42ea1e:	jmp    FWORD PTR [ebp+0x5a]
  42ea21:	mov    ds:0xc3b684ff,eax
  42ea26:	add    BYTE PTR [eax],al
  42ea28:	add    BYTE PTR [ecx-0xf3ed01c],bl
  42ea2e:	push   es
  42ea2f:	iret   
  42ea30:	pop    es
  42ea31:	pop    ebx
  42ea32:	out    dx,eax
  42ea33:	mov    eax,0x146ef342
  42ea38:	je     0x42ea0e
  42ea3a:	test   BYTE PTR [ebp-0x64],ch
  42ea3d:	dec    ebp
  42ea3e:	jmp    0x4cff:0xea44033c
  42ea45:	lock xchg ecx,eax
  42ea47:	dec    edx
  42ea48:	in     eax,0x69
  42ea4a:	pop    es
  42ea4b:	sti    
  42ea4c:	mov    ecx,0x5748dac
  42ea51:	leave  
  42ea52:	je     0x42eac2
  42ea54:	(bad)  
  42ea55:	leave  
  42ea56:	js     0x42ea6f
  42ea58:	jmp    0x8b8c:0xa7870ee5
  42ea5f:	(bad)  
  42ea60:	jg     0x42eae1
  42ea62:	xor    DWORD PTR [ecx],0x8712ecf6
  42ea68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea69:	call   0x850b3fdc
  42ea6e:	add    DWORD PTR [ecx+ebp*4+0x378734f4],0x4fd689eb
  42ea79:	popa   
  42ea7a:	xor    DWORD PTR [ecx-0xf],0x720bfb67
  42ea81:	add    al,0xf
  42ea83:	call   0xfac67ab0
  42ea88:	fs das 
  42ea8a:	sti    
  42ea8b:	sbb    BYTE PTR [edx+0x0],dh
  42ea8e:	add    BYTE PTR [eax],al
  42ea90:	in     eax,0x1a
  42ea92:	test   edx,eax
  42ea94:	std    
  42ea95:	sbb    al,0xfb
  42ea97:	pop    ds
  42ea98:	daa    
  42ea99:	xor    DWORD PTR [ebp+ebx*8+0x6b],0x1f9107cb
  42eaa1:	addr16 cld 
  42eaa3:	jle    0x42ea29
  42eaa5:	ret    
  42eaa6:	jae    0x42ea89
  42eaa8:	jae    0x42ea7d
  42eaaa:	sti    
  42eaab:	outs   dx,BYTE PTR ds:[esi]
  42eaac:	lahf   
  42eaad:	push   es
  42eaae:	out    0xfb,eax
  42eab0:	xchg   edx,ecx
  42eab2:	jecxz  0x42eb06
  42eab4:	arpl   WORD PTR ds:0x8cb3a9c0,si
  42eaba:	fs inc ecx
  42eabc:	jb     0x42ea90
  42eabe:	sti    
  42eabf:	add    BYTE PTR ds:0x2de8ba59,dh
  42eac5:	mov    bh,dl
  42eac7:	dec    DWORD PTR [eax]
  42eac9:	adc    eax,DWORD PTR [eax]
  42eacb:	push   esi
  42eacc:	pop    ebp
  42eacd:	mov    gs,edi
  42eacf:	jmp    FWORD PTR [edi-0x65bff011]
  42ead5:	mov    ?,edx
  42ead7:	jmp    0x42ea91
  42ead9:	push   esi
  42eada:	mov    edx,0x83aad940
  42eadf:	(bad)  
  42eae0:	push   cs
  42eae1:	jno    0x42eb43
  42eae3:	pinsrw mm1,WORD PTR [edi-0x75],0x46
  42eae8:	cwde   
  42eae9:	and    DWORD PTR [ebx-0x3f],edi
  42eaec:	dec    ebx
  42eaed:	aaa    
  42eaee:	pop    esi
  42eaef:	mov    DWORD PTR [edx-0x66],esp
  42eaf2:	adc    esp,DWORD PTR [eax+0x6b000000]
  42eaf8:	(bad)  
  42eaf9:	inc    DWORD PTR [edx+0x21740642]
  42eaff:	leave  
  42eb00:	lahf   
  42eb01:	(bad)  
  42eb02:	jae    0x42eb5a
  42eb04:	xchg   dl,dh
  42eb06:	add    bh,bh
  42eb08:	xor    DWORD PTR [edx],0x46
  42eb0b:	sbb    bl,BYTE PTR [edx+ecx*1]
  42eb0e:	dec    BYTE PTR [ebx+edi*2]
  42eb11:	test   BYTE PTR [esi+0x2a],cl
  42eb14:	xchg   edi,esi
  42eb16:	sbb    al,BYTE PTR [esi]
  42eb18:	inc    esi
  42eb19:	sub    al,0xc0
  42eb1b:	in     eax,0x3c
  42eb1d:	mov    edx,0x3e8e0a04
  42eb22:	and    al,0x6
  42eb24:	mov    WORD PTR [eax+0x12],cs
  42eb27:	or     edi,0x3
  42eb2a:	(bad)  
  42eb2b:	aam    0x7e
  42eb2d:	sub    esi,esi
  42eb2f:	dec    ebp
  42eb30:	mov    DWORD PTR [edi],0x6da05
  42eb36:	cmp    edx,DWORD PTR [ecx+edx*1]
  42eb39:	add    eax,0xea5ff389
  42eb3e:	out    0xc,al
  42eb40:	out    0x46,eax
  42eb42:	or     al,0x78
  42eb44:	mov    bh,0x6
  42eb46:	das    
  42eb47:	mov    eax,ds:0xe273c205
  42eb4c:	push   ecx
  42eb4d:	aad    0x30
  42eb4f:	imul   eax,DWORD PTR ds:[eax+0x62],0x74009eea
  42eb57:	out    dx,al
  42eb58:	in     al,dx
  42eb59:	mov    ebp,0xfd
  42eb5e:	mov    DWORD PTR [ecx],ecx
  42eb60:	xchg   BYTE PTR [edi+0x3],cl
  42eb63:	sub    DWORD PTR [edi],edi
  42eb65:	adc    al,0xf2
  42eb67:	outs   dx,DWORD PTR ds:[esi]
  42eb68:	(bad)  
  42eb69:	inc    DWORD PTR [ebx+0x6f]
  42eb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb6d:	mov    al,0x26
  42eb6f:	in     eax,0xa2
  42eb71:	jle    0x42eb02
  42eb73:	js     0x42eaf5
  42eb75:	jmp    0x42eb86
  42eb77:	outs   dx,BYTE PTR ds:[esi]
  42eb78:	(bad)  
  42eb79:	inc    eax
  42eb7b:	cmp    DWORD PTR [ebx+0x74],edi
  42eb7e:	out    dx,eax
  42eb7f:	inc    eax
  42eb80:	sar    edx,cl
  42eb82:	push   0x24
  42eb84:	call   0xf00cf5a4
  42eb89:	or     ch,BYTE PTR [esi+0x7a]
  42eb8c:	add    eax,DWORD PTR [eax]
  42eb8e:	repz in al,0x45
  42eb91:	and    dh,dh
  42eb93:	outs   dx,DWORD PTR ds:[esi]
  42eb94:	(bad)  
  42eb95:	lahf   
  42eb96:	repz js 0x42eb1e
  42eb99:	daa    
  42eb9a:	repnz outs dx,DWORD PTR ds:[esi]
  42eb9c:	(bad)  
  42eb9d:	cmp    al,0xf3
  42eb9f:	outs   dx,BYTE PTR ds:[esi]
  42eba0:	(bad)  
  42eba1:	jmp    esp
  42eba3:	in     eax,dx
  42eba4:	lock add bl,dh
  42eba7:	outs   dx,DWORD PTR ds:[esi]
  42eba8:	jg     0x42ebeb
  42ebaa:	xlat   BYTE PTR ds:[ebx]
  42ebab:	pop    ds
  42ebac:	(bad)  
  42ebad:	je     0x42eb9a
  42ebaf:	out    0x47,al
  42ebb1:	and    al,0xd3
  42ebb3:	loop   0x42ebfc
  42ebb5:	and    al,0x1b
  42ebb7:	pop    es
  42ebb8:	mov    ecx,0x12b687c
  42ebbd:	jge    0x42ec17
  42ebbf:	sub    esi,ebp
  42ebc1:	jl     0x42ebc3
  42ebc3:	add    BYTE PTR [eax],al
  42ebc5:	pop    eax
  42ebc6:	sub    ecx,DWORD PTR [ecx]
  42ebc8:	pushf  
  42ebc9:	pop    esi
  42ebca:	pop    edx
  42ebcb:	inc    ecx
  42ebcc:	xchg   ebx,eax
  42ebcd:	outs   dx,DWORD PTR ds:[esi]
  42ebce:	inc    esi
  42ebcf:	jmp    0xe949ac5b
  42ebd4:	add    esp,DWORD PTR [eax]
  42ebd6:	fidivr DWORD PTR [esi-0x1612bffa]
  42ebdc:	sbb    esi,ebx
  42ebde:	push   es
  42ebdf:	jmp    0xcd0d5b67
  42ebe4:	retf   
  42ebe5:	and    al,0x82
  42ebe7:	repz sar esi,cl
  42ebea:	(bad)  
  42ebeb:	call   0xed6e1c6c
  42ebf0:	xchg   BYTE PTR [ecx+eax*4+0x63b87e1],al
  42ebf7:	jmp    0x2cd6aeff
  42ebfc:	call   0xcf13c2f5
  42ec01:	rol    DWORD PTR [eax-0x46b782f],1
  42ec07:	or     BYTE PTR [ebx-0x6d0ad540],dl
  42ec0d:	fbld   TBYTE PTR [esi+0x3ff343d6]
  42ec13:	xor    eax,0x6511e0e8
  42ec18:	mov    DWORD PTR [ecx+eax*4],ebp
  42ec1b:	call   0xf56d8cb2
  42ec20:	xchg   edx,eax
  42ec21:	pop    es
  42ec22:	jnp    0x42ec1c
  42ec24:	inc    ebx
  42ec25:	rep ins DWORD PTR es:[edi],dx
  42ec27:	push   cs
  42ec28:	int    0x0
  42ec2a:	add    BYTE PTR [eax],al
  42ec2c:	mov    BYTE PTR [edx],ch
  42ec2e:	fnstsw WORD PTR [esi-0x56]
  42ec31:	outs   dx,BYTE PTR es:[esi]
  42ec33:	rol    BYTE PTR [eax],1
  42ec35:	push   ss
  42ec36:	add    BYTE PTR [ecx],ch
  42ec38:	out    dx,eax
  42ec39:	cli    
  42ec3a:	add    DWORD PTR [esi+0x4],ebp
  42ec3d:	sub    edx,DWORD PTR [esi+eiz*2]
  42ec40:	test   eax,0xfee965d1
  42ec45:	push   es
  42ec46:	in     ax,dx
  42ec48:	xor    esp,0x1b600923
  42ec4e:	sbb    al,0x30
  42ec51:	pop    es
  42ec52:	xchg   DWORD PTR [ecx],esp
  42ec54:	imul   ebx,DWORD PTR [ecx+0x73],0xffffffa5
  42ec58:	popa   
  42ec59:	neg    BYTE PTR [edi]
  42ec5b:	(bad)  
  42ec5c:	in     al,dx
  42ec5d:	sub    ah,BYTE PTR [eax]
  42ec5f:	mov    edx,0x1efc5e88
  42ec64:	add    DWORD PTR [edi+edi*4+0x737bf19d],0x439398c5
  42ec6f:	int    0x8c
  42ec71:	ror    BYTE PTR [edi+0x11],1
  42ec74:	dec    edx
  42ec75:	inc    eax
  42ec76:	sti    
  42ec77:	idiv   BYTE PTR [esi-0x3952d85]
  42ec7d:	sub    dl,BYTE PTR [eax]
  42ec7f:	jmp    0xfbe3276b
  42ec84:	mov    al,0x6
  42ec86:	je     0x42ec77
  42ec88:	xor    esp,0x23
  42ec8b:	stc    
  42ec8c:	arpl   WORD PTR [esi+0x7e],dx
  42ec8f:	inc    ebp
  42ec90:	add    BYTE PTR [eax],al
  42ec92:	add    BYTE PTR [ebx+0xc],bl
  42ec95:	add    BYTE PTR ds:0xd7c012f,dh
  42ec9b:	repz jnp 0x42ed11
  42ec9e:	clc    
  42ec9f:	xor    esp,0x23
  42eca2:	cmc    
  42eca3:	adc    DWORD PTR [esi-0x1a],0xffffffd0
  42eca7:	inc    edi
  42eca8:	jge    0x42ece2
  42ecaa:	adc    eax,0xe374100b
  42ecaf:	arpl   sp,si
  42ecb1:	and    eax,DWORD PTR [eax]
  42ecb3:	sub    dl,BYTE PTR [edi-0x3be75fed]
  42ecb9:	(bad)  
  42ecba:	cmp    dh,bh
  42ecbc:	addr16 push es
  42ecbe:	je     0x42ec8b
  42ecc0:	mov    dh,BYTE PTR [esi+0x24]
  42ecc3:	ficom  WORD PTR [esi+0x1f3d0a6e]
  42ecc9:	and    al,0xc
  42eccb:	cmp    eax,0x9a129a78
  42ecd0:	add    edx,DWORD PTR [edi+0x5e]
  42ecd3:	dec    edx
  42ecd4:	add    al,0x53
  42ecd6:	mov    esi,DWORD PTR [edi]
  42ecd8:	xor    BYTE PTR [edx-0x7cc235f8],bh
  42ecde:	icebp  
  42ecdf:	fstp   QWORD PTR [esp+eax*1]
  42ece2:	call   0x3e9ce3
  42ece7:	or     DWORD PTR ds:0x2d090004,ebp
  42eced:	or     BYTE PTR [eax],al
  42ecef:	pop    esp
  42ecf0:	dec    edx
  42ecf1:	add    DWORD PTR [ecx-0x7e],0x54814a
  42ecf8:	add    BYTE PTR [eax],al
  42ecfa:	mov    dh,0x7
  42ecfc:	dec    esi
  42ecfd:	imul   ebx,eax,0x72
  42ed00:	dec    ebp
  42ed01:	mov    esp,DWORD PTR [ebx+0x2]
  42ed04:	ds or  cl,al
  42ed07:	dec    edx
  42ed08:	adc    cl,BYTE PTR [ebp+0xe830ec5]
  42ed0e:	dec    ecx
  42ed0f:	mov    ah,0xf9
  42ed11:	shl    cl,0xb3
  42ed14:	ins    BYTE PTR es:[edi],dx
  42ed15:	or     edi,DWORD PTR [edi+0x22521841]
  42ed1b:	xchg   ecx,eax
  42ed1c:	fdivr  st,st(5)
  42ed1e:	jge    0x42ecc2
  42ed20:	cld    
  42ed21:	xor    DWORD PTR [edx-0x79],ebx
  42ed24:	mov    edx,0x45961d74
  42ed29:	or     BYTE PTR [ecx-0xc94f7ea],ah
  42ed2f:	cwde   
  42ed30:	out    0x52,al
  42ed32:	sbb    ecx,DWORD PTR [edx-0x57]
  42ed35:	cld    
  42ed36:	add    al,0x28
  42ed38:	cs mov esi,0x87316df7
  42ed3e:	pop    es
  42ed3f:	in     al,dx
  42ed40:	mov    ds:0x361340f7,al
  42ed45:	push   ebx
  42ed46:	pop    ecx
  42ed47:	outs   dx,DWORD PTR ds:[esi]
  42ed48:	push   ss
  42ed49:	add    BYTE PTR [edi+0x16],ah
  42ed4c:	out    0xe7,eax
  42ed4e:	repz enter 0xfa89,0x78
  42ed53:	enter  0xec81,0x3e
  42ed57:	jno    0x42ed97
  42ed59:	out    0x2e,eax
  42ed5b:	fmul   st,st(5)
  42ed5d:	jmp    0x42ed5f
  42ed5f:	add    BYTE PTR [eax],al
  42ed61:	mov    dh,0x35
  42ed63:	cmp    DWORD PTR [edi-0xee393d9],0xffffffa4
  42ed6a:	jnp    0x42ecf6
  42ed6c:	rdpmc  
  42ed6e:	jo     0x42ed9e
  42ed70:	sti    
  42ed71:	(bad)  
  42ed72:	outs   dx,DWORD PTR ds:[esi]
  42ed73:	in     eax,dx
  42ed74:	aas    
  42ed75:	repz call 0xb022fd4c
  42ed7b:	(bad)  
  42ed7c:	mov    dh,0x6b
  42ed7e:	popa   
  42ed7f:	(bad)  
  42ed80:	jmp    DWORD PTR [eax]
  42ed82:	jne    0x42ed58
  42ed84:	sti    
  42ed85:	mov    eax,ds:0x3dfafeb1
  42ed8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed8b:	std    
  42ed8c:	add    bl,dh
  42ed8e:	outs   dx,DWORD PTR ds:[esi]
  42ed8f:	xchg   ebp,eax
  42ed90:	or     DWORD PTR [ebx+0x42],ecx
  42ed93:	enter  0x4cfa,0x41
  42ed97:	mov    esi,DWORD PTR [edi+eax*2]
  42ed9a:	add    bh,BYTE PTR [edi]
  42ed9c:	add    BYTE PTR [esi+edx*4],bh
  42ed9f:	mov    dl,0xbf
  42eda2:	inc    ebp
  42eda3:	cmp    al,ch
  42eda5:	cwde   
  42eda6:	pop    ebp
  42eda7:	(bad)  
  42eda8:	jmp    eax
  42edaa:	push   es
  42edab:	test   eax,0x3ddbb92f
  42edb0:	jnp    0x42edc1
  42edb2:	fsub   QWORD PTR [esi+0x5bd3f308]
  42edb8:	and    bh,cl
  42edba:	mov    ah,BYTE PTR [edi-0x60]
  42edbd:	adc    al,0x3
  42edbf:	jmp    0x8e7c91c7
  42edc4:	xor    eax,DWORD PTR [eax]
  42edc6:	add    BYTE PTR [eax],al
  42edc8:	call   0x25375ae0
  42edcd:	pop    es
  42edce:	mov    ecx,0xf807078e
  42edd3:	inc    ebx
  42edd4:	repz lock out 0x1b,eax
  42edd8:	repnz repnz adc ch,ch
  42eddc:	int3   
  42eddd:	dec    BYTE PTR [esi-0x6f]
  42ede0:	mov    ecx,0xfc1fa38f
  42ede5:	dec    ecx
  42ede6:	mov    ebx,0xa846ddfb
  42edeb:	pushf  
  42edec:	lahf   
  42eded:	push   es
  42edee:	jmp    0x6c1d2ef6
  42edf3:	dec    ecx
  42edf4:	outs   dx,DWORD PTR ds:[esi]
  42edf5:	(bad)  
  42edf6:	and    dl,0xf4
  42edf9:	sub    BYTE PTR [edx],cl
  42edfb:	pushf  
  42edfc:	fnsave [eax+0x3]
  42edff:	(bad)  
  42ee00:	outs   dx,DWORD PTR ds:[esi]
  42ee01:	mov    bl,0x6a
  42ee03:	mov    edi,DWORD PTR [ecx+0x7d]
  42ee06:	add    BYTE PTR [edi+0xe],ch
  42ee09:	jle    0x42edf4
  42ee0b:	or     BYTE PTR [ebp+0x7],dh
  42ee0e:	jmp    0x3955c316
  42ee13:	xor    esp,DWORD PTR [esi-0xd]
  42ee16:	sub    al,0x83
  42ee18:	xor    al,0x7d
  42ee1a:	sar    bl,0xe1
  42ee1d:	jl     0x42ede0
  42ee1f:	mov    BYTE PTR [esp+edi*8-0x25],bh
  42ee23:	jp     0x42ee57
  42ee25:	(bad)  
  42ee26:	inc    DWORD PTR [eax+0x77]
  42ee29:	mov    cl,0x3e
  42ee2b:	jmp    0x7342ee30
  42ee30:	cmp    BYTE PTR [ebx-0x5c],0x6d
  42ee34:	or     BYTE PTR [edi-0x6f],0x9
  42ee38:	push   edx
  42ee39:	cli    
  42ee3a:	xchg   esi,eax
  42ee3b:	jnp    0x42edfa
  42ee3d:	or     dh,BYTE PTR [eax+esi*1+0x33]
  42ee41:	mov    edi,0xc02bfffc
  42ee46:	pop    es
  42ee47:	jbe    0x42edcb
  42ee49:	jnp    0x42eebf
  42ee4b:	jge    0x42edce
  42ee4d:	mov    eax,0x6ef7f
  42ee52:	je     0x42eebf
  42ee54:	mov    ?,esi
  42ee56:	pop    esi
  42ee57:	test   BYTE PTR gs:[edi],dl
  42ee5a:	test   eax,0x5cf5f20f
  42ee5f:	jnp    0x42ee61
  42ee61:	std    
  42ee62:	inc    esi
  42ee63:	ins    DWORD PTR es:[edi],dx
  42ee64:	int3   
  42ee65:	cli    
  42ee66:	aam    0x10
  42ee68:	or     al,0x40
  42ee6a:	jmp    0x2cbe71e2
  42ee6f:	jne    0x42edf2
  42ee71:	dec    edi
  42ee72:	es fwait
  42ee74:	cld    
  42ee75:	or     eax,0x448df0a9
  42ee7a:	cdq    
  42ee7b:	push   0x750ce720
  42ee80:	mov    BYTE PTR [edi-0x73283583],bh
  42ee86:	je     0x42eee0
  42ee88:	mov    ah,0xa8
  42ee8a:	jmp    0x5e2af57f
  42ee8f:	inc    ecx
  42ee90:	cmp    edx,0x72
  42ee96:	inc    esp
  42ee97:	or     al,0xf
  42ee99:	sub    edi,ebp
  42ee9b:	mov    bl,0xc7
  42ee9d:	jmp    0xce91f592
  42eea2:	sbb    al,0x80
  42eea4:	lods   eax,DWORD PTR ds:[esi]
  42eea5:	add    BYTE PTR [ecx],cl
  42eea7:	add    esi,edi
  42eea9:	(bad)  
  42eeaa:	(bad)  
  42eeab:	or     eax,0x145d3b32
  42eeb0:	xor    BYTE PTR [ebx+0x448d12cf],cl
  42eeb6:	or     al,BYTE PTR [esi]
  42eeb8:	mov    DWORD PTR [ebp-0x6],eax
  42eebb:	mov    DWORD PTR [ebx+0x70],esi
  42eebe:	xchg   edi,eax
  42eebf:	xor    DWORD PTR [esi-0x3],0x75
  42eec3:	mov    cl,BYTE PTR [edx+0x6a]
  42eec6:	or     edi,ebp
  42eec8:	inc    ebx
  42eec9:	test   dl,bl
  42eecb:	sti    
  42eecc:	inc    ebx
  42eecd:	call   0xc61a89dc
  42eed2:	push   ebp
  42eed3:	mov    cl,BYTE PTR [ecx-0x1]
  42eed6:	call   DWORD PTR [esi-0x7535bc54]
  42eedc:	sar    BYTE PTR [ebx],1
  42eede:	sbb    eax,0x355fd21f
  42eee3:	adc    al,0x6c
  42eee5:	call   0x3d6ba6
  42eeea:	mov    ecx,0x195b5847
  42eeef:	inc    esp
  42eef0:	outs   dx,BYTE PTR ds:[esi]
  42eef1:	leave  
  42eef2:	fmul   DWORD PTR [esi]
  42eef4:	add    BYTE PTR [ebp+0x21],dl
  42eef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eef8:	dec    edi
  42eef9:	push   ebx
  42eefa:	add    BYTE PTR [eax],al
  42eefc:	add    BYTE PTR [ebp+0x56],bl
  42eeff:	rcl    DWORD PTR [ebx+0x49],1
  42ef02:	pop    ds
  42ef03:	int    0xc1
  42ef05:	pop    eax
  42ef06:	pop    es
  42ef07:	cmp    ecx,0x59
  42ef0a:	lahf   
  42ef0b:	and    dh,dl
  42ef0d:	jne    0x42ee99
  42ef0f:	dec    ecx
  42ef10:	push   ebx
  42ef11:	jb     0x42eed9
  42ef13:	mov    ecx,0x88365a42
  42ef18:	inc    ebp
  42ef19:	push   ebp
  42ef1a:	lahf   
  42ef1b:	adc    dh,dl
  42ef1d:	xor    eax,0xf35d328a
  42ef22:	push   esp
  42ef23:	adc    DWORD PTR [eax],ecx
  42ef25:	or     DWORD PTR [ecx-0x51fffbef],esi
  42ef2b:	xchg   edi,eax
  42ef2c:	inc    BYTE PTR [ecx]
  42ef2e:	scas   al,BYTE PTR es:[edi]
  42ef2f:	ds pop ebx
  42ef31:	enter  0xbfa6,0x54
  42ef35:	js     0x42eef0
  42ef37:	jge    0x42ef24
  42ef39:	inc    ebx
  42ef3a:	ins    DWORD PTR es:[edi],dx
  42ef3b:	(bad)  
  42ef3c:	inc    eax
  42ef3e:	xor    esi,DWORD PTR ds:0x81e2f366
  42ef44:	das    
  42ef45:	add    al,0x8c
  42ef47:	mov    ecx,DWORD PTR [edi-0x75]
  42ef4a:	push   eax
  42ef4b:	neg    BYTE PTR ds:0xe7b294f4
  42ef51:	out    dx,al
  42ef52:	icebp  
  42ef53:	jns    0x42efc9
  42ef55:	mov    edi,DWORD PTR [eax]
  42ef57:	push   esi
  42ef58:	(bad)  
  42ef59:	fdiv   QWORD PTR [eax-0x6a]
  42ef5c:	shl    DWORD PTR [ecx],0xd9
  42ef5f:	mov    ebp,DWORD PTR ds:0xa8000000
  42ef65:	xchg   ecx,eax
  42ef66:	std    
  42ef67:	push   ebx
  42ef69:	out    dx,eax
  42ef6a:	jns    0x42eef0
  42ef6c:	add    eax,ecx
  42ef6e:	mov    edi,edx
  42ef70:	and    ebp,ebx
  42ef72:	inc    ecx
  42ef73:	cwde   
  42ef74:	inc    ebx
  42ef75:	cdq    
  42ef76:	mov    edx,DWORD PTR [ebx+ebp*1]
  42ef79:	pop    ebp
  42ef7a:	add    BYTE PTR ds:[esi+0x30],dh
  42ef7e:	adc    bh,BYTE PTR [edi]
  42ef80:	or     edx,DWORD PTR [esi+edi*8]
  42ef83:	push   ebx
  42ef85:	adc    dl,dh
  42ef87:	(bad)  
  42ef88:	loope  0x42ef39
  42ef8a:	dec    BYTE PTR [esi+esi*1-0xd99d0fc]
  42ef91:	xchg   ebp,eax
  42ef92:	dec    BYTE PTR [esi+esi*4+0x7a532ed7]
  42ef99:	jmp    0x42ef25
  42ef9b:	cli    
  42ef9c:	push   es
  42ef9d:	pop    es
  42ef9e:	pop    ecx
  42ef9f:	hlt    
  42efa0:	adc    al,0x7
  42efa2:	fs (bad) 
  42efa4:	(bad)  
  42efa5:	pop    ss
  42efa6:	adc    DWORD PTR fs:[edx+edi*2],0x8bac8bc9
  42efae:	cmp    ecx,DWORD PTR [eax-0x745ca1b4]
  42efb4:	sub    DWORD PTR [esi-0x1a],ebp
  42efb7:	aad    0x64
  42efb9:	sub    DWORD PTR [eax-0x5a8716f0],0xffffff84
  42efc0:	sbb    eax,0xde631704
  42efc5:	inc    esi
  42efc6:	xor    DWORD PTR [edx],ebp
  42efc8:	add    BYTE PTR [eax],al
  42efca:	add    BYTE PTR [edi+ecx*2+0x6df354a5],bl
  42efd1:	jns    0x42f052
  42efd3:	xor    ecx,DWORD PTR [esi+0x16d6c597]
  42efd9:	int3   
  42efda:	add    esi,ebx
  42efdc:	jns    0x42efc6
  42efde:	(bad)  
  42efdf:	sahf   
  42efe0:	lea    esi,[edi]
  42efe2:	test   DWORD PTR [esi-0xcfba5fa],esi
  42efe8:	inc    edi
  42efe9:	inc    edi
  42efea:	hlt    
  42efeb:	in     eax,dx
  42efec:	push   edi
  42efed:	daa    
  42efee:	pushf  
  42efef:	hlt    
  42eff0:	inc    edi
  42eff1:	inc    esi
  42eff2:	cld    
  42eff3:	in     eax,dx
  42eff4:	inc    esp
  42eff5:	and    eax,0x956a7431
  42effa:	jle    0x42efb8
  42effc:	(bad)  
  42effd:	fstp   QWORD PTR [ebx-0x74de8657]
  42f003:	xlat   BYTE PTR ds:[ebx]
  42f004:	ret    
  42f005:	mov    dh,0x46
  42f007:	and    esi,ebx
  42f009:	jmp    0xe4b234e4
  42f00e:	add    al,0xf3
  42f010:	push   es
  42f011:	fwait
  42f012:	xor    ch,BYTE PTR [ebx+edi*8-0x10]
  42f016:	sbb    eax,0x61ffdff5
  42f01b:	jl     0x42f085
  42f01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f01e:	bound  ebx,QWORD PTR [ebx+eax*1]
  42f021:	call   0xfabf59ba
  42f026:	jb     0x42f00b
  42f028:	push   cs
  42f029:	mov    DWORD PTR [edi],ebp
  42f02b:	repz add DWORD PTR [esi-0x1f],0x58000000
  42f033:	pushf  
  42f034:	cli    
  42f035:	(bad)  
  42f036:	imul   ecx,DWORD PTR [esi-0x4bd60ebf],0x56a5e546
  42f040:	rol    bl,0x18
  42f043:	inc    esi
  42f044:	loopne 0x42f037
  42f046:	test   al,0x7c
  42f048:	(bad)  
  42f049:	call   0xe3130a3e
  42f04e:	aas    
  42f04f:	out    0x88,eax
  42f051:	aaa    
  42f052:	sti    
  42f053:	or     esi,DWORD PTR [ebx-0x2f8000ce]
  42f059:	test   al,0x8e
  42f05b:	add    BYTE PTR [edi],bl
  42f05d:	cdq    
  42f05e:	scas   eax,DWORD PTR es:[edi]
  42f05f:	addr16 pop es
  42f061:	loop   0x42f00a
  42f063:	out    0x88,al
  42f065:	mov    edi,0xb2b30de0
  42f06a:	mov    BYTE PTR [ecx+0x6628d0],0x1f
  42f071:	cmp    DWORD PTR [edi+0x7ff20767],esi
  42f077:	out    0x88,al
  42f079:	xchg   edi,eax
  42f07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f07b:	or     eax,0x8194a2b3
  42f080:	shr    BYTE PTR [eax],1
  42f082:	jle    0x42f084
  42f084:	pop    ds
  42f085:	cmp    DWORD PTR [edi+0x47f20767],ebp
  42f08b:	out    0x88,al
  42f08d:	mov    edi,0xa2b30d94
  42f092:	add    BYTE PTR [ecx+0xd0],0x0
  42f099:	retf   
  42f09a:	cdq    
  42f09b:	add    ah,BYTE PTR [ebx]
  42f09d:	or     al,BYTE PTR [ebx-0x21]
  42f0a0:	or     BYTE PTR [ecx-0x4d],dl
  42f0a3:	pusha  
  42f0a4:	mov    DWORD PTR [esi+esi*2+0x6b21b705],eax
  42f0ab:	adc    ecx,0x2302999b
  42f0b1:	mov    al,BYTE PTR [edi+ebx*8+0x8]
  42f0b5:	push   ecx
  42f0b6:	mov    ch,0x60
  42f0b8:	mov    esp,edx
  42f0ba:	push   0x5
  42f0bc:	mov    bh,0xe1
  42f0be:	push   0x995bd181
  42f0c3:	add    ah,BYTE PTR [ebx]
  42f0c5:	jp     0x42f10b
  42f0c7:	fisttp WORD PTR [eax]
  42f0c9:	and    DWORD PTR [ebp+0x68c48960],esi
  42f0cf:	add    eax,0x816ed1b7
  42f0d4:	pop    ebp
  42f0d5:	push   ds
  42f0d6:	sti    
  42f0d7:	iret   
  42f0d8:	shl    DWORD PTR [eax+0x7b],0x19
  42f0dc:	rcr    BYTE PTR [ebx-0x74f4fd5d],1
  42f0e2:	and    al,0x89
  42f0e4:	push   esi
  42f0e5:	scas   al,BYTE PTR es:[edi]
  42f0e6:	clc    
  42f0e7:	shl    DWORD PTR [ebp+edi*8-0x7],1
  42f0eb:	jnp    0x42f0fd
  42f0ed:	mov    al,ds:0x298b577a
  42f0f2:	xchg   edx,eax
  42f0f3:	mov    ds:0xd59bd18b,eax
  42f0f8:	(bad)  
  42f0f9:	sub    eax,0x75818e
  42f0fe:	add    BYTE PTR [eax],al
  42f100:	retf   0xfc
  42f103:	mov    edx,DWORD PTR [ecx+0x77]
  42f106:	loop   0x42f0da
  42f108:	int3   
  42f109:	(bad)  
  42f10a:	cmc    
  42f10b:	mov    DWORD PTR [edi+esi*2-0x7f],eax
  42f10f:	dec    ebx
  42f110:	mov    ds:0xf3febd9b,al
  42f115:	adc    BYTE PTR [ecx+0x7b463588],cl
  42f11b:	je     0x42f108
  42f11d:	mov    al,ds:0xa4cdc17b
  42f122:	and    DWORD PTR [esi+0x662f6df7],edi
  42f128:	pop    esp
  42f129:	push   0x7a541410
  42f12e:	out    dx,al
  42f12f:	push   cs
  42f130:	mov    bl,0x6d
  42f132:	jnp    0x42f175
  42f134:	jecxz  0x42f11a
  42f136:	inc    esi
  42f137:	pop    es
  42f138:	repnz ins DWORD PTR es:[edi],dx
  42f13a:	inc    BYTE PTR [esi-0x7703f659]
  42f140:	jnp    0x42f1ab
  42f142:	std    
  42f143:	push   ebx
  42f145:	in     al,0x40
  42f147:	adc    BYTE PTR [ebp-0x18dbcd1c],dl
  42f14d:	mul    BYTE PTR [esi+0x7]
  42f150:	repnz ins DWORD PTR es:[edi],dx
  42f152:	inc    BYTE PTR [esi-0x76df8253]
  42f158:	imul   edi,DWORD PTR [ebp-0x3],0xffffffff
  42f15c:	repz adc BYTE PTR [eax],0x14
  42f160:	in     al,dx
  42f161:	pop    ebx
  42f162:	jmp    0x6033:0xd
  42f169:	das    
  42f16a:	sti    
  42f16b:	push   es
  42f16c:	or     al,dh
  42f16e:	aas    
  42f16f:	repz loop 0x42f130
  42f172:	jae    0x42f161
  42f174:	mov    al,0xd3
  42f176:	mov    edi,0xfde94823
  42f17b:	mov    esp,0x2f382f60
  42f180:	add    al,0xe4
  42f182:	jae    0x42f17f
  42f184:	xor    al,0xea
  42f186:	cmp    edi,edi
  42f188:	lahf   
  42f189:	(bad)  
  42f18a:	out    0xf5,al
  42f18c:	and    al,0xea
  42f18e:	fild   DWORD PTR [eax]
  42f190:	pop    es
  42f191:	test   eax,0xb94e7403
  42f196:	(bad)  
  42f199:	mov    esp,0xfc8a887c
  42f19e:	out    0x25,al
  42f1a0:	fstp   QWORD PTR [ecx-0x61ea184]
  42f1a6:	xchg   edx,esp
  42f1a8:	sbb    bl,BYTE PTR [esi-0x55]
  42f1ab:	jne    0x42f21d
  42f1ad:	jmp    0x295cd69f
  42f1b2:	add    al,0x74
  42f1b4:	int    0xf8
  42f1b6:	jp     0x42f224
  42f1b8:	jmp    edi
  42f1ba:	add    esi,ebx
  42f1bc:	add    eax,0x7e48492
  42f1c1:	jmp    0xd54019c9
  42f1c6:	jl     0x42f17f
  42f1c8:	jb     0x42f229
  42f1ca:	inc    ecx
  42f1cb:	add    BYTE PTR [eax],al
  42f1cd:	add    BYTE PTR [ebx],bl
  42f1cf:	jbe    0x42f1a4
  42f1d1:	out    dx,eax
  42f1d2:	out    0xc6,al
  42f1d4:	call   0x38a1a951
  42f1d9:	xchg   DWORD PTR [edi+0x72],edi
  42f1dc:	xchg   ecx,eax
  42f1dd:	icebp  
  42f1de:	mov    al,ds:0x6e04291a
  42f1e3:	inc    edi
  42f1e4:	icebp  
  42f1e5:	jg     0x42f1a1
  42f1e7:	push   es
  42f1e8:	jmp    0xf3cd42f0
  42f1ed:	mov    ebx,esi
  42f1ef:	cli    
  42f1f0:	retf   
  42f1f1:	jp     0x42f255
  42f1f3:	pop    ss
  42f1f4:	push   cs
  42f1f5:	inc    esi
  42f1f6:	int3   
  42f1f7:	push   es
  42f1f8:	jmp    0xecd7fe00
  42f1fd:	add    al,0xf3
  42f1ff:	push   es
  42f200:	call   0xa44abd0d
  42f205:	xchg   edi,eax
  42f206:	repz repz cmp BYTE PTR ds:0x41ff7b46,al
  42f20e:	in     eax,0x1
  42f210:	mov    bl,0xa4
  42f212:	push   0xf5f4f7f4
  42f217:	adc    dh,BYTE PTR [esp+esi*8-0x38]
  42f21b:	mov    esi,0xbeb8f873
  42f220:	jae    0x42f1eb
  42f222:	jno    0x42f291
  42f224:	add    DWORD PTR [ebp+0x4e],edi
  42f227:	int    0x73
  42f229:	loop   0x42f253
  42f22b:	cld    
  42f22c:	das    
  42f22d:	add    bh,BYTE PTR [eax]
  42f22f:	jle    0x42f2ad
  42f231:	add    DWORD PTR [eax],eax
  42f233:	add    BYTE PTR [eax],al
  42f235:	js     0x42f25e
  42f237:	jg     0x42f20a
  42f239:	inc    esi
  42f23a:	stc    
  42f23b:	sbb    DWORD PTR [ecx],esi
  42f23d:	jecxz  0x42f257
  42f23f:	dec    eax
  42f240:	pop    ebp
  42f241:	cmp    ch,cl
  42f243:	je     0x42f237
  42f245:	mov    bh,0xd2
  42f247:	repz jo 0x42f245
  42f24a:	jbe    0x42f232
  42f24c:	fisub  DWORD PTR [edi-0x149f0c2e]
  42f252:	pop    esi
  42f253:	out    0xe2,al
  42f255:	xchg   edi,eax
  42f256:	shl    bl,cl
  42f258:	xchg   edx,eax
  42f259:	push   cs
  42f25a:	jle    0x42f2d8
  42f25c:	cdq    
  42f25d:	xchg   edx,edx
  42f25f:	jmp    0x42f2c5
  42f261:	mov    bl,0x5e
  42f263:	dec    edi
  42f264:	mov    es,WORD PTR [ebx]
  42f266:	sub    DWORD PTR [ecx+ebp*1],edx
  42f269:	test   DWORD PTR [ecx-0x12e10b41],0x730376ef
  42f273:	cli    
  42f274:	aam    0x6c
  42f276:	add    eax,0x742fe940
  42f27b:	cli    
  42f27c:	jmp    0xc35aedb1
  42f281:	repnz add DWORD PTR [ecx+eax*2+0x0],0x36007470
  42f28a:	lea    edx,[ebx]
  42f28c:	pop    eax
  42f28d:	mov    esi,0xb04fffc8
  42f292:	or     bh,dh
  42f294:	adc    eax,0x3a6456
  42f299:	add    BYTE PTR [eax],al
  42f29b:	add    BYTE PTR [ecx],al
  42f29d:	(bad)  
  42f29e:	repz sub ecx,DWORD PTR [edi-0x64]
  42f2a2:	bound  ecx,QWORD PTR [ecx+ebp*2]
  42f2a5:	or     BYTE PTR [eax],al
  42f2a7:	push   eax
  42f2a8:	adc    edi,eax
  42f2aa:	out    dx,eax
  42f2ab:	sub    ebx,DWORD PTR [edi-0x2000b570]
  42f2b1:	fwait
  42f2b2:	cmc    
  42f2b3:	jne    0x42f2a7
  42f2b5:	or     eax,0x8bdfff00
  42f2ba:	cmc    
  42f2bb:	adc    eax,0x3a76be
  42f2c0:	add    eax,0x89c9532d
  42f2c5:	and    al,0x83
  42f2c7:	in     al,dx
  42f2c8:	sti    
  42f2c9:	in     eax,dx
  42f2ca:	inc    ebx
  42f2cb:	or     al,0x7
  42f2cd:	call   0x375df2cc
  42f2d2:	dec    edi
  42f2d3:	je     0x42f2ac
  42f2d5:	adc    bl,bh
  42f2d7:	pop    eax
  42f2d8:	icebp  
  42f2d9:	inc    edi
  42f2da:	outs   dx,BYTE PTR ds:[esi]
  42f2db:	cmp    eax,0x306e4921
  42f2e0:	aaa    
  42f2e1:	push   ds
  42f2e2:	add    DWORD PTR [eax],eax
  42f2e4:	or     al,BYTE PTR [eax+eiz*1]
  42f2e7:	sub    ecx,DWORD PTR [ebx+0x17]
  42f2ea:	or     ebp,DWORD PTR [ebx]
  42f2ec:	fwait
  42f2ed:	jns    0x42f272
  42f2ef:	test   al,0xda
  42f2f1:	pop    es
  42f2f2:	add    bh,al
  42f2f4:	movq   QWORD PTR [edi],mm0
  42f2f7:	add    cl,dl
  42f2f9:	pop    es
  42f2fa:	sub    bl,bl
  42f2fc:	and    DWORD PTR [ebp+edi*4+0x45],ebx
  42f300:	add    BYTE PTR [eax],al
  42f302:	add    BYTE PTR [esi],ah
  42f304:	jne    0x42f302
  42f306:	push   ebx
  42f308:	pop    ebp
  42f309:	xchg   edi,eax
  42f30a:	out    dx,al
  42f30b:	lods   al,BYTE PTR ds:[esi]
  42f30c:	stos   BYTE PTR es:[edi],al
  42f30d:	cmp    dh,0xf2
  42f310:	pop    ebp
  42f311:	(bad)  
  42f312:	out    0x99,al
  42f314:	sub    al,0x3b
  42f316:	cld    
  42f317:	dec    edx
  42f318:	pop    ebp
  42f319:	(bad)  
  42f31a:	dec    DWORD PTR [eax-0x70bb44b3]
  42f320:	ret    
  42f321:	add    eax,DWORD PTR [eax]
  42f323:	repz sbb ch,bh
  42f326:	ret    0x1a36
  42f329:	popa   
  42f32a:	push   DWORD PTR [ebp+ebx*2+0x4f]
  42f32e:	add    BYTE PTR [edx+edx*2-0xe],ch
  42f332:	push   cs
  42f333:	mov    bl,0x5d
  42f335:	ja     0x42f32e
  42f337:	push   0x6d38f6a2
  42f33c:	icebp  
  42f33d:	std    
  42f33e:	push   ebx
  42f340:	sar    BYTE PTR [ebx],cl
  42f342:	xchg   DWORD PTR [ebp-0x2b],esi
  42f345:	(bad)  
  42f346:	push   ebx
  42f348:	sbb    BYTE PTR [ebx],dh
  42f34a:	or     al,0xbe
  42f34c:	add    bh,BYTE PTR [ecx-0x36]
  42f34f:	fdivr  st,st(3)
  42f351:	sbb    al,BYTE PTR [ecx]
  42f353:	repz pop ebp
  42f355:	jge    0x42f34f
  42f357:	or     esp,DWORD PTR [eax-0x2]
  42f35a:	call   FWORD PTR [edx+esi*2+0x7a86d67a]
  42f361:	sbb    dl,ah
  42f363:	mov    ds:0x5be994,eax
  42f368:	add    BYTE PTR [eax],al
  42f36a:	out    0x1d,eax
  42f36c:	add    al,0xa8
  42f36e:	jmp    0x42f389
  42f370:	out    0x2e,eax
  42f372:	mov    bl,0xf7
  42f374:	jl     0x42f3dd
  42f376:	repnz pop edi
  42f378:	dec    BYTE PTR [eax-0xfb8b]
  42f37e:	repz out 0x7c,al
  42f381:	imul   esi,edx,0x6
  42f384:	jmp    0x5d0f5f8c
  42f389:	cwde   
  42f38a:	in     eax,0x7d
  42f38c:	stos   DWORD PTR es:[edi],eax
  42f38d:	sti    
  42f38e:	ins    DWORD PTR es:[edi],dx
  42f38f:	(bad)  
  42f390:	fdivr  QWORD PTR [edx+0x7a]
  42f393:	(bad)  
  42f395:	add    esi,ebx
  42f397:	jg     0x42f413
  42f399:	pop    ds
  42f39a:	repnz push es
  42f39c:	jmp    0xe826661b
  42f3a1:	add    esi,ebx
  42f3a3:	jge    0x42f350
  42f3a5:	imul   DWORD PTR [ecx]
  42f3a7:	into   
  42f3a8:	das    
  42f3a9:	shl    esp,0x6
  42f3ac:	mov    esp,0xb5d88878
  42f3b1:	sub    eax,0xef837dc0
  42f3b6:	ins    DWORD PTR es:[edi],dx
  42f3b7:	ja     0x42f420
  42f3b9:	test   bl,dh
  42f3bb:	add    al,0xe9
  42f3bd:	add    ebx,edi
  42f3bf:	push   ss
  42f3c0:	push   0xe904f184
  42f3c5:	add    edi,DWORD PTR [edi-0xf7c9802]
  42f3cb:	add    al,0xe9
  42f3cd:	add    eax,DWORD PTR [eax]
  42f3cf:	add    BYTE PTR [eax],al
  42f3d1:	mov    esi,0x28063eda
  42f3d6:	cld    
  42f3d7:	lock cmp bh,0xe6
  42f3db:	aam    0xc3
  42f3dd:	sbb    al,0x7d
  42f3df:	nop
  42f3e0:	aas    
  42f3e1:	jns    0x42f3da
  42f3e3:	out    0x3,eax
  42f3e5:	repz cli 
  42f3e7:	loope  0x42f3fb
  42f3e9:	inc    eax
  42f3ea:	(bad)  
  42f3eb:	clc    
  42f3ec:	nop
  42f3ed:	mov    bh,0x72
  42f3ef:	cmp    dh,ch
  42f3f1:	nop
  42f3f2:	add    DWORD PTR [edx+0x4b],edx
  42f3f5:	push   esi
  42f3f6:	add    eax,0xfdf464a8
  42f3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3fc:	aam    0x2d
  42f3fe:	(bad)  
  42f400:	(bad)  
  42f401:	jno    0x42f3fd
  42f403:	pop    es
  42f404:	outs   dx,BYTE PTR ds:[esi]
  42f405:	jmp    0xbf8b:0xf0a9140a
  42f40c:	aad    0xe4
  42f40e:	icebp  
  42f40f:	jl     0x42f466
  42f411:	in     eax,dx
  42f412:	std    
  42f413:	xor    eax,0xfffffff7
  42f416:	push   es
  42f417:	add    BYTE PTR [edx-0xe],ch
  42f41a:	jb     0x42f41f
  42f41c:	out    dx,al
  42f41d:	je     0x42f41b
  42f41f:	add    cl,ch
  42f421:	lock jg 0x42f3bd
  42f424:	mov    ecx,0xf60006f7
  42f429:	dec    ecx
  42f42a:	ror    BYTE PTR [edi],cl
  42f42c:	out    dx,al
  42f42d:	cmp    DWORD PTR [esi+eax*4-0x2c],eax
  42f431:	mov    ah,0x1a
  42f433:	inc    eax
  42f434:	jmp    0xb742f439
  42f439:	push   ecx
  42f43a:	pslld  mm5,QWORD PTR [ebp-0x178b053f]
  42f441:	jg     0x42f49f
  42f443:	cmc    
  42f444:	inc    esi
  42f445:	adc    ebx,edi
  42f447:	je     0x42f441
  42f449:	ins    DWORD PTR es:[edi],dx
  42f44a:	ror    BYTE PTR [edi+0x6c],cl
  42f44d:	repnz (bad)
  42f450:	cmp    edx,DWORD PTR [eax]
  42f452:	jmpw   0x3b54
  42f456:	xchg   BYTE PTR [edi-0x39dc1368],bl
  42f45c:	jno    0x42f4ca
  42f45e:	je     0x42f43d
  42f460:	add    DWORD PTR [esi-0x58fe641],esi
  42f466:	adc    ebp,DWORD PTR [esi+0xce8090b]
  42f46c:	jno    0x42f4da
  42f46e:	cli    
  42f46f:	cmp    DWORD PTR [esi-0xf170045],ecx
  42f475:	ins    DWORD PTR es:[edi],dx
  42f476:	je     0x42f469
  42f478:	jno    0x42f475
  42f47a:	pop    es
  42f47b:	add    BYTE PTR [edx+0x5dfff858],al
  42f481:	add    DWORD PTR [ebx+0x18],0x49
  42f485:	icebp  
  42f486:	add    cl,BYTE PTR [edi]
  42f488:	sub    eax,0xda00011b
  42f48d:	adc    eax,0x4caed84
  42f492:	add    BYTE PTR [ebx-0x7bf8f5df],al
  42f498:	mov    BYTE PTR [eax+eax*1],al
  42f49b:	add    BYTE PTR [eax],al
  42f49d:	add    BYTE PTR [eax],al
  42f49f:	sbb    ecx,esi
  42f4a1:	stc    
  42f4a2:	jae    0x42f509
  42f4a4:	mov    ecx,esi
  42f4a6:	add    eax,0x4b8b4f56
  42f4ab:	ror    BYTE PTR [eax+0x486501f7],0x3b
  42f4b2:	mov    eax,ds:0x7400048a
  42f4b7:	stos   DWORD PTR es:[edi],eax
  42f4b8:	(bad)  
  42f4b9:	cdq    
  42f4ba:	add    BYTE PTR [edx+0x4],bl
  42f4bd:	je     0x42f4f5
  42f4bf:	das    
  42f4c0:	test   eax,0x784afffa
  42f4c5:	and    eax,0x3aa3d
  42f4ca:	add    dh,al
  42f4cc:	sbb    edi,DWORD PTR ds:0x45aa5
  42f4d2:	jne    0x42f48a
  42f4d4:	fist   DWORD PTR [ebp+0x1]
  42f4d7:	dec    edx
  42f4d8:	add    al,0x83
  42f4da:	pop    ebp
  42f4db:	adc    ah,BYTE PTR [edx-0x1]
  42f4de:	imul   ebx,DWORD PTR [edx],0x5d52fa62
  42f4e4:	sbb    ah,ah
  42f4e6:	adc    ecx,edx
  42f4e8:	or     dl,BYTE PTR [eax-0x18]
  42f4eb:	jecxz  0x42f473
  42f4ed:	cmc    
  42f4ee:	inc    DWORD PTR [ecx-0x4074edb9]
  42f4f4:	xchg   ch,dh
  42f4f6:	jne    0x42f4eb
  42f4f8:	cmp    eax,0x8166e8d3
  42f4fd:	cmp    dl,0x26
  42f500:	mov    edi,0x3
  42f505:	add    bl,dh
  42f507:	jp     0x42f50e
  42f509:	repz add ax,WORD PTR [ecx+0x6b6645fa]
  42f511:	and    al,0x6
  42f513:	jle    0x42f518
  42f515:	add    bl,dh
  42f517:	pop    edx
  42f518:	and    esp,DWORD PTR [esi-0xd]
  42f51b:	inc    ebx
  42f51c:	and    dh,0x9d
  42f51f:	add    ah,BYTE PTR [ebp-0xea25b01]
  42f525:	sbb    al,0x5b
  42f527:	cmp    eax,0x3894ff6e
  42f52c:	repz pop ds
  42f52e:	cld    
  42f52f:	clc    
  42f530:	inc    ebx
  42f531:	dec    edi
  42f532:	sbb    ebp,DWORD PTR [ebp+edi*8-0x1]
  42f536:	repz adc bl,dh
  42f539:	pop    es
  42f53a:	je     0x42f56c
  42f53c:	loope  0x42f597
  42f53e:	enter  0x4226,0x1b
  42f542:	repz dec edx
  42f544:	mov    eax,ds:0xf5d5cff
  42f549:	test   BYTE PTR [ebp+0x5d],al
  42f54c:	(bad)  
  42f54d:	dec    DWORD PTR [esi]
  42f54f:	mov    edi,0x54f30003
  42f554:	jge    0x42f592
  42f556:	nop
  42f557:	pop    ebp
  42f558:	(bad)  
  42f559:	(bad)  
  42f55a:	mov    edi,0xf3a539fa
  42f55f:	pop    ebp
  42f560:	dec    BYTE PTR [edx]
  42f562:	outs   dx,DWORD PTR ds:[esi]
  42f563:	xchg   edx,eax
  42f564:	(bad)  
  42f565:	push   ebx
  42f567:	jb     0x42f506
  42f569:	inc    DWORD PTR [eax]
  42f56b:	add    BYTE PTR [eax],al
  42f56d:	adc    al,0x5d
  42f56f:	icebp  
  42f570:	leave  
  42f571:	js     0x42f575
  42f573:	or     al,0x66
  42f575:	repnz push es
  42f577:	mov    ds:0xe8dcecf6,al
  42f57c:	aam    0xf9
  42f57e:	sbb    BYTE PTR [ebp+0x39073314],cl
  42f584:	ins    BYTE PTR es:[edi],dx
  42f585:	mov    cl,0x72
  42f587:	add    DWORD PTR [eax-0x5a444b2b],0x10e86ed4
  42f591:	jbe    0x42f5c1
  42f593:	push   0xffffff80
  42f595:	leave  
  42f596:	sub    BYTE PTR [ebx+0x4c7c00f],0x4
  42f59d:	repz or cl,ch
  42f5a0:	test   DWORD PTR [edx-0x5b8bf751],0x1d894d6e
  42f5aa:	jb     0x42f59b
  42f5ac:	neg    edx
  42f5ae:	std    
  42f5af:	(bad)  
  42f5b0:	retf   0x6e89
  42f5b3:	sub    DWORD PTR [ebp+edi*2-0x24a5ce8],eax
  42f5ba:	jno    0x42f5b0
  42f5bc:	neg    edx
  42f5be:	mov    DWORD PTR ds:0xd283f816,ecx
  42f5c4:	sub    BYTE PTR [ecx+0x6e],0xc3
  42f5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5c9:	pop    esp
  42f5ca:	outs   dx,BYTE PTR ds:[esi]
  42f5cb:	call   0xf24d63e0
  42f5d0:	jg     0x42f5d2
  42f5d2:	add    BYTE PTR [eax],al
  42f5d4:	dec    ecx
  42f5d5:	scas   eax,DWORD PTR es:[edi]
  42f5d6:	push   0xcf6e4472
  42f5db:	sar    DWORD PTR [ecx],cl
  42f5dd:	outs   dx,BYTE PTR ds:[esi]
  42f5de:	fld    DWORD PTR [ecx+0x55]
  42f5e1:	pop    es
  42f5e2:	jmp    0xbac6edea
  42f5e7:	jle    0x42f612
  42f5e9:	outs   dx,BYTE PTR ds:[esi]
  42f5ea:	iret   
  42f5eb:	sbb    BYTE PTR ds:[esi-0x47],ch
  42f5ef:	mov    ebp,0xe8ff6e19
  42f5f4:	lock sub ebx,DWORD PTR [esi+0x7506f0e9]
  42f5fb:	shr    BYTE PTR [ecx-0x3d],1
  42f5fe:	or     esi,DWORD PTR [edx+0x2f]
  42f601:	sub    ch,BYTE PTR [ecx+0x7f0e9]
  42f607:	fisubr WORD PTR [eax+edi*1-0x5]
  42f60b:	xchg   BYTE PTR [ebx+eiz*1+0x0],bl
  42f60f:	jmp    0x9235fe04
  42f614:	call   0xefbc1a5f
  42f619:	push   es
  42f61a:	add    ah,ch
  42f61c:	add    BYTE PTR [edi-0x1],dh
  42f61f:	call   0x4302b009
  42f624:	add    ch,BYTE PTR [eiz*4+0xb06f0e9]
  42f62b:	ins    BYTE PTR es:[edi],dx
  42f62c:	sti    
  42f62d:	jno    0x42f629
  42f62f:	ds push 0x376c6146
  42f635:	add    DWORD PTR [eax+eiz*8+0x5000000],eax
  42f63c:	jno    0x42f638
  42f63e:	(bad)  
  42f63f:	mov    ecx,0x4640a47
  42f644:	jo     0x42f640
  42f646:	push   ss
  42f647:	in     al,dx
  42f648:	repnz pop ds
  42f64a:	push   cs
  42f64b:	push   0x5
  42f64d:	data16 or bh,0x5f
  42f651:	stc    
  42f652:	(bad)  
  42f653:	aad    0xd2
  42f655:	xchg   BYTE PTR ds:0x9a5b6170,al
  42f65b:	push   ds
  42f65c:	test   bh,ch
  42f65e:	jb     0x42f696
  42f660:	std    
  42f661:	push   edx
  42f662:	sbb    dh,BYTE PTR [esi+edi*2+0x2e16dd7c]
  42f669:	mov    eax,0x6eff9
  42f66e:	add    dh,bl
  42f670:	and    dh,ch
  42f672:	inc    ebp
  42f673:	and    al,BYTE PTR [edx]
  42f675:	je     0x42f688
  42f677:	xchg   ecx,eax
  42f678:	or     cl,BYTE PTR ds:[ebx-0x297ce919]
  42f67f:	bound  ecx,QWORD PTR [eax-0xf]
  42f682:	call   DWORD PTR [ebp-0x78]
  42f685:	arpl   WORD PTR [eax],cx
  42f687:	test   dl,dh
  42f689:	inc    ebx
  42f68a:	or     dh,cl
  42f68c:	je     0x42f6b3
  42f68e:	push   0xffffffcb
  42f690:	push   ebp
  42f691:	dec    ebp
  42f692:	xor    edx,DWORD PTR [ecx+0x45fab5e0]
  42f698:	in     eax,dx
  42f699:	loope  0x42f6bd
  42f69b:	push   ecx
  42f69c:	mov    BYTE PTR [edx],al
  42f69e:	add    DWORD PTR [eax],eax
  42f6a0:	add    BYTE PTR [eax],al
  42f6a2:	retf   0x8908
  42f6a5:	inc    ebp
  42f6a6:	push   ds
  42f6a7:	xor    DWORD PTR [edi+0x7b7b9f75],edi
  42f6ad:	in     al,0x31
  42f6af:	sbb    BYTE PTR [edi+0x32],cl
  42f6b2:	retf   0xc880
  42f6b5:	call   0x3a1fad
  42f6ba:	xchg   ebp,eax
  42f6bb:	mov    ch,0xba
  42f6bd:	mov    DWORD PTR [edi-0x1c],ecx
  42f6c0:	add    DWORD PTR [esi+0x7a],0x10c4b81
  42f6c7:	add    cl,BYTE PTR [bx+di+0x7d2]
  42f6cc:	add    DWORD PTR [eax],eax
  42f6ce:	pop    edx
  42f6cf:	add    DWORD PTR [eax+0x10],0x890a56e1
  42f6d6:	loop   0x42f6db
  42f6d8:	add    DWORD PTR [eax],eax
  42f6da:	pop    edx
  42f6db:	xor    edi,edx
  42f6dd:	bswap  esi
  42f6df:	imul   edi,esp,0x5b814aff
  42f6e5:	lock leave 
  42f6e7:	arpl   dx,bp
  42f6e9:	add    dh,bl
  42f6eb:	leave  
  42f6ec:	pop    es
  42f6ed:	repnz dec ax
  42f6f0:	add    edx,esi
  42f6f2:	xor    BYTE PTR [edx-0xe],bl
  42f6f5:	add    eax,0x86feedbc
  42f6fa:	cmp    eax,0x4207746
  42f6ff:	popf   
  42f700:	xchg   BYTE PTR [edi+ecx*1-0x1f],bl
  42f704:	loop   0x42f6f1
  42f706:	add    BYTE PTR [eax],al
  42f708:	add    bl,dl
  42f70a:	adc    DWORD PTR [eax],ecx
  42f70c:	data16 repnz mov BYTE PTR [ecx],al
  42f710:	repnz mov al,0x1d
  42f713:	clc    
  42f714:	add    eax,0x87082e44
  42f719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f71a:	xchg   ebp,eax
  42f71b:	pop    ebx
  42f71c:	and    ah,cl
  42f71e:	hlt    
  42f71f:	xchg   BYTE PTR [ebx+ebx*8-0x20],bl
  42f723:	loop   0x42f70c
  42f725:	jmp    0x42f770
  42f727:	add    ah,BYTE PTR [esi-0xe]
  42f72a:	fadd   DWORD PTR [ecx]
  42f72c:	repnz mov al,0x6d
  42f72f:	repnz add eax,0x86fd8e3c
  42f735:	lods   eax,DWORD PTR ds:[esi]
  42f736:	aad    0xbf
  42f738:	and    BYTE PTR [esp+ebp*1+0x34e34189],dl
  42f73f:	mov    ah,0x3
  42f741:	repnz pop ebp
  42f743:	dec    BYTE PTR [esi+eiz*1-0xc5082da]
  42f74a:	pop    esi
  42f74b:	(bad)  
  42f74c:	(bad)  
  42f74d:	fnstcw WORD PTR [ecx-0x2b]
  42f750:	out    0x81,eax
  42f752:	xchg   esp,eax
  42f753:	jl     0x42f74f
  42f755:	push   0x5b448905
  42f75a:	loopne 0x42f79f
  42f75c:	icebp  
  42f75d:	jp     0x42f751
  42f75f:	jp     0x42f7df
  42f761:	dec    ebx
  42f762:	fs repz xor ecx,ecx
  42f766:	push   es
  42f767:	(bad)  
  42f769:	cmp    DWORD PTR [ecx],edx
  42f76b:	fst    QWORD PTR [eax]
  42f76d:	add    BYTE PTR [eax],al
  42f76f:	add    BYTE PTR [ebx-0xcfc7ffa],dh
  42f775:	push   es
  42f776:	sub    eax,edi
  42f778:	shr    BYTE PTR [ebp+0x63303e8],1
  42f77e:	outs   dx,BYTE PTR ds:[esi]
  42f77f:	push   ebx
  42f780:	in     eax,dx
  42f781:	push   ebp
  42f782:	in     eax,dx
  42f783:	push   edx
  42f784:	adc    BYTE PTR [ebx],0x80
  42f787:	add    esi,ebx
  42f789:	add    ch,BYTE PTR [ecx-0xa]
  42f78c:	in     al,0xd3
  42f78e:	cdq    
  42f78f:	push   ss
  42f790:	dec    ebx
  42f791:	adc    ebp,DWORD PTR [ecx]
  42f793:	add    al,0x6e
  42f795:	inc    edi
  42f796:	adc    al,0x7
  42f798:	push   0xffffffc4
  42f79a:	test   BYTE PTR [eax-0x8867b24],cl
  42f7a0:	pop    ds
  42f7a1:	rol    BYTE PTR [eax+0x6969e799],cl
  42f7a7:	stos   DWORD PTR es:[edi],eax
  42f7a8:	cld    
  42f7a9:	repnz add eax,0xd4733639
  42f7af:	push   ss
  42f7b0:	adc    eax,0xff7cba07
  42f7b5:	(bad)  
  42f7b6:	cmc    
  42f7b7:	ret    
  42f7b8:	pushf  
  42f7b9:	loopne 0x42f7a2
  42f7bb:	jmp    0x5cb0b254
  42f7c0:	xchg   esp,eax
  42f7c1:	mov    DWORD PTR [edi],ebp
  42f7c3:	jl     0x42f74e
  42f7c5:	inc    edx
  42f7c6:	mov    ds:0xe906f37b,eax
  42f7cb:	add    ecx,DWORD PTR [ebx+eax*8-0x7b9f2193]
  42f7d2:	sub    eax,0xf7
  42f7d7:	daa    
  42f7d8:	(bad)  
  42f7d9:	or     DWORD PTR [esi],edx
  42f7db:	retf   
  42f7dc:	adc    ch,BYTE PTR [ecx+0x74476e03]
  42f7e2:	pop    ds
  42f7e3:	jbe    0x42f84f
  42f7e5:	(bad)  
  42f7e6:	jl     0x42f7e2
  42f7e8:	xor    ebx,ebx
  42f7ea:	jne    0x42f7e2
  42f7ec:	je     0x42f832
  42f7ee:	int    0xf0
  42f7f0:	repnz or DWORD PTR [eax+0x4a],esi
  42f7f4:	outs   dx,BYTE PTR ds:[esi]
  42f7f5:	ret    0xa72c
  42f7f8:	push   es
  42f7f9:	add    cl,ch
  42f7fb:	lock xor esi,0x7c8801d2
  42f802:	icebp  
  42f803:	test   DWORD PTR [esi-0x4eb1701],0x6a0ee865
  42f80d:	push   0xe751bde9
  42f812:	cmp    BYTE PTR [esi+0x6d],ch
  42f815:	cli    
  42f816:	ins    BYTE PTR es:[edi],dx
  42f817:	push   0xf61e83fd
  42f81c:	push   es
  42f81d:	add    BYTE PTR [edx+esi*4-0x5f],dh
  42f821:	dec    edi
  42f822:	push   ss
  42f823:	xor    bl,al
  42f825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f826:	mov    ch,0xf0
  42f828:	push   es
  42f829:	add    BYTE PTR [esi-0x1e],ch
  42f82c:	cs adc al,0xa9
  42f82f:	lock cmp DWORD PTR [edi+0x1332cee],0xffffffe9
  42f837:	lock std 
  42f839:	mov    dl,0xac
  42f83b:	add    BYTE PTR [eax],al
  42f83d:	add    BYTE PTR [eax],al
  42f83f:	(bad)  
  42f840:	mov    dl,0xac
  42f842:	in     al,dx
  42f843:	inc    edi
  42f844:	fcompp 
  42f846:	std    
  42f847:	dec    esi
  42f848:	jle    0x42f7fe
  42f84a:	or     BYTE PTR [edi],al
  42f84c:	jne    0x42f854
  42f84e:	mov    al,ds:0xf805f361
  42f853:	ins    BYTE PTR es:[edi],dx
  42f854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f855:	leave  
  42f856:	pop    esp
  42f857:	add    eax,0xdd41287
  42f85c:	xchg   DWORD PTR [eax+eax*1+0xa004522],esp
  42f863:	(bad)  
  42f864:	scas   al,BYTE PTR es:[edi]
  42f865:	clc    
  42f866:	rol    DWORD PTR [edi+0x6],0x2b
  42f86a:	xchg   edi,eax
  42f86b:	mov    cl,0xbf
  42f86d:	out    0x1a,eax
  42f86f:	cld    
  42f870:	scas   al,BYTE PTR es:[edi]
  42f871:	rol    BYTE PTR [ecx-0x13],0xe1
  42f875:	add    esp,DWORD PTR [ecx-0x407cfd92]
  42f87b:	repnz cli 
  42f87d:	jae    0x42f8bb
  42f87f:	push   eax
  42f880:	dec    ebp
  42f881:	push   0x56b
  42f886:	mov    ds:0x1afffa03,al
  42f88b:	fmul   DWORD PTR [esi+esi*8]
  42f88e:	xlat   BYTE PTR ds:[ebx]
  42f88f:	cli    
  42f890:	add    esi,DWORD PTR [edi+ebp*8+0x51]
  42f894:	dec    ebp
  42f895:	push   0x438
  42f89a:	repnz add dl,bh
  42f89d:	dec    edx
  42f89f:	in     eax,dx
  42f8a0:	jae    0x42f89a
  42f8a2:	add    BYTE PTR [eax],al
  42f8a4:	add    BYTE PTR [edi+0x47],bl
  42f8a7:	mov    ds:0xf6774d50,al
  42f8ac:	mov    edx,DWORD PTR [esp+ebx*8-0x12b204dc]
  42f8b3:	jns    0x42f932
  42f8b5:	push   ds
  42f8b6:	add    al,0x74
  42f8b8:	push   cs
  42f8b9:	imul   edx,DWORD PTR [ebp+0x62],0x49aa7
  42f8c0:	push   0x295
  42f8c5:	inc    ecx
  42f8c6:	adc    ch,dh
  42f8c8:	inc    ebp
  42f8c9:	add    BYTE PTR [esi+ebp*2+0x1d],0x69
  42f8ce:	push   ebp
  42f8cf:	bound  ebp,QWORD PTR [eax+0x6800048a]
  42f8d5:	add    BYTE PTR [edx],0x0
  42f8d8:	add    BYTE PTR ds:0xf38df277,cl
  42f8de:	call   0x8672:0x935c4fa6
  42f8e5:	sub    eax,0x4cf57216
  42f8ea:	imul   eax,DWORD PTR [esp+edi*2+0x9ea5e5b],0xa3e690a0
  42f8f5:	repz pop ebp
  42f8f7:	(bad)  
  42f8f8:	neg    DWORD PTR [bp+di-0x2]
  42f8fc:	call   FWORD PTR [eax]
  42f8fe:	ins    BYTE PTR es:[edi],dx
  42f8ff:	jo     0x42f945
  42f901:	jmp    0x42f970
  42f903:	jmp    0xa4:0xec08c01c
  42f90a:	add    BYTE PTR [eax],al
  42f90c:	repz pop ebp
  42f90e:	(bad)  
  42f90f:	addr16 out dx,al
  42f911:	pop    ebx
  42f912:	(bad)  
  42f913:	(bad)  
  42f914:	cld    
  42f915:	xor    bh,BYTE PTR [esp+ecx*4-0x52]
  42f919:	aad    0xd3
  42f91b:	cli    
  42f91c:	data16 mov cl,BYTE PTR [ecx+eax*8-0x5862e25]
  42f924:	fmul   QWORD PTR [edi+0x69f207ba]
  42f92a:	adc    DWORD PTR [edi+0x24],ecx
  42f92d:	push   ss
  42f92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f92f:	inc    esp
  42f931:	pop    ebp
  42f932:	out    0xff,al
  42f934:	repnz pop ebp
  42f936:	(bad)  
  42f937:	cli    
  42f938:	ds out 0x82,al
  42f93b:	inc    esp
  42f93c:	pop    ebx
  42f93d:	lods   eax,DWORD PTR ds:[esi]
  42f93e:	ja     0x42f9b4
  42f940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f941:	in     al,0x3d
  42f943:	out    0x7a,eax
  42f945:	sar    DWORD PTR [eax-0x6],cl
  42f948:	pushf  
  42f949:	call   0x73fe:0x5dfb0006
  42f950:	int3   
  42f951:	inc    ebx
  42f952:	(bad)  
  42f953:	sub    eax,0xe745e4b3
  42f958:	inc    ebp
  42f959:	push   es
  42f95a:	add    bh,BYTE PTR [ecx+0x69]
  42f95d:	not    DWORD PTR [ecx-0x39]
  42f960:	add    al,bh
  42f962:	pop    ecx
  42f963:	inc    esp
  42f964:	lods   eax,DWORD PTR ds:[esi]
  42f965:	inc    ebp
  42f966:	pop    es
  42f967:	adc    al,0xec
  42f969:	ds xchg edi,eax
  42f96b:	jmp    0x42f963
  42f96d:	add    al,0xe9
  42f96f:	add    eax,DWORD PTR [eax]
  42f971:	add    BYTE PTR [eax],al
  42f973:	dec    eax
  42f974:	icebp  
  42f975:	hlt    
  42f976:	js     0x42f95f
  42f978:	sub    dl,ch
  42f97a:	ret    
  42f97b:	xor    al,0xc8
  42f97d:	inc    edx
  42f97e:	fnstsw WORD PTR [ebx]
  42f980:	inc    esp
  42f981:	clc    
  42f982:	add    esp,DWORD PTR [ecx]
  42f984:	add    DWORD PTR [ecx],ecx
  42f986:	test   al,0xdd
  42f988:	push   es
  42f989:	in     eax,0xef
  42f98b:	cmc    
  42f98c:	pop    esi
  42f98d:	cmp    ah,BYTE PTR [edi+ecx*1+0x67]
  42f991:	fs inc ebx
  42f993:	or     BYTE PTR [esi+ebx*2],0x6
  42f997:	mov    ebp,DWORD PTR [esi-0x5017fbdb]
  42f99d:	addr16 push ebx
  42f9a0:	push   es
  42f9a1:	jmp    0xe8d399ae
  42f9a6:	add    dh,bl
  42f9a8:	push   es
  42f9a9:	test   al,0x63
  42f9ab:	in     al,0x11
  42f9ad:	test   al,0x44
  42f9af:	leave  
  42f9b0:	sub    al,0x49
  42f9b2:	rdpmc  
  42f9b4:	pop    es
  42f9b5:	jnp    0x42f9b5
  42f9b7:	fdiv   QWORD PTR [edx-0x2510fbdb]
  42f9bd:	and    BYTE PTR [eax+esi*1+0x67],ch
  42f9c1:	pop    ebx
  42f9c2:	js     0x42fa34
  42f9c4:	inc    edi
  42f9c5:	fsubr  QWORD PTR [eax]
  42f9c7:	je     0x42f994
  42f9c9:	add    al,0x0
  42f9cb:	outs   dx,BYTE PTR ds:[esi]
  42f9cc:	inc    edi
  42f9cd:	mov    esp,0xd1147424
  42f9d2:	mov    ebx,0x620006c5
  42f9d7:	add    BYTE PTR [eax],al
  42f9d9:	add    BYTE PTR [ecx+0x66],ch
  42f9dc:	(bad)  
  42f9dd:	call   0x724a89d2
  42f9e2:	cmc    
  42f9e3:	out    dx,al
  42f9e4:	mov    bh,0xaa
  42f9e6:	lock lea ecx,[eax+0x6f1ed]
  42f9ed:	pusha  
  42f9ee:	sub    BYTE PTR [edx],cl
  42f9f0:	das    
  42f9f1:	sub    DWORD PTR [eax],esi
  42f9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9f4:	add    ebp,ecx
  42f9f6:	inc    DWORD PTR [esi-0x1a]
  42f9f9:	lock les ebp,FWORD PTR [edx]
  42f9fc:	cmp    ah,dl
  42f9fe:	xor    BYTE PTR [esi-0xc],ah
  42fa01:	in     al,dx
  42fa02:	shl    BYTE PTR [edx-0x25db16c2],1
  42fa08:	sub    ecx,eax
  42fa0a:	call   0x73a6:0x73cefc40
  42fa11:	or     al,0x56
  42fa13:	out    dx,al
  42fa14:	mov    bh,0x2a
  42fa16:	out    dx,eax
  42fa17:	lea    ecx,[ebx+0xd]
  42fa1a:	repz pop DWORD PTR [edi+0x6efe9]
  42fa21:	jb     0x42f9d6
  42fa23:	sub    DWORD PTR [eax],ecx
  42fa25:	jb     0x42fa21
  42fa27:	out    dx,al
  42fa28:	mov    bh,0x2a
  42fa2a:	test   DWORD PTR [edi+0x6efe580],0x2630ba00
  42fa34:	mov    esi,0x2461f0f1
  42fa39:	jno    0x42fa1e
  42fa3b:	(bad)  
  42fa3c:	push   DWORD PTR [esi+0x0]
  42fa3f:	add    BYTE PTR [eax],al
  42fa41:	repnz lods al,BYTE PTR es:[esi]
  42fa44:	stos   BYTE PTR es:[edi],al
  42fa45:	lock or cl,BYTE PTR [edi-0x49]
  42fa49:	mov    ch,0xd9
  42fa4b:	inc    esp
  42fa4c:	inc    ecx
  42fa4d:	pop    edx
  42fa4e:	inc    eax
  42fa4f:	cld    
  42fa50:	dec    esi
  42fa51:	jae    0x42f9f8
  42fa53:	jae    0x42fa55
  42fa55:	not    BYTE PTR [ecx+0x18aa2456]
  42fa5b:	out    dx,al
  42fa5c:	cmp    esp,esp
  42fa5e:	push   edi
  42fa5f:	adc    edx,DWORD PTR [esi+0x5c]
  42fa62:	push   ebx
  42fa63:	sub    ebx,ebx
  42fa65:	aam    0x42
  42fa67:	mov    dl,0x43
  42fa69:	pop    edx
  42fa6a:	icebp  
  42fa6b:	add    eax,0x55de05f7
  42fa70:	pop    esi
  42fa71:	mov    eax,ds:0xf5fffec7
  42fa76:	neg    DWORD PTR [ebx+0x11]
  42fa79:	call   0xf5e2:0xd1534e09
  42fa80:	adc    eax,0x3ff9ee
  42fa85:	shl    edx,1
  42fa87:	jae    0x42fa8e
  42fa89:	fcom   QWORD PTR [ebp+ecx*2-0x15]
  42fa8d:	pop    ebp
  42fa8e:	sbb    al,al
  42fa90:	jmp    0x42fad9
  42fa92:	cmp    al,0x58
  42fa94:	pop    ebx
  42fa95:	xor    eax,0xda14d026
  42fa9a:	or     ch,dh
  42fa9c:	add    eax,0x39aeea
  42faa1:	push   cs
  42faa2:	jne    0x42fae3
  42faa4:	call   0xfc42faa9
  42faa9:	mov    ebx,0xc84efffb
  42faae:	outs   dx,BYTE PTR ds:[esi]
  42faaf:	cmp    BYTE PTR [ebp+0xa115bf7],al
  42fab5:	or     eax,DWORD PTR [ebx+0x39a2e20d]
  42fabb:	add    BYTE PTR [ebx-0x35fef975],dh
  42fac1:	or     BYTE PTR [ebp+0x19],dh
  42fac4:	fst    DWORD PTR [ecx+ebp*1-0x40]
  42fac8:	push   0x38
  42faca:	dec    edx
  42facb:	xor    esi,DWORD PTR [ecx]
  42facd:	call   0xe7fe:0xb0f3b852
  42fad4:	dec    ecx
  42fad5:	mov    esp,0x2dc0fa71
  42fada:	aad    0x3f
  42fadc:	sub    BYTE PTR [ecx],dh
  42fade:	jmp    0x1a8676e7
  42fae3:	push   cs
  42fae4:	xor    ebp,DWORD PTR [esi+0x2d]
  42fae7:	shl    BYTE PTR [eax],0x2d
  42faea:	and    BYTE PTR [esi+edi*8-0x53],cl
  42faee:	(bad)  
  42faef:	icebp  
  42faf0:	test   BYTE PTR [ebp-0x5e],0x3e
  42faf4:	repz imul ecx,esp,0xff5b873
  42fafb:	fild   DWORD PTR [esi+0x65]
  42fafe:	jns    0x42fabf
  42fb00:	(bad)  
  42fb01:	scas   eax,DWORD PTR es:[edi]
  42fb02:	jno    0x42fb18
  42fb04:	xchg   edi,eax
  42fb05:	ds mov esi,0xe65b79ff
  42fb0b:	mov    bh,0x0
  42fb0d:	add    BYTE PTR [eax],al
  42fb0f:	mov    al,0x6d
  42fb11:	xor    eax,0xfe6eef81
  42fb16:	call   FWORD PTR [esi-0x44f76f5]
  42fb1c:	outs   dx,BYTE PTR ds:[esi]
  42fb1d:	(bad)  
  42fb1e:	jmp    FWORD PTR [esi-0x64]
  42fb21:	out    dx,eax
  42fb22:	pop    ds
  42fb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb24:	pushf  
  42fb25:	or     ch,BYTE PTR [eax-0x21]
  42fb28:	sub    eax,0x2b38504
  42fb2d:	or     ecx,DWORD PTR [edi+0x43]
  42fb30:	push   ds
  42fb31:	aam    0x2e
  42fb33:	mov    eax,0x30b7dbbb
  42fb38:	outs   dx,BYTE PTR ds:[esi]
  42fb39:	inc    dx
  42fb3b:	lds    ecx,FWORD PTR [esp+esi*2-0x2e51ffaa]
  42fb42:	mov    esi,0xbed1b368
  42fb47:	adc    eax,0x7ec1af5
  42fb4c:	pop    es
  42fb4d:	test   eax,0x4e32403
  42fb52:	add    bl,dh
  42fb54:	fimul  DWORD PTR [edi]
  42fb56:	sbb    DWORD PTR [eax],0x74e52b
  42fb5c:	sbb    DWORD PTR [esi+ebp*2+0x0],ebp
  42fb60:	xor    eax,0xb2dcff33
  42fb65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb66:	add    ebp,edi
  42fb68:	fiadd  DWORD PTR [ebx]
  42fb6a:	ins    BYTE PTR es:[edi],dx
  42fb6b:	xchg   esp,eax
  42fb6c:	inc    esp
  42fb6d:	and    esi,DWORD PTR [ebp+0x70]
  42fb70:	inc    esi
  42fb71:	xchg   esp,eax
  42fb72:	pop    ss
  42fb73:	add    BYTE PTR [eax],al
  42fb75:	add    BYTE PTR [edx+0x54c150ee],dl
  42fb7b:	nop
  42fb7c:	push   0xe906f204
  42fb81:	mov    dh,BYTE PTR [edx-0x7b13b806]
  42fb87:	(bad)  
  42fb88:	call   0xe84db015
  42fb8d:	add    esi,ebx
  42fb8f:	lea    ebp,[edx]
  42fb91:	sbb    al,0x65
  42fb93:	or     ch,cl
  42fb95:	int    0x75
  42fb97:	fimul  DWORD PTR [esp+ecx*1]
  42fb9a:	shl    BYTE PTR [ebx+0x54],0x20
  42fb9e:	jmp    0x42fc03
  42fba0:	cmp    al,0x20
  42fba2:	jmp    0x42fc07
  42fba4:	xor    al,0x20
  42fba6:	fstp   TBYTE PTR [ecx+esi*4+0x28fa2f0e]
  42fbad:	add    al,0x74
  42fbaf:	pop    edi
  42fbb0:	cmp    DWORD PTR [eax+ecx*4+0x62],ebp
  42fbb4:	cdq    
  42fbb5:	je     0x42fc2c
  42fbb7:	dec    edx
  42fbb8:	xor    esi,edx
  42fbba:	xchg   esi,eax
  42fbbb:	imul   eax
  42fbbd:	int    0x75
  42fbbf:	fcmovne st,st(4)
  42fbc1:	or     esp,DWORD PTR [eax]
  42fbc3:	(bad)  
  42fbc4:	hlt    
  42fbc5:	pop    ds
  42fbc6:	(bad)  [ecx-0x1]
  42fbc9:	cld    
  42fbca:	aam    0xfe
  42fbcc:	cli    
  42fbcd:	cmc    
  42fbce:	or     al,0xff
  42fbd0:	push   ecx
  42fbd1:	data16 cmc 
  42fbd3:	mov    ds:0x89f0a913,al
  42fbd8:	idiv   DWORD PTR [esi+0x8000000]
  42fbde:	(bad)  
  42fbdf:	cli    
  42fbe0:	dec    esi
  42fbe1:	pop    es
  42fbe2:	mov    edx,eax
  42fbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbe5:	sahf   
  42fbe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbe7:	psubsw mm5,QWORD PTR [ebp+0x6b9feb89]
  42fbee:	fild   DWORD PTR [edi]
  42fbf0:	xchg   esi,eax
  42fbf1:	out    0xda,eax
  42fbf3:	pop    ss
  42fbf4:	es push ebp
  42fbf6:	idiv   dl
  42fbf8:	xchg   esp,eax
  42fbf9:	add    BYTE PTR [esi+0x74],bl
  42fbfc:	in     eax,0x26
  42fbfe:	pop    ebp
  42fbff:	adc    al,0xe9
  42fc01:	std    
  42fc02:	(bad)  
  42fc03:	push   DWORD PTR [ecx-0x38]
  42fc06:	mov    ah,0xe7
  42fc08:	mov    bl,0xc7
  42fc0a:	pop    esp
  42fc0b:	cli    
  42fc0c:	(bad)  
  42fc0d:	idiv   DWORD PTR [ecx+ebx*2-0xa4d74]
  42fc14:	cmp    esp,DWORD PTR [ebp+ebp*2+0xa1a7251]
  42fc1b:	push   ebx
  42fc1c:	(bad)  
  42fc1d:	sbb    bh,dl
  42fc1f:	cli    
  42fc20:	push   esp
  42fc21:	jmp    0x42fc80
  42fc23:	je     0x42fbfe
  42fc25:	sbb    edx,0xfa80170b
  42fc2b:	inc    ebx
  42fc2c:	fdiv   QWORD PTR [eax]
  42fc2e:	bound  eax,QWORD PTR [ebp+0x1a69c8b1]
  42fc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc35:	pusha  
  42fc36:	pop    ebp
  42fc37:	xchg   BYTE PTR [esi-0x54a34040],ah
  42fc3d:	sti    
  42fc3e:	push   es
  42fc3f:	push   ebp
  42fc40:	bound  eax,QWORD PTR [eax]
  42fc42:	add    BYTE PTR [eax],al
  42fc44:	push   ebx
  42fc45:	loope  0x42fc32
  42fc47:	add    BYTE PTR [edx+0x7f8b4d3f],bh
  42fc4d:	add    eax,0x18ca4015
  42fc52:	out    dx,al
  42fc53:	push   0xf1d
  42fc58:	rcl    ah,0x50
  42fc5b:	inc    edi
  42fc5d:	pop    ebp
  42fc5e:	add    DWORD PTR fs:0x5a144c00,edi
  42fc65:	add    eax,0x8a2e4589
  42fc6a:	repnz add DWORD PTR [esi+0x28],eax
  42fc6e:	add    DWORD PTR [ebp-0x42],0x35
  42fc72:	pop    eax
  42fc73:	leave  
  42fc74:	sbb    BYTE PTR [edi],cl
  42fc76:	add    BYTE PTR [ebx+0x740ce98f],al
  42fc7c:	sti    
  42fc7d:	xchg   DWORD PTR [ebx-0x20],eax
  42fc80:	call   0xfa45:0x46f013d4
  42fc87:	mov    WORD PTR [edi+0x27ff4ae5],ss
  42fc8d:	xor    eax,0x434a400e
  42fc92:	call   DWORD PTR [ebp-0x7c]
  42fc95:	aas    
  42fc96:	mov    eax,DWORD PTR [ebp+0x3a]
  42fc99:	xor    eax,0xc597d7f5
  42fc9e:	jae    0x42fc77
  42fca0:	xor    DWORD PTR [edx+0xef674f5],ebx
  42fca6:	not    DWORD PTR ds:0x26000000
  42fcac:	sti    
  42fcad:	aas    
  42fcae:	add    BYTE PTR ds:0xca12a02e,bh
  42fcb4:	or     dh,bh
  42fcb6:	je     0x42fcae
  42fcb8:	push   cs
  42fcb9:	bound  eax,QWORD PTR [eax]
  42fcbb:	add    cl,BYTE PTR [ebx]
  42fcbd:	add    BYTE PTR [eax],dl
  42fcbf:	retf   0x13d5
  42fcc2:	in     al,dx
  42fcc3:	repz pop esi
  42fcc5:	mov    esi,0xf2ae77ff
  42fcca:	push   es
  42fccb:	and    ecx,DWORD PTR [ecx+0x2de1a017]
  42fcd1:	add    al,0xb0
  42fcd3:	repnz test BYTE PTR [esi+ebp*1],al
  42fcd7:	mov    bl,0xac
  42fcd9:	add    al,BYTE PTR [eax]
  42fcdb:	ds aad 0x5a
  42fcde:	jle    0x42fc6f
  42fce0:	pop    esi
  42fce1:	rcl    DWORD PTR [ecx+0x68],1
  42fce4:	add    ebx,esp
  42fce6:	rdpmc  
  42fce8:	outs   dx,BYTE PTR ds:[esi]
  42fce9:	xor    edi,edx
  42fceb:	and    bl,bl
  42fced:	(bad)  
  42fcee:	mul    DWORD PTR [ebx]
  42fcf0:	jge    0x42fcce
  42fcf2:	add    esp,DWORD PTR [eax]
  42fcf4:	jge    0x42fcc7
  42fcf6:	cli    
  42fcf7:	out    0x65,al
  42fcf9:	jbe    0x42fd57
  42fcfb:	fs jbe 0x42fd01
  42fcfe:	add    bl,dh
  42fd00:	in     eax,dx
  42fd01:	ins    DWORD PTR es:[edi],dx
  42fd02:	shr    DWORD PTR [esi+0x2e],1
  42fd05:	clc    
  42fd06:	dec    esi
  42fd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd08:	in     al,0x2f
  42fd0a:	je     0x42fcef
  42fd0c:	lods   eax,DWORD PTR ds:[esi]
  42fd0d:	dec    BYTE PTR [eax-0x62000000]
  42fd13:	push   ebp
  42fd14:	fadd   QWORD PTR [ebx]
  42fd16:	xor    al,0xe3
  42fd18:	cli    
  42fd19:	test   DWORD PTR gs:[ebx-0x17e4a7f8],0xf31cfaf8
  42fd24:	ret    0xc3ef
  42fd27:	jmp    0xfeda:0x1ca3f3c2
  42fd2e:	mov    eax,ds:0x86fad4fc
  42fd33:	jno    0x42fda4
  42fd35:	je     0x42fd32
  42fd37:	cwde   
  42fd38:	push   ebp
  42fd39:	test   BYTE PTR [ebx+0x5efafd1a],dh
  42fd3f:	pop    es
  42fd40:	popf   
  42fd41:	jno    0x42fd04
  42fd43:	sbb    DWORD PTR [ebx],0x74
  42fd46:	repz fcmovu st,st(5)
  42fd49:	jo     0x42fd82
  42fd4b:	pcmpgtd mm5,mm7
  42fd4e:	in     al,dx
  42fd4f:	jmp    0xc7a3:0xad544f6
  42fd56:	mov    ecx,0xa4f77205
  42fd5b:	pop    edi
  42fd5c:	xchg   ecx,eax
  42fd5d:	shr    DWORD PTR [esi-0x37],1
  42fd60:	popa   
  42fd61:	rol    BYTE PTR [ebp+0x4e],cl
  42fd64:	es cld 
  42fd66:	xchg   esp,eax
  42fd67:	mov    edx,0x92d0e063
  42fd6c:	addr16 pusha 
  42fd6e:	mov    ah,0x4
  42fd70:	jmp    0x91fc2978
  42fd75:	xor    al,0x0
  42fd77:	add    BYTE PTR [eax],al
  42fd79:	mov    bl,0x91
  42fd7b:	arpl   WORD PTR [eax-0x2cd6a091],bp
  42fd81:	mov    ah,0xb6
  42fd83:	mov    fs,WORD PTR [edi]
  42fd85:	ret    
  42fd86:	adc    al,0x3e
  42fd88:	jno    0x42fd89
  42fd8a:	mov    dh,0xf5
  42fd8c:	ret    
  42fd8d:	dec    esp
  42fd8e:	mov    ch,BYTE PTR [eax]
  42fd90:	not    ebp
  42fd92:	mov    edi,DWORD PTR [ebx-0x17391231]
  42fd98:	jle    0x42fe09
  42fd9a:	stos   BYTE PTR es:[edi],al
  42fd9b:	repz jo 0x42fdc7
  42fd9e:	mov    dh,0xe9
  42fda0:	pop    ecx
  42fda1:	ins    DWORD PTR es:[edi],dx
  42fda2:	and    ecx,ebx
  42fda4:	adc    dh,BYTE PTR [ebx+0x6628ce06]
  42fdaa:	mov    DWORD PTR [esi+ebp*2+0x71385f09],ecx
  42fdb1:	(bad)  
  42fdb3:	aad    0xc3
  42fdb5:	cld    
  42fdb6:	xchg   ecx,eax
  42fdb7:	arpl   WORD PTR [edi-0x4a00a109],sp
  42fdbd:	shl    BYTE PTR [ecx+0x14],0x59
  42fdc1:	inc    esi
  42fdc3:	jmp    FWORD PTR [ebx+0x30]
  42fdc6:	fidivr DWORD PTR [ecx]
  42fdc8:	ins    BYTE PTR es:[edi],dx
  42fdc9:	ins    DWORD PTR es:[edi],dx
  42fdca:	stos   BYTE PTR es:[edi],al
  42fdcb:	cld    
  42fdcc:	xchg   esi,eax
  42fdcd:	inc    ebx
  42fdce:	into   
  42fdcf:	cli    
  42fdd0:	mov    bh,0xa6
  42fdd2:	jmp    0x648c:0xce932c8c
  42fdd9:	mov    WORD PTR [ebx-0x6],ds
  42fddc:	jbe    0x42fdde
  42fdde:	add    BYTE PTR [eax],al
  42fde0:	shl    BYTE PTR [ecx-0x2e],0x64
  42fde4:	xor    dl,bl
  42fde6:	ror    edi,0x77
  42fde9:	fstp   TBYTE PTR [edi-0x50a621e]
  42fdef:	fcomp  QWORD PTR [ebp+ebp*1-0x3cf63840]
  42fdf6:	or     esi,DWORD PTR [ebp+esi*4-0x62]
  42fdfa:	dec    edi
  42fdfb:	ds fstp st(6)
  42fdfe:	adc    DWORD PTR [ecx-0x4b407c10],ebp
  42fe04:	in     al,dx
  42fe05:	lods   eax,DWORD PTR ds:[esi]
  42fe06:	add    BYTE PTR [edx],dl
  42fe08:	pop    esi
  42fe09:	in     al,0xf
  42fe0b:	push   ds
  42fe0c:	pop    ebp
  42fe0d:	loop   0x42fdf6
  42fe0f:	mov    dl,0xb2
  42fe11:	pop    edx
  42fe12:	cli    
  42fe13:	scas   al,BYTE PTR es:[edi]
  42fe14:	and    al,BYTE PTR [esi+edi*4+0x734377a2]
  42fe1b:	xor    BYTE PTR [esi-0x5063fff7],ch
  42fe21:	jno    0x42fda3
  42fe23:	std    
  42fe24:	cmc    
  42fe25:	pop    es
  42fe26:	add    cl,ch
  42fe28:	inc    ecx
  42fe29:	mov    eax,0x61ff5352
  42fe2e:	je     0x42fe11
  42fe30:	mov    DWORD PTR [esi],edi
  42fe32:	mov    WORD PTR [edi+edi*2],ds
  42fe35:	mov    dh,0xe7
  42fe37:	add    BYTE PTR [eax-0x4000439],dh
  42fe3d:	dec    esi
  42fe3e:	jmp    0xc1:0xee4eeb66
  42fe45:	add    BYTE PTR [eax],al
  42fe47:	mov    dl,0xf2
  42fe49:	pop    ebp
  42fe4a:	xor    DWORD PTR [edi],ecx
  42fe4c:	aad    0x29
  42fe4e:	(bad)  
  42fe4f:	mov    ecx,0x50c02a1a
  42fe54:	aas    
  42fe55:	add    ecx,DWORD PTR [edx+ebp*4]
  42fe58:	xor    eax,0x8a0af80b
  42fe5d:	repnz add al,0xc5
  42fe60:	inc    ebp
  42fe61:	mov    ebp,0x2ec1941
  42fe66:	jb     0x42fed9
  42fe68:	sub    edi,DWORD PTR [ebp+0x10]
  42fe6b:	mov    esi,0x9a75f72e
  42fe70:	xchg   BYTE PTR [ebx-0xa11db18],al
  42fe76:	mov    DWORD PTR [edi-0x46],esi
  42fe79:	clc    
  42fe7a:	push   DWORD PTR ds:0xb53426bb
  42fe80:	in     eax,dx
  42fe81:	adc    BYTE PTR fs:[eax-0x380f8c7a],al
  42fe88:	(bad)  
  42fe89:	loop   0x42fe89
  42fe8b:	adc    eax,0x3e69e2ee
  42fe90:	in     al,dx
  42fe91:	cmc    
  42fe92:	shrd   DWORD PTR [edi+0xe],ecx,0x2b
  42fe97:	or     eax,0xbe481e5f
  42fe9c:	pop    ebp
  42fe9d:	inc    edx
  42fe9e:	jne    0x42feb4
  42fea0:	mov    cl,0x8e
  42fea2:	xchg   esp,eax
  42fea3:	pop    edx
  42fea4:	or     DWORD PTR [edx+0x7],esp
  42fea7:	icebp  
  42fea8:	add    eax,0xa4b8
  42fead:	add    BYTE PTR [esi+0xc69fa49],bl
  42feb3:	dec    esp
  42feb4:	dec    edx
  42feb5:	mov    esi,ebx
  42feb7:	lods   al,BYTE PTR ds:[esi]
  42feb8:	jne    0x42fea8
  42feba:	sbb    eax,DWORD PTR [esi+esi*8+0xad1fcf9]
  42fec1:	ja     0x42fe4c
  42fec3:	test   esi,0xce9e368c
  42fec9:	cli    
  42feca:	(bad)  
  42fecb:	sub    DWORD PTR [edx],edx
  42fecd:	inc    eax
  42fece:	repz (bad) 
  42fed0:	leave  
  42fed1:	push   esi
  42fed2:	stos   BYTE PTR es:[edi],al
  42fed3:	mov    al,0xe
  42fed5:	add    BYTE PTR [ecx+0x62],bl
  42fed8:	(bad)  
  42fed9:	daa    
  42feda:	and    esi,DWORD PTR [ecx]
  42fedc:	add    al,0xe8
  42fede:	and    al,BYTE PTR [edx]
  42fee0:	add    al,0x0
  42fee2:	add    ah,dl
  42fee4:	and    esi,DWORD PTR [ebp-0x51]
  42fee7:	jmp    0xb0333aac
  42feec:	stc    
  42feed:	mov    dl,0x2b
  42feef:	pop    edx
  42fef0:	jg     0x42ff3d
  42fef2:	repnz add eax,0x6c33b2fb
  42fef8:	in     al,0x84
  42fefa:	mov    bl,0x32
  42fefc:	sbb    eax,0xe4a4f166
  42ff01:	ss jnp 0x42fea5
  42ff04:	add    eax,0xfd71e287
  42ff09:	in     eax,dx
  42ff0a:	jp     0x42fe9f
  42ff0c:	(bad)  
  42ff0d:	cli    
  42ff0e:	loop   0x42ff55
  42ff10:	aam    0xfa
  42ff12:	add    BYTE PTR [eax],al
  42ff14:	add    dh,bh
  42ff16:	icebp  
  42ff17:	adc    eax,DWORD PTR [eax-0xd]
  42ff1a:	jmp    0x8874:0x40ee733e
  42ff21:	(bad)  
  42ff22:	or     DWORD PTR [esi+0x4c],edi
  42ff25:	aaa    
  42ff26:	pop    ebp
  42ff27:	js     0x42feea
  42ff29:	sbb    BYTE PTR [ebx+0x2d],ah
  42ff2c:	shl    BYTE PTR [ebx+0xb647630],0x7
  42ff33:	mov    di,0x5c18
  42ff37:	adc    eax,0x55131444
  42ff3c:	add    al,0xf3
  42ff3e:	inc    edi
  42ff3f:	ds adc al,0x8b
  42ff42:	(bad)  
  42ff43:	sbb    cl,al
  42ff45:	hlt    
  42ff46:	arpl   sp,cx
  42ff48:	jmp    0xc7a05b39
  42ff4d:	hlt    
  42ff4e:	(bad)  
  42ff4f:	mov    dh,0x79
  42ff51:	pop    edi
  42ff52:	pcmpgtd mm4,mm7
  42ff55:	fadd   DWORD PTR [esi]
  42ff57:	outs   dx,BYTE PTR ds:[esi]
  42ff58:	ror    DWORD PTR [eax],cl
  42ff5a:	mov    BYTE PTR [edx+edi*8-0x70],dl
  42ff5e:	push   es
  42ff5f:	jmp    0x6d4ef267
  42ff64:	mov    ?,WORD PTR [ebx+ebx*2+0x108878e8]
  42ff6b:	dec    ecx
  42ff6c:	add    al,0xf3
  42ff6e:	push   es
  42ff6f:	pusha  
  42ff70:	iret   
  42ff71:	in     al,dx
  42ff72:	cmp    DWORD PTR ds:0xe88a70fd,0x3
  42ff7c:	repz (bad) 
  42ff7e:	mov    bl,0xff
  42ff80:	test   DWORD PTR [esi],edi
  42ff82:	pop    edi
  42ff83:	iret   
  42ff84:	hlt    
  42ff85:	mov    esp,esp
  42ff87:	add    al,BYTE PTR [eax+0xd43dd3e]
  42ff8d:	dec    eax
  42ff8e:	pop    ebp
  42ff8f:	fsubr  st,st(6)
  42ff91:	adc    bh,dh
  42ff93:	jno    0x42ffaa
  42ff95:	popa   
  42ff96:	outs   dx,DWORD PTR ds:[esi]
  42ff97:	out    dx,eax
  42ff98:	call   0x4c56bb2c
  42ff9d:	ds pop edi
  42ff9f:	iret   
  42ffa0:	and    al,0x87
  42ffa2:	int    0x3
  42ffa4:	(bad)  
  42ffa5:	mov    dl,0x6d
  42ffa7:	shl    eax,1
  42ffa9:	xchg   esi,edi
  42ffab:	sti    
  42ffac:	sahf   
  42ffad:	ret    
  42ffae:	jmp    DWORD PTR [ebx+0x19]
  42ffb1:	push   ebx
  42ffb2:	sar    dh,1
  42ffb4:	cdq    
  42ffb5:	fimul  DWORD PTR [edi]
  42ffb7:	push   0xd
  42ffb9:	push   DWORD PTR [bx+di+0x25]
  42ffbd:	addr16 ss mov esi,0x960b1703
  42ffc4:	and    al,0xcc
  42ffc6:	pop    es
  42ffc7:	dec    edi
  42ffc8:	ins    BYTE PTR es:[edi],dx
  42ffc9:	dec    ecx
  42ffca:	jae    0x42ffd0
  42ffcc:	jo     0x43000a
  42ffce:	cli    
  42ffcf:	out    0xf0,al
  42ffd1:	push   es
  42ffd2:	(bad)  
  42ffd3:	fpatan 
  42ffd5:	aaa    
  42ffd6:	ss cmp al,0xd7
  42ffd9:	in     al,dx
  42ffda:	adc    DWORD PTR [eax+esi*1-0x2a],esp
  42ffde:	add    edx,edx
  42ffe0:	add    BYTE PTR [eax],al
  42ffe2:	add    BYTE PTR [eax],ah
  42ffe4:	aad    0x9
  42ffe6:	(bad)  
  42ffe7:	int    0xe
  42ffe9:	sub    ebx,eax
  42ffeb:	cmp    edx,DWORD PTR [edi+edi*8]
  42ffee:	jle    0x430019
  42fff0:	adc    al,0x87
  42fff2:	hlt    
  42fff3:	add    BYTE PTR [esi+0x44],bl
  42fff6:	test   DWORD PTR [ebx],edi
  42fff8:	inc    ebx
  42fff9:	inc    cl
  42fffb:	in     al,dx
  42fffc:	popa   
  42fffd:	mov    ds:0xfa5e4d6a,eax
  430002:	cdq    
  430003:	icebp  
  430004:	popa   
  430005:	or     al,0x1a
  430007:	aaa    
  430008:	sbb    bh,BYTE PTR [edi+0x7e628d72]
  43000e:	lods   al,BYTE PTR ds:[esi]
  43000f:	fcomp  QWORD PTR [ebp+ebp*1+0x29]
  430013:	enter  0x76e6,0xe9
  430017:	lock cwde 
  430019:	or     ebp,ecx
  43001b:	cmp    dh,dh
  43001d:	addr16 mov eax,ds:0x1920
  430021:	add    BYTE PTR [ecx],al
  430023:	(bad)  
  430025:	(bad)  
  430026:	call   0x7156e6
  43002b:	adc    ebp,ebx
  43002d:	pop    ebx
  43002e:	cld    
  43002f:	mov    eax,ds:0x9e8b3643
  430034:	adc    eax,0xe36f8850
  430039:	fs inc eax
  43003b:	ret    0x3002
  43003e:	add    BYTE PTR [edx],bl
  430040:	xor    eax,0x5aa7ff49
  430045:	cmc    
  430046:	adc    eax,0xaa000000
  43004b:	lock aas 
  43004d:	add    BYTE PTR [ebx-0x66c425b9],al
  430053:	push   esi
  430054:	push   ecx
  430055:	push   edi
  430056:	add    al,0xbb
  430058:	pushf  
  430059:	retf   
  43005a:	(bad)  
  43005b:	in     eax,dx
  43005c:	or     eax,0x3bd6a063
  430062:	adc    DWORD PTR [esi+0x2f],0x81350953
  430069:	push   ebp
  43006a:	push   0xffffffba
  43006c:	aam    0xfe
  43006e:	ins    DWORD PTR es:[edi],dx
  43006f:	in     eax,dx
  430070:	jle    0x430032
  430072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430073:	or     ecx,DWORD PTR [ebx+0x57]
  430076:	sbb    eax,0xa7ffd658
  43007b:	in     eax,0xf5
  43007d:	jne    0x430021
  43007f:	in     al,dx
  430080:	adc    edx,DWORD PTR [eax+ecx*4-0x3d0905bb]
  430087:	or     eax,eax
  430089:	test   edx,0x2de743da
  43008f:	pop    eax
  430090:	(bad)  
  430091:	call   0x3f1946
  430096:	bound  ecx,QWORD PTR [esi-0x23]
  430099:	jne    0x4300e2
  43009b:	cmp    eax,0x54a7ffa
  4300a0:	dec    ebx
  4300a1:	jmp    DWORD PTR [edi-0x1b]
  4300a4:	cmc    
  4300a5:	jne    0x43009a
  4300a7:	addr16 gs adc al,0x2f
  4300ab:	pop    ebp
  4300ac:	mov    esi,0xff
  4300b1:	imul   esp,DWORD PTR [edx+0x5bbe7e5e],0x65
  4300b8:	xchg   BYTE PTR [esi-0x1ff3a4f1],ch
  4300be:	das    
  4300bf:	les    edi,FWORD PTR [esi+0x7e5bca68]
  4300c5:	mov    esi,0x332e653b
  4300ca:	inc    edi
  4300cb:	mov    ah,0x75
  4300cd:	rep outs dx,DWORD PTR ds:[esi]
  4300cf:	inc    esp
  4300d0:	add    esi,ebx
  4300d2:	mov    ch,0xb
  4300d4:	push   0xffc2fdfb
  4300d9:	int3   
  4300da:	(bad)  
  4300db:	jmp    0x6c28dddf
  4300e0:	jle    0x430130
  4300e2:	mov    ds:0x3a3486fe,al
  4300e7:	add    ebx,eax
  4300e9:	jo     0x430071
  4300eb:	jle    0x430073
  4300ed:	add    esp,ebx
  4300ef:	jo     0x430164
  4300f1:	push   edx
  4300f2:	in     eax,dx
  4300f3:	out    0x3,al
  4300f5:	pop    es
  4300f6:	push   eax
  4300f7:	leave  
  4300f8:	(bad)  
  4300f9:	popf   
  4300fa:	out    0xef,eax
  4300fc:	xlat   BYTE PTR ds:[ebx]
  4300fd:	jo     0x4300a7
  4300ff:	(bad)  
  430100:	jae    0x430144
  430102:	aad    0xc0
  430104:	or     esi,eax
  430106:	and    bh,cl
  430108:	cli    
  430109:	push   ds
  43010a:	data16 jnp 0x430151
  43010d:	xchg   ebx,eax
  43010e:	jecxz  0x43014e
  430110:	jae    0x430135
  430112:	aad    0x8
  430114:	inc    DWORD PTR [eax]
  430116:	add    BYTE PTR [eax],al
  430118:	dec    ebp
  430119:	aad    0xc0
  43011b:	(bad)  
  43011d:	sub    BYTE PTR [esp+eax*2+0x57],bh
  430121:	out    0xc7,eax
  430123:	fld    TBYTE PTR [eax+0x7]
  430126:	out    0x80,al
  430128:	mov    ebx,ss
  43012a:	shr    esp,0xf1
  43012d:	and    DWORD PTR [edx],edx
  43012f:	push   0x3c
  430131:	pop    eax
  430132:	std    
  430133:	push   DWORD PTR [ecx+eax*2]
  430136:	gs inc ebx
  430138:	cs enter 0xeff9,0x44
  43013d:	pop    eax
  43013e:	fwait
  43013f:	div    DWORD PTR [edi+0x47]
  430142:	je     0x430169
  430144:	ins    BYTE PTR es:[edi],dx
  430145:	retf   0x7bcc
  430148:	repz and DWORD PTR [ebp-0x333e7c00],0x0
  430150:	adc    al,0x37
  430152:	gs inc edx
  430154:	loopne 0x4301c1
  430156:	mov    DWORD PTR [ebp-0x4b46a4c1],eax
  43015c:	repz imul esp,ebx,0x34
  430160:	mov    bl,0xc6
  430162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430163:	jge    0x4301b4
  430165:	outs   dx,DWORD PTR ds:[esi]
  430166:	gs mov bh,0xc8
  430169:	push   edi
  43016a:	(bad)  
  43016b:	inc    ebx
  43016c:	int3   
  43016d:	repnz push cs
  43016f:	add    al,0xf3
  430171:	inc    esp
  430172:	loopne 0x430177
  430174:	dec    ebp
  430175:	call   DWORD PTR [eax]
  430177:	ins    BYTE PTR es:[edi],dx
  430178:	cmp    esp,eax
  43017a:	call   0x4301da
  43017f:	scas   al,BYTE PTR es:[edi]
  430180:	fucomp st(0)
  430182:	add    ecx,esp
  430184:	cmp    esp,DWORD PTR [eax-0x39]
  430187:	xchg   ecx,eax
  430188:	(bad)  
  430189:	ret    
  43018a:	addr16 jne 0x430152
  43018d:	sbb    al,0x7d
  43018f:	pusha  
  430190:	push   cs
  430191:	imul   eax,DWORD PTR [ebx+esi*8],0x2550e06
  430198:	mov    bh,0x65
  43019a:	test   al,0xf4
  43019c:	sub    al,0x3
  43019f:	repz repnz (bad) 
  4301a2:	mov    esi,0xe3338a32
  4301a7:	(bad)  
  4301a9:	xlat   BYTE PTR ds:[ebx]
  4301aa:	jb     0x43019d
  4301ac:	movsx  edx,WORD PTR [ebp-0x1ec475ea]
  4301b3:	mov    edi,0xb1ea0fc5
  4301b8:	mov    es,WORD PTR [ebp+eiz*1-0x58]
  4301bc:	fcmovu st,st(7)
  4301be:	sar    bl,0xd2
  4301c1:	pop    ss
  4301c2:	bound  ebp,QWORD PTR [edi+edi*8]
  4301c5:	fld    DWORD PTR ss:0xb3c870e
  4301cc:	mov    cs,WORD PTR [edi]
  4301ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301cf:	inc    ebp
  4301d0:	add    BYTE PTR fs:[edx-0x4d],ch
  4301d4:	add    edi,DWORD PTR [edi-0x57]
  4301d7:	hlt    
  4301d8:	pop    edi
  4301d9:	fldcw  WORD PTR [edx+0x32]
  4301dc:	cli    
  4301dd:	out    0xb1,al
  4301df:	pop    ds
  4301e0:	inc    edi
  4301e1:	aas    
  4301e2:	stos   BYTE PTR es:[edi],al
  4301e3:	add    BYTE PTR [eax],al
  4301e5:	add    BYTE PTR [edi-0x15],bl
  4301e8:	out    0xa7,eax
  4301ea:	xchg   ebp,eax
  4301eb:	imul   edi,edi,0xfa528569
  4301f1:	jae    0x430178
  4301f3:	imul   esp,edi,0xfa56c97a
  4301f9:	stos   DWORD PTR es:[edi],eax
  4301fa:	mov    eax,0x44725356
  4301ff:	aad    0xeb
  430201:	mov    ecx,0xa8800e26
  430206:	loopne 0x430286
  430208:	dec    esp
  430209:	jns    0x430221
  43020b:	into   
  43020c:	std    
  43020d:	cmc    
  43020e:	inc    ebx
  43020f:	push   ss
  430210:	add    dh,BYTE PTR [esi+0x6102ec79]
  430216:	inc    ebp
  430217:	push   edi
  430218:	pop    eax
  430219:	push   esi
  43021a:	or     DWORD PTR [eax+ecx*8-0x72f8c000],ecx
  430221:	jge    0x43022d
  430223:	fsub   st,st(7)
  430225:	mov    BYTE PTR [edi+0x524581dc],cl
  43022b:	rol    DWORD PTR [ebx-0xd],1
  43022e:	(bad)  
  43022f:	xchg   esp,eax
  430230:	jmp    0xedab:0xe2ca2950
  430237:	in     al,dx
  430238:	cmc    
  430239:	test   BYTE PTR [edx],cl
  43023b:	dec    edi
  43023c:	jle    0x430225
  43023e:	sbb    cl,BYTE PTR [edx]
  430240:	add    BYTE PTR [ebp+0x3249ba4f],cl
  430246:	add    ecx,edx
  430248:	inc    ebx
  430249:	clc    
  43024a:	add    BYTE PTR [eax],al
  43024c:	add    ch,cl
  43024e:	xchg   esp,eax
  43024f:	jmp    0xcf8b:0xa1a10
  430256:	loop   0x4301dc
  430258:	add    BYTE PTR [eax+0xee8bb12],dl
  43025e:	push   esi
  43025f:	outs   dx,DWORD PTR ds:[esi]
  430260:	cmp    BYTE PTR [ebx-0x5aba7da3],0x8a
  430267:	mov    edi,0x7ac9d861
  43026c:	jge    0x4301f3
  43026e:	pusha  
  43026f:	jo     0x430281
  430271:	pop    edx
  430272:	dec    eax
  430273:	cmc    
  430274:	mov    dh,0xd5
  430276:	mov    ds:0x50f099bf,eax
  43027b:	push   ebp
  43027c:	mul    DWORD PTR [ebp-0x31]
  43027f:	cmp    al,0x30
  430281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430282:	mov    ds:0xd259fec9,eax
  430287:	push   es
  430288:	xor    dl,BYTE PTR [eax]
  43028a:	cmp    ch,dh
  43028c:	paddusb mm2,QWORD PTR [ecx]
  43028f:	stc    
  430290:	ret    
  430291:	add    dh,bh
  430293:	xor    BYTE PTR [edx+ebx*8-0xcf0fdaa],al
  43029a:	jne    0x4302d2
  43029c:	xchg   edi,ebp
  43029e:	out    dx,al
  43029f:	popa   
  4302a0:	mov    esi,0xfa66a26c
  4302a5:	mov    dh,0xf
  4302a7:	icebp  
  4302a8:	stos   DWORD PTR es:[edi],eax
  4302a9:	in     al,dx
  4302aa:	aad    0x3e
  4302ac:	shr    edi,0x4f
  4302af:	adc    al,0x87
  4302b1:	add    BYTE PTR [eax],al
  4302b3:	add    BYTE PTR [esi+0x1d857],dh
  4302b9:	adc    al,bl
  4302bb:	repnz inc esp
  4302bd:	std    
  4302be:	or     bh,BYTE PTR ds:[ebp+0x28]
  4302c2:	dec    ecx
  4302c4:	jbe    0x4302b7
  4302c6:	lock push es
  4302c8:	sub    al,0x5e
  4302ca:	lock je 0x4302c0
  4302cd:	pop    edi
  4302ce:	jle    0x43028e
  4302d0:	icebp  
  4302d1:	or     dh,cl
  4302d3:	xchg   BYTE PTR [esi-0x3ffb27a9],dh
  4302d9:	xchg   ecx,eax
  4302da:	shl    edx,0x4
  4302dd:	loop   0x43032f
  4302df:	je     0x4302cc
  4302e1:	lods   al,BYTE PTR ds:[esi]
  4302e2:	add    ebx,DWORD PTR [esi+0x5a]
  4302e5:	enter  0xe703,0x2a
  4302e9:	fnstcw WORD PTR [edi-0x109e74f9]
  4302ef:	push   es
  4302f0:	lods   al,BYTE PTR ds:[esi]
  4302f1:	pop    edi
  4302f2:	fld    TBYTE PTR [ecx+0x55]
  4302f5:	std    
  4302f6:	cmp    DWORD PTR [esi+0x661878ef],0xfffffff0
  4302fd:	xor    BYTE PTR [eax+0x5a],dl
  430300:	mov    esp,0x26cd7f7d
  430305:	push   esi
  430306:	cmp    DWORD PTR [eax],eax
  430308:	adc    al,0x50
  43030a:	fcos   
  43030c:	mov    DWORD PTR [edx],esi
  43030e:	ins    BYTE PTR es:[edi],dx
  43030f:	inc    esp
  430310:	jmp    0x430370
  430312:	out    dx,eax
  430313:	pop    es
  430314:	mov    ah,0x7
  430316:	call   0x4303f0
  43031b:	pand   mm5,mm0
  43031e:	pop    edx
  43031f:	repnz dec ebx
  430321:	out    0xe2,eax
  430323:	or     edx,esp
  430325:	call   0xf24bb0ad
  43032a:	lods   eax,DWORD PTR ds:[esi]
  43032b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43032c:	dec    ebp
  43032d:	in     al,0x33
  43032f:	repz and BYTE PTR ds:0x263db9ca,0xff
  430337:	dec    esp
  430338:	mov    ebx,0x62c5576d
  43033d:	mov    eax,0xab81a1cd
  430342:	pop    ebx
  430343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430344:	pop    esi
  430345:	ins    BYTE PTR es:[edi],dx
  430346:	(bad)  
  430347:	sub    al,0x54
  430349:	ins    BYTE PTR es:[edi],dx
  43034a:	inc    ebx
  43034b:	mov    al,ds:0xf14a40ff
  430350:	push   es
  430351:	jmp    0x10cdf33
  430356:	repnz test BYTE PTR [ecx+0x53b45c2b],0xf3
  43035e:	jg     0x43034e
  430360:	(bad)  
  430361:	call   0xca1a39c1
  430366:	gs ins DWORD PTR es:[edi],dx
  430368:	jmp    0xa5bc:0xc97a04c0
  43036f:	mov    eax,0x5403e909
  430374:	shl    al,cl
  430376:	add    esp,DWORD PTR [eax]
  430378:	(bad)  
  43037a:	fistp  QWORD PTR fs:[esi]
  43037d:	test   bl,0x0
  430380:	add    BYTE PTR [eax],al
  430382:	mov    esp,0x3f64f860
  430387:	dec    DWORD PTR [ecx+0x28f8030f]
  43038d:	add    al,0xe6
  43038f:	or     al,ch
  430391:	add    esi,ebx
  430393:	fcos   
  430395:	mov    dh,0x1b
  430397:	retf   
  430398:	sti    
  430399:	mov    edx,0xeae78f22
  43039e:	lock push es
  4303a0:	repz pop eax
  4303a2:	add    al,0xcb
  4303a4:	out    0x64,eax
  4303a6:	test   BYTE PTR [ebx+0x4d35414d],ah
  4303ac:	cli    
  4303ad:	inc    esi
  4303ae:	into   
  4303af:	retf   0x65fb
  4303b2:	mov    bh,0xd7
  4303b4:	sbb    ah,BYTE PTR [edx+0x24]
  4303b7:	inc    DWORD PTR [esi-0x45aa50e1]
  4303bd:	and    al,0xce
  4303bf:	aam    0xe7
  4303c1:	jmp    0xa18aff12
  4303c6:	inc    esp
  4303c7:	(bad)  
  4303c8:	cli    
  4303c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303ca:	cwde   
  4303cb:	xchg   BYTE PTR [ecx+eax*1-0x39],bh
  4303cf:	push   esp
  4303d0:	cli    
  4303d1:	jmp    0x297077f8
  4303d6:	lods   eax,DWORD PTR cs:[esi]
  4303d8:	enter  0xf2b,0x53
  4303dc:	stos   BYTE PTR es:[edi],al
  4303dd:	call   0x7297598d
  4303e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303e3:	mov    dh,0x4e
  4303e5:	aas    
  4303e6:	add    BYTE PTR [eax],al
  4303e8:	add    BYTE PTR [esi],ah
  4303ea:	jmp    0x430417
  4303ec:	in     eax,0xf0
  4303ee:	push   es
  4303ef:	data16 icebp 
  4303f1:	dec    edi
  4303f2:	sbb    esp,eax
  4303f4:	xchg   edx,eax
  4303f5:	mov    bl,0x52
  4303f7:	sub    eax,0xfbb35992
  4303fc:	scas   al,BYTE PTR es:[edi]
  4303fd:	std    
  4303fe:	or     cl,BYTE PTR [edi]
  430400:	sub    edi,ebp
  430402:	mov    edi,ebp
  430404:	loop   0x430449
  430406:	std    
  430407:	sub    DWORD PTR [eax+esi*8-0x2a9dfffa],0xffffffa2
  43040f:	ltr    dx
  430412:	or     cl,BYTE PTR [ebx+0x56]
  430415:	stc    
  430416:	sub    al,0xff
  430418:	push   edx
  430419:	sbb    eax,0x94c71661
  43041e:	out    dx,al
  43041f:	(bad)  
  430420:	call   FWORD PTR [edx+0x1d0873eb]
  430426:	ret    
  430427:	add    eax,0xffffff8d
  43042a:	rcr    BYTE PTR [ebx+0x4b065a00],cl
  430430:	push   esi
  430431:	mov    DWORD PTR [eax],esi
  430433:	call   DWORD PTR [edx+0x1d]
  430436:	popa   
  430437:	push   ss
  430438:	call   DWORD PTR [edi-0x28280ab2]
  43043e:	lds    eax,FWORD PTR ds:0x5d584
  430444:	add    ch,bl
  430446:	pusha  
  430447:	push   ss
  430448:	push   DWORD PTR [edi]
  43044a:	mov    dl,0xa
  43044c:	inc    eax
  43044d:	add    BYTE PTR [eax],al
  43044f:	add    BYTE PTR [edx],bl
  430451:	jmp    0x4304c3
  430453:	or     BYTE PTR [ecx+0x4a166028],ah
  430459:	push   es
  43045a:	mov    DWORD PTR [ebp+0x3e],ebx
  43045d:	jmp    0x43042c
  43045f:	pop    ecx
  430460:	xchg   ecx,eax
  430461:	or     eax,0xf4d4b706
  430466:	out    dx,al
  430467:	fld    st(2)
  430469:	or     DWORD PTR [eax+0x8],0xffffff96
  43046d:	hlt    
  43046e:	jp     0x430458
  430470:	fnstcw WORD PTR [ecx]
  430472:	pop    es
  430473:	add    edx,0x4e
  430476:	jae    0x430489
  430478:	inc    eax
  430479:	sub    esp,ebx
  43047b:	or     BYTE PTR [ebx+0x45],dl
  43047e:	sbb    ch,BYTE PTR [edx-0x2e]
  430481:	sbb    BYTE PTR [eax+0x24],0x32
  430485:	pop    ebp
  430486:	xchg   DWORD PTR [esi-0x34],eax
  430489:	hlt    
  43048a:	scas   al,BYTE PTR es:[edi]
  43048b:	inc    esi
  43048c:	repz imul ecx,DWORD PTR ds:0xd6c35ab,0x82e6b2ab
  430497:	(bad)  
  430499:	pop    esp
  43049a:	inc    esp
  43049b:	rcr    BYTE PTR [ebx-0x5b0551a4],0xe4
  4304a2:	loopne 0x4304af
  4304a4:	sub    dl,bh
  4304a6:	lds    edx,FWORD PTR [ebx]
  4304a8:	push   0xffffff91
  4304aa:	out    dx,al
  4304ab:	ss js  0x4304e1
  4304ae:	add    al,0x89
  4304b0:	and    al,0xc1
  4304b2:	fcom   DWORD PTR [edi]
  4304b4:	add    BYTE PTR [eax],al
  4304b6:	add    BYTE PTR [edx+edx*4-0xe],ah
  4304ba:	cli    
  4304bb:	out    0x2f,al
  4304bd:	mov    cl,0x51
  4304bf:	push   esp
  4304c0:	xchg   edx,eax
  4304c1:	push   es
  4304c2:	sti    
  4304c3:	out    0x3,al
  4304c5:	hlt    
  4304c6:	aas    
  4304c7:	repz (bad) 
  4304c9:	enter  0xf8fb,0x1c
  4304cd:	fadd   DWORD PTR [ebx]
  4304cf:	clc    
  4304d0:	hlt    
  4304d1:	fcom   DWORD PTR [ebx]
  4304d3:	lds    eax,FWORD PTR [edi]
  4304d5:	shl    DWORD PTR gs:[esi],0x8
  4304d9:	sbb    eax,0xbdbff5d
  4304de:	sti    
  4304df:	sahf   
  4304e0:	cmp    ebx,DWORD PTR [ebp+0x14]
  4304e3:	pop    ss
  4304e4:	das    
  4304e5:	mov    esi,0x602279ff
  4304ea:	pop    edx
  4304eb:	popf   
  4304ec:	les    ecx,FWORD PTR [ebp+edi*4-0x25]
  4304f0:	pop    edi
  4304f1:	mov    bh,0x86
  4304f3:	(bad)  
  4304f5:	push   0xb
  4304f7:	repnz pop ebp
  4304f9:	(bad)  
  4304fa:	push   ecx
  4304fb:	push   0x2eb30d8e
  430500:	push   0xffffff89
  430502:	leave  
  430503:	mov    dl,0x3f
  430505:	out    dx,al
  430506:	push   es
  430507:	mov    dl,0x7
  430509:	outs   dx,BYTE PTR ds:[esi]
  43050a:	shl    ah,1
  43050c:	jnp    0x4304fd
  43050e:	mov    WORD PTR [edi],gs
  430510:	add    ebx,DWORD PTR [esi-0x34]
  430513:	or     BYTE PTR [esi-0x79],al
  430516:	or     ebp,esp
  430518:	inc    ebp
  430519:	outs   dx,DWORD PTR ds:[esi]
  43051a:	enter  0x0,0x0
  43051e:	call   0x6a5328a4
  430523:	mov    dh,BYTE PTR [ecx+eiz*2-0x77]
  430527:	push   eax
  430528:	pop    ebx
  430529:	mov    BYTE PTR [ecx+edx*2+0x61],bh
  43052d:	bound  esi,QWORD PTR [ecx+0x7961608a]
  430533:	push   eax
  430534:	out    0x3,eax
  430536:	repz push es
  430538:	and    cl,BYTE PTR [eax+0x62415164]
  43053e:	lock push es
  430540:	jmp    0x3575048
  430545:	arpl   WORD PTR [ecx-0x4f],cx
  430548:	pop    ds
  430549:	inc    ebp
  43054a:	in     al,dx
  43054b:	push   es
  43054c:	mov    esp,0x484488e
  430551:	pop    ebx
  430552:	mov    ds:0xf30f9383,eax
  430557:	mov    bl,0xb2
  430559:	mov    edx,0xc06de9a0
  43055e:	add    BYTE PTR [esi+0x701942fd],al
  430564:	call   0x6bbeac43
  430569:	or     ebp,DWORD PTR [eax+ecx*1+0x6e]
  43056d:	(bad)  
  43056e:	loopne 0x4304f1
  430570:	sub    al,0xfc
  430572:	in     al,0x7b
  430574:	fldcw  WORD PTR [esi+ebp*2+0x4a]
  430578:	retf   
  430579:	popa   
  43057a:	jo     0x4305c2
  43057c:	cmp    al,0xc5
  43057e:	jne    0x430587
  430580:	outs   dx,BYTE PTR ds:[esi]
  430581:	aam    0x0
  430583:	add    BYTE PTR [eax],al
  430585:	add    BYTE PTR [eax+eax*1],al
  430588:	mov    ecx,0x6407ad78
  43058d:	push   es
  43058e:	aam    0x12
  430590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430592:	sti    
  430593:	xchg   BYTE PTR [edx+0x3e0fb266],ch
  430599:	jl     0x430568
  43059b:	jno    0x873d5208
  4305a1:	outs   dx,BYTE PTR ds:[esi]
  4305a2:	mov    dl,0x13
  4305a4:	jb     0x43055a
  4305a6:	pop    es
  4305a7:	xchg   DWORD PTR [ebx+eiz*8],ebp
  4305aa:	xchg   DWORD PTR [ecx-0x1f],ecx
  4305ad:	jns    0x4305b4
  4305af:	ret    
  4305b0:	scas   eax,DWORD PTR es:[edi]
  4305b1:	hlt    
  4305b2:	push   es
  4305b3:	add    bl,ch
  4305b5:	lock jge 0x430611
  4305b8:	in     eax,0x7f
  4305ba:	add    al,0x7f
  4305bc:	sub    BYTE PTR [edi+0x6],bl
  4305bf:	dec    eax
  4305c0:	fld    QWORD PTR [eax-0x11418fa]
  4305c6:	inc    esi
  4305c7:	pop    edx
  4305c8:	xchg   edi,eax
  4305c9:	(bad)
  4305cd:	scas   al,BYTE PTR es:[edi]
  4305ce:	(bad)  
  4305cf:	(bad)  
  4305d0:	mov    ebx,0xd7e5b6f
  4305d5:	jecxz  0x430596
  4305d7:	cli    
  4305d8:	pushf  
  4305d9:	and    BYTE PTR [edx+0x37fe1544],al
  4305df:	dec    edi
  4305e0:	jo     0x43063e
  4305e2:	push   ebx
  4305e3:	mov    BYTE PTR [esp+esi*4+0xc86967],bl
  4305ea:	add    BYTE PTR [eax],al
  4305ec:	xchg   ebx,eax
  4305ed:	dec    esp
  4305ee:	sub    DWORD PTR [ecx],0x1c
  4305f1:	cld    
  4305f2:	cli    
  4305f3:	pop    esp
  4305f4:	fwait
  4305f5:	addr16 (bad) 
  4305f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305f8:	xchg   ebp,eax
  4305f9:	dec    esp
  4305fa:	test   DWORD PTR [edx-0x2242c051],ebp
  430600:	lock push ecx
  430602:	je     0x430604
  430604:	mov    dh,0xe7
  430606:	jae    0x4305fc
  430608:	xchg   ebp,eax
  430609:	xor    eax,0xfb0fff06
  43060e:	out    0x41,eax
  430610:	xchg   ebp,eax
  430611:	out    0xf5,eax
  430613:	mov    dh,BYTE PTR [edx-0x757a2925]
  430619:	xor    eax,0x839b8b0b
  43061e:	jb     0x430634
  430620:	fidiv  DWORD PTR [ebx*1-0x1d05b57d]
  430627:	pop    es
  430628:	and    DWORD PTR [edx+0x4de8d02],ebx
  43062e:	adc    BYTE PTR [ebx+0x2bc27bab],cl
  430634:	sar    BYTE PTR [edx+0x4c],0x14
  430638:	or     ecx,ecx
  43063a:	or     bh,BYTE PTR [ebx]
  43063c:	adc    BYTE PTR [edi],ch
  43063e:	add    DWORD PTR [esi-0x2f],edx
  430641:	cmp    DWORD PTR [edx],eax
  430643:	add    ebx,DWORD PTR [ebx]
  430645:	jmp    0x430630
  430647:	pop    esi
  430648:	pushf  
  430649:	add    al,0x2b
  43064b:	rcr    BYTE PTR [ecx],0xf3
  43064e:	mov    edi,0xeb
  430653:	sbb    eax,0x863b027b
  430658:	or     BYTE PTR es:[ebp+0x45],dh
  43065c:	jnp    0x4306a0
  43065e:	add    al,0x9b
  430660:	call   0x3a5e065f
  430665:	aaa    
  430666:	dec    esp
  430667:	cs (bad) 
  430669:	jae    0x430678
  43066b:	mov    eax,ds:0xf2041e3d
  430670:	lahf   
  430671:	cmc    
  430672:	call   DWORD PTR ds:0x3675ba84
  430678:	leave  
  430679:	push   es
  43067a:	add    BYTE PTR [edi-0xcae197f],bh
  430680:	call   0x15831246
  430685:	mov    DWORD PTR [edi-0x40814599],edi
  43068b:	icebp  
  43068c:	out    dx,eax
  43068d:	imul   edx,DWORD PTR [edi],0xffffffb6
  430690:	xchg   edx,eax
  430691:	pop    edx
  430692:	xchg   bl,cl
  430694:	out    0xe0,al
  430696:	sti    
  430697:	jbe    0x43063d
  430699:	xlat   BYTE PTR ds:[ebx]
  43069a:	push   edi
  43069b:	mov    ebp,0x7e010825
  4306a0:	adc    eax,0x7ce473f4
  4306a5:	rol    DWORD PTR [edi],1
  4306a7:	mov    eax,DWORD PTR [ebp-0x276b03b9]
  4306ad:	pop    ebx
  4306ae:	test   BYTE PTR [ebx+ecx*2-0x174204e5],cl
  4306b5:	rol    DWORD PTR [edi],0x0
  4306b8:	add    BYTE PTR [eax],al
  4306ba:	jl     0x4306e6
  4306bc:	push   es
  4306bd:	call   0xfa9db4f3
  4306c2:	ins    BYTE PTR es:[edi],dx
  4306c3:	sub    bl,BYTE PTR [edx-0x7a]
  4306c6:	lods   eax,DWORD PTR ds:[esi]
  4306c7:	sub    ebx,DWORD PTR [ecx+0x71]
  4306ca:	jmp    0x4306a2
  4306cc:	enter  0xbc07,0xda
  4306d0:	enter  0x5b07,0x47
  4306d4:	inc    esp
  4306d5:	cli    
  4306d6:	inc    esp
  4306d7:	je     0x43065e
  4306d9:	xlat   BYTE PTR ds:[ebx]
  4306da:	dec    ebx
  4306db:	cmc    
  4306dc:	inc    edi
  4306dd:	cld    
  4306de:	xor    al,0xe0
  4306e0:	push   esi
  4306e1:	add    BYTE PTR [esi+0x781d6569],ah
  4306e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306e8:	push   es
  4306e9:	cmp    DWORD PTR [ebp+0x140fd253],esi
  4306ef:	rcr    BYTE PTR [edx-0x19],cl
  4306f2:	and    al,0x1b
  4306f4:	popa   
  4306f5:	cli    
  4306f6:	rcr    BYTE PTR [edi],0xbb
  4306f9:	push   esi
  4306fa:	sub    al,BYTE PTR [esi]
  4306fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306fd:	pop    es
  4306fe:	repz dec ebp
  430700:	adc    bl,BYTE PTR [edi+0x67]
  430703:	inc    eax
  430705:	pop    edi
  430706:	out    0x4c,eax
  430708:	leave  
  430709:	mov    ch,BYTE PTR [edx]
  43070b:	sti    
  43070c:	ins    DWORD PTR es:[edi],dx
  43070d:	enter  0x45d8,0xe4
  430711:	or     esi,ebx
  430713:	jg     0x430737
  430715:	adc    BYTE PTR [ecx-0xcfb1f3d],dh
  43071b:	pop    edi
  43071c:	les    esi,FWORD PTR [ebp+0x21000000]
  430722:	dec    esp
  430723:	adc    al,0x28
  430725:	pop    es
  430726:	sbb    BYTE PTR [edx-0xadcdfa2],dl
  43072c:	pop    esi
  43072d:	and    BYTE PTR [ebx],ah
  43072f:	(bad)  [ebx-0xb]
  430732:	dec    ebx
  430733:	jns    0x430793
  430735:	jne    0x43078e
  430737:	imul   edx,DWORD PTR [ebp+0x0],0xffffffef
  43073b:	imul   edx,edi,0x1e50fad0
  430741:	js     0x43078f
  430743:	pop    ecx
  430744:	mov    ah,BYTE PTR [edx+eax*4+0x51]
  430748:	xlat   BYTE PTR ds:[ebx]
  430749:	sti    
  43074a:	sub    DWORD PTR ds:0xaa7ff7d7,0x6e086a0f
  430754:	inc    esi
  430755:	test   eax,0xf30f26ac
  43075a:	mov    cl,0x5d
  43075c:	outs   dx,DWORD PTR ds:[esi]
  43075d:	jae    0x4307ba
  43075f:	hlt    
  430760:	add    al,0xf3
  430762:	push   es
  430763:	adc    ecx,eax
  430765:	clc    
  430766:	add    eax,0x7fc1b5b6
  43076b:	mov    ecx,DWORD PTR [ebx]
  43076d:	call   0xf3467af4
  430772:	push   es
  430773:	mov    dh,0x43
  430775:	jne    0x4307b3
  430777:	inc    DWORD PTR [eax]
  430779:	dec    esi
  43077a:	dec    esi
  43077b:	cli    
  43077c:	out    dx,al
  43077d:	push   0x5c
  43077f:	test   bh,bl
  430781:	sbb    ecx,esi
  430783:	mov    dh,0xe9
  430785:	add    BYTE PTR [eax],al
  430787:	add    al,dh
  430789:	push   es
  43078a:	jo     0x4307f6
  43078c:	add    eax,0x6a4b7407
  430791:	lds    eax,FWORD PTR [ebx]
  430793:	nop
  430794:	out    dx,eax
  430795:	push   es
  430796:	or     al,0xe9
  430798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430799:	mov    bl,0x24
  43079b:	mov    dh,0x26
  43079d:	pop    esp
  43079e:	cli    
  43079f:	pusha  
  4307a0:	mov    ch,0x7
  4307a2:	pop    ds
  4307a3:	stos   BYTE PTR es:[edi],al
  4307a4:	push   0x35720bc2
  4307a9:	sbb    esp,DWORD PTR gs:[edx-0x9]
  4307ad:	adc    ecx,DWORD PTR [edx]
  4307af:	adc    al,0xa5
  4307b1:	test   BYTE PTR [edi-0x13],al
  4307b4:	rol    DWORD PTR [ebx+0x36],cl
  4307b7:	sub    al,0xe3
  4307b9:	ror    DWORD PTR [ebx],1
  4307bb:	jle    0x43076c
  4307bd:	pop    es
  4307be:	add    cl,ch
  4307c0:	out    dx,al
  4307c1:	push   es
  4307c2:	jne    0x4307bd
  4307c4:	jae    0x4307b1
  4307c6:	push   DWORD PTR [ecx-0x42]
  4307c9:	arpl   WORD PTR [edi+0x57],dx
  4307cc:	(bad)  
  4307cd:	push   eax
  4307ce:	test   BYTE PTR [ecx],ch
  4307d0:	inc    esp
  4307d1:	cs out 0x8,al
  4307d4:	jb     0x4307fb
  4307d6:	add    BYTE PTR [edx+0x3f],dh
  4307d9:	pop    es
  4307da:	repz sub bh,ch
  4307dd:	push   es
  4307de:	or     cl,ch
  4307e0:	and    al,0x2
  4307e2:	jg     0x4307ad
  4307e4:	lock arpl WORD PTR [ecx],cx
  4307e7:	push   0x19fa5090
  4307ec:	add    BYTE PTR [eax],al
  4307ee:	add    dh,al
  4307f0:	jle    0x430839
  4307f2:	in     eax,0x8b
  4307f4:	dec    esp
  4307f5:	jge    0x4307f7
  4307f7:	and    al,0x7
  4307f9:	add    esi,0xffffff81
  4307fc:	mov    ecx,0xa9fc28e2
  430801:	cmc    
  430802:	mov    edi,edx
  430804:	xor    eax,0x75
  430807:	test   DWORD PTR [ebp+0x2e],ebx
  43080a:	push   0xffffffe2
  43080c:	stos   DWORD PTR es:[edi],eax
  43080d:	xor    esp,eax
  43080f:	jno    0x430858
  430811:	cli    
  430812:	(bad)  
  430813:	out    0x2,eax
  430815:	or     eax,DWORD PTR [eax-0x36]
  430818:	jg     0x4307ec
  43081a:	mov    edi,ebp
  43081c:	test   BYTE PTR [eax+eax*8+0x11082cd],0xca
  430824:	push   es
  430825:	lea    esi,[eax-0x4a]
  430828:	ret    
  430829:	add    BYTE PTR [eax],dh
  43082b:	call   0x477f:0x8d8b0006
  430832:	sbb    BYTE PTR [ebx],dl
  430834:	adc    cl,BYTE PTR ds:[ebx+0x1c477f9d]
  43083b:	add    edi,DWORD PTR [esi]
  43083d:	push   ss
  43083e:	xor    ebx,DWORD PTR [edx+0x7f]
  430841:	(bad)
  430844:	xchg   DWORD PTR ds:0x818f9600,esi
  43084a:	inc    edi
  43084b:	bound  edi,QWORD PTR [edi+0x8]
  43084e:	sbb    DWORD PTR [edx],0x56
  430851:	stc    
  430852:	mov    DWORD PTR [eax],0x30bf0000
  430858:	push   es
  430859:	mov    DWORD PTR [edi+0x18b9e2aa],eax
  43085f:	test   eax,0xfa5f8bf5
  430864:	add    eax,0x1d
  430867:	add    dh,0x0
  43086a:	dec    edx
  43086b:	push   es
  43086c:	or     DWORD PTR [edi],0xffffff9f
  43086f:	ss push cs
  430871:	mov    esi,ebx
  430873:	pop    ecx
  430874:	(bad)  
  430875:	mov    esi,0x4a87686a
  43087a:	out    dx,eax
  43087b:	(bad)  
  43087c:	mov    BYTE PTR [ebx],0x78
  43087f:	cdq    
  430880:	push   es
  430881:	mov    DWORD PTR [ebx-0x10b57899],edi
  430887:	out    0xc6,al
  430889:	or     ebp,DWORD PTR [eax+0x18]
  43088c:	or     al,0x85
  43088e:	mov    edx,0x7650f1b3
  430893:	and    ah,dh
  430895:	push   eax
  430896:	jo     0x430837
  430898:	repz dec edi
  43089a:	aam    0x2a
  43089c:	push   cs
  43089d:	adc    dh,BYTE PTR [ebx]
  43089f:	pusha  
  4308a0:	add    ebx,0xfbc0e4f7
  4308a6:	repnz popa 
  4308a8:	mov    DWORD PTR [ebx+ebp*8-0x2c],ecx
  4308ac:	ds out 0x2f,eax
  4308af:	imul   edx,DWORD PTR [esi-0x6],0x78
  4308b3:	ja     0x430835
  4308b5:	cli    
  4308b6:	ror    BYTE PTR es:[edx+0x3e],1
  4308bd:	inc    DWORD PTR [edx-0x2]
  4308c0:	call   DWORD PTR [ebx+0x5f]
  4308c3:	int    0x72
  4308c5:	jo     0x430866
  4308c7:	xor    ecx,DWORD PTR [edi+0x6e]
  4308ca:	sbb    al,0x14
  4308cc:	push   eax
  4308cd:	fs pushw ds
  4308d0:	das    
  4308d1:	xor    esi,DWORD PTR [edi-0x4f991f38]
  4308d7:	jg     0x430898
  4308d9:	out    0x3e,eax
  4308db:	in     al,dx
  4308dc:	dec    edx
  4308de:	sub    esi,DWORD PTR [ecx+0x55344de7]
  4308e4:	cli    
  4308e5:	jo     0x430879
  4308e7:	out    dx,al
  4308e8:	jmp    FWORD PTR [ecx-0x6c]
  4308eb:	jmp    0x2081:0x2a06ae73
  4308f2:	dec    eax
  4308f3:	sbb    DWORD PTR [ebx-0x10],ebx
  4308f6:	push   es
  4308f7:	jmp    0x948c7eff
  4308fc:	or     ch,BYTE PTR [ecx+esi*1+0x6d]
  430900:	push   edi
  430901:	jg     0x430886
  430903:	hlt    
  430904:	pop    ecx
  430905:	or     DWORD PTR [ecx+0x0],ecx
  430908:	mov    bh,0xd6
  43090a:	dec    ecx
  43090b:	jmp    0x6639886a
  430910:	mov    al,ds:0x5ad949e0
  430915:	in     al,0x7b
  430917:	imul   ecx,DWORD PTR [edi-0x26],0x48
  43091b:	leave  
  43091c:	imul   eax,esp,0x1e
  43091f:	ret    0x5a
  430922:	add    BYTE PTR [eax],al
  430924:	ja     0x43096e
  430926:	xor    al,0xb
  430928:	ins    BYTE PTR es:[edi],dx
  430929:	xor    BYTE PTR [ebp+0x56],bl
  43092c:	outs   dx,DWORD PTR ds:[esi]
  43092d:	xor    BYTE PTR [ecx+ebx*2+0x2e9048b9],0xd5
  430935:	inc    edi
  430936:	cdq    
  430937:	mov    gs,WORD PTR [edi]
  430939:	repz pop edi
  43093b:	sti    
  43093c:	jne    0x43097e
  43093e:	jge    0x43094b
  430940:	and    al,0x5f
  430942:	bound  eax,QWORD PTR [ebp-0x71]
  430945:	dec    eax
  430946:	mov    ch,0x43
  430948:	sub    DWORD PTR [ecx-0x8c1b2f3],ebp
  43094e:	call   0x51461804
  430953:	call   0x809c5406
  430958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430959:	shr    ecx,cl
  43095b:	xchg   ah,bh
  43095d:	push   es
  43095e:	pop    esi
  43095f:	push   ebx
  430960:	dec    ebp
  430961:	add    eax,0x517751f6
  430966:	mov    ah,0x11
  430968:	int    0x12
  43096a:	add    bl,al
  43096c:	call   0x858c3dbc
  430971:	or     DWORD PTR [eax],eax
  430973:	and    eax,DWORD PTR es:[edi+ecx*1]
  430977:	test   eax,0x6c017df0
  43097c:	mov    al,0xd3
  43097e:	adc    esp,DWORD PTR [edx+0x2c]
  430981:	and    al,0x8
  430983:	cs xor ah,dh
  430986:	das    
  430987:	jmp    0xf043098c
  43098c:	push   es
  43098d:	xchg   edi,ebp
  43098f:	outs   dx,DWORD PTR ds:[esi]
  430990:	rcr    BYTE PTR [ebx],0x62
  430993:	mov    dl,0x60
  430995:	or     DWORD PTR [ecx],edi
  430997:	pop    edi
  430998:	mov    esp,0xb64adcbd
  43099d:	out    0x2f,eax
  43099f:	xor    eax,0x2f1afa4b
  4309a4:	scas   al,BYTE PTR es:[edi]
  4309a5:	mov    ebp,0x86b1f0ed
  4309aa:	int    0x70
  4309ac:	pop    ebx
  4309ad:	pop    ss
  4309ae:	call   0x629510a3
  4309b3:	and    BYTE PTR [ebp+0x562ca186],dh
  4309b9:	or     ah,BYTE PTR [ebp+0x39]
  4309bc:	dec    eax
  4309bd:	cli    
  4309be:	jmp    0xcd12ce38
  4309c3:	loopne 0x430a11
  4309c5:	call   0xf0e9:0xbf83fbe9
  4309cc:	push   es
  4309cd:	xchg   DWORD PTR [ebx+ebp*8],ebp
  4309d0:	(bad)  
  4309d1:	fucomip st,st(0)
  4309d3:	imul   eax,edx,0xb461dc0b
  4309d9:	push   ecx
  4309da:	push   ecx
  4309db:	inc    edx
  4309dc:	mov    esp,edi
  4309de:	push   esi
  4309df:	outs   dx,BYTE PTR ds:[esi]
  4309e0:	push   edi
  4309e1:	test   BYTE PTR [edi-0x16],dl
  4309e4:	and    BYTE PTR [ebx+0x35a00],0x83
  4309eb:	xchg   ebx,edi
  4309ed:	push   DWORD PTR [ebx+0x0]
  4309f0:	add    BYTE PTR [eax],al
  4309f2:	(bad)  
  4309f3:	scas   al,BYTE PTR es:[edi]
  4309f4:	jae    0x4309fe
  4309f6:	leave  
  4309f7:	addr16 loop 0x4309f8
  4309fa:	aad    0xad
  4309fc:	cli    
  4309fd:	mov    WORD PTR [edi+0x5fff8da],cs
  430a03:	fisttp DWORD PTR [esi]
  430a05:	sub    ebp,esp
  430a07:	lods   eax,DWORD PTR ds:[esi]
  430a08:	cmp    edi,0xffffff8e
  430a0b:	inc    BYTE PTR [edx-0x74437e29]
  430a11:	test   edx,esi
  430a13:	lods   al,BYTE PTR ds:[esi]
  430a14:	cmc    
  430a15:	push   edx
  430a17:	cmp    ah,BYTE PTR [edi+edi*8]
  430a1a:	aad    0xc7
  430a1c:	sub    eax,0xffffffc4
  430a1f:	fcomip st,st(5)
  430a21:	add    al,0xca
  430a23:	or     al,BYTE PTR [eax]
  430a25:	test   DWORD PTR [ebp+0x6d8b0556],esp
  430a2b:	xchg   ebx,eax
  430a2c:	enter  0x4f8d,0xb2
  430a30:	clc    
  430a31:	inc    DWORD PTR [ebp-0x7ad5de4e]
  430a37:	fild   WORD PTR [ecx-0x40dc51ba]
  430a3d:	jne    0x430a0b
  430a3f:	mov    edi,DWORD PTR [edx+0x408ddad0]
  430a45:	xor    dl,bl
  430a47:	lea    edi,[ebx-0x10]
  430a4a:	dec    ecx
  430a4b:	retf   0xdfe2
  430a4e:	gs (bad) 
  430a51:	test   BYTE PTR [edx+0x56],cl
  430a54:	sub    ch,BYTE PTR [edx+0x0]
  430a57:	add    BYTE PTR [eax],al
  430a59:	call   0xbd93:0xaa20408d
  430a60:	push   eax
  430a61:	lds    esi,FWORD PTR [esi+esi*1]
  430a64:	push   ss
  430a65:	rep outs dx,DWORD PTR ds:[esi]
  430a67:	(bad)  
  430a68:	jle    0x430a99
  430a6a:	fs jns 0x430a2c
  430a6d:	(bad)  
  430a6e:	sub    esp,ebp
  430a70:	add    ebx,DWORD PTR [ebx+0x6a]
  430a73:	cmp    eax,0x3eb33cfc
  430a78:	jae    0x430a68
  430a7a:	mov    al,0x1e
  430a7c:	add    BYTE PTR [eax],bl
  430a7e:	xor    dl,BYTE PTR [ebx]
  430a80:	shr    BYTE PTR [esi-0x10],0xca
  430a84:	add    ebp,DWORD PTR [edx+0x60]
  430a87:	imul   ecx,DWORD PTR [ecx],0x70
  430a8a:	xchg   ebx,eax
  430a8b:	add    al,BYTE PTR [eax]
  430a8d:	xchg   BYTE PTR ds:0xeea8e7b0,dh
  430a93:	push   ecx
  430a94:	cli    
  430a95:	shr    bh,0xb7
  430a98:	pop    ecx
  430a99:	sub    dh,dl
  430a9b:	push   es
  430a9c:	add    BYTE PTR [esi-0x47],al
  430a9f:	addr16 jle 0x430a79
  430aa2:	aas    
  430aa3:	lods   eax,DWORD PTR ds:[esi]
  430aa4:	cs mov eax,0xa31d1c05
  430aaa:	push   0xffffffbe
  430aac:	inc    DWORD PTR [edi+0x7]
  430aaf:	xchg   edx,eax
  430ab0:	xlat   BYTE PTR ds:[ebx]
  430ab1:	scas   al,BYTE PTR es:[edi]
  430ab2:	lock add edx,DWORD PTR [edx-0x44]
  430ab6:	bound  esp,QWORD PTR [edx+0xd]
  430ab9:	xor    esi,DWORD PTR [eax]
  430abb:	push   ss
  430abc:	sbb    eax,0x63000000
  430ac1:	jb     0x430a81
  430ac3:	call   FWORD PTR [edi]
  430ac5:	inc    esi
  430ac6:	cmp    al,0x4
  430ac8:	xchg   ebp,eax
  430ac9:	enter  0xffbe,0x95
  430acd:	ins    BYTE PTR es:[edi],dx
  430ace:	add    BYTE PTR [esi+esi*4-0x10],bh
  430ad2:	add    esp,esp
  430ad4:	pop    edi
  430ad5:	out    dx,eax
  430ad6:	add    ecx,DWORD PTR [ecx+0x3e4103de]
  430adc:	rep ins DWORD PTR es:[edi],dx
  430ade:	add    BYTE PTR [eax+0x3a60636],dh
  430ae4:	repnz fcomp QWORD PTR [ecx-0xf]
  430ae8:	dec    esp
  430ae9:	sbb    BYTE PTR [ecx+0x58e36a03],ch
  430aef:	lea    ebp,[edi+0x3cb96f3a]
  430af5:	mov    ds,WORD PTR [ebx-0x548316aa]
  430afb:	push   esi
  430afc:	ins    DWORD PTR es:[edi],dx
  430afd:	adc    ebp,DWORD PTR [ebp-0x49f912c0]
  430b03:	push   esi
  430b04:	loopne 0x430a8d
  430b06:	imul   eax,ecx,0xc
  430b09:	(bad)  
  430b0a:	add    bl,bl
  430b0c:	mov    ds:0x4c800944,al
  430b11:	mov    ebx,0x45af55ed
  430b16:	push   0x7707f9d9
  430b1b:	aaa    
  430b1c:	or     eax,0x7e053608
  430b21:	retf   0x6bd8
  430b24:	add    BYTE PTR [eax],al
  430b26:	add    BYTE PTR ds:0x3a56dab8,al
  430b2c:	xchg   ecx,eax
  430b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b2e:	mov    edx,0x8b3348ab
  430b33:	fmul   DWORD PTR [eax-0x7ca102c]
  430b39:	popf   
  430b3a:	lods   eax,DWORD PTR ds:[esi]
  430b3b:	add    al,0x22
  430b3d:	jns    0x430b7f
  430b3f:	cmc    
  430b40:	push   es
  430b41:	xor    al,0x1d
  430b43:	imul   ebx,DWORD PTR [edi-0x55],0x99daa4c2
  430b4a:	lock mov BYTE PTR [ecx],bl
  430b4d:	sub    DWORD PTR [ebx+ebx*8],eax
  430b50:	and    DWORD PTR [ecx+0x40],ebx
  430b53:	int    0x6
  430b55:	cld    
  430b56:	cmc    
  430b57:	mov    dl,0xa
  430b59:	sub    DWORD PTR [edx+0x760006bd],0xffffffb5
  430b60:	or     bh,BYTE PTR [esp+eiz*4+0x31]
  430b64:	inc    esp
  430b65:	fidivr WORD PTR [ebp+0x30]
  430b68:	inc    esp
  430b69:	xchg   esp,edi
  430b6b:	ins    BYTE PTR es:[edi],dx
  430b6c:	dec    ebx
  430b6d:	ds jmp 0x24f31689
  430b73:	xor    DWORD PTR [edi+edi*8-0x62],eax
  430b77:	popf   
  430b78:	sbb    dh,al
  430b7a:	(bad)  [eax]
  430b7c:	inc    esp
  430b7d:	push   0xebe367d9
  430b82:	pusha  
  430b83:	imul   esi,DWORD PTR [eax+ecx*4],0xffffffc4
  430b87:	mov    ah,0x8b
  430b89:	pop    esp
  430b8a:	push   ds
  430b8b:	add    BYTE PTR [eax],al
  430b8d:	add    BYTE PTR [esi+0x11],ah
  430b90:	mov    dl,0xac
  430b92:	mov    ebp,0xb38d0c8c
  430b97:	add    al,0x0
  430b99:	call   0x3033:0x6c80f79d
  430ba0:	dec    edi
  430ba1:	add    DWORD PTR [ecx+0x6deef9ba],ecx
  430ba7:	test   BYTE PTR [ebx+0x7],dh
  430baa:	mov    ds:0xa7e14492,al
  430baf:	inc    eax
  430bb0:	je     0x430b93
  430bb2:	imul   edi,DWORD PTR [edx+0x6f841f7],0xbb1e2900
  430bbc:	repz mov esi,0x291467cc
  430bc2:	out    dx,eax
  430bc3:	ret    
  430bc4:	imul   eax
  430bc6:	mov    esp,0x3e2cfa1e
  430bcb:	les    edi,FWORD PTR [esi+ebx*4-0xf]
  430bcf:	mov    ah,0xb9
  430bd1:	aas    
  430bd2:	bound  eax,QWORD PTR [eax+0x74]
  430bd5:	loope  0x430bfe
  430bd7:	sbb    esi,DWORD PTR [eax+eax*1]
  430bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bdb:	inc    edi
  430bdc:	cli    
  430bdd:	adc    BYTE PTR [esi+0xe],0xe3
  430be1:	add    bh,BYTE PTR [ecx-0x11ba72f9]
  430be7:	mov    dl,0x5d
  430be9:	jb     0x430bb7
  430beb:	fstp   DWORD PTR [eax-0x76]
  430bee:	or     DWORD PTR [esi-0x39],edi
  430bf1:	ret    0x0
  430bf4:	add    BYTE PTR [esi+0x7],al
  430bf7:	push   ebp
  430bf8:	mov    ecx,DWORD PTR [esi]
  430bfa:	mov    dh,ah
  430bfc:	or     BYTE PTR [eax+0x7],bl
  430bff:	add    BYTE PTR [ebp-0x41d29],cl
  430c05:	std    
  430c06:	jp     0x430c6a
  430c08:	sbb    BYTE PTR [edx],0x7
  430c0b:	add    al,0x6a
  430c0d:	sbb    bl,dl
  430c0f:	jae    0x430c19
  430c11:	add    BYTE PTR [ebx-0x1e],0xc7
  430c15:	push   0xda85f5da
  430c1a:	push   esi
  430c1b:	or     DWORD PTR [edx+0x1a],ebp
  430c1e:	mov    WORD PTR [ebx-0xa260008],es
  430c24:	push   eax
  430c25:	std    
  430c26:	xor    edx,esi
  430c28:	adc    DWORD PTR [edx+0x47c08506],ebx
  430c2e:	pop    es
  430c2f:	sub    al,al
  430c31:	shl    esi,0xf6
  430c34:	jne    0x430c04
  430c36:	mov    DWORD PTR [ebx-0xa244008],eax
  430c3c:	push   0x65a
  430c41:	and    cl,BYTE PTR [edi]
  430c43:	xchg   ebp,eax
  430c44:	inc    eax
  430c45:	retf   0x6476
  430c48:	add    BYTE PTR [edx+0x4dff5cb5],dh
  430c4e:	sar    DWORD PTR [edx-0x3839d8f1],0xc2
  430c55:	repz daa 
  430c57:	(bad)  
  430c58:	push   esp
  430c59:	add    BYTE PTR [eax],al
  430c5b:	add    BYTE PTR [eax-0x3c],bh
  430c5e:	add    DWORD PTR [edi+esi*8+0x1f],0xc0ef7455
  430c66:	test   eax,0xca706e07
  430c6b:	pop    ebx
  430c6c:	les    esi,FWORD PTR [eax+0x6b5b0bc9]
  430c72:	dec    esi
  430c73:	stc    
  430c74:	pop    esp
  430c75:	mov    ch,0x56
  430c77:	test   BYTE PTR [esp+eiz*2-0x41],dl
  430c7b:	cli    
  430c7c:	(bad)  
  430c7d:	aas    
  430c7e:	push   ebx
  430c7f:	xor    al,BYTE PTR [ebx+eiz*2-0x2e]
  430c83:	btr    DWORD PTR [edi],ebp
  430c86:	jns    0x430c47
  430c88:	mov    edi,0xa6faaa09
  430c8d:	pop    ebx
  430c8e:	xchg   DWORD PTR [edi+esi*8-0x46],esi
  430c92:	mov    ecx,0xcbd78b07
  430c97:	aas    
  430c98:	repz jg 0x430d01
  430c9b:	(bad)  
  430c9c:	lock adc DWORD PTR [esi+edi*2+0x2f],edx
  430ca1:	cmp    al,0x79
  430ca3:	mov    edi,0x74535e7d
  430ca8:	jmp    0x430c4b
  430caa:	out    0xb3,ax
  430cad:	xor    DWORD PTR [esi-0x6],ecx
  430cb0:	pop    esi
  430cb1:	cmp    BYTE PTR [esi+0x4b],dl
  430cb4:	pushf  
  430cb5:	bound  ecx,QWORD PTR [esi+0x59]
  430cb8:	cmp    al,0x48
  430cba:	enter  0xceba,0x50
  430cbe:	dec    esi
  430cbf:	je     0x430cc1
  430cc1:	add    BYTE PTR [eax],al
  430cc3:	test   DWORD PTR [eax-0x8],0x3efe19f
  430cca:	pop    ebx
  430ccb:	push   ss
  430ccc:	outs   dx,BYTE PTR ds:[esi]
  430ccd:	repz inc DWORD PTR [edi-0x5b]
  430cd1:	pop    edi
  430cd2:	jle    0x430c6b
  430cd4:	push   es
  430cd5:	adc    eax,0x74bb6fba
  430cda:	mov    WORD PTR [ebx+0x6],ds
  430cdd:	jmp    0xf326a7e5
  430ce2:	push   edx
  430ce3:	mov    DWORD PTR [ebp+0x1b79b4aa],ecx
  430ce9:	and    esi,esi
  430ceb:	mov    ah,0x6
  430ced:	pusha  
  430cee:	leave  
  430cef:	push   0x6f03a88b
  430cf4:	pop    ebp
  430cf5:	call   0xb218fffd
  430cfa:	adc    bh,0x76
  430cfd:	nop
  430cfe:	mov    cs,WORD PTR [ecx+eax*2-0x18]
  430d02:	pop    ebx
  430d03:	lock sbb BYTE PTR [edx+0x53],al
  430d07:	jne    0x430d04
  430d09:	jl     0x430d01
  430d0b:	hlt    
  430d0c:	push   es
  430d0d:	pop    esi
  430d0e:	dec    ebx
  430d0f:	mov    esp,0x294fb341
  430d14:	pop    eax
  430d15:	ins    DWORD PTR es:[edi],dx
  430d16:	sub    al,0x6f
  430d18:	ret    
  430d19:	cmp    al,0x8c
  430d1b:	pop    ebp
  430d1c:	push   es
  430d1d:	jmp    0xf36c2825
  430d22:	push   edx
  430d23:	or     DWORD PTR [ebp+0xb429],ecx
  430d29:	add    cl,bh
  430d2b:	mov    edx,0x8f2252fc
  430d30:	stos   DWORD PTR es:[edi],eax
  430d31:	push   ebx
  430d32:	jg     0x430cf6
  430d34:	and    BYTE PTR [eax+ebp*4-0x34fc16f9],cl
  430d3b:	push   eax
  430d3c:	repz push edx
  430d3e:	(bad)  [ecx+ebp*4-0x3345364d]
  430d45:	push   edx
  430d46:	mov    ds:0xc47ebaf4,al
  430d4b:	cld    
  430d4c:	call   0x473b:0xfffe38d7
  430d53:	mov    ah,0x72
  430d55:	repnz inc edx
  430d57:	mov    ah,0x6e
  430d59:	adc    DWORD PTR [ebx],edx
  430d5b:	xchg   esp,eax
  430d5c:	aas    
  430d5d:	jmp    0x97ff699a
  430d62:	and    DWORD PTR ds:0x7f9114,edi
  430d68:	add    BYTE PTR [eax-0x55],dh
  430d6b:	sub    al,0x7e
  430d6d:	and    DWORD PTR [ecx],0x4b760cb4
  430d73:	or     al,0xfb
  430d75:	hlt    
  430d76:	push   0xcb5152d0
  430d7b:	cmp    eax,0xcb735efa
  430d80:	idiv   DWORD PTR [ecx-0x460c348d]
  430d86:	es pop es
  430d88:	push   edx
  430d89:	lahf   
  430d8a:	mov    eax,ds:0x298450
  430d8f:	add    BYTE PTR [eax],al
  430d91:	sbb    al,0xfc
  430d93:	cs adc bh,bh
  430d96:	mov    ecx,0x87d1b7f7
  430d9b:	inc    esp
  430d9c:	sbb    eax,0x72020c73
  430da1:	das    
  430da2:	or     BYTE PTR [ebp+0x7f0b2429],al
  430da8:	adc    esp,ebp
  430daa:	mov    ecx,0xf7f77213
  430daf:	inc    esp
  430db0:	or     eax,0x7cfb131c
  430db5:	in     al,dx
  430db6:	cmp    al,0x74
  430db8:	loope  0x430d5a
  430dba:	aam    0xe7
  430dbc:	pop    DWORD PTR [ecx+0x3d]
  430dbf:	cli    
  430dc0:	sub    ch,BYTE PTR [esi+0x45]
  430dc3:	or     edx,DWORD PTR [edx]
  430dc5:	pushf  
  430dc6:	aaa    
  430dc7:	ins    DWORD PTR es:[edi],dx
  430dc8:	mov    eax,0xf3bb22
  430dcd:	mov    ch,0x77
  430dcf:	jmp    0x615:0xf5d6ffff
  430dd6:	cmp    DWORD PTR [edx],edi
  430dd8:	add    ch,dh
  430dda:	jno    0x430e34
  430ddc:	leave  
  430ddd:	dec    eax
  430dde:	inc    edx
  430ddf:	cli    
  430de0:	xor    DWORD PTR [esi],ebp
  430de2:	push   edi
  430de3:	xchg   DWORD PTR [ebx+0x33e0334d],eax
  430de9:	mov    cl,0xb3
  430deb:	add    al,0x34
  430ded:	repz int 0x7d
  430df0:	cmp    eax,DWORD PTR [ecx+0x2b7983]
  430df6:	add    BYTE PTR [eax],al
  430df8:	push   ecx
  430df9:	mov    ebx,0x25da48dc
  430dfe:	repz jecxz 0x430dc6
  430e01:	scas   al,BYTE PTR es:[edi]
  430e02:	or     edx,DWORD PTR [ebp-0x5b]
  430e05:	dec    ebx
  430e06:	add    esp,DWORD PTR [esi-0xb]
  430e09:	mov    edx,0xf351137d
  430e0e:	lods   al,BYTE PTR ds:[esi]
  430e0f:	shl    ch,1
  430e11:	mov    edx,0x9721a104
  430e16:	add    esp,DWORD PTR [edi-0x23]
  430e19:	xchg   ebp,eax
  430e1a:	adc    eax,0x88300a98
  430e1f:	inc    ebx
  430e20:	jge    0x430ddb
  430e22:	add    al,0x67
  430e24:	jne    0x430e48
  430e26:	or     bl,0x76
  430e29:	mov    bl,0x57
  430e2b:	(bad)  
  430e2c:	fistp  WORD PTR [edi-0xd]
  430e2f:	cwde   
  430e30:	mov    eax,ds:0xf8e3037a
  430e35:	mov    dl,0x4
  430e37:	addr16 cmp bh,bh
  430e3a:	sub    BYTE PTR [ebx+0x55],cl
  430e3d:	sub    eax,esi
  430e3f:	aaa    
  430e40:	lea    ebx,[ebx+eiz*8-0x3bc96568]
  430e47:	push   0x5a688f3
  430e4c:	dec    esp
  430e4d:	cmp    eax,0x413069f3
  430e52:	outs   dx,BYTE PTR ds:[esi]
  430e53:	cmp    BYTE PTR [edx+edx*4-0xbcbd6a6],cl
  430e5a:	or     al,0xf5
  430e5c:	add    BYTE PTR [eax],al
  430e5e:	add    BYTE PTR [ecx],ah
  430e60:	mov    ebp,0x80144584
  430e65:	bound  ebp,QWORD PTR [ecx]
  430e67:	sbb    al,0xd2
  430e69:	sbb    cl,BYTE PTR [edx-0x36]
  430e6c:	inc    edx
  430e6d:	outs   dx,BYTE PTR ds:[esi]
  430e6e:	add    eax,0x6197f999
  430e73:	lea    esp,[ecx]
  430e75:	cwde   
  430e76:	or     eax,0xf473ce64
  430e7b:	mov    ebp,ebp
  430e7d:	repz add eax,0x49e97ccc
  430e83:	mov    al,0x34
  430e85:	ds pop esp
  430e87:	inc    edi
  430e88:	inc    esi
  430e8a:	jp     0x430e5e
  430e8c:	(bad)  
  430e8d:	fild   WORD PTR [edx+0x558a2910]
  430e93:	dec    edi
  430e94:	xlat   BYTE PTR ds:[ebx]
  430e95:	(bad)  
  430e96:	rcr    DWORD PTR cs:[edi],cl
  430e99:	loopne 0x430e1b
  430e9b:	push   edx
  430e9c:	jne    0x430e64
  430e9e:	fsubr  QWORD PTR [edi+ebx*1+0x655280e0]
  430ea5:	(bad)  
  430ea6:	pop    ss
  430ea7:	xchg   edx,eax
  430ea8:	(bad)  
  430ea9:	fistp  WORD PTR [edi-0x6c]
  430eac:	shl    edx,1
  430eae:	sub    eax,ecx
  430eb0:	jp     0x430f20
  430eb2:	add    eax,0x55b8cbc4
  430eb7:	fs div sp
  430ebb:	mov    ebx,esi
  430ebd:	rol    BYTE PTR [esi],1
  430ebf:	dec    esp
  430ec0:	jge    0x430eb4
  430ec2:	lds    eax,FWORD PTR [eax]
  430ec4:	add    BYTE PTR [eax],al
  430ec6:	add    BYTE PTR [edi],al
  430ec8:	dec    ebx
  430ec9:	icebp  
  430eca:	sub    cl,dl
  430ecc:	in     eax,dx
  430ecd:	inc    ebx
  430ece:	sub    ecx,DWORD PTR [esi-0x613f7420]
  430ed4:	jge    0x430e8a
  430ed6:	cmp    ch,BYTE PTR [edi-0x35f5c77a]
  430edc:	cmp    edi,ebx
  430ede:	sub    cl,dl
  430ee0:	stc    
  430ee1:	inc    edx
  430ee2:	(bad)  
  430ee3:	loop   0x430f00
  430ee5:	fbld   TBYTE PTR [edi-0x35c7b909]
  430eeb:	adc    DWORD PTR [edx],ebx
  430eed:	dec    esp
  430eee:	outs   dx,BYTE PTR ds:[esi]
  430eef:	push   ebp
  430ef0:	add    al,0x74
  430ef2:	jg     0x430eac
  430ef4:	jmp    0x54e9457e
  430ef9:	mov    eax,0x984d30f2
  430efe:	mov    esi,0xbe73c1a3
  430f03:	sahf   
  430f04:	or     eax,0x1e9f0298
  430f09:	ins    BYTE PTR es:[edi],dx
  430f0a:	std    
  430f0b:	in     eax,0x9
  430f0d:	mov    dh,0xba
  430f0f:	leave  
  430f10:	or     BYTE PTR [ebp+0x71],dh
  430f13:	jmp    0xa56b5af5
  430f18:	adc    DWORD PTR [eax+esi*4],esi
  430f1b:	sbb    BYTE PTR [ebx],dl
  430f1d:	jmp    0xfac0:0x3f08c9ba
  430f24:	test   cl,bl
  430f26:	ror    DWORD PTR [ecx-0x45],0x7a
  430f2a:	add    BYTE PTR [eax],al
  430f2c:	add    BYTE PTR [eax],cl
  430f2e:	xchg   DWORD PTR [eax+ebp*1],ecx
  430f31:	test   DWORD PTR [esi],0x7da1b5e9
  430f37:	cli    
  430f38:	add    al,0xf3
  430f3a:	push   es
  430f3b:	call   0x9c9b:0x910e7f4e
  430f42:	enter  0xe8ff,0x35
  430f46:	adc    esi,DWORD PTR [eax]
  430f48:	xlat   BYTE PTR ds:[ebx]
  430f49:	mov    al,0x3c
  430f4b:	jge    0x430efa
  430f4d:	aam    0x8b
  430f4f:	mov    ah,0xc5
  430f51:	and    eax,DWORD PTR [ecx-0x6]
  430f54:	rol    DWORD PTR [ebp+0x3a],0xf9
  430f58:	into   
  430f59:	call   0xfa3e:0xcc6c8d0c
  430f60:	mov    esi,0x2aaf947f
  430f65:	out    dx,eax
  430f66:	cs ja  0x430fd5
  430f69:	inc    ebx
  430f6a:	inc    ecx
  430f6b:	test   BYTE PTR [ecx-0x5878f444],ch
  430f71:	ss cmp al,0xfa
  430f74:	sub    DWORD PTR [ebx+esi*4-0x8],eax
  430f78:	(bad)  [eax]
  430f7a:	and    eax,0x8b7b136a
  430f7f:	test   bh,dh
  430f81:	mov    ebp,0x4919fa40
  430f86:	cmp    al,0x8b
  430f88:	hlt    
  430f89:	and    al,0xbd
  430f8b:	(bad)  
  430f8c:	mov    ax,0xf14c
  430f90:	pop    esp
  430f91:	add    BYTE PTR [eax],al
  430f93:	add    BYTE PTR [ebp+0x43d7bf82],bh
  430f99:	test   ecx,eax
  430f9b:	mov    ecx,0xaaabbc18
  430fa0:	lock mov DWORD PTR [ebp+ebx*1-0x6605bf47],eax
  430fa8:	enter  0xb325,0x2e
  430fac:	lods   eax,DWORD PTR ds:[esi]
  430fad:	cmp    BYTE PTR [edi-0x7c84640a],0x29
  430fb4:	sub    ecx,DWORD PTR [edi]
  430fb6:	das    
  430fb7:	sub    DWORD PTR [esi],ecx
  430fb9:	pop    DWORD PTR [ebp+ebp*1+0xfa40a9]
  430fc0:	in     eax,dx
  430fc1:	push   ds
  430fc2:	jl     0x430f70
  430fc4:	cdq    
  430fc5:	pop    es
  430fc6:	lea    eax,[ebp-0xa2f02]
  430fcc:	jp     0x430f9a
  430fce:	adc    esi,DWORD PTR [eax-0x7b05b828]
  430fd4:	call   0xf5c9:0x9fe483bb
  430fdb:	je     0x430fb0
  430fdd:	sar    edx,0xff
  430fe0:	or     bh,BYTE PTR [edx+0x73]
  430fe3:	stc    
  430fe4:	shl    DWORD PTR [eax+eax*8+0x45479a00],0x75
  430fec:	arpl   WORD PTR [edx+0x2c5eff],dx
  430ff2:	mov    ebp,0x81749a04
  430ff7:	in     al,dx
  430ff8:	add    BYTE PTR [eax],al
  430ffa:	add    BYTE PTR [ebx],bl
  430ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ffd:	outs   dx,BYTE PTR ds:[esi]
  430ffe:	push   es
  430fff:	mov    al,BYTE PTR [edi]
  431001:	dec    ebx
  431002:	push   esi
  431003:	cmp    esi,ebp
  431005:	dec    ebp
  431006:	lea    esp,[edi-0x5]
  431009:	mov    dl,0xbd
  43100b:	pop    edx
  43100c:	pop    es
  43100d:	add    BYTE PTR [eax+0x49e2c9ef],cl
  431013:	pop    ecx
  431014:	retf   0x8bf5
  431017:	adc    al,0x73
  431019:	cmc    
  43101a:	adc    eax,0x3a3582
  43101f:	rol    DWORD PTR [ebx-0x12],cl
  431022:	cmp    ecx,DWORD PTR [ecx]
  431024:	cmp    bh,BYTE PTR [esi-0x5e]
  431027:	sbb    al,BYTE PTR [edi]
  431029:	add    BYTE PTR [ebp-0x414d64a1],cl
  43102f:	or     al,BYTE PTR [edi]
  431031:	add    al,ch
  431033:	clc    
  431034:	cmp    ch,dh
  431036:	inc    DWORD PTR [ecx-0xc00b53f]
  43103c:	call   0x3fed:0xc9e6fa52
  431043:	repz dec eax
  431045:	aas    
  431046:	jae    0x4310ac
  431048:	stos   DWORD PTR es:[edi],eax
  431049:	mov    edx,0x7aa342f7
  43104e:	lahf   
  43104f:	fisubr WORD PTR [ecx]
  431051:	dec    ebx
  431052:	push   eax
  431053:	lods   al,BYTE PTR ds:[esi]
  431054:	jmp    0x4310a1
  431056:	add    esi,edx
  431058:	das    
  431059:	(bad)  
  43105a:	cli    
  43105b:	mov    ds:0x46ad,eax
  431060:	add    BYTE PTR [eax],al
  431062:	inc    esi
  431063:	jmp    0xfa4b:0x455b847a
  43106a:	inc    ebx
  43106b:	(bad)  
  43106c:	(bad)  
  43106d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43106f:	mov    BYTE PTR [edi+ecx*2],0x9c
  431073:	push   ebx
  431074:	scas   al,BYTE PTR es:[edi]
  431075:	push   cs
  431076:	xor    esi,DWORD PTR [eax]
  431078:	cmp    DWORD PTR [edi-0x7b851dfa],0xfa4b9353
  431082:	and    ecx,DWORD PTR [ecx-0x101e800f]
  431088:	add    edx,DWORD PTR [eax+0x7a]
  43108b:	jecxz  0x4310d8
  43108d:	mov    WORD PTR [esi-0x28],gs
  431090:	inc    edi
  431091:	cli    
  431092:	pop    esp
  431093:	and    BYTE PTR [ebx-0x7c],bh
  431096:	xchg   ebx,eax
  431097:	mov    ds:0xd8a3fa4b,eax
  43109c:	icebp  
  43109d:	push   edi
  43109e:	loopne 0x43110f
  4310a0:	inc    BYTE PTR [ebx+esi*1-0x517916ad]
  4310a7:	(bad)  
  4310a8:	jns    0x43102d
  4310aa:	mov    dh,0xa7
  4310ac:	inc    edi
  4310ad:	cli    
  4310ae:	and    al,0xa0
  4310b0:	jg     0x431079
  4310b2:	sbb    al,0xdb
  4310b4:	xchg   ecx,eax
  4310b5:	xchg   edi,eax
  4310b6:	sbb    BYTE PTR [edi],al
  4310b8:	and    cl,BYTE PTR [esp+edx*1-0x29]
  4310bc:	adc    DWORD PTR [esi+0x9],ecx
  4310bf:	inc    ecx
  4310c0:	stos   DWORD PTR es:[edi],eax
  4310c1:	dec    esp
  4310c2:	repz cmp DWORD PTR [ebx+0x57],edx
  4310c9:	stc    
  4310ca:	adc    esp,DWORD PTR [ebp-0x3ef8d30f]
  4310d0:	scas   al,BYTE PTR es:[edi]
  4310d1:	jmp    0xb354fa89
  4310d6:	das    
  4310d7:	jbe    0x4310db
  4310d9:	repz push es
  4310db:	jno    0x431086
  4310dd:	leave  
  4310de:	(bad)  
  4310df:	cmp    ebx,DWORD PTR [ecx+ecx*4+0xa]
  4310e3:	jl     0x4310a9
  4310e5:	mov    esp,0x245c238a
  4310ea:	mov    WORD PTR [ebx],gs
  4310ec:	pusha  
  4310ed:	cmp    al,0x8c
  4310ef:	and    edx,DWORD PTR [esp+esi*1-0x53]
  4310f3:	mov    cl,0x79
  4310f5:	aaa    
  4310f6:	aas    
  4310f7:	sbb    dh,bl
  4310f9:	xchg   esi,eax
  4310fa:	aam    0x35
  4310fc:	jge    0x43112d
  4310fe:	aas    
  4310ff:	cdq    
  431100:	icebp  
  431101:	rcl    BYTE PTR ds:0xc36a0429,1
  431107:	jl     0x431118
  431109:	xor    al,0xb2
  43110b:	in     eax,dx
  43110c:	or     BYTE PTR [ebp+0x6],dl
  43110f:	jmp    0x8cc70917
  431114:	add    al,0xf3
  431116:	push   es
  431117:	mov    al,0xa8
  431119:	pop    esp
  43111a:	or     DWORD PTR [ebp+0x3a],ebp
  43111d:	dec    esp
  43111e:	cmp    eax,ebp
  431120:	push   ss
  431121:	inc    ecx
  431122:	push   DWORD PTR [ebx-0x717f16ad]
  431128:	add    al,0xf3
  43112a:	push   es
  43112b:	je     0x4310ee
  43112d:	add    BYTE PTR [eax],al
  43112f:	add    BYTE PTR [eax],ah
  431131:	(bad)  
  431132:	ins    DWORD PTR es:[edi],dx
  431133:	rcr    DWORD PTR [esp+ebp*4],0xff
  431137:	(bad)  [ecx-0x5665500b]
  43113d:	adc    ch,BYTE PTR [edx+edi*8]
  431140:	xor    BYTE PTR [ecx],bh
  431142:	sub    DWORD PTR [ecx],0x8
  431145:	adc    BYTE PTR [ecx+ebp*8-0x5b78f910],0xa4
  43114d:	lock mov esi,0xff826cf6
  431153:	call   0x49cf9b48
  431158:	sub    bh,BYTE PTR ds:0xa82998fa
  43115e:	psrlw  mm7,QWORD PTR [edx+0x4b]
  431162:	cld    
  431163:	fiadd  WORD PTR [eax+edi*2+0x73]
  431167:	inc    edi
  431168:	cmp    al,BYTE PTR [ebx+0x3d29d297]
  43116e:	dec    edi
  43116f:	je     0x4311e4
  431171:	cwde   
  431172:	cld    
  431173:	mov    esi,0xc14fc839
  431178:	shl    DWORD PTR [edi-0x6],1
  43117b:	scas   al,BYTE PTR es:[edi]
  43117c:	jae    0x4311f6
  43117e:	jae    0x4311bf
  431180:	or     al,BYTE PTR [ebx+0x3d399c9f]
  431186:	dec    edi
  431187:	cmp    esp,0xf48efa71
  43118d:	ja     0x431202
  43118f:	das    
  431190:	jmp    0x0:0x808f82
  431197:	mov    ecx,0x77014f3c
  43119c:	cmp    dl,bh
  43119e:	in     eax,0xa1
  4311a0:	mov    eax,DWORD PTR [ecx+ecx*4-0x4605c345]
  4311a7:	jge    0x4311c9
  4311a9:	bound  esi,QWORD PTR [ecx+ebp*4+0x2429843c]
  4311b0:	loopne 0x431200
  4311b2:	add    BYTE PTR [edi-0x1a06757a],ah
  4311b8:	int3   
  4311b9:	dec    edx
  4311ba:	push   ebx
  4311bb:	mov    dl,0xb7
  4311bd:	jle    0x4311be
  4311bf:	lds    esi,FWORD PTR [edi-0x40f38b46]
  4311c5:	adc    DWORD PTR [eax+0x50f5ccd3],0xffffff91
  4311cc:	inc    esi
  4311cd:	out    dx,al
  4311ce:	call   FWORD PTR [edx+0x34]
  4311d1:	rol    BYTE PTR [ebp-0xb],0x2
  4311d5:	call   0xf61002fe
  4311da:	call   FWORD PTR [edi-0x38]
  4311dd:	cmc    
  4311de:	adc    eax,0x3a30b2
  4311e3:	sbb    al,0xa
  4311e5:	jne    0x4311d7
  4311e7:	aad    0x81
  4311e9:	inc    eax
  4311ea:	jmp    DWORD PTR [ebp-0x5d8a0a33]
  4311f0:	int    0x13
  4311f2:	sub    cl,cl
  4311f4:	inc    ebx
  4311f5:	cli    
  4311f6:	and    bh,0xde
  4311f9:	in     al,0x0
  4311fb:	add    BYTE PTR [eax],al
  4311fd:	add    BYTE PTR [edx-0x4e7bf8fd],cl
  431203:	int3   
  431204:	cmc    
  431205:	inc    DWORD PTR [edi]
  431207:	mov    eax,0xcd65fb92
  43120c:	dec    edx
  43120d:	push   0xffffff8b
  43120f:	pop    ecx
  431210:	cmc    
  431211:	push   0xfffa838d
  431216:	or     esi,ecx
  431218:	adc    edx,DWORD PTR [eax+0x49]
  43121b:	inc    ebx
  43121c:	cli    
  43121d:	test   BYTE PTR [edx-0x3072d1b9],cl
  431223:	mov    dl,0xf7
  431225:	call   ebp
  431227:	jb     0x43128b
  431229:	sbb    BYTE PTR [edx+0x3],0x4
  43122d:	push   edi
  43122e:	repz mov ds:0xc838977a,al
  431234:	dec    eax
  431235:	dec    edi
  431236:	rcl    ch,0x22
  431239:	pop    ebx
  43123a:	and    al,0xf8
  43123c:	jp     0x4311fd
  43123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43123f:	push   edi
  431240:	mov    bl,0x8c
  431242:	outs   dx,BYTE PTR ds:[esi]
  431243:	fld    QWORD PTR [esi-0x6]
  431246:	or     al,0x7d
  431248:	mov    bl,0xe7
  43124a:	or     DWORD PTR [eax+ecx*2-0x30128806],ebp
  431251:	add    ebp,DWORD PTR ds:0x79004762
  431257:	arpl   WORD PTR [edi+0x5a],ax
  43125a:	inc    ebp
  43125b:	imul   esi,DWORD PTR ds:0x57a946be,0x80
  431265:	(bad)  
  431266:	lods   al,BYTE PTR ds:[esi]
  431267:	clc    
  431268:	dec    esp
  43126a:	icebp  
  43126b:	lods   eax,DWORD PTR ds:[esi]
  43126c:	push   edx
  43126d:	jbe    0x43120a
  43126f:	(bad)  
  431270:	repnz mov esp,0xb489565d
  431276:	inc    esi
  431277:	inc    edi
  431278:	gs pop es
  43127a:	mov    ebx,0x75ab8d79
  43127f:	inc    edi
  431280:	dec    edi
  431281:	jo     0x4312ec
  431283:	inc    edi
  431284:	repz ror BYTE PTR gs:[ecx+0x476d8c5f],cl
  43128c:	xchg   BYTE PTR [eax+0x7eee4e98],dh
  431292:	popf   
  431293:	jns    0x431254
  431295:	cmc    
  431296:	and    bh,BYTE PTR [ebx-0x3f]
  431299:	ret    
  43129a:	pop    ss
  43129b:	test   BYTE PTR [ebx-0x7b8ee050],ch
  4312a1:	repz mov ebx,0x87c3fa47
  4312a7:	add    ebp,DWORD PTR [esi+0x7e62074c]
  4312ad:	test   BYTE PTR [esi],al
  4312af:	je     0x4312f4
  4312b1:	jo     0x4312fa
  4312b3:	(bad)  
  4312b5:	add    eax,0x777ac247
  4312ba:	pop    es
  4312bb:	inc    ebp
  4312bc:	dec    eax
  4312bd:	sub    DWORD PTR [edx-0x39128c05],eax
  4312c3:	call   0x2d4a823e
  4312c8:	dec    eax
  4312c9:	add    BYTE PTR [eax],al
  4312cb:	add    BYTE PTR [ecx],cl
  4312cd:	xlat   BYTE PTR ds:[ebx]
  4312ce:	and    DWORD PTR [eax],esi
  4312d0:	mov    ds,WORD PTR [edx]
  4312d2:	ins    BYTE PTR es:[edi],dx
  4312d3:	jle    0x431323
  4312d5:	das    
  4312d6:	adc    DWORD PTR [eax-0x5c],ecx
  4312d9:	mov    al,ds:0x776776e8
  4312de:	ins    DWORD PTR es:[edi],dx
  4312df:	inc    esp
  4312e0:	int3   
  4312e1:	push   0x8bd945f5
  4312e6:	sub    cl,cl
  4312e8:	test   DWORD PTR [ecx+0x7f54b322],0x82c4c392
  4312f2:	arpl   WORD PTR [ebx+edi*4+0x35],cx
  4312f6:	shl    DWORD PTR [esp+ecx*8-0x56b86885],1
  4312fd:	mov    ebp,DWORD PTR [eax+0x64467ff7]
  431303:	inc    esp
  431304:	daa    
  431305:	add    dh,dh
  431307:	inc    ebx
  431308:	adc    al,BYTE PTR [eax+0x358b4c63]
  43130e:	mov    eax,ds:0x9f2e6f79
  431313:	inc    edi
  431314:	jns    0x4312ec
  431316:	xchg   ecx,eax
  431317:	das    
  431318:	jns    0x431315
  43131a:	mov    WORD PTR [edx-0x699f8d3],ss
  431320:	add    al,0x63
  431322:	and    eax,0xff345d04
  431327:	fild   DWORD PTR [esp+eax*1]
  43132a:	inc    eax
  43132b:	jmp    0xaaf048c7
  431330:	add    BYTE PTR [eax],al
  431332:	add    al,dh
  431334:	std    
  431335:	mov    esi,0x4fc438d5
  43133a:	push   esi
  43133b:	inc    edx
  43133c:	add    eax,0x1ef0a90f
  431341:	inc    edx
  431342:	and    al,0xac
  431344:	xor    BYTE PTR [esp+ebp*2+0x36fa32f7],cl
  43134b:	mov    bh,0xfb
  43134d:	mov    eax,0x8c82b42e
  431352:	and    DWORD PTR [esi-0x1bee05d0],esi
  431358:	outs   dx,DWORD PTR ds:[esi]
  431359:	cli    
  43135a:	push   ss
  43135b:	sbb    DWORD PTR [ecx],ebx
  43135d:	lea    esp,[ecx+eiz*1+0x3c]
  431361:	cli    
  431362:	push   es
  431363:	lahf   
  431364:	stos   BYTE PTR es:[edi],al
  431365:	jmp    FWORD PTR [ebx-0x3e]
  431368:	mov    WORD PTR [esi-0x10e2c8d6],es
  43136e:	in     al,dx
  43136f:	xor    eax,0xe667bf8b
  431374:	xor    DWORD PTR [ecx+eax*8+0x68],0xf0e8ff79
  43137c:	push   ds
  43137d:	cld    
  43137e:	fidiv  WORD PTR ds:0x272c8c31
  431384:	les    eax,FWORD PTR [esi-0x7b7c9f59]
  43138a:	mov    cl,0x24
  43138c:	xor    edx,edi
  43138e:	sbb    DWORD PTR [edi],ebp
  431390:	adc    dh,BYTE PTR [ecx-0x4074d25a]
  431396:	out    dx,al
  431397:	add    BYTE PTR [eax],al
  431399:	add    BYTE PTR [ebx],al
  43139b:	je     0x431320
  43139d:	test   eax,0xa92effa3
  4313a2:	dec    esi
  4313a3:	jg     0x431329
  4313a5:	add    BYTE PTR [edx-0x3c],dh
  4313a8:	cmc    
  4313a9:	dec    edi
  4313ab:	xchg   dl,dh
  4313ad:	hlt    
  4313ae:	(bad)  
  4313b0:	dec    edx
  4313b1:	push   0x8000085b
  4313b6:	int    0x36
  4313b8:	outs   dx,BYTE PTR ds:[esi]
  4313b9:	adc    ecx,DWORD PTR [edx-0x51ca7cf8]
  4313bf:	cmp    BYTE PTR [edx],bh
  4313c1:	add    bh,cl
  4313c3:	xchg   dl,ch
  4313c5:	clc    
  4313c6:	lods   eax,DWORD PTR ds:[esi]
  4313c7:	int3   
  4313c8:	dec    edx
  4313c9:	lea    edx,[edi-0x220003f9]
  4313cf:	ja     0x4313c6
  4313d1:	(bad)  
  4313d2:	scas   eax,DWORD PTR es:[edi]
  4313d3:	xchg   BYTE PTR [edx],al
  4313d5:	dec    ch
  4313d7:	int3   
  4313d8:	dec    edx
  4313d9:	lea    edx,[edi-0x22000841]
  4313df:	ja     0x4313d6
  4313e1:	(bad)  
  4313e2:	dec    edi
  4313e3:	jg     0x4313ef
  4313e5:	(bad)  
  4313e6:	in     eax,dx
  4313e7:	int3   
  4313e8:	mov    dl,0x9c
  4313ea:	retf   0x7
  4313ed:	call   0x385072
  4313f2:	das    
  4313f3:	xchg   DWORD PTR [edx],eax
  4313f5:	dec    ch
  4313f7:	leave  
  4313f8:	dec    edx
  4313f9:	lea    edx,[edi-0x25]
  4313fc:	repnz inc DWORD PTR [eax]
  4313ff:	add    BYTE PTR [eax],al
  431401:	popf   
  431402:	jp     0x43138f
  431404:	test   DWORD PTR [edx+0xafff5c9],edx
  43140a:	mov    esp,0xc9b2f083
  43140f:	cmc    
  431410:	push   eax
  431411:	adc    edx,esi
  431413:	dec    edx
  431414:	mov    edi,0x6c6
  431419:	inc    DWORD PTR [ebx-0x36a20f86]
  43141f:	loop   0x431470
  431421:	repz cdq 
  431423:	inc    edx
  431424:	cli    
  431425:	jo     0x431490
  431427:	out    dx,eax
  431428:	test   BYTE PTR [ebx],dh
  43142a:	or     edi,esp
  43142c:	xchg   BYTE PTR ds:0x98455c0d,dh
  431432:	mov    ebx,0x1dee3844
  431437:	(bad)  
  431438:	ds repz push edx
  43143b:	mul    BYTE PTR [ebp-0xd]
  43143e:	aam    0xea
  431440:	jecxz  0x431423
  431442:	pop    ebp
  431443:	(bad)  
  431444:	mov    eax,0xfffe1e1d
  431449:	jbe    0x4313ed
  43144b:	add    esi,ebx
  43144d:	sbb    al,0xf4
  43144f:	cmp    edi,edi
  431451:	adc    al,0x5d
  431453:	mov    ch,0x74
  431455:	or     al,BYTE PTR [esp+eiz*4+0x3548f2af]
  43145c:	mov    esi,0x7e57b8a6
  431461:	pop    es
  431462:	inc    ecx
  431463:	jg     0x4314c9
  431465:	add    BYTE PTR [eax],al
  431467:	add    bh,ch
  431469:	and    BYTE PTR [edi-0x53c3b97a],ch
  43146f:	mov    WORD PTR [eax],?
  431471:	js     0x431466
  431473:	mov    dl,0x23
  431475:	xchg   ecx,eax
  431476:	dec    ebx
  431477:	fld1   
  431479:	cmp    eax,ebx
  43147b:	add    BYTE PTR [eax],dl
  43147d:	push   eax
  43147e:	fcom   DWORD PTR [ecx]
  431480:	outs   dx,BYTE PTR ds:[esi]
  431481:	jmp    0x4314aa
  431483:	dec    edi
  431484:	push   0xffffffd3
  431486:	dec    edi
  431487:	out    0xb5,eax
  431489:	rol    BYTE PTR [edx+edi*8+0x78],0x75
  43148e:	push   esi
  43148f:	add    eax,edi
  431491:	jno    0x4314d6
  431493:	popa   
  431494:	jo     0x43150e
  431496:	imul   BYTE PTR [ebp-0x1f]
  431499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43149a:	mov    edi,0xa9076e0f
  43149f:	into   
  4314a0:	mul    edi
  4314a2:	and    ecx,DWORD PTR [eax-0x73]
  4314a5:	or     DWORD PTR [esi+0x43],esp
  4314a8:	sbb    BYTE PTR [eax-0x4b92b7dd],al
  4314ae:	lock jbe 0x431462
  4314b1:	neg    BYTE PTR [eax]
  4314b3:	inc    ebp
  4314b4:	jmp    DWORD PTR [edx]
  4314b6:	(bad)  
  4314b7:	ret    
  4314b8:	dec    esp
  4314b9:	jge    0x4314dc
  4314bb:	hlt    
  4314bc:	jnp    0x43148a
  4314be:	dec    eax
  4314bf:	js     0x431472
  4314c1:	out    0x6f,al
  4314c3:	mov    esi,0x13a98418
  4314c8:	ret    
  4314c9:	xor    ebx,esi
  4314cb:	push   ebx
  4314cc:	add    BYTE PTR [eax],al
  4314ce:	add    dh,dh
  4314d0:	(bad)  
  4314d1:	call   0xb14c76ca
  4314d6:	mov    ebx,0x5b661aa0
  4314db:	out    0xba,eax
  4314dd:	in     al,0x10
  4314df:	xor    ebx,DWORD PTR [esi]
  4314e1:	cld    
  4314e2:	js     0x4314d5
  4314e4:	test   al,0x6d
  4314e6:	sbb    edx,0x7
  4314e9:	jmp    0x5e42e8f1
  4314ee:	cld    
  4314ef:	push   edx
  4314f0:	jle    0x43155a
  4314f2:	out    0xf3,eax
  4314f4:	push   es
  4314f5:	jmp    0xd0e80d7
  4314fa:	js     0x431509
  4314fc:	pop    ss
  4314fd:	repnz sub dh,BYTE PTR [edi-0x43]
  431501:	cli    
  431502:	push   ds
  431503:	mov    bl,0xe5
  431505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431506:	lea    esp,[edi]
  431508:	das    
  431509:	sbb    bh,BYTE PTR ds:[esi-0x3d]
  43150d:	lods   al,BYTE PTR ds:[esi]
  43150e:	aad    0x25
  431510:	inc    edi
  431511:	in     al,dx
  431512:	rcl    DWORD PTR [esi],cl
  431514:	or     BYTE PTR [esi+0x52],ch
  431517:	mov    WORD PTR [edi+edi*8-0x78f90f1d],fs
  43151e:	mov    ecx,0xed74377a
  431523:	xchg   BYTE PTR [ecx-0x1a],dh
  431526:	sub    esp,DWORD PTR [esp+ebp*8-0x7a]
  43152a:	mov    bh,0x1f
  43152c:	in     eax,0xf0
  43152e:	(bad)  
  43152f:	mov    al,0x8b
  431531:	xlat   BYTE PTR ds:[ebx]
  431532:	xchg   ecx,eax
  431533:	add    BYTE PTR [eax],al
  431535:	add    BYTE PTR [eax+0x647efc5f],dh
  43153b:	retf   0x6cfb
  43153e:	mov    bh,0xb5
  431540:	sub    BYTE PTR [edi-0x11],dh
  431543:	pop    es
  431544:	je     0x431553
  431546:	ins    BYTE PTR es:[edi],dx
  431547:	retf   0x720b
  43154a:	das    
  43154b:	add    ebx,esi
  43154d:	xor    DWORD PTR [edi+eax*2],ecx
  431550:	push   ds
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	call   0x4124d507
  431557:	sub    al,0x74
  431559:	xor    eax,0x6207ca64
  43155e:	imul   DWORD PTR ds:0x6ee61af
  431564:	add    BYTE PTR [ecx],dl
  431566:	pushw  es
  431568:	cli    
  431569:	push   ds
  43156a:	gs jo  0x4315c7
  43156d:	mov    bh,0xcd
  43156f:	aas    
  431570:	mov    ebp,0x86d9f0e1
  431575:	adc    eax,0xe46f1c76
  43157a:	lock push es
  43157c:	dec    edi
  43157d:	lahf   
  43157e:	jge    0x4315d8
  431580:	push   edx
  431581:	bound  esi,QWORD PTR [eax+ebp*1]
  431584:	adc    bh,BYTE PTR [edx+0x6a612d31]
  43158a:	clc    
  43158b:	or     cl,BYTE PTR [ebx]
  43158d:	imul   esi,DWORD PTR [edx+0x30],0xfffffffa
  431591:	jmp    0x47e6ee
  431596:	mov    al,BYTE PTR [ecx*4+0x85]
  43159d:	cmp    esi,edx
  43159f:	cmc    
  4315a0:	push   DWORD PTR [eax]
  4315a2:	or     edx,DWORD PTR [eax-0x3a]
  4315a5:	sete   ah
  4315a8:	call   DWORD PTR [ebp+0x4]
  4315ab:	call   0x479569
  4315b0:	mov    ebx,DWORD PTR [ecx]
  4315b2:	sbb    edi,DWORD PTR [ebx-0x3c]
  4315b5:	inc    esi
  4315b6:	jg     0x431572
  4315b8:	je     0x431603
  4315ba:	mov    DWORD PTR [edx+0x42ad452c],edi
  4315c0:	add    eax,DWORD PTR [esp+eiz*2]
  4315c3:	add    eax,DWORD PTR [eax]
  4315c5:	pop    edx
  4315c6:	xor    DWORD PTR [ebx-0x4],0x2c
  4315ca:	xor    eax,ecx
  4315cc:	bswap  ebp
  4315ce:	mov    edx,edi
  4315d0:	call   FWORD PTR [edx]
  4315d2:	pop    esi
  4315d3:	or     ecx,0x3e
  4315d6:	inc    edi
  4315d7:	test   BYTE PTR [eax],cl
  4315d9:	mov    ah,0xc2
  4315db:	jp     0x4315d6
  4315dd:	or     ebp,DWORD PTR [ebp+0x6e]
  4315e0:	mov    ebp,DWORD PTR [edi-0x4]
  4315e3:	mov    WORD PTR [ebp-0xa0e62],cs
  4315e9:	cmp    edx,DWORD PTR [edi-0x3b2f6f75]
  4315ef:	cmc    
  4315f0:	push   ecx
  4315f1:	pop    ecx
  4315f2:	retf   0x8d02
  4315f5:	ja     0x4315e6
  4315f7:	loop   0x43166c
  4315f9:	jb     0x4315bf
  4315fb:	cmc    
  4315fc:	test   BYTE PTR [edx],cl
  4315fe:	js     0x43164e
  431600:	mov    eax,DWORD PTR [eax]
  431602:	add    BYTE PTR [eax],al
  431604:	outs   dx,DWORD PTR ds:[esi]
  431605:	out    dx,eax
  431606:	xor    esi,edx
  431608:	cmp    eax,0xba438157
  43160d:	out    dx,al
  43160e:	rcr    BYTE PTR [ebx],cl
  431610:	mov    bh,BYTE PTR [edi+0x41]
  431613:	push   ss
  431614:	repz cld 
  431616:	ds jle 0x4315c9
  431619:	in     eax,0x10
  43161b:	mov    bl,0xe8
  43161d:	jo     0x431675
  43161f:	push   ss
  431620:	stos   BYTE PTR es:[edi],al
  431621:	pushf  
  431622:	inc    ecx
  431623:	add    esp,DWORD PTR [ecx]
  431625:	stos   DWORD PTR es:[edi],eax
  431626:	xchg   edx,eax
  431627:	(bad)
  43162b:	dec    ebp
  43162c:	jo     0x43168b
  43162e:	pop    es
  43162f:	push   eax
  431630:	shl    BYTE PTR [ecx+ebp*4+0x4],1
  431634:	pop    ebx
  431635:	out    dx,al
  431636:	(bad)  
  431638:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43163a:	pop    ebx
  43163b:	test   BYTE PTR [eax],bh
  43163d:	xor    DWORD PTR ds:0x8b35ae87,edx
  431643:	aaa    
  431644:	pop    ebx
  431645:	push   esi
  431646:	cs stc 
  431648:	inc    esp
  431649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43164a:	xor    al,0x87
  43164c:	mov    dh,0x34
  43164e:	es jmp 0x8583e8da
  431654:	mov    dh,0x24
  431656:	sub    edi,ebp
  431658:	loop   0x431637
  43165a:	loopne 0x4316b5
  43165c:	mov    eax,0xf30341f6
  431661:	call   0x37:0xc972eb8b
  431668:	add    BYTE PTR [eax],al
  43166a:	add    bl,dh
  43166c:	sbb    eax,0x399e86d3
  431671:	mov    edi,DWORD PTR [esi]
  431673:	jecxz  0x43168d
  431675:	pop    esp
  431676:	push   ecx
  431677:	or     al,ah
  431679:	fmul   DWORD PTR [eax+ebp*2-0x133d1cca]
  431680:	in     eax,dx
  431681:	ret    
  431682:	(bad)  
  431683:	jno    0x43169d
  431685:	add    al,0x89
  431687:	dec    esi
  431688:	adc    al,0x11
  43168a:	test   bl,bh
  43168c:	and    esi,edi
  43168e:	jmp    FWORD PTR [ebx]
  431690:	pop    es
  431691:	xor    DWORD PTR [eax-0x47cf4102],edi
  431697:	sar    DWORD PTR [esi-0x760747e0],1
  43169d:	shr    bh,0x20
  4316a0:	push   es
  4316a1:	test   DWORD PTR [ebx-0x75],0xf303e730
  4316a8:	sub    DWORD PTR [ebx],0xaa076c0c
  4316ae:	jae    0x431724
  4316b0:	or     cl,ch
  4316b2:	add    ebp,DWORD PTR [edx+ebx*2-0x70]
  4316b6:	pop    esi
  4316b7:	ins    BYTE PTR es:[edi],dx
  4316b8:	sub    al,0x91
  4316ba:	sub    al,BYTE PTR [esi+0x8]
  4316bd:	jmp    0xf0f76ec5
  4316c2:	mov    WORD PTR [ebp+0x4941321f],ss
  4316c8:	cs jg  0x43171f
  4316cb:	repz push es
  4316cd:	jmp    0x43175e
  4316d2:	xor    eax,0x39523a1f
  4316d7:	cs ret 0x2484
  4316db:	or     edx,edi
  4316dd:	dec    ecx
  4316de:	or     al,0xf7
  4316e0:	inc    esi
  4316e1:	sbb    DWORD PTR ds:[edx+0x16d58c38],eax
  4316e8:	not    BYTE PTR [ebp+0x7b]
  4316eb:	mov    ah,0x34
  4316ed:	cld    
  4316ee:	push   ss
  4316ef:	mov    ah,0xeb
  4316f1:	cmp    BYTE PTR [edx+edx*1],ah
  4316f4:	sub    DWORD PTR [ebp+esi*1-0xa871641],eax
  4316fb:	jmp    0xd90e4f29
  431700:	in     eax,dx
  431701:	dec    edx
  431702:	mov    ch,BYTE PTR cs:[eax]
  431705:	pop    es
  431706:	inc    ebx
  431707:	jmp    0x67ff:0x25cdad2d
  43170e:	test   DWORD PTR [esi],0x83006200
  431714:	icebp  
  431715:	pop    ebp
  431716:	test   BYTE PTR gs:[ecx+esi*8+0x79],al
  43171b:	cmc    
  43171c:	xchg   BYTE PTR [edi-0x30153729],dh
  431722:	fadd   QWORD PTR [ebx+0x5bf4d1d7]
  431728:	cld    
  431729:	mov    esi,0xe9009ede
  43172e:	lock cmc 
  431730:	mov    ebp,0x547fea34
  431735:	mov    eax,ds:0xc8000000
  43173a:	pop    es
  43173b:	jg     0x4316e6
  43173d:	arpl   WORD PTR [esi+0x44],di
  431740:	xchg   ecx,eax
  431741:	pusha  
  431742:	xor    BYTE PTR [edi-0x55],ah
  431745:	test   BYTE PTR [esi],0x0
  431748:	je     0x4317b4
  43174a:	std    
  43174b:	stc    
  43174c:	jle    0x43175a
  43174e:	(bad)  [edi+0x60]
  431751:	sub    bl,BYTE PTR ds:0x3104ec88
  431757:	adc    al,0x1d
  431759:	ffree  st(6)
  43175b:	call   FWORD PTR [ecx]
  43175d:	mov    bh,0xac
  43175f:	ret    
  431760:	in     eax,0x77
  431762:	ret    0x10eb
  431765:	xor    eax,0x67cf7a09
  43176a:	ret    0x72e7
  43176d:	add    eax,0x6241732c
  431772:	mov    DWORD PTR [edi],0xdfb26f99
  431778:	jo     0x4317a4
  43177a:	sub    edi,esp
  43177c:	in     eax,dx
  43177d:	sbb    BYTE PTR [ebx],ch
  43177f:	cli    
  431780:	ins    DWORD PTR es:[edi],dx
  431781:	das    
  431782:	mov    bl,0x32
  431784:	push   0x1c
  431786:	add    ch,BYTE PTR [edi+0x0]
  431789:	fcomp  QWORD PTR [esi-0x1]
  43178c:	mov    dl,BYTE PTR [esi+edx*4]
  43178f:	dec    ebx
  431790:	lock repnz adc esp,esp
  431794:	std    
  431795:	int    0xe1
  431797:	pop    ds
  431798:	call   DWORD PTR [edi]
  43179a:	jmp    0x43171d
  43179c:	inc    ebp
  43179d:	add    BYTE PTR [eax],al
  43179f:	add    BYTE PTR [esi-0x4d0f8c69],dh
  4317a5:	mov    esp,0x81adfde3
  4317aa:	ret    0x6385
  4317ad:	jo     0x4317b9
  4317af:	mov    edx,edi
  4317b1:	loop   0x431734
  4317b3:	fidiv  WORD PTR [edx+0x4dfdde77]
  4317b9:	sbb    DWORD PTR [ebx+0xc],0xffee4701
  4317c0:	pop    ss
  4317c1:	test   DWORD PTR [ecx+0x4b817e45],0xe23ec9ec
  4317cb:	cmp    cl,ah
  4317cd:	div    DWORD PTR [ecx]
  4317cf:	dec    eax
  4317d0:	push   esi
  4317d1:	ins    BYTE PTR es:[edi],dx
  4317d2:	fwait
  4317d3:	inc    DWORD PTR [eax+eiz*8-0x13304b72]
  4317da:	push   eax
  4317db:	call   0x3ecb9c
  4317e0:	xchg   edi,eax
  4317e1:	in     al,dx
  4317e2:	js     0x431845
  4317e4:	xchg   ecx,eax
  4317e5:	ds jmp 0xe785:0x8bec5789
  4317ed:	in     al,dx
  4317ee:	cmc    
  4317ef:	inc    DWORD PTR [ebx+0x3f89063e]
  4317f5:	lock xor DWORD PTR [ebp+0x1e],0x89fc7b81
  4317fd:	shl    ecx,0xe8
  431800:	(bad)  
  431801:	(bad)  
  431803:	inc    DWORD PTR [eax]
  431805:	add    BYTE PTR [eax],al
  431807:	repz test al,0xbf
  43180a:	or     edx,DWORD PTR [ebp-0x5f]
  43180d:	mov    ecx,0x8aaf303
  431812:	repnz xchg di,ax
  431815:	add    dl,BYTE PTR [ebx-0x25]
  431818:	xchg   esi,eax
  431819:	(bad)  
  43181b:	mov    esp,0x3ffe0333
  431820:	sub    al,0xa8
  431822:	add    BYTE PTR [ecx],bl
  431824:	mov    DWORD PTR cs:[edx-0x13],eax
  431828:	in     eax,dx
  431829:	sub    eax,DWORD PTR [edx+0x3e]
  43182c:	cmp    eax,0xe156e73c
  431831:	cmp    al,0xfa
  431833:	adc    eax,0x7011c4b7
  431838:	fidivr DWORD PTR [edi]
  43183a:	aaa    
  43183b:	jo     0x4318a1
  43183d:	jmp    0xff7c:0x866626fa
  431844:	adc    bh,BYTE PTR [eax-0x7a]
  431847:	out    0x89,al
  431849:	mov    BYTE PTR [esi],bh
  43184b:	add    edx,DWORD PTR [ebp+0x4033165b]
  431851:	rcr    ebx,0x70
  431854:	pusha  
  431855:	retf   
  431856:	or     bh,BYTE PTR [eax+ebp*1+0x33]
  43185a:	fcomp  st(0)
  43185c:	data16 test al,0xfa
  43185f:	push   es
  431860:	ins    DWORD PTR es:[edi],dx
  431861:	mov    DWORD PTR [ebx+eax*1-0x3e05c334],edx
  431868:	mov    al,ds:0x343
  43186d:	add    bl,al
  43186f:	add    BYTE PTR [ecx+0x65],cl
  431872:	lock aad 0xeb
  431875:	add    eax,0xef871df3
  43187a:	outs   dx,BYTE PTR ds:[esi]
  43187b:	jmp    0x43182f
  43187d:	or     al,0xfc
  43187f:	jno    0x4318af
  431881:	out    0x4,eax
  431883:	push   es
  431884:	push   esi
  431885:	aas    
  431886:	jmp    0xe980e8ab
  43188b:	sub    bl,BYTE PTR [ebp-0x39]
  43188e:	hlt    
  43188f:	jge    0x431861
  431891:	mov    BYTE PTR [edx-0x35d0f8e1],bh
  431897:	sub    ch,BYTE PTR [esi+0x5c]
  43189a:	int3   
  43189b:	jo     0x4318da
  43189d:	aas    
  43189e:	mov    ecx,0xcc33732a
  4318a3:	cmp    dl,BYTE PTR [ebp-0x5a8256c2]
  4318a9:	sub    bl,bh
  4318ab:	aad    0xd1
  4318ad:	mov    dh,0xf4
  4318af:	push   ds
  4318b0:	mov    ch,0x38
  4318b2:	cdq    
  4318b3:	sub    ah,BYTE PTR [ecx]
  4318b5:	fisub  WORD PTR ds:0xf30ba640
  4318bb:	rcr    DWORD PTR [ebp+0x2f],cl
  4318be:	jae    0x4318db
  4318c0:	nop
  4318c1:	add    dh,bl
  4318c3:	push   es
  4318c4:	ss (bad) 
  4318c6:	sar    DWORD PTR [ebp+0x1b],0xc
  4318ca:	ins    BYTE PTR es:[edi],dx
  4318cb:	aaa    
  4318cc:	pop    ebp
  4318cd:	add    al,0x58
  4318cf:	ja     0x43192d
  4318d1:	add    al,BYTE PTR [eax]
  4318d3:	add    BYTE PTR [eax],al
  4318d5:	repz push es
  4318d7:	je     0x4318af
  4318d9:	inc    eax
  4318da:	popf   
  4318db:	jecxz  0x4318b8
  4318dd:	ins    DWORD PTR es:[edi],dx
  4318de:	cmp    DWORD PTR [eax+0x6928acb5],eax
  4318e4:	xchg   DWORD PTR [edx+edi*8+0x6c],esi
  4318e8:	pop    ecx
  4318e9:	repz push es
  4318eb:	jmp    0xfb2e2078
  4318f0:	ret    
  4318f1:	sbb    al,0xa0
  4318f3:	in     al,0x8e
  4318f5:	scas   eax,DWORD PTR es:[edi]
  4318f6:	xor    dl,al
  4318f8:	jmp    0x43187b
  4318fa:	(bad)  
  4318fb:	call   0xff9922d3
  431900:	imul   esi,DWORD PTR [ebp+edi*8+0x123c2984],0xc27dec66
  43190b:	repz xchg ecx,eax
  43190d:	loopne 0x4318c3
  43190f:	aas    
  431910:	jmp    0x6b1145d5
  431915:	sub    al,0xfe
  431917:	test   BYTE PTR [ecx],ch
  431919:	inc    DWORD PTR [ebx+0x6f0e991]
  43191f:	lea    ebp,[esp+eax*8+0x2c]
  431923:	cli    
  431924:	out    dx,al
  431925:	mov    eax,ds:0xe9343321
  43192a:	sub    al,0x83
  43192c:	test   eax,0x6a61b363
  431931:	sbb    dh,dh
  431933:	cli    
  431934:	into   
  431935:	fsubr  DWORD PTR [ebx]
  431937:	jae    0x43192e
  431939:	add    BYTE PTR [eax],al
  43193b:	add    BYTE PTR [eax+0x6a],dh
  43193e:	aaa    
  43193f:	mov    esi,0xe67a2cc8
  431944:	ins    BYTE PTR es:[edi],dx
  431945:	imul   esp,esi,0xbca85106
  43194b:	(bad)  [ecx]
  43194d:	sub    eax,0x10a3f6fa
  431952:	data16 stc 
  431954:	imul   eax,DWORD PTR [edx+0x2d188e3b],0x4f
  43195b:	adc    DWORD PTR [edi-0x49],esp
  43195e:	aas    
  43195f:	jmp    0xadc1526d
  431964:	jmp    0x43199b
  431966:	xlat   BYTE PTR ds:[ebx]
  431967:	shl    DWORD PTR [eax-0xaad40d1],cl
  43196d:	fdivr  DWORD PTR [edi+0x38b5af65]
  431973:	(bad)  
  431974:	lock cmp DWORD PTR [edi+0x61],0x6ee
  43197c:	xchg   DWORD PTR [edi],edi
  43197e:	out    dx,al
  43197f:	mov    DWORD PTR [edi-0x23],edx
  431982:	or     DWORD PTR [eax],0x4cde47cd
  431988:	aas    
  431989:	inc    ebp
  43198a:	cli    
  43198b:	mov    BYTE PTR [edi-0x2a367c20],cl
  431991:	test   al,0x33
  431993:	add    edx,ecx
  431995:	add    al,0xf7
  431997:	mov    cl,0x36
  431999:	add    al,BYTE PTR [eax]
  43199b:	add    BYTE PTR [edi+0x3e],al
  43199e:	fisubr WORD PTR [edx+0x0]
  4319a1:	add    BYTE PTR [eax],al
  4319a3:	fist   DWORD PTR [ebx+0x4a]
  4319a6:	call   0x3f06ca
  4319ab:	repz or al,0x1
  4319ae:	add    BYTE PTR [edx-0x230bbc81],bl
  4319b4:	push   edx
  4319b5:	add    DWORD PTR [edi],0xfffaa9b3
  4319bb:	mov    bh,BYTE PTR [ecx-0x3]
  4319be:	dec    BYTE PTR [edx]
  4319c0:	cmp    bh,0xff
  4319c3:	call   0x5224:0x30bd537f
  4319ca:	mov    edx,DWORD PTR [esp+ebx*8-0x71]
  4319ce:	dec    edi
  4319cf:	xchg   esp,eax
  4319d0:	in     eax,dx
  4319d1:	jle    0x431993
  4319d3:	push   ebp
  4319d4:	test   al,0xf3
  4319d6:	add    BYTE PTR [edx+0x4],cl
  4319d9:	bound  eax,QWORD PTR ds:0x50ee46b7
  4319df:	mov    DWORD PTR [esi-0x4e],0x3016c550
  4319e6:	push   ss
  4319e7:	or     al,BYTE PTR [ebx]
  4319e9:	add    DWORD PTR [edi],0xffffffc9
  4319ec:	ret    
  4319ed:	inc    BYTE PTR [edx+0x334fffde]
  4319f3:	mov    cl,0x7e
  4319f5:	sub    DWORD PTR [ebx+esi*8],0xffffffcf
  4319f9:	xor    eax,0xe29b6afa
  4319fe:	stc    
  4319ff:	or     al,0xc1
  431a01:	es stos DWORD PTR es:[edi],eax
  431a03:	jmp    0x0:0x6535e8
  431a0a:	iret   
  431a0b:	xchg   ebx,eax
  431a0c:	xchg   DWORD PTR [ebx+edi*1-0x35],ecx
  431a10:	jg     0x431a3d
  431a12:	in     eax,dx
  431a13:	loopne 0x431a4a
  431a15:	out    0xd1,eax
  431a17:	add    esi,DWORD PTR [edi]
  431a19:	cli    
  431a1a:	sbb    esi,DWORD PTR [ebx+0x76]
  431a1d:	or     ch,BYTE PTR [edi-0x18]
  431a20:	(bad)  
  431a21:	push   ebx
  431a23:	inc    ebp
  431a24:	xlat   BYTE PTR ds:[ebx]
  431a25:	mov    ch,0xf4
  431a27:	mov    al,ds:0x1dbcff60
  431a2c:	sar    DWORD PTR [esi],1
  431a2e:	data16 mov cl,BYTE PTR [esi-0x7a]
  431a32:	lods   eax,DWORD PTR ds:[esi]
  431a33:	push   ebp
  431a34:	(bad)  
  431a35:	xor    al,0xa4
  431a37:	dec    eax
  431a38:	add    BYTE PTR [ebx+eiz*8+0x43fa384f],0xcb
  431a40:	mov    ebp,0x16cf9b13
  431a45:	sti    
  431a46:	test   BYTE PTR [eax],bl
  431a48:	jo     0x431a96
  431a4a:	cmp    bl,al
  431a4c:	add    DWORD PTR [esi-0x16],edx
  431a4f:	iret   
  431a50:	jmp    0x431a4f
  431a52:	ins    BYTE PTR es:[edi],dx
  431a53:	sbb    eax,0x9570c08b
  431a58:	lahf   
  431a59:	jae    0x431a1f
  431a5b:	inc    esp
  431a5c:	inc    esp
  431a5d:	jae    0x431a1f
  431a5f:	inc    esp
  431a60:	inc    esp
  431a61:	jae    0x431a70
  431a63:	push   ebp
  431a64:	inc    esp
  431a65:	jae    0x431a70
  431a67:	popf   
  431a68:	sub    ebx,DWORD PTR [ecx-0x39]
  431a6b:	push   ecx
  431a6c:	jmp    0x431a2b
  431a6e:	add    BYTE PTR [eax],al
  431a70:	add    BYTE PTR [edi-0x59421305],bh
  431a76:	push   es
  431a77:	ret    
  431a78:	shl    DWORD PTR [ebx+edi*2+0x6740ba3],1
  431a7f:	push   edx
  431a80:	je     0x431af2
  431a82:	add    eax,0xbc1b03e9
  431a87:	sar    DWORD PTR [ecx],1
  431a89:	or     DWORD PTR [ebx],ebx
  431a8b:	scas   al,BYTE PTR es:[edi]
  431a8c:	cmp    DWORD PTR [edi+0x6d],0xffffffe5
  431a90:	scas   al,BYTE PTR es:[edi]
  431a91:	mov    al,0x7b
  431a93:	mov    ds:0xbb07740b,eax
  431a98:	mov    WORD PTR [ebx+ecx*4+0x2ef303e7],ss
  431a9f:	jmp    0x431a53
  431aa1:	fisub  DWORD PTR [esi]
  431aa3:	std    
  431aa4:	bnd jne 0x431a73
  431aa7:	lock rol DWORD PTR [ebp+0x47],1
  431aab:	lock xchg BYTE PTR [edi],ch
  431aae:	pop    edi
  431aaf:	add    dh,cl
  431ab1:	inc    eax
  431ab2:	es jmp 0xcfcd26e4
  431ab8:	lahf   
  431ab9:	and    BYTE PTR [eax],dl
  431abb:	push   cs
  431abc:	dec    esi
  431abd:	daa    
  431abe:	(bad)  
  431abf:	pusha  
  431ac0:	into   
  431ac1:	test   BYTE PTR [edx],dh
  431ac3:	in     eax,0x8b
  431ac5:	das    
  431ac6:	pop    ss
  431ac7:	shr    DWORD PTR [esi-0x5192426c],0xf4
  431ace:	mov    DWORD PTR [edx+0x37908b0b],ebp
  431ad4:	cmp    DWORD PTR [eax],eax
  431ad6:	add    BYTE PTR [eax],al
  431ad8:	imul   eax,esi,0x493bdd42
  431ade:	in     al,0x3
  431ae0:	(bad)  
  431ae1:	xchg   ecx,eax
  431ae2:	test   BYTE PTR [eax+edx*2+0x27671f],al
  431ae9:	or     ch,cl
  431aeb:	add    esp,DWORD PTR [ecx+0x3cade8b0]
  431af1:	xchg   ebx,eax
  431af2:	jmp    FWORD PTR [ebx+edx*2]
  431af5:	push   ss
  431af6:	call   0xfa644284
  431afb:	jb     0x431b52
  431afd:	push   cs
  431afe:	xchg   edi,esp
  431b00:	outs   dx,DWORD PTR ds:[esi]
  431b01:	into   
  431b02:	add    esp,DWORD PTR [eax+0x2c]
  431b05:	jmp    0xb17f:0xe38620b
  431b0c:	add    al,0x21
  431b0e:	mov    BYTE PTR [ebp-0x5e79e9e4],ch
  431b14:	in     al,dx
  431b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b16:	pop    edi
  431b17:	loope  0x431b09
  431b19:	mov    cs,WORD PTR [ebx-0x33]
  431b1c:	hlt    
  431b1d:	mov    WORD PTR [edi-0x14],es
  431b20:	push   0x67fc23d1
  431b25:	ja     0x43d2fbd4
  431b2b:	int    0xe8
  431b2d:	mov    ecx,eax
  431b2f:	jne    0x431b23
  431b31:	lea    eax,[eax]
  431b33:	xor    ecx,0x21
  431b36:	pmaxsw mm4,QWORD PTR [ebx+0x9]
  431b3a:	lea    ebp,ds:0x93000000
  431b40:	adc    eax,ebp
  431b42:	outs   dx,BYTE PTR ds:[esi]
  431b43:	fisub  DWORD PTR [eax]
  431b45:	cli    
  431b46:	aas    
  431b47:	(bad)  
  431b48:	leave  
  431b49:	mov    al,0xcc
  431b4b:	les    edx,FWORD PTR [edx+0x2ef70d73]
  431b51:	sar    dl,cl
  431b53:	lds    esp,FWORD PTR [eax]
  431b55:	cs test eax,0xce48c9d
  431b5b:	mov    cl,0x9
  431b5d:	add    BYTE PTR [eax+edi*2],bh
  431b60:	xor    DWORD PTR [eax+0x3a],edx
  431b63:	sub    eax,0x689186b8
  431b68:	enter  0x8103,0x14
  431b6c:	ins    BYTE PTR es:[edi],dx
  431b6d:	cli    
  431b6e:	add    BYTE PTR [ebp-0x6f],ch
  431b71:	ins    DWORD PTR es:[edi],dx
  431b72:	add    al,0xc9
  431b74:	test   BYTE PTR [bx+si],0xcf
  431b78:	cmp    al,0x6
  431b7a:	push   ebx
  431b7b:	popf   
  431b7c:	imul   ebx
  431b7e:	adc    bl,BYTE PTR [edx+0x9]
  431b81:	add    DWORD PTR [esi],0xffffff97
  431b84:	retf   0x116e
  431b87:	xchg   ecx,eax
  431b88:	je     0x431b88
  431b8a:	cmp    ah,0xa
  431b8d:	je     0x431b92
  431b8f:	lods   eax,DWORD PTR ds:[esi]
  431b90:	inc    edi
  431b91:	test   BYTE PTR [ebx+0x754806d4],0xb8
  431b98:	cmp    ebp,esi
  431b9a:	adc    eax,0x3ff92a
  431b9f:	pop    ebx
  431ba0:	pop    esi
  431ba1:	test   dl,0x0
  431ba4:	add    BYTE PTR [eax],al
  431ba6:	retf   
  431ba7:	or     BYTE PTR [eax],al
  431ba9:	jbe    0x431b7c
  431bab:	xchg   ecx,eax
  431bac:	dec    ebx
  431bad:	or     BYTE PTR [edi-0x2e],dl
  431bb0:	outs   dx,BYTE PTR ds:[esi]
  431bb1:	inc    esp
  431bb2:	inc    ecx
  431bb3:	or     ah,bl
  431bb5:	cmp    al,0x60
  431bb7:	adc    al,ch
  431bb9:	mov    bh,0xfa
  431bbb:	(bad)  
  431bbd:	mov    edi,DWORD PTR [edi+0x10]
  431bc0:	xor    eax,0x17
  431bc3:	repnz outs dx,BYTE PTR ds:[esi]
  431bc5:	and    al,0x40
  431bc7:	or     ecx,DWORD PTR [esi+0x68]
  431bca:	jl     0x431bbb
  431bcc:	cmp    al,0x0
  431bce:	adc    edi,edx
  431bd0:	mov    BYTE PTR [esi-0x6a],bh
  431bd3:	xchg   ecx,eax
  431bd4:	jne    0x431bda
  431bd6:	and    cl,BYTE PTR [ebx]
  431bd8:	add    BYTE PTR [eax],cl
  431bda:	mov    dh,al
  431bdc:	clc    
  431bdd:	stos   BYTE PTR es:[edi],al
  431bde:	popf   
  431bdf:	fnstsw WORD PTR [esi-0x40]
  431be2:	pop    es
  431be3:	stc    
  431be4:	dec    ebp
  431be5:	call   0x3eb3aa
  431bea:	repz mov dl,0x55
  431bed:	jae    0x431bea
  431bef:	test   al,0xfd
  431bf1:	xchg   BYTE PTR [eax],bh
  431bf3:	clc    
  431bf4:	add    al,0xfb
  431bf6:	jecxz  0x431bfc
  431bf8:	rcl    BYTE PTR [esi+0x2a],cl
  431bfb:	jo     0x431bf7
  431bfd:	inc    edi
  431bff:	test   al,0x22
  431c01:	jle    0x431c1a
  431c03:	sbb    cl,ch
  431c05:	cmp    BYTE PTR cs:[ecx+ecx*8-0x7a],bl
  431c0a:	add    BYTE PTR [eax],al
  431c0c:	add    BYTE PTR [edx],ah
  431c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c0f:	xlat   BYTE PTR ds:[ebx]
  431c10:	sti    
  431c11:	enter  0xaaf0,0x14
  431c15:	jp     0x431c8a
  431c17:	sub    ah,bh
  431c19:	cli    
  431c1a:	gs xor edx,edi
  431c1d:	mov    DWORD PTR [esi],ebp
  431c1f:	mov    eax,DWORD PTR [ebx+ebp*8+0x47]
  431c23:	push   es
  431c24:	lea    ebp,[esi]
  431c26:	add    cl,bh
  431c28:	out    0xf7,al
  431c2a:	ja     0x431c2f
  431c2c:	dec    edi
  431c2d:	inc    eax
  431c2e:	test   eax,0x612007bf
  431c33:	int    0xe7
  431c35:	pushf  
  431c36:	xor    bh,dh
  431c38:	jmp    FWORD PTR [eax+0x5]
  431c3b:	div    dh
  431c3d:	aas    
  431c3e:	xchg   ebp,eax
  431c3f:	es int 0x4b
  431c42:	xor    eax,0x66c12e34
  431c47:	mov    ecx,DWORD PTR [esi]
  431c49:	repz sub eax,0x7468f02b
  431c4f:	jle    0x431c0e
  431c51:	imul   esi,edi,0x3
  431c54:	add    BYTE PTR [ecx],ah
  431c56:	dec    ebp
  431c57:	jmp    0x3194f143
  431c5c:	cli    
  431c5d:	push   0xfffffff2
  431c5f:	aaa    
  431c60:	ss xor bl,dh
  431c63:	clc    
  431c64:	aaa    
  431c65:	mov    BYTE PTR [esi],0xf5
  431c68:	scas   eax,DWORD PTR es:[edi]
  431c69:	and    dl,BYTE PTR [eax+0x506db431]
  431c6f:	and    BYTE PTR [edi+0x38000000],0x23
  431c76:	mov    DWORD PTR [esi-0x4e25e13b],ebx
  431c7c:	adc    dl,BYTE PTR [eax+0x47fc1426]
  431c82:	cld    
  431c83:	add    BYTE PTR [esi-0x42],bh
  431c86:	mov    esp,0x740aa234
  431c8b:	ret    0x13b4
  431c8e:	xchg   edx,eax
  431c8f:	or     al,0x20
  431c91:	cmp    eax,0xe7bd4aed
  431c96:	and    bl,dl
  431c98:	or     DWORD PTR [ecx+0xeb286f0],ebx
  431c9e:	push   ecx
  431c9f:	lock test DWORD PTR [ebx],esp
  431ca2:	xor    DWORD PTR [ecx+0x5d142fe1],ecx
  431ca8:	out    0x22,eax
  431caa:	ins    DWORD PTR es:[edi],dx
  431cab:	mov    edi,0xd8bac2d8
  431cb0:	stos   DWORD PTR es:[edi],eax
  431cb1:	inc    ebp
  431cb2:	loopne 0x431cb7
  431cb4:	es mov ?,esp
  431cb7:	adc    al,0x1f
  431cba:	gs sub al,bl
  431cbd:	mov    fs,WORD PTR [edi+ebx*8-0x2ed72a20]
  431cc4:	adc    dl,BYTE PTR [eax-0x29f4205c]
  431cca:	mov    ebp,0xe3b764cd
  431ccf:	add    esi,ebx
  431cd1:	mov    ecx,0xeb308b4a
  431cd6:	add    eax,0x3e
  431cdb:	xor    bl,ch
  431cdd:	repnz add ebp,DWORD PTR [edx-0x3d]
  431ce1:	add    al,0x14
  431ce3:	push   0xffffffc3
  431ce5:	dec    DWORD PTR [ebx+eax*1]
  431ce8:	inc    ebp
  431ce9:	inc    ebx
  431cea:	add    eax,0x248706ee
  431cef:	out    dx,eax
  431cf0:	mov    DWORD PTR [edx],eax
  431cf2:	xchg   ecx,eax
  431cf3:	dec    esi
  431cf4:	sub    eax,0x61cc96f9
  431cf9:	or     ah,BYTE PTR [ebp+0x70]
  431cfc:	and    bh,dl
  431cfe:	jmp    0xe4a9248d
  431d03:	ins    DWORD PTR es:[edi],dx
  431d04:	(bad)  
  431d05:	and    eax,ecx
  431d07:	inc    eax
  431d08:	mov    DWORD PTR [ebp+ebx*8+0x5a],eax
  431d0c:	and    ch,BYTE PTR [eax-0x17]
  431d0f:	dec    edx
  431d10:	push   es
  431d11:	call   0xfa653301
  431d16:	(bad)  
  431d17:	ror    BYTE PTR [edx+0x1084def1],0x1
  431d1e:	jmp    0xdacacc13
  431d23:	lock push es
  431d25:	sti    
  431d26:	(bad)  
  431d27:	sbb    dl,al
  431d29:	out    0x2f,al
  431d2b:	pop    ds
  431d2c:	mov    edi,esi
  431d2e:	push   0x27
  431d30:	pop    es
  431d31:	jge    0x431d23
  431d33:	or     ah,cl
  431d35:	mov    ds:0xc2890714,al
  431d3a:	add    bl,dl
  431d3c:	mov    BYTE PTR [ecx+0x79],bh
  431d3f:	add    BYTE PTR [eax],al
  431d41:	add    BYTE PTR [ebx+0x4c],ch
  431d44:	out    0x4b,eax
  431d46:	sub    ebx,DWORD PTR ds:0x19738ffa
  431d4c:	add    ebx,esi
  431d4e:	jb     0x431d8f
  431d50:	(bad)  
  431d51:	call   0xe585b146
  431d56:	rcr    BYTE PTR [esp+edx*1],0xf5
  431d5a:	in     eax,0xc6
  431d5c:	inc    eax
  431d5e:	mov    WORD PTR [esp+edi*8+0x0],fs
  431d62:	mov    ch,0x19
  431d64:	mov    edx,0x162eb689
  431d69:	inc    eax
  431d6a:	fptan  
  431d6c:	cmc    
  431d6d:	jne    0x431dab
  431d6f:	xlat   BYTE PTR ds:[ebx]
  431d70:	ds and al,0x65
  431d73:	test   DWORD PTR [esi+0x24],esi
  431d76:	inc    ebp
  431d77:	or     BYTE PTR [edi],al
  431d79:	sub    cl,0xd5
  431d7c:	cmc    
  431d7d:	push   DWORD PTR [ebx-0x62]
  431d80:	cli    
  431d81:	dec    DWORD PTR [edx+0x18]
  431d84:	mov    edx,0x70b7283
  431d89:	mov    WORD PTR [ebx-0x6efffff6],?
  431d8f:	inc    esi
  431d90:	push   ds
  431d91:	sbb    al,0xa1
  431d93:	pop    ebx
  431d94:	or     al,BYTE PTR [ebp-0x7d06a144]
  431d9a:	fsub   QWORD PTR [esi]
  431d9c:	mov    edx,DWORD PTR [esi+0xe]
  431d9f:	std    
  431da0:	inc    edx
  431da1:	retf   
  431da2:	mov    ch,0xd5
  431da4:	pusha  
  431da5:	add    DWORD PTR [eax],0x0
  431da8:	add    BYTE PTR [edx+0x22b7070e],ah
  431dae:	mov    ds:0x8fc22476,al
  431db3:	shl    DWORD PTR [esi+ecx*8+0x33],1
  431db7:	sbb    BYTE PTR [ebp-0x43],dh
  431dba:	mov    DWORD PTR [eax],edi
  431dbc:	add    BYTE PTR [esi+0x1a],ch
  431dbf:	pusha  
  431dc0:	cmp    esi,DWORD PTR [esi+0x28]
  431dc3:	sbb    DWORD PTR [edi-0x5f],esi
  431dc6:	mov    eax,ds:0x59e243e
  431dcb:	scas   eax,DWORD PTR es:[edi]
  431dcc:	fistp  WORD PTR [ecx-0x71ffc437]
  431dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431dd3:	cli    
  431dd4:	jbe    0x431dc7
  431dd6:	ins    BYTE PTR es:[edi],dx
  431dd7:	cmp    edi,0x3e
  431dda:	adc    BYTE PTR [edx-0x73],cl
  431ddd:	repz mov ecx,0xea7617e7
  431de3:	out    0x13,eax
  431de5:	mov    eax,DWORD PTR [edx]
  431de7:	pop    edi
  431de8:	cld    
  431de9:	je     0x431d80
  431deb:	stos   BYTE PTR es:[edi],al
  431dec:	and    ecx,DWORD PTR [ebx]
  431dee:	mov    bl,0x3e
  431df0:	je     0x431de0
  431df2:	addr16 ret 0xed23
  431df6:	cs jns 0x431e12
  431df9:	push   0x5b1be7fa
  431dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431dff:	push   0x2f0844fc
  431e04:	inc    ebx
  431e05:	pop    ss
  431e06:	dec    edi
  431e07:	jle    0x431e84
  431e09:	wrmsr  
  431e0b:	(bad)  
  431e0c:	je     0x431e0e
  431e0e:	add    BYTE PTR [eax],al
  431e10:	fimul  WORD PTR [edi]
  431e12:	jmp    0x431e8f
  431e14:	iret   
  431e15:	dec    esp
  431e16:	std    
  431e17:	add    DWORD PTR [eax+ebp*4+0x2d],0xfffffffa
  431e1c:	push   0x780fe26a
  431e21:	imul   ecx,DWORD PTR [esi],0xffffff89
  431e24:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e26:	(bad)  
  431e27:	adc    ebp,DWORD PTR [eax+0x5a]
  431e2a:	loop   0x431e3f
  431e2c:	push   0x16
  431e2e:	outs   dx,BYTE PTR ds:[esi]
  431e2f:	add    BYTE PTR [eax+edi*2-0x37],cl
  431e33:	xchg   dh,cl
  431e35:	xchg   edx,eax
  431e36:	inc    esp
  431e37:	psllq  mm6,mm5
  431e3a:	mov    ebp,0x2e00d6a1
  431e3f:	jae    0x431e58
  431e41:	push   ds
  431e42:	push   ss
  431e43:	arpl   WORD PTR [ebp-0x4cd2d1ee],dx
  431e49:	hlt    
  431e4a:	daa    
  431e4b:	push   esp
  431e4c:	push   0x784ed411
  431e51:	cmc    
  431e52:	jns    0x431e98
  431e54:	test   DWORD PTR [eax+0x75],0xdc0694ff
  431e5b:	leave  
  431e5c:	call   0xa88a:0x88c7701f
  431e63:	mov    bh,0xf0
  431e65:	shr    DWORD PTR [eax+0x50b7ff1d],cl
  431e6b:	hlt    
  431e6c:	jne    0x431e8d
  431e6e:	call   0xb3b4228e
  431e73:	xor    DWORD PTR [eax],eax
  431e75:	add    BYTE PTR [eax],al
  431e77:	outs   dx,DWORD PTR ds:[esi]
  431e78:	inc    esi
  431e79:	xor    al,0x2
  431e7b:	aad    0x5
  431e7d:	mov    ds:0x202e58b7,al
  431e82:	hlt    
  431e83:	dec    ecx
  431e84:	pop    ds
  431e85:	pop    ebp
  431e86:	sub    al,0x4d
  431e88:	add    al,0xd6
  431e8a:	xor    BYTE PTR [edi+0x1f],dh
  431e8d:	sti    
  431e8e:	pop    es
  431e8f:	add    al,0x47
  431e91:	(bad)  
  431e92:	xlat   BYTE PTR ds:[ebx]
  431e93:	jne    0x431e98
  431e95:	pop    esi
  431e96:	test   BYTE PTR [eax+0x5],bh
  431e99:	jmp    0x6ff9dfa1
  431e9e:	(bad)  
  431e9f:	sbb    BYTE PTR [ebx-0x29b5005d],cl
  431ea5:	fild   DWORD PTR [ebx]
  431ea7:	repz mov eax,0xae14415d
  431ead:	mov    al,0x31
  431eaf:	stc    
  431eb0:	mov    DWORD PTR [eax],ebp
  431eb2:	mov    eax,0x7cf51e17
  431eb7:	aaa    
  431eb8:	movsx  eax,WORD PTR [esp+ebx*2]
  431ebc:	dec    eax
  431ebd:	lock int3 
  431ebf:	int3   
  431ec0:	jle    0x431e9a
  431ec2:	xor    cl,cl
  431ec4:	push   ds
  431ec5:	fwait
  431ec6:	das    
  431ec7:	ins    DWORD PTR es:[edi],dx
  431ec8:	mov    ah,0xf8
  431eca:	fst    DWORD PTR [esi-0x15]
  431ecd:	mov    al,ds:0x6d2fa97c
  431ed2:	mov    ebp,0x6cff1eaa
  431ed7:	das    
  431ed8:	xchg   ebx,eax
  431ed9:	or     esp,DWORD PTR [edx+0x0]
  431edc:	add    BYTE PTR [eax],al
  431ede:	jmp    0xf21:0x337200a4
  431ee5:	sbb    dh,BYTE PTR [edi]
  431ee7:	and    eax,0xc03b61fd
  431eec:	pop    edx
  431eed:	xor    bh,BYTE PTR [eax-0x6216f4a5]
  431ef3:	test   ebx,ebp
  431ef5:	sbb    dh,ch
  431ef7:	sbb    eax,0xb8672485
  431efc:	push   edx
  431efd:	(bad)  
  431efe:	enter  0x91,0xe9
  431f02:	lock mov ecx,0x8b38e565
  431f08:	push   esp
  431f09:	xchg   ebp,eax
  431f0a:	call   0x3d26491
  431f0f:	mov    bh,BYTE PTR [edi+0x7c9d3dfd]
  431f15:	jge    0x431f07
  431f17:	xchg   edx,eax
  431f18:	sub    ch,BYTE PTR [eax+0x55]
  431f1b:	and    bh,bh
  431f1d:	in     al,0x90
  431f1f:	sbb    eax,0x92e20f71
  431f24:	sti    
  431f25:	push   ecx
  431f26:	imul   ebp,DWORD PTR [ebx-0x4],0x842d8756
  431f2d:	push   edi
  431f2e:	inc    esp
  431f2f:	test   BYTE PTR [esi+0x4c84c4ac],0xf1
  431f36:	retf   
  431f37:	test   cl,dl
  431f39:	inc    ecx
  431f3a:	retf   0xf9c3
  431f3d:	cs je  0x431f9d
  431f40:	je     0x431f39
  431f42:	add    BYTE PTR [eax],al
  431f44:	add    BYTE PTR [edx+0x1d4c6625],bh
  431f4a:	and    DWORD PTR ds:0xc8bfa329,ebp
  431f50:	sub    esi,esp
  431f52:	push   es
  431f53:	xchg   DWORD PTR [eax],eax
  431f55:	xchg   ebp,ebp
  431f57:	xchg   DWORD PTR [ebx-0x6a],eax
  431f5a:	mov    al,ds:0xfa9bb029
  431f5f:	call   0xab19a9ef
  431f64:	mov    WORD PTR [ebx-0x3972fff7],cs
  431f6a:	add    ch,BYTE PTR cs:[eax-0x16]
  431f6e:	pop    edi
  431f6f:	cli    
  431f70:	push   DWORD PTR [eax]
  431f72:	addps  xmm5,xmm0
  431f75:	popf   
  431f76:	pusha  
  431f77:	clc    
  431f78:	call   esi
  431f7a:	ret    0x9505
  431f7d:	call   0xe6a2:0x7fffec8
  431f84:	cmp    DWORD PTR [esi+0x4a],0xffffff83
  431f88:	rcr    BYTE PTR [ebp-0x7b],0xc6
  431f8c:	add    BYTE PTR [edx+0x9],bl
  431f8f:	test   esi,esi
  431f91:	sbb    eax,0x4a00be85
  431f96:	or     DWORD PTR [ecx+0x3938d738],eax
  431f9c:	push   eax
  431f9d:	es jge 0x6476fdf1
  431fa4:	add    BYTE PTR [edi+0x51d247],bl
  431faa:	add    BYTE PTR [eax],al
  431fac:	mov    ds:0x9dffca06,al
  431fb1:	(bad)  
  431fb2:	mov    edx,0xf67f1575
  431fb7:	jmp    0x432222
  431fbc:	pop    ecx
  431fbd:	lock add eax,0xfa7e550f
  431fc3:	dec    edx
  431fc5:	in     eax,dx
  431fc6:	push   ds
  431fc7:	popf   
  431fc8:	(bad)  
  431fc9:	fnstcw WORD PTR [eax+eax*1]
  431fcc:	inc    ecx
  431fcd:	inc    ebx
  431fce:	add    ah,BYTE PTR ds:0xfba874f3
  431fd4:	adc    BYTE PTR [ecx],cl
  431fd6:	stos   BYTE PTR es:[edi],al
  431fd7:	xchg   BYTE PTR [ebx],dh
  431fd9:	sub    dl,BYTE PTR ds:0xfe447078
  431fdf:	out    0x1d,al
  431fe1:	and    eax,0x9033f71
  431fe6:	call   0x1be7:0xdee5c0a
  431fed:	sub    eax,0x3bf74771
  431ff2:	inc    ebx
  431ff3:	std    
  431ff4:	add    BYTE PTR [ecx+edi*8],ah
  431ff7:	mov    dl,0x33
  431ff9:	cmp    dl,BYTE PTR ds:0x436f7858
  431fff:	out    0xf0,eax
  432001:	mov    al,0x36
  432003:	stc    
  432004:	dec    eax
  432005:	std    
  432006:	jle    0x432011
  432008:	push   esp
  432009:	jns    0x431fc5
  43200b:	icebp  
  43200c:	mov    bl,0x29
  43200e:	add    dh,BYTE PTR [eax+eax*1+0x0]
  432012:	add    ch,ch
  432014:	and    al,0x71
  432016:	aas    
  432017:	in     eax,0x88
  432019:	in     al,dx
  43201a:	jle    0x432047
  43201c:	test   DWORD PTR ds:0xbed4fc38,edx
  432022:	adc    eax,0xb2f96118
  432027:	mov    bl,0x49
  432029:	adc    eax,0xb67ce42c
  43202e:	pop    ss
  43202f:	lock aad 0x7b
  432032:	or     DWORD PTR [eax],ebx
  432034:	or     eax,DWORD PTR [ebx+0x1]
  432037:	fistp  DWORD PTR [ebx-0x42]
  43203a:	dec    DWORD PTR [ecx]
  43203c:	and    edi,ecx
  43203e:	mov    dl,0x33
  432040:	sub    dh,BYTE PTR [ecx]
  432042:	iret   
  432043:	fdivr  DWORD PTR ds:0x3a33b2f9
  432049:	inc    ebx
  43204a:	out    0xef,eax
  43204c:	push   es
  43204d:	push   cs
  43204e:	push   es
  43204f:	clc    
  432050:	push   ebx
  432051:	test   al,0xff
  432053:	mov    bl,0x2e
  432055:	jmp    0x431fd9
  432057:	pushf  
  432058:	add    eax,0x47040560
  43205d:	das    
  43205e:	inc    edx
  43205f:	push   ss
  432060:	sbb    cl,BYTE PTR ds:0x901d0d01
  432066:	cmp    al,0x5d
  432068:	jbe    0x4320d6
  43206a:	xor    esi,edx
  43206c:	push   es
  43206d:	imul   esi,DWORD PTR [edx],0xffffffce
  432070:	push   es
  432071:	jns    0x4320a5
  432073:	mov    BYTE PTR [esi],0x7b
  432076:	xor    al,BYTE PTR [eax]
  432078:	add    BYTE PTR [eax],al
  43207a:	mov    esi,0xb6326d06
  43207f:	push   es
  432080:	outs   dx,BYTE PTR ds:[esi]
  432081:	xor    ch,BYTE PTR [esi]
  432083:	pop    es
  432084:	jg     0x4320b8
  432086:	es pop es
  432088:	sahf   
  432089:	xor    bl,BYTE PTR [esi]
  43208b:	pop    es
  43208c:	cwde   
  43208d:	xor    dl,BYTE PTR [esi]
  43208f:	pop    es
  432090:	mov    edx,0x6e070e32
  432095:	xor    al,BYTE PTR [esi]
  432097:	pop    es
  432098:	mov    BYTE PTR [edx],dh
  43209a:	inc    BYTE PTR [esi]
  43209c:	xor    BYTE PTR [edx],0xf6
  43209f:	push   es
  4320a0:	js     0x4320d4
  4320a2:	out    dx,al
  4320a3:	push   es
  4320a4:	jg     0x4320d8
  4320a6:	out    0x6,al
  4320a8:	cmp    al,0x32
  4320aa:	fiadd  WORD PTR [esi]
  4320ac:	sub    ax,0x98f4
  4320b0:	jmp    0x432032
  4320b2:	or     DWORD PTR [edx+edx*8-0x377c8808],ebx
  4320b9:	sub    al,0xf9
  4320bb:	sbb    ah,BYTE PTR [ebp+0x2c]
  4320be:	cdq    
  4320bf:	xchg   ebx,eax
  4320c0:	in     al,dx
  4320c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320c2:	jne    0x432106
  4320c4:	and    eax,0xffe4b179
  4320c9:	call   0xed3e27be
  4320ce:	lock push es
  4320d0:	add    al,ch
  4320d2:	test   BYTE PTR [eax],dh
  4320d4:	push   ecx
  4320d5:	(bad)  
  4320d7:	pop    esi
  4320d8:	add    ch,dl
  4320da:	lock push es
  4320dc:	(bad)  
  4320dd:	in     eax,0x0
  4320df:	add    BYTE PTR [eax],al
  4320e1:	sar    DWORD PTR [edi+0x26],0x2b
  4320e5:	inc    eax
  4320e6:	adc    cl,BYTE PTR [edx]
  4320e8:	or     eax,DWORD PTR ss:[edi+ebp*4+0x351ab0a7]
  4320f0:	push   ss
  4320f1:	bound  eax,QWORD PTR [ebx]
  4320f3:	lea    ebx,[ecx-0x10]
  4320f6:	and    DWORD PTR [edi+edx*2],eax
  4320f9:	mov    cl,BYTE PTR [ebx+0x508bd647]
  4320ff:	jl     0x4320b0
  432101:	sbb    DWORD PTR [edx+0x59],0xffffffaa
  432105:	xchg   esi,eax
  432106:	add    DWORD PTR [ebx],0x3fcfe264
  43210c:	jmp    0x62977a3f
  432111:	hlt    
  432112:	mov    dh,0x4e
  432114:	ds retf 0x2e11
  432118:	test   eax,0xe60bc358
  43211d:	gs pop edx
  43211f:	inc    edi
  432120:	(bad)  
  432121:	lock push es
  432123:	add    BYTE PTR [ecx-0x44043d57],ch
  432129:	mov    al,0xc
  43212b:	mov    dl,0xa1
  43212d:	or     esi,ebx
  43212f:	int3   
  432130:	cdq    
  432131:	sub    bl,dl
  432133:	(bad)  
  432134:	fmul   QWORD PTR [ecx+0x20]
  432137:	mov    edi,0xe9ac371d
  43213c:	sbb    ch,BYTE PTR [edx-0x8cd7b59]
  432142:	test   DWORD PTR [edi+0x0],ecx
  432148:	fiadd  DWORD PTR ds:0x199fff00
  43214e:	test   bl,al
  432150:	push   ecx
  432151:	fsubr  st(2),st
  432153:	xor    ah,BYTE PTR [ebx]
  432155:	in     al,dx
  432156:	cmc    
  432157:	cvttps2pi mm5,xmm7
  43215a:	add    BYTE PTR fs:[ebp-0x16],bh
  43215e:	adc    ecx,DWORD PTR [eax-0x42]
  432161:	inc    ebp
  432162:	cli    
  432163:	test   BYTE PTR [edx],cl
  432165:	push   edx
  432166:	pop    es
  432167:	paddsb mm0,mm5
  43216a:	mov    edi,0x431ccae0
  43216f:	cld    
  432170:	adc    DWORD PTR [edx+ecx*1-0xa],eax
  432174:	dec    edx
  432175:	idiv   DWORD PTR [edi+0x74]
  432178:	jecxz  0x43214e
  43217a:	cmp    dl,BYTE PTR [ecx]
  43217c:	sbb    bl,BYTE PTR [eax+0x19]
  43217f:	mov    al,0x8b
  432181:	clc    
  432182:	pop    ds
  432183:	subps  xmm0,xmm2
  432186:	add    eax,0xd3c666b6
  43218b:	pop    edx
  43218c:	sbb    al,BYTE PTR [ebx]
  43218e:	pop    es
  43218f:	mov    dh,0x4e
  432191:	(bad)  
  432192:	into   
  432193:	pop    edx
  432194:	or     al,BYTE PTR [ebx]
  432196:	pop    esi
  432197:	sar    DWORD PTR [ebx+0x1a],0x60
  43219b:	or     eax,DWORD PTR [edx+0x71d9ad1d]
  4321a1:	mov    ds:0xda19c02c,al
  4321a6:	xor    cl,BYTE PTR [ebp+0x26]
  4321a9:	imul   ecx,DWORD PTR [eax],0x84
  4321af:	pop    edx
  4321b0:	sbb    eax,0x697c193
  4321b5:	lea    eax,[eax]
  4321b7:	or     eax,DWORD PTR ds:0x9906eb00
  4321bd:	mov    edx,0x8bc37f0f
  4321c2:	add    al,0xf3
  4321c4:	mov    ds:0x2ff30104,al
  4321c9:	and    eax,0xce79ef74
  4321ce:	cli    
  4321cf:	pop    esi
  4321d0:	push   ss
  4321d1:	and    eax,0xbe3a1f14
  4321d6:	(bad)  
  4321d7:	(bad)  
  4321d9:	or     al,al
  4321db:	(bad)  
  4321dc:	(bad)  
  4321dd:	sbb    ch,BYTE PTR [edi]
  4321df:	jae    0x43225c
  4321e1:	repnz inc DWORD PTR [eax+0x46]
  4321e5:	push   ss
  4321e6:	leave  
  4321e7:	mov    ch,0x9
  4321e9:	daa    
  4321ea:	or     ah,BYTE PTR [esi+ebp*8-0x63]
  4321ee:	test   BYTE PTR [ebx+0x2d870992],dh
  4321f4:	xor    BYTE PTR ds:[eax+0x1],al
  4321f8:	scas   al,BYTE PTR es:[edi]
  4321f9:	scas   eax,DWORD PTR es:[edi]
  4321fa:	add    dh,BYTE PTR [edx-0x2d]
  4321fd:	daa    
  4321fe:	inc    DWORD PTR [esi+ebp*1+0x3206fade]
  432205:	into   
  432206:	addr16 icebp 
  432208:	cs (bad) 
  43220a:	call   FWORD PTR [eax+0x6f]
  43220d:	hlt    
  43220e:	mov    edi,0xbd3ce4c4
  432213:	add    BYTE PTR [eax],al
  432215:	add    bl,ch
  432217:	sub    eax,0x576852d0
  43221c:	jns    0x432290
  43221e:	ret    
  43221f:	push   0xee5e17fd
  432224:	add    eax,DWORD PTR [ebp-0x17ff05bb]
  43222a:	outs   dx,BYTE PTR ds:[esi]
  43222b:	int3   
  43222c:	daa    
  43222d:	cli    
  43222e:	js     0x4321c9
  432230:	push   ss
  432231:	mov    al,ds:0xf125992d
  432236:	mov    bh,0x49
  432238:	repnz add BYTE PTR [edi+0x7ce7cd1f],bl
  43223f:	pop    es
  432240:	(bad)
  432244:	and    edx,ecx
  432246:	call   0x3c8b:0x9e03ec44
  43224d:	aam    0x3d
  43224f:	mov    cl,0x99
  432251:	sub    bl,BYTE PTR [edi-0x5]
  432254:	cmc    
  432255:	dec    esi
  432256:	fst    DWORD PTR [ecx+0x17dc7ed0]
  43225c:	mov    bl,0xf
  43225e:	enter  0xf891,0x2a
  432262:	aas    
  432263:	or     ebx,DWORD PTR [edx]
  432265:	mov    al,0xf4
  432267:	mov    bl,0xb5
  432269:	sbb    ebp,DWORD PTR [edx+0x7403e906]
  43226f:	push   ss
  432270:	mov    ebp,0x82982036
  432275:	in     al,dx
  432276:	cmp    edi,esp
  432278:	jl     0x43226d
  43227a:	add    BYTE PTR [eax],al
  43227c:	add    BYTE PTR [esi],cl
  43227e:	neg    DWORD PTR [ebx-0x3f]
  432281:	xor    BYTE PTR [eax+edi*1-0xd2d20d7],dh
  432288:	ret    
  432289:	jl     0x43220f
  43228b:	lods   al,BYTE PTR ds:[esi]
  43228c:	clc    
  43228d:	push   cs
  43228e:	add    eax,0xc07ba231
  432293:	sub    al,0xf9
  432295:	mov    ds:0x75a207bf,al
  43229a:	(bad)  
  43229b:	or     BYTE PTR [edx-0x5e1fdacd],ah
  4322a1:	cmc    
  4322a2:	inc    ebp
  4322a3:	or     bh,BYTE PTR [ebx-0x4e]
  4322a6:	shr    BYTE PTR [ebp-0x3f],0xd8
  4322aa:	lea    ebp,[edx]
  4322ac:	mov    esp,0xf029ddd2
  4322b1:	mov    al,ds:0x76080ec3
  4322b6:	rcl    BYTE PTR [edx*8-0x2400e854],0x4
  4322be:	cmc    
  4322bf:	aas    
  4322c0:	jmp    0xd34e663c
  4322c5:	jecxz  0x432285
  4322c7:	popa   
  4322c8:	jo     0x4322fb
  4322ca:	mov    bl,0xa
  4322cc:	lahf   
  4322cd:	xor    dl,dl
  4322cf:	popa   
  4322d0:	bound  ebp,QWORD PTR [edx+0x102861da]
  4322d6:	push   cs
  4322d7:	(bad)  
  4322d9:	xor    DWORD PTR [edi+ecx*1+0x51c859cf],ebp
  4322e0:	push   0x0
  4322e2:	add    BYTE PTR [eax],al
  4322e4:	xor    ch,dl
  4322e6:	mov    WORD PTR [edi+0x704fb9ac],gs
  4322ec:	test   eax,0xc0fcfabe
  4322f1:	clc    
  4322f2:	aas    
  4322f3:	jmp    0x704e6d6f
  4322f8:	mov    ecx,0x31725aa2
  4322fd:	mov    al,0x56
  4322ff:	nop
  432300:	lods   eax,DWORD PTR ds:[esi]
  432301:	push   esp
  432302:	pop    ss
  432303:	jmp    0x392eb0c5
  432308:	mov    al,ds:0x87e8b301
  43230d:	inc    esp
  43230e:	jle    0x4322e1
  432310:	out    dx,al
  432311:	fwait
  432312:	pop    es
  432313:	pusha  
  432314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432315:	push   ds
  432316:	mov    BYTE PTR [ebx+ebx*1],bl
  432319:	sub    eax,0xf9086a06
  43231e:	je     0x43230f
  432320:	fnstcw WORD PTR [edx+0x128560f7]
  432326:	dec    ebp
  432327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432328:	xchg   ebp,eax
  432329:	cli    
  43232a:	cli    
  43232b:	adc    al,0xe7
  43232d:	(bad)  
  43232e:	cli    
  43232f:	sbb    al,0x3b
  432331:	adc    DWORD PTR [ecx+eiz*8-0x25],esi
  432335:	call   0xe8f2:0x656d00fb
  43233c:	push   ss
  43233d:	or     al,BYTE PTR [eax]
  43233f:	add    BYTE PTR [ebx-0x34],dl
  432342:	or     al,BYTE PTR [eax]
  432344:	out    0x93,eax
  432346:	out    0x81,al
  432348:	add    BYTE PTR [eax],al
  43234a:	add    BYTE PTR [esi+0xaffff1d],bl
  432350:	cmp    esi,DWORD PTR [ecx+0xa0764]
  432356:	push   esi
  432357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432358:	and    BYTE PTR [ebx+0x20],bl
  43235b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43235c:	pop    edi
  43235d:	fs je  0x4323a2
  432360:	inc    ecx
  432361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432362:	std    
  432363:	sbb    eax,0x1d33ea93
  432368:	and    ebp,ebp
  43236a:	je     0x43235c
  43236c:	repnz and eax,ebp
  43236f:	fstp   st(6)
  432371:	sub    eax,eax
  432373:	push   ebx
  432374:	pusha  
  432375:	push   0xffffffc7
  432377:	xchg   esp,eax
  432378:	add    DWORD PTR [ebp-0x789865c0],edx
  43237e:	inc    esi
  43237f:	push   esi
  432380:	xchg   DWORD PTR [bp+0x76],eax
  432384:	xchg   edx,eax
  432385:	clc    
  432386:	test   DWORD PTR [ebp+0xf804f64],ebx
  43238c:	daa    
  43238d:	cli    
  43238e:	jae    0x432356
  432390:	jb     0x432354
  432392:	add    BYTE PTR [edx+0x7323e809],cl
  432398:	fcomip st,st(5)
  43239a:	mov    ebp,DWORD PTR [edx+0x3974f087]
  4323a0:	icebp  
  4323a1:	out    dx,eax
  4323a2:	les    ebx,FWORD PTR [ebp-0x6a3fd613]
  4323a8:	adc    al,0x92
  4323aa:	dec    esi
  4323ab:	sbb    cl,BYTE PTR [ebx]
  4323ad:	pop    esi
  4323ae:	mov    DWORD PTR [eax],eax
  4323b0:	add    BYTE PTR [eax],al
  4323b2:	adc    al,0x53
  4323b4:	loope  0x4323b8
  4323b6:	repz xor BYTE PTR [eax+ecx*4],ch
  4323ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323bb:	out    dx,eax
  4323bc:	xor    cl,0x9f
  4323bf:	xor    al,0x75
  4323c1:	repnz or esp,ecx
  4323c4:	inc    eax
  4323c5:	cli    
  4323c6:	adc    al,0xa3
  4323c8:	inc    ebx
  4323c9:	jae    0x4323ca
  4323cb:	test   al,0xaa
  4323cd:	outs   dx,DWORD PTR ds:[esi]
  4323ce:	sbb    esi,ebp
  4323d0:	inc    eax
  4323d1:	cli    
  4323d2:	cld    
  4323d3:	stos   BYTE PTR es:[edi],al
  4323d4:	inc    ebx
  4323d5:	je     0x4323b9
  4323d7:	test   al,0xfa
  4323d9:	gs repnz test al,0x32
  4323dd:	cli    
  4323de:	add    edx,DWORD PTR [ecx]
  4323e0:	ds pop edx
  4323e2:	cmp    eax,0x13bd3b69
  4323e7:	push   ds
  4323e8:	jne    0x432436
  4323ea:	adc    edx,DWORD PTR [esi+0x1df30053]
  4323f0:	in     eax,0xc7
  4323f2:	inc    edi
  4323f3:	cmp    eax,0x313fc6e5
  4323f8:	ja     0x43238a
  4323fa:	mov    ebx,0xf4fffe1e
  4323ff:	aam    0x2d
  432401:	ss stos DWORD PTR es:[edi],eax
  432403:	xchg   ebx,eax
  432404:	sti    
  432405:	popa   
  432406:	fmul   DWORD PTR ds:0xec780cad
  43240c:	push   ss
  43240d:	or     BYTE PTR [eax+0x64],bh
  432410:	pushf  
  432411:	xor    BYTE PTR ss:[eax+0x86fd],0x0
  432419:	mov    al,0x8
  43241b:	inc    ebp
  43241c:	or     ah,BYTE PTR [ebp+0x5b00985e]
  432422:	test   al,0xd3
  432424:	cli    
  432425:	pop    esp
  432426:	cdq    
  432427:	mov    bh,0x1f
  432429:	imul   esp,ebx,0xffffffdf
  43242c:	out    0xf7,al
  43242e:	imul   edi,DWORD PTR [edi-0xdf90cdd],0x6d
  432435:	mov    bh,0xea
  432437:	add    al,BYTE PTR [ebx]
  432439:	xor    ch,BYTE PTR [ebp-0x5327bc9b]
  43243f:	pop    edi
  432440:	mov    esi,0x433a0400
  432445:	lods   al,BYTE PTR ds:[esi]
  432446:	push   ds
  432447:	(bad)  
  432448:	pop    ebx
  432449:	pop    ss
  43244a:	adc    al,0x5f
  43244c:	mov    esi,0xafa889fc
  432451:	jnp    0x4323db
  432453:	jecxz  0x432450
  432455:	cld    
  432456:	cmp    bl,0xf3
  432459:	loop   0x432421
  43245b:	call   0xf8e41f0f
  432460:	es pop edi
  432462:	push   DWORD PTR [ebx-0x42]
  432465:	xor    BYTE PTR [edi+0x4b555239],dh
  43246b:	in     al,0x82
  43246d:	dec    edi
  43246e:	add    ebp,ecx
  432470:	scas   eax,DWORD PTR es:[edi]
  432471:	cli    
  432472:	mov    al,ds:0x3472704
  432477:	ins    BYTE PTR es:[edi],dx
  432478:	mov    esi,0x5211b720
  43247d:	add    BYTE PTR [eax],al
  43247f:	add    BYTE PTR ds:0x1f26dc4b,ch
  432485:	sti    
  432486:	outs   dx,BYTE PTR ds:[esi]
  432487:	shr    ah,0x13
  43248a:	jae    0x43249f
  43248c:	(bad)  
  43248d:	fdiv   st,st(1)
  43248f:	scas   eax,DWORD PTR es:[edi]
  432490:	rol    BYTE PTR [ecx-0x1101f25f],1
  432496:	rcl    ah,1
  432498:	mov    bh,0x13
  43249a:	fld    DWORD PTR [edi+esi*8-0xf521312]
  4324a1:	xlat   BYTE PTR ds:[ebx]
  4324a2:	test   al,0x19
  4324a4:	lock add edi,DWORD PTR [ebx-0x41]
  4324a8:	add    al,0x7f
  4324aa:	and    DWORD PTR ds:0xc100094c,ecx
  4324b0:	pop    edi
  4324b1:	dec    edx
  4324b2:	cli    
  4324b3:	scas   al,BYTE PTR es:[edi]
  4324b4:	retf   0xf98
  4324b7:	adc    ebx,DWORD PTR [ebx]
  4324b9:	add    BYTE PTR [edx-0x9],0x20
  4324bd:	mov    ch,0xfa
  4324bf:	mov    edx,0x6a1f9ad6
  4324c4:	in     eax,0xdf
  4324c6:	cli    
  4324c7:	cld    
  4324c8:	hlt    
  4324c9:	mov    eax,0x551e9afa
  4324ce:	inc    esp
  4324cf:	int    0xf3
  4324d1:	cdq    
  4324d2:	pop    ds
  4324d3:	push   0xffffffb3
  4324d5:	sti    
  4324d6:	gs call 0xed2ad9fc
  4324dc:	and    DWORD PTR [eax],edx
  4324de:	cli    
  4324df:	out    0x5f,al
  4324e1:	mov    ch,0x13
  4324e3:	add    BYTE PTR es:[eax],al
  4324e6:	add    BYTE PTR [edx+ebx*1-0x7],ah
  4324ea:	inc    esi
  4324eb:	push   ss
  4324ec:	push   es
  4324ed:	add    cl,ch
  4324ef:	lock mov ecx,ebp
  4324f2:	mov    ebp,0xd97289c6
  4324f7:	cmp    eax,0x1627f78b
  4324fc:	or     eax,0xdbf91e7
  432501:	cli    
  432502:	(bad)  
  432503:	out    dx,al
  432504:	push   ds
  432505:	fimul  WORD PTR [edi]
  432507:	into   
  432508:	or     al,0x86
  43250a:	push   es
  43250b:	lods   al,BYTE PTR ds:[esi]
  43250c:	mov    ebx,ebp
  43250e:	push   0xe8fd41fb
  432513:	lock dec DWORD PTR [bx+si-0x4e]
  432518:	adc    ch,BYTE PTR ds:0xfbcaf9ac
  43251e:	jo     0x432515
  432520:	xor    esp,edi
  432522:	(bad)  
  432523:	pop    ss
  432524:	jg     0x4324b2
  432526:	lods   eax,DWORD PTR ds:[esi]
  432527:	or     eax,0xe300fa0d
  43252c:	adc    dl,0xfd
  43252f:	xchg   ebp,eax
  432530:	jmp    0x4324b9
  432532:	popf   
  432533:	outs   dx,BYTE PTR ds:[esi]
  432534:	jmp    0xa117252e
  432539:	retf   0x95fd
  43253c:	jmp    0x4324c5
  43253e:	mov    ebp,0xfff5e986
  432543:	cld    
  432544:	mov    ss,WORD PTR [ebx-0xa148808]
  43254a:	data16 add BYTE PTR [eax],al
  43254d:	add    BYTE PTR [esi-0x6a021968],ah
  432553:	jmp    0xfffb:0xcda78c60
  43255a:	xchg   ebp,eax
  43255b:	jae    0x4324e3
  43255d:	test   esi,ecx
  43255f:	call   0x9a702559
  432564:	mov    ds:0xf5eb47c0,eax
  432569:	inc    si
  43256b:	mov    ecx,0xeb35fdb6
  432570:	xchg   esi,eax
  432571:	(bad)  
  432572:	dec    edi
  432573:	(bad)  
  432574:	sti    
  432575:	inc    DWORD PTR ds:0x5304438f
  43257b:	xchg   ecx,eax
  43257c:	loop   0x43257b
  43257e:	adc    eax,0xce458beb
  432583:	rol    BYTE PTR [ebx-0xa14f8d0],cl
  432589:	add    DWORD PTR [edx+0xf890004],ebx
  43258f:	loop   0x43258c
  432591:	call   DWORD PTR [ebp+0x72fc3a99]
  432597:	push   ebp
  432598:	pop    ss
  432599:	inc    eax
  43259a:	call   0xf5e5:0x97e4838c
  4325a1:	(bad)  
  4325a2:	jg     0x4325a5
  4325a4:	or     al,BYTE PTR [eax-0xd]
  4325a7:	pop    ds
  4325a8:	mov    DWORD PTR [edi+eiz*2-0x14],ecx
  4325ac:	push   eax
  4325ad:	out    0x6,eax
  4325af:	and    dh,bh
  4325b1:	inc    DWORD PTR [eax]
  4325b3:	add    BYTE PTR [eax],al
  4325b5:	sub    bl,BYTE PTR [edx+ecx*4-0x6]
  4325b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4325ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325bb:	das    
  4325bc:	pop    esp
  4325bd:	pop    edx
  4325be:	lock push ds
  4325c0:	cli    
  4325c1:	cmp    al,0x5b
  4325c3:	dec    edi
  4325c4:	retf   
  4325c5:	daa    
  4325c6:	arpl   WORD PTR [edi-0x35],cx
  4325c9:	aas    
  4325ca:	xor    al,0xf
  4325cc:	add    BYTE PTR [ebx-0x24],dl
  4325cf:	add    esi,DWORD PTR [ebp-0x10]
  4325d2:	pop    ebp
  4325d3:	add    eax,DWORD PTR [eax]
  4325d5:	or     bl,BYTE PTR [ebx+0x8]
  4325d8:	add    bl,dh
  4325da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325db:	push   ds
  4325dc:	push   ecx
  4325dd:	js     0x43256c
  4325df:	fcmovb st,st(0)
  4325e1:	xchg   DWORD PTR [eax],edx
  4325e3:	xchg   ecx,esi
  4325e5:	jg     0x4325f3
  4325e7:	mov    cl,0x86
  4325e9:	in     al,dx
  4325ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325eb:	cld    
  4325ec:	test   DWORD PTR [ebx],eax
  4325ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4325ef:	sti    
  4325f0:	dec    ecx
  4325f1:	imul   ebp,DWORD PTR [edi],0xffffffbe
  4325f4:	inc    eax
  4325f5:	outs   dx,BYTE PTR ds:[esi]
  4325f6:	fcomp  DWORD PTR [eax+0x417828f0]
  4325fc:	retf   
  4325fd:	mov    bh,0xf2
  4325ff:	dec    edi
  432600:	retf   
  432601:	scas   eax,DWORD PTR es:[edi]
  432602:	fimul  DWORD PTR [edi-0x35]
  432605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432606:	loop   0x432657
  432608:	retf   
  432609:	mov    edi,0x78541ea5
  43260e:	adc    dh,BYTE PTR [ebx-0x4ae9b97a]
  432614:	xchg   BYTE PTR [ebx+0x711c45],bl
  43261a:	add    BYTE PTR [eax],al
  43261c:	sbb    eax,0x760bd0a5
  432621:	sub    cl,BYTE PTR [edi+ecx*2]
  432624:	push   0x7
  432626:	sub    al,0x20
  432628:	and    bl,BYTE PTR [eiz*8+0x5e06bb90]
  43262f:	cwde   
  432630:	push   0x61deae7c
  432635:	cwde   
  432636:	or     dl,BYTE PTR [ecx+0x3e8eb90]
  43263c:	repz push es
  43263e:	pop    esi
  43263f:	shl    al,1
  432641:	mov    bl,0x12
  432643:	mov    ch,0x39
  432645:	mov    edx,0x33086f8
  43264a:	fs inc ebx
  43264c:	stos   BYTE PTR es:[edi],al
  43264d:	add    al,0x5e
  43264f:	inc    ecx
  432650:	and    eax,0x21dedc9b
  432655:	cdq    
  432656:	mov    DWORD PTR [esi-0x4791fd59],ecx
  43265c:	hlt    
  43265d:	jnp    0x4326d6
  43265f:	mov    ?,WORD PTR [ecx]
  432661:	int3   
  432662:	mov    DWORD PTR [edi-0x68d07627],edx
  432668:	fnstsw WORD PTR [ebx+0x2d]
  43266b:	out    dx,al
  43266c:	mov    ecx,0x6efb5e76
  432671:	cli    
  432672:	out    0x8b,eax
  432674:	clc    
  432675:	add    eax,0xc6e48bb3
  43267a:	arpl   WORD PTR [ecx],bx
  43267c:	inc    edi
  43267d:	pop    ss
  43267e:	pop    ebp
  43267f:	rol    BYTE PTR [eax],1
  432681:	add    BYTE PTR [eax],al
  432683:	clc    
  432684:	jnp    0x432619
  432686:	or     edx,DWORD PTR [esi+ecx*1]
  432689:	fstp   QWORD PTR ds:0xbeba6b41
  43268f:	dec    ecx
  432690:	jl     0x43269d
  432692:	shl    BYTE PTR [ebp+0x42],0x1c
  432696:	dec    edi
  432697:	test   al,0x42
  432699:	xor    al,0x4f
  43269b:	test   al,0x42
  43269d:	sub    al,0x4f
  43269f:	mov    eax,0xd161ff42
  4326a4:	mov    edx,0x1b70fd86
  4326a9:	jmp    edi
  4326ab:	lock push es
  4326ad:	dec    edi
  4326ae:	jb     0x43265c
  4326b0:	pop    es
  4326b1:	push   ebx
  4326b2:	bound  eax,QWORD PTR [ebx+edi*8-0x187b4d7c]
  4326b9:	test   dh,al
  4326bb:	jnp    0x4326a0
  4326bd:	cli    
  4326be:	aam    0x5c
  4326c0:	cmc    
  4326c1:	aas    
  4326c2:	jmp    0xe9ab365d
  4326c7:	mov    cs,WORD PTR [edi]
  4326c9:	push   0xc10f86e9
  4326ce:	jmp    0xea3d35fd
  4326d3:	fsub   DWORD PTR [ecx+edi*8]
  4326d6:	mov    ss,edx
  4326d8:	nop
  4326d9:	ret    
  4326da:	fnsave [ebx]
  4326dc:	mov    eax,0x504c8486
  4326e1:	push   ecx
  4326e2:	bound  ebx,QWORD PTR [edi+edi*8-0x7c]
  4326e6:	ja     0x4326e8
  4326e8:	add    BYTE PTR [eax],al
  4326ea:	pop    ecx
  4326eb:	add    eax,0xefce47f
  4326f0:	jae    0x4326f6
  4326f2:	adc    dh,bl
  4326f4:	sub    edi,edi
  4326f6:	mov    al,0xe
  4326f8:	push   0x680e8ee9
  4326fd:	jmp    0xe9ab3588
  432702:	cmp    ecx,DWORD PTR [esi]
  432704:	adc    al,0xe9
  432706:	lock push es
  432708:	call   0xfa543881
  43270d:	push   0x2b
  43270f:	cli    
  432710:	pop    ecx
  432711:	mov    esi,0xb4e4856f
  432716:	das    
  432717:	(bad)  
  432718:	cli    
  432719:	jmp    0x4326a1
  43271b:	sbb    cl,BYTE PTR [edx+0x0]
  43271e:	popf   
  43271f:	xchg   edi,eax
  432720:	clc    
  432721:	add    esi,ecx
  432723:	mov    edi,0xa9af443
  432728:	add    BYTE PTR [eax],al
  43272a:	adc    ecx,DWORD PTR [esi-0xa]
  43272d:	mov    DWORD PTR [edi],ecx
  43272f:	jmp    0x4326bc
  432731:	fwait
  432732:	pop    edx
  432733:	or     al,BYTE PTR [eax]
  432735:	add    cl,dl
  432737:	mov    esi,0xd4f9c321
  43273c:	in     eax,dx
  43273d:	test   BYTE PTR [edx],0x84
  432740:	repnz or BYTE PTR ds:0x22458112,al
  432747:	jnp    0x432794
  432749:	adc    al,0xda
  43274b:	pop    ecx
  43274c:	push   eax
  43274d:	push   ebx
  43274e:	add    BYTE PTR [eax],al
  432750:	add    cl,al
  432752:	mov    esi,0xe78cc1e2
  432757:	cmc    
  432758:	adc    DWORD PTR [esi+0x1a],0xffffffe7
  43275c:	sahf   
  43275d:	or     ecx,DWORD PTR [edx]
  43275f:	add    BYTE PTR [ebx-0x1730f509],cl
  432765:	sbb    eax,0x5903c097
  43276a:	jnp    0x432756
  43276c:	push   esi
  43276d:	fst    DWORD PTR [ebp+esi*8+0x55]
  432771:	test   BYTE PTR [edx-0x35a8f342],0x78
  432778:	or     al,0x51
  43277a:	push   ebp
  43277b:	or     cl,BYTE PTR [ebx-0x17468504]
  432781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432782:	out    0xf5,eax
  432784:	inc    DWORD PTR [ecx+0x45]
  432787:	adc    dl,BYTE PTR [edi+0x69]
  43278a:	pop    ecx
  43278b:	cmc    
  43278c:	push   ebp
  43278d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43278e:	cmp    BYTE PTR [esi+0x78ca470c],0xc
  432795:	and    DWORD PTR [ebp+0xa],edx
  432798:	mov    esi,ebx
  43279a:	in     al,0x8b
  43279c:	mov    esi,0xfa20678b
  4327a1:	xchg   esp,eax
  4327a2:	cwde   
  4327a3:	leave  
  4327a4:	pop    ss
  4327a5:	and    al,0x76
  4327a7:	lods   eax,DWORD PTR ds:[esi]
  4327a8:	cli    
  4327a9:	push   ds
  4327aa:	sub    al,0x83
  4327ac:	ret    
  4327ad:	out    dx,eax
  4327ae:	mov    ds:0x98e7793e,al
  4327b3:	mov    eax,0xf
  4327b8:	js     0x432816
  4327ba:	xchg   cl,al
  4327bc:	pop    ebx
  4327bd:	add    ebx,DWORD PTR [edx]
  4327bf:	cli    
  4327c0:	pop    esp
  4327c1:	clc    
  4327c2:	push   cs
  4327c3:	jno    0x4327bd
  4327c5:	and    BYTE PTR [edi-0x7191f7f1],bh
  4327cb:	adc    edi,DWORD PTR [eax-0x16]
  4327ce:	sti    
  4327cf:	push   ecx
  4327d0:	mov    al,ds:0xdf541af1
  4327d5:	mov    al,ds:0x5f760b47
  4327da:	cdq    
  4327db:	call   0x1cd598c8
  4327e0:	lock (bad) 
  4327e3:	ss mov dh,0x87
  4327e6:	xchg   edx,eax
  4327e7:	adc    al,0x78
  4327e9:	loop   0x4327e6
  4327eb:	push   ecx
  4327ec:	mov    al,ds:0xe7541aef
  4327f1:	mov    al,ds:0xdf6e0b47
  4327f6:	cdq    
  4327f7:	out    0xd8,eax
  4327f9:	and    DWORD PTR [edi-0x5ef70cb8],ecx
  4327ff:	nop/reserved BYTE PTR [ecx+edx*4-0x9ac97f1]
  432807:	push   ecx
  432808:	and    al,0x6f
  43280a:	sbb    DWORD PTR [edi+ebx*8-0x60],edx
  43280e:	inc    edi
  43280f:	or     esi,DWORD PTR [esi-0x22]
  432812:	call   0xeb97:0x4206f8e8
  432819:	jg     0x4327ce
  43281b:	repz add BYTE PTR [eax],al
  43281e:	add    BYTE PTR [ebp+0x44],ch
  432821:	pushf  
  432822:	loop   0x432899
  432824:	inc    eax
  432825:	mov    ebp,0x9b7e2e4e
  43282a:	adc    edi,ecx
  43282c:	push   esp
  43282d:	aam    0x4
  43282f:	jnp    0x4327e3
  432831:	fisttp QWORD PTR [esi]
  432833:	inc    ecx
  432834:	mul    DWORD PTR [eax-0x8]
  432837:	repz sti 
  432839:	call   0xbf8a:0xf87ef5b8
  432840:	push   ss
  432841:	sub    BYTE PTR [ecx-0x25386dd2],cl
  432847:	popa   
  432848:	cld    
  432849:	imul   edx,DWORD PTR [esi-0x7546f3b7],0x55
  432850:	push   ds
  432851:	cmp    BYTE PTR [edi],bl
  432853:	cmp    DWORD PTR [eiz*8-0x66301b60],ecx
  43285a:	xchg   edx,eax
  43285b:	xlat   BYTE PTR ds:[ebx]
  43285c:	pop    ds
  43285d:	in     eax,0x90
  43285f:	mov    ebx,0xeca0be06
  432864:	iret   
  432865:	mov    dl,BYTE PTR [ebp-0x3d48005]
  43286b:	mov    ds:0x9f1f18b3,al
  432870:	repnz gs inc edi
  432873:	call   0xbdad0f9
  432878:	rcr    BYTE PTR [ecx-0x6f],1
  43287b:	or     DWORD PTR [eax],esp
  43287d:	in     eax,0x90
  43287f:	cmp    eax,DWORD PTR [edi]
  432881:	(bad)  
  432882:	mov    al,ds:0xec000000
  432887:	jg     0x43282c
  432889:	pop    ds
  43288a:	sbb    eax,0x75f2ba0f
  43288f:	mov    ecx,0xb621b5e0
  432894:	push   DWORD PTR ds:0x257ef77b
  43289a:	in     al,0x81
  43289c:	mov    edi,0x4484d69d
  4328a1:	sbb    eax,0x62f7b279
  4328a6:	sub    al,BYTE PTR [ebp-0x1ad63d0e]
  4328ac:	out    dx,eax
  4328ad:	ret    0x8fe7
  4328b0:	es ret 0x9d2d
  4328b4:	adc    al,0x62
  4328b6:	mov    ds:0x63658817,eax
  4328bb:	xchg   ebx,eax
  4328bc:	cli    
  4328bd:	out    0xe,al
  4328bf:	jg     0x43287c
  4328c1:	ins    BYTE PTR es:[edi],dx
  4328c2:	out    dx,eax
  4328c3:	psubd  mm2,mm6
  4328c6:	xor    BYTE PTR [esi+0x4c],bh
  4328c9:	aad    0x3a
  4328cb:	xor    DWORD PTR [esi+0x0],ebp
  4328ce:	jp     0x43285a
  4328d0:	div    DWORD PTR [edx+0x5c]
  4328d3:	sti    
  4328d4:	mov    BYTE PTR [ebx+edx*1],dl
  4328d7:	pop    ds
  4328d8:	push   0x3610d6af
  4328dd:	ret    
  4328de:	xor    dl,0x86
  4328e1:	sub    al,0xb
  4328e3:	jg     0x432880
  4328e5:	fs jg  0x4328f8
  4328e8:	cli    
  4328e9:	mov    es,WORD PTR [eax]
  4328eb:	add    BYTE PTR [eax],al
  4328ed:	push   0xefe98c77
  4328f2:	adc    dl,bh
  4328f4:	sub    BYTE PTR [eax-0x46],bh
  4328f7:	repz mov dl,0xb7
  4328fa:	pushf  
  4328fb:	or     DWORD PTR [edx+0x34],esp
  4328fe:	jbe    0x7cc309e0
  432904:	popa   
  432905:	sbb    al,dl
  432907:	stc    
  432908:	push   esi
  432909:	inc    BYTE PTR [eax-0x3c94068c]
  43290f:	repz add BYTE PTR [ecx-0x25],bl
  432913:	dec    DWORD PTR [eax-0x77fa0d71]
  432919:	int    0xec
  43291b:	cmc    
  43291c:	call   DWORD PTR [ecx-0x71]
  43291f:	cmp    DWORD PTR [eax-0x2b],0xffffffeb
  432923:	cmc    
  432924:	mov    ecx,DWORD PTR [esi]
  432926:	cmp    dl,0xfe
  432929:	add    eax,0xe65587ec
  43292e:	jge    0x432973
  432930:	clc    
  432931:	add    ebp,ecx
  432933:	cmp    eax,0xfff5fbe3
  432939:	test   DWORD PTR [edx+0x5459ccc6],edi
  43293f:	dec    ebp
  432940:	mov    ebp,DWORD PTR [esi]
  432942:	pop    ds
  432943:	or     cl,BYTE PTR [ebx-0x74f1e0f2]
  432949:	push   ss
  43294a:	pop    ds
  43294b:	adc    dl,BYTE PTR [ebp+0x18]
  43294e:	push   ebx
  43294f:	dec    edi
  432950:	push   ecx
  432951:	add    BYTE PTR [eax],al
  432953:	add    BYTE PTR [edx+0x5a42f61e],ah
  432959:	(bad)  
  43295a:	cmc    
  43295b:	xor    eax,0x64a
  432960:	imul   eax,DWORD PTR [esi],0xffffffa0
  432963:	inc    ebx
  432964:	sbb    dh,BYTE PTR [edi]
  432966:	mov    esi,0x21ece89
  43296b:	fs xchg ebx,eax
  43296d:	and    dl,bh
  43296f:	dec    DWORD PTR [edx]
  432971:	push   es
  432972:	add    DWORD PTR [esi+edi*1+0x36],0xffffff81
  432977:	pop    eax
  432978:	add    bh,BYTE PTR [edi+0x46]
  43297b:	and    al,0x36
  43297d:	aaa    
  43297e:	pop    ss
  43297f:	mov    edi,edx
  432981:	stc    
  432982:	jp     0x432982
  432984:	push   esp
  432985:	jb     0x4329b8
  432987:	mov    ebx,DWORD PTR [esi-0xc7cd1df]
  43298d:	mov    ch,0x1c
  43298f:	jae    0x432980
  432991:	hlt    
  432992:	or     eax,0xd2931d71
  432997:	jno    0x432a0f
  432999:	imul   ecx,DWORD PTR [edi+0xf],0x68
  43299d:	and    al,0x85
  43299f:	inc    edi
  4329a0:	out    0x9c,eax
  4329a2:	xchg   edi,eax
  4329a3:	add    esi,ebx
  4329a5:	push   0x4a
  4329a7:	addr16 repnz push ds
  4329aa:	(bad)  
  4329ab:	jmp    FWORD PTR [eax+0x5c]
  4329ae:	push   es
  4329af:	call   0x414d9d
  4329b4:	dec    edx
  4329b5:	push   ds
  4329b6:	(bad)  
  4329b7:	inc    DWORD PTR [eax]
  4329b9:	add    BYTE PTR [eax],al
  4329bb:	repz xchg esp,eax
  4329bd:	mov    edi,0x2338b07
  4329c2:	add    bl,dh
  4329c4:	add    al,0x4f
  4329c6:	arpl   WORD PTR [edx+ebx*1-0x2],di
  4329ca:	push   ebx
  4329cc:	pop    ds
  4329cd:	add    ebx,0x56b5d0fb
  4329d3:	xor    BYTE PTR [edi+eax*8-0x3bb708dd],ah
  4329da:	add    ebp,ebp
  4329dc:	pop    ds
  4329dd:	(bad)  
  4329de:	(bad)  
  4329df:	jnp    0x4329ff
  4329e1:	(bad)  
  4329e2:	push   ebx
  4329e4:	rcl    edx,cl
  4329e6:	xchg   BYTE PTR [edi-0x4478f9c5],dh
  4329ec:	pop    ss
  4329ed:	rol    edi,1
  4329ef:	or     esi,DWORD PTR [ebx+0x1a]
  4329f2:	cli    
  4329f3:	adc    al,0xd2
  4329f5:	mov    ah,BYTE PTR [edi-0x15]
  4329f8:	adc    BYTE PTR [ebx-0x11f0fbf5],0xfa
  4329ff:	sub    DWORD PTR [ebx],0x26
  432a02:	cmp    esp,esi
  432a04:	xchg   edi,eax
  432a05:	push   ss
  432a06:	jle    0x4329bf
  432a08:	pop    es
  432a09:	cmc    
  432a0a:	mov    eax,0xc04c36d
  432a0f:	je     0x4329c4
  432a11:	or     al,0xf4
  432a13:	imul   eax,DWORD PTR ds:0x6f30791,0xffffffe9
  432a1a:	inc    esi
  432a1b:	pop    ds
  432a1c:	jl     0x4329ca
  432a1e:	fild   WORD PTR [eax]
  432a20:	add    BYTE PTR [eax],al
  432a22:	hlt    
  432a23:	jnp    0x432a24
  432a25:	sbb    al,BYTE PTR [ebx-0x15]
  432a28:	sub    DWORD PTR [ebp-0x1468f7fc],edx
  432a2e:	mov    edx,?
  432a30:	sbb    DWORD PTR [ebx],ebx
  432a32:	cdq    
  432a33:	test   BYTE PTR [eax+ecx*1],ch
  432a36:	ss inc ebp
  432a38:	in     al,0x3
  432a3a:	es mov cl,0x99
  432a3d:	mov    dh,0x6d
  432a3f:	sbb    eax,0x2bcd43b5
  432a44:	mov    ch,0x35
  432a46:	lds    edx,FWORD PTR [eax]
  432a48:	mov    ch,0x1a
  432a4a:	imul   esi,DWORD PTR [esi],0xa9cabb3d
  432a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a51:	mov    ss,WORD PTR [esi+0x7c]
  432a54:	xlat   BYTE PTR ds:[ebx]
  432a55:	mov    ?,WORD PTR [ebx]
  432a57:	popf   
  432a58:	out    0x2b,eax
  432a5a:	rol    DWORD PTR [ebx],1
  432a5c:	jmp    0xf58a3e64
  432a61:	ds or  eax,0x535f53e
  432a67:	or     BYTE PTR [ecx-0x6b8438df],ch
  432a6d:	mov    dh,0xc2
  432a6f:	scas   eax,DWORD PTR es:[edi]
  432a70:	push   cs
  432a71:	add    al,0x95
  432a73:	push   es
  432a74:	add    DWORD PTR [edi+0x18],ecx
  432a77:	(bad)
  432a7a:	adc    al,0xc2
  432a7c:	push   ss
  432a7d:	add    al,0xf3
  432a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a80:	sbb    bh,BYTE PTR [edi+0x1bff439f]
  432a86:	add    BYTE PTR [eax],al
  432a88:	add    BYTE PTR [esp+ebx*4+0x23],ah
  432a8c:	loope  0x432a34
  432a8e:	mov    dh,0xfa
  432a90:	ffree  st(4)
  432a92:	repz out 0x95,eax
  432a95:	cli    
  432a96:	or     al,0xfa
  432a98:	push   0x14
  432a9a:	cld    
  432a9b:	pop    esp
  432a9c:	sub    edi,eax
  432a9e:	push   es
  432a9f:	int3   
  432aa0:	xor    eax,0x2dcb3c2c
  432aa5:	xor    al,0x3c
  432aa7:	retf   
  432aa8:	(bad)  
  432aa9:	fnstenv [edx+0x1b753d86]
  432aaf:	pop    ss
  432ab0:	jb     0x432a65
  432ab2:	dec    DWORD PTR [esi+0x72]
  432ab5:	pop    ebx
  432ab6:	repz push ecx
  432ab8:	bound  edi,QWORD PTR [ebp-0x1]
  432abb:	fld    DWORD PTR cs:[ecx-0x80]
  432abf:	add    DWORD PTR [edi],ebp
  432ac1:	mov    bl,0xc
  432ac3:	jmp    DWORD PTR ds:0xe90013b3
  432ac9:	lock push es
  432acb:	lea    esi,[edx+0x60]
  432ace:	mov    bh,dh
  432ad0:	out    0x83,eax
  432ad2:	add    BYTE PTR [edi-0x36f80cd1],al
  432ad8:	sbb    ch,bl
  432ada:	into   
  432adb:	cli    
  432adc:	xor    al,0xfb
  432ade:	jg     0x432b29
  432ae0:	cmc    
  432ae1:	ja     0x432a98
  432ae3:	pop    es
  432ae4:	jmp    0xb2db:0xf30bd8ab
  432aeb:	or     esp,DWORD PTR [edx+0x0]
  432aee:	add    BYTE PTR [eax],al
  432af0:	ins    BYTE PTR es:[edi],dx
  432af1:	div    ecx
  432af3:	sub    ebx,esi
  432af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432af6:	or     ah,BYTE PTR [ebp+eiz*1+0x6]
  432afa:	add    cl,ch
  432afc:	ins    DWORD PTR es:[edi],dx
  432afd:	mov    edx,0xb3e60e7
  432b02:	xchg   BYTE PTR [eax],al
  432b04:	sar    esi,1
  432b06:	mov    BYTE PTR [ebp+0x62],al
  432b09:	jns    0x432b4e
  432b0b:	sbb    BYTE PTR [ebx+0x6183e647],dl
  432b11:	and    DWORD PTR [ebp+0x60],ebp
  432b14:	inc    ecx
  432b15:	or     DWORD PTR [ebx+0xaca9b],ecx
  432b1b:	add    BYTE PTR [edi-0x9],cl
  432b1e:	push   edx
  432b1f:	mov    ebp,DWORD PTR [esi+0x78]
  432b22:	or     eax,0x978968d
  432b27:	mov    DWORD PTR [edi+0x5300821a],edx
  432b2d:	(bad)  
  432b2e:	icebp  
  432b2f:	test   ebx,edx
  432b31:	xchg   esi,eax
  432b32:	or     eax,0x132e58b
  432b37:	(bad)  
  432b38:	std    
  432b39:	pop    ds
  432b3a:	mov    edi,0x8309fd45
  432b3f:	sar    BYTE PTR [esi-0x22],0x76
  432b43:	inc    ebx
  432b44:	add    esi,eax
  432b46:	icebp  
  432b47:	mov    edx,edx
  432b49:	mov    esi,ecx
  432b4b:	(bad)  
  432b4c:	test   DWORD PTR [edi+0x79],0x740a5d7d
  432b53:	and    BYTE PTR [eax],al
  432b55:	add    BYTE PTR [eax],al
  432b57:	loope  0x432b60
  432b59:	jns    0x432b53
  432b5b:	cmp    al,0x96
  432b5d:	add    cl,BYTE PTR [ebx-0x3106f8f4]
  432b63:	jmp    0xe8426376
  432b68:	push   cs
  432b69:	or     DWORD PTR [esi+0x4e],0x49084f93
  432b70:	dec    edi
  432b71:	sub    cl,BYTE PTR [eax+eiz*1]
  432b74:	pop    ds
  432b75:	push   esp
  432b76:	or     al,0xa1
  432b78:	(bad)  
  432b79:	in     eax,dx
  432b7a:	pop    edi
  432b7b:	fadd   st(3),st
  432b7d:	and    ch,0xf3
  432b80:	cmp    al,BYTE PTR [ebx-0x3e]
  432b83:	mov    dh,0x9b
  432b85:	std    
  432b86:	push   ebx
  432b88:	out    dx,eax
  432b89:	sub    al,0xcc
  432b8b:	push   0xbb80f42b
  432b90:	adc    BYTE PTR [ebx-0x19052c94],dl
  432b96:	jle    0x432bbe
  432b98:	mov    ah,0x3f
  432b9a:	ds repz out dx,eax
  432b9d:	mov    DWORD PTR [edi],ebx
  432b9f:	dec    ebx
  432ba0:	mov    ah,0x3f
  432ba2:	ds repz inc edi
  432ba5:	cmp    al,0xfd
  432ba7:	(bad)  
  432ba8:	out    dx,eax
  432ba9:	test   bl,al
  432bab:	imul   DWORD PTR [edx+0x3d]
  432bae:	jae    0x432b94
  432bb0:	push   0xef190fc2
  432bb5:	scas   al,BYTE PTR es:[edi]
  432bb6:	cli    
  432bb7:	(bad)  
  432bb8:	mov    bl,0x3f
  432bba:	add    BYTE PTR ds:[eax],al
  432bbd:	add    bl,dh
  432bbf:	jo     0x432bfa
  432bc1:	pop    es
  432bc2:	push   0x5ce7e9aa
  432bc7:	adc    eax,0xb278fa18
  432bcc:	jmp    0x8a374709
  432bd1:	adc    BYTE PTR [eax-0x5e],ch
  432bd4:	add    eax,0x3468c44e
  432bd9:	xchg   BYTE PTR [ebx],bh
  432bdb:	xlat   BYTE PTR ds:[ebx]
  432bdc:	dec    ebp
  432bdd:	stc    
  432bde:	pop    esp
  432bdf:	in     al,0x85
  432be1:	inc    esp
  432be2:	jmp    FWORD PTR [eax-0x39]
  432be5:	idiv   DWORD PTR [edx+0x27]
  432be8:	or     BYTE PTR [edi-0x6e38f13],al
  432bee:	xbegin 0xf132757a
  432bf4:	inc    edx
  432bf5:	cs push edi
  432bf8:	adc    dl,BYTE PTR [edi+esi*8+0x6]
  432bfc:	outs   dx,BYTE PTR ds:[esi]
  432bfd:	(bad)  
  432bfe:	call   0x144f5d94
  432c03:	aam    0xd6
  432c05:	pop    es
  432c06:	lds    eax,FWORD PTR ds:0x4b6c0835
  432c0c:	ja     0x432b99
  432c0e:	mov    ah,0xe
  432c10:	outs   dx,BYTE PTR ds:[esi]
  432c11:	das    
  432c12:	or     al,0x50
  432c14:	jno    0x432c2d
  432c16:	jmp    0xe95a95dc
  432c1b:	add    al,0x21
  432c1d:	mov    bl,0xe8
  432c1f:	adc    esp,DWORD PTR [ebx-0x51]
  432c22:	add    BYTE PTR [eax],al
  432c24:	add    cl,bl
  432c26:	add    al,0x53
  432c28:	mov    edi,DWORD PTR [edi]
  432c2a:	(bad)  
  432c2c:	scas   al,BYTE PTR es:[edi]
  432c2d:	ins    DWORD PTR es:[edi],dx
  432c2e:	ror    BYTE PTR [edi-0x5d],1
  432c31:	mov    edx,0x122d3b04
  432c36:	add    al,0x33
  432c38:	pop    ss
  432c39:	test   eax,0xe4edf72a
  432c3e:	push   es
  432c3f:	and    ah,cl
  432c41:	loopne 0x432c5f
  432c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c44:	add    ebx,DWORD PTR [eax-0x33124cd6]
  432c4a:	push   es
  432c4b:	pop    esi
  432c4c:	pop    ss
  432c4d:	pop    ds
  432c4e:	nop
  432c4f:	adc    eax,DWORD PTR [ebp+0x3e62f88]
  432c55:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c57:	daa    
  432c58:	ins    DWORD PTR es:[edi],dx
  432c59:	sub    eax,0xa7096007
  432c5e:	scas   al,BYTE PTR es:[edi]
  432c5f:	es add al,0x6a
  432c62:	sbb    bl,BYTE PTR [edi+0x6007156c]
  432c68:	clc    
  432c69:	sub    BYTE PTR [esi+0x3a7a0426],0x77
  432c70:	ins    BYTE PTR es:[edi],dx
  432c71:	std    
  432c72:	push   es
  432c73:	jo     0x432c4d
  432c75:	mov    BYTE PTR [esi+0x68f72a00],ch
  432c7b:	mov    esp,ss
  432c7d:	call   0x7f2c6a30
  432c82:	nop
  432c83:	or     ebp,DWORD PTR [ebp+0xf004487]
  432c89:	add    BYTE PTR [eax],al
  432c8b:	add    BYTE PTR [ebx+0x23],bh
  432c8e:	test   al,0x40
  432c90:	xor    DWORD PTR [esp+eiz*2],eax
  432c93:	jne    0x432c88
  432c95:	stos   BYTE PTR es:[edi],al
  432c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c97:	sub    ch,bh
  432c99:	push   0xaf50cc8c
  432c9e:	cmp    eax,0x2b8f86e9
  432ca3:	test   DWORD PTR [edi+0x45],ecx
  432ca6:	add    BYTE PTR [ebp+0x6d],bh
  432ca9:	or     dl,al
  432cab:	xor    BYTE PTR [ecx-0xf5b78fd],0xa3
  432cb2:	les    edx,FWORD PTR [eax-0x5b78fc4f]
  432cb8:	mov    ah,0xa4
  432cba:	enter  0xb180,0x3
  432cbe:	lea    esp,[eax+edi*8-0x4eaf2b5d]
  432cc5:	add    eax,DWORD PTR [edi-0x6002f9c]
  432ccb:	push   ss
  432ccc:	int    0xa
  432cce:	adc    BYTE PTR [eax-0x4f],al
  432cd1:	add    eax,DWORD PTR [ecx]
  432cd3:	jmp    0x31e233cf
  432cd8:	pop    es
  432cd9:	inc    ebp
  432cda:	add    BYTE PTR [edx-0x4c],cl
  432cdd:	stos   DWORD PTR es:[edi],eax
  432cde:	cmp    eax,0xc00b25e9
  432ce3:	xchg   ecx,eax
  432ce4:	xor    al,BYTE PTR [ebx]
  432ce6:	or     ebp,esp
  432ce8:	lock mov cl,0xec
  432cec:	or     al,0xac
  432cee:	cmp    eax,0xe9
  432cf3:	icebp  
  432cf4:	push   es
  432cf5:	add    BYTE PTR [eax],al
  432cf7:	dec    edx
  432cf8:	push   0xb099ff9
  432cfd:	xchg   DWORD PTR [ebp-0x9e17e],eax
  432d03:	jnp    0x432d0b
  432d05:	mov    al,ds:0x84900a43
  432d0a:	fdiv   QWORD PTR [esi+0x19]
  432d0d:	imul   BYTE PTR [edx+0x1a]
  432d10:	sbb    dl,BYTE PTR [esp+edi*8]
  432d13:	or     eax,edi
  432d15:	stc    
  432d16:	scas   al,BYTE PTR es:[di]
  432d18:	(bad)  
  432d19:	cmp    DWORD PTR [eax],eax
  432d1b:	jne    0x432d10
  432d1d:	stc    
  432d1e:	adc    DWORD PTR [edx],ebx
  432d20:	or     ebp,DWORD PTR [eax+0x9]
  432d23:	into   
  432d24:	push   es
  432d25:	sar    bh,0xdf
  432d28:	add    cl,BYTE PTR [eax+eax*2]
  432d2b:	retf   0xf6b6
  432d2e:	adc    eax,0x39f5aa
  432d33:	adc    ecx,DWORD PTR [eax-0x3b]
  432d36:	int3   
  432d37:	push   es
  432d38:	dec    edi
  432d39:	(bad)
  432d3c:	dec    edi
  432d3d:	(bad)
  432d40:	(bad)  
  432d41:	cmp    eax,0xc00fbe24
  432d46:	jne    0x432d0a
  432d48:	pop    DWORD PTR [ebp+0x24]
  432d4b:	call   0xcbd7:0x96243d8f
  432d52:	imul   ebx
  432d54:	(bad)  
  432d55:	ror    DWORD PTR [ebx+0x4e000000],1
  432d5b:	loop   0x432d5e
  432d5d:	idiv   DWORD PTR [ebx-0x71]
  432d60:	jmp    0x5d5746f0
  432d65:	and    al,0x4a
  432d67:	pop    ecx
  432d69:	mov    ecx,DWORD PTR [ebx+edx*1+0x75a245d]
  432d70:	iret   
  432d71:	jmp    0x432d66
  432d73:	xor    BYTE PTR [edi-0x1fcb8739],al
  432d79:	punpckhbw mm4,QWORD PTR [eax+eiz*8]
  432d7d:	or     ebp,DWORD PTR [eax+0x2c]
  432d80:	loopne 0x432d89
  432d82:	inc    edx
  432d83:	(bad)  
  432d84:	cs (bad) 
  432d86:	inc    edx
  432d87:	(bad)  
  432d88:	xlat   BYTE PTR cs:[ebx]
  432d8a:	call   0x1d36b845
  432d8f:	popf   
  432d90:	mov    bh,ch
  432d92:	add    al,0x14
  432d94:	loopne 0x432da9
  432d96:	js     0x432d40
  432d98:	mov    BYTE PTR [ebx-0x29],al
  432d9b:	fisttp WORD PTR [ecx+eiz*8]
  432d9e:	lock sahf 
  432da0:	(bad)
  432da4:	loopne 0x432db1
  432da6:	pop    esp
  432da7:	call   0xb45b383b
  432dac:	fld    DWORD PTR [edi]
  432dae:	pop    ebp
  432daf:	test   ebx,0xf4143726
  432db5:	push   ss
  432db6:	pop    ds
  432db7:	or     al,0xf0
  432db9:	cs cwde 
  432dbb:	adc    al,0xc0
  432dbd:	and    eax,DWORD PTR [eax]
  432dbf:	add    BYTE PTR [eax],al
  432dc1:	jmp    0x432da7
  432dc3:	test   eax,0x3740ff23
  432dc8:	repnz retf 
  432dca:	ins    BYTE PTR es:[edi],dx
  432dcb:	aaa    
  432dcc:	jmp    FWORD PTR [ecx+0x35]
  432dcf:	mov    dh,cl
  432dd1:	push   0x78c78846
  432dd6:	xor    DWORD PTR [ebx+0x41efe3bd],esi
  432ddc:	retf   
  432ddd:	scas   eax,DWORD PTR es:[edi]
  432dde:	pushf  
  432ddf:	scas   al,BYTE PTR es:[edi]
  432de0:	mov    dh,0xe3
  432de2:	dec    edi
  432de3:	sar    bh,0x59
  432de6:	in     al,0xb0
  432de8:	push   eax
  432de9:	test   al,0xdf
  432deb:	pop    ebp
  432dec:	ds repz push es
  432def:	outs   dx,BYTE PTR ds:[esi]
  432df0:	rcl    BYTE PTR [eax],0x13
  432df3:	jo     0x432db4
  432df5:	hlt    
  432df6:	(bad)  
  432df7:	or     BYTE PTR es:[edx+0x6d],bh
  432dfb:	fstp   TBYTE PTR [eax-0x52e0a95d]
  432e01:	xchg   edi,eax
  432e02:	pop    edi
  432e03:	push   ds
  432e04:	inc    esi
  432e05:	lock push es
  432e07:	mov    dl,0x34
  432e09:	rcr    BYTE PTR gs:[ebx-0x4c2dd7c0],cl
  432e10:	inc    eax
  432e11:	sub    dl,dl
  432e13:	stos   DWORD PTR es:[edi],eax
  432e14:	inc    eax
  432e15:	cmp    dl,dl
  432e17:	pop    esi
  432e18:	adc    ebx,DWORD PTR [edi-0x50808473]
  432e1e:	push   cs
  432e1f:	aas    
  432e20:	rcr    DWORD PTR [esi+0xa9e706],0x0
  432e27:	add    BYTE PTR [ebx],ch
  432e29:	push   es
  432e2a:	sti    
  432e2b:	pop    es
  432e2c:	adc    al,0xc7
  432e2e:	or     al,0x47
  432e30:	jne    0x432e78
  432e32:	and    eax,DWORD PTR [edi]
  432e34:	mov    dl,0x86
  432e36:	pop    ds
  432e37:	mov    ah,0x37
  432e39:	pop    es
  432e3a:	out    0x98,eax
  432e3c:	fnstenv [esi*1-0x18fa0ab3]
  432e43:	add    edx,DWORD PTR [ecx+0x3e]
  432e46:	scas   eax,DWORD PTR es:[edi]
  432e47:	jmp    0x432e42
  432e49:	call   0x4026:0x62667f25
  432e50:	test   al,0xd3
  432e52:	xor    eax,DWORD PTR [eax-0x58]
  432e55:	shr    DWORD PTR [ebx],cl
  432e57:	inc    eax
  432e58:	mov    eax,0x1f135ed3
  432e5d:	mov    ebx,?
  432e5f:	jle    0x432e98
  432e61:	movd   mm7,DWORD PTR [eax+edi*4-0x5ffcd0fd]
  432e69:	inc    esi
  432e6a:	add    ch,bl
  432e6c:	popf   
  432e6d:	push   esi
  432e6e:	or     DWORD PTR [esi],esi
  432e70:	xchg   BYTE PTR [esi],al
  432e72:	sub    eax,0x449399bb
  432e77:	icebp  
  432e78:	pop    eax
  432e79:	mov    esi,edx
  432e7b:	pop    edi
  432e7c:	push   esp
  432e7d:	mov    DWORD PTR [ebx-0x23],edi
  432e80:	mov    ebp,0xe6020c47
  432e85:	jno    0x432e8e
  432e87:	jb     0x432ee1
  432e89:	or     ch,bh
  432e8b:	pop    DWORD PTR [eax]
  432e8d:	add    BYTE PTR [eax],al
  432e8f:	xor    eax,0x36e36ef9
  432e94:	add    eax,0x6ed625d1
  432e9a:	xchg   ecx,eax
  432e9b:	and    eax,0x543759c0
  432ea0:	arpl   WORD PTR [ebp-0x279800fd],di
  432ea6:	ss sub al,0x0
  432ea9:	loop   0x432ef0
  432eab:	lock push es
  432ead:	add    BYTE PTR [edx-0x65],ch
  432eb0:	sti    
  432eb1:	add    BYTE PTR [edi],ch
  432eb3:	lock push es
  432eb5:	inc    eax
  432eb6:	jmp    0x5ea31655
  432ebb:	loope  0x432eb9
  432ebd:	push   edi
  432ebe:	ins    BYTE PTR es:[edi],dx
  432ebf:	xor    BYTE PTR [ebx+edi*1+0x62],dh
  432ec3:	stos   DWORD PTR es:[edi],eax
  432ec4:	pop    es
  432ec5:	and    eax,0xe855802f
  432eca:	pop    ecx
  432ecb:	add    ebp,edi
  432ecd:	stc    
  432ece:	nop
  432ecf:	push   edi
  432ed0:	mov    al,al
  432ed2:	mov    ch,0xbd
  432ed4:	mov    BYTE PTR [eax-0x33],al
  432ed7:	das    
  432ed8:	call   0x810344f6
  432edd:	loopne 0x432ec7
  432edf:	cmp    DWORD PTR [ebx-0x4],ecx
  432ee2:	psraw  mm7,mm4
  432ee5:	stc    
  432ee6:	add    cl,ah
  432ee8:	jecxz  0x432e6c
  432eea:	inc    ebp
  432eeb:	inc    BYTE PTR [eax-0x27a57507]
  432ef1:	enter  0x3d,0x0
  432ef5:	add    BYTE PTR [edi+0x3],dl
  432ef8:	add    al,al
  432efa:	pop    ebp
  432efb:	ja     0x432ebd
  432efd:	mov    ebx,DWORD PTR [ebx+0x32658249]
  432f03:	dec    ebp
  432f04:	inc    esp
  432f05:	cld    
  432f06:	sub    al,0x15
  432f08:	idiv   bh
  432f0a:	cmp    DWORD PTR [ebx-0x1f],eax
  432f0d:	mov    bl,BYTE PTR [edx]
  432f0f:	add    eax,DWORD PTR [eax]
  432f11:	ret    
  432f12:	pop    ebp
  432f13:	out    0x5d,eax
  432f15:	push   ss
  432f16:	retf   0xcc0a
  432f19:	int3   
  432f1a:	pop    esi
  432f1b:	inc    esi
  432f1c:	vdivps ymm0,ymm6,YMMWORD PTR [esi-0x3b]
  432f21:	int3   
  432f22:	xchg   ecx,eax
  432f23:	into   
  432f24:	sbb    eax,0x1dc69108
  432f29:	adc    BYTE PTR [ecx],al
  432f2b:	cmp    eax,DWORD PTR [edx+0x74feb64c]
  432f31:	or     DWORD PTR [ecx-0x31],edx
  432f34:	sbb    eax,0xbb2a6504
  432f39:	adc    dl,cl
  432f3b:	mov    bl,0xee
  432f3d:	loope  0x432f80
  432f3f:	sub    eax,DWORD PTR [edx-0x110509bc]
  432f45:	fs idiv dh
  432f48:	cli    
  432f49:	xlat   BYTE PTR ds:[ebx]
  432f4a:	inc    ecx
  432f4b:	iret   
  432f4c:	sbb    eax,0xfa29e508
  432f51:	rol    BYTE PTR [ecx-0x4dfff6bc],cl
  432f57:	cmp    eax,0x4300
  432f5c:	add    BYTE PTR [edx-0x65ca095a],cl
  432f62:	or     al,BYTE PTR [eax]
  432f64:	add    bl,dh
  432f66:	push   0x66e323c8
  432f6b:	mov    al,ds:0xa072e323
  432f70:	and    eax,DWORD PTR [ebx]
  432f72:	fstp   DWORD PTR ds:0x5e9cbd4e
  432f78:	(bad)  
  432f79:	jl     0x432f2c
  432f7b:	std    
  432f7c:	xor    BYTE PTR [esi-0x5c3b2b1d],ch
  432f82:	jbe    0x432f26
  432f84:	out    0x44,eax
  432f86:	pop    ebx
  432f87:	or     al,0x86
  432f89:	mov    dh,0xcb
  432f8b:	dec    eax
  432f8c:	inc    esp
  432f8d:	aaa    
  432f8e:	(bad)  
  432f8f:	adc    dl,bh
  432f91:	sub    al,0x77
  432f93:	ret    0x76f7
  432f96:	sub    edx,DWORD PTR [ebx+eiz*2]
  432f99:	push   eax
  432f9a:	lock std 
  432f9c:	push   ebx
  432f9e:	mov    al,0x7c
  432fa0:	dec    esp
  432fa1:	add    eax,DWORD PTR [esi*2-0x2100cf4]
  432fa8:	call   FWORD PTR [edx-0x67a650d4]
  432fae:	js     0x432fd2
  432fb0:	pop    esp
  432fb1:	inc    edx
  432fb2:	mov    cl,0x7c
  432fb4:	cli    
  432fb5:	imul   ebx,DWORD PTR ds:[ecx],0x10d466fa
  432fbc:	je     0x432fc1
  432fbe:	gs xchg edx,eax
  432fc0:	or     eax,DWORD PTR [eax]
  432fc2:	add    BYTE PTR [eax],al
  432fc4:	int3   
  432fc5:	shl    ch,cl
  432fc7:	xor    ebx,DWORD PTR [bx+si-0x3d]
  432fcb:	call   DWORD PTR [eax+esi*8+0x5d]
  432fcf:	ds repz push edi
  432fd2:	add    al,0xf7
  432fd4:	lods   al,BYTE PTR ds:[esi]
  432fd5:	cmp    al,0x84
  432fd7:	ret    
  432fd8:	or     edx,DWORD PTR [ebx-0x442905bc]
  432fde:	idiv   DWORD PTR [edi]
  432fe0:	repz push es
  432fe2:	xor    edi,DWORD PTR [edi]
  432fe4:	mov    eax,0xb83f2bca
  432fe9:	retf   0x7cb9
  432fec:	mov    WORD PTR [ecx+0x4c6defa1],ss
  432ff2:	xlat   BYTE PTR ds:[ebx]
  432ff3:	mov    eax,0xccd37e75
  432ff8:	imul   esi,DWORD PTR [ebp+eiz*8+0x7c],0x5b
  432ffd:	sub    edx,0xffffff96
  433000:	pop    ds
  433001:	xchg   edx,eax
  433002:	daa    
  433003:	hlt    
  433004:	jne    0x433052
  433006:	jmp    0x432fbe
  433008:	mov    ah,0x57
  43300a:	mov    edi,0xcafd38c1
  43300f:	jnp    0x432fc3
  433011:	sbb    ch,al
  433013:	(bad)  
  433014:	clc    
  433015:	pop    es
  433016:	aas    
  433017:	hlt    
  433018:	repz jl 0x432ff6
  43301b:	fcomp  QWORD PTR [edx-0x739a1ea]
  433021:	das    
  433022:	pop    ds
  433023:	clc    
  433024:	jne    0x43309a
  433026:	sti    
  433027:	add    BYTE PTR [eax],0x0
  43302a:	add    BYTE PTR [eax],dh
  43302c:	or     ah,BYTE PTR [esi-0x72]
  43302f:	loopne 0x433037
  433031:	adc    al,0x6
  433033:	ins    BYTE PTR es:[edi],dx
  433034:	push   esp
  433035:	out    dx,eax
  433036:	jl     0x43307a
  433038:	pop    ss
  433039:	sbb    ch,BYTE PTR [esi+0x7b1ccba5]
  43303f:	enter  0x5e55,0x99
  433043:	in     al,dx
  433044:	sbb    DWORD PTR [ecx-0x1],0x3e7c970
  43304b:	(bad)
  433050:	(bad)  
  433051:	fiadd  DWORD PTR [edi+0x3e70781]
  433057:	inc    eax
  433058:	nop
  433059:	mov    edi,0xfc2407
  43305e:	add    edi,DWORD PTR [ebx+0x30]
  433061:	jge    0x433091
  433063:	stos   BYTE PTR es:[edi],al
  433064:	js     0x433087
  433066:	push   0xfffffffc
  433068:	dec    esi
  433069:	je     0x433036
  43306b:	jno    0x43306e
  43306d:	push   esi
  43306e:	popf   
  43306f:	cmp    DWORD PTR [ebp-0x7],0xffffff86
  433073:	pop    esp
  433074:	adc    al,0x7d
  433076:	push   es
  433077:	xchg   BYTE PTR [eax+0xd],bh
  43307a:	push   0xe8fe91f4
  43307f:	lock jb 0x433087
  433082:	mov    gs,WORD PTR [eax-0x2190603]
  433088:	pop    ebp
  433089:	pop    ebx
  43308a:	stos   DWORD PTR es:[edi],eax
  43308b:	in     al,dx
  43308c:	push   es
  43308d:	test   DWORD PTR [ecx],ebp
  43308f:	add    BYTE PTR [eax],al
  433091:	add    BYTE PTR [edi],bh
  433093:	add    eax,0x55
  433096:	repnz or DWORD PTR [edx+0xd],0x67
  43309b:	test   DWORD PTR [edx+0x11],eax
  43309e:	pop    edi
  43309f:	add    eax,edx
  4330a1:	push   0xffffffb4
  4330a3:	add    eax,DWORD PTR [ebp+0x3e852317]
  4330a9:	sub    eax,0xec74bc7a
  4330ae:	mov    DWORD PTR [ebp+0x24],ecx
  4330b1:	cmp    DWORD PTR [eax+0x45],edi
  4330b4:	sub    BYTE PTR [ecx],bh
  4330b6:	in     al,0xd6
  4330b8:	jge    0x433067
  4330ba:	call   0x6a208343
  4330bf:	cmp    al,BYTE PTR [eax+0x6c]
  4330c2:	xor    BYTE PTR [eax+0xb],bh
  4330c5:	bound  edx,QWORD PTR [esi-0x498dafd9]
  4330cb:	and    edx,DWORD PTR [eax+0x5e]
  4330ce:	(bad)  
  4330cf:	jl     0x433095
  4330d1:	loope  0x43310c
  4330d3:	push   esi
  4330d4:	sbb    al,0x62
  4330d6:	mov    dl,0x33
  4330d8:	add    DWORD PTR [eax],0xffffffda
  4330db:	xchg   ebx,eax
  4330dc:	or     al,0x8b
  4330de:	push   esp
  4330df:	jecxz  0x43312a
  4330e1:	mov    ecx,DWORD PTR [edi+ebx*8+0x49]
  4330e5:	(bad)  
  4330e6:	sti    
  4330e7:	mov    BYTE PTR [ebp+0x15b20108],bh
  4330ed:	mov    ecx,DWORD PTR [edi+ebx*8-0x7e]
  4330f1:	dec    esi
  4330f2:	scas   al,BYTE PTR es:[edi]
  4330f3:	mov    ch,0x49
  4330f5:	inc    DWORD PTR [eax]
  4330f7:	add    BYTE PTR [eax],al
  4330f9:	mov    ebx,0xa908bd88
  4330fe:	inc    edi
  4330ff:	jp     0x433100
  433101:	jmp    0x4330ff
  433103:	xchg   esp,eax
  433104:	rol    BYTE PTR [ebp+0x4a1c3f44],0x7
  43310b:	add    BYTE PTR [eax],al
  43310d:	mov    ah,0xba
  43310f:	jp     0x4330f1
  433111:	daa    
  433112:	stos   DWORD PTR es:[edi],eax
  433113:	mov    ebx,0xf74f4a04
  433118:	jmp    DWORD PTR ds:0x585d5709
  43311e:	push   cs
  43311f:	add    ah,cl
  433121:	push   esi
  433122:	inc    esi
  433123:	(bad)
  433126:	jge    0x43310d
  433128:	mov    ecx,esp
  43312a:	push   cs
  43312b:	dec    ebp
  43312c:	mov    edx,DWORD PTR [edx-0x33]
  43312f:	clc    
  433130:	jbe    0x43314a
  433132:	jle    0x43312c
  433134:	test   DWORD PTR [ebp-0x6d],esp
  433137:	add    al,0x33
  433139:	dec    edx
  43313a:	test   eax,0x43c1c35c
  43313f:	mov    BYTE PTR [esi-0x32],al
  433142:	jg     0x433183
  433144:	sbb    al,0x51
  433146:	ret    
  433147:	adc    DWORD PTR [ebx+0xf730662],eax
  43314d:	inc    ecx
  43314e:	stc    
  43314f:	adc    BYTE PTR [esi-0x16],0xb3
  433153:	push   eax
  433154:	push   edx
  433155:	repz inc edi
  433157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433158:	and    bl,dh
  43315a:	out    dx,eax
  43315b:	sbb    BYTE PTR ds:0x70000000,cl
  433161:	dec    eax
  433162:	(bad)  
  433163:	je     0x433168
  433165:	jne    0x433169
  433167:	xchg   DWORD PTR ds:0x424fb500,ebp
  43316d:	dec    eax
  43316e:	xchg   ebx,eax
  43316f:	and    ebx,esi
  433171:	out    dx,eax
  433172:	jbe    0x4331b5
  433174:	ret    
  433175:	je     0x433169
  433177:	xchg   BYTE PTR [esi],dh
  433179:	call   0x8667f32
  43317e:	adc    eax,0xfd016cf5
  433183:	cmp    DWORD PTR [eax+0x24],esi
  433186:	add    BYTE PTR [ecx],al
  433188:	fucom  st(7)
  43318a:	js     0x43314e
  43318c:	mov    ah,0x8a
  43318e:	inc    eax
  43318f:	retf   
  433190:	aas    
  433191:	mov    ah,0x39
  433193:	retf   
  433194:	aaa    
  433195:	lods   al,BYTE PTR ds:[esi]
  433196:	cmp    ebx,ecx
  433198:	das    
  433199:	cmp    eax,0x32075a77
  43319e:	ja     0x433212
  4331a0:	out    dx,eax
  4331a1:	adc    al,0x93
  4331a3:	jae    0x43321d
  4331a5:	and    DWORD PTR [eax+0x7903ac86],esp
  4331ab:	xchg   ebx,eax
  4331ac:	call   0xd3d3d66
  4331b1:	aad    0xd
  4331b3:	xor    DWORD PTR ss:[esi],ebx
  4331b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4331b7:	xchg   BYTE PTR [edi+edx*8-0x8187350],dh
  4331be:	scas   al,BYTE PTR es:[edi]
  4331bf:	dec    edi
  4331c0:	fisttp DWORD PTR [ecx+0x7]
  4331c3:	cli    
  4331c4:	add    BYTE PTR [eax],al
  4331c6:	add    ah,ah
  4331c8:	je     0x43317e
  4331ca:	dec    ebx
  4331cb:	push   0x3428c828
  4331d0:	add    bh,dl
  4331d2:	pop    edx
  4331d3:	pop    edi
  4331d4:	pop    es
  4331d5:	inc    di
  4331d7:	clc    
  4331d8:	das    
  4331d9:	mov    edx,0xb70a6faf
  4331de:	cld    
  4331df:	add    DWORD PTR [edi+0x49],0xfe049b80
  4331e6:	inc    eax
  4331e7:	push   ss
  4331e8:	add    ecx,DWORD PTR [esi]
  4331ea:	inc    ecx
  4331eb:	xchg   ebp,eax
  4331ec:	add    al,0xf6
  4331ee:	inc    ebx
  4331ef:	cs popa 
  4331f1:	pusha  
  4331f2:	add    al,BYTE PTR [esi]
  4331f4:	lock outs dx,BYTE PTR ds:[esi]
  4331f6:	mov    esp,0x7e368dc4
  4331fb:	call   0x3398145f
  433200:	stc    
  433201:	data16 sbb ch,BYTE PTR [esi+0x3c]
  433205:	es xchg ecx,eax
  433207:	lock sub eax,0x345e1826
  43320d:	daa    
  43320e:	mov    ecx,0x96e88fd2
  433213:	pop    ebx
  433214:	add    eax,0x85f17fd6
  433219:	pop    edi
  43321a:	add    bl,dh
  43321c:	or     DWORD PTR [ebx+0x42],ebp
  43321f:	xor    al,0xf9
  433221:	out    0x7e,eax
  433223:	shl    DWORD PTR [edx-0x1a],0xb2
  433227:	cwde   
  433228:	lea    ebp,[ecx+0x7]
  43322e:	sar    BYTE PTR [esi],0x5e
  433231:	adc    al,0xa6
  433233:	out    dx,al
  433234:	scas   eax,DWORD PTR es:[edi]
  433235:	or     cl,BYTE PTR [ecx]
  433237:	stc    
  433238:	call   0x32d0b2ff
  43323d:	nop
  43323e:	jge    0x433202
  433240:	jmp    0x4331c8
  433242:	inc    BYTE PTR [edx*1+0x137075e9]
  433249:	pop    es
  43324a:	pusha  
  43324b:	aas    
  43324c:	outs   dx,BYTE PTR ds:[esi]
  43324d:	mov    ebx,0x3f000844
  433252:	icebp  
  433253:	lea    eax,[ecx+0x21]
  433256:	add    al,0xd8
  433258:	or     DWORD PTR [edi+0x282d0789],ebx
  43325e:	aam    0x45
  433260:	push   esp
  433261:	pusha  
  433262:	mov    al,0x40
  433264:	jg     0x4332b9
  433266:	icebp  
  433267:	add    eax,0xc7de900
  43326c:	test   esi,esp
  43326e:	jne    0x4332e0
  433270:	add    al,0xe9
  433272:	cdq    
  433273:	sub    DWORD PTR [edx],0x2e
  433276:	clc    
  433277:	cld    
  433278:	test   DWORD PTR [esi+0x2f],ebp
  43327b:	push   ss
  43327c:	add    cl,ch
  43327e:	std    
  43327f:	dec    esp
  433280:	cmp    al,0xd2
  433282:	das    
  433283:	imul   esp,DWORD PTR [ecx+0x62],0xfafd6c80
  43328a:	xor    eax,0x3dcc6dc6
  43328f:	into   
  433290:	test   DWORD PTR [eax],edx
  433292:	add    BYTE PTR [eax],al
  433294:	add    BYTE PTR [esi-0xf],ch
  433297:	(bad)  
  433298:	out    0xf0,eax
  43329a:	push   es
  43329b:	jb     0x433289
  43329d:	mov    ch,0xf9
  43329f:	add    cl,ch
  4332a1:	lock jg 0x4332ed
  4332a4:	adc    DWORD PTR [ecx+edi*8-0x35],edi
  4332a8:	inc    ebx
  4332a9:	not    DWORD PTR [ebp-0x18]
  4332ac:	mov    ch,0xf7
  4332ae:	cld    
  4332af:	stc    
  4332b0:	push   0xffffffdc
  4332b2:	or     edi,ebp
  4332b4:	xchg   esi,eax
  4332b5:	dec    edx
  4332b6:	(bad)  
  4332b7:	cdq    
  4332b8:	test   eax,0x42f9f802
  4332bd:	lods   al,BYTE PTR ds:[esi]
  4332be:	mov    dl,BYTE PTR [edx+0x6f7eb]
  4332c4:	shr    BYTE PTR [esi+0xc22168],cl
  4332ca:	xchg   edx,eax
  4332cc:	add    al,bl
  4332ce:	add    al,BYTE PTR [eax]
  4332d0:	add    cl,al
  4332d2:	cmp    esi,DWORD PTR [edx]
  4332d4:	icebp  
  4332d5:	aam    0x1
  4332d7:	xor    ecx,0x5631bd51
  4332dd:	fnstcw WORD PTR [ebx]
  4332df:	arpl   WORD PTR [eax],ax
  4332e1:	jnp    0x4332fe
  4332e3:	(bad)  
  4332e4:	stc    
  4332e5:	sbb    eax,0xcec47a0d
  4332ea:	add    ch,BYTE PTR [ebp+0x3c4c0]
  4332f0:	pop    esi
  4332f1:	push   ecx
  4332f2:	inc    eax
  4332f3:	(bad)
  4332f6:	js     0x4332dd
  4332f8:	push   esi
  4332f9:	add    BYTE PTR [eax],al
  4332fb:	add    BYTE PTR [ebp+0x78],ah
  4332fe:	jl     0x433308
  433300:	add    ebp,eax
  433302:	add    eax,0xf90cddbe
  433307:	dec    DWORD PTR [ecx]
  433309:	inc    esp
  43330a:	repnz cmp edx,DWORD PTR [ecx+edx*4]
  43330e:	or     BYTE PTR [ebx+0x249d6f6a],cl
  433314:	dec    edx
  433315:	add    eax,DWORD PTR [eax]
  433317:	add    cl,dl
  433319:	les    ebp,FWORD PTR [ebp-0x7d]
  43331c:	inc    edx
  43331d:	add    ebp,DWORD PTR [ebp+0x10]
  433320:	and    al,BYTE PTR [ecx+0x791dfff7]
  433326:	ds je  0x4332f0
  433329:	inc    edx
  43332a:	push   es
  43332b:	test   BYTE PTR [ebp+0x1b000002],bl
  433331:	(bad)  
  433332:	gs mov ecx,ebp
  433335:	scas   al,BYTE PTR es:[edi]
  433336:	adc    BYTE PTR [edi-0x52],0x45
  43333a:	ds je  0x433357
  43333d:	add    eax,DWORD PTR [eax]
  43333f:	add    BYTE PTR [edi+0x6],bh
  433342:	das    
  433343:	je     0x43335b
  433345:	retf   0x72c9
  433348:	repz (bad) 
  43334a:	fmul   st(7),st
  43334c:	jp     0x43338b
  43334e:	nop
  43334f:	mov    BYTE PTR [esp+ebx*1],ch
  433352:	jns    0x43331c
  433354:	pop    ebx
  433355:	in     eax,dx
  433356:	jl     0x4333aa
  433358:	sbb    esp,ecx
  43335a:	cs out 0xf1,al
  43335d:	mov    al,0x33
  43335f:	add    BYTE PTR gs:[eax],al
  433362:	add    bl,dh
  433364:	sbb    BYTE PTR ds:0x15bd214f,bh
  43336a:	sbb    edi,esi
  43336c:	(bad)  
  43336e:	xchg   BYTE PTR [esp+esi*4],dh
  433371:	jbe    0x4333b5
  433373:	inc    edi
  433374:	jns    0x433375
  433376:	jle    0x43332f
  433378:	rcl    BYTE PTR ds:0x73d9789,1
  43337e:	xchg   ah,bh
  433380:	pusha  
  433381:	test   DWORD PTR [edi],ecx
  433383:	repz xchg ebx,eax
  433385:	rol    BYTE PTR [esi+0x527cb42c],0x7
  43338c:	imul   edi,DWORD PTR [edi-0x2ed0e7d5],0xfddff201
  433396:	ss inc ebx
  433398:	jb     0x43331d
  43339a:	test   BYTE PTR [edx],ch
  43339c:	js     0x43339e
  43339e:	xchg   DWORD PTR [edi+esi*4-0x1da73efc],esi
  4333a5:	aam    0xbf
  4333a7:	leave  
  4333a8:	fbstp  TBYTE PTR [ebx+0x2cc79c4f]
  4333ae:	repz fistp QWORD PTR ss:[edx+ecx*2-0x69]
  4333b4:	js     0x4333b6
  4333b6:	jg     0x4333ef
  4333b8:	shl    BYTE PTR [esi+0x4a],1
  4333bb:	mov    bh,0xc7
  4333bd:	mov    esp,0x7ca50cfb
  4333c2:	adc    dh,BYTE PTR [eax+0x7]
  4333c5:	sbb    eax,0xf4
  4333ca:	cld    
  4333cb:	add    al,0x64
  4333cd:	mov    eax,0xa892f5f9
  4333d2:	sbb    eax,0xa5a729c7
  4333d7:	cmp    esp,0xf3fc77f7
  4333dd:	adc    al,0x6d
  4333df:	inc    ebp
  4333e0:	adc    edi,DWORD PTR [edi-0x45]
  4333e3:	outs   dx,BYTE PTR ds:[esi]
  4333e4:	loop   0x433462
  4333e6:	xor    DWORD PTR [edi],ebp
  4333e8:	out    0x42,al
  4333ea:	aad    0x8
  4333ec:	push   ss
  4333ed:	inc    esp
  4333ee:	add    eax,0xf00966d9
  4333f3:	add    eax,0x82364573
  4333f8:	call   0x41b3:0x95d7d597
  4333ff:	fbld   TBYTE PTR [ebx-0x34]
  433402:	mov    ebp,?
  433404:	pop    esi
  433405:	rcr    BYTE PTR [eax],0x80
  433408:	stos   BYTE PTR es:[edi],al
  433409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43340a:	jne    0x433419
  43340c:	data16 aas 
  43340e:	in     al,0xde
  433410:	adc    ecx,DWORD PTR [ecx+ebp*2]
  433413:	cmc    
  433414:	pop    esi
  433415:	clc    
  433416:	adc    eax,0xecc2c0c7
  43341b:	jnp    0x433406
  43341d:	test   BYTE PTR [edx+0xa],bl
  433420:	loop   0x433490
  433422:	mov    WORD PTR [ebp-0x77],ss
  433425:	mov    ebx,0xa8e5e6c5
  43342a:	jge    0x4333b5
  43342c:	fld    DWORD PTR [eax]
  43342e:	add    BYTE PTR [eax],al
  433430:	add    al,ch
  433432:	call   0x423:0x83caa7a7
  433439:	repnz push ebx
  43343b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43343c:	cmp    BYTE PTR [eax],ch
  43343e:	ret    0x38ab
  433441:	sub    dl,al
  433443:	add    BYTE PTR [eax+ecx*4],bl
  433446:	loope  0x433495
  433448:	pop    ss
  433449:	push   esp
  43344a:	mov    WORD PTR [ebx-0xf],?
  43344d:	test   eax,0xf0e90006
  433452:	(bad)  
  433453:	stc    
  433454:	bound  ebp,QWORD PTR [eax+edi*2+0x6efe73b]
  43345b:	add    dl,bh
  43345d:	shr    ah,cl
  43345f:	dec    edi
  433460:	jl     0x43344e
  433462:	lock test DWORD PTR [esi],ebp
  433465:	arpl   WORD PTR [ebp+0x6bbdd73],cx
  43346b:	(bad)  
  43346c:	call   0x644b9861
  433471:	in     eax,0x0
  433473:	test   BYTE PTR [ecx+0x640006f2],ah
  433479:	das    
  43347a:	add    DWORD PTR [esi+ebp*4+0x6a0006f2],eax
  433481:	out    0xf4,eax
  433483:	outs   dx,DWORD PTR ds:[esi]
  433484:	lds    ecx,FWORD PTR [ecx]
  433486:	dec    ecx
  433487:	dec    eax
  433488:	bound  edi,QWORD PTR [esp+ebx*2]
  43348b:	test   DWORD PTR [esi-0x2a8e729c],edi
  433491:	rcl    ebx,0x85
  433494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433495:	add    BYTE PTR [eax],al
  433497:	add    BYTE PTR [eax],bh
  433499:	add    DWORD PTR [edx+0x2ef25f9d],esi
  43349f:	sub    BYTE PTR [eax+0x49],dl
  4334a2:	push   esp
  4334a3:	jb     0x433441
  4334a5:	dec    eax
  4334a6:	sbb    eax,0x4058c9fb
  4334ab:	pusha  
  4334ac:	test   BYTE PTR [edx+eiz*2+0x72],cl
  4334b0:	cmp    al,0x47
  4334b2:	bound  esi,QWORD PTR [eax+0x34]
  4334b5:	bound  eax,QWORD PTR [ebp+0x49158b26]
  4334bb:	adc    eax,0x4058a8
  4334c0:	and    eax,0xa149fd45
  4334c5:	mov    esp,0xc6ed8b41
  4334ca:	pop    edi
  4334cb:	mov    edi,DWORD PTR [ebp+0x1e895f8e]
  4334d1:	scas   al,BYTE PTR es:[edi]
  4334d2:	test   al,al
  4334d4:	fsubp  st(3),st
  4334d6:	or     BYTE PTR [edi-0xa],0x6f
  4334da:	dec    esi
  4334db:	sub    al,0xb1
  4334dd:	das    
  4334de:	sub    dl,0xcc
  4334e1:	or     al,BYTE PTR [eax]
  4334e3:	add    BYTE PTR [ecx-0x15f291d3],dh
  4334e9:	mov    ds:0x7b939e1,eax
  4334ee:	add    BYTE PTR [ebx+0x4788f00e],al
  4334f4:	stos   BYTE PTR es:[edi],al
  4334f5:	mov    BYTE PTR [esi+0x60],dh
  4334f8:	cdq    
  4334f9:	cld    
  4334fa:	jnp    0x433521
  4334fc:	add    BYTE PTR [eax],al
  4334fe:	add    BYTE PTR [ebx+0x21660007],bl
  433504:	mov    ebp,0xbc016665
  433509:	imul   ecx,DWORD PTR [ebx+0xf682d],0x603e6d9a
  433513:	add    DWORD PTR [ebp-0x63],eax
  433516:	push   ss
  433517:	mov    al,BYTE PTR [edi]
  433519:	add    eax,0x889213b7
  43351e:	or     al,0x9c
  433520:	jo     0x4334b0
  433522:	cwde   
  433523:	cmp    al,0x7
  433525:	add    BYTE PTR [ebx+0xf681d],cl
  43352b:	pop    edx
  43352c:	(bad)  
  43352e:	xchg   DWORD PTR [esi-0x2b],ecx
  433531:	add    BYTE PTR [edi-0x61b96],bl
  433537:	inc    ebp
  433538:	inc    ecx
  433539:	mov    ecx,0x7493f30f
  43353e:	jg     0x4334f8
  433540:	sbb    eax,0x69f26204
  433545:	imul   edx,DWORD PTR [edi-0x73022211],0x77
  43354c:	push   esp
  43354d:	ins    BYTE PTR es:[edi],dx
  43354e:	add    esi,ebx
  433550:	fnstsw WORD PTR [esi-0x40]
  433553:	cld    
  433554:	stos   DWORD PTR es:[edi],eax
  433555:	add    al,0x0
  433557:	cmp    ebx,ebp
  433559:	(bad)  
  43355a:	push   ebx
  43355c:	add    edi,eax
  43355e:	(bad)  
  43355f:	pusha  
  433560:	aam    0xf4
  433562:	mov    dl,0x0
  433564:	add    BYTE PTR [eax],al
  433566:	stos   BYTE PTR es:[edi],al
  433567:	stc    
  433568:	dec    ebx
  433569:	xor    BYTE PTR [ebx+0x37],0xc4
  43356d:	(bad)  
  43356e:	fldpi  
  433570:	hlt    
  433571:	mov    dl,0xa2
  433573:	lahf   
  433574:	push   ss
  433575:	add    ch,ah
  433577:	xchg   ecx,eax
  433578:	jle    0x4335f9
  43357a:	sub    DWORD PTR [eax+0x7bf261fd],esp
  433580:	jnp    0x433509
  433582:	cli    
  433583:	(bad)  
  433585:	xchg   BYTE PTR [esp+ebp*2-0x16],dh
  433589:	call   DWORD PTR [ebp+ebp*8-0x84fd9ca]
  433590:	jl     0x433531
  433592:	fstp   st(7)
  433594:	std    
  433595:	xchg   BYTE PTR [eax+eax*4],dh
  433598:	hlt    
  433599:	xchg   ebx,eax
  43359a:	mov    dl,0xd7
  43359c:	mov    esp,0x770f7873
  4335a1:	dec    edx
  4335a2:	(bad)  
  4335a4:	jl     0x433625
  4335a6:	repz (bad) 
  4335a9:	jb     0x433567
  4335ab:	pop    esp
  4335ac:	add    eax,0xb58dc2fe
  4335b1:	mov    BYTE PTR [edi+edi*2+0x6cf5afe],ch
  4335b8:	outs   dx,BYTE PTR ds:[esi]
  4335b9:	lods   al,BYTE PTR ds:[esi]
  4335ba:	enter  0x3a7d,0xbc
  4335be:	jne    0x433602
  4335c0:	das    
  4335c1:	jns    0x433574
  4335c3:	fimul  DWORD PTR cs:[ebp-0x50]
  4335c7:	add    al,0xe5
  4335c9:	xor    BYTE PTR [eax],al
  4335cb:	add    BYTE PTR [eax],al
  4335cd:	xor    eax,0xddc02a7e
  4335d2:	lds    eax,FWORD PTR [esi]
  4335d4:	mov    ebp,0xd00a7da0
  4335d9:	imul   ecx,DWORD PTR [edx+0x2f],0xfffffff5
  4335dd:	inc    ecx
  4335de:	or     ebp,DWORD PTR [eax]
  4335e0:	loope  0x4335a8
  4335e2:	jge    0x43361e
  4335e4:	les    edx,FWORD PTR [edx-0x80]
  4335e7:	jecxz  0x433592
  4335e9:	jmp    0x6ddb60a7
  4335ee:	inc    ecx
  4335ef:	das    
  4335f0:	jns    0x433613
  4335f2:	dec    ebx
  4335f3:	or     DWORD PTR [ebx-0x10],edi
  4335f6:	cmp    al,0x6a
  4335f8:	mov    ah,0x1c
  4335fa:	scas   al,BYTE PTR es:[edi]
  4335fb:	call   0xd44a2903
  433600:	dec    esp
  433601:	fwait
  433602:	test   edi,esp
  433604:	add    esi,ebx
  433606:	pop    es
  433607:	mov    ds:0xff597597,al
  43360c:	add    BYTE PTR [eax+0x63],al
  43360f:	outs   dx,BYTE PTR ds:[esi]
  433610:	mov    ah,0x24
  433612:	retf   0xa3aa
  433615:	test   cl,dh
  433617:	out    0x3,eax
  433619:	call   0x31be1bd6
  43361e:	aas    
  43361f:	ss and edi,ecx
  433622:	mov    eax,0xc814029d
  433627:	(bad)  
  433628:	mov    esp,0xbbaa7fc0
  43362d:	dec    ebp
  43362e:	push   ebx
  43362f:	outs   dx,BYTE PTR ds:[esi]
  433630:	lods   al,BYTE PTR ds:[esi]
  433631:	add    BYTE PTR [eax],al
  433633:	add    al,bl
  433635:	jge    0x433637
  433637:	scas   al,BYTE PTR es:[edi]
  433638:	cmp    BYTE PTR [ebx+0x7cbbeb04],cl
  43363e:	mov    al,ds:0x8506f0ff
  433643:	jbe    0x4336a0
  433645:	adc    al,0x0
  433647:	jmp    0x60a62b29
  43364c:	fisttp DWORD PTR [eax-0x7b]
  43364f:	pop    esi
  433650:	dec    edi
  433651:	adc    al,0x0
  433653:	jmp    0xdfdbb5d5
  433658:	lock push es
  43365a:	mov    ch,ah
  43365c:	out    0xf1,eax
  43365e:	call   0xaaee:0x6d949
  433665:	(bad)  
  433666:	(bad)  
  433667:	call   0xe9d7bcf0
  43366c:	lock push es
  43366e:	test   DWORD PTR [esi-0x6d],esi
  433671:	adc    eax,0x8b63e900
  433676:	sbb    DWORD PTR [ebp-0x11],0xa6ba0006
  43367d:	sub    al,ch
  43367f:	and    BYTE PTR [eax-0x59],ah
  433682:	adc    ch,cl
  433684:	lock std 
  433686:	xchg   ebx,eax
  433687:	sub    esi,eax
  433689:	cmp    al,0x74
  43368b:	bound  esp,QWORD PTR [ebp+0x6bd55af0]
  433691:	cmc    
  433692:	or     DWORD PTR [ebp-0x60],esp
  433695:	in     al,dx
  433696:	stc    
  433697:	add    BYTE PTR ss:[eax],al
  43369a:	add    BYTE PTR [esi+edi*1+0x5c],dh
  43369e:	fs scas al,BYTE PTR es:[edi]
  4336a0:	outs   dx,DWORD PTR ds:[esi]
  4336a1:	add    DWORD PTR [edx+0x28],esi
  4336a4:	das    
  4336a5:	std    
  4336a6:	daa    
  4336a7:	pop    esp
  4336a8:	icebp  
  4336a9:	sub    DWORD PTR cs:[esi+edx*2+0x6c],esi
  4336ae:	xor    eax,0x29
  4336b1:	iret   
  4336b2:	add    BYTE PTR [eax+0x54],bh
  4336b5:	dec    edi
  4336b6:	call   0x436305
  4336bb:	sar    DWORD PTR [ebx],1
  4336bd:	ins    BYTE PTR es:[edi],dx
  4336be:	mov    DWORD PTR [ebp-0x36f87cb0],edx
  4336c4:	(bad)  
  4336c5:	adc    al,ch
  4336c7:	mov    edx,0x91fff7f1
  4336cc:	adc    al,0x7b
  4336ce:	jns    0x4336ea
  4336d0:	add    al,0x7
  4336d2:	test   DWORD PTR [esi-0x120009fa],esi
  4336d8:	fs sub eax,eax
  4336db:	loope  0x433742
  4336dd:	mov    ebx,0x7d66dd8b
  4336e2:	leave  
  4336e3:	sar    bl,cl
  4336e5:	add    BYTE PTR [edi-0x2e],0x8
  4336e9:	mov    ecx,0xc038d8eb
  4336ee:	xor    ebx,DWORD PTR [eax-0x22fb0978]
  4336f4:	xchg   edi,eax
  4336f5:	mov    edx,0x6c4d4152
  4336fa:	sub    ebp,DWORD PTR [ebx+0x59]
  4336fd:	push   eax
  4336fe:	push   edi
  4336ff:	add    BYTE PTR [eax],al
  433701:	add    BYTE PTR [edx-0x64],dh
  433704:	cmp    BYTE PTR [eax],al
  433706:	retf   0x3f80
  433709:	ins    BYTE PTR es:[edi],dx
  43370a:	and    edi,DWORD PTR ds:0x88958b5c
  433710:	les    edx,FWORD PTR [eax]
  433712:	xor    cl,BYTE PTR ds:0x812dfff1
  433718:	pop    es
  433719:	xor    ebx,edx
  43371b:	xor    bh,BYTE PTR [ecx]
  43371d:	adc    BYTE PTR [edi+0x14],al
  433720:	jnp    0x433720
  433722:	xchg   esi,eax
  433723:	adc    al,0x8d
  433725:	shr    BYTE PTR [ebp-0x26b7ac9b],0xe3
  43372c:	cli    
  43372d:	pop    esp
  43372e:	repz sbb al,0x82
  433731:	cli    
  433732:	not    eax
  433734:	xchg   ecx,eax
  433735:	shl    BYTE PTR [edi+eiz*4-0x224874a6],0x4
  43373d:	pop    ebx
  43373e:	xor    BYTE PTR [edx-0x685f1376],dl
  433744:	push   esi
  433745:	test   DWORD PTR [esi+0x2cffbcf5],esi
  43374b:	(bad)  
  43374d:	test   BYTE PTR [esp+eiz*2],ah
  433750:	dec    edi
  433751:	je     0x4337c5
  433753:	(bad)  
  433754:	push   es
  433755:	call   DWORD PTR [ebx*8+0x2d1b1e74]
  43375c:	cli    
  43375d:	stc    
  43375e:	add    al,0x64
  433760:	dec    edi
  433761:	je     0x4337d5
  433763:	mov    dh,0x6
  433765:	inc    DWORD PTR [eax]
  433767:	add    BYTE PTR [eax],al
  433769:	hlt    
  43376a:	fdiv   QWORD PTR [esi+eax*1+0x70]
  43376e:	or     edx,DWORD PTR [eax]
  433770:	add    ah,dh
  433772:	pop    ebx
  433773:	cs (bad) 
  433775:	fsubr  st(0),st
  433777:	add    bh,0xe4
  43377a:	pop    ebx
  43377b:	xlat   BYTE PTR ds:[ebx]
  43377c:	dec    ah
  43377e:	loopne 0x4337b4
  433780:	shl    BYTE PTR [eax+0x77],0x3
  433784:	outs   dx,BYTE PTR ds:[esi]
  433785:	sub    ch,BYTE PTR [ecx+0x47]
  433788:	dec    eax
  433789:	push   0x448555b5
  43378e:	mov    esp,0x30df718c
  433793:	in     al,0x85
  433795:	sub    al,0x18
  433797:	lss    esp,FWORD PTR [edi]
  43379a:	iret   
  43379b:	add    ebp,DWORD PTR ds:0x544701b2
  4337a1:	js     0x433748
  4337a3:	inc    ecx
  4337a4:	sbb    eax,0x40576981
  4337a9:	push   0x7
  4337ab:	stos   BYTE PTR es:[edi],al
  4337ac:	dec    ebx
  4337ad:	rol    DWORD PTR [ecx+0x7fd142e3],1
  4337b3:	jmp    0x43382a
  4337b5:	jbe    0x4337f5
  4337b7:	jnp    0x4337dd
  4337b9:	stos   BYTE PTR es:[edi],al
  4337ba:	xor    ch,BYTE PTR [esi+0x59]
  4337bd:	mov    bl,0xfd
  4337bf:	xor    DWORD PTR [eax],ecx
  4337c1:	lods   eax,DWORD PTR ds:[esi]
  4337c2:	and    DWORD PTR [edx-0x5ca989b5],0x53766e69
  4337cc:	push   0x0
  4337ce:	add    BYTE PTR [eax],al
  4337d0:	je     0x433805
  4337d2:	sub    eax,0x5e66ba8d
  4337d7:	pop    eax
  4337d8:	mov    ds:0xf303e5ac,eax
  4337dd:	push   es
  4337de:	jo     0x433830
  4337e0:	mov    edi,DWORD PTR [edi+0x12]
  4337e3:	push   0x8747766c
  4337e8:	xor    esi,DWORD PTR [ebx+0x1d]
  4337eb:	cmp    eax,0x3e7876a
  4337f0:	repz jns 0x433818
  4337f3:	lea    eax,[edx+0x5b]
  4337f6:	pop    esi
  4337f7:	push   eax
  4337f8:	mov    cr6,edi
  4337fb:	or     ah,0x4
  4337fe:	call   0x98752b06
  433803:	js     0x433808
  433805:	push   edi
  433806:	sbb    ch,ah
  433808:	add    eax,0x3603e727
  43380d:	ret    
  43380e:	out    dx,eax
  43380f:	mov    dh,BYTE PTR [edx]
  433811:	addr16 data16 sti 
  433814:	lock jne 0x433808
  433817:	cmp    bh,BYTE PTR [edx+0x7e]
  43381a:	out    0x3,eax
  43381c:	repz jb 0x4337f5
  43381f:	test   BYTE PTR [ebx+0x6e12b409],cl
  433825:	push   ebp
  433826:	add    ch,al
  433828:	iret   
  433829:	push   edi
  43382a:	jo     0x433894
  43382c:	jbe    0x433834
  43382e:	adc    cl,ch
  433830:	lock js 0x433830
  433833:	outs   dx,DWORD PTR ds:[esi]
  433834:	add    BYTE PTR [eax],al
  433836:	add    bl,ch
  433838:	test   WORD PTR [esi-0x15079428],bp
  43383f:	add    ebp,DWORD PTR [ebp+0x69]
  433842:	call   0xa67a3f37
  433847:	sar    bh,1
  433849:	or     BYTE PTR [edi-0x78fff90f],0x67
  433850:	push   edi
  433851:	ins    BYTE PTR es:[edi],dx
  433852:	dec    edi
  433853:	fcom   DWORD PTR [edi+0x64]
  433856:	jb     0x433804
  433858:	pop    edx
  433859:	test   DWORD PTR [esi],esp
  43385b:	fwait
  43385c:	push   0x8f68ba25
  433861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433862:	fcomip st,st(0)
  433864:	push   es
  433865:	mov    esi,DWORD PTR ds:0x2e86f1f7
  43386b:	jg     0x43386c
  43386d:	mov    al,0xa3
  43386f:	push   0xf0ffa097
  433874:	push   es
  433875:	bound  esi,QWORD PTR [eax+0x3]
  433878:	cmp    al,BYTE PTR [ebp+0x199776]
  43387e:	jmp    0xdfdbceec
  433883:	lock push es
  433885:	sub    al,0xea
  433887:	js     0x43388c
  433889:	push   ss
  43388a:	out    0x86,al
  43388c:	(bad)  
  43388d:	mov    ch,0xe8
  43388f:	lock push es
  433891:	add    al,ch
  433893:	lea    esp,[edi-0x20f16ee]
  433899:	mov    cl,0x79
  43389b:	add    BYTE PTR [eax],al
  43389d:	add    BYTE PTR [edi+0x42],dh
  4338a0:	inc    eax
  4338a1:	jmp    0xd924b4
  4338a6:	sub    eax,0x9a00048b
  4338ab:	xchg   edi,eax
  4338ac:	test   BYTE PTR [edi-0xde],dl
  4338b2:	or     eax,edx
  4338b4:	idiv   edi
  4338b6:	pop    edx
  4338b7:	or     BYTE PTR [eax+0x85b00],bh
  4338bd:	inc    cx
  4338bf:	shr    BYTE PTR [ebx+0xc],0x35
  4338c3:	mov    ch,0xc1
  4338c5:	(bad)  
  4338c7:	add    BYTE PTR [eax-0x1cf765b7],0xd
  4338ce:	push   ebp
  4338cf:	mov    ch,0xc9
  4338d1:	shl    eax,0x3
  4338d4:	pop    es
  4338d5:	mov    dh,0x98
  4338d7:	xchg   DWORD PTR [edx+0x40],eax
  4338da:	sbb    ah,BYTE PTR [edx-0x7]
  4338dd:	fwait
  4338de:	lea    edi,[edi+0x1]
  4338e1:	add    BYTE PTR [edx],cl
  4338e3:	cmp    DWORD PTR [edi-0x64],0x2b00082c
  4338ea:	pop    ecx
  4338eb:	cmp    ecx,eax
  4338ed:	cmp    DWORD PTR [ebp+0xa000ea7],ecx
  4338f3:	cmp    DWORD PTR [edi],0xb993e578
  4338f9:	mov    ebp,DWORD PTR [ecx+0x1d01d020]
  4338ff:	outs   dx,DWORD PTR ds:[esi]
  433900:	jnp    0x4338c2
  433902:	add    BYTE PTR [eax],al
  433904:	add    BYTE PTR [edx+edi*2+0x3f],ah
  433908:	js     0x43394d
  43390a:	push   edi
  43390b:	or     bl,ch
  43390d:	fst    DWORD PTR [esi+0x4ccb0041]
  433913:	ins    BYTE PTR es:[edi],dx
  433914:	mov    ebx,ebp
  433916:	jbe    0x43394b
  433918:	(bad)  
  433919:	int    0x29
  43391b:	add    DWORD PTR [edi+0x62],0xffffff80
  43391f:	inc    edi
  433920:	pop    eax
  433921:	repz push 0x3dc0345a
  433927:	xchg   BYTE PTR [ecx-0x35],cl
  43392a:	hlt    
  43392b:	mov    bl,0x4c
  43392d:	loop   0x43390e
  43392f:	cs mov edi,0x85519cd0
  433935:	and    al,0xa2
  433937:	mov    WORD PTR [ecx-0x45],es
  43393a:	hlt    
  43393b:	mov    dl,0x4
  43393d:	mov    dl,0xc0
  43393f:	xlat   BYTE PTR ds:[ebx]
  433940:	test   esp,eax
  433942:	popf   
  433943:	arpl   WORD PTR [edi-0x4ef54811],ax
  433949:	mov    ah,0x91
  43394b:	xchg   BYTE PTR [ecx-0x45],cl
  43394e:	js     0x4339a2
  433950:	inc    esp
  433951:	aad    0x66
  433953:	add    DWORD PTR [esi+0x78],eax
  433956:	fdivp  st(5),st
  433958:	push   ebx
  43395a:	in     al,0x4b
  43395c:	js     0x4338fc
  43395e:	nop
  43395f:	std    
  433960:	pop    eax
  433961:	(bad)  
  433962:	pusha  
  433963:	jns    0x43396d
  433965:	repz push 0x6c43
  43396b:	add    BYTE PTR [esp+ebx*1],dh
  43396e:	ins    BYTE PTR es:[edi],dx
  43396f:	add    bl,dh
  433971:	(bad)  
  433973:	shl    BYTE PTR [ebp+edi*1-0x220c0002],0xc
  43397b:	test   dh,dl
  43397d:	mov    ds:0x3178f9fb,eax
  433982:	pusha  
  433983:	add    ecx,0x18
  433986:	add    eax,DWORD PTR [ebp-0x39ff27dc]
  43398c:	fcomp  st(6)
  43398e:	xor    bh,al
  433990:	pop    ecx
  433991:	loopne 0x4339bb
  433993:	mov    esi,0xe8530f23
  433998:	or     dh,BYTE PTR [edx+0x778fffd]
  43399e:	mov    dl,0x6f
  4339a0:	outs   dx,BYTE PTR ds:[esi]
  4339a1:	add    ah,BYTE PTR [esi-0x38]
  4339a4:	add    eax,DWORD PTR [eax-0x6f74a05e]
  4339aa:	push   ecx
  4339ab:	std    
  4339ac:	mov    bh,BYTE PTR [esi-0x26]
  4339af:	cmp    ch,0x16
  4339b2:	out    0xc,eax
  4339b4:	jo     0x433952
  4339b6:	xor    al,0xfd
  4339b8:	jp     0x433a04
  4339ba:	mov    DWORD PTR [eax],esi
  4339bc:	xor    ecx,DWORD PTR [esi-0x3c]
  4339bf:	shl    dh,0x69
  4339c2:	pop    DWORD PTR [ebx]
  4339c4:	jmp    0x5e06:0xf3047582
  4339cb:	inc    ebp
  4339cc:	fistp  QWORD PTR [ebp-0x4e]
  4339cf:	cmp    eax,DWORD PTR [eax]
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	ins    DWORD PTR es:[edi],dx
  4339d4:	inc    ebx
  4339d5:	out    dx,eax
  4339d6:	cld    
  4339d7:	jbe    0x43396b
  4339d9:	inc    edi
  4339da:	push   ss
  4339db:	repz push es
  4339dd:	pop    esi
  4339de:	lea    edx,[edi+0x11]
  4339e1:	out    0x3,eax
  4339e3:	(bad)  
  4339e4:	lock inc ecx
  4339e6:	mov    esp,edi
  4339e8:	push   edi
  4339e9:	pop    esi
  4339ea:	xchg   esp,eax
  4339eb:	jnp    0x4339fe
  4339ed:	out    0x3,eax
  4339ef:	jbe    0x433a6b
  4339f1:	xchg   DWORD PTR ds:0x76f06f3,edx
  4339f7:	cmc    
  4339f8:	pop    es
  4339f9:	push   edx
  4339fa:	mov    ds:0xce706e1,eax
  4339ff:	mov    eax,ds:0x870309d6
  433a04:	xchg   ecx,eax
  433a05:	jae    0x433a0a
  433a07:	repz push es
  433a09:	xchg   DWORD PTR fs:[edx-0xcfc186e],eax
  433a10:	jge    0x433a7c
  433a12:	lahf   
  433a13:	loope  0x433a1b
  433a15:	out    0x28,eax
  433a17:	jle    0x433a48
  433a19:	add    BYTE PTR [esi-0x70],ch
  433a1c:	adc    al,0x0
  433a1e:	jmp    0xb6c85a48
  433a23:	inc    esp
  433a24:	xchg   bh,al
  433a26:	loope  0x433a1f
  433a28:	add    DWORD PTR [ecx+0x11],0xfffffff2
  433a2c:	test   eax,0xc6c3ebe5
  433a31:	test   DWORD PTR [esi+0x12006114],ebx
  433a37:	add    BYTE PTR [eax],al
  433a39:	add    BYTE PTR [eax-0x7761afc8],ah
  433a3f:	xor    BYTE PTR [ebx],0xe9
  433a42:	lock add DWORD PTR [ecx-0x6b],0x79
  433a47:	inc    edi
  433a48:	pop    esp
  433a49:	jb     0x433a42
  433a4b:	imul   eax,esp,0xfffffff9
  433a4e:	dec    eax
  433a4f:	lock repz push cs
  433a52:	dec    edi
  433a53:	or     DWORD PTR [ecx],0xffffffe8
  433a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a57:	pop    edx
  433a58:	stc    
  433a59:	scas   al,BYTE PTR es:[edi]
  433a5a:	les    esi,FWORD PTR [ecx]
  433a5c:	outs   dx,DWORD PTR ds:[esi]
  433a5d:	(bad)  [ecx+0x57]
  433a60:	stc    
  433a61:	out    dx,al
  433a62:	sub    cl,ch
  433a64:	pop    edx
  433a65:	push   ebp
  433a66:	sub    BYTE PTR [edi],bh
  433a68:	je     0x433ada
  433a6a:	mov    eax,0x1bd5e75e
  433a6f:	out    dx,eax
  433a70:	stc    
  433a71:	push   0xffffff88
  433a73:	pop    esi
  433a74:	add    BYTE PTR ds:0x4d5183b1,bh
  433a7a:	ins    BYTE PTR es:[edi],dx
  433a7b:	inc    edi
  433a7c:	cmp    BYTE PTR [ebx-0x4d],ah
  433a7f:	call   0xa7bb9d7e
  433a84:	adc    ch,cl
  433a86:	lock adc DWORD PTR [ecx+0x70145],0x8765e2da
  433a91:	aad    0x3e
  433a93:	adc    BYTE PTR [ecx+0x153a00],0x0
  433a9a:	inc    ecx
  433a9b:	jl     0x433a35
  433a9d:	push   ss
  433a9e:	add    BYTE PTR [eax],al
  433aa0:	add    dl,cl
  433aa2:	add    al,0x88
  433aa4:	add    al,0xcb
  433aa6:	add    edx,DWORD PTR [edi+0x4a4a0]
  433aac:	je     0x1e449975
  433ab2:	test   BYTE PTR [eax+eax*1-0x7b7afb66],dl
  433ab9:	adc    eax,0x8a000097
  433abe:	jnp    0x433b2f
  433ac0:	push   0x855c3c11
  433ac5:	adc    ebp,DWORD PTR [ebx-0x1]
  433ac8:	mov    dl,BYTE PTR [ebp+0x1c0fb2c]
  433ace:	add    DWORD PTR [ebx],ebp
  433ad0:	rcl    cl,0x75
  433ad3:	or     al,0x33
  433ad5:	or     BYTE PTR [eax+0x783d04f6],al
  433adb:	mov    edx,0x6c53c152
  433ae0:	sub    ebx,ebx
  433ae2:	push   eax
  433ae3:	push   eax
  433ae4:	push   edi
  433ae5:	repnz jecxz 0x433b1c
  433ae8:	add    BYTE PTR [edx],bl
  433aea:	jns    0x433b2b
  433aec:	ins    BYTE PTR es:[edi],dx
  433aed:	mov    ds:0x58b5c44,eax
  433af2:	add    esp,0xed553210
  433af8:	jmp    FWORD PTR ds:0x4a330779
  433afe:	sub    edi,DWORD PTR [ecx]
  433b00:	adc    BYTE PTR [edi+0xfe7afb],dh
  433b06:	add    BYTE PTR [eax],al
  433b08:	(bad)  
  433b09:	cld    
  433b0a:	mov    eax,es
  433b0c:	sub    eax,0x4948534d
  433b11:	in     al,0xfa
  433b13:	pop    esp
  433b14:	repz pushf 
  433b16:	cmp    dl,0xf7
  433b19:	enter  0xc089,0x24
  433b1d:	and    BYTE PTR [ecx-0x75],bl
  433b20:	aaa    
  433b21:	fiadd  WORD PTR [ebx+ebx*2]
  433b24:	mov    al,0xa
  433b26:	mov    esp,ebp
  433b28:	js     0x433b3c
  433b2a:	or     al,0x2d
  433b2c:	mov    edx,0x1774d324
  433b31:	jne    0x433b76
  433b33:	sbb    al,0xd8
  433b35:	push   ds
  433b36:	imul   ebx,DWORD PTR [ebx+0x7a],0x398711a5
  433b3d:	retf   0x468c
  433b40:	jmp    0x433bb8
  433b42:	dec    ebx
  433b43:	sbb    BYTE PTR [ebx+ebx*4-0x229300d3],ch
  433b4a:	std    
  433b4b:	xchg   bl,bh
  433b4d:	jbe    0x433b94
  433b4f:	add    al,0x6a
  433b51:	mov    ch,0x1
  433b53:	xchg   DWORD PTR [ebx+0x1b488cbd],ebp
  433b59:	addr16 inc ebp
  433b5b:	sub    al,0x7a
  433b5d:	mov    ch,0x2d
  433b5f:	xchg   DWORD PTR [ebx-0x8b7733b],ebp
  433b65:	bound  eax,QWORD PTR [ebp-0x22209d0]
  433b6b:	rol    BYTE PTR [eax],0x0
  433b6e:	add    BYTE PTR [ebx-0xc800217],dh
  433b74:	fld    QWORD PTR [esi+0x4c668748]
  433b7a:	push   eax
  433b7b:	jp     0x433ba2
  433b7d:	dec    eax
  433b7e:	shl    DWORD PTR [ebx-0x63],0x1b
  433b82:	add    bl,dh
  433b84:	fdivp  st(5),st
  433b86:	push   ebx
  433b88:	cwde   
  433b89:	test   ah,al
  433b8b:	or     al,dh
  433b8d:	std    
  433b8e:	clc    
  433b8f:	in     al,0x7
  433b91:	mov    ds:0x3cc70ef9,al
  433b96:	(bad)  
  433b97:	out    dx,eax
  433b98:	push   es
  433b99:	dec    edi
  433b9a:	cli    
  433b9b:	retf   0x8ae6
  433b9e:	push   edi
  433b9f:	test   DWORD PTR [ebx],ecx
  433ba1:	out    0xc7,eax
  433ba3:	scas   eax,DWORD PTR es:[edi]
  433ba4:	shr    DWORD PTR [ebx+0x1cd3a7c8],cl
  433baa:	lea    ebx,[edi+0x420c1c92]
  433bb0:	mov    WORD PTR [eax],?
  433bb2:	jo     0x433bdb
  433bb4:	xchg   edx,eax
  433bb5:	loopne 0x433bce
  433bb7:	jo     0x433b9f
  433bb9:	(bad)  [esi+0x3e]
  433bbc:	cmp    eax,0x8bf76f5e
  433bc1:	cmp    DWORD PTR [ebx-0xf],edi
  433bc4:	sbb    DWORD PTR [esi],ebx
  433bc6:	icebp  
  433bc7:	cdq    
  433bc8:	repnz loope 0x433b57
  433bcb:	dec    ecx
  433bcc:	enter  0x2e,0x26
  433bd0:	mov    ah,BYTE PTR [ecx]
  433bd2:	xor    al,0x0
  433bd4:	add    BYTE PTR [eax],al
  433bd6:	fmul   DWORD PTR [ecx]
  433bd8:	data16 loop 0x433bc5
  433bdb:	mov    ebx,DWORD PTR [ecx]
  433bdd:	jo     0x433bc0
  433bdf:	mov    DWORD PTR [ecx],ecx
  433be1:	or     al,0xc7
  433be3:	or     esp,DWORD PTR [esi-0x6]
  433be6:	jmp    0xf19e:0x9e59eb64
  433bed:	clc    
  433bee:	sub    ah,dh
  433bf0:	mov    dl,BYTE PTR [esi+0x65]
  433bf3:	movntq QWORD PTR [edx+esi*4-0x603c9be6],mm1
  433bfb:	add    dl,BYTE PTR [eax]
  433bfd:	jno    0x433bd6
  433bff:	pop    edx
  433c00:	repnz push ebx
  433c02:	outs   dx,BYTE PTR ds:[esi]
  433c03:	dec    eax
  433c04:	jge    0xf95a66be
  433c0a:	and    al,0x92
  433c0c:	add    BYTE PTR [edi+edi*8],ah
  433c0f:	arpl   sp,ax
  433c11:	loope  0x433bc6
  433c13:	inc    edi
  433c14:	xor    al,0xe9
  433c16:	lock push es
  433c18:	add    BYTE PTR [eax],bh
  433c1a:	push   0x4360083f
  433c1f:	sub    ebp,eax
  433c21:	loope  0x433bee
  433c23:	(bad)  
  433c25:	daa    
  433c26:	push   ds
  433c27:	inc    eax
  433c28:	pop    ebx
  433c29:	stos   DWORD PTR es:[edi],eax
  433c2a:	call   0xabbaf435
  433c2f:	(bad)  
  433c31:	push   cs
  433c32:	cmp    al,0xa5
  433c34:	or     cl,ch
  433c36:	mov    ah,0xd2
  433c38:	int3   
  433c39:	sub    eax,0xac000000
  433c3e:	ror    ah,cl
  433c40:	mov    esp,0xa485f27f
  433c45:	loopne 0x433c9a
  433c47:	sub    eax,0x9a3bf22
  433c4c:	gs push edi
  433c4e:	push   es
  433c4f:	add    cl,ch
  433c51:	jo     0x433c71
  433c53:	das    
  433c54:	fsubrp st(5),st
  433c56:	xchg   esp,eax
  433c57:	add    cl,ch
  433c59:	lock arpl WORD PTR [ebx-0xb],di
  433c5d:	sbb    BYTE PTR [eax],dl
  433c5f:	and    DWORD PTR [ecx-0x10],0x6
  433c63:	add    BYTE PTR [edi-0x3df7a689],dh
  433c69:	inc    edi
  433c6a:	pop    ecx
  433c6b:	pop    es
  433c6c:	lahf   
  433c6d:	ins    DWORD PTR es:[edi],dx
  433c6e:	and    edi,edx
  433c70:	xchg   edx,eax
  433c71:	lds    esp,FWORD PTR [eax+edx*1+0x184079e9]
  433c78:	and    ch,al
  433c7a:	es jae 0x433c70
  433c7d:	push   ebp
  433c7e:	dec    eax
  433c7f:	and    BYTE PTR [ecx-0x50],ch
  433c82:	and    eax,DWORD PTR [eax]
  433c84:	pusha  
  433c85:	popf   
  433c86:	cs aaa 
  433c88:	add    ah,dl
  433c8a:	es ins DWORD PTR es:[edi],dx
  433c8c:	pop    es
  433c8d:	dec    ebp
  433c8e:	and    al,0x24
  433c90:	mov    al,ds:0x8b004819
  433c95:	or     al,0x33
  433c97:	or     DWORD PTR [esi-0x56],0x55
  433c9b:	push   0xaf1cc
  433ca0:	push   0x0
  433ca2:	add    BYTE PTR [eax],al
  433ca4:	fstp   TBYTE PTR [eax]
  433ca6:	not    ecx
  433ca8:	push   ecx
  433ca9:	jecxz  0x433d26
  433cab:	(bad)  
  433cac:	(bad)  
  433cad:	and    ebx,esi
  433caf:	jne    0x433c77
  433cb1:	cmp    eax,0xdc26b856
  433cb6:	idiv   edi
  433cb8:	add    DWORD PTR [esi],edi
  433cba:	mov    edx,0x4d918a10
  433cbf:	or     al,0x58
  433cc1:	xchg   ebx,eax
  433cc2:	jbe    0x433ce0
  433cc4:	dec    esp
  433cc5:	xchg   ebx,eax
  433cc6:	push   edi
  433cc7:	xor    al,0x32
  433cc9:	(bad)  
  433cca:	idiv   bh
  433ccc:	xor    eax,0xd185d890
  433cd1:	push   esi
  433cd2:	adc    al,0x8b
  433cd4:	pushf  
  433cd5:	xor    BYTE PTR [ebx+0x5053ee4e],al
  433cdb:	call   FWORD PTR [ebx]
  433cdd:	mov    ah,al
  433cdf:	or     BYTE PTR ds:0x5a001c25,cl
  433ce5:	or     BYTE PTR [eax],al
  433ce7:	pop    edi
  433ce8:	xchg   esp,eax
  433ce9:	xchg   ecx,eax
  433cea:	mov    ebx,0x10c6975b
  433cef:	add    BYTE PTR [edx+0x25fff7e0],dh
  433cf5:	inc    ecx
  433cf6:	push   ebp
  433cf7:	ret    0x84a
  433cfa:	int3   
  433cfb:	int3   
  433cfc:	data16 int3 
  433cfe:	int3   
  433cff:	int3   
  433d00:	inc    esi
  433d01:	int3   
  433d02:	int3   
  433d03:	int3   
  433d04:	repz mov ah,0x3d
  433d07:	dec    esp
  433d08:	add    BYTE PTR [eax],al
  433d0a:	add    BYTE PTR [ebx-0x28],ah
  433d0d:	cmp    eax,0x502e3400
  433d12:	pop    es
  433d13:	repz in eax,dx
  433d15:	std    
  433d16:	shl    BYTE PTR [ebx],0xfe
  433d19:	xchg   ebx,eax
  433d1a:	push   ds
  433d1b:	xor    ebp,esi
  433d1d:	mov    edx,0xfdf33b40
  433d22:	push   ebx
  433d24:	mov    al,0xc1
  433d26:	int3   
  433d27:	mov    edi,0x22ec8522
  433d2c:	sbb    al,0x85
  433d2e:	ins    DWORD PTR es:[edi],dx
  433d2f:	fbstp  TBYTE PTR [eax+0x73]
  433d32:	xor    al,0xf3
  433d34:	cld    
  433d35:	test   al,bh
  433d37:	es leave 
  433d39:	xchg   BYTE PTR [edx-0x31],cl
  433d3c:	push   0xee5b204e
  433d41:	std    
  433d42:	push   ebx
  433d44:	and    ch,bl
  433d46:	test   DWORD PTR [eax],edi
  433d48:	push   es
  433d49:	push   WORD PTR [edi+ebx*4]
  433d4d:	repnz into 
  433d4f:	jo     0x433d82
  433d51:	add    DWORD PTR [edi-0x3f7f25d3],eax
  433d57:	out    0xe8,al
  433d59:	push   edx
  433d5a:	mov    eax,0xfffdedf2
  433d5f:	mov    ebp,0x305be058
  433d64:	sar    BYTE PTR [ebp+0x70c5b537],0xd
  433d6b:	js     0x433cf0
  433d6d:	sbb    DWORD PTR [esi-0xe000000],esi
  433d73:	in     eax,dx
  433d74:	std    
  433d75:	jmp    DWORD PTR [eax]
  433d77:	jl     0x3baa20bf
  433d7d:	sub    al,0x7a
  433d7f:	jnp    0x433da6
  433d81:	and    eax,0x88f70698
  433d86:	mov    cl,0x2e
  433d88:	push   ds
  433d89:	cld    
  433d8a:	popf   
  433d8b:	cs pop esi
  433d8d:	dec    ecx
  433d8e:	test   DWORD PTR [edi+0x2fa33031],0xeea553af
  433d98:	and    eax,0x5ee2eae5
  433d9d:	sbb    eax,DWORD PTR ds:[esi+0x497408a3]
  433da4:	rcl    DWORD PTR [edx+esi*4+0x49],cl
  433da8:	xlat   BYTE PTR ds:[ebx]
  433da9:	add    esi,ebx
  433dab:	push   es
  433dac:	out    0x30,eax
  433dae:	mov    bl,0x41
  433db0:	pop    esi
  433db1:	fistp  WORD PTR [eax]
  433db3:	(bad)  
  433db4:	into   
  433db5:	cmp    eax,0xf8249003
  433dba:	out    0xc9,al
  433dbc:	stc    
  433dbd:	(bad)  
  433dbe:	ins    DWORD PTR es:[edi],dx
  433dbf:	imul   ecx,DWORD PTR fs:[ecx+0x7ae8eb2],0x6e
  433dc7:	cmp    DWORD PTR [ebx],edx
  433dc9:	add    DWORD PTR [ecx],esp
  433dcb:	pop    ss
  433dcc:	mov    bh,0x28
  433dce:	mov    edx,0xebebb538
  433dd3:	icebp  
  433dd4:	inc    edx
  433dd5:	cmc    
  433dd6:	add    BYTE PTR [eax],al
  433dd8:	add    BYTE PTR [esi+0x54],ch
  433ddb:	cmp    eax,DWORD PTR [ecx-0x501ecc9]
  433de1:	fild   QWORD PTR [edx]
  433de3:	pop    esi
  433de4:	inc    ecx
  433de5:	out    dx,eax
  433de6:	lea    esi,[ecx+0x222dc22f]
  433dec:	push   esp
  433ded:	mov    esp,0x4ae601ee
  433df2:	loop   0x433e52
  433df4:	dec    esi
  433df5:	or     eax,DWORD PTR [esi+0x616c082b]
  433dfb:	mov    bh,0x54
  433dfd:	je     0x433e38
  433dff:	add    ch,al
  433e01:	jecxz  0x433dc9
  433e03:	pop    edx
  433e04:	bound  edi,QWORD PTR [esi+edi*1]
  433e07:	mov    ebp,0xff2ed672
  433e0c:	cs (bad) 
  433e0e:	sbb    DWORD PTR [edx+0x19],eax
  433e11:	xchg   esp,eax
  433e12:	pop    es
  433e13:	shl    DWORD PTR [edi],0xc7
  433e16:	push   es
  433e17:	add    cl,ch
  433e19:	lock mov edx,DWORD PTR [edx+0xd]
  433e1d:	sub    dh,BYTE PTR [edi-0x2e0c1393]
  433e23:	xchg   DWORD PTR [edi],edx
  433e25:	or     eax,DWORD PTR [eax+0x2d]
  433e28:	test   eax,0x3ce38c3e
  433e2d:	mov    dl,0xd2
  433e2f:	int3   
  433e30:	cmp    al,0x7a
  433e32:	repnz test DWORD PTR [edi+ebp*8],esp
  433e36:	arpl   sp,bp
  433e38:	mov    ecx,0xeec08627
  433e3d:	add    BYTE PTR [eax],al
  433e3f:	add    BYTE PTR [ebx+ebx*8],ch
  433e42:	or     eax,0x788bf0e9
  433e47:	int    0x1d
  433e49:	loopne 0x433e54
  433e4b:	ins    DWORD PTR es:[edi],dx
  433e4c:	mov    DWORD PTR [ebx],edx
  433e4e:	add    cl,ch
  433e50:	jae    0x433eb0
  433e52:	or     al,0xe9
  433e54:	out    dx,eax
  433e55:	mov    bl,cl
  433e57:	cli    
  433e58:	lock push es
  433e5a:	jge    0x433e5d
  433e5c:	out    dx,eax
  433e5d:	push   ebp
  433e5e:	push   es
  433e5f:	push   0xffffffe8
  433e61:	or     al,BYTE PTR [eax]
  433e63:	out    0xe5,al
  433e65:	mov    dh,0xd
  433e67:	jmp    0xf27ca25c
  433e6c:	lds    eax,FWORD PTR [ecx+eax*8]
  433e6f:	out    0xf4,al
  433e71:	push   es
  433e72:	add    cl,ch
  433e74:	jnp    0x433ec4
  433e76:	or     al,0x62
  433e78:	loopne 0x433e03
  433e7a:	dec    ebx
  433e7b:	add    dl,ah
  433e7d:	mov    cs,WORD PTR [eax+0x10]
  433e80:	mov    eax,ds:0x91530445
  433e85:	cmp    bh,BYTE PTR [eax]
  433e87:	mov    DWORD PTR [edi-0x27],edx
  433e8a:	add    DWORD PTR [ebp+0x5a],0x8155ff61
  433e91:	pop    ebp
  433e92:	cmp    al,0x89
  433e94:	iret   
  433e95:	fiadd  DWORD PTR [ecx+0x45632255]
  433e9b:	loopne 0x433ee2
  433e9d:	dec    edi
  433e9e:	fadd   DWORD PTR [eax]
  433ea0:	fiadd  DWORD PTR [eax+eax*1]
  433ea3:	add    DWORD PTR [eax],0x0
  433ea6:	add    BYTE PTR [edx-0x1578f90b],ah
  433eac:	clc    
  433ead:	(bad)  
  433eae:	dec    DWORD PTR [ebp-0x462b82d1]
  433eb4:	dec    ecx
  433eb5:	add    BYTE PTR [ebx-0x3f811ceb],cl
  433ebb:	out    0xdf,eax
  433ebd:	rol    BYTE PTR [edi],0xbe
  433ec0:	add    al,0x0
  433ec2:	add    BYTE PTR [ebx-0x65fff629],al
  433ec8:	mov    esi,esi
  433eca:	adc    BYTE PTR [ecx+0xe7d7b2a],bl
  433ed0:	or     eax,DWORD PTR [edi]
  433ed2:	test   BYTE PTR [ecx-0x6],al
  433ed5:	(bad)  
  433ed6:	dec    DWORD PTR [ebp+0x5ffefa9e]
  433edc:	lock or esi,0xffffffd9
  433ee0:	jmp    0x5582:0xe314833a
  433ee7:	and    cl,BYTE PTR [eax]
  433ee9:	fadd   DWORD PTR [ebx-0x219604f4]
  433eef:	hlt    
  433ef0:	dec    ebx
  433ef1:	or     BYTE PTR [edx],al
  433ef3:	pushw  ss
  433ef5:	jns    0x433ef2
  433ef7:	repz fdivr DWORD PTR [edx+0x0]
  433efb:	repz jp 0x433f35
  433efe:	data16 repz jae 0x433eff
  433f02:	gs repz cmc 
  433f05:	dec    esp
  433f06:	pop    ss
  433f07:	repz in eax,dx
  433f09:	jl     0x433f4c
  433f0b:	add    BYTE PTR [eax],al
  433f0d:	add    bl,bh
  433f0f:	add    DWORD PTR [ebx],0xffffff8b
  433f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433f13:	mov    ecx,0xd1ae8767
  433f18:	jp     0x433f6b
  433f1a:	jmp    0x433f3a
  433f1c:	push   edx
  433f1d:	call   0x4115cc
  433f22:	push   0xc82dec03
  433f27:	push   esi
  433f28:	inc    esi
  433f29:	sbb    BYTE PTR [eax],ah
  433f2b:	mov    al,ds:0xedf201c6
  433f30:	std    
  433f31:	dec    edx
  433f33:	pop    esi
  433f34:	adc    al,0x0
  433f36:	repz push esp
  433f38:	inc    esi
  433f39:	and    BYTE PTR [eax+esi*1-0x120cffec],ch
  433f40:	std    
  433f41:	xor    BYTE PTR [ebx+0x33c106e1],0x9e
  433f48:	out    dx,al
  433f49:	stc    
  433f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f4b:	pop    eax
  433f4c:	test   DWORD PTR [ecx-0x15],0x8283feee
  433f53:	in     eax,dx
  433f54:	std    
  433f55:	(bad)  
  433f56:	cld    
  433f57:	ja     0x433f1b
  433f59:	mov    edi,0xc57ae593
  433f5e:	mov    dl,0x46
  433f60:	cmc    
  433f61:	cld    
  433f62:	mov    bl,0xdc
  433f64:	shl    DWORD PTR [edi-0x211f4],cl
  433f6a:	pop    esp
  433f6b:	push   ds
  433f6c:	mov    dh,cl
  433f6e:	out    0x98,al
  433f70:	jp     0x433f3f
  433f72:	add    BYTE PTR [eax],al
  433f74:	add    BYTE PTR [ebx+0x6],dh
  433f77:	add    eax,0xefdc7302
  433f7c:	ja     0x433f73
  433f7e:	mov    ebp,DWORD PTR [ebx+edi*8-0x35f0c689]
  433f85:	mov    bl,0xfe
  433f87:	stos   BYTE PTR es:[edi],al
  433f88:	js     0x433f3d
  433f8a:	push   es
  433f8b:	adc    BYTE PTR [ecx],bh
  433f8d:	hlt    
  433f8e:	push   es
  433f8f:	out    0x7e,eax
  433f91:	mov    dl,0x2a
  433f93:	sub    dh,bl
  433f95:	out    dx,eax
  433f96:	mov    ebp,DWORD PTR [esi+0x660f2c85]
  433f9c:	loop   0x433f8d
  433f9e:	sub    DWORD PTR [eax+0x54c671fc],0x2e
  433fa5:	ins    BYTE PTR es:[edi],dx
  433fa6:	dec    edi
  433fa7:	or     ebp,DWORD PTR [esi+0x3e7deec]
  433fad:	dec    ebp
  433fae:	pop    es
  433faf:	xchg   esi,eax
  433fb0:	out    0x55,al
  433fb2:	pop    es
  433fb3:	cmp    eax,0xfb366c04
  433fb8:	fisttp DWORD PTR [ebp-0x6]
  433fbb:	out    0x3,al
  433fbd:	outs   dx,BYTE PTR ds:[esi]
  433fbe:	dec    esp
  433fbf:	fistp  QWORD PTR [eax+eiz*1-0x21]
  433fc3:	test   al,0xdd
  433fc5:	jmp    0x433f9c
  433fc7:	xchg   esi,eax
  433fc8:	test   esi,ecx
  433fca:	or     DWORD PTR [esi-0x43],esp
  433fcd:	in     al,dx
  433fce:	(bad)
  433fd2:	dec    eax
  433fd3:	mov    bh,0x7a
  433fd5:	cli    
  433fd6:	sbb    DWORD PTR [esi],edi
  433fd8:	xor    eax,0x81000000
  433fdd:	lock dec esp
  433fdf:	adc    al,0xf3
  433fe1:	push   es
  433fe2:	push   cs
  433fe3:	mov    esp,0x575ec401
  433fe8:	jnp    0x433fda
  433fea:	sbb    BYTE PTR [ebx+esi*8],dl
  433fed:	push   es
  433fee:	outs   dx,BYTE PTR ds:[esi]
  433fef:	push   edi
  433ff0:	sti    
  433ff1:	lds    eax,FWORD PTR [eax]
  433ff3:	stos   DWORD PTR es:[edi],eax
  433ff4:	call   0xf0ecb33b
  433ff9:	adc    DWORD PTR [ebx+0x21],0x28
  433ffd:	(bad)  
  433ffe:	adc    cl,ch
  434000:	lock pop ebx
  434002:	cli    
  434003:	stc    
  434004:	(bad)  
  434005:	cld    
  434006:	jl     0x433f94
  434008:	inc    esp
  434009:	pop    es
  43400a:	or     DWORD PTR [ebp+0x1],ebp
  43400d:	push   cs
  43400e:	add    cl,ch
  434010:	repz cwde 
  434012:	(bad)  
  434013:	cmc    
  434014:	fstp   st(2)
  434016:	test   DWORD PTR [edi],ebx
  434018:	ds out 0x3e,eax
  43401b:	push   0x3a
  43401d:	ja     0xd21f5757
  434023:	push   0x2
  434025:	imul   DWORD PTR [ebp-0x51]
  434028:	jns    0x434069
  43402a:	adc    BYTE PTR [ecx-0x21],ch
  43402d:	push   cs
  43402e:	or     DWORD PTR [esp+eiz*2-0x9],esp
  434032:	(bad)  
  434033:	call   0xc943dc13
  434038:	lock push es
  43403a:	je     0x434032
  43403c:	dec    edi
  43403d:	dec    edx
  43403e:	or     BYTE PTR [esi+0x30000000],ah
  434044:	inc    DWORD PTR [ebx+0x1c]
  434047:	aaa    
  434048:	pop    es
  434049:	out    0xe,eax
  43404b:	fild   WORD PTR [esi]
  43404d:	add    BYTE PTR [edx+0x3b],dh
  434050:	daa    
  434051:	sub    DWORD PTR [ecx-0x5d7afae4],0xffffffb1
  434058:	in     eax,0x8
  43405a:	push   0xffffff91
  43405c:	fisttp QWORD PTR [eax+0x10478bf1]
  434062:	jmp    0xdd434755
  434067:	loop   0x433ff7
  434069:	pop    ebx
  43406a:	cmp    eax,0x8e3b1
  43406f:	inc    eax
  434070:	add    eax,DWORD PTR [ebp+0x5561b655]
  434076:	in     eax,dx
  434077:	ror    DWORD PTR [esi+0x18],1
  43407a:	push   edx
  43407b:	jp     0x43403e
  43407d:	out    dx,al
  43407e:	pop    ss
  43407f:	pop    edx
  434080:	or     DWORD PTR [ebx+0x3f611255],eax
  434086:	sbb    BYTE PTR [ecx],bl
  434088:	retf   0xf62b
  43408b:	or     eax,0x1afffa0f
  434090:	or     ebx,esp
  434092:	add    eax,0x7320d799
  434097:	sub    BYTE PTR [edx+0x60afc75],al
  43409d:	test   BYTE PTR [eax+0xf00090a],dl
  4340a3:	pop    esp
  4340a4:	or     bh,dh
  4340a6:	dec    ebp
  4340a7:	add    BYTE PTR [eax],al
  4340a9:	add    BYTE PTR [esi],ah
  4340ab:	popa   
  4340ac:	(bad)  
  4340ad:	shr    DWORD PTR [edx],cl
  4340af:	dec    eax
  4340b0:	jnp    0x434078
  4340b2:	loop   0x43410f
  4340b4:	dec    ebp
  4340b5:	clc    
  4340b6:	fnop   
  4340b8:	jnp    0x4340b8
  4340ba:	jmp    0x7d23:0xd8bd658
  4340c1:	shr    dh,0x7
  4340c4:	sbb    DWORD PTR [eax-0x32],0xca103fd5
  4340cb:	push   es
  4340cc:	add    BYTE PTR [eax],al
  4340ce:	fdivp  st(4),st
  4340d0:	xchg   DWORD PTR [ebp-0x7a],ebx
  4340d3:	pusha  
  4340d4:	ret    
  4340d5:	mov    ecx,DWORD PTR [ecx+0x4b08e1c2]
  4340db:	rcl    DWORD PTR [eax],0xc1
  4340de:	jno    0x4340eb
  4340e0:	bound  eax,QWORD PTR [edi+eax*1]
  4340e3:	dec    esi
  4340e4:	in     al,dx
  4340e5:	mov    BYTE PTR [edi-0x19],dl
  4340e8:	mov    BYTE PTR [ebp-0xd],dl
  4340eb:	inc    ebx
  4340ec:	jl     0x434149
  4340ee:	test   BYTE PTR [ecx+0x39],ch
  4340f1:	sbb    bl,al
  4340f3:	jle    0x4340ca
  4340f5:	jle    0x4340f3
  4340f7:	in     eax,dx
  4340f8:	std    
  4340f9:	test   dh,al
  4340fb:	adc    eax,0xe0fb417b
  434100:	(bad)  
  434101:	sub    eax,0xfd012d45
  434106:	inc    esp
  434107:	out    dx,al
  434108:	std    
  434109:	in     al,0xf6
  43410b:	jo     0x4340f7
  43410d:	adc    BYTE PTR [eax],al
  43410f:	add    BYTE PTR [eax],al
  434111:	ror    bh,0x7e
  434114:	jnp    0x434145
  434116:	out    dx,al
  434117:	cli    
  434118:	add    DWORD PTR [edi],0xffffffbe
  43411b:	std    
  43411c:	(bad)  
  43411d:	in     al,dx
  43411e:	sbb    edi,esi
  434120:	clc    
  434121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434122:	jmp    0xce640b9d
  434127:	aas    
  434128:	jge    0x434157
  43412a:	(bad)  
  43412b:	jl     0x434180
  43412d:	sti    
  43412e:	lock lds edi,FWORD PTR [ebp-0xb]
  434132:	(bad)  [edi-0x26]
  434135:	js     0x434163
  434137:	and    al,0x83
  434139:	mov    bl,0x11
  43413b:	adc    al,BYTE PTR [ebp-0x61b9158]
  434141:	repz in eax,dx
  434143:	std    
  434144:	xchg   BYTE PTR [ebx],bh
  434146:	(bad)  
  434147:	jbe    0x434192
  434149:	adc    ebx,DWORD PTR [ecx-0x42]
  43414c:	mov    edi,0x3f7ce5cb
  434151:	out    0x74,eax
  434153:	inc    edx
  434154:	adc    bl,dh
  434156:	out    dx,eax
  434157:	std    
  434158:	call   FWORD PTR [edi]
  43415a:	mov    esp,0xae8f5b75
  43415f:	(bad)  
  434160:	or     BYTE PTR [ecx],cl
  434162:	lock adc BYTE PTR [ebx-0x61],0x6
  434167:	outs   dx,DWORD PTR ds:[esi]
  434168:	push   eax
  434169:	cwde   
  43416a:	(bad)  
  43416b:	mov    ds:0x3f372d0b,al
  434170:	cli    
  434171:	jecxz  0x434179
  434173:	out    0x7a,eax
  434175:	add    BYTE PTR [eax],al
  434177:	add    al,al
  434179:	fidiv  WORD PTR [eax+0x46]
  43417c:	or     ebx,DWORD PTR [eax]
  43417e:	push   ds
  43417f:	xor    ah,BYTE PTR [ecx-0x3d]
  434182:	jmp    0xb2f6:0xe706f307
  434189:	mul    dh
  43418b:	pop    es
  43418c:	repz push es
  43418e:	xchg   ebx,eax
  43418f:	fs mov esi,0xd572f7dc
  434195:	xchg   DWORD PTR [edi+ebp*8-0x7294f40d],ecx
  43419c:	cli    
  43419d:	push   es
  43419e:	out    0xfe,eax
  4341a0:	bound  ecx,QWORD PTR [eax]
  4341a2:	repnz aas 
  4341a4:	pop    ss
  4341a5:	(bad)  
  4341a6:	sbb    edx,edx
  4341a8:	adc    ecx,DWORD PTR [eax+0x66]
  4341ab:	(bad)  
  4341ac:	sti    
  4341ad:	lea    esi,[esp+ebp*8]
  4341b0:	(bad)  
  4341b1:	mov    dl,0x66
  4341b3:	out    dx,al
  4341b4:	jecxz  0x43420e
  4341b6:	test   eax,0x70273279
  4341bb:	dec    ebp
  4341bc:	xor    eax,DWORD PTR [edi+eiz*4+0xf8fde78]
  4341c3:	sbb    dl,ah
  4341c5:	inc    edx
  4341c6:	xlat   BYTE PTR ds:[ebx]
  4341c7:	add    ecx,ebp
  4341c9:	(bad)  
  4341cb:	ja     0x4341b6
  4341cd:	mov    ?,WORD PTR [eax+eiz*8]
  4341d0:	jl     0x4341c0
  4341d2:	fistp  WORD PTR [ecx-0x4b]
  4341d5:	mov    ebx,DWORD PTR [eax+eiz*8]
  4341d8:	jnp    0x434216
  4341da:	xchg   esp,eax
  4341db:	jns    0x4341dd
  4341dd:	add    BYTE PTR [eax],al
  4341df:	inc    edx
  4341e0:	call   DWORD PTR [edi]
  4341e2:	push   edx
  4341e3:	mov    edi,DWORD PTR [eax+eax*1-0x21]
  4341e7:	lock push es
  4341e9:	test   DWORD PTR [edi+ebx*4],edx
  4341ec:	add    BYTE PTR [ecx+0x1],0xc2
  4341f0:	mov    bl,0x2d
  4341f2:	push   edi
  4341f3:	call   0xc085:0xd0ae850d
  4341fa:	aad    0xf7
  4341fc:	mov    DWORD PTR [eax-0x27],0xe90006f0
  434203:	aaa    
  434204:	or     BYTE PTR [ebx],al
  434206:	jmp    0xa73448fb
  43420b:	loopne 0x434213
  43420d:	add    al,0xe9
  43420f:	lock je 0x4a398c
  434216:	bound  ebp,QWORD PTR [esi+0x1c9c8546]
  43421c:	add    BYTE PTR [ebx-0x3],0xdb
  434220:	cdq    
  434221:	jb     0x434207
  434223:	fwait
  434224:	cdq    
  434225:	xchg   DWORD PTR [esp+ebx*1+0x74dec086],esp
  43422c:	ins    BYTE PTR es:[edi],dx
  43422d:	add    cl,ch
  43422f:	lock or DWORD PTR [ecx+0x9],0x74
  434234:	ret    0x1774
  434237:	jp     0x43427a
  434239:	adc    BYTE PTR [eax+0x2d],ah
  43423c:	mov    bl,0x83
  43423e:	mov    al,0x5c
  434240:	adc    eax,DWORD PTR [ebp+0x16]
  434246:	pop    ss
  434247:	test   BYTE PTR [esi-0x23],al
  43424a:	sti    
  43424b:	dec    edi
  43424c:	inc    eax
  43424d:	bound  esp,QWORD PTR [edx]
  43424f:	inc    DWORD PTR [esi-0x3e2424cc]
  434255:	loop   0x4342d1
  434257:	push   esp
  434258:	add    eax,edx
  43425a:	sbb    eax,0x2bab85e3
  43425f:	ss clc 
  434261:	add    BYTE PTR [edx],cl
  434263:	pusha  
  434264:	cmp    eax,0xe44089d4
  434269:	push   edx
  43426a:	cli    
  43426b:	mov    edx,0xeb1dea9c
  434270:	add    DWORD PTR [ebp+0x26],0x5f
  434274:	dec    ebp
  434275:	clc    
  434276:	or     edx,eax
  434278:	or     al,0xf7
  43427a:	inc    ebp
  43427b:	cmc    
  43427c:	inc    DWORD PTR [ecx]
  43427e:	pop    edx
  43427f:	add    eax,0x30e11a74
  434284:	hlt    
  434285:	mov    edx,DWORD PTR [edi+0x424f83ed]
  43428b:	aaa    
  43428c:	push   eax
  43428d:	push   ecx
  43428e:	mov    dl,0xd2
  434290:	or     eax,0x4d5e5a00
  434295:	clc    
  434296:	ret    
  434297:	inc    edx
  434298:	sbb    BYTE PTR [ebx+0x4521d187],cl
  43429e:	inc    BYTE PTR [esi]
  4342a0:	shr    BYTE PTR [ecx],1
  4342a2:	push   ebp
  4342a3:	inc    ebp
  4342a4:	adc    DWORD PTR [ebp-0xe],0x407786
  4342ab:	add    BYTE PTR [eax],al
  4342ad:	or     bl,dl
  4342af:	jle    0x434245
  4342b1:	sub    al,0x5
  4342b3:	add    bh,al
  4342b5:	aad    0x42
  4342b7:	add    BYTE PTR [eax],al
  4342b9:	or     al,BYTE PTR ds:0x50407bf
  4342bf:	add    BYTE PTR [eax],al
  4342c1:	lds    eax,FWORD PTR [eax+edx*1+0x0]
  4342c5:	loop   0x4342cb
  4342c7:	add    BYTE PTR [edi],cl
  4342c9:	push   esi
  4342ca:	test   BYTE PTR [eax],al
  4342cc:	add    dl,cl
  4342ce:	xor    DWORD PTR [ebp-0x4],0x707dddda
  4342d5:	mov    esp,0x8a330004
  4342da:	pop    esi
  4342db:	inc    ecx
  4342dc:	add    bl,dh
  4342de:	loopne 0x43428f
  4342e0:	or     al,0x3
  4342e2:	cs jnp 0x434328
  4342e5:	lahf   
  4342e6:	push   ebp
  4342e7:	cmp    eax,0xe02b6a20
  4342ec:	xor    DWORD PTR [ebx+0x3b8524da],0xffffffca
  4342f3:	jl     0x434340
  4342f5:	lahf   
  4342f6:	imul   edi,DWORD PTR [ebx+0x3554e474],0x40
  4342fd:	mov    eax,0xfc6d1da5
  434302:	fs dec edi
  434304:	aam    0x79
  434306:	stos   DWORD PTR es:[edi],eax
  434307:	(bad)  [eax+0x41e6d3f7]
  43430d:	mov    bl,0x64
  43430f:	dec    edi
  434310:	clc    
  434311:	add    BYTE PTR [eax],al
  434313:	add    BYTE PTR [eax-0x55],dh
  434316:	fld    DWORD PTR [eax]
  434318:	mov    edi,0x47437ad5
  43431d:	in     eax,0x40
  43431f:	cld    
  434320:	shl    DWORD PTR [eax],0xed
  434323:	inc    ecx
  434324:	add    ebp,esi
  434326:	add    eax,DWORD PTR [eax]
  434328:	repz pop ecx
  43432a:	push   cs
  43432b:	test   DWORD PTR [esi+0x1b537ad1],ebp
  434331:	gs cmp eax,0x4d7ba218
  434337:	call   0x411dda
  43433c:	push   0xac87ec13
  434341:	aad    0x7a
  434343:	inc    ebx
  434344:	out    0x6,eax
  434346:	aas    
  434347:	cld    
  434348:	lock jge 0x4342cd
  43434b:	jnp    0x434324
  43434d:	in     eax,dx
  43434e:	jl     0x4343a3
  434350:	fneni(8087 only) 
  434352:	xor    bl,0xfe
  434355:	in     eax,dx
  434356:	std    
  434357:	in     al,0xf5
  434359:	push   es
  43435a:	outs   dx,BYTE PTR ds:[esi]
  43435b:	inc    edx
  43435c:	adc    eax,DWORD PTR [edx-0x400d9059]
  434362:	daa    
  434363:	or     bl,dh
  434365:	push   es
  434366:	out    0x3,eax
  434368:	mov    dl,0x3f
  43436a:	daa    
  43436b:	add    al,0xf3
  43436d:	push   es
  43436e:	out    0xc2,eax
  434370:	bnd jmp esi
  434373:	add    esi,ebx
  434375:	iret   
  434376:	and    dl,BYTE PTR [eax+eax*1]
  434379:	add    BYTE PTR [eax],al
  43437b:	repz mul dh
  43437e:	add    ebp,edx
  434380:	sub    BYTE PTR [edi+0x3],0xf3
  434384:	push   es
  434385:	pushw  0x66f
  434389:	fidivr DWORD PTR [edi-0x5c]
  43438c:	or     edi,esp
  43438e:	add    ecx,DWORD PTR [esi]
  434390:	(bad)  
  434391:	ins    BYTE PTR es:[edi],dx
  434392:	pop    edi
  434393:	sysret 
  434395:	loop   0x434348
  434397:	push   esi
  434399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43439a:	jl     0x43434c
  43439c:	shr    BYTE PTR [esi+0x42],cl
  43439f:	adc    ecx,DWORD PTR [esi-0x398f2054]
  4343a5:	fwait
  4343a6:	and    al,0x76
  4343a8:	dec    esi
  4343a9:	ret    
  4343aa:	jl     0x434364
  4343ac:	mov    dl,0x6c
  4343ae:	mov    esp,0x3a6defa7
  4343b3:	mov    bl,0x1b
  4343b5:	lahf   
  4343b6:	sbb    ebx,DWORD PTR [esi+0x1f505e07]
  4343bc:	mov    WORD PTR [eax+eiz*8],gs
  4343bf:	imul   eax,DWORD PTR [edx],0xffffffed
  4343c2:	call   0x4fa18a79
  4343c7:	jmp    0x434353
  4343c9:	dec    esp
  4343ca:	loopne 0x4343bf
  4343cc:	pop    edx
  4343cd:	out    dx,eax
  4343ce:	jl     0x434400
  4343d0:	(bad)  
  4343d2:	xlat   BYTE PTR ds:[ebx]
  4343d4:	pop    ecx
  4343d5:	add    BYTE PTR [esi-0x3e],dh
  4343d8:	dec    eax
  4343d9:	adc    cl,ch
  4343db:	out    dx,al
  4343dc:	push   es
  4343dd:	add    BYTE PTR ds:0xe2000000,bl
  4343e3:	mov    ecx,DWORD PTR [ebx-0x6b]
  4343e6:	ss cmp bh,al
  4343e9:	bound  esi,QWORD PTR [edx]
  4343eb:	out    dx,eax
  4343ec:	dec    esi
  4343ed:	cmp    edi,DWORD PTR [edi]
  4343ef:	fbld   TBYTE PTR [ebx-0x7af90f23]
  4343f5:	adc    al,0x87
  4343f7:	mov    es,WORD PTR [ecx-0x2f]
  4343fa:	cmovp  esi,esp
  4343fd:	rol    ch,0xd2
  434400:	std    
  434401:	cmp    BYTE PTR [esi+0x52],dh
  434404:	in     al,0xe9
  434406:	stc    
  434407:	cmp    eax,edi
  434409:	out    0xed,al
  43440b:	dec    ecx
  43440c:	or     ebp,ecx
  43440e:	lock jmp 0x43441b
  434411:	jb     0x4343c5
  434413:	sub    DWORD PTR es:[ecx],0xffffffe3
  434417:	pop    es
  434418:	shr    DWORD PTR [ecx-0x16fff914],0xf0
  43441f:	mov    DWORD PTR [ecx],0x6f0f1
  434425:	push   ss
  434426:	mov    dl,0xf6
  434428:	(bad)  
  434429:	jmp    0xd16f:0xcc7406f0
  434430:	adc    BYTE PTR [edx-0x8],bh
  434433:	adc    DWORD PTR [ebp+0x6f0e9],0xd2946a
  43443d:	fiadd  WORD PTR [ebp+eax*1-0xf16f5]
  434444:	mov    cl,0xeb
  434446:	add    BYTE PTR [eax],al
  434448:	add    BYTE PTR [ebx],cl
  43444a:	inc    edx
  43444b:	cld    
  43444c:	bound  ebp,QWORD PTR [edx+0x6e2be0c3]
  434452:	enter  0x8,0x63
  434456:	inc    ebp
  434457:	clc    
  434458:	add    edx,DWORD PTR [edx+0x810f68a]
  43445e:	rol    DWORD PTR [edi],0xb7
  434461:	in     eax,0x2
  434463:	xor    ebx,ecx
  434465:	lds    edx,FWORD PTR [ebx+esi*8-0x5]
  434469:	push   ebp
  43446a:	fisubr WORD PTR [ebx]
  43446c:	fcmovne st,st(1)
  43446e:	xlat   BYTE PTR ds:[ebx]
  43446f:	add    DWORD PTR [edi-0x46],0x54
  434473:	shl    BYTE PTR [esp+edi*4+0x52],0x47
  434478:	adc    BYTE PTR [ebx-0x20],cl
  43447b:	add    DWORD PTR [ebx+0x4881087b],eax
  434481:	inc    esi
  434482:	push   edx
  434483:	dec    edi
  434484:	and    ch,cl
  434486:	dec    ebx
  434487:	xor    BYTE PTR [ecx],al
  434489:	mov    cl,BYTE PTR [ecx]
  43448b:	add    BYTE PTR [edx+0x5a],ch
  43448e:	xor    eax,DWORD PTR [eax]
  434490:	push   0x5a
  434492:	mov    cl,0xfe
  434494:	adc    ecx,DWORD PTR [edx+0x9]
  434497:	or     DWORD PTR [ebp+0x62],0x52
  43449b:	dec    ebp
  43449c:	clc    
  43449d:	rol    DWORD PTR [esi+0x18],cl
  4344a0:	mov    DWORD PTR [ebx+0x4107bf19],ebx
  4344a6:	or     DWORD PTR [eax],eax
  4344a8:	add    bl,ah
  4344aa:	sbb    eax,0xc
  4344af:	add    BYTE PTR [edx],bl
  4344b1:	mov    dh,dh
  4344b3:	and    BYTE PTR [ecx-0x98284d5],cl
  4344b9:	or     DWORD PTR [edi],eax
  4344bb:	test   BYTE PTR [ecx+0x15fff9dd],dl
  4344c1:	xchg   edi,eax
  4344c2:	cli    
  4344c3:	(bad)  
  4344c4:	addr16 in eax,dx
  4344c6:	or     esi,0x39
  4344c9:	jmp    0x5582:0xd24c833a
  4344d0:	repz mov ch,0xfd
  4344d3:	xlat   BYTE PTR ds:[ebx]
  4344d4:	jo     0x43449a
  4344d6:	and    al,0x6e
  4344d8:	mov    ebp,0xb085b559
  4344dd:	lahf   
  4344de:	in     al,0x10
  4344e0:	jb     0x4344a1
  4344e2:	add    al,0xf9
  4344e4:	repz (bad) 
  4344e7:	(bad)  
  4344e8:	push   0xebe8c3a1
  4344ed:	sahf   
  4344ee:	jecxz  0x4344f8
  4344f0:	(bad)  
  4344f1:	fucom  st(2)
  4344f3:	add    bl,dh
  4344f5:	loopne 0x4344bb
  4344f7:	test   DWORD PTR [esi],ebp
  4344f9:	(bad)  
  4344fa:	(bad)  
  4344fb:	in     eax,0xfb
  4344fd:	loopne 0x4344bd
  4344ff:	xchg   DWORD PTR [esi+esi*4],esi
  434502:	jl     0x434543
  434504:	ret    
  434505:	nop
  434506:	(bad)  
  434507:	sub    eax,0x5f92585
  43450c:	repz (bad) 
  43450f:	jl     0x4344fd
  434511:	jmp    0x434e13
  434516:	add    BYTE PTR [edi+0x44],ch
  434519:	cmc    
  43451a:	call   FWORD PTR [eax+edi*4-0x3]
  43451e:	gs repz mov bh,0xfd
  434522:	out    0xbe,eax
  434524:	jmp    0x434523
  434526:	(bad)  
  434527:	js     0x4345a4
  434529:	cmc    
  43452a:	xchg   BYTE PTR [ebp+eax*1+0x59033e7b],dh
  434531:	dec    edi
  434532:	clc    
  434533:	xor    al,0xe5
  434535:	idiv   bh
  434537:	and    al,0xde
  434539:	jle    0x4345b6
  43453b:	out    dx,eax
  43453c:	loop   0x434530
  43453e:	xor    edi,0xffffffe1
  434541:	std    
  434542:	push   DWORD PTR [eax+0x5b]
  434545:	icebp  
  434546:	add    esp,esi
  434548:	imul   ecx,DWORD PTR [esi],0xe706f30c
  43454e:	cmp    BYTE PTR [edx+0xa],0xe7
  434552:	outs   dx,DWORD PTR ds:[esi]
  434553:	pop    es
  434554:	and    BYTE PTR [ecx-0x49f43b7e],0xda
  43455b:	push   ss
  43455c:	(bad)  
  43455d:	stos   BYTE PTR es:[edi],al
  43455e:	(bad)  
  43455f:	inc    BYTE PTR [esi]
  434561:	out    0x3,eax
  434563:	aam    0x70
  434565:	fiadd  WORD PTR [ebx]
  434567:	xrelease xchg DWORD PTR [ecx-0x71deb1fe],ebp
  43456e:	std    
  43456f:	imul   ebp,DWORD PTR [edi-0x19],0x6606f303
  434576:	push   0x7fda06a7
  43457b:	add    BYTE PTR [eax],al
  43457d:	add    BYTE PTR [edi+edi*8-0x6315fc1a],bh
  434584:	in     eax,0xe6
  434586:	cmp    bl,dl
  434588:	pop    esi
  434589:	mov    ch,0xb6
  43458b:	out    0x25,al
  43458d:	xor    DWORD PTR [ecx+0x7b506ffe],0x7
  434594:	aas    
  434595:	sub    BYTE PTR [ecx+0x7],0xd5
  434599:	lds    ebp,FWORD PTR [esi-0x41]
  43459c:	cmp    dl,bl
  43459e:	jbe    0x434567
  4345a0:	data16 in al,0x54
  4345a3:	mov    BYTE PTR [edi+0x2],al
  4345a6:	je     0x4345eb
  4345a8:	jmp    0x43452c
  4345aa:	dec    ebx
  4345ab:	pop    es
  4345ac:	mov    dl,0x4e
  4345ae:	cmp    ch,BYTE PTR [edx]
  4345b0:	ins    BYTE PTR es:[edi],dx
  4345b1:	push   ebx
  4345b2:	cmovs  esp,edi
  4345b5:	les    edx,FWORD PTR [esi]
  4345b7:	or     BYTE PTR [edx],ch
  4345b9:	(bad)  
  4345ba:	stc    
  4345bb:	push   es
  4345bc:	out    0x3,eax
  4345be:	sahf   
  4345bf:	in     al,0xe6
  4345c1:	(bad)  
  4345c3:	jmp    esi
  4345c5:	add    esi,DWORD PTR [esi-0x35]
  4345c8:	add    BYTE PTR [ecx],al
  4345ca:	mov    ebp,edx
  4345cc:	stc    
  4345cd:	out    dx,al
  4345ce:	jb     0x43461f
  4345d0:	or     al,0xef
  4345d2:	aaa    
  4345d3:	add    eax,0x6f0e90d
  4345d8:	jae    0x4345df
  4345da:	mov    al,0xec
  4345dc:	(bad)  
  4345dd:	imul   eax,ebp,0x46e8d4
  4345e3:	add    BYTE PTR [eax],al
  4345e5:	fcmovbe st,st(2)
  4345e7:	stc    
  4345e8:	test   al,0xaa
  4345ea:	rol    edx,1
  4345ec:	out    dx,al
  4345ed:	loopne 0x4345f5
  4345ef:	add    cl,ch
  4345f1:	jae    0x4345d0
  4345f3:	std    
  4345f4:	(bad)  
  4345f5:	fisttp WORD PTR [ebx]
  4345f7:	add    cl,ch
  4345f9:	sub    eax,DWORD PTR [esi+0x8]
  4345fc:	scas   al,BYTE PTR es:[edi]
  4345fd:	das    
  4345fe:	out    dx,eax
  4345ff:	inc    ebx
  434600:	adc    al,0x37
  434602:	pop    es
  434603:	shr    esi,0xed
  434606:	push   es
  434607:	add    cl,ch
  434609:	mov    cl,0xec
  43460b:	(bad)  
  43460c:	imul   ebx,DWORD PTR [ebp+0x7974e8d4],0x3d72f9d2
  434616:	push   esp
  434617:	(bad)  
  434619:	or     esp,edx
  43461b:	int    0x42
  43461d:	jb     0x4345ec
  43461f:	and    dl,bl
  434621:	adc    dl,BYTE PTR [ebx+edi*2+0x45]
  434625:	out    dx,eax
  434626:	inc    DWORD PTR [ebx-0x62db5fe]
  43462c:	out    0x96,al
  43462e:	sar    edx,1
  434630:	pushf  
  434631:	push   esp
  434632:	mov    edx,cs
  434634:	cmp    cl,BYTE PTR [edi+0x11]
  434637:	jge    0x434660
  434639:	das    
  43463a:	mov    DWORD PTR [ebx+0x11],edx
  43463d:	repnz scas al,BYTE PTR es:[edi]
  43463f:	jge    0x434650
  434641:	xlat   BYTE PTR ds:[ebx]
  434642:	pusha  
  434643:	fiadd  DWORD PTR [eax]
  434645:	mov    eax,ds:0xc3838f
  43464a:	add    BYTE PTR [eax],al
  43464c:	add    eax,0xfdff1db5
  434651:	add    eax,0xfaf3c100
  434656:	xor    al,cl
  434658:	std    
  434659:	push   eax
  43465a:	adc    edi,edx
  43465c:	int    0xea
  43465e:	sub    ebx,ebx
  434660:	or     ecx,esp
  434662:	jnp    0x4346e1
  434664:	mov    esi,0xa4782d3
  434669:	xchg   esp,eax
  43466a:	dec    DWORD PTR ds:0xf0005da
  434670:	push   esi
  434671:	in     al,0x2
  434673:	add    dl,cl
  434675:	xchg   edx,eax
  434676:	dec    DWORD PTR [esi]
  434678:	retf   0x5
  43467b:	mov    edx,ebp
  43467d:	dec    edx
  43467e:	add    DWORD PTR [ebp-0x7a],0x160fc050
  434685:	ds (bad) 
  434687:	dec    DWORD PTR [edx-0x4e03bab2]
  43468d:	les    ebp,FWORD PTR [esi+0x5]
  434690:	adc    ebp,eax
  434692:	or     DWORD PTR [ebp+0x6],0xd1f0454f
  434699:	lds    ebp,FWORD PTR [esi+0x5]
  43469c:	loope  0x434662
  43469e:	add    DWORD PTR [ebp-0x3a],0xd60fc050
  4346a5:	mov    DWORD PTR [edx],0x454e4a00
  4346ab:	hlt    
  4346ac:	rol    DWORD PTR [eax-0x8],0x8b
  4346b0:	add    BYTE PTR [eax],al
  4346b2:	add    BYTE PTR [edi+0x5a5249ad],dl
  4346b8:	lods   eax,DWORD PTR ds:[esi]
  4346b9:	js     0x4346a1
  4346bb:	or     eax,0x64583eb
  4346c0:	add    eax,0xc6f3f83d
  4346c5:	cmp    bh,ah
  4346c7:	retf   0xedaa
  4346ca:	jmp    FWORD PTR [edi+0xb5377f7]
  4346d0:	pop    esp
  4346d1:	mov    ecx,0x3da0da0c
  4346d6:	out    0xc5,eax
  4346d8:	in     eax,0xfd
  4346da:	push   DWORD PTR [eax-0x17]
  4346dd:	push   cs
  4346de:	ins    DWORD PTR es:[edi],dx
  4346df:	adc    eax,0xf3246863
  4346e4:	pop    esp
  4346e5:	pop    edi
  4346e6:	cld    
  4346e7:	repz mov al,0x81
  4346ea:	jg     0x4346d5
  4346ec:	(bad)  
  4346ee:	or     BYTE PTR [ebp-0x38b42124],al
  4346f4:	gs into 
  4346f6:	int    0xd3
  4346f8:	sbb    al,0x81
  4346fa:	ret    0x56eb
  4346fd:	aaa    
  4346fe:	clc    
  4346ff:	lock lds eax,FWORD PTR [ecx-0x42140a06]
  434706:	test   DWORD PTR [eax-0x4de61ca3],ebp
  43470c:	jne    0x434715
  43470e:	jg     0x4346c2
  434710:	fild   WORD PTR [eax+eax*1]
  434713:	repz rol DWORD PTR fs:[edi+0x2c000000],0xfe
  43471c:	ret    0xeee5
  43471f:	push   esp
  434720:	leave  
  434721:	jge    0x434776
  434723:	rol    DWORD PTR [edx-0x7d620b21],1
  434729:	mov    edi,0x4e91ef7
  43472e:	jo     0x434768
  434730:	push   cs
  434731:	jg     0x4346ff
  434733:	mov    ebp,0xde44feff
  434738:	mov    WORD PTR [ecx-0x29],es
  43473b:	dec    bp
  43473d:	pop    esp
  43473e:	in     al,0x6
  434740:	push   0x20
  434742:	and    al,0xd0
  434744:	sbb    al,BYTE PTR [edi-0x751e0ed5]
  43474a:	into   
  43474b:	int    0xa
  43474d:	jecxz  0x434781
  43474f:	dec    eax
  434750:	pop    DWORD PTR [ebx]
  434752:	repz push es
  434754:	out    0xca,eax
  434756:	repnz cmc 
  434758:	out    0x3,al
  43475a:	repz jnp 0x4346f7
  43475d:	imul   edi,DWORD PTR [esi+0x3d57433f],0xffffffdc
  434764:	out    0x90,al
  434766:	sub    al,0x7
  434768:	data16 loope 0x434749
  43476b:	push   esp
  43476c:	add    eax,0xe7d35887
  434771:	adc    dh,BYTE PTR [edi-0x2e]
  434774:	lock add esi,ebx
  434777:	(bad)  
  434778:	js     0x43477f
  43477a:	mov    edx,0x8eab41
  43477f:	add    BYTE PTR [eax],al
  434781:	test   eax,0x2e4587b3
  434786:	leave  
  434787:	out    dx,eax
  434788:	mov    WORD PTR [eax-0x31],es
  43478b:	out    0xbb,al
  43478d:	push   ds
  43478e:	shl    esi,1
  434790:	push   ebp
  434791:	mov    ecx,0xfa6c2a7b
  434796:	xchg   edi,eax
  434797:	jecxz  0x4347e1
  434799:	jecxz  0x4347be
  43479b:	daa    
  43479c:	add    al,0x76
  43479e:	mov    ebx,0x68f2e466
  4347a3:	jo     0x4347f4
  4347a5:	mov    dl,0x56
  4347a7:	pop    edx
  4347a8:	dec    edx
  4347a9:	fstp   TBYTE PTR [ebx-0x5e]
  4347ac:	imul   ebx,DWORD PTR [ebx+ebx*8+0x34986e6],0xfffffffe
  4347b4:	push   edx
  4347b5:	scas   eax,DWORD PTR es:[edi]
  4347b6:	push   esp
  4347b7:	jbe    0x434754
  4347b9:	test   BYTE PTR [esi],0x0
  4347bc:	jmp    0xc1845fb1
  4347c1:	popf   
  4347c2:	icebp  
  4347c3:	in     al,0xee
  4347c5:	sub    DWORD PTR [edx+0x6f0e924],0x0
  4347cc:	(bad)  
  4347cd:	fstp   DWORD PTR [esi+0x9]
  4347d0:	push   esi
  4347d1:	in     al,0x33
  4347d3:	adc    dl,cl
  4347d5:	mov    al,0x6
  4347d7:	sub    eax,0x54879a1b
  4347dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347dd:	mov    al,ds:0xd78141cd
  4347e2:	inc    ebp
  4347e3:	push   0x5b
  4347e8:	fld    DWORD PTR [edx+0x6ec1981]
  4347ee:	add    BYTE PTR [edx+eax*2+0x5b],ah
  4347f2:	xchg   eax,ebp
  4347f4:	imul   ecx,DWORD PTR [eax+0x4c],0xfed74a74
  4347fb:	call   0x2ece84f0
  434800:	sti    
  434801:	ss dec edi
  434803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434804:	out    dx,eax
  434805:	pop    es
  434806:	add    cl,ch
  434808:	lock fs or eax,0x50573a6c
  43480f:	add    esi,edi
  434811:	fisub  WORD PTR [edi-0x7af90f28]
  434817:	sbb    al,0xaf
  434819:	dec    esp
  43481a:	(bad)  
  43481e:	fsubr  DWORD PTR [edi+esi*4+0x0]
  434822:	add    DWORD PTR [edi+eiz*8-0x458ffffa],0x5e
  43482a:	shl    esi,0x5e
  43482d:	into   
  43482e:	stc    
  43482f:	jmp    0xeaa790a3
  434834:	stos   DWORD PTR es:[edi],eax
  434835:	data16 aaa 
  434837:	add    BYTE PTR [ebp-0x67cf89e],bl
  43483d:	add    al,0x0
  43483f:	add    cl,dl
  434841:	aaa    
  434842:	push   esp
  434843:	mov    eax,0xa4b
  434848:	jmp    0x92cc2f
  43484d:	add    BYTE PTR [eax],al
  43484f:	push   esi
  434850:	inc    edx
  434851:	sbb    eax,ebx
  434853:	xchg   ecx,eax
  434854:	(bad)  
  434855:	js     0x4347e2
  434857:	ror    cl,cl
  434859:	loope  0x434863
  43485b:	add    eax,0x4f89c170
  434860:	mov    dh,0x33
  434862:	into   
  434863:	jl     0x43488b
  434865:	jnp    0x4348e4
  434867:	push   es
  434868:	or     al,BYTE PTR [edi]
  43486a:	test   ch,ah
  43486c:	add    BYTE PTR [eax],al
  43486e:	add    ch,dl
  434870:	outs   dx,DWORD PTR ds:[esi]
  434871:	cli    
  434872:	(bad)  
  434873:	pop    ss
  434874:	out    0x83,eax
  434876:	into   
  434877:	cdq    
  434878:	jmp    0x45319800
  43487d:	jnp    0x434845
  43487f:	ret    0xd802
  434882:	mov    eax,0x9cb
  434887:	pop    ecx
  434888:	jmp    0x82299810
  43488d:	dec    ebp
  43488e:	clc    
  43488f:	loop   0x4348b4
  434891:	mov    ebx,0x83888e8b
  434896:	enter  0xe04b,0x8
  43489a:	bswap  esp
  43489c:	rol    BYTE PTR [ecx-0x3a1501bb],0x77
  4348a3:	dec    ebx
  4348a4:	jp     0x43486e
  4348a6:	shl    DWORD PTR [ebx-0x27],0x7c
  4348aa:	stc    
  4348ab:	push   0x32
  4348ad:	dec    edi
  4348ae:	mov    esp,DWORD PTR [edx]
  4348b0:	leave  
  4348b1:	loope  0x4348bb
  4348b3:	add    BYTE PTR [eax],al
  4348b5:	add    bl,dh
  4348b7:	in     al,0x97
  4348b9:	(bad)  
  4348ba:	sbb    BYTE PTR [edi],ch
  4348bc:	push   esp
  4348bd:	xor    BYTE PTR [eax-0x24],bl
  4348c0:	mov    ah,BYTE PTR [edi+ecx*1-0xc000220]
  4348c7:	pusha  
  4348c8:	pop    edx
  4348c9:	cld    
  4348ca:	rep lods al,BYTE PTR ds:[esi]
  4348cc:	sub    DWORD PTR [edi+0x8fddffb],0x4be0e15d
  4348d6:	pop    ds
  4348d7:	push   0xa113cdcf
  4348dc:	test   dl,al
  4348de:	sti    
  4348df:	push   esi
  4348e0:	xor    bh,al
  4348e2:	lock daa 
  4348e4:	mov    WORD PTR [ebx+0x7],es
  4348e7:	in     al,0x97
  4348e9:	int3   
  4348ea:	mov    eax,0xfcd754ce
  4348ef:	imul   edx,eax,0xffffff85
  4348f2:	sub    al,0x36
  4348f4:	lods   eax,DWORD PTR ds:[esi]
  4348f5:	in     eax,0x8
  4348f7:	scas   eax,DWORD PTR es:[edi]
  4348f8:	bound  eax,QWORD PTR [ebp-0x789d4bda]
  4348fe:	aas    
  4348ff:	sbb    eax,0x362cf954
  434904:	jmp    0x434954
  434906:	repnz (bad) 
  434909:	popa   
  43490a:	push   0x7062d1eb
  43490f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434910:	hlt    
  434911:	jb     0x43492e
  434913:	fst    QWORD PTR [ebx-0x1e09134]
  434919:	xchg   BYTE PTR [eax],al
  43491b:	add    BYTE PTR [eax],al
  43491d:	es call 0xa490:0xb400f015
  434925:	iret   
  434926:	(bad)  
  434928:	push   ebx
  43492a:	pusha  
  43492b:	pop    edi
  43492c:	cld    
  43492d:	rep lods al,BYTE PTR ds:[esi]
  43492f:	or     DWORD PTR [edi-0x5],0xfa03e706
  434936:	xchg   esp,eax
  434937:	in     eax,0xde
  434939:	test   al,0xca
  43493b:	pop    esi
  43493c:	into   
  43493d:	es out 0x5e,eax
  434940:	push   ecx
  434941:	das    
  434942:	dec    ecx
  434943:	data16 (bad) 
  434945:	sti    
  434946:	pop    es
  434947:	pop    ds
  434948:	xchg   ecx,eax
  434949:	cld    
  43494a:	or     BYTE PTR [eax+0x39],ah
  43494d:	cmp    edx,DWORD PTR [eax]
  43494f:	aaa    
  434950:	push   edx
  434951:	inc    esp
  434952:	sub    BYTE PTR [edx-0x311fc995],0xd4
  434959:	jo     0x434922
  43495b:	loop   0x4348e4
  43495d:	bound  eax,QWORD PTR [edi+eiz*8]
  434960:	add    edi,edx
  434962:	xchg   ebx,eax
  434963:	mov    bl,0x46
  434965:	cdq    
  434966:	jg     0x43498e
  434968:	adc    DWORD PTR [ebx],0x8
  43496b:	data16 (bad) 
  43496d:	test   dh,0xfe
  434970:	add    DWORD PTR [ecx+edi*1-0x35],esi
  434974:	mov    WORD PTR [eax],?
  434976:	shl    DWORD PTR [esi-0x13],cl
  434979:	fstp   st(6)
  43497b:	jle    0x434980
  43497d:	repz push es
  43497f:	inc    ecx
  434980:	add    DWORD PTR [eax],0x0
  434983:	add    ah,al
  434985:	cmc    
  434986:	icebp  
  434987:	xchg   ebp,eax
  434988:	mov    bh,0x7d
  43498a:	sub    al,0xc0
  43498c:	inc    eax
  43498d:	cmp    eax,0x10b64464
  434992:	mov    bh,0x52
  434994:	jecxz  0x434975
  434996:	jmp    0xf303:0xe7224f90
  43499d:	push   es
  43499e:	pushaw 
  4349a0:	xchg   edi,eax
  4349a1:	push   es
  4349a2:	fiadd  DWORD PTR [edi+0x3e703ac]
  4349a8:	cli    
  4349a9:	xchg   esp,eax
  4349aa:	in     eax,0xde
  4349ac:	sub    bl,cl
  4349ae:	add    BYTE PTR [edx-0x5a],ah
  4349b1:	mov    ecx,0xaac362e0
  4349b6:	ds push 0x2e
  4349b9:	(bad)  
  4349ba:	cld    
  4349bb:	inc    eax
  4349bc:	or     DWORD PTR [ebx],0xfffffffd
  4349bf:	pop    edi
  4349c0:	sbb    ecx,edi
  4349c2:	xor    eax,0xcdb3a259
  4349c7:	push   edx
  4349c8:	jns    0x434953
  4349ca:	jge    0x434a15
  4349cc:	cmc    
  4349cd:	dec    ecx
  4349ce:	shr    dl,0x67
  4349d1:	inc    edi
  4349d2:	hlt    
  4349d3:	sub    BYTE PTR [ecx],bl
  4349d5:	leave  
  4349d6:	mov    cl,0x24
  4349d8:	inc    ebp
  4349d9:	int    0xf9
  4349db:	adc    dh,BYTE PTR [ecx-0x611c081]
  4349e1:	(bad)  
  4349e2:	ins    DWORD PTR es:[edi],dx
  4349e3:	(bad)  
  4349e4:	jno    0x434a35
  4349e6:	cld    
  4349e7:	jmp    0xf54349ec
  4349ec:	sbb    BYTE PTR [esi+eiz*8+0x3f0906f0],0xf2
  4349f4:	int    0x4b
  4349f6:	in     eax,dx
  4349f7:	jp     0x4349b6
  4349f9:	int    0xc9
  4349fb:	jp     0x434a3b
  4349fd:	fsubr  QWORD PTR [ebx]
  4349ff:	jb     0x4349c6
  434a01:	or     dl,ch
  434a03:	cwde   
  434a04:	jle    0x434a45
  434a06:	out    0x79,al
  434a08:	ss clc 
  434a0a:	add    bl,BYTE PTR [edi-0x356528a7]
  434a10:	test   BYTE PTR [ebp+0x7d50cf6a],bh
  434a16:	test   eax,0x9d4381fa
  434a1b:	mov    al,0xe4
  434a1d:	add    DWORD PTR [ecx-0x48],esp
  434a20:	sar    cl,1
  434a22:	xchg   esi,eax
  434a23:	retf   0xfd89
  434a26:	cwde   
  434a27:	jp     0x434a6f
  434a29:	hlt    
  434a2a:	add    BYTE PTR [ebp+0x42],dl
  434a2d:	in     al,0x0
  434a2f:	mov    al,BYTE PTR [esi]
  434a31:	add    BYTE PTR [ebx-0x3804a533],cl
  434a37:	rol    DWORD PTR [ebx+0x64],1
  434a3a:	add    edx,DWORD PTR [ebp+0x4dc83366]
  434a40:	add    esi,0x2
  434a43:	dec    edx
  434a44:	push   es
  434a45:	jnp    0x434ac4
  434a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434a48:	add    dh,BYTE PTR [esp+ebx*1-0x3f]
  434a4c:	inc    ecx
  434a4d:	in     al,0xeb
  434a4f:	add    BYTE PTR [eax],al
  434a51:	add    BYTE PTR [ecx+0x79],cl
  434a54:	inc    ecx
  434a55:	add    cl,dl
  434a57:	cmp    ebp,DWORD PTR [eax-0x1]
  434a5a:	(bad)  
  434a5b:	mov    dl,0x5e
  434a5d:	mov    DWORD PTR [esi+0x3b],edx
  434a60:	jo     0x434a61
  434a62:	push   ebp
  434a63:	pop    esi
  434a64:	jnp    0x434ae3
  434a66:	test   BYTE PTR [edx],0x6d
  434a69:	in     al,dx
  434a6a:	xchg   ecx,eax
  434a6b:	inc    ebx
  434a6c:	add    edx,DWORD PTR fs:[ebp+0x66]
  434a70:	xor    DWORD PTR [edi+0x62],eax
  434a73:	sti    
  434a74:	jns    0x434a53
  434a76:	jmp    FWORD PTR [edx-0x37627c09]
  434a7c:	or     BYTE PTR [ebx+ecx*4+0x34000003],al
  434a83:	mov    BYTE PTR [edi+0x5c870],dh
  434a89:	add    BYTE PTR [ebp-0x25f9747f],ch
  434a8f:	add    eax,0xba8785
  434a94:	add    BYTE PTR [eax],al
  434a96:	dec    edi
  434a97:	cmp    ebp,DWORD PTR [ecx+ecx*4-0x65]
  434a9b:	jl     0x434adc
  434a9d:	dec    esp
  434a9e:	pop    ds
  434a9f:	push   ebx
  434aa0:	lock add cl,BYTE PTR [edx-0xc74b5fb]
  434aa7:	or     BYTE PTR [ebx+ecx*4+0x34],ah
  434aab:	adc    al,0x34
  434aad:	dec    edi
  434aae:	lods   al,BYTE PTR ds:[esi]
  434aaf:	fild   WORD PTR [esi]
  434ab1:	add    bl,dh
  434ab3:	fild   QWORD PTR [edi]
  434ab5:	mov    eax,DWORD PTR [eax]
  434ab7:	add    BYTE PTR [eax],al
  434ab9:	sub    al,0xd0
  434abb:	sub    eax,0xf487f266
  434ac0:	sub    bl,dh
  434ac2:	fild   WORD PTR [eax+0x4256fbc4]
  434ac8:	fsubr  DWORD PTR [esi+0x1f]
  434acb:	or     al,0x83
  434acd:	into   
  434ace:	xor    bl,ah
  434ad0:	stc    
  434ad1:	js     0x434b3b
  434ad3:	imul   ecx,DWORD PTR [ebx+0x5186bbac],0xf07462a3
  434add:	icebp  
  434ade:	(bad)  
  434ae0:	dec    ebp
  434ae1:	jbe    0x434a7b
  434ae3:	xor    eax,0x4c54c250
  434ae8:	pusha  
  434ae9:	sub    al,0xdf
  434aeb:	add    eax,DWORD PTR [eax]
  434aed:	repz fisttp WORD PTR [eax-0x759070bf]
  434af4:	push   esp
  434af5:	lods   al,BYTE PTR ds:[esi]
  434af6:	dec    edi
  434af7:	das    
  434af8:	data16 icebp 
  434afa:	pop    es
  434afb:	mov    eax,0x80ddf32a
  434b00:	les    ecx,FWORD PTR [ebx]
  434b02:	push   edi
  434b03:	aas    
  434b04:	fdiv   DWORD PTR [esi-0x62]
  434b07:	add    eax,0xd5aab783
  434b0c:	stc    
  434b0d:	jo     0x434b4a
  434b0f:	or     BYTE PTR [edx],al
  434b11:	js     0x434afe
  434b13:	fcmovnb st,st(1)
  434b15:	hlt    
  434b16:	lods   al,BYTE PTR ds:[esi]
  434b17:	std    
  434b18:	push   ebx
  434b1a:	loopne 0x434b95
  434b1c:	jae    0x434b1e
  434b1e:	add    BYTE PTR [eax],al
  434b20:	cmc    
  434b21:	(bad)  
  434b23:	shr    ah,0x6
  434b26:	sti    
  434b27:	add    esi,ebx
  434b29:	push   es
  434b2a:	pop    cx
  434b2c:	xchg   edi,eax
  434b2d:	add    DWORD PTR ds:0x974a0c6a,edx
  434b33:	push   es
  434b34:	test   al,cl
  434b36:	out    0x55,eax
  434b38:	adc    BYTE PTR [esp+0xc],bh
  434b3c:	outs   dx,BYTE PTR ds:[esi]
  434b3d:	cmp    bh,BYTE PTR [edi-0x71]
  434b40:	rcl    dh,0x60
  434b43:	dec    esp
  434b44:	idiv   DWORD PTR [ebx-0x4c]
  434b47:	(bad)  [edi+edi*8+0x6d]
  434b4b:	dec    ecx
  434b4c:	push   ebx
  434b4d:	jle    0x434b06
  434b4f:	repz ja 0x434b84
  434b52:	dec    ebx
  434b53:	xor    eax,0x33eb376c
  434b58:	je     0x434b82
  434b5a:	dec    DWORD PTR [edx+eax*8-0x2db0c0f6]
  434b61:	push   es
  434b62:	out    0x8e,eax
  434b64:	mov    al,0xfe
  434b66:	ins    DWORD PTR es:[edi],dx
  434b67:	xor    al,0xef
  434b69:	jnp    0x434b1a
  434b6b:	rep outs dx,DWORD PTR ds:[esi]
  434b6d:	sub    bh,cl
  434b6f:	mov    es,WORD PTR [edx+0x1b31600a]
  434b75:	jl     0x434b4e
  434b77:	mov    ?,WORD PTR [ebx-0x143f99fe]
  434b7d:	xor    DWORD PTR [edx-0x8c68bf2],0xffffff8c
  434b84:	add    BYTE PTR [eax],al
  434b86:	add    BYTE PTR [eax-0x31],al
  434b89:	jo     0x434bcb
  434b8b:	fcomip st,st(7)
  434b8d:	arpl   WORD PTR [edi-0x3d18f910],sp
  434b93:	jb     0x434b57
  434b95:	out    dx,al
  434b96:	add    esi,ebx
  434b98:	mov    edx,0x5cddbada
  434b9e:	add    bl,dh
  434ba0:	push   es
  434ba1:	add    BYTE PTR [edx+0x39],ah
  434ba4:	xor    edi,DWORD PTR [eax+0x6f0e8]
  434baa:	mov    edx,0xa581c590
  434baf:	xchg   ebp,eax
  434bb0:	(bad)  
  434bb1:	stc    
  434bb2:	jmp    0x214352a7
  434bb7:	int3   
  434bb8:	mov    DWORD PTR [ebp+0x4c456db1],eax
  434bbe:	jb     0x434c34
  434bc0:	jg     0x434b47
  434bc2:	mov    eax,ds:0xde08df37
  434bc7:	cmp    BYTE PTR [edi+0x112cac87],0xca
  434bce:	xlat   BYTE PTR ds:[ebx]
  434bcf:	scas   eax,DWORD PTR es:[edi]
  434bd0:	cmp    ecx,0xcaab6a
  434bd6:	faddp  st(4),st
  434bd8:	xchg   DWORD PTR [ebx],eax
  434bda:	jmp    0xebf549cf
  434bdf:	sbb    DWORD PTR [ebx],edi
  434be1:	cld    
  434be2:	bound  edi,QWORD PTR [edx]
  434be4:	mov    ecx,0x32b962e0
  434be9:	ds push 0x0
  434bec:	add    BYTE PTR [eax],al
  434bee:	xor    bh,dh
  434bf0:	cld    
  434bf1:	inc    eax
  434bf2:	js     0x434bbb
  434bf4:	stc    
  434bf5:	jmp    0x632405ea
  434bfa:	mov    ecx,0x189c873a
  434bff:	ds sbb eax,0x7f02652a
  434c05:	bound  edi,QWORD PTR [eax-0x61e187a]
  434c0b:	js     0x434bd4
  434c0d:	jo     0x434c2b
  434c0f:	mov    ebx,0x8642af35
  434c14:	test   BYTE PTR [ecx-0x163f7506],ch
  434c1a:	lock push es
  434c1c:	test   al,0x0
  434c1e:	jp     0x434c30
  434c20:	jge    0x434bda
  434c22:	retf   0xa
  434c25:	mov    edx,DWORD PTR [edx-0x36]
  434c28:	loope  0x434c32
  434c2a:	adc    ecx,DWORD PTR [esi-0x2c]
  434c2d:	(bad)  
  434c2f:	rol    BYTE PTR [ecx-0x51ef91b3],cl
  434c35:	enter  0x4d99,0xe4
  434c39:	mov    edi,ecx
  434c3b:	jle    0x434bf5
  434c3d:	add    DWORD PTR [edx+0x6ad3000a],ecx
  434c43:	xchg   esp,eax
  434c44:	inc    ebp
  434c45:	in     al,0x12
  434c47:	in     al,dx
  434c48:	mov    edx,0x459472d3
  434c4d:	hlt    
  434c4e:	or     esi,DWORD PTR [edx+0x310]
  434c54:	add    BYTE PTR [ebx],cl
  434c56:	xchg   esp,eax
  434c57:	enter  0x9d8b,0x4e
  434c5b:	add    DWORD PTR [edx+edx*8],0xf
  434c5f:	scas   al,BYTE PTR es:[edi]
  434c60:	dec    ebp
  434c61:	ficom  WORD PTR [ecx-0x4cf40bc3]
  434c67:	or     BYTE PTR [edi],cl
  434c69:	lods   al,BYTE PTR ds:[esi]
  434c6a:	retf   0xc0fb
  434c6d:	and    eax,ecx
  434c6f:	outs   dx,BYTE PTR ds:[esi]
  434c70:	pop    esi
  434c71:	add    DWORD PTR [ecx],ecx
  434c73:	test   DWORD PTR [ebx+0xa0a],ebx
  434c79:	cdq    
  434c7a:	pop    ebp
  434c7b:	cld    
  434c7c:	add    BYTE PTR ds:0xa051946,ah
  434c82:	or     al,BYTE PTR [edi]
  434c84:	mov    dh,0x8
  434c86:	xchg   ebx,eax
  434c87:	(bad)  
  434c88:	sar    edx,cl
  434c8a:	xchg   ebx,eax
  434c8b:	inc    ebp
  434c8c:	(bad)  
  434c8e:	dec    esp
  434c8f:	cld    
  434c90:	inc    edx
  434c91:	leave  
  434c92:	add    DWORD PTR [edi],0x3d908fb6
  434c98:	in     al,0xf3
  434c9a:	lods   al,BYTE PTR ds:[esi]
  434c9b:	pop    edi
  434c9d:	lock addr16 xchg ebp,eax
  434ca0:	(bad)  
  434ca1:	mov    esp,0xd3ccfdaf
  434ca6:	cmp    BYTE PTR [edx-0x1c],al
  434ca9:	jo     0x434d20
  434cab:	add    eax,0x45783e87
  434cb0:	sbb    eax,0x9e580b0
  434cb5:	pop    esp
  434cb6:	repnz mov ch,0xfd
  434cb9:	add    BYTE PTR [eax],al
  434cbb:	add    BYTE PTR [ebx+0x784c4828],dh
  434cc1:	stos   DWORD PTR es:[edi],eax
  434cc2:	jle    0x434c4b
  434cc4:	ss inc esp
  434cc6:	mov    esi,0x8fb4ebe8
  434ccb:	shl    al,0xf2
  434cce:	fbstp  TBYTE PTR ds:0x9abbc2d
  434cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cd5:	jp     0x434c89
  434cd7:	test   DWORD PTR [esi+0x18e5b45b],ebp
  434cdd:	pop    edi
  434cde:	xchg   BYTE PTR [ecx-0x247d1],cl
  434ce4:	push   0xebe7bdf7
  434ce9:	mov    ah,0x8f
  434ceb:	(bad)  
  434cec:	repnz sub al,0xb9
  434cef:	adc    eax,0xe5b4aff3
  434cf4:	enter  0x861e,0x4b
  434cf8:	(bad)  
  434cfb:	mov    edi,0x4986bf1a
  434d00:	mov    bl,0x2b
  434d02:	mov    ebp,0xfff4e873
  434d07:	push   ss
  434d08:	repz scas eax,DWORD PTR es:[edi]
  434d0a:	std    
  434d0b:	out    0x29,al
  434d0d:	mov    dl,0xfd
  434d0f:	call   FWORD PTR [ebx-0x4becb632]
  434d15:	pop    es
  434d16:	push   0xffffffc0
  434d18:	inc    BYTE PTR [esi]
  434d1a:	out    0xd6,eax
  434d1c:	retf   0xd2c4
  434d1f:	mov    edi,0xf2000000
  434d24:	movntq QWORD PTR [ebx],mm0
  434d27:	rep lods eax,DWORD PTR ds:[esi]
  434d29:	or     BYTE PTR [eax],al
  434d2b:	repz push es
  434d2d:	pop    DWORD PTR [edi+eiz*1+0x14]
  434d31:	pop    esi
  434d32:	inc    ecx
  434d33:	sti    
  434d34:	retf   
  434d35:	daa    
  434d36:	cld    
  434d37:	xor    BYTE PTR [edx],bh
  434d39:	daa    
  434d3a:	add    al,0x8c
  434d3c:	pavgw  mm0,QWORD PTR [ebx]
  434d3f:	repz adc ebx,DWORD PTR [ecx-0x34]
  434d43:	push   es
  434d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d45:	fimul  DWORD PTR [edx+ebp*1-0x1e0055b1]
  434d4c:	push   es
  434d4d:	out    0x3,eax
  434d4f:	jbe    0x434d9d
  434d51:	pop    ds
  434d52:	xor    DWORD PTR [ebx],0x631b223b
  434d58:	cmp    BYTE PTR [eax],dl
  434d5a:	mov    DWORD PTR [edi-0xcfc1915],ecx
  434d60:	push   es
  434d61:	pop    cx
  434d63:	inc    edi
  434d64:	pop    es
  434d65:	fidivr DWORD PTR [edi-0x4]
  434d68:	or     ah,bh
  434d6a:	add    ebp,edx
  434d6c:	jl     0x434d53
  434d6e:	(bad)  
  434d6f:	mov    eax,0x36c65ec2
  434d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434d76:	xor    BYTE PTR [ecx],0xf
  434d79:	jo     0x434dac
  434d7b:	sbb    ecx,DWORD PTR [eax]
  434d7d:	aas    
  434d7e:	sbb    eax,DWORD PTR [edx+0x6eb5954e]
  434d84:	push   esp
  434d85:	lahf   
  434d86:	fwait
  434d87:	add    BYTE PTR [eax],al
  434d89:	add    ah,bh
  434d8b:	ret    
  434d8c:	out    0x3,eax
  434d8e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  434d90:	into   
  434d91:	aam    0x3b
  434d93:	call   0x46317797
  434d98:	inc    eax
  434d99:	sbb    cl,al
  434d9b:	ret    
  434d9c:	mov    ch,BYTE PTR [ebp+0x72f9c3d9]
  434da2:	xor    eax,0xb8668747
  434da7:	sbb    DWORD PTR [eax],eax
  434da9:	jmp    0xe955532b
  434dae:	lock push es
  434db0:	test   DWORD PTR [esi],ebp
  434db2:	out    dx,eax
  434db3:	jle    0x434db4
  434db5:	call   0xca1054aa
  434dba:	sub    BYTE PTR [edx],ah
  434dbc:	mov    ebp,0x4189a872
  434dc1:	cmp    DWORD PTR [eax+0xa],edi
  434dc4:	mov    BYTE PTR [edx-0x48],ah
  434dc7:	and    edi,0xffffffe1
  434dca:	cmc    
  434dcb:	js     0x434d94
  434dcd:	jo     0x434e02
  434dcf:	mov    ebx,0x46beaf35
  434dd4:	nop
  434dd5:	push   0xffffffcb
  434dd7:	ret    0xde00
  434dda:	(bad)  
  434ddc:	std    
  434ddd:	call   0xebf55bd2
  434de2:	and    eax,0x2e62fc4f
  434de7:	shl    eax,1
  434de9:	bound  esi,QWORD PTR [ebp+0x6a3e5e]
  434def:	add    BYTE PTR [eax],al
  434df1:	jbe    0x434e01
  434df3:	std    
  434df4:	and    BYTE PTR [eax-0xf16063d],cl
  434dfa:	shl    eax,1
  434dfc:	bound  esi,QWORD PTR [ebp+0x38bc8756]
  434e02:	dec    esi
  434e03:	sbb    eax,0x7f0a792a
  434e08:	bound  edi,QWORD PTR [eax]
  434e0a:	and    edi,0xffffffe1
  434e0d:	cmc    
  434e0e:	js     0x434dd7
  434e10:	add    BYTE PTR [ebx+0x1c3bf446],al
  434e16:	push   ecx
  434e17:	mov    ecx,0x7d0ceaa8
  434e1c:	mov    al,0xca
  434e1e:	push   es
  434e1f:	add    BYTE PTR [ebx+0x8e1c6a2],cl
  434e25:	inc    ebx
  434e26:	dec    edx
  434e27:	aam    0xf
  434e29:	fs into 
  434e2b:	or     DWORD PTR [ebp-0x4a],0xc9c8ae0c
  434e32:	dec    ecx
  434e33:	in     al,0x89
  434e35:	xlat   BYTE PTR ds:[ebx]
  434e36:	jle    0x434df0
  434e38:	add    DWORD PTR [edx-0x552cfffa],ebx
  434e3e:	nop
  434e3f:	inc    ebp
  434e40:	in     al,0xe2
  434e42:	out    0xba,eax
  434e44:	shl    DWORD PTR [edx-0x70],cl
  434e47:	inc    ebp
  434e48:	hlt    
  434e49:	pop    ebx
  434e4a:	scas   al,BYTE PTR es:[edi]
  434e4b:	adc    BYTE PTR [ebx],al
  434e4d:	dec    ebx
  434e4e:	nop
  434e4f:	enter  0xc58b,0xfa
  434e53:	add    BYTE PTR [eax+eax*1],0x0
  434e57:	add    dl,ah
  434e59:	or     ebp,DWORD PTR [esi+0x3d8e864d]
  434e5f:	hlt    
  434e60:	mov    esi,DWORD PTR [ebx-0x348bf0f8]
  434e66:	sti    
  434e67:	rcl    BYTE PTR [ecx],0x81
  434e6a:	outs   dx,BYTE PTR ds:[esi]
  434e6b:	push   esi
  434e6c:	fstp   DWORD PTR [ecx-0x4]
  434e6f:	add    BYTE PTR ds:0x4a033942,bl
  434e75:	push   es
  434e76:	pop    es
  434e77:	mov    dh,0x18
  434e79:	pop    esi
  434e7b:	sar    DWORD PTR [edx-0x3223ba71],cl
  434e81:	dec    ecx
  434e82:	cld    
  434e83:	inc    edx
  434e84:	or     DWORD PTR [esi+0x7],edi
  434e87:	mov    dh,0xd7
  434e89:	lea    edi,ds:0x8ba8f3e4
  434e8f:	(bad)  
  434e90:	lock out 0x9b,eax
  434e93:	push   esp
  434e95:	scas   eax,DWORD PTR es:[edi]
  434e96:	std    
  434e97:	int3   
  434e98:	shl    DWORD PTR [ecx+eax*2],cl
  434e9b:	in     al,0x70
  434e9d:	icebp  
  434e9e:	or     eax,DWORD PTR [edi+0x1d45b846]
  434ea4:	mov    al,0x7c
  434ea6:	in     eax,0x9
  434ea8:	test   dl,dh
  434eaa:	mov    cl,0xfd
  434eac:	mov    bl,0x24
  434eae:	inc    esp
  434eaf:	push   eax
  434eb0:	push   0x2e877eab
  434eb5:	test   BYTE PTR [esi-0x744f0418],bh
  434ebb:	rol    BYTE PTR [eax],0x0
  434ebe:	add    al,dh
  434ec0:	repnz fbstp TBYTE PTR ds:0x9a5f8b5
  434ec7:	pop    ebp
  434ec8:	cli    
  434ec9:	mov    al,0x85
  434ecb:	ss pushf 
  434ecd:	mov    al,0xe5
  434ecf:	fcomp  DWORD PTR [esi-0x4b487702]
  434ed5:	std    
  434ed6:	jmp    FWORD PTR [eax+0x77]
  434ed9:	mov    esi,0x8bb0fbe7
  434ede:	(bad)  
  434edf:	repnz sub BYTE PTR [ecx-0x4f500ceb],bh
  434ee6:	in     eax,0x8
  434ee8:	pop    edi
  434ee9:	xchg   BYTE PTR [ebx+0x57],cl
  434eec:	xchg   edi,eax
  434eed:	cmp    eax,0x3a24f474
  434ef2:	or     BYTE PTR [edi+ebp*2],dh
  434ef5:	cmc    
  434ef6:	inc    ebx
  434ef7:	mov    esi,0xcbe6fd6f
  434efc:	lods   eax,DWORD PTR ds:[esi]
  434efd:	std    
  434efe:	(bad)  
  434eff:	js     0x434ee8
  434f01:	add    esi,DWORD PTR [edx+0x10e5ee33]
  434f07:	jo     0x434f0f
  434f09:	pop    es
  434f0a:	add    al,0x74
  434f0c:	push   ecx
  434f0d:	mov    ds:0x2a4eb28a,eax
  434f12:	cld    
  434f13:	jecxz  0x434f1b
  434f15:	out    0x3,eax
  434f17:	outs   dx,BYTE PTR ds:[esi]
  434f18:	dec    ecx
  434f19:	scas   eax,DWORD PTR es:[edi]
  434f1a:	jle    0x434ecf
  434f1c:	cmp    esp,DWORD PTR [edi-0x3acb1ce8]
  434f22:	add    BYTE PTR [eax],0x0
  434f25:	add    BYTE PTR [eax-0x3d],bl
  434f28:	out    0x4,eax
  434f2a:	outs   dx,DWORD PTR ds:[esi]
  434f2b:	xchg   edi,eax
  434f2c:	in     eax,0x3
  434f2e:	repz setno BYTE PTR [esi]
  434f32:	retf   0xd352
  434f35:	jg     0x434ee0
  434f37:	aam    0xc7
  434f39:	inc    esi
  434f3a:	ss leave 
  434f3c:	out    dx,eax
  434f3d:	jl     0x434f7f
  434f3f:	mov    edi,0x37deabe6
  434f44:	pop    ds
  434f45:	push   esi
  434f46:	mov    ecx,0x5b3c1a8c
  434f4b:	push   es
  434f4c:	out    0x3,eax
  434f4e:	repz rol DWORD PTR [edi-0x39b06be1],cl
  434f55:	(bad)  
  434f56:	jl     0x434fa1
  434f58:	and    esi,DWORD PTR [edi-0x378df972]
  434f5e:	push   es
  434f5f:	pop    es
  434f60:	out    0xca,eax
  434f62:	repnz push ds
  434f64:	out    0x3,eax
  434f66:	repz sub esp,0xffffffd3
  434f6a:	repz (bad)
  434f6d:	inc    edx
  434f6e:	dec    ebp
  434f6f:	shl    bh,0x7e
  434f72:	mov    eax,0x4340fea6
  434f77:	mov    WORD PTR [edx-0x463a01b9],fs
  434f7d:	cmp    al,0xd6
  434f7f:	lds    esi,FWORD PTR [eax+0x49]
  434f82:	pop    ds
  434f83:	cld    
  434f84:	jmp    FWORD PTR [ebp+0x6a0b34fc]
  434f8a:	add    BYTE PTR [eax],al
  434f8c:	add    BYTE PTR [eax-0xf16ea39],al
  434f92:	push   es
  434f93:	or     DWORD PTR [ebx+eiz*2-0x40],esp
  434f97:	stc    
  434f98:	jmp    0xd2739d1a
  434f9d:	das    
  434f9e:	xor    eax,0x89b7d209
  434fa3:	dec    ecx
  434fa4:	mov    ch,0xed
  434fa6:	dec    ebp
  434fa7:	sub    BYTE PTR [eax+0x2a],ah
  434faa:	mov    ebx,0x9b42125
  434faf:	test   DWORD PTR [esi],esi
  434fb1:	jmp    0x434f9c
  434fb3:	(bad)  
  434fb4:	jmp    0x879b:0x2c84f731
  434fbb:	dec    ebx
  434fbc:	mov    ch,0x35
  434fbe:	dec    esi
  434fbf:	inc    eax
  434fc0:	jo     0x434ff5
  434fc2:	jecxz  0x434ff9
  434fc4:	test   al,0x4a
  434fc6:	adc    al,0x85
  434fc8:	test   al,0xbd
  434fca:	or     al,0x85
  434fcc:	sbb    al,0xb7
  434fce:	jmp    0x477cc29a
  434fd3:	xchg   DWORD PTR [ebx+ecx*2],ebp
  434fd6:	xchg   DWORD PTR [ebx-0x4b],eax
  434fd9:	inc    DWORD PTR [ebx-0xc]
  434fdc:	bound  esi,QWORD PTR [ebx]
  434fde:	mov    bh,0x35
  434fe0:	test   al,0xca
  434fe2:	add    eax,DWORD PTR [ebp-0xbbc1858]
  434fe8:	ret    0x8798
  434feb:	dec    ebx
  434fec:	jns    0x434fc3
  434fee:	dec    ebx
  434fef:	fcom   QWORD PTR [edx]
  434ff1:	add    BYTE PTR [eax],al
  434ff3:	add    BYTE PTR [edi-0x38aebc77],cl
  434ff9:	dec    ebp
  434ffa:	inc    eax
  434ffb:	bound  esi,QWORD PTR [ebx+0x189c25da]
  435001:	xchg   DWORD PTR [ebx+0x0],ecx
  435004:	push   cs
  435005:	loope  0x43500f
  435007:	jmp    0x435022
  435009:	xchg   BYTE PTR [ecx+0x0],al
  43500c:	xchg   ecx,eax
  43500d:	inc    esi
  43500e:	aam    0x8a
  435010:	or     al,BYTE PTR ss:[ebx+0x83be245]
  435017:	inc    eax
  435018:	in     eax,0x46
  43501a:	hlt    
  43501b:	mov    DWORD PTR [edi-0x25],ecx
  43501e:	ins    DWORD PTR es:[edi],dx
  43501f:	in     al,dx
  435020:	mov    DWORD PTR [eax+eax*2+0x0],edx
  435024:	in     eax,0x8f
  435026:	aaa    
  435027:	add    edx,ebx
  435029:	or     bh,BYTE PTR [edi+0xabe07]
  43502f:	add    bl,dh
  435031:	adc    eax,0x83dafff9
  435036:	jne    0x435028
  435038:	fiadd  DWORD PTR [edi]
  43503a:	test   BYTE PTR [eax-0x74fff535],cl
  435040:	pand   mm0,QWORD PTR [edx+0x83ada4f]
  435047:	inc    eax
  435048:	gs (bad) 
  43504a:	out    dx,eax
  43504b:	mov    edi,ecx
  43504d:	fidivr DWORD PTR [edi+0xabe07]
  435053:	add    BYTE PTR [ebx-0x4d],ah
  435056:	cli    
  435057:	inc    DWORD PTR [eax]
  435059:	add    BYTE PTR [eax],al
  43505b:	call   0x8407:0x8a087783
  435062:	mov    al,0x8a
  435064:	or     al,BYTE PTR [eax]
  435066:	xor    DWORD PTR [ebx+eiz*8+0x6a],0x26
  43506b:	xlat   BYTE PTR ds:[ebx]
  43506c:	cs and al,0x0
  43506f:	leave  
  435070:	dec    ebp
  435071:	cld    
  435072:	add    BYTE PTR ds:0x5a014986,dh
  435078:	or     al,BYTE PTR [edi]
  43507a:	mov    dh,0x58
  43507c:	xlat   BYTE PTR ds:[ebx]
  43507d:	inc    ebp
  43507e:	cld    
  43507f:	repz sub BYTE PTR [esi-0x7b8dac33],bh
  435086:	ret    0x36fb
  435089:	xor    eax,edi
  43508b:	lock out 0x82,eax
  43508e:	cli    
  43508f:	rol    DWORD PTR [ecx+0x4fae85af],cl
  435095:	sbb    eax,DWORD PTR [ebx+0x3]
  435098:	cmp    DWORD PTR [ecx],edi
  43509a:	or     dl,dh
  43509c:	outs   dx,BYTE PTR ds:[esi]
  43509d:	icebp  
  43509e:	(bad)  
  43509f:	mov    ch,0xb3
  4350a1:	jbe    0x4350e6
  4350a3:	adc    esp,DWORD PTR [ebx]
  4350a5:	les    esi,FWORD PTR [edx+ebx*1+0x39]
  4350a9:	cmp    eax,ebp
  4350ab:	js     0x435041
  4350ad:	in     eax,0x4f
  4350af:	or     al,ch
  4350b1:	cmp    BYTE PTR [ecx+0x3],0xb0
  4350b5:	cs dec esi
  4350b7:	inc    edi
  4350b8:	lods   eax,DWORD PTR ds:[esi]
  4350b9:	aad    0x4e
  4350bb:	sti    
  4350bc:	scas   eax,DWORD PTR es:[edi]
  4350bd:	std    
  4350be:	in     al,0x0
  4350c0:	add    BYTE PTR [eax],al
  4350c2:	test   bh,0xec
  4350c5:	cld    
  4350c6:	mov    ah,0xaf
  4350c8:	jl     0x435115
  4350ca:	sti    
  4350cb:	cmp    BYTE PTR [edx],dh
  4350cd:	clc    
  4350ce:	jp     0x4350b4
  4350d0:	jmp    0x435058
  4350d2:	xor    al,al
  4350d4:	test   BYTE PTR [ecx+0x3],bh
  4350d7:	mov    al,0x7c
  4350d9:	inc    ebx
  4350da:	xor    DWORD PTR [esi],0x42
  4350dd:	loopne 0x435157
  4350df:	jo     0x435133
  4350e1:	sbb    eax,0xd0afd6
  4350e6:	repz sub BYTE PTR [edi+edi*4-0x40fb20ae],bh
  4350ee:	js     0x435168
  4350f0:	mov    esi,0xde2eebe7
  4350f5:	add    BYTE PTR [edi+ebp*4-0x3],dl
  4350f9:	mov    esi,0x4ef0653
  4350fe:	test   BYTE PTR [ecx+0x1e54c22e],dl
  435104:	out    0xc2,al
  435106:	inc    BYTE PTR [ebp-0x11]
  435109:	push   edi
  43510a:	call   DWORD PTR [ecx+0x4633fbac]
  435110:	fild   WORD PTR [edi-0x60]
  435113:	inc    esi
  435114:	out    0xdc,eax
  435116:	mov    edi,0x1140df9
  43511b:	(bad)
  43511e:	add    al,0xbd
  435120:	out    0x84,eax
  435122:	jp     0x435132
  435124:	out    0x0,eax
  435126:	add    BYTE PTR [eax],al
  435128:	add    BYTE PTR [edi-0x74],ch
  43512b:	out    0x3,eax
  43512d:	xrelease xchg DWORD PTR [edx+0x630de4f3],eax
  435134:	xchg   ebx,esi
  435136:	push   es
  435137:	out    0x84,eax
  435139:	(bad)  
  43513b:	jne    0x435162
  43513d:	dec    esi
  43513e:	cmp    ah,bl
  435140:	add    al,0xfa
  435142:	sub    BYTE PTR [esi+0x4],0xf3
  435146:	push   es
  435147:	loop   0x4350de
  435149:	mov    ch,0xbd
  43514b:	sbb    al,0xd0
  43514d:	jbe    0x43511c
  43514f:	xchg   esi,eax
  435150:	in     al,0xe5
  435152:	xchg   DWORD PTR [ecx-0x50ad8a04],esp
  435158:	add    edi,DWORD PTR [ebx+0x1d24a988]
  43515e:	fstp   st(6)
  435160:	cs out 0x32,eax
  435163:	xor    edi,DWORD PTR [ebx+0x28]
  435166:	rsm    
  435168:	inc    ebp
  435169:	fild   DWORD PTR [edx+0x14]
  43516c:	inc    esp
  43516d:	repz ret 
  43516f:	jmp    0xf27a:0xe7bc64f0
  435176:	xchg   DWORD PTR [eax],eax
  435178:	jno    0x4351bf
  43517a:	jb     0xfa01a409
  435180:	mov    eax,ds:0x5ef9be35
  435185:	or     eax,0x4a625952
  43518a:	pusha  
  43518b:	mov    esi,0xe1
  435190:	lock add DWORD PTR [ebx-0xf],0x70e84fa9
  435198:	fisttp WORD PTR [edx]
  43519a:	test   DWORD PTR [eax+eax*2-0x359def7c],esp
  4351a1:	mov    edx,0x8500b187
  4351a6:	push   eax
  4351a7:	in     eax,0x7f
  4351a9:	xor    eax,0x5d77b73c
  4351ae:	cmp    BYTE PTR [edx-0x16064388],dh
  4351b4:	lock pop ebp
  4351b6:	test   DWORD PTR [edx+eiz*1],eax
  4351b9:	jge    0x4351c3
  4351bb:	jmp    0xf77123c1
  4351c0:	mov    ch,0x5
  4351c2:	sbb    al,0xe9
  4351c4:	lock push es
  4351c6:	shl    DWORD PTR [edi+ecx*4],0xbb
  4351ca:	stc    
  4351cb:	jmp    0xa644f3c0
  4351d0:	cmp    ebx,edi
  4351d2:	sti    
  4351d3:	(bad)  
  4351d4:	mov    ch,0xbd
  4351d6:	test   DWORD PTR [edi+ebx*4],esp
  4351d9:	or     BYTE PTR [ebx-0x3f],0x17
  4351dd:	dec    edi
  4351de:	or     al,0x62
  4351e0:	xor    esi,DWORD PTR [edi+0x5809f987]
  4351e6:	cld    
  4351e7:	jo     0x4351a1
  4351e9:	push   ss
  4351ea:	xchg   DWORD PTR [ecx],edi
  4351ec:	jmp    0x435227
  4351ee:	jns    0x4351b1
  4351f0:	lock sbb DWORD PTR [ecx+0x0],0x0
  4351f5:	add    BYTE PTR [eax],al
  4351f7:	xor    bh,BYTE PTR [edx]
  4351f9:	outs   dx,DWORD PTR ds:[esi]
  4351fa:	cmp    al,0x67
  4351fc:	mov    bh,0x7c
  4351fe:	aas    
  4351ff:	inc    eax
  435200:	push   esi
  435201:	mov    edx,DWORD PTR es:[edi]
  435204:	mov    ds:0x10424d83,eax
  435209:	cmp    DWORD PTR [eax],edx
  43520b:	es call 0x40ed9793
  435211:	push   ebp
  435212:	or     BYTE PTR [edx-0x52001c8c],dh
  435218:	mov    es,eax
  43521a:	je     0x435262
  43521c:	(bad)  
  43521d:	call   FWORD PTR ds:0x5e00070a
  435223:	popa   
  435224:	(bad)  
  435225:	cld    
  435226:	dec    ebp
  435228:	int3   
  435229:	push   edi
  43522a:	mov    esi,edi
  43522c:	idiv   BYTE PTR [ecx+0x6d400a08]
  435232:	or     BYTE PTR [ecx+0x4f],dl
  435235:	shr    BYTE PTR [ebx],1
  435237:	xchg   esp,eax
  435238:	add    al,BYTE PTR [ebx+0x561cea5d]
  43523e:	adc    bl,cl
  435240:	inc    esp
  435241:	or     BYTE PTR [ecx],al
  435243:	jl     0x4351f7
  435245:	cli    
  435246:	pop    esi
  435247:	out    dx,al
  435248:	xchg   DWORD PTR [edi+0x8],esi
  43524b:	retf   0x3d3d
  43524e:	rcl    BYTE PTR [esi],1
  435250:	push   ss
  435251:	jge    0x43522e
  435253:	inc    esi
  435254:	sbb    bh,BYTE PTR [ebx+0x7f]
  435257:	retf   0x4b06
  43525a:	je     0x43525c
  43525c:	add    BYTE PTR [eax],al
  43525e:	mov    ebx,0x110c4e3f
  435263:	inc    esp
  435264:	sbb    BYTE PTR [ebx],ch
  435266:	imul   esi,ebp,0x126e84f
  43526c:	add    BYTE PTR [eax],al
  43526e:	popa   
  43526f:	mov    esp,0xa3f34e84
  435274:	js     0x4352c7
  435276:	or     eax,ebp
  435278:	mov    eax,0x4f97c14f
  43527d:	call   FWORD PTR [eax+esi*4+0x76]
  435281:	inc    ecx
  435282:	sti    
  435283:	es inc edx
  435285:	xor    BYTE PTR [eax-0x5f],bh
  435288:	cmp    al,0xe0
  43528b:	(bad)  
  43528d:	shl    BYTE PTR [esi-0xc000249],0xaf
  435294:	cmp    al,0xfd
  435297:	rol    BYTE PTR [ecx+eax*8],cl
  43529a:	scas   al,BYTE PTR es:[edi]
  43529b:	mov    bh,0xfd
  43529d:	(bad)  
  43529e:	sbb    al,0xb0
  4352a0:	js     0x4352eb
  4352a2:	out    dx,eax
  4352a3:	clc    
  4352a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4352a5:	adc    eax,0x7dafbd3a
  4352aa:	adc    dh,BYTE PTR [eax-0x80]
  4352ad:	clc    
  4352ae:	call   0xf101c55b
  4352b3:	(bad)  
  4352b4:	cmc    
  4352b5:	inc    ebp
  4352b6:	jb     0x4352c5
  4352b8:	test   BYTE PTR [eax],al
  4352ba:	repz scas eax,DWORD PTR es:[edi]
  4352bc:	add    bh,cl
  4352be:	lock nop
  4352c0:	or     DWORD PTR [ebp+0x0],edi
  4352c3:	add    BYTE PTR [eax],al
  4352c5:	push   esi
  4352c6:	and    BYTE PTR [edi+eax*4],al
  4352c9:	and    eax,0x6e04527c
  4352ce:	les    edx,FWORD PTR [ecx+0x2]
  4352d1:	jo     0x43532d
  4352d3:	add    BYTE PTR [esi+edi*1],al
  4352d6:	mov    bh,0x78
  4352d8:	inc    ebx
  4352d9:	retf   
  4352da:	and    bh,BYTE PTR [ebp-0x34c191f7]
  4352e0:	stc    
  4352e1:	pushf  
  4352e2:	sbb    DWORD PTR [edi],esp
  4352e4:	mov    eax,0xf9cc7098
  4352e9:	sub    al,0x25
  4352eb:	loop   0x435348
  4352ed:	mov    cl,0x6
  4352ef:	out    dx,eax
  4352f0:	add    esi,DWORD PTR [esi+0x43]
  4352f3:	mov    edi,0x5e5a1e2d
  4352f8:	out    0xc8,al
  4352fa:	(bad)  
  4352fb:	fild   WORD PTR [ebx]
  4352fd:	stos   DWORD PTR es:[edi],eax
  4352fe:	mov    eax,0x595acc82
  435303:	outs   dx,BYTE PTR ds:[esi]
  435304:	out    0xb8,al
  435306:	(bad)  
  435307:	fild   WORD PTR [ebx]
  435309:	jbe    0x4352c4
  43530b:	stos   BYTE PTR es:[edi],al
  43530c:	repz pop es
  43530e:	pop    es
  43530f:	loope  0x435303
  435311:	inc    DWORD PTR [esi]
  435313:	jmp    0x435306
  435315:	test   DWORD PTR [esi],0x6eff167
  43531b:	push   esp
  43531c:	icebp  
  43531d:	out    0x6,eax
  43531f:	mov    dh,0xf0
  435321:	fild   WORD PTR [esi]
  435323:	add    edi,eax
  435325:	xlat   BYTE PTR ds:[ebx]
  435326:	push   es
  435327:	push   ss
  435328:	test   DWORD PTR [eax],0x6cf0000
  43532e:	stos   DWORD PTR es:[edi],eax
  43532f:	test   bh,0x6
  435332:	call   0xb94a132c
  435337:	cmc    
  435338:	mov    bh,0x6
  43533a:	ins    BYTE PTR es:[edi],dx
  43533b:	cmc    
  43533c:	das    
  43533d:	pop    es
  43533e:	jo     0x435335
  435340:	daa    
  435341:	pop    es
  435342:	lahf   
  435343:	hlt    
  435344:	pop    ds
  435345:	pop    es
  435346:	xor    al,0xf4
  435348:	pop    ss
  435349:	pop    es
  43534a:	cs hlt 
  43534c:	sysret 
  43534e:	shr    bl,cl
  435350:	pop    es
  435351:	pop    es
  435352:	jbe    0x435340
  435354:	inc    DWORD PTR [esi]
  435356:	dec    eax
  435357:	in     eax,dx
  435358:	test   DWORD PTR [esi],0x6efe819
  43535e:	or     ebp,eax
  435360:	out    0x6,eax
  435362:	xor    edx,ebp
  435364:	fild   WORD PTR [esi]
  435366:	mov    gs,edx
  435368:	xlat   BYTE PTR ds:[ebx]
  435369:	push   es
  43536a:	add    bh,ch
  43536c:	sar    cl,1
  43536e:	call   FWORD PTR [ecx]
  435370:	iret   
  435371:	stc    
  435372:	(bad)  
  435373:	call   esi
  435375:	stc    
  435376:	(bad)  
  435377:	fcmovne st,st(7)
  435379:	stc    
  43537a:	call   DWORD PTR [ebx+0x71fffa16]
  435380:	or     eax,0x154cfffa
  435385:	cli    
  435386:	(bad)  
  435387:	jns    0x435396
  435389:	cli    
  43538a:	push   DWORD PTR [ebx+0x41]
  43538d:	sti    
  43538e:	(bad)  
  43538f:	fiadd  WORD PTR [eax]
  435391:	add    BYTE PTR [eax],al
  435393:	inc    ecx
  435394:	sti    
  435395:	call   DWORD PTR [eax+eax*2]
  435398:	sti    
  435399:	call   FWORD PTR [ebx]
  43539b:	inc    eax
  43539c:	sti    
  43539d:	(bad)  
  43539e:	mov    ebx,0x6252aaad
  4353a3:	ret    0x830e
  4353a6:	aas    
  4353a7:	ret    
  4353a8:	sti    
  4353a9:	test   BYTE PTR [edi-0x423f7af4],ah
  4353af:	loop   0x435332
  4353b1:	dec    edx
  4353b2:	add    eax,0xd674c072
  4353b7:	jge    0x4353ff
  4353b9:	xor    al,0x64
  4353bb:	das    
  4353bc:	xor    eax,DWORD PTR [esi]
  4353be:	mov    ecx,0xb928456d
  4353c3:	mov    ecx,0xdf2d7dc7
  4353c8:	or     BYTE PTR [edx-0x23],0x55
  4353cc:	push   ebp
  4353cd:	sub    BYTE PTR [edx+0x31],ah
  4353d0:	jecxz  0x435420
  4353d2:	fwait
  4353d3:	mov    ecx,0xb8ad7dd6
  4353d8:	mov    BYTE PTR [edx-0x3],0xf0
  4353dc:	push   es
  4353dd:	add    cl,ch
  4353df:	add    eax,0xad2c5ac7
  4353e4:	add    al,BYTE PTR [eax]
  4353e6:	add    BYTE PTR [edx-0x33],dh
  4353e9:	idiv   edi
  4353eb:	push   ebp
  4353ec:	in     eax,dx
  4353ed:	push   esp
  4353ee:	ret    0x39e
  4353f1:	int3   
  4353f2:	int3   
  4353f3:	outs   dx,WORD PTR ds:[esi]
  4353f5:	int3   
  4353f6:	int3   
  4353f7:	add    BYTE PTR [eax],al
  4353f9:	add    BYTE PTR [esi+0x6f],al
  4353fc:	int3   
  4353fd:	int3   
  4353fe:	inc    esi
  4353ff:	outs   dx,DWORD PTR ds:[esi]
  435400:	int3   
  435401:	int3   
  435402:	das    
  435403:	cmp    ah,ch
  435405:	mov    eax,DWORD PTR [edi]
  435407:	mov    ebx,0xb3178b4c
  43540c:	push   eax
  43540d:	mov    esi,DWORD PTR [ebx-0x3e]
  435410:	out    0x10,eax
  435412:	(bad)  [edx+0x35afff7]
  435418:	jnp    0x435415
  43541a:	dec    ebx
  43541b:	push   esi
  43541c:	sub    ecx,DWORD PTR [ebx-0x49f75071]
  435422:	sub    al,BYTE PTR [eax]
  435424:	ret    0xc381
  435427:	shl    bh,cl
  435429:	add    BYTE PTR [edx],cl
  43542b:	push   ecx
  43542c:	inc    BYTE PTR [eax+0xf7d2c3]
  435432:	sbb    al,BYTE PTR [eax]
  435434:	icebp  
  435435:	adc    ebp,0xa00f7d2
  43543b:	push   ecx
  43543c:	inc    BYTE PTR [eax+0xf7d2e5]
  435442:	fidiv  DWORD PTR ds:0xb9fac1bf
  435448:	pop    eax
  435449:	or     ecx,DWORD PTR [ebx]
  43544b:	in     eax,0x54
  43544d:	ret    0xac6
  435450:	dec    esi
  435451:	mov    ecx,DWORD PTR [edi-0x42]
  435454:	jle    0x43544c
  435456:	aas    
  435457:	mov    ah,0x86
  435459:	inc    esi
  43545a:	retf   
  43545b:	loopne 0x4354b3
  43545d:	pop    ebx
  43545e:	add    BYTE PTR [eax],al
  435460:	add    bh,dh
  435462:	int3   
  435463:	or     al,0x0
  435465:	repz and bl,cl
  435468:	adc    BYTE PTR [eax],ah
  43546a:	loope  0x4354e4
  43546c:	aad    0x27
  43546e:	shl    BYTE PTR [edx-0x5c],cl
  435471:	iret   
  435472:	lahf   
  435473:	std    
  435474:	push   ebx
  435476:	lods   al,BYTE PTR ds:[esi]
  435477:	pop    DWORD PTR [edx]
  435479:	lock addr16 ds std 
  43547d:	jnp    0x435478
  43547f:	dec    eax
  435480:	repz jb 0x4354ea
  435483:	int    0xf9
  435485:	repz lahf 
  435487:	push   ebx
  435488:	add    dh,BYTE PTR [edx-0x79]
  43548b:	int    0xf9
  43548d:	repz lahf 
  43548f:	test   DWORD PTR [edi+0x73],ebp
  435492:	lods   eax,DWORD PTR ds:[esi]
  435493:	jge    0x435486
  435495:	push   esp
  435496:	pop    edi
  435497:	fimul  DWORD PTR [ecx]
  435499:	js     0x4354fd
  43549b:	mov    ebp,0xc218f7e0
  4354a0:	std    
  4354a1:	sub    eax,0x3e0be76
  4354a6:	jge    0x4354a4
  4354a8:	mov    esi,0xcc362c8
  4354ad:	repz push ds
  4354af:	retf   
  4354b0:	mov    al,0xfe
  4354b2:	lahf   
  4354b3:	std    
  4354b4:	or     BYTE PTR [ecx+0x12],dh
  4354b7:	add    al,0x0
  4354b9:	repz aaa 
  4354bb:	xchg   edi,eax
  4354bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4354bd:	(bad)  
  4354be:	int    0xd0
  4354c0:	fnsave [edx]
  4354c2:	sbb    bh,bl
  4354c4:	xchg   BYTE PTR [eax],al
  4354c6:	add    BYTE PTR [eax],al
  4354c8:	inc    esi
  4354c9:	lods   al,BYTE PTR ds:[esi]
  4354ca:	jle    0x4354b1
  4354cc:	mov    ds:0x9bfffdba,eax
  4354d1:	push   0x22f3fffe
  4354d6:	pusha  
  4354d7:	and    al,0xf3
  4354d9:	lods   al,BYTE PTR ds:[esi]
  4354da:	(bad)  
  4354db:	adc    dh,al
  4354dd:	jmp    0x76906d8
  4354e2:	call   0xad4d10eb
  4354e7:	clc    
  4354e8:	bound  ebx,QWORD PTR [ebp+eiz*8+0x4]
  4354ec:	pushf  
  4354ed:	or     DWORD PTR [ebp-0x19a39d08],ebx
  4354f3:	add    al,0x9c
  4354f5:	or     DWORD PTR [ebp-0x14a3bd08],ebp
  4354fb:	add    al,0x7c
  4354fd:	or     DWORD PTR [ebp-0x13a3bd08],ebx
  435503:	add    al,0x7c
  435505:	or     DWORD PTR [ebp-0x16a35d08],ebp
  43550b:	add    al,0x5c
  43550d:	or     DWORD PTR [ebp-0x15a35d08],ebx
  435513:	add    al,0x5c
  435515:	or     DWORD PTR [ebp-0x20a37d08],ebp
  43551b:	add    al,0x3c
  43551d:	or     DWORD PTR [ebp-0xfa37d08],ebx
  435523:	add    al,0x3c
  435525:	or     DWORD PTR ds:0xdd5c62f8,ebp
  43552b:	add    al,0x0
  43552d:	add    BYTE PTR [eax],al
  43552f:	sbb    al,0x9
  435531:	sbb    eax,0xee5c62f8
  435536:	add    al,0x1c
  435538:	or     DWORD PTR ds:0xe35c42f8,ebp
  43553e:	add    al,0xfc
  435540:	or     BYTE PTR ds:0xf45c42f8,bl
  435546:	add    al,0xfc
  435548:	or     BYTE PTR ds:0xe15da2f8,ch
  43554e:	add    al,0xdc
  435550:	or     BYTE PTR ds:0xf25da2f8,bl
  435556:	add    al,0xdc
  435558:	or     BYTE PTR ds:0x88c404,ch
  43555e:	das    
  43555f:	ror    BYTE PTR [ecx+ecx*1+0x64],0x23
  435564:	scas   al,BYTE PTR es:[edi]
  435565:	stc    
  435566:	out    0x67,al
  435568:	and    al,0x80
  43556a:	out    0x70,al
  43556c:	mov    dh,0xdf
  43556e:	test   al,0xc9
  435570:	(bad)  
  435571:	mov    bx,0xb4a4
  435575:	cli    
  435576:	(bad)  
  435577:	lock int3 
  435579:	mov    eax,0x80067738
  43557e:	mov    esi,0xdee674a4
  435583:	pop    ds
  435584:	lds    ecx,FWORD PTR [ecx]
  435586:	jmp    0xa3410438
  43558b:	xor    al,0x40
  43558d:	or     al,0xe6
  43558f:	jae    0x43558b
  435591:	clc    
  435592:	mov    es,WORD PTR [eax]
  435594:	add    BYTE PTR [eax],al
  435596:	xor    al,0x88
  435598:	aad    0xf6
  43559a:	aam    0xc3
  43559c:	add    cl,ch
  43559e:	lock xor ebp,esi
  4355a1:	fnstcw WORD PTR ds:0xf0e99332
  4355a7:	push   es
  4355a8:	test   DWORD PTR [edx],ebp
  4355aa:	cs lahf 
  4355ac:	add    al,0x6c
  4355ae:	xchg   ebx,eax
  4355af:	jmp    0x22fd:0x1976e5ff
  4355b6:	and    al,0x76
  4355b8:	push   edx
  4355b9:	call   0x334111af
  4355be:	add    al,0x76
  4355c0:	push   edx
  4355c1:	jmp    0x4355b4
  4355c3:	mov    ebx,0x760422fd
  4355c8:	push   edx
  4355c9:	jmp    0x75e4:0x32fdbbf1
  4355d0:	push   edx
  4355d1:	in     eax,dx
  4355d2:	icebp  
  4355d3:	mov    ebx,0x75e422fd
  4355d8:	push   edx
  4355d9:	add    bh,al
  4355db:	or     cl,dh
  4355dd:	add    eax,DWORD PTR [eax]
  4355df:	mov    esp,0x8d456af
  4355e4:	icebp  
  4355e5:	add    edx,DWORD PTR [eax]
  4355e7:	mov    esp,0x8c556af
  4355ec:	icebp  
  4355ed:	add    esp,DWORD PTR [eax-0x44]
  4355f0:	scas   eax,DWORD PTR es:[edi]
  4355f1:	push   esi
  4355f2:	xchg   edx,eax
  4355f3:	or     cl,dh
  4355f5:	add    edx,DWORD PTR [eax-0x44]
  4355f8:	scas   eax,DWORD PTR es:[edi]
  4355f9:	push   esi
  4355fa:	add    BYTE PTR [eax],al
  4355fc:	add    BYTE PTR [ebx+0x4003f108],ah
  435602:	mov    esp,0x89056af
  435607:	icebp  
  435608:	add    edx,DWORD PTR [eax-0x44]
  43560b:	scas   eax,DWORD PTR es:[edi]
  43560c:	push   esi
  43560d:	or     DWORD PTR [eax],0xbca003f1
  435613:	scas   eax,DWORD PTR es:[edi]
  435614:	push   esi
  435615:	dec    esi
  435616:	or     cl,dh
  435618:	add    edx,DWORD PTR [eax+0x5f56afbc]
  43561e:	or     cl,dh
  435620:	add    eax,DWORD PTR [eax+0x4c56afbc]
  435626:	or     cl,dh
  435628:	add    edx,DWORD PTR [eax+0x3d56afbc]
  43562e:	or     cl,dh
  435630:	add    esp,eax
  435632:	mov    bl,ah
  435634:	adc    BYTE PTR [ecx],bl
  435636:	ret    0xc67b
  435639:	sbb    ch,bh
  43563b:	push   es
  43563c:	test   DWORD PTR [esi-0x34],edx
  43563f:	idiv   edi
  435641:	xchg   edi,eax
  435642:	pusha  
  435643:	je     0x435650
  435645:	or     eax,0xd202fe81
  43564a:	icebp  
  43564b:	cli    
  43564c:	clc    
  43564d:	inc    ecx
  43564e:	push   esi
  43564f:	in     eax,dx
  435650:	mov    eax,0x7fff868b
  435655:	repz adc ah,ah
  435658:	mov    edi,0xce5cd1c9
  43565d:	in     al,0x9f
  43565f:	ret    0xf9
  435662:	add    BYTE PTR [eax],al
  435664:	lock cmc 
  435666:	test   BYTE PTR [edi+0x73],ch
  435669:	mov    eax,ds:0xdfd4f17d
  43566e:	(bad)  
  43566f:	or     DWORD PTR [edx+0x6e],ecx
  435672:	repz jmp FWORD PTR [ebp+0x78f5ffd1]
  435679:	popa   
  43567a:	and    bh,BYTE PTR [edi+0x524b093]
  435680:	mov    dl,0xe5
  435682:	and    BYTE PTR [esi-0x334e6001],bh
  435688:	mov    bh,0x12
  43568a:	ja     0x43567a
  43568c:	test   BYTE PTR [eax-0x3d000d87],dl
  435692:	jb     0x435638
  435694:	pop    ss
  435695:	mov    al,ds:0x91f3fffd
  43569a:	mov    ebp,0xf4b6e0fd
  43569f:	mov    cl,0x2
  4356a1:	ins    DWORD PTR es:[edi],dx
  4356a2:	lods   eax,DWORD PTR ds:[esi]
  4356a3:	jg     0x4356f6
  4356a5:	xor    DWORD PTR [eax+eax*1],eax
  4356a8:	repz pop esi
  4356aa:	fmul   QWORD PTR [eax]
  4356ac:	add    BYTE PTR [edx+ebp*2-0x29fefc8],ch
  4356b3:	ds mov ebp,0xbc4ddfda
  4356b9:	sbb    al,0xc2
  4356bb:	and    ah,ch
  4356bd:	sbb    eax,0xa014fdf7
  4356c2:	js     0x4356be
  4356c4:	xor    al,BYTE PTR [ecx-0x7]
  4356c7:	test   BYTE PTR [eax],al
  4356c9:	add    BYTE PTR [eax],al
  4356cb:	add    al,0xad
  4356cd:	inc    BYTE PTR [ebx+eiz*1+0x6810d5df]
  4356d4:	pop    es
  4356d5:	aas    
  4356d6:	ret    
  4356d7:	(bad)  
  4356d8:	(bad)  
  4356d9:	addr16 loope 0x4356c6
  4356dc:	push   es
  4356dd:	out    0x3,eax
  4356df:	pop    esp
  4356e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4356e1:	or     al,BYTE PTR [ebx+esi*8]
  4356e4:	push   es
  4356e5:	outs   dx,BYTE PTR ds:[esi]
  4356e6:	lock popa 
  4356e8:	out    dx,al
  4356e9:	rol    DWORD PTR [ebx-0xd],0xf5
  4356ed:	fisub  DWORD PTR [esi-0x5]
  4356f0:	frstor [esi-0x573191fd]
  4356f6:	fmul   DWORD PTR [ebx]
  4356f8:	div    dl
  4356fa:	data16 jmp 0x4356e2
  4356fd:	es add al,0xd0
  435700:	mov    cl,0xe7
  435702:	add    esi,ebx
  435704:	cmc    
  435705:	fidivr DWORD PTR [esi-0x35]
  435708:	loope  0x435730
  43570a:	add    al,0xd6
  43570c:	push   edi
  43570d:	jmp    0x435787
  43570f:	cmp    eax,0xd1f3bfc7
  435714:	mov    cl,0xe7
  435716:	add    esi,ebx
  435718:	jge    0x4356fd
  43571a:	jle    0x435747
  43571c:	jmp    0xd8a8:0xcc760426
  435723:	jmp    0x4356ac
  435725:	xchg   ah,al
  435727:	repz push es
  435729:	out    0x10,eax
  43572b:	out    dx,eax
  43572c:	xchg   ebx,eax
  43572d:	scas   eax,DWORD PTR es:[edi]
  43572e:	sbb    BYTE PTR [eax],al
  435730:	add    BYTE PTR [eax],al
  435732:	mov    bl,0x6
  435734:	pop    esi
  435735:	test   eax,0x10ff9d74
  43573a:	not    DWORD PTR [ebx+0x6b3211f]
  435740:	push   0xe7061ae1
  435745:	add    eax,esi
  435747:	or     bl,BYTE PTR [ebx+ecx*1-0x26]
  43574b:	inc    esi
  43574c:	out    0x10,eax
  43574e:	(bad)  
  43574f:	(bad)  
  435750:	jmp    DWORD PTR [ecx+0x40]
  435753:	jno    0x43573b
  435755:	fnstcw WORD PTR [ebx-0x32]
  435758:	mov    edi,0xdd31e812
  43575d:	push   ds
  43575e:	lock push es
  435760:	add    BYTE PTR [eax-0x2e],ch
  435763:	scas   al,BYTE PTR es:[edi]
  435764:	add    cl,ch
  435766:	lock mov DWORD PTR [esp+ebx*2],edx
  43576a:	clc    
  43576b:	in     eax,0x3f
  43576d:	jmp    0xb1de7255
  435772:	fild   DWORD PTR [esi+0x0]
  435775:	bound  ecx,QWORD PTR [eax-0x5bfe1a90]
  43577b:	adc    al,0x9b
  43577d:	and    DWORD PTR [eax+esi*8+0x7b00bff],ecx
  435784:	add    cl,ch
  435786:	popf   
  435787:	adc    al,0x83
  435789:	add    DWORD PTR [eax+0x1ff9fff0],eax
  43578f:	add    eax,DWORD PTR [ebp+0x109fb6ab]
  435795:	add    al,0x0
  435797:	add    BYTE PTR [eax],al
  435799:	mov    al,0x7
  43579b:	add    cl,ch
  43579d:	jge    0x4357aa
  43579f:	and    ecx,0x59
  4357a2:	lock jmp DWORD PTR [ecx+0x3d]
  4357a6:	jo     0x43578d
  4357a8:	loope  0x435819
  4357aa:	sar    cl,cl
  4357ac:	jmp    0xe5705ea1
  4357b1:	xchg   ebx,eax
  4357b2:	out    dx,eax
  4357b3:	and    al,0x29
  4357b5:	test   DWORD PTR [ecx+0xf84a8d6],0xef53ed2d
  4357bf:	sbb    al,0xa9
  4357c1:	lock das 
  4357c3:	ficom  WORD PTR [esi-0x9]
  4357c6:	push   es
  4357c7:	add    BYTE PTR [edx],bl
  4357c9:	jmp    0x43575e
  4357cb:	cmp    BYTE PTR [eax],al
  4357cd:	in     eax,0x4a
  4357cf:	add    BYTE PTR [ebx],dh
  4357d1:	pop    ebx
  4357d2:	adc    al,0x83
  4357d4:	ror    bl,1
  4357d6:	pusha  
  4357d7:	adc    BYTE PTR [ebx+0x8e3c9e2],cl
  4357dd:	pop    ebx
  4357de:	imul   esi,edi,0x8303da00
  4357e4:	adc    al,0x5f
  4357e6:	mov    bl,0x20
  4357e8:	inc    eax
  4357e9:	retf   0xdb8a
  4357ec:	(bad)  
  4357ed:	fiadd  DWORD PTR [ebx]
  4357ef:	add    BYTE PTR [ebx],dh
  4357f1:	sahf   
  4357f2:	data16 cmp BYTE PTR [ebx],ch
  4357f5:	mov    al,BYTE PTR [ebx]
  4357f7:	sbb    eax,0xb
  4357fa:	pusha  
  4357fb:	sbb    BYTE PTR [ebx],dh
  4357fd:	add    BYTE PTR [eax],al
  4357ff:	add    BYTE PTR [esi-0x25dcc79a],ch
  435805:	or     bl,BYTE PTR ds:0x38aff
  43580b:	xor    ebx,DWORD PTR [esi-0x25d0c782]
  435811:	or     ch,BYTE PTR [ebx]
  435813:	push   ecx
  435814:	sahf   
  435815:	cmp    BYTE PTR [edx+0x1d13b2c1],0xff
  43581c:	mov    al,BYTE PTR [ebx]
  43581e:	add    BYTE PTR [ebx+0x27387e5e],cl
  435824:	sbb    cl,BYTE PTR [ebx]
  435826:	sbb    edx,0xffffff8b
  435829:	pusha  
  43582a:	or     BYTE PTR [ecx+0xc469],al
  435830:	pop    edx
  435831:	mov    eax,0xa0329cfd
  435836:	cmp    DWORD PTR [eax],eax
  435838:	rcl    ecx,1
  43583a:	mov    ecx,0xfdb822eb
  43583f:	pushf  
  435840:	shl    BYTE PTR [edi+0x699b0039],cl
  435846:	test   DWORD PTR [eax],0x2cfd9df3
  43584c:	out    dx,eax
  43584d:	cmp    dh,ch
  43584f:	sub    BYTE PTR [ebx-0x2c407d63],dh
  435855:	lods   al,BYTE PTR ds:[esi]
  435856:	inc    esp
  435857:	clc    
  435858:	jo     0x4358a1
  43585a:	fld    QWORD PTR [ebx+eiz*1-0x26402adc]
  435861:	mov    al,0xc4
  435863:	in     eax,0x0
  435865:	add    BYTE PTR [eax],al
  435867:	sti    
  435868:	push   ds
  435869:	mov    ds:0xfd9ff3f9,eax
  43586e:	test   bh,bh
  435870:	xor    dh,ch
  435872:	and    BYTE PTR [ebx],dh
  435874:	mov    al,ds:0xa0c4dd84
  435879:	std    
  43587a:	inc    DWORD PTR [eax]
  43587c:	int3   
  43587d:	mov    al,ds:0xfd600838
  435882:	test   bl,cl
  435884:	pop    edi
  435885:	stos   DWORD PTR es:[edi],eax
  435886:	sbb    al,ah
  435888:	mov    bl,0x9a
  43588a:	cmp    al,dl
  43588c:	fild   WORD PTR [ebx]
  43588e:	and    edx,DWORD PTR [eax+eiz*4-0x343f0003]
  435895:	cmp    BYTE PTR [eax],0xd4
  435898:	fild   WORD PTR [ebx]
  43589a:	sub    eax,0xbe8b7422
  43589f:	mov    dl,0xc8
  4358a1:	adc    al,0x23
  4358a3:	ins    BYTE PTR es:[edi],dx
  4358a4:	mov    al,ds:0xa478fffd
  4358a9:	cmp    BYTE PTR [eax],0x14
  4358ac:	loopne 0x4358b1
  4358ae:	test   DWORD PTR [ecx],edi
  4358b0:	pop    edi
  4358b1:	stos   DWORD PTR es:[edi],eax
  4358b2:	or     BYTE PTR [edx-0x7f],dh
  4358b5:	mov    edi,0xf49ff300
  4358ba:	add    ebx,DWORD PTR [esi+0x78]
  4358bd:	in     al,dx
  4358be:	aas    
  4358bf:	repz sub dl,bl
  4358c2:	mov    edi,0xf4ff0718
  4358c7:	lock mov ebx,DWORD PTR [edi]
  4358ca:	in     eax,0x0
  4358cc:	add    BYTE PTR [eax],al
  4358ce:	fadd   QWORD PTR [esi]
  4358d0:	push   0xe7071aa6
  4358d5:	add    ebx,esi
  4358d7:	add    bl,BYTE PTR [esp+edi*8-0x25]
  4358db:	inc    esi
  4358dc:	out    0x50,eax
  4358de:	jmp    0x66ad:0xfabf3383
  4358e5:	ret    0x38f7
  4358e8:	mov    bh,0x8c
  4358ea:	rol    edi,0xd
  4358ed:	push   es
  4358ee:	jbe    0x43589d
  4358f0:	(bad)  
  4358f1:	add    dl,BYTE PTR [esi-0x38]
  4358f4:	jecxz  0x435882
  4358f6:	retf   
  4358f7:	(bad)  
  4358f8:	adc    dl,BYTE PTR [esp+eax*2]
  4358fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4358fc:	cli    
  4358fd:	add    esi,ebx
  4358ff:	push   es
  435900:	pop    esi
  435901:	add    BYTE PTR [eax-0x12],bh
  435904:	rol    DWORD PTR [ebx-0xd],0x81
  435908:	mov    edi,0x67fe8ec2
  43590d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43590e:	call   0x6bea:0xc603e706
  435915:	sti    
  435916:	xlat   BYTE PTR ds:[ebx]
  435917:	inc    esi
  435918:	out    0x8c,eax
  43591a:	stos   DWORD PTR es:[edi],eax
  43591b:	(bad)  
  43591c:	into   
  43591d:	sbb    ecx,esi
  43591f:	jmp    0xe6e7:0x46d7fb53
  435926:	imul   eax,DWORD PTR [esi],0xffffffe7
  435929:	add    edx,DWORD PTR [esi]
  43592b:	jmp    0x435990
  43592d:	sti    
  43592e:	or     eax,DWORD PTR [edi-0x19]
  435931:	test   BYTE PTR [eax],al
  435933:	add    BYTE PTR [eax],al
  435935:	dec    ecx
  435936:	add    bl,BYTE PTR ds:0x3a33328d
  43593c:	pusha  
  43593d:	sahf   
  43593e:	xor    DWORD PTR [ecx+0x37],0xffffffe5
  435942:	xchg   esi,eax
  435943:	add    dh,ah
  435945:	mov    edx,0x71992cfd
  43594a:	int3   
  43594b:	stc    
  43594c:	jmp    0x52026041
  435951:	call   0x18bf5d31
  435956:	or     al,BYTE PTR [eax-0x17]
  435959:	mov    cl,0x40
  43595b:	jae    0x4359ab
  43595d:	dec    ebx
  43595e:	(bad)  
  43595f:	pop    edx
  435960:	sub    ch,BYTE PTR [edx+edi*4]
  435963:	int3   
  435964:	pushf  
  435965:	addr16 call 0x9cc7:0x87fc9c85
  43596d:	cli    
  43596e:	fnstcw WORD PTR [edi-0x44944]
  435974:	popa   
  435975:	cmp    eax,0xf8a48517
  43597a:	sahf   
  43597b:	and    eax,DWORD PTR [ebx+esi*4]
  43597e:	scas   al,BYTE PTR es:[edi]
  43597f:	pop    ebx
  435980:	sub    ebp,esp
  435982:	push   es
  435983:	int3   
  435984:	pushf  
  435985:	sbb    ebx,DWORD PTR [ecx+0x4d]
  435988:	push   0x5c
  43598a:	jecxz  0x435910
  43598c:	cmp    eax,0x2d84f49b
  435991:	mov    esi,eax
  435993:	test   BYTE PTR [ebx],ch
  435995:	xlat   BYTE PTR ds:[ebx]
  435996:	adc    DWORD PTR [esi+0x5d],0x20006f7
  4359a0:	mov    al,0x82
  4359a2:	ds cmc 
  4359a4:	imul   edx,DWORD PTR [ebp+0x7c],0xe56bf035
  4359ab:	jmp    0x435966
  4359ad:	imul   ebx,ebp,0xfffffff9
  4359b0:	stc    
  4359b1:	into   
  4359b2:	xchg   ebp,edi
  4359b4:	push   esp
  4359b5:	cmp    DWORD PTR [esi+0x79],0xffffffef
  4359b9:	push   es
  4359ba:	add    BYTE PTR [edx-0x57],ah
  4359bd:	xor    dh,BYTE PTR ds:0xfa479200
  4359c3:	mov    dl,BYTE PTR [edx+0x22245c7a]
  4359c9:	sub    DWORD PTR [edx+0x38],0x423ee93
  4359d0:	mov    eax,ds:0x3e8d6be0
  4359d5:	scas   eax,DWORD PTR es:[edi]
  4359d6:	stc    
  4359d7:	mov    BYTE PTR [esi],bh
  4359d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4359da:	sbb    DWORD PTR [ebx-0x7c278c2b],ecx
  4359e0:	mov    edx,0xf6448107
  4359e5:	push   cs
  4359e6:	add    DWORD PTR [edx-0x12],0xffffffb5
  4359ea:	inc    DWORD PTR [eax]
  4359ec:	fiadd  DWORD PTR [edi]
  4359ee:	and    ebp,eax
  4359f0:	lea    eax,ds:0x4961ed2b
  4359f6:	js     0x435981
  4359f8:	xchg   BYTE PTR [ebx+0x79ea0315],ah
  4359fe:	je     0x435a24
  435a00:	add    BYTE PTR [eax],al
  435a02:	add    dl,al
  435a04:	cld    
  435a05:	scas   al,BYTE PTR es:[edi]
  435a06:	pop    ds
  435a07:	inc    ebx
  435a08:	daa    
  435a09:	and    al,0x10
  435a0b:	int    0x34
  435a0d:	pop    esp
  435a0e:	cmp    BYTE PTR [ebp-0x61dba386],bl
  435a14:	xor    BYTE PTR [edx+0x40],0x21
  435a18:	adc    al,0x24
  435a1a:	jmp    0x4359bb
  435a1c:	xchg   esi,eax
  435a1d:	inc    ecx
  435a1e:	add    cl,bh
  435a20:	rol    BYTE PTR [edi],0xb7
  435a23:	jle    0x435a61
  435a25:	xor    ecx,ebp
  435a27:	lea    eax,[ecx+0x78a00e0]
  435a2d:	jns    0x435a19
  435a2f:	pop    edx
  435a30:	pop    es
  435a31:	stc    
  435a32:	call   FWORD PTR [ebp+0x7f]
  435a35:	aam    0x0
  435a37:	dec    edx
  435a38:	pop    es
  435a39:	pop    es
  435a3a:	mov    bh,0xf3
  435a3c:	fptan  
  435a3e:	clc    
  435a3f:	or     BYTE PTR [ecx+0x38],ah
  435a42:	fstp   TBYTE PTR [eax-0x27]
  435a45:	out    0x3,eax
  435a47:	in     al,dx
  435a48:	hlt    
  435a49:	add    bh,bh
  435a4b:	stc    
  435a4c:	(bad)  
  435a4e:	xsha1  (bad)
  435a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435a50:	mov    WORD PTR [esp+edx*1+0x243138cf],cs
  435a57:	idiv   DWORD PTR [eax]
  435a59:	cmp    DWORD PTR [ebx+edx*8],esp
  435a5c:	mov    al,ds:0x1b785b4
  435a61:	sbb    BYTE PTR [esi-0x645bcf5],dh
  435a67:	add    BYTE PTR [eax],al
  435a69:	add    BYTE PTR [esi+0x29],ch
  435a6c:	cmc    
  435a6d:	pop    es
  435a6e:	repnz popf 
  435a70:	std    
  435a71:	mov    ah,BYTE PTR [edi-0x1b00fa50]
  435a77:	mov    al,ds:0xcd210486
  435a7c:	add    DWORD PTR [esi],esi
  435a7e:	pop    esi
  435a7f:	lods   al,BYTE PTR ds:[esi]
  435a80:	xchg   BYTE PTR [ecx+eax*1-0x5c],al
  435a84:	out    dx,al
  435a85:	inc    ebx
  435a86:	or     DWORD PTR [eax+edi*1+0x4de7001],ebx
  435a8d:	jae    0x435a59
  435a8f:	add    eax,0xa4b17d34
  435a94:	ins    BYTE PTR es:[edi],dx
  435a95:	stc    
  435a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a97:	mov    al,ds:0x1cf572fd
  435a9c:	mov    esi,0x14c8b3fe
  435aa1:	sub    al,0xf2
  435aa3:	sbb    al,0xce
  435aa5:	add    BYTE PTR [esi-0x64],dh
  435aa8:	test   DWORD PTR [edi+edi*8-0x53db1bfd],0x6cfeffb3
  435ab3:	mov    al,ds:0x7784c3a
  435ab8:	cmp    ebp,eax
  435aba:	and    al,0x7e
  435abc:	cmp    ebp,eax
  435abe:	clc    
  435abf:	in     eax,dx
  435ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ac1:	cmp    eax,0xe8137dfe
  435ac6:	in     al,dx
  435ac7:	jge    0x435ac6
  435ac9:	inc    ebx
  435aca:	jbe    0x435b17
  435acc:	ret    
  435acd:	sldt   WORD PTR [eax]
  435ad0:	add    BYTE PTR [esi+0x13],ch
  435ad3:	retf   
  435ad4:	stos   BYTE PTR es:[edi],al
  435ad5:	mov    ecx,0x6ebd6aa9
  435ada:	dec    ebx
  435adb:	or     ebx,DWORD PTR [esp+esi*2]
  435ade:	inc    ebx
  435adf:	add    esp,DWORD PTR [eax]
  435ae1:	ins    BYTE PTR es:[edi],dx
  435ae2:	cmp    eax,0x2c4ff8d7
  435ae7:	cld    
  435ae8:	mov    BYTE PTR [edi-0x1e],bh
  435aeb:	jmp    0xece7:0xb3800300
  435af2:	stc    
  435af3:	jns    0x435b55
  435af5:	sub    ebp,DWORD PTR [edx-0x7fccc5a2]
  435afb:	ret    
  435afc:	out    0xe8,eax
  435afe:	jge    0x435af3
  435b00:	out    0xcd,eax
  435b02:	out    0x11,eax
  435b04:	mov    ebp,0xe7b37dca
  435b09:	cld    
  435b0a:	shr    DWORD PTR [ebx-0x17fb2719],0x3
  435b11:	repz jg 0x435ab1
  435b14:	xor    esi,DWORD PTR [esi+0x52]
  435b17:	ret    
  435b18:	sti    
  435b19:	outs   dx,DWORD PTR ds:[esi]
  435b1a:	dec    edx
  435b1b:	or     esp,DWORD PTR [eax]
  435b1d:	jbe    0x435b63
  435b1f:	push   ebx
  435b20:	stc    
  435b21:	mov    esp,0x4e88e529
  435b26:	test   DWORD PTR [ebx+0x22491fe7],esp
  435b2c:	pop    edi
  435b2d:	ds sti 
  435b2f:	in     al,dx
  435b30:	and    al,BYTE PTR [esi]
  435b32:	sbb    al,0x0
  435b34:	inc    DWORD PTR [eax]
  435b36:	add    BYTE PTR [eax],al
  435b38:	push   0x18361ff7
  435b3d:	xor    ebp,DWORD PTR [eax-0x37]
  435b40:	or     eax,0x630c6d4a
  435b45:	or     DWORD PTR [ecx+0x19],ebp
  435b48:	or     esp,DWORD PTR [edx]
  435b4a:	imul   eax,DWORD PTR [eax],0x2
  435b4d:	es fs leave 
  435b50:	adc    DWORD PTR [ebp*2+0x6c490404],ebx
  435b57:	lock adc BYTE PTR [edx+0x69],cl
  435b5b:	add    eax,0xdb61e6cc
  435b60:	iret   
  435b61:	sbb    eax,0x21e2ab20
  435b66:	pop    edi
  435b67:	(bad)  
  435b68:	adc    BYTE PTR [ebx],bh
  435b6a:	pop    edi
  435b6b:	sar    BYTE PTR [ebp+eiz*1+0x3617156e],0x6e
  435b73:	sar    BYTE PTR [edx+esi*1-0x262f389d],1
  435b7a:	ss lock call 0xac6d617e
  435b81:	mov    ebx,0xbba42dcc
  435b86:	int3   
  435b87:	fs jb  0x435b1d
  435b8a:	add    cl,ch
  435b8c:	lock outs dx,DWORD PTR ds:[esi]
  435b8e:	sbb    ch,al
  435b90:	lock push es
  435b92:	push   edx
  435b93:	ins    BYTE PTR es:[edi],dx
  435b94:	or     al,0xe3
  435b96:	(bad)  
  435b97:	mov    ecx,0xb9872566
  435b9c:	add    BYTE PTR [eax],al
  435b9e:	add    BYTE PTR [ebx-0x39],dh
  435ba1:	add    al,0x30
  435ba3:	loop   0x435b58
  435ba5:	mov    ebp,DWORD PTR [ebx+0x67]
  435ba8:	add    BYTE PTR [eax],al
  435baa:	jmp    0xe94368be
  435baf:	lock fyl2x 
  435bb2:	add    BYTE PTR [edx+edi*2],ch
  435bb5:	xor    BYTE PTR [ebx+0x7541074a],al
  435bbb:	scas   eax,DWORD PTR es:[edi]
  435bbc:	jle    0x435c38
  435bbe:	jl     0x435c10
  435bc0:	add    al,0x0
  435bc2:	mov    ecx,0x459
  435bc7:	(bad)  
  435bc8:	out    0x23,al
  435bca:	add    BYTE PTR [ecx],ch
  435bcc:	jbe    0x435c2c
  435bce:	mov    DWORD PTR [edx],ebp
  435bd0:	add    eax,0xecf60304
  435bd6:	mov    eax,0x44b
  435bdb:	cld    
  435bdc:	jns    0x435c58
  435bde:	xchg   esp,eax
  435bdf:	push   cs
  435be0:	add    al,0x0
  435be2:	xor    ecx,edx
  435be4:	jns    0x435c60
  435be6:	lods   al,BYTE PTR ds:[esi]
  435be7:	sbb    al,0x4
  435be9:	add    BYTE PTR [ecx+0xe1a98],cl
  435bef:	sbb    bh,BYTE PTR [ebx+0x7a]
  435bf2:	mov    al,0x1c
  435bf4:	add    al,0x0
  435bf6:	mov    DWORD PTR [eax-0x25fff1de],ecx
  435bfc:	dec    ebp
  435bfd:	mov    ebx,0xccbf06cc
  435c02:	int3   
  435c03:	add    BYTE PTR [eax],al
  435c05:	add    BYTE PTR [esi],ah
  435c07:	mov    edi,0xbf06cccc
  435c0c:	int3   
  435c0d:	int3   
  435c0e:	(bad)  
  435c0f:	js     0x435bfd
  435c11:	push   ecx
  435c12:	push   ecx
  435c13:	xchg   ebx,eax
  435c14:	push   eax
  435c15:	adc    al,0xca
  435c17:	add    ecx,DWORD PTR [ebx+0x56]
  435c1a:	inc    ecx
  435c1b:	test   BYTE PTR [edi],0x8b
  435c1e:	inc    esi
  435c1f:	xor    ebx,DWORD PTR [ebx+ecx*1-0x66]
  435c23:	add    eax,DWORD PTR [ebp+0x5579fc0c]
  435c29:	cld    
  435c2a:	sar    DWORD PTR [eax+0x7ef38f07],1
  435c30:	std    
  435c31:	push   ebx
  435c33:	cmp    ch,bh
  435c35:	test   BYTE PTR [edi+0x35],al
  435c38:	sbb    eax,0x8a9df305
  435c3d:	pushf  
  435c3e:	jnp    0x435c51
  435c40:	or     DWORD PTR [eax],eax
  435c42:	repz enter 0x146e,0xa4
  435c47:	mov    al,0x6e
  435c49:	sbb    al,0x74
  435c4b:	(bad)  
  435c4c:	clc    
  435c4d:	int3   
  435c4e:	shl    DWORD PTR [esi+0x31791830],0xff
  435c55:	push   edi
  435c56:	out    0x9d,eax
  435c58:	std    
  435c59:	test   BYTE PTR [edi+0x35],bh
  435c5c:	push   ecx
  435c5d:	add    eax,0x93fb9df3
  435c62:	in     eax,dx
  435c63:	adc    eax,0xc8f30010
  435c68:	add    al,0x3f
  435c6a:	add    BYTE PTR [eax],al
  435c6c:	add    BYTE PTR [eax-0x6f],ch
  435c6f:	test   DWORD PTR [eax+edi*8-0x63],ebx
  435c73:	std    
  435c74:	test   BYTE PTR [esi-0x184ef9c7],bl
  435c7a:	dec    eax
  435c7b:	push   es
  435c7c:	mov    cl,0xd7
  435c7e:	xor    BYTE PTR [edi],bl
  435c80:	xor    eax,0x733d62c0
  435c85:	add    BYTE PTR [ecx],ch
  435c87:	push   eax
  435c88:	cld    
  435c89:	imul   ecx,DWORD PTR [ebx+eax*1-0x25000a8],0x55b66f35
  435c94:	adc    al,0xf3
  435c96:	scas   eax,DWORD PTR es:[edi]
  435c97:	das    
  435c98:	sub    ch,BYTE PTR [eax-0x7d]
  435c9b:	add    eax,0x51407f87
  435ca0:	add    eax,0x908aaff3
  435ca5:	inc    ebx
  435ca6:	mov    esp,0x768fffd
  435cab:	fadd   DWORD PTR ds:0xc5490ac
  435cb1:	(bad)  
  435cb2:	rcl    BYTE PTR [ecx-0x7a],1
  435cb5:	outs   dx,BYTE PTR ds:[esi]
  435cb6:	push   esp
  435cb7:	retf   
  435cb8:	mov    ebp,DWORD PTR [edi+0x57]
  435cbb:	and    ecx,DWORD PTR ds:0x5d1906f3
  435cc1:	jbe    0x435c6f
  435cc3:	adc    al,0xc5
  435cc5:	outs   dx,BYTE PTR ds:[esi]
  435cc6:	cmp    al,0xab
  435cc8:	lea    ebp,[eax+0x7f8b410e]
  435cce:	(bad)  
  435ccf:	cmp    ecx,DWORD PTR ds:0xf3000000
  435cd5:	push   es
  435cd6:	lea    edx,cs:[eax+0x44]
  435cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435cdb:	mov    ebx,DWORD PTR [edi+0x57]
  435cde:	and    ecx,DWORD PTR ds:0x5d1906f3
  435ce4:	jbe    0x435c92
  435ce6:	adc    al,0xc5
  435ce8:	aaa    
  435ce9:	rcr    DWORD PTR [ebx+0x33d32fc8],cl
  435cef:	enter  0xd327,0x2b
  435cf3:	enter  0xd33f,0xbc
  435cf7:	mov    WORD PTR [edi],ss
  435cf9:	mov    bh,BYTE PTR [ebx]
  435cfb:	in     al,dx
  435cfc:	ja     0x435d36
  435cfe:	jmp    0x435d54
  435d00:	outs   dx,BYTE PTR ds:[esi]
  435d01:	add    BYTE PTR [esi+0x4b],ch
  435d04:	sti    
  435d05:	(bad)  
  435d06:	pushf  
  435d07:	stos   DWORD PTR es:[edi],eax
  435d08:	outs   dx,BYTE PTR ds:[esi]
  435d09:	neg    DWORD PTR [edi+0x4f]
  435d0c:	mov    edi,0x42ffb891
  435d11:	nop
  435d12:	mov    ah,0xa3
  435d14:	jbe    0x435d4d
  435d16:	fist   WORD PTR [eax+0x6e]
  435d19:	pop    ds
  435d1a:	div    esp
  435d1c:	mov    ch,0x8f
  435d1e:	pushf  
  435d1f:	lahf   
  435d20:	jmp    0xc7:0xb58d185d
  435d27:	or     edi,edi
  435d29:	or     eax,esi
  435d2b:	pusha  
  435d2c:	outs   dx,DWORD PTR ds:[esi]
  435d2d:	loop   0x435d33
  435d2f:	jmp    0x29cbeb24
  435d34:	inc    BYTE PTR [esi]
  435d36:	add    BYTE PTR [eax+0x0],ah
  435d39:	add    BYTE PTR [eax],al
  435d3b:	js     0x435d87
  435d3d:	add    eax,0x888df0e9
  435d42:	xor    esi,esp
  435d44:	push   es
  435d45:	add    BYTE PTR [eax+0x78],dh
  435d48:	push   edx
  435d49:	add    eax,0x888df0e9
  435d4e:	sbb    esi,ebp
  435d50:	push   es
  435d51:	add    BYTE PTR [eax+0x68],dh
  435d54:	cmp    al,BYTE PTR ds:0x888df0e9
  435d5a:	xor    esi,esi
  435d5c:	push   es
  435d5d:	add    BYTE PTR [edx+0x68],ah
  435d60:	cmp    dl,BYTE PTR [ecx+ebp*8]
  435d63:	lock mov edx,DWORD PTR [ecx+esi*2-0x16fff43c]
  435d6b:	pop    ds
  435d6c:	int3   
  435d6d:	bound  esp,QWORD PTR [eax-0x4c]
  435d70:	xchg   ebx,eax
  435d71:	(bad)  
  435d72:	jno    0x435ddc
  435d74:	cmp    dl,BYTE PTR [ecx+ebp*8]
  435d77:	lock repz icebp 
  435d7a:	test   al,0x79
  435d7c:	inc    ecx
  435d7d:	fsub   DWORD PTR [eax-0x3b]
  435d80:	mov    ds:0x2538bc87,al
  435d85:	idiv   esp
  435d87:	test   BYTE PTR [esi],0x0
  435d8a:	out    0x6d,al
  435d8c:	cmp    eax,0x8ff0e8ff
  435d91:	xchg   esp,eax
  435d92:	jno    0x435dd0
  435d94:	or     al,BYTE PTR [eax]
  435d96:	jmp    0x54379614
  435d9b:	mov    ebp,0xe9f9a2
  435da0:	add    BYTE PTR [eax],al
  435da2:	iret   
  435da3:	aad    0xfd
  435da5:	inc    DWORD PTR [eax]
  435da7:	xchg   ecx,eax
  435da8:	dec    ebp
  435da9:	in     al,dx
  435daa:	and    ecx,DWORD PTR [ebp-0x10]
  435dad:	nop
  435dae:	adc    DWORD PTR [ebp-0xc],ecx
  435db1:	mov    edi,DWORD PTR [ebx+0x194caf0f]
  435db7:	or     DWORD PTR [edi],eax
  435db9:	mov    bh,0xde
  435dbb:	(bad)  
  435dbc:	cli    
  435dbd:	inc    eax
  435dbe:	loope  0x435d8b
  435dc0:	jbe    0x435dc8
  435dc2:	aam    0x8f
  435dc4:	(bad)  
  435dc5:	mov    DWORD PTR [edi+0x1e895e62],esi
  435dcb:	js     0x435dc7
  435dcd:	cmp    al,BYTE PTR [edi]
  435dcf:	jae    0x435e48
  435dd1:	inc    edi
  435dd2:	rcr    ebp,1
  435dd4:	jecxz  0x435e3c
  435dd6:	lea    eax,[edi+0x8413c48]
  435ddc:	add    BYTE PTR [ebx],dh
  435dde:	mov    al,fs:0x91507cd0
  435de4:	jmp    0xa1e0:0x758fb52b
  435deb:	xchg   esi,eax
  435dec:	mov    al,0xf
  435dee:	in     eax,0x9e
  435df0:	mov    WORD PTR [ebx],es
  435df2:	jl     0x435e00
  435df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435df5:	iret   
  435df6:	or     edx,DWORD PTR [eax+0x81a16a8]
  435dfc:	or     DWORD PTR [ebp-0x42],0xffffff85
  435e00:	shl    DWORD PTR [edx+edi*8+0xc],0xaf
  435e05:	push   esp
  435e06:	add    BYTE PTR [eax],al
  435e08:	add    BYTE PTR [ebx-0x222a04f8],bl
  435e0e:	sub    al,0xcf
  435e10:	add    DWORD PTR [edx+0x2f],ecx
  435e13:	push   cs
  435e14:	add    dl,cl
  435e16:	nop
  435e17:	jne    0x435e15
  435e19:	popa   
  435e1a:	(bad)  
  435e1b:	test   DWORD PTR [ebx-0xfb8c69],0x73a16af3
  435e25:	outs   dx,DWORD PTR ds:[esi]
  435e26:	sub    ch,BYTE PTR [edx+0x3f16f09]
  435e2c:	add    bl,dh
  435e2e:	xor    bh,BYTE PTR [eax+0x78]
  435e31:	out    0xa8,eax
  435e33:	std    
  435e34:	jmp    FWORD PTR [eax-0x7e]
  435e37:	mov    cl,0x47
  435e39:	or     eax,0xcf487131
  435e3e:	cwde   
  435e3f:	std    
  435e40:	push   ebx
  435e42:	sub    cl,BYTE PTR [ecx-0x25740b8]
  435e48:	(bad)  
  435e49:	(bad)  
  435e4a:	mov    esi,0xae17a488
  435e4f:	std    
  435e50:	push   ebx
  435e52:	xor    BYTE PTR [edi+0x7d4babfe],ah
  435e58:	repz add DWORD PTR ss:[edx+0x45297062],ebp
  435e60:	cmp    bh,al
  435e62:	lods   eax,DWORD PTR ds:[esi]
  435e63:	std    
  435e64:	std    
  435e65:	jp     0x435dfb
  435e67:	mov    dl,0x0
  435e69:	repz adc eax,DWORD PTR [ebx]
  435e6c:	xchg   esp,eax
  435e6d:	add    BYTE PTR [eax],al
  435e6f:	add    BYTE PTR [ebx-0xcfff99f],bh
  435e75:	sub    bh,al
  435e77:	(bad)
  435e7c:	icebp  
  435e7d:	xor    ch,BYTE PTR [ebx+0x50184479]
  435e83:	cld    
  435e84:	outs   dx,BYTE PTR ds:[esi]
  435e85:	fild   QWORD PTR [eax]
  435e87:	imul   ebp,DWORD PTR [edx-0x2e],0xffffffa1
  435e8b:	or     DWORD PTR [esp+ecx*1],edi
  435e8e:	mov    edi,DWORD PTR [ebx-0x19]
  435e91:	sub    esi,DWORD PTR [edx+0x48253f74]
  435e97:	lock outs dx,BYTE PTR ds:[esi]
  435e99:	sbb    al,0x85
  435e9b:	pop    esp
  435e9c:	call   0x784745a7
  435ea1:	jle    0x435e8a
  435ea3:	add    esi,ebx
  435ea5:	push   es
  435ea6:	pop    esi
  435ea7:	inc    ebp
  435ea8:	mov    edi,0x36b39ca2
  435ead:	mov    cl,0xeb
  435eaf:	mov    WORD PTR [eax],fs
  435eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435eb2:	mov    esi,0xc2229b48
  435eb7:	push   es
  435eb8:	bound  esp,QWORD PTR [ebx]
  435eba:	pop    esi
  435ebb:	add    DWORD PTR [eax+0x1b],ebp
  435ebe:	outs   dx,BYTE PTR ds:[esi]
  435ebf:	add    al,dh
  435ec1:	pushf  
  435ec2:	push   ebx
  435ec3:	sbb    ebp,DWORD PTR [esi-0x43]
  435ec6:	(bad)  
  435ec7:	aam    0x76
  435ec9:	sahf   
  435eca:	pop    esi
  435ecb:	push   edi
  435ecc:	fwait
  435ecd:	adc    bh,BYTE PTR [edx+0x8]
  435ed0:	jbe    0x435ee4
  435ed2:	mov    bh,BYTE PTR [ebx+0x64000000]
  435ed8:	pop    edx
  435ed9:	jg     0x435ee9
  435edb:	repz push es
  435edd:	inc    ecx
  435ede:	mov    eax,DWORD PTR [ecx]
  435ee0:	mov    ds:0x2476b034,al
  435ee5:	xchg   ebx,eax
  435ee6:	mov    eax,eax
  435ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ee9:	ins    BYTE PTR es:[edi],dx
  435eea:	mov    ch,0xc0
  435eec:	bound  ebx,QWORD PTR [esi+0x37]
  435eef:	inc    edi
  435ef0:	xchg   BYTE PTR [edx-0x3704afe],dl
  435ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ef7:	mov    al,ds:0xc6561278
  435efc:	lea    eax,[edi+edx*2-0x37cc2caa]
  435f03:	aas    
  435f04:	shr    DWORD PTR [ebx],cl
  435f06:	enter  0xd337,0xbc
  435f0a:	mov    BYTE PTR [edi],cl
  435f0c:	xchg   BYTE PTR [ebx],bh
  435f0e:	adc    al,0xa6
  435f10:	cmp    BYTE PTR [edx+0x1f8de488],bl
  435f16:	add    eax,0xeb0049a2
  435f1b:	jecxz  0x435ef0
  435f1d:	shl    DWORD PTR [eax+ebx*4-0x79d90661],0x89
  435f25:	inc    ebx
  435f26:	sbb    DWORD PTR [eax+ecx*2+0x1],ebp
  435f2a:	add    DWORD PTR fs:[ebx],ecx
  435f2d:	sub    DWORD PTR [ecx],0x4
  435f30:	movzx  esi,WORD PTR [ebx-0x9]
  435f34:	push   es
  435f35:	add    BYTE PTR [edi+ebx*8-0x5d],ch
  435f39:	mov    cl,0xf6
  435f3b:	add    BYTE PTR [eax],al
  435f3d:	add    BYTE PTR [edi+0x6],ah
  435f40:	add    BYTE PTR [edi-0x1066b597],al
  435f46:	or     eax,0x607109bc
  435f4b:	push   es
  435f4c:	add    cl,ch
  435f4e:	jae    0x435f17
  435f50:	add    ch,BYTE PTR [edx]
  435f52:	push   0x2572fc1d
  435f57:	ja     0x5bcf0279
  435f5d:	mov    ecx,0xc85636b
  435f62:	fwait
  435f63:	cmpxchg DWORD PTR [edx],eax
  435f66:	mov    cl,0xdb
  435f68:	into   
  435f69:	sbb    al,0xf3
  435f6b:	fstp   TBYTE PTR [ebp+ebx*1+0xcd1dbdd]
  435f72:	jmp    0xafa05e9b
  435f77:	and    al,BYTE PTR [esi]
  435f79:	jmp    0x6c6d0b6e
  435f7e:	xor    BYTE PTR [edx],bl
  435f80:	adc    dh,BYTE PTR [edx-0xe8b612b]
  435f86:	out    dx,al
  435f87:	lahf   
  435f88:	test   BYTE PTR [esi-0x44],ah
  435f8b:	or     BYTE PTR [eax],al
  435f8d:	jmp    0x8dc4ff70
  435f92:	jmp    0x7b11:0x41000006
  435f99:	cli    
  435f9a:	loopne 0x435f77
  435f9c:	add    BYTE PTR [esi+0x25],ah
  435f9f:	and    eax,eax
  435fa1:	or     al,BYTE PTR [eax]
  435fa3:	add    BYTE PTR [eax],al
  435fa5:	retf   0xe304
  435fa8:	pop    es
  435fa9:	jl     0x436006
  435fab:	jg     0x435f71
  435fad:	rol    BYTE PTR [eax+eax*1],0x33
  435fb1:	clc    
  435fb2:	mov    WORD PTR ds:0x6dbf4ff8,?
  435fb8:	or     dh,BYTE PTR [ebx]
  435fba:	mov    es,WORD PTR [eax]
  435fbc:	add    BYTE PTR [edx-0xefc9577],bl
  435fc2:	adc    DWORD PTR [ebx],esi
  435fc4:	ret    
  435fc5:	pop    ds
  435fc6:	push   cs
  435fc7:	mov    cl,0x6
  435fc9:	call   0xe356:0x2b8d0004
  435fd0:	or     BYTE PTR [ebx+0xc],ah
  435fd3:	add    BYTE PTR [eax],al
  435fd5:	mov    al,BYTE PTR [edi+0x4dd9fd69]
  435fdb:	cld    
  435fdc:	add    al,0xa5
  435fde:	inc    esi
  435fdf:	hlt    
  435fe0:	jne    0x435fac
  435fe2:	xor    edx,DWORD PTR [esi+0x5b]
  435fe5:	shr    DWORD PTR [ebp+0x55],1
  435fe8:	ret    
  435fe9:	xchg   bh,al
  435feb:	int3   
  435fec:	int3   
  435fed:	xchg   esi,eax
  435fee:	(bad)  
  435fef:	int3   
  435ff0:	int3   
  435ff1:	call   FWORD PTR [edi]
  435ff3:	in     al,dx
  435ff4:	xor    DWORD PTR [esi-0x5ea9b50a],0x58
  435ffb:	pop    es
  435ffc:	mov    bh,0x4
  435ffe:	or     DWORD PTR [ebx],ebp
  436000:	sar    ch,cl
  436002:	pop    ds
  436003:	icebp  
  436004:	(bad)  
  436005:	iret   
  436006:	idiv   di
  436009:	add    BYTE PTR [eax],al
  43600b:	add    BYTE PTR [ebp-0x61a27ead],dl
  436011:	test   DWORD PTR [edx+0x7],eax
  436014:	repz lock inc esi
  436017:	clc    
  436018:	out    dx,eax
  436019:	lods   eax,DWORD PTR ds:[esi]
  43601a:	std    
  43601b:	push   DWORD PTR [esi-0x1c]
  43601e:	ss or  al,0xaa
  436021:	adc    eax,DWORD PTR [eax+eax*1]
  436024:	repz lock inc esi
  436027:	clc    
  436028:	lock lods eax,DWORD PTR ds:[esi]
  43602a:	std    
  43602b:	push   DWORD PTR [esi-0x18]
  43602e:	cld    
  43602f:	xchg   esi,edi
  436031:	stos   BYTE PTR es:[edi],al
  436032:	std    
  436033:	push   DWORD PTR [eax-0x11]
  436036:	add    eax,0xad7a6a41
  43603b:	xchg   DWORD PTR [esi],ebp
  43603d:	imul   BYTE PTR [eax-0x1]
  436040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436041:	lods   eax,DWORD PTR ds:[esi]
  436042:	std    
  436043:	test   BYTE PTR [esp-0x271b0fd1],bl
  43604a:	in     al,dx
  43604b:	test   BYTE PTR [esi],al
  43604d:	ret    0xcd02
  436050:	jp     0x43608c
  436052:	test   al,0x87
  436054:	inc    cl
  436056:	jl     0x4360ab
  436058:	ja     0x43604e
  43605a:	sar    BYTE PTR [ebx-0x5],cl
  43605d:	add    al,0xb5
  43605f:	or     DWORD PTR [edi+0x58],ebp
  436062:	add    DWORD PTR [eax],eax
  436064:	repz xchg esp,eax
  436066:	pop    eax
  436067:	clc    
  436068:	in     al,0x42
  43606a:	push   0x80adf300
  43606f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436070:	add    BYTE PTR [eax],al
  436072:	add    BYTE PTR [edi],cl
  436074:	scas   al,BYTE PTR es:[edi]
  436075:	std    
  436076:	push   ebx
  436078:	test   al,0x76
  43607a:	mov    esp,0xfffa0f83
  43607f:	sub    al,0x14
  436081:	jne    0x43603f
  436083:	std    
  436084:	lods   eax,DWORD PTR ds:[esi]
  436085:	std    
  436086:	mov    ch,0x3
  436088:	scas   al,BYTE PTR es:[edi]
  436089:	std    
  43608a:	dec    eax
  43608c:	js     0x436078
  43608e:	lds    ecx,FWORD PTR [ebp+0x4202c406]
  436094:	pop    edx
  436095:	xchg   edi,eax
  436096:	das    
  436097:	cmc    
  436098:	push   es
  436099:	out    0x29,eax
  43609b:	outs   dx,BYTE PTR ds:[esi]
  43609c:	mov    eax,0x92cdd6c1
  4360a1:	scas   eax,DWORD PTR es:[edi]
  4360a2:	sti    
  4360a3:	push   edx
  4360a4:	adc    BYTE PTR [edi+0x6b],dl
  4360a7:	add    DWORD PTR [edi],eax
  4360a9:	out    0x2,eax
  4360ab:	mov    eax,ds:0xf3196f7f
  4360b0:	push   es
  4360b1:	outs   dx,BYTE PTR ds:[esi]
  4360b2:	push   ebx
  4360b3:	fisttp WORD PTR [esi+0x47ba14fb]
  4360b9:	sti    
  4360ba:	add    al,BYTE PTR [ecx-0xce6af81]
  4360c0:	push   es
  4360c1:	outs   dx,BYTE PTR ds:[esi]
  4360c2:	cmp    edi,edi
  4360c4:	xchg   ecx,eax
  4360c5:	xchg   edi,eax
  4360c6:	sti    
  4360c7:	je     0x4360c4
  4360c9:	xlat   BYTE PTR ds:[ebx]
  4360ca:	jle    0x43604f
  4360cc:	pop    ebx
  4360cd:	rol    DWORD PTR [ebx],1
  4360cf:	repz push edi
  4360d1:	imul   DWORD PTR [esp+eax*4-0x62]
  4360d5:	out    0x3,eax
  4360d7:	add    BYTE PTR [eax],al
  4360d9:	add    BYTE PTR [esi+esi*1-0x5],bh
  4360dd:	(bad)  [esi+0x78a2b625]
  4360e3:	dec    ebx
  4360e4:	std    
  4360e5:	mov    bl,0xd1
  4360e7:	(bad)  
  4360e8:	ja     0x436156
  4360ea:	add    DWORD PTR [edi],eax
  4360ec:	out    0x7c,eax
  4360ee:	loopne 0x436092
  4360f0:	mov    esi,0x7b91d118
  4360f5:	je     0x4360be
  4360f7:	adc    bh,ah
  4360f9:	add    edx,ecx
  4360fb:	mov    ecx,0x76ec2a85
  436100:	dec    edi
  436101:	sbb    dh,bl
  436103:	push   es
  436104:	out    0xc0,al
  436106:	int3   
  436107:	cmp    edi,DWORD PTR [ebx+0x7b]
  43610a:	imul   ebx,DWORD PTR [ebx+0x0],0xffffffdf
  43610e:	lock push es
  436110:	or     DWORD PTR [edx+ebx*8-0x61],esp
  436114:	stc    
  436115:	pushw  0x40e
  436119:	jmp    0xe735eb0e
  43611e:	ins    BYTE PTR es:[edi],dx
  43611f:	(bad)  
  436120:	(bad)  
  436121:	call   0x55b63516
  436126:	repnz and BYTE PTR [esi+0x906f0e9],0x7e
  43612e:	jae    0x436186
  436130:	jp     0x436115
  436132:	lock push es
  436134:	mov    ecx,0x6f0f9
  436139:	ror    BYTE PTR [ecx+0x114b85],cl
  43613f:	add    BYTE PTR [eax],al
  436141:	ss (bad) 
  436143:	mov    esp,0x3506f0f7
  436148:	ss loope 0x436179
  43614b:	or     DWORD PTR [esi],esi
  43614d:	jnp    0x4361a5
  43614f:	jl     0x436134
  436151:	lock push es
  436153:	xchg   DWORD PTR [esp+ebp*2+0x7cbcd28],edx
  43615a:	dec    edi
  43615b:	or     BYTE PTR [eax+0x35],dh
  43615e:	mov    ds:0x5e60e062,eax
  436163:	adc    ch,cl
  436165:	lock adc DWORD PTR [eax-0x23],0xffffffe6
  43616a:	xchg   BYTE PTR [eax-0x77f90f29],bh
  436170:	in     eax,dx
  436171:	add    DWORD PTR [ebx+eax*2+0x143ef1c5],eax
  436178:	jb     0x436192
  43617a:	repz test BYTE PTR [ecx],dh
  43617d:	aas    
  43617e:	adc    DWORD PTR [eax+0x6da50],0x61
  436185:	add    al,0x10
  436187:	test   DWORD PTR [eax],eax
  436189:	retf   0xe2d
  43618c:	add    BYTE PTR [edx],cl
  43618e:	sbb    dh,BYTE PTR [ebp-0x14]
  436191:	or     edx,DWORD PTR [ecx+0x14]
  436194:	mov    cl,0x2a
  436196:	mov    ebx,0x66c966c3
  43619b:	or     DWORD PTR [ebp-0x6e],0x1c
  43619f:	push   esp
  4361a0:	or     bl,BYTE PTR [edx+0xbc9020]
  4361a6:	add    BYTE PTR [eax],al
  4361a8:	in     al,0x8
  4361aa:	add    BYTE PTR [ebx-0x76a19379],cl
  4361b0:	jb     0x4361e2
  4361b2:	push   cs
  4361b3:	add    dl,cl
  4361b5:	jnp    0x4361d0
  4361b7:	push   cx
  4361b9:	sub    al,0xb0
  4361bb:	jl     0x43617d
  4361bd:	or     BYTE PTR [eax],al
  4361bf:	data16 stc 
  4361c1:	outs   dx,BYTE PTR ds:[esi]
  4361c2:	or     DWORD PTR [eax-0x1e2],0x74
  4361c9:	mov    eax,ds:0x8c4b8b1
  4361ce:	add    BYTE PTR [ebx],al
  4361d0:	dec    edi
  4361d1:	jo     0x436154
  4361d3:	mov    dh,bl
  4361d5:	std    
  4361d6:	(bad)  
  4361d7:	push   DWORD PTR [ecx-0x71aa7e4d]
  4361dd:	pushf  
  4361de:	mov    al,0x88
  4361e0:	pop    esp
  4361e1:	mov    eax,ds:0xf35dfff9
  4361e6:	(bad)  
  4361e7:	call   FWORD PTR [edx-0x3f]
  4361ea:	repnz mov DWORD PTR [edi],ebx
  4361ed:	imul   eax,DWORD PTR [ebx-0xb2178],0xffffffff
  4361f4:	popa   
  4361f5:	pop    ebp
  4361f6:	jbe    0x43625f
  4361f8:	sub    eax,0x40bc9015
  4361fd:	or     BYTE PTR [eax],al
  4361ff:	mov    DWORD PTR [edi],eax
  436201:	addr16 pop esi
  436203:	shl    ebx,cl
  436205:	(bad)  
  436206:	jne    0x436250
  436208:	sti    
  436209:	es inc edi
  43620b:	in     al,0x0
  43620d:	add    BYTE PTR [eax],al
  43620f:	lea    edx,[esi-0x51fa4773]
  436215:	std    
  436216:	test   bl,al
  436218:	mov    ecx,0xb44b8077
  43621d:	std    
  43621e:	(bad)  
  43621f:	jnp    0x4361cb
  436221:	adc    al,0x85
  436223:	mov    dh,0x41
  436225:	add    ebx,DWORD PTR [eax-0x21]
  436228:	sub    BYTE PTR [esp+edx*1],ch
  43622b:	js     0x436292
  43622d:	cmc    
  43622e:	test   DWORD PTR [ebx-0xcffed7a],eax
  436234:	adc    eax,0x3d680918
  436239:	jo     0x43624d
  43623b:	rep lods eax,DWORD PTR ds:[esi]
  43623d:	jbe    0x4362ba
  43623f:	xlat   BYTE PTR ds:[ebx]
  436240:	scas   al,BYTE PTR es:[edi]
  436241:	inc    ebp
  436242:	adc    al,0x82
  436244:	popf   
  436245:	xlat   BYTE PTR ds:[ebx]
  436246:	lds    ecx,FWORD PTR [ebp-0x1f]
  436249:	cwde   
  43624a:	test   DWORD PTR [esi],edi
  43624c:	idiv   BYTE PTR [esi+0x54]
  43624f:	stc    
  436250:	popf   
  436251:	jl     0x4361e3
  436253:	pop    edi
  436254:	mov    bl,0xfd
  436256:	jmp    FWORD PTR [eax+0x7a]
  436259:	test   eax,0x6bd57a62
  43625e:	adc    dh,bl
  436260:	lods   eax,DWORD PTR ds:[esi]
  436261:	xchg   esi,eax
  436262:	push   ss
  436263:	adc    eax,0xe9bc6519
  436268:	lods   eax,DWORD PTR ds:[esi]
  436269:	std    
  43626a:	popa   
  43626b:	inc    eax
  43626c:	les    esp,FWORD PTR [ebx]
  43626e:	pop    es
  43626f:	stos   DWORD PTR es:[edi],eax
  436270:	test   DWORD PTR [ebx],edx
  436272:	add    BYTE PTR [eax],al
  436274:	add    BYTE PTR [eax],al
  436276:	repz mov al,0x40
  436279:	clc    
  43627a:	push   0x25
  43627c:	imul   edx,DWORD PTR [edx],0x8876adf3
  436282:	xchg   DWORD PTR [esi],eax
  436284:	stc    
  436285:	add    esi,ebx
  436287:	xchg   DWORD PTR [ebp-0x1e624950],esp
  43628d:	sub    eax,0xa0348dcf
  436292:	xchg   ecx,eax
  436293:	mov    bh,0x85
  436295:	jp     0x436242
  436297:	push   cs
  436298:	jo     0x4362e2
  43629a:	mov    eax,tr4
  43629d:	xchg   ebx,eax
  43629e:	dec    ebx
  43629f:	hlt    
  4362a0:	out    0x3,al
  4362a2:	outs   dx,BYTE PTR ds:[esi]
  4362a3:	ss sti 
  4362a5:	jns    0x43631a
  4362a7:	pop    esi
  4362a8:	icebp  
  4362a9:	add    esi,ebx
  4362ab:	mov    gs,ebx
  4362ad:	adc    al,0x76
  4362af:	inc    esp
  4362b0:	inc    ebx
  4362b1:	add    al,0x4b
  4362b3:	rep ins DWORD PTR es:[edi],dx
  4362b5:	sub    eax,DWORD PTR [edi]
  4362b7:	lea    edx,[edi+0x6c]
  4362ba:	add    DWORD PTR [edi],eax
  4362bc:	out    0x7a,eax
  4362be:	cmp    ecx,DWORD PTR [edi]
  4362c0:	pop    edi
  4362c1:	pop    ss
  4362c2:	cli    
  4362c3:	lea    esi,[edi+0x6f]
  4362c6:	loope  0x4362ce
  4362c8:	out    0x7a,eax
  4362ca:	cmp    BYTE PTR [ebx+0x58074be8],ch
  4362d0:	neg    ecx
  4362d2:	scas   al,BYTE PTR es:[edi]
  4362d3:	and    DWORD PTR [esi],edx
  4362d5:	sahf   
  4362d6:	push   ds
  4362d7:	(bad)
  4362da:	add    BYTE PTR [eax],al
  4362dc:	add    BYTE PTR [ebx-0xcfc26a5],al
  4362e2:	and    BYTE PTR [eax+0x6b],ah
  4362e5:	dec    ebx
  4362e6:	icebp  
  4362e7:	out    0x3,al
  4362e9:	xchg   esp,eax
  4362ea:	aaa    
  4362eb:	in     eax,0x3
  4362ed:	repz and BYTE PTR [esi+0x770fd1a2],dh
  4362f4:	ins    BYTE PTR es:[edi],dx
  4362f5:	add    DWORD PTR [edi],eax
  4362f7:	out    0x80,eax
  4362f9:	pushf  
  4362fa:	add    eax,0x9a56ecd0
  4362ff:	add    cl,ch
  436301:	fcomip st,st(6)
  436303:	(bad)  
  436304:	call   0xf4397ef9
  436309:	aas    
  43630a:	(bad)  
  43630b:	pop    ss
  43630c:	call   0x5e4c6a01
  436311:	scas   eax,DWORD PTR es:[edi]
  436312:	pop    eax
  436313:	push   es
  436314:	jmp    0x713a4709
  436319:	fcomp  QWORD PTR [esi-0xb5c8e7b]
  43631f:	(bad)  
  436320:	call   0x6be3240
  436325:	push   es
  436326:	push   edi
  436327:	nop
  436328:	sub    ecx,edi
  43632a:	cdq    
  43632b:	stc    
  43632c:	jo     0x4362ca
  43632e:	stos   BYTE PTR es:[edi],al
  43632f:	bound  edi,QWORD PTR [edx]
  436331:	xchg   ecx,eax
  436332:	or     DWORD PTR [eax-0x1f],0x69
  436336:	inc    esi
  436337:	in     al,0xcf
  436339:	(bad)  [ecx+0x6f0d7b8]
  43633f:	test   DWORD PTR [ecx-0x1c000000],ebx
  436345:	add    BYTE PTR [eax+0x6dd71],0x71
  43634c:	jmp    0x436357
  43634e:	test   DWORD PTR [esp+ecx*4+0x2bfd5199],esp
  436355:	pop    ds
  436356:	adc    al,0x62
  436358:	out    0xe,eax
  43635a:	xchg   BYTE PTR [ecx+0x8],bl
  43635d:	cmc    
  43635e:	(bad)  
  43635f:	call   0x624c567c
  436364:	addr16 pop edx
  436366:	adc    ch,cl
  436368:	lock cmp DWORD PTR [ebx-0x2b],0xfffffff1
  43636d:	ds adc al,0x98
  436370:	loopne 0x436352
  436372:	lds    ecx,FWORD PTR [edi+0x42]
  436375:	scas   eax,DWORD PTR es:[edi]
  436376:	test   DWORD PTR [edi+edx*4],ebx
  436379:	lea    edx,[eax+eax*1+0x60]
  43637d:	push   ebp
  43637e:	adc    DWORD PTR [eax-0xc2a],0x66fc30d1
  436388:	shr    DWORD PTR ds:0x54a16b8,cl
  43638e:	jecxz  0x4363b0
  436390:	in     al,dx
  436391:	pop    ds
  436392:	mov    eax,0x510c0
  436397:	imul   sp,WORD PTR [edx-0x7d],0xb688
  43639d:	repz (bad) 
  43639f:	(bad)  
  4363a0:	in     al,dx
  4363a1:	popf   
  4363a2:	mov    cl,0xb8
  4363a4:	sub    al,0x5
  4363a6:	add    BYTE PTR [ebx],al
  4363a8:	add    BYTE PTR [eax],al
  4363aa:	add    bh,ah
  4363ac:	push   0xffffff81
  4363ae:	mov    BYTE PTR [esi-0xd],dl
  4363b1:	(bad)  
  4363b2:	inc    DWORD PTR [ecx-0x25e943e3]
  4363b8:	add    al,0x7b
  4363ba:	ret    0x8737
  4363bd:	icebp  
  4363be:	or     eax,0x558148b4
  4363c3:	es loop 0x436390
  4363c6:	loop   0x436419
  4363c8:	fadd   QWORD PTR [edi]
  4363ca:	mov    DWORD PTR [edi+0x3a095e60],ecx
  4363d0:	sub    al,0xe
  4363d2:	add    dl,cl
  4363d4:	pop    ds
  4363d5:	push   eax
  4363d6:	adc    al,0x10
  4363d8:	test   BYTE PTR [eax-0x77fb65ea],bh
  4363de:	add    al,0xbb
  4363e0:	pop    ds
  4363e1:	cmp    eax,0x144c8be4
  4363e6:	mov    eax,DWORD PTR [edx]
  4363e8:	lock adc DWORD PTR [eax-0xe3d],0x8807db01
  4363f3:	jle    0x436392
  4363f5:	test   BYTE PTR [eax+0xe71f3],dl
  4363fb:	repz and al,0x27
  4363fe:	in     al,dx
  4363ff:	repnz in eax,0xf
  436402:	scas   eax,DWORD PTR es:[edi]
  436403:	add    esi,esp
  436405:	mov    ecx,0x81c12062
  43640a:	mov    esi,0xbc942740
  43640f:	add    BYTE PTR [eax],al
  436411:	add    ch,ah
  436413:	lods   eax,DWORD PTR ds:[esi]
  436414:	std    
  436415:	popa   
  436416:	push   0x26
  436418:	ins    BYTE PTR es:[edi],dx
  436419:	adc    dh,bl
  43641b:	lods   eax,DWORD PTR ds:[esi]
  43641c:	pushf  
  43641d:	daa    
  43641e:	repnz lods eax,DWORD PTR ds:[esi]
  436420:	std    
  436421:	popa   
  436422:	inc    eax
  436423:	mov    WORD PTR [esi],ds
  436425:	pop    es
  436426:	add    DWORD PTR [esi+0xe],0x0
  43642a:	repz sub al,0xc3
  43642d:	std    
  43642e:	sbb    edi,DWORD PTR [edi-0x6f0cfffc]
  436434:	outs   dx,BYTE PTR ds:[esi]
  436435:	mov    BYTE PTR ds:0x18fffd94,ch
  43643b:	aaa    
  43643c:	jnp    0x436489
  43643e:	jmp    0x436464
  436440:	jl     0x4363fe
  436442:	add    eax,0xa434fdae
  436447:	push   edi
  436448:	push   ds
  436449:	or     DWORD PTR [ebp+edi*1-0x520cf940],eax
  436450:	jl     0x4364a5
  436452:	iret   
  436453:	xchg   edx,edx
  436455:	fisubr WORD PTR [eax+0x55]
  436458:	cmc    
  436459:	xchg   BYTE PTR [esi],dh
  43645b:	or     bl,BYTE PTR [esi]
  43645d:	pop    es
  43645e:	xor    DWORD PTR ds:0x14f3000e,0x54
  436465:	adc    al,0x69
  436467:	sub    eax,0xadf3126c
  43646c:	jne    0x436472
  43646e:	loop   0x436494
  436470:	aas    
  436471:	in     al,0xf2
  436473:	push   es
  436474:	aas    
  436475:	adc    BYTE PTR [eax],al
  436477:	add    BYTE PTR [eax],al
  436479:	outs   dx,BYTE PTR ds:[esi]
  43647a:	push   ds
  43647b:	repz jle 0x436439
  43647e:	push   cs
  43647f:	pop    ebp
  436480:	xchg   ebx,eax
  436481:	pushf  
  436482:	lock out 0x3,al
  436485:	imul   esi,edx,0xfffffff1
  436488:	jle    0x43640d
  43648a:	pop    edx
  43648b:	rol    DWORD PTR [ebx],1
  43648d:	repz mov esi,DWORD PTR [eax+ebx*4]
  436491:	inc    esp
  436492:	das    
  436493:	shl    DWORD PTR [ebx+eiz*8-0x14],cl
  436497:	lods   al,BYTE PTR ds:[esi]
  436498:	and    DWORD PTR [esi],esp
  43649a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43649b:	outs   dx,BYTE PTR ds:[esi]
  43649c:	cmp    BYTE PTR [ebx],ch
  43649e:	mov    DWORD PTR [ebx],edi
  4364a0:	(bad)  
  4364a1:	adc    al,0x8d
  4364a3:	ja     0x43650c
  4364a5:	add    DWORD PTR [edi],eax
  4364a7:	out    0x7e,eax
  4364a9:	rcr    BYTE PTR [edx+0x5e4b7d01],0xd9
  4364b0:	add    esi,ebx
  4364b2:	stos   DWORD PTR es:[edi],eax
  4364b3:	(bad)  
  4364b4:	and    DWORD PTR [esi+0x5e],esi
  4364b7:	sub    edi,ebp
  4364b9:	hlt    
  4364ba:	xchg   esi,eax
  4364bb:	rcl    esi,0xd2
  4364be:	sbb    BYTE PTR [edi+0x67],0x1
  4364c2:	pop    es
  4364c3:	out    0x21,eax
  4364c5:	hlt    
  4364c6:	dec    esi
  4364c7:	jg     0x4364da
  4364c9:	repz push es
  4364cb:	out    0x38,al
  4364cd:	retf   
  4364ce:	sbb    BYTE PTR [edi+0x67],0xe1
  4364d2:	push   es
  4364d3:	out    0x7e,eax
  4364d5:	imul   edx,DWORD PTR [ebx-0x7],0x3
  4364d9:	xrelease mov DWORD PTR ds:0xb0,esp
  4364e0:	cs nop
  4364e2:	loopne 0x43650d
  4364e4:	cmp    al,0x80
  4364e6:	mov    ah,0x97
  4364e8:	adc    DWORD PTR [edx-0xd481fb],edi
  4364ee:	outs   dx,DWORD PTR ds:[esi]
  4364ef:	inc    eax
  4364f0:	xchg   edi,eax
  4364f1:	sub    eax,0x4f60e000
  4364f6:	adc    ch,cl
  4364f8:	lock mov edx,DWORD PTR [eax-0x3]
  4364fc:	test   BYTE PTR [esi+0x6f0f7b8],0x88
  436503:	in     eax,dx
  436504:	add    DWORD PTR [ebx+eax*2+0x142ef0c5],ecx
  43650b:	jb     0x436514
  43650d:	sti    
  43650e:	test   DWORD PTR [ecx-0x28],ebx
  436511:	clc    
  436512:	(bad)  
  436513:	call   0x614ba3df
  436518:	jecxz  0x436519
  43651a:	test   BYTE PTR [ecx-0x35],bh
  43651d:	clc    
  43651e:	(bad)  
  43651f:	call   0xe92f76d3
  436524:	mov    eax,0x3ef9aefa
  436529:	int3   
  43652a:	bound  ebx,QWORD PTR [edx+0x76be147a]
  436530:	mov    BYTE PTR [esi-0x44],dh
  436533:	fcomip st,st(0)
  436535:	push   es
  436536:	bound  esp,QWORD PTR [eax-0x71]
  436539:	dec    esi
  43653a:	adc    ch,cl
  43653c:	lock stos DWORD PTR es:[edi],eax
  43653e:	or     eax,0x62b4c7c7
  436543:	loopne 0x436545
  436545:	add    BYTE PTR [eax],al
  436547:	or     BYTE PTR [esi+0x12],0xe9
  43654b:	lock adc edi,DWORD PTR [edi-0x4380a612]
  436552:	xlat   BYTE PTR ds:[ebx]
  436553:	lock push es
  436555:	test   DWORD PTR [esp+edx*4+0xc60cde3],esp
  43655c:	mov    ds:0x1043083,eax
  436561:	mov    bh,0x73
  436563:	test   DWORD PTR [esi],0x8ee42e00
  436569:	std    
  43656a:	call   0x1286c5f
  43656f:	mov    WORD PTR [edx+0x209c75ea],fs
  436575:	(bad)  
  436576:	call   FWORD PTR [edx-0x7dba40f7]
  43657c:	or     al,BYTE PTR [eax]
  43657e:	add    BYTE PTR [edx+0x55b90c72],cl
  436584:	or     DWORD PTR [eax],eax
  436586:	add    BYTE PTR [ebp+0x4a04f7d4],dl
  43658c:	or     DWORD PTR [eax],eax
  43658e:	add    DWORD PTR [edi],0x5b
  436591:	add    al,0x29
  436593:	out    dx,eax
  436594:	jb     0x43659d
  436596:	test   DWORD PTR [esi+0x63],ebx
  436599:	idiv   edi
  43659b:	in     eax,dx
  43659c:	inc    eax
  43659d:	push   ebx
  43659e:	mov    esp,DWORD PTR [edi+0x4c]
  4365a1:	mov    ebx,0xcc5d5ecc
  4365a6:	int3   
  4365a7:	out    0x13,eax
  4365a9:	in     al,dx
  4365aa:	push   ecx
  4365ab:	add    BYTE PTR [eax],al
  4365ad:	add    BYTE PTR [ecx-0x6374f82c],dl
  4365b3:	sub    eax,0x3a1a000e
  4365b8:	std    
  4365b9:	(bad)  
  4365ba:	jl     0x43661a
  4365bc:	not    DWORD PTR [edi-0x3f]
  4365bf:	or     BYTE PTR [eax],al
  4365c1:	add    BYTE PTR [edx],cl
  4365c3:	mov    dh,cl
  4365c5:	or     ecx,esp
  4365c7:	ss pop esi
  4365c9:	mov    ebp,DWORD PTR [edx]
  4365cb:	out    0xca,al
  4365cd:	loop   0x436620
  4365cf:	into   
  4365d0:	adc    ecx,DWORD PTR [ecx+0x95e6c87]
  4365d6:	and    al,0x20
  4365d8:	push   cs
  4365d9:	add    dl,bl
  4365db:	adc    ecx,DWORD PTR [esi+0x8]
  4365de:	push   eax
  4365df:	xchg   BYTE PTR [eax-0x77f735ea],bh
  4365e5:	add    al,0xab
  4365e7:	or     DWORD PTR [esi+0x14],edx
  4365ea:	repz daa 
  4365ec:	(bad)  
  4365ed:	mov    bh,0x5
  4365ef:	sahf   
  4365f0:	std    
  4365f1:	test   BYTE PTR ds:0xfb4a7cb2,dl
  4365f7:	sbb    BYTE PTR [edx],bh
  4365f9:	cld    
  4365fa:	jnp    0x4365ae
  4365fc:	clc    
  4365fd:	test   BYTE PTR [ebp-0x1e],ah
  436600:	push   cs
  436601:	add    bl,dh
  436603:	sahf   
  436604:	inc    ebx
  436605:	adc    al,0xa2
  436607:	mov    ss,edi
  436609:	(bad)
  43660c:	pushf  
  43660d:	jge    0x436640
  43660f:	mov    ebx,0x927b
  436614:	add    BYTE PTR [edi-0x2a00024c],dl
  43661a:	push   ss
  43661b:	jp     0x4365d5
  43661d:	fstp   QWORD PTR [ebp+0x4be0e4fd]
  436623:	int    0xe0
  436625:	int    0x96
  436627:	jnp    0x4365e1
  436629:	add    eax,0x327cfd9e
  43662e:	mov    ds:0x9c5f8a7c,eax
  436633:	std    
  436634:	jmp    FWORD PTR [eax-0x1d]
  436637:	test   DWORD PTR [ebp+edi*2-0xcfff62e],0xe8f77ce5
  436642:	mov    ds:0xce68624b,eax
  436647:	sbb    ebp,ecx
  436649:	rcr    DWORD PTR [eax],1
  43664b:	xor    dl,BYTE PTR [edx+edi*2]
  43664e:	bound  esp,QWORD PTR [ecx+0x6c1bea62]
  436654:	adc    dh,bl
  436656:	popf   
  436657:	jbe    0x4366ab
  436659:	sti    
  43665a:	pop    ss
  43665b:	jp     0x436615
  43665d:	fstp   QWORD PTR [ebp-0x51087803]
  436663:	add    al,0x5a
  436665:	fild   WORD PTR [esi]
  436667:	ins    DWORD PTR es:[edi],dx
  436668:	mov    fs,WORD PTR [esp+edi*8-0x1a]
  43666c:	add    ebp,DWORD PTR [esi+0x14]
  43666f:	sti    
  436670:	jp     0x43669b
  436672:	call   FWORD PTR [ebp+0x41]
  436675:	xchg   edi,eax
  436676:	jle    0x436653
  436678:	test   BYTE PTR [eax],0x0
  43667b:	add    BYTE PTR [edi+0x7c],dh
  43667e:	cmp    ecx,DWORD PTR [esi]
  436680:	repz push es
  436682:	call   0xd7994dcc
  436687:	fldcw  WORD PTR [esi-0x116449d4]
  43668d:	enter  0x7cd4,0x81
  436691:	push   edx
  436692:	stc    
  436693:	add    esi,ebx
  436695:	sub    al,0x60
  436697:	jge    0x436634
  436699:	cld    
  43669a:	out    0x3,al
  43669c:	push   esi
  43669d:	test   DWORD PTR [eax-0x2d],0x7de02c53
  4366a4:	jnp    0x4366a2
  4366a6:	out    0x3,al
  4366a8:	mov    dh,0xc5
  4366aa:	in     al,dx
  4366ab:	jl     0x436726
  4366ad:	push   edx
  4366ae:	icebp  
  4366af:	add    esi,ebx
  4366b1:	jg     0x4366df
  4366b3:	adc    al,0x76
  4366b5:	test   BYTE PTR [ebx+0xd],cl
  4366b8:	repz push es
  4366ba:	retw   
  4366bc:	ja     0x3cce5e42
  4366c2:	or     DWORD PTR [ebx+0x23],edi
  4366c5:	sub    al,0x96
  4366c7:	mov    eax,ds:0x7cfb446e
  4366cc:	xor    BYTE PTR [ebx+0x4f82fcc1],dl
  4366d2:	stc    
  4366d3:	add    esi,ebx
  4366d5:	jge    0x436688
  4366d7:	sti    
  4366d8:	outs   dx,BYTE PTR ds:[esi]
  4366d9:	mov    DWORD PTR [edi+0xd],edi
  4366dc:	repz push es
  4366de:	outs   dx,DWORD PTR ds:[esi]
  4366df:	inc    DWORD PTR [eax]
  4366e1:	add    BYTE PTR [eax],al
  4366e3:	cmc    
  4366e4:	pop    es
  4366e5:	add    BYTE PTR [edi+0x709288ec],dl
  4366eb:	out    0x6,al
  4366ed:	add    BYTE PTR [edx-0x2a],dh
  4366f0:	cli    
  4366f1:	test   BYTE PTR [edi+0x15438ba8],ch
  4366f7:	sbb    bl,bh
  4366f9:	or     BYTE PTR [edx+0x66],ah
  4366fc:	push   ebx
  4366fd:	adc    ch,cl
  4366ff:	lock xchg ecx,eax
  436701:	pop    ebx
  436702:	aad    0xff
  436704:	mul    BYTE PTR ds:0xe8c3de23
  43670a:	push   0xffffffb2
  43670c:	fwait
  43670d:	xchg   DWORD PTR [edi-0x25],edi
  436710:	hlt    
  436711:	(bad)  
  436712:	call   0x91c5f11d
  436717:	in     eax,dx
  436718:	push   es
  436719:	add    dl,al
  43671b:	add    ah,BYTE PTR ds:0x9edc9cd
  436721:	add    BYTE PTR [ecx+0x6a0006f5],0x30
  436728:	or     eax,DWORD PTR [edi-0xb34a1]
  43672e:	call   0x1c7af656
  436733:	(bad)  
  436734:	dec    DWORD PTR [ecx+0x6f777]
  43673a:	bound  ebx,QWORD PTR [ebp-0xf16edae]
  436740:	adc    esi,edi
  436742:	in     al,dx
  436743:	into   
  436744:	and    al,0x9
  436746:	aas    
  436747:	add    BYTE PTR [eax],al
  436749:	add    BYTE PTR [esi+0x63],ch
  43674c:	cmp    eax,0xb0ffef29
  436751:	ins    DWORD PTR es:[edi],dx
  436752:	jge    0x436760
  436754:	push   es
  436755:	jmp    0x39c88c4a
  43675a:	std    
  43675b:	ret    
  43675c:	fisub  WORD PTR [edx+0x1d]
  43675f:	sti    
  436760:	popa   
  436761:	add    bl,al
  436763:	cmp    DWORD PTR [eax+0x705da16],0xffffffb6
  43676a:	and    al,0x23
  43676c:	push   cs
  43676d:	add    dl,cl
  43676f:	push   cs
  436770:	dec    esi
  436771:	or     BYTE PTR [edx],ah
  436773:	dec    DWORD PTR [eax]
  436775:	dec    DWORD PTR [ecx+eax*1+0x7]
  436779:	mov    dh,0x24
  43677b:	push   ds
  43677c:	push   cs
  43677d:	add    BYTE PTR [edx+0x114460e],cl
  436783:	inc    ecx
  436784:	or     BYTE PTR [eax-0x697d0b5a],cl
  43678a:	mov    BYTE PTR [eax],0x0
  43678d:	add    BYTE PTR [ebx-0x4335de06],bh
  436793:	mov    bh,0xe8
  436795:	mov    ebx,0x55b
  43679a:	dec    ebx
  43679b:	dec    ebx
  43679c:	adc    al,0x83
  43679e:	mov    BYTE PTR [esi+0x5e],dl
  4367a1:	mov    esp,ebx
  4367a3:	sbb    eax,0xc5a000e
  4367a8:	mov    ?,WORD PTR [esp+ebx*1+0xeb0005]
  4367af:	add    BYTE PTR [eax],al
  4367b1:	call   0xc6cb1751
  4367b6:	inc    esi
  4367b7:	inc    eax
  4367b8:	add    ah,ch
  4367ba:	sete   BYTE PTR [esi-0x672fc]
  4367c1:	in     al,dx
  4367c2:	mov    bh,0xda
  4367c4:	add    ax,WORD PTR [ebx+0x51a16b8]
  4367cb:	jnp    0x43678e
  4367cd:	or     DWORD PTR [esi+eax*4],ecx
  4367d0:	mov    esp,0x300051c
  4367d5:	push   ecx
  4367d6:	lahf   
  4367d7:	jbe    0x4367e9
  4367d9:	aad    0x18
  4367db:	pop    edx
  4367dc:	push   ebx
  4367de:	cmp    BYTE PTR [ebp+eax*4-0x74c959da],ah
  4367e5:	gs xor bh,ch
  4367e8:	push   ebx
  4367ea:	adc    al,0xbb
  4367ec:	call   0xf9e73e1f
  4367f1:	push   0x7e46f173
  4367f6:	adc    BYTE PTR [ebp+0x7],dh
  4367f9:	repz popf 
  4367fb:	js     0x4367bf
  4367fd:	mov    edi,DWORD PTR [edx+0x6194f9a5]
  436803:	dec    eax
  436804:	test   DWORD PTR [esi-0x48333f95],edx
  43680a:	loop   0x4367bc
  43680c:	int3   
  43680d:	scas   eax,DWORD PTR es:[edi]
  43680e:	jae    0x436888
  436810:	in     al,dx
  436811:	jo     0x4367a5
  436813:	push   cs
  436814:	dec    ebp
  436815:	add    BYTE PTR [eax],al
  436817:	add    BYTE PTR [eax+0x4b],bh
  43681a:	or     al,0x2d
  43681c:	inc    ecx
  43681d:	fdiv   DWORD PTR [edi+esi*1]
  436820:	cmp    DWORD PTR [esi-0xa],0xffffffff
  436824:	push   esp
  436825:	mov    cl,0x81
  436827:	aaa    
  436828:	lock popf 
  43682a:	std    
  43682b:	in     al,0xec
  43682d:	and    ch,BYTE PTR [eax]
  43682f:	and    al,0xf3
  436831:	and    al,0x37
  436833:	hlt    
  436834:	push   0xf3126826
  436839:	popf   
  43683a:	push   cs
  43683b:	mov    cl,0xf7
  43683d:	into   
  43683e:	mov    BYTE PTR [eax-0x26f85],dh
  436844:	in     al,0x37
  436846:	fsubr  DWORD PTR ds:0xfc4f16b1
  43684c:	outs   dx,BYTE PTR ds:[esi]
  43684d:	push   edi
  43684e:	mov    DWORD PTR [eax-0x24fc1],ecx
  436854:	push   0xfffffffb
  436856:	xchg   edi,eax
  436857:	or     DWORD PTR [esi+0x6],esi
  43685a:	jo     0x436860
  43685c:	repz push es
  43685e:	jmp    0x362:0xe554475a
  436865:	pop    es
  436866:	out    0x3,eax
  436868:	push   ss
  436869:	lea    esi,[eax+0x39]
  43686c:	retf   
  43686d:	retf   
  43686e:	sub    DWORD PTR [edx],esp
  436870:	sbb    al,0x0
  436872:	jp     0x43684c
  436874:	xchg   DWORD PTR [eax],ebp
  436876:	pop    esi
  436877:	mov    edx,0x8f05b411
  43687c:	add    BYTE PTR [eax],al
  43687e:	add    BYTE PTR [ebx],bh
  436880:	jmp    FWORD PTR [edi+0x41]
  436883:	lahf   
  436884:	sub    al,ah
  436886:	jae    0x4368e3
  436888:	clc    
  436889:	out    0x3,al
  43688b:	jbe    0x4368c3
  43688d:	fisttp DWORD PTR [ebp+0x3d14e6b]
  436893:	repz jle 0x436869
  436896:	hlt    
  436897:	jnp    0x4368df
  436899:	ror    DWORD PTR [esi+0x736cfebb],cl
  43689f:	pushf  
  4368a0:	clc    
  4368a1:	out    0x3,al
  4368a3:	jbe    0x4368b3
  4368a5:	sti    
  4368a6:	mov    ?,WORD PTR [eax-0x408a06e]
  4368ac:	jnp    0x436905
  4368ae:	pop    edi
  4368af:	loope  0x4368b7
  4368b1:	out    0xa2,eax
  4368b3:	mov    bl,0xfa
  4368b5:	ja     0x4368aa
  4368b7:	push   cs
  4368b8:	mov    ebp,0x7b19b741
  4368bd:	xor    al,0x9c
  4368bf:	js     0x4368fb
  4368c1:	in     eax,dx
  4368c2:	xchg   ebx,eax
  4368c3:	je     0x43693b
  4368c5:	push   ebx
  4368c6:	stc    
  4368c7:	adc    al,0x8f
  4368c9:	add    DWORD PTR [ebp+0x3d94e43],ecx
  4368cf:	repz popf 
  4368d1:	arpl   WORD PTR ds:0xf0006f3,ax
  4368d7:	fisubr DWORD PTR fs:[edi+eax*1-0xf9d565c]
  4368df:	inc    eax
  4368e0:	dec    edi
  4368e1:	adc    ch,cl
  4368e3:	add    BYTE PTR [eax],al
  4368e5:	add    al,dh
  4368e7:	mov    eax,edi
  4368e9:	inc    eax
  4368ea:	pop    es
  4368eb:	(bad)  
  4368ec:	stc    
  4368ed:	jmp    0x69fdc1d3
  4368f2:	xor    eax,0x19ee0047
  4368f7:	jae    0x4368ae
  4368f9:	out    dx,eax
  4368fa:	in     al,dx
  4368fb:	push   es
  4368fc:	add    BYTE PTR [edx-0x60],dh
  4368ff:	mov    ?,ecx
  436901:	jmp    0xb4cb1d9b
  436906:	js     0x43688c
  436908:	push   ebx
  436909:	loope  0x4368c0
  43690b:	ret    
  43690c:	jp     0x436896
  43690e:	loope  0x436967
  436910:	xchg   esp,eax
  436911:	inc    ebx
  436912:	in     al,dx
  436913:	add    al,BYTE PTR [eax]
  436915:	jmp    0x9033a389
  43691a:	cmp    eax,0xf8a185ad
  43691f:	sub    BYTE PTR [edi],al
  436921:	jns    0x4368ea
  436923:	clc    
  436924:	(bad)  
  436925:	call   0x91dbc22d
  43692a:	pop    ecx
  43692b:	mov    ?,ecx
  43692d:	bound  eax,QWORD PTR [edi]
  43692f:	repz xchg ebp,esp
  436932:	inc    ecx
  436933:	pop    DWORD PTR [eax-0x2b]
  436936:	jecxz  0x436990
  436938:	cwde   
  436939:	jo     0x436974
  43693b:	mov    ?,ecx
  43693d:	bound  edi,QWORD PTR [edi-0x8c67b0e]
  436943:	jle    0x436961
  436945:	clc    
  436946:	outs   dx,DWORD PTR ds:[esi]
  436947:	ja     0x436905
  436949:	inc    DWORD PTR [eax]
  43694b:	add    BYTE PTR [eax],al
  43694d:	lock push es
  43694f:	test   DWORD PTR [edi+eiz*2],ebp
  436952:	nop
  436953:	inc    eax
  436954:	add    BYTE PTR [esi],ah
  436956:	cmp    DWORD PTR [eax],edx
  436958:	sub    al,BYTE PTR [eax-0x1f]
  43695b:	retf   0x91eb
  43695e:	cmp    eax,0xfd068df8
  436963:	out    dx,eax
  436964:	mov    DWORD PTR [edx+0x27],ebp
  436967:	push   cs
  436968:	add    dl,cl
  43696a:	fild   WORD PTR [eax-0x66f7d68]
  436970:	push   DWORD PTR [ecx]
  436972:	mov    WORD PTR [edi-0x75],ds
  436975:	es sub eax,0x9ca0404
  43697b:	pop    esi
  43697c:	shr    DWORD PTR [eax],cl
  43697e:	loope  0x436980
  436980:	nop
  436981:	and    dl,BYTE PTR [ecx+0x3c99fff9]
  436987:	clc    
  436988:	mov    DWORD PTR [edx],esp
  43698a:	daa    
  43698b:	push   cs
  43698c:	add    BYTE PTR [edx-0x5d42e386],cl
  436992:	inc    edx
  436993:	inc    eax
  436994:	add    BYTE PTR [ecx],al
  436996:	(bad)  
  436997:	sti    
  436998:	mov    DWORD PTR [edi+0x79],ebx
  43699b:	jge    0x436978
  43699d:	imul   bl
  43699f:	and    dh,BYTE PTR [edi+ebx*1]
  4369a2:	or     DWORD PTR [eax+eax*2+0x5a],0x7a
  4369a7:	mov    BYTE PTR [esp+eiz*2+0x5abf0009],bh
  4369ae:	or     DWORD PTR [eax],eax
  4369b0:	add    BYTE PTR [eax],al
  4369b2:	add    BYTE PTR [eax],al
  4369b4:	icebp  
  4369b5:	imul   esi,DWORD PTR [ebx],0xffffffcf
  4369b8:	lods   al,BYTE PTR ds:[esi]
  4369b9:	rcr    BYTE PTR [ebp-0x75],cl
  4369bc:	jl     0x43699d
  4369be:	retf   0xd1e7
  4369c1:	inc    ecx
  4369c2:	or     BYTE PTR [esi+0x13],ah
  4369c5:	xor    DWORD PTR [eax+0x7091a16],edi
  4369cb:	mov    dh,0x72
  4369cd:	xor    DWORD PTR [esi],ecx
  4369cf:	add    bl,dh
  4369d1:	lahf   
  4369d2:	mov    WORD PTR [eax-0x19],?
  4369d5:	daa    
  4369d6:	stc    
  4369d7:	ss add al,0xdf
  4369da:	test   DWORD PTR [eax],0x12562745
  4369e0:	repz lahf 
  4369e2:	mov    WORD PTR [eax-0x5],cs
  4369e5:	sub    BYTE PTR ds:0xf027b14,dl
  4369eb:	test   DWORD PTR [ebx+0x6a],edi
  4369ee:	idiv   edi
  4369f0:	aam    0x35
  4369f2:	cmp    eax,0xeb8e8214
  4369f7:	les    ecx,FWORD PTR [ebp-0xf]
  4369fa:	scas   al,BYTE PTR es:[edi]
  4369fb:	test   DWORD PTR [esi],ebp
  4369fd:	into   
  4369fe:	mov    DWORD PTR [eax+ebp*8-0x33],ecx
  436a02:	xchg   DWORD PTR es:[ebx+0x16],esp
  436a06:	idiv   edi
  436a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a09:	stc    
  436a0a:	or     BYTE PTR [edx-0x40],ah
  436a0d:	add    al,0x27
  436a0f:	pop    es
  436a10:	arpl   WORD PTR [esi],si
  436a12:	idiv   edi
  436a14:	mov    WORD PTR [ecx+0x87cc],fs
  436a1a:	add    BYTE PTR [ebx+0x42],bh
  436a1d:	idiv   edi
  436a1f:	jl     0x436a79
  436a21:	xchg   BYTE PTR [ebx+0x77],dl
  436a24:	pop    ds
  436a25:	fwait
  436a26:	add    dl,dh
  436a28:	popf   
  436a29:	std    
  436a2a:	ins    BYTE PTR es:[edi],dx
  436a2b:	cli    
  436a2c:	xchg   esp,eax
  436a2d:	push   ebx
  436a2e:	scas   al,BYTE PTR es:[edi]
  436a2f:	jae    0x436a08
  436a31:	inc    ebx
  436a32:	add    BYTE PTR [eax-0x5e],cl
  436a35:	xchg   dh,al
  436a37:	xor    al,bh
  436a39:	add    DWORD PTR [ecx],ecx
  436a3b:	jge    0x436a4c
  436a3d:	test   BYTE PTR [esi-0x4d],al
  436a40:	popf   
  436a41:	xchg   BYTE PTR [ebx-0x19],cl
  436a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a45:	push   edx
  436a46:	jl     0x436aaa
  436a48:	mov    al,ds:0x7678886
  436a4d:	stc    
  436a4e:	add    esi,ebx
  436a50:	dec    edi
  436a51:	test   DWORD PTR [ebx],0xbebe06f3
  436a57:	je     0x436a63
  436a59:	xchg   edi,eax
  436a5a:	fld    TBYTE PTR [edi]
  436a5c:	or     eax,0xfaa08b07
  436a61:	jmp    0x99c21bc
  436a66:	mov    eax,edx
  436a68:	and    al,0x96
  436a6a:	mov    ds:0x25ef3e6e,al
  436a6f:	hlt    
  436a70:	jbe    0x436a11
  436a72:	not    ah
  436a74:	mov    esp,edx
  436a76:	push   ebp
  436a77:	imul   ecx,DWORD PTR [esi-0xf],0x3
  436a7b:	repz jg 0x436a15
  436a7e:	test   DWORD PTR [eax],0xea740000
  436a84:	xlat   BYTE PTR ds:[ebx]
  436a85:	sahf   
  436a86:	xor    esi,ebx
  436a88:	pop    ebp
  436a89:	dec    esp
  436a8a:	pop    es
  436a8b:	cld    
  436a8c:	jo     0x436b0a
  436a8e:	pop    esp
  436a8f:	hlt    
  436a90:	out    0x3,al
  436a92:	jbe    0x436aca
  436a94:	out    dx,eax
  436a95:	mov    esi,edi
  436a97:	cmc    
  436a98:	pop    ebp
  436a99:	je     0x436aea
  436a9b:	hlt    
  436a9c:	out    0x3,al
  436a9e:	mov    al,BYTE PTR [esi-0x25]
  436aa1:	push   esp
  436aa2:	jecxz  0x436a84
  436aa4:	sub    al,0x26
  436aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436aa7:	fwait
  436aa8:	pop    esi
  436aa9:	push   ecx
  436aaa:	arpl   WORD PTR [ecx-0x6d],di
  436aad:	or     DWORD PTR [ebx+0x7d],esp
  436ab0:	ja     0x436b11
  436ab2:	add    DWORD PTR [edi],eax
  436ab4:	out    0x8a,eax
  436ab6:	ror    BYTE PTR [edx+0x4e8b8d49],0xf1
  436abd:	add    esi,ebx
  436abf:	lahf   
  436ac0:	loopne 0x436a4c
  436ac2:	cwde   
  436ac3:	cli    
  436ac4:	inc    eax
  436ac5:	mov    edx,edi
  436ac7:	push   edi
  436ac8:	add    BYTE PTR [edi+0x60],cl
  436acb:	test   eax,0x4ea8e062
  436ad0:	adc    ch,cl
  436ad2:	lock mov edx,ecx
  436ad5:	jo     0x436b3f
  436ad7:	dec    edx
  436ad8:	adc    ch,cl
  436ada:	lock cmp DWORD PTR [esp+edx*2],0xe93fc930
  436ae2:	imul   ebp,DWORD PTR [edi],0x6408
  436ae8:	add    BYTE PTR [ebp-0x3],dl
  436aeb:	sub    DWORD PTR [ecx-0x10],0x6
  436aef:	add    dl,al
  436af1:	fcom   QWORD PTR [ebp-0x8]
  436af4:	mov    ch,0x30
  436af6:	pop    es
  436af7:	test   DWORD PTR [ecx+0x34],esi
  436afa:	cmc    
  436afb:	(bad)  
  436afc:	call   0xe943622f
  436b01:	lock jecxz 0x436af4
  436b04:	add    ch,BYTE PTR [ebp+0x69c7520d]
  436b0a:	cdq    
  436b0b:	bound  ebx,QWORD PTR [edx]
  436b0d:	push   esi
  436b0e:	test   BYTE PTR [eax-0x1f],cl
  436b11:	into   
  436b12:	add    DWORD PTR [eax-0x675599f],esi
  436b18:	out    dx,al
  436b19:	outs   dx,DWORD PTR ds:[esi]
  436b1b:	mov    eax,0x8506f0ff
  436b20:	cdq    
  436b21:	jl     0x436aa5
  436b23:	sbb    al,0xb8
  436b25:	pop    ebp
  436b26:	inc    edi
  436b27:	adc    al,0xee
  436b29:	push   ds
  436b2a:	outs   dx,DWORD PTR ds:[esi]
  436b2b:	mov    bh,0xdf
  436b2d:	lock push es
  436b2f:	test   DWORD PTR [ecx+0x5c],edi
  436b32:	or     DWORD PTR [eax-0xf],0x68
  436b36:	jmp    0x436b41
  436b38:	jb     0x436b11
  436b3a:	dec    edx
  436b3b:	adc    ch,cl
  436b3d:	lock pop DWORD PTR [eax-0xb]
  436b41:	mov    eax,ds:0x810025f6
  436b46:	loope  0x436b12
  436b48:	jmp    0x0:0xb8907dac
  436b4f:	add    BYTE PTR [esi+eax*1+0x0],cl
  436b53:	(bad)  
  436b54:	(bad)  
  436b55:	scas   eax,DWORD PTR es:[edi]
  436b56:	jmp    0x813e22e6
  436b5b:	nop
  436b5c:	mov    dh,0x90
  436b5e:	stc    
  436b5f:	push   DWORD PTR [ecx-0x6b]
  436b62:	pop    edi
  436b63:	sar    DWORD PTR [eax-0x1f],cl
  436b66:	add    BYTE PTR [eax-0x66f4e],dl
  436b6c:	or     DWORD PTR [ebx-0x6ed9777f],edi
  436b72:	stc    
  436b73:	call   DWORD PTR [ecx+0x3a]
  436b76:	hlt    
  436b77:	cmp    esp,DWORD PTR [edx+0x23]
  436b7a:	push   cs
  436b7b:	add    dl,cl
  436b7d:	cli    
  436b7e:	jns    0x436b4d
  436b80:	es ins BYTE PTR es:[edi],dx
  436b82:	test   DWORD PTR [edi],0x3fa175d
  436b88:	retf   0x8305
  436b8b:	mov    BYTE PTR [esi],dh
  436b8d:	xchg   ecx,eax
  436b8e:	stc    
  436b8f:	jmp    DWORD PTR [ebx+edx*4]
  436b92:	stc    
  436b93:	call   FWORD PTR [edx+0x5f89eb9e]
  436b99:	std    
  436b9a:	xor    cl,dh
  436b9c:	je     0x436b94
  436b9e:	push   es
  436b9f:	mov    bh,0x29
  436ba1:	add    eax,DWORD PTR [eax+eax*1]
  436ba4:	call   0xda56:0x6cd682e3
  436bab:	mov    eax,DWORD PTR [edx-0x3]
  436bae:	sbb    BYTE PTR [ebp+0x6a],0xe3
  436bb2:	add    BYTE PTR [eax+0x22000000],dl
  436bb8:	xchg   ecx,eax
  436bb9:	stc    
  436bba:	jmp    ecx
  436bbc:	aad    0x13
  436bbe:	mov    dh,BYTE PTR [edx+0x2d]
  436bc1:	push   cs
  436bc2:	add    bl,dh
  436bc4:	lahf   
  436bc5:	test   DWORD PTR [edx+eiz*8],ebx
  436bc8:	mov    eax,0x4768143d
  436bcd:	clc    
  436bce:	test   BYTE PTR [ebx+0x6a908797],ch
  436bd4:	test   eax,0xfa78fffd
  436bd9:	xchg   ebx,eax
  436bda:	mov    BYTE PTR [edi],al
  436bdc:	xchg   ecx,eax
  436bdd:	mov    BYTE PTR [eax-0x26ea9],dl
  436be3:	or     al,0xdf
  436be5:	imul   DWORD PTR [esi+0x62c7c5e3]
  436beb:	and    BYTE PTR [ecx-0x78],dh
  436bee:	dec    ebx
  436bef:	jmp    0x436c0b
  436bf1:	xor    DWORD PTR [esi],eax
  436bf3:	jecxz  0x436c1c
  436bf5:	ins    DWORD PTR es:[edi],dx
  436bf6:	mov    esp,0x61fd9dfd
  436bfb:	push   0x6e
  436bfd:	push   ebp
  436bfe:	adc    dh,bl
  436c00:	popf   
  436c01:	or     al,0xb1
  436c03:	js     0x436ba1
  436c05:	add    DWORD PTR [eax],eax
  436c07:	repz pop eax
  436c09:	cmp    eax,DWORD PTR [edi-0xcf595]
  436c0f:	mov    ah,0x65
  436c11:	mov    bl,ah
  436c13:	dec    esi
  436c14:	frstor [edx]
  436c16:	test   DWORD PTR [eax-0x62],esp
  436c19:	add    DWORD PTR [eax],eax
  436c1b:	add    BYTE PTR [eax],al
  436c1d:	add    bl,dh
  436c1f:	ja     0x436bd1
  436c21:	loop   0x436c57
  436c23:	add    BYTE PTR [esi],0xb0
  436c26:	dec    ebx
  436c27:	mov    ch,bh
  436c29:	push   eax
  436c2b:	jecxz  0x436bb2
  436c2d:	mov    BYTE PTR [edi],bh
  436c2f:	test   al,0xfd
  436c31:	jmp    esp
  436c33:	shr    BYTE PTR [edi-0x2],1
  436c36:	lock popf 
  436c38:	std    
  436c39:	pop    ecx
  436c3a:	jp     0x436c6a
  436c3c:	push   ecx
  436c3d:	adc    dh,bl
  436c3f:	push   es
  436c40:	out    0x3e,eax
  436c42:	outs   dx,BYTE PTR ds:[esi]
  436c43:	mov    ds:0xbb3fc73c,al
  436c48:	lea    ebx,[ebx]
  436c4a:	xor    ecx,DWORD PTR [eax+0x7a7cd7d6]
  436c50:	jno    0x436cc2
  436c52:	repz push es
  436c54:	out    0x88,eax
  436c56:	mov    ah,0x6
  436c58:	mov    ecx,0xe11424c6
  436c5d:	and    DWORD PTR [esi-0x4eef1933],ebx
  436c63:	inc    esi
  436c64:	(bad)
  436c68:	jge    0x436bf1
  436c6a:	or     ebp,eax
  436c6c:	or     BYTE PTR [esi+0x5c418391],ch
  436c72:	repz push es
  436c74:	out    0x3,eax
  436c76:	pusha  
  436c77:	ror    DWORD PTR [eax],cl
  436c79:	xchg   DWORD PTR [ecx-0xcfc18b6],ebp
  436c7f:	push   es
  436c80:	fsub   st(5),st
  436c82:	add    BYTE PTR [eax],al
  436c84:	add    BYTE PTR [edx-0x7c],dl
  436c87:	cdq    
  436c88:	int3   
  436c89:	repz push es
  436c8b:	out    0x3,eax
  436c8d:	inc    eax
  436c8e:	out    0x8e,eax
  436c90:	in     al,0xbc
  436c92:	xchg   edi,esp
  436c94:	mov    BYTE PTR [ecx-0xe],ch
  436c97:	out    0x3,eax
  436c99:	repz jbe 0x436c65
  436c9c:	xchg   ah,bl
  436c9e:	push   es
  436c9f:	mov    ah,0x9
  436ca1:	xor    eax,DWORD PTR [eax+ebp*1-0x17f92800]
  436ca8:	add    esi,ebx
  436caa:	or     al,BYTE PTR [edx]
  436cac:	xlat   BYTE PTR ds:[ebx]
  436cad:	inc    esp
  436cae:	ret    
  436caf:	dec    edi
  436cb0:	add    eax,0xc6e706f3
  436cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436cb6:	mov    edx,0xba3fc82b
  436cbb:	add    BYTE PTR [edx-0x77acbd0],bh
  436cc1:	jne    0x436c67
  436cc3:	push   ecx
  436cc5:	xor    al,BYTE PTR [eax-0x31]
  436cc8:	shl    ch,1
  436cca:	mov    BYTE PTR [ebx-0x30691645],0xc1
  436cd1:	cli    
  436cd2:	dec    ecx
  436cd3:	int3   
  436cd4:	mov    ch,0x2c
  436cd6:	mov    edx,0xba34adcc
  436cdb:	int3   
  436cdc:	bound  edi,QWORD PTR [eax+0x4a]
  436cdf:	adc    ch,cl
  436ce1:	lock cmp DWORD PTR [ebp-0x60],edi
  436ce5:	call   0x1318af6
  436cea:	add    BYTE PTR [eax],al
  436cec:	mov    ds:0xf0ffb86e,al
  436cf1:	push   es
  436cf2:	test   DWORD PTR [ecx],edi
  436cf4:	add    eax,DWORD PTR [edx-0x15970eb8]
  436cfa:	push   cs
  436cfb:	jle    0x436d2d
  436cfd:	sbb    eax,DWORD PTR [ebp+0x508be321]
  436d03:	loope  0x436cee
  436d05:	mov    eax,0x86e2a098
  436d0a:	stc    
  436d0b:	push   edx
  436d0c:	ror    BYTE PTR [ecx-0x74412839],0x48
  436d13:	loope  0x436d82
  436d15:	xlat   BYTE PTR ds:[ebx]
  436d16:	adc    esi,DWORD PTR [ebx+0x38]
  436d19:	mov    edi,0x8ef0e912
  436d1e:	sbb    al,0xd8
  436d20:	mov    edi,eax
  436d22:	adc    edi,edx
  436d24:	scas   eax,DWORD PTR es:[edi]
  436d25:	jmp    0x197bdeb0
  436d2a:	add    cl,ch
  436d2c:	jg     0x436cbd
  436d2e:	mov    esp,0x5506f0ff
  436d33:	sub    dh,BYTE PTR [ebx+edx*2+0x4dbe00cc]
  436d3a:	int3   
  436d3b:	int3   
  436d3c:	push   ds
  436d3d:	dec    esi
  436d3e:	int3   
  436d3f:	int3   
  436d40:	xchg   DWORD PTR [ebp-0x6a7bac14],edx
  436d46:	ror    DWORD PTR [ebx-0x754cc8],1
  436d4c:	sub    eax,0x7d7ba0
  436d51:	add    BYTE PTR [eax],al
  436d53:	push   edx
  436d54:	or     bh,BYTE PTR [edi-0x6869980]
  436d5a:	inc    DWORD PTR [edx+0xa]
  436d5d:	add    BYTE PTR [eax],al
  436d5f:	out    0xcc,al
  436d61:	or     BYTE PTR [eax+0x46],0x93
  436d65:	push   eax
  436d66:	or     BYTE PTR [edx-0x3500f582],dl
  436d6c:	jbe    0x436cf2
  436d6e:	push   eax
  436d6f:	add    dh,BYTE PTR [edi]
  436d71:	cmp    DWORD PTR [eax+0x6],0xffffff93
  436d75:	ret    
  436d76:	shl    DWORD PTR [ebx+0x13],0x88
  436d7a:	or     al,0x15
  436d7c:	lahf   
  436d7d:	inc    eax
  436d7e:	adc    al,0x61
  436d80:	and    edx,DWORD PTR [ebx+ecx*4]
  436d83:	or     dl,BYTE PTR [ebx]
  436d85:	or     bl,0x64
  436d88:	mov    edx,0x9ed50c88
  436d8d:	inc    eax
  436d8e:	adc    al,0x41
  436d90:	and    edx,DWORD PTR [ebx+ecx*4]
  436d93:	mov    dl,BYTE PTR [ecx]
  436d95:	or     ebx,0x25
  436d98:	mov    edx,0x91c2e9b9
  436d9d:	or     al,0x17
  436d9f:	in     eax,dx
  436da0:	retf   0x5f13
  436da3:	pop    ss
  436da4:	les    esi,FWORD PTR [edx+ebx*1+0x11]
  436da8:	rcl    DWORD PTR [ebx],cl
  436daa:	mov    ebx,DWORD PTR [edx+0x11]
  436dad:	inc    ebx
  436dae:	mov    DWORD PTR [edi+0x11],ecx
  436db1:	sbb    BYTE PTR [esi],0xf3
  436db4:	out    0xf7,eax
  436db6:	push   cs
  436db7:	add    BYTE PTR [eax],al
  436db9:	add    BYTE PTR [eax-0x4e],ch
  436dbc:	add    eax,0x3f6433f9
  436dc1:	or     DWORD PTR [eax-0x6],0xffffff9e
  436dc5:	pop    edx
  436dc6:	enter  0xc49a,0xcc
  436dca:	das    
  436dcb:	and    ecx,eax
  436dcd:	int3   
  436dce:	daa    
  436dcf:	mov    ebx,0xb33fccc1
  436dd4:	ror    esp,0x37
  436dd7:	inc    edx
  436dd8:	mov    ebp,esp
  436dda:	jo     0x436d9f
  436ddc:	fst    QWORD PTR [ecx+0x66]
  436ddf:	inc    edx
  436de0:	mov    ds:0xfe873a2d,al
  436de5:	push   ebx
  436de7:	outs   dx,DWORD PTR ds:[esi]
  436de8:	in     al,dx
  436de9:	shr    DWORD PTR [esi+0x7b],1
  436dec:	inc    ebx
  436ded:	bound  ebp,QWORD PTR [eax+0x23]
  436df0:	leave  
  436df1:	fist   WORD PTR [ebp-0xf9d7190]
  436df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436df8:	or     BYTE PTR [ecx+0x4c850d2d],dh
  436dfe:	scas   al,BYTE PTR es:[edi]
  436dff:	(bad)  
  436e00:	cmp    eax,0x1775eb7d
  436e05:	in     al,0x20
  436e07:	add    al,0x7a
  436e09:	aad    0x5b
  436e0b:	dec    edx
  436e0c:	or     BYTE PTR [ecx-0x7cfc5ac1],dh
  436e12:	mov    eax,ds:0x7c08ef5a
  436e17:	mov    dl,0x2a
  436e19:	loopne 0x436e83
  436e1b:	es cmp eax,0x62
  436e21:	push   0xffffffb2
  436e23:	sub    ah,al
  436e25:	fwait
  436e26:	mov    ss,WORD PTR [edi-0x79ab5b07]
  436e2c:	add    al,0x64
  436e2e:	lods   al,BYTE PTR ds:[esi]
  436e2f:	fsub   st(4),st
  436e31:	adc    eax,0x76394307
  436e36:	push   0xffffffbc
  436e38:	les    esi,FWORD PTR [edi-0x707343ad]
  436e3e:	mov    bl,bh
  436e40:	or     ch,BYTE PTR [esi-0x36]
  436e43:	out    dx,al
  436e44:	xor    al,0xc2
  436e46:	(bad)  
  436e47:	mov    edi,0x5e0eb38c
  436e4c:	xor    ebp,edi
  436e4e:	(bad)  
  436e4f:	iret   
  436e50:	test   BYTE PTR [esp+eax*4],ch
  436e53:	push   ss
  436e54:	les    esi,FWORD PTR [edx+ebx*8-0x22]
  436e58:	lea    edi,[eax-0x5c81557e]
  436e5e:	sbb    ah,bh
  436e60:	add    esi,ebx
  436e62:	push   es
  436e63:	out    0x3,eax
  436e65:	xor    cl,BYTE PTR [ebp-0x7bdb0fed]
  436e6b:	hlt    
  436e6c:	add    ebx,esi
  436e6e:	push   es
  436e6f:	fs mov dl,0x99
  436e72:	cmp    al,0x9
  436e74:	or     edi,0xffffff8b
  436e77:	out    0xf,eax
  436e79:	in     eax,0x83
  436e7b:	imul   esi,DWORD PTR [edi+eiz*8],0x618ae706
  436e82:	xlat   BYTE PTR ds:[ebx]
  436e83:	fiadd  DWORD PTR [ebx]
  436e85:	add    BYTE PTR [eax],al
  436e87:	add    bl,dh
  436e89:	lea    esp,[ebx+0x6e]
  436e8c:	inc    edi
  436e8d:	adc    bh,ah
  436e8f:	add    esi,DWORD PTR [ecx+ecx*8+0x6a]
  436e93:	mov    esi,0xefbf366f
  436e98:	int3   
  436e99:	and    edi,0xffffff8a
  436e9c:	mov    ebx,0xaed2ea6f
  436ea1:	in     al,dx
  436ea2:	pop    edi
  436ea3:	xor    BYTE PTR [edx+0x8],dh
  436ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ea7:	fidiv  DWORD PTR [ecx]
  436ea9:	jg     0x436e66
  436eab:	leave  
  436eac:	lds    eax,FWORD PTR es:[eax]
  436eaf:	cdq    
  436eb0:	mov    WORD PTR [ebx-0x2c041407],es
  436eb6:	jl     0x436ed8
  436eb8:	icebp  
  436eb9:	inc    DWORD PTR [edx]
  436ebb:	test   al,0x79
  436ebd:	ret    
  436ebe:	in     eax,0xeb
  436ec0:	mov    eax,ds:0xbf67f9c3
  436ec5:	sbb    al,BYTE PTR [eax]
  436ec7:	jmp    0xd5940745
  436ecc:	lock push es
  436ece:	xchg   DWORD PTR [ebp-0x33],ebp
  436ed1:	loop   0x436ed7
  436ed3:	jmp    0xe9432bc8
  436ed8:	lock push es
  436eda:	bound  esi,QWORD PTR [eax+0x54]
  436edd:	xchg   dl,al
  436edf:	ins    DWORD PTR es:[edi],dx
  436ee0:	fist   DWORD PTR ds:[ebx]
  436ee3:	jmp    0x783c75d8
  436ee8:	cwde   
  436ee9:	sbb    BYTE PTR [eax],al
  436eeb:	jmp    0x73436ef0
  436ef0:	pop    ecx
  436ef1:	je     0x436ed5
  436ef3:	cmc    
  436ef4:	mov    ch,0x44
  436ef6:	push   0xfffffff2
  436ef8:	sub    eax,DWORD PTR [edx-0x67ce1ab]
  436efe:	push   0xffffff9e
  436f00:	(bad)  
  436f01:	adc    ebp,ecx
  436f03:	lock test BYTE PTR [ebp+0x5b],dh
  436f07:	addr16 iret 
  436f09:	sti    
  436f0a:	jb     0x436f2f
  436f0c:	ja     0x82cf6245
  436f12:	sbb    ebx,esp
  436f14:	cmp    cl,0x50
  436f17:	leave  
  436f18:	les    eax,FWORD PTR [ebp+0x7d7c8741]
  436f1e:	(bad)  
  436f1f:	out    dx,eax
  436f20:	add    cl,BYTE PTR [edi]
  436f22:	mov    edx,0x71e84569
  436f27:	mov    eax,DWORD PTR [eax-0x7a9eff07]
  436f2d:	les    eax,FWORD PTR [ecx+ebx*1]
  436f30:	popf   
  436f31:	stc    
  436f32:	jl     0x436f69
  436f34:	lea    edi,ds:0xf7c713f8
  436f3a:	jmp    0x436ed9
  436f3c:	(bad)  
  436f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f3e:	and    al,0x9a
  436f40:	push   es
  436f41:	add    BYTE PTR [eax],al
  436f43:	adc    DWORD PTR [eax+edx*2],eax
  436f46:	adc    al,0x8a
  436f48:	push   es
  436f49:	or     DWORD PTR [esp+ebx*8+0x5a000339],0xffffff8d
  436f51:	xchg   esi,eax
  436f52:	pusha  
  436f53:	add    BYTE PTR [eax],al
  436f55:	add    BYTE PTR [ecx+0x6],dl
  436f58:	add    BYTE PTR [eax-0x2d],cl
  436f5b:	add    edx,DWORD PTR [eax+0x14]
  436f5e:	pop    edx
  436f5f:	push   es
  436f60:	bound  eax,QWORD PTR [ecx]
  436f62:	rol    eax,0x81
  436f65:	mov    gs,WORD PTR [edx+0x3200000f]
  436f6b:	xor    al,0xe5
  436f6d:	push   DWORD PTR ds:0x21607e90
  436f73:	push   es
  436f74:	add    BYTE PTR [ebx-0x6a0663b0],al
  436f7a:	(bad)  
  436f7b:	jbe    0x436f76
  436f7d:	inc    DWORD PTR [ecx+0x1a145488]
  436f83:	push   es
  436f84:	sbb    DWORD PTR [esp+edx*4+0xa00033e],0xce548e05
  436f8f:	add    eax,0x37548b00
  436f94:	adc    al,0x0
  436f96:	retf   0x848c
  436f99:	mov    fs,esi
  436f9b:	sldt   WORD PTR [eax]
  436f9e:	mov    esp,0xac87148e
  436fa3:	push   es
  436fa4:	adc    al,0x9f
  436fa6:	repz in al,0x40
  436fa9:	clc    
  436faa:	dec    ebp
  436fab:	out    0xef,eax
  436fad:	mov    BYTE PTR [ecx-0x1d],bh
  436fb0:	icebp  
  436fb1:	push   edi
  436fb2:	jmp    FWORD PTR [edi-0x3]
  436fb5:	test   DWORD PTR [edi+0x71],ebp
  436fb8:	xor    eax,0x14
  436fbd:	rep outs dx,DWORD PTR ds:[esi]
  436fbf:	add    ah,0xf7
  436fc2:	gs scas al,BYTE PTR es:[edi]
  436fc4:	or     DWORD PTR ds:0xedfd0f3d,edi
  436fca:	loope  0x436f78
  436fcc:	test   DWORD PTR [esi],esp
  436fce:	sbb    BYTE PTR [edx+0x1e37bbe],dl
  436fd4:	pop    eax
  436fd5:	jmp    FWORD PTR [edi-0x3]
  436fd8:	or     BYTE PTR [esi+ebx*1-0x174078e6],ah
  436fdf:	std    
  436fe0:	popa   
  436fe1:	jp     0x437026
  436fe3:	jae    0x436fe3
  436fe5:	jnp    0x436fd8
  436fe7:	sbb    al,0x5
  436fe9:	rep outs dx,DWORD PTR ds:[esi]
  436feb:	ds data16 repnz in al,0xba
  436ff0:	xchg   DWORD PTR [esi+0x17cea547],edi
  436ff6:	rcl    BYTE PTR [ebp+edi*2-0x457f8cc9],0xc3
  436ffe:	pop    ebx
  436fff:	std    
  437000:	push   ecx
  437002:	js     0x436f86
  437004:	ds add al,0xa0
  437007:	xchg   esp,eax
  437008:	stc    
  437009:	ins    DWORD PTR es:[edi],dx
  43700a:	inc    ebx
  43700b:	lock push esp
  43700e:	jecxz  0x43708a
  437010:	push   esp
  437011:	pop    es
  437012:	outs   dx,BYTE PTR ds:[esi]
  437013:	std    
  437014:	test   BYTE PTR [ebp+0xe],bh
  437017:	pop    es
  437018:	add    bl,dh
  43701a:	in     al,0x41
  43701c:	or     BYTE PTR [edx-0x26],ch
  43701f:	jp     0x43707d
  437021:	add    BYTE PTR [eax],al
  437023:	add    al,bh
  437025:	push   es
  437026:	out    0x3,eax
  437028:	outs   dx,BYTE PTR ds:[esi]
  437029:	dec    ecx
  43702a:	dec    edi
  43702b:	adc    al,0xc8
  43702d:	adc    BYTE PTR [edx-0x78],0x18
  437031:	sbb    DWORD PTR [ebp+ebp*2-0x11],0xb
  437036:	out    0x3,eax
  437038:	fwait
  437039:	mov    dh,0x3c
  43703b:	xchg   esp,eax
  43703c:	call   0x25e2:0x90888de0
  437043:	(bad)  
  437044:	mov    edi,0xb7c73353
  437049:	push   ebx
  43704a:	sub    eax,edi
  43704c:	scas   eax,DWORD PTR es:[edi]
  43704d:	push   ebx
  43704e:	mov    ecx,0x618c8388
  437053:	div    edi
  437055:	push   es
  437056:	out    0x86,eax
  437058:	jns    0x436ff5
  43705a:	out    0x3,eax
  43705c:	repz fdivr st,st(6)
  43705f:	inc    edi
  437060:	dec    edx
  437061:	sub    dl,0x87
  437064:	jno    0x437095
  437066:	out    dx,al
  437067:	add    esi,ebx
  437069:	xchg   ecx,eax
  43706a:	imul   edi,DWORD PTR [esp+esi*8+0x6],0x3e4b39e7
  437072:	mov    edx,0x69922a93
  437077:	aam    0xef
  437079:	push   es
  43707a:	out    0x33,eax
  43707c:	or     edx,DWORD PTR [edx-0x4c]
  43707f:	xchg   ebx,eax
  437080:	sbb    al,BYTE PTR [ebx+eiz*4-0x18eab500]
  437087:	add    eax,DWORD PTR [eax]
  437089:	add    BYTE PTR [eax],al
  43708b:	repz imul esp,esi,0xffffff80
  43708f:	mov    ah,0x6
  437091:	loop   0x4370ec
  437093:	imul   esi,DWORD PTR [ebx-0x170cbbda],0x65
  43709a:	push   eax
  43709b:	jns    0x43709d
  43709d:	in     eax,dx
  43709e:	add    esi,ebx
  4370a0:	push   es
  4370a1:	add    ah,bh
  4370a3:	test   DWORD PTR ds:0x422c59b2,0x21ae940
  4370ad:	mov    esp,0x8e177
  4370b2:	jmp    0xde7b64a7
  4370b7:	dec    edx
  4370b8:	(bad)  
  4370b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4370ba:	stos   BYTE PTR es:[edi],al
  4370bb:	xor    BYTE PTR [edi],al
  4370bd:	bound  ebp,QWORD PTR [edx+0x43]
  4370c0:	lea    edi,[edx-0x1d]
  4370c3:	lock push es
  4370c5:	add    BYTE PTR [ebp+eiz*4+0x2679b20e],dh
  4370cc:	inc    edx
  4370cd:	inc    eax
  4370ce:	jmp    0x7fff729d
  4370d3:	loope  0x4370dd
  4370d5:	add    cl,ch
  4370d7:	lock repz das 
  4370da:	push   0xffffff87
  4370dc:	or     bh,BYTE PTR [ebp+0x1]
  4370df:	hlt    
  4370e0:	sti    
  4370e1:	scas   eax,DWORD PTR es:[edi]
  4370e2:	fs mov bl,0xc6
  4370e5:	push   cs
  4370e6:	call   0xe9561f5d
  4370eb:	lock fdivr QWORD PTR [ecx+esi*1+0x72000000]
  4370f3:	sar    BYTE PTR [edi],cl
  4370f5:	clc    
  4370f6:	out    dx,eax
  4370f7:	mov    WORD PTR [eax+0x5a06f0f7],gs
  4370fd:	stos   BYTE PTR es:[edi],al
  4370fe:	ins    DWORD PTR es:[edi],dx
  4370ff:	outs   dx,BYTE PTR ds:[esi]
  437100:	(bad)  
  437101:	imul   ebx,esp,0xffffffc6
  437104:	push   cs
  437105:	call   0xe9561f7c
  43710a:	lock fdivr QWORD PTR [edx+ebp*2+0x2d8c8168]
  437112:	mov    bh,0xf
  437114:	jmp    DWORD PTR [esi-0x68]
  437117:	adc    al,0x0
  437119:	jmp    0x1102d40
  43711e:	sahf   
  43711f:	mov    esi,0xbe8ecccc
  437124:	int3   
  437125:	int3   
  437126:	idiv   ebp
  437128:	jmp    0x4370b5
  43712a:	pop    ss
  43712b:	jnp    0x4370b1
  43712d:	mov    BYTE PTR [esi+0x49fff980],cl
  437133:	mov    eax,DWORD PTR ds:0x4e35b37e
  437139:	mov    eax,edi
  43713b:	jbe    0x43719c
  43713d:	mov    eax,DWORD PTR [eax+esi*1]
  437140:	retf   
  437141:	loop   0x437164
  437143:	inc    edx
  437144:	or     BYTE PTR [esi-0x6d],ah
  437147:	cli    
  437148:	mov    bh,0x16
  43714a:	call   0xdd2:0x72b6070a
  437151:	add    BYTE PTR [edx+0x144ffd],cl
  437157:	add    BYTE PTR [eax],al
  437159:	adc    ch,BYTE PTR [esi+0xa]
  43715c:	pinsrw mm6,ecx,0xb0
  437160:	push   ss
  437161:	pop    edx
  437162:	or     dh,bh
  437164:	inc    eax
  437165:	inc    esi
  437166:	std    
  437167:	inc    edi
  437168:	adc    al,0xd1
  43716a:	cmp    DWORD PTR [eax],ecx
  43716c:	mov    BYTE PTR [esi],bh
  43716e:	jae    0x4370f4
  437170:	nop
  437171:	mov    es,WORD PTR [ecx-0x3ce20007]
  437177:	adc    esi,DWORD PTR [ecx+0x66c35c3a]
  43717d:	imul   ebp,DWORD PTR [ecx-0x7cb5b27d],0xf2a3f3ba
  437187:	mov    ebx,0x830a0a16
  43718c:	push   ebp
  43718d:	xor    BYTE PTR cs:[ecx-0x67f6d50],al
  437194:	(bad)  
  437195:	mov    esp,0xf301622b
  43719a:	xchg   DWORD PTR [ebx-0x7c73130b],edi
  4371a0:	(bad)  
  4371a1:	out    dx,eax
  4371a2:	and    al,bl
  4371a4:	bound  ebp,QWORD PTR [eax+0x12]
  4371a7:	clc    
  4371a8:	popa   
  4371a9:	rcl    BYTE PTR [ecx-0x190f407d],0x7b
  4371b0:	mov    esp,0x84fd6fdd
  4371b5:	and    BYTE PTR cs:[edi],0x7
  4371b9:	arpl   WORD PTR [edi+0xfff6],dx
  4371bf:	add    BYTE PTR [eax+ebp*8+0x6f190c30],ch
  4371c6:	xchg   ebp,eax
  4371c7:	sahf   
  4371c8:	cwde   
  4371c9:	cmp    al,0x8f
  4371cb:	jge    0x43717c
  4371cd:	imul   ebp,DWORD PTR [edx],0xffffffbd
  4371d0:	mov    edi,0xb7ccc01b
  4371d5:	xor    eax,eax
  4371d7:	int3   
  4371d8:	scas   eax,DWORD PTR es:[edi]
  4371d9:	sub    eax,eax
  4371db:	int3   
  4371dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371dd:	mov    edx,0xc0c2ec7c
  4371e2:	jl     0x43723f
  4371e4:	add    ebx,DWORD PTR [esi-0xf148c84]
  4371ea:	dec    ebp
  4371eb:	test   bl,dh
  4371ed:	outs   dx,DWORD PTR ds:[esi]
  4371ee:	std    
  4371ef:	jmp    DWORD PTR [esp+0x6ff3fc41]
  4371f6:	std    
  4371f7:	(bad)  
  4371f8:	mov    ebp,0x703a7b40
  4371fd:	aam    0xdf
  4371ff:	std    
  437200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437201:	addr16 xchg ebp,eax
  437203:	jb     0x43722e
  437205:	inc    esp
  437206:	nop
  437207:	xchg   DWORD PTR [ebx+ecx*1+0x68fb8279],esi
  43720e:	std    
  43720f:	jmp    DWORD PTR [ebx+0x4fc4847]
  437215:	push   es
  437216:	mov    ds:0xee22697e,al
  43721b:	add    esi,ebx
  43721d:	xlat   BYTE PTR ds:[ebx]
  43721e:	jle    0x4371ec
  437220:	call   0xc7fca1
  437225:	add    BYTE PTR [eax],al
  437227:	scas   eax,DWORD PTR es:[edi]
  437228:	movd   mm1,ecx
  43722b:	retf   
  43722c:	ss jns 0x4371bf
  43722f:	ficom  DWORD PTR [eax+0x6e15b59]
  437235:	out    0x7c,eax
  437237:	jns    0x4371e4
  437239:	stc    
  43723a:	add    esi,ebx
  43723c:	xchg   DWORD PTR ds:0xdd4637fd,esp
  437242:	ret    0x895
  437245:	sub    BYTE PTR [edx-0x7053705a],bl
  43724b:	out    0x50,al
  43724d:	mov    dl,0x8
  43724f:	mov    cs,WORD PTR [eax]
  437251:	fs cmp al,0xf0
  437254:	(bad)  
  437255:	sbb    BYTE PTR [esi-0x3a],bh
  437258:	add    bl,dh
  43725a:	lds    eax,FWORD PTR [edx]
  43725c:	and    BYTE PTR [esi+0x46],ch
  43725f:	out    0x81,eax
  437261:	daa    
  437262:	pop    ss
  437263:	pop    es
  437264:	nop
  437265:	mov    edi,?
  437267:	ret    
  437268:	xlat   BYTE PTR ds:[ebx]
  437269:	xchg   esi,eax
  43726a:	cmp    DWORD PTR [ebx+0x46],ecx
  43726d:	stc    
  43726e:	(bad)  
  43726f:	pop    edx
  437270:	mov    BYTE PTR [ebx],ch
  437272:	repz push ebp
  437274:	retf   
  437275:	out    0x3,eax
  437277:	xrelease xchg DWORD PTR [ecx-0x18f90c84],esp
  43727e:	pop    es
  43727f:	jmp    0xe06:0xf3049c82
  437286:	mov    edx,0x49482fa
  43728b:	add    BYTE PTR [eax],al
  43728d:	add    bl,dh
  43728f:	push   es
  437290:	outs   dx,BYTE PTR ds:[esi]
  437291:	jle    0x4372ea
  437293:	adc    eax,0x81f0e900
  437298:	jnp    0x43726f
  43729a:	jae    0x437272
  43729c:	add    ebp,DWORD PTR [edx+0x6e]
  43729f:	adc    BYTE PTR [edx+0x3b],bh
  4372a2:	int    0x81
  4372a4:	mov    esi,0x8566a00f
  4372a9:	pop    ds
  4372aa:	jmp    0x437291
  4372ac:	push   es
  4372ad:	outs   dx,DWORD PTR ds:[esi]
  4372ae:	das    
  4372af:	sbb    DWORD PTR [eax],eax
  4372b1:	jmp    0x31de288b
  4372b6:	lds    edi,FWORD PTR [ebx-0x7]
  4372b9:	bound  ebp,QWORD PTR ds:0xf605880f
  4372bf:	jge    0x437303
  4372c1:	cmc    
  4372c2:	mov    ch,0xb5
  4372c4:	call   0x2d62:0xf97ba590
  4372cb:	adc    eax,DWORD PTR [ebp+0x1c8398b7]
  4372d1:	icebp  
  4372d2:	sbb    DWORD PTR [ecx+0x6f0dfbc],ecx
  4372d8:	stc    
  4372d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4372da:	jl     0x437288
  4372dc:	adc    bl,dl
  4372de:	cmp    al,ch
  4372e0:	int3   
  4372e1:	adc    esi,DWORD PTR [eax+0x46]
  4372e4:	in     eax,dx
  4372e5:	pusha  
  4372e6:	jne    0x4372a2
  4372e8:	adc    ch,cl
  4372ea:	lock call 0x18f2d276
  4372f0:	add    cl,ch
  4372f2:	add    BYTE PTR [eax],al
  4372f4:	add    BYTE PTR [ecx+0x9],bh
  4372f7:	bound  ebx,QWORD PTR [edx]
  4372f9:	xchg   ecx,eax
  4372fa:	call   0x18faca05
  4372ff:	add    cl,ch
  437301:	jno    0x4372be
  437303:	std    
  437304:	outs   dx,DWORD PTR ds:[esi]
  437305:	mov    dh,0xba
  437307:	adc    ch,cl
  437309:	lock add DWORD PTR [ebx-0x33],0x2890a9
  437311:	and    DWORD PTR [edi],eax
  437313:	add    BYTE PTR [ebx+0x46bbc],cl
  437319:	sbb    al,bh
  43731b:	dec    edi
  43731c:	inc    ecx
  43731d:	jmp    0x4372e7
  43731f:	dec    ecx
  437320:	call   0x3b0b33
  437325:	xchg   DWORD PTR [ecx+0x6da0988],eax
  43732b:	push   eax
  43732c:	lea    eax,[edx+esi*8-0x1]
  437330:	dec    edx
  437332:	xor    eax,DWORD PTR [ebx-0x11b67d3a]
  437338:	inc    DWORD PTR [ebp-0x7b]
  43733b:	les    edx,FWORD PTR [ebx+esi*2]
  43733e:	add    BYTE PTR [eax],al
  437340:	add    dl,cl
  437342:	std    
  437343:	test   DWORD PTR [esp+edi*4-0x3874fffa],edi
  43734a:	jb     0x4372d2
  43734c:	inc    edi
  43734d:	cwde   
  43734e:	test   ecx,esi
  437350:	or     eax,0x8b5e38b4
  437355:	cli    
  437356:	and    ecx,ebx
  437358:	loop   0x43735a
  43735a:	add    BYTE PTR [eax],al
  43735c:	adc    DWORD PTR [esp+edx*1],edi
  43735f:	xchg   bx,ax
  437361:	hlt    
  437362:	mov    bh,0x16
  437364:	mov    al,BYTE PTR [esi]
  437366:	pop    es
  437367:	mov    dh,0xf4
  437369:	int    0xd
  43736b:	add    BYTE PTR [edx-0x3],bl
  43736e:	dec    ebp
  43736f:	or     dl,dl
  437371:	imul   ecx,DWORD PTR [edx],0x8728cff
  437377:	mov    dh,0xb4
  437379:	retf   0xd
  43737c:	pop    edx
  43737d:	std    
  43737e:	inc    ebp
  43737f:	adc    al,0xd1
  437381:	xor    ecx,DWORD PTR [eax]
  437383:	mov    dh,dh
  437385:	jne    0x43730b
  437387:	xchg   esi,eax
  437388:	push   esi
  437389:	jno    0x437384
  43738b:	push   ebx
  43738d:	push   eax
  43738e:	inc    edx
  43738f:	adc    al,0x62
  437391:	adc    bh,0xc5
  437394:	xchg   ebp,eax
  437395:	pushf  
  437396:	pushf  
  437397:	jge    0x4373ca
  437399:	mov    ebp,0x5a4f9275
  43739e:	std    
  43739f:	dec    DWORD PTR [ebp-0x1a477e1a]
  4373a5:	outs   dx,DWORD PTR ds:[esi]
  4373a6:	std    
  4373a7:	in     al,0xe0
  4373a9:	add    DWORD PTR [edi-0x7c98aa20],ebp
  4373af:	mov    eax,0x7cfd6ffd
  4373b4:	mov    dl,0x6c
  4373b6:	jbe    0x437342
  4373b8:	xchg   edi,eax
  4373b9:	push   ecx
  4373ba:	std    
  4373bb:	call   FWORD PTR [ebx+0x68]
  4373be:	ss inc eax
  4373c0:	add    BYTE PTR [eax],al
  4373c2:	add    bl,dh
  4373c4:	pop    es
  4373c5:	jl     0x43740b
  4373c7:	xor    esi,DWORD PTR [eax+0x78]
  4373ca:	ret    0x9fcb
  4373cd:	cwde   
  4373ce:	stc    
  4373cf:	lods   al,BYTE PTR ds:[esi]
  4373d0:	in     al,dx
  4373d1:	(bad)  
  4373d2:	or     BYTE PTR [eax+0x31],bh
  4373d5:	pushf  
  4373d6:	xchg   edx,eax
  4373d7:	mov    eax,eax
  4373d9:	mov    al,BYTE PTR [ebx-0x7afb4c6c]
  4373df:	mov    ch,0xc7
  4373e1:	(bad)  
  4373e2:	test   BYTE PTR [eax+ebp*1-0xae7a5d5],0xa0
  4373ea:	pop    ebx
  4373eb:	mov    al,0x2b
  4373ed:	ror    ah,0x3f
  4373f0:	mov    edx,0xa278ec78
  4373f5:	stc    
  4373f6:	or     BYTE PTR [edx+ebp*4-0x72b4b013],cl
  4373fd:	dec    ebx
  4373fe:	stc    
  4373ff:	dec    esp
  437400:	in     al,dx
  437401:	mov    DWORD PTR [esi+eiz*4],0x2fccc02c
  437408:	push   es
  437409:	mov    bl,0xbf
  43740b:	daa    
  43740c:	dec    edx
  43740d:	stos   DWORD PTR es:[edi],eax
  43740e:	mov    edi,0x793c4a3f
  437413:	pop    ss
  437414:	lea    esp,[eax+eax*1]
  437417:	ret    
  437418:	outs   dx,BYTE PTR ds:[esi]
  437419:	imul   ecx,DWORD PTR [esi+0x1a],0x79
  43741d:	data16 (bad) 
  43741f:	neg    ebx
  437421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437422:	mov    edi,0xbf9b4a37
  437427:	add    BYTE PTR [eax],al
  437429:	add    BYTE PTR [edi],ch
  43742b:	dec    edx
  43742c:	mov    bl,0xbf
  43742e:	daa    
  43742f:	dec    edx
  437430:	stos   DWORD PTR es:[edi],eax
  437431:	mov    edi,0x74804bbf
  437436:	repz push es
  437438:	out    0x7e,eax
  43743a:	xor    al,0x7
  43743c:	out    0x7e,eax
  43743e:	sub    al,0x7
  437440:	out    0x7e,eax
  437442:	xor    al,0x7
  437444:	out    0x7e,eax
  437446:	sub    al,0x7
  437448:	out    0x7e,eax
  43744a:	xor    al,0x7
  43744c:	out    0x3,eax
  43744e:	repz push es
  437450:	call   0xe64a6758
  437455:	add    esi,ebx
  437457:	push   es
  437458:	loop   0x43745d
  43745a:	repz push es
  43745c:	repnz add esi,ebx
  43745f:	push   es
  437460:	fiadd  DWORD PTR [ebx]
  437462:	repz push es
  437464:	repnz add esi,ebx
  437467:	push   es
  437468:	stos   BYTE PTR es:[edi],al
  437469:	add    esi,ebx
  43746b:	push   es
  43746c:	and    al,BYTE PTR [ebx]
  43746e:	repz push es
  437470:	sbb    al,BYTE PTR [edx]
  437472:	repz push es
  437474:	adc    al,BYTE PTR [eax]
  437476:	repz push es
  437478:	or     al,BYTE PTR [ebx+esi*8]
  43747b:	push   es
  43747c:	add    bh,ah
  43747e:	push   esp
  43747f:	js     0x43747b
  437481:	jmp    0x4374cf
  437483:	js     0x437485
  437485:	idiv   BYTE PTR [eax]
  437487:	js     0x437482
  437489:	out    dx,al
  43748a:	call   0x1297495
  43748f:	add    BYTE PTR [eax],al
  437491:	push   0x78de0007
  437496:	js     0x437491
  437498:	(bad)  
  437499:	js     0x437515
  43749b:	stc    
  43749c:	into   
  43749d:	push   0x68c60006
  4374a2:	push   cs
  4374a3:	add    BYTE PTR [esi-0x49ffe188],bh
  4374a9:	js     0x4374e9
  4374ab:	add    BYTE PTR [esi-0x5a000198],ch
  4374b1:	push   0x789e007e
  4374b6:	jge    0x4374b7
  4374b8:	xchg   ebp,eax
  4374b9:	js     0x437538
  4374bb:	std    
  4374bc:	lea    ebp,[eax+0x7d]
  4374bf:	add    DWORD PTR [esi+0x7e097d68],eax
  4374c5:	js     0x437544
  4374c7:	sbb    DWORD PTR [esi+0x78],esi
  4374ca:	jge    0x437505
  4374cc:	outs   dx,BYTE PTR ds:[esi]
  4374cd:	push   0x6866797d
  4374d2:	jge    0x4374cd
  4374d4:	mov    dh,0xe2
  4374d6:	ror    DWORD PTR [ebp+esi*2+0x6c],cl
  4374da:	push   0x40
  4374dc:	dec    ebp
  4374dd:	sbb    al,0xf3
  4374df:	and    esp,DWORD PTR [ecx+0x721bfd15]
  4374e5:	rol    DWORD PTR [edx],0x85
  4374e8:	out    dx,eax
  4374e9:	in     eax,dx
  4374ea:	push   esi
  4374eb:	jge    0x437530
  4374ed:	jl     0x43746f
  4374ef:	inc    esp
  4374f0:	int    0x9c
  4374f2:	adc    BYTE PTR [ebp+eax*8+0x0],0x0
  4374f7:	add    BYTE PTR [edx+eax*4+0x6c],bl
  4374fb:	int    0xc
  4374fd:	or     BYTE PTR [edx-0x7],0xdd
  437501:	fmul   QWORD PTR [ebx]
  437503:	add    BYTE PTR [ecx-0x66],al
  437506:	out    dx,eax
  437507:	fstp   QWORD PTR [ecx-0x68]
  43750a:	jns    0x4374f5
  43750c:	pop    ebx
  43750d:	add    al,BYTE PTR [eax]
  43750f:	add    BYTE PTR [ecx-0x48],cl
  437512:	sbb    DWORD PTR [esi+eiz*8+0x4e],0x5af66c82
  43751a:	or     BYTE PTR [esi+esi*8+0x72],0x84
  43751f:	inc    edi
  437520:	(bad)  
  437521:	test   DWORD PTR [esi+0x50],0x82437a3
  437528:	sub    DWORD PTR [edi],0x24
  43752b:	or     al,0x82
  43752d:	add    al,BYTE PTR [eax]
  43752f:	add    BYTE PTR [edx],cl
  437531:	clc    
  437532:	inc    esi
  437533:	push   esp
  437534:	cmp    DWORD PTR [ebx+0x56d68948],esp
  43753a:	mov    cl,0x1
  43753c:	fimul  DWORD PTR [edx]
  43753e:	add    BYTE PTR [ebx-0x1f34dd03],cl
  437544:	and    dh,ah
  437546:	inc    ebx
  437547:	and    al,0xd6
  437549:	cmc    
  43754a:	sub    BYTE PTR ds:[ecx+0x31],dl
  43754e:	xor    BYTE PTR [ebx+0x448256e5],cl
  437554:	out    0x56,al
  437556:	or     BYTE PTR [esi+esi*8+0x5a],0x82
  43755b:	push   esp
  43755c:	add    BYTE PTR [eax],al
  43755e:	add    dh,dh
  437560:	inc    edx
  437561:	test   BYTE PTR [edi+0x2],ch
  437564:	not    BYTE PTR [esi+0x3c]
  437567:	and    DWORD PTR [esi],eax
  437569:	and    al,0x2c
  43756b:	add    DWORD PTR [esi],edi
  43756d:	and    al,0x14
  43756f:	xor    DWORD PTR [eax+0x4b09226f],0xc1bc2b03
  437579:	or     eax,DWORD PTR [eax]
  43757b:	pop    edx
  43757c:	or     ah,BYTE PTR [ebx]
  43757e:	shl    ebx,0xea
  437581:	add    BYTE PTR [edi+edi*8],ah
  437584:	adc    BYTE PTR [ecx-0x7b],bl
  437587:	sub    esi,DWORD PTR [ecx-0x1c661243]
  43758d:	or     BYTE PTR [edi+eiz*8],ah
  437590:	out    0x8,al
  437592:	and    al,0xe7
  437594:	or     ch,ah
  437596:	lock sub eax,0xf3fffd61
  43759c:	fcomi  st,st(3)
  43759e:	sub    al,0x33
  4375a0:	jmp    0xbd83:0xa96841fd
  4375a7:	jmp    0x437539
  4375a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375aa:	add    eax,0x859c591b
  4375af:	xchg   DWORD PTR [ebx],eax
  4375b1:	enter  0xbe7c,0xf
  4375b5:	arpl   WORD PTR ds:0x83f861f3,di
  4375bb:	jp     0x43761e
  4375bd:	std    
  4375be:	call   FWORD PTR [ecx+ecx*1+0x34]
  4375c2:	dec    ebp
  4375c3:	add    BYTE PTR [eax],al
  4375c5:	add    BYTE PTR [edx+0x32],al
  4375c8:	push   0x7e43ef85
  4375cd:	xor    al,0x17
  4375cf:	pusha  
  4375d0:	std    
  4375d1:	pop    ds
  4375d2:	repz fisub DWORD PTR [edi+0x56]
  4375d6:	add    BYTE PTR [eax+0x20004410],dl
  4375dc:	neg    DWORD PTR [ebp+0x633ee872]
  4375e2:	adc    eax,0x72380a53
  4375e7:	(bad)  
  4375e8:	adc    eax,0xa5c0e74
  4375ed:	xor    BYTE PTR [edx-0x37],dh
  4375f0:	adc    al,0x6a
  4375f2:	push   cs
  4375f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4375f4:	or     ch,BYTE PTR [eax]
  4375f6:	cmp    ebx,DWORD PTR [esi-0x3]
  4375f9:	push   ebx
  4375fb:	push   es
  4375fc:	repnz lods al,BYTE PTR gs:[esi]
  4375ff:	pop    esi
  437600:	out    dx,eax
  437601:	test   BYTE PTR [ebx+0x5],dl
  437604:	mov    cx,?
  437607:	sti    
  437608:	lock nop
  43760a:	xchg   ebp,eax
  43760b:	push   es
  43760c:	out    0x83,eax
  43760e:	repz sti 
  437610:	in     al,0x9c
  437612:	test   DWORD PTR [ebp-0x14],0xe6c95e33
  437619:	add    eax,0x9ce706f3
  43761e:	cmc    
  43761f:	dec    ebp
  437620:	in     al,0x33
  437622:	xchg   cl,cl
  437624:	out    0x4,al
  437626:	repz push es
  437628:	out    0x2d,eax
  43762a:	add    BYTE PTR [eax],al
  43762c:	add    BYTE PTR [ecx+edx*8-0x698d62e2],bh
  437633:	addr16 mov edx,?
  437636:	std    
  437637:	jecxz  0x43760d
  437639:	cmp    al,0xec
  43763b:	jnp    0x4376ba
  43763d:	xchg   BYTE PTR cs:[esi-0x1198400d],ah
  437644:	fwait
  437645:	outs   dx,BYTE PTR ds:[esi]
  437646:	sbb    ecx,ebx
  437648:	jl     0x437679
  43764a:	sub    ebx,edi
  43764c:	in     al,0xc1
  43764e:	sub    bl,0x72
  437651:	jne    0x437696
  437653:	int    0xa7
  437655:	mov    dh,0x62
  437657:	imul   eax,ebx,0x40
  43765a:	push   cs
  43765b:	test   al,0x9b
  43765d:	jecxz  0x4375ff
  43765f:	and    BYTE PTR [eax],cl
  437661:	xlat   BYTE PTR ds:[ebx]
  437662:	push   ss
  437663:	jmp    0xe403:0xe70b4581
  43766a:	cli    
  43766b:	add    dh,al
  43766d:	and    ecx,DWORD PTR [ebx+0x50]
  437670:	xor    bh,dh
  437672:	push   es
  437673:	out    0x7c,eax
  437675:	mov    ds:0x80430046,eax
  43767a:	mov    cl,al
  43767c:	add    DWORD PTR [eax-0xfe27c01],0x91690006
  437686:	(bad)  
  437687:	jae    0x437655
  437689:	cs pop ebp
  43768b:	ins    DWORD PTR es:[edi],dx
  43768c:	clc    
  43768d:	(bad)  
  43768e:	imul   ebp,DWORD PTR ds:0x29,0x12
  437695:	mov    al,ds:0xb2703286
  43769a:	adc    BYTE PTR [edx],bl
  43769c:	nop
  43769d:	or     ch,al
  43769f:	arpl   WORD PTR [ebp-0x51],di
  4376a2:	(bad)  
  4376a3:	call   0xca107d98
  4376a8:	out    0x2c,eax
  4376aa:	xlat   BYTE PTR ds:[ebx]
  4376ab:	or     dh,BYTE PTR [edx]
  4376ad:	inc    edx
  4376ae:	jmp    0x43769a
  4376b0:	pusha  
  4376b1:	mov    WORD PTR [ebp+ecx*1+0x1f],ss
  4376b5:	hlt    
  4376b6:	hlt    
  4376b7:	out    dx,al
  4376b8:	cmc    
  4376b9:	jmp    FWORD PTR [ecx+ebp*4]
  4376bc:	fstp   QWORD PTR [edi-0x4d905d7a]
  4376c2:	adc    BYTE PTR [edx+0x72e80997],bh
  4376c8:	and    ebp,DWORD PTR [ebx]
  4376ca:	add    al,0x62
  4376cc:	sbb    ebp,DWORD PTR [ebx]
  4376ce:	or     al,0xca
  4376d0:	mov    ds:0x48580489,eax
  4376d5:	push   edi
  4376d6:	mov    edi,0xcc89bf93
  4376db:	ret    
  4376dc:	xchg   esp,eax
  4376dd:	inc    ecx
  4376de:	jmp    0x437743
  4376e0:	ja     0x437680
  4376e2:	adc    dh,dh
  4376e4:	sub    al,0xa5
  4376e6:	add    cl,ch
  4376e8:	lock xchg bh,bl
  4376eb:	out    0xec,al
  4376ed:	out    0x35,eax
  4376ef:	xor    BYTE PTR [eax],al
  4376f1:	add    al,0x86
  4376f3:	add    BYTE PTR [ebx],ah
  4376f5:	pop    eax
  4376f6:	mov    ecx,0x66
  4376fb:	ja     0x4376ed
  4376fd:	ret    0xc980
  437700:	jp     0x4376ce
  437702:	loopne 0x437695
  437704:	pop    DWORD PTR [edx+0x9d2cd]
  43770a:	add    BYTE PTR [edx-0x48],bl
  43770d:	loopne 0x437757
  43770f:	xor    BYTE PTR [edx-0x71e63ae5],ah
  437715:	sti    
  437716:	iret   
  437717:	loope  0x437723
  437719:	xor    DWORD PTR [esi+ebp*1+0x5b],0x3331c784
  437721:	and    al,0x28
  437723:	add    DWORD PTR [ebp+0x7],0x7ae82
  43772a:	add    BYTE PTR [ecx-0x6ee7dbc5],ah
  437730:	test   BYTE PTR [ebx],ah
  437732:	repnz mov DWORD PTR [edx-0x10e37605],edx
  437739:	dec    BYTE PTR [ecx+0x568209cc]
  43773f:	or     BYTE PTR [eax+0x349203be],cl
  437745:	stc    
  437746:	xchg   DWORD PTR ds:0xd9c77b05,ebp
  43774c:	xchg   ebp,eax
  43774d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43774e:	mov    edi,esi
  437750:	and    ax,0xdae9
  437754:	mov    edi,esi
  437756:	call   FWORD PTR [ecx-0x80]
  437759:	stc    
  43775a:	je     0x437763
  43775c:	inc    ebx
  43775d:	jne    0x437783
  43775f:	add    BYTE PTR [eax],al
  437761:	add    BYTE PTR [edx+0x514faf02],dh
  437767:	cmp    ah,BYTE PTR [eax+ebx*1]
  43776a:	and    BYTE PTR [ecx+0x7c],dh
  43776d:	jmp    0x182660b
  437772:	repz out 0x39,eax
  437775:	(bad)  
  437776:	ins    BYTE PTR es:[edi],dx
  437777:	test   eax,0x64b47cfe
  43777c:	mov    fs,WORD PTR [esi-0x67d2766]
  437782:	jl     0x43770c
  437784:	cmp    eax,0xfe526e09
  437789:	push   ebx
  43778b:	out    0x3,eax
  43778d:	add    bl,dh
  43778f:	pop    edi
  437790:	scas   al,BYTE PTR es:[edi]
  437791:	loopne 0x43773e
  437793:	cmp    al,0xc0
  437795:	std    
  437796:	xor    ah,ch
  437798:	sub    BYTE PTR [ebx+edi*8],ah
  43779b:	hlt    
  43779c:	clc    
  43779d:	jge    0x4377f9
  43779f:	mov    BYTE PTR [edx+0x3cc83cf9],0x9
  4377a6:	outs   dx,BYTE PTR ds:[esi]
  4377a7:	(bad)  
  4377a8:	(bad)  
  4377a9:	push   ebx
  4377ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4377ac:	std    
  4377ad:	push   ebx
  4377af:	pop    edi
  4377b0:	mov    al,0xe0
  4377b2:	stos   DWORD PTR es:[edi],eax
  4377b3:	cld    
  4377b4:	mov    eax,0x2fe532fd
  4377b9:	and    al,0xff
  4377bb:	hlt    
  4377bc:	(bad)  
  4377bd:	jge    0x4377d9
  4377bf:	addr16 test cl,bh
  4377c2:	cld    
  4377c3:	in     al,0xbb
  4377c5:	test   DWORD PTR [eax],eax
  4377c7:	add    BYTE PTR [eax],al
  4377c9:	scas   eax,DWORD PTR es:[edi]
  4377ca:	or     edx,eax
  4377cc:	lock retf 0xff4
  4377d0:	and    al,0x2b
  4377d2:	gs mov edi,0xfeb97109
  4377d8:	push   ebx
  4377da:	pop    esp
  4377db:	mov    bh,0x7d
  4377dd:	dec    edi
  4377de:	inc    esp
  4377df:	int    0xff
  4377e1:	aas    
  4377e2:	dec    esp
  4377e3:	fdivr  DWORD PTR [esi+0x4476eff0]
  4377e9:	addps  xmm1,xmm0
  4377ec:	mov    esi,0xd8c70725
  4377f1:	gs jne 0x437777
  4377f4:	jns    0x437798
  4377f6:	sbb    eax,0x2e419955
  4377fb:	sub    BYTE PTR [esi],cl
  4377fd:	cmp    eax,0x4f91281e
  437802:	jge    0x437836
  437804:	(bad)  [esi+0x2f789f5d]
  43780a:	sub    esi,edi
  43780c:	enter  0xf834,0xd2
  437810:	add    bh,bl
  437812:	sub    dl,bl
  437814:	add    BYTE PTR [ebx+0x1d],ah
  437817:	sbb    cl,bl
  437819:	sub    al,0x7d
  43781b:	mov    ds:0x282de4df,eax
  437820:	push   cs
  437821:	sbb    DWORD PTR [esi],ebx
  437823:	sub    BYTE PTR [ecx-0x20848269],dl
  437829:	cld    
  43782a:	jge    0x4377c7
  43782c:	fild   WORD PTR [eax]
  43782e:	add    BYTE PTR [eax],al
  437830:	fsubr  QWORD PTR ds:0x1e090da8
  437836:	test   al,0x90
  437838:	push   edi
  437839:	jge    0x437815
  43783b:	fadd   DWORD PTR [esi]
  43783d:	pop    ebp
  43783e:	repz add BYTE PTR [ebx],al
  437841:	sbb    eax,0x2aaf78b8
  437846:	(bad)  
  437848:	cmp    eax,0x35d8def8
  43784d:	jne    0x4377d2
  43784f:	js     0x437833
  437851:	sbb    al,0x95
  437853:	js     0x437810
  437855:	je     0x43789a
  437857:	js     0x4378c0
  437859:	sub    eax,ebx
  43785b:	call   0x7076:0x848a70e5
  437862:	repnz or al,0xfa
  437865:	loopne 0x43780a
  437867:	js     0x43783f
  437869:	add    BYTE PTR [eax],al
  43786b:	pop    es
  43786c:	shl    DWORD PTR [ecx+ecx*1],cl
  43786f:	out    dx,al
  437870:	push   ebx
  437871:	(bad)  
  437872:	imul   edx,ebp,0xde0904c4
  437878:	jp     0x437878
  43787a:	call   0x2416939f
  43787f:	loope  0x4378ec
  437881:	jo     0x43780c
  437883:	test   BYTE PTR [ebx-0x50],0x7d
  437887:	cmp    al,0x90
  437889:	test   DWORD PTR ds:0x973dee6,0xc1f336bf
  437893:	in     eax,dx
  437894:	add    BYTE PTR [eax],al
  437896:	add    BYTE PTR [edi+0x63],bl
  437899:	cli    
  43789a:	push   0xffffff9d
  43789c:	daa    
  43789d:	or     DWORD PTR [edx],eax
  43789f:	xchg   edi,eax
  4378a0:	(bad)  
  4378a1:	aam    0x9
  4378a3:	inc    edi
  4378a4:	out    dx,al
  4378a5:	fcomip st,st(6)
  4378a7:	out    dx,eax
  4378a8:	push   edx
  4378a9:	test   ebp,esp
  4378ab:	jae    0x4378ab
  4378ad:	mov    cl,0x25
  4378af:	aas    
  4378b0:	faddp  st(6),st
  4378b2:	ret    0x8b89
  4378b5:	rcr    BYTE PTR [esi+eax*1-0x50],0xe8
  4378ba:	stc    
  4378bb:	dec    esi
  4378bc:	cmp    BYTE PTR [ebp+ecx*1-0x1],bh
  4378c0:	std    
  4378c1:	sub    ebp,0x6f6
  4378c7:	or     esp,DWORD PTR [esp+edx*1]
  4378ca:	ss cmp eax,0xf0eb0f68
  4378d0:	push   es
  4378d1:	test   DWORD PTR [ecx+0x51106936],ebx
  4378d7:	(bad)  
  4378d8:	std    
  4378d9:	or     DWORD PTR [ecx+0x6a0006f7],0x4f
  4378e0:	(bad)  
  4378e1:	jae    0x4378d8
  4378e3:	loope  0x437926
  4378e5:	mov    edi,0xc175bd00
  4378ea:	bsf    ecx,edx
  4378ed:	and    ch,al
  4378ef:	test   eax,0xd9d87cff
  4378f4:	inc    edi
  4378f5:	stc    
  4378f6:	add    ch,bl
  4378f8:	adc    ecx,ebx
  4378fa:	rol    DWORD PTR [eax],0x0
  4378fd:	add    BYTE PTR [ecx],cl
  4378ff:	xchg   BYTE PTR [eax],ah
  437901:	ja     0x43789b
  437903:	adc    al,0x66
  437905:	cmc    
  437906:	lods   eax,DWORD PTR ds:[esi]
  437907:	jne    0x437940
  437909:	adc    esp,0xfffffffe
  43790c:	push   es
  43790d:	repz mov esp,0x8d20bd87
  437913:	loopne 0x4378d3
  437915:	mov    edi,DWORD PTR [esi+0x27]
  437918:	or     al,0xf
  43791a:	mov    cl,0xe2
  43791c:	push   es
  43791d:	jle    0x437921
  43791f:	adc    al,0x77
  437921:	aad    0xd1
  437923:	(bad)  
  437924:	jp     0x437935
  437926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437927:	(bad)  
  437928:	sbb    al,0x1b
  43792b:	loopne 0x43793c
  43792d:	sub    esp,ebx
  43792f:	adc    esp,DWORD PTR [esi-0x37]
  437932:	mov    dl,0x1a
  437934:	pop    es
  437935:	test   dh,ch
  437937:	or     al,BYTE PTR [eax]
  437939:	add    BYTE PTR [ecx-0x1a8bf91d],bl
  43793f:	adc    ecx,ebx
  437941:	ror    DWORD PTR ds:0xbc0fc175,0xc9
  437948:	and    ch,al
  43794a:	stc    
  43794b:	push   ss
  43794c:	jge    0x437926
  43794e:	leave  
  43794f:	inc    edi
  437950:	stc    
  437951:	add    ah,BYTE PTR [ebx-0x7e]
  437954:	je     0x43797a
  437956:	out    dx,al
  437957:	jge    0x437918
  437959:	sub    edx,DWORD PTR [esi]
  43795b:	pop    ds
  43795c:	sub    BYTE PTR [ebx],bh
  43795e:	mov    DWORD PTR [ecx],ebx
  437960:	jp     0x43790b
  437962:	add    BYTE PTR [eax],al
  437964:	add    bl,dh
  437966:	pop    edi
  437967:	std    
  437968:	(bad)  
  437969:	js     0x437915
  43796b:	mov    dh,cl
  43796d:	sbb    cl,dh
  43796f:	and    edi,0x8806f9f0
  437975:	in     al,dx
  437976:	jmp    0x16be7841
  43797b:	add    bh,BYTE PTR [ebp-0x53]
  43797e:	popa   
  43797f:	test   DWORD PTR [ecx-0xe],eax
  437982:	not    ebp
  437984:	std    
  437985:	jno    0x4379a4
  437987:	add    ch,ch
  437989:	push   edi
  43798a:	jmp    0xf91a9d7f
  43798f:	fsub   DWORD PTR [ebx]
  437991:	jmp    0x437969
  437993:	das    
  437994:	stc    
  437995:	je     0x4379cc
  437997:	nop
  437998:	inc    edi
  437999:	repz loopne 0x437a15
  43799c:	(bad)  
  43799d:	(bad)  
  43799f:	cmp    edi,DWORD PTR [edi+edx*1+0x58]
  4379a3:	icebp  
  4379a4:	lods   eax,DWORD PTR ds:[esi]
  4379a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4379a6:	call   0xe137fff5
  4379ab:	imul   edi,ebp,0x6c
  4379ae:	popf   
  4379af:	add    al,0x88
  4379b1:	mov    ah,0x61
  4379b3:	test   DWORD PTR [ecx-0x10],eax
  4379b6:	loopne 0x4379fd
  4379b8:	add    al,0x20
  4379ba:	retf   0x5c89
  4379bd:	iret   
  4379be:	ja     0x437a26
  4379c0:	add    BYTE PTR [ecx*2-0x77eb7a81],bl
  4379c7:	les    ecx,FWORD PTR [eax]
  4379c9:	add    BYTE PTR [eax],al
  4379cb:	add    BYTE PTR [esi-0x62],dh
  4379ce:	add    al,0x0
  4379d0:	repz loopne 0x437a36
  4379d3:	or     esp,ebp
  4379d5:	nop
  4379d6:	cmp    eax,0x239e7509
  4379db:	or     al,0x76
  4379dd:	xchg   edi,eax
  4379de:	ret    
  4379df:	cmp    al,0xf3
  4379e1:	push   es
  4379e2:	out    0x4d,al
  4379e4:	jbe    0x4379e8
  4379e6:	outs   dx,BYTE PTR ds:[esi]
  4379e7:	imul   esp,DWORD PTR [edi+0x7681926c],0x6d
  4379ee:	aas    
  4379ef:	(bad)  
  4379f0:	sti    
  4379f1:	adc    DWORD PTR [ecx+0x4],0xfffffff3
  4379f5:	push   es
  4379f6:	fs jmp 0xfa43:0x95fd
  4379fd:	in     al,dx
  4379fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4379ff:	and    eax,0xc53f83f7
  437a04:	fild   WORD PTR [esi]
  437a06:	outs   dx,BYTE PTR ds:[esi]
  437a07:	enter  0xfad0,0xe5
  437a0b:	dec    esp
  437a0c:	jbe    0x437a10
  437a0e:	pop    edi
  437a0f:	imul   ebx,esp,0x6d
  437a12:	inc    edx
  437a13:	xor    DWORD PTR [esi+0x6d],0xc26e4c6e
  437a1a:	or     bh,BYTE PTR [eax]
  437a1c:	bound  ecx,QWORD PTR [edi+0x5e]
  437a1f:	clc    
  437a20:	adc    BYTE PTR [edi],ch
  437a22:	fiadd  WORD PTR [edx+ebp*8-0x78]
  437a26:	inc    ebp
  437a27:	add    al,0xf3
  437a29:	push   es
  437a2a:	out    0x4c,al
  437a2c:	into   
  437a2d:	jmp    0xf300:0x33c2
  437a34:	repz (bad) 
  437a36:	sub    al,0x7c
  437a38:	or     edi,esi
  437a3a:	cmp    al,0x24
  437a3c:	hlt    
  437a3d:	mov    gs,WORD PTR [esp+edi*1]
  437a40:	jns    0x437a85
  437a42:	lea    esp,[edx]
  437a44:	and    esi,edx
  437a46:	ins    BYTE PTR es:[edi],dx
  437a47:	test   eax,0xaef9b831
  437a4c:	and    DWORD PTR [eax-0x2d7ea88c],edi
  437a52:	sub    al,0x16
  437a54:	popa   
  437a55:	daa    
  437a56:	lea    esi,[edi+0x2b3cf722]
  437a5c:	hlt    
  437a5d:	inc    DWORD PTR [eax]
  437a5f:	div    dl
  437a61:	and    esi,ebp
  437a63:	out    dx,eax
  437a64:	jbe    0x437a8b
  437a66:	cwde   
  437a67:	(bad)  
  437a69:	xor    eax,0x2522dab8
  437a6e:	mov    eax,0x1585a347
  437a73:	sbb    ebp,DWORD PTR [edi]
  437a75:	test   DWORD PTR ds:0x9835370b,esi
  437a7b:	mov    edx,0x27982512
  437a80:	mov    ds:0x59d77685,eax
  437a85:	in     eax,0xf9
  437a87:	div    DWORD PTR [esi+0x25]
  437a8a:	pop    eax
  437a8b:	xlat   BYTE PTR ds:[ebx]
  437a8c:	cmp    esi,DWORD PTR [edx-0x1f]
  437a8f:	fistp  QWORD PTR [ebx]
  437a91:	in     eax,dx
  437a92:	test   DWORD PTR [edi+0x76],esi
  437a95:	and    eax,0x3a
  437a9a:	outs   dx,DWORD PTR ds:[esi]
  437a9b:	inc    ebp
  437a9c:	in     eax,dx
  437a9d:	test   DWORD PTR [edi-0xd],esp
  437aa0:	and    eax,DWORD PTR ds:0xe123cb7e
  437aa6:	fldenv [edx]
  437aa8:	cli    
  437aa9:	es jae 0x437a60
  437aac:	shr    BYTE PTR [edx-0xc4893d1],1
  437ab2:	lock push es
  437ab4:	add    BYTE PTR [edx],al
  437ab6:	adc    al,0x9f
  437ab8:	and    BYTE PTR [ebp-0x14],bh
  437abb:	mov    bl,0x0
  437abd:	jmp    0xe2f981b2
  437ac2:	lock push es
  437ac4:	add    BYTE PTR [edx],al
  437ac6:	add    al,0xb4
  437ac8:	int3   
  437ac9:	sub    dh,BYTE PTR [eax]
  437acb:	ins    BYTE PTR es:[edi],dx
  437acc:	mov    bh,0x3
  437ace:	out    dx,eax
  437acf:	push   es
  437ad0:	add    dl,al
  437ad2:	out    0x81,eax
  437ad4:	je     0x437adb
  437ad6:	ret    
  437ad7:	mov    bl,0xd4
  437ad9:	add    cl,cl
  437adb:	inc    edi
  437adc:	stc    
  437add:	mov    ecx,0x810
  437ae2:	mov    cl,0x2
  437ae4:	add    DWORD PTR [esi+ebp*8+0x4a],0x7e
  437ae9:	leave  
  437aea:	inc    BYTE PTR [edi]
  437aec:	or     DWORD PTR [eax-0xe],0x531c407f
  437af3:	adc    esp,ebx
  437af5:	add    BYTE PTR [ecx-0x3a],bl
  437af8:	dec    edi
  437af9:	mov    ds:0x74fa0309,eax
  437afe:	add    BYTE PTR [eax],al
  437b00:	add    al,cl
  437b02:	adc    ch,0x8b
  437b05:	ficomp WORD PTR [esi]
  437b07:	pop    eax
  437b08:	mov    edx,DWORD PTR [ecx+0x7f]
  437b0b:	push   eax
  437b0c:	sbb    al,0xcb
  437b0e:	fsqrt  
  437b10:	sub    bh,BYTE PTR [ebx]
  437b12:	ret    0x3d8
  437b15:	icebp  
  437b16:	leave  
  437b17:	cmp    BYTE PTR [eax-0x5a],0x7a
  437b1b:	push   edx
  437b1c:	cmp    al,0x1
  437b1e:	rol    BYTE PTR [esp+ebx*2+0x5c3126ee],0xfe
  437b26:	push   cs
  437b27:	ins    DWORD PTR es:[edi],dx
  437b28:	adc    al,0xf1
  437b2a:	test   DWORD PTR [edx+0x1d66e318],0x82f84914
  437b34:	pop    eax
  437b35:	pop    esi
  437b36:	mov    bl,ah
  437b38:	or     ebx,DWORD PTR [ebx+0x4b]
  437b3b:	sbb    eax,0xb332c314
  437b40:	add    DWORD PTR [edx+0x7],ecx
  437b43:	add    bl,dl
  437b45:	stc    
  437b46:	aas    
  437b47:	jl     0x437b86
  437b49:	mov    ch,BYTE PTR [eax+0x6e08003b]
  437b4f:	add    DWORD PTR [edi],ecx
  437b51:	pop    ecx
  437b52:	ret    0x7e06
  437b55:	repz call 0x668c:0x48d0710a
  437b5d:	mov    ebx,0xdf23d8f8
  437b62:	or     BYTE PTR [edx+0x72],bl
  437b65:	add    BYTE PTR [eax],al
  437b67:	add    cl,bh
  437b69:	add    al,0x5a
  437b6b:	jge    0x437b1d
  437b6d:	mov    WORD PTR gs:[eax-0x9],ds
  437b71:	xchg   esp,eax
  437b72:	pop    es
  437b73:	and    eax,0x7d5b91e0
  437b78:	mov    ch,0x65
  437b7a:	mov    WORD PTR [eax-0x11],?
  437b7d:	in     al,0xd8
  437b7f:	and    esp,ebx
  437b81:	inc    esp
  437b82:	pop    edx
  437b83:	jb     0x437b6b
  437b85:	push   esp
  437b86:	pop    edx
  437b87:	jg     0x437b39
  437b89:	pop    edi
  437b8a:	add    al,0x0
  437b8c:	repz out 0xd4,al
  437b8f:	js     0x9d38a208
  437b95:	sub    DWORD PTR [ecx+eax*8-0x2a10e],eax
  437b9c:	jp     0x437bf6
  437b9e:	or     eax,0xa0a0b77d
  437ba3:	push   ebp
  437ba4:	push   ss
  437ba5:	mov    bl,dl
  437ba7:	mov    esp,0xec868b3f
  437bac:	jo     0x437bda
  437bae:	stc    
  437baf:	test   dh,al
  437bb1:	outs   dx,DWORD PTR ds:[esi]
  437bb2:	cs shl ah,0xd0
  437bb6:	inc    esp
  437bb7:	test   DWORD PTR [edx],esi
  437bb9:	pop    ds
  437bba:	fs adc al,bh
  437bbd:	push   ds
  437bbe:	into   
  437bbf:	test   BYTE PTR [esi-0x70bc738d],bl
  437bc5:	test   edi,0xa99b7aa7
  437bcb:	xchg   DWORD PTR [eax],eax
  437bcd:	add    BYTE PTR [eax],al
  437bcf:	scas   al,BYTE PTR es:[edi]
  437bd0:	das    
  437bd1:	mov    WORD PTR [ebx+0x67],es
  437bd4:	pop    es
  437bd5:	jo     0x437b9e
  437bd7:	pop    esp
  437bd8:	and    BYTE PTR [eax+eax*8],0x74
  437bdc:	les    esp,FWORD PTR [esi+0x63d13331]
  437be2:	push   edx
  437be3:	xchg   DWORD PTR [esi+ecx*8],ecx
  437be6:	push   es
  437be7:	push   0xf303e78e
  437bec:	push   es
  437bed:	loop   0x437ba3
  437bef:	test   ebp,0xbc377d40
  437bf5:	dec    edx
  437bf6:	(bad)  
  437bf7:	daa    
  437bf8:	mov    esp,0x4507c442
  437bfd:	adc    eax,0xeef36e6e
  437c02:	mov    cl,ch
  437c04:	jg     0x437c3a
  437c06:	cmp    BYTE PTR [ebx-0x7],0xe6
  437c0a:	add    esi,ebx
  437c0c:	xchg   esi,eax
  437c0d:	or     DWORD PTR [ecx+0x442c427],eax
  437c13:	and    BYTE PTR [ecx],al
  437c15:	scas   eax,DWORD PTR es:[edi]
  437c16:	sbb    BYTE PTR [ebx+0x7471d607],0xc3
  437c1d:	pop    edx
  437c1e:	cmp    DWORD PTR [ebx+0x308ae3f0],edi
  437c24:	imul   ebp,DWORD PTR [esi+0x4c],0x70
  437c28:	inc    esi
  437c29:	mov    ah,0x2a
  437c2b:	jbe    0x437bf0
  437c2d:	fimul  DWORD PTR [eax+0x13a44203]
  437c33:	add    BYTE PTR [eax],al
  437c35:	add    BYTE PTR [ebx+0x6e03e707],dh
  437c3b:	mov    ebx,0x85f58af6
  437c40:	out    0x7,eax
  437c42:	outs   dx,BYTE PTR ds:[esi]
  437c43:	push   ss
  437c44:	pusha  
  437c45:	or     bh,BYTE PTR [esi-0xebb14fa]
  437c4b:	pop    es
  437c4c:	out    0x3,eax
  437c4e:	repz enter 0xb9ff,0xb0
  437c53:	rol    DWORD PTR [esp+eax*1-0x59ae55c4],cl
  437c5a:	icebp  
  437c5b:	push   es
  437c5c:	add    cl,ch
  437c5e:	retf   
  437c5f:	inc    edi
  437c60:	jb     0x437c46
  437c62:	push   cs
  437c63:	jmp    0xec73:0x64b4c7b
  437c6a:	das    
  437c6b:	xor    bh,al
  437c6d:	cmp    esp,DWORD PTR [edx+0x32]
  437c70:	leave  
  437c71:	cmp    dh,dl
  437c73:	jg     0x437cf0
  437c75:	lods   eax,DWORD PTR ds:[esi]
  437c76:	sahf   
  437c77:	push   0x81f0e9f9
  437c7c:	shr    BYTE PTR [esp+edx*8+0x24],cl
  437c80:	add    dh,ah
  437c82:	jg     0x437c3f
  437c84:	push   edx
  437c85:	inc    ebp
  437c86:	repz je 0x437cae
  437c89:	js     0x437c43
  437c8b:	push   ss
  437c8c:	ds push 0x2a
  437c8f:	(bad)  
  437c90:	jno    0x437c18
  437c92:	jnp    0x437c68
  437c94:	pop    es
  437c95:	fs es in eax,dx
  437c98:	or     al,0x6c
  437c9a:	add    BYTE PTR [eax],al
  437c9c:	add    BYTE PTR [edx-0xd],al
  437c9f:	add    ch,BYTE PTR [edx+0x8]
  437ca2:	push   0xcea7e36d
  437ca7:	jl     0x437cca
  437ca9:	call   ecx
  437cab:	test   BYTE PTR [ebp+edx*4-0x55],cl
  437caf:	sub    eax,0x43815629
  437cb4:	outs   dx,DWORD PTR ds:[esi]
  437cb5:	test   al,0x69
  437cb7:	stc    
  437cb8:	jmp    0x744bdead
  437cbd:	mov    WORD PTR [ebx],fs
  437cbf:	add    cl,ch
  437cc1:	lock push es
  437cc3:	nop
  437cc4:	(bad)  
  437cc5:	jnp    0x437c82
  437cc7:	add    ah,BYTE PTR [ebp+0x56]
  437cca:	imul   eax,DWORD PTR [ebp+0x0],0x47
  437cce:	mov    al,ds:0x6218c07b
  437cd3:	or     BYTE PTR [edi+edx*1-0x80],0x7b
  437cd8:	clc    
  437cd9:	sub    al,0x76
  437cdb:	loop   0x437c68
  437cdd:	fist   WORD PTR [edx]
  437cdf:	xor    DWORD PTR [ebp+0xe],0x31
  437ce3:	rol    BYTE PTR [ebp+0x66227753],0x89
  437cea:	cmp    eax,DWORD PTR cs:[eax]
  437ced:	mov    dh,0xd
  437cef:	pop    es
  437cf0:	mov    bh,0xc6
  437cf2:	inc    eax
  437cf3:	or     BYTE PTR [edi+0x667d5606],dh
  437cf9:	push   ebx
  437cfa:	pop    es
  437cfb:	dec    esi
  437cfc:	sysexit 
  437cfe:	pop    ss
  437cff:	cmp    esp,DWORD PTR [esi+0x0]
  437d02:	add    BYTE PTR [eax],al
  437d04:	ins    DWORD PTR es:[edi],dx
  437d05:	inc    esi
  437d06:	dec    esi
  437d07:	test   BYTE PTR [edi+0x57],cl
  437d0a:	dec    esi
  437d0b:	test   BYTE PTR [ecx+0x56],dl
  437d0e:	add    DWORD PTR [eax-0x4f],eax
  437d11:	ret    0xd769
  437d14:	and    ecx,eax
  437d16:	jp     0x437d00
  437d18:	call   0x73ec:0xdfff7aa
  437d1f:	cmp    DWORD PTR [edx+0x57],esp
  437d22:	or     al,0xc7
  437d24:	push   edi
  437d25:	iret   
  437d26:	pop    ss
  437d27:	dec    esi
  437d28:	pop    edx
  437d29:	add    edi,DWORD PTR [edi+0x474b2a45]
  437d2f:	inc    eax
  437d30:	mov    bh,BYTE PTR [edx+0x45]
  437d33:	in     al,0xc1
  437d35:	xor    bh,BYTE PTR [eax-0x6bc7068]
  437d3b:	sub    al,0x48
  437d3d:	add    DWORD PTR [eax],eax
  437d3f:	add    bl,ah
  437d41:	inc    ebp
  437d42:	aad    0xb8
  437d44:	mov    dl,0x3d
  437d46:	cmp    DWORD PTR [eax],eax
  437d48:	repz inc edx
  437d4a:	add    edi,esi
  437d4c:	cmp    al,0x5d
  437d4e:	mov    WORD PTR [ebx+0x53],es
  437d51:	sbb    BYTE PTR [edi-0x2a10c1d],bh
  437d57:	call   FWORD PTR [eax]
  437d59:	bound  ecx,QWORD PTR [ebx+esi*2-0x241119ed]
  437d60:	sub    al,0x1a
  437d62:	pusha  
  437d63:	or     eax,0x84fd5df3
  437d68:	add    BYTE PTR [eax],al
  437d6a:	add    BYTE PTR [esi+0x6a008a69],ch
  437d70:	and    dh,BYTE PTR [edi+eax*4-0x5a]
  437d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437d75:	mov    cl,BYTE PTR [ebx-0x11]
  437d78:	mov    BYTE PTR [eax+eax*1],al
  437d7b:	rep outs dx,DWORD PTR ds:[esi]
  437d7d:	push   edx
  437d7e:	loopne 0x437da0
  437d80:	jns    0x437d0e
  437d82:	jnp    0x437d5f
  437d84:	xlat   BYTE PTR ds:[ebx]
  437d85:	xlat   BYTE PTR ds:[ebx]
  437d86:	jmp    0x437e00
  437d88:	test   al,0x88
  437d8a:	dec    eax
  437d8b:	(bad)  
  437d8c:	out    0xf7,eax
  437d8e:	iret   
  437d8f:	push   0x2b
  437d91:	push   eax
  437d92:	xchg   DWORD PTR [esi],esp
  437d94:	pushf  
  437d95:	xor    dh,0xf2
  437d98:	pop    edx
  437d99:	(bad)  
  437d9a:	cmp    bh,BYTE PTR [edi]
  437d9c:	jno    0x437d9b
  437d9e:	dec    DWORD PTR [eax-0xe097d96]
  437da4:	inc    edx
  437da5:	or     bh,BYTE PTR [ebx]
  437da7:	and    esi,DWORD PTR [edx-0x3]
  437daa:	push   esp
  437dac:	lock push ss
  437dae:	(bad)  
  437daf:	jl     0x437e21
  437db1:	mov    WORD PTR [ebx-0x75],?
  437db4:	mov    ecx,0x70888b0b
  437db9:	std    
  437dba:	push   ebx
  437dbc:	call   0x7bad4db8
  437dc1:	jne    0x437d48
  437dc3:	fiadd  WORD PTR [esi]
  437dc5:	or     ebp,DWORD PTR ds:0x14b48f3e
  437dcb:	outs   dx,BYTE PTR ds:[esi]
  437dcc:	mov    esp,0x9fe
  437dd1:	add    BYTE PTR [edx-0x1b4a1f7],al
  437dd7:	push   esp
  437dd8:	test   BYTE PTR [ecx],al
  437dda:	xor    esp,ecx
  437ddc:	(bad)  
  437ddd:	add    ecx,DWORD PTR [esi]
  437ddf:	sub    dh,BYTE PTR [ecx+0x1e]
  437de2:	jmp    0xe666:0xa88ee59d
  437de9:	inc    ebx
  437dea:	jne    0x437de7
  437dec:	out    dx,al
  437ded:	mov    WORD PTR [eax-0x1330a0be],?
  437df3:	in     al,dx
  437df4:	pop    ebp
  437df5:	adc    bl,ch
  437df7:	in     al,dx
  437df8:	outs   dx,DWORD PTR ds:[esi]
  437df9:	iret   
  437dfa:	(bad)  
  437dfb:	jno    0x437dea
  437dfd:	inc    ecx
  437dfe:	xor    bh,dh
  437e00:	inc    esi
  437e01:	xor    eax,0xbf5fecb3
  437e06:	out    0x91,al
  437e08:	xor    al,0x7c
  437e0a:	push   ss
  437e0b:	push   edx
  437e0c:	outs   dx,BYTE PTR ds:[esi]
  437e0d:	inc    ecx
  437e0e:	outs   dx,BYTE PTR ds:[esi]
  437e0f:	jecxz  0x437d93
  437e11:	mov    esi,0x3e765bc
  437e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e17:	push   0x75be4d6e
  437e1c:	outs   dx,BYTE PTR ds:[esi]
  437e1d:	(bad)  
  437e1e:	xchg   esp,eax
  437e1f:	(bad)  
  437e20:	sub    al,0x4c
  437e22:	push   0xf304541a
  437e27:	push   es
  437e28:	out    0x4,eax
  437e2a:	mov    edx,DWORD PTR [ebx-0x1c914515]
  437e30:	imul   BYTE PTR [ecx+ebp*4]
  437e33:	xor    DWORD PTR ds:0x8b,esp
  437e39:	mov    esp,0xc08d3edb
  437e3e:	pop    esi
  437e3f:	ins    BYTE PTR es:[edi],dx
  437e40:	into   
  437e41:	imul   ebx,DWORD PTR [esi+0x6f0e800],0x0
  437e48:	sbb    cl,bh
  437e4a:	mov    ecx,DWORD PTR [ebx+0x15]
  437e4d:	int3   
  437e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e4f:	je     0x437e41
  437e51:	ins    DWORD PTR es:[edi],dx
  437e52:	int    0xff
  437e54:	aaa    
  437e55:	iret   
  437e56:	mov    DWORD PTR [edi-0x3f76496c],edi
  437e5c:	jge    0x437e57
  437e5e:	xchg   ecx,eax
  437e5f:	js     0x437e5f
  437e61:	iret   
  437e62:	pop    ebp
  437e63:	std    
  437e64:	lock (bad) 
  437e66:	fs cs out dx,al
  437e69:	outs   dx,DWORD PTR ds:[esi]
  437e6a:	leave  
  437e6b:	out    0xeb,eax
  437e6d:	dec    eax
  437e6e:	pop    edi
  437e6f:	stc    
  437e70:	jmp    0x2d426765
  437e75:	sub    al,0xa9
  437e77:	xchg   DWORD PTR [ebx+ecx*4-0x27],ecx
  437e7b:	adc    al,0x2
  437e7d:	mov    esp,0x2c650958
  437e82:	pop    es
  437e83:	add    cl,ch
  437e85:	outs   dx,DWORD PTR ds:[esi]
  437e86:	shl    bh,1
  437e88:	fisub  WORD PTR [ebx-0x4d37aec]
  437e8e:	or     eax,0x8da0edb1
  437e93:	dec    ebx
  437e94:	xchg   ecx,eax
  437e95:	outs   dx,DWORD PTR ds:[esi]
  437e96:	push   esp
  437e97:	xor    eax,0x820e3b34
  437e9c:	int    0x0
  437e9e:	add    BYTE PTR [eax],al
  437ea0:	sub    ebx,DWORD PTR [esi-0x7]
  437ea3:	jb     0x437e3a
  437ea5:	push   eax
  437ea6:	sbb    eax,0xc3d8697e
  437eab:	mov    dl,0x85
  437ead:	cmp    al,0x9
  437eaf:	ins    DWORD PTR es:[edi],dx
  437eb0:	out    0x5d,eax
  437eb2:	stc    
  437eb3:	pop    esi
  437eb4:	add    eax,0x6fea733a
  437eb9:	sar    bl,0x62
  437ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437ebd:	je     0x437e44
  437ebf:	add    BYTE PTR [edi-0x27f37b30],bl
  437ec5:	nop
  437ec6:	inc    ebp
  437ec7:	lock ror DWORD PTR [ecx+esi*8+0x2b],1
  437ecc:	adc    DWORD PTR [eax+0x85afff9],esp
  437ed2:	test   DWORD PTR [ecx+eax*2],edx
  437ed5:	mov    ebx,0xf47f3bdf
  437eda:	push   0x1c
  437edc:	xchg   edi,eax
  437edd:	jae    0x437f2d
  437edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ee0:	and    eax,0xcd2b3697
  437ee5:	in     al,0xbf
  437ee7:	jle    0x437eff
  437ee9:	dec    edx
  437eea:	cmp    al,BYTE PTR [ebx-0x4004f634]
  437ef0:	shl    DWORD PTR ds:0x902172ed,1
  437ef6:	ins    DWORD PTR es:[edi],dx
  437ef7:	les    edx,FWORD PTR [ecx-0x307432cb]
  437efd:	adc    dh,BYTE PTR [edi+0x7da01]
  437f03:	rol    DWORD PTR [eax],cl
  437f05:	add    BYTE PTR [eax],al
  437f07:	lods   eax,DWORD PTR ds:[esi]
  437f08:	pop    es
  437f09:	iret   
  437f0a:	mov    DWORD PTR [edi],esp
  437f0c:	mov    ebx,0x877e5580
  437f11:	clc    
  437f12:	add    edi,ebp
  437f14:	adc    bh,BYTE PTR [ecx-0x6]
  437f17:	inc    BYTE PTR [edi]
  437f19:	add    BYTE PTR [eax],al
  437f1b:	jno    0x437f2c
  437f1d:	jnp    0x437f17
  437f1f:	enter  0x556,0x81
  437f23:	jo     0x437f5f
  437f25:	sti    
  437f26:	call   FWORD PTR [edx-0x754f84f4]
  437f2c:	pop    es
  437f2d:	add    BYTE PTR [ebx+0x146d8f4c],cl
  437f33:	add    DWORD PTR ds:0x90180c88,edx
  437f39:	push   es
  437f3a:	mov    dh,bl
  437f3c:	mov    ds:0xef1f8871,al
  437f41:	add    al,BYTE PTR [ebp-0x103926db]
  437f47:	sbb    BYTE PTR [ebx+eax*2],dh
  437f4a:	div    ecx
  437f4c:	out    0xbe,al
  437f4e:	xlat   BYTE PTR ds:[ebx]
  437f4f:	int    0xe6
  437f51:	mov    DWORD PTR [ecx-0x616090f],0xbe860444
  437f5b:	or     DWORD PTR [ecx],esi
  437f5d:	sub    eax,0xdaa2dc7
  437f62:	inc    eax
  437f63:	jnp    0x437f17
  437f65:	adc    al,0x62
  437f67:	jp     0x437f1b
  437f69:	jae    0x1c437f6f
  437f6f:	loope  0x437f44
  437f71:	test   BYTE PTR [esi-0x782a7fa3],bl
  437f77:	or     DWORD PTR [ebp+0x39103743],eax
  437f7d:	xor    eax,0xde995b6
  437f82:	push   0x3e85782a
  437f87:	inc    esp
  437f88:	xchg   BYTE PTR [edi],ch
  437f8a:	and    BYTE PTR [ebp-0x1724bc74],ah
  437f90:	mov    edi,0x8680680e
  437f95:	lds    edi,FWORD PTR [eax-0x4f]
  437f98:	dec    esi
  437f99:	call   0x8757b316
  437f9e:	out    dx,eax
  437f9f:	icebp  
  437fa0:	xchg   DWORD PTR [esi-0x4c],eax
  437fa3:	mov    eax,0x6ff30003
  437fa8:	dec    esi
  437fa9:	loopne 0x438019
  437fab:	test   eax,0x7f8300e9
  437fb0:	sub    DWORD PTR gs:[ebx+ebx*2+0x7b38377],0xffffffdb
  437fb9:	or     al,0x78
  437fbb:	iret   
  437fbc:	pop    ecx
  437fbd:	and    al,BYTE PTR [esi+eax*1-0x71b90fb1]
  437fc4:	mov    ah,0x4f
  437fc6:	jbe    0x437f94
  437fc8:	fimul  DWORD PTR [eax+0x3e77bf7]
  437fce:	repz push es
  437fd0:	call   0x437fe0
  437fd5:	outs   dx,BYTE PTR ds:[esi]
  437fd6:	int3   
  437fd7:	sub    cl,BYTE PTR [edx-0x2a3e0160]
  437fdd:	ins    DWORD PTR es:[edi],dx
  437fde:	add    eax,0x8da643d6
  437fe3:	or     al,0xd8
  437fe5:	ja     0x437fa9
  437fe7:	test   al,0xbb
  437fe9:	sub    al,0x62
  437feb:	out    0x3,eax
  437fed:	mov    esi,0x5fd8048d
  437ff2:	push   ebx
  437ff3:	repnz pop ds
  437ff5:	jmp    0x437feb
  437ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437ff8:	add    edi,DWORD PTR [edi]
  437ffa:	push   ebx
  437ffb:	outs   dx,BYTE PTR ds:[esi]
  437ffc:	inc    edx
  437ffd:	inc    esi
  437ffe:	ja     0x43804f
  438000:	in     al,dx
  438001:	stos   DWORD PTR es:[edi],eax
  438002:	(bad)
  438005:	push   ebp
  438006:	pop    es
  438007:	out    0x3,eax
  438009:	repz mov dh,0x6d
  43800c:	rcl    BYTE PTR [eax],0xf7
  43800f:	outs   dx,DWORD PTR ds:[esi]
  438010:	call   0xe8a77725
  438015:	adc    bh,dh
  438017:	std    
  438018:	arpl   WORD PTR [esi],di
  43801a:	mov    ecx,0x5f308939
  43801f:	jo     0x438000
  438021:	aam    0xb6
  438023:	pop    ebp
  438024:	mov    edi,0x782449b8
  438029:	stos   BYTE PTR es:[edi],al
  43802a:	popa   
  43802b:	xor    BYTE PTR [ebp+0x6c],0xcb
  43802f:	jle    0x437fb8
  438031:	xor    BYTE PTR [edi+0x0],dl
  438034:	or     eax,0xe9000652
  438039:	add    BYTE PTR [eax],al
  43803b:	add    al,dh
  43803d:	mov    ds:0xeb00b485,eax
  438042:	xchg   ah,ch
  438044:	lock push es
  438046:	add    cl,ch
  438048:	cdq    
  438049:	mov    esi,0xd1b9b259
  43804e:	mov    esp,0x11ef0446
  438053:	test   eax,0x9acc52f0
  438058:	mov    al,BYTE PTR es:[ebp+eax*1-0x11]
  43805d:	or     eax,eax
  43805f:	pushf  
  438060:	call   0xed08ccf0
  438065:	mov    eax,DWORD PTR [ebp+ecx*8-0x20]
  438069:	xor    ecx,esi
  43806b:	push   ss
  43806c:	mov    al,ds:0x3372d88b
  438071:	and    eax,0x8ba1f60c
  438076:	int    0x2
  438078:	xor    BYTE PTR [edx+0x252b62c8],cl
  43807e:	adc    al,0x72
  438080:	xor    al,0x25
  438082:	adc    BYTE PTR [edx+0x3c],dh
  438085:	and    eax,0x5189b80c
  43808a:	aad    0xb8
  43808c:	pop    edx
  43808d:	push   eax
  43808e:	fdiv   st,st(2)
  438090:	cmp    esp,edx
  438092:	repz mov dh,0x63
  438095:	mov    dh,al
  438097:	mov    esi,0x621824b4
  43809c:	cmp    BYTE PTR [edx+0xcd44],cl
  4380a2:	add    ah,dh
  4380a4:	push   ebp
  4380a5:	loop   0x438091
  4380a7:	and    ecx,esi
  4380a9:	or     edx,edx
  4380ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4380ac:	and    al,0x10
  4380ae:	push   ss
  4380af:	push   eax
  4380b1:	add    BYTE PTR [eax],al
  4380b3:	mov    cl,0xa0
  4380b5:	sbb    eax,0x4605a40c
  4380ba:	xor    edi,DWORD PTR [eax-0x71]
  4380bd:	mov    esi,0xfc4e15e
  4380c2:	add    BYTE PTR [ebx+ebx*8],cl
  4380c5:	idiv   bh
  4380c7:	mov    al,BYTE PTR [eax+eax*1]
  4380ca:	add    dl,al
  4380cc:	(bad)  
  4380ce:	call   FWORD PTR [edx+0x4]
  4380d1:	add    BYTE PTR [eax],al
  4380d3:	lods   al,BYTE PTR ds:[esi]
  4380d4:	(bad)  
  4380d6:	jmp    DWORD PTR [eax+0x5]
  4380d9:	cmp    eax,DWORD PTR [eax]
  4380db:	cmp    al,0x5
  4380dd:	cmp    eax,DWORD PTR [eax]
  4380df:	pop    edx
  4380e0:	add    al,0x0
  4380e2:	add    BYTE PTR ds:0xaffff6db,cl
  4380e8:	sar    BYTE PTR [ecx],1
  4380ea:	add    BYTE PTR [ebx+0x1a0039d0],bl
  4380f0:	add    al,0x0
  4380f2:	add    ch,ch
  4380f4:	(bad)  
  4380f6:	call   FWORD PTR [ebx-0x2f]
  4380f9:	cmp    DWORD PTR [eax],eax
  4380fb:	push   edi
  4380fc:	sar    DWORD PTR [ecx],1
  4380fe:	add    BYTE PTR [edx],bl
  438100:	add    al,0x0
  438102:	add    BYTE PTR ds:0xfff6d4,cl
  438108:	add    BYTE PTR [eax],al
  43810a:	ss mov eax,0xb8320039
  438110:	cmp    DWORD PTR [eax],eax
  438112:	fiadd  DWORD PTR [ebx]
  438114:	add    BYTE PTR [eax],al
  438116:	lods   eax,DWORD PTR ds:[esi]
  438117:	shl    esi,cl
  438119:	(bad)  
  43811a:	mov    ebx,0xb70039b8
  43811f:	mov    eax,0x3da0039
  438124:	add    BYTE PTR [eax],al
  438126:	(bad)  
  438127:	shl    esi,cl
  438129:	call   FWORD PTR [edx]
  43812b:	inc    esp
  43812c:	cmp    al,BYTE PTR [eax]
  43812e:	repz sar DWORD PTR [esi+edi*1-0x2920d],0xf3
  438137:	mov    BYTE PTR [ebp-0x7],ch
  43813a:	pushf  
  43813b:	ror    DWORD PTR [edx+0x40],0xf3
  43813f:	int    0x4a
  438141:	inc    eax
  438142:	rep ins DWORD PTR es:[edi],dx
  438144:	std    
  438145:	push   ebx
  438147:	call   0x43c07ab8
  43814c:	dec    esp
  43814d:	inc    eax
  43814e:	repz xchg edi,eax
  438150:	dec    esp
  438151:	inc    eax
  438152:	rep ins DWORD PTR es:[edi],dx
  438154:	std    
  438155:	push   ebx
  438157:	enter  0xf96c,0x5c
  43815b:	jg     0x43810b
  43815d:	ds repz dec ebx
  438160:	scas   al,BYTE PTR es:[edi]
  438161:	ds rep ins DWORD PTR es:[edi],dx
  438164:	std    
  438165:	push   ebx
  438167:	sub    BYTE PTR [ebp-0x7],ch
  43816a:	cmp    al,0xdc
  43816c:	push   edi
  43816d:	add    BYTE PTR ds:[eax],al
  438170:	add    bl,dh
  438172:	loopne 0x4381cb
  438174:	ds rep ins DWORD PTR es:[edi],dx
  438177:	std    
  438178:	push   ebx
  43817a:	or     BYTE PTR [ebp-0x7],ch
  43817d:	sbb    al,0x1e
  43817f:	xchg   ebx,eax
  438180:	repz and dl,BYTE PTR ds:[ebx-0x2920cc2]
  438188:	push   ebx
  43818a:	push   0xcbfcf96e
  43818f:	xchg   ebx,eax
  438190:	repz rcl BYTE PTR ds:[ebx-0x2900cc2],1
  438198:	push   ebx
  43819a:	outs   dx,DWORD PTR ds:[esi]
  43819b:	std    
  43819c:	push   ebx
  43819e:	outs   dx,DWORD PTR ds:[esi]
  43819f:	std    
  4381a0:	push   ebx
  4381a2:	cli    
  4381a3:	sub    ah,0x14
  4381a6:	out    0x67,eax
  4381a8:	dec    edi
  4381a9:	and    DWORD PTR [edi],eax
  4381ab:	cmp    DWORD PTR [ebx+esi*2-0x9],ebx
  4381af:	out    0x3,al
  4381b1:	push   ebx
  4381b2:	clc    
  4381b3:	out    0x3,al
  4381b5:	dec    edi
  4381b6:	clc    
  4381b7:	out    0x3,al
  4381b9:	dec    ebx
  4381ba:	clc    
  4381bb:	out    0x3,al
  4381bd:	inc    edi
  4381be:	clc    
  4381bf:	out    0x3,al
  4381c1:	psubb  mm4,mm6
  4381c4:	add    ebp,DWORD PTR [edi-0x8]
  4381c7:	out    0x3,al
  4381c9:	jnp    0x4381c3
  4381cb:	out    0x3,al
  4381cd:	ja     0x4381c7
  4381cf:	out    0x3,al
  4381d1:	xor    edi,eax
  4381d3:	out    0x3,al
  4381d5:	add    BYTE PTR [eax],al
  4381d7:	add    BYTE PTR [edi],ch
  4381d9:	clc    
  4381da:	out    0x3,al
  4381dc:	sub    edi,eax
  4381de:	out    0x3,al
  4381e0:	daa    
  4381e1:	clc    
  4381e2:	out    0x3,al
  4381e4:	scas   eax,DWORD PTR es:[edi]
  4381e5:	mul    esi
  4381e7:	add    ecx,edi
  4381e9:	mul    esi
  4381eb:	add    ebx,ebx
  4381ed:	mul    esi
  4381ef:	add    eax,DWORD PTR [ecx+eax*1]
  4381f2:	out    0x3,eax
  4381f4:	adc    edi,eax
  4381f6:	out    0x3,al
  4381f8:	psubb  mm4,mm6
  4381fb:	add    ecx,DWORD PTR [ebx]
  4381fd:	clc    
  4381fe:	out    0x3,al
  438200:	pop    es
  438201:	clc    
  438202:	out    0x3,al
  438204:	iret   
  438205:	mul    esi
  438207:	add    ebp,DWORD PTR [edi-0x44fc1909]
  43820d:	mul    esi
  43820f:	add    esi,DWORD PTR [edi-0xcfc1909]
  438215:	mul    esi
  438217:	add    ebp,edi
  438219:	mul    dh
  43821b:	add    ebp,ebx
  43821d:	mul    dh
  43821f:	add    esp,edi
  438221:	mul    dh
  438223:	add    ebp,edi
  438225:	idiv   edi
  438227:	call   0xe9529d1c
  43822c:	lock cs psubsw mm6,mm0
  438231:	and    cl,BYTE PTR [edi]
  438233:	jmp    0xe953e928
  438238:	lock cmp dl,BYTE PTR [eax]
  43823b:	jmp    0xf0438240
  438240:	ds adc cl,ch
  438243:	lock xor dl,BYTE PTR [eax]
  438246:	jmp    0xe953e53b
  43824b:	lock cli 
  43824d:	push   cs
  43824e:	jmp    0xe9532b43
  438253:	lock add cl,BYTE PTR [edi]
  438256:	jmp    0xe953c94b
  43825b:	lock call 0xe910:0x9ef0e910
  438263:	lock xchg edx,eax
  438265:	adc    cl,ch
  438267:	lock inc edx
  438269:	adc    cl,ch
  43826b:	lock pop edx
  43826d:	adc    cl,ch
  43826f:	lock mov BYTE PTR [edi],cl
  438272:	jmp    0xe953e567
  438277:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438279:	adc    cl,ch
  43827b:	lock jp 0x43828e
  43827e:	jmp    0xe9540173
  438283:	lock jb 0x438296
  438286:	jmp    0xe954257b
  43828b:	lock cmp dl,BYTE PTR [eax]
  43828e:	jmp    0xe9526b83
  438293:	lock inc edx
  438295:	adc    cl,ch
  438297:	lock xchg BYTE PTR [eax],dl
  43829a:	jmp    0xe9535d8f
  43829f:	lock fimul WORD PTR [edi]
  4382a2:	add    BYTE PTR [eax],al
  4382a4:	add    BYTE PTR [eax],al
  4382a6:	retf   0x7408
  4382a9:	adc    dl,cl
  4382ab:	or     BYTE PTR [eax+edx*1+0x10bc08da],al
  4382b2:	fimul  DWORD PTR [eax]
  4382b4:	ds adc edx,ecx
  4382b7:	or     BYTE PTR [eax+edx*1+0x111008ca],ah
  4382be:	call   0x808:0x9a110c08
  4382c5:	adc    DWORD PTR [edx-0x75eefbf8],ecx
  4382cb:	or     BYTE PTR [eax],al
  4382cd:	adc    DWORD PTR [edx-0x65ef03f8],ebx
  4382d3:	or     al,bh
  4382d5:	adc    BYTE PTR [edx-0x75ef0bf8],cl
  4382db:	or     ah,al
  4382dd:	adc    BYTE PTR [edx+0x8],bl
  4382e0:	rcl    BYTE PTR [eax],0x5a
  4382e3:	or     BYTE PTR [eax+edx*1+0x10b8084a],bh
  4382ea:	dec    edx
  4382eb:	or     BYTE PTR [eax+edx*1+0x10b0085a],dh
  4382f2:	pop    edx
  4382f3:	or     BYTE PTR [eax+edx*1+0x10a8084a],ch
  4382fa:	dec    edx
  4382fb:	or     BYTE PTR [eax],dh
  4382fd:	adc    BYTE PTR [edx],bl
  4382ff:	or     BYTE PTR [eax+edx*1],ch
  438302:	sbb    cl,BYTE PTR [eax]
  438304:	sub    BYTE PTR [eax],dl
  438306:	or     cl,BYTE PTR [eax]
  438308:	and    al,0x10
  43830a:	add    BYTE PTR [eax],al
  43830c:	add    BYTE PTR [edx],cl
  43830e:	or     BYTE PTR [eax],ah
  438310:	adc    BYTE PTR [edx],bl
  438312:	or     BYTE PTR [eax+edx*1],bl
  438315:	sbb    cl,BYTE PTR [eax]
  438317:	sbb    BYTE PTR [eax],dl
  438319:	or     cl,BYTE PTR [eax]
  43831b:	adc    al,0x10
  43831d:	or     cl,BYTE PTR [eax]
  43831f:	adc    BYTE PTR [eax],dl
  438321:	rep ins DWORD PTR es:[edi],dx
  438323:	std    
  438324:	or     eax,DWORD PTR [ebx]
  438326:	outs   dx,BYTE PTR ds:[esi]
  438327:	std    
  438328:	pop    es
  438329:	add    ebp,DWORD PTR [esi-0x3]
  43832c:	add    eax,DWORD PTR [ebx]
  43832e:	outs   dx,BYTE PTR ds:[esi]
  43832f:	std    
  438330:	jmp    ebx
  438332:	ins    DWORD PTR es:[edi],dx
  438333:	std    
  438334:	sti    
  438335:	hlt    
  438336:	ins    DWORD PTR es:[edi],dx
  438337:	std    
  438338:	imul   esp
  43833a:	ins    DWORD PTR es:[edi],dx
  43833b:	std    
  43833c:	repz in al,0x6d
  43833f:	std    
  438340:	out    dx,eax
  438341:	cld    
  438342:	ins    DWORD PTR es:[edi],dx
  438343:	std    
  438344:	jmp    0x43833a
  438346:	ins    DWORD PTR es:[edi],dx
  438347:	std    
  438348:	or     DWORD PTR [edx],eax
  43834a:	outs   dx,BYTE PTR ds:[esi]
  43834b:	std    
  43834c:	shl    esp,cl
  43834e:	ins    DWORD PTR es:[edi],dx
  43834f:	std    
  438350:	test   eax,0xa5fd6de3
  438355:	jecxz  0x4383c4
  438357:	std    
  438358:	mov    eax,0xebfd6de4
  43835d:	fsubr  QWORD PTR [ebp-0x3]
  438360:	inc    BYTE PTR [edx]
  438362:	outs   dx,BYTE PTR ds:[esi]
  438363:	std    
  438364:	mov    ds:0xcbfd6e02,eax
  438369:	in     al,dx
  43836a:	ins    DWORD PTR es:[edi],dx
  43836b:	std    
  43836c:	sub    BYTE PTR [ebx],al
  43836e:	outs   dx,BYTE PTR ds:[esi]
  43836f:	std    
  438370:	mov    edi,0xfc000000
  438375:	ins    DWORD PTR es:[edi],dx
  438376:	std    
  438377:	mov    ebx,0xb7fd6df4
  43837c:	in     al,dx
  43837d:	ins    DWORD PTR es:[edi],dx
  43837e:	std    
  43837f:	mov    bl,0xe4
  438381:	ins    DWORD PTR es:[edi],dx
  438382:	std    
  438383:	mov    bl,0xfc
  438385:	ins    DWORD PTR es:[edi],dx
  438386:	std    
  438387:	scas   eax,DWORD PTR es:[edi]
  438388:	hlt    
  438389:	ins    DWORD PTR es:[edi],dx
  43838a:	std    
  43838b:	stos   DWORD PTR es:[edi],eax
  43838c:	in     al,dx
  43838d:	ins    DWORD PTR es:[edi],dx
  43838e:	std    
  43838f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438390:	in     al,0x6d
  438392:	std    
  438393:	mov    ds:0x9ffd6dfc,eax
  438398:	hlt    
  438399:	ins    DWORD PTR es:[edi],dx
  43839a:	std    
  43839b:	fwait
  43839c:	in     al,dx
  43839d:	push   es
  43839e:	out    0x3,eax
  4383a0:	pop    ebx
  4383a1:	or     esp,edi
  4383a3:	add    eax,DWORD PTR [edi-0x7cfc18f6]
  4383a9:	or     ah,bh
  4383ab:	add    ebp,DWORD PTR [edi+0xa]
  4383ae:	out    0x3,eax
  4383b0:	imul   ecx,DWORD PTR [edx],0xffffffe7
  4383b3:	add    esi,DWORD PTR [edi+0xa]
  4383b6:	out    0x3,eax
  4383b8:	jae    0x4383c4
  4383ba:	out    0x3,eax
  4383bc:	aas    
  4383bd:	or     ah,bh
  4383bf:	add    edi,DWORD PTR [ebx]
  4383c1:	or     ah,bh
  4383c3:	add    eax,esi
  4383c5:	or     ah,bh
  4383c7:	add    edx,DWORD PTR [ecx-0x50fc1908]
  4383cd:	clc    
  4383ce:	out    0x3,al
  4383d0:	stos   BYTE PTR es:[edi],al
  4383d1:	or     ah,bh
  4383d3:	add    esp,DWORD PTR [ebx]
  4383d5:	or     ah,bh
  4383d7:	add    eax,DWORD PTR [eax]
  4383d9:	add    BYTE PTR [eax],al
  4383db:	aaa    
  4383dc:	or     ah,bh
  4383de:	add    ebp,DWORD PTR [ebx]
  4383e0:	or     ah,bh
  4383e2:	add    ebp,DWORD PTR [edi]
  4383e4:	or     ah,bh
  4383e6:	add    esi,DWORD PTR [ebx+0x2703e709]
  4383ec:	or     ah,bh
  4383ee:	add    ebx,DWORD PTR [ebx]
  4383f0:	or     ah,bh
  4383f2:	add    ebx,DWORD PTR [edi]
  4383f4:	or     ah,bh
  4383f6:	add    eax,DWORD PTR [ebx]
  4383f8:	or     ah,bh
  4383fa:	add    edx,DWORD PTR [edi]
  4383fc:	or     ah,bh
  4383fe:	add    ecx,DWORD PTR [ebx]
  438400:	or     ah,bh
  438402:	add    ebp,DWORD PTR [ecx-0x1cfc1909]
  438408:	or     edi,esp
  43840a:	add    edx,edi
  43840c:	or     edi,esp
  43840e:	add    ecx,ebx
  438410:	or     edi,esp
  438412:	add    ecx,edi
  438414:	or     edi,esp
  438416:	add    edx,ebx
  438418:	or     DWORD PTR [eax],eax
  43841a:	jmp    0xe94c7f0f
  43841f:	lock dec BYTE PTR [eax]
  438422:	jmp    0xe94c7717
  438427:	lock test BYTE PTR [eax],0xe9
  43842b:	lock or cl,BYTE PTR [ecx]
  43842e:	jmp    0xe9542023
  438433:	lock add cl,BYTE PTR [ecx]
  438436:	jmp    0xe94c8b2b
  43843b:	lock pop edx
  43843d:	or     ch,cl
  43843f:	add    BYTE PTR [eax],al
  438441:	add    al,dh
  438443:	pop    esi
  438444:	or     ch,cl
  438446:	lock push edx
  438448:	or     ch,cl
  43844a:	lock ret 0xe90f
  43844e:	lock mov dh,0xf
  438451:	jmp    0xe9539f46
  438456:	lock into 
  438458:	psubsw mm6,mm0
  43845b:	data16 or ch,cl
  43845e:	lock cmp cl,BYTE PTR [edx]
  438461:	jmp    0xe94dc356
  438466:	lock xor cl,BYTE PTR [edx]
  438469:	jmp    0xe94db75e
  43846e:	lock or cl,BYTE PTR [ecx]
  438471:	jmp    0xe94dd366
  438476:	lock inc edx
  438478:	or     ch,cl
  43847a:	lock inc esi
  43847c:	or     ch,cl
  43847e:	lock call 0xe90a:0x9ef0e90a
  438486:	lock xchg edx,eax
  438488:	or     ch,cl
  43848a:	lock xchg edx,eax
  43848c:	or     ch,cl
  43848e:	lock xchg esi,eax
  438490:	or     ch,cl
  438492:	lock stos BYTE PTR es:[edi],al
  438494:	or     al,BYTE PTR [eax]
  438496:	or     al,BYTE PTR ds:0x51a0ea8
  43849c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43849d:	push   cs
  43849e:	sbb    al,BYTE PTR ds:0x50a0ea0
  4384a4:	pushf  
  4384a5:	push   cs
  4384a6:	add    BYTE PTR [eax],al
  4384a8:	add    BYTE PTR [edx],cl
  4384aa:	add    eax,0x4da0e98
  4384af:	loopne 0x4384bf
  4384b1:	fiadd  DWORD PTR [esp+ebx*8]
  4384b4:	push   cs
  4384b5:	retf   0xd804
  4384b8:	push   cs
  4384b9:	retf   0xd404
  4384bc:	push   cs
  4384bd:	fiadd  DWORD PTR [eax+edx*8]
  4384c0:	push   cs
  4384c1:	fiadd  DWORD PTR [esp+ecx*8]
  4384c4:	push   cs
  4384c5:	retf   0xc804
  4384c8:	push   cs
  4384c9:	retf   0xc404
  4384cc:	push   cs
  4384cd:	call   0xcf04:0x9a0ed304
  4384d4:	push   cs
  4384d5:	mov    al,BYTE PTR [edi+ebp*4]
  4384d8:	jp     0x9a51e8e2
  4384de:	add    al,0x7e
  4384e0:	setp   BYTE PTR [edx+edi*2]
  4384e4:	jp     0x8a523fee
  4384ea:	add    al,0x3d
  4384ec:	cvtps2pd xmm0,QWORD PTR [esp+ebp*2]
  4384f0:	cvtps2pd xmm0,QWORD PTR [esp+ecx*2]
  4384f4:	push   cs
  4384f5:	dec    edx
  4384f6:	add    al,0x8f
  4384f8:	cmovp  eax,DWORD PTR [esp+eax*2]
  4384fc:	push   cs
  4384fd:	pop    edx
  4384fe:	add    al,0x40
  438500:	push   cs
  438501:	pop    edx
  438502:	add    al,0x40
  438504:	push   cs
  438505:	dec    edx
  438506:	add    al,0x68
  438508:	push   cs
  438509:	dec    edx
  43850a:	add    al,0x34
  43850c:	push   cs
  43850d:	add    BYTE PTR [eax],al
  43850f:	add    BYTE PTR [edx],bl
  438511:	add    al,0x20
  438513:	push   cs
  438514:	rep ins DWORD PTR es:[edi],dx
  438516:	std    
  438517:	sbb    ebp,ebp
  438519:	ins    DWORD PTR es:[edi],dx
  43851a:	std    
  43851b:	pop    ss
  43851c:	in     eax,0x6d
  43851e:	std    
  43851f:	adc    edi,ebp
  438521:	ins    DWORD PTR es:[edi],dx
  438522:	std    
  438523:	and    al,0xf4
  438525:	ins    DWORD PTR es:[edi],dx
  438526:	std    
  438527:	and    ah,ch
  438529:	ins    DWORD PTR es:[edi],dx
  43852a:	std    
  43852b:	pop    ss
  43852c:	in     eax,0x6d
  43852e:	std    
  43852f:	adc    edi,ebp
  438531:	ins    DWORD PTR es:[edi],dx
  438532:	std    
  438533:	test   esp,edi
  438535:	ins    DWORD PTR es:[edi],dx
  438536:	std    
  438537:	mov    ebx,0x4efd6e04
  43853c:	sti    
  43853d:	ins    DWORD PTR es:[edi],dx
  43853e:	std    
  43853f:	test   al,0xeb
  438541:	ins    DWORD PTR es:[edi],dx
  438542:	std    
  438543:	and    eax,0x77fd6dea
  438548:	fisubr DWORD PTR [ebp-0x3]
  43854b:	(bad)  
  43854d:	ins    DWORD PTR es:[edi],dx
  43854e:	std    
  43854f:	or     DWORD PTR cs:[esi-0x3],ebp
  438553:	repz imul BYTE PTR [ebp-0x3]
  438557:	out    dx,eax
  438558:	out    dx,al
  438559:	ins    DWORD PTR es:[edi],dx
  43855a:	std    
  43855b:	jmp    0x438543
  43855d:	ins    DWORD PTR es:[edi],dx
  43855e:	std    
  43855f:	out    0xfe,eax
  438561:	ins    DWORD PTR es:[edi],dx
  438562:	std    
  438563:	jecxz  0x43855b
  438565:	ins    DWORD PTR es:[edi],dx
  438566:	std    
  438567:	fucomip st,st(6)
  438569:	ins    DWORD PTR es:[edi],dx
  43856a:	std    
  43856b:	(bad)  
  43856d:	ins    DWORD PTR es:[edi],dx
  43856e:	std    
  43856f:	xlat   BYTE PTR ds:[ebx]
  438570:	(bad)  
  438571:	ins    DWORD PTR es:[edi],dx
  438572:	std    
  438573:	sldt   WORD PTR [eax]
  438576:	add    ch,dh
  438578:	ins    DWORD PTR es:[edi],dx
  438579:	std    
  43857a:	or     ebp,ebp
  43857c:	ins    DWORD PTR es:[edi],dx
  43857d:	std    
  43857e:	shl    esp,0x6d
  438581:	std    
  438582:	(bad)  
  438583:	(bad)  
  438584:	ins    DWORD PTR es:[edi],dx
  438585:	std    
  438586:	mov    edi,0xbbfd6df6
  43858b:	out    dx,al
  43858c:	ins    DWORD PTR es:[edi],dx
  43858d:	std    
  43858e:	mov    bh,0xe6
  438590:	push   es
  438591:	out    0x3,eax
  438593:	addr16 or edi,esp
  438596:	add    ebp,DWORD PTR [ecx+0x4f03e708]
  43859c:	or     edi,esp
  43859e:	add    eax,DWORD PTR [esi]
  4385a0:	icebp  
  4385a1:	out    0x3,al
  4385a3:	shl    eax,0xe6
  4385a6:	add    edx,DWORD PTR [ebx+0x9]
  4385a9:	out    0x3,eax
  4385ab:	pop    edi
  4385ac:	or     edi,esp
  4385ae:	add    eax,edi
  4385b0:	mul    dh
  4385b2:	add    eax,DWORD PTR [ebp-0x9]
  4385b5:	out    0x3,al
  4385b7:	add    DWORD PTR [edi+eiz*8],0x3
  4385bb:	outs   dx,DWORD PTR ds:[esi]
  4385bc:	add    al,0xe7
  4385be:	add    ebp,DWORD PTR [ebx+0x4]
  4385c1:	out    0x3,eax
  4385c3:	ja     0x4385c9
  4385c5:	out    0x3,eax
  4385c7:	jae    0x4385cd
  4385c9:	out    0x3,eax
  4385cb:	aas    
  4385cc:	add    al,0xe7
  4385ce:	add    ecx,DWORD PTR [ebx-0x4ffc1909]
  4385d4:	mul    esi
  4385d6:	add    eax,ebp
  4385d8:	mul    esi
  4385da:	add    eax,DWORD PTR [eax]
  4385dc:	add    BYTE PTR [eax],al
  4385de:	call   0xe704:0x3b03e6f7
  4385e5:	add    esp,DWORD PTR [edi]
  4385e7:	add    al,0xe7
  4385e9:	add    ecx,DWORD PTR [ecx+0x6]
  4385ec:	out    0x3,eax
  4385ee:	pop    ds
  4385ef:	add    al,0xe7
  4385f1:	add    ebx,DWORD PTR [ebx]
  4385f3:	add    al,0xe7
  4385f5:	add    eax,edi
  4385f7:	add    esp,edi
  4385f9:	add    eax,ebx
  4385fb:	add    esp,edi
  4385fd:	add    ebp,DWORD PTR [edi-0x6efc18fd]
  438603:	push   es
  438604:	out    0x3,eax
  438606:	mov    bh,0x3
  438608:	out    0x3,eax
  43860a:	imul   eax,DWORD PTR [esi],0x22f0e900
  438610:	or     ebp,ecx
  438612:	lock push cs
  438614:	or     ebp,ecx
  438616:	lock test BYTE PTR [ecx],cl
  438619:	jmp    0xe94ead0e
  43861e:	lock repnz or ch,cl
  438622:	lock out dx,al
  438624:	or     ch,cl
  438626:	lock cli 
  438628:	or     ch,cl
  43862a:	lock test BYTE PTR [edx],0xe9
  43862e:	lock add cl,BYTE PTR [ebx]
  438631:	jmp    0xe94e8526
  438636:	lock or cl,BYTE PTR [ebx]
  438639:	jmp    0xe958102e
  43863e:	lock push edx
  438640:	or     al,0xe9
  438642:	add    BYTE PTR [eax],al
  438644:	add    al,dh
  438646:	dec    esi
  438647:	or     al,0xe9
  438649:	lock pop edx
  43864b:	or     al,0xe9
  43864d:	lock push esi
  43864f:	or     al,0xe9
  438651:	lock bound ecx,QWORD PTR [ecx+ebp*8]
  438655:	lock pop esi
  438657:	or     al,0xe9
  438659:	lock push 0xc
  43865c:	jmp    0xe94da551
  438661:	lock sub cl,BYTE PTR [edx]
  438664:	jmp    0xe94dad59
  438669:	lock repnz or ecx,ebp
  43866d:	lock adc BYTE PTR [ecx],cl
  438670:	jmp    0xe94ca365
  438675:	lock sbb BYTE PTR [ecx],cl
  438678:	jmp    0xe94cab6d
  43867d:	lock inc esi
  43867f:	or     al,0xe9
  438681:	lock xchg edx,eax
  438683:	or     al,0xe9
  438685:	lock mov cs,WORD PTR [eax+eax*1]
  438689:	pop    edx
  43868a:	or     DWORD PTR [esp+ecx*1+0xcb0095a],esi
  438691:	dec    edx
  438692:	or     DWORD PTR [esp+ecx*1+0xca8094a],ebp
  438699:	sbb    cl,BYTE PTR [ecx]
  43869b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43869c:	or     al,0x1a
  43869e:	or     DWORD PTR [eax-0x53f6f5f4],esi
  4386a4:	or     al,0xa
  4386a6:	or     DWORD PTR [eax+0xc],ebp
  4386ac:	sbb    cl,BYTE PTR [ecx]
  4386ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4386af:	or     al,0x1a
  4386b1:	or     DWORD PTR [eax-0x63f6f5f4],esp
  4386b7:	or     al,0xa
  4386b9:	or     esi,ebp
  4386bb:	push   cs
  4386bc:	fimul  DWORD PTR [eax]
  4386be:	jmp    0xca15:0xbc08da0e
  4386c5:	or     dl,ah
  4386c7:	push   cs
  4386c8:	retf   0xd308
  4386cb:	adc    eax,0xeda08da
  4386d0:	fimul  DWORD PTR [eax]
  4386d2:	(bad)  
  4386d3:	push   cs
  4386d4:	retf   0xd208
  4386d7:	push   cs
  4386d8:	retf   0xce08
  4386db:	push   cs
  4386dc:	call   0x6008:0x9a0eca08
  4386e3:	or     al,0x8a
  4386e5:	or     BYTE PTR [esp+ecx*1-0x76],bl
  4386e9:	or     BYTE PTR [eax+0xc],bl
  4386ec:	call   0x5008:0x9a0c5408
  4386f3:	or     al,0x8a
  4386f5:	or     BYTE PTR [esp+ecx*1-0x76],cl
  4386f9:	or     BYTE PTR [eax+0xc],cl
  4386fc:	pop    edx
  4386fd:	or     BYTE PTR [esp+ecx*1+0x5a],al
  438701:	or     BYTE PTR [eax+0xc],al
  438704:	repz pop ebp
  438706:	std    
  438707:	cmp    esp,edi
  438709:	pop    ebp
  43870a:	std    
  43870b:	aaa    
  43870c:	call   FWORD PTR [ebp-0x3]
  43870f:	xor    eax,DWORD PTR [eax]
  438711:	add    BYTE PTR [eax],al
  438713:	neg    DWORD PTR [ebp-0x3]
  438716:	das    
  438717:	out    dx,eax
  438718:	pop    ebp
  438719:	std    
  43871a:	sub    esp,edi
  43871c:	pop    ebp
  43871d:	std    
  43871e:	daa    
  43871f:	call   FWORD PTR [ebp-0x3]
  438722:	and    esi,edi
  438724:	pop    ebp
  438725:	std    
  438726:	pop    ds
  438727:	out    dx,eax
  438728:	pop    ebp
  438729:	std    
  43872a:	sbb    esp,edi
  43872c:	pop    ebp
  43872d:	std    
  43872e:	pop    ss
  43872f:	call   FWORD PTR [ebp-0x3]
  438732:	adc    esi,edi
  438734:	pop    ebp
  438735:	std    
  438736:	pxor   mm3,QWORD PTR [ebp-0x3]
  43873a:	or     esp,edi
  43873c:	pop    ebp
  43873d:	std    
  43873e:	pop    es
  43873f:	call   FWORD PTR [ebp-0x3]
  438742:	add    esi,edi
  438744:	pop    ebp
  438745:	std    
  438746:	(bad)  
  438747:	out    dx,eax
  438748:	pop    ebp
  438749:	std    
  43874a:	sti    
  43874b:	call   0xf93b84ad
  438750:	pop    ebp
  438751:	std    
  438752:	repz clc 
  438754:	pop    ebp
  438755:	std    
  438756:	out    dx,eax
  438757:	call   0xe92f84b9
  43875c:	pop    ebp
  43875d:	std    
  43875e:	out    0xf8,eax
  438760:	pop    ebp
  438761:	std    
  438762:	jecxz  0x43875c
  438764:	pop    ebp
  438765:	std    
  438766:	fucomip st,st(0)
  438768:	pop    ebp
  438769:	std    
  43876a:	fucomi st,st(0)
  43876c:	pop    ebp
  43876d:	std    
  43876e:	xlat   BYTE PTR ds:[ebx]
  43876f:	clc    
  438770:	pop    ebp
  438771:	std    
  438772:	sar    eax,cl
  438774:	pop    ebp
  438775:	std    
  438776:	iret   
  438777:	add    BYTE PTR [eax],al
  438779:	add    al,ch
  43877b:	pop    ebp
  43877c:	std    
  43877d:	retf   
  43877e:	call   0xf90b84e0
  438783:	push   es
  438784:	out    0x3,eax
  438786:	das    
  438787:	jmp    esi
  438789:	add    esi,DWORD PTR [ebx]
  43878b:	jmp    esi
  43878d:	add    edx,DWORD PTR [edi-0x74fc1901]
  438793:	jmp    esi
  438795:	add    edi,DWORD PTR [edi-0x1]
  438798:	out    0x3,al
  43879a:	xor    al,0xff
  43879c:	out    0x3,al
  43879e:	xor    bh,bh
  4387a0:	out    0x3,al
  4387a2:	pop    ebx
  4387a3:	jmp    esi
  4387a5:	add    ecx,DWORD PTR [edi-0x1]
  4387a8:	out    0x3,al
  4387aa:	push   ebx
  4387ab:	jmp    esi
  4387ad:	add    ebp,DWORD PTR [ecx-0xa]
  4387b0:	out    0x3,al
  4387b2:	loopne 0x4387a9
  4387b4:	out    0x3,al
  4387b6:	addr16 cmc 
  4387b8:	out    0x3,al
  4387ba:	arpl   di,di
  4387bc:	out    0x3,al
  4387be:	addr16 jmp esi
  4387c1:	add    edi,DWORD PTR [ebx-0x2]
  4387c4:	out    0x3,al
  4387c6:	jg     0x4387c6
  4387c8:	out    0x3,al
  4387ca:	jae    0x4387ca
  4387cc:	out    0x3,al
  4387ce:	push   edi
  4387cf:	(bad)  
  4387d0:	out    0x3,al
  4387d2:	rol    DWORD PTR [edi+eiz*8],1
  4387d5:	add    esp,DWORD PTR [ebp+0x4303e704]
  4387db:	(bad)  
  4387dc:	out    0x3,al
  4387de:	add    BYTE PTR [eax],al
  4387e0:	add    BYTE PTR [edi-0x2],al
  4387e3:	out    0x3,al
  4387e5:	sbb    edi,esi
  4387e7:	out    0x3,al
  4387e9:	paddd  mm4,mm6
  4387ec:	add    esp,DWORD PTR [ebx-0x2]
  4387ef:	out    0x3,al
  4387f1:	inc    edi
  4387f2:	(bad)  
  4387f3:	out    0x3,al
  4387f5:	je     0x4387fa
  4387f7:	out    0x3,eax
  4387f9:	jo     0x4387fe
  4387fb:	out    0x3,eax
  4387fd:	cld    
  4387fe:	add    al,BYTE PTR [eax]
  438800:	jmp    0xe94f55f5
  438805:	lock outs dx,BYTE PTR ds:[esi]
  438807:	add    eax,0x57af0e9
  43880c:	jmp    0xe948ff01
  438811:	lock add BYTE PTR ds:0x57ef0e9,0xe9
  438819:	lock mov al,BYTE PTR ds:0x586f0e9
  438820:	jmp    0xe9485b15
  438825:	lock into 
  438827:	add    al,0xe9
  438829:	lock fiadd DWORD PTR [ecx+ebp*8]
  43882d:	lock es add eax,0x4f2f0e9
  438834:	jmp    0xe9487729
  438839:	lock cli 
  43883b:	add    al,0xe9
  43883d:	lock test BYTE PTR [ecx+ebp*8],0xf0
  438842:	add    al,BYTE PTR ds:0xe9
  438848:	lock inc BYTE PTR [ecx+ebp*8]
  43884c:	lock or al,BYTE PTR ds:0x506f0e9
  438853:	jmp    0xe949db48
  438858:	lock dec esi
  43885a:	push   es
  43885b:	jmp    0xe949e350
  438860:	lock push esi
  438862:	push   es
  438863:	jmp    0xe949eb58
  438868:	lock pop esi
  43886a:	push   es
  43886b:	jmp    0xe949f360
  438870:	lock push esi
  438872:	push   es
  438873:	jmp    0xe949eb68
  438878:	lock pop esi
  43887a:	push   es
  43887b:	add    BYTE PTR [edx-0x75f52bfb],bl
  438881:	add    eax,0x58a0b43
  438886:	int3   
  438887:	or     bl,BYTE PTR [edx+0x5]
  43888a:	cs or  eax,0xd2a055a
  438890:	dec    edx
  438891:	add    eax,0x54a0ad0
  438896:	int3   
  438897:	or     bl,BYTE PTR [edx+0x5]
  43889a:	enter  0x5a0a,0x5
  43889e:	mov    ah,0xa
  4388a0:	dec    edx
  4388a1:	add    eax,0x54a0b23
  4388a6:	lods   al,BYTE PTR ds:[esi]
  4388a7:	or     bl,BYTE PTR [edx]
  4388a9:	add    eax,0x1168
  4388ae:	add    BYTE PTR [edx],bl
  4388b0:	add    eax,0x50a0aa4
  4388b5:	mov    al,ds:0x9c050a0a
  4388ba:	or     bl,BYTE PTR [edx]
  4388bc:	add    eax,0x51a0a98
  4388c1:	xchg   esp,eax
  4388c2:	or     cl,BYTE PTR [edx]
  4388c4:	add    eax,0x50a0a90
  4388c9:	mov    WORD PTR [edx],cs
  4388cb:	fiadd  DWORD PTR [eax+ecx*4]
  4388ce:	or     bl,dl
  4388d0:	add    al,0x84
  4388d2:	or     cl,dl
  4388d4:	add    al,0x80
  4388d6:	or     cl,dl
  4388d8:	add    al,0x8c
  4388da:	or     bl,dl
  4388dc:	add    al,0xec
  4388de:	push   cs
  4388df:	fiadd  DWORD PTR [esp+esi*2]
  4388e2:	or     cl,dl
  4388e4:	add    al,0x70
  4388e6:	or     cl,dl
  4388e8:	add    al,0x6c
  4388ea:	or     bl,BYTE PTR [edx-0x65f597fc]
  4388f0:	add    al,0x64
  4388f2:	or     cl,BYTE PTR [edx-0xcf59ffc]
  4388f8:	pop    ebp
  4388f9:	std    
  4388fa:	pop    ebx
  4388fb:	stc    
  4388fc:	pop    ebp
  4388fd:	std    
  4388fe:	push   edi
  4388ff:	stc    
  438900:	pop    ebp
  438901:	std    
  438902:	push   ebx
  438903:	jmp    0xe9938665
  438908:	pop    ebp
  438909:	std    
  43890a:	dec    ebx
  43890b:	stc    
  43890c:	pop    ebp
  43890d:	std    
  43890e:	inc    edi
  43890f:	stc    
  438910:	pop    ebp
  438911:	std    
  438912:	(bad)  
  438913:	add    BYTE PTR [eax],al
  438915:	add    ch,ch
  438917:	pop    ebp
  438918:	std    
  438919:	dec    edi
  43891a:	jmp    0xf98f867c
  43891f:	pop    ebp
  438920:	std    
  438921:	inc    edi
  438922:	stc    
  438923:	pop    ebp
  438924:	std    
  438925:	inc    ebx
  438926:	jmp    0xe9838688
  43892b:	pop    ebp
  43892c:	std    
  43892d:	cmp    edi,ecx
  43892f:	pop    ebp
  438930:	std    
  438931:	aaa    
  438932:	stc    
  438933:	pop    ebp
  438934:	std    
  438935:	xor    ebp,ecx
  438937:	pop    ebp
  438938:	std    
  438939:	pop    ds
  43893a:	jmp    0xf95f869c
  43893f:	pop    ebp
  438940:	std    
  438941:	pop    ss
  438942:	stc    
  438943:	pop    ebp
  438944:	std    
  438945:	adc    ebp,ecx
  438947:	pop    ebp
  438948:	std    
  438949:	psubsw mm3,QWORD PTR [ebp-0x3]
  43894d:	or     edi,ecx
  43894f:	pop    ebp
  438950:	std    
  438951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438952:	clc    
  438953:	pop    ebp
  438954:	std    
  438955:	add    ebp,ecx
  438957:	pop    ebp
  438958:	std    
  438959:	(bad)  
  43895a:	jmp    0xfb3f86bc
  43895f:	pop    ebp
  438960:	std    
  438961:	idiv   edx
  438963:	pop    ebp
  438964:	std    
  438965:	repz jmp 0xfd5d:0xeaeffd5d
  43896d:	jmp    0x438969
  43896f:	pop    ebp
  438970:	std    
  438971:	out    0xfa,eax
  438973:	push   es
  438974:	out    0x3,eax
  438976:	xchg   edi,eax
  438977:	std    
  438978:	out    0x3,al
  43897a:	add    BYTE PTR [eax],al
  43897c:	add    BYTE PTR [ebx-0x50fc1903],dl
  438982:	std    
  438983:	out    0x3,al
  438985:	stos   DWORD PTR es:[edi],eax
  438986:	std    
  438987:	out    0x3,al
  438989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43898a:	std    
  43898b:	out    0x3,al
  43898d:	mov    ds:0x3f03e6fd,eax
  438992:	std    
  438993:	out    0x3,al
  438995:	int3   
  438996:	sti    
  438997:	out    0x3,al
  438999:	aaa    
  43899a:	std    
  43899b:	out    0x3,al
  43899d:	xor    edi,ebp
  43899f:	out    0x3,al
  4389a1:	(bad)  
  4389a2:	std    
  4389a3:	out    0x3,al
  4389a5:	mov    edi,ebp
  4389a7:	out    0x3,al
  4389a9:	xchg   ebp,edi
  4389ab:	out    0x3,al
  4389ad:	cmp    ebp,0xffffffe6
  4389b0:	add    ebx,DWORD PTR [edi-0x3]
  4389b3:	out    0x3,al
  4389b5:	pop    ebx
  4389b6:	std    
  4389b7:	out    0x3,al
  4389b9:	push   edi
  4389ba:	std    
  4389bb:	out    0x3,al
  4389bd:	pop    ss
  4389be:	sti    
  4389bf:	out    0x3,al
  4389c1:	outs   dx,DWORD PTR ds:[esi]
  4389c2:	std    
  4389c3:	out    0x3,al
  4389c5:	imul   edi,ebp,0xffffffe6
  4389c8:	add    esp,DWORD PTR [edi-0x3]
  4389cb:	out    0x3,al
  4389cd:	arpl   bp,di
  4389cf:	out    0x3,al
  4389d1:	jg     0x4389d3
  4389d3:	out    0x3,eax
  4389d5:	jnp    0x4389d7
  4389d7:	out    0x3,eax
  4389d9:	ja     0x4389db
  4389db:	out    0x3,eax
  4389dd:	jae    0x4389df
  4389df:	out    0x3,eax
  4389e1:	add    BYTE PTR [eax],al
  4389e3:	add    BYTE PTR [edi+0x0],cl
  4389e6:	out    0x3,eax
  4389e8:	dec    ebx
  4389e9:	add    bh,ah
  4389eb:	add    eax,DWORD PTR [edi+0x0]
  4389ee:	out    0x3,eax
  4389f0:	inc    ebx
  4389f1:	add    BYTE PTR [eax],al
  4389f3:	jmp    0xe94a64e8
  4389f8:	lock fiadd WORD PTR [esi]
  4389fb:	jmp    0xe948c6f0
  438a00:	lock out 0x6,al
  438a03:	jmp    0xe94a34f8
  438a08:	lock scas al,BYTE PTR es:[edi]
  438a0a:	push   es
  438a0b:	jmp    0xe94a3d00
  438a10:	lock mov dh,0x6
  438a13:	jmp    0xe94a4508
  438a18:	lock mov esi,0xc2f0e906
  438a1e:	push   es
  438a1f:	jmp    0xe94a5114
  438a24:	lock or al,BYTE PTR [edi]
  438a27:	jmp    0xe94a991c
  438a2c:	lock adc al,BYTE PTR [edi]
  438a2f:	jmp    0xe948fb24
  438a34:	lock je 0x438a3c
  438a37:	jmp    0xe949032c
  438a3c:	lock jl 0x438a44
  438a3f:	jmp    0xe94aa034
  438a44:	lock test BYTE PTR ds:0xe9,al
  438a4b:	lock mov BYTE PTR ds:0x4ccf0e9,al
  438a52:	jmp    0xe94ab047
  438a57:	lock sub DWORD PTR [edi],eax
  438a5a:	jmp    0xe948634f
  438a5f:	lock icebp 
  438a61:	push   es
  438a62:	jmp    0xe9486b57
  438a67:	lock in al,0x4
  438a6a:	jmp    0x48735f
  438a6f:	retf   0x5a09
  438a72:	or     ecx,edx
  438a74:	or     eax,esi
  438a76:	or     BYTE PTR [edx-0x65f713f7],bl
  438a7c:	or     eax,ebp
  438a7e:	or     BYTE PTR [edx-0x75f4b5f7],cl
  438a84:	or     ecx,esi
  438a86:	or     BYTE PTR [edx-0x65f712f7],bl
  438a8c:	or     ecx,ebp
  438a8e:	or     BYTE PTR [edx-0x75f71af7],cl
  438a94:	or     ecx,esp
  438a96:	or     BYTE PTR [edx+0x9],bl
  438a99:	fisttp QWORD PTR [eax]
  438a9b:	pop    edx
  438a9c:	or     DWORD PTR [esi],ebp
  438a9e:	or     ecx,DWORD PTR [edx+0x9]
  438aa1:	sub    cl,BYTE PTR [ebx]
  438aa3:	dec    edx
  438aa4:	or     ecx,edx
  438aa6:	or     BYTE PTR [edx+0x9],bl
  438aa9:	int    0x8
  438aab:	pop    edx
  438aac:	or     ecx,ecx
  438aae:	or     BYTE PTR [eax],al
  438ab0:	add    BYTE PTR [eax],al
  438ab2:	dec    edx
  438ab3:	or     ebp,eax
  438ab5:	or     BYTE PTR [edx+0x9],cl
  438ab8:	push   ss
  438ab9:	or     ebx,DWORD PTR [edx]
  438abb:	or     DWORD PTR [edx],edx
  438abd:	or     ebx,DWORD PTR [edx]
  438abf:	or     DWORD PTR [esi],ecx
  438ac1:	or     ecx,DWORD PTR [edx]
  438ac3:	or     DWORD PTR [edx],ecx
  438ac5:	or     ecx,DWORD PTR [edx]
  438ac7:	or     DWORD PTR [ecx-0x52f6e5f8],esi
  438acd:	or     BYTE PTR [edx],bl
  438acf:	or     DWORD PTR [ecx-0x5af6f5f8],ebp
  438ad5:	or     BYTE PTR [edx],cl
  438ad7:	or     DWORD PTR [ecx-0x62f725f8],esp
  438add:	or     dl,bl
  438adf:	or     dh,ch
  438ae1:	or     cl,dl
  438ae3:	or     BYTE PTR [ebp-0x6ef735f8],dl
  438ae9:	or     bl,dh
  438aeb:	pop    ebp
  438aec:	std    
  438aed:	xchg   edx,eax
  438aee:	sti    
  438aef:	pop    ebp
  438af0:	std    
  438af1:	mov    gs,ebx
  438af3:	pop    ebp
  438af4:	std    
  438af5:	mov    ch,bl
  438af7:	pop    ebp
  438af8:	std    
  438af9:	xchg   bl,bh
  438afb:	pop    ebp
  438afc:	std    
  438afd:	cmp    bl,0x5d
  438b00:	std    
  438b01:	jle    0x438aee
  438b03:	pop    ebp
  438b04:	std    
  438b05:	jp     0x438af2
  438b07:	pop    ebp
  438b08:	std    
  438b09:	jbe    0x438b06
  438b0b:	pop    ebp
  438b0c:	std    
  438b0d:	jb     0x438b0a
  438b0f:	pop    ebp
  438b10:	std    
  438b11:	shr    ecx,0x5d
  438b14:	std    
  438b15:	mov    ebp,0xe9000000
  438b1a:	pop    ebp
  438b1b:	std    
  438b1c:	mov    ecx,0xb5fd5df9
  438b21:	stc    
  438b22:	pop    ebp
  438b23:	std    
  438b24:	mov    cl,0xe9
  438b26:	pop    ebp
  438b27:	std    
  438b28:	lods   eax,DWORD PTR ds:[esi]
  438b29:	jmp    0xf9ed888b
  438b2e:	pop    ebp
  438b2f:	std    
  438b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438b31:	stc    
  438b32:	pop    ebp
  438b33:	std    
  438b34:	mov    eax,ds:0x9dfd5de9
  438b39:	jmp    0xf9dd889b
  438b3e:	pop    ebp
  438b3f:	std    
  438b40:	xchg   ebp,eax
  438b41:	stc    
  438b42:	pop    ebp
  438b43:	std    
  438b44:	xchg   ecx,eax
  438b45:	jmp    0xe9d188a7
  438b4a:	pop    ebp
  438b4b:	std    
  438b4c:	mov    ecx,edi
  438b4e:	pop    ebp
  438b4f:	std    
  438b50:	test   ecx,edi
  438b52:	pop    ebp
  438b53:	std    
  438b54:	sub    ecx,0xe97dfd5d
  438b5a:	pop    ebp
  438b5b:	std    
  438b5c:	jns    0x438b57
  438b5e:	pop    ebp
  438b5f:	std    
  438b60:	jne    0x438b5b
  438b62:	pop    ebp
  438b63:	std    
  438b64:	jno    0x438b4f
  438b66:	push   es
  438b67:	out    0x3,eax
  438b69:	inc    ebp
  438b6a:	add    edi,esp
  438b6c:	add    ebx,DWORD PTR [ecx+0x1]
  438b6f:	out    0x3,eax
  438b71:	dec    ebp
  438b72:	add    edi,esp
  438b74:	add    edx,DWORD PTR [ecx+0x1]
  438b77:	out    0x3,eax
  438b79:	adc    eax,0x3e701
  438b7e:	add    BYTE PTR [eax],al
  438b80:	dec    ecx
  438b81:	add    edi,esp
  438b83:	add    edi,DWORD PTR ds:0x4103e701
  438b89:	add    edi,esp
  438b8b:	add    esp,DWORD PTR ds:0x3903e701
  438b91:	add    edi,esp
  438b93:	add    ebp,DWORD PTR ds:0x3103e701
  438b99:	add    edi,esp
  438b9b:	add    esi,DWORD PTR [ebp+0x2903e700]
  438ba1:	add    edi,esp
  438ba3:	add    ebx,DWORD PTR ds:0x2103e701
  438ba9:	add    edi,esp
  438bab:	add    eax,DWORD PTR ds:0x1903e701
  438bb1:	add    edi,esp
  438bb3:	add    ecx,DWORD PTR ds:0x1103e701
  438bb9:	add    edi,esp
  438bbb:	add    edx,ebp
  438bbd:	add    bh,ah
  438bbf:	add    ecx,DWORD PTR [ecx]
  438bc1:	add    edi,esp
  438bc3:	add    edi,ebp
  438bc5:	add    bh,ah
  438bc7:	add    eax,DWORD PTR [ecx]
  438bc9:	add    edi,esp
  438bcb:	add    esp,ebp
  438bcd:	add    bh,ah
  438bcf:	add    edi,ecx
  438bd1:	add    bh,ah
  438bd3:	add    ebp,ebp
  438bd5:	add    bh,ah
  438bd7:	add    esi,ecx
  438bd9:	add    bh,ah
  438bdb:	add    esi,ebp
  438bdd:	cld    
  438bde:	out    0x3,al
  438be0:	jmp    0x12c8be5
  438be5:	add    BYTE PTR [eax],al
  438be7:	lock push eax
  438be9:	pop    es
  438bea:	jmp    0xe94ae0df
  438bef:	lock pop eax
  438bf1:	pop    es
  438bf2:	jmp    0xe94ae8e7
  438bf7:	lock pusha 
  438bf9:	pop    es
  438bfa:	jmp    0xe94af0ef
  438bff:	lock sub BYTE PTR [edi],al
  438c02:	jmp    0xe94ab8f7
  438c07:	lock xor BYTE PTR [edi],al
  438c0a:	jmp    0xe94ac0ff
  438c0f:	lock cmp BYTE PTR [edi],al
  438c12:	jmp    0xe94ac907
  438c17:	lock inc eax
  438c19:	pop    es
  438c1a:	jmp    0xe94ad10f
  438c1f:	lock mov BYTE PTR [edi],al
  438c22:	jmp    0xe94b1917
  438c27:	lock nop
  438c29:	pop    es
  438c2a:	jmp    0xe94b211f
  438c2f:	lock cwde 
  438c31:	pop    es
  438c32:	jmp    0xe94b2927
  438c37:	lock mov al,ds:0xa4f0e907
  438c3d:	pop    es
  438c3e:	jmp    0xe94af533
  438c43:	lock ins BYTE PTR es:[edi],dx
  438c45:	pop    es
  438c46:	jmp    0xe94afd3b
  438c4b:	add    BYTE PTR [eax],al
  438c4d:	add    al,dh
  438c4f:	je     0x438c58
  438c51:	jmp    0xe94b0546
  438c56:	lock jl 0x438c60
  438c59:	jmp    0xe94b0d4e
  438c5e:	lock test BYTE PTR [edi],al
  438c61:	add    BYTE PTR [edx],cl
  438c63:	push   es
  438c64:	jp     0x438c6f
  438c66:	fiadd  DWORD PTR ds:0x5da0976
  438c6c:	jb     0x438c77
  438c6e:	retf   0x6e05
  438c71:	or     edx,ecx
  438c73:	add    eax,0x5da096a
  438c78:	or     dx,bx
  438c7b:	add    eax,0x5ca0962
  438c80:	pop    esi
  438c81:	or     edx,ecx
  438c83:	add    eax,0x59a095a
  438c88:	push   esi
  438c89:	or     DWORD PTR [edx-0x75f6adfb],ebx
  438c8f:	add    eax,0x58a094e
  438c94:	dec    edx
  438c95:	or     DWORD PTR [edx-0x65f6b9fb],ebx
  438c9b:	add    eax,0x58a0942
  438ca0:	or     DWORD PTR ds:[edx+0x5a093a05],ecx
  438ca7:	add    eax,0x55a0936
  438cac:	xor    cl,BYTE PTR [ecx]
  438cae:	dec    edx
  438caf:	add    eax,0x92e
  438cb4:	add    BYTE PTR [edx+0x5],cl
  438cb7:	sub    cl,BYTE PTR [ecx]
  438cb9:	pop    edx
  438cba:	add    eax,0x55a0926
  438cbf:	and    cl,BYTE PTR [ecx]
  438cc1:	dec    edx
  438cc2:	add    eax,0x54a091e
  438cc7:	sbb    cl,BYTE PTR [ecx]
  438cc9:	sbb    al,BYTE PTR ds:0x51a0916
  438ccf:	adc    cl,BYTE PTR [ecx]
  438cd1:	or     al,BYTE PTR ds:0x50a090e
  438cd7:	or     cl,BYTE PTR [ecx]
  438cd9:	sbb    al,BYTE PTR ds:0x5ff30906
  438cdf:	std    
  438ce0:	add    eax,0x1fd5fea
  438ce5:	jmp    0xfd5d:0xfbfdfd5f
  438cec:	stc    
  438ced:	sti    
  438cee:	pop    ebp
  438cef:	std    
  438cf0:	cmc    
  438cf1:	jmp    0x438d50
  438cf3:	std    
  438cf4:	icebp  
  438cf5:	jmp    0x438d54
  438cf7:	std    
  438cf8:	in     eax,dx
  438cf9:	sti    
  438cfa:	pop    ebp
  438cfb:	std    
  438cfc:	jmp    0xe640eafc
  438d01:	jmp    0x438d60
  438d03:	std    
  438d04:	loope  0x438cf1
  438d06:	pop    ebp
  438d07:	std    
  438d08:	(bad)  
  438d0a:	pop    ebp
  438d0b:	std    
  438d0c:	fsincos 
  438d0e:	pop    ebp
  438d0f:	std    
  438d10:	aad    0xeb
  438d12:	pop    ebp
  438d13:	std    
  438d14:	shr    ebx,1
  438d16:	pop    ebp
  438d17:	std    
  438d18:	int    0x0
  438d1a:	add    BYTE PTR [eax],al
  438d1c:	sti    
  438d1d:	pop    ebp
  438d1e:	std    
  438d1f:	leave  
  438d20:	sti    
  438d21:	pop    ebp
  438d22:	std    
  438d23:	vminsd xmm7,xmm2,xmm5
  438d27:	shr    ebx,0x5d
  438d2a:	std    
  438d2b:	mov    ebp,0xb9fd5dfb
  438d30:	sti    
  438d31:	pop    ebp
  438d32:	std    
  438d33:	mov    ch,0xeb
  438d35:	pop    ebp
  438d36:	std    
  438d37:	mov    cl,0xeb
  438d39:	pop    ebp
  438d3a:	std    
  438d3b:	lods   eax,DWORD PTR ds:[esi]
  438d3c:	sti    
  438d3d:	pop    ebp
  438d3e:	std    
  438d3f:	test   eax,0xa5fd5dfb
  438d44:	jmp    0x438da3
  438d46:	std    
  438d47:	mov    eax,ds:0x9dfd5deb
  438d4c:	sti    
  438d4d:	pop    ebp
  438d4e:	std    
  438d4f:	cdq    
  438d50:	sti    
  438d51:	pop    ebp
  438d52:	std    
  438d53:	xchg   ebp,eax
  438d54:	jmp    0x438db3
  438d56:	std    
  438d57:	xchg   ecx,eax
  438d58:	jmp    0x438d60
  438d5a:	out    0x3,eax
  438d5c:	jge    0x438d5d
  438d5e:	out    0x3,al
  438d60:	jns    0x438d61
  438d62:	out    0x3,al
  438d64:	jne    0x438d65
  438d66:	out    0x3,al
  438d68:	jno    0x438d69
  438d6a:	out    0x3,al
  438d6c:	ins    DWORD PTR es:[edi],dx
  438d6d:	jmp    esi
  438d6f:	add    ebp,DWORD PTR [ecx-0x1]
  438d72:	out    0x3,al
  438d74:	gs jmp esi
  438d77:	add    esp,DWORD PTR [ecx-0x1]
  438d7a:	out    0x3,al
  438d7c:	pop    ebp
  438d7d:	jmp    esi
  438d7f:	add    eax,DWORD PTR [eax]
  438d81:	add    BYTE PTR [eax],al
  438d83:	pop    ecx
  438d84:	jmp    esi
  438d86:	add    edx,DWORD PTR [ebp-0x1]
  438d89:	out    0x3,al
  438d8b:	push   ecx
  438d8c:	jmp    esi
  438d8e:	add    ecx,DWORD PTR [ebp-0x1]
  438d91:	out    0x3,al
  438d93:	dec    ecx
  438d94:	jmp    esi
  438d96:	add    eax,DWORD PTR [ebp-0x1]
  438d99:	out    0x3,al
  438d9b:	inc    ecx
  438d9c:	jmp    esi
  438d9e:	add    edi,DWORD PTR ds:0x3903e6ff
  438da4:	jmp    esi
  438da6:	add    esi,DWORD PTR ds:0x3103e6ff
  438dac:	jmp    esi
  438dae:	add    ebp,DWORD PTR ds:0x2903e6ff
  438db4:	jmp    esi
  438db6:	add    esp,DWORD PTR ds:0x2103e6ff
  438dbc:	jmp    esi
  438dbe:	add    ebx,DWORD PTR ds:0x1903e6ff
  438dc4:	jmp    esi
  438dc6:	add    edx,DWORD PTR ds:0x1103e6ff
  438dcc:	jmp    esi
  438dce:	add    ecx,DWORD PTR ds:0x903e6ff
  438dd4:	(bad)  
  438dd5:	(bad)  
  438dd6:	call   0xe94b7ecb
  438ddb:	lock hlt 
  438ddd:	pop    es
  438dde:	jmp    0xe94b86d3
  438de3:	lock sbb eax,0xe901
  438de9:	add    al,dh
  438deb:	and    DWORD PTR [ecx],eax
  438ded:	jmp    0xe94b92e2
  438df2:	lock inc esp
  438df4:	add    ecx,ebp
  438df6:	lock inc eax
  438df8:	add    ecx,ebp
  438dfa:	lock cmp al,0x1
  438dfd:	jmp    0xe944c6f2
  438e02:	lock xor al,0x1
  438e05:	jmp    0xe944befa
  438e0a:	lock sub al,0x1
  438e0d:	jmp    0xe944b702
  438e12:	lock fs add ecx,ebp
  438e16:	lock pusha 
  438e18:	add    ecx,ebp
  438e1a:	lock pop esp
  438e1c:	add    ecx,ebp
  438e1e:	lock pop eax
  438e20:	add    ecx,ebp
  438e22:	lock push esp
  438e24:	add    ecx,ebp
  438e26:	lock push eax
  438e28:	add    ecx,ebp
  438e2a:	lock dec esp
  438e2c:	add    ecx,ebp
  438e2e:	lock dec eax
  438e30:	add    ecx,ebp
  438e32:	lock test BYTE PTR [ecx],al
  438e35:	jmp    0xe9450f2a
  438e3a:	lock jl 0x438e3e
  438e3d:	jmp    0xe9450732
  438e42:	lock je 0x438e46
  438e45:	jmp    0xe9463a3a
  438e4a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e4c:	add    ch,cl
  438e4e:	add    BYTE PTR [eax],al
  438e50:	add    al,dh
  438e52:	jecxz  0x438e56
  438e54:	add    BYTE PTR [edx],bl
  438e56:	or     dl,BYTE PTR [edi+0x5]
  438e59:	sbb    cl,BYTE PTR [edx]
  438e5b:	push   ebx
  438e5c:	add    eax,0x54f0a0a
  438e61:	or     cl,BYTE PTR [edx]
  438e63:	dec    ebx
  438e64:	add    eax,0x5240a1a
  438e69:	sbb    cl,BYTE PTR [edx]
  438e6b:	xchg   BYTE PTR [edi],al
  438e6d:	or     cl,BYTE PTR [edx]
  438e6f:	add    BYTE PTR [edi],0xa
  438e72:	or     bh,BYTE PTR [esi+0x7]
  438e75:	fimul  DWORD PTR [ecx]
  438e77:	jp     0x438e80
  438e79:	fimul  DWORD PTR [ecx]
  438e7b:	xor    eax,DWORD PTR ds:0x52f09ca
  438e81:	retf   0x2b09
  438e84:	add    eax,0x52709da
  438e89:	fimul  DWORD PTR [ecx]
  438e8b:	popw   es
  438e8d:	retf   0x6209
  438e90:	pop    es
  438e91:	retf   0x5e09
  438e94:	pop    es
  438e95:	call   0x5609:0x9a075a09
  438e9c:	pop    es
  438e9d:	mov    cl,BYTE PTR [ecx]
  438e9f:	push   edx
  438ea0:	pop    es
  438ea1:	mov    cl,BYTE PTR [ecx]
  438ea3:	dec    esi
  438ea4:	pop    es
  438ea5:	call   0x309:0x9a074a09
  438eac:	add    eax,0x4ff098a
  438eb1:	mov    cl,BYTE PTR [ecx]
  438eb3:	sti    
  438eb4:	add    al,0x0
  438eb6:	add    BYTE PTR [eax],al
  438eb8:	pop    edx
  438eb9:	or     DWORD PTR [edx],edi
  438ebb:	pop    es
  438ebc:	pop    edx
  438ebd:	or     DWORD PTR [esi],esi
  438ebf:	pop    es
  438ec0:	dec    edx
  438ec1:	or     DWORD PTR [edx],esi
  438ec3:	pop    es
  438ec4:	dec    edx
  438ec5:	or     DWORD PTR [esi],ebp
  438ec7:	pop    es
  438ec8:	pop    edx
  438ec9:	or     DWORD PTR [edx],ebp
  438ecb:	pop    es
  438ecc:	pop    edx
  438ecd:	or     DWORD PTR [esi],esp
  438ecf:	pop    es
  438ed0:	repz das 
  438ed2:	std    
  438ed3:	and    eax,0x21fd2fec
  438ed8:	hlt    
  438ed9:	das    
  438eda:	std    
  438edb:	sbb    eax,0x19fd2fec
  438ee0:	hlt    
  438ee1:	das    
  438ee2:	std    
  438ee3:	adc    eax,0x11fd2fec
  438ee8:	hlt    
  438ee9:	das    
  438eea:	std    
  438eeb:	or     eax,0x9fd2fec
  438ef0:	hlt    
  438ef1:	das    
  438ef2:	std    
  438ef3:	add    eax,0x1fd2fec
  438ef8:	hlt    
  438ef9:	sub    eax,0x2dedfdfd
  438efe:	std    
  438eff:	stc    
  438f00:	cmc    
  438f01:	sub    eax,0x2dedf5fd
  438f06:	std    
  438f07:	icebp  
  438f08:	cmc    
  438f09:	sub    eax,0x2dededfd
  438f0e:	std    
  438f0f:	jmp    0xe640bd09
  438f14:	in     eax,dx
  438f15:	sub    eax,0x2df5e1fd
  438f1a:	std    
  438f1b:	fld    QWORD PTR [eax]
  438f1d:	add    BYTE PTR [eax],al
  438f1f:	in     eax,dx
  438f20:	sub    eax,0x2df5d9fd
  438f25:	std    
  438f26:	aad    0xed
  438f28:	sub    eax,0x2df5d1fd
  438f2d:	std    
  438f2e:	int    0xed
  438f30:	sub    eax,0x2df784fd
  438f35:	std    
  438f36:	sub    bh,0x2d
  438f39:	std    
  438f3a:	jl     0x438f33
  438f3c:	sub    eax,0x2dedbdfd
  438f41:	std    
  438f42:	mov    ecx,0xb5fd2df5
  438f47:	in     eax,dx
  438f48:	sub    eax,0x6f5b1fd
  438f4d:	out    0x3,eax
  438f4f:	xchg   ebp,eax
  438f50:	or     eax,0xd8903e7
  438f55:	out    0x3,eax
  438f57:	lea    ecx,ds:0xd5103e7
  438f5d:	out    0x3,eax
  438f5f:	test   DWORD PTR ds:0xd7903e7,ecx
  438f65:	out    0x3,eax
  438f67:	jge    0x438f76
  438f69:	out    0x3,eax
  438f6b:	popa   
  438f6c:	or     eax,0xd7503e7
  438f71:	out    0x3,eax
  438f73:	imul   ecx,DWORD PTR ds:0xd6d03e7,0xc7103e7
  438f7d:	out    0x3,eax
  438f7f:	gs or  eax,0x3e7
  438f85:	add    BYTE PTR [ecx+0xd],bl
  438f88:	out    0x3,eax
  438f8a:	pop    ebp
  438f8b:	or     eax,0xd4103e7
  438f90:	out    0x3,eax
  438f92:	push   ebp
  438f93:	or     eax,0xd4903e7
  438f98:	out    0x3,eax
  438f9a:	dec    ebp
  438f9b:	or     eax,0xd1103e7
  438fa0:	out    0x3,eax
  438fa2:	inc    ebp
  438fa3:	or     eax,0xd3903e7
  438fa8:	out    0x3,eax
  438faa:	cmp    eax,0x2103e70d
  438faf:	or     eax,0xd3503e7
  438fb4:	out    0x3,eax
  438fb6:	test   BYTE PTR [edx],0xe7
  438fb9:	add    esi,edx
  438fbb:	or     ah,bh
  438fbd:	add    ebp,DWORD PTR [esi+0x7]
  438fc0:	out    0x3,eax
  438fc2:	push   0x7
  438fc4:	out    0x3,eax
  438fc6:	sbb    DWORD PTR ds:0xfcf0e900,ecx
  438fcc:	add    ecx,ebp
  438fce:	lock clc 
  438fd0:	add    ecx,ebp
  438fd2:	lock hlt 
  438fd4:	add    ecx,ebp
  438fd6:	lock lock add ecx,ebp
  438fda:	lock in al,dx
  438fdc:	add    ecx,ebp
  438fde:	lock call 0x253478e5
  438fe4:	add    ch,cl
  438fe6:	lock and BYTE PTR [edx],al
  438fe9:	jmp    0xf0438fee
  438fee:	sbb    al,0x2
  438ff0:	jmp    0xe945a8e5
  438ff5:	lock adc al,0x2
  438ff8:	jmp    0xe945a0ed
  438ffd:	lock or al,0x2
  439000:	jmp    0xe94594f5
  439005:	lock inc eax
  439007:	add    ebp,ecx
  439009:	lock cmp al,0x3
  43900c:	jmp    0xe946c901
  439011:	lock xor al,0x3
  439014:	jmp    0xe946c109
  439019:	lock sub al,0x3
  43901c:	jmp    0xe946b911
  439021:	lock and al,0x3
  439024:	jmp    0xe946f119
  439029:	lock pop esp
  43902b:	add    ebp,ecx
  43902d:	lock pop eax
  43902f:	add    ebp,ecx
  439031:	lock push esp
  439033:	add    ebp,ecx
  439035:	lock push eax
  439037:	add    ebp,ecx
  439039:	lock dec esp
  43903b:	add    ebp,ecx
  43903d:	lock dec eax
  43903f:	add    ebp,ecx
  439041:	lock inc esp
  439043:	add    eax,DWORD PTR [eax]
  439045:	pop    edx
  439046:	push   es
  439047:	mov    edx,0xb6064a05
  43904c:	add    eax,0x5b2064a
  439051:	add    BYTE PTR [eax],al
  439053:	add    BYTE PTR [edx+0x6],bl
  439056:	scas   al,BYTE PTR es:[edi]
  439057:	add    eax,0x5aa065a
  43905c:	dec    edx
  43905d:	push   es
  43905e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43905f:	add    eax,0x5a2064a
  439064:	sbb    al,BYTE PTR [esi]
  439066:	sahf   
  439067:	add    eax,0x59a061a
  43906c:	or     al,BYTE PTR [esi]
  43906e:	xchg   esi,eax
  43906f:	add    eax,0x592060a
  439074:	sbb    al,BYTE PTR [esi]
  439076:	mov    es,WORD PTR ds:0x58a061a
  43907c:	or     al,BYTE PTR [esi]
  43907e:	xchg   BYTE PTR ds:0x582060a,al
  439084:	fiadd  DWORD PTR ds:0x5da057e
  43908a:	jp     0x439091
  43908c:	retf   0x7605
  43908f:	add    eax,0x57205ca
  439094:	fiadd  DWORD PTR ds:0x5da056e
  43909a:	push   0x5
  43909c:	retf   0x6605
  43909f:	add    eax,0x56205ca
  4390a4:	call   0x5a05:0x9a055e05
  4390ab:	add    eax,0x556058a
  4390b0:	mov    al,BYTE PTR ds:0x59a0552
  4390b6:	dec    esi
  4390b7:	add    eax,0x9a000000
  4390bc:	add    eax,0x58a054a
  4390c1:	inc    esi
  4390c2:	add    eax,0x45fd2ff3
  4390c7:	imul   BYTE PTR [edi]
  4390c9:	std    
  4390ca:	inc    ecx
  4390cb:	out    dx,al
  4390cc:	das    
  4390cd:	std    
  4390ce:	cmp    eax,0x39fd2ff6
  4390d3:	out    dx,al
  4390d4:	das    
  4390d5:	std    
  4390d6:	xor    eax,0x31fd2ff6
  4390db:	out    dx,al
  4390dc:	das    
  4390dd:	std    
  4390de:	sub    eax,0x29fd2ff6
  4390e3:	out    dx,al
  4390e4:	das    
  4390e5:	std    
  4390e6:	and    eax,0x21fd2ff6
  4390eb:	out    dx,al
  4390ec:	das    
  4390ed:	std    
  4390ee:	sbb    eax,0x19fd2ff6
  4390f3:	out    dx,al
  4390f4:	das    
  4390f5:	std    
  4390f6:	adc    eax,0x11fd2ff6
  4390fb:	out    dx,al
  4390fc:	das    
  4390fd:	std    
  4390fe:	or     eax,0x9fd2ff6
  439103:	out    dx,al
  439104:	das    
  439105:	std    
  439106:	add    eax,0x1fd2df6
  43910b:	out    dx,al
  43910c:	sub    eax,0x2df7fdfd
  439111:	std    
  439112:	stc    
  439113:	out    dx,eax
  439114:	sub    eax,0x2df7f5fd
  439119:	std    
  43911a:	icebp  
  43911b:	out    dx,eax
  43911c:	sub    eax,0xedfd
  439121:	add    bh,dh
  439123:	sub    eax,0x2defe9fd
  439128:	std    
  439129:	in     eax,0xf7
  43912b:	sub    eax,0x2defe1fd
  439130:	std    
  439131:	(bad)  
  439133:	sub    eax,0x2defd9fd
  439138:	std    
  439139:	aad    0xf7
  43913b:	sub    eax,0x6efd1fd
  439140:	out    0x3,eax
  439142:	lods   eax,DWORD PTR ds:[esi]
  439143:	or     esp,edi
  439145:	add    ebp,DWORD PTR [ecx+0x3503e70b]
  43914b:	or     esp,edi
  43914d:	add    esi,DWORD PTR [ecx]
  43914f:	or     esp,edi
  439151:	add    ebx,DWORD PTR [ebp-0x66fc18f5]
  439157:	or     esp,edi
  439159:	add    eax,DWORD PTR [ebp-0x7efc18f5]
  43915f:	or     esp,edi
  439161:	add    ecx,DWORD PTR [ebp-0x76fc18f5]
  439167:	or     esp,edi
  439169:	add    edx,DWORD PTR [ebp+0xb]
  43916c:	out    0x3,eax
  43916e:	push   ecx
  43916f:	or     esp,edi
  439171:	add    edi,DWORD PTR [ebp+0xb]
  439174:	out    0x3,eax
  439176:	jns    0x439183
  439178:	out    0x3,eax
  43917a:	gs or  esp,edi
  43917d:	add    esp,DWORD PTR [ecx+0xb]
  439180:	out    0x3,eax
  439182:	ins    DWORD PTR es:[edi],dx
  439183:	or     esp,edi
  439185:	add    eax,DWORD PTR [eax]
  439187:	add    BYTE PTR [eax],al
  439189:	imul   ecx,DWORD PTR [ebx],0xa7503e7
  43918f:	out    0x3,eax
  439191:	jno    0x43919d
  439193:	out    0x3,eax
  439195:	pop    ebp
  439196:	or     esp,edi
  439198:	add    ebx,DWORD PTR [ecx+0xb]
  43919b:	out    0x3,eax
  43919d:	inc    ebp
  43919e:	or     esp,edi
  4391a0:	add    eax,DWORD PTR [ecx+0xb]
  4391a3:	out    0x3,eax
  4391a5:	dec    ebp
  4391a6:	or     esp,edi
  4391a8:	add    ecx,DWORD PTR [ecx+0xb]
  4391ab:	out    0x3,eax
  4391ad:	adc    eax,0x1103e70b
  4391b2:	or     esp,edi
  4391b4:	add    edi,DWORD PTR ds:0x3903e70b
  4391ba:	or     eax,DWORD PTR [eax]
  4391bc:	jmp    0xe9476ab1
  4391c1:	lock aam 0x3
  4391c4:	jmp    0xe94762b9
  4391c9:	lock int3 
  4391cb:	add    ebp,ecx
  4391cd:	lock enter 0xe903,0xf0
  4391d2:	les    eax,FWORD PTR [ebx]
  4391d4:	jmp    0xe94792c9
  4391d9:	lock cld 
  4391db:	add    ebp,ecx
  4391dd:	lock clc 
  4391df:	add    ebp,ecx
  4391e1:	lock hlt 
  4391e3:	add    ebp,ecx
  4391e5:	lock lock add ebp,ecx
  4391e9:	lock in al,dx
  4391eb:	add    ebp,ecx
  4391ed:	add    BYTE PTR [eax],al
  4391ef:	add    al,dh
  4391f1:	call   0xe5347af9
  4391f6:	add    ebp,ecx
  4391f8:	lock and BYTE PTR [ecx+ebp*8],al
  4391fc:	lock sbb al,0x4
  4391ff:	jmp    0xe947aaf4
  439204:	lock adc al,0x4
  439207:	jmp    0xe947a2fc
  43920c:	lock or al,0x4
  43920f:	jmp    0xe9479704
  439214:	lock or BYTE PTR [ecx+ebp*8],al
  439218:	lock cmp al,0xfd
  43921b:	call   0xe940d310
  439220:	lock xor al,0xfd
  439223:	call   0xe940cb18
  439228:	lock sub al,0xfd
  43922b:	call   0xe940c320
  439230:	lock and al,0xfd
  439233:	call   0x40bb28
  439238:	mov    cl,BYTE PTR [edx]
  43923a:	fiadd  DWORD PTR [ebx]
  43923c:	mov    cl,BYTE PTR [edx]
  43923e:	(bad)  
  43923f:	add    ebx,DWORD PTR [edx-0x65fc2df6]
  439245:	or     cl,dh
  439247:	add    ecx,DWORD PTR [edx-0x75fc35f6]
  43924d:	or     bl,BYTE PTR [ecx]
  43924f:	add    DWORD PTR [edx+0xa],ebx
  439252:	adc    eax,0x1
  439257:	pop    edx
  439258:	or     dl,BYTE PTR [ecx]
  43925a:	add    DWORD PTR [edx+0xa],ecx
  43925d:	or     eax,0xa0a4a01
  439262:	add    DWORD PTR [edx+0xa],ebx
  439265:	add    DWORD PTR cs:[edx+0xa],ebx
  439269:	xor    eax,0xfd0a4a01
  43926e:	add    BYTE PTR [edx+0xa],cl
  439271:	stc    
  439272:	add    BYTE PTR [edx],bl
  439274:	or     dh,ch
  439276:	add    BYTE PTR [edx],bl
  439278:	or     dh,cl
  43927a:	add    BYTE PTR [edx],cl
  43927c:	or     ch,ch
  43927e:	add    BYTE PTR [edx],cl
  439280:	or     ch,dl
  439282:	add    BYTE PTR [edx],bl
  439284:	or     ah,ch
  439286:	add    BYTE PTR [edx],bl
  439288:	or     ah,cl
  43928a:	add    BYTE PTR [edx],cl
  43928c:	or     bl,ch
  43928e:	add    BYTE PTR [edx],cl
  439290:	or     bl,cl
  439292:	add    dl,bl
  439294:	or     ebp,edx
  439296:	add    dl,bl
  439298:	or     ecx,edx
  43929a:	add    dl,cl
  43929c:	or     ebp,ecx
  43929e:	add    dl,cl
  4392a0:	or     edx,ecx
  4392a2:	add    dl,bl
  4392a4:	or     ebp,eax
  4392a6:	add    dl,bl
  4392a8:	or     ecx,eax
  4392aa:	add    dl,cl
  4392ac:	or     DWORD PTR [ebp-0x46f63600],edi
  4392b2:	add    bl,dh
  4392b4:	das    
  4392b5:	std    
  4392b6:	mov    edx,0xb6fd2ff3
  4392bb:	add    BYTE PTR [eax],al
  4392bd:	add    bl,dh
  4392bf:	das    
  4392c0:	std    
  4392c1:	mov    dl,0xf3
  4392c3:	das    
  4392c4:	std    
  4392c5:	scas   al,BYTE PTR es:[edi]
  4392c6:	repz das 
  4392c8:	std    
  4392c9:	stos   BYTE PTR es:[edi],al
  4392ca:	repz das 
  4392cc:	std    
  4392cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392ce:	repz das 
  4392d0:	std    
  4392d1:	mov    ds:0x59fd2ff3,al
  4392d6:	ins    BYTE PTR es:[edi],dx
  4392d7:	sbb    bl,BYTE PTR [edi]
  4392d9:	mov    DWORD PTR [esi+0x11434750],ebp
  4392df:	xor    BYTE PTR [eax+0x43],cl
  4392e2:	icebp  
  4392e3:	dec    edi
  4392e4:	std    
  4392e5:	push   ebx
  4392e7:	ins    BYTE PTR es:[edi],dx
  4392e8:	rol    DWORD PTR [ecx],0x13
  4392eb:	xor    ch,bh
  4392ed:	push   DWORD PTR [eax+0x22]
  4392f0:	adc    al,0x40
  4392f2:	mov    esi,0xf5434824
  4392f7:	outs   dx,DWORD PTR ds:[esi]
  4392f8:	std    
  4392f9:	push   ebx
  4392fb:	test   al,0xc0
  4392fd:	sbb    al,0xec
  4392ff:	mov    ebp,0xadef8afb
  439304:	add    al,BYTE PTR [eax]
  439306:	jo     0x4392f7
  439308:	pop    es
  439309:	stc    
  43930a:	and    esi,DWORD PTR [eax+0x2d87f94b]
  439310:	jl     0x439355
  439312:	rcr    BYTE PTR [eax-0x3e],1
  439315:	sub    BYTE PTR [ebp+0x78],cl
  439318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439319:	jl     0x4392ca
  43931b:	inc    ebp
  43931c:	stos   BYTE PTR es:[edi],al
  43931d:	mov    ebp,0x43482deb
  439322:	add    BYTE PTR [eax],al
  439324:	add    cl,bh
  439326:	sub    eax,0xa8f3fffd
  43932b:	rcr    BYTE PTR [esp+esi*8],0xf3
  43932f:	ret    
  439330:	(bad)  
  439331:	pop    ss
  439332:	pop    es
  439333:	stos   BYTE PTR es:[edi],al
  439334:	add    esi,ebx
  439336:	push   es
  439337:	mov    al,ds:0xe73cacc3
  43933c:	adc    dh,BYTE PTR [ebp+0x307ad834]
  439342:	adc    DWORD PTR [esi+0x4b],esp
  439345:	xchg   esp,eax
  439346:	mov    bl,0xe2
  439348:	test   BYTE PTR [eax],dh
  43934a:	and    eax,ebp
  43934c:	test   BYTE PTR [ebx-0x1f7cbf7],cl
  439352:	sar    esp,0x7
  439355:	ins    BYTE PTR es:[edi],dx
  439356:	shr    al,cl
  439358:	inc    edx
  439359:	push   ebx
  43935a:	add    ch,al
  43935c:	push   ebx
  43935d:	lock push es
  43935f:	test   DWORD PTR [ebx],0x73eb89f3
  439365:	push   esi
  439366:	cmp    al,0x66
  439368:	inc    ebx
  439369:	idiv   DWORD PTR [ebx]
  43936b:	xchg   edi,eax
  43936c:	inc    esp
  43936d:	outs   dx,BYTE PTR ds:[esi]
  43936e:	ret    0xc5
  439371:	add    edi,0xff5384e7
  439377:	daa    
  439378:	pop    ebx
  439379:	cs (bad) 
  43937b:	lods   al,BYTE PTR ds:[esi]
  43937c:	stc    
  43937d:	addr16 dec eax
  43937f:	data16 into 
  439381:	repnz out 0xc2,al
  439384:	and    dl,BYTE PTR [esi+0x2dcc1]
  43938a:	add    BYTE PTR [eax],al
  43938c:	jbe    0x439350
  43938e:	add    eax,0xe4c74101
  439393:	test   BYTE PTR [ebx],dl
  439395:	add    al,0x70
  439397:	(bad)  
  439398:	out    0x87,al
  43939a:	pushf  
  43939b:	cmc    
  43939c:	icebp  
  43939d:	mov    cl,0xdc
  43939f:	test   BYTE PTR [eax+0x11],ch
  4393a2:	out    0xd6,eax
  4393a4:	lock xchg DWORD PTR [ebp+ebp*8-0x3199b810],ebp
  4393ac:	repnz out 0xff,al
  4393af:	je     0x43939d
  4393b1:	mov    ecx,0x79f4d342
  4393b6:	jge    0x43941c
  4393b8:	in     eax,dx
  4393b9:	push   ss
  4393ba:	jae    0x4393a1
  4393bc:	jno    0x439385
  4393be:	adc    eax,0x5e2f31eb
  4393c3:	into   
  4393c4:	sub    al,0x3e
  4393c6:	test   DWORD PTR [ecx+ecx*4],ebp
  4393c9:	cmp    al,0x44
  4393cb:	or     dh,BYTE PTR [eax-0x39]
  4393ce:	sbb    al,0xeb
  4393d0:	xor    DWORD PTR [esi],edi
  4393d2:	inc    ebx
  4393d3:	or     dh,BYTE PTR [eax]
  4393d5:	mov    edx,0x79f2ca42
  4393da:	jge    0x4393f8
  4393dc:	icebp  
  4393dd:	push   ss
  4393de:	jae    0x4393cf
  4393e0:	enter  0xf95a,0x8e
  4393e4:	lods   al,BYTE PTR ds:[esi]
  4393e5:	jns    0x4393cf
  4393e7:	sub    eax,0xaa0006f1
  4393ec:	jo     0x4393ad
  4393ee:	std    
  4393ef:	fadd   DWORD PTR [eax]
  4393f1:	add    BYTE PTR [eax],al
  4393f3:	sub    eax,DWORD PTR [eax+ebp*8]
  4393f6:	mov    ds:0x66f93dac,eax
  4393fb:	sub    bl,BYTE PTR [edx]
  4393fd:	mov    ebp,0xf93d0c51
  439402:	jmp    0x1abe4db8
  439407:	aaa    
  439408:	mov    eax,0x3cd05101
  43940d:	stc    
  43940e:	jmp    0xa86d1c4
  439413:	mov    al,0xb9
  439415:	jp     0x439402
  439417:	sar    BYTE PTR [edx+0x1a2a6a02],1
  43941d:	add    ebp,DWORD PTR [edx]
  43941f:	jo     0x4393e7
  439421:	sbb    al,0xea
  439423:	xor    DWORD PTR [edx+edi*2+0x2b5b0eb],edi
  43942a:	add    BYTE PTR [ecx+0x50],cl
  43942d:	sbb    al,0x9
  43942f:	sbb    DWORD PTR [esi+0x5fba0275],eax
  439435:	inc    BYTE PTR [edx-0x3d031a69]
  43943b:	dec    ecx
  43943c:	dec    edi
  43943d:	sbb    al,0x3
  43943f:	pop    ecx
  439440:	fidivr WORD PTR [edi-0x1]
  439443:	mov    ebp,0xe945f6c9
  439448:	lds    edi,FWORD PTR [edx+0x7d]
  43944b:	cdq    
  43944c:	inc    esi
  43944d:	outs   dx,BYTE PTR ds:[esi]
  43944e:	and    dl,BYTE PTR [ebp+0x4f]
  439451:	sti    
  439452:	aas    
  439453:	call   0x0:0xff0006
  43945a:	xlat   BYTE PTR ds:[ebx]
  43945b:	in     eax,0x82
  43945d:	inc    ebp
  43945e:	test   eax,0xdf08af39
  439463:	add    DWORD PTR [esi-0x3f7aa5fd],eax
  439469:	add    al,0x6d
  43946b:	idiv   BYTE PTR [esi-0x19b7bb]
  439471:	call   FWORD PTR [edx-0x3b]
  439474:	test   BYTE PTR [ebp+0x39],0xc5
  439478:	jp     0x4394f7
  43947a:	jns    0x4394c2
  43947c:	outs   dx,BYTE PTR ds:[esi]
  43947d:	and    ecx,ebp
  43947f:	dec    esi
  439480:	sbb    al,0xfe
  439482:	push   edi
  439483:	call   0x3a3c1207
  439488:	outs   dx,BYTE PTR ds:[esi]
  439489:	push   es
  43948a:	mov    dl,0x60
  43948c:	stc    
  43948d:	dec    DWORD PTR [edx]
  43948f:	lds    eax,FWORD PTR [edx-0x50c606bb]
  439495:	or     BYTE PTR [edi+0xa038601],cl
  43949b:	test   eax,eax
  43949d:	add    al,0xcd
  43949f:	cmc    
  4394a0:	mov    edx,0xf8e49783
  4394a5:	ret    0x10f3
  4394a8:	enter  0xdd1c,0x62
  4394ac:	pop    ds
  4394ad:	adc    BYTE PTR [esi+0x4e],0xfa
  4394b1:	jb     0x4394a8
  4394b3:	pop    ss
  4394b4:	retf   0xc4fe
  4394b7:	das    
  4394b8:	test   DWORD PTR ds:[esi],esi
  4394bb:	dec    ebp
  4394bc:	cli    
  4394bd:	mov    cl,0x0
  4394bf:	add    BYTE PTR [eax],al
  4394c1:	jmp    0x439475
  4394c3:	pop    es
  4394c4:	mov    dh,al
  4394c6:	das    
  4394c7:	add    al,0xef
  4394ca:	push   eax
  4394cb:	xor    al,0xbd
  4394cd:	jo     0x439499
  4394cf:	std    
  4394d0:	pop    ds
  4394d1:	pop    ss
  4394d2:	ss push ebp
  4394d4:	hlt    
  4394d5:	lea    edi,[eax+0x4b]
  4394d8:	jge    0x439508
  4394da:	or     eax,0x458bbd08
  4394df:	dec    edx
  4394e0:	stc    
  4394e1:	je     0x43948f
  4394e3:	rcr    BYTE PTR [ecx+esi*8],0x6c
  4394e7:	jg     0x439564
  4394e9:	and    al,dh
  4394eb:	rol    BYTE PTR [ecx],1
  4394ed:	dec    ebx
  4394ee:	out    0xfc,eax
  4394f0:	push   ebx
  4394f2:	ins    BYTE PTR es:[edi],dx
  4394f3:	jg     0x439538
  4394f5:	adc    BYTE PTR [esi],ch
  4394f7:	inc    eax
  4394f8:	jge    0x4394a8
  4394fa:	dec    esp
  4394fb:	add    DWORD PTR [ebp+0x31ee270],edi
  439501:	xor    BYTE PTR [eax+ecx*8+0x352b32c],ch
  439508:	call   0x40c3e3
  43950d:	xor    bh,al
  43950f:	test   dl,bh
  439511:	adc    al,0xc0
  439513:	ds call 0xf98e8f02
  439519:	jo     0x43958d
  43951b:	idiv   esp
  43951d:	xchg   DWORD PTR [ecx],esp
  43951f:	push   ebp
  439520:	test   al,0xf5
  439522:	add    eax,0x4d22
  439527:	add    BYTE PTR [esi-0xcfd08d1],ch
  43952d:	push   es
  43952e:	xor    DWORD PTR es:[eax],0x5640e5e4
  439535:	mov    edx,0x241c3e8
  43953a:	data16 (bad) 
  43953c:	out    0xd,eax
  43953e:	xor    DWORD PTR es:[eax],0x3640e3e4
  439545:	mov    edx,0x221f3e8
  43954a:	data16 mov BYTE PTR [edi],0x4
  43954e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43954f:	sbb    BYTE PTR [eax],0x1
  439552:	pop    es
  439553:	xlat   BYTE PTR ds:[ebx]
  439554:	icebp  
  439555:	sub    DWORD PTR [ecx+eiz*1],0xfffffff0
  439559:	inc    ebx
  43955a:	data16 (bad) 
  43955c:	out    0xd,eax
  43955e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43955f:	cmp    eax,0x6
  439562:	call   0x972883d
  439567:	dec    esi
  439568:	push   0x38
  43956a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43956b:	pop    ebx
  43956c:	cmp    DWORD PTR [edi],eax
  43956e:	out    0x3,eax
  439570:	sahf   
  439571:	xchg   DWORD PTR [esp+eax*1],ecx
  439574:	push   esp
  439575:	mov    bl,0xe8
  439577:	pop    ebx
  439578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439579:	cmp    BYTE PTR [edx+0x4c],bh
  43957c:	xchg   BYTE PTR [edi-0x4cc3fd0c],al
  439582:	loopne 0x4395df
  439584:	stos   DWORD PTR es:[edi],eax
  439585:	cmp    BYTE PTR [edx+0x4c],ah
  439588:	outs   dx,BYTE PTR ds:[esi]
  439589:	test   ah,bl
  43958b:	add    DWORD PTR [eax],eax
  43958d:	add    BYTE PTR [eax],al
  43958f:	add    esi,DWORD PTR [edx+0x38df5be8]
  439595:	dec    edx
  439596:	dec    esp
  439597:	push   esi
  439598:	das    
  439599:	mov    eax,DWORD PTR [ebx]
  43959b:	repz push es
  43959d:	or     BYTE PTR es:[eax+0x25a8fff3],0x6
  4395a5:	call   0x4a85fb
  4395aa:	sub    dh,BYTE PTR [ebx-0x45]
  4395ad:	std    
  4395ae:	enter  0x4bd,0x7d
  4395b2:	lods   al,BYTE PTR ds:[esi]
  4395b3:	adc    eax,DWORD PTR [esi]
  4395b5:	mov    ebp,0x31aad6a
  4395ba:	sub    dh,BYTE PTR [ebx]
  4395bc:	mov    edx,0xb3c0eb7a
  4395c1:	smsw   WORD PTR [esp+edi*1-0x3bc31107]
  4395c9:	adc    eax,0x7d1ab3e8
  4395ce:	and    al,0xcc
  4395d0:	add    al,0xbd
  4395d2:	rcl    DWORD PTR [ebx+0x14cef93c],0xc4
  4395d9:	adc    eax,0x7d1ab3e8
  4395de:	and    al,0xcc
  4395e0:	add    bh,BYTE PTR [ebp+0x3feaaa6a]
  4395e6:	xor    al,0xf1
  4395e8:	cs push ebx
  4395ea:	jmp    0x6b009cdf
  4395ef:	cmp    bh,BYTE PTR [ecx]
  4395f1:	sbb    DWORD PTR [eax+eax*1],ebx
  4395f4:	add    BYTE PTR [eax],al
  4395f6:	repnz mov ecx,0x79f1ca42
  4395fc:	jge    0x43962a
  4395fe:	adc    al,0x4
  439600:	mov    ebp,0xf93b6e91
  439605:	jbe    0x43967b
  439607:	mov    ebx,0x523e911
  43960c:	call   0xf9815040
  439611:	sub    al,bh
  439613:	in     al,dx
  439614:	(bad)  
  439615:	call   0xccc1100a
  43961a:	std    
  43961b:	(bad)  
  43961c:	jb     0x43961e
  43961e:	pop    ds
  43961f:	cmp    BYTE PTR ds:0x7ac00f23,0x7d
  439626:	or     bl,ah
  439628:	ins    BYTE PTR es:[edi],dx
  439629:	add    eax,0x51c4589
  43962e:	sbb    DWORD PTR [esi-0x3226dcc3],ecx
  439634:	jg     0x4396b3
  439636:	retf   0x6d0b
  439639:	push   es
  43963a:	repnz mov ds:0xcdf5fff4,eax
  439640:	out    0x1,eax
  439642:	fimul  DWORD PTR [edx]
  439644:	add    bl,al
  439646:	add    al,dl
  439648:	idiv   bh
  43964a:	(bad)
  43964d:	jge    0x439658
  43964f:	dec    ebx
  439650:	outs   dx,BYTE PTR ds:[esi]
  439651:	push   es
  439652:	ret    0xf6d1
  439655:	inc    ebp
  439657:	int    0xe7
  439659:	jnp    0x43965b
  43965b:	add    BYTE PTR [eax],al
  43965d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43965e:	shl    esi,0x83
  439661:	fucomip st,st(5)
  439663:	clc    
  439664:	ret    0x3f19
  439667:	sti    
  439668:	pop    ds
  439669:	(bad)  
  43966a:	xor    al,0xe1
  43966c:	imul   eax,DWORD PTR [edi-0x3f],0xfffffff6
  439670:	sbb    DWORD PTR [edi],0xffffffee
  439673:	add    eax,ebx
  439675:	sub    BYTE PTR [ebx],0xf6
  439678:	inc    DWORD PTR [ebp+0x48233d8d]
  43967e:	int    0xe7
  439680:	mov    esi,0xe8f6c176
  439685:	pop    eax
  439686:	mov    edi,0x3ec9fff6
  43968b:	(bad)  
  43968d:	aas    
  43968e:	xor    eax,0xbf04584
  439693:	cmp    eax,0x1c469923
  439698:	add    esi,ebx
  43969a:	loopne 0x43961d
  43969c:	jnp    0x43969b
  43969e:	push   ds
  43969f:	rol    BYTE PTR [ecx],1
  4396a1:	sbb    eax,DWORD PTR [esi+eax*2+0x79e104f9]
  4396a8:	inc    ebx
  4396a9:	fstp   DWORD PTR [esi]
  4396ab:	rcr    BYTE PTR [eax+esi*2],0x6b
  4396af:	and    bh,dh
  4396b1:	mov    cl,0xa0
  4396b3:	(bad)  
  4396b4:	std    
  4396b5:	add    al,0x94
  4396b7:	adc    ebp,eax
  4396b9:	jne    0x4396d6
  4396bb:	inc    esi
  4396bc:	stc    
  4396bd:	retf   
  4396be:	jmp    0x449003
  4396c3:	add    ah,cl
  4396c5:	mov    al,ds:0xbaf311c7
  4396ca:	stc    
  4396cb:	test   BYTE PTR [esi],dh
  4396cd:	pop    edx
  4396ce:	add    al,0x43
  4396d0:	adc    BYTE PTR [ecx+0x60f51cbf],ah
  4396d6:	cmp    DWORD PTR [ebx-0x3],0x1e
  4396da:	retf   0x8b01
  4396dd:	retf   
  4396de:	inc    esi
  4396df:	stc    
  4396e0:	xchg   esp,eax
  4396e1:	pusha  
  4396e2:	jnp    0x439727
  4396e4:	jmp    0x70605107
  4396e9:	jmp    0xfbb0:0x47b1fe22
  4396f0:	je     0x439756
  4396f2:	pop    esp
  4396f3:	cwde   
  4396f4:	outs   dx,DWORD PTR ds:[esi]
  4396f5:	ins    BYTE PTR es:[edi],dx
  4396f6:	inc    edi
  4396f7:	jge    0x4396df
  4396f9:	cmp    eax,0xa8e872fd
  4396fe:	mov    eax,0x22eaf215
  439703:	jge    0x4396bb
  439705:	inc    eax
  439706:	stc    
  439707:	mov    esp,0xfeef3270
  43970c:	(bad)  
  43970d:	and    eax,0xa4343655
  439712:	inc    esi
  439713:	mov    ebp,0xedac0678
  439718:	and    eax,0xb08505ca
  43971d:	jmp    0xe84edc06
  439722:	dec    edx
  439723:	dec    ecx
  439724:	or     bl,BYTE PTR [esi]
  439726:	leave  
  439727:	inc    edi
  439728:	add    BYTE PTR [eax],al
  43972a:	add    BYTE PTR [edx],cl
  43972c:	xor    eax,0x7e2c766
  439731:	mov    cl,0x1
  439733:	or     ecx,DWORD PTR [edi]
  439735:	sub    cl,BYTE PTR [ecx-0x16]
  439738:	dec    eax
  439739:	outs   dx,BYTE PTR ds:[esi]
  43973a:	mov    edi,0x24a405fe
  43973f:	pop    esi
  439740:	retf   0x5c5
  439743:	xchg   esi,eax
  439744:	pop    ds
  439745:	popf   
  439746:	inc    edi
  439747:	retf   0x6634
  43974a:	(bad)  
  43974b:	loop   0x439759
  43974d:	jns    0x439750
  43974f:	retf   
  439750:	xor    dh,cl
  439752:	dec    eax
  439753:	mov    edx,0xa653ff48
  439758:	xor    al,0xe2
  43975a:	jl     0x43978c
  43975c:	adc    eax,ebp
  43975e:	mov    esi,0x252c87ff
  439763:	xchg   ebp,eax
  439764:	dec    ecx
  439765:	mov    edi,0xc2348663
  43976a:	pop    ebx
  43976b:	iret   
  43976c:	xor    bh,BYTE PTR [edx-0x274e01b8]
  439772:	(bad)  
  439773:	cli    
  439774:	or     al,0xbf
  439776:	xor    BYTE PTR [ecx+0x34],ch
  439779:	mov    ds:0xfcca6e44,al
  43977e:	add    dh,BYTE PTR [eax-0x8419a19]
  439784:	or     BYTE PTR [esi-0x7dcf75a5],ah
  43978a:	dec    eax
  43978b:	pop    ebx
  43978c:	or     BYTE PTR [ebx+0x48],bh
  43978f:	add    BYTE PTR [eax],al
  439791:	add    BYTE PTR [edx],bh
  439793:	mov    BYTE PTR [eax],al
  439795:	hlt    
  439796:	inc    edx
  439797:	xor    al,0x74
  439799:	shl    DWORD PTR [edi-0x50],cl
  43979c:	add    eax,0xac892bea
  4397a1:	jmp    0xd4c09e96
  4397a6:	sbb    cl,BYTE PTR [eax]
  4397a8:	or     DWORD PTR [edi+0x56],ebx
  4397ab:	pop    es
  4397ac:	add    cl,ch
  4397ae:	test   al,0x94
  4397b0:	cli    
  4397b1:	ds stos DWORD PTR es:[edi],eax
  4397b3:	jno    0x439832
  4397b5:	mov    ah,0x2
  4397b7:	xor    eax,0xaf77d374
  4397bc:	add    eax,0x8c88ebea
  4397c1:	jmp    0x94c09eb6
  4397c6:	fidiv  DWORD PTR [edx+ecx*1]
  4397c9:	pop    edi
  4397ca:	jbe    0x4397d2
  4397cc:	add    cl,ch
  4397ce:	sub    BYTE PTR [ebp+0x7234fef9],dh
  4397d4:	jge    0x43984a
  4397d6:	ret    0x7431
  4397d9:	fnstenv [edi-0x51]
  4397dc:	add    eax,0x6c889dea
  4397e1:	jmp    0x462b9ed6
  4397e6:	sub    eax,0x70aaf92e
  4397eb:	scas   eax,DWORD PTR es:[edi]
  4397ec:	adc    edx,ebp
  4397ee:	mov    ds:0x793c7cff,eax
  4397f3:	xor    dh,BYTE PTR [ebx+edx*1+0x0]
  4397f7:	add    BYTE PTR [eax],al
  4397f9:	pop    ss
  4397fa:	(bad)  
  4397fc:	scas   al,BYTE PTR es:[edi]
  4397fd:	mov    ah,0x71
  4397ff:	jge    0x439825
  439801:	push   ebp
  439802:	pop    es
  439803:	jae    0x4397f2
  439805:	jno    0x4397b6
  439807:	add    eax,0xe7cb43ea
  43980c:	and    DWORD PTR [ebp-0x66ff06d3],esi
  439812:	xchg   DWORD PTR [ebp+0x16],esi
  439815:	push   edi
  439816:	push   esi
  439817:	jmp    edi
  439819:	jle    0x4397e4
  43981b:	idiv   bh
  43981d:	pop    ecx
  43981e:	xchg   DWORD PTR [ebp+0x16],esi
  439821:	adc    al,0x56
  439823:	add    eax,0xfc2d3f83
  439828:	je     0x43981a
  43982a:	shl    BYTE PTR [ecx],cl
  43982c:	(bad)  
  43982d:	mov    ebp,0x2f83bacb
  439832:	and    DWORD PTR [eax],eax
  439834:	jne    0x439852
  439836:	mov    BYTE PTR [ebp+0xa],dh
  439839:	or     DWORD PTR [esi+0x11],edx
  43983c:	sbb    DWORD PTR [edi-0x218abfeb],0xffffff85
  439843:	jne    0x439853
  439845:	retf   0x542
  439848:	call   0x3a651b
  43984d:	sbb    ebx,edx
  43984f:	std    
  439850:	std    
  439851:	in     eax,dx
  439852:	leave  
  439853:	mov    edx,0xfa20978b
  439858:	inc    esp
  439859:	test   eax,0x233d85
  43985e:	add    BYTE PTR [eax],al
  439860:	cwde   
  439861:	(bad)
  439864:	nop
  439865:	leave  
  439866:	imul   al
  439868:	clc    
  439869:	mov    ebp,0x3f09fff6
  43986e:	(bad)  
  439870:	aas    
  439871:	xor    ecx,esp
  439873:	in     eax,0xaf
  439875:	leave  
  439876:	test   bl,0x1
  439879:	inc    edi
  43987a:	adc    eax,DWORD PTR [ecx]
  43987c:	(bad)  
  43987d:	in     eax,0x7a
  43987f:	inc    ebp
  439880:	stc    
  439881:	add    eax,0xc09fe8bb
  439886:	idiv   bh
  439888:	cmp    BYTE PTR [ebx],0xf4
  43988b:	push   ebx
  43988d:	cwde   
  43988e:	jle    0x43990b
  439890:	in     eax,0x1f
  439892:	rol    BYTE PTR [ecx],1
  439894:	pop    ebx
  439895:	fs dec eax
  439897:	stc    
  439898:	cmp    al,0x5d
  43989a:	jle    0x439917
  43989c:	fstp   QWORD PTR ds:0xf81b01d0
  4398a2:	inc    edi
  4398a3:	stc    
  4398a4:	and    al,0xdd
  4398a6:	jge    0x439923
  4398a8:	add    eax,0xb01d01d
  4398ad:	mov    WORD PTR [eax-0x7],cs
  4398b0:	or     al,0xdd
  4398b2:	jge    0x43992f
  4398b4:	frstor [ebx]
  4398b6:	rol    BYTE PTR [ecx],1
  4398b8:	or     eax,DWORD PTR [eax-0x230b06b8]
  4398be:	jge    0x43993b
  4398c0:	add    eax,0x1d02b
  4398c5:	add    BYTE PTR [eax],al
  4398c7:	(bad)  [ebx-0x232306b9]
  4398cd:	jge    0x43994a
  4398cf:	std    
  4398d0:	and    bl,al
  4398d2:	add    ebx,ebx
  4398d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398d5:	inc    edi
  4398d6:	stc    
  4398d7:	(bad)  
  4398d8:	fdiv   QWORD PTR [ebp+0x43]
  4398db:	fstp   DWORD PTR [esi]
  4398dd:	rcr    BYTE PTR [eax+esi*2],0x62
  4398e1:	push   ds
  4398e2:	(bad)  
  4398e3:	mov    cl,0x7
  4398e5:	mov    esi,?
  4398e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4398e8:	sub    BYTE PTR [edi+0x7b],bh
  4398eb:	add    eax,0x8b01ca20
  4398f0:	retf   
  4398f1:	inc    eax
  4398f2:	stc    
  4398f3:	mov    WORD PTR [edi+edi*2+0x7b],ds
  4398f7:	fstp   QWORD PTR [esi]
  4398f9:	retf   0x8b01
  4398fc:	mov    edi,0x5c74f940
  439901:	jg     0x43997e
  439903:	add    eax,0x5b0eca1e
  439908:	push   es
  439909:	xor    al,0x4a
  43990b:	pop    edx
  43990c:	xor    DWORD PTR [esi-0x39],esp
  43990f:	out    dx,al
  439910:	add    eax,0xbf54b21b
  439915:	mov    eax,DWORD PTR [ebp+0x4a]
  439918:	inc    ebp
  439919:	data16 (bad) 
  43991b:	loop   0x439922
  43991d:	hlt    
  43991e:	std    
  43991f:	dec    esp
  439920:	repz jae 0x439968
  439923:	sub    al,BYTE PTR [ebp+0x66]
  439926:	mov    DWORD PTR [edx],0xf2dc0b
  43992c:	add    BYTE PTR [eax],al
  43992e:	adc    al,0xdc
  439930:	pop    esp
  439931:	inc    ebp
  439932:	sbb    al,BYTE PTR [ebp-0x4af0062c]
  439938:	stc    
  439939:	pop    ebx
  43993a:	shl    DWORD PTR [ebx],1
  43993c:	inc    edx
  43993d:	inc    ebp
  43993e:	test   DWORD PTR ds:[ebp+ebp*8+0x5be8bbf1],edi
  439946:	add    eax,0xa6452a32
  43994b:	test   BYTE PTR [ebp+ebp*8+0x5bf7b9f2],ah
  439952:	repnz sub al,0x12
  439955:	inc    ebp
  439956:	dec    esi
  439957:	mov    dl,0xdc
  439959:	add    BYTE PTR [edi],bh
  43995b:	add    ecx,DWORD PTR [edi]
  43995d:	add    DWORD PTR [eax-0x34bf05d0],edi
  439963:	xor    dh,bl
  439965:	inc    esp
  439966:	stos   BYTE PTR es:[edi],al
  439967:	inc    esp
  439968:	pop    esi
  439969:	mov    edi,0x212c05fe
  43996e:	push   ds
  43996f:	retf   0x105
  439972:	push   esi
  439973:	pop    ds
  439974:	add    DWORD PTR [edx-0x76],ecx
  439977:	xor    BYTE PTR [esi-0x3a],ah
  43997a:	loop   0x439982
  43997c:	cmp    al,0xfe
  43997e:	xchg   esp,eax
  43997f:	es mov ebx,0x447a44
  439985:	push   0x35
  439987:	push   ss
  439988:	push   DWORD PTR [ebx]
  43998a:	gs sub bl,dl
  43998d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43998e:	mov    bh,0x2d
  439990:	mov    ebp,0x6a
  439995:	sub    eax,0x401bfe16
  43999a:	sub    BYTE PTR [esi+0x7d2daf90],bh
  4399a0:	add    al,0x39
  4399a2:	xor    ebp,DWORD PTR [ebp+0x1b]
  4399a5:	xchg   edi,eax
  4399a6:	ins    BYTE PTR es:[edi],dx
  4399a7:	cld    
  4399a8:	jbe    0x439961
  4399aa:	jno    0x439a29
  4399ac:	in     al,dx
  4399ad:	push   ss
  4399ae:	xor    esi,DWORD PTR [edi+ebp*8-0x48]
  4399b2:	pusha  
  4399b3:	cld    
  4399b4:	pop    esi
  4399b5:	scas   eax,DWORD PTR es:[edi]
  4399b6:	jno    0x439a35
  4399b8:	aam    0x1e
  4399ba:	add    al,0x73
  4399bc:	clc    
  4399bd:	test   al,0x8d
  4399bf:	test   DWORD PTR [esi-0x49],0xf3f37ab1
  4399c6:	mov    edx,0x335b4128
  4399cb:	stc    
  4399cc:	xor    esi,DWORD PTR cs:[edx-0x4b220086]
  4399d3:	add    DWORD PTR [ecx],edx
  4399d5:	pop    edi
  4399d6:	xor    edi,ecx
  4399d8:	push   ss
  4399d9:	xor    esi,DWORD PTR [edx-0x4b390886]
  4399df:	push   cs
  4399e0:	adc    DWORD PTR [eax+edi*1-0x53cb0107],esi
  4399e7:	add    eax,0xe7fbbcea
  4399ec:	jno    0x439a1a
  4399ee:	cs stc 
  4399f0:	stos   BYTE PTR es:[edi],al
  4399f1:	iret   
  4399f2:	mov    al,ds:0x7230defb
  4399f7:	test   DWORD PTR [eax+eax*1],ebp
  4399fa:	add    BYTE PTR [eax],al
  4399fc:	in     eax,dx
  4399fd:	das    
  4399fe:	inc    esp
  4399ff:	or     ch,BYTE PTR [ebx+eax*8+0x1c]
  439a03:	add    BYTE PTR [ecx-0x4c5c1838],cl
  439a09:	ret    
  439a0a:	test   BYTE PTR [ebx+0x75000d27],0x4c
  439a11:	fisttp DWORD PTR [ebp-0x4]
  439a14:	xchg   ebp,eax
  439a15:	ret    
  439a16:	mov    edx,0xf90cf783
  439a1b:	je     0x439a79
  439a1d:	fild   DWORD PTR [ecx-0x4]
  439a20:	jne    0x4399e5
  439a22:	mov    edx,0xfa0cf783
  439a27:	je     0x439a48
  439a29:	fld    TBYTE PTR [esi]
  439a2b:	stc    
  439a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a2d:	ret    
  439a2e:	jp     0x439aad
  439a30:	adc    BYTE PTR [eax],cl
  439a32:	pop    es
  439a33:	test   BYTE PTR [ecx],dl
  439a35:	add    eax,DWORD PTR [eax]
  439a37:	add    dl,al
  439a39:	xor    esi,ebp
  439a3b:	jmp    DWORD PTR [ebp-0x3828539]
  439a41:	pop    es
  439a42:	ins    DWORD PTR es:[edi],dx
  439a43:	sbb    eax,0xffb4589
  439a48:	aas    
  439a49:	sbb    ch,al
  439a4b:	push   ss
  439a4c:	and    ecx,edx
  439a4e:	test   BYTE PTR [ebx+0x73fafc97],0xb4
  439a55:	loop   0x439a60
  439a57:	cld    
  439a58:	cmc    
  439a59:	leave  
  439a5a:	mov    edx,0xf6eed6e8
  439a5f:	inc    DWORD PTR [eax]
  439a61:	add    BYTE PTR [eax],al
  439a63:	sbb    DWORD PTR [esi+0x6fce1675],eax
  439a69:	jmp    edi
  439a6b:	retf   0xf6ee
  439a6e:	(bad)  
  439a6f:	fld    DWORD PTR [ebp+0x6f8f1675]
  439a75:	jmp    edi
  439a77:	mov    esi,0x49fff6ed
  439a7c:	test   DWORD PTR [ebp+0x16],esi
  439a7f:	repz sbb eax,0x3f9b0eb8
  439a85:	xor    eax,0xbfa17cf9
  439a8a:	add    eax,0xe7eaf3f0
  439a8f:	dec    esi
  439a90:	jns    0x439ad0
  439a92:	stc    
  439a93:	xor    BYTE PTR [ecx+0xaf411bf],ah
  439a99:	adc    eax,0xd21d67d
  439a9e:	jae    0x439a82
  439aa0:	xchg   DWORD PTR [ecx-0x8],eax
  439aa3:	inc    esp
  439aa4:	jge    0x439a28
  439aa6:	jnp    0x439a91
  439aa8:	and    BYTE PTR [ecx+0x3a604b0b],dh
  439aae:	stc    
  439aaf:	sub    al,0x61
  439ab1:	and    eax,0x3d9d28b6
  439ab6:	mov    ebp,0xff1b5b68
  439abb:	scas   eax,DWORD PTR es:[edi]
  439abc:	add    BYTE PTR [ecx+0x4220d043],al
  439ac2:	call   0xf98172df
  439ac7:	add    BYTE PTR [eax],al
  439ac9:	add    BYTE PTR [eax+0x43],dh
  439acc:	pop    ss
  439acd:	add    BYTE PTR [esi+0x52],bh
  439ad0:	and    eax,0x3df4eb91
  439ad5:	jge    0x439b3d
  439ad7:	sub    al,BYTE PTR [edx]
  439ad9:	or     DWORD PTR [esi-0x41],esi
  439adc:	cld    
  439add:	push   ebx
  439adf:	pop    ss
  439ae0:	mov    ?,ebp
  439ae2:	int3   
  439ae3:	adc    al,0x42
  439ae5:	jge    0x439b2d
  439ae7:	ss add al,0x73
  439aea:	out    0x17,al
  439aec:	mov    ecx,0x832cb4f7
  439af1:	jnp    0x439aec
  439af3:	and    BYTE PTR [esi],cl
  439af5:	sub    DWORD PTR [esi+0x1f],0xfffffffd
  439af9:	dec    DWORD PTR [ebx-0x65c2a4fa]
  439aff:	sub    eax,0x150885a6
  439b04:	in     eax,0xb6
  439b06:	loope  0x439b26
  439b08:	dec    eax
  439b09:	cmp    al,0x7a
  439b0b:	sub    eax,0x9eebf66
  439b10:	jmp    0x5b03:0xe706d586
  439b17:	iret   
  439b18:	lods   eax,DWORD PTR ds:[esi]
  439b19:	inc    ecx
  439b1a:	pop    edx
  439b1b:	dec    ecx
  439b1c:	mov    di,0xa02
  439b20:	adc    al,0x13
  439b22:	pop    ebx
  439b23:	les    ecx,FWORD PTR [esi+0xc894a41]
  439b29:	push   cs
  439b2a:	ds mov dl,0x15
  439b2d:	sub    al,0x0
  439b2f:	add    BYTE PTR [eax],al
  439b31:	cmc    
  439b32:	xor    DWORD PTR [edx+0x41],edi
  439b35:	outs   dx,BYTE PTR ds:[esi]
  439b36:	mov    esp,esi
  439b38:	sbb    edi,ebp
  439b3a:	mov    bl,0xe0
  439b3c:	sub    esp,ecx
  439b3e:	xor    DWORD PTR [edx+0x41],esp
  439b41:	push   esi
  439b42:	mov    esp,ebx
  439b44:	sbb    eax,esi
  439b46:	mov    bl,0xf7
  439b48:	sub    esp,esi
  439b4a:	cs dec edx
  439b4c:	inc    ecx
  439b4d:	jle    0x439afa
  439b4f:	in     al,dx
  439b50:	add    al,0x80
  439b52:	test   BYTE PTR [esi+0x21],0xe6
  439b56:	sub    al,0x32
  439b58:	inc    ebp
  439b59:	data16 stos BYTE PTR es:[edi],al
  439b5b:	ror    BYTE PTR [ecx],1
  439b5d:	pusha  
  439b5e:	push   ss
  439b5f:	movups xmm3,xmm3
  439b62:	sub    al,0x1a
  439b64:	test   DWORD PTR [eax+0x1],ecx
  439b67:	out    0xb6,al
  439b69:	fstp   QWORD PTR [esi]
  439b6b:	fistp  QWORD PTR [edx+edi*4]
  439b6e:	sub    al,0x26
  439b70:	test   DWORD PTR [eax],edi
  439b72:	adc    eax,0x1ef3c0e2
  439b77:	add    ah,bh
  439b79:	jmp    0x439ba8
  439b7b:	stc    
  439b7c:	add    ch,cl
  439b7e:	push   ds
  439b7f:	repz jecxz 0x439bb5
  439b82:	cs mov ebp,0xff12b572
  439b88:	sub    ecx,DWORD PTR [esi-0xaf5bd55]
  439b8e:	imul   ebp,eax,0xf92db70f
  439b94:	push   0x0
  439b96:	add    BYTE PTR [eax],al
  439b98:	lods   eax,DWORD PTR ds:[esi]
  439b99:	push   ss
  439b9a:	add    BYTE PTR [eax+eax*1],bh
  439b9d:	pop    ds
  439b9e:	into   
  439b9f:	mov    dh,0xb3
  439ba1:	sub    eax,0x29e5247d
  439ba6:	je     0x439be0
  439ba8:	pop    ds
  439ba9:	inc    ecx
  439baa:	not    BYTE PTR [esi+0xc7d69b3]
  439bb0:	fldcw  WORD PTR [ebx]
  439bb2:	je     0x439b8c
  439bb4:	or     BYTE PTR [edx-0xf],dh
  439bb7:	jle    0x439b6c
  439bb9:	test   eax,0xb7efe37a
  439bbe:	xor    eax,0xf9349b81
  439bc3:	scas   ax,WORD PTR es:[edi]
  439bc5:	test   eax,0xb7f6f77a
  439bca:	push   cs
  439bcb:	inc    ecx
  439bcc:	mov    WORD PTR ds:0xb0774ef9,?
  439bd2:	add    eax,0xe80b3dea
  439bd7:	mov    DWORD PTR [esi],ebp
  439bd9:	cs stc 
  439bdb:	sub    ch,BYTE PTR [edi-0x51]
  439bde:	adc    edx,ebp
  439be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439be1:	cld    
  439be2:	out    0x74,eax
  439be4:	sbb    ebp,DWORD PTR [esi]
  439be6:	stc    
  439be7:	push   0xffffff8d
  439be9:	add    ebp,edi
  439beb:	fwait
  439bec:	hlt    
  439bed:	push   ds
  439bee:	xchg   DWORD PTR [ebx],edx
  439bf0:	xor    ebp,DWORD PTR [esi]
  439bf2:	mov    ebp,0xf282e200
  439bf7:	jmp    FWORD PTR [ebp+0x4582c7]
  439bfd:	add    BYTE PTR [eax],al
  439bff:	ror    BYTE PTR [eax],0x3d
  439c02:	and    ecx,DWORD PTR [ecx]
  439c04:	inc    ebp
  439c05:	sbb    al,0x2
  439c07:	dec    ecx
  439c08:	jmp    0x439c46
  439c0a:	and    edx,DWORD PTR [ebp+0x3d]
  439c0d:	sti    
  439c0e:	setp   BYTE PTR [edi]
  439c11:	add    dh,bh
  439c13:	xlat   BYTE PTR ds:[ebx]
  439c14:	sub    BYTE PTR [ecx+0x7d],bh
  439c17:	call   0x424a0917
  439c1c:	dec    ebx
  439c1d:	repz call FWORD PTR [ebp-0x16ba7d39]
  439c24:	sti    
  439c25:	lods   eax,DWORD PTR ds:[esi]
  439c26:	or     bh,bl
  439c28:	inc    BYTE PTR [ebp-0x3f77a5fd]
  439c2e:	add    al,0x5d
  439c30:	sar    BYTE PTR [esi-0x6d8b7bb],cl
  439c36:	dec    DWORD PTR [edx-0x38]
  439c39:	test   BYTE PTR [ebp+0x39],0xe9
  439c3d:	cmp    al,0x22
  439c3f:	call   0xe801:0x270f1b45
  439c46:	xor    eax,0xc3f6eb90
  439c4b:	adc    DWORD PTR [ebp-0x1],0x5579b3d0
  439c52:	push   es
  439c53:	xchg   ecx,eax
  439c54:	cmp    eax,0xfa740f1c
  439c59:	test   BYTE PTR [esp+ebx*2],al
  439c5c:	push   es
  439c5d:	add    BYTE PTR [ebx-0x2f0900e6],al
  439c63:	add    BYTE PTR [eax],al
  439c65:	add    BYTE PTR [ecx+0x28],dl
  439c68:	call   eax
  439c6a:	jmp    0x439ce7
  439c6c:	inc    ebp
  439c6d:	push   es
  439c6e:	sbb    edx,ebp
  439c70:	cmp    al,0x23
  439c72:	repz adc edi,eax
  439c75:	sbb    eax,0x8df7b73
  439c7a:	sbb    ah,BYTE PTR ds:0x3a29aafe
  439c81:	mov    ebp,0x8de5b78
  439c86:	gs and cl,bh
  439c89:	mov    ds:0xa0f92e1f,eax
  439c8e:	pop    es
  439c8f:	sbb    bh,cl
  439c91:	test   eax,0xa8f925ff
  439c96:	pop    es
  439c97:	and    bh,cl
  439c99:	or     bh,bh
  439c9b:	sbb    eax,0xe3350426
  439ca0:	add    edi,edi
  439ca2:	jns    0x439c7f
  439ca4:	fmul   QWORD PTR [eax]
  439ca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ca7:	sub    BYTE PTR [eax-0x2e29afc],dl
  439cad:	jl     0x439ce2
  439caf:	and    al,0x3a
  439cb1:	shr    BYTE PTR ds:0x300003db,1
  439cb7:	jns    0x439c81
  439cb9:	sbb    al,0x35
  439cbb:	fcmovnu st,st(5)
  439cbd:	jg     0x439c6d
  439cbf:	cmp    eax,0x87ed730a
  439cc4:	jbe    0x439cbd
  439cc6:	sbb    al,0x99
  439cc8:	cmp    eax,0x85
  439ccd:	scas   al,BYTE PTR es:[edi]
  439cce:	cld    
  439ccf:	or     BYTE PTR [edx+0x74940bf3],dh
  439cd5:	lds    edx,FWORD PTR [ebx]
  439cd7:	push   0x66fbb974
  439cdc:	je     0x439c9b
  439cde:	add    esp,DWORD PTR [edx+0x74]
  439ce1:	and    DWORD PTR [edx+eiz*2],ebp
  439ce4:	je     0x439cfb
  439ce6:	xor    al,0x67
  439ce8:	je     0x439cf3
  439cea:	sbb    al,0x66
  439cec:	je     0x439cfb
  439cee:	pop    es
  439cef:	jecxz  0x439d60
  439cf1:	inc    edi
  439cf2:	in     eax,0xda
  439cf4:	jo     0x439d35
  439cf6:	or     ebx,edx
  439cf8:	ins    DWORD PTR es:[edi],dx
  439cf9:	inc    edi
  439cfa:	or     eax,0x113f6ecb
  439cff:	ret    
  439d00:	scas   eax,DWORD PTR es:[edi]
  439d01:	and    BYTE PTR ds:0xf920b0bb,dl
  439d07:	mov    dl,0xad
  439d09:	and    ch,bh
  439d0b:	stos   BYTE PTR es:[edi],al
  439d0c:	scas   al,BYTE PTR es:[edi]
  439d0d:	and    BYTE PTR [ecx],al
  439d0f:	and    ecx,DWORD PTR ds:0x8ce0507
  439d15:	mov    cl,0xc3
  439d17:	out    0x2,eax
  439d19:	jbe    0x439cde
  439d1b:	add    eax,0x73fe410d
  439d20:	or     BYTE PTR [ecx+0x5],bh
  439d23:	out    0x80,eax
  439d25:	xor    eax,DWORD PTR [edx]
  439d27:	mov    dl,0x54
  439d29:	xor    ebx,eax
  439d2b:	out    0x3,eax
  439d2d:	xchg   esi,eax
  439d2e:	sub    DWORD PTR [ecx+eiz*8],ebp
  439d31:	add    BYTE PTR [eax],al
  439d33:	add    BYTE PTR [edx-0x3d],cl
  439d36:	les    eax,FWORD PTR [ebx-0x491e1b38]
  439d3c:	repnz push ds
  439d3e:	pop    ds
  439d3f:	cmp    edi,DWORD PTR [edx]
  439d41:	sub    DWORD PTR [esi-0x161a4f77],esp
  439d47:	jne    0x439d44
  439d49:	jnp    0x439db6
  439d4b:	mov    ?,ebx
  439d4d:	add    ah,bh
  439d4f:	add    edx,DWORD PTR [esi]
  439d51:	sub    DWORD PTR [esi+0x44],esp
  439d54:	imul   DWORD PTR [ecx]
  439d56:	aaa    
  439d57:	inc    ecx
  439d58:	or     al,bl
  439d5a:	add    eax,0x66e4b03e
  439d5f:	mov    edi,0x5bbf9d6
  439d64:	(bad)  
  439d66:	aas    
  439d67:	cmp    eax,0x620044ea
  439d6c:	mov    ah,0xb
  439d6e:	or     DWORD PTR [edi-0x19],esi
  439d71:	jnp    0x439cf7
  439d73:	ja     0x439d6c
  439d75:	(bad)  
  439d76:	(bad)  
  439d77:	call   0x29c0a46f
  439d7c:	jmp    0x439dab
  439d7e:	shr    BYTE PTR [edx],1
  439d80:	test   bl,0x1c
  439d83:	pop    es
  439d84:	mov    ah,0xa
  439d86:	cmp    BYTE PTR [edx+edx*4-0x1],0x72
  439d8b:	out    dx,eax
  439d8c:	enter  0xf830,0xee
  439d90:	xlat   BYTE PTR ds:[ebx]
  439d91:	imul   eax,DWORD PTR [ebp-0x4e006dd4],0xf1
  439d9b:	jne    0x439d20
  439d9d:	mov    ch,cl
  439d9f:	in     al,dx
  439da0:	push   es
  439da1:	add    dl,ch
  439da3:	lock test eax,0x572fedbf
  439da9:	mov    ebp,0x122da6
  439dae:	jmp    0x24c8a4a3
  439db3:	push   edx
  439db4:	push   DWORD PTR [ecx-0x47140fd7]
  439dba:	jmp    0xf8bca4af
  439dbf:	or     bl,bh
  439dc1:	icebp  
  439dc2:	mov    ?,edi
  439dc4:	test   eax,0xacf7df7a
  439dc9:	add    DWORD PTR [ecx+0x76f92ea7],edx
  439dcf:	mov    bl,0x1e
  439dd1:	scas   al,BYTE PTR es:[edi]
  439dd2:	je     0x439dab
  439dd4:	sub    eax,0x27eaac85
  439dd9:	inc    esp
  439dda:	or     dh,BYTE PTR [edx-0x3c]
  439ddd:	sbb    al,0xeb
  439ddf:	mov    bl,0x45
  439de1:	inc    ebx
  439de2:	repz lock push es
  439de5:	add    BYTE PTR [eax],al
  439de7:	fidivr DWORD PTR [esi+0x3d]
  439dea:	and    edx,ebp
  439dec:	mov    cl,0x3f
  439dee:	add    edi,esp
  439df0:	stos   BYTE PTR es:[edi],al
  439df1:	(bad)  
  439df2:	dec    edx
  439df4:	push   0x10
  439df6:	call   0x3a8f07
  439dfb:	pop    ecx
  439dfc:	imul   ecx,DWORD PTR [edi],0x1
  439e02:	pop    edi
  439e03:	pop    esp
  439e04:	jl     0x439e83
  439e06:	mov    esp,0x2637602
  439e0b:	xchg   eax,edi
  439e0d:	jmp    DWORD PTR [ebp-0x753fcb19]
  439e13:	add    eax,DWORD PTR [eax]
  439e15:	jl     0x439e93
  439e17:	jl     0x439dd3
  439e19:	shl    DWORD PTR [eax+0x19c18106],0xe2
  439e20:	push   es
  439e21:	and    DWORD PTR [eax+0x90b6cfd],0xffffffea
  439e28:	push   DWORD PTR [ebx+0x18]
  439e2b:	fistp  DWORD PTR [ecx-0x8]
  439e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e2f:	jmp    0x439deb
  439e31:	and    DWORD PTR [eax-0x36c89304],0xffffffe9
  439e38:	stc    
  439e39:	je     0x439e97
  439e3b:	fisttp DWORD PTR [ecx-0x8]
  439e3e:	gs jmp 0x439dfb
  439e41:	and    DWORD PTR [ebx-0x1],0x6c
  439e45:	push   es
  439e46:	jb     0x439e8b
  439e48:	icebp  
  439e49:	push   DWORD PTR [ebp-0x41]
  439e4c:	jp     0x439e47
  439e4e:	or     al,0x76
  439e50:	jmp    edi
  439e52:	data16 jmp 0x439e4b
  439e55:	dec    DWORD PTR [ecx+0x7f]
  439e58:	icebp  
  439e59:	pop    es
  439e5a:	das    
  439e5b:	add    eax,0xeb9231e8
  439e60:	test   bl,0xf3
  439e63:	pushf  
  439e64:	cmp    cl,BYTE PTR [ecx]
  439e66:	add    BYTE PTR [eax],al
  439e68:	add    BYTE PTR [esi+0x1f],bh
  439e6b:	and    eax,0x34cdeb22
  439e70:	mov    ebp,0xf93027db
  439e75:	fsubr  QWORD PTR [ecx+0x6af215be]
  439e7b:	loop   0x439ef9
  439e7d:	ss push ecx
  439e7f:	add    edi,DWORD PTR [ebp+0x1b6bac]
  439e85:	repz das 
  439e87:	std    
  439e88:	test   BYTE PTR [esi],ch
  439e8a:	push   ecx
  439e8b:	push   es
  439e8c:	mov    dl,0x33
  439e8e:	das    
  439e8f:	clc    
  439e90:	mov    eax,0x78fd2ff3
  439e95:	add    cl,BYTE PTR [eax]
  439e97:	div    edx
  439e99:	xchg   esp,eax
  439e9a:	xor    eax,0x34e57b82
  439e9f:	mov    bh,0x2d
  439ea1:	fwait
  439ea2:	inc    eax
  439ea3:	cs stc 
  439ea5:	jl     0x439f18
  439ea7:	clc    
  439ea8:	mov    edi,0x7bfd2ff3
  439ead:	push   ss
  439eae:	xchg   edi,eax
  439eaf:	inc    edx
  439eb0:	mov    edi,0xbf8c2c59
  439eb5:	jo     0x439f06
  439eb7:	push   es
  439eb8:	jge    0x439f13
  439eba:	inc    esi
  439ebb:	mov    al,0x4
  439ebd:	jo     0x439f26
  439ebf:	or     al,0x74
  439ec1:	loop   0x439f3a
  439ec3:	inc    esi
  439ec4:	icebp  
  439ec5:	cmp    al,0x7d
  439ec7:	inc    edx
  439ec8:	jge    0x439f03
  439eca:	inc    ebp
  439ecb:	mov    al,0x1
  439ecd:	add    BYTE PTR [eax],al
  439ecf:	add    BYTE PTR [ebx],bl
  439ed1:	je     0x439f01
  439ed3:	stc    
  439ed4:	and    al,0x71
  439ed6:	and    eax,0x359d27b1
  439edb:	test   DWORD PTR [esi-0x2fbcfbc7],ebp
  439ee1:	push   es
  439ee2:	data16 shl bh,0x8
  439ee6:	es inc edx
  439ee8:	mov    al,0x0
  439eea:	out    0x3,eax
  439eec:	repz push es
  439eee:	pop    esi
  439eef:	ror    BYTE PTR [edi],0x16
  439ef2:	jns    0x439eb7
  439ef4:	in     eax,0xe2
  439ef6:	jns    0x439efb
  439ef8:	repz push es
  439efa:	mov    dl,0x1a
  439efc:	retf   
  439efd:	inc    ecx
  439efe:	xor    edi,DWORD PTR [edx]
  439f00:	retf   0xa489
  439f03:	adc    edi,ebp
  439f05:	call   0xafe8:0xfd3886e8
  439f0c:	in     al,dx
  439f0d:	mov    DWORD PTR [ecx+edx*1+0x2ee4a5f2],ecx
  439f14:	in     al,0x2e
  439f16:	xor    bl,BYTE PTR [bp+si+0x2625]
  439f1b:	clc    
  439f1c:	push   esp
  439f1d:	push   es
  439f1e:	out    0x3,eax
  439f20:	pand   mm5,QWORD PTR [edi+0x46]
  439f24:	inc    esp
  439f25:	xor    bl,ah
  439f27:	mov    bh,BYTE PTR [ecx+ecx*4]
  439f2a:	enter  0xf609,0x20
  439f2e:	fldcw  WORD PTR [esi+0xcc08a01]
  439f34:	add    BYTE PTR [eax],al
  439f36:	add    al,ch
  439f38:	out    0x65,al
  439f3a:	cmp    ebx,DWORD PTR [esi-0x67]
  439f3d:	int    0x84
  439f3f:	pop    esp
  439f40:	or     BYTE PTR [ebx],dh
  439f42:	adc    bl,BYTE PTR [ebx-0x45]
  439f45:	cdq    
  439f46:	cmp    DWORD PTR [edx+0x49],ecx
  439f49:	ds jmp 0x3c84:0xdd9b
  439f50:	push   cs
  439f51:	or     eax,DWORD PTR [edx]
  439f53:	sbb    ecx,ebx
  439f55:	jns    0x439f90
  439f57:	sub    cl,BYTE PTR [ecx-0x71]
  439f5a:	cld    
  439f5b:	and    BYTE PTR ds:0xc9667600,ah
  439f61:	adc    eax,0x7d024de8
  439f66:	lods   al,BYTE PTR ds:[esi]
  439f67:	mov    db7,esi
  439f6a:	es cmp al,0xfb
  439f6d:	(bad)  
  439f6e:	call   0xa4c8a663
  439f73:	xlat   BYTE PTR ds:[ebx]
  439f74:	lss    ebp,FWORD PTR [ecx-0x1647200f]
  439f7b:	lock push es
  439f7d:	jns    0x439f57
  439f7f:	or     bl,al
  439f81:	repz or ah,BYTE PTR cs:[edx-0x5f0c0086]
  439f89:	sbb    eax,0xf915ea11
  439f8e:	push   ss
  439f8f:	cs loopne 0x439f51
  439f92:	jmp    0xdcbfa687
  439f97:	jns    0x439ffe
  439f99:	mov    edi,0x13
  439f9e:	repz mov edi,DWORD PTR [edi+0x7d0dd06a]
  439fa5:	repz cmc 
  439fa7:	xchg   edi,eax
  439fa8:	add    ecx,edx
  439faa:	mov    edi,0x37def918
  439faf:	das    
  439fb0:	loop   0x439f8c
  439fb2:	mov    ebx,0xd24851d
  439fb7:	and    al,0x44
  439fb9:	or     ch,BYTE PTR [esi-0x38]
  439fbc:	sbb    al,0xeb
  439fbe:	mov    bh,0x45
  439fc0:	inc    ebx
  439fc1:	shl    eax,cl
  439fc3:	push   es
  439fc4:	add    cl,ch
  439fc6:	jg     0x439f90
  439fc8:	sbb    al,0xf6
  439fca:	ret    0xfec6
  439fcd:	fstp   TBYTE PTR [ebx+0x7be90006]
  439fd3:	std    
  439fd4:	out    0xe3,eax
  439fd6:	fcomp  QWORD PTR ds:0x5c9900f9
  439fdc:	syscall 
  439fde:	adc    BYTE PTR es:[ebx+0x7d],bh
  439fe2:	xor    al,0x7
  439fe4:	ja     0x439fe8
  439fe6:	jno    0x43a002
  439fe8:	loope  0x439f9f
  439fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439feb:	fdivrp st(6),st
  439fed:	ret    
  439fee:	(bad)  
  439ff0:	(bad)  
  439ff1:	dec    DWORD PTR [edx]
  439ff3:	pop    esp
  439ff4:	push   ds
  439ff5:	mov    DWORD PTR [eax],ebx
  439ff7:	leave  
  439ff8:	loope  0x439ffe
  439ffa:	arpl   cx,cx
  439ffc:	jp     0x439fdf
  439ffe:	int    0x8a
  43a000:	repnz or al,0x0
  43a003:	add    BYTE PTR [eax],al
  43a005:	xchg   edi,eax
  43a006:	adc    bh,BYTE PTR [ebx-0x7]
  43a009:	rcr    BYTE PTR [ebx+0xa],cl
  43a00c:	call   0x3a7657
  43a011:	or     DWORD PTR [ebx+0x5570ff2],ecx
  43a017:	call   0xf722a4a5
  43a01c:	ret    
  43a01d:	add    bl,BYTE PTR [esp+ebp*8-0x1]
  43a021:	popf   
  43a022:	(bad)  
  43a023:	cmp    eax,0x1c648b1a
  43a028:	adc    DWORD PTR [edi+0x2a],0xfffffffb
  43a02c:	ret    0x4555
  43a02f:	adc    eax,DWORD PTR [eax]
  43a031:	mov    al,BYTE PTR [edi]
  43a033:	add    BYTE PTR [ebx-0x49f7d839],cl
  43a039:	sbb    cl,BYTE PTR [edx]
  43a03b:	xor    eax,0x75abf
  43a040:	jg     0x43a07d
  43a042:	out    dx,eax
  43a043:	lahf   
  43a044:	repz popf 
  43a046:	fstp   TBYTE PTR [edx+0x7d]
  43a049:	and    al,0x24
  43a04b:	ja     0x43a074
  43a04d:	bound  esi,QWORD PTR [edi]
  43a04f:	out    dx,eax
  43a050:	call   FWORD PTR [ebp-0x39]
  43a053:	xor    al,0xc0
  43a055:	repz sub eax,0x17affffd
  43a05b:	mov    WORD PTR [esi-0x78ff88ce],?
  43a061:	xor    dh,BYTE PTR [eax-0x688ff6de]
  43a067:	push   es
  43a068:	jae    0x43a06a
  43a06a:	add    BYTE PTR [eax],al
  43a06c:	clc    
  43a06d:	mov    al,0x3a
  43a06f:	pop    es
  43a070:	jg     0x43a0a5
  43a072:	and    eax,0x30c4052e
  43a077:	mov    ebp,0xf92d120b
  43a07c:	in     al,dx
  43a07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a07e:	mov    esi,0xde72f215
  43a083:	jl     0x43a0bb
  43a085:	or     eax,0x73acbcfe
  43a08a:	pop    ss
  43a08b:	add    bl,dh
  43a08d:	das    
  43a08e:	std    
  43a08f:	test   BYTE PTR [esi],ch
  43a091:	dec    ebp
  43a092:	add    dh,BYTE PTR [edx-0x4707d0cd]
  43a098:	repz das 
  43a09a:	std    
  43a09b:	js     0x43a09f
  43a09d:	or     bl,cl
  43a09f:	in     al,dx
  43a0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a0a1:	or     DWORD PTR [ebp+0x7b],edi
  43a0a4:	add    eax,0x8b4db329
  43a0a9:	sbb    al,0x30
  43a0ab:	stc    
  43a0ac:	mov    ebp,gs
  43a0ae:	idiv   BYTE PTR [edi+0x7bfd2ff3]
  43a0b4:	ss xchg edi,eax
  43a0b6:	ds mov edi,0xbf8c3489
  43a0bc:	jo     0x43a10d
  43a0be:	add    bh,BYTE PTR [ebp+0x69]
  43a0c1:	sbb    al,0xb0
  43a0c3:	add    DWORD PTR [ebx+0x50],ecx
  43a0c6:	xor    cl,bh
  43a0c8:	push   esp
  43a0c9:	ins    DWORD PTR es:[edi],dx
  43a0ca:	jle    0x43a0c2
  43a0cc:	(bad)  
  43a0cd:	(bad)  
  43a0cf:	out    0x0,eax
  43a0d1:	add    BYTE PTR [eax],al
  43a0d3:	push   ds
  43a0d4:	pop    es
  43a0d5:	pushf  
  43a0d6:	cmp    al,BYTE PTR ss:[esi+0x66]
  43a0da:	cmp    ecx,ebp
  43a0dc:	fwait
  43a0dd:	test   BYTE PTR [edx+0x1b130724],0xa6
  43a0e4:	pop    ds
  43a0e5:	out    dx,eax
  43a0e6:	mov    eax,0x30a72f02
  43a0eb:	sbb    ah,BYTE PTR [edx]
  43a0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a0ee:	add    BYTE PTR ds:0x860af412,0x1f
  43a0f5:	out    dx,eax
  43a0f6:	mov    bh,0xf2
  43a0f8:	cs xchg edi,eax
  43a0fa:	xor    dl,bh
  43a0fc:	and    DWORD PTR [esi],esp
  43a0fe:	sub    ecx,DWORD PTR [esi+0x6e364a14]
  43a104:	retf   
  43a105:	fadd   QWORD PTR [eax+esi*1]
  43a108:	out    0x65,al
  43a10a:	shl    bh,0x4
  43a10d:	es inc edi
  43a10f:	mov    edi,0xc7b4ff52
  43a114:	and    edi,esp
  43a116:	add    esi,ebx
  43a118:	push   es
  43a119:	out    0x3,eax
  43a11b:	repz push es
  43a11d:	xchg   edi,eax
  43a11e:	sub    DWORD PTR [esi-0xcececdf],0x6
  43a125:	div    DWORD PTR [ecx+0x3e7219f]
  43a12b:	repz push es
  43a12d:	out    0x3,eax
  43a12f:	repz push es
  43a131:	mov    cl,0x7e
  43a133:	xchg   BYTE PTR [ecx],ah
  43a135:	mov    ds:0x11,eax
  43a13a:	repz push es
  43a13c:	adc    esi,DWORD PTR [edi+esi*2-0xcfc18df]
  43a143:	push   es
  43a144:	out    0x3,eax
  43a146:	repz push es
  43a148:	or     ecx,DWORD PTR [edx+0x13e7215e]
  43a14e:	repz push es
  43a150:	add    BYTE PTR [ebp-0x7e],ah
  43a153:	and    bh,cl
  43a155:	jmp    0xe943a84a
  43a15a:	lock push es
  43a15c:	add    BYTE PTR [edi+0x6a],bh
  43a15f:	and    edi,ecx
  43a161:	xor    DWORD PTR [edx],eax
  43a163:	pop    es
  43a164:	add    BYTE PTR ds:0xe9f92262,cl
  43a16a:	lock push es
  43a16c:	add    cl,ch
  43a16e:	lock push es
  43a170:	add    BYTE PTR [ebp+0x21f9237a],cl
  43a176:	loop   0x43a17e
  43a178:	add    BYTE PTR [ecx+0x42],dl
  43a17b:	and    bh,cl
  43a17d:	jmp    0xe943a872
  43a182:	lock push es
  43a184:	add    bl,ch
  43a186:	ins    BYTE PTR es:[edi],dx
  43a187:	and    bh,cl
  43a189:	jge    0x43a18d
  43a18b:	pop    es
  43a18c:	add    BYTE PTR [ecx-0x1606dc7b],dl
  43a192:	lock push es
  43a194:	add    cl,ch
  43a196:	lock push es
  43a198:	add    BYTE PTR [edi+0x6b],ah
  43a19b:	and    bh,cl
  43a19d:	xchg   ebp,eax
  43a19e:	add    BYTE PTR [eax],al
  43a1a0:	add    dh,ah
  43a1a2:	push   es
  43a1a3:	add    BYTE PTR [ecx],cl
  43a1a5:	addr16 and edi,ecx
  43a1a8:	jmp    0xe943a89d
  43a1ad:	lock push es
  43a1af:	add    BYTE PTR [edi+0x6c],cl
  43a1b2:	and    bh,cl
  43a1b4:	inc    ebp
  43a1b5:	out    0x6,eax
  43a1b7:	add    BYTE PTR ds:0xe9f92354,al
  43a1bd:	lock push es
  43a1bf:	add    cl,ch
  43a1c1:	lock push es
  43a1c3:	add    BYTE PTR [ecx],dh
  43a1c5:	jne    0x43a1e9
  43a1c7:	stc    
  43a1c8:	cdq    
  43a1c9:	cmc    
  43a1ca:	push   es
  43a1cb:	add    BYTE PTR [eax],al
  43a1cd:	jbe    0x43a223
  43a1cf:	cld    
  43a1d0:	dec    DWORD PTR [edx+0x4]
  43a1d3:	add    BYTE PTR [eax],al
  43a1d5:	pop    edx
  43a1d6:	add    al,0x0
  43a1d8:	add    BYTE PTR [esi],bh
  43a1da:	mov    edi,ebx
  43a1dc:	inc    edx
  43a1de:	repz (bad) 
  43a1e0:	inc    edx
  43a1e2:	jo     0x43a1e0
  43a1e4:	call   FWORD PTR [edx]
  43a1e6:	add    al,0x0
  43a1e8:	add    BYTE PTR [edx],bl
  43a1ea:	add    al,0x0
  43a1ec:	add    BYTE PTR [esi+0x75],bl
  43a1ef:	sti    
  43a1f0:	(bad)  
  43a1f1:	dec    BYTE PTR [edi]
  43a1f3:	add    BYTE PTR [eax],al
  43a1f5:	repnz push ebp
  43a1f7:	cld    
  43a1f8:	call   FWORD PTR [edx]
  43a1fa:	add    al,0x0
  43a1fc:	add    BYTE PTR [edx],cl
  43a1fe:	add    al,0x0
  43a200:	add    BYTE PTR [edx+0x75],cl
  43a203:	sti    
  43a204:	inc    DWORD PTR [eax]
  43a206:	add    BYTE PTR [eax],al
  43a208:	push   cs
  43a209:	idiv   bh
  43a20b:	jmp    DWORD PTR [edx-0x350003aa]
  43a211:	add    eax,DWORD PTR [eax]
  43a213:	add    dl,cl
  43a215:	add    eax,DWORD PTR [eax]
  43a217:	add    BYTE PTR [eax+0x75],bl
  43a21a:	sti    
  43a21b:	(bad)  
  43a21c:	out    dx,al
  43a21d:	cmc    
  43a21e:	(bad)  
  43a21f:	jmp    FWORD PTR [edx-0x350003ac]
  43a225:	add    eax,DWORD PTR [eax]
  43a227:	add    BYTE PTR [edx+0x32000003],bl
  43a22d:	jne    0x43a22a
  43a22f:	inc    DWORD PTR [esi]
  43a231:	hlt    
  43a232:	(bad)  
  43a233:	jmp    FWORD PTR [edx+0x71]
  43a236:	cld    
  43a237:	call   FWORD PTR [edx-0x65fffffd]
  43a23d:	add    eax,DWORD PTR [eax]
  43a23f:	add    ah,cl
  43a241:	js     0x43a23e
  43a243:	jmp    esi
  43a245:	cld    
  43a246:	(bad)  
  43a247:	push   ebx
  43a249:	sub    eax,0x2df3fffd
  43a24e:	std    
  43a24f:	push   ebx
  43a251:	sub    eax,0x2df3fffd
  43a256:	std    
  43a257:	push   ebx
  43a259:	sub    eax,0xebf3fffd
  43a25e:	test   ch,bh
  43a260:	cmp    al,0x11
  43a262:	test   ebp,edi
  43a264:	xor    al,0xff
  43a266:	test   ch,bh
  43a268:	sub    al,0x9b
  43a26a:	test   ch,bh
  43a26c:	add    BYTE PTR [eax],al
  43a26e:	add    BYTE PTR [ebx+eax*8],ah
  43a271:	test   ch,bh
  43a273:	sbb    al,0x6d
  43a275:	test   ebp,edi
  43a277:	adc    al,0x7b
  43a279:	test   ebp,edi
  43a27b:	or     al,0x8f
  43a27d:	test   ebp,edi
  43a27f:	add    al,0x97
  43a281:	test   ch,bh
  43a283:	cld    
  43a284:	adc    dh,BYTE PTR [ebp-0x3]
  43a287:	hlt    
  43a288:	or     al,0x7c
  43a28a:	std    
  43a28b:	in     al,dx
  43a28c:	add    bh,BYTE PTR [ebp+edi*8-0x1c]
  43a290:	jl     0x43a307
  43a292:	std    
  43a293:	fcom   QWORD PTR [edx+0x75]
  43a296:	std    
  43a297:	aam    0x4a
  43a299:	jne    0x43a298
  43a29b:	int3   
  43a29c:	ret    0xfd7b
  43a29f:	les    ecx,FWORD PTR [edx-0xd430284]
  43a2a5:	jnp    0x43a2a4
  43a2a7:	mov    ah,0xd6
  43a2a9:	jnp    0x43a2a8
  43a2ab:	lods   al,BYTE PTR ds:[esi]
  43a2ac:	or     BYTE PTR [ebp+edi*8-0x5c],bh
  43a2b0:	cli    
  43a2b1:	jnp    0x43a2b0
  43a2b3:	pushf  
  43a2b4:	ds jl  0x43a2b4
  43a2b7:	xchg   esp,eax
  43a2b8:	push   esi
  43a2b9:	jl     0x43a2b8
  43a2bb:	mov    WORD PTR [edx-0x557b0284],es
  43a2c1:	jp     0x43a2c0
  43a2c3:	jl     0x43a2cc
  43a2c5:	mov    DWORD PTR [esi+esi*2+0x1e],edi
  43a2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2ca:	jl     0x43a33a
  43a2cc:	push   ds
  43a2cd:	mov    ebx,0xbf1e667c
  43a2d2:	jl     0x43a2d4
  43a2d4:	add    BYTE PTR [eax],al
  43a2d6:	pop    esi
  43a2d7:	push   ds
  43a2d8:	mov    edi,0xe11e567c
  43a2dd:	jge    0x43a32d
  43a2df:	push   ds
  43a2e0:	iret   
  43a2e1:	jge    0x43a329
  43a2e3:	push   ds
  43a2e4:	adc    ecx,DWORD PTR [ebx+0x3e71e3e]
  43a2ea:	repz push es
  43a2ec:	popf   
  43a2ed:	sub    DWORD PTR [esi],0x2681b31e
  43a2f3:	push   ds
  43a2f4:	popf   
  43a2f5:	sbb    DWORD PTR [esi],0x1681351e
  43a2fb:	push   ds
  43a2fc:	push   edi
  43a2fd:	or     DWORD PTR [esi],0x681ed1e
  43a303:	push   ds
  43a304:	add    eax,DWORD PTR [edx-0x7cfce202]
  43a30a:	neg    BYTE PTR ds:0x6f303e7
  43a310:	popa   
  43a311:	and    dh,0x1d
  43a314:	cmc    
  43a315:	sbb    dh,0x1d
  43a318:	aas    
  43a319:	jg     0x43a2f1
  43a31b:	sbb    eax,0x1dce8063
  43a320:	scas   eax,DWORD PTR es:[edi]
  43a321:	add    dh,0x1d
  43a324:	ret    
  43a325:	cmp    BYTE PTR [esi-0x497f40e3],0x1d
  43a32c:	lods   eax,DWORD PTR ds:[esi]
  43a32d:	sub    BYTE PTR [esi-0x597f58e3],0x1d
  43a334:	rol    DWORD PTR [eax-0x7f30e262],cl
  43a33a:	add    BYTE PTR [eax],al
  43a33c:	add    BYTE PTR [esi-0x7180f0e3],dl
  43a342:	sbb    eax,0x1b735300
  43a347:	stc    
  43a348:	and    esp,edi
  43a34a:	sbb    edi,ecx
  43a34c:	shl    DWORD PTR [ebx+0x1b],0xf9
  43a350:	jmp    0x7943aa45
  43a355:	sbb    BYTE PTR [ebx],0xf9
  43a358:	jmp    0x4743aa4d
  43a35d:	xchg   BYTE PTR [edx],bl
  43a35f:	stc    
  43a360:	pop    ecx
  43a361:	sahf   
  43a362:	sbb    bh,cl
  43a364:	(bad)  
  43a365:	xchg   esi,eax
  43a366:	sbb    bh,cl
  43a368:	jae    0x43a2f8
  43a36a:	sbb    bh,cl
  43a36c:	mov    bh,0x86
  43a36e:	sbb    bh,cl
  43a370:	xchg   DWORD PTR [esi+0x1a],ebx
  43a373:	stc    
  43a374:	fwait
  43a375:	push   esi
  43a376:	sbb    bh,cl
  43a378:	(bad)  
  43a379:	dec    esi
  43a37a:	sbb    bh,cl
  43a37c:	repz inc esp
  43a37e:	sbb    bh,cl
  43a380:	xlat   BYTE PTR ds:[ebx]
  43a381:	pop    esp
  43a382:	sbb    bh,cl
  43a384:	iret   
  43a385:	push   esp
  43a386:	sbb    bh,cl
  43a388:	mov    bh,0x4c
  43a38a:	sbb    bh,cl
  43a38c:	mov    bl,0x44
  43a38e:	sbb    bh,cl
  43a390:	lds    ebx,FWORD PTR [ebx+ebx*1+0x1b94dff9]
  43a397:	stc    
  43a398:	mov    gs:0xa35df91b,eax
  43a39e:	sbb    edi,ecx
  43a3a0:	test   DWORD PTR [eax],eax
  43a3a2:	add    BYTE PTR [eax],al
  43a3a4:	sbb    DWORD PTR [ebx],0xfffffff9
  43a3a7:	sub    DWORD PTR [ebx-0x7cf206e5],eax
  43a3ad:	sbb    edi,ecx
  43a3af:	sbb    eax,0xf9f91b83
  43a3b4:	pop    ebp
  43a3b5:	sbb    edi,ecx
  43a3b7:	ret    
  43a3b8:	push   ebp
  43a3b9:	sbb    edi,ecx
  43a3bb:	iret   
  43a3bc:	dec    ebp
  43a3bd:	sbb    edi,ecx
  43a3bf:	add    BYTE PTR [eax+0x6d],bh
  43a3c2:	cld    
  43a3c3:	(bad)  
  43a3c4:	js     0x43a433
  43a3c6:	cld    
  43a3c7:	dec    DWORD PTR [eax]
  43a3c9:	ins    DWORD PTR es:[edi],dx
  43a3ca:	cld    
  43a3cb:	call   DWORD PTR [edx]
  43a3cd:	ins    BYTE PTR es:[edi],dx
  43a3ce:	cld    
  43a3cf:	push   esi
  43a3d1:	ins    BYTE PTR es:[edi],dx
  43a3d2:	cld    
  43a3d3:	(bad)  
  43a3d4:	in     al,dx
  43a3d5:	ins    BYTE PTR es:[edi],dx
  43a3d6:	cld    
  43a3d7:	jmp    FWORD PTR [esi+0x6d]
  43a3da:	cld    
  43a3db:	inc    DWORD PTR [eax-0x63000393]
  43a3e1:	ins    DWORD PTR es:[edi],dx
  43a3e2:	cld    
  43a3e3:	jmp    FWORD PTR [esi+0x6d]
  43a3e6:	cld    
  43a3e7:	inc    DWORD PTR [esi-0x3000393]
  43a3ed:	imul   edi,esp,0xfc58f2ff
  43a3f3:	dec    DWORD PTR [eax+0x56]
  43a3f6:	cld    
  43a3f7:	call   esi
  43a3f9:	pop    eax
  43a3fa:	cld    
  43a3fb:	(bad)  
  43a3fc:	ficomp DWORD PTR [eax-0x4]
  43a3ff:	(bad)  
  43a400:	jmp    0xfc58:0xf0fffc58
  43a407:	inc    DWORD PTR [eax]
  43a409:	add    BYTE PTR [eax],al
  43a40b:	xchg   edx,eax
  43a40c:	push   ebp
  43a40d:	cld    
  43a40e:	jmp    FWORD PTR [ebp+edx*2+0x565cfffc]
  43a415:	cld    
  43a416:	call   FWORD PTR [esi]
  43a418:	push   esi
  43a419:	cld    
  43a41a:	(bad)  
  43a41b:	cmp    dl,BYTE PTR [esi-0x4]
  43a41e:	(bad)  
  43a41f:	cmp    BYTE PTR [esi-0x4],dl
  43a422:	jmp    FWORD PTR [esi+edx*2]
  43a425:	cld    
  43a426:	jmp    DWORD PTR [esi+edx*2+0x56c8fffc]
  43a42d:	cld    
  43a42e:	call   DWORD PTR [edx+0x6afffc56]
  43a434:	push   esi
  43a435:	cld    
  43a436:	inc    DWORD PTR [esi+edx*2-0x5a0c0004]
  43a43d:	scas   eax,DWORD PTR es:[edi]
  43a43e:	cld    
  43a43f:	pushf  
  43a440:	xchg   edi,eax
  43a441:	scas   eax,DWORD PTR es:[edi]
  43a442:	cld    
  43a443:	xchg   esp,eax
  43a444:	mov    ch,0xaf
  43a446:	cld    
  43a447:	mov    ebp,es
  43a449:	scas   eax,DWORD PTR es:[edi]
  43a44a:	cld    
  43a44b:	test   ch,ah
  43a44d:	scas   eax,DWORD PTR es:[edi]
  43a44e:	cld    
  43a44f:	jl     0x43a45a
  43a451:	mov    al,0xfc
  43a453:	je     0x43a48c
  43a455:	test   eax,0xa9276cfc
  43a45a:	cld    
  43a45b:	and    edi,DWORD PTR fs:[ebp-0x3]
  43a45f:	pop    esp
  43a460:	sub    DWORD PTR [ebp-0x3],edi
  43a463:	push   esp
  43a464:	in     eax,dx
  43a465:	cmp    ebp,0x4c
  43a468:	std    
  43a469:	cmp    ebp,0x44
  43a46c:	fwait
  43a46d:	(bad)  
  43a46e:	std    
  43a46f:	add    BYTE PTR [eax],al
  43a471:	add    BYTE PTR [edi+esi*4],bh
  43a474:	(bad)  
  43a475:	std    
  43a476:	xor    al,0xab
  43a478:	(bad)  
  43a479:	std    
  43a47a:	sub    al,0xe7
  43a47c:	(bad)  
  43a47d:	std    
  43a47e:	and    al,0x9
  43a480:	mov    ?,ebp
  43a482:	sbb    al,0xe5
  43a484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a485:	cld    
  43a486:	adc    al,0xe3
  43a488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a489:	cld    
  43a48a:	or     al,0x37
  43a48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a48d:	cld    
  43a48e:	add    al,0x31
  43a490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a491:	cld    
  43a492:	cld    
  43a493:	cmp    ah,BYTE PTR [esi-0x5a5d0b04]
  43a499:	cld    
  43a49a:	in     al,dx
  43a49b:	retf   0xfca5
  43a49e:	in     al,0xd6
  43a4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4a1:	cld    
  43a4a2:	fdiv   st(4),st
  43a4a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4a5:	cld    
  43a4a6:	aam    0xf0
  43a4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4a9:	cld    
  43a4aa:	int3   
  43a4ab:	jbe    0x43a453
  43a4ad:	cld    
  43a4ae:	les    esi,FWORD PTR [edx-0x3f43035b]
  43a4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4b5:	cld    
  43a4b6:	mov    ah,0x7
  43a4b8:	mov    ds:0x8b1aafa9,eax
  43a4bd:	test   eax,0xa9ad1aa7
  43a4c2:	lahf   
  43a4c3:	sbb    bl,BYTE PTR [ebp-0x40e56857]
  43a4c9:	test   eax,0xa9cf1a8f
  43a4ce:	xchg   DWORD PTR [edx],ebx
  43a4d0:	int    0xa9
  43a4d2:	jg     0x43a4ee
  43a4d4:	fild   QWORD PTR [ecx+0x77000000]
  43a4da:	sbb    bl,bl
  43a4dc:	lods   al,BYTE PTR ds:[esi]
  43a4dd:	outs   dx,DWORD PTR ds:[esi]
  43a4de:	sbb    al,bh
  43a4e0:	lods   al,BYTE PTR ds:[esi]
  43a4e1:	sbb    ah,BYTE PTR [bx+di+0x5fac]
  43a4e6:	sbb    cl,BYTE PTR [edi-0x7ae5a854]
  43a4ec:	lods   al,BYTE PTR ds:[esi]
  43a4ed:	dec    edi
  43a4ee:	sbb    dl,BYTE PTR [ecx-0x54]
  43a4f1:	inc    edi
  43a4f2:	sbb    bl,BYTE PTR [ebp-0x54]
  43a4f5:	aas    
  43a4f6:	sbb    ch,BYTE PTR [ecx]
  43a4f8:	lods   eax,DWORD PTR ds:[esi]
  43a4f9:	aaa    
  43a4fa:	sbb    dl,BYTE PTR [ecx]
  43a4fc:	lods   eax,DWORD PTR ds:[esi]
  43a4fd:	das    
  43a4fe:	sbb    bh,BYTE PTR [ecx]
  43a500:	lods   eax,DWORD PTR ds:[esi]
  43a501:	daa    
  43a502:	sbb    al,bl
  43a504:	lods   al,BYTE PTR ds:[esi]
  43a505:	pop    ds
  43a506:	sbb    ah,BYTE PTR [ebx]
  43a508:	lods   eax,DWORD PTR ds:[esi]
  43a509:	pop    ss
  43a50a:	sbb    bl,cl
  43a50c:	lods   al,BYTE PTR ds:[esi]
  43a50d:	nop    ebp
  43a510:	lods   al,BYTE PTR ds:[esi]
  43a511:	pop    es
  43a512:	sbb    bh,BYTE PTR [ebx-0x55]
  43a515:	call   FWORD PTR [ecx]
  43a517:	sub    DWORD PTR [ebx-0x54c4e609],0xab2119ef
  43a521:	out    0x19,eax
  43a523:	lea    ebp,[ebx-0x5486e621]
  43a529:	xlat   BYTE PTR ds:[ebx]
  43a52a:	sbb    DWORD PTR [ebx-0x55],ebx
  43a52d:	iret   
  43a52e:	sbb    DWORD PTR [ebx-0x55],esp
  43a531:	(bad)  
  43a532:	sbb    DWORD PTR [eax],eax
  43a534:	mov    ebx,0x8df91a88
  43a539:	mov    BYTE PTR [edx],bl
  43a53b:	stc    
  43a53c:	mov    ch,0x0
  43a53e:	add    BYTE PTR [eax],al
  43a540:	pop    eax
  43a541:	sbb    bh,cl
  43a543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a544:	pop    eax
  43a545:	sbb    bh,cl
  43a547:	fisttp QWORD PTR [eax+0x1a]
  43a54a:	stc    
  43a54b:	leave  
  43a54c:	dec    eax
  43a54d:	sbb    bh,cl
  43a54f:	fstp   QWORD PTR [eax+0x1a]
  43a552:	stc    
  43a553:	jmp    0xfa3cbfb0
  43a558:	inc    esi
  43a559:	sbb    bh,cl
  43a55b:	(bad)  
  43a55d:	sbb    bh,cl
  43a55f:	mov    ecx,0xa1f91aa6
  43a564:	sahf   
  43a565:	sbb    bh,cl
  43a567:	mov    DWORD PTR [esi-0x619e06e6],esp
  43a56d:	sbb    bh,cl
  43a56f:	push   ebp
  43a570:	xchg   BYTE PTR [edx],bl
  43a572:	stc    
  43a573:	pop    ds
  43a574:	jle    0x43a590
  43a576:	stc    
  43a577:	and    eax,0x29f91a86
  43a57c:	jle    0x43a598
  43a57e:	stc    
  43a57f:	frstor [edi+0x1a]
  43a582:	stc    
  43a583:	(bad)  
  43a584:	pop    edi
  43a585:	sbb    bh,cl
  43a587:	jmp    DWORD PTR [edi+0x1a]
  43a58a:	stc    
  43a58b:	jmp    0x923cbfef
  43a590:	inc    ebp
  43a591:	sbb    bh,cl
  43a593:	icebp  
  43a594:	push   esi
  43a595:	sbb    bh,cl
  43a597:	cdq    
  43a598:	inc    ebp
  43a599:	sbb    bh,cl
  43a59b:	jmp    0xdd43ac90
  43a5a0:	sbb    DWORD PTR [edx],0xc9f9
  43a5a6:	add    BYTE PTR [ecx-0x7e5806e6],al
  43a5ac:	sbb    bh,cl
  43a5ae:	jmp    0x43aca3
  43a5b3:	ret    0x4
  43a5b6:	add    bl,0x4
  43a5b9:	add    BYTE PTR [eax-0x7ffffb38],al
  43a5bf:	int3   
  43a5c0:	add    al,0x0
  43a5c2:	sbb    BYTE PTR [edx-0x21fffffc],0x9d
  43a5c9:	cli    
  43a5ca:	inc    DWORD PTR [esi+ebx*4-0x6]
  43a5ce:	push   DWORD PTR [eax]
  43a5d0:	sahf   
  43a5d1:	cli    
  43a5d2:	call   FWORD PTR [edx+0x28000004]
  43a5d8:	sahf   
  43a5d9:	cli    
  43a5da:	inc    DWORD PTR [edi+ebx*4]
  43a5dd:	cli    
  43a5de:	push   DWORD PTR [eax-0x61]
  43a5e1:	cli    
  43a5e2:	jmp    FWORD PTR [esi]
  43a5e4:	sahf   
  43a5e5:	cli    
  43a5e6:	dec    DWORD PTR [esi]
  43a5e8:	sahf   
  43a5e9:	cli    
  43a5ea:	(bad)  
  43a5eb:	clc    
  43a5ec:	popf   
  43a5ed:	cli    
  43a5ee:	(bad)  
  43a5ef:	in     al,dx
  43a5f0:	popf   
  43a5f1:	cli    
  43a5f2:	jmp    FWORD PTR [edi+ebx*4]
  43a5f5:	cli    
  43a5f6:	dec    DWORD PTR [esi-0x61]
  43a5f9:	cli    
  43a5fa:	push   DWORD PTR [esi]
  43a5fc:	sahf   
  43a5fd:	cli    
  43a5fe:	call   FWORD PTR [esi+ebx*4-0x6]
  43a602:	call   FWORD PTR [eax-0x62]
  43a605:	cli    
  43a606:	push   DWORD PTR [ebp+ebx*4+0xfffa]
  43a60d:	add    BYTE PTR [eax-0x49000563],ch
  43a613:	popf   
  43a614:	cli    
  43a615:	push   edx
  43a617:	pushf  
  43a618:	cli    
  43a619:	jmp    eax
  43a61b:	pushf  
  43a61c:	cli    
  43a61d:	jmp    esp
  43a61f:	pushf  
  43a620:	cli    
  43a621:	call   esp
  43a623:	pushf  
  43a624:	cli    
  43a625:	jmp    esp
  43a627:	add    eax,DWORD PTR [eax]
  43a629:	sbb    BYTE PTR [edx-0xc000563],0xfb
  43a630:	jne    0x43a62f
  43a632:	aam    0x2d
  43a634:	std    
  43a635:	push   ebx
  43a637:	fnsave [edi-0x3]
  43a63a:	les    ebp,FWORD PTR ds:0x7df3fffd
  43a640:	cmp    ebp,0xfd8115b4
  43a646:	lods   al,BYTE PTR ds:[esi]
  43a647:	xor    eax,0x5a4fd81
  43a64c:	mov    ch,bh
  43a64e:	pushf  
  43a64f:	sub    DWORD PTR [ecx+0x791794fd],eax
  43a655:	std    
  43a656:	mov    ecx,fs
  43a658:	jg     0x43a657
  43a65a:	test   ch,ch
  43a65c:	jg     0x43a65b
  43a65e:	jl     0x43a63d
  43a660:	jg     0x43a65f
  43a662:	je     0x43a623
  43a664:	jg     0x43a663
  43a666:	ins    BYTE PTR es:[edi],dx
  43a667:	xchg   ebx,eax
  43a668:	cmp    ch,0x64
  43a66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a66c:	cmp    ch,0x5c
  43a66f:	ret    
  43a670:	cmp    ch,0x0
  43a673:	add    BYTE PTR [eax],al
  43a675:	push   esp
  43a676:	rol    DWORD PTR [eax-0x7f2eb303],cl
  43a67c:	std    
  43a67d:	inc    esp
  43a67e:	add    eax,DWORD PTR [ecx-0x7efac303]
  43a684:	std    
  43a685:	xor    al,0x2f
  43a687:	cmp    ch,0x2c
  43a68a:	sub    eax,0xad24fd82
  43a68f:	jg     0x43a68e
  43a691:	sbb    al,0x99
  43a693:	jg     0x43a692
  43a695:	adc    al,0xc1
  43a697:	jg     0x43a696
  43a699:	or     al,0x9
  43a69b:	cmp    ch,0x4
  43a69e:	pop    edi
  43a69f:	cmp    ch,0xfc
  43a6a2:	jbe    0x43a624
  43a6a4:	std    
  43a6a5:	hlt    
  43a6a6:	add    BYTE PTR [eax-0x14f81303],0x80
  43a6ad:	out    0x16,al
  43a6af:	cmc    
  43a6b0:	sbb    dh,0x16
  43a6b3:	pop    es
  43a6b4:	adc    esi,0xce80fb16
  43a6ba:	push   ss
  43a6bb:	add    eax,DWORD PTR [ecx-0x7f50e93a]
  43a6c1:	mov    esi,0xb6808f16
  43a6c6:	push   ss
  43a6c7:	mov    edi,0x9b16ae80
  43a6cc:	and    BYTE PTR [esi-0x617d3cea],0x16
  43a6d3:	fild   WORD PTR [edx-0x7dece96a]
  43a6d9:	add    BYTE PTR [eax],al
  43a6db:	add    BYTE PTR [esi-0x797df4ea],cl
  43a6e1:	push   ss
  43a6e2:	pop    ds
  43a6e3:	cmp    BYTE PTR [esi+0x16],0x1f
  43a6e7:	xor    BYTE PTR [esi+0x16],0x2d
  43a6eb:	sub    BYTE PTR [esi+0x16],0x8d
  43a6ef:	and    DWORD PTR [esi+0x16],0x165e8179
  43a6f6:	arpl   WORD PTR [ecx-0x7db0e9aa],ax
  43a6fc:	dec    esi
  43a6fd:	push   ss
  43a6fe:	jne    0x43a77f
  43a700:	inc    esi
  43a701:	push   ss
  43a702:	xor    DWORD PTR [eax-0x7dbce9c2],eax
  43a708:	ss push ss
  43a70a:	inc    edi
  43a70b:	sub    BYTE PTR [esi],0x16
  43a70e:	xor    eax,0x23162682
  43a713:	sbb    BYTE PTR [esi],0x16
  43a716:	adc    DWORD PTR [esi+edx*1+0xe835916],eax
  43a71d:	push   ss
  43a71e:	arpl   WORD PTR [ebx-0x7cc8e9fa],ax
  43a724:	(bad)  
  43a725:	adc    eax,0x1470ab00
  43a72a:	stc    
  43a72b:	fwait
  43a72c:	jo     0x43a741
  43a72e:	stc    
  43a72f:	dec    ebx
  43a730:	jo     0x43a745
  43a732:	stc    
  43a733:	push   ebp
  43a734:	jo     0x43a749
  43a736:	stc    
  43a737:	out    dx,eax
  43a738:	outs   dx,DWORD PTR ds:[esi]
  43a739:	adc    edi,ecx
  43a73b:	icebp  
  43a73c:	ja     0x43a751
  43a73e:	stc    
  43a73f:	cmp    eax,0x6e000000
  43a744:	adc    edi,ecx
  43a746:	push   ecx
  43a747:	jbe    0x43a75c
  43a749:	stc    
  43a74a:	adc    ebp,DWORD PTR [esi+0x13]
  43a74d:	stc    
  43a74e:	and    esi,DWORD PTR [esi+0x13]
  43a751:	stc    
  43a752:	outs   dx,BYTE PTR gs:[esi]
  43a754:	adc    edi,ecx
  43a756:	push   ecx
  43a757:	jbe    0x43a76c
  43a759:	stc    
  43a75a:	jae    0x43a7ca
  43a75c:	adc    edi,ecx
  43a75e:	pop    ebp
  43a75f:	jbe    0x43a774
  43a761:	stc    
  43a762:	xchg   DWORD PTR [esi+0x13],ebp
  43a765:	stc    
  43a766:	(bad)  
  43a767:	jbe    0x43a77c
  43a769:	stc    
  43a76a:	xchg   ebx,eax
  43a76b:	outs   dx,BYTE PTR ds:[esi]
  43a76c:	adc    edi,ecx
  43a76e:	popf   
  43a76f:	jbe    0x43a784
  43a771:	stc    
  43a772:	and    eax,0x15f9136d
  43a777:	jne    0x43a78c
  43a779:	stc    
  43a77a:	(bad)  
  43a77c:	adc    edi,ecx
  43a77e:	sti    
  43a77f:	jbe    0x43a794
  43a781:	stc    
  43a782:	(bad)  
  43a783:	jo     0x43a798
  43a785:	stc    
  43a786:	iret   
  43a787:	jo     0x43a79c
  43a789:	stc    
  43a78a:	xchg   ebx,eax
  43a78b:	jo     0x43a7a0
  43a78d:	stc    
  43a78e:	mov    ds:0xd9f91370,eax
  43a793:	jb     0x43a7a8
  43a795:	stc    
  43a796:	retf   
  43a797:	jb     0x43a7ac
  43a799:	stc    
  43a79a:	stc    
  43a79b:	jb     0x43a7b0
  43a79d:	stc    
  43a79e:	xchg   edi,eax
  43a79f:	mov    WORD PTR [ebx],ss
  43a7a1:	stc    
  43a7a2:	add    BYTE PTR [edx-0x6b],bh
  43a7a5:	cli    
  43a7a6:	inc    DWORD PTR [eax]
  43a7a8:	add    BYTE PTR [eax],al
  43a7aa:	inc    edx
  43a7ab:	xchg   ebp,eax
  43a7ac:	cli    
  43a7ad:	jmp    FWORD PTR [ebp+edx*4-0x6bc30006]
  43a7b4:	cli    
  43a7b5:	jmp    DWORD PTR [eax-0x6c]
  43a7b8:	cli    
  43a7b9:	(bad)  
  43a7ba:	inc    BYTE PTR [edi-0x76650005]
  43a7c0:	sti    
  43a7c1:	call   FWORD PTR [ecx+ecx*4-0x76630005]
  43a7c8:	sti    
  43a7c9:	dec    DWORD PTR [eax-0x78]
  43a7cc:	sti    
  43a7cd:	call   FWORD PTR [eax]
  43a7cf:	mov    bl,bh
  43a7d1:	push   DWORD PTR [esi-0x78]
  43a7d4:	sti    
  43a7d5:	dec    DWORD PTR [edx-0x78]
  43a7d8:	sti    
  43a7d9:	dec    edx
  43a7db:	xchg   ebx,edi
  43a7dd:	push   DWORD PTR [eax-0x65000477]
  43a7e3:	or     BYTE PTR [eax],al
  43a7e5:	add    BYTE PTR [eax-0x77000487],dl
  43a7eb:	jns    0x43a7e8
  43a7ed:	(bad)  
  43a7ee:	out    dx,al
  43a7ef:	jp     0x43a7ec
  43a7f1:	inc    DWORD PTR [edx]
  43a7f3:	jnp    0x43a7f0
  43a7f5:	call   FWORD PTR [edx+0x7afffb78]
  43a7fb:	js     0x43a7f8
  43a7fd:	call   esp
  43a7ff:	ja     0x43a7fc
  43a801:	(bad)  
  43a802:	fdiv   DWORD PTR [edi-0x5]
  43a805:	jmp    DWORD PTR [eax-0x1b000486]
  43a80b:	jp     0x43a808
  43a80d:	inc    DWORD PTR [eax]
  43a80f:	add    BYTE PTR [eax],al
  43a811:	or     bh,BYTE PTR [ebx-0x5]
  43a814:	jmp    FWORD PTR [esi]
  43a816:	js     0x43a813
  43a818:	call   FWORD PTR [eax+edi*2]
  43a81b:	sti    
  43a81c:	call   DWORD PTR [eax-0x71]
  43a81f:	cli    
  43a820:	push   ebx
  43a822:	cmp    DWORD PTR [eax-0x3],0xfd784e0c
  43a829:	add    al,0xc8
  43a82b:	ja     0x43a82a
  43a82d:	cld    
  43a82e:	mov    cl,0x77
  43a830:	std    
  43a831:	hlt    
  43a832:	sbb    edi,DWORD PTR [eax-0x3]
  43a835:	in     al,dx
  43a836:	add    eax,0x53e4fd77
  43a83b:	js     0x43a83a
  43a83d:	fcomp  QWORD PTR [ebp+0x78]
  43a840:	std    
  43a841:	aam    0x1d
  43a843:	std    
  43a844:	push   ebx
  43a846:	paddw  mm7,mm7
  43a849:	jae    0x43a834
  43a84b:	jno    0x43a84a
  43a84d:	mov    esp,0x73fffd2e
  43a852:	and    bh,ch
  43a854:	push   DWORD PTR [ebx+0x1e]
  43a857:	std    
  43a858:	push   DWORD PTR [ebx-0x9]
  43a85b:	jno    0x43a85a
  43a85d:	pushf  
  43a85e:	and    bh,ch
  43a860:	push   DWORD PTR [ebx+0x24]
  43a863:	std    
  43a864:	push   DWORD PTR [ebx+0x65]
  43a867:	ja     0x43a866
  43a869:	test   BYTE PTR [ecx+0x77],cl
  43a86c:	std    
  43a86d:	jl     0x43a898
  43a86f:	std    
  43a870:	push   DWORD PTR [ebx-0x70]
  43a873:	cld    
  43a874:	inc    DWORD PTR [eax]
  43a876:	add    BYTE PTR [eax],al
  43a878:	jae    0x43a8c3
  43a87a:	ja     0x43a879
  43a87c:	fs (bad) 
  43a87f:	std    
  43a880:	pop    esp
  43a881:	sbb    edi,ebp
  43a883:	push   DWORD PTR [ebx+0x12]
  43a886:	std    
  43a887:	push   DWORD PTR [ebx-0x47]
  43a88a:	add    eax,DWORD PTR [eax]
  43a88c:	jae    0x43a8ad
  43a88e:	std    
  43a88f:	push   DWORD PTR [ebx+0x3c]
  43a892:	std    
  43a893:	push   DWORD PTR [ebx+0x1d]
  43a896:	jae    0x43a895
  43a898:	sub    al,0x2b
  43a89a:	std    
  43a89b:	push   DWORD PTR [ebx+0x6]
  43a89e:	sti    
  43a89f:	add    esi,ebx
  43a8a1:	xchg   BYTE PTR [ebx-0x5aece987],ch
  43a8a7:	jns    0x43a8b7
  43a8a9:	adc    ecx,DWORD PTR [edi+0x79]
  43a8ac:	push   es
  43a8ad:	adc    edx,DWORD PTR [edx]
  43a8af:	add    al,0xf3
  43a8b1:	xchg   bh,dl
  43a8b3:	add    esi,ebx
  43a8b5:	xchg   dh,ah
  43a8b7:	add    esi,ebx
  43a8b9:	xchg   dh,dl
  43a8bb:	add    esi,ebx
  43a8bd:	xchg   bh,dl
  43a8bf:	add    esi,ebx
  43a8c1:	xchg   bh,ah
  43a8c3:	add    esi,ebx
  43a8c5:	push   es
  43a8c6:	cdq    
  43a8c7:	xchg   ebp,eax
  43a8c8:	into   
  43a8c9:	adc    ah,BYTE PTR [edi]
  43a8cb:	xchg   ebp,eax
  43a8cc:	(bad)  
  43a8cd:	adc    ch,BYTE PTR ds:0x1312be95
  43a8d3:	xchg   ebp,eax
  43a8d4:	mov    dh,0x12
  43a8d6:	adc    DWORD PTR [ebp-0x6ac0ed52],edx
  43a8dc:	add    BYTE PTR [eax],al
  43a8de:	add    BYTE PTR [esi-0x616ae8ee],ah
  43a8e4:	adc    bl,BYTE PTR [ecx]
  43a8e6:	xchg   ebp,eax
  43a8e7:	xchg   esi,eax
  43a8e8:	adc    ah,bl
  43a8ea:	xchg   ecx,eax
  43a8eb:	mov    ss,WORD PTR [edx]
  43a8ed:	icebp  
  43a8ee:	xchg   ecx,eax
  43a8ef:	xchg   BYTE PTR [edx],dl
  43a8f1:	(bad)  
  43a8f2:	xchg   ecx,eax
  43a8f3:	jle    0x43a907
  43a8f5:	int    0x91
  43a8f7:	jbe    0x43a90b
  43a8f9:	mov    ebx,0xa7126e91
  43a8fe:	xchg   ecx,eax
  43a8ff:	data16 adc dh,BYTE PTR ds:0xb3125e92
  43a906:	xchg   ecx,eax
  43a907:	push   esi
  43a908:	adc    ch,BYTE PTR ds:0xe7124e92
  43a90e:	add    esi,ebx
  43a910:	push   es
  43a911:	ins    DWORD PTR es:[edi],dx
  43a912:	ja     0x43a952
  43a914:	adc    bl,BYTE PTR [ebp+0x77]
  43a917:	adc    al,BYTE PTR ss:[eax]
  43a91a:	test   DWORD PTR [ebx+edx*1+0x13ab3bf9],esp
  43a921:	stc    
  43a922:	inc    edi
  43a923:	fwait
  43a924:	adc    edi,ecx
  43a926:	sub    eax,0xddf9139b
  43a92b:	test   BYTE PTR [ebx],dl
  43a92d:	stc    
  43a92e:	retf   
  43a92f:	jl     0x43a944
  43a931:	stc    
  43a932:	test   DWORD PTR [ebx+edx*1+0x6f0e9f9],0xc9f28600
  43a93d:	imul   esi,ebp,0xd66ba393
  43a943:	add    BYTE PTR [eax],al
  43a945:	add    BYTE PTR [ecx-0x683a9d56],dl
  43a94b:	lahf   
  43a94c:	pop    esp
  43a94d:	fist   DWORD PTR [ebx-0x6b409d64]
  43a953:	adc    ecx,edi
  43a955:	push   edx
  43a956:	repnz leave 
  43a958:	imul   esi,DWORD PTR [ebp-0x39945c6d],0xc562aa51
  43a962:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  43a964:	pop    esp
  43a965:	fwait
  43a966:	push   ebx
  43a967:	pushf  
  43a968:	bound  ecx,QWORD PTR [edi+0x10f91144]
  43a96e:	mov    WORD PTR [esi-0x38ab7fa2],?
  43a974:	push   0x69a8a17b
  43a979:	xchg   BYTE PTR [esp+eiz*4+0x48],bl
  43a97d:	mov    ecx,DWORD PTR [edx-0xf8aa35c]
  43a983:	cmp    esi,0x2d
  43a986:	jl     0x43a91d
  43a988:	push   ebx
  43a989:	push   eax
  43a98a:	xchg   edx,eax
  43a98b:	stos   BYTE PTR es:[edi],al
  43a98c:	cmp    al,0x46
  43a98e:	pushf  
  43a98f:	lahf   
  43a990:	jae    0x43a97b
  43a992:	lock inc eax
  43a994:	(bad)  
  43a995:	inc    DWORD PTR [edx]
  43a997:	jb     0x43a9f3
  43a999:	jo     0x43a973
  43a99b:	jno    0x43a9d7
  43a99d:	ins    BYTE PTR es:[edi],dx
  43a99e:	mov    dh,0x7b
  43a9a0:	pop    esp
  43a9a1:	add    BYTE PTR [ecx+0x4],dl
  43a9a4:	dec    eax
  43a9a5:	gs jmp 0x43aa02
  43a9a8:	cmp    ch,BYTE PTR [eax+eax*1+0x0]
  43a9ac:	add    dh,ah
  43a9ae:	jnp    0x43aa0c
  43a9b0:	add    BYTE PTR [ebp+0x4],dl
  43a9b3:	dec    eax
  43a9b4:	gs sti 
  43a9b6:	pop    edx
  43a9b7:	aas    
  43a9b8:	jb     0x43a9a9
  43a9ba:	jno    0x43a9b5
  43a9bc:	inc    eax
  43a9be:	add    al,0x3f
  43a9c0:	gs out dx,al
  43a9c2:	xor    al,0x6b
  43a9c4:	outs   dx,DWORD PTR ds:[esi]
  43a9c5:	stc    
  43a9c6:	outs   dx,DWORD PTR ds:[esi]
  43a9c7:	ins    BYTE PTR es:[edi],dx
  43a9c8:	jae    0x43a96c
  43a9ca:	jno    0x43aa26
  43a9cc:	jo     0x43a998
  43a9ce:	add    al,0xc5
  43a9d0:	add    dl,BYTE PTR [edx-0x668fa58f]
  43a9d6:	push   esi
  43a9d7:	pop    esi
  43a9d8:	popa   
  43a9d9:	jle    0x43aa4c
  43a9db:	stc    
  43a9dc:	jmp    FWORD PTR [eax]
  43a9de:	add    eax,0x60b36e41
  43a9e3:	bound  esp,QWORD PTR [ecx+0x66]
  43a9e6:	ins    DWORD PTR es:[edi],dx
  43a9e7:	jae    0x43aa4e
  43a9e9:	dec    ecx
  43a9ea:	push   esi
  43a9eb:	bound  esi,QWORD PTR [ebx+eax*4+0x67]
  43a9ef:	pop    edx
  43a9f0:	ins    BYTE PTR es:[edi],dx
  43a9f1:	dec    ecx
  43a9f2:	jno    0x43aa50
  43a9f4:	je     0x43aa69
  43a9f6:	jnp    0x43aa5f
  43a9f8:	add    BYTE PTR [ebx+0x6b654c07],dh
  43a9fe:	bound  ebx,QWORD PTR [esi+0x43]
  43aa01:	call   0x79ad1772
  43aa06:	gs gs push ebx
  43aa09:	scas   eax,DWORD PTR es:[edi]
  43aa0a:	gs ins DWORD PTR es:[edi],dx
  43aa0c:	imul   esp,DWORD PTR [ebp+0xfff978],0x47f30000
  43aa16:	std    
  43aa17:	inc    edx
  43aa18:	aad    0xb9
  43aa1a:	cwde   
  43aa1b:	ins    DWORD PTR es:[edi],dx
  43aa1c:	mov    al,0xcb
  43aa1e:	xchg   esp,eax
  43aa1f:	jae    0x43a9eb
  43aa21:	mov    esp,0xc2c06b9c
  43aa26:	sahf   
  43aa27:	jae    0x43a9c3
  43aa29:	rcl    BYTE PTR [ecx-0x2b0e301],1
  43aa2f:	inc    ebx
  43aa30:	mov    es,WORD PTR [ecx]
  43aa32:	cdq    
  43aa33:	jae    0x43a9cb
  43aa35:	fsubr  QWORD PTR [ebp-0x60f9809a]
  43aa3b:	pop    esi
  43aa3c:	(bad)  
  43aa3d:	in     al,dx
  43aa3e:	cwde   
  43aa3f:	pop    esp
  43aa40:	jg     0x43aa38
  43aa42:	xchg   edx,eax
  43aa43:	imul   esi,ebx,0x6b42fe36
  43aa49:	pop    es
  43aa4a:	mov    al,0x4f
  43aa4c:	popa   
  43aa4d:	cmp    DWORD PTR [eax-0x2d29f9e],esp
  43aa53:	xor    dl,0x60
  43aa56:	call   0x526a:0x92513073
  43aa5d:	cmp    BYTE PTR [ecx-0x65bfb5b5],bl
  43aa63:	push   eax
  43aa64:	repz jne 0x43aa60
  43aa67:	dec    esp
  43aa68:	push   cs
  43aa69:	pop    edx
  43aa6a:	mov    edx,0xaf79216d
  43aa6f:	dec    edx
  43aa70:	add    al,0x8a
  43aa72:	call   0x40:0xfda88cff
  43aa79:	add    BYTE PTR [eax],al
  43aa7b:	push   cs
  43aa7c:	jp     0x43aa3e
  43aa7e:	push   0x73a98e0e
  43aa83:	push   cs
  43aa84:	mov    WORD PTR [edx-0x337d21a2],?
  43aa8a:	jmp    DWORD PTR [esi+esi*2-0x7]
  43aa8e:	dec    esp
  43aa8f:	(bad)  
  43aa90:	push   es
  43aa91:	pop    ebx
  43aa92:	leave  
  43aa93:	loop   0x43aa3e
  43aa95:	dec    eax
  43aa96:	cwde   
  43aa97:	dec    esp
  43aa98:	pxor   mm0,QWORD PTR ds:0xd152a9b2
  43aa9f:	retf   
  43aaa0:	stos   BYTE PTR es:[edi],al
  43aaa1:	cmp    esi,DWORD PTR [eax-0x4db8412f]
  43aaa7:	nop
  43aaa8:	mov    ds:0xf24bb4b,al
  43aaad:	mov    esp,0x149dc108
  43aab2:	cwde   
  43aab3:	mov    eax,ds:0x9eca0aa5
  43aab8:	test   eax,0x67cc90b
  43aabd:	push   ebp
  43aabe:	or     BYTE PTR [esi-0x7b56f45e],ch
  43aac4:	push   es
  43aac5:	inc    ebx
  43aac6:	push   es
  43aac7:	xor    ah,BYTE PTR [edx+edi*8-0xa66ae47]
  43aace:	lods   al,BYTE PTR ds:[esi]
  43aacf:	dec    ebx
  43aad0:	popf   
  43aad1:	stos   DWORD PTR es:[edi],eax
  43aad2:	fwait
  43aad3:	inc    ebx
  43aad4:	pop    es
  43aad5:	repz add eax,0xd0daa432
  43aadb:	pop    ebx
  43aadc:	mov    ds:0xafd3,eax
  43aae1:	add    BYTE PTR [ecx-0x3b],dl
  43aae4:	iret   
  43aae5:	scas   eax,DWORD PTR es:[edi]
  43aae6:	push   ecx
  43aae7:	mov    ebp,0xb611b0c7
  43aaec:	out    0x3,al
  43aaee:	xor    BYTE PTR [ecx],cl
  43aaf0:	mov    ds:0x94b720a8,al
  43aaf5:	mov    dl,0x37
  43aaf7:	enter  0xa782,0x1e
  43aafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aafc:	xchg   ebp,eax
  43aafd:	xchg   esi,eax
  43aafe:	test   BYTE PTR [esi],cl
  43ab00:	fs add al,0xbe
  43ab03:	cwde   
  43ab04:	mov    esp,DWORD PTR [eax+eax*1-0x2e665c5c]
  43ab0b:	pushf  
  43ab0c:	(bad)  
  43ab0d:	jl     0x43aab8
  43ab0f:	push   cs
  43ab10:	stc    
  43ab11:	div    ah
  43ab13:	mov    bh,0x5e
  43ab15:	push   eax
  43ab16:	jnp    0x43aae0
  43ab18:	push   0x6b99225b
  43ab1d:	pop    ebp
  43ab1e:	xchg   esi,eax
  43ab1f:	sahf   
  43ab20:	imul   eax,DWORD PTR [eax+eiz*1-0x54],0x65
  43ab25:	dec    esp
  43ab26:	mov    WORD PTR [edx-0x360f1694],ds
  43ab2c:	add    al,BYTE PTR [ebp+0x7c]
  43ab2f:	call   0x3e66:0x9e624a6d
  43ab36:	out    dx,eax
  43ab37:	iret   
  43ab38:	add    cl,BYTE PTR ds:0xa6d9a64
  43ab3e:	dec    esi
  43ab3f:	call   0x35fc:0x99f0e950
  43ab46:	add    BYTE PTR [eax],al
  43ab48:	add    BYTE PTR [edi-0x57],bl
  43ab4b:	imul   esp,DWORD PTR [ecx+ecx*4],0xa9fd69a8
  43ab52:	or     eax,0xc2f081f9
  43ab57:	jb     0x43ab32
  43ab59:	test   BYTE PTR [esp+ebx*2+0x47a864c8],ah
  43ab60:	enter  0xa982,0x6b
  43ab64:	(bad)  
  43ab65:	lock mov esp,0x9e84a9ff
  43ab6b:	ins    BYTE PTR es:[edi],dx
  43ab6c:	les    edi,FWORD PTR [eax+0x54cd69ac]
  43ab72:	test   al,0xff
  43ab74:	daa    
  43ab75:	test   edi,0x98ad9d62
  43ab7b:	ins    DWORD PTR es:[edi],dx
  43ab7c:	fwait
  43ab7d:	pop    ebx
  43ab7e:	lahf   
  43ab7f:	jae    0x43ab3a
  43ab81:	pop    esi
  43ab82:	sahf   
  43ab83:	pop    esp
  43ab84:	test   BYTE PTR [ebp-0x66],ah
  43ab87:	inc    esi
  43ab88:	add    BYTE PTR [esi+0x9],ah
  43ab8b:	dec    eax
  43ab8c:	add    ebx,DWORD PTR [esi+0x6e615c58]
  43ab92:	aas    
  43ab93:	imul   esp,DWORD PTR [ebp+0x77],0x9
  43ab97:	es add eax,0x74627515
  43ab9d:	mov    bh,0x52
  43ab9f:	imul   ebp,DWORD PTR [edi-0x47],0x65
  43aba3:	ins    BYTE PTR es:[edi],dx
  43aba4:	jae    0x43ab85
  43aba6:	outs   dx,WORD PTR gs:[esi]
  43aba9:	clc    
  43abaa:	jno    0x43aba5
  43abac:	inc    DWORD PTR [eax]
  43abae:	add    BYTE PTR [eax],al
  43abb0:	scas   eax,DWORD PTR es:[edi]
  43abb1:	dec    BYTE PTR [edx+0x79]
  43abb4:	jmp    0x6b10a27
  43abb9:	bound  esp,QWORD PTR [esi+0x65]
  43abbc:	(bad)  
  43abbd:	push   edi
  43abbe:	aas    
  43abbf:	imul   edi,esi,0xef694d65
  43abc5:	gs stc 
  43abc7:	inc    DWORD PTR [edx-0x99ac0fc]
  43abcd:	push   esp
  43abce:	bound  ebp,QWORD PTR [ebp-0x9]
  43abd1:	dec    esp
  43abd2:	push   0x673ff76e
  43abd7:	fnsavew [edx+0x66]
  43abdb:	popa   
  43abdc:	mov    dh,0x61
  43abde:	push   0xfb08da6e
  43abe3:	add    DWORD PTR [ebp+0x7d4c6d65],edx
  43abe9:	arpl   WORD PTR [edx+0x6c],bx
  43abec:	push   esi
  43abed:	popa   
  43abee:	gs call 0x5502:0x6f08
  43abf5:	gs ins DWORD PTR es:[edi],dx
  43abf7:	push   ebx
  43abf8:	arpl   WORD PTR [ebx+0x6d],si
  43abfb:	gs jg  0x43ac52
  43abfe:	bound  ebp,QWORD PTR [ebp+0x77]
  43ac01:	or     BYTE PTR [esi+0x5],al
  43ac04:	repz adc DWORD PTR [ebx+esi*2+0x69a18a01],0x43fd1e1c
  43ac10:	idiv   BYTE PTR [ecx-0x6c]
  43ac13:	jae    0x43ac15
  43ac15:	add    BYTE PTR [eax],al
  43ac17:	loope  0x43ab99
  43ac19:	stos   BYTE PTR es:[edi],al
  43ac1a:	outs   dx,DWORD PTR ds:[esi]
  43ac1b:	retf   0xfd5e
  43ac1e:	dec    edx
  43ac1f:	out    dx,al
  43ac20:	mov    cl,0x92
  43ac22:	jae    0x43abe5
  43ac24:	mov    ecx,0x1db269a0
  43ac29:	std    
  43ac2a:	pusha  
  43ac2b:	lock jmp 0x76c1:0xb6bf6b90
  43ac33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac34:	ret    0x68b7
  43ac37:	mov    esp,0xb062a7c6
  43ac3c:	lds    ebx,FWORD PTR [ebp+ebp*2+0x51020ef3]
  43ac43:	call   0x91fe:0x9b3ca101
  43ac4a:	push   ebx
  43ac4b:	mov    edx,gs
  43ac4d:	nop
  43ac4e:	imul   edi,DWORD PTR [edi-0xa],0xffffffc1
  43ac52:	jbe    0x43acbb
  43ac54:	add    eax,DWORD PTR [esi+ebp*8]
  43ac57:	out    dx,eax
  43ac58:	jmp    0x43abfe
  43ac5a:	ins    DWORD PTR es:[edi],dx
  43ac5b:	adc    ebx,DWORD PTR [bp+0x426b]
  43ac60:	sub    esp,DWORD PTR [edx-0x6a9cb593]
  43ac66:	inc    esp
  43ac68:	loopne 0x43ac6d
  43ac6a:	dec    esi
  43ac6b:	push   esi
  43ac6c:	aas    
  43ac6d:	mov    eax,ds:0xa435414f
  43ac72:	bound  esp,QWORD PTR [eax]
  43ac74:	push   ecx
  43ac75:	retf   0x1662
  43ac78:	inc    ebp
  43ac79:	xchg   ebx,eax
  43ac7a:	jbe    0x43ac7c
  43ac7c:	add    BYTE PTR [eax],al
  43ac7e:	repz int 0x0
  43ac81:	push   edx
  43ac82:	or     al,BYTE PTR [edi]
  43ac84:	xchg   ebp,eax
  43ac85:	xchg   edi,eax
  43ac86:	add    DWORD PTR [esi-0x63e94c76],esp
  43ac8c:	call   0x749b:0xa3931fa6
  43ac93:	or     ecx,DWORD PTR ds:0x749dc107
  43ac99:	xchg   edi,eax
  43ac9a:	loope  0x43ac41
  43ac9c:	add    dl,0xc8
  43ac9f:	call   0x3e6:0x8eb1a479
  43aca6:	lods   eax,DWORD PTR ds:[esi]
  43aca7:	add    eax,0xa1d19221
  43acac:	and    ch,BYTE PTR [ebp-0x6db86762]
  43acb2:	mov    ebp,0xbf030206
  43acb7:	fwait
  43acb8:	inc    edi
  43acb9:	test   al,0xb8
  43acbb:	popf   
  43acbc:	inc    esp
  43acbd:	xchg   edx,eax
  43acbe:	mov    ebp,0x14b72f98
  43acc3:	or     ebp,DWORD PTR [eax+0x14a1a708]
  43acc9:	mov    cl,0x8d
  43accb:	pushf  
  43accc:	pop    es
  43accd:	cwde   
  43acce:	xchg   ecx,eax
  43accf:	mov    dl,0xfe
  43acd1:	xchg   ecx,eax
  43acd2:	xchg   ecx,eax
  43acd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43acd4:	or     al,BYTE PTR [eax+eiz*4]
  43acd7:	pop    es
  43acd8:	es xchg edx,eax
  43acda:	push   ecx
  43acdb:	test   al,0xfa
  43acdd:	test   al,0x40
  43acdf:	lahf   
  43ace0:	hlt    
  43ace1:	test   al,0x0
  43ace3:	add    BYTE PTR [eax],al
  43ace5:	xor    eax,0xda03e6a3
  43acea:	add    esi,DWORD PTR [ecx-0x246ca954]
  43acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acf1:	dec    eax
  43acf2:	mov    bh,0xd4
  43acf4:	scas   al,BYTE PTR es:[edi]
  43acf5:	inc    eax
  43acf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acf7:	lds    edx,FWORD PTR [edi+0x7960aac]
  43acfd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  43acff:	(bad)  
  43ad00:	mov    esp,0x9e63a0ab
  43ad05:	dec    esi
  43ad06:	enter  0x9566,0x5b
  43ad0a:	or     bh,cl
  43ad0c:	xchg   ah,ch
  43ad0e:	mov    ebx,0xa1b69d62
  43ad13:	imul   eax,DWORD PTR [eax+eax*2-0x7b689961],0xffffffa5
  43ad1b:	ins    DWORD PTR es:[edi],dx
  43ad1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ad1d:	mov    BYTE PTR [edx],cl
  43ad1f:	stc    
  43ad20:	xor    esp,0xffffffbb
  43ad23:	bound  esi,QWORD PTR [ebp+0x2e]
  43ad26:	mov    eax,ds:0xa18b4c6b
  43ad2b:	push   0x44
  43ad2d:	out    dx,eax
  43ad2e:	in     eax,0x2
  43ad30:	ds popa 
  43ad32:	mov    eax,ds:0xa12d4473
  43ad37:	imul   ecx,DWORD PTR [edi+esi*8+0x20],0xffffffff
  43ad3c:	and    eax,0x4041965a
  43ad41:	arpl   WORD PTR [ebp-0x6384cac2],sp
  43ad47:	or     ax,WORD PTR [eax]
  43ad4a:	add    BYTE PTR [eax],al
  43ad4c:	push   0xffffff96
  43ad4e:	bound  ebx,QWORD PTR [edx]
  43ad50:	cmp    al,0xa
  43ad52:	stc    
  43ad53:	test   eax,0x862b8f1
  43ad58:	dec    ebx
  43ad59:	enter  0x1566,0x9a
  43ad5d:	or     ecx,edi
  43ad5f:	outs   dx,BYTE PTR ds:[esi]
  43ad60:	lock retf 
  43ad62:	ins    DWORD PTR es:[edi],dx
  43ad63:	or     al,0x96
  43ad65:	xchg   ebp,eax
  43ad66:	bound  esp,QWORD PTR [edi]
  43ad68:	xchg   BYTE PTR [ebp-0x480f419e],bl
  43ad6e:	(bad)  
  43ad6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad70:	xchg   esp,eax
  43ad71:	xchg   esp,eax
  43ad72:	ins    BYTE PTR es:[edi],dx
  43ad73:	shl    DWORD PTR [esi-0x4d3b9460],0x94
  43ad7a:	popa   
  43ad7b:	add    BYTE PTR [esi+ebx*2+0x59a736b],bh
  43ad82:	jmp    0x6da1fa88
  43ad87:	inc    esi
  43ad88:	mov    bl,0x59
  43ad8a:	pop    esi
  43ad8b:	push   ebx
  43ad8c:	arpl   WORD PTR [edi+0x5e],bp
  43ad8f:	inc    ebp
  43ad90:	push   edx
  43ad91:	add    eax,0x5e39046b
  43ad96:	ins    DWORD PTR es:[edi],dx
  43ad97:	dec    esp
  43ad98:	imul   esi,DWORD PTR [ebp+ebp*2+0x45],0xffffffe8
  43ad9d:	ja     0x43ae07
  43ad9f:	jb     0x43adfb
  43ada1:	add    eax,0x5e8d01ea
  43ada6:	ins    DWORD PTR es:[edi],dx
  43ada7:	inc    esi
  43ada8:	jae    0x43ae03
  43adaa:	pop    esi
  43adab:	push   esp
  43adac:	mov    ds:0x5e59,eax
  43adb1:	add    BYTE PTR [eax],al
  43adb3:	jl     0x43adb7
  43adb5:	inc    esp
  43adb6:	gs mov dh,0x61
  43adb9:	ins    DWORD PTR es:[edi],dx
  43adba:	gs or  al,0x5e
  43adbd:	gs gs or eax,0xcd01ec03
  43adc4:	popa   
  43adc5:	ins    DWORD PTR es:[edi],dx
  43adc6:	inc    esi
  43adc7:	mov    bl,0x56
  43adc9:	pop    esi
  43adca:	dec    ecx
  43adcb:	aam    0x60
  43adcd:	push   0x6d65e772
  43add2:	imul   esi,ebp,0xd2793b58
  43add8:	gs neg BYTE PTR fs:[bx-0x7]
  43adde:	(bad)  
  43addf:	sti    
  43ade0:	dec    BYTE PTR [edx+0x65]
  43ade3:	fiadd  WORD PTR [edx+0x62]
  43ade6:	ins    BYTE PTR es:[edi],dx
  43ade7:	out    dx,eax
  43ade8:	inc    ebx
  43ade9:	ins    DWORD PTR es:[edi],dx
  43adea:	je     0x43adc4
  43adec:	pop    ebp
  43aded:	pop    ebx
  43adee:	jne    0x43ad9e
  43adf0:	popa   
  43adf1:	ins    BYTE PTR es:[edi],dx
  43adf2:	push   edi
  43adf3:	fiadd  DWORD PTR [edx+esi*8]
  43adf6:	add    esi,ebx
  43adf8:	dec    ebx
  43adf9:	mov    ds:0x903f4e6b,al
  43adfe:	bound  edi,QWORD PTR [esi]
  43ae00:	dec    ebx
  43ae01:	xchg   ecx,eax
  43ae02:	bound  ebp,QWORD PTR [ebx]
  43ae04:	push   ds
  43ae05:	std    
  43ae06:	push   eax
  43ae07:	lock bound ebx,QWORD PTR [esi-0x5db8c291]
  43ae0e:	jo     0x43ae4c
  43ae10:	js     0x43add5
  43ae12:	popw   ss
  43ae14:	cmp    ebp,0xffffffd1
  43ae17:	add    BYTE PTR [eax],al
  43ae19:	add    bh,dh
  43ae1b:	dec    edx
  43ae1c:	stos   DWORD PTR es:[edi],eax
  43ae1d:	push   0x12
  43ae1f:	outs   dx,BYTE PTR ds:[esi]
  43ae20:	mov    bl,0x66
  43ae22:	(bad)  
  43ae23:	mov    bl,cl
  43ae25:	popa   
  43ae26:	lods   eax,DWORD PTR ds:[esi]
  43ae27:	jbe    0x43add2
  43ae29:	(bad)  
  43ae2b:	mov    eax,ds:0x82e13d03
  43ae30:	sahf   
  43ae31:	jae    0x43ae09
  43ae33:	xlat   BYTE PTR ds:[ebx]
  43ae34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae35:	imul   ecx,esi,0xffffffda
  43ae38:	pushf  
  43ae39:	outs   dx,DWORD PTR ds:[esi]
  43ae3a:	ret    
  43ae3b:	(bad)  
  43ae3c:	test   eax,0xfd1d9c60
  43ae41:	ret    
  43ae42:	repnz fsub DWORD PTR [eax-0x722d4f8d]
  43ae49:	ins    DWORD PTR es:[edi],dx
  43ae4a:	xchg   esi,eax
  43ae4b:	mov    edi,0xcb8b5397
  43ae50:	mov    al,ds:0xfd1d975e
  43ae55:	xchg   esi,eax
  43ae56:	out    dx,eax
  43ae57:	int3   
  43ae58:	mov    al,ds:0x8e05a773
  43ae5d:	bound  edx,QWORD PTR [edx+0x5a6db401]
  43ae63:	icebp  
  43ae64:	lea    esp,[esi+0x5f]
  43ae67:	pop    es
  43ae68:	add    al,0xf9
  43ae6a:	repnz fsub DWORD PTR [eax-0x5600d48d]
  43ae71:	arpl   WORD PTR [edi+0x7],bx
  43ae74:	int3   
  43ae75:	retf   0xa15a
  43ae78:	leave  
  43ae79:	xchg   ecx,eax
  43ae7a:	dec    ecx
  43ae7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae7c:	fisubr DWORD PTR [edx+0x4b000000]
  43ae82:	cdq    
  43ae83:	out    0x3,al
  43ae85:	cmp    eax,DWORD PTR [edx]
  43ae87:	rcl    DWORD PTR [eax-0x6c3a6ae0],cl
  43ae8d:	and    eax,0x3203e6b0
  43ae92:	add    bh,BYTE PTR [ebx-0x7a6aff70]
  43ae98:	xchg   ebx,eax
  43ae99:	std    
  43ae9a:	(bad)
  43ae9d:	mov    esp,0x908301
  43aea2:	xchg   ebp,eax
  43aea3:	test   DWORD PTR [esi+0x3e6c5dc],ebp
  43aea9:	lods   eax,DWORD PTR ds:[esi]
  43aeaa:	add    DWORD PTR [ebx-0x7a6b1f70],ecx
  43aeb0:	xchg   ebx,eax
  43aeb1:	fstp   QWORD PTR [eax+0x54d03a7]
  43aeb7:	sub    ah,BYTE PTR [ecx-0x68b84540]
  43aebd:	rol    cl,0x54
  43aec0:	xchg   esi,eax
  43aec1:	retf   
  43aec2:	xchg   esp,eax
  43aec3:	out    0x3,al
  43aec5:	out    dx,eax
  43aec6:	add    esi,DWORD PTR [ebx]
  43aec8:	stos   DWORD PTR es:[edi],eax
  43aec9:	lds    esp,FWORD PTR [edx-0x6b4152d6]
  43aecf:	inc    edi
  43aed0:	xchg   esi,eax
  43aed1:	popf   
  43aed2:	(bad)
  43aed5:	adc    eax,DWORD PTR ds:0xc180a12a
  43aedb:	push   ds
  43aedc:	lods   eax,DWORD PTR ds:[esi]
  43aedd:	add    bl,0x1
  43aee0:	mov    al,ds:0x95feb291
  43aee5:	add    BYTE PTR [eax],al
  43aee7:	add    BYTE PTR [ecx+0x68],dl
  43aeea:	or     eax,DWORD PTR [edi+eax*8]
  43aeed:	or     BYTE PTR [edx],ah
  43aeef:	mov    eax,ds:0x7004c60
  43aef4:	sub    DWORD PTR [ebp+0x6e],0x63719afe
  43aefb:	xlat   BYTE PTR ds:[ebx]
  43aefc:	je     0x43af56
  43aefe:	pop    edi
  43aeff:	fisttp DWORD PTR [edi-0x6c3aa19b]
  43af05:	push   edi
  43af06:	add    BYTE PTR [ecx-0x3391bc09],al
  43af0c:	dec    edi
  43af0d:	jp     0x43af72
  43af0f:	cdq    
  43af10:	xchg   BYTE PTR [edi+0x5d],ch
  43af13:	int3   
  43af14:	jge    0x43af89
  43af16:	push   ecx
  43af17:	jmp    0xb640360c
  43af1c:	pusha  
  43af1d:	imul   ebp,DWORD PTR [edx-0x47],0x8c5d6f66
  43af24:	pop    ebp
  43af25:	jae    0x43af27
  43af27:	sub    dh,bl
  43af29:	pop    edx
  43af2a:	push   0x6465937b
  43af2f:	mov    edx,0x7b674846
  43af34:	jge    0x43afb0
  43af36:	add    BYTE PTR ds:0x5b685af3,ah
  43af3c:	xchg   edx,eax
  43af3d:	gs sbb ah,BYTE PTR fs:0x63516350
  43af45:	push   es
  43af46:	stc    
  43af47:	(bad)  
  43af48:	lock inc ebx
  43af4a:	outs   dx,BYTE PTR ds:[esi]
  43af4b:	dec    esp
  43af4c:	add    BYTE PTR [eax],al
  43af4e:	add    BYTE PTR [esi+0x7a],cl
  43af51:	arpl   WORD PTR ds:0x416c6f48,dx
  43af57:	push   edx
  43af58:	jb     0x43afca
  43af5a:	cli    
  43af5b:	es push ebx
  43af5d:	push   0x8
  43af5f:	pop    edi
  43af60:	jae    0x43afca
  43af62:	push   cs
  43af63:	arpl   WORD PTR [esi],ax
  43af65:	stc    
  43af66:	sub    ebp,ebp
  43af68:	inc    edi
  43af69:	arpl   WORD PTR ds:0x6773a7,dx
  43af6f:	in     al,0xaa
  43af71:	ins    BYTE PTR es:[edi],dx
  43af72:	gs cli 
  43af74:	pushf  
  43af75:	data16 repz scas al,BYTE PTR es:[di]
  43af79:	pop    ebp
  43af7a:	push   ebx
  43af7b:	(bad)  
  43af7c:	fwait
  43af7d:	popa   
  43af7e:	outs   dx,BYTE PTR ds:[esi]
  43af7f:	mov    ch,0xb8
  43af81:	clc    
  43af82:	(bad)  
  43af83:	fimul  WORD PTR [edi+edi*1]
  43af86:	gs xchg esi,eax
  43af88:	mov    ecx,0xaac4696a
  43af8d:	ins    BYTE PTR es:[edi],dx
  43af8e:	mov    bl,BYTE PTR gs:[ebx-0x523c9999]
  43af95:	pop    ebp
  43af96:	dec    ecx
  43af97:	lods   al,BYTE PTR ds:[esi]
  43af98:	xchg   ebp,eax
  43af99:	dec    edi
  43af9a:	add    BYTE PTR [edi+0x6a783d0a],bh
  43afa0:	stos   BYTE PTR es:[edi],al
  43afa1:	fs push di
  43afa4:	scas   eax,DWORD PTR es:[edi]
  43afa5:	outs   dx,BYTE PTR ds:[esi]
  43afa6:	imul   ebx,DWORD PTR [eax-0x50],0xaf776d66
  43afad:	ins    BYTE PTR es:[edi],dx
  43afae:	push   ebx
  43afaf:	out    0x9b,al
  43afb1:	popa   
  43afb2:	outs   dx,BYTE PTR ds:[esi]
  43afb3:	add    BYTE PTR [eax],al
  43afb5:	add    BYTE PTR [ebp-0x64],dh
  43afb8:	dec    edi
  43afb9:	add    BYTE PTR [esi+eax*1],cl
  43afbc:	dec    ebp
  43afbd:	jb     0x43af82
  43afbf:	(bad)  
  43afc0:	data16 je 0x43af7a
  43afc3:	pushf  
  43afc4:	cmp    esi,DWORD PTR [edx-0x5d]
  43afc7:	xchg   esi,eax
  43afc8:	popa   
  43afc9:	arpl   WORD PTR [ebx-0x469ab452],bp
  43afcf:	xchg   esi,eax
  43afd0:	popa   
  43afd1:	outs   dx,DWORD PTR ds:[esi]
  43afd2:	mov    esp,0xd5027e0a
  43afd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43afd8:	ins    BYTE PTR es:[edi],dx
  43afd9:	push   esp
  43afda:	mov    dl,0x9c
  43afdc:	pop    ebp
  43afdd:	popa   
  43afde:	mov    dh,0xcb
  43afe0:	outs   dx,BYTE PTR ds:[si]
  43afe2:	out    0xa5,al
  43afe4:	jo     0x43b05a
  43afe6:	or     cl,BYTE PTR [ecx]
  43afe8:	mov    DWORD PTR [ebx+esi*8],eax
  43afeb:	inc    eax
  43afec:	cdq    
  43afed:	jae    0x43b036
  43afef:	push   es
  43aff0:	xchg   edx,eax
  43aff1:	bound  edx,QWORD PTR [edx+0x12]
  43aff4:	ret    
  43aff5:	push   0x7799fa4d
  43affa:	pop    edi
  43affb:	out    dx,al
  43affc:	cld    
  43affd:	dec    ebx
  43affe:	icebp  
  43afff:	sub    al,0x99
  43b001:	jae    0x43b026
  43b003:	loopne 0x43afac
  43b005:	pop    esp
  43b006:	push   esi
  43b007:	loope  0x43af9c
  43b009:	inc    esi
  43b00a:	dec    edi
  43b00b:	out    dx,al
  43b00c:	cld    
  43b00d:	cdq    
  43b00e:	repz mov al,0x92
  43b011:	bound  edx,QWORD PTR [edx]
  43b013:	ret    0x4a99
  43b016:	es mov edx,0x7799
  43b01c:	add    BYTE PTR [esi+ebp*8],bh
  43b01f:	cld    
  43b020:	ret    0xacf2
  43b023:	cdq    
  43b024:	jae    0x43b056
  43b026:	mov    ds:0x94166d92,eax
  43b02b:	mov    BYTE PTR [ebx+0xb],dl
  43b02e:	mov    al,ds:0xa6d75e99
  43b033:	cwde   
  43b034:	jmp    DWORD PTR [ebx+esi*1+0x0]
  43b038:	push   esp
  43b039:	iret   
  43b03a:	cmp    BYTE PTR [esi-0x5c733895],0xff
  43b041:	dec    esp
  43b042:	sub    al,0x0
  43b044:	push   esp
  43b045:	xlat   BYTE PTR ds:[ebx]
  43b046:	pusha  
  43b047:	mov    esi,0x44ad66d
  43b04c:	shr    edi,0x41
  43b04f:	test   al,0x6c
  43b051:	mov    ah,0x4a
  43b053:	nop
  43b054:	push   ecx
  43b055:	xchg   edx,eax
  43b056:	pop    ecx
  43b057:	mov    DWORD PTR [edx-0xd],esp
  43b05a:	mov    ch,0xf8
  43b05c:	push   ebx
  43b05d:	xchg   DWORD PTR [eax-0x4d],eax
  43b060:	bound  eax,QWORD PTR [edi+0x7e6b9d1b]
  43b066:	push   es
  43b067:	or     al,0x4
  43b069:	xor    ecx,DWORD PTR [ebx]
  43b06b:	xor    ebx,DWORD PTR [edi-0x55ff8e7a]
  43b071:	dec    ebp
  43b072:	jnp    0x43b078
  43b074:	mov    ah,0x56
  43b076:	je     0x43b07e
  43b078:	lahf   
  43b079:	dec    edi
  43b07a:	js     0x43b063
  43b07c:	add    ebp,edx
  43b07e:	or     dl,BYTE PTR ds:0x9f
  43b084:	pop    edi
  43b085:	push   0xfffffff3
  43b087:	mov    esi,0x8fd16a42
  43b08c:	mov    esp,0x31030603
  43b091:	outs   dx,BYTE PTR ds:[esi]
  43b092:	ret    
  43b093:	sahf   
  43b094:	inc    eax
  43b095:	outs   dx,BYTE PTR ds:[esi]
  43b096:	mov    esp,0xab74409e
  43b09b:	test   al,0xf
  43b09d:	dec    ebx
  43b09e:	enter  0x118f,0x5b
  43b0a2:	shl    BYTE PTR [esi+0x5660711],0x32
  43b0a9:	push   0xffffff9b
  43b0ab:	scas   eax,DWORD PTR es:[edi]
  43b0ac:	adc    DWORD PTR [edx-0x69],esi
  43b0af:	ror    DWORD PTR ds:0xcdc98c73,0x71
  43b0b6:	test   BYTE PTR [eax+0x56c0364],dh
  43b0bc:	mov    dl,0x69
  43b0be:	jae    0x43b06f
  43b0c0:	shl    DWORD PTR [ecx+0x77],1
  43b0c3:	mov    bl,0xad
  43b0c5:	jp     0x43b146
  43b0c7:	mov    al,0x44
  43b0c9:	add    ecx,DWORD PTR [ebx]
  43b0cb:	add    eax,0xa14b6db1
  43b0d0:	mov    al,ds:0xc0a1446d
  43b0d5:	jae    0x43b0f2
  43b0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0d8:	(bad)  
  43b0d9:	gs push ebx
  43b0db:	mov    esi,0xb0447295
  43b0e0:	lea    esi,[ecx+0x0]
  43b0e3:	dec    esp
  43b0e4:	idiv   DWORD PTR [ebx]
  43b0e6:	jmp    DWORD PTR [esi]
  43b0e8:	add    BYTE PTR [eax],al
  43b0ea:	add    BYTE PTR [esi+0x6d],dl
  43b0ed:	fs das 
  43b0ef:	dec    esi
  43b0f0:	jno    0x43b15f
  43b0f2:	adc    eax,0xc6c6c35
  43b0f7:	pushf  
  43b0f8:	add    bh,cl
  43b0fa:	mov    edi,0x176744ef
  43b0ff:	xchg   ebx,eax
  43b100:	inc    ebx
  43b101:	ins    BYTE PTR es:[edi],dx
  43b102:	push   cs
  43b103:	and    BYTE PTR [ebp+0x0],0x2c
  43b107:	test   BYTE PTR [edi+eiz*2-0x1],0x64
  43b10c:	push   eax
  43b10d:	arpl   cx,sp
  43b10f:	ins    BYTE PTR es:[edi],dx
  43b110:	dec    eax
  43b111:	addr16 int 0x93
  43b114:	push   edi
  43b115:	add    BYTE PTR [esi-0x3b8cae10],cl
  43b11b:	cmp    BYTE PTR [ecx+0x50],0xcc
  43b11f:	sub    BYTE PTR [eax+0x69],0xbb
  43b123:	dec    ebx
  43b124:	popa   
  43b125:	push   0xffffffca
  43b127:	push   ebx
  43b128:	inc    ebx
  43b129:	imul   esi,DWORD PTR [esi+ecx*2-0xf649c8a],0x4dabfd66
  43b134:	js     0x43b199
  43b136:	scas   eax,DWORD PTR es:[edi]
  43b137:	lahf   
  43b138:	outs   dx,BYTE PTR ds:[esi]
  43b139:	arpl   WORD PTR [eax+ecx*4-0xd33ffa9],sp
  43b140:	inc    edi
  43b141:	arpl   WORD PTR [ebp+0x2e],si
  43b144:	popa   
  43b145:	je     0x43b0c7
  43b147:	jle    0x43b1ae
  43b149:	dec    ebp
  43b14a:	jo     0x43b1ad
  43b14c:	jbe    0x43b1b1
  43b14e:	push   esp
  43b14f:	add    BYTE PTR [eax],al
  43b151:	add    BYTE PTR [esi],ch
  43b153:	jo     0x43b1b7
  43b155:	dec    esi
  43b156:	out    dx,eax
  43b157:	sar    esi,cl
  43b159:	sub    eax,0x5b447652
  43b15e:	push   esi
  43b15f:	js     0x43b1c4
  43b161:	add    dh,bh
  43b163:	mov    ds:0xafd6568,eax
  43b168:	data16 add bl,ch
  43b16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b16c:	ins    BYTE PTR es:[edi],dx
  43b16d:	push   ebx
  43b16e:	ret    
  43b16f:	xchg   ebp,eax
  43b170:	ins    BYTE PTR es:[edi],dx
  43b171:	gs out 0xc6,eax
  43b174:	pop    ebp
  43b175:	data16 jmp 0x43b10f
  43b178:	fs je  0x43b1aa
  43b17b:	aam    0x44
  43b17d:	popa   
  43b17e:	in     al,0xa0
  43b180:	ins    DWORD PTR es:[edi],dx
  43b181:	popa   
  43b182:	in     eax,dx
  43b183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b184:	clc    
  43b185:	jmp    ebx
  43b187:	pop    es
  43b188:	aas    
  43b189:	gs into 
  43b18b:	leave  
  43b18c:	addr16 rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  43b190:	pop    ecx
  43b191:	ins    BYTE PTR es:[edi],dx
  43b192:	mov    ss,WORD PTR [edi-0x6b50899f]
  43b198:	clc    
  43b199:	jmp    FWORD PTR [eax+0x7]
  43b19c:	aas    
  43b19d:	gs mov esi,0xa96f6ab5
  43b1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b1a4:	imul   esi,DWORD PTR [ebx+0x7e],0xffffffb2
  43b1a8:	gs gs dec ecx
  43b1ab:	add    eax,0x9446053a
  43b1b0:	ins    BYTE PTR es:[edi],dx
  43b1b1:	jb     0x43b21c
  43b1b3:	scas   al,BYTE PTR es:[edi]
  43b1b4:	push   0x57
  43b1b9:	mov    al,BYTE PTR ds:0xa99d02c0
  43b1bf:	bound  edi,QWORD PTR [bp+di-0x57]
  43b1c3:	inc    ebp
  43b1c4:	xchg   DWORD PTR gs:[eax-0x6e868696],ebp
  43b1cb:	pop    ecx
  43b1cc:	je     0x43b19d
  43b1ce:	xchg   esp,eax
  43b1cf:	cmp    eax,0x96055a78
  43b1d4:	add    cl,BYTE PTR ds:0x99556ca2
  43b1da:	mov    eax,ds:0x52f3446a
  43b1df:	call   0xaa52:0x90439e5e
  43b1e6:	cmp    ebx,DWORD PTR [ebp-0x62c57397]
  43b1ec:	pusha  
  43b1ed:	xchg   esi,eax
  43b1ee:	out    dx,eax
  43b1ef:	cld    
  43b1f0:	leave  
  43b1f1:	repnz sub BYTE PTR [ecx-0x70e9488d],bl
  43b1f8:	lods   eax,DWORD PTR fs:[esi]
  43b1fa:	sbb    eax,0x1e406299
  43b1ff:	popf   
  43b200:	pop    esp
  43b201:	dec    esi
  43b202:	sub    ebx,DWORD PTR [eax+edx*2+0x40fe50f3]
  43b209:	dec    esi
  43b20a:	cli    
  43b20b:	stos   BYTE PTR es:[edi],al
  43b20c:	push   0x62a2035f
  43b211:	cmp    al,BYTE PTR [eax]
  43b213:	fwait
  43b214:	push   0x739ddb41
  43b219:	dec    edx
  43b21a:	shl    DWORD PTR [edx+0x50],1
  43b220:	xrelease xchg BYTE PTR [ebx],al
  43b223:	cmp    eax,0x739dcb21
  43b228:	push   ss
  43b229:	pushf  
  43b22a:	cdq    
  43b22b:	push   0x4
  43b22d:	mov    edx,0xbc1b5399
  43b232:	cdq    
  43b233:	pop    esi
  43b234:	pmaxsw mm7,mm4
  43b237:	xchg   ecx,eax
  43b238:	lock mov ebp,0x8b10688e
  43b23e:	(bad)  
  43b23f:	ins    BYTE PTR es:[edi],dx
  43b240:	and    ah,bl
  43b242:	mov    edx,0x889ce166
  43b247:	push   eax
  43b248:	repz dec DWORD PTR gs:[edi-0x1f]
  43b24d:	nop
  43b24e:	lahf   
  43b24f:	(bad)  
  43b250:	sar    BYTE PTR [eax+edx*8+0x2d],0xb5
  43b255:	mov    dl,BYTE PTR [ebx+esi*2+0x3e706a4]
  43b25c:	jns    0x43b263
  43b25e:	and    ch,BYTE PTR [eax-0x57b79b65]
  43b264:	mov    eax,0x1ca9466f
  43b269:	add    BYTE PTR [ecx+eax*1-0x5db58d4e],ch
  43b270:	lods   eax,DWORD PTR ds:[esi]
  43b271:	jb     0x43b28f
  43b273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b274:	cwde   
  43b275:	outs   dx,DWORD PTR ds:[esi]
  43b276:	inc    esi
  43b277:	test   eax,0xfff5fffc
  43b27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b27d:	imul   edx,DWORD PTR [esi],0x3b6a598f
  43b283:	lods   al,BYTE PTR ds:[esi]
  43b284:	add    BYTE PTR [eax],al
  43b286:	add    BYTE PTR [esi+0x6a],dl
  43b289:	or     BYTE PTR [eax+0x367ffdc],ah
  43b28f:	push   ss
  43b290:	jne    0x43b296
  43b292:	mov    ds:0xab2b6a40,eax
  43b297:	push   esi
  43b298:	push   0x6
  43b29a:	nop
  43b29b:	dec    ebx
  43b29c:	jne    0x43b27e
  43b29e:	lods   al,BYTE PTR ds:[esi]
  43b29f:	mov    ah,0xff
  43b2a1:	dec    edx
  43b2a2:	inc    DWORD PTR [edx+0x6e]
  43b2a5:	aad    0x8f
  43b2a7:	and    DWORD PTR [esi-0x45],esp
  43b2aa:	mov    ebp,0x3cc6a0e
  43b2af:	mov    WORD PTR [edx],cs
  43b2b1:	xchg   ecx,eax
  43b2b2:	stos   BYTE PTR es:[edi],al
  43b2b3:	push   ds
  43b2b4:	jnp    0x43b272
  43b2b6:	mov    ds:0xa7bb4618,al
  43b2bb:	or     esp,DWORD PTR [edi+eiz*8+0x3]
  43b2bf:	jbe    0x43b2c4
  43b2c1:	mov    ch,0x9e
  43b2c3:	fldcw  WORD PTR [edi-0x67]
  43b2c6:	sahf   
  43b2c7:	mov    al,0x6d
  43b2c9:	xchg   ebp,eax
  43b2ca:	sahf   
  43b2cb:	mov    edi,0xdd91927a
  43b2d0:	push   edi
  43b2d1:	out    0x3,eax
  43b2d3:	enter  0x3,0xa6
  43b2d7:	pusha  
  43b2d8:	fs push 0xffffff9c
  43b2db:	ins    DWORD PTR es:[edi],dx
  43b2dc:	jae    0x43b341
  43b2de:	popa   
  43b2df:	js     0x43b2e0
  43b2e1:	clc    
  43b2e2:	nop
  43b2e3:	cmc    
  43b2e4:	inc    ebp
  43b2e5:	arpl   WORD PTR [ebp+0x69],bx
  43b2e8:	outs   dx,BYTE PTR ds:[esi]
  43b2e9:	ins    BYTE PTR es:[edi],dx
  43b2ea:	push   esp
  43b2eb:	add    BYTE PTR [eax],al
  43b2ed:	add    BYTE PTR [edx+0x64],dl
  43b2f0:	dec    edx
  43b2f1:	dec    eax
  43b2f2:	push   edx
  43b2f3:	fs inc edx
  43b2f5:	dec    esi
  43b2f6:	gs push ebp
  43b2f8:	imul   eax,DWORD PTR [ebp+0x6a],0x501c636c
  43b2ff:	je     0x43b36b
  43b301:	sbb    eax,0xf676e3f
  43b306:	mov    edx,DWORD PTR [edi+0x0]
  43b309:	sahf   
  43b30a:	in     eax,dx
  43b30b:	inc    ebp
  43b30c:	ins    DWORD PTR es:[edi],dx
  43b30d:	sub    edx,DWORD PTR [esi-0x71f3b196]
  43b313:	push   0x50
  43b315:	cmc    
  43b316:	data16 (bad) 
  43b318:	clc    
  43b319:	jge    0x43b316
  43b31b:	push   edi
  43b31c:	push   esp
  43b31d:	sbb    ch,BYTE PTR [eax-0x72578b97]
  43b323:	jp     0x43b38c
  43b325:	xlat   BYTE PTR ds:[ebx]
  43b326:	pop    ebx
  43b327:	cmp    ebp,DWORD PTR [ecx-0x39]
  43b32a:	jge    0x43b39b
  43b32c:	ins    BYTE PTR es:[edi],dx
  43b32d:	les    esp,FWORD PTR [ebp+0x69]
  43b330:	ins    DWORD PTR es:[edi],dx
  43b331:	mov    edx,0xb06a6f77
  43b336:	push   esp
  43b337:	(bad)  
  43b338:	clc    
  43b339:	mov    ds:0xa44a4cbb,al
  43b33e:	cmp    al,0x2b
  43b340:	xlat   BYTE PTR cs:[ebx]
  43b342:	dec    esp
  43b343:	jb     0x43b3b1
  43b345:	jmp    0xac43ad3a
  43b34a:	js     0x43b3b1
  43b34c:	je     0x43b304
  43b34e:	jg     0x43b3c0
  43b350:	add    BYTE PTR fs:[eax],al
  43b353:	add    BYTE PTR [eax],al
  43b355:	jge    0x43b2f8
  43b357:	imul   eax,DWORD PTR [ebp+0x72],0xa
  43b35b:	and    eax,DWORD PTR [eax]
  43b35d:	cdq    
  43b35e:	mov    ds:0xa95e7259,al
  43b363:	outs   dx,DWORD PTR ds:[esi]
  43b364:	gs cwde 
  43b366:	ret    
  43b367:	clc    
  43b368:	dec    esp
  43b36a:	add    edi,DWORD PTR [edi]
  43b36c:	gs (bad) 
  43b36e:	mov    ch,0x71
  43b370:	jae    0x43b338
  43b372:	scas   eax,DWORD PTR es:[edi]
  43b373:	gs dec ebp
  43b375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b376:	sahf   
  43b377:	push   0x69
  43b379:	mov    ecx,0xd1fff895
  43b37e:	add    al,0x4a
  43b380:	gs mov ch,0x9b
  43b383:	imul   esi,DWORD PTR [edi+eiz*8-0x6c],0x3b
  43b388:	ins    BYTE PTR es:[edi],dx
  43b389:	sti    
  43b38a:	xchg   ebp,eax
  43b38b:	imul   eax,DWORD PTR [ecx-0x26],0x9
  43b38f:	pop    DWORD PTR [eax]
  43b391:	push   ss
  43b392:	mov    al,0x5e
  43b394:	inc    esi
  43b395:	fsub   DWORD PTR [edx-0x6b159a9b]
  43b39b:	addr16 arpl bp,sp
  43b39e:	add    dl,BYTE PTR [ebx+0x1]
  43b3a1:	adc    eax,0xa74d6cb0
  43b3a6:	xchg   esp,eax
  43b3a7:	imul   esp,DWORD PTR [ecx-0x4b],0xffffffae
  43b3ab:	dec    eax
  43b3ac:	outs   dx,DWORD PTR ds:[esi]
  43b3ad:	leave  
  43b3ae:	or     DWORD PTR [eax+eax*1+0x575eae56],ebx
  43b3b5:	ret    
  43b3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b3b7:	pop    esp
  43b3b8:	outs   dx,DWORD PTR ds:[esi]
  43b3b9:	add    BYTE PTR [eax],al
  43b3bb:	add    BYTE PTR [ebp-0x47],al
  43b3be:	push   0x6f
  43b3c0:	mov    ecx,0xacfff8c0
  43b3c5:	or     DWORD PTR [ebx],edi
  43b3c7:	popa   
  43b3c8:	pop    esi
  43b3c9:	popf   
  43b3ca:	dec    edi
  43b3cb:	imul   edi,DWORD PTR [ebp+eiz*4+0x67],0x92bff377
  43b3d3:	push   0x1afcb4d0
  43b3d8:	repz mov al,0xa3
  43b3db:	imul   ebx,edi,0xffffff94
  43b3de:	fwait
  43b3df:	imul   ecx,edi,0xc14f9584
  43b3e5:	jl     0x43b389
  43b3e7:	ds repz xor eax,0x44964e02
  43b3ee:	xchg   ebp,eax
  43b3ef:	ins    BYTE PTR es:[edi],dx
  43b3f0:	lahf   
  43b3f1:	dec    edx
  43b3f2:	xchg   edx,eax
  43b3f3:	cmp    al,0x8f
  43b3f5:	dec    esi
  43b3f6:	xchg   ebx,eax
  43b3f7:	ins    BYTE PTR es:[edi],dx
  43b3f8:	mov    esp,0xf163fcef
  43b3fd:	and    DWORD PTR [ecx-0x6cb17195],esp
  43b403:	bound  esi,QWORD PTR [eax+0x7e73944e]
  43b409:	and    DWORD PTR [ecx+0x386ecff],esp
  43b40f:	inc    esp
  43b410:	dec    esi
  43b411:	or     al,0xb9
  43b413:	inc    ebx
  43b414:	sub    dh,BYTE PTR [ecx]
  43b416:	pushf  
  43b417:	inc    di
  43b419:	or     dh,BYTE PTR [ebp+ebp*2-0x42eea4]
  43b420:	add    BYTE PTR [eax],al
  43b422:	add    ah,al
  43b424:	pop    edx
  43b425:	add    al,0x44
  43b427:	push   esi
  43b428:	add    al,0xc8
  43b42a:	imul   ecx,DWORD PTR [esi+edi*4-0x6e],0x68
  43b42f:	adc    BYTE PTR [edi-0x3f0e1804],ch
  43b435:	xchg   edi,eax
  43b436:	data16 daa 
  43b438:	rcl    DWORD PTR [ebx+eax*2+0x739bc10e],1
  43b43f:	sbb    al,0xbe
  43b441:	cld    
  43b442:	xchg   esi,eax
  43b443:	repz test eax,0xa22e61a1
  43b449:	mov    ch,0x3c
  43b44b:	or     eax,DWORD PTR [edi]
  43b44d:	nop
  43b44e:	lahf   
  43b44f:	rcl    BYTE PTR [esi-0x6b],1
  43b452:	mov    al,ds:0x3e753c7
  43b457:	adc    eax,DWORD PTR [esi]
  43b459:	mov    ds:0x7c47e0a6,al
  43b45e:	xchg   ebp,eax
  43b45f:	fild   QWORD PTR [ebx+0x75]
  43b462:	mov    bl,0xdb
  43b464:	ja     0x43b44d
  43b466:	add    esp,DWORD PTR [esi+0x7]
  43b469:	mov    ds:0x5053d2a6,eax
  43b46e:	mov    ds:0xb4526b90,al
  43b473:	xchg   esi,eax
  43b474:	imul   eax,DWORD PTR [esi-0x3d],0x1c
  43b478:	cld    
  43b479:	inc    ebx
  43b47a:	push   es
  43b47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b47c:	popa   
  43b47d:	push   ebx
  43b47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b47f:	lods   eax,DWORD PTR ds:[esi]
  43b480:	ja     0x43b4c6
  43b482:	enter  0x6c7,0xf5
  43b486:	add    eax,0xa3000000
  43b48b:	popa   
  43b48c:	inc    esp
  43b48d:	popf   
  43b48e:	test   eax,0x4d951661
  43b493:	fs add al,0xc3
  43b496:	in     al,0xfb
  43b498:	les    eax,FWORD PTR [edx]
  43b49a:	xor    ah,BYTE PTR [edx+0x13]
  43b49d:	enter  0x4217,0xff
  43b4a1:	add    ebx,DWORD PTR [esi]
  43b4a3:	or     DWORD PTR [edi],edx
  43b4a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b4a6:	push   ecx
  43b4a7:	jo     0x43b4cd
  43b4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b4aa:	dec    edi
  43b4ab:	js     0x43b4b5
  43b4ad:	test   eax,0x3e75451
  43b4b2:	add    DWORD PTR [esi],eax
  43b4b4:	mov    ds:0xc34820a6,al
  43b4b9:	call   0x6306:0xa2ba690c
  43b4c0:	stos   DWORD PTR es:[edi],eax
  43b4c1:	mov    ds:0x3e76600,al
  43b4c6:	ins    DWORD PTR es:[edi],dx
  43b4c7:	or     BYTE PTR [eax],al
  43b4c9:	call   0x6a5e:0xb43d7755
  43b4d0:	imul   ebx,DWORD PTR [ebx-0x16929160],0xbafe4ff0
  43b4da:	xchg   ebp,eax
  43b4db:	addr16 call 0xaa6e:0x687c
  43b4e2:	ins    BYTE PTR es:[edi],dx
  43b4e3:	pop    esp
  43b4e4:	ins    DWORD PTR es:[edi],dx
  43b4e5:	jp     0x43b514
  43b4e7:	jae    0x43b53a
  43b4e9:	jmp    0x9541afde
  43b4ee:	add    BYTE PTR [eax],al
  43b4f0:	add    BYTE PTR [esi+0x5c],bl
  43b4f3:	push   0x5a
  43b4f5:	push   ebx
  43b4f6:	pop    esp
  43b4f7:	je     0x43b53d
  43b4f9:	xor    ch,BYTE PTR [eax+0x6d]
  43b4fc:	pop    edx
  43b4fd:	push   esi
  43b4fe:	data16 arpl cx,bp
  43b501:	lock push cs
  43b503:	jmp    FWORD PTR ds:0x483d775a
  43b509:	pop    edi
  43b50a:	ja     0x43b57f
  43b50c:	cmp    ecx,DWORD PTR [edx-0x5]
  43b50f:	clc    
  43b510:	or     dh,ch
  43b512:	inc    ebp
  43b513:	arpl   WORD PTR ds:0x66003bbb,bx
  43b519:	out    dx,al
  43b51a:	inc    edi
  43b51b:	arpl   WORD PTR ds:0x8646a9a,bx
  43b521:	jnp    0x43b588
  43b523:	dec    esi
  43b524:	or     al,0x90
  43b526:	jbe    0x43b528
  43b528:	out    dx,eax
  43b529:	lock cmp BYTE PTR [ebx+0xe],ah
  43b52d:	pop    esi
  43b52e:	jo     0x43b580
  43b530:	or     BYTE PTR [esi+0x70],dl
  43b533:	je     0x43b51e
  43b535:	lock and dh,bh
  43b538:	lods   eax,DWORD PTR ds:[esi]
  43b539:	and    BYTE PTR [ebp+0x6a],0xa0
  43b53d:	jle    0x43b5a9
  43b53f:	jae    0x43b516
  43b541:	lods   al,BYTE PTR ds:[esi]
  43b542:	gs ins DWORD PTR es:[edi],dx
  43b544:	add    BYTE PTR [ecx-0x658f986e],ah
  43b54a:	push   es
  43b54b:	mov    es,WORD PTR [eax]
  43b54d:	dec    esi
  43b54e:	scas   eax,DWORD PTR es:[edi]
  43b54f:	pop    esi
  43b550:	inc    esi
  43b551:	cmp    BYTE PTR [ebx+0x6565],ah
  43b557:	add    BYTE PTR [edx-0x649c9868],ch
  43b55d:	push   es
  43b55e:	lea    eax,[eax]
  43b560:	mov    gs,WORD PTR [edi-0x5f29bba2]
  43b566:	dec    eax
  43b567:	jb     0x43b5ce
  43b569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b56a:	dec    edi
  43b56b:	add    dl,bl
  43b56d:	add    al,0x4b
  43b56f:	gs mov esi,0xbe7059c4
  43b575:	sahf   
  43b576:	push   0x65
  43b578:	sbb    al,BYTE PTR [esi]
  43b57a:	mov    al,BYTE PTR [ecx]
  43b57c:	int    0xaf
  43b57e:	ins    BYTE PTR es:[edi],dx
  43b57f:	push   edi
  43b580:	mov    bl,0x98
  43b582:	pop    esp
  43b583:	outs   dx,DWORD PTR ds:[esi]
  43b584:	mov    ebp,0xc6003bce
  43b589:	add    al,0x4a
  43b58b:	lods   eax,DWORD PTR gs:[esi]
  43b58d:	fwait
  43b58e:	imul   esi,DWORD PTR [edi+ebp*4-0x6c],0x3b
  43b593:	ins    BYTE PTR es:[edi],dx
  43b594:	stos   DWORD PTR es:[edi],eax
  43b595:	xchg   ebp,eax
  43b596:	imul   eax,DWORD PTR [ebp+0x12],0xffffffc4
  43b59a:	clc    
  43b59b:	jmp    DWORD PTR [edi]
  43b59d:	add    al,0x3f
  43b59f:	gs inc bh
  43b5a2:	pop    ebp
  43b5a3:	jae    0x43b59e
  43b5a5:	mov    ds:0x2ed655f,eax
  43b5aa:	mov    BYTE PTR [ecx],al
  43b5ac:	or     eax,0xba556cb0
  43b5b1:	mov    eax,ds:0xb4ef7459
  43b5b6:	pop    edi
  43b5b7:	outs   dx,BYTE PTR ds:[esi]
  43b5b8:	call   0x0:0x15105
  43b5bf:	dec    ebp
  43b5c0:	scas   al,BYTE PTR es:[edi]
  43b5c1:	ins    BYTE PTR es:[edi],dx
  43b5c2:	dec    ebp
  43b5c3:	repz retf 0x6c8d
  43b5c7:	adc    al,cl
  43b5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b5ca:	ds repz and edi,ebp
  43b5ce:	inc    edx
  43b5cf:	adc    eax,0xa5eacc4
  43b5d4:	ret    0xff90
  43b5d7:	je     0x43b632
  43b5d9:	add    al,0x41
  43b5db:	(bad)  
  43b5dc:	fwait
  43b5dd:	mov    cl,0x66
  43b5df:	aad    0x83
  43b5e1:	cdq    
  43b5e2:	jo     0x43b5d7
  43b5e4:	xchg   esp,eax
  43b5e5:	dec    BYTE PTR [esi+ecx*8+0x79]
  43b5e9:	mov    eax,ds:0x8e7cd64a
  43b5ee:	pop    esi
  43b5ef:	int3   
  43b5f0:	xor    BYTE PTR [eax-0x6675319a],0x72
  43b5f7:	mov    edi,0xf1c3fc90
  43b5fc:	cmp    al,0xa1
  43b5fe:	jae    0x43b5bc
  43b600:	push   esi
  43b601:	call   0x8568:0xc0588c63
  43b608:	inc    eax
  43b609:	mov    bl,0xff
  43b60b:	or     al,0x59
  43b60d:	std    
  43b60e:	inc    eax
  43b60f:	mov    ?,WORD PTR [ebx]
  43b611:	mov    bl,0x66
  43b613:	lea    ecx,[ebx-0x65]
  43b616:	jo     0x43b5bf
  43b618:	cmp    BYTE PTR [edx-0x311bba0],bl
  43b61e:	sub    esi,eax
  43b620:	xor    BYTE PTR [ebp+0x69],dl
  43b626:	push   edi
  43b627:	add    DWORD PTR [ebx-0x66069ebf],edx
  43b62d:	dec    edi
  43b62e:	pop    esp
  43b62f:	pop    ss
  43b630:	call   0x4c4b:0xfc88f373
  43b637:	push   gs
  43b639:	inc    esi
  43b63a:	inc    esi
  43b63b:	bt     DWORD PTR [edx+0x44],esp
  43b63f:	pop    es
  43b640:	out    0x3,eax
  43b642:	jo     0x43b64a
  43b644:	mov    ds:0xc25320a6,al
  43b649:	xchg   ebx,eax
  43b64a:	inc    ebx
  43b64b:	outs   dx,BYTE PTR ds:[esi]
  43b64c:	mov    ecx,0xe7701ba7
  43b651:	add    ecx,ebx
  43b653:	push   es
  43b654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b655:	fwait
  43b656:	sbb    eax,0x2b9c9b75
  43b65b:	bound  edi,QWORD PTR [esp+esi*4+0x29ff86c]
  43b662:	mov    dl,0x61
  43b664:	xchg   ebx,eax
  43b665:	mov    al,0xd4
  43b667:	popa   
  43b668:	sbb    DWORD PTR [edi-0x5886923d],0xffffffdb
  43b66f:	outs   dx,DWORD PTR ds:[esi]
  43b670:	out    0x3,eax
  43b672:	pop    DWORD PTR [esi]
  43b674:	mov    ds:0x804fc0a6,al
  43b679:	popf   
  43b67a:	shl    BYTE PTR [edi+0x72],1
  43b67d:	mov    bh,0x94
  43b67f:	je     0x43b6cd
  43b681:	mov    ds:0x9d555690,eax
  43b686:	mov    edi,0x915661
  43b68b:	add    BYTE PTR [eax],al
  43b68d:	lods   eax,DWORD PTR ds:[esi]
  43b68e:	(bad)  
  43b68f:	out    0x3,eax
  43b691:	es pop es
  43b693:	sub    al,0x9e
  43b695:	nop
  43b696:	dec    ecx
  43b697:	inc    esp
  43b698:	sahf   
  43b699:	add    DWORD PTR [esi],0x61a60233
  43b69f:	cmp    DWORD PTR [eax-0x6ee99dc7],ebp
  43b6a5:	inc    ebp
  43b6a6:	pusha  
  43b6a7:	add    al,0xb5
  43b6a9:	fdivr  st(7),st
  43b6ab:	pop    ebp
  43b6ac:	add    dh,BYTE PTR [edx]
  43b6ae:	bound  edx,QWORD PTR [ebx]
  43b6b0:	mov    bh,0x5f
  43b6b2:	(bad)  
  43b6b3:	cmc    
  43b6b4:	mov    esp,0xa1046d26
  43b6b9:	inc    eax
  43b6ba:	dec    esi
  43b6bb:	add    BYTE PTR [edi],al
  43b6bd:	lea    ebp,[esi+0x6e]
  43b6c0:	cld    
  43b6c1:	push   ecx
  43b6c2:	jae    0x43b72b
  43b6c4:	(bad)  
  43b6c5:	xchg   BYTE PTR [esi+0x0],dl
  43b6c8:	xchg   ebx,eax
  43b6c9:	icebp  
  43b6ca:	dec    esi
  43b6cb:	lds    edi,FWORD PTR [bx+di+0x73]
  43b6cf:	arpl   WORD PTR [ebp+edx*2+0x5cb0736d],bx
  43b6d6:	fs imul ebp,ecx,0xfffffff0
  43b6da:	das    
  43b6db:	(bad)  
  43b6dc:	cwde   
  43b6dd:	push   edi
  43b6de:	push   0x74
  43b6e0:	xchg   ebp,eax
  43b6e1:	mov    BYTE PTR [ecx+0x63],ch
  43b6e4:	mov    BYTE PTR [esp+ecx*2+0x58839a63],cl
  43b6eb:	popa   
  43b6ec:	mov    WORD PTR [edi+0xb8f8f7],ds
  43b6f2:	add    BYTE PTR [eax],al
  43b6f4:	icebp  
  43b6f5:	inc    ebp
  43b6f6:	arpl   WORD PTR [ebp-0x7b],di
  43b6f9:	fs push 0x74
  43b6fc:	jns    0x43b771
  43b6fe:	arpl   WORD PTR [ebx+esi*1-0x7b808c92],ax
  43b705:	idiv   eax
  43b707:	aas    
  43b708:	out    dx,al
  43b709:	inc    ebp
  43b70a:	arpl   WORD PTR [ebp+0x5a],dx
  43b70d:	fs push 0x5c
  43b710:	pop    esp
  43b711:	jae    0x43b772
  43b713:	push   ebp
  43b714:	push   edx
  43b715:	idiv   eax
  43b717:	fucomi st,st(7)
  43b719:	inc    ebp
  43b71a:	arpl   WORD PTR ds:0x3a5f6b34,si
  43b720:	pop    esp
  43b721:	dec    ebp
  43b722:	pop    edi
  43b723:	cmp    al,0x92
  43b725:	push   edi
  43b726:	add    BYTE PTR [ebp+0x1a7743ed],dl
  43b72c:	sub    DWORD PTR [ecx+0x6b],0x39
  43b730:	mov    fs,WORD PTR [edi+ebx*2-0x4]
  43b734:	xchg   ebx,eax
  43b735:	jp     0x43b79a
  43b737:	add    al,cl
  43b739:	popf   
  43b73a:	inc    ecx
  43b73b:	outs   dx,BYTE PTR ds:[esi]
  43b73c:	hlt    
  43b73d:	xchg   ecx,eax
  43b73e:	dec    edi
  43b73f:	add    BYTE PTR ds:0xfb72540d,dh
  43b745:	lods   eax,DWORD PTR ds:[esi]
  43b746:	arpl   WORD PTR [eax-0x43],dx
  43b749:	call   0x7566:0xa74f706d
  43b750:	inc    edi
  43b751:	cmp    al,0xff
  43b754:	inc    edi
  43b755:	or     edi,DWORD PTR [edi]
  43b757:	add    BYTE PTR gs:[eax],al
  43b75a:	add    BYTE PTR [esi-0x51],al
  43b75d:	pop    ebp
  43b75e:	outs   dx,BYTE PTR ds:[esi]
  43b75f:	inc    edi
  43b760:	mov    bl,0x6c
  43b762:	gs scas eax,DWORD PTR es:[edi]
  43b764:	mov    esp,0xaa6635d
  43b769:	inc    ebx
  43b76a:	add    DWORD PTR [ebp+0x774d6ca7],edx
  43b770:	nop
  43b771:	ins    DWORD PTR es:[edi],dx
  43b772:	add    BYTE PTR [eax+0xc],dl
  43b775:	inc    ebp
  43b776:	gs int3 
  43b778:	xchg   esi,eax
  43b779:	inc    ecx
  43b77a:	je     0x43b7f3
  43b77c:	(bad)  
  43b77d:	ds jb  0x43b7ed
  43b780:	(bad)
  43b784:	nop
  43b785:	ins    BYTE PTR es:[edi],dx
  43b786:	add    BYTE PTR [edx],dh
  43b788:	or     al,0x47
  43b78a:	jo     0x43b743
  43b78c:	nop
  43b78d:	cmp    al,0x65
  43b78f:	mov    ecx,0xba6f6c95
  43b794:	mov    ecx,0xba0fff8
  43b799:	aas    
  43b79a:	gs (bad) 
  43b79c:	mov    ebp,0xa7cf626d
  43b7a1:	data16 jne 0x43b7ae
  43b7a4:	or     cl,BYTE PTR [esi+0x6ca80902]
  43b7aa:	dec    ebx
  43b7ab:	test   DWORD PTR [ebx-0x631490a6],0x13f3535c
  43b7b5:	mov    ds:0xfce05673,eax
  43b7ba:	dec    ebp
  43b7bb:	repnz and al,0x9f
  43b7be:	jae    0x43b7c0
  43b7c0:	add    BYTE PTR [eax],al
  43b7c2:	or     edx,DWORD PTR cs:[esi-0x600bd58e]
  43b7c9:	push   0x3a
  43b7cb:	sub    al,0x4
  43b7cd:	jle    0x43b7c1
  43b7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7d0:	lahf   
  43b7d1:	jae    0x43b81a
  43b7d3:	fcom   DWORD PTR [edx-0x473bed9e]
  43b7d9:	bound  eax,QWORD PTR [eax]
  43b7db:	leave  
  43b7dc:	mov    BYTE PTR [eax+0x3],ch
  43b7df:	loopne 0x43b7dd
  43b7e1:	pop    esp
  43b7e2:	icebp  
  43b7e3:	xchg   ecx,eax
  43b7e4:	lahf   
  43b7e5:	pusha  
  43b7e6:	or     dh,BYTE PTR [ecx-0x631e9d78]
  43b7ec:	fwait
  43b7ed:	imul   ecx,edi,0xd64a8d9c
  43b7f3:	nop
  43b7f4:	xchg   ecx,eax
  43b7f5:	pop    esi
  43b7f6:	int3   
  43b7f7:	sub    BYTE PTR [ebp+0x43b4cff],0x47
  43b7fe:	rcl    BYTE PTR [ecx-0x5538a361],0x97
  43b805:	outs   dx,DWORD PTR ds:[esi]
  43b806:	mov    edi,0xf135fd76
  43b80b:	(bad)  
  43b80c:	xchg   edx,eax
  43b80d:	xchg   bp,ax
  43b80f:	push   ebx
  43b810:	scas   eax,DWORD PTR es:[edi]
  43b811:	lea    cx,[ebx-0x69]
  43b815:	jo     0x43b80a
  43b817:	rol    BYTE PTR [ebx],1
  43b819:	inc    ebx
  43b81a:	sbb    BYTE PTR [edx-0x63],0x6b
  43b81e:	mov    eax,ds:0xf373a342
  43b823:	jb     0x43b822
  43b825:	inc    esi
  43b826:	add    BYTE PTR [eax],al
  43b828:	add    BYTE PTR [ebp+0x606d9933],al
  43b82e:	dec    ebx
  43b82f:	mov    ds:0xc074173,eax
  43b834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b835:	pusha  
  43b836:	pop    es
  43b837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b838:	add    al,0x2f
  43b83a:	jns    0x43b844
  43b83c:	xchg   ecx,eax
  43b83d:	xor    DWORD PTR [ebx+0x2],ebp
  43b840:	lahf   
  43b841:	(bad)  
  43b842:	hlt    
  43b843:	pop    edx
  43b844:	add    esi,DWORD PTR [edx]
  43b846:	push   0xfffffff3
  43b848:	mov    al,0x4d
  43b84a:	or     ebx,DWORD PTR gs:[ecx-0x5e06c1dd]
  43b851:	sbb    eax,DWORD PTR [edi]
  43b853:	sbb    DWORD PTR [esi],eax
  43b855:	inc    ebx
  43b856:	fs (bad) 
  43b858:	(bad)
  43b85c:	xchg   esp,eax
  43b85d:	sub    eax,0x84b0c46c
  43b862:	hlt    
  43b863:	cmp    BYTE PTR [ecx+esi*1],al
  43b866:	pop    esi
  43b867:	retf   
  43b868:	xchg   edi,eax
  43b869:	es push 0xffffffc6
  43b86c:	(bad)  
  43b86d:	ins    BYTE PTR es:[edi],dx
  43b86e:	hlt    
  43b86f:	sti    
  43b870:	add    eax,0x998c76ba
  43b875:	ret    
  43b876:	pop    ebp
  43b877:	mov    DWORD PTR [edi-0x70498435],ebx
  43b87d:	lods   eax,DWORD PTR ds:[esi]
  43b87e:	jp     0x43b800
  43b880:	cwde   
  43b881:	ficomp DWORD PTR [ebx-0x19]
  43b884:	add    eax,DWORD PTR [ebp-0x3f6169f7]
  43b88a:	pop    edx
  43b88b:	jg     0x43b822
  43b88d:	add    BYTE PTR [eax],al
  43b88f:	add    BYTE PTR [ecx-0x6e407c9b],dl
  43b895:	ja     0x43b8e5
  43b897:	nop
  43b898:	mov    esi,DWORD PTR [esi-0x19]
  43b89b:	add    ebp,DWORD PTR [ebp-0x6467d9fa]
  43b8a1:	ja     0x43b8e7
  43b8a3:	rcl    BYTE PTR [ecx-0x746fb189],0x76
  43b8aa:	out    0x3,eax
  43b8ac:	mov    eax,DWORD PTR ds:0x778c2e00
  43b8b2:	push   eax
  43b8b3:	cmp    ecx,DWORD PTR [edx-0x79e59cae]
  43b8b9:	push   esi
  43b8ba:	setae  BYTE PTR [bp+0x71]
  43b8bf:	cmp    ah,BYTE PTR [ebx+0x54]
  43b8c2:	je     0x43b8c4
  43b8c4:	push   0x5d
  43b8c6:	add    cl,bh
  43b8c8:	lock xor DWORD PTR [esi+0x4],ebp
  43b8cc:	nop
  43b8cd:	ja     0x43b932
  43b8cf:	push   ds
  43b8d0:	mov    BYTE PTR [ebp+0x64],bl
  43b8d3:	inc    BYTE PTR [ebx+0x6cc87442]
  43b8d9:	ins    BYTE PTR es:[edi],dx
  43b8da:	imul   ecx,edi,0xa7f8f363
  43b8e0:	lock xor DWORD PTR [esi+edi*4+0x5f],ebp
  43b8e5:	push   0x675ad051
  43b8ea:	imul   esi,DWORD PTR [esi-0x42a088c1],0xe96a5e89
  43b8f4:	add    BYTE PTR [eax],al
  43b8f6:	add    al,dh
  43b8f8:	lods   al,BYTE PTR ds:[esi]
  43b8f9:	std    
  43b8fa:	mov    ecx,0x9b50777d
  43b8ff:	jnp    0x43b953
  43b901:	arpl   WORD PTR [edx+0x7f675667],bx
  43b907:	fs pop esi
  43b909:	jno    0x43b8a5
  43b90b:	ins    BYTE PTR es:[edi],dx
  43b90c:	push   esp
  43b90d:	je     0x43b89f
  43b90f:	pop    ebx
  43b910:	pop    ebp
  43b911:	add    BYTE PTR [edi-0x7b91ce10],dl
  43b917:	push   ecx
  43b918:	ja     0x43b97d
  43b91a:	sub    eax,0x55656252
  43b91f:	jl     0x43b984
  43b921:	push   ecx
  43b922:	jmp    0x2a43da17
  43b927:	addr16 push esp
  43b929:	outs   dx,BYTE PTR ds:[esi]
  43b92a:	add    dh,al
  43b92c:	fwait
  43b92d:	outs   dx,DWORD PTR ds:[esi]
  43b92e:	gs mov eax,0x1ffff8a3
  43b934:	or     al,0x3f
  43b936:	gs push ds
  43b938:	scas   eax,DWORD PTR es:[edi]
  43b939:	pop    ecx
  43b93a:	jae    0x43b93a
  43b93c:	mov    bl,0x66
  43b93e:	jo     0x43b93f
  43b940:	xchg   esi,eax
  43b941:	inc    ecx
  43b942:	outs   dx,BYTE PTR ds:[esi]
  43b943:	cld    
  43b944:	cdq    
  43b945:	clc    
  43b946:	push   DWORD PTR [esi-0x1497c4fa]
  43b94c:	xchg   esp,eax
  43b94d:	dec    ebp
  43b94e:	jo     0x43b90a
  43b950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b951:	push   0x57
  43b953:	call   0x6ca7:0xcd012b06
  43b95a:	dec    ecx
  43b95b:	add    BYTE PTR [eax],al
  43b95d:	add    BYTE PTR [ecx-0x5bb69967],ch
  43b963:	xchg   esp,eax
  43b964:	addr16 add ch,bl
  43b967:	or     al,BYTE PTR [edx+esi*2-0x45]
  43b96b:	add    DWORD PTR [ecx+0x63],0xfff89ca5
  43b972:	mov    ecx,0x8f6f5404
  43b977:	pushf  
  43b978:	popa   
  43b979:	arpl   WORD PTR [ebp-0x77ffa26e],sp
  43b97f:	or     edi,DWORD PTR [edi]
  43b981:	gs jle 0x43b931
  43b984:	pop    ebp
  43b985:	jns    0x43b9ff
  43b987:	cdq    
  43b988:	pop    ecx
  43b989:	jb     0x43b9f9
  43b98b:	mov    ch,0x6c
  43b98d:	popa   
  43b98e:	mov    esi,0x43fff8a6
  43b993:	or     BYTE PTR [ebp+0x61],al
  43b996:	stos   BYTE PTR es:[edi],al
  43b997:	mov    al,ds:0x996e6e61
  43b99c:	outs   dx,DWORD PTR ds:[esi]
  43b99d:	push   eax
  43b99e:	lds    edx,FWORD PTR [ebx+0xab97466]
  43b9a4:	rol    DWORD PTR [ecx],cl
  43b9a6:	repz lea edx,es:[eax-0x66]
  43b9ab:	xor    DWORD PTR [eax-0x3207b98],esp
  43b9b1:	shl    ecx,0xc
  43b9b4:	lahf   
  43b9b5:	jae    0x43b9fb
  43b9b7:	inc    edi
  43b9b8:	xchg   edx,eax
  43b9b9:	arpl   WORD PTR [ecx+edi*1-0x4c],dx
  43b9bd:	push   0x3fce060
  43b9c2:	add    BYTE PTR [eax],al
  43b9c4:	add    dl,dh
  43b9c6:	sub    BYTE PTR [edi-0x62f5cd8d],bl
  43b9cc:	bound  eax,QWORD PTR [eax+0x1c]
  43b9cf:	xchg   ecx,eax
  43b9d0:	ins    DWORD PTR es:[edi],dx
  43b9d1:	repz iret 
  43b9d3:	add    eax,DWORD PTR [ecx+0x4e]
  43b9d6:	cld    
  43b9d7:	mov    ebp,0x8ded126b
  43b9dc:	dec    ebx
  43b9dd:	adc    al,0xf2
  43b9df:	cdq    
  43b9e0:	push   eax
  43b9e1:	repz ret 
  43b9e3:	add    eax,DWORD PTR [ecx+0xe]
  43b9e6:	fsubr  QWORD PTR [esi+ebx*2+0x7392c301]
  43b9ed:	repz arpl WORD PTR [ecx+eax*2],ax
  43b9f1:	push   ss
  43b9f2:	mov    ah,0xa9
  43b9f4:	add    ax,0x91cc
  43b9f8:	jo     0x43b9bb
  43b9fa:	ret    0x739d
  43b9fd:	repz jo 0x43b9fd
  43ba00:	inc    ebx
  43ba01:	retf   0x8c8c
  43ba04:	pop    esi
  43ba05:	fistp  QWORD PTR [esp+edx*4+0x4a]
  43ba09:	(bad)  
  43ba0a:	mov    WORD PTR [ebp-0x567533a2],cs
  43ba10:	(bad)  
  43ba11:	cmp    al,0xeb
  43ba13:	dec    BYTE PTR [edx-0x40]
  43ba16:	mov    BYTE PTR [ecx-0x448c65a2],ch
  43ba1c:	push   0x6b8f92a1
  43ba21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba22:	push   es
  43ba23:	push   eax
  43ba24:	xchg   esp,eax
  43ba25:	mov    BYTE PTR [ebx+0x2a],ch
  43ba28:	mov    ds:0x96000000,al
  43ba2d:	imul   eax,DWORD PTR [esi-0x70],0xffffff97
  43ba31:	push   es
  43ba32:	fild   WORD PTR [ecx]
  43ba34:	test   al,0x67
  43ba36:	aaa    
  43ba37:	scas   al,BYTE PTR es:[edi]
  43ba38:	lea    esi,[ebx+esi*1-0x71]
  43ba3c:	dec    ebp
  43ba3d:	arpl   WORD PTR [esi],bx
  43ba3f:	lahf   
  43ba40:	pop    ebp
  43ba41:	pop    eax
  43ba42:	out    0x3,eax
  43ba44:	inc    eax
  43ba45:	push   esp
  43ba46:	sub    al,0xb2
  43ba48:	pop    es
  43ba49:	xor    eax,0x63589fc9
  43ba4e:	out    0x3,eax
  43ba50:	jb     0x43ba58
  43ba52:	and    BYTE PTR [ecx-0x67ec95dd],dl
  43ba58:	das    
  43ba59:	popa   
  43ba5a:	or     cl,BYTE PTR [ebp-0x5fffabe6]
  43ba60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ba61:	lock mov al,0x2
  43ba64:	xor    ch,BYTE PTR [edx-0x25]
  43ba67:	mov    bh,0x11
  43ba69:	popa   
  43ba6a:	ret    0x148f
  43ba6d:	push   esp
  43ba6e:	rcr    BYTE PTR [edi+0x3baf084],0xbe
  43ba75:	pop    edi
  43ba76:	ror    DWORD PTR [ebp-0x4f4c8aef],1
  43ba7c:	aad    0x6a
  43ba7e:	fwait
  43ba7f:	xchg   esp,eax
  43ba80:	mov    bh,0x7a
  43ba82:	mov    ch,0x9a
  43ba84:	retf   0xb667
  43ba87:	call   0x737:0x3e757d0
  43ba8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba8f:	xchg   ecx,eax
  43ba90:	add    BYTE PTR [eax],al
  43ba92:	add    BYTE PTR [ebp-0x2e436c8a],bh
  43ba98:	jp     0x43ba49
  43ba9a:	mov    ds:0xa2975ec7,al
  43ba9f:	sahf   
  43baa0:	add    BYTE PTR gs:[eax+esi*8-0x7d560061],al
  43baa8:	jns    0x43bb1a
  43baaa:	pop    ebp
  43baab:	xor    BYTE PTR [ebx+0x6f],dl
  43baae:	push   esp
  43baaf:	push   0x5e2a6362
  43bab4:	pop    esi
  43bab5:	je     0x43bafb
  43bab7:	outs   dx,DWORD PTR ds:[esi]
  43bab8:	je     0x43bb0b
  43baba:	jmp    0x2a4384af
  43babf:	cmp    DWORD PTR [eax+0x70],0x6c64a13d
  43bac6:	inc    esp
  43bac7:	nop
  43bac8:	bound  esp,QWORD PTR [ebx+0x2a]
  43bacb:	jle    0x43bb2a
  43bacd:	je     0x43bad3
  43bacf:	jg     0x43bb44
  43bad1:	add    BYTE PTR [edx-0x10],bl
  43bad4:	xor    DWORD PTR [esi+0x10],ebp
  43bad7:	addr16 jae 0x43bb17
  43bada:	sti    
  43badb:	push   ebp
  43badc:	push   eax
  43badd:	je     0x43bae3
  43badf:	outs   dx,DWORD PTR ds:[esi]
  43bae0:	push   eax
  43bae1:	ins    DWORD PTR es:[edi],dx
  43bae2:	add    edi,ebp
  43bae4:	mov    ah,0xff
  43bae6:	sub    DWORD PTR [ecx+0x54dd7078],eax
  43baec:	fs ins DWORD PTR es:[edi],dx
  43baee:	aad    0x62
  43baf0:	pop    esi
  43baf1:	ja     0x43ba94
  43baf3:	push   ecx
  43baf4:	bound  ebp,QWORD PTR [eax-0x17]
  43baf7:	add    BYTE PTR [eax],al
  43baf9:	add    al,dh
  43bafb:	mov    esi,0x7862a9ff
  43bb00:	jo     0x43bab7
  43bb02:	test   al,0x50
  43bb04:	ins    DWORD PTR es:[edi],dx
  43bb05:	shl    DWORD PTR [eax+edx*2-0xa0f378c],0xfe
  43bb0d:	mov    ch,0x80
  43bb0f:	fs push 0xffffffb9
  43bb12:	bound  ebx,QWORD PTR [esi+0x5d]
  43bb15:	mov    WORD PTR [ebx+0x62],fs
  43bb18:	push   esp
  43bb19:	jle    0x43bb76
  43bb1b:	fs push 0x0
  43bb1e:	dec    edx
  43bb1f:	add    ecx,DWORD PTR [edi+0x1]
  43bb22:	push   ebp
  43bb23:	nop
  43bb24:	ins    BYTE PTR es:[edi],dx
  43bb25:	push   ebx
  43bb26:	jae    0x43bab7
  43bb28:	dec    ebx
  43bb29:	jne    0x43bb93
  43bb2b:	les    ebp,FWORD PTR [ebp+0x74]
  43bb2e:	ret    0x6a73
  43bb31:	imul   esp,DWORD PTR [esi+0x1e000071],0xb7704709
  43bb3b:	je     0x43bb91
  43bb3d:	push   0x64595db8
  43bb42:	push   es
  43bb43:	jp     0x43bba8
  43bb45:	gs sub al,0x3
  43bb48:	pop    eax
  43bb49:	add    DWORD PTR ds:0x3537460,edx
  43bb4f:	pop    edi
  43bb50:	dec    ebx
  43bb51:	jne    0x43bb4b
  43bb53:	inc    ebx
  43bb54:	ins    DWORD PTR es:[edi],dx
  43bb55:	je     0x43bb49
  43bb57:	jns    0x43bbc3
  43bb59:	imul   esp,esi,0x6f3b6b
  43bb5f:	add    BYTE PTR [eax],al
  43bb61:	mov    bh,0x78
  43bb63:	je     0x43bb65
  43bb65:	rol    BYTE PTR [ebx],1
  43bb67:	aas    
  43bb68:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  43bb6a:	push   esi
  43bb6b:	addr16 imul esi,edi,0x78
  43bb6f:	inc    ecx
  43bb70:	outs   dx,BYTE PTR ds:[esi]
  43bb71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb72:	jns    0x43bbde
  43bb74:	ins    DWORD PTR es:[edi],dx
  43bb75:	mov    ebx,0xac6f6176
  43bb7a:	or     bh,BYTE PTR [eax+eax*1+0x49]
  43bb7e:	je     0x43bbdd
  43bb80:	popa   
  43bb81:	ss pop edi
  43bb83:	push   eax
  43bb84:	jb     0x43bbc3
  43bb86:	gs pop ebp
  43bb88:	jae    0x43bb33
  43bb8a:	inc    ebx
  43bb8b:	imul   edx,DWORD PTR [ebp-0x67],0x5f
  43bb8f:	push   0x57
  43bb91:	dec    edx
  43bb92:	or     cl,BYTE PTR [edi+0x67799e01]
  43bb98:	imul   esi,ebx,0xffffff8a
  43bb9b:	ins    BYTE PTR es:[edi],dx
  43bb9c:	push   eax
  43bb9d:	rol    DWORD PTR [esi+0x7ac76776],0x65
  43bba4:	arpl   bp,ax
  43bba6:	jle    0x43bc10
  43bba8:	jae    0x43bb38
  43bbaa:	mov    esp,?
  43bbac:	sbb    bl,dh
  43bbae:	sahf   
  43bbaf:	pusha  
  43bbb0:	data16 sahf 
  43bbb2:	push   eax
  43bbb3:	js     0x43bc09
  43bbb5:	pushf  
  43bbb6:	pop    eax
  43bbb7:	addr16 push 0xffffffa3
  43bbba:	push   ecx
  43bbbb:	imul   esi,DWORD PTR [edx-0x76],0x2b
  43bbbf:	addr16 popa 
  43bbc1:	mov    ?,WORD PTR [eax]
  43bbc3:	add    al,0xd2
  43bbc5:	add    BYTE PTR [eax],al
  43bbc7:	add    bl,dh
  43bbc9:	and    BYTE PTR [edx+0x77],dh
  43bbcc:	arpl   WORD PTR [esi+edx*2],bp
  43bbcf:	arpl   WORD PTR [ecx+0x47],sp
  43bbd2:	data16 ja 0x43bc15
  43bbd5:	pop    ss
  43bbd6:	gs push 0x52
  43bbd9:	adc    al,0x77
  43bbdb:	outs   dx,BYTE PTR ds:[esi]
  43bbdc:	dec    esi
  43bbdd:	sub    eax,0x20f3c304
  43bbe2:	jb     0x43bc5b
  43bbe4:	inc    ebx
  43bbe5:	in     al,dx
  43bbe6:	inc    ebp
  43bbe7:	arpl   WORD PTR [edi],sp
  43bbe9:	cmp    DWORD PTR [edi+0x77],esp
  43bbec:	inc    ebx
  43bbed:	push   DWORD PTR [ecx+0x5f]
  43bbf0:	push   cs
  43bbf1:	loopne 0x43bbef
  43bbf3:	(bad)
  43bbf6:	jb     0x43bc6f
  43bbf8:	add    edx,esp
  43bbfa:	dec    ebx
  43bbfb:	imul   eax,DWORD PTR [ebx],0xffffffc5
  43bbfe:	jb     0x43bc74
  43bc00:	sub    bl,al
  43bc02:	jnp    0x43bc04
  43bc04:	rep ins BYTE PTR es:[edi],dx
  43bc06:	std    
  43bc07:	cmp    al,0xe1
  43bc09:	(bad)  
  43bc0a:	ins    BYTE PTR es:[edi],dx
  43bc0b:	je     0x43bbbc
  43bc0d:	mov    edx,0xace17471
  43bc12:	jnp    0x43bc59
  43bc14:	into   
  43bc15:	push   es
  43bc16:	mov    al,ds:0xb007c803
  43bc1b:	jno    0x43bbe9
  43bc1d:	jb     0x43bb9f
  43bc1f:	fs (bad) 
  43bc21:	arpl   WORD PTR [esi-0x738d3984],si
  43bc27:	jo     0x43bbe7
  43bc29:	pop    esi
  43bc2a:	je     0x43bca3
  43bc2c:	add    BYTE PTR [eax],al
  43bc2e:	add    BYTE PTR [edi-0x4f8e85a3],cl
  43bc34:	outs   dx,BYTE PTR ds:[esi]
  43bc35:	xchg   edx,eax
  43bc36:	add    esp,DWORD PTR [edx-0x6b8dcff9]
  43bc3c:	jb     0x43bc8e
  43bc3e:	arpl   WORD PTR [edi-0x5198b2a1],dx
  43bc44:	arpl   WORD PTR [esi+0x77],ax
  43bc47:	test   DWORD PTR [edi+0x3b],ebx
  43bc4a:	jnp    0x43bc83
  43bc4c:	bound  esi,QWORD PTR [esi]
  43bc4e:	gs push ebp
  43bc50:	pop    esi
  43bc51:	aaa    
  43bc52:	js     0x43bc9e
  43bc54:	jns    0x43bc3d
  43bc56:	add    esp,DWORD PTR [ecx+0x47673609]
  43bc5c:	pop    eax
  43bc5d:	add    al,0x65
  43bc5f:	inc    eax
  43bc60:	jns    0x43bc62
  43bc62:	js     0x43bca8
  43bc64:	inc    ebx
  43bc65:	add    al,0x75
  43bc67:	push   ss
  43bc68:	jns    0x43bc7a
  43bc6a:	je     0x43bc93
  43bc6c:	pop    esp
  43bc6d:	cmc    
  43bc6e:	inc    edi
  43bc6f:	inc    esp
  43bc70:	push   0x70d0403
  43bc75:	es jno 0x43bc81
  43bc78:	jne    0x43bc46
  43bc7a:	jne    0x43bc83
  43bc7c:	pop    eax
  43bc7d:	shl    DWORD PTR [ebp+0xc],cl
  43bc80:	pop    ebp
  43bc81:	retf   0x1054
  43bc84:	push   0x730c75d4
  43bc89:	rol    BYTE PTR [edi-0x30],0x77
  43bc8d:	(bad)  
  43bc8e:	jne    0x43bc5c
  43bc90:	jbe    0x43bc92
  43bc92:	mov    ebp,0xe3000000
  43bc97:	pop    esp
  43bc98:	push   esp
  43bc99:	mov    esi,0x9c5d67bf
  43bc9e:	(bad)  
  43bc9f:	arpl   WORD PTR [eax+eiz*4-0x54],si
  43bca3:	ins    DWORD PTR es:[di],dx
  43bca5:	mov    al,dh
  43bca7:	arpl   WORD PTR [eax-0x6b],si
  43bcaa:	ret    
  43bcab:	pop    esp
  43bcac:	push   ecx
  43bcad:	jmp    0xa642fca2
  43bcb2:	lea    esi,[edx+0x4d]
  43bcb5:	mov    WORD PTR [edi-0x637f9189],ss
  43bcbb:	jae    0x43bd01
  43bcbd:	dec    esp
  43bcbe:	xchg   BYTE PTR [ecx+0x6e],cl
  43bcc1:	push   eax
  43bcc2:	jg     0x43bd36
  43bcc4:	imul   ebx,DWORD PTR [ebx-0x5a],0xef3d5d4b
  43bccb:	mov    ah,0xfd
  43bccd:	sbb    DWORD PTR [ebx+esi*2+0x4d],edx
  43bcd1:	inc    esp
  43bcd2:	dec    esi
  43bcd3:	js     0x43bd43
  43bcd5:	inc    eax
  43bcd6:	pop    ebx
  43bcd7:	je     0x43bd1d
  43bcd9:	inc    esp
  43bcda:	pop    esi
  43bcdb:	dec    edx
  43bcdc:	outs   dx,BYTE PTR ds:[esi]
  43bcdd:	adc    BYTE PTR [edi+0x73],al
  43bce0:	imul   ebx,DWORD PTR [ebx],0x55d4c1e
  43bce6:	div    DWORD PTR [ebx]
  43bce8:	(bad)  
  43bce9:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  43bced:	sti    
  43bcee:	adc    eax,0x3604744c
  43bcf3:	push   0x561f2c77
  43bcf8:	add    bh,bh
  43bcfa:	add    BYTE PTR [eax],al
  43bcfc:	add    dh,ch
  43bcfe:	cmp    al,0x63
  43bd00:	into   
  43bd01:	and    DWORD PTR [eax+0x63],edi
  43bd04:	fisttp DWORD PTR [ecx]
  43bd06:	pop    ecx
  43bd07:	pop    edi
  43bd08:	lds    eax,FWORD PTR ds:0x1bd14368
  43bd0e:	pop    es
  43bd0f:	add    BYTE PTR [eax],al
  43bd11:	cmp    eax,DWORD PTR [ecx]
  43bd13:	dec    edx
  43bd14:	gs sub eax,0x34657056
  43bd1a:	cmp    bl,BYTE PTR [ebp+0x79]
  43bd1d:	(bad)  
  43bd1e:	outs   dx,DWORD PTR ds:[esi]
  43bd1f:	dec    edi
  43bd20:	add    BYTE PTR [edx],ch
  43bd22:	add    DWORD PTR [edx+0x65],ecx
  43bd25:	ins    DWORD PTR es:[edi],dx
  43bd26:	inc    edx
  43bd27:	ins    BYTE PTR es:[edi],dx
  43bd28:	outs   dx,DWORD PTR ds:[esi]
  43bd29:	pop    ecx
  43bd2a:	fs inc ebx
  43bd2c:	arpl   WORD PTR gs:[edi],ax
  43bd2f:	jbe    0x43bd33
  43bd31:	mov    BYTE PTR [edi+ebx*2+0x53],ah
  43bd35:	outs   dx,DWORD PTR ds:[esi]
  43bd36:	jae    0x43bd86
  43bd38:	popa   
  43bd39:	jbe    0x43bdaf
  43bd3b:	pop    ebp
  43bd3c:	inc    ebp
  43bd3d:	mov    ds:0x1d00004e,al
  43bd42:	add    bh,BYTE PTR ds:0x6c619f71
  43bd48:	push   ebx
  43bd49:	mov    bl,0x5e
  43bd4b:	add    BYTE PTR [eax],al
  43bd4d:	retf   
  43bd4e:	ds dec esi
  43bd50:	inc    ecx
  43bd51:	or     bh,BYTE PTR [ebx+ebp*1]
  43bd54:	xor    dh,ah
  43bd56:	pop    esi
  43bd57:	ins    BYTE PTR es:[edi],dx
  43bd58:	ins    BYTE PTR es:[edi],dx
  43bd59:	retf   0x7006
  43bd5c:	add    DWORD PTR ds:0x736671,ebx
  43bd62:	add    BYTE PTR [eax],al
  43bd64:	jmp    0x4f60:0xde6e6174
  43bd6b:	add    ch,dh
  43bd6d:	add    ebp,DWORD PTR [edi+0x76]
  43bd70:	mov    ah,0x75
  43bd72:	jo     0x43bde6
  43bd74:	add    ebx,DWORD PTR [ecx+0x74]
  43bd77:	data16 fild DWORD PTR [edx]
  43bd7a:	bound  eax,QWORD PTR [ecx]
  43bd7c:	push   DWORD PTR [esp+ebp*2+0x55]
  43bd80:	xchg   esp,eax
  43bd81:	pop    edi
  43bd82:	imul   esp,DWORD PTR [ebx-0x45],0x76
  43bd86:	pop    ebp
  43bd87:	inc    ecx
  43bd88:	call   0x70ac:0xf3011606
  43bd8f:	outs   dx,BYTE PTR ds:[esi]
  43bd90:	xor    BYTE PTR [ebx-0x6145b594],ch
  43bd96:	cld    
  43bd97:	ins    BYTE PTR es:[edi],dx
  43bd98:	repz (bad) 
  43bd9a:	arpl   WORD PTR [ebx+ecx*8-0x5a],si
  43bd9e:	ins    DWORD PTR es:[edi],dx
  43bd9f:	push   ebx
  43bda0:	ror    DWORD PTR [ebx-0x490cffaf],0xfc
  43bda7:	dec    edi
  43bda8:	rcl    BYTE PTR [ebx-0x7e35bd9c],cl
  43bdae:	pusha  
  43bdaf:	inc    edx
  43bdb0:	retf   0x686b
  43bdb3:	dec    edx
  43bdb4:	xchg   edx,eax
  43bdb5:	xchg   edx,eax
  43bdb6:	addr16 push ecx
  43bdb8:	repz je 0x43bdbf
  43bdbb:	push   eax
  43bdbc:	xchg   edx,eax
  43bdbd:	imul   esp,DWORD PTR [ebp+0x4e],0xffffff8e
  43bdc1:	push   0x6a
  43bdc3:	jb     0x43bd5b
  43bdc5:	sbb    DWORD PTR [ebx+0x6c],ebp
  43bdc8:	add    BYTE PTR [eax],al
  43bdca:	add    BYTE PTR [esi-0x6f9c8bd4],cl
  43bdd0:	sub    BYTE PTR [edx*1+0x6e782cf2],al
  43bdd7:	xor    BYTE PTR [ebx+0x74],dl
  43bdda:	dec    edx
  43bddb:	xor    ah,al
  43bddd:	cld    
  43bdde:	push   esp
  43bddf:	repz (bad)
  43bde2:	je     0x43be2f
  43bde4:	daa    
  43bde5:	ins    DWORD PTR es:[edi],dx
  43bde6:	inc    esp
  43bde7:	pop    edx
  43bde8:	push   cs
  43bde9:	addr16 pop ebp
  43bdeb:	aas    
  43bdec:	stc    
  43bded:	ins    DWORD PTR es:[edi],dx
  43bdee:	ja     0x43be14
  43bdf0:	loopne 0x43bdee
  43bdf2:	sub    eax,0x74632ff3
  43bdf7:	sbb    ebx,DWORD PTR [edi]
  43bdf9:	push   0x78082e64
  43bdfe:	arpl   WORD PTR ds:0x5696bed,cx
  43be04:	adc    DWORD PTR [ebx+edx*2],eax
  43be07:	repz push es
  43be09:	mov    bh,0x64
  43be0b:	call   FWORD PTR [esi-0x5e]
  43be0e:	push   0x6cd54307
  43be13:	add    DWORD PTR [ecx+ebx*4+0x78],esp
  43be17:	fsub   DWORD PTR [esp+ecx*8+0x71]
  43be1b:	ret    0x6406
  43be1e:	add    eax,ebx
  43be20:	addr16 mov ebx,0xbc63a56b
  43be26:	outs   dx,BYTE PTR ds:[esi]
  43be27:	shl    DWORD PTR [ebx-0x5b],0x64
  43be2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be2c:	pop    ebp
  43be2d:	xchg   esi,eax
  43be2e:	outs   dx,DWORD PTR ds:[esi]
  43be2f:	add    BYTE PTR [eax],al
  43be31:	add    BYTE PTR [ebp+esi*2+0x6f3567f],bl
  43be38:	push   edx
  43be39:	add    edi,DWORD PTR [esi-0x689754c2]
  43be3f:	arpl   WORD PTR [ebx+0x68],si
  43be42:	shl    DWORD PTR [edi-0x7d],0x78
  43be46:	nop
  43be47:	push   ecx
  43be48:	out    0x3,eax
  43be4a:	pop    esi
  43be4b:	push   es
  43be4c:	ss dec esp
  43be4e:	scas   eax,DWORD PTR es:[edi]
  43be4f:	arpl   WORD PTR [ebx+0x67],cx
  43be52:	xchg   DWORD PTR [ebx+0x1e],esp
  43be55:	addr16 jl 0x43bea9
  43be58:	out    0x3,eax
  43be5a:	or     eax,0x55781606
  43be5f:	inc    esp
  43be60:	dec    esp
  43be61:	je     0x43be8c
  43be63:	push   eax
  43be64:	out    0x3,eax
  43be66:	pop    esi
  43be67:	pop    es
  43be68:	pop    ss
  43be69:	arpl   WORD PTR [edi+0x5f],ax
  43be6c:	xor    al,0x63
  43be6e:	aas    
  43be6f:	sqrtps xmm0,XMMWORD PTR fs:[ebx+0x62]
  43be74:	push   es
  43be75:	push   ebp
  43be76:	repz push es
  43be78:	jbe    0x43be7e
  43be7a:	inc    ebx
  43be7b:	data16 sti 
  43be7d:	imul   esi,DWORD PTR [esi],0x5c
  43be80:	adc    BYTE PTR [ebp+ebp*1+0x58],dh
  43be84:	add    BYTE PTR [esi],al
  43be86:	sbb    edx,DWORD PTR [esi+0x0]
  43be89:	dec    esi
  43be8a:	not    DWORD PTR [esi+0x5f]
  43be8d:	fstp   QWORD PTR [eax]
  43be8f:	push   esp
  43be90:	push   0xffffffd8
  43be92:	add    eax,0xcc745e
  43be97:	add    BYTE PTR [eax],al
  43be99:	and    esi,DWORD PTR [edi+0x5f]
  43be9c:	retf   0x59d5
  43be9f:	push   ecx
  43bea0:	jmp    0x99442c95
  43bea5:	shl    DWORD PTR [edx+0x68],1
  43bea8:	cwde   
  43bea9:	fstp   QWORD PTR [ebp+0x74]
  43beac:	les    esp,FWORD PTR [ebx-0x3275a08a]
  43beb2:	pop    ecx
  43beb3:	push   ecx
  43beb4:	jmp    0xb943f5a9
  43beb9:	shl    DWORD PTR [edx+0x68],1
  43bebc:	test   al,0x94
  43bebe:	bound  edi,QWORD PTR [esi]
  43bec0:	mov    BYTE PTR [ebx-0x6e72929f],dl
  43bec6:	pop    ecx
  43bec7:	push   0xff07f09e
  43becc:	cdq    
  43becd:	test   BYTE PTR [eax+0x3d],bl
  43bed0:	push   esp
  43bed1:	jg     0x43bf0f
  43bed3:	inc    edi
  43bed4:	idiv   DWORD PTR ss:[ecx]
  43bed7:	dec    eax
  43bed8:	and    eax,0x2050279e
  43bedd:	sbb    eax,0xef556c63
  43bee2:	test   eax,0x462f19ff
  43bee7:	arpl   WORD PTR ds:0x456c5e2d,di
  43beed:	push   esp
  43beee:	pop    ecx
  43beef:	push   eax
  43bef0:	or     BYTE PTR [ebx+0x5f],cl
  43bef3:	push   ecx
  43bef4:	jmp    0x2a43c3e9
  43bef9:	inc    esi
  43befa:	pop    esp
  43befb:	imul   ecx,DWORD PTR [eax],0x0
  43befe:	add    BYTE PTR [eax],al
  43bf00:	sbb    eax,0x3004c63
  43bf05:	pop    ecx
  43bf06:	pop    ebp
  43bf07:	push   esp
  43bf08:	in     eax,dx
  43bf09:	inc    ebx
  43bf0a:	push   0x67
  43bf0c:	xchg   esp,eax
  43bf0d:	push   edx
  43bf0e:	add    BYTE PTR [eax],al
  43bf10:	mov    eax,0xb7684b04
  43bf15:	push   edi
  43bf16:	ins    BYTE PTR es:[edi],dx
  43bf17:	inc    ebp
  43bf18:	xchg   edx,eax
  43bf19:	pusha  
  43bf1a:	pop    ebx
  43bf1b:	jne    0x43beb3
  43bf1d:	pusha  
  43bf1e:	dec    edi
  43bf1f:	add    BYTE PTR [ecx-0x61b3c2c5],ch
  43bf25:	sub    ch,BYTE PTR ss:[esi]
  43bf28:	ss push edi
  43bf2a:	ins    BYTE PTR es:[edi],dx
  43bf2b:	add    BYTE PTR [ebx+eax*1],bh
  43bf2e:	aas    
  43bf2f:	xchg   BYTE PTR gs:[eax+0x6b],dl
  43bf33:	gs push 0x776d5939
  43bf39:	inc    eax
  43bf3a:	js     0x43bf93
  43bf3c:	dec    edx
  43bf3d:	add    ecx,DWORD PTR [ebx+0x65]
  43bf40:	jns    0x43bfb2
  43bf42:	push   0x33
  43bf44:	push   0x6e6c6419
  43bf49:	add    edx,DWORD PTR [eax]
  43bf4b:	add    BYTE PTR [ecx+0x5a],cl
  43bf4e:	cmp    esi,DWORD PTR [edx+0x77]
  43bf51:	fs je  0x43bfb9
  43bf54:	ret    
  43bf55:	pop    esp
  43bf56:	imul   esi,DWORD PTR [ebx+ebp*4+0x5c],0x5b
  43bf5b:	or     al,BYTE PTR gs:[ebx]
  43bf5e:	ins    BYTE PTR es:[edi],dx
  43bf5f:	add    BYTE PTR [ecx],bl
  43bf61:	jb     0x43bfb0
  43bf63:	outs   dx,BYTE PTR ds:[esi]
  43bf64:	add    BYTE PTR [eax],al
  43bf66:	add    BYTE PTR [ebx+0x71],al
  43bf69:	popa   
  43bf6a:	je     0x43bfaf
  43bf6c:	ins    BYTE PTR es:[edi],dx
  43bf6d:	ins    BYTE PTR es:[edi],dx
  43bf6e:	imul   esp,DWORD PTR [eax],0x1a000068
  43bf74:	or     edi,DWORD PTR [ebx]
  43bf76:	outs   dx,DWORD PTR ds:[esi]
  43bf77:	add    esi,DWORD PTR [ecx+0x61]
  43bf7a:	je     0x43bf5f
  43bf7c:	imul   ebp,DWORD PTR [ecx+ebp*2-0xd],0xfffffff9
  43bf81:	pop    esi
  43bf82:	dec    ebp
  43bf83:	push   ss
  43bf84:	adc    DWORD PTR [edi+0x6e],ebp
  43bf87:	sbb    ah,ah
  43bf89:	jnp    0x43bf8b
  43bf8b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bf8d:	cld    
  43bf8e:	cmp    al,0x4
  43bf90:	daa    
  43bf91:	addr16 popw es
  43bf94:	pop    es
  43bf95:	arpl   WORD PTR [edx+ebx*1-0x16],bp
  43bf99:	pop    edi
  43bf9a:	inc    ebx
  43bf9b:	sti    
  43bf9c:	out    dx,eax
  43bf9d:	cld    
  43bf9e:	pop    esp
  43bf9f:	repz mov al,0x65
  43bfa2:	dec    ebp
  43bfa3:	(bad)  
  43bfa4:	mov    ebx,0xc7d46e4c
  43bfa9:	jnp    0x43bfe9
  43bfab:	iret   
  43bfac:	into   
  43bfad:	data16 gs into 
  43bfb0:	mov    ds:0xb0f381fc,eax
  43bfb5:	jb     0x43c01a
  43bfb7:	rol    BYTE PTR [ebx-0x7e38b2a1],cl
  43bfbd:	pop    edi
  43bfbe:	pop    edi
  43bfbf:	(bad)  
  43bfc0:	lods   al,BYTE PTR ds:[esi]
  43bfc1:	dec    ax
  43bfc3:	mov    ah,0x63
  43bfc5:	pop    si
  43bfc7:	xchg   edx,eax
  43bfc8:	jnp    0x43bfc6
  43bfca:	add    BYTE PTR [bx+si],al
  43bfcd:	add    bl,dh
  43bfcf:	mov    al,0x65
  43bfd1:	push   esp
  43bfd2:	xchg   edx,eax
  43bfd3:	pusha  
  43bfd4:	push   0x4b
  43bfd6:	xchg   esi,eax
  43bfd7:	bound  edi,QWORD PTR [edi]
  43bfd9:	outs   dx,BYTE PTR ds:[esi]
  43bfda:	mov    ss,WORD PTR [edx+0x4]
  43bfdd:	or     bl,dh
  43bfdf:	xor    BYTE PTR [eax+0x4d],cl
  43bfe2:	stos   BYTE PTR es:[edi],al
  43bfe3:	xor    edi,DWORD PTR [esi]
  43bfe5:	outs   dx,BYTE PTR ds:[esi]
  43bfe6:	pop    esp
  43bfe7:	and    edx,DWORD PTR [ecx+0x74]
  43bfea:	popa   
  43bfeb:	aaa    
  43bfec:	popaw  
  43bfee:	repz inc esi
  43bff0:	add    ecx,DWORD PTR [ebp+0x5f]
  43bff3:	and    ch,BYTE PTR [ebx+0x6a]
  43bff6:	push   esp
  43bff7:	cs jb  0x43c063
  43bffa:	push   esi
  43bffb:	pop    es
  43bffc:	sub    dl,BYTE PTR [ecx+0x34]
  43bfff:	dec    ebx
  43c000:	aad    0x3
  43c002:	dec    edx
  43c003:	jae    0x43c011
  43c005:	aaa    
  43c006:	fnsave [ebx+eax*1]
  43c009:	push   0x5fa0717
  43c00e:	cs ins BYTE PTR es:[edi],dx
  43c010:	or     esp,DWORD PTR [ecx+0x36]
  43c013:	pop    ebx
  43c014:	and    ah,BYTE PTR [esi+0x15]
  43c017:	ins    BYTE PTR es:[edi],dx
  43c018:	push   es
  43c019:	jo     0x43c00e
  43c01b:	push   es
  43c01c:	dec    ecx
  43c01d:	add    esi,DWORD PTR [edi]
  43c01f:	ins    BYTE PTR es:[edi],dx
  43c020:	retf   
  43c021:	pusha  
  43c022:	jmp    FWORD PTR [ebx-0x5e]
  43c025:	gs aad 0x6b
  43c028:	(bad)  
  43c029:	outs   dx,DWORD PTR ds:[esi]
  43c02a:	repz push es
  43c02c:	cs add al,0xb2
  43c02f:	imul   esi,DWORD PTR [ebx+0x3f],0xffffffd0
  43c036:	pop    esp
  43c037:	shl    BYTE PTR [esi-0x30],0x49
  43c03b:	enter  0xd673,0x6
  43c03f:	rol    BYTE PTR [ebx],cl
  43c041:	(bad)  
  43c042:	pop    eax
  43c043:	test   BYTE PTR [edi+edi*4+0x6b],ah
  43c047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c048:	push   0xffffff98
  43c04a:	push   esi
  43c04b:	mov    BYTE PTR [edi-0x74],ch
  43c04e:	push   0x6fdd6093
  43c053:	jae    0x43c0bd
  43c055:	mov    ah,0x56
  43c057:	out    0x3,eax
  43c059:	ret    
  43c05a:	push   es
  43c05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c05c:	jne    0x43bfee
  43c05e:	addr16 pop ebx
  43c060:	pop    edi
  43c061:	mov    esi,0x94744c75
  43c066:	pop    edx
  43c067:	inc    eax
  43c068:	pop    di
  43c06a:	push   0x23
  43c06c:	inc    ebp
  43c06d:	repz push es
  43c06f:	mov    BYTE PTR [edi+esi*1],0x6a
  43c073:	dec    ebx
  43c074:	pop    edi
  43c075:	pop    edi
  43c076:	push   0x0
  43c078:	sub    eax,0x40000736
  43c07d:	in     eax,dx
  43c07e:	push   esp
  43c07f:	arpl   WORD PTR [edx],bx
  43c081:	inc    ebx
  43c082:	outs   dx,BYTE PTR ds:[esi]
  43c083:	outs   dx,BYTE PTR ds:[esi]
  43c084:	add    al,0x33
  43c086:	and    al,BYTE PTR [eax]
  43c088:	sbb    ebp,esi
  43c08a:	push   ecx
  43c08b:	pop    edi
  43c08c:	pop    ss
  43c08d:	inc    esp
  43c08e:	dec    ebx
  43c08f:	cmp    eax,0xfda6f0e9
  43c094:	sbb    DWORD PTR [ebx+ebx*2],esi
  43c097:	dec    esi
  43c098:	or     al,0x0
  43c09a:	add    BYTE PTR [eax],al
  43c09c:	push   ss
  43c09d:	pop    ebx
  43c09e:	dec    esi
  43c09f:	push   es
  43c0a0:	sbb    DWORD PTR [edi],eax
  43c0a2:	add    ah,bl
  43c0a4:	icebp  
  43c0a5:	inc    ebp
  43c0a6:	shl    BYTE PTR fs:[edx],1
  43c0a9:	jae    0x43c11e
  43c0ab:	fcmovu st,st(0)
  43c0ad:	push   es
  43c0ae:	add    BYTE PTR [eax-0x429cae13],al
  43c0b4:	ret    0x636b
  43c0b7:	mov    dh,0xe0
  43c0b9:	ins    DWORD PTR es:[edi],dx
  43c0ba:	outs   dx,BYTE PTR ds:[esi]
  43c0bb:	mov    ebp,0xa46174bb
  43c0c0:	enter  0x6,0xdb
  43c0c4:	lock and DWORD PTR [esi-0x7c],ebp
  43c0c8:	rcr    DWORD PTR [edx+0x63],1
  43c0cb:	lods   eax,DWORD PTR ds:[esi]
  43c0cc:	mov    bh,0x35
  43c0ce:	add    dl,bh
  43c0d0:	lock and al,0x67
  43c0d3:	jge    0x43c08b
  43c0d5:	jb     0x43c14b
  43c0d7:	jmp    0xae428dcc
  43c0dc:	lods   eax,DWORD PTR ds:[esi]
  43c0dd:	pop    edx
  43c0de:	inc    esp
  43c0df:	mov    al,ds:0x5a746bae
  43c0e4:	not    DWORD PTR [edi]
  43c0e6:	add    BYTE PTR [edx],ch
  43c0e8:	jge    0x43c151
  43c0ea:	pop    edi
  43c0eb:	pop    ebp
  43c0ec:	dec    esp
  43c0ed:	dec    ebx
  43c0ee:	inc    edi
  43c0ef:	sub    edi,DWORD PTR [esi]
  43c0f1:	push   0x701e005d
  43c0f6:	outs   dx,BYTE PTR ds:[si]
  43c0f8:	retf   0x3f07
  43c0fb:	inc    esp
  43c0fc:	adc    ebx,DWORD PTR [edx]
  43c0fe:	sub    ch,BYTE PTR [esi]
  43c100:	add    BYTE PTR [eax],al
  43c102:	add    BYTE PTR [esi],ch
  43c104:	outs   dx,DWORD PTR ds:[esi]
  43c105:	ins    BYTE PTR es:[edi],dx
  43c106:	add    BYTE PTR [ebx],al
  43c108:	or     ecx,DWORD PTR [edi+0x53]
  43c10b:	or     edi,DWORD PTR [edx]
  43c10d:	pop    ebp
  43c10e:	outs   dx,BYTE PTR ds:[esi]
  43c10f:	dec    BYTE PTR [edx]
  43c111:	inc    esp
  43c112:	add    ch,bl
  43c114:	cmp    DWORD PTR [ecx],edi
  43c116:	push   edx
  43c117:	out    dx,eax
  43c118:	imul   ebp,DWORD PTR [esi+0x0],0x725e0822
  43c11f:	inc    DWORD PTR [ebx+0x59]
  43c122:	fs out dx,al
  43c124:	pop    esp
  43c125:	popa   
  43c126:	outs   dx,BYTE PTR ds:[esi]
  43c127:	lods   al,BYTE PTR ds:[esi]
  43c128:	outs   dx,BYTE PTR ds:[esi]
  43c129:	add    BYTE PTR [eax],al
  43c12b:	add    ecx,DWORD PTR [eax]
  43c12d:	pop    edi
  43c12e:	gs dec esi
  43c130:	push   0x70486464
  43c135:	data16 inc bp
  43c138:	pop    es
  43c139:	push   es
  43c13a:	add    BYTE PTR [ebp+0x3a],bh
  43c13d:	cmp    DWORD PTR [ecx+0x3e],eax
  43c140:	inc    ebx
  43c141:	push   0x65
  43c143:	mov    DWORD PTR [edx+0x54],ebx
  43c146:	outs   dx,DWORD PTR ds:[esi]
  43c147:	jns    0x43c1bc
  43c149:	push   0x69
  43c14b:	cmp    WORD PTR fs:[eax],ax
  43c14f:	cmp    al,BYTE PTR [edi]
  43c151:	dec    edi
  43c152:	push   ebx
  43c153:	pop    ebx
  43c154:	dec    edx
  43c155:	push   0x65
  43c157:	imul   esi,DWORD PTR [ebx+0x5d],0x45
  43c15b:	pushf  
  43c15c:	inc    esp
  43c15d:	data16 je 0x43c17a
  43c160:	pop    es
  43c161:	and    al,BYTE PTR [eax]
  43c163:	pop    ebp
  43c164:	cmp    bh,BYTE PTR [ecx]
  43c166:	inc    ebp
  43c167:	add    BYTE PTR [eax],al
  43c169:	add    BYTE PTR [ebp+eiz*2+0x65b97466],bl
  43c170:	ins    BYTE PTR es:[edi],dx
  43c171:	gs repz dec esp
  43c174:	jo     0x43c176
  43c176:	repz or BYTE PTR [ecx+edx*2],al
  43c17a:	inc    eax
  43c17b:	das    
  43c17c:	aas    
  43c17d:	push   0x5e
  43c17f:	push   ebx
  43c180:	inc    edx
  43c181:	arpl   WORD PTR [edi+0x21],ax
  43c184:	popa   
  43c185:	outs   dx,BYTE PTR ds:[esi]
  43c186:	pop    eax
  43c187:	sub    ebp,DWORD PTR [edx+0x63]
  43c18a:	dec    ebp
  43c18b:	add    al,0x6d
  43c18d:	add    bl,dh
  43c18f:	mov    ecx,0x2f4050fc
  43c194:	dec    ebx
  43c195:	imul   edx,DWORD PTR [eax],0xf30067fc
  43c19b:	in     al,0xfc
  43c19d:	push   eax
  43c19e:	inc    eax
  43c19f:	das    
  43c1a0:	cmp    eax,0x5fdd1c6c
  43c1a5:	inc    ebx
  43c1a6:	std    
  43c1a7:	or     ah,BYTE PTR [edx+0x74]
  43c1aa:	repz mov al,ds:0xfd142e4d
  43c1b0:	sub    eax,0x60cbd72a
  43c1b5:	add    bl,dh
  43c1b7:	adc    al,0x4
  43c1b9:	cmp    eax,0x746cc6e1
  43c1be:	mov    esi,0xdc6e6cd1
  43c1c3:	mov    ds:0xabbf5d5f,eax
  43c1c8:	arpl   WORD PTR [edx+edx*8-0x11],si
  43c1cc:	cld    
  43c1cd:	adc    BYTE PTR [eax],al
  43c1cf:	add    BYTE PTR [eax],al
  43c1d1:	repnz lahf 
  43c1d3:	cmp    bl,BYTE PTR [eax-0x46]
  43c1d6:	mov    ch,BYTE PTR [ecx+ebp*2-0x5f]
  43c1da:	jnp    0x43c219
  43c1dc:	arpl   WORD PTR [ecx-0x7b8bb19d],sp
  43c1e2:	pop    ebp
  43c1e3:	pusha  
  43c1e4:	add    bl,dh
  43c1e6:	into   
  43c1e7:	cld    
  43c1e8:	cmp    al,0x8e
  43c1ea:	pop    ebp
  43c1eb:	imul   eax,DWORD PTR [esi+edx*4+0x6],0x6b7f6153
  43c1f3:	es popa 
  43c1f5:	pop    ebp
  43c1f6:	pop    ebx
  43c1f7:	inc    eax
  43c1f8:	pop    esi
  43c1f9:	dec    esp
  43c1fa:	dec    ax
  43c1fc:	jo     0x43c24e
  43c1fe:	dec    ecx
  43c1ff:	xor    eax,0x33364867
  43c204:	addr16 pop ebp
  43c206:	ins    BYTE PTR es:[edi],dx
  43c207:	out    0x3,eax
  43c209:	sbb    al,0x7
  43c20b:	es popa 
  43c20d:	dec    ebp
  43c20e:	pop    ebx
  43c20f:	xor    dh,BYTE PTR [eax+edx*2+0x71]
  43c213:	ss jge 0x43c234
  43c216:	pop    ebx
  43c217:	or     al,0x69
  43c219:	ss pop ebx
  43c21b:	cli    
  43c21c:	jno    0x43c22e
  43c21e:	cmp    ah,bh
  43c220:	add    esp,ebp
  43c222:	push   es
  43c223:	es popa 
  43c225:	sbb    eax,0x1a68265b
  43c22a:	push   esi
  43c22b:	add    al,0x53
  43c22d:	pop    es
  43c22e:	jb     0x43c205
  43c230:	pusha  
  43c231:	repz push es
  43c233:	or     eax,DWORD PTR [eax+eax*1]
  43c236:	add    BYTE PTR [eax],al
  43c238:	cs ins BYTE PTR es:[edi],dx
  43c23a:	aad    0x6f
  43c23c:	mov    al,0x70
  43c23e:	aam    0x68
  43c240:	push   ds
  43c241:	ins    BYTE PTR es:[edi],dx
  43c242:	mov    ch,0x6f
  43c244:	int3   
  43c245:	push   0x5aac62d0
  43c24a:	int3   
  43c24b:	jb     0x43c1f9
  43c24d:	jo     0x43c1e5
  43c24f:	outs   dx,DWORD PTR ds:[esi]
  43c250:	retf   0x8c54
  43c253:	add    edx,DWORD PTR [eax]
  43c255:	pop    es
  43c256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c257:	pusha  
  43c258:	popf   
  43c259:	pop    edx
  43c25a:	stos   DWORD PTR es:[edi],eax
  43c25b:	jo     0x43c200
  43c25d:	jb     0x43c1df
  43c25f:	bound  edi,QWORD PTR [edx+ebx*2+0x5490428c]
  43c266:	jae    0x43c2d4
  43c268:	xchg   ecx,eax
  43c269:	outs   dx,DWORD PTR ds:[esi]
  43c26a:	add    BYTE PTR [edx-0x559ca571],cl
  43c270:	xchg   ebp,eax
  43c271:	ins    BYTE PTR es:[edi],dx
  43c272:	je     0x43c2c0
  43c274:	ja     0x43c2d0
  43c276:	add    bh,dh
  43c278:	icebp  
  43c279:	ss inc edx
  43c27b:	xor    DWORD PTR [edi+ebx*2],esp
  43c27e:	jo     0x43c2be
  43c280:	popa   
  43c281:	pop    ebx
  43c282:	cmp    eax,0x4d5b614c
  43c287:	xor    eax,0x2c637156
  43c28c:	inc    edi
  43c28d:	pop    es
  43c28e:	add    BYTE PTR [edx],ch
  43c290:	and    DWORD PTR [eax],edi
  43c292:	push   eax
  43c293:	cmp    eax,0x52a3102
  43c298:	sbb    esi,DWORD PTR [ebx+0x0]
  43c29b:	xor    eax,0xef000000
  43c2a0:	dec    esi
  43c2a1:	je     0x43c2b8
  43c2a3:	daa    
  43c2a4:	push   edx
  43c2a5:	arpl   WORD PTR [edi],dx
  43c2a7:	adc    edx,DWORD PTR [ecx+0x63]
  43c2aa:	clc    
  43c2ab:	sbb    eax,0xc5fd6d64
  43c2b0:	pop    esi
  43c2b1:	aas    
  43c2b2:	jmp    0xb143faa7
  43c2b7:	add    al,0x5b
  43c2b9:	jo     0x43c273
  43c2bb:	frstor [ebx+0x6e]
  43c2be:	sar    BYTE PTR [ecx-0x4e419d94],1
  43c2c4:	push   es
  43c2c5:	add    BYTE PTR [eax+esi*8-0x3f4a8bb2],ah
  43c2cc:	push   ecx
  43c2cd:	arpl   di,ax
  43c2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c2d0:	push   eax
  43c2d1:	arpl   WORD PTR [eax-0x62929c33],di
  43c2d7:	cmc    
  43c2d8:	pop    esi
  43c2d9:	push   ecx
  43c2da:	jmp    0xa04374cf
  43c2df:	mov    ds,WORD PTR [edx+0x63]
  43c2e2:	fwait
  43c2e3:	xchg   esi,eax
  43c2e4:	arpl   WORD PTR [eax+eax*1+0x79],si
  43c2e8:	inc    ecx
  43c2e9:	je     0x43c33e
  43c2eb:	xchg   BYTE PTR [esp+esi*2+0x75],ah
  43c2ef:	mov    DWORD PTR [esi+0x59],eax
  43c2f2:	ins    BYTE PTR es:[edi],dx
  43c2f3:	jle    0x43c35a
  43c2f5:	pop    ecx
  43c2f6:	arpl   WORD PTR [ecx+0x71000043],sp
  43c2fc:	add    eax,DWORD PTR [ecx+0x6e]
  43c2ff:	inc    esi
  43c300:	inc    eax
  43c301:	push   0x6e
  43c303:	add    BYTE PTR [eax],al
  43c305:	add    BYTE PTR [edi],dh
  43c307:	push   edi
  43c308:	dec    ecx
  43c309:	jne    0x43c332
  43c30b:	push   ebp
  43c30c:	jno    0x43c352
  43c30e:	cmp    edx,DWORD PTR [edi+0x59]
  43c311:	inc    ecx
  43c312:	add    al,0x64
  43c314:	popa   
  43c315:	ins    BYTE PTR es:[edi],dx
  43c316:	sub    esp,DWORD PTR [ebp+0x6c]
  43c319:	gs retf 0xa003
  43c31d:	add    bl,ah
  43c31f:	push   0x69086574
  43c324:	pop    ebp
  43c325:	je     0x43c2ff
  43c327:	aas    
  43c328:	pop    ecx
  43c329:	les    ebp,FWORD PTR fs:[ebx+0x6c]
  43c32d:	xlat   BYTE PTR gs:[ebx]
  43c32f:	bound  edi,QWORD PTR [ecx]
  43c331:	add    BYTE PTR ds:0x866e4104,bl
  43c337:	inc    eax
  43c338:	push   0x6e
  43c33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c33b:	outs   dx,DWORD PTR ds:[esi]
  43c33c:	dec    edx
  43c33d:	cmp    edi,DWORD PTR gs:[edi]
  43c340:	imul   ebp,DWORD PTR ds:[esi],0xde000040
  43c347:	add    eax,DWORD PTR [ecx+0x6e]
  43c34a:	xchg   esi,eax
  43c34b:	inc    eax
  43c34c:	push   0x6e
  43c34e:	aaa    
  43c34f:	outs   dx,DWORD PTR ds:[esi]
  43c350:	dec    ebx
  43c351:	xchg   BYTE PTR gs:[edx+0x70],cl
  43c355:	je     0x43c38a
  43c357:	push   0x66
  43c359:	inc    ecx
  43c35a:	dec    edx
  43c35b:	add    edx,DWORD PTR [esi+0x0]
  43c35e:	bound  ebp,QWORD PTR [edi+0x74]
  43c361:	jo     0x43c356
  43c363:	pushf  
  43c364:	pop    ecx
  43c365:	push   0xffffff97
  43c367:	fwait
  43c368:	pop    ecx
  43c369:	outs   dx,DWORD PTR ds:[esi]
  43c36a:	add    BYTE PTR [eax],al
  43c36c:	add    BYTE PTR [esi-0x5b8b906e],bl
  43c372:	in     eax,dx
  43c373:	cld    
  43c374:	mov    bl,0xf3
  43c376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c377:	bound  esi,QWORD PTR [esi+edx*4+0x5b]
  43c37b:	arpl   WORD PTR [ebx+0x7f],sp
  43c37e:	sbb    al,0x67
  43c380:	je     0x43c3c2
  43c382:	xor    al,0x63
  43c384:	je     0x43c3e4
  43c386:	inc    ecx
  43c387:	inc    ecx
  43c388:	pop    edi
  43c389:	dec    edi
  43c38a:	sbb    al,0x62
  43c38c:	pop    edi
  43c38d:	push   eax
  43c38e:	cmp    DWORD PTR [ebp+0x0],edx
  43c391:	repz sub BYTE PTR [eax+ecx*2],al
  43c395:	aas    
  43c396:	sbb    al,0x74
  43c398:	dec    ebp
  43c399:	push   esi
  43c39a:	push   ds
  43c39b:	push   0x76ff4e4e
  43c3a0:	arpl   WORD PTR [eax],sp
  43c3a2:	hlt    
  43c3a3:	inc    edx
  43c3a4:	add    bl,dh
  43c3a6:	or     BYTE PTR [edi+eax*2],al
  43c3a9:	or     eax,0x56e66f4
  43c3ae:	or     edi,DWORD PTR [eax+0x3d]
  43c3b1:	pop    ds
  43c3b2:	or     eax,0xf3b6371
  43c3b7:	pop    esi
  43c3b8:	lsl    eax,WORD PTR fs:[edi+ebp*2]
  43c3bd:	repz xchg esi,eax
  43c3bf:	pop    esi
  43c3c0:	je     0x43c398
  43c3c2:	rcr    DWORD PTR [esi+0x63],0xdf
  43c3c6:	mov    al,0x5d
  43c3c8:	push   0xffffffcd
  43c3ca:	ret    0x7461
  43c3cd:	mov    dl,0xef
  43c3cf:	cld    
  43c3d0:	cdq    
  43c3d1:	add    BYTE PTR [eax],al
  43c3d3:	add    bl,dh
  43c3d5:	xchg   esi,eax
  43c3d6:	pop    esi
  43c3d7:	je     0x43c3a7
  43c3d9:	mov    eax,ds:0x7ec7635e
  43c3de:	ja     0x43c443
  43c3e0:	rol    DWORD PTR [esi],0xa0
  43c3e3:	inc    edx
  43c3e4:	mov    ds:0x99629052,eax
  43c3e9:	xor    eax,0x6c203e7
  43c3ee:	lahf   
  43c3ef:	ja     0x43c390
  43c3f1:	push   esi
  43c3f2:	mov    dl,0x73
  43c3f4:	nop
  43c3f5:	ins    BYTE PTR es:[edi],dx
  43c3f6:	xchg   ebp,eax
  43c3f7:	push   0x768c5394
  43c3fc:	xchg   DWORD PTR [edi-0x19],eax
  43c3ff:	add    esp,DWORD PTR [ebp+0x67782f06]
  43c405:	push   edi
  43c406:	sub    BYTE PTR [eax+0x4f],ch
  43c409:	cmp    DWORD PTR [ebp+esi*2+0x60],ecx
  43c40d:	fs push esi
  43c40f:	js     0x43c43c
  43c411:	fs dec eax
  43c413:	push   0x45365950
  43c418:	repz push es
  43c41a:	pop    edx
  43c41b:	add    esi,DWORD PTR [ebp*2+0x6d456933]
  43c422:	or     al,0x78
  43c424:	cmp    dl,BYTE PTR [edi+0x4]
  43c427:	(bad)  
  43c428:	in     al,0x6
  43c42a:	je     0x43c42f
  43c42c:	xor    al,0x6d
  43c42e:	adc    ebp,DWORD PTR [ecx+0x5]
  43c431:	ins    DWORD PTR es:[edi],dx
  43c432:	or     al,0x78
  43c434:	cmp    al,0x54
  43c436:	add    al,0x76
  43c438:	add    BYTE PTR [eax],al
  43c43a:	add    ah,bh
  43c43c:	dec    ebp
  43c43d:	div    DWORD PTR [edi+0x14]
  43c440:	outs   dx,BYTE PTR ds:[esi]
  43c441:	stc    
  43c442:	inc    esp
  43c443:	repz push es
  43c445:	(bad)  
  43c446:	add    esi,DWORD PTR [esp+ebp*2+0x6cd568d3]
  43c44d:	int3   
  43c44e:	ja     0x43c46e
  43c450:	pop    ecx
  43c451:	enter  0xce66,0x33
  43c455:	mov    ch,0x5f
  43c457:	or     al,0x7
  43c459:	add    DWORD PTR [ebx],0xffffffac
  43c45c:	ins    BYTE PTR es:[edi],dx
  43c45d:	add    BYTE PTR [ebp-0x3b959335],bh
  43c463:	mov    esp,0xb59d634b
  43c468:	outs   dx,DWORD PTR ds:[esi]
  43c469:	imul   edx,DWORD PTR [edx-0x16c09639],0xa60042f0
  43c473:	mov    edx,DWORD PTR [edx+0x53]
  43c476:	jnp    0x43c424
  43c478:	sbb    ebx,DWORD PTR [edi-0x76]
  43c47b:	test   al,0x69
  43c47d:	inc    ebx
  43c47e:	xchg   DWORD PTR [esp+ebp*2+0x6892a077],eax
  43c485:	imul   edi,DWORD PTR [esi],0x310049f7
  43c48b:	imul   edx,DWORD PTR [ebx+0x70],0x28
  43c48f:	dec    ebx
  43c490:	arpl   WORD PTR [esi+0x44],cx
  43c493:	pusha  
  43c494:	pop    eax
  43c495:	arpl   WORD PTR [edx],di
  43c497:	dec    ebx
  43c498:	dec    edi
  43c499:	arpl   WORD PTR [eax+0x5b],cx
  43c49c:	push   0x3a6e
  43c4a1:	add    BYTE PTR [edx],bl
  43c4a3:	pop    es
  43c4a4:	add    BYTE PTR [esi],dl
  43c4a6:	clc    
  43c4a7:	push   eax
  43c4a8:	inc    edi
  43c4a9:	aaa    
  43c4aa:	xor    al,0x33
  43c4ac:	sub    al,BYTE PTR ds:0x26006b13
  43c4b2:	xor    ecx,DWORD PTR [eax+0x3f]
  43c4b5:	xor    al,0x3b
  43c4b7:	sub    ch,BYTE PTR [esi]
  43c4b9:	xlat   BYTE PTR ds:[ebx]
  43c4ba:	adc    al,0x6b
  43c4bc:	ins    BYTE PTR es:[edi],dx
  43c4bd:	jmp    0x2743a2b2
  43c4c2:	adc    al,0x53
  43c4c4:	push   ebx
  43c4c5:	cli    
  43c4c6:	or     eax,0xe4cc416d
  43c4cb:	inc    ebx
  43c4cc:	push   0xffffffc7
  43c4ce:	rol    DWORD PTR [esi],cl
  43c4d0:	add    ah,cl
  43c4d2:	lock push eax
  43c4d4:	arpl   bp,dx
  43c4d6:	mov    cl,0x56
  43c4d8:	add    BYTE PTR [bx+si+0x5e55],bl
  43c4dd:	data16 das 
  43c4df:	push   edx
  43c4e0:	ds jb  0x43c512
  43c4e3:	add    BYTE PTR gs:[eax],al
  43c4e6:	pop    es
  43c4e7:	add    eax,DWORD PTR [esi+0x65]
  43c4ea:	mov    ?,WORD PTR ds:0x4588656b
  43c4f0:	data16 jne 0x43c56a
  43c4f3:	or     BYTE PTR [esi+0x45],al
  43c4f6:	pop    esi
  43c4f7:	dec    ecx
  43c4f8:	push   eax
  43c4f9:	dec    ecx
  43c4fa:	dec    ecx
  43c4fb:	adc    ah,BYTE PTR [esi]
  43c4fd:	fs jbe 0x43c53c
  43c500:	add    BYTE PTR [eax],al
  43c502:	inc    esp
  43c503:	or     BYTE PTR [edi],bh
  43c505:	add    BYTE PTR gs:[eax],al
  43c508:	add    BYTE PTR [esi+0x48],bh
  43c50b:	fs popa 
  43c50d:	dec    edx
  43c50e:	pop    edi
  43c50f:	pop    ebp
  43c510:	jb     0x43c55b
  43c512:	dec    eax
  43c513:	fs cmp BYTE PTR fs:[ebx+ebp*2+0x73],ah
  43c519:	das    
  43c51a:	push   edx
  43c51b:	add    BYTE PTR [eax],al
  43c51d:	add    esi,DWORD PTR [ebx]
  43c51f:	dec    eax
  43c520:	dec    esp
  43c521:	jmp    0x4c4e:0xf4495047
  43c528:	dec    esp
  43c529:	retf   0x4e07
  43c52c:	add    DWORD PTR ds:0xf4726a64,esi
  43c532:	add    BYTE PTR gs:[eax],al
  43c535:	jo     0x43c53a
  43c537:	gs gs xchg edi,eax
  43c53a:	bound  esi,QWORD PTR [eax+0x79]
  43c53d:	call   0x6563:0xf704e607
  43c544:	jae    0x43c535
  43c546:	pop    esi
  43c547:	add    BYTE PTR [eax],al
  43c549:	sahf   
  43c54a:	add    al,0x6b
  43c54c:	je     0x43c596
  43c54e:	bound  esp,QWORD PTR [ebp+0x70]
  43c551:	pop    edx
  43c552:	pop    es
  43c553:	loope  0x43c559
  43c555:	repz ret 0x6b61
  43c559:	rcr    BYTE PTR [edx-0x490cff94],1
  43c55f:	add    BYTE PTR [ecx-0x44],bl
  43c562:	xchg   ecx,eax
  43c563:	pop    edi
  43c564:	repz and eax,DWORD PTR [si]
  43c568:	pop    ecx
  43c569:	mov    ebp,0x715ea0
  43c56e:	add    BYTE PTR [eax],al
  43c570:	mov    ds:0x9f6a557f,eax
  43c575:	cmp    esp,0xffffffc7
  43c578:	lock xchg esp,eax
  43c57a:	jbe    0x43c5e9
  43c57c:	test   DWORD PTR [ebp+0x72],edi
  43c57f:	addr16 popf 
  43c581:	pop    ecx
  43c582:	addr16 add bl,dh
  43c585:	cmp    eax,DWORD PTR [ecx+ebx*2]
  43c588:	xchg   BYTE PTR [ecx-0x12839690],al
  43c58e:	cld    
  43c58f:	jmp    0x43c588
  43c591:	xor    ah,BYTE PTR [edi+0x6b]
  43c594:	push   esi
  43c595:	dec    ecx
  43c596:	jb     0x43c5fb
  43c598:	xrelease mov DWORD PTR [edi],0x5d1b4e6b
  43c59f:	push   0x9bfcf041
  43c5a4:	lock clc 
  43c5a6:	jbe    0x43c614
  43c5a8:	inc    edi
  43c5a9:	inc    ecx
  43c5aa:	arpl   WORD PTR [eax],ax
  43c5ac:	rep stos DWORD PTR es:[edi],eax
  43c5ae:	std    
  43c5af:	pop    eax
  43c5b0:	and    edi,ebx
  43c5b2:	ins    DWORD PTR es:[edi],dx
  43c5b3:	arpl   WORD PTR [eax],dx
  43c5b5:	punpcklbw mm5,DWORD PTR [ebx+esi*8-0x8]
  43c5ba:	pop    es
  43c5bb:	pop    edi
  43c5bc:	adc    ebp,edi
  43c5be:	add    ebp,DWORD PTR [ebx+0x0]
  43c5c1:	ficomp DWORD PTR [ebp+0x6e]
  43c5c4:	dec    ecx
  43c5c6:	pusha  
  43c5c7:	ins    BYTE PTR es:[edi],dx
  43c5c8:	(bad)  
  43c5ca:	cld    
  43c5cb:	mov    eax,ds:0x636e01ef
  43c5d0:	(bad)  
  43c5d1:	push   es
  43c5d2:	out    0x3,eax
  43c5d4:	add    BYTE PTR [eax],al
  43c5d6:	add    BYTE PTR [ecx+0x3],cl
  43c5d9:	int3   
  43c5da:	fs iret 
  43c5dc:	push   0xffffffc2
  43c5de:	(bad)
  43c5e3:	mov    edx,0xc073bb53
  43c5e8:	push   edx
  43c5e9:	mov    ds:0xca539d68,eax
  43c5ee:	push   edx
  43c5ef:	mov    edi,0x925dc054
  43c5f4:	inc    edi
  43c5f5:	out    0x3,eax
  43c5f7:	or     eax,DWORD PTR [ebx]
  43c5f9:	mov    ch,0x77
  43c5fb:	(bad)  
  43c5fc:	xor    eax,DWORD PTR [ecx-0x7c97738a]
  43c602:	add    esi,DWORD PTR [ebx]
  43c604:	or     BYTE PTR [edx+0x74457f68],ch
  43c60a:	jno    0x43c599
  43c60c:	arpl   WORD PTR [ecx+0x7a54a377],ax
  43c612:	bound  edx,QWORD PTR [eax+0x56]
  43c615:	push   esi
  43c616:	add    al,0xb6
  43c618:	add    dh,BYTE PTR [esi+ebx*2]
  43c61b:	dec    ebx
  43c61c:	push   0x64476841
  43c621:	inc    ebx
  43c622:	dec    ecx
  43c623:	dec    ebx
  43c624:	dec    sp
  43c626:	je     0x43c667
  43c628:	jo     0x43c674
  43c62a:	pop    esi
  43c62b:	xor    DWORD PTR [eax+0x43],esi
  43c62e:	js     0x43c680
  43c630:	push   ebp
  43c631:	out    0x3,eax
  43c633:	push   eax
  43c634:	add    dh,BYTE PTR [esi]
  43c636:	imul   ebx,DWORD PTR [edi],0x5c0934
  43c63c:	add    BYTE PTR [eax],al
  43c63e:	cmp    al,0x69
  43c640:	or     esp,DWORD PTR [eax+0x10]
  43c643:	arpl   WORD PTR [esp+ebp*2],sp
  43c646:	cs div DWORD PTR fs:[edi+0xc]
  43c64b:	push   0x9
  43c64d:	inc    esi
  43c64e:	adc    al,0x6b
  43c650:	add    ch,bh
  43c652:	or     ebp,DWORD PTR [ecx+0x0]
  43c655:	adc    esi,esi
  43c657:	aas    
  43c658:	arpl   cx,sp
  43c65a:	shl    DWORD PTR [ebp+0x70],1
  43c65d:	aad    0xad
  43c65f:	outs   dx,BYTE PTR ds:[esi]
  43c660:	pop    edi
  43c661:	(bad)  
  43c662:	int3   
  43c663:	push   0x63
  43c665:	fild   DWORD PTR [ecx]
  43c667:	pop    es
  43c668:	add    cl,ch
  43c66a:	lock push es
  43c66c:	add    cl,ch
  43c66e:	lock push es
  43c670:	add    cl,ch
  43c672:	lock push es
  43c674:	add    cl,ch
  43c676:	lock push es
  43c678:	add    cl,ch
  43c67a:	lock push es
  43c67c:	add    cl,ch
  43c67e:	lock push es
  43c680:	add    cl,ch
  43c682:	lock push es
  43c684:	add    cl,ch
  43c686:	lock push es
  43c688:	add    cl,ch
  43c68a:	lock push es
  43c68c:	add    cl,ch
  43c68e:	lock push es
  43c690:	add    cl,ch
  43c692:	lock push es
  43c694:	add    cl,ch
  43c696:	lock push es
  43c698:	add    cl,ch
  43c69a:	lock push es
  43c69c:	add    cl,ch
  43c69e:	lock push es
  43c6a0:	add    cl,ch
  43c6a2:	add    BYTE PTR [eax],al
  43c6a4:	add    al,dh
  43c6a6:	push   es
  43c6a7:	add    cl,ch
  43c6a9:	lock push es
  43c6ab:	add    cl,ch
  43c6ad:	lock push es
  43c6af:	add    cl,ch
  43c6b1:	lock push es
  43c6b3:	add    cl,ch
  43c6b5:	lock push es
  43c6b7:	add    cl,ch
  43c6b9:	lock push es
  43c6bb:	add    cl,ch
  43c6bd:	lock push es
  43c6bf:	add    cl,ch
  43c6c1:	lock push es
  43c6c3:	add    cl,ch
  43c6c5:	lock push es
  43c6c7:	add    cl,ch
  43c6c9:	lock push es
  43c6cb:	add    BYTE PTR [eax],al
  43c6cd:	call   0x4:0x8a000004
  43c6d4:	add    BYTE PTR [edx+0x5a000004],cl
  43c6da:	add    al,0x0
  43c6dc:	add    BYTE PTR [edx+0x4],bl
  43c6df:	add    BYTE PTR [eax],al
  43c6e1:	dec    edx
  43c6e2:	add    al,0x0
  43c6e4:	add    BYTE PTR [edx+0x4],cl
  43c6e7:	add    BYTE PTR [eax],al
  43c6e9:	pop    edx
  43c6ea:	add    al,0x0
  43c6ec:	add    BYTE PTR [edx+0x4],bl
  43c6ef:	add    BYTE PTR [eax],al
  43c6f1:	dec    edx
  43c6f2:	add    al,0x0
  43c6f4:	add    BYTE PTR [edx+0x4],cl
  43c6f7:	add    BYTE PTR [eax],al
  43c6f9:	sbb    al,BYTE PTR [eax+eax*1]
  43c6fc:	add    BYTE PTR [edx],bl
  43c6fe:	add    al,0x0
  43c700:	add    BYTE PTR [edx],cl
  43c702:	add    al,0x0
  43c704:	add    BYTE PTR [edx],cl
  43c706:	add    al,0x0
  43c708:	add    BYTE PTR [eax],al
  43c70a:	add    BYTE PTR [eax],al
  43c70c:	sbb    al,BYTE PTR [eax+eax*1]
  43c70f:	add    BYTE PTR [edx],bl
  43c711:	add    al,0x0
  43c713:	add    BYTE PTR [edx],cl
  43c715:	add    al,0x0
  43c717:	add    BYTE PTR [edx],cl
  43c719:	add    al,0x0
  43c71b:	add    dl,bl
  43c71d:	add    eax,DWORD PTR [eax]
  43c71f:	add    dl,bl
  43c721:	add    eax,DWORD PTR [eax]
  43c723:	add    dl,cl
  43c725:	add    eax,DWORD PTR [eax]
  43c727:	add    dl,cl
  43c729:	add    eax,DWORD PTR [eax]
  43c72b:	add    dl,bl
  43c72d:	add    eax,DWORD PTR [eax]
  43c72f:	add    dl,bl
  43c731:	add    eax,DWORD PTR [eax]
  43c733:	add    dl,cl
  43c735:	add    eax,DWORD PTR [eax]
  43c737:	add    dl,cl
  43c739:	add    eax,DWORD PTR [eax]
  43c73b:	add    BYTE PTR [edx-0x65fffffd],bl
  43c741:	add    eax,DWORD PTR [eax]
  43c743:	add    BYTE PTR [edx-0xcfffffd],cl
  43c749:	in     eax,dx
  43c74a:	cld    
  43c74b:	push   ebx
  43c74d:	in     eax,dx
  43c74e:	cld    
  43c74f:	push   ebx
  43c751:	in     eax,dx
  43c752:	cld    
  43c753:	push   ebx
  43c755:	in     eax,dx
  43c756:	cld    
  43c757:	push   ebx
  43c759:	in     eax,dx
  43c75a:	cld    
  43c75b:	push   ebx
  43c75d:	in     eax,dx
  43c75e:	cld    
  43c75f:	push   ebx
  43c761:	in     eax,dx
  43c762:	cld    
  43c763:	push   ebx
  43c765:	in     eax,dx
  43c766:	cld    
  43c767:	push   ebx
  43c769:	in     eax,dx
  43c76a:	cld    
  43c76b:	push   ebx
  43c76d:	in     eax,dx
  43c76e:	cld    
  43c76f:	inc    DWORD PTR [eax]
  43c771:	add    BYTE PTR [eax],al
  43c773:	repz in eax,dx
  43c775:	cld    
  43c776:	push   ebx
  43c778:	in     eax,dx
  43c779:	cld    
  43c77a:	push   ebx
  43c77c:	in     eax,dx
  43c77d:	cld    
  43c77e:	push   ebx
  43c780:	in     eax,dx
  43c781:	cld    
  43c782:	push   ebx
  43c784:	in     eax,dx
  43c785:	cld    
  43c786:	push   ebx
  43c788:	in     eax,dx
  43c789:	cld    
  43c78a:	push   ebx
  43c78c:	lahf   
  43c78d:	loop   0x43c7ce
  43c78f:	dec    eax
  43c790:	ds push es
  43c792:	mov    ecx,0xfffcedaf
  43c797:	repz in eax,dx
  43c799:	cld    
  43c79a:	push   ebx
  43c79c:	int    0x1
  43c79e:	lea    ecx,[edx]
  43c7a0:	loopne 0x43c79e
  43c7a2:	push   ebx
  43c7a4:	(bad)  
  43c7a6:	push   ebx
  43c7a8:	(bad)  
  43c7aa:	push   ebx
  43c7ac:	(bad)  
  43c7ae:	dec    esp
  43c7b0:	fnstsw ax
  43c7b2:	clc    
  43c7b3:	(bad)  
  43c7b4:	sar    esp,cl
  43c7b6:	push   ebx
  43c7b8:	fdivr  st,st(4)
  43c7ba:	push   ebx
  43c7bc:	pop    ds
  43c7bd:	add    al,0x0
  43c7bf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c7c1:	add    BYTE PTR [eax],al
  43c7c3:	repz push es
  43c7c5:	addr16 add al,0xf3
  43c7c8:	push   es
  43c7c9:	push   0xeed69beb
  43c7ce:	add    esi,ebx
  43c7d0:	push   es
  43c7d1:	fild   WORD PTR [ebx]
  43c7d3:	repz push es
  43c7d5:	mov    DWORD PTR [ebx],0xf3000000
  43c7db:	push   es
  43c7dc:	cli    
  43c7dd:	add    esi,ebx
  43c7df:	push   es
  43c7e0:	out    0x3,eax
  43c7e2:	repz push es
  43c7e4:	out    0x3,eax
  43c7e6:	repz push es
  43c7e8:	out    0xa3,eax
  43c7ea:	pop    esi
  43c7eb:	push   ss
  43c7ec:	out    0x3,eax
  43c7ee:	repz push es
  43c7f0:	out    0x3,eax
  43c7f2:	repz push es
  43c7f4:	out    0xbb,eax
  43c7f6:	icebp  
  43c7f7:	inc    esi
  43c7f8:	out    0x3,eax
  43c7fa:	repz push es
  43c7fc:	out    0x3,eax
  43c7fe:	repz push es
  43c800:	out    0xed,eax
  43c802:	hlt    
  43c803:	inc    esi
  43c804:	out    0x3,eax
  43c806:	repz push es
  43c808:	out    0x3,eax
  43c80a:	repz push es
  43c80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c80d:	xchg   eax,ebp
  43c80f:	inc    esi
  43c810:	out    0x3,eax
  43c812:	repz push es
  43c814:	out    0x3,eax
  43c816:	repz push es
  43c818:	xchg   edi,eax
  43c819:	(bad)  
  43c81a:	jmp    0x43c862
  43c81c:	out    0x3,eax
  43c81e:	repz push es
  43c820:	out    0x3,eax
  43c822:	repz push es
  43c824:	ret    
  43c825:	out    dx,eax
  43c826:	test   BYTE PTR [esi-0x19],0x3
  43c82a:	repz push es
  43c82c:	out    0x3,eax
  43c82e:	xrelease xchg BYTE PTR [eax-0x75],bh
  43c832:	loop   0x43c87a
  43c834:	out    0x3,eax
  43c836:	repz push es
  43c838:	out    0x3,eax
  43c83a:	repz es jnp 0x43c7e7
  43c83e:	add    BYTE PTR [eax],al
  43c840:	add    ch,bl
  43c842:	inc    esi
  43c843:	add    cl,ch
  43c845:	lock push es
  43c847:	add    cl,ch
  43c849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c84a:	mov    es,esi
  43c84c:	add    bl,BYTE PTR [ecx]
  43c84e:	sbb    al,BYTE PTR [eax-0x17]
  43c851:	lock push es
  43c853:	lahf   
  43c854:	test   BYTE PTR [edi+edi*4+0x14],al
  43c858:	stos   DWORD PTR es:[edi],eax
  43c859:	popf   
  43c85a:	aas    
  43c85b:	inc    eax
  43c85c:	leave  
  43c85d:	sub    BYTE PTR [edi-0x4e],0xf9
  43c861:	aad    0x9e
  43c863:	stos   BYTE PTR es:[edi],al
  43c864:	lods   al,BYTE PTR ds:[esi]
  43c865:	jnp    0x43c8d3
  43c867:	inc    eax
  43c868:	cdq    
  43c869:	mov    ebx,0xee4c22d1
  43c86e:	or     BYTE PTR [eax+0x0],0x34
  43c872:	push   edx
  43c873:	inc    eax
  43c874:	fsub   DWORD PTR [edx-0x4a]
  43c877:	xchg   edx,eax
  43c878:	stos   BYTE PTR es:[edi],al
  43c879:	dec    edx
  43c87a:	or     BYTE PTR [ebx+0x3f6f5810],cl
  43c880:	inc    eax
  43c881:	mov    DWORD PTR [ebp+0x43],esi
  43c884:	inc    esp
  43c885:	ja     0x43c88a
  43c887:	mov    DWORD PTR [eax+0x6e],ebp
  43c88a:	pushf  
  43c88b:	aas    
  43c88c:	data16 aam 0xb9
  43c88f:	mov    eax,ds:0x194c092e
  43c894:	xchg   ecx,eax
  43c895:	ss ret 0x7e3f
  43c899:	xor    dh,BYTE PTR [ebp-0x338fef75]
  43c89f:	inc    eax
  43c8a0:	inc    ebx
  43c8a1:	pop    ebp
  43c8a2:	lods   eax,DWORD PTR ds:[esi]
  43c8a3:	ds xor eax,0x73000000
  43c8a9:	imul   edx,DWORD PTR [ebx-0x3a],0x17
  43c8ad:	xor    al,0x59
  43c8b0:	xlat   BYTE PTR ds:[ebx]
  43c8b1:	push   eax
  43c8b2:	ds popf 
  43c8b4:	lods   al,BYTE PTR ds:[esi]
  43c8b5:	jle    0x43c890
  43c8b7:	shl    BYTE PTR [ebx+ebx*8-0x1c],1
  43c8bb:	dec    edi
  43c8bc:	gs inc ebp
  43c8be:	cmp    eax,0x6ee96b00
  43c8c3:	jecxz  0x43c84b
  43c8c5:	frstor [ecx]
  43c8c7:	das    
  43c8c8:	push   ds
  43c8c9:	mov    BYTE PTR [esi],bl
  43c8cb:	inc    esp
  43c8cc:	repnz cli 
  43c8ce:	push   cs
  43c8cf:	stos   BYTE PTR es:[edi],al
  43c8d0:	push   edx
  43c8d1:	jno    0x43c8db
  43c8d3:	jecxz  0x43c924
  43c8d5:	(bad)  
  43c8d6:	repnz inc esp
  43c8d8:	jno    0x43c880
  43c8da:	int3   
  43c8db:	repz pop ebp
  43c8dd:	mov    dl,0xd9
  43c8df:	dec    edx
  43c8e0:	lock add edi,0x45
  43c8e4:	out    dx,eax
  43c8e5:	mov    ?,WORD PTR [edi-0x5959ab6f]
  43c8eb:	mov    al,ds:0x469beb43
  43c8f0:	addr16 xor eax,0x893f0c0f
  43c8f6:	jle    0x43c96d
  43c8f8:	sub    al,0x91
  43c8fa:	inc    eax
  43c8fb:	dec    ebp
  43c8fc:	or     BYTE PTR [edx-0x1c],0xa7
  43c900:	cdq    
  43c901:	pop    ds
  43c902:	xor    esi,DWORD PTR ds:0x53e59d72
  43c908:	push   edi
  43c909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c90a:	fstp   QWORD PTR [ebp+0x0]
  43c90d:	add    BYTE PTR [eax],al
  43c90f:	pop    ss
  43c910:	xchg   ebp,eax
  43c911:	push   ebp
  43c912:	cmp    esp,DWORD PTR [ecx-0xaa57580]
  43c918:	dec    ebx
  43c919:	sahf   
  43c91a:	lock mov ebx,0xaf54c02a
  43c920:	dec    esi
  43c921:	xor    BYTE PTR [ecx-0x25],ah
  43c924:	jmp    0x43c8a9
  43c926:	pop    edx
  43c927:	add    edx,0xe0535d1d
  43c92d:	shl    DWORD PTR [edi+0x30],cl
  43c930:	test   al,dh
  43c932:	repz in eax,dx
  43c934:	popf   
  43c935:	call   0xf36e:0x78cc17c8
  43c93c:	sub    DWORD PTR [ebp+0x79fd5c94],esi
  43c942:	std    
  43c943:	and    bh,BYTE PTR [esi]
  43c945:	shl    BYTE PTR [edx],0x3e
  43c948:	fdivp  st(4),st
  43c94a:	push   ebx
  43c94c:	stos   BYTE PTR es:[edi],al
  43c94d:	mov    al,0xca
  43c94f:	mov    bh,0x71
  43c951:	mov    al,0xcb
  43c953:	scas   eax,DWORD PTR es:[edi]
  43c954:	cdq    
  43c955:	mov    al,0xf4
  43c957:	aam    0xee
  43c959:	and    BYTE PTR [esi],al
  43c95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c95c:	inc    eax
  43c95d:	ins    DWORD PTR es:[edi],dx
  43c95e:	cmp    edi,ecx
  43c960:	pushf  
  43c961:	mov    ds:0x6027bcf7,eax
  43c966:	xor    eax,0x90712494
  43c96b:	(bad)  [edi-0x5edb0d7d]
  43c971:	shr    DWORD PTR [ebx],cl
  43c973:	add    BYTE PTR [eax],al
  43c975:	add    dh,dl
  43c977:	push   es
  43c978:	loop   0x43c9d1
  43c97a:	cld    
  43c97b:	jl     0x43c94a
  43c97d:	out    dx,al
  43c97e:	or     al,0xe
  43c980:	clc    
  43c981:	sbb    al,0x6f
  43c983:	lods   al,BYTE PTR ds:[esi]
  43c984:	or     eax,DWORD PTR [ecx-0x71]
  43c987:	and    ah,BYTE PTR [eax-0x61620b17]
  43c98d:	mov    cl,0x9a
  43c98f:	leave  
  43c990:	xchg   edi,eax
  43c991:	add    ah,BYTE PTR [esi-0x24]
  43c994:	jle    0x43c97a
  43c996:	fdiv   QWORD PTR [eax-0x584e43df]
  43c99c:	(bad)  
  43c99e:	addr16 cmp al,0xcf
  43c9a1:	loopne 0x43c967
  43c9a3:	pop    ds
  43c9a4:	loop   0x43c9a0
  43c9a6:	sub    eax,0x7c0e787e
  43c9ab:	and    DWORD PTR [ebx+eiz*8+0x5530c92c],ebx
  43c9b2:	shl    BYTE PTR [ebx-0x48],cl
  43c9b5:	mov    ecx,0xde7c0787
  43c9ba:	lods   eax,DWORD PTR ds:[esi]
  43c9bb:	adc    dh,BYTE PTR [ebp-0x40]
  43c9be:	aas    
  43c9bf:	push   cs
  43c9c0:	pop    esp
  43c9c1:	inc    eax
  43c9c2:	mov    eax,0x8b8a88fb
  43c9c7:	adc    ah,BYTE PTR [ecx-0x8482a1]
  43c9cd:	inc    eax
  43c9ce:	pop    eax
  43c9cf:	icebp  
  43c9d0:	ja     0x43c989
  43c9d2:	adc    BYTE PTR [edx],0x3
  43c9d5:	and    esi,DWORD PTR [ecx+0xaa62e5]
  43c9db:	add    BYTE PTR [eax],al
  43c9dd:	fist   WORD PTR [edi]
  43c9df:	or     BYTE PTR [ebx+0x6],bh
  43c9e2:	adc    cl,BYTE PTR [eax]
  43c9e4:	push   ecx
  43c9e5:	sbb    al,0xc8
  43c9e7:	or     BYTE PTR [ebp-0x552aacd1],dh
  43c9ed:	sbb    edx,DWORD PTR [edx]
  43c9ef:	xchg   edx,eax
  43c9f0:	(bad)  
  43c9f1:	sbb    eax,DWORD PTR [eax+ebp*8-0x2c73895b]
  43c9f8:	jmp    0xe090:0x270b11b0
  43c9ff:	pop    ds
  43ca00:	mov    eax,ds:0x9bd1dd13
  43ca05:	push   cs
  43ca06:	adc    cl,ah
  43ca08:	xchg   edi,eax
  43ca09:	pop    ebp
  43ca0a:	jmp    0x43c98e
  43ca0c:	pusha  
  43ca0d:	mov    bh,0x48
  43ca0f:	pop    ss
  43ca10:	leave  
  43ca11:	rcl    DWORD PTR [eax],0xc6
  43ca14:	push   0xfffffff1
  43ca16:	ret    0x5005
  43ca19:	mov    ds:0x95952185,al
  43ca1e:	adc    edi,DWORD PTR [eax-0x16]
  43ca21:	(bad)  
  43ca22:	out    dx,eax
  43ca23:	mov    WORD PTR [edx-0x30],fs
  43ca26:	inc    ebp
  43ca27:	fadd   st,st(3)
  43ca29:	dec    eax
  43ca2a:	adc    ecx,eax
  43ca2c:	jl     0x43ca53
  43ca2e:	pcmpgtw mm7,QWORD PTR [edi]
  43ca31:	or     BYTE PTR [esi-0x49241701],0x34
  43ca38:	or     eax,0x2083a5f
  43ca3d:	sahf   
  43ca3e:	jmp    0x44321f
  43ca43:	add    BYTE PTR [esi-0x2e],ch
  43ca46:	xor    eax,0x3e4544af
  43ca4b:	out    0x8e,al
  43ca4d:	js     0x43cac1
  43ca4f:	(bad)  
  43ca50:	test   eax,0x27fa361f
  43ca55:	repz int 0xa
  43ca58:	mov    eax,0x8720ea23
  43ca5d:	cmp    esi,DWORD PTR [edi]
  43ca5f:	dec    edi
  43ca60:	adc    eax,0xb936bf90
  43ca65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca66:	jge    0x43cab7
  43ca68:	push   edx
  43ca69:	xchg   esp,eax
  43ca6a:	sub    eax,0xea1188b
  43ca6f:	dec    esi
  43ca70:	and    dh,BYTE PTR [eax+0x43]
  43ca73:	and    BYTE PTR [ecx+eax*1-0x14d833d4],bl
  43ca7a:	sub    dh,BYTE PTR [edi-0x68b2bff4]
  43ca80:	sahf   
  43ca81:	push   0x23
  43ca83:	outs   dx,BYTE PTR ds:[esi]
  43ca84:	mov    edi,0x2e29a40a
  43ca89:	xchg   ebx,eax
  43ca8a:	jp     0x43cade
  43ca8c:	sbb    bh,al
  43ca8e:	sbb    DWORD PTR [edi+0x15],esp
  43ca91:	mov    DWORD PTR [ebp-0x6a],edx
  43ca94:	xchg   DWORD PTR ds:0xf37199b9,ecx
  43ca9a:	pop    ss
  43ca9b:	lahf   
  43ca9c:	fldenv [ebp+0x5e]
  43ca9f:	and    al,0x71
  43caa1:	jle    0x43ca4b
  43caa3:	out    0x7c,eax
  43caa5:	dec    esp
  43caa6:	prefetch BYTE PTR [eax]
  43caa9:	add    BYTE PTR [eax],al
  43caab:	jmp    0x43ca59
  43caad:	cwde   
  43caae:	pop    ds
  43caaf:	and    cl,cl
  43cab1:	add    eax,DWORD PTR [eax]
  43cab3:	iret   
  43cab4:	jae    0x43ca86
  43cab6:	or     bl,dl
  43cab8:	add    al,0x0
  43caba:	add    BYTE PTR [edx+0x10],dl
  43cabd:	inc    eax
  43cabe:	add    BYTE PTR [edx-0x34ffbfbb],ah
  43cac4:	add    eax,0x5cc0000
  43cac9:	add    BYTE PTR [eax],al
  43cacb:	int    0x4
  43cacd:	add    BYTE PTR [eax],al
  43cacf:	ror    BYTE PTR ds:0x468a0040,cl
  43cad5:	inc    eax
  43cad6:	add    BYTE PTR [edx-0x43fffffc],bl
  43cadc:	add    al,0x0
  43cade:	add    BYTE PTR [ebp-0x75fffffc],bh
  43cae4:	add    al,0x0
  43cae6:	add    BYTE PTR [edx-0x65ffbff0],dl
  43caec:	add    al,0x0
  43caee:	add    BYTE PTR [ecx+0x4],bh
  43caf1:	add    BYTE PTR [eax],al
  43caf3:	test   DWORD PTR [eax+eax*1],eax
  43caf6:	add    BYTE PTR [edx+0x4],bl
  43caf9:	add    BYTE PTR [eax],al
  43cafb:	pop    ebx
  43cafc:	add    al,0x0
  43cafe:	add    BYTE PTR [edx+0x4],cl
  43cb01:	add    BYTE PTR [eax],al
  43cb03:	pop    esi
  43cb04:	cmp    BYTE PTR [eax],0x0
  43cb07:	push   ds
  43cb08:	popa   
  43cb09:	inc    eax
  43cb0a:	add    BYTE PTR [esi-0x80],dl
  43cb0d:	cmp    BYTE PTR [eax],al
  43cb0f:	add    BYTE PTR [eax],al
  43cb11:	add    BYTE PTR [esi],dl
  43cb13:	popa   
  43cb14:	inc    eax
  43cb15:	add    BYTE PTR [edx-0x80],cl
  43cb18:	cmp    BYTE PTR [eax],al
  43cb1a:	mov    dl,0x75
  43cb1c:	cmp    BYTE PTR [eax],al
  43cb1e:	jmp    0x3875:0xb2003875
  43cb25:	add    dl,ch
  43cb27:	jne    0x43cb61
  43cb29:	add    BYTE PTR [edx-0xcffc78b],dh
  43cb2f:	or     eax,0x25f33f8f
  43cb34:	(bad)  
  43cb35:	aas    
  43cb36:	repz dec ecx
  43cb38:	(bad)  
  43cb39:	aas    
  43cb3a:	repz or eax,0x45f33f8f
  43cb40:	(bad)  
  43cb41:	aas    
  43cb42:	repz cmp eax,0x51f33f8f
  43cb48:	nop
  43cb49:	aas    
  43cb4a:	repz push ebp
  43cb4c:	nop
  43cb4d:	aas    
  43cb4e:	repz pop ebp
  43cb50:	nop
  43cb51:	aas    
  43cb52:	repz cmp DWORD PTR [edi-0x70c60cc1],ecx
  43cb59:	aas    
  43cb5a:	repz cmp eax,0xf1f33f8f
  43cb60:	mov    ?,WORD PTR [edi]
  43cb62:	repz icebp 
  43cb64:	mov    ?,WORD PTR [edi]
  43cb66:	repz and DWORD PTR [edi-0x704e0cc1],ecx
  43cb6d:	aas    
  43cb6e:	repz ror DWORD PTR [edi-0x717e0cc1],0x3f
  43cb76:	add    BYTE PTR [eax],al
  43cb78:	add    bl,dh
  43cb7a:	dec    ebp
  43cb7b:	(bad)  
  43cb7c:	aas    
  43cb7d:	repz jns 0x43cb0e
  43cb80:	aas    
  43cb81:	repz popf 
  43cb83:	mov    ?,WORD PTR [edi]
  43cb85:	repz inc ecx
  43cb87:	(bad)  
  43cb88:	aas    
  43cb89:	repz push ebp
  43cb8b:	(bad)  
  43cb8c:	aas    
  43cb8d:	repz leave 
  43cb8f:	mov    ?,WORD PTR [edi]
  43cb91:	repz test eax,0x9f33f8e
  43cb97:	mov    ?,WORD PTR [edi]
  43cb99:	repz in eax,0x8e
  43cb9c:	aas    
  43cb9d:	repz adc DWORD PTR [esi-0x71be0cc1],ecx
  43cba4:	aas    
  43cba5:	repz popa 
  43cba7:	mov    ?,WORD PTR [edi]
  43cba9:	repz push es
  43cbab:	dec    ebx
  43cbac:	xchg   edx,eax
  43cbad:	int3   
  43cbae:	push   es
  43cbaf:	addr16 xchg edx,eax
  43cbb1:	les    eax,FWORD PTR [esi]
  43cbb3:	adc    DWORD PTR [edx-0x6d34f944],0xffffffb4
  43cbba:	push   es
  43cbbb:	retf   
  43cbbc:	xchg   edx,eax
  43cbbd:	sub    al,0x7
  43cbbf:	or     edx,DWORD PTR [ebx-0x6cf0f8dc]
  43cbc5:	sbb    al,0x7
  43cbc7:	daa    
  43cbc8:	xchg   ebx,eax
  43cbc9:	adc    al,0x7
  43cbcb:	xchg   ebx,eax
  43cbcc:	je     0x43cbda
  43cbce:	pop    es
  43cbcf:	ja     0x43cc45
  43cbd1:	add    al,0x7
  43cbd3:	push   ebx
  43cbd4:	je     0x43cbd2
  43cbd6:	push   es
  43cbd7:	aas    
  43cbd8:	je     0x43cbce
  43cbda:	push   es
  43cbdb:	pop    ds
  43cbdc:	je     0x43cbde
  43cbde:	add    BYTE PTR [eax],al
  43cbe0:	in     al,dx
  43cbe1:	push   es
  43cbe2:	sub    esi,DWORD PTR [esp+eiz*8+0x6]
  43cbe6:	out    dx,eax
  43cbe7:	jae    0x43cbc5
  43cbe9:	push   es
  43cbea:	push   DWORD PTR [ebx-0x2c]
  43cbed:	push   es
  43cbee:	sti    
  43cbef:	jae    0x43cbbd
  43cbf1:	push   es
  43cbf2:	jecxz  0x43cc67
  43cbf4:	les    eax,FWORD PTR [esi]
  43cbf6:	xchg   edi,eax
  43cbf7:	xchg   ebx,eax
  43cbf8:	mov    esp,0xb4938706
  43cbfd:	push   es
  43cbfe:	stos   DWORD PTR es:[edi],eax
  43cbff:	xchg   ebx,eax
  43cc00:	sub    al,0x7
  43cc02:	dec    ebx
  43cc03:	xchg   ebx,eax
  43cc04:	and    al,0x7
  43cc06:	pop    ebx
  43cc07:	xchg   ebx,eax
  43cc08:	sbb    al,0x7
  43cc0a:	addr16 xchg ebx,eax
  43cc0c:	adc    al,0x7
  43cc0e:	xlat   BYTE PTR ds:[ebx]
  43cc0f:	xchg   edx,eax
  43cc10:	or     al,0x7
  43cc12:	mov    edi,0x13070492
  43cc17:	xchg   ebx,eax
  43cc18:	cld    
  43cc19:	push   es
  43cc1a:	pop    es
  43cc1b:	xchg   ebx,eax
  43cc1c:	hlt    
  43cc1d:	push   es
  43cc1e:	jmp    0x43cbb2
  43cc20:	in     al,dx
  43cc21:	push   es
  43cc22:	pop    ds
  43cc23:	xchg   edx,eax
  43cc24:	in     al,0x6
  43cc26:	add    BYTE PTR [ecx],ch
  43cc28:	or     DWORD PTR [esi],0xe815100
  43cc2e:	add    BYTE PTR [ecx+0x61],ch
  43cc31:	push   cs
  43cc32:	add    BYTE PTR [ecx-0x5afff19e],dl
  43cc38:	bound  ecx,QWORD PTR [esi]
  43cc3a:	add    ch,al
  43cc3c:	bound  ecx,QWORD PTR [esi]
  43cc3e:	add    cl,ah
  43cc40:	or     BYTE PTR ds:0x100,0x0
  43cc47:	or     BYTE PTR ds:0xd820500,0x0
  43cc4e:	adc    DWORD PTR [edx+0x63b5000d],eax
  43cc54:	or     eax,0xd639900
  43cc59:	add    cl,ch
  43cc5b:	lock push es
  43cc5d:	add    cl,ch
  43cc5f:	lock push es
  43cc61:	add    cl,ch
  43cc63:	lock push es
  43cc65:	add    cl,ch
  43cc67:	lock push es
  43cc69:	add    cl,ch
  43cc6b:	lock push es
  43cc6d:	add    BYTE PTR [esi-0x74],dl
  43cc70:	or     al,0x0
  43cc72:	jmp    0xe943d367
  43cc77:	lock push es
  43cc79:	add    cl,ch
  43cc7b:	lock push es
  43cc7d:	add    BYTE PTR [esi],bl
  43cc7f:	mov    ch,0xc
  43cc81:	add    cl,ch
  43cc83:	lock push es
  43cc85:	add    cl,ch
  43cc87:	lock push es
  43cc89:	add    cl,ch
  43cc8b:	lock push es
  43cc8d:	add    BYTE PTR [edi+0x16],al
  43cc90:	or     eax,0x6f0e900
  43cc95:	add    cl,ch
  43cc97:	lock push es
  43cc99:	add    cl,ch
  43cc9b:	lock push es
  43cc9d:	add    BYTE PTR [esi+esi*8+0xc],cl
  43cca1:	add    BYTE PTR [eax],al
  43cca3:	sbb    cl,BYTE PTR [ecx]
  43cca5:	add    BYTE PTR [eax],al
  43cca7:	sbb    cl,BYTE PTR [ecx]
  43cca9:	add    BYTE PTR [eax],al
  43ccab:	add    BYTE PTR [eax],al
  43ccad:	add    BYTE PTR [edx],cl
  43ccaf:	or     DWORD PTR [eax],eax
  43ccb1:	add    BYTE PTR [eax+0xc],ch
  43ccb4:	cmp    al,BYTE PTR [eax]
  43ccb6:	sbb    cl,BYTE PTR [ecx]
  43ccb8:	add    BYTE PTR [eax],al
  43ccba:	sbb    cl,BYTE PTR [ecx]
  43ccbc:	add    BYTE PTR [eax],al
  43ccbe:	or     cl,BYTE PTR [ecx]
  43ccc0:	add    BYTE PTR [eax],al
  43ccc2:	dec    ebp
  43ccc3:	or     eax,0x8da003a
  43ccc8:	add    BYTE PTR [eax],al
  43ccca:	fimul  DWORD PTR [eax]
  43cccc:	add    BYTE PTR [eax],al
  43ccce:	retf   0x8
  43ccd1:	add    BYTE PTR [eax+0xc],dl
  43ccd4:	cmp    al,BYTE PTR [eax]
  43ccd6:	fimul  DWORD PTR [eax]
  43ccd8:	add    BYTE PTR [eax],al
  43ccda:	fimul  DWORD PTR [eax]
  43ccdc:	add    BYTE PTR [eax],al
  43ccde:	retf   0x8
  43cce1:	add    BYTE PTR [eax-0x65ffc5b9],dl
  43cce7:	or     BYTE PTR [eax],al
  43cce9:	add    BYTE PTR [edx-0x75fffff8],bl
  43ccef:	or     BYTE PTR [eax],al
  43ccf1:	add    dl,al
  43ccf3:	or     eax,0x89a003a
  43ccf8:	add    BYTE PTR [eax],al
  43ccfa:	call   0x8:0x8a000008
  43cd01:	add    dl,dl
  43cd03:	or     edi,DWORD PTR [edx]
  43cd05:	add    BYTE PTR [edx+0x8],bl
  43cd08:	add    BYTE PTR [eax],al
  43cd0a:	pop    edx
  43cd0b:	or     BYTE PTR [eax],al
  43cd0d:	add    BYTE PTR [edx+0x8],cl
  43cd10:	add    BYTE PTR [eax],al
  43cd12:	add    BYTE PTR [eax],al
  43cd14:	add    BYTE PTR [edi+0x5a003a0b],ah
  43cd1a:	or     BYTE PTR [eax],al
  43cd1c:	add    BYTE PTR [edx+0x8],bl
  43cd1f:	add    BYTE PTR [eax],al
  43cd21:	repz (bad) 
  43cd24:	push   ebx
  43cd26:	jb     0x43cd60
  43cd28:	ds repz (bad) 
  43cd2c:	push   ebx
  43cd2e:	(bad)  
  43cd30:	push   ebx
  43cd32:	(bad)  
  43cd34:	push   ebx
  43cd36:	jmp    0xfffc:0xddf33e38
  43cd3d:	repz (bad) 
  43cd40:	push   ebx
  43cd42:	(bad)  
  43cd44:	push   ebx
  43cd46:	mov    bl,0xa3
  43cd48:	aas    
  43cd49:	repz (bad) 
  43cd4c:	push   ebx
  43cd4e:	(bad)  
  43cd50:	push   ebx
  43cd52:	(bad)  
  43cd54:	push   ebx
  43cd56:	mov    gs:0xfcddf33f,eax
  43cd5c:	push   ebx
  43cd5e:	(bad)  
  43cd60:	push   ebx
  43cd62:	(bad)  
  43cd64:	push   ebx
  43cd66:	lahf   
  43cd67:	mov    ds:0xfcddf33f,eax
  43cd6c:	push   ebx
  43cd6e:	(bad)  
  43cd70:	push   ebx
  43cd72:	(bad)  
  43cd74:	push   ebx
  43cd76:	shl    DWORD PTR [eax+0x3f],1
  43cd7c:	repz (bad) 
  43cd7f:	push   ebx
  43cd81:	(bad)  
  43cd83:	push   ebx
  43cd85:	(bad)  
  43cd87:	push   ebx
  43cd89:	stc    
  43cd8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd8b:	aas    
  43cd8c:	repz (bad) 
  43cd8f:	push   ebx
  43cd91:	(bad)  
  43cd93:	push   ebx
  43cd95:	(bad)  
  43cd97:	push   ebx
  43cd99:	mov    ds:0x6f33ecc,al
  43cd9e:	out    0x3,eax
  43cda0:	repz push es
  43cda2:	out    0x3,eax
  43cda4:	repz push es
  43cda6:	out    0x3,eax
  43cda8:	repz push es
  43cdaa:	hlt    
  43cdab:	shr    ch,cl
  43cdad:	push   es
  43cdae:	out    0x3,eax
  43cdb0:	repz push es
  43cdb2:	out    0x3,eax
  43cdb4:	repz push es
  43cdb6:	out    0x3,eax
  43cdb8:	repz push es
  43cdba:	not    dl
  43cdbc:	int    0x6
  43cdbe:	out    0x3,eax
  43cdc0:	repz push es
  43cdc2:	out    0x3,eax
  43cdc4:	repz push es
  43cdc6:	out    0x3,eax
  43cdc8:	repz push es
  43cdca:	nop
  43cdcb:	shr    BYTE PTR ds:0xf303e707,cl
  43cdd1:	push   es
  43cdd2:	out    0x3,eax
  43cdd4:	repz push es
  43cdd6:	out    0x3,eax
  43cdd8:	repz push es
  43cdda:	sub    dl,dl
  43cddc:	or     eax,0x3e707
  43cde1:	add    BYTE PTR [eax],al
  43cde3:	repz push es
  43cde5:	out    0x3,eax
  43cde7:	repz push es
  43cde9:	out    0x3,eax
  43cdeb:	repz push es
  43cded:	in     al,0xd1
  43cdef:	in     eax,dx
  43cdf0:	push   es
  43cdf1:	out    0x3,eax
  43cdf3:	repz push es
  43cdf5:	out    0x3,eax
  43cdf7:	repz push es
  43cdf9:	out    0x3,eax
  43cdfb:	repz push es
  43cdfd:	push   ds
  43cdfe:	ror    ch,cl
  43ce00:	push   es
  43ce01:	out    0x3,eax
  43ce03:	repz push es
  43ce05:	out    0x3,eax
  43ce07:	repz push es
  43ce09:	out    0x3,eax
  43ce0b:	repz push es
  43ce0d:	jae    0x43cde1
  43ce0f:	sub    eax,0xf303e707
  43ce14:	push   es
  43ce15:	out    0x3,eax
  43ce17:	repz push es
  43ce19:	add    cl,ch
  43ce1b:	lock push es
  43ce1d:	add    BYTE PTR [ecx+eiz*1-0xf16fff7],cl
  43ce24:	push   es
  43ce25:	add    cl,ch
  43ce27:	lock push es
  43ce29:	add    cl,ch
  43ce2b:	lock push es
  43ce2d:	add    BYTE PTR [edx],cl
  43ce2f:	inc    eax
  43ce30:	or     DWORD PTR [eax],eax
  43ce32:	jmp    0xe943d527
  43ce37:	lock push es
  43ce39:	add    cl,ch
  43ce3b:	lock push es
  43ce3d:	add    al,al
  43ce3f:	and    DWORD PTR [ecx],ecx
  43ce41:	add    cl,ch
  43ce43:	lock push es
  43ce45:	add    cl,ch
  43ce47:	add    BYTE PTR [eax],al
  43ce49:	add    al,dh
  43ce4b:	push   es
  43ce4c:	add    cl,ch
  43ce4e:	lock push es
  43ce50:	add    BYTE PTR [ebx-0x40],bl
  43ce53:	or     BYTE PTR [eax],al
  43ce55:	jmp    0xe943d54a
  43ce5a:	lock push es
  43ce5c:	add    cl,ch
  43ce5e:	lock push es
  43ce60:	add    BYTE PTR [esi-0x16fff75c],dh
  43ce66:	lock push es
  43ce68:	add    cl,ch
  43ce6a:	lock push es
  43ce6c:	add    cl,ch
  43ce6e:	lock push es
  43ce70:	add    BYTE PTR [ebp-0x3c],ah
  43ce73:	or     BYTE PTR [eax],al
  43ce75:	jmp    0xe943d56a
  43ce7a:	lock push es
  43ce7c:	add    cl,ch
  43ce7e:	lock push es
  43ce80:	add    BYTE PTR [eax-0x16fff75c],bl
  43ce86:	lock push es
  43ce88:	add    cl,ch
  43ce8a:	lock push es
  43ce8c:	add    cl,ch
  43ce8e:	lock push es
  43ce90:	add    dl,cl
  43ce92:	dec    ebx
  43ce93:	or     BYTE PTR [eax],al
  43ce95:	add    BYTE PTR [edx+0x5],bl
  43ce98:	add    BYTE PTR [eax],al
  43ce9a:	dec    edx
  43ce9b:	add    eax,0x54a0000
  43cea0:	add    BYTE PTR [eax],al
  43cea2:	pop    es
  43cea3:	push   ds
  43cea4:	cmp    al,BYTE PTR [eax]
  43cea6:	pop    edx
  43cea7:	add    eax,0x54a0000
  43ceac:	add    BYTE PTR [eax],al
  43ceae:	add    BYTE PTR [eax],al
  43ceb0:	add    BYTE PTR [edx+0x5],cl
  43ceb3:	add    BYTE PTR [eax],al
  43ceb5:	neg    DWORD PTR [ebx]
  43ceb7:	cmp    al,BYTE PTR [eax]
  43ceb9:	sbb    al,BYTE PTR ds:0x50a0000
  43cebf:	add    BYTE PTR [eax],al
  43cec1:	or     al,BYTE PTR ds:0x1a370000
  43cec7:	cmp    al,BYTE PTR [eax]
  43cec9:	sbb    al,BYTE PTR ds:0x50a0000
  43cecf:	add    BYTE PTR [eax],al
  43ced1:	or     al,BYTE PTR ds:0x1b1a0000
  43ced7:	cmp    al,BYTE PTR [eax]
  43ced9:	fiadd  DWORD PTR [eax+eax*1]
  43cedc:	add    dl,cl
  43cede:	add    al,0x0
  43cee0:	add    dl,cl
  43cee2:	add    al,0x0
  43cee4:	add    ch,bl
  43cee6:	sbb    al,0x3a
  43cee8:	add    dl,bl
  43ceea:	add    al,0x0
  43ceec:	add    dl,cl
  43ceee:	add    al,0x0
  43cef0:	add    dl,cl
  43cef2:	add    al,0x0
  43cef4:	add    ah,bh
  43cef6:	sbb    al,0x3a
  43cef8:	add    BYTE PTR [edx-0x75fffffc],bl
  43cefe:	add    al,0x0
  43cf00:	add    BYTE PTR [edx-0x23fffffc],cl
  43cf06:	sbb    al,0x3a
  43cf08:	add    BYTE PTR [edx-0x75fffffc],bl
  43cf0e:	add    al,0x0
  43cf10:	add    bl,dh
  43cf12:	(bad)  
  43cf14:	inc    DWORD PTR [eax]
  43cf16:	add    BYTE PTR [eax],al
  43cf18:	repz into 
  43cf1a:	daa    
  43cf1b:	ds repz (bad) 
  43cf1f:	push   ebx
  43cf21:	(bad)  
  43cf23:	push   ebx
  43cf25:	(bad)  
  43cf27:	push   ebx
  43cf29:	aaa    
  43cf2a:	leave  
  43cf2b:	cmp    eax,0xfffcddf3
  43cf30:	repz (bad) 
  43cf33:	push   ebx
  43cf35:	(bad)  
  43cf37:	push   ebx
  43cf39:	or     eax,0xddf33dc9
  43cf3e:	cld    
  43cf3f:	push   ebx
  43cf41:	(bad)  
  43cf43:	push   ebx
  43cf45:	(bad)  
  43cf47:	push   ebx
  43cf49:	mov    al,0xca
  43cf4b:	cmp    eax,0xfffcddf3
  43cf50:	repz (bad) 
  43cf53:	push   ebx
  43cf55:	(bad)  
  43cf57:	push   ebx
  43cf59:	xchg   ecx,eax
  43cf5a:	retf   0xf33d
  43cf5d:	(bad)  
  43cf5f:	push   ebx
  43cf61:	(bad)  
  43cf63:	push   ebx
  43cf65:	(bad)  
  43cf67:	push   ebx
  43cf69:	pop    es
  43cf6a:	retf   0xf33d
  43cf6d:	(bad)  
  43cf6f:	push   ebx
  43cf71:	(bad)  
  43cf73:	push   ebx
  43cf75:	(bad)  
  43cf77:	push   ebx
  43cf79:	mov    bh,0xca
  43cf7b:	cmp    eax,0xf3000000
  43cf80:	(bad)  
  43cf82:	push   ebx
  43cf84:	(bad)  
  43cf86:	push   ebx
  43cf88:	(bad)  
  43cf8a:	push   ebx
  43cf8c:	cmp    cl,ah
  43cf8e:	cmp    eax,0x3e706f3
  43cf93:	repz push es
  43cf95:	out    0x3,eax
  43cf97:	repz push es
  43cf99:	out    0x3,eax
  43cf9b:	repz push es
  43cf9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf9e:	int3   
  43cf9f:	es pop es
  43cfa1:	out    0x3,eax
  43cfa3:	repz push es
  43cfa5:	out    0x3,eax
  43cfa7:	repz push es
  43cfa9:	out    0x3,eax
  43cfab:	repz push es
  43cfad:	jl     0x43cf7b
  43cfaf:	push   es
  43cfb0:	pop    es
  43cfb1:	out    0x3,eax
  43cfb3:	repz push es
  43cfb5:	out    0x3,eax
  43cfb7:	repz push es
  43cfb9:	out    0x3,eax
  43cfbb:	repz push es
  43cfbd:	out    dx,eax
  43cfbe:	mov    bl,0xe6
  43cfc0:	push   es
  43cfc1:	out    0x3,eax
  43cfc3:	repz push es
  43cfc5:	out    0x3,eax
  43cfc7:	repz push es
  43cfc9:	out    0x3,eax
  43cfcb:	repz push es
  43cfcd:	ror    DWORD PTR [esi+0x3e706c6],cl
  43cfd3:	repz push es
  43cfd5:	out    0x3,eax
  43cfd7:	repz push es
  43cfd9:	out    0x3,eax
  43cfdb:	repz push es
  43cfdd:	mov    WORD PTR [ebp+0x3e70726],cs
  43cfe3:	add    BYTE PTR [eax],al
  43cfe5:	add    bl,dh
  43cfe7:	push   es
  43cfe8:	out    0x3,eax
  43cfea:	repz push es
  43cfec:	out    0x3,eax
  43cfee:	repz push es
  43cff0:	pop    ss
  43cff1:	add    ax,0xe707
  43cff5:	add    esi,ebx
  43cff7:	push   es
  43cff8:	out    0x3,eax
  43cffa:	repz push es
  43cffc:	out    0x3,eax
  43cffe:	repz push es
  43d000:	xchg   edx,eax
  43d001:	xchg   esp,eax
  43d002:	in     eax,0x6
  43d004:	out    0x3,eax
  43d006:	repz push es
  43d008:	out    0x3,eax
  43d00a:	repz push es
  43d00c:	add    cl,ch
  43d00e:	lock push es
  43d010:	add    BYTE PTR [ebx-0x16fffaa1],dh
  43d016:	lock push es
  43d018:	add    cl,ch
  43d01a:	lock push es
  43d01c:	add    cl,ch
  43d01e:	lock push es
  43d020:	add    BYTE PTR [ebx],ah
  43d022:	mov    BYTE PTR ds:0x6f0e900,al
  43d028:	add    cl,ch
  43d02a:	lock push es
  43d02c:	add    cl,ch
  43d02e:	lock push es
  43d030:	add    ah,bl
  43d032:	popa   
  43d033:	add    eax,0x6f0e900
  43d038:	add    cl,ch
  43d03a:	lock push es
  43d03c:	add    cl,ch
  43d03e:	lock push es
  43d040:	add    BYTE PTR [edx-0x7c],bl
  43d043:	add    eax,0x6f0e900
  43d048:	add    cl,ch
  43d04a:	add    BYTE PTR [eax],al
  43d04c:	add    al,dh
  43d04e:	push   es
  43d04f:	add    BYTE PTR [ecx],bh
  43d051:	push   0x6
  43d053:	add    BYTE PTR [esi],dh
  43d055:	push   0x6
  43d057:	add    BYTE PTR [ecx],ch
  43d059:	mov    eax,ds:0xf0e90046
  43d05e:	push   es
  43d05f:	add    BYTE PTR [ebp-0x76ffb8bf],cl
  43d065:	inc    ecx
  43d066:	inc    edi
  43d067:	add    BYTE PTR [ebp-0x5effb8bf],ah
  43d06d:	inc    ecx
  43d06e:	inc    edi
  43d06f:	add    BYTE PTR [ebp-0x66ffb8df],bl
  43d075:	and    DWORD PTR [edi+0x0],eax
  43d078:	xor    eax,0x31004720
  43d07d:	and    BYTE PTR [edi+0x0],al
  43d080:	sub    eax,0x29004740
  43d085:	inc    eax
  43d086:	inc    edi
  43d087:	add    BYTE PTR [eax],al
  43d089:	neg    BYTE PTR [ecx+0x40]
  43d08c:	add    dl,dh
  43d08e:	pop    ecx
  43d08f:	inc    eax
  43d090:	add    BYTE PTR [edx+0x75000009],bl
  43d096:	cdq    
  43d097:	add    BYTE PTR [ecx+0x98a],bl
  43d09d:	mov    cl,BYTE PTR [ecx]
  43d09f:	add    BYTE PTR [eax],al
  43d0a1:	pop    edx
  43d0a2:	or     DWORD PTR [eax],eax
  43d0a4:	add    BYTE PTR [edx+0x9],bl
  43d0a7:	add    BYTE PTR [eax],al
  43d0a9:	dec    edx
  43d0aa:	or     DWORD PTR [eax],eax
  43d0ac:	add    BYTE PTR [edx+0x9],cl
  43d0af:	add    BYTE PTR [eax],al
  43d0b1:	add    BYTE PTR [eax],al
  43d0b3:	add    BYTE PTR [edx+0x9],bl
  43d0b6:	add    BYTE PTR [eax],al
  43d0b8:	pop    edx
  43d0b9:	or     DWORD PTR [eax],eax
  43d0bb:	add    BYTE PTR [edx+0x9],cl
  43d0be:	add    BYTE PTR [eax],al
  43d0c0:	dec    edx
  43d0c1:	or     DWORD PTR [eax],eax
  43d0c3:	add    BYTE PTR [edx],bl
  43d0c5:	or     DWORD PTR [eax],eax
  43d0c7:	add    BYTE PTR [edx],bl
  43d0c9:	or     DWORD PTR [eax],eax
  43d0cb:	add    BYTE PTR [edx],cl
  43d0cd:	or     DWORD PTR [eax],eax
  43d0cf:	add    BYTE PTR [edx],cl
  43d0d1:	or     DWORD PTR [eax],eax
  43d0d3:	add    BYTE PTR [edx],bl
  43d0d5:	or     DWORD PTR [eax],eax
  43d0d7:	add    BYTE PTR [edx],bl
  43d0d9:	or     DWORD PTR [eax],eax
  43d0db:	add    BYTE PTR [edx],cl
  43d0dd:	or     DWORD PTR [eax],eax
  43d0df:	add    BYTE PTR [edx],cl
  43d0e1:	or     DWORD PTR [eax],eax
  43d0e3:	add    dl,bl
  43d0e5:	or     BYTE PTR [eax],al
  43d0e7:	add    dl,bl
  43d0e9:	or     BYTE PTR [eax],al
  43d0eb:	add    dl,cl
  43d0ed:	or     BYTE PTR [eax],al
  43d0ef:	add    dl,cl
  43d0f1:	or     BYTE PTR [eax],al
  43d0f3:	add    dl,bl
  43d0f5:	or     BYTE PTR [eax],al
  43d0f7:	add    dl,bl
  43d0f9:	or     BYTE PTR [eax],al
  43d0fb:	add    dl,cl
  43d0fd:	or     BYTE PTR [eax],al
  43d0ff:	add    dl,cl
  43d101:	or     BYTE PTR [eax],al
  43d103:	add    bl,dh
  43d105:	lods   eax,DWORD PTR ds:[esi]
  43d106:	cld    
  43d107:	push   ebx
  43d109:	lods   eax,DWORD PTR ds:[esi]
  43d10a:	cld    
  43d10b:	push   ebx
  43d10d:	lods   eax,DWORD PTR ds:[esi]
  43d10e:	cld    
  43d10f:	push   ebx
  43d111:	lods   eax,DWORD PTR ds:[esi]
  43d112:	cld    
  43d113:	push   ebx
  43d115:	lods   eax,DWORD PTR ds:[esi]
  43d116:	cld    
  43d117:	inc    DWORD PTR [eax]
  43d119:	add    BYTE PTR [eax],al
  43d11b:	rep lods eax,DWORD PTR ds:[esi]
  43d11d:	cld    
  43d11e:	push   ebx
  43d120:	lods   eax,DWORD PTR ds:[esi]
  43d121:	cld    
  43d122:	push   ebx
  43d124:	lods   eax,DWORD PTR ds:[esi]
  43d125:	cld    
  43d126:	push   ebx
  43d128:	lods   eax,DWORD PTR ds:[esi]
  43d129:	cld    
  43d12a:	push   ebx
  43d12c:	lods   eax,DWORD PTR ds:[esi]
  43d12d:	cld    
  43d12e:	push   ebx
  43d130:	lods   eax,DWORD PTR ds:[esi]
  43d131:	cld    
  43d132:	push   ebx
  43d134:	lods   eax,DWORD PTR ds:[esi]
  43d135:	cld    
  43d136:	push   ebx
  43d138:	lods   eax,DWORD PTR ds:[esi]
  43d139:	cld    
  43d13a:	push   ebx
  43d13c:	lods   eax,DWORD PTR ds:[esi]
  43d13d:	cld    
  43d13e:	push   ebx
  43d140:	lods   eax,DWORD PTR ds:[esi]
  43d141:	cld    
  43d142:	push   ebx
  43d144:	lods   eax,DWORD PTR ds:[esi]
  43d145:	cld    
  43d146:	push   ebx
  43d148:	lods   eax,DWORD PTR ds:[esi]
  43d149:	cld    
  43d14a:	push   ebx
  43d14c:	lods   eax,DWORD PTR ds:[esi]
  43d14d:	cld    
  43d14e:	push   ebx
  43d150:	lods   eax,DWORD PTR ds:[esi]
  43d151:	cld    
  43d152:	push   ebx
  43d154:	lods   eax,DWORD PTR ds:[esi]
  43d155:	cld    
  43d156:	push   ebx
  43d158:	lods   eax,DWORD PTR ds:[esi]
  43d159:	cld    
  43d15a:	push   ebx
  43d15c:	lods   eax,DWORD PTR ds:[esi]
  43d15d:	cld    
  43d15e:	push   ebx
  43d160:	lods   eax,DWORD PTR ds:[esi]
  43d161:	cld    
  43d162:	push   ebx
  43d164:	lods   eax,DWORD PTR ds:[esi]
  43d165:	cld    
  43d166:	push   ebx
  43d168:	lods   eax,DWORD PTR ds:[esi]
  43d169:	cld    
  43d16a:	push   ebx
  43d16c:	lods   eax,DWORD PTR ds:[esi]
  43d16d:	cld    
  43d16e:	push   ebx
  43d170:	lods   eax,DWORD PTR ds:[esi]
  43d171:	cld    
  43d172:	push   ebx
  43d174:	lods   eax,DWORD PTR ds:[esi]
  43d175:	cld    
  43d176:	push   ebx
  43d178:	lods   eax,DWORD PTR ds:[esi]
  43d179:	cld    
  43d17a:	push   ebx
  43d17c:	lods   eax,DWORD PTR ds:[esi]
  43d17d:	cld    
  43d17e:	inc    DWORD PTR [eax]
  43d180:	add    BYTE PTR [eax],al
  43d182:	repz push es
  43d184:	out    0x3,eax
  43d186:	repz push es
  43d188:	out    0x3,eax
  43d18a:	repz push es
  43d18c:	out    0x3,eax
  43d18e:	repz push es
  43d190:	out    0x3,eax
  43d192:	repz push es
  43d194:	out    0x3,eax
  43d196:	repz push es
  43d198:	out    0x3,eax
  43d19a:	repz push es
  43d19c:	out    0x3,eax
  43d19e:	repz push es
  43d1a0:	out    0x3,eax
  43d1a2:	repz push es
  43d1a4:	out    0x3,eax
  43d1a6:	repz push es
  43d1a8:	out    0x3,eax
  43d1aa:	repz push es
  43d1ac:	out    0x3,eax
  43d1ae:	repz push es
  43d1b0:	out    0x3,eax
  43d1b2:	repz push es
  43d1b4:	out    0x3,eax
  43d1b6:	repz push es
  43d1b8:	out    0x3,eax
  43d1ba:	repz push es
  43d1bc:	out    0x3,eax
  43d1be:	repz push es
  43d1c0:	out    0x3,eax
  43d1c2:	repz push es
  43d1c4:	out    0x3,eax
  43d1c6:	repz push es
  43d1c8:	out    0x3,eax
  43d1ca:	repz push es
  43d1cc:	out    0x3,eax
  43d1ce:	repz push es
  43d1d0:	out    0x3,eax
  43d1d2:	repz push es
  43d1d4:	out    0x3,eax
  43d1d6:	repz push es
  43d1d8:	out    0x3,eax
  43d1da:	repz push es
  43d1dc:	out    0x3,eax
  43d1de:	repz push es
  43d1e0:	out    0x3,eax
  43d1e2:	repz push es
  43d1e4:	out    0x3,eax
  43d1e6:	add    BYTE PTR [eax],al
  43d1e8:	add    bl,dh
  43d1ea:	push   es
  43d1eb:	out    0x3,eax
  43d1ed:	repz push es
  43d1ef:	out    0xf3,eax
  43d1f1:	in     al,0xc2
  43d1f3:	mov    BYTE PTR [ebx],0xf3
  43d1f6:	push   es
  43d1f7:	dec    ebx
  43d1f8:	sbb    cl,BYTE PTR [ebx+0x171ddf00]
  43d1fe:	std    
  43d1ff:	(bad)  
  43d200:	mov    eax,0xa13602e6
  43d205:	ficomp WORD PTR [edx+0x36]
  43d208:	dec    ecx
  43d209:	fnstenv [edx]
  43d20b:	ss popa 
  43d20d:	or     DWORD PTR [ebx+0x730e935],ecx
  43d213:	add    BYTE PTR [ecx],al
  43d215:	test   DWORD PTR [esi],0x3afa3900
  43d21b:	cmp    eax,DWORD PTR [ecx-0x16]
  43d21e:	inc    edx
  43d21f:	cmp    ebp,DWORD PTR [ecx-0x16]
  43d222:	mov    bh,BYTE PTR [edx]
  43d224:	popa   
  43d225:	ficom  DWORD PTR [edx-0x652586c6]
  43d22b:	cmp    al,BYTE PTR [ecx+0x4939a305]
  43d231:	std    
  43d232:	push   0x39
  43d234:	inc    ecx
  43d235:	add    eax,0xd0e90007
  43d23a:	push   es
  43d23b:	add    BYTE PTR [ecx+0x590006f6],bl
  43d241:	cmc    
  43d242:	mov    ds:0x6eed4931,al
  43d247:	xor    DWORD PTR [ebp-0x62ce851b],edx
  43d24d:	add    BYTE PTR [eax],al
  43d24f:	add    ch,bh
  43d251:	retf   0x2531
  43d254:	cmc    
  43d255:	fidiv  DWORD PTR [ecx]
  43d257:	sub    eax,0x5531aaed
  43d25c:	in     eax,0xba
  43d25e:	xor    DWORD PTR ds:0xe5310afd,edi
  43d264:	cmc    
  43d265:	sbb    dh,BYTE PTR [ecx]
  43d267:	int    0xed
  43d269:	jmp    0xdd30:0xfae5d530
  43d270:	std    
  43d271:	dec    edx
  43d272:	xor    DWORD PTR [ebp-0x52cea50b],esp
  43d278:	in     eax,dx
  43d279:	sub    dh,BYTE PTR [ecx]
  43d27b:	add    BYTE PTR [esi+0x10],bh
  43d27e:	je     0x43d2b7
  43d280:	dec    esi
  43d281:	adc    DWORD PTR [edi+esi*1+0x3794124e],eax
  43d288:	adc    ah,BYTE PTR cs:[edi+esi*1+0x37b4105e]
  43d290:	mov    ss,WORD PTR [eax]
  43d292:	les    esi,FWORD PTR [edi]
  43d294:	dec    esi
  43d295:	adc    ah,dl
  43d297:	aaa    
  43d298:	dec    esi
  43d299:	adc    ah,ah
  43d29b:	aaa    
  43d29c:	mov    esi,0x4e37f410
  43d2a1:	adc    BYTE PTR [eax+edi*1],al
  43d2a4:	mov    ds,WORD PTR ds:0x1dae3814
  43d2aa:	and    al,0x38
  43d2ac:	sahf   
  43d2ad:	sbb    eax,0x1d4e3834
  43d2b2:	inc    esp
  43d2b3:	cmp    BYTE PTR [eax],al
  43d2b5:	add    BYTE PTR [eax],al
  43d2b7:	push   cs
  43d2b8:	and    edx,DWORD PTR [eax+edi*1+0xe]
  43d2bc:	and    esp,DWORD PTR [eax+edi*1-0x2]
  43d2c0:	and    dh,BYTE PTR [eax+edi*1+0x4e]
  43d2c4:	sbb    eax,0x1dce3884
  43d2c9:	xchg   esp,eax
  43d2ca:	cmp    BYTE PTR [esi+0x5e38a41d],ch
  43d2d0:	sbb    eax,0x1d8e38b4
  43d2d5:	les    edi,FWORD PTR [eax]
  43d2d7:	into   
  43d2d8:	sbb    eax,0x1dce38d4
  43d2dd:	in     al,0x38
  43d2df:	mov    esi,0xce38f41d
  43d2e4:	sbb    eax,0x220e3904
  43d2e9:	adc    al,0x39
  43d2eb:	and    ah,BYTE PTR cs:[ecx+edi*1]
  43d2ef:	push   ds
  43d2f0:	and    dh,BYTE PTR [ecx+edi*1]
  43d2f3:	into   
  43d2f4:	and    eax,DWORD PTR [ecx+edi*1-0xd]
  43d2f8:	imul   ebx,DWORD PTR [ebx],0x1b721a54
  43d2fe:	sbb    bl,BYTE PTR fs:[edx+0x420a741b]
  43d305:	sbb    al,0x84
  43d307:	or     ch,BYTE PTR [edx]
  43d309:	sbb    al,0x94
  43d30b:	cli    
  43d30c:	push   ecx
  43d30d:	sbb    al,0xa4
  43d30f:	cli    
  43d310:	cdq    
  43d311:	adc    al,0xb4
  43d313:	jmp    0x1469:0xeac414a1
  43d31a:	aam    0x0
  43d31c:	add    BYTE PTR [eax],al
  43d31e:	fidiv  DWORD PTR [ecx+0x14]
  43d321:	in     al,0xda
  43d323:	fst    DWORD PTR [esp+esi*8]
  43d326:	retf   0x1481
  43d329:	add    al,0xc9
  43d32b:	test   eax,0xd1b91416
  43d330:	push   ss
  43d331:	and    al,0xb9
  43d333:	fst    DWORD PTR [esi]
  43d335:	xor    al,0x29
  43d337:	loop   0x43d34f
  43d339:	inc    esp
  43d33a:	sub    edx,ebp
  43d33c:	adc    eax,0x15f21954
  43d341:	sbb    DWORD PTR fs:[edx],ebx
  43d344:	push   ss
  43d345:	je     0x43d350
  43d347:	ret    0x8416
  43d34a:	or     DWORD PTR [edx],ebp
  43d34c:	push   ss
  43d34d:	xchg   esp,eax
  43d34e:	stc    
  43d34f:	push   ecx
  43d350:	push   ss
  43d351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d352:	stc    
  43d353:	cdq    
  43d354:	adc    eax,0x15a1e9b4
  43d359:	(bad)  
  43d35a:	jmp    0xda17e948
  43d35f:	icebp  
  43d360:	adc    eax,0x1659d9e4
  43d365:	hlt    
  43d366:	leave  
  43d367:	add    DWORD PTR [esi],edx
  43d369:	add    al,0xc8
  43d36b:	test   eax,0xd1b81417
  43d370:	pop    ss
  43d371:	and    al,0xb8
  43d373:	push   es
  43d374:	rcr    DWORD PTR [eax],cl
  43d376:	daa    
  43d377:	cld    
  43d378:	ficomp DWORD PTR [eax]
  43d37a:	das    
  43d37b:	cld    
  43d37c:	mov    ds:0xaafc4718,al
  43d381:	sbb    BYTE PTR [eax],al
  43d383:	add    BYTE PTR [eax],al
  43d385:	dec    edi
  43d386:	cld    
  43d387:	xchg   edx,eax
  43d388:	sbb    BYTE PTR [edi-0x4],al
  43d38b:	jp     0x43d3a5
  43d38d:	outs   dx,DWORD PTR ds:[esi]
  43d38e:	sti    
  43d38f:	bound  ebx,QWORD PTR [ecx]
  43d391:	addr16 sti 
  43d393:	dec    edx
  43d394:	sbb    DWORD PTR [edi+0x671892fb],ecx
  43d39a:	sti    
  43d39b:	call   0xc718:0xa2fbaf18
  43d3a2:	sti    
  43d3a3:	stos   BYTE PTR es:[edi],al
  43d3a4:	sbb    BYTE PTR [edi-0x78e72d05],cl
  43d3aa:	sti    
  43d3ab:	mov    edx,0xe302ef18
  43d3b0:	pop    ss
  43d3b1:	out    0x2,eax
  43d3b3:	retf   
  43d3b4:	pop    ss
  43d3b5:	iret   
  43d3b6:	add    dl,bl
  43d3b8:	pop    ss
  43d3b9:	daa    
  43d3ba:	add    ebx,ebx
  43d3bc:	pop    ss
  43d3bd:	scas   eax,DWORD PTR es:[edi]
  43d3be:	add    ah,BYTE PTR [ebx]
  43d3c0:	sbb    bh,al
  43d3c2:	add    ch,BYTE PTR [ebx]
  43d3c4:	sbb    bh,cl
  43d3c6:	add    dl,BYTE PTR [ebx]
  43d3c8:	sbb    bh,al
  43d3ca:	add    bh,bl
  43d3cc:	pop    ss
  43d3cd:	outs   dx,DWORD PTR ds:[esi]
  43d3ce:	add    ah,BYTE PTR [ebx+0x17]
  43d3d1:	add    cl,BYTE PTR [bp+di+0x17]
  43d3d5:	pop    DWORD PTR [edx]
  43d3d7:	xchg   ebx,eax
  43d3d8:	pop    ss
  43d3d9:	add    ah,BYTE PTR [bx]
  43d3dc:	pop    ss
  43d3dd:	aaa    
  43d3de:	add    ch,BYTE PTR [edi]
  43d3e0:	pop    ss
  43d3e1:	pop    ss
  43d3e2:	add    dl,BYTE PTR [edi+0x17]
  43d3e5:	pop    ss
  43d3e6:	add    dl,BYTE PTR [ebx]
  43d3e8:	pop    ss
  43d3e9:	add    BYTE PTR [eax],al
  43d3eb:	add    bh,al
  43d3ed:	add    ebx,edi
  43d3ef:	push   ss
  43d3f0:	scas   eax,DWORD PTR es:[edi]
  43d3f1:	add    DWORD PTR [eax],eax
  43d3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3f4:	in     eax,0x5a
  43d3f6:	cmp    ecx,DWORD PTR [ebp-0x6ac4d523]
  43d3fc:	add    eax,0xfd9d3b33
  43d401:	cmp    BYTE PTR [edx],0x65
  43d404:	add    eax,0xfd6d3a93
  43d409:	bound  edi,QWORD PTR [edx]
  43d40b:	push   ebp
  43d40c:	in     eax,0x72
  43d40e:	cmp    bh,BYTE PTR ds:0x253ac2dd
  43d414:	in     eax,0xd2
  43d416:	cmp    cl,BYTE PTR ds:0xe93aa2dd
  43d41c:	inc    eax
  43d41d:	pop    es
  43d41e:	add    BYTE PTR [ecx],ah
  43d420:	out    dx,eax
  43d421:	push   es
  43d422:	add    ch,dh
  43d424:	sti    
  43d425:	out    0x32,al
  43d427:	add    eax,0x1532eefa
  43d42c:	jmp    0x32fe:0xebf532f6
  43d433:	cmc    
  43d434:	fild   DWORD PTR [esi+0x33]
  43d437:	sbb    eax,0xb132c2da
  43d43c:	or     cl,bl
  43d43e:	xor    al,BYTE PTR [ebp+0x9]
  43d441:	outs   dx,DWORD PTR ds:[esi]
  43d442:	xor    DWORD PTR [ebp-0x7],eax
  43d445:	jbe    0x43d478
  43d447:	push   ebp
  43d448:	stc    
  43d449:	ret    0xb137
  43d44c:	push   DWORD PTR [edx+0x8137]
  43d452:	add    bh,dh
  43d454:	mov    edx,0xbe70e937
  43d459:	clc    
  43d45a:	cmc    
  43d45b:	lock push es
  43d45d:	add    BYTE PTR [ebp-0x2],dl
  43d460:	mov    dh,0x36
  43d462:	push   ebp
  43d463:	idiv   BYTE PTR [esi+0x6ee5536]
  43d469:	ss in  eax,0xe6
  43d46c:	push   cs
  43d46d:	add    BYTE PTR ss:[esi],al
  43d470:	or     al,0xd4
  43d472:	cmp    dl,dl
  43d474:	or     al,0xdc
  43d476:	cmp    ch,BYTE PTR [edx-0x45c51bf4]
  43d47c:	or     al,0xf4
  43d47e:	cmp    dl,BYTE PTR [edx]
  43d480:	or     eax,0xcda3afc
  43d485:	add    al,0x3b
  43d487:	ror    BYTE PTR [esp+eiz*2],cl
  43d48a:	cmp    esi,DWORD PTR [edx+0xc]
  43d48d:	ins    BYTE PTR es:[edi],dx
  43d48e:	cmp    ecx,DWORD PTR [edx+0xd]
  43d491:	je     0x43d4ce
  43d493:	jb     0x43d4a1
  43d495:	jl     0x43d4d2
  43d497:	dec    edx
  43d498:	push   cs
  43d499:	test   BYTE PTR [ebx],bh
  43d49b:	push   edx
  43d49c:	push   cs
  43d49d:	mov    WORD PTR [ebx],?
  43d49f:	sub    cl,BYTE PTR ds:0xc723b94
  43d4a5:	mov    eax,0xc00c863b
  43d4aa:	cmp    esp,DWORD PTR [edx+0xc]
  43d4ad:	in     al,0x3b
  43d4af:	cli    
  43d4b0:	push   ss
  43d4b1:	hlt    
  43d4b2:	cmp    al,0xb2
  43d4b4:	or     eax,0x3cfc
  43d4b9:	add    BYTE PTR [edx-0x6dc2fbea],cl
  43d4bf:	push   ss
  43d4c0:	or     al,0x3d
  43d4c2:	push   0x16
  43d4c4:	adc    al,0x3d
  43d4c6:	repnz pop ss
  43d4c8:	sbb    al,0x3d
  43d4ca:	sub    dl,BYTE PTR [esi]
  43d4cc:	and    al,0x3d
  43d4ce:	dec    edx
  43d4cf:	cmp    ecx,edi
  43d4d1:	jmp    esi
  43d4d3:	add    al,BYTE PTR [eax]
  43d4d5:	add    BYTE PTR [esi+0x15],al
  43d4d8:	xor    BYTE PTR [esi+ecx*8],0x15
  43d4dc:	mov    BYTE PTR [esi+edx*4],dh
  43d4df:	adc    eax,0x15be3490
  43d4e4:	call   0x1d63c71d
  43d4e9:	xor    eax,0xf817eef3
  43d4ee:	(bad)  
  43d4f0:	push   ss
  43d4f1:	dec    ebx
  43d4f2:	lds    esi,FWORD PTR [edi+edx*1]
  43d4f5:	stc    
  43d4f6:	mov    ebp,0xc44d1509
  43d4fb:	mov    eax,0xb7bae70b
  43d500:	or     dh,BYTE PTR [ebx+0x6409e429]
  43d506:	daa    
  43d507:	or     BYTE PTR [bp+si-0x11e1],dh
  43d50c:	or     BYTE PTR [ecx+0x16],bl
  43d50f:	or     eax,0x9b0d3310
  43d514:	push   cs
  43d515:	add    ax,0xf2e
  43d519:	xchg   edx,eax
  43d51a:	std    
  43d51b:	jmp    0x43d52b
  43d51d:	int3   
  43d51e:	add    BYTE PTR [eax],al
  43d520:	add    ch,dh
  43d522:	adc    al,0xf
  43d524:	fucomi st,st(5)
  43d526:	mov    dl,0xf
  43d528:	or     eax,0x240fbbe4
  43d52d:	fcom   QWORD PTR [edi+ecx*1]
  43d530:	inc    ebx
  43d531:	aam    0xea
  43d533:	push   cs
  43d534:	pop    ebp
  43d535:	int3   
  43d536:	inc    esi
  43d537:	vmwrite eax,esp
  43d53a:	or     BYTE PTR [esi],0x0
  43d53d:	rep lods eax,DWORD PTR ds:[esi]
  43d53f:	pushf  
  43d540:	push   DWORD PTR [esi+eax*2-0x3]
  43d544:	push   ebx
  43d546:	add    DWORD PTR [eiz*2-0x40ebd4dd],edx
  43d54d:	and    eax,DWORD PTR [ecx-0x3fdc20ed]
  43d553:	or     eax,0xcf4021e
  43d558:	pop    ebx
  43d559:	add    dl,BYTE PTR [edi]
  43d55b:	or     eax,0xd310269
  43d560:	nop
  43d561:	add    ch,ch
  43d563:	or     al,0xc6
  43d565:	loop   0x43d56d
  43d567:	cmp    DWORD PTR [ebx],edx
  43d569:	dec    eax
  43d56a:	not    BYTE PTR [ebp+0x2bf96516]
  43d570:	push   ss
  43d571:	push   ss
  43d572:	stc    
  43d573:	fcom   QWORD PTR [ecx+ebx*8]
  43d576:	mul    DWORD PTR [esp+edx*1+0x14baf7ac]
  43d57d:	ja     0x43d577
  43d57f:	dec    esp
  43d580:	adc    eax,0x17a0f813
  43d585:	add    BYTE PTR [eax],al
  43d587:	add    BYTE PTR [esi+0x571813f2],al
  43d58d:	repnz xchg edx,eax
  43d58f:	push   ss
  43d590:	jle    0x43d583
  43d592:	loop   0x43d5ad
  43d594:	cmc    
  43d595:	hlt    
  43d596:	mov    eax,0xaaf50219
  43d59b:	sbb    DWORD PTR ds:0x731993f5,ebp
  43d5a1:	hlt    
  43d5a2:	pusha  
  43d5a3:	sbb    ah,BYTE PTR [esi-0xc]
  43d5a6:	dec    ebp
  43d5a7:	sbb    cl,BYTE PTR [esp+esi*8-0xba7e678]
  43d5ae:	xchg   ebp,eax
  43d5af:	sbb    DWORD PTR [ebx-0xc],ebx
  43d5b2:	xchg   ecx,eax
  43d5b3:	sbb    DWORD PTR [eax-0x43e6630c],esi
  43d5b9:	hlt    
  43d5ba:	cdq    
  43d5bb:	sbb    DWORD PTR [edi-0x6be63a0c],esp
  43d5c1:	hlt    
  43d5c2:	rcr    BYTE PTR [ecx],0x80
  43d5c5:	hlt    
  43d5c6:	lods   eax,DWORD PTR ds:[esi]
  43d5c7:	sbb    DWORD PTR [esi-0xc],ebp
  43d5ca:	in     eax,dx
  43d5cb:	sbb    dh,dh
  43d5cd:	repz fistp DWORD PTR [eax]
  43d5d0:	mov    al,0xf3
  43d5d2:	sbb    al,0x19
  43d5d4:	shl    bl,0x1
  43d5d7:	sbb    edx,ecx
  43d5d9:	repz push ebp
  43d5db:	sbb    BYTE PTR [edi+0x781836f3],cl
  43d5e1:	repz jmp FWORD PTR [ecx-0x61cf3125]
  43d5e8:	or     ebp,DWORD PTR [ebp+0xef30]
  43d5ee:	add    al,bh
  43d5f0:	out    0x37,eax
  43d5f2:	and    edi,ebp
  43d5f4:	push   ecx
  43d5f5:	cmp    ah,al
  43d5f7:	call   0xf8bd0d7f
  43d5fc:	jo     0x43d635
  43d5fe:	cmp    al,0xc9
  43d601:	aaa    
  43d602:	and    al,ch
  43d604:	(bad)  [edi]
  43d606:	inc    ebx
  43d607:	call   0xfa230d0f
  43d60c:	sbb    dh,BYTE PTR [edi]
  43d60e:	retf   0xe1f9
  43d611:	ss into 
  43d613:	jmp    0xea160d0d
  43d618:	push   edx
  43d619:	aaa    
  43d61a:	pop    ebp
  43d61b:	stc    
  43d61c:	(bad)  
  43d61d:	ss xor al,0xf9
  43d620:	test   eax,0x1feeef36
  43d625:	ss popf 
  43d627:	out    0x50,al
  43d629:	ss mov esi,edi
  43d62c:	sub    dh,BYTE PTR [esi]
  43d62e:	pop    ebx
  43d62f:	stc    
  43d630:	xor    DWORD PTR ds:0x357de994,0xffffffb4
  43d637:	jmp    0xfa010c14
  43d63c:	test   eax,0xbff9be35
  43d641:	xor    eax,0x3514e9e6
  43d646:	shr    cl,cl
  43d648:	sbb    BYTE PTR ds:0x34f0f9f5,dh
  43d64e:	cmp    bh,al
  43d650:	push   ecx
  43d651:	xor    eax,0x3e
  43d656:	call   0xe8bd0b80
  43d65b:	xchg   ebp,eax
  43d65c:	xor    al,0x6e
  43d65e:	clc    
  43d65f:	push   0xe050034
  43d664:	into   
  43d665:	cmp    edx,DWORD PTR [ecx-0x2bc41ff2]
  43d66b:	push   ss
  43d66c:	ins    DWORD PTR es:[edi],dx
  43d66d:	cmp    al,0x21
  43d66f:	or     bh,BYTE PTR [edi+0x3c]
  43d672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d673:	push   ss
  43d674:	ret    
  43d675:	cmp    al,0xd9
  43d677:	push   ss
  43d678:	add    BYTE PTR ds:0x3d0d1704,bh
  43d67e:	cmc    
  43d67f:	pop    ss
  43d680:	xor    eax,0x7817213d
  43d685:	cmp    eax,0x3d831797
  43d68a:	fwait
  43d68b:	pop    ss
  43d68c:	mov    ds:0xcc186b3d,eax
  43d691:	cmp    eax,0x3ddf182b
  43d696:	out    dx,al
  43d697:	pop    ss
  43d698:	or     DWORD PTR [esi],edi
  43d69a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d69b:	or     ebp,DWORD PTR [esi+edi*1]
  43d69e:	xchg   BYTE PTR [ebx],cl
  43d6a0:	arpl   WORD PTR [esi],di
  43d6a2:	daa    
  43d6a3:	or     DWORD PTR [esi],eax
  43d6a5:	aas    
  43d6a6:	push   ss
  43d6a7:	or     al,bl
  43d6a9:	aas    
  43d6aa:	fisttp DWORD PTR [ecx]
  43d6ac:	iret   
  43d6ad:	aas    
  43d6ae:	lahf   
  43d6af:	or     BYTE PTR [eax],al
  43d6b1:	add    BYTE PTR [edx+0x4afff895],bl
  43d6b7:	add    eax,0x0
  43d6bc:	add    BYTE PTR [ebx],ch
  43d6be:	adc    eax,DWORD PTR [edi]
  43d6c0:	xor    esi,edx
  43d6c2:	adc    ecx,DWORD PTR [ecx+0x31]
  43d6c5:	lds    edx,FWORD PTR [ebx]
  43d6c7:	xor    DWORD PTR [ecx],0x31a81326
  43d6cd:	not    BYTE PTR [edx]
  43d6cf:	mov    bl,0x31
  43d6d1:	xchg   ebp,eax
  43d6d2:	adc    cl,dh
  43d6d4:	xor    DWORD PTR [edi+0x12],edi
  43d6d7:	or     DWORD PTR [edx],esi
  43d6d9:	pop    esi
  43d6da:	pop    ss
  43d6db:	sbb    eax,0xedaf332
  43d6e0:	cmp    DWORD PTR [ecx],eax
  43d6e2:	pop    ds
  43d6e3:	push   cs
  43d6e4:	test   BYTE PTR [ecx],al
  43d6e6:	movzx  eax,WORD PTR es:[ecx]
  43d6ea:	bound  ecx,QWORD PTR [esi]
  43d6ec:	fadd   QWORD PTR [ecx]
  43d6ee:	ror    DWORD PTR ds:0xdf3e05e,cl
  43d6f4:	das    
  43d6f5:	fistp  WORD PTR [eax]
  43d6f7:	sbb    BYTE PTR [ecx-0x19],al
  43d6fa:	push   0x10
  43d6fc:	jo     0x43d6dd
  43d6fe:	cdq    
  43d6ff:	adc    bl,dl
  43d701:	mov    DWORD PTR [edx+0x11],0x17ddbe03
  43d708:	data16 (bad) 
  43d70a:	jae    0x43d723
  43d70c:	xchg   ebx,eax
  43d70d:	mov    esi,0x26c91853
  43d712:	adc    DWORD PTR [eax],ebx
  43d714:	call   FWORD PTR [esi]
  43d716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d717:	adc    al,BYTE PTR [eax+0x25]
  43d71a:	(bad)  
  43d71b:	adc    ah,BYTE PTR [edi+0x1d]
  43d71e:	adc    DWORD PTR [edx],0x9b
  43d724:	add    eax,0xfde312f7
  43d729:	adc    DWORD PTR [ebx],edx
  43d72b:	sub    DWORD PTR [ebx+esi*2],eax
  43d72e:	adc    DWORD PTR [esp+edi*8-0x75],ecx
  43d732:	adc    DWORD PTR [edx-0x1c],ebp
  43d735:	dec    edx
  43d736:	adc    ch,BYTE PTR [eax-0x7ced9c24]
  43d73c:	fild   DWORD PTR [eax+0x22da490b]
  43d742:	add    eax,0x611caef
  43d747:	inc    ebx
  43d748:	leave  
  43d749:	hlt    
  43d74a:	add    eax,0x575b9bf
  43d74f:	fdivr  QWORD PTR [ecx+0x28990705]
  43d755:	sub    al,BYTE PTR [edi]
  43d757:	stc    
  43d758:	sub    BYTE PTR [edi],al
  43d75a:	lds    ecx,FWORD PTR [edi]
  43d75c:	mov    dl,0xfa
  43d75e:	ss adc dl,al
  43d761:	cli    
  43d762:	xor    edx,DWORD PTR [eax]
  43d764:	(bad)  
  43d766:	adc    BYTE PTR [eax],dl
  43d768:	leave  
  43d769:	cli    
  43d76a:	pop    esp
  43d76b:	adc    BYTE PTR [ebx+edi*8-0x61cef81],dl
  43d772:	mov    dl,0xe
  43d774:	js     0x43d770
  43d776:	push   ecx
  43d777:	push   cs
  43d778:	dec    esp
  43d779:	stc    
  43d77a:	out    0xc3,al
  43d77c:	sbb    al,0xb8
  43d77e:	mov    dh,0x3
  43d780:	repz push es
  43d782:	into   
  43d783:	adc    ebx,DWORD PTR [esi-0x9]
  43d786:	pop    ss
  43d787:	adc    eax,DWORD PTR [eax]
  43d789:	add    BYTE PTR [eax],al
  43d78b:	cdq    
  43d78c:	cmc    
  43d78d:	jne    0x43d7a2
  43d78f:	test   eax,0x4411cef4
  43d794:	cmc    
  43d795:	jns    0x43d7a9
  43d797:	push   ds
  43d798:	hlt    
  43d799:	mov    ch,0x10
  43d79b:	sbb    dh,bl
  43d79d:	sbb    BYTE PTR cs:[edx],cl
  43d7a0:	repnz outs dx,BYTE PTR ds:[esi]
  43d7a2:	pop    ss
  43d7a3:	fdivr  st(1),st
  43d7a5:	rcl    DWORD PTR ds:0x14e6f08a,1
  43d7ab:	ins    BYTE PTR es:[edi],dx
  43d7ac:	(bad)  
  43d7ad:	pop    esi
  43d7ae:	or     al,0x91
  43d7b0:	std    
  43d7b1:	sbb    DWORD PTR [ebx],ecx
  43d7b3:	mov    edx,0x9c0945fd
  43d7b8:	cli    
  43d7b9:	scas   eax,DWORD PTR es:[edi]
  43d7ba:	push   cs
  43d7bb:	dec    edi
  43d7bc:	stc    
  43d7bd:	sbb    cl,BYTE PTR [esi]
  43d7bf:	or     ecx,edi
  43d7c1:	ror    BYTE PTR ds:0xd4ff831,cl
  43d7c7:	pop    ebx
  43d7c8:	imul   DWORD PTR [eax-0x18f90cf4]
  43d7ce:	mov    bl,0x7c
  43d7d0:	mov    bh,0x4a
  43d7d2:	add    al,0xf3
  43d7d4:	push   es
  43d7d5:	add    ah,ah
  43d7d7:	add    BYTE PTR [ecx+0x2f],ah
  43d7da:	les    eax,FWORD PTR [eax]
  43d7dc:	xor    ch,BYTE PTR [edi]
  43d7de:	pop    ecx
  43d7df:	add    ebp,eax
  43d7e1:	cs clc 
  43d7e3:	add    bl,BYTE PTR [eax]
  43d7e5:	cs and esp,ecx
  43d7e8:	dec    ecx
  43d7e9:	cs xor esp,ecx
  43d7ec:	es cs sti 
  43d7ef:	add    BYTE PTR [eax],al
  43d7f1:	add    dl,ah
  43d7f3:	das    
  43d7f4:	cs push 0x532d85e2
  43d7fa:	add    ch,BYTE PTR [ebx+0x2d]
  43d7fd:	jge    0x43d801
  43d7ff:	jecxz  0x43d82d
  43d801:	and    DWORD PTR [edx],eax
  43d803:	dec    esp
  43d804:	sub    eax,0x2c7a03a3
  43d809:	mov    edx,0x303439e4
  43d80e:	fadd   QWORD PTR ds:0x9e53933
  43d814:	xor    ebp,edi
  43d816:	jmp    0xf9f70f62
  43d81b:	jg     0x43d853
  43d81d:	outs   dx,DWORD PTR ds:[esi]
  43d81e:	stc    
  43d81f:	lds    esi,FWORD PTR [esi]
  43d821:	daa    
  43d822:	jmp    0xeac40e84
  43d827:	int3   
  43d828:	xor    eax,0x355cfa1e
  43d82d:	mov    ?,ebx
  43d82f:	imul   esi,DWORD PTR [edx+edx*1],0xffffffeb
  43d833:	adc    DWORD PTR [edx+edi*2],edi
  43d836:	in     al,0x79
  43d838:	cmp    edi,DWORD PTR [ecx-0x16c6e102]
  43d83e:	nop
  43d83f:	mov    dh,0xf8
  43d841:	cmp    edi,esi
  43d843:	push   es
  43d844:	add    BYTE PTR [edi+edi*8+0x1a],dl
  43d848:	das    
  43d849:	mov    ds:0x592d7ee6,eax
  43d84e:	fmul   QWORD PTR [edx+0x1dfb002c]
  43d854:	mov    edx,0x33
  43d859:	adc    DWORD PTR [edi],edx
  43d85b:	mov    edx,0x2f18f034
  43d860:	ss mov cl,0x19
  43d863:	sbb    edi,DWORD PTR [eax]
  43d865:	and    al,0x3
  43d867:	push   ebx
  43d868:	cmp    dl,bl
  43d86a:	add    dl,dl
  43d86c:	cmp    dl,ah
  43d86e:	add    ebx,DWORD PTR [edx+0x7b047d39]
  43d874:	cmp    edx,esp
  43d876:	add    eax,0xfeca3bbd
  43d87b:	inc    esp
  43d87c:	cmp    eax,0x3e820040
  43d881:	ret    
  43d882:	add    BYTE PTR [edx+0x17e3e],ah
  43d888:	aas    
  43d889:	dec    ebp
  43d88a:	add    DWORD PTR [edx+0x3f],edx
  43d88d:	add    DWORD PTR ds:[eax],eax
  43d890:	add    BYTE PTR [edx],bl
  43d892:	(bad)  
  43d894:	call   FWORD PTR [esi+0xa]
  43d897:	add    BYTE PTR [eax],al
  43d899:	dec    esi
  43d89a:	sbb    dl,BYTE PTR [eax+0x31]
  43d89d:	jge    0x43d8ba
  43d89f:	mov    ch,0x31
  43d8a1:	or     bl,BYTE PTR [eax+eax*2]
  43d8a4:	xor    ah,BYTE PTR [esi+0x1d]
  43d8a7:	(bad)  
  43d8a8:	xor    edx,DWORD PTR [esi+ebx*1]
  43d8ab:	fidiv  WORD PTR [ebx]
  43d8ad:	loop   0x43d8cc
  43d8af:	add    al,0x34
  43d8b1:	rol    DWORD PTR ds:0x1851351f,1
  43d8b7:	jl     0x43d8ef
  43d8b9:	dec    ebx
  43d8ba:	sbb    DWORD PTR [edi+0x36],ebp
  43d8c0:	out    0x18,al
  43d8c2:	(bad)  
  43d8c3:	aaa    
  43d8c4:	push   esp
  43d8c5:	add    DWORD PTR [eax+0x38],edi
  43d8c8:	pop    ss
  43d8c9:	add    ecx,DWORD PTR [ebx+0x39]
  43d8cc:	ds add al,0x7a
  43d8cf:	cmp    ebx,esi
  43d8d1:	or     DWORD PTR [ecx],0xb7c8fc
  43d8d7:	inc    edx
  43d8d8:	mov    edi,0xb640013b
  43d8dd:	addr16 pop es
  43d8df:	icebp  
  43d8e0:	cs into 
  43d8e2:	push   es
  43d8e3:	push   edi
  43d8e4:	and    al,0x27
  43d8e6:	push   es
  43d8e7:	add    bl,dh
  43d8e9:	lahf   
  43d8ea:	cld    
  43d8eb:	(bad)  
  43d8ec:	push   esp
  43d8ed:	out    0x3,eax
  43d8ef:	add    bl,dh
  43d8f1:	aam    0xc
  43d8f3:	push   edi
  43d8f4:	add    eax,DWORD PTR [edx+0x14]
  43d8f7:	das    
  43d8f8:	add    ebp,esp
  43d8fa:	adc    DWORD PTR [ecx+eax*1+0x67],ecx
  43d8fe:	adc    bh,BYTE PTR [edi-0x20]
  43d901:	lahf   
  43d902:	or     eax,0xd08dc3e
  43d907:	xchg   ecx,eax
  43d908:	in     al,0x3f
  43d90a:	push   cs
  43d90b:	pop    ds
  43d90c:	fld    TBYTE PTR [esi+0x4]
  43d90f:	je     0x43d8dc
  43d911:	sub    al,BYTE PTR ds:0x523cb93
  43d917:	sahf   
  43d918:	mov    ebx,0xbbb00499
  43d91d:	cmp    eax,0xe22bbc05
  43d922:	add    al,0xc6
  43d924:	add    BYTE PTR [eax],al
  43d926:	add    BYTE PTR [ebx],ch
  43d928:	adc    DWORD PTR ds:0x5001bd7,eax
  43d92e:	out    0x1b,eax
  43d930:	add    al,0x5
  43d932:	sbb    BYTE PTR [edx],cl
  43d934:	mov    esi,0x730a210b
  43d939:	or     esi,DWORD PTR [ebx]
  43d93b:	cli    
  43d93c:	enter  0x3f0b,0xfa
  43d940:	ins    BYTE PTR es:[edi],dx
  43d941:	or     ecx,DWORD PTR [ecx-0x16]
  43d944:	xchg   edx,eax
  43d945:	or     ebx,DWORD PTR [edx-0x16]
  43d948:	mov    DWORD PTR [ebx],ecx
  43d94a:	imul   ebx,edx,0x6
  43d94d:	pop    ebx
  43d94e:	or     ebx,DWORD PTR [esi+ebp*8]
  43d951:	mov    dh,0xb
  43d953:	shl    eax,1
  43d955:	adc    cl,BYTE PTR [esi]
  43d957:	and    cl,dh
  43d959:	lods   eax,DWORD PTR ds:[esi]
  43d95a:	push   cs
  43d95b:	mov    ecx,0x150d1eef
  43d960:	lock fwait
  43d962:	or     eax,0xf3e706f3
  43d967:	gs mov ah,0x6
  43d96a:	add    al,0xf3
  43d96c:	push   es
  43d96d:	dec    esi
  43d96e:	or     ecx,DWORD PTR [eax+esi*8-0xdf8f934]
  43d975:	cld    
  43d976:	push   es
  43d977:	jae    0x43d96e
  43d979:	inc    esi
  43d97a:	or     bh,BYTE PTR [edi-0xb]
  43d97d:	stos   DWORD PTR es:[edi],eax
  43d97e:	or     al,BYTE PTR [ebp-0xb]
  43d981:	add    cl,BYTE PTR [ecx]
  43d983:	xor    ah,0xe6
  43d986:	and    esp,DWORD PTR [esp+esi*4]
  43d989:	or     al,BYTE PTR [ebx]
  43d98b:	add    BYTE PTR [eax],al
  43d98d:	add    bl,dh
  43d98f:	push   es
  43d990:	pushf  
  43d991:	adc    al,0xa6
  43d993:	cmc    
  43d994:	sahf   
  43d995:	adc    esp,DWORD PTR [edi]
  43d997:	idiv   BYTE PTR [ebp+0x5bf87715]
  43d99d:	adc    ch,BYTE PTR [esi-0x3]
  43d9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d9a1:	adc    BYTE PTR [edi],al
  43d9a3:	cld    
  43d9a4:	mov    ds:0xbbef460b,eax
  43d9a9:	or     edi,DWORD PTR [esi-0x12]
  43d9ac:	jl     0x43d9ba
  43d9ae:	(bad)  
  43d9af:	out    dx,al
  43d9b0:	and    ecx,DWORD PTR [ebx+edi*8]
  43d9b3:	in     eax,dx
  43d9b4:	xchg   BYTE PTR [edx],cl
  43d9b6:	push   ebp
  43d9b7:	out    dx,al
  43d9b8:	or     BYTE PTR [edx],0x40
  43d9bb:	out    dx,al
  43d9bc:	lea    ecx,[edx]
  43d9be:	cmp    ch,dh
  43d9c0:	push   0xb
  43d9c2:	ins    BYTE PTR es:[edi],dx
  43d9c3:	in     eax,dx
  43d9c4:	push   0xffed7e0b
  43d9c9:	push   eax
  43d9ca:	clc    
  43d9cb:	(bad)  
  43d9cc:	ss dec ebx
  43d9ce:	call   0xe9d91038
  43d9d3:	arpl   WORD PTR [esi],si
  43d9d5:	xchg   edi,eax
  43d9d6:	stc    
  43d9d7:	jns    0x43da0f
  43d9d9:	test   eax,0xa336c7f9
  43d9de:	jmp    0xe9e110a0
  43d9e3:	(bad)  [esi]
  43d9e5:	lahf   
  43d9e6:	stc    
  43d9e7:	shl    DWORD PTR [esi],1
  43d9e9:	sar    ecx,0x9f
  43d9ec:	ss mov ebx,0xa536b5e9
  43d9f2:	add    BYTE PTR [eax],al
  43d9f4:	add    cl,ch
  43d9f6:	mov    bl,0x36
  43d9f8:	out    0xfe,eax
  43d9fa:	or     DWORD PTR [esi],esi
  43d9fc:	stc    
  43d9fd:	not    BYTE PTR [edi]
  43d9ff:	ss repz out dx,al
  43da02:	or     eax,0xebe6cd36
  43da07:	xor    eax,0x35e1fecf
  43da0c:	mov    cl,0xf6
  43da0e:	out    dx,eax
  43da0f:	xor    eax,0x3645ed2b
  43da14:	mov    ch,0xe6
  43da16:	inc    ebx
  43da17:	ss mov bh,0xfe
  43da1a:	pop    ecx
  43da1b:	ss leave 
  43da1d:	mul    BYTE PTR [edi]
  43da1f:	ss ret 
  43da21:	out    dx,al
  43da22:	sbb    eax,0x3be6bd36
  43da27:	ss mov edi,0x613633fe
  43da2d:	idiv   BYTE PTR [ebp+0x35]
  43da30:	pop    ebx
  43da31:	out    dx,al
  43da32:	xchg   edi,eax
  43da33:	xor    eax,0x3591e685
  43da38:	inc    edi
  43da39:	(bad)  
  43da3a:	imul   esi,DWORD PTR ds:0x3575f659,0x53
  43da41:	out    dx,al
  43da42:	outs   dx,DWORD PTR ds:[esi]
  43da43:	xor    eax,0xc1040600
  43da48:	cmp    bl,ah
  43da4a:	add    ecx,ebx
  43da4c:	cmp    al,BYTE PTR [edx]
  43da4e:	add    al,0xd5
  43da50:	cmp    ch,al
  43da52:	add    ebx,edi
  43da54:	cmp    bh,BYTE PTR [esi+0x3ae8fd]
  43da5a:	add    BYTE PTR [eax],al
  43da5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da5d:	std    
  43da5e:	repnz cmp bl,BYTE PTR [edx-0x6fc50303]
  43da65:	std    
  43da66:	push   es
  43da67:	cmp    edx,DWORD PTR [esi+0x4c3b10fd]
  43da6d:	std    
  43da6e:	sbb    bh,BYTE PTR [ebx]
  43da70:	repnz std 
  43da72:	and    al,0x3b
  43da74:	pop    eax
  43da75:	std    
  43da76:	cmp    ecx,DWORD PTR cs:[esi-0x3]
  43da7a:	cmp    BYTE PTR [ebx],bh
  43da7c:	adc    al,0xfe
  43da7e:	inc    edx
  43da7f:	cmp    ecx,DWORD PTR [edx]
  43da81:	dec    BYTE PTR [ebx+edi*1+0x0]
  43da85:	(bad)  
  43da86:	push   esi
  43da87:	cmp    esp,esi
  43da89:	std    
  43da8a:	pusha  
  43da8b:	cmp    edi,esp
  43da8d:	std    
  43da8e:	push   0x3b
  43da90:	and    bh,ch
  43da92:	je     0x43dacf
  43da94:	mov    ch,bh
  43da96:	jle    0x43dad3
  43da98:	sahf   
  43da99:	std    
  43da9a:	mov    BYTE PTR [ebx],bh
  43da9c:	test   ch,bh
  43da9e:	xchg   edx,eax
  43da9f:	cmp    edi,DWORD PTR [edx-0x2]
  43daa2:	pushf  
  43daa3:	cmp    edi,DWORD PTR [esi-0x3]
  43daa6:	test   al,0x3b
  43daa8:	ins    DWORD PTR es:[edi],dx
  43daa9:	inc    bl
  43daab:	cmp    ebx,DWORD PTR [esi]
  43daad:	dec    cl
  43daaf:	cmp    eax,DWORD PTR [ebx]
  43dab1:	(bad)  
  43dab2:	(bad)  
  43dab3:	cmp    esi,DWORD PTR [esi+edi*8]
  43dab6:	jmp    0x43daf3
  43dab8:	stc    
  43dab9:	std    
  43daba:	lock cmp ebx,eax
  43dabd:	or     edi,edi
  43dabf:	cmp    eax,DWORD PTR [eax]
  43dac1:	add    BYTE PTR [eax],al
  43dac3:	repz mov bh,0x0
  43dac6:	and    bh,bh
  43dac8:	leave  
  43dac9:	add    BYTE PTR [edi+esi*8],ch
  43dacc:	ins    DWORD PTR es:[edi],dx
  43dacd:	add    BYTE PTR [edi+0x590840ef],dl
  43dad3:	in     eax,0x81
  43dad5:	add    ah,BYTE PTR [ebp+0x40019ddd]
  43dadb:	aam    0xf5
  43dadd:	add    BYTE PTR [ebx-0x34],ah
  43dae0:	cmp    DWORD PTR [edx],eax
  43dae2:	call   0x99bc:0xaa0181c4
  43dae9:	add    DWORD PTR [edx+0x161b4],edi
  43daef:	repz lahf 
  43daf1:	or     al,0xff
  43daf3:	fs fwait
  43daf5:	cld    
  43daf6:	push   ebx
  43daf8:	sbb    dl,BYTE PTR [edx*2+0x5712ed23]
  43daff:	add    al,BYTE PTR [edx]
  43db01:	adc    edx,DWORD PTR [ecx+eax*1]
  43db04:	sti    
  43db05:	or     eax,0xe1c015d
  43db0a:	test   BYTE PTR [ecx],al
  43db0c:	sub    BYTE PTR [edi],cl
  43db0e:	call   0xdfe1:0xe70f55e1
  43db15:	or     al,0x41
  43db17:	loopne 0x43db5c
  43db19:	push   cs
  43db1a:	popa   
  43db1b:	fbstp  TBYTE PTR [ecx+ecx*1]
  43db1e:	pop    edi
  43db20:	xor    cl,BYTE PTR [ebx]
  43db22:	lods   al,BYTE PTR ds:[esi]
  43db23:	mov    ebp,0xb80a8d
  43db28:	add    BYTE PTR [eax],al
  43db2a:	(bad)
  43db2d:	enter  0xf9bd,0xa
  43db31:	loopne 0x43db58
  43db33:	dec    edx
  43db34:	or     esp,esi
  43db36:	sbb    eax,0x24380aec
  43db3b:	mov    al,ds:0x71c4109
  43db40:	mov    cl,0xe
  43db42:	daa    
  43db43:	clc    
  43db44:	or     BYTE PTR [esi],0x4d
  43db47:	clc    
  43db48:	xchg   esi,eax
  43db49:	push   cs
  43db4a:	cmp    edi,eax
  43db4c:	push   0x3f8850e
  43db51:	push   cs
  43db52:	jmp    0x43db42
  43db54:	xchg   ecx,eax
  43db55:	or     ecx,DWORD PTR [edi+ebp*8]
  43db58:	jb     0x43db65
  43db5a:	xchg   edi,ebp
  43db5c:	dec    ebx
  43db5d:	or     ecx,DWORD PTR [edx-0x11]
  43db60:	les    ecx,FWORD PTR [eax+edx*1]
  43db63:	out    dx,al
  43db64:	pop    esi
  43db65:	or     ebx,DWORD PTR [esi-0x12]
  43db68:	or     BYTE PTR [ebx],0xb2
  43db6b:	out    dx,al
  43db6c:	icebp  
  43db6d:	or     esp,edx
  43db6f:	in     al,dx
  43db70:	add    ecx,DWORD PTR [edx]
  43db72:	loopne 0x43db60
  43db74:	stos   BYTE PTR es:[edi],al
  43db75:	or     al,BYTE PTR [ebp+ebp*8-0x3f]
  43db79:	or     bl,BYTE PTR [eax-0x13]
  43db7c:	cmp    BYTE PTR [ecx],cl
  43db7e:	xchg   edi,eax
  43db7f:	in     al,dx
  43db80:	mov    dl,0x9
  43db82:	cmc    
  43db83:	repnz test DWORD PTR [edi],0x7bcf2dc
  43db8a:	mov    bh,0xf2
  43db8c:	adc    eax,0x8
  43db91:	xor    esi,ebx
  43db93:	or     DWORD PTR [eax],0x7
  43db96:	repnz sub eax,DWORD PTR [edi]
  43db99:	jns    0x43db8d
  43db9b:	inc    ecx
  43db9c:	pop    es
  43db9d:	sub    dh,dl
  43db9f:	fadd   DWORD PTR ds:0x691f089
  43dba5:	daa    
  43dba6:	icebp  
  43dba7:	dec    edi
  43dba8:	push   es
  43dba9:	adc    eax,0xfa064ff1
  43dbae:	lock test DWORD PTR [eax+eiz*8],0xd04ddef
  43dbb6:	lock test DWORD PTR [ecx+eax*2],0xf7bbfff0
  43dbbe:	xor    bh,BYTE PTR [ecx]
  43dbc0:	push   0xffffffee
  43dbc2:	xchg   DWORD PTR [eax],edi
  43dbc4:	xor    esi,0xffffff8c
  43dbc7:	cmp    BYTE PTR [ebp-0x12],al
  43dbca:	bound  edi,QWORD PTR [eax]
  43dbcc:	push   edi
  43dbcd:	not    dh
  43dbcf:	cmp    BYTE PTR [ecx],dl
  43dbd1:	out    dx,al
  43dbd2:	push   es
  43dbd3:	add    cl,ch
  43dbd5:	xor    BYTE PTR [eax+0x6ef65f8],dh
  43dbdb:	add    BYTE PTR [edi+0x3a2f8a00],dh
  43dbe1:	dec    edx
  43dbe3:	das    
  43dbe4:	mov    ah,0xe0
  43dbe6:	fisubr DWORD PTR [edi]
  43dbe8:	ret    
  43dbe9:	loopne 0x43db8d
  43dbeb:	das    
  43dbec:	fchs   
  43dbee:	mov    ah,0x2f
  43dbf0:	iret   
  43dbf1:	loopne 0x43dc02
  43dbf3:	das    
  43dbf4:	adc    eax,DWORD PTR [eax]
  43dbf6:	add    BYTE PTR [eax],al
  43dbf8:	add    dl,ah
  43dbfa:	cs sbb eax,0x272ecf00
  43dc00:	add    DWORD PTR [eax],esp
  43dc02:	cs push edi
  43dc04:	add    cl,dh
  43dc06:	sub    eax,0x2cf5e294
  43dc0b:	adc    edx,esp
  43dc0d:	sub    eax,0x37e3672d
  43dc12:	xor    edi,DWORD PTR [ecx-0x77cd2a1b]
  43dc18:	std    
  43dc19:	clc    
  43dc1a:	xor    DWORD PTR [ecx],edx
  43dc1c:	cmc    
  43dc1d:	pop    ds
  43dc1e:	xor    dh,cl
  43dc20:	out    dx,al
  43dc21:	sub    al,0x32
  43dc23:	pop    ecx
  43dc24:	out    0x95,al
  43dc26:	xor    DWORD PTR [esi-0x6dce9502],eax
  43dc2c:	neg    BYTE PTR [edi+0x31]
  43dc2f:	sub    esi,ebp
  43dc31:	shl    BYTE PTR [ecx],0x51
  43dc34:	out    0xb0,al
  43dc36:	xor    DWORD PTR [eax],eax
  43dc38:	jecxz  0x43dc35
  43dc3a:	push   es
  43dc3b:	aaa    
  43dc3c:	sti    
  43dc3d:	sti    
  43dc3e:	daa    
  43dc3f:	aaa    
  43dc40:	(bad)  
  43dc42:	ins    BYTE PTR es:[edi],dx
  43dc43:	aaa    
  43dc44:	ds sti 
  43dc46:	shl    DWORD PTR [edi],0xf
  43dc49:	sti    
  43dc4a:	cmp    BYTE PTR [eax],bh
  43dc4c:	dec    eax
  43dc4d:	add    dh,dh
  43dc4f:	cmp    bh,dl
  43dc51:	add    DWORD PTR [ebx+0x4ffff23a],ebx
  43dc57:	cmp    al,0xd9
  43dc59:	add    eax,0x3f69
  43dc5e:	add    BYTE PTR [edx+0x36fff8fa],bl
  43dc64:	or     al,BYTE PTR [eax]
  43dc66:	add    BYTE PTR [ebp+0x1a],cl
  43dc69:	ins    DWORD PTR es:[edi],dx
  43dc6a:	xor    BYTE PTR [edi-0x4d],bh
  43dc6d:	out    dx,al
  43dc6e:	xor    BYTE PTR [ebx+0x183155b3],cl
  43dc74:	mov    ah,0x81
  43dc76:	xor    DWORD PTR [edi-0x4c],ebp
  43dc79:	(bad)  
  43dc7a:	xor    DWORD PTR [ebp+0x5f3224b4],ebp
  43dc80:	mov    ah,0x3a
  43dc82:	xor    dl,BYTE PTR [ebx]
  43dc84:	mov    ch,0x4e
  43dc86:	xor    bl,BYTE PTR ds:0xaa327ab5
  43dc8c:	mov    ah,0xcd
  43dc8e:	xor    ah,BYTE PTR [ebx-0x4b]
  43dc91:	call   0x1f93dc8
  43dc96:	xor    esi,DWORD PTR [ecx]
  43dc98:	mov    ch,0x3c
  43dc9a:	xor    ebp,DWORD PTR [esi]
  43dc9c:	mov    ch,0x99
  43dc9e:	xor    esp,edi
  43dca0:	mov    ch,0xee
  43dca2:	xor    edx,ecx
  43dca4:	scas   al,BYTE PTR es:[edi]
  43dca5:	jae    0x43dcdb
  43dca7:	mov    esp,0xc834b5ae
  43dcac:	scas   al,BYTE PTR es:[edi]
  43dcad:	fnsave [esi*1-0xcca9251]
  43dcb4:	sbb    dh,bh
  43dcb6:	mov    DWORD PTR [esi+0x26a0f67e],edi
  43dcbc:	aas    
  43dcbd:	div    ecx
  43dcbf:	push   ds
  43dcc0:	shl    esi,1
  43dcc2:	pusha  
  43dcc3:	add    BYTE PTR [eax],al
  43dcc5:	add    BYTE PTR ds:0x1dd1f61b,ah
  43dccb:	std    
  43dccc:	cmc    
  43dccd:	cli    
  43dcce:	add    eax,0xfc65f5bb
  43dcd3:	and    eax,0xf04d2f5
  43dcd8:	cmc    
  43dcd9:	cmp    edi,edx
  43dcdb:	xchg   ecx,eax
  43dcdc:	sti    
  43dcdd:	jl     0x43dcc9
  43dcdf:	cmp    edi,ebx
  43dce1:	mov    bh,0xea
  43dce3:	(bad)  
  43dce5:	fcmovu st,st(2)
  43dce7:	push   0xfffffffa
  43dce9:	data16 fnstcw WORD PTR [edi]
  43dcec:	cli    
  43dced:	stos   DWORD PTR es:[edi],eax
  43dcee:	leave  
  43dcef:	mov    edx,?
  43dcf1:	into   
  43dcf2:	leave  
  43dcf3:	mov    edi,0x51b806fa
  43dcf8:	stc    
  43dcf9:	stos   DWORD PTR es:[edi],eax
  43dcfa:	mov    eax,0x2f0bf971
  43dcff:	out    dx,al
  43dd00:	jmp    FWORD PTR [edx+0x30ffd127]
  43dd06:	push   ds
  43dd07:	cmp    edi,0xff561576
  43dd0d:	int    0xc
  43dd0f:	mov    al,ds:0xc344ff1c
  43dd14:	cld    
  43dd15:	push   ebx
  43dd17:	ret    0x8bec
  43dd1a:	add    edx,DWORD PTR [esi]
  43dd1c:	repz jp 0x43dd01
  43dd1f:	and    dh,ah
  43dd21:	adc    al,0xe1
  43dd23:	push   0xfffffff1
  43dd25:	cwde   
  43dd26:	loopne 0x43dd91
  43dd28:	lock and al,0x0
  43dd2b:	add    BYTE PTR [eax],al
  43dd2d:	fmulp  st(5),st
  43dd2f:	idiv   BYTE PTR [eax-0x3c]
  43dd32:	push   es
  43dd33:	cmc    
  43dd34:	sti    
  43dd35:	cmp    al,0xf0
  43dd37:	out    0x33,al
  43dd39:	cld    
  43dd3a:	lods   al,BYTE PTR ds:[esi]
  43dd3b:	or     al,BYTE PTR [ebx+esi*8]
  43dd3e:	push   es
  43dd3f:	fdivrp st(4),st
  43dd41:	(bad)  
  43dd42:	cmc    
  43dd43:	icebp  
  43dd44:	cmc    
  43dd45:	add    bh,cl
  43dd47:	scas   eax,DWORD PTR es:[edi]
  43dd48:	imul   BYTE PTR [eax+edi*8]
  43dd4b:	inc    esi
  43dd4c:	clc    
  43dd4d:	shl    edx,cl
  43dd4f:	xchg   esi,eax
  43dd50:	sti    
  43dd51:	and    ebp,edi
  43dd53:	jb     0x43dd50
  43dd55:	out    dx,eax
  43dd56:	jmp    0x83e7:0x6f30240
  43dd5d:	mov    ch,0xac
  43dd5f:	mov    esi,0xe806f304
  43dd64:	repz mov esi,edi
  43dd67:	daa    
  43dd68:	repz pushf 
  43dd6a:	div    DWORD PTR [ebx+0x20f61af4]
  43dd70:	hlt    
  43dd71:	idiv   al
  43dd73:	xor    esi,esi
  43dd75:	je     0x43dd70
  43dd77:	(bad)  
  43dd78:	hlt    
  43dd79:	dec    edx
  43dd7a:	clc    
  43dd7b:	pop    ebp
  43dd7c:	clc    
  43dd7d:	dec    eax
  43dd7e:	repz scas al,BYTE PTR es:[edi]
  43dd80:	clc    
  43dd81:	sbb    eax,0x6ff735f2
  43dd86:	repnz mov edi,esi
  43dd89:	in     eax,dx
  43dd8a:	lock std 
  43dd8c:	cld    
  43dd8d:	or     esi,eax
  43dd8f:	cmc    
  43dd90:	cld    
  43dd91:	add    BYTE PTR [eax],al
  43dd93:	add    BYTE PTR [ebx],al
  43dd95:	lock (bad) 
  43dd98:	or     esi,eax
  43dd9a:	and    eax,0x1defb3fd
  43dd9f:	std    
  43dda0:	stos   DWORD PTR es:[edi],eax
  43dda1:	out    dx,eax
  43dda2:	xor    eax,0x1defc3fd
  43dda7:	std    
  43dda8:	retf   
  43dda9:	out    dx,eax
  43ddaa:	add    eax,0xffef93fd
  43ddaf:	add    DWORD PTR [esi],edx
  43ddb1:	pop    ds
  43ddb2:	xor    eax,0x35370ffa
  43ddb7:	loop   0x43ddc0
  43ddb9:	das    
  43ddba:	xor    eax,0x3486fe6a
  43ddbf:	(bad)  
  43ddc0:	idiv   BYTE PTR [esi+0x34]
  43ddc3:	jp     0x43ddb3
  43ddc5:	xchg   esi,eax
  43ddc6:	xor    al,0x62
  43ddc8:	out    0x8e,al
  43ddca:	xor    al,0x8a
  43ddcc:	fisub  WORD PTR [esi+0x34]
  43ddcf:	adc    dh,0x5e
  43ddd2:	xor    al,0x7a
  43ddd4:	into   
  43ddd5:	jbe    0x43de0b
  43ddd7:	(bad)  
  43ddd8:	(bad)  
  43ddd9:	outs   dx,BYTE PTR ds:[esi]
  43ddda:	xor    al,0x2a
  43dddc:	mov    esi,0xb62234c6
  43dde1:	mov    esi,0xd6ae3a34
  43dde6:	xor    al,0x22
  43dde8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dde9:	into   
  43ddea:	xor    al,0xa
  43ddec:	sahf   
  43dded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ddee:	xor    al,0x2
  43ddf0:	xchg   esi,eax
  43ddf1:	sahf   
  43ddf2:	xor    al,0xfa
  43ddf4:	(bad)  
  43ddf5:	mov    dh,0x34
  43ddf7:	loop   0x43ddf9
  43ddf9:	add    BYTE PTR [eax],al
  43ddfb:	xchg   DWORD PTR [esi+0x67cea34],ebp
  43de01:	cmp    al,0xe2
  43de03:	je     0x43de03
  43de05:	cmp    edi,edx
  43de07:	ins    BYTE PTR es:[edi],dx
  43de08:	push   ss
  43de09:	cmp    al,0xe2
  43de0b:	fs push cs
  43de0d:	cmp    al,0xa
  43de0f:	repz in eax,0x3b
  43de12:	add    dh,bl
  43de14:	fnstsw WORD PTR [ebx]
  43de16:	cli    
  43de17:	dec    esp
  43de18:	idiv   BYTE PTR [ebx]
  43de1a:	loop   0x43de60
  43de1c:	out    dx,al
  43de1d:	cmp    ebp,DWORD PTR [edx]
  43de1f:	repz inc ebp
  43de21:	cmp    al,0x22
  43de23:	repz cmp eax,0xbe2ca23c
  43de29:	cmp    eax,DWORD PTR [eax]
  43de2b:	mov    DWORD PTR [ebx-0x54aec331],ebp
  43de31:	xlat   BYTE PTR ds:[ebx]
  43de32:	cmp    al,0x69
  43de34:	stos   DWORD PTR es:[edi],eax
  43de35:	fistp  QWORD PTR [ecx+esi*2]
  43de38:	stos   DWORD PTR es:[edi],eax
  43de39:	out    0x3c,eax
  43de3b:	test   eax,0x913cefab
  43de40:	stos   DWORD PTR es:[edi],eax
  43de41:	idiv   DWORD PTR [ecx+ecx*1]
  43de44:	lods   al,BYTE PTR ds:[esi]
  43de45:	(bad)  
  43de46:	cmp    al,0xd1
  43de48:	test   eax,0xa9c93d07
  43de4d:	(bad)  
  43de4f:	shr    DWORD PTR [ecx-0x5616c2e9],1
  43de55:	pop    ds
  43de56:	cmp    eax,0x3d27a9f1
  43de5b:	test   eax,0x3d2fa9
  43de60:	add    BYTE PTR [eax],al
  43de62:	shr    DWORD PTR [ecx-0x5676c2c9],1
  43de68:	aas    
  43de69:	cmp    eax,0x3d47a951
  43de6e:	mov    DWORD PTR [ecx-0x56aec2b1],ebp
  43de74:	push   edi
  43de75:	cmp    eax,0x3d5fa969
  43de7a:	jno    0x43de25
  43de7c:	addr16 cmp eax,0x3d6f0829
  43de82:	adc    DWORD PTR [eax],ecx
  43de84:	ja     0x43dec3
  43de86:	or     DWORD PTR [eax],ecx
  43de88:	jg     0x43dec7
  43de8a:	outs   dx,BYTE PTR ds:[esi]
  43de8b:	lods   al,BYTE PTR ds:[esi]
  43de8c:	lock aas 
  43de8e:	pop    edx
  43de8f:	xchg   esi,eax
  43de90:	stc    
  43de91:	call   FWORD PTR [edx]
  43de93:	add    eax,DWORD PTR [eax]
  43de95:	add    BYTE PTR [ebx-0x4e],bl
  43de98:	xchg   ebx,eax
  43de99:	xor    al,0xc7
  43de9b:	scas   al,BYTE PTR es:[edi]
  43de9c:	sti    
  43de9d:	xor    al,0xe9
  43de9f:	scas   eax,DWORD PTR es:[edi]
  43dea0:	cdq    
  43dea1:	xor    eax,0x36e5b088
  43dea6:	repz aad 0xf1
  43dea9:	fnsetpm(287 only) 
  43deab:	popf   
  43deac:	hlt    
  43dead:	sbb    al,0xeb
  43deaf:	shl    esp,1
  43deb1:	dec    esp
  43deb2:	fistp  DWORD PTR [esi]
  43deb4:	cld    
  43deb5:	mov    ebx,ebx
  43deb7:	inc    ebp
  43deb8:	sti    
  43deb9:	add    cl,cl
  43debb:	pusha  
  43debc:	cmc    
  43debd:	loope  0x43de88
  43debf:	clc    
  43dec0:	hlt    
  43dec1:	ss mov eax,0xacf5d6
  43dec7:	add    BYTE PTR [eax],al
  43dec9:	mov    eax,0x2fe7f85b
  43dece:	jg     0x43dece
  43ded0:	hlt    
  43ded1:	es stc 
  43ded3:	stc    
  43ded4:	cmp    ebx,DWORD PTR ds:0x156efa92
  43deda:	sbb    edx,edi
  43dedc:	lea    ecx,ds:0x5b0fa30
  43dee2:	idiv   ecx
  43dee4:	jmp    0xb4f4:0xbf99dfd
  43deeb:	stc    
  43deec:	aaa    
  43deed:	in     al,dx
  43deee:	pusha  
  43deef:	stc    
  43def0:	pop    ecx
  43def1:	in     al,0x4e
  43def3:	stc    
  43def4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43def5:	fmul   QWORD PTR [ecx+edi*8]
  43def8:	loope  0x43dece
  43defa:	add    edi,ecx
  43defc:	repnz int3 
  43defe:	fwait
  43deff:	stc    
  43df00:	inc    DWORD PTR [edi+ebx*4-0x708301a4]
  43df07:	cld    
  43df08:	push   ebx
  43df0a:	push   ss
  43df0b:	hlt    
  43df0c:	and    ecx,DWORD PTR gs:[ebp+ebp*8-0x4e]
  43df11:	and    esi,DWORD PTR [ebp-0x14]
  43df14:	pop    es
  43df15:	and    cl,bh
  43df17:	repz and esp,DWORD PTR [edx]
  43df1a:	pop    es
  43df1b:	repz cs add dh,ah
  43df1f:	repnz scas al,BYTE PTR es:[edi]
  43df21:	add    al,BYTE PTR [edi]
  43df23:	popa   
  43df24:	hlt    
  43df25:	sbb    esi,edi
  43df27:	xchg   ebp,eax
  43df28:	hlt    
  43df29:	adc    esi,ebp
  43df2b:	aam    0xf1
  43df2d:	add    BYTE PTR [eax],al
  43df2f:	add    ah,al
  43df31:	hlt    
  43df32:	add    esi,edx
  43df34:	pop    ebx
  43df35:	hlt    
  43df36:	xchg   esi,eax
  43df37:	icebp  
  43df38:	ds hlt 
  43df3a:	(bad)  
  43df3b:	repnz scas al,BYTE PTR es:[edi]
  43df3d:	cmc    
  43df3e:	push   ss
  43df3f:	repz xchg ebx,eax
  43df41:	cmc    
  43df42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43df43:	repnz adc ebp,esi
  43df46:	in     al,0xf7
  43df48:	(bad)
  43df4b:	idiv   DWORD PTR [ebp+0x14f8c9f3]
  43df51:	icebp  
  43df52:	adc    dh,dh
  43df54:	cmp    ecx,esi
  43df56:	retf   
  43df57:	cmc    
  43df58:	imul   esi,ecx,0x58
  43df5b:	cmc    
  43df5c:	nop
  43df5d:	icebp  
  43df5e:	je     0x43df55
  43df60:	mov    esp,0xe6fbd0f0
  43df65:	out    dx,al
  43df66:	mov    ch,0xfb
  43df68:	push   ds
  43df69:	out    dx,eax
  43df6a:	mov    edi,ebx
  43df6c:	retf   0xb5ef
  43df6f:	cld    
  43df70:	cs out dx,al
  43df72:	call   0xb3f9:0x60ed14f9
  43df79:	in     eax,dx
  43df7a:	push   ss
  43df7b:	stc    
  43df7c:	xchg   ebp,ebp
  43df7e:	jmp    0x54fa:0xc5ebf6fa
  43df85:	in     al,dx
  43df86:	sahf   
  43df87:	stc    
  43df88:	cmp    ch,ah
  43df8a:	mov    ds:0xbaeca8f9,al
  43df8f:	stc    
  43df90:	dec    eax
  43df91:	in     al,dx
  43df92:	ret    0xf9
  43df95:	add    BYTE PTR [eax],al
  43df97:	pop    edx
  43df98:	in     al,dx
  43df99:	mov    esi,0xd6eaf3f9
  43df9e:	push   esi
  43dfa0:	jmp    0x273b:0xebf301ff
  43dfa7:	repz dec esi
  43dfa9:	cmp    al,0x46
  43dfab:	repz and edi,DWORD PTR [esp+ecx*1]
  43dfaf:	repz xor edi,DWORD PTR [esp+edx*1]
  43dfb3:	repz jle 0x43dff1
  43dfb6:	xchg   esi,eax
  43dfb7:	and    al,0xa8
  43dfb9:	clc    
  43dfba:	jmp    0x523c885f
  43dfbf:	out    dx,eax
  43dfc0:	push   es
  43dfc1:	add    bl,ah
  43dfc3:	add    BYTE PTR [edi],dl
  43dfc5:	xor    BYTE PTR [eax-0x1],cl
  43dfc8:	ins    DWORD PTR es:[edi],dx
  43dfc9:	das    
  43dfca:	xor    al,BYTE PTR [edi]
  43dfcc:	int    0x2f
  43dfce:	inc    ebp
  43dfcf:	call   FWORD PTR [eax+0x13e1ea2f]
  43dfd5:	das    
  43dfd6:	add    al,0xe0
  43dfd8:	fld    TBYTE PTR [esi]
  43dfda:	stos   DWORD PTR es:[edi],eax
  43dfdb:	loope  0x43e005
  43dfdd:	das    
  43dfde:	data16 loopne 0x43e052
  43dfe1:	cs sub eax,eax
  43dfe4:	add    ch,BYTE PTR [esi]
  43dfe6:	jg     0x43dfa9
  43dfe8:	int3   
  43dfe9:	sub    eax,0x337ec39c
  43dfee:	push   ss
  43dfef:	mov    ebx,0xa5c632fe
  43dff4:	loope  0x43e027
  43dff6:	lea    ebx,[esi+0x9e3114]
  43dffc:	add    BYTE PTR [eax],al
  43dffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dfff:	dec    ebx
  43e000:	xor    DWORD PTR [ebp-0x61],edi
  43e003:	call   0x56cc813f
  43e008:	cmp    BYTE PTR [esi-0x79],ah
  43e00b:	ins    DWORD PTR es:[edi],dx
  43e00c:	aaa    
  43e00d:	add    DWORD PTR [ecx+0x19],edi
  43e010:	ss popa 
  43e012:	jns    0x43e03c
  43e014:	outs   dx,BYTE PTR ss:[esi]
  43e016:	push   0xffffff93
  43e018:	xor    eax,0x35586a8b
  43e01d:	add    BYTE PTR [ecx+0x293acead],ah
  43e023:	lods   eax,DWORD PTR ds:[esi]
  43e024:	in     al,dx
  43e025:	cmp    dl,BYTE PTR [edi-0x52]
  43e028:	adc    eax,0x6eae123b
  43e02d:	cmp    edx,DWORD PTR [esi]
  43e02f:	scas   al,BYTE PTR es:[edi]
  43e030:	jl     0x43e06d
  43e032:	shr    DWORD PTR [esi-0x5131c465],0xc5
  43e039:	cmp    edx,DWORD PTR [edi-0x52]
  43e03c:	fistp  QWORD PTR [ebx]
  43e03e:	or     al,0xa7
  43e040:	cmp    DWORD PTR [edx+eiz*8],edi
  43e043:	push   es
  43e044:	fs cmp al,0xc4
  43e047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e048:	lds    edi,FWORD PTR [edx+edx*1]
  43e04b:	test   al,0xc
  43e04d:	cmp    eax,0x3da1a87c
  43e052:	inc    ebp
  43e053:	stos   BYTE PTR es:[edi],al
  43e054:	imul   edi,DWORD PTR [edi],0x3f94a3cd
  43e05a:	sbb    DWORD PTR [ebx-0x5d03c03f],esp
  43e060:	fstp   TBYTE PTR [edi]
  43e062:	add    BYTE PTR [eax],al
  43e064:	add    BYTE PTR [ebx-0x5d],al
  43e067:	clc    
  43e068:	(bad)  
  43e069:	fcmove st,st(2)
  43e06b:	stc    
  43e06c:	(bad)  
  43e06d:	jle    0x43e079
  43e06f:	add    BYTE PTR [eax],al
  43e071:	inc    ebx
  43e072:	call   0x31f2:0x98da31e1
  43e079:	test   eax,0x38331e97
  43e07e:	sahf   
  43e07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e080:	xor    al,0xe8
  43e082:	popf   
  43e083:	loop   0x43e0b9
  43e085:	lea    ebx,[ebp-0x62facad8]
  43e08b:	xchg   ecx,eax
  43e08c:	xor    eax,0x35d19d39
  43e091:	ret    0x8098
  43e094:	ss inc esp
  43e096:	cdq    
  43e097:	sbb    esi,DWORD PTR [edi]
  43e099:	repz or ch,ch
  43e09c:	xor    eax,0x4eecee1c
  43e0a1:	and    al,0x53
  43e0a3:	in     eax,dx
  43e0a4:	mov    edi,0xfdec5b1c
  43e0a9:	add    al,0xb8
  43e0ab:	hlt    
  43e0ac:	sbb    BYTE PTR [edx],cl
  43e0ae:	dec    ebp
  43e0af:	sti    
  43e0b0:	mov    bh,0xfa
  43e0b2:	push   eax
  43e0b3:	cli    
  43e0b4:	loopne 0x43e0af
  43e0b6:	push   ebp
  43e0b7:	stc    
  43e0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e0b9:	out    dx,eax
  43e0ba:	pusha  
  43e0bb:	imul   ebx
  43e0bd:	out    0xb0,eax
  43e0bf:	mul    DWORD PTR [ecx-0x3a098e22]
  43e0c5:	(bad)  
  43e0c6:	mov    al,ds:0xadf6
  43e0cb:	add    ch,cl
  43e0cd:	and    esi,esi
  43e0cf:	add    eax,esp
  43e0d1:	shl    ch,cl
  43e0d3:	and    DWORD PTR [edi+edi*8-0x394bbe0c],edi
  43e0da:	cmc    
  43e0db:	push   0xd9f5c32c
  43e0e0:	and    al,0xb0
  43e0e2:	int3   
  43e0e3:	(bad)  
  43e0e4:	fadd   st(7),st
  43e0e6:	cld    
  43e0e7:	push   ebx
  43e0e9:	shr    ah,0x23
  43e0ec:	add    esp,DWORD PTR [esp+ebp*8-0x1381fccb]
  43e0f3:	add    eax,DWORD PTR gs:[ebp+0x2a039fec]
  43e0fa:	hlt    
  43e0fb:	dec    edi
  43e0fc:	loop   0x43e07f
  43e0fe:	repz scas eax,DWORD PTR es:[edi]
  43e100:	loop   0x43e0f0
  43e102:	repnz dec eax
  43e104:	out    0x34,eax
  43e106:	lock int3 
  43e108:	fistp  WORD PTR [ecx-0xb397c11]
  43e10e:	out    dx,al
  43e10f:	dec    ecx
  43e110:	mov    ebp,0xc5afef1f
  43e115:	push   es
  43e116:	(bad)  
  43e117:	icebp  
  43e118:	jmp    0xe5370dfa
  43e11d:	fucom  st(6)
  43e11f:	sti    
  43e120:	hlt    
  43e121:	fidiv  WORD PTR [ecx]
  43e123:	cld    
  43e124:	inc    ebp
  43e125:	fsubrp st(0),st
  43e127:	cld    
  43e128:	pop    ss
  43e129:	loopne 0x43e16c
  43e12b:	std    
  43e12c:	into   
  43e12d:	fbstp  TBYTE PTR [ebx-0x4]
  43e130:	add    BYTE PTR [eax],al
  43e132:	add    BYTE PTR [esi],bl
  43e134:	fistp  QWORD PTR [esi+0x3be0e7fc]
  43e13a:	(bad)  
  43e13b:	pop    ebx
  43e13c:	loopne 0x43e1a0
  43e13e:	inc    cl
  43e140:	loop   0x43e128
  43e142:	clc    
  43e143:	shl    ebx,cl
  43e145:	jne    0x43e13f
  43e147:	gs jecxz 0x43e13b
  43e14a:	stc    
  43e14b:	(bad)  
  43e14c:	in     al,0x2
  43e14e:	cli    
  43e14f:	and    ah,ah
  43e151:	outs   dx,DWORD PTR ds:[esi]
  43e152:	stc    
  43e153:	ret    
  43e154:	in     eax,0x51
  43e156:	cli    
  43e157:	ds in  eax,0x37
  43e15a:	cli    
  43e15b:	hlt    
  43e15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e15d:	out    0xa3,al
  43e15f:	in     eax,dx
  43e160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e161:	es add esi,ebx
  43e164:	push   es
  43e165:	adc    al,0xf4
  43e167:	xchg   ebx,eax
  43e168:	xlat   BYTE PTR ds:[ebx]
  43e169:	inc    ebp
  43e16a:	repz push edi
  43e16c:	(bad)  
  43e16d:	popf   
  43e16e:	cmc    
  43e16f:	push   edi
  43e170:	(bad)  ds:0x6d7dff5
  43e176:	not    DWORD PTR [edx]
  43e178:	fsub   DWORD PTR [esi+esi*8-0x98127e6]
  43e17f:	rcr    al,0xde
  43e182:	out    dx,eax
  43e183:	(bad)  
  43e184:	fidivr DWORD PTR [edi+ebp*8-0x105b251a]
  43e18b:	push   cs
  43e18c:	(bad)  [esi-0x11]
  43e18f:	jne    0x43e16c
  43e191:	dec    DWORD PTR [esi-0x6c]
  43e194:	pop    ebx
  43e195:	xor    ebx,DWORD PTR [eax+eax*1]
  43e198:	add    BYTE PTR [eax],al
  43e19a:	mov    WORD PTR [ebx-0x637c24cd],gs
  43e1a0:	xor    ebp,ecx
  43e1a2:	pop    ebp
  43e1a3:	push   es
  43e1a4:	xor    esi,esi
  43e1a6:	push   ebp
  43e1a7:	out    0x32,eax
  43e1a9:	adc    ecx,DWORD PTR [ebp+eiz*8+0x32]
  43e1ad:	dec    ebp
  43e1ae:	inc    esp
  43e1af:	or     eax,0x9c411232
  43e1b4:	xor    DWORD PTR [edi+eax*2],esi
  43e1b7:	xor    DWORD PTR [edi],0xffffffc4
  43e1ba:	aas    
  43e1bb:	or     esi,DWORD PTR [edi]
  43e1bd:	xor    al,0x38
  43e1bf:	nop
  43e1c0:	ss jge 0x43e1eb
  43e1c3:	xor    BYTE PTR [esi],0xb9
  43e1c6:	sub    BYTE PTR [esi-0x24e10eca],ch
  43e1cc:	xor    eax,0x3629152b
  43e1d1:	pop    ecx
  43e1d2:	or     eax,0x5ad3566
  43e1d7:	mov    ecx,0x2fd7235
  43e1dc:	xor    eax,0x34b6f7e2
  43e1e1:	cmp    al,0xee
  43e1e3:	mov    cl,0x34
  43e1e5:	push   esi
  43e1e6:	out    0xf7,al
  43e1e8:	cmp    eax,DWORD PTR [edx]
  43e1ea:	fnsetpm(287 only) 
  43e1ec:	cmp    ebx,DWORD PTR [eax-0x40c3d424]
  43e1f2:	les    esi,FWORD PTR [ebp+0x3b]
  43e1f5:	je     0x43e1c2
  43e1f7:	mov    edx,0xf7bb323b
  43e1fc:	cmp    cl,BYTE PTR ds:0xbc000000
  43e202:	stos   BYTE PTR es:[edi],al
  43e203:	cmp    ah,ch
  43e205:	stos   BYTE PTR es:[edi],al
  43e206:	fdivr  QWORD PTR [ecx]
  43e208:	mov    eax,ds:0x3d3a42aa
  43e20d:	cdq    
  43e20e:	push   edi
  43e20f:	cmp    DWORD PTR [eax],eax
  43e211:	dec    ecx
  43e212:	sahf   
  43e213:	push   ecx
  43e214:	aas    
  43e215:	or     ebx,DWORD PTR [edi-0x61d4c087]
  43e21b:	lahf   
  43e21c:	aas    
  43e21d:	rcr    DWORD PTR [ebp-0x614ec03d],0xf7
  43e224:	aas    
  43e225:	pop    edx
  43e226:	push   edi
  43e227:	stc    
  43e228:	jmp    esi
  43e22a:	pop    es
  43e22b:	add    BYTE PTR [eax],al
  43e22d:	arpl   WORD PTR [edi-0x6507cfce],dx
  43e233:	arpl   WORD PTR [eax],si
  43e235:	rcl    DWORD PTR [edi-0x688fcf64],0xa8
  43e23c:	xor    ah,al
  43e23e:	xchg   edi,eax
  43e23f:	lds    esi,FWORD PTR [eax]
  43e241:	mov    ss,WORD PTR [edi-0x67dacefb]
  43e247:	daa    
  43e248:	xor    DWORD PTR [edx-0x68],eax
  43e24b:	inc    esi
  43e24c:	xor    edx,edi
  43e24e:	xchg   edi,eax
  43e24f:	jbe    0x43e282
  43e251:	mov    dh,0x98
  43e253:	scas   al,BYTE PTR es:[edi]
  43e254:	xor    DWORD PTR [esi-0x68],edx
  43e257:	shl    BYTE PTR [ecx],cl
  43e259:	jle    0x43e1f3
  43e25b:	add    dh,BYTE PTR [edx]
  43e25d:	sub    bl,BYTE PTR [ecx-0x66c5cdc6]
  43e263:	pop    esi
  43e264:	xor    al,BYTE PTR [eax]
  43e266:	add    BYTE PTR [eax],al
  43e268:	popa   
  43e269:	pushf  
  43e26a:	xchg   ecx,eax
  43e26b:	xor    ch,BYTE PTR [ebp-0x64]
  43e26e:	int3   
  43e26f:	xor    ch,BYTE PTR [eax]
  43e271:	pushf  
  43e272:	lock xor dl,al
  43e275:	fwait
  43e276:	and    BYTE PTR [ebx],dh
  43e278:	int3   
  43e279:	fwait
  43e27a:	pop    eax
  43e27b:	xor    ebp,DWORD PTR [ebx+ebx*4-0x648ccc84]
  43e282:	scas   eax,DWORD PTR es:[edi]
  43e283:	xor    edi,edi
  43e285:	call   0x33fc:0x9b0f33ea
  43e28c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e28e:	call   0xe8dac9a0
  43e293:	pop    ds
  43e294:	(bad)  
  43e296:	call   0xe8a4a9c8
  43e29b:	je     0x43e25c
  43e29d:	sub    ebp,ecx
  43e29f:	mov    edi,0xbe15e8f6
  43e2a5:	hlt    
  43e2a6:	out    dx,al
  43e2a7:	imul   esp,DWORD PTR [esi],0x3c
  43e2aa:	jmp    0x246d:0xe8fb1da5
  43e2b1:	(bad)  
  43e2b3:	xchg   ecx,eax
  43e2b4:	sbb    DWORD PTR [eax-0xc],esi
  43e2b7:	out    0xf,al
  43e2b9:	add    eax,0xb044fff7
  43e2be:	cld    
  43e2bf:	std    
  43e2c0:	cmp    al,0xb4
  43e2c2:	cld    
  43e2c3:	push   ebx
  43e2c5:	mov    ah,0xec
  43e2c7:	push   ebp
  43e2c8:	loope  0x43e2da
  43e2ca:	out    dx,al
  43e2cb:	jnp    0x43e2cd
  43e2cd:	add    BYTE PTR [eax],al
  43e2cf:	loope  0x43e28f
  43e2d1:	in     eax,dx
  43e2d2:	pop    eax
  43e2d3:	loopne 0x43e2d0
  43e2d5:	out    dx,eax
  43e2d6:	test   bh,bl
  43e2d8:	cmp    esi,eax
  43e2da:	mov    esp,0x1aeee4c7
  43e2df:	mov    ebp,0xc5bdea46
  43e2e4:	cmp    bl,0xd6
  43e2e7:	mov    ebx,0x2bdcfc49
  43e2ec:	repnz cli 
  43e2ee:	dec    eax
  43e2ef:	sub    dl,cl
  43e2f1:	lock pop eax
  43e2f3:	push   ds
  43e2f4:	shl    edi,cl
  43e2f6:	mov    edx,DWORD PTR [esi]
  43e2f8:	and    esi,ecx
  43e2fa:	dec    esp
  43e2fc:	scas   eax,DWORD PTR es:[edi]
  43e2fd:	or     al,0xfe
  43e2ff:	les    edx,FWORD PTR [edi-0x4]
  43e302:	push   ebx
  43e304:	and    esi,esp
  43e306:	call   0xf5b6ea0e
  43e30b:	adc    bh,0x7d
  43e30e:	cmc    
  43e30f:	test   edi,edx
  43e311:	std    
  43e312:	hlt    
  43e313:	(bad)  
  43e314:	xlat   BYTE PTR ds:[ebx]
  43e315:	arpl   bx,si
  43e317:	xchg   ebp,edx
  43e319:	scas   eax,DWORD PTR es:[edi]
  43e31a:	out    dx,eax
  43e31b:	or     ebx,ebx
  43e31d:	ds lock push edx
  43e320:	(bad)  [ecx]
  43e322:	icebp  
  43e323:	std    
  43e324:	fcomp  DWORD PTR [esi-0x12]
  43e327:	push   0xffffffd8
  43e329:	jg     0x43e318
  43e32b:	popf   
  43e32c:	fsubr  DWORD PTR [ecx-0x1427c013]
  43e332:	out    dx,al
  43e333:	add    BYTE PTR [eax],al
  43e335:	add    bh,bh
  43e337:	fnstenv ds:0xf9d9d3ef
  43e33d:	cld    
  43e33e:	jp     0x43e31f
  43e340:	jecxz  0x43e33b
  43e342:	loopne 0x43e320
  43e344:	std    
  43e345:	stc    
  43e346:	in     al,0xdd
  43e348:	cmp    al,0xfb
  43e34a:	mov    ebx,0xf6fa44dd
  43e34f:	loop   0x43e36e
  43e351:	stc    
  43e352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e353:	jecxz  0x43e3a2
  43e355:	clc    
  43e356:	pop    esi
  43e357:	jecxz  0x43e30e
  43e359:	clc    
  43e35a:	cmp    eax,0x18f887e3
  43e35f:	jecxz  0x43e348
  43e361:	cmc    
  43e362:	repz loopne 0x43e3d2
  43e365:	cmc    
  43e366:	shl    ecx,cl
  43e368:	daa    
  43e369:	imul   DWORD PTR [ecx+eiz*8-0x1f9a0934]
  43e370:	xchg   dh,dh
  43e372:	(bad)
  43e375:	neg    ah
  43e377:	mov    al,ds:0xa0d6e3e6
  43e37c:	dec    esi
  43e37d:	add    esi,ebx
  43e37f:	push   es
  43e380:	push   es
  43e381:	hlt    
  43e382:	std    
  43e383:	(bad)  
  43e384:	jmp    FWORD PTR [ecx+0xe304dc0]
  43e38a:	shl    bl,0x2e
  43e38d:	lea    esp,[edi-0x60b2d0d4]
  43e393:	int3   
  43e394:	cs out 0xa2,eax
  43e397:	jge    0x43e3cc
  43e399:	jne    0x43e39b
  43e39b:	add    BYTE PTR [eax],al
  43e39d:	mov    ds:0x9e983265,eax
  43e3a2:	inc    edx
  43e3a3:	xor    cl,BYTE PTR [ebp+0x66322196]
  43e3a9:	mov    cs,esi
  43e3ab:	xor    DWORD PTR [ebx],edx
  43e3ad:	xchg   BYTE PTR [ecx+esi*1+0x319f5ddd],ah
  43e3b4:	add    edx,DWORD PTR [esi+0x4c]
  43e3b7:	xor    DWORD PTR [edx+0x4e],ecx
  43e3ba:	test   DWORD PTR [eax],esi
  43e3bc:	jb     0x43e404
  43e3be:	bound  esi,QWORD PTR [eax]
  43e3c0:	pushf  
  43e3c1:	pop    esi
  43e3c2:	xchg   edi,eax
  43e3c3:	xor    dl,dh
  43e3c5:	dec    eax
  43e3c6:	adc    DWORD PTR [eax],edi
  43e3c8:	clc    
  43e3c9:	cmp    BYTE PTR [ebp+0x38],cl
  43e3cc:	dec    edx
  43e3cd:	aaa    
  43e3ce:	sub    bh,BYTE PTR [eax]
  43e3d0:	jnp    0x43e401
  43e3d2:	push   0xb8275637
  43e3d7:	aaa    
  43e3d8:	mov    bh,0x1f
  43e3da:	sti    
  43e3db:	ss (bad) 
  43e3dd:	sbb    esi,ebx
  43e3df:	ss sub eax,0x13373d08
  43e3e5:	or     BYTE PTR [ecx],ah
  43e3e7:	aaa    
  43e3e8:	outs   dx,BYTE PTR ds:[esi]
  43e3e9:	clc    
  43e3ea:	xor    BYTE PTR [esi],0x37
  43e3ed:	clc    
  43e3ee:	popa   
  43e3ef:	ss inc eax
  43e3f1:	call   0xe89a1ab4
  43e3f6:	mov    al,ds:0xfddaf136
  43e3fb:	xor    eax,0x35dfd917
  43e400:	add    BYTE PTR [eax],al
  43e402:	add    BYTE PTR [eax],al
  43e404:	ins    DWORD PTR es:[edi],dx
  43e405:	popf   
  43e406:	push   ebp
  43e407:	cmp    bh,BYTE PTR [ebp+ebx*4+0x7b]
  43e40b:	cmp    ah,BYTE PTR [eax]
  43e40d:	popf   
  43e40e:	cwde   
  43e40f:	cmp    bl,dl
  43e411:	pushf  
  43e412:	fdivr  DWORD PTR [edx]
  43e414:	or     BYTE PTR [ebp-0x6163c501],bl
  43e41a:	and    eax,0x4b9eb93b
  43e41f:	cmp    ebp,DWORD PTR [ecx-0x62]
  43e422:	imul   edi,DWORD PTR [ebx],0x1f
  43e425:	sahf   
  43e426:	xchg   ebx,eax
  43e427:	cmp    eax,ebp
  43e429:	popf   
  43e42a:	sti    
  43e42b:	cmp    ebx,DWORD PTR [edi-0x69]
  43e42e:	gs cmp al,0x6
  43e431:	cwde   
  43e432:	mov    ds:0xd297923c,al
  43e437:	cmp    al,0x3b
  43e439:	xchg   edi,eax
  43e43a:	fistp  QWORD PTR [edi+esi*1]
  43e43d:	xchg   edi,eax
  43e43e:	in     eax,dx
  43e43f:	cmp    al,0x4f
  43e441:	cwde   
  43e442:	or     edi,DWORD PTR ds:0x3d2697f9
  43e448:	lock xchg edi,eax
  43e44a:	cmp    DWORD PTR ds:0x3df59893,0x16
  43e451:	cdq    
  43e452:	aas    
  43e453:	ds mov bl,0x98
  43e456:	jbe    0x43e496
  43e458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e459:	cdq    
  43e45a:	test   al,0x3e
  43e45c:	dec    esi
  43e45d:	cdq    
  43e45e:	jmp    0x39dde9a1
  43e463:	aas    
  43e464:	sbb    BYTE PTR [edx+0xfff8],0x0
  43e46b:	sbb    dl,BYTE PTR [ebx+0x3c6fffa]
  43e471:	add    BYTE PTR [eax],al
  43e473:	mov    bh,0x94
  43e475:	mov    al,0x31
  43e477:	daa    
  43e478:	cdq    
  43e479:	out    dx,eax
  43e47a:	xor    ecx,ebp
  43e47c:	cwde   
  43e47d:	es xor dh,bl
  43e480:	clc    
  43e481:	in     eax,dx
  43e482:	push   esi
  43e483:	and    DWORD PTR [ebp-0x12],ebp
  43e486:	jb     0x43e489
  43e488:	cmp    al,0xef
  43e48a:	or     al,BYTE PTR [eax]
  43e48c:	lahf   
  43e48d:	out    dx,eax
  43e48e:	inc    edx
  43e48f:	add    BYTE PTR [edx-0x11],bl
  43e492:	mov    al,BYTE PTR [eax]
  43e494:	dec    esi
  43e495:	lock (bad) 
  43e497:	loopne 0x43e48b
  43e499:	out    dx,eax
  43e49a:	mul    al
  43e49c:	scas   eax,DWORD PTR es:[edi]
  43e49d:	call   0xe90fcbaf
  43e4a2:	cmp    bh,bl
  43e4a4:	test   cl,ch
  43e4a6:	stos   BYTE PTR es:[edi],al
  43e4a7:	(bad)  
  43e4a8:	fsubr  st,st(1)
  43e4aa:	push   ss
  43e4ab:	mov    ebp,0xc5a3eacc
  43e4b0:	shl    ah,1
  43e4b2:	xor    edi,DWORD PTR [ebx+0x2b81f486]
  43e4b8:	adc    eax,0xa82bd6ec
  43e4bd:	jmp    0x43e4ca
  43e4bf:	sbb    ch,dl
  43e4c1:	jmp    0xa6c:0xeb4a1a4e
  43e4c8:	pop    ss
  43e4c9:	jmp    0x43e45a
  43e4cb:	or     cl,bh
  43e4cd:	jmp    0x55fa:0xe0
  43e4d4:	jmp    0xe910:0xeac1f903
  43e4db:	shr    dl,1
  43e4dd:	sub    eax,0x78e9eee9
  43e4e2:	fstp   DWORD PTR [eax]
  43e4e4:	jmp    0xc834:0xe9bed822
  43e4eb:	in     al,dx
  43e4ec:	call   0xe93fad41
  43e4f1:	pop    esi
  43e4f2:	mov    eax,0xb864e90d
  43e4f7:	lahf   
  43e4f8:	jmp    0xdd4b0d6f
  43e4fd:	out    dx,al
  43e4fe:	imul   esp,edx,0x61
  43e501:	out    dx,eax
  43e502:	lods   eax,DWORD PTR ds:[esi]
  43e503:	loope  0x43e4ae
  43e505:	out    dx,eax
  43e506:	sub    bl,bl
  43e508:	mov    bh,0xef
  43e50a:	and    al,0xdb
  43e50c:	inc    edx
  43e50d:	lock adc al,0xdc
  43e510:	cli    
  43e511:	lock push edi
  43e513:	fdiv   QWORD PTR [esi+0x11db8ff0]
  43e519:	icebp  
  43e51a:	cmp    ch,bl
  43e51c:	shl    cl,0xc6
  43e51f:	fsub   st(3),st
  43e521:	repnz xchg ch,bl
  43e524:	dec    ecx
  43e525:	repz test eax,0x97f302dd
  43e52b:	fucom  st(6)
  43e52d:	inc    ebx
  43e52e:	test   DWORD PTR [ebp+0x6f303fa],ebx
  43e534:	mov    ?,ebx
  43e536:	add    BYTE PTR [eax],al
  43e538:	add    BYTE PTR [edx-0x2a],dh
  43e53b:	add    ah,dh
  43e53d:	ja     0x43e516
  43e53f:	mov    eax,ds:0xf2d755f4
  43e544:	cmc    
  43e545:	sbb    eax,0xd2b9f58c
  43e54b:	mov    edi,esi
  43e54d:	in     al,0xd3
  43e54f:	stc    
  43e550:	clc    
  43e551:	pop    es
  43e552:	aam    0xdf
  43e554:	stc    
  43e555:	pop    ss
  43e556:	aad    0xf4
  43e558:	stc    
  43e559:	std    
  43e55a:	aam    0x26
  43e55c:	cli    
  43e55d:	mov    bl,0xd4
  43e55f:	xor    dl,bh
  43e561:	rcl    esp,0x1
  43e564:	cli    
  43e565:	jo     0x43e53b
  43e567:	pop    esp
  43e568:	stc    
  43e569:	dec    esp
  43e56a:	aam    0x56
  43e56c:	stc    
  43e56d:	inc    ebx
  43e56e:	aam    0x9a
  43e570:	stc    
  43e571:	pop    ds
  43e572:	aam    0x82
  43e574:	stc    
  43e575:	push   cs
  43e576:	aam    0xff
  43e578:	outs   dx,DWORD PTR ds:[esi]
  43e579:	cli    
  43e57a:	fwait
  43e57b:	xor    ecx,edx
  43e57d:	jmp    0xe9ef1673
  43e582:	inc    edx
  43e583:	xor    DWORD PTR [esi-0x3ccec427],ebp
  43e589:	fldcw  WORD PTR [ecx+esi*1]
  43e58c:	ror    cl,1
  43e58e:	pop    ds
  43e58f:	xor    DWORD PTR [ecx-0x37],edi
  43e592:	push   esi
  43e593:	xor    BYTE PTR [ecx],ch
  43e595:	mov    ecx,0xb91430c2
  43e59a:	mov    ebx,0x4330
  43e59f:	add    BYTE PTR [ecx-0x56dccf56],ch
  43e5a5:	popf   
  43e5a6:	xor    bl,dh
  43e5a8:	mov    BYTE PTR [eax],al
  43e5aa:	cmp    cl,cl
  43e5ac:	mov    dh,ah
  43e5ae:	aaa    
  43e5af:	mov    esi,0x2d376198
  43e5b4:	cwde   
  43e5b5:	shl    DWORD PTR [edi],1
  43e5b7:	adc    eax,0xe6370488
  43e5bc:	xchg   esp,esi
  43e5be:	ss into 
  43e5c0:	pop    edi
  43e5c1:	imul   esi,DWORD PTR [esi],0x363f553a
  43e5c7:	jb     0x43e616
  43e5c9:	je     0x43e600
  43e5cb:	xchg   ebp,eax
  43e5cc:	inc    ebp
  43e5cd:	ret    
  43e5ce:	xor    eax,0x35c05db8
  43e5d3:	aam    0x55
  43e5d5:	repz xor al,0x11
  43e5d8:	dec    esi
  43e5d9:	cmp    DWORD PTR ds:0x34854648,esi
  43e5df:	push   esp
  43e5e0:	push   ds
  43e5e1:	jl     0x43e617
  43e5e3:	push   edi
  43e5e4:	push   ss
  43e5e5:	add    eax,0xfa0cf93c
  43e5ea:	cmp    ebx,esp
  43e5ec:	add    al,0xde
  43e5ee:	cmp    edx,DWORD PTR [edi]
  43e5f0:	add    esp,DWORD PTR [eax]
  43e5f2:	cmp    al,0x0
  43e5f4:	xchg   ebp,eax
  43e5f5:	xchg   esi,eax
  43e5f6:	mov    ?,WORD PTR [ecx+edx*4]
  43e5f9:	xchg   esi,eax
  43e5fa:	mov    eax,ds:0xc896b73c
  43e5ff:	cmp    al,0x78
  43e601:	xchg   esi,eax
  43e602:	loopne 0x43e640
  43e604:	add    BYTE PTR [eax],al
  43e606:	add    BYTE PTR [edi+edx*4],bh
  43e609:	repnz cmp al,0xcb
  43e60c:	lods   al,BYTE PTR ds:[esi]
  43e60d:	or     bh,BYTE PTR ds:0x3d2dacdc
  43e613:	sub    DWORD PTR [esp+ebx*2+0x6bac9e3d],0x3d
  43e61b:	mov    bl,0xac
  43e61d:	xchg   DWORD PTR ds:0x3df6abf4,edi
  43e623:	xchg   esp,eax
  43e624:	xchg   ebp,eax
  43e625:	add    al,0x3e
  43e627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e628:	xchg   ebp,eax
  43e629:	adc    eax,0x4f95c33e
  43e62e:	mov    DWORD PTR ds:[esi+0x379afff8],edx
  43e635:	cli    
  43e636:	jmp    DWORD PTR [esi]
  43e638:	add    eax,DWORD PTR [eax]
  43e63a:	add    BYTE PTR [edx],dl
  43e63c:	cwde   
  43e63d:	mov    bl,0x31
  43e63f:	xchg   ebp,eax
  43e640:	xchg   ecx,eax
  43e641:	and    DWORD PTR [edx],esi
  43e643:	mov    ds:0x25333692,al
  43e648:	xchg   edx,eax
  43e649:	arpl   WORD PTR [ebx],si
  43e64b:	ficom  DWORD PTR [edx-0x6d84cc61]
  43e651:	or     al,0x34
  43e653:	inc    ecx
  43e654:	xchg   ebx,eax
  43e655:	sub    eax,0x809eaf34
  43e65a:	xor    al,0x8d
  43e65c:	xchg   ebx,eax
  43e65d:	xor    BYTE PTR ds:0x36329d36,0xbb
  43e664:	mov    al,ds:0x9dec3671
  43e669:	cmp    BYTE PTR ss:[eax],al
  43e66c:	add    BYTE PTR [eax],al
  43e66e:	jno    0x43e61f
  43e670:	lds    edi,FWORD PTR [eax]
  43e672:	repz fwait
  43e674:	in     eax,0x1a
  43e676:	retf   0xe4e2
  43e679:	push   ebp
  43e67a:	retf   0xe4f5
  43e67d:	ins    DWORD PTR es:[edi],dx
  43e67e:	mov    edx,0xba82e599
  43e683:	aas    
  43e684:	out    0x98,al
  43e686:	sub    al,BYTE PTR [eax+0x392ad0e5]
  43e68c:	out    0x13,al
  43e68e:	sbb    esi,esi
  43e690:	jmp    0xeafbffc7
  43e695:	cdq    
  43e696:	or     ecx,edi
  43e698:	jmp    0xf856:0xeb0f09f2
  43e69f:	xor    ah,ch
  43e6a1:	sar    eax,0xd1
  43e6a4:	jmp    0x43e6e1
  43e6a6:	out    dx,eax
  43e6a7:	jg     0x43e691
  43e6a9:	pop    esi
  43e6aa:	out    0x77,eax
  43e6ac:	call   0xe931c62a
  43e6b1:	or     dh,dl
  43e6b3:	outs   dx,DWORD PTR ds:[esi]
  43e6b4:	jmp    0xe9adb509
  43e6b9:	jae    0x43e681
  43e6bb:	aas    
  43e6bc:	jmp    0xb6c6:0xe9debe96
  43e6c3:	lahf   
  43e6c4:	jmp    0x2410:0xef0e2d07
  43e6cb:	mov    al,0x1c
  43e6cd:	(bad)  
  43e6ce:	pop    esp
  43e6cf:	jo     0x43e6d4
  43e6d1:	add    BYTE PTR [eax],al
  43e6d3:	add    BYTE PTR [eax],al
  43e6d5:	repz cmp ah,dh
  43e6d8:	in     eax,0x3
  43e6da:	mov    cl,0xf3
  43e6dc:	data16 add bl,cl
  43e6df:	repnz retf 0xb302
  43e6e3:	out    dx,al
  43e6e4:	xor    al,BYTE PTR [ecx]
  43e6e6:	push   ss
  43e6e7:	out    dx,al
  43e6e8:	fabs   
  43e6ea:	pop    esi
  43e6eb:	in     eax,dx
  43e6ec:	or     eax,0xf30106e0
  43e6f1:	jecxz  0x43e6c8
  43e6f3:	cmp    eax,0xb4d647f3
  43e6f8:	repz cld 
  43e6fa:	rol    BYTE PTR [ecx],cl
  43e6fc:	clc    
  43e6fd:	xchg   esi,eax
  43e6fe:	shr    BYTE PTR [edx-0x8],cl
  43e701:	xor    edx,ebx
  43e703:	fdivp  st(0),st
  43e705:	leave  
  43e706:	shr    DWORD PTR [esi-0x582c7808],cl
  43e70c:	stc    
  43e70d:	iret   
  43e70e:	rcr    DWORD PTR [ecx],cl
  43e710:	div    BYTE PTR [edx-0x409d430]
  43e716:	ror    DWORD PTR [ebx],1
  43e718:	idiv   DWORD PTR [esi]
  43e71a:	rol    bh,cl
  43e71c:	mul    BYTE PTR [ecx+edx*8+0x1b]
  43e720:	test   eax,0xd4ebedd1
  43e726:	fimul  WORD PTR [ebx]
  43e728:	in     al,dx
  43e729:	jmp    0x62de:0x7bebb4de
  43e730:	in     al,dx
  43e731:	mov    ds:0xc5ecfbde,eax
  43e736:	fild   WORD PTR [esp+ebp*8+0x73000000]
  43e73d:	fild   WORD PTR ds:0x1fdcb2ed
  43e743:	jmp    0xde33:0xead4dc85
  43e74a:	fucomi st,st(7)
  43e74c:	pop    es
  43e74d:	fistp  DWORD PTR [esi+0x6cdab5ef]
  43e753:	out    dx,eax
  43e754:	xor    eax,0xef104da
  43e759:	fcomp  QWORD PTR [eax]
  43e75b:	icebp  
  43e75c:	mov    bl,0xdb
  43e75e:	popf   
  43e75f:	lock and ebx,ebx
  43e762:	popf   
  43e763:	lock push edx
  43e765:	(bad)  [ecx-0x24c610]
  43e76b:	jmp    0x43e78b
  43e76d:	add    bh,BYTE PTR [edx]
  43e76f:	int3   
  43e770:	push   ss
  43e771:	loope  0x43e7ac
  43e773:	loopne 0x43e783
  43e775:	fidivr WORD PTR [ecx]
  43e777:	es add eax,0x1d363a4c
  43e77d:	sbb    eax,0x6116733a
  43e782:	cmp    DWORD PTR [edx-0x78c643f2],esi
  43e788:	push   es
  43e789:	test   al,0x39
  43e78b:	or     ebx,esp
  43e78d:	push   edi
  43e78e:	cmp    BYTE PTR [esi-0x16c76e2b],dl
  43e794:	and    BYTE PTR [ecx+0x6f045f8],bl
  43e79a:	add    cl,cl
  43e79c:	ror    BYTE PTR [edi+ebp*1-0x4c],0x0
  43e7a1:	add    BYTE PTR [eax],al
  43e7a3:	shr    DWORD PTR [ebp*1+0x2cb9c164],0xd3
  43e7ab:	mov    esp,0xa4483351
  43e7b0:	pop    es
  43e7b1:	xor    ebx,DWORD PTR [esi+0x323274ab]
  43e7b7:	fwait
  43e7b8:	or     esi,DWORD PTR [edx]
  43e7ba:	gs sahf 
  43e7bc:	xor    DWORD PTR ss:[ebp+eax*4+0x7d913127],esi
  43e7c4:	sbb    esi,DWORD PTR [ecx]
  43e7c6:	ja     0x43e74d
  43e7c8:	jo     0x43e7fa
  43e7ca:	dec    ebx
  43e7cb:	jge    0x43e821
  43e7cd:	xor    BYTE PTR [ecx],ch
  43e7cf:	gs ret 0x1130
  43e7d3:	pop    ebp
  43e7d4:	mov    al,ds:0x9366da30
  43e7d9:	xor    cl,dh
  43e7db:	dec    eax
  43e7dc:	or     bh,BYTE PTR [eax]
  43e7de:	or     DWORD PTR [edi-0x1a],ebx
  43e7e1:	aaa    
  43e7e2:	push   cs
  43e7e3:	push   edi
  43e7e4:	inc    esi
  43e7e5:	cmp    BYTE PTR [eax],al
  43e7e7:	add    eax,0x11384eab
  43e7ec:	stos   DWORD PTR es:[edi],eax
  43e7ed:	pop    ebx
  43e7ee:	cmp    BYTE PTR [edi-0x6fc79056],dh
  43e7f4:	stos   BYTE PTR es:[edi],al
  43e7f5:	(bad)  
  43e7f6:	cmp    BYTE PTR [edi-0x55],dh
  43e7f9:	fwait
  43e7fa:	cmp    bl,al
  43e7fc:	stos   BYTE PTR es:[edi],al
  43e7fd:	scas   eax,DWORD PTR es:[edi]
  43e7fe:	cmp    BYTE PTR [edx-0x55],bl
  43e801:	mov    edi,0xd7ab6738
  43e806:	cmp    BYTE PTR [eax],al
  43e808:	add    BYTE PTR [eax],al
  43e80a:	ins    BYTE PTR es:[edi],dx
  43e80b:	stos   DWORD PTR es:[edi],eax
  43e80c:	out    0x38,al
  43e80e:	jle    0x43e7ba
  43e810:	repz cmp dh,bl
  43e813:	lods   al,BYTE PTR ds:[esi]
  43e814:	add    edi,DWORD PTR [ecx]
  43e816:	retf   
  43e817:	lods   al,BYTE PTR ds:[esi]
  43e818:	sbb    edi,DWORD PTR [ecx]
  43e81a:	add    BYTE PTR [edx+ebp*1+0x3eac1239],ch
  43e821:	cmp    DWORD PTR [esp+ebp*4-0x537ec6b3],edx
  43e828:	cmp    DWORD PTR fs:[eax-0x54],edi
  43e82c:	jb     0x43e867
  43e82e:	dec    edx
  43e82f:	lods   al,BYTE PTR ds:[esi]
  43e830:	cmp    DWORD PTR [ecx],0x3991ac48
  43e836:	jb     0x43e7e3
  43e838:	test   al,0x39
  43e83a:	cmp    eax,0xfa39b5ac
  43e83f:	stos   DWORD PTR es:[edi],eax
  43e840:	push   ss
  43e841:	cmp    bh,BYTE PTR [ecx+0x2c3a99ad]
  43e847:	lods   eax,DWORD PTR ds:[esi]
  43e848:	mov    ah,0x3a
  43e84a:	mov    WORD PTR [esi-0x523dc445],gs
  43e850:	add    DWORD PTR [eax+eax*2],edi
  43e853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e854:	xor    al,0x3c
  43e856:	fsub   QWORD PTR [edi-0x586ac382]
  43e85c:	jo     0x43e89b
  43e85e:	loope  0x43e808
  43e860:	out    0x3d,eax
  43e862:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e864:	jmp    0xfd58:0xe9fd0527
  43e86b:	jno    0x43e857
  43e86d:	add    al,BYTE PTR [eax]
  43e86f:	add    BYTE PTR [eax],al
  43e871:	hlt    
  43e872:	add    ch,bl
  43e874:	sub    eax,0x42eb91ec
  43e879:	in     al,0xf9
  43e87b:	jmp    0xd4ba:0xec4cdc60
  43e882:	lods   eax,DWORD PTR ds:[esi]
  43e883:	jl     0x43e882
  43e885:	or     al,0x99
  43e887:	std    
  43e888:	push   ebx
  43e88a:	cmp    ch,ch
  43e88c:	fwait
  43e88d:	ret    
  43e88e:	sbb    ch,ch
  43e890:	push   es
  43e891:	ret    0xedbd
  43e894:	pop    ds
  43e895:	and    ah,al
  43e897:	in     al,dx
  43e898:	inc    esp
  43e899:	and    al,BYTE PTR ds:0xbb2263ed
  43e89f:	in     eax,dx
  43e8a0:	mov    ebx,0xd3edec22
  43e8a5:	add    bl,ch
  43e8a7:	in     eax,dx
  43e8a8:	pop    esp
  43e8a9:	add    DWORD PTR [ebp+0x2e01b8ee],ecx
  43e8af:	lock mov ds:0xf9f04e00,eax
  43e8b5:	loopne 0x43e84c
  43e8b7:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e8b9:	fistp  WORD PTR [ecx+esi*8]
  43e8bc:	mov    ecx,0x17f1a1e7
  43e8c1:	fmulp  st(5),st
  43e8c3:	icebp  
  43e8c4:	cld    
  43e8c5:	(bad)  
  43e8c6:	pushf  
  43e8c7:	repnz and BYTE PTR [ebp-0x3abc0d52],bh
  43e8ce:	pop    edx
  43e8cf:	repnz pop esi
  43e8d1:	mov    ebp,0x7df277
  43e8d6:	add    BYTE PTR [eax],al
  43e8d8:	and    eax,0x1dbdf337
  43e8dd:	stc    
  43e8de:	repnz sbb ah,BYTE PTR [edi+eax*1]
  43e8e2:	es repz test eax,0xa9f335dd
  43e8e9:	(bad)  [eax+0x5dcef3f3]
  43e8ef:	in     al,dx
  43e8f0:	jg     0x43e8c1
  43e8f2:	fsubr  st,st(4)
  43e8f4:	adc    al,dl
  43e8f6:	sub    ebp,ebp
  43e8f8:	xchg   ebp,eax
  43e8f9:	iret   
  43e8fa:	cs in  eax,dx
  43e8fc:	jne    0x43e8ce
  43e8fe:	stos   DWORD PTR es:[edi],eax
  43e8ff:	in     eax,dx
  43e900:	add    eax,0xdbedcfd1
  43e905:	shr    BYTE PTR [esi],1
  43e907:	out    dx,al
  43e908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e909:	shl    BYTE PTR [ecx],1
  43e90b:	out    dx,al
  43e90c:	jbe    0x43e8df
  43e90e:	outs   dx,BYTE PTR ds:[esi]
  43e90f:	out    dx,al
  43e910:	dec    eax
  43e911:	shl    DWORD PTR [edx-0x752ee512],1
  43e917:	out    dx,al
  43e918:	in     eax,0xd0
  43e91a:	(bad)  
  43e91c:	add    eax,0x4cef21d2
  43e921:	sar    BYTE PTR [ebx-0x11],cl
  43e924:	jp     0x43e8f7
  43e926:	sub    edi,0xffffff9b
  43e929:	ror    DWORD PTR [esi+0x47d1aeef],1
  43e92f:	out    dx,eax
  43e930:	int    0xd1
  43e932:	ds out dx,eax
  43e934:	mov    edx,0xffe7efd1
  43e939:	ror    bh,cl
  43e93b:	out    0x0,eax
  43e93d:	add    BYTE PTR [eax],al
  43e93f:	rcl    dl,1
  43e941:	cld    
  43e942:	out    0xcd,eax
  43e944:	rcr    dh,cl
  43e946:	out    0x25,eax
  43e948:	sar    DWORD PTR [ecx+0x6bd31ce7],cl
  43e94e:	call   0xe886bbb0
  43e953:	inc    esp
  43e954:	rol    BYTE PTR [ebx-0x18],cl
  43e957:	aaa    
  43e958:	rcl    BYTE PTR [esi],cl
  43e95a:	call   0x943bba2
  43e95f:	pop    ebx
  43e960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e961:	cmp    esp,edi
  43e963:	dec    ebx
  43e964:	add    DWORD PTR [ebx],edi
  43e966:	xor    ecx,DWORD PTR [edx+0x45]
  43e969:	cmp    esi,DWORD PTR [esi]
  43e96b:	pop    edx
  43e96c:	sub    edi,DWORD PTR [ebx]
  43e96e:	sbb    BYTE PTR [ebx+0x58],0x3a
  43e972:	lea    ecx,[ebx-0x5b]
  43e975:	cmp    bh,BYTE PTR [edi+0x13a054b]
  43e97b:	sbb    DWORD PTR [ecx+0x3a],eax
  43e97e:	cmp    DWORD PTR [ecx],ebx
  43e980:	lea    edi,[ecx]
  43e982:	ins    DWORD PTR es:[edi],dx
  43e983:	or     bl,BYTE PTR [eax-0x6bf55ac7]
  43e989:	cmp    edx,edi
  43e98b:	sbb    edi,esp
  43e98d:	cmp    bh,dl
  43e98f:	sbb    DWORD PTR [esi],edi
  43e991:	cmp    DWORD PTR [eax+ecx*1],ebp
  43e994:	sbb    bh,BYTE PTR [ecx]
  43e996:	push   0x9
  43e998:	je     0x43e9d2
  43e99a:	aaa    
  43e99b:	fst    DWORD PTR [eax+0x38]
  43e99e:	jmp    0x7e3c7c23
  43e9a3:	add    BYTE PTR [eax],al
  43e9a5:	add    al,dh
  43e9a7:	push   es
  43e9a8:	add    BYTE PTR [ecx-0x70cfc920],dh
  43e9ae:	rol    al,0x2f
  43e9b1:	dec    ecx
  43e9b2:	shl    BYTE PTR [edi-0x381ed1],0x2e
  43e9b9:	add    al,0xbe
  43e9bb:	sbb    ebp,DWORD PTR [edi]
  43e9bd:	outs   dx,BYTE PTR ds:[esi]
  43e9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e9bf:	enter  0x4f2e,0x9f
  43e9c3:	mov    gs,WORD PTR [esi]
  43e9c5:	call   0xfd9e:0x782e2ca6
  43e9cc:	sub    al,0xfe
  43e9ce:	test   DWORD PTR [ecx+0x2d],eax
  43e9d1:	mov    BYTE PTR [ebp+0xf],bh
  43e9d4:	sub    eax,0x2c5d8575
  43e9d9:	add    cl,cl
  43e9db:	pushf  
  43e9dc:	ret    0x3833
  43e9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9e0:	inc    esi
  43e9e1:	xor    al,0x7c
  43e9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9e4:	shl    DWORD PTR [eax+eax*4],1
  43e9e7:	xchg   edi,eax
  43e9e8:	cwde   
  43e9e9:	xor    eax,0x36ba98be
  43e9ee:	sbb    DWORD PTR [ecx-0x667bc938],0xffffffd6
  43e9f5:	ss ss cdq 
  43e9f8:	loop   0x43ea30
  43e9fa:	js     0x43e995
  43e9fc:	pop    es
  43e9fd:	aaa    
  43e9fe:	adc    dl,BYTE PTR [edi-0x6a0fc8e7]
  43ea04:	sub    esi,DWORD PTR [edi]
  43ea06:	and    BYTE PTR [edi+0x373c],dl
  43ea0c:	add    al,ah
  43ea0e:	xchg   ebp,eax
  43ea0f:	dec    ebx
  43ea10:	aaa    
  43ea11:	mov    al,0x95
  43ea13:	push   edi
  43ea14:	aaa    
  43ea15:	icebp  
  43ea16:	xchg   ebp,eax
  43ea17:	push   0x37
  43ea19:	mov    ch,0x95
  43ea1b:	lods   al,BYTE PTR ds:[esi]
  43ea1c:	aaa    
  43ea1d:	inc    ecx
  43ea1e:	xchg   esi,eax
  43ea1f:	push   ebp
  43ea20:	cmp    ch,dh
  43ea22:	mov    ds:0xa28438a0,al
  43ea27:	fdivr  DWORD PTR [eax]
  43ea29:	mov    gs:0x9ffb3912,eax
  43ea2f:	aas    
  43ea30:	cmp    DWORD PTR [esi+0x6e3974a0],edi
  43ea36:	lahf   
  43ea37:	mov    esp,0x18a1c939
  43ea3c:	cmp    ah,al
  43ea3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ea3f:	sub    bh,BYTE PTR [edx]
  43ea41:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ea43:	push   ebx
  43ea44:	cmp    dh,BYTE PTR [ecx+eiz*4-0x5aedc592]
  43ea4b:	test   eax,0xe5a4da3a
  43ea50:	cmp    cl,BYTE PTR [esi-0xcc3e65e]
  43ea56:	mov    ecx,0x57bf4ce0
  43ea5b:	loopne 0x43e9ea
  43ea5d:	mov    bh,0xce
  43ea5f:	out    0xe6,eax
  43ea61:	das    
  43ea62:	mov    ds:0x692616e1,al
  43ea67:	loope  0x43eac2
  43ea69:	push   ds
  43ea6a:	sub    ah,cl
  43ea6c:	fwait
  43ea6d:	push   ss
  43ea6e:	push   0xbce1
  43ea73:	add    BYTE PTR [esi],cl
  43ea75:	mov    edi,0xad06e8e1
  43ea7a:	out    0x20,al
  43ea7c:	std    
  43ea7d:	xchg   ecx,eax
  43ea7e:	out    0x72,al
  43ea80:	cmc    
  43ea81:	xor    bh,ah
  43ea83:	mov    dl,0xed
  43ea85:	push   edi
  43ea86:	out    0xc8,al
  43ea88:	in     eax,0xa5
  43ea8a:	out    0x51,eax
  43ea8c:	fsubr  st(3),st
  43ea8e:	out    0x8b,al
  43ea90:	aam    0x2c
  43ea92:	call   0x5ce1b773
  43ea97:	std    
  43ea98:	add    al,0xd5
  43ea9a:	add    eax,DWORD PTR [eax]
  43ea9c:	repz (bad) 
  43ea9e:	in     al,dx
  43ea9f:	inc    ebp
  43eaa0:	ret    
  43eaa1:	repz repz pop edx
  43eaa4:	and    esp,DWORD PTR [ebp*8-0x12c4dc73]
  43eaab:	mov    ds:0x20ed2423,eax
  43eab0:	and    DWORD PTR [ebx+esi*8+0x24],ecx
  43eab4:	add    BYTE PTR [ebx-0xd],ah
  43eab7:	adc    eax,0xa2ea0fff
  43eabc:	push   es
  43eabd:	loopne 0x43eaa8
  43eabf:	xlat   BYTE PTR ds:[ebx]
  43eac0:	std    
  43eac1:	cmp    ch,bh
  43eac3:	add    al,0xe4
  43eac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eac6:	out    dx,eax
  43eac7:	xor    bl,ah
  43eac9:	(bad)  
  43eaca:	out    dx,eax
  43eacb:	inc    esi
  43eacc:	in     al,0x72
  43eace:	out    dx,eax
  43eacf:	dec    esi
  43ead0:	fadd   QWORD PTR [esi]
  43ead2:	mov    esp,0xbbda25f0
  43ead7:	lock add BYTE PTR [eax],al
  43eada:	add    BYTE PTR ds:0x15f08bda,ah
  43eae0:	fidivr DWORD PTR [ebx-0x10]
  43eae3:	add    eax,0xe5f07bda
  43eae8:	fnstcw WORD PTR [ebx-0x10]
  43eaeb:	in     eax,0xd9
  43eaed:	jle    0x43eada
  43eaef:	loope  0x43eac4
  43eaf1:	out    0x73,al
  43eaf3:	push   esi
  43eaf4:	xchg   edx,eax
  43eaf5:	mov    BYTE PTR [ebx+esi*8],0x6
  43eaf9:	aaa    
  43eafa:	hlt    
  43eafb:	adc    edi,0xd816f4b4
  43eb01:	sub    al,0xf5
  43eb03:	mov    ebp,0x35f587d7
  43eb08:	fcomp  st(6)
  43eb0a:	out    dx,eax
  43eb0b:	(bad)  
  43eb0c:	fimul  DWORD PTR [edi-0x10]
  43eb0f:	or     eax,0x1ee05dc
  43eb14:	sar    bh,1
  43eb16:	in     al,dx
  43eb17:	jmp    0xd230b2eb
  43eb1c:	iret   
  43eb1d:	mov    edi,0xd7cfc9ec
  43eb22:	in     al,dx
  43eb23:	ror    edi,0xbf
  43eb26:	in     al,dx
  43eb27:	sub    eax,edx
  43eb29:	daa    
  43eb2a:	in     eax,dx
  43eb2b:	xor    eax,edx
  43eb2d:	pop    ds
  43eb2e:	in     eax,dx
  43eb2f:	sub    eax,edx
  43eb31:	pop    ss
  43eb32:	in     eax,dx
  43eb33:	inc    ecx
  43eb34:	sar    BYTE PTR [edi-0x382fd614],1
  43eb3a:	in     al,dx
  43eb3b:	push   ecx
  43eb3c:	sar    BYTE PTR [edi+0xec],1
  43eb42:	dec    ecx
  43eb43:	rcl    bh,1
  43eb45:	in     al,dx
  43eb46:	inc    ecx
  43eb47:	sar    BYTE PTR [edi+0x67d029ec],1
  43eb4d:	in     eax,dx
  43eb4e:	jno    0x43eb1f
  43eb50:	call   FWORD PTR [edi-0x72]
  43eb53:	jl     0x43eb8b
  43eb55:	pop    eax
  43eb56:	xchg   BYTE PTR [esi+esi*1-0x80],dh
  43eb5a:	sahf   
  43eb5b:	ins    BYTE PTR es:[edi],dx
  43eb5c:	ss dec eax
  43eb5e:	xchg   esi,eax
  43eb5f:	fs ss inc eax
  43eb62:	mov    ds,WORD PTR [esi+esi*1+0x58]
  43eb66:	xchg   BYTE PTR [esi+esi*1+0x40],dl
  43eb6a:	pop    esi
  43eb6b:	dec    esp
  43eb6c:	sub    BYTE PTR ss:[esi-0x3c],dl
  43eb70:	and    BYTE PTR ss:[esi-0x44],cl
  43eb74:	sbb    BYTE PTR ss:[esi-0x4c],al
  43eb78:	rcr    BYTE PTR ss:[edi-0x54],0x36
  43eb7d:	enter  0xa457,0x36
  43eb81:	ror    BYTE PTR [edi-0x64],0x36
  43eb85:	fadd   DWORD PTR [edi-0x6c]
  43eb88:	rcr    BYTE PTR ss:[edi],0x8c
  43eb8c:	ss call 0xe079efac
  43eb92:	or     bh,ah
  43eb94:	xor    eax,0x35f40ad8
  43eb99:	add    BYTE PTR [ecx],bl
  43eb9b:	in     al,dx
  43eb9c:	xor    eax,0x35e41ac8
  43eba1:	ror    BYTE PTR [edx],0xdc
  43eba4:	xor    eax,0xd8
  43eba9:	or     dl,ah
  43ebab:	xor    eax,0x3551dac0
  43ebb0:	sub    eax,ebx
  43ebb2:	dec    edx
  43ebb3:	xor    eax,0x350fc9fd
  43ebb8:	pop    esp
  43ebb9:	leave  
  43ebba:	jb     0x43ebf0
  43ebbc:	push   edx
  43ebbd:	fstp   DWORD PTR [eax+0x3accb334]
  43ebc3:	cmp    al,0x71
  43ebc5:	aam    0x61
  43ebc7:	cmp    ch,BYTE PTR [eax]
  43ebc9:	retf   
  43ebca:	(bad)  
  43ebcb:	cmp    al,BYTE PTR [eax]
  43ebcd:	cmp    bl,BYTE PTR [edi-0x55fac15a]
  43ebd3:	jno    0x43ec14
  43ebd5:	inc    ecx
  43ebd6:	test   eax,0xc48afff8
  43ebdb:	cli    
  43ebdc:	jmp    FWORD PTR [esi]
  43ebde:	add    al,0x0
  43ebe0:	add    BYTE PTR [edi],cl
  43ebe2:	xchg   esp,eax
  43ebe3:	mov    ds:0xc6942530,eax
  43ebe8:	xor    ch,ch
  43ebea:	xchg   ebx,eax
  43ebeb:	adc    esi,DWORD PTR [ecx]
  43ebed:	mov    eax,ds:0xf3315a9b
  43ebf2:	call   0x320a:0x964c31f8
  43ebf9:	sub    eax,0xb1324c96
  43ebfe:	xchg   esp,eax
  43ebff:	test   eax,0xf2953732
  43ec04:	xor    al,BYTE PTR [eax-0x69]
  43ec07:	push   ds
  43ec08:	xor    eax,DWORD PTR [ebx]
  43ec0a:	xchg   esi,eax
  43ec0b:	jp     0x43ec40
  43ec0d:	add    BYTE PTR [eax],al
  43ec0f:	add    bl,cl
  43ec11:	xchg   ebp,eax
  43ec12:	jmp    0x43ec47
  43ec14:	sbb    BYTE PTR [eax-0x603ccbf0],ah
  43ec1a:	lds    esi,FWORD PTR ds:0x35e6a07e
  43ec20:	ins    BYTE PTR es:[edi],dx
  43ec21:	mov    al,ds:0xa21f360e
  43ec26:	cmp    dh,BYTE PTR [esi]
  43ec28:	dec    esp
  43ec29:	mov    eax,ds:0xa17136cd
  43ec2e:	in     al,dx
  43ec2f:	shl    BYTE PTR ss:[edx-0x5ddbc87f],cl
  43ec36:	and    edi,DWORD PTR [eax]
  43ec38:	cld    
  43ec39:	mov    ds:0x9c943879,al
  43ec3e:	mov    eax,0xb69d7639
  43ec43:	cmp    edi,DWORD PTR [ecx]
  43ec45:	sahf   
  43ec46:	(bad)  
  43ec47:	cmp    esi,ebx
  43ec49:	dec    edi
  43ec4a:	loopne 0x43ebd8
  43ec4c:	idiv   BYTE PTR [ebp-0x20]
  43ec4f:	lods   eax,DWORD PTR ds:[esi]
  43ec50:	out    dx,al
  43ec51:	fchs   
  43ec53:	int    0xe6
  43ec55:	inc    ecx
  43ec56:	loope  0x43ec4d
  43ec58:	fisubr WORD PTR [edx+eiz*8-0x1dfc2aea]
  43ec5f:	cmp    ebp,ecx
  43ec61:	dec    ebp
  43ec62:	loop   0x43ecb5
  43ec64:	lds    esp,FWORD PTR [esi-0x1e]
  43ec67:	test   DWORD PTR [ebp-0x4a5a1def],edi
  43ec6d:	sub    eax,0xd62dbde2
  43ec72:	loope  0x43ec4d
  43ec74:	add    BYTE PTR [eax],al
  43ec76:	add    BYTE PTR ds:0x1df5e28f,ah
  43ec7c:	sahf   
  43ec7d:	jecxz  0x43ec8b
  43ec7f:	adc    al,0xb7
  43ec81:	jecxz  0x43ecb0
  43ec83:	or     al,0xdf
  43ec85:	loop   0x43ecd8
  43ec87:	add    al,0x40
  43ec89:	jecxz  0x43ed03
  43ec8b:	cld    
  43ec8c:	sub    ah,ah
  43ec8e:	lods   eax,DWORD PTR ds:[esi]
  43ec8f:	hlt    
  43ec90:	push   ebx
  43ec91:	jecxz  0x43ec92
  43ec93:	sub    al,0x9d
  43ec95:	int3   
  43ec96:	std    
  43ec97:	and    al,0x31
  43ec99:	std    
  43ec9a:	push   ebx
  43ec9c:	mov    eax,ds:0xf2e328ec
  43eca1:	repz pop ebp
  43eca3:	ret    
  43eca4:	sbb    al,0xed
  43eca6:	mov    al,bl
  43eca8:	xor    eax,0x38c3a9ed
  43ecad:	in     eax,dx
  43ecae:	(bad)
  43ecb1:	in     al,dx
  43ecb2:	add    DWORD PTR [edx],esp
  43ecb4:	add    eax,0x282286ed
  43ecb9:	out    dx,al
  43ecba:	mov    al,ds:0xe9edcc22
  43ecbf:	and    ch,BYTE PTR [esi]
  43ecc1:	out    dx,eax
  43ecc2:	nop
  43ecc3:	add    DWORD PTR [edi],eax
  43ecc5:	fwait
  43ecc6:	icebp  
  43ecc7:	xchg   cl,bl
  43ecc9:	pop    edx
  43ecca:	icebp  
  43eccb:	adc    ebx,edx
  43eccd:	push   edx
  43ecce:	lock adc bl,dl
  43ecd1:	lods   eax,DWORD PTR ds:[esi]
  43ecd2:	out    dx,eax
  43ecd3:	das    
  43ecd4:	ror    DWORD PTR [ebp-0x242bd211],cl
  43ecda:	in     al,dx
  43ecdb:	add    BYTE PTR [eax],al
  43ecdd:	add    bh,ah
  43ecdf:	aad    0xa8
  43ece1:	in     al,dx
  43ece2:	dec    edi
  43ece3:	(bad)  
  43ece4:	jo     0x43ecd2
  43ece6:	mov    dl,0xd6
  43ece8:	out    0xeb,eax
  43ecea:	out    dx,al
  43eceb:	into   
  43ecec:	xchg   edx,eax
  43eced:	jmp    0x43ed5e
  43ecef:	iret   
  43ecf0:	jno    0x43ecda
  43ecf2:	push   ecx
  43ecf3:	sar    BYTE PTR [edi-0x3349f19],cl
  43ecf9:	out    0x4a,al
  43ecfb:	int3   
  43ecfc:	(bad)
  43ecff:	int    0xb7
  43ed01:	in     eax,0x23
  43ed03:	int    0xa9
  43ed05:	in     eax,0xb2
  43ed07:	int3   
  43ed08:	sub    al,0xe2
  43ed0a:	mov    ah,0xcc
  43ed0c:	xor    dl,ah
  43ed0e:	call   0x91cd:0x84e25acc
  43ed15:	loop   0x43ed81
  43ed17:	int    0xaa
  43ed19:	loop   0x43ed53
  43ed1b:	int    0x95
  43ed1d:	loop   0x43ed62
  43ed1f:	int    0x93
  43ed21:	loop   0x43ed5a
  43ed23:	int    0xbd
  43ed25:	loop   0x43ed17
  43ed27:	int    0xd0
  43ed29:	loop   0x43ecde
  43ed2b:	int    0x74
  43ed2d:	jecxz  0x43ed78
  43ed2f:	into   
  43ed30:	jg     0x43ed15
  43ed32:	clc    
  43ed33:	int    0xe6
  43ed35:	mov    ds:0x3fa8dee,eax
  43ed3a:	repz push es
  43ed3c:	int    0xd3
  43ed3e:	sub    bh,dl
  43ed40:	inc    DWORD PTR [eax+eax*1]
  43ed43:	add    BYTE PTR [eax],al
  43ed45:	mov    edi,0xa7a52f54
  43ed4a:	(bad)  [esi]
  43ed4c:	out    0x9f,eax
  43ed4e:	pop    ecx
  43ed4f:	cs pop ds
  43ed51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed52:	dec    ecx
  43ed53:	cs mov al,0x9e
  43ed56:	sub    BYTE PTR ds:0x2d5fc57a,0x4f
  43ed5d:	mov    ebp,0xc5d62d03
  43ed62:	sub    eax,0x58bc6d2d
  43ed67:	sub    al,0x27
  43ed69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed6a:	scas   eax,DWORD PTR es:[edi]
  43ed6b:	sub    al,0xf1
  43ed6d:	pushf  
  43ed6e:	out    dx,al
  43ed6f:	xor    ebx,edi
  43ed71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed72:	push   ss
  43ed73:	xor    al,0xfd
  43ed75:	fwait
  43ed76:	out    0x32,al
  43ed78:	mov    ds:0x1432c44b,al
  43ed7d:	dec    edx
  43ed7e:	div    BYTE PTR [ecx]
  43ed80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed81:	cmp    al,BYTE PTR [ebx+0x32]
  43ed84:	cwde   
  43ed85:	cmp    dh,BYTE PTR [edi]
  43ed87:	xor    cl,BYTE PTR [ebx-0x36ce4cd6]
  43ed8d:	sub    bh,BYTE PTR [ecx]
  43ed8f:	xor    DWORD PTR [edi],edi
  43ed91:	sbb    BYTE PTR [esi+0x3519cc30],bh
  43ed97:	ss scas al,BYTE PTR es:[edi]
  43ed99:	dec    ebp
  43ed9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed9b:	xor    al,0xc4
  43ed9d:	inc    ebp
  43ed9e:	inc    esp
  43ed9f:	cmp    al,0x3a
  43eda1:	adc    edi,DWORD PTR [edi+0x19111f3b]
  43eda7:	cmp    cl,BYTE PTR [ecx+0x12000000]
  43edad:	(bad)  
  43edae:	clc    
  43edaf:	jmp    0x4a3c7914
  43edb4:	lock push es
  43edb6:	add    cl,cl
  43edb8:	and    BYTE PTR ds:0xf8c68a2e,dl
  43edbe:	sub    al,0x0
  43edc0:	shl    BYTE PTR [ebp-0x4a55ccec],cl
  43edc6:	sbb    al,0x33
  43edc8:	mov    dl,0xb5
  43edca:	and    al,0x33
  43edcc:	mov    dh,BYTE PTR [ebp-0x4bedccd4]
  43edd2:	xor    al,0x33
  43edd4:	mov    dh,BYTE PTR [ebp-0x4a6dccc4]
  43edda:	inc    esp
  43eddb:	xor    ebp,DWORD PTR [edx-0x4b]
  43edde:	xchg   DWORD PTR [ebx],esi
  43ede0:	jg     0x43ed97
  43ede2:	int3   
  43ede3:	xor    ebx,ebp
  43ede5:	mov    ah,0x22
  43ede7:	xor    al,0x98
  43ede9:	mov    ah,0x67
  43edeb:	xor    al,0x0
  43eded:	mov    ah,0x13
  43edef:	xor    eax,0x3579af4b
  43edf4:	xchg   edi,eax
  43edf5:	scas   al,BYTE PTR es:[edi]
  43edf6:	cs ss mov edi,0x6b378bad
  43edfd:	mov    al,0x15
  43edff:	cmp    BYTE PTR [eax+0x7d3925b0],bl
  43ee05:	stos   DWORD PTR es:[edi],eax
  43ee06:	mov    eax,ds:0xb9ad173b
  43ee0b:	cmp    al,0xe2
  43ee0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee0e:	fdivr  DWORD PTR ds:0x52000000
  43ee14:	lods   al,BYTE PTR ds:[esi]
  43ee15:	ins    BYTE PTR es:[edi],dx
  43ee16:	shr    BYTE PTR ds:[eax-0x5745c188],1
  43ee1d:	mov    ?,WORD PTR [esi]
  43ee1f:	sahf   
  43ee20:	test   al,0x9a
  43ee22:	sub    BYTE PTR ds:[ecx-0x5758c15a],0xb4
  43ee2a:	ds dec ecx
  43ee2c:	test   eax,0xa96b3ec2
  43ee31:	sar    BYTE PTR [esi],1
  43ee33:	sub    eax,0x6d3edfa9
  43ee38:	test   eax,0xa0f33eef
  43ee3d:	fisttp WORD PTR [ebx]
  43ee3f:	sub    al,0x8f
  43ee41:	fist   WORD PTR [eax]
  43ee43:	and    al,0xbf
  43ee45:	fbld   TBYTE PTR ds:0x3cdf531c
  43ee4b:	adc    al,0xe6
  43ee4d:	fimul  WORD PTR [ecx+0xc]
  43ee50:	neg    esi
  43ee52:	pop    edi
  43ee53:	add    al,0x9e
  43ee55:	cld    
  43ee56:	cld    
  43ee57:	mov    esp,0xf30003ed
  43ee5c:	test   al,0xcc
  43ee5e:	adc    esp,ebx
  43ee60:	in     al,0xd3
  43ee62:	shl    bl,cl
  43ee64:	(bad)  
  43ee65:	int    0x72
  43ee67:	loop   0x43ee98
  43ee69:	int    0xd8
  43ee6b:	loop   0x43eea6
  43ee6d:	int    0xf3
  43ee6f:	ret    0xd6ff
  43ee72:	inc    esp
  43ee73:	mov    esp,0x5ed7c7
  43ee78:	add    BYTE PTR [eax],al
  43ee7a:	mov    ecx,0xb996da17
  43ee7f:	mov    ebp,0x412d28de
  43ee84:	fisubr WORD PTR [esi-0x31361db]
  43ee8a:	pop    esp
  43ee8b:	test   eax,0x58f3fffc
  43ee90:	int3   
  43ee91:	pop    es
  43ee92:	add    dl,BYTE PTR [eax]
  43ee94:	into   
  43ee95:	mov    eax,0x3cd6a702
  43ee9a:	add    al,0x5c
  43ee9c:	aam    0x0
  43ee9e:	cli    
  43ee9f:	jmp    0x43ee7e
  43eea1:	loope  0x43ee8f
  43eea3:	popf   
  43eea4:	fdiv   st(4),st
  43eea6:	and    al,0x7d
  43eea8:	cld    
  43eea9:	push   ebx
  43eeab:	mov    edx,0x69e13ccd
  43eeb0:	rcl    edi,cl
  43eeb2:	sar    BYTE PTR [ecx-0x2d],0xdf
  43eeb6:	rol    BYTE PTR [esi],0x8b
  43eeb9:	aam    0x14
  43eebb:	xlat   BYTE PTR ds:[ebx]
  43eebc:	mov    dl,ah
  43eebe:	add    al,0xd7
  43eec0:	call   0xe4d4:0x8ad6e4d4
  43eec7:	(bad)  
  43eec8:	jmp    0xe4d7:0xead2f4d7
  43eecf:	rcr    dl,cl
  43eed1:	xlat   BYTE PTR ds:[ebx]
  43eed2:	in     al,0xd2
  43eed4:	retf   0xe4d7
  43eed7:	ror    BYTE PTR [edx],cl
  43eed9:	fcom   DWORD PTR [ebx+edx*8]
  43eedc:	or     bl,al
  43eede:	add    BYTE PTR [eax],al
  43eee0:	add    BYTE PTR [ebx+edx*8],al
  43eee3:	sbb    bl,al
  43eee5:	in     al,0xd2
  43eee7:	or     bl,al
  43eee9:	in     al,0xd2
  43eeeb:	stos   BYTE PTR es:[edi],al
  43eeec:	xlat   BYTE PTR ds:[ebx]
  43eeed:	xor    al,0xd3
  43eeef:	stos   BYTE PTR es:[edi],al
  43eef0:	xlat   BYTE PTR ds:[ebx]
  43eef1:	and    al,0xd3
  43eef3:	call   0x22d7:0x8ad324d7
  43eefa:	shr    BYTE PTR [ebp-0x28],cl
  43eefd:	outs   dx,BYTE PTR ds:[esi]
  43eefe:	sar    BYTE PTR [eax-0x28],cl
  43ef01:	dec    esi
  43ef02:	rcl    BYTE PTR [eax-0x28],cl
  43ef05:	cmp    al,0xd2
  43ef07:	sub    bl,al
  43ef09:	dec    ebp
  43ef0a:	shr    bh,cl
  43ef0c:	fucomi st,st(4)
  43ef0e:	into   
  43ef0f:	fcmovu st,st(3)
  43ef11:	or     al,0xcf
  43ef13:	mov    dl,0xdb
  43ef15:	mov    edx,0xd3db8cce
  43ef1a:	into   
  43ef1b:	fsubr  QWORD PTR [bp+si-0x31]
  43ef1f:	jl     0x43eefd
  43ef21:	xchg   edx,eax
  43ef22:	iret   
  43ef23:	mov    esp,ds
  43ef25:	cmp    bh,cl
  43ef27:	scas   al,BYTE PTR es:[edi]
  43ef28:	fcom   QWORD PTR [ecx]
  43ef2a:	iret   
  43ef2b:	jmp    0x43ef09
  43ef2d:	out    dx,al
  43ef2e:	iret   
  43ef2f:	fcomp  st(4)
  43ef31:	into   
  43ef32:	iret   
  43ef33:	push   esi
  43ef35:	das    
  43ef36:	cmp    dh,BYTE PTR [edi]
  43ef38:	or     eax,0x7a372126
  43ef3d:	push   ds
  43ef3e:	gs ss pop eax
  43ef41:	push   ss
  43ef42:	dec    ebp
  43ef43:	mov    BYTE PTR ss:[eax],al
  43ef46:	add    BYTE PTR [eax],al
  43ef48:	into   
  43ef49:	mov    eax,edi
  43ef4b:	jmp    0xe63c7a10
  43ef50:	lock push es
  43ef52:	add    BYTE PTR [ebx],bl
  43ef54:	mov    esp,0xaf813051
  43ef59:	test   DWORD PTR [esi],esi
  43ef5b:	push   esp
  43ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef5d:	repnz xor eax,0x35c49910
  43ef63:	ss cdq 
  43ef65:	mov    eax,edi
  43ef67:	jmp    0xaa3c7b9c
  43ef6c:	lock push es
  43ef6e:	add    BYTE PTR [edx-0x39cfcb40],ch
  43ef74:	rcl    BYTE PTR [eax],0x30
  43ef77:	cdq    
  43ef78:	mov    eax,ds:0xabf52d34
  43ef7d:	js     0x43efb1
  43ef7f:	test   BYTE PTR [edx-0x68adc7c6],bl
  43ef85:	aad    0x36
  43ef87:	mov    cl,0x4f
  43ef89:	xchg   edx,eax
  43ef8a:	test   BYTE PTR ss:[edx-0x1a],0x35
  43ef8f:	scas   eax,DWORD PTR es:[edi]
  43ef90:	cmp    dh,BYTE PTR [ebp+0x35]
  43ef93:	lahf   
  43ef94:	xor    al,0x24
  43ef96:	cmp    al,0x86
  43ef98:	sub    al,0xd
  43ef9a:	cmp    al,0xdb
  43ef9c:	and    eax,0x1c5338ec
  43efa1:	popf   
  43efa2:	cmp    cl,bl
  43efa4:	adc    eax,0xe0e9388d
  43efa9:	mov    edi,eax
  43efab:	adc    eax,0xef000000
  43efb0:	push   es
  43efb1:	add    BYTE PTR [eax],al
  43efb3:	or     dh,BYTE PTR [ebp-0x4ac5cffc]
  43efb9:	adc    al,0x30
  43efbb:	cli    
  43efbc:	mov    dl,0x24
  43efbe:	xor    BYTE PTR [edx],cl
  43efc0:	mov    ch,0x34
  43efc2:	xor    dl,cl
  43efc4:	mov    dl,0x44
  43efc6:	xor    BYTE PTR [edx-0x5cfab4e],bh
  43efcc:	mov    dl,0x64
  43efce:	xor    BYTE PTR [edx],cl
  43efd0:	mov    bl,0x74
  43efd2:	xor    BYTE PTR [edx-0x4c],cl
  43efd5:	test   BYTE PTR [eax],dh
  43efd7:	cmp    dh,BYTE PTR [esp+edx*4-0x74bc5d0]
  43efde:	(bad)  
  43efdf:	fisub  DWORD PTR [esp+edi*8]
  43efe2:	inc    DWORD PTR [esi-0x45fffffd]
  43efe8:	mov    ch,0xc
  43efea:	xor    edi,esi
  43efec:	mov    bl,0x20
  43efee:	xor    esi,esi
  43eff0:	mov    bl,0x50
  43eff2:	xor    edx,DWORD PTR [esi-0x4b]
  43eff5:	pop    eax
  43eff6:	xor    ebp,DWORD PTR [esi-0x49cc9f4b]
  43effc:	mov    ch,0x68
  43effe:	xor    edi,DWORD PTR [esi]
  43f000:	mov    ch,0x70
  43f002:	xor    edx,DWORD PTR [esi-0x4b]
  43f005:	js     0x43f03a
  43f007:	push   cs
  43f008:	mov    ch,0x80
  43f00a:	xor    edx,esi
  43f00c:	mov    ah,0x88
  43f00e:	xor    ebx,esi
  43f010:	mov    ah,0x90
  43f012:	xor    eax,DWORD PTR [eax]
  43f014:	add    BYTE PTR [eax],al
  43f016:	(bad)  
  43f017:	mov    ah,0x98
  43f019:	xor    ebp,DWORD PTR [esi-0x49cc5f4c]
  43f01f:	mov    ah,0xa8
  43f021:	xor    edi,esi
  43f023:	mov    ah,0xb0
  43f025:	xor    edx,DWORD PTR [esi-0x71cc474a]
  43f02b:	mov    dh,0xc0
  43f02d:	xor    esi,ebx
  43f02f:	popa   
  43f030:	into   
  43f031:	iret   
  43f032:	loopne 0x43f085
  43f034:	into   
  43f035:	xlat   BYTE PTR ds:[ebx]
  43f036:	loopne 0x43f099
  43f038:	into   
  43f039:	fnstsw ax
  43f03b:	ror    esi,0xe7
  43f03e:	rol    cl,0xce
  43f041:	out    dx,eax
  43f042:	rcl    BYTE PTR [ecx-0x32],0xf7
  43f046:	shl    BYTE PTR [ecx-0x32],0xff
  43f04a:	shl    BYTE PTR [ecx-0x5dd8f830],0xd0
  43f051:	nop    DWORD PTR [edx-0x5dd8e830]
  43f058:	rcr    BYTE PTR [edi],1
  43f05a:	pop    ds
  43f05b:	ret    0x27d0
  43f05e:	pop    es
  43f05f:	ret    0x2fd0
  43f062:	call   DWORD PTR [ecx-0x30]
  43f065:	aaa    
  43f066:	pop    es
  43f067:	loop   0x43f040
  43f069:	aas    
  43f06a:	jmp    DWORD PTR [ecx-0x30]
  43f06d:	inc    edi
  43f06e:	out    0x61,eax
  43f070:	ror    BYTE PTR [edi-0x21],1
  43f073:	push   ecx
  43f074:	rcl    BYTE PTR [edi-0x19],1
  43f077:	popa   
  43f078:	rcr    BYTE PTR [edi+0x0],1
  43f07b:	add    BYTE PTR [eax],al
  43f07d:	ffreep st(1)
  43f07f:	shl    BYTE PTR [edi-0x39],1
  43f082:	rcl    eax,0x6f
  43f085:	mov    edi,0xc777d051
  43f08a:	popa   
  43f08b:	sar    BYTE PTR [edi-0x41],1
  43f08e:	and    eax,ebx
  43f090:	xchg   DWORD PTR [edi],esp
  43f092:	and    bl,al
  43f094:	(bad)  
  43f095:	pop    ds
  43f096:	adc    bl,al
  43f098:	xchg   edi,eax
  43f099:	daa    
  43f09a:	and    bl,al
  43f09c:	mov    bl,0x1f
  43f09e:	loop   0x43f077
  43f0a0:	rol    DWORD PTR [edi],cl
  43f0a2:	cli    
  43f0a3:	xlat   BYTE PTR ds:[ebx]
  43f0a4:	repz jmp DWORD PTR [ecx+0x70613d1]
  43f0ab:	or     edx,edi
  43f0ad:	add    dl,dl
  43f0af:	and    dl,bh
  43f0b1:	rcl    cl,0x4a
  43f0b4:	xlat   BYTE PTR ds:[ebx]
  43f0b5:	mov    al,ds:0x80d662d1
  43f0ba:	ror    DWORD PTR [edx-0x5d2e9f2a],1
  43f0c0:	(bad)  
  43f0c1:	and    cl,dl
  43f0c3:	retf   0xd6
  43f0c6:	shl    edx,1
  43f0c8:	aad    0xe0
  43f0ca:	ror    dl,1
  43f0cc:	aad    0xc0
  43f0ce:	shl    BYTE PTR [edx],1
  43f0d0:	(bad)  
  43f0d1:	inc    eax
  43f0d2:	cmp    eax,0x3d60d60b
  43f0d7:	arpl   bp,dx
  43f0d9:	cmp    BYTE PTR ds:0x3da0d54b,0xa3
  43f0e0:	aad    0x0
  43f0e2:	add    BYTE PTR [eax],al
  43f0e4:	mov    al,ds:0xc0d58b3d
  43f0e9:	cmp    eax,0x3de0d4e3
  43f0ee:	or     edx,ebp
  43f0f0:	add    BYTE PTR [esi],bh
  43f0f2:	mov    ds:0xcb3e40d4,eax
  43f0f7:	aam    0x20
  43f0f9:	ds arpl sp,dx
  43f0fc:	cmp    BYTE PTR [esi],0x8b
  43f0ff:	aam    0x60
  43f101:	ds and edx,esp
  43f104:	mov    al,ds:0x80d44b3e
  43f109:	ds jecxz 0x43f0e7
  43f10c:	loopne 0x43f14c
  43f10e:	retf   
  43f10f:	fcmovnb st,st(0)
  43f111:	mov    ds:0x8b3ec0db,eax
  43f117:	fcmovnbe st,st(4)
  43f119:	ds xchg ebx,eax
  43f11b:	fnsetpm(287 only) 
  43f11d:	(bad)  ds:[bx+si+0x3f]
  43f122:	outs   dx,DWORD PTR ds:[esi]
  43f123:	fstp   TBYTE PTR [eax+0x3f]
  43f126:	add    BYTE PTR [ecx+0x28],bl
  43f129:	call   0x8937:0xa2185137
  43f130:	pop    ss
  43f131:	stos   BYTE PTR es:[edi],al
  43f132:	aaa    
  43f133:	xchg   ecx,eax
  43f134:	dec    edi
  43f135:	mov    dl,0x37
  43f137:	jmp    0xe943f82c
  43f13c:	lock push es
  43f13e:	add    cl,ch
  43f140:	lock push es
  43f142:	add    cl,ch
  43f144:	lock push es
  43f146:	add    cl,ch
  43f148:	add    BYTE PTR [eax],al
  43f14a:	add    al,dh
  43f14c:	push   es
  43f14d:	add    cl,ch
  43f14f:	lock push es
  43f151:	add    cl,ch
  43f153:	lock push es
  43f155:	add    cl,ch
  43f157:	lock push es
  43f159:	add    cl,ch
  43f15b:	lock push es
  43f15d:	add    cl,ch
  43f15f:	lock push es
  43f161:	add    cl,ch
  43f163:	lock push es
  43f165:	add    cl,ch
  43f167:	lock push es
  43f169:	add    cl,ch
  43f16b:	lock push es
  43f16d:	add    cl,ch
  43f16f:	lock push es
  43f171:	add    cl,ch
  43f173:	lock push es
  43f175:	add    cl,ch
  43f177:	lock push es
  43f179:	add    cl,ch
  43f17b:	lock push es
  43f17d:	add    cl,ch
  43f17f:	lock push es
  43f181:	add    cl,ch
  43f183:	lock push es
  43f185:	add    cl,ch
  43f187:	lock push es
  43f189:	add    cl,ch
  43f18b:	lock push es
  43f18d:	add    cl,ch
  43f18f:	lock push es
  43f191:	add    cl,ch
  43f193:	lock push es
  43f195:	add    cl,ch
  43f197:	lock push es
  43f199:	add    cl,ch
  43f19b:	lock push es
  43f19d:	add    cl,ch
  43f19f:	lock push es
  43f1a1:	add    BYTE PTR [eax],al
  43f1a3:	dec    edx
  43f1a4:	or     DWORD PTR [eax],eax
  43f1a6:	add    BYTE PTR [edx+0x9],bl
  43f1a9:	add    BYTE PTR [eax],al
  43f1ab:	pop    edx
  43f1ac:	or     DWORD PTR [eax],eax
  43f1ae:	add    BYTE PTR [eax],al
  43f1b0:	add    BYTE PTR [eax],al
  43f1b2:	dec    edx
  43f1b3:	or     DWORD PTR [eax],eax
  43f1b5:	add    BYTE PTR [edx+0x9],cl
  43f1b8:	add    BYTE PTR [eax],al
  43f1ba:	sbb    cl,BYTE PTR [ecx]
  43f1bc:	add    BYTE PTR [eax],al
  43f1be:	sbb    cl,BYTE PTR [ecx]
  43f1c0:	add    BYTE PTR [eax],al
  43f1c2:	or     cl,BYTE PTR [ecx]
  43f1c4:	add    BYTE PTR [eax],al
  43f1c6:	or     cl,BYTE PTR [ecx]
  43f1c8:	add    BYTE PTR [eax],al
  43f1ca:	sbb    cl,BYTE PTR [ecx]
  43f1cc:	add    BYTE PTR [eax],al
  43f1ce:	sbb    cl,BYTE PTR [ecx]
  43f1d0:	add    BYTE PTR [eax],al
  43f1d2:	or     cl,BYTE PTR [ecx]
  43f1d4:	add    BYTE PTR [eax],al
  43f1d6:	or     cl,BYTE PTR [ecx]
  43f1d8:	add    BYTE PTR [eax],al
  43f1da:	fimul  DWORD PTR [eax]
  43f1dc:	add    BYTE PTR [eax],al
  43f1de:	fimul  DWORD PTR [eax]
  43f1e0:	add    BYTE PTR [eax],al
  43f1e2:	retf   0x8
  43f1e5:	add    dl,cl
  43f1e7:	or     BYTE PTR [eax],al
  43f1e9:	add    dl,bl
  43f1eb:	or     BYTE PTR [eax],al
  43f1ed:	add    dl,bl
  43f1ef:	or     BYTE PTR [eax],al
  43f1f1:	add    dl,cl
  43f1f3:	or     BYTE PTR [eax],al
  43f1f5:	add    dl,cl
  43f1f7:	or     BYTE PTR [eax],al
  43f1f9:	add    BYTE PTR [edx-0x65fffff8],bl
  43f1ff:	or     BYTE PTR [eax],al
  43f201:	add    BYTE PTR [edx-0x75fffff8],cl
  43f207:	or     BYTE PTR [eax],al
  43f209:	add    BYTE PTR [edx-0x65fffff8],bl
  43f20f:	or     BYTE PTR [eax],al
  43f211:	add    BYTE PTR [edx+0x8],cl
  43f217:	add    BYTE PTR [eax],al
  43f219:	mov    cl,BYTE PTR [eax]
  43f21b:	add    BYTE PTR [eax],al
  43f21d:	pop    edx
  43f21e:	or     BYTE PTR [eax],al
  43f220:	add    bl,dh
  43f222:	ins    DWORD PTR es:[edi],dx
  43f223:	cld    
  43f224:	push   ebx
  43f226:	ins    DWORD PTR es:[edi],dx
  43f227:	cld    
  43f228:	push   ebx
  43f22a:	ins    DWORD PTR es:[edi],dx
  43f22b:	cld    
  43f22c:	push   ebx
  43f22e:	ins    DWORD PTR es:[edi],dx
  43f22f:	cld    
  43f230:	push   ebx
  43f232:	ins    DWORD PTR es:[edi],dx
  43f233:	cld    
  43f234:	push   ebx
  43f236:	ins    DWORD PTR es:[edi],dx
  43f237:	cld    
  43f238:	push   ebx
  43f23a:	ins    DWORD PTR es:[edi],dx
  43f23b:	cld    
  43f23c:	push   ebx
  43f23e:	ins    DWORD PTR es:[edi],dx
  43f23f:	cld    
  43f240:	push   ebx
  43f242:	ins    DWORD PTR es:[edi],dx
  43f243:	cld    
  43f244:	push   ebx
  43f246:	ins    DWORD PTR es:[edi],dx
  43f247:	cld    
  43f248:	push   ebx
  43f24a:	ins    DWORD PTR es:[edi],dx
  43f24b:	cld    
  43f24c:	push   ebx
  43f24e:	ins    DWORD PTR es:[edi],dx
  43f24f:	cld    
  43f250:	push   ebx
  43f252:	ins    DWORD PTR es:[edi],dx
  43f253:	cld    
  43f254:	push   ebx
  43f256:	ins    DWORD PTR es:[edi],dx
  43f257:	cld    
  43f258:	push   ebx
  43f25a:	ins    DWORD PTR es:[edi],dx
  43f25b:	cld    
  43f25c:	push   ebx
  43f25e:	ins    DWORD PTR es:[edi],dx
  43f25f:	cld    
  43f260:	push   ebx
  43f262:	ins    DWORD PTR es:[edi],dx
  43f263:	cld    
  43f264:	push   ebx
  43f266:	ins    DWORD PTR es:[edi],dx
  43f267:	cld    
  43f268:	push   ebx
  43f26a:	ins    DWORD PTR es:[edi],dx
  43f26b:	cld    
  43f26c:	push   ebx
  43f26e:	ins    DWORD PTR es:[edi],dx
  43f26f:	cld    
  43f270:	push   ebx
  43f272:	ins    DWORD PTR es:[edi],dx
  43f273:	cld    
  43f274:	push   ebx
  43f276:	ins    DWORD PTR es:[edi],dx
  43f277:	cld    
  43f278:	push   ebx
  43f27a:	ins    DWORD PTR es:[edi],dx
  43f27b:	cld    
  43f27c:	inc    DWORD PTR [eax]
  43f27e:	add    BYTE PTR [eax],al
  43f280:	rep ins DWORD PTR es:[edi],dx
  43f282:	cld    
  43f283:	push   ebx
  43f285:	ins    DWORD PTR es:[edi],dx
  43f286:	cld    
  43f287:	push   ebx
  43f289:	ins    DWORD PTR es:[edi],dx
  43f28a:	cld    
  43f28b:	push   ebx
  43f28d:	ins    DWORD PTR es:[edi],dx
  43f28e:	cld    
  43f28f:	push   ebx
  43f291:	ins    DWORD PTR es:[edi],dx
  43f292:	cld    
  43f293:	push   ebx
  43f295:	ins    DWORD PTR es:[edi],dx
  43f296:	cld    
  43f297:	push   ebx
  43f299:	ins    DWORD PTR es:[edi],dx
  43f29a:	cld    
  43f29b:	push   ebx
  43f29d:	push   es
  43f29e:	out    0x3,eax
  43f2a0:	repz push es
  43f2a2:	out    0x3,eax
  43f2a4:	repz push es
  43f2a6:	out    0x3,eax
  43f2a8:	repz push es
  43f2aa:	out    0x3,eax
  43f2ac:	repz push es
  43f2ae:	out    0x3,eax
  43f2b0:	repz push es
  43f2b2:	out    0x3,eax
  43f2b4:	repz push es
  43f2b6:	out    0x3,eax
  43f2b8:	repz push es
  43f2ba:	out    0x3,eax
  43f2bc:	repz push es
  43f2be:	out    0x3,eax
  43f2c0:	repz push es
  43f2c2:	out    0x3,eax
  43f2c4:	repz push es
  43f2c6:	out    0x3,eax
  43f2c8:	repz push es
  43f2ca:	out    0x3,eax
  43f2cc:	repz push es
  43f2ce:	out    0x3,eax
  43f2d0:	repz push es
  43f2d2:	out    0x3,eax
  43f2d4:	repz push es
  43f2d6:	out    0x3,eax
  43f2d8:	repz push es
  43f2da:	out    0x3,eax
  43f2dc:	repz push es
  43f2de:	out    0x3,eax
  43f2e0:	repz push es
  43f2e2:	out    0x3,eax
  43f2e4:	add    BYTE PTR [eax],al
  43f2e6:	add    bl,dh
  43f2e8:	push   es
  43f2e9:	out    0x3,eax
  43f2eb:	repz push es
  43f2ed:	out    0x3,eax
  43f2ef:	repz push es
  43f2f1:	out    0x3,eax
  43f2f3:	repz push es
  43f2f5:	out    0x3,eax
  43f2f7:	repz push es
  43f2f9:	out    0x3,eax
  43f2fb:	repz push es
  43f2fd:	out    0x3,eax
  43f2ff:	repz push es
  43f301:	out    0x3,eax
  43f303:	repz push es
  43f305:	out    0x3,eax
  43f307:	repz push es
  43f309:	out    0x3,eax
  43f30b:	repz push es
  43f30d:	out    0x3,eax
  43f30f:	repz push es
  43f311:	out    0x3,eax
  43f313:	repz push es
  43f315:	out    0x3,eax
  43f317:	repz push es
  43f319:	add    cl,ch
  43f31b:	lock push es
  43f31d:	add    cl,ch
  43f31f:	lock push es
  43f321:	add    cl,ch
  43f323:	lock push es
  43f325:	add    cl,ch
  43f327:	lock push es
  43f329:	add    cl,ch
  43f32b:	lock push es
  43f32d:	add    cl,ch
  43f32f:	lock push es
  43f331:	add    cl,ch
  43f333:	lock push es
  43f335:	add    cl,ch
  43f337:	lock push es
  43f339:	add    cl,ch
  43f33b:	lock push es
  43f33d:	add    cl,ch
  43f33f:	lock push es
  43f341:	add    cl,ch
  43f343:	lock push es
  43f345:	add    cl,ch
  43f347:	lock push es
  43f349:	add    cl,ch
  43f34b:	add    BYTE PTR [eax],al
  43f34d:	add    al,dh
  43f34f:	push   es
  43f350:	add    cl,ch
  43f352:	lock push es
  43f354:	add    cl,ch
  43f356:	lock push es
  43f358:	add    cl,ch
  43f35a:	lock push es
  43f35c:	add    cl,ch
  43f35e:	lock push es
  43f360:	add    cl,ch
  43f362:	lock push es
  43f364:	add    cl,ch
  43f366:	lock push es
  43f368:	add    cl,ch
  43f36a:	lock push es
  43f36c:	add    cl,ch
  43f36e:	lock push es
  43f370:	add    cl,ch
  43f372:	lock push es
  43f374:	add    cl,ch
  43f376:	lock push es
  43f378:	add    cl,ch
  43f37a:	lock push es
  43f37c:	add    cl,ch
  43f37e:	lock push es
  43f380:	add    cl,ch
  43f382:	lock push es
  43f384:	add    cl,ch
  43f386:	lock push es
  43f388:	add    cl,ch
  43f38a:	lock push es
  43f38c:	add    cl,ch
  43f38e:	lock push es
  43f390:	add    cl,ch
  43f392:	lock push es
  43f394:	add    BYTE PTR [eax],al
  43f396:	call   0x5:0x9a000005
  43f39d:	add    BYTE PTR [edx-0x75fffffb],cl
  43f3a3:	add    eax,0x55a0000
  43f3a8:	add    BYTE PTR [eax],al
  43f3aa:	pop    edx
  43f3ab:	add    eax,0x54a0000
  43f3b0:	add    BYTE PTR [eax],al
  43f3b2:	add    BYTE PTR [eax],al
  43f3b4:	add    BYTE PTR [edx+0x5],cl
  43f3b7:	add    BYTE PTR [eax],al
  43f3b9:	pop    edx
  43f3ba:	add    eax,0x55a0000
  43f3bf:	add    BYTE PTR [eax],al
  43f3c1:	dec    edx
  43f3c2:	add    eax,0x54a0000
  43f3c7:	add    BYTE PTR [eax],al
  43f3c9:	sbb    al,BYTE PTR ds:0x51a0000
  43f3cf:	add    BYTE PTR [eax],al
  43f3d1:	or     al,BYTE PTR ds:0x50a0000
  43f3d7:	add    BYTE PTR [eax],al
  43f3d9:	sbb    al,BYTE PTR ds:0x51a0000
  43f3df:	add    BYTE PTR [eax],al
  43f3e1:	or     al,BYTE PTR ds:0x50a0000
  43f3e7:	add    BYTE PTR [eax],al
  43f3e9:	fiadd  DWORD PTR [eax+eax*1]
  43f3ec:	add    dl,bl
  43f3ee:	add    al,0x0
  43f3f0:	add    dl,cl
  43f3f2:	add    al,0x0
  43f3f4:	add    dl,cl
  43f3f6:	add    al,0x0
  43f3f8:	add    dl,bl
  43f3fa:	add    al,0x0
  43f3fc:	add    dl,bl
  43f3fe:	add    al,0x0
  43f400:	add    dl,cl
  43f402:	add    al,0x0
  43f404:	add    dl,cl
  43f406:	add    al,0x0
  43f408:	add    BYTE PTR [edx-0x65fffffc],bl
  43f40e:	add    al,0x0
  43f410:	add    bl,dh
  43f412:	ins    DWORD PTR es:[edi],dx
  43f413:	cld    
  43f414:	push   ebx
  43f416:	ins    DWORD PTR es:[edi],dx
  43f417:	cld    
  43f418:	inc    DWORD PTR [eax]
  43f41a:	add    BYTE PTR [eax],al
  43f41c:	rep ins DWORD PTR es:[edi],dx
  43f41e:	cld    
  43f41f:	push   ebx
  43f421:	ins    DWORD PTR es:[edi],dx
  43f422:	cld    
  43f423:	push   ebx
  43f425:	ins    DWORD PTR es:[edi],dx
  43f426:	cld    
  43f427:	push   ebx
  43f429:	ins    DWORD PTR es:[edi],dx
  43f42a:	cld    
  43f42b:	push   ebx
  43f42d:	ins    DWORD PTR es:[edi],dx
  43f42e:	cld    
  43f42f:	push   ebx
  43f431:	ins    DWORD PTR es:[edi],dx
  43f432:	cld    
  43f433:	push   ebx
  43f435:	ins    DWORD PTR es:[edi],dx
  43f436:	cld    
  43f437:	push   ebx
  43f439:	ins    DWORD PTR es:[edi],dx
  43f43a:	cld    
  43f43b:	push   ebx
  43f43d:	ins    DWORD PTR es:[edi],dx
  43f43e:	cld    
  43f43f:	push   ebx
  43f441:	ins    DWORD PTR es:[edi],dx
  43f442:	cld    
  43f443:	push   ebx
  43f445:	ins    DWORD PTR es:[edi],dx
  43f446:	cld    
  43f447:	push   ebx
  43f449:	ins    DWORD PTR es:[edi],dx
  43f44a:	cld    
  43f44b:	push   ebx
  43f44d:	ins    DWORD PTR es:[edi],dx
  43f44e:	cld    
  43f44f:	push   ebx
  43f451:	ins    DWORD PTR es:[edi],dx
  43f452:	cld    
  43f453:	push   ebx
  43f455:	ins    DWORD PTR es:[edi],dx
  43f456:	cld    
  43f457:	push   ebx
  43f459:	ins    DWORD PTR es:[edi],dx
  43f45a:	cld    
  43f45b:	push   ebx
  43f45d:	ins    DWORD PTR es:[edi],dx
  43f45e:	cld    
  43f45f:	push   ebx
  43f461:	ins    DWORD PTR es:[edi],dx
  43f462:	cld    
  43f463:	push   ebx
  43f465:	ins    DWORD PTR es:[edi],dx
  43f466:	cld    
  43f467:	push   ebx
  43f469:	ins    DWORD PTR es:[edi],dx
  43f46a:	cld    
  43f46b:	push   ebx
  43f46d:	ins    DWORD PTR es:[edi],dx
  43f46e:	cld    
  43f46f:	push   ebx
  43f471:	ins    DWORD PTR es:[edi],dx
  43f472:	cld    
  43f473:	push   ebx
  43f475:	ins    DWORD PTR es:[edi],dx
  43f476:	cld    
  43f477:	push   ebx
  43f479:	ins    DWORD PTR es:[edi],dx
  43f47a:	cld    
  43f47b:	push   ebx
  43f47d:	ins    DWORD PTR es:[edi],dx
  43f47e:	cld    
  43f47f:	inc    DWORD PTR [eax]
  43f481:	add    BYTE PTR [eax],al
  43f483:	rep ins DWORD PTR es:[edi],dx
  43f485:	cld    
  43f486:	push   ebx
  43f488:	ins    DWORD PTR es:[edi],dx
  43f489:	cld    
  43f48a:	push   ebx
  43f48c:	ins    DWORD PTR es:[edi],dx
  43f48d:	cld    
  43f48e:	push   ebx
  43f490:	push   es
  43f491:	out    0x3,eax
  43f493:	repz push es
  43f495:	out    0x3,eax
  43f497:	repz push es
  43f499:	out    0x3,eax
  43f49b:	repz push es
  43f49d:	out    0x3,eax
  43f49f:	repz push es
  43f4a1:	out    0x3,eax
  43f4a3:	repz push es
  43f4a5:	out    0x3,eax
  43f4a7:	repz push es
  43f4a9:	out    0x3,eax
  43f4ab:	repz push es
  43f4ad:	out    0x3,eax
  43f4af:	repz push es
  43f4b1:	out    0x3,eax
  43f4b3:	repz push es
  43f4b5:	out    0x3,eax
  43f4b7:	repz push es
  43f4b9:	out    0x3,eax
  43f4bb:	repz push es
  43f4bd:	out    0x3,eax
  43f4bf:	repz push es
  43f4c1:	out    0x3,eax
  43f4c3:	repz push es
  43f4c5:	out    0x3,eax
  43f4c7:	repz push es
  43f4c9:	out    0x3,eax
  43f4cb:	repz push es
  43f4cd:	out    0x3,eax
  43f4cf:	repz push es
  43f4d1:	out    0x3,eax
  43f4d3:	repz push es
  43f4d5:	out    0x3,eax
  43f4d7:	repz push es
  43f4d9:	out    0x3,eax
  43f4db:	repz push es
  43f4dd:	out    0x3,eax
  43f4df:	repz push es
  43f4e1:	out    0x3,eax
  43f4e3:	repz push es
  43f4e5:	out    0x3,eax
  43f4e7:	add    BYTE PTR [eax],al
  43f4e9:	add    bl,dh
  43f4eb:	push   es
  43f4ec:	out    0x3,eax
  43f4ee:	repz push es
  43f4f0:	out    0x3,eax
  43f4f2:	repz push es
  43f4f4:	out    0x3,eax
  43f4f6:	repz push es
  43f4f8:	out    0x3,eax
  43f4fa:	repz push es
  43f4fc:	out    0x3,eax
  43f4fe:	repz push es
  43f500:	out    0x3,eax
  43f502:	repz push es
  43f504:	out    0x3,eax
  43f506:	repz push es
  43f508:	out    0x3,eax
  43f50a:	repz push es
  43f50c:	add    cl,ch
  43f50e:	lock push es
  43f510:	add    cl,ch
  43f512:	lock push es
  43f514:	add    cl,ch
  43f516:	lock push es
  43f518:	add    cl,ch
  43f51a:	lock push es
  43f51c:	add    cl,ch
  43f51e:	lock push es
  43f520:	add    cl,ch
  43f522:	lock push es
  43f524:	add    cl,ch
  43f526:	lock push es
  43f528:	add    cl,ch
  43f52a:	lock push es
  43f52c:	add    cl,ch
  43f52e:	lock push es
  43f530:	add    cl,ch
  43f532:	lock push es
  43f534:	add    cl,ch
  43f536:	lock push es
  43f538:	add    cl,ch
  43f53a:	lock push es
  43f53c:	add    cl,ch
  43f53e:	lock push es
  43f540:	add    cl,ch
  43f542:	lock push es
  43f544:	add    cl,ch
  43f546:	lock push es
  43f548:	add    cl,ch
  43f54a:	lock push es
  43f54c:	add    cl,ch
  43f54e:	add    BYTE PTR [eax],al
  43f550:	add    al,dh
  43f552:	push   es
  43f553:	add    cl,ch
  43f555:	lock push es
  43f557:	add    cl,ch
  43f559:	lock push es
  43f55b:	add    cl,ch
  43f55d:	lock push es
  43f55f:	add    cl,ch
  43f561:	lock push es
  43f563:	add    cl,ch
  43f565:	lock push es
  43f567:	add    cl,ch
  43f569:	lock push es
  43f56b:	add    cl,ch
  43f56d:	lock push es
  43f56f:	add    cl,ch
  43f571:	lock push es
  43f573:	add    cl,ch
  43f575:	lock push es
  43f577:	add    cl,ch
  43f579:	lock push es
  43f57b:	add    cl,ch
  43f57d:	lock push es
  43f57f:	add    cl,ch
  43f581:	lock push es
  43f583:	add    cl,ch
  43f585:	lock push es
  43f587:	add    BYTE PTR [eax],al
  43f589:	fimul  DWORD PTR [ecx]
  43f58b:	add    BYTE PTR [eax],al
  43f58d:	retf   0x9
  43f590:	add    dl,cl
  43f592:	or     DWORD PTR [eax],eax
  43f594:	add    BYTE PTR [edx-0x65fffff7],bl
  43f59a:	or     DWORD PTR [eax],eax
  43f59c:	add    BYTE PTR [edx-0x75fffff7],cl
  43f5a2:	or     DWORD PTR [eax],eax
  43f5a4:	add    BYTE PTR [edx-0x65fffff7],bl
  43f5aa:	or     DWORD PTR [eax],eax
  43f5ac:	add    BYTE PTR [edx-0x75fffff7],cl
  43f5b2:	or     DWORD PTR [eax],eax
  43f5b4:	add    BYTE PTR [eax],al
  43f5b6:	add    BYTE PTR [eax],al
  43f5b8:	pop    edx
  43f5b9:	or     DWORD PTR [eax],eax
  43f5bb:	add    BYTE PTR [edx+0x9],bl
  43f5be:	add    BYTE PTR [eax],al
  43f5c0:	dec    edx
  43f5c1:	or     DWORD PTR [eax],eax
  43f5c3:	add    BYTE PTR [edx+0x9],cl
  43f5c6:	add    BYTE PTR [eax],al
  43f5c8:	pop    edx
  43f5c9:	or     DWORD PTR [eax],eax
  43f5cb:	add    BYTE PTR [edx+0x9],bl
  43f5ce:	add    BYTE PTR [eax],al
  43f5d0:	dec    edx
  43f5d1:	or     DWORD PTR [eax],eax
  43f5d3:	add    BYTE PTR [edx+0x9],cl
  43f5d6:	add    BYTE PTR [eax],al
  43f5d8:	sbb    cl,BYTE PTR [ecx]
  43f5da:	add    BYTE PTR [eax],al
  43f5dc:	sbb    cl,BYTE PTR [ecx]
  43f5de:	add    BYTE PTR [eax],al
  43f5e0:	or     cl,BYTE PTR [ecx]
  43f5e2:	add    BYTE PTR [eax],al
  43f5e4:	or     cl,BYTE PTR [ecx]
  43f5e6:	add    BYTE PTR [eax],al
  43f5e8:	sbb    cl,BYTE PTR [ecx]
  43f5ea:	add    BYTE PTR [eax],al
  43f5ec:	sbb    cl,BYTE PTR [ecx]
  43f5ee:	add    BYTE PTR [eax],al
  43f5f0:	or     cl,BYTE PTR [ecx]
  43f5f2:	add    BYTE PTR [eax],al
  43f5f4:	or     cl,BYTE PTR [ecx]
  43f5f6:	add    BYTE PTR [eax],al
  43f5f8:	fimul  DWORD PTR [eax]
  43f5fa:	add    BYTE PTR [eax],al
  43f5fc:	fimul  DWORD PTR [eax]
  43f5fe:	add    BYTE PTR [eax],al
  43f600:	retf   0x8
  43f603:	add    bl,dh
  43f605:	ins    DWORD PTR es:[edi],dx
  43f606:	cld    
  43f607:	push   ebx
  43f609:	ins    DWORD PTR es:[edi],dx
  43f60a:	cld    
  43f60b:	push   ebx
  43f60d:	ins    DWORD PTR es:[edi],dx
  43f60e:	cld    
  43f60f:	push   ebx
  43f611:	ins    DWORD PTR es:[edi],dx
  43f612:	cld    
  43f613:	push   ebx
  43f615:	ins    DWORD PTR es:[edi],dx
  43f616:	cld    
  43f617:	push   ebx
  43f619:	ins    DWORD PTR es:[edi],dx
  43f61a:	cld    
  43f61b:	inc    DWORD PTR [eax]
  43f61d:	add    BYTE PTR [eax],al
  43f61f:	rep ins DWORD PTR es:[edi],dx
  43f621:	cld    
  43f622:	push   ebx
  43f624:	ins    DWORD PTR es:[edi],dx
  43f625:	cld    
  43f626:	push   ebx
  43f628:	ins    DWORD PTR es:[edi],dx
  43f629:	cld    
  43f62a:	push   ebx
  43f62c:	ins    DWORD PTR es:[edi],dx
  43f62d:	cld    
  43f62e:	push   ebx
  43f630:	ins    DWORD PTR es:[edi],dx
  43f631:	cld    
  43f632:	push   ebx
  43f634:	ins    DWORD PTR es:[edi],dx
  43f635:	cld    
  43f636:	push   ebx
  43f638:	ins    DWORD PTR es:[edi],dx
  43f639:	cld    
  43f63a:	push   ebx
  43f63c:	ins    DWORD PTR es:[edi],dx
  43f63d:	cld    
  43f63e:	push   ebx
  43f640:	ins    DWORD PTR es:[edi],dx
  43f641:	cld    
  43f642:	push   ebx
  43f644:	ins    DWORD PTR es:[edi],dx
  43f645:	cld    
  43f646:	push   ebx
  43f648:	ins    DWORD PTR es:[edi],dx
  43f649:	cld    
  43f64a:	push   ebx
  43f64c:	ins    DWORD PTR es:[edi],dx
  43f64d:	cld    
  43f64e:	push   ebx
  43f650:	ins    DWORD PTR es:[edi],dx
  43f651:	cld    
  43f652:	push   ebx
  43f654:	ins    DWORD PTR es:[edi],dx
  43f655:	cld    
  43f656:	push   ebx
  43f658:	ins    DWORD PTR es:[edi],dx
  43f659:	cld    
  43f65a:	push   ebx
  43f65c:	ins    DWORD PTR es:[edi],dx
  43f65d:	cld    
  43f65e:	push   ebx
  43f660:	ins    DWORD PTR es:[edi],dx
  43f661:	cld    
  43f662:	push   ebx
  43f664:	ins    DWORD PTR es:[edi],dx
  43f665:	cld    
  43f666:	push   ebx
  43f668:	ins    DWORD PTR es:[edi],dx
  43f669:	cld    
  43f66a:	push   ebx
  43f66c:	ins    DWORD PTR es:[edi],dx
  43f66d:	cld    
  43f66e:	push   ebx
  43f670:	ins    DWORD PTR es:[edi],dx
  43f671:	cld    
  43f672:	push   ebx
  43f674:	ins    DWORD PTR es:[edi],dx
  43f675:	cld    
  43f676:	push   ebx
  43f678:	ins    DWORD PTR es:[edi],dx
  43f679:	cld    
  43f67a:	push   ebx
  43f67c:	ins    DWORD PTR es:[edi],dx
  43f67d:	cld    
  43f67e:	push   ebx
  43f680:	push   es
  43f681:	out    0x3,eax
  43f683:	add    BYTE PTR [eax],al
  43f685:	add    bl,dh
  43f687:	push   es
  43f688:	out    0x3,eax
  43f68a:	repz push es
  43f68c:	out    0x3,eax
  43f68e:	repz push es
  43f690:	out    0x3,eax
  43f692:	repz push es
  43f694:	out    0x3,eax
  43f696:	repz push es
  43f698:	out    0x3,eax
  43f69a:	repz push es
  43f69c:	out    0x3,eax
  43f69e:	repz push es
  43f6a0:	out    0x3,eax
  43f6a2:	repz push es
  43f6a4:	out    0x3,eax
  43f6a6:	repz push es
  43f6a8:	out    0x3,eax
  43f6aa:	repz push es
  43f6ac:	out    0x3,eax
  43f6ae:	repz push es
  43f6b0:	out    0x3,eax
  43f6b2:	repz push es
  43f6b4:	out    0x3,eax
  43f6b6:	repz push es
  43f6b8:	out    0x3,eax
  43f6ba:	repz push es
  43f6bc:	out    0x3,eax
  43f6be:	repz push es
  43f6c0:	out    0x3,eax
  43f6c2:	repz push es
  43f6c4:	out    0x3,eax
  43f6c6:	repz push es
  43f6c8:	out    0x3,eax
  43f6ca:	repz push es
  43f6cc:	out    0x3,eax
  43f6ce:	repz push es
  43f6d0:	out    0x3,eax
  43f6d2:	repz push es
  43f6d4:	out    0x3,eax
  43f6d6:	repz push es
  43f6d8:	out    0x3,eax
  43f6da:	repz push es
  43f6dc:	out    0x3,eax
  43f6de:	repz push es
  43f6e0:	out    0x3,eax
  43f6e2:	repz push es
  43f6e4:	out    0x3,eax
  43f6e6:	repz push es
  43f6e8:	out    0x3,eax
  43f6ea:	add    BYTE PTR [eax],al
  43f6ec:	add    bl,dh
  43f6ee:	push   es
  43f6ef:	out    0x3,eax
  43f6f1:	repz push es
  43f6f3:	out    0x3,eax
  43f6f5:	repz push es
  43f6f7:	out    0x3,eax
  43f6f9:	repz push es
  43f6fb:	out    0x3,eax
  43f6fd:	repz push es
  43f6ff:	add    cl,ch
  43f701:	lock push es
  43f703:	add    cl,ch
  43f705:	lock push es
  43f707:	add    cl,ch
  43f709:	lock push es
  43f70b:	add    cl,ch
  43f70d:	lock push es
  43f70f:	add    cl,ch
  43f711:	lock push es
  43f713:	add    cl,ch
  43f715:	lock push es
  43f717:	add    cl,ch
  43f719:	lock push es
  43f71b:	add    cl,ch
  43f71d:	lock push es
  43f71f:	add    cl,ch
  43f721:	lock push es
  43f723:	add    cl,ch
  43f725:	lock push es
  43f727:	add    cl,ch
  43f729:	lock push es
  43f72b:	add    cl,ch
  43f72d:	lock push es
  43f72f:	add    cl,ch
  43f731:	lock push es
  43f733:	add    cl,ch
  43f735:	lock push es
  43f737:	add    cl,ch
  43f739:	lock push es
  43f73b:	add    cl,ch
  43f73d:	lock push es
  43f73f:	add    cl,ch
  43f741:	lock push es
  43f743:	add    cl,ch
  43f745:	lock push es
  43f747:	add    cl,ch
  43f749:	lock push es
  43f74b:	add    cl,ch
  43f74d:	lock push es
  43f74f:	add    cl,ch
  43f751:	add    BYTE PTR [eax],al
  43f753:	add    al,dh
  43f755:	push   es
  43f756:	add    cl,ch
  43f758:	lock push es
  43f75a:	add    cl,ch
  43f75c:	lock push es
  43f75e:	add    cl,ch
  43f760:	lock push es
  43f762:	add    cl,ch
  43f764:	lock push es
  43f766:	add    cl,ch
  43f768:	lock push es
  43f76a:	add    cl,ch
  43f76c:	lock push es
  43f76e:	add    cl,ch
  43f770:	lock push es
  43f772:	add    cl,ch
  43f774:	lock push es
  43f776:	add    cl,ch
  43f778:	lock push es
  43f77a:	add    BYTE PTR [eax],al
  43f77c:	or     al,BYTE PTR [esi]
  43f77e:	add    BYTE PTR [eax],al
  43f780:	or     al,BYTE PTR [esi]
  43f782:	add    BYTE PTR [eax],al
  43f784:	fiadd  DWORD PTR ds:0x5da0000
  43f78a:	add    BYTE PTR [eax],al
  43f78c:	retf   0x5
  43f78f:	add    dl,cl
  43f791:	add    eax,0x5da0000
  43f796:	add    BYTE PTR [eax],al
  43f798:	fiadd  DWORD PTR ds:0x5ca0000
  43f79e:	add    BYTE PTR [eax],al
  43f7a0:	retf   0x5
  43f7a3:	add    BYTE PTR [edx-0x65fffffb],bl
  43f7a9:	add    eax,0x58a0000
  43f7ae:	add    BYTE PTR [eax],al
  43f7b0:	mov    al,BYTE PTR ds:0x59a0000
  43f7b6:	add    BYTE PTR [eax],al
  43f7b8:	add    BYTE PTR [eax],al
  43f7ba:	add    BYTE PTR [edx-0x75fffffb],bl
  43f7c0:	add    eax,0x58a0000
  43f7c5:	add    BYTE PTR [eax],al
  43f7c7:	pop    edx
  43f7c8:	add    eax,0x55a0000
  43f7cd:	add    BYTE PTR [eax],al
  43f7cf:	dec    edx
  43f7d0:	add    eax,0x54a0000
  43f7d5:	add    BYTE PTR [eax],al
  43f7d7:	pop    edx
  43f7d8:	add    eax,0x55a0000
  43f7dd:	add    BYTE PTR [eax],al
  43f7df:	dec    edx
  43f7e0:	add    eax,0x54a0000
  43f7e5:	add    BYTE PTR [eax],al
  43f7e7:	sbb    al,BYTE PTR ds:0x51a0000
  43f7ed:	add    BYTE PTR [eax],al
  43f7ef:	or     al,BYTE PTR ds:0x50a0000
  43f7f5:	add    BYTE PTR [eax],al
  43f7f7:	rep outs dx,DWORD PTR ds:[esi]
  43f7f9:	cld    
  43f7fa:	push   ebx
  43f7fc:	outs   dx,DWORD PTR ds:[esi]
  43f7fd:	cld    
  43f7fe:	push   ebx
  43f800:	outs   dx,DWORD PTR ds:[esi]
  43f801:	cld    
  43f802:	push   ebx
  43f804:	outs   dx,DWORD PTR ds:[esi]
  43f805:	cld    
  43f806:	push   ebx
  43f808:	ins    DWORD PTR es:[edi],dx
  43f809:	cld    
  43f80a:	push   ebx
  43f80c:	ins    DWORD PTR es:[edi],dx
  43f80d:	cld    
  43f80e:	push   ebx
  43f810:	ins    DWORD PTR es:[edi],dx
  43f811:	cld    
  43f812:	push   ebx
  43f814:	ins    DWORD PTR es:[edi],dx
  43f815:	cld    
  43f816:	push   ebx
  43f818:	ins    DWORD PTR es:[edi],dx
  43f819:	cld    
  43f81a:	push   ebx
  43f81c:	ins    DWORD PTR es:[edi],dx
  43f81d:	cld    
  43f81e:	inc    DWORD PTR [eax]
  43f820:	add    BYTE PTR [eax],al
  43f822:	rep ins DWORD PTR es:[edi],dx
  43f824:	cld    
  43f825:	push   ebx
  43f827:	ins    DWORD PTR es:[edi],dx
  43f828:	cld    
  43f829:	push   ebx
  43f82b:	ins    DWORD PTR es:[edi],dx
  43f82c:	cld    
  43f82d:	push   ebx
  43f82f:	ins    DWORD PTR es:[edi],dx
  43f830:	cld    
  43f831:	push   ebx
  43f833:	ins    DWORD PTR es:[edi],dx
  43f834:	cld    
  43f835:	push   ebx
  43f837:	ins    DWORD PTR es:[edi],dx
  43f838:	cld    
  43f839:	push   ebx
  43f83b:	ins    DWORD PTR es:[edi],dx
  43f83c:	cld    
  43f83d:	push   ebx
  43f83f:	ins    DWORD PTR es:[edi],dx
  43f840:	cld    
  43f841:	push   ebx
  43f843:	ins    DWORD PTR es:[edi],dx
  43f844:	cld    
  43f845:	push   ebx
  43f847:	ins    DWORD PTR es:[edi],dx
  43f848:	cld    
  43f849:	push   ebx
  43f84b:	ins    DWORD PTR es:[edi],dx
  43f84c:	cld    
  43f84d:	push   ebx
  43f84f:	ins    DWORD PTR es:[edi],dx
  43f850:	cld    
  43f851:	push   ebx
  43f853:	ins    DWORD PTR es:[edi],dx
  43f854:	cld    
  43f855:	push   ebx
  43f857:	ins    DWORD PTR es:[edi],dx
  43f858:	cld    
  43f859:	push   ebx
  43f85b:	ins    DWORD PTR es:[edi],dx
  43f85c:	cld    
  43f85d:	push   ebx
  43f85f:	ins    DWORD PTR es:[edi],dx
  43f860:	cld    
  43f861:	push   ebx
  43f863:	ins    DWORD PTR es:[edi],dx
  43f864:	cld    
  43f865:	push   ebx
  43f867:	ins    DWORD PTR es:[edi],dx
  43f868:	cld    
  43f869:	push   ebx
  43f86b:	ins    DWORD PTR es:[edi],dx
  43f86c:	cld    
  43f86d:	push   ebx
  43f86f:	ins    DWORD PTR es:[edi],dx
  43f870:	cld    
  43f871:	push   ebx
  43f873:	push   es
  43f874:	out    0x3,eax
  43f876:	repz push es
  43f878:	out    0x3,eax
  43f87a:	repz push es
  43f87c:	out    0x3,eax
  43f87e:	repz push es
  43f880:	out    0x3,eax
  43f882:	repz push es
  43f884:	out    0x3,eax
  43f886:	add    BYTE PTR [eax],al
  43f888:	add    bl,dh
  43f88a:	push   es
  43f88b:	out    0x3,eax
  43f88d:	repz push es
  43f88f:	out    0x3,eax
  43f891:	repz push es
  43f893:	out    0x3,eax
  43f895:	repz push es
  43f897:	out    0x3,eax
  43f899:	repz push es
  43f89b:	out    0x3,eax
  43f89d:	repz push es
  43f89f:	out    0x3,eax
  43f8a1:	repz push es
  43f8a3:	out    0x3,eax
  43f8a5:	repz push es
  43f8a7:	out    0x3,eax
  43f8a9:	repz push es
  43f8ab:	out    0x3,eax
  43f8ad:	repz push es
  43f8af:	out    0x3,eax
  43f8b1:	repz push es
  43f8b3:	out    0x3,eax
  43f8b5:	repz push es
  43f8b7:	out    0x3,eax
  43f8b9:	repz push es
  43f8bb:	out    0x3,eax
  43f8bd:	repz push es
  43f8bf:	out    0x3,eax
  43f8c1:	repz push es
  43f8c3:	out    0x3,eax
  43f8c5:	repz push es
  43f8c7:	out    0x3,eax
  43f8c9:	repz push es
  43f8cb:	out    0x3,eax
  43f8cd:	repz push es
  43f8cf:	out    0x3,eax
  43f8d1:	repz push es
  43f8d3:	out    0x3,eax
  43f8d5:	repz push es
  43f8d7:	out    0x3,eax
  43f8d9:	repz push es
  43f8db:	out    0x3,eax
  43f8dd:	repz push es
  43f8df:	out    0x3,eax
  43f8e1:	repz push es
  43f8e3:	out    0x3,eax
  43f8e5:	repz push es
  43f8e7:	out    0x3,eax
  43f8e9:	repz push es
  43f8eb:	out    0x3,eax
  43f8ed:	add    BYTE PTR [eax],al
  43f8ef:	add    bl,dh
  43f8f1:	push   es
  43f8f2:	add    cl,ch
  43f8f4:	lock push es
  43f8f6:	add    cl,ch
  43f8f8:	lock push es
  43f8fa:	add    cl,ch
  43f8fc:	lock push es
  43f8fe:	add    cl,ch
  43f900:	lock push es
  43f902:	add    cl,ch
  43f904:	lock push es
  43f906:	add    cl,ch
  43f908:	lock push es
  43f90a:	add    cl,ch
  43f90c:	lock push es
  43f90e:	add    cl,ch
  43f910:	lock push es
  43f912:	add    cl,ch
  43f914:	lock push es
  43f916:	add    cl,ch
  43f918:	lock push es
  43f91a:	add    cl,ch
  43f91c:	lock push es
  43f91e:	add    cl,ch
  43f920:	lock push es
  43f922:	add    cl,ch
  43f924:	lock push es
  43f926:	add    cl,ch
  43f928:	lock push es
  43f92a:	add    cl,ch
  43f92c:	lock push es
  43f92e:	add    cl,ch
  43f930:	lock push es
  43f932:	add    cl,ch
  43f934:	lock push es
  43f936:	add    cl,ch
  43f938:	lock push es
  43f93a:	add    cl,ch
  43f93c:	lock push es
  43f93e:	add    cl,ch
  43f940:	lock push es
  43f942:	add    cl,ch
  43f944:	lock push es
  43f946:	add    cl,ch
  43f948:	lock push es
  43f94a:	add    cl,ch
  43f94c:	lock push es
  43f94e:	add    cl,ch
  43f950:	lock push es
  43f952:	add    cl,ch
  43f954:	add    BYTE PTR [eax],al
  43f956:	add    al,dh
  43f958:	push   es
  43f959:	add    cl,ch
  43f95b:	lock push es
  43f95d:	add    cl,ch
  43f95f:	lock push es
  43f961:	add    cl,ch
  43f963:	lock push es
  43f965:	add    cl,ch
  43f967:	lock push es
  43f969:	add    cl,ch
  43f96b:	lock push es
  43f96d:	add    BYTE PTR [eax],al
  43f96f:	dec    edx
  43f970:	or     al,BYTE PTR [eax]
  43f972:	add    BYTE PTR [edx],bl
  43f974:	or     al,BYTE PTR [eax]
  43f976:	add    BYTE PTR [edx],bl
  43f978:	or     al,BYTE PTR [eax]
  43f97a:	add    BYTE PTR [edx],cl
  43f97c:	or     al,BYTE PTR [eax]
  43f97e:	add    BYTE PTR [edx],cl
  43f980:	or     al,BYTE PTR [eax]
  43f982:	add    BYTE PTR [edx],bl
  43f984:	or     al,BYTE PTR [eax]
  43f986:	add    BYTE PTR [edx],bl
  43f988:	or     al,BYTE PTR [eax]
  43f98a:	add    BYTE PTR [edx],cl
  43f98c:	or     al,BYTE PTR [eax]
  43f98e:	add    BYTE PTR [edx],cl
  43f990:	or     al,BYTE PTR [eax]
  43f992:	add    dl,bl
  43f994:	or     DWORD PTR [eax],eax
  43f996:	add    dl,bl
  43f998:	or     DWORD PTR [eax],eax
  43f99a:	add    dl,cl
  43f99c:	or     DWORD PTR [eax],eax
  43f99e:	add    dl,cl
  43f9a0:	or     DWORD PTR [eax],eax
  43f9a2:	add    dl,bl
  43f9a4:	or     DWORD PTR [eax],eax
  43f9a6:	add    dl,bl
  43f9a8:	or     DWORD PTR [eax],eax
  43f9aa:	add    dl,cl
  43f9ac:	or     DWORD PTR [eax],eax
  43f9ae:	add    dl,cl
  43f9b0:	or     DWORD PTR [eax],eax
  43f9b2:	add    BYTE PTR [edx-0x65fffff7],bl
  43f9b8:	or     DWORD PTR [eax],eax
  43f9ba:	add    BYTE PTR [eax],al
  43f9bc:	add    BYTE PTR [eax],al
  43f9be:	mov    cl,BYTE PTR [ecx]
  43f9c0:	add    BYTE PTR [eax],al
  43f9c2:	mov    cl,BYTE PTR [ecx]
  43f9c4:	add    BYTE PTR [eax],al
  43f9c6:	call   0x9:0x9a000009
  43f9cd:	add    BYTE PTR [edx-0x75fffff7],cl
  43f9d3:	or     DWORD PTR [eax],eax
  43f9d5:	add    BYTE PTR [edx+0x9],bl
  43f9d8:	add    BYTE PTR [eax],al
  43f9da:	pop    edx
  43f9db:	or     DWORD PTR [eax],eax
  43f9dd:	add    BYTE PTR [edx+0x9],cl
  43f9e0:	add    BYTE PTR [eax],al
  43f9e2:	dec    edx
  43f9e3:	or     DWORD PTR [eax],eax
  43f9e5:	add    BYTE PTR [edx+0x9],bl
  43f9e8:	add    BYTE PTR [eax],al
  43f9ea:	repz pop edi
  43f9ec:	cld    
  43f9ed:	push   ebx
  43f9ef:	pop    edi
  43f9f0:	cld    
  43f9f1:	push   ebx
  43f9f3:	pop    edi
  43f9f4:	cld    
  43f9f5:	push   ebx
  43f9f7:	pop    edi
  43f9f8:	cld    
  43f9f9:	push   ebx
  43f9fb:	pop    edi
  43f9fc:	cld    
  43f9fd:	push   ebx
  43f9ff:	pop    edi
  43fa00:	cld    
  43fa01:	push   ebx
  43fa03:	pop    edi
  43fa04:	cld    
  43fa05:	push   ebx
  43fa07:	pop    edi
  43fa08:	cld    
  43fa09:	push   ebx
  43fa0b:	pop    edi
  43fa0c:	cld    
  43fa0d:	push   ebx
  43fa0f:	pop    edi
  43fa10:	cld    
  43fa11:	push   ebx
  43fa13:	pop    edi
  43fa14:	cld    
  43fa15:	push   ebx
  43fa17:	pop    ebp
  43fa18:	cld    
  43fa19:	push   ebx
  43fa1b:	pop    ebp
  43fa1c:	cld    
  43fa1d:	push   ebx
  43fa1f:	pop    ebp
  43fa20:	cld    
  43fa21:	inc    DWORD PTR [eax]
  43fa23:	add    BYTE PTR [eax],al
  43fa25:	repz pop ebp
  43fa27:	cld    
  43fa28:	push   ebx
  43fa2a:	pop    ebp
  43fa2b:	cld    
  43fa2c:	push   ebx
  43fa2e:	pop    ebp
  43fa2f:	cld    
  43fa30:	push   ebx
  43fa32:	pop    ebp
  43fa33:	cld    
  43fa34:	push   ebx
  43fa36:	pop    ebp
  43fa37:	cld    
  43fa38:	push   ebx
  43fa3a:	pop    ebp
  43fa3b:	cld    
  43fa3c:	push   ebx
  43fa3e:	pop    ebp
  43fa3f:	cld    
  43fa40:	push   ebx
  43fa42:	pop    ebp
  43fa43:	cld    
  43fa44:	push   ebx
  43fa46:	pop    ebp
  43fa47:	cld    
  43fa48:	push   ebx
  43fa4a:	pop    ebp
  43fa4b:	cld    
  43fa4c:	push   ebx
  43fa4e:	pop    ebp
  43fa4f:	cld    
  43fa50:	push   ebx
  43fa52:	pop    ebp
  43fa53:	cld    
  43fa54:	push   ebx
  43fa56:	pop    ebp
  43fa57:	cld    
  43fa58:	push   ebx
  43fa5a:	pop    ebp
  43fa5b:	cld    
  43fa5c:	push   ebx
  43fa5e:	pop    ebp
  43fa5f:	cld    
  43fa60:	push   ebx
  43fa62:	pop    ebp
  43fa63:	cld    
  43fa64:	push   ebx
  43fa66:	push   es
  43fa67:	out    0x3,eax
  43fa69:	repz push es
  43fa6b:	out    0x3,eax
  43fa6d:	repz push es
  43fa6f:	out    0x3,eax
  43fa71:	repz push es
  43fa73:	out    0x3,eax
  43fa75:	repz push es
  43fa77:	out    0x3,eax
  43fa79:	repz push es
  43fa7b:	out    0x3,eax
  43fa7d:	repz push es
  43fa7f:	out    0x3,eax
  43fa81:	repz push es
  43fa83:	out    0x3,eax
  43fa85:	repz push es
  43fa87:	out    0x3,eax
  43fa89:	add    BYTE PTR [eax],al
  43fa8b:	add    bl,dh
  43fa8d:	push   es
  43fa8e:	out    0x3,eax
  43fa90:	repz push es
  43fa92:	out    0x3,eax
  43fa94:	repz push es
  43fa96:	out    0x3,eax
  43fa98:	repz push es
  43fa9a:	out    0x3,eax
  43fa9c:	repz push es
  43fa9e:	out    0x3,eax
  43faa0:	repz push es
  43faa2:	out    0x3,eax
  43faa4:	repz push es
  43faa6:	out    0x3,eax
  43faa8:	repz push es
  43faaa:	out    0x3,eax
  43faac:	repz push es
  43faae:	out    0x3,eax
  43fab0:	repz push es
  43fab2:	out    0x3,eax
  43fab4:	repz push es
  43fab6:	out    0x3,eax
  43fab8:	repz push es
  43faba:	out    0x3,eax
  43fabc:	repz push es
  43fabe:	out    0x3,eax
  43fac0:	repz push es
  43fac2:	out    0x3,eax
  43fac4:	repz push es
  43fac6:	out    0x3,eax
  43fac8:	repz push es
  43faca:	out    0x3,eax
  43facc:	repz push es
  43face:	out    0x3,eax
  43fad0:	repz push es
  43fad2:	out    0x3,eax
  43fad4:	repz push es
  43fad6:	out    0x3,eax
  43fad8:	repz push es
  43fada:	out    0x3,eax
  43fadc:	repz push es
  43fade:	out    0x3,eax
  43fae0:	repz push es
  43fae2:	add    cl,ch
  43fae4:	lock push es
  43fae6:	add    cl,ch
  43fae8:	lock push es
  43faea:	add    cl,ch
  43faec:	lock push es
  43faee:	add    cl,ch
  43faf0:	add    BYTE PTR [eax],al
  43faf2:	add    al,dh
  43faf4:	push   es
  43faf5:	add    cl,ch
  43faf7:	lock push es
  43faf9:	add    cl,ch
  43fafb:	lock push es
  43fafd:	add    cl,ch
  43faff:	lock push es
  43fb01:	add    cl,ch
  43fb03:	lock push es
  43fb05:	add    cl,ch
  43fb07:	lock push es
  43fb09:	add    cl,ch
  43fb0b:	lock push es
  43fb0d:	add    cl,ch
  43fb0f:	lock push es
  43fb11:	add    cl,ch
  43fb13:	lock push es
  43fb15:	add    cl,ch
  43fb17:	lock push es
  43fb19:	add    cl,ch
  43fb1b:	lock push es
  43fb1d:	add    cl,ch
  43fb1f:	lock push es
  43fb21:	add    cl,ch
  43fb23:	lock push es
  43fb25:	add    cl,ch
  43fb27:	lock push es
  43fb29:	add    cl,ch
  43fb2b:	lock push es
  43fb2d:	add    cl,ch
  43fb2f:	lock push es
  43fb31:	add    cl,ch
  43fb33:	lock push es
  43fb35:	add    cl,ch
  43fb37:	lock push es
  43fb39:	add    cl,ch
  43fb3b:	lock push es
  43fb3d:	add    cl,ch
  43fb3f:	lock push es
  43fb41:	add    cl,ch
  43fb43:	lock push es
  43fb45:	add    cl,ch
  43fb47:	lock push es
  43fb49:	add    cl,ch
  43fb4b:	lock push es
  43fb4d:	add    cl,ch
  43fb4f:	lock push es
  43fb51:	add    cl,ch
  43fb53:	lock push es
  43fb55:	add    cl,ch
  43fb57:	add    BYTE PTR [eax],al
  43fb59:	add    al,dh
  43fb5b:	push   es
  43fb5c:	add    cl,ch
  43fb5e:	lock push es
  43fb60:	add    BYTE PTR [eax],al
  43fb62:	pop    edx
  43fb63:	push   es
  43fb64:	add    BYTE PTR [eax],al
  43fb66:	pop    edx
  43fb67:	push   es
  43fb68:	add    BYTE PTR [eax],al
  43fb6a:	dec    edx
  43fb6b:	push   es
  43fb6c:	add    BYTE PTR [eax],al
  43fb6e:	dec    edx
  43fb6f:	push   es
  43fb70:	add    BYTE PTR [eax],al
  43fb72:	pop    edx
  43fb73:	push   es
  43fb74:	add    BYTE PTR [eax],al
  43fb76:	pop    edx
  43fb77:	push   es
  43fb78:	add    BYTE PTR [eax],al
  43fb7a:	bound  esi,QWORD PTR [edx+0x1]
  43fb7d:	imul   ebp,DWORD PTR [ecx-0x7c3e41fe],0x3
  43fb84:	sti    
  43fb85:	adc    eax,0x4e0e7336
  43fb8a:	push   ebx
  43fb8b:	bound  esp,QWORD PTR [ebp+edx*8-0x47e7b351]
  43fb92:	xchg   DWORD PTR [ecx],eax
  43fb94:	push   ecx
  43fb95:	lods   eax,DWORD PTR ds:[esi]
  43fb96:	(bad)
  43fb99:	pop    es
  43fb9a:	xchg   edx,eax
  43fb9b:	jo     0x43fbb8
  43fb9d:	cmp    eax,0xd29aba8e
  43fba2:	stos   BYTE PTR es:[edi],al
  43fba3:	in     eax,0xa
  43fba5:	(bad)  
  43fba6:	push   eax
  43fba7:	push   esp
  43fba8:	icebp  
  43fba9:	or     eax,DWORD PTR [ebx-0x1f]
  43fbac:	sar    bl,0x60
  43fbaf:	pusha  
  43fbb0:	push   ecx
  43fbb1:	cli    
  43fbb2:	aam    0x47
  43fbb4:	dec    edx
  43fbb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fbb6:	pop    es
  43fbb7:	in     eax,0xa5
  43fbb9:	sbb    dh,BYTE PTR [edi-0x31]
  43fbbc:	imul   ecx,DWORD PTR [ecx+0x0],0xfe200000
  43fbc3:	xor    al,0xca
  43fbc5:	hlt    
  43fbc6:	neg    DWORD PTR [edx+0x1e]
  43fbc9:	in     al,0x28
  43fbcb:	jmp    ebp
  43fbcd:	xor    BYTE PTR [esi],ch
  43fbcf:	clc    
  43fbd0:	push   edx
  43fbd1:	dec    ebx
  43fbd2:	pop    edi
  43fbd3:	mov    bh,0x87
  43fbd5:	and    DWORD PTR [eax+esi*1-0x13b4432b],esi
  43fbdc:	xor    esi,ebx
  43fbde:	scas   eax,DWORD PTR es:[edi]
  43fbdf:	rcr    DWORD PTR [ebp+0x3d],0xbf
  43fbe3:	leave  
  43fbe4:	sbb    ch,BYTE PTR [edx+0x2aaa470d]
  43fbea:	rcr    DWORD PTR es:[esi+0x2d],1
  43fbee:	loop   0x43fc68
  43fbf0:	and    BYTE PTR [esi],0x81
  43fbf3:	repz jl 0x43fc4d
  43fbf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fbf7:	data16 or ah,bh
  43fbfa:	dec    edx
  43fbfb:	out    dx,eax
  43fbfc:	cs into 
  43fbfe:	pop    ss
  43fbff:	xor    bh,dl
  43fc01:	out    dx,eax
  43fc02:	pop    eax
  43fc03:	sti    
  43fc04:	shl    BYTE PTR [edi+0x36],cl
  43fc07:	mov    ch,0xdf
  43fc09:	es leave 
  43fc0b:	push   eax
  43fc0c:	mov    bl,BYTE PTR [edi]
  43fc0e:	nop
  43fc0f:	jno    0x43fbae
  43fc11:	or     ah,BYTE PTR [esp+ebp*4+0x38]
  43fc15:	xor    DWORD PTR [esi-0x56],edi
  43fc18:	add    esi,DWORD PTR [ebx]
  43fc1a:	jl     0x43fc15
  43fc1c:	outs   dx,DWORD PTR ds:[esi]
  43fc1d:	jp     0x43fbbb
  43fc1f:	sbb    dl,BYTE PTR ds:0x65aa158a
  43fc25:	add    BYTE PTR [eax],al
  43fc27:	add    dl,dl
  43fc29:	(bad)  
  43fc2a:	fadd   DWORD PTR [esi+ecx*2+0x6acb81e0]
  43fc31:	adc    BYTE PTR [edx-0x6],ch
  43fc34:	xchg   edx,eax
  43fc35:	sub    esi,DWORD PTR [edx]
  43fc37:	clc    
  43fc38:	(bad)  
  43fc39:	jmp    0x83e0:0x27c0b51e
  43fc40:	popa   
  43fc41:	or     cl,bh
  43fc43:	sti    
  43fc44:	xchg   ebx,eax
  43fc45:	jne    0x43fc43
  43fc47:	pcmpeqd mm6,QWORD PTR [ebx+ebp*1+0x2070af88]
  43fc4f:	and    dl,dh
  43fc51:	adc    al,0xbb
  43fc53:	je     0x43fc60
  43fc55:	aam    0x5f
  43fc57:	(bad)  
  43fc58:	mov    eax,0x5161d407
  43fc5d:	out    dx,al
  43fc5e:	adc    eax,0xa55de22e
  43fc63:	push   ebp
  43fc64:	fsubr  QWORD PTR ds:0x8b97cfa
  43fc6a:	out    dx,al
  43fc6b:	add    BYTE PTR [esi-0x22fa0bfa],dh
  43fc71:	cmp    BYTE PTR [ebp+0x7c],ah
  43fc74:	inc    eax
  43fc75:	in     al,0x99
  43fc77:	lahf   
  43fc78:	jmp    0x43fce7
  43fc7a:	xor    dh,BYTE PTR [esi-0x51]
  43fc7d:	in     al,0xfd
  43fc7f:	or     ah,dh
  43fc81:	xchg   ebp,eax
  43fc82:	xchg   BYTE PTR [esi-0x470455fe],ah
  43fc88:	lahf   
  43fc89:	adc    ebp,DWORD PTR [ebx]
  43fc8b:	xchg   BYTE PTR [eax],al
  43fc8d:	add    BYTE PTR [eax],al
  43fc8f:	(bad)  
  43fc90:	jmp    DWORD PTR [ebx+0x1691becd]
  43fc96:	dec    ecx
  43fc97:	inc    eax
  43fc98:	mov    edi,0xed3fbd73
  43fc9d:	push   edi
  43fc9e:	xchg   edx,eax
  43fc9f:	test   eax,0x6bf149a2
  43fca4:	sahf   
  43fca5:	adc    DWORD PTR [ebx+eiz*1-0x357790b4],edx
  43fcac:	jle    0x43fd27
  43fcae:	fdivr  DWORD PTR [ebp+eiz*1-0x2bb3cb5a]
  43fcb5:	outs   dx,BYTE PTR ds:[esi]
  43fcb6:	pop    es
  43fcb7:	int3   
  43fcb8:	mov    dh,cl
  43fcba:	push   ebp
  43fcbb:	cmp    ch,BYTE PTR [eax-0x2953111d]
  43fcc1:	fadd   QWORD PTR [esi+0x652a4aef]
  43fcc7:	adc    eax,0x24fe9c22
  43fccc:	mov    ecx,0x9d080d0d
  43fcd1:	imul   edi,DWORD PTR ds:0x110017a4,0xb127c130
  43fcdb:	jecxz  0x43fc92
  43fcdd:	xlat   BYTE PTR ds:[ebx]
  43fcde:	pop    es
  43fcdf:	imul   esp,DWORD PTR [eax-0x782b6d9],0xf
  43fce6:	out    dx,eax
  43fce7:	scas   eax,DWORD PTR es:[edi]
  43fce8:	pusha  
  43fce9:	add    al,0x99
  43fceb:	dec    di
  43fced:	and    al,0x38
  43fcef:	ins    DWORD PTR es:[edi],dx
  43fcf0:	push   ebx
  43fcf1:	inc    ebp
  43fcf2:	out    0x0,eax
  43fcf4:	add    BYTE PTR [eax],al
  43fcf6:	mov    ds:0x6cf95e3e,al
  43fcfb:	sbb    bl,BYTE PTR [eax-0x4e]
  43fcfe:	xchg   esp,eax
  43fcff:	lock sbb DWORD PTR [ebp+0x626dcca4],edx
  43fd06:	out    dx,eax
  43fd07:	je     0x43fcf4
  43fd09:	mov    DWORD PTR [eax],esp
  43fd0b:	loope  0x43fd66
  43fd0d:	ss jl  0x43fd80
  43fd10:	hlt    
  43fd11:	jns    0x43fcb4
  43fd13:	in     al,0x32
  43fd15:	cmp    ecx,DWORD PTR [ebx-0xa]
  43fd18:	test   esi,edi
  43fd1a:	sbb    edi,eax
  43fd1c:	call   0x1d5b7cfd
  43fd21:	fnstsw WORD PTR [ebx]
  43fd23:	cdq    
  43fd24:	adc    DWORD PTR [ebx+0x520a7d49],edx
  43fd2a:	jb     0x43fd8d
  43fd2c:	pusha  
  43fd2d:	push   ss
  43fd2e:	push   ecx
  43fd2f:	push   esp
  43fd30:	imul   BYTE PTR [esi+0x81a4a79]
  43fd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fd37:	in     al,dx
  43fd38:	fwait
  43fd39:	mov    ax,ds:0xcd40841f
  43fd3f:	popf   
  43fd40:	cmp    bl,BYTE PTR ds:0x15e78e88
  43fd46:	dec    esp
  43fd47:	sub    DWORD PTR [ebx],esi
  43fd49:	adc    BYTE PTR [ecx+0x5b],ah
  43fd4c:	mov    BYTE PTR [eax-0x3e],ch
  43fd4f:	(bad)  
  43fd50:	out    0x0,al
  43fd52:	ret    
  43fd53:	mov    dh,0x24
  43fd55:	punpcklwd mm1,DWORD PTR [ebx+0xb32f]
  43fd5c:	add    al,dh
  43fd5e:	push   0x5177a312
  43fd63:	adc    al,0xff
  43fd65:	shl    DWORD PTR [ecx-0x3],0xa
  43fd69:	inc    edi
  43fd6a:	adc    al,0x46
  43fd6c:	push   ds
  43fd6d:	or     edx,0x2d
  43fd70:	mov    eax,ds:0xf3603a24
  43fd75:	int3   
  43fd76:	jb     0x43fdde
  43fd78:	pushf  
  43fd79:	jno    0x43fd76
  43fd7b:	xchg   ebx,eax
  43fd7c:	push   edx
  43fd7d:	(bad)  
  43fd7e:	adc    ecx,DWORD PTR [eax]
  43fd80:	add    bl,dh
  43fd82:	xlat   BYTE PTR ds:[ebx]
  43fd83:	xor    al,0xe1
  43fd86:	cld    
  43fd87:	out    0x72,eax
  43fd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fd8a:	push   edx
  43fd8b:	(bad)  
  43fd8c:	loop   0x43fdb5
  43fd8e:	cmp    ecx,ebx
  43fd90:	int3   
  43fd91:	mov    BYTE PTR [ecx-0x3b87ae15],0x7
  43fd98:	mov    ch,bl
  43fd9a:	jle    0x43fde6
  43fd9c:	jmp    FWORD PTR [eax+0x64]
  43fd9f:	pop    edx
  43fda0:	ret    
  43fda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fda2:	sub    ebx,0x2cd59d51
  43fda8:	leave  
  43fda9:	xchg   edi,eax
  43fdaa:	sub    DWORD PTR [esi+0x30],0x8b0bf568
  43fdb1:	or     eax,DWORD PTR gs:[ebp+0x427ffb46]
  43fdb8:	cld    
  43fdb9:	push   0x1d8b1fec
  43fdbe:	xchg   DWORD PTR [eax],edi
  43fdc0:	imul   eax,DWORD PTR [eax],0x0
  43fdc3:	add    BYTE PTR [edi+0x6],al
  43fdc6:	cmp    BYTE PTR [edi],0x38
  43fdc9:	repz std 
  43fdcb:	jmp    0xcbce:0x8b59cdca
  43fdd2:	mov    esp,0xeb8246cc
  43fdd7:	adc    DWORD PTR [edi-0x14ba7ade],0x7f
  43fdde:	inc    edx
  43fddf:	loopne 0x43fe49
  43fde1:	mov    ebx,0x67268bdf
  43fde6:	cld    
  43fde7:	push   eax
  43fde8:	(bad)  
  43fde9:	jg     0x43fe3d
  43fdeb:	in     al,0x68
  43fded:	ret    
  43fdee:	jecxz  0x43fd7b
  43fdf0:	sub    ebp,edi
  43fdf2:	cld    
  43fdf3:	dec    esp
  43fdf4:	sti    
  43fdf5:	jg     0x43fe41
  43fdf7:	clc    
  43fdf8:	js     0x43fdcd
  43fdfa:	test   DWORD PTR [ebx+0x44fd22b1],0xe8427feb
  43fe04:	js     0x43fdc1
  43fe06:	test   DWORD PTR [ebx+0x54fd26a2],0xf0527feb
  43fe10:	push   0xbb8bf7c3
  43fe15:	or     bh,ch
  43fe17:	dec    esp
  43fe18:	sti    
  43fe19:	jg     0x43fe65
  43fe1b:	cld    
  43fe1c:	xor    al,0xc3
  43fe1e:	repz add bl,dh
  43fe21:	push   es
  43fe22:	add    bl,ch
  43fe24:	cli    
  43fe25:	adc    DWORD PTR [edx-0xc],0x70000000
  43fe2c:	dec    eax
  43fe2d:	dec    BYTE PTR [eax+0x458472a6]
  43fe33:	sti    
  43fe34:	or     BYTE PTR [edx-0xc],0x28
  43fe38:	mov    edi,0x803b7317
  43fe3d:	push   edx
  43fe3e:	lock push 0xeb44fd09
  43fe44:	jge    0x43fe88
  43fe46:	fcomp  QWORD PTR [ecx-0x3]
  43fe49:	lods   al,BYTE PTR ds:[si]
  43fe4b:	lock (bad) 
  43fe4d:	dec    DWORD PTR [edx-0x17b1b4d2]
  43fe53:	and    eax,DWORD PTR [esi]
  43fe55:	add    BYTE PTR [eax],al
  43fe57:	jo     0x43fe9c
  43fe59:	or     eax,DWORD PTR [ebp-0x74eb0d4d]
  43fe5f:	inc    esi
  43fe60:	jae    0x43fde6
  43fe62:	inc    ebp
  43fe63:	mov    edi,esp
  43fe65:	mov    al,0xc
  43fe67:	and    edi,DWORD PTR [esi+0x4a]
  43fe6a:	in     al,dx
  43fe6b:	js     0x43fe3f
  43fe6d:	jmp    0x43fdfa
  43fe6f:	imul   eax,DWORD PTR ss:[esp+eax*1+0x8430863],0x58
  43fe78:	cli    
  43fe79:	test   BYTE PTR [ebp+0x63],cl
  43fe7c:	mov    BYTE PTR [esi-0x104595fc],bh
  43fe82:	jmp    0x43fe13
  43fe84:	cmp    al,al
  43fe86:	mov    edx,DWORD PTR [esi-0x36]
  43fe89:	mov    esp,0xcb3b37cc
  43fe8e:	int3   
  43fe8f:	add    BYTE PTR [eax],al
  43fe91:	add    BYTE PTR [edi],ch
  43fe93:	cmp    ecx,ebx
  43fe95:	int3   
  43fe96:	daa    
  43fe97:	cmp    ecx,ebx
  43fe99:	int3   
  43fe9a:	(bad)  
  43fe9b:	jg     0x43fe88
  43fe9d:	adc    DWORD PTR [edi],0xf
  43fea0:	call   0xf8b01aaa
  43fea5:	mov    DWORD PTR [esi+0x1b45845e],ebp
  43feab:	xlat   BYTE PTR ds:[ebx]
  43feac:	out    0x29,eax
  43feae:	add    al,0x6c
  43feb0:	clc    
  43feb1:	xor    DWORD PTR [edi],0x3
  43feb4:	popf   
  43feb5:	hlt    
  43feb6:	and    al,cl
  43feb8:	jmp    DWORD PTR [edi-0x51]
  43febb:	pop    es
  43febc:	inc    eax
  43febd:	add    BYTE PTR [eax-0x47],bh
  43fec0:	out    0x51,eax
  43fec2:	fcom   QWORD PTR [ecx]
  43fec4:	hlt    
  43fec5:	shl    DWORD PTR [eax],cl
  43fec7:	pop    es
  43fec8:	popf   
  43fec9:	clc    
  43feca:	mov    al,ds:0xf369ffc7
  43fecf:	loopne 0x43fed0
  43fed1:	scas   eax,DWORD PTR es:[di]
  43fed3:	pop    es
  43fed4:	inc    eax
  43fed5:	add    BYTE PTR [ecx+edx*1+0x730d3f8],dh
  43fedc:	xchg   DWORD PTR [ebp-0x65],eax
  43fedf:	inc    ebx
  43fee0:	inc    edx
  43fee1:	cld    
  43fee2:	repz push es
  43fee4:	add    BYTE PTR [eax],al
  43fee6:	mov    ch,bh
  43fee8:	test   BYTE PTR [ebp-0x71],dl
  43feeb:	xchg   DWORD PTR [ebp-0x42e85ff],edi
  43fef1:	cmp    esi,0x6a
  43fef4:	pop    es
  43fef5:	jae    0x43fef7
  43fef7:	add    BYTE PTR [eax],al
  43fef9:	sar    BYTE PTR [edi+0x42],cl
  43fefc:	cld    
  43fefd:	js     0x43fef9
  43feff:	or     BYTE PTR [eax+esi*8+0x6850ffc6],0xd1
  43ff07:	out    0x52,eax
  43ff09:	push   esp
  43ff0a:	adc    esp,esi
  43ff0c:	shl    DWORD PTR [eax+0x474d8506],cl
  43ff12:	jge    0x43ff17
  43ff14:	lea    eax,[edi+0x57]
  43ff17:	cmp    al,0x0
  43ff19:	dec    eax
  43ff1a:	push   esi
  43ff1b:	test   ch,ah
  43ff1d:	into   
  43ff1e:	inc    edi
  43ff1f:	retf   
  43ff20:	int3   
  43ff21:	aaa    
  43ff22:	cmp    cl,bl
  43ff24:	int3   
  43ff25:	das    
  43ff26:	cmp    cl,bl
  43ff28:	int3   
  43ff29:	daa    
  43ff2a:	cmp    cl,bl
  43ff2c:	int3   
  43ff2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ff2e:	jg     0x43ff1b
  43ff30:	mov    eax,ds:0x3c52a3
  43ff35:	mov    ebp,0x68303f7f
  43ff3a:	mov    ecx,0xbf7a3e07
  43ff3f:	pop    es
  43ff40:	pop    ebp
  43ff41:	mov    al,0x3b
  43ff43:	retf   
  43ff44:	int3   
  43ff45:	scas   eax,DWORD PTR es:[edi]
  43ff46:	cmp    ecx,ebx
  43ff48:	int3   
  43ff49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff4a:	cmp    ecx,ebx
  43ff4c:	int3   
  43ff4d:	es jle 0x43ff3b
  43ff50:	mov    ebp,DWORD PTR [esi]
  43ff52:	sti    
  43ff53:	dec    edi
  43ff54:	mov    ebp,DWORD PTR [esi]
  43ff56:	dec    DWORD PTR [esi-0x1]
  43ff59:	fidiv  WORD PTR [edx-0x34]
  43ff5c:	inc    ebx
  43ff5d:	add    BYTE PTR [eax],al
  43ff5f:	add    bl,dh
  43ff61:	retf   
  43ff62:	mov    esp,0xcb3bb7cc
  43ff67:	int3   
  43ff68:	scas   eax,DWORD PTR es:[edi]
  43ff69:	cmp    ecx,ebx
  43ff6b:	int3   
  43ff6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff6d:	cmp    ecx,ebx
  43ff6f:	int3   
  43ff70:	es jle 0x43ff5e
  43ff73:	adc    DWORD PTR [edi+0x90065ff],0x7
  43ff7a:	push   0xffc6f0dc
  43ff7f:	inc    BYTE PTR [esi]
  43ff81:	outs   dx,DWORD PTR ds:[esi]
  43ff82:	int3   
  43ff83:	inc    ebx
  43ff84:	repz jg 0x43ffc9
  43ff87:	clc    
  43ff88:	retf   
  43ff89:	pop    esi
  43ff8a:	cld    
  43ff8b:	aas    
  43ff8c:	repz jge 0x43ffd1
  43ff8f:	clc    
  43ff90:	mov    ds:0x44ffb55e,eax
  43ff95:	push   0x7c
  43ff97:	(bad)  
  43ff98:	jmp    0x440019
  43ff9a:	inc    edx
  43ff9b:	cld    
  43ff9c:	push   0x78510fbc
  43ffa1:	aam    0xb
  43ffa3:	push   edx
  43ffa4:	js     0x43ff6a
  43ffa6:	pop    es
  43ffa7:	push   eax
  43ffa8:	sbb    al,0xd4
  43ffaa:	sti    
  43ffab:	mov    ecx,DWORD PTR [esi]
  43ffad:	int3   
  43ffae:	mov    esp,0xeb7da6cc
  43ffb3:	push   ecx
  43ffb4:	sub    al,0xc4
  43ffb6:	sti    
  43ffb7:	add    bl,dh
  43ffb9:	push   es
  43ffba:	add    bl,ch
  43ffbc:	jmp    0xfe46:0x70fc427d
  43ffc3:	mov    BYTE PTR [eax],al
  43ffc5:	add    BYTE PTR [eax],al
  43ffc7:	imul   eax,DWORD PTR cs:[ebp+ecx*2+0x104b2ddf],0x60
  43ffd0:	or     al,BYTE PTR [ebp+0x5305fb55]
  43ffd6:	cld    
  43ffd7:	hlt    
  43ffd8:	mov    al,0xfd
  43ffda:	mov    ch,BYTE PTR [esi]
  43ffdc:	sti    
  43ffdd:	cld    
  43ffde:	dec    esp
  43ffdf:	mov    bh,0xf9
  43ffe1:	mov    cl,0x11
  43ffe3:	call   0x6b4b732c
  43ffe8:	pop    es
  43ffe9:	add    BYTE PTR [eax],al
  43ffeb:	repz pop ebp
  43ffed:	add    ebp,ebx
  43ffef:	ret    
  43fff0:	xor    eax,0xcb968bc0
  43fff5:	mov    esp,0xcb3ab7cc
  43fffa:	int3   
  43fffb:	scas   eax,DWORD PTR es:[edi]
  43fffc:	cmp    cl,bl
  43fffe:	int3   
  43ffff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440000:	cmp    cl,bl
  440002:	int3   
  440003:	(bad)  
  440004:	jge    0x43fff1
  440006:	mov    ecx,0x70b
  44000b:	xlat   BYTE PTR ds:[ebx]
  44000c:	jge    0x440014
  44000e:	mov    esi,esp
  440010:	(bad)  
  440011:	rol    DWORD PTR [ebx-0xd],cl
  440014:	retf   
  440015:	mov    esp,0xcb3a37cc
  44001a:	int3   
  44001b:	das    
  44001c:	cmp    cl,bl
  44001e:	int3   
  44001f:	daa    
  440020:	cmp    cl,bl
  440022:	int3   
  440023:	(bad)  
  440024:	jge    0x440011
  440026:	adc    DWORD PTR [edi],0x16
  440029:	test   DWORD PTR [ebp+0x0],eax
  44002c:	add    BYTE PTR [eax],al
  44002e:	jmp    0x43ffb5
  440030:	ja     0x440036
  440032:	repz stc 
  440034:	or     DWORD PTR [eax-0x74fff90d],0xffffffb6
  44003b:	inc    BYTE PTR [ecx+edx*2+0x8e585f7]
  440042:	and    bl,BYTE PTR [esi+eax*4+0x55]
  440046:	out    0x7c,eax
  440048:	inc    edx
  440049:	or     BYTE PTR [eax+0x47],dh
  44004c:	pop    es
  44004d:	mov    DWORD PTR [esi],esi
  44004f:	ja     0x440011
  440051:	inc    ebp
  440052:	xlat   BYTE PTR ds:[ebx]
  440053:	pop    es
  440054:	add    BYTE PTR [eax],al
  440056:	repz pop ebx
  440058:	push   es
  440059:	mov    esi,DWORD PTR [esi]
  44005b:	imul   edi,DWORD PTR [ecx+eax*8-0xe],0x7d
  440060:	dec    edx
  440061:	cld    
  440062:	push   0x463bfbd2
  440067:	jae    0x4400d5
  440069:	inc    esi
  44006a:	js     0x44002e
  44006c:	sti    
  44006d:	mov    ebp,DWORD PTR [esi]
  44006f:	ja     0x440079
  440071:	mov    bh,0xff
  440073:	lds    edi,FWORD PTR [esi-0xa7c0006]
  440079:	add    edi,esi
  44007b:	xor    al,0x85
  44007d:	inc    ebp
  44007e:	jg     0x4400fc
  440080:	dec    edx
  440081:	lock in al,0xaf
  440084:	adc    eax,DWORD PTR [ecx+0x72]
  440087:	gs clc 
  440089:	psllq  mm0,QWORD PTR [esi]
  44008c:	xchg   DWORD PTR [ebp+0x5b],edx
  44008f:	jl     0x4400d3
  440091:	or     BYTE PTR [eax],al
  440093:	add    BYTE PTR [eax],al
  440095:	push   0xfb030bba
  44009a:	jnp    0x4400ee
  44009c:	clc    
  44009d:	js     0x4400a2
  44009f:	lsl    esi,WORD PTR [esi-0x14b27aea]
  4400a6:	jnp    0x4400fa
  4400a8:	or     al,0xf0
  4400aa:	adc    eax,0x7e2b4d85
  4400af:	add    ecx,DWORD PTR [edx]
  4400b1:	or     BYTE PTR [esi+0x7beb5584],bl
  4400b7:	inc    edx
  4400b8:	or     al,dh
  4400ba:	les    eax,FWORD PTR [ebx]
  4400bc:	mov    DWORD PTR [esi-0x3941902],ebp
  4400c2:	addr16 clc 
  4400c4:	mov    ecx,DWORD PTR [esi]
  4400c6:	retf   0xccbc
  4400c9:	inc    esi
  4400ca:	jl     0x4400b7
  4400cc:	adc    edi,0x22
  4400cf:	test   DWORD PTR [ebp-0x15],eax
  4400d2:	jge    0x440116
  4400d4:	in     al,0x68
  4400d6:	mov    ecx,0x63268be3
  4400db:	cld    
  4400dc:	push   eax
  4400dd:	pop    es
  4400de:	jle    0x440132
  4400e0:	call   0x8c2bc24d
  4400e5:	imul   eax,DWORD PTR [esi+0x7df3ffff],0x4a
  4400ec:	lock jo 0x4400d8
  4400ef:	out    dx,eax
  4400f0:	add    ah,ch
  4400f2:	xor    ah,0x0
  4400f5:	repz push es
  4400f7:	test   DWORD PTR [ebp+0x0],edx
  4400fa:	add    BYTE PTR [eax],al
  4400fc:	sti    
  4400fd:	add    edx,DWORD PTR [ebx-0x10]
  440100:	jp     0x4400d3
  440102:	fisttp WORD PTR [ebx+0x787c6736]
  440108:	jecxz  0x440110
  44010a:	or     DWORD PTR [esi+edx*2-0x26fffffa],eax
  440111:	push   es
  440112:	data16 add BYTE PTR [eax-0x47],ch
  440116:	fisttp WORD PTR [ebx+0x50fcfebe]
  44011c:	call   esp
  44011e:	clc    
  44011f:	adc    eax,0x3c534b
  440124:	push   0xffffffc1
  440126:	sti    
  440127:	mov    ebp,DWORD PTR [esi-0xcc7839a]
  44012d:	repnz push ss
  44012f:	mov    esi,DWORD PTR [esi-0x14aa7b9a]
  440135:	add    ecx,DWORD PTR [edi]
  440137:	mov    DWORD PTR [esi+0x13458472],edi
  44013d:	jnp    0x440189
  44013f:	or     al,dh
  440141:	mov    esi,0x5aae890f
  440146:	in     al,0x17
  440148:	push   0x368bdfd1
  44014d:	paddw  mm0,QWORD PTR [ecx+0x3]
  440151:	nop
  440152:	inc    edx
  440153:	hlt    
  440154:	push   0x3e8bdfd4
  440159:	paddw  mm2,QWORD PTR [eax]
  44015c:	jp     0x44011a
  44015e:	jmp    0x440127
  440160:	add    BYTE PTR [eax],al
  440162:	add    BYTE PTR [esi],ch
  440164:	pop    edi
  440165:	(bad)  
  440166:	push   ebx
  440168:	push   es
  440169:	test   DWORD PTR [ebp-0x2d],eax
  44016c:	mov    dh,BYTE PTR [edi+0x10]
  44016f:	repz fimul DWORD PTR [eax]
  440172:	mov    esi,DWORD PTR [esi]
  440174:	addr16 jl 0x4401b0
  440177:	repz fiadd DWORD PTR [eax]
  44017a:	(bad)  
  44017b:	cs pop edi
  44017d:	(bad)  
  44017e:	push   ebx
  440180:	push   es
  440181:	test   DWORD PTR [ebp+0x7f],edx
  440184:	mov    dh,BYTE PTR ds:0x84e80700
  44018a:	inc    ebp
  44018b:	jg     0x44011f
  44018d:	pop    es
  44018e:	adc    DWORD PTR [edx+0x7],0xdb730000
  440195:	sbb    ecx,DWORD PTR [ebx+0x2845ac6]
  44019b:	push   cs
  44019c:	data16 clc 
  44019e:	dec    esp
  4401a0:	mov    dh,0x84
  4401a2:	dec    ebp
  4401a3:	inc    edi
  4401a4:	mov    eax,0x663eb5e7
  4401a9:	clc    
  4401aa:	sub    DWORD PTR [edi],0xf
  4401ad:	xchg   DWORD PTR [ebp+0x4f],eax
  4401b0:	jb     0x4401cd
  4401b2:	mov    edi,DWORD PTR [esi+0x6802845a]
  4401b8:	aam    0x7
  4401ba:	lea    edi,[edi+0x7851fe0e]
  4401c0:	int3   
  4401c1:	sti    
  4401c2:	push   eax
  4401c3:	sbb    edi,DWORD PTR [esi-0x6]
  4401c6:	inc    DWORD PTR [eax]
  4401c8:	add    BYTE PTR [eax],al
  4401ca:	cld    
  4401cb:	mov    ebx,eax
  4401cd:	or     BYTE PTR [edx-0x34],ch
  4401d0:	fisttp DWORD PTR [ebx+0x5584733e]
  4401d6:	(bad)  
  4401d7:	(bad)  
  4401d8:	push   cs
  4401d9:	mov    esi,DWORD PTR [esi]
  4401db:	pop    ebx
  4401dc:	jl     0x44019e
  4401de:	out    dx,eax
  4401df:	pop    DWORD PTR [edx-0xc]
  4401e2:	js     0x4401b7
  4401e4:	jmp    0x440169
  4401e6:	mov    dl,0xa
  4401e8:	xchg   DWORD PTR [ebp-0x31],ecx
  4401eb:	jno    0x44017d
  4401ed:	mov    ebx,DWORD PTR [esi]
  4401ef:	addr16 jl 0x4401b4
  4401f2:	pop    es
  4401f3:	nop
  4401f4:	push   edx
  4401f5:	loopne 0x440191
  4401f7:	adc    al,0xf9
  4401f9:	call   FWORD PTR [ecx+edx*4+0x52b05de2]
  440200:	retf   
  440201:	int3   
  440202:	es xchg edx,eax
  440204:	jmp    0x440189
  440206:	xchg   edi,eax
  440207:	push   cs
  440208:	push   0xffc6f0f0
  44020d:	(bad)  
  44020e:	fiadd  WORD PTR [esi]
  440210:	aam    0x43
  440212:	repz pop DWORD PTR [edx-0x8]
  440216:	(bad)  [edx-0x4]
  440219:	aas    
  44021a:	repz xchg ecx,eax
  44021c:	inc    edx
  44021d:	clc    
  44021e:	ret    
  44021f:	outs   dx,BYTE PTR ds:[esi]
  440220:	cmp    ebp,edi
  440222:	dec    esp
  440223:	gs jl  0x4401ea
  440226:	sti    
  440227:	pop    DWORD PTR [edx-0x4]
  44022a:	push   0x510fd3
  44022f:	add    BYTE PTR [eax],al
  440231:	push   0x78520bbb
  440236:	retf   
  440237:	pop    es
  440238:	push   eax
  440239:	and    al,0xbb
  44023b:	sti    
  44023c:	mov    edx,DWORD PTR [esi]
  44023e:	ret    
  44023f:	mov    esp,0xcb5227cc
  440244:	int3   
  440245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440246:	xchg   ecx,eax
  440247:	jmp    0x4401ea
  440249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44024a:	cmp    bh,BYTE PTR [eax+eax*1]
  44024d:	xor    eax,0xde8b6806
  440252:	mov    edx,0x8df343d3
  440257:	dec    edi
  440258:	add    DWORD PTR [ecx-0x9af78b8],esp
  44025e:	sar    DWORD PTR [esp+ecx*8-0x3334ac59],0x26
  440266:	nop
  440267:	jmp    0x4401ec
  440269:	xlat   BYTE PTR ds:[ebx]
  44026a:	adc    ebx,DWORD PTR [edi-0x3758b0]
  440270:	mov    ah,BYTE PTR [ecx+0x783ec718]
  440276:	(bad)  
  440277:	das    
  440278:	mov    eax,ecx
  44027a:	nop
  44027b:	int    0x3e
  44027d:	push   0xc18b0bcf
  440282:	mov    cs,WORD PTR [edx-0xc]
  440285:	js     0x440251
  440287:	repz mov edi,DWORD PTR [ebx]
  44028a:	adc    eax,DWORD PTR [edi+0x52907b4d]
  440290:	clc    
  440291:	push   0xffffffba
  440293:	sti    
  440294:	mov    eax,0xf2000000
  440299:	push   es
  44029a:	add    BYTE PTR [eax],al
  44029c:	outs   dx,BYTE PTR ds:[esi]
  44029d:	inc    edi
  44029e:	jae    0x4402e4
  4402a0:	jo     0x440284
  4402a2:	test   DWORD PTR [eax],0xc02d0ade
  4402a8:	pop    eax
  4402a9:	and    eax,DWORD PTR [ebp+0x4e904b4d]
  4402af:	sbb    al,bh
  4402b1:	mov    ecx,0x8fda7507
  4402b6:	inc    edx
  4402b7:	clc    
  4402b8:	js     0x44028c
  4402ba:	or     ecx,DWORD PTR [ecx+0x558502bb]
  4402c0:	sbb    edx,DWORD PTR [eax-0x3695efbe]
  4402c6:	pop    ss
  4402c7:	mov    eax,0x6f2
  4402cc:	sbb    bh,bh
  4402ce:	test   BYTE PTR [ebp-0x5],cl
  4402d1:	(bad)  
  4402d2:	push   cs
  4402d3:	mov    DWORD PTR [esi-0x14ba7ba2],ebx
  4402d9:	pop    ds
  4402da:	inc    ebx
  4402db:	cld    
  4402dc:	pop    esi
  4402dd:	or     ebp,DWORD PTR ds:0xe50ac8c0
  4402e3:	mov    bl,0x20
  4402e5:	inc    edi
  4402e6:	test   ch,ah
  4402e8:	cs dec eax
  4402ea:	retf   
  4402eb:	int3   
  4402ec:	mov    bh,0x52
  4402ee:	retf   
  4402ef:	int3   
  4402f0:	scas   eax,DWORD PTR es:[edi]
  4402f1:	push   edx
  4402f2:	retf   
  4402f3:	int3   
  4402f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4402f5:	push   edx
  4402f6:	retf   
  4402f7:	int3   
  4402f8:	inc    esi
  4402f9:	nop
  4402fa:	jmp    0x44027f
  4402fc:	add    BYTE PTR [eax],al
  4402fe:	add    BYTE PTR [edi-0x64ba3f02],dl
  440304:	push   es
  440305:	xor    BYTE PTR [eax],al
  440307:	repz out dx,al
  440309:	add    eax,DWORD PTR [ebx+esi*1]
  44030c:	pop    es
  44030d:	lahf   
  44030e:	cmp    al,0x9f
  440310:	(bad)  
  440311:	dec    DWORD PTR [edi-0x75]
  440314:	mov    bh,0xfb
  440316:	push   DWORD PTR [edi+eax*4-0x3d]
  44031a:	or     BYTE PTR [edx-0x37],bh
  44031d:	repz push 0xffffffb3
  440320:	(bad)  
  440324:	(bad)  
  440325:	adc    bl,BYTE PTR [edi+edi*1]
  440328:	(bad)  
  440329:	dec    DWORD PTR [edx+0x6a4fb6b1]
  44032f:	repz arpl WORD PTR [edx-0xc],dx
  440333:	nop
  440334:	cli    
  440335:	rol    DWORD PTR [ebx-0xd],cl
  440338:	xchg   DWORD PTR [edx],edi
  44033a:	adc    al,0x47
  44033c:	(bad)  
  44033d:	(bad)  
  44033e:	call   FWORD PTR [esi-0xcfd47f5]
  440344:	push   es
  440345:	add    bl,ch
  440347:	mov    DWORD PTR [edi-0x390ffff6],ecx
  44034d:	dec    DWORD PTR [eax+0x6756b6]
  440353:	and    DWORD PTR [edi],eax
  440355:	add    BYTE PTR [eax-0xd],ch
  440358:	pop    es
  440359:	inc    eax
  44035a:	add    BYTE PTR [eax-0x4],bh
  44035d:	adc    edx,esp
  44035f:	xor    BYTE PTR [edi],al
  440361:	jg     0x440325
  440363:	add    BYTE PTR [eax],al
  440365:	add    bl,dh
  440367:	add    eax,0x6f410000
  44036c:	cdq    
  44036d:	dec    ah
  44036f:	bound  edi,QWORD PTR [esp+eax*8-0x9]
  440373:	sahf   
  440374:	inc    DWORD PTR [edx]
  440376:	xor    eax,DWORD PTR [edi]
  440378:	sub    eax,DWORD PTR [eax]
  44037a:	lock push es
  44037c:	add    BYTE PTR [ebx+0x43d3fafe],cl
  440382:	repz sub eax,0xcaee89c8
  440388:	rol    DWORD PTR [ebx-0xd],cl
  44038b:	lea    edx,[edx]
  44038d:	inc    esp
  44038e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44038f:	(bad)  
  440390:	call   DWORD PTR [ecx+0x52]
  440393:	sti    
  440394:	rol    DWORD PTR [ebx-0xd],cl
  440397:	mov    dh,0x84
  440399:	dec    ebp
  44039a:	cmp    DWORD PTR [eax+0x626f9de7],0xfffffff8
  4403a1:	sub    DWORD PTR [edi],0x13
  4403a4:	test   DWORD PTR ds:0x3c3b07,edx
  4403aa:	lock mov ebx,0x6ea68907
  4403b0:	test   BYTE PTR [ebp+0x5b],dl
  4403b3:	(bad)  
  4403b4:	fisttp QWORD PTR [ebx-0x33433baa]
  4403ba:	daa    
  4403bb:	push   ebx
  4403bc:	retf   
  4403bd:	int3   
  4403be:	(bad)  
  4403bf:	(bad)  
  4403c0:	jmp    0x44034d
  4403c2:	scas   al,BYTE PTR es:[edi]
  4403c3:	push   cs
  4403c4:	xor    eax,0xd5ef45
  4403c9:	mov    eax,DWORD PTR [eax]
  4403cb:	add    BYTE PTR [eax],al
  4403cd:	scas   al,BYTE PTR es:[edi]
  4403ce:	push   cs
  4403cf:	in     eax,0x5
  4403d1:	sbb    BYTE PTR [esi],al
  4403d3:	test   DWORD PTR [ebp-0x9],eax
  4403d6:	ret    
  4403d7:	mov    esp,0xcb532fcc
  4403dc:	int3   
  4403dd:	daa    
  4403de:	push   ebx
  4403df:	retf   
  4403e0:	int3   
  4403e1:	inc    esi
  4403e2:	mov    gs,ebx
  4403e4:	adc    edi,0x32
  4403e7:	rol    DWORD PTR [ebp-0x21],0x6
  4403eb:	add    BYTE PTR [ebx+esi*8],al
  4403ee:	lea    eax,[edx+0x8]
  4403f1:	jp     0x4403be
  4403f3:	xlat   BYTE PTR ds:[ebx]
  4403f4:	mov    esi,DWORD PTR [esi]
  4403f6:	aas    
  4403f7:	test   BYTE PTR [ebp-0x15],dl
  4403fa:	add    eax,0xbb6a3c4f
  4403ff:	fisttp WORD PTR [ebx-0x48f798ca]
  440405:	cmp    edi,ebx
  440407:	test   BYTE PTR [ebp-0x6d],dl
  44040a:	xchg   ebx,eax
  44040b:	inc    ebx
  44040c:	or     bh,bl
  44040e:	pop    DWORD PTR [edx-0x18]
  440411:	sbb    edi,ebx
  440413:	add    eax,DWORD PTR [eax-0xd]
  440416:	lea    ecx,[edx]
  440418:	cmp    al,0xa7
  44041a:	(bad)  
  44041d:	mov    edx,ecx
  44041f:	hlt    
  440420:	jmp    FWORD PTR [ebp+eax*4-0x3d]
  440424:	or     BYTE PTR [edx-0x35],bh
  440427:	out    dx,eax
  440428:	push   0xffffffb3
  44042a:	out    dx,al
  44042b:	jmp    FWORD PTR [edi]
  44042d:	repz push es
  44042f:	push   0x0
  440434:	repz or al,BYTE PTR [eax]
  440437:	push   0xfffffff3
  440439:	popa   
  44043a:	push   edx
  44043b:	lock push 0xffffffcb
  44043e:	jecxz  0x4403cb
  440440:	sahf   
  440441:	data16 test BYTE PTR [edx-0x39],al
  440445:	mov    dh,0x84
  440447:	dec    ebp
  440448:	sti    
  440449:	mov    bh,0x84
  44044b:	push   ebp
  44044c:	pop    ss
  44044d:	mov    ah,0xe7
  44044f:	rcl    DWORD PTR [esi],0x61
  440452:	clc    
  440453:	xor    DWORD PTR [edi],0x12
  440456:	rol    DWORD PTR [ebp-0x1],0x5
  44045a:	add    BYTE PTR [eax],al
  44045c:	rep ins DWORD PTR es:[edi],dx
  44045e:	push   es
  44045f:	mov    ebp,DWORD PTR [esi-0xd3f83a6]
  440465:	lea    eax,[edx-0xc]
  440468:	js     0x44043c
  44046a:	fisttp WORD PTR [edi]
  44046c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44046d:	mov    dh,0x1
  44046f:	cmp    DWORD PTR [esi],edi
  440471:	pop    ebx
  440472:	ins    BYTE PTR es:[edi],dx
  440473:	pop    ecx
  440474:	js     0x440440
  440476:	out    0x83,eax
  440478:	dec    ebx
  440479:	sti    
  44047a:	push   DWORD PTR [ebx+0x36]
  44047d:	mov    WORD PTR [edx-0x18],cs
  440480:	jo     0x440460
  440482:	verr   WORD PTR [edi]
  440485:	and    eax,DWORD PTR [ebp+0x3d8c9b55]
  44048b:	adc    BYTE PTR [eax-0x2e],ch
  44048e:	fisttp WORD PTR [ebx+0x448b2342]
  440494:	jecxz  0x4404f5
  440496:	test   BYTE PTR [ebp+0x0],cl
  440499:	add    BYTE PTR [eax],al
  44049b:	xchg   ebx,eax
  44049c:	adc    al,0xce
  44049e:	test   DWORD PTR [edx],0x93558523
  4404a4:	adc    BYTE PTR [ecx-0x7b48d0be],ch
  4404aa:	inc    ebp
  4404ab:	pop    ebx
  4404ac:	mov    WORD PTR [edx+0x8],cs
  4404af:	lock into 
  4404b1:	adc    edx,DWORD PTR [ecx+0x68]
  4404b4:	mov    edx,0x6ab68be7
  4404b9:	cld    
  4404ba:	inc    ecx
  4404bb:	div    DWORD PTR [esi+0x603e55e7]
  4404c1:	clc    
  4404c2:	sub    DWORD PTR [edi],0x13
  4404c5:	test   DWORD PTR [ebp+0x1b],ecx
  4404c8:	test   BYTE PTR [esi-0x182d85d8],bh
  4404ce:	jmp    0x440451
  4404d0:	mov    WORD PTR [edx-0x1c],ss
  4404d3:	shr    DWORD PTR [esi+0x9],0xfc
  4404d7:	or     al,0x60
  4404d9:	jl     0x44049f
  4404db:	out    dx,eax
  4404dc:	out    dx,al
  4404dd:	and    eax,DWORD PTR [ebx+esi*4]
  4404e0:	push   es
  4404e1:	lahf   
  4404e2:	cmp    al,0x1f
  4404e4:	(bad)  
  4404e5:	dec    DWORD PTR [edi-0x25]
  4404e8:	mov    esi,ebp
  4404ea:	jmp    esp
  4404ec:	add    ebx,0x8
  4404ef:	push   0xffffffc9
  4404f1:	fild   DWORD PTR [ebx+0x43d41f16]
  4404f7:	repz push es
  4404f9:	jae    0x440505
  4404fb:	js     0x44050e
  4404fd:	xor    ah,dl
  4404ff:	add    BYTE PTR [eax],al
  440501:	add    BYTE PTR [eax],dh
  440503:	pop    es
  440504:	dec    edi
  440505:	call   FWORD PTR [esi]
  440507:	inc    ebx
  440508:	jl     0x440547
  44050a:	jmp    0x440546
  44050c:	cmp    al,0x0
  44050e:	repz fstp DWORD PTR [ebx]
  440511:	push   0x33
  440513:	out    dx,eax
  440514:	jmp    FWORD PTR [edi]
  440516:	repz push es
  440518:	test   DWORD PTR [ebp-0x71],edx
  44051b:	mov    ah,0x84
  44051d:	inc    ebp
  44051e:	xchg   ebx,eax
  44051f:	mov    eax,DWORD PTR [edi+0x34]
  440522:	and    ah,BYTE PTR [eax+0x52]
  440525:	lock push eax
  440527:	cli    
  440528:	rol    DWORD PTR [ebx-0xd],cl
  44052b:	imul   edx,DWORD PTR [edx],0x6a
  44052e:	mov    bl,0xee
  440530:	jmp    FWORD PTR [edi]
  440532:	repz push es
  440534:	test   DWORD PTR [ebp+0x57],edx
  440537:	mov    ah,0x65
  440539:	add    BYTE PTR [ecx+edi*4-0x11],cl
  44053d:	mov    ds:0x3c3adf,eax
  440542:	jo     0x440565
  440544:	adc    al,0xd4
  440546:	mov    al,0x6
  440548:	add    BYTE PTR [ebp+0x6],dh
  44054b:	in     eax,dx
  44054c:	aas    
  44054d:	push   0x16f3
  440552:	push   0x8950fbc9
  440557:	push   es
  440558:	stc    
  440559:	push   ebp
  44055a:	add    esp,DWORD PTR [ebx+0x6b0d413]
  440560:	test   DWORD PTR [ebp+0x17],ecx
  440563:	lea    ecx,[edx-0x28]
  440566:	add    BYTE PTR [eax],al
  440568:	add    BYTE PTR [eax-0x47],ch
  44056b:	xlat   BYTE PTR ds:[ebx]
  44056c:	mov    esi,DWORD PTR [esi]
  44056e:	aas    
  44056f:	cld    
  440570:	inc    ecx
  440571:	daa    
  440572:	nop
  440573:	inc    edx
  440574:	loopne 0x4405de
  440576:	int3   
  440577:	fisttp WORD PTR [ebx-0x74b248be]
  44057d:	arpl   WORD PTR ss:[edi-0x75],cx
  440581:	div    dl
  440583:	rol    DWORD PTR [ebx-0xd],cl
  440586:	mov    bh,0xe7
  440588:	xchg   ecx,eax
  440589:	mov    bh,0x5e
  44058b:	clc    
  44058c:	xor    DWORD PTR [edi-0x6caa7af5],0xffffff8a
  440593:	mov    ch,0xa4
  440595:	repz push es
  440597:	add    BYTE PTR [eax],al
  440599:	pop    ds
  44059a:	and    BYTE PTR [ebp+0x4a929345],al
  4405a0:	fdiv   st,st(0)
  4405a2:	mov    ds,WORD PTR [edi-0x78f90d00]
  4405a8:	dec    ebp
  4405a9:	xchg   DWORD PTR [edx-0xc6d1fae],edx
  4405af:	rol    DWORD PTR [ebx-0xd],cl
  4405b2:	xor    DWORD PTR [esi],edi
  4405b4:	xor    al,0x90
  4405b6:	ret    
  4405b7:	rol    DWORD PTR [ebx-0xd],cl
  4405ba:	xchg   ecx,eax
  4405bb:	or     al,BYTE PTR [edi+eiz*1-0x36]
  4405bf:	call   DWORD PTR [eax+0x78]
  4405c2:	hlt    
  4405c3:	adc    edx,esp
  4405c5:	mov    al,0x6
  4405c7:	dec    esi
  4405c8:	mov    ebp,DWORD PTR [esi+0xe84f6a]
  4405ce:	add    BYTE PTR [eax],al
  4405d0:	scas   eax,DWORD PTR es:[edi]
  4405d1:	pusha  
  4405d2:	clc    
  4405d3:	push   DWORD PTR [eax+0x43]
  4405d6:	or     ecx,DWORD PTR [ebx+0x158466ae]
  4405dc:	push   DWORD PTR [edx]
  4405de:	cmp    al,0x0
  4405e0:	lock mov bh,0x27
  4405e3:	mov    esi,ebx
  4405e5:	mov    dl,0xd3
  4405e7:	inc    ebx
  4405e8:	xrelease mov DWORD PTR [edx],edi
  4405eb:	cmp    BYTE PTR [edi],bl
  4405ed:	retf   0xffff
  4405f0:	sub    bx,WORD PTR [edi-0x3640ec]
  4405f7:	dec    edi
  4405f8:	push   0x30d4540b
  4405fd:	pop    es
  4405fe:	dec    edi
  4405ff:	mov    esp,esi
  440601:	push   ss
  440602:	aam    0x43
  440604:	repz mov eax,0x5dbf75e7
  44060a:	clc    
  44060b:	sub    DWORD PTR [edi-0x38eb60f6],0xffffffc9
  440612:	dec    DWORD PTR [edi-0x65]
  440615:	(bad)
  440618:	pushf  
  440619:	mov    ebx,eax
  44061b:	add    al,0x88
  44061d:	out    0x67,al
  44061f:	xor    al,0xf7
  440621:	(bad)  
  440622:	dec    DWORD PTR [edx+0x43d41af6]
  440628:	repz mov bh,0xe7
  44062b:	push   ecx
  44062c:	jp     0x44068b
  44062e:	clc    
  44062f:	xor    DWORD PTR [edi],0xe
  440632:	xchg   DWORD PTR [ebp+0x0],eax
  440635:	add    BYTE PTR [eax],al
  440637:	aas    
  440638:	xchg   ecx,eax
  440639:	adc    dl,BYTE PTR [edi+eax*2]
  44063c:	leave  
  44063d:	call   DWORD PTR [ecx+0x68]
  440640:	ret    
  440641:	fisttp WORD PTR [ebx+0x43d3f2fe]
  440647:	repz or DWORD PTR [eax+0x28],ecx
  44064b:	mov    ds:0x1f301291,al
  440650:	leave  
  440651:	call   DWORD PTR [ecx+0x1b]
  440654:	xor    esp,edi
  440656:	jmp    DWORD PTR [ecx+ecx*4]
  440659:	ret    
  44065a:	or     al,0x52
  44065c:	push   ss
  44065d:	aam    0x43
  44065f:	repz add edx,DWORD PTR [eax-0x62f90f2f]
  440666:	pop    esp
  440667:	pop    ds
  440668:	leave  
  440669:	dec    DWORD PTR [esi+ebp*4-0x4c95b1a2]
  440670:	lock add DWORD PTR [ebx+0x43d3bb06],ecx
  440677:	repz mov eax,0x6fc755f8
  44067d:	(bad)  
  44067f:	aam    0x5c
  440681:	mov    bh,0x1
  440683:	repz push es
  440685:	add    BYTE PTR [ebx+0x4bdbace],cl
  44068b:	repz dec edx
  44068d:	retf   
  44068e:	int3   
  44068f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440690:	dec    ebx
  440691:	retf   
  440692:	int3   
  440693:	inc    esi
  440694:	nop
  440695:	jmp    0x440622
  440697:	cs jne 0x4406de
  44069e:	lahf   
  44069f:	mov    edx,0x4ba7ccbc
  4406a4:	retf   
  4406a5:	int3   
  4406a6:	es nop
  4406a8:	jmp    0x4406fd
  4406aa:	sbb    eax,0xd33d84b4
  4406af:	xor    bh,BYTE PTR [eax+eax*1]
  4406b2:	push   0xb0d42bfa
  4406b7:	push   es
  4406b8:	test   DWORD PTR ds:0x3c330b,esi
  4406be:	mov    esp,0x305d54bc
  4406c3:	dec    ebx
  4406c4:	retf   
  4406c5:	int3   
  4406c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4406c7:	(bad)  
  4406c8:	jmp    0x44071b
  4406ca:	fcmovnb st,st(2)
  4406cc:	add    eax,DWORD PTR [eax-0xd]
  4406cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4406d0:	cmp    edx,esp
  4406d2:	mov    al,0x6
  4406d4:	push   eax
  4406d5:	call   0x3c6639
  4406da:	jo     0x44071f
  4406dc:	pop    es
  4406dd:	mov    DWORD PTR [esi-0x14b27ba6],esi
  4406e3:	mov    ch,0x65
  4406e5:	add    BYTE PTR [eax-0xe],bh
  4406e8:	push   edi
  4406e9:	aam    0xb0
  4406eb:	push   es
  4406ec:	dec    esi
  4406ed:	jmp    DWORD PTR [esi-0x691a7ba6]
  4406f3:	inc    edi
  4406f4:	retf   
  4406f5:	int3   
  4406f6:	inc    esi
  4406f7:	nop
  4406f8:	jmp    0x44067d
  4406fa:	xlat   BYTE PTR ds:[ebx]
  4406fb:	and    al,cl
  4406fd:	inc    ebp
  4406fe:	fild   DWORD PTR [esi]
  440700:	add    BYTE PTR [eax],al
  440702:	add    BYTE PTR [eax],al
  440704:	add    bl,dh
  440706:	inc    ebx
  440707:	inc    edx
  440708:	fmul   QWORD PTR [ebx+0x7]
  44070b:	add    BYTE PTR [eax],al
  44070d:	lods   al,BYTE PTR ds:[esi]
  44070e:	shl    ebx,0x1
  440711:	repz push es
  440713:	add    bh,al
  440715:	cs pop ebx
  440717:	(bad)  
  440718:	push   ebx
  44071a:	push   es
  44071b:	rol    DWORD PTR [ebp-0x71],0x6
  44071f:	add    BYTE PTR [eax],al
  440721:	(bad)
  440726:	or     DWORD PTR [eax],esi
  440728:	aam    0x30
  44072a:	pop    es
  44072b:	call   0xf89f83d9
  440730:	mov    eax,ds:0x3c32c3
  440735:	into   
  440736:	pop    ebx
  440737:	clc    
  440738:	add    bl,dh
  44073a:	ror    BYTE PTR [ebx],cl
  44073c:	(bad)  
  44073d:	out    dx,al
  44073e:	push   ds
  44073f:	aam    0x43
  440741:	repz push es
  440743:	add    BYTE PTR [eax],al
  440745:	rep outs dx,DWORD PTR ds:[esi]
  440747:	add    eax,0xd41ef6c7
  44074c:	inc    ebx
  44074d:	repz add eax,0x87f30000
  440753:	cmp    dh,BYTE PTR [eax]
  440755:	pop    ds
  440756:	(bad)  
  440757:	(bad)  
  440758:	jmp    DWORD PTR [esi-0x14fa3ef0]
  44075e:	xor    bh,BYTE PTR [eax+eax*1]
  440761:	repz push es
  440763:	add    BYTE PTR [eax],al
  440765:	jo     0x440780
  440767:	cmp    ah,dl
  440769:	add    BYTE PTR [eax],al
  44076b:	add    BYTE PTR [eax-0x98afffa],dh
  440771:	lock (bad) 
  440773:	(bad)  
  440774:	out    0x6,al
  440776:	aam    0x43
  440778:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44077a:	das    
  44077b:	aam    0x30
  44077d:	pop    es
  44077e:	test   DWORD PTR ds:0x3c3323,ecx
  440784:	push   0xffffffcc
  440786:	out    0x8b,eax
  440788:	(bad)  
  440789:	push   ss
  44078a:	aam    0x43
  44078c:	repz lea eax,[edx-0x18]
  440790:	lock les edi,FWORD PTR [ebx]
  440793:	mov    DWORD PTR [esi],esi
  440795:	outs   dx,DWORD PTR ds:[esi]
  440796:	test   BYTE PTR [ebp-0x35],cl
  440799:	nop
  44079a:	or     bl,BYTE PTR [edi+eax*8]
  44079d:	(bad)  
  44079e:	jmp    DWORD PTR [edi+0x43]
  4407a1:	add    eax,DWORD PTR [eax+0x0]
  4407a4:	pushf  
  4407a5:	hlt    
  4407a6:	call   ebx
  4407a8:	xor    BYTE PTR [edi],al
  4407aa:	popf   
  4407ab:	cmp    al,0xa7
  4407ad:	(bad)  
  4407ae:	inc    esi
  4407b0:	out    dx,al
  4407b1:	retf   0x43d3
  4407b4:	repz rol DWORD PTR [ebx],cl
  4407b7:	inc    eax
  4407b8:	repz out dx,al
  4407ba:	pop    edi
  4407bb:	add    al,0xb3
  4407bd:	push   es
  4407be:	test   DWORD PTR ds:0x3c3327,edx
  4407c4:	shr    DWORD PTR [esi-0x43],0xf7
  4407c8:	push   esp
  4407c9:	pop    edx
  4407ca:	jl     0x440790
  4407cc:	sti    
  4407cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4407ce:	inc    edi
  4407cf:	aam    0x0
  4407d1:	add    BYTE PTR [eax],al
  4407d3:	mov    al,0x6
  4407d5:	stc    
  4407d6:	adc    eax,0x3c32ab
  4407db:	nop
  4407dc:	mov    edi,0xa7f343d3
  4407e1:	dec    ebx
  4407e2:	aam    0xb0
  4407e4:	push   es
  4407e5:	push   eax
  4407e6:	call   0x3c6152
  4407eb:	jo     0x440830
  4407ed:	add    ecx,DWORD PTR [ecx+0x4d8456b6]
  4407f3:	add    edi,DWORD PTR [eax+0x59fdd5e7]
  4407f9:	clc    
  4407fa:	sub    DWORD PTR [edi],0x3
  4407fd:	popf   
  4407fe:	xor    al,0xc7
  440800:	(bad)  
  440803:	ds push edi
  440805:	dec    ebp
  440806:	push   0xfffffff3
  440808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440809:	xor    edx,esp
  44080b:	xor    BYTE PTR [edi],al
  44080d:	push   eax
  44080e:	call   0x3c5982
  440813:	jo     0x440857
  440815:	or     ecx,DWORD PTR [ebx+0x4d86572e]
  44081b:	ror    DWORD PTR [ebp-0x4c1703ae],cl
  440821:	out    dx,eax
  440822:	jae    0x44086d
  440824:	mov    es,WORD PTR [edx-0x20]
  440827:	inc    ebx
  440828:	mov    cs,WORD PTR [edx-0x24]
  44082b:	inc    edx
  44082c:	outs   dx,DWORD PTR ds:[esi]
  44082d:	test   eax,0x7c598cfb
  440832:	(bad)  
  440833:	sti    
  440834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440835:	aas    
  440836:	aam    0x0
  440838:	add    BYTE PTR [eax],al
  44083a:	xor    BYTE PTR [edi],al
  44083c:	test   DWORD PTR ds:0x3c3333,edx
  440842:	shl    DWORD PTR [edi+0x6b0d44b],0xfd
  440849:	inc    esp
  44084a:	push   edi
  44084b:	mov    dh,0x84
  44084d:	or     eax,0x3c331f
  440852:	lock retf 
  440854:	sti    
  440855:	push   ecx
  440856:	pop    ebx
  440857:	xor    esi,esi
  440859:	(bad)  
  44085a:	cmp    al,0x85
  44085c:	ret    
  44085d:	or     al,0x68
  44085f:	mov    bl,0xf3
  440861:	add    eax,esi
  440863:	cmp    bh,ah
  440865:	push   esp
  440866:	jg     0xc3acecbe
  44086c:	sti    
  44086d:	add    ebp,DWORD PTR [esi+0xf45863a]
  440873:	lea    ecx,[edx-0x20]
  440876:	fmul   DWORD PTR [ebx]
  440878:	inc    eax
  440879:	aam    0xb0
  44087b:	push   es
  44087c:	xchg   DWORD PTR [ebp+0x13],ecx
  44087f:	ins    DWORD PTR es:[edi],dx
  440880:	cdq    
  440881:	(bad)  
  440882:	ss pop edi
  440884:	(bad)  
  440885:	push   ebx
  440887:	push   es
  440888:	in     eax,0x9
  44088a:	push   0xb183f7b2
  44088f:	add    eax,DWORD PTR [edi+0x428ccb55]
  440895:	clc    
  440896:	or     dl,al
  440898:	out    dx,eax
  440899:	jae    0x440896
  44089b:	mov    ecx,DWORD PTR [edx]
  44089d:	xor    al,0x0
  44089f:	add    BYTE PTR [eax],al
  4408a1:	lahf   
  4408a2:	(bad)  
  4408a3:	inc    DWORD PTR [edx]
  4408a5:	ds pop edi
  4408a7:	test   BYTE PTR [ecx],dl
  4408a9:	lock mov cl,0xf7
  4408ac:	mov    eax,ds:0x3c32e7
  4408b1:	lock shl edi,0x89
  4408b5:	jecxz  0x440842
  4408b7:	dec    edx
  4408b8:	clc    
  4408b9:	jb     0x440901
  4408bb:	out    0x3,al
  4408bd:	repz push es
  4408bf:	test   DWORD PTR ds:0x3c32bf,edx
  4408c5:	lock mov cl,0xf7
  4408c8:	xor    edi,ecx
  4408ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4408cb:	xor    edx,esp
  4408cd:	mov    al,0x6
  4408cf:	std    
  4408d0:	inc    esp
  4408d1:	pop    ebx
  4408d2:	mov    es,WORD PTR [edi]
  4408d4:	jmp    0x44085a
  4408d6:	mov    gs,WORD PTR [edx]
  4408d8:	and    al,0x1f
  4408da:	(bad)  
  4408db:	dec    DWORD PTR [eax+0x43d426fe]
  4408e1:	repz adc eax,edi
  4408e4:	mov    esi,esp
  4408e6:	(bad)  
  4408e7:	rol    DWORD PTR [ebx-0xd],cl
  4408ea:	adc    eax,edi
  4408ec:	mov    esi,edi
  4408ee:	sub    dl,ah
  4408f0:	inc    ebx
  4408f1:	rep outs dx,BYTE PTR ds:[esi]
  4408f3:	dec    ecx
  4408f4:	test   DWORD PTR [eax+ebx*2],0x34540d8a
  4408fb:	cmp    al,0x0
  4408fd:	push   0xffffffca
  4408ff:	idiv   DWORD PTR [ecx+0x4003f3]
  440905:	add    BYTE PTR [eax],al
  440907:	add    BYTE PTR [edx+0x6d],dh
  44090a:	inc    DWORD PTR [edx]
  44090c:	repz push es
  44090e:	test   DWORD PTR [ebp-0x25],edx
  440911:	sub    ecx,edi
  440913:	mov    esi,edi
  440915:	cs aam 0x43
  440918:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44091a:	daa    
  44091b:	aam    0x30
  44091d:	pop    es
  44091e:	push   eax
  44091f:	call   0x3c661b
  440924:	jo     0x440968
  440926:	add    ecx,DWORD PTR [ebx+0x43d412fe]
  44092c:	repz mov ch,0xe7
  44092f:	aad    0x99
  440931:	push   edi
  440932:	clc    
  440933:	test   DWORD PTR [ebx-0x4cccfc2f],esi
  440939:	imul   esp,DWORD PTR ds:0xd422ce8b,0x43
  440940:	repz add ebx,0x4
  440944:	jo     0x44095f
  440946:	cmp    ah,dl
  440948:	mov    al,0x6
  44094a:	add    BYTE PTR [edx+edi*8-0x5b],dh
  44094e:	adc    edx,esp
  440950:	mov    al,0x6
  440952:	xchg   DWORD PTR [edi+ecx*1+0x3],eax
  440956:	call   0xf89b57b8
  44095b:	mov    ebx,esi
  44095d:	mov    dl,0xd3
  44095f:	inc    ebx
  440960:	repz mov ah,0xbc
  440963:	xor    esi,DWORD PTR [ebx]
  440965:	mov    esp,edx
  440967:	pop    ebp
  440968:	xor    BYTE PTR [edx-0x35],cl
  44096b:	int3   
  44096c:	add    BYTE PTR [eax],al
  44096e:	add    bl,dh
  440970:	push   es
  440971:	add    BYTE PTR [eax],al
  440973:	repz push es
  440975:	add    BYTE PTR [eax],al
  440977:	repz push es
  440979:	add    BYTE PTR [eax],al
  44097b:	repz push es
  44097d:	add    BYTE PTR [eax],al
  44097f:	repz push es
  440981:	add    BYTE PTR [eax],al
  440983:	repz push es
  440985:	add    BYTE PTR [eax],al
  440987:	repz push es
  440989:	add    BYTE PTR [eax],al
  44098b:	repz push es
  44098d:	add    BYTE PTR [eax],al
  44098f:	repz push es
  440991:	add    BYTE PTR [eax],al
  440993:	repz push es
  440995:	add    BYTE PTR [eax],al
  440997:	repz push es
  440999:	add    BYTE PTR [eax],al
  44099b:	repz push es
  44099d:	add    BYTE PTR [eax],al
  44099f:	repz push es
  4409a1:	add    BYTE PTR [eax],al
  4409a3:	repz push es
  4409a5:	add    BYTE PTR [eax],al
  4409a7:	repz push es
  4409a9:	add    BYTE PTR [eax],al
  4409ab:	repz push es
  4409ad:	add    BYTE PTR [eax],al
  4409af:	repz push es
  4409b1:	add    BYTE PTR [eax],al
  4409b3:	repz push es
  4409b5:	add    BYTE PTR [eax],al
  4409b7:	repz push es
  4409b9:	add    BYTE PTR [eax],al
  4409bb:	repz push es
  4409bd:	add    BYTE PTR [eax],al
  4409bf:	repz push es
  4409c1:	add    BYTE PTR [eax],al
  4409c3:	repz push es
  4409c5:	add    BYTE PTR [eax],al
  4409c7:	repz push es
  4409c9:	add    BYTE PTR [eax],al
  4409cb:	repz push es
  4409cd:	add    BYTE PTR [eax],al
  4409cf:	repz push es
  4409d1:	add    BYTE PTR [eax],al
  4409d3:	add    BYTE PTR [eax],al
  4409d5:	add    bl,dh
  4409d7:	push   es
  4409d8:	add    BYTE PTR [eax],al
  4409da:	repz push es
  4409dc:	add    BYTE PTR [eax],al
  4409de:	repz push es
  4409e0:	add    BYTE PTR [eax],al
  4409e2:	repz push es
  4409e4:	add    BYTE PTR [eax],al
  4409e6:	repz push es
  4409e8:	add    BYTE PTR [eax],al
  4409ea:	repz push es
  4409ec:	add    BYTE PTR [eax],al
  4409ee:	repz push es
  4409f0:	add    BYTE PTR [eax],al
  4409f2:	repz push es
  4409f4:	add    BYTE PTR [eax],al
  4409f6:	repz push es
  4409f8:	add    BYTE PTR [eax],al
  4409fa:	repz push es
  4409fc:	add    BYTE PTR [eax],al
  4409fe:	repz push es
  440a00:	add    BYTE PTR [eax],al
  440a02:	repz push es
  440a04:	add    BYTE PTR [eax],al
  440a06:	repz push es
  440a08:	add    BYTE PTR [eax],al
  440a0a:	repz push es
  440a0c:	add    BYTE PTR [eax],al
  440a0e:	repz push es
  440a10:	add    BYTE PTR [eax],al
  440a12:	repz push es
  440a14:	add    BYTE PTR [eax],al
  440a16:	repz push es
  440a18:	add    BYTE PTR [eax],al
  440a1a:	repz push es
  440a1c:	add    BYTE PTR [eax],al
  440a1e:	repz push es
  440a20:	add    BYTE PTR [eax],al
  440a22:	repz push es
  440a24:	add    BYTE PTR [eax],al
  440a26:	repz push es
  440a28:	add    BYTE PTR [eax],al
  440a2a:	repz push es
  440a2c:	add    BYTE PTR [eax],al
  440a2e:	repz push es
  440a30:	add    BYTE PTR [eax],al
  440a32:	repz push es
  440a34:	add    BYTE PTR [eax],al
  440a36:	repz push es
  440a38:	add    BYTE PTR [eax],al
  440a3a:	add    BYTE PTR [eax],al
  440a3c:	add    bl,dh
  440a3e:	push   es
  440a3f:	add    BYTE PTR [eax],al
  440a41:	repz push es
  440a43:	add    BYTE PTR [eax],al
  440a45:	repz push es
  440a47:	add    BYTE PTR [eax],al
  440a49:	repz push es
  440a4b:	add    BYTE PTR [eax],al
  440a4d:	repz push es
  440a4f:	add    BYTE PTR [eax],al
  440a51:	repz push es
  440a53:	add    BYTE PTR [eax],al
  440a55:	repz push es
  440a57:	add    BYTE PTR [eax],al
  440a59:	repz push es
  440a5b:	add    BYTE PTR [eax],al
  440a5d:	repz push es
  440a5f:	add    BYTE PTR [eax],al
  440a61:	repz push es
  440a63:	add    BYTE PTR [eax],al
  440a65:	repz push es
  440a67:	add    BYTE PTR [eax],al
  440a69:	repz push es
  440a6b:	add    BYTE PTR [eax],al
  440a6d:	repz push es
  440a6f:	add    BYTE PTR [eax],al
  440a71:	repz push es
  440a73:	add    BYTE PTR [eax],al
  440a75:	repz push es
  440a77:	add    BYTE PTR [eax],al
  440a79:	repz push es
  440a7b:	add    BYTE PTR [eax],al
  440a7d:	repz push es
  440a7f:	add    BYTE PTR [eax],al
  440a81:	add    BYTE PTR [eax+eax*1],al
  440a84:	add    bl,dh
  440a86:	push   es
  440a87:	add    BYTE PTR [eax],al
  440a89:	jmp    0x440a91
  440a8b:	add    BYTE PTR [eax],al
  440a8d:	outs   dx,DWORD PTR ds:[esi]
  440a8e:	xor    eax,0x355f3390
  440a93:	cwde   
  440a94:	xor    ecx,DWORD PTR [edi-0x70cc5fcc]
  440a9a:	xor    al,0xa8
  440a9c:	xor    esi,ebx
  440a9e:	mov    BYTE PTR [ebx],0x0
  440aa1:	dec    ebx
  440aa2:	pop    es
  440aa3:	add    BYTE PTR [eax],al
  440aa5:	adc    BYTE PTR [esi],bh
  440aa7:	mov    edi,DWORD PTR [ecx]
  440aa9:	arpl   WORD PTR [esi],di
  440aab:	call   0x8539:0xa83e5c39
  440ab2:	sar    DWORD PTR ds:[ecx],cl
  440ab5:	int    0x3e
  440ab7:	call   0x2d80f9f5
  440abc:	cmp    ch,BYTE PTR [eax]
  440abe:	cmp    eax,0x3d3a3a51
  440ac3:	fnstsw WORD PTR [edx]
  440ac5:	xchg   edi,eax
  440ac6:	cmp    al,0xc7
  440ac8:	cmp    al,0xb6
  440aca:	cmp    edx,ebp
  440acc:	cmp    al,0xf7
  440ace:	cmp    DWORD PTR ds:0xbe39cc3d,ecx
  440ad4:	cmp    eax,0x3ddb3a30
  440ad9:	pop    edx
  440ada:	cmp    ch,bh
  440adc:	cmp    eax,0x3e0c3a5c
  440ae1:	add    DWORD PTR [ecx],edi
  440ae3:	es add bh,BYTE PTR ds:[ecx]
  440ae7:	cmp    DWORD PTR [esi],edi
  440ae9:	add    BYTE PTR [eax],al
  440aeb:	add    BYTE PTR [ecx+edi*1],al
  440aee:	inc    ebp
  440aef:	ds fwait
  440af1:	cmp    cl,al
  440af3:	ds sub al,0x39
  440af6:	xchg   BYTE PTR [edi],bh
  440af8:	js     0x440b32
  440afa:	popf   
  440afb:	aas    
  440afc:	dec    ebp
  440afd:	cmp    BYTE PTR [eax-0x1bc7d1c1],dh
  440b03:	aas    
  440b04:	or     DWORD PTR [eax],edi
  440b06:	add    BYTE PTR [eax],al
  440b08:	repz (bad) 
  440b0a:	add    eax,DWORD PTR [eax]
  440b0c:	addr16 pop es
  440b0e:	add    BYTE PTR [eax],al
  440b10:	icebp  
  440b11:	ss and eax,0x5936a230
  440b17:	xor    BYTE PTR [edi+esi*1+0x66],cl
  440b1b:	xor    BYTE PTR [edi+0x37],ah
  440b1e:	test   DWORD PTR [eax],esi
  440b20:	push   0x79309336
  440b25:	mov    eax,ss:0xbf369c30
  440b2b:	xor    BYTE PTR [esi-0x2dcf28ca],ch
  440b31:	ss jmp 0x440b64
  440b34:	mov    edx,0x2310336
  440b39:	ss dec eax
  440b3b:	xor    DWORD PTR ds:0x16315436,esi
  440b41:	ss push 0x31
  440b44:	jno    0x440b7b
  440b46:	mov    esi,0xd535bb31
  440b4b:	xor    DWORD PTR [edx+0x31eb35],edx
  440b51:	add    BYTE PTR [eax],al
  440b53:	xchg   DWORD PTR ds:0x34ea31fe,esi
  440b59:	push   cs
  440b5a:	xor    al,BYTE PTR [edi]
  440b5c:	xor    eax,0x3514321d
  440b61:	xor    al,0x32
  440b63:	sbb    DWORD PTR ds:0x34ae323f,esi
  440b69:	dec    ecx
  440b6a:	xor    bh,BYTE PTR [ebp-0x2ecdabcc]
  440b70:	xor    al,0x68
  440b72:	xor    cl,dh
  440b74:	xor    al,0x72
  440b76:	xor    ah,BYTE PTR [esp+esi*1-0x66]
  440b7a:	xor    dh,BYTE PTR ds:0x4132cc34
  440b80:	xor    al,0xdc
  440b82:	xor    dh,ch
  440b84:	xor    ebp,DWORD PTR [ebx]
  440b86:	xor    ebx,ebx
  440b88:	xor    ecx,DWORD PTR [ebx+esi*1-0x5b]
  440b8c:	xor    esp,DWORD PTR [ebx+0x33]
  440b8f:	call   0x8433:0x7a337133
  440b96:	xor    esp,DWORD PTR [edi+0x33]
  440b99:	popf   
  440b9a:	xor    edx,DWORD PTR [ecx-0x51cc4ec6]
  440ba0:	cmp    cl,dh
  440ba2:	xor    eax,ebp
  440ba4:	cmp    ah,ch
  440ba6:	xor    esi,ebx
  440ba8:	push   es
  440ba9:	add    BYTE PTR [eax],al
  440bab:	repz push es
  440bad:	add    BYTE PTR [eax],al
  440baf:	repz push es
  440bb1:	add    BYTE PTR [eax],al
  440bb3:	repz push es
  440bb5:	add    BYTE PTR [eax],al
  440bb7:	add    BYTE PTR [eax],al
  440bb9:	add    bl,dh
  440bbb:	push   es
  440bbc:	add    BYTE PTR [eax],al
  440bbe:	repz push es
  440bc0:	add    BYTE PTR [eax],al
  440bc2:	repz push es
  440bc4:	add    BYTE PTR [eax],al
  440bc6:	repz push es
  440bc8:	add    BYTE PTR [eax],al
  440bca:	repz push es
  440bcc:	add    BYTE PTR [eax],al
  440bce:	repz push es
  440bd0:	add    BYTE PTR [eax],al
  440bd2:	repz push es
  440bd4:	add    BYTE PTR [eax],al
  440bd6:	repz push es
  440bd8:	add    BYTE PTR [eax],al
  440bda:	repz push es
  440bdc:	add    BYTE PTR [eax],al
  440bde:	repz push es
  440be0:	add    BYTE PTR [eax],al
  440be2:	repz push es
  440be4:	add    BYTE PTR [eax],al
  440be6:	repz push es
  440be8:	add    BYTE PTR [eax],al
  440bea:	repz push es
  440bec:	add    BYTE PTR [eax],al
  440bee:	repz push es
  440bf0:	add    BYTE PTR [eax],al
  440bf2:	repz push es
  440bf4:	add    BYTE PTR [eax],al
  440bf6:	repz push es
  440bf8:	add    BYTE PTR [eax],al
  440bfa:	repz push es
  440bfc:	add    BYTE PTR [eax],al
  440bfe:	repz push es
  440c00:	add    BYTE PTR [eax],al
  440c02:	repz push es
  440c04:	add    BYTE PTR [eax],al
  440c06:	repz push es
  440c08:	add    BYTE PTR [eax],al
  440c0a:	repz push es
  440c0c:	add    BYTE PTR [eax],al
  440c0e:	repz push es
  440c10:	add    BYTE PTR [eax],al
  440c12:	repz push es
  440c14:	add    BYTE PTR [eax],al
  440c16:	repz push es
  440c18:	add    BYTE PTR [eax],al
  440c1a:	repz push es
  440c1c:	add    BYTE PTR [eax],al
  440c1e:	add    BYTE PTR [eax],al
  440c20:	add    bl,dh
  440c22:	push   es
  440c23:	add    BYTE PTR [eax],al
  440c25:	repz push es
  440c27:	add    BYTE PTR [eax],al
  440c29:	repz push es
  440c2b:	add    BYTE PTR [eax],al
  440c2d:	repz push es
  440c2f:	add    BYTE PTR [eax],al
  440c31:	repz push es
  440c33:	add    BYTE PTR [eax],al
  440c35:	repz push es
  440c37:	add    BYTE PTR [eax],al
  440c39:	repz push es
  440c3b:	add    BYTE PTR [eax],al
  440c3d:	repz push es
  440c3f:	add    BYTE PTR [eax],al
  440c41:	repz push es
  440c43:	add    BYTE PTR [eax],al
  440c45:	repz push es
  440c47:	add    BYTE PTR [eax],al
  440c49:	repz push es
  440c4b:	add    BYTE PTR [eax],al
  440c4d:	repz push es
  440c4f:	add    BYTE PTR [eax],al
  440c51:	repz push es
  440c53:	add    BYTE PTR [eax],al
  440c55:	repz push es
  440c57:	add    BYTE PTR [eax],al
  440c59:	repz push es
  440c5b:	add    BYTE PTR [eax],al
  440c5d:	repz push es
  440c5f:	add    BYTE PTR [eax],al
  440c61:	repz push es
  440c63:	add    BYTE PTR [eax],al
  440c65:	repz push es
  440c67:	add    BYTE PTR [eax],al
  440c69:	repz push es
  440c6b:	add    BYTE PTR [eax],al
  440c6d:	repz push es
  440c6f:	add    BYTE PTR [eax],al
  440c71:	repz push es
  440c73:	add    BYTE PTR [eax],al
  440c75:	repz push es
  440c77:	add    BYTE PTR [eax],al
  440c79:	repz push es
  440c7b:	add    BYTE PTR [eax],al
  440c7d:	repz push es
  440c7f:	add    BYTE PTR [eax],al
  440c81:	repz push es
  440c83:	add    BYTE PTR [eax],al
  440c85:	add    BYTE PTR [eax],al
  440c87:	add    bl,dh
  440c89:	push   es
  440c8a:	add    BYTE PTR [eax],al
  440c8c:	repz push es
  440c8e:	add    BYTE PTR [eax],al
  440c90:	repz push es
  440c92:	add    BYTE PTR [eax],al
  440c94:	repz push es
  440c96:	add    BYTE PTR [eax],al
  440c98:	repz push es
  440c9a:	add    BYTE PTR [eax],al
  440c9c:	repz push es
  440c9e:	add    BYTE PTR [eax],al
  440ca0:	repz push es
  440ca2:	add    BYTE PTR [eax],al
  440ca4:	repz push es
  440ca6:	add    BYTE PTR [eax],al
  440ca8:	repz push es
  440caa:	add    BYTE PTR [eax],al
  440cac:	repz push es
  440cae:	add    BYTE PTR [eax],al
  440cb0:	repz push es
  440cb2:	add    BYTE PTR [eax],al
  440cb4:	repz push es
  440cb6:	add    BYTE PTR [eax],al
  440cb8:	repz push es
  440cba:	add    BYTE PTR [eax],al
  440cbc:	repz push es
  440cbe:	add    BYTE PTR [eax],al
  440cc0:	repz push es
  440cc2:	add    BYTE PTR [eax],al
  440cc4:	repz push es
  440cc6:	add    BYTE PTR [eax],al
  440cc8:	repz push es
  440cca:	add    BYTE PTR [eax],al
  440ccc:	repz push es
  440cce:	add    BYTE PTR [eax],al
  440cd0:	repz push es
  440cd2:	add    BYTE PTR [eax],al
  440cd4:	repz push es
  440cd6:	add    BYTE PTR [eax],al
  440cd8:	repz push es
  440cda:	add    BYTE PTR [eax],al
  440cdc:	repz push es
  440cde:	add    BYTE PTR [eax],al
  440ce0:	repz push es
  440ce2:	add    BYTE PTR [eax],al
  440ce4:	repz push es
  440ce6:	add    BYTE PTR [eax],al
  440ce8:	repz push es
  440cea:	add    BYTE PTR [eax],al
  440cec:	add    BYTE PTR [eax],al
  440cee:	add    bl,dh
  440cf0:	push   es
  440cf1:	add    BYTE PTR [eax],al
  440cf3:	repz push es
  440cf5:	add    BYTE PTR [eax],al
  440cf7:	repz push es
  440cf9:	add    BYTE PTR [eax],al
  440cfb:	repz push es
  440cfd:	add    BYTE PTR [eax],al
  440cff:	repz push es
  440d01:	add    BYTE PTR [eax],al
  440d03:	repz push es
  440d05:	add    BYTE PTR [eax],al
  440d07:	repz push es
  440d09:	add    BYTE PTR [eax],al
  440d0b:	repz push es
  440d0d:	add    BYTE PTR [eax],al
  440d0f:	repz push es
  440d11:	add    BYTE PTR [eax],al
  440d13:	repz push es
  440d15:	add    BYTE PTR [eax],al
  440d17:	repz push es
  440d19:	add    BYTE PTR [eax],al
  440d1b:	repz push es
  440d1d:	add    BYTE PTR [eax],al
  440d1f:	repz push es
  440d21:	add    BYTE PTR [eax],al
  440d23:	repz push es
  440d25:	add    BYTE PTR [eax],al
  440d27:	repz push es
  440d29:	add    BYTE PTR [eax],al
  440d2b:	repz push es
  440d2d:	add    BYTE PTR [eax],al
  440d2f:	repz push es
  440d31:	add    BYTE PTR [eax],al
  440d33:	repz push es
  440d35:	add    BYTE PTR [eax],al
  440d37:	repz push es
  440d39:	add    BYTE PTR [eax],al
  440d3b:	repz push es
  440d3d:	add    BYTE PTR [eax],al
  440d3f:	repz push es
  440d41:	add    BYTE PTR [eax],al
  440d43:	repz push es
  440d45:	add    BYTE PTR [eax],al
  440d47:	repz push es
  440d49:	add    BYTE PTR [eax],al
  440d4b:	repz push es
  440d4d:	add    BYTE PTR [eax],al
  440d4f:	repz push es
  440d51:	add    BYTE PTR [eax],al
  440d53:	add    BYTE PTR [eax],al
  440d55:	add    bl,dh
  440d57:	push   es
  440d58:	add    BYTE PTR [eax],al
  440d5a:	repz push es
  440d5c:	add    BYTE PTR [eax],al
  440d5e:	repz push es
  440d60:	add    BYTE PTR [eax],al
  440d62:	repz push es
  440d64:	add    BYTE PTR [eax],al
  440d66:	repz push es
  440d68:	add    BYTE PTR [eax],al
  440d6a:	repz push es
  440d6c:	add    BYTE PTR [eax],al
  440d6e:	repz push es
  440d70:	add    BYTE PTR [eax],al
  440d72:	repz push es
  440d74:	add    BYTE PTR [eax],al
  440d76:	repz push es
  440d78:	add    BYTE PTR [eax],al
  440d7a:	repz push es
  440d7c:	add    BYTE PTR [eax],al
  440d7e:	repz push es
  440d80:	add    BYTE PTR [eax],al
  440d82:	repz push es
  440d84:	add    BYTE PTR [eax],al
  440d86:	repz push es
  440d88:	add    BYTE PTR [eax],al
  440d8a:	repz push es
  440d8c:	add    BYTE PTR [eax],al
  440d8e:	repz push es
  440d90:	add    BYTE PTR [eax],al
  440d92:	repz push es
  440d94:	add    BYTE PTR [eax],al
  440d96:	repz push es
  440d98:	add    BYTE PTR [eax],al
  440d9a:	repz push es
  440d9c:	add    BYTE PTR [eax],al
  440d9e:	repz push es
  440da0:	add    BYTE PTR [eax],al
  440da2:	repz push es
  440da4:	add    BYTE PTR [eax],al
  440da6:	repz push es
  440da8:	add    BYTE PTR [eax],al
  440daa:	repz push es
  440dac:	add    BYTE PTR [eax],al
  440dae:	repz push es
  440db0:	add    BYTE PTR [eax],al
  440db2:	repz push es
  440db4:	add    BYTE PTR [eax],al
  440db6:	repz push es
  440db8:	add    BYTE PTR [eax],al
  440dba:	add    BYTE PTR [eax],al
  440dbc:	add    bl,dh
  440dbe:	push   es
  440dbf:	add    BYTE PTR [eax],al
  440dc1:	repz push es
  440dc3:	add    BYTE PTR [eax],al
  440dc5:	repz push es
  440dc7:	add    BYTE PTR [eax],al
  440dc9:	repz push es
  440dcb:	add    BYTE PTR [eax],al
  440dcd:	repz push es
  440dcf:	add    BYTE PTR [eax],al
  440dd1:	repz push es
  440dd3:	add    BYTE PTR [eax],al
  440dd5:	repz push es
  440dd7:	add    BYTE PTR [eax],al
  440dd9:	repz push es
  440ddb:	add    BYTE PTR [eax],al
  440ddd:	repz push es
  440ddf:	add    BYTE PTR [eax],al
  440de1:	repz push es
  440de3:	add    BYTE PTR [eax],al
  440de5:	repz push es
  440de7:	add    BYTE PTR [eax],al
  440de9:	repz push es
  440deb:	add    BYTE PTR [eax],al
  440ded:	repz push es
  440def:	add    BYTE PTR [eax],al
  440df1:	repz push es
  440df3:	add    BYTE PTR [eax],al
  440df5:	repz push es
  440df7:	add    BYTE PTR [eax],al
  440df9:	repz push es
  440dfb:	add    BYTE PTR [eax],al
  440dfd:	repz push es
  440dff:	add    BYTE PTR [eax],al
  440e01:	repz push es
  440e03:	add    BYTE PTR [eax],al
  440e05:	repz push es
  440e07:	add    BYTE PTR [eax],al
  440e09:	repz push es
  440e0b:	add    BYTE PTR [eax],al
  440e0d:	repz push es
  440e0f:	add    BYTE PTR [eax],al
  440e11:	repz push es
  440e13:	add    BYTE PTR [eax],al
  440e15:	repz push es
  440e17:	add    BYTE PTR [eax],al
  440e19:	repz push es
  440e1b:	add    BYTE PTR [eax],al
  440e1d:	repz push es
  440e1f:	add    BYTE PTR [eax],al
  440e21:	add    BYTE PTR [eax],al
  440e23:	add    bl,dh
  440e25:	push   es
  440e26:	add    BYTE PTR [eax],al
  440e28:	repz push es
  440e2a:	add    BYTE PTR [eax],al
  440e2c:	repz push es
  440e2e:	add    BYTE PTR [eax],al
  440e30:	repz push es
  440e32:	add    BYTE PTR [eax],al
  440e34:	repz push es
  440e36:	add    BYTE PTR [eax],al
  440e38:	repz push es
  440e3a:	add    BYTE PTR [eax],al
  440e3c:	repz push es
  440e3e:	add    BYTE PTR [eax],al
  440e40:	repz push es
  440e42:	add    BYTE PTR [eax],al
  440e44:	repz push es
  440e46:	add    BYTE PTR [eax],al
  440e48:	repz push es
  440e4a:	add    BYTE PTR [eax],al
  440e4c:	repz push es
  440e4e:	add    BYTE PTR [eax],al
  440e50:	repz push es
  440e52:	add    BYTE PTR [eax],al
  440e54:	repz push es
  440e56:	add    BYTE PTR [eax],al
  440e58:	repz push es
  440e5a:	add    BYTE PTR [eax],al
  440e5c:	repz push es
  440e5e:	add    BYTE PTR [eax],al
  440e60:	repz push es
  440e62:	add    BYTE PTR [eax],al
  440e64:	repz push es
  440e66:	add    BYTE PTR [eax],al
  440e68:	repz push es
  440e6a:	add    BYTE PTR [eax],al
  440e6c:	repz push es
  440e6e:	add    BYTE PTR [eax],al
  440e70:	repz push es
  440e72:	add    BYTE PTR [eax],al
  440e74:	repz push es
  440e76:	add    BYTE PTR [eax],al
  440e78:	repz push es
  440e7a:	add    BYTE PTR [eax],al
  440e7c:	repz push es
  440e7e:	add    BYTE PTR [eax],al
  440e80:	repz push es
  440e82:	add    BYTE PTR [eax],al
  440e84:	repz push es
  440e86:	add    BYTE PTR [eax],al
  440e88:	add    BYTE PTR [eax],al
  440e8a:	add    bl,dh
  440e8c:	push   es
  440e8d:	add    BYTE PTR [eax],al
  440e8f:	repz push es
  440e91:	add    BYTE PTR [eax],al
  440e93:	repz push es
  440e95:	add    BYTE PTR [eax],al
  440e97:	repz push es
  440e99:	add    BYTE PTR [eax],al
  440e9b:	repz push es
  440e9d:	add    BYTE PTR [eax],al
  440e9f:	repz push es
  440ea1:	add    BYTE PTR [eax],al
  440ea3:	cld    
  440ea4:	dec    ebp
  440ea5:	inc    esp
  440ea6:	add    BYTE PTR [eax],al
  440ea8:	dec    esi
  440ea9:	inc    esp
  440eaa:	add    BYTE PTR [esi+ecx*2],al
  440ead:	inc    esp
  440eae:	add    BYTE PTR [eax],cl
  440eb0:	dec    esi
  440eb1:	inc    esp
  440eb2:	add    BYTE PTR [esi+ecx*2],cl
  440eb5:	inc    esp
  440eb6:	add    BYTE PTR [eax],dl
  440eb8:	dec    esi
  440eb9:	inc    esp
  440eba:	add    BYTE PTR [esi+ecx*2],dl
  440ebd:	inc    esp
  440ebe:	add    BYTE PTR [eax],bl
  440ec0:	dec    esi
  440ec1:	inc    esp
  440ec2:	add    BYTE PTR [esi+ecx*2],bl
  440ec5:	inc    esp
  440ec6:	add    BYTE PTR [eax],ah
  440ec8:	dec    esi
  440ec9:	inc    esp
  440eca:	add    BYTE PTR [esi+ecx*2],ah
  440ecd:	inc    esp
  440ece:	add    BYTE PTR [eax],ch
  440ed0:	dec    esi
  440ed1:	inc    esp
  440ed2:	add    BYTE PTR [esi+ecx*2],ch
  440ed5:	inc    esp
  440ed6:	add    al,ch
  440ed8:	dec    ebp
  440ed9:	inc    esp
  440eda:	add    BYTE PTR [eax],dh
  440edc:	dec    esi
  440edd:	inc    esp
  440ede:	add    BYTE PTR [esi+ecx*2],dh
  440ee1:	inc    esp
  440ee2:	add    BYTE PTR [eax],bh
  440ee4:	dec    esi
  440ee5:	inc    esp
  440ee6:	add    BYTE PTR [esi+ecx*2],bh
  440ee9:	inc    esp
  440eea:	add    BYTE PTR [eax+0x4e],al
  440eed:	inc    esp
  440eee:	add    BYTE PTR [esi+ecx*2+0x44],al
  440ef2:	add    BYTE PTR [eax+0x4e],cl
  440ef5:	inc    esp
  440ef6:	add    BYTE PTR [esi+ecx*2+0x44],cl
  440efa:	add    BYTE PTR [eax+0x4e],dl
  440efd:	inc    esp
  440efe:	add    BYTE PTR [esi+ecx*2+0x44],dl
  440f02:	add    BYTE PTR [eax+0x4e],bl
  440f05:	inc    esp
  440f06:	add    BYTE PTR [esi+ecx*2+0x44],bl
  440f0a:	add    BYTE PTR [eax+0x4e],ah
  440f0d:	inc    esp
  440f0e:	add    BYTE PTR [esi+ecx*2+0x44],ah
  440f12:	add    BYTE PTR [eax+0x4e],ch
  440f15:	inc    esp
  440f16:	add    BYTE PTR [esi+ecx*2+0x44],ch
  440f1a:	add    BYTE PTR [eax+0x4e],dh
  440f1d:	inc    esp
  440f1e:	add    BYTE PTR [esi+ecx*2+0x44],dh
  440f22:	add    BYTE PTR [eax+0x4e],bh
  440f25:	inc    esp
  440f26:	add    BYTE PTR [esi+ecx*2+0x44],bh
  440f2a:	add    BYTE PTR [eax-0x7bffbbb2],al
  440f30:	dec    esi
  440f31:	inc    esp
  440f32:	add    BYTE PTR [eax-0x73ffbbb2],cl
  440f38:	dec    esi
  440f39:	inc    esp
  440f3a:	add    BYTE PTR [eax+0x2000444e],dl
  440f40:	dec    esi
  440f41:	inc    esp
  440f42:	add    BYTE PTR [esi+ecx*2+0x4e980044],dl
  440f49:	inc    esp
  440f4a:	add    BYTE PTR [esi+ecx*2+0x4ea00044],bl
  440f51:	inc    esp
  440f52:	add    BYTE PTR [esi+ecx*2+0x4ea80044],ah
  440f59:	inc    esp
  440f5a:	add    BYTE PTR [esi+ecx*2+0x4eb00044],ch
  440f61:	inc    esp
  440f62:	add    BYTE PTR [esi+ecx*2+0x4eb80044],dh
  440f69:	inc    esp
  440f6a:	add    BYTE PTR [esi+ecx*2+0x4ec00044],bh
  440f71:	inc    esp
  440f72:	add    ah,al
  440f74:	dec    esi
  440f75:	inc    esp
  440f76:	add    al,cl
  440f78:	dec    esi
  440f79:	inc    esp
  440f7a:	add    ah,cl
  440f7c:	dec    esi
  440f7d:	inc    esp
  440f7e:	add    al,dl
  440f80:	dec    esi
  440f81:	inc    esp
  440f82:	add    ah,dl
  440f84:	dec    esi
  440f85:	inc    esp
  440f86:	add    al,bl
  440f88:	dec    esi
  440f89:	inc    esp
  440f8a:	add    ah,bl
  440f8c:	dec    esi
  440f8d:	inc    esp
  440f8e:	add    al,ah
  440f90:	dec    esi
  440f91:	inc    esp
  440f92:	add    ah,ah
  440f94:	dec    esi
  440f95:	inc    esp
  440f96:	add    al,ch
  440f98:	dec    esi
  440f99:	inc    esp
  440f9a:	add    ah,ch
  440f9c:	dec    esi
  440f9d:	inc    esp
  440f9e:	add    al,dh
  440fa0:	dec    esi
  440fa1:	inc    esp
  440fa2:	add    ah,dh
  440fa4:	dec    esi
  440fa5:	inc    esp
  440fa6:	add    al,bh
  440fa8:	dec    esi
  440fa9:	inc    esp
  440faa:	add    ah,bh
  440fac:	dec    esi
  440fad:	inc    esp
  440fae:	add    BYTE PTR [eax],al
  440fb0:	dec    edi
  440fb1:	inc    esp
  440fb2:	add    BYTE PTR [edi+ecx*2],al
  440fb5:	inc    esp
  440fb6:	add    BYTE PTR [eax],cl
  440fb8:	dec    edi
  440fb9:	inc    esp
  440fba:	add    BYTE PTR [edi+ecx*2],cl
  440fbd:	inc    esp
  440fbe:	add    BYTE PTR [eax],dl
  440fc0:	dec    edi
  440fc1:	inc    esp
  440fc2:	add    BYTE PTR [edi+ecx*2],dl
  440fc5:	inc    esp
  440fc6:	add    BYTE PTR [eax],bl
  440fc8:	dec    edi
  440fc9:	inc    esp
  440fca:	add    BYTE PTR [edi+ecx*2],bl
  440fcd:	inc    esp
  440fce:	add    BYTE PTR [eax],ah
  440fd0:	dec    edi
  440fd1:	inc    esp
  440fd2:	add    BYTE PTR [edi+ecx*2],ah
  440fd5:	inc    esp
  440fd6:	add    BYTE PTR [eax],ch
  440fd8:	dec    edi
  440fd9:	inc    esp
  440fda:	add    BYTE PTR [edi+ecx*2],ch
  440fdd:	inc    esp
  440fde:	add    BYTE PTR [eax],dh
  440fe0:	dec    edi
  440fe1:	inc    esp
  440fe2:	add    BYTE PTR [edi+ecx*2],al
  440fe5:	inc    esp
  440fe6:	add    BYTE PTR [edi+ecx*2],dh
  440fe9:	inc    esp
  440fea:	add    BYTE PTR [eax],bh
  440fec:	dec    edi
  440fed:	inc    esp
  440fee:	add    BYTE PTR [edi+ecx*2],bh
  440ff1:	inc    esp
  440ff2:	add    BYTE PTR [eax+0x4f],al
  440ff5:	inc    esp
  440ff6:	add    ah,ch
  440ff8:	dec    ebp
  440ff9:	inc    esp
  440ffa:	add    BYTE PTR [edi+ecx*2+0x44],al
  440ffe:	add    BYTE PTR [eax+0x4f],cl
  441001:	inc    esp
  441002:	add    BYTE PTR [edi+ecx*2+0x44],cl
  441006:	add    BYTE PTR [eax+0x4f],dl
  441009:	inc    esp
  44100a:	add    BYTE PTR [edi+ecx*2+0x44],dl
  44100e:	add    BYTE PTR [eax+0x4f],bl
  441011:	inc    esp
  441012:	add    ah,cl
  441014:	dec    esi
  441015:	inc    esp
  441016:	add    BYTE PTR [edi+ecx*2+0x44],bl
  44101a:	add    BYTE PTR [eax+0x4f],ah
  44101d:	inc    esp
  44101e:	add    BYTE PTR [edi+ecx*2+0x44],ah
  441022:	add    BYTE PTR [eax+0x4f],ch
  441025:	inc    esp
  441026:	add    BYTE PTR [edi+ecx*2+0x44],ch
  44102a:	add    BYTE PTR [eax+0x4f],dh
  44102d:	inc    esp
  44102e:	add    BYTE PTR [edi+ecx*2+0x44],dh
  441032:	add    al,dh
  441034:	dec    esi
  441035:	inc    esp
  441036:	add    BYTE PTR [eax+0x7800444e],al
  44103c:	dec    edi
  44103d:	inc    esp
  44103e:	add    BYTE PTR [edi+ecx*2+0x44],bh
  441042:	add    BYTE PTR [eax-0x7bffbbb1],al
  441048:	dec    edi
  441049:	inc    esp
  44104a:	add    BYTE PTR [eax-0x73ffbbb1],cl
  441050:	dec    edi
  441051:	inc    esp
  441052:	add    BYTE PTR [eax-0x6bffbbb1],dl
  441058:	dec    edi
  441059:	inc    esp
  44105a:	add    BYTE PTR [eax-0x63ffbbb1],bl
  441060:	dec    edi
  441061:	inc    esp
  441062:	add    BYTE PTR [eax+0x2c00444f],ah
  441068:	dec    edi
  441069:	inc    esp
  44106a:	add    BYTE PTR [edi+ecx*2+0x4fa80044],ah
  441071:	inc    esp
  441072:	add    BYTE PTR [edi+ecx*2+0x4fb00044],ch
  441079:	inc    esp
  44107a:	add    BYTE PTR [edi+ecx*2+0x4f400044],dh
  441081:	inc    esp
  441082:	add    BYTE PTR [eax-0x43ffbbb1],bh
  441088:	dec    edi
  441089:	inc    esp
  44108a:	add    al,al
  44108c:	dec    edi
  44108d:	inc    esp
  44108e:	add    al,al
  441090:	dec    esi
  441091:	inc    esp
  441092:	add    ah,al
  441094:	dec    edi
  441095:	inc    esp
  441096:	add    al,cl
  441098:	dec    edi
  441099:	inc    esp
  44109a:	add    BYTE PTR [edi+ecx*2],ah
  44109d:	inc    esp
  44109e:	add    ah,cl
  4410a0:	dec    edi
  4410a1:	inc    esp
  4410a2:	add    al,dl
  4410a4:	dec    edi
  4410a5:	inc    esp
  4410a6:	add    BYTE PTR [eax+0x4f],dh
  4410a9:	inc    esp
  4410aa:	add    ah,dl
  4410ac:	dec    edi
  4410ad:	inc    esp
  4410ae:	add    al,bl
  4410b0:	dec    edi
  4410b1:	inc    esp
  4410b2:	add    ah,bl
  4410b4:	dec    edi
  4410b5:	inc    esp
  4410b6:	add    al,ah
  4410b8:	dec    edi
  4410b9:	inc    esp
  4410ba:	add    ah,ah
  4410bc:	dec    edi
  4410bd:	inc    esp
  4410be:	add    al,ch
  4410c0:	dec    edi
  4410c1:	inc    esp
  4410c2:	add    ah,ch
  4410c4:	dec    edi
  4410c5:	inc    esp
  4410c6:	add    al,dh
  4410c8:	dec    edi
  4410c9:	inc    esp
  4410ca:	add    ah,dh
  4410cc:	dec    edi
  4410cd:	inc    esp
  4410ce:	add    al,bh
  4410d0:	dec    edi
  4410d1:	inc    esp
  4410d2:	add    ah,bh
  4410d4:	dec    edi
  4410d5:	inc    esp
  4410d6:	add    BYTE PTR [eax],al
  4410d8:	push   eax
  4410d9:	inc    esp
  4410da:	add    al,ch
  4410dc:	dec    edi
  4410dd:	inc    esp
  4410de:	add    BYTE PTR [eax+edx*2],al
  4410e1:	inc    esp
  4410e2:	add    BYTE PTR [eax],cl
  4410e4:	push   eax
  4410e5:	inc    esp
  4410e6:	add    BYTE PTR [eax+edx*2],cl
  4410e9:	inc    esp
  4410ea:	add    BYTE PTR [eax],dl
  4410ec:	push   eax
  4410ed:	inc    esp
  4410ee:	add    BYTE PTR [eax+edx*2],dl
  4410f1:	inc    esp
  4410f2:	add    BYTE PTR [esi+ecx*2],al
  4410f5:	inc    esp
  4410f6:	add    BYTE PTR [eax],bl
  4410f8:	push   eax
  4410f9:	inc    esp
  4410fa:	add    ah,al
  4410fc:	dec    esi
  4410fd:	inc    esp
  4410fe:	add    BYTE PTR [eax+edx*2],bl
  441101:	inc    esp
  441102:	add    BYTE PTR [eax],ah
  441104:	push   eax
  441105:	inc    esp
  441106:	add    BYTE PTR [eax+edx*2],ah
  441109:	inc    esp
  44110a:	add    BYTE PTR [eax],ch
  44110c:	push   eax
  44110d:	inc    esp
  44110e:	add    BYTE PTR [eax+edx*2],ch
  441111:	inc    esp
  441112:	add    BYTE PTR [eax],dl
  441114:	push   eax
  441115:	inc    esp
  441116:	add    BYTE PTR [eax],dh
  441118:	push   eax
  441119:	inc    esp
  44111a:	add    BYTE PTR [eax+edx*2],dh
  44111d:	inc    esp
  44111e:	add    BYTE PTR [eax],bh
  441120:	push   eax
  441121:	inc    esp
  441122:	add    BYTE PTR [eax+edx*2],bh
  441125:	inc    esp
  441126:	add    BYTE PTR [eax+0x50],al
  441129:	inc    esp
  44112a:	add    BYTE PTR [eax+edx*2+0x44],al
  44112e:	add    BYTE PTR [eax+0x50],cl
  441131:	inc    esp
  441132:	add    BYTE PTR [eax+0x7c00444e],dh
  441138:	dec    edi
  441139:	inc    esp
  44113a:	add    BYTE PTR [eax+edx*2+0x44],cl
  44113e:	add    BYTE PTR [eax+0x50],dl
  441141:	inc    esp
  441142:	add    BYTE PTR [eax+edx*2+0x44],dl
  441146:	add    BYTE PTR [eax+0x50],bl
  441149:	inc    esp
  44114a:	add    ah,ah
  44114c:	dec    ebp
  44114d:	inc    esp
  44114e:	add    BYTE PTR [eax+edx*2+0x44],bl
  441152:	add    BYTE PTR [eax+0x50],ah
  441155:	inc    esp
  441156:	add    BYTE PTR [eax+edx*2+0x44],ah
  44115a:	add    al,bh
  44115c:	dec    ebp
  44115d:	inc    esp
  44115e:	add    BYTE PTR [eax+0x50],ch
  441161:	inc    esp
  441162:	add    BYTE PTR [eax+edx*2+0x44],ch
  441166:	add    BYTE PTR [eax+0x7000444e],ch
  44116c:	push   eax
  44116d:	inc    esp
  44116e:	add    BYTE PTR [eax+edx*2+0x44],dh
  441172:	add    al,ch
  441174:	dec    esi
  441175:	inc    esp
  441176:	add    BYTE PTR [eax+0x50],bh
  441179:	inc    esp
  44117a:	add    BYTE PTR [eax+edx*2+0x44],bh
  44117e:	add    BYTE PTR [eax-0x1bffbbb0],al
  441184:	dec    esi
  441185:	inc    esp
  441186:	add    ah,ah
  441188:	dec    ebp
  441189:	inc    esp
  44118a:	add    BYTE PTR [edi+ecx*2+0x44],dl
  44118e:	add    BYTE PTR [eax+edx*2+0x50180044],al
  441195:	inc    esp
  441196:	add    BYTE PTR [eax+edx*2],al
  441199:	inc    esp
  44119a:	add    BYTE PTR [eax-0x73ffbbb0],cl
  4411a0:	push   eax
  4411a1:	inc    esp
  4411a2:	add    BYTE PTR [eax-0x6fffbbb0],dl
  4411a8:	dec    esi
  4411a9:	inc    esp
  4411aa:	add    BYTE PTR [eax+edx*2+0x50980044],dl
  4411b1:	inc    esp
  4411b2:	add    BYTE PTR [eax+edx*2+0x50a00044],bl
  4411b9:	inc    esp
  4411ba:	add    BYTE PTR [eax+0x50],al
  4411bd:	inc    esp
  4411be:	add    BYTE PTR [eax+edx*2+0x50d00044],ah
  4411c5:	inc    esp
  4411c6:	add    ah,dl
  4411c8:	push   eax
  4411c9:	inc    esp
  4411ca:	add    al,bl
  4411cc:	push   eax
  4411cd:	inc    esp
  4411ce:	add    ah,bl
  4411d0:	push   eax
  4411d1:	inc    esp
  4411d2:	add    al,dl
  4411d4:	push   eax
  4411d5:	inc    esp
  4411d6:	add    al,ah
  4411d8:	push   eax
  4411d9:	inc    esp
  4411da:	add    ah,ah
  4411dc:	push   eax
  4411dd:	inc    esp
  4411de:	add    al,ch
  4411e0:	push   eax
  4411e1:	inc    esp
  4411e2:	add    ah,ch
  4411e4:	push   eax
  4411e5:	inc    esp
  4411e6:	add    al,dh
  4411e8:	push   eax
  4411e9:	inc    esp
  4411ea:	add    ah,dh
  4411ec:	push   eax
  4411ed:	inc    esp
  4411ee:	add    al,bh
  4411f0:	push   eax
  4411f1:	inc    esp
  4411f2:	add    ah,bh
  4411f4:	push   eax
  4411f5:	inc    esp
  4411f6:	add    BYTE PTR [eax],al
  4411f8:	push   ecx
  4411f9:	inc    esp
  4411fa:	add    BYTE PTR [ecx+edx*2],al
  4411fd:	inc    esp
  4411fe:	add    BYTE PTR [eax],cl
  441200:	push   ecx
  441201:	inc    esp
  441202:	add    BYTE PTR [ecx+edx*2],cl
  441205:	inc    esp
  441206:	add    BYTE PTR [eax],dl
  441208:	push   ecx
  441209:	inc    esp
  44120a:	add    BYTE PTR [ecx+edx*2],dl
  44120d:	inc    esp
  44120e:	add    BYTE PTR [eax],bl
  441210:	push   ecx
  441211:	inc    esp
  441212:	add    BYTE PTR [ecx+edx*2],bl
  441215:	inc    esp
  441216:	add    BYTE PTR [eax],ah
  441218:	push   ecx
  441219:	inc    esp
  44121a:	add    BYTE PTR [ecx+edx*2],ah
  44121d:	inc    esp
  44121e:	add    BYTE PTR [eax],ch
  441220:	push   ecx
  441221:	inc    esp
  441222:	add    BYTE PTR [ecx+edx*2],ch
  441225:	inc    esp
  441226:	add    BYTE PTR [eax],dh
  441228:	push   ecx
  441229:	inc    esp
  44122a:	add    BYTE PTR [ecx+edx*2],dh
  44122d:	inc    esp
  44122e:	add    BYTE PTR [eax],bh
  441230:	push   ecx
  441231:	inc    esp
  441232:	add    BYTE PTR [ecx+edx*2],bh
  441235:	inc    esp
  441236:	add    BYTE PTR [eax+0x51],al
  441239:	inc    esp
  44123a:	add    BYTE PTR [ecx+edx*2+0x44],al
  44123e:	add    BYTE PTR [eax+0x51],cl
  441241:	inc    esp
  441242:	add    BYTE PTR [ecx+edx*2+0x44],cl
  441246:	add    BYTE PTR [eax+0x51],dl
  441249:	inc    esp
  44124a:	add    BYTE PTR [ecx+edx*2+0x44],dl
  44124e:	add    ah,ch
  441250:	push   eax
  441251:	inc    esp
  441252:	add    BYTE PTR [eax+0x51],bl
  441255:	inc    esp
  441256:	add    BYTE PTR [ecx+edx*2+0x44],bl
  44125a:	add    ah,bh
  44125c:	push   eax
  44125d:	inc    esp
  44125e:	add    BYTE PTR [eax+0x51],ah
  441261:	inc    esp
  441262:	add    BYTE PTR [ecx+edx*2+0x44],ah
  441266:	add    BYTE PTR [eax+0x51],ch
  441269:	inc    esp
  44126a:	add    BYTE PTR [ecx+edx*2+0x44],ch
  44126e:	add    BYTE PTR [eax+0x51],dh
  441271:	inc    esp
  441272:	add    BYTE PTR [ecx+edx*2+0x44],dh
  441276:	add    BYTE PTR [eax+0x51],bh
  441279:	inc    esp
  44127a:	add    BYTE PTR [ecx+edx*2+0x44],bh
  44127e:	add    BYTE PTR [eax-0x7bffbbaf],al
  441284:	push   ecx
  441285:	inc    esp
  441286:	add    BYTE PTR [eax-0x73ffbbaf],cl
  44128c:	push   ecx
  44128d:	inc    esp
  44128e:	add    BYTE PTR [eax-0x6bffbbaf],dl
  441294:	push   ecx
  441295:	inc    esp
  441296:	add    BYTE PTR [ecx+edx*2],al
  441299:	inc    esp
  44129a:	add    BYTE PTR [eax-0x63ffbbaf],bl
  4412a0:	push   ecx
  4412a1:	inc    esp
  4412a2:	add    BYTE PTR [eax-0x5bffbbaf],ah
  4412a8:	push   ecx
  4412a9:	inc    esp
  4412aa:	add    BYTE PTR [eax+0x51],dl
  4412ad:	inc    esp
  4412ae:	add    BYTE PTR [eax+edx*2+0x51a80044],bh
  4412b5:	inc    esp
  4412b6:	add    BYTE PTR [ecx+edx*2+0x51b00044],ch
  4412bd:	inc    esp
  4412be:	add    al,dh
  4412c0:	push   eax
  4412c1:	inc    esp
  4412c2:	add    BYTE PTR [ecx+edx*2+0x51b80044],dh
  4412c9:	inc    esp
  4412ca:	add    BYTE PTR [eax+edx*2+0x51bc0044],dh
  4412d1:	inc    esp
  4412d2:	add    al,al
  4412d4:	push   ecx
  4412d5:	inc    esp
  4412d6:	add    al,dl
  4412d8:	push   eax
  4412d9:	inc    esp
  4412da:	add    ah,al
  4412dc:	push   ecx
  4412dd:	inc    esp
  4412de:	add    BYTE PTR [eax+0x51],bl
  4412e1:	inc    esp
  4412e2:	add    BYTE PTR [eax+0x51],al
  4412e5:	inc    esp
  4412e6:	add    BYTE PTR [ecx+edx*2+0x44],dh
  4412ea:	add    al,cl
  4412ec:	push   ecx
  4412ed:	inc    esp
  4412ee:	add    ah,bh
  4412f0:	push   eax
  4412f1:	inc    esp
  4412f2:	add    ah,cl
  4412f4:	push   ecx
  4412f5:	inc    esp
  4412f6:	add    BYTE PTR [eax-0x2fffbbaf],dl
  4412fc:	push   ecx
  4412fd:	inc    esp
  4412fe:	add    ah,dl
  441300:	push   ecx
  441301:	inc    esp
  441302:	add    al,bl
  441304:	push   ecx
  441305:	inc    esp
  441306:	add    BYTE PTR [eax+0x58004451],dl
  44130c:	push   ecx
  44130d:	inc    esp
  44130e:	add    ah,bl
  441310:	push   ecx
  441311:	inc    esp
  441312:	add    al,ah
  441314:	push   ecx
  441315:	inc    esp
  441316:	add    ah,ah
  441318:	push   ecx
  441319:	inc    esp
  44131a:	add    al,ch
  44131c:	push   ecx
  44131d:	inc    esp
  44131e:	add    ah,ch
  441320:	push   ecx
  441321:	inc    esp
  441322:	add    al,dh
  441324:	push   ecx
  441325:	inc    esp
  441326:	add    ah,dh
  441328:	push   ecx
  441329:	inc    esp
  44132a:	add    al,bh
  44132c:	push   ecx
  44132d:	inc    esp
  44132e:	add    BYTE PTR [eax-0x47ffbbaf],cl
  441334:	push   eax
  441335:	inc    esp
  441336:	add    ah,bh
  441338:	push   ecx
  441339:	inc    esp
  44133a:	add    BYTE PTR [eax],al
  44133c:	push   edx
  44133d:	inc    esp
  44133e:	add    BYTE PTR [edx+edx*2],al
  441341:	inc    esp
  441342:	add    BYTE PTR [eax],cl
  441344:	push   edx
  441345:	inc    esp
  441346:	add    BYTE PTR [edx+edx*2],cl
  441349:	inc    esp
  44134a:	add    BYTE PTR [eax],dl
  44134c:	push   edx
  44134d:	inc    esp
  44134e:	add    al,ah
  441350:	push   ecx
  441351:	inc    esp
  441352:	add    BYTE PTR [edx+edx*2],dl
  441355:	inc    esp
  441356:	add    BYTE PTR [eax],bl
  441358:	push   edx
  441359:	inc    esp
  44135a:	add    BYTE PTR [edx+edx*2],bl
  44135d:	inc    esp
  44135e:	add    BYTE PTR [eax],ah
  441360:	push   edx
  441361:	inc    esp
  441362:	add    BYTE PTR [edx+edx*2],ah
  441365:	inc    esp
  441366:	add    BYTE PTR [eax],ch
  441368:	push   edx
  441369:	inc    esp
  44136a:	add    BYTE PTR [edx+edx*2],ch
  44136d:	inc    esp
  44136e:	add    BYTE PTR [eax],dh
  441370:	push   edx
  441371:	inc    esp
  441372:	add    BYTE PTR [eax+0x51],bh
  441375:	inc    esp
  441376:	add    BYTE PTR [edx+edx*2],dh
  441379:	inc    esp
  44137a:	add    BYTE PTR [eax],bh
  44137c:	push   edx
  44137d:	inc    esp
  44137e:	add    BYTE PTR [edx+edx*2],bh
  441381:	inc    esp
  441382:	add    BYTE PTR [eax+0x52],al
  441385:	inc    esp
  441386:	add    BYTE PTR [ecx+edx*2+0x44],ah
  44138a:	add    BYTE PTR [edx+edx*2+0x44],al
  44138e:	add    BYTE PTR [eax+0x52],cl
  441391:	inc    esp
  441392:	add    BYTE PTR [edx+edx*2+0x44],cl
  441396:	add    BYTE PTR [ecx+edx*2+0x51200044],dl
  44139d:	inc    esp
  44139e:	add    BYTE PTR [edx+edx*2],dh
  4413a1:	inc    esp
  4413a2:	add    BYTE PTR [eax+0x52],dl
  4413a5:	inc    esp
  4413a6:	add    BYTE PTR [edx+edx*2+0x44],dl
  4413aa:	add    BYTE PTR [eax+0x52],bl
  4413ad:	inc    esp
  4413ae:	add    BYTE PTR [edx+edx*2+0x44],bl
  4413b2:	add    BYTE PTR [eax+0x52],ah
  4413b5:	inc    esp
  4413b6:	add    BYTE PTR [edx+edx*2+0x44],ah
  4413ba:	add    BYTE PTR [edx+edx*2],cl
  4413bd:	inc    esp
  4413be:	add    BYTE PTR [eax+0x52],ch
  4413c1:	inc    esp
  4413c2:	add    BYTE PTR [edx+edx*2+0x44],ch
  4413c6:	add    BYTE PTR [eax+0x52],dh
  4413c9:	inc    esp
  4413ca:	add    BYTE PTR [edx+edx*2+0x44],dh
  4413ce:	add    BYTE PTR [eax+0x52],bh
  4413d1:	inc    esp
  4413d2:	add    BYTE PTR [edx+edx*2+0x44],bh
  4413d6:	add    BYTE PTR [eax-0x7bffbbae],al
  4413dc:	push   edx
  4413dd:	inc    esp
  4413de:	add    BYTE PTR [eax-0x73ffbbae],cl
  4413e4:	push   edx
  4413e5:	inc    esp
  4413e6:	add    BYTE PTR [eax-0x6bffbbae],dl
  4413ec:	push   edx
  4413ed:	inc    esp
  4413ee:	add    BYTE PTR [eax+0x20004452],bl
  4413f4:	push   ecx
  4413f5:	inc    esp
  4413f6:	add    BYTE PTR [edx+edx*2+0x44],dh
  4413fa:	add    BYTE PTR [edx+edx*2+0x52a00044],bl
  441401:	inc    esp
  441402:	add    BYTE PTR [edx+edx*2+0x52a80044],ah
  441409:	inc    esp
  44140a:	add    BYTE PTR [edx+edx*2+0x51280044],ch
  441411:	inc    esp
  441412:	add    BYTE PTR [eax-0x4bffbbae],dh
  441418:	push   edx
  441419:	inc    esp
  44141a:	add    BYTE PTR [eax-0x43ffbbae],bh
  441420:	push   edx
  441421:	inc    esp
  441422:	add    al,al
  441424:	push   edx
  441425:	inc    esp
  441426:	add    BYTE PTR [eax-0x3bffbbb0],dh
  44142c:	push   edx
  44142d:	inc    esp
  44142e:	add    al,cl
  441430:	push   edx
  441431:	inc    esp
  441432:	add    ah,cl
  441434:	push   edx
  441435:	inc    esp
  441436:	add    BYTE PTR [edx+edx*2+0x44],dl
  44143a:	add    al,dl
  44143c:	push   edx
  44143d:	inc    esp
  44143e:	add    BYTE PTR [eax+0x52],ch
  441441:	inc    esp
  441442:	add    ah,dl
  441444:	push   edx
  441445:	inc    esp
  441446:	add    al,bl
  441448:	push   edx
  441449:	inc    esp
  44144a:	add    ah,bl
  44144c:	push   edx
  44144d:	inc    esp
  44144e:	add    al,ah
  441450:	push   edx
  441451:	inc    esp
  441452:	add    ah,ah
  441454:	push   edx
  441455:	inc    esp
  441456:	add    BYTE PTR [eax],bl
  441458:	push   edx
  441459:	inc    esp
  44145a:	add    al,ah
  44145c:	push   eax
  44145d:	inc    esp
  44145e:	add    BYTE PTR [edx+edx*2],ch
  441461:	inc    esp
  441462:	add    al,ch
  441464:	push   edx
  441465:	inc    esp
  441466:	add    ah,ch
  441468:	push   edx
  441469:	inc    esp
  44146a:	add    al,dh
  44146c:	push   edx
  44146d:	inc    esp
  44146e:	add    BYTE PTR [eax],ch
  441470:	push   edx
  441471:	inc    esp
  441472:	add    ah,dh
  441474:	push   edx
  441475:	inc    esp
  441476:	add    BYTE PTR [edx+edx*2+0x44],cl
  44147a:	add    al,bh
  44147c:	push   edx
  44147d:	inc    esp
  44147e:	add    ah,bh
  441480:	push   edx
  441481:	inc    esp
  441482:	add    BYTE PTR [eax],al
  441484:	push   ebx
  441485:	inc    esp
  441486:	add    BYTE PTR [ebx+edx*2],al
  441489:	inc    esp
  44148a:	add    BYTE PTR [eax],cl
  44148c:	push   ebx
  44148d:	inc    esp
  44148e:	add    BYTE PTR [ebx+edx*2],cl
  441491:	inc    esp
  441492:	add    BYTE PTR [eax],dl
  441494:	push   ebx
  441495:	inc    esp
  441496:	add    BYTE PTR [ebx+edx*2],dl
  441499:	inc    esp
  44149a:	add    BYTE PTR [eax],bl
  44149c:	push   ebx
  44149d:	inc    esp
  44149e:	add    BYTE PTR [ebx+edx*2],bl
  4414a1:	inc    esp
  4414a2:	add    BYTE PTR [eax],ah
  4414a4:	push   ebx
  4414a5:	inc    esp
  4414a6:	add    BYTE PTR [ebx+edx*2],ah
  4414a9:	inc    esp
  4414aa:	add    BYTE PTR [eax],ch
  4414ac:	push   ebx
  4414ad:	inc    esp
  4414ae:	add    BYTE PTR [ebx+edx*2],ch
  4414b1:	inc    esp
  4414b2:	add    BYTE PTR [eax],cl
  4414b4:	push   ecx
  4414b5:	inc    esp
  4414b6:	add    BYTE PTR [eax],dh
  4414b8:	push   ebx
  4414b9:	inc    esp
  4414ba:	add    BYTE PTR [ebx+edx*2],dh
  4414bd:	inc    esp
  4414be:	add    BYTE PTR [eax],bh
  4414c0:	push   ebx
  4414c1:	inc    esp
  4414c2:	add    BYTE PTR [ebx+edx*2],bh
  4414c5:	inc    esp
  4414c6:	add    BYTE PTR [eax+0x53],al
  4414c9:	inc    esp
  4414ca:	add    BYTE PTR [ebx+edx*2+0x44],al
  4414ce:	add    BYTE PTR [ecx+edx*2+0x51b80044],bl
  4414d5:	inc    esp
  4414d6:	add    BYTE PTR [eax+0x53],cl
  4414d9:	inc    esp
  4414da:	add    BYTE PTR [ebx+edx*2+0x44],cl
  4414de:	add    BYTE PTR [eax+0x53],dl
  4414e1:	inc    esp
  4414e2:	add    ah,ah
  4414e4:	push   ebx
  4414e5:	inc    esp
  4414e6:	add    al,ch
  4414e8:	push   ebx
  4414e9:	inc    esp
  4414ea:	add    ah,ch
  4414ec:	push   ebx
  4414ed:	inc    esp
  4414ee:	add    al,dh
  4414f0:	push   ebx
  4414f1:	inc    esp
  4414f2:	add    ah,dh
  4414f4:	push   ebx
  4414f5:	inc    esp
  4414f6:	add    al,bh
  4414f8:	push   ebx
  4414f9:	inc    esp
  4414fa:	add    ah,bh
  4414fc:	push   ebx
  4414fd:	inc    esp
  4414fe:	add    BYTE PTR [eax],al
  441500:	push   esp
  441501:	inc    esp
  441502:	add    BYTE PTR [esp+edx*2],al
  441505:	inc    esp
  441506:	add    BYTE PTR [eax],cl
  441508:	push   esp
  441509:	inc    esp
  44150a:	add    BYTE PTR [esp+edx*2],cl
  44150d:	inc    esp
  44150e:	add    BYTE PTR [eax],dl
  441510:	push   esp
  441511:	inc    esp
  441512:	add    BYTE PTR [esp+edx*2],dl
  441515:	inc    esp
  441516:	add    BYTE PTR [eax],bl
  441518:	push   esp
  441519:	inc    esp
  44151a:	add    BYTE PTR [esp+edx*2],bl
  44151d:	inc    esp
  44151e:	add    BYTE PTR [eax],ah
  441520:	push   esp
  441521:	inc    esp
  441522:	add    BYTE PTR [esp+edx*2],ah
  441525:	inc    esp
  441526:	add    BYTE PTR [eax],ch
  441528:	push   esp
  441529:	inc    esp
  44152a:	add    BYTE PTR [esp+edx*2],ch
  44152d:	inc    esp
  44152e:	add    BYTE PTR [eax],dh
  441530:	push   esp
  441531:	inc    esp
  441532:	add    BYTE PTR [esp+edx*2],dh
  441535:	inc    esp
  441536:	add    BYTE PTR [eax],bh
  441538:	push   esp
  441539:	inc    esp
  44153a:	add    BYTE PTR [esp+edx*2],bh
  44153d:	inc    esp
  44153e:	add    BYTE PTR [eax+0x54],al
  441541:	inc    esp
  441542:	add    BYTE PTR [esp+edx*2+0x44],al
  441546:	add    BYTE PTR [eax+0x54],cl
  441549:	inc    esp
  44154a:	add    BYTE PTR [eax],dl
  44154c:	push   esp
  44154d:	inc    esp
  44154e:	add    BYTE PTR [esp+edx*2+0x44],cl
  441552:	add    BYTE PTR [eax+0x54],dl
  441555:	inc    esp
  441556:	add    BYTE PTR [esp+edx*2+0x44],dl
  44155a:	add    BYTE PTR [eax+0x54],bl
  44155d:	inc    esp
  44155e:	add    BYTE PTR [esp+edx*2+0x44],bl
  441562:	add    BYTE PTR [eax+0x54],ah
  441565:	inc    esp
  441566:	add    al,dh
  441568:	push   ebx
  441569:	inc    esp
  44156a:	add    BYTE PTR [esp+edx*2+0x44],ah
  44156e:	add    BYTE PTR [eax+0x54],ch
  441571:	inc    esp
  441572:	add    BYTE PTR [esp+edx*2+0x44],ah
  441576:	add    BYTE PTR [esp+edx*2+0x44],ch
  44157a:	add    BYTE PTR [eax+0x54],dh
  44157d:	inc    esp
  44157e:	add    BYTE PTR [esp+edx*2+0x44],dh
  441582:	add    BYTE PTR [eax+0x54],bh
  441585:	inc    esp
  441586:	add    BYTE PTR [esp+edx*2+0x44],bh
  44158a:	add    BYTE PTR [eax-0x7bffbbac],al
  441590:	push   esp
  441591:	inc    esp
  441592:	add    BYTE PTR [eax+0x60004454],cl
  441598:	push   esp
  441599:	inc    esp
  44159a:	add    BYTE PTR [esp+edx*2+0x54300044],cl
  4415a1:	inc    esp
  4415a2:	add    BYTE PTR [eax-0x6bffbbac],dl
  4415a8:	push   esp
  4415a9:	inc    esp
  4415aa:	add    BYTE PTR [eax-0x63ffbbac],bl
  4415b0:	push   esp
  4415b1:	inc    esp
  4415b2:	add    BYTE PTR [eax-0x5bffbbac],ah
  4415b8:	push   esp
  4415b9:	inc    esp
  4415ba:	add    BYTE PTR [eax-0x53ffbbac],ch
  4415c0:	push   esp
  4415c1:	inc    esp
  4415c2:	add    BYTE PTR [eax-0x4bffbbac],dh
  4415c8:	push   esp
  4415c9:	inc    esp
  4415ca:	add    BYTE PTR [eax-0x43ffbbac],bh
  4415d0:	push   esp
  4415d1:	inc    esp
  4415d2:	add    BYTE PTR [eax+0x54],al
  4415d5:	inc    esp
  4415d6:	add    al,al
  4415d8:	push   esp
  4415d9:	inc    esp
  4415da:	add    ah,al
  4415dc:	push   esp
  4415dd:	inc    esp
  4415de:	add    al,cl
  4415e0:	push   esp
  4415e1:	inc    esp
  4415e2:	add    ah,cl
  4415e4:	push   esp
  4415e5:	inc    esp
  4415e6:	add    al,dl
  4415e8:	push   esp
  4415e9:	inc    esp
  4415ea:	add    ah,dl
  4415ec:	push   esp
  4415ed:	inc    esp
  4415ee:	add    BYTE PTR [esp+edx*2+0x44],ah
  4415f2:	add    al,bl
  4415f4:	push   esp
  4415f5:	inc    esp
  4415f6:	add    ah,bl
  4415f8:	push   esp
  4415f9:	inc    esp
  4415fa:	add    BYTE PTR [esp+edx*2+0x44],al
  4415fe:	add    BYTE PTR [eax],dh
  441600:	push   esp
  441601:	inc    esp
  441602:	add    BYTE PTR [eax],bl
  441604:	push   esp
  441605:	inc    esp
  441606:	add    al,ah
  441608:	push   esp
  441609:	inc    esp
  44160a:	add    BYTE PTR [eax+0x54],cl
  44160d:	inc    esp
  44160e:	add    ah,ah
  441610:	push   esp
  441611:	inc    esp
  441612:	add    BYTE PTR [eax+0x54],bl
  441615:	inc    esp
  441616:	add    al,ch
  441618:	push   esp
  441619:	inc    esp
  44161a:	add    ah,ch
  44161c:	push   esp
  44161d:	inc    esp
  44161e:	add    al,dh
  441620:	push   esp
  441621:	inc    esp
  441622:	add    ah,dh
  441624:	push   esp
  441625:	inc    esp
  441626:	add    al,bh
  441628:	push   esp
  441629:	inc    esp
  44162a:	add    ah,bh
  44162c:	push   esp
  44162d:	inc    esp
  44162e:	add    al,dl
  441630:	push   esp
  441631:	inc    esp
  441632:	add    BYTE PTR [eax],al
  441634:	push   ebp
  441635:	inc    esp
  441636:	add    BYTE PTR [eax],cl
  441638:	push   esp
  441639:	inc    esp
  44163a:	add    al,bh
  44163c:	push   esp
  44163d:	inc    esp
  44163e:	add    BYTE PTR [edx*2+0x55080044],al
  441645:	inc    esp
  441646:	add    ah,bh
  441648:	push   ebx
  441649:	inc    esp
  44164a:	add    BYTE PTR [edx*2+0x55100044],cl
  441651:	inc    esp
  441652:	add    BYTE PTR [edx*2+0x54100044],dl
  441659:	inc    esp
  44165a:	add    BYTE PTR [eax],bl
  44165c:	push   ebp
  44165d:	inc    esp
  44165e:	add    BYTE PTR [edx*2+0x54d40044],bl
  441665:	inc    esp
  441666:	add    BYTE PTR [esp+edx*2+0x54800044],al
  44166d:	inc    esp
  44166e:	add    BYTE PTR [eax],ah
  441670:	push   ebp
  441671:	inc    esp
  441672:	add    BYTE PTR [edx*2+0x55280044],ah
  441679:	inc    esp
  44167a:	add    ah,ch
  44167c:	push   esp
  44167d:	inc    esp
  44167e:	add    al,ch
  441680:	push   esp
  441681:	inc    esp
  441682:	add    BYTE PTR [edx*2+0x55300044],ch
  441689:	inc    esp
  44168a:	add    BYTE PTR [edx*2+0x54780044],dh
  441691:	inc    esp
  441692:	add    BYTE PTR [eax],bh
  441694:	push   ebp
  441695:	inc    esp
  441696:	add    BYTE PTR [eax],ch
  441698:	push   ebp
  441699:	inc    esp
  44169a:	add    BYTE PTR [edx*2+0x54300044],bh
  4416a1:	inc    esp
  4416a2:	add    BYTE PTR [eax],bl
  4416a4:	push   esp
  4416a5:	inc    esp
  4416a6:	add    BYTE PTR [eax+0x55],al
  4416a9:	inc    esp
  4416aa:	add    BYTE PTR [edx*2+0x54500044],al
  4416b1:	inc    esp
  4416b2:	add    BYTE PTR [ebp+edx*2+0x44],al
  4416b6:	add    BYTE PTR [esp+edx*2],dh
  4416b9:	inc    esp
  4416ba:	add    BYTE PTR [eax+0x55],cl
  4416bd:	inc    esp
  4416be:	add    BYTE PTR [ebp+edx*2+0x44],cl
  4416c2:	add    BYTE PTR [eax+0x55],dl
  4416c5:	inc    esp
  4416c6:	add    BYTE PTR [ebp+edx*2+0x44],dl
  4416ca:	add    BYTE PTR [eax+0x55],bl
  4416cd:	inc    esp
  4416ce:	add    BYTE PTR [ebp+edx*2+0x44],bl
  4416d2:	add    BYTE PTR [eax+0x55],ah
  4416d5:	inc    esp
  4416d6:	add    BYTE PTR [ebp+edx*2+0x44],ah
  4416da:	add    BYTE PTR [eax+0x55],ch
  4416dd:	inc    esp
  4416de:	add    BYTE PTR [ebp+edx*2+0x44],ch
  4416e2:	add    BYTE PTR [eax+0x55],dh
  4416e5:	inc    esp
  4416e6:	add    BYTE PTR [esp+edx*2],bh
  4416e9:	inc    esp
  4416ea:	add    BYTE PTR [ebp+edx*2+0x44],dh
  4416ee:	add    BYTE PTR [eax+0x55],bh
  4416f1:	inc    esp
  4416f2:	add    BYTE PTR [esp+edx*2+0x44],dh
  4416f6:	add    BYTE PTR [ebp+edx*2+0x44],bh
  4416fa:	add    BYTE PTR [eax-0x7bffbbab],al
  441700:	push   ebp
  441701:	inc    esp
  441702:	add    BYTE PTR [eax-0x73ffbbab],cl
  441708:	push   ebp
  441709:	inc    esp
  44170a:	add    BYTE PTR [eax-0x6bffbbab],dl
  441710:	push   ebp
  441711:	inc    esp
  441712:	add    ah,ch
  441714:	push   esp
  441715:	inc    esp
  441716:	add    BYTE PTR [edx*2+0x55980044],bh
  44171d:	inc    esp
  44171e:	add    BYTE PTR [ebp+edx*2+0x54100044],bl
  441725:	inc    esp
  441726:	add    BYTE PTR [edx*2+0x55600044],bh
  44172d:	inc    esp
  44172e:	add    BYTE PTR [eax+0x54],al
  441731:	inc    esp
  441732:	add    BYTE PTR [eax+0x44004455],ah
  441738:	push   esp
  441739:	inc    esp
  44173a:	add    BYTE PTR [ebp+edx*2+0x55a80044],ah
  441741:	inc    esp
  441742:	add    BYTE PTR [ebp+edx*2+0x55b00044],ch
  441749:	inc    esp
  44174a:	add    BYTE PTR [eax+0x55],dl
  44174d:	inc    esp
  44174e:	add    BYTE PTR [ebp+edx*2+0x55b80044],dh
  441755:	inc    esp
  441756:	add    BYTE PTR [eax],al
  441758:	push   ebp
  441759:	inc    esp
  44175a:	add    BYTE PTR [ebp+edx*2+0x44],cl
  44175e:	add    BYTE PTR [ebp+edx*2+0x55800044],bh
  441765:	inc    esp
  441766:	add    BYTE PTR [eax+0x55],al
  441769:	inc    esp
  44176a:	add    BYTE PTR [ebp+edx*2+0x547c0044],bl
  441771:	inc    esp
  441772:	add    al,al
  441774:	push   ebp
  441775:	inc    esp
  441776:	add    BYTE PTR [ebp+edx*2+0x55c40044],cl
  44177d:	inc    esp
  44177e:	add    al,cl
  441780:	push   ebp
  441781:	inc    esp
  441782:	add    ah,cl
  441784:	push   ebp
  441785:	inc    esp
  441786:	add    al,dl
  441788:	push   ebp
  441789:	inc    esp
  44178a:	add    BYTE PTR [eax+0x55],al
  44178d:	inc    esp
  44178e:	add    BYTE PTR [esp+edx*2],cl
  441791:	inc    esp
  441792:	add    BYTE PTR [eax-0x2bffbbac],dl
  441798:	push   ebp
  441799:	inc    esp
  44179a:	add    BYTE PTR [eax],bh
  44179c:	push   esp
  44179d:	inc    esp
  44179e:	add    BYTE PTR [esp+edx*2+0x44],al
  4417a2:	add    al,al
  4417a4:	push   ebp
  4417a5:	inc    esp
  4417a6:	add    BYTE PTR [esp+edx*2+0x55d80044],dl
  4417ad:	inc    esp
  4417ae:	add    BYTE PTR [eax+0x54],al
  4417b1:	inc    esp
  4417b2:	add    ah,bl
  4417b4:	push   ebp
  4417b5:	inc    esp
  4417b6:	add    al,ah
  4417b8:	push   ebp
  4417b9:	inc    esp
  4417ba:	add    BYTE PTR [ebp+edx*2+0x55380044],dl
  4417c1:	inc    esp
  4417c2:	add    ah,ah
  4417c4:	push   ebp
  4417c5:	inc    esp
  4417c6:	add    al,bl
  4417c8:	push   ebp
  4417c9:	inc    esp
  4417ca:	add    BYTE PTR [edx*2+0x55e80044],al
  4417d1:	inc    esp
  4417d2:	add    ah,cl
  4417d4:	push   esp
  4417d5:	inc    esp
  4417d6:	add    ah,ch
  4417d8:	push   ebp
  4417d9:	inc    esp
  4417da:	add    al,dh
  4417dc:	push   ebp
  4417dd:	inc    esp
  4417de:	add    BYTE PTR [esp+edx*2],ah
  4417e1:	inc    esp
  4417e2:	add    al,al
  4417e4:	push   esp
  4417e5:	inc    esp
  4417e6:	add    ah,dh
  4417e8:	push   ebp
  4417e9:	inc    esp
  4417ea:	add    al,bh
  4417ec:	push   ebp
  4417ed:	inc    esp
  4417ee:	add    BYTE PTR [eax],dl
  4417f0:	push   ebp
  4417f1:	inc    esp
  4417f2:	add    ah,bh
  4417f4:	push   ebp
  4417f5:	inc    esp
  4417f6:	add    BYTE PTR [eax],al
  4417f8:	push   esi
  4417f9:	inc    esp
  4417fa:	add    ah,ch
  4417fc:	push   ebp
  4417fd:	inc    esp
  4417fe:	add    BYTE PTR [esi+edx*2],al
  441801:	inc    esp
  441802:	add    BYTE PTR [esi+edx*2],cl
  441805:	inc    esp
  441806:	add    BYTE PTR [eax],dl
  441808:	push   esi
  441809:	inc    esp
  44180a:	add    BYTE PTR [esi+edx*2],dl
  44180d:	inc    esp
  44180e:	add    BYTE PTR [eax],bl
  441810:	push   esi
  441811:	inc    esp
  441812:	add    BYTE PTR [esi+edx*2],bl
  441815:	inc    esp
  441816:	add    BYTE PTR [eax],ah
  441818:	push   esi
  441819:	inc    esp
  44181a:	add    BYTE PTR [esi+edx*2],dl
  44181d:	inc    esp
  44181e:	add    BYTE PTR [esi+edx*2],ah
  441821:	inc    esp
  441822:	add    BYTE PTR [eax],ch
  441824:	push   esi
  441825:	inc    esp
  441826:	add    BYTE PTR [esi+edx*2],ch
  441829:	inc    esp
  44182a:	add    BYTE PTR [eax],dh
  44182c:	push   esi
  44182d:	inc    esp
  44182e:	add    BYTE PTR [esi+edx*2],dh
  441831:	inc    esp
  441832:	add    BYTE PTR [eax],bh
  441834:	push   esi
  441835:	inc    esp
  441836:	add    BYTE PTR [esi+edx*2],bh
  441839:	inc    esp
  44183a:	add    BYTE PTR [eax+0x56],al
  44183d:	inc    esp
  44183e:	add    BYTE PTR [esi+edx*2+0x44],al
  441842:	add    BYTE PTR [eax+0x56],cl
  441845:	inc    esp
  441846:	add    BYTE PTR [esi+edx*2+0x44],cl
  44184a:	add    BYTE PTR [eax+0x56],dl
  44184d:	inc    esp
  44184e:	add    BYTE PTR [esi+edx*2+0x44],dl
  441852:	add    BYTE PTR [eax+0x56],bl
  441855:	inc    esp
  441856:	add    BYTE PTR [esi+edx*2+0x44],bl
  44185a:	add    BYTE PTR [eax+0x56],ah
  44185d:	inc    esp
  44185e:	add    BYTE PTR [esi+edx*2+0x44],ah
  441862:	add    BYTE PTR [eax+0x56],ch
  441865:	inc    esp
  441866:	add    BYTE PTR [esi+edx*2+0x44],ch
  44186a:	add    BYTE PTR [eax+0x56],dh
  44186d:	inc    esp
  44186e:	add    BYTE PTR [esi+edx*2+0x44],dh
  441872:	add    BYTE PTR [eax+0x56],bh
  441875:	inc    esp
  441876:	add    BYTE PTR [esi+edx*2+0x44],bh
  44187a:	add    BYTE PTR [eax-0x7bffbbaa],al
  441880:	push   esi
  441881:	inc    esp
  441882:	add    BYTE PTR [eax],bh
  441884:	push   esi
  441885:	inc    esp
  441886:	add    BYTE PTR [eax-0x73ffbbaa],cl
  44188c:	push   esi
  44188d:	inc    esp
  44188e:	add    BYTE PTR [eax-0x6bffbbaa],dl
  441894:	push   esi
  441895:	inc    esp
  441896:	add    BYTE PTR [eax-0x63ffbbaa],bl
  44189c:	push   esi
  44189d:	inc    esp
  44189e:	add    BYTE PTR [eax-0x5bffbbaa],ah
  4418a4:	push   esi
  4418a5:	inc    esp
  4418a6:	add    BYTE PTR [eax-0x53ffbbaa],ch
  4418ac:	push   esi
  4418ad:	inc    esp
  4418ae:	add    BYTE PTR [eax-0x57ffbbaa],dh
  4418b4:	push   esi
  4418b5:	inc    esp
  4418b6:	add    BYTE PTR [esi+edx*2+0x56b80044],dh
  4418bd:	inc    esp
  4418be:	add    BYTE PTR [esi+edx*2+0x56c00044],bh
  4418c5:	inc    esp
  4418c6:	add    ah,al
  4418c8:	push   esi
  4418c9:	inc    esp
  4418ca:	add    al,cl
  4418cc:	push   esi
  4418cd:	inc    esp
  4418ce:	add    BYTE PTR [eax],dl
  4418d0:	push   esi
  4418d1:	inc    esp
  4418d2:	add    ah,cl
  4418d4:	push   esi
  4418d5:	inc    esp
  4418d6:	add    al,dl
  4418d8:	push   esi
  4418d9:	inc    esp
  4418da:	add    ah,dl
  4418dc:	push   esi
  4418dd:	inc    esp
  4418de:	add    al,bl
  4418e0:	push   esi
  4418e1:	inc    esp
  4418e2:	add    ah,bl
  4418e4:	push   esi
  4418e5:	inc    esp
  4418e6:	add    al,ah
  4418e8:	push   esi
  4418e9:	inc    esp
  4418ea:	add    ah,ah
  4418ec:	push   esi
  4418ed:	inc    esp
  4418ee:	add    al,ch
  4418f0:	push   esi
  4418f1:	inc    esp
  4418f2:	add    BYTE PTR [esi+edx*2],dh
  4418f5:	inc    esp
  4418f6:	add    ah,ch
  4418f8:	push   esi
  4418f9:	inc    esp
  4418fa:	add    al,dh
  4418fc:	push   esi
  4418fd:	inc    esp
  4418fe:	add    ah,dh
  441900:	push   esi
  441901:	inc    esp
  441902:	add    al,bh
  441904:	push   esi
  441905:	inc    esp
  441906:	add    ah,bh
  441908:	push   esi
  441909:	inc    esp
  44190a:	add    BYTE PTR [eax],al
  44190c:	push   edi
  44190d:	inc    esp
  44190e:	add    BYTE PTR [edi+edx*2],al
  441911:	inc    esp
  441912:	add    BYTE PTR [eax],cl
  441914:	push   edi
  441915:	inc    esp
  441916:	add    BYTE PTR [edi+edx*2],cl
  441919:	inc    esp
  44191a:	add    BYTE PTR [eax],dl
  44191c:	push   edi
  44191d:	inc    esp
  44191e:	add    BYTE PTR [edi+edx*2],dl
  441921:	inc    esp
  441922:	add    BYTE PTR [eax],bl
  441924:	push   edi
  441925:	inc    esp
  441926:	add    BYTE PTR [edi+edx*2],bl
  441929:	inc    esp
  44192a:	add    BYTE PTR [eax],ah
  44192c:	push   edi
  44192d:	inc    esp
  44192e:	add    BYTE PTR [eax],al
  441930:	push   edi
  441931:	inc    esp
  441932:	add    BYTE PTR [esi+edx*2],bh
  441935:	inc    esp
  441936:	add    BYTE PTR [edi+edx*2],ah
  441939:	inc    esp
  44193a:	add    BYTE PTR [eax],ch
  44193c:	push   edi
  44193d:	inc    esp
  44193e:	add    BYTE PTR [edi+edx*2],ch
  441941:	inc    esp
  441942:	add    BYTE PTR [eax],dh
  441944:	push   edi
  441945:	inc    esp
  441946:	add    BYTE PTR [esi+edx*2+0x57340044],al
  44194d:	inc    esp
  44194e:	add    BYTE PTR [eax+0x56],al
  441951:	inc    esp
  441952:	add    BYTE PTR [eax],bh
  441954:	push   edi
  441955:	inc    esp
  441956:	add    BYTE PTR [edi+edx*2],bh
  441959:	inc    esp
  44195a:	add    BYTE PTR [eax+0x57],al
  44195d:	inc    esp
  44195e:	add    BYTE PTR [edi+edx*2+0x44],al
  441962:	add    BYTE PTR [eax+0x57],cl
  441965:	inc    esp
  441966:	add    BYTE PTR [edi+edx*2+0x44],cl
  44196a:	add    BYTE PTR [eax+0x57],dl
  44196d:	inc    esp
  44196e:	add    BYTE PTR [edi+edx*2+0x44],dl
  441972:	add    BYTE PTR [eax+0x56],bl
  441975:	inc    esp
  441976:	add    BYTE PTR [eax+0x57],bl
  441979:	inc    esp
  44197a:	add    ah,ch
  44197c:	push   esi
  44197d:	inc    esp
  44197e:	add    BYTE PTR [edi+edx*2+0x44],bl
  441982:	add    BYTE PTR [eax+0x57],ah
  441985:	inc    esp
  441986:	add    BYTE PTR [edi+edx*2+0x44],ah
  44198a:	add    BYTE PTR [esi+edx*2+0x44],cl
  44198e:	add    BYTE PTR [eax+0x57],ch
  441991:	inc    esp
  441992:	add    BYTE PTR [esi+edx*2+0x44],ah
  441996:	add    BYTE PTR [eax+0x56],bl
  441999:	inc    esp
  44199a:	add    BYTE PTR [eax+0x57],al
  44199d:	inc    esp
  44199e:	add    BYTE PTR [edi+edx*2+0x44],ch
  4419a2:	add    BYTE PTR [eax+0x57],dh
  4419a5:	inc    esp
  4419a6:	add    BYTE PTR [eax+0x74004456],al
  4419ac:	push   edi
  4419ad:	inc    esp
  4419ae:	add    BYTE PTR [eax+0x57],bh
  4419b1:	inc    esp
  4419b2:	add    BYTE PTR [edi+edx*2+0x44],bh
  4419b6:	add    BYTE PTR [eax-0x7bffbba9],al
  4419bc:	push   edi
  4419bd:	inc    esp
  4419be:	add    BYTE PTR [eax-0x4fffbba9],cl
  4419c4:	push   esi
  4419c5:	inc    esp
  4419c6:	add    BYTE PTR [eax],cl
  4419c8:	push   edi
  4419c9:	inc    esp
  4419ca:	add    BYTE PTR [edi+edx*2+0x56600044],cl
  4419d1:	inc    esp
  4419d2:	add    al,bl
  4419d4:	push   esi
  4419d5:	inc    esp
  4419d6:	add    BYTE PTR [eax-0x6fffbba9],al
  4419dc:	push   edi
  4419dd:	inc    esp
  4419de:	add    BYTE PTR [edi+edx*2+0x57980044],dl
  4419e5:	inc    esp
  4419e6:	add    BYTE PTR [edi+edx*2+0x57a00044],bl
  4419ed:	inc    esp
  4419ee:	add    BYTE PTR [edi+edx*2+0x57a80044],ah
  4419f5:	inc    esp
  4419f6:	add    BYTE PTR [edi+edx*2+0x57b00044],ch
  4419fd:	inc    esp
  4419fe:	add    BYTE PTR [edi+edx*2+0x57b80044],dh
  441a05:	inc    esp
  441a06:	add    BYTE PTR [eax-0x43ffbba9],bl
  441a0c:	push   edi
  441a0d:	inc    esp
  441a0e:	add    al,al
  441a10:	push   edi
  441a11:	inc    esp
  441a12:	add    BYTE PTR [eax],al
  441a14:	push   edi
  441a15:	inc    esp
  441a16:	add    BYTE PTR [edi+edx*2+0x57c40044],cl
  441a1d:	inc    esp
  441a1e:	add    al,dl
  441a20:	push   esi
  441a21:	inc    esp
  441a22:	add    al,cl
  441a24:	push   edi
  441a25:	inc    esp
  441a26:	add    BYTE PTR [eax+0x57],dh
  441a29:	inc    esp
  441a2a:	add    ah,cl
  441a2c:	push   edi
  441a2d:	inc    esp
  441a2e:	add    al,dl
  441a30:	push   edi
  441a31:	inc    esp
  441a32:	add    ah,dl
  441a34:	push   edi
  441a35:	inc    esp
  441a36:	add    al,bl
  441a38:	push   edi
  441a39:	inc    esp
  441a3a:	add    ah,bl
  441a3c:	push   edi
  441a3d:	inc    esp
  441a3e:	add    BYTE PTR [eax+0x57],ch
  441a41:	inc    esp
  441a42:	add    BYTE PTR [esi+edx*2],dl
  441a45:	inc    esp
  441a46:	add    BYTE PTR [eax+0x3c004456],dl
  441a4c:	push   esi
  441a4d:	inc    esp
  441a4e:	add    al,ah
  441a50:	push   edi
  441a51:	inc    esp
  441a52:	add    ah,ah
  441a54:	push   edi
  441a55:	inc    esp
  441a56:	add    ah,bl
  441a58:	push   esi
  441a59:	inc    esp
  441a5a:	add    al,ch
  441a5c:	push   edi
  441a5d:	inc    esp
  441a5e:	add    ah,ch
  441a60:	push   edi
  441a61:	inc    esp
  441a62:	add    al,dh
  441a64:	push   edi
  441a65:	inc    esp
  441a66:	add    ah,dh
  441a68:	push   edi
  441a69:	inc    esp
  441a6a:	add    al,bh
  441a6c:	push   edi
  441a6d:	inc    esp
  441a6e:	add    BYTE PTR [eax+0x56],cl
  441a71:	inc    esp
  441a72:	add    al,bl
  441a74:	push   esi
  441a75:	inc    esp
  441a76:	add    ah,bh
  441a78:	push   edi
  441a79:	inc    esp
  441a7a:	add    BYTE PTR [edi+edx*2+0x58000044],ah
  441a81:	inc    esp
  441a82:	add    BYTE PTR [eax+ebx*2],al
  441a85:	inc    esp
  441a86:	add    BYTE PTR [eax],cl
  441a88:	pop    eax
  441a89:	inc    esp
  441a8a:	add    BYTE PTR [edi+edx*2],dl
  441a8d:	inc    esp
  441a8e:	add    BYTE PTR [esi+edx*2+0x44],ah
  441a92:	add    BYTE PTR [edi+edx*2+0x44],ah
  441a96:	add    BYTE PTR [eax+ebx*2],cl
  441a99:	inc    esp
  441a9a:	add    BYTE PTR [eax],dl
  441a9c:	pop    eax
  441a9d:	inc    esp
  441a9e:	add    BYTE PTR [eax+ebx*2],dl
  441aa1:	inc    esp
  441aa2:	add    ah,ah
  441aa4:	push   esi
  441aa5:	inc    esp
  441aa6:	add    BYTE PTR [eax],bl
  441aa8:	pop    eax
  441aa9:	inc    esp
  441aaa:	add    BYTE PTR [esi+edx*2+0x581c0044],dh
  441ab1:	inc    esp
  441ab2:	add    BYTE PTR [edi+edx*2+0x58200044],dh
  441ab9:	inc    esp
  441aba:	add    BYTE PTR [eax+ebx*2],ah
  441abd:	inc    esp
  441abe:	add    BYTE PTR [eax+0x57],bl
  441ac1:	inc    esp
  441ac2:	add    al,bh
  441ac4:	push   edi
  441ac5:	inc    esp
  441ac6:	add    BYTE PTR [eax],ch
  441ac8:	pop    eax
  441ac9:	inc    esp
  441aca:	add    BYTE PTR [eax+ebx*2],ch
  441acd:	inc    esp
  441ace:	add    BYTE PTR [eax],dh
  441ad0:	pop    eax
  441ad1:	inc    esp
  441ad2:	add    BYTE PTR [eax+ebx*2],dh
  441ad5:	inc    esp
  441ad6:	add    BYTE PTR [eax],bh
  441ad8:	pop    eax
  441ad9:	inc    esp
  441ada:	add    BYTE PTR [eax+ebx*2],bh
  441add:	inc    esp
  441ade:	add    BYTE PTR [eax+0x58],al
  441ae1:	inc    esp
  441ae2:	add    BYTE PTR [eax+ebx*2+0x44],al
  441ae6:	add    BYTE PTR [eax],cl
  441ae8:	push   edi
  441ae9:	inc    esp
  441aea:	add    BYTE PTR [eax+0x58],cl
  441aed:	inc    esp
  441aee:	add    ah,dh
  441af0:	push   edi
  441af1:	inc    esp
  441af2:	add    BYTE PTR [eax+ebx*2+0x44],cl
  441af6:	add    BYTE PTR [esi+edx*2],cl
  441af9:	inc    esp
  441afa:	add    BYTE PTR [eax+0x58],dl
  441afd:	inc    esp
  441afe:	add    BYTE PTR [eax+ebx*2+0x44],dl
  441b02:	add    BYTE PTR [eax+0x58],bl
  441b05:	inc    esp
  441b06:	add    BYTE PTR [eax+ebx*2+0x44],bl
  441b0a:	add    BYTE PTR [edi+edx*2],bh
  441b0d:	inc    esp
  441b0e:	add    BYTE PTR [edi+edx*2+0x56a00044],ah
  441b15:	inc    esp
  441b16:	add    BYTE PTR [eax+0x58],ah
  441b19:	inc    esp
  441b1a:	add    BYTE PTR [eax+ebx*2+0x44],ah
  441b1e:	add    BYTE PTR [eax+0x58],ch
  441b21:	inc    esp
  441b22:	add    BYTE PTR [ebx+edx*2+0x53880044],al
  441b29:	inc    esp
  441b2a:	add    BYTE PTR [ebx+edx*2+0x53900044],cl
  441b31:	inc    esp
  441b32:	add    BYTE PTR [ebx+edx*2+0x53980044],dl
  441b39:	inc    esp
  441b3a:	add    BYTE PTR [ebx+edx*2+0x539c0044],bl
  441b41:	inc    esp
  441b42:	add    BYTE PTR [eax-0x5fffbbad],cl
  441b48:	push   ebx
  441b49:	inc    esp
  441b4a:	add    BYTE PTR [ebx+edx*2+0x53a40044],bl
  441b51:	inc    esp
  441b52:	add    BYTE PTR [eax-0x53ffbbad],ch
  441b58:	push   ebx
  441b59:	inc    esp
  441b5a:	add    BYTE PTR [eax-0x4fffbbad],dl
  441b60:	push   ebx
  441b61:	inc    esp
  441b62:	add    BYTE PTR [ebx+edx*2+0x53b40044],ch
  441b69:	inc    esp
  441b6a:	add    BYTE PTR [eax-0x7bffbbad],ch
  441b70:	push   ebx
  441b71:	inc    esp
  441b72:	add    BYTE PTR [eax-0x43ffbbad],bh
  441b78:	push   ebx
  441b79:	inc    esp
  441b7a:	add    BYTE PTR [ebx+edx*2+0x53900044],cl
  441b81:	inc    esp
  441b82:	add    BYTE PTR [eax-0x7bffbbad],dh
  441b88:	push   ebx
  441b89:	inc    esp
  441b8a:	add    BYTE PTR [ebx+edx*2+0x53940044],bh
  441b91:	inc    esp
  441b92:	add    BYTE PTR [eax-0x3fffbbad],dh
  441b98:	push   ebx
  441b99:	inc    esp
  441b9a:	add    BYTE PTR [eax-0x5bffbbad],dl
  441ba0:	push   ebx
  441ba1:	inc    esp
  441ba2:	add    ah,al
  441ba4:	push   ebx
  441ba5:	inc    esp
  441ba6:	add    al,al
  441ba8:	push   ebx
  441ba9:	inc    esp
  441baa:	add    BYTE PTR [eax-0x37ffbbad],bl
  441bb0:	push   ebx
  441bb1:	inc    esp
  441bb2:	add    BYTE PTR [ebx+edx*2+0x53c80044],dh
  441bb9:	inc    esp
  441bba:	add    BYTE PTR [ebx+edx*2+0x53a40044],cl
  441bc1:	inc    esp
  441bc2:	add    BYTE PTR [ebx+edx*2+0x53840044],ch
  441bc9:	inc    esp
  441bca:	add    BYTE PTR [eax-0x6fffbbad],dl
  441bd0:	push   ebx
  441bd1:	inc    esp
  441bd2:	add    BYTE PTR [ebx+edx*2+0x538c0044],ch
  441bd9:	inc    esp
  441bda:	add    BYTE PTR [eax-0x6fffbbad],bh
  441be0:	push   ebx
  441be1:	inc    esp
  441be2:	add    BYTE PTR [ebx+edx*2+0x53b80044],bh
  441be9:	inc    esp
  441bea:	add    BYTE PTR [eax-0x37ffbbad],dh
  441bf0:	push   ebx
  441bf1:	inc    esp
  441bf2:	add    BYTE PTR [eax-0x4fffbbad],ah
  441bf8:	push   ebx
  441bf9:	inc    esp
  441bfa:	add    ah,cl
  441bfc:	push   ebx
  441bfd:	inc    esp
  441bfe:	add    al,al
  441c00:	push   ebx
  441c01:	inc    esp
  441c02:	add    BYTE PTR [eax-0x3fffbbad],ah
  441c08:	push   ebx
  441c09:	inc    esp
  441c0a:	add    BYTE PTR [ebx+edx*2+0x53a80044],ch
  441c11:	inc    esp
  441c12:	add    al,dl
  441c14:	push   ebx
  441c15:	inc    esp
  441c16:	add    BYTE PTR [ebx+edx*2+0x53a00044],dl
  441c1d:	inc    esp
  441c1e:	add    BYTE PTR [eax-0x4bffbbad],dl
  441c24:	push   ebx
  441c25:	inc    esp
  441c26:	add    BYTE PTR [eax-0x77ffbbad],bh
  441c2c:	push   ebx
  441c2d:	inc    esp
  441c2e:	add    BYTE PTR [ebx+edx*2+0x53c40044],al
  441c35:	inc    esp
  441c36:	add    ah,cl
  441c38:	push   ebx
  441c39:	inc    esp
  441c3a:	add    BYTE PTR [ebx+edx*2+0x53c00044],al
  441c41:	inc    esp
  441c42:	add    BYTE PTR [eax-0x53ffbbad],bl
  441c48:	push   ebx
  441c49:	inc    esp
  441c4a:	add    ah,dl
  441c4c:	push   ebx
  441c4d:	inc    esp
  441c4e:	add    ah,cl
  441c50:	push   ebx
  441c51:	inc    esp
  441c52:	add    BYTE PTR [ebx+edx*2+0x53980044],ah
  441c59:	inc    esp
  441c5a:	add    al,al
  441c5c:	push   ebx
  441c5d:	inc    esp
  441c5e:	add    BYTE PTR [ebx+edx*2+0x538c0044],bl
  441c65:	inc    esp
  441c66:	add    BYTE PTR [eax-0x4bffbbad],bh
  441c6c:	push   ebx
  441c6d:	inc    esp
  441c6e:	add    BYTE PTR [eax-0x67ffbbad],cl
  441c74:	push   ebx
  441c75:	inc    esp
  441c76:	add    BYTE PTR [ebx+edx*2+0x53d40044],al
  441c7d:	inc    esp
  441c7e:	add    BYTE PTR [ebx+edx*2+0x538c0044],dh
  441c85:	inc    esp
  441c86:	add    BYTE PTR [ebx+edx*2+0x53980044],bl
  441c8d:	inc    esp
  441c8e:	add    BYTE PTR [ebx+edx*2+0x53b40044],dh
  441c95:	inc    esp
  441c96:	add    BYTE PTR [ebx+edx*2+0x53cc0044],bh
  441c9d:	inc    esp
  441c9e:	add    ah,dl
  441ca0:	push   ebx
  441ca1:	inc    esp
  441ca2:	add    BYTE PTR [ebx+edx*2+0x53a00044],al
  441ca9:	inc    esp
  441caa:	add    al,dl
  441cac:	push   ebx
  441cad:	inc    esp
  441cae:	add    BYTE PTR [ebx+edx*2+0x538c0044],dl
  441cb5:	inc    esp
  441cb6:	add    BYTE PTR [eax-0x2fffbbad],bl
  441cbc:	push   ebx
  441cbd:	inc    esp
  441cbe:	add    BYTE PTR [ebx+edx*2+0x53880044],bh
  441cc5:	inc    esp
  441cc6:	add    BYTE PTR [ebx+edx*2+0x53cc0044],dl
  441ccd:	inc    esp
  441cce:	add    BYTE PTR [eax-0x67ffbbad],dl
  441cd4:	push   ebx
  441cd5:	inc    esp
  441cd6:	add    BYTE PTR [ebx+edx*2+0x53d00044],dl
  441cdd:	inc    esp
  441cde:	add    BYTE PTR [eax-0x63ffbbad],cl
  441ce4:	push   ebx
  441ce5:	inc    esp
  441ce6:	add    BYTE PTR [eax-0x77ffbbad],bl
  441cec:	push   ebx
  441ced:	inc    esp
  441cee:	add    BYTE PTR [ebx+edx*2+0x53a00044],ch
  441cf5:	inc    esp
  441cf6:	add    ah,dl
  441cf8:	push   ebx
  441cf9:	inc    esp
  441cfa:	add    al,al
  441cfc:	push   ebx
  441cfd:	inc    esp
  441cfe:	add    al,cl
  441d00:	push   ebx
  441d01:	inc    esp
  441d02:	add    al,dl
  441d04:	push   ebx
  441d05:	inc    esp
  441d06:	add    BYTE PTR [ebx+edx*2+0x53c00044],dh
  441d0d:	inc    esp
  441d0e:	add    BYTE PTR [ebx+edx*2+0x53c00044],cl
  441d15:	inc    esp
  441d16:	add    BYTE PTR [eax-0x4fffbbad],ch
  441d1c:	push   ebx
  441d1d:	inc    esp
  441d1e:	add    ah,dl
  441d20:	push   ebx
  441d21:	inc    esp
  441d22:	add    BYTE PTR [ebx+edx*2+0x53cc0044],dh
  441d29:	inc    esp
  441d2a:	add    al,dl
  441d2c:	push   ebx
  441d2d:	inc    esp
  441d2e:	add    BYTE PTR [eax-0x3bffbbad],dl
  441d34:	push   ebx
  441d35:	inc    esp
  441d36:	add    BYTE PTR [eax-0x6bffbbad],bl
  441d3c:	push   ebx
  441d3d:	inc    esp
  441d3e:	add    al,dl
  441d40:	push   ebx
  441d41:	inc    esp
  441d42:	add    BYTE PTR [eax-0x5bffbbad],dl
  441d48:	push   ebx
  441d49:	inc    esp
  441d4a:	add    BYTE PTR [eax-0x6bffbbad],dl
  441d50:	push   ebx
  441d51:	inc    esp
  441d52:	add    BYTE PTR [ebx+edx*2+0x53b80044],cl
  441d59:	inc    esp
  441d5a:	add    al,cl
  441d5c:	push   ebx
  441d5d:	inc    esp
  441d5e:	add    BYTE PTR [ebx+edx*2+0x53980044],cl
  441d65:	inc    esp
  441d66:	add    BYTE PTR [ebx+edx*2+0x53840044],ch
  441d6d:	inc    esp
  441d6e:	add    BYTE PTR [ebx+edx*2+0x53c00044],bh
  441d75:	inc    esp
  441d76:	add    al,dl
  441d78:	push   ebx
  441d79:	inc    esp
  441d7a:	add    ah,dl
  441d7c:	push   ebx
  441d7d:	inc    esp
  441d7e:	add    BYTE PTR [eax-0x33ffbbad],bl
  441d84:	push   ebx
  441d85:	inc    esp
  441d86:	add    BYTE PTR [eax-0x73ffbbad],bh
  441d8c:	push   ebx
  441d8d:	inc    esp
  441d8e:	add    BYTE PTR [eax-0x3fffbbad],bh
  441d94:	push   ebx
  441d95:	inc    esp
  441d96:	add    BYTE PTR [ebx+edx*2+0x53c00044],dh
  441d9d:	inc    esp
  441d9e:	add    ah,dl
  441da0:	push   ebx
  441da1:	inc    esp
  441da2:	add    BYTE PTR [eax-0x63ffbbad],dh
  441da8:	push   ebx
  441da9:	inc    esp
  441daa:	add    al,al
  441dac:	push   ebx
  441dad:	inc    esp
  441dae:	add    ah,dl
  441db0:	push   ebx
  441db1:	inc    esp
  441db2:	add    al,dl
  441db4:	push   ebx
  441db5:	inc    esp
  441db6:	add    ah,al
  441db8:	push   ebx
  441db9:	inc    esp
  441dba:	add    BYTE PTR [eax-0x73ffbbad],ah
  441dc0:	push   ebx
  441dc1:	inc    esp
  441dc2:	add    BYTE PTR [eax-0x67ffbbad],dl
  441dc8:	push   ebx
  441dc9:	inc    esp
  441dca:	add    al,cl
  441dcc:	push   ebx
  441dcd:	inc    esp
  441dce:	add    BYTE PTR [eax-0x3bffbbad],ah
  441dd4:	push   ebx
  441dd5:	inc    esp
  441dd6:	add    BYTE PTR [ebx+edx*2+0x53c00044],ch
  441ddd:	inc    esp
  441dde:	add    BYTE PTR [ebx+edx*2+0x53a80044],dl
  441de5:	inc    esp
  441de6:	add    BYTE PTR [ebx+edx*2+0x53b80044],dl
  441ded:	inc    esp
  441dee:	add    BYTE PTR [ebx+edx*2+0x53880044],dl
  441df5:	inc    esp
  441df6:	add    al,dl
  441df8:	push   ebx
  441df9:	inc    esp
  441dfa:	add    BYTE PTR [eax-0x7bffbbad],ch
  441e00:	push   ebx
  441e01:	inc    esp
  441e02:	add    BYTE PTR [ebx+edx*2+0x53a40044],dh
  441e09:	inc    esp
  441e0a:	add    BYTE PTR [eax-0x63ffbbad],dh
  441e10:	push   ebx
  441e11:	inc    esp
  441e12:	add    al,cl
  441e14:	push   ebx
  441e15:	inc    esp
  441e16:	add    al,al
  441e18:	push   ebx
  441e19:	inc    esp
  441e1a:	add    ah,dl
  441e1c:	push   ebx
  441e1d:	inc    esp
  441e1e:	add    ah,dl
  441e20:	push   ebx
  441e21:	inc    esp
  441e22:	add    BYTE PTR [ebx+edx*2+0x53c00044],dh
  441e29:	inc    esp
  441e2a:	add    BYTE PTR [ebx+edx*2+0x53b00044],cl
  441e31:	inc    esp
  441e32:	add    BYTE PTR [ebx+edx*2+0x53840044],dl
  441e39:	inc    esp
  441e3a:	add    ah,dl
  441e3c:	push   ebx
  441e3d:	inc    esp
  441e3e:	add    ah,dl
  441e40:	push   ebx
  441e41:	inc    esp
  441e42:	add    BYTE PTR [eax+0x58],dh
  441e45:	inc    esp
  441e46:	add    BYTE PTR [eax+ebx*2+0x44],dh
  441e4a:	add    BYTE PTR [eax+0x58],bh
  441e4d:	inc    esp
  441e4e:	add    BYTE PTR [eax+ebx*2+0x44],bh
  441e52:	add    BYTE PTR [eax-0x7bffbba8],al
  441e58:	pop    eax
  441e59:	inc    esp
  441e5a:	add    BYTE PTR [eax-0x73ffbba8],cl
  441e60:	pop    eax
  441e61:	inc    esp
  441e62:	add    BYTE PTR [eax-0x6bffbba8],dl
  441e68:	pop    eax
  441e69:	inc    esp
  441e6a:	add    BYTE PTR [eax+ebx*2+0x58980044],dl
  441e71:	inc    esp
  441e72:	add    BYTE PTR [eax-0x63ffbba8],bl
  441e78:	pop    eax
  441e79:	inc    esp
  441e7a:	add    BYTE PTR [eax-0x5bffbba8],ah
  441e80:	pop    eax
  441e81:	inc    esp
  441e82:	add    BYTE PTR [eax-0x53ffbba8],ch
  441e88:	pop    eax
  441e89:	inc    esp
  441e8a:	add    BYTE PTR [eax-0x4bffbba8],dh
  441e90:	pop    eax
  441e91:	inc    esp
  441e92:	add    BYTE PTR [eax-0x43ffbba8],bh
  441e98:	pop    eax
  441e99:	inc    esp
  441e9a:	add    al,al
  441e9c:	pop    eax
  441e9d:	inc    esp
  441e9e:	add    BYTE PTR [eax-0x3bffbba8],ch
  441ea4:	pop    eax
  441ea5:	inc    esp
  441ea6:	add    al,cl
  441ea8:	pop    eax
  441ea9:	inc    esp
  441eaa:	add    ah,cl
  441eac:	pop    eax
  441ead:	inc    esp
  441eae:	add    al,dl
  441eb0:	pop    eax
  441eb1:	inc    esp
  441eb2:	add    ah,dl
  441eb4:	pop    eax
  441eb5:	inc    esp
  441eb6:	add    al,bl
  441eb8:	pop    eax
  441eb9:	inc    esp
  441eba:	add    ah,bl
  441ebc:	pop    eax
  441ebd:	inc    esp
  441ebe:	add    al,ah
  441ec0:	pop    eax
  441ec1:	inc    esp
  441ec2:	add    ah,ah
  441ec4:	pop    eax
  441ec5:	inc    esp
  441ec6:	add    al,ch
  441ec8:	pop    eax
  441ec9:	inc    esp
  441eca:	add    ah,ch
  441ecc:	pop    eax
  441ecd:	inc    esp
  441ece:	add    BYTE PTR [eax+ebx*2+0x587c0044],bh
  441ed5:	inc    esp
  441ed6:	add    al,dh
  441ed8:	pop    eax
  441ed9:	inc    esp
  441eda:	add    ah,cl
  441edc:	pop    eax
  441edd:	inc    esp
  441ede:	add    ah,al
  441ee0:	pop    eax
  441ee1:	inc    esp
  441ee2:	add    ah,dh
  441ee4:	pop    eax
  441ee5:	inc    esp
  441ee6:	add    al,bh
  441ee8:	pop    eax
  441ee9:	inc    esp
  441eea:	add    ah,bh
  441eec:	pop    eax
  441eed:	inc    esp
  441eee:	add    BYTE PTR [eax],al
  441ef0:	pop    ecx
  441ef1:	inc    esp
  441ef2:	add    BYTE PTR [ecx+ebx*2],al
  441ef5:	inc    esp
  441ef6:	add    BYTE PTR [eax],cl
  441ef8:	pop    ecx
  441ef9:	inc    esp
  441efa:	add    ah,ah
  441efc:	pop    eax
  441efd:	inc    esp
  441efe:	add    BYTE PTR [ecx+ebx*2],cl
  441f01:	inc    esp
  441f02:	add    BYTE PTR [eax+ebx*2+0x44],dh
  441f06:	add    BYTE PTR [eax+ebx*2+0x58800044],cl
  441f0d:	inc    esp
  441f0e:	add    al,ch
  441f10:	pop    eax
  441f11:	inc    esp
  441f12:	add    BYTE PTR [eax+0x10004458],ah
  441f18:	pop    ecx
  441f19:	inc    esp
  441f1a:	add    ah,dh
  441f1c:	pop    eax
  441f1d:	inc    esp
  441f1e:	add    BYTE PTR [ecx+ebx*2],dl
  441f21:	inc    esp
  441f22:	add    BYTE PTR [eax-0x3bffbba8],ch
  441f28:	pop    eax
  441f29:	inc    esp
  441f2a:	add    BYTE PTR [eax],bl
  441f2c:	pop    ecx
  441f2d:	inc    esp
  441f2e:	add    BYTE PTR [eax+ebx*2+0x44],dh
  441f32:	add    BYTE PTR [ecx+ebx*2],bl
  441f35:	inc    esp
  441f36:	add    BYTE PTR [eax],ah
  441f38:	pop    ecx
  441f39:	inc    esp
  441f3a:	add    BYTE PTR [ecx+ebx*2],ah
  441f3d:	inc    esp
  441f3e:	add    BYTE PTR [eax],ch
  441f40:	pop    ecx
  441f41:	inc    esp
  441f42:	add    BYTE PTR [ecx+ebx*2],bl
  441f45:	inc    esp
  441f46:	add    al,ch
  441f48:	pop    eax
  441f49:	inc    esp
  441f4a:	add    BYTE PTR [ecx+ebx*2],ch
  441f4d:	inc    esp
  441f4e:	add    BYTE PTR [eax],al
  441f50:	pop    ecx
  441f51:	inc    esp
  441f52:	add    BYTE PTR [eax+0x58],bh
  441f55:	inc    esp
  441f56:	add    BYTE PTR [eax+0x30004458],bh
  441f5c:	pop    ecx
  441f5d:	inc    esp
  441f5e:	add    BYTE PTR [ecx+ebx*2],dh
  441f61:	inc    esp
  441f62:	add    BYTE PTR [eax],dh
  441f64:	pop    ecx
  441f65:	inc    esp
  441f66:	add    BYTE PTR [eax],bl
  441f68:	pop    ecx
  441f69:	inc    esp
  441f6a:	add    BYTE PTR [eax],bh
  441f6c:	pop    ecx
  441f6d:	inc    esp
  441f6e:	add    BYTE PTR [eax],dh
  441f70:	pop    ecx
  441f71:	inc    esp
  441f72:	add    BYTE PTR [eax+0x78004458],dh
  441f78:	pop    eax
  441f79:	inc    esp
  441f7a:	add    BYTE PTR [eax+0x3c004458],bh
  441f80:	pop    ecx
  441f81:	inc    esp
  441f82:	add    BYTE PTR [ecx+ebx*2],bl
  441f85:	inc    esp
  441f86:	add    BYTE PTR [ecx+ebx*2],al
  441f89:	inc    esp
  441f8a:	add    BYTE PTR [eax+ebx*2+0x58b00044],ah
  441f91:	inc    esp
  441f92:	add    BYTE PTR [eax+0x59],al
  441f95:	inc    esp
  441f96:	add    ah,cl
  441f98:	pop    eax
  441f99:	inc    esp
  441f9a:	add    BYTE PTR [eax-0x7ffbba8],dh
  441fa0:	pop    eax
  441fa1:	inc    esp
  441fa2:	add    al,dh
  441fa4:	pop    eax
  441fa5:	inc    esp
  441fa6:	add    BYTE PTR [eax],dh
  441fa8:	pop    ecx
  441fa9:	inc    esp
  441faa:	add    BYTE PTR [ecx+ebx*2+0x44],al
  441fae:	add    BYTE PTR [eax+0x59],cl
  441fb1:	inc    esp
  441fb2:	add    BYTE PTR [ecx+ebx*2+0x44],cl
  441fb6:	add    BYTE PTR [eax+0x59],dl
  441fb9:	inc    esp
  441fba:	add    BYTE PTR [ecx+ebx*2],ah
  441fbd:	inc    esp
  441fbe:	add    BYTE PTR [eax-0x4fffbba8],ch
  441fc4:	pop    eax
  441fc5:	inc    esp
  441fc6:	add    ah,bl
  441fc8:	pop    eax
  441fc9:	inc    esp
  441fca:	add    BYTE PTR [ecx+ebx*2+0x44],dl
  441fce:	add    BYTE PTR [eax+0x59],bl
  441fd1:	inc    esp
  441fd2:	add    BYTE PTR [ecx+ebx*2],cl
  441fd5:	inc    esp
  441fd6:	add    BYTE PTR [eax+ebx*2+0x58800044],bh
  441fdd:	inc    esp
  441fde:	add    ah,bh
  441fe0:	pop    eax
  441fe1:	inc    esp
  441fe2:	add    BYTE PTR [ecx+ebx*2],ah
  441fe5:	inc    esp
  441fe6:	add    ah,cl
  441fe8:	pop    eax
  441fe9:	inc    esp
  441fea:	add    BYTE PTR [eax],cl
  441fec:	pop    ecx
  441fed:	inc    esp
  441fee:	add    BYTE PTR [eax+0x10004458],ch
  441ff4:	pop    ecx
  441ff5:	inc    esp
  441ff6:	add    BYTE PTR [eax-0x67ffbba8],dh
  441ffc:	pop    eax
  441ffd:	inc    esp
  441ffe:	add    BYTE PTR [eax+0x59],bl
  442001:	inc    esp
  442002:	add    BYTE PTR [ecx+ebx*2],cl
  442005:	inc    esp
  442006:	add    al,cl
  442008:	pop    eax
  442009:	inc    esp
  44200a:	add    al,cl
  44200c:	pop    eax
  44200d:	inc    esp
  44200e:	add    al,bh
  442010:	pop    eax
  442011:	inc    esp
  442012:	add    ah,al
  442014:	pop    eax
  442015:	inc    esp
  442016:	add    BYTE PTR [eax+ebx*2+0x44],dh
  44201a:	add    BYTE PTR [eax+0x78004458],ch
  442020:	pop    eax
  442021:	inc    esp
  442022:	add    BYTE PTR [eax+0x59],bl
  442025:	inc    esp
  442026:	add    BYTE PTR [ecx+ebx*2+0x44],bl
  44202a:	add    BYTE PTR [eax+ebx*2+0x44],dh
  44202e:	add    BYTE PTR [eax-0x4bffbba8],dh
  442034:	pop    eax
  442035:	inc    esp
  442036:	add    BYTE PTR [eax+0x4c004458],bl
  44203c:	pop    ecx
  44203d:	inc    esp
  44203e:	add    BYTE PTR [eax+0x58],dh
  442041:	inc    esp
  442042:	add    BYTE PTR [eax+0x59],ah
  442045:	inc    esp
  442046:	add    BYTE PTR [ecx+ebx*2+0x44],ah
  44204a:	add    BYTE PTR [eax+ebx*2+0x59280044],cl
  442051:	inc    esp
  442052:	add    al,ch
  442054:	pop    eax
  442055:	inc    esp
  442056:	add    BYTE PTR [eax+0x68004458],ah
  44205c:	pop    ecx
  44205d:	inc    esp
  44205e:	add    BYTE PTR [eax+0x58],bh
  442061:	inc    esp
  442062:	add    BYTE PTR [eax+ebx*2+0x58780044],cl
  442069:	inc    esp
  44206a:	add    BYTE PTR [eax+0x4458],cl
  442070:	pop    ecx
  442071:	inc    esp
  442072:	add    BYTE PTR [eax+0x59],dl
  442075:	inc    esp
  442076:	add    ah,cl
  442078:	pop    eax
  442079:	inc    esp
  44207a:	add    ah,al
  44207c:	pop    eax
  44207d:	inc    esp
  44207e:	add    ah,bl
  442080:	pop    eax
  442081:	inc    esp
  442082:	add    BYTE PTR [eax+0x59],al
  442085:	inc    esp
  442086:	add    BYTE PTR [eax-0x5bffbba8],dh
  44208c:	pop    eax
  44208d:	inc    esp
  44208e:	add    BYTE PTR [eax+ebx*2+0x596c0044],cl
  442095:	inc    esp
  442096:	add    ah,bh
  442098:	pop    eax
  442099:	inc    esp
  44209a:	add    BYTE PTR [eax],al
  44209c:	pop    ecx
  44209d:	inc    esp
  44209e:	add    al,al
  4420a0:	pop    eax
  4420a1:	inc    esp
  4420a2:	add    BYTE PTR [eax+ebx*2+0x58e80044],dh
  4420a9:	inc    esp
  4420aa:	add    BYTE PTR [ecx+ebx*2],dh
  4420ad:	inc    esp
  4420ae:	add    BYTE PTR [eax+ebx*2+0x59700044],al
  4420b5:	inc    esp
  4420b6:	add    BYTE PTR [eax],cl
  4420b8:	pop    ecx
  4420b9:	inc    esp
  4420ba:	add    BYTE PTR [ecx+ebx*2+0x44],dh
  4420be:	add    al,ch
  4420c0:	pop    eax
  4420c1:	inc    esp
  4420c2:	add    BYTE PTR [ecx+ebx*2],bh
  4420c5:	inc    esp
  4420c6:	add    BYTE PTR [eax+0x4458],bl
  4420cc:	pop    ecx
  4420cd:	inc    esp
  4420ce:	add    BYTE PTR [eax],al
  4420d0:	pop    ecx
  4420d1:	inc    esp
  4420d2:	add    BYTE PTR [eax+ebx*2+0x58c00044],al
  4420d9:	inc    esp
  4420da:	add    BYTE PTR [eax+0x59],bh
  4420dd:	inc    esp
  4420de:	add    BYTE PTR [eax+0x58],dh
  4420e1:	inc    esp
  4420e2:	add    BYTE PTR [ecx+ebx*2+0x44],bh
  4420e6:	add    BYTE PTR [eax],ah
  4420e8:	pop    ecx
  4420e9:	inc    esp
  4420ea:	add    al,dh
  4420ec:	pop    eax
  4420ed:	inc    esp
  4420ee:	add    BYTE PTR [ecx+ebx*2+0x44],cl
  4420f2:	add    BYTE PTR [eax+0x59],cl
  4420f5:	inc    esp
  4420f6:	add    BYTE PTR [eax+0x59],bl
  4420f9:	inc    esp
  4420fa:	add    BYTE PTR [eax+0x59],dl
  4420fd:	inc    esp
  4420fe:	add    BYTE PTR [eax],bh
  442100:	pop    ecx
  442101:	inc    esp
  442102:	add    ah,ah
  442104:	pop    eax
  442105:	inc    esp
  442106:	add    BYTE PTR [ecx+ebx*2+0x44],bl
  44210a:	add    BYTE PTR [eax+ebx*2+0x59000044],ch
  442111:	inc    esp
  442112:	add    BYTE PTR [eax-0x63ffbba7],al
  442118:	pop    eax
  442119:	inc    esp
  44211a:	add    al,cl
  44211c:	pop    eax
  44211d:	inc    esp
  44211e:	add    BYTE PTR [eax+ebx*2+0x59180044],bl
  442125:	inc    esp
  442126:	add    BYTE PTR [eax+0x44004458],al
  44212c:	pop    ecx
  44212d:	inc    esp
  44212e:	add    ah,ch
  442130:	pop    eax
  442131:	inc    esp
  442132:	add    BYTE PTR [eax+ebx*2+0x44],dh
  442136:	add    BYTE PTR [ecx+ebx*2+0x59500044],al
  44213d:	inc    esp
  44213e:	add    al,cl
  442140:	pop    eax
  442141:	inc    esp
  442142:	add    BYTE PTR [eax+0x59],ch
  442145:	inc    esp
  442146:	add    BYTE PTR [eax+0x59],al
  442149:	inc    esp
  44214a:	add    BYTE PTR [eax],dl
  44214c:	pop    ecx
  44214d:	inc    esp
  44214e:	add    BYTE PTR [eax+ebx*2+0x58b00044],cl
  442155:	inc    esp
  442156:	add    al,bh
  442158:	pop    eax
  442159:	inc    esp
  44215a:	add    al,dh
  44215c:	pop    eax
  44215d:	inc    esp
  44215e:	add    BYTE PTR [ecx+ebx*2+0x44],ah
  442162:	add    BYTE PTR [eax+0x4],bh
  442165:	or     DWORD PTR [ebx-0x5d],ebp
  442168:	jnp    0x442130
  44216a:	shr    DWORD PTR [ecx+0x7b],0x3
  44216e:	push   ss
  44216f:	sub    al,0xb
  442171:	push   ss
  442172:	dec    esi
  442173:	dec    ecx
  442174:	adc    al,0xac
  442176:	aad    0xa5
  442178:	sub    DWORD PTR [eax],esp
  44217a:	mov    eax,0xad59778d
  44217f:	pop    edi
  442180:	mov    ds:0x68807ad,al
  442185:	and    edi,DWORD PTR ds:0xd2a2d084
  44218b:	lock mov ds:0x299afe12,eax
  442191:	stc    
  442192:	or     ebx,DWORD PTR [ecx-0x4504376a]
  442198:	sbb    eax,0xc23efa59
  44219d:	push   edx
  44219e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44219f:	pop    ebp
  4421a0:	mov    ds:0xaded1aad,al
  4421a5:	jno    0x4421f0
  4421a7:	mov    edx,0x7eca3d7b
  4421ac:	xchg   ebp,eax
  4421ad:	bound  ebx,QWORD PTR [esi]
  4421af:	mov    esi,0xaae6075e
  4421b4:	dec    ebx
  4421b5:	clc    
  4421b6:	push   edx
  4421b7:	rcr    DWORD PTR ds:0xc9eb87bf,0x38
  4421be:	aad    0xd6
  4421c0:	shl    esp,0x33
  4421c3:	push   eax
  4421c4:	aas    
  4421c5:	bound  esi,QWORD PTR [esi-0x46e2c920]
  4421cb:	sar    BYTE PTR [ebp+0x2fda39ad],cl
  4421d1:	popa   
  4421d2:	into   
  4421d3:	test   DWORD PTR [edi+0x115ecd85],eax
  4421d9:	and    esp,0x78
  4421dc:	call   0x6d31:0x1525370f
  4421e3:	clc    
  4421e4:	dec    esi
  4421e5:	inc    BYTE PTR [edi+esi*1]
  4421e8:	or     ebp,edx
  4421ea:	test   cl,cl
  4421ec:	retf   
  4421ed:	loopne 0x4421ec
  4421ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4421f0:	scas   eax,DWORD PTR es:[edi]
  4421f1:	(bad)  
  4421f2:	cld    
  4421f3:	push   edi
  4421f4:	(bad)  
  4421f5:	mov    ds:0x3fd00be9,al
  4421fa:	ret    0xd6a1
  4421fd:	add    al,0xc0
  4421ff:	mov    ds:0xc3797007,eax
  442204:	sbb    bp,WORD PTR [ecx+0x3a]
  442208:	(bad)  
  442209:	push   0xffffffe1
  44220b:	push   0x8e658b27
  442210:	dec    esp
  442212:	mov    DWORD PTR [esi-0x6a],edx
  442215:	std    
  442216:	mov    eax,ds:0xf5f84e45
  44221b:	mov    esp,0x79f3bb62
  442220:	and    al,0x84
  442222:	xchg   edx,eax
  442223:	ins    BYTE PTR es:[edi],dx
  442224:	xor    eax,0x1ba0fc
  442229:	adc    BYTE PTR [ebp-0x3b77a636],al
  44222f:	jle    0x44228d
  442231:	and    BYTE PTR [ecx],al
  442233:	pop    ebx
  442234:	leave  
  442235:	jnp    0x44229f
  442237:	call   0xa5a2:0x6dcc00a5
  44223e:	jns    0x442273
  442240:	push   esi
  442241:	pop    ss
  442242:	jmp    0x395cd08a
  442247:	das    
  442248:	mov    DWORD PTR [ebp+0x6],ecx
  44224b:	or     eax,DWORD PTR ds:0x7e350053
  442251:	xor    BYTE PTR [esi],0x82
  442254:	mov    esp,edx
  442256:	arpl   WORD PTR [edi-0x1c],cx
  442259:	pop    ds
  44225a:	stc    
  44225b:	int3   
  44225c:	(bad)  
  44225d:	dec    ebx
  44225e:	bound  ebx,QWORD PTR [ebx]
  442260:	jnp    0x44227d
  442262:	xchg   ecx,eax
  442263:	pusha  
  442264:	fbstp  TBYTE PTR [esi]
  442266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442267:	in     eax,dx
  442268:	retf   0x1373
  44226b:	(bad)  
  44226c:	jmp    DWORD PTR [ebx+0xf]
  44226f:	inc    ebp
  442270:	bound  ebx,QWORD PTR ss:[ebp+0x48d4bad0]
  442277:	jne    0x44223f
  442279:	sar    DWORD PTR [edx+0x71],cl
  44227c:	repnz pop ebp
  44227e:	lods   al,BYTE PTR ds:[esi]
  44227f:	outs   dx,DWORD PTR ds:[esi]
  442280:	adc    ecx,DWORD PTR [edi-0x280fc057]
  442286:	fistp  DWORD PTR [ecx-0x48772104]
  44228c:	sub    al,0xd8
  44228e:	and    ebx,eax
  442290:	push   eax
  442291:	jno    0x4422e6
  442293:	mov    eax,0x1886e97d
  442298:	scas   al,BYTE PTR es:[edi]
  442299:	dec    esi
  44229a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44229b:	cmp    eax,0x3a50c815
  4422a0:	std    
  4422a1:	adc    eax,esp
  4422a3:	inc    esp
  4422a4:	lahf   
  4422a5:	popa   
  4422a6:	sub    eax,0xb67806cd
  4422ab:	imul   esi,DWORD PTR [edi+0x1d],0xffffffaa
  4422af:	pop    DWORD PTR [edi-0x7]
  4422b2:	pop    ss
  4422b3:	pop    eax
  4422b4:	inc    ecx
  4422b5:	push   edx
  4422b6:	sub    BYTE PTR [eax],bh
  4422b8:	jae    0x442271
  4422ba:	fcomp  DWORD PTR [esi]
  4422bc:	in     al,dx
  4422bd:	mov    cl,0x28
  4422bf:	loopne 0x4422c7
  4422c1:	jns    0x4422d3
  4422c3:	push   es
  4422c4:	aas    
  4422c5:	icebp  
  4422c6:	or     esi,DWORD PTR [eax-0xed41ff1]
  4422cc:	(bad)  
  4422cd:	aam    0x4a
  4422cf:	push   es
  4422d0:	ror    bh,cl
  4422d2:	popa   
  4422d3:	xor    ah,bh
  4422d5:	sbb    ebx,DWORD PTR [eax+0x7b]
  4422d8:	fadd   QWORD PTR [ecx+0x5da46c1e]
  4422de:	jb     0x44229b
  4422e0:	js     0x4422d8
  4422e2:	in     al,dx
  4422e3:	pusha  
  4422e4:	xor    BYTE PTR [edx+0x5e],dh
  4422e7:	xlat   BYTE PTR ds:[ebx]
  4422e8:	cmc    
  4422e9:	add    esp,edi
  4422eb:	jo     0x44227e
  4422ed:	gs xor eax,0x8a77dcb2
  4422f3:	test   DWORD PTR [ecx],0xf70def48
  4422f9:	sbb    BYTE PTR [ebx],ah
  4422fb:	hlt    
  4422fc:	cmp    ebx,DWORD PTR [edx-0x712655ea]
  442302:	or     eax,0x67f2837b
  442307:	aaa    
  442308:	mov    ds:0xf9c7f9da,al
  44230d:	les    ebx,FWORD PTR ds:0x9c82ce21
  442313:	(bad)  
  442314:	shr    DWORD PTR [edi],1
  442316:	test   BYTE PTR [ecx+0x6],ch
  442319:	mov    cl,0x3d
  44231b:	je     0x4422e6
  44231d:	mov    al,ds:0x259574e8
  442322:	xor    eax,0x8ff3f279
  442327:	xor    DWORD PTR [edx],0xcc29e958
  44232d:	sub    al,0xf
  44232f:	retf   
  442330:	out    0x37,eax
  442332:	mov    bl,0x6a
  442334:	and    bl,BYTE PTR [edx]
  442336:	mov    ds:0xff1c29e5,eax
  44233b:	retf   
  44233c:	or     BYTE PTR ds:0x4e6e550b,al
  442342:	push   ds
  442343:	sbb    DWORD PTR [eax+0x36],eax
  442346:	mov    eax,ds:0xf36050d6
  44234b:	sahf   
  44234c:	movd   mm3,DWORD PTR [ebx+edi*4-0x7bad6b89]
  442354:	outs   dx,BYTE PTR ds:[esi]
  442355:	or     BYTE PTR [edx],al
  442357:	mov    esp,0xebf08ab2
  44235c:	jne    0x442346
  44235e:	jb     0x442316
  442360:	das    
  442361:	xchg   ebp,eax
  442362:	loop   0x442363
  442364:	and    eax,0x444de0
  442369:	jmp    DWORD PTR ds:0x444de4
  44236f:	jmp    DWORD PTR ds:0x444de8
  442375:	jmp    DWORD PTR ds:0x444dec
  44237b:	jmp    DWORD PTR ds:0x444df0
  442381:	jmp    DWORD PTR ds:0x444df4
  442387:	jmp    DWORD PTR ds:0x444df8
  44238d:	jmp    DWORD PTR ds:0x444dfc
  442393:	jmp    DWORD PTR ds:0x444e00
  442399:	jmp    DWORD PTR ds:0x444e04
  44239f:	jmp    DWORD PTR ds:0x444e08
  4423a5:	jmp    DWORD PTR ds:0x444e0c
  4423ab:	jmp    DWORD PTR ds:0x444e10
  4423b1:	jmp    DWORD PTR ds:0x444e14
  4423b7:	jmp    DWORD PTR ds:0x444e18
  4423bd:	jmp    DWORD PTR ds:0x444e1c
  4423c3:	jmp    DWORD PTR ds:0x444e20
  4423c9:	jmp    DWORD PTR ds:0x444e24
  4423cf:	jmp    DWORD PTR ds:0x444e28
  4423d5:	jmp    DWORD PTR ds:0x444e2c
  4423db:	jmp    DWORD PTR ds:0x444e30
  4423e1:	jmp    DWORD PTR ds:0x444e34
  4423e7:	jmp    DWORD PTR ds:0x444e38
  4423ed:	jmp    DWORD PTR ds:0x444e3c
  4423f3:	jmp    DWORD PTR ds:0x444e40
  4423f9:	jmp    DWORD PTR ds:0x444e44
  4423ff:	jmp    DWORD PTR ds:0x444e48
  442405:	jmp    DWORD PTR ds:0x444e4c
  44240b:	jmp    DWORD PTR ds:0x444e50
  442411:	jmp    DWORD PTR ds:0x444e54
  442417:	jmp    DWORD PTR ds:0x444e58
  44241d:	jmp    DWORD PTR ds:0x444e5c
  442423:	jmp    DWORD PTR ds:0x444e60
  442429:	jmp    DWORD PTR ds:0x444e64
  44242f:	jmp    DWORD PTR ds:0x444e68
  442435:	jmp    DWORD PTR ds:0x444e6c
  44243b:	jmp    DWORD PTR ds:0x444e70
  442441:	jmp    DWORD PTR ds:0x444e74
  442447:	jmp    DWORD PTR ds:0x444e78
  44244d:	jmp    DWORD PTR ds:0x444e7c
  442453:	jmp    DWORD PTR ds:0x444e80
  442459:	jmp    DWORD PTR ds:0x444e84
  44245f:	jmp    DWORD PTR ds:0x444e88
  442465:	jmp    DWORD PTR ds:0x444e8c
  44246b:	jmp    DWORD PTR ds:0x444e90
  442471:	jmp    DWORD PTR ds:0x444e94
  442477:	jmp    DWORD PTR ds:0x444e98
  44247d:	jmp    DWORD PTR ds:0x444e9c
  442483:	jmp    DWORD PTR ds:0x444ea0
  442489:	jmp    DWORD PTR ds:0x444ea4
  44248f:	jmp    DWORD PTR ds:0x444ea8
  442495:	jmp    DWORD PTR ds:0x444eac
  44249b:	jmp    DWORD PTR ds:0x444eb0
  4424a1:	jmp    DWORD PTR ds:0x444eb4
  4424a7:	jmp    DWORD PTR ds:0x444eb8
  4424ad:	jmp    DWORD PTR ds:0x444ebc
  4424b3:	jmp    DWORD PTR ds:0x444ec0
  4424b9:	jmp    DWORD PTR ds:0x444ec4
  4424bf:	jmp    DWORD PTR ds:0x444ec8
  4424c5:	jmp    DWORD PTR ds:0x444ecc
  4424cb:	jmp    DWORD PTR ds:0x444ed0
  4424d1:	jmp    DWORD PTR ds:0x444ed4
  4424d7:	jmp    DWORD PTR ds:0x444ed8
  4424dd:	jmp    DWORD PTR ds:0x444edc
  4424e3:	jmp    DWORD PTR ds:0x444ee0
  4424e9:	jmp    DWORD PTR ds:0x444ee4
  4424ef:	jmp    DWORD PTR ds:0x444ee8
  4424f5:	jmp    DWORD PTR ds:0x444eec
  4424fb:	jmp    DWORD PTR ds:0x444ef0
  442501:	jmp    DWORD PTR ds:0x444ef4
  442507:	jmp    DWORD PTR ds:0x444ef8
  44250d:	jmp    DWORD PTR ds:0x444efc
  442513:	jmp    DWORD PTR ds:0x444f00
  442519:	jmp    DWORD PTR ds:0x444f04
  44251f:	jmp    DWORD PTR ds:0x444f08
  442525:	jmp    DWORD PTR ds:0x444f0c
  44252b:	jmp    DWORD PTR ds:0x444f10
  442531:	jmp    DWORD PTR ds:0x444f14
  442537:	jmp    DWORD PTR ds:0x444f18
  44253d:	jmp    DWORD PTR ds:0x444f1c
  442543:	jmp    DWORD PTR ds:0x444f20
  442549:	jmp    DWORD PTR ds:0x444f24
  44254f:	jmp    DWORD PTR ds:0x444f28
  442555:	jmp    DWORD PTR ds:0x444f2c
  44255b:	jmp    DWORD PTR ds:0x444f30
  442561:	jmp    DWORD PTR ds:0x444f34
  442567:	jmp    DWORD PTR ds:0x444f38
  44256d:	jmp    DWORD PTR ds:0x444f3c
  442573:	jmp    DWORD PTR ds:0x444f40
  442579:	jmp    DWORD PTR ds:0x444f44
  44257f:	jmp    DWORD PTR ds:0x444f48
  442585:	jmp    DWORD PTR ds:0x444f4c
  44258b:	jmp    DWORD PTR ds:0x444f50
  442591:	jmp    DWORD PTR ds:0x444f54
  442597:	jmp    DWORD PTR ds:0x444f58
  44259d:	jmp    DWORD PTR ds:0x444f5c
  4425a3:	jmp    DWORD PTR ds:0x444f60
  4425a9:	jmp    DWORD PTR ds:0x444f64
  4425af:	jmp    DWORD PTR ds:0x444f68
  4425b5:	jmp    DWORD PTR ds:0x444f6c
  4425bb:	jmp    DWORD PTR ds:0x444f70
  4425c1:	jmp    DWORD PTR ds:0x444f74
  4425c7:	jmp    DWORD PTR ds:0x444f78
  4425cd:	jmp    DWORD PTR ds:0x444f7c
  4425d3:	jmp    DWORD PTR ds:0x444f80
  4425d9:	jmp    DWORD PTR ds:0x444f84
  4425df:	jmp    DWORD PTR ds:0x444f88
  4425e5:	jmp    DWORD PTR ds:0x444f8c
  4425eb:	jmp    DWORD PTR ds:0x444f90
  4425f1:	jmp    DWORD PTR ds:0x444f94
  4425f7:	jmp    DWORD PTR ds:0x444f98
  4425fd:	jmp    DWORD PTR ds:0x444f9c
  442603:	jmp    DWORD PTR ds:0x444fa0
  442609:	jmp    DWORD PTR ds:0x444fa4
  44260f:	jmp    DWORD PTR ds:0x444fa8
  442615:	jmp    DWORD PTR ds:0x444fac
  44261b:	jmp    DWORD PTR ds:0x444fb0
  442621:	jmp    DWORD PTR ds:0x444fb4
  442627:	jmp    DWORD PTR ds:0x444fb8
  44262d:	jmp    DWORD PTR ds:0x444fbc
  442633:	jmp    DWORD PTR ds:0x444fc0
  442639:	jmp    DWORD PTR ds:0x444fc4
  44263f:	jmp    DWORD PTR ds:0x444fc8
  442645:	jmp    DWORD PTR ds:0x444fcc
  44264b:	jmp    DWORD PTR ds:0x444fd0
  442651:	jmp    DWORD PTR ds:0x444fd4
  442657:	jmp    DWORD PTR ds:0x444fd8
  44265d:	jmp    DWORD PTR ds:0x444fdc
  442663:	jmp    DWORD PTR ds:0x444fe0
  442669:	jmp    DWORD PTR ds:0x444fe4
  44266f:	jmp    DWORD PTR ds:0x444fe8
  442675:	jmp    DWORD PTR ds:0x444fec
  44267b:	jmp    DWORD PTR ds:0x444ff0
  442681:	jmp    DWORD PTR ds:0x444ff4
  442687:	jmp    DWORD PTR ds:0x444ff8
  44268d:	jmp    DWORD PTR ds:0x444ffc
  442693:	jmp    DWORD PTR ds:0x445000
  442699:	jmp    DWORD PTR ds:0x445004
  44269f:	jmp    DWORD PTR ds:0x445008
  4426a5:	jmp    DWORD PTR ds:0x44500c
  4426ab:	jmp    DWORD PTR ds:0x445010
  4426b1:	jmp    DWORD PTR ds:0x445014
  4426b7:	jmp    DWORD PTR ds:0x445018
  4426bd:	jmp    DWORD PTR ds:0x44501c
  4426c3:	jmp    DWORD PTR ds:0x445020
  4426c9:	jmp    DWORD PTR ds:0x445024
  4426cf:	jmp    DWORD PTR ds:0x445028
  4426d5:	jmp    DWORD PTR ds:0x44502c
  4426db:	jmp    DWORD PTR ds:0x445030
  4426e1:	jmp    DWORD PTR ds:0x445034
  4426e7:	jmp    DWORD PTR ds:0x445038
  4426ed:	jmp    DWORD PTR ds:0x44503c
  4426f3:	jmp    DWORD PTR ds:0x445040
  4426f9:	jmp    DWORD PTR ds:0x445044
  4426ff:	jmp    DWORD PTR ds:0x445048
  442705:	jmp    DWORD PTR ds:0x44504c
  44270b:	jmp    DWORD PTR ds:0x445050
  442711:	jmp    DWORD PTR ds:0x445054
  442717:	jmp    DWORD PTR ds:0x445058
  44271d:	jmp    DWORD PTR ds:0x44505c
  442723:	jmp    DWORD PTR ds:0x445060
  442729:	jmp    DWORD PTR ds:0x445064
  44272f:	jmp    DWORD PTR ds:0x445068
  442735:	jmp    DWORD PTR ds:0x44506c
  44273b:	jmp    DWORD PTR ds:0x445070
  442741:	jmp    DWORD PTR ds:0x445074
  442747:	jmp    DWORD PTR ds:0x445078
  44274d:	jmp    DWORD PTR ds:0x44507c
  442753:	jmp    DWORD PTR ds:0x445080
  442759:	jmp    DWORD PTR ds:0x445084
  44275f:	jmp    DWORD PTR ds:0x445088
  442765:	jmp    DWORD PTR ds:0x44508c
  44276b:	jmp    DWORD PTR ds:0x445090
  442771:	jmp    DWORD PTR ds:0x445094
  442777:	jmp    DWORD PTR ds:0x445098
  44277d:	jmp    DWORD PTR ds:0x44509c
  442783:	jmp    DWORD PTR ds:0x4450a0
  442789:	jmp    DWORD PTR ds:0x4450a4
  44278f:	jmp    DWORD PTR ds:0x4450ac
  442795:	jmp    DWORD PTR ds:0x4450b0
  44279b:	jmp    DWORD PTR ds:0x4450b4
  4427a1:	jmp    DWORD PTR ds:0x4450b8
  4427a7:	jmp    DWORD PTR ds:0x4450bc
  4427ad:	jmp    DWORD PTR ds:0x4450c0
  4427b3:	jmp    DWORD PTR ds:0x4450c4
  4427b9:	jmp    DWORD PTR ds:0x4450c8
  4427bf:	jmp    DWORD PTR ds:0x4450cc
  4427c5:	jmp    DWORD PTR ds:0x4450d0
  4427cb:	jmp    DWORD PTR ds:0x4450d4
  4427d1:	jmp    DWORD PTR ds:0x4450d8
  4427d7:	jmp    DWORD PTR ds:0x4450dc
  4427dd:	jmp    DWORD PTR ds:0x4450e0
  4427e3:	jmp    DWORD PTR ds:0x4450e4
  4427e9:	jmp    DWORD PTR ds:0x4450e8
  4427ef:	jmp    DWORD PTR ds:0x4450ec
  4427f5:	jmp    DWORD PTR ds:0x4450f0
  4427fb:	jmp    DWORD PTR ds:0x4450f4
  442801:	jmp    DWORD PTR ds:0x4450f8
  442807:	jmp    DWORD PTR ds:0x4450fc
  44280d:	jmp    DWORD PTR ds:0x445100
  442813:	jmp    DWORD PTR ds:0x445104
  442819:	jmp    DWORD PTR ds:0x445108
  44281f:	jmp    DWORD PTR ds:0x44510c
  442825:	jmp    DWORD PTR ds:0x445110
  44282b:	jmp    DWORD PTR ds:0x445114
  442831:	jmp    DWORD PTR ds:0x445118
  442837:	jmp    DWORD PTR ds:0x44511c
  44283d:	jmp    DWORD PTR ds:0x445120
  442843:	jmp    DWORD PTR ds:0x445124
  442849:	jmp    DWORD PTR ds:0x445128
  44284f:	jmp    DWORD PTR ds:0x44512c
  442855:	jmp    DWORD PTR ds:0x445130
  44285b:	jmp    DWORD PTR ds:0x445134
  442861:	jmp    DWORD PTR ds:0x445138
  442867:	jmp    DWORD PTR ds:0x44513c
  44286d:	jmp    DWORD PTR ds:0x445140
  442873:	jmp    DWORD PTR ds:0x445144
  442879:	jmp    DWORD PTR ds:0x445148
  44287f:	jmp    DWORD PTR ds:0x44514c
  442885:	jmp    DWORD PTR ds:0x445150
  44288b:	jmp    DWORD PTR ds:0x445154
  442891:	jmp    DWORD PTR ds:0x445158
  442897:	jmp    DWORD PTR ds:0x44515c
  44289d:	jmp    DWORD PTR ds:0x445160
  4428a3:	jmp    DWORD PTR ds:0x445164
  4428a9:	jmp    DWORD PTR ds:0x445168
  4428af:	jmp    DWORD PTR ds:0x44516c
  4428b5:	jmp    DWORD PTR ds:0x445170
  4428bb:	jmp    DWORD PTR ds:0x445174
  4428c1:	jmp    DWORD PTR ds:0x445178
  4428c7:	jmp    DWORD PTR ds:0x44517c
  4428cd:	jmp    DWORD PTR ds:0x445180
  4428d3:	jmp    DWORD PTR ds:0x445184
  4428d9:	jmp    DWORD PTR ds:0x445188
  4428df:	jmp    DWORD PTR ds:0x44518c
  4428e5:	jmp    DWORD PTR ds:0x445190
  4428eb:	jmp    DWORD PTR ds:0x445194
  4428f1:	jmp    DWORD PTR ds:0x445198
  4428f7:	jmp    DWORD PTR ds:0x44519c
  4428fd:	jmp    DWORD PTR ds:0x4451a0
  442903:	jmp    DWORD PTR ds:0x4451a4
  442909:	jmp    DWORD PTR ds:0x4451a8
  44290f:	jmp    DWORD PTR ds:0x4451ac
  442915:	jmp    DWORD PTR ds:0x4451b0
  44291b:	jmp    DWORD PTR ds:0x4451b4
  442921:	jmp    DWORD PTR ds:0x4451b8
  442927:	jmp    DWORD PTR ds:0x4451bc
  44292d:	jmp    DWORD PTR ds:0x4451c0
  442933:	jmp    DWORD PTR ds:0x4451c4
  442939:	jmp    DWORD PTR ds:0x4451c8
  44293f:	jmp    DWORD PTR ds:0x4451cc
  442945:	jmp    DWORD PTR ds:0x4451d0
  44294b:	jmp    DWORD PTR ds:0x4451d4
  442951:	jmp    DWORD PTR ds:0x4451d8
  442957:	jmp    DWORD PTR ds:0x4451dc
  44295d:	jmp    DWORD PTR ds:0x4451e0
  442963:	jmp    DWORD PTR ds:0x4451e4
  442969:	jmp    DWORD PTR ds:0x4451e8
  44296f:	jmp    DWORD PTR ds:0x4451ec
  442975:	jmp    DWORD PTR ds:0x4451f0
  44297b:	jmp    DWORD PTR ds:0x4451f4
  442981:	jmp    DWORD PTR ds:0x4451f8
  442987:	jmp    DWORD PTR ds:0x4451fc
  44298d:	jmp    DWORD PTR ds:0x445200
  442993:	jmp    DWORD PTR ds:0x445204
  442999:	jmp    DWORD PTR ds:0x445208
  44299f:	jmp    DWORD PTR ds:0x44520c
  4429a5:	jmp    DWORD PTR ds:0x445210
  4429ab:	jmp    DWORD PTR ds:0x445214
  4429b1:	jmp    DWORD PTR ds:0x445218
  4429b7:	jmp    DWORD PTR ds:0x44521c
  4429bd:	jmp    DWORD PTR ds:0x445220
  4429c3:	jmp    DWORD PTR ds:0x445224
  4429c9:	jmp    DWORD PTR ds:0x445228
  4429cf:	jmp    DWORD PTR ds:0x44522c
  4429d5:	jmp    DWORD PTR ds:0x445230
  4429db:	jmp    DWORD PTR ds:0x445234
  4429e1:	jmp    DWORD PTR ds:0x445238
  4429e7:	jmp    DWORD PTR ds:0x44523c
  4429ed:	jmp    DWORD PTR ds:0x445240
  4429f3:	jmp    DWORD PTR ds:0x445244
  4429f9:	jmp    DWORD PTR ds:0x445248
  4429ff:	jmp    DWORD PTR ds:0x44524c
  442a05:	jmp    DWORD PTR ds:0x445250
  442a0b:	jmp    DWORD PTR ds:0x445254
  442a11:	jmp    DWORD PTR ds:0x445258
  442a17:	jmp    DWORD PTR ds:0x44525c
  442a1d:	jmp    DWORD PTR ds:0x445260
  442a23:	jmp    DWORD PTR ds:0x445264
  442a29:	jmp    DWORD PTR ds:0x445268
  442a2f:	jmp    DWORD PTR ds:0x44526c
  442a35:	jmp    DWORD PTR ds:0x445270
  442a3b:	jmp    DWORD PTR ds:0x445274
  442a41:	jmp    DWORD PTR ds:0x445278
  442a47:	jmp    DWORD PTR ds:0x44527c
  442a4d:	jmp    DWORD PTR ds:0x445280
  442a53:	jmp    DWORD PTR ds:0x445284
  442a59:	jmp    DWORD PTR ds:0x445288
  442a5f:	jmp    DWORD PTR ds:0x44528c
  442a65:	jmp    DWORD PTR ds:0x445290
  442a6b:	jmp    DWORD PTR ds:0x445294
  442a71:	jmp    DWORD PTR ds:0x445298
  442a77:	jmp    DWORD PTR ds:0x44529c
  442a7d:	jmp    DWORD PTR ds:0x4452a0
  442a83:	jmp    DWORD PTR ds:0x4452a4
  442a89:	jmp    DWORD PTR ds:0x4452a8
  442a8f:	jmp    DWORD PTR ds:0x4452ac
  442a95:	jmp    DWORD PTR ds:0x4452b0
  442a9b:	jmp    DWORD PTR ds:0x4452b4
  442aa1:	jmp    DWORD PTR ds:0x4452b8
  442aa7:	jmp    DWORD PTR ds:0x4452bc
  442aad:	jmp    DWORD PTR ds:0x4452c0
  442ab3:	jmp    DWORD PTR ds:0x4452c4
  442ab9:	jmp    DWORD PTR ds:0x4452c8
  442abf:	jmp    DWORD PTR ds:0x4452cc
  442ac5:	jmp    DWORD PTR ds:0x4452d0
  442acb:	jmp    DWORD PTR ds:0x4452d4
  442ad1:	jmp    DWORD PTR ds:0x4452d8
  442ad7:	jmp    DWORD PTR ds:0x4452dc
  442add:	jmp    DWORD PTR ds:0x4452e0
  442ae3:	jmp    DWORD PTR ds:0x4452e4
  442ae9:	jmp    DWORD PTR ds:0x4452e8
  442aef:	jmp    DWORD PTR ds:0x4452ec
  442af5:	jmp    DWORD PTR ds:0x4452f0
  442afb:	jmp    DWORD PTR ds:0x4452f4
  442b01:	jmp    DWORD PTR ds:0x4452f8
  442b07:	jmp    DWORD PTR ds:0x4452fc
  442b0d:	jmp    DWORD PTR ds:0x445300
  442b13:	jmp    DWORD PTR ds:0x445304
  442b19:	jmp    DWORD PTR ds:0x445308
  442b1f:	jmp    DWORD PTR ds:0x44530c
  442b25:	jmp    DWORD PTR ds:0x445310
  442b2b:	jmp    DWORD PTR ds:0x445314
  442b31:	jmp    DWORD PTR ds:0x445318
  442b37:	jmp    DWORD PTR ds:0x44531c
  442b3d:	jmp    DWORD PTR ds:0x445320
  442b43:	jmp    DWORD PTR ds:0x445324
  442b49:	jmp    DWORD PTR ds:0x445328
  442b4f:	jmp    DWORD PTR ds:0x44532c
  442b55:	jmp    DWORD PTR ds:0x445330
  442b5b:	jmp    DWORD PTR ds:0x445334
  442b61:	jmp    DWORD PTR ds:0x445338
  442b67:	jmp    DWORD PTR ds:0x44533c
  442b6d:	jmp    DWORD PTR ds:0x445340
  442b73:	jmp    DWORD PTR ds:0x445344
  442b79:	jmp    DWORD PTR ds:0x445348
  442b7f:	jmp    DWORD PTR ds:0x44534c
  442b85:	jmp    DWORD PTR ds:0x445350
  442b8b:	jmp    DWORD PTR ds:0x445358
  442b91:	jmp    DWORD PTR ds:0x44535c
  442b97:	jmp    DWORD PTR ds:0x445360
  442b9d:	jmp    DWORD PTR ds:0x445364
  442ba3:	jmp    DWORD PTR ds:0x445368
  442ba9:	jmp    DWORD PTR ds:0x44536c
  442baf:	jmp    DWORD PTR ds:0x445370
  442bb5:	jmp    DWORD PTR ds:0x445374
  442bbb:	int3   
  442bbc:	jmp    DWORD PTR ds:0x44537c
  442bc2:	jmp    DWORD PTR ds:0x445384
  442bc8:	jmp    DWORD PTR ds:0x445388
  442bce:	jmp    DWORD PTR ds:0x44538c
  442bd4:	jmp    DWORD PTR ds:0x445390
  442bda:	jmp    DWORD PTR ds:0x445394
  442be0:	jmp    DWORD PTR ds:0x445398
  442be6:	jmp    DWORD PTR ds:0x44539c
  442bec:	jmp    DWORD PTR ds:0x4453a0
  442bf2:	jmp    DWORD PTR ds:0x4453a4
  442bf8:	jmp    DWORD PTR ds:0x4453a8
  442bfe:	jmp    DWORD PTR ds:0x4453ac
  442c04:	jmp    DWORD PTR ds:0x4453b0
  442c0a:	jmp    DWORD PTR ds:0x4453b4
  442c10:	jmp    DWORD PTR ds:0x4453b8
  442c16:	jmp    DWORD PTR ds:0x4453bc
  442c1c:	jmp    DWORD PTR ds:0x4453c0
  442c22:	jmp    DWORD PTR ds:0x4453c4
  442c28:	jmp    DWORD PTR ds:0x4453c8
  442c2e:	jmp    DWORD PTR ds:0x4453cc
  442c34:	jmp    DWORD PTR ds:0x4453d0
  442c3a:	jmp    DWORD PTR ds:0x4453d4
  442c40:	jmp    DWORD PTR ds:0x4453dc
  442c46:	jmp    DWORD PTR ds:0x4453e4
  442c4c:	jmp    DWORD PTR ds:0x4453e8
  442c52:	jmp    DWORD PTR ds:0x4453ec
  442c58:	jmp    DWORD PTR ds:0x4453f0
  442c5e:	jmp    DWORD PTR ds:0x4453f4
  442c64:	jmp    DWORD PTR ds:0x4453f8
  442c6a:	jmp    DWORD PTR ds:0x4453fc
  442c70:	jmp    DWORD PTR ds:0x445400
  442c76:	jmp    DWORD PTR ds:0x445404
  442c7c:	jmp    DWORD PTR ds:0x445408
  442c82:	jmp    DWORD PTR ds:0x44540c
  442c88:	jmp    DWORD PTR ds:0x445410
  442c8e:	jmp    DWORD PTR ds:0x445414
  442c94:	jmp    DWORD PTR ds:0x445418
  442c9a:	jmp    DWORD PTR ds:0x44541c
  442ca0:	jmp    DWORD PTR ds:0x445420
  442ca6:	jmp    DWORD PTR ds:0x445424
  442cac:	jmp    DWORD PTR ds:0x445428
  442cb2:	jmp    DWORD PTR ds:0x44542c
  442cb8:	jmp    DWORD PTR ds:0x445430
  442cbe:	jmp    DWORD PTR ds:0x445434
  442cc4:	jmp    DWORD PTR ds:0x445438
  442cca:	jmp    DWORD PTR ds:0x44543c
  442cd0:	jmp    DWORD PTR ds:0x445440
  442cd6:	jmp    DWORD PTR ds:0x445444
  442cdc:	jmp    DWORD PTR ds:0x445448
  442ce2:	jmp    DWORD PTR ds:0x44544c
  442ce8:	jmp    DWORD PTR ds:0x445450
  442cee:	jmp    DWORD PTR ds:0x445454
  442cf4:	jmp    DWORD PTR ds:0x445458
  442cfa:	jmp    DWORD PTR ds:0x44545c
  442d00:	jmp    DWORD PTR ds:0x445460
  442d06:	jmp    DWORD PTR ds:0x445464
  442d0c:	jmp    DWORD PTR ds:0x445468
  442d12:	jmp    DWORD PTR ds:0x44546c
  442d18:	jmp    DWORD PTR ds:0x445470
  442d1e:	jmp    DWORD PTR ds:0x445474
  442d24:	jmp    DWORD PTR ds:0x445478
  442d2a:	jmp    DWORD PTR ds:0x44547c
  442d30:	jmp    DWORD PTR ds:0x445480
  442d36:	jmp    DWORD PTR ds:0x445484
  442d3c:	jmp    DWORD PTR ds:0x445488
  442d42:	jmp    DWORD PTR ds:0x44548c
  442d48:	jmp    DWORD PTR ds:0x445490
  442d4e:	jmp    DWORD PTR ds:0x445494
  442d54:	jmp    DWORD PTR ds:0x445498
  442d5a:	jmp    DWORD PTR ds:0x44549c
  442d60:	jmp    DWORD PTR ds:0x4454a0
  442d66:	jmp    DWORD PTR ds:0x4454a4
  442d6c:	jmp    DWORD PTR ds:0x4454a8
  442d72:	jmp    DWORD PTR ds:0x4454ac
  442d78:	jmp    DWORD PTR ds:0x4454b0
  442d7e:	jmp    DWORD PTR ds:0x4454b4
  442d84:	jmp    DWORD PTR ds:0x4454b8
  442d8a:	jmp    DWORD PTR ds:0x4454bc
  442d90:	jmp    DWORD PTR ds:0x4454c0
  442d96:	jmp    DWORD PTR ds:0x4454c4
  442d9c:	jmp    DWORD PTR ds:0x4454c8
  442da2:	jmp    DWORD PTR ds:0x4454cc
  442da8:	jmp    DWORD PTR ds:0x4454d0
  442dae:	jmp    DWORD PTR ds:0x4454d4
  442db4:	jmp    DWORD PTR ds:0x4454d8
  442dba:	jmp    DWORD PTR ds:0x4454dc
  442dc0:	jmp    DWORD PTR ds:0x4454e0
  442dc6:	jmp    DWORD PTR ds:0x4454e4
  442dcc:	jmp    DWORD PTR ds:0x4454e8
  442dd2:	jmp    DWORD PTR ds:0x4454ec
  442dd8:	jmp    DWORD PTR ds:0x4454f0
  442dde:	jmp    DWORD PTR ds:0x4454f4
  442de4:	jmp    DWORD PTR ds:0x4454f8
  442dea:	jmp    DWORD PTR ds:0x4454fc
  442df0:	jmp    DWORD PTR ds:0x445500
  442df6:	jmp    DWORD PTR ds:0x445504
  442dfc:	jmp    DWORD PTR ds:0x445508
  442e02:	jmp    DWORD PTR ds:0x44550c
  442e08:	jmp    DWORD PTR ds:0x445510
  442e0e:	jmp    DWORD PTR ds:0x445514
  442e14:	jmp    DWORD PTR ds:0x445518
  442e1a:	jmp    DWORD PTR ds:0x44551c
  442e20:	jmp    DWORD PTR ds:0x445520
  442e26:	jmp    DWORD PTR ds:0x445524
  442e2c:	jmp    DWORD PTR ds:0x445528
  442e32:	jmp    DWORD PTR ds:0x44552c
  442e38:	jmp    DWORD PTR ds:0x445530
  442e3e:	jmp    DWORD PTR ds:0x445534
  442e44:	jmp    DWORD PTR ds:0x445538
  442e4a:	jmp    DWORD PTR ds:0x44553c
  442e50:	jmp    DWORD PTR ds:0x445540
  442e56:	jmp    DWORD PTR ds:0x445544
  442e5c:	jmp    DWORD PTR ds:0x445548
  442e62:	jmp    DWORD PTR ds:0x44554c
  442e68:	jmp    DWORD PTR ds:0x445550
  442e6e:	jmp    DWORD PTR ds:0x445554
  442e74:	jmp    DWORD PTR ds:0x445558
  442e7a:	jmp    DWORD PTR ds:0x44555c
  442e80:	jmp    DWORD PTR ds:0x445560
  442e86:	jmp    DWORD PTR ds:0x445564
  442e8c:	jmp    DWORD PTR ds:0x445568
  442e92:	jmp    DWORD PTR ds:0x44556c
  442e98:	jmp    DWORD PTR ds:0x445570
  442e9e:	jmp    DWORD PTR ds:0x445574
  442ea4:	jmp    DWORD PTR ds:0x445578
  442eaa:	jmp    DWORD PTR ds:0x44557c
  442eb0:	jmp    DWORD PTR ds:0x445580
  442eb6:	jmp    DWORD PTR ds:0x445584
  442ebc:	jmp    DWORD PTR ds:0x445588
  442ec2:	jmp    DWORD PTR ds:0x44558c
  442ec8:	jmp    DWORD PTR ds:0x445590
  442ece:	jmp    DWORD PTR ds:0x445594
  442ed4:	jmp    DWORD PTR ds:0x445598
  442eda:	jmp    DWORD PTR ds:0x44559c
  442ee0:	jmp    DWORD PTR ds:0x4455a0
  442ee6:	jmp    DWORD PTR ds:0x4455a4
  442eec:	jmp    DWORD PTR ds:0x4455a8
  442ef2:	jmp    DWORD PTR ds:0x4455ac
  442ef8:	jmp    DWORD PTR ds:0x4455b0
  442efe:	jmp    DWORD PTR ds:0x4455b4
  442f04:	jmp    DWORD PTR ds:0x4455b8
  442f0a:	jmp    DWORD PTR ds:0x4455bc
  442f10:	jmp    DWORD PTR ds:0x4455c0
  442f16:	jmp    DWORD PTR ds:0x4455c4
  442f1c:	jmp    DWORD PTR ds:0x4455c8
  442f22:	jmp    DWORD PTR ds:0x4455cc
  442f28:	jmp    DWORD PTR ds:0x4455d0
  442f2e:	jmp    DWORD PTR ds:0x4455d4
  442f34:	jmp    DWORD PTR ds:0x4455d8
  442f3a:	jmp    DWORD PTR ds:0x4455dc
  442f40:	jmp    DWORD PTR ds:0x4455e0
  442f46:	jmp    DWORD PTR ds:0x4455e4
  442f4c:	jmp    DWORD PTR ds:0x4455e8
  442f52:	jmp    DWORD PTR ds:0x4455ec
  442f58:	jmp    DWORD PTR ds:0x4455f0
  442f5e:	jmp    DWORD PTR ds:0x4455f4
  442f64:	jmp    DWORD PTR ds:0x4455f8
  442f6a:	jmp    DWORD PTR ds:0x4455fc
  442f70:	jmp    DWORD PTR ds:0x445600
  442f76:	jmp    DWORD PTR ds:0x445604
  442f7c:	jmp    DWORD PTR ds:0x44560c
  442f82:	jmp    DWORD PTR ds:0x445610
  442f88:	jmp    DWORD PTR ds:0x445614
  442f8e:	jmp    DWORD PTR ds:0x445618
  442f94:	jmp    DWORD PTR ds:0x44561c
  442f9a:	jmp    DWORD PTR ds:0x445620
  442fa0:	jmp    DWORD PTR ds:0x445624
  442fa6:	jmp    DWORD PTR ds:0x445628
  442fac:	jmp    DWORD PTR ds:0x44562c
  442fb2:	jmp    DWORD PTR ds:0x445630
  442fb8:	jmp    DWORD PTR ds:0x445634
  442fbe:	jmp    DWORD PTR ds:0x445638
  442fc4:	jmp    DWORD PTR ds:0x44563c
  442fca:	jmp    DWORD PTR ds:0x445640
  442fd0:	jmp    DWORD PTR ds:0x445644
  442fd6:	jmp    DWORD PTR ds:0x445648
  442fdc:	jmp    DWORD PTR ds:0x44564c
  442fe2:	jmp    DWORD PTR ds:0x445650
  442fe8:	jmp    DWORD PTR ds:0x445654
  442fee:	jmp    DWORD PTR ds:0x445658
  442ff4:	jmp    DWORD PTR ds:0x44565c
  442ffa:	jmp    DWORD PTR ds:0x445660
  443000:	jmp    DWORD PTR ds:0x445664
  443006:	jmp    DWORD PTR ds:0x445668
  44300c:	jmp    DWORD PTR ds:0x44566c
  443012:	jmp    DWORD PTR ds:0x445670
  443018:	jmp    DWORD PTR ds:0x445674
  44301e:	jmp    DWORD PTR ds:0x445678
  443024:	jmp    DWORD PTR ds:0x44567c
  44302a:	jmp    DWORD PTR ds:0x445680
  443030:	jmp    DWORD PTR ds:0x445684
  443036:	jmp    DWORD PTR ds:0x445688
  44303c:	jmp    DWORD PTR ds:0x44568c
  443042:	jmp    DWORD PTR ds:0x445690
  443048:	jmp    DWORD PTR ds:0x445694
  44304e:	jmp    DWORD PTR ds:0x445698
  443054:	jmp    DWORD PTR ds:0x44569c
  44305a:	jmp    DWORD PTR ds:0x4456a0
  443060:	jmp    DWORD PTR ds:0x4456a4
  443066:	jmp    DWORD PTR ds:0x4456a8
  44306c:	jmp    DWORD PTR ds:0x4456ac
  443072:	jmp    DWORD PTR ds:0x4456b0
  443078:	jmp    DWORD PTR ds:0x4456b4
  44307e:	jmp    DWORD PTR ds:0x4456b8
  443084:	jmp    DWORD PTR ds:0x4456bc
  44308a:	jmp    DWORD PTR ds:0x4456c0
  443090:	jmp    DWORD PTR ds:0x4456c4
  443096:	jmp    DWORD PTR ds:0x4456c8
  44309c:	jmp    DWORD PTR ds:0x4456cc
  4430a2:	jmp    DWORD PTR ds:0x4456d0
  4430a8:	jmp    DWORD PTR ds:0x4456d4
  4430ae:	jmp    DWORD PTR ds:0x4456d8
  4430b4:	jmp    DWORD PTR ds:0x4456dc
  4430ba:	jmp    DWORD PTR ds:0x4456e0
  4430c0:	jmp    DWORD PTR ds:0x4456e4
  4430c6:	jmp    DWORD PTR ds:0x4456e8
  4430cc:	jmp    DWORD PTR ds:0x4456ec
  4430d2:	jmp    DWORD PTR ds:0x4456f0
  4430d8:	jmp    DWORD PTR ds:0x4456f4
  4430de:	jmp    DWORD PTR ds:0x4456f8
  4430e4:	jmp    DWORD PTR ds:0x4456fc
  4430ea:	jmp    DWORD PTR ds:0x445700
  4430f0:	jmp    DWORD PTR ds:0x445704
  4430f6:	jmp    DWORD PTR ds:0x445708
  4430fc:	jmp    DWORD PTR ds:0x44570c
  443102:	jmp    DWORD PTR ds:0x445710
  443108:	jmp    DWORD PTR ds:0x445714
  44310e:	jmp    DWORD PTR ds:0x445718
  443114:	jmp    DWORD PTR ds:0x44571c
  44311a:	jmp    DWORD PTR ds:0x445720
  443120:	jmp    DWORD PTR ds:0x445724
  443126:	jmp    DWORD PTR ds:0x445728
  44312c:	jmp    DWORD PTR ds:0x44572c
  443132:	jmp    DWORD PTR ds:0x445730
  443138:	jmp    DWORD PTR ds:0x445734
  44313e:	jmp    DWORD PTR ds:0x445738
  443144:	jmp    DWORD PTR ds:0x44573c
  44314a:	jmp    DWORD PTR ds:0x445740
  443150:	jmp    DWORD PTR ds:0x445744
  443156:	jmp    DWORD PTR ds:0x445748
  44315c:	jmp    DWORD PTR ds:0x44574c
  443162:	jmp    DWORD PTR ds:0x445750
  443168:	jmp    DWORD PTR ds:0x445754
  44316e:	jmp    DWORD PTR ds:0x445758
  443174:	jmp    DWORD PTR ds:0x44575c
  44317a:	jmp    DWORD PTR ds:0x445760
  443180:	jmp    DWORD PTR ds:0x445764
  443186:	jmp    DWORD PTR ds:0x445768
  44318c:	jmp    DWORD PTR ds:0x44576c
  443192:	jmp    DWORD PTR ds:0x445770
  443198:	jmp    DWORD PTR ds:0x445774
  44319e:	jmp    DWORD PTR ds:0x445778
  4431a4:	jmp    DWORD PTR ds:0x44577c
  4431aa:	jmp    DWORD PTR ds:0x445780
  4431b0:	jmp    DWORD PTR ds:0x445784
  4431b6:	jmp    DWORD PTR ds:0x445788
  4431bc:	jmp    DWORD PTR ds:0x44578c
  4431c2:	jmp    DWORD PTR ds:0x445790
  4431c8:	jmp    DWORD PTR ds:0x445794
  4431ce:	jmp    DWORD PTR ds:0x445798
  4431d4:	jmp    DWORD PTR ds:0x44579c
  4431da:	jmp    DWORD PTR ds:0x4457a0
  4431e0:	jmp    DWORD PTR ds:0x4457a4
  4431e6:	jmp    DWORD PTR ds:0x4457a8
  4431ec:	jmp    DWORD PTR ds:0x4457ac
  4431f2:	jmp    DWORD PTR ds:0x4457b0
  4431f8:	jmp    DWORD PTR ds:0x4457b4
  4431fe:	jmp    DWORD PTR ds:0x4457b8
  443204:	jmp    DWORD PTR ds:0x4457bc
  44320a:	jmp    DWORD PTR ds:0x4457c0
  443210:	jmp    DWORD PTR ds:0x4457c4
  443216:	jmp    DWORD PTR ds:0x4457c8
  44321c:	jmp    DWORD PTR ds:0x4457cc
  443222:	jmp    DWORD PTR ds:0x4457d0
  443228:	jmp    DWORD PTR ds:0x4457d4
  44322e:	jmp    DWORD PTR ds:0x4457d8
  443234:	jmp    DWORD PTR ds:0x4457dc
  44323a:	jmp    DWORD PTR ds:0x4457e0
  443240:	jmp    DWORD PTR ds:0x4457e4
  443246:	jmp    DWORD PTR ds:0x4457e8
  44324c:	jmp    DWORD PTR ds:0x4457ec
  443252:	jmp    DWORD PTR ds:0x4457f0
  443258:	jmp    DWORD PTR ds:0x4457f4
  44325e:	jmp    DWORD PTR ds:0x4457f8
  443264:	jmp    DWORD PTR ds:0x4457fc
  44326a:	jmp    DWORD PTR ds:0x445800
  443270:	jmp    DWORD PTR ds:0x445804
  443276:	jmp    DWORD PTR ds:0x445808
  44327c:	jmp    DWORD PTR ds:0x44580c
  443282:	jmp    DWORD PTR ds:0x445810
  443288:	jmp    DWORD PTR ds:0x445814
  44328e:	jmp    DWORD PTR ds:0x445818
  443294:	jmp    DWORD PTR ds:0x44581c
  44329a:	jmp    DWORD PTR ds:0x445820
  4432a0:	jmp    DWORD PTR ds:0x445824
  4432a6:	jmp    DWORD PTR ds:0x445828
  4432ac:	jmp    DWORD PTR ds:0x44582c
  4432b2:	jmp    DWORD PTR ds:0x445830
  4432b8:	jmp    DWORD PTR ds:0x445834
  4432be:	jmp    DWORD PTR ds:0x445838
  4432c4:	jmp    DWORD PTR ds:0x44583c
  4432ca:	jmp    DWORD PTR ds:0x445840
  4432d0:	jmp    DWORD PTR ds:0x445844
  4432d6:	jmp    DWORD PTR ds:0x445848
  4432dc:	jmp    DWORD PTR ds:0x44584c
  4432e2:	jmp    DWORD PTR ds:0x445850
  4432e8:	jmp    DWORD PTR ds:0x445854
  4432ee:	jmp    DWORD PTR ds:0x445858
  4432f4:	jmp    DWORD PTR ds:0x44585c
  4432fa:	jmp    DWORD PTR ds:0x445860
  443300:	jmp    DWORD PTR ds:0x445864
  443306:	jmp    DWORD PTR ds:0x445868
  44330c:	jmp    DWORD PTR ds:0x445870
  443312:	jmp    DWORD PTR ds:0x445874
  443318:	jmp    DWORD PTR ds:0x445878
  44331e:	jmp    DWORD PTR ds:0x44587c
  443324:	jmp    DWORD PTR ds:0x445880
  44332a:	jmp    DWORD PTR ds:0x445884
  443330:	jmp    DWORD PTR ds:0x445888
  443336:	jmp    DWORD PTR ds:0x44588c
  44333c:	jmp    DWORD PTR ds:0x445890
  443342:	jmp    DWORD PTR ds:0x445894
  443348:	jmp    DWORD PTR ds:0x445898
  44334e:	jmp    DWORD PTR ds:0x44589c
  443354:	jmp    DWORD PTR ds:0x4458a0
  44335a:	jmp    DWORD PTR ds:0x4458a4
  443360:	jmp    DWORD PTR ds:0x4458a8
  443366:	jmp    DWORD PTR ds:0x4458ac
  44336c:	jmp    DWORD PTR ds:0x4458b0
  443372:	jmp    DWORD PTR ds:0x4458b4
  443378:	jmp    DWORD PTR ds:0x4458b8
  44337e:	jmp    DWORD PTR ds:0x4458bc
  443384:	jmp    DWORD PTR ds:0x4458c0
  44338a:	jmp    DWORD PTR ds:0x4458c4
  443390:	jmp    DWORD PTR ds:0x4458c8
  443396:	jmp    DWORD PTR ds:0x4458cc
  44339c:	jmp    DWORD PTR ds:0x4458d0
  4433a2:	jmp    DWORD PTR ds:0x4458d4
  4433a8:	jmp    DWORD PTR ds:0x4458d8
  4433ae:	jmp    DWORD PTR ds:0x4458dc
  4433b4:	jmp    DWORD PTR ds:0x4458e0
  4433ba:	jmp    DWORD PTR ds:0x4458e4
  4433c0:	jmp    DWORD PTR ds:0x4458e8
  4433c6:	jmp    DWORD PTR ds:0x4458ec
  4433cc:	jmp    DWORD PTR ds:0x4458f0
  4433d2:	jmp    DWORD PTR ds:0x4458f4
  4433d8:	jmp    DWORD PTR ds:0x4458f8
  4433de:	jmp    DWORD PTR ds:0x4458fc
  4433e4:	jmp    DWORD PTR ds:0x445900
  4433ea:	jmp    DWORD PTR ds:0x445904
  4433f0:	jmp    DWORD PTR ds:0x445908
  4433f6:	jmp    DWORD PTR ds:0x44590c
  4433fc:	jmp    DWORD PTR ds:0x445910
  443402:	jmp    DWORD PTR ds:0x445914
  443408:	jmp    DWORD PTR ds:0x445918
  44340e:	jmp    DWORD PTR ds:0x44591c
  443414:	jmp    DWORD PTR ds:0x445920
  44341a:	jmp    DWORD PTR ds:0x445924
  443420:	jmp    DWORD PTR ds:0x445928
  443426:	jmp    DWORD PTR ds:0x44592c
  44342c:	jmp    DWORD PTR ds:0x445930
  443432:	jmp    DWORD PTR ds:0x445934
  443438:	jmp    DWORD PTR ds:0x445938
  44343e:	jmp    DWORD PTR ds:0x44593c
  443444:	jmp    DWORD PTR ds:0x445940
  44344a:	jmp    DWORD PTR ds:0x445944
  443450:	jmp    DWORD PTR ds:0x445948
  443456:	jmp    DWORD PTR ds:0x44594c
  44345c:	jmp    DWORD PTR ds:0x445950
  443462:	jmp    DWORD PTR ds:0x445954
  443468:	jmp    DWORD PTR ds:0x445958
  44346e:	jmp    DWORD PTR ds:0x44595c
  443474:	jmp    DWORD PTR ds:0x445960
  44347a:	jmp    DWORD PTR ds:0x445964
  443480:	jmp    DWORD PTR ds:0x445968
  443486:	jmp    DWORD PTR ds:0x44596c
  44348c:	jmp    DWORD PTR ds:0x445970
  443492:	jmp    DWORD PTR ds:0x445974
  443498:	jmp    DWORD PTR ds:0x445978
  44349e:	jmp    DWORD PTR ds:0x44597c
  4434a4:	jmp    DWORD PTR ds:0x445980
  4434aa:	jmp    DWORD PTR ds:0x445984
