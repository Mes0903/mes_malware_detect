
9655c635dd8e12b06850359f632d2315c8ccf9d73e742c2ea909b810a1e1b17c.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64026304
64001006:	jmp    0x6401382b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64026304
64001019:	call   0x6401382b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64013712
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402c83c
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x64013b5b
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64026050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64026088
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64026044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64026040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64026060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64026048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x6402607c
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x64026070
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x6402608c
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64026088
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x640016a0
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64026044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64026040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64026060
64001199:	call   0x640016f0
6400119e:	push   esi
6400119f:	call   0x64013712
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x64023dd9
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402f09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402f09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64026084
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001880
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64013712
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x64030540
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x64030540
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640286c8
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001880
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64013712
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x64030540
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x64030540
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x640286d4
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001880
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64013712
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x640286e0
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x640138c8
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64013712
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64013f6c
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64023f48
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402f09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x64013af1
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x64026080
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64026044
64001536:	mov    ebp,DWORD PTR ds:0x64026040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64026060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64026060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x64026080
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64026060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64026060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x64026070
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64026060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64013712
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	mov    eax,DWORD PTR [ecx]
64001682:	sub    eax,0x10
64001685:	lea    ecx,[eax+0xc]
64001688:	or     edx,0xffffffff
6400168b:	lock xadd DWORD PTR [ecx],edx
6400168f:	dec    edx
64001690:	test   edx,edx
64001692:	jg     0x6400169e
64001694:	mov    ecx,DWORD PTR [eax]
64001696:	mov    edx,DWORD PTR [ecx]
64001698:	push   eax
64001699:	mov    eax,DWORD PTR [edx+0x4]
6400169c:	call   eax
6400169e:	ret    
6400169f:	int3   
640016a0:	push   esi
640016a1:	mov    esi,ecx
640016a3:	push   edi
640016a4:	mov    edi,DWORD PTR [esi]
640016a6:	test   edi,edi
640016a8:	je     0x640016c2
640016aa:	push   ebx
640016ab:	call   DWORD PTR ds:0x64026044
640016b1:	push   edi
640016b2:	mov    ebx,eax
640016b4:	call   DWORD PTR ds:0x64026040
640016ba:	push   ebx
640016bb:	call   DWORD PTR ds:0x64026060
640016c1:	pop    ebx
640016c2:	pop    edi
640016c3:	mov    DWORD PTR [esi],0x0
640016c9:	pop    esi
640016ca:	ret    
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	push   esi
640016d1:	mov    esi,DWORD PTR [eax]
640016d3:	test   esi,esi
640016d5:	je     0x640016e5
640016d7:	call   0x640016f0
640016dc:	push   esi
640016dd:	call   0x64013712
640016e2:	add    esp,0x4
640016e5:	pop    esi
640016e6:	ret    
640016e7:	int3   
640016e8:	int3   
640016e9:	int3   
640016ea:	int3   
640016eb:	int3   
640016ec:	int3   
640016ed:	int3   
640016ee:	int3   
640016ef:	int3   
640016f0:	sub    esp,0x8
640016f3:	mov    eax,DWORD PTR [esi+0xc]
640016f6:	test   eax,eax
640016f8:	push   ebx
640016f9:	mov    ebx,DWORD PTR ds:0x64026040
640016ff:	push   ebp
64001700:	mov    ebp,DWORD PTR ds:0x64026060
64001706:	push   edi
64001707:	mov    edi,DWORD PTR ds:0x64026044
6400170d:	mov    DWORD PTR [esp+0xc],eax
64001711:	je     0x64001727
64001713:	call   edi
64001715:	mov    DWORD PTR [esp+0x10],eax
64001719:	mov    eax,DWORD PTR [esp+0xc]
6400171d:	push   eax
6400171e:	call   ebx
64001720:	mov    ecx,DWORD PTR [esp+0x10]
64001724:	push   ecx
64001725:	call   ebp
64001727:	mov    DWORD PTR [esi+0xc],0x0
6400172e:	mov    eax,DWORD PTR [esi+0x8]
64001731:	test   eax,eax
64001733:	mov    DWORD PTR [esp+0x10],eax
64001737:	je     0x6400174d
64001739:	call   edi
6400173b:	mov    edx,DWORD PTR [esp+0x10]
6400173f:	push   edx
64001740:	mov    DWORD PTR [esp+0x10],eax
64001744:	call   ebx
64001746:	mov    eax,DWORD PTR [esp+0xc]
6400174a:	push   eax
6400174b:	call   ebp
6400174d:	mov    DWORD PTR [esi+0x8],0x0
64001754:	mov    eax,DWORD PTR [esi+0x4]
64001757:	test   eax,eax
64001759:	mov    DWORD PTR [esp+0x10],eax
6400175d:	je     0x64001773
6400175f:	call   edi
64001761:	mov    ecx,DWORD PTR [esp+0x10]
64001765:	push   ecx
64001766:	mov    DWORD PTR [esp+0x10],eax
6400176a:	call   ebx
6400176c:	mov    edx,DWORD PTR [esp+0xc]
64001770:	push   edx
64001771:	call   ebp
64001773:	mov    DWORD PTR [esi+0x4],0x0
6400177a:	mov    eax,DWORD PTR [esi]
6400177c:	test   eax,eax
6400177e:	mov    DWORD PTR [esp+0x10],eax
64001782:	je     0x64001792
64001784:	call   edi
64001786:	mov    edi,eax
64001788:	mov    eax,DWORD PTR [esp+0x10]
6400178c:	push   eax
6400178d:	call   ebx
6400178f:	push   edi
64001790:	call   ebp
64001792:	pop    edi
64001793:	pop    ebp
64001794:	mov    DWORD PTR [esi],0x0
6400179a:	pop    ebx
6400179b:	add    esp,0x8
6400179e:	ret    
6400179f:	int3   
640017a0:	push   ebx
640017a1:	mov    ebx,DWORD PTR [esp+0x8]
640017a5:	push   ebp
640017a6:	mov    ebp,DWORD PTR [esp+0x10]
640017aa:	cmp    DWORD PTR [ebx+0x14],ebp
640017ad:	push   esi
640017ae:	push   edi
640017af:	mov    esi,ecx
640017b1:	jae    0x640017b8
640017b3:	call   0x640136ce
640017b8:	mov    edi,DWORD PTR [ebx+0x14]
640017bb:	mov    eax,DWORD PTR [esp+0x1c]
640017bf:	sub    edi,ebp
640017c1:	cmp    eax,edi
640017c3:	jae    0x640017c7
640017c5:	mov    edi,eax
640017c7:	cmp    esi,ebx
640017c9:	jne    0x640017ea
640017cb:	push   0xffffffff
640017cd:	add    edi,ebp
640017cf:	push   edi
640017d0:	mov    ecx,esi
640017d2:	call   0x64001ac0
640017d7:	push   ebp
640017d8:	push   0x0
640017da:	mov    ecx,esi
640017dc:	call   0x64001ac0
640017e1:	pop    edi
640017e2:	mov    eax,esi
640017e4:	pop    esi
640017e5:	pop    ebp
640017e6:	pop    ebx
640017e7:	ret    0xc
640017ea:	cmp    edi,0xfffffffe
640017ed:	jbe    0x640017f4
640017ef:	call   0x6401368f
640017f4:	mov    eax,DWORD PTR [esi+0x18]
640017f7:	cmp    eax,edi
640017f9:	jae    0x64001816
640017fb:	mov    eax,DWORD PTR [esi+0x14]
640017fe:	push   eax
640017ff:	push   edi
64001800:	mov    ecx,esi
64001802:	call   0x64001b60
64001807:	test   edi,edi
64001809:	jbe    0x64001871
6400180b:	cmp    DWORD PTR [ebx+0x18],0x10
6400180f:	jb     0x64001840
64001811:	mov    edx,DWORD PTR [ebx+0x4]
64001814:	jmp    0x64001843
64001816:	test   edi,edi
64001818:	jne    0x64001809
6400181a:	cmp    eax,0x10
6400181d:	mov    DWORD PTR [esi+0x14],edi
64001820:	jb     0x64001831
64001822:	mov    eax,DWORD PTR [esi+0x4]
64001825:	pop    edi
64001826:	mov    BYTE PTR [eax],0x0
64001829:	mov    eax,esi
6400182b:	pop    esi
6400182c:	pop    ebp
6400182d:	pop    ebx
6400182e:	ret    0xc
64001831:	lea    eax,[esi+0x4]
64001834:	pop    edi
64001835:	mov    BYTE PTR [eax],0x0
64001838:	mov    eax,esi
6400183a:	pop    esi
6400183b:	pop    ebp
6400183c:	pop    ebx
6400183d:	ret    0xc
64001840:	lea    edx,[ebx+0x4]
64001843:	mov    ecx,DWORD PTR [esi+0x18]
64001846:	cmp    ecx,0x10
64001849:	lea    ebx,[esi+0x4]
6400184c:	jb     0x64001852
6400184e:	mov    eax,DWORD PTR [ebx]
64001850:	jmp    0x64001854
64001852:	mov    eax,ebx
64001854:	push   edi
64001855:	add    edx,ebp
64001857:	push   edx
64001858:	push   ecx
64001859:	push   eax
6400185a:	call   0x640138c8
6400185f:	add    esp,0x10
64001862:	cmp    DWORD PTR [esi+0x18],0x10
64001866:	mov    DWORD PTR [esi+0x14],edi
64001869:	jb     0x6400186d
6400186b:	mov    ebx,DWORD PTR [ebx]
6400186d:	mov    BYTE PTR [ebx+edi*1],0x0
64001871:	pop    edi
64001872:	mov    eax,esi
64001874:	pop    esi
64001875:	pop    ebp
64001876:	pop    ebx
64001877:	ret    0xc
6400187a:	int3   
6400187b:	int3   
6400187c:	int3   
6400187d:	int3   
6400187e:	int3   
6400187f:	int3   
64001880:	push   ebx
64001881:	push   ebp
64001882:	push   esi
64001883:	mov    esi,ecx
64001885:	mov    ecx,DWORD PTR [esi+0x18]
64001888:	cmp    ecx,0x10
6400188b:	lea    ebx,[esi+0x4]
6400188e:	jb     0x64001894
64001890:	mov    eax,DWORD PTR [ebx]
64001892:	jmp    0x64001896
64001894:	mov    eax,ebx
64001896:	mov    ebp,DWORD PTR [esp+0x10]
6400189a:	cmp    ebp,eax
6400189c:	jb     0x640018cf
6400189e:	cmp    ecx,0x10
640018a1:	jb     0x640018a7
640018a3:	mov    eax,DWORD PTR [ebx]
640018a5:	jmp    0x640018a9
640018a7:	mov    eax,ebx
640018a9:	mov    edx,DWORD PTR [esi+0x14]
640018ac:	add    edx,eax
640018ae:	cmp    edx,ebp
640018b0:	jbe    0x640018cf
640018b2:	cmp    ecx,0x10
640018b5:	jb     0x640018b9
640018b7:	mov    ebx,DWORD PTR [ebx]
640018b9:	mov    eax,DWORD PTR [esp+0x14]
640018bd:	push   eax
640018be:	sub    ebp,ebx
640018c0:	push   ebp
640018c1:	push   esi
640018c2:	mov    ecx,esi
640018c4:	call   0x640017a0
640018c9:	pop    esi
640018ca:	pop    ebp
640018cb:	pop    ebx
640018cc:	ret    0x8
640018cf:	push   edi
640018d0:	mov    edi,DWORD PTR [esp+0x18]
640018d4:	cmp    edi,0xfffffffe
640018d7:	jbe    0x640018de
640018d9:	call   0x6401368f
640018de:	mov    eax,DWORD PTR [esi+0x18]
640018e1:	cmp    eax,edi
640018e3:	jae    0x64001901
640018e5:	mov    ecx,DWORD PTR [esi+0x14]
640018e8:	push   ecx
640018e9:	push   edi
640018ea:	mov    ecx,esi
640018ec:	call   0x64001b60
640018f1:	test   edi,edi
640018f3:	jbe    0x64001938
640018f5:	mov    ecx,DWORD PTR [esi+0x18]
640018f8:	cmp    ecx,0x10
640018fb:	jb     0x6400191b
640018fd:	mov    eax,DWORD PTR [ebx]
640018ff:	jmp    0x6400191d
64001901:	test   edi,edi
64001903:	jne    0x640018f3
64001905:	cmp    eax,0x10
64001908:	mov    DWORD PTR [esi+0x14],edi
6400190b:	jb     0x6400190f
6400190d:	mov    ebx,DWORD PTR [ebx]
6400190f:	pop    edi
64001910:	mov    eax,esi
64001912:	pop    esi
64001913:	pop    ebp
64001914:	mov    BYTE PTR [ebx],0x0
64001917:	pop    ebx
64001918:	ret    0x8
6400191b:	mov    eax,ebx
6400191d:	push   edi
6400191e:	push   ebp
6400191f:	push   ecx
64001920:	push   eax
64001921:	call   0x640138c8
64001926:	add    esp,0x10
64001929:	cmp    DWORD PTR [esi+0x18],0x10
6400192d:	mov    DWORD PTR [esi+0x14],edi
64001930:	jb     0x64001934
64001932:	mov    ebx,DWORD PTR [ebx]
64001934:	mov    BYTE PTR [ebx+edi*1],0x0
64001938:	pop    edi
64001939:	mov    eax,esi
6400193b:	pop    esi
6400193c:	pop    ebp
6400193d:	pop    ebx
6400193e:	ret    0x8
64001941:	int3   
64001942:	int3   
64001943:	int3   
64001944:	int3   
64001945:	int3   
64001946:	int3   
64001947:	int3   
64001948:	int3   
64001949:	int3   
6400194a:	int3   
6400194b:	int3   
6400194c:	int3   
6400194d:	int3   
6400194e:	int3   
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x640138c8
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x640136ce
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x6401368f
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x6401368f
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x640138c8
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x640136ce
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64013943
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x64023a90
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402f09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x64013af1
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x6401376d
64001bfa:	push   0x6402c874
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64026304
64001c0a:	call   0x64013b5b
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x640138c8
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64013712
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64013712
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x64013b5b
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x64013af1
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x6401376d
64001d1e:	push   0x6402c874
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64026304
64001d30:	call   0x64013b5b
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x640137d3
64001d6d:	mov    DWORD PTR [esi],0x64026304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x640141e6
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x6401437b
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64026034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64026030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402602c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x640304cc
64001fac:	call   0x64013341
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402603c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x640304cc
64001ff9:	call   0x64013341
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x64023d68
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402f09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x6401375c
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x64026444
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x640017a0
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x64026444
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64013712
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    ecx,esi
640020b9:	mov    BYTE PTR [esi+0x10],al
640020bc:	call   0x6401382b
640020c1:	test   BYTE PTR [esp+0x8],0x1
640020c6:	je     0x640020d1
640020c8:	push   esi
640020c9:	call   0x64013712
640020ce:	add    esp,0x4
640020d1:	mov    eax,esi
640020d3:	pop    esi
640020d4:	ret    0x4
640020d7:	int3   
640020d8:	int3   
640020d9:	int3   
640020da:	int3   
640020db:	int3   
640020dc:	int3   
640020dd:	int3   
640020de:	int3   
640020df:	int3   
640020e0:	push   0xffffffff
640020e2:	push   0x64023d38
640020e7:	mov    eax,fs:0x0
640020ed:	push   eax
640020ee:	push   ecx
640020ef:	push   esi
640020f0:	push   edi
640020f1:	mov    eax,ds:0x6402f09c
640020f6:	xor    eax,esp
640020f8:	push   eax
640020f9:	lea    eax,[esp+0x10]
640020fd:	mov    fs:0x0,eax
64002103:	mov    esi,ecx
64002105:	mov    DWORD PTR [esp+0xc],esi
64002109:	mov    edi,DWORD PTR [esp+0x20]
6400210d:	push   edi
6400210e:	call   0x640137d3
64002113:	xor    edx,edx
64002115:	mov    DWORD PTR [esp+0x18],edx
64002119:	push   0xffffffff
6400211b:	lea    ecx,[esi+0xc]
6400211e:	mov    DWORD PTR [esi],0x64026444
64002124:	lea    eax,[edi+0xc]
64002127:	push   edx
64002128:	mov    DWORD PTR [ecx+0x18],0xf
6400212f:	mov    DWORD PTR [ecx+0x14],edx
64002132:	push   eax
64002133:	mov    BYTE PTR [ecx+0x4],dl
64002136:	call   0x640017a0
6400213b:	mov    eax,esi
6400213d:	mov    ecx,DWORD PTR [esp+0x10]
64002141:	mov    DWORD PTR fs:0x0,ecx
64002148:	pop    ecx
64002149:	pop    edi
6400214a:	pop    esi
6400214b:	add    esp,0x10
6400214e:	ret    0x4
64002151:	int3   
64002152:	int3   
64002153:	int3   
64002154:	int3   
64002155:	int3   
64002156:	int3   
64002157:	int3   
64002158:	int3   
64002159:	int3   
6400215a:	int3   
6400215b:	int3   
6400215c:	int3   
6400215d:	int3   
6400215e:	int3   
6400215f:	int3   
64002160:	push   0xffffffff
64002162:	push   0x64024e1b
64002167:	mov    eax,fs:0x0
6400216d:	push   eax
6400216e:	sub    esp,0x41c
64002174:	mov    eax,ds:0x6402f09c
64002179:	xor    eax,esp
6400217b:	mov    DWORD PTR [esp+0x418],eax
64002182:	push   ebx
64002183:	push   ebp
64002184:	push   esi
64002185:	push   edi
64002186:	mov    eax,ds:0x6402f09c
6400218b:	xor    eax,esp
6400218d:	push   eax
6400218e:	lea    eax,[esp+0x430]
64002195:	mov    fs:0x0,eax
6400219b:	mov    esi,DWORD PTR [esp+0x440]
640021a2:	mov    ebx,DWORD PTR [esp+0x444]
640021a9:	mov    ebp,DWORD PTR [esp+0x448]
640021b0:	lea    eax,[esp+0x224]
640021b7:	push   eax
640021b8:	push   0x100
640021bd:	mov    DWORD PTR [esp+0x20],esi
640021c1:	mov    DWORD PTR [esp+0x1c],0x0
640021c9:	call   0x6400e2a0
640021ce:	call   eax
640021d0:	cmp    eax,0x100
640021d5:	jbe    0x640021e8
640021d7:	push   0x640286e4
640021dc:	mov    ecx,esi
640021de:	call   0x64002550
640021e3:	jmp    0x64002375
640021e8:	lea    ecx,[esp+0x1c]
640021ec:	push   ecx
640021ed:	push   0x0
640021ef:	lea    edx,[esp+0x22c]
640021f6:	push   0x640286e8
640021fb:	push   edx
640021fc:	call   0x6400e380
64002201:	call   eax
64002203:	test   eax,eax
64002205:	je     0x640021d7
64002207:	mov    edi,DWORD PTR ds:0x64026050
6400220d:	xor    esi,esi
6400220f:	nop
64002210:	cmp    esi,0x708
64002216:	je     0x640022f3
6400221c:	lea    eax,[esp+0x1c]
64002220:	push   eax
64002221:	call   0x6400e0e0
64002226:	call   eax
64002228:	test   eax,eax
6400222a:	jne    0x6400223d
6400222c:	push   esi
6400222d:	call   edi
6400222f:	add    esi,0xc8
64002235:	cmp    esi,0x7d0
6400223b:	jne    0x64002210
6400223d:	xor    esi,esi
6400223f:	cmp    esi,0x708
64002245:	je     0x640022f3
6400224b:	lea    ecx,[esp+0x1c]
6400224f:	push   0x0
64002251:	push   ecx
64002252:	call   0x6400e460
64002257:	call   eax
64002259:	test   eax,eax
6400225b:	jne    0x6400226e
6400225d:	push   esi
6400225e:	call   edi
64002260:	add    esi,0xc8
64002266:	cmp    esi,0x7d0
6400226c:	jne    0x6400223f
6400226e:	lea    eax,[esp+0x1c]
64002272:	lea    edx,[eax+0x2]
64002275:	mov    cx,WORD PTR [eax]
64002278:	add    eax,0x2
6400227b:	test   cx,cx
6400227e:	jne    0x64002275
64002280:	sub    eax,edx
64002282:	sar    eax,1
64002284:	push   eax
64002285:	lea    edx,[esp+0x20]
64002289:	push   edx
6400228a:	mov    ecx,ebp
6400228c:	call   0x64002aa0
64002291:	lea    eax,[esp+0x1c]
64002295:	push   eax
64002296:	lea    ecx,[esp+0x18]
6400229a:	call   0x64002550
6400229f:	push   0x640286f0
640022a4:	lea    ecx,[esp+0x18]
640022a8:	mov    DWORD PTR [esp+0x43c],0x0
640022b3:	call   0x64002620
640022b8:	mov    eax,DWORD PTR [ebx]
640022ba:	mov    ecx,DWORD PTR [eax-0xc]
640022bd:	push   ecx
640022be:	push   eax
640022bf:	lea    ecx,[esp+0x1c]
640022c3:	call   0x640029a0
640022c8:	mov    esi,DWORD PTR [esp+0x14]
640022cc:	mov    ecx,DWORD PTR [esi-0x10]
640022cf:	mov    edx,DWORD PTR [ecx]
640022d1:	mov    eax,DWORD PTR [edx+0x10]
640022d4:	add    esi,0xfffffff0
640022d7:	call   eax
640022d9:	cmp    DWORD PTR [esi+0xc],0x0
640022dd:	lea    edx,[esi+0xc]
640022e0:	jl     0x64002305
640022e2:	cmp    eax,DWORD PTR [esi]
640022e4:	jne    0x64002305
640022e6:	mov    edi,esi
640022e8:	mov    ecx,0x1
640022ed:	lock xadd DWORD PTR [edx],ecx
640022f1:	jmp    0x64002341
640022f3:	mov    esi,DWORD PTR [esp+0x18]
640022f7:	push   0x640286e4
640022fc:	mov    ecx,esi
640022fe:	call   0x64002550
64002303:	jmp    0x64002375
64002305:	mov    ecx,DWORD PTR [esi+0x4]
64002308:	mov    edx,DWORD PTR [eax]
6400230a:	mov    edx,DWORD PTR [edx]
6400230c:	push   0x2
6400230e:	push   ecx
6400230f:	mov    ecx,eax
64002311:	call   edx
64002313:	mov    edi,eax
64002315:	test   edi,edi
64002317:	jne    0x6400231e
64002319:	jmp    0x64001b50
6400231e:	mov    eax,DWORD PTR [esi+0x4]
64002321:	mov    DWORD PTR [edi+0x4],eax
64002324:	mov    eax,DWORD PTR [esi+0x4]
64002327:	lea    ecx,[eax+eax*1+0x2]
6400232b:	push   ecx
6400232c:	add    esi,0x10
6400232f:	lea    edx,[eax+eax*1+0x2]
64002333:	push   esi
64002334:	push   edx
64002335:	lea    eax,[edi+0x10]
64002338:	push   eax
64002339:	call   0x640138c8
6400233e:	add    esp,0x10
64002341:	mov    esi,DWORD PTR [esp+0x18]
64002345:	mov    DWORD PTR [esp+0x438],0xffffffff
64002350:	mov    eax,DWORD PTR [esp+0x14]
64002354:	add    edi,0x10
64002357:	add    eax,0xfffffff0
6400235a:	mov    DWORD PTR [esi],edi
6400235c:	lea    ecx,[eax+0xc]
6400235f:	or     edx,0xffffffff
64002362:	lock xadd DWORD PTR [ecx],edx
64002366:	dec    edx
64002367:	test   edx,edx
64002369:	jg     0x64002375
6400236b:	mov    ecx,DWORD PTR [eax]
6400236d:	mov    edx,DWORD PTR [ecx]
6400236f:	push   eax
64002370:	mov    eax,DWORD PTR [edx+0x4]
64002373:	call   eax
64002375:	mov    eax,esi
64002377:	mov    ecx,DWORD PTR [esp+0x430]
6400237e:	mov    DWORD PTR fs:0x0,ecx
64002385:	pop    ecx
64002386:	pop    edi
64002387:	pop    esi
64002388:	pop    ebp
64002389:	pop    ebx
6400238a:	mov    ecx,DWORD PTR [esp+0x418]
64002391:	xor    ecx,esp
64002393:	call   0x64013f6c
64002398:	add    esp,0x428
6400239e:	ret    
6400239f:	int3   
640023a0:	push   0xffffffff
640023a2:	push   0x64024df0
640023a7:	mov    eax,fs:0x0
640023ad:	push   eax
640023ae:	sub    esp,0x4c
640023b1:	push   ebx
640023b2:	push   esi
640023b3:	push   edi
640023b4:	mov    eax,ds:0x6402f09c
640023b9:	xor    eax,esp
640023bb:	push   eax
640023bc:	lea    eax,[esp+0x5c]
640023c0:	mov    fs:0x0,eax
640023c6:	xor    ebx,ebx
640023c8:	push   ebx
640023c9:	push   0x80
640023ce:	push   0x2
640023d0:	push   ebx
640023d1:	push   ebx
640023d2:	mov    DWORD PTR [esp+0x78],ebx
640023d6:	mov    edi,DWORD PTR [esp+0x80]
640023dd:	push   0x40000000
640023e2:	push   edi
640023e3:	call   0x6400e1c0
640023e8:	call   eax
640023ea:	mov    esi,eax
640023ec:	mov    DWORD PTR [esp+0x10],esi
640023f0:	cmp    esi,0xffffffff
640023f3:	mov    BYTE PTR [esp+0x64],0x1
640023f8:	push   ebx
640023f9:	jne    0x6400243b
640023fb:	push   0x640286e6
64002400:	lea    ecx,[esp+0x20]
64002404:	mov    DWORD PTR [esp+0x38],0xf
6400240c:	mov    DWORD PTR [esp+0x34],ebx
64002410:	mov    BYTE PTR [esp+0x24],bl
64002414:	call   0x64001880
64002419:	lea    eax,[esp+0x18]
6400241d:	push   eax
6400241e:	lea    ecx,[esp+0x38]
64002422:	mov    BYTE PTR [esp+0x68],0x2
64002427:	call   0x64002020
6400242c:	push   0x6402c8ac
64002431:	lea    ecx,[esp+0x38]
64002435:	push   ecx
64002436:	call   0x64013b5b
6400243b:	mov    eax,DWORD PTR [esp+0x78]
6400243f:	mov    ecx,DWORD PTR [esp+0x74]
64002443:	lea    edx,[esp+0x18]
64002447:	push   edx
64002448:	push   eax
64002449:	push   ecx
6400244a:	push   esi
6400244b:	call   DWORD PTR ds:0x64026088
64002451:	test   eax,eax
64002453:	jne    0x64002496
64002455:	push   ebx
64002456:	push   0x640286e6
6400245b:	lea    ecx,[esp+0x20]
6400245f:	mov    DWORD PTR [esp+0x38],0xf
64002467:	mov    DWORD PTR [esp+0x34],ebx
6400246b:	mov    BYTE PTR [esp+0x24],bl
6400246f:	call   0x64001880
64002474:	lea    edx,[esp+0x18]
64002478:	push   edx
64002479:	lea    ecx,[esp+0x38]
6400247d:	mov    BYTE PTR [esp+0x68],0x3
64002482:	call   0x64002020
64002487:	push   0x6402c8ac
6400248c:	lea    eax,[esp+0x38]
64002490:	push   eax
64002491:	call   0x64013b5b
64002496:	cmp    esi,ebx
64002498:	je     0x640024b0
6400249a:	call   DWORD PTR ds:0x64026044
640024a0:	push   esi
640024a1:	mov    ebx,eax
640024a3:	call   DWORD PTR ds:0x64026040
640024a9:	push   ebx
640024aa:	call   DWORD PTR ds:0x64026060
640024b0:	lea    eax,[edi-0x10]
640024b3:	mov    DWORD PTR [esp+0x64],0xffffffff
640024bb:	lea    ecx,[eax+0xc]
640024be:	or     edx,0xffffffff
640024c1:	lock xadd DWORD PTR [ecx],edx
640024c5:	dec    edx
640024c6:	test   edx,edx
640024c8:	jg     0x640024d4
640024ca:	mov    ecx,DWORD PTR [eax]
640024cc:	mov    edx,DWORD PTR [ecx]
640024ce:	push   eax
640024cf:	mov    eax,DWORD PTR [edx+0x4]
640024d2:	call   eax
640024d4:	mov    ecx,DWORD PTR [esp+0x5c]
640024d8:	mov    DWORD PTR fs:0x0,ecx
640024df:	pop    ecx
640024e0:	pop    edi
640024e1:	pop    esi
640024e2:	pop    ebx
640024e3:	add    esp,0x58
640024e6:	ret    
640024e7:	int3   
640024e8:	int3   
640024e9:	int3   
640024ea:	int3   
640024eb:	int3   
640024ec:	int3   
640024ed:	int3   
640024ee:	int3   
640024ef:	int3   
640024f0:	sub    esp,0x8
640024f3:	mov    DWORD PTR [esp],0x0
640024fa:	mov    DWORD PTR [esp+0x4],0x0
64002502:	call   DWORD PTR ds:0x6402f06c
64002508:	mov    eax,DWORD PTR [esp+0x10]
6400250c:	mov    eax,DWORD PTR [eax]
6400250e:	lea    ecx,[esp+0x4]
64002512:	push   ecx
64002513:	push   0x0
64002515:	lea    edx,[esp+0x8]
64002519:	push   edx
6400251a:	push   0x0
6400251c:	push   0x0
6400251e:	push   0x5
64002520:	push   0x1
64002522:	push   eax
64002523:	call   0x6400eee0
64002528:	call   eax
6400252a:	test   eax,eax
6400252c:	jne    0x6400254a
6400252e:	mov    ecx,DWORD PTR [esp]
64002531:	mov    eax,DWORD PTR [esp+0xc]
64002535:	mov    eax,DWORD PTR [eax]
64002537:	push   0x0
64002539:	push   ecx
6400253a:	push   0x0
6400253c:	push   0x0
6400253e:	push   0x4
64002540:	push   0x1
64002542:	push   eax
64002543:	call   0x6400efc0
64002548:	call   eax
6400254a:	add    esp,0x8
6400254d:	ret    
6400254e:	int3   
6400254f:	int3   
64002550:	push   0xffffffff
64002552:	push   0x640242a8
64002557:	mov    eax,fs:0x0
6400255d:	push   eax
6400255e:	push   ecx
6400255f:	push   esi
64002560:	push   edi
64002561:	mov    eax,ds:0x6402f09c
64002566:	xor    eax,esp
64002568:	push   eax
64002569:	lea    eax,[esp+0x10]
6400256d:	mov    fs:0x0,eax
64002573:	mov    edi,ecx
64002575:	mov    DWORD PTR [esp+0xc],edi
64002579:	mov    eax,ds:0x64030540
6400257e:	mov    edx,DWORD PTR [eax+0xc]
64002581:	mov    ecx,0x64030540
64002586:	call   edx
64002588:	add    eax,0x10
6400258b:	mov    DWORD PTR [edi],eax
6400258d:	mov    edx,DWORD PTR [esp+0x20]
64002591:	test   edx,edx
64002593:	mov    DWORD PTR [esp+0x18],0x0
6400259b:	je     0x640025c2
6400259d:	test   edx,0xffff0000
640025a3:	jne    0x640025c6
640025a5:	movzx  esi,dx
640025a8:	push   0x0
640025aa:	push   esi
640025ab:	call   0x64001fa0
640025b0:	add    esp,0x8
640025b3:	test   eax,eax
640025b5:	je     0x640025e8
640025b7:	push   esi
640025b8:	push   eax
640025b9:	mov    ecx,edi
640025bb:	call   0x640028d0
640025c0:	jmp    0x640025e8
640025c2:	xor    eax,eax
640025c4:	jmp    0x640025df
640025c6:	mov    eax,edx
640025c8:	lea    esi,[eax+0x2]
640025cb:	jmp    0x640025d0
640025cd:	lea    ecx,[ecx+0x0]
640025d0:	mov    cx,WORD PTR [eax]
640025d3:	add    eax,0x2
640025d6:	test   cx,cx
640025d9:	jne    0x640025d0
640025db:	sub    eax,esi
640025dd:	sar    eax,1
640025df:	push   eax
640025e0:	push   edx
640025e1:	mov    ecx,edi
640025e3:	call   0x64002aa0
640025e8:	mov    eax,edi
640025ea:	mov    ecx,DWORD PTR [esp+0x10]
640025ee:	mov    DWORD PTR fs:0x0,ecx
640025f5:	pop    ecx
640025f6:	pop    edi
640025f7:	pop    esi
640025f8:	add    esp,0x10
640025fb:	ret    0x4
640025fe:	int3   
640025ff:	int3   
64002600:	mov    eax,DWORD PTR [esp+0x4]
64002604:	mov    eax,DWORD PTR [eax]
64002606:	push   esi
64002607:	mov    esi,ecx
64002609:	mov    ecx,DWORD PTR [eax-0xc]
6400260c:	push   ecx
6400260d:	push   eax
6400260e:	mov    ecx,esi
64002610:	call   0x640029a0
64002615:	mov    eax,esi
64002617:	pop    esi
64002618:	ret    0x4
6400261b:	int3   
6400261c:	int3   
6400261d:	int3   
6400261e:	int3   
6400261f:	int3   
64002620:	push   0xffffffff
64002622:	push   0x64024278
64002627:	mov    eax,fs:0x0
6400262d:	push   eax
6400262e:	push   ecx
6400262f:	push   esi
64002630:	mov    eax,ds:0x6402f09c
64002635:	xor    eax,esp
64002637:	push   eax
64002638:	lea    eax,[esp+0xc]
6400263c:	mov    fs:0x0,eax
64002642:	mov    esi,ecx
64002644:	mov    eax,DWORD PTR [esi]
64002646:	mov    ecx,DWORD PTR [eax-0x10]
64002649:	test   ecx,ecx
6400264b:	je     0x64002658
6400264d:	mov    edx,DWORD PTR [ecx]
6400264f:	mov    eax,DWORD PTR [edx+0x10]
64002652:	call   eax
64002654:	test   eax,eax
64002656:	jne    0x64002668
64002658:	mov    edx,DWORD PTR ds:0x64030540
6400265e:	mov    eax,DWORD PTR [edx+0x10]
64002661:	mov    ecx,0x64030540
64002666:	call   eax
64002668:	mov    ecx,DWORD PTR [esp+0x1c]
6400266c:	push   eax
6400266d:	push   ecx
6400266e:	lea    ecx,[esp+0x10]
64002672:	call   0x64002720
64002677:	mov    DWORD PTR [esp+0x14],0x0
6400267f:	mov    eax,DWORD PTR [esp+0x8]
64002683:	mov    ecx,DWORD PTR [eax-0xc]
64002686:	push   ecx
64002687:	push   eax
64002688:	mov    ecx,esi
6400268a:	call   0x640029a0
6400268f:	mov    DWORD PTR [esp+0x14],0xffffffff
64002697:	mov    eax,DWORD PTR [esp+0x8]
6400269b:	add    eax,0xfffffff0
6400269e:	lea    edx,[eax+0xc]
640026a1:	or     ecx,0xffffffff
640026a4:	lock xadd DWORD PTR [edx],ecx
640026a8:	dec    ecx
640026a9:	test   ecx,ecx
640026ab:	jg     0x640026b7
640026ad:	mov    ecx,DWORD PTR [eax]
640026af:	mov    edx,DWORD PTR [ecx]
640026b1:	push   eax
640026b2:	mov    eax,DWORD PTR [edx+0x4]
640026b5:	call   eax
640026b7:	mov    eax,esi
640026b9:	mov    ecx,DWORD PTR [esp+0xc]
640026bd:	mov    DWORD PTR fs:0x0,ecx
640026c4:	pop    ecx
640026c5:	pop    esi
640026c6:	add    esp,0x10
640026c9:	ret    0x4
640026cc:	int3   
640026cd:	int3   
640026ce:	int3   
640026cf:	int3   
640026d0:	mov    edx,DWORD PTR [esp+0x4]
640026d4:	push   esi
640026d5:	mov    esi,ecx
640026d7:	mov    eax,edx
640026d9:	push   edi
640026da:	mov    DWORD PTR [esi+0x18],0xf
640026e1:	mov    DWORD PTR [esi+0x14],0x0
640026e8:	mov    BYTE PTR [esi+0x4],0x0
640026ec:	lea    edi,[eax+0x1]
640026ef:	nop
640026f0:	mov    cl,BYTE PTR [eax]
640026f2:	add    eax,0x1
640026f5:	test   cl,cl
640026f7:	jne    0x640026f0
640026f9:	sub    eax,edi
640026fb:	push   eax
640026fc:	push   edx
640026fd:	mov    ecx,esi
640026ff:	call   0x64001880
64002704:	pop    edi
64002705:	mov    eax,esi
64002707:	pop    esi
64002708:	ret    0x4
6400270b:	int3   
6400270c:	int3   
6400270d:	int3   
6400270e:	int3   
6400270f:	int3   
64002710:	mov    eax,DWORD PTR [ecx]
64002712:	push   eax
64002713:	call   0x64013712
64002718:	pop    ecx
64002719:	ret    
6400271a:	int3   
6400271b:	int3   
6400271c:	int3   
6400271d:	int3   
6400271e:	int3   
6400271f:	int3   
64002720:	push   0xffffffff
64002722:	push   0x64024248
64002727:	mov    eax,fs:0x0
6400272d:	push   eax
6400272e:	push   ecx
6400272f:	push   esi
64002730:	push   edi
64002731:	mov    eax,ds:0x6402f09c
64002736:	xor    eax,esp
64002738:	push   eax
64002739:	lea    eax,[esp+0x10]
6400273d:	mov    fs:0x0,eax
64002743:	mov    esi,ecx
64002745:	mov    DWORD PTR [esp+0xc],esi
64002749:	mov    ecx,DWORD PTR [esp+0x24]
6400274d:	xor    eax,eax
6400274f:	test   ecx,ecx
64002751:	setne  al
64002754:	test   eax,eax
64002756:	jne    0x64002762
64002758:	push   0x80004005
6400275d:	call   0x64001040
64002762:	mov    eax,DWORD PTR [ecx]
64002764:	mov    edx,DWORD PTR [eax+0xc]
64002767:	call   edx
64002769:	add    eax,0x10
6400276c:	mov    DWORD PTR [esi],eax
6400276e:	mov    eax,DWORD PTR [esp+0x20]
64002772:	test   eax,eax
64002774:	mov    DWORD PTR [esp+0x18],0x0
6400277c:	je     0x640027a2
6400277e:	test   eax,0xffff0000
64002783:	jne    0x640027a2
64002785:	movzx  edi,ax
64002788:	push   0x0
6400278a:	push   edi
6400278b:	call   0x64001fa0
64002790:	add    esp,0x8
64002793:	test   eax,eax
64002795:	je     0x640027aa
64002797:	push   edi
64002798:	push   eax
64002799:	mov    ecx,esi
6400279b:	call   0x640028d0
640027a0:	jmp    0x640027aa
640027a2:	push   eax
640027a3:	mov    ecx,esi
640027a5:	call   0x640027c0
640027aa:	mov    eax,esi
640027ac:	mov    ecx,DWORD PTR [esp+0x10]
640027b0:	mov    DWORD PTR fs:0x0,ecx
640027b7:	pop    ecx
640027b8:	pop    edi
640027b9:	pop    esi
640027ba:	add    esp,0x10
640027bd:	ret    0x8
640027c0:	push   ebx
640027c1:	mov    ebx,DWORD PTR [esp+0x8]
640027c5:	test   ebx,ebx
640027c7:	push   ebp
640027c8:	push   esi
640027c9:	push   edi
640027ca:	mov    edi,ecx
640027cc:	je     0x64002844
640027ce:	call   DWORD PTR ds:0x6402f06c
640027d4:	mov    ebp,DWORD PTR ds:0x64026024
640027da:	push   0x0
640027dc:	push   0x0
640027de:	push   0xffffffff
640027e0:	push   ebx
640027e1:	push   0x0
640027e3:	push   eax
640027e4:	call   ebp
640027e6:	mov    esi,eax
640027e8:	sub    esi,0x1
640027eb:	test   esi,esi
640027ed:	jle    0x64002844
640027ef:	mov    eax,DWORD PTR [edi]
640027f1:	mov    edx,DWORD PTR [eax-0x8]
640027f4:	sub    eax,0x10
640027f7:	mov    ecx,0x1
640027fc:	sub    ecx,DWORD PTR [eax+0xc]
640027ff:	sub    edx,esi
64002801:	or     ecx,edx
64002803:	jge    0x6400280d
64002805:	push   esi
64002806:	mov    ecx,edi
64002808:	call   0x64001e00
6400280d:	mov    eax,DWORD PTR [edi]
6400280f:	push   esi
64002810:	push   eax
64002811:	push   0xffffffff
64002813:	push   ebx
64002814:	push   0x0
64002816:	call   DWORD PTR ds:0x6402f06c
6400281c:	push   eax
6400281d:	call   ebp
6400281f:	mov    eax,DWORD PTR [edi]
64002821:	cmp    esi,DWORD PTR [eax-0x8]
64002824:	jg     0x6400283a
64002826:	mov    DWORD PTR [eax-0xc],esi
64002829:	mov    eax,DWORD PTR [edi]
6400282b:	mov    WORD PTR [eax+esi*2],0x0
64002831:	mov    eax,edi
64002833:	pop    edi
64002834:	pop    esi
64002835:	pop    ebp
64002836:	pop    ebx
64002837:	ret    0x4
6400283a:	push   0x80070057
6400283f:	call   0x64001040
64002844:	mov    ecx,edi
64002846:	call   0x64002a30
6400284b:	mov    eax,edi
6400284d:	pop    edi
6400284e:	pop    esi
6400284f:	pop    ebp
64002850:	pop    ebx
64002851:	ret    0x4
64002854:	int3   
64002855:	int3   
64002856:	int3   
64002857:	int3   
64002858:	int3   
64002859:	int3   
6400285a:	int3   
6400285b:	int3   
6400285c:	int3   
6400285d:	int3   
6400285e:	int3   
6400285f:	int3   
64002860:	push   esi
64002861:	mov    esi,DWORD PTR [esp+0x8]
64002865:	mov    ecx,DWORD PTR [esi]
64002867:	mov    eax,DWORD PTR [ecx]
64002869:	mov    edx,DWORD PTR [eax+0x10]
6400286c:	push   edi
6400286d:	call   edx
6400286f:	cmp    DWORD PTR [esi+0xc],0x0
64002873:	lea    ecx,[esi+0xc]
64002876:	jl     0x6400288c
64002878:	cmp    eax,DWORD PTR [esi]
6400287a:	jne    0x6400288c
6400287c:	mov    edi,esi
6400287e:	mov    eax,0x1
64002883:	lock xadd DWORD PTR [ecx],eax
64002887:	mov    eax,edi
64002889:	pop    edi
6400288a:	pop    esi
6400288b:	ret    
6400288c:	mov    ecx,DWORD PTR [esi+0x4]
6400288f:	mov    edx,DWORD PTR [eax]
64002891:	mov    edx,DWORD PTR [edx]
64002893:	push   0x2
64002895:	push   ecx
64002896:	mov    ecx,eax
64002898:	call   edx
6400289a:	mov    edi,eax
6400289c:	test   edi,edi
6400289e:	jne    0x640028a5
640028a0:	jmp    0x64001b50
640028a5:	mov    eax,DWORD PTR [esi+0x4]
640028a8:	mov    DWORD PTR [edi+0x4],eax
640028ab:	mov    eax,DWORD PTR [esi+0x4]
640028ae:	lea    eax,[eax+eax*1+0x2]
640028b2:	push   eax
640028b3:	add    esi,0x10
640028b6:	push   esi
640028b7:	push   eax
640028b8:	lea    ecx,[edi+0x10]
640028bb:	push   ecx
640028bc:	call   0x640138c8
640028c1:	add    esp,0x10
640028c4:	mov    eax,edi
640028c6:	pop    edi
640028c7:	pop    esi
640028c8:	ret    
640028c9:	int3   
640028ca:	int3   
640028cb:	int3   
640028cc:	int3   
640028cd:	int3   
640028ce:	int3   
640028cf:	int3   
640028d0:	push   ebx
640028d1:	push   esi
640028d2:	mov    esi,DWORD PTR [esp+0x10]
640028d6:	mov    eax,esi
640028d8:	shr    eax,0x4
640028db:	push   edi
640028dc:	mov    edi,DWORD PTR [esp+0x10]
640028e0:	add    eax,0x1
640028e3:	mov    ebx,ecx
640028e5:	movzx  ecx,ax
640028e8:	push   0x6
640028ea:	push   ecx
640028eb:	push   edi
640028ec:	call   DWORD PTR ds:0x64026038
640028f2:	test   eax,eax
640028f4:	je     0x64002907
640028f6:	push   esi
640028f7:	push   eax
640028f8:	push   edi
640028f9:	call   0x64001f30
640028fe:	mov    esi,eax
64002900:	add    esp,0xc
64002903:	test   esi,esi
64002905:	jne    0x6400290f
64002907:	pop    edi
64002908:	pop    esi
64002909:	xor    eax,eax
6400290b:	pop    ebx
6400290c:	ret    0x8
6400290f:	mov    eax,DWORD PTR [ebx]
64002911:	movzx  edi,WORD PTR [esi]
64002914:	sub    eax,0x10
64002917:	mov    edx,0x1
6400291c:	sub    edx,DWORD PTR [eax+0xc]
6400291f:	mov    eax,DWORD PTR [eax+0x8]
64002922:	sub    eax,edi
64002924:	or     edx,eax
64002926:	jge    0x64002930
64002928:	push   edi
64002929:	mov    ecx,ebx
6400292b:	call   0x64001e00
64002930:	movzx  eax,WORD PTR [esi]
64002933:	cmp    eax,0xffffffff
64002936:	push   ebp
64002937:	mov    ebp,DWORD PTR [ebx]
64002939:	lea    edx,[esi+0x2]
6400293c:	jne    0x64002955
6400293e:	mov    eax,edx
64002940:	lea    esi,[eax+0x2]
64002943:	mov    cx,WORD PTR [eax]
64002946:	add    eax,0x2
64002949:	test   cx,cx
6400294c:	jne    0x64002943
6400294e:	sub    eax,esi
64002950:	sar    eax,1
64002952:	add    eax,0x1
64002955:	lea    ecx,[eax+eax*1]
64002958:	push   ecx
64002959:	push   edx
6400295a:	lea    esi,[edi+edi*1]
6400295d:	push   esi
6400295e:	push   ebp
6400295f:	call   0x640138c8
64002964:	push   eax
64002965:	call   0x64001e90
6400296a:	add    esp,0x14
6400296d:	test   edi,edi
6400296f:	pop    ebp
64002970:	jl     0x6400298f
64002972:	mov    eax,DWORD PTR [ebx]
64002974:	cmp    edi,DWORD PTR [eax-0x8]
64002977:	jg     0x6400298f
64002979:	mov    DWORD PTR [eax-0xc],edi
6400297c:	mov    edx,DWORD PTR [ebx]
6400297e:	pop    edi
6400297f:	mov    WORD PTR [esi+edx*1],0x0
64002985:	pop    esi
64002986:	mov    eax,0x1
6400298b:	pop    ebx
6400298c:	ret    0x8
6400298f:	push   0x80070057
64002994:	call   0x64001040
64002999:	int3   
6400299a:	int3   
6400299b:	int3   
6400299c:	int3   
6400299d:	int3   
6400299e:	int3   
6400299f:	int3   
640029a0:	push   ebx
640029a1:	push   ebp
640029a2:	push   esi
640029a3:	mov    esi,DWORD PTR [esp+0x10]
640029a7:	mov    ebp,ecx
640029a9:	mov    eax,DWORD PTR [ebp+0x0]
640029ac:	mov    ebx,DWORD PTR [eax-0xc]
640029af:	mov    ecx,DWORD PTR [esp+0x14]
640029b3:	sub    esi,eax
640029b5:	mov    edx,0x1
640029ba:	sub    edx,DWORD PTR [eax-0x4]
640029bd:	mov    eax,DWORD PTR [eax-0x8]
640029c0:	push   edi
640029c1:	lea    edi,[ebx+ecx*1]
640029c4:	sub    eax,edi
640029c6:	sar    esi,1
640029c8:	or     edx,eax
640029ca:	jge    0x640029d4
640029cc:	push   edi
640029cd:	mov    ecx,ebp
640029cf:	call   0x64001e00
640029d4:	cmp    esi,ebx
640029d6:	mov    ecx,DWORD PTR [ebp+0x0]
640029d9:	ja     0x640029e2
640029db:	lea    edx,[ecx+esi*2]
640029de:	mov    DWORD PTR [esp+0x14],edx
640029e2:	mov    eax,DWORD PTR [esp+0x18]
640029e6:	mov    edx,DWORD PTR [esp+0x14]
640029ea:	add    eax,eax
640029ec:	push   eax
640029ed:	push   edx
640029ee:	push   eax
640029ef:	lea    eax,[ecx+ebx*2]
640029f2:	push   eax
640029f3:	call   0x640138c8
640029f8:	add    esp,0x10
640029fb:	test   edi,edi
640029fd:	jl     0x64002a1a
640029ff:	mov    eax,DWORD PTR [ebp+0x0]
64002a02:	cmp    edi,DWORD PTR [eax-0x8]
64002a05:	jg     0x64002a1a
64002a07:	mov    DWORD PTR [eax-0xc],edi
64002a0a:	mov    ecx,DWORD PTR [ebp+0x0]
64002a0d:	mov    WORD PTR [ecx+edi*2],0x0
64002a13:	pop    edi
64002a14:	pop    esi
64002a15:	pop    ebp
64002a16:	pop    ebx
64002a17:	ret    0x8
64002a1a:	push   0x80070057
64002a1f:	call   0x64001040
64002a24:	int3   
64002a25:	int3   
64002a26:	int3   
64002a27:	int3   
64002a28:	int3   
64002a29:	int3   
64002a2a:	int3   
64002a2b:	int3   
64002a2c:	int3   
64002a2d:	int3   
64002a2e:	int3   
64002a2f:	int3   
64002a30:	push   esi
64002a31:	mov    esi,ecx
64002a33:	mov    ecx,DWORD PTR [esi]
64002a35:	cmp    DWORD PTR [ecx-0xc],0x0
64002a39:	lea    eax,[ecx-0x10]
64002a3c:	push   edi
64002a3d:	mov    edi,DWORD PTR [eax]
64002a3f:	je     0x64002a8f
64002a41:	cmp    DWORD PTR [eax+0xc],0x0
64002a45:	lea    edx,[eax+0xc]
64002a48:	jge    0x64002a6b
64002a4a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a4e:	jge    0x64002a5a
64002a50:	push   0x80070057
64002a55:	call   0x64001040
64002a5a:	mov    DWORD PTR [ecx-0xc],0x0
64002a61:	mov    eax,DWORD PTR [esi]
64002a63:	pop    edi
64002a64:	mov    WORD PTR [eax],0x0
64002a69:	pop    esi
64002a6a:	ret    
64002a6b:	or     ecx,0xffffffff
64002a6e:	lock xadd DWORD PTR [edx],ecx
64002a72:	dec    ecx
64002a73:	test   ecx,ecx
64002a75:	jg     0x64002a81
64002a77:	mov    ecx,DWORD PTR [eax]
64002a79:	mov    edx,DWORD PTR [ecx]
64002a7b:	push   eax
64002a7c:	mov    eax,DWORD PTR [edx+0x4]
64002a7f:	call   eax
64002a81:	mov    edx,DWORD PTR [edi]
64002a83:	mov    eax,DWORD PTR [edx+0xc]
64002a86:	mov    ecx,edi
64002a88:	call   eax
64002a8a:	add    eax,0x10
64002a8d:	mov    DWORD PTR [esi],eax
64002a8f:	pop    edi
64002a90:	pop    esi
64002a91:	ret    
64002a92:	int3   
64002a93:	int3   
64002a94:	int3   
64002a95:	int3   
64002a96:	int3   
64002a97:	int3   
64002a98:	int3   
64002a99:	int3   
64002a9a:	int3   
64002a9b:	int3   
64002a9c:	int3   
64002a9d:	int3   
64002a9e:	int3   
64002a9f:	int3   
64002aa0:	push   ebx
64002aa1:	mov    ebx,DWORD PTR [esp+0xc]
64002aa5:	test   ebx,ebx
64002aa7:	push   ebp
64002aa8:	mov    ebp,ecx
64002aaa:	jne    0x64002ab6
64002aac:	call   0x64002a30
64002ab1:	pop    ebp
64002ab2:	pop    ebx
64002ab3:	ret    0x8
64002ab6:	push   esi
64002ab7:	mov    esi,DWORD PTR [esp+0x10]
64002abb:	test   esi,esi
64002abd:	jne    0x64002ac9
64002abf:	push   0x80070057
64002ac4:	call   0x64001040
64002ac9:	mov    eax,DWORD PTR [ebp+0x0]
64002acc:	mov    edx,DWORD PTR [eax-0x8]
64002acf:	mov    ecx,0x1
64002ad4:	sub    ecx,DWORD PTR [eax-0x4]
64002ad7:	sub    esi,eax
64002ad9:	sub    edx,ebx
64002adb:	sar    esi,1
64002add:	or     ecx,edx
64002adf:	push   edi
64002ae0:	mov    edi,DWORD PTR [eax-0xc]
64002ae3:	jge    0x64002aed
64002ae5:	push   ebx
64002ae6:	mov    ecx,ebp
64002ae8:	call   0x64001e00
64002aed:	mov    eax,DWORD PTR [ebp+0x0]
64002af0:	cmp    esi,edi
64002af2:	lea    edi,[ebx+ebx*1]
64002af5:	push   edi
64002af6:	ja     0x64002b05
64002af8:	lea    ecx,[eax+esi*2]
64002afb:	push   ecx
64002afc:	push   edi
64002afd:	push   eax
64002afe:	call   0x64013943
64002b03:	jmp    0x64002b11
64002b05:	mov    edx,DWORD PTR [esp+0x18]
64002b09:	push   edx
64002b0a:	push   edi
64002b0b:	push   eax
64002b0c:	call   0x640138c8
64002b11:	add    esp,0x10
64002b14:	test   ebx,ebx
64002b16:	jl     0x64002b33
64002b18:	mov    eax,DWORD PTR [ebp+0x0]
64002b1b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b1e:	jg     0x64002b33
64002b20:	mov    DWORD PTR [eax-0xc],ebx
64002b23:	mov    eax,DWORD PTR [ebp+0x0]
64002b26:	mov    WORD PTR [edi+eax*1],0x0
64002b2c:	pop    edi
64002b2d:	pop    esi
64002b2e:	pop    ebp
64002b2f:	pop    ebx
64002b30:	ret    0x8
64002b33:	push   0x80070057
64002b38:	call   0x64001040
64002b3d:	int3   
64002b3e:	int3   
64002b3f:	int3   
64002b40:	push   esi
64002b41:	mov    esi,DWORD PTR [esp+0x8]
64002b45:	test   esi,esi
64002b47:	je     0x64002b78
64002b49:	mov    eax,DWORD PTR [esp+0xc]
64002b4d:	test   eax,eax
64002b4f:	je     0x64002b78
64002b51:	mov    ecx,DWORD PTR [esp+0x10]
64002b55:	mov    edx,DWORD PTR [esp+0x14]
64002b59:	push   0x0
64002b5b:	push   0x0
64002b5d:	push   ecx
64002b5e:	push   esi
64002b5f:	push   0xffffffff
64002b61:	push   eax
64002b62:	push   0x0
64002b64:	push   edx
64002b65:	mov    BYTE PTR [esi],0x0
64002b68:	call   DWORD PTR ds:0x64026028
64002b6e:	neg    eax
64002b70:	sbb    eax,eax
64002b72:	and    eax,esi
64002b74:	pop    esi
64002b75:	ret    0x10
64002b78:	xor    eax,eax
64002b7a:	pop    esi
64002b7b:	ret    0x10
64002b7e:	int3   
64002b7f:	int3   
64002b80:	mov    eax,DWORD PTR [esi]
64002b82:	test   eax,eax
64002b84:	je     0x64002b93
64002b86:	push   eax
64002b87:	call   DWORD PTR ds:0x64026000
64002b8d:	mov    DWORD PTR [esi],0x0
64002b93:	ret    
64002b94:	int3   
64002b95:	int3   
64002b96:	int3   
64002b97:	int3   
64002b98:	int3   
64002b99:	int3   
64002b9a:	int3   
64002b9b:	int3   
64002b9c:	int3   
64002b9d:	int3   
64002b9e:	int3   
64002b9f:	int3   
64002ba0:	push   ecx
64002ba1:	mov    eax,DWORD PTR [edi]
64002ba3:	lea    ecx,[esp]
64002ba6:	push   ecx
64002ba7:	mov    ecx,DWORD PTR [esp+0xc]
64002bab:	push   esi
64002bac:	add    eax,eax
64002bae:	lea    edx,[esp+0x14]
64002bb2:	push   edx
64002bb3:	mov    DWORD PTR [esp+0xc],eax
64002bb7:	mov    eax,DWORD PTR [esp+0x18]
64002bbb:	push   0x0
64002bbd:	mov    DWORD PTR [edi],0x0
64002bc3:	mov    edx,DWORD PTR [ecx]
64002bc5:	push   eax
64002bc6:	push   edx
64002bc7:	call   DWORD PTR ds:0x6402600c
64002bcd:	test   eax,eax
64002bcf:	jne    0x64002c0e
64002bd1:	mov    eax,DWORD PTR [esp+0xc]
64002bd5:	cmp    eax,0x1
64002bd8:	je     0x64002bdf
64002bda:	cmp    eax,0x2
64002bdd:	jne    0x64002bfa
64002bdf:	test   esi,esi
64002be1:	mov    eax,DWORD PTR [esp]
64002be4:	je     0x64002c08
64002be6:	test   eax,eax
64002be8:	je     0x64002c03
64002bea:	test   al,0x1
64002bec:	jne    0x64002bfa
64002bee:	mov    ecx,eax
64002bf0:	shr    ecx,1
64002bf2:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002bf8:	je     0x64002c08
64002bfa:	mov    eax,0xd
64002bff:	pop    ecx
64002c00:	ret    0x8
64002c03:	mov    WORD PTR [esi],0x0
64002c08:	shr    eax,1
64002c0a:	mov    DWORD PTR [edi],eax
64002c0c:	xor    eax,eax
64002c0e:	pop    ecx
64002c0f:	ret    0x8
64002c12:	int3   
64002c13:	int3   
64002c14:	int3   
64002c15:	int3   
64002c16:	int3   
64002c17:	int3   
64002c18:	int3   
64002c19:	int3   
64002c1a:	int3   
64002c1b:	int3   
64002c1c:	int3   
64002c1d:	int3   
64002c1e:	int3   
64002c1f:	int3   
64002c20:	ret    
64002c21:	int3   
64002c22:	int3   
64002c23:	int3   
64002c24:	int3   
64002c25:	int3   
64002c26:	int3   
64002c27:	int3   
64002c28:	int3   
64002c29:	int3   
64002c2a:	int3   
64002c2b:	int3   
64002c2c:	int3   
64002c2d:	int3   
64002c2e:	int3   
64002c2f:	int3   
64002c30:	mov    eax,DWORD PTR [esp+0xc]
64002c34:	cmp    eax,0x4
64002c37:	mov    ecx,DWORD PTR [esp+0x8]
64002c3b:	mov    edx,DWORD PTR [esp+0x4]
64002c3f:	push   esi
64002c40:	push   edi
64002c41:	jb     0x64002c57
64002c43:	mov    esi,DWORD PTR [edx]
64002c45:	cmp    esi,DWORD PTR [ecx]
64002c47:	jne    0x64002c5b
64002c49:	sub    eax,0x4
64002c4c:	add    ecx,0x4
64002c4f:	add    edx,0x4
64002c52:	cmp    eax,0x4
64002c55:	jae    0x64002c43
64002c57:	test   eax,eax
64002c59:	je     0x64002cb9
64002c5b:	movzx  esi,BYTE PTR [edx]
64002c5e:	movzx  edi,BYTE PTR [ecx]
64002c61:	sub    esi,edi
64002c63:	jne    0x64002caa
64002c65:	sub    eax,0x1
64002c68:	add    ecx,0x1
64002c6b:	add    edx,0x1
64002c6e:	test   eax,eax
64002c70:	je     0x64002cb9
64002c72:	movzx  esi,BYTE PTR [edx]
64002c75:	movzx  edi,BYTE PTR [ecx]
64002c78:	sub    esi,edi
64002c7a:	jne    0x64002caa
64002c7c:	sub    eax,0x1
64002c7f:	add    ecx,0x1
64002c82:	add    edx,0x1
64002c85:	test   eax,eax
64002c87:	je     0x64002cb9
64002c89:	movzx  esi,BYTE PTR [edx]
64002c8c:	movzx  edi,BYTE PTR [ecx]
64002c8f:	sub    esi,edi
64002c91:	jne    0x64002caa
64002c93:	sub    eax,0x1
64002c96:	add    ecx,0x1
64002c99:	add    edx,0x1
64002c9c:	test   eax,eax
64002c9e:	je     0x64002cb9
64002ca0:	movzx  esi,BYTE PTR [edx]
64002ca3:	movzx  eax,BYTE PTR [ecx]
64002ca6:	sub    esi,eax
64002ca8:	je     0x64002cb9
64002caa:	test   esi,esi
64002cac:	mov    eax,0x1
64002cb1:	jg     0x64002cbb
64002cb3:	pop    edi
64002cb4:	or     eax,0xffffffff
64002cb7:	pop    esi
64002cb8:	ret    
64002cb9:	xor    eax,eax
64002cbb:	pop    edi
64002cbc:	pop    esi
64002cbd:	ret    
64002cbe:	int3   
64002cbf:	int3   
64002cc0:	push   0xffffffff
64002cc2:	push   0x64023d08
64002cc7:	mov    eax,fs:0x0
64002ccd:	push   eax
64002cce:	push   ecx
64002ccf:	push   esi
64002cd0:	mov    eax,ds:0x6402f09c
64002cd5:	xor    eax,esp
64002cd7:	push   eax
64002cd8:	lea    eax,[esp+0xc]
64002cdc:	mov    fs:0x0,eax
64002ce2:	mov    esi,ecx
64002ce4:	mov    DWORD PTR [esp+0x8],esi
64002ce8:	call   0x6401375c
64002ced:	xor    eax,eax
64002cef:	mov    DWORD PTR [esp+0x14],eax
64002cf3:	lea    ecx,[esi+0xc]
64002cf6:	mov    DWORD PTR [esi],0x64026310
64002cfc:	push   0xffffffff
64002cfe:	mov    DWORD PTR [ecx+0x14],eax
64002d01:	mov    DWORD PTR [ecx+0x18],0xf
64002d08:	push   eax
64002d09:	mov    BYTE PTR [ecx+0x4],al
64002d0c:	mov    eax,DWORD PTR [esp+0x24]
64002d10:	push   eax
64002d11:	call   0x640017a0
64002d16:	mov    eax,esi
64002d18:	mov    ecx,DWORD PTR [esp+0xc]
64002d1c:	mov    DWORD PTR fs:0x0,ecx
64002d23:	pop    ecx
64002d24:	pop    esi
64002d25:	add    esp,0x10
64002d28:	ret    0x4
64002d2b:	int3   
64002d2c:	int3   
64002d2d:	int3   
64002d2e:	int3   
64002d2f:	int3   
64002d30:	cmp    DWORD PTR [ecx+0x24],0x10
64002d34:	jb     0x64002d3a
64002d36:	mov    eax,DWORD PTR [ecx+0x10]
64002d39:	ret    
64002d3a:	lea    eax,[ecx+0x10]
64002d3d:	ret    
64002d3e:	int3   
64002d3f:	int3   
64002d40:	push   esi
64002d41:	mov    esi,ecx
64002d43:	mov    DWORD PTR [esi],0x64026310
64002d49:	cmp    DWORD PTR [esi+0x24],0x10
64002d4d:	jb     0x64002d5b
64002d4f:	mov    eax,DWORD PTR [esi+0x10]
64002d52:	push   eax
64002d53:	call   0x64013712
64002d58:	add    esp,0x4
64002d5b:	xor    eax,eax
64002d5d:	mov    DWORD PTR [esi+0x24],0xf
64002d64:	mov    DWORD PTR [esi+0x20],eax
64002d67:	mov    ecx,esi
64002d69:	mov    BYTE PTR [esi+0x10],al
64002d6c:	call   0x6401382b
64002d71:	test   BYTE PTR [esp+0x8],0x1
64002d76:	je     0x64002d81
64002d78:	push   esi
64002d79:	call   0x64013712
64002d7e:	add    esp,0x4
64002d81:	mov    eax,esi
64002d83:	pop    esi
64002d84:	ret    0x4
64002d87:	int3   
64002d88:	int3   
64002d89:	int3   
64002d8a:	int3   
64002d8b:	int3   
64002d8c:	int3   
64002d8d:	int3   
64002d8e:	int3   
64002d8f:	int3   
64002d90:	push   esi
64002d91:	mov    esi,ecx
64002d93:	mov    DWORD PTR [esi],0x64026310
64002d99:	cmp    DWORD PTR [esi+0x24],0x10
64002d9d:	jb     0x64002dab
64002d9f:	mov    eax,DWORD PTR [esi+0x10]
64002da2:	push   eax
64002da3:	call   0x64013712
64002da8:	add    esp,0x4
64002dab:	xor    eax,eax
64002dad:	mov    DWORD PTR [esi+0x24],0xf
64002db4:	mov    DWORD PTR [esi+0x20],eax
64002db7:	mov    BYTE PTR [esi+0x10],al
64002dba:	mov    ecx,esi
64002dbc:	pop    esi
64002dbd:	jmp    0x6401382b
64002dc2:	int3   
64002dc3:	int3   
64002dc4:	int3   
64002dc5:	int3   
64002dc6:	int3   
64002dc7:	int3   
64002dc8:	int3   
64002dc9:	int3   
64002dca:	int3   
64002dcb:	int3   
64002dcc:	int3   
64002dcd:	int3   
64002dce:	int3   
64002dcf:	int3   
64002dd0:	mov    eax,DWORD PTR [esp+0x4]
64002dd4:	push   esi
64002dd5:	push   eax
64002dd6:	mov    esi,ecx
64002dd8:	call   0x64002df0
64002ddd:	mov    DWORD PTR [esi],0x64026328
64002de3:	mov    eax,esi
64002de5:	pop    esi
64002de6:	ret    0x4
64002de9:	int3   
64002dea:	int3   
64002deb:	int3   
64002dec:	int3   
64002ded:	int3   
64002dee:	int3   
64002def:	int3   
64002df0:	push   0xffffffff
64002df2:	push   0x64023cd8
64002df7:	mov    eax,fs:0x0
64002dfd:	push   eax
64002dfe:	push   ecx
64002dff:	push   esi
64002e00:	push   edi
64002e01:	mov    eax,ds:0x6402f09c
64002e06:	xor    eax,esp
64002e08:	push   eax
64002e09:	lea    eax,[esp+0x10]
64002e0d:	mov    fs:0x0,eax
64002e13:	mov    esi,ecx
64002e15:	mov    DWORD PTR [esp+0xc],esi
64002e19:	mov    edi,DWORD PTR [esp+0x20]
64002e1d:	push   edi
64002e1e:	call   0x640137d3
64002e23:	xor    edx,edx
64002e25:	mov    DWORD PTR [esp+0x18],edx
64002e29:	push   0xffffffff
64002e2b:	lea    ecx,[esi+0xc]
64002e2e:	mov    DWORD PTR [esi],0x64026310
64002e34:	lea    eax,[edi+0xc]
64002e37:	push   edx
64002e38:	mov    DWORD PTR [ecx+0x18],0xf
64002e3f:	mov    DWORD PTR [ecx+0x14],edx
64002e42:	push   eax
64002e43:	mov    BYTE PTR [ecx+0x4],dl
64002e46:	call   0x640017a0
64002e4b:	mov    eax,esi
64002e4d:	mov    ecx,DWORD PTR [esp+0x10]
64002e51:	mov    DWORD PTR fs:0x0,ecx
64002e58:	pop    ecx
64002e59:	pop    edi
64002e5a:	pop    esi
64002e5b:	add    esp,0x10
64002e5e:	ret    0x4
64002e61:	int3   
64002e62:	int3   
64002e63:	int3   
64002e64:	int3   
64002e65:	int3   
64002e66:	int3   
64002e67:	int3   
64002e68:	int3   
64002e69:	int3   
64002e6a:	int3   
64002e6b:	int3   
64002e6c:	int3   
64002e6d:	int3   
64002e6e:	int3   
64002e6f:	int3   
64002e70:	sub    esp,0x6c
64002e73:	mov    eax,ds:0x6402f09c
64002e78:	xor    eax,esp
64002e7a:	mov    DWORD PTR [esp+0x68],eax
64002e7e:	mov    eax,DWORD PTR [esp+0x74]
64002e82:	movzx  ecx,BYTE PTR [eax+0xf]
64002e86:	movzx  edx,BYTE PTR [eax+0xe]
64002e8a:	push   esi
64002e8b:	push   ecx
64002e8c:	movzx  ecx,BYTE PTR [eax+0xd]
64002e90:	push   edx
64002e91:	movzx  edx,BYTE PTR [eax+0xc]
64002e95:	push   ecx
64002e96:	movzx  ecx,BYTE PTR [eax+0xb]
64002e9a:	push   edx
64002e9b:	movzx  edx,BYTE PTR [eax+0xa]
64002e9f:	mov    esi,DWORD PTR [esp+0x84]
64002ea6:	push   ecx
64002ea7:	movzx  ecx,BYTE PTR [eax+0x9]
64002eab:	push   edx
64002eac:	movzx  edx,BYTE PTR [eax+0x8]
64002eb0:	push   ecx
64002eb1:	movzx  ecx,WORD PTR [eax+0x6]
64002eb5:	push   edx
64002eb6:	movzx  edx,WORD PTR [eax+0x4]
64002eba:	mov    eax,DWORD PTR [eax]
64002ebc:	push   ecx
64002ebd:	push   edx
64002ebe:	push   eax
64002ebf:	push   0x640286f4
64002ec4:	push   0x32
64002ec6:	push   0x6402871c
64002ecb:	mov    DWORD PTR [esp+0x3c],0x0
64002ed3:	call   0x64006840
64002ed8:	add    esp,0xc
64002edb:	push   eax
64002edc:	lea    ecx,[esp+0x38]
64002ee0:	push   0x64
64002ee2:	push   ecx
64002ee3:	call   0x64014ab6
64002ee8:	add    esp,0x38
64002eeb:	lea    edx,[esp+0x8]
64002eef:	push   edx
64002ef0:	mov    ecx,esi
64002ef2:	call   0x640065a0
64002ef7:	mov    ecx,DWORD PTR [esp+0x6c]
64002efb:	mov    eax,esi
64002efd:	pop    esi
64002efe:	xor    ecx,esp
64002f00:	call   0x64013f6c
64002f05:	add    esp,0x6c
64002f08:	ret    
64002f09:	int3   
64002f0a:	int3   
64002f0b:	int3   
64002f0c:	int3   
64002f0d:	int3   
64002f0e:	int3   
64002f0f:	int3   
64002f10:	push   0xffffffff
64002f12:	push   0x64024218
64002f17:	mov    eax,fs:0x0
64002f1d:	push   eax
64002f1e:	sub    esp,0x24
64002f21:	mov    eax,ds:0x6402f09c
64002f26:	xor    eax,esp
64002f28:	mov    DWORD PTR [esp+0x20],eax
64002f2c:	push   ebx
64002f2d:	push   ebp
64002f2e:	push   edi
64002f2f:	mov    eax,ds:0x6402f09c
64002f34:	xor    eax,esp
64002f36:	push   eax
64002f37:	lea    eax,[esp+0x34]
64002f3b:	mov    fs:0x0,eax
64002f41:	mov    DWORD PTR [esp+0x3c],0x0
64002f49:	call   DWORD PTR ds:0x6402f06c
64002f4f:	mov    eax,ds:0x64026be0
64002f54:	mov    ecx,DWORD PTR ds:0x64026be4
64002f5a:	mov    edx,DWORD PTR ds:0x64026be8
64002f60:	mov    DWORD PTR [esp+0x20],eax
64002f64:	mov    eax,ds:0x64026bec
64002f69:	mov    DWORD PTR [esp+0x2c],eax
64002f6d:	mov    eax,DWORD PTR [esp+0x44]
64002f71:	mov    DWORD PTR [esp+0x24],ecx
64002f75:	mov    DWORD PTR [esp+0x28],edx
64002f79:	cmp    DWORD PTR [eax-0xc],0x0
64002f7d:	jle    0x64002f9d
64002f7f:	lea    ebx,[esp+0x44]
64002f83:	call   0x64006770
64002f88:	mov    edi,ebx
64002f8a:	call   0x64007130
64002f8f:	call   0x640066f0
64002f94:	call   0x64007130
64002f99:	mov    eax,DWORD PTR [esp+0x44]
64002f9d:	cmp    DWORD PTR [eax-0x4],0x1
64002fa1:	jle    0x64002fb4
64002fa3:	mov    ecx,DWORD PTR [eax-0xc]
64002fa6:	push   ecx
64002fa7:	lea    ecx,[esp+0x48]
64002fab:	call   0x64001950
64002fb0:	mov    eax,DWORD PTR [esp+0x44]
64002fb4:	lea    edx,[esp+0x20]
64002fb8:	push   edx
64002fb9:	push   eax
64002fba:	call   DWORD PTR ds:0x640261ac
64002fc0:	test   eax,eax
64002fc2:	je     0x64002fe1
64002fc4:	mov    eax,ds:0x64026bec
64002fc9:	mov    edi,DWORD PTR ds:0x64026be0
64002fcf:	mov    ebx,DWORD PTR ds:0x64026be4
64002fd5:	mov    ebp,DWORD PTR ds:0x64026be8
64002fdb:	mov    DWORD PTR [esp+0x1c],eax
64002fdf:	jmp    0x64002ff5
64002fe1:	mov    edx,DWORD PTR [esp+0x2c]
64002fe5:	mov    edi,DWORD PTR [esp+0x20]
64002fe9:	mov    ebx,DWORD PTR [esp+0x24]
64002fed:	mov    ebp,DWORD PTR [esp+0x28]
64002ff1:	mov    DWORD PTR [esp+0x1c],edx
64002ff5:	mov    DWORD PTR [esp+0x3c],0xffffffff
64002ffd:	mov    eax,DWORD PTR [esp+0x44]
64003001:	add    eax,0xfffffff0
64003004:	or     edx,0xffffffff
64003007:	lea    ecx,[eax+0xc]
6400300a:	lock xadd DWORD PTR [ecx],edx
6400300e:	dec    edx
6400300f:	test   edx,edx
64003011:	jg     0x6400301d
64003013:	mov    ecx,DWORD PTR [eax]
64003015:	mov    edx,DWORD PTR [ecx]
64003017:	push   eax
64003018:	mov    eax,DWORD PTR [edx+0x4]
6400301b:	call   eax
6400301d:	mov    ecx,DWORD PTR [esp+0x1c]
64003021:	mov    DWORD PTR [esi],edi
64003023:	mov    DWORD PTR [esi+0x4],ebx
64003026:	mov    DWORD PTR [esi+0x8],ebp
64003029:	mov    eax,esi
6400302b:	mov    DWORD PTR [esi+0xc],ecx
6400302e:	mov    ecx,DWORD PTR [esp+0x34]
64003032:	mov    DWORD PTR fs:0x0,ecx
64003039:	pop    ecx
6400303a:	pop    edi
6400303b:	pop    ebp
6400303c:	pop    ebx
6400303d:	mov    ecx,DWORD PTR [esp+0x20]
64003041:	xor    ecx,esp
64003043:	call   0x64013f6c
64003048:	add    esp,0x30
6400304b:	ret    
6400304c:	int3   
6400304d:	int3   
6400304e:	int3   
6400304f:	int3   
64003050:	push   ebp
64003051:	mov    ebp,esp
64003053:	sub    esp,0x18
64003056:	mov    eax,ds:0x6402f09c
6400305b:	xor    eax,ebp
6400305d:	mov    DWORD PTR [ebp-0x4],eax
64003060:	mov    eax,DWORD PTR [ebp+0x8]
64003063:	push   ebx
64003064:	push   esi
64003065:	push   edi
64003066:	mov    DWORD PTR [ebp-0x14],eax
64003069:	mov    DWORD PTR [ebp-0x18],0x0
64003070:	call   DWORD PTR ds:0x6402f06c
64003076:	movzx  ecx,BYTE PTR [ebp+0xc]
6400307a:	push   ecx
6400307b:	push   0x64028750
64003080:	push   0x6
64003082:	push   0x64028778
64003087:	mov    ebx,eax
64003089:	call   0x64006840
6400308e:	add    esp,0xc
64003091:	push   eax
64003092:	lea    edx,[ebp-0x10]
64003095:	push   edx
64003096:	call   0x64014a3b
6400309b:	add    esp,0xc
6400309e:	lea    eax,[ebp-0x10]
640030a1:	push   eax
640030a2:	call   DWORD PTR ds:0x64026058
640030a8:	mov    esi,eax
640030aa:	add    esi,0x1
640030ad:	cmp    esi,0x3fffffff
640030b3:	jg     0x640030e1
640030b5:	lea    eax,[esi+esi*1]
640030b8:	call   0x640146f0
640030bd:	mov    edi,esp
640030bf:	test   edi,edi
640030c1:	je     0x640030e1
640030c3:	push   esi
640030c4:	push   edi
640030c5:	push   0xffffffff
640030c7:	lea    ecx,[ebp-0x10]
640030ca:	push   ecx
640030cb:	push   0x0
640030cd:	push   ebx
640030ce:	mov    WORD PTR [edi],0x0
640030d3:	call   DWORD PTR ds:0x64026024
640030d9:	neg    eax
640030db:	sbb    eax,eax
640030dd:	and    eax,edi
640030df:	jmp    0x640030e3
640030e1:	xor    eax,eax
640030e3:	mov    esi,DWORD PTR [ebp-0x14]
640030e6:	push   eax
640030e7:	mov    ecx,esi
640030e9:	call   0x64002550
640030ee:	mov    eax,esi
640030f0:	lea    esp,[ebp-0x24]
640030f3:	pop    edi
640030f4:	pop    esi
640030f5:	pop    ebx
640030f6:	mov    ecx,DWORD PTR [ebp-0x4]
640030f9:	xor    ecx,ebp
640030fb:	call   0x64013f6c
64003100:	mov    esp,ebp
64003102:	pop    ebp
64003103:	ret    
64003104:	int3   
64003105:	int3   
64003106:	int3   
64003107:	int3   
64003108:	int3   
64003109:	int3   
6400310a:	int3   
6400310b:	int3   
6400310c:	int3   
6400310d:	int3   
6400310e:	int3   
6400310f:	int3   
64003110:	push   0xffffffff
64003112:	push   0x640252a9
64003117:	mov    eax,fs:0x0
6400311d:	push   eax
6400311e:	sub    esp,0x20
64003121:	push   ebx
64003122:	push   ebp
64003123:	push   esi
64003124:	push   edi
64003125:	mov    eax,ds:0x6402f09c
6400312a:	xor    eax,esp
6400312c:	push   eax
6400312d:	lea    eax,[esp+0x34]
64003131:	mov    fs:0x0,eax
64003137:	xor    ebx,ebx
64003139:	mov    DWORD PTR [esp+0x3c],ebx
6400313d:	mov    DWORD PTR [esp+0x18],ebx
64003141:	mov    eax,ds:0x64030540
64003146:	mov    edx,DWORD PTR [eax+0xc]
64003149:	mov    ecx,0x64030540
6400314e:	call   edx
64003150:	mov    edi,DWORD PTR [esp+0x44]
64003154:	add    eax,0x10
64003157:	mov    DWORD PTR [edi],eax
64003159:	mov    esi,DWORD PTR [esp+0x48]
6400315d:	mov    DWORD PTR [esp+0x3c],ebx
64003161:	mov    eax,DWORD PTR [esi]
64003163:	mov    ecx,0x1
64003168:	sub    eax,0x10
6400316b:	cmp    DWORD PTR [eax+0xc],ecx
6400316e:	mov    DWORD PTR [esp+0x18],ecx
64003172:	jle    0x6400317f
64003174:	mov    eax,DWORD PTR [eax+0x4]
64003177:	push   eax
64003178:	mov    ecx,esi
6400317a:	call   0x64001950
6400317f:	mov    ebp,DWORD PTR [esi]
64003181:	movzx  eax,WORD PTR [ebp+0x0]
64003185:	cmp    ax,bx
64003188:	je     0x64003429
6400318e:	cmp    ax,0x41
64003192:	jb     0x6400319e
64003194:	cmp    ax,0x5a
64003198:	jbe    0x640033cf
6400319e:	cmp    ax,0x61
640031a2:	jb     0x640031ae
640031a4:	cmp    ax,0x7a
640031a8:	jbe    0x640033cf
640031ae:	cmp    ax,0x30
640031b2:	jb     0x640031c9
640031b4:	cmp    ax,0x39
640031b8:	ja     0x640031c9
640031ba:	movzx  ecx,BYTE PTR [ebp+0x0]
640031be:	push   ecx
640031bf:	call   0x64006630
640031c4:	jmp    0x64003419
640031c9:	cmp    ax,0x20
640031cd:	jne    0x6400321b
640031cf:	mov    eax,DWORD PTR [edi]
640031d1:	mov    ebx,DWORD PTR [eax-0xc]
640031d4:	mov    ecx,0x1
640031d9:	sub    ecx,DWORD PTR [eax-0x4]
640031dc:	mov    eax,DWORD PTR [eax-0x8]
640031df:	lea    esi,[ebx+0x1]
640031e2:	sub    eax,esi
640031e4:	or     eax,ecx
640031e6:	jge    0x640031f0
640031e8:	push   esi
640031e9:	mov    ecx,edi
640031eb:	call   0x64001e00
640031f0:	test   esi,esi
640031f2:	mov    eax,DWORD PTR [edi]
640031f4:	mov    WORD PTR [eax+ebx*2],0x2b
640031fa:	jl     0x6400343f
64003200:	mov    eax,DWORD PTR [edi]
64003202:	cmp    esi,DWORD PTR [eax-0x8]
64003205:	jg     0x6400343f
6400320b:	mov    DWORD PTR [eax-0xc],esi
6400320e:	mov    edx,DWORD PTR [edi]
64003210:	mov    WORD PTR [edx+esi*2],0x0
64003216:	jmp    0x64003419
6400321b:	cmp    ax,0x2d
6400321f:	je     0x640033cf
64003225:	cmp    ax,0x5f
64003229:	je     0x640033cf
6400322f:	cmp    ax,0x2e
64003233:	je     0x640033cf
64003239:	cmp    ax,0x21
6400323d:	je     0x640033cf
64003243:	cmp    ax,0x7e
64003247:	je     0x640033cf
6400324d:	cmp    ax,0x2a
64003251:	je     0x640033cf
64003257:	cmp    ax,0x27
6400325b:	je     0x640033cf
64003261:	cmp    ax,0x28
64003265:	je     0x640033cf
6400326b:	cmp    ax,0x29
6400326f:	je     0x640033cf
64003275:	cmp    ax,0x7f
64003279:	ja     0x640032b0
6400327b:	movzx  eax,BYTE PTR [ebp+0x0]
6400327f:	push   eax
64003280:	lea    ecx,[esp+0x20]
64003284:	push   ecx
64003285:	call   0x64003050
6400328a:	add    esp,0x8
6400328d:	push   eax
6400328e:	mov    ecx,edi
64003290:	mov    DWORD PTR [esp+0x40],0x1
64003298:	call   0x64002600
6400329d:	lea    ecx,[esp+0x1c]
640032a1:	mov    BYTE PTR [esp+0x3c],0x0
640032a6:	call   0x64001680
640032ab:	jmp    0x64003419
640032b0:	cmp    ax,0x7ff
640032b4:	ja     0x64003325
640032b6:	shr    eax,0x6
640032b9:	or     eax,0xffffffc0
640032bc:	push   eax
640032bd:	lea    edx,[esp+0x24]
640032c1:	push   edx
640032c2:	call   0x64003050
640032c7:	add    esp,0x8
640032ca:	push   eax
640032cb:	mov    ecx,edi
640032cd:	mov    DWORD PTR [esp+0x40],0x2
640032d5:	call   0x64002600
640032da:	lea    ecx,[esp+0x20]
640032de:	mov    BYTE PTR [esp+0x3c],0x0
640032e3:	call   0x64001680
640032e8:	movzx  eax,BYTE PTR [ebp+0x0]
640032ec:	and    eax,0xffffff3f
640032f1:	or     eax,0xffffff80
640032f4:	push   eax
640032f5:	lea    ecx,[esp+0x28]
640032f9:	push   ecx
640032fa:	call   0x64003050
640032ff:	add    esp,0x8
64003302:	push   eax
64003303:	mov    ecx,edi
64003305:	mov    DWORD PTR [esp+0x40],0x3
6400330d:	call   0x64002600
64003312:	lea    ecx,[esp+0x24]
64003316:	mov    BYTE PTR [esp+0x3c],0x0
6400331b:	call   0x64001680
64003320:	jmp    0x64003419
64003325:	shr    ax,0xc
64003329:	lea    edx,[esp+0x28]
6400332d:	or     eax,0xffffffe0
64003330:	push   eax
64003331:	push   edx
64003332:	call   0x64003050
64003337:	add    esp,0x8
6400333a:	push   eax
6400333b:	mov    ecx,edi
6400333d:	mov    DWORD PTR [esp+0x40],0x4
64003345:	call   0x64002600
6400334a:	lea    ecx,[esp+0x28]
6400334e:	mov    BYTE PTR [esp+0x3c],0x0
64003353:	call   0x64001680
64003358:	movzx  eax,WORD PTR [ebp+0x0]
6400335c:	shr    ax,0x6
64003360:	lea    ecx,[esp+0x2c]
64003364:	and    eax,0xffffff3f
64003369:	or     eax,0xffffff80
6400336c:	push   eax
6400336d:	push   ecx
6400336e:	call   0x64003050
64003373:	add    esp,0x8
64003376:	push   eax
64003377:	mov    ecx,edi
64003379:	mov    DWORD PTR [esp+0x40],0x5
64003381:	call   0x64002600
64003386:	lea    ecx,[esp+0x2c]
6400338a:	mov    BYTE PTR [esp+0x3c],0x0
6400338f:	call   0x64001680
64003394:	movzx  edx,BYTE PTR [ebp+0x0]
64003398:	and    edx,0xffffff3f
6400339e:	or     edx,0xffffff80
640033a1:	push   edx
640033a2:	lea    eax,[esp+0x34]
640033a6:	push   eax
640033a7:	call   0x64003050
640033ac:	add    esp,0x8
640033af:	push   eax
640033b0:	mov    ecx,edi
640033b2:	mov    DWORD PTR [esp+0x40],0x6
640033ba:	call   0x64002600
640033bf:	lea    ecx,[esp+0x30]
640033c3:	mov    BYTE PTR [esp+0x3c],0x0
640033c8:	call   0x64001680
640033cd:	jmp    0x64003419
640033cf:	mov    cl,BYTE PTR [ebp+0x0]
640033d2:	mov    eax,DWORD PTR [edi]
640033d4:	mov    ebx,DWORD PTR [eax-0xc]
640033d7:	mov    BYTE PTR [esp+0x14],cl
640033db:	mov    ecx,0x1
640033e0:	sub    ecx,DWORD PTR [eax-0x4]
640033e3:	mov    eax,DWORD PTR [eax-0x8]
640033e6:	lea    esi,[ebx+0x1]
640033e9:	sub    eax,esi
640033eb:	or     eax,ecx
640033ed:	jge    0x640033f7
640033ef:	push   esi
640033f0:	mov    ecx,edi
640033f2:	call   0x64001e00
640033f7:	test   esi,esi
640033f9:	movsx  dx,BYTE PTR [esp+0x14]
640033ff:	mov    eax,DWORD PTR [edi]
64003401:	mov    WORD PTR [eax+ebx*2],dx
64003405:	jl     0x6400343f
64003407:	mov    eax,DWORD PTR [edi]
64003409:	cmp    esi,DWORD PTR [eax-0x8]
6400340c:	jg     0x6400343f
6400340e:	mov    DWORD PTR [eax-0xc],esi
64003411:	mov    eax,DWORD PTR [edi]
64003413:	mov    WORD PTR [eax+esi*2],0x0
64003419:	movzx  eax,WORD PTR [ebp+0x2]
6400341d:	add    ebp,0x2
64003420:	test   ax,ax
64003423:	jne    0x6400318e
64003429:	mov    eax,edi
6400342b:	mov    ecx,DWORD PTR [esp+0x34]
6400342f:	mov    DWORD PTR fs:0x0,ecx
64003436:	pop    ecx
64003437:	pop    edi
64003438:	pop    esi
64003439:	pop    ebp
6400343a:	pop    ebx
6400343b:	add    esp,0x2c
6400343e:	ret    
6400343f:	push   0x80070057
64003444:	call   0x64001040
64003449:	int3   
6400344a:	int3   
6400344b:	int3   
6400344c:	int3   
6400344d:	int3   
6400344e:	int3   
6400344f:	int3   
64003450:	push   0xffffffff
64003452:	push   0x64024da9
64003457:	mov    eax,fs:0x0
6400345d:	push   eax
6400345e:	sub    esp,0x48
64003461:	push   ebx
64003462:	push   esi
64003463:	push   edi
64003464:	mov    eax,ds:0x6402f09c
64003469:	xor    eax,esp
6400346b:	push   eax
6400346c:	lea    eax,[esp+0x58]
64003470:	mov    fs:0x0,eax
64003476:	xor    ebx,ebx
64003478:	mov    DWORD PTR [esp+0x60],ebx
6400347c:	mov    DWORD PTR [esp+0x10],ebx
64003480:	mov    eax,ds:0x64030540
64003485:	mov    edx,DWORD PTR [eax+0xc]
64003488:	mov    ecx,0x64030540
6400348d:	call   edx
6400348f:	mov    edi,DWORD PTR [esp+0x68]
64003493:	add    eax,0x10
64003496:	mov    DWORD PTR [edi],eax
64003498:	mov    DWORD PTR [esp+0x60],ebx
6400349c:	mov    ecx,0x1
640034a1:	sub    ecx,DWORD PTR [eax-0x4]
640034a4:	mov    eax,DWORD PTR [eax-0x8]
640034a7:	sub    eax,0x800
640034ac:	cmp    BYTE PTR [esp+0x6c],bl
640034b0:	mov    DWORD PTR [esp+0x10],0x1
640034b8:	je     0x6400354b
640034be:	or     eax,ecx
640034c0:	jge    0x640034ce
640034c2:	push   0x800
640034c7:	mov    ecx,edi
640034c9:	call   0x64001e00
640034ce:	mov    eax,DWORD PTR [edi]
640034d0:	push   0x800
640034d5:	push   eax
640034d6:	call   0x6400e620
640034db:	call   eax
640034dd:	test   eax,eax
640034df:	jne    0x640035d2
640034e5:	push   0x64028780
640034ea:	push   0x22
640034ec:	push   0x640287b4
640034f1:	call   0x64006840
640034f6:	mov    ecx,eax
640034f8:	add    esp,0xc
640034fb:	mov    DWORD PTR [esp+0x2c],0xf
64003503:	mov    DWORD PTR [esp+0x28],ebx
64003507:	mov    BYTE PTR [esp+0x18],bl
6400350b:	lea    esi,[ecx+0x1]
6400350e:	mov    edi,edi
64003510:	mov    dl,BYTE PTR [ecx]
64003512:	add    ecx,0x1
64003515:	cmp    dl,bl
64003517:	jne    0x64003510
64003519:	sub    ecx,esi
6400351b:	push   ecx
6400351c:	push   eax
6400351d:	lea    ecx,[esp+0x1c]
64003521:	call   0x64001880
64003526:	lea    eax,[esp+0x14]
6400352a:	push   eax
6400352b:	lea    ecx,[esp+0x34]
6400352f:	mov    DWORD PTR [esp+0x64],0x1
64003537:	call   0x64002020
6400353c:	push   0x6402c8ac
64003541:	lea    ecx,[esp+0x34]
64003545:	push   ecx
64003546:	call   0x64013b5b
6400354b:	or     eax,ecx
6400354d:	jge    0x6400355b
6400354f:	push   0x800
64003554:	mov    ecx,edi
64003556:	call   0x64001e00
6400355b:	mov    eax,DWORD PTR [edi]
6400355d:	push   0x800
64003562:	push   eax
64003563:	call   0x6400de40
64003568:	call   eax
6400356a:	test   eax,eax
6400356c:	jne    0x640035d2
6400356e:	push   0x640287d8
64003573:	push   0x1c
64003575:	push   0x64028814
6400357a:	call   0x64006840
6400357f:	mov    ecx,eax
64003581:	add    esp,0xc
64003584:	mov    DWORD PTR [esp+0x2c],0xf
6400358c:	mov    DWORD PTR [esp+0x28],ebx
64003590:	mov    BYTE PTR [esp+0x18],bl
64003594:	lea    esi,[ecx+0x1]
64003597:	mov    dl,BYTE PTR [ecx]
64003599:	add    ecx,0x1
6400359c:	cmp    dl,bl
6400359e:	jne    0x64003597
640035a0:	sub    ecx,esi
640035a2:	push   ecx
640035a3:	push   eax
640035a4:	lea    ecx,[esp+0x1c]
640035a8:	call   0x64001880
640035ad:	lea    edx,[esp+0x14]
640035b1:	push   edx
640035b2:	lea    ecx,[esp+0x34]
640035b6:	mov    DWORD PTR [esp+0x64],0x2
640035be:	call   0x64002020
640035c3:	push   0x6402c8ac
640035c8:	lea    eax,[esp+0x34]
640035cc:	push   eax
640035cd:	call   0x64013b5b
640035d2:	mov    edx,DWORD PTR [edi]
640035d4:	cmp    edx,ebx
640035d6:	jne    0x640035dc
640035d8:	xor    eax,eax
640035da:	jmp    0x640035f2
640035dc:	mov    eax,edx
640035de:	lea    esi,[eax+0x2]
640035e1:	mov    cx,WORD PTR [eax]
640035e4:	add    eax,0x2
640035e7:	cmp    cx,bx
640035ea:	jne    0x640035e1
640035ec:	sub    eax,esi
640035ee:	sar    eax,1
640035f0:	js     0x64003634
640035f2:	cmp    eax,DWORD PTR [edx-0x8]
640035f5:	jg     0x64003634
640035f7:	mov    DWORD PTR [edx-0xc],eax
640035fa:	mov    ecx,DWORD PTR [edi]
640035fc:	mov    WORD PTR [ecx+eax*2],bx
64003600:	mov    ecx,DWORD PTR [edi]
64003602:	mov    edx,DWORD PTR [ecx-0xc]
64003605:	lea    eax,[edx-0x1]
64003608:	cmp    eax,ebx
6400360a:	jl     0x64003634
6400360c:	cmp    eax,edx
6400360e:	jg     0x64003634
64003610:	movzx  eax,WORD PTR [ecx+eax*2]
64003614:	cmp    ax,0x5c
64003618:	je     0x6400361f
6400361a:	call   0x64006690
6400361f:	mov    eax,edi
64003621:	mov    ecx,DWORD PTR [esp+0x58]
64003625:	mov    DWORD PTR fs:0x0,ecx
6400362c:	pop    ecx
6400362d:	pop    edi
6400362e:	pop    esi
6400362f:	pop    ebx
64003630:	add    esp,0x54
64003633:	ret    
64003634:	push   0x80070057
64003639:	call   0x64001040
6400363e:	int3   
6400363f:	int3   
64003640:	push   0xffffffff
64003642:	push   0x64025241
64003647:	mov    eax,fs:0x0
6400364d:	push   eax
6400364e:	sub    esp,0x48
64003651:	push   ebx
64003652:	push   ebp
64003653:	push   esi
64003654:	push   edi
64003655:	mov    eax,ds:0x6402f09c
6400365a:	xor    eax,esp
6400365c:	push   eax
6400365d:	lea    eax,[esp+0x5c]
64003661:	mov    fs:0x0,eax
64003667:	mov    esi,DWORD PTR [esp+0x6c]
6400366b:	xor    ebx,ebx
6400366d:	push   ebx
6400366e:	mov    DWORD PTR [esp+0x68],ebx
64003672:	push   esi
64003673:	mov    DWORD PTR [esp+0x1c],ebx
64003677:	call   0x64003450
6400367c:	add    esp,0x8
6400367f:	mov    DWORD PTR [esp+0x64],ebx
64003683:	mov    eax,DWORD PTR [esi]
64003685:	mov    ebp,0x1
6400368a:	sub    eax,0x10
6400368d:	cmp    DWORD PTR [eax+0xc],ebp
64003690:	mov    DWORD PTR [esp+0x14],ebp
64003694:	jle    0x640036a1
64003696:	mov    eax,DWORD PTR [eax+0x4]
64003699:	push   eax
6400369a:	mov    ecx,esi
6400369c:	call   0x64001950
640036a1:	mov    eax,DWORD PTR [esi]
640036a3:	push   0x5c
640036a5:	push   eax
640036a6:	call   0x64014b37
640036ab:	mov    edi,eax
640036ad:	add    esp,0x8
640036b0:	cmp    edi,ebx
640036b2:	jne    0x64003716
640036b4:	push   0x64028834
640036b9:	push   0x18
640036bb:	push   0x64028858
640036c0:	call   0x64006840
640036c5:	mov    ecx,eax
640036c7:	add    esp,0xc
640036ca:	mov    DWORD PTR [esp+0x30],0xf
640036d2:	mov    DWORD PTR [esp+0x2c],ebx
640036d6:	mov    BYTE PTR [esp+0x1c],bl
640036da:	lea    esi,[ecx+0x1]
640036dd:	lea    ecx,[ecx+0x0]
640036e0:	mov    dl,BYTE PTR [ecx]
640036e2:	add    ecx,ebp
640036e4:	cmp    dl,bl
640036e6:	jne    0x640036e0
640036e8:	sub    ecx,esi
640036ea:	push   ecx
640036eb:	push   eax
640036ec:	lea    ecx,[esp+0x20]
640036f0:	call   0x64001880
640036f5:	lea    ecx,[esp+0x18]
640036f9:	push   ecx
640036fa:	lea    ecx,[esp+0x38]
640036fe:	mov    DWORD PTR [esp+0x68],ebp
64003702:	call   0x64002020
64003707:	push   0x6402c8ac
6400370c:	lea    edx,[esp+0x38]
64003710:	push   edx
64003711:	call   0x64013b5b
64003716:	mov    eax,DWORD PTR [esi]
64003718:	sub    eax,0x10
6400371b:	cmp    DWORD PTR [eax+0xc],ebp
6400371e:	jle    0x6400372b
64003720:	mov    eax,DWORD PTR [eax+0x4]
64003723:	push   eax
64003724:	mov    ecx,esi
64003726:	call   0x64001950
6400372b:	mov    ecx,DWORD PTR [esi]
6400372d:	sub    edi,ecx
6400372f:	sar    edi,1
64003731:	add    edi,ebp
64003733:	cmp    ecx,ebx
64003735:	jne    0x6400373b
64003737:	xor    eax,eax
64003739:	jmp    0x64003756
6400373b:	mov    eax,ecx
6400373d:	lea    ebp,[eax+0x2]
64003740:	mov    dx,WORD PTR [eax]
64003743:	add    eax,0x2
64003746:	cmp    dx,bx
64003749:	jne    0x64003740
6400374b:	sub    eax,ebp
6400374d:	sar    eax,1
6400374f:	js     0x640037a9
64003751:	mov    ebp,0x1
64003756:	cmp    eax,DWORD PTR [ecx-0x8]
64003759:	jg     0x640037a9
6400375b:	mov    DWORD PTR [ecx-0xc],eax
6400375e:	mov    ecx,DWORD PTR [esi]
64003760:	mov    WORD PTR [ecx+eax*2],bx
64003764:	mov    eax,DWORD PTR [esi]
64003766:	sub    eax,0x10
64003769:	mov    ecx,ebp
6400376b:	sub    ecx,DWORD PTR [eax+0xc]
6400376e:	mov    eax,DWORD PTR [eax+0x8]
64003771:	sub    eax,edi
64003773:	or     eax,ecx
64003775:	jge    0x6400377f
64003777:	push   edi
64003778:	mov    ecx,esi
6400377a:	call   0x64001e00
6400377f:	cmp    edi,ebx
64003781:	jl     0x640037a9
64003783:	mov    eax,DWORD PTR [esi]
64003785:	cmp    edi,DWORD PTR [eax-0x8]
64003788:	jg     0x640037a9
6400378a:	mov    DWORD PTR [eax-0xc],edi
6400378d:	mov    edx,DWORD PTR [esi]
6400378f:	mov    WORD PTR [edx+edi*2],bx
64003793:	mov    eax,esi
64003795:	mov    ecx,DWORD PTR [esp+0x5c]
64003799:	mov    DWORD PTR fs:0x0,ecx
640037a0:	pop    ecx
640037a1:	pop    edi
640037a2:	pop    esi
640037a3:	pop    ebp
640037a4:	pop    ebx
640037a5:	add    esp,0x54
640037a8:	ret    
640037a9:	push   0x80070057
640037ae:	call   0x64001040
640037b3:	int3   
640037b4:	int3   
640037b5:	int3   
640037b6:	int3   
640037b7:	int3   
640037b8:	int3   
640037b9:	int3   
640037ba:	int3   
640037bb:	int3   
640037bc:	int3   
640037bd:	int3   
640037be:	int3   
640037bf:	int3   
640037c0:	push   ebp
640037c1:	lea    ebp,[esp-0x78]
640037c5:	sub    esp,0x78
640037c8:	push   0xffffffff
640037ca:	push   0x64025359
640037cf:	mov    eax,fs:0x0
640037d5:	push   eax
640037d6:	sub    esp,0xb4
640037dc:	mov    eax,ds:0x6402f09c
640037e1:	xor    eax,ebp
640037e3:	mov    DWORD PTR [ebp+0x74],eax
640037e6:	push   ebx
640037e7:	push   esi
640037e8:	push   edi
640037e9:	push   eax
640037ea:	lea    eax,[ebp-0xc]
640037ed:	mov    fs:0x0,eax
640037f3:	call   DWORD PTR ds:0x6402f06c
640037f9:	mov    ebx,eax
640037fb:	lea    eax,[ebp+0xc]
640037fe:	push   eax
640037ff:	call   0x64003640
64003804:	add    esp,0x4
64003807:	push   0x0
64003809:	push   0x0
6400380b:	lea    ecx,[ebp+0x0]
6400380e:	push   ecx
6400380f:	lea    edx,[ebp+0x4]
64003812:	push   edx
64003813:	lea    eax,[ebp+0x8]
64003816:	push   eax
64003817:	push   0x0
64003819:	mov    DWORD PTR [ebp-0x4],0x0
64003820:	mov    ecx,DWORD PTR [ebp+0xc]
64003823:	push   0x0
64003825:	push   ecx
64003826:	call   0x6400e540
6400382b:	call   eax
6400382d:	test   eax,eax
6400382f:	jne    0x64003940
64003835:	call   DWORD PTR ds:0x64026044
6400383b:	push   0xa
6400383d:	lea    edx,[ebp+0x10]
64003840:	push   edx
64003841:	push   eax
64003842:	call   0x64014b12
64003847:	mov    eax,DWORD PTR [ebp+0xc]
6400384a:	add    esp,0xc
6400384d:	test   eax,eax
6400384f:	mov    edi,eax
64003851:	je     0x6400387f
64003853:	push   eax
64003854:	call   DWORD PTR ds:0x64026054
6400385a:	add    eax,0x1
6400385d:	cmp    eax,0x3fffffff
64003862:	jle    0x64003868
64003864:	xor    edi,edi
64003866:	jmp    0x6400387f
64003868:	lea    esi,[eax+eax*1]
6400386b:	mov    eax,esi
6400386d:	call   0x640146f0
64003872:	mov    eax,esp
64003874:	push   ebx
64003875:	push   esi
64003876:	push   edi
64003877:	push   eax
64003878:	call   0x64002b40
6400387d:	mov    edi,eax
6400387f:	push   0x640288a4
64003884:	push   0x21
64003886:	push   0x640288d0
6400388b:	call   0x64006840
64003890:	mov    ecx,eax
64003892:	add    esp,0xc
64003895:	mov    DWORD PTR [ebp-0x10],0xf
6400389c:	mov    DWORD PTR [ebp-0x14],0x0
640038a3:	mov    BYTE PTR [ebp-0x24],0x0
640038a7:	lea    esi,[ecx+0x1]
640038aa:	lea    ebx,[ebx+0x0]
640038b0:	mov    dl,BYTE PTR [ecx]
640038b2:	add    ecx,0x1
640038b5:	test   dl,dl
640038b7:	jne    0x640038b0
640038b9:	sub    ecx,esi
640038bb:	push   ecx
640038bc:	push   eax
640038bd:	lea    ecx,[ebp-0x28]
640038c0:	call   0x64001880
640038c5:	lea    eax,[ebp-0x28]
640038c8:	push   eax
640038c9:	lea    esi,[ebp-0x6c]
640038cc:	mov    BYTE PTR [ebp-0x4],0x1
640038d0:	call   0x64009c80
640038d5:	mov    esi,eax
640038d7:	push   0x64028878
640038dc:	push   0x7
640038de:	push   0x6402889c
640038e3:	mov    BYTE PTR [ebp-0x4],0x2
640038e7:	call   0x64006840
640038ec:	push   esi
640038ed:	mov    edi,eax
640038ef:	lea    esi,[ebp-0x88]
640038f5:	call   0x64009c80
640038fa:	push   eax
640038fb:	lea    edi,[ebp+0x10]
640038fe:	lea    esi,[ebp-0xc0]
64003904:	mov    BYTE PTR [ebp-0x4],0x3
64003908:	call   0x64009c80
6400390d:	push   eax
6400390e:	mov    edi,0x64028874
64003913:	lea    esi,[ebp-0xa4]
64003919:	mov    BYTE PTR [ebp-0x4],0x4
6400391d:	call   0x64009c80
64003922:	add    esp,0x1c
64003925:	push   eax
64003926:	lea    ecx,[ebp-0x50]
64003929:	mov    BYTE PTR [ebp-0x4],0x5
6400392d:	call   0x64002020
64003932:	push   0x6402c8ac
64003937:	lea    ecx,[ebp-0x50]
6400393a:	push   ecx
6400393b:	call   0x64013b5b
64003940:	mov    esi,DWORD PTR [ebp+0x8]
64003943:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400394a:	mov    eax,DWORD PTR [ebp+0xc]
6400394d:	add    eax,0xfffffff0
64003950:	lea    edx,[eax+0xc]
64003953:	or     ecx,0xffffffff
64003956:	lock xadd DWORD PTR [edx],ecx
6400395a:	dec    ecx
6400395b:	test   ecx,ecx
6400395d:	jg     0x64003969
6400395f:	mov    ecx,DWORD PTR [eax]
64003961:	mov    edx,DWORD PTR [ecx]
64003963:	push   eax
64003964:	mov    eax,DWORD PTR [edx+0x4]
64003967:	call   eax
64003969:	mov    eax,esi
6400396b:	lea    esp,[ebp-0xd0]
64003971:	mov    ecx,DWORD PTR [ebp-0xc]
64003974:	mov    DWORD PTR fs:0x0,ecx
6400397b:	pop    ecx
6400397c:	pop    edi
6400397d:	pop    esi
6400397e:	pop    ebx
6400397f:	mov    ecx,DWORD PTR [ebp+0x74]
64003982:	xor    ecx,ebp
64003984:	call   0x64013f6c
64003989:	add    ebp,0x78
6400398c:	mov    esp,ebp
6400398e:	pop    ebp
6400398f:	ret    
64003990:	push   ebp
64003991:	mov    ebp,esp
64003993:	and    esp,0xfffffff8
64003996:	push   0xffffffff
64003998:	push   0x64024d46
6400399d:	mov    eax,fs:0x0
640039a3:	push   eax
640039a4:	sub    esp,0x840
640039aa:	mov    eax,ds:0x6402f09c
640039af:	xor    eax,esp
640039b1:	mov    DWORD PTR [esp+0x838],eax
640039b8:	push   ebx
640039b9:	push   esi
640039ba:	push   edi
640039bb:	mov    eax,ds:0x6402f09c
640039c0:	xor    eax,esp
640039c2:	push   eax
640039c3:	lea    eax,[esp+0x850]
640039ca:	mov    fs:0x0,eax
640039d0:	xor    eax,eax
640039d2:	xor    ebx,ebx
640039d4:	mov    DWORD PTR [esp+0x34],ebx
640039d8:	mov    DWORD PTR [esp+0x38],eax
640039dc:	mov    DWORD PTR [esp+0x3c],eax
640039e0:	mov    DWORD PTR [esp+0x40],eax
640039e4:	mov    DWORD PTR [esp+0x1c],ebx
640039e8:	push   0x640288f4
640039ed:	push   0x1f
640039ef:	push   0x64028930
640039f4:	mov    DWORD PTR [esp+0x864],ebx
640039fb:	call   0x64006b30
64003a00:	add    esp,0xc
64003a03:	lea    ecx,[esp+0x18]
64003a07:	push   ecx
64003a08:	push   0x20019
64003a0d:	push   ebx
64003a0e:	push   eax
64003a0f:	push   0x80000002
64003a14:	mov    DWORD PTR [esp+0x2c],ebx
64003a18:	call   DWORD PTR ds:0x64026004
64003a1e:	cmp    eax,ebx
64003a20:	jne    0x64003a97
64003a22:	mov    edx,DWORD PTR [esp+0x18]
64003a26:	push   0x64028970
64003a2b:	push   0xb
64003a2d:	push   0x640289ac
64003a32:	mov    DWORD PTR [esp+0x28],edx
64003a36:	mov    DWORD PTR [esp+0x2c],0x400
64003a3e:	call   0x64006b30
64003a43:	add    esp,0xc
64003a46:	push   eax
64003a47:	lea    eax,[esp+0x20]
64003a4b:	push   eax
64003a4c:	lea    edi,[esp+0x28]
64003a50:	lea    esi,[esp+0x4c]
64003a54:	call   0x64002ba0
64003a59:	test   eax,eax
64003a5b:	je     0x64003aba
64003a5d:	mov    eax,DWORD PTR [esp+0x18]
64003a61:	test   eax,eax
64003a63:	mov    ecx,DWORD PTR [esp+0x40]
64003a67:	mov    esi,DWORD PTR [esp+0x34]
64003a6b:	mov    edi,DWORD PTR [esp+0x38]
64003a6f:	mov    ebx,DWORD PTR [esp+0x3c]
64003a73:	mov    DWORD PTR [esp+0x30],ecx
64003a77:	je     0x64003a80
64003a79:	push   eax
64003a7a:	call   DWORD PTR ds:0x64026000
64003a80:	mov    eax,DWORD PTR [ebp+0x8]
64003a83:	mov    edx,DWORD PTR [esp+0x30]
64003a87:	mov    DWORD PTR [eax],esi
64003a89:	mov    DWORD PTR [eax+0x4],edi
64003a8c:	mov    DWORD PTR [eax+0x8],ebx
64003a8f:	mov    DWORD PTR [eax+0xc],edx
64003a92:	jmp    0x64003b89
64003a97:	mov    eax,DWORD PTR [ebp+0x8]
64003a9a:	mov    ecx,DWORD PTR [esp+0x34]
64003a9e:	mov    edx,DWORD PTR [esp+0x38]
64003aa2:	mov    DWORD PTR [eax],ecx
64003aa4:	mov    ecx,DWORD PTR [esp+0x3c]
64003aa8:	mov    DWORD PTR [eax+0x4],edx
64003aab:	mov    edx,DWORD PTR [esp+0x40]
64003aaf:	mov    DWORD PTR [eax+0x8],ecx
64003ab2:	mov    DWORD PTR [eax+0xc],edx
64003ab5:	jmp    0x64003b89
64003aba:	push   0x640289c4
64003abf:	lea    ecx,[esp+0x18]
64003ac3:	call   0x64002550
64003ac8:	lea    eax,[esp+0x44]
64003acc:	mov    BYTE PTR [esp+0x858],0x1
64003ad4:	lea    edx,[eax+0x2]
64003ad7:	mov    cx,WORD PTR [eax]
64003ada:	add    eax,0x2
64003add:	cmp    cx,bx
64003ae0:	jne    0x64003ad7
64003ae2:	sub    eax,edx
64003ae4:	sar    eax,1
64003ae6:	push   eax
64003ae7:	lea    eax,[esp+0x48]
64003aeb:	push   eax
64003aec:	lea    ecx,[esp+0x1c]
64003af0:	call   0x640029a0
64003af5:	push   0x1
64003af7:	push   0x640289c8
64003afc:	lea    ecx,[esp+0x1c]
64003b00:	call   0x640029a0
64003b05:	mov    eax,DWORD PTR [esp+0x14]
64003b09:	cmp    DWORD PTR [eax-0x4],0x1
64003b0d:	jle    0x64003b20
64003b0f:	mov    ecx,DWORD PTR [eax-0xc]
64003b12:	push   ecx
64003b13:	lea    ecx,[esp+0x18]
64003b17:	call   0x64001950
64003b1c:	mov    eax,DWORD PTR [esp+0x14]
64003b20:	lea    edx,[esp+0x34]
64003b24:	push   edx
64003b25:	push   eax
64003b26:	call   DWORD PTR ds:0x640261d8
64003b2c:	mov    eax,DWORD PTR [esp+0x40]
64003b30:	mov    esi,DWORD PTR [esp+0x34]
64003b34:	mov    edi,DWORD PTR [esp+0x38]
64003b38:	mov    ebx,DWORD PTR [esp+0x3c]
64003b3c:	mov    DWORD PTR [esp+0x30],eax
64003b40:	mov    BYTE PTR [esp+0x858],0x0
64003b48:	mov    eax,DWORD PTR [esp+0x14]
64003b4c:	add    eax,0xfffffff0
64003b4f:	lea    ecx,[eax+0xc]
64003b52:	or     edx,0xffffffff
64003b55:	lock xadd DWORD PTR [ecx],edx
64003b59:	dec    edx
64003b5a:	test   edx,edx
64003b5c:	jg     0x64003b68
64003b5e:	mov    ecx,DWORD PTR [eax]
64003b60:	mov    edx,DWORD PTR [ecx]
64003b62:	push   eax
64003b63:	mov    eax,DWORD PTR [edx+0x4]
64003b66:	call   eax
64003b68:	mov    eax,DWORD PTR [esp+0x18]
64003b6c:	test   eax,eax
64003b6e:	je     0x64003b77
64003b70:	push   eax
64003b71:	call   DWORD PTR ds:0x64026000
64003b77:	mov    eax,DWORD PTR [ebp+0x8]
64003b7a:	mov    ecx,DWORD PTR [esp+0x30]
64003b7e:	mov    DWORD PTR [eax],esi
64003b80:	mov    DWORD PTR [eax+0x4],edi
64003b83:	mov    DWORD PTR [eax+0x8],ebx
64003b86:	mov    DWORD PTR [eax+0xc],ecx
64003b89:	mov    ecx,DWORD PTR [esp+0x850]
64003b90:	mov    DWORD PTR fs:0x0,ecx
64003b97:	pop    ecx
64003b98:	pop    edi
64003b99:	pop    esi
64003b9a:	pop    ebx
64003b9b:	mov    ecx,DWORD PTR [esp+0x838]
64003ba2:	xor    ecx,esp
64003ba4:	call   0x64013f6c
64003ba9:	mov    esp,ebp
64003bab:	pop    ebp
64003bac:	ret    
64003bad:	int3   
64003bae:	int3   
64003baf:	int3   
64003bb0:	push   ebp
64003bb1:	mov    ebp,esp
64003bb3:	and    esp,0xfffffff8
64003bb6:	push   0xffffffff
64003bb8:	push   0x64024cf4
64003bbd:	mov    eax,fs:0x0
64003bc3:	push   eax
64003bc4:	sub    esp,0x460
64003bca:	mov    eax,ds:0x6402f09c
64003bcf:	xor    eax,esp
64003bd1:	mov    DWORD PTR [esp+0x458],eax
64003bd8:	push   ebx
64003bd9:	push   esi
64003bda:	push   edi
64003bdb:	mov    eax,ds:0x6402f09c
64003be0:	xor    eax,esp
64003be2:	push   eax
64003be3:	lea    eax,[esp+0x470]
64003bea:	mov    fs:0x0,eax
64003bf0:	mov    eax,DWORD PTR [ebp+0x8]
64003bf3:	xor    ebx,ebx
64003bf5:	test   BYTE PTR ds:0x640334c0,0x1
64003bfc:	mov    esi,ecx
64003bfe:	mov    DWORD PTR [esp+0x18],eax
64003c02:	mov    DWORD PTR [esp+0x14],esi
64003c06:	mov    DWORD PTR [esp+0x38],ebx
64003c0a:	jne    0x64003c5d
64003c0c:	or     DWORD PTR ds:0x640334c0,0x1
64003c13:	mov    DWORD PTR [esp+0x478],ebx
64003c1a:	call   0x64008200
64003c1f:	mov    ds:0x640334b8,eax
64003c24:	mov    BYTE PTR [eax+0x29],0x1
64003c28:	mov    eax,ds:0x640334b8
64003c2d:	mov    DWORD PTR [eax+0x4],eax
64003c30:	mov    eax,ds:0x640334b8
64003c35:	mov    DWORD PTR [eax],eax
64003c37:	mov    eax,ds:0x640334b8
64003c3c:	mov    DWORD PTR [eax+0x8],eax
64003c3f:	push   0x640256c0
64003c44:	mov    DWORD PTR ds:0x640334bc,ebx
64003c4a:	call   0x6401409f
64003c4f:	add    esp,0x4
64003c52:	mov    DWORD PTR [esp+0x478],0xffffffff
64003c5d:	mov    eax,DWORD PTR [esi+0x4]
64003c60:	mov    esi,DWORD PTR [eax]
64003c62:	mov    eax,DWORD PTR [esp+0x14]
64003c66:	cmp    esi,DWORD PTR [eax+0x4]
64003c69:	je     0x64003dce
64003c6f:	cmp    DWORD PTR [esi+0x24],0x10
64003c73:	lea    edi,[esi+0xc]
64003c76:	jb     0x64003c7d
64003c78:	mov    ecx,DWORD PTR [edi+0x4]
64003c7b:	jmp    0x64003c80
64003c7d:	lea    ecx,[edi+0x4]
64003c80:	lea    edx,[esp+0x64]
64003c84:	mov    al,BYTE PTR [ecx]
64003c86:	mov    BYTE PTR [edx],al
64003c88:	add    ecx,0x1
64003c8b:	add    edx,0x1
64003c8e:	cmp    al,bl
64003c90:	jne    0x64003c84
64003c92:	mov    ecx,DWORD PTR [esp+0x14]
64003c96:	cmp    esi,DWORD PTR [ecx+0x4]
64003c99:	jne    0x64003ca0
64003c9b:	call   0x64013ac8
64003ca0:	push   0xffffffff
64003ca2:	push   ebx
64003ca3:	push   edi
64003ca4:	lea    ecx,[esp+0x54]
64003ca8:	mov    DWORD PTR [esp+0x6c],0xf
64003cb0:	mov    DWORD PTR [esp+0x68],ebx
64003cb4:	mov    BYTE PTR [esp+0x58],bl
64003cb8:	call   0x640017a0
64003cbd:	lea    edx,[esp+0x64]
64003cc1:	push   edx
64003cc2:	mov    DWORD PTR [esp+0x47c],0x1
64003ccd:	call   0x64020395
64003cd2:	lea    eax,[esp+0x68]
64003cd6:	add    esp,0x4
64003cd9:	mov    DWORD PTR [esp+0x34],0xf
64003ce1:	mov    DWORD PTR [esp+0x30],ebx
64003ce5:	mov    BYTE PTR [esp+0x20],bl
64003ce9:	lea    edx,[eax+0x1]
64003cec:	lea    esp,[esp+0x0]
64003cf0:	mov    cl,BYTE PTR [eax]
64003cf2:	add    eax,0x1
64003cf5:	cmp    cl,bl
64003cf7:	jne    0x64003cf0
64003cf9:	sub    eax,edx
64003cfb:	push   eax
64003cfc:	lea    eax,[esp+0x68]
64003d00:	push   eax
64003d01:	lea    ecx,[esp+0x24]
64003d05:	call   0x64001880
64003d0a:	lea    ecx,[esp+0x1c]
64003d0e:	push   ecx
64003d0f:	lea    edx,[esp+0x40]
64003d13:	push   edx
64003d14:	push   0x640334b4
64003d19:	mov    BYTE PTR [esp+0x484],0x2
64003d21:	call   0x64006ef0
64003d26:	mov    edi,0x10
64003d2b:	cmp    DWORD PTR [esp+0x34],edi
64003d2f:	jb     0x64003d3e
64003d31:	mov    eax,DWORD PTR [esp+0x20]
64003d35:	push   eax
64003d36:	call   0x64013712
64003d3b:	add    esp,0x4
64003d3e:	mov    DWORD PTR [esp+0x478],0xffffffff
64003d49:	cmp    DWORD PTR [esp+0x60],edi
64003d4d:	mov    DWORD PTR [esp+0x34],0xf
64003d55:	mov    DWORD PTR [esp+0x30],ebx
64003d59:	mov    BYTE PTR [esp+0x20],bl
64003d5d:	jb     0x64003d6c
64003d5f:	mov    ecx,DWORD PTR [esp+0x4c]
64003d63:	push   ecx
64003d64:	call   0x64013712
64003d69:	add    esp,0x4
64003d6c:	cmp    BYTE PTR [esi+0x29],bl
64003d6f:	mov    DWORD PTR [esp+0x60],0xf
64003d77:	mov    DWORD PTR [esp+0x5c],ebx
64003d7b:	mov    BYTE PTR [esp+0x4c],bl
64003d7f:	je     0x64003d8b
64003d81:	call   0x64013ac8
64003d86:	jmp    0x64003c62
64003d8b:	mov    ecx,DWORD PTR [esi+0x8]
64003d8e:	cmp    BYTE PTR [ecx+0x29],bl
64003d91:	jne    0x64003db0
64003d93:	mov    eax,DWORD PTR [ecx]
64003d95:	cmp    BYTE PTR [eax+0x29],bl
64003d98:	jne    0x64003da9
64003d9a:	lea    ebx,[ebx+0x0]
64003da0:	mov    ecx,eax
64003da2:	mov    eax,DWORD PTR [ecx]
64003da4:	cmp    BYTE PTR [eax+0x29],bl
64003da7:	je     0x64003da0
64003da9:	mov    esi,ecx
64003dab:	jmp    0x64003c62
64003db0:	mov    eax,DWORD PTR [esi+0x4]
64003db3:	cmp    BYTE PTR [eax+0x29],bl
64003db6:	jne    0x64003dc7
64003db8:	cmp    esi,DWORD PTR [eax+0x8]
64003dbb:	jne    0x64003dc7
64003dbd:	mov    esi,eax
64003dbf:	mov    eax,DWORD PTR [eax+0x4]
64003dc2:	cmp    BYTE PTR [eax+0x29],bl
64003dc5:	je     0x64003db8
64003dc7:	mov    esi,eax
64003dc9:	jmp    0x64003c62
64003dce:	mov    esi,DWORD PTR [esp+0x18]
64003dd2:	push   esi
64003dd3:	call   0x64006e20
64003dd8:	mov    eax,esi
64003dda:	mov    ecx,DWORD PTR [esp+0x470]
64003de1:	mov    DWORD PTR fs:0x0,ecx
64003de8:	pop    ecx
64003de9:	pop    edi
64003dea:	pop    esi
64003deb:	pop    ebx
64003dec:	mov    ecx,DWORD PTR [esp+0x458]
64003df3:	xor    ecx,esp
64003df5:	call   0x64013f6c
64003dfa:	mov    esp,ebp
64003dfc:	pop    ebp
64003dfd:	ret    
64003dfe:	int3   
64003dff:	int3   
64003e00:	push   ecx
64003e01:	call   0x640078d0
64003e06:	pop    ecx
64003e07:	ret    
64003e08:	int3   
64003e09:	int3   
64003e0a:	int3   
64003e0b:	int3   
64003e0c:	int3   
64003e0d:	int3   
64003e0e:	int3   
64003e0f:	int3   
64003e10:	push   ebp
64003e11:	lea    ebp,[esp-0x404]
64003e18:	sub    esp,0x404
64003e1e:	push   0xffffffff
64003e20:	push   0x640251f1
64003e25:	mov    eax,fs:0x0
64003e2b:	push   eax
64003e2c:	sub    esp,0x3c
64003e2f:	mov    eax,ds:0x6402f09c
64003e34:	xor    eax,ebp
64003e36:	mov    DWORD PTR [ebp+0x400],eax
64003e3c:	push   ebx
64003e3d:	push   esi
64003e3e:	push   edi
64003e3f:	push   eax
64003e40:	lea    eax,[ebp-0xc]
64003e43:	mov    fs:0x0,eax
64003e49:	xor    ebx,ebx
64003e4b:	mov    DWORD PTR [ebp-0x4],ebx
64003e4e:	test   BYTE PTR ds:0x640334e0,0x1
64003e55:	jne    0x64003e9d
64003e57:	or     DWORD PTR ds:0x640334e0,0x1
64003e5e:	mov    BYTE PTR [ebp-0x4],0x1
64003e62:	call   0x64008200
64003e67:	mov    ds:0x640334d8,eax
64003e6c:	mov    BYTE PTR [eax+0x29],0x1
64003e70:	mov    eax,ds:0x640334d8
64003e75:	mov    DWORD PTR [eax+0x4],eax
64003e78:	mov    eax,ds:0x640334d8
64003e7d:	mov    DWORD PTR [eax],eax
64003e7f:	mov    eax,ds:0x640334d8
64003e84:	mov    DWORD PTR [eax+0x8],eax
64003e87:	push   0x640256d0
64003e8c:	mov    DWORD PTR ds:0x640334dc,ebx
64003e92:	call   0x6401409f
64003e97:	add    esp,0x4
64003e9a:	mov    BYTE PTR [ebp-0x4],bl
64003e9d:	cmp    DWORD PTR ds:0x640334dc,ebx
64003ea3:	jne    0x64004c69
64003ea9:	call   0x64008200
64003eae:	mov    DWORD PTR [ebp-0x30],eax
64003eb1:	mov    BYTE PTR [eax+0x29],0x1
64003eb5:	mov    eax,DWORD PTR [ebp-0x30]
64003eb8:	mov    DWORD PTR [eax+0x4],eax
64003ebb:	mov    eax,DWORD PTR [ebp-0x30]
64003ebe:	mov    DWORD PTR [eax],eax
64003ec0:	mov    eax,DWORD PTR [ebp-0x30]
64003ec3:	mov    DWORD PTR [eax+0x8],eax
64003ec6:	mov    DWORD PTR [ebp-0x2c],ebx
64003ec9:	push   0x640289cc
64003ece:	push   0x3
64003ed0:	push   0x64028a00
64003ed5:	mov    BYTE PTR [ebp-0x4],0x2
64003ed9:	call   0x64006840
64003ede:	mov    esi,eax
64003ee0:	mov    ecx,esi
64003ee2:	add    esp,0xc
64003ee5:	mov    DWORD PTR [ebp-0x10],0xf
64003eec:	mov    DWORD PTR [ebp-0x14],ebx
64003eef:	mov    BYTE PTR [ebp-0x24],bl
64003ef2:	lea    edi,[ecx+0x1]
64003ef5:	mov    al,BYTE PTR [ecx]
64003ef7:	add    ecx,0x1
64003efa:	cmp    al,bl
64003efc:	jne    0x64003ef5
64003efe:	sub    ecx,edi
64003f00:	push   ecx
64003f01:	push   esi
64003f02:	lea    ecx,[ebp-0x28]
64003f05:	call   0x64001880
64003f0a:	lea    eax,[ebp-0x28]
64003f0d:	push   eax
64003f0e:	lea    ecx,[ebp-0x40]
64003f11:	push   ecx
64003f12:	lea    edx,[ebp-0x34]
64003f15:	push   edx
64003f16:	mov    BYTE PTR [ebp-0x4],0x3
64003f1a:	call   0x64006ef0
64003f1f:	mov    BYTE PTR [ebp-0x4],0x2
64003f23:	cmp    DWORD PTR [ebp-0x10],0x10
64003f27:	jb     0x64003f35
64003f29:	mov    eax,DWORD PTR [ebp-0x24]
64003f2c:	push   eax
64003f2d:	call   0x64013712
64003f32:	add    esp,0x4
64003f35:	push   0x64028a04
64003f3a:	push   0x8
64003f3c:	push   0x64028a44
64003f41:	call   0x64006840
64003f46:	mov    esi,eax
64003f48:	mov    ecx,esi
64003f4a:	add    esp,0xc
64003f4d:	mov    DWORD PTR [ebp-0x10],0xf
64003f54:	mov    DWORD PTR [ebp-0x14],ebx
64003f57:	mov    BYTE PTR [ebp-0x24],bl
64003f5a:	lea    edx,[ecx+0x1]
64003f5d:	lea    ecx,[ecx+0x0]
64003f60:	mov    al,BYTE PTR [ecx]
64003f62:	add    ecx,0x1
64003f65:	cmp    al,bl
64003f67:	jne    0x64003f60
64003f69:	sub    ecx,edx
64003f6b:	push   ecx
64003f6c:	push   esi
64003f6d:	lea    ecx,[ebp-0x28]
64003f70:	call   0x64001880
64003f75:	lea    ecx,[ebp-0x28]
64003f78:	push   ecx
64003f79:	lea    edx,[ebp-0x40]
64003f7c:	push   edx
64003f7d:	lea    eax,[ebp-0x34]
64003f80:	push   eax
64003f81:	mov    BYTE PTR [ebp-0x4],0x4
64003f85:	call   0x64006ef0
64003f8a:	mov    edi,0x10
64003f8f:	mov    BYTE PTR [ebp-0x4],0x2
64003f93:	cmp    DWORD PTR [ebp-0x10],edi
64003f96:	jb     0x64003fa4
64003f98:	mov    ecx,DWORD PTR [ebp-0x24]
64003f9b:	push   ecx
64003f9c:	call   0x64013712
64003fa1:	add    esp,0x4
64003fa4:	push   0x64028a50
64003fa9:	push   0x8
64003fab:	push   0x64028a84
64003fb0:	call   0x64006840
64003fb5:	mov    esi,eax
64003fb7:	mov    ecx,esi
64003fb9:	add    esp,0xc
64003fbc:	mov    DWORD PTR [ebp-0x10],0xf
64003fc3:	mov    DWORD PTR [ebp-0x14],ebx
64003fc6:	mov    BYTE PTR [ebp-0x24],bl
64003fc9:	lea    edx,[ecx+0x1]
64003fcc:	lea    esp,[esp+0x0]
64003fd0:	mov    al,BYTE PTR [ecx]
64003fd2:	add    ecx,0x1
64003fd5:	cmp    al,bl
64003fd7:	jne    0x64003fd0
64003fd9:	sub    ecx,edx
64003fdb:	push   ecx
64003fdc:	push   esi
64003fdd:	lea    ecx,[ebp-0x28]
64003fe0:	call   0x64001880
64003fe5:	lea    edx,[ebp-0x28]
64003fe8:	push   edx
64003fe9:	lea    eax,[ebp-0x40]
64003fec:	push   eax
64003fed:	lea    ecx,[ebp-0x34]
64003ff0:	push   ecx
64003ff1:	mov    BYTE PTR [ebp-0x4],0x5
64003ff5:	call   0x64006ef0
64003ffa:	mov    BYTE PTR [ebp-0x4],0x2
64003ffe:	cmp    DWORD PTR [ebp-0x10],edi
64004001:	jb     0x6400400f
64004003:	mov    edx,DWORD PTR [ebp-0x24]
64004006:	push   edx
64004007:	call   0x64013712
6400400c:	add    esp,0x4
6400400f:	push   0x64028a90
64004014:	push   0xa
64004016:	push   0x64028ab4
6400401b:	call   0x64006840
64004020:	mov    esi,eax
64004022:	mov    ecx,esi
64004024:	add    esp,0xc
64004027:	mov    DWORD PTR [ebp-0x10],0xf
6400402e:	mov    DWORD PTR [ebp-0x14],ebx
64004031:	mov    BYTE PTR [ebp-0x24],bl
64004034:	lea    edx,[ecx+0x1]
64004037:	mov    al,BYTE PTR [ecx]
64004039:	add    ecx,0x1
6400403c:	cmp    al,bl
6400403e:	jne    0x64004037
64004040:	sub    ecx,edx
64004042:	push   ecx
64004043:	push   esi
64004044:	lea    ecx,[ebp-0x28]
64004047:	call   0x64001880
6400404c:	lea    eax,[ebp-0x28]
6400404f:	push   eax
64004050:	lea    ecx,[ebp-0x40]
64004053:	push   ecx
64004054:	lea    edx,[ebp-0x34]
64004057:	push   edx
64004058:	mov    BYTE PTR [ebp-0x4],0x6
6400405c:	call   0x64006ef0
64004061:	mov    BYTE PTR [ebp-0x4],0x2
64004065:	cmp    DWORD PTR [ebp-0x10],edi
64004068:	jb     0x64004076
6400406a:	mov    eax,DWORD PTR [ebp-0x24]
6400406d:	push   eax
6400406e:	call   0x64013712
64004073:	add    esp,0x4
64004076:	push   0x64028ac0
6400407b:	push   0x4
6400407d:	push   0x64028b00
64004082:	call   0x64006840
64004087:	mov    esi,eax
64004089:	mov    ecx,esi
6400408b:	add    esp,0xc
6400408e:	mov    DWORD PTR [ebp-0x10],0xf
64004095:	mov    DWORD PTR [ebp-0x14],ebx
64004098:	mov    BYTE PTR [ebp-0x24],bl
6400409b:	lea    edx,[ecx+0x1]
6400409e:	mov    edi,edi
640040a0:	mov    al,BYTE PTR [ecx]
640040a2:	add    ecx,0x1
640040a5:	cmp    al,bl
640040a7:	jne    0x640040a0
640040a9:	sub    ecx,edx
640040ab:	push   ecx
640040ac:	push   esi
640040ad:	lea    ecx,[ebp-0x28]
640040b0:	call   0x64001880
640040b5:	lea    ecx,[ebp-0x28]
640040b8:	push   ecx
640040b9:	lea    edx,[ebp-0x40]
640040bc:	push   edx
640040bd:	lea    eax,[ebp-0x34]
640040c0:	push   eax
640040c1:	mov    BYTE PTR [ebp-0x4],0x7
640040c5:	call   0x64006ef0
640040ca:	mov    BYTE PTR [ebp-0x4],0x2
640040ce:	cmp    DWORD PTR [ebp-0x10],edi
640040d1:	jb     0x640040df
640040d3:	mov    ecx,DWORD PTR [ebp-0x24]
640040d6:	push   ecx
640040d7:	call   0x64013712
640040dc:	add    esp,0x4
640040df:	push   0x64028b08
640040e4:	push   0x8
640040e6:	push   0x64028b3c
640040eb:	call   0x64006840
640040f0:	mov    esi,eax
640040f2:	mov    ecx,esi
640040f4:	add    esp,0xc
640040f7:	mov    DWORD PTR [ebp-0x10],0xf
640040fe:	mov    DWORD PTR [ebp-0x14],ebx
64004101:	mov    BYTE PTR [ebp-0x24],bl
64004104:	lea    edx,[ecx+0x1]
64004107:	mov    al,BYTE PTR [ecx]
64004109:	add    ecx,0x1
6400410c:	cmp    al,bl
6400410e:	jne    0x64004107
64004110:	sub    ecx,edx
64004112:	push   ecx
64004113:	push   esi
64004114:	lea    ecx,[ebp-0x28]
64004117:	call   0x64001880
6400411c:	lea    edx,[ebp-0x28]
6400411f:	push   edx
64004120:	lea    eax,[ebp-0x40]
64004123:	push   eax
64004124:	lea    ecx,[ebp-0x34]
64004127:	push   ecx
64004128:	mov    BYTE PTR [ebp-0x4],0x8
6400412c:	call   0x64006ef0
64004131:	mov    BYTE PTR [ebp-0x4],0x2
64004135:	cmp    DWORD PTR [ebp-0x10],edi
64004138:	jb     0x64004146
6400413a:	mov    edx,DWORD PTR [ebp-0x24]
6400413d:	push   edx
6400413e:	call   0x64013712
64004143:	add    esp,0x4
64004146:	push   0x64028b48
6400414b:	push   0x5
6400414d:	push   0x64028b88
64004152:	call   0x64006840
64004157:	mov    esi,eax
64004159:	mov    ecx,esi
6400415b:	add    esp,0xc
6400415e:	mov    DWORD PTR [ebp-0x10],0xf
64004165:	mov    DWORD PTR [ebp-0x14],ebx
64004168:	mov    BYTE PTR [ebp-0x24],bl
6400416b:	lea    edx,[ecx+0x1]
6400416e:	mov    edi,edi
64004170:	mov    al,BYTE PTR [ecx]
64004172:	add    ecx,0x1
64004175:	cmp    al,bl
64004177:	jne    0x64004170
64004179:	sub    ecx,edx
6400417b:	push   ecx
6400417c:	push   esi
6400417d:	lea    ecx,[ebp-0x28]
64004180:	call   0x64001880
64004185:	lea    eax,[ebp-0x28]
64004188:	push   eax
64004189:	lea    ecx,[ebp-0x40]
6400418c:	push   ecx
6400418d:	lea    edx,[ebp-0x34]
64004190:	push   edx
64004191:	mov    BYTE PTR [ebp-0x4],0x9
64004195:	call   0x64006ef0
6400419a:	mov    BYTE PTR [ebp-0x4],0x2
6400419e:	cmp    DWORD PTR [ebp-0x10],edi
640041a1:	jb     0x640041af
640041a3:	mov    eax,DWORD PTR [ebp-0x24]
640041a6:	push   eax
640041a7:	call   0x64013712
640041ac:	add    esp,0x4
640041af:	push   0x64028b90
640041b4:	push   0x8
640041b6:	push   0x64028bb4
640041bb:	call   0x64006840
640041c0:	mov    esi,eax
640041c2:	mov    ecx,esi
640041c4:	add    esp,0xc
640041c7:	mov    DWORD PTR [ebp-0x10],0xf
640041ce:	mov    DWORD PTR [ebp-0x14],ebx
640041d1:	mov    BYTE PTR [ebp-0x24],bl
640041d4:	lea    edx,[ecx+0x1]
640041d7:	mov    al,BYTE PTR [ecx]
640041d9:	add    ecx,0x1
640041dc:	cmp    al,bl
640041de:	jne    0x640041d7
640041e0:	sub    ecx,edx
640041e2:	push   ecx
640041e3:	push   esi
640041e4:	lea    ecx,[ebp-0x28]
640041e7:	call   0x64001880
640041ec:	lea    ecx,[ebp-0x28]
640041ef:	push   ecx
640041f0:	lea    edx,[ebp-0x40]
640041f3:	push   edx
640041f4:	lea    eax,[ebp-0x34]
640041f7:	push   eax
640041f8:	mov    BYTE PTR [ebp-0x4],0xa
640041fc:	call   0x64006ef0
64004201:	mov    BYTE PTR [ebp-0x4],0x2
64004205:	cmp    DWORD PTR [ebp-0x10],edi
64004208:	jb     0x64004216
6400420a:	mov    ecx,DWORD PTR [ebp-0x24]
6400420d:	push   ecx
6400420e:	call   0x64013712
64004213:	add    esp,0x4
64004216:	push   0x64028bc0
6400421b:	push   0xb
6400421d:	push   0x64028bf4
64004222:	call   0x64006840
64004227:	mov    esi,eax
64004229:	mov    ecx,esi
6400422b:	add    esp,0xc
6400422e:	mov    DWORD PTR [ebp-0x10],0xf
64004235:	mov    DWORD PTR [ebp-0x14],ebx
64004238:	mov    BYTE PTR [ebp-0x24],bl
6400423b:	lea    edx,[ecx+0x1]
6400423e:	mov    edi,edi
64004240:	mov    al,BYTE PTR [ecx]
64004242:	add    ecx,0x1
64004245:	cmp    al,bl
64004247:	jne    0x64004240
64004249:	sub    ecx,edx
6400424b:	push   ecx
6400424c:	push   esi
6400424d:	lea    ecx,[ebp-0x28]
64004250:	call   0x64001880
64004255:	lea    edx,[ebp-0x28]
64004258:	push   edx
64004259:	lea    eax,[ebp-0x40]
6400425c:	push   eax
6400425d:	lea    ecx,[ebp-0x34]
64004260:	push   ecx
64004261:	mov    BYTE PTR [ebp-0x4],0xb
64004265:	call   0x64006ef0
6400426a:	mov    BYTE PTR [ebp-0x4],0x2
6400426e:	cmp    DWORD PTR [ebp-0x10],edi
64004271:	jb     0x6400427f
64004273:	mov    edx,DWORD PTR [ebp-0x24]
64004276:	push   edx
64004277:	call   0x64013712
6400427c:	add    esp,0x4
6400427f:	push   0x64028c00
64004284:	push   0x1e
64004286:	push   0x64028c34
6400428b:	call   0x64006840
64004290:	mov    esi,eax
64004292:	mov    ecx,esi
64004294:	add    esp,0xc
64004297:	mov    DWORD PTR [ebp-0x10],0xf
6400429e:	mov    DWORD PTR [ebp-0x14],ebx
640042a1:	mov    BYTE PTR [ebp-0x24],bl
640042a4:	lea    edx,[ecx+0x1]
640042a7:	mov    al,BYTE PTR [ecx]
640042a9:	add    ecx,0x1
640042ac:	cmp    al,bl
640042ae:	jne    0x640042a7
640042b0:	sub    ecx,edx
640042b2:	push   ecx
640042b3:	push   esi
640042b4:	lea    ecx,[ebp-0x28]
640042b7:	call   0x64001880
640042bc:	lea    eax,[ebp-0x28]
640042bf:	push   eax
640042c0:	lea    ecx,[ebp-0x40]
640042c3:	push   ecx
640042c4:	lea    edx,[ebp-0x34]
640042c7:	push   edx
640042c8:	mov    BYTE PTR [ebp-0x4],0xc
640042cc:	call   0x64006ef0
640042d1:	mov    BYTE PTR [ebp-0x4],0x2
640042d5:	cmp    DWORD PTR [ebp-0x10],edi
640042d8:	jb     0x640042e6
640042da:	mov    eax,DWORD PTR [ebp-0x24]
640042dd:	push   eax
640042de:	call   0x64013712
640042e3:	add    esp,0x4
640042e6:	push   0x64028c54
640042eb:	push   0x7
640042ed:	push   0x64028c94
640042f2:	call   0x64006840
640042f7:	mov    esi,eax
640042f9:	mov    ecx,esi
640042fb:	add    esp,0xc
640042fe:	mov    DWORD PTR [ebp-0x10],0xf
64004305:	mov    DWORD PTR [ebp-0x14],ebx
64004308:	mov    BYTE PTR [ebp-0x24],bl
6400430b:	lea    edx,[ecx+0x1]
6400430e:	mov    edi,edi
64004310:	mov    al,BYTE PTR [ecx]
64004312:	add    ecx,0x1
64004315:	cmp    al,bl
64004317:	jne    0x64004310
64004319:	sub    ecx,edx
6400431b:	push   ecx
6400431c:	push   esi
6400431d:	lea    ecx,[ebp-0x28]
64004320:	call   0x64001880
64004325:	lea    ecx,[ebp-0x28]
64004328:	push   ecx
64004329:	lea    edx,[ebp-0x40]
6400432c:	push   edx
6400432d:	lea    eax,[ebp-0x34]
64004330:	push   eax
64004331:	mov    BYTE PTR [ebp-0x4],0xd
64004335:	call   0x64006ef0
6400433a:	mov    BYTE PTR [ebp-0x4],0x2
6400433e:	cmp    DWORD PTR [ebp-0x10],edi
64004341:	jb     0x6400434f
64004343:	mov    ecx,DWORD PTR [ebp-0x24]
64004346:	push   ecx
64004347:	call   0x64013712
6400434c:	add    esp,0x4
6400434f:	push   0x64028c9c
64004354:	push   0xc
64004356:	push   0x64028cd8
6400435b:	call   0x64006840
64004360:	mov    esi,eax
64004362:	mov    ecx,esi
64004364:	add    esp,0xc
64004367:	mov    DWORD PTR [ebp-0x10],0xf
6400436e:	mov    DWORD PTR [ebp-0x14],ebx
64004371:	mov    BYTE PTR [ebp-0x24],bl
64004374:	lea    edx,[ecx+0x1]
64004377:	mov    al,BYTE PTR [ecx]
64004379:	add    ecx,0x1
6400437c:	cmp    al,bl
6400437e:	jne    0x64004377
64004380:	sub    ecx,edx
64004382:	push   ecx
64004383:	push   esi
64004384:	lea    ecx,[ebp-0x28]
64004387:	call   0x64001880
6400438c:	lea    edx,[ebp-0x28]
6400438f:	push   edx
64004390:	lea    eax,[ebp-0x40]
64004393:	push   eax
64004394:	lea    ecx,[ebp-0x34]
64004397:	push   ecx
64004398:	mov    BYTE PTR [ebp-0x4],0xe
6400439c:	call   0x64006ef0
640043a1:	mov    BYTE PTR [ebp-0x4],0x2
640043a5:	cmp    DWORD PTR [ebp-0x10],edi
640043a8:	jb     0x640043b6
640043aa:	mov    edx,DWORD PTR [ebp-0x24]
640043ad:	push   edx
640043ae:	call   0x64013712
640043b3:	add    esp,0x4
640043b6:	push   0x64028ce8
640043bb:	push   0x11
640043bd:	push   0x64028d24
640043c2:	call   0x64006840
640043c7:	mov    esi,eax
640043c9:	mov    ecx,esi
640043cb:	add    esp,0xc
640043ce:	mov    DWORD PTR [ebp-0x10],0xf
640043d5:	mov    DWORD PTR [ebp-0x14],ebx
640043d8:	mov    BYTE PTR [ebp-0x24],bl
640043db:	lea    edx,[ecx+0x1]
640043de:	mov    edi,edi
640043e0:	mov    al,BYTE PTR [ecx]
640043e2:	add    ecx,0x1
640043e5:	cmp    al,bl
640043e7:	jne    0x640043e0
640043e9:	sub    ecx,edx
640043eb:	push   ecx
640043ec:	push   esi
640043ed:	lea    ecx,[ebp-0x28]
640043f0:	call   0x64001880
640043f5:	lea    eax,[ebp-0x28]
640043f8:	push   eax
640043f9:	lea    ecx,[ebp-0x40]
640043fc:	push   ecx
640043fd:	lea    edx,[ebp-0x34]
64004400:	push   edx
64004401:	mov    BYTE PTR [ebp-0x4],0xf
64004405:	call   0x64006ef0
6400440a:	mov    BYTE PTR [ebp-0x4],0x2
6400440e:	cmp    DWORD PTR [ebp-0x10],edi
64004411:	jb     0x6400441f
64004413:	mov    eax,DWORD PTR [ebp-0x24]
64004416:	push   eax
64004417:	call   0x64013712
6400441c:	add    esp,0x4
6400441f:	push   0x64028d38
64004424:	push   0x7
64004426:	push   0x64028d64
6400442b:	call   0x64006840
64004430:	mov    esi,eax
64004432:	mov    ecx,esi
64004434:	add    esp,0xc
64004437:	mov    DWORD PTR [ebp-0x10],0xf
6400443e:	mov    DWORD PTR [ebp-0x14],ebx
64004441:	mov    BYTE PTR [ebp-0x24],bl
64004444:	lea    edx,[ecx+0x1]
64004447:	mov    al,BYTE PTR [ecx]
64004449:	add    ecx,0x1
6400444c:	cmp    al,bl
6400444e:	jne    0x64004447
64004450:	sub    ecx,edx
64004452:	push   ecx
64004453:	push   esi
64004454:	lea    ecx,[ebp-0x28]
64004457:	call   0x64001880
6400445c:	lea    ecx,[ebp-0x28]
6400445f:	push   ecx
64004460:	lea    edx,[ebp-0x40]
64004463:	push   edx
64004464:	lea    eax,[ebp-0x34]
64004467:	push   eax
64004468:	mov    BYTE PTR [ebp-0x4],0x10
6400446c:	call   0x64006ef0
64004471:	mov    BYTE PTR [ebp-0x4],0x2
64004475:	cmp    DWORD PTR [ebp-0x10],edi
64004478:	jb     0x64004486
6400447a:	mov    ecx,DWORD PTR [ebp-0x24]
6400447d:	push   ecx
6400447e:	call   0x64013712
64004483:	add    esp,0x4
64004486:	push   0x64028d6c
6400448b:	push   0x6
6400448d:	push   0x64028dac
64004492:	call   0x64006840
64004497:	mov    esi,eax
64004499:	mov    ecx,esi
6400449b:	add    esp,0xc
6400449e:	mov    DWORD PTR [ebp-0x10],0xf
640044a5:	mov    DWORD PTR [ebp-0x14],ebx
640044a8:	mov    BYTE PTR [ebp-0x24],bl
640044ab:	lea    edx,[ecx+0x1]
640044ae:	mov    edi,edi
640044b0:	mov    al,BYTE PTR [ecx]
640044b2:	add    ecx,0x1
640044b5:	cmp    al,bl
640044b7:	jne    0x640044b0
640044b9:	sub    ecx,edx
640044bb:	push   ecx
640044bc:	push   esi
640044bd:	lea    ecx,[ebp-0x28]
640044c0:	call   0x64001880
640044c5:	lea    edx,[ebp-0x28]
640044c8:	push   edx
640044c9:	lea    eax,[ebp-0x40]
640044cc:	push   eax
640044cd:	lea    ecx,[ebp-0x34]
640044d0:	push   ecx
640044d1:	mov    BYTE PTR [ebp-0x4],0x11
640044d5:	call   0x64006ef0
640044da:	mov    BYTE PTR [ebp-0x4],0x2
640044de:	cmp    DWORD PTR [ebp-0x10],edi
640044e1:	jb     0x640044ef
640044e3:	mov    edx,DWORD PTR [ebp-0x24]
640044e6:	push   edx
640044e7:	call   0x64013712
640044ec:	add    esp,0x4
640044ef:	push   0x64028db4
640044f4:	push   0x3
640044f6:	push   0x64028de0
640044fb:	call   0x64006840
64004500:	mov    esi,eax
64004502:	mov    ecx,esi
64004504:	add    esp,0xc
64004507:	mov    DWORD PTR [ebp-0x10],0xf
6400450e:	mov    DWORD PTR [ebp-0x14],ebx
64004511:	mov    BYTE PTR [ebp-0x24],bl
64004514:	lea    edx,[ecx+0x1]
64004517:	mov    al,BYTE PTR [ecx]
64004519:	add    ecx,0x1
6400451c:	cmp    al,bl
6400451e:	jne    0x64004517
64004520:	sub    ecx,edx
64004522:	push   ecx
64004523:	push   esi
64004524:	lea    ecx,[ebp-0x28]
64004527:	call   0x64001880
6400452c:	lea    eax,[ebp-0x28]
6400452f:	push   eax
64004530:	lea    ecx,[ebp-0x40]
64004533:	push   ecx
64004534:	lea    edx,[ebp-0x34]
64004537:	push   edx
64004538:	mov    BYTE PTR [ebp-0x4],0x12
6400453c:	call   0x64006ef0
64004541:	mov    BYTE PTR [ebp-0x4],0x2
64004545:	cmp    DWORD PTR [ebp-0x10],edi
64004548:	jb     0x64004556
6400454a:	mov    eax,DWORD PTR [ebp-0x24]
6400454d:	push   eax
6400454e:	call   0x64013712
64004553:	add    esp,0x4
64004556:	push   0x64028de8
6400455b:	push   0x8
6400455d:	push   0x64028e28
64004562:	call   0x64006840
64004567:	mov    esi,eax
64004569:	mov    ecx,esi
6400456b:	add    esp,0xc
6400456e:	mov    DWORD PTR [ebp-0x10],0xf
64004575:	mov    DWORD PTR [ebp-0x14],ebx
64004578:	mov    BYTE PTR [ebp-0x24],bl
6400457b:	lea    edx,[ecx+0x1]
6400457e:	mov    edi,edi
64004580:	mov    al,BYTE PTR [ecx]
64004582:	add    ecx,0x1
64004585:	cmp    al,bl
64004587:	jne    0x64004580
64004589:	sub    ecx,edx
6400458b:	push   ecx
6400458c:	push   esi
6400458d:	lea    ecx,[ebp-0x28]
64004590:	call   0x64001880
64004595:	lea    ecx,[ebp-0x28]
64004598:	push   ecx
64004599:	lea    edx,[ebp-0x40]
6400459c:	push   edx
6400459d:	lea    eax,[ebp-0x34]
640045a0:	push   eax
640045a1:	mov    BYTE PTR [ebp-0x4],0x13
640045a5:	call   0x64006ef0
640045aa:	mov    BYTE PTR [ebp-0x4],0x2
640045ae:	cmp    DWORD PTR [ebp-0x10],edi
640045b1:	jb     0x640045bf
640045b3:	mov    ecx,DWORD PTR [ebp-0x24]
640045b6:	push   ecx
640045b7:	call   0x64013712
640045bc:	add    esp,0x4
640045bf:	push   0x64028e34
640045c4:	push   0xb
640045c6:	push   0x64028e58
640045cb:	call   0x64006840
640045d0:	mov    esi,eax
640045d2:	mov    ecx,esi
640045d4:	add    esp,0xc
640045d7:	mov    DWORD PTR [ebp-0x10],0xf
640045de:	mov    DWORD PTR [ebp-0x14],ebx
640045e1:	mov    BYTE PTR [ebp-0x24],bl
640045e4:	lea    edx,[ecx+0x1]
640045e7:	mov    al,BYTE PTR [ecx]
640045e9:	add    ecx,0x1
640045ec:	cmp    al,bl
640045ee:	jne    0x640045e7
640045f0:	sub    ecx,edx
640045f2:	push   ecx
640045f3:	push   esi
640045f4:	lea    ecx,[ebp-0x28]
640045f7:	call   0x64001880
640045fc:	lea    edx,[ebp-0x28]
640045ff:	push   edx
64004600:	lea    eax,[ebp-0x40]
64004603:	push   eax
64004604:	lea    ecx,[ebp-0x34]
64004607:	push   ecx
64004608:	mov    BYTE PTR [ebp-0x4],0x14
6400460c:	call   0x64006ef0
64004611:	mov    BYTE PTR [ebp-0x4],0x2
64004615:	cmp    DWORD PTR [ebp-0x10],edi
64004618:	jb     0x64004626
6400461a:	mov    edx,DWORD PTR [ebp-0x24]
6400461d:	push   edx
6400461e:	call   0x64013712
64004623:	add    esp,0x4
64004626:	push   0x64028e64
6400462b:	push   edi
6400462c:	push   0x64028e94
64004631:	call   0x64006840
64004636:	mov    esi,eax
64004638:	mov    ecx,esi
6400463a:	add    esp,0xc
6400463d:	mov    DWORD PTR [ebp-0x10],0xf
64004644:	mov    DWORD PTR [ebp-0x14],ebx
64004647:	mov    BYTE PTR [ebp-0x24],bl
6400464a:	lea    edx,[ecx+0x1]
6400464d:	lea    ecx,[ecx+0x0]
64004650:	mov    al,BYTE PTR [ecx]
64004652:	add    ecx,0x1
64004655:	cmp    al,bl
64004657:	jne    0x64004650
64004659:	sub    ecx,edx
6400465b:	push   ecx
6400465c:	push   esi
6400465d:	lea    ecx,[ebp-0x28]
64004660:	call   0x64001880
64004665:	lea    eax,[ebp-0x28]
64004668:	push   eax
64004669:	lea    ecx,[ebp-0x40]
6400466c:	push   ecx
6400466d:	lea    edx,[ebp-0x34]
64004670:	push   edx
64004671:	mov    BYTE PTR [ebp-0x4],0x15
64004675:	call   0x64006ef0
6400467a:	mov    BYTE PTR [ebp-0x4],0x2
6400467e:	cmp    DWORD PTR [ebp-0x10],edi
64004681:	jb     0x6400468f
64004683:	mov    eax,DWORD PTR [ebp-0x24]
64004686:	push   eax
64004687:	call   0x64013712
6400468c:	add    esp,0x4
6400468f:	push   0x64028ea8
64004694:	push   0x5
64004696:	push   0x64028ee4
6400469b:	call   0x64006840
640046a0:	mov    esi,eax
640046a2:	mov    ecx,esi
640046a4:	add    esp,0xc
640046a7:	mov    DWORD PTR [ebp-0x10],0xf
640046ae:	mov    DWORD PTR [ebp-0x14],ebx
640046b1:	mov    BYTE PTR [ebp-0x24],bl
640046b4:	lea    edx,[ecx+0x1]
640046b7:	mov    al,BYTE PTR [ecx]
640046b9:	add    ecx,0x1
640046bc:	cmp    al,bl
640046be:	jne    0x640046b7
640046c0:	sub    ecx,edx
640046c2:	push   ecx
640046c3:	push   esi
640046c4:	lea    ecx,[ebp-0x28]
640046c7:	call   0x64001880
640046cc:	lea    ecx,[ebp-0x28]
640046cf:	push   ecx
640046d0:	lea    edx,[ebp-0x40]
640046d3:	push   edx
640046d4:	lea    eax,[ebp-0x34]
640046d7:	push   eax
640046d8:	mov    BYTE PTR [ebp-0x4],0x16
640046dc:	call   0x64006ef0
640046e1:	mov    BYTE PTR [ebp-0x4],0x2
640046e5:	cmp    DWORD PTR [ebp-0x10],edi
640046e8:	jb     0x640046f6
640046ea:	mov    ecx,DWORD PTR [ebp-0x24]
640046ed:	push   ecx
640046ee:	call   0x64013712
640046f3:	add    esp,0x4
640046f6:	push   0x64028eec
640046fb:	push   0x5
640046fd:	push   0x64028f1c
64004702:	call   0x64006840
64004707:	mov    esi,eax
64004709:	mov    ecx,esi
6400470b:	add    esp,0xc
6400470e:	mov    DWORD PTR [ebp-0x10],0xf
64004715:	mov    DWORD PTR [ebp-0x14],ebx
64004718:	mov    BYTE PTR [ebp-0x24],bl
6400471b:	lea    edx,[ecx+0x1]
6400471e:	mov    edi,edi
64004720:	mov    al,BYTE PTR [ecx]
64004722:	add    ecx,0x1
64004725:	cmp    al,bl
64004727:	jne    0x64004720
64004729:	sub    ecx,edx
6400472b:	push   ecx
6400472c:	push   esi
6400472d:	lea    ecx,[ebp-0x28]
64004730:	call   0x64001880
64004735:	lea    edx,[ebp-0x28]
64004738:	push   edx
64004739:	lea    eax,[ebp-0x40]
6400473c:	push   eax
6400473d:	lea    ecx,[ebp-0x34]
64004740:	push   ecx
64004741:	mov    BYTE PTR [ebp-0x4],0x17
64004745:	call   0x64006ef0
6400474a:	mov    BYTE PTR [ebp-0x4],0x2
6400474e:	cmp    DWORD PTR [ebp-0x10],edi
64004751:	jb     0x6400475f
64004753:	mov    edx,DWORD PTR [ebp-0x24]
64004756:	push   edx
64004757:	call   0x64013712
6400475c:	add    esp,0x4
6400475f:	push   0x64028f24
64004764:	push   0x8
64004766:	push   0x64028f64
6400476b:	call   0x64006840
64004770:	mov    esi,eax
64004772:	mov    ecx,esi
64004774:	add    esp,0xc
64004777:	mov    DWORD PTR [ebp-0x10],0xf
6400477e:	mov    DWORD PTR [ebp-0x14],ebx
64004781:	mov    BYTE PTR [ebp-0x24],bl
64004784:	lea    edx,[ecx+0x1]
64004787:	mov    al,BYTE PTR [ecx]
64004789:	add    ecx,0x1
6400478c:	cmp    al,bl
6400478e:	jne    0x64004787
64004790:	sub    ecx,edx
64004792:	push   ecx
64004793:	push   esi
64004794:	lea    ecx,[ebp-0x28]
64004797:	call   0x64001880
6400479c:	lea    eax,[ebp-0x28]
6400479f:	push   eax
640047a0:	lea    ecx,[ebp-0x40]
640047a3:	push   ecx
640047a4:	lea    edx,[ebp-0x34]
640047a7:	push   edx
640047a8:	mov    BYTE PTR [ebp-0x4],0x18
640047ac:	call   0x64006ef0
640047b1:	mov    BYTE PTR [ebp-0x4],0x2
640047b5:	cmp    DWORD PTR [ebp-0x10],edi
640047b8:	jb     0x640047c6
640047ba:	mov    eax,DWORD PTR [ebp-0x24]
640047bd:	push   eax
640047be:	call   0x64013712
640047c3:	add    esp,0x4
640047c6:	push   0x64028f70
640047cb:	push   0x8
640047cd:	push   0x64028fac
640047d2:	call   0x64006840
640047d7:	add    esp,0xc
640047da:	push   eax
640047db:	lea    ecx,[ebp-0x28]
640047de:	call   0x640026d0
640047e3:	lea    ecx,[ebp-0x28]
640047e6:	push   ecx
640047e7:	lea    edx,[ebp-0x40]
640047ea:	push   edx
640047eb:	lea    eax,[ebp-0x34]
640047ee:	push   eax
640047ef:	mov    BYTE PTR [ebp-0x4],0x19
640047f3:	call   0x64006ef0
640047f8:	mov    BYTE PTR [ebp-0x4],0x2
640047fc:	cmp    DWORD PTR [ebp-0x10],edi
640047ff:	jb     0x6400480d
64004801:	mov    ecx,DWORD PTR [ebp-0x24]
64004804:	push   ecx
64004805:	call   0x64013712
6400480a:	add    esp,0x4
6400480d:	push   0x64028fb8
64004812:	push   0x4
64004814:	push   0x64028fdc
64004819:	call   0x64006840
6400481e:	add    esp,0xc
64004821:	push   eax
64004822:	lea    ecx,[ebp-0x28]
64004825:	call   0x640026d0
6400482a:	lea    edx,[ebp-0x28]
6400482d:	push   edx
6400482e:	lea    eax,[ebp-0x40]
64004831:	push   eax
64004832:	lea    ecx,[ebp-0x34]
64004835:	push   ecx
64004836:	mov    BYTE PTR [ebp-0x4],0x1a
6400483a:	call   0x64006ef0
6400483f:	mov    BYTE PTR [ebp-0x4],0x2
64004843:	cmp    DWORD PTR [ebp-0x10],edi
64004846:	jb     0x64004854
64004848:	mov    edx,DWORD PTR [ebp-0x24]
6400484b:	push   edx
6400484c:	call   0x64013712
64004851:	add    esp,0x4
64004854:	push   0x64028fe4
64004859:	push   0xc
6400485b:	push   0x64029008
64004860:	call   0x64006840
64004865:	add    esp,0xc
64004868:	push   eax
64004869:	lea    ecx,[ebp-0x28]
6400486c:	call   0x640026d0
64004871:	lea    eax,[ebp-0x28]
64004874:	push   eax
64004875:	lea    ecx,[ebp-0x40]
64004878:	push   ecx
64004879:	lea    edx,[ebp-0x34]
6400487c:	push   edx
6400487d:	mov    BYTE PTR [ebp-0x4],0x1b
64004881:	call   0x64006ef0
64004886:	mov    BYTE PTR [ebp-0x4],0x2
6400488a:	cmp    DWORD PTR [ebp-0x10],edi
6400488d:	jb     0x6400489b
6400488f:	mov    eax,DWORD PTR [ebp-0x24]
64004892:	push   eax
64004893:	call   0x64013712
64004898:	add    esp,0x4
6400489b:	push   0x64029018
640048a0:	push   edi
640048a1:	push   0x64029050
640048a6:	call   0x64006840
640048ab:	add    esp,0xc
640048ae:	push   eax
640048af:	lea    ecx,[ebp-0x28]
640048b2:	call   0x640026d0
640048b7:	lea    ecx,[ebp-0x28]
640048ba:	push   ecx
640048bb:	lea    edx,[ebp-0x40]
640048be:	push   edx
640048bf:	lea    eax,[ebp-0x34]
640048c2:	push   eax
640048c3:	mov    BYTE PTR [ebp-0x4],0x1c
640048c7:	call   0x64006ef0
640048cc:	mov    BYTE PTR [ebp-0x4],0x2
640048d0:	cmp    DWORD PTR [ebp-0x10],edi
640048d3:	jb     0x640048e1
640048d5:	mov    ecx,DWORD PTR [ebp-0x24]
640048d8:	push   ecx
640048d9:	call   0x64013712
640048de:	add    esp,0x4
640048e1:	push   0x64029064
640048e6:	push   0x7
640048e8:	push   0x640290a4
640048ed:	call   0x64006840
640048f2:	add    esp,0xc
640048f5:	push   eax
640048f6:	lea    ecx,[ebp-0x28]
640048f9:	call   0x640026d0
640048fe:	lea    edx,[ebp-0x28]
64004901:	push   edx
64004902:	lea    eax,[ebp-0x40]
64004905:	push   eax
64004906:	lea    ecx,[ebp-0x34]
64004909:	push   ecx
6400490a:	mov    BYTE PTR [ebp-0x4],0x1d
6400490e:	call   0x64006ef0
64004913:	mov    BYTE PTR [ebp-0x4],0x2
64004917:	cmp    DWORD PTR [ebp-0x10],edi
6400491a:	jb     0x64004928
6400491c:	mov    edx,DWORD PTR [ebp-0x24]
6400491f:	push   edx
64004920:	call   0x64013712
64004925:	add    esp,0x4
64004928:	push   0x640290ac
6400492d:	push   0x9
6400492f:	push   0x640290d4
64004934:	call   0x64006840
64004939:	add    esp,0xc
6400493c:	push   eax
6400493d:	lea    ecx,[ebp-0x28]
64004940:	call   0x640026d0
64004945:	lea    eax,[ebp-0x28]
64004948:	push   eax
64004949:	lea    ecx,[ebp-0x40]
6400494c:	push   ecx
6400494d:	lea    edx,[ebp-0x34]
64004950:	push   edx
64004951:	mov    BYTE PTR [ebp-0x4],0x1e
64004955:	call   0x64006ef0
6400495a:	mov    BYTE PTR [ebp-0x4],0x2
6400495e:	cmp    DWORD PTR [ebp-0x10],edi
64004961:	jb     0x6400496f
64004963:	mov    eax,DWORD PTR [ebp-0x24]
64004966:	push   eax
64004967:	call   0x64013712
6400496c:	add    esp,0x4
6400496f:	push   0x640290e0
64004974:	push   0x7
64004976:	push   0x64029108
6400497b:	call   0x64006840
64004980:	add    esp,0xc
64004983:	push   eax
64004984:	lea    ecx,[ebp-0x28]
64004987:	call   0x640026d0
6400498c:	lea    ecx,[ebp-0x28]
6400498f:	push   ecx
64004990:	lea    edx,[ebp-0x40]
64004993:	push   edx
64004994:	lea    eax,[ebp-0x34]
64004997:	push   eax
64004998:	mov    BYTE PTR [ebp-0x4],0x1f
6400499c:	call   0x64006ef0
640049a1:	mov    BYTE PTR [ebp-0x4],0x2
640049a5:	cmp    DWORD PTR [ebp-0x10],edi
640049a8:	jb     0x640049b6
640049aa:	mov    ecx,DWORD PTR [ebp-0x24]
640049ad:	push   ecx
640049ae:	call   0x64013712
640049b3:	add    esp,0x4
640049b6:	push   0x64029110
640049bb:	push   0xb
640049bd:	push   0x64029134
640049c2:	call   0x64006840
640049c7:	add    esp,0xc
640049ca:	push   eax
640049cb:	lea    ecx,[ebp-0x28]
640049ce:	call   0x640026d0
640049d3:	lea    edx,[ebp-0x28]
640049d6:	push   edx
640049d7:	lea    eax,[ebp-0x40]
640049da:	push   eax
640049db:	lea    ecx,[ebp-0x34]
640049de:	push   ecx
640049df:	mov    BYTE PTR [ebp-0x4],0x20
640049e3:	call   0x64006ef0
640049e8:	mov    BYTE PTR [ebp-0x4],0x2
640049ec:	cmp    DWORD PTR [ebp-0x10],edi
640049ef:	jb     0x640049fd
640049f1:	mov    edx,DWORD PTR [ebp-0x24]
640049f4:	push   edx
640049f5:	call   0x64013712
640049fa:	add    esp,0x4
640049fd:	push   0x64029140
64004a02:	push   0x6
64004a04:	push   0x64029170
64004a09:	call   0x64006840
64004a0e:	add    esp,0xc
64004a11:	push   eax
64004a12:	lea    ecx,[ebp-0x28]
64004a15:	call   0x640026d0
64004a1a:	lea    eax,[ebp-0x28]
64004a1d:	push   eax
64004a1e:	lea    ecx,[ebp-0x40]
64004a21:	push   ecx
64004a22:	lea    edx,[ebp-0x34]
64004a25:	push   edx
64004a26:	mov    BYTE PTR [ebp-0x4],0x21
64004a2a:	call   0x64006ef0
64004a2f:	mov    BYTE PTR [ebp-0x4],0x2
64004a33:	cmp    DWORD PTR [ebp-0x10],edi
64004a36:	jb     0x64004a44
64004a38:	mov    eax,DWORD PTR [ebp-0x24]
64004a3b:	push   eax
64004a3c:	call   0x64013712
64004a41:	add    esp,0x4
64004a44:	push   0x64029178
64004a49:	push   0x6
64004a4b:	push   0x640291b4
64004a50:	call   0x64006840
64004a55:	add    esp,0xc
64004a58:	push   eax
64004a59:	lea    ecx,[ebp-0x28]
64004a5c:	call   0x640026d0
64004a61:	lea    ecx,[ebp-0x28]
64004a64:	push   ecx
64004a65:	lea    edx,[ebp-0x40]
64004a68:	push   edx
64004a69:	lea    eax,[ebp-0x34]
64004a6c:	push   eax
64004a6d:	mov    BYTE PTR [ebp-0x4],0x22
64004a71:	call   0x64006ef0
64004a76:	mov    BYTE PTR [ebp-0x4],0x2
64004a7a:	cmp    DWORD PTR [ebp-0x10],edi
64004a7d:	jb     0x64004a8b
64004a7f:	mov    ecx,DWORD PTR [ebp-0x24]
64004a82:	push   ecx
64004a83:	call   0x64013712
64004a88:	add    esp,0x4
64004a8b:	push   0x640291bc
64004a90:	push   0x7
64004a92:	push   0x640291f4
64004a97:	call   0x64006840
64004a9c:	add    esp,0xc
64004a9f:	push   eax
64004aa0:	lea    ecx,[ebp-0x28]
64004aa3:	call   0x640026d0
64004aa8:	lea    edx,[ebp-0x28]
64004aab:	push   edx
64004aac:	lea    eax,[ebp-0x40]
64004aaf:	push   eax
64004ab0:	lea    ecx,[ebp-0x34]
64004ab3:	push   ecx
64004ab4:	mov    BYTE PTR [ebp-0x4],0x23
64004ab8:	call   0x64006ef0
64004abd:	mov    BYTE PTR [ebp-0x4],0x2
64004ac1:	cmp    DWORD PTR [ebp-0x10],edi
64004ac4:	jb     0x64004ad2
64004ac6:	mov    edx,DWORD PTR [ebp-0x24]
64004ac9:	push   edx
64004aca:	call   0x64013712
64004acf:	add    esp,0x4
64004ad2:	push   0x640291fc
64004ad7:	push   0x9
64004ad9:	push   0x64029238
64004ade:	call   0x64006840
64004ae3:	add    esp,0xc
64004ae6:	push   eax
64004ae7:	lea    ecx,[ebp-0x28]
64004aea:	call   0x640026d0
64004aef:	lea    eax,[ebp-0x28]
64004af2:	push   eax
64004af3:	lea    ecx,[ebp-0x40]
64004af6:	push   ecx
64004af7:	lea    edx,[ebp-0x34]
64004afa:	push   edx
64004afb:	mov    BYTE PTR [ebp-0x4],0x24
64004aff:	call   0x64006ef0
64004b04:	mov    BYTE PTR [ebp-0x4],0x2
64004b08:	cmp    DWORD PTR [ebp-0x10],edi
64004b0b:	jb     0x64004b19
64004b0d:	mov    eax,DWORD PTR [ebp-0x24]
64004b10:	push   eax
64004b11:	call   0x64013712
64004b16:	add    esp,0x4
64004b19:	push   0x64029244
64004b1e:	push   0x7
64004b20:	push   0x64029284
64004b25:	call   0x64006840
64004b2a:	add    esp,0xc
64004b2d:	push   eax
64004b2e:	lea    ecx,[ebp-0x28]
64004b31:	call   0x640026d0
64004b36:	lea    ecx,[ebp-0x28]
64004b39:	push   ecx
64004b3a:	lea    edx,[ebp-0x40]
64004b3d:	push   edx
64004b3e:	lea    eax,[ebp-0x34]
64004b41:	push   eax
64004b42:	mov    BYTE PTR [ebp-0x4],0x25
64004b46:	call   0x64006ef0
64004b4b:	mov    BYTE PTR [ebp-0x4],0x2
64004b4f:	cmp    DWORD PTR [ebp-0x10],edi
64004b52:	jb     0x64004b60
64004b54:	mov    ecx,DWORD PTR [ebp-0x24]
64004b57:	push   ecx
64004b58:	call   0x64013712
64004b5d:	add    esp,0x4
64004b60:	push   0x6402928c
64004b65:	push   0x6
64004b67:	push   0x640292b8
64004b6c:	call   0x64006840
64004b71:	add    esp,0xc
64004b74:	push   eax
64004b75:	lea    ecx,[ebp-0x28]
64004b78:	call   0x640026d0
64004b7d:	lea    edx,[ebp-0x28]
64004b80:	push   edx
64004b81:	lea    eax,[ebp-0x40]
64004b84:	push   eax
64004b85:	lea    ecx,[ebp-0x34]
64004b88:	push   ecx
64004b89:	mov    BYTE PTR [ebp-0x4],0x26
64004b8d:	call   0x64006ef0
64004b92:	mov    BYTE PTR [ebp-0x4],0x2
64004b96:	cmp    DWORD PTR [ebp-0x10],edi
64004b99:	jb     0x64004ba7
64004b9b:	mov    edx,DWORD PTR [ebp-0x24]
64004b9e:	push   edx
64004b9f:	call   0x64013712
64004ba4:	add    esp,0x4
64004ba7:	push   0x640292c0
64004bac:	push   0x8
64004bae:	push   0x640292e8
64004bb3:	call   0x64006840
64004bb8:	add    esp,0xc
64004bbb:	push   eax
64004bbc:	lea    ecx,[ebp-0x28]
64004bbf:	call   0x640026d0
64004bc4:	lea    eax,[ebp-0x28]
64004bc7:	push   eax
64004bc8:	lea    ecx,[ebp-0x40]
64004bcb:	push   ecx
64004bcc:	lea    edx,[ebp-0x34]
64004bcf:	push   edx
64004bd0:	mov    BYTE PTR [ebp-0x4],0x27
64004bd4:	call   0x64006ef0
64004bd9:	mov    BYTE PTR [ebp-0x4],0x2
64004bdd:	cmp    DWORD PTR [ebp-0x10],edi
64004be0:	jb     0x64004bee
64004be2:	mov    eax,DWORD PTR [ebp-0x24]
64004be5:	push   eax
64004be6:	call   0x64013712
64004beb:	add    esp,0x4
64004bee:	push   0x640292f4
64004bf3:	push   0x6
64004bf5:	push   0x64029328
64004bfa:	call   0x64006840
64004bff:	add    esp,0xc
64004c02:	push   eax
64004c03:	lea    ecx,[ebp-0x28]
64004c06:	call   0x640026d0
64004c0b:	lea    ecx,[ebp-0x28]
64004c0e:	push   ecx
64004c0f:	lea    edx,[ebp-0x40]
64004c12:	push   edx
64004c13:	lea    eax,[ebp-0x34]
64004c16:	push   eax
64004c17:	mov    BYTE PTR [ebp-0x4],0x28
64004c1b:	call   0x64006ef0
64004c20:	mov    BYTE PTR [ebp-0x4],0x2
64004c24:	cmp    DWORD PTR [ebp-0x10],edi
64004c27:	jb     0x64004c35
64004c29:	mov    ecx,DWORD PTR [ebp-0x24]
64004c2c:	push   ecx
64004c2d:	call   0x64013712
64004c32:	add    esp,0x4
64004c35:	lea    edx,[ebp-0x40]
64004c38:	push   edx
64004c39:	lea    ecx,[ebp-0x34]
64004c3c:	call   0x64003bb0
64004c41:	add    esp,0x4
64004c44:	mov    ecx,0x640334d4
64004c49:	mov    BYTE PTR [ebp-0x4],0x29
64004c4d:	call   0x64006eb0
64004c52:	lea    eax,[ebp-0x40]
64004c55:	mov    BYTE PTR [ebp-0x4],0x2
64004c59:	call   0x640078d0
64004c5e:	lea    eax,[ebp-0x34]
64004c61:	mov    BYTE PTR [ebp-0x4],bl
64004c64:	call   0x640078d0
64004c69:	call   DWORD PTR ds:0x6402f06c
64004c6f:	mov    edi,DWORD PTR [ebp+0x40c]
64004c75:	cmp    DWORD PTR [edi-0x4],0x1
64004c79:	mov    DWORD PTR [ebp-0x48],eax
64004c7c:	jle    0x64004c93
64004c7e:	mov    eax,DWORD PTR [edi-0xc]
64004c81:	push   eax
64004c82:	lea    ecx,[ebp+0x40c]
64004c88:	call   0x64001950
64004c8d:	mov    edi,DWORD PTR [ebp+0x40c]
64004c93:	cmp    edi,ebx
64004c95:	jne    0x64004c9b
64004c97:	xor    eax,eax
64004c99:	jmp    0x64004cc8
64004c9b:	push   edi
64004c9c:	call   DWORD PTR ds:0x64026054
64004ca2:	add    eax,0x1
64004ca5:	cmp    eax,0x3fffffff
64004caa:	jle    0x64004cb0
64004cac:	xor    eax,eax
64004cae:	jmp    0x64004cc8
64004cb0:	lea    esi,[eax+eax*1]
64004cb3:	mov    eax,esi
64004cb5:	call   0x640146f0
64004cba:	mov    ecx,DWORD PTR [ebp-0x48]
64004cbd:	mov    eax,esp
64004cbf:	push   ecx
64004cc0:	push   esi
64004cc1:	push   edi
64004cc2:	push   eax
64004cc3:	call   0x64002b40
64004cc8:	lea    edx,[ebp+0x0]
64004ccb:	jmp    0x64004cd0
64004ccd:	lea    ecx,[ecx+0x0]
64004cd0:	mov    cl,BYTE PTR [eax]
64004cd2:	mov    BYTE PTR [edx],cl
64004cd4:	add    eax,0x1
64004cd7:	add    edx,0x1
64004cda:	cmp    cl,bl
64004cdc:	jne    0x64004cd0
64004cde:	lea    edx,[ebp+0x0]
64004ce1:	push   edx
64004ce2:	call   0x64020395
64004ce7:	add    esp,0x4
64004cea:	lea    eax,[ebp+0x0]
64004ced:	push   eax
64004cee:	lea    ecx,[ebp-0x28]
64004cf1:	call   0x640026d0
64004cf6:	lea    eax,[ebp-0x28]
64004cf9:	mov    esi,0x640334d4
64004cfe:	mov    BYTE PTR [ebp-0x4],0x2a
64004d02:	call   0x64007080
64004d07:	test   eax,eax
64004d09:	setne  BYTE PTR [ebp-0x41]
64004d0d:	cmp    DWORD PTR [ebp-0x10],0x10
64004d11:	jb     0x64004d1f
64004d13:	mov    ecx,DWORD PTR [ebp-0x24]
64004d16:	push   ecx
64004d17:	call   0x64013712
64004d1c:	add    esp,0x4
64004d1f:	lea    eax,[edi-0x10]
64004d22:	mov    DWORD PTR [ebp-0x10],0xf
64004d29:	mov    DWORD PTR [ebp-0x14],ebx
64004d2c:	mov    BYTE PTR [ebp-0x24],bl
64004d2f:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004d36:	lea    edx,[eax+0xc]
64004d39:	or     ecx,0xffffffff
64004d3c:	lock xadd DWORD PTR [edx],ecx
64004d40:	dec    ecx
64004d41:	test   ecx,ecx
64004d43:	jg     0x64004d4f
64004d45:	mov    ecx,DWORD PTR [eax]
64004d47:	mov    edx,DWORD PTR [ecx]
64004d49:	push   eax
64004d4a:	mov    eax,DWORD PTR [edx+0x4]
64004d4d:	call   eax
64004d4f:	mov    al,BYTE PTR [ebp-0x41]
64004d52:	lea    esp,[ebp-0x58]
64004d55:	mov    ecx,DWORD PTR [ebp-0xc]
64004d58:	mov    DWORD PTR fs:0x0,ecx
64004d5f:	pop    ecx
64004d60:	pop    edi
64004d61:	pop    esi
64004d62:	pop    ebx
64004d63:	mov    ecx,DWORD PTR [ebp+0x400]
64004d69:	xor    ecx,ebp
64004d6b:	call   0x64013f6c
64004d70:	add    ebp,0x404
64004d76:	mov    esp,ebp
64004d78:	pop    ebp
64004d79:	ret    
64004d7a:	int3   
64004d7b:	int3   
64004d7c:	int3   
64004d7d:	int3   
64004d7e:	int3   
64004d7f:	int3   
64004d80:	push   ebp
64004d81:	lea    ebp,[esp-0x404]
64004d88:	sub    esp,0x404
64004d8e:	push   0xffffffff
64004d90:	push   0x64025061
64004d95:	mov    eax,fs:0x0
64004d9b:	push   eax
64004d9c:	sub    esp,0x3c
64004d9f:	mov    eax,ds:0x6402f09c
64004da4:	xor    eax,ebp
64004da6:	mov    DWORD PTR [ebp+0x400],eax
64004dac:	push   ebx
64004dad:	push   esi
64004dae:	push   edi
64004daf:	push   eax
64004db0:	lea    eax,[ebp-0xc]
64004db3:	mov    fs:0x0,eax
64004db9:	xor    ebx,ebx
64004dbb:	mov    DWORD PTR [ebp-0x4],ebx
64004dbe:	test   BYTE PTR ds:0x640334d0,0x1
64004dc5:	jne    0x64004e0d
64004dc7:	or     DWORD PTR ds:0x640334d0,0x1
64004dce:	mov    BYTE PTR [ebp-0x4],0x1
64004dd2:	call   0x64008200
64004dd7:	mov    ds:0x640334c8,eax
64004ddc:	mov    BYTE PTR [eax+0x29],0x1
64004de0:	mov    eax,ds:0x640334c8
64004de5:	mov    DWORD PTR [eax+0x4],eax
64004de8:	mov    eax,ds:0x640334c8
64004ded:	mov    DWORD PTR [eax],eax
64004def:	mov    eax,ds:0x640334c8
64004df4:	mov    DWORD PTR [eax+0x8],eax
64004df7:	push   0x640256e0
64004dfc:	mov    DWORD PTR ds:0x640334cc,ebx
64004e02:	call   0x6401409f
64004e07:	add    esp,0x4
64004e0a:	mov    BYTE PTR [ebp-0x4],bl
64004e0d:	cmp    DWORD PTR ds:0x640334cc,ebx
64004e13:	jne    0x64005fbc
64004e19:	call   0x64008200
64004e1e:	mov    DWORD PTR [ebp-0x30],eax
64004e21:	mov    BYTE PTR [eax+0x29],0x1
64004e25:	mov    eax,DWORD PTR [ebp-0x30]
64004e28:	mov    DWORD PTR [eax+0x4],eax
64004e2b:	mov    eax,DWORD PTR [ebp-0x30]
64004e2e:	mov    DWORD PTR [eax],eax
64004e30:	mov    eax,DWORD PTR [ebp-0x30]
64004e33:	mov    DWORD PTR [eax+0x8],eax
64004e36:	mov    DWORD PTR [ebp-0x2c],ebx
64004e39:	push   0x64029330
64004e3e:	push   0xd
64004e40:	push   0x64029364
64004e45:	mov    BYTE PTR [ebp-0x4],0x2
64004e49:	call   0x64006840
64004e4e:	mov    esi,eax
64004e50:	mov    ecx,esi
64004e52:	add    esp,0xc
64004e55:	mov    DWORD PTR [ebp-0x10],0xf
64004e5c:	mov    DWORD PTR [ebp-0x14],ebx
64004e5f:	mov    BYTE PTR [ebp-0x24],bl
64004e62:	lea    edi,[ecx+0x1]
64004e65:	mov    al,BYTE PTR [ecx]
64004e67:	add    ecx,0x1
64004e6a:	cmp    al,bl
64004e6c:	jne    0x64004e65
64004e6e:	sub    ecx,edi
64004e70:	push   ecx
64004e71:	push   esi
64004e72:	lea    ecx,[ebp-0x28]
64004e75:	call   0x64001880
64004e7a:	lea    eax,[ebp-0x28]
64004e7d:	push   eax
64004e7e:	lea    ecx,[ebp-0x40]
64004e81:	push   ecx
64004e82:	lea    edx,[ebp-0x34]
64004e85:	push   edx
64004e86:	mov    BYTE PTR [ebp-0x4],0x3
64004e8a:	call   0x64006ef0
64004e8f:	mov    BYTE PTR [ebp-0x4],0x2
64004e93:	cmp    DWORD PTR [ebp-0x10],0x10
64004e97:	jb     0x64004ea5
64004e99:	mov    eax,DWORD PTR [ebp-0x24]
64004e9c:	push   eax
64004e9d:	call   0x64013712
64004ea2:	add    esp,0x4
64004ea5:	push   0x64029374
64004eaa:	push   0x5
64004eac:	push   0x6402939c
64004eb1:	call   0x64006840
64004eb6:	mov    esi,eax
64004eb8:	mov    ecx,esi
64004eba:	add    esp,0xc
64004ebd:	mov    DWORD PTR [ebp-0x10],0xf
64004ec4:	mov    DWORD PTR [ebp-0x14],ebx
64004ec7:	mov    BYTE PTR [ebp-0x24],bl
64004eca:	lea    edx,[ecx+0x1]
64004ecd:	lea    ecx,[ecx+0x0]
64004ed0:	mov    al,BYTE PTR [ecx]
64004ed2:	add    ecx,0x1
64004ed5:	cmp    al,bl
64004ed7:	jne    0x64004ed0
64004ed9:	sub    ecx,edx
64004edb:	push   ecx
64004edc:	push   esi
64004edd:	lea    ecx,[ebp-0x28]
64004ee0:	call   0x64001880
64004ee5:	lea    ecx,[ebp-0x28]
64004ee8:	push   ecx
64004ee9:	lea    edx,[ebp-0x40]
64004eec:	push   edx
64004eed:	lea    eax,[ebp-0x34]
64004ef0:	push   eax
64004ef1:	mov    BYTE PTR [ebp-0x4],0x4
64004ef5:	call   0x64006ef0
64004efa:	mov    edi,0x10
64004eff:	mov    BYTE PTR [ebp-0x4],0x2
64004f03:	cmp    DWORD PTR [ebp-0x10],edi
64004f06:	jb     0x64004f14
64004f08:	mov    ecx,DWORD PTR [ebp-0x24]
64004f0b:	push   ecx
64004f0c:	call   0x64013712
64004f11:	add    esp,0x4
64004f14:	push   0x640293a4
64004f19:	push   0x5
64004f1b:	push   0x640293e0
64004f20:	call   0x64006840
64004f25:	mov    esi,eax
64004f27:	mov    ecx,esi
64004f29:	add    esp,0xc
64004f2c:	mov    DWORD PTR [ebp-0x10],0xf
64004f33:	mov    DWORD PTR [ebp-0x14],ebx
64004f36:	mov    BYTE PTR [ebp-0x24],bl
64004f39:	lea    edx,[ecx+0x1]
64004f3c:	lea    esp,[esp+0x0]
64004f40:	mov    al,BYTE PTR [ecx]
64004f42:	add    ecx,0x1
64004f45:	cmp    al,bl
64004f47:	jne    0x64004f40
64004f49:	sub    ecx,edx
64004f4b:	push   ecx
64004f4c:	push   esi
64004f4d:	lea    ecx,[ebp-0x28]
64004f50:	call   0x64001880
64004f55:	lea    edx,[ebp-0x28]
64004f58:	push   edx
64004f59:	lea    eax,[ebp-0x40]
64004f5c:	push   eax
64004f5d:	lea    ecx,[ebp-0x34]
64004f60:	push   ecx
64004f61:	mov    BYTE PTR [ebp-0x4],0x5
64004f65:	call   0x64006ef0
64004f6a:	mov    BYTE PTR [ebp-0x4],0x2
64004f6e:	cmp    DWORD PTR [ebp-0x10],edi
64004f71:	jb     0x64004f7f
64004f73:	mov    edx,DWORD PTR [ebp-0x24]
64004f76:	push   edx
64004f77:	call   0x64013712
64004f7c:	add    esp,0x4
64004f7f:	push   0x640293e8
64004f84:	push   0x11
64004f86:	push   0x64029424
64004f8b:	call   0x64006840
64004f90:	mov    esi,eax
64004f92:	mov    ecx,esi
64004f94:	add    esp,0xc
64004f97:	mov    DWORD PTR [ebp-0x10],0xf
64004f9e:	mov    DWORD PTR [ebp-0x14],ebx
64004fa1:	mov    BYTE PTR [ebp-0x24],bl
64004fa4:	lea    edx,[ecx+0x1]
64004fa7:	mov    al,BYTE PTR [ecx]
64004fa9:	add    ecx,0x1
64004fac:	cmp    al,bl
64004fae:	jne    0x64004fa7
64004fb0:	sub    ecx,edx
64004fb2:	push   ecx
64004fb3:	push   esi
64004fb4:	lea    ecx,[ebp-0x28]
64004fb7:	call   0x64001880
64004fbc:	lea    eax,[ebp-0x28]
64004fbf:	push   eax
64004fc0:	lea    ecx,[ebp-0x40]
64004fc3:	push   ecx
64004fc4:	lea    edx,[ebp-0x34]
64004fc7:	push   edx
64004fc8:	mov    BYTE PTR [ebp-0x4],0x6
64004fcc:	call   0x64006ef0
64004fd1:	mov    BYTE PTR [ebp-0x4],0x2
64004fd5:	cmp    DWORD PTR [ebp-0x10],edi
64004fd8:	jb     0x64004fe6
64004fda:	mov    eax,DWORD PTR [ebp-0x24]
64004fdd:	push   eax
64004fde:	call   0x64013712
64004fe3:	add    esp,0x4
64004fe6:	push   0x64029438
64004feb:	push   0x6
64004fed:	push   0x64029460
64004ff2:	call   0x64006840
64004ff7:	mov    esi,eax
64004ff9:	mov    ecx,esi
64004ffb:	add    esp,0xc
64004ffe:	mov    DWORD PTR [ebp-0x10],0xf
64005005:	mov    DWORD PTR [ebp-0x14],ebx
64005008:	mov    BYTE PTR [ebp-0x24],bl
6400500b:	lea    edx,[ecx+0x1]
6400500e:	mov    edi,edi
64005010:	mov    al,BYTE PTR [ecx]
64005012:	add    ecx,0x1
64005015:	cmp    al,bl
64005017:	jne    0x64005010
64005019:	sub    ecx,edx
6400501b:	push   ecx
6400501c:	push   esi
6400501d:	lea    ecx,[ebp-0x28]
64005020:	call   0x64001880
64005025:	lea    ecx,[ebp-0x28]
64005028:	push   ecx
64005029:	lea    edx,[ebp-0x40]
6400502c:	push   edx
6400502d:	lea    eax,[ebp-0x34]
64005030:	push   eax
64005031:	mov    BYTE PTR [ebp-0x4],0x7
64005035:	call   0x64006ef0
6400503a:	mov    BYTE PTR [ebp-0x4],0x2
6400503e:	cmp    DWORD PTR [ebp-0x10],edi
64005041:	jb     0x6400504f
64005043:	mov    ecx,DWORD PTR [ebp-0x24]
64005046:	push   ecx
64005047:	call   0x64013712
6400504c:	add    esp,0x4
6400504f:	push   0x64029468
64005054:	push   0x3
64005056:	push   0x64029490
6400505b:	call   0x64006840
64005060:	mov    esi,eax
64005062:	mov    ecx,esi
64005064:	add    esp,0xc
64005067:	mov    DWORD PTR [ebp-0x10],0xf
6400506e:	mov    DWORD PTR [ebp-0x14],ebx
64005071:	mov    BYTE PTR [ebp-0x24],bl
64005074:	lea    edx,[ecx+0x1]
64005077:	mov    al,BYTE PTR [ecx]
64005079:	add    ecx,0x1
6400507c:	cmp    al,bl
6400507e:	jne    0x64005077
64005080:	sub    ecx,edx
64005082:	push   ecx
64005083:	push   esi
64005084:	lea    ecx,[ebp-0x28]
64005087:	call   0x64001880
6400508c:	lea    edx,[ebp-0x28]
6400508f:	push   edx
64005090:	lea    eax,[ebp-0x40]
64005093:	push   eax
64005094:	lea    ecx,[ebp-0x34]
64005097:	push   ecx
64005098:	mov    BYTE PTR [ebp-0x4],0x8
6400509c:	call   0x64006ef0
640050a1:	mov    BYTE PTR [ebp-0x4],0x2
640050a5:	cmp    DWORD PTR [ebp-0x10],edi
640050a8:	jb     0x640050b6
640050aa:	mov    edx,DWORD PTR [ebp-0x24]
640050ad:	push   edx
640050ae:	call   0x64013712
640050b3:	add    esp,0x4
640050b6:	push   0x64029494
640050bb:	push   0x3
640050bd:	push   0x640294b8
640050c2:	call   0x64006840
640050c7:	mov    esi,eax
640050c9:	mov    ecx,esi
640050cb:	add    esp,0xc
640050ce:	mov    DWORD PTR [ebp-0x10],0xf
640050d5:	mov    DWORD PTR [ebp-0x14],ebx
640050d8:	mov    BYTE PTR [ebp-0x24],bl
640050db:	lea    edx,[ecx+0x1]
640050de:	mov    edi,edi
640050e0:	mov    al,BYTE PTR [ecx]
640050e2:	add    ecx,0x1
640050e5:	cmp    al,bl
640050e7:	jne    0x640050e0
640050e9:	sub    ecx,edx
640050eb:	push   ecx
640050ec:	push   esi
640050ed:	lea    ecx,[ebp-0x28]
640050f0:	call   0x64001880
640050f5:	lea    eax,[ebp-0x28]
640050f8:	push   eax
640050f9:	lea    ecx,[ebp-0x40]
640050fc:	push   ecx
640050fd:	lea    edx,[ebp-0x34]
64005100:	push   edx
64005101:	mov    BYTE PTR [ebp-0x4],0x9
64005105:	call   0x64006ef0
6400510a:	mov    BYTE PTR [ebp-0x4],0x2
6400510e:	cmp    DWORD PTR [ebp-0x10],edi
64005111:	jb     0x6400511f
64005113:	mov    eax,DWORD PTR [ebp-0x24]
64005116:	push   eax
64005117:	call   0x64013712
6400511c:	add    esp,0x4
6400511f:	push   0x640294bc
64005124:	push   0x3
64005126:	push   0x640294e0
6400512b:	call   0x64006840
64005130:	mov    esi,eax
64005132:	mov    ecx,esi
64005134:	add    esp,0xc
64005137:	mov    DWORD PTR [ebp-0x10],0xf
6400513e:	mov    DWORD PTR [ebp-0x14],ebx
64005141:	mov    BYTE PTR [ebp-0x24],bl
64005144:	lea    edx,[ecx+0x1]
64005147:	mov    al,BYTE PTR [ecx]
64005149:	add    ecx,0x1
6400514c:	cmp    al,bl
6400514e:	jne    0x64005147
64005150:	sub    ecx,edx
64005152:	push   ecx
64005153:	push   esi
64005154:	lea    ecx,[ebp-0x28]
64005157:	call   0x64001880
6400515c:	lea    ecx,[ebp-0x28]
6400515f:	push   ecx
64005160:	lea    edx,[ebp-0x40]
64005163:	push   edx
64005164:	lea    eax,[ebp-0x34]
64005167:	push   eax
64005168:	mov    BYTE PTR [ebp-0x4],0xa
6400516c:	call   0x64006ef0
64005171:	mov    BYTE PTR [ebp-0x4],0x2
64005175:	cmp    DWORD PTR [ebp-0x10],edi
64005178:	jb     0x64005186
6400517a:	mov    ecx,DWORD PTR [ebp-0x24]
6400517d:	push   ecx
6400517e:	call   0x64013712
64005183:	add    esp,0x4
64005186:	push   0x640294e4
6400518b:	push   0x4
6400518d:	push   0x64029514
64005192:	call   0x64006840
64005197:	mov    esi,eax
64005199:	mov    ecx,esi
6400519b:	add    esp,0xc
6400519e:	mov    DWORD PTR [ebp-0x10],0xf
640051a5:	mov    DWORD PTR [ebp-0x14],ebx
640051a8:	mov    BYTE PTR [ebp-0x24],bl
640051ab:	lea    edx,[ecx+0x1]
640051ae:	mov    edi,edi
640051b0:	mov    al,BYTE PTR [ecx]
640051b2:	add    ecx,0x1
640051b5:	cmp    al,bl
640051b7:	jne    0x640051b0
640051b9:	sub    ecx,edx
640051bb:	push   ecx
640051bc:	push   esi
640051bd:	lea    ecx,[ebp-0x28]
640051c0:	call   0x64001880
640051c5:	lea    edx,[ebp-0x28]
640051c8:	push   edx
640051c9:	lea    eax,[ebp-0x40]
640051cc:	push   eax
640051cd:	lea    ecx,[ebp-0x34]
640051d0:	push   ecx
640051d1:	mov    BYTE PTR [ebp-0x4],0xb
640051d5:	call   0x64006ef0
640051da:	mov    BYTE PTR [ebp-0x4],0x2
640051de:	cmp    DWORD PTR [ebp-0x10],edi
640051e1:	jb     0x640051ef
640051e3:	mov    edx,DWORD PTR [ebp-0x24]
640051e6:	push   edx
640051e7:	call   0x64013712
640051ec:	add    esp,0x4
640051ef:	push   0x6402951c
640051f4:	push   0x5
640051f6:	push   0x64029550
640051fb:	call   0x64006840
64005200:	mov    esi,eax
64005202:	mov    ecx,esi
64005204:	add    esp,0xc
64005207:	mov    DWORD PTR [ebp-0x10],0xf
6400520e:	mov    DWORD PTR [ebp-0x14],ebx
64005211:	mov    BYTE PTR [ebp-0x24],bl
64005214:	lea    edx,[ecx+0x1]
64005217:	mov    al,BYTE PTR [ecx]
64005219:	add    ecx,0x1
6400521c:	cmp    al,bl
6400521e:	jne    0x64005217
64005220:	sub    ecx,edx
64005222:	push   ecx
64005223:	push   esi
64005224:	lea    ecx,[ebp-0x28]
64005227:	call   0x64001880
6400522c:	lea    eax,[ebp-0x28]
6400522f:	push   eax
64005230:	lea    ecx,[ebp-0x40]
64005233:	push   ecx
64005234:	lea    edx,[ebp-0x34]
64005237:	push   edx
64005238:	mov    BYTE PTR [ebp-0x4],0xc
6400523c:	call   0x64006ef0
64005241:	mov    BYTE PTR [ebp-0x4],0x2
64005245:	cmp    DWORD PTR [ebp-0x10],edi
64005248:	jb     0x64005256
6400524a:	mov    eax,DWORD PTR [ebp-0x24]
6400524d:	push   eax
6400524e:	call   0x64013712
64005253:	add    esp,0x4
64005256:	push   0x64029558
6400525b:	push   0x8
6400525d:	push   0x64029594
64005262:	call   0x64006840
64005267:	mov    esi,eax
64005269:	mov    ecx,esi
6400526b:	add    esp,0xc
6400526e:	mov    DWORD PTR [ebp-0x10],0xf
64005275:	mov    DWORD PTR [ebp-0x14],ebx
64005278:	mov    BYTE PTR [ebp-0x24],bl
6400527b:	lea    edx,[ecx+0x1]
6400527e:	mov    edi,edi
64005280:	mov    al,BYTE PTR [ecx]
64005282:	add    ecx,0x1
64005285:	cmp    al,bl
64005287:	jne    0x64005280
64005289:	sub    ecx,edx
6400528b:	push   ecx
6400528c:	push   esi
6400528d:	lea    ecx,[ebp-0x28]
64005290:	call   0x64001880
64005295:	lea    ecx,[ebp-0x28]
64005298:	push   ecx
64005299:	lea    edx,[ebp-0x40]
6400529c:	push   edx
6400529d:	lea    eax,[ebp-0x34]
640052a0:	push   eax
640052a1:	mov    BYTE PTR [ebp-0x4],0xd
640052a5:	call   0x64006ef0
640052aa:	mov    BYTE PTR [ebp-0x4],0x2
640052ae:	cmp    DWORD PTR [ebp-0x10],edi
640052b1:	jb     0x640052bf
640052b3:	mov    ecx,DWORD PTR [ebp-0x24]
640052b6:	push   ecx
640052b7:	call   0x64013712
640052bc:	add    esp,0x4
640052bf:	push   0x640295a0
640052c4:	push   0x4
640052c6:	push   0x640295d8
640052cb:	call   0x64006840
640052d0:	mov    esi,eax
640052d2:	mov    ecx,esi
640052d4:	add    esp,0xc
640052d7:	mov    DWORD PTR [ebp-0x10],0xf
640052de:	mov    DWORD PTR [ebp-0x14],ebx
640052e1:	mov    BYTE PTR [ebp-0x24],bl
640052e4:	lea    edx,[ecx+0x1]
640052e7:	mov    al,BYTE PTR [ecx]
640052e9:	add    ecx,0x1
640052ec:	cmp    al,bl
640052ee:	jne    0x640052e7
640052f0:	sub    ecx,edx
640052f2:	push   ecx
640052f3:	push   esi
640052f4:	lea    ecx,[ebp-0x28]
640052f7:	call   0x64001880
640052fc:	lea    edx,[ebp-0x28]
640052ff:	push   edx
64005300:	lea    eax,[ebp-0x40]
64005303:	push   eax
64005304:	lea    ecx,[ebp-0x34]
64005307:	push   ecx
64005308:	mov    BYTE PTR [ebp-0x4],0xe
6400530c:	call   0x64006ef0
64005311:	mov    BYTE PTR [ebp-0x4],0x2
64005315:	cmp    DWORD PTR [ebp-0x10],edi
64005318:	jb     0x64005326
6400531a:	mov    edx,DWORD PTR [ebp-0x24]
6400531d:	push   edx
6400531e:	call   0x64013712
64005323:	add    esp,0x4
64005326:	push   0x640295e0
6400532b:	push   0x5
6400532d:	push   0x6402961c
64005332:	call   0x64006840
64005337:	mov    esi,eax
64005339:	mov    ecx,esi
6400533b:	add    esp,0xc
6400533e:	mov    DWORD PTR [ebp-0x10],0xf
64005345:	mov    DWORD PTR [ebp-0x14],ebx
64005348:	mov    BYTE PTR [ebp-0x24],bl
6400534b:	lea    edx,[ecx+0x1]
6400534e:	mov    edi,edi
64005350:	mov    al,BYTE PTR [ecx]
64005352:	add    ecx,0x1
64005355:	cmp    al,bl
64005357:	jne    0x64005350
64005359:	sub    ecx,edx
6400535b:	push   ecx
6400535c:	push   esi
6400535d:	lea    ecx,[ebp-0x28]
64005360:	call   0x64001880
64005365:	lea    eax,[ebp-0x28]
64005368:	push   eax
64005369:	lea    ecx,[ebp-0x40]
6400536c:	push   ecx
6400536d:	lea    edx,[ebp-0x34]
64005370:	push   edx
64005371:	mov    BYTE PTR [ebp-0x4],0xf
64005375:	call   0x64006ef0
6400537a:	mov    BYTE PTR [ebp-0x4],0x2
6400537e:	cmp    DWORD PTR [ebp-0x10],edi
64005381:	jb     0x6400538f
64005383:	mov    eax,DWORD PTR [ebp-0x24]
64005386:	push   eax
64005387:	call   0x64013712
6400538c:	add    esp,0x4
6400538f:	push   0x64029624
64005394:	push   0x5
64005396:	push   0x64029658
6400539b:	call   0x64006840
640053a0:	mov    esi,eax
640053a2:	mov    ecx,esi
640053a4:	add    esp,0xc
640053a7:	mov    DWORD PTR [ebp-0x10],0xf
640053ae:	mov    DWORD PTR [ebp-0x14],ebx
640053b1:	mov    BYTE PTR [ebp-0x24],bl
640053b4:	lea    edx,[ecx+0x1]
640053b7:	mov    al,BYTE PTR [ecx]
640053b9:	add    ecx,0x1
640053bc:	cmp    al,bl
640053be:	jne    0x640053b7
640053c0:	sub    ecx,edx
640053c2:	push   ecx
640053c3:	push   esi
640053c4:	lea    ecx,[ebp-0x28]
640053c7:	call   0x64001880
640053cc:	lea    ecx,[ebp-0x28]
640053cf:	push   ecx
640053d0:	lea    edx,[ebp-0x40]
640053d3:	push   edx
640053d4:	lea    eax,[ebp-0x34]
640053d7:	push   eax
640053d8:	mov    BYTE PTR [ebp-0x4],0x10
640053dc:	call   0x64006ef0
640053e1:	mov    BYTE PTR [ebp-0x4],0x2
640053e5:	cmp    DWORD PTR [ebp-0x10],edi
640053e8:	jb     0x640053f6
640053ea:	mov    ecx,DWORD PTR [ebp-0x24]
640053ed:	push   ecx
640053ee:	call   0x64013712
640053f3:	add    esp,0x4
640053f6:	push   0x64029660
640053fb:	push   0x4
640053fd:	push   0x6402968c
64005402:	call   0x64006840
64005407:	mov    esi,eax
64005409:	mov    ecx,esi
6400540b:	add    esp,0xc
6400540e:	mov    DWORD PTR [ebp-0x10],0xf
64005415:	mov    DWORD PTR [ebp-0x14],ebx
64005418:	mov    BYTE PTR [ebp-0x24],bl
6400541b:	lea    edx,[ecx+0x1]
6400541e:	mov    edi,edi
64005420:	mov    al,BYTE PTR [ecx]
64005422:	add    ecx,0x1
64005425:	cmp    al,bl
64005427:	jne    0x64005420
64005429:	sub    ecx,edx
6400542b:	push   ecx
6400542c:	push   esi
6400542d:	lea    ecx,[ebp-0x28]
64005430:	call   0x64001880
64005435:	lea    edx,[ebp-0x28]
64005438:	push   edx
64005439:	lea    eax,[ebp-0x40]
6400543c:	push   eax
6400543d:	lea    ecx,[ebp-0x34]
64005440:	push   ecx
64005441:	mov    BYTE PTR [ebp-0x4],0x11
64005445:	call   0x64006ef0
6400544a:	mov    BYTE PTR [ebp-0x4],0x2
6400544e:	cmp    DWORD PTR [ebp-0x10],edi
64005451:	jb     0x6400545f
64005453:	mov    edx,DWORD PTR [ebp-0x24]
64005456:	push   edx
64005457:	call   0x64013712
6400545c:	add    esp,0x4
6400545f:	push   0x64029694
64005464:	push   0x8
64005466:	push   0x640296d0
6400546b:	call   0x64006840
64005470:	mov    esi,eax
64005472:	mov    ecx,esi
64005474:	add    esp,0xc
64005477:	mov    DWORD PTR [ebp-0x10],0xf
6400547e:	mov    DWORD PTR [ebp-0x14],ebx
64005481:	mov    BYTE PTR [ebp-0x24],bl
64005484:	lea    edx,[ecx+0x1]
64005487:	mov    al,BYTE PTR [ecx]
64005489:	add    ecx,0x1
6400548c:	cmp    al,bl
6400548e:	jne    0x64005487
64005490:	sub    ecx,edx
64005492:	push   ecx
64005493:	push   esi
64005494:	lea    ecx,[ebp-0x28]
64005497:	call   0x64001880
6400549c:	lea    eax,[ebp-0x28]
6400549f:	push   eax
640054a0:	lea    ecx,[ebp-0x40]
640054a3:	push   ecx
640054a4:	lea    edx,[ebp-0x34]
640054a7:	push   edx
640054a8:	mov    BYTE PTR [ebp-0x4],0x12
640054ac:	call   0x64006ef0
640054b1:	mov    BYTE PTR [ebp-0x4],0x2
640054b5:	cmp    DWORD PTR [ebp-0x10],edi
640054b8:	jb     0x640054c6
640054ba:	mov    eax,DWORD PTR [ebp-0x24]
640054bd:	push   eax
640054be:	call   0x64013712
640054c3:	add    esp,0x4
640054c6:	push   0x640296dc
640054cb:	push   0x6
640054cd:	push   0x6402971c
640054d2:	call   0x64006840
640054d7:	mov    esi,eax
640054d9:	mov    ecx,esi
640054db:	add    esp,0xc
640054de:	mov    DWORD PTR [ebp-0x10],0xf
640054e5:	mov    DWORD PTR [ebp-0x14],ebx
640054e8:	mov    BYTE PTR [ebp-0x24],bl
640054eb:	lea    edx,[ecx+0x1]
640054ee:	mov    edi,edi
640054f0:	mov    al,BYTE PTR [ecx]
640054f2:	add    ecx,0x1
640054f5:	cmp    al,bl
640054f7:	jne    0x640054f0
640054f9:	sub    ecx,edx
640054fb:	push   ecx
640054fc:	push   esi
640054fd:	lea    ecx,[ebp-0x28]
64005500:	call   0x64001880
64005505:	lea    ecx,[ebp-0x28]
64005508:	push   ecx
64005509:	lea    edx,[ebp-0x40]
6400550c:	push   edx
6400550d:	lea    eax,[ebp-0x34]
64005510:	push   eax
64005511:	mov    BYTE PTR [ebp-0x4],0x13
64005515:	call   0x64006ef0
6400551a:	mov    BYTE PTR [ebp-0x4],0x2
6400551e:	cmp    DWORD PTR [ebp-0x10],edi
64005521:	jb     0x6400552f
64005523:	mov    ecx,DWORD PTR [ebp-0x24]
64005526:	push   ecx
64005527:	call   0x64013712
6400552c:	add    esp,0x4
6400552f:	push   0x64029724
64005534:	push   0x8
64005536:	push   0x64029750
6400553b:	call   0x64006840
64005540:	mov    esi,eax
64005542:	mov    ecx,esi
64005544:	add    esp,0xc
64005547:	mov    DWORD PTR [ebp-0x10],0xf
6400554e:	mov    DWORD PTR [ebp-0x14],ebx
64005551:	mov    BYTE PTR [ebp-0x24],bl
64005554:	lea    edx,[ecx+0x1]
64005557:	mov    al,BYTE PTR [ecx]
64005559:	add    ecx,0x1
6400555c:	cmp    al,bl
6400555e:	jne    0x64005557
64005560:	sub    ecx,edx
64005562:	push   ecx
64005563:	push   esi
64005564:	lea    ecx,[ebp-0x28]
64005567:	call   0x64001880
6400556c:	lea    edx,[ebp-0x28]
6400556f:	push   edx
64005570:	lea    eax,[ebp-0x40]
64005573:	push   eax
64005574:	lea    ecx,[ebp-0x34]
64005577:	push   ecx
64005578:	mov    BYTE PTR [ebp-0x4],0x14
6400557c:	call   0x64006ef0
64005581:	mov    BYTE PTR [ebp-0x4],0x2
64005585:	cmp    DWORD PTR [ebp-0x10],edi
64005588:	jb     0x64005596
6400558a:	mov    edx,DWORD PTR [ebp-0x24]
6400558d:	push   edx
6400558e:	call   0x64013712
64005593:	add    esp,0x4
64005596:	push   0x6402975c
6400559b:	push   0x6
6400559d:	push   0x64029790
640055a2:	call   0x64006840
640055a7:	mov    esi,eax
640055a9:	mov    ecx,esi
640055ab:	add    esp,0xc
640055ae:	mov    DWORD PTR [ebp-0x10],0xf
640055b5:	mov    DWORD PTR [ebp-0x14],ebx
640055b8:	mov    BYTE PTR [ebp-0x24],bl
640055bb:	lea    edx,[ecx+0x1]
640055be:	mov    edi,edi
640055c0:	mov    al,BYTE PTR [ecx]
640055c2:	add    ecx,0x1
640055c5:	cmp    al,bl
640055c7:	jne    0x640055c0
640055c9:	sub    ecx,edx
640055cb:	push   ecx
640055cc:	push   esi
640055cd:	lea    ecx,[ebp-0x28]
640055d0:	call   0x64001880
640055d5:	lea    eax,[ebp-0x28]
640055d8:	push   eax
640055d9:	lea    ecx,[ebp-0x40]
640055dc:	push   ecx
640055dd:	lea    edx,[ebp-0x34]
640055e0:	push   edx
640055e1:	mov    BYTE PTR [ebp-0x4],0x15
640055e5:	call   0x64006ef0
640055ea:	mov    BYTE PTR [ebp-0x4],0x2
640055ee:	cmp    DWORD PTR [ebp-0x10],edi
640055f1:	jb     0x640055ff
640055f3:	mov    eax,DWORD PTR [ebp-0x24]
640055f6:	push   eax
640055f7:	call   0x64013712
640055fc:	add    esp,0x4
640055ff:	push   0x64029798
64005604:	push   0x7
64005606:	push   0x640297bc
6400560b:	call   0x64006840
64005610:	mov    esi,eax
64005612:	mov    ecx,esi
64005614:	add    esp,0xc
64005617:	mov    DWORD PTR [ebp-0x10],0xf
6400561e:	mov    DWORD PTR [ebp-0x14],ebx
64005621:	mov    BYTE PTR [ebp-0x24],bl
64005624:	lea    edx,[ecx+0x1]
64005627:	mov    al,BYTE PTR [ecx]
64005629:	add    ecx,0x1
6400562c:	cmp    al,bl
6400562e:	jne    0x64005627
64005630:	sub    ecx,edx
64005632:	push   ecx
64005633:	push   esi
64005634:	lea    ecx,[ebp-0x28]
64005637:	call   0x64001880
6400563c:	lea    ecx,[ebp-0x28]
6400563f:	push   ecx
64005640:	lea    edx,[ebp-0x40]
64005643:	push   edx
64005644:	lea    eax,[ebp-0x34]
64005647:	push   eax
64005648:	mov    BYTE PTR [ebp-0x4],0x16
6400564c:	call   0x64006ef0
64005651:	mov    BYTE PTR [ebp-0x4],0x2
64005655:	cmp    DWORD PTR [ebp-0x10],edi
64005658:	jb     0x64005666
6400565a:	mov    ecx,DWORD PTR [ebp-0x24]
6400565d:	push   ecx
6400565e:	call   0x64013712
64005663:	add    esp,0x4
64005666:	push   0x640297c4
6400566b:	push   0x5
6400566d:	push   0x640297f4
64005672:	call   0x64006840
64005677:	mov    esi,eax
64005679:	mov    ecx,esi
6400567b:	add    esp,0xc
6400567e:	mov    DWORD PTR [ebp-0x10],0xf
64005685:	mov    DWORD PTR [ebp-0x14],ebx
64005688:	mov    BYTE PTR [ebp-0x24],bl
6400568b:	lea    edx,[ecx+0x1]
6400568e:	mov    edi,edi
64005690:	mov    al,BYTE PTR [ecx]
64005692:	add    ecx,0x1
64005695:	cmp    al,bl
64005697:	jne    0x64005690
64005699:	sub    ecx,edx
6400569b:	push   ecx
6400569c:	push   esi
6400569d:	lea    ecx,[ebp-0x28]
640056a0:	call   0x64001880
640056a5:	lea    edx,[ebp-0x28]
640056a8:	push   edx
640056a9:	lea    eax,[ebp-0x40]
640056ac:	push   eax
640056ad:	lea    ecx,[ebp-0x34]
640056b0:	push   ecx
640056b1:	mov    BYTE PTR [ebp-0x4],0x17
640056b5:	call   0x64006ef0
640056ba:	mov    BYTE PTR [ebp-0x4],0x2
640056be:	cmp    DWORD PTR [ebp-0x10],edi
640056c1:	jb     0x640056cf
640056c3:	mov    edx,DWORD PTR [ebp-0x24]
640056c6:	push   edx
640056c7:	call   0x64013712
640056cc:	add    esp,0x4
640056cf:	push   0x640297fc
640056d4:	push   0x5
640056d6:	push   0x64029820
640056db:	call   0x64006840
640056e0:	mov    esi,eax
640056e2:	mov    ecx,esi
640056e4:	add    esp,0xc
640056e7:	mov    DWORD PTR [ebp-0x10],0xf
640056ee:	mov    DWORD PTR [ebp-0x14],ebx
640056f1:	mov    BYTE PTR [ebp-0x24],bl
640056f4:	lea    edx,[ecx+0x1]
640056f7:	mov    al,BYTE PTR [ecx]
640056f9:	add    ecx,0x1
640056fc:	cmp    al,bl
640056fe:	jne    0x640056f7
64005700:	sub    ecx,edx
64005702:	push   ecx
64005703:	push   esi
64005704:	lea    ecx,[ebp-0x28]
64005707:	call   0x64001880
6400570c:	lea    eax,[ebp-0x28]
6400570f:	push   eax
64005710:	lea    ecx,[ebp-0x40]
64005713:	push   ecx
64005714:	lea    edx,[ebp-0x34]
64005717:	push   edx
64005718:	mov    BYTE PTR [ebp-0x4],0x18
6400571c:	call   0x64006ef0
64005721:	mov    BYTE PTR [ebp-0x4],0x2
64005725:	cmp    DWORD PTR [ebp-0x10],edi
64005728:	jb     0x64005736
6400572a:	mov    eax,DWORD PTR [ebp-0x24]
6400572d:	push   eax
6400572e:	call   0x64013712
64005733:	add    esp,0x4
64005736:	push   0x64029828
6400573b:	push   0x7
6400573d:	push   0x64029868
64005742:	call   0x64006840
64005747:	add    esp,0xc
6400574a:	push   eax
6400574b:	lea    ecx,[ebp-0x28]
6400574e:	call   0x640026d0
64005753:	lea    ecx,[ebp-0x28]
64005756:	push   ecx
64005757:	lea    edx,[ebp-0x40]
6400575a:	push   edx
6400575b:	lea    eax,[ebp-0x34]
6400575e:	push   eax
6400575f:	mov    BYTE PTR [ebp-0x4],0x19
64005763:	call   0x64006ef0
64005768:	mov    BYTE PTR [ebp-0x4],0x2
6400576c:	cmp    DWORD PTR [ebp-0x10],edi
6400576f:	jb     0x6400577d
64005771:	mov    ecx,DWORD PTR [ebp-0x24]
64005774:	push   ecx
64005775:	call   0x64013712
6400577a:	add    esp,0x4
6400577d:	push   0x64029870
64005782:	push   0x6
64005784:	push   0x640298a0
64005789:	call   0x64006840
6400578e:	add    esp,0xc
64005791:	push   eax
64005792:	lea    ecx,[ebp-0x28]
64005795:	call   0x640026d0
6400579a:	lea    edx,[ebp-0x28]
6400579d:	push   edx
6400579e:	lea    eax,[ebp-0x40]
640057a1:	push   eax
640057a2:	lea    ecx,[ebp-0x34]
640057a5:	push   ecx
640057a6:	mov    BYTE PTR [ebp-0x4],0x1a
640057aa:	call   0x64006ef0
640057af:	mov    BYTE PTR [ebp-0x4],0x2
640057b3:	cmp    DWORD PTR [ebp-0x10],edi
640057b6:	jb     0x640057c4
640057b8:	mov    edx,DWORD PTR [ebp-0x24]
640057bb:	push   edx
640057bc:	call   0x64013712
640057c1:	add    esp,0x4
640057c4:	push   0x640298a8
640057c9:	push   0xe
640057cb:	push   0x640298d4
640057d0:	call   0x64006840
640057d5:	add    esp,0xc
640057d8:	push   eax
640057d9:	lea    ecx,[ebp-0x28]
640057dc:	call   0x640026d0
640057e1:	lea    eax,[ebp-0x28]
640057e4:	push   eax
640057e5:	lea    ecx,[ebp-0x40]
640057e8:	push   ecx
640057e9:	lea    edx,[ebp-0x34]
640057ec:	push   edx
640057ed:	mov    BYTE PTR [ebp-0x4],0x1b
640057f1:	call   0x64006ef0
640057f6:	mov    BYTE PTR [ebp-0x4],0x2
640057fa:	cmp    DWORD PTR [ebp-0x10],edi
640057fd:	jb     0x6400580b
640057ff:	mov    eax,DWORD PTR [ebp-0x24]
64005802:	push   eax
64005803:	call   0x64013712
64005808:	add    esp,0x4
6400580b:	push   0x640298e4
64005810:	push   0x12
64005812:	push   0x64029918
64005817:	call   0x64006840
6400581c:	add    esp,0xc
6400581f:	push   eax
64005820:	lea    ecx,[ebp-0x28]
64005823:	call   0x640026d0
64005828:	lea    ecx,[ebp-0x28]
6400582b:	push   ecx
6400582c:	lea    edx,[ebp-0x40]
6400582f:	push   edx
64005830:	lea    eax,[ebp-0x34]
64005833:	push   eax
64005834:	mov    BYTE PTR [ebp-0x4],0x1c
64005838:	call   0x64006ef0
6400583d:	mov    BYTE PTR [ebp-0x4],0x2
64005841:	cmp    DWORD PTR [ebp-0x10],edi
64005844:	jb     0x64005852
64005846:	mov    ecx,DWORD PTR [ebp-0x24]
64005849:	push   ecx
6400584a:	call   0x64013712
6400584f:	add    esp,0x4
64005852:	push   0x6402992c
64005857:	push   0x17
64005859:	push   0x64029964
6400585e:	call   0x64006840
64005863:	add    esp,0xc
64005866:	push   eax
64005867:	lea    ecx,[ebp-0x28]
6400586a:	call   0x640026d0
6400586f:	lea    edx,[ebp-0x28]
64005872:	push   edx
64005873:	lea    eax,[ebp-0x40]
64005876:	push   eax
64005877:	lea    ecx,[ebp-0x34]
6400587a:	push   ecx
6400587b:	mov    BYTE PTR [ebp-0x4],0x1d
6400587f:	call   0x64006ef0
64005884:	mov    BYTE PTR [ebp-0x4],0x2
64005888:	cmp    DWORD PTR [ebp-0x10],edi
6400588b:	jb     0x64005899
6400588d:	mov    edx,DWORD PTR [ebp-0x24]
64005890:	push   edx
64005891:	call   0x64013712
64005896:	add    esp,0x4
64005899:	push   0x6402997c
6400589e:	push   0x11
640058a0:	push   0x640299a8
640058a5:	call   0x64006840
640058aa:	add    esp,0xc
640058ad:	push   eax
640058ae:	lea    ecx,[ebp-0x28]
640058b1:	call   0x640026d0
640058b6:	lea    eax,[ebp-0x28]
640058b9:	push   eax
640058ba:	lea    ecx,[ebp-0x40]
640058bd:	push   ecx
640058be:	lea    edx,[ebp-0x34]
640058c1:	push   edx
640058c2:	mov    BYTE PTR [ebp-0x4],0x1e
640058c6:	call   0x64006ef0
640058cb:	mov    BYTE PTR [ebp-0x4],0x2
640058cf:	cmp    DWORD PTR [ebp-0x10],edi
640058d2:	jb     0x640058e0
640058d4:	mov    eax,DWORD PTR [ebp-0x24]
640058d7:	push   eax
640058d8:	call   0x64013712
640058dd:	add    esp,0x4
640058e0:	push   0x640299bc
640058e5:	push   0x8
640058e7:	push   0x640299e8
640058ec:	call   0x64006840
640058f1:	add    esp,0xc
640058f4:	push   eax
640058f5:	lea    ecx,[ebp-0x28]
640058f8:	call   0x640026d0
640058fd:	lea    ecx,[ebp-0x28]
64005900:	push   ecx
64005901:	lea    edx,[ebp-0x40]
64005904:	push   edx
64005905:	lea    eax,[ebp-0x34]
64005908:	push   eax
64005909:	mov    BYTE PTR [ebp-0x4],0x1f
6400590d:	call   0x64006ef0
64005912:	mov    BYTE PTR [ebp-0x4],0x2
64005916:	cmp    DWORD PTR [ebp-0x10],edi
64005919:	jb     0x64005927
6400591b:	mov    ecx,DWORD PTR [ebp-0x24]
6400591e:	push   ecx
6400591f:	call   0x64013712
64005924:	add    esp,0x4
64005927:	push   0x640299f4
6400592c:	push   0x6
6400592e:	push   0x64029a30
64005933:	call   0x64006840
64005938:	add    esp,0xc
6400593b:	push   eax
6400593c:	lea    ecx,[ebp-0x28]
6400593f:	call   0x640026d0
64005944:	lea    edx,[ebp-0x28]
64005947:	push   edx
64005948:	lea    eax,[ebp-0x40]
6400594b:	push   eax
6400594c:	lea    ecx,[ebp-0x34]
6400594f:	push   ecx
64005950:	mov    BYTE PTR [ebp-0x4],0x20
64005954:	call   0x64006ef0
64005959:	mov    BYTE PTR [ebp-0x4],0x2
6400595d:	cmp    DWORD PTR [ebp-0x10],edi
64005960:	jb     0x6400596e
64005962:	mov    edx,DWORD PTR [ebp-0x24]
64005965:	push   edx
64005966:	call   0x64013712
6400596b:	add    esp,0x4
6400596e:	push   0x64029a38
64005973:	push   0x6
64005975:	push   0x64029a68
6400597a:	call   0x64006840
6400597f:	add    esp,0xc
64005982:	push   eax
64005983:	lea    ecx,[ebp-0x28]
64005986:	call   0x640026d0
6400598b:	lea    eax,[ebp-0x28]
6400598e:	push   eax
6400598f:	lea    ecx,[ebp-0x40]
64005992:	push   ecx
64005993:	lea    edx,[ebp-0x34]
64005996:	push   edx
64005997:	mov    BYTE PTR [ebp-0x4],0x21
6400599b:	call   0x64006ef0
640059a0:	mov    BYTE PTR [ebp-0x4],0x2
640059a4:	cmp    DWORD PTR [ebp-0x10],edi
640059a7:	jb     0x640059b5
640059a9:	mov    eax,DWORD PTR [ebp-0x24]
640059ac:	push   eax
640059ad:	call   0x64013712
640059b2:	add    esp,0x4
640059b5:	push   0x64029a70
640059ba:	push   0x8
640059bc:	push   0x64029aa0
640059c1:	call   0x64006840
640059c6:	add    esp,0xc
640059c9:	push   eax
640059ca:	lea    ecx,[ebp-0x28]
640059cd:	call   0x640026d0
640059d2:	lea    ecx,[ebp-0x28]
640059d5:	push   ecx
640059d6:	lea    edx,[ebp-0x40]
640059d9:	push   edx
640059da:	lea    eax,[ebp-0x34]
640059dd:	push   eax
640059de:	mov    BYTE PTR [ebp-0x4],0x22
640059e2:	call   0x64006ef0
640059e7:	mov    BYTE PTR [ebp-0x4],0x2
640059eb:	cmp    DWORD PTR [ebp-0x10],edi
640059ee:	jb     0x640059fc
640059f0:	mov    ecx,DWORD PTR [ebp-0x24]
640059f3:	push   ecx
640059f4:	call   0x64013712
640059f9:	add    esp,0x4
640059fc:	push   0x64029aac
64005a01:	push   0x6
64005a03:	push   0x64029aec
64005a08:	call   0x64006840
64005a0d:	add    esp,0xc
64005a10:	push   eax
64005a11:	lea    ecx,[ebp-0x28]
64005a14:	call   0x640026d0
64005a19:	lea    edx,[ebp-0x28]
64005a1c:	push   edx
64005a1d:	lea    eax,[ebp-0x40]
64005a20:	push   eax
64005a21:	lea    ecx,[ebp-0x34]
64005a24:	push   ecx
64005a25:	mov    BYTE PTR [ebp-0x4],0x23
64005a29:	call   0x64006ef0
64005a2e:	mov    BYTE PTR [ebp-0x4],0x2
64005a32:	cmp    DWORD PTR [ebp-0x10],edi
64005a35:	jb     0x64005a43
64005a37:	mov    edx,DWORD PTR [ebp-0x24]
64005a3a:	push   edx
64005a3b:	call   0x64013712
64005a40:	add    esp,0x4
64005a43:	push   0x64029af4
64005a48:	push   0x7
64005a4a:	push   0x64029b28
64005a4f:	call   0x64006840
64005a54:	add    esp,0xc
64005a57:	push   eax
64005a58:	lea    ecx,[ebp-0x28]
64005a5b:	call   0x640026d0
64005a60:	lea    eax,[ebp-0x28]
64005a63:	push   eax
64005a64:	lea    ecx,[ebp-0x40]
64005a67:	push   ecx
64005a68:	lea    edx,[ebp-0x34]
64005a6b:	push   edx
64005a6c:	mov    BYTE PTR [ebp-0x4],0x24
64005a70:	call   0x64006ef0
64005a75:	mov    BYTE PTR [ebp-0x4],0x2
64005a79:	cmp    DWORD PTR [ebp-0x10],edi
64005a7c:	jb     0x64005a8a
64005a7e:	mov    eax,DWORD PTR [ebp-0x24]
64005a81:	push   eax
64005a82:	call   0x64013712
64005a87:	add    esp,0x4
64005a8a:	push   0x64029b30
64005a8f:	push   0x6
64005a91:	push   0x64029b54
64005a96:	call   0x64006840
64005a9b:	add    esp,0xc
64005a9e:	push   eax
64005a9f:	lea    ecx,[ebp-0x28]
64005aa2:	call   0x640026d0
64005aa7:	lea    ecx,[ebp-0x28]
64005aaa:	push   ecx
64005aab:	lea    edx,[ebp-0x40]
64005aae:	push   edx
64005aaf:	lea    eax,[ebp-0x34]
64005ab2:	push   eax
64005ab3:	mov    BYTE PTR [ebp-0x4],0x25
64005ab7:	call   0x64006ef0
64005abc:	mov    BYTE PTR [ebp-0x4],0x2
64005ac0:	cmp    DWORD PTR [ebp-0x10],edi
64005ac3:	jb     0x64005ad1
64005ac5:	mov    ecx,DWORD PTR [ebp-0x24]
64005ac8:	push   ecx
64005ac9:	call   0x64013712
64005ace:	add    esp,0x4
64005ad1:	push   0x64029b5c
64005ad6:	push   0x6
64005ad8:	push   0x64029b98
64005add:	call   0x64006840
64005ae2:	add    esp,0xc
64005ae5:	push   eax
64005ae6:	lea    ecx,[ebp-0x28]
64005ae9:	call   0x640026d0
64005aee:	lea    edx,[ebp-0x28]
64005af1:	push   edx
64005af2:	lea    eax,[ebp-0x40]
64005af5:	push   eax
64005af6:	lea    ecx,[ebp-0x34]
64005af9:	push   ecx
64005afa:	mov    BYTE PTR [ebp-0x4],0x26
64005afe:	call   0x64006ef0
64005b03:	mov    BYTE PTR [ebp-0x4],0x2
64005b07:	cmp    DWORD PTR [ebp-0x10],edi
64005b0a:	jb     0x64005b18
64005b0c:	mov    edx,DWORD PTR [ebp-0x24]
64005b0f:	push   edx
64005b10:	call   0x64013712
64005b15:	add    esp,0x4
64005b18:	push   0x64029ba0
64005b1d:	push   0x5
64005b1f:	push   0x64029bc8
64005b24:	call   0x64006840
64005b29:	add    esp,0xc
64005b2c:	push   eax
64005b2d:	lea    ecx,[ebp-0x28]
64005b30:	call   0x640026d0
64005b35:	lea    eax,[ebp-0x28]
64005b38:	push   eax
64005b39:	lea    ecx,[ebp-0x40]
64005b3c:	push   ecx
64005b3d:	lea    edx,[ebp-0x34]
64005b40:	push   edx
64005b41:	mov    BYTE PTR [ebp-0x4],0x27
64005b45:	call   0x64006ef0
64005b4a:	mov    BYTE PTR [ebp-0x4],0x2
64005b4e:	cmp    DWORD PTR [ebp-0x10],edi
64005b51:	jb     0x64005b5f
64005b53:	mov    eax,DWORD PTR [ebp-0x24]
64005b56:	push   eax
64005b57:	call   0x64013712
64005b5c:	add    esp,0x4
64005b5f:	push   0x64029bd0
64005b64:	push   0x6
64005b66:	push   0x64029c0c
64005b6b:	call   0x64006840
64005b70:	add    esp,0xc
64005b73:	push   eax
64005b74:	lea    ecx,[ebp-0x28]
64005b77:	call   0x640026d0
64005b7c:	lea    ecx,[ebp-0x28]
64005b7f:	push   ecx
64005b80:	lea    edx,[ebp-0x40]
64005b83:	push   edx
64005b84:	lea    eax,[ebp-0x34]
64005b87:	push   eax
64005b88:	mov    BYTE PTR [ebp-0x4],0x28
64005b8c:	call   0x64006ef0
64005b91:	mov    BYTE PTR [ebp-0x4],0x2
64005b95:	cmp    DWORD PTR [ebp-0x10],edi
64005b98:	jb     0x64005ba6
64005b9a:	mov    ecx,DWORD PTR [ebp-0x24]
64005b9d:	push   ecx
64005b9e:	call   0x64013712
64005ba3:	add    esp,0x4
64005ba6:	push   0x64029c14
64005bab:	push   0xa
64005bad:	push   0x64029c54
64005bb2:	call   0x64006840
64005bb7:	add    esp,0xc
64005bba:	push   eax
64005bbb:	lea    ecx,[ebp-0x28]
64005bbe:	call   0x640026d0
64005bc3:	lea    edx,[ebp-0x28]
64005bc6:	push   edx
64005bc7:	lea    eax,[ebp-0x40]
64005bca:	push   eax
64005bcb:	lea    ecx,[ebp-0x34]
64005bce:	push   ecx
64005bcf:	mov    BYTE PTR [ebp-0x4],0x29
64005bd3:	call   0x64006ef0
64005bd8:	mov    BYTE PTR [ebp-0x4],0x2
64005bdc:	cmp    DWORD PTR [ebp-0x10],edi
64005bdf:	jb     0x64005bed
64005be1:	mov    edx,DWORD PTR [ebp-0x24]
64005be4:	push   edx
64005be5:	call   0x64013712
64005bea:	add    esp,0x4
64005bed:	push   0x64029c60
64005bf2:	push   0xf
64005bf4:	push   0x64029c90
64005bf9:	call   0x64006840
64005bfe:	add    esp,0xc
64005c01:	push   eax
64005c02:	lea    ecx,[ebp-0x28]
64005c05:	call   0x640026d0
64005c0a:	lea    eax,[ebp-0x28]
64005c0d:	push   eax
64005c0e:	lea    ecx,[ebp-0x40]
64005c11:	push   ecx
64005c12:	lea    edx,[ebp-0x34]
64005c15:	push   edx
64005c16:	mov    BYTE PTR [ebp-0x4],0x2a
64005c1a:	call   0x64006ef0
64005c1f:	mov    BYTE PTR [ebp-0x4],0x2
64005c23:	cmp    DWORD PTR [ebp-0x10],edi
64005c26:	jb     0x64005c34
64005c28:	mov    eax,DWORD PTR [ebp-0x24]
64005c2b:	push   eax
64005c2c:	call   0x64013712
64005c31:	add    esp,0x4
64005c34:	push   0x64029ca0
64005c39:	push   0xa
64005c3b:	push   0x64029cc4
64005c40:	call   0x64006840
64005c45:	add    esp,0xc
64005c48:	push   eax
64005c49:	lea    ecx,[ebp-0x28]
64005c4c:	call   0x640026d0
64005c51:	lea    ecx,[ebp-0x28]
64005c54:	push   ecx
64005c55:	lea    edx,[ebp-0x40]
64005c58:	push   edx
64005c59:	lea    eax,[ebp-0x34]
64005c5c:	push   eax
64005c5d:	mov    BYTE PTR [ebp-0x4],0x2b
64005c61:	call   0x64006ef0
64005c66:	mov    BYTE PTR [ebp-0x4],0x2
64005c6a:	cmp    DWORD PTR [ebp-0x10],edi
64005c6d:	jb     0x64005c7b
64005c6f:	mov    ecx,DWORD PTR [ebp-0x24]
64005c72:	push   ecx
64005c73:	call   0x64013712
64005c78:	add    esp,0x4
64005c7b:	push   0x64029cd0
64005c80:	push   0xb
64005c82:	push   0x64029d10
64005c87:	call   0x64006840
64005c8c:	add    esp,0xc
64005c8f:	push   eax
64005c90:	lea    ecx,[ebp-0x28]
64005c93:	call   0x640026d0
64005c98:	lea    edx,[ebp-0x28]
64005c9b:	push   edx
64005c9c:	lea    eax,[ebp-0x40]
64005c9f:	push   eax
64005ca0:	lea    ecx,[ebp-0x34]
64005ca3:	push   ecx
64005ca4:	mov    BYTE PTR [ebp-0x4],0x2c
64005ca8:	call   0x64006ef0
64005cad:	mov    BYTE PTR [ebp-0x4],0x2
64005cb1:	cmp    DWORD PTR [ebp-0x10],edi
64005cb4:	jb     0x64005cc2
64005cb6:	mov    edx,DWORD PTR [ebp-0x24]
64005cb9:	push   edx
64005cba:	call   0x64013712
64005cbf:	add    esp,0x4
64005cc2:	push   0x64029d1c
64005cc7:	push   0x1e
64005cc9:	push   0x64029d48
64005cce:	call   0x64006840
64005cd3:	add    esp,0xc
64005cd6:	push   eax
64005cd7:	lea    ecx,[ebp-0x28]
64005cda:	call   0x640026d0
64005cdf:	lea    eax,[ebp-0x28]
64005ce2:	push   eax
64005ce3:	lea    ecx,[ebp-0x40]
64005ce6:	push   ecx
64005ce7:	lea    edx,[ebp-0x34]
64005cea:	push   edx
64005ceb:	mov    BYTE PTR [ebp-0x4],0x2d
64005cef:	call   0x64006ef0
64005cf4:	mov    BYTE PTR [ebp-0x4],0x2
64005cf8:	cmp    DWORD PTR [ebp-0x10],edi
64005cfb:	jb     0x64005d09
64005cfd:	mov    eax,DWORD PTR [ebp-0x24]
64005d00:	push   eax
64005d01:	call   0x64013712
64005d06:	add    esp,0x4
64005d09:	push   0x64029d68
64005d0e:	push   0x16
64005d10:	push   0x64029d98
64005d15:	call   0x64006840
64005d1a:	add    esp,0xc
64005d1d:	push   eax
64005d1e:	lea    ecx,[ebp-0x28]
64005d21:	call   0x640026d0
64005d26:	lea    ecx,[ebp-0x28]
64005d29:	push   ecx
64005d2a:	lea    edx,[ebp-0x40]
64005d2d:	push   edx
64005d2e:	lea    eax,[ebp-0x34]
64005d31:	push   eax
64005d32:	mov    BYTE PTR [ebp-0x4],0x2e
64005d36:	call   0x64006ef0
64005d3b:	mov    BYTE PTR [ebp-0x4],0x2
64005d3f:	cmp    DWORD PTR [ebp-0x10],edi
64005d42:	jb     0x64005d50
64005d44:	mov    ecx,DWORD PTR [ebp-0x24]
64005d47:	push   ecx
64005d48:	call   0x64013712
64005d4d:	add    esp,0x4
64005d50:	push   0x64029db0
64005d55:	push   0x19
64005d57:	push   0x64029de8
64005d5c:	call   0x64006840
64005d61:	add    esp,0xc
64005d64:	push   eax
64005d65:	lea    ecx,[ebp-0x28]
64005d68:	call   0x640026d0
64005d6d:	lea    edx,[ebp-0x28]
64005d70:	push   edx
64005d71:	lea    eax,[ebp-0x40]
64005d74:	push   eax
64005d75:	lea    ecx,[ebp-0x34]
64005d78:	push   ecx
64005d79:	mov    BYTE PTR [ebp-0x4],0x2f
64005d7d:	call   0x64006ef0
64005d82:	mov    BYTE PTR [ebp-0x4],0x2
64005d86:	cmp    DWORD PTR [ebp-0x10],edi
64005d89:	jb     0x64005d97
64005d8b:	mov    edx,DWORD PTR [ebp-0x24]
64005d8e:	push   edx
64005d8f:	call   0x64013712
64005d94:	add    esp,0x4
64005d97:	push   0x64029e04
64005d9c:	push   0x7
64005d9e:	push   0x64029e30
64005da3:	call   0x64006840
64005da8:	add    esp,0xc
64005dab:	push   eax
64005dac:	lea    ecx,[ebp-0x28]
64005daf:	call   0x640026d0
64005db4:	lea    eax,[ebp-0x28]
64005db7:	push   eax
64005db8:	lea    ecx,[ebp-0x40]
64005dbb:	push   ecx
64005dbc:	lea    edx,[ebp-0x34]
64005dbf:	push   edx
64005dc0:	mov    BYTE PTR [ebp-0x4],0x30
64005dc4:	call   0x64006ef0
64005dc9:	mov    BYTE PTR [ebp-0x4],0x2
64005dcd:	cmp    DWORD PTR [ebp-0x10],edi
64005dd0:	jb     0x64005dde
64005dd2:	mov    eax,DWORD PTR [ebp-0x24]
64005dd5:	push   eax
64005dd6:	call   0x64013712
64005ddb:	add    esp,0x4
64005dde:	push   0x64029e38
64005de3:	push   0x5
64005de5:	push   0x64029e78
64005dea:	call   0x64006840
64005def:	add    esp,0xc
64005df2:	push   eax
64005df3:	lea    ecx,[ebp-0x28]
64005df6:	call   0x640026d0
64005dfb:	lea    ecx,[ebp-0x28]
64005dfe:	push   ecx
64005dff:	lea    edx,[ebp-0x40]
64005e02:	push   edx
64005e03:	lea    eax,[ebp-0x34]
64005e06:	push   eax
64005e07:	mov    BYTE PTR [ebp-0x4],0x31
64005e0b:	call   0x64006ef0
64005e10:	mov    BYTE PTR [ebp-0x4],0x2
64005e14:	cmp    DWORD PTR [ebp-0x10],edi
64005e17:	jb     0x64005e25
64005e19:	mov    ecx,DWORD PTR [ebp-0x24]
64005e1c:	push   ecx
64005e1d:	call   0x64013712
64005e22:	add    esp,0x4
64005e25:	push   0x64029e80
64005e2a:	push   0xb
64005e2c:	push   0x64029ec0
64005e31:	call   0x64006840
64005e36:	add    esp,0xc
64005e39:	push   eax
64005e3a:	lea    ecx,[ebp-0x28]
64005e3d:	call   0x640026d0
64005e42:	lea    edx,[ebp-0x28]
64005e45:	push   edx
64005e46:	lea    eax,[ebp-0x40]
64005e49:	push   eax
64005e4a:	lea    ecx,[ebp-0x34]
64005e4d:	push   ecx
64005e4e:	mov    BYTE PTR [ebp-0x4],0x32
64005e52:	call   0x64006ef0
64005e57:	mov    BYTE PTR [ebp-0x4],0x2
64005e5b:	cmp    DWORD PTR [ebp-0x10],edi
64005e5e:	jb     0x64005e6c
64005e60:	mov    edx,DWORD PTR [ebp-0x24]
64005e63:	push   edx
64005e64:	call   0x64013712
64005e69:	add    esp,0x4
64005e6c:	push   0x64029ecc
64005e71:	push   0xc
64005e73:	push   0x64029f08
64005e78:	call   0x64006840
64005e7d:	add    esp,0xc
64005e80:	push   eax
64005e81:	lea    ecx,[ebp-0x28]
64005e84:	call   0x640026d0
64005e89:	lea    eax,[ebp-0x28]
64005e8c:	push   eax
64005e8d:	lea    ecx,[ebp-0x40]
64005e90:	push   ecx
64005e91:	lea    edx,[ebp-0x34]
64005e94:	push   edx
64005e95:	mov    BYTE PTR [ebp-0x4],0x33
64005e99:	call   0x64006ef0
64005e9e:	mov    BYTE PTR [ebp-0x4],0x2
64005ea2:	cmp    DWORD PTR [ebp-0x10],edi
64005ea5:	jb     0x64005eb3
64005ea7:	mov    eax,DWORD PTR [ebp-0x24]
64005eaa:	push   eax
64005eab:	call   0x64013712
64005eb0:	add    esp,0x4
64005eb3:	push   0x64029f18
64005eb8:	push   0x8
64005eba:	push   0x64029f4c
64005ebf:	call   0x64006840
64005ec4:	add    esp,0xc
64005ec7:	push   eax
64005ec8:	lea    ecx,[ebp-0x28]
64005ecb:	call   0x640026d0
64005ed0:	lea    ecx,[ebp-0x28]
64005ed3:	push   ecx
64005ed4:	lea    edx,[ebp-0x40]
64005ed7:	push   edx
64005ed8:	lea    eax,[ebp-0x34]
64005edb:	push   eax
64005edc:	mov    BYTE PTR [ebp-0x4],0x34
64005ee0:	call   0x64006ef0
64005ee5:	mov    BYTE PTR [ebp-0x4],0x2
64005ee9:	cmp    DWORD PTR [ebp-0x10],edi
64005eec:	jb     0x64005efa
64005eee:	mov    ecx,DWORD PTR [ebp-0x24]
64005ef1:	push   ecx
64005ef2:	call   0x64013712
64005ef7:	add    esp,0x4
64005efa:	push   0x64029f58
64005eff:	push   0xc
64005f01:	push   0x64029f94
64005f06:	call   0x64006840
64005f0b:	add    esp,0xc
64005f0e:	push   eax
64005f0f:	lea    ecx,[ebp-0x28]
64005f12:	call   0x640026d0
64005f17:	lea    edx,[ebp-0x28]
64005f1a:	push   edx
64005f1b:	lea    eax,[ebp-0x40]
64005f1e:	push   eax
64005f1f:	lea    ecx,[ebp-0x34]
64005f22:	push   ecx
64005f23:	mov    BYTE PTR [ebp-0x4],0x35
64005f27:	call   0x64006ef0
64005f2c:	mov    BYTE PTR [ebp-0x4],0x2
64005f30:	cmp    DWORD PTR [ebp-0x10],edi
64005f33:	jb     0x64005f41
64005f35:	mov    edx,DWORD PTR [ebp-0x24]
64005f38:	push   edx
64005f39:	call   0x64013712
64005f3e:	add    esp,0x4
64005f41:	push   0x64029fa4
64005f46:	push   0xa
64005f48:	push   0x64029fdc
64005f4d:	call   0x64006840
64005f52:	add    esp,0xc
64005f55:	push   eax
64005f56:	lea    ecx,[ebp-0x28]
64005f59:	call   0x640026d0
64005f5e:	lea    eax,[ebp-0x28]
64005f61:	push   eax
64005f62:	lea    ecx,[ebp-0x40]
64005f65:	push   ecx
64005f66:	lea    edx,[ebp-0x34]
64005f69:	push   edx
64005f6a:	mov    BYTE PTR [ebp-0x4],0x36
64005f6e:	call   0x64006ef0
64005f73:	mov    BYTE PTR [ebp-0x4],0x2
64005f77:	cmp    DWORD PTR [ebp-0x10],edi
64005f7a:	jb     0x64005f88
64005f7c:	mov    eax,DWORD PTR [ebp-0x24]
64005f7f:	push   eax
64005f80:	call   0x64013712
64005f85:	add    esp,0x4
64005f88:	lea    ecx,[ebp-0x40]
64005f8b:	push   ecx
64005f8c:	lea    ecx,[ebp-0x34]
64005f8f:	call   0x64003bb0
64005f94:	add    esp,0x4
64005f97:	mov    ecx,0x640334c4
64005f9c:	mov    BYTE PTR [ebp-0x4],0x37
64005fa0:	call   0x64006eb0
64005fa5:	lea    eax,[ebp-0x40]
64005fa8:	mov    BYTE PTR [ebp-0x4],0x2
64005fac:	call   0x640078d0
64005fb1:	lea    eax,[ebp-0x34]
64005fb4:	mov    BYTE PTR [ebp-0x4],bl
64005fb7:	call   0x640078d0
64005fbc:	call   DWORD PTR ds:0x6402f06c
64005fc2:	mov    edi,DWORD PTR [ebp+0x40c]
64005fc8:	cmp    DWORD PTR [edi-0x4],0x1
64005fcc:	mov    DWORD PTR [ebp-0x48],eax
64005fcf:	jle    0x64005fe6
64005fd1:	mov    edx,DWORD PTR [edi-0xc]
64005fd4:	push   edx
64005fd5:	lea    ecx,[ebp+0x40c]
64005fdb:	call   0x64001950
64005fe0:	mov    edi,DWORD PTR [ebp+0x40c]
64005fe6:	cmp    edi,ebx
64005fe8:	jne    0x64005fee
64005fea:	xor    eax,eax
64005fec:	jmp    0x6400601b
64005fee:	push   edi
64005fef:	call   DWORD PTR ds:0x64026054
64005ff5:	add    eax,0x1
64005ff8:	cmp    eax,0x3fffffff
64005ffd:	jle    0x64006003
64005fff:	xor    eax,eax
64006001:	jmp    0x6400601b
64006003:	lea    esi,[eax+eax*1]
64006006:	mov    eax,esi
64006008:	call   0x640146f0
6400600d:	mov    ecx,DWORD PTR [ebp-0x48]
64006010:	mov    eax,esp
64006012:	push   ecx
64006013:	push   esi
64006014:	push   edi
64006015:	push   eax
64006016:	call   0x64002b40
6400601b:	lea    edx,[ebp+0x0]
6400601e:	mov    edi,edi
64006020:	mov    cl,BYTE PTR [eax]
64006022:	mov    BYTE PTR [edx],cl
64006024:	add    eax,0x1
64006027:	add    edx,0x1
6400602a:	cmp    cl,bl
6400602c:	jne    0x64006020
6400602e:	lea    edx,[ebp+0x0]
64006031:	push   edx
64006032:	call   0x64020395
64006037:	add    esp,0x4
6400603a:	lea    eax,[ebp+0x0]
6400603d:	push   eax
6400603e:	lea    ecx,[ebp-0x28]
64006041:	call   0x640026d0
64006046:	lea    eax,[ebp-0x28]
64006049:	mov    esi,0x640334c4
6400604e:	mov    BYTE PTR [ebp-0x4],0x38
64006052:	call   0x64007080
64006057:	test   eax,eax
64006059:	setne  BYTE PTR [ebp-0x41]
6400605d:	cmp    DWORD PTR [ebp-0x10],0x10
64006061:	jb     0x6400606f
64006063:	mov    ecx,DWORD PTR [ebp-0x24]
64006066:	push   ecx
64006067:	call   0x64013712
6400606c:	add    esp,0x4
6400606f:	lea    eax,[edi-0x10]
64006072:	mov    DWORD PTR [ebp-0x10],0xf
64006079:	mov    DWORD PTR [ebp-0x14],ebx
6400607c:	mov    BYTE PTR [ebp-0x24],bl
6400607f:	mov    DWORD PTR [ebp-0x4],0xffffffff
64006086:	lea    edx,[eax+0xc]
64006089:	or     ecx,0xffffffff
6400608c:	lock xadd DWORD PTR [edx],ecx
64006090:	dec    ecx
64006091:	test   ecx,ecx
64006093:	jg     0x6400609f
64006095:	mov    ecx,DWORD PTR [eax]
64006097:	mov    edx,DWORD PTR [ecx]
64006099:	push   eax
6400609a:	mov    eax,DWORD PTR [edx+0x4]
6400609d:	call   eax
6400609f:	mov    al,BYTE PTR [ebp-0x41]
640060a2:	lea    esp,[ebp-0x58]
640060a5:	mov    ecx,DWORD PTR [ebp-0xc]
640060a8:	mov    DWORD PTR fs:0x0,ecx
640060af:	pop    ecx
640060b0:	pop    edi
640060b1:	pop    esi
640060b2:	pop    ebx
640060b3:	mov    ecx,DWORD PTR [ebp+0x400]
640060b9:	xor    ecx,ebp
640060bb:	call   0x64013f6c
640060c0:	add    ebp,0x404
640060c6:	mov    esp,ebp
640060c8:	pop    ebp
640060c9:	ret    
640060ca:	int3   
640060cb:	int3   
640060cc:	int3   
640060cd:	int3   
640060ce:	int3   
640060cf:	int3   
640060d0:	push   0xffffffff
640060d2:	push   0x640252f9
640060d7:	mov    eax,fs:0x0
640060dd:	push   eax
640060de:	sub    esp,0x44
640060e1:	push   ebx
640060e2:	push   ebp
640060e3:	push   esi
640060e4:	push   edi
640060e5:	mov    eax,ds:0x6402f09c
640060ea:	xor    eax,esp
640060ec:	push   eax
640060ed:	lea    eax,[esp+0x58]
640060f1:	mov    fs:0x0,eax
640060f7:	xor    edi,edi
640060f9:	mov    DWORD PTR [esp+0x60],edi
640060fd:	mov    DWORD PTR [esp+0x28],edi
64006101:	call   DWORD PTR ds:0x6402f06c
64006107:	mov    eax,ds:0x64030540
6400610c:	mov    edx,DWORD PTR [eax+0xc]
6400610f:	mov    ecx,0x64030540
64006114:	call   edx
64006116:	mov    ebx,DWORD PTR [esp+0x68]
6400611a:	add    eax,0x10
6400611d:	mov    DWORD PTR [ebx],eax
6400611f:	push   0x4
64006121:	push   edi
64006122:	mov    DWORD PTR [esp+0x68],edi
64006126:	push   edi
64006127:	mov    DWORD PTR [esp+0x34],0x1
6400612f:	call   0x6400f340
64006134:	call   eax
64006136:	cmp    eax,edi
64006138:	mov    DWORD PTR [esp+0x1c],eax
6400613c:	je     0x640062c4
64006142:	mov    ebp,DWORD PTR ds:0x64026008
64006148:	lea    ecx,[esp+0x20]
6400614c:	push   ecx
6400614d:	lea    edx,[esp+0x1c]
64006151:	push   edx
64006152:	lea    ecx,[esp+0x2c]
64006156:	push   ecx
64006157:	push   0x24
64006159:	lea    edx,[esp+0x44]
6400615d:	push   edx
6400615e:	push   0x3
64006160:	push   0x13f
64006165:	push   eax
64006166:	mov    DWORD PTR [esp+0x40],edi
6400616a:	call   ebp
6400616c:	mov    esi,eax
6400616e:	call   DWORD PTR ds:0x64026044
64006174:	cmp    esi,edi
64006176:	je     0x6400617f
64006178:	cmp    eax,0xea
6400617d:	jne    0x640061c4
6400617f:	mov    esi,DWORD PTR [esp+0x24]
64006183:	add    esi,0x24
64006186:	xor    ecx,ecx
64006188:	mov    eax,esi
6400618a:	mov    edx,0x24
6400618f:	mul    edx
64006191:	seto   cl
64006194:	neg    ecx
64006196:	or     ecx,eax
64006198:	push   ecx
64006199:	call   0x6401370d
6400619e:	add    esp,0x4
640061a1:	mov    edi,eax
640061a3:	lea    eax,[esp+0x20]
640061a7:	push   eax
640061a8:	mov    eax,DWORD PTR [esp+0x20]
640061ac:	lea    ecx,[esp+0x1c]
640061b0:	push   ecx
640061b1:	lea    edx,[esp+0x2c]
640061b5:	push   edx
640061b6:	push   esi
640061b7:	push   edi
640061b8:	push   0x3
640061ba:	push   0x13f
640061bf:	push   eax
640061c0:	call   ebp
640061c2:	jmp    0x640061c8
640061c4:	mov    edi,DWORD PTR [esp+0x2c]
640061c8:	xor    ebp,ebp
640061ca:	cmp    DWORD PTR [esp+0x18],ebp
640061ce:	jbe    0x640062c0
640061d4:	mov    ecx,DWORD PTR [edi]
640061d6:	push   ecx
640061d7:	lea    ecx,[esp+0x18]
640061db:	call   0x64002550
640061e0:	mov    DWORD PTR [esp+0x60],0x1
640061e8:	mov    eax,DWORD PTR [esp+0x14]
640061ec:	push   ecx
640061ed:	add    eax,0xfffffff0
640061f0:	mov    DWORD PTR [esp+0x34],esp
640061f4:	mov    esi,esp
640061f6:	push   eax
640061f7:	call   0x64002860
640061fc:	add    eax,0x10
640061ff:	add    esp,0x4
64006202:	cmp    BYTE PTR [esp+0x70],0x0
64006207:	mov    DWORD PTR [esi],eax
64006209:	je     0x64006219
6400620b:	call   0x64004d80
64006210:	add    esp,0x4
64006213:	test   al,al
64006215:	jne    0x64006225
64006217:	jmp    0x6400628b
64006219:	call   0x64003e10
6400621e:	add    esp,0x4
64006221:	test   al,al
64006223:	jne    0x6400628b
64006225:	push   0x64029fe8
6400622a:	push   0x4
6400622c:	push   0x6402a01c
64006231:	call   0x64006840
64006236:	add    esp,0xc
64006239:	push   eax
6400623a:	mov    ecx,ebx
6400623c:	call   0x64002620
64006241:	lea    edx,[esp+0x14]
64006245:	push   edx
64006246:	lea    eax,[esp+0x30]
6400624a:	push   eax
6400624b:	call   0x64003110
64006250:	add    esp,0x8
64006253:	mov    BYTE PTR [esp+0x60],0x2
64006258:	mov    eax,DWORD PTR [eax]
6400625a:	mov    ecx,DWORD PTR [eax-0xc]
6400625d:	push   ecx
6400625e:	push   eax
6400625f:	mov    ecx,ebx
64006261:	call   0x640029a0
64006266:	mov    BYTE PTR [esp+0x60],0x1
6400626b:	mov    eax,DWORD PTR [esp+0x2c]
6400626f:	add    eax,0xfffffff0
64006272:	lea    ecx,[eax+0xc]
64006275:	or     edx,0xffffffff
64006278:	lock xadd DWORD PTR [ecx],edx
6400627c:	dec    edx
6400627d:	test   edx,edx
6400627f:	jg     0x6400628b
64006281:	mov    ecx,DWORD PTR [eax]
64006283:	mov    edx,DWORD PTR [ecx]
64006285:	push   eax
64006286:	mov    eax,DWORD PTR [edx+0x4]
64006289:	call   eax
6400628b:	mov    BYTE PTR [esp+0x60],0x0
64006290:	mov    eax,DWORD PTR [esp+0x14]
64006294:	add    eax,0xfffffff0
64006297:	lea    ecx,[eax+0xc]
6400629a:	or     edx,0xffffffff
6400629d:	lock xadd DWORD PTR [ecx],edx
640062a1:	dec    edx
640062a2:	test   edx,edx
640062a4:	jg     0x640062b0
640062a6:	mov    ecx,DWORD PTR [eax]
640062a8:	mov    edx,DWORD PTR [ecx]
640062aa:	push   eax
640062ab:	mov    eax,DWORD PTR [edx+0x4]
640062ae:	call   eax
640062b0:	add    ebp,0x1
640062b3:	add    edi,0x24
640062b6:	cmp    ebp,DWORD PTR [esp+0x18]
640062ba:	jb     0x640061d4
640062c0:	mov    eax,DWORD PTR [esp+0x1c]
640062c4:	push   eax
640062c5:	call   0x6400f7a0
640062ca:	call   eax
640062cc:	mov    eax,ebx
640062ce:	mov    ecx,DWORD PTR [esp+0x58]
640062d2:	mov    DWORD PTR fs:0x0,ecx
640062d9:	pop    ecx
640062da:	pop    edi
640062db:	pop    esi
640062dc:	pop    ebp
640062dd:	pop    ebx
640062de:	add    esp,0x50
640062e1:	ret    
640062e2:	int3   
640062e3:	int3   
640062e4:	int3   
640062e5:	int3   
640062e6:	int3   
640062e7:	int3   
640062e8:	int3   
640062e9:	int3   
640062ea:	int3   
640062eb:	int3   
640062ec:	int3   
640062ed:	int3   
640062ee:	int3   
640062ef:	int3   
640062f0:	push   ebp
640062f1:	mov    ebp,esp
640062f3:	push   0xffffffff
640062f5:	push   0x64024ca0
640062fa:	mov    eax,fs:0x0
64006300:	push   eax
64006301:	sub    esp,0x15c
64006307:	mov    eax,ds:0x6402f09c
6400630c:	xor    eax,ebp
6400630e:	mov    DWORD PTR [ebp-0x14],eax
64006311:	push   ebx
64006312:	push   esi
64006313:	push   edi
64006314:	push   eax
64006315:	lea    eax,[ebp-0xc]
64006318:	mov    fs:0x0,eax
6400631e:	mov    DWORD PTR [ebp-0x10],esp
64006321:	mov    edi,DWORD PTR [ebp+0x8]
64006324:	push   0xa0
64006329:	lea    eax,[ebp-0x154]
6400632f:	push   eax
64006330:	push   0x7d0
64006335:	push   0x64000000
6400633a:	mov    DWORD PTR [ebp-0x4],0x0
64006341:	call   DWORD PTR ds:0x640261b4
64006347:	test   eax,eax
64006349:	je     0x64006390
6400634b:	push   ecx
6400634c:	lea    edx,[ebp-0x154]
64006352:	mov    ecx,esp
64006354:	mov    DWORD PTR [ebp-0x158],esp
6400635a:	push   edx
6400635b:	call   0x64002550
64006360:	lea    esi,[ebp-0x168]
64006366:	call   0x64002f10
6400636b:	mov    ecx,DWORD PTR [eax]
6400636d:	mov    DWORD PTR [edi],ecx
6400636f:	mov    edx,DWORD PTR [eax+0x4]
64006372:	mov    DWORD PTR [edi+0x4],edx
64006375:	mov    ecx,DWORD PTR [eax+0x8]
64006378:	mov    DWORD PTR [edi+0x8],ecx
6400637b:	mov    edx,DWORD PTR [eax+0xc]
6400637e:	add    esp,0x4
64006381:	mov    DWORD PTR [edi+0xc],edx
64006384:	mov    al,0x1
64006386:	jmp    0x640063b3
64006388:	mov    eax,0x6400638e
6400638d:	ret    
6400638e:	jmp    0x640063b1
64006390:	mov    eax,ds:0x64026be0
64006395:	mov    DWORD PTR [edi],eax
64006397:	mov    ecx,DWORD PTR ds:0x64026be4
6400639d:	mov    DWORD PTR [edi+0x4],ecx
640063a0:	mov    edx,DWORD PTR ds:0x64026be8
640063a6:	mov    DWORD PTR [edi+0x8],edx
640063a9:	mov    eax,ds:0x64026bec
640063ae:	mov    DWORD PTR [edi+0xc],eax
640063b1:	xor    al,al
640063b3:	mov    ecx,DWORD PTR [ebp-0xc]
640063b6:	mov    DWORD PTR fs:0x0,ecx
640063bd:	pop    ecx
640063be:	pop    edi
640063bf:	pop    esi
640063c0:	pop    ebx
640063c1:	mov    ecx,DWORD PTR [ebp-0x14]
640063c4:	xor    ecx,ebp
640063c6:	call   0x64013f6c
640063cb:	mov    esp,ebp
640063cd:	pop    ebp
640063ce:	ret    
640063cf:	int3   
640063d0:	sub    esp,0x118
640063d6:	mov    eax,ds:0x6402f09c
640063db:	xor    eax,esp
640063dd:	mov    DWORD PTR [esp+0x114],eax
640063e4:	push   esi
640063e5:	push   0x110
640063ea:	lea    eax,[esp+0xc]
640063ee:	push   0x0
640063f0:	push   eax
640063f1:	call   0x64014670
640063f6:	mov    edx,DWORD PTR ds:0x64030540
640063fc:	mov    eax,DWORD PTR [edx+0xc]
640063ff:	add    esp,0xc
64006402:	mov    ecx,0x64030540
64006407:	mov    DWORD PTR [esp+0x4],0x114
6400640f:	call   eax
64006411:	lea    ecx,[esp+0x4]
64006415:	mov    esi,eax
64006417:	push   ecx
64006418:	add    esi,0x10
6400641b:	call   DWORD PTR ds:0x6402606c
64006421:	test   eax,eax
64006423:	je     0x64006465
64006425:	mov    edx,DWORD PTR [esp+0x8]
64006429:	mov    eax,DWORD PTR [esp+0xc]
6400642d:	mov    DWORD PTR [edi],edx
6400642f:	mov    DWORD PTR [ebx],eax
64006431:	lea    eax,[esi-0x10]
64006434:	lea    ecx,[eax+0xc]
64006437:	or     edx,0xffffffff
6400643a:	lock xadd DWORD PTR [ecx],edx
6400643e:	dec    edx
6400643f:	test   edx,edx
64006441:	jg     0x6400644d
64006443:	mov    ecx,DWORD PTR [eax]
64006445:	mov    edx,DWORD PTR [ecx]
64006447:	push   eax
64006448:	mov    eax,DWORD PTR [edx+0x4]
6400644b:	call   eax
6400644d:	mov    al,0x1
6400644f:	pop    esi
64006450:	mov    ecx,DWORD PTR [esp+0x114]
64006457:	xor    ecx,esp
64006459:	call   0x64013f6c
6400645e:	add    esp,0x118
64006464:	ret    
64006465:	lea    eax,[esi-0x10]
64006468:	lea    ecx,[eax+0xc]
6400646b:	or     edx,0xffffffff
6400646e:	lock xadd DWORD PTR [ecx],edx
64006472:	dec    edx
64006473:	test   edx,edx
64006475:	jg     0x64006481
64006477:	mov    ecx,DWORD PTR [eax]
64006479:	mov    edx,DWORD PTR [ecx]
6400647b:	push   eax
6400647c:	mov    eax,DWORD PTR [edx+0x4]
6400647f:	call   eax
64006481:	mov    ecx,DWORD PTR [esp+0x118]
64006488:	pop    esi
64006489:	xor    ecx,esp
6400648b:	xor    al,al
6400648d:	call   0x64013f6c
64006492:	add    esp,0x118
64006498:	ret    
64006499:	int3   
6400649a:	int3   
6400649b:	int3   
6400649c:	int3   
6400649d:	int3   
6400649e:	int3   
6400649f:	int3   
640064a0:	push   ebp
640064a1:	mov    ebp,esp
640064a3:	and    esp,0xfffffff8
640064a6:	push   0xffffffff
640064a8:	push   0x64024c78
640064ad:	mov    eax,fs:0x0
640064b3:	push   eax
640064b4:	sub    esp,0x14
640064b7:	push   ebx
640064b8:	push   edi
640064b9:	mov    eax,ds:0x6402f09c
640064be:	xor    eax,esp
640064c0:	push   eax
640064c1:	lea    eax,[esp+0x20]
640064c5:	mov    fs:0x0,eax
640064cb:	cmp    DWORD PTR ds:0x64033350,0x0
640064d2:	jne    0x64006585
640064d8:	push   0x6402a024
640064dd:	push   0x12
640064df:	push   0x6402a050
640064e4:	mov    DWORD PTR ds:0x64033350,0xc
640064ee:	mov    DWORD PTR ds:0x64033358,0x0
640064f8:	call   0x64006b30
640064fd:	add    esp,0xc
64006500:	push   eax
64006501:	lea    ecx,[esp+0x14]
64006505:	call   0x64002550
6400650a:	lea    ebx,[esp+0x18]
6400650e:	lea    edi,[esp+0x14]
64006512:	mov    DWORD PTR [esp+0x28],0x0
6400651a:	call   0x640063d0
6400651f:	test   al,al
64006521:	je     0x64006548
64006523:	cmp    DWORD PTR [esp+0x14],0x6
64006528:	jb     0x64006548
6400652a:	push   0x6402a078
6400652f:	push   0xf
64006531:	push   0x6402a0b8
64006536:	call   0x64006b30
6400653b:	add    esp,0xc
6400653e:	push   eax
6400653f:	lea    ecx,[esp+0x14]
64006543:	call   0x64006800
64006548:	mov    eax,DWORD PTR [esp+0x10]
6400654c:	push   0x0
6400654e:	push   0x64033354
64006553:	push   0x1
64006555:	push   eax
64006556:	call   0x6400f0a0
6400655b:	call   eax
6400655d:	mov    DWORD PTR [esp+0x28],0xffffffff
64006565:	mov    eax,DWORD PTR [esp+0x10]
64006569:	add    eax,0xfffffff0
6400656c:	lea    ecx,[eax+0xc]
6400656f:	or     edx,0xffffffff
64006572:	lock xadd DWORD PTR [ecx],edx
64006576:	dec    edx
64006577:	test   edx,edx
64006579:	jg     0x64006585
6400657b:	mov    ecx,DWORD PTR [eax]
6400657d:	mov    edx,DWORD PTR [ecx]
6400657f:	push   eax
64006580:	mov    eax,DWORD PTR [edx+0x4]
64006583:	call   eax
64006585:	mov    eax,0x64033350
6400658a:	mov    ecx,DWORD PTR [esp+0x20]
6400658e:	mov    DWORD PTR fs:0x0,ecx
64006595:	pop    ecx
64006596:	pop    edi
64006597:	pop    ebx
64006598:	mov    esp,ebp
6400659a:	pop    ebp
6400659b:	ret    
6400659c:	int3   
6400659d:	int3   
6400659e:	int3   
6400659f:	int3   
640065a0:	push   0xffffffff
640065a2:	push   0x64024c48
640065a7:	mov    eax,fs:0x0
640065ad:	push   eax
640065ae:	push   ecx
640065af:	push   esi
640065b0:	push   edi
640065b1:	mov    eax,ds:0x6402f09c
640065b6:	xor    eax,esp
640065b8:	push   eax
640065b9:	lea    eax,[esp+0x10]
640065bd:	mov    fs:0x0,eax
640065c3:	mov    esi,ecx
640065c5:	mov    DWORD PTR [esp+0xc],esi
640065c9:	mov    eax,ds:0x64030540
640065ce:	mov    edx,DWORD PTR [eax+0xc]
640065d1:	mov    ecx,0x64030540
640065d6:	call   edx
640065d8:	add    eax,0x10
640065db:	mov    DWORD PTR [esi],eax
640065dd:	mov    eax,DWORD PTR [esp+0x20]
640065e1:	test   eax,eax
640065e3:	mov    DWORD PTR [esp+0x18],0x0
640065eb:	je     0x64006611
640065ed:	test   eax,0xffff0000
640065f2:	jne    0x64006611
640065f4:	movzx  edi,ax
640065f7:	push   0x0
640065f9:	push   edi
640065fa:	call   0x64001fa0
640065ff:	add    esp,0x8
64006602:	test   eax,eax
64006604:	je     0x64006619
64006606:	push   edi
64006607:	push   eax
64006608:	mov    ecx,esi
6400660a:	call   0x640028d0
6400660f:	jmp    0x64006619
64006611:	push   eax
64006612:	mov    ecx,esi
64006614:	call   0x640027c0
64006619:	mov    eax,esi
6400661b:	mov    ecx,DWORD PTR [esp+0x10]
6400661f:	mov    DWORD PTR fs:0x0,ecx
64006626:	pop    ecx
64006627:	pop    edi
64006628:	pop    esi
64006629:	add    esp,0x10
6400662c:	ret    0x4
6400662f:	int3   
64006630:	mov    eax,DWORD PTR [edi]
64006632:	mov    edx,DWORD PTR [eax-0x8]
64006635:	push   ebx
64006636:	mov    ebx,DWORD PTR [eax-0xc]
64006639:	push   esi
6400663a:	mov    ecx,0x1
6400663f:	sub    ecx,DWORD PTR [eax-0x4]
64006642:	lea    esi,[ebx+0x1]
64006645:	sub    edx,esi
64006647:	or     ecx,edx
64006649:	jge    0x64006653
6400664b:	push   esi
6400664c:	mov    ecx,edi
6400664e:	call   0x64001e00
64006653:	test   esi,esi
64006655:	movsx  ax,BYTE PTR [esp+0xc]
6400665b:	mov    ecx,DWORD PTR [edi]
6400665d:	mov    WORD PTR [ecx+ebx*2],ax
64006661:	jl     0x6400667c
64006663:	mov    eax,DWORD PTR [edi]
64006665:	cmp    esi,DWORD PTR [eax-0x8]
64006668:	jg     0x6400667c
6400666a:	mov    DWORD PTR [eax-0xc],esi
6400666d:	mov    edx,DWORD PTR [edi]
6400666f:	mov    WORD PTR [edx+esi*2],0x0
64006675:	pop    esi
64006676:	mov    eax,edi
64006678:	pop    ebx
64006679:	ret    0x4
6400667c:	push   0x80070057
64006681:	call   0x64001040
64006686:	int3   
64006687:	int3   
64006688:	int3   
64006689:	int3   
6400668a:	int3   
6400668b:	int3   
6400668c:	int3   
6400668d:	int3   
6400668e:	int3   
6400668f:	int3   
64006690:	mov    eax,DWORD PTR [edi]
64006692:	mov    edx,DWORD PTR [eax-0x8]
64006695:	push   ebx
64006696:	mov    ebx,DWORD PTR [eax-0xc]
64006699:	push   esi
6400669a:	mov    ecx,0x1
6400669f:	sub    ecx,DWORD PTR [eax-0x4]
640066a2:	lea    esi,[ebx+0x1]
640066a5:	sub    edx,esi
640066a7:	or     ecx,edx
640066a9:	jge    0x640066b3
640066ab:	push   esi
640066ac:	mov    ecx,edi
640066ae:	call   0x64001e00
640066b3:	test   esi,esi
640066b5:	mov    eax,DWORD PTR [edi]
640066b7:	mov    WORD PTR [eax+ebx*2],0x5c
640066bd:	jl     0x640066d6
640066bf:	mov    eax,DWORD PTR [edi]
640066c1:	cmp    esi,DWORD PTR [eax-0x8]
640066c4:	jg     0x640066d6
640066c6:	mov    DWORD PTR [eax-0xc],esi
640066c9:	mov    ecx,DWORD PTR [edi]
640066cb:	mov    WORD PTR [ecx+esi*2],0x0
640066d1:	pop    esi
640066d2:	mov    eax,edi
640066d4:	pop    ebx
640066d5:	ret    
640066d6:	push   0x80070057
640066db:	call   0x64001040
640066e0:	int3   
640066e1:	int3   
640066e2:	int3   
640066e3:	int3   
640066e4:	int3   
640066e5:	int3   
640066e6:	int3   
640066e7:	int3   
640066e8:	int3   
640066e9:	int3   
640066ea:	int3   
640066eb:	int3   
640066ec:	int3   
640066ed:	int3   
640066ee:	int3   
640066ef:	int3   
640066f0:	push   esi
640066f1:	push   edi
640066f2:	mov    edi,DWORD PTR [ebx]
640066f4:	mov    ecx,edi
640066f6:	movzx  eax,WORD PTR [ecx]
640066f9:	xor    edx,edx
640066fb:	test   ax,ax
640066fe:	je     0x64006755
64006700:	cmp    ax,0x7d
64006704:	jne    0x6400670e
64006706:	test   edx,edx
64006708:	jne    0x64006710
6400670a:	mov    edx,ecx
6400670c:	jmp    0x64006710
6400670e:	xor    edx,edx
64006710:	movzx  eax,WORD PTR [ecx+0x2]
64006714:	add    ecx,0x2
64006717:	test   ax,ax
6400671a:	jne    0x64006700
6400671c:	test   edx,edx
6400671e:	je     0x64006755
64006720:	mov    ecx,DWORD PTR [edi-0x8]
64006723:	sub    edx,edi
64006725:	sar    edx,1
64006727:	mov    eax,0x1
6400672c:	sub    eax,DWORD PTR [edi-0x4]
6400672f:	mov    esi,edx
64006731:	sub    ecx,esi
64006733:	or     eax,ecx
64006735:	jge    0x6400673f
64006737:	push   esi
64006738:	mov    ecx,ebx
6400673a:	call   0x64001e00
6400673f:	test   esi,esi
64006741:	jl     0x6400675a
64006743:	mov    eax,DWORD PTR [ebx]
64006745:	cmp    esi,DWORD PTR [eax-0x8]
64006748:	jg     0x6400675a
6400674a:	mov    DWORD PTR [eax-0xc],esi
6400674d:	mov    edx,DWORD PTR [ebx]
6400674f:	mov    WORD PTR [edx+esi*2],0x0
64006755:	pop    edi
64006756:	mov    eax,ebx
64006758:	pop    esi
64006759:	ret    
6400675a:	push   0x80070057
6400675f:	call   0x64001040
64006764:	int3   
64006765:	int3   
64006766:	int3   
64006767:	int3   
64006768:	int3   
64006769:	int3   
6400676a:	int3   
6400676b:	int3   
6400676c:	int3   
6400676d:	int3   
6400676e:	int3   
6400676f:	int3   
64006770:	mov    ecx,DWORD PTR [ebx]
64006772:	mov    eax,ecx
64006774:	cmp    WORD PTR [eax],0x7b
64006778:	jne    0x64006789
6400677a:	lea    ebx,[ebx+0x0]
64006780:	add    eax,0x2
64006783:	cmp    WORD PTR [eax],0x7b
64006787:	je     0x64006780
64006789:	cmp    eax,ecx
6400678b:	push   esi
6400678c:	je     0x640067e8
6400678e:	sub    eax,ecx
64006790:	sar    eax,1
64006792:	push   edi
64006793:	mov    edx,0x1
64006798:	sub    edx,DWORD PTR [ecx-0x4]
6400679b:	mov    edi,eax
6400679d:	mov    eax,DWORD PTR [ecx-0xc]
640067a0:	mov    ecx,DWORD PTR [ecx-0x8]
640067a3:	sub    ecx,eax
640067a5:	or     edx,ecx
640067a7:	jge    0x640067b1
640067a9:	push   eax
640067aa:	mov    ecx,ebx
640067ac:	call   0x64001e00
640067b1:	mov    eax,DWORD PTR [ebx]
640067b3:	mov    esi,DWORD PTR [eax-0xc]
640067b6:	sub    esi,edi
640067b8:	lea    ecx,[esi+esi*1+0x2]
640067bc:	push   ecx
640067bd:	lea    edx,[eax+edi*2]
640067c0:	push   edx
640067c1:	push   ecx
640067c2:	push   eax
640067c3:	call   0x64013943
640067c8:	push   eax
640067c9:	call   0x64001e90
640067ce:	add    esp,0x14
640067d1:	test   esi,esi
640067d3:	pop    edi
640067d4:	jl     0x640067ec
640067d6:	mov    eax,DWORD PTR [ebx]
640067d8:	cmp    esi,DWORD PTR [eax-0x8]
640067db:	jg     0x640067ec
640067dd:	mov    DWORD PTR [eax-0xc],esi
640067e0:	mov    eax,DWORD PTR [ebx]
640067e2:	mov    WORD PTR [eax+esi*2],0x0
640067e8:	mov    eax,ebx
640067ea:	pop    esi
640067eb:	ret    
640067ec:	push   0x80070057
640067f1:	call   0x64001040
640067f6:	int3   
640067f7:	int3   
640067f8:	int3   
640067f9:	int3   
640067fa:	int3   
640067fb:	int3   
640067fc:	int3   
640067fd:	int3   
640067fe:	int3   
640067ff:	int3   
64006800:	push   esi
64006801:	mov    esi,DWORD PTR [esp+0x8]
64006805:	test   esi,esi
64006807:	jne    0x64006816
64006809:	xor    eax,eax
6400680b:	push   eax
6400680c:	push   esi
6400680d:	call   0x640029a0
64006812:	pop    esi
64006813:	ret    0x4
64006816:	mov    eax,esi
64006818:	push   edi
64006819:	lea    edi,[eax+0x2]
6400681c:	lea    esp,[esp+0x0]
64006820:	mov    dx,WORD PTR [eax]
64006823:	add    eax,0x2
64006826:	test   dx,dx
64006829:	jne    0x64006820
6400682b:	sub    eax,edi
6400682d:	pop    edi
6400682e:	sar    eax,1
64006830:	push   eax
64006831:	push   esi
64006832:	call   0x640029a0
64006837:	pop    esi
64006838:	ret    0x4
6400683b:	int3   
6400683c:	int3   
6400683d:	int3   
6400683e:	int3   
6400683f:	int3   
64006840:	push   ebp
64006841:	mov    ebp,esp
64006843:	and    esp,0xfffffff8
64006846:	push   0xffffffff
64006848:	push   0x640241e1
6400684d:	mov    eax,fs:0x0
64006853:	push   eax
64006854:	sub    esp,0xd0
6400685a:	mov    eax,ds:0x6402f09c
6400685f:	xor    eax,esp
64006861:	mov    DWORD PTR [esp+0xc8],eax
64006868:	push   ebx
64006869:	push   esi
6400686a:	push   edi
6400686b:	mov    eax,ds:0x6402f09c
64006870:	xor    eax,esp
64006872:	push   eax
64006873:	lea    eax,[esp+0xe0]
6400687a:	mov    fs:0x0,eax
64006880:	mov    eax,ds:0x64033270
64006885:	mov    esi,DWORD PTR [ebp+0x8]
64006888:	xor    ebx,ebx
6400688a:	cmp    eax,ebx
6400688c:	mov    DWORD PTR [esp+0x28],esi
64006890:	jne    0x640068a0
64006892:	push   ebx
64006893:	push   ebx
64006894:	push   ebx
64006895:	call   DWORD PTR ds:0x64026064
6400689b:	mov    ds:0x64033270,eax
640068a0:	push   0xffffffff
640068a2:	push   eax
640068a3:	call   DWORD PTR ds:0x640260b4
640068a9:	test   eax,eax
640068ab:	je     0x640068b4
640068ad:	mov    eax,esi
640068af:	jmp    0x64006aff
640068b4:	mov    eax,DWORD PTR [ebp+0xc]
640068b7:	push   eax
640068b8:	mov    edi,0xf
640068bd:	push   esi
640068be:	lea    ecx,[esp+0xa8]
640068c5:	mov    DWORD PTR [esp+0xc0],edi
640068cc:	mov    DWORD PTR [esp+0xbc],ebx
640068d3:	mov    BYTE PTR [esp+0xac],bl
640068da:	call   0x64001880
640068df:	lea    ecx,[esp+0xa0]
640068e6:	push   ecx
640068e7:	lea    edx,[esp+0x18]
640068eb:	push   edx
640068ec:	mov    DWORD PTR [esp+0xf0],ebx
640068f3:	call   0x64007210
640068f8:	mov    ecx,eax
640068fa:	call   0x64007b10
640068ff:	call   0x64007210
64006904:	mov    esi,DWORD PTR [esp+0x14]
64006908:	cmp    esi,ebx
6400690a:	mov    ecx,DWORD PTR [eax+0x4]
6400690d:	mov    DWORD PTR [esp+0x20],ecx
64006911:	je     0x64006917
64006913:	cmp    esi,eax
64006915:	je     0x6400691c
64006917:	call   0x64013ac8
6400691c:	mov    edx,DWORD PTR [esp+0x20]
64006920:	cmp    DWORD PTR [esp+0x18],edx
64006924:	jne    0x64006a28
6400692a:	sub    esp,0x1c
6400692d:	mov    ecx,esp
6400692f:	mov    DWORD PTR [esp+0x48],esp
64006933:	push   0xffffffff
64006935:	push   ebx
64006936:	lea    eax,[esp+0xc4]
6400693d:	mov    DWORD PTR [ecx+0x18],edi
64006940:	mov    DWORD PTR [ecx+0x14],ebx
64006943:	push   eax
64006944:	mov    BYTE PTR [ecx+0x4],bl
64006947:	call   0x640017a0
6400694c:	lea    ecx,[esp+0xd8]
64006953:	push   ecx
64006954:	call   0x640072a0
64006959:	add    esp,0x4
6400695c:	mov    ecx,esp
6400695e:	mov    BYTE PTR [esp+0x104],0x1
64006966:	mov    DWORD PTR [esp+0x48],esp
6400696a:	push   0xffffffff
6400696c:	push   ebx
6400696d:	lea    edx,[esp+0xe0]
64006974:	mov    DWORD PTR [ecx+0x18],edi
64006977:	mov    DWORD PTR [ecx+0x14],ebx
6400697a:	push   edx
6400697b:	mov    BYTE PTR [ecx+0x4],bl
6400697e:	call   0x640017a0
64006983:	sub    esp,0x1c
64006986:	mov    ecx,esp
64006988:	mov    BYTE PTR [esp+0x120],0x2
64006990:	mov    DWORD PTR [esp+0x54],esp
64006994:	push   0xffffffff
64006996:	push   ebx
64006997:	lea    eax,[esp+0xe0]
6400699e:	mov    DWORD PTR [ecx+0x18],edi
640069a1:	mov    DWORD PTR [ecx+0x14],ebx
640069a4:	push   eax
640069a5:	mov    BYTE PTR [ecx+0x4],bl
640069a8:	call   0x640017a0
640069ad:	lea    ecx,[esp+0xa0]
640069b4:	push   ecx
640069b5:	mov    BYTE PTR [esp+0x124],0x1
640069bd:	call   0x64009d30
640069c2:	add    esp,0x3c
640069c5:	push   eax
640069c6:	lea    ecx,[esp+0x34]
640069ca:	mov    BYTE PTR [esp+0xec],0x3
640069d2:	call   0x64009dd0
640069d7:	lea    edx,[esp+0x30]
640069db:	push   edx
640069dc:	lea    eax,[esp+0x20]
640069e0:	push   eax
640069e1:	mov    BYTE PTR [esp+0xf0],0x4
640069e9:	call   0x64007210
640069ee:	mov    ecx,eax
640069f0:	call   0x64007980
640069f5:	lea    ecx,[esp+0x30]
640069f9:	call   0x64011030
640069fe:	lea    ecx,[esp+0x68]
64006a02:	call   0x64011030
64006a07:	mov    BYTE PTR [esp+0xe8],bl
64006a0e:	cmp    DWORD PTR [esp+0xd4],0x10
64006a16:	jb     0x64006a28
64006a18:	mov    ecx,DWORD PTR [esp+0xc0]
64006a1f:	push   ecx
64006a20:	call   0x64013712
64006a25:	add    esp,0x4
64006a28:	mov    edx,DWORD PTR [ebp+0x10]
64006a2b:	movzx  eax,BYTE PTR [edx]
64006a2e:	cmp    eax,0x100
64006a33:	jge    0x64006a57
64006a35:	lea    ecx,[esp+0xa0]
64006a3c:	push   ecx
64006a3d:	lea    edx,[esp+0x20]
64006a41:	push   edx
64006a42:	call   0x64007210
64006a47:	mov    ecx,eax
64006a49:	call   0x64007b10
64006a4e:	mov    esi,DWORD PTR [eax]
64006a50:	mov    eax,DWORD PTR [eax+0x4]
64006a53:	mov    DWORD PTR [esp+0x18],eax
64006a57:	call   0x64007210
64006a5c:	cmp    esi,ebx
64006a5e:	mov    ecx,DWORD PTR [eax+0x4]
64006a61:	mov    DWORD PTR [esp+0x20],ecx
64006a65:	je     0x64006a6b
64006a67:	cmp    esi,eax
64006a69:	je     0x64006a70
64006a6b:	call   0x64013ac8
64006a70:	mov    edi,DWORD PTR [esp+0x18]
64006a74:	cmp    edi,DWORD PTR [esp+0x20]
64006a78:	je     0x64006a9d
64006a7a:	cmp    esi,ebx
64006a7c:	jne    0x64006a83
64006a7e:	call   0x64013ac8
64006a83:	cmp    edi,DWORD PTR [esi+0x4]
64006a86:	jne    0x64006a8d
64006a88:	call   0x64013ac8
64006a8d:	cmp    DWORD PTR [edi+0x40],0x10
64006a91:	jb     0x64006a98
64006a93:	mov    edi,DWORD PTR [edi+0x2c]
64006a96:	jmp    0x64006aa1
64006a98:	add    edi,0x2c
64006a9b:	jmp    0x64006aa1
64006a9d:	mov    edi,DWORD PTR [esp+0x28]
64006aa1:	cmp    DWORD PTR ds:0x64031040,ebx
64006aa7:	jne    0x64006ac5
64006aa9:	push   0x64028648
64006aae:	push   0x64028658
64006ab3:	call   DWORD PTR ds:0x64026078
64006ab9:	push   eax
64006aba:	call   DWORD PTR ds:0x64026014
64006ac0:	mov    ds:0x64031040,eax
64006ac5:	mov    eax,ds:0x64033270
64006aca:	cmp    eax,ebx
64006acc:	jne    0x64006adc
64006ace:	push   ebx
64006acf:	push   ebx
64006ad0:	push   ebx
64006ad1:	call   DWORD PTR ds:0x64026064
64006ad7:	mov    ds:0x64033270,eax
64006adc:	push   eax
64006add:	call   DWORD PTR ds:0x64031040
64006ae3:	cmp    DWORD PTR [esp+0xb8],0x10
64006aeb:	jb     0x64006afd
64006aed:	mov    edx,DWORD PTR [esp+0xa4]
64006af4:	push   edx
64006af5:	call   0x64013712
64006afa:	add    esp,0x4
64006afd:	mov    eax,edi
64006aff:	mov    ecx,DWORD PTR [esp+0xe0]
64006b06:	mov    DWORD PTR fs:0x0,ecx
64006b0d:	pop    ecx
64006b0e:	pop    edi
64006b0f:	pop    esi
64006b10:	pop    ebx
64006b11:	mov    ecx,DWORD PTR [esp+0xc8]
64006b18:	xor    ecx,esp
64006b1a:	call   0x64013f6c
64006b1f:	mov    esp,ebp
64006b21:	pop    ebp
64006b22:	ret    
64006b23:	int3   
64006b24:	int3   
64006b25:	int3   
64006b26:	int3   
64006b27:	int3   
64006b28:	int3   
64006b29:	int3   
64006b2a:	int3   
64006b2b:	int3   
64006b2c:	int3   
64006b2d:	int3   
64006b2e:	int3   
64006b2f:	int3   
64006b30:	push   ebp
64006b31:	mov    ebp,esp
64006b33:	and    esp,0xfffffff8
64006b36:	push   0xffffffff
64006b38:	push   0x64024181
64006b3d:	mov    eax,fs:0x0
64006b43:	push   eax
64006b44:	sub    esp,0xd0
64006b4a:	mov    eax,ds:0x6402f09c
64006b4f:	xor    eax,esp
64006b51:	mov    DWORD PTR [esp+0xc8],eax
64006b58:	push   ebx
64006b59:	push   esi
64006b5a:	push   edi
64006b5b:	mov    eax,ds:0x6402f09c
64006b60:	xor    eax,esp
64006b62:	push   eax
64006b63:	lea    eax,[esp+0xe0]
64006b6a:	mov    fs:0x0,eax
64006b70:	mov    eax,ds:0x64033270
64006b75:	mov    esi,DWORD PTR [ebp+0x8]
64006b78:	xor    ebx,ebx
64006b7a:	cmp    eax,ebx
64006b7c:	mov    DWORD PTR [esp+0x28],esi
64006b80:	jne    0x64006b90
64006b82:	push   ebx
64006b83:	push   ebx
64006b84:	push   ebx
64006b85:	call   DWORD PTR ds:0x64026064
64006b8b:	mov    ds:0x64033270,eax
64006b90:	push   0xffffffff
64006b92:	push   eax
64006b93:	call   DWORD PTR ds:0x640260b4
64006b99:	test   eax,eax
64006b9b:	je     0x64006ba4
64006b9d:	mov    eax,esi
64006b9f:	jmp    0x64006df3
64006ba4:	mov    eax,DWORD PTR [ebp+0xc]
64006ba7:	push   eax
64006ba8:	mov    edi,0x7
64006bad:	push   esi
64006bae:	lea    ecx,[esp+0xa8]
64006bb5:	mov    DWORD PTR [esp+0xc0],edi
64006bbc:	mov    DWORD PTR [esp+0xbc],ebx
64006bc3:	mov    WORD PTR [esp+0xac],bx
64006bcb:	call   0x64008630
64006bd0:	lea    ecx,[esp+0xa0]
64006bd7:	push   ecx
64006bd8:	lea    edx,[esp+0x18]
64006bdc:	push   edx
64006bdd:	mov    DWORD PTR [esp+0xf0],ebx
64006be4:	call   0x64007370
64006be9:	mov    ecx,eax
64006beb:	call   0x64007cd0
64006bf0:	call   0x64007370
64006bf5:	mov    esi,DWORD PTR [esp+0x14]
64006bf9:	cmp    esi,ebx
64006bfb:	mov    ecx,DWORD PTR [eax+0x4]
64006bfe:	mov    DWORD PTR [esp+0x20],ecx
64006c02:	je     0x64006c08
64006c04:	cmp    esi,eax
64006c06:	je     0x64006c0d
64006c08:	call   0x64013ac8
64006c0d:	mov    edx,DWORD PTR [esp+0x20]
64006c11:	cmp    DWORD PTR [esp+0x18],edx
64006c15:	jne    0x64006d1c
64006c1b:	sub    esp,0x1c
64006c1e:	mov    ecx,esp
64006c20:	mov    DWORD PTR [esp+0x48],esp
64006c24:	push   0xffffffff
64006c26:	push   ebx
64006c27:	lea    eax,[esp+0xc4]
64006c2e:	mov    DWORD PTR [ecx+0x18],edi
64006c31:	mov    DWORD PTR [ecx+0x14],ebx
64006c34:	push   eax
64006c35:	mov    WORD PTR [ecx+0x4],bx
64006c39:	call   0x64008540
64006c3e:	lea    ecx,[esp+0xd8]
64006c45:	push   ecx
64006c46:	call   0x64007400
64006c4b:	add    esp,0x4
64006c4e:	mov    ecx,esp
64006c50:	mov    BYTE PTR [esp+0x104],0x1
64006c58:	mov    DWORD PTR [esp+0x48],esp
64006c5c:	push   0xffffffff
64006c5e:	push   ebx
64006c5f:	lea    edx,[esp+0xe0]
64006c66:	mov    DWORD PTR [ecx+0x18],edi
64006c69:	mov    DWORD PTR [ecx+0x14],ebx
64006c6c:	push   edx
64006c6d:	mov    WORD PTR [ecx+0x4],bx
64006c71:	call   0x64008540
64006c76:	sub    esp,0x1c
64006c79:	mov    ecx,esp
64006c7b:	mov    BYTE PTR [esp+0x120],0x2
64006c83:	mov    DWORD PTR [esp+0x54],esp
64006c87:	push   0xffffffff
64006c89:	push   ebx
64006c8a:	lea    eax,[esp+0xe0]
64006c91:	mov    DWORD PTR [ecx+0x18],edi
64006c94:	mov    DWORD PTR [ecx+0x14],ebx
64006c97:	push   eax
64006c98:	mov    WORD PTR [ecx+0x4],bx
64006c9c:	call   0x64008540
64006ca1:	lea    ecx,[esp+0xa0]
64006ca8:	push   ecx
64006ca9:	mov    BYTE PTR [esp+0x124],0x1
64006cb1:	call   0x64009e50
64006cb6:	add    esp,0x3c
64006cb9:	push   eax
64006cba:	lea    ecx,[esp+0x34]
64006cbe:	mov    BYTE PTR [esp+0xec],0x3
64006cc6:	call   0x64009ef0
64006ccb:	lea    edx,[esp+0x30]
64006ccf:	push   edx
64006cd0:	lea    eax,[esp+0x20]
64006cd4:	push   eax
64006cd5:	mov    BYTE PTR [esp+0xf0],0x4
64006cdd:	call   0x64007370
64006ce2:	mov    ecx,eax
64006ce4:	call   0x64007bc0
64006ce9:	lea    ecx,[esp+0x30]
64006ced:	call   0x640070e0
64006cf2:	lea    ecx,[esp+0x68]
64006cf6:	call   0x640070e0
64006cfb:	mov    BYTE PTR [esp+0xe8],bl
64006d02:	cmp    DWORD PTR [esp+0xd4],0x8
64006d0a:	jb     0x64006d1c
64006d0c:	mov    ecx,DWORD PTR [esp+0xc0]
64006d13:	push   ecx
64006d14:	call   0x64013712
64006d19:	add    esp,0x4
64006d1c:	mov    edx,DWORD PTR [ebp+0x10]
64006d1f:	movzx  eax,BYTE PTR [edx]
64006d22:	cmp    eax,0x100
64006d27:	jge    0x64006d4b
64006d29:	lea    ecx,[esp+0xa0]
64006d30:	push   ecx
64006d31:	lea    edx,[esp+0x20]
64006d35:	push   edx
64006d36:	call   0x64007370
64006d3b:	mov    ecx,eax
64006d3d:	call   0x64007cd0
64006d42:	mov    esi,DWORD PTR [eax]
64006d44:	mov    eax,DWORD PTR [eax+0x4]
64006d47:	mov    DWORD PTR [esp+0x18],eax
64006d4b:	call   0x64007370
64006d50:	cmp    esi,ebx
64006d52:	mov    ecx,DWORD PTR [eax+0x4]
64006d55:	mov    DWORD PTR [esp+0x20],ecx
64006d59:	je     0x64006d5f
64006d5b:	cmp    esi,eax
64006d5d:	je     0x64006d64
64006d5f:	call   0x64013ac8
64006d64:	mov    edi,DWORD PTR [esp+0x18]
64006d68:	cmp    edi,DWORD PTR [esp+0x20]
64006d6c:	je     0x64006d91
64006d6e:	cmp    esi,ebx
64006d70:	jne    0x64006d77
64006d72:	call   0x64013ac8
64006d77:	cmp    edi,DWORD PTR [esi+0x4]
64006d7a:	jne    0x64006d81
64006d7c:	call   0x64013ac8
64006d81:	cmp    DWORD PTR [edi+0x40],0x8
64006d85:	jb     0x64006d8c
64006d87:	mov    edi,DWORD PTR [edi+0x2c]
64006d8a:	jmp    0x64006d95
64006d8c:	add    edi,0x2c
64006d8f:	jmp    0x64006d95
64006d91:	mov    edi,DWORD PTR [esp+0x28]
64006d95:	cmp    DWORD PTR ds:0x64031040,ebx
64006d9b:	jne    0x64006db9
64006d9d:	push   0x64028648
64006da2:	push   0x64028658
64006da7:	call   DWORD PTR ds:0x64026078
64006dad:	push   eax
64006dae:	call   DWORD PTR ds:0x64026014
64006db4:	mov    ds:0x64031040,eax
64006db9:	mov    eax,ds:0x64033270
64006dbe:	cmp    eax,ebx
64006dc0:	jne    0x64006dd0
64006dc2:	push   ebx
64006dc3:	push   ebx
64006dc4:	push   ebx
64006dc5:	call   DWORD PTR ds:0x64026064
64006dcb:	mov    ds:0x64033270,eax
64006dd0:	push   eax
64006dd1:	call   DWORD PTR ds:0x64031040
64006dd7:	cmp    DWORD PTR [esp+0xb8],0x8
64006ddf:	jb     0x64006df1
64006de1:	mov    edx,DWORD PTR [esp+0xa4]
64006de8:	push   edx
64006de9:	call   0x64013712
64006dee:	add    esp,0x4
64006df1:	mov    eax,edi
64006df3:	mov    ecx,DWORD PTR [esp+0xe0]
64006dfa:	mov    DWORD PTR fs:0x0,ecx
64006e01:	pop    ecx
64006e02:	pop    edi
64006e03:	pop    esi
64006e04:	pop    ebx
64006e05:	mov    ecx,DWORD PTR [esp+0xc8]
64006e0c:	xor    ecx,esp
64006e0e:	call   0x64013f6c
64006e13:	mov    esp,ebp
64006e15:	pop    ebp
64006e16:	ret    
64006e17:	int3   
64006e18:	int3   
64006e19:	int3   
64006e1a:	int3   
64006e1b:	int3   
64006e1c:	int3   
64006e1d:	int3   
64006e1e:	int3   
64006e1f:	int3   
64006e20:	push   ebp
64006e21:	mov    ebp,esp
64006e23:	push   0xffffffff
64006e25:	push   0x64024c20
64006e2a:	mov    eax,fs:0x0
64006e30:	push   eax
64006e31:	push   ecx
64006e32:	push   ebx
64006e33:	push   esi
64006e34:	push   edi
64006e35:	mov    eax,ds:0x6402f09c
64006e3a:	xor    eax,ebp
64006e3c:	push   eax
64006e3d:	lea    eax,[ebp-0xc]
64006e40:	mov    fs:0x0,eax
64006e46:	mov    DWORD PTR [ebp-0x10],esp
64006e49:	mov    esi,DWORD PTR [ebp+0x8]
64006e4c:	call   0x64008200
64006e51:	mov    DWORD PTR [esi+0x4],eax
64006e54:	mov    BYTE PTR [eax+0x29],0x1
64006e58:	mov    eax,DWORD PTR [esi+0x4]
64006e5b:	mov    DWORD PTR [eax+0x4],eax
64006e5e:	mov    eax,DWORD PTR [esi+0x4]
64006e61:	mov    DWORD PTR [eax],eax
64006e63:	mov    eax,DWORD PTR [esi+0x4]
64006e66:	mov    DWORD PTR [eax+0x8],eax
64006e69:	mov    ebx,0x640334b4
64006e6e:	mov    eax,esi
64006e70:	mov    DWORD PTR [esi+0x8],0x0
64006e77:	mov    DWORD PTR [ebp-0x4],0x0
64006e7e:	call   0x640075e0
64006e83:	mov    eax,esi
64006e85:	mov    ecx,DWORD PTR [ebp-0xc]
64006e88:	mov    DWORD PTR fs:0x0,ecx
64006e8f:	pop    ecx
64006e90:	pop    edi
64006e91:	pop    esi
64006e92:	pop    ebx
64006e93:	mov    esp,ebp
64006e95:	pop    ebp
64006e96:	ret    0x4
64006e99:	mov    eax,DWORD PTR [ebp+0x8]
64006e9c:	call   0x640078d0
64006ea1:	push   0x0
64006ea3:	push   0x0
64006ea5:	call   0x64013b5b
64006eaa:	int3   
64006eab:	int3   
64006eac:	int3   
64006ead:	int3   
64006eae:	int3   
64006eaf:	int3   
64006eb0:	push   ebp
64006eb1:	mov    ebp,esp
64006eb3:	and    esp,0xfffffff8
64006eb6:	sub    esp,0x8
64006eb9:	push   ebx
64006eba:	push   edi
64006ebb:	mov    ebx,eax
64006ebd:	mov    edi,ecx
64006ebf:	cmp    edi,ebx
64006ec1:	je     0x64006edd
64006ec3:	mov    eax,DWORD PTR [edi+0x4]
64006ec6:	mov    ecx,DWORD PTR [eax]
64006ec8:	push   eax
64006ec9:	push   edi
64006eca:	push   ecx
64006ecb:	push   edi
64006ecc:	lea    eax,[esp+0x18]
64006ed0:	push   eax
64006ed1:	call   0x640074d0
64006ed6:	mov    eax,edi
64006ed8:	call   0x640075e0
64006edd:	mov    eax,edi
64006edf:	pop    edi
64006ee0:	pop    ebx
64006ee1:	mov    esp,ebp
64006ee3:	pop    ebp
64006ee4:	ret    
64006ee5:	int3   
64006ee6:	int3   
64006ee7:	int3   
64006ee8:	int3   
64006ee9:	int3   
64006eea:	int3   
64006eeb:	int3   
64006eec:	int3   
64006eed:	int3   
64006eee:	int3   
64006eef:	int3   
64006ef0:	push   ebp
64006ef1:	mov    ebp,esp
64006ef3:	and    esp,0xfffffff8
64006ef6:	sub    esp,0x1c
64006ef9:	mov    ecx,DWORD PTR [ebp+0x8]
64006efc:	mov    eax,DWORD PTR [ecx+0x4]
64006eff:	push   ebx
64006f00:	push   esi
64006f01:	mov    esi,DWORD PTR [eax+0x4]
64006f04:	cmp    BYTE PTR [esi+0x29],0x0
64006f08:	mov    ebx,eax
64006f0a:	mov    al,0x1
64006f0c:	push   edi
64006f0d:	mov    BYTE PTR [esp+0x10],al
64006f11:	jne    0x64006fb2
64006f17:	mov    edx,DWORD PTR [ebp+0x10]
64006f1a:	mov    eax,DWORD PTR [edx+0x14]
64006f1d:	mov    ecx,DWORD PTR [edx+0x18]
64006f20:	mov    DWORD PTR [esp+0x18],eax
64006f24:	mov    DWORD PTR [esp+0x14],eax
64006f28:	mov    DWORD PTR [esp+0x1c],ecx
64006f2c:	jmp    0x64006f37
64006f2e:	mov    edi,edi
64006f30:	mov    edx,DWORD PTR [ebp+0x10]
64006f33:	mov    eax,DWORD PTR [esp+0x14]
64006f37:	cmp    DWORD PTR [esi+0x24],0x10
64006f3b:	mov    ebx,DWORD PTR [esi+0x20]
64006f3e:	mov    DWORD PTR [esp+0x20],esi
64006f42:	jb     0x64006f49
64006f44:	mov    ecx,DWORD PTR [esi+0x10]
64006f47:	jmp    0x64006f4c
64006f49:	lea    ecx,[esi+0x10]
64006f4c:	mov    edi,DWORD PTR [esp+0x18]
64006f50:	cmp    eax,edi
64006f52:	mov    DWORD PTR [esp+0xc],ecx
64006f56:	jae    0x64006f5a
64006f58:	mov    edi,eax
64006f5a:	cmp    edi,ebx
64006f5c:	mov    ecx,edi
64006f5e:	jb     0x64006f62
64006f60:	mov    ecx,ebx
64006f62:	cmp    DWORD PTR [esp+0x1c],0x10
64006f67:	lea    eax,[edx+0x4]
64006f6a:	jb     0x64006f6e
64006f6c:	mov    eax,DWORD PTR [eax]
64006f6e:	mov    edx,DWORD PTR [esp+0xc]
64006f72:	push   ecx
64006f73:	push   edx
64006f74:	push   eax
64006f75:	call   0x64002c30
64006f7a:	add    esp,0xc
64006f7d:	test   eax,eax
64006f7f:	jne    0x64006f93
64006f81:	cmp    edi,ebx
64006f83:	jae    0x64006f8a
64006f85:	or     eax,0xffffffff
64006f88:	jmp    0x64006f91
64006f8a:	xor    eax,eax
64006f8c:	cmp    edi,ebx
64006f8e:	setne  al
64006f91:	test   eax,eax
64006f93:	setl   al
64006f96:	test   al,al
64006f98:	mov    BYTE PTR [esp+0x10],al
64006f9c:	je     0x64006fa2
64006f9e:	mov    esi,DWORD PTR [esi]
64006fa0:	jmp    0x64006fa5
64006fa2:	mov    esi,DWORD PTR [esi+0x8]
64006fa5:	cmp    BYTE PTR [esi+0x29],0x0
64006fa9:	je     0x64006f30
64006fab:	mov    ebx,DWORD PTR [esp+0x20]
64006faf:	mov    ecx,DWORD PTR [ebp+0x8]
64006fb2:	test   al,al
64006fb4:	mov    esi,ebx
64006fb6:	mov    DWORD PTR [esp+0x24],esi
64006fba:	mov    DWORD PTR [esp+0x20],ecx
64006fbe:	je     0x64007003
64006fc0:	mov    eax,DWORD PTR [ecx+0x4]
64006fc3:	cmp    ebx,DWORD PTR [eax]
64006fc5:	jne    0x64006ff6
64006fc7:	mov    edx,DWORD PTR [ebp+0x10]
64006fca:	push   edx
64006fcb:	push   0x1
64006fcd:	lea    eax,[esp+0x28]
64006fd1:	push   eax
64006fd2:	push   ecx
64006fd3:	mov    ecx,ebx
64006fd5:	call   0x64007650
64006fda:	mov    edx,DWORD PTR [eax]
64006fdc:	mov    ecx,DWORD PTR [ebp+0xc]
64006fdf:	mov    eax,DWORD PTR [eax+0x4]
64006fe2:	mov    DWORD PTR [ecx+0x4],eax
64006fe5:	mov    DWORD PTR [ecx],edx
64006fe7:	mov    BYTE PTR [ecx+0x8],0x1
64006feb:	mov    eax,ecx
64006fed:	pop    edi
64006fee:	pop    esi
64006fef:	pop    ebx
64006ff0:	mov    esp,ebp
64006ff2:	pop    ebp
64006ff3:	ret    0xc
64006ff6:	lea    esi,[esp+0x20]
64006ffa:	call   0x64008af0
64006fff:	mov    esi,DWORD PTR [esp+0x24]
64007003:	mov    edi,DWORD PTR [ebp+0x10]
64007006:	cmp    DWORD PTR [edi+0x18],0x10
6400700a:	mov    edx,DWORD PTR [edi+0x14]
6400700d:	lea    ecx,[esi+0xc]
64007010:	jb     0x64007017
64007012:	mov    eax,DWORD PTR [edi+0x4]
64007015:	jmp    0x6400701a
64007017:	lea    eax,[edi+0x4]
6400701a:	push   edx
6400701b:	mov    edx,DWORD PTR [ecx+0x14]
6400701e:	push   eax
6400701f:	push   edx
64007020:	push   0x0
64007022:	call   0x640071a0
64007027:	test   eax,eax
64007029:	jge    0x6400705d
6400702b:	mov    eax,DWORD PTR [esp+0x10]
6400702f:	mov    edx,DWORD PTR [ebp+0x8]
64007032:	push   edi
64007033:	push   eax
64007034:	lea    ecx,[esp+0x28]
64007038:	push   ecx
64007039:	push   edx
6400703a:	mov    ecx,ebx
6400703c:	call   0x64007650
64007041:	mov    edx,DWORD PTR [eax]
64007043:	mov    ecx,DWORD PTR [ebp+0xc]
64007046:	mov    eax,DWORD PTR [eax+0x4]
64007049:	mov    DWORD PTR [ecx+0x4],eax
6400704c:	mov    DWORD PTR [ecx],edx
6400704e:	mov    BYTE PTR [ecx+0x8],0x1
64007052:	mov    eax,ecx
64007054:	pop    edi
64007055:	pop    esi
64007056:	pop    ebx
64007057:	mov    esp,ebp
64007059:	pop    ebp
6400705a:	ret    0xc
6400705d:	mov    eax,DWORD PTR [ebp+0xc]
64007060:	mov    ecx,DWORD PTR [esp+0x20]
64007064:	pop    edi
64007065:	mov    DWORD PTR [eax+0x4],esi
64007068:	pop    esi
64007069:	mov    DWORD PTR [eax],ecx
6400706b:	mov    BYTE PTR [eax+0x8],0x0
6400706f:	pop    ebx
64007070:	mov    esp,ebp
64007072:	pop    ebp
64007073:	ret    0xc
64007076:	int3   
64007077:	int3   
64007078:	int3   
64007079:	int3   
6400707a:	int3   
6400707b:	int3   
6400707c:	int3   
6400707d:	int3   
6400707e:	int3   
6400707f:	int3   
64007080:	push   ebp
64007081:	mov    ebp,esp
64007083:	and    esp,0xfffffff8
64007086:	sub    esp,0x8
64007089:	push   ebx
6400708a:	push   edi
6400708b:	mov    ecx,esi
6400708d:	mov    edi,eax
6400708f:	call   0x64008a50
64007094:	test   esi,esi
64007096:	mov    ebx,eax
64007098:	jne    0x6400709f
6400709a:	call   0x64013ac8
6400709f:	mov    ecx,edi
640070a1:	mov    eax,esi
640070a3:	call   0x640089c0
640070a8:	test   esi,esi
640070aa:	mov    edi,eax
640070ac:	jne    0x640070b3
640070ae:	call   0x64013ac8
640070b3:	mov    DWORD PTR [esp+0xc],0x0
640070bb:	mov    eax,DWORD PTR [esp+0xc]
640070bf:	push   eax
640070c0:	push   ebx
640070c1:	push   esi
640070c2:	push   edi
640070c3:	push   esi
640070c4:	lea    ebx,[esp+0x20]
640070c8:	call   0x6400a1f0
640070cd:	mov    eax,DWORD PTR [esp+0x20]
640070d1:	add    esp,0x14
640070d4:	pop    edi
640070d5:	pop    ebx
640070d6:	mov    esp,ebp
640070d8:	pop    ebp
640070d9:	ret    
640070da:	int3   
640070db:	int3   
640070dc:	int3   
640070dd:	int3   
640070de:	int3   
640070df:	int3   
640070e0:	push   esi
640070e1:	mov    esi,ecx
640070e3:	cmp    DWORD PTR [esi+0x34],0x8
640070e7:	push   edi
640070e8:	jb     0x640070f6
640070ea:	mov    eax,DWORD PTR [esi+0x20]
640070ed:	push   eax
640070ee:	call   0x64013712
640070f3:	add    esp,0x4
640070f6:	xor    edi,edi
640070f8:	mov    DWORD PTR [esi+0x34],0x7
640070ff:	mov    DWORD PTR [esi+0x30],edi
64007102:	mov    WORD PTR [esi+0x20],di
64007106:	cmp    DWORD PTR [esi+0x18],0x8
6400710a:	jb     0x64007118
6400710c:	mov    ecx,DWORD PTR [esi+0x4]
6400710f:	push   ecx
64007110:	call   0x64013712
64007115:	add    esp,0x4
64007118:	mov    DWORD PTR [esi+0x14],edi
6400711b:	mov    DWORD PTR [esi+0x18],0x7
64007122:	mov    WORD PTR [esi+0x4],di
64007126:	pop    edi
64007127:	pop    esi
64007128:	ret    
64007129:	int3   
6400712a:	int3   
6400712b:	int3   
6400712c:	int3   
6400712d:	int3   
6400712e:	int3   
6400712f:	int3   
64007130:	mov    ecx,DWORD PTR [eax]
64007132:	push   esi
64007133:	mov    esi,DWORD PTR [edi]
64007135:	lea    eax,[ecx-0x10]
64007138:	sub    esi,0x10
6400713b:	cmp    eax,esi
6400713d:	je     0x6400718d
6400713f:	cmp    DWORD PTR [esi+0xc],0x0
64007143:	push   ebx
64007144:	lea    ebx,[esi+0xc]
64007147:	jl     0x6400717c
64007149:	mov    edx,DWORD PTR [eax]
6400714b:	cmp    edx,DWORD PTR [esi]
6400714d:	jne    0x6400717c
6400714f:	push   ebp
64007150:	push   eax
64007151:	call   0x64002860
64007156:	mov    ebp,eax
64007158:	add    esp,0x4
6400715b:	or     eax,0xffffffff
6400715e:	lock xadd DWORD PTR [ebx],eax
64007162:	dec    eax
64007163:	test   eax,eax
64007165:	jg     0x64007171
64007167:	mov    ecx,DWORD PTR [esi]
64007169:	mov    edx,DWORD PTR [ecx]
6400716b:	mov    eax,DWORD PTR [edx+0x4]
6400716e:	push   esi
6400716f:	call   eax
64007171:	add    ebp,0x10
64007174:	mov    DWORD PTR [edi],ebp
64007176:	pop    ebp
64007177:	pop    ebx
64007178:	mov    eax,edi
6400717a:	pop    esi
6400717b:	ret    
6400717c:	mov    edx,DWORD PTR [ecx-0xc]
6400717f:	push   edx
64007180:	push   ecx
64007181:	mov    ecx,edi
64007183:	call   0x64002aa0
64007188:	pop    ebx
64007189:	mov    eax,edi
6400718b:	pop    esi
6400718c:	ret    
6400718d:	mov    eax,edi
6400718f:	pop    esi
64007190:	ret    
64007191:	int3   
64007192:	int3   
64007193:	int3   
64007194:	int3   
64007195:	int3   
64007196:	int3   
64007197:	int3   
64007198:	int3   
64007199:	int3   
6400719a:	int3   
6400719b:	int3   
6400719c:	int3   
6400719d:	int3   
6400719e:	int3   
6400719f:	int3   
640071a0:	push   ebx
640071a1:	push   ebp
640071a2:	mov    ebp,DWORD PTR [esp+0xc]
640071a6:	push   esi
640071a7:	push   edi
640071a8:	mov    edi,ecx
640071aa:	cmp    DWORD PTR [edi+0x14],ebp
640071ad:	jae    0x640071b4
640071af:	call   0x640136ce
640071b4:	mov    eax,DWORD PTR [edi+0x14]
640071b7:	mov    esi,DWORD PTR [esp+0x18]
640071bb:	sub    eax,ebp
640071bd:	cmp    eax,esi
640071bf:	jae    0x640071c3
640071c1:	mov    esi,eax
640071c3:	mov    ebx,DWORD PTR [esp+0x20]
640071c7:	cmp    esi,ebx
640071c9:	mov    eax,esi
640071cb:	jb     0x640071cf
640071cd:	mov    eax,ebx
640071cf:	cmp    DWORD PTR [edi+0x18],0x10
640071d3:	jb     0x640071da
640071d5:	mov    edi,DWORD PTR [edi+0x4]
640071d8:	jmp    0x640071dd
640071da:	add    edi,0x4
640071dd:	push   eax
640071de:	mov    eax,DWORD PTR [esp+0x20]
640071e2:	push   eax
640071e3:	add    edi,ebp
640071e5:	push   edi
640071e6:	call   0x64002c30
640071eb:	add    esp,0xc
640071ee:	test   eax,eax
640071f0:	jne    0x64007207
640071f2:	cmp    esi,ebx
640071f4:	jae    0x64007200
640071f6:	pop    edi
640071f7:	pop    esi
640071f8:	pop    ebp
640071f9:	or     eax,0xffffffff
640071fc:	pop    ebx
640071fd:	ret    0x10
64007200:	xor    eax,eax
64007202:	cmp    esi,ebx
64007204:	setne  al
64007207:	pop    edi
64007208:	pop    esi
64007209:	pop    ebp
6400720a:	pop    ebx
6400720b:	ret    0x10
6400720e:	int3   
6400720f:	int3   
64007210:	push   0xffffffff
64007212:	push   0x6402412e
64007217:	mov    eax,fs:0x0
6400721d:	push   eax
6400721e:	mov    eax,ds:0x6402f09c
64007223:	xor    eax,esp
64007225:	push   eax
64007226:	lea    eax,[esp+0x4]
6400722a:	mov    fs:0x0,eax
64007230:	test   BYTE PTR ds:0x6403334c,0x1
64007237:	jne    0x64007289
64007239:	or     DWORD PTR ds:0x6403334c,0x1
64007240:	mov    ecx,0x64033330
64007245:	mov    DWORD PTR [esp+0xc],0x0
6400724d:	call   0x64009730
64007252:	mov    ds:0x64033334,eax
64007257:	mov    BYTE PTR [eax+0x45],0x1
6400725b:	mov    eax,ds:0x64033334
64007260:	mov    DWORD PTR [eax+0x4],eax
64007263:	mov    eax,ds:0x64033334
64007268:	mov    DWORD PTR [eax],eax
6400726a:	mov    eax,ds:0x64033334
6400726f:	mov    DWORD PTR [eax+0x8],eax
64007272:	push   0x64025740
64007277:	mov    DWORD PTR ds:0x64033338,0x0
64007281:	call   0x6401409f
64007286:	add    esp,0x4
64007289:	mov    eax,0x64033330
6400728e:	mov    ecx,DWORD PTR [esp+0x4]
64007292:	mov    DWORD PTR fs:0x0,ecx
64007299:	pop    ecx
6400729a:	add    esp,0xc
6400729d:	ret    
6400729e:	int3   
6400729f:	int3   
640072a0:	push   0xffffffff
640072a2:	push   0x64023ca8
640072a7:	mov    eax,fs:0x0
640072ad:	push   eax
640072ae:	push   ecx
640072af:	push   ebx
640072b0:	push   ebp
640072b1:	push   esi
640072b2:	push   edi
640072b3:	mov    eax,ds:0x6402f09c
640072b8:	xor    eax,esp
640072ba:	push   eax
640072bb:	lea    eax,[esp+0x18]
640072bf:	mov    fs:0x0,eax
640072c5:	mov    esi,DWORD PTR [esp+0x28]
640072c9:	xor    eax,eax
640072cb:	mov    DWORD PTR [esp+0x14],eax
640072cf:	mov    DWORD PTR [esp+0x20],eax
640072d3:	push   0xffffffff
640072d5:	mov    DWORD PTR [esi+0x14],eax
640072d8:	mov    DWORD PTR [esi+0x18],0xf
640072df:	lea    ebp,[esi+0x4]
640072e2:	push   eax
640072e3:	mov    BYTE PTR [ebp+0x0],al
640072e6:	lea    eax,[esp+0x34]
640072ea:	push   eax
640072eb:	mov    ecx,esi
640072ed:	call   0x640017a0
640072f2:	mov    eax,DWORD PTR [esi+0x14]
640072f5:	mov    edi,0x1
640072fa:	cmp    eax,edi
640072fc:	jbe    0x6400733d
640072fe:	cmp    edi,eax
64007300:	jbe    0x64007307
64007302:	call   0x64013ac8
64007307:	cmp    DWORD PTR [esi+0x18],0x10
6400730b:	jb     0x64007312
6400730d:	mov    ebx,DWORD PTR [ebp+0x0]
64007310:	jmp    0x64007314
64007312:	mov    ebx,ebp
64007314:	lea    ecx,[edi-0x1]
64007317:	cmp    ecx,DWORD PTR [esi+0x14]
6400731a:	jbe    0x64007321
6400731c:	call   0x64013ac8
64007321:	cmp    DWORD PTR [esi+0x18],0x10
64007325:	jb     0x6400732c
64007327:	mov    eax,DWORD PTR [ebp+0x0]
6400732a:	jmp    0x6400732e
6400732c:	mov    eax,ebp
6400732e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64007332:	xor    BYTE PTR [ebx+edi*1],dl
64007335:	add    edi,0x1
64007338:	cmp    edi,DWORD PTR [esi+0x14]
6400733b:	jb     0x64007307
6400733d:	cmp    DWORD PTR [esp+0x44],0x10
64007342:	jb     0x64007351
64007344:	mov    eax,DWORD PTR [esp+0x30]
64007348:	push   eax
64007349:	call   0x64013712
6400734e:	add    esp,0x4
64007351:	mov    eax,esi
64007353:	mov    ecx,DWORD PTR [esp+0x18]
64007357:	mov    DWORD PTR fs:0x0,ecx
6400735e:	pop    ecx
6400735f:	pop    edi
64007360:	pop    esi
64007361:	pop    ebp
64007362:	pop    ebx
64007363:	add    esp,0x10
64007366:	ret    
64007367:	int3   
64007368:	int3   
64007369:	int3   
6400736a:	int3   
6400736b:	int3   
6400736c:	int3   
6400736d:	int3   
6400736e:	int3   
6400736f:	int3   
64007370:	push   0xffffffff
64007372:	push   0x640240fe
64007377:	mov    eax,fs:0x0
6400737d:	push   eax
6400737e:	mov    eax,ds:0x6402f09c
64007383:	xor    eax,esp
64007385:	push   eax
64007386:	lea    eax,[esp+0x4]
6400738a:	mov    fs:0x0,eax
64007390:	test   BYTE PTR ds:0x64033348,0x1
64007397:	jne    0x640073e9
64007399:	or     DWORD PTR ds:0x64033348,0x1
640073a0:	mov    ecx,0x6403333c
640073a5:	mov    DWORD PTR [esp+0xc],0x0
640073ad:	call   0x64009730
640073b2:	mov    ds:0x64033340,eax
640073b7:	mov    BYTE PTR [eax+0x45],0x1
640073bb:	mov    eax,ds:0x64033340
640073c0:	mov    DWORD PTR [eax+0x4],eax
640073c3:	mov    eax,ds:0x64033340
640073c8:	mov    DWORD PTR [eax],eax
640073ca:	mov    eax,ds:0x64033340
640073cf:	mov    DWORD PTR [eax+0x8],eax
640073d2:	push   0x640256f0
640073d7:	mov    DWORD PTR ds:0x64033344,0x0
640073e1:	call   0x6401409f
640073e6:	add    esp,0x4
640073e9:	mov    eax,0x6403333c
640073ee:	mov    ecx,DWORD PTR [esp+0x4]
640073f2:	mov    DWORD PTR fs:0x0,ecx
640073f9:	pop    ecx
640073fa:	add    esp,0xc
640073fd:	ret    
640073fe:	int3   
640073ff:	int3   
64007400:	push   0xffffffff
64007402:	push   0x64023c78
64007407:	mov    eax,fs:0x0
6400740d:	push   eax
6400740e:	push   ecx
6400740f:	push   ebx
64007410:	push   ebp
64007411:	push   esi
64007412:	push   edi
64007413:	mov    eax,ds:0x6402f09c
64007418:	xor    eax,esp
6400741a:	push   eax
6400741b:	lea    eax,[esp+0x18]
6400741f:	mov    fs:0x0,eax
64007425:	mov    esi,DWORD PTR [esp+0x28]
64007429:	xor    eax,eax
6400742b:	mov    DWORD PTR [esp+0x14],eax
6400742f:	mov    DWORD PTR [esp+0x20],eax
64007433:	push   0xffffffff
64007435:	mov    DWORD PTR [esi+0x14],eax
64007438:	mov    DWORD PTR [esi+0x18],0x7
6400743f:	lea    ebp,[esi+0x4]
64007442:	push   eax
64007443:	mov    WORD PTR [ebp+0x0],ax
64007447:	lea    eax,[esp+0x34]
6400744b:	push   eax
6400744c:	mov    ecx,esi
6400744e:	call   0x64008540
64007453:	mov    eax,DWORD PTR [esi+0x14]
64007456:	mov    edi,0x1
6400745b:	cmp    eax,edi
6400745d:	jbe    0x640074a0
6400745f:	cmp    edi,eax
64007461:	jbe    0x64007468
64007463:	call   0x64013ac8
64007468:	cmp    DWORD PTR [esi+0x18],0x8
6400746c:	jb     0x64007473
6400746e:	mov    ebx,DWORD PTR [ebp+0x0]
64007471:	jmp    0x64007475
64007473:	mov    ebx,ebp
64007475:	lea    ecx,[edi-0x1]
64007478:	cmp    ecx,DWORD PTR [esi+0x14]
6400747b:	jbe    0x64007482
6400747d:	call   0x64013ac8
64007482:	cmp    DWORD PTR [esi+0x18],0x8
64007486:	jb     0x6400748d
64007488:	mov    eax,DWORD PTR [ebp+0x0]
6400748b:	jmp    0x6400748f
6400748d:	mov    eax,ebp
6400748f:	mov    dx,WORD PTR [eax+edi*2-0x2]
64007494:	xor    WORD PTR [ebx+edi*2],dx
64007498:	add    edi,0x1
6400749b:	cmp    edi,DWORD PTR [esi+0x14]
6400749e:	jb     0x64007468
640074a0:	cmp    DWORD PTR [esp+0x44],0x8
640074a5:	jb     0x640074b4
640074a7:	mov    eax,DWORD PTR [esp+0x30]
640074ab:	push   eax
640074ac:	call   0x64013712
640074b1:	add    esp,0x4
640074b4:	mov    eax,esi
640074b6:	mov    ecx,DWORD PTR [esp+0x18]
640074ba:	mov    DWORD PTR fs:0x0,ecx
640074c1:	pop    ecx
640074c2:	pop    edi
640074c3:	pop    esi
640074c4:	pop    ebp
640074c5:	pop    ebx
640074c6:	add    esp,0x10
640074c9:	ret    
640074ca:	int3   
640074cb:	int3   
640074cc:	int3   
640074cd:	int3   
640074ce:	int3   
640074cf:	int3   
640074d0:	mov    eax,DWORD PTR [edi+0x4]
640074d3:	sub    esp,0xc
640074d6:	push   ebx
640074d7:	mov    ebx,DWORD PTR [eax]
640074d9:	push   ebp
640074da:	mov    ebp,DWORD PTR [esp+0x1c]
640074de:	test   ebp,ebp
640074e0:	push   esi
640074e1:	je     0x640074e7
640074e3:	cmp    ebp,edi
640074e5:	je     0x640074ec
640074e7:	call   0x64013ac8
640074ec:	mov    esi,DWORD PTR [esp+0x24]
640074f0:	cmp    esi,ebx
640074f2:	jne    0x64007550
640074f4:	mov    eax,DWORD PTR [esp+0x28]
640074f8:	test   eax,eax
640074fa:	mov    ebx,DWORD PTR [edi+0x4]
640074fd:	je     0x64007503
640074ff:	cmp    eax,edi
64007501:	je     0x64007508
64007503:	call   0x64013ac8
64007508:	cmp    DWORD PTR [esp+0x2c],ebx
6400750c:	jne    0x64007550
6400750e:	mov    ecx,DWORD PTR [edi+0x4]
64007511:	mov    edx,DWORD PTR [ecx+0x4]
64007514:	push   edx
64007515:	mov    ecx,edi
64007517:	call   0x64008960
6400751c:	mov    eax,DWORD PTR [edi+0x4]
6400751f:	mov    DWORD PTR [eax+0x4],eax
64007522:	mov    eax,DWORD PTR [edi+0x4]
64007525:	mov    DWORD PTR [edi+0x8],0x0
6400752c:	mov    DWORD PTR [eax],eax
6400752e:	mov    eax,DWORD PTR [edi+0x4]
64007531:	mov    DWORD PTR [eax+0x8],eax
64007534:	mov    eax,DWORD PTR [edi+0x4]
64007537:	mov    ecx,DWORD PTR [eax]
64007539:	mov    eax,DWORD PTR [esp+0x1c]
6400753d:	mov    DWORD PTR [eax+0x4],ecx
64007540:	mov    DWORD PTR [eax],edi
64007542:	pop    esi
64007543:	pop    ebp
64007544:	pop    ebx
64007545:	add    esp,0xc
64007548:	ret    0x14
6400754b:	jmp    0x64007550
6400754d:	lea    ecx,[ecx+0x0]
64007550:	test   ebp,ebp
64007552:	je     0x6400755a
64007554:	cmp    ebp,DWORD PTR [esp+0x28]
64007558:	je     0x6400755f
6400755a:	call   0x64013ac8
6400755f:	cmp    esi,DWORD PTR [esp+0x2c]
64007563:	je     0x640075cc
64007565:	test   ebp,ebp
64007567:	mov    DWORD PTR [esp+0x24],esi
6400756b:	jne    0x64007572
6400756d:	call   0x64013ac8
64007572:	cmp    BYTE PTR [esi+0x29],0x0
64007576:	je     0x6400757f
64007578:	call   0x64013ac8
6400757d:	jmp    0x640075b9
6400757f:	mov    eax,DWORD PTR [esi+0x8]
64007582:	cmp    BYTE PTR [eax+0x29],0x0
64007586:	jne    0x6400759e
64007588:	mov    esi,eax
6400758a:	mov    eax,DWORD PTR [esi]
6400758c:	cmp    BYTE PTR [eax+0x29],0x0
64007590:	jne    0x640075b9
64007592:	mov    esi,eax
64007594:	mov    eax,DWORD PTR [esi]
64007596:	cmp    BYTE PTR [eax+0x29],0x0
6400759a:	je     0x64007592
6400759c:	jmp    0x640075b9
6400759e:	mov    eax,DWORD PTR [esi+0x4]
640075a1:	cmp    BYTE PTR [eax+0x29],0x0
640075a5:	jne    0x640075b7
640075a7:	cmp    esi,DWORD PTR [eax+0x8]
640075aa:	jne    0x640075b7
640075ac:	mov    esi,eax
640075ae:	mov    eax,DWORD PTR [eax+0x4]
640075b1:	cmp    BYTE PTR [eax+0x29],0x0
640075b5:	je     0x640075a7
640075b7:	mov    esi,eax
640075b9:	mov    edx,DWORD PTR [esp+0x24]
640075bd:	push   edx
640075be:	push   ebp
640075bf:	lea    eax,[esp+0x18]
640075c3:	push   eax
640075c4:	push   edi
640075c5:	call   0x64007d70
640075ca:	jmp    0x64007550
640075cc:	mov    eax,DWORD PTR [esp+0x1c]
640075d0:	mov    DWORD PTR [eax+0x4],esi
640075d3:	pop    esi
640075d4:	mov    DWORD PTR [eax],ebp
640075d6:	pop    ebp
640075d7:	pop    ebx
640075d8:	add    esp,0xc
640075db:	ret    0x14
640075de:	int3   
640075df:	int3   
640075e0:	push   esi
640075e1:	mov    esi,eax
640075e3:	mov    eax,DWORD PTR [ebx+0x4]
640075e6:	push   edi
640075e7:	mov    edi,DWORD PTR [esi+0x4]
640075ea:	add    eax,0x4
640075ed:	mov    eax,DWORD PTR [eax]
640075ef:	push   edi
640075f0:	push   eax
640075f1:	mov    ecx,esi
640075f3:	call   0x64008080
640075f8:	mov    DWORD PTR [edi+0x4],eax
640075fb:	mov    ecx,DWORD PTR [ebx+0x8]
640075fe:	mov    edx,DWORD PTR [esi+0x4]
64007601:	mov    DWORD PTR [esi+0x8],ecx
64007604:	mov    eax,DWORD PTR [edx+0x4]
64007607:	cmp    BYTE PTR [eax+0x29],0x0
6400760b:	jne    0x64007641
6400760d:	mov    ecx,DWORD PTR [eax]
6400760f:	cmp    BYTE PTR [ecx+0x29],0x0
64007613:	jne    0x6400761f
64007615:	mov    eax,ecx
64007617:	mov    ecx,DWORD PTR [eax]
64007619:	cmp    BYTE PTR [ecx+0x29],0x0
6400761d:	je     0x64007615
6400761f:	mov    DWORD PTR [edx],eax
64007621:	mov    esi,DWORD PTR [esi+0x4]
64007624:	mov    ecx,DWORD PTR [esi+0x4]
64007627:	mov    eax,DWORD PTR [ecx+0x8]
6400762a:	cmp    BYTE PTR [eax+0x29],0x0
6400762e:	jne    0x6400763b
64007630:	mov    ecx,eax
64007632:	mov    eax,DWORD PTR [ecx+0x8]
64007635:	cmp    BYTE PTR [eax+0x29],0x0
64007639:	je     0x64007630
6400763b:	pop    edi
6400763c:	mov    DWORD PTR [esi+0x8],ecx
6400763f:	pop    esi
64007640:	ret    
64007641:	mov    DWORD PTR [edx],edx
64007643:	mov    esi,DWORD PTR [esi+0x4]
64007646:	pop    edi
64007647:	mov    DWORD PTR [esi+0x8],esi
6400764a:	pop    esi
6400764b:	ret    
6400764c:	int3   
6400764d:	int3   
6400764e:	int3   
6400764f:	int3   
64007650:	push   0xffffffff
64007652:	push   0x640240c8
64007657:	mov    eax,fs:0x0
6400765d:	push   eax
6400765e:	sub    esp,0x44
64007661:	push   ebx
64007662:	push   ebp
64007663:	push   esi
64007664:	push   edi
64007665:	mov    eax,ds:0x6402f09c
6400766a:	xor    eax,esp
6400766c:	push   eax
6400766d:	lea    eax,[esp+0x58]
64007671:	mov    fs:0x0,eax
64007677:	mov    esi,ecx
64007679:	mov    ebp,DWORD PTR [esp+0x68]
6400767d:	xor    ebx,ebx
6400767f:	cmp    DWORD PTR [ebp+0x8],0x9249248
64007686:	jb     0x640076d1
64007688:	push   0x13
6400768a:	push   0x6402a0d8
6400768f:	lea    ecx,[esp+0x1c]
64007693:	mov    DWORD PTR [esp+0x34],0xf
6400769b:	mov    DWORD PTR [esp+0x30],ebx
6400769f:	mov    BYTE PTR [esp+0x20],bl
640076a3:	call   0x64001880
640076a8:	lea    eax,[esp+0x14]
640076ac:	push   eax
640076ad:	lea    ecx,[esp+0x34]
640076b1:	mov    DWORD PTR [esp+0x64],ebx
640076b5:	call   0x64002cc0
640076ba:	push   0x6402c940
640076bf:	lea    ecx,[esp+0x34]
640076c3:	push   ecx
640076c4:	mov    DWORD PTR [esp+0x38],0x6402631c
640076cc:	call   0x64013b5b
640076d1:	mov    edx,DWORD PTR [esp+0x74]
640076d5:	mov    eax,DWORD PTR [ebp+0x4]
640076d8:	push   ebx
640076d9:	push   edx
640076da:	push   eax
640076db:	push   esi
640076dc:	push   eax
640076dd:	call   0x64008240
640076e2:	mov    ecx,DWORD PTR [ebp+0x4]
640076e5:	mov    edx,eax
640076e7:	mov    eax,0x1
640076ec:	add    DWORD PTR [ebp+0x8],eax
640076ef:	cmp    esi,ecx
640076f1:	mov    DWORD PTR [esp+0x68],edx
640076f5:	jne    0x64007704
640076f7:	mov    DWORD PTR [ecx+0x4],edx
640076fa:	mov    ecx,DWORD PTR [ebp+0x4]
640076fd:	mov    DWORD PTR [ecx],edx
640076ff:	mov    ecx,DWORD PTR [ebp+0x4]
64007702:	jmp    0x64007722
64007704:	cmp    BYTE PTR [esp+0x70],bl
64007708:	je     0x64007717
6400770a:	mov    DWORD PTR [esi],edx
6400770c:	mov    ecx,DWORD PTR [ebp+0x4]
6400770f:	cmp    esi,DWORD PTR [ecx]
64007711:	jne    0x64007725
64007713:	mov    DWORD PTR [ecx],edx
64007715:	jmp    0x64007725
64007717:	mov    DWORD PTR [esi+0x8],edx
6400771a:	mov    ecx,DWORD PTR [ebp+0x4]
6400771d:	cmp    esi,DWORD PTR [ecx+0x8]
64007720:	jne    0x64007725
64007722:	mov    DWORD PTR [ecx+0x8],edx
64007725:	mov    esi,DWORD PTR [edx+0x4]
64007728:	cmp    BYTE PTR [esi+0x28],bl
6400772b:	lea    ecx,[edx+0x4]
6400772e:	jne    0x640078a6
64007734:	mov    esi,DWORD PTR [ecx]
64007736:	mov    edi,DWORD PTR [esi+0x4]
64007739:	cmp    esi,DWORD PTR [edi]
6400773b:	jne    0x640077e7
64007741:	mov    edi,DWORD PTR [edi+0x8]
64007744:	cmp    BYTE PTR [edi+0x28],bl
64007747:	je     0x640077ee
6400774d:	cmp    edx,DWORD PTR [esi+0x8]
64007750:	jne    0x6400778d
64007752:	mov    edx,esi
64007754:	mov    esi,DWORD PTR [edx+0x8]
64007757:	mov    ecx,DWORD PTR [esi]
64007759:	mov    DWORD PTR [edx+0x8],ecx
6400775c:	mov    ecx,DWORD PTR [esi]
6400775e:	cmp    BYTE PTR [ecx+0x29],bl
64007761:	jne    0x64007766
64007763:	mov    DWORD PTR [ecx+0x4],edx
64007766:	mov    edi,DWORD PTR [edx+0x4]
64007769:	lea    ecx,[edx+0x4]
6400776c:	mov    DWORD PTR [esi+0x4],edi
6400776f:	mov    edi,DWORD PTR [ebp+0x4]
64007772:	cmp    edx,DWORD PTR [edi+0x4]
64007775:	jne    0x6400777c
64007777:	mov    DWORD PTR [edi+0x4],esi
6400777a:	jmp    0x64007789
6400777c:	mov    edi,DWORD PTR [ecx]
6400777e:	cmp    edx,DWORD PTR [edi]
64007780:	jne    0x64007786
64007782:	mov    DWORD PTR [edi],esi
64007784:	jmp    0x64007789
64007786:	mov    DWORD PTR [edi+0x8],esi
64007789:	mov    DWORD PTR [esi],edx
6400778b:	mov    DWORD PTR [ecx],esi
6400778d:	mov    esi,DWORD PTR [ecx]
6400778f:	mov    BYTE PTR [esi+0x28],al
64007792:	mov    esi,DWORD PTR [ecx]
64007794:	mov    esi,DWORD PTR [esi+0x4]
64007797:	mov    BYTE PTR [esi+0x28],bl
6400779a:	mov    ecx,DWORD PTR [ecx]
6400779c:	mov    ecx,DWORD PTR [ecx+0x4]
6400779f:	mov    esi,DWORD PTR [ecx]
640077a1:	mov    edi,DWORD PTR [esi+0x8]
640077a4:	mov    DWORD PTR [ecx],edi
640077a6:	mov    edi,DWORD PTR [esi+0x8]
640077a9:	cmp    BYTE PTR [edi+0x29],bl
640077ac:	jne    0x640077b1
640077ae:	mov    DWORD PTR [edi+0x4],ecx
640077b1:	mov    edi,DWORD PTR [ecx+0x4]
640077b4:	mov    DWORD PTR [esi+0x4],edi
640077b7:	mov    edi,DWORD PTR [ebp+0x4]
640077ba:	cmp    ecx,DWORD PTR [edi+0x4]
640077bd:	jne    0x640077ca
640077bf:	mov    DWORD PTR [edi+0x4],esi
640077c2:	mov    DWORD PTR [esi+0x8],ecx
640077c5:	jmp    0x64007890
640077ca:	mov    edi,DWORD PTR [ecx+0x4]
640077cd:	cmp    ecx,DWORD PTR [edi+0x8]
640077d0:	jne    0x640077dd
640077d2:	mov    DWORD PTR [edi+0x8],esi
640077d5:	mov    DWORD PTR [esi+0x8],ecx
640077d8:	jmp    0x64007890
640077dd:	mov    DWORD PTR [edi],esi
640077df:	mov    DWORD PTR [esi+0x8],ecx
640077e2:	jmp    0x64007890
640077e7:	mov    edi,DWORD PTR [edi]
640077e9:	cmp    BYTE PTR [edi+0x28],bl
640077ec:	jne    0x64007808
640077ee:	mov    edx,esi
640077f0:	mov    BYTE PTR [edx+0x28],al
640077f3:	mov    BYTE PTR [edi+0x28],al
640077f6:	mov    edx,DWORD PTR [ecx]
640077f8:	mov    edx,DWORD PTR [edx+0x4]
640077fb:	mov    BYTE PTR [edx+0x28],bl
640077fe:	mov    ecx,DWORD PTR [ecx]
64007800:	mov    edx,DWORD PTR [ecx+0x4]
64007803:	jmp    0x64007893
64007808:	cmp    edx,DWORD PTR [esi]
6400780a:	jne    0x64007849
6400780c:	mov    edx,esi
6400780e:	mov    esi,DWORD PTR [edx]
64007810:	mov    ecx,DWORD PTR [esi+0x8]
64007813:	mov    DWORD PTR [edx],ecx
64007815:	mov    ecx,DWORD PTR [esi+0x8]
64007818:	cmp    BYTE PTR [ecx+0x29],bl
6400781b:	jne    0x64007820
6400781d:	mov    DWORD PTR [ecx+0x4],edx
64007820:	mov    edi,DWORD PTR [edx+0x4]
64007823:	lea    ecx,[edx+0x4]
64007826:	mov    DWORD PTR [esi+0x4],edi
64007829:	mov    edi,DWORD PTR [ebp+0x4]
6400782c:	cmp    edx,DWORD PTR [edi+0x4]
6400782f:	jne    0x64007836
64007831:	mov    DWORD PTR [edi+0x4],esi
64007834:	jmp    0x64007844
64007836:	mov    edi,DWORD PTR [ecx]
64007838:	cmp    edx,DWORD PTR [edi+0x8]
6400783b:	jne    0x64007842
6400783d:	mov    DWORD PTR [edi+0x8],esi
64007840:	jmp    0x64007844
64007842:	mov    DWORD PTR [edi],esi
64007844:	mov    DWORD PTR [esi+0x8],edx
64007847:	mov    DWORD PTR [ecx],esi
64007849:	mov    esi,DWORD PTR [ecx]
6400784b:	mov    BYTE PTR [esi+0x28],al
6400784e:	mov    esi,DWORD PTR [ecx]
64007850:	mov    esi,DWORD PTR [esi+0x4]
64007853:	mov    BYTE PTR [esi+0x28],bl
64007856:	mov    ecx,DWORD PTR [ecx]
64007858:	mov    ecx,DWORD PTR [ecx+0x4]
6400785b:	mov    esi,DWORD PTR [ecx+0x8]
6400785e:	mov    edi,DWORD PTR [esi]
64007860:	mov    DWORD PTR [ecx+0x8],edi
64007863:	mov    edi,DWORD PTR [esi]
64007865:	cmp    BYTE PTR [edi+0x29],bl
64007868:	jne    0x6400786d
6400786a:	mov    DWORD PTR [edi+0x4],ecx
6400786d:	mov    edi,DWORD PTR [ecx+0x4]
64007870:	mov    DWORD PTR [esi+0x4],edi
64007873:	mov    edi,DWORD PTR [ebp+0x4]
64007876:	cmp    ecx,DWORD PTR [edi+0x4]
64007879:	jne    0x64007880
6400787b:	mov    DWORD PTR [edi+0x4],esi
6400787e:	jmp    0x6400788e
64007880:	mov    edi,DWORD PTR [ecx+0x4]
64007883:	cmp    ecx,DWORD PTR [edi]
64007885:	jne    0x6400788b
64007887:	mov    DWORD PTR [edi],esi
64007889:	jmp    0x6400788e
6400788b:	mov    DWORD PTR [edi+0x8],esi
6400788e:	mov    DWORD PTR [esi],ecx
64007890:	mov    DWORD PTR [ecx+0x4],esi
64007893:	mov    esi,DWORD PTR [edx+0x4]
64007896:	cmp    BYTE PTR [esi+0x28],bl
64007899:	lea    ecx,[edx+0x4]
6400789c:	je     0x64007734
640078a2:	mov    edx,DWORD PTR [esp+0x68]
640078a6:	mov    ecx,DWORD PTR [ebp+0x4]
640078a9:	mov    ecx,DWORD PTR [ecx+0x4]
640078ac:	mov    BYTE PTR [ecx+0x28],al
640078af:	mov    ecx,DWORD PTR [esp+0x6c]
640078b3:	mov    DWORD PTR [ecx+0x4],edx
640078b6:	mov    DWORD PTR [ecx],ebp
640078b8:	mov    eax,ecx
640078ba:	mov    ecx,DWORD PTR [esp+0x58]
640078be:	mov    DWORD PTR fs:0x0,ecx
640078c5:	pop    ecx
640078c6:	pop    edi
640078c7:	pop    esi
640078c8:	pop    ebp
640078c9:	pop    ebx
640078ca:	add    esp,0x50
640078cd:	ret    0x10
640078d0:	push   ebp
640078d1:	mov    ebp,esp
640078d3:	and    esp,0xfffffff8
640078d6:	sub    esp,0xc
640078d9:	push   edi
640078da:	mov    edi,eax
640078dc:	mov    eax,DWORD PTR [edi+0x4]
640078df:	mov    ecx,DWORD PTR [eax]
640078e1:	push   eax
640078e2:	push   edi
640078e3:	push   ecx
640078e4:	push   edi
640078e5:	lea    eax,[esp+0x18]
640078e9:	push   eax
640078ea:	call   0x640074d0
640078ef:	mov    ecx,DWORD PTR [edi+0x4]
640078f2:	push   ecx
640078f3:	call   0x64013712
640078f8:	add    esp,0x4
640078fb:	xor    eax,eax
640078fd:	mov    DWORD PTR [edi+0x4],eax
64007900:	mov    DWORD PTR [edi+0x8],eax
64007903:	pop    edi
64007904:	mov    esp,ebp
64007906:	pop    ebp
64007907:	ret    
64007908:	int3   
64007909:	int3   
6400790a:	int3   
6400790b:	int3   
6400790c:	int3   
6400790d:	int3   
6400790e:	int3   
6400790f:	int3   
64007910:	cmp    DWORD PTR [esi],0x0
64007913:	jne    0x6400791a
64007915:	call   0x64013ac8
6400791a:	mov    eax,DWORD PTR [esi+0x4]
6400791d:	cmp    BYTE PTR [eax+0x29],0x0
64007921:	je     0x64007928
64007923:	jmp    0x64013ac8
64007928:	mov    ecx,DWORD PTR [eax+0x8]
6400792b:	cmp    BYTE PTR [ecx+0x29],0x0
6400792f:	jne    0x6400794e
64007931:	mov    eax,DWORD PTR [ecx]
64007933:	cmp    BYTE PTR [eax+0x29],0x0
64007937:	jne    0x6400794a
64007939:	lea    esp,[esp+0x0]
64007940:	mov    ecx,eax
64007942:	mov    eax,DWORD PTR [ecx]
64007944:	cmp    BYTE PTR [eax+0x29],0x0
64007948:	je     0x64007940
6400794a:	mov    DWORD PTR [esi+0x4],ecx
6400794d:	ret    
6400794e:	mov    eax,DWORD PTR [eax+0x4]
64007951:	cmp    BYTE PTR [eax+0x29],0x0
64007955:	jne    0x6400796d
64007957:	mov    ecx,DWORD PTR [esi+0x4]
6400795a:	cmp    ecx,DWORD PTR [eax+0x8]
6400795d:	jne    0x6400796d
6400795f:	mov    DWORD PTR [esi+0x4],eax
64007962:	mov    edx,eax
64007964:	mov    eax,DWORD PTR [edx+0x4]
64007967:	cmp    BYTE PTR [eax+0x29],0x0
6400796b:	je     0x64007957
6400796d:	mov    DWORD PTR [esi+0x4],eax
64007970:	ret    
64007971:	int3   
64007972:	int3   
64007973:	int3   
64007974:	int3   
64007975:	int3   
64007976:	int3   
64007977:	int3   
64007978:	int3   
64007979:	int3   
6400797a:	int3   
6400797b:	int3   
6400797c:	int3   
6400797d:	int3   
6400797e:	int3   
6400797f:	int3   
64007980:	push   ebp
64007981:	mov    ebp,esp
64007983:	and    esp,0xfffffff8
64007986:	sub    esp,0x24
64007989:	push   ebx
6400798a:	push   esi
6400798b:	push   edi
6400798c:	mov    edi,ecx
6400798e:	mov    eax,DWORD PTR [edi+0x4]
64007991:	mov    esi,DWORD PTR [eax+0x4]
64007994:	cmp    BYTE PTR [esi+0x45],0x0
64007998:	mov    ecx,eax
6400799a:	mov    al,0x1
6400799c:	mov    DWORD PTR [esp+0x28],edi
640079a0:	mov    DWORD PTR [esp+0x10],ecx
640079a4:	mov    BYTE PTR [esp+0x18],al
640079a8:	jne    0x64007a48
640079ae:	mov    edx,DWORD PTR [ebp+0xc]
640079b1:	mov    eax,DWORD PTR [edx+0x14]
640079b4:	mov    ecx,DWORD PTR [edx+0x18]
640079b7:	mov    DWORD PTR [esp+0x20],eax
640079bb:	mov    DWORD PTR [esp+0x1c],eax
640079bf:	mov    DWORD PTR [esp+0x24],ecx
640079c3:	jmp    0x640079cc
640079c5:	mov    edx,DWORD PTR [ebp+0xc]
640079c8:	mov    eax,DWORD PTR [esp+0x1c]
640079cc:	cmp    DWORD PTR [esi+0x24],0x10
640079d0:	mov    ebx,DWORD PTR [esi+0x20]
640079d3:	mov    DWORD PTR [esp+0x10],esi
640079d7:	jb     0x640079de
640079d9:	mov    ecx,DWORD PTR [esi+0x10]
640079dc:	jmp    0x640079e1
640079de:	lea    ecx,[esi+0x10]
640079e1:	mov    edi,DWORD PTR [esp+0x20]
640079e5:	cmp    eax,edi
640079e7:	mov    DWORD PTR [esp+0x14],ecx
640079eb:	jae    0x640079ef
640079ed:	mov    edi,eax
640079ef:	cmp    edi,ebx
640079f1:	mov    ecx,edi
640079f3:	jb     0x640079f7
640079f5:	mov    ecx,ebx
640079f7:	cmp    DWORD PTR [esp+0x24],0x10
640079fc:	lea    eax,[edx+0x4]
640079ff:	jb     0x64007a03
64007a01:	mov    eax,DWORD PTR [eax]
64007a03:	mov    edx,DWORD PTR [esp+0x14]
64007a07:	push   ecx
64007a08:	push   edx
64007a09:	push   eax
64007a0a:	call   0x64002c30
64007a0f:	add    esp,0xc
64007a12:	test   eax,eax
64007a14:	jne    0x64007a28
64007a16:	cmp    edi,ebx
64007a18:	jae    0x64007a1f
64007a1a:	or     eax,0xffffffff
64007a1d:	jmp    0x64007a26
64007a1f:	xor    eax,eax
64007a21:	cmp    edi,ebx
64007a23:	setne  al
64007a26:	test   eax,eax
64007a28:	setl   al
64007a2b:	test   al,al
64007a2d:	mov    BYTE PTR [esp+0x18],al
64007a31:	je     0x64007a37
64007a33:	mov    esi,DWORD PTR [esi]
64007a35:	jmp    0x64007a3a
64007a37:	mov    esi,DWORD PTR [esi+0x8]
64007a3a:	cmp    BYTE PTR [esi+0x45],0x0
64007a3e:	je     0x640079c5
64007a40:	mov    edi,DWORD PTR [esp+0x28]
64007a44:	mov    ecx,DWORD PTR [esp+0x10]
64007a48:	test   al,al
64007a4a:	mov    esi,ecx
64007a4c:	mov    DWORD PTR [esp+0x2c],esi
64007a50:	mov    DWORD PTR [esp+0x28],edi
64007a54:	je     0x64007a99
64007a56:	mov    eax,DWORD PTR [edi+0x4]
64007a59:	cmp    ecx,DWORD PTR [eax]
64007a5b:	jne    0x64007a8c
64007a5d:	mov    edx,DWORD PTR [ebp+0xc]
64007a60:	push   edx
64007a61:	push   ecx
64007a62:	push   0x1
64007a64:	lea    eax,[esp+0x34]
64007a68:	push   eax
64007a69:	mov    ecx,edi
64007a6b:	call   0x640082f0
64007a70:	mov    ecx,eax
64007a72:	mov    edx,DWORD PTR [ecx]
64007a74:	mov    eax,DWORD PTR [ebp+0x8]
64007a77:	mov    ecx,DWORD PTR [ecx+0x4]
64007a7a:	mov    DWORD PTR [eax+0x4],ecx
64007a7d:	mov    BYTE PTR [eax+0x8],0x1
64007a81:	mov    DWORD PTR [eax],edx
64007a83:	pop    edi
64007a84:	pop    esi
64007a85:	pop    ebx
64007a86:	mov    esp,ebp
64007a88:	pop    ebp
64007a89:	ret    0x8
64007a8c:	lea    ecx,[esp+0x28]
64007a90:	call   0x64009260
64007a95:	mov    esi,DWORD PTR [esp+0x2c]
64007a99:	mov    ebx,DWORD PTR [ebp+0xc]
64007a9c:	cmp    DWORD PTR [ebx+0x18],0x10
64007aa0:	mov    edx,DWORD PTR [ebx+0x14]
64007aa3:	lea    ecx,[esi+0xc]
64007aa6:	jb     0x64007aad
64007aa8:	mov    eax,DWORD PTR [ebx+0x4]
64007aab:	jmp    0x64007ab0
64007aad:	lea    eax,[ebx+0x4]
64007ab0:	push   edx
64007ab1:	mov    edx,DWORD PTR [ecx+0x14]
64007ab4:	push   eax
64007ab5:	push   edx
64007ab6:	push   0x0
64007ab8:	call   0x640071a0
64007abd:	test   eax,eax
64007abf:	jge    0x64007af4
64007ac1:	mov    eax,DWORD PTR [esp+0x10]
64007ac5:	mov    ecx,DWORD PTR [esp+0x18]
64007ac9:	push   ebx
64007aca:	push   eax
64007acb:	push   ecx
64007acc:	lea    edx,[esp+0x34]
64007ad0:	push   edx
64007ad1:	mov    ecx,edi
64007ad3:	call   0x640082f0
64007ad8:	mov    ecx,eax
64007ada:	mov    edx,DWORD PTR [ecx]
64007adc:	mov    eax,DWORD PTR [ebp+0x8]
64007adf:	mov    ecx,DWORD PTR [ecx+0x4]
64007ae2:	mov    DWORD PTR [eax+0x4],ecx
64007ae5:	mov    BYTE PTR [eax+0x8],0x1
64007ae9:	mov    DWORD PTR [eax],edx
64007aeb:	pop    edi
64007aec:	pop    esi
64007aed:	pop    ebx
64007aee:	mov    esp,ebp
64007af0:	pop    ebp
64007af1:	ret    0x8
64007af4:	mov    eax,DWORD PTR [ebp+0x8]
64007af7:	mov    edx,DWORD PTR [esp+0x28]
64007afb:	pop    edi
64007afc:	mov    DWORD PTR [eax+0x4],esi
64007aff:	pop    esi
64007b00:	mov    BYTE PTR [eax+0x8],0x0
64007b04:	mov    DWORD PTR [eax],edx
64007b06:	pop    ebx
64007b07:	mov    esp,ebp
64007b09:	pop    ebp
64007b0a:	ret    0x8
64007b0d:	int3   
64007b0e:	int3   
64007b0f:	int3   
64007b10:	sub    esp,0x18
64007b13:	push   ebx
64007b14:	mov    ebx,DWORD PTR [esp+0x24]
64007b18:	push   esi
64007b19:	push   edi
64007b1a:	push   ebx
64007b1b:	mov    esi,ecx
64007b1d:	call   0x64008b70
64007b22:	test   esi,esi
64007b24:	mov    edi,eax
64007b26:	mov    DWORD PTR [esp+0x14],edi
64007b2a:	jne    0x64007b31
64007b2c:	call   0x64013ac8
64007b31:	cmp    edi,DWORD PTR [esi+0x4]
64007b34:	mov    DWORD PTR [esp+0x10],esi
64007b38:	je     0x64007b64
64007b3a:	cmp    DWORD PTR [edi+0x24],0x10
64007b3e:	mov    eax,DWORD PTR [edi+0x20]
64007b41:	jb     0x64007b48
64007b43:	mov    edi,DWORD PTR [edi+0x10]
64007b46:	jmp    0x64007b4b
64007b48:	add    edi,0x10
64007b4b:	push   eax
64007b4c:	mov    eax,DWORD PTR [ebx+0x14]
64007b4f:	push   edi
64007b50:	push   eax
64007b51:	push   0x0
64007b53:	mov    ecx,ebx
64007b55:	call   0x640071a0
64007b5a:	test   eax,eax
64007b5c:	jl     0x64007b64
64007b5e:	lea    ecx,[esp+0x10]
64007b62:	jmp    0x64007b73
64007b64:	mov    ecx,DWORD PTR [esi+0x4]
64007b67:	mov    DWORD PTR [esp+0x1c],ecx
64007b6b:	mov    DWORD PTR [esp+0x18],esi
64007b6f:	lea    ecx,[esp+0x18]
64007b73:	mov    edx,DWORD PTR [ecx]
64007b75:	mov    eax,DWORD PTR [esp+0x28]
64007b79:	mov    ecx,DWORD PTR [ecx+0x4]
64007b7c:	pop    edi
64007b7d:	pop    esi
64007b7e:	mov    DWORD PTR [eax],edx
64007b80:	mov    DWORD PTR [eax+0x4],ecx
64007b83:	pop    ebx
64007b84:	add    esp,0x18
64007b87:	ret    0x8
64007b8a:	int3   
64007b8b:	int3   
64007b8c:	int3   
64007b8d:	int3   
64007b8e:	int3   
64007b8f:	int3   
64007b90:	push   esi
64007b91:	mov    esi,ecx
64007b93:	cmp    DWORD PTR [esi+0x18],0x8
64007b97:	jb     0x64007ba5
64007b99:	mov    eax,DWORD PTR [esi+0x4]
64007b9c:	push   eax
64007b9d:	call   0x64013712
64007ba2:	add    esp,0x4
64007ba5:	xor    eax,eax
64007ba7:	mov    DWORD PTR [esi+0x18],0x7
64007bae:	mov    DWORD PTR [esi+0x14],eax
64007bb1:	mov    WORD PTR [esi+0x4],ax
64007bb5:	pop    esi
64007bb6:	ret    
64007bb7:	int3   
64007bb8:	int3   
64007bb9:	int3   
64007bba:	int3   
64007bbb:	int3   
64007bbc:	int3   
64007bbd:	int3   
64007bbe:	int3   
64007bbf:	int3   
64007bc0:	push   ebp
64007bc1:	mov    ebp,esp
64007bc3:	and    esp,0xfffffff8
64007bc6:	sub    esp,0x14
64007bc9:	mov    eax,DWORD PTR [ecx+0x4]
64007bcc:	push   ebx
64007bcd:	push   esi
64007bce:	mov    esi,DWORD PTR [eax+0x4]
64007bd1:	cmp    BYTE PTR [esi+0x45],0x0
64007bd5:	mov    ebx,eax
64007bd7:	mov    al,0x1
64007bd9:	push   edi
64007bda:	mov    edi,DWORD PTR [ebp+0xc]
64007bdd:	mov    DWORD PTR [esp+0x14],ecx
64007be1:	mov    BYTE PTR [esp+0x10],al
64007be5:	jne    0x64007c27
64007be7:	cmp    DWORD PTR [esi+0x24],0x8
64007beb:	mov    ecx,DWORD PTR [esi+0x20]
64007bee:	mov    ebx,esi
64007bf0:	jb     0x64007bf7
64007bf2:	mov    eax,DWORD PTR [esi+0x10]
64007bf5:	jmp    0x64007bfa
64007bf7:	lea    eax,[esi+0x10]
64007bfa:	push   ecx
64007bfb:	push   eax
64007bfc:	mov    eax,DWORD PTR [edi+0x14]
64007bff:	push   eax
64007c00:	push   0x0
64007c02:	mov    ecx,edi
64007c04:	call   0x6400a070
64007c09:	test   eax,eax
64007c0b:	setl   al
64007c0e:	test   al,al
64007c10:	mov    BYTE PTR [esp+0x10],al
64007c14:	je     0x64007c1a
64007c16:	mov    esi,DWORD PTR [esi]
64007c18:	jmp    0x64007c1d
64007c1a:	mov    esi,DWORD PTR [esi+0x8]
64007c1d:	cmp    BYTE PTR [esi+0x45],0x0
64007c21:	je     0x64007be7
64007c23:	mov    ecx,DWORD PTR [esp+0x14]
64007c27:	test   al,al
64007c29:	mov    esi,ebx
64007c2b:	mov    DWORD PTR [esp+0x1c],esi
64007c2f:	mov    DWORD PTR [esp+0x18],ecx
64007c33:	je     0x64007c73
64007c35:	mov    edx,DWORD PTR [ecx+0x4]
64007c38:	cmp    ebx,DWORD PTR [edx]
64007c3a:	jne    0x64007c66
64007c3c:	push   edi
64007c3d:	push   ebx
64007c3e:	push   0x1
64007c40:	lea    eax,[esp+0x24]
64007c44:	push   eax
64007c45:	call   0x64008710
64007c4a:	mov    ecx,eax
64007c4c:	mov    edx,DWORD PTR [ecx]
64007c4e:	mov    eax,DWORD PTR [ebp+0x8]
64007c51:	mov    ecx,DWORD PTR [ecx+0x4]
64007c54:	mov    DWORD PTR [eax+0x4],ecx
64007c57:	mov    BYTE PTR [eax+0x8],0x1
64007c5b:	mov    DWORD PTR [eax],edx
64007c5d:	pop    edi
64007c5e:	pop    esi
64007c5f:	pop    ebx
64007c60:	mov    esp,ebp
64007c62:	pop    ebp
64007c63:	ret    0x8
64007c66:	lea    ecx,[esp+0x18]
64007c6a:	call   0x64009260
64007c6f:	mov    esi,DWORD PTR [esp+0x1c]
64007c73:	cmp    DWORD PTR [edi+0x18],0x8
64007c77:	mov    edx,DWORD PTR [edi+0x14]
64007c7a:	lea    ecx,[esi+0xc]
64007c7d:	jb     0x64007c84
64007c7f:	mov    eax,DWORD PTR [edi+0x4]
64007c82:	jmp    0x64007c87
64007c84:	lea    eax,[edi+0x4]
64007c87:	push   edx
64007c88:	mov    edx,DWORD PTR [ecx+0x14]
64007c8b:	push   eax
64007c8c:	push   edx
64007c8d:	push   0x0
64007c8f:	call   0x6400a070
64007c94:	test   eax,eax
64007c96:	jge    0x64007caa
64007c98:	mov    eax,DWORD PTR [esp+0x10]
64007c9c:	push   edi
64007c9d:	push   ebx
64007c9e:	lea    ecx,[esp+0x20]
64007ca2:	push   eax
64007ca3:	push   ecx
64007ca4:	mov    ecx,DWORD PTR [esp+0x24]
64007ca8:	jmp    0x64007c45
64007caa:	mov    eax,DWORD PTR [ebp+0x8]
64007cad:	mov    edx,DWORD PTR [esp+0x18]
64007cb1:	pop    edi
64007cb2:	mov    DWORD PTR [eax+0x4],esi
64007cb5:	pop    esi
64007cb6:	mov    BYTE PTR [eax+0x8],0x0
64007cba:	mov    DWORD PTR [eax],edx
64007cbc:	pop    ebx
64007cbd:	mov    esp,ebp
64007cbf:	pop    ebp
64007cc0:	ret    0x8
64007cc3:	int3   
64007cc4:	int3   
64007cc5:	int3   
64007cc6:	int3   
64007cc7:	int3   
64007cc8:	int3   
64007cc9:	int3   
64007cca:	int3   
64007ccb:	int3   
64007ccc:	int3   
64007ccd:	int3   
64007cce:	int3   
64007ccf:	int3   
64007cd0:	sub    esp,0x18
64007cd3:	push   ebx
64007cd4:	mov    ebx,DWORD PTR [esp+0x24]
64007cd8:	push   esi
64007cd9:	push   edi
64007cda:	push   ebx
64007cdb:	mov    esi,ecx
64007cdd:	call   0x64008df0
64007ce2:	test   esi,esi
64007ce4:	mov    edi,eax
64007ce6:	mov    DWORD PTR [esp+0x14],edi
64007cea:	jne    0x64007cf1
64007cec:	call   0x64013ac8
64007cf1:	cmp    edi,DWORD PTR [esi+0x4]
64007cf4:	mov    DWORD PTR [esp+0x10],esi
64007cf8:	je     0x64007d24
64007cfa:	cmp    DWORD PTR [edi+0x24],0x8
64007cfe:	mov    eax,DWORD PTR [edi+0x20]
64007d01:	jb     0x64007d08
64007d03:	mov    edi,DWORD PTR [edi+0x10]
64007d06:	jmp    0x64007d0b
64007d08:	add    edi,0x10
64007d0b:	push   eax
64007d0c:	mov    eax,DWORD PTR [ebx+0x14]
64007d0f:	push   edi
64007d10:	push   eax
64007d11:	push   0x0
64007d13:	mov    ecx,ebx
64007d15:	call   0x6400a070
64007d1a:	test   eax,eax
64007d1c:	jl     0x64007d24
64007d1e:	lea    ecx,[esp+0x10]
64007d22:	jmp    0x64007d33
64007d24:	mov    ecx,DWORD PTR [esi+0x4]
64007d27:	mov    DWORD PTR [esp+0x1c],ecx
64007d2b:	mov    DWORD PTR [esp+0x18],esi
64007d2f:	lea    ecx,[esp+0x18]
64007d33:	mov    edx,DWORD PTR [ecx]
64007d35:	mov    eax,DWORD PTR [esp+0x28]
64007d39:	mov    ecx,DWORD PTR [ecx+0x4]
64007d3c:	pop    edi
64007d3d:	pop    esi
64007d3e:	mov    DWORD PTR [eax],edx
64007d40:	mov    DWORD PTR [eax+0x4],ecx
64007d43:	pop    ebx
64007d44:	add    esp,0x18
64007d47:	ret    0x8
64007d4a:	int3   
64007d4b:	int3   
64007d4c:	int3   
64007d4d:	int3   
64007d4e:	int3   
64007d4f:	int3   
64007d50:	mov    eax,DWORD PTR [esp+0x4]
64007d54:	push   esi
64007d55:	push   eax
64007d56:	mov    esi,ecx
64007d58:	call   0x64002df0
64007d5d:	mov    DWORD PTR [esi],0x6402631c
64007d63:	mov    eax,esi
64007d65:	pop    esi
64007d66:	ret    0x4
64007d69:	int3   
64007d6a:	int3   
64007d6b:	int3   
64007d6c:	int3   
64007d6d:	int3   
64007d6e:	int3   
64007d6f:	int3   
64007d70:	push   0xffffffff
64007d72:	push   0x64024098
64007d77:	mov    eax,fs:0x0
64007d7d:	push   eax
64007d7e:	sub    esp,0x44
64007d81:	push   ebx
64007d82:	push   ebp
64007d83:	push   esi
64007d84:	push   edi
64007d85:	mov    eax,ds:0x6402f09c
64007d8a:	xor    eax,esp
64007d8c:	push   eax
64007d8d:	lea    eax,[esp+0x58]
64007d91:	mov    fs:0x0,eax
64007d97:	mov    eax,DWORD PTR [esp+0x74]
64007d9b:	cmp    BYTE PTR [eax+0x29],0x0
64007d9f:	je     0x64007ded
64007da1:	push   0x1b
64007da3:	xor    esi,esi
64007da5:	push   0x6402a0ec
64007daa:	lea    ecx,[esp+0x1c]
64007dae:	mov    DWORD PTR [esp+0x34],0xf
64007db6:	mov    DWORD PTR [esp+0x30],esi
64007dba:	mov    BYTE PTR [esp+0x20],0x0
64007dbf:	call   0x64001880
64007dc4:	lea    eax,[esp+0x14]
64007dc8:	push   eax
64007dc9:	lea    ecx,[esp+0x34]
64007dcd:	mov    DWORD PTR [esp+0x64],esi
64007dd1:	call   0x64002cc0
64007dd6:	push   0x6402c904
64007ddb:	lea    ecx,[esp+0x34]
64007ddf:	push   ecx
64007de0:	mov    DWORD PTR [esp+0x38],0x64026328
64007de8:	call   0x64013b5b
64007ded:	lea    esi,[esp+0x70]
64007df1:	mov    ebp,eax
64007df3:	call   0x64007910
64007df8:	mov    eax,DWORD PTR [ebp+0x0]
64007dfb:	cmp    BYTE PTR [eax+0x29],0x0
64007dff:	je     0x64007e06
64007e01:	mov    edi,DWORD PTR [ebp+0x8]
64007e04:	jmp    0x64007e1e
64007e06:	mov    edx,DWORD PTR [ebp+0x8]
64007e09:	cmp    BYTE PTR [edx+0x29],0x0
64007e0d:	je     0x64007e13
64007e0f:	mov    edi,eax
64007e11:	jmp    0x64007e1e
64007e13:	mov    ecx,DWORD PTR [esp+0x74]
64007e17:	cmp    ecx,ebp
64007e19:	mov    edi,DWORD PTR [ecx+0x8]
64007e1c:	jne    0x64007e92
64007e1e:	cmp    BYTE PTR [edi+0x29],0x0
64007e22:	mov    esi,DWORD PTR [ebp+0x4]
64007e25:	jne    0x64007e2a
64007e27:	mov    DWORD PTR [edi+0x4],esi
64007e2a:	mov    ecx,DWORD PTR [esp+0x68]
64007e2e:	mov    eax,DWORD PTR [ecx+0x4]
64007e31:	cmp    DWORD PTR [eax+0x4],ebp
64007e34:	jne    0x64007e3b
64007e36:	mov    DWORD PTR [eax+0x4],edi
64007e39:	jmp    0x64007e46
64007e3b:	cmp    DWORD PTR [esi],ebp
64007e3d:	jne    0x64007e43
64007e3f:	mov    DWORD PTR [esi],edi
64007e41:	jmp    0x64007e46
64007e43:	mov    DWORD PTR [esi+0x8],edi
64007e46:	mov    edx,DWORD PTR [ecx+0x4]
64007e49:	cmp    DWORD PTR [edx],ebp
64007e4b:	jne    0x64007e6d
64007e4d:	cmp    BYTE PTR [edi+0x29],0x0
64007e51:	je     0x64007e57
64007e53:	mov    ecx,esi
64007e55:	jmp    0x64007e6b
64007e57:	mov    eax,DWORD PTR [edi]
64007e59:	cmp    BYTE PTR [eax+0x29],0x0
64007e5d:	mov    ecx,edi
64007e5f:	jne    0x64007e6b
64007e61:	mov    ecx,eax
64007e63:	mov    eax,DWORD PTR [ecx]
64007e65:	cmp    BYTE PTR [eax+0x29],0x0
64007e69:	je     0x64007e61
64007e6b:	mov    DWORD PTR [edx],ecx
64007e6d:	mov    eax,DWORD PTR [esp+0x68]
64007e71:	mov    ebx,DWORD PTR [eax+0x4]
64007e74:	cmp    DWORD PTR [ebx+0x8],ebp
64007e77:	jne    0x64007eee
64007e79:	cmp    BYTE PTR [edi+0x29],0x0
64007e7d:	je     0x64007e86
64007e7f:	mov    eax,esi
64007e81:	mov    DWORD PTR [ebx+0x8],eax
64007e84:	jmp    0x64007eee
64007e86:	mov    eax,edi
64007e88:	call   0x64008190
64007e8d:	mov    DWORD PTR [ebx+0x8],eax
64007e90:	jmp    0x64007eee
64007e92:	mov    DWORD PTR [eax+0x4],ecx
64007e95:	mov    edx,DWORD PTR [ebp+0x0]
64007e98:	mov    DWORD PTR [ecx],edx
64007e9a:	cmp    ecx,DWORD PTR [ebp+0x8]
64007e9d:	jne    0x64007ea3
64007e9f:	mov    esi,ecx
64007ea1:	jmp    0x64007ebd
64007ea3:	cmp    BYTE PTR [edi+0x29],0x0
64007ea7:	mov    esi,DWORD PTR [ecx+0x4]
64007eaa:	jne    0x64007eaf
64007eac:	mov    DWORD PTR [edi+0x4],esi
64007eaf:	mov    DWORD PTR [esi],edi
64007eb1:	mov    eax,DWORD PTR [ebp+0x8]
64007eb4:	mov    DWORD PTR [ecx+0x8],eax
64007eb7:	mov    edx,DWORD PTR [ebp+0x8]
64007eba:	mov    DWORD PTR [edx+0x4],ecx
64007ebd:	mov    eax,DWORD PTR [esp+0x68]
64007ec1:	mov    eax,DWORD PTR [eax+0x4]
64007ec4:	cmp    DWORD PTR [eax+0x4],ebp
64007ec7:	jne    0x64007ece
64007ec9:	mov    DWORD PTR [eax+0x4],ecx
64007ecc:	jmp    0x64007edc
64007ece:	mov    eax,DWORD PTR [ebp+0x4]
64007ed1:	cmp    DWORD PTR [eax],ebp
64007ed3:	jne    0x64007ed9
64007ed5:	mov    DWORD PTR [eax],ecx
64007ed7:	jmp    0x64007edc
64007ed9:	mov    DWORD PTR [eax+0x8],ecx
64007edc:	mov    edx,DWORD PTR [ebp+0x4]
64007edf:	mov    DWORD PTR [ecx+0x4],edx
64007ee2:	mov    dl,BYTE PTR [ebp+0x28]
64007ee5:	mov    al,BYTE PTR [ecx+0x28]
64007ee8:	mov    BYTE PTR [ecx+0x28],dl
64007eeb:	mov    BYTE PTR [ebp+0x28],al
64007eee:	mov    bl,0x1
64007ef0:	cmp    BYTE PTR [ebp+0x28],bl
64007ef3:	jne    0x6400801a
64007ef9:	mov    eax,DWORD PTR [esp+0x68]
64007efd:	mov    ecx,DWORD PTR [eax+0x4]
64007f00:	cmp    edi,DWORD PTR [ecx+0x4]
64007f03:	je     0x64008017
64007f09:	lea    esp,[esp+0x0]
64007f10:	cmp    BYTE PTR [edi+0x28],bl
64007f13:	jne    0x64008017
64007f19:	mov    ecx,DWORD PTR [esi]
64007f1b:	cmp    edi,ecx
64007f1d:	jne    0x64007f95
64007f1f:	mov    ecx,DWORD PTR [esi+0x8]
64007f22:	cmp    BYTE PTR [ecx+0x28],0x0
64007f26:	jne    0x64007f3e
64007f28:	mov    edx,DWORD PTR [esp+0x68]
64007f2c:	mov    BYTE PTR [ecx+0x28],bl
64007f2f:	push   edx
64007f30:	mov    ecx,esi
64007f32:	mov    BYTE PTR [esi+0x28],0x0
64007f36:	call   0x64008140
64007f3b:	mov    ecx,DWORD PTR [esi+0x8]
64007f3e:	cmp    BYTE PTR [ecx+0x29],0x0
64007f42:	jne    0x64007fc9
64007f48:	mov    eax,DWORD PTR [ecx]
64007f4a:	cmp    BYTE PTR [eax+0x28],bl
64007f4d:	jne    0x64007f57
64007f4f:	mov    edx,DWORD PTR [ecx+0x8]
64007f52:	cmp    BYTE PTR [edx+0x28],bl
64007f55:	je     0x64007fc5
64007f57:	mov    eax,DWORD PTR [ecx+0x8]
64007f5a:	cmp    BYTE PTR [eax+0x28],bl
64007f5d:	jne    0x64007f75
64007f5f:	mov    edx,DWORD PTR [ecx]
64007f61:	mov    eax,DWORD PTR [esp+0x68]
64007f65:	mov    BYTE PTR [edx+0x28],bl
64007f68:	push   eax
64007f69:	mov    BYTE PTR [ecx+0x28],0x0
64007f6d:	call   0x640081b0
64007f72:	mov    ecx,DWORD PTR [esi+0x8]
64007f75:	mov    dl,BYTE PTR [esi+0x28]
64007f78:	mov    BYTE PTR [ecx+0x28],dl
64007f7b:	mov    BYTE PTR [esi+0x28],bl
64007f7e:	mov    eax,DWORD PTR [ecx+0x8]
64007f81:	mov    ecx,DWORD PTR [esp+0x68]
64007f85:	push   ecx
64007f86:	mov    ecx,esi
64007f88:	mov    BYTE PTR [eax+0x28],bl
64007f8b:	call   0x64008140
64007f90:	jmp    0x64008017
64007f95:	cmp    BYTE PTR [ecx+0x28],0x0
64007f99:	jne    0x64007fb0
64007f9b:	mov    eax,DWORD PTR [esp+0x68]
64007f9f:	mov    BYTE PTR [ecx+0x28],bl
64007fa2:	push   eax
64007fa3:	mov    ecx,esi
64007fa5:	mov    BYTE PTR [esi+0x28],0x0
64007fa9:	call   0x640081b0
64007fae:	mov    ecx,DWORD PTR [esi]
64007fb0:	cmp    BYTE PTR [ecx+0x29],0x0
64007fb4:	jne    0x64007fc9
64007fb6:	mov    edx,DWORD PTR [ecx+0x8]
64007fb9:	cmp    BYTE PTR [edx+0x28],bl
64007fbc:	jne    0x64007fe0
64007fbe:	mov    eax,DWORD PTR [ecx]
64007fc0:	cmp    BYTE PTR [eax+0x28],bl
64007fc3:	jne    0x64007fe0
64007fc5:	mov    BYTE PTR [ecx+0x28],0x0
64007fc9:	mov    ecx,DWORD PTR [esp+0x68]
64007fcd:	mov    edx,DWORD PTR [ecx+0x4]
64007fd0:	mov    edi,esi
64007fd2:	cmp    edi,DWORD PTR [edx+0x4]
64007fd5:	mov    esi,DWORD PTR [esi+0x4]
64007fd8:	jne    0x64007f10
64007fde:	jmp    0x64008017
64007fe0:	mov    edx,DWORD PTR [ecx]
64007fe2:	cmp    BYTE PTR [edx+0x28],bl
64007fe5:	jne    0x64007ffd
64007fe7:	mov    eax,DWORD PTR [ecx+0x8]
64007fea:	mov    edx,DWORD PTR [esp+0x68]
64007fee:	mov    BYTE PTR [eax+0x28],bl
64007ff1:	push   edx
64007ff2:	mov    BYTE PTR [ecx+0x28],0x0
64007ff6:	call   0x64008140
64007ffb:	mov    ecx,DWORD PTR [esi]
64007ffd:	mov    al,BYTE PTR [esi+0x28]
64008000:	mov    edx,DWORD PTR [esp+0x68]
64008004:	mov    BYTE PTR [ecx+0x28],al
64008007:	mov    BYTE PTR [esi+0x28],bl
6400800a:	mov    ecx,DWORD PTR [ecx]
6400800c:	mov    BYTE PTR [ecx+0x28],bl
6400800f:	push   edx
64008010:	mov    ecx,esi
64008012:	call   0x640081b0
64008017:	mov    BYTE PTR [edi+0x28],bl
6400801a:	cmp    DWORD PTR [ebp+0x24],0x10
6400801e:	jb     0x6400802c
64008020:	mov    eax,DWORD PTR [ebp+0x10]
64008023:	push   eax
64008024:	call   0x64013712
64008029:	add    esp,0x4
6400802c:	mov    DWORD PTR [ebp+0x24],0xf
64008033:	mov    DWORD PTR [ebp+0x20],0x0
6400803a:	push   ebp
6400803b:	mov    BYTE PTR [ebp+0x10],0x0
6400803f:	call   0x64013712
64008044:	mov    ecx,DWORD PTR [esp+0x6c]
64008048:	mov    eax,DWORD PTR [ecx+0x8]
6400804b:	add    esp,0x4
6400804e:	test   eax,eax
64008050:	jbe    0x64008058
64008052:	add    eax,0xffffffff
64008055:	mov    DWORD PTR [ecx+0x8],eax
64008058:	mov    eax,DWORD PTR [esp+0x6c]
6400805c:	mov    ecx,DWORD PTR [esp+0x70]
64008060:	mov    edx,DWORD PTR [esp+0x74]
64008064:	mov    DWORD PTR [eax],ecx
64008066:	mov    DWORD PTR [eax+0x4],edx
64008069:	mov    ecx,DWORD PTR [esp+0x58]
6400806d:	mov    DWORD PTR fs:0x0,ecx
64008074:	pop    ecx
64008075:	pop    edi
64008076:	pop    esi
64008077:	pop    ebp
64008078:	pop    ebx
64008079:	add    esp,0x50
6400807c:	ret    0x10
6400807f:	int3   
64008080:	push   ebp
64008081:	mov    ebp,esp
64008083:	push   0xffffffff
64008085:	push   0x64023c50
6400808a:	mov    eax,fs:0x0
64008090:	push   eax
64008091:	sub    esp,0xc
64008094:	push   ebx
64008095:	push   esi
64008096:	push   edi
64008097:	mov    eax,ds:0x6402f09c
6400809c:	xor    eax,ebp
6400809e:	push   eax
6400809f:	lea    eax,[ebp-0xc]
640080a2:	mov    fs:0x0,eax
640080a8:	mov    DWORD PTR [ebp-0x10],esp
640080ab:	mov    ebx,ecx
640080ad:	mov    DWORD PTR [ebp-0x18],ebx
640080b0:	mov    edi,DWORD PTR [ebp+0x8]
640080b3:	cmp    BYTE PTR [edi+0x29],0x0
640080b7:	mov    eax,DWORD PTR [ebx+0x4]
640080ba:	mov    DWORD PTR [ebp-0x14],eax
640080bd:	jne    0x64008104
640080bf:	movzx  ecx,BYTE PTR [edi+0x28]
640080c3:	push   ecx
640080c4:	mov    ecx,DWORD PTR [ebp+0xc]
640080c7:	lea    edx,[edi+0xc]
640080ca:	push   edx
640080cb:	push   eax
640080cc:	push   ecx
640080cd:	push   eax
640080ce:	call   0x64008240
640080d3:	mov    edx,DWORD PTR [ebp-0x14]
640080d6:	cmp    BYTE PTR [edx+0x29],0x0
640080da:	mov    esi,eax
640080dc:	je     0x640080e1
640080de:	mov    DWORD PTR [ebp-0x14],esi
640080e1:	mov    DWORD PTR [ebp-0x4],0x0
640080e8:	mov    eax,DWORD PTR [edi]
640080ea:	push   esi
640080eb:	push   eax
640080ec:	mov    ecx,ebx
640080ee:	call   0x64008080
640080f3:	mov    DWORD PTR [esi],eax
640080f5:	mov    ecx,DWORD PTR [edi+0x8]
640080f8:	push   esi
640080f9:	push   ecx
640080fa:	mov    ecx,ebx
640080fc:	call   0x64008080
64008101:	mov    DWORD PTR [esi+0x8],eax
64008104:	mov    eax,DWORD PTR [ebp-0x14]
64008107:	mov    ecx,DWORD PTR [ebp-0xc]
6400810a:	mov    DWORD PTR fs:0x0,ecx
64008111:	pop    ecx
64008112:	pop    edi
64008113:	pop    esi
64008114:	pop    ebx
64008115:	mov    esp,ebp
64008117:	pop    ebp
64008118:	ret    0x8
6400811b:	mov    edx,DWORD PTR [ebp-0x14]
6400811e:	mov    ecx,DWORD PTR [ebp-0x18]
64008121:	push   edx
64008122:	call   0x64008960
64008127:	push   0x0
64008129:	push   0x0
6400812b:	call   0x64013b5b
64008130:	int3   
64008131:	int3   
64008132:	int3   
64008133:	int3   
64008134:	int3   
64008135:	int3   
64008136:	int3   
64008137:	int3   
64008138:	int3   
64008139:	int3   
6400813a:	int3   
6400813b:	int3   
6400813c:	int3   
6400813d:	int3   
6400813e:	int3   
6400813f:	int3   
64008140:	mov    eax,DWORD PTR [ecx+0x8]
64008143:	mov    edx,DWORD PTR [eax]
64008145:	mov    DWORD PTR [ecx+0x8],edx
64008148:	mov    edx,DWORD PTR [eax]
6400814a:	cmp    BYTE PTR [edx+0x29],0x0
6400814e:	jne    0x64008153
64008150:	mov    DWORD PTR [edx+0x4],ecx
64008153:	mov    edx,DWORD PTR [ecx+0x4]
64008156:	mov    DWORD PTR [eax+0x4],edx
64008159:	mov    edx,DWORD PTR [esp+0x4]
6400815d:	mov    edx,DWORD PTR [edx+0x4]
64008160:	cmp    ecx,DWORD PTR [edx+0x4]
64008163:	jne    0x64008170
64008165:	mov    DWORD PTR [edx+0x4],eax
64008168:	mov    DWORD PTR [eax],ecx
6400816a:	mov    DWORD PTR [ecx+0x4],eax
6400816d:	ret    0x4
64008170:	mov    edx,DWORD PTR [ecx+0x4]
64008173:	cmp    ecx,DWORD PTR [edx]
64008175:	jne    0x64008181
64008177:	mov    DWORD PTR [edx],eax
64008179:	mov    DWORD PTR [eax],ecx
6400817b:	mov    DWORD PTR [ecx+0x4],eax
6400817e:	ret    0x4
64008181:	mov    DWORD PTR [edx+0x8],eax
64008184:	mov    DWORD PTR [eax],ecx
64008186:	mov    DWORD PTR [ecx+0x4],eax
64008189:	ret    0x4
6400818c:	int3   
6400818d:	int3   
6400818e:	int3   
6400818f:	int3   
64008190:	mov    ecx,DWORD PTR [eax+0x8]
64008193:	cmp    BYTE PTR [ecx+0x29],0x0
64008197:	jne    0x640081ab
64008199:	lea    esp,[esp+0x0]
640081a0:	mov    eax,ecx
640081a2:	mov    ecx,DWORD PTR [eax+0x8]
640081a5:	cmp    BYTE PTR [ecx+0x29],0x0
640081a9:	je     0x640081a0
640081ab:	ret    
640081ac:	int3   
640081ad:	int3   
640081ae:	int3   
640081af:	int3   
640081b0:	mov    eax,DWORD PTR [ecx]
640081b2:	mov    edx,DWORD PTR [eax+0x8]
640081b5:	mov    DWORD PTR [ecx],edx
640081b7:	mov    edx,DWORD PTR [eax+0x8]
640081ba:	cmp    BYTE PTR [edx+0x29],0x0
640081be:	jne    0x640081c3
640081c0:	mov    DWORD PTR [edx+0x4],ecx
640081c3:	mov    edx,DWORD PTR [ecx+0x4]
640081c6:	mov    DWORD PTR [eax+0x4],edx
640081c9:	mov    edx,DWORD PTR [esp+0x4]
640081cd:	mov    edx,DWORD PTR [edx+0x4]
640081d0:	cmp    ecx,DWORD PTR [edx+0x4]
640081d3:	jne    0x640081e1
640081d5:	mov    DWORD PTR [edx+0x4],eax
640081d8:	mov    DWORD PTR [eax+0x8],ecx
640081db:	mov    DWORD PTR [ecx+0x4],eax
640081de:	ret    0x4
640081e1:	mov    edx,DWORD PTR [ecx+0x4]
640081e4:	cmp    ecx,DWORD PTR [edx+0x8]
640081e7:	jne    0x640081f5
640081e9:	mov    DWORD PTR [edx+0x8],eax
640081ec:	mov    DWORD PTR [eax+0x8],ecx
640081ef:	mov    DWORD PTR [ecx+0x4],eax
640081f2:	ret    0x4
640081f5:	mov    DWORD PTR [edx],eax
640081f7:	mov    DWORD PTR [eax+0x8],ecx
640081fa:	mov    DWORD PTR [ecx+0x4],eax
640081fd:	ret    0x4
64008200:	push   0x2c
64008202:	call   0x64013af1
64008207:	add    esp,0x4
6400820a:	test   eax,eax
6400820c:	je     0x64008214
6400820e:	mov    DWORD PTR [eax],0x0
64008214:	lea    ecx,[eax+0x4]
64008217:	test   ecx,ecx
64008219:	je     0x64008221
6400821b:	mov    DWORD PTR [ecx],0x0
64008221:	lea    ecx,[eax+0x8]
64008224:	test   ecx,ecx
64008226:	je     0x6400822e
64008228:	mov    DWORD PTR [ecx],0x0
6400822e:	mov    BYTE PTR [eax+0x28],0x1
64008232:	mov    BYTE PTR [eax+0x29],0x0
64008236:	ret    
64008237:	int3   
64008238:	int3   
64008239:	int3   
6400823a:	int3   
6400823b:	int3   
6400823c:	int3   
6400823d:	int3   
6400823e:	int3   
6400823f:	int3   
64008240:	push   ebp
64008241:	mov    ebp,esp
64008243:	push   0xffffffff
64008245:	push   0x64023c31
6400824a:	mov    eax,fs:0x0
64008250:	push   eax
64008251:	sub    esp,0xc
64008254:	push   ebx
64008255:	push   esi
64008256:	push   edi
64008257:	mov    eax,ds:0x6402f09c
6400825c:	xor    eax,ebp
6400825e:	push   eax
6400825f:	lea    eax,[ebp-0xc]
64008262:	mov    fs:0x0,eax
64008268:	mov    DWORD PTR [ebp-0x10],esp
6400826b:	push   0x2c
6400826d:	call   0x64013af1
64008272:	mov    esi,eax
64008274:	xor    ebx,ebx
64008276:	mov    DWORD PTR [ebp-0x4],ebx
64008279:	add    esp,0x4
6400827c:	mov    DWORD PTR [ebp-0x14],esi
6400827f:	mov    DWORD PTR [ebp-0x18],esi
64008282:	cmp    esi,ebx
64008284:	mov    BYTE PTR [ebp-0x4],0x1
64008288:	je     0x640082c0
6400828a:	mov    eax,DWORD PTR [ebp+0x8]
6400828d:	mov    ecx,DWORD PTR [ebp+0xc]
64008290:	mov    edx,DWORD PTR [ebp+0x10]
64008293:	mov    DWORD PTR [esi],eax
64008295:	mov    eax,DWORD PTR [ebp+0x14]
64008298:	mov    DWORD PTR [esi+0x4],ecx
6400829b:	push   0xffffffff
6400829d:	lea    ecx,[esi+0xc]
640082a0:	mov    DWORD PTR [esi+0x8],edx
640082a3:	push   ebx
640082a4:	mov    DWORD PTR [ecx+0x18],0xf
640082ab:	mov    DWORD PTR [ecx+0x14],ebx
640082ae:	push   eax
640082af:	mov    BYTE PTR [ecx+0x4],bl
640082b2:	call   0x640017a0
640082b7:	mov    cl,BYTE PTR [ebp+0x18]
640082ba:	mov    BYTE PTR [esi+0x28],cl
640082bd:	mov    BYTE PTR [esi+0x29],bl
640082c0:	mov    eax,esi
640082c2:	mov    ecx,DWORD PTR [ebp-0xc]
640082c5:	mov    DWORD PTR fs:0x0,ecx
640082cc:	pop    ecx
640082cd:	pop    edi
640082ce:	pop    esi
640082cf:	pop    ebx
640082d0:	mov    esp,ebp
640082d2:	pop    ebp
640082d3:	ret    0x14
640082d6:	mov    edx,DWORD PTR [ebp-0x14]
640082d9:	push   edx
640082da:	call   0x64013712
640082df:	add    esp,0x4
640082e2:	xor    ebx,ebx
640082e4:	push   ebx
640082e5:	push   ebx
640082e6:	call   0x64013b5b
640082eb:	int3   
640082ec:	int3   
640082ed:	int3   
640082ee:	int3   
640082ef:	int3   
640082f0:	push   ebp
640082f1:	mov    ebp,esp
640082f3:	and    esp,0xfffffff8
640082f6:	push   0xffffffff
640082f8:	push   0x64024068
640082fd:	mov    eax,fs:0x0
64008303:	push   eax
64008304:	sub    esp,0x50
64008307:	push   ebx
64008308:	push   esi
64008309:	push   edi
6400830a:	mov    eax,ds:0x6402f09c
6400830f:	xor    eax,esp
64008311:	push   eax
64008312:	lea    eax,[esp+0x60]
64008316:	mov    fs:0x0,eax
6400831c:	mov    edi,ecx
6400831e:	xor    ebx,ebx
64008320:	cmp    DWORD PTR [edi+0x8],0x4924923
64008327:	jb     0x64008372
64008329:	push   0x13
6400832b:	push   0x6402a0d8
64008330:	lea    ecx,[esp+0x20]
64008334:	mov    DWORD PTR [esp+0x38],0xf
6400833c:	mov    DWORD PTR [esp+0x34],ebx
64008340:	mov    BYTE PTR [esp+0x24],bl
64008344:	call   0x64001880
64008349:	lea    eax,[esp+0x18]
6400834d:	push   eax
6400834e:	lea    ecx,[esp+0x38]
64008352:	mov    DWORD PTR [esp+0x6c],ebx
64008356:	call   0x64002cc0
6400835b:	push   0x6402c940
64008360:	lea    ecx,[esp+0x38]
64008364:	push   ecx
64008365:	mov    DWORD PTR [esp+0x3c],0x6402631c
6400836d:	call   0x64013b5b
64008372:	mov    edx,DWORD PTR [ebp+0x14]
64008375:	mov    eax,DWORD PTR [edi+0x4]
64008378:	mov    esi,DWORD PTR [ebp+0x10]
6400837b:	push   ebx
6400837c:	push   edx
6400837d:	push   eax
6400837e:	push   esi
6400837f:	push   eax
64008380:	call   0x64008cb0
64008385:	add    DWORD PTR [edi+0x8],0x1
64008389:	mov    ecx,eax
6400838b:	mov    eax,DWORD PTR [edi+0x4]
6400838e:	cmp    esi,eax
64008390:	mov    DWORD PTR [esp+0x14],ecx
64008394:	jne    0x640083a6
64008396:	mov    DWORD PTR [eax+0x4],ecx
64008399:	mov    eax,DWORD PTR [edi+0x4]
6400839c:	mov    DWORD PTR [eax],ecx
6400839e:	mov    edx,DWORD PTR [edi+0x4]
640083a1:	mov    DWORD PTR [edx+0x8],ecx
640083a4:	jmp    0x640083c6
640083a6:	cmp    BYTE PTR [ebp+0xc],bl
640083a9:	je     0x640083b8
640083ab:	mov    DWORD PTR [esi],ecx
640083ad:	mov    eax,DWORD PTR [edi+0x4]
640083b0:	cmp    esi,DWORD PTR [eax]
640083b2:	jne    0x640083c6
640083b4:	mov    DWORD PTR [eax],ecx
640083b6:	jmp    0x640083c6
640083b8:	mov    DWORD PTR [esi+0x8],ecx
640083bb:	mov    eax,DWORD PTR [edi+0x4]
640083be:	cmp    esi,DWORD PTR [eax+0x8]
640083c1:	jne    0x640083c6
640083c3:	mov    DWORD PTR [eax+0x8],ecx
640083c6:	mov    edx,DWORD PTR [ecx+0x4]
640083c9:	cmp    BYTE PTR [edx+0x44],bl
640083cc:	lea    eax,[ecx+0x4]
640083cf:	mov    esi,ecx
640083d1:	jne    0x64008512
640083d7:	mov    ecx,DWORD PTR [eax]
640083d9:	mov    edx,DWORD PTR [ecx+0x4]
640083dc:	cmp    ecx,DWORD PTR [edx]
640083de:	jne    0x64008485
640083e4:	mov    edx,DWORD PTR [edx+0x8]
640083e7:	cmp    BYTE PTR [edx+0x44],bl
640083ea:	je     0x6400848c
640083f0:	cmp    esi,DWORD PTR [ecx+0x8]
640083f3:	jne    0x64008430
640083f5:	mov    esi,ecx
640083f7:	mov    ecx,DWORD PTR [esi+0x8]
640083fa:	mov    eax,DWORD PTR [ecx]
640083fc:	mov    DWORD PTR [esi+0x8],eax
640083ff:	mov    eax,DWORD PTR [ecx]
64008401:	cmp    BYTE PTR [eax+0x45],bl
64008404:	jne    0x64008409
64008406:	mov    DWORD PTR [eax+0x4],esi
64008409:	mov    edx,DWORD PTR [esi+0x4]
6400840c:	lea    eax,[esi+0x4]
6400840f:	mov    DWORD PTR [ecx+0x4],edx
64008412:	mov    edx,DWORD PTR [edi+0x4]
64008415:	cmp    esi,DWORD PTR [edx+0x4]
64008418:	jne    0x6400841f
6400841a:	mov    DWORD PTR [edx+0x4],ecx
6400841d:	jmp    0x6400842c
6400841f:	mov    edx,DWORD PTR [eax]
64008421:	cmp    esi,DWORD PTR [edx]
64008423:	jne    0x64008429
64008425:	mov    DWORD PTR [edx],ecx
64008427:	jmp    0x6400842c
64008429:	mov    DWORD PTR [edx+0x8],ecx
6400842c:	mov    DWORD PTR [ecx],esi
6400842e:	mov    DWORD PTR [eax],ecx
64008430:	mov    ecx,DWORD PTR [eax]
64008432:	mov    BYTE PTR [ecx+0x44],0x1
64008436:	mov    edx,DWORD PTR [eax]
64008438:	mov    ecx,DWORD PTR [edx+0x4]
6400843b:	mov    BYTE PTR [ecx+0x44],bl
6400843e:	mov    edx,DWORD PTR [eax]
64008440:	mov    eax,DWORD PTR [edx+0x4]
64008443:	mov    ecx,DWORD PTR [eax]
64008445:	mov    edx,DWORD PTR [ecx+0x8]
64008448:	mov    DWORD PTR [eax],edx
6400844a:	mov    edx,DWORD PTR [ecx+0x8]
6400844d:	cmp    BYTE PTR [edx+0x45],bl
64008450:	jne    0x64008455
64008452:	mov    DWORD PTR [edx+0x4],eax
64008455:	mov    edx,DWORD PTR [eax+0x4]
64008458:	mov    DWORD PTR [ecx+0x4],edx
6400845b:	mov    edx,DWORD PTR [edi+0x4]
6400845e:	cmp    eax,DWORD PTR [edx+0x4]
64008461:	jne    0x6400846e
64008463:	mov    DWORD PTR [edx+0x4],ecx
64008466:	mov    DWORD PTR [ecx+0x8],eax
64008469:	jmp    0x640084fc
6400846e:	mov    edx,DWORD PTR [eax+0x4]
64008471:	cmp    eax,DWORD PTR [edx+0x8]
64008474:	jne    0x6400847e
64008476:	mov    DWORD PTR [edx+0x8],ecx
64008479:	mov    DWORD PTR [ecx+0x8],eax
6400847c:	jmp    0x640084fc
6400847e:	mov    DWORD PTR [edx],ecx
64008480:	mov    DWORD PTR [ecx+0x8],eax
64008483:	jmp    0x640084fc
64008485:	mov    edx,DWORD PTR [edx]
64008487:	cmp    BYTE PTR [edx+0x44],bl
6400848a:	jne    0x640084a3
6400848c:	mov    BYTE PTR [ecx+0x44],0x1
64008490:	mov    BYTE PTR [edx+0x44],0x1
64008494:	mov    edx,DWORD PTR [eax]
64008496:	mov    ecx,DWORD PTR [edx+0x4]
64008499:	mov    BYTE PTR [ecx+0x44],bl
6400849c:	mov    edx,DWORD PTR [eax]
6400849e:	mov    esi,DWORD PTR [edx+0x4]
640084a1:	jmp    0x640084ff
640084a3:	cmp    esi,DWORD PTR [ecx]
640084a5:	jne    0x640084b1
640084a7:	mov    esi,ecx
640084a9:	push   esi
640084aa:	mov    ecx,edi
640084ac:	call   0x64008c50
640084b1:	mov    eax,DWORD PTR [esi+0x4]
640084b4:	mov    BYTE PTR [eax+0x44],0x1
640084b8:	mov    ecx,DWORD PTR [esi+0x4]
640084bb:	mov    edx,DWORD PTR [ecx+0x4]
640084be:	mov    BYTE PTR [edx+0x44],bl
640084c1:	mov    eax,DWORD PTR [esi+0x4]
640084c4:	mov    eax,DWORD PTR [eax+0x4]
640084c7:	mov    ecx,DWORD PTR [eax+0x8]
640084ca:	mov    edx,DWORD PTR [ecx]
640084cc:	mov    DWORD PTR [eax+0x8],edx
640084cf:	mov    edx,DWORD PTR [ecx]
640084d1:	cmp    BYTE PTR [edx+0x45],bl
640084d4:	jne    0x640084d9
640084d6:	mov    DWORD PTR [edx+0x4],eax
640084d9:	mov    edx,DWORD PTR [eax+0x4]
640084dc:	mov    DWORD PTR [ecx+0x4],edx
640084df:	mov    edx,DWORD PTR [edi+0x4]
640084e2:	cmp    eax,DWORD PTR [edx+0x4]
640084e5:	jne    0x640084ec
640084e7:	mov    DWORD PTR [edx+0x4],ecx
640084ea:	jmp    0x640084fa
640084ec:	mov    edx,DWORD PTR [eax+0x4]
640084ef:	cmp    eax,DWORD PTR [edx]
640084f1:	jne    0x640084f7
640084f3:	mov    DWORD PTR [edx],ecx
640084f5:	jmp    0x640084fa
640084f7:	mov    DWORD PTR [edx+0x8],ecx
640084fa:	mov    DWORD PTR [ecx],eax
640084fc:	mov    DWORD PTR [eax+0x4],ecx
640084ff:	mov    ecx,DWORD PTR [esi+0x4]
64008502:	cmp    BYTE PTR [ecx+0x44],bl
64008505:	lea    eax,[esi+0x4]
64008508:	je     0x640083d7
6400850e:	mov    ecx,DWORD PTR [esp+0x14]
64008512:	mov    edx,DWORD PTR [edi+0x4]
64008515:	mov    eax,DWORD PTR [edx+0x4]
64008518:	mov    BYTE PTR [eax+0x44],0x1
6400851c:	mov    eax,DWORD PTR [ebp+0x8]
6400851f:	mov    DWORD PTR [eax+0x4],ecx
64008522:	mov    DWORD PTR [eax],edi
64008524:	mov    ecx,DWORD PTR [esp+0x60]
64008528:	mov    DWORD PTR fs:0x0,ecx
6400852f:	pop    ecx
64008530:	pop    edi
64008531:	pop    esi
64008532:	pop    ebx
64008533:	mov    esp,ebp
64008535:	pop    ebp
64008536:	ret    0x10
64008539:	int3   
6400853a:	int3   
6400853b:	int3   
6400853c:	int3   
6400853d:	int3   
6400853e:	int3   
6400853f:	int3   
64008540:	push   ebx
64008541:	mov    ebx,DWORD PTR [esp+0xc]
64008545:	push   ebp
64008546:	mov    ebp,DWORD PTR [esp+0xc]
6400854a:	cmp    DWORD PTR [ebp+0x14],ebx
6400854d:	push   esi
6400854e:	push   edi
6400854f:	mov    esi,ecx
64008551:	jae    0x64008558
64008553:	call   0x640136ce
64008558:	mov    edi,DWORD PTR [ebp+0x14]
6400855b:	mov    eax,DWORD PTR [esp+0x1c]
6400855f:	sub    edi,ebx
64008561:	cmp    eax,edi
64008563:	jae    0x64008567
64008565:	mov    edi,eax
64008567:	cmp    esi,ebp
64008569:	jne    0x6400858a
6400856b:	push   0xffffffff
6400856d:	add    edi,ebx
6400856f:	push   edi
64008570:	mov    ecx,esi
64008572:	call   0x64008d50
64008577:	push   ebx
64008578:	push   0x0
6400857a:	mov    ecx,esi
6400857c:	call   0x64008d50
64008581:	pop    edi
64008582:	mov    eax,esi
64008584:	pop    esi
64008585:	pop    ebp
64008586:	pop    ebx
64008587:	ret    0xc
6400858a:	cmp    edi,0x7ffffffe
64008590:	jbe    0x64008597
64008592:	call   0x6401368f
64008597:	mov    eax,DWORD PTR [esi+0x18]
6400859a:	cmp    eax,edi
6400859c:	jae    0x640085b9
6400859e:	mov    eax,DWORD PTR [esi+0x14]
640085a1:	push   eax
640085a2:	push   edi
640085a3:	mov    ecx,esi
640085a5:	call   0x64009000
640085aa:	test   edi,edi
640085ac:	jbe    0x64008626
640085ae:	cmp    DWORD PTR [ebp+0x18],0x8
640085b2:	jb     0x640085e5
640085b4:	mov    ecx,DWORD PTR [ebp+0x4]
640085b7:	jmp    0x640085e8
640085b9:	test   edi,edi
640085bb:	jne    0x640085ac
640085bd:	cmp    eax,0x8
640085c0:	mov    DWORD PTR [esi+0x14],edi
640085c3:	jb     0x640085d4
640085c5:	mov    eax,DWORD PTR [esi+0x4]
640085c8:	mov    WORD PTR [eax],di
640085cb:	pop    edi
640085cc:	mov    eax,esi
640085ce:	pop    esi
640085cf:	pop    ebp
640085d0:	pop    ebx
640085d1:	ret    0xc
640085d4:	lea    eax,[esi+0x4]
640085d7:	pop    edi
640085d8:	mov    WORD PTR [eax],0x0
640085dd:	mov    eax,esi
640085df:	pop    esi
640085e0:	pop    ebp
640085e1:	pop    ebx
640085e2:	ret    0xc
640085e5:	lea    ecx,[ebp+0x4]
640085e8:	cmp    DWORD PTR [esi+0x18],0x8
640085ec:	lea    ebp,[esi+0x4]
640085ef:	jb     0x640085f6
640085f1:	mov    eax,DWORD PTR [ebp+0x0]
640085f4:	jmp    0x640085f8
640085f6:	mov    eax,ebp
640085f8:	mov    edx,DWORD PTR [esp+0x18]
640085fc:	lea    ecx,[ecx+edx*2]
640085ff:	lea    ebx,[edi+edi*1]
64008602:	push   ebx
64008603:	push   ecx
64008604:	mov    ecx,DWORD PTR [esi+0x18]
64008607:	lea    edx,[ecx+ecx*1]
6400860a:	push   edx
6400860b:	push   eax
6400860c:	call   0x640138c8
64008611:	add    esp,0x10
64008614:	cmp    DWORD PTR [esi+0x18],0x8
64008618:	mov    DWORD PTR [esi+0x14],edi
6400861b:	jb     0x64008620
6400861d:	mov    ebp,DWORD PTR [ebp+0x0]
64008620:	mov    WORD PTR [ebx+ebp*1],0x0
64008626:	pop    edi
64008627:	mov    eax,esi
64008629:	pop    esi
6400862a:	pop    ebp
6400862b:	pop    ebx
6400862c:	ret    0xc
6400862f:	int3   
64008630:	push   ebp
64008631:	push   esi
64008632:	mov    esi,ecx
64008634:	mov    edx,DWORD PTR [esi+0x18]
64008637:	cmp    edx,0x8
6400863a:	push   edi
6400863b:	lea    ebp,[esi+0x4]
6400863e:	jb     0x64008645
64008640:	mov    ecx,DWORD PTR [ebp+0x0]
64008643:	jmp    0x64008647
64008645:	mov    ecx,ebp
64008647:	mov    eax,DWORD PTR [esp+0x10]
6400864b:	cmp    eax,ecx
6400864d:	jb     0x64008685
6400864f:	cmp    edx,0x8
64008652:	jb     0x64008659
64008654:	mov    ecx,DWORD PTR [ebp+0x0]
64008657:	jmp    0x6400865b
64008659:	mov    ecx,ebp
6400865b:	mov    edi,DWORD PTR [esi+0x14]
6400865e:	lea    ecx,[ecx+edi*2]
64008661:	cmp    ecx,eax
64008663:	jbe    0x64008685
64008665:	cmp    edx,0x8
64008668:	jb     0x6400866d
6400866a:	mov    ebp,DWORD PTR [ebp+0x0]
6400866d:	mov    edx,DWORD PTR [esp+0x14]
64008671:	sub    eax,ebp
64008673:	push   edx
64008674:	sar    eax,1
64008676:	push   eax
64008677:	push   esi
64008678:	mov    ecx,esi
6400867a:	call   0x64008540
6400867f:	pop    edi
64008680:	pop    esi
64008681:	pop    ebp
64008682:	ret    0x8
64008685:	mov    edi,DWORD PTR [esp+0x14]
64008689:	cmp    edi,0x7ffffffe
6400868f:	jbe    0x64008696
64008691:	call   0x6401368f
64008696:	mov    eax,DWORD PTR [esi+0x18]
64008699:	cmp    eax,edi
6400869b:	jae    0x640086ba
6400869d:	mov    eax,DWORD PTR [esi+0x14]
640086a0:	push   eax
640086a1:	push   edi
640086a2:	mov    ecx,esi
640086a4:	call   0x64009000
640086a9:	test   edi,edi
640086ab:	jbe    0x64008702
640086ad:	mov    ecx,DWORD PTR [esi+0x18]
640086b0:	cmp    ecx,0x8
640086b3:	jb     0x640086d7
640086b5:	mov    eax,DWORD PTR [ebp+0x0]
640086b8:	jmp    0x640086d9
640086ba:	test   edi,edi
640086bc:	jne    0x640086ab
640086be:	cmp    eax,0x8
640086c1:	mov    DWORD PTR [esi+0x14],edi
640086c4:	jb     0x640086c9
640086c6:	mov    ebp,DWORD PTR [ebp+0x0]
640086c9:	pop    edi
640086ca:	mov    eax,esi
640086cc:	pop    esi
640086cd:	mov    WORD PTR [ebp+0x0],0x0
640086d3:	pop    ebp
640086d4:	ret    0x8
640086d7:	mov    eax,ebp
640086d9:	mov    edx,DWORD PTR [esp+0x10]
640086dd:	push   ebx
640086de:	lea    ebx,[edi+edi*1]
640086e1:	push   ebx
640086e2:	push   edx
640086e3:	add    ecx,ecx
640086e5:	push   ecx
640086e6:	push   eax
640086e7:	call   0x640138c8
640086ec:	add    esp,0x10
640086ef:	cmp    DWORD PTR [esi+0x18],0x8
640086f3:	mov    DWORD PTR [esi+0x14],edi
640086f6:	jb     0x640086fb
640086f8:	mov    ebp,DWORD PTR [ebp+0x0]
640086fb:	mov    WORD PTR [ebx+ebp*1],0x0
64008701:	pop    ebx
64008702:	pop    edi
64008703:	mov    eax,esi
64008705:	pop    esi
64008706:	pop    ebp
64008707:	ret    0x8
6400870a:	int3   
6400870b:	int3   
6400870c:	int3   
6400870d:	int3   
6400870e:	int3   
6400870f:	int3   
64008710:	push   ebp
64008711:	mov    ebp,esp
64008713:	and    esp,0xfffffff8
64008716:	push   0xffffffff
64008718:	push   0x64024038
6400871d:	mov    eax,fs:0x0
64008723:	push   eax
64008724:	sub    esp,0x50
64008727:	push   ebx
64008728:	push   esi
64008729:	push   edi
6400872a:	mov    eax,ds:0x6402f09c
6400872f:	xor    eax,esp
64008731:	push   eax
64008732:	lea    eax,[esp+0x60]
64008736:	mov    fs:0x0,eax
6400873c:	mov    edi,ecx
6400873e:	xor    ebx,ebx
64008740:	cmp    DWORD PTR [edi+0x8],0x4924923
64008747:	jb     0x64008792
64008749:	push   0x13
6400874b:	push   0x6402a0d8
64008750:	lea    ecx,[esp+0x20]
64008754:	mov    DWORD PTR [esp+0x38],0xf
6400875c:	mov    DWORD PTR [esp+0x34],ebx
64008760:	mov    BYTE PTR [esp+0x24],bl
64008764:	call   0x64001880
64008769:	lea    eax,[esp+0x18]
6400876d:	push   eax
6400876e:	lea    ecx,[esp+0x38]
64008772:	mov    DWORD PTR [esp+0x6c],ebx
64008776:	call   0x64002cc0
6400877b:	push   0x6402c940
64008780:	lea    ecx,[esp+0x38]
64008784:	push   ecx
64008785:	mov    DWORD PTR [esp+0x3c],0x6402631c
6400878d:	call   0x64013b5b
64008792:	mov    edx,DWORD PTR [ebp+0x14]
64008795:	mov    eax,DWORD PTR [edi+0x4]
64008798:	mov    esi,DWORD PTR [ebp+0x10]
6400879b:	push   ebx
6400879c:	push   edx
6400879d:	push   eax
6400879e:	push   esi
6400879f:	push   eax
640087a0:	call   0x64008e50
640087a5:	add    DWORD PTR [edi+0x8],0x1
640087a9:	mov    ecx,eax
640087ab:	mov    eax,DWORD PTR [edi+0x4]
640087ae:	cmp    esi,eax
640087b0:	mov    DWORD PTR [esp+0x14],ecx
640087b4:	jne    0x640087c6
640087b6:	mov    DWORD PTR [eax+0x4],ecx
640087b9:	mov    eax,DWORD PTR [edi+0x4]
640087bc:	mov    DWORD PTR [eax],ecx
640087be:	mov    edx,DWORD PTR [edi+0x4]
640087c1:	mov    DWORD PTR [edx+0x8],ecx
640087c4:	jmp    0x640087e6
640087c6:	cmp    BYTE PTR [ebp+0xc],bl
640087c9:	je     0x640087d8
640087cb:	mov    DWORD PTR [esi],ecx
640087cd:	mov    eax,DWORD PTR [edi+0x4]
640087d0:	cmp    esi,DWORD PTR [eax]
640087d2:	jne    0x640087e6
640087d4:	mov    DWORD PTR [eax],ecx
640087d6:	jmp    0x640087e6
640087d8:	mov    DWORD PTR [esi+0x8],ecx
640087db:	mov    eax,DWORD PTR [edi+0x4]
640087de:	cmp    esi,DWORD PTR [eax+0x8]
640087e1:	jne    0x640087e6
640087e3:	mov    DWORD PTR [eax+0x8],ecx
640087e6:	mov    edx,DWORD PTR [ecx+0x4]
640087e9:	cmp    BYTE PTR [edx+0x44],bl
640087ec:	lea    eax,[ecx+0x4]
640087ef:	mov    esi,ecx
640087f1:	jne    0x64008932
640087f7:	mov    ecx,DWORD PTR [eax]
640087f9:	mov    edx,DWORD PTR [ecx+0x4]
640087fc:	cmp    ecx,DWORD PTR [edx]
640087fe:	jne    0x640088a5
64008804:	mov    edx,DWORD PTR [edx+0x8]
64008807:	cmp    BYTE PTR [edx+0x44],bl
6400880a:	je     0x640088ac
64008810:	cmp    esi,DWORD PTR [ecx+0x8]
64008813:	jne    0x64008850
64008815:	mov    esi,ecx
64008817:	mov    ecx,DWORD PTR [esi+0x8]
6400881a:	mov    eax,DWORD PTR [ecx]
6400881c:	mov    DWORD PTR [esi+0x8],eax
6400881f:	mov    eax,DWORD PTR [ecx]
64008821:	cmp    BYTE PTR [eax+0x45],bl
64008824:	jne    0x64008829
64008826:	mov    DWORD PTR [eax+0x4],esi
64008829:	mov    edx,DWORD PTR [esi+0x4]
6400882c:	lea    eax,[esi+0x4]
6400882f:	mov    DWORD PTR [ecx+0x4],edx
64008832:	mov    edx,DWORD PTR [edi+0x4]
64008835:	cmp    esi,DWORD PTR [edx+0x4]
64008838:	jne    0x6400883f
6400883a:	mov    DWORD PTR [edx+0x4],ecx
6400883d:	jmp    0x6400884c
6400883f:	mov    edx,DWORD PTR [eax]
64008841:	cmp    esi,DWORD PTR [edx]
64008843:	jne    0x64008849
64008845:	mov    DWORD PTR [edx],ecx
64008847:	jmp    0x6400884c
64008849:	mov    DWORD PTR [edx+0x8],ecx
6400884c:	mov    DWORD PTR [ecx],esi
6400884e:	mov    DWORD PTR [eax],ecx
64008850:	mov    ecx,DWORD PTR [eax]
64008852:	mov    BYTE PTR [ecx+0x44],0x1
64008856:	mov    edx,DWORD PTR [eax]
64008858:	mov    ecx,DWORD PTR [edx+0x4]
6400885b:	mov    BYTE PTR [ecx+0x44],bl
6400885e:	mov    edx,DWORD PTR [eax]
64008860:	mov    eax,DWORD PTR [edx+0x4]
64008863:	mov    ecx,DWORD PTR [eax]
64008865:	mov    edx,DWORD PTR [ecx+0x8]
64008868:	mov    DWORD PTR [eax],edx
6400886a:	mov    edx,DWORD PTR [ecx+0x8]
6400886d:	cmp    BYTE PTR [edx+0x45],bl
64008870:	jne    0x64008875
64008872:	mov    DWORD PTR [edx+0x4],eax
64008875:	mov    edx,DWORD PTR [eax+0x4]
64008878:	mov    DWORD PTR [ecx+0x4],edx
6400887b:	mov    edx,DWORD PTR [edi+0x4]
6400887e:	cmp    eax,DWORD PTR [edx+0x4]
64008881:	jne    0x6400888e
64008883:	mov    DWORD PTR [edx+0x4],ecx
64008886:	mov    DWORD PTR [ecx+0x8],eax
64008889:	jmp    0x6400891c
6400888e:	mov    edx,DWORD PTR [eax+0x4]
64008891:	cmp    eax,DWORD PTR [edx+0x8]
64008894:	jne    0x6400889e
64008896:	mov    DWORD PTR [edx+0x8],ecx
64008899:	mov    DWORD PTR [ecx+0x8],eax
6400889c:	jmp    0x6400891c
6400889e:	mov    DWORD PTR [edx],ecx
640088a0:	mov    DWORD PTR [ecx+0x8],eax
640088a3:	jmp    0x6400891c
640088a5:	mov    edx,DWORD PTR [edx]
640088a7:	cmp    BYTE PTR [edx+0x44],bl
640088aa:	jne    0x640088c3
640088ac:	mov    BYTE PTR [ecx+0x44],0x1
640088b0:	mov    BYTE PTR [edx+0x44],0x1
640088b4:	mov    edx,DWORD PTR [eax]
640088b6:	mov    ecx,DWORD PTR [edx+0x4]
640088b9:	mov    BYTE PTR [ecx+0x44],bl
640088bc:	mov    edx,DWORD PTR [eax]
640088be:	mov    esi,DWORD PTR [edx+0x4]
640088c1:	jmp    0x6400891f
640088c3:	cmp    esi,DWORD PTR [ecx]
640088c5:	jne    0x640088d1
640088c7:	mov    esi,ecx
640088c9:	push   esi
640088ca:	mov    ecx,edi
640088cc:	call   0x64008c50
640088d1:	mov    eax,DWORD PTR [esi+0x4]
640088d4:	mov    BYTE PTR [eax+0x44],0x1
640088d8:	mov    ecx,DWORD PTR [esi+0x4]
640088db:	mov    edx,DWORD PTR [ecx+0x4]
640088de:	mov    BYTE PTR [edx+0x44],bl
640088e1:	mov    eax,DWORD PTR [esi+0x4]
640088e4:	mov    eax,DWORD PTR [eax+0x4]
640088e7:	mov    ecx,DWORD PTR [eax+0x8]
640088ea:	mov    edx,DWORD PTR [ecx]
640088ec:	mov    DWORD PTR [eax+0x8],edx
640088ef:	mov    edx,DWORD PTR [ecx]
640088f1:	cmp    BYTE PTR [edx+0x45],bl
640088f4:	jne    0x640088f9
640088f6:	mov    DWORD PTR [edx+0x4],eax
640088f9:	mov    edx,DWORD PTR [eax+0x4]
640088fc:	mov    DWORD PTR [ecx+0x4],edx
640088ff:	mov    edx,DWORD PTR [edi+0x4]
64008902:	cmp    eax,DWORD PTR [edx+0x4]
64008905:	jne    0x6400890c
64008907:	mov    DWORD PTR [edx+0x4],ecx
6400890a:	jmp    0x6400891a
6400890c:	mov    edx,DWORD PTR [eax+0x4]
6400890f:	cmp    eax,DWORD PTR [edx]
64008911:	jne    0x64008917
64008913:	mov    DWORD PTR [edx],ecx
64008915:	jmp    0x6400891a
64008917:	mov    DWORD PTR [edx+0x8],ecx
6400891a:	mov    DWORD PTR [ecx],eax
6400891c:	mov    DWORD PTR [eax+0x4],ecx
6400891f:	mov    ecx,DWORD PTR [esi+0x4]
64008922:	cmp    BYTE PTR [ecx+0x44],bl
64008925:	lea    eax,[esi+0x4]
64008928:	je     0x640087f7
6400892e:	mov    ecx,DWORD PTR [esp+0x14]
64008932:	mov    edx,DWORD PTR [edi+0x4]
64008935:	mov    eax,DWORD PTR [edx+0x4]
64008938:	mov    BYTE PTR [eax+0x44],0x1
6400893c:	mov    eax,DWORD PTR [ebp+0x8]
6400893f:	mov    DWORD PTR [eax+0x4],ecx
64008942:	mov    DWORD PTR [eax],edi
64008944:	mov    ecx,DWORD PTR [esp+0x60]
64008948:	mov    DWORD PTR fs:0x0,ecx
6400894f:	pop    ecx
64008950:	pop    edi
64008951:	pop    esi
64008952:	pop    ebx
64008953:	mov    esp,ebp
64008955:	pop    ebp
64008956:	ret    0x10
64008959:	int3   
6400895a:	int3   
6400895b:	int3   
6400895c:	int3   
6400895d:	int3   
6400895e:	int3   
6400895f:	int3   
64008960:	push   ebx
64008961:	push   ebp
64008962:	push   esi
64008963:	mov    esi,DWORD PTR [esp+0x10]
64008967:	xor    ebx,ebx
64008969:	cmp    BYTE PTR [esi+0x29],bl
6400896c:	push   edi
6400896d:	mov    ebp,ecx
6400896f:	mov    edi,esi
64008971:	jne    0x640089af
64008973:	mov    eax,DWORD PTR [edi+0x8]
64008976:	push   eax
64008977:	mov    ecx,ebp
64008979:	call   0x64008960
6400897e:	cmp    DWORD PTR [esi+0x24],0x10
64008982:	mov    edi,DWORD PTR [edi]
64008984:	jb     0x64008992
64008986:	mov    ecx,DWORD PTR [esi+0x10]
64008989:	push   ecx
6400898a:	call   0x64013712
6400898f:	add    esp,0x4
64008992:	mov    DWORD PTR [esi+0x24],0xf
64008999:	mov    DWORD PTR [esi+0x20],ebx
6400899c:	push   esi
6400899d:	mov    BYTE PTR [esi+0x10],bl
640089a0:	call   0x64013712
640089a5:	add    esp,0x4
640089a8:	cmp    BYTE PTR [edi+0x29],bl
640089ab:	mov    esi,edi
640089ad:	je     0x64008973
640089af:	pop    edi
640089b0:	pop    esi
640089b1:	pop    ebp
640089b2:	pop    ebx
640089b3:	ret    0x4
640089b6:	int3   
640089b7:	int3   
640089b8:	int3   
640089b9:	int3   
640089ba:	int3   
640089bb:	int3   
640089bc:	int3   
640089bd:	int3   
640089be:	int3   
640089bf:	int3   
640089c0:	sub    esp,0x8
640089c3:	mov    eax,DWORD PTR [eax+0x4]
640089c6:	push   esi
640089c7:	mov    esi,DWORD PTR [eax+0x4]
640089ca:	cmp    BYTE PTR [esi+0x29],0x0
640089ce:	mov    DWORD PTR [esp+0x4],eax
640089d2:	jne    0x64008a45
640089d4:	mov    edx,DWORD PTR [ecx+0x18]
640089d7:	push   ebx
640089d8:	mov    ebx,DWORD PTR [ecx+0x14]
640089db:	push   ebp
640089dc:	push   edi
640089dd:	mov    DWORD PTR [esp+0x14],edx
640089e1:	lea    ebp,[ecx+0x4]
640089e4:	cmp    DWORD PTR [esp+0x14],0x10
640089e9:	jb     0x640089f0
640089eb:	mov    edx,DWORD PTR [ebp+0x0]
640089ee:	jmp    0x640089f2
640089f0:	mov    edx,ebp
640089f2:	mov    edi,DWORD PTR [esi+0x20]
640089f5:	mov    eax,edi
640089f7:	cmp    eax,edi
640089f9:	jae    0x640089fb
640089fb:	cmp    edi,ebx
640089fd:	mov    ecx,edi
640089ff:	jb     0x64008a03
64008a01:	mov    ecx,ebx
64008a03:	cmp    DWORD PTR [esi+0x24],0x10
64008a07:	jb     0x64008a0e
64008a09:	mov    eax,DWORD PTR [esi+0x10]
64008a0c:	jmp    0x64008a11
64008a0e:	lea    eax,[esi+0x10]
64008a11:	push   ecx
64008a12:	push   edx
64008a13:	push   eax
64008a14:	call   0x64002c30
64008a19:	add    esp,0xc
64008a1c:	test   eax,eax
64008a1e:	jne    0x64008a2b
64008a20:	cmp    edi,ebx
64008a22:	jb     0x64008a2d
64008a24:	cmp    edi,ebx
64008a26:	setne  al
64008a29:	test   eax,eax
64008a2b:	jge    0x64008a32
64008a2d:	mov    esi,DWORD PTR [esi+0x8]
64008a30:	jmp    0x64008a38
64008a32:	mov    DWORD PTR [esp+0x10],esi
64008a36:	mov    esi,DWORD PTR [esi]
64008a38:	cmp    BYTE PTR [esi+0x29],0x0
64008a3c:	je     0x640089e4
64008a3e:	mov    eax,DWORD PTR [esp+0x10]
64008a42:	pop    edi
64008a43:	pop    ebp
64008a44:	pop    ebx
64008a45:	pop    esi
64008a46:	add    esp,0x8
64008a49:	ret    
64008a4a:	int3   
64008a4b:	int3   
64008a4c:	int3   
64008a4d:	int3   
64008a4e:	int3   
64008a4f:	int3   
64008a50:	sub    esp,0x10
64008a53:	mov    ecx,DWORD PTR [ecx+0x4]
64008a56:	push   edi
64008a57:	mov    edi,DWORD PTR [ecx+0x4]
64008a5a:	cmp    BYTE PTR [edi+0x29],0x0
64008a5e:	mov    DWORD PTR [esp+0x8],ecx
64008a62:	jne    0x64008ae1
64008a64:	mov    edx,DWORD PTR [eax+0x14]
64008a67:	mov    ecx,DWORD PTR [eax+0x18]
64008a6a:	push   ebx
64008a6b:	push   ebp
64008a6c:	add    eax,0x4
64008a6f:	push   esi
64008a70:	mov    ebp,edx
64008a72:	mov    DWORD PTR [esp+0x1c],ecx
64008a76:	mov    DWORD PTR [esp+0x10],eax
64008a7a:	lea    ebx,[ebx+0x0]
64008a80:	cmp    DWORD PTR [edi+0x24],0x10
64008a84:	mov    ebx,DWORD PTR [edi+0x20]
64008a87:	jb     0x64008a8e
64008a89:	mov    edx,DWORD PTR [edi+0x10]
64008a8c:	jmp    0x64008a91
64008a8e:	lea    edx,[edi+0x10]
64008a91:	mov    esi,ebp
64008a93:	cmp    esi,ebx
64008a95:	mov    ecx,esi
64008a97:	jb     0x64008a9b
64008a99:	mov    ecx,ebx
64008a9b:	cmp    DWORD PTR [esp+0x1c],0x10
64008aa0:	mov    eax,DWORD PTR [esp+0x10]
64008aa4:	jb     0x64008aa8
64008aa6:	mov    eax,DWORD PTR [eax]
64008aa8:	push   ecx
64008aa9:	push   edx
64008aaa:	push   eax
64008aab:	call   0x64002c30
64008ab0:	add    esp,0xc
64008ab3:	test   eax,eax
64008ab5:	jne    0x64008ac2
64008ab7:	cmp    esi,ebx
64008ab9:	jb     0x64008ac4
64008abb:	cmp    esi,ebx
64008abd:	setne  al
64008ac0:	test   eax,eax
64008ac2:	jge    0x64008acc
64008ac4:	mov    DWORD PTR [esp+0x14],edi
64008ac8:	mov    edi,DWORD PTR [edi]
64008aca:	jmp    0x64008acf
64008acc:	mov    edi,DWORD PTR [edi+0x8]
64008acf:	cmp    BYTE PTR [edi+0x29],0x0
64008ad3:	je     0x64008a80
64008ad5:	mov    eax,DWORD PTR [esp+0x14]
64008ad9:	pop    esi
64008ada:	pop    ebp
64008adb:	pop    ebx
64008adc:	pop    edi
64008add:	add    esp,0x10
64008ae0:	ret    
64008ae1:	mov    eax,ecx
64008ae3:	pop    edi
64008ae4:	add    esp,0x10
64008ae7:	ret    
64008ae8:	int3   
64008ae9:	int3   
64008aea:	int3   
64008aeb:	int3   
64008aec:	int3   
64008aed:	int3   
64008aee:	int3   
64008aef:	int3   
64008af0:	cmp    DWORD PTR [esi],0x0
64008af3:	jne    0x64008afa
64008af5:	call   0x64013ac8
64008afa:	mov    eax,DWORD PTR [esi+0x4]
64008afd:	cmp    BYTE PTR [eax+0x29],0x0
64008b01:	je     0x64008b14
64008b03:	mov    eax,DWORD PTR [eax+0x8]
64008b06:	mov    DWORD PTR [esi+0x4],eax
64008b09:	cmp    BYTE PTR [eax+0x29],0x0
64008b0d:	je     0x64008b66
64008b0f:	jmp    0x64013ac8
64008b14:	mov    ecx,DWORD PTR [eax]
64008b16:	cmp    BYTE PTR [ecx+0x29],0x0
64008b1a:	jne    0x64008b34
64008b1c:	mov    eax,DWORD PTR [ecx+0x8]
64008b1f:	cmp    BYTE PTR [eax+0x29],0x0
64008b23:	jne    0x64008b30
64008b25:	mov    ecx,eax
64008b27:	mov    eax,DWORD PTR [ecx+0x8]
64008b2a:	cmp    BYTE PTR [eax+0x29],0x0
64008b2e:	je     0x64008b25
64008b30:	mov    DWORD PTR [esi+0x4],ecx
64008b33:	ret    
64008b34:	mov    eax,DWORD PTR [eax+0x4]
64008b37:	cmp    BYTE PTR [eax+0x29],0x0
64008b3b:	jne    0x64008b55
64008b3d:	lea    ecx,[ecx+0x0]
64008b40:	mov    ecx,DWORD PTR [esi+0x4]
64008b43:	cmp    ecx,DWORD PTR [eax]
64008b45:	jne    0x64008b55
64008b47:	mov    DWORD PTR [esi+0x4],eax
64008b4a:	mov    edx,eax
64008b4c:	mov    eax,DWORD PTR [edx+0x4]
64008b4f:	cmp    BYTE PTR [eax+0x29],0x0
64008b53:	je     0x64008b40
64008b55:	mov    ecx,DWORD PTR [esi+0x4]
64008b58:	cmp    BYTE PTR [ecx+0x29],0x0
64008b5c:	je     0x64008b63
64008b5e:	jmp    0x64013ac8
64008b63:	mov    DWORD PTR [esi+0x4],eax
64008b66:	ret    
64008b67:	int3   
64008b68:	int3   
64008b69:	int3   
64008b6a:	int3   
64008b6b:	int3   
64008b6c:	int3   
64008b6d:	int3   
64008b6e:	int3   
64008b6f:	int3   
64008b70:	push   ecx
64008b71:	mov    eax,DWORD PTR [ecx+0x4]
64008b74:	push   esi
64008b75:	mov    esi,DWORD PTR [eax+0x4]
64008b78:	cmp    BYTE PTR [esi+0x45],0x0
64008b7c:	mov    DWORD PTR [esp+0x4],eax
64008b80:	jne    0x64008bf7
64008b82:	mov    eax,DWORD PTR [esp+0xc]
64008b86:	mov    ecx,DWORD PTR [eax+0x18]
64008b89:	push   ebx
64008b8a:	mov    ebx,DWORD PTR [eax+0x14]
64008b8d:	push   ebp
64008b8e:	push   edi
64008b8f:	mov    DWORD PTR [esp+0x18],ecx
64008b93:	lea    ebp,[eax+0x4]
64008b96:	cmp    DWORD PTR [esp+0x18],0x10
64008b9b:	jb     0x64008ba2
64008b9d:	mov    edx,DWORD PTR [ebp+0x0]
64008ba0:	jmp    0x64008ba4
64008ba2:	mov    edx,ebp
64008ba4:	mov    edi,DWORD PTR [esi+0x20]
64008ba7:	mov    eax,edi
64008ba9:	cmp    eax,edi
64008bab:	jae    0x64008bad
64008bad:	cmp    edi,ebx
64008baf:	mov    ecx,edi
64008bb1:	jb     0x64008bb5
64008bb3:	mov    ecx,ebx
64008bb5:	cmp    DWORD PTR [esi+0x24],0x10
64008bb9:	jb     0x64008bc0
64008bbb:	mov    eax,DWORD PTR [esi+0x10]
64008bbe:	jmp    0x64008bc3
64008bc0:	lea    eax,[esi+0x10]
64008bc3:	push   ecx
64008bc4:	push   edx
64008bc5:	push   eax
64008bc6:	call   0x64002c30
64008bcb:	add    esp,0xc
64008bce:	test   eax,eax
64008bd0:	jne    0x64008bdd
64008bd2:	cmp    edi,ebx
64008bd4:	jb     0x64008bdf
64008bd6:	cmp    edi,ebx
64008bd8:	setne  al
64008bdb:	test   eax,eax
64008bdd:	jge    0x64008be4
64008bdf:	mov    esi,DWORD PTR [esi+0x8]
64008be2:	jmp    0x64008bea
64008be4:	mov    DWORD PTR [esp+0x10],esi
64008be8:	mov    esi,DWORD PTR [esi]
64008bea:	cmp    BYTE PTR [esi+0x45],0x0
64008bee:	je     0x64008b96
64008bf0:	mov    eax,DWORD PTR [esp+0x10]
64008bf4:	pop    edi
64008bf5:	pop    ebp
64008bf6:	pop    ebx
64008bf7:	pop    esi
64008bf8:	pop    ecx
64008bf9:	ret    0x4
64008bfc:	int3   
64008bfd:	int3   
64008bfe:	int3   
64008bff:	int3   
64008c00:	mov    edx,DWORD PTR [esp+0x4]
64008c04:	mov    eax,DWORD PTR [edx+0x8]
64008c07:	push   esi
64008c08:	mov    esi,DWORD PTR [eax]
64008c0a:	mov    DWORD PTR [edx+0x8],esi
64008c0d:	mov    esi,DWORD PTR [eax]
64008c0f:	cmp    BYTE PTR [esi+0x45],0x0
64008c13:	jne    0x64008c18
64008c15:	mov    DWORD PTR [esi+0x4],edx
64008c18:	mov    esi,DWORD PTR [edx+0x4]
64008c1b:	mov    DWORD PTR [eax+0x4],esi
64008c1e:	mov    ecx,DWORD PTR [ecx+0x4]
64008c21:	cmp    edx,DWORD PTR [ecx+0x4]
64008c24:	pop    esi
64008c25:	jne    0x64008c32
64008c27:	mov    DWORD PTR [ecx+0x4],eax
64008c2a:	mov    DWORD PTR [eax],edx
64008c2c:	mov    DWORD PTR [edx+0x4],eax
64008c2f:	ret    0x4
64008c32:	mov    ecx,DWORD PTR [edx+0x4]
64008c35:	cmp    edx,DWORD PTR [ecx]
64008c37:	jne    0x64008c43
64008c39:	mov    DWORD PTR [ecx],eax
64008c3b:	mov    DWORD PTR [eax],edx
64008c3d:	mov    DWORD PTR [edx+0x4],eax
64008c40:	ret    0x4
64008c43:	mov    DWORD PTR [ecx+0x8],eax
64008c46:	mov    DWORD PTR [eax],edx
64008c48:	mov    DWORD PTR [edx+0x4],eax
64008c4b:	ret    0x4
64008c4e:	int3   
64008c4f:	int3   
64008c50:	mov    edx,DWORD PTR [esp+0x4]
64008c54:	mov    eax,DWORD PTR [edx]
64008c56:	push   esi
64008c57:	mov    esi,DWORD PTR [eax+0x8]
64008c5a:	mov    DWORD PTR [edx],esi
64008c5c:	mov    esi,DWORD PTR [eax+0x8]
64008c5f:	cmp    BYTE PTR [esi+0x45],0x0
64008c63:	jne    0x64008c68
64008c65:	mov    DWORD PTR [esi+0x4],edx
64008c68:	mov    esi,DWORD PTR [edx+0x4]
64008c6b:	mov    DWORD PTR [eax+0x4],esi
64008c6e:	mov    ecx,DWORD PTR [ecx+0x4]
64008c71:	cmp    edx,DWORD PTR [ecx+0x4]
64008c74:	pop    esi
64008c75:	jne    0x64008c83
64008c77:	mov    DWORD PTR [ecx+0x4],eax
64008c7a:	mov    DWORD PTR [eax+0x8],edx
64008c7d:	mov    DWORD PTR [edx+0x4],eax
64008c80:	ret    0x4
64008c83:	mov    ecx,DWORD PTR [edx+0x4]
64008c86:	cmp    edx,DWORD PTR [ecx+0x8]
64008c89:	jne    0x64008c97
64008c8b:	mov    DWORD PTR [ecx+0x8],eax
64008c8e:	mov    DWORD PTR [eax+0x8],edx
64008c91:	mov    DWORD PTR [edx+0x4],eax
64008c94:	ret    0x4
64008c97:	mov    DWORD PTR [ecx],eax
64008c99:	mov    DWORD PTR [eax+0x8],edx
64008c9c:	mov    DWORD PTR [edx+0x4],eax
64008c9f:	ret    0x4
64008ca2:	int3   
64008ca3:	int3   
64008ca4:	int3   
64008ca5:	int3   
64008ca6:	int3   
64008ca7:	int3   
64008ca8:	int3   
64008ca9:	int3   
64008caa:	int3   
64008cab:	int3   
64008cac:	int3   
64008cad:	int3   
64008cae:	int3   
64008caf:	int3   
64008cb0:	push   ebp
64008cb1:	mov    ebp,esp
64008cb3:	push   0xffffffff
64008cb5:	push   0x64023c01
64008cba:	mov    eax,fs:0x0
64008cc0:	push   eax
64008cc1:	sub    esp,0xc
64008cc4:	push   ebx
64008cc5:	push   esi
64008cc6:	push   edi
64008cc7:	mov    eax,ds:0x6402f09c
64008ccc:	xor    eax,ebp
64008cce:	push   eax
64008ccf:	lea    eax,[ebp-0xc]
64008cd2:	mov    fs:0x0,eax
64008cd8:	mov    DWORD PTR [ebp-0x10],esp
64008cdb:	push   0x48
64008cdd:	call   0x64013af1
64008ce2:	mov    esi,eax
64008ce4:	mov    DWORD PTR [ebp-0x4],0x0
64008ceb:	add    esp,0x4
64008cee:	mov    DWORD PTR [ebp-0x14],esi
64008cf1:	mov    DWORD PTR [ebp-0x18],esi
64008cf4:	test   esi,esi
64008cf6:	mov    BYTE PTR [ebp-0x4],0x1
64008cfa:	je     0x64008d23
64008cfc:	mov    eax,DWORD PTR [ebp+0x8]
64008cff:	mov    ecx,DWORD PTR [ebp+0xc]
64008d02:	mov    edx,DWORD PTR [ebp+0x10]
64008d05:	mov    DWORD PTR [esi],eax
64008d07:	mov    eax,DWORD PTR [ebp+0x14]
64008d0a:	mov    DWORD PTR [esi+0x4],ecx
64008d0d:	push   eax
64008d0e:	lea    ecx,[esi+0xc]
64008d11:	mov    DWORD PTR [esi+0x8],edx
64008d14:	call   0x640092f0
64008d19:	mov    cl,BYTE PTR [ebp+0x18]
64008d1c:	mov    BYTE PTR [esi+0x44],cl
64008d1f:	mov    BYTE PTR [esi+0x45],0x0
64008d23:	mov    eax,esi
64008d25:	mov    ecx,DWORD PTR [ebp-0xc]
64008d28:	mov    DWORD PTR fs:0x0,ecx
64008d2f:	pop    ecx
64008d30:	pop    edi
64008d31:	pop    esi
64008d32:	pop    ebx
64008d33:	mov    esp,ebp
64008d35:	pop    ebp
64008d36:	ret    0x14
64008d39:	mov    edx,DWORD PTR [ebp-0x14]
64008d3c:	push   edx
64008d3d:	call   0x64013712
64008d42:	add    esp,0x4
64008d45:	push   0x0
64008d47:	push   0x0
64008d49:	call   0x64013b5b
64008d4e:	int3   
64008d4f:	int3   
64008d50:	push   ebx
64008d51:	mov    ebx,DWORD PTR [esp+0x8]
64008d55:	push   esi
64008d56:	mov    esi,ecx
64008d58:	cmp    DWORD PTR [esi+0x14],ebx
64008d5b:	push   edi
64008d5c:	jae    0x64008d63
64008d5e:	call   0x640136ce
64008d63:	mov    eax,DWORD PTR [esi+0x14]
64008d66:	mov    edi,DWORD PTR [esp+0x14]
64008d6a:	sub    eax,ebx
64008d6c:	cmp    eax,edi
64008d6e:	jae    0x64008d72
64008d70:	mov    edi,eax
64008d72:	test   edi,edi
64008d74:	jbe    0x64008ddf
64008d76:	mov    ecx,DWORD PTR [esi+0x18]
64008d79:	cmp    ecx,0x8
64008d7c:	push   ebp
64008d7d:	lea    ebp,[esi+0x4]
64008d80:	jb     0x64008d8b
64008d82:	mov    edx,DWORD PTR [ebp+0x0]
64008d85:	mov    DWORD PTR [esp+0x14],edx
64008d89:	jmp    0x64008d8f
64008d8b:	mov    DWORD PTR [esp+0x14],ebp
64008d8f:	cmp    ecx,0x8
64008d92:	jb     0x64008d9d
64008d94:	mov    edx,DWORD PTR [ebp+0x0]
64008d97:	mov    DWORD PTR [esp+0x18],edx
64008d9b:	jmp    0x64008da1
64008d9d:	mov    DWORD PTR [esp+0x18],ebp
64008da1:	mov    edx,DWORD PTR [esp+0x14]
64008da5:	sub    eax,edi
64008da7:	add    eax,eax
64008da9:	push   eax
64008daa:	lea    eax,[ebx+edi*1]
64008dad:	lea    eax,[edx+eax*2]
64008db0:	sub    ecx,ebx
64008db2:	push   eax
64008db3:	add    ecx,ecx
64008db5:	push   ecx
64008db6:	mov    ecx,DWORD PTR [esp+0x24]
64008dba:	lea    edx,[ecx+ebx*2]
64008dbd:	push   edx
64008dbe:	call   0x64013943
64008dc3:	mov    eax,DWORD PTR [esi+0x14]
64008dc6:	sub    eax,edi
64008dc8:	add    esp,0x10
64008dcb:	cmp    DWORD PTR [esi+0x18],0x8
64008dcf:	mov    DWORD PTR [esi+0x14],eax
64008dd2:	jb     0x64008dd7
64008dd4:	mov    ebp,DWORD PTR [ebp+0x0]
64008dd7:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64008dde:	pop    ebp
64008ddf:	pop    edi
64008de0:	mov    eax,esi
64008de2:	pop    esi
64008de3:	pop    ebx
64008de4:	ret    0x8
64008de7:	int3   
64008de8:	int3   
64008de9:	int3   
64008dea:	int3   
64008deb:	int3   
64008dec:	int3   
64008ded:	int3   
64008dee:	int3   
64008def:	int3   
64008df0:	mov    eax,DWORD PTR [ecx+0x4]
64008df3:	push   ebp
64008df4:	push   esi
64008df5:	mov    esi,DWORD PTR [eax+0x4]
64008df8:	cmp    BYTE PTR [esi+0x45],0x0
64008dfc:	mov    ebp,eax
64008dfe:	jne    0x64008e46
64008e00:	push   ebx
64008e01:	push   edi
64008e02:	mov    edi,DWORD PTR [esp+0x14]
64008e06:	lea    ebx,[edi+0x4]
64008e09:	lea    esp,[esp+0x0]
64008e10:	cmp    DWORD PTR [edi+0x18],0x8
64008e14:	mov    edx,DWORD PTR [edi+0x14]
64008e17:	lea    ecx,[esi+0xc]
64008e1a:	jb     0x64008e20
64008e1c:	mov    eax,DWORD PTR [ebx]
64008e1e:	jmp    0x64008e22
64008e20:	mov    eax,ebx
64008e22:	push   edx
64008e23:	push   eax
64008e24:	mov    eax,DWORD PTR [ecx+0x14]
64008e27:	push   eax
64008e28:	push   0x0
64008e2a:	call   0x6400a070
64008e2f:	test   eax,eax
64008e31:	jge    0x64008e38
64008e33:	mov    esi,DWORD PTR [esi+0x8]
64008e36:	jmp    0x64008e3c
64008e38:	mov    ebp,esi
64008e3a:	mov    esi,DWORD PTR [esi]
64008e3c:	cmp    BYTE PTR [esi+0x45],0x0
64008e40:	je     0x64008e10
64008e42:	pop    edi
64008e43:	mov    eax,ebp
64008e45:	pop    ebx
64008e46:	pop    esi
64008e47:	pop    ebp
64008e48:	ret    0x4
64008e4b:	int3   
64008e4c:	int3   
64008e4d:	int3   
64008e4e:	int3   
64008e4f:	int3   
64008e50:	push   ebp
64008e51:	mov    ebp,esp
64008e53:	push   0xffffffff
64008e55:	push   0x64023f21
64008e5a:	mov    eax,fs:0x0
64008e60:	push   eax
64008e61:	sub    esp,0xc
64008e64:	push   ebx
64008e65:	push   esi
64008e66:	push   edi
64008e67:	mov    eax,ds:0x6402f09c
64008e6c:	xor    eax,ebp
64008e6e:	push   eax
64008e6f:	lea    eax,[ebp-0xc]
64008e72:	mov    fs:0x0,eax
64008e78:	mov    DWORD PTR [ebp-0x10],esp
64008e7b:	push   0x48
64008e7d:	call   0x64013af1
64008e82:	mov    esi,eax
64008e84:	mov    DWORD PTR [ebp-0x4],0x0
64008e8b:	add    esp,0x4
64008e8e:	mov    DWORD PTR [ebp-0x14],esi
64008e91:	mov    DWORD PTR [ebp-0x18],esi
64008e94:	test   esi,esi
64008e96:	mov    BYTE PTR [ebp-0x4],0x1
64008e9a:	je     0x64008ec3
64008e9c:	mov    eax,DWORD PTR [ebp+0x8]
64008e9f:	mov    ecx,DWORD PTR [ebp+0xc]
64008ea2:	mov    edx,DWORD PTR [ebp+0x10]
64008ea5:	mov    DWORD PTR [esi],eax
64008ea7:	mov    eax,DWORD PTR [ebp+0x14]
64008eaa:	mov    DWORD PTR [esi+0x4],ecx
64008ead:	push   eax
64008eae:	lea    ecx,[esi+0xc]
64008eb1:	mov    DWORD PTR [esi+0x8],edx
64008eb4:	call   0x64009370
64008eb9:	mov    cl,BYTE PTR [ebp+0x18]
64008ebc:	mov    BYTE PTR [esi+0x44],cl
64008ebf:	mov    BYTE PTR [esi+0x45],0x0
64008ec3:	mov    eax,esi
64008ec5:	mov    ecx,DWORD PTR [ebp-0xc]
64008ec8:	mov    DWORD PTR fs:0x0,ecx
64008ecf:	pop    ecx
64008ed0:	pop    edi
64008ed1:	pop    esi
64008ed2:	pop    ebx
64008ed3:	mov    esp,ebp
64008ed5:	pop    ebp
64008ed6:	ret    0x14
64008ed9:	mov    edx,DWORD PTR [ebp-0x14]
64008edc:	push   edx
64008edd:	call   0x64013712
64008ee2:	add    esp,0x4
64008ee5:	push   0x0
64008ee7:	push   0x0
64008ee9:	call   0x64013b5b
64008eee:	int3   
64008eef:	int3   
64008ef0:	push   ebp
64008ef1:	mov    ebp,esp
64008ef3:	and    esp,0xfffffff8
64008ef6:	sub    esp,0x14
64008ef9:	push   ebx
64008efa:	push   esi
64008efb:	push   edi
64008efc:	mov    edi,ecx
64008efe:	mov    eax,DWORD PTR [edi+0x4]
64008f01:	mov    ebx,DWORD PTR [eax]
64008f03:	mov    eax,DWORD PTR [ebp+0xc]
64008f06:	test   eax,eax
64008f08:	je     0x64008f0e
64008f0a:	cmp    eax,edi
64008f0c:	je     0x64008f13
64008f0e:	call   0x64013ac8
64008f13:	mov    esi,DWORD PTR [ebp+0x10]
64008f16:	cmp    esi,ebx
64008f18:	jne    0x64008f70
64008f1a:	mov    eax,DWORD PTR [ebp+0x14]
64008f1d:	test   eax,eax
64008f1f:	mov    ebx,DWORD PTR [edi+0x4]
64008f22:	je     0x64008f28
64008f24:	cmp    eax,edi
64008f26:	je     0x64008f2d
64008f28:	call   0x64013ac8
64008f2d:	cmp    DWORD PTR [ebp+0x18],ebx
64008f30:	jne    0x64008f70
64008f32:	mov    ecx,DWORD PTR [edi+0x4]
64008f35:	mov    edx,DWORD PTR [ecx+0x4]
64008f38:	push   edx
64008f39:	mov    ecx,edi
64008f3b:	call   0x64009af0
64008f40:	mov    eax,DWORD PTR [edi+0x4]
64008f43:	mov    DWORD PTR [eax+0x4],eax
64008f46:	mov    eax,DWORD PTR [edi+0x4]
64008f49:	mov    DWORD PTR [edi+0x8],0x0
64008f50:	mov    DWORD PTR [eax],eax
64008f52:	mov    eax,DWORD PTR [edi+0x4]
64008f55:	mov    DWORD PTR [eax+0x8],eax
64008f58:	mov    eax,DWORD PTR [edi+0x4]
64008f5b:	mov    ecx,DWORD PTR [eax]
64008f5d:	mov    eax,DWORD PTR [ebp+0x8]
64008f60:	mov    DWORD PTR [eax+0x4],ecx
64008f63:	mov    DWORD PTR [eax],edi
64008f65:	pop    edi
64008f66:	pop    esi
64008f67:	pop    ebx
64008f68:	mov    esp,ebp
64008f6a:	pop    ebp
64008f6b:	ret    0x14
64008f6e:	mov    edi,edi
64008f70:	mov    ebx,DWORD PTR [ebp+0xc]
64008f73:	test   ebx,ebx
64008f75:	je     0x64008f7c
64008f77:	cmp    ebx,DWORD PTR [ebp+0x14]
64008f7a:	je     0x64008f81
64008f7c:	call   0x64013ac8
64008f81:	cmp    esi,DWORD PTR [ebp+0x18]
64008f84:	je     0x64008fee
64008f86:	test   ebx,ebx
64008f88:	mov    DWORD PTR [esp+0x14],esi
64008f8c:	jne    0x64008f93
64008f8e:	call   0x64013ac8
64008f93:	cmp    BYTE PTR [esi+0x45],0x0
64008f97:	je     0x64008fa0
64008f99:	call   0x64013ac8
64008f9e:	jmp    0x64008fda
64008fa0:	mov    eax,DWORD PTR [esi+0x8]
64008fa3:	cmp    BYTE PTR [eax+0x45],0x0
64008fa7:	jne    0x64008fbf
64008fa9:	mov    esi,eax
64008fab:	mov    eax,DWORD PTR [esi]
64008fad:	cmp    BYTE PTR [eax+0x45],0x0
64008fb1:	jne    0x64008fda
64008fb3:	mov    esi,eax
64008fb5:	mov    eax,DWORD PTR [esi]
64008fb7:	cmp    BYTE PTR [eax+0x45],0x0
64008fbb:	je     0x64008fb3
64008fbd:	jmp    0x64008fda
64008fbf:	mov    eax,DWORD PTR [esi+0x4]
64008fc2:	cmp    BYTE PTR [eax+0x45],0x0
64008fc6:	jne    0x64008fd8
64008fc8:	cmp    esi,DWORD PTR [eax+0x8]
64008fcb:	jne    0x64008fd8
64008fcd:	mov    esi,eax
64008fcf:	mov    eax,DWORD PTR [eax+0x4]
64008fd2:	cmp    BYTE PTR [eax+0x45],0x0
64008fd6:	je     0x64008fc8
64008fd8:	mov    esi,eax
64008fda:	mov    edx,DWORD PTR [esp+0x14]
64008fde:	push   edx
64008fdf:	push   ebx
64008fe0:	lea    eax,[esp+0x20]
64008fe4:	push   eax
64008fe5:	mov    ecx,edi
64008fe7:	call   0x640093f0
64008fec:	jmp    0x64008f70
64008fee:	mov    eax,DWORD PTR [ebp+0x8]
64008ff1:	pop    edi
64008ff2:	mov    DWORD PTR [eax+0x4],esi
64008ff5:	pop    esi
64008ff6:	mov    DWORD PTR [eax],ebx
64008ff8:	pop    ebx
64008ff9:	mov    esp,ebp
64008ffb:	pop    ebp
64008ffc:	ret    0x14
64008fff:	int3   
64009000:	push   ebp
64009001:	mov    ebp,esp
64009003:	push   0xffffffff
64009005:	push   0x64023bd0
6400900a:	mov    eax,fs:0x0
64009010:	push   eax
64009011:	sub    esp,0xc
64009014:	push   ebx
64009015:	push   esi
64009016:	push   edi
64009017:	mov    eax,ds:0x6402f09c
6400901c:	xor    eax,ebp
6400901e:	push   eax
6400901f:	lea    eax,[ebp-0xc]
64009022:	mov    fs:0x0,eax
64009028:	mov    DWORD PTR [ebp-0x10],esp
6400902b:	mov    edi,ecx
6400902d:	mov    DWORD PTR [ebp-0x14],edi
64009030:	mov    eax,DWORD PTR [ebp+0x8]
64009033:	mov    esi,eax
64009035:	or     esi,0x7
64009038:	cmp    esi,0x7ffffffe
6400903e:	jbe    0x64009044
64009040:	mov    esi,eax
64009042:	jmp    0x64009066
64009044:	mov    ebx,DWORD PTR [edi+0x18]
64009047:	mov    eax,0xaaaaaaab
6400904c:	mul    esi
6400904e:	mov    ecx,ebx
64009050:	shr    ecx,1
64009052:	shr    edx,1
64009054:	cmp    edx,ecx
64009056:	jae    0x64009066
64009058:	mov    eax,0x7ffffffe
6400905d:	sub    eax,ecx
6400905f:	cmp    ebx,eax
64009061:	ja     0x64009066
64009063:	lea    esi,[ecx+ebx*1]
64009066:	lea    ecx,[esi+0x1]
64009069:	push   ecx
6400906a:	mov    ecx,edi
6400906c:	mov    DWORD PTR [ebp-0x4],0x0
64009073:	call   0x64009770
64009078:	mov    DWORD PTR [ebp+0x8],eax
6400907b:	jmp    0x640090a5
6400907d:	mov    eax,DWORD PTR [ebp+0x8]
64009080:	mov    ecx,DWORD PTR [ebp-0x14]
64009083:	mov    DWORD PTR [ebp-0x18],eax
64009086:	add    eax,0x1
64009089:	mov    DWORD PTR [ebp-0x10],esp
6400908c:	push   eax
6400908d:	mov    BYTE PTR [ebp-0x4],0x2
64009091:	call   0x64009770
64009096:	mov    DWORD PTR [ebp+0x8],eax
64009099:	mov    eax,0x6400909f
6400909e:	ret    
6400909f:	mov    edi,DWORD PTR [ebp-0x14]
640090a2:	mov    esi,DWORD PTR [ebp-0x18]
640090a5:	mov    ebx,DWORD PTR [ebp+0xc]
640090a8:	test   ebx,ebx
640090aa:	jbe    0x640090d0
640090ac:	cmp    DWORD PTR [edi+0x18],0x8
640090b0:	jb     0x640090b7
640090b2:	mov    eax,DWORD PTR [edi+0x4]
640090b5:	jmp    0x640090ba
640090b7:	lea    eax,[edi+0x4]
640090ba:	mov    ecx,DWORD PTR [ebp+0x8]
640090bd:	lea    edx,[ebx+ebx*1]
640090c0:	push   edx
640090c1:	push   eax
640090c2:	lea    eax,[esi+esi*1+0x2]
640090c6:	push   eax
640090c7:	push   ecx
640090c8:	call   0x640138c8
640090cd:	add    esp,0x10
640090d0:	cmp    DWORD PTR [edi+0x18],0x8
640090d4:	jb     0x640090e2
640090d6:	mov    edx,DWORD PTR [edi+0x4]
640090d9:	push   edx
640090da:	call   0x64013712
640090df:	add    esp,0x4
640090e2:	cmp    esi,0x8
640090e5:	mov    ecx,DWORD PTR [ebp+0x8]
640090e8:	lea    eax,[edi+0x4]
640090eb:	mov    WORD PTR [eax],0x0
640090f0:	mov    DWORD PTR [eax],ecx
640090f2:	mov    DWORD PTR [edi+0x18],esi
640090f5:	mov    DWORD PTR [edi+0x14],ebx
640090f8:	jb     0x640090fc
640090fa:	mov    eax,ecx
640090fc:	mov    WORD PTR [eax+ebx*2],0x0
64009102:	mov    ecx,DWORD PTR [ebp-0xc]
64009105:	mov    DWORD PTR fs:0x0,ecx
6400910c:	pop    ecx
6400910d:	pop    edi
6400910e:	pop    esi
6400910f:	pop    ebx
64009110:	mov    esp,ebp
64009112:	pop    ebp
64009113:	ret    0x8
64009116:	mov    esi,DWORD PTR [ebp-0x14]
64009119:	cmp    DWORD PTR [esi+0x18],0x8
6400911d:	jb     0x6400912b
6400911f:	mov    eax,DWORD PTR [esi+0x4]
64009122:	push   eax
64009123:	call   0x64013712
64009128:	add    esp,0x4
6400912b:	xor    eax,eax
6400912d:	push   eax
6400912e:	mov    DWORD PTR [esi+0x18],0x7
64009135:	mov    DWORD PTR [esi+0x14],eax
64009138:	push   eax
64009139:	mov    WORD PTR [esi+0x4],ax
6400913d:	call   0x64013b5b
64009142:	int3   
64009143:	int3   
64009144:	int3   
64009145:	int3   
64009146:	int3   
64009147:	int3   
64009148:	int3   
64009149:	int3   
6400914a:	int3   
6400914b:	int3   
6400914c:	int3   
6400914d:	int3   
6400914e:	int3   
6400914f:	int3   
64009150:	push   ebp
64009151:	mov    ebp,esp
64009153:	and    esp,0xfffffff8
64009156:	sub    esp,0x14
64009159:	push   ebx
6400915a:	push   esi
6400915b:	push   edi
6400915c:	mov    edi,ecx
6400915e:	mov    eax,DWORD PTR [edi+0x4]
64009161:	mov    ebx,DWORD PTR [eax]
64009163:	mov    eax,DWORD PTR [ebp+0xc]
64009166:	test   eax,eax
64009168:	je     0x6400916e
6400916a:	cmp    eax,edi
6400916c:	je     0x64009173
6400916e:	call   0x64013ac8
64009173:	mov    esi,DWORD PTR [ebp+0x10]
64009176:	cmp    esi,ebx
64009178:	jne    0x640091d0
6400917a:	mov    eax,DWORD PTR [ebp+0x14]
6400917d:	test   eax,eax
6400917f:	mov    ebx,DWORD PTR [edi+0x4]
64009182:	je     0x64009188
64009184:	cmp    eax,edi
64009186:	je     0x6400918d
64009188:	call   0x64013ac8
6400918d:	cmp    DWORD PTR [ebp+0x18],ebx
64009190:	jne    0x640091d0
64009192:	mov    ecx,DWORD PTR [edi+0x4]
64009195:	mov    edx,DWORD PTR [ecx+0x4]
64009198:	push   edx
64009199:	mov    ecx,edi
6400919b:	call   0x64009b90
640091a0:	mov    eax,DWORD PTR [edi+0x4]
640091a3:	mov    DWORD PTR [eax+0x4],eax
640091a6:	mov    eax,DWORD PTR [edi+0x4]
640091a9:	mov    DWORD PTR [edi+0x8],0x0
640091b0:	mov    DWORD PTR [eax],eax
640091b2:	mov    eax,DWORD PTR [edi+0x4]
640091b5:	mov    DWORD PTR [eax+0x8],eax
640091b8:	mov    eax,DWORD PTR [edi+0x4]
640091bb:	mov    ecx,DWORD PTR [eax]
640091bd:	mov    eax,DWORD PTR [ebp+0x8]
640091c0:	mov    DWORD PTR [eax+0x4],ecx
640091c3:	mov    DWORD PTR [eax],edi
640091c5:	pop    edi
640091c6:	pop    esi
640091c7:	pop    ebx
640091c8:	mov    esp,ebp
640091ca:	pop    ebp
640091cb:	ret    0x14
640091ce:	mov    edi,edi
640091d0:	mov    ebx,DWORD PTR [ebp+0xc]
640091d3:	test   ebx,ebx
640091d5:	je     0x640091dc
640091d7:	cmp    ebx,DWORD PTR [ebp+0x14]
640091da:	je     0x640091e1
640091dc:	call   0x64013ac8
640091e1:	cmp    esi,DWORD PTR [ebp+0x18]
640091e4:	je     0x6400924e
640091e6:	test   ebx,ebx
640091e8:	mov    DWORD PTR [esp+0x14],esi
640091ec:	jne    0x640091f3
640091ee:	call   0x64013ac8
640091f3:	cmp    BYTE PTR [esi+0x45],0x0
640091f7:	je     0x64009200
640091f9:	call   0x64013ac8
640091fe:	jmp    0x6400923a
64009200:	mov    eax,DWORD PTR [esi+0x8]
64009203:	cmp    BYTE PTR [eax+0x45],0x0
64009207:	jne    0x6400921f
64009209:	mov    esi,eax
6400920b:	mov    eax,DWORD PTR [esi]
6400920d:	cmp    BYTE PTR [eax+0x45],0x0
64009211:	jne    0x6400923a
64009213:	mov    esi,eax
64009215:	mov    eax,DWORD PTR [esi]
64009217:	cmp    BYTE PTR [eax+0x45],0x0
6400921b:	je     0x64009213
6400921d:	jmp    0x6400923a
6400921f:	mov    eax,DWORD PTR [esi+0x4]
64009222:	cmp    BYTE PTR [eax+0x45],0x0
64009226:	jne    0x64009238
64009228:	cmp    esi,DWORD PTR [eax+0x8]
6400922b:	jne    0x64009238
6400922d:	mov    esi,eax
6400922f:	mov    eax,DWORD PTR [eax+0x4]
64009232:	cmp    BYTE PTR [eax+0x45],0x0
64009236:	je     0x64009228
64009238:	mov    esi,eax
6400923a:	mov    edx,DWORD PTR [esp+0x14]
6400923e:	push   edx
6400923f:	push   ebx
64009240:	lea    eax,[esp+0x20]
64009244:	push   eax
64009245:	mov    ecx,edi
64009247:	call   0x640097d0
6400924c:	jmp    0x640091d0
6400924e:	mov    eax,DWORD PTR [ebp+0x8]
64009251:	pop    edi
64009252:	mov    DWORD PTR [eax+0x4],esi
64009255:	pop    esi
64009256:	mov    DWORD PTR [eax],ebx
64009258:	pop    ebx
64009259:	mov    esp,ebp
6400925b:	pop    ebp
6400925c:	ret    0x14
6400925f:	int3   
64009260:	push   esi
64009261:	mov    esi,ecx
64009263:	cmp    DWORD PTR [esi],0x0
64009266:	jne    0x6400926d
64009268:	call   0x64013ac8
6400926d:	mov    eax,DWORD PTR [esi+0x4]
64009270:	cmp    BYTE PTR [eax+0x45],0x0
64009274:	je     0x64009288
64009276:	mov    eax,DWORD PTR [eax+0x8]
64009279:	mov    DWORD PTR [esi+0x4],eax
6400927c:	cmp    BYTE PTR [eax+0x45],0x0
64009280:	je     0x640092e7
64009282:	pop    esi
64009283:	jmp    0x64013ac8
64009288:	mov    ecx,DWORD PTR [eax]
6400928a:	cmp    BYTE PTR [ecx+0x45],0x0
6400928e:	jne    0x640092b0
64009290:	mov    eax,DWORD PTR [ecx+0x8]
64009293:	cmp    BYTE PTR [eax+0x45],0x0
64009297:	jne    0x640092ab
64009299:	lea    esp,[esp+0x0]
640092a0:	mov    ecx,eax
640092a2:	mov    eax,DWORD PTR [ecx+0x8]
640092a5:	cmp    BYTE PTR [eax+0x45],0x0
640092a9:	je     0x640092a0
640092ab:	mov    DWORD PTR [esi+0x4],ecx
640092ae:	pop    esi
640092af:	ret    
640092b0:	mov    eax,DWORD PTR [eax+0x4]
640092b3:	cmp    BYTE PTR [eax+0x45],0x0
640092b7:	jne    0x640092d5
640092b9:	lea    esp,[esp+0x0]
640092c0:	mov    ecx,DWORD PTR [esi+0x4]
640092c3:	cmp    ecx,DWORD PTR [eax]
640092c5:	jne    0x640092d5
640092c7:	mov    DWORD PTR [esi+0x4],eax
640092ca:	mov    edx,eax
640092cc:	mov    eax,DWORD PTR [edx+0x4]
640092cf:	cmp    BYTE PTR [eax+0x45],0x0
640092d3:	je     0x640092c0
640092d5:	mov    ecx,DWORD PTR [esi+0x4]
640092d8:	cmp    BYTE PTR [ecx+0x45],0x0
640092dc:	je     0x640092e4
640092de:	pop    esi
640092df:	jmp    0x64013ac8
640092e4:	mov    DWORD PTR [esi+0x4],eax
640092e7:	pop    esi
640092e8:	ret    
640092e9:	int3   
640092ea:	int3   
640092eb:	int3   
640092ec:	int3   
640092ed:	int3   
640092ee:	int3   
640092ef:	int3   
640092f0:	push   0xffffffff
640092f2:	push   0x64023ba8
640092f7:	mov    eax,fs:0x0
640092fd:	push   eax
640092fe:	push   ecx
640092ff:	push   ebx
64009300:	push   esi
64009301:	push   edi
64009302:	mov    eax,ds:0x6402f09c
64009307:	xor    eax,esp
64009309:	push   eax
6400930a:	lea    eax,[esp+0x14]
6400930e:	mov    fs:0x0,eax
64009314:	mov    esi,ecx
64009316:	mov    DWORD PTR [esp+0x10],esi
6400931a:	mov    edi,DWORD PTR [esp+0x24]
6400931e:	xor    ebx,ebx
64009320:	push   0xffffffff
64009322:	push   ebx
64009323:	mov    DWORD PTR [esi+0x18],0xf
6400932a:	mov    DWORD PTR [esi+0x14],ebx
6400932d:	push   edi
6400932e:	mov    BYTE PTR [esi+0x4],bl
64009331:	call   0x640017a0
64009336:	push   0xffffffff
64009338:	lea    ecx,[esi+0x1c]
6400933b:	mov    DWORD PTR [esp+0x20],ebx
6400933f:	lea    eax,[edi+0x1c]
64009342:	push   ebx
64009343:	mov    DWORD PTR [ecx+0x18],0xf
6400934a:	mov    DWORD PTR [ecx+0x14],ebx
6400934d:	push   eax
6400934e:	mov    BYTE PTR [ecx+0x4],bl
64009351:	call   0x640017a0
64009356:	mov    eax,esi
64009358:	mov    ecx,DWORD PTR [esp+0x14]
6400935c:	mov    DWORD PTR fs:0x0,ecx
64009363:	pop    ecx
64009364:	pop    edi
64009365:	pop    esi
64009366:	pop    ebx
64009367:	add    esp,0x10
6400936a:	ret    0x4
6400936d:	int3   
6400936e:	int3   
6400936f:	int3   
64009370:	push   0xffffffff
64009372:	push   0x64023ee8
64009377:	mov    eax,fs:0x0
6400937d:	push   eax
6400937e:	push   ecx
6400937f:	push   ebx
64009380:	push   esi
64009381:	push   edi
64009382:	mov    eax,ds:0x6402f09c
64009387:	xor    eax,esp
64009389:	push   eax
6400938a:	lea    eax,[esp+0x14]
6400938e:	mov    fs:0x0,eax
64009394:	mov    esi,ecx
64009396:	mov    DWORD PTR [esp+0x10],esi
6400939a:	mov    ebx,DWORD PTR [esp+0x24]
6400939e:	xor    edi,edi
640093a0:	push   0xffffffff
640093a2:	push   edi
640093a3:	mov    DWORD PTR [esi+0x18],0x7
640093aa:	mov    DWORD PTR [esi+0x14],edi
640093ad:	push   ebx
640093ae:	mov    WORD PTR [esi+0x4],di
640093b2:	call   0x64008540
640093b7:	push   0xffffffff
640093b9:	lea    ecx,[esi+0x1c]
640093bc:	mov    DWORD PTR [esp+0x20],edi
640093c0:	lea    eax,[ebx+0x1c]
640093c3:	push   edi
640093c4:	mov    DWORD PTR [ecx+0x18],0x7
640093cb:	mov    DWORD PTR [ecx+0x14],edi
640093ce:	push   eax
640093cf:	mov    WORD PTR [ecx+0x4],di
640093d3:	call   0x64008540
640093d8:	mov    eax,esi
640093da:	mov    ecx,DWORD PTR [esp+0x14]
640093de:	mov    DWORD PTR fs:0x0,ecx
640093e5:	pop    ecx
640093e6:	pop    edi
640093e7:	pop    esi
640093e8:	pop    ebx
640093e9:	add    esp,0x10
640093ec:	ret    0x4
640093ef:	int3   
640093f0:	push   ebp
640093f1:	mov    ebp,esp
640093f3:	and    esp,0xfffffff8
640093f6:	push   0xffffffff
640093f8:	push   0x64024008
640093fd:	mov    eax,fs:0x0
64009403:	push   eax
64009404:	sub    esp,0x50
64009407:	push   ebx
64009408:	push   esi
64009409:	push   edi
6400940a:	mov    eax,ds:0x6402f09c
6400940f:	xor    eax,esp
64009411:	push   eax
64009412:	lea    eax,[esp+0x60]
64009416:	mov    fs:0x0,eax
6400941c:	mov    DWORD PTR [esp+0x14],ecx
64009420:	mov    edi,DWORD PTR [ebp+0x10]
64009423:	cmp    BYTE PTR [edi+0x45],0x0
64009427:	je     0x64009475
64009429:	push   0x1b
6400942b:	xor    esi,esi
6400942d:	push   0x6402a0ec
64009432:	lea    ecx,[esp+0x20]
64009436:	mov    DWORD PTR [esp+0x38],0xf
6400943e:	mov    DWORD PTR [esp+0x34],esi
64009442:	mov    BYTE PTR [esp+0x24],0x0
64009447:	call   0x64001880
6400944c:	lea    eax,[esp+0x18]
64009450:	push   eax
64009451:	lea    ecx,[esp+0x38]
64009455:	mov    DWORD PTR [esp+0x6c],esi
64009459:	call   0x64002cc0
6400945e:	push   0x6402c904
64009463:	lea    ecx,[esp+0x38]
64009467:	push   ecx
64009468:	mov    DWORD PTR [esp+0x3c],0x64026328
64009470:	call   0x64013b5b
64009475:	lea    ecx,[ebp+0xc]
64009478:	call   0x64009c10
6400947d:	mov    ecx,DWORD PTR [edi]
6400947f:	cmp    BYTE PTR [ecx+0x45],0x0
64009483:	je     0x6400948a
64009485:	mov    ebx,DWORD PTR [edi+0x8]
64009488:	jmp    0x640094a1
6400948a:	mov    edx,DWORD PTR [edi+0x8]
6400948d:	cmp    BYTE PTR [edx+0x45],0x0
64009491:	je     0x64009497
64009493:	mov    ebx,ecx
64009495:	jmp    0x640094a1
64009497:	mov    eax,DWORD PTR [ebp+0x10]
6400949a:	cmp    eax,edi
6400949c:	mov    ebx,DWORD PTR [eax+0x8]
6400949f:	jne    0x6400951d
640094a1:	cmp    BYTE PTR [ebx+0x45],0x0
640094a5:	mov    esi,DWORD PTR [edi+0x4]
640094a8:	jne    0x640094ad
640094aa:	mov    DWORD PTR [ebx+0x4],esi
640094ad:	mov    ecx,DWORD PTR [esp+0x14]
640094b1:	mov    eax,DWORD PTR [ecx+0x4]
640094b4:	cmp    DWORD PTR [eax+0x4],edi
640094b7:	jne    0x640094be
640094b9:	mov    DWORD PTR [eax+0x4],ebx
640094bc:	jmp    0x640094c9
640094be:	cmp    DWORD PTR [esi],edi
640094c0:	jne    0x640094c6
640094c2:	mov    DWORD PTR [esi],ebx
640094c4:	jmp    0x640094c9
640094c6:	mov    DWORD PTR [esi+0x8],ebx
640094c9:	mov    eax,DWORD PTR [ecx+0x4]
640094cc:	cmp    DWORD PTR [eax],edi
640094ce:	jne    0x640094ec
640094d0:	cmp    BYTE PTR [ebx+0x45],0x0
640094d4:	je     0x640094da
640094d6:	mov    eax,esi
640094d8:	jmp    0x640094e7
640094da:	push   ebx
640094db:	call   0x64009b70
640094e0:	mov    ecx,DWORD PTR [esp+0x18]
640094e4:	add    esp,0x4
640094e7:	mov    edx,DWORD PTR [ecx+0x4]
640094ea:	mov    DWORD PTR [edx],eax
640094ec:	mov    eax,DWORD PTR [ecx+0x4]
640094ef:	cmp    DWORD PTR [eax+0x8],edi
640094f2:	jne    0x6400957c
640094f8:	cmp    BYTE PTR [ebx+0x45],0x0
640094fc:	je     0x64009508
640094fe:	mov    edx,DWORD PTR [ecx+0x4]
64009501:	mov    eax,esi
64009503:	mov    DWORD PTR [edx+0x8],eax
64009506:	jmp    0x6400957c
64009508:	push   ebx
64009509:	call   0x64009710
6400950e:	mov    ecx,DWORD PTR [esp+0x18]
64009512:	mov    edx,DWORD PTR [ecx+0x4]
64009515:	add    esp,0x4
64009518:	mov    DWORD PTR [edx+0x8],eax
6400951b:	jmp    0x6400957c
6400951d:	mov    DWORD PTR [ecx+0x4],eax
64009520:	mov    ecx,DWORD PTR [edi]
64009522:	mov    DWORD PTR [eax],ecx
64009524:	cmp    eax,DWORD PTR [edi+0x8]
64009527:	jne    0x6400952d
64009529:	mov    esi,eax
6400952b:	jmp    0x64009547
6400952d:	cmp    BYTE PTR [ebx+0x45],0x0
64009531:	mov    esi,DWORD PTR [eax+0x4]
64009534:	jne    0x64009539
64009536:	mov    DWORD PTR [ebx+0x4],esi
64009539:	mov    DWORD PTR [esi],ebx
6400953b:	mov    edx,DWORD PTR [edi+0x8]
6400953e:	mov    DWORD PTR [eax+0x8],edx
64009541:	mov    ecx,DWORD PTR [edi+0x8]
64009544:	mov    DWORD PTR [ecx+0x4],eax
64009547:	mov    edx,DWORD PTR [esp+0x14]
6400954b:	mov    ecx,DWORD PTR [edx+0x4]
6400954e:	cmp    DWORD PTR [ecx+0x4],edi
64009551:	jne    0x64009558
64009553:	mov    DWORD PTR [ecx+0x4],eax
64009556:	jmp    0x64009566
64009558:	mov    ecx,DWORD PTR [edi+0x4]
6400955b:	cmp    DWORD PTR [ecx],edi
6400955d:	jne    0x64009563
6400955f:	mov    DWORD PTR [ecx],eax
64009561:	jmp    0x64009566
64009563:	mov    DWORD PTR [ecx+0x8],eax
64009566:	mov    ecx,DWORD PTR [edi+0x4]
64009569:	mov    DWORD PTR [eax+0x4],ecx
6400956c:	mov    cl,BYTE PTR [eax+0x44]
6400956f:	mov    dl,BYTE PTR [edi+0x44]
64009572:	mov    BYTE PTR [eax+0x44],dl
64009575:	mov    BYTE PTR [edi+0x44],cl
64009578:	mov    ecx,DWORD PTR [esp+0x14]
6400957c:	cmp    BYTE PTR [edi+0x44],0x1
64009580:	jne    0x64009691
64009586:	mov    eax,DWORD PTR [ecx+0x4]
64009589:	cmp    ebx,DWORD PTR [eax+0x4]
6400958c:	je     0x6400968d
64009592:	cmp    BYTE PTR [ebx+0x44],0x1
64009596:	jne    0x6400968d
6400959c:	mov    eax,DWORD PTR [esi]
6400959e:	cmp    ebx,eax
640095a0:	jne    0x64009610
640095a2:	mov    eax,DWORD PTR [esi+0x8]
640095a5:	cmp    BYTE PTR [eax+0x44],0x0
640095a9:	jne    0x640095c0
640095ab:	mov    BYTE PTR [eax+0x44],0x1
640095af:	push   esi
640095b0:	mov    BYTE PTR [esi+0x44],0x0
640095b4:	call   0x64008c00
640095b9:	mov    eax,DWORD PTR [esi+0x8]
640095bc:	mov    ecx,DWORD PTR [esp+0x14]
640095c0:	cmp    BYTE PTR [eax+0x45],0x0
640095c4:	jne    0x64009645
640095c6:	mov    edx,DWORD PTR [eax]
640095c8:	cmp    BYTE PTR [edx+0x44],0x1
640095cc:	jne    0x640095d7
640095ce:	mov    edx,DWORD PTR [eax+0x8]
640095d1:	cmp    BYTE PTR [edx+0x44],0x1
640095d5:	je     0x64009641
640095d7:	mov    edx,DWORD PTR [eax+0x8]
640095da:	cmp    BYTE PTR [edx+0x44],0x1
640095de:	jne    0x640095f7
640095e0:	mov    edx,DWORD PTR [eax]
640095e2:	mov    BYTE PTR [edx+0x44],0x1
640095e6:	push   eax
640095e7:	mov    BYTE PTR [eax+0x44],0x0
640095eb:	call   0x64008c50
640095f0:	mov    eax,DWORD PTR [esi+0x8]
640095f3:	mov    ecx,DWORD PTR [esp+0x14]
640095f7:	mov    dl,BYTE PTR [esi+0x44]
640095fa:	mov    BYTE PTR [eax+0x44],dl
640095fd:	mov    BYTE PTR [esi+0x44],0x1
64009601:	mov    eax,DWORD PTR [eax+0x8]
64009604:	push   esi
64009605:	mov    BYTE PTR [eax+0x44],0x1
64009609:	call   0x64008c00
6400960e:	jmp    0x6400968d
64009610:	cmp    BYTE PTR [eax+0x44],0x0
64009614:	jne    0x6400962a
64009616:	mov    BYTE PTR [eax+0x44],0x1
6400961a:	push   esi
6400961b:	mov    BYTE PTR [esi+0x44],0x0
6400961f:	call   0x64008c50
64009624:	mov    eax,DWORD PTR [esi]
64009626:	mov    ecx,DWORD PTR [esp+0x14]
6400962a:	cmp    BYTE PTR [eax+0x45],0x0
6400962e:	jne    0x64009645
64009630:	mov    edx,DWORD PTR [eax+0x8]
64009633:	cmp    BYTE PTR [edx+0x44],0x1
64009637:	jne    0x64009658
64009639:	mov    edx,DWORD PTR [eax]
6400963b:	cmp    BYTE PTR [edx+0x44],0x1
6400963f:	jne    0x64009658
64009641:	mov    BYTE PTR [eax+0x44],0x0
64009645:	mov    eax,DWORD PTR [ecx+0x4]
64009648:	mov    ebx,esi
6400964a:	cmp    ebx,DWORD PTR [eax+0x4]
6400964d:	mov    esi,DWORD PTR [esi+0x4]
64009650:	jne    0x64009592
64009656:	jmp    0x6400968d
64009658:	mov    edx,DWORD PTR [eax]
6400965a:	cmp    BYTE PTR [edx+0x44],0x1
6400965e:	jne    0x64009677
64009660:	mov    edx,DWORD PTR [eax+0x8]
64009663:	mov    BYTE PTR [edx+0x44],0x1
64009667:	push   eax
64009668:	mov    BYTE PTR [eax+0x44],0x0
6400966c:	call   0x64008c00
64009671:	mov    eax,DWORD PTR [esi]
64009673:	mov    ecx,DWORD PTR [esp+0x14]
64009677:	mov    dl,BYTE PTR [esi+0x44]
6400967a:	mov    BYTE PTR [eax+0x44],dl
6400967d:	mov    BYTE PTR [esi+0x44],0x1
64009681:	mov    eax,DWORD PTR [eax]
64009683:	push   esi
64009684:	mov    BYTE PTR [eax+0x44],0x1
64009688:	call   0x64008c50
6400968d:	mov    BYTE PTR [ebx+0x44],0x1
64009691:	cmp    DWORD PTR [edi+0x40],0x10
64009695:	jb     0x640096a3
64009697:	mov    ecx,DWORD PTR [edi+0x2c]
6400969a:	push   ecx
6400969b:	call   0x64013712
640096a0:	add    esp,0x4
640096a3:	xor    esi,esi
640096a5:	mov    ebx,0xf
640096aa:	mov    DWORD PTR [edi+0x40],ebx
640096ad:	mov    DWORD PTR [edi+0x3c],esi
640096b0:	mov    BYTE PTR [edi+0x2c],0x0
640096b4:	cmp    DWORD PTR [edi+0x24],0x10
640096b8:	jb     0x640096c6
640096ba:	mov    edx,DWORD PTR [edi+0x10]
640096bd:	push   edx
640096be:	call   0x64013712
640096c3:	add    esp,0x4
640096c6:	mov    DWORD PTR [edi+0x24],ebx
640096c9:	mov    DWORD PTR [edi+0x20],esi
640096cc:	push   edi
640096cd:	mov    BYTE PTR [edi+0x10],0x0
640096d1:	call   0x64013712
640096d6:	mov    ecx,DWORD PTR [esp+0x18]
640096da:	mov    eax,DWORD PTR [ecx+0x8]
640096dd:	add    esp,0x4
640096e0:	cmp    eax,esi
640096e2:	jbe    0x640096ea
640096e4:	add    eax,0xffffffff
640096e7:	mov    DWORD PTR [ecx+0x8],eax
640096ea:	mov    eax,DWORD PTR [ebp+0x8]
640096ed:	mov    ecx,DWORD PTR [ebp+0xc]
640096f0:	mov    edx,DWORD PTR [ebp+0x10]
640096f3:	mov    DWORD PTR [eax],ecx
640096f5:	mov    DWORD PTR [eax+0x4],edx
640096f8:	mov    ecx,DWORD PTR [esp+0x60]
640096fc:	mov    DWORD PTR fs:0x0,ecx
64009703:	pop    ecx
64009704:	pop    edi
64009705:	pop    esi
64009706:	pop    ebx
64009707:	mov    esp,ebp
64009709:	pop    ebp
6400970a:	ret    0xc
6400970d:	int3   
6400970e:	int3   
6400970f:	int3   
64009710:	mov    eax,DWORD PTR [esp+0x4]
64009714:	mov    ecx,DWORD PTR [eax+0x8]
64009717:	cmp    BYTE PTR [ecx+0x45],0x0
6400971b:	jne    0x6400972b
6400971d:	lea    ecx,[ecx+0x0]
64009720:	mov    eax,ecx
64009722:	mov    ecx,DWORD PTR [eax+0x8]
64009725:	cmp    BYTE PTR [ecx+0x45],0x0
64009729:	je     0x64009720
6400972b:	ret    
6400972c:	int3   
6400972d:	int3   
6400972e:	int3   
6400972f:	int3   
64009730:	push   0x48
64009732:	call   0x64013af1
64009737:	add    esp,0x4
6400973a:	test   eax,eax
6400973c:	je     0x64009744
6400973e:	mov    DWORD PTR [eax],0x0
64009744:	lea    ecx,[eax+0x4]
64009747:	test   ecx,ecx
64009749:	je     0x64009751
6400974b:	mov    DWORD PTR [ecx],0x0
64009751:	lea    ecx,[eax+0x8]
64009754:	test   ecx,ecx
64009756:	je     0x6400975e
64009758:	mov    DWORD PTR [ecx],0x0
6400975e:	mov    BYTE PTR [eax+0x44],0x1
64009762:	mov    BYTE PTR [eax+0x45],0x0
64009766:	ret    
64009767:	int3   
64009768:	int3   
64009769:	int3   
6400976a:	int3   
6400976b:	int3   
6400976c:	int3   
6400976d:	int3   
6400976e:	int3   
6400976f:	int3   
64009770:	mov    ecx,DWORD PTR [esp+0x4]
64009774:	sub    esp,0xc
64009777:	test   ecx,ecx
64009779:	ja     0x6400978f
6400977b:	xor    ecx,ecx
6400977d:	lea    edx,[ecx+ecx*1]
64009780:	push   edx
64009781:	call   0x64013af1
64009786:	add    esp,0x4
64009789:	add    esp,0xc
6400978c:	ret    0x4
6400978f:	or     eax,0xffffffff
64009792:	xor    edx,edx
64009794:	div    ecx
64009796:	cmp    eax,0x2
64009799:	jae    0x6400977d
6400979b:	lea    eax,[esp+0x10]
6400979f:	push   eax
640097a0:	lea    ecx,[esp+0x4]
640097a4:	mov    DWORD PTR [esp+0x14],0x0
640097ac:	call   0x6401376d
640097b1:	push   0x6402c874
640097b6:	lea    ecx,[esp+0x4]
640097ba:	push   ecx
640097bb:	mov    DWORD PTR [esp+0x8],0x64026304
640097c3:	call   0x64013b5b
640097c8:	int3   
640097c9:	int3   
640097ca:	int3   
640097cb:	int3   
640097cc:	int3   
640097cd:	int3   
640097ce:	int3   
640097cf:	int3   
640097d0:	push   ebp
640097d1:	mov    ebp,esp
640097d3:	and    esp,0xfffffff8
640097d6:	push   0xffffffff
640097d8:	push   0x64023fd8
640097dd:	mov    eax,fs:0x0
640097e3:	push   eax
640097e4:	sub    esp,0x50
640097e7:	push   ebx
640097e8:	push   esi
640097e9:	push   edi
640097ea:	mov    eax,ds:0x6402f09c
640097ef:	xor    eax,esp
640097f1:	push   eax
640097f2:	lea    eax,[esp+0x60]
640097f6:	mov    fs:0x0,eax
640097fc:	mov    DWORD PTR [esp+0x14],ecx
64009800:	mov    edi,DWORD PTR [ebp+0x10]
64009803:	cmp    BYTE PTR [edi+0x45],0x0
64009807:	je     0x64009855
64009809:	push   0x1b
6400980b:	xor    esi,esi
6400980d:	push   0x6402a0ec
64009812:	lea    ecx,[esp+0x20]
64009816:	mov    DWORD PTR [esp+0x38],0xf
6400981e:	mov    DWORD PTR [esp+0x34],esi
64009822:	mov    BYTE PTR [esp+0x24],0x0
64009827:	call   0x64001880
6400982c:	lea    eax,[esp+0x18]
64009830:	push   eax
64009831:	lea    ecx,[esp+0x38]
64009835:	mov    DWORD PTR [esp+0x6c],esi
64009839:	call   0x64002cc0
6400983e:	push   0x6402c904
64009843:	lea    ecx,[esp+0x38]
64009847:	push   ecx
64009848:	mov    DWORD PTR [esp+0x3c],0x64026328
64009850:	call   0x64013b5b
64009855:	lea    ecx,[ebp+0xc]
64009858:	call   0x64009c10
6400985d:	mov    ecx,DWORD PTR [edi]
6400985f:	cmp    BYTE PTR [ecx+0x45],0x0
64009863:	je     0x6400986a
64009865:	mov    ebx,DWORD PTR [edi+0x8]
64009868:	jmp    0x64009881
6400986a:	mov    edx,DWORD PTR [edi+0x8]
6400986d:	cmp    BYTE PTR [edx+0x45],0x0
64009871:	je     0x64009877
64009873:	mov    ebx,ecx
64009875:	jmp    0x64009881
64009877:	mov    eax,DWORD PTR [ebp+0x10]
6400987a:	cmp    eax,edi
6400987c:	mov    ebx,DWORD PTR [eax+0x8]
6400987f:	jne    0x640098fd
64009881:	cmp    BYTE PTR [ebx+0x45],0x0
64009885:	mov    esi,DWORD PTR [edi+0x4]
64009888:	jne    0x6400988d
6400988a:	mov    DWORD PTR [ebx+0x4],esi
6400988d:	mov    ecx,DWORD PTR [esp+0x14]
64009891:	mov    eax,DWORD PTR [ecx+0x4]
64009894:	cmp    DWORD PTR [eax+0x4],edi
64009897:	jne    0x6400989e
64009899:	mov    DWORD PTR [eax+0x4],ebx
6400989c:	jmp    0x640098a9
6400989e:	cmp    DWORD PTR [esi],edi
640098a0:	jne    0x640098a6
640098a2:	mov    DWORD PTR [esi],ebx
640098a4:	jmp    0x640098a9
640098a6:	mov    DWORD PTR [esi+0x8],ebx
640098a9:	mov    eax,DWORD PTR [ecx+0x4]
640098ac:	cmp    DWORD PTR [eax],edi
640098ae:	jne    0x640098cc
640098b0:	cmp    BYTE PTR [ebx+0x45],0x0
640098b4:	je     0x640098ba
640098b6:	mov    eax,esi
640098b8:	jmp    0x640098c7
640098ba:	push   ebx
640098bb:	call   0x64009b70
640098c0:	mov    ecx,DWORD PTR [esp+0x18]
640098c4:	add    esp,0x4
640098c7:	mov    edx,DWORD PTR [ecx+0x4]
640098ca:	mov    DWORD PTR [edx],eax
640098cc:	mov    eax,DWORD PTR [ecx+0x4]
640098cf:	cmp    DWORD PTR [eax+0x8],edi
640098d2:	jne    0x6400995c
640098d8:	cmp    BYTE PTR [ebx+0x45],0x0
640098dc:	je     0x640098e8
640098de:	mov    edx,DWORD PTR [ecx+0x4]
640098e1:	mov    eax,esi
640098e3:	mov    DWORD PTR [edx+0x8],eax
640098e6:	jmp    0x6400995c
640098e8:	push   ebx
640098e9:	call   0x64009710
640098ee:	mov    ecx,DWORD PTR [esp+0x18]
640098f2:	mov    edx,DWORD PTR [ecx+0x4]
640098f5:	add    esp,0x4
640098f8:	mov    DWORD PTR [edx+0x8],eax
640098fb:	jmp    0x6400995c
640098fd:	mov    DWORD PTR [ecx+0x4],eax
64009900:	mov    ecx,DWORD PTR [edi]
64009902:	mov    DWORD PTR [eax],ecx
64009904:	cmp    eax,DWORD PTR [edi+0x8]
64009907:	jne    0x6400990d
64009909:	mov    esi,eax
6400990b:	jmp    0x64009927
6400990d:	cmp    BYTE PTR [ebx+0x45],0x0
64009911:	mov    esi,DWORD PTR [eax+0x4]
64009914:	jne    0x64009919
64009916:	mov    DWORD PTR [ebx+0x4],esi
64009919:	mov    DWORD PTR [esi],ebx
6400991b:	mov    edx,DWORD PTR [edi+0x8]
6400991e:	mov    DWORD PTR [eax+0x8],edx
64009921:	mov    ecx,DWORD PTR [edi+0x8]
64009924:	mov    DWORD PTR [ecx+0x4],eax
64009927:	mov    edx,DWORD PTR [esp+0x14]
6400992b:	mov    ecx,DWORD PTR [edx+0x4]
6400992e:	cmp    DWORD PTR [ecx+0x4],edi
64009931:	jne    0x64009938
64009933:	mov    DWORD PTR [ecx+0x4],eax
64009936:	jmp    0x64009946
64009938:	mov    ecx,DWORD PTR [edi+0x4]
6400993b:	cmp    DWORD PTR [ecx],edi
6400993d:	jne    0x64009943
6400993f:	mov    DWORD PTR [ecx],eax
64009941:	jmp    0x64009946
64009943:	mov    DWORD PTR [ecx+0x8],eax
64009946:	mov    ecx,DWORD PTR [edi+0x4]
64009949:	mov    DWORD PTR [eax+0x4],ecx
6400994c:	mov    cl,BYTE PTR [eax+0x44]
6400994f:	mov    dl,BYTE PTR [edi+0x44]
64009952:	mov    BYTE PTR [eax+0x44],dl
64009955:	mov    BYTE PTR [edi+0x44],cl
64009958:	mov    ecx,DWORD PTR [esp+0x14]
6400995c:	cmp    BYTE PTR [edi+0x44],0x1
64009960:	jne    0x64009a71
64009966:	mov    eax,DWORD PTR [ecx+0x4]
64009969:	cmp    ebx,DWORD PTR [eax+0x4]
6400996c:	je     0x64009a6d
64009972:	cmp    BYTE PTR [ebx+0x44],0x1
64009976:	jne    0x64009a6d
6400997c:	mov    eax,DWORD PTR [esi]
6400997e:	cmp    ebx,eax
64009980:	jne    0x640099f0
64009982:	mov    eax,DWORD PTR [esi+0x8]
64009985:	cmp    BYTE PTR [eax+0x44],0x0
64009989:	jne    0x640099a0
6400998b:	mov    BYTE PTR [eax+0x44],0x1
6400998f:	push   esi
64009990:	mov    BYTE PTR [esi+0x44],0x0
64009994:	call   0x64008c00
64009999:	mov    eax,DWORD PTR [esi+0x8]
6400999c:	mov    ecx,DWORD PTR [esp+0x14]
640099a0:	cmp    BYTE PTR [eax+0x45],0x0
640099a4:	jne    0x64009a25
640099a6:	mov    edx,DWORD PTR [eax]
640099a8:	cmp    BYTE PTR [edx+0x44],0x1
640099ac:	jne    0x640099b7
640099ae:	mov    edx,DWORD PTR [eax+0x8]
640099b1:	cmp    BYTE PTR [edx+0x44],0x1
640099b5:	je     0x64009a21
640099b7:	mov    edx,DWORD PTR [eax+0x8]
640099ba:	cmp    BYTE PTR [edx+0x44],0x1
640099be:	jne    0x640099d7
640099c0:	mov    edx,DWORD PTR [eax]
640099c2:	mov    BYTE PTR [edx+0x44],0x1
640099c6:	push   eax
640099c7:	mov    BYTE PTR [eax+0x44],0x0
640099cb:	call   0x64008c50
640099d0:	mov    eax,DWORD PTR [esi+0x8]
640099d3:	mov    ecx,DWORD PTR [esp+0x14]
640099d7:	mov    dl,BYTE PTR [esi+0x44]
640099da:	mov    BYTE PTR [eax+0x44],dl
640099dd:	mov    BYTE PTR [esi+0x44],0x1
640099e1:	mov    eax,DWORD PTR [eax+0x8]
640099e4:	push   esi
640099e5:	mov    BYTE PTR [eax+0x44],0x1
640099e9:	call   0x64008c00
640099ee:	jmp    0x64009a6d
640099f0:	cmp    BYTE PTR [eax+0x44],0x0
640099f4:	jne    0x64009a0a
640099f6:	mov    BYTE PTR [eax+0x44],0x1
640099fa:	push   esi
640099fb:	mov    BYTE PTR [esi+0x44],0x0
640099ff:	call   0x64008c50
64009a04:	mov    eax,DWORD PTR [esi]
64009a06:	mov    ecx,DWORD PTR [esp+0x14]
64009a0a:	cmp    BYTE PTR [eax+0x45],0x0
64009a0e:	jne    0x64009a25
64009a10:	mov    edx,DWORD PTR [eax+0x8]
64009a13:	cmp    BYTE PTR [edx+0x44],0x1
64009a17:	jne    0x64009a38
64009a19:	mov    edx,DWORD PTR [eax]
64009a1b:	cmp    BYTE PTR [edx+0x44],0x1
64009a1f:	jne    0x64009a38
64009a21:	mov    BYTE PTR [eax+0x44],0x0
64009a25:	mov    eax,DWORD PTR [ecx+0x4]
64009a28:	mov    ebx,esi
64009a2a:	cmp    ebx,DWORD PTR [eax+0x4]
64009a2d:	mov    esi,DWORD PTR [esi+0x4]
64009a30:	jne    0x64009972
64009a36:	jmp    0x64009a6d
64009a38:	mov    edx,DWORD PTR [eax]
64009a3a:	cmp    BYTE PTR [edx+0x44],0x1
64009a3e:	jne    0x64009a57
64009a40:	mov    edx,DWORD PTR [eax+0x8]
64009a43:	mov    BYTE PTR [edx+0x44],0x1
64009a47:	push   eax
64009a48:	mov    BYTE PTR [eax+0x44],0x0
64009a4c:	call   0x64008c00
64009a51:	mov    eax,DWORD PTR [esi]
64009a53:	mov    ecx,DWORD PTR [esp+0x14]
64009a57:	mov    dl,BYTE PTR [esi+0x44]
64009a5a:	mov    BYTE PTR [eax+0x44],dl
64009a5d:	mov    BYTE PTR [esi+0x44],0x1
64009a61:	mov    eax,DWORD PTR [eax]
64009a63:	push   esi
64009a64:	mov    BYTE PTR [eax+0x44],0x1
64009a68:	call   0x64008c50
64009a6d:	mov    BYTE PTR [ebx+0x44],0x1
64009a71:	cmp    DWORD PTR [edi+0x40],0x8
64009a75:	jb     0x64009a83
64009a77:	mov    ecx,DWORD PTR [edi+0x2c]
64009a7a:	push   ecx
64009a7b:	call   0x64013712
64009a80:	add    esp,0x4
64009a83:	xor    esi,esi
64009a85:	mov    ebx,0x7
64009a8a:	mov    DWORD PTR [edi+0x40],ebx
64009a8d:	mov    DWORD PTR [edi+0x3c],esi
64009a90:	mov    WORD PTR [edi+0x2c],si
64009a94:	cmp    DWORD PTR [edi+0x24],0x8
64009a98:	jb     0x64009aa6
64009a9a:	mov    edx,DWORD PTR [edi+0x10]
64009a9d:	push   edx
64009a9e:	call   0x64013712
64009aa3:	add    esp,0x4
64009aa6:	mov    DWORD PTR [edi+0x24],ebx
64009aa9:	mov    DWORD PTR [edi+0x20],esi
64009aac:	push   edi
64009aad:	mov    WORD PTR [edi+0x10],si
64009ab1:	call   0x64013712
64009ab6:	mov    ecx,DWORD PTR [esp+0x18]
64009aba:	mov    eax,DWORD PTR [ecx+0x8]
64009abd:	add    esp,0x4
64009ac0:	cmp    eax,esi
64009ac2:	jbe    0x64009aca
64009ac4:	add    eax,0xffffffff
64009ac7:	mov    DWORD PTR [ecx+0x8],eax
64009aca:	mov    eax,DWORD PTR [ebp+0x8]
64009acd:	mov    ecx,DWORD PTR [ebp+0xc]
64009ad0:	mov    edx,DWORD PTR [ebp+0x10]
64009ad3:	mov    DWORD PTR [eax],ecx
64009ad5:	mov    DWORD PTR [eax+0x4],edx
64009ad8:	mov    ecx,DWORD PTR [esp+0x60]
64009adc:	mov    DWORD PTR fs:0x0,ecx
64009ae3:	pop    ecx
64009ae4:	pop    edi
64009ae5:	pop    esi
64009ae6:	pop    ebx
64009ae7:	mov    esp,ebp
64009ae9:	pop    ebp
64009aea:	ret    0xc
64009aed:	int3   
64009aee:	int3   
64009aef:	int3   
64009af0:	push   ecx
64009af1:	push   ebx
64009af2:	push   esi
64009af3:	mov    esi,DWORD PTR [esp+0x10]
64009af7:	xor    ebx,ebx
64009af9:	cmp    BYTE PTR [esi+0x45],bl
64009afc:	push   edi
64009afd:	mov    DWORD PTR [esp+0xc],ecx
64009b01:	mov    edi,esi
64009b03:	jne    0x64009b66
64009b05:	push   ebp
64009b06:	lea    ebp,[ebx+0xf]
64009b09:	lea    esp,[esp+0x0]
64009b10:	mov    eax,DWORD PTR [edi+0x8]
64009b13:	mov    ecx,DWORD PTR [esp+0x10]
64009b17:	push   eax
64009b18:	call   0x64009af0
64009b1d:	cmp    DWORD PTR [esi+0x40],0x10
64009b21:	mov    edi,DWORD PTR [edi]
64009b23:	jb     0x64009b31
64009b25:	mov    ecx,DWORD PTR [esi+0x2c]
64009b28:	push   ecx
64009b29:	call   0x64013712
64009b2e:	add    esp,0x4
64009b31:	mov    DWORD PTR [esi+0x40],ebp
64009b34:	mov    DWORD PTR [esi+0x3c],ebx
64009b37:	mov    BYTE PTR [esi+0x2c],bl
64009b3a:	cmp    DWORD PTR [esi+0x24],0x10
64009b3e:	jb     0x64009b4c
64009b40:	mov    edx,DWORD PTR [esi+0x10]
64009b43:	push   edx
64009b44:	call   0x64013712
64009b49:	add    esp,0x4
64009b4c:	mov    DWORD PTR [esi+0x24],ebp
64009b4f:	mov    DWORD PTR [esi+0x20],ebx
64009b52:	push   esi
64009b53:	mov    BYTE PTR [esi+0x10],bl
64009b56:	call   0x64013712
64009b5b:	add    esp,0x4
64009b5e:	cmp    BYTE PTR [edi+0x45],bl
64009b61:	mov    esi,edi
64009b63:	je     0x64009b10
64009b65:	pop    ebp
64009b66:	pop    edi
64009b67:	pop    esi
64009b68:	pop    ebx
64009b69:	pop    ecx
64009b6a:	ret    0x4
64009b6d:	int3   
64009b6e:	int3   
64009b6f:	int3   
64009b70:	mov    eax,DWORD PTR [esp+0x4]
64009b74:	mov    ecx,DWORD PTR [eax]
64009b76:	cmp    BYTE PTR [ecx+0x45],0x0
64009b7a:	jne    0x64009b8a
64009b7c:	lea    esp,[esp+0x0]
64009b80:	mov    eax,ecx
64009b82:	mov    ecx,DWORD PTR [eax]
64009b84:	cmp    BYTE PTR [ecx+0x45],0x0
64009b88:	je     0x64009b80
64009b8a:	ret    
64009b8b:	int3   
64009b8c:	int3   
64009b8d:	int3   
64009b8e:	int3   
64009b8f:	int3   
64009b90:	push   ecx
64009b91:	push   ebx
64009b92:	push   esi
64009b93:	mov    esi,DWORD PTR [esp+0x10]
64009b97:	xor    ebx,ebx
64009b99:	cmp    BYTE PTR [esi+0x45],bl
64009b9c:	push   edi
64009b9d:	mov    DWORD PTR [esp+0xc],ecx
64009ba1:	mov    edi,esi
64009ba3:	jne    0x64009c08
64009ba5:	push   ebp
64009ba6:	lea    ebp,[ebx+0x7]
64009ba9:	lea    esp,[esp+0x0]
64009bb0:	mov    eax,DWORD PTR [edi+0x8]
64009bb3:	mov    ecx,DWORD PTR [esp+0x10]
64009bb7:	push   eax
64009bb8:	call   0x64009b90
64009bbd:	cmp    DWORD PTR [esi+0x40],0x8
64009bc1:	mov    edi,DWORD PTR [edi]
64009bc3:	jb     0x64009bd1
64009bc5:	mov    ecx,DWORD PTR [esi+0x2c]
64009bc8:	push   ecx
64009bc9:	call   0x64013712
64009bce:	add    esp,0x4
64009bd1:	mov    DWORD PTR [esi+0x40],ebp
64009bd4:	mov    DWORD PTR [esi+0x3c],ebx
64009bd7:	mov    WORD PTR [esi+0x2c],bx
64009bdb:	cmp    DWORD PTR [esi+0x24],0x8
64009bdf:	jb     0x64009bed
64009be1:	mov    edx,DWORD PTR [esi+0x10]
64009be4:	push   edx
64009be5:	call   0x64013712
64009bea:	add    esp,0x4
64009bed:	mov    DWORD PTR [esi+0x24],ebp
64009bf0:	mov    DWORD PTR [esi+0x20],ebx
64009bf3:	push   esi
64009bf4:	mov    WORD PTR [esi+0x10],bx
64009bf8:	call   0x64013712
64009bfd:	add    esp,0x4
64009c00:	cmp    BYTE PTR [edi+0x45],bl
64009c03:	mov    esi,edi
64009c05:	je     0x64009bb0
64009c07:	pop    ebp
64009c08:	pop    edi
64009c09:	pop    esi
64009c0a:	pop    ebx
64009c0b:	pop    ecx
64009c0c:	ret    0x4
64009c0f:	int3   
64009c10:	push   esi
64009c11:	mov    esi,ecx
64009c13:	cmp    DWORD PTR [esi],0x0
64009c16:	jne    0x64009c1d
64009c18:	call   0x64013ac8
64009c1d:	mov    eax,DWORD PTR [esi+0x4]
64009c20:	cmp    BYTE PTR [eax+0x45],0x0
64009c24:	je     0x64009c2c
64009c26:	pop    esi
64009c27:	jmp    0x64013ac8
64009c2c:	mov    ecx,DWORD PTR [eax+0x8]
64009c2f:	cmp    BYTE PTR [ecx+0x45],0x0
64009c33:	jne    0x64009c4f
64009c35:	mov    eax,DWORD PTR [ecx]
64009c37:	cmp    BYTE PTR [eax+0x45],0x0
64009c3b:	jne    0x64009c4a
64009c3d:	lea    ecx,[ecx+0x0]
64009c40:	mov    ecx,eax
64009c42:	mov    eax,DWORD PTR [ecx]
64009c44:	cmp    BYTE PTR [eax+0x45],0x0
64009c48:	je     0x64009c40
64009c4a:	mov    DWORD PTR [esi+0x4],ecx
64009c4d:	pop    esi
64009c4e:	ret    
64009c4f:	mov    eax,DWORD PTR [eax+0x4]
64009c52:	cmp    BYTE PTR [eax+0x45],0x0
64009c56:	jne    0x64009c6e
64009c58:	mov    ecx,DWORD PTR [esi+0x4]
64009c5b:	cmp    ecx,DWORD PTR [eax+0x8]
64009c5e:	jne    0x64009c6e
64009c60:	mov    DWORD PTR [esi+0x4],eax
64009c63:	mov    edx,eax
64009c65:	mov    eax,DWORD PTR [edx+0x4]
64009c68:	cmp    BYTE PTR [eax+0x45],0x0
64009c6c:	je     0x64009c58
64009c6e:	mov    DWORD PTR [esi+0x4],eax
64009c71:	pop    esi
64009c72:	ret    
64009c73:	int3   
64009c74:	int3   
64009c75:	int3   
64009c76:	int3   
64009c77:	int3   
64009c78:	int3   
64009c79:	int3   
64009c7a:	int3   
64009c7b:	int3   
64009c7c:	int3   
64009c7d:	int3   
64009c7e:	int3   
64009c7f:	int3   
64009c80:	push   0xffffffff
64009c82:	push   0x64023b78
64009c87:	mov    eax,fs:0x0
64009c8d:	push   eax
64009c8e:	sub    esp,0x20
64009c91:	push   ebx
64009c92:	push   ebp
64009c93:	mov    eax,ds:0x6402f09c
64009c98:	xor    eax,esp
64009c9a:	push   eax
64009c9b:	lea    eax,[esp+0x2c]
64009c9f:	mov    fs:0x0,eax
64009ca5:	mov    eax,DWORD PTR [esp+0x3c]
64009ca9:	xor    ebx,ebx
64009cab:	push   0xffffffff
64009cad:	push   ebx
64009cae:	push   eax
64009caf:	lea    ecx,[esp+0x1c]
64009cb3:	mov    DWORD PTR [esp+0x18],ebx
64009cb7:	mov    DWORD PTR [esp+0x34],0xf
64009cbf:	mov    DWORD PTR [esp+0x30],ebx
64009cc3:	mov    BYTE PTR [esp+0x20],bl
64009cc7:	call   0x640017a0
64009ccc:	mov    eax,edi
64009cce:	mov    DWORD PTR [esp+0x34],ebx
64009cd2:	lea    ebp,[eax+0x1]
64009cd5:	mov    cl,BYTE PTR [eax]
64009cd7:	add    eax,0x1
64009cda:	cmp    cl,bl
64009cdc:	jne    0x64009cd5
64009cde:	sub    eax,ebp
64009ce0:	push   eax
64009ce1:	push   edi
64009ce2:	lea    eax,[esp+0x18]
64009ce6:	call   0x6400a100
64009ceb:	push   0xffffffff
64009ced:	push   ebx
64009cee:	mov    DWORD PTR [esi+0x18],0xf
64009cf5:	mov    DWORD PTR [esi+0x14],ebx
64009cf8:	push   eax
64009cf9:	mov    ecx,esi
64009cfb:	mov    BYTE PTR [esi+0x4],bl
64009cfe:	call   0x640017a0
64009d03:	cmp    DWORD PTR [esp+0x28],0x10
64009d08:	jb     0x64009d17
64009d0a:	mov    ecx,DWORD PTR [esp+0x14]
64009d0e:	push   ecx
64009d0f:	call   0x64013712
64009d14:	add    esp,0x4
64009d17:	mov    eax,esi
64009d19:	mov    ecx,DWORD PTR [esp+0x2c]
64009d1d:	mov    DWORD PTR fs:0x0,ecx
64009d24:	pop    ecx
64009d25:	pop    ebp
64009d26:	pop    ebx
64009d27:	add    esp,0x2c
64009d2a:	ret    
64009d2b:	int3   
64009d2c:	int3   
64009d2d:	int3   
64009d2e:	int3   
64009d2f:	int3   
64009d30:	push   0xffffffff
64009d32:	push   0x64023b50
64009d37:	mov    eax,fs:0x0
64009d3d:	push   eax
64009d3e:	push   ecx
64009d3f:	push   esi
64009d40:	mov    eax,ds:0x6402f09c
64009d45:	xor    eax,esp
64009d47:	push   eax
64009d48:	lea    eax,[esp+0xc]
64009d4c:	mov    fs:0x0,eax
64009d52:	mov    esi,DWORD PTR [esp+0x1c]
64009d56:	mov    DWORD PTR [esp+0x8],0x0
64009d5e:	lea    eax,[esp+0x3c]
64009d62:	push   eax
64009d63:	lea    ecx,[esp+0x24]
64009d67:	push   ecx
64009d68:	mov    ecx,esi
64009d6a:	mov    DWORD PTR [esp+0x1c],0x1
64009d72:	call   0x64009f70
64009d77:	cmp    DWORD PTR [esp+0x38],0x10
64009d7c:	jb     0x64009d8b
64009d7e:	mov    edx,DWORD PTR [esp+0x24]
64009d82:	push   edx
64009d83:	call   0x64013712
64009d88:	add    esp,0x4
64009d8b:	cmp    DWORD PTR [esp+0x54],0x10
64009d90:	mov    DWORD PTR [esp+0x38],0xf
64009d98:	mov    DWORD PTR [esp+0x34],0x0
64009da0:	mov    BYTE PTR [esp+0x24],0x0
64009da5:	jb     0x64009db4
64009da7:	mov    eax,DWORD PTR [esp+0x40]
64009dab:	push   eax
64009dac:	call   0x64013712
64009db1:	add    esp,0x4
64009db4:	mov    eax,esi
64009db6:	mov    ecx,DWORD PTR [esp+0xc]
64009dba:	mov    DWORD PTR fs:0x0,ecx
64009dc1:	pop    ecx
64009dc2:	pop    esi
64009dc3:	add    esp,0x10
64009dc6:	ret    
64009dc7:	int3   
64009dc8:	int3   
64009dc9:	int3   
64009dca:	int3   
64009dcb:	int3   
64009dcc:	int3   
64009dcd:	int3   
64009dce:	int3   
64009dcf:	int3   
64009dd0:	push   0xffffffff
64009dd2:	push   0x64023b18
64009dd7:	mov    eax,fs:0x0
64009ddd:	push   eax
64009dde:	push   ecx
64009ddf:	push   ebx
64009de0:	push   esi
64009de1:	push   edi
64009de2:	mov    eax,ds:0x6402f09c
64009de7:	xor    eax,esp
64009de9:	push   eax
64009dea:	lea    eax,[esp+0x14]
64009dee:	mov    fs:0x0,eax
64009df4:	mov    esi,ecx
64009df6:	mov    DWORD PTR [esp+0x10],esi
64009dfa:	mov    edi,DWORD PTR [esp+0x24]
64009dfe:	xor    ebx,ebx
64009e00:	push   0xffffffff
64009e02:	push   ebx
64009e03:	mov    DWORD PTR [esi+0x18],0xf
64009e0a:	mov    DWORD PTR [esi+0x14],ebx
64009e0d:	push   edi
64009e0e:	mov    BYTE PTR [esi+0x4],bl
64009e11:	call   0x640017a0
64009e16:	push   0xffffffff
64009e18:	lea    ecx,[esi+0x1c]
64009e1b:	mov    DWORD PTR [esp+0x20],ebx
64009e1f:	lea    eax,[edi+0x1c]
64009e22:	push   ebx
64009e23:	mov    DWORD PTR [ecx+0x18],0xf
64009e2a:	mov    DWORD PTR [ecx+0x14],ebx
64009e2d:	push   eax
64009e2e:	mov    BYTE PTR [ecx+0x4],bl
64009e31:	call   0x640017a0
64009e36:	mov    eax,esi
64009e38:	mov    ecx,DWORD PTR [esp+0x14]
64009e3c:	mov    DWORD PTR fs:0x0,ecx
64009e43:	pop    ecx
64009e44:	pop    edi
64009e45:	pop    esi
64009e46:	pop    ebx
64009e47:	add    esp,0x10
64009e4a:	ret    0x4
64009e4d:	int3   
64009e4e:	int3   
64009e4f:	int3   
64009e50:	push   0xffffffff
64009e52:	push   0x64023ec0
64009e57:	mov    eax,fs:0x0
64009e5d:	push   eax
64009e5e:	push   ecx
64009e5f:	push   esi
64009e60:	mov    eax,ds:0x6402f09c
64009e65:	xor    eax,esp
64009e67:	push   eax
64009e68:	lea    eax,[esp+0xc]
64009e6c:	mov    fs:0x0,eax
64009e72:	mov    esi,DWORD PTR [esp+0x1c]
64009e76:	mov    DWORD PTR [esp+0x8],0x0
64009e7e:	lea    eax,[esp+0x3c]
64009e82:	push   eax
64009e83:	lea    ecx,[esp+0x24]
64009e87:	push   ecx
64009e88:	mov    ecx,esi
64009e8a:	mov    DWORD PTR [esp+0x1c],0x1
64009e92:	call   0x64009ff0
64009e97:	cmp    DWORD PTR [esp+0x38],0x8
64009e9c:	jb     0x64009eab
64009e9e:	mov    edx,DWORD PTR [esp+0x24]
64009ea2:	push   edx
64009ea3:	call   0x64013712
64009ea8:	add    esp,0x4
64009eab:	cmp    DWORD PTR [esp+0x54],0x8
64009eb0:	mov    DWORD PTR [esp+0x38],0x7
64009eb8:	mov    DWORD PTR [esp+0x34],0x0
64009ec0:	mov    WORD PTR [esp+0x24],0x0
64009ec7:	jb     0x64009ed6
64009ec9:	mov    eax,DWORD PTR [esp+0x40]
64009ecd:	push   eax
64009ece:	call   0x64013712
64009ed3:	add    esp,0x4
64009ed6:	mov    eax,esi
64009ed8:	mov    ecx,DWORD PTR [esp+0xc]
64009edc:	mov    DWORD PTR fs:0x0,ecx
64009ee3:	pop    ecx
64009ee4:	pop    esi
64009ee5:	add    esp,0x10
64009ee8:	ret    
64009ee9:	int3   
64009eea:	int3   
64009eeb:	int3   
64009eec:	int3   
64009eed:	int3   
64009eee:	int3   
64009eef:	int3   
64009ef0:	push   0xffffffff
64009ef2:	push   0x64023e88
64009ef7:	mov    eax,fs:0x0
64009efd:	push   eax
64009efe:	push   ecx
64009eff:	push   ebx
64009f00:	push   esi
64009f01:	push   edi
64009f02:	mov    eax,ds:0x6402f09c
64009f07:	xor    eax,esp
64009f09:	push   eax
64009f0a:	lea    eax,[esp+0x14]
64009f0e:	mov    fs:0x0,eax
64009f14:	mov    esi,ecx
64009f16:	mov    DWORD PTR [esp+0x10],esi
64009f1a:	mov    ebx,DWORD PTR [esp+0x24]
64009f1e:	xor    edi,edi
64009f20:	push   0xffffffff
64009f22:	push   edi
64009f23:	mov    DWORD PTR [esi+0x18],0x7
64009f2a:	mov    DWORD PTR [esi+0x14],edi
64009f2d:	push   ebx
64009f2e:	mov    WORD PTR [esi+0x4],di
64009f32:	call   0x64008540
64009f37:	push   0xffffffff
64009f39:	lea    ecx,[esi+0x1c]
64009f3c:	mov    DWORD PTR [esp+0x20],edi
64009f40:	lea    eax,[ebx+0x1c]
64009f43:	push   edi
64009f44:	mov    DWORD PTR [ecx+0x18],0x7
64009f4b:	mov    DWORD PTR [ecx+0x14],edi
64009f4e:	push   eax
64009f4f:	mov    WORD PTR [ecx+0x4],di
64009f53:	call   0x64008540
64009f58:	mov    eax,esi
64009f5a:	mov    ecx,DWORD PTR [esp+0x14]
64009f5e:	mov    DWORD PTR fs:0x0,ecx
64009f65:	pop    ecx
64009f66:	pop    edi
64009f67:	pop    esi
64009f68:	pop    ebx
64009f69:	add    esp,0x10
64009f6c:	ret    0x4
64009f6f:	int3   
64009f70:	push   0xffffffff
64009f72:	push   0x64023ae8
64009f77:	mov    eax,fs:0x0
64009f7d:	push   eax
64009f7e:	push   ecx
64009f7f:	push   ebx
64009f80:	push   esi
64009f81:	mov    eax,ds:0x6402f09c
64009f86:	xor    eax,esp
64009f88:	push   eax
64009f89:	lea    eax,[esp+0x10]
64009f8d:	mov    fs:0x0,eax
64009f93:	mov    esi,ecx
64009f95:	mov    DWORD PTR [esp+0xc],esi
64009f99:	mov    eax,DWORD PTR [esp+0x20]
64009f9d:	xor    ebx,ebx
64009f9f:	push   0xffffffff
64009fa1:	push   ebx
64009fa2:	mov    DWORD PTR [esi+0x18],0xf
64009fa9:	mov    DWORD PTR [esi+0x14],ebx
64009fac:	push   eax
64009fad:	mov    BYTE PTR [esi+0x4],bl
64009fb0:	call   0x640017a0
64009fb5:	mov    edx,DWORD PTR [esp+0x24]
64009fb9:	push   0xffffffff
64009fbb:	lea    ecx,[esi+0x1c]
64009fbe:	mov    DWORD PTR [esp+0x1c],ebx
64009fc2:	push   ebx
64009fc3:	mov    DWORD PTR [ecx+0x18],0xf
64009fca:	mov    DWORD PTR [ecx+0x14],ebx
64009fcd:	push   edx
64009fce:	mov    BYTE PTR [ecx+0x4],bl
64009fd1:	call   0x640017a0
64009fd6:	mov    eax,esi
64009fd8:	mov    ecx,DWORD PTR [esp+0x10]
64009fdc:	mov    DWORD PTR fs:0x0,ecx
64009fe3:	pop    ecx
64009fe4:	pop    esi
64009fe5:	pop    ebx
64009fe6:	add    esp,0x10
64009fe9:	ret    0x8
64009fec:	int3   
64009fed:	int3   
64009fee:	int3   
64009fef:	int3   
64009ff0:	push   0xffffffff
64009ff2:	push   0x64023e58
64009ff7:	mov    eax,fs:0x0
64009ffd:	push   eax
64009ffe:	push   ecx
64009fff:	push   esi
6400a000:	push   edi
6400a001:	mov    eax,ds:0x6402f09c
6400a006:	xor    eax,esp
6400a008:	push   eax
6400a009:	lea    eax,[esp+0x10]
6400a00d:	mov    fs:0x0,eax
6400a013:	mov    esi,ecx
6400a015:	mov    DWORD PTR [esp+0xc],esi
6400a019:	mov    eax,DWORD PTR [esp+0x20]
6400a01d:	xor    edi,edi
6400a01f:	push   0xffffffff
6400a021:	push   edi
6400a022:	mov    DWORD PTR [esi+0x18],0x7
6400a029:	mov    DWORD PTR [esi+0x14],edi
6400a02c:	push   eax
6400a02d:	mov    WORD PTR [esi+0x4],di
6400a031:	call   0x64008540
6400a036:	mov    edx,DWORD PTR [esp+0x24]
6400a03a:	push   0xffffffff
6400a03c:	lea    ecx,[esi+0x1c]
6400a03f:	mov    DWORD PTR [esp+0x1c],edi
6400a043:	push   edi
6400a044:	mov    DWORD PTR [ecx+0x18],0x7
6400a04b:	mov    DWORD PTR [ecx+0x14],edi
6400a04e:	push   edx
6400a04f:	mov    WORD PTR [ecx+0x4],di
6400a053:	call   0x64008540
6400a058:	mov    eax,esi
6400a05a:	mov    ecx,DWORD PTR [esp+0x10]
6400a05e:	mov    DWORD PTR fs:0x0,ecx
6400a065:	pop    ecx
6400a066:	pop    edi
6400a067:	pop    esi
6400a068:	add    esp,0x10
6400a06b:	ret    0x8
6400a06e:	int3   
6400a06f:	int3   
6400a070:	push   ebx
6400a071:	push   ebp
6400a072:	push   esi
6400a073:	push   edi
6400a074:	mov    edi,DWORD PTR [esp+0x14]
6400a078:	mov    esi,ecx
6400a07a:	cmp    DWORD PTR [esi+0x14],edi
6400a07d:	jae    0x6400a084
6400a07f:	call   0x640136ce
6400a084:	mov    eax,DWORD PTR [esi+0x14]
6400a087:	mov    ebx,DWORD PTR [esp+0x18]
6400a08b:	sub    eax,edi
6400a08d:	cmp    eax,ebx
6400a08f:	jae    0x6400a093
6400a091:	mov    ebx,eax
6400a093:	mov    ebp,DWORD PTR [esp+0x20]
6400a097:	cmp    ebx,ebp
6400a099:	mov    edx,ebx
6400a09b:	jb     0x6400a09f
6400a09d:	mov    edx,ebp
6400a09f:	cmp    DWORD PTR [esi+0x18],0x8
6400a0a3:	jb     0x6400a0aa
6400a0a5:	mov    eax,DWORD PTR [esi+0x4]
6400a0a8:	jmp    0x6400a0ad
6400a0aa:	lea    eax,[esi+0x4]
6400a0ad:	test   edx,edx
6400a0af:	mov    ecx,DWORD PTR [esp+0x1c]
6400a0b3:	lea    eax,[eax+edi*2]
6400a0b6:	jbe    0x6400a0dd
6400a0b8:	mov    si,WORD PTR [eax]
6400a0bb:	cmp    si,WORD PTR [ecx]
6400a0be:	jne    0x6400a0cd
6400a0c0:	add    eax,0x2
6400a0c3:	add    ecx,0x2
6400a0c6:	sub    edx,0x1
6400a0c9:	jne    0x6400a0b8
6400a0cb:	jmp    0x6400a0dd
6400a0cd:	movzx  eax,WORD PTR [eax]
6400a0d0:	cmp    ax,WORD PTR [ecx]
6400a0d3:	sbb    eax,eax
6400a0d5:	and    eax,0xfffffffe
6400a0d8:	add    eax,0x1
6400a0db:	jne    0x6400a0f2
6400a0dd:	cmp    ebx,ebp
6400a0df:	jae    0x6400a0eb
6400a0e1:	pop    edi
6400a0e2:	pop    esi
6400a0e3:	pop    ebp
6400a0e4:	or     eax,0xffffffff
6400a0e7:	pop    ebx
6400a0e8:	ret    0x10
6400a0eb:	xor    eax,eax
6400a0ed:	cmp    ebx,ebp
6400a0ef:	setne  al
6400a0f2:	pop    edi
6400a0f3:	pop    esi
6400a0f4:	pop    ebp
6400a0f5:	pop    ebx
6400a0f6:	ret    0x10
6400a0f9:	int3   
6400a0fa:	int3   
6400a0fb:	int3   
6400a0fc:	int3   
6400a0fd:	int3   
6400a0fe:	int3   
6400a0ff:	int3   
6400a100:	mov    ecx,DWORD PTR [esp+0x4]
6400a104:	push   ebx
6400a105:	push   ebp
6400a106:	mov    ebp,DWORD PTR [esp+0x10]
6400a10a:	push   esi
6400a10b:	mov    esi,eax
6400a10d:	mov    edx,DWORD PTR [esi+0x18]
6400a110:	cmp    edx,0x10
6400a113:	push   edi
6400a114:	lea    ebx,[esi+0x4]
6400a117:	jb     0x6400a11d
6400a119:	mov    eax,DWORD PTR [ebx]
6400a11b:	jmp    0x6400a11f
6400a11d:	mov    eax,ebx
6400a11f:	cmp    ecx,eax
6400a121:	jb     0x6400a150
6400a123:	cmp    edx,0x10
6400a126:	jb     0x6400a12c
6400a128:	mov    eax,DWORD PTR [ebx]
6400a12a:	jmp    0x6400a12e
6400a12c:	mov    eax,ebx
6400a12e:	mov    edi,DWORD PTR [esi+0x14]
6400a131:	add    edi,eax
6400a133:	cmp    edi,ecx
6400a135:	jbe    0x6400a150
6400a137:	cmp    edx,0x10
6400a13a:	jb     0x6400a13e
6400a13c:	mov    ebx,DWORD PTR [ebx]
6400a13e:	sub    ecx,ebx
6400a140:	push   ecx
6400a141:	push   esi
6400a142:	mov    eax,ebp
6400a144:	call   0x640019d0
6400a149:	pop    edi
6400a14a:	pop    esi
6400a14b:	pop    ebp
6400a14c:	pop    ebx
6400a14d:	ret    0x8
6400a150:	mov    eax,DWORD PTR [esi+0x14]
6400a153:	or     ecx,0xffffffff
6400a156:	sub    ecx,eax
6400a158:	cmp    ecx,ebp
6400a15a:	jbe    0x6400a163
6400a15c:	lea    edx,[eax+ebp*1]
6400a15f:	cmp    edx,eax
6400a161:	jae    0x6400a168
6400a163:	call   0x6401368f
6400a168:	test   ebp,ebp
6400a16a:	jbe    0x6400a1e0
6400a16c:	mov    edi,DWORD PTR [esi+0x14]
6400a16f:	add    edi,ebp
6400a171:	cmp    edi,0xfffffffe
6400a174:	jbe    0x6400a17b
6400a176:	call   0x6401368f
6400a17b:	mov    eax,DWORD PTR [esi+0x18]
6400a17e:	cmp    eax,edi
6400a180:	jae    0x6400a19e
6400a182:	mov    eax,DWORD PTR [esi+0x14]
6400a185:	push   eax
6400a186:	push   edi
6400a187:	mov    ecx,esi
6400a189:	call   0x64001b60
6400a18e:	test   edi,edi
6400a190:	jbe    0x6400a1e0
6400a192:	mov    eax,DWORD PTR [esi+0x18]
6400a195:	cmp    eax,0x10
6400a198:	jb     0x6400a1b8
6400a19a:	mov    edx,DWORD PTR [ebx]
6400a19c:	jmp    0x6400a1ba
6400a19e:	test   edi,edi
6400a1a0:	jne    0x6400a190
6400a1a2:	cmp    eax,0x10
6400a1a5:	mov    DWORD PTR [esi+0x14],edi
6400a1a8:	jb     0x6400a1ac
6400a1aa:	mov    ebx,DWORD PTR [ebx]
6400a1ac:	pop    edi
6400a1ad:	mov    eax,esi
6400a1af:	pop    esi
6400a1b0:	pop    ebp
6400a1b1:	mov    BYTE PTR [ebx],0x0
6400a1b4:	pop    ebx
6400a1b5:	ret    0x8
6400a1b8:	mov    edx,ebx
6400a1ba:	mov    ecx,DWORD PTR [esi+0x14]
6400a1bd:	push   ebp
6400a1be:	mov    ebp,DWORD PTR [esp+0x18]
6400a1c2:	sub    eax,ecx
6400a1c4:	push   ebp
6400a1c5:	push   eax
6400a1c6:	add    ecx,edx
6400a1c8:	push   ecx
6400a1c9:	call   0x640138c8
6400a1ce:	add    esp,0x10
6400a1d1:	cmp    DWORD PTR [esi+0x18],0x10
6400a1d5:	mov    DWORD PTR [esi+0x14],edi
6400a1d8:	jb     0x6400a1dc
6400a1da:	mov    ebx,DWORD PTR [ebx]
6400a1dc:	mov    BYTE PTR [ebx+edi*1],0x0
6400a1e0:	pop    edi
6400a1e1:	mov    eax,esi
6400a1e3:	pop    esi
6400a1e4:	pop    ebp
6400a1e5:	pop    ebx
6400a1e6:	ret    0x8
6400a1e9:	int3   
6400a1ea:	int3   
6400a1eb:	int3   
6400a1ec:	int3   
6400a1ed:	int3   
6400a1ee:	int3   
6400a1ef:	int3   
6400a1f0:	push   ebp
6400a1f1:	mov    ebp,DWORD PTR [esp+0x14]
6400a1f5:	push   esi
6400a1f6:	mov    esi,DWORD PTR [esp+0x10]
6400a1fa:	push   edi
6400a1fb:	mov    edi,DWORD PTR [esp+0x10]
6400a1ff:	nop
6400a200:	test   edi,edi
6400a202:	je     0x6400a20a
6400a204:	cmp    edi,DWORD PTR [esp+0x18]
6400a208:	je     0x6400a20f
6400a20a:	call   0x64013ac8
6400a20f:	cmp    esi,ebp
6400a211:	je     0x6400a26b
6400a213:	add    DWORD PTR [ebx],0x1
6400a216:	test   edi,edi
6400a218:	jne    0x6400a21f
6400a21a:	call   0x64013ac8
6400a21f:	cmp    BYTE PTR [esi+0x29],0x0
6400a223:	je     0x6400a22c
6400a225:	call   0x64013ac8
6400a22a:	jmp    0x6400a200
6400a22c:	mov    ecx,DWORD PTR [esi+0x8]
6400a22f:	cmp    BYTE PTR [ecx+0x29],0x0
6400a233:	jne    0x6400a24e
6400a235:	mov    eax,DWORD PTR [ecx]
6400a237:	cmp    BYTE PTR [eax+0x29],0x0
6400a23b:	jne    0x6400a24a
6400a23d:	lea    ecx,[ecx+0x0]
6400a240:	mov    ecx,eax
6400a242:	mov    eax,DWORD PTR [ecx]
6400a244:	cmp    BYTE PTR [eax+0x29],0x0
6400a248:	je     0x6400a240
6400a24a:	mov    esi,ecx
6400a24c:	jmp    0x6400a200
6400a24e:	mov    eax,DWORD PTR [esi+0x4]
6400a251:	cmp    BYTE PTR [eax+0x29],0x0
6400a255:	jne    0x6400a267
6400a257:	cmp    esi,DWORD PTR [eax+0x8]
6400a25a:	jne    0x6400a267
6400a25c:	mov    esi,eax
6400a25e:	mov    eax,DWORD PTR [eax+0x4]
6400a261:	cmp    BYTE PTR [eax+0x29],0x0
6400a265:	je     0x6400a257
6400a267:	mov    esi,eax
6400a269:	jmp    0x6400a200
6400a26b:	pop    edi
6400a26c:	pop    esi
6400a26d:	pop    ebp
6400a26e:	ret    
6400a26f:	int3   
6400a270:	push   esi
6400a271:	mov    esi,ecx
6400a273:	call   0x6400dba0
6400a278:	call   eax
6400a27a:	mov    DWORD PTR [esi],eax
6400a27c:	mov    eax,esi
6400a27e:	pop    esi
6400a27f:	ret    
6400a280:	mov    eax,DWORD PTR [ecx]
6400a282:	push   eax
6400a283:	call   0x6400dc80
6400a288:	call   eax
6400a28a:	ret    
6400a28b:	int3   
6400a28c:	int3   
6400a28d:	int3   
6400a28e:	int3   
6400a28f:	int3   
6400a290:	push   ebp
6400a291:	mov    ebp,esp
6400a293:	and    esp,0xfffffff8
6400a296:	push   0xffffffff
6400a298:	push   0x64024bf0
6400a29d:	mov    eax,fs:0x0
6400a2a3:	push   eax
6400a2a4:	sub    esp,0x68
6400a2a7:	mov    eax,ds:0x6402f09c
6400a2ac:	xor    eax,esp
6400a2ae:	mov    DWORD PTR [esp+0x60],eax
6400a2b2:	push   ebx
6400a2b3:	push   esi
6400a2b4:	push   edi
6400a2b5:	mov    eax,ds:0x6402f09c
6400a2ba:	xor    eax,esp
6400a2bc:	push   eax
6400a2bd:	lea    eax,[esp+0x78]
6400a2c1:	mov    fs:0x0,eax
6400a2c7:	mov    eax,DWORD PTR [ebp+0x14]
6400a2ca:	mov    ebx,DWORD PTR [ebp+0xc]
6400a2cd:	mov    DWORD PTR [esp+0x1c],ecx
6400a2d1:	mov    DWORD PTR [esp+0x18],eax
6400a2d5:	call   DWORD PTR ds:0x6402605c
6400a2db:	lea    ecx,[esp+0x44]
6400a2df:	push   ecx
6400a2e0:	mov    DWORD PTR [esp+0x24],eax
6400a2e4:	call   0x6400fea0
6400a2e9:	call   eax
6400a2eb:	xor    edi,edi
6400a2ed:	mov    DWORD PTR [esp+0x6c],0xf
6400a2f5:	mov    DWORD PTR [esp+0x68],edi
6400a2f9:	mov    BYTE PTR [esp+0x58],0x0
6400a2fe:	mov    ecx,DWORD PTR [ebp+0x10]
6400a301:	mov    eax,0x8d3dcb09
6400a306:	mul    ecx
6400a308:	mov    esi,edx
6400a30a:	shr    esi,0x8
6400a30d:	lea    eax,[esi+0x1]
6400a310:	cmp    eax,edi
6400a312:	mov    DWORD PTR [esp+0x80],edi
6400a319:	mov    BYTE PTR [esp+0x13],0x1
6400a31e:	je     0x6400a3e4
6400a324:	mov    edx,0x1d0
6400a329:	sub    edx,ebx
6400a32b:	mov    DWORD PTR [esp+0x14],ebx
6400a32f:	mov    DWORD PTR [esp+0x24],edx
6400a333:	mov    eax,DWORD PTR [esp+0x14]
6400a337:	add    eax,edx
6400a339:	cmp    eax,ecx
6400a33b:	jb     0x6400a436
6400a341:	mov    eax,esi
6400a343:	imul   eax,eax,0x1d0
6400a349:	mov    ebx,ecx
6400a34b:	sub    ebx,eax
6400a34d:	test   ebx,ebx
6400a34f:	je     0x6400a3cc
6400a351:	or     ecx,0xffffffff
6400a354:	cmp    DWORD PTR [ebp+0x18],ecx
6400a357:	je     0x6400a370
6400a359:	call   DWORD PTR ds:0x6402605c
6400a35f:	sub    eax,DWORD PTR [esp+0x20]
6400a363:	mov    ecx,DWORD PTR [ebp+0x18]
6400a366:	cmp    eax,ecx
6400a368:	ja     0x6400a440
6400a36e:	sub    ecx,eax
6400a370:	mov    edx,DWORD PTR [esp+0x44]
6400a374:	sub    esp,0x10
6400a377:	mov    eax,esp
6400a379:	mov    DWORD PTR [eax],edx
6400a37b:	mov    edx,DWORD PTR [esp+0x58]
6400a37f:	mov    DWORD PTR [eax+0x4],edx
6400a382:	mov    edx,DWORD PTR [esp+0x5c]
6400a386:	mov    DWORD PTR [eax+0x8],edx
6400a389:	mov    edx,DWORD PTR [esp+0x60]
6400a38d:	mov    DWORD PTR [eax+0xc],edx
6400a390:	mov    edx,DWORD PTR [esp+0x24]
6400a394:	test   edi,edi
6400a396:	setne  al
6400a399:	cmp    edi,esi
6400a39b:	push   eax
6400a39c:	mov    eax,DWORD PTR [ebp+0x8]
6400a39f:	push   ecx
6400a3a0:	setb   cl
6400a3a3:	push   ecx
6400a3a4:	mov    ecx,DWORD PTR [esp+0x38]
6400a3a8:	push   edi
6400a3a9:	push   ebx
6400a3aa:	push   edx
6400a3ab:	push   eax
6400a3ac:	push   ecx
6400a3ad:	lea    edx,[esp+0x43]
6400a3b1:	lea    ecx,[esp+0x84]
6400a3b8:	call   0x6400a5d0
6400a3bd:	test   al,al
6400a3bf:	je     0x6400a45b
6400a3c5:	mov    ecx,DWORD PTR [ebp+0x10]
6400a3c8:	mov    edx,DWORD PTR [esp+0x24]
6400a3cc:	add    DWORD PTR [esp+0x14],0x1d0
6400a3d4:	add    edi,0x1
6400a3d7:	lea    eax,[esi+0x1]
6400a3da:	cmp    edi,eax
6400a3dc:	jne    0x6400a333
6400a3e2:	xor    edi,edi
6400a3e4:	mov    esi,DWORD PTR [esp+0x18]
6400a3e8:	push   edi
6400a3e9:	lea    ecx,[esp+0x58]
6400a3ed:	push   ecx
6400a3ee:	or     eax,0xffffffff
6400a3f1:	call   0x640019d0
6400a3f6:	cmp    BYTE PTR [esp+0x13],0x0
6400a3fb:	je     0x6400a58b
6400a401:	mov    DWORD PTR [esp+0x14],0xfffffffe
6400a409:	lea    esp,[esp+0x0]
6400a410:	mov    esi,0xf
6400a415:	mov    DWORD PTR [esp+0x40],esi
6400a419:	mov    DWORD PTR [esp+0x3c],edi
6400a41d:	mov    BYTE PTR [esp+0x2c],0x0
6400a422:	mov    ebx,DWORD PTR [ebp+0x18]
6400a425:	cmp    ebx,0xffffffff
6400a428:	mov    BYTE PTR [esp+0x80],0x1
6400a430:	jne    0x6400a476
6400a432:	or     ecx,ebx
6400a434:	jmp    0x6400a48c
6400a436:	mov    ebx,0x1d0
6400a43b:	jmp    0x6400a351
6400a440:	cmp    DWORD PTR [esp+0x6c],0x10
6400a445:	jb     0x6400a454
6400a447:	mov    edx,DWORD PTR [esp+0x58]
6400a44b:	push   edx
6400a44c:	call   0x64013712
6400a451:	add    esp,0x4
6400a454:	xor    al,al
6400a456:	jmp    0x6400a5a1
6400a45b:	cmp    DWORD PTR [esp+0x6c],0x10
6400a460:	jb     0x6400a454
6400a462:	mov    eax,DWORD PTR [esp+0x58]
6400a466:	push   eax
6400a467:	call   0x64013712
6400a46c:	add    esp,0x4
6400a46f:	xor    al,al
6400a471:	jmp    0x6400a5a1
6400a476:	call   DWORD PTR ds:0x6402605c
6400a47c:	sub    eax,DWORD PTR [esp+0x20]
6400a480:	cmp    eax,ebx
6400a482:	ja     0x6400a51b
6400a488:	mov    ecx,ebx
6400a48a:	sub    ecx,eax
6400a48c:	mov    edx,DWORD PTR [esp+0x44]
6400a490:	sub    esp,0x10
6400a493:	mov    eax,esp
6400a495:	mov    DWORD PTR [eax],edx
6400a497:	mov    edx,DWORD PTR [esp+0x58]
6400a49b:	mov    DWORD PTR [eax+0x4],edx
6400a49e:	mov    edx,DWORD PTR [esp+0x5c]
6400a4a2:	push   0x1
6400a4a4:	push   ecx
6400a4a5:	mov    ecx,DWORD PTR [ebp+0x8]
6400a4a8:	mov    DWORD PTR [eax+0x8],edx
6400a4ab:	mov    edx,DWORD PTR [esp+0x68]
6400a4af:	push   edi
6400a4b0:	mov    DWORD PTR [eax+0xc],edx
6400a4b3:	mov    eax,DWORD PTR [esp+0x30]
6400a4b7:	mov    edx,DWORD PTR [esp+0x38]
6400a4bb:	push   eax
6400a4bc:	push   edi
6400a4bd:	push   edi
6400a4be:	push   ecx
6400a4bf:	push   edx
6400a4c0:	lea    edx,[esp+0x43]
6400a4c4:	lea    ecx,[esp+0x58]
6400a4c8:	call   0x6400a5d0
6400a4cd:	test   al,al
6400a4cf:	je     0x6400a549
6400a4d1:	cmp    DWORD PTR [esp+0x3c],edi
6400a4d5:	je     0x6400a577
6400a4db:	mov    esi,DWORD PTR [esp+0x18]
6400a4df:	push   edi
6400a4e0:	lea    eax,[esp+0x2c]
6400a4e4:	push   eax
6400a4e5:	or     eax,0xffffffff
6400a4e8:	call   0x640019d0
6400a4ed:	mov    BYTE PTR [esp+0x80],0x0
6400a4f5:	cmp    DWORD PTR [esp+0x40],0x10
6400a4fa:	jb     0x6400a509
6400a4fc:	mov    ecx,DWORD PTR [esp+0x2c]
6400a500:	push   ecx
6400a501:	call   0x64013712
6400a506:	add    esp,0x4
6400a509:	sub    DWORD PTR [esp+0x14],0x1
6400a50e:	cmp    BYTE PTR [esp+0x13],0x0
6400a513:	jne    0x6400a410
6400a519:	jmp    0x6400a58b
6400a51b:	mov    ebx,0x10
6400a520:	cmp    DWORD PTR [esp+0x40],ebx
6400a524:	jb     0x6400a533
6400a526:	mov    edx,DWORD PTR [esp+0x2c]
6400a52a:	push   edx
6400a52b:	call   0x64013712
6400a530:	add    esp,0x4
6400a533:	cmp    DWORD PTR [esp+0x6c],ebx
6400a537:	mov    DWORD PTR [esp+0x40],esi
6400a53b:	mov    DWORD PTR [esp+0x3c],edi
6400a53f:	mov    BYTE PTR [esp+0x2c],0x0
6400a544:	jmp    0x6400a460
6400a549:	mov    ebx,0x10
6400a54e:	cmp    DWORD PTR [esp+0x40],ebx
6400a552:	jb     0x6400a561
6400a554:	mov    ecx,DWORD PTR [esp+0x2c]
6400a558:	push   ecx
6400a559:	call   0x64013712
6400a55e:	add    esp,0x4
6400a561:	cmp    DWORD PTR [esp+0x6c],ebx
6400a565:	mov    DWORD PTR [esp+0x40],esi
6400a569:	mov    DWORD PTR [esp+0x3c],edi
6400a56d:	mov    BYTE PTR [esp+0x2c],0x0
6400a572:	jmp    0x6400a445
6400a577:	cmp    DWORD PTR [esp+0x40],0x10
6400a57c:	jb     0x6400a58b
6400a57e:	mov    eax,DWORD PTR [esp+0x2c]
6400a582:	push   eax
6400a583:	call   0x64013712
6400a588:	add    esp,0x4
6400a58b:	cmp    DWORD PTR [esp+0x6c],0x10
6400a590:	jb     0x6400a59f
6400a592:	mov    ecx,DWORD PTR [esp+0x58]
6400a596:	push   ecx
6400a597:	call   0x64013712
6400a59c:	add    esp,0x4
6400a59f:	mov    al,0x1
6400a5a1:	mov    ecx,DWORD PTR [esp+0x78]
6400a5a5:	mov    DWORD PTR fs:0x0,ecx
6400a5ac:	pop    ecx
6400a5ad:	pop    edi
6400a5ae:	pop    esi
6400a5af:	pop    ebx
6400a5b0:	mov    ecx,DWORD PTR [esp+0x60]
6400a5b4:	xor    ecx,esp
6400a5b6:	call   0x64013f6c
6400a5bb:	mov    esp,ebp
6400a5bd:	pop    ebp
6400a5be:	ret    0x14
6400a5c1:	int3   
6400a5c2:	int3   
6400a5c3:	int3   
6400a5c4:	int3   
6400a5c5:	int3   
6400a5c6:	int3   
6400a5c7:	int3   
6400a5c8:	int3   
6400a5c9:	int3   
6400a5ca:	int3   
6400a5cb:	int3   
6400a5cc:	int3   
6400a5cd:	int3   
6400a5ce:	int3   
6400a5cf:	int3   
6400a5d0:	push   0xffffffff
6400a5d2:	push   0x64024bac
6400a5d7:	mov    eax,fs:0x0
6400a5dd:	push   eax
6400a5de:	mov    eax,0x10074
6400a5e3:	call   0x64019860
6400a5e8:	mov    eax,ds:0x6402f09c
6400a5ed:	xor    eax,esp
6400a5ef:	mov    DWORD PTR [esp+0x10070],eax
6400a5f6:	push   ebx
6400a5f7:	push   ebp
6400a5f8:	push   esi
6400a5f9:	push   edi
6400a5fa:	mov    eax,ds:0x6402f09c
6400a5ff:	xor    eax,esp
6400a601:	push   eax
6400a602:	lea    eax,[esp+0x10088]
6400a609:	mov    fs:0x0,eax
6400a60f:	mov    eax,DWORD PTR [esp+0x10098]
6400a616:	mov    esi,DWORD PTR [esp+0x100a0]
6400a61d:	mov    ebp,DWORD PTR ds:0x640261c0
6400a623:	mov    DWORD PTR [esp+0x18],eax
6400a627:	mov    eax,DWORD PTR [esp+0x100b8]
6400a62e:	mov    DWORD PTR [esp+0x2c],ecx
6400a632:	mov    ecx,DWORD PTR [esp+0x100bc]
6400a639:	mov    DWORD PTR [esp+0x28],edx
6400a63d:	mov    edx,DWORD PTR [esp+0x100c0]
6400a644:	mov    DWORD PTR [esp+0x54],eax
6400a648:	mov    eax,DWORD PTR [esp+0x100c4]
6400a64f:	xor    ebx,ebx
6400a651:	mov    DWORD PTR [esp+0x1c],esi
6400a655:	mov    DWORD PTR [esp+0x58],ecx
6400a659:	mov    DWORD PTR [esp+0x5c],edx
6400a65d:	mov    DWORD PTR [esp+0x60],eax
6400a661:	mov    BYTE PTR [esp+0x17],bl
6400a665:	xor    edi,edi
6400a667:	jmp    0x6400a670
6400a669:	lea    esp,[esp+0x0]
6400a670:	mov    DWORD PTR [esp+0x50],0xf
6400a678:	mov    DWORD PTR [esp+0x4c],ebx
6400a67c:	mov    BYTE PTR [esp+0x3c],bl
6400a680:	mov    DWORD PTR [esp+0x10090],ebx
6400a687:	mov    edx,DWORD PTR [esp+0x58]
6400a68b:	mov    eax,DWORD PTR [esp+0x5c]
6400a68f:	mov    ecx,DWORD PTR [esp+0x54]
6400a693:	mov    DWORD PTR [esp+0x70],eax
6400a697:	mov    eax,DWORD PTR [esp+0x100a8]
6400a69e:	mov    DWORD PTR [esp+0x68],ecx
6400a6a2:	mov    ecx,DWORD PTR [esp+0x60]
6400a6a6:	mov    DWORD PTR [esp+0x6c],edx
6400a6aa:	mov    dl,BYTE PTR [esp+0x100ac]
6400a6b1:	push   eax
6400a6b2:	mov    DWORD PTR [esp+0x78],ecx
6400a6b6:	mov    DWORD PTR [esp+0x7c],eax
6400a6ba:	mov    DWORD PTR [esp+0x80],edi
6400a6c1:	mov    BYTE PTR [esp+0x84],dl
6400a6c8:	call   ebp
6400a6ca:	mov    DWORD PTR [esp+0x78],eax
6400a6ce:	mov    eax,DWORD PTR [esp+0x7c]
6400a6d2:	push   eax
6400a6d3:	call   ebp
6400a6d5:	push   0x19
6400a6d7:	lea    ecx,[esp+0x6c]
6400a6db:	mov    DWORD PTR [esp+0x80],eax
6400a6e2:	push   ecx
6400a6e3:	lea    eax,[esp+0x40]
6400a6e7:	call   0x6400a100
6400a6ec:	cmp    esi,ebx
6400a6ee:	je     0x6400a702
6400a6f0:	mov    edx,DWORD PTR [esp+0x100a4]
6400a6f7:	push   edx
6400a6f8:	push   esi
6400a6f9:	lea    eax,[esp+0x40]
6400a6fd:	call   0x6400a100
6400a702:	cmp    DWORD PTR [esp+0x50],0x10
6400a707:	mov    eax,DWORD PTR [esp+0x3c]
6400a70b:	jae    0x6400a711
6400a70d:	lea    eax,[esp+0x3c]
6400a711:	mov    ecx,DWORD PTR [esp+0x4c]
6400a715:	push   ecx
6400a716:	push   eax
6400a717:	lea    ecx,[esp+0x2c]
6400a71b:	lea    ebx,[esp+0x38]
6400a71f:	call   0x6400d890
6400a724:	mov    edx,DWORD PTR [eax]
6400a726:	mov    esi,edx
6400a728:	mov    DWORD PTR [eax],0x0
6400a72e:	mov    DWORD PTR [esp+0x28],esi
6400a732:	mov    BYTE PTR [esp+0x10098],0x1
6400a73a:	mov    eax,DWORD PTR [esp+0x38]
6400a73e:	push   eax
6400a73f:	call   0x64013712
6400a744:	add    esp,0xc
6400a747:	lea    ecx,[esp+0x34]
6400a74b:	push   0x0
6400a74d:	push   ecx
6400a74e:	mov    DWORD PTR [esp+0x3c],0x0
6400a756:	call   0x6400ed20
6400a75b:	call   eax
6400a75d:	test   eax,eax
6400a75f:	je     0x6400a7ee
6400a765:	mov    eax,DWORD PTR [esp+0x100b0]
6400a76c:	cmp    eax,0x1388
6400a771:	jb     0x6400a778
6400a773:	mov    eax,0x1388
6400a778:	mov    ecx,DWORD PTR [esp+0x1009c]
6400a77f:	push   eax
6400a780:	mov    eax,DWORD PTR [esp+0x28]
6400a784:	push   0xffff
6400a789:	lea    edx,[esp+0x8c]
6400a790:	push   edx
6400a791:	mov    edx,DWORD PTR [esp+0x24]
6400a795:	push   0x0
6400a797:	push   eax
6400a798:	mov    eax,DWORD PTR [edx]
6400a79a:	push   esi
6400a79b:	push   ecx
6400a79c:	push   eax
6400a79d:	call   0x6400dac0
6400a7a2:	call   eax
6400a7a4:	mov    ebx,eax
6400a7a6:	test   ebx,ebx
6400a7a8:	jne    0x6400a7f1
6400a7aa:	push   esi
6400a7ab:	call   0x64013712
6400a7b0:	add    esp,0x4
6400a7b3:	cmp    BYTE PTR [esp+0x100b4],bl
6400a7ba:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a7c5:	je     0x6400a813
6400a7c7:	cmp    DWORD PTR [esp+0x50],0x10
6400a7cc:	jb     0x6400a7db
6400a7ce:	mov    ecx,DWORD PTR [esp+0x3c]
6400a7d2:	push   ecx
6400a7d3:	call   0x64013712
6400a7d8:	add    esp,0x4
6400a7db:	add    edi,0x1
6400a7de:	cmp    edi,0x5
6400a7e1:	je     0x6400a827
6400a7e3:	mov    esi,DWORD PTR [esp+0x1c]
6400a7e7:	xor    ebx,ebx
6400a7e9:	jmp    0x6400a670
6400a7ee:	or     ebx,0xffffffff
6400a7f1:	push   esi
6400a7f2:	call   0x64013712
6400a7f7:	add    esp,0x4
6400a7fa:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a805:	cmp    DWORD PTR [esp+0x50],0x10
6400a80a:	jb     0x6400a827
6400a80c:	mov    edx,DWORD PTR [esp+0x3c]
6400a810:	push   edx
6400a811:	jmp    0x6400a81f
6400a813:	cmp    DWORD PTR [esp+0x50],0x10
6400a818:	jb     0x6400a827
6400a81a:	mov    eax,DWORD PTR [esp+0x3c]
6400a81e:	push   eax
6400a81f:	call   0x64013712
6400a824:	add    esp,0x4
6400a827:	test   ebx,ebx
6400a829:	je     0x6400a9cf
6400a82f:	mov    ax,WORD PTR [esp+0x90]
6400a837:	test   ax,ax
6400a83a:	je     0x6400a9c3
6400a840:	lea    ecx,[esp+0x24]
6400a844:	push   ecx
6400a845:	lea    edx,[esp+0xa4]
6400a84c:	movzx  ebx,ax
6400a84f:	push   edx
6400a850:	lea    edi,[esp+0x24]
6400a854:	call   0x6400d9c0
6400a859:	mov    ecx,DWORD PTR [eax]
6400a85b:	mov    ebp,ecx
6400a85d:	xor    ebx,ebx
6400a85f:	mov    DWORD PTR [eax],ebx
6400a861:	mov    DWORD PTR [esp+0x28],ebp
6400a865:	mov    DWORD PTR [esp+0x10098],0x2
6400a870:	mov    edx,DWORD PTR [esp+0x24]
6400a874:	push   edx
6400a875:	call   0x64013712
6400a87a:	add    esp,0xc
6400a87d:	cmp    ebp,ebx
6400a87f:	je     0x6400a9b2
6400a885:	mov    eax,DWORD PTR [ebp+0x10]
6400a888:	push   eax
6400a889:	call   DWORD PTR ds:0x640261c4
6400a88f:	cmp    BYTE PTR [esp+0x100ac],bl
6400a896:	mov    DWORD PTR [esp+0x18],eax
6400a89a:	mov    DWORD PTR [ebp+0x10],eax
6400a89d:	jne    0x6400a8af
6400a89f:	cmp    DWORD PTR [esp+0x100a8],ebx
6400a8a6:	jle    0x6400a8af
6400a8a8:	mov    DWORD PTR [esp+0x100a8],ebx
6400a8af:	mov    ecx,0x10
6400a8b4:	lea    edx,[esp+0x54]
6400a8b8:	mov    esi,ebp
6400a8ba:	lea    ebx,[ebx+0x0]
6400a8c0:	mov    eax,DWORD PTR [esi]
6400a8c2:	cmp    eax,DWORD PTR [edx]
6400a8c4:	jne    0x6400a8d8
6400a8c6:	sub    ecx,0x4
6400a8c9:	add    edx,0x4
6400a8cc:	add    esi,0x4
6400a8cf:	cmp    ecx,0x4
6400a8d2:	jae    0x6400a8c0
6400a8d4:	cmp    ecx,ebx
6400a8d6:	je     0x6400a935
6400a8d8:	movzx  edi,BYTE PTR [esi]
6400a8db:	movzx  eax,BYTE PTR [edx]
6400a8de:	sub    edi,eax
6400a8e0:	jne    0x6400a927
6400a8e2:	sub    ecx,0x1
6400a8e5:	add    edx,0x1
6400a8e8:	add    esi,0x1
6400a8eb:	cmp    ecx,ebx
6400a8ed:	je     0x6400a935
6400a8ef:	movzx  edi,BYTE PTR [esi]
6400a8f2:	movzx  eax,BYTE PTR [edx]
6400a8f5:	sub    edi,eax
6400a8f7:	jne    0x6400a927
6400a8f9:	sub    ecx,0x1
6400a8fc:	add    edx,0x1
6400a8ff:	add    esi,0x1
6400a902:	cmp    ecx,ebx
6400a904:	je     0x6400a935
6400a906:	movzx  edi,BYTE PTR [esi]
6400a909:	movzx  eax,BYTE PTR [edx]
6400a90c:	sub    edi,eax
6400a90e:	jne    0x6400a927
6400a910:	sub    ecx,0x1
6400a913:	add    edx,0x1
6400a916:	add    esi,0x1
6400a919:	cmp    ecx,ebx
6400a91b:	je     0x6400a935
6400a91d:	movzx  edi,BYTE PTR [esi]
6400a920:	movzx  ecx,BYTE PTR [edx]
6400a923:	sub    edi,ecx
6400a925:	je     0x6400a935
6400a927:	cmp    edi,ebx
6400a929:	mov    ecx,0x1
6400a92e:	jg     0x6400a937
6400a930:	or     ecx,0xffffffff
6400a933:	jmp    0x6400a937
6400a935:	xor    ecx,ecx
6400a937:	cmp    ecx,ebx
6400a939:	jne    0x6400a9b2
6400a93b:	mov    edx,DWORD PTR [esp+0x100a8]
6400a942:	cmp    DWORD PTR [esp+0x18],edx
6400a946:	jne    0x6400a9b2
6400a948:	mov    al,BYTE PTR [ebp+0x14]
6400a94b:	mov    ecx,DWORD PTR [esp+0x28]
6400a94f:	mov    BYTE PTR [ecx],al
6400a951:	mov    eax,DWORD PTR [esp+0x24]
6400a955:	add    eax,0xffffffeb
6400a958:	push   eax
6400a959:	lea    edx,[ebp+0x15]
6400a95c:	push   edx
6400a95d:	lea    ecx,[esp+0x40]
6400a961:	mov    DWORD PTR [esp+0x58],0xf
6400a969:	mov    DWORD PTR [esp+0x54],ebx
6400a96d:	mov    BYTE PTR [esp+0x44],bl
6400a971:	call   0x64001880
6400a976:	mov    ecx,DWORD PTR [esp+0x2c]
6400a97a:	push   0xffffffff
6400a97c:	push   ebx
6400a97d:	lea    eax,[esp+0x40]
6400a981:	push   eax
6400a982:	mov    BYTE PTR [esp+0x1009c],0x3
6400a98a:	call   0x640017a0
6400a98f:	cmp    DWORD PTR [esp+0x50],0x10
6400a994:	jb     0x6400a9a3
6400a996:	mov    ecx,DWORD PTR [esp+0x3c]
6400a99a:	push   ecx
6400a99b:	call   0x64013712
6400a9a0:	add    esp,0x4
6400a9a3:	push   ebp
6400a9a4:	mov    bl,0x1
6400a9a6:	call   0x64013712
6400a9ab:	add    esp,0x4
6400a9ae:	mov    al,bl
6400a9b0:	jmp    0x6400a9d3
6400a9b2:	mov    bl,BYTE PTR [esp+0x17]
6400a9b6:	push   ebp
6400a9b7:	call   0x64013712
6400a9bc:	add    esp,0x4
6400a9bf:	mov    al,bl
6400a9c1:	jmp    0x6400a9d3
6400a9c3:	cmp    BYTE PTR [esp+0x100ac],0x0
6400a9cb:	mov    al,0x1
6400a9cd:	jne    0x6400a9d3
6400a9cf:	mov    al,BYTE PTR [esp+0x17]
6400a9d3:	mov    ecx,DWORD PTR [esp+0x10088]
6400a9da:	mov    DWORD PTR fs:0x0,ecx
6400a9e1:	pop    ecx
6400a9e2:	pop    edi
6400a9e3:	pop    esi
6400a9e4:	pop    ebp
6400a9e5:	pop    ebx
6400a9e6:	mov    ecx,DWORD PTR [esp+0x10070]
6400a9ed:	xor    ecx,esp
6400a9ef:	call   0x64013f6c
6400a9f4:	add    esp,0x10080
6400a9fa:	ret    0x30
6400a9fd:	int3   
6400a9fe:	int3   
6400a9ff:	int3   
6400aa00:	push   0xffffffff
6400aa02:	push   0x6402398b
6400aa07:	mov    eax,fs:0x0
6400aa0d:	push   eax
6400aa0e:	push   ecx
6400aa0f:	push   esi
6400aa10:	mov    eax,ds:0x6402f09c
6400aa15:	xor    eax,esp
6400aa17:	push   eax
6400aa18:	lea    eax,[esp+0xc]
6400aa1c:	mov    fs:0x0,eax
6400aa22:	push   0xc
6400aa24:	call   0x64013af1
6400aa29:	mov    esi,eax
6400aa2b:	add    esp,0x4
6400aa2e:	mov    DWORD PTR [esp+0x8],esi
6400aa32:	test   esi,esi
6400aa34:	mov    DWORD PTR [esp+0x14],0x0
6400aa3c:	je     0x6400aa5a
6400aa3e:	mov    eax,DWORD PTR [esp+0x1c]
6400aa42:	push   eax
6400aa43:	mov    DWORD PTR [esi+0x4],0x0
6400aa4a:	mov    DWORD PTR [esi+0x8],0x1
6400aa51:	call   0x6401ff40
6400aa56:	mov    DWORD PTR [esi],eax
6400aa58:	jmp    0x6400aa5c
6400aa5a:	xor    esi,esi
6400aa5c:	test   esi,esi
6400aa5e:	mov    DWORD PTR [esp+0x14],0xffffffff
6400aa66:	mov    DWORD PTR [ebx],esi
6400aa68:	jne    0x6400aa74
6400aa6a:	push   0x8007000e
6400aa6f:	call   0x6401ff30
6400aa74:	mov    eax,ebx
6400aa76:	mov    ecx,DWORD PTR [esp+0xc]
6400aa7a:	mov    DWORD PTR fs:0x0,ecx
6400aa81:	pop    ecx
6400aa82:	pop    esi
6400aa83:	add    esp,0x10
6400aa86:	ret    0x4
6400aa89:	int3   
6400aa8a:	int3   
6400aa8b:	int3   
6400aa8c:	int3   
6400aa8d:	int3   
6400aa8e:	int3   
6400aa8f:	int3   
6400aa90:	push   0xffffffff
6400aa92:	push   0x6402395b
6400aa97:	mov    eax,fs:0x0
6400aa9d:	push   eax
6400aa9e:	push   ebp
6400aa9f:	push   esi
6400aaa0:	mov    eax,ds:0x6402f09c
6400aaa5:	xor    eax,esp
6400aaa7:	push   eax
6400aaa8:	lea    eax,[esp+0xc]
6400aaac:	mov    fs:0x0,eax
6400aab2:	mov    ebp,DWORD PTR [esp+0x1c]
6400aab6:	push   0xc
6400aab8:	call   0x64013af1
6400aabd:	mov    esi,eax
6400aabf:	add    esp,0x4
6400aac2:	mov    DWORD PTR [esp+0x1c],esi
6400aac6:	test   esi,esi
6400aac8:	mov    DWORD PTR [esp+0x14],0x0
6400aad0:	je     0x6400aafd
6400aad2:	push   edi
6400aad3:	mov    DWORD PTR [esi+0x4],0x0
6400aada:	mov    DWORD PTR [esi+0x8],0x1
6400aae1:	call   DWORD PTR ds:0x64026198
6400aae7:	test   eax,eax
6400aae9:	mov    DWORD PTR [esi],eax
6400aaeb:	jne    0x6400aaff
6400aaed:	test   edi,edi
6400aaef:	je     0x6400aaff
6400aaf1:	push   0x8007000e
6400aaf6:	call   0x6401ff30
6400aafb:	jmp    0x6400aaff
6400aafd:	xor    esi,esi
6400aaff:	test   esi,esi
6400ab01:	mov    DWORD PTR [esp+0x14],0xffffffff
6400ab09:	mov    DWORD PTR [ebp+0x0],esi
6400ab0c:	jne    0x6400ab18
6400ab0e:	push   0x8007000e
6400ab13:	call   0x6401ff30
6400ab18:	mov    eax,ebp
6400ab1a:	mov    ecx,DWORD PTR [esp+0xc]
6400ab1e:	mov    DWORD PTR fs:0x0,ecx
6400ab25:	pop    ecx
6400ab26:	pop    esi
6400ab27:	pop    ebp
6400ab28:	add    esp,0xc
6400ab2b:	ret    0x4
6400ab2e:	int3   
6400ab2f:	int3   
6400ab30:	push   esi
6400ab31:	mov    esi,DWORD PTR [edi]
6400ab33:	test   esi,esi
6400ab35:	je     0x6400ab75
6400ab37:	lea    eax,[esi+0x8]
6400ab3a:	push   eax
6400ab3b:	call   DWORD PTR ds:0x64026098
6400ab41:	test   eax,eax
6400ab43:	jne    0x6400ab6f
6400ab45:	test   esi,esi
6400ab47:	je     0x6400ab6f
6400ab49:	mov    eax,DWORD PTR [esi]
6400ab4b:	test   eax,eax
6400ab4d:	je     0x6400ab56
6400ab4f:	push   eax
6400ab50:	call   DWORD PTR ds:0x640261a0
6400ab56:	mov    eax,DWORD PTR [esi+0x4]
6400ab59:	test   eax,eax
6400ab5b:	je     0x6400ab66
6400ab5d:	push   eax
6400ab5e:	call   0x64014664
6400ab63:	add    esp,0x4
6400ab66:	push   esi
6400ab67:	call   0x64013712
6400ab6c:	add    esp,0x4
6400ab6f:	mov    DWORD PTR [edi],0x0
6400ab75:	pop    esi
6400ab76:	ret    
6400ab77:	int3   
6400ab78:	int3   
6400ab79:	int3   
6400ab7a:	int3   
6400ab7b:	int3   
6400ab7c:	int3   
6400ab7d:	int3   
6400ab7e:	int3   
6400ab7f:	int3   
6400ab80:	push   0xffffffff
6400ab82:	push   0x6402392b
6400ab87:	mov    eax,fs:0x0
6400ab8d:	push   eax
6400ab8e:	push   ebp
6400ab8f:	push   esi
6400ab90:	mov    eax,ds:0x6402f09c
6400ab95:	xor    eax,esp
6400ab97:	push   eax
6400ab98:	lea    eax,[esp+0xc]
6400ab9c:	mov    fs:0x0,eax
6400aba2:	mov    ebp,DWORD PTR [esp+0x1c]
6400aba6:	test   ebp,ebp
6400aba8:	je     0x6400abbe
6400abaa:	mov    eax,DWORD PTR [ebx]
6400abac:	test   eax,eax
6400abae:	je     0x6400abb4
6400abb0:	mov    eax,DWORD PTR [eax]
6400abb2:	jmp    0x6400abb6
6400abb4:	xor    eax,eax
6400abb6:	cmp    eax,ebp
6400abb8:	je     0x6400ac63
6400abbe:	mov    esi,DWORD PTR [ebx]
6400abc0:	test   esi,esi
6400abc2:	je     0x6400ac02
6400abc4:	lea    eax,[esi+0x8]
6400abc7:	push   eax
6400abc8:	call   DWORD PTR ds:0x64026098
6400abce:	test   eax,eax
6400abd0:	jne    0x6400abfc
6400abd2:	test   esi,esi
6400abd4:	je     0x6400abfc
6400abd6:	mov    eax,DWORD PTR [esi]
6400abd8:	test   eax,eax
6400abda:	je     0x6400abe3
6400abdc:	push   eax
6400abdd:	call   DWORD PTR ds:0x640261a0
6400abe3:	mov    eax,DWORD PTR [esi+0x4]
6400abe6:	test   eax,eax
6400abe8:	je     0x6400abf3
6400abea:	push   eax
6400abeb:	call   0x64014664
6400abf0:	add    esp,0x4
6400abf3:	push   esi
6400abf4:	call   0x64013712
6400abf9:	add    esp,0x4
6400abfc:	mov    DWORD PTR [ebx],0x0
6400ac02:	push   0xc
6400ac04:	call   0x64013af1
6400ac09:	mov    esi,eax
6400ac0b:	add    esp,0x4
6400ac0e:	mov    DWORD PTR [esp+0x1c],esi
6400ac12:	test   esi,esi
6400ac14:	mov    DWORD PTR [esp+0x14],0x0
6400ac1c:	je     0x6400ac49
6400ac1e:	push   ebp
6400ac1f:	mov    DWORD PTR [esi+0x4],0x0
6400ac26:	mov    DWORD PTR [esi+0x8],0x1
6400ac2d:	call   DWORD PTR ds:0x64026198
6400ac33:	test   eax,eax
6400ac35:	mov    DWORD PTR [esi],eax
6400ac37:	jne    0x6400ac4b
6400ac39:	test   ebp,ebp
6400ac3b:	je     0x6400ac4b
6400ac3d:	push   0x8007000e
6400ac42:	call   0x6401ff30
6400ac47:	jmp    0x6400ac4b
6400ac49:	xor    esi,esi
6400ac4b:	test   esi,esi
6400ac4d:	mov    DWORD PTR [esp+0x14],0xffffffff
6400ac55:	mov    DWORD PTR [ebx],esi
6400ac57:	jne    0x6400ac63
6400ac59:	push   0x8007000e
6400ac5e:	call   0x6401ff30
6400ac63:	mov    eax,ebx
6400ac65:	mov    ecx,DWORD PTR [esp+0xc]
6400ac69:	mov    DWORD PTR fs:0x0,ecx
6400ac70:	pop    ecx
6400ac71:	pop    esi
6400ac72:	pop    ebp
6400ac73:	add    esp,0xc
6400ac76:	ret    0x4
6400ac79:	int3   
6400ac7a:	int3   
6400ac7b:	int3   
6400ac7c:	int3   
6400ac7d:	int3   
6400ac7e:	int3   
6400ac7f:	int3   
6400ac80:	push   0xffffffff
6400ac82:	push   0x640239bb
6400ac87:	mov    eax,fs:0x0
6400ac8d:	push   eax
6400ac8e:	push   ecx
6400ac8f:	push   esi
6400ac90:	push   edi
6400ac91:	mov    eax,ds:0x6402f09c
6400ac96:	xor    eax,esp
6400ac98:	push   eax
6400ac99:	lea    eax,[esp+0x10]
6400ac9d:	mov    fs:0x0,eax
6400aca3:	push   0xc
6400aca5:	call   0x64013af1
6400acaa:	add    esp,0x4
6400acad:	mov    DWORD PTR [esp+0xc],eax
6400acb1:	test   eax,eax
6400acb3:	mov    DWORD PTR [esp+0x18],0x0
6400acbb:	je     0x6400acce
6400acbd:	mov    ecx,DWORD PTR [esp+0x20]
6400acc1:	push   ecx
6400acc2:	push   ebx
6400acc3:	mov    edi,eax
6400acc5:	call   0x6400ade0
6400acca:	mov    edi,eax
6400accc:	jmp    0x6400acd0
6400acce:	xor    edi,edi
6400acd0:	test   edi,edi
6400acd2:	mov    DWORD PTR [esp+0x18],0xffffffff
6400acda:	jne    0x6400ace8
6400acdc:	push   0x8007000e
6400ace1:	call   0x6401ff30
6400ace6:	jmp    0x6400ad2e
6400ace8:	mov    esi,DWORD PTR [ebx]
6400acea:	test   esi,esi
6400acec:	je     0x6400ad2c
6400acee:	lea    edx,[esi+0x8]
6400acf1:	push   edx
6400acf2:	call   DWORD PTR ds:0x64026098
6400acf8:	test   eax,eax
6400acfa:	jne    0x6400ad26
6400acfc:	test   esi,esi
6400acfe:	je     0x6400ad26
6400ad00:	mov    eax,DWORD PTR [esi]
6400ad02:	test   eax,eax
6400ad04:	je     0x6400ad0d
6400ad06:	push   eax
6400ad07:	call   DWORD PTR ds:0x640261a0
6400ad0d:	mov    eax,DWORD PTR [esi+0x4]
6400ad10:	test   eax,eax
6400ad12:	je     0x6400ad1d
6400ad14:	push   eax
6400ad15:	call   0x64014664
6400ad1a:	add    esp,0x4
6400ad1d:	push   esi
6400ad1e:	call   0x64013712
6400ad23:	add    esp,0x4
6400ad26:	mov    DWORD PTR [ebx],0x0
6400ad2c:	mov    DWORD PTR [ebx],edi
6400ad2e:	mov    eax,ebx
6400ad30:	mov    ecx,DWORD PTR [esp+0x10]
6400ad34:	mov    DWORD PTR fs:0x0,ecx
6400ad3b:	pop    ecx
6400ad3c:	pop    edi
6400ad3d:	pop    esi
6400ad3e:	add    esp,0x10
6400ad41:	ret    0x4
6400ad44:	int3   
6400ad45:	int3   
6400ad46:	int3   
6400ad47:	int3   
6400ad48:	int3   
6400ad49:	int3   
6400ad4a:	int3   
6400ad4b:	int3   
6400ad4c:	int3   
6400ad4d:	int3   
6400ad4e:	int3   
6400ad4f:	int3   
6400ad50:	push   0xffffffff
6400ad52:	push   0x64023a69
6400ad57:	mov    eax,fs:0x0
6400ad5d:	push   eax
6400ad5e:	push   ecx
6400ad5f:	push   ebx
6400ad60:	mov    eax,ds:0x6402f09c
6400ad65:	xor    eax,esp
6400ad67:	push   eax
6400ad68:	lea    eax,[esp+0xc]
6400ad6c:	mov    fs:0x0,eax
6400ad72:	mov    ebx,DWORD PTR [esp+0x20]
6400ad76:	mov    eax,DWORD PTR [esp+0x1c]
6400ad7a:	mov    DWORD PTR [esp+0x8],0x0
6400ad82:	mov    eax,DWORD PTR [eax]
6400ad84:	test   eax,eax
6400ad86:	mov    DWORD PTR [ebx],eax
6400ad88:	je     0x6400ad94
6400ad8a:	add    eax,0x8
6400ad8d:	push   eax
6400ad8e:	call   DWORD PTR ds:0x64026020
6400ad94:	mov    ecx,DWORD PTR [esp+0x24]
6400ad98:	mov    DWORD PTR [esp+0x14],0x0
6400ada0:	push   ecx
6400ada1:	mov    DWORD PTR [esp+0xc],0x1
6400ada9:	call   0x6400ac80
6400adae:	mov    eax,ebx
6400adb0:	mov    ecx,DWORD PTR [esp+0xc]
6400adb4:	mov    DWORD PTR fs:0x0,ecx
6400adbb:	pop    ecx
6400adbc:	pop    ebx
6400adbd:	add    esp,0x10
6400adc0:	ret    0xc
6400adc3:	int3   
6400adc4:	int3   
6400adc5:	int3   
6400adc6:	int3   
6400adc7:	int3   
6400adc8:	int3   
6400adc9:	int3   
6400adca:	int3   
6400adcb:	int3   
6400adcc:	int3   
6400adcd:	int3   
6400adce:	int3   
6400adcf:	int3   
6400add0:	mov    eax,DWORD PTR [eax]
6400add2:	test   eax,eax
6400add4:	je     0x6400add9
6400add6:	mov    eax,DWORD PTR [eax]
6400add8:	ret    
6400add9:	xor    eax,eax
6400addb:	ret    
6400addc:	int3   
6400addd:	int3   
6400adde:	int3   
6400addf:	int3   
6400ade0:	mov    eax,DWORD PTR [esp+0x4]
6400ade4:	push   ebx
6400ade5:	xor    ebx,ebx
6400ade7:	mov    DWORD PTR [edi+0x4],ebx
6400adea:	mov    DWORD PTR [edi+0x8],0x1
6400adf1:	mov    eax,DWORD PTR [eax]
6400adf3:	cmp    eax,ebx
6400adf5:	push   ebp
6400adf6:	push   esi
6400adf7:	mov    esi,DWORD PTR ds:0x64026194
6400adfd:	je     0x6400ae0c
6400adff:	mov    eax,DWORD PTR [eax]
6400ae01:	cmp    eax,ebx
6400ae03:	je     0x6400ae0c
6400ae05:	push   eax
6400ae06:	call   esi
6400ae08:	mov    ebp,eax
6400ae0a:	jmp    0x6400ae0e
6400ae0c:	xor    ebp,ebp
6400ae0e:	mov    ecx,DWORD PTR [esp+0x14]
6400ae12:	mov    eax,DWORD PTR [ecx]
6400ae14:	cmp    eax,ebx
6400ae16:	je     0x6400ae23
6400ae18:	mov    eax,DWORD PTR [eax]
6400ae1a:	cmp    eax,ebx
6400ae1c:	je     0x6400ae23
6400ae1e:	push   eax
6400ae1f:	call   esi
6400ae21:	mov    ebx,eax
6400ae23:	lea    esi,[ebx+ebp*1]
6400ae26:	add    esi,esi
6400ae28:	push   esi
6400ae29:	push   0x0
6400ae2b:	call   DWORD PTR ds:0x640261a4
6400ae31:	test   eax,eax
6400ae33:	mov    DWORD PTR [edi],eax
6400ae35:	jne    0x6400ae49
6400ae37:	push   0x8007000e
6400ae3c:	call   0x6401ff30
6400ae41:	pop    esi
6400ae42:	pop    ebp
6400ae43:	mov    eax,edi
6400ae45:	pop    ebx
6400ae46:	ret    0x8
6400ae49:	mov    edx,DWORD PTR [esp+0x10]
6400ae4d:	mov    ecx,DWORD PTR [edx]
6400ae4f:	test   ecx,ecx
6400ae51:	je     0x6400ae6c
6400ae53:	mov    ecx,DWORD PTR [ecx]
6400ae55:	test   ecx,ecx
6400ae57:	je     0x6400ae6c
6400ae59:	lea    edx,[ebp+ebp*1+0x2]
6400ae5d:	push   edx
6400ae5e:	push   ecx
6400ae5f:	add    esi,0x2
6400ae62:	push   esi
6400ae63:	push   eax
6400ae64:	call   0x640138c8
6400ae69:	add    esp,0x10
6400ae6c:	mov    eax,DWORD PTR [esp+0x14]
6400ae70:	mov    eax,DWORD PTR [eax]
6400ae72:	test   eax,eax
6400ae74:	je     0x6400ae91
6400ae76:	mov    ecx,DWORD PTR [eax]
6400ae78:	test   ecx,ecx
6400ae7a:	je     0x6400ae91
6400ae7c:	lea    eax,[ebx+ebx*1+0x2]
6400ae80:	push   eax
6400ae81:	push   ecx
6400ae82:	mov    ecx,DWORD PTR [edi]
6400ae84:	push   eax
6400ae85:	lea    edx,[ecx+ebp*2]
6400ae88:	push   edx
6400ae89:	call   0x640138c8
6400ae8e:	add    esp,0x10
6400ae91:	pop    esi
6400ae92:	pop    ebp
6400ae93:	mov    eax,edi
6400ae95:	pop    ebx
6400ae96:	ret    0x8
6400ae99:	int3   
6400ae9a:	int3   
6400ae9b:	int3   
6400ae9c:	int3   
6400ae9d:	int3   
6400ae9e:	int3   
6400ae9f:	int3   
6400aea0:	push   ecx
6400aea1:	call   DWORD PTR ds:0x64026190
6400aea7:	ret    
6400aea8:	int3   
6400aea9:	int3   
6400aeaa:	int3   
6400aeab:	int3   
6400aeac:	int3   
6400aead:	int3   
6400aeae:	int3   
6400aeaf:	int3   
6400aeb0:	push   0xffffffff
6400aeb2:	push   0x64023a28
6400aeb7:	mov    eax,fs:0x0
6400aebd:	push   eax
6400aebe:	sub    esp,0x18
6400aec1:	push   ebx
6400aec2:	mov    eax,ds:0x6402f09c
6400aec7:	xor    eax,esp
6400aec9:	push   eax
6400aeca:	lea    eax,[esp+0x20]
6400aece:	mov    fs:0x0,eax
6400aed4:	mov    ebx,ecx
6400aed6:	cmp    WORD PTR [esi],0x8
6400aeda:	jne    0x6400aef8
6400aedc:	mov    eax,DWORD PTR [esi+0x8]
6400aedf:	push   eax
6400aee0:	call   0x6400ab80
6400aee5:	mov    eax,ebx
6400aee7:	mov    ecx,DWORD PTR [esp+0x20]
6400aeeb:	mov    DWORD PTR fs:0x0,ecx
6400aef2:	pop    ecx
6400aef3:	pop    ebx
6400aef4:	add    esp,0x24
6400aef7:	ret    
6400aef8:	lea    ecx,[esp+0xc]
6400aefc:	push   ecx
6400aefd:	call   DWORD PTR ds:0x64026188
6400af03:	lea    edx,[esp+0xc]
6400af07:	cmp    edx,esi
6400af09:	mov    DWORD PTR [esp+0x28],0x0
6400af11:	jne    0x6400af1b
6400af13:	cmp    WORD PTR [esp+0xc],0x8
6400af19:	je     0x6400af35
6400af1b:	push   0x8
6400af1d:	push   0x0
6400af1f:	push   esi
6400af20:	lea    eax,[esp+0x18]
6400af24:	push   eax
6400af25:	call   DWORD PTR ds:0x6402619c
6400af2b:	test   eax,eax
6400af2d:	jge    0x6400af35
6400af2f:	push   eax
6400af30:	call   0x6401ff30
6400af35:	mov    ecx,DWORD PTR [esp+0x14]
6400af39:	push   ecx
6400af3a:	call   0x6400ab80
6400af3f:	lea    edx,[esp+0xc]
6400af43:	push   edx
6400af44:	call   DWORD PTR ds:0x64026190
6400af4a:	mov    eax,ebx
6400af4c:	mov    ecx,DWORD PTR [esp+0x20]
6400af50:	mov    DWORD PTR fs:0x0,ecx
6400af57:	pop    ecx
6400af58:	pop    ebx
6400af59:	add    esp,0x24
6400af5c:	ret    
6400af5d:	int3   
6400af5e:	int3   
6400af5f:	int3   
6400af60:	sub    esp,0x8
6400af63:	test   eax,eax
6400af65:	mov    BYTE PTR [edi],0x0
6400af68:	jle    0x6400b0be
6400af6e:	push   ebx
6400af6f:	push   ebp
6400af70:	push   esi
6400af71:	xor    esi,esi
6400af73:	add    eax,ecx
6400af75:	mov    BYTE PTR [esp+0xf],0x0
6400af7a:	mov    BYTE PTR [edi],0x0
6400af7d:	mov    DWORD PTR [esp+0x10],eax
6400af81:	mov    ebp,eax
6400af83:	mov    al,BYTE PTR [ebp+0x0]
6400af86:	test   al,al
6400af88:	je     0x6400b034
6400af8e:	movsx  edx,al
6400af91:	push   edx
6400af92:	call   0x64014ddf
6400af97:	mov    bl,al
6400af99:	movsx  eax,bl
6400af9c:	push   eax
6400af9d:	call   0x64014c20
6400afa2:	add    esp,0x8
6400afa5:	test   eax,eax
6400afa7:	je     0x6400afab
6400afa9:	mov    bl,0x30
6400afab:	shl    BYTE PTR [esi+edi*1],0x4
6400afaf:	add    BYTE PTR [esp+0xf],0x1
6400afb4:	mov    cl,BYTE PTR [esi+edi*1]
6400afb7:	mov    al,bl
6400afb9:	sub    al,0x30
6400afbb:	cmp    al,0x9
6400afbd:	ja     0x6400afc6
6400afbf:	or     al,cl
6400afc1:	mov    BYTE PTR [esi+edi*1],al
6400afc4:	jmp    0x6400afd8
6400afc6:	mov    dl,bl
6400afc8:	sub    dl,0x61
6400afcb:	cmp    dl,0x5
6400afce:	ja     0x6400b00a
6400afd0:	sub    bl,0x57
6400afd3:	or     bl,cl
6400afd5:	mov    BYTE PTR [esi+edi*1],bl
6400afd8:	cmp    BYTE PTR [esp+0xf],0x2
6400afdd:	jne    0x6400b002
6400afdf:	mov    al,BYTE PTR [esi+edi*1]
6400afe2:	test   al,al
6400afe4:	je     0x6400aff6
6400afe6:	movsx  eax,al
6400afe9:	push   eax
6400afea:	call   0x64014c9d
6400afef:	add    esp,0x4
6400aff2:	test   eax,eax
6400aff4:	je     0x6400b00a
6400aff6:	add    esi,0x1
6400aff9:	mov    BYTE PTR [esp+0xf],0x0
6400affe:	mov    BYTE PTR [esi+edi*1],0x0
6400b002:	add    ebp,0x1
6400b005:	jmp    0x6400af83
6400b00a:	mov    ebp,DWORD PTR [esp+0x10]
6400b00e:	xor    esi,esi
6400b010:	mov    bl,BYTE PTR [ebp+0x0]
6400b013:	test   bl,bl
6400b015:	je     0x6400b034
6400b017:	movsx  ecx,bl
6400b01a:	push   ecx
6400b01b:	call   0x64014c9d
6400b020:	add    esp,0x4
6400b023:	test   eax,eax
6400b025:	je     0x6400b032
6400b027:	mov    BYTE PTR [esi+edi*1],bl
6400b02a:	add    esi,0x1
6400b02d:	add    ebp,0x1
6400b030:	jmp    0x6400b010
6400b032:	xor    esi,esi
6400b034:	cmp    DWORD PTR [esp+0x18],0x0
6400b039:	mov    BYTE PTR [esi+edi*1],0x0
6400b03d:	je     0x6400b062
6400b03f:	test   esi,esi
6400b041:	jle    0x6400b062
6400b043:	add    esi,0xffffffff
6400b046:	shr    esi,1
6400b048:	lea    eax,[edi+0x1]
6400b04b:	add    esi,0x1
6400b04e:	mov    edi,edi
6400b050:	mov    cl,BYTE PTR [eax-0x1]
6400b053:	mov    dl,BYTE PTR [eax]
6400b055:	mov    BYTE PTR [eax-0x1],dl
6400b058:	mov    BYTE PTR [eax],cl
6400b05a:	add    eax,0x2
6400b05d:	sub    esi,0x1
6400b060:	jne    0x6400b050
6400b062:	or     ebx,0xffffffff
6400b065:	or     ebp,ebx
6400b067:	xor    esi,esi
6400b069:	cmp    BYTE PTR [edi],0x0
6400b06c:	je     0x6400b0bb
6400b06e:	mov    edi,edi
6400b070:	movsx  eax,BYTE PTR [esi+edi*1]
6400b074:	push   eax
6400b075:	call   0x64014c20
6400b07a:	add    esp,0x4
6400b07d:	test   eax,eax
6400b07f:	jne    0x6400b089
6400b081:	test   ebp,ebp
6400b083:	jge    0x6400b087
6400b085:	mov    ebp,esi
6400b087:	mov    ebx,esi
6400b089:	add    esi,0x1
6400b08c:	cmp    BYTE PTR [esi+edi*1],0x0
6400b090:	jne    0x6400b070
6400b092:	test   ebp,ebp
6400b094:	jl     0x6400b0bb
6400b096:	test   ebx,ebx
6400b098:	jl     0x6400b0bb
6400b09a:	cmp    ebp,ebx
6400b09c:	mov    eax,ebp
6400b09e:	jg     0x6400b0b5
6400b0a0:	mov    edx,edi
6400b0a2:	sub    edx,ebp
6400b0a4:	mov    cl,BYTE PTR [eax+edi*1]
6400b0a7:	test   cl,cl
6400b0a9:	je     0x6400b0b5
6400b0ab:	mov    BYTE PTR [edx+eax*1],cl
6400b0ae:	add    eax,0x1
6400b0b1:	cmp    eax,ebx
6400b0b3:	jle    0x6400b0a4
6400b0b5:	sub    eax,ebp
6400b0b7:	mov    BYTE PTR [eax+edi*1],0x0
6400b0bb:	pop    esi
6400b0bc:	pop    ebp
6400b0bd:	pop    ebx
6400b0be:	mov    eax,edi
6400b0c0:	add    esp,0x8
6400b0c3:	ret    
6400b0c4:	int3   
6400b0c5:	int3   
6400b0c6:	int3   
6400b0c7:	int3   
6400b0c8:	int3   
6400b0c9:	int3   
6400b0ca:	int3   
6400b0cb:	int3   
6400b0cc:	int3   
6400b0cd:	int3   
6400b0ce:	int3   
6400b0cf:	int3   
6400b0d0:	push   ebp
6400b0d1:	mov    ebp,esp
6400b0d3:	and    esp,0xfffffff8
6400b0d6:	mov    eax,0x2f34
6400b0db:	call   0x64019860
6400b0e0:	mov    eax,ds:0x6402f09c
6400b0e5:	xor    eax,esp
6400b0e7:	mov    DWORD PTR [esp+0x2f30],eax
6400b0ee:	push   ebx
6400b0ef:	mov    eax,DWORD PTR [ebp+0x8]
6400b0f2:	mov    ecx,DWORD PTR [ebp+0xc]
6400b0f5:	mov    ebx,DWORD PTR [ebp+0x10]
6400b0f8:	push   esi
6400b0f9:	push   edi
6400b0fa:	xor    edi,edi
6400b0fc:	push   edi
6400b0fd:	push   edi
6400b0fe:	push   0x3
6400b100:	push   edi
6400b101:	push   0x3
6400b103:	push   edi
6400b104:	push   0x6402a108
6400b109:	push   0x12
6400b10b:	push   0x6402a130
6400b110:	mov    DWORD PTR [esp+0x3c],eax
6400b114:	mov    DWORD PTR [esp+0x40],ecx
6400b118:	mov    BYTE PTR [esp+0x37],0x0
6400b11d:	call   0x64006b30
6400b122:	add    esp,0xc
6400b125:	push   eax
6400b126:	call   0x6400e1c0
6400b12b:	call   eax
6400b12d:	mov    esi,eax
6400b12f:	cmp    esi,0xffffffff
6400b132:	jne    0x6400b14b
6400b134:	xor    al,al
6400b136:	pop    edi
6400b137:	pop    esi
6400b138:	pop    ebx
6400b139:	mov    ecx,DWORD PTR [esp+0x2f30]
6400b140:	xor    ecx,esp
6400b142:	call   0x64013f6c
6400b147:	mov    esp,ebp
6400b149:	pop    ebp
6400b14a:	ret    
6400b14b:	xor    eax,eax
6400b14d:	push   0x2710
6400b152:	lea    edx,[esp+0x82c]
6400b159:	push   edi
6400b15a:	mov    DWORD PTR [esp+0x2c],eax
6400b15e:	mov    DWORD PTR [esp+0x30],eax
6400b162:	push   edx
6400b163:	mov    DWORD PTR [esp+0x20],edi
6400b167:	mov    DWORD PTR [esp+0x38],eax
6400b16b:	mov    DWORD PTR [esp+0x30],edi
6400b16f:	mov    DWORD PTR [esp+0x34],edi
6400b173:	call   0x64014670
6400b178:	add    esp,0xc
6400b17b:	push   edi
6400b17c:	lea    eax,[esp+0x18]
6400b180:	push   eax
6400b181:	push   0x2710
6400b186:	lea    ecx,[esp+0x834]
6400b18d:	push   ecx
6400b18e:	push   0xc
6400b190:	lea    edx,[esp+0x38]
6400b194:	push   edx
6400b195:	push   0x2d1400
6400b19a:	push   esi
6400b19b:	call   0x6400e700
6400b1a0:	call   eax
6400b1a2:	test   eax,eax
6400b1a4:	je     0x6400b201
6400b1a6:	mov    eax,DWORD PTR [esp+0x838]
6400b1ad:	push   edi
6400b1ae:	lea    edi,[esp+0x444]
6400b1b5:	lea    ecx,[esp+0x82c]
6400b1bc:	call   0x6400af60
6400b1c1:	mov    eax,DWORD PTR [esp+0x844]
6400b1c8:	push   0x1
6400b1ca:	lea    edi,[esp+0x60]
6400b1ce:	lea    ecx,[esp+0x830]
6400b1d5:	call   0x6400af60
6400b1da:	mov    ecx,DWORD PTR [esp+0x20]
6400b1de:	add    esp,0x8
6400b1e1:	mov    eax,edi
6400b1e3:	push   eax
6400b1e4:	call   0x640027c0
6400b1e9:	lea    ecx,[esp+0x440]
6400b1f0:	push   ecx
6400b1f1:	mov    ecx,DWORD PTR [esp+0x20]
6400b1f5:	call   0x640027c0
6400b1fa:	mov    BYTE PTR [esp+0x13],0x1
6400b1ff:	xor    edi,edi
6400b201:	xor    eax,eax
6400b203:	push   edi
6400b204:	lea    edx,[esp+0x24]
6400b208:	push   edx
6400b209:	push   0x28
6400b20b:	mov    DWORD PTR [esp+0x40],eax
6400b20f:	mov    DWORD PTR [esp+0x44],eax
6400b213:	mov    DWORD PTR [esp+0x48],eax
6400b217:	mov    DWORD PTR [esp+0x4c],eax
6400b21b:	mov    DWORD PTR [esp+0x50],eax
6400b21f:	mov    DWORD PTR [esp+0x54],eax
6400b223:	mov    DWORD PTR [esp+0x58],eax
6400b227:	mov    DWORD PTR [esp+0x5c],eax
6400b22b:	mov    DWORD PTR [esp+0x60],eax
6400b22f:	lea    eax,[esp+0x3c]
6400b233:	push   eax
6400b234:	push   edi
6400b235:	push   edi
6400b236:	push   0x700a0
6400b23b:	push   esi
6400b23c:	mov    DWORD PTR [esp+0x50],edi
6400b240:	mov    DWORD PTR [ebx],edi
6400b242:	mov    DWORD PTR [ebx+0x4],edi
6400b245:	call   0x6400e700
6400b24a:	call   eax
6400b24c:	test   eax,eax
6400b24e:	je     0x6400b25d
6400b250:	mov    ecx,DWORD PTR [esp+0x48]
6400b254:	mov    edx,DWORD PTR [esp+0x4c]
6400b258:	mov    DWORD PTR [ebx],ecx
6400b25a:	mov    DWORD PTR [ebx+0x4],edx
6400b25d:	push   esi
6400b25e:	call   DWORD PTR ds:0x64026040
6400b264:	mov    ecx,DWORD PTR [esp+0x2f3c]
6400b26b:	mov    al,BYTE PTR [esp+0x13]
6400b26f:	pop    edi
6400b270:	pop    esi
6400b271:	pop    ebx
6400b272:	xor    ecx,esp
6400b274:	call   0x64013f6c
6400b279:	mov    esp,ebp
6400b27b:	pop    ebp
6400b27c:	ret    
6400b27d:	int3   
6400b27e:	int3   
6400b27f:	int3   
6400b280:	push   ebp
6400b281:	lea    ebp,[esp-0x28c]
6400b288:	sub    esp,0x28c
6400b28e:	push   0xffffffff
6400b290:	push   0x64024b50
6400b295:	mov    eax,fs:0x0
6400b29b:	push   eax
6400b29c:	sub    esp,0x34
6400b29f:	mov    eax,ds:0x6402f09c
6400b2a4:	xor    eax,ebp
6400b2a6:	mov    DWORD PTR [ebp+0x288],eax
6400b2ac:	push   ebx
6400b2ad:	push   esi
6400b2ae:	push   edi
6400b2af:	push   eax
6400b2b0:	lea    eax,[ebp-0xc]
6400b2b3:	mov    fs:0x0,eax
6400b2b9:	mov    eax,DWORD PTR [ebp+0x294]
6400b2bf:	lea    ecx,[ebp-0x14]
6400b2c2:	push   ecx
6400b2c3:	lea    edx,[ebp+0x0]
6400b2c6:	push   edx
6400b2c7:	mov    DWORD PTR [ebp-0x20],eax
6400b2ca:	mov    DWORD PTR [ebp-0x14],0x1
6400b2d1:	call   0x6400dd60
6400b2d6:	call   eax
6400b2d8:	cmp    eax,0x6f
6400b2db:	jne    0x6400b4b1
6400b2e1:	mov    eax,DWORD PTR [ebp-0x14]
6400b2e4:	push   eax
6400b2e5:	call   0x6401370d
6400b2ea:	mov    ebx,eax
6400b2ec:	add    esp,0x4
6400b2ef:	mov    DWORD PTR [ebp-0x24],ebx
6400b2f2:	lea    ecx,[ebp-0x14]
6400b2f5:	push   ecx
6400b2f6:	push   ebx
6400b2f7:	mov    DWORD PTR [ebp-0x4],0x0
6400b2fe:	call   0x6400dd60
6400b303:	call   eax
6400b305:	test   eax,eax
6400b307:	je     0x6400b30f
6400b309:	push   ebx
6400b30a:	jmp    0x6400b4a9
6400b30f:	call   DWORD PTR ds:0x6402f06c
6400b315:	mov    edx,DWORD PTR ds:0x64030540
6400b31b:	mov    DWORD PTR [ebp-0x1c],eax
6400b31e:	mov    eax,DWORD PTR [edx+0xc]
6400b321:	mov    ecx,0x64030540
6400b326:	call   eax
6400b328:	lea    edi,[eax+0x10]
6400b32b:	mov    DWORD PTR [ebp-0x10],edi
6400b32e:	xor    esi,esi
6400b330:	mov    BYTE PTR [ebp-0x4],0x1
6400b334:	cmp    DWORD PTR [ebx+0x190],esi
6400b33a:	je     0x6400b3c2
6400b340:	mov    edx,DWORD PTR ds:0x64030540
6400b346:	mov    eax,DWORD PTR [edx+0xc]
6400b349:	mov    ecx,0x64030540
6400b34e:	call   eax
6400b350:	add    eax,0x10
6400b353:	mov    DWORD PTR [ebp-0x18],eax
6400b356:	mov    BYTE PTR [ebp-0x4],0x2
6400b35a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400b362:	push   ecx
6400b363:	push   0x6402a158
6400b368:	push   0x4
6400b36a:	push   0x6402a18c
6400b36f:	call   0x64006b30
6400b374:	add    esp,0xc
6400b377:	push   eax
6400b378:	lea    edx,[ebp-0x18]
6400b37b:	push   edx
6400b37c:	call   0x64001d40
6400b381:	mov    edi,DWORD PTR [ebp-0x18]
6400b384:	mov    eax,DWORD PTR [edi-0xc]
6400b387:	add    esp,0xc
6400b38a:	push   eax
6400b38b:	push   edi
6400b38c:	lea    ecx,[ebp-0x10]
6400b38f:	call   0x640029a0
6400b394:	lea    eax,[edi-0x10]
6400b397:	mov    BYTE PTR [ebp-0x4],0x1
6400b39b:	lea    ecx,[eax+0xc]
6400b39e:	or     edx,0xffffffff
6400b3a1:	lock xadd DWORD PTR [ecx],edx
6400b3a5:	dec    edx
6400b3a6:	test   edx,edx
6400b3a8:	jg     0x6400b3b4
6400b3aa:	mov    ecx,DWORD PTR [eax]
6400b3ac:	mov    edx,DWORD PTR [ecx]
6400b3ae:	push   eax
6400b3af:	mov    eax,DWORD PTR [edx+0x4]
6400b3b2:	call   eax
6400b3b4:	add    esi,0x1
6400b3b7:	cmp    esi,DWORD PTR [ebx+0x190]
6400b3bd:	jne    0x6400b340
6400b3bf:	mov    edi,DWORD PTR [ebp-0x10]
6400b3c2:	cmp    DWORD PTR [edi-0x4],0x1
6400b3c6:	jle    0x6400b3d7
6400b3c8:	mov    ecx,DWORD PTR [edi-0xc]
6400b3cb:	push   ecx
6400b3cc:	lea    ecx,[ebp-0x10]
6400b3cf:	call   0x64001950
6400b3d4:	mov    edi,DWORD PTR [ebp-0x10]
6400b3d7:	test   edi,edi
6400b3d9:	jne    0x6400b3df
6400b3db:	xor    esi,esi
6400b3dd:	jmp    0x6400b42d
6400b3df:	push   edi
6400b3e0:	call   DWORD PTR ds:0x64026054
6400b3e6:	add    eax,0x1
6400b3e9:	cmp    eax,0x3fffffff
6400b3ee:	jg     0x6400b429
6400b3f0:	lea    edi,[eax+eax*1]
6400b3f3:	mov    eax,edi
6400b3f5:	call   0x640146f0
6400b3fa:	mov    esi,esp
6400b3fc:	test   esi,esi
6400b3fe:	je     0x6400b426
6400b400:	mov    edx,DWORD PTR [ebp-0x10]
6400b403:	mov    eax,DWORD PTR [ebp-0x1c]
6400b406:	push   0x0
6400b408:	push   0x0
6400b40a:	push   edi
6400b40b:	push   esi
6400b40c:	push   0xffffffff
6400b40e:	push   edx
6400b40f:	push   0x0
6400b411:	push   eax
6400b412:	mov    BYTE PTR [esi],0x0
6400b415:	call   DWORD PTR ds:0x64026028
6400b41b:	mov    edi,DWORD PTR [ebp-0x10]
6400b41e:	neg    eax
6400b420:	sbb    eax,eax
6400b422:	and    eax,esi
6400b424:	jmp    0x6400b42b
6400b426:	mov    edi,DWORD PTR [ebp-0x10]
6400b429:	xor    eax,eax
6400b42b:	mov    esi,eax
6400b42d:	mov    eax,esi
6400b42f:	mov    DWORD PTR [ebp-0x28],0xf
6400b436:	mov    DWORD PTR [ebp-0x2c],0x0
6400b43d:	mov    BYTE PTR [ebp-0x3c],0x0
6400b441:	lea    edx,[eax+0x1]
6400b444:	mov    cl,BYTE PTR [eax]
6400b446:	add    eax,0x1
6400b449:	test   cl,cl
6400b44b:	jne    0x6400b444
6400b44d:	sub    eax,edx
6400b44f:	push   eax
6400b450:	push   esi
6400b451:	lea    ecx,[ebp-0x40]
6400b454:	call   0x64001880
6400b459:	mov    esi,DWORD PTR [ebp-0x20]
6400b45c:	lea    ecx,[ebp-0x40]
6400b45f:	push   ecx
6400b460:	mov    BYTE PTR [ebp-0x4],0x3
6400b464:	call   0x6400b9d0
6400b469:	cmp    DWORD PTR [ebp-0x28],0x10
6400b46d:	jb     0x6400b47b
6400b46f:	mov    edx,DWORD PTR [ebp-0x3c]
6400b472:	push   edx
6400b473:	call   0x64013712
6400b478:	add    esp,0x4
6400b47b:	mov    ebx,DWORD PTR [ebx]
6400b47d:	lea    eax,[edi-0x10]
6400b480:	mov    BYTE PTR [ebp-0x4],0x0
6400b484:	lea    ecx,[eax+0xc]
6400b487:	or     edx,0xffffffff
6400b48a:	lock xadd DWORD PTR [ecx],edx
6400b48e:	dec    edx
6400b48f:	test   edx,edx
6400b491:	jg     0x6400b49d
6400b493:	mov    ecx,DWORD PTR [eax]
6400b495:	mov    edx,DWORD PTR [ecx]
6400b497:	push   eax
6400b498:	mov    eax,DWORD PTR [edx+0x4]
6400b49b:	call   eax
6400b49d:	test   ebx,ebx
6400b49f:	jne    0x6400b30f
6400b4a5:	mov    ecx,DWORD PTR [ebp-0x24]
6400b4a8:	push   ecx
6400b4a9:	call   0x64013712
6400b4ae:	add    esp,0x4
6400b4b1:	lea    esp,[ebp-0x50]
6400b4b4:	mov    ecx,DWORD PTR [ebp-0xc]
6400b4b7:	mov    DWORD PTR fs:0x0,ecx
6400b4be:	pop    ecx
6400b4bf:	pop    edi
6400b4c0:	pop    esi
6400b4c1:	pop    ebx
6400b4c2:	mov    ecx,DWORD PTR [ebp+0x288]
6400b4c8:	xor    ecx,ebp
6400b4ca:	call   0x64013f6c
6400b4cf:	add    ebp,0x28c
6400b4d5:	mov    esp,ebp
6400b4d7:	pop    ebp
6400b4d8:	ret    
6400b4d9:	int3   
6400b4da:	int3   
6400b4db:	int3   
6400b4dc:	int3   
6400b4dd:	int3   
6400b4de:	int3   
6400b4df:	int3   
6400b4e0:	push   0xffffffff
6400b4e2:	push   0x64024b10
6400b4e7:	mov    eax,fs:0x0
6400b4ed:	push   eax
6400b4ee:	sub    esp,0x50
6400b4f1:	push   ebx
6400b4f2:	push   ebp
6400b4f3:	push   esi
6400b4f4:	push   edi
6400b4f5:	mov    eax,ds:0x6402f09c
6400b4fa:	xor    eax,esp
6400b4fc:	push   eax
6400b4fd:	lea    eax,[esp+0x64]
6400b501:	mov    fs:0x0,eax
6400b507:	mov    ebp,DWORD PTR [esp+0x74]
6400b50b:	lea    eax,[esp+0x18]
6400b50f:	xor    ebx,ebx
6400b511:	push   eax
6400b512:	mov    edi,0x640286e4
6400b517:	mov    DWORD PTR [esp+0x3c],ebx
6400b51b:	call   0x6400aa90
6400b520:	push   ebx
6400b521:	push   ebx
6400b522:	mov    DWORD PTR [esp+0x74],ebx
6400b526:	call   DWORD PTR ds:0x640261d0
6400b52c:	test   eax,eax
6400b52e:	jge    0x6400b583
6400b530:	mov    esi,DWORD PTR [esp+0x18]
6400b534:	cmp    esi,ebx
6400b536:	mov    DWORD PTR [ebp+0x0],esi
6400b539:	je     0x6400b823
6400b53f:	lea    edi,[esi+0x8]
6400b542:	push   edi
6400b543:	call   DWORD PTR ds:0x64026020
6400b549:	push   edi
6400b54a:	call   DWORD PTR ds:0x64026098
6400b550:	test   eax,eax
6400b552:	jne    0x6400b823
6400b558:	mov    eax,DWORD PTR [esi]
6400b55a:	cmp    eax,ebx
6400b55c:	je     0x6400b565
6400b55e:	push   eax
6400b55f:	call   DWORD PTR ds:0x640261a0
6400b565:	mov    eax,DWORD PTR [esi+0x4]
6400b568:	cmp    eax,ebx
6400b56a:	je     0x6400b575
6400b56c:	push   eax
6400b56d:	call   0x64014664
6400b572:	add    esp,0x4
6400b575:	push   esi
6400b576:	call   0x64013712
6400b57b:	add    esp,0x4
6400b57e:	jmp    0x6400b823
6400b583:	lea    ecx,[esp+0x20]
6400b587:	push   ecx
6400b588:	push   0x64026a50
6400b58d:	push   0x1
6400b58f:	push   ebx
6400b590:	push   0x64026b20
6400b595:	mov    DWORD PTR [esp+0x34],ebx
6400b599:	call   DWORD PTR ds:0x640261dc
6400b59f:	cmp    eax,ebx
6400b5a1:	jl     0x6400b7ff
6400b5a7:	push   0x6402a198
6400b5ac:	push   0xa
6400b5ae:	push   0x6402a1c4
6400b5b3:	mov    DWORD PTR [esp+0x28],ebx
6400b5b7:	call   0x64006b30
6400b5bc:	add    esp,0xc
6400b5bf:	lea    edx,[esp+0x30]
6400b5c3:	push   edx
6400b5c4:	mov    edi,eax
6400b5c6:	call   0x6400aa90
6400b5cb:	mov    BYTE PTR [esp+0x6c],0x1
6400b5d0:	mov    eax,DWORD PTR [eax]
6400b5d2:	cmp    eax,ebx
6400b5d4:	je     0x6400b5da
6400b5d6:	mov    eax,DWORD PTR [eax]
6400b5d8:	jmp    0x6400b5dc
6400b5da:	xor    eax,eax
6400b5dc:	mov    ecx,DWORD PTR [esp+0x20]
6400b5e0:	mov    edx,DWORD PTR [ecx]
6400b5e2:	lea    esi,[esp+0x1c]
6400b5e6:	push   esi
6400b5e7:	push   ebx
6400b5e8:	push   ebx
6400b5e9:	push   ebx
6400b5ea:	push   ebx
6400b5eb:	push   ebx
6400b5ec:	push   ebx
6400b5ed:	push   eax
6400b5ee:	mov    eax,DWORD PTR [edx+0xc]
6400b5f1:	push   ecx
6400b5f2:	call   eax
6400b5f4:	lea    edi,[esp+0x30]
6400b5f8:	mov    esi,eax
6400b5fa:	mov    BYTE PTR [esp+0x6c],bl
6400b5fe:	call   0x6400ab30
6400b603:	cmp    esi,ebx
6400b605:	jge    0x6400b610
6400b607:	mov    eax,DWORD PTR [esp+0x20]
6400b60b:	jmp    0x6400b7f7
6400b610:	mov    eax,DWORD PTR [esp+0x1c]
6400b614:	push   ebx
6400b615:	push   ebx
6400b616:	push   0x3
6400b618:	push   0x3
6400b61a:	push   ebx
6400b61b:	push   ebx
6400b61c:	push   0xa
6400b61e:	push   eax
6400b61f:	call   0x6400ff80
6400b624:	call   eax
6400b626:	cmp    eax,ebx
6400b628:	jge    0x6400b63f
6400b62a:	mov    eax,DWORD PTR [esp+0x1c]
6400b62e:	mov    ecx,DWORD PTR [eax]
6400b630:	mov    edx,DWORD PTR [ecx+0x8]
6400b633:	push   eax
6400b634:	call   edx
6400b636:	mov    eax,DWORD PTR [esp+0x20]
6400b63a:	jmp    0x6400b7f7
6400b63f:	push   0x6402a1dc
6400b644:	push   0xe
6400b646:	push   0x6402a218
6400b64b:	mov    DWORD PTR [esp+0x30],ebx
6400b64f:	call   0x64006840
6400b654:	add    esp,0xc
6400b657:	push   eax
6400b658:	lea    ebx,[esp+0x3c]
6400b65c:	call   0x6400aa00
6400b661:	mov    ecx,DWORD PTR [esp+0x78]
6400b665:	push   ecx
6400b666:	lea    edx,[esp+0x38]
6400b66a:	push   edx
6400b66b:	push   eax
6400b66c:	mov    BYTE PTR [esp+0x78],0x2
6400b671:	call   0x6400ad50
6400b676:	mov    esi,eax
6400b678:	push   0x6402a228
6400b67d:	push   0x3
6400b67f:	push   0x6402a250
6400b684:	mov    BYTE PTR [esp+0x78],0x3
6400b689:	call   0x64006840
6400b68e:	add    esp,0xc
6400b691:	push   eax
6400b692:	lea    ebx,[esp+0x34]
6400b696:	call   0x6400aa00
6400b69b:	mov    BYTE PTR [esp+0x6c],0x4
6400b6a0:	mov    ecx,DWORD PTR [esi]
6400b6a2:	xor    ebx,ebx
6400b6a4:	cmp    ecx,ebx
6400b6a6:	je     0x6400b6ac
6400b6a8:	mov    ecx,DWORD PTR [ecx]
6400b6aa:	jmp    0x6400b6ae
6400b6ac:	xor    ecx,ecx
6400b6ae:	mov    eax,DWORD PTR [eax]
6400b6b0:	cmp    eax,ebx
6400b6b2:	je     0x6400b6b8
6400b6b4:	mov    edx,DWORD PTR [eax]
6400b6b6:	jmp    0x6400b6ba
6400b6b8:	xor    edx,edx
6400b6ba:	mov    eax,DWORD PTR [esp+0x1c]
6400b6be:	mov    esi,DWORD PTR [eax]
6400b6c0:	lea    edi,[esp+0x24]
6400b6c4:	push   edi
6400b6c5:	push   ebx
6400b6c6:	push   0x30
6400b6c8:	push   ecx
6400b6c9:	push   edx
6400b6ca:	push   eax
6400b6cb:	mov    eax,DWORD PTR [esi+0x50]
6400b6ce:	call   eax
6400b6d0:	lea    edi,[esp+0x30]
6400b6d4:	mov    esi,eax
6400b6d6:	call   0x6400ab30
6400b6db:	lea    edi,[esp+0x34]
6400b6df:	call   0x6400ab30
6400b6e4:	lea    edi,[esp+0x38]
6400b6e8:	mov    BYTE PTR [esp+0x6c],bl
6400b6ec:	call   0x6400ab30
6400b6f1:	cmp    esi,ebx
6400b6f3:	jge    0x6400b70a
6400b6f5:	mov    eax,DWORD PTR [esp+0x1c]
6400b6f9:	mov    ecx,DWORD PTR [eax]
6400b6fb:	mov    edx,DWORD PTR [ecx+0x8]
6400b6fe:	push   eax
6400b6ff:	call   edx
6400b701:	mov    eax,DWORD PTR [esp+0x20]
6400b705:	jmp    0x6400b7f7
6400b70a:	mov    eax,DWORD PTR [esp+0x24]
6400b70e:	cmp    eax,ebx
6400b710:	mov    DWORD PTR [esp+0x2c],ebx
6400b714:	je     0x6400b7cf
6400b71a:	mov    edi,DWORD PTR ds:0x64026190
6400b720:	mov    ecx,DWORD PTR [eax]
6400b722:	lea    edx,[esp+0x2c]
6400b726:	push   edx
6400b727:	lea    edx,[esp+0x2c]
6400b72b:	push   edx
6400b72c:	push   0x1
6400b72e:	push   0xffffffff
6400b730:	push   eax
6400b731:	mov    eax,DWORD PTR [ecx+0x10]
6400b734:	call   eax
6400b736:	cmp    DWORD PTR [esp+0x2c],ebx
6400b73a:	je     0x6400b7cf
6400b740:	mov    esi,DWORD PTR [esp+0x28]
6400b744:	mov    eax,DWORD PTR [esp+0x7c]
6400b748:	mov    ebp,DWORD PTR [esi]
6400b74a:	push   ebx
6400b74b:	push   ebx
6400b74c:	lea    ecx,[esp+0x44]
6400b750:	push   ecx
6400b751:	push   ebx
6400b752:	call   0x6400add0
6400b757:	mov    edx,DWORD PTR [ebp+0x10]
6400b75a:	push   eax
6400b75b:	push   esi
6400b75c:	call   edx
6400b75e:	cmp    eax,ebx
6400b760:	jl     0x6400b76a
6400b762:	cmp    WORD PTR [esp+0x3c],0x8
6400b768:	je     0x6400b78b
6400b76a:	lea    eax,[esp+0x3c]
6400b76e:	push   eax
6400b76f:	call   edi
6400b771:	mov    eax,DWORD PTR [esp+0x28]
6400b775:	mov    ecx,DWORD PTR [eax]
6400b777:	mov    edx,DWORD PTR [ecx+0x8]
6400b77a:	push   eax
6400b77b:	call   edx
6400b77d:	mov    eax,DWORD PTR [esp+0x24]
6400b781:	cmp    eax,ebx
6400b783:	mov    ebp,DWORD PTR [esp+0x74]
6400b787:	jne    0x6400b720
6400b789:	jmp    0x6400b7cf
6400b78b:	lea    eax,[esp+0x4c]
6400b78f:	push   eax
6400b790:	call   DWORD PTR ds:0x64026188
6400b796:	lea    ecx,[esp+0x3c]
6400b79a:	push   ecx
6400b79b:	lea    edx,[esp+0x50]
6400b79f:	push   edx
6400b7a0:	call   DWORD PTR ds:0x6402618c
6400b7a6:	cmp    eax,ebx
6400b7a8:	jge    0x6400b7b0
6400b7aa:	push   eax
6400b7ab:	call   0x6401ff30
6400b7b0:	lea    esi,[esp+0x4c]
6400b7b4:	lea    ecx,[esp+0x18]
6400b7b8:	mov    BYTE PTR [esp+0x6c],0x5
6400b7bd:	call   0x6400aeb0
6400b7c2:	mov    eax,esi
6400b7c4:	push   eax
6400b7c5:	mov    BYTE PTR [esp+0x70],bl
6400b7c9:	call   edi
6400b7cb:	mov    ebp,DWORD PTR [esp+0x74]
6400b7cf:	mov    eax,DWORD PTR [esp+0x1c]
6400b7d3:	mov    ecx,DWORD PTR [eax]
6400b7d5:	mov    edx,DWORD PTR [ecx+0x8]
6400b7d8:	push   eax
6400b7d9:	call   edx
6400b7db:	mov    eax,DWORD PTR [esp+0x20]
6400b7df:	mov    ecx,DWORD PTR [eax]
6400b7e1:	mov    edx,DWORD PTR [ecx+0x8]
6400b7e4:	push   eax
6400b7e5:	call   edx
6400b7e7:	mov    eax,DWORD PTR [esp+0x24]
6400b7eb:	mov    ecx,DWORD PTR [eax]
6400b7ed:	mov    edx,DWORD PTR [ecx+0x8]
6400b7f0:	push   eax
6400b7f1:	call   edx
6400b7f3:	mov    eax,DWORD PTR [esp+0x28]
6400b7f7:	mov    ecx,DWORD PTR [eax]
6400b7f9:	mov    edx,DWORD PTR [ecx+0x8]
6400b7fc:	push   eax
6400b7fd:	call   edx
6400b7ff:	call   DWORD PTR ds:0x640261d4
6400b805:	mov    eax,DWORD PTR [esp+0x18]
6400b809:	cmp    eax,ebx
6400b80b:	mov    DWORD PTR [ebp+0x0],eax
6400b80e:	je     0x6400b81a
6400b810:	add    eax,0x8
6400b813:	push   eax
6400b814:	call   DWORD PTR ds:0x64026020
6400b81a:	lea    edi,[esp+0x18]
6400b81e:	call   0x6400ab30
6400b823:	mov    eax,ebp
6400b825:	mov    ecx,DWORD PTR [esp+0x64]
6400b829:	mov    DWORD PTR fs:0x0,ecx
6400b830:	pop    ecx
6400b831:	pop    edi
6400b832:	pop    esi
6400b833:	pop    ebp
6400b834:	pop    ebx
6400b835:	add    esp,0x5c
6400b838:	ret    
6400b839:	int3   
6400b83a:	int3   
6400b83b:	int3   
6400b83c:	int3   
6400b83d:	int3   
6400b83e:	int3   
6400b83f:	int3   
6400b840:	push   ebp
6400b841:	mov    ebp,esp
6400b843:	and    esp,0xfffffff8
6400b846:	push   0xffffffff
6400b848:	push   0x64024e68
6400b84d:	mov    eax,fs:0x0
6400b853:	push   eax
6400b854:	sub    esp,0x14
6400b857:	push   esi
6400b858:	push   edi
6400b859:	mov    eax,ds:0x6402f09c
6400b85e:	xor    eax,esp
6400b860:	push   eax
6400b861:	lea    eax,[esp+0x20]
6400b865:	mov    fs:0x0,eax
6400b86b:	mov    DWORD PTR [esp+0x18],0x0
6400b873:	call   DWORD PTR ds:0x6402f06c
6400b879:	push   0x6402a254
6400b87e:	push   0xc
6400b880:	push   0x6402a288
6400b885:	call   0x64006b30
6400b88a:	add    esp,0xc
6400b88d:	lea    ecx,[esp+0x14]
6400b891:	push   ecx
6400b892:	mov    edi,eax
6400b894:	call   0x6400aa90
6400b899:	push   0x6402a2a4
6400b89e:	push   0x15
6400b8a0:	push   0x6402a2d4
6400b8a5:	mov    DWORD PTR [esp+0x34],0x0
6400b8ad:	call   0x64006b30
6400b8b2:	add    esp,0xc
6400b8b5:	lea    edx,[esp+0x10]
6400b8b9:	push   edx
6400b8ba:	mov    edi,eax
6400b8bc:	call   0x6400aa90
6400b8c1:	lea    eax,[esp+0x14]
6400b8c5:	push   eax
6400b8c6:	lea    ecx,[esp+0x14]
6400b8ca:	push   ecx
6400b8cb:	lea    edx,[esp+0x20]
6400b8cf:	push   edx
6400b8d0:	mov    BYTE PTR [esp+0x34],0x1
6400b8d5:	call   0x6400b4e0
6400b8da:	add    esp,0xc
6400b8dd:	mov    esi,DWORD PTR [esp+0x10]
6400b8e1:	test   esi,esi
6400b8e3:	je     0x6400b919
6400b8e5:	lea    eax,[esi+0x8]
6400b8e8:	push   eax
6400b8e9:	call   DWORD PTR ds:0x64026098
6400b8ef:	test   eax,eax
6400b8f1:	jne    0x6400b919
6400b8f3:	mov    eax,DWORD PTR [esi]
6400b8f5:	test   eax,eax
6400b8f7:	je     0x6400b900
6400b8f9:	push   eax
6400b8fa:	call   DWORD PTR ds:0x640261a0
6400b900:	mov    eax,DWORD PTR [esi+0x4]
6400b903:	test   eax,eax
6400b905:	je     0x6400b910
6400b907:	push   eax
6400b908:	call   0x64014664
6400b90d:	add    esp,0x4
6400b910:	push   esi
6400b911:	call   0x64013712
6400b916:	add    esp,0x4
6400b919:	mov    BYTE PTR [esp+0x28],0x4
6400b91e:	mov    esi,DWORD PTR [esp+0x14]
6400b922:	test   esi,esi
6400b924:	je     0x6400b95a
6400b926:	lea    ecx,[esi+0x8]
6400b929:	push   ecx
6400b92a:	call   DWORD PTR ds:0x64026098
6400b930:	test   eax,eax
6400b932:	jne    0x6400b95a
6400b934:	mov    eax,DWORD PTR [esi]
6400b936:	test   eax,eax
6400b938:	je     0x6400b941
6400b93a:	push   eax
6400b93b:	call   DWORD PTR ds:0x640261a0
6400b941:	mov    eax,DWORD PTR [esi+0x4]
6400b944:	test   eax,eax
6400b946:	je     0x6400b951
6400b948:	push   eax
6400b949:	call   0x64014664
6400b94e:	add    esp,0x4
6400b951:	push   esi
6400b952:	call   0x64013712
6400b957:	add    esp,0x4
6400b95a:	mov    esi,DWORD PTR [esp+0x18]
6400b95e:	test   esi,esi
6400b960:	je     0x6400b966
6400b962:	mov    eax,DWORD PTR [esi]
6400b964:	jmp    0x6400b968
6400b966:	xor    eax,eax
6400b968:	mov    edi,DWORD PTR [ebp+0x8]
6400b96b:	push   eax
6400b96c:	mov    ecx,edi
6400b96e:	call   0x64002550
6400b973:	test   esi,esi
6400b975:	je     0x6400b9ab
6400b977:	lea    edx,[esi+0x8]
6400b97a:	push   edx
6400b97b:	call   DWORD PTR ds:0x64026098
6400b981:	test   eax,eax
6400b983:	jne    0x6400b9ab
6400b985:	mov    eax,DWORD PTR [esi]
6400b987:	test   eax,eax
6400b989:	je     0x6400b992
6400b98b:	push   eax
6400b98c:	call   DWORD PTR ds:0x640261a0
6400b992:	mov    eax,DWORD PTR [esi+0x4]
6400b995:	test   eax,eax
6400b997:	je     0x6400b9a2
6400b999:	push   eax
6400b99a:	call   0x64014664
6400b99f:	add    esp,0x4
6400b9a2:	push   esi
6400b9a3:	call   0x64013712
6400b9a8:	add    esp,0x4
6400b9ab:	mov    eax,edi
6400b9ad:	mov    ecx,DWORD PTR [esp+0x20]
6400b9b1:	mov    DWORD PTR fs:0x0,ecx
6400b9b8:	pop    ecx
6400b9b9:	pop    edi
6400b9ba:	pop    esi
6400b9bb:	mov    esp,ebp
6400b9bd:	pop    ebp
6400b9be:	ret    
6400b9bf:	int3   
6400b9c0:	mov    ecx,DWORD PTR [eax]
6400b9c2:	push   ecx
6400b9c3:	call   0x64013712
6400b9c8:	pop    ecx
6400b9c9:	ret    
6400b9ca:	int3   
6400b9cb:	int3   
6400b9cc:	int3   
6400b9cd:	int3   
6400b9ce:	int3   
6400b9cf:	int3   
6400b9d0:	push   ebp
6400b9d1:	mov    ebp,esp
6400b9d3:	and    esp,0xfffffff8
6400b9d6:	sub    esp,0x8
6400b9d9:	push   ebx
6400b9da:	mov    ebx,DWORD PTR [esi+0x4]
6400b9dd:	test   ebx,ebx
6400b9df:	push   edi
6400b9e0:	jne    0x6400b9e6
6400b9e2:	xor    edi,edi
6400b9e4:	jmp    0x6400b9fe
6400b9e6:	mov    ecx,DWORD PTR [esi+0x8]
6400b9e9:	sub    ecx,ebx
6400b9eb:	mov    eax,0x92492493
6400b9f0:	imul   ecx
6400b9f2:	add    edx,ecx
6400b9f4:	sar    edx,0x4
6400b9f7:	mov    edi,edx
6400b9f9:	shr    edi,0x1f
6400b9fc:	add    edi,edx
6400b9fe:	test   ebx,ebx
6400ba00:	je     0x6400ba51
6400ba02:	mov    ecx,DWORD PTR [esi+0xc]
6400ba05:	sub    ecx,ebx
6400ba07:	mov    eax,0x92492493
6400ba0c:	imul   ecx
6400ba0e:	add    edx,ecx
6400ba10:	sar    edx,0x4
6400ba13:	mov    eax,edx
6400ba15:	shr    eax,0x1f
6400ba18:	add    eax,edx
6400ba1a:	cmp    edi,eax
6400ba1c:	jae    0x6400ba51
6400ba1e:	mov    edx,DWORD PTR [ebp+0x8]
6400ba21:	mov    edi,DWORD PTR [esi+0x8]
6400ba24:	mov    BYTE PTR [esp+0x8],0x0
6400ba29:	mov    eax,DWORD PTR [esp+0x8]
6400ba2d:	mov    ecx,DWORD PTR [esp+0x8]
6400ba31:	push   eax
6400ba32:	push   ecx
6400ba33:	push   esi
6400ba34:	push   edx
6400ba35:	push   edi
6400ba36:	mov    ecx,0x1
6400ba3b:	call   0x6400c070
6400ba40:	add    esp,0x14
6400ba43:	add    edi,0x1c
6400ba46:	mov    DWORD PTR [esi+0x8],edi
6400ba49:	pop    edi
6400ba4a:	pop    ebx
6400ba4b:	mov    esp,ebp
6400ba4d:	pop    ebp
6400ba4e:	ret    0x4
6400ba51:	mov    edi,DWORD PTR [esi+0x8]
6400ba54:	cmp    ebx,edi
6400ba56:	jbe    0x6400ba5d
6400ba58:	call   0x64013ac8
6400ba5d:	mov    eax,DWORD PTR [ebp+0x8]
6400ba60:	push   edi
6400ba61:	push   esi
6400ba62:	push   eax
6400ba63:	lea    ecx,[esp+0x14]
6400ba67:	push   ecx
6400ba68:	mov    eax,esi
6400ba6a:	call   0x6400bab0
6400ba6f:	pop    edi
6400ba70:	pop    ebx
6400ba71:	mov    esp,ebp
6400ba73:	pop    ebp
6400ba74:	ret    0x4
6400ba77:	int3   
6400ba78:	int3   
6400ba79:	int3   
6400ba7a:	int3   
6400ba7b:	int3   
6400ba7c:	int3   
6400ba7d:	int3   
6400ba7e:	int3   
6400ba7f:	int3   
6400ba80:	mov    eax,DWORD PTR [ecx+0x4]
6400ba83:	test   eax,eax
6400ba85:	jne    0x6400ba88
6400ba87:	ret    
6400ba88:	mov    ecx,DWORD PTR [ecx+0x8]
6400ba8b:	sub    ecx,eax
6400ba8d:	mov    eax,0x92492493
6400ba92:	imul   ecx
6400ba94:	add    edx,ecx
6400ba96:	sar    edx,0x4
6400ba99:	mov    eax,edx
6400ba9b:	shr    eax,0x1f
6400ba9e:	add    eax,edx
6400baa0:	ret    
6400baa1:	int3   
6400baa2:	int3   
6400baa3:	int3   
6400baa4:	int3   
6400baa5:	int3   
6400baa6:	int3   
6400baa7:	int3   
6400baa8:	int3   
6400baa9:	int3   
6400baaa:	int3   
6400baab:	int3   
6400baac:	int3   
6400baad:	int3   
6400baae:	int3   
6400baaf:	int3   
6400bab0:	push   ecx
6400bab1:	push   ebx
6400bab2:	push   ebp
6400bab3:	mov    ebp,DWORD PTR [esp+0x1c]
6400bab7:	push   esi
6400bab8:	mov    esi,eax
6400baba:	push   edi
6400babb:	mov    edi,DWORD PTR [esi+0x4]
6400babe:	test   edi,edi
6400bac0:	je     0x6400bade
6400bac2:	mov    ebx,DWORD PTR [esi+0x8]
6400bac5:	mov    ecx,ebx
6400bac7:	sub    ecx,edi
6400bac9:	mov    eax,0x92492493
6400bace:	imul   ecx
6400bad0:	add    edx,ecx
6400bad2:	sar    edx,0x4
6400bad5:	mov    eax,edx
6400bad7:	shr    eax,0x1f
6400bada:	add    eax,edx
6400badc:	jne    0x6400bae6
6400bade:	mov    ebx,DWORD PTR [esp+0x20]
6400bae2:	xor    edi,edi
6400bae4:	jmp    0x6400bb17
6400bae6:	cmp    edi,ebx
6400bae8:	jbe    0x6400baef
6400baea:	call   0x64013ac8
6400baef:	mov    ebx,DWORD PTR [esp+0x20]
6400baf3:	test   ebx,ebx
6400baf5:	je     0x6400bafb
6400baf7:	cmp    ebx,esi
6400baf9:	je     0x6400bb00
6400bafb:	call   0x64013ac8
6400bb00:	mov    ecx,ebp
6400bb02:	sub    ecx,edi
6400bb04:	mov    eax,0x92492493
6400bb09:	imul   ecx
6400bb0b:	add    edx,ecx
6400bb0d:	sar    edx,0x4
6400bb10:	mov    edi,edx
6400bb12:	shr    edi,0x1f
6400bb15:	add    edi,edx
6400bb17:	mov    ecx,DWORD PTR [esp+0x1c]
6400bb1b:	push   ebp
6400bb1c:	push   ebx
6400bb1d:	push   ecx
6400bb1e:	mov    ecx,esi
6400bb20:	call   0x6400bba0
6400bb25:	mov    ebx,DWORD PTR [esi+0x4]
6400bb28:	cmp    ebx,DWORD PTR [esi+0x8]
6400bb2b:	jbe    0x6400bb32
6400bb2d:	call   0x64013ac8
6400bb32:	lea    edx,[edi*8+0x0]
6400bb39:	sub    edx,edi
6400bb3b:	lea    edi,[ebx+edx*4]
6400bb3e:	cmp    edi,DWORD PTR [esi+0x8]
6400bb41:	mov    DWORD PTR [esp+0x24],ebx
6400bb45:	ja     0x6400bb4c
6400bb47:	cmp    edi,DWORD PTR [esi+0x4]
6400bb4a:	jae    0x6400bb51
6400bb4c:	call   0x64013ac8
6400bb51:	mov    eax,DWORD PTR [esp+0x18]
6400bb55:	mov    DWORD PTR [eax+0x4],edi
6400bb58:	pop    edi
6400bb59:	mov    DWORD PTR [eax],esi
6400bb5b:	pop    esi
6400bb5c:	pop    ebp
6400bb5d:	pop    ebx
6400bb5e:	pop    ecx
6400bb5f:	ret    0x10
6400bb62:	int3   
6400bb63:	int3   
6400bb64:	int3   
6400bb65:	int3   
6400bb66:	int3   
6400bb67:	int3   
6400bb68:	int3   
6400bb69:	int3   
6400bb6a:	int3   
6400bb6b:	int3   
6400bb6c:	int3   
6400bb6d:	int3   
6400bb6e:	int3   
6400bb6f:	int3   
6400bb70:	push   ecx
6400bb71:	mov    ecx,DWORD PTR [esp+0x8]
6400bb75:	mov    BYTE PTR [esp],0x0
6400bb79:	mov    eax,DWORD PTR [esp]
6400bb7c:	push   eax
6400bb7d:	mov    eax,DWORD PTR [esp+0xc]
6400bb81:	push   ecx
6400bb82:	push   edx
6400bb83:	push   eax
6400bb84:	push   edi
6400bb85:	mov    ecx,esi
6400bb87:	call   0x6400c070
6400bb8c:	lea    ecx,[esi*8+0x0]
6400bb93:	sub    ecx,esi
6400bb95:	lea    eax,[edi+ecx*4]
6400bb98:	add    esp,0x18
6400bb9b:	ret    0x4
6400bb9e:	int3   
6400bb9f:	int3   
6400bba0:	push   ebp
6400bba1:	mov    ebp,esp
6400bba3:	push   0xffffffff
6400bba5:	push   0x64023fa8
6400bbaa:	mov    eax,fs:0x0
6400bbb0:	push   eax
6400bbb1:	sub    esp,0x34
6400bbb4:	mov    eax,ds:0x6402f09c
6400bbb9:	xor    eax,ebp
6400bbbb:	mov    DWORD PTR [ebp-0x14],eax
6400bbbe:	push   ebx
6400bbbf:	push   esi
6400bbc0:	push   edi
6400bbc1:	push   eax
6400bbc2:	lea    eax,[ebp-0xc]
6400bbc5:	mov    fs:0x0,eax
6400bbcb:	mov    DWORD PTR [ebp-0x10],esp
6400bbce:	mov    eax,DWORD PTR [ebp+0x8]
6400bbd1:	push   0xffffffff
6400bbd3:	xor    edi,edi
6400bbd5:	mov    ebx,ecx
6400bbd7:	push   edi
6400bbd8:	push   eax
6400bbd9:	lea    ecx,[ebp-0x30]
6400bbdc:	mov    DWORD PTR [ebp-0x3c],ebx
6400bbdf:	mov    DWORD PTR [ebp-0x18],0xf
6400bbe6:	mov    DWORD PTR [ebp-0x1c],edi
6400bbe9:	mov    BYTE PTR [ebp-0x2c],0x0
6400bbed:	call   0x640017a0
6400bbf2:	mov    DWORD PTR [ebp-0x4],edi
6400bbf5:	mov    ecx,DWORD PTR [ebx+0x4]
6400bbf8:	cmp    ecx,edi
6400bbfa:	je     0x6400bc14
6400bbfc:	mov    esi,DWORD PTR [ebx+0xc]
6400bbff:	sub    esi,ecx
6400bc01:	mov    eax,0x92492493
6400bc06:	imul   esi
6400bc08:	add    edx,esi
6400bc0a:	sar    edx,0x4
6400bc0d:	mov    edi,edx
6400bc0f:	shr    edi,0x1f
6400bc12:	add    edi,edx
6400bc14:	test   ecx,ecx
6400bc16:	jne    0x6400bc1c
6400bc18:	xor    eax,eax
6400bc1a:	jmp    0x6400bc34
6400bc1c:	mov    esi,DWORD PTR [ebx+0x8]
6400bc1f:	sub    esi,ecx
6400bc21:	mov    eax,0x92492493
6400bc26:	imul   esi
6400bc28:	add    edx,esi
6400bc2a:	sar    edx,0x4
6400bc2d:	mov    eax,edx
6400bc2f:	shr    eax,0x1f
6400bc32:	add    eax,edx
6400bc34:	mov    edx,0x9249249
6400bc39:	sub    edx,eax
6400bc3b:	cmp    edx,0x1
6400bc3e:	jae    0x6400bc45
6400bc40:	call   0x6400bee0
6400bc45:	test   ecx,ecx
6400bc47:	jne    0x6400bc4d
6400bc49:	xor    eax,eax
6400bc4b:	jmp    0x6400bc65
6400bc4d:	mov    esi,DWORD PTR [ebx+0x8]
6400bc50:	sub    esi,ecx
6400bc52:	mov    eax,0x92492493
6400bc57:	imul   esi
6400bc59:	add    edx,esi
6400bc5b:	sar    edx,0x4
6400bc5e:	mov    eax,edx
6400bc60:	shr    eax,0x1f
6400bc63:	add    eax,edx
6400bc65:	add    eax,0x1
6400bc68:	cmp    edi,eax
6400bc6a:	jae    0x6400bdc6
6400bc70:	mov    eax,edi
6400bc72:	shr    eax,1
6400bc74:	mov    edx,0x9249249
6400bc79:	sub    edx,eax
6400bc7b:	cmp    edx,edi
6400bc7d:	jae    0x6400bc83
6400bc7f:	xor    edi,edi
6400bc81:	jmp    0x6400bc85
6400bc83:	add    edi,eax
6400bc85:	test   ecx,ecx
6400bc87:	jne    0x6400bc8d
6400bc89:	xor    eax,eax
6400bc8b:	jmp    0x6400bca5
6400bc8d:	mov    esi,DWORD PTR [ebx+0x8]
6400bc90:	sub    esi,ecx
6400bc92:	mov    eax,0x92492493
6400bc97:	imul   esi
6400bc99:	add    edx,esi
6400bc9b:	sar    edx,0x4
6400bc9e:	mov    eax,edx
6400bca0:	shr    eax,0x1f
6400bca3:	add    eax,edx
6400bca5:	add    eax,0x1
6400bca8:	cmp    edi,eax
6400bcaa:	jae    0x6400bcb8
6400bcac:	mov    ecx,ebx
6400bcae:	call   0x6400ba80
6400bcb3:	mov    edi,eax
6400bcb5:	add    edi,0x1
6400bcb8:	push   0x0
6400bcba:	push   edi
6400bcbb:	call   0x6400c000
6400bcc0:	mov    BYTE PTR [ebp-0x4],0x1
6400bcc4:	mov    ecx,DWORD PTR [ebx+0x4]
6400bcc7:	mov    BYTE PTR [ebp-0x34],0x0
6400bccb:	mov    edx,DWORD PTR [ebp-0x34]
6400bcce:	push   edx
6400bccf:	mov    edx,DWORD PTR [ebp-0x34]
6400bcd2:	push   edx
6400bcd3:	mov    edx,DWORD PTR [ebp+0x10]
6400bcd6:	push   ebx
6400bcd7:	push   edx
6400bcd8:	mov    edx,eax
6400bcda:	mov    DWORD PTR [ebp-0x40],eax
6400bcdd:	mov    DWORD PTR [ebp-0x38],eax
6400bce0:	call   0x6400c190
6400bce5:	add    esp,0x18
6400bce8:	mov    esi,eax
6400bcea:	mov    BYTE PTR [ebp-0x34],0x0
6400bcee:	mov    eax,DWORD PTR [ebp-0x34]
6400bcf1:	mov    ecx,DWORD PTR [ebp-0x34]
6400bcf4:	push   eax
6400bcf5:	push   ecx
6400bcf6:	push   ebx
6400bcf7:	lea    edx,[ebp-0x30]
6400bcfa:	push   edx
6400bcfb:	push   esi
6400bcfc:	mov    ecx,0x1
6400bd01:	mov    DWORD PTR [ebp-0x38],esi
6400bd04:	call   0x6400c070
6400bd09:	mov    eax,DWORD PTR [ebx+0x8]
6400bd0c:	add    esp,0x14
6400bd0f:	mov    BYTE PTR [ebp-0x34],0x0
6400bd13:	mov    ecx,DWORD PTR [ebp-0x34]
6400bd16:	mov    edx,DWORD PTR [ebp-0x34]
6400bd19:	push   ecx
6400bd1a:	mov    ecx,DWORD PTR [ebp+0x10]
6400bd1d:	push   edx
6400bd1e:	add    esi,0x1c
6400bd21:	push   ebx
6400bd22:	push   eax
6400bd23:	mov    edx,esi
6400bd25:	mov    DWORD PTR [ebp-0x38],esi
6400bd28:	call   0x6400c190
6400bd2d:	mov    esi,DWORD PTR [ebx+0x4]
6400bd30:	add    esp,0x10
6400bd33:	test   esi,esi
6400bd35:	jne    0x6400bd3b
6400bd37:	xor    eax,eax
6400bd39:	jmp    0x6400bd53
6400bd3b:	mov    ecx,DWORD PTR [ebx+0x8]
6400bd3e:	sub    ecx,esi
6400bd40:	mov    eax,0x92492493
6400bd45:	imul   ecx
6400bd47:	add    edx,ecx
6400bd49:	sar    edx,0x4
6400bd4c:	mov    eax,edx
6400bd4e:	shr    eax,0x1f
6400bd51:	add    eax,edx
6400bd53:	add    eax,0x1
6400bd56:	test   esi,esi
6400bd58:	mov    DWORD PTR [ebp-0x34],eax
6400bd5b:	je     0x6400bd7b
6400bd5d:	mov    eax,DWORD PTR [ebp-0x34]
6400bd60:	mov    ecx,DWORD PTR [ebx+0x8]
6400bd63:	push   eax
6400bd64:	push   ebx
6400bd65:	push   ecx
6400bd66:	push   esi
6400bd67:	call   0x6400c120
6400bd6c:	mov    edx,DWORD PTR [ebx+0x4]
6400bd6f:	push   edx
6400bd70:	call   0x64013712
6400bd75:	mov    eax,DWORD PTR [ebp-0x34]
6400bd78:	add    esp,0x14
6400bd7b:	mov    ecx,DWORD PTR [ebp-0x40]
6400bd7e:	lea    edx,[edi*8+0x0]
6400bd85:	sub    edx,edi
6400bd87:	lea    edx,[ecx+edx*4]
6400bd8a:	mov    DWORD PTR [ebx+0xc],edx
6400bd8d:	lea    edx,[eax*8+0x0]
6400bd94:	sub    edx,eax
6400bd96:	lea    eax,[ecx+edx*4]
6400bd99:	mov    DWORD PTR [ebx+0x8],eax
6400bd9c:	mov    DWORD PTR [ebx+0x4],ecx
6400bd9f:	jmp    0x6400be82
6400bda4:	mov    ecx,DWORD PTR [ebp-0x38]
6400bda7:	mov    esi,DWORD PTR [ebp-0x40]
6400bdaa:	push   ecx
6400bdab:	mov    ecx,DWORD PTR [ebp-0x3c]
6400bdae:	push   esi
6400bdaf:	call   0x6400bec0
6400bdb4:	push   esi
6400bdb5:	call   0x64013712
6400bdba:	add    esp,0x4
6400bdbd:	push   0x0
6400bdbf:	push   0x0
6400bdc1:	call   0x64013b5b
6400bdc6:	mov    edi,DWORD PTR [ebx+0x8]
6400bdc9:	mov    esi,DWORD PTR [ebp+0x10]
6400bdcc:	mov    ecx,edi
6400bdce:	sub    ecx,esi
6400bdd0:	mov    eax,0x92492493
6400bdd5:	imul   ecx
6400bdd7:	add    edx,ecx
6400bdd9:	sar    edx,0x4
6400bddc:	mov    eax,edx
6400bdde:	shr    eax,0x1f
6400bde1:	add    eax,edx
6400bde3:	cmp    eax,0x1
6400bde6:	mov    edx,ebx
6400bde8:	jae    0x6400be5a
6400bdea:	lea    ecx,[esi+0x1c]
6400bded:	push   ecx
6400bdee:	push   edi
6400bdef:	push   esi
6400bdf0:	call   0x6400bf60
6400bdf5:	mov    BYTE PTR [ebp-0x4],0x3
6400bdf9:	mov    edi,DWORD PTR [ebx+0x8]
6400bdfc:	lea    edx,[ebp-0x30]
6400bdff:	push   edx
6400be00:	mov    ecx,edi
6400be02:	sub    ecx,esi
6400be04:	mov    eax,0x92492493
6400be09:	imul   ecx
6400be0b:	add    edx,ecx
6400be0d:	sar    edx,0x4
6400be10:	mov    eax,edx
6400be12:	shr    eax,0x1f
6400be15:	add    eax,edx
6400be17:	mov    esi,0x1
6400be1c:	sub    esi,eax
6400be1e:	mov    edx,ebx
6400be20:	call   0x6400bb70
6400be25:	mov    eax,DWORD PTR [ebp+0x10]
6400be28:	mov    DWORD PTR [ebp-0x4],0x0
6400be2f:	add    DWORD PTR [ebx+0x8],0x1c
6400be33:	mov    ebx,DWORD PTR [ebx+0x8]
6400be36:	lea    edi,[ebx-0x1c]
6400be39:	jmp    0x6400be7a
6400be3b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400be3e:	mov    edx,DWORD PTR [ecx+0x8]
6400be41:	mov    eax,DWORD PTR [ebp+0x10]
6400be44:	add    edx,0x1c
6400be47:	push   edx
6400be48:	add    eax,0x1c
6400be4b:	push   eax
6400be4c:	call   0x6400bec0
6400be51:	push   0x0
6400be53:	push   0x0
6400be55:	call   0x64013b5b
6400be5a:	push   edi
6400be5b:	lea    eax,[edi-0x1c]
6400be5e:	push   edi
6400be5f:	push   eax
6400be60:	mov    DWORD PTR [ebp-0x34],eax
6400be63:	call   0x6400bf60
6400be68:	mov    DWORD PTR [ebx+0x8],eax
6400be6b:	mov    eax,DWORD PTR [ebp-0x34]
6400be6e:	mov    ebx,esi
6400be70:	call   0x6400bfb0
6400be75:	lea    edi,[esi+0x1c]
6400be78:	mov    eax,esi
6400be7a:	lea    ebx,[ebp-0x30]
6400be7d:	call   0x6400bf90
6400be82:	cmp    DWORD PTR [ebp-0x18],0x10
6400be86:	jb     0x6400be94
6400be88:	mov    ecx,DWORD PTR [ebp-0x2c]
6400be8b:	push   ecx
6400be8c:	call   0x64013712
6400be91:	add    esp,0x4
6400be94:	mov    ecx,DWORD PTR [ebp-0xc]
6400be97:	mov    DWORD PTR fs:0x0,ecx
6400be9e:	pop    ecx
6400be9f:	pop    edi
6400bea0:	pop    esi
6400bea1:	pop    ebx
6400bea2:	mov    ecx,DWORD PTR [ebp-0x14]
6400bea5:	xor    ecx,ebp
6400bea7:	call   0x64013f6c
6400beac:	mov    esp,ebp
6400beae:	pop    ebp
6400beaf:	ret    0xc
6400beb2:	int3   
6400beb3:	int3   
6400beb4:	int3   
6400beb5:	int3   
6400beb6:	int3   
6400beb7:	int3   
6400beb8:	int3   
6400beb9:	int3   
6400beba:	int3   
6400bebb:	int3   
6400bebc:	int3   
6400bebd:	int3   
6400bebe:	int3   
6400bebf:	int3   
6400bec0:	mov    eax,DWORD PTR [esp+0x8]
6400bec4:	mov    edx,DWORD PTR [esp+0x4]
6400bec8:	push   eax
6400bec9:	push   ecx
6400beca:	mov    ecx,DWORD PTR [esp+0x10]
6400bece:	push   ecx
6400becf:	push   edx
6400bed0:	call   0x6400c120
6400bed5:	add    esp,0x10
6400bed8:	ret    0x8
6400bedb:	int3   
6400bedc:	int3   
6400bedd:	int3   
6400bede:	int3   
6400bedf:	int3   
6400bee0:	push   ebp
6400bee1:	mov    ebp,esp
6400bee3:	and    esp,0xfffffff8
6400bee6:	push   0xffffffff
6400bee8:	push   0x64023f78
6400beed:	mov    eax,fs:0x0
6400bef3:	push   eax
6400bef4:	sub    esp,0x4c
6400bef7:	mov    eax,ds:0x6402f09c
6400befc:	xor    eax,esp
6400befe:	push   eax
6400beff:	lea    eax,[esp+0x50]
6400bf03:	mov    fs:0x0,eax
6400bf09:	push   0x12
6400bf0b:	push   0x6402a300
6400bf10:	lea    ecx,[esp+0x10]
6400bf14:	mov    DWORD PTR [esp+0x28],0xf
6400bf1c:	mov    DWORD PTR [esp+0x24],0x0
6400bf24:	mov    BYTE PTR [esp+0x14],0x0
6400bf29:	call   0x64001880
6400bf2e:	lea    eax,[esp+0x8]
6400bf32:	push   eax
6400bf33:	lea    ecx,[esp+0x28]
6400bf37:	mov    DWORD PTR [esp+0x5c],0x0
6400bf3f:	call   0x64002cc0
6400bf44:	push   0x6402c940
6400bf49:	lea    ecx,[esp+0x28]
6400bf4d:	push   ecx
6400bf4e:	mov    DWORD PTR [esp+0x2c],0x6402631c
6400bf56:	call   0x64013b5b
6400bf5b:	int3   
6400bf5c:	int3   
6400bf5d:	int3   
6400bf5e:	int3   
6400bf5f:	int3   
6400bf60:	push   ecx
6400bf61:	mov    ecx,DWORD PTR [esp+0xc]
6400bf65:	mov    BYTE PTR [esp],0x0
6400bf69:	mov    eax,DWORD PTR [esp]
6400bf6c:	push   eax
6400bf6d:	mov    eax,DWORD PTR [esp+0x10]
6400bf71:	push   ecx
6400bf72:	mov    ecx,DWORD PTR [esp+0x10]
6400bf76:	push   edx
6400bf77:	mov    edx,DWORD PTR [esp+0x1c]
6400bf7b:	push   eax
6400bf7c:	call   0x6400c190
6400bf81:	add    esp,0x14
6400bf84:	ret    0xc
6400bf87:	int3   
6400bf88:	int3   
6400bf89:	int3   
6400bf8a:	int3   
6400bf8b:	int3   
6400bf8c:	int3   
6400bf8d:	int3   
6400bf8e:	int3   
6400bf8f:	int3   
6400bf90:	push   esi
6400bf91:	mov    esi,eax
6400bf93:	cmp    esi,edi
6400bf95:	je     0x6400bfaa
6400bf97:	push   0xffffffff
6400bf99:	push   0x0
6400bf9b:	push   ebx
6400bf9c:	mov    ecx,esi
6400bf9e:	call   0x640017a0
6400bfa3:	add    esi,0x1c
6400bfa6:	cmp    esi,edi
6400bfa8:	jne    0x6400bf97
6400bfaa:	pop    esi
6400bfab:	ret    
6400bfac:	int3   
6400bfad:	int3   
6400bfae:	int3   
6400bfaf:	int3   
6400bfb0:	push   ecx
6400bfb1:	push   esi
6400bfb2:	mov    esi,eax
6400bfb4:	mov    BYTE PTR [esp+0x4],0x0
6400bfb9:	mov    eax,DWORD PTR [esp+0x4]
6400bfbd:	mov    ecx,DWORD PTR [esp+0x4]
6400bfc1:	mov    edx,DWORD PTR [esp+0x4]
6400bfc5:	push   eax
6400bfc6:	push   ecx
6400bfc7:	push   edx
6400bfc8:	push   edi
6400bfc9:	push   ebx
6400bfca:	mov    ecx,esi
6400bfcc:	call   0x6400c2d0
6400bfd1:	sub    esi,ebx
6400bfd3:	mov    eax,0x92492493
6400bfd8:	imul   esi
6400bfda:	add    edx,esi
6400bfdc:	sar    edx,0x4
6400bfdf:	mov    eax,edx
6400bfe1:	shr    eax,0x1f
6400bfe4:	add    eax,edx
6400bfe6:	lea    ecx,[eax*8+0x0]
6400bfed:	sub    ecx,eax
6400bfef:	add    ecx,ecx
6400bff1:	add    esp,0x14
6400bff4:	add    ecx,ecx
6400bff6:	mov    eax,edi
6400bff8:	sub    eax,ecx
6400bffa:	pop    esi
6400bffb:	pop    ecx
6400bffc:	ret    
6400bffd:	int3   
6400bffe:	int3   
6400bfff:	int3   
6400c000:	mov    ecx,DWORD PTR [esp+0x4]
6400c004:	sub    esp,0xc
6400c007:	test   ecx,ecx
6400c009:	ja     0x6400c027
6400c00b:	xor    ecx,ecx
6400c00d:	lea    edx,[ecx*8+0x0]
6400c014:	sub    edx,ecx
6400c016:	add    edx,edx
6400c018:	add    edx,edx
6400c01a:	push   edx
6400c01b:	call   0x64013af1
6400c020:	add    esp,0x4
6400c023:	add    esp,0xc
6400c026:	ret    
6400c027:	or     eax,0xffffffff
6400c02a:	xor    edx,edx
6400c02c:	div    ecx
6400c02e:	cmp    eax,0x1c
6400c031:	jae    0x6400c00d
6400c033:	lea    eax,[esp+0x10]
6400c037:	push   eax
6400c038:	lea    ecx,[esp+0x4]
6400c03c:	mov    DWORD PTR [esp+0x14],0x0
6400c044:	call   0x6401376d
6400c049:	push   0x6402c874
6400c04e:	lea    ecx,[esp+0x4]
6400c052:	push   ecx
6400c053:	mov    DWORD PTR [esp+0x8],0x64026304
6400c05b:	call   0x64013b5b
6400c060:	int3   
6400c061:	int3   
6400c062:	int3   
6400c063:	int3   
6400c064:	int3   
6400c065:	int3   
6400c066:	int3   
6400c067:	int3   
6400c068:	int3   
6400c069:	int3   
6400c06a:	int3   
6400c06b:	int3   
6400c06c:	int3   
6400c06d:	int3   
6400c06e:	int3   
6400c06f:	int3   
6400c070:	push   ebp
6400c071:	mov    ebp,esp
6400c073:	push   0xffffffff
6400c075:	push   0x64023ac1
6400c07a:	mov    eax,fs:0x0
6400c080:	push   eax
6400c081:	sub    esp,0x10
6400c084:	push   ebx
6400c085:	push   esi
6400c086:	push   edi
6400c087:	mov    eax,ds:0x6402f09c
6400c08c:	xor    eax,ebp
6400c08e:	push   eax
6400c08f:	lea    eax,[ebp-0xc]
6400c092:	mov    fs:0x0,eax
6400c098:	mov    DWORD PTR [ebp-0x10],esp
6400c09b:	mov    edi,ecx
6400c09d:	mov    esi,DWORD PTR [ebp+0x8]
6400c0a0:	xor    ebx,ebx
6400c0a2:	mov    DWORD PTR [ebp-0x14],esi
6400c0a5:	mov    DWORD PTR [ebp-0x4],ebx
6400c0a8:	cmp    edi,ebx
6400c0aa:	jbe    0x6400c108
6400c0ac:	mov    DWORD PTR [ebp-0x18],esi
6400c0af:	mov    DWORD PTR [ebp-0x1c],esi
6400c0b2:	cmp    esi,ebx
6400c0b4:	mov    BYTE PTR [ebp-0x4],0x1
6400c0b8:	je     0x6400c0d5
6400c0ba:	mov    eax,DWORD PTR [ebp+0xc]
6400c0bd:	push   0xffffffff
6400c0bf:	push   ebx
6400c0c0:	mov    DWORD PTR [esi+0x18],0xf
6400c0c7:	mov    DWORD PTR [esi+0x14],ebx
6400c0ca:	push   eax
6400c0cb:	mov    ecx,esi
6400c0cd:	mov    BYTE PTR [esi+0x4],bl
6400c0d0:	call   0x640017a0
6400c0d5:	sub    edi,0x1
6400c0d8:	add    esi,0x1c
6400c0db:	mov    BYTE PTR [ebp-0x4],bl
6400c0de:	mov    DWORD PTR [ebp+0x8],esi
6400c0e1:	jmp    0x6400c0a8
6400c0e3:	mov    esi,DWORD PTR [ebp-0x14]
6400c0e6:	mov    edi,DWORD PTR [ebp+0x8]
6400c0e9:	cmp    esi,edi
6400c0eb:	je     0x6400c0ff
6400c0ed:	mov    ebx,DWORD PTR [ebp+0x10]
6400c0f0:	push   esi
6400c0f1:	mov    ecx,ebx
6400c0f3:	call   0x6400c160
6400c0f8:	add    esi,0x1c
6400c0fb:	cmp    esi,edi
6400c0fd:	jne    0x6400c0f0
6400c0ff:	xor    ebx,ebx
6400c101:	push   ebx
6400c102:	push   ebx
6400c103:	call   0x64013b5b
6400c108:	mov    ecx,DWORD PTR [ebp-0xc]
6400c10b:	mov    DWORD PTR fs:0x0,ecx
6400c112:	pop    ecx
6400c113:	pop    edi
6400c114:	pop    esi
6400c115:	pop    ebx
6400c116:	mov    esp,ebp
6400c118:	pop    ebp
6400c119:	ret    
6400c11a:	int3   
6400c11b:	int3   
6400c11c:	int3   
6400c11d:	int3   
6400c11e:	int3   
6400c11f:	int3   
6400c120:	push   esi
6400c121:	mov    esi,DWORD PTR [esp+0x8]
6400c125:	push   edi
6400c126:	mov    edi,DWORD PTR [esp+0x10]
6400c12a:	cmp    esi,edi
6400c12c:	je     0x6400c158
6400c12e:	push   ebx
6400c12f:	xor    ebx,ebx
6400c131:	cmp    DWORD PTR [esi+0x18],0x10
6400c135:	jb     0x6400c143
6400c137:	mov    eax,DWORD PTR [esi+0x4]
6400c13a:	push   eax
6400c13b:	call   0x64013712
6400c140:	add    esp,0x4
6400c143:	mov    DWORD PTR [esi+0x18],0xf
6400c14a:	mov    DWORD PTR [esi+0x14],ebx
6400c14d:	mov    BYTE PTR [esi+0x4],bl
6400c150:	add    esi,0x1c
6400c153:	cmp    esi,edi
6400c155:	jne    0x6400c131
6400c157:	pop    ebx
6400c158:	pop    edi
6400c159:	pop    esi
6400c15a:	ret    
6400c15b:	int3   
6400c15c:	int3   
6400c15d:	int3   
6400c15e:	int3   
6400c15f:	int3   
6400c160:	push   esi
6400c161:	mov    esi,DWORD PTR [esp+0x8]
6400c165:	cmp    DWORD PTR [esi+0x18],0x10
6400c169:	jb     0x6400c177
6400c16b:	mov    eax,DWORD PTR [esi+0x4]
6400c16e:	push   eax
6400c16f:	call   0x64013712
6400c174:	add    esp,0x4
6400c177:	xor    eax,eax
6400c179:	mov    DWORD PTR [esi+0x18],0xf
6400c180:	mov    DWORD PTR [esi+0x14],eax
6400c183:	mov    BYTE PTR [esi+0x4],al
6400c186:	pop    esi
6400c187:	ret    0x4
6400c18a:	int3   
6400c18b:	int3   
6400c18c:	int3   
6400c18d:	int3   
6400c18e:	int3   
6400c18f:	int3   
6400c190:	push   ebp
6400c191:	mov    ebp,esp
6400c193:	push   0xffffffff
6400c195:	push   0x64023e29
6400c19a:	mov    eax,fs:0x0
6400c1a0:	push   eax
6400c1a1:	sub    esp,0x44
6400c1a4:	mov    eax,ds:0x6402f09c
6400c1a9:	xor    eax,ebp
6400c1ab:	mov    DWORD PTR [ebp-0x14],eax
6400c1ae:	push   ebx
6400c1af:	push   esi
6400c1b0:	push   edi
6400c1b1:	push   eax
6400c1b2:	lea    eax,[ebp-0xc]
6400c1b5:	mov    fs:0x0,eax
6400c1bb:	mov    DWORD PTR [ebp-0x10],esp
6400c1be:	mov    esi,edx
6400c1c0:	xor    eax,eax
6400c1c2:	mov    edi,ecx
6400c1c4:	mov    DWORD PTR [ebp-0x44],esi
6400c1c7:	mov    DWORD PTR [ebp-0x48],esi
6400c1ca:	mov    DWORD PTR [ebp-0x18],0xf
6400c1d1:	mov    DWORD PTR [ebp-0x1c],eax
6400c1d4:	mov    BYTE PTR [ebp-0x2c],al
6400c1d7:	mov    DWORD PTR [ebp-0x4],eax
6400c1da:	mov    BYTE PTR [ebp-0x4],0x1
6400c1de:	mov    edi,edi
6400c1e0:	cmp    edi,DWORD PTR [ebp+0x8]
6400c1e3:	je     0x6400c299
6400c1e9:	mov    DWORD PTR [ebp-0x4c],esi
6400c1ec:	mov    DWORD PTR [ebp-0x50],esi
6400c1ef:	cmp    esi,eax
6400c1f1:	mov    BYTE PTR [ebp-0x4],0x2
6400c1f5:	je     0x6400c212
6400c1f7:	push   0xffffffff
6400c1f9:	mov    DWORD PTR [esi+0x14],eax
6400c1fc:	mov    DWORD PTR [esi+0x18],0xf
6400c203:	push   eax
6400c204:	mov    BYTE PTR [esi+0x4],al
6400c207:	lea    eax,[ebp-0x30]
6400c20a:	push   eax
6400c20b:	mov    ecx,esi
6400c20d:	call   0x640017a0
6400c212:	mov    BYTE PTR [ebp-0x4],0x1
6400c216:	mov    ebx,DWORD PTR [esi+0x10]
6400c219:	mov    eax,DWORD PTR [esi+0x4]
6400c21c:	mov    ecx,DWORD PTR [esi+0x8]
6400c21f:	mov    edx,DWORD PTR [esi+0xc]
6400c222:	mov    DWORD PTR [ebp-0x34],ebx
6400c225:	mov    ebx,DWORD PTR [edi+0x4]
6400c228:	mov    DWORD PTR [esi+0x4],ebx
6400c22b:	mov    ebx,DWORD PTR [edi+0x8]
6400c22e:	mov    DWORD PTR [esi+0x8],ebx
6400c231:	mov    ebx,DWORD PTR [edi+0xc]
6400c234:	mov    DWORD PTR [esi+0xc],ebx
6400c237:	mov    ebx,DWORD PTR [edi+0x10]
6400c23a:	mov    DWORD PTR [esi+0x10],ebx
6400c23d:	mov    DWORD PTR [edi+0x4],eax
6400c240:	mov    DWORD PTR [edi+0x8],ecx
6400c243:	mov    ecx,DWORD PTR [ebp-0x34]
6400c246:	mov    DWORD PTR [edi+0xc],edx
6400c249:	mov    edx,DWORD PTR [edi+0x14]
6400c24c:	mov    DWORD PTR [edi+0x10],ecx
6400c24f:	mov    eax,DWORD PTR [esi+0x14]
6400c252:	mov    DWORD PTR [esi+0x14],edx
6400c255:	mov    ecx,DWORD PTR [edi+0x18]
6400c258:	mov    DWORD PTR [edi+0x14],eax
6400c25b:	mov    eax,DWORD PTR [esi+0x18]
6400c25e:	mov    DWORD PTR [esi+0x18],ecx
6400c261:	mov    DWORD PTR [edi+0x18],eax
6400c264:	add    esi,0x1c
6400c267:	add    edi,0x1c
6400c26a:	mov    DWORD PTR [ebp-0x44],esi
6400c26d:	xor    eax,eax
6400c26f:	jmp    0x6400c1e0
6400c274:	mov    esi,DWORD PTR [ebp-0x48]
6400c277:	mov    edi,DWORD PTR [ebp-0x44]
6400c27a:	cmp    esi,edi
6400c27c:	je     0x6400c290
6400c27e:	mov    ebx,DWORD PTR [ebp+0xc]
6400c281:	push   esi
6400c282:	mov    ecx,ebx
6400c284:	call   0x6400c160
6400c289:	add    esi,0x1c
6400c28c:	cmp    esi,edi
6400c28e:	jne    0x6400c281
6400c290:	push   0x0
6400c292:	push   0x0
6400c294:	call   0x64013b5b
6400c299:	cmp    DWORD PTR [ebp-0x18],0x10
6400c29d:	jb     0x6400c2ab
6400c29f:	mov    edx,DWORD PTR [ebp-0x2c]
6400c2a2:	push   edx
6400c2a3:	call   0x64013712
6400c2a8:	add    esp,0x4
6400c2ab:	mov    eax,esi
6400c2ad:	mov    ecx,DWORD PTR [ebp-0xc]
6400c2b0:	mov    DWORD PTR fs:0x0,ecx
6400c2b7:	pop    ecx
6400c2b8:	pop    edi
6400c2b9:	pop    esi
6400c2ba:	pop    ebx
6400c2bb:	mov    ecx,DWORD PTR [ebp-0x14]
6400c2be:	xor    ecx,ebp
6400c2c0:	call   0x64013f6c
6400c2c5:	mov    esp,ebp
6400c2c7:	pop    ebp
6400c2c8:	ret    
6400c2c9:	int3   
6400c2ca:	int3   
6400c2cb:	int3   
6400c2cc:	int3   
6400c2cd:	int3   
6400c2ce:	int3   
6400c2cf:	int3   
6400c2d0:	push   ecx
6400c2d1:	mov    eax,ds:0x6402f09c
6400c2d6:	xor    eax,esp
6400c2d8:	mov    DWORD PTR [esp],eax
6400c2db:	cmp    DWORD PTR [esp+0x8],ecx
6400c2df:	mov    eax,DWORD PTR [esp+0xc]
6400c2e3:	je     0x6400c348
6400c2e5:	push   ebx
6400c2e6:	push   ebp
6400c2e7:	push   esi
6400c2e8:	push   edi
6400c2e9:	lea    esp,[esp+0x0]
6400c2f0:	mov    ebp,DWORD PTR [ecx-0x18]
6400c2f3:	mov    edx,DWORD PTR [eax-0x18]
6400c2f6:	mov    esi,DWORD PTR [eax-0x14]
6400c2f9:	mov    edi,DWORD PTR [eax-0x10]
6400c2fc:	mov    ebx,DWORD PTR [eax-0xc]
6400c2ff:	sub    ecx,0x1c
6400c302:	sub    eax,0x1c
6400c305:	cmp    ecx,DWORD PTR [esp+0x18]
6400c309:	mov    DWORD PTR [eax+0x4],ebp
6400c30c:	mov    ebp,DWORD PTR [ecx+0x8]
6400c30f:	mov    DWORD PTR [eax+0x8],ebp
6400c312:	mov    ebp,DWORD PTR [ecx+0xc]
6400c315:	mov    DWORD PTR [eax+0xc],ebp
6400c318:	mov    ebp,DWORD PTR [ecx+0x10]
6400c31b:	mov    DWORD PTR [eax+0x10],ebp
6400c31e:	mov    DWORD PTR [ecx+0x4],edx
6400c321:	mov    DWORD PTR [ecx+0x8],esi
6400c324:	mov    esi,DWORD PTR [ecx+0x14]
6400c327:	mov    DWORD PTR [ecx+0xc],edi
6400c32a:	mov    DWORD PTR [ecx+0x10],ebx
6400c32d:	mov    edx,DWORD PTR [eax+0x14]
6400c330:	mov    DWORD PTR [eax+0x14],esi
6400c333:	mov    esi,DWORD PTR [ecx+0x18]
6400c336:	mov    DWORD PTR [ecx+0x14],edx
6400c339:	mov    edx,DWORD PTR [eax+0x18]
6400c33c:	mov    DWORD PTR [eax+0x18],esi
6400c33f:	mov    DWORD PTR [ecx+0x18],edx
6400c342:	jne    0x6400c2f0
6400c344:	pop    edi
6400c345:	pop    esi
6400c346:	pop    ebp
6400c347:	pop    ebx
6400c348:	mov    ecx,DWORD PTR [esp]
6400c34b:	xor    ecx,esp
6400c34d:	call   0x64013f6c
6400c352:	pop    ecx
6400c353:	ret    
6400c354:	int3   
6400c355:	int3   
6400c356:	int3   
6400c357:	int3   
6400c358:	int3   
6400c359:	int3   
6400c35a:	int3   
6400c35b:	int3   
6400c35c:	int3   
6400c35d:	int3   
6400c35e:	int3   
6400c35f:	int3   
6400c360:	sub    esp,0x800
6400c366:	push   ebx
6400c367:	push   ebp
6400c368:	xor    ecx,ecx
6400c36a:	push   esi
6400c36b:	lea    eax,[ecx+0x1]
6400c36e:	push   edi
6400c36f:	nop
6400c370:	mov    edx,eax
6400c372:	and    dl,0x80
6400c375:	neg    dl
6400c377:	lea    esi,[eax+eax*1]
6400c37a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400c381:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400c385:	sbb    edx,edx
6400c387:	and    edx,0x1b
6400c38a:	xor    edx,esi
6400c38c:	xor    edx,eax
6400c38e:	and    edx,0xff
6400c394:	add    ecx,0x1
6400c397:	cmp    ecx,0x100
6400c39d:	mov    eax,edx
6400c39f:	jl     0x6400c370
6400c3a1:	mov    eax,0x1
6400c3a6:	mov    ecx,0x64031948
6400c3ab:	jmp    0x6400c3b0
6400c3ad:	lea    ecx,[ecx+0x0]
6400c3b0:	mov    edx,eax
6400c3b2:	and    dl,0x80
6400c3b5:	neg    dl
6400c3b7:	mov    DWORD PTR [ecx],eax
6400c3b9:	sbb    edx,edx
6400c3bb:	and    edx,0x1b
6400c3be:	add    eax,eax
6400c3c0:	xor    edx,eax
6400c3c2:	and    edx,0xff
6400c3c8:	add    ecx,0x4
6400c3cb:	cmp    ecx,0x64031970
6400c3d1:	mov    eax,edx
6400c3d3:	jl     0x6400c3b0
6400c3d5:	mov    BYTE PTR ds:0x64031048,0x63
6400c3dc:	mov    BYTE PTR ds:0x640331d3,0x0
6400c3e3:	mov    ebx,0x1
6400c3e8:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400c3ec:	add    ecx,ecx
6400c3ee:	add    ecx,ecx
6400c3f0:	lea    edx,[esp+0x80c]
6400c3f7:	sub    edx,ecx
6400c3f9:	mov    eax,DWORD PTR [edx]
6400c3fb:	mov    ecx,eax
6400c3fd:	sar    ecx,0x7
6400c400:	lea    edx,[eax+eax*1]
6400c403:	or     ecx,edx
6400c405:	and    ecx,0xff
6400c40b:	xor    eax,ecx
6400c40d:	mov    edx,ecx
6400c40f:	sar    edx,0x7
6400c412:	add    ecx,ecx
6400c414:	or     edx,ecx
6400c416:	and    edx,0xff
6400c41c:	xor    eax,edx
6400c41e:	mov    ecx,edx
6400c420:	add    edx,edx
6400c422:	sar    ecx,0x7
6400c425:	or     ecx,edx
6400c427:	and    ecx,0xff
6400c42d:	xor    eax,ecx
6400c42f:	mov    edx,ecx
6400c431:	sar    edx,0x7
6400c434:	add    ecx,ecx
6400c436:	or     edx,ecx
6400c438:	xor    edx,0x63
6400c43b:	and    edx,0xff
6400c441:	xor    eax,edx
6400c443:	mov    BYTE PTR [ebx+0x64031048],al
6400c449:	mov    BYTE PTR [eax+0x64033170],bl
6400c44f:	add    ebx,0x1
6400c452:	cmp    ebx,0x100
6400c458:	jl     0x6400c3e8
6400c45a:	xor    ecx,ecx
6400c45c:	lea    esp,[esp+0x0]
6400c460:	movzx  edx,BYTE PTR [ecx+0x64031048]
6400c467:	mov    eax,edx
6400c469:	and    al,0x80
6400c46b:	neg    al
6400c46d:	lea    esi,[edx+edx*1]
6400c470:	sbb    eax,eax
6400c472:	and    eax,0x1b
6400c475:	xor    eax,esi
6400c477:	and    eax,0xff
6400c47c:	mov    esi,eax
6400c47e:	xor    eax,edx
6400c480:	shl    eax,0x8
6400c483:	xor    eax,edx
6400c485:	shl    eax,0x8
6400c488:	xor    eax,edx
6400c48a:	shl    eax,0x8
6400c48d:	xor    eax,esi
6400c48f:	mov    DWORD PTR [ecx*4+0x64032d70],eax
6400c496:	rol    eax,0x8
6400c499:	mov    DWORD PTR [ecx*4+0x64032970],eax
6400c4a0:	rol    eax,0x8
6400c4a3:	mov    DWORD PTR [ecx*4+0x64032570],eax
6400c4aa:	rol    eax,0x8
6400c4ad:	mov    DWORD PTR [ecx*4+0x64032170],eax
6400c4b4:	movzx  eax,BYTE PTR [ecx+0x64033170]
6400c4bb:	test   eax,eax
6400c4bd:	je     0x6400c511
6400c4bf:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400c4c3:	mov    edx,DWORD PTR [esp+0x48]
6400c4c7:	lea    eax,[esi+edx*1]
6400c4ca:	cdq    
6400c4cb:	mov    edi,0xff
6400c4d0:	idiv   edi
6400c4d2:	mov    eax,DWORD PTR [esp+0x34]
6400c4d6:	add    eax,esi
6400c4d8:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400c4df:	cdq    
6400c4e0:	idiv   edi
6400c4e2:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400c4e9:	mov    edx,DWORD PTR [esp+0x44]
6400c4ed:	lea    eax,[esi+edx*1]
6400c4f0:	cdq    
6400c4f1:	idiv   edi
6400c4f3:	mov    eax,DWORD PTR [esp+0x3c]
6400c4f7:	add    eax,esi
6400c4f9:	mov    esi,0xff
6400c4fe:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400c505:	cdq    
6400c506:	idiv   esi
6400c508:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400c50f:	jmp    0x6400c519
6400c511:	xor    ebp,ebp
6400c513:	xor    ebx,ebx
6400c515:	xor    edi,edi
6400c517:	xor    edx,edx
6400c519:	shl    edx,0x8
6400c51c:	xor    edx,edi
6400c51e:	shl    edx,0x8
6400c521:	xor    edx,ebx
6400c523:	shl    edx,0x8
6400c526:	xor    edx,ebp
6400c528:	mov    DWORD PTR [ecx*4+0x64031d70],edx
6400c52f:	rol    edx,0x8
6400c532:	mov    DWORD PTR [ecx*4+0x64031970],edx
6400c539:	rol    edx,0x8
6400c53c:	mov    DWORD PTR [ecx*4+0x64031548],edx
6400c543:	rol    edx,0x8
6400c546:	mov    DWORD PTR [ecx*4+0x64031148],edx
6400c54d:	add    ecx,0x1
6400c550:	cmp    ecx,0x100
6400c556:	jl     0x6400c460
6400c55c:	pop    edi
6400c55d:	pop    esi
6400c55e:	pop    ebp
6400c55f:	pop    ebx
6400c560:	add    esp,0x800
6400c566:	ret    
6400c567:	int3   
6400c568:	int3   
6400c569:	int3   
6400c56a:	int3   
6400c56b:	int3   
6400c56c:	int3   
6400c56d:	int3   
6400c56e:	int3   
6400c56f:	int3   
6400c570:	cmp    DWORD PTR ds:0x64033274,0x0
6400c577:	push   ebx
6400c578:	push   esi
6400c579:	push   edi
6400c57a:	mov    edi,eax
6400c57c:	jne    0x6400c58d
6400c57e:	call   0x6400c360
6400c583:	mov    DWORD PTR ds:0x64033274,0x1
6400c58d:	lea    eax,[edi+0x8]
6400c590:	mov    ecx,0x64030382
6400c595:	mov    esi,eax
6400c597:	mov    DWORD PTR [edi],0xa
6400c59d:	mov    DWORD PTR [edi+0x4],eax
6400c5a0:	sub    esi,ecx
6400c5a2:	movzx  ebx,BYTE PTR [ecx-0x1]
6400c5a6:	xor    edx,edx
6400c5a8:	mov    dh,BYTE PTR [ecx+0x1]
6400c5ab:	add    ecx,0x4
6400c5ae:	mov    dl,BYTE PTR [ecx-0x4]
6400c5b1:	shl    edx,0x8
6400c5b4:	or     edx,ebx
6400c5b6:	movzx  ebx,BYTE PTR [ecx-0x6]
6400c5ba:	shl    edx,0x8
6400c5bd:	or     edx,ebx
6400c5bf:	cmp    ecx,0x64030392
6400c5c5:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400c5c9:	jl     0x6400c5a2
6400c5cb:	mov    edi,DWORD PTR [edi]
6400c5cd:	sub    edi,0xa
6400c5d0:	je     0x6400c88c
6400c5d6:	sub    edi,0x2
6400c5d9:	je     0x6400c6bf
6400c5df:	sub    edi,0x2
6400c5e2:	jne    0x6400ca6f
6400c5e8:	push   ebp
6400c5e9:	mov    ebp,0x64031948
6400c5ee:	mov    edi,edi
6400c5f0:	mov    edi,DWORD PTR [eax+0x1c]
6400c5f3:	xor    edx,edx
6400c5f5:	mov    ecx,edi
6400c5f7:	and    ecx,0xff
6400c5fd:	mov    dh,BYTE PTR [ecx+0x64031048]
6400c603:	movzx  ecx,BYTE PTR [eax+0x1f]
6400c607:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c60e:	xor    edx,ecx
6400c610:	movzx  ecx,BYTE PTR [eax+0x1e]
6400c614:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c61b:	shl    edx,0x8
6400c61e:	xor    edx,ecx
6400c620:	movzx  ecx,BYTE PTR [eax+0x1d]
6400c624:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c62b:	mov    esi,DWORD PTR [eax+0x8]
6400c62e:	shl    edx,0x8
6400c631:	xor    edx,ecx
6400c633:	xor    edx,DWORD PTR [eax]
6400c635:	xor    ebx,ebx
6400c637:	mov    ecx,edx
6400c639:	xor    ecx,DWORD PTR [ebp+0x0]
6400c63c:	mov    edx,DWORD PTR [eax+0x4]
6400c63f:	xor    edx,ecx
6400c641:	mov    DWORD PTR [eax+0x20],ecx
6400c644:	mov    ecx,DWORD PTR [eax+0xc]
6400c647:	xor    esi,edx
6400c649:	xor    ecx,esi
6400c64b:	mov    DWORD PTR [eax+0x2c],ecx
6400c64e:	mov    DWORD PTR [eax+0x24],edx
6400c651:	movzx  edx,BYTE PTR [eax+0x2f]
6400c655:	mov    DWORD PTR [eax+0x28],esi
6400c658:	mov    bh,BYTE PTR [edx+0x64031048]
6400c65e:	movzx  edx,BYTE PTR [eax+0x2e]
6400c662:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c669:	xor    ebx,edx
6400c66b:	movzx  edx,BYTE PTR [eax+0x2d]
6400c66f:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c676:	and    ecx,0xff
6400c67c:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c683:	shl    ebx,0x8
6400c686:	xor    ebx,edx
6400c688:	mov    edx,DWORD PTR [eax+0x14]
6400c68b:	shl    ebx,0x8
6400c68e:	xor    ecx,ebx
6400c690:	xor    ecx,DWORD PTR [eax+0x10]
6400c693:	add    ebp,0x4
6400c696:	xor    edx,ecx
6400c698:	mov    DWORD PTR [eax+0x30],ecx
6400c69b:	mov    ecx,DWORD PTR [eax+0x18]
6400c69e:	xor    ecx,edx
6400c6a0:	mov    DWORD PTR [eax+0x38],ecx
6400c6a3:	xor    ecx,edi
6400c6a5:	mov    DWORD PTR [eax+0x34],edx
6400c6a8:	mov    DWORD PTR [eax+0x3c],ecx
6400c6ab:	add    eax,0x20
6400c6ae:	cmp    ebp,0x64031964
6400c6b4:	jl     0x6400c5f0
6400c6ba:	pop    ebp
6400c6bb:	pop    edi
6400c6bc:	pop    esi
6400c6bd:	pop    ebx
6400c6be:	ret    
6400c6bf:	mov    esi,0x6403194c
6400c6c4:	mov    edi,DWORD PTR [eax+0x14]
6400c6c7:	xor    ecx,ecx
6400c6c9:	mov    edx,edi
6400c6cb:	and    edx,0xff
6400c6d1:	mov    ch,BYTE PTR [edx+0x64031048]
6400c6d7:	movzx  edx,BYTE PTR [eax+0x17]
6400c6db:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c6e2:	xor    ecx,edx
6400c6e4:	movzx  edx,BYTE PTR [eax+0x16]
6400c6e8:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c6ef:	shl    ecx,0x8
6400c6f2:	xor    ecx,edx
6400c6f4:	movzx  edx,BYTE PTR [eax+0x15]
6400c6f8:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c6ff:	shl    ecx,0x8
6400c702:	xor    ecx,edx
6400c704:	xor    ecx,DWORD PTR [esi-0x4]
6400c707:	mov    edx,DWORD PTR [eax+0x4]
6400c70a:	xor    ecx,DWORD PTR [eax]
6400c70c:	xor    edx,ecx
6400c70e:	mov    DWORD PTR [eax+0x18],ecx
6400c711:	mov    ecx,DWORD PTR [eax+0x8]
6400c714:	xor    ecx,edx
6400c716:	mov    DWORD PTR [eax+0x1c],edx
6400c719:	mov    edx,DWORD PTR [eax+0xc]
6400c71c:	xor    edx,ecx
6400c71e:	mov    DWORD PTR [eax+0x20],ecx
6400c721:	mov    ecx,DWORD PTR [eax+0x10]
6400c724:	xor    ecx,edx
6400c726:	mov    DWORD PTR [eax+0x28],ecx
6400c729:	mov    DWORD PTR [eax+0x24],edx
6400c72c:	xor    ecx,edi
6400c72e:	mov    DWORD PTR [eax+0x2c],ecx
6400c731:	and    ecx,0xff
6400c737:	xor    edx,edx
6400c739:	mov    dh,BYTE PTR [ecx+0x64031048]
6400c73f:	movzx  ecx,BYTE PTR [eax+0x2f]
6400c743:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c74a:	xor    edx,ecx
6400c74c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400c750:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c757:	shl    edx,0x8
6400c75a:	xor    edx,ecx
6400c75c:	movzx  ecx,BYTE PTR [eax+0x2d]
6400c760:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c767:	mov    edi,DWORD PTR [eax+0x28]
6400c76a:	shl    edx,0x8
6400c76d:	xor    edx,ecx
6400c76f:	xor    edx,DWORD PTR [eax+0x18]
6400c772:	mov    ecx,edx
6400c774:	xor    ecx,DWORD PTR [esi]
6400c776:	mov    edx,DWORD PTR [eax+0x1c]
6400c779:	xor    edx,ecx
6400c77b:	mov    DWORD PTR [eax+0x30],ecx
6400c77e:	mov    ecx,DWORD PTR [eax+0x20]
6400c781:	xor    ecx,edx
6400c783:	mov    DWORD PTR [eax+0x34],edx
6400c786:	mov    edx,DWORD PTR [eax+0x24]
6400c789:	xor    edx,ecx
6400c78b:	mov    DWORD PTR [eax+0x38],ecx
6400c78e:	mov    ecx,DWORD PTR [eax+0x2c]
6400c791:	xor    edi,edx
6400c793:	mov    DWORD PTR [eax+0x3c],edx
6400c796:	xor    ecx,edi
6400c798:	mov    DWORD PTR [eax+0x44],ecx
6400c79b:	and    ecx,0xff
6400c7a1:	xor    edx,edx
6400c7a3:	mov    DWORD PTR [eax+0x40],edi
6400c7a6:	mov    dh,BYTE PTR [ecx+0x64031048]
6400c7ac:	movzx  ecx,BYTE PTR [eax+0x47]
6400c7b0:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c7b7:	xor    edx,ecx
6400c7b9:	movzx  ecx,BYTE PTR [eax+0x46]
6400c7bd:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c7c4:	shl    edx,0x8
6400c7c7:	xor    edx,ecx
6400c7c9:	movzx  ecx,BYTE PTR [eax+0x45]
6400c7cd:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c7d4:	shl    edx,0x8
6400c7d7:	xor    edx,ecx
6400c7d9:	xor    edx,DWORD PTR [esi+0x4]
6400c7dc:	mov    ecx,edx
6400c7de:	xor    ecx,DWORD PTR [eax+0x30]
6400c7e1:	mov    edx,DWORD PTR [eax+0x34]
6400c7e4:	xor    edx,ecx
6400c7e6:	mov    DWORD PTR [eax+0x48],ecx
6400c7e9:	mov    ecx,DWORD PTR [eax+0x38]
6400c7ec:	xor    ecx,edx
6400c7ee:	mov    DWORD PTR [eax+0x4c],edx
6400c7f1:	mov    edx,DWORD PTR [eax+0x3c]
6400c7f4:	xor    edx,ecx
6400c7f6:	mov    DWORD PTR [eax+0x50],ecx
6400c7f9:	mov    ecx,DWORD PTR [eax+0x44]
6400c7fc:	xor    edi,edx
6400c7fe:	mov    DWORD PTR [eax+0x54],edx
6400c801:	xor    ecx,edi
6400c803:	mov    DWORD PTR [eax+0x5c],ecx
6400c806:	and    ecx,0xff
6400c80c:	xor    edx,edx
6400c80e:	mov    DWORD PTR [eax+0x58],edi
6400c811:	mov    dh,BYTE PTR [ecx+0x64031048]
6400c817:	movzx  ecx,BYTE PTR [eax+0x5f]
6400c81b:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c822:	xor    edx,ecx
6400c824:	movzx  ecx,BYTE PTR [eax+0x5e]
6400c828:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c82f:	shl    edx,0x8
6400c832:	xor    edx,ecx
6400c834:	movzx  ecx,BYTE PTR [eax+0x5d]
6400c838:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400c83f:	shl    edx,0x8
6400c842:	xor    edx,ecx
6400c844:	xor    edx,DWORD PTR [esi+0x8]
6400c847:	add    esi,0x10
6400c84a:	mov    ecx,edx
6400c84c:	xor    ecx,DWORD PTR [eax+0x48]
6400c84f:	mov    edx,DWORD PTR [eax+0x4c]
6400c852:	xor    edx,ecx
6400c854:	mov    DWORD PTR [eax+0x60],ecx
6400c857:	mov    ecx,DWORD PTR [eax+0x50]
6400c85a:	xor    ecx,edx
6400c85c:	mov    DWORD PTR [eax+0x64],edx
6400c85f:	mov    edx,DWORD PTR [eax+0x54]
6400c862:	xor    edx,ecx
6400c864:	mov    DWORD PTR [eax+0x68],ecx
6400c867:	mov    DWORD PTR [eax+0x6c],edx
6400c86a:	mov    ecx,edi
6400c86c:	xor    ecx,edx
6400c86e:	mov    edx,DWORD PTR [eax+0x5c]
6400c871:	xor    edx,ecx
6400c873:	mov    DWORD PTR [eax+0x70],ecx
6400c876:	mov    DWORD PTR [eax+0x74],edx
6400c879:	add    eax,0x60
6400c87c:	cmp    esi,0x6403196c
6400c882:	jl     0x6400c6c4
6400c888:	pop    edi
6400c889:	pop    esi
6400c88a:	pop    ebx
6400c88b:	ret    
6400c88c:	mov    ecx,0x6403194c
6400c891:	mov    esi,DWORD PTR [eax+0xc]
6400c894:	mov    edx,esi
6400c896:	and    edx,0xff
6400c89c:	xor    ebx,ebx
6400c89e:	mov    bh,BYTE PTR [edx+0x64031048]
6400c8a4:	movzx  edx,BYTE PTR [eax+0xf]
6400c8a8:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c8af:	xor    ebx,edx
6400c8b1:	movzx  edx,BYTE PTR [eax+0xe]
6400c8b5:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c8bc:	mov    edi,DWORD PTR [eax+0x4]
6400c8bf:	shl    ebx,0x8
6400c8c2:	xor    ebx,edx
6400c8c4:	movzx  edx,BYTE PTR [eax+0xd]
6400c8c8:	movzx  edx,BYTE PTR [edx+0x64031048]
6400c8cf:	shl    ebx,0x8
6400c8d2:	xor    ebx,edx
6400c8d4:	xor    ebx,DWORD PTR [ecx-0x4]
6400c8d7:	mov    edx,ebx
6400c8d9:	xor    edx,DWORD PTR [eax]
6400c8db:	mov    DWORD PTR [eax+0x10],edx
6400c8de:	xor    edi,edx
6400c8e0:	mov    edx,DWORD PTR [eax+0x8]
6400c8e3:	xor    edx,edi
6400c8e5:	xor    esi,edx
6400c8e7:	mov    DWORD PTR [eax+0x18],edx
6400c8ea:	mov    DWORD PTR [eax+0x1c],esi
6400c8ed:	and    esi,0xff
6400c8f3:	xor    edx,edx
6400c8f5:	mov    DWORD PTR [eax+0x14],edi
6400c8f8:	mov    dh,BYTE PTR [esi+0x64031048]
6400c8fe:	movzx  esi,BYTE PTR [eax+0x1f]
6400c902:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c909:	xor    edx,esi
6400c90b:	movzx  esi,BYTE PTR [eax+0x1e]
6400c90f:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c916:	shl    edx,0x8
6400c919:	xor    edx,esi
6400c91b:	movzx  esi,BYTE PTR [eax+0x1d]
6400c91f:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c926:	shl    edx,0x8
6400c929:	xor    edx,esi
6400c92b:	xor    edx,DWORD PTR [ecx]
6400c92d:	mov    esi,edi
6400c92f:	xor    edx,DWORD PTR [eax+0x10]
6400c932:	xor    esi,edx
6400c934:	mov    DWORD PTR [eax+0x20],edx
6400c937:	mov    edx,DWORD PTR [eax+0x18]
6400c93a:	xor    edx,esi
6400c93c:	mov    DWORD PTR [eax+0x24],esi
6400c93f:	mov    esi,DWORD PTR [eax+0x1c]
6400c942:	xor    esi,edx
6400c944:	mov    DWORD PTR [eax+0x28],edx
6400c947:	mov    DWORD PTR [eax+0x2c],esi
6400c94a:	and    esi,0xff
6400c950:	xor    edx,edx
6400c952:	mov    dh,BYTE PTR [esi+0x64031048]
6400c958:	movzx  esi,BYTE PTR [eax+0x2f]
6400c95c:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c963:	xor    edx,esi
6400c965:	movzx  esi,BYTE PTR [eax+0x2e]
6400c969:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c970:	shl    edx,0x8
6400c973:	xor    edx,esi
6400c975:	movzx  esi,BYTE PTR [eax+0x2d]
6400c979:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c980:	shl    edx,0x8
6400c983:	xor    edx,esi
6400c985:	xor    edx,DWORD PTR [ecx+0x4]
6400c988:	mov    esi,DWORD PTR [eax+0x24]
6400c98b:	xor    edx,DWORD PTR [eax+0x20]
6400c98e:	xor    esi,edx
6400c990:	mov    DWORD PTR [eax+0x30],edx
6400c993:	mov    edx,DWORD PTR [eax+0x28]
6400c996:	xor    edx,esi
6400c998:	mov    DWORD PTR [eax+0x34],esi
6400c99b:	mov    esi,DWORD PTR [eax+0x2c]
6400c99e:	xor    esi,edx
6400c9a0:	mov    DWORD PTR [eax+0x3c],esi
6400c9a3:	mov    DWORD PTR [eax+0x38],edx
6400c9a6:	and    esi,0xff
6400c9ac:	xor    edx,edx
6400c9ae:	mov    dh,BYTE PTR [esi+0x64031048]
6400c9b4:	movzx  esi,BYTE PTR [eax+0x3f]
6400c9b8:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c9bf:	xor    edx,esi
6400c9c1:	movzx  esi,BYTE PTR [eax+0x3e]
6400c9c5:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c9cc:	shl    edx,0x8
6400c9cf:	xor    edx,esi
6400c9d1:	movzx  esi,BYTE PTR [eax+0x3d]
6400c9d5:	movzx  esi,BYTE PTR [esi+0x64031048]
6400c9dc:	shl    edx,0x8
6400c9df:	xor    edx,esi
6400c9e1:	xor    edx,DWORD PTR [ecx+0x8]
6400c9e4:	mov    esi,DWORD PTR [eax+0x34]
6400c9e7:	xor    edx,DWORD PTR [eax+0x30]
6400c9ea:	add    ecx,0x14
6400c9ed:	xor    esi,edx
6400c9ef:	mov    DWORD PTR [eax+0x40],edx
6400c9f2:	mov    edx,DWORD PTR [eax+0x38]
6400c9f5:	xor    edx,esi
6400c9f7:	mov    DWORD PTR [eax+0x44],esi
6400c9fa:	mov    esi,DWORD PTR [eax+0x3c]
6400c9fd:	xor    esi,edx
6400c9ff:	mov    DWORD PTR [eax+0x48],edx
6400ca02:	mov    DWORD PTR [eax+0x4c],esi
6400ca05:	and    esi,0xff
6400ca0b:	xor    edx,edx
6400ca0d:	mov    dh,BYTE PTR [esi+0x64031048]
6400ca13:	movzx  esi,BYTE PTR [eax+0x4f]
6400ca17:	movzx  esi,BYTE PTR [esi+0x64031048]
6400ca1e:	xor    edx,esi
6400ca20:	movzx  esi,BYTE PTR [eax+0x4e]
6400ca24:	movzx  esi,BYTE PTR [esi+0x64031048]
6400ca2b:	shl    edx,0x8
6400ca2e:	xor    edx,esi
6400ca30:	movzx  esi,BYTE PTR [eax+0x4d]
6400ca34:	movzx  esi,BYTE PTR [esi+0x64031048]
6400ca3b:	shl    edx,0x8
6400ca3e:	xor    edx,esi
6400ca40:	xor    edx,DWORD PTR [ecx-0x8]
6400ca43:	mov    esi,DWORD PTR [eax+0x44]
6400ca46:	xor    edx,DWORD PTR [eax+0x40]
6400ca49:	add    eax,0x50
6400ca4c:	xor    esi,edx
6400ca4e:	mov    DWORD PTR [eax],edx
6400ca50:	mov    edx,DWORD PTR [eax-0x8]
6400ca53:	xor    edx,esi
6400ca55:	mov    DWORD PTR [eax+0x4],esi
6400ca58:	mov    esi,DWORD PTR [eax-0x4]
6400ca5b:	xor    esi,edx
6400ca5d:	cmp    ecx,0x64031974
6400ca63:	mov    DWORD PTR [eax+0x8],edx
6400ca66:	mov    DWORD PTR [eax+0xc],esi
6400ca69:	jl     0x6400c891
6400ca6f:	pop    edi
6400ca70:	pop    esi
6400ca71:	pop    ebx
6400ca72:	ret    
6400ca73:	int3   
6400ca74:	int3   
6400ca75:	int3   
6400ca76:	int3   
6400ca77:	int3   
6400ca78:	int3   
6400ca79:	int3   
6400ca7a:	int3   
6400ca7b:	int3   
6400ca7c:	int3   
6400ca7d:	int3   
6400ca7e:	int3   
6400ca7f:	int3   
6400ca80:	sub    esp,0x11c
6400ca86:	push   esi
6400ca87:	push   edi
6400ca88:	mov    edi,eax
6400ca8a:	lea    esi,[edi+0x8]
6400ca8d:	lea    eax,[esp+0x8]
6400ca91:	mov    DWORD PTR [edi],0xa
6400ca97:	mov    DWORD PTR [edi+0x4],esi
6400ca9a:	call   0x6400c570
6400ca9f:	mov    eax,DWORD PTR [esp+0x8]
6400caa3:	shl    eax,0x4
6400caa6:	add    eax,DWORD PTR [esp+0xc]
6400caaa:	add    esi,0x4
6400caad:	mov    ecx,DWORD PTR [eax]
6400caaf:	mov    DWORD PTR [esi-0x4],ecx
6400cab2:	mov    edx,DWORD PTR [eax+0x4]
6400cab5:	add    eax,0x4
6400cab8:	mov    DWORD PTR [esi],edx
6400caba:	mov    ecx,DWORD PTR [eax+0x4]
6400cabd:	add    eax,0x4
6400cac0:	add    esi,0x4
6400cac3:	mov    DWORD PTR [esi],ecx
6400cac5:	mov    edx,DWORD PTR [eax+0x4]
6400cac8:	add    eax,0x4
6400cacb:	add    esi,0x4
6400cace:	mov    DWORD PTR [esi],edx
6400cad0:	mov    ecx,DWORD PTR [edi]
6400cad2:	sub    ecx,0x1
6400cad5:	add    esi,0x4
6400cad8:	sub    eax,0x1c
6400cadb:	test   ecx,ecx
6400cadd:	jle    0x6400cc35
6400cae3:	movzx  edx,BYTE PTR [eax+0x3]
6400cae7:	movzx  edx,BYTE PTR [edx+0x64031048]
6400caee:	mov    edx,DWORD PTR [edx*4+0x64031148]
6400caf5:	movzx  edi,BYTE PTR [eax+0x2]
6400caf9:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb00:	xor    edx,DWORD PTR [edi*4+0x64031548]
6400cb07:	movzx  edi,BYTE PTR [eax+0x1]
6400cb0b:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb12:	xor    edx,DWORD PTR [edi*4+0x64031970]
6400cb19:	mov    edi,DWORD PTR [eax]
6400cb1b:	and    edi,0xff
6400cb21:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb28:	xor    edx,DWORD PTR [edi*4+0x64031d70]
6400cb2f:	add    eax,0x10
6400cb32:	mov    DWORD PTR [esi],edx
6400cb34:	mov    edx,DWORD PTR [eax-0xc]
6400cb37:	movzx  edi,BYTE PTR [eax-0x9]
6400cb3b:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb42:	and    edx,0xff
6400cb48:	movzx  edx,BYTE PTR [edx+0x64031048]
6400cb4f:	mov    edx,DWORD PTR [edx*4+0x64031d70]
6400cb56:	xor    edx,DWORD PTR [edi*4+0x64031148]
6400cb5d:	movzx  edi,BYTE PTR [eax-0xa]
6400cb61:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb68:	xor    edx,DWORD PTR [edi*4+0x64031548]
6400cb6f:	movzx  edi,BYTE PTR [eax-0xb]
6400cb73:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb7a:	xor    edx,DWORD PTR [edi*4+0x64031970]
6400cb81:	sub    ecx,0x1
6400cb84:	mov    DWORD PTR [esi+0x4],edx
6400cb87:	mov    edx,DWORD PTR [eax-0x8]
6400cb8a:	movzx  edi,BYTE PTR [eax-0x5]
6400cb8e:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cb95:	and    edx,0xff
6400cb9b:	movzx  edx,BYTE PTR [edx+0x64031048]
6400cba2:	mov    edx,DWORD PTR [edx*4+0x64031d70]
6400cba9:	xor    edx,DWORD PTR [edi*4+0x64031148]
6400cbb0:	movzx  edi,BYTE PTR [eax-0x6]
6400cbb4:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cbbb:	xor    edx,DWORD PTR [edi*4+0x64031548]
6400cbc2:	movzx  edi,BYTE PTR [eax-0x7]
6400cbc6:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cbcd:	xor    edx,DWORD PTR [edi*4+0x64031970]
6400cbd4:	add    esi,0x10
6400cbd7:	mov    DWORD PTR [esi-0x8],edx
6400cbda:	mov    edx,DWORD PTR [eax-0x4]
6400cbdd:	movzx  edi,BYTE PTR [eax-0x1]
6400cbe1:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cbe8:	and    edx,0xff
6400cbee:	movzx  edx,BYTE PTR [edx+0x64031048]
6400cbf5:	mov    edx,DWORD PTR [edx*4+0x64031d70]
6400cbfc:	xor    edx,DWORD PTR [edi*4+0x64031148]
6400cc03:	movzx  edi,BYTE PTR [eax-0x2]
6400cc07:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cc0e:	xor    edx,DWORD PTR [edi*4+0x64031548]
6400cc15:	movzx  edi,BYTE PTR [eax-0x3]
6400cc19:	movzx  edi,BYTE PTR [edi+0x64031048]
6400cc20:	xor    edx,DWORD PTR [edi*4+0x64031970]
6400cc27:	sub    eax,0x20
6400cc2a:	test   ecx,ecx
6400cc2c:	mov    DWORD PTR [esi-0x4],edx
6400cc2f:	jg     0x6400cae3
6400cc35:	mov    ecx,DWORD PTR [eax]
6400cc37:	mov    DWORD PTR [esi],ecx
6400cc39:	mov    edx,DWORD PTR [eax+0x4]
6400cc3c:	add    esi,0x4
6400cc3f:	add    eax,0x4
6400cc42:	mov    DWORD PTR [esi],edx
6400cc44:	mov    ecx,DWORD PTR [eax+0x4]
6400cc47:	add    esi,0x4
6400cc4a:	add    eax,0x4
6400cc4d:	mov    DWORD PTR [esi],ecx
6400cc4f:	mov    edx,DWORD PTR [eax+0x4]
6400cc52:	pop    edi
6400cc53:	mov    DWORD PTR [esi+0x4],edx
6400cc56:	pop    esi
6400cc57:	add    esp,0x11c
6400cc5d:	ret    
6400cc5e:	int3   
6400cc5f:	int3   
6400cc60:	sub    esp,0x10
6400cc63:	xor    ecx,ecx
6400cc65:	push   ebx
6400cc66:	push   ebp
6400cc67:	mov    ebp,DWORD PTR [esp+0x1c]
6400cc6b:	push   esi
6400cc6c:	push   edi
6400cc6d:	mov    edi,eax
6400cc6f:	mov    ch,BYTE PTR [edi+0x3]
6400cc72:	movzx  edx,BYTE PTR [edi+0x1]
6400cc76:	mov    eax,DWORD PTR [ebp+0x4]
6400cc79:	movzx  esi,BYTE PTR [edi+0x9]
6400cc7d:	mov    cl,BYTE PTR [edi+0x2]
6400cc80:	movzx  ebx,BYTE PTR [edi+0xd]
6400cc84:	add    eax,0x4
6400cc87:	add    eax,0x4
6400cc8a:	add    eax,0x4
6400cc8d:	shl    ecx,0x8
6400cc90:	or     ecx,edx
6400cc92:	movzx  edx,BYTE PTR [edi]
6400cc95:	shl    ecx,0x8
6400cc98:	or     ecx,edx
6400cc9a:	xor    ecx,DWORD PTR [eax-0xc]
6400cc9d:	movzx  edx,BYTE PTR [edi+0x5]
6400cca1:	mov    DWORD PTR [esp+0x24],ecx
6400cca5:	xor    ecx,ecx
6400cca7:	mov    ch,BYTE PTR [edi+0x7]
6400ccaa:	add    eax,0x4
6400ccad:	mov    cl,BYTE PTR [edi+0x6]
6400ccb0:	shl    ecx,0x8
6400ccb3:	or     ecx,edx
6400ccb5:	movzx  edx,BYTE PTR [edi+0x4]
6400ccb9:	shl    ecx,0x8
6400ccbc:	or     ecx,edx
6400ccbe:	xor    edx,edx
6400ccc0:	mov    dh,BYTE PTR [edi+0xb]
6400ccc3:	xor    ecx,DWORD PTR [eax-0xc]
6400ccc6:	mov    dl,BYTE PTR [edi+0xa]
6400ccc9:	shl    edx,0x8
6400cccc:	or     edx,esi
6400ccce:	movzx  esi,BYTE PTR [edi+0x8]
6400ccd2:	shl    edx,0x8
6400ccd5:	or     edx,esi
6400ccd7:	xor    edx,DWORD PTR [eax-0x8]
6400ccda:	mov    esi,edx
6400ccdc:	xor    edx,edx
6400ccde:	mov    dh,BYTE PTR [edi+0xf]
6400cce1:	mov    DWORD PTR [esp+0x10],esi
6400cce5:	mov    dl,BYTE PTR [edi+0xe]
6400cce8:	movzx  edi,BYTE PTR [edi+0xc]
6400ccec:	shl    edx,0x8
6400ccef:	or     edx,ebx
6400ccf1:	shl    edx,0x8
6400ccf4:	or     edx,edi
6400ccf6:	xor    edx,DWORD PTR [eax-0x4]
6400ccf9:	cmp    DWORD PTR [esp+0x28],0x0
6400ccfe:	jne    0x6400d199
6400cd04:	mov    ebp,DWORD PTR [ebp+0x0]
6400cd07:	sar    ebp,1
6400cd09:	sub    ebp,0x1
6400cd0c:	test   ebp,ebp
6400cd0e:	jle    0x6400cf3f
6400cd14:	mov    ebx,esi
6400cd16:	movzx  edi,dh
6400cd19:	mov    esi,DWORD PTR [edi*4+0x64031970]
6400cd20:	mov    edi,ecx
6400cd22:	shr    edi,0x18
6400cd25:	shr    ebx,0x10
6400cd28:	and    ebx,0xff
6400cd2e:	xor    esi,DWORD PTR [ebx*4+0x64031548]
6400cd35:	add    eax,0x4
6400cd38:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cd3f:	mov    edi,DWORD PTR [esp+0x24]
6400cd43:	and    edi,0xff
6400cd49:	mov    DWORD PTR [esp+0x28],esi
6400cd4d:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400cd54:	movzx  edi,BYTE PTR [esp+0x25]
6400cd59:	xor    esi,DWORD PTR [eax-0x4]
6400cd5c:	add    eax,0x4
6400cd5f:	mov    DWORD PTR [esp+0x14],esi
6400cd63:	mov    esi,edx
6400cd65:	shr    esi,0x10
6400cd68:	and    esi,0xff
6400cd6e:	mov    esi,DWORD PTR [esi*4+0x64031548]
6400cd75:	xor    esi,DWORD PTR [edi*4+0x64031970]
6400cd7c:	mov    edi,DWORD PTR [esp+0x10]
6400cd80:	shr    edi,0x18
6400cd83:	mov    DWORD PTR [esp+0x28],esi
6400cd87:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cd8e:	mov    edi,ecx
6400cd90:	and    edi,0xff
6400cd96:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400cd9d:	mov    edi,DWORD PTR [esp+0x24]
6400cda1:	xor    esi,DWORD PTR [eax-0x4]
6400cda4:	shr    edi,0x10
6400cda7:	mov    DWORD PTR [esp+0x18],esi
6400cdab:	movzx  esi,ch
6400cdae:	mov    esi,DWORD PTR [esi*4+0x64031970]
6400cdb5:	and    edi,0xff
6400cdbb:	xor    esi,DWORD PTR [edi*4+0x64031548]
6400cdc2:	mov    edi,edx
6400cdc4:	shr    edi,0x18
6400cdc7:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cdce:	mov    edi,DWORD PTR [esp+0x10]
6400cdd2:	and    edi,0xff
6400cdd8:	mov    DWORD PTR [esp+0x28],esi
6400cddc:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400cde3:	shr    ecx,0x10
6400cde6:	xor    esi,DWORD PTR [eax]
6400cde8:	and    ecx,0xff
6400cdee:	mov    DWORD PTR [esp+0x28],esi
6400cdf2:	movzx  esi,BYTE PTR [esp+0x11]
6400cdf7:	mov    ebx,DWORD PTR [esi*4+0x64031970]
6400cdfe:	xor    ebx,DWORD PTR [ecx*4+0x64031548]
6400ce05:	mov    ecx,DWORD PTR [esp+0x24]
6400ce09:	mov    esi,DWORD PTR [esp+0x28]
6400ce0d:	shr    ecx,0x18
6400ce10:	xor    ebx,DWORD PTR [ecx*4+0x64031148]
6400ce17:	and    edx,0xff
6400ce1d:	xor    ebx,DWORD PTR [edx*4+0x64031d70]
6400ce24:	add    eax,0x4
6400ce27:	xor    ebx,DWORD PTR [eax]
6400ce29:	mov    ecx,esi
6400ce2b:	shr    ecx,0x10
6400ce2e:	and    ecx,0xff
6400ce34:	movzx  edx,bh
6400ce37:	mov    edi,DWORD PTR [edx*4+0x64031970]
6400ce3e:	xor    edi,DWORD PTR [ecx*4+0x64031548]
6400ce45:	mov    edx,DWORD PTR [esp+0x18]
6400ce49:	mov    ecx,edx
6400ce4b:	shr    ecx,0x18
6400ce4e:	xor    edi,DWORD PTR [ecx*4+0x64031148]
6400ce55:	mov    ecx,DWORD PTR [esp+0x14]
6400ce59:	and    ecx,0xff
6400ce5f:	xor    edi,DWORD PTR [ecx*4+0x64031d70]
6400ce66:	add    eax,0x4
6400ce69:	xor    edi,DWORD PTR [eax]
6400ce6b:	mov    ecx,ebx
6400ce6d:	shr    ecx,0x10
6400ce70:	mov    DWORD PTR [esp+0x24],edi
6400ce74:	movzx  edi,BYTE PTR [esp+0x15]
6400ce79:	add    eax,0x4
6400ce7c:	and    ecx,0xff
6400ce82:	mov    ecx,DWORD PTR [ecx*4+0x64031548]
6400ce89:	xor    ecx,DWORD PTR [edi*4+0x64031970]
6400ce90:	shr    esi,0x18
6400ce93:	xor    ecx,DWORD PTR [esi*4+0x64031148]
6400ce9a:	mov    esi,edx
6400ce9c:	and    esi,0xff
6400cea2:	xor    ecx,DWORD PTR [esi*4+0x64031d70]
6400cea9:	mov    esi,DWORD PTR [esp+0x14]
6400cead:	xor    ecx,DWORD PTR [eax]
6400ceaf:	movzx  edx,dh
6400ceb2:	mov    edx,DWORD PTR [edx*4+0x64031970]
6400ceb9:	mov    edi,DWORD PTR [esp+0x18]
6400cebd:	shr    esi,0x10
6400cec0:	and    esi,0xff
6400cec6:	xor    edx,DWORD PTR [esi*4+0x64031548]
6400cecd:	mov    esi,ebx
6400cecf:	shr    esi,0x18
6400ced2:	xor    edx,DWORD PTR [esi*4+0x64031148]
6400ced9:	mov    esi,DWORD PTR [esp+0x28]
6400cedd:	and    esi,0xff
6400cee3:	xor    edx,DWORD PTR [esi*4+0x64031d70]
6400ceea:	add    eax,0x4
6400ceed:	xor    edx,DWORD PTR [eax]
6400ceef:	shr    edi,0x10
6400cef2:	mov    esi,edx
6400cef4:	movzx  edx,BYTE PTR [esp+0x29]
6400cef9:	mov    edx,DWORD PTR [edx*4+0x64031970]
6400cf00:	and    edi,0xff
6400cf06:	xor    edx,DWORD PTR [edi*4+0x64031548]
6400cf0d:	mov    edi,DWORD PTR [esp+0x14]
6400cf11:	shr    edi,0x18
6400cf14:	xor    edx,DWORD PTR [edi*4+0x64031148]
6400cf1b:	and    ebx,0xff
6400cf21:	xor    edx,DWORD PTR [ebx*4+0x64031d70]
6400cf28:	add    eax,0x4
6400cf2b:	xor    edx,DWORD PTR [eax]
6400cf2d:	sub    ebp,0x1
6400cf30:	add    eax,0x4
6400cf33:	test   ebp,ebp
6400cf35:	mov    DWORD PTR [esp+0x10],esi
6400cf39:	jg     0x6400cd14
6400cf3f:	mov    ebx,esi
6400cf41:	movzx  edi,dh
6400cf44:	mov    esi,DWORD PTR [edi*4+0x64031970]
6400cf4b:	mov    edi,ecx
6400cf4d:	shr    edi,0x18
6400cf50:	shr    ebx,0x10
6400cf53:	and    ebx,0xff
6400cf59:	xor    esi,DWORD PTR [ebx*4+0x64031548]
6400cf60:	add    eax,0x4
6400cf63:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cf6a:	mov    edi,DWORD PTR [esp+0x24]
6400cf6e:	mov    DWORD PTR [esp+0x28],esi
6400cf72:	and    edi,0xff
6400cf78:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400cf7f:	movzx  edi,BYTE PTR [esp+0x25]
6400cf84:	xor    esi,DWORD PTR [eax-0x4]
6400cf87:	add    eax,0x4
6400cf8a:	mov    DWORD PTR [esp+0x14],esi
6400cf8e:	mov    esi,edx
6400cf90:	shr    esi,0x10
6400cf93:	and    esi,0xff
6400cf99:	mov    esi,DWORD PTR [esi*4+0x64031548]
6400cfa0:	xor    esi,DWORD PTR [edi*4+0x64031970]
6400cfa7:	mov    edi,DWORD PTR [esp+0x10]
6400cfab:	shr    edi,0x18
6400cfae:	mov    DWORD PTR [esp+0x28],esi
6400cfb2:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cfb9:	mov    edi,ecx
6400cfbb:	and    edi,0xff
6400cfc1:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400cfc8:	mov    edi,DWORD PTR [esp+0x24]
6400cfcc:	xor    esi,DWORD PTR [eax-0x4]
6400cfcf:	shr    edi,0x10
6400cfd2:	mov    DWORD PTR [esp+0x18],esi
6400cfd6:	movzx  esi,ch
6400cfd9:	mov    esi,DWORD PTR [esi*4+0x64031970]
6400cfe0:	and    edi,0xff
6400cfe6:	xor    esi,DWORD PTR [edi*4+0x64031548]
6400cfed:	mov    edi,edx
6400cfef:	shr    edi,0x18
6400cff2:	xor    esi,DWORD PTR [edi*4+0x64031148]
6400cff9:	mov    edi,DWORD PTR [esp+0x10]
6400cffd:	mov    DWORD PTR [esp+0x28],esi
6400d001:	and    edi,0xff
6400d007:	xor    esi,DWORD PTR [edi*4+0x64031d70]
6400d00e:	shr    ecx,0x10
6400d011:	xor    esi,DWORD PTR [eax]
6400d013:	and    ecx,0xff
6400d019:	mov    DWORD PTR [esp+0x28],esi
6400d01d:	movzx  esi,BYTE PTR [esp+0x11]
6400d022:	mov    ebx,DWORD PTR [esi*4+0x64031970]
6400d029:	xor    ebx,DWORD PTR [ecx*4+0x64031548]
6400d030:	mov    ecx,DWORD PTR [esp+0x24]
6400d034:	mov    edi,DWORD PTR [esp+0x28]
6400d038:	shr    ecx,0x18
6400d03b:	xor    ebx,DWORD PTR [ecx*4+0x64031148]
6400d042:	mov    ecx,DWORD PTR [esp+0x18]
6400d046:	and    edx,0xff
6400d04c:	xor    ebx,DWORD PTR [edx*4+0x64031d70]
6400d053:	add    eax,0x4
6400d056:	xor    ebx,DWORD PTR [eax]
6400d058:	add    eax,0x4
6400d05b:	shr    ecx,0x18
6400d05e:	mov    DWORD PTR [esp+0x1c],eax
6400d062:	xor    eax,eax
6400d064:	mov    ah,BYTE PTR [ecx+0x64033170]
6400d06a:	mov    edx,edi
6400d06c:	shr    edx,0x10
6400d06f:	and    edx,0xff
6400d075:	movzx  edx,BYTE PTR [edx+0x64033170]
6400d07c:	movzx  ecx,bh
6400d07f:	movzx  ecx,BYTE PTR [ecx+0x64033170]
6400d086:	xor    edx,eax
6400d088:	shl    edx,0x8
6400d08b:	xor    edx,ecx
6400d08d:	mov    ecx,DWORD PTR [esp+0x14]
6400d091:	and    ecx,0xff
6400d097:	movzx  ecx,BYTE PTR [ecx+0x64033170]
6400d09e:	shl    edx,0x8
6400d0a1:	mov    DWORD PTR [esp+0x24],ebx
6400d0a5:	xor    edx,ecx
6400d0a7:	xor    ecx,ecx
6400d0a9:	shr    edi,0x18
6400d0ac:	mov    ch,BYTE PTR [edi+0x64033170]
6400d0b2:	mov    eax,DWORD PTR [esp+0x1c]
6400d0b6:	xor    edx,DWORD PTR [eax]
6400d0b8:	shr    ebx,0x10
6400d0bb:	and    ebx,0xff
6400d0c1:	movzx  esi,BYTE PTR [ebx+0x64033170]
6400d0c8:	xor    esi,ecx
6400d0ca:	mov    ecx,DWORD PTR [esp+0x14]
6400d0ce:	shl    esi,0x8
6400d0d1:	movzx  edi,ch
6400d0d4:	movzx  edi,BYTE PTR [edi+0x64033170]
6400d0db:	xor    esi,edi
6400d0dd:	mov    edi,DWORD PTR [esp+0x18]
6400d0e1:	shl    esi,0x8
6400d0e4:	and    edi,0xff
6400d0ea:	movzx  edi,BYTE PTR [edi+0x64033170]
6400d0f1:	xor    esi,edi
6400d0f3:	xor    esi,DWORD PTR [eax+0x4]
6400d0f6:	shr    ecx,0x10
6400d0f9:	mov    DWORD PTR [esp+0x1c],esi
6400d0fd:	and    ecx,0xff
6400d103:	movzx  esi,BYTE PTR [ecx+0x64033170]
6400d10a:	mov    ecx,DWORD PTR [esp+0x24]
6400d10e:	add    eax,0x4
6400d111:	shr    ecx,0x18
6400d114:	xor    ebx,ebx
6400d116:	mov    bh,BYTE PTR [ecx+0x64033170]
6400d11c:	mov    ecx,DWORD PTR [esp+0x18]
6400d120:	movzx  edi,ch
6400d123:	movzx  edi,BYTE PTR [edi+0x64033170]
6400d12a:	xor    esi,ebx
6400d12c:	shl    esi,0x8
6400d12f:	xor    esi,edi
6400d131:	mov    edi,DWORD PTR [esp+0x28]
6400d135:	shl    esi,0x8
6400d138:	and    edi,0xff
6400d13e:	movzx  edi,BYTE PTR [edi+0x64033170]
6400d145:	xor    esi,edi
6400d147:	xor    esi,DWORD PTR [eax+0x4]
6400d14a:	add    eax,0x4
6400d14d:	mov    DWORD PTR [esp+0x10],esi
6400d151:	mov    esi,DWORD PTR [esp+0x14]
6400d155:	shr    esi,0x18
6400d158:	shr    ecx,0x10
6400d15b:	xor    ebx,ebx
6400d15d:	mov    bh,BYTE PTR [esi+0x64033170]
6400d163:	movzx  esi,BYTE PTR [esp+0x29]
6400d168:	movzx  esi,BYTE PTR [esi+0x64033170]
6400d16f:	and    ecx,0xff
6400d175:	movzx  ecx,BYTE PTR [ecx+0x64033170]
6400d17c:	xor    ecx,ebx
6400d17e:	shl    ecx,0x8
6400d181:	xor    ecx,esi
6400d183:	mov    esi,DWORD PTR [esp+0x24]
6400d187:	and    esi,0xff
6400d18d:	movzx  esi,BYTE PTR [esi+0x64033170]
6400d194:	jmp    0x6400d62c
6400d199:	mov    edi,DWORD PTR [ebp+0x0]
6400d19c:	sar    edi,1
6400d19e:	sub    edi,0x1
6400d1a1:	test   edi,edi
6400d1a3:	mov    DWORD PTR [esp+0x1c],edi
6400d1a7:	jle    0x6400d3e3
6400d1ad:	lea    ecx,[ecx+0x0]
6400d1b0:	shr    esi,0x10
6400d1b3:	and    esi,0xff
6400d1b9:	mov    esi,DWORD PTR [esi*4+0x64032570]
6400d1c0:	movzx  edi,ch
6400d1c3:	xor    esi,DWORD PTR [edi*4+0x64032970]
6400d1ca:	mov    edi,edx
6400d1cc:	shr    edi,0x18
6400d1cf:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d1d6:	mov    edi,DWORD PTR [esp+0x24]
6400d1da:	mov    DWORD PTR [esp+0x28],esi
6400d1de:	and    edi,0xff
6400d1e4:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d1eb:	movzx  edi,BYTE PTR [esp+0x11]
6400d1f0:	xor    esi,DWORD PTR [eax]
6400d1f2:	add    eax,0x4
6400d1f5:	mov    DWORD PTR [esp+0x14],esi
6400d1f9:	mov    esi,edx
6400d1fb:	shr    esi,0x10
6400d1fe:	and    esi,0xff
6400d204:	mov    esi,DWORD PTR [esi*4+0x64032570]
6400d20b:	xor    esi,DWORD PTR [edi*4+0x64032970]
6400d212:	mov    edi,DWORD PTR [esp+0x24]
6400d216:	mov    DWORD PTR [esp+0x28],esi
6400d21a:	shr    edi,0x18
6400d21d:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d224:	mov    edi,ecx
6400d226:	and    edi,0xff
6400d22c:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d233:	mov    edi,DWORD PTR [esp+0x24]
6400d237:	xor    esi,DWORD PTR [eax]
6400d239:	shr    edi,0x10
6400d23c:	mov    DWORD PTR [esp+0x18],esi
6400d240:	and    edi,0xff
6400d246:	movzx  esi,dh
6400d249:	mov    esi,DWORD PTR [esi*4+0x64032970]
6400d250:	xor    esi,DWORD PTR [edi*4+0x64032570]
6400d257:	mov    edi,ecx
6400d259:	shr    edi,0x18
6400d25c:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d263:	mov    edi,DWORD PTR [esp+0x10]
6400d267:	mov    DWORD PTR [esp+0x28],esi
6400d26b:	and    edi,0xff
6400d271:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d278:	add    eax,0x4
6400d27b:	xor    esi,DWORD PTR [eax]
6400d27d:	shr    ecx,0x10
6400d280:	mov    DWORD PTR [esp+0x28],esi
6400d284:	movzx  esi,BYTE PTR [esp+0x25]
6400d289:	and    ecx,0xff
6400d28f:	mov    ebx,DWORD PTR [ecx*4+0x64032570]
6400d296:	xor    ebx,DWORD PTR [esi*4+0x64032970]
6400d29d:	mov    ecx,DWORD PTR [esp+0x10]
6400d2a1:	shr    ecx,0x18
6400d2a4:	xor    ebx,DWORD PTR [ecx*4+0x64032170]
6400d2ab:	mov    ecx,DWORD PTR [esp+0x18]
6400d2af:	and    edx,0xff
6400d2b5:	xor    ebx,DWORD PTR [edx*4+0x64032d70]
6400d2bc:	mov    edx,DWORD PTR [esp+0x28]
6400d2c0:	xor    ebx,DWORD PTR [eax+0x4]
6400d2c3:	add    eax,0x4
6400d2c6:	mov    esi,edx
6400d2c8:	shr    esi,0x10
6400d2cb:	and    esi,0xff
6400d2d1:	mov    ebp,DWORD PTR [esi*4+0x64032570]
6400d2d8:	movzx  edi,ch
6400d2db:	xor    ebp,DWORD PTR [edi*4+0x64032970]
6400d2e2:	mov    esi,ebx
6400d2e4:	shr    esi,0x18
6400d2e7:	xor    ebp,DWORD PTR [esi*4+0x64032170]
6400d2ee:	mov    esi,DWORD PTR [esp+0x14]
6400d2f2:	mov    edi,esi
6400d2f4:	and    edi,0xff
6400d2fa:	xor    ebp,DWORD PTR [edi*4+0x64032d70]
6400d301:	add    eax,0x4
6400d304:	xor    ebp,DWORD PTR [eax]
6400d306:	mov    edi,ebx
6400d308:	shr    edi,0x10
6400d30b:	add    eax,0x4
6400d30e:	mov    DWORD PTR [esp+0x24],ebp
6400d312:	and    edi,0xff
6400d318:	movzx  edx,dh
6400d31b:	mov    edi,DWORD PTR [edi*4+0x64032570]
6400d322:	xor    edi,DWORD PTR [edx*4+0x64032970]
6400d329:	mov    edx,esi
6400d32b:	shr    edx,0x18
6400d32e:	xor    edi,DWORD PTR [edx*4+0x64032170]
6400d335:	shr    esi,0x10
6400d338:	and    esi,0xff
6400d33e:	movzx  edx,bh
6400d341:	mov    edx,DWORD PTR [edx*4+0x64032970]
6400d348:	xor    edx,DWORD PTR [esi*4+0x64032570]
6400d34f:	mov    esi,DWORD PTR [esp+0x18]
6400d353:	shr    esi,0x18
6400d356:	xor    edx,DWORD PTR [esi*4+0x64032170]
6400d35d:	mov    esi,DWORD PTR [esp+0x28]
6400d361:	and    ecx,0xff
6400d367:	xor    edi,DWORD PTR [ecx*4+0x64032d70]
6400d36e:	and    esi,0xff
6400d374:	xor    edi,DWORD PTR [eax]
6400d376:	xor    edx,DWORD PTR [esi*4+0x64032d70]
6400d37d:	mov    ecx,edi
6400d37f:	xor    edx,DWORD PTR [eax+0x4]
6400d382:	mov    edi,DWORD PTR [esp+0x18]
6400d386:	add    eax,0x4
6400d389:	shr    edi,0x10
6400d38c:	and    edi,0xff
6400d392:	mov    ebp,DWORD PTR [edi*4+0x64032570]
6400d399:	mov    edi,DWORD PTR [esp+0x28]
6400d39d:	mov    esi,edx
6400d39f:	movzx  edx,BYTE PTR [esp+0x15]
6400d3a4:	xor    ebp,DWORD PTR [edx*4+0x64032970]
6400d3ab:	shr    edi,0x18
6400d3ae:	xor    ebp,DWORD PTR [edi*4+0x64032170]
6400d3b5:	mov    edi,DWORD PTR [esp+0x1c]
6400d3b9:	and    ebx,0xff
6400d3bf:	xor    ebp,DWORD PTR [ebx*4+0x64032d70]
6400d3c6:	add    eax,0x4
6400d3c9:	xor    ebp,DWORD PTR [eax]
6400d3cb:	sub    edi,0x1
6400d3ce:	add    eax,0x4
6400d3d1:	test   edi,edi
6400d3d3:	mov    DWORD PTR [esp+0x10],esi
6400d3d7:	mov    edx,ebp
6400d3d9:	mov    DWORD PTR [esp+0x1c],edi
6400d3dd:	jg     0x6400d1b0
6400d3e3:	shr    esi,0x10
6400d3e6:	and    esi,0xff
6400d3ec:	mov    esi,DWORD PTR [esi*4+0x64032570]
6400d3f3:	movzx  edi,ch
6400d3f6:	xor    esi,DWORD PTR [edi*4+0x64032970]
6400d3fd:	mov    edi,edx
6400d3ff:	shr    edi,0x18
6400d402:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d409:	mov    edi,DWORD PTR [esp+0x24]
6400d40d:	mov    DWORD PTR [esp+0x28],esi
6400d411:	and    edi,0xff
6400d417:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d41e:	movzx  edi,BYTE PTR [esp+0x11]
6400d423:	xor    esi,DWORD PTR [eax]
6400d425:	add    eax,0x4
6400d428:	mov    DWORD PTR [esp+0x14],esi
6400d42c:	mov    esi,edx
6400d42e:	shr    esi,0x10
6400d431:	and    esi,0xff
6400d437:	mov    esi,DWORD PTR [esi*4+0x64032570]
6400d43e:	xor    esi,DWORD PTR [edi*4+0x64032970]
6400d445:	mov    edi,DWORD PTR [esp+0x24]
6400d449:	shr    edi,0x18
6400d44c:	mov    DWORD PTR [esp+0x28],esi
6400d450:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d457:	mov    edi,ecx
6400d459:	and    edi,0xff
6400d45f:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d466:	mov    edi,DWORD PTR [esp+0x24]
6400d46a:	xor    esi,DWORD PTR [eax]
6400d46c:	shr    edi,0x10
6400d46f:	mov    DWORD PTR [esp+0x18],esi
6400d473:	movzx  esi,dh
6400d476:	mov    esi,DWORD PTR [esi*4+0x64032970]
6400d47d:	and    edi,0xff
6400d483:	xor    esi,DWORD PTR [edi*4+0x64032570]
6400d48a:	mov    edi,ecx
6400d48c:	shr    edi,0x18
6400d48f:	xor    esi,DWORD PTR [edi*4+0x64032170]
6400d496:	mov    edi,DWORD PTR [esp+0x10]
6400d49a:	mov    DWORD PTR [esp+0x28],esi
6400d49e:	and    edi,0xff
6400d4a4:	xor    esi,DWORD PTR [edi*4+0x64032d70]
6400d4ab:	movzx  edi,BYTE PTR [esp+0x25]
6400d4b0:	xor    esi,DWORD PTR [eax+0x4]
6400d4b3:	shr    ecx,0x10
6400d4b6:	and    ecx,0xff
6400d4bc:	add    eax,0x4
6400d4bf:	mov    DWORD PTR [esp+0x28],esi
6400d4c3:	mov    esi,DWORD PTR [ecx*4+0x64032570]
6400d4ca:	xor    esi,DWORD PTR [edi*4+0x64032970]
6400d4d1:	mov    ecx,DWORD PTR [esp+0x10]
6400d4d5:	and    edx,0xff
6400d4db:	shr    ecx,0x18
6400d4de:	xor    esi,DWORD PTR [ecx*4+0x64032170]
6400d4e5:	add    eax,0x4
6400d4e8:	xor    esi,DWORD PTR [edx*4+0x64032d70]
6400d4ef:	mov    edx,DWORD PTR [esp+0x28]
6400d4f3:	xor    esi,DWORD PTR [eax]
6400d4f5:	shr    edx,0x10
6400d4f8:	and    edx,0xff
6400d4fe:	movzx  edx,BYTE PTR [edx+0x64031048]
6400d505:	mov    ecx,esi
6400d507:	shr    ecx,0x18
6400d50a:	xor    ebx,ebx
6400d50c:	mov    bh,BYTE PTR [ecx+0x64031048]
6400d512:	movzx  ecx,BYTE PTR [esp+0x19]
6400d517:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400d51e:	xor    edx,ebx
6400d520:	shl    edx,0x8
6400d523:	xor    edx,ecx
6400d525:	mov    ecx,DWORD PTR [esp+0x14]
6400d529:	mov    edi,ecx
6400d52b:	and    edi,0xff
6400d531:	movzx  edi,BYTE PTR [edi+0x64031048]
6400d538:	shl    edx,0x8
6400d53b:	add    eax,0x4
6400d53e:	xor    edx,edi
6400d540:	xor    edx,DWORD PTR [eax]
6400d542:	mov    DWORD PTR [esp+0x24],esi
6400d546:	add    eax,0x4
6400d549:	shr    esi,0x10
6400d54c:	and    esi,0xff
6400d552:	movzx  esi,BYTE PTR [esi+0x64031048]
6400d559:	shr    ecx,0x18
6400d55c:	xor    ebx,ebx
6400d55e:	mov    bh,BYTE PTR [ecx+0x64031048]
6400d564:	movzx  ecx,BYTE PTR [esp+0x29]
6400d569:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400d570:	xor    esi,ebx
6400d572:	shl    esi,0x8
6400d575:	xor    esi,ecx
6400d577:	mov    ecx,DWORD PTR [esp+0x18]
6400d57b:	mov    edi,ecx
6400d57d:	shl    esi,0x8
6400d580:	and    edi,0xff
6400d586:	movzx  edi,BYTE PTR [edi+0x64031048]
6400d58d:	xor    esi,edi
6400d58f:	xor    esi,DWORD PTR [eax]
6400d591:	mov    edi,DWORD PTR [esp+0x28]
6400d595:	mov    DWORD PTR [esp+0x1c],esi
6400d599:	mov    esi,DWORD PTR [esp+0x14]
6400d59d:	shr    ecx,0x18
6400d5a0:	shr    esi,0x10
6400d5a3:	and    esi,0xff
6400d5a9:	movzx  esi,BYTE PTR [esi+0x64031048]
6400d5b0:	xor    ebx,ebx
6400d5b2:	mov    bh,BYTE PTR [ecx+0x64031048]
6400d5b8:	movzx  ecx,BYTE PTR [esp+0x25]
6400d5bd:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400d5c4:	xor    esi,ebx
6400d5c6:	shl    esi,0x8
6400d5c9:	xor    esi,ecx
6400d5cb:	mov    ecx,edi
6400d5cd:	and    ecx,0xff
6400d5d3:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400d5da:	shl    esi,0x8
6400d5dd:	xor    esi,ecx
6400d5df:	xor    esi,DWORD PTR [eax+0x4]
6400d5e2:	mov    ecx,DWORD PTR [esp+0x18]
6400d5e6:	shr    ecx,0x10
6400d5e9:	xor    ebx,ebx
6400d5eb:	add    eax,0x4
6400d5ee:	shr    edi,0x18
6400d5f1:	mov    bh,BYTE PTR [edi+0x64031048]
6400d5f7:	and    ecx,0xff
6400d5fd:	movzx  ecx,BYTE PTR [ecx+0x64031048]
6400d604:	mov    DWORD PTR [esp+0x10],esi
6400d608:	movzx  esi,BYTE PTR [esp+0x15]
6400d60d:	movzx  esi,BYTE PTR [esi+0x64031048]
6400d614:	xor    ecx,ebx
6400d616:	shl    ecx,0x8
6400d619:	xor    ecx,esi
6400d61b:	mov    esi,DWORD PTR [esp+0x24]
6400d61f:	and    esi,0xff
6400d625:	movzx  esi,BYTE PTR [esi+0x64031048]
6400d62c:	shl    ecx,0x8
6400d62f:	xor    ecx,esi
6400d631:	xor    ecx,DWORD PTR [eax+0x4]
6400d634:	mov    esi,DWORD PTR [esp+0x2c]
6400d638:	mov    eax,edx
6400d63a:	shr    eax,0x8
6400d63d:	mov    BYTE PTR [esi+0x1],al
6400d640:	mov    eax,edx
6400d642:	mov    BYTE PTR [esi],dl
6400d644:	shr    edx,0x18
6400d647:	shr    eax,0x10
6400d64a:	mov    BYTE PTR [esi+0x3],dl
6400d64d:	mov    BYTE PTR [esi+0x2],al
6400d650:	mov    eax,DWORD PTR [esp+0x1c]
6400d654:	mov    edx,eax
6400d656:	shr    edx,0x8
6400d659:	mov    BYTE PTR [esi+0x5],dl
6400d65c:	mov    BYTE PTR [esi+0x4],al
6400d65f:	mov    edx,eax
6400d661:	shr    edx,0x10
6400d664:	shr    eax,0x18
6400d667:	mov    BYTE PTR [esi+0x6],dl
6400d66a:	mov    BYTE PTR [esi+0x7],al
6400d66d:	mov    eax,DWORD PTR [esp+0x10]
6400d671:	mov    edx,eax
6400d673:	shr    edx,0x8
6400d676:	mov    BYTE PTR [esi+0x9],dl
6400d679:	mov    edx,eax
6400d67b:	mov    BYTE PTR [esi+0x8],al
6400d67e:	shr    edx,0x10
6400d681:	shr    eax,0x18
6400d684:	mov    BYTE PTR [esi+0xa],dl
6400d687:	mov    BYTE PTR [esi+0xb],al
6400d68a:	mov    eax,ecx
6400d68c:	mov    edx,ecx
6400d68e:	mov    BYTE PTR [esi+0xc],cl
6400d691:	shr    eax,0x8
6400d694:	shr    edx,0x10
6400d697:	pop    edi
6400d698:	shr    ecx,0x18
6400d69b:	mov    BYTE PTR [esi+0xd],al
6400d69e:	mov    BYTE PTR [esi+0xe],dl
6400d6a1:	mov    BYTE PTR [esi+0xf],cl
6400d6a4:	pop    esi
6400d6a5:	pop    ebp
6400d6a6:	pop    ebx
6400d6a7:	add    esp,0x10
6400d6aa:	ret    
6400d6ab:	int3   
6400d6ac:	int3   
6400d6ad:	int3   
6400d6ae:	int3   
6400d6af:	int3   
6400d6b0:	sub    esp,0x30
6400d6b3:	mov    eax,ds:0x6402f09c
6400d6b8:	xor    eax,esp
6400d6ba:	mov    DWORD PTR [esp+0x2c],eax
6400d6be:	cmp    DWORD PTR [esp+0x38],0x0
6400d6c3:	mov    eax,DWORD PTR [esp+0x34]
6400d6c7:	push   ebx
6400d6c8:	push   ebp
6400d6c9:	mov    ebp,DWORD PTR [esp+0x44]
6400d6cd:	push   esi
6400d6ce:	mov    esi,DWORD PTR [esp+0x4c]
6400d6d2:	push   edi
6400d6d3:	mov    edi,edx
6400d6d5:	mov    DWORD PTR [esp+0x24],eax
6400d6d9:	jne    0x6400d797
6400d6df:	test   ecx,ecx
6400d6e1:	jle    0x6400d876
6400d6e7:	lea    eax,[ecx-0x1]
6400d6ea:	mov    ebx,ebp
6400d6ec:	shr    eax,0x4
6400d6ef:	sub    ebx,esi
6400d6f1:	add    eax,0x1
6400d6f4:	mov    DWORD PTR [esp+0x10],eax
6400d6f8:	mov    edx,DWORD PTR [edi+0x4]
6400d6fb:	mov    ecx,DWORD PTR [edi]
6400d6fd:	mov    eax,DWORD PTR [edi+0x8]
6400d700:	push   esi
6400d701:	mov    DWORD PTR [esp+0x34],edx
6400d705:	mov    edx,DWORD PTR [esp+0x28]
6400d709:	mov    DWORD PTR [esp+0x30],ecx
6400d70d:	mov    ecx,DWORD PTR [edi+0xc]
6400d710:	mov    DWORD PTR [esp+0x38],eax
6400d714:	push   0x0
6400d716:	push   edx
6400d717:	mov    eax,edi
6400d719:	mov    DWORD PTR [esp+0x44],ecx
6400d71d:	call   0x6400cc60
6400d722:	mov    eax,esi
6400d724:	add    esp,0xc
6400d727:	lea    ecx,[ebp+0x2]
6400d72a:	mov    esi,0x4
6400d72f:	nop
6400d730:	movzx  edx,BYTE PTR [ebx+eax*1]
6400d734:	xor    BYTE PTR [eax],dl
6400d736:	movzx  edx,BYTE PTR [ecx-0x1]
6400d73a:	xor    BYTE PTR [eax+0x1],dl
6400d73d:	movzx  edx,BYTE PTR [ecx]
6400d740:	xor    BYTE PTR [eax+0x2],dl
6400d743:	movzx  edx,BYTE PTR [ecx+0x1]
6400d747:	xor    BYTE PTR [eax+0x3],dl
6400d74a:	add    eax,0x4
6400d74d:	add    ecx,0x4
6400d750:	sub    esi,0x1
6400d753:	jne    0x6400d730
6400d755:	mov    ecx,DWORD PTR [esp+0x2c]
6400d759:	mov    edx,DWORD PTR [esp+0x30]
6400d75d:	mov    DWORD PTR [ebp+0x0],ecx
6400d760:	mov    ecx,DWORD PTR [esp+0x34]
6400d764:	mov    DWORD PTR [ebp+0x4],edx
6400d767:	mov    edx,DWORD PTR [esp+0x38]
6400d76b:	add    edi,0x10
6400d76e:	sub    ebx,0x10
6400d771:	sub    DWORD PTR [esp+0x10],0x1
6400d776:	mov    DWORD PTR [ebp+0x8],ecx
6400d779:	mov    DWORD PTR [ebp+0xc],edx
6400d77c:	mov    esi,eax
6400d77e:	jne    0x6400d6f8
6400d784:	pop    edi
6400d785:	pop    esi
6400d786:	pop    ebp
6400d787:	pop    ebx
6400d788:	mov    ecx,DWORD PTR [esp+0x2c]
6400d78c:	xor    ecx,esp
6400d78e:	call   0x64013f6c
6400d793:	add    esp,0x30
6400d796:	ret    
6400d797:	test   ecx,ecx
6400d799:	jle    0x6400d876
6400d79f:	mov    eax,ebp
6400d7a1:	sub    eax,esi
6400d7a3:	mov    DWORD PTR [esp+0x10],eax
6400d7a7:	mov    eax,ebp
6400d7a9:	sub    eax,edi
6400d7ab:	mov    DWORD PTR [esp+0x14],eax
6400d7af:	lea    eax,[ecx-0x1]
6400d7b2:	shr    eax,0x4
6400d7b5:	add    eax,0x1
6400d7b8:	mov    DWORD PTR [esp+0x1c],eax
6400d7bc:	lea    esp,[esp+0x0]
6400d7c0:	lea    eax,[ebp+0x3]
6400d7c3:	mov    edx,esi
6400d7c5:	sub    edx,edi
6400d7c7:	mov    DWORD PTR [esp+0x20],eax
6400d7cb:	lea    ecx,[esi+0x1]
6400d7ce:	mov    eax,edi
6400d7d0:	mov    DWORD PTR [esp+0x28],edx
6400d7d4:	mov    DWORD PTR [esp+0x18],0x4
6400d7dc:	jmp    0x6400d7e4
6400d7de:	mov    edi,edi
6400d7e0:	mov    edx,DWORD PTR [esp+0x28]
6400d7e4:	mov    ebx,DWORD PTR [esp+0x14]
6400d7e8:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400d7ec:	xor    bl,BYTE PTR [eax]
6400d7ee:	add    eax,0x4
6400d7f1:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400d7f5:	mov    edx,DWORD PTR [esp+0x10]
6400d7f9:	mov    dl,BYTE PTR [ecx+edx*1]
6400d7fc:	xor    dl,BYTE PTR [eax-0x3]
6400d7ff:	add    ecx,0x4
6400d802:	mov    BYTE PTR [ecx-0x4],dl
6400d805:	movzx  ebx,BYTE PTR [eax-0x2]
6400d809:	mov    edx,DWORD PTR [esp+0x20]
6400d80d:	xor    bl,BYTE PTR [edx-0x1]
6400d810:	add    edx,0x4
6400d813:	mov    BYTE PTR [ecx-0x3],bl
6400d816:	movzx  ebx,BYTE PTR [eax-0x1]
6400d81a:	xor    bl,BYTE PTR [edx-0x4]
6400d81d:	mov    DWORD PTR [esp+0x20],edx
6400d821:	mov    BYTE PTR [ecx-0x2],bl
6400d824:	mov    ebx,0x1
6400d829:	sub    DWORD PTR [esp+0x18],ebx
6400d82d:	jne    0x6400d7e0
6400d82f:	mov    eax,DWORD PTR [esp+0x48]
6400d833:	mov    ecx,DWORD PTR [esp+0x24]
6400d837:	push   esi
6400d838:	push   eax
6400d839:	push   ecx
6400d83a:	mov    eax,esi
6400d83c:	call   0x6400cc60
6400d841:	mov    edx,DWORD PTR [esi]
6400d843:	mov    DWORD PTR [ebp+0x0],edx
6400d846:	mov    eax,DWORD PTR [esi+0x4]
6400d849:	mov    DWORD PTR [ebp+0x4],eax
6400d84c:	mov    ecx,DWORD PTR [esi+0x8]
6400d84f:	mov    eax,0x10
6400d854:	sub    DWORD PTR [esp+0x20],eax
6400d858:	sub    DWORD PTR [esp+0x1c],eax
6400d85c:	mov    DWORD PTR [ebp+0x8],ecx
6400d85f:	mov    edx,DWORD PTR [esi+0xc]
6400d862:	add    esp,0xc
6400d865:	add    edi,eax
6400d867:	add    esi,eax
6400d869:	sub    DWORD PTR [esp+0x1c],ebx
6400d86d:	mov    DWORD PTR [ebp+0xc],edx
6400d870:	jne    0x6400d7c0
6400d876:	mov    ecx,DWORD PTR [esp+0x3c]
6400d87a:	pop    edi
6400d87b:	pop    esi
6400d87c:	pop    ebp
6400d87d:	pop    ebx
6400d87e:	xor    ecx,esp
6400d880:	call   0x64013f6c
6400d885:	add    esp,0x30
6400d888:	ret    
6400d889:	int3   
6400d88a:	int3   
6400d88b:	int3   
6400d88c:	int3   
6400d88d:	int3   
6400d88e:	int3   
6400d88f:	int3   
6400d890:	push   0xffffffff
6400d892:	push   0x640239eb
6400d897:	mov    eax,fs:0x0
6400d89d:	push   eax
6400d89e:	sub    esp,0x138
6400d8a4:	mov    eax,ds:0x6402f09c
6400d8a9:	xor    eax,esp
6400d8ab:	mov    DWORD PTR [esp+0x134],eax
6400d8b2:	push   ebp
6400d8b3:	push   esi
6400d8b4:	push   edi
6400d8b5:	mov    eax,ds:0x6402f09c
6400d8ba:	xor    eax,esp
6400d8bc:	push   eax
6400d8bd:	lea    eax,[esp+0x148]
6400d8c4:	mov    fs:0x0,eax
6400d8ca:	mov    ebp,DWORD PTR [esp+0x15c]
6400d8d1:	mov    eax,DWORD PTR [esp+0x158]
6400d8d8:	mov    DWORD PTR [esp+0x14],eax
6400d8dc:	lea    esi,[ebp+0x8]
6400d8df:	mov    eax,esi
6400d8e1:	and    eax,0xf
6400d8e4:	mov    DWORD PTR [esp+0x18],ecx
6400d8e8:	mov    DWORD PTR [esp+0x10],0x0
6400d8f0:	je     0x6400d8fb
6400d8f2:	mov    edx,0x10
6400d8f7:	sub    edx,eax
6400d8f9:	add    esi,edx
6400d8fb:	push   esi
6400d8fc:	call   0x6401370d
6400d901:	mov    edi,eax
6400d903:	mov    DWORD PTR [esp+0x14],edi
6400d907:	push   esi
6400d908:	mov    DWORD PTR [esp+0x158],0x0
6400d913:	call   0x6401370d
6400d918:	push   esi
6400d919:	push   0x0
6400d91b:	push   edi
6400d91c:	mov    DWORD PTR [ebx],eax
6400d91e:	call   0x64014670
6400d923:	mov    eax,DWORD PTR [esp+0x28]
6400d927:	push   ebp
6400d928:	push   eax
6400d929:	lea    ecx,[edi+0x8]
6400d92c:	mov    DWORD PTR [edi],0x52514f4b
6400d932:	push   ecx
6400d933:	mov    DWORD PTR [edi+0x4],ebp
6400d936:	call   0x64015990
6400d93b:	xor    eax,eax
6400d93d:	mov    DWORD PTR [esp+0x154],eax
6400d944:	mov    DWORD PTR [esp+0x158],eax
6400d94b:	mov    DWORD PTR [esp+0x15c],eax
6400d952:	mov    DWORD PTR [esp+0x160],eax
6400d959:	lea    eax,[esp+0x3c]
6400d95d:	call   0x6400c570
6400d962:	mov    eax,DWORD PTR [ebx]
6400d964:	push   eax
6400d965:	lea    edx,[esp+0x158]
6400d96c:	push   edx
6400d96d:	lea    eax,[esp+0x44]
6400d971:	push   0x1
6400d973:	push   eax
6400d974:	mov    edx,edi
6400d976:	mov    ecx,esi
6400d978:	call   0x6400d6b0
6400d97d:	mov    ecx,DWORD PTR [esp+0x48]
6400d981:	push   0x0
6400d983:	mov    DWORD PTR [ecx],esi
6400d985:	call   0x64013712
6400d98a:	push   edi
6400d98b:	call   0x64013712
6400d990:	add    esp,0x38
6400d993:	mov    eax,ebx
6400d995:	mov    ecx,DWORD PTR [esp+0x148]
6400d99c:	mov    DWORD PTR fs:0x0,ecx
6400d9a3:	pop    ecx
6400d9a4:	pop    edi
6400d9a5:	pop    esi
6400d9a6:	pop    ebp
6400d9a7:	mov    ecx,DWORD PTR [esp+0x134]
6400d9ae:	xor    ecx,esp
6400d9b0:	call   0x64013f6c
6400d9b5:	add    esp,0x144
6400d9bb:	ret    
6400d9bc:	int3   
6400d9bd:	int3   
6400d9be:	int3   
6400d9bf:	int3   
6400d9c0:	sub    esp,0x13c
6400d9c6:	mov    eax,ds:0x6402f09c
6400d9cb:	xor    eax,esp
6400d9cd:	mov    DWORD PTR [esp+0x134],eax
6400d9d4:	mov    eax,DWORD PTR [esp+0x144]
6400d9db:	push   ebp
6400d9dc:	mov    ebp,DWORD PTR [esp+0x144]
6400d9e3:	mov    DWORD PTR [esp+0x8],eax
6400d9e7:	xor    eax,eax
6400d9e9:	test   bl,0xf
6400d9ec:	push   esi
6400d9ed:	mov    DWORD PTR [esp+0x8],eax
6400d9f1:	je     0x6400d9ff
6400d9f3:	mov    DWORD PTR [esp+0x8],eax
6400d9f7:	mov    DWORD PTR [edi],eax
6400d9f9:	push   eax
6400d9fa:	jmp    0x6400da9f
6400d9ff:	push   ebx
6400da00:	call   0x6401370d
6400da05:	mov    esi,eax
6400da07:	xor    eax,eax
6400da09:	mov    DWORD PTR [esp+0x130],eax
6400da10:	mov    DWORD PTR [esp+0x134],eax
6400da17:	mov    DWORD PTR [esp+0x138],eax
6400da1e:	mov    DWORD PTR [esp+0x13c],eax
6400da25:	add    esp,0x4
6400da28:	lea    eax,[esp+0x10]
6400da2c:	call   0x6400ca80
6400da31:	push   esi
6400da32:	lea    ecx,[esp+0x130]
6400da39:	push   ecx
6400da3a:	lea    edx,[esp+0x18]
6400da3e:	push   0x0
6400da40:	push   edx
6400da41:	mov    edx,ebp
6400da43:	mov    ecx,ebx
6400da45:	call   0x6400d6b0
6400da4a:	add    esp,0x10
6400da4d:	cmp    DWORD PTR [esi],0x52534f4b
6400da53:	je     0x6400da7a
6400da55:	push   0x0
6400da57:	mov    DWORD PTR [esp+0xc],0x0
6400da5f:	mov    DWORD PTR [edi],0x0
6400da65:	call   0x64013712
6400da6a:	add    esp,0x4
6400da6d:	push   0x0
6400da6f:	call   0x64013712
6400da74:	add    esp,0x4
6400da77:	push   esi
6400da78:	jmp    0x6400da9f
6400da7a:	mov    eax,DWORD PTR [esi+0x4]
6400da7d:	mov    ecx,DWORD PTR [esp+0xc]
6400da81:	push   eax
6400da82:	lea    edx,[esi+0x8]
6400da85:	push   edx
6400da86:	push   esi
6400da87:	mov    DWORD PTR [ecx],eax
6400da89:	call   0x64014fb0
6400da8e:	add    esp,0xc
6400da91:	push   0x0
6400da93:	mov    DWORD PTR [edi],esi
6400da95:	call   0x64013712
6400da9a:	add    esp,0x4
6400da9d:	push   0x0
6400da9f:	call   0x64013712
6400daa4:	mov    ecx,DWORD PTR [esp+0x140]
6400daab:	add    esp,0x4
6400daae:	pop    esi
6400daaf:	pop    ebp
6400dab0:	xor    ecx,esp
6400dab2:	mov    eax,edi
6400dab4:	call   0x64013f6c
6400dab9:	add    esp,0x13c
6400dabf:	ret    
6400dac0:	push   ebp
6400dac1:	mov    ebp,esp
6400dac3:	and    esp,0xfffffff8
6400dac6:	push   0xffffffff
6400dac8:	push   0x64024abe
6400dacd:	mov    eax,fs:0x0
6400dad3:	push   eax
6400dad4:	push   ecx
6400dad5:	push   ebx
6400dad6:	push   esi
6400dad7:	mov    eax,ds:0x6402f09c
6400dadc:	xor    eax,esp
6400dade:	push   eax
6400dadf:	lea    eax,[esp+0x10]
6400dae3:	mov    fs:0x0,eax
6400dae9:	mov    ebx,0x1
6400daee:	test   BYTE PTR ds:0x640334b0,bl
6400daf4:	jne    0x6400db7e
6400dafa:	or     DWORD PTR ds:0x640334b0,ebx
6400db00:	push   0x6402a314
6400db05:	push   0xc
6400db07:	push   0x6402a348
6400db0c:	mov    DWORD PTR [esp+0x24],0x0
6400db14:	call   0x64006840
6400db19:	push   0x6402a358
6400db1e:	push   0x8
6400db20:	push   0x6402a37c
6400db25:	mov    esi,eax
6400db27:	call   0x64006b30
6400db2c:	add    esp,0x18
6400db2f:	push   eax
6400db30:	call   DWORD PTR ds:0x64026018
6400db36:	add    DWORD PTR ds:0x64033278,ebx
6400db3c:	test   eax,eax
6400db3e:	je     0x6400db65
6400db40:	push   esi
6400db41:	push   eax
6400db42:	call   DWORD PTR ds:0x64026014
6400db48:	add    DWORD PTR ds:0x6403327c,ebx
6400db4e:	mov    ds:0x640334ac,eax
6400db53:	mov    ecx,DWORD PTR [esp+0x10]
6400db57:	mov    DWORD PTR fs:0x0,ecx
6400db5e:	pop    ecx
6400db5f:	pop    esi
6400db60:	pop    ebx
6400db61:	mov    esp,ebp
6400db63:	pop    ebp
6400db64:	ret    
6400db65:	xor    eax,eax
6400db67:	mov    ds:0x640334ac,eax
6400db6c:	mov    ecx,DWORD PTR [esp+0x10]
6400db70:	mov    DWORD PTR fs:0x0,ecx
6400db77:	pop    ecx
6400db78:	pop    esi
6400db79:	pop    ebx
6400db7a:	mov    esp,ebp
6400db7c:	pop    ebp
6400db7d:	ret    
6400db7e:	mov    eax,ds:0x640334ac
6400db83:	mov    ecx,DWORD PTR [esp+0x10]
6400db87:	mov    DWORD PTR fs:0x0,ecx
6400db8e:	pop    ecx
6400db8f:	pop    esi
6400db90:	pop    ebx
6400db91:	mov    esp,ebp
6400db93:	pop    ebp
6400db94:	ret    
6400db95:	int3   
6400db96:	int3   
6400db97:	int3   
6400db98:	int3   
6400db99:	int3   
6400db9a:	int3   
6400db9b:	int3   
6400db9c:	int3   
6400db9d:	int3   
6400db9e:	int3   
6400db9f:	int3   
6400dba0:	push   ebp
6400dba1:	mov    ebp,esp
6400dba3:	and    esp,0xfffffff8
6400dba6:	push   0xffffffff
6400dba8:	push   0x64024a8e
6400dbad:	mov    eax,fs:0x0
6400dbb3:	push   eax
6400dbb4:	push   ecx
6400dbb5:	push   ebx
6400dbb6:	push   esi
6400dbb7:	mov    eax,ds:0x6402f09c
6400dbbc:	xor    eax,esp
6400dbbe:	push   eax
6400dbbf:	lea    eax,[esp+0x10]
6400dbc3:	mov    fs:0x0,eax
6400dbc9:	mov    ebx,0x1
6400dbce:	test   BYTE PTR ds:0x640334a8,bl
6400dbd4:	jne    0x6400dc5e
6400dbda:	or     DWORD PTR ds:0x640334a8,ebx
6400dbe0:	push   0x6402a390
6400dbe5:	push   0xe
6400dbe7:	push   0x6402a3cc
6400dbec:	mov    DWORD PTR [esp+0x24],0x0
6400dbf4:	call   0x64006840
6400dbf9:	push   0x6402a3dc
6400dbfe:	push   0x8
6400dc00:	push   0x6402a37c
6400dc05:	mov    esi,eax
6400dc07:	call   0x64006b30
6400dc0c:	add    esp,0x18
6400dc0f:	push   eax
6400dc10:	call   DWORD PTR ds:0x64026018
6400dc16:	add    DWORD PTR ds:0x64033278,ebx
6400dc1c:	test   eax,eax
6400dc1e:	je     0x6400dc45
6400dc20:	push   esi
6400dc21:	push   eax
6400dc22:	call   DWORD PTR ds:0x64026014
6400dc28:	add    DWORD PTR ds:0x6403327c,ebx
6400dc2e:	mov    ds:0x640334a4,eax
6400dc33:	mov    ecx,DWORD PTR [esp+0x10]
6400dc37:	mov    DWORD PTR fs:0x0,ecx
6400dc3e:	pop    ecx
6400dc3f:	pop    esi
6400dc40:	pop    ebx
6400dc41:	mov    esp,ebp
6400dc43:	pop    ebp
6400dc44:	ret    
6400dc45:	xor    eax,eax
6400dc47:	mov    ds:0x640334a4,eax
6400dc4c:	mov    ecx,DWORD PTR [esp+0x10]
6400dc50:	mov    DWORD PTR fs:0x0,ecx
6400dc57:	pop    ecx
6400dc58:	pop    esi
6400dc59:	pop    ebx
6400dc5a:	mov    esp,ebp
6400dc5c:	pop    ebp
6400dc5d:	ret    
6400dc5e:	mov    eax,ds:0x640334a4
6400dc63:	mov    ecx,DWORD PTR [esp+0x10]
6400dc67:	mov    DWORD PTR fs:0x0,ecx
6400dc6e:	pop    ecx
6400dc6f:	pop    esi
6400dc70:	pop    ebx
6400dc71:	mov    esp,ebp
6400dc73:	pop    ebp
6400dc74:	ret    
6400dc75:	int3   
6400dc76:	int3   
6400dc77:	int3   
6400dc78:	int3   
6400dc79:	int3   
6400dc7a:	int3   
6400dc7b:	int3   
6400dc7c:	int3   
6400dc7d:	int3   
6400dc7e:	int3   
6400dc7f:	int3   
6400dc80:	push   ebp
6400dc81:	mov    ebp,esp
6400dc83:	and    esp,0xfffffff8
6400dc86:	push   0xffffffff
6400dc88:	push   0x64024a5e
6400dc8d:	mov    eax,fs:0x0
6400dc93:	push   eax
6400dc94:	push   ecx
6400dc95:	push   ebx
6400dc96:	push   esi
6400dc97:	mov    eax,ds:0x6402f09c
6400dc9c:	xor    eax,esp
6400dc9e:	push   eax
6400dc9f:	lea    eax,[esp+0x10]
6400dca3:	mov    fs:0x0,eax
6400dca9:	mov    ebx,0x1
6400dcae:	test   BYTE PTR ds:0x640334a0,bl
6400dcb4:	jne    0x6400dd3e
6400dcba:	or     DWORD PTR ds:0x640334a0,ebx
6400dcc0:	push   0x6402a408
6400dcc5:	push   0xf
6400dcc7:	push   0x6402a438
6400dccc:	mov    DWORD PTR [esp+0x24],0x0
6400dcd4:	call   0x64006840
6400dcd9:	push   0x6402a448
6400dcde:	push   0x8
6400dce0:	push   0x6402a37c
6400dce5:	mov    esi,eax
6400dce7:	call   0x64006b30
6400dcec:	add    esp,0x18
6400dcef:	push   eax
6400dcf0:	call   DWORD PTR ds:0x64026018
6400dcf6:	add    DWORD PTR ds:0x64033278,ebx
6400dcfc:	test   eax,eax
6400dcfe:	je     0x6400dd25
6400dd00:	push   esi
6400dd01:	push   eax
6400dd02:	call   DWORD PTR ds:0x64026014
6400dd08:	add    DWORD PTR ds:0x6403327c,ebx
6400dd0e:	mov    ds:0x6403349c,eax
6400dd13:	mov    ecx,DWORD PTR [esp+0x10]
6400dd17:	mov    DWORD PTR fs:0x0,ecx
6400dd1e:	pop    ecx
6400dd1f:	pop    esi
6400dd20:	pop    ebx
6400dd21:	mov    esp,ebp
6400dd23:	pop    ebp
6400dd24:	ret    
6400dd25:	xor    eax,eax
6400dd27:	mov    ds:0x6403349c,eax
6400dd2c:	mov    ecx,DWORD PTR [esp+0x10]
6400dd30:	mov    DWORD PTR fs:0x0,ecx
6400dd37:	pop    ecx
6400dd38:	pop    esi
6400dd39:	pop    ebx
6400dd3a:	mov    esp,ebp
6400dd3c:	pop    ebp
6400dd3d:	ret    
6400dd3e:	mov    eax,ds:0x6403349c
6400dd43:	mov    ecx,DWORD PTR [esp+0x10]
6400dd47:	mov    DWORD PTR fs:0x0,ecx
6400dd4e:	pop    ecx
6400dd4f:	pop    esi
6400dd50:	pop    ebx
6400dd51:	mov    esp,ebp
6400dd53:	pop    ebp
6400dd54:	ret    
6400dd55:	int3   
6400dd56:	int3   
6400dd57:	int3   
6400dd58:	int3   
6400dd59:	int3   
6400dd5a:	int3   
6400dd5b:	int3   
6400dd5c:	int3   
6400dd5d:	int3   
6400dd5e:	int3   
6400dd5f:	int3   
6400dd60:	push   ebp
6400dd61:	mov    ebp,esp
6400dd63:	and    esp,0xfffffff8
6400dd66:	push   0xffffffff
6400dd68:	push   0x64024a2e
6400dd6d:	mov    eax,fs:0x0
6400dd73:	push   eax
6400dd74:	push   ecx
6400dd75:	push   ebx
6400dd76:	push   esi
6400dd77:	mov    eax,ds:0x6402f09c
6400dd7c:	xor    eax,esp
6400dd7e:	push   eax
6400dd7f:	lea    eax,[esp+0x10]
6400dd83:	mov    fs:0x0,eax
6400dd89:	mov    ebx,0x1
6400dd8e:	test   BYTE PTR ds:0x64033498,bl
6400dd94:	jne    0x6400de1e
6400dd9a:	or     DWORD PTR ds:0x64033498,ebx
6400dda0:	push   0x6402a478
6400dda5:	push   0xf
6400dda7:	push   0x6402a4a4
6400ddac:	mov    DWORD PTR [esp+0x24],0x0
6400ddb4:	call   0x64006840
6400ddb9:	push   0x6402a4b4
6400ddbe:	push   0x8
6400ddc0:	push   0x6402a37c
6400ddc5:	mov    esi,eax
6400ddc7:	call   0x64006b30
6400ddcc:	add    esp,0x18
6400ddcf:	push   eax
6400ddd0:	call   DWORD PTR ds:0x64026018
6400ddd6:	add    DWORD PTR ds:0x64033278,ebx
6400dddc:	test   eax,eax
6400ddde:	je     0x6400de05
6400dde0:	push   esi
6400dde1:	push   eax
6400dde2:	call   DWORD PTR ds:0x64026014
6400dde8:	add    DWORD PTR ds:0x6403327c,ebx
6400ddee:	mov    ds:0x64033494,eax
6400ddf3:	mov    ecx,DWORD PTR [esp+0x10]
6400ddf7:	mov    DWORD PTR fs:0x0,ecx
6400ddfe:	pop    ecx
6400ddff:	pop    esi
6400de00:	pop    ebx
6400de01:	mov    esp,ebp
6400de03:	pop    ebp
6400de04:	ret    
6400de05:	xor    eax,eax
6400de07:	mov    ds:0x64033494,eax
6400de0c:	mov    ecx,DWORD PTR [esp+0x10]
6400de10:	mov    DWORD PTR fs:0x0,ecx
6400de17:	pop    ecx
6400de18:	pop    esi
6400de19:	pop    ebx
6400de1a:	mov    esp,ebp
6400de1c:	pop    ebp
6400de1d:	ret    
6400de1e:	mov    eax,ds:0x64033494
6400de23:	mov    ecx,DWORD PTR [esp+0x10]
6400de27:	mov    DWORD PTR fs:0x0,ecx
6400de2e:	pop    ecx
6400de2f:	pop    esi
6400de30:	pop    ebx
6400de31:	mov    esp,ebp
6400de33:	pop    ebp
6400de34:	ret    
6400de35:	int3   
6400de36:	int3   
6400de37:	int3   
6400de38:	int3   
6400de39:	int3   
6400de3a:	int3   
6400de3b:	int3   
6400de3c:	int3   
6400de3d:	int3   
6400de3e:	int3   
6400de3f:	int3   
6400de40:	push   ebp
6400de41:	mov    ebp,esp
6400de43:	and    esp,0xfffffff8
6400de46:	push   0xffffffff
6400de48:	push   0x640249fe
6400de4d:	mov    eax,fs:0x0
6400de53:	push   eax
6400de54:	push   ecx
6400de55:	push   ebx
6400de56:	push   esi
6400de57:	mov    eax,ds:0x6402f09c
6400de5c:	xor    eax,esp
6400de5e:	push   eax
6400de5f:	lea    eax,[esp+0x10]
6400de63:	mov    fs:0x0,eax
6400de69:	mov    ebx,0x1
6400de6e:	test   BYTE PTR ds:0x64033490,bl
6400de74:	jne    0x6400defe
6400de7a:	or     DWORD PTR ds:0x64033490,ebx
6400de80:	push   0x6402a4d8
6400de85:	push   0x13
6400de87:	push   0x6402a518
6400de8c:	mov    DWORD PTR [esp+0x24],0x0
6400de94:	call   0x64006840
6400de99:	push   0x6402a52c
6400de9e:	push   0x8
6400dea0:	push   0x6402a564
6400dea5:	mov    esi,eax
6400dea7:	call   0x64006b30
6400deac:	add    esp,0x18
6400deaf:	push   eax
6400deb0:	call   DWORD PTR ds:0x64026018
6400deb6:	add    DWORD PTR ds:0x64033278,ebx
6400debc:	test   eax,eax
6400debe:	je     0x6400dee5
6400dec0:	push   esi
6400dec1:	push   eax
6400dec2:	call   DWORD PTR ds:0x64026014
6400dec8:	add    DWORD PTR ds:0x6403327c,ebx
6400dece:	mov    ds:0x6403348c,eax
6400ded3:	mov    ecx,DWORD PTR [esp+0x10]
6400ded7:	mov    DWORD PTR fs:0x0,ecx
6400dede:	pop    ecx
6400dedf:	pop    esi
6400dee0:	pop    ebx
6400dee1:	mov    esp,ebp
6400dee3:	pop    ebp
6400dee4:	ret    
6400dee5:	xor    eax,eax
6400dee7:	mov    ds:0x6403348c,eax
6400deec:	mov    ecx,DWORD PTR [esp+0x10]
6400def0:	mov    DWORD PTR fs:0x0,ecx
6400def7:	pop    ecx
6400def8:	pop    esi
6400def9:	pop    ebx
6400defa:	mov    esp,ebp
6400defc:	pop    ebp
6400defd:	ret    
6400defe:	mov    eax,ds:0x6403348c
6400df03:	mov    ecx,DWORD PTR [esp+0x10]
6400df07:	mov    DWORD PTR fs:0x0,ecx
6400df0e:	pop    ecx
6400df0f:	pop    esi
6400df10:	pop    ebx
6400df11:	mov    esp,ebp
6400df13:	pop    ebp
6400df14:	ret    
6400df15:	int3   
6400df16:	int3   
6400df17:	int3   
6400df18:	int3   
6400df19:	int3   
6400df1a:	int3   
6400df1b:	int3   
6400df1c:	int3   
6400df1d:	int3   
6400df1e:	int3   
6400df1f:	int3   
6400df20:	push   ebp
6400df21:	mov    ebp,esp
6400df23:	and    esp,0xfffffff8
6400df26:	push   0xffffffff
6400df28:	push   0x640249ce
6400df2d:	mov    eax,fs:0x0
6400df33:	push   eax
6400df34:	push   ecx
6400df35:	push   ebx
6400df36:	push   esi
6400df37:	mov    eax,ds:0x6402f09c
6400df3c:	xor    eax,esp
6400df3e:	push   eax
6400df3f:	lea    eax,[esp+0x10]
6400df43:	mov    fs:0x0,eax
6400df49:	mov    ebx,0x1
6400df4e:	test   BYTE PTR ds:0x64033488,bl
6400df54:	jne    0x6400dfde
6400df5a:	or     DWORD PTR ds:0x64033488,ebx
6400df60:	push   0x6402a578
6400df65:	push   0xe
6400df67:	push   0x6402a5b0
6400df6c:	mov    DWORD PTR [esp+0x24],0x0
6400df74:	call   0x64006840
6400df79:	push   0x6402a5c0
6400df7e:	push   0x8
6400df80:	push   0x6402a564
6400df85:	mov    esi,eax
6400df87:	call   0x64006b30
6400df8c:	add    esp,0x18
6400df8f:	push   eax
6400df90:	call   DWORD PTR ds:0x64026018
6400df96:	add    DWORD PTR ds:0x64033278,ebx
6400df9c:	test   eax,eax
6400df9e:	je     0x6400dfc5
6400dfa0:	push   esi
6400dfa1:	push   eax
6400dfa2:	call   DWORD PTR ds:0x64026014
6400dfa8:	add    DWORD PTR ds:0x6403327c,ebx
6400dfae:	mov    ds:0x64033484,eax
6400dfb3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfb7:	mov    DWORD PTR fs:0x0,ecx
6400dfbe:	pop    ecx
6400dfbf:	pop    esi
6400dfc0:	pop    ebx
6400dfc1:	mov    esp,ebp
6400dfc3:	pop    ebp
6400dfc4:	ret    
6400dfc5:	xor    eax,eax
6400dfc7:	mov    ds:0x64033484,eax
6400dfcc:	mov    ecx,DWORD PTR [esp+0x10]
6400dfd0:	mov    DWORD PTR fs:0x0,ecx
6400dfd7:	pop    ecx
6400dfd8:	pop    esi
6400dfd9:	pop    ebx
6400dfda:	mov    esp,ebp
6400dfdc:	pop    ebp
6400dfdd:	ret    
6400dfde:	mov    eax,ds:0x64033484
6400dfe3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfe7:	mov    DWORD PTR fs:0x0,ecx
6400dfee:	pop    ecx
6400dfef:	pop    esi
6400dff0:	pop    ebx
6400dff1:	mov    esp,ebp
6400dff3:	pop    ebp
6400dff4:	ret    
6400dff5:	int3   
6400dff6:	int3   
6400dff7:	int3   
6400dff8:	int3   
6400dff9:	int3   
6400dffa:	int3   
6400dffb:	int3   
6400dffc:	int3   
6400dffd:	int3   
6400dffe:	int3   
6400dfff:	int3   
6400e000:	push   ebp
6400e001:	mov    ebp,esp
6400e003:	and    esp,0xfffffff8
6400e006:	push   0xffffffff
6400e008:	push   0x6402499e
6400e00d:	mov    eax,fs:0x0
6400e013:	push   eax
6400e014:	push   ecx
6400e015:	push   ebx
6400e016:	push   esi
6400e017:	mov    eax,ds:0x6402f09c
6400e01c:	xor    eax,esp
6400e01e:	push   eax
6400e01f:	lea    eax,[esp+0x10]
6400e023:	mov    fs:0x0,eax
6400e029:	mov    ebx,0x1
6400e02e:	test   BYTE PTR ds:0x64033480,bl
6400e034:	jne    0x6400e0be
6400e03a:	or     DWORD PTR ds:0x64033480,ebx
6400e040:	push   0x6402a5e8
6400e045:	push   0xb
6400e047:	push   0x6402a620
6400e04c:	mov    DWORD PTR [esp+0x24],0x0
6400e054:	call   0x64006840
6400e059:	push   0x6402a62c
6400e05e:	push   0x8
6400e060:	push   0x6402a564
6400e065:	mov    esi,eax
6400e067:	call   0x64006b30
6400e06c:	add    esp,0x18
6400e06f:	push   eax
6400e070:	call   DWORD PTR ds:0x64026018
6400e076:	add    DWORD PTR ds:0x64033278,ebx
6400e07c:	test   eax,eax
6400e07e:	je     0x6400e0a5
6400e080:	push   esi
6400e081:	push   eax
6400e082:	call   DWORD PTR ds:0x64026014
6400e088:	add    DWORD PTR ds:0x6403327c,ebx
6400e08e:	mov    ds:0x6403347c,eax
6400e093:	mov    ecx,DWORD PTR [esp+0x10]
6400e097:	mov    DWORD PTR fs:0x0,ecx
6400e09e:	pop    ecx
6400e09f:	pop    esi
6400e0a0:	pop    ebx
6400e0a1:	mov    esp,ebp
6400e0a3:	pop    ebp
6400e0a4:	ret    
6400e0a5:	xor    eax,eax
6400e0a7:	mov    ds:0x6403347c,eax
6400e0ac:	mov    ecx,DWORD PTR [esp+0x10]
6400e0b0:	mov    DWORD PTR fs:0x0,ecx
6400e0b7:	pop    ecx
6400e0b8:	pop    esi
6400e0b9:	pop    ebx
6400e0ba:	mov    esp,ebp
6400e0bc:	pop    ebp
6400e0bd:	ret    
6400e0be:	mov    eax,ds:0x6403347c
6400e0c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0c7:	mov    DWORD PTR fs:0x0,ecx
6400e0ce:	pop    ecx
6400e0cf:	pop    esi
6400e0d0:	pop    ebx
6400e0d1:	mov    esp,ebp
6400e0d3:	pop    ebp
6400e0d4:	ret    
6400e0d5:	int3   
6400e0d6:	int3   
6400e0d7:	int3   
6400e0d8:	int3   
6400e0d9:	int3   
6400e0da:	int3   
6400e0db:	int3   
6400e0dc:	int3   
6400e0dd:	int3   
6400e0de:	int3   
6400e0df:	int3   
6400e0e0:	push   ebp
6400e0e1:	mov    ebp,esp
6400e0e3:	and    esp,0xfffffff8
6400e0e6:	push   0xffffffff
6400e0e8:	push   0x6402496e
6400e0ed:	mov    eax,fs:0x0
6400e0f3:	push   eax
6400e0f4:	push   ecx
6400e0f5:	push   ebx
6400e0f6:	push   esi
6400e0f7:	mov    eax,ds:0x6402f09c
6400e0fc:	xor    eax,esp
6400e0fe:	push   eax
6400e0ff:	lea    eax,[esp+0x10]
6400e103:	mov    fs:0x0,eax
6400e109:	mov    ebx,0x1
6400e10e:	test   BYTE PTR ds:0x64033478,bl
6400e114:	jne    0x6400e19e
6400e11a:	or     DWORD PTR ds:0x64033478,ebx
6400e120:	push   0x6402a650
6400e125:	push   0xb
6400e127:	push   0x6402a678
6400e12c:	mov    DWORD PTR [esp+0x24],0x0
6400e134:	call   0x64006840
6400e139:	push   0x6402a684
6400e13e:	push   0x8
6400e140:	push   0x6402a564
6400e145:	mov    esi,eax
6400e147:	call   0x64006b30
6400e14c:	add    esp,0x18
6400e14f:	push   eax
6400e150:	call   DWORD PTR ds:0x64026018
6400e156:	add    DWORD PTR ds:0x64033278,ebx
6400e15c:	test   eax,eax
6400e15e:	je     0x6400e185
6400e160:	push   esi
6400e161:	push   eax
6400e162:	call   DWORD PTR ds:0x64026014
6400e168:	add    DWORD PTR ds:0x6403327c,ebx
6400e16e:	mov    ds:0x64033474,eax
6400e173:	mov    ecx,DWORD PTR [esp+0x10]
6400e177:	mov    DWORD PTR fs:0x0,ecx
6400e17e:	pop    ecx
6400e17f:	pop    esi
6400e180:	pop    ebx
6400e181:	mov    esp,ebp
6400e183:	pop    ebp
6400e184:	ret    
6400e185:	xor    eax,eax
6400e187:	mov    ds:0x64033474,eax
6400e18c:	mov    ecx,DWORD PTR [esp+0x10]
6400e190:	mov    DWORD PTR fs:0x0,ecx
6400e197:	pop    ecx
6400e198:	pop    esi
6400e199:	pop    ebx
6400e19a:	mov    esp,ebp
6400e19c:	pop    ebp
6400e19d:	ret    
6400e19e:	mov    eax,ds:0x64033474
6400e1a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1a7:	mov    DWORD PTR fs:0x0,ecx
6400e1ae:	pop    ecx
6400e1af:	pop    esi
6400e1b0:	pop    ebx
6400e1b1:	mov    esp,ebp
6400e1b3:	pop    ebp
6400e1b4:	ret    
6400e1b5:	int3   
6400e1b6:	int3   
6400e1b7:	int3   
6400e1b8:	int3   
6400e1b9:	int3   
6400e1ba:	int3   
6400e1bb:	int3   
6400e1bc:	int3   
6400e1bd:	int3   
6400e1be:	int3   
6400e1bf:	int3   
6400e1c0:	push   ebp
6400e1c1:	mov    ebp,esp
6400e1c3:	and    esp,0xfffffff8
6400e1c6:	push   0xffffffff
6400e1c8:	push   0x6402493e
6400e1cd:	mov    eax,fs:0x0
6400e1d3:	push   eax
6400e1d4:	push   ecx
6400e1d5:	push   ebx
6400e1d6:	push   esi
6400e1d7:	mov    eax,ds:0x6402f09c
6400e1dc:	xor    eax,esp
6400e1de:	push   eax
6400e1df:	lea    eax,[esp+0x10]
6400e1e3:	mov    fs:0x0,eax
6400e1e9:	mov    ebx,0x1
6400e1ee:	test   BYTE PTR ds:0x64033470,bl
6400e1f4:	jne    0x6400e27e
6400e1fa:	or     DWORD PTR ds:0x64033470,ebx
6400e200:	push   0x6402a6b8
6400e205:	push   0xb
6400e207:	push   0x6402a6dc
6400e20c:	mov    DWORD PTR [esp+0x24],0x0
6400e214:	call   0x64006840
6400e219:	push   0x6402a6e8
6400e21e:	push   0x8
6400e220:	push   0x6402a564
6400e225:	mov    esi,eax
6400e227:	call   0x64006b30
6400e22c:	add    esp,0x18
6400e22f:	push   eax
6400e230:	call   DWORD PTR ds:0x64026018
6400e236:	add    DWORD PTR ds:0x64033278,ebx
6400e23c:	test   eax,eax
6400e23e:	je     0x6400e265
6400e240:	push   esi
6400e241:	push   eax
6400e242:	call   DWORD PTR ds:0x64026014
6400e248:	add    DWORD PTR ds:0x6403327c,ebx
6400e24e:	mov    ds:0x6403346c,eax
6400e253:	mov    ecx,DWORD PTR [esp+0x10]
6400e257:	mov    DWORD PTR fs:0x0,ecx
6400e25e:	pop    ecx
6400e25f:	pop    esi
6400e260:	pop    ebx
6400e261:	mov    esp,ebp
6400e263:	pop    ebp
6400e264:	ret    
6400e265:	xor    eax,eax
6400e267:	mov    ds:0x6403346c,eax
6400e26c:	mov    ecx,DWORD PTR [esp+0x10]
6400e270:	mov    DWORD PTR fs:0x0,ecx
6400e277:	pop    ecx
6400e278:	pop    esi
6400e279:	pop    ebx
6400e27a:	mov    esp,ebp
6400e27c:	pop    ebp
6400e27d:	ret    
6400e27e:	mov    eax,ds:0x6403346c
6400e283:	mov    ecx,DWORD PTR [esp+0x10]
6400e287:	mov    DWORD PTR fs:0x0,ecx
6400e28e:	pop    ecx
6400e28f:	pop    esi
6400e290:	pop    ebx
6400e291:	mov    esp,ebp
6400e293:	pop    ebp
6400e294:	ret    
6400e295:	int3   
6400e296:	int3   
6400e297:	int3   
6400e298:	int3   
6400e299:	int3   
6400e29a:	int3   
6400e29b:	int3   
6400e29c:	int3   
6400e29d:	int3   
6400e29e:	int3   
6400e29f:	int3   
6400e2a0:	push   ebp
6400e2a1:	mov    ebp,esp
6400e2a3:	and    esp,0xfffffff8
6400e2a6:	push   0xffffffff
6400e2a8:	push   0x6402490e
6400e2ad:	mov    eax,fs:0x0
6400e2b3:	push   eax
6400e2b4:	push   ecx
6400e2b5:	push   ebx
6400e2b6:	push   esi
6400e2b7:	mov    eax,ds:0x6402f09c
6400e2bc:	xor    eax,esp
6400e2be:	push   eax
6400e2bf:	lea    eax,[esp+0x10]
6400e2c3:	mov    fs:0x0,eax
6400e2c9:	mov    ebx,0x1
6400e2ce:	test   BYTE PTR ds:0x64033468,bl
6400e2d4:	jne    0x6400e35e
6400e2da:	or     DWORD PTR ds:0x64033468,ebx
6400e2e0:	push   0x6402a718
6400e2e5:	push   0xc
6400e2e7:	push   0x6402a750
6400e2ec:	mov    DWORD PTR [esp+0x24],0x0
6400e2f4:	call   0x64006840
6400e2f9:	push   0x6402a760
6400e2fe:	push   0x8
6400e300:	push   0x6402a564
6400e305:	mov    esi,eax
6400e307:	call   0x64006b30
6400e30c:	add    esp,0x18
6400e30f:	push   eax
6400e310:	call   DWORD PTR ds:0x64026018
6400e316:	add    DWORD PTR ds:0x64033278,ebx
6400e31c:	test   eax,eax
6400e31e:	je     0x6400e345
6400e320:	push   esi
6400e321:	push   eax
6400e322:	call   DWORD PTR ds:0x64026014
6400e328:	add    DWORD PTR ds:0x6403327c,ebx
6400e32e:	mov    ds:0x64033464,eax
6400e333:	mov    ecx,DWORD PTR [esp+0x10]
6400e337:	mov    DWORD PTR fs:0x0,ecx
6400e33e:	pop    ecx
6400e33f:	pop    esi
6400e340:	pop    ebx
6400e341:	mov    esp,ebp
6400e343:	pop    ebp
6400e344:	ret    
6400e345:	xor    eax,eax
6400e347:	mov    ds:0x64033464,eax
6400e34c:	mov    ecx,DWORD PTR [esp+0x10]
6400e350:	mov    DWORD PTR fs:0x0,ecx
6400e357:	pop    ecx
6400e358:	pop    esi
6400e359:	pop    ebx
6400e35a:	mov    esp,ebp
6400e35c:	pop    ebp
6400e35d:	ret    
6400e35e:	mov    eax,ds:0x64033464
6400e363:	mov    ecx,DWORD PTR [esp+0x10]
6400e367:	mov    DWORD PTR fs:0x0,ecx
6400e36e:	pop    ecx
6400e36f:	pop    esi
6400e370:	pop    ebx
6400e371:	mov    esp,ebp
6400e373:	pop    ebp
6400e374:	ret    
6400e375:	int3   
6400e376:	int3   
6400e377:	int3   
6400e378:	int3   
6400e379:	int3   
6400e37a:	int3   
6400e37b:	int3   
6400e37c:	int3   
6400e37d:	int3   
6400e37e:	int3   
6400e37f:	int3   
6400e380:	push   ebp
6400e381:	mov    ebp,esp
6400e383:	and    esp,0xfffffff8
6400e386:	push   0xffffffff
6400e388:	push   0x640248de
6400e38d:	mov    eax,fs:0x0
6400e393:	push   eax
6400e394:	push   ecx
6400e395:	push   ebx
6400e396:	push   esi
6400e397:	mov    eax,ds:0x6402f09c
6400e39c:	xor    eax,esp
6400e39e:	push   eax
6400e39f:	lea    eax,[esp+0x10]
6400e3a3:	mov    fs:0x0,eax
6400e3a9:	mov    ebx,0x1
6400e3ae:	test   BYTE PTR ds:0x64033460,bl
6400e3b4:	jne    0x6400e43e
6400e3ba:	or     DWORD PTR ds:0x64033460,ebx
6400e3c0:	push   0x6402a7a0
6400e3c5:	push   0x10
6400e3c7:	push   0x6402a7d4
6400e3cc:	mov    DWORD PTR [esp+0x24],0x0
6400e3d4:	call   0x64006840
6400e3d9:	push   0x6402a7e8
6400e3de:	push   0x8
6400e3e0:	push   0x6402a564
6400e3e5:	mov    esi,eax
6400e3e7:	call   0x64006b30
6400e3ec:	add    esp,0x18
6400e3ef:	push   eax
6400e3f0:	call   DWORD PTR ds:0x64026018
6400e3f6:	add    DWORD PTR ds:0x64033278,ebx
6400e3fc:	test   eax,eax
6400e3fe:	je     0x6400e425
6400e400:	push   esi
6400e401:	push   eax
6400e402:	call   DWORD PTR ds:0x64026014
6400e408:	add    DWORD PTR ds:0x6403327c,ebx
6400e40e:	mov    ds:0x6403345c,eax
6400e413:	mov    ecx,DWORD PTR [esp+0x10]
6400e417:	mov    DWORD PTR fs:0x0,ecx
6400e41e:	pop    ecx
6400e41f:	pop    esi
6400e420:	pop    ebx
6400e421:	mov    esp,ebp
6400e423:	pop    ebp
6400e424:	ret    
6400e425:	xor    eax,eax
6400e427:	mov    ds:0x6403345c,eax
6400e42c:	mov    ecx,DWORD PTR [esp+0x10]
6400e430:	mov    DWORD PTR fs:0x0,ecx
6400e437:	pop    ecx
6400e438:	pop    esi
6400e439:	pop    ebx
6400e43a:	mov    esp,ebp
6400e43c:	pop    ebp
6400e43d:	ret    
6400e43e:	mov    eax,ds:0x6403345c
6400e443:	mov    ecx,DWORD PTR [esp+0x10]
6400e447:	mov    DWORD PTR fs:0x0,ecx
6400e44e:	pop    ecx
6400e44f:	pop    esi
6400e450:	pop    ebx
6400e451:	mov    esp,ebp
6400e453:	pop    ebp
6400e454:	ret    
6400e455:	int3   
6400e456:	int3   
6400e457:	int3   
6400e458:	int3   
6400e459:	int3   
6400e45a:	int3   
6400e45b:	int3   
6400e45c:	int3   
6400e45d:	int3   
6400e45e:	int3   
6400e45f:	int3   
6400e460:	push   ebp
6400e461:	mov    ebp,esp
6400e463:	and    esp,0xfffffff8
6400e466:	push   0xffffffff
6400e468:	push   0x640248ae
6400e46d:	mov    eax,fs:0x0
6400e473:	push   eax
6400e474:	push   ecx
6400e475:	push   ebx
6400e476:	push   esi
6400e477:	mov    eax,ds:0x6402f09c
6400e47c:	xor    eax,esp
6400e47e:	push   eax
6400e47f:	lea    eax,[esp+0x10]
6400e483:	mov    fs:0x0,eax
6400e489:	mov    ebx,0x1
6400e48e:	test   BYTE PTR ds:0x64033458,bl
6400e494:	jne    0x6400e51e
6400e49a:	or     DWORD PTR ds:0x64033458,ebx
6400e4a0:	push   0x6402a828
6400e4a5:	push   0x10
6400e4a7:	push   0x6402a864
6400e4ac:	mov    DWORD PTR [esp+0x24],0x0
6400e4b4:	call   0x64006840
6400e4b9:	push   0x6402a878
6400e4be:	push   0x8
6400e4c0:	push   0x6402a564
6400e4c5:	mov    esi,eax
6400e4c7:	call   0x64006b30
6400e4cc:	add    esp,0x18
6400e4cf:	push   eax
6400e4d0:	call   DWORD PTR ds:0x64026018
6400e4d6:	add    DWORD PTR ds:0x64033278,ebx
6400e4dc:	test   eax,eax
6400e4de:	je     0x6400e505
6400e4e0:	push   esi
6400e4e1:	push   eax
6400e4e2:	call   DWORD PTR ds:0x64026014
6400e4e8:	add    DWORD PTR ds:0x6403327c,ebx
6400e4ee:	mov    ds:0x64033454,eax
6400e4f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e4f7:	mov    DWORD PTR fs:0x0,ecx
6400e4fe:	pop    ecx
6400e4ff:	pop    esi
6400e500:	pop    ebx
6400e501:	mov    esp,ebp
6400e503:	pop    ebp
6400e504:	ret    
6400e505:	xor    eax,eax
6400e507:	mov    ds:0x64033454,eax
6400e50c:	mov    ecx,DWORD PTR [esp+0x10]
6400e510:	mov    DWORD PTR fs:0x0,ecx
6400e517:	pop    ecx
6400e518:	pop    esi
6400e519:	pop    ebx
6400e51a:	mov    esp,ebp
6400e51c:	pop    ebp
6400e51d:	ret    
6400e51e:	mov    eax,ds:0x64033454
6400e523:	mov    ecx,DWORD PTR [esp+0x10]
6400e527:	mov    DWORD PTR fs:0x0,ecx
6400e52e:	pop    ecx
6400e52f:	pop    esi
6400e530:	pop    ebx
6400e531:	mov    esp,ebp
6400e533:	pop    ebp
6400e534:	ret    
6400e535:	int3   
6400e536:	int3   
6400e537:	int3   
6400e538:	int3   
6400e539:	int3   
6400e53a:	int3   
6400e53b:	int3   
6400e53c:	int3   
6400e53d:	int3   
6400e53e:	int3   
6400e53f:	int3   
6400e540:	push   ebp
6400e541:	mov    ebp,esp
6400e543:	and    esp,0xfffffff8
6400e546:	push   0xffffffff
6400e548:	push   0x6402487e
6400e54d:	mov    eax,fs:0x0
6400e553:	push   eax
6400e554:	push   ecx
6400e555:	push   ebx
6400e556:	push   esi
6400e557:	mov    eax,ds:0x6402f09c
6400e55c:	xor    eax,esp
6400e55e:	push   eax
6400e55f:	lea    eax,[esp+0x10]
6400e563:	mov    fs:0x0,eax
6400e569:	mov    ebx,0x1
6400e56e:	test   BYTE PTR ds:0x64033450,bl
6400e574:	jne    0x6400e5fe
6400e57a:	or     DWORD PTR ds:0x64033450,ebx
6400e580:	push   0x6402a8b8
6400e585:	push   0x15
6400e587:	push   0x6402a8e4
6400e58c:	mov    DWORD PTR [esp+0x24],0x0
6400e594:	call   0x64006840
6400e599:	push   0x6402a8fc
6400e59e:	push   0x8
6400e5a0:	push   0x6402a564
6400e5a5:	mov    esi,eax
6400e5a7:	call   0x64006b30
6400e5ac:	add    esp,0x18
6400e5af:	push   eax
6400e5b0:	call   DWORD PTR ds:0x64026018
6400e5b6:	add    DWORD PTR ds:0x64033278,ebx
6400e5bc:	test   eax,eax
6400e5be:	je     0x6400e5e5
6400e5c0:	push   esi
6400e5c1:	push   eax
6400e5c2:	call   DWORD PTR ds:0x64026014
6400e5c8:	add    DWORD PTR ds:0x6403327c,ebx
6400e5ce:	mov    ds:0x6403344c,eax
6400e5d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e5d7:	mov    DWORD PTR fs:0x0,ecx
6400e5de:	pop    ecx
6400e5df:	pop    esi
6400e5e0:	pop    ebx
6400e5e1:	mov    esp,ebp
6400e5e3:	pop    ebp
6400e5e4:	ret    
6400e5e5:	xor    eax,eax
6400e5e7:	mov    ds:0x6403344c,eax
6400e5ec:	mov    ecx,DWORD PTR [esp+0x10]
6400e5f0:	mov    DWORD PTR fs:0x0,ecx
6400e5f7:	pop    ecx
6400e5f8:	pop    esi
6400e5f9:	pop    ebx
6400e5fa:	mov    esp,ebp
6400e5fc:	pop    ebp
6400e5fd:	ret    
6400e5fe:	mov    eax,ds:0x6403344c
6400e603:	mov    ecx,DWORD PTR [esp+0x10]
6400e607:	mov    DWORD PTR fs:0x0,ecx
6400e60e:	pop    ecx
6400e60f:	pop    esi
6400e610:	pop    ebx
6400e611:	mov    esp,ebp
6400e613:	pop    ebp
6400e614:	ret    
6400e615:	int3   
6400e616:	int3   
6400e617:	int3   
6400e618:	int3   
6400e619:	int3   
6400e61a:	int3   
6400e61b:	int3   
6400e61c:	int3   
6400e61d:	int3   
6400e61e:	int3   
6400e61f:	int3   
6400e620:	push   ebp
6400e621:	mov    ebp,esp
6400e623:	and    esp,0xfffffff8
6400e626:	push   0xffffffff
6400e628:	push   0x6402484e
6400e62d:	mov    eax,fs:0x0
6400e633:	push   eax
6400e634:	push   ecx
6400e635:	push   ebx
6400e636:	push   esi
6400e637:	mov    eax,ds:0x6402f09c
6400e63c:	xor    eax,esp
6400e63e:	push   eax
6400e63f:	lea    eax,[esp+0x10]
6400e643:	mov    fs:0x0,eax
6400e649:	mov    ebx,0x1
6400e64e:	test   BYTE PTR ds:0x64033448,bl
6400e654:	jne    0x6400e6de
6400e65a:	or     DWORD PTR ds:0x64033448,ebx
6400e660:	push   0x6402a924
6400e665:	push   0x18
6400e667:	push   0x6402a950
6400e66c:	mov    DWORD PTR [esp+0x24],0x0
6400e674:	call   0x64006840
6400e679:	push   0x6402a96c
6400e67e:	push   0x8
6400e680:	push   0x6402a564
6400e685:	mov    esi,eax
6400e687:	call   0x64006b30
6400e68c:	add    esp,0x18
6400e68f:	push   eax
6400e690:	call   DWORD PTR ds:0x64026018
6400e696:	add    DWORD PTR ds:0x64033278,ebx
6400e69c:	test   eax,eax
6400e69e:	je     0x6400e6c5
6400e6a0:	push   esi
6400e6a1:	push   eax
6400e6a2:	call   DWORD PTR ds:0x64026014
6400e6a8:	add    DWORD PTR ds:0x6403327c,ebx
6400e6ae:	mov    ds:0x64033444,eax
6400e6b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6b7:	mov    DWORD PTR fs:0x0,ecx
6400e6be:	pop    ecx
6400e6bf:	pop    esi
6400e6c0:	pop    ebx
6400e6c1:	mov    esp,ebp
6400e6c3:	pop    ebp
6400e6c4:	ret    
6400e6c5:	xor    eax,eax
6400e6c7:	mov    ds:0x64033444,eax
6400e6cc:	mov    ecx,DWORD PTR [esp+0x10]
6400e6d0:	mov    DWORD PTR fs:0x0,ecx
6400e6d7:	pop    ecx
6400e6d8:	pop    esi
6400e6d9:	pop    ebx
6400e6da:	mov    esp,ebp
6400e6dc:	pop    ebp
6400e6dd:	ret    
6400e6de:	mov    eax,ds:0x64033444
6400e6e3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6e7:	mov    DWORD PTR fs:0x0,ecx
6400e6ee:	pop    ecx
6400e6ef:	pop    esi
6400e6f0:	pop    ebx
6400e6f1:	mov    esp,ebp
6400e6f3:	pop    ebp
6400e6f4:	ret    
6400e6f5:	int3   
6400e6f6:	int3   
6400e6f7:	int3   
6400e6f8:	int3   
6400e6f9:	int3   
6400e6fa:	int3   
6400e6fb:	int3   
6400e6fc:	int3   
6400e6fd:	int3   
6400e6fe:	int3   
6400e6ff:	int3   
6400e700:	push   ebp
6400e701:	mov    ebp,esp
6400e703:	and    esp,0xfffffff8
6400e706:	push   0xffffffff
6400e708:	push   0x6402481e
6400e70d:	mov    eax,fs:0x0
6400e713:	push   eax
6400e714:	push   ecx
6400e715:	push   ebx
6400e716:	push   esi
6400e717:	mov    eax,ds:0x6402f09c
6400e71c:	xor    eax,esp
6400e71e:	push   eax
6400e71f:	lea    eax,[esp+0x10]
6400e723:	mov    fs:0x0,eax
6400e729:	mov    ebx,0x1
6400e72e:	test   BYTE PTR ds:0x64033440,bl
6400e734:	jne    0x6400e7be
6400e73a:	or     DWORD PTR ds:0x64033440,ebx
6400e740:	push   0x6402a998
6400e745:	push   0xf
6400e747:	push   0x6402a9c0
6400e74c:	mov    DWORD PTR [esp+0x24],0x0
6400e754:	call   0x64006840
6400e759:	push   0x6402a9d0
6400e75e:	push   0x8
6400e760:	push   0x6402a564
6400e765:	mov    esi,eax
6400e767:	call   0x64006b30
6400e76c:	add    esp,0x18
6400e76f:	push   eax
6400e770:	call   DWORD PTR ds:0x64026018
6400e776:	add    DWORD PTR ds:0x64033278,ebx
6400e77c:	test   eax,eax
6400e77e:	je     0x6400e7a5
6400e780:	push   esi
6400e781:	push   eax
6400e782:	call   DWORD PTR ds:0x64026014
6400e788:	add    DWORD PTR ds:0x6403327c,ebx
6400e78e:	mov    ds:0x6403343c,eax
6400e793:	mov    ecx,DWORD PTR [esp+0x10]
6400e797:	mov    DWORD PTR fs:0x0,ecx
6400e79e:	pop    ecx
6400e79f:	pop    esi
6400e7a0:	pop    ebx
6400e7a1:	mov    esp,ebp
6400e7a3:	pop    ebp
6400e7a4:	ret    
6400e7a5:	xor    eax,eax
6400e7a7:	mov    ds:0x6403343c,eax
6400e7ac:	mov    ecx,DWORD PTR [esp+0x10]
6400e7b0:	mov    DWORD PTR fs:0x0,ecx
6400e7b7:	pop    ecx
6400e7b8:	pop    esi
6400e7b9:	pop    ebx
6400e7ba:	mov    esp,ebp
6400e7bc:	pop    ebp
6400e7bd:	ret    
6400e7be:	mov    eax,ds:0x6403343c
6400e7c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7c7:	mov    DWORD PTR fs:0x0,ecx
6400e7ce:	pop    ecx
6400e7cf:	pop    esi
6400e7d0:	pop    ebx
6400e7d1:	mov    esp,ebp
6400e7d3:	pop    ebp
6400e7d4:	ret    
6400e7d5:	int3   
6400e7d6:	int3   
6400e7d7:	int3   
6400e7d8:	int3   
6400e7d9:	int3   
6400e7da:	int3   
6400e7db:	int3   
6400e7dc:	int3   
6400e7dd:	int3   
6400e7de:	int3   
6400e7df:	int3   
6400e7e0:	push   ebp
6400e7e1:	mov    ebp,esp
6400e7e3:	and    esp,0xfffffff8
6400e7e6:	push   0xffffffff
6400e7e8:	push   0x640247ee
6400e7ed:	mov    eax,fs:0x0
6400e7f3:	push   eax
6400e7f4:	push   ecx
6400e7f5:	push   ebx
6400e7f6:	push   esi
6400e7f7:	mov    eax,ds:0x6402f09c
6400e7fc:	xor    eax,esp
6400e7fe:	push   eax
6400e7ff:	lea    eax,[esp+0x10]
6400e803:	mov    fs:0x0,eax
6400e809:	mov    ebx,0x1
6400e80e:	test   BYTE PTR ds:0x64033438,bl
6400e814:	jne    0x6400e89e
6400e81a:	or     DWORD PTR ds:0x64033438,ebx
6400e820:	push   0x6402aa04
6400e825:	push   0x14
6400e827:	push   0x6402aa34
6400e82c:	mov    DWORD PTR [esp+0x24],0x0
6400e834:	call   0x64006840
6400e839:	push   0x6402aa50
6400e83e:	push   0x8
6400e840:	push   0x6402a564
6400e845:	mov    esi,eax
6400e847:	call   0x64006b30
6400e84c:	add    esp,0x18
6400e84f:	push   eax
6400e850:	call   DWORD PTR ds:0x64026018
6400e856:	add    DWORD PTR ds:0x64033278,ebx
6400e85c:	test   eax,eax
6400e85e:	je     0x6400e885
6400e860:	push   esi
6400e861:	push   eax
6400e862:	call   DWORD PTR ds:0x64026014
6400e868:	add    DWORD PTR ds:0x6403327c,ebx
6400e86e:	mov    ds:0x64033434,eax
6400e873:	mov    ecx,DWORD PTR [esp+0x10]
6400e877:	mov    DWORD PTR fs:0x0,ecx
6400e87e:	pop    ecx
6400e87f:	pop    esi
6400e880:	pop    ebx
6400e881:	mov    esp,ebp
6400e883:	pop    ebp
6400e884:	ret    
6400e885:	xor    eax,eax
6400e887:	mov    ds:0x64033434,eax
6400e88c:	mov    ecx,DWORD PTR [esp+0x10]
6400e890:	mov    DWORD PTR fs:0x0,ecx
6400e897:	pop    ecx
6400e898:	pop    esi
6400e899:	pop    ebx
6400e89a:	mov    esp,ebp
6400e89c:	pop    ebp
6400e89d:	ret    
6400e89e:	mov    eax,ds:0x64033434
6400e8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8a7:	mov    DWORD PTR fs:0x0,ecx
6400e8ae:	pop    ecx
6400e8af:	pop    esi
6400e8b0:	pop    ebx
6400e8b1:	mov    esp,ebp
6400e8b3:	pop    ebp
6400e8b4:	ret    
6400e8b5:	int3   
6400e8b6:	int3   
6400e8b7:	int3   
6400e8b8:	int3   
6400e8b9:	int3   
6400e8ba:	int3   
6400e8bb:	int3   
6400e8bc:	int3   
6400e8bd:	int3   
6400e8be:	int3   
6400e8bf:	int3   
6400e8c0:	push   ebp
6400e8c1:	mov    ebp,esp
6400e8c3:	and    esp,0xfffffff8
6400e8c6:	push   0xffffffff
6400e8c8:	push   0x640247be
6400e8cd:	mov    eax,fs:0x0
6400e8d3:	push   eax
6400e8d4:	push   ecx
6400e8d5:	push   ebx
6400e8d6:	push   esi
6400e8d7:	mov    eax,ds:0x6402f09c
6400e8dc:	xor    eax,esp
6400e8de:	push   eax
6400e8df:	lea    eax,[esp+0x10]
6400e8e3:	mov    fs:0x0,eax
6400e8e9:	mov    ebx,0x1
6400e8ee:	test   BYTE PTR ds:0x64033430,bl
6400e8f4:	jne    0x6400e97e
6400e8fa:	or     DWORD PTR ds:0x64033430,ebx
6400e900:	push   0x6402aa90
6400e905:	push   0x14
6400e907:	push   0x6402aabc
6400e90c:	mov    DWORD PTR [esp+0x24],0x0
6400e914:	call   0x64006840
6400e919:	push   0x6402aad4
6400e91e:	push   0x8
6400e920:	push   0x6402a564
6400e925:	mov    esi,eax
6400e927:	call   0x64006b30
6400e92c:	add    esp,0x18
6400e92f:	push   eax
6400e930:	call   DWORD PTR ds:0x64026018
6400e936:	add    DWORD PTR ds:0x64033278,ebx
6400e93c:	test   eax,eax
6400e93e:	je     0x6400e965
6400e940:	push   esi
6400e941:	push   eax
6400e942:	call   DWORD PTR ds:0x64026014
6400e948:	add    DWORD PTR ds:0x6403327c,ebx
6400e94e:	mov    ds:0x6403342c,eax
6400e953:	mov    ecx,DWORD PTR [esp+0x10]
6400e957:	mov    DWORD PTR fs:0x0,ecx
6400e95e:	pop    ecx
6400e95f:	pop    esi
6400e960:	pop    ebx
6400e961:	mov    esp,ebp
6400e963:	pop    ebp
6400e964:	ret    
6400e965:	xor    eax,eax
6400e967:	mov    ds:0x6403342c,eax
6400e96c:	mov    ecx,DWORD PTR [esp+0x10]
6400e970:	mov    DWORD PTR fs:0x0,ecx
6400e977:	pop    ecx
6400e978:	pop    esi
6400e979:	pop    ebx
6400e97a:	mov    esp,ebp
6400e97c:	pop    ebp
6400e97d:	ret    
6400e97e:	mov    eax,ds:0x6403342c
6400e983:	mov    ecx,DWORD PTR [esp+0x10]
6400e987:	mov    DWORD PTR fs:0x0,ecx
6400e98e:	pop    ecx
6400e98f:	pop    esi
6400e990:	pop    ebx
6400e991:	mov    esp,ebp
6400e993:	pop    ebp
6400e994:	ret    
6400e995:	int3   
6400e996:	int3   
6400e997:	int3   
6400e998:	int3   
6400e999:	int3   
6400e99a:	int3   
6400e99b:	int3   
6400e99c:	int3   
6400e99d:	int3   
6400e99e:	int3   
6400e99f:	int3   
6400e9a0:	push   ebp
6400e9a1:	mov    ebp,esp
6400e9a3:	and    esp,0xfffffff8
6400e9a6:	push   0xffffffff
6400e9a8:	push   0x6402478e
6400e9ad:	mov    eax,fs:0x0
6400e9b3:	push   eax
6400e9b4:	push   ecx
6400e9b5:	push   ebx
6400e9b6:	push   esi
6400e9b7:	mov    eax,ds:0x6402f09c
6400e9bc:	xor    eax,esp
6400e9be:	push   eax
6400e9bf:	lea    eax,[esp+0x10]
6400e9c3:	mov    fs:0x0,eax
6400e9c9:	mov    ebx,0x1
6400e9ce:	test   BYTE PTR ds:0x64033428,bl
6400e9d4:	jne    0x6400ea5e
6400e9da:	or     DWORD PTR ds:0x64033428,ebx
6400e9e0:	push   0x6402ab08
6400e9e5:	push   0xf
6400e9e7:	push   0x6402ab30
6400e9ec:	mov    DWORD PTR [esp+0x24],0x0
6400e9f4:	call   0x64006840
6400e9f9:	push   0x6402ab40
6400e9fe:	push   0x8
6400ea00:	push   0x6402a564
6400ea05:	mov    esi,eax
6400ea07:	call   0x64006b30
6400ea0c:	add    esp,0x18
6400ea0f:	push   eax
6400ea10:	call   DWORD PTR ds:0x64026018
6400ea16:	add    DWORD PTR ds:0x64033278,ebx
6400ea1c:	test   eax,eax
6400ea1e:	je     0x6400ea45
6400ea20:	push   esi
6400ea21:	push   eax
6400ea22:	call   DWORD PTR ds:0x64026014
6400ea28:	add    DWORD PTR ds:0x6403327c,ebx
6400ea2e:	mov    ds:0x64033424,eax
6400ea33:	mov    ecx,DWORD PTR [esp+0x10]
6400ea37:	mov    DWORD PTR fs:0x0,ecx
6400ea3e:	pop    ecx
6400ea3f:	pop    esi
6400ea40:	pop    ebx
6400ea41:	mov    esp,ebp
6400ea43:	pop    ebp
6400ea44:	ret    
6400ea45:	xor    eax,eax
6400ea47:	mov    ds:0x64033424,eax
6400ea4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ea50:	mov    DWORD PTR fs:0x0,ecx
6400ea57:	pop    ecx
6400ea58:	pop    esi
6400ea59:	pop    ebx
6400ea5a:	mov    esp,ebp
6400ea5c:	pop    ebp
6400ea5d:	ret    
6400ea5e:	mov    eax,ds:0x64033424
6400ea63:	mov    ecx,DWORD PTR [esp+0x10]
6400ea67:	mov    DWORD PTR fs:0x0,ecx
6400ea6e:	pop    ecx
6400ea6f:	pop    esi
6400ea70:	pop    ebx
6400ea71:	mov    esp,ebp
6400ea73:	pop    ebp
6400ea74:	ret    
6400ea75:	int3   
6400ea76:	int3   
6400ea77:	int3   
6400ea78:	int3   
6400ea79:	int3   
6400ea7a:	int3   
6400ea7b:	int3   
6400ea7c:	int3   
6400ea7d:	int3   
6400ea7e:	int3   
6400ea7f:	int3   
6400ea80:	push   ebp
6400ea81:	mov    ebp,esp
6400ea83:	and    esp,0xfffffff8
6400ea86:	push   0xffffffff
6400ea88:	push   0x6402475e
6400ea8d:	mov    eax,fs:0x0
6400ea93:	push   eax
6400ea94:	push   ecx
6400ea95:	push   ebx
6400ea96:	push   esi
6400ea97:	mov    eax,ds:0x6402f09c
6400ea9c:	xor    eax,esp
6400ea9e:	push   eax
6400ea9f:	lea    eax,[esp+0x10]
6400eaa3:	mov    fs:0x0,eax
6400eaa9:	mov    ebx,0x1
6400eaae:	test   BYTE PTR ds:0x64033420,bl
6400eab4:	jne    0x6400eb3e
6400eaba:	or     DWORD PTR ds:0x64033420,ebx
6400eac0:	push   0x6402ab6c
6400eac5:	push   0x12
6400eac7:	push   0x6402aba0
6400eacc:	mov    DWORD PTR [esp+0x24],0x0
6400ead4:	call   0x64006840
6400ead9:	push   0x6402abb4
6400eade:	push   0x8
6400eae0:	push   0x6402a564
6400eae5:	mov    esi,eax
6400eae7:	call   0x64006b30
6400eaec:	add    esp,0x18
6400eaef:	push   eax
6400eaf0:	call   DWORD PTR ds:0x64026018
6400eaf6:	add    DWORD PTR ds:0x64033278,ebx
6400eafc:	test   eax,eax
6400eafe:	je     0x6400eb25
6400eb00:	push   esi
6400eb01:	push   eax
6400eb02:	call   DWORD PTR ds:0x64026014
6400eb08:	add    DWORD PTR ds:0x6403327c,ebx
6400eb0e:	mov    ds:0x6403341c,eax
6400eb13:	mov    ecx,DWORD PTR [esp+0x10]
6400eb17:	mov    DWORD PTR fs:0x0,ecx
6400eb1e:	pop    ecx
6400eb1f:	pop    esi
6400eb20:	pop    ebx
6400eb21:	mov    esp,ebp
6400eb23:	pop    ebp
6400eb24:	ret    
6400eb25:	xor    eax,eax
6400eb27:	mov    ds:0x6403341c,eax
6400eb2c:	mov    ecx,DWORD PTR [esp+0x10]
6400eb30:	mov    DWORD PTR fs:0x0,ecx
6400eb37:	pop    ecx
6400eb38:	pop    esi
6400eb39:	pop    ebx
6400eb3a:	mov    esp,ebp
6400eb3c:	pop    ebp
6400eb3d:	ret    
6400eb3e:	mov    eax,ds:0x6403341c
6400eb43:	mov    ecx,DWORD PTR [esp+0x10]
6400eb47:	mov    DWORD PTR fs:0x0,ecx
6400eb4e:	pop    ecx
6400eb4f:	pop    esi
6400eb50:	pop    ebx
6400eb51:	mov    esp,ebp
6400eb53:	pop    ebp
6400eb54:	ret    
6400eb55:	int3   
6400eb56:	int3   
6400eb57:	int3   
6400eb58:	int3   
6400eb59:	int3   
6400eb5a:	int3   
6400eb5b:	int3   
6400eb5c:	int3   
6400eb5d:	int3   
6400eb5e:	int3   
6400eb5f:	int3   
6400eb60:	push   ebp
6400eb61:	mov    ebp,esp
6400eb63:	and    esp,0xfffffff8
6400eb66:	push   0xffffffff
6400eb68:	push   0x6402472e
6400eb6d:	mov    eax,fs:0x0
6400eb73:	push   eax
6400eb74:	push   ecx
6400eb75:	push   ebx
6400eb76:	push   esi
6400eb77:	mov    eax,ds:0x6402f09c
6400eb7c:	xor    eax,esp
6400eb7e:	push   eax
6400eb7f:	lea    eax,[esp+0x10]
6400eb83:	mov    fs:0x0,eax
6400eb89:	mov    ebx,0x1
6400eb8e:	test   BYTE PTR ds:0x64033418,bl
6400eb94:	jne    0x6400ec1e
6400eb9a:	or     DWORD PTR ds:0x64033418,ebx
6400eba0:	push   0x6402abf0
6400eba5:	push   0x11
6400eba7:	push   0x6402ac1c
6400ebac:	mov    DWORD PTR [esp+0x24],0x0
6400ebb4:	call   0x64006840
6400ebb9:	push   0x6402ac30
6400ebbe:	push   0x8
6400ebc0:	push   0x6402a564
6400ebc5:	mov    esi,eax
6400ebc7:	call   0x64006b30
6400ebcc:	add    esp,0x18
6400ebcf:	push   eax
6400ebd0:	call   DWORD PTR ds:0x64026018
6400ebd6:	add    DWORD PTR ds:0x64033278,ebx
6400ebdc:	test   eax,eax
6400ebde:	je     0x6400ec05
6400ebe0:	push   esi
6400ebe1:	push   eax
6400ebe2:	call   DWORD PTR ds:0x64026014
6400ebe8:	add    DWORD PTR ds:0x6403327c,ebx
6400ebee:	mov    ds:0x64033414,eax
6400ebf3:	mov    ecx,DWORD PTR [esp+0x10]
6400ebf7:	mov    DWORD PTR fs:0x0,ecx
6400ebfe:	pop    ecx
6400ebff:	pop    esi
6400ec00:	pop    ebx
6400ec01:	mov    esp,ebp
6400ec03:	pop    ebp
6400ec04:	ret    
6400ec05:	xor    eax,eax
6400ec07:	mov    ds:0x64033414,eax
6400ec0c:	mov    ecx,DWORD PTR [esp+0x10]
6400ec10:	mov    DWORD PTR fs:0x0,ecx
6400ec17:	pop    ecx
6400ec18:	pop    esi
6400ec19:	pop    ebx
6400ec1a:	mov    esp,ebp
6400ec1c:	pop    ebp
6400ec1d:	ret    
6400ec1e:	mov    eax,ds:0x64033414
6400ec23:	mov    ecx,DWORD PTR [esp+0x10]
6400ec27:	mov    DWORD PTR fs:0x0,ecx
6400ec2e:	pop    ecx
6400ec2f:	pop    esi
6400ec30:	pop    ebx
6400ec31:	mov    esp,ebp
6400ec33:	pop    ebp
6400ec34:	ret    
6400ec35:	int3   
6400ec36:	int3   
6400ec37:	int3   
6400ec38:	int3   
6400ec39:	int3   
6400ec3a:	int3   
6400ec3b:	int3   
6400ec3c:	int3   
6400ec3d:	int3   
6400ec3e:	int3   
6400ec3f:	int3   
6400ec40:	push   ebp
6400ec41:	mov    ebp,esp
6400ec43:	and    esp,0xfffffff8
6400ec46:	push   0xffffffff
6400ec48:	push   0x640246fe
6400ec4d:	mov    eax,fs:0x0
6400ec53:	push   eax
6400ec54:	push   ecx
6400ec55:	push   ebx
6400ec56:	push   esi
6400ec57:	mov    eax,ds:0x6402f09c
6400ec5c:	xor    eax,esp
6400ec5e:	push   eax
6400ec5f:	lea    eax,[esp+0x10]
6400ec63:	mov    fs:0x0,eax
6400ec69:	mov    ebx,0x1
6400ec6e:	test   BYTE PTR ds:0x64033410,bl
6400ec74:	jne    0x6400ecfe
6400ec7a:	or     DWORD PTR ds:0x64033410,ebx
6400ec80:	push   0x6402ac60
6400ec85:	push   0x17
6400ec87:	push   0x6402ac98
6400ec8c:	mov    DWORD PTR [esp+0x24],0x0
6400ec94:	call   0x64006840
6400ec99:	push   0x6402acb0
6400ec9e:	push   0x8
6400eca0:	push   0x6402acec
6400eca5:	mov    esi,eax
6400eca7:	call   0x64006b30
6400ecac:	add    esp,0x18
6400ecaf:	push   eax
6400ecb0:	call   DWORD PTR ds:0x64026018
6400ecb6:	add    DWORD PTR ds:0x64033278,ebx
6400ecbc:	test   eax,eax
6400ecbe:	je     0x6400ece5
6400ecc0:	push   esi
6400ecc1:	push   eax
6400ecc2:	call   DWORD PTR ds:0x64026014
6400ecc8:	add    DWORD PTR ds:0x6403327c,ebx
6400ecce:	mov    ds:0x6403340c,eax
6400ecd3:	mov    ecx,DWORD PTR [esp+0x10]
6400ecd7:	mov    DWORD PTR fs:0x0,ecx
6400ecde:	pop    ecx
6400ecdf:	pop    esi
6400ece0:	pop    ebx
6400ece1:	mov    esp,ebp
6400ece3:	pop    ebp
6400ece4:	ret    
6400ece5:	xor    eax,eax
6400ece7:	mov    ds:0x6403340c,eax
6400ecec:	mov    ecx,DWORD PTR [esp+0x10]
6400ecf0:	mov    DWORD PTR fs:0x0,ecx
6400ecf7:	pop    ecx
6400ecf8:	pop    esi
6400ecf9:	pop    ebx
6400ecfa:	mov    esp,ebp
6400ecfc:	pop    ebp
6400ecfd:	ret    
6400ecfe:	mov    eax,ds:0x6403340c
6400ed03:	mov    ecx,DWORD PTR [esp+0x10]
6400ed07:	mov    DWORD PTR fs:0x0,ecx
6400ed0e:	pop    ecx
6400ed0f:	pop    esi
6400ed10:	pop    ebx
6400ed11:	mov    esp,ebp
6400ed13:	pop    ebp
6400ed14:	ret    
6400ed15:	int3   
6400ed16:	int3   
6400ed17:	int3   
6400ed18:	int3   
6400ed19:	int3   
6400ed1a:	int3   
6400ed1b:	int3   
6400ed1c:	int3   
6400ed1d:	int3   
6400ed1e:	int3   
6400ed1f:	int3   
6400ed20:	push   ebp
6400ed21:	mov    ebp,esp
6400ed23:	and    esp,0xfffffff8
6400ed26:	push   0xffffffff
6400ed28:	push   0x640246ce
6400ed2d:	mov    eax,fs:0x0
6400ed33:	push   eax
6400ed34:	push   ecx
6400ed35:	push   ebx
6400ed36:	push   esi
6400ed37:	mov    eax,ds:0x6402f09c
6400ed3c:	xor    eax,esp
6400ed3e:	push   eax
6400ed3f:	lea    eax,[esp+0x10]
6400ed43:	mov    fs:0x0,eax
6400ed49:	mov    ebx,0x1
6400ed4e:	test   BYTE PTR ds:0x64033408,bl
6400ed54:	jne    0x6400edde
6400ed5a:	or     DWORD PTR ds:0x64033408,ebx
6400ed60:	push   0x6402ad00
6400ed65:	push   0x19
6400ed67:	push   0x6402ad38
6400ed6c:	mov    DWORD PTR [esp+0x24],0x0
6400ed74:	call   0x64006840
6400ed79:	push   0x6402ad54
6400ed7e:	push   0x7
6400ed80:	push   0x6402ad84
6400ed85:	mov    esi,eax
6400ed87:	call   0x64006b30
6400ed8c:	add    esp,0x18
6400ed8f:	push   eax
6400ed90:	call   DWORD PTR ds:0x64026018
6400ed96:	add    DWORD PTR ds:0x64033278,ebx
6400ed9c:	test   eax,eax
6400ed9e:	je     0x6400edc5
6400eda0:	push   esi
6400eda1:	push   eax
6400eda2:	call   DWORD PTR ds:0x64026014
6400eda8:	add    DWORD PTR ds:0x6403327c,ebx
6400edae:	mov    ds:0x64033404,eax
6400edb3:	mov    ecx,DWORD PTR [esp+0x10]
6400edb7:	mov    DWORD PTR fs:0x0,ecx
6400edbe:	pop    ecx
6400edbf:	pop    esi
6400edc0:	pop    ebx
6400edc1:	mov    esp,ebp
6400edc3:	pop    ebp
6400edc4:	ret    
6400edc5:	xor    eax,eax
6400edc7:	mov    ds:0x64033404,eax
6400edcc:	mov    ecx,DWORD PTR [esp+0x10]
6400edd0:	mov    DWORD PTR fs:0x0,ecx
6400edd7:	pop    ecx
6400edd8:	pop    esi
6400edd9:	pop    ebx
6400edda:	mov    esp,ebp
6400eddc:	pop    ebp
6400eddd:	ret    
6400edde:	mov    eax,ds:0x64033404
6400ede3:	mov    ecx,DWORD PTR [esp+0x10]
6400ede7:	mov    DWORD PTR fs:0x0,ecx
6400edee:	pop    ecx
6400edef:	pop    esi
6400edf0:	pop    ebx
6400edf1:	mov    esp,ebp
6400edf3:	pop    ebp
6400edf4:	ret    
6400edf5:	int3   
6400edf6:	int3   
6400edf7:	int3   
6400edf8:	int3   
6400edf9:	int3   
6400edfa:	int3   
6400edfb:	int3   
6400edfc:	int3   
6400edfd:	int3   
6400edfe:	int3   
6400edff:	int3   
6400ee00:	push   ebp
6400ee01:	mov    ebp,esp
6400ee03:	and    esp,0xfffffff8
6400ee06:	push   0xffffffff
6400ee08:	push   0x6402469e
6400ee0d:	mov    eax,fs:0x0
6400ee13:	push   eax
6400ee14:	push   ecx
6400ee15:	push   ebx
6400ee16:	push   esi
6400ee17:	mov    eax,ds:0x6402f09c
6400ee1c:	xor    eax,esp
6400ee1e:	push   eax
6400ee1f:	lea    eax,[esp+0x10]
6400ee23:	mov    fs:0x0,eax
6400ee29:	mov    ebx,0x1
6400ee2e:	test   BYTE PTR ds:0x64033400,bl
6400ee34:	jne    0x6400eebe
6400ee3a:	or     DWORD PTR ds:0x64033400,ebx
6400ee40:	push   0x6402ad94
6400ee45:	push   0x1d
6400ee47:	push   0x6402adcc
6400ee4c:	mov    DWORD PTR [esp+0x24],0x0
6400ee54:	call   0x64006840
6400ee59:	push   0x6402adec
6400ee5e:	push   0x8
6400ee60:	push   0x6402ae18
6400ee65:	mov    esi,eax
6400ee67:	call   0x64006b30
6400ee6c:	add    esp,0x18
6400ee6f:	push   eax
6400ee70:	call   DWORD PTR ds:0x64026018
6400ee76:	add    DWORD PTR ds:0x64033278,ebx
6400ee7c:	test   eax,eax
6400ee7e:	je     0x6400eea5
6400ee80:	push   esi
6400ee81:	push   eax
6400ee82:	call   DWORD PTR ds:0x64026014
6400ee88:	add    DWORD PTR ds:0x6403327c,ebx
6400ee8e:	mov    ds:0x640333fc,eax
6400ee93:	mov    ecx,DWORD PTR [esp+0x10]
6400ee97:	mov    DWORD PTR fs:0x0,ecx
6400ee9e:	pop    ecx
6400ee9f:	pop    esi
6400eea0:	pop    ebx
6400eea1:	mov    esp,ebp
6400eea3:	pop    ebp
6400eea4:	ret    
6400eea5:	xor    eax,eax
6400eea7:	mov    ds:0x640333fc,eax
6400eeac:	mov    ecx,DWORD PTR [esp+0x10]
6400eeb0:	mov    DWORD PTR fs:0x0,ecx
6400eeb7:	pop    ecx
6400eeb8:	pop    esi
6400eeb9:	pop    ebx
6400eeba:	mov    esp,ebp
6400eebc:	pop    ebp
6400eebd:	ret    
6400eebe:	mov    eax,ds:0x640333fc
6400eec3:	mov    ecx,DWORD PTR [esp+0x10]
6400eec7:	mov    DWORD PTR fs:0x0,ecx
6400eece:	pop    ecx
6400eecf:	pop    esi
6400eed0:	pop    ebx
6400eed1:	mov    esp,ebp
6400eed3:	pop    ebp
6400eed4:	ret    
6400eed5:	int3   
6400eed6:	int3   
6400eed7:	int3   
6400eed8:	int3   
6400eed9:	int3   
6400eeda:	int3   
6400eedb:	int3   
6400eedc:	int3   
6400eedd:	int3   
6400eede:	int3   
6400eedf:	int3   
6400eee0:	push   ebp
6400eee1:	mov    ebp,esp
6400eee3:	and    esp,0xfffffff8
6400eee6:	push   0xffffffff
6400eee8:	push   0x6402466e
6400eeed:	mov    eax,fs:0x0
6400eef3:	push   eax
6400eef4:	push   ecx
6400eef5:	push   ebx
6400eef6:	push   esi
6400eef7:	mov    eax,ds:0x6402f09c
6400eefc:	xor    eax,esp
6400eefe:	push   eax
6400eeff:	lea    eax,[esp+0x10]
6400ef03:	mov    fs:0x0,eax
6400ef09:	mov    ebx,0x1
6400ef0e:	test   BYTE PTR ds:0x640333f8,bl
6400ef14:	jne    0x6400ef9e
6400ef1a:	or     DWORD PTR ds:0x640333f8,ebx
6400ef20:	push   0x6402ae2c
6400ef25:	push   0x15
6400ef27:	push   0x6402ae50
6400ef2c:	mov    DWORD PTR [esp+0x24],0x0
6400ef34:	call   0x64006840
6400ef39:	push   0x6402ae68
6400ef3e:	push   0x8
6400ef40:	push   0x6402ae18
6400ef45:	mov    esi,eax
6400ef47:	call   0x64006b30
6400ef4c:	add    esp,0x18
6400ef4f:	push   eax
6400ef50:	call   DWORD PTR ds:0x64026018
6400ef56:	add    DWORD PTR ds:0x64033278,ebx
6400ef5c:	test   eax,eax
6400ef5e:	je     0x6400ef85
6400ef60:	push   esi
6400ef61:	push   eax
6400ef62:	call   DWORD PTR ds:0x64026014
6400ef68:	add    DWORD PTR ds:0x6403327c,ebx
6400ef6e:	mov    ds:0x640333f4,eax
6400ef73:	mov    ecx,DWORD PTR [esp+0x10]
6400ef77:	mov    DWORD PTR fs:0x0,ecx
6400ef7e:	pop    ecx
6400ef7f:	pop    esi
6400ef80:	pop    ebx
6400ef81:	mov    esp,ebp
6400ef83:	pop    ebp
6400ef84:	ret    
6400ef85:	xor    eax,eax
6400ef87:	mov    ds:0x640333f4,eax
6400ef8c:	mov    ecx,DWORD PTR [esp+0x10]
6400ef90:	mov    DWORD PTR fs:0x0,ecx
6400ef97:	pop    ecx
6400ef98:	pop    esi
6400ef99:	pop    ebx
6400ef9a:	mov    esp,ebp
6400ef9c:	pop    ebp
6400ef9d:	ret    
6400ef9e:	mov    eax,ds:0x640333f4
6400efa3:	mov    ecx,DWORD PTR [esp+0x10]
6400efa7:	mov    DWORD PTR fs:0x0,ecx
6400efae:	pop    ecx
6400efaf:	pop    esi
6400efb0:	pop    ebx
6400efb1:	mov    esp,ebp
6400efb3:	pop    ebp
6400efb4:	ret    
6400efb5:	int3   
6400efb6:	int3   
6400efb7:	int3   
6400efb8:	int3   
6400efb9:	int3   
6400efba:	int3   
6400efbb:	int3   
6400efbc:	int3   
6400efbd:	int3   
6400efbe:	int3   
6400efbf:	int3   
6400efc0:	push   ebp
6400efc1:	mov    ebp,esp
6400efc3:	and    esp,0xfffffff8
6400efc6:	push   0xffffffff
6400efc8:	push   0x6402463e
6400efcd:	mov    eax,fs:0x0
6400efd3:	push   eax
6400efd4:	push   ecx
6400efd5:	push   ebx
6400efd6:	push   esi
6400efd7:	mov    eax,ds:0x6402f09c
6400efdc:	xor    eax,esp
6400efde:	push   eax
6400efdf:	lea    eax,[esp+0x10]
6400efe3:	mov    fs:0x0,eax
6400efe9:	mov    ebx,0x1
6400efee:	test   BYTE PTR ds:0x640333f0,bl
6400eff4:	jne    0x6400f07e
6400effa:	or     DWORD PTR ds:0x640333f0,ebx
6400f000:	push   0x6402ae98
6400f005:	push   0x15
6400f007:	push   0x6402aebc
6400f00c:	mov    DWORD PTR [esp+0x24],0x0
6400f014:	call   0x64006840
6400f019:	push   0x6402aed4
6400f01e:	push   0x8
6400f020:	push   0x6402ae18
6400f025:	mov    esi,eax
6400f027:	call   0x64006b30
6400f02c:	add    esp,0x18
6400f02f:	push   eax
6400f030:	call   DWORD PTR ds:0x64026018
6400f036:	add    DWORD PTR ds:0x64033278,ebx
6400f03c:	test   eax,eax
6400f03e:	je     0x6400f065
6400f040:	push   esi
6400f041:	push   eax
6400f042:	call   DWORD PTR ds:0x64026014
6400f048:	add    DWORD PTR ds:0x6403327c,ebx
6400f04e:	mov    ds:0x640333ec,eax
6400f053:	mov    ecx,DWORD PTR [esp+0x10]
6400f057:	mov    DWORD PTR fs:0x0,ecx
6400f05e:	pop    ecx
6400f05f:	pop    esi
6400f060:	pop    ebx
6400f061:	mov    esp,ebp
6400f063:	pop    ebp
6400f064:	ret    
6400f065:	xor    eax,eax
6400f067:	mov    ds:0x640333ec,eax
6400f06c:	mov    ecx,DWORD PTR [esp+0x10]
6400f070:	mov    DWORD PTR fs:0x0,ecx
6400f077:	pop    ecx
6400f078:	pop    esi
6400f079:	pop    ebx
6400f07a:	mov    esp,ebp
6400f07c:	pop    ebp
6400f07d:	ret    
6400f07e:	mov    eax,ds:0x640333ec
6400f083:	mov    ecx,DWORD PTR [esp+0x10]
6400f087:	mov    DWORD PTR fs:0x0,ecx
6400f08e:	pop    ecx
6400f08f:	pop    esi
6400f090:	pop    ebx
6400f091:	mov    esp,ebp
6400f093:	pop    ebp
6400f094:	ret    
6400f095:	int3   
6400f096:	int3   
6400f097:	int3   
6400f098:	int3   
6400f099:	int3   
6400f09a:	int3   
6400f09b:	int3   
6400f09c:	int3   
6400f09d:	int3   
6400f09e:	int3   
6400f09f:	int3   
6400f0a0:	push   ebp
6400f0a1:	mov    ebp,esp
6400f0a3:	and    esp,0xfffffff8
6400f0a6:	push   0xffffffff
6400f0a8:	push   0x6402460e
6400f0ad:	mov    eax,fs:0x0
6400f0b3:	push   eax
6400f0b4:	push   ecx
6400f0b5:	push   ebx
6400f0b6:	push   esi
6400f0b7:	mov    eax,ds:0x6402f09c
6400f0bc:	xor    eax,esp
6400f0be:	push   eax
6400f0bf:	lea    eax,[esp+0x10]
6400f0c3:	mov    fs:0x0,eax
6400f0c9:	mov    ebx,0x1
6400f0ce:	test   BYTE PTR ds:0x640333e8,bl
6400f0d4:	jne    0x6400f15e
6400f0da:	or     DWORD PTR ds:0x640333e8,ebx
6400f0e0:	push   0x6402af0c
6400f0e5:	push   0x34
6400f0e7:	push   0x6402af34
6400f0ec:	mov    DWORD PTR [esp+0x24],0x0
6400f0f4:	call   0x64006840
6400f0f9:	push   0x6402af6c
6400f0fe:	push   0x8
6400f100:	push   0x6402ae18
6400f105:	mov    esi,eax
6400f107:	call   0x64006b30
6400f10c:	add    esp,0x18
6400f10f:	push   eax
6400f110:	call   DWORD PTR ds:0x64026018
6400f116:	add    DWORD PTR ds:0x64033278,ebx
6400f11c:	test   eax,eax
6400f11e:	je     0x6400f145
6400f120:	push   esi
6400f121:	push   eax
6400f122:	call   DWORD PTR ds:0x64026014
6400f128:	add    DWORD PTR ds:0x6403327c,ebx
6400f12e:	mov    ds:0x640333e4,eax
6400f133:	mov    ecx,DWORD PTR [esp+0x10]
6400f137:	mov    DWORD PTR fs:0x0,ecx
6400f13e:	pop    ecx
6400f13f:	pop    esi
6400f140:	pop    ebx
6400f141:	mov    esp,ebp
6400f143:	pop    ebp
6400f144:	ret    
6400f145:	xor    eax,eax
6400f147:	mov    ds:0x640333e4,eax
6400f14c:	mov    ecx,DWORD PTR [esp+0x10]
6400f150:	mov    DWORD PTR fs:0x0,ecx
6400f157:	pop    ecx
6400f158:	pop    esi
6400f159:	pop    ebx
6400f15a:	mov    esp,ebp
6400f15c:	pop    ebp
6400f15d:	ret    
6400f15e:	mov    eax,ds:0x640333e4
6400f163:	mov    ecx,DWORD PTR [esp+0x10]
6400f167:	mov    DWORD PTR fs:0x0,ecx
6400f16e:	pop    ecx
6400f16f:	pop    esi
6400f170:	pop    ebx
6400f171:	mov    esp,ebp
6400f173:	pop    ebp
6400f174:	ret    
6400f175:	int3   
6400f176:	int3   
6400f177:	int3   
6400f178:	int3   
6400f179:	int3   
6400f17a:	int3   
6400f17b:	int3   
6400f17c:	int3   
6400f17d:	int3   
6400f17e:	int3   
6400f17f:	int3   
6400f180:	push   ebp
6400f181:	mov    ebp,esp
6400f183:	and    esp,0xfffffff8
6400f186:	push   0xffffffff
6400f188:	push   0x640245de
6400f18d:	mov    eax,fs:0x0
6400f193:	push   eax
6400f194:	push   ecx
6400f195:	push   ebx
6400f196:	push   esi
6400f197:	mov    eax,ds:0x6402f09c
6400f19c:	xor    eax,esp
6400f19e:	push   eax
6400f19f:	lea    eax,[esp+0x10]
6400f1a3:	mov    fs:0x0,eax
6400f1a9:	mov    ebx,0x1
6400f1ae:	test   BYTE PTR ds:0x640333e0,bl
6400f1b4:	jne    0x6400f23e
6400f1ba:	or     DWORD PTR ds:0x640333e0,ebx
6400f1c0:	push   0x6402af90
6400f1c5:	push   0xb
6400f1c7:	push   0x6402afc4
6400f1cc:	mov    DWORD PTR [esp+0x24],0x0
6400f1d4:	call   0x64006840
6400f1d9:	push   0x6402afd0
6400f1de:	push   0x8
6400f1e0:	push   0x6402ae18
6400f1e5:	mov    esi,eax
6400f1e7:	call   0x64006b30
6400f1ec:	add    esp,0x18
6400f1ef:	push   eax
6400f1f0:	call   DWORD PTR ds:0x64026018
6400f1f6:	add    DWORD PTR ds:0x64033278,ebx
6400f1fc:	test   eax,eax
6400f1fe:	je     0x6400f225
6400f200:	push   esi
6400f201:	push   eax
6400f202:	call   DWORD PTR ds:0x64026014
6400f208:	add    DWORD PTR ds:0x6403327c,ebx
6400f20e:	mov    ds:0x640333dc,eax
6400f213:	mov    ecx,DWORD PTR [esp+0x10]
6400f217:	mov    DWORD PTR fs:0x0,ecx
6400f21e:	pop    ecx
6400f21f:	pop    esi
6400f220:	pop    ebx
6400f221:	mov    esp,ebp
6400f223:	pop    ebp
6400f224:	ret    
6400f225:	xor    eax,eax
6400f227:	mov    ds:0x640333dc,eax
6400f22c:	mov    ecx,DWORD PTR [esp+0x10]
6400f230:	mov    DWORD PTR fs:0x0,ecx
6400f237:	pop    ecx
6400f238:	pop    esi
6400f239:	pop    ebx
6400f23a:	mov    esp,ebp
6400f23c:	pop    ebp
6400f23d:	ret    
6400f23e:	mov    eax,ds:0x640333dc
6400f243:	mov    ecx,DWORD PTR [esp+0x10]
6400f247:	mov    DWORD PTR fs:0x0,ecx
6400f24e:	pop    ecx
6400f24f:	pop    esi
6400f250:	pop    ebx
6400f251:	mov    esp,ebp
6400f253:	pop    ebp
6400f254:	ret    
6400f255:	int3   
6400f256:	int3   
6400f257:	int3   
6400f258:	int3   
6400f259:	int3   
6400f25a:	int3   
6400f25b:	int3   
6400f25c:	int3   
6400f25d:	int3   
6400f25e:	int3   
6400f25f:	int3   
6400f260:	push   ebp
6400f261:	mov    ebp,esp
6400f263:	and    esp,0xfffffff8
6400f266:	push   0xffffffff
6400f268:	push   0x640245ae
6400f26d:	mov    eax,fs:0x0
6400f273:	push   eax
6400f274:	push   ecx
6400f275:	push   ebx
6400f276:	push   esi
6400f277:	mov    eax,ds:0x6402f09c
6400f27c:	xor    eax,esp
6400f27e:	push   eax
6400f27f:	lea    eax,[esp+0x10]
6400f283:	mov    fs:0x0,eax
6400f289:	mov    ebx,0x1
6400f28e:	test   BYTE PTR ds:0x640333d8,bl
6400f294:	jne    0x6400f31e
6400f29a:	or     DWORD PTR ds:0x640333d8,ebx
6400f2a0:	push   0x6402b00c
6400f2a5:	push   0xd
6400f2a7:	push   0x6402b034
6400f2ac:	mov    DWORD PTR [esp+0x24],0x0
6400f2b4:	call   0x64006840
6400f2b9:	push   0x6402b044
6400f2be:	push   0x8
6400f2c0:	push   0x6402ae18
6400f2c5:	mov    esi,eax
6400f2c7:	call   0x64006b30
6400f2cc:	add    esp,0x18
6400f2cf:	push   eax
6400f2d0:	call   DWORD PTR ds:0x64026018
6400f2d6:	add    DWORD PTR ds:0x64033278,ebx
6400f2dc:	test   eax,eax
6400f2de:	je     0x6400f305
6400f2e0:	push   esi
6400f2e1:	push   eax
6400f2e2:	call   DWORD PTR ds:0x64026014
6400f2e8:	add    DWORD PTR ds:0x6403327c,ebx
6400f2ee:	mov    ds:0x640333d4,eax
6400f2f3:	mov    ecx,DWORD PTR [esp+0x10]
6400f2f7:	mov    DWORD PTR fs:0x0,ecx
6400f2fe:	pop    ecx
6400f2ff:	pop    esi
6400f300:	pop    ebx
6400f301:	mov    esp,ebp
6400f303:	pop    ebp
6400f304:	ret    
6400f305:	xor    eax,eax
6400f307:	mov    ds:0x640333d4,eax
6400f30c:	mov    ecx,DWORD PTR [esp+0x10]
6400f310:	mov    DWORD PTR fs:0x0,ecx
6400f317:	pop    ecx
6400f318:	pop    esi
6400f319:	pop    ebx
6400f31a:	mov    esp,ebp
6400f31c:	pop    ebp
6400f31d:	ret    
6400f31e:	mov    eax,ds:0x640333d4
6400f323:	mov    ecx,DWORD PTR [esp+0x10]
6400f327:	mov    DWORD PTR fs:0x0,ecx
6400f32e:	pop    ecx
6400f32f:	pop    esi
6400f330:	pop    ebx
6400f331:	mov    esp,ebp
6400f333:	pop    ebp
6400f334:	ret    
6400f335:	int3   
6400f336:	int3   
6400f337:	int3   
6400f338:	int3   
6400f339:	int3   
6400f33a:	int3   
6400f33b:	int3   
6400f33c:	int3   
6400f33d:	int3   
6400f33e:	int3   
6400f33f:	int3   
6400f340:	push   ebp
6400f341:	mov    ebp,esp
6400f343:	and    esp,0xfffffff8
6400f346:	push   0xffffffff
6400f348:	push   0x6402457e
6400f34d:	mov    eax,fs:0x0
6400f353:	push   eax
6400f354:	push   ecx
6400f355:	push   ebx
6400f356:	push   esi
6400f357:	mov    eax,ds:0x6402f09c
6400f35c:	xor    eax,esp
6400f35e:	push   eax
6400f35f:	lea    eax,[esp+0x10]
6400f363:	mov    fs:0x0,eax
6400f369:	mov    ebx,0x1
6400f36e:	test   BYTE PTR ds:0x640333d0,bl
6400f374:	jne    0x6400f3fe
6400f37a:	or     DWORD PTR ds:0x640333d0,ebx
6400f380:	push   0x6402b06c
6400f385:	push   0xe
6400f387:	push   0x6402b0ac
6400f38c:	mov    DWORD PTR [esp+0x24],0x0
6400f394:	call   0x64006840
6400f399:	push   0x6402b0bc
6400f39e:	push   0x8
6400f3a0:	push   0x6402ae18
6400f3a5:	mov    esi,eax
6400f3a7:	call   0x64006b30
6400f3ac:	add    esp,0x18
6400f3af:	push   eax
6400f3b0:	call   DWORD PTR ds:0x64026018
6400f3b6:	add    DWORD PTR ds:0x64033278,ebx
6400f3bc:	test   eax,eax
6400f3be:	je     0x6400f3e5
6400f3c0:	push   esi
6400f3c1:	push   eax
6400f3c2:	call   DWORD PTR ds:0x64026014
6400f3c8:	add    DWORD PTR ds:0x6403327c,ebx
6400f3ce:	mov    ds:0x640333cc,eax
6400f3d3:	mov    ecx,DWORD PTR [esp+0x10]
6400f3d7:	mov    DWORD PTR fs:0x0,ecx
6400f3de:	pop    ecx
6400f3df:	pop    esi
6400f3e0:	pop    ebx
6400f3e1:	mov    esp,ebp
6400f3e3:	pop    ebp
6400f3e4:	ret    
6400f3e5:	xor    eax,eax
6400f3e7:	mov    ds:0x640333cc,eax
6400f3ec:	mov    ecx,DWORD PTR [esp+0x10]
6400f3f0:	mov    DWORD PTR fs:0x0,ecx
6400f3f7:	pop    ecx
6400f3f8:	pop    esi
6400f3f9:	pop    ebx
6400f3fa:	mov    esp,ebp
6400f3fc:	pop    ebp
6400f3fd:	ret    
6400f3fe:	mov    eax,ds:0x640333cc
6400f403:	mov    ecx,DWORD PTR [esp+0x10]
6400f407:	mov    DWORD PTR fs:0x0,ecx
6400f40e:	pop    ecx
6400f40f:	pop    esi
6400f410:	pop    ebx
6400f411:	mov    esp,ebp
6400f413:	pop    ebp
6400f414:	ret    
6400f415:	int3   
6400f416:	int3   
6400f417:	int3   
6400f418:	int3   
6400f419:	int3   
6400f41a:	int3   
6400f41b:	int3   
6400f41c:	int3   
6400f41d:	int3   
6400f41e:	int3   
6400f41f:	int3   
6400f420:	push   ebp
6400f421:	mov    ebp,esp
6400f423:	and    esp,0xfffffff8
6400f426:	push   0xffffffff
6400f428:	push   0x6402454e
6400f42d:	mov    eax,fs:0x0
6400f433:	push   eax
6400f434:	push   ecx
6400f435:	push   ebx
6400f436:	push   esi
6400f437:	mov    eax,ds:0x6402f09c
6400f43c:	xor    eax,esp
6400f43e:	push   eax
6400f43f:	lea    eax,[esp+0x10]
6400f443:	mov    fs:0x0,eax
6400f449:	mov    ebx,0x1
6400f44e:	test   BYTE PTR ds:0x640333c8,bl
6400f454:	jne    0x6400f4de
6400f45a:	or     DWORD PTR ds:0x640333c8,ebx
6400f460:	push   0x6402b0ec
6400f465:	push   0x14
6400f467:	push   0x6402b12c
6400f46c:	mov    DWORD PTR [esp+0x24],0x0
6400f474:	call   0x64006840
6400f479:	push   0x6402b144
6400f47e:	push   0x8
6400f480:	push   0x6402ae18
6400f485:	mov    esi,eax
6400f487:	call   0x64006b30
6400f48c:	add    esp,0x18
6400f48f:	push   eax
6400f490:	call   DWORD PTR ds:0x64026018
6400f496:	add    DWORD PTR ds:0x64033278,ebx
6400f49c:	test   eax,eax
6400f49e:	je     0x6400f4c5
6400f4a0:	push   esi
6400f4a1:	push   eax
6400f4a2:	call   DWORD PTR ds:0x64026014
6400f4a8:	add    DWORD PTR ds:0x6403327c,ebx
6400f4ae:	mov    ds:0x640333c4,eax
6400f4b3:	mov    ecx,DWORD PTR [esp+0x10]
6400f4b7:	mov    DWORD PTR fs:0x0,ecx
6400f4be:	pop    ecx
6400f4bf:	pop    esi
6400f4c0:	pop    ebx
6400f4c1:	mov    esp,ebp
6400f4c3:	pop    ebp
6400f4c4:	ret    
6400f4c5:	xor    eax,eax
6400f4c7:	mov    ds:0x640333c4,eax
6400f4cc:	mov    ecx,DWORD PTR [esp+0x10]
6400f4d0:	mov    DWORD PTR fs:0x0,ecx
6400f4d7:	pop    ecx
6400f4d8:	pop    esi
6400f4d9:	pop    ebx
6400f4da:	mov    esp,ebp
6400f4dc:	pop    ebp
6400f4dd:	ret    
6400f4de:	mov    eax,ds:0x640333c4
6400f4e3:	mov    ecx,DWORD PTR [esp+0x10]
6400f4e7:	mov    DWORD PTR fs:0x0,ecx
6400f4ee:	pop    ecx
6400f4ef:	pop    esi
6400f4f0:	pop    ebx
6400f4f1:	mov    esp,ebp
6400f4f3:	pop    ebp
6400f4f4:	ret    
6400f4f5:	int3   
6400f4f6:	int3   
6400f4f7:	int3   
6400f4f8:	int3   
6400f4f9:	int3   
6400f4fa:	int3   
6400f4fb:	int3   
6400f4fc:	int3   
6400f4fd:	int3   
6400f4fe:	int3   
6400f4ff:	int3   
6400f500:	push   ebp
6400f501:	mov    ebp,esp
6400f503:	and    esp,0xfffffff8
6400f506:	push   0xffffffff
6400f508:	push   0x6402451e
6400f50d:	mov    eax,fs:0x0
6400f513:	push   eax
6400f514:	push   ecx
6400f515:	push   ebx
6400f516:	push   esi
6400f517:	mov    eax,ds:0x6402f09c
6400f51c:	xor    eax,esp
6400f51e:	push   eax
6400f51f:	lea    eax,[esp+0x10]
6400f523:	mov    fs:0x0,eax
6400f529:	mov    ebx,0x1
6400f52e:	test   BYTE PTR ds:0x640333c0,bl
6400f534:	jne    0x6400f5be
6400f53a:	or     DWORD PTR ds:0x640333c0,ebx
6400f540:	push   0x6402b180
6400f545:	push   0xd
6400f547:	push   0x6402b1c0
6400f54c:	mov    DWORD PTR [esp+0x24],0x0
6400f554:	call   0x64006840
6400f559:	push   0x6402b1d0
6400f55e:	push   0x8
6400f560:	push   0x6402ae18
6400f565:	mov    esi,eax
6400f567:	call   0x64006b30
6400f56c:	add    esp,0x18
6400f56f:	push   eax
6400f570:	call   DWORD PTR ds:0x64026018
6400f576:	add    DWORD PTR ds:0x64033278,ebx
6400f57c:	test   eax,eax
6400f57e:	je     0x6400f5a5
6400f580:	push   esi
6400f581:	push   eax
6400f582:	call   DWORD PTR ds:0x64026014
6400f588:	add    DWORD PTR ds:0x6403327c,ebx
6400f58e:	mov    ds:0x640333bc,eax
6400f593:	mov    ecx,DWORD PTR [esp+0x10]
6400f597:	mov    DWORD PTR fs:0x0,ecx
6400f59e:	pop    ecx
6400f59f:	pop    esi
6400f5a0:	pop    ebx
6400f5a1:	mov    esp,ebp
6400f5a3:	pop    ebp
6400f5a4:	ret    
6400f5a5:	xor    eax,eax
6400f5a7:	mov    ds:0x640333bc,eax
6400f5ac:	mov    ecx,DWORD PTR [esp+0x10]
6400f5b0:	mov    DWORD PTR fs:0x0,ecx
6400f5b7:	pop    ecx
6400f5b8:	pop    esi
6400f5b9:	pop    ebx
6400f5ba:	mov    esp,ebp
6400f5bc:	pop    ebp
6400f5bd:	ret    
6400f5be:	mov    eax,ds:0x640333bc
6400f5c3:	mov    ecx,DWORD PTR [esp+0x10]
6400f5c7:	mov    DWORD PTR fs:0x0,ecx
6400f5ce:	pop    ecx
6400f5cf:	pop    esi
6400f5d0:	pop    ebx
6400f5d1:	mov    esp,ebp
6400f5d3:	pop    ebp
6400f5d4:	ret    
6400f5d5:	int3   
6400f5d6:	int3   
6400f5d7:	int3   
6400f5d8:	int3   
6400f5d9:	int3   
6400f5da:	int3   
6400f5db:	int3   
6400f5dc:	int3   
6400f5dd:	int3   
6400f5de:	int3   
6400f5df:	int3   
6400f5e0:	push   ebp
6400f5e1:	mov    ebp,esp
6400f5e3:	and    esp,0xfffffff8
6400f5e6:	push   0xffffffff
6400f5e8:	push   0x640244ee
6400f5ed:	mov    eax,fs:0x0
6400f5f3:	push   eax
6400f5f4:	push   ecx
6400f5f5:	push   ebx
6400f5f6:	push   esi
6400f5f7:	mov    eax,ds:0x6402f09c
6400f5fc:	xor    eax,esp
6400f5fe:	push   eax
6400f5ff:	lea    eax,[esp+0x10]
6400f603:	mov    fs:0x0,eax
6400f609:	mov    ebx,0x1
6400f60e:	test   BYTE PTR ds:0x640333b8,bl
6400f614:	jne    0x6400f69e
6400f61a:	or     DWORD PTR ds:0x640333b8,ebx
6400f620:	push   0x6402b20c
6400f625:	push   0xe
6400f627:	push   0x6402b230
6400f62c:	mov    DWORD PTR [esp+0x24],0x0
6400f634:	call   0x64006840
6400f639:	push   0x6402b240
6400f63e:	push   0x8
6400f640:	push   0x6402ae18
6400f645:	mov    esi,eax
6400f647:	call   0x64006b30
6400f64c:	add    esp,0x18
6400f64f:	push   eax
6400f650:	call   DWORD PTR ds:0x64026018
6400f656:	add    DWORD PTR ds:0x64033278,ebx
6400f65c:	test   eax,eax
6400f65e:	je     0x6400f685
6400f660:	push   esi
6400f661:	push   eax
6400f662:	call   DWORD PTR ds:0x64026014
6400f668:	add    DWORD PTR ds:0x6403327c,ebx
6400f66e:	mov    ds:0x640333b4,eax
6400f673:	mov    ecx,DWORD PTR [esp+0x10]
6400f677:	mov    DWORD PTR fs:0x0,ecx
6400f67e:	pop    ecx
6400f67f:	pop    esi
6400f680:	pop    ebx
6400f681:	mov    esp,ebp
6400f683:	pop    ebp
6400f684:	ret    
6400f685:	xor    eax,eax
6400f687:	mov    ds:0x640333b4,eax
6400f68c:	mov    ecx,DWORD PTR [esp+0x10]
6400f690:	mov    DWORD PTR fs:0x0,ecx
6400f697:	pop    ecx
6400f698:	pop    esi
6400f699:	pop    ebx
6400f69a:	mov    esp,ebp
6400f69c:	pop    ebp
6400f69d:	ret    
6400f69e:	mov    eax,ds:0x640333b4
6400f6a3:	mov    ecx,DWORD PTR [esp+0x10]
6400f6a7:	mov    DWORD PTR fs:0x0,ecx
6400f6ae:	pop    ecx
6400f6af:	pop    esi
6400f6b0:	pop    ebx
6400f6b1:	mov    esp,ebp
6400f6b3:	pop    ebp
6400f6b4:	ret    
6400f6b5:	int3   
6400f6b6:	int3   
6400f6b7:	int3   
6400f6b8:	int3   
6400f6b9:	int3   
6400f6ba:	int3   
6400f6bb:	int3   
6400f6bc:	int3   
6400f6bd:	int3   
6400f6be:	int3   
6400f6bf:	int3   
6400f6c0:	push   ebp
6400f6c1:	mov    ebp,esp
6400f6c3:	and    esp,0xfffffff8
6400f6c6:	push   0xffffffff
6400f6c8:	push   0x640244be
6400f6cd:	mov    eax,fs:0x0
6400f6d3:	push   eax
6400f6d4:	push   ecx
6400f6d5:	push   ebx
6400f6d6:	push   esi
6400f6d7:	mov    eax,ds:0x6402f09c
6400f6dc:	xor    eax,esp
6400f6de:	push   eax
6400f6df:	lea    eax,[esp+0x10]
6400f6e3:	mov    fs:0x0,eax
6400f6e9:	mov    ebx,0x1
6400f6ee:	test   BYTE PTR ds:0x640333b0,bl
6400f6f4:	jne    0x6400f77e
6400f6fa:	or     DWORD PTR ds:0x640333b0,ebx
6400f700:	push   0x6402b270
6400f705:	push   0xf
6400f707:	push   0x6402b298
6400f70c:	mov    DWORD PTR [esp+0x24],0x0
6400f714:	call   0x64006840
6400f719:	push   0x6402b2a8
6400f71e:	push   0x8
6400f720:	push   0x6402ae18
6400f725:	mov    esi,eax
6400f727:	call   0x64006b30
6400f72c:	add    esp,0x18
6400f72f:	push   eax
6400f730:	call   DWORD PTR ds:0x64026018
6400f736:	add    DWORD PTR ds:0x64033278,ebx
6400f73c:	test   eax,eax
6400f73e:	je     0x6400f765
6400f740:	push   esi
6400f741:	push   eax
6400f742:	call   DWORD PTR ds:0x64026014
6400f748:	add    DWORD PTR ds:0x6403327c,ebx
6400f74e:	mov    ds:0x640333ac,eax
6400f753:	mov    ecx,DWORD PTR [esp+0x10]
6400f757:	mov    DWORD PTR fs:0x0,ecx
6400f75e:	pop    ecx
6400f75f:	pop    esi
6400f760:	pop    ebx
6400f761:	mov    esp,ebp
6400f763:	pop    ebp
6400f764:	ret    
6400f765:	xor    eax,eax
6400f767:	mov    ds:0x640333ac,eax
6400f76c:	mov    ecx,DWORD PTR [esp+0x10]
6400f770:	mov    DWORD PTR fs:0x0,ecx
6400f777:	pop    ecx
6400f778:	pop    esi
6400f779:	pop    ebx
6400f77a:	mov    esp,ebp
6400f77c:	pop    ebp
6400f77d:	ret    
6400f77e:	mov    eax,ds:0x640333ac
6400f783:	mov    ecx,DWORD PTR [esp+0x10]
6400f787:	mov    DWORD PTR fs:0x0,ecx
6400f78e:	pop    ecx
6400f78f:	pop    esi
6400f790:	pop    ebx
6400f791:	mov    esp,ebp
6400f793:	pop    ebp
6400f794:	ret    
6400f795:	int3   
6400f796:	int3   
6400f797:	int3   
6400f798:	int3   
6400f799:	int3   
6400f79a:	int3   
6400f79b:	int3   
6400f79c:	int3   
6400f79d:	int3   
6400f79e:	int3   
6400f79f:	int3   
6400f7a0:	push   ebp
6400f7a1:	mov    ebp,esp
6400f7a3:	and    esp,0xfffffff8
6400f7a6:	push   0xffffffff
6400f7a8:	push   0x6402448e
6400f7ad:	mov    eax,fs:0x0
6400f7b3:	push   eax
6400f7b4:	push   ecx
6400f7b5:	push   ebx
6400f7b6:	push   esi
6400f7b7:	mov    eax,ds:0x6402f09c
6400f7bc:	xor    eax,esp
6400f7be:	push   eax
6400f7bf:	lea    eax,[esp+0x10]
6400f7c3:	mov    fs:0x0,eax
6400f7c9:	mov    ebx,0x1
6400f7ce:	test   BYTE PTR ds:0x640333a8,bl
6400f7d4:	jne    0x6400f85e
6400f7da:	or     DWORD PTR ds:0x640333a8,ebx
6400f7e0:	push   0x6402b2e4
6400f7e5:	push   0x12
6400f7e7:	push   0x6402b314
6400f7ec:	mov    DWORD PTR [esp+0x24],0x0
6400f7f4:	call   0x64006840
6400f7f9:	push   0x6402b328
6400f7fe:	push   0x8
6400f800:	push   0x6402ae18
6400f805:	mov    esi,eax
6400f807:	call   0x64006b30
6400f80c:	add    esp,0x18
6400f80f:	push   eax
6400f810:	call   DWORD PTR ds:0x64026018
6400f816:	add    DWORD PTR ds:0x64033278,ebx
6400f81c:	test   eax,eax
6400f81e:	je     0x6400f845
6400f820:	push   esi
6400f821:	push   eax
6400f822:	call   DWORD PTR ds:0x64026014
6400f828:	add    DWORD PTR ds:0x6403327c,ebx
6400f82e:	mov    ds:0x640333a4,eax
6400f833:	mov    ecx,DWORD PTR [esp+0x10]
6400f837:	mov    DWORD PTR fs:0x0,ecx
6400f83e:	pop    ecx
6400f83f:	pop    esi
6400f840:	pop    ebx
6400f841:	mov    esp,ebp
6400f843:	pop    ebp
6400f844:	ret    
6400f845:	xor    eax,eax
6400f847:	mov    ds:0x640333a4,eax
6400f84c:	mov    ecx,DWORD PTR [esp+0x10]
6400f850:	mov    DWORD PTR fs:0x0,ecx
6400f857:	pop    ecx
6400f858:	pop    esi
6400f859:	pop    ebx
6400f85a:	mov    esp,ebp
6400f85c:	pop    ebp
6400f85d:	ret    
6400f85e:	mov    eax,ds:0x640333a4
6400f863:	mov    ecx,DWORD PTR [esp+0x10]
6400f867:	mov    DWORD PTR fs:0x0,ecx
6400f86e:	pop    ecx
6400f86f:	pop    esi
6400f870:	pop    ebx
6400f871:	mov    esp,ebp
6400f873:	pop    ebp
6400f874:	ret    
6400f875:	int3   
6400f876:	int3   
6400f877:	int3   
6400f878:	int3   
6400f879:	int3   
6400f87a:	int3   
6400f87b:	int3   
6400f87c:	int3   
6400f87d:	int3   
6400f87e:	int3   
6400f87f:	int3   
6400f880:	push   ebp
6400f881:	mov    ebp,esp
6400f883:	and    esp,0xfffffff8
6400f886:	push   0xffffffff
6400f888:	push   0x6402445e
6400f88d:	mov    eax,fs:0x0
6400f893:	push   eax
6400f894:	push   ecx
6400f895:	push   ebx
6400f896:	push   esi
6400f897:	mov    eax,ds:0x6402f09c
6400f89c:	xor    eax,esp
6400f89e:	push   eax
6400f89f:	lea    eax,[esp+0x10]
6400f8a3:	mov    fs:0x0,eax
6400f8a9:	mov    ebx,0x1
6400f8ae:	test   BYTE PTR ds:0x640333a0,bl
6400f8b4:	jne    0x6400f93e
6400f8ba:	or     DWORD PTR ds:0x640333a0,ebx
6400f8c0:	push   0x6402b364
6400f8c5:	push   0xf
6400f8c7:	push   0x6402b3a0
6400f8cc:	mov    DWORD PTR [esp+0x24],0x0
6400f8d4:	call   0x64006840
6400f8d9:	push   0x6402b3b0
6400f8de:	push   0x8
6400f8e0:	push   0x6402ae18
6400f8e5:	mov    esi,eax
6400f8e7:	call   0x64006b30
6400f8ec:	add    esp,0x18
6400f8ef:	push   eax
6400f8f0:	call   DWORD PTR ds:0x64026018
6400f8f6:	add    DWORD PTR ds:0x64033278,ebx
6400f8fc:	test   eax,eax
6400f8fe:	je     0x6400f925
6400f900:	push   esi
6400f901:	push   eax
6400f902:	call   DWORD PTR ds:0x64026014
6400f908:	add    DWORD PTR ds:0x6403327c,ebx
6400f90e:	mov    ds:0x6403339c,eax
6400f913:	mov    ecx,DWORD PTR [esp+0x10]
6400f917:	mov    DWORD PTR fs:0x0,ecx
6400f91e:	pop    ecx
6400f91f:	pop    esi
6400f920:	pop    ebx
6400f921:	mov    esp,ebp
6400f923:	pop    ebp
6400f924:	ret    
6400f925:	xor    eax,eax
6400f927:	mov    ds:0x6403339c,eax
6400f92c:	mov    ecx,DWORD PTR [esp+0x10]
6400f930:	mov    DWORD PTR fs:0x0,ecx
6400f937:	pop    ecx
6400f938:	pop    esi
6400f939:	pop    ebx
6400f93a:	mov    esp,ebp
6400f93c:	pop    ebp
6400f93d:	ret    
6400f93e:	mov    eax,ds:0x6403339c
6400f943:	mov    ecx,DWORD PTR [esp+0x10]
6400f947:	mov    DWORD PTR fs:0x0,ecx
6400f94e:	pop    ecx
6400f94f:	pop    esi
6400f950:	pop    ebx
6400f951:	mov    esp,ebp
6400f953:	pop    ebp
6400f954:	ret    
6400f955:	int3   
6400f956:	int3   
6400f957:	int3   
6400f958:	int3   
6400f959:	int3   
6400f95a:	int3   
6400f95b:	int3   
6400f95c:	int3   
6400f95d:	int3   
6400f95e:	int3   
6400f95f:	int3   
6400f960:	push   ebp
6400f961:	mov    ebp,esp
6400f963:	and    esp,0xfffffff8
6400f966:	push   0xffffffff
6400f968:	push   0x6402442e
6400f96d:	mov    eax,fs:0x0
6400f973:	push   eax
6400f974:	push   ecx
6400f975:	push   ebx
6400f976:	push   esi
6400f977:	mov    eax,ds:0x6402f09c
6400f97c:	xor    eax,esp
6400f97e:	push   eax
6400f97f:	lea    eax,[esp+0x10]
6400f983:	mov    fs:0x0,eax
6400f989:	mov    ebx,0x1
6400f98e:	test   BYTE PTR ds:0x64033398,bl
6400f994:	jne    0x6400fa1e
6400f99a:	or     DWORD PTR ds:0x64033398,ebx
6400f9a0:	push   0x6402b3e4
6400f9a5:	push   0xd
6400f9a7:	push   0x6402b414
6400f9ac:	mov    DWORD PTR [esp+0x24],0x0
6400f9b4:	call   0x64006840
6400f9b9:	push   0x6402b424
6400f9be:	push   0x8
6400f9c0:	push   0x6402ae18
6400f9c5:	mov    esi,eax
6400f9c7:	call   0x64006b30
6400f9cc:	add    esp,0x18
6400f9cf:	push   eax
6400f9d0:	call   DWORD PTR ds:0x64026018
6400f9d6:	add    DWORD PTR ds:0x64033278,ebx
6400f9dc:	test   eax,eax
6400f9de:	je     0x6400fa05
6400f9e0:	push   esi
6400f9e1:	push   eax
6400f9e2:	call   DWORD PTR ds:0x64026014
6400f9e8:	add    DWORD PTR ds:0x6403327c,ebx
6400f9ee:	mov    ds:0x64033394,eax
6400f9f3:	mov    ecx,DWORD PTR [esp+0x10]
6400f9f7:	mov    DWORD PTR fs:0x0,ecx
6400f9fe:	pop    ecx
6400f9ff:	pop    esi
6400fa00:	pop    ebx
6400fa01:	mov    esp,ebp
6400fa03:	pop    ebp
6400fa04:	ret    
6400fa05:	xor    eax,eax
6400fa07:	mov    ds:0x64033394,eax
6400fa0c:	mov    ecx,DWORD PTR [esp+0x10]
6400fa10:	mov    DWORD PTR fs:0x0,ecx
6400fa17:	pop    ecx
6400fa18:	pop    esi
6400fa19:	pop    ebx
6400fa1a:	mov    esp,ebp
6400fa1c:	pop    ebp
6400fa1d:	ret    
6400fa1e:	mov    eax,ds:0x64033394
6400fa23:	mov    ecx,DWORD PTR [esp+0x10]
6400fa27:	mov    DWORD PTR fs:0x0,ecx
6400fa2e:	pop    ecx
6400fa2f:	pop    esi
6400fa30:	pop    ebx
6400fa31:	mov    esp,ebp
6400fa33:	pop    ebp
6400fa34:	ret    
6400fa35:	int3   
6400fa36:	int3   
6400fa37:	int3   
6400fa38:	int3   
6400fa39:	int3   
6400fa3a:	int3   
6400fa3b:	int3   
6400fa3c:	int3   
6400fa3d:	int3   
6400fa3e:	int3   
6400fa3f:	int3   
6400fa40:	push   ebp
6400fa41:	mov    ebp,esp
6400fa43:	and    esp,0xfffffff8
6400fa46:	push   0xffffffff
6400fa48:	push   0x640243fe
6400fa4d:	mov    eax,fs:0x0
6400fa53:	push   eax
6400fa54:	push   ecx
6400fa55:	push   ebx
6400fa56:	push   esi
6400fa57:	mov    eax,ds:0x6402f09c
6400fa5c:	xor    eax,esp
6400fa5e:	push   eax
6400fa5f:	lea    eax,[esp+0x10]
6400fa63:	mov    fs:0x0,eax
6400fa69:	mov    ebx,0x1
6400fa6e:	test   BYTE PTR ds:0x64033390,bl
6400fa74:	jne    0x6400fafe
6400fa7a:	or     DWORD PTR ds:0x64033390,ebx
6400fa80:	push   0x6402b45c
6400fa85:	push   0xc
6400fa87:	push   0x6402b488
6400fa8c:	mov    DWORD PTR [esp+0x24],0x0
6400fa94:	call   0x64006840
6400fa99:	push   0x6402b498
6400fa9e:	push   0x8
6400faa0:	push   0x6402ae18
6400faa5:	mov    esi,eax
6400faa7:	call   0x64006b30
6400faac:	add    esp,0x18
6400faaf:	push   eax
6400fab0:	call   DWORD PTR ds:0x64026018
6400fab6:	add    DWORD PTR ds:0x64033278,ebx
6400fabc:	test   eax,eax
6400fabe:	je     0x6400fae5
6400fac0:	push   esi
6400fac1:	push   eax
6400fac2:	call   DWORD PTR ds:0x64026014
6400fac8:	add    DWORD PTR ds:0x6403327c,ebx
6400face:	mov    ds:0x6403338c,eax
6400fad3:	mov    ecx,DWORD PTR [esp+0x10]
6400fad7:	mov    DWORD PTR fs:0x0,ecx
6400fade:	pop    ecx
6400fadf:	pop    esi
6400fae0:	pop    ebx
6400fae1:	mov    esp,ebp
6400fae3:	pop    ebp
6400fae4:	ret    
6400fae5:	xor    eax,eax
6400fae7:	mov    ds:0x6403338c,eax
6400faec:	mov    ecx,DWORD PTR [esp+0x10]
6400faf0:	mov    DWORD PTR fs:0x0,ecx
6400faf7:	pop    ecx
6400faf8:	pop    esi
6400faf9:	pop    ebx
6400fafa:	mov    esp,ebp
6400fafc:	pop    ebp
6400fafd:	ret    
6400fafe:	mov    eax,ds:0x6403338c
6400fb03:	mov    ecx,DWORD PTR [esp+0x10]
6400fb07:	mov    DWORD PTR fs:0x0,ecx
6400fb0e:	pop    ecx
6400fb0f:	pop    esi
6400fb10:	pop    ebx
6400fb11:	mov    esp,ebp
6400fb13:	pop    ebp
6400fb14:	ret    
6400fb15:	int3   
6400fb16:	int3   
6400fb17:	int3   
6400fb18:	int3   
6400fb19:	int3   
6400fb1a:	int3   
6400fb1b:	int3   
6400fb1c:	int3   
6400fb1d:	int3   
6400fb1e:	int3   
6400fb1f:	int3   
6400fb20:	push   ebp
6400fb21:	mov    ebp,esp
6400fb23:	and    esp,0xfffffff8
6400fb26:	push   0xffffffff
6400fb28:	push   0x640243ce
6400fb2d:	mov    eax,fs:0x0
6400fb33:	push   eax
6400fb34:	push   ecx
6400fb35:	push   ebx
6400fb36:	push   esi
6400fb37:	mov    eax,ds:0x6402f09c
6400fb3c:	xor    eax,esp
6400fb3e:	push   eax
6400fb3f:	lea    eax,[esp+0x10]
6400fb43:	mov    fs:0x0,eax
6400fb49:	mov    ebx,0x1
6400fb4e:	test   BYTE PTR ds:0x64033388,bl
6400fb54:	jne    0x6400fbde
6400fb5a:	or     DWORD PTR ds:0x64033388,ebx
6400fb60:	push   0x6402b4c0
6400fb65:	push   0x11
6400fb67:	push   0x6402b4f4
6400fb6c:	mov    DWORD PTR [esp+0x24],0x0
6400fb74:	call   0x64006840
6400fb79:	push   0x6402b508
6400fb7e:	push   0x8
6400fb80:	push   0x6402ae18
6400fb85:	mov    esi,eax
6400fb87:	call   0x64006b30
6400fb8c:	add    esp,0x18
6400fb8f:	push   eax
6400fb90:	call   DWORD PTR ds:0x64026018
6400fb96:	add    DWORD PTR ds:0x64033278,ebx
6400fb9c:	test   eax,eax
6400fb9e:	je     0x6400fbc5
6400fba0:	push   esi
6400fba1:	push   eax
6400fba2:	call   DWORD PTR ds:0x64026014
6400fba8:	add    DWORD PTR ds:0x6403327c,ebx
6400fbae:	mov    ds:0x64033384,eax
6400fbb3:	mov    ecx,DWORD PTR [esp+0x10]
6400fbb7:	mov    DWORD PTR fs:0x0,ecx
6400fbbe:	pop    ecx
6400fbbf:	pop    esi
6400fbc0:	pop    ebx
6400fbc1:	mov    esp,ebp
6400fbc3:	pop    ebp
6400fbc4:	ret    
6400fbc5:	xor    eax,eax
6400fbc7:	mov    ds:0x64033384,eax
6400fbcc:	mov    ecx,DWORD PTR [esp+0x10]
6400fbd0:	mov    DWORD PTR fs:0x0,ecx
6400fbd7:	pop    ecx
6400fbd8:	pop    esi
6400fbd9:	pop    ebx
6400fbda:	mov    esp,ebp
6400fbdc:	pop    ebp
6400fbdd:	ret    
6400fbde:	mov    eax,ds:0x64033384
6400fbe3:	mov    ecx,DWORD PTR [esp+0x10]
6400fbe7:	mov    DWORD PTR fs:0x0,ecx
6400fbee:	pop    ecx
6400fbef:	pop    esi
6400fbf0:	pop    ebx
6400fbf1:	mov    esp,ebp
6400fbf3:	pop    ebp
6400fbf4:	ret    
6400fbf5:	int3   
6400fbf6:	int3   
6400fbf7:	int3   
6400fbf8:	int3   
6400fbf9:	int3   
6400fbfa:	int3   
6400fbfb:	int3   
6400fbfc:	int3   
6400fbfd:	int3   
6400fbfe:	int3   
6400fbff:	int3   
6400fc00:	push   ebp
6400fc01:	mov    ebp,esp
6400fc03:	and    esp,0xfffffff8
6400fc06:	push   0xffffffff
6400fc08:	push   0x6402439e
6400fc0d:	mov    eax,fs:0x0
6400fc13:	push   eax
6400fc14:	push   ecx
6400fc15:	push   ebx
6400fc16:	push   esi
6400fc17:	mov    eax,ds:0x6402f09c
6400fc1c:	xor    eax,esp
6400fc1e:	push   eax
6400fc1f:	lea    eax,[esp+0x10]
6400fc23:	mov    fs:0x0,eax
6400fc29:	mov    ebx,0x1
6400fc2e:	test   BYTE PTR ds:0x64033380,bl
6400fc34:	jne    0x6400fcbe
6400fc3a:	or     DWORD PTR ds:0x64033380,ebx
6400fc40:	push   0x6402b52c
6400fc45:	push   0x16
6400fc47:	push   0x6402b55c
6400fc4c:	mov    DWORD PTR [esp+0x24],0x0
6400fc54:	call   0x64006840
6400fc59:	push   0x6402b578
6400fc5e:	push   0x8
6400fc60:	push   0x6402ae18
6400fc65:	mov    esi,eax
6400fc67:	call   0x64006b30
6400fc6c:	add    esp,0x18
6400fc6f:	push   eax
6400fc70:	call   DWORD PTR ds:0x64026018
6400fc76:	add    DWORD PTR ds:0x64033278,ebx
6400fc7c:	test   eax,eax
6400fc7e:	je     0x6400fca5
6400fc80:	push   esi
6400fc81:	push   eax
6400fc82:	call   DWORD PTR ds:0x64026014
6400fc88:	add    DWORD PTR ds:0x6403327c,ebx
6400fc8e:	mov    ds:0x6403337c,eax
6400fc93:	mov    ecx,DWORD PTR [esp+0x10]
6400fc97:	mov    DWORD PTR fs:0x0,ecx
6400fc9e:	pop    ecx
6400fc9f:	pop    esi
6400fca0:	pop    ebx
6400fca1:	mov    esp,ebp
6400fca3:	pop    ebp
6400fca4:	ret    
6400fca5:	xor    eax,eax
6400fca7:	mov    ds:0x6403337c,eax
6400fcac:	mov    ecx,DWORD PTR [esp+0x10]
6400fcb0:	mov    DWORD PTR fs:0x0,ecx
6400fcb7:	pop    ecx
6400fcb8:	pop    esi
6400fcb9:	pop    ebx
6400fcba:	mov    esp,ebp
6400fcbc:	pop    ebp
6400fcbd:	ret    
6400fcbe:	mov    eax,ds:0x6403337c
6400fcc3:	mov    ecx,DWORD PTR [esp+0x10]
6400fcc7:	mov    DWORD PTR fs:0x0,ecx
6400fcce:	pop    ecx
6400fccf:	pop    esi
6400fcd0:	pop    ebx
6400fcd1:	mov    esp,ebp
6400fcd3:	pop    ebp
6400fcd4:	ret    
6400fcd5:	int3   
6400fcd6:	int3   
6400fcd7:	int3   
6400fcd8:	int3   
6400fcd9:	int3   
6400fcda:	int3   
6400fcdb:	int3   
6400fcdc:	int3   
6400fcdd:	int3   
6400fcde:	int3   
6400fcdf:	int3   
6400fce0:	push   ebp
6400fce1:	mov    ebp,esp
6400fce3:	and    esp,0xfffffff8
6400fce6:	push   0xffffffff
6400fce8:	push   0x6402436e
6400fced:	mov    eax,fs:0x0
6400fcf3:	push   eax
6400fcf4:	push   ecx
6400fcf5:	push   ebx
6400fcf6:	push   esi
6400fcf7:	mov    eax,ds:0x6402f09c
6400fcfc:	xor    eax,esp
6400fcfe:	push   eax
6400fcff:	lea    eax,[esp+0x10]
6400fd03:	mov    fs:0x0,eax
6400fd09:	mov    ebx,0x1
6400fd0e:	test   BYTE PTR ds:0x64033378,bl
6400fd14:	jne    0x6400fd9e
6400fd1a:	or     DWORD PTR ds:0x64033378,ebx
6400fd20:	push   0x6402b5b8
6400fd25:	push   0x10
6400fd27:	push   0x6402b5dc
6400fd2c:	mov    DWORD PTR [esp+0x24],0x0
6400fd34:	call   0x64006840
6400fd39:	push   0x6402b5f0
6400fd3e:	push   0x8
6400fd40:	push   0x6402ae18
6400fd45:	mov    esi,eax
6400fd47:	call   0x64006b30
6400fd4c:	add    esp,0x18
6400fd4f:	push   eax
6400fd50:	call   DWORD PTR ds:0x64026018
6400fd56:	add    DWORD PTR ds:0x64033278,ebx
6400fd5c:	test   eax,eax
6400fd5e:	je     0x6400fd85
6400fd60:	push   esi
6400fd61:	push   eax
6400fd62:	call   DWORD PTR ds:0x64026014
6400fd68:	add    DWORD PTR ds:0x6403327c,ebx
6400fd6e:	mov    ds:0x64033374,eax
6400fd73:	mov    ecx,DWORD PTR [esp+0x10]
6400fd77:	mov    DWORD PTR fs:0x0,ecx
6400fd7e:	pop    ecx
6400fd7f:	pop    esi
6400fd80:	pop    ebx
6400fd81:	mov    esp,ebp
6400fd83:	pop    ebp
6400fd84:	ret    
6400fd85:	xor    eax,eax
6400fd87:	mov    ds:0x64033374,eax
6400fd8c:	mov    ecx,DWORD PTR [esp+0x10]
6400fd90:	mov    DWORD PTR fs:0x0,ecx
6400fd97:	pop    ecx
6400fd98:	pop    esi
6400fd99:	pop    ebx
6400fd9a:	mov    esp,ebp
6400fd9c:	pop    ebp
6400fd9d:	ret    
6400fd9e:	mov    eax,ds:0x64033374
6400fda3:	mov    ecx,DWORD PTR [esp+0x10]
6400fda7:	mov    DWORD PTR fs:0x0,ecx
6400fdae:	pop    ecx
6400fdaf:	pop    esi
6400fdb0:	pop    ebx
6400fdb1:	mov    esp,ebp
6400fdb3:	pop    ebp
6400fdb4:	ret    
6400fdb5:	int3   
6400fdb6:	int3   
6400fdb7:	int3   
6400fdb8:	int3   
6400fdb9:	int3   
6400fdba:	int3   
6400fdbb:	int3   
6400fdbc:	int3   
6400fdbd:	int3   
6400fdbe:	int3   
6400fdbf:	int3   
6400fdc0:	push   ebp
6400fdc1:	mov    ebp,esp
6400fdc3:	and    esp,0xfffffff8
6400fdc6:	push   0xffffffff
6400fdc8:	push   0x6402433e
6400fdcd:	mov    eax,fs:0x0
6400fdd3:	push   eax
6400fdd4:	push   ecx
6400fdd5:	push   ebx
6400fdd6:	push   esi
6400fdd7:	mov    eax,ds:0x6402f09c
6400fddc:	xor    eax,esp
6400fdde:	push   eax
6400fddf:	lea    eax,[esp+0x10]
6400fde3:	mov    fs:0x0,eax
6400fde9:	mov    ebx,0x1
6400fdee:	test   BYTE PTR ds:0x64033370,bl
6400fdf4:	jne    0x6400fe7e
6400fdfa:	or     DWORD PTR ds:0x64033370,ebx
6400fe00:	push   0x6402b620
6400fe05:	push   0xd
6400fe07:	push   0x6402b65c
6400fe0c:	mov    DWORD PTR [esp+0x24],0x0
6400fe14:	call   0x64006840
6400fe19:	push   0x6402b66c
6400fe1e:	push   0x7
6400fe20:	push   0x6402b698
6400fe25:	mov    esi,eax
6400fe27:	call   0x64006b30
6400fe2c:	add    esp,0x18
6400fe2f:	push   eax
6400fe30:	call   DWORD PTR ds:0x64026018
6400fe36:	add    DWORD PTR ds:0x64033278,ebx
6400fe3c:	test   eax,eax
6400fe3e:	je     0x6400fe65
6400fe40:	push   esi
6400fe41:	push   eax
6400fe42:	call   DWORD PTR ds:0x64026014
6400fe48:	add    DWORD PTR ds:0x6403327c,ebx
6400fe4e:	mov    ds:0x6403336c,eax
6400fe53:	mov    ecx,DWORD PTR [esp+0x10]
6400fe57:	mov    DWORD PTR fs:0x0,ecx
6400fe5e:	pop    ecx
6400fe5f:	pop    esi
6400fe60:	pop    ebx
6400fe61:	mov    esp,ebp
6400fe63:	pop    ebp
6400fe64:	ret    
6400fe65:	xor    eax,eax
6400fe67:	mov    ds:0x6403336c,eax
6400fe6c:	mov    ecx,DWORD PTR [esp+0x10]
6400fe70:	mov    DWORD PTR fs:0x0,ecx
6400fe77:	pop    ecx
6400fe78:	pop    esi
6400fe79:	pop    ebx
6400fe7a:	mov    esp,ebp
6400fe7c:	pop    ebp
6400fe7d:	ret    
6400fe7e:	mov    eax,ds:0x6403336c
6400fe83:	mov    ecx,DWORD PTR [esp+0x10]
6400fe87:	mov    DWORD PTR fs:0x0,ecx
6400fe8e:	pop    ecx
6400fe8f:	pop    esi
6400fe90:	pop    ebx
6400fe91:	mov    esp,ebp
6400fe93:	pop    ebp
6400fe94:	ret    
6400fe95:	int3   
6400fe96:	int3   
6400fe97:	int3   
6400fe98:	int3   
6400fe99:	int3   
6400fe9a:	int3   
6400fe9b:	int3   
6400fe9c:	int3   
6400fe9d:	int3   
6400fe9e:	int3   
6400fe9f:	int3   
6400fea0:	push   ebp
6400fea1:	mov    ebp,esp
6400fea3:	and    esp,0xfffffff8
6400fea6:	push   0xffffffff
6400fea8:	push   0x6402430e
6400fead:	mov    eax,fs:0x0
6400feb3:	push   eax
6400feb4:	push   ecx
6400feb5:	push   ebx
6400feb6:	push   esi
6400feb7:	mov    eax,ds:0x6402f09c
6400febc:	xor    eax,esp
6400febe:	push   eax
6400febf:	lea    eax,[esp+0x10]
6400fec3:	mov    fs:0x0,eax
6400fec9:	mov    ebx,0x1
6400fece:	test   BYTE PTR ds:0x64033368,bl
6400fed4:	jne    0x6400ff5e
6400feda:	or     DWORD PTR ds:0x64033368,ebx
6400fee0:	push   0x6402b6a8
6400fee5:	push   0xc
6400fee7:	push   0x6402b6e0
6400feec:	mov    DWORD PTR [esp+0x24],0x0
6400fef4:	call   0x64006840
6400fef9:	push   0x6402b6f0
6400fefe:	push   0x5
6400ff00:	push   0x6402b71c
6400ff05:	mov    esi,eax
6400ff07:	call   0x64006b30
6400ff0c:	add    esp,0x18
6400ff0f:	push   eax
6400ff10:	call   DWORD PTR ds:0x64026018
6400ff16:	add    DWORD PTR ds:0x64033278,ebx
6400ff1c:	test   eax,eax
6400ff1e:	je     0x6400ff45
6400ff20:	push   esi
6400ff21:	push   eax
6400ff22:	call   DWORD PTR ds:0x64026014
6400ff28:	add    DWORD PTR ds:0x6403327c,ebx
6400ff2e:	mov    ds:0x64033364,eax
6400ff33:	mov    ecx,DWORD PTR [esp+0x10]
6400ff37:	mov    DWORD PTR fs:0x0,ecx
6400ff3e:	pop    ecx
6400ff3f:	pop    esi
6400ff40:	pop    ebx
6400ff41:	mov    esp,ebp
6400ff43:	pop    ebp
6400ff44:	ret    
6400ff45:	xor    eax,eax
6400ff47:	mov    ds:0x64033364,eax
6400ff4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ff50:	mov    DWORD PTR fs:0x0,ecx
6400ff57:	pop    ecx
6400ff58:	pop    esi
6400ff59:	pop    ebx
6400ff5a:	mov    esp,ebp
6400ff5c:	pop    ebp
6400ff5d:	ret    
6400ff5e:	mov    eax,ds:0x64033364
6400ff63:	mov    ecx,DWORD PTR [esp+0x10]
6400ff67:	mov    DWORD PTR fs:0x0,ecx
6400ff6e:	pop    ecx
6400ff6f:	pop    esi
6400ff70:	pop    ebx
6400ff71:	mov    esp,ebp
6400ff73:	pop    ebp
6400ff74:	ret    
6400ff75:	int3   
6400ff76:	int3   
6400ff77:	int3   
6400ff78:	int3   
6400ff79:	int3   
6400ff7a:	int3   
6400ff7b:	int3   
6400ff7c:	int3   
6400ff7d:	int3   
6400ff7e:	int3   
6400ff7f:	int3   
6400ff80:	push   ebp
6400ff81:	mov    ebp,esp
6400ff83:	and    esp,0xfffffff8
6400ff86:	push   0xffffffff
6400ff88:	push   0x640242de
6400ff8d:	mov    eax,fs:0x0
6400ff93:	push   eax
6400ff94:	push   ecx
6400ff95:	push   ebx
6400ff96:	push   esi
6400ff97:	mov    eax,ds:0x6402f09c
6400ff9c:	xor    eax,esp
6400ff9e:	push   eax
6400ff9f:	lea    eax,[esp+0x10]
6400ffa3:	mov    fs:0x0,eax
6400ffa9:	mov    ebx,0x1
6400ffae:	test   BYTE PTR ds:0x64033360,bl
6400ffb4:	jne    0x6401003e
6400ffba:	or     DWORD PTR ds:0x64033360,ebx
6400ffc0:	push   0x6402b728
6400ffc5:	push   0x11
6400ffc7:	push   0x6402b760
6400ffcc:	mov    DWORD PTR [esp+0x24],0x0
6400ffd4:	call   0x64006840
6400ffd9:	push   0x6402b774
6400ffde:	push   0x5
6400ffe0:	push   0x6402b71c
6400ffe5:	mov    esi,eax
6400ffe7:	call   0x64006b30
6400ffec:	add    esp,0x18
6400ffef:	push   eax
6400fff0:	call   DWORD PTR ds:0x64026018
6400fff6:	add    DWORD PTR ds:0x64033278,ebx
6400fffc:	test   eax,eax
6400fffe:	je     0x64010025
64010000:	push   esi
64010001:	push   eax
64010002:	call   DWORD PTR ds:0x64026014
64010008:	add    DWORD PTR ds:0x6403327c,ebx
6401000e:	mov    ds:0x6403335c,eax
64010013:	mov    ecx,DWORD PTR [esp+0x10]
64010017:	mov    DWORD PTR fs:0x0,ecx
6401001e:	pop    ecx
6401001f:	pop    esi
64010020:	pop    ebx
64010021:	mov    esp,ebp
64010023:	pop    ebp
64010024:	ret    
64010025:	xor    eax,eax
64010027:	mov    ds:0x6403335c,eax
6401002c:	mov    ecx,DWORD PTR [esp+0x10]
64010030:	mov    DWORD PTR fs:0x0,ecx
64010037:	pop    ecx
64010038:	pop    esi
64010039:	pop    ebx
6401003a:	mov    esp,ebp
6401003c:	pop    ebp
6401003d:	ret    
6401003e:	mov    eax,ds:0x6403335c
64010043:	mov    ecx,DWORD PTR [esp+0x10]
64010047:	mov    DWORD PTR fs:0x0,ecx
6401004e:	pop    ecx
6401004f:	pop    esi
64010050:	pop    ebx
64010051:	mov    esp,ebp
64010053:	pop    ebp
64010054:	ret    
64010055:	int3   
64010056:	int3   
64010057:	int3   
64010058:	int3   
64010059:	int3   
6401005a:	int3   
6401005b:	int3   
6401005c:	int3   
6401005d:	int3   
6401005e:	int3   
6401005f:	int3   
64010060:	push   esi
64010061:	push   edi
64010062:	mov    edi,DWORD PTR [esp+0xc]
64010066:	mov    esi,DWORD PTR [edi+0xc]
64010069:	cmp    esi,DWORD PTR [edi+0x14]
6401006c:	je     0x64010084
6401006e:	mov    edi,edi
64010070:	mov    eax,DWORD PTR [esi-0x4]
64010073:	mov    ecx,DWORD PTR [esi-0x8]
64010076:	push   eax
64010077:	call   ecx
64010079:	add    esi,0xfffffff8
6401007c:	add    esp,0x4
6401007f:	cmp    esi,DWORD PTR [edi+0x14]
64010082:	jne    0x64010070
64010084:	mov    edx,DWORD PTR [edi+0x14]
64010087:	push   edx
64010088:	call   0x64014e06
6401008d:	mov    edi,DWORD PTR [edi+0x8]
64010090:	mov    esi,DWORD PTR [edi]
64010092:	push   edi
64010093:	call   0x64014e06
64010098:	add    esp,0x8
6401009b:	test   esi,esi
6401009d:	je     0x640100b1
6401009f:	nop
640100a0:	mov    eax,esi
640100a2:	mov    esi,DWORD PTR [esi]
640100a4:	push   eax
640100a5:	call   0x64014e06
640100aa:	add    esp,0x4
640100ad:	test   esi,esi
640100af:	jne    0x640100a0
640100b1:	pop    edi
640100b2:	pop    esi
640100b3:	ret    
640100b4:	int3   
640100b5:	int3   
640100b6:	int3   
640100b7:	int3   
640100b8:	int3   
640100b9:	int3   
640100ba:	int3   
640100bb:	int3   
640100bc:	int3   
640100bd:	int3   
640100be:	int3   
640100bf:	int3   
640100c0:	push   esi
640100c1:	mov    esi,DWORD PTR [esp+0x8]
640100c5:	push   edi
640100c6:	mov    edi,DWORD PTR [esp+0x10]
640100ca:	lea    eax,[edi+0x4]
640100cd:	push   eax
640100ce:	mov    DWORD PTR [esi+0x18],edi
640100d1:	call   0x64014ee3
640100d6:	xor    ecx,ecx
640100d8:	add    esp,0x4
640100db:	cmp    eax,ecx
640100dd:	je     0x640100fa
640100df:	mov    DWORD PTR [esi+0x8],eax
640100e2:	mov    DWORD PTR [esi],edi
640100e4:	lea    edx,[eax+0x4]
640100e7:	mov    DWORD PTR [esi+0x4],edx
640100ea:	mov    DWORD PTR [eax],ecx
640100ec:	pop    edi
640100ed:	mov    DWORD PTR [esi+0xc],ecx
640100f0:	mov    DWORD PTR [esi+0x10],ecx
640100f3:	mov    DWORD PTR [esi+0x14],ecx
640100f6:	mov    al,0x1
640100f8:	pop    esi
640100f9:	ret    
640100fa:	pop    edi
640100fb:	xor    al,al
640100fd:	pop    esi
640100fe:	ret    
640100ff:	int3   
64010100:	mov    ecx,DWORD PTR [ebx]
64010102:	push   esi
64010103:	mov    esi,eax
64010105:	add    esi,0x3
64010108:	and    esi,0xfffffffc
6401010b:	cmp    ecx,esi
6401010d:	jae    0x64010143
6401010f:	push   edi
64010110:	mov    edi,DWORD PTR [ebx+0x18]
64010113:	cmp    edi,esi
64010115:	jae    0x6401011d
64010117:	add    edi,edi
64010119:	cmp    edi,esi
6401011b:	jb     0x64010117
6401011d:	lea    eax,[edi+0x4]
64010120:	push   eax
64010121:	call   0x64014ee3
64010126:	mov    edx,DWORD PTR [ebx+0x8]
64010129:	mov    DWORD PTR [eax],edx
6401012b:	add    esp,0x4
6401012e:	sub    edi,esi
64010130:	lea    ecx,[eax+0x4]
64010133:	mov    DWORD PTR [ebx+0x8],eax
64010136:	lea    eax,[ecx+esi*1]
64010139:	mov    DWORD PTR [ebx],edi
6401013b:	pop    edi
6401013c:	mov    DWORD PTR [ebx+0x4],eax
6401013f:	mov    eax,ecx
64010141:	pop    esi
64010142:	ret    
64010143:	mov    eax,DWORD PTR [ebx+0x4]
64010146:	sub    ecx,esi
64010148:	mov    DWORD PTR [ebx],ecx
6401014a:	lea    ecx,[eax+esi*1]
6401014d:	mov    DWORD PTR [ebx+0x4],ecx
64010150:	pop    esi
64010151:	ret    
64010152:	int3   
64010153:	int3   
64010154:	int3   
64010155:	int3   
64010156:	int3   
64010157:	int3   
64010158:	int3   
64010159:	int3   
6401015a:	int3   
6401015b:	int3   
6401015c:	int3   
6401015d:	int3   
6401015e:	int3   
6401015f:	int3   
64010160:	push   ebx
64010161:	mov    DWORD PTR [esi],0x6
64010167:	mov    DWORD PTR [esi+0x8],0x0
6401016e:	mov    ebx,DWORD PTR [ecx]
64010170:	shl    eax,0x4
64010173:	call   0x64010100
64010178:	mov    DWORD PTR [esi+0xc],eax
6401017b:	neg    eax
6401017d:	sbb    eax,eax
6401017f:	neg    eax
64010181:	sub    eax,0x1
64010184:	pop    ebx
64010185:	ret    
64010186:	int3   
64010187:	int3   
64010188:	int3   
64010189:	int3   
6401018a:	int3   
6401018b:	int3   
6401018c:	int3   
6401018d:	int3   
6401018e:	int3   
6401018f:	int3   
64010190:	push   ebx
64010191:	mov    DWORD PTR [esi],0x7
64010197:	mov    DWORD PTR [esi+0x8],0x0
6401019e:	mov    ebx,DWORD PTR [ecx]
640101a0:	shl    eax,0x5
640101a3:	call   0x64010100
640101a8:	mov    DWORD PTR [esi+0xc],eax
640101ab:	neg    eax
640101ad:	sbb    eax,eax
640101af:	neg    eax
640101b1:	sub    eax,0x1
640101b4:	pop    ebx
640101b5:	ret    
640101b6:	int3   
640101b7:	int3   
640101b8:	int3   
640101b9:	int3   
640101ba:	int3   
640101bb:	int3   
640101bc:	int3   
640101bd:	int3   
640101be:	int3   
640101bf:	int3   
640101c0:	sub    esp,0x44
640101c3:	mov    eax,DWORD PTR [esp+0x54]
640101c7:	mov    edx,DWORD PTR [esp+0x4c]
640101cb:	mov    ecx,DWORD PTR [esp+0x48]
640101cf:	mov    eax,DWORD PTR [eax]
640101d1:	push   ebx
640101d2:	push   ebp
640101d3:	push   esi
640101d4:	mov    esi,DWORD PTR [esp+0x5c]
640101d8:	add    eax,edx
640101da:	add    edx,esi
640101dc:	mov    esi,DWORD PTR [ecx+0xc]
640101df:	mov    DWORD PTR [esp+0x18],esi
640101e3:	mov    esi,DWORD PTR [ecx+0x8]
640101e6:	mov    ecx,DWORD PTR [ecx+0x10]
640101e9:	push   edi
640101ea:	xor    edi,edi
640101ec:	cmp    eax,edx
640101ee:	mov    DWORD PTR [esp+0x60],ecx
640101f2:	mov    DWORD PTR [esp+0x14],eax
640101f6:	mov    DWORD PTR [esp+0x20],edx
640101fa:	mov    DWORD PTR [esp+0x18],esi
640101fe:	lea    ecx,[edi+0x20]
64010201:	je     0x64010a81
64010207:	mov    ebp,DWORD PTR [esp+0x38]
6401020b:	jmp    0x64010210
6401020d:	lea    ecx,[ecx+0x0]
64010210:	mov    eax,DWORD PTR [esp+0x18]
64010214:	test   eax,eax
64010216:	mov    ebx,DWORD PTR [esp+0x14]
6401021a:	jne    0x6401032f
64010220:	mov    al,BYTE PTR [ebx]
64010222:	cmp    al,0x7f
64010224:	ja     0x6401023a
64010226:	movzx  eax,al
64010229:	cdq    
6401022a:	mov    ebx,0x2
6401022f:	mov    ebp,eax
64010231:	mov    DWORD PTR [esp+0x3c],edx
64010235:	jmp    0x6401090c
6401023a:	cmp    al,0xe0
6401023c:	jb     0x64010262
6401023e:	cmp    al,0xff
64010240:	ja     0x64010262
64010242:	test   al,al
64010244:	movsx  eax,al
64010247:	cdq    
64010248:	mov    ebp,eax
6401024a:	mov    DWORD PTR [esp+0x3c],edx
6401024e:	mov    DWORD PTR [esp+0x38],ebp
64010252:	jl     0x6401056b
64010258:	mov    ebx,0x2
6401025d:	jmp    0x64010910
64010262:	cmp    al,0xc0
64010264:	jb     0x640102fe
6401026a:	cmp    al,0xdf
6401026c:	ja     0x640102fe
64010272:	movzx  eax,al
64010275:	lea    ecx,[eax-0xc0]
6401027b:	cmp    ecx,0x1f
6401027e:	ja     0x64010a85
64010284:	movzx  ecx,BYTE PTR [ecx+0x64010ad0]
6401028b:	jmp    DWORD PTR [ecx*4+0x64010ab8]
64010292:	xor    ebx,ebx
64010294:	jmp    0x64010910
64010299:	mov    BYTE PTR [esp+0x38],0x0
6401029e:	mov    ebp,DWORD PTR [esp+0x38]
640102a2:	mov    ebx,0x1
640102a7:	jmp    0x64010910
640102ac:	mov    ebx,0x1
640102b1:	mov    BYTE PTR [esp+0x38],bl
640102b5:	mov    ebp,DWORD PTR [esp+0x38]
640102b9:	jmp    0x64010910
640102be:	mov    ecx,eax
640102c0:	and    ecx,0x3
640102c3:	mov    esi,0x1
640102c8:	shl    esi,cl
640102ca:	and    eax,0x1f
640102cd:	add    ebx,0x1
640102d0:	mov    DWORD PTR [esp+0x18],eax
640102d4:	mov    DWORD PTR [esp+0x1c],esi
640102d8:	mov    DWORD PTR [esp+0x14],ebx
640102dc:	jmp    0x64010333
640102de:	mov    ecx,eax
640102e0:	and    ecx,0x1
640102e3:	mov    esi,0x2
640102e8:	shl    esi,cl
640102ea:	and    eax,0x1f
640102ed:	add    ebx,0x1
640102f0:	mov    DWORD PTR [esp+0x18],eax
640102f4:	mov    DWORD PTR [esp+0x1c],esi
640102f8:	mov    DWORD PTR [esp+0x14],ebx
640102fc:	jmp    0x64010333
640102fe:	cmp    al,0xa0
64010300:	jb     0x64010862
64010306:	cmp    al,0xbf
64010308:	ja     0x64010862
6401030e:	and    eax,0x1f
64010311:	mov    esi,eax
64010313:	mov    DWORD PTR [esp+0x1c],esi
64010317:	je     0x6401060d
6401031d:	mov    eax,0x20
64010322:	add    ebx,0x1
64010325:	mov    DWORD PTR [esp+0x18],eax
64010329:	mov    DWORD PTR [esp+0x14],ebx
6401032d:	jmp    0x64010333
6401032f:	mov    esi,DWORD PTR [esp+0x1c]
64010333:	mov    ecx,edx
64010335:	sub    ecx,ebx
64010337:	cmp    ecx,esi
64010339:	jb     0x64010a81
6401033f:	mov    edi,ebx
64010341:	add    eax,0xfffffff6
64010344:	cmp    eax,0x16
64010347:	lea    ebx,[ebx+esi*1-0x1]
6401034b:	mov    DWORD PTR [esp+0x14],ebx
6401034f:	ja     0x64010a85
64010355:	jmp    DWORD PTR [eax*4+0x64010af0]
6401035c:	xor    eax,eax
6401035e:	mov    ah,BYTE PTR [edi]
64010360:	mov    al,BYTE PTR [edi+0x1]
64010363:	mov    esi,eax
64010365:	test   esi,esi
64010367:	jmp    0x64010313
64010369:	movzx  eax,BYTE PTR [edi+0x2]
6401036d:	xor    ecx,ecx
6401036f:	mov    ch,BYTE PTR [edi]
64010371:	mov    cl,BYTE PTR [edi+0x1]
64010374:	shl    ecx,0x8
64010377:	or     ecx,eax
64010379:	movzx  eax,BYTE PTR [edi+0x3]
6401037d:	shl    ecx,0x8
64010380:	or     ecx,eax
64010382:	mov    esi,ecx
64010384:	jmp    0x64010313
64010386:	movzx  edx,BYTE PTR [edi+0x2]
6401038a:	movzx  eax,BYTE PTR [edi+0x3]
6401038e:	xor    ecx,ecx
64010390:	mov    ch,BYTE PTR [edi]
64010392:	mov    ebx,0x4
64010397:	mov    cl,BYTE PTR [edi+0x1]
6401039a:	shl    ecx,0x8
6401039d:	or     ecx,edx
6401039f:	shl    ecx,0x8
640103a2:	or     ecx,eax
640103a4:	mov    DWORD PTR [esp+0x24],ecx
640103a8:	fld    DWORD PTR [esp+0x24]
640103ac:	fstp   QWORD PTR [esp+0x38]
640103b0:	mov    ebp,DWORD PTR [esp+0x38]
640103b4:	jmp    0x64010910
640103b9:	movzx  eax,BYTE PTR [edi]
640103bc:	cdq    
640103bd:	shld   edx,eax,0x8
640103c1:	shl    eax,0x8
640103c4:	mov    ecx,eax
640103c6:	movzx  eax,BYTE PTR [edi+0x1]
640103ca:	mov    esi,edx
640103cc:	cdq    
640103cd:	or     ecx,eax
640103cf:	movzx  eax,BYTE PTR [edi+0x2]
640103d3:	or     esi,edx
640103d5:	shld   esi,ecx,0x8
640103d9:	shl    ecx,0x8
640103dc:	cdq    
640103dd:	or     ecx,eax
640103df:	movzx  eax,BYTE PTR [edi+0x3]
640103e3:	or     esi,edx
640103e5:	shld   esi,ecx,0x8
640103e9:	shl    ecx,0x8
640103ec:	cdq    
640103ed:	or     ecx,eax
640103ef:	movzx  eax,BYTE PTR [edi+0x4]
640103f3:	or     esi,edx
640103f5:	shld   esi,ecx,0x8
640103f9:	shl    ecx,0x8
640103fc:	cdq    
640103fd:	or     ecx,eax
640103ff:	movzx  eax,BYTE PTR [edi+0x5]
64010403:	or     esi,edx
64010405:	shld   esi,ecx,0x8
64010409:	shl    ecx,0x8
6401040c:	cdq    
6401040d:	or     ecx,eax
6401040f:	movzx  eax,BYTE PTR [edi+0x6]
64010413:	or     esi,edx
64010415:	shld   esi,ecx,0x8
64010419:	shl    ecx,0x8
6401041c:	cdq    
6401041d:	or     ecx,eax
6401041f:	movzx  eax,BYTE PTR [edi+0x7]
64010423:	or     esi,edx
64010425:	shld   esi,ecx,0x8
64010429:	cdq    
6401042a:	shl    ecx,0x8
6401042d:	or     ecx,eax
6401042f:	or     esi,edx
64010431:	mov    DWORD PTR [esp+0x28],ecx
64010435:	mov    DWORD PTR [esp+0x2c],esi
64010439:	mov    ebx,0x4
6401043e:	fld    QWORD PTR [esp+0x28]
64010442:	fstp   QWORD PTR [esp+0x38]
64010446:	mov    ebp,DWORD PTR [esp+0x38]
6401044a:	jmp    0x64010910
6401044f:	movzx  eax,BYTE PTR [edi]
64010452:	cdq    
64010453:	mov    ebx,0x2
64010458:	mov    ebp,eax
6401045a:	mov    DWORD PTR [esp+0x3c],edx
6401045e:	jmp    0x6401090c
64010463:	xor    edx,edx
64010465:	mov    dh,BYTE PTR [edi]
64010467:	mov    ebx,0x2
6401046c:	mov    dl,BYTE PTR [edi+0x1]
6401046f:	movzx  eax,dx
64010472:	cdq    
64010473:	mov    ebp,eax
64010475:	mov    DWORD PTR [esp+0x3c],edx
64010479:	jmp    0x6401090c
6401047e:	movzx  ecx,BYTE PTR [edi+0x2]
64010482:	movzx  edx,BYTE PTR [edi+0x3]
64010486:	xor    eax,eax
64010488:	mov    ah,BYTE PTR [edi]
6401048a:	mov    ebx,0x2
6401048f:	mov    DWORD PTR [esp+0x3c],0x0
64010497:	mov    al,BYTE PTR [edi+0x1]
6401049a:	shl    eax,0x8
6401049d:	or     eax,ecx
6401049f:	shl    eax,0x8
640104a2:	or     eax,edx
640104a4:	mov    ebp,eax
640104a6:	jmp    0x6401090c
640104ab:	movzx  eax,BYTE PTR [edi]
640104ae:	cdq    
640104af:	shld   edx,eax,0x8
640104b3:	shl    eax,0x8
640104b6:	mov    ecx,eax
640104b8:	movzx  eax,BYTE PTR [edi+0x1]
640104bc:	mov    esi,edx
640104be:	cdq    
640104bf:	or     ecx,eax
640104c1:	movzx  eax,BYTE PTR [edi+0x2]
640104c5:	or     esi,edx
640104c7:	shld   esi,ecx,0x8
640104cb:	shl    ecx,0x8
640104ce:	cdq    
640104cf:	or     ecx,eax
640104d1:	movzx  eax,BYTE PTR [edi+0x3]
640104d5:	or     esi,edx
640104d7:	shld   esi,ecx,0x8
640104db:	shl    ecx,0x8
640104de:	cdq    
640104df:	or     ecx,eax
640104e1:	movzx  eax,BYTE PTR [edi+0x4]
640104e5:	or     esi,edx
640104e7:	shld   esi,ecx,0x8
640104eb:	shl    ecx,0x8
640104ee:	cdq    
640104ef:	or     ecx,eax
640104f1:	movzx  eax,BYTE PTR [edi+0x5]
640104f5:	or     esi,edx
640104f7:	shld   esi,ecx,0x8
640104fb:	shl    ecx,0x8
640104fe:	cdq    
640104ff:	or     ecx,eax
64010501:	movzx  eax,BYTE PTR [edi+0x6]
64010505:	or     esi,edx
64010507:	shld   esi,ecx,0x8
6401050b:	cdq    
6401050c:	shl    ecx,0x8
6401050f:	or     ecx,eax
64010511:	movzx  eax,BYTE PTR [edi+0x7]
64010515:	or     esi,edx
64010517:	mov    ebp,ecx
64010519:	mov    ecx,esi
6401051b:	shld   ecx,ebp,0x8
6401051f:	cdq    
64010520:	shl    ebp,0x8
64010523:	or     ebp,eax
64010525:	mov    ebx,0x2
6401052a:	or     ecx,edx
6401052c:	jmp    0x64010908
64010531:	mov    al,BYTE PTR [edi]
64010533:	jmp    0x64010242
64010538:	xor    edx,edx
6401053a:	mov    dh,BYTE PTR [edi]
6401053c:	mov    dl,BYTE PTR [edi+0x1]
6401053f:	movzx  eax,dx
64010542:	test   ax,ax
64010545:	movsx  eax,ax
64010548:	jmp    0x64010247
6401054d:	movzx  ecx,BYTE PTR [edi+0x2]
64010551:	movzx  edx,BYTE PTR [edi+0x3]
64010555:	xor    eax,eax
64010557:	mov    ah,BYTE PTR [edi]
64010559:	mov    al,BYTE PTR [edi+0x1]
6401055c:	shl    eax,0x8
6401055f:	or     eax,ecx
64010561:	shl    eax,0x8
64010564:	or     eax,edx
64010566:	jmp    0x64010247
6401056b:	mov    ebx,0x3
64010570:	jmp    0x64010910
64010575:	movzx  eax,BYTE PTR [edi]
64010578:	cdq    
64010579:	shld   edx,eax,0x8
6401057d:	shl    eax,0x8
64010580:	mov    ecx,eax
64010582:	movzx  eax,BYTE PTR [edi+0x1]
64010586:	mov    esi,edx
64010588:	cdq    
64010589:	or     ecx,eax
6401058b:	movzx  eax,BYTE PTR [edi+0x2]
6401058f:	or     esi,edx
64010591:	shld   esi,ecx,0x8
64010595:	shl    ecx,0x8
64010598:	cdq    
64010599:	or     ecx,eax
6401059b:	movzx  eax,BYTE PTR [edi+0x3]
6401059f:	or     esi,edx
640105a1:	shld   esi,ecx,0x8
640105a5:	shl    ecx,0x8
640105a8:	cdq    
640105a9:	or     ecx,eax
640105ab:	movzx  eax,BYTE PTR [edi+0x4]
640105af:	or     esi,edx
640105b1:	shld   esi,ecx,0x8
640105b5:	shl    ecx,0x8
640105b8:	cdq    
640105b9:	or     ecx,eax
640105bb:	movzx  eax,BYTE PTR [edi+0x5]
640105bf:	or     esi,edx
640105c1:	shld   esi,ecx,0x8
640105c5:	shl    ecx,0x8
640105c8:	cdq    
640105c9:	or     ecx,eax
640105cb:	movzx  eax,BYTE PTR [edi+0x6]
640105cf:	or     esi,edx
640105d1:	shld   esi,ecx,0x8
640105d5:	cdq    
640105d6:	shl    ecx,0x8
640105d9:	or     ecx,eax
640105db:	movzx  eax,BYTE PTR [edi+0x7]
640105df:	or     esi,edx
640105e1:	mov    ebp,ecx
640105e3:	mov    ecx,esi
640105e5:	shld   ecx,ebp,0x8
640105e9:	cdq    
640105ea:	shl    ebp,0x8
640105ed:	or     ebp,eax
640105ef:	or     ecx,edx
640105f1:	jl     0x64010603
640105f3:	jg     0x640105f9
640105f5:	test   ebp,ebp
640105f7:	jb     0x64010603
640105f9:	mov    ebx,0x2
640105fe:	jmp    0x64010908
64010603:	mov    ebx,0x3
64010608:	jmp    0x64010908
6401060d:	mov    edx,DWORD PTR [esp+0x58]
64010611:	mov    ebx,0x5
64010616:	mov    DWORD PTR [esp+0x3c],edi
6401061a:	mov    ebp,esi
6401061c:	mov    BYTE PTR [edx+0x4],0x1
64010620:	jmp    0x6401090c
64010625:	cmp    DWORD PTR [esp+0x60],0x20
6401062a:	jae    0x64010a85
64010630:	mov    eax,DWORD PTR [esp+0x60]
64010634:	mov    ecx,DWORD PTR [esp+0x58]
64010638:	lea    eax,[eax+eax*4]
6401063b:	lea    esi,[ecx+eax*8+0x18]
6401063f:	xor    eax,eax
64010641:	mov    ah,BYTE PTR [edi]
64010643:	mov    al,BYTE PTR [edi+0x1]
64010646:	mov    DWORD PTR [esi],0x6
6401064c:	mov    DWORD PTR [esi+0x8],0x0
64010653:	mov    ebx,DWORD PTR [ecx]
64010655:	shl    eax,0x4
64010658:	call   0x64010100
6401065d:	test   eax,eax
6401065f:	mov    DWORD PTR [esi+0xc],eax
64010662:	je     0x64010a85
64010668:	xor    ecx,ecx
6401066a:	mov    ch,BYTE PTR [edi]
6401066c:	mov    cl,BYTE PTR [edi+0x1]
6401066f:	test   cx,cx
64010672:	jne    0x64010689
64010674:	mov    edx,DWORD PTR [esi+0x4]
64010677:	mov    ebx,DWORD PTR [esi]
64010679:	mov    ebp,DWORD PTR [esi+0x8]
6401067c:	mov    DWORD PTR [esp+0x34],edx
64010680:	mov    DWORD PTR [esp+0x3c],eax
64010684:	jmp    0x6401090c
64010689:	xor    ecx,ecx
6401068b:	add    DWORD PTR [esp+0x60],0x1
64010690:	mov    DWORD PTR [esi+0x14],0x0
64010697:	mov    ch,BYTE PTR [edi]
64010699:	mov    cl,BYTE PTR [edi+0x1]
6401069c:	mov    DWORD PTR [esi+0x10],ecx
6401069f:	jmp    0x64010a3a
640106a4:	cmp    DWORD PTR [esp+0x60],0x20
640106a9:	jae    0x64010a85
640106af:	mov    eax,DWORD PTR [esp+0x60]
640106b3:	mov    ecx,DWORD PTR [esp+0x58]
640106b7:	lea    edx,[eax+eax*4]
640106ba:	xor    eax,eax
640106bc:	mov    ah,BYTE PTR [edi]
640106be:	lea    esi,[ecx+edx*8+0x18]
640106c2:	movzx  edx,BYTE PTR [edi+0x2]
640106c6:	mov    al,BYTE PTR [edi+0x1]
640106c9:	shl    eax,0x8
640106cc:	or     eax,edx
640106ce:	movzx  edx,BYTE PTR [edi+0x3]
640106d2:	shl    eax,0x8
640106d5:	or     eax,edx
640106d7:	mov    DWORD PTR [esi],0x6
640106dd:	mov    DWORD PTR [esi+0x8],0x0
640106e4:	mov    ebx,DWORD PTR [ecx]
640106e6:	shl    eax,0x4
640106e9:	call   0x64010100
640106ee:	test   eax,eax
640106f0:	mov    DWORD PTR [esi+0xc],eax
640106f3:	je     0x64010a85
640106f9:	movzx  ecx,BYTE PTR [edi+0x2]
640106fd:	movzx  edx,BYTE PTR [edi+0x3]
64010701:	xor    eax,eax
64010703:	mov    ah,BYTE PTR [edi]
64010705:	mov    al,BYTE PTR [edi+0x1]
64010708:	shl    eax,0x8
6401070b:	or     eax,ecx
6401070d:	shl    eax,0x8
64010710:	or     eax,edx
64010712:	je     0x640108f9
64010718:	xor    edx,edx
6401071a:	mov    DWORD PTR [esi+0x14],0x0
64010721:	mov    dh,BYTE PTR [edi]
64010723:	movzx  eax,BYTE PTR [edi+0x2]
64010727:	movzx  ecx,BYTE PTR [edi+0x3]
6401072b:	mov    dl,BYTE PTR [edi+0x1]
6401072e:	shl    edx,0x8
64010731:	or     edx,eax
64010733:	shl    edx,0x8
64010736:	or     edx,ecx
64010738:	add    DWORD PTR [esp+0x60],0x1
6401073d:	jmp    0x64010a37
64010742:	cmp    DWORD PTR [esp+0x60],0x20
64010747:	jae    0x64010a85
6401074d:	mov    eax,DWORD PTR [esp+0x60]
64010751:	mov    ecx,DWORD PTR [esp+0x58]
64010755:	lea    edx,[eax+eax*4]
64010758:	xor    eax,eax
6401075a:	mov    ah,BYTE PTR [edi]
6401075c:	lea    esi,[ecx+edx*8+0x18]
64010760:	mov    al,BYTE PTR [edi+0x1]
64010763:	mov    DWORD PTR [esi],0x7
64010769:	mov    DWORD PTR [esi+0x8],0x0
64010770:	mov    ebx,DWORD PTR [ecx]
64010772:	shl    eax,0x5
64010775:	call   0x64010100
6401077a:	test   eax,eax
6401077c:	mov    DWORD PTR [esi+0xc],eax
6401077f:	je     0x64010a85
64010785:	xor    eax,eax
64010787:	mov    ah,BYTE PTR [edi]
64010789:	mov    al,BYTE PTR [edi+0x1]
6401078c:	test   ax,ax
6401078f:	jne    0x640107a9
64010791:	mov    ecx,DWORD PTR [esi+0x4]
64010794:	mov    edx,DWORD PTR [esi+0xc]
64010797:	mov    ebx,DWORD PTR [esi]
64010799:	mov    ebp,DWORD PTR [esi+0x8]
6401079c:	mov    DWORD PTR [esp+0x34],ecx
640107a0:	mov    DWORD PTR [esp+0x3c],edx
640107a4:	jmp    0x6401090c
640107a9:	xor    ecx,ecx
640107ab:	mov    eax,0x1
640107b0:	add    DWORD PTR [esp+0x60],eax
640107b4:	mov    DWORD PTR [esi+0x14],eax
640107b7:	mov    ch,BYTE PTR [edi]
640107b9:	mov    cl,BYTE PTR [edi+0x1]
640107bc:	mov    DWORD PTR [esi+0x10],ecx
640107bf:	jmp    0x64010a3a
640107c4:	cmp    DWORD PTR [esp+0x60],0x20
640107c9:	jae    0x64010a85
640107cf:	mov    eax,DWORD PTR [esp+0x60]
640107d3:	mov    ecx,DWORD PTR [esp+0x58]
640107d7:	lea    edx,[eax+eax*4]
640107da:	xor    eax,eax
640107dc:	mov    ah,BYTE PTR [edi]
640107de:	lea    esi,[ecx+edx*8+0x18]
640107e2:	movzx  edx,BYTE PTR [edi+0x2]
640107e6:	mov    al,BYTE PTR [edi+0x1]
640107e9:	shl    eax,0x8
640107ec:	or     eax,edx
640107ee:	movzx  edx,BYTE PTR [edi+0x3]
640107f2:	shl    eax,0x8
640107f5:	or     eax,edx
640107f7:	mov    DWORD PTR [esi],0x7
640107fd:	mov    DWORD PTR [esi+0x8],0x0
64010804:	mov    ebx,DWORD PTR [ecx]
64010806:	shl    eax,0x5
64010809:	call   0x64010100
6401080e:	test   eax,eax
64010810:	mov    DWORD PTR [esi+0xc],eax
64010813:	je     0x64010a85
64010819:	movzx  ecx,BYTE PTR [edi+0x2]
6401081d:	movzx  edx,BYTE PTR [edi+0x3]
64010821:	xor    eax,eax
64010823:	mov    ah,BYTE PTR [edi]
64010825:	mov    al,BYTE PTR [edi+0x1]
64010828:	shl    eax,0x8
6401082b:	or     eax,ecx
6401082d:	shl    eax,0x8
64010830:	or     eax,edx
64010832:	je     0x640108f9
64010838:	xor    edx,edx
6401083a:	mov    eax,0x1
6401083f:	mov    DWORD PTR [esi+0x14],eax
64010842:	mov    dh,BYTE PTR [edi]
64010844:	movzx  ecx,BYTE PTR [edi+0x2]
64010848:	mov    dl,BYTE PTR [edi+0x1]
6401084b:	shl    edx,0x8
6401084e:	or     edx,ecx
64010850:	movzx  ecx,BYTE PTR [edi+0x3]
64010854:	shl    edx,0x8
64010857:	or     edx,ecx
64010859:	add    DWORD PTR [esp+0x60],eax
6401085d:	jmp    0x64010a37
64010862:	cmp    al,0x90
64010864:	jb     0x640108b3
64010866:	cmp    al,0x9f
64010868:	ja     0x640108b3
6401086a:	cmp    DWORD PTR [esp+0x60],ecx
6401086e:	jae    0x64010a85
64010874:	mov    ecx,DWORD PTR [esp+0x60]
64010878:	lea    edx,[ecx+ecx*4]
6401087b:	mov    ecx,DWORD PTR [esp+0x58]
6401087f:	lea    esi,[ecx+edx*8+0x18]
64010883:	and    eax,0xf
64010886:	call   0x64010160
6401088b:	test   eax,eax
6401088d:	jl     0x64010a85
64010893:	mov    eax,DWORD PTR [esp+0x14]
64010897:	test   BYTE PTR [eax],0xf
6401089a:	je     0x640108f9
6401089c:	mov    DWORD PTR [esi+0x14],0x0
640108a3:	movzx  edx,BYTE PTR [eax]
640108a6:	and    edx,0xf
640108a9:	add    DWORD PTR [esp+0x60],0x1
640108ae:	jmp    0x64010a37
640108b3:	cmp    al,0x80
640108b5:	jb     0x64010a85
640108bb:	cmp    al,0x8f
640108bd:	ja     0x64010a85
640108c3:	cmp    DWORD PTR [esp+0x60],ecx
640108c7:	jae    0x64010a85
640108cd:	mov    ecx,DWORD PTR [esp+0x60]
640108d1:	lea    edx,[ecx+ecx*4]
640108d4:	mov    ecx,DWORD PTR [esp+0x58]
640108d8:	lea    esi,[ecx+edx*8+0x18]
640108dc:	and    eax,0xf
640108df:	call   0x64010190
640108e4:	test   eax,eax
640108e6:	jl     0x64010a85
640108ec:	mov    eax,DWORD PTR [esp+0x14]
640108f0:	test   BYTE PTR [eax],0xf
640108f3:	jne    0x64010a25
640108f9:	mov    eax,DWORD PTR [esi+0x4]
640108fc:	mov    ecx,DWORD PTR [esi+0xc]
640108ff:	mov    ebp,DWORD PTR [esi+0x8]
64010902:	mov    ebx,DWORD PTR [esi]
64010904:	mov    DWORD PTR [esp+0x34],eax
64010908:	mov    DWORD PTR [esp+0x3c],ecx
6401090c:	mov    DWORD PTR [esp+0x38],ebp
64010910:	mov    eax,DWORD PTR [esp+0x60]
64010914:	lea    edx,[eax+eax*4]
64010917:	mov    eax,DWORD PTR [esp+0x58]
6401091b:	lea    edx,[eax+edx*8+0x18]
6401091f:	lea    eax,[edx-0x28]
64010922:	add    edx,0xfffffff0
64010925:	mov    esi,0x1
6401092a:	lea    ebx,[ebx+0x0]
64010930:	cmp    DWORD PTR [esp+0x60],0x0
64010935:	je     0x64010a61
6401093b:	mov    ecx,DWORD PTR [eax+0x14]
6401093e:	sub    ecx,0x0
64010941:	je     0x640109bd
64010943:	sub    ecx,esi
64010945:	je     0x64010a08
6401094b:	sub    ecx,esi
6401094d:	jne    0x64010a85
64010953:	mov    ecx,DWORD PTR [edx+0x4]
64010956:	mov    esi,DWORD PTR [edx]
64010958:	mov    DWORD PTR [esp+0x44],ecx
6401095c:	mov    ecx,DWORD PTR [edx+0x8]
6401095f:	mov    DWORD PTR [esp+0x48],ecx
64010963:	mov    ecx,DWORD PTR [edx+0xc]
64010966:	mov    DWORD PTR [esp+0x4c],ecx
6401096a:	mov    ecx,DWORD PTR [eax+0x8]
6401096d:	shl    ecx,0x5
64010970:	add    ecx,DWORD PTR [eax+0xc]
64010973:	mov    DWORD PTR [ecx],esi
64010975:	mov    esi,DWORD PTR [esp+0x44]
64010979:	mov    DWORD PTR [ecx+0x4],esi
6401097c:	mov    esi,DWORD PTR [esp+0x48]
64010980:	mov    DWORD PTR [ecx+0x8],esi
64010983:	mov    esi,DWORD PTR [esp+0x4c]
64010987:	mov    DWORD PTR [ecx+0xc],esi
6401098a:	mov    ecx,DWORD PTR [eax+0x8]
6401098d:	mov    esi,DWORD PTR [eax+0xc]
64010990:	shl    ecx,0x5
64010993:	lea    ecx,[ecx+esi*1+0x10]
64010997:	mov    esi,DWORD PTR [esp+0x34]
6401099b:	mov    DWORD PTR [ecx],ebx
6401099d:	mov    DWORD PTR [ecx+0x4],esi
640109a0:	mov    esi,DWORD PTR [esp+0x3c]
640109a4:	mov    DWORD PTR [ecx+0x8],ebp
640109a7:	mov    DWORD PTR [ecx+0xc],esi
640109aa:	mov    esi,0x1
640109af:	add    DWORD PTR [eax+0x8],esi
640109b2:	add    DWORD PTR [eax+0x10],0xffffffff
640109b6:	je     0x640109e2
640109b8:	mov    DWORD PTR [eax+0x14],esi
640109bb:	jmp    0x64010a3a
640109bd:	mov    ecx,DWORD PTR [eax+0x8]
640109c0:	shl    ecx,0x4
640109c3:	add    ecx,DWORD PTR [eax+0xc]
640109c6:	mov    DWORD PTR [ecx],ebx
640109c8:	mov    ebx,DWORD PTR [esp+0x34]
640109cc:	mov    DWORD PTR [ecx+0x4],ebx
640109cf:	mov    ebx,DWORD PTR [esp+0x3c]
640109d3:	mov    DWORD PTR [ecx+0x8],ebp
640109d6:	mov    DWORD PTR [ecx+0xc],ebx
640109d9:	add    DWORD PTR [eax+0x8],esi
640109dc:	add    DWORD PTR [eax+0x10],0xffffffff
640109e0:	jne    0x64010a3a
640109e2:	mov    ecx,DWORD PTR [eax+0x4]
640109e5:	mov    ebp,DWORD PTR [eax+0x8]
640109e8:	mov    ebx,DWORD PTR [eax]
640109ea:	sub    DWORD PTR [esp+0x60],esi
640109ee:	mov    DWORD PTR [esp+0x34],ecx
640109f2:	mov    ecx,DWORD PTR [eax+0xc]
640109f5:	sub    eax,0x28
640109f8:	mov    DWORD PTR [esp+0x38],ebp
640109fc:	mov    DWORD PTR [esp+0x3c],ecx
64010a00:	sub    edx,0x28
64010a03:	jmp    0x64010930
64010a08:	mov    edx,DWORD PTR [esp+0x34]
64010a0c:	mov    ecx,DWORD PTR [esp+0x3c]
64010a10:	mov    DWORD PTR [eax+0x18],ebx
64010a13:	mov    DWORD PTR [eax+0x1c],edx
64010a16:	mov    DWORD PTR [eax+0x20],ebp
64010a19:	mov    DWORD PTR [eax+0x24],ecx
64010a1c:	mov    DWORD PTR [eax+0x14],0x2
64010a23:	jmp    0x64010a3a
64010a25:	mov    ecx,0x1
64010a2a:	mov    DWORD PTR [esi+0x14],ecx
64010a2d:	movzx  edx,BYTE PTR [eax]
64010a30:	and    edx,0xf
64010a33:	add    DWORD PTR [esp+0x60],ecx
64010a37:	mov    DWORD PTR [esi+0x10],edx
64010a3a:	mov    eax,DWORD PTR [esp+0x14]
64010a3e:	add    eax,0x1
64010a41:	cmp    eax,DWORD PTR [esp+0x20]
64010a45:	mov    DWORD PTR [esp+0x18],0x0
64010a4d:	mov    DWORD PTR [esp+0x14],eax
64010a51:	je     0x64010a81
64010a53:	mov    edx,DWORD PTR [esp+0x20]
64010a57:	mov    ecx,0x20
64010a5c:	jmp    0x64010210
64010a61:	mov    eax,DWORD PTR [esp+0x58]
64010a65:	mov    ecx,DWORD PTR [esp+0x34]
64010a69:	mov    edx,DWORD PTR [esp+0x3c]
64010a6d:	add    DWORD PTR [esp+0x14],esi
64010a71:	mov    DWORD PTR [eax+0x18],ebx
64010a74:	mov    DWORD PTR [eax+0x1c],ecx
64010a77:	mov    DWORD PTR [eax+0x20],ebp
64010a7a:	mov    DWORD PTR [eax+0x24],edx
64010a7d:	mov    eax,esi
64010a7f:	jmp    0x64010a88
64010a81:	xor    eax,eax
64010a83:	jmp    0x64010a88
64010a85:	or     eax,0xffffffff
64010a88:	mov    ecx,DWORD PTR [esp+0x58]
64010a8c:	mov    edx,DWORD PTR [esp+0x18]
64010a90:	mov    DWORD PTR [ecx+0x8],edx
64010a93:	mov    edx,DWORD PTR [esp+0x1c]
64010a97:	mov    DWORD PTR [ecx+0xc],edx
64010a9a:	mov    edx,DWORD PTR [esp+0x60]
64010a9e:	mov    DWORD PTR [ecx+0x10],edx
64010aa1:	mov    ecx,DWORD PTR [esp+0x14]
64010aa5:	sub    ecx,DWORD PTR [esp+0x5c]
64010aa9:	mov    edx,DWORD PTR [esp+0x64]
64010aad:	pop    edi
64010aae:	pop    esi
64010aaf:	pop    ebp
64010ab0:	mov    DWORD PTR [edx],ecx
64010ab2:	pop    ebx
64010ab3:	add    esp,0x44
64010ab6:	ret    
64010ab7:	nop
64010ab8:	xchg   edx,eax
64010ab9:	add    al,BYTE PTR [ecx]
64010abb:	fs cdq 
64010abd:	add    al,BYTE PTR [ecx]
64010abf:	lods   al,BYTE PTR fs:[esi]
64010ac1:	add    al,BYTE PTR [ecx]
64010ac3:	fs mov esi,0xde640102
64010ac9:	add    al,BYTE PTR [ecx]
64010acb:	test   DWORD PTR fs:[edx],ecx
64010ace:	add    DWORD PTR [eax+eax*1+0x5],esp
64010ad2:	add    DWORD PTR [edx],eax
64010ad4:	add    eax,0x5050505
64010ad9:	add    eax,0x3030303
64010ade:	add    eax,DWORD PTR [ebx]
64010ae0:	add    eax,DWORD PTR [ebx]
64010ae2:	add    eax,DWORD PTR [ebx]
64010ae4:	add    eax,0x5050505
64010ae9:	add    eax,0x4040404
64010aee:	add    al,0x4
64010af0:	xchg   BYTE PTR [ebx],al
64010af2:	add    DWORD PTR [ecx+edi*4+0x3],esp
64010af6:	add    DWORD PTR [edi+ecx*2+0x4],esp
64010afa:	add    DWORD PTR [ebx+eiz*2+0x4],esp
64010afe:	add    DWORD PTR [esi+edi*2+0x4],esp
64010b02:	add    DWORD PTR [ebx+ebp*4+0x4],esp
64010b06:	add    DWORD PTR [ecx+esi*1+0x5],esp
64010b0a:	add    DWORD PTR [eax+edi*1+0x5],esp
64010b0e:	add    DWORD PTR [ebp+ecx*2+0x5],esp
64010b12:	add    DWORD PTR [ebp+esi*2+0x5],esp
64010b16:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b1a:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b1e:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b22:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b26:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b2a:	add    DWORD PTR [ebp+eax*4+0xa],esp
64010b2e:	add    DWORD PTR [esp+ebx*2+0x3],esp
64010b32:	add    DWORD PTR [ecx+ebp*2+0x3],esp
64010b36:	add    DWORD PTR [ebp+eiz*1+0x6],esp
64010b3a:	add    DWORD PTR [esp+eiz*4+0x6],esp
64010b3e:	add    DWORD PTR [edx+eax*2+0x7],esp
64010b42:	add    DWORD PTR [esp+eax*8+0x7],esp
64010b46:	add    DWORD PTR [ebp+ecx*1+0x6],esp
64010b4a:	add    DWORD PTR [esp+ecx*8-0x34],esp
64010b4e:	int3   
64010b4f:	int3   
64010b50:	push   ebp
64010b51:	mov    ebp,esp
64010b53:	and    esp,0xfffffff8
64010b56:	sub    esp,0x51c
64010b5c:	push   ebx
64010b5d:	push   esi
64010b5e:	mov    esi,DWORD PTR [ebp+0x10]
64010b61:	xor    ebx,ebx
64010b63:	xor    eax,eax
64010b65:	cmp    esi,ebx
64010b67:	push   edi
64010b68:	mov    DWORD PTR [esp+0xc],eax
64010b6c:	je     0x64010b74
64010b6e:	mov    eax,DWORD PTR [esi]
64010b70:	mov    DWORD PTR [esp+0xc],eax
64010b74:	mov    edi,DWORD PTR [ebp+0xc]
64010b77:	cmp    edi,eax
64010b79:	ja     0x64010b84
64010b7b:	xor    eax,eax
64010b7d:	pop    edi
64010b7e:	pop    esi
64010b7f:	pop    ebx
64010b80:	mov    esp,ebp
64010b82:	pop    ebp
64010b83:	ret    
64010b84:	mov    edx,DWORD PTR [ebp+0x8]
64010b87:	xor    eax,eax
64010b89:	lea    ecx,[esp+0xc]
64010b8d:	push   ecx
64010b8e:	mov    DWORD PTR [esp+0x2c],eax
64010b92:	mov    DWORD PTR [esp+0x30],eax
64010b96:	mov    DWORD PTR [esp+0x34],eax
64010b9a:	mov    DWORD PTR [esp+0x38],eax
64010b9e:	mov    eax,DWORD PTR [ebp+0x14]
64010ba1:	push   edi
64010ba2:	mov    DWORD PTR [esp+0x18],eax
64010ba6:	push   edx
64010ba7:	lea    eax,[esp+0x1c]
64010bab:	push   eax
64010bac:	mov    DWORD PTR [esp+0x28],ebx
64010bb0:	mov    DWORD PTR [esp+0x2c],ebx
64010bb4:	mov    DWORD PTR [esp+0x30],ebx
64010bb8:	mov    BYTE PTR [esp+0x24],bl
64010bbc:	call   0x640101c0
64010bc1:	add    esp,0x10
64010bc4:	cmp    eax,ebx
64010bc6:	jge    0x64010bd2
64010bc8:	or     eax,0xffffffff
64010bcb:	pop    edi
64010bcc:	pop    esi
64010bcd:	pop    ebx
64010bce:	mov    esp,ebp
64010bd0:	pop    ebp
64010bd1:	ret    
64010bd2:	cmp    esi,ebx
64010bd4:	mov    ecx,DWORD PTR [esp+0xc]
64010bd8:	je     0x64010bdc
64010bda:	mov    DWORD PTR [esi],ecx
64010bdc:	cmp    eax,ebx
64010bde:	je     0x64010b7b
64010be0:	mov    eax,DWORD PTR [ebp+0x18]
64010be3:	mov    edx,DWORD PTR [esp+0x28]
64010be7:	mov    DWORD PTR [eax],edx
64010be9:	mov    edx,DWORD PTR [esp+0x2c]
64010bed:	mov    DWORD PTR [eax+0x4],edx
64010bf0:	mov    edx,DWORD PTR [esp+0x30]
64010bf4:	mov    DWORD PTR [eax+0x8],edx
64010bf7:	mov    edx,DWORD PTR [esp+0x34]
64010bfb:	cmp    ecx,edi
64010bfd:	pop    edi
64010bfe:	mov    DWORD PTR [eax+0xc],edx
64010c01:	sbb    eax,eax
64010c03:	pop    esi
64010c04:	add    eax,0x2
64010c07:	pop    ebx
64010c08:	mov    esp,ebp
64010c0a:	pop    ebp
64010c0b:	ret    
64010c0c:	int3   
64010c0d:	int3   
64010c0e:	int3   
64010c0f:	int3   
64010c10:	mov    eax,DWORD PTR [esp+0x8]
64010c14:	sub    eax,0x1
64010c17:	jne    0x64010c22
64010c19:	mov    eax,DWORD PTR [esp+0x4]
64010c1d:	mov    ds:0x640304a4,eax
64010c22:	mov    eax,0x1
64010c27:	ret    0xc
64010c2a:	int3   
64010c2b:	int3   
64010c2c:	int3   
64010c2d:	int3   
64010c2e:	int3   
64010c2f:	int3   
64010c30:	cmp    BYTE PTR ds:0x640304a0,0x0
64010c37:	jne    0x64010c96
64010c39:	push   esi
64010c3a:	push   edi
64010c3b:	push   0x640263bc
64010c40:	mov    BYTE PTR ds:0x640304a0,0x1
64010c47:	call   DWORD PTR ds:0x64026018
64010c4d:	push   0x64026390
64010c52:	push   0xb
64010c54:	push   0x64026384
64010c59:	mov    esi,eax
64010c5b:	call   0x64006840
64010c60:	mov    edi,DWORD PTR ds:0x64026014
64010c66:	add    esp,0xc
64010c69:	push   eax
64010c6a:	push   esi
64010c6b:	call   edi
64010c6d:	push   0x6402634c
64010c72:	push   0x19
64010c74:	push   0x64026330
64010c79:	mov    ds:0x64030498,eax
64010c7e:	call   0x64006840
64010c83:	add    esp,0xc
64010c86:	push   eax
64010c87:	push   esi
64010c88:	call   edi
64010c8a:	pop    edi
64010c8b:	mov    ds:0x6403049c,eax
64010c90:	pop    esi
64010c91:	jmp    0x640130b0
64010c96:	ret    
64010c97:	int3   
64010c98:	int3   
64010c99:	int3   
64010c9a:	int3   
64010c9b:	int3   
64010c9c:	int3   
64010c9d:	int3   
64010c9e:	int3   
64010c9f:	int3   
64010ca0:	call   0x64010c30
64010ca5:	mov    eax,ds:0x64030498
64010caa:	test   eax,eax
64010cac:	je     0x64010cb0
64010cae:	jmp    eax
64010cb0:	ret    0x8
64010cb3:	int3   
64010cb4:	int3   
64010cb5:	int3   
64010cb6:	int3   
64010cb7:	int3   
64010cb8:	int3   
64010cb9:	int3   
64010cba:	int3   
64010cbb:	int3   
64010cbc:	int3   
64010cbd:	int3   
64010cbe:	int3   
64010cbf:	int3   
64010cc0:	call   0x64010c30
64010cc5:	mov    eax,ds:0x6403049c
64010cca:	test   eax,eax
64010ccc:	je     0x64010cd0
64010cce:	jmp    eax
64010cd0:	ret    0x4
64010cd3:	int3   
64010cd4:	int3   
64010cd5:	int3   
64010cd6:	int3   
64010cd7:	int3   
64010cd8:	int3   
64010cd9:	int3   
64010cda:	int3   
64010cdb:	int3   
64010cdc:	int3   
64010cdd:	int3   
64010cde:	int3   
64010cdf:	int3   
64010ce0:	mov    eax,DWORD PTR [esp+0x4]
64010ce4:	mov    edx,DWORD PTR [ecx]
64010ce6:	mov    DWORD PTR [eax],edx
64010ce8:	mov    edx,DWORD PTR [ecx+0x4]
64010ceb:	mov    DWORD PTR [eax+0x4],edx
64010cee:	mov    edx,DWORD PTR [ecx+0x8]
64010cf1:	mov    ecx,DWORD PTR [ecx+0xc]
64010cf4:	mov    DWORD PTR [eax+0x8],edx
64010cf7:	mov    DWORD PTR [eax+0xc],ecx
64010cfa:	ret    0x4
64010cfd:	int3   
64010cfe:	int3   
64010cff:	int3   
64010d00:	jmp    0x6401387f
64010d05:	int3   
64010d06:	int3   
64010d07:	int3   
64010d08:	int3   
64010d09:	int3   
64010d0a:	int3   
64010d0b:	int3   
64010d0c:	int3   
64010d0d:	int3   
64010d0e:	int3   
64010d0f:	int3   
64010d10:	push   esi
64010d11:	mov    esi,ecx
64010d13:	call   0x6401387f
64010d18:	test   BYTE PTR [esp+0x8],0x1
64010d1d:	je     0x64010d28
64010d1f:	push   esi
64010d20:	call   0x64013712
64010d25:	add    esp,0x4
64010d28:	mov    eax,esi
64010d2a:	pop    esi
64010d2b:	ret    0x4
64010d2e:	int3   
64010d2f:	int3   
64010d30:	sub    esp,0x804
64010d36:	mov    eax,ds:0x6402f09c
64010d3b:	xor    eax,esp
64010d3d:	mov    DWORD PTR [esp+0x800],eax
64010d44:	call   DWORD PTR ds:0x6402604c
64010d4a:	and    eax,0xff
64010d4f:	cmp    eax,0x5
64010d52:	jb     0x64010d65
64010d54:	push   0x64026428
64010d59:	push   0x400
64010d5e:	lea    eax,[esp+0x8]
64010d62:	push   eax
64010d63:	jmp    0x64010d74
64010d65:	push   0x6402641c
64010d6a:	push   0x400
64010d6f:	lea    ecx,[esp+0x8]
64010d73:	push   ecx
64010d74:	call   0x64014410
64010d79:	add    esp,0xc
64010d7c:	push   0x6402640c
64010d81:	lea    edx,[esp+0x4]
64010d85:	push   0x400
64010d8a:	push   edx
64010d8b:	call   0x64014396
64010d90:	add    esp,0xc
64010d93:	push   0x0
64010d95:	push   0x80
64010d9a:	push   0x3
64010d9c:	push   0x0
64010d9e:	push   0x0
64010da0:	lea    eax,[esp+0x14]
64010da4:	push   0xc0000000
64010da9:	push   eax
64010daa:	call   0x6400e1c0
64010daf:	call   eax
64010db1:	cmp    eax,0xffffffff
64010db4:	jne    0x64010dd7
64010db6:	call   DWORD PTR ds:0x64026044
64010dbc:	cmp    eax,0x20
64010dbf:	sete   al
64010dc2:	mov    ecx,DWORD PTR [esp+0x800]
64010dc9:	xor    ecx,esp
64010dcb:	call   0x64013f6c
64010dd0:	add    esp,0x804
64010dd6:	ret    
64010dd7:	push   eax
64010dd8:	call   DWORD PTR ds:0x64026040
64010dde:	mov    ecx,DWORD PTR [esp+0x800]
64010de5:	xor    ecx,esp
64010de7:	mov    al,0x1
64010de9:	call   0x64013f6c
64010dee:	add    esp,0x804
64010df4:	ret    
64010df5:	int3   
64010df6:	int3   
64010df7:	int3   
64010df8:	int3   
64010df9:	int3   
64010dfa:	int3   
64010dfb:	int3   
64010dfc:	int3   
64010dfd:	int3   
64010dfe:	int3   
64010dff:	int3   
64010e00:	push   ebx
64010e01:	mov    ebx,DWORD PTR ds:0x64026050
64010e07:	push   esi
64010e08:	push   edi
64010e09:	mov    edi,DWORD PTR [esp+0x10]
64010e0d:	xor    esi,esi
64010e0f:	nop
64010e10:	lea    eax,[esp+0x10]
64010e14:	push   0x0
64010e16:	push   eax
64010e17:	mov    DWORD PTR [esp+0x18],0x0
64010e1f:	call   0x6400ed20
64010e24:	call   eax
64010e26:	test   eax,eax
64010e28:	je     0x64010e39
64010e2a:	cmp    edi,0xffffffff
64010e2d:	je     0x64010e39
64010e2f:	add    esi,0x3e8
64010e35:	cmp    esi,edi
64010e37:	ja     0x64010e42
64010e39:	push   0x3e8
64010e3e:	call   ebx
64010e40:	jmp    0x64010e10
64010e42:	pop    edi
64010e43:	pop    esi
64010e44:	mov    al,0x1
64010e46:	pop    ebx
64010e47:	ret    
64010e48:	int3   
64010e49:	int3   
64010e4a:	int3   
64010e4b:	int3   
64010e4c:	int3   
64010e4d:	int3   
64010e4e:	int3   
64010e4f:	int3   
64010e50:	mov    ecx,DWORD PTR [esp+0x4]
64010e54:	sub    esp,0xc
64010e57:	test   ecx,ecx
64010e59:	ja     0x64010e71
64010e5b:	xor    ecx,ecx
64010e5d:	lea    edx,[ecx*4+0x0]
64010e64:	push   edx
64010e65:	call   0x64013af1
64010e6a:	add    esp,0x4
64010e6d:	add    esp,0xc
64010e70:	ret    
64010e71:	or     eax,0xffffffff
64010e74:	xor    edx,edx
64010e76:	div    ecx
64010e78:	cmp    eax,0x4
64010e7b:	jae    0x64010e5d
64010e7d:	lea    eax,[esp+0x10]
64010e81:	push   eax
64010e82:	lea    ecx,[esp+0x4]
64010e86:	mov    DWORD PTR [esp+0x14],0x0
64010e8e:	call   0x6401376d
64010e93:	push   0x6402c874
64010e98:	lea    ecx,[esp+0x4]
64010e9c:	push   ecx
64010e9d:	mov    DWORD PTR [esp+0x8],0x64026304
64010ea5:	call   0x64013b5b
64010eaa:	int3   
64010eab:	int3   
64010eac:	int3   
64010ead:	int3   
64010eae:	int3   
64010eaf:	int3   
64010eb0:	push   esi
64010eb1:	mov    esi,DWORD PTR [ecx]
64010eb3:	test   esi,esi
64010eb5:	je     0x64010ec6
64010eb7:	push   esi
64010eb8:	call   0x64010060
64010ebd:	push   esi
64010ebe:	call   0x64013712
64010ec3:	add    esp,0x8
64010ec6:	pop    esi
64010ec7:	ret    
64010ec8:	int3   
64010ec9:	int3   
64010eca:	int3   
64010ecb:	int3   
64010ecc:	int3   
64010ecd:	int3   
64010ece:	int3   
64010ecf:	int3   
64010ed0:	push   esi
64010ed1:	mov    esi,DWORD PTR [ecx+0x10]
64010ed4:	test   esi,esi
64010ed6:	je     0x64010ee7
64010ed8:	push   esi
64010ed9:	call   0x64010060
64010ede:	push   esi
64010edf:	call   0x64013712
64010ee4:	add    esp,0x8
64010ee7:	pop    esi
64010ee8:	ret    
64010ee9:	int3   
64010eea:	int3   
64010eeb:	int3   
64010eec:	int3   
64010eed:	int3   
64010eee:	int3   
64010eef:	int3   
64010ef0:	mov    ecx,DWORD PTR [esp+0x8]
64010ef4:	test   ecx,ecx
64010ef6:	jne    0x64010f02
64010ef8:	push   0x80004005
64010efd:	call   0x64001040
64010f02:	mov    eax,DWORD PTR [esp+0x4]
64010f06:	mov    eax,DWORD PTR [eax]
64010f08:	mov    dx,WORD PTR [eax]
64010f0b:	cmp    dx,WORD PTR [ecx]
64010f0e:	jne    0x64010f36
64010f10:	test   dx,dx
64010f13:	je     0x64010f2a
64010f15:	mov    dx,WORD PTR [eax+0x2]
64010f19:	cmp    dx,WORD PTR [ecx+0x2]
64010f1d:	jne    0x64010f36
64010f1f:	add    eax,0x4
64010f22:	add    ecx,0x4
64010f25:	test   dx,dx
64010f28:	jne    0x64010f08
64010f2a:	xor    eax,eax
64010f2c:	xor    ecx,ecx
64010f2e:	test   eax,eax
64010f30:	setne  cl
64010f33:	mov    al,cl
64010f35:	ret    
64010f36:	sbb    eax,eax
64010f38:	sbb    eax,0xffffffff
64010f3b:	xor    ecx,ecx
64010f3d:	test   eax,eax
64010f3f:	setne  cl
64010f42:	mov    al,cl
64010f44:	ret    
64010f45:	int3   
64010f46:	int3   
64010f47:	int3   
64010f48:	int3   
64010f49:	int3   
64010f4a:	int3   
64010f4b:	int3   
64010f4c:	int3   
64010f4d:	int3   
64010f4e:	int3   
64010f4f:	int3   
64010f50:	mov    eax,DWORD PTR [esp+0x4]
64010f54:	mov    ecx,DWORD PTR [esp+0x8]
64010f58:	cmp    eax,ecx
64010f5a:	je     0x64010f6d
64010f5c:	mov    edx,DWORD PTR [esp+0xc]
64010f60:	push   esi
64010f61:	mov    esi,DWORD PTR [edx]
64010f63:	mov    DWORD PTR [eax],esi
64010f65:	add    eax,0x4
64010f68:	cmp    eax,ecx
64010f6a:	jne    0x64010f61
64010f6c:	pop    esi
64010f6d:	ret    
64010f6e:	int3   
64010f6f:	int3   
64010f70:	mov    eax,DWORD PTR [esp+0x8]
64010f74:	mov    edx,DWORD PTR [esp+0x4]
64010f78:	sub    eax,edx
64010f7a:	sar    eax,0x2
64010f7d:	push   esi
64010f7e:	mov    esi,DWORD PTR [esp+0x10]
64010f82:	lea    ecx,[eax*4+0x0]
64010f89:	sub    esi,ecx
64010f8b:	test   eax,eax
64010f8d:	jle    0x64010f9b
64010f8f:	push   ecx
64010f90:	push   edx
64010f91:	push   ecx
64010f92:	push   esi
64010f93:	call   0x64013943
64010f98:	add    esp,0x10
64010f9b:	mov    eax,esi
64010f9d:	pop    esi
64010f9e:	ret    
64010f9f:	int3   
64010fa0:	mov    eax,DWORD PTR [esp+0x14]
64010fa4:	push   ebp
64010fa5:	mov    ebp,DWORD PTR [esp+0x8]
64010fa9:	push   esi
64010faa:	mov    esi,DWORD PTR [esp+0x14]
64010fae:	push   edi
64010faf:	lea    edi,[esi+eax*1]
64010fb2:	mov    eax,DWORD PTR [ebp+0x0]
64010fb5:	mov    edx,DWORD PTR [eax-0x8]
64010fb8:	sub    eax,0x10
64010fbb:	mov    ecx,0x1
64010fc0:	sub    ecx,DWORD PTR [eax+0xc]
64010fc3:	sub    edx,edi
64010fc5:	or     ecx,edx
64010fc7:	jge    0x64010fd1
64010fc9:	push   edi
64010fca:	mov    ecx,ebp
64010fcc:	call   0x64001e00
64010fd1:	mov    eax,DWORD PTR [esp+0x14]
64010fd5:	push   ebx
64010fd6:	mov    ebx,DWORD PTR [ebp+0x0]
64010fd9:	add    esi,esi
64010fdb:	push   esi
64010fdc:	push   eax
64010fdd:	push   esi
64010fde:	push   ebx
64010fdf:	call   0x640138c8
64010fe4:	mov    eax,DWORD PTR [esp+0x34]
64010fe8:	mov    ecx,DWORD PTR [esp+0x30]
64010fec:	add    eax,eax
64010fee:	push   eax
64010fef:	push   ecx
64010ff0:	push   eax
64010ff1:	add    esi,ebx
64010ff3:	push   esi
64010ff4:	call   0x640138c8
64010ff9:	add    esp,0x20
64010ffc:	test   edi,edi
64010ffe:	pop    ebx
64010fff:	jl     0x64011019
64011001:	mov    eax,DWORD PTR [ebp+0x0]
64011004:	cmp    edi,DWORD PTR [eax-0x8]
64011007:	jg     0x64011019
64011009:	mov    DWORD PTR [eax-0xc],edi
6401100c:	mov    edx,DWORD PTR [ebp+0x0]
6401100f:	mov    WORD PTR [edx+edi*2],0x0
64011015:	pop    edi
64011016:	pop    esi
64011017:	pop    ebp
64011018:	ret    
64011019:	push   0x80070057
6401101e:	call   0x64001040
64011023:	int3   
64011024:	int3   
64011025:	int3   
64011026:	int3   
64011027:	int3   
64011028:	int3   
64011029:	int3   
6401102a:	int3   
6401102b:	int3   
6401102c:	int3   
6401102d:	int3   
6401102e:	int3   
6401102f:	int3   
64011030:	push   ebx
64011031:	push   esi
64011032:	mov    esi,ecx
64011034:	cmp    DWORD PTR [esi+0x34],0x10
64011038:	jb     0x64011046
6401103a:	mov    eax,DWORD PTR [esi+0x20]
6401103d:	push   eax
6401103e:	call   0x64013712
64011043:	add    esp,0x4
64011046:	xor    ebx,ebx
64011048:	mov    DWORD PTR [esi+0x34],0xf
6401104f:	mov    DWORD PTR [esi+0x30],ebx
64011052:	mov    BYTE PTR [esi+0x20],bl
64011055:	cmp    DWORD PTR [esi+0x18],0x10
64011059:	jb     0x64011067
6401105b:	mov    ecx,DWORD PTR [esi+0x4]
6401105e:	push   ecx
6401105f:	call   0x64013712
64011064:	add    esp,0x4
64011067:	mov    DWORD PTR [esi+0x14],ebx
6401106a:	mov    DWORD PTR [esi+0x18],0xf
64011071:	mov    BYTE PTR [esi+0x4],bl
64011074:	pop    esi
64011075:	pop    ebx
64011076:	ret    
64011077:	int3   
64011078:	int3   
64011079:	int3   
6401107a:	int3   
6401107b:	int3   
6401107c:	int3   
6401107d:	int3   
6401107e:	int3   
6401107f:	int3   
64011080:	push   0xffffffff
64011082:	push   0x64023549
64011087:	mov    eax,fs:0x0
6401108d:	push   eax
6401108e:	push   ecx
6401108f:	push   esi
64011090:	push   edi
64011091:	mov    eax,ds:0x6402f09c
64011096:	xor    eax,esp
64011098:	push   eax
64011099:	lea    eax,[esp+0x10]
6401109d:	mov    fs:0x0,eax
640110a3:	mov    edi,DWORD PTR [esp+0x24]
640110a7:	mov    DWORD PTR [esp+0xc],0x0
640110af:	mov    eax,DWORD PTR [edi]
640110b1:	mov    ecx,DWORD PTR [eax-0x10]
640110b4:	test   ecx,ecx
640110b6:	mov    DWORD PTR [esp+0x18],0x0
640110be:	je     0x640110cb
640110c0:	mov    edx,DWORD PTR [ecx]
640110c2:	mov    eax,DWORD PTR [edx+0x10]
640110c5:	call   eax
640110c7:	test   eax,eax
640110c9:	jne    0x640110db
640110cb:	mov    edx,DWORD PTR ds:0x64030540
640110d1:	mov    eax,DWORD PTR [edx+0x10]
640110d4:	mov    ecx,0x64030540
640110d9:	call   eax
640110db:	xor    ecx,ecx
640110dd:	test   eax,eax
640110df:	setne  cl
640110e2:	test   ecx,ecx
640110e4:	jne    0x640110f0
640110e6:	push   0x80004005
640110eb:	call   0x64001040
640110f0:	mov    edx,DWORD PTR [eax]
640110f2:	mov    ecx,eax
640110f4:	mov    eax,DWORD PTR [edx+0xc]
640110f7:	call   eax
640110f9:	mov    esi,DWORD PTR [esp+0x20]
640110fd:	add    eax,0x10
64011100:	mov    DWORD PTR [esi],eax
64011102:	mov    ecx,DWORD PTR [esp+0x28]
64011106:	mov    eax,DWORD PTR [ecx]
64011108:	mov    edx,DWORD PTR [eax-0xc]
6401110b:	mov    ecx,DWORD PTR [edi]
6401110d:	mov    edi,DWORD PTR [ecx-0xc]
64011110:	push   edx
64011111:	push   eax
64011112:	push   edi
64011113:	push   ecx
64011114:	push   esi
64011115:	mov    DWORD PTR [esp+0x2c],0x0
6401111d:	mov    DWORD PTR [esp+0x20],0x1
64011125:	call   0x64010fa0
6401112a:	add    esp,0x14
6401112d:	mov    eax,esi
6401112f:	mov    ecx,DWORD PTR [esp+0x10]
64011133:	mov    DWORD PTR fs:0x0,ecx
6401113a:	pop    ecx
6401113b:	pop    edi
6401113c:	pop    esi
6401113d:	add    esp,0x10
64011140:	ret    
64011141:	int3   
64011142:	int3   
64011143:	int3   
64011144:	int3   
64011145:	int3   
64011146:	int3   
64011147:	int3   
64011148:	int3   
64011149:	int3   
6401114a:	int3   
6401114b:	int3   
6401114c:	int3   
6401114d:	int3   
6401114e:	int3   
6401114f:	int3   
64011150:	push   0xffffffff
64011152:	push   0x64023589
64011157:	mov    eax,fs:0x0
6401115d:	push   eax
6401115e:	push   ecx
6401115f:	push   ebp
64011160:	push   esi
64011161:	push   edi
64011162:	mov    eax,ds:0x6402f09c
64011167:	xor    eax,esp
64011169:	push   eax
6401116a:	lea    eax,[esp+0x14]
6401116e:	mov    fs:0x0,eax
64011174:	mov    ebp,DWORD PTR [esp+0x28]
64011178:	mov    DWORD PTR [esp+0x10],0x0
64011180:	mov    eax,DWORD PTR [ebp+0x0]
64011183:	mov    ecx,DWORD PTR [eax-0x10]
64011186:	test   ecx,ecx
64011188:	mov    DWORD PTR [esp+0x1c],0x0
64011190:	je     0x6401119d
64011192:	mov    edx,DWORD PTR [ecx]
64011194:	mov    eax,DWORD PTR [edx+0x10]
64011197:	call   eax
64011199:	test   eax,eax
6401119b:	jne    0x640111ad
6401119d:	mov    edx,DWORD PTR ds:0x64030540
640111a3:	mov    eax,DWORD PTR [edx+0x10]
640111a6:	mov    ecx,0x64030540
640111ab:	call   eax
640111ad:	xor    ecx,ecx
640111af:	test   eax,eax
640111b1:	setne  cl
640111b4:	test   ecx,ecx
640111b6:	jne    0x640111c2
640111b8:	push   0x80004005
640111bd:	call   0x64001040
640111c2:	mov    edx,DWORD PTR [eax]
640111c4:	mov    ecx,eax
640111c6:	mov    eax,DWORD PTR [edx+0xc]
640111c9:	call   eax
640111cb:	mov    esi,DWORD PTR [esp+0x24]
640111cf:	add    eax,0x10
640111d2:	mov    DWORD PTR [esi],eax
640111d4:	mov    edi,DWORD PTR [esp+0x2c]
640111d8:	test   edi,edi
640111da:	mov    DWORD PTR [esp+0x1c],0x0
640111e2:	mov    DWORD PTR [esp+0x10],0x1
640111ea:	jne    0x640111f0
640111ec:	xor    eax,eax
640111ee:	jmp    0x64011204
640111f0:	mov    eax,edi
640111f2:	lea    edx,[eax+0x2]
640111f5:	mov    cx,WORD PTR [eax]
640111f8:	add    eax,0x2
640111fb:	test   cx,cx
640111fe:	jne    0x640111f5
64011200:	sub    eax,edx
64011202:	sar    eax,1
64011204:	mov    ecx,DWORD PTR [ebp+0x0]
64011207:	mov    edx,DWORD PTR [ecx-0xc]
6401120a:	push   eax
6401120b:	push   edi
6401120c:	push   edx
6401120d:	push   ecx
6401120e:	push   esi
6401120f:	call   0x64010fa0
64011214:	add    esp,0x14
64011217:	mov    eax,esi
64011219:	mov    ecx,DWORD PTR [esp+0x14]
6401121d:	mov    DWORD PTR fs:0x0,ecx
64011224:	pop    ecx
64011225:	pop    edi
64011226:	pop    esi
64011227:	pop    ebp
64011228:	add    esp,0x10
6401122b:	ret    
6401122c:	int3   
6401122d:	int3   
6401122e:	int3   
6401122f:	int3   
64011230:	mov    eax,DWORD PTR [esp+0x8]
64011234:	mov    ecx,DWORD PTR [esp+0x4]
64011238:	mov    edx,DWORD PTR [esp+0xc]
6401123c:	sub    eax,ecx
6401123e:	sar    eax,0x2
64011241:	lea    eax,[eax*4+0x0]
64011248:	push   esi
64011249:	lea    esi,[eax+edx*1]
6401124c:	je     0x6401125a
6401124e:	push   eax
6401124f:	push   ecx
64011250:	push   eax
64011251:	push   edx
64011252:	call   0x64013943
64011257:	add    esp,0x10
6401125a:	mov    eax,esi
6401125c:	pop    esi
6401125d:	ret    0xc
64011260:	push   esi
64011261:	mov    esi,DWORD PTR [esp+0xc]
64011265:	test   esi,esi
64011267:	push   edi
64011268:	mov    edi,DWORD PTR [esp+0xc]
6401126c:	mov    eax,esi
6401126e:	mov    ecx,edi
64011270:	jbe    0x64011286
64011272:	mov    edx,DWORD PTR [esp+0x14]
64011276:	push   ebx
64011277:	mov    ebx,DWORD PTR [edx]
64011279:	mov    DWORD PTR [ecx],ebx
6401127b:	sub    eax,0x1
6401127e:	add    ecx,0x4
64011281:	test   eax,eax
64011283:	ja     0x64011277
64011285:	pop    ebx
64011286:	lea    eax,[edi+esi*4]
64011289:	pop    edi
6401128a:	pop    esi
6401128b:	ret    0xc
6401128e:	int3   
6401128f:	int3   
64011290:	mov    eax,DWORD PTR [esp+0x4]
64011294:	push   esi
64011295:	push   eax
64011296:	mov    esi,ecx
64011298:	call   0x64013867
6401129d:	mov    DWORD PTR [esi],0x640263f8
640112a3:	mov    eax,esi
640112a5:	pop    esi
640112a6:	ret    0x4
640112a9:	int3   
640112aa:	int3   
640112ab:	int3   
640112ac:	int3   
640112ad:	int3   
640112ae:	int3   
640112af:	int3   
640112b0:	push   esi
640112b1:	mov    esi,ecx
640112b3:	mov    DWORD PTR [esi],0x64026444
640112b9:	cmp    DWORD PTR [esi+0x24],0x10
640112bd:	jb     0x640112cb
640112bf:	mov    eax,DWORD PTR [esi+0x10]
640112c2:	push   eax
640112c3:	call   0x64013712
640112c8:	add    esp,0x4
640112cb:	xor    eax,eax
640112cd:	mov    DWORD PTR [esi+0x24],0xf
640112d4:	mov    DWORD PTR [esi+0x20],eax
640112d7:	mov    BYTE PTR [esi+0x10],al
640112da:	mov    ecx,esi
640112dc:	pop    esi
640112dd:	jmp    0x6401382b
640112e2:	int3   
640112e3:	int3   
640112e4:	int3   
640112e5:	int3   
640112e6:	int3   
640112e7:	int3   
640112e8:	int3   
640112e9:	int3   
640112ea:	int3   
640112eb:	int3   
640112ec:	int3   
640112ed:	int3   
640112ee:	int3   
640112ef:	int3   
640112f0:	push   0xffffffff
640112f2:	push   0x640235b8
640112f7:	mov    eax,fs:0x0
640112fd:	push   eax
640112fe:	sub    esp,0x44
64011301:	mov    eax,ds:0x6402f09c
64011306:	xor    eax,esp
64011308:	push   eax
64011309:	lea    eax,[esp+0x48]
6401130d:	mov    fs:0x0,eax
64011313:	push   0x12
64011315:	push   0x6402a300
6401131a:	lea    ecx,[esp+0xc]
6401131e:	mov    DWORD PTR [esp+0x24],0xf
64011326:	mov    DWORD PTR [esp+0x20],0x0
6401132e:	mov    BYTE PTR [esp+0x10],0x0
64011333:	call   0x64001880
64011338:	lea    eax,[esp+0x4]
6401133c:	push   eax
6401133d:	lea    ecx,[esp+0x24]
64011341:	mov    DWORD PTR [esp+0x54],0x0
64011349:	call   0x64002cc0
6401134e:	push   0x6402c940
64011353:	lea    ecx,[esp+0x24]
64011357:	push   ecx
64011358:	mov    DWORD PTR [esp+0x28],0x6402631c
64011360:	call   0x64013b5b
64011365:	int3   
64011366:	int3   
64011367:	int3   
64011368:	int3   
64011369:	int3   
6401136a:	int3   
6401136b:	int3   
6401136c:	int3   
6401136d:	int3   
6401136e:	int3   
6401136f:	int3   
64011370:	sub    esp,0x10
64011373:	mov    edx,DWORD PTR [ecx+0x4]
64011376:	mov    eax,DWORD PTR [ecx]
64011378:	cmp    eax,0x5
6401137b:	mov    DWORD PTR [esp+0x4],edx
6401137f:	mov    edx,DWORD PTR [ecx+0x8]
64011382:	mov    ecx,DWORD PTR [ecx+0xc]
64011385:	je     0x640113ac
64011387:	push   0x64026400
6401138c:	lea    ecx,[esp+0x4]
64011390:	call   0x6401384e
64011395:	push   0x6402bdf0
6401139a:	lea    eax,[esp+0x4]
6401139e:	push   eax
6401139f:	mov    DWORD PTR [esp+0x8],0x640263f8
640113a7:	call   0x64013b5b
640113ac:	push   edx
640113ad:	push   ecx
640113ae:	mov    ecx,DWORD PTR [esp+0x1c]
640113b2:	call   0x64001880
640113b7:	add    esp,0x10
640113ba:	ret    0x4
640113bd:	int3   
640113be:	int3   
640113bf:	int3   
640113c0:	push   0xffffffff
640113c2:	push   0x640235fe
640113c7:	mov    eax,fs:0x0
640113cd:	push   eax
640113ce:	sub    esp,0x9c
640113d4:	push   ebx
640113d5:	push   ebp
640113d6:	push   edi
640113d7:	mov    eax,ds:0x6402f09c
640113dc:	xor    eax,esp
640113de:	push   eax
640113df:	lea    eax,[esp+0xac]
640113e6:	mov    fs:0x0,eax
640113ec:	xor    ebx,ebx
640113ee:	push   0x1c
640113f0:	mov    DWORD PTR [esp+0x14],ebx
640113f4:	call   0x64013af1
640113f9:	mov    edi,eax
640113fb:	add    esp,0x4
640113fe:	cmp    edi,ebx
64011400:	je     0x64011412
64011402:	push   0x2000
64011407:	push   edi
64011408:	call   0x640100c0
6401140d:	add    esp,0x8
64011410:	jmp    0x64011414
64011412:	xor    edi,edi
64011414:	mov    DWORD PTR [esp+0x20],edi
64011418:	mov    ecx,DWORD PTR [esp+0xc4]
6401141f:	mov    edx,DWORD PTR [esp+0xc0]
64011426:	lea    eax,[esp+0x10]
6401142a:	push   eax
6401142b:	mov    eax,DWORD PTR [esp+0xc0]
64011432:	push   edi
64011433:	push   ecx
64011434:	push   edx
64011435:	push   eax
64011436:	mov    DWORD PTR [esp+0xc8],ebx
6401143d:	call   0x64010b50
64011442:	add    esp,0x14
64011445:	sub    eax,ebx
64011447:	je     0x64011516
6401144d:	sub    eax,0x1
64011450:	je     0x640114f9
64011456:	sub    eax,0x1
64011459:	je     0x640114a8
6401145b:	push   0xb
6401145d:	push   0x6402646c
64011462:	lea    ecx,[esp+0x2c]
64011466:	mov    DWORD PTR [esp+0x44],0xf
6401146e:	mov    DWORD PTR [esp+0x40],ebx
64011472:	mov    BYTE PTR [esp+0x30],bl
64011476:	call   0x64001880
6401147b:	lea    ecx,[esp+0x24]
6401147f:	push   ecx
64011480:	lea    ecx,[esp+0x60]
64011484:	mov    BYTE PTR [esp+0xb8],0x2
6401148c:	call   0x64002020
64011491:	push   0x6402be74
64011496:	lea    edx,[esp+0x60]
6401149a:	push   edx
6401149b:	mov    DWORD PTR [esp+0x64],0x64026450
640114a3:	call   0x64013b5b
640114a8:	mov    eax,DWORD PTR [esp+0x10]
640114ac:	mov    ecx,DWORD PTR [esp+0x14]
640114b0:	mov    edx,DWORD PTR [esp+0x18]
640114b4:	mov    DWORD PTR [esi],eax
640114b6:	mov    eax,DWORD PTR [esp+0x1c]
640114ba:	mov    DWORD PTR [esi+0x4],ecx
640114bd:	mov    DWORD PTR [esi+0x8],edx
640114c0:	mov    DWORD PTR [esi+0xc],eax
640114c3:	mov    ebp,DWORD PTR [esi+0x10]
640114c6:	cmp    edi,ebp
640114c8:	je     0x640114dd
640114ca:	cmp    ebp,ebx
640114cc:	je     0x640114dd
640114ce:	push   ebp
640114cf:	call   0x64010060
640114d4:	push   ebp
640114d5:	call   0x64013712
640114da:	add    esp,0x8
640114dd:	mov    DWORD PTR [esi+0x10],edi
640114e0:	mov    ecx,DWORD PTR [esp+0xac]
640114e7:	mov    DWORD PTR fs:0x0,ecx
640114ee:	pop    ecx
640114ef:	pop    edi
640114f0:	pop    ebp
640114f1:	pop    ebx
640114f2:	add    esp,0xa8
640114f8:	ret    
640114f9:	mov    ecx,DWORD PTR [esp+0x10]
640114fd:	mov    edx,DWORD PTR [esp+0x14]
64011501:	mov    eax,DWORD PTR [esp+0x18]
64011505:	mov    DWORD PTR [esi],ecx
64011507:	mov    ecx,DWORD PTR [esp+0x1c]
6401150b:	mov    DWORD PTR [esi+0x4],edx
6401150e:	mov    DWORD PTR [esi+0x8],eax
64011511:	mov    DWORD PTR [esi+0xc],ecx
64011514:	jmp    0x640114c3
64011516:	push   0x12
64011518:	push   0x64026458
6401151d:	lea    ecx,[esp+0x48]
64011521:	mov    DWORD PTR [esp+0x60],0xf
64011529:	mov    DWORD PTR [esp+0x5c],ebx
6401152d:	mov    BYTE PTR [esp+0x4c],bl
64011531:	call   0x64001880
64011536:	lea    edx,[esp+0x40]
6401153a:	push   edx
6401153b:	lea    ecx,[esp+0x88]
64011542:	mov    BYTE PTR [esp+0xb8],0x1
6401154a:	call   0x64002020
6401154f:	push   0x6402be74
64011554:	lea    eax,[esp+0x88]
6401155b:	push   eax
6401155c:	mov    DWORD PTR [esp+0x8c],0x64026450
64011567:	call   0x64013b5b
6401156c:	int3   
6401156d:	int3   
6401156e:	int3   
6401156f:	int3   
64011570:	mov    eax,DWORD PTR [esp+0x4]
64011574:	push   esi
64011575:	push   eax
64011576:	mov    esi,ecx
64011578:	call   0x640020e0
6401157d:	mov    DWORD PTR [esi],0x64026450
64011583:	mov    eax,esi
64011585:	pop    esi
64011586:	ret    0x4
64011589:	int3   
6401158a:	int3   
6401158b:	int3   
6401158c:	int3   
6401158d:	int3   
6401158e:	int3   
6401158f:	int3   
64011590:	cmp    DWORD PTR [esp+0x4],0x6
64011595:	push   esi
64011596:	mov    esi,ecx
64011598:	je     0x640115bf
6401159a:	push   0x64026400
6401159f:	lea    ecx,[esp+0xc]
640115a3:	call   0x6401384e
640115a8:	push   0x6402bdf0
640115ad:	lea    eax,[esp+0xc]
640115b1:	push   eax
640115b2:	mov    DWORD PTR [esp+0x10],0x640263f8
640115ba:	call   0x64013b5b
640115bf:	push   ebx
640115c0:	mov    ebx,DWORD PTR [esp+0x14]
640115c4:	test   ebx,ebx
640115c6:	jbe    0x640115e9
640115c8:	mov    ecx,DWORD PTR [esi]
640115ca:	push   edi
640115cb:	mov    edi,DWORD PTR [esp+0x1c]
640115cf:	push   ecx
640115d0:	mov    ecx,edi
640115d2:	call   0x64011370
640115d7:	cmp    ebx,0x1
640115da:	jbe    0x640115e8
640115dc:	mov    edx,DWORD PTR [esi+0x4]
640115df:	push   edx
640115e0:	lea    ecx,[edi+0x10]
640115e3:	call   0x64011370
640115e8:	pop    edi
640115e9:	pop    ebx
640115ea:	pop    esi
640115eb:	ret    0x10
640115ee:	int3   
640115ef:	int3   
640115f0:	mov    eax,DWORD PTR [esp+0x10]
640115f4:	push   ebx
640115f5:	push   esi
640115f6:	mov    esi,ecx
640115f8:	mov    ecx,DWORD PTR [eax]
640115fa:	mov    DWORD PTR [esp+0x18],ecx
640115fe:	mov    ecx,DWORD PTR [esi+0x4]
64011601:	test   ecx,ecx
64011603:	push   edi
64011604:	jne    0x6401160a
64011606:	xor    edi,edi
64011608:	jmp    0x64011612
6401160a:	mov    edi,DWORD PTR [esi+0xc]
6401160d:	sub    edi,ecx
6401160f:	sar    edi,0x2
64011612:	mov    ebx,DWORD PTR [esp+0x18]
64011616:	test   ebx,ebx
64011618:	je     0x6401179f
6401161e:	test   ecx,ecx
64011620:	jne    0x64011626
64011622:	xor    eax,eax
64011624:	jmp    0x6401162e
64011626:	mov    eax,DWORD PTR [esi+0x8]
64011629:	sub    eax,ecx
6401162b:	sar    eax,0x2
6401162e:	mov    edx,0x3fffffff
64011633:	sub    edx,eax
64011635:	cmp    edx,ebx
64011637:	jae    0x6401163e
64011639:	call   0x640112f0
6401163e:	test   ecx,ecx
64011640:	jne    0x64011646
64011642:	xor    eax,eax
64011644:	jmp    0x6401164e
64011646:	mov    eax,DWORD PTR [esi+0x8]
64011649:	sub    eax,ecx
6401164b:	sar    eax,0x2
6401164e:	add    eax,ebx
64011650:	cmp    edi,eax
64011652:	push   ebp
64011653:	jae    0x6401170d
64011659:	mov    eax,edi
6401165b:	shr    eax,1
6401165d:	mov    edx,0x3fffffff
64011662:	sub    edx,eax
64011664:	cmp    edx,edi
64011666:	jae    0x6401166c
64011668:	xor    edi,edi
6401166a:	jmp    0x6401166e
6401166c:	add    edi,eax
6401166e:	test   ecx,ecx
64011670:	jne    0x64011676
64011672:	xor    eax,eax
64011674:	jmp    0x6401167e
64011676:	mov    eax,DWORD PTR [esi+0x8]
64011679:	sub    eax,ecx
6401167b:	sar    eax,0x2
6401167e:	add    eax,ebx
64011680:	cmp    edi,eax
64011682:	jae    0x64011696
64011684:	test   ecx,ecx
64011686:	jne    0x6401168c
64011688:	xor    edi,edi
6401168a:	jmp    0x64011694
6401168c:	mov    edi,DWORD PTR [esi+0x8]
6401168f:	sub    edi,ecx
64011691:	sar    edi,0x2
64011694:	add    edi,ebx
64011696:	push   0x0
64011698:	push   edi
64011699:	call   0x64010e50
6401169e:	mov    ecx,DWORD PTR [esi+0x4]
640116a1:	add    esp,0x8
640116a4:	mov    ebp,eax
640116a6:	mov    eax,DWORD PTR [esp+0x18]
640116aa:	push   ebp
640116ab:	push   eax
640116ac:	push   ecx
640116ad:	mov    ecx,esi
640116af:	call   0x64011230
640116b4:	lea    edx,[esp+0x20]
640116b8:	push   edx
640116b9:	push   ebx
640116ba:	push   eax
640116bb:	mov    ecx,esi
640116bd:	call   0x64011260
640116c2:	mov    ecx,DWORD PTR [esp+0x18]
640116c6:	push   eax
640116c7:	mov    eax,DWORD PTR [esi+0x8]
640116ca:	push   eax
640116cb:	push   ecx
640116cc:	mov    ecx,esi
640116ce:	call   0x64011230
640116d3:	mov    eax,DWORD PTR [esi+0x4]
640116d6:	test   eax,eax
640116d8:	jne    0x640116de
640116da:	xor    ecx,ecx
640116dc:	jmp    0x640116e6
640116de:	mov    ecx,DWORD PTR [esi+0x8]
640116e1:	sub    ecx,eax
640116e3:	sar    ecx,0x2
640116e6:	add    ebx,ecx
640116e8:	test   eax,eax
640116ea:	je     0x640116f5
640116ec:	push   eax
640116ed:	call   0x64013712
640116f2:	add    esp,0x4
640116f5:	lea    edx,[ebp+edi*4+0x0]
640116f9:	lea    eax,[ebp+ebx*4+0x0]
640116fd:	mov    DWORD PTR [esi+0x4],ebp
64011700:	pop    ebp
64011701:	pop    edi
64011702:	mov    DWORD PTR [esi+0xc],edx
64011705:	mov    DWORD PTR [esi+0x8],eax
64011708:	pop    esi
64011709:	pop    ebx
6401170a:	ret    0x10
6401170d:	mov    ebp,DWORD PTR [esi+0x8]
64011710:	mov    edi,DWORD PTR [esp+0x18]
64011714:	mov    ecx,ebp
64011716:	sub    ecx,edi
64011718:	sar    ecx,0x2
6401171b:	lea    eax,[ebx*4+0x0]
64011722:	cmp    ecx,ebx
64011724:	mov    DWORD PTR [esp+0x1c],eax
64011728:	mov    ecx,esi
6401172a:	jae    0x64011772
6401172c:	add    eax,edi
6401172e:	push   eax
6401172f:	push   ebp
64011730:	push   edi
64011731:	call   0x64011230
64011736:	mov    eax,DWORD PTR [esi+0x8]
64011739:	mov    ecx,eax
6401173b:	sub    ecx,edi
6401173d:	sar    ecx,0x2
64011740:	lea    edx,[esp+0x20]
64011744:	push   edx
64011745:	sub    ebx,ecx
64011747:	push   ebx
64011748:	push   eax
64011749:	mov    ecx,esi
6401174b:	call   0x64011260
64011750:	mov    eax,DWORD PTR [esp+0x1c]
64011754:	add    DWORD PTR [esi+0x8],eax
64011757:	mov    esi,DWORD PTR [esi+0x8]
6401175a:	lea    edx,[esp+0x20]
6401175e:	push   edx
6401175f:	sub    esi,eax
64011761:	push   esi
64011762:	push   edi
64011763:	call   0x64010f50
64011768:	add    esp,0xc
6401176b:	pop    ebp
6401176c:	pop    edi
6401176d:	pop    esi
6401176e:	pop    ebx
6401176f:	ret    0x10
64011772:	push   ebp
64011773:	mov    ebx,ebp
64011775:	sub    ebx,eax
64011777:	push   ebp
64011778:	push   ebx
64011779:	call   0x64011230
6401177e:	push   ebp
6401177f:	push   ebx
64011780:	push   edi
64011781:	mov    DWORD PTR [esi+0x8],eax
64011784:	call   0x64010f70
64011789:	mov    ecx,DWORD PTR [esp+0x28]
6401178d:	lea    eax,[esp+0x2c]
64011791:	push   eax
64011792:	add    ecx,edi
64011794:	push   ecx
64011795:	push   edi
64011796:	call   0x64010f50
6401179b:	add    esp,0x18
6401179e:	pop    ebp
6401179f:	pop    edi
640117a0:	pop    esi
640117a1:	pop    ebx
640117a2:	ret    0x10
640117a5:	int3   
640117a6:	int3   
640117a7:	int3   
640117a8:	int3   
640117a9:	int3   
640117aa:	int3   
640117ab:	int3   
640117ac:	int3   
640117ad:	int3   
640117ae:	int3   
640117af:	int3   
640117b0:	push   ecx
640117b1:	push   ebx
640117b2:	push   ebp
640117b3:	mov    ebp,DWORD PTR [esp+0x14]
640117b7:	push   esi
640117b8:	mov    esi,ecx
640117ba:	push   edi
640117bb:	mov    edi,DWORD PTR [esi+0x4]
640117be:	test   edi,edi
640117c0:	je     0x640117ce
640117c2:	mov    eax,DWORD PTR [esi+0x8]
640117c5:	mov    ecx,eax
640117c7:	sub    ecx,edi
640117c9:	sar    ecx,0x2
640117cc:	jne    0x640117d2
640117ce:	xor    ebx,ebx
640117d0:	jmp    0x640117f1
640117d2:	cmp    edi,eax
640117d4:	jbe    0x640117db
640117d6:	call   0x64013ac8
640117db:	test   ebp,ebp
640117dd:	je     0x640117e3
640117df:	cmp    ebp,esi
640117e1:	je     0x640117e8
640117e3:	call   0x64013ac8
640117e8:	mov    ebx,DWORD PTR [esp+0x20]
640117ec:	sub    ebx,edi
640117ee:	sar    ebx,0x2
640117f1:	mov    edx,DWORD PTR [esp+0x24]
640117f5:	mov    eax,DWORD PTR [esp+0x20]
640117f9:	push   edx
640117fa:	push   0x1
640117fc:	push   eax
640117fd:	push   ebp
640117fe:	mov    ecx,esi
64011800:	call   0x640115f0
64011805:	mov    edi,DWORD PTR [esi+0x4]
64011808:	cmp    edi,DWORD PTR [esi+0x8]
6401180b:	jbe    0x64011812
6401180d:	call   0x64013ac8
64011812:	mov    DWORD PTR [esp+0x20],edi
64011816:	lea    edi,[edi+ebx*4]
64011819:	cmp    edi,DWORD PTR [esi+0x8]
6401181c:	ja     0x64011823
6401181e:	cmp    edi,DWORD PTR [esi+0x4]
64011821:	jae    0x64011828
64011823:	call   0x64013ac8
64011828:	mov    eax,DWORD PTR [esp+0x18]
6401182c:	mov    DWORD PTR [eax+0x4],edi
6401182f:	pop    edi
64011830:	mov    DWORD PTR [eax],esi
64011832:	pop    esi
64011833:	pop    ebp
64011834:	pop    ebx
64011835:	pop    ecx
64011836:	ret    0x10
64011839:	int3   
6401183a:	int3   
6401183b:	int3   
6401183c:	int3   
6401183d:	int3   
6401183e:	int3   
6401183f:	int3   
64011840:	sub    esp,0x8
64011843:	push   esi
64011844:	mov    esi,ecx
64011846:	mov    edx,DWORD PTR [esi+0x4]
64011849:	test   edx,edx
6401184b:	jne    0x64011851
6401184d:	xor    ecx,ecx
6401184f:	jmp    0x64011859
64011851:	mov    ecx,DWORD PTR [esi+0x8]
64011854:	sub    ecx,edx
64011856:	sar    ecx,0x2
64011859:	test   edx,edx
6401185b:	je     0x64011881
6401185d:	mov    eax,DWORD PTR [esi+0xc]
64011860:	sub    eax,edx
64011862:	sar    eax,0x2
64011865:	cmp    ecx,eax
64011867:	jae    0x64011881
64011869:	mov    eax,DWORD PTR [esi+0x8]
6401186c:	mov    ecx,DWORD PTR [esp+0x10]
64011870:	mov    edx,DWORD PTR [ecx]
64011872:	mov    DWORD PTR [eax],edx
64011874:	add    eax,0x4
64011877:	mov    DWORD PTR [esi+0x8],eax
6401187a:	pop    esi
6401187b:	add    esp,0x8
6401187e:	ret    0x4
64011881:	push   edi
64011882:	mov    edi,DWORD PTR [esi+0x8]
64011885:	cmp    edx,edi
64011887:	jbe    0x6401188e
64011889:	call   0x64013ac8
6401188e:	mov    eax,DWORD PTR [esp+0x14]
64011892:	push   eax
64011893:	push   edi
64011894:	push   esi
64011895:	lea    ecx,[esp+0x14]
64011899:	push   ecx
6401189a:	mov    ecx,esi
6401189c:	call   0x640117b0
640118a1:	pop    edi
640118a2:	pop    esi
640118a3:	add    esp,0x8
640118a6:	ret    0x4
640118a9:	int3   
640118aa:	int3   
640118ab:	int3   
640118ac:	int3   
640118ad:	int3   
640118ae:	int3   
640118af:	int3   
640118b0:	sub    esp,0x20
640118b3:	mov    eax,DWORD PTR [ecx]
640118b5:	mov    edx,DWORD PTR [ecx+0x4]
640118b8:	mov    DWORD PTR [esp],eax
640118bb:	mov    eax,DWORD PTR [ecx+0x8]
640118be:	mov    ecx,DWORD PTR [ecx+0xc]
640118c1:	mov    DWORD PTR [esp+0x4],edx
640118c5:	lea    edx,[esp+0x10]
640118c9:	mov    DWORD PTR [esp+0xc],ecx
640118cd:	push   edx
640118ce:	lea    ecx,[esp+0x4]
640118d2:	mov    DWORD PTR [esp+0xc],eax
640118d6:	call   0x64010ce0
640118db:	mov    ecx,DWORD PTR [esp+0x24]
640118df:	lea    edx,[ecx+0x1c]
640118e2:	mov    DWORD PTR [esp],edx
640118e5:	mov    edx,DWORD PTR [eax]
640118e7:	mov    DWORD PTR [esp+0x4],ecx
640118eb:	sub    esp,0x10
640118ee:	mov    ecx,esp
640118f0:	mov    DWORD PTR [ecx],edx
640118f2:	mov    edx,DWORD PTR [eax+0x4]
640118f5:	mov    DWORD PTR [ecx+0x4],edx
640118f8:	mov    edx,DWORD PTR [eax+0x8]
640118fb:	mov    eax,DWORD PTR [eax+0xc]
640118fe:	mov    DWORD PTR [ecx+0x8],edx
64011901:	mov    DWORD PTR [ecx+0xc],eax
64011904:	lea    ecx,[esp+0x10]
64011908:	call   0x64011590
6401190d:	add    esp,0x20
64011910:	ret    0x4
64011913:	int3   
64011914:	int3   
64011915:	int3   
64011916:	int3   
64011917:	int3   
64011918:	int3   
64011919:	int3   
6401191a:	int3   
6401191b:	int3   
6401191c:	int3   
6401191d:	int3   
6401191e:	int3   
6401191f:	int3   
64011920:	push   ebp
64011921:	lea    ebp,[esp-0x74]
64011925:	sub    esp,0x74
64011928:	push   0xffffffff
6401192a:	push   0x64023668
6401192f:	mov    eax,fs:0x0
64011935:	push   eax
64011936:	sub    esp,0x70
64011939:	mov    eax,ds:0x6402f09c
6401193e:	xor    eax,ebp
64011940:	mov    DWORD PTR [ebp+0x70],eax
64011943:	push   ebx
64011944:	push   esi
64011945:	push   edi
64011946:	push   eax
64011947:	lea    eax,[ebp-0xc]
6401194a:	mov    fs:0x0,eax
64011950:	mov    DWORD PTR [ebp-0x10],esp
64011953:	mov    eax,DWORD PTR [ebp+0x7c]
64011956:	mov    ecx,0xf
6401195b:	xor    edi,edi
6401195d:	mov    DWORD PTR [ebp+0x50],ecx
64011960:	mov    DWORD PTR [ebp+0x4c],edi
64011963:	mov    BYTE PTR [ebp+0x3c],0x0
64011967:	mov    DWORD PTR [ebp+0x6c],ecx
6401196a:	mov    DWORD PTR [ebp+0x68],edi
6401196d:	mov    BYTE PTR [ebp+0x58],0x0
64011971:	mov    DWORD PTR [ebp-0x4],edi
64011974:	mov    DWORD PTR [ebp-0x38],edi
64011977:	mov    DWORD PTR [ebp-0x28],edi
6401197a:	mov    ecx,DWORD PTR [eax+0x14]
6401197d:	mov    ebx,0x10
64011982:	cmp    DWORD PTR [eax+0x18],ebx
64011985:	mov    BYTE PTR [ebp-0x4],0x2
64011989:	jb     0x64011990
6401198b:	mov    eax,DWORD PTR [eax+0x4]
6401198e:	jmp    0x64011993
64011990:	add    eax,0x4
64011993:	push   edi
64011994:	push   ecx
64011995:	push   eax
64011996:	lea    esi,[ebp-0x38]
64011999:	call   0x640113c0
6401199e:	add    esp,0xc
640119a1:	lea    eax,[ebp+0x38]
640119a4:	push   eax
640119a5:	mov    ecx,esi
640119a7:	call   0x640118b0
640119ac:	mov    DWORD PTR [ebp-0x4],0x1
640119b3:	call   DWORD PTR ds:0x6402f06c
640119b9:	cmp    DWORD PTR [ebp+0x6c],ebx
640119bc:	mov    DWORD PTR [ebp+0x0],eax
640119bf:	mov    BYTE PTR [ebp-0x4],0x4
640119c3:	jb     0x640119d0
640119c5:	mov    ebx,DWORD PTR [ebp+0x58]
640119c8:	cmp    ebx,edi
640119ca:	jne    0x640119d3
640119cc:	xor    eax,eax
640119ce:	jmp    0x64011a1a
640119d0:	lea    ebx,[ebp+0x58]
640119d3:	push   ebx
640119d4:	call   DWORD PTR ds:0x64026058
640119da:	mov    edi,eax
640119dc:	add    edi,0x1
640119df:	cmp    edi,0x3fffffff
640119e5:	jg     0x64011a16
640119e7:	lea    eax,[edi+edi*1]
640119ea:	call   0x640146f0
640119ef:	mov    esi,esp
640119f1:	test   esi,esi
640119f3:	mov    DWORD PTR [ebp-0x10],esp
640119f6:	je     0x64011a16
640119f8:	mov    ecx,DWORD PTR [ebp+0x0]
640119fb:	push   edi
640119fc:	push   esi
640119fd:	push   0xffffffff
640119ff:	push   ebx
64011a00:	push   0x0
64011a02:	push   ecx
64011a03:	mov    WORD PTR [esi],0x0
64011a08:	call   DWORD PTR ds:0x64026024
64011a0e:	neg    eax
64011a10:	sbb    eax,eax
64011a12:	and    eax,esi
64011a14:	jmp    0x64011a18
64011a16:	xor    eax,eax
64011a18:	xor    edi,edi
64011a1a:	push   eax
64011a1b:	lea    ecx,[ebp+0x10]
64011a1e:	call   0x64002550
64011a23:	mov    edx,DWORD PTR ds:0x64030540
64011a29:	mov    eax,DWORD PTR [edx+0xc]
64011a2c:	mov    ecx,0x64030540
64011a31:	mov    BYTE PTR [ebp-0x4],0x5
64011a35:	call   eax
64011a37:	add    eax,0x10
64011a3a:	mov    DWORD PTR [ebp+0x14],eax
64011a3d:	lea    ecx,[ebp+0x14]
64011a40:	push   ecx
64011a41:	lea    edx,[ebp+0x10]
64011a44:	push   edx
64011a45:	lea    eax,[ebp+0x18]
64011a48:	push   eax
64011a49:	mov    BYTE PTR [ebp-0x4],0x6
64011a4d:	call   0x64002160
64011a52:	add    esp,0xc
64011a55:	lea    ecx,[ebp+0x18]
64011a58:	push   0x640286e4
64011a5d:	push   ecx
64011a5e:	mov    BYTE PTR [ebp-0x4],0x7
64011a62:	call   0x64010ef0
64011a67:	add    esp,0x8
64011a6a:	test   al,al
64011a6c:	je     0x64011c44
64011a72:	mov    esi,DWORD PTR [ebp+0x14]
64011a75:	call   0x6400e0e0
64011a7a:	push   esi
64011a7b:	call   eax
64011a7d:	cmp    DWORD PTR [ebp+0x50],0x10
64011a81:	mov    edx,DWORD PTR [ebp+0x4c]
64011a84:	mov    eax,DWORD PTR [ebp+0x3c]
64011a87:	push   edx
64011a88:	jae    0x64011a8d
64011a8a:	lea    eax,[ebp+0x3c]
64011a8d:	push   eax
64011a8e:	mov    eax,DWORD PTR [ebp+0x18]
64011a91:	push   ecx
64011a92:	add    eax,0xfffffff0
64011a95:	mov    DWORD PTR [ebp+0xc],esp
64011a98:	mov    esi,esp
64011a9a:	push   eax
64011a9b:	call   0x64002860
64011aa0:	add    eax,0x10
64011aa3:	add    esp,0x4
64011aa6:	mov    DWORD PTR [esi],eax
64011aa8:	call   0x640023a0
64011aad:	add    esp,0xc
64011ab0:	lea    eax,[ebp+0xc]
64011ab3:	push   edi
64011ab4:	push   eax
64011ab5:	call   0x64003450
64011aba:	add    esp,0x8
64011abd:	push   0x64026478
64011ac2:	push   eax
64011ac3:	lea    ecx,[ebp+0x8]
64011ac6:	push   ecx
64011ac7:	mov    BYTE PTR [ebp-0x4],0x8
64011acb:	call   0x64011150
64011ad0:	add    esp,0xc
64011ad3:	mov    eax,DWORD PTR [ebp+0xc]
64011ad6:	add    eax,0xfffffff0
64011ad9:	mov    BYTE PTR [ebp-0x4],0xa
64011add:	lea    edx,[eax+0xc]
64011ae0:	or     ecx,0xffffffff
64011ae3:	lock xadd DWORD PTR [edx],ecx
64011ae7:	dec    ecx
64011ae8:	test   ecx,ecx
64011aea:	jg     0x64011af6
64011aec:	mov    ecx,DWORD PTR [eax]
64011aee:	mov    edx,DWORD PTR [ecx]
64011af0:	push   eax
64011af1:	mov    eax,DWORD PTR [edx+0x4]
64011af4:	call   eax
64011af6:	mov    eax,DWORD PTR [ebp+0x18]
64011af9:	cmp    eax,edi
64011afb:	mov    ebx,eax
64011afd:	jne    0x64011b03
64011aff:	xor    eax,eax
64011b01:	jmp    0x64011b33
64011b03:	push   eax
64011b04:	call   DWORD PTR ds:0x64026054
64011b0a:	add    eax,0x1
64011b0d:	cmp    eax,0x3fffffff
64011b12:	jle    0x64011b18
64011b14:	xor    eax,eax
64011b16:	jmp    0x64011b33
64011b18:	lea    esi,[eax+eax*1]
64011b1b:	mov    eax,esi
64011b1d:	call   0x640146f0
64011b22:	mov    ecx,DWORD PTR [ebp+0x0]
64011b25:	mov    DWORD PTR [ebp-0x10],esp
64011b28:	mov    eax,esp
64011b2a:	push   ecx
64011b2b:	push   esi
64011b2c:	push   ebx
64011b2d:	push   eax
64011b2e:	call   0x64002b40
64011b33:	push   eax
64011b34:	lea    ecx,[ebp+0x4]
64011b37:	call   0x640065a0
64011b3c:	lea    edx,[ebp+0x8]
64011b3f:	push   edx
64011b40:	lea    eax,[ebp+0x4]
64011b43:	push   eax
64011b44:	mov    BYTE PTR [ebp-0x4],0xb
64011b48:	call   0x640024f0
64011b4d:	mov    eax,DWORD PTR [ebp+0x4]
64011b50:	add    eax,0xfffffff0
64011b53:	add    esp,0x8
64011b56:	mov    BYTE PTR [ebp-0x4],0xa
64011b5a:	lea    ecx,[eax+0xc]
64011b5d:	or     edx,0xffffffff
64011b60:	lock xadd DWORD PTR [ecx],edx
64011b64:	dec    edx
64011b65:	test   edx,edx
64011b67:	jg     0x64011b73
64011b69:	mov    ecx,DWORD PTR [eax]
64011b6b:	mov    edx,DWORD PTR [ecx]
64011b6d:	push   eax
64011b6e:	mov    eax,DWORD PTR [edx+0x4]
64011b71:	call   eax
64011b73:	push   0x40
64011b75:	xor    eax,eax
64011b77:	lea    ecx,[ebp-0x78]
64011b7a:	push   edi
64011b7b:	push   ecx
64011b7c:	mov    DWORD PTR [ebp-0x20],edi
64011b7f:	mov    DWORD PTR [ebp-0x1c],eax
64011b82:	mov    DWORD PTR [ebp-0x18],eax
64011b85:	mov    DWORD PTR [ebp-0x14],eax
64011b88:	call   0x64014670
64011b8d:	lea    edx,[ebp+0x1c]
64011b90:	push   edx
64011b91:	mov    DWORD PTR [ebp-0x7c],0x44
64011b98:	call   0x640014a0
64011b9d:	add    esp,0x10
64011ba0:	cmp    DWORD PTR [ebp+0x34],0x10
64011ba4:	mov    ebx,DWORD PTR [ebp+0x20]
64011ba7:	mov    BYTE PTR [ebp-0x4],0xc
64011bab:	jae    0x64011bb0
64011bad:	lea    ebx,[ebp+0x20]
64011bb0:	mov    esi,DWORD PTR [ebp+0x18]
64011bb3:	call   0x6400df20
64011bb8:	lea    ecx,[ebp-0x20]
64011bbb:	push   ecx
64011bbc:	lea    edx,[ebp-0x7c]
64011bbf:	push   edx
64011bc0:	push   edi
64011bc1:	push   ebx
64011bc2:	push   0x400
64011bc7:	push   0x1
64011bc9:	push   edi
64011bca:	push   edi
64011bcb:	push   edi
64011bcc:	push   esi
64011bcd:	call   eax
64011bcf:	cmp    eax,edi
64011bd1:	je     0x64011be5
64011bd3:	mov    eax,DWORD PTR [ebp-0x1c]
64011bd6:	mov    esi,DWORD PTR ds:0x64026040
64011bdc:	push   eax
64011bdd:	call   esi
64011bdf:	mov    ecx,DWORD PTR [ebp-0x20]
64011be2:	push   ecx
64011be3:	call   esi
64011be5:	mov    esi,DWORD PTR [ebp+0x18]
64011be8:	call   0x6400e000
64011bed:	push   0x4
64011bef:	push   edi
64011bf0:	push   esi
64011bf1:	call   eax
64011bf3:	mov    esi,DWORD PTR [ebp+0x14]
64011bf6:	call   0x6400e000
64011bfb:	push   0x4
64011bfd:	push   edi
64011bfe:	push   esi
64011bff:	call   eax
64011c01:	cmp    DWORD PTR [ebp+0x34],0x10
64011c05:	jb     0x64011c13
64011c07:	mov    edx,DWORD PTR [ebp+0x20]
64011c0a:	push   edx
64011c0b:	call   0x64013712
64011c10:	add    esp,0x4
64011c13:	mov    eax,DWORD PTR [ebp+0x8]
64011c16:	add    eax,0xfffffff0
64011c19:	mov    DWORD PTR [ebp+0x34],0xf
64011c20:	mov    DWORD PTR [ebp+0x30],edi
64011c23:	mov    BYTE PTR [ebp+0x20],0x0
64011c27:	mov    BYTE PTR [ebp-0x4],0x7
64011c2b:	lea    ecx,[eax+0xc]
64011c2e:	or     edx,0xffffffff
64011c31:	lock xadd DWORD PTR [ecx],edx
64011c35:	dec    edx
64011c36:	test   edx,edx
64011c38:	jg     0x64011c44
64011c3a:	mov    ecx,DWORD PTR [eax]
64011c3c:	mov    edx,DWORD PTR [ecx]
64011c3e:	push   eax
64011c3f:	mov    eax,DWORD PTR [edx+0x4]
64011c42:	call   eax
64011c44:	mov    eax,DWORD PTR [ebp+0x18]
64011c47:	add    eax,0xfffffff0
64011c4a:	mov    BYTE PTR [ebp-0x4],0x6
64011c4e:	lea    ecx,[eax+0xc]
64011c51:	or     edx,0xffffffff
64011c54:	lock xadd DWORD PTR [ecx],edx
64011c58:	dec    edx
64011c59:	test   edx,edx
64011c5b:	jg     0x64011c67
64011c5d:	mov    ecx,DWORD PTR [eax]
64011c5f:	mov    edx,DWORD PTR [ecx]
64011c61:	push   eax
64011c62:	mov    eax,DWORD PTR [edx+0x4]
64011c65:	call   eax
64011c67:	mov    eax,DWORD PTR [ebp+0x14]
64011c6a:	add    eax,0xfffffff0
64011c6d:	mov    BYTE PTR [ebp-0x4],0x5
64011c71:	lea    ecx,[eax+0xc]
64011c74:	or     edx,0xffffffff
64011c77:	lock xadd DWORD PTR [ecx],edx
64011c7b:	dec    edx
64011c7c:	test   edx,edx
64011c7e:	jg     0x64011c8a
64011c80:	mov    ecx,DWORD PTR [eax]
64011c82:	mov    edx,DWORD PTR [ecx]
64011c84:	push   eax
64011c85:	mov    eax,DWORD PTR [edx+0x4]
64011c88:	call   eax
64011c8a:	mov    eax,DWORD PTR [ebp+0x10]
64011c8d:	add    eax,0xfffffff0
64011c90:	mov    BYTE PTR [ebp-0x4],0x4
64011c94:	lea    ecx,[eax+0xc]
64011c97:	or     edx,0xffffffff
64011c9a:	lock xadd DWORD PTR [ecx],edx
64011c9e:	dec    edx
64011c9f:	test   edx,edx
64011ca1:	jg     0x64011cb7
64011ca3:	mov    ecx,DWORD PTR [eax]
64011ca5:	mov    edx,DWORD PTR [ecx]
64011ca7:	push   eax
64011ca8:	mov    eax,DWORD PTR [edx+0x4]
64011cab:	call   eax
64011cad:	jmp    0x64011cb7
64011caf:	mov    eax,0x64011cb5
64011cb4:	ret    
64011cb5:	xor    edi,edi
64011cb7:	mov    esi,DWORD PTR [ebp-0x28]
64011cba:	cmp    esi,edi
64011cbc:	je     0x64011ccd
64011cbe:	push   esi
64011cbf:	call   0x64010060
64011cc4:	push   esi
64011cc5:	call   0x64013712
64011cca:	add    esp,0x8
64011ccd:	mov    esi,0x10
64011cd2:	cmp    DWORD PTR [ebp+0x6c],esi
64011cd5:	jb     0x64011ce3
64011cd7:	mov    ecx,DWORD PTR [ebp+0x58]
64011cda:	push   ecx
64011cdb:	call   0x64013712
64011ce0:	add    esp,0x4
64011ce3:	cmp    DWORD PTR [ebp+0x50],esi
64011ce6:	mov    DWORD PTR [ebp+0x6c],0xf
64011ced:	mov    DWORD PTR [ebp+0x68],edi
64011cf0:	mov    BYTE PTR [ebp+0x58],0x0
64011cf4:	jb     0x64011d1a
64011cf6:	mov    edx,DWORD PTR [ebp+0x3c]
64011cf9:	push   edx
64011cfa:	call   0x64013712
64011cff:	add    esp,0x4
64011d02:	jmp    0x64011d1a
64011d04:	mov    eax,0x64011d0a
64011d09:	ret    
64011d0a:	lea    ecx,[ebp-0x38]
64011d0d:	call   0x64010ed0
64011d12:	lea    ecx,[ebp+0x38]
64011d15:	call   0x64011030
64011d1a:	lea    esp,[ebp-0x8c]
64011d20:	mov    ecx,DWORD PTR [ebp-0xc]
64011d23:	mov    DWORD PTR fs:0x0,ecx
64011d2a:	pop    ecx
64011d2b:	pop    edi
64011d2c:	pop    esi
64011d2d:	pop    ebx
64011d2e:	mov    ecx,DWORD PTR [ebp+0x70]
64011d31:	xor    ecx,ebp
64011d33:	call   0x64013f6c
64011d38:	add    ebp,0x74
64011d3b:	mov    esp,ebp
64011d3d:	pop    ebp
64011d3e:	ret    
64011d3f:	int3   
64011d40:	push   ecx
64011d41:	push   esi
64011d42:	mov    esi,ecx
64011d44:	mov    eax,DWORD PTR [esi+0x4]
64011d47:	test   eax,eax
64011d49:	je     0x64011d67
64011d4b:	mov    ecx,DWORD PTR [esp+0x4]
64011d4f:	mov    edx,DWORD PTR [esi+0x8]
64011d52:	push   ecx
64011d53:	push   esi
64011d54:	push   edx
64011d55:	push   eax
64011d56:	call   0x6400c120
64011d5b:	mov    eax,DWORD PTR [esi+0x4]
64011d5e:	push   eax
64011d5f:	call   0x64013712
64011d64:	add    esp,0x14
64011d67:	mov    DWORD PTR [esi+0x4],0x0
64011d6e:	mov    DWORD PTR [esi+0x8],0x0
64011d75:	mov    DWORD PTR [esi+0xc],0x0
64011d7c:	pop    esi
64011d7d:	pop    ecx
64011d7e:	ret    
64011d7f:	int3   
64011d80:	push   0xffffffff
64011d82:	push   0x6402369e
64011d87:	mov    eax,fs:0x0
64011d8d:	push   eax
64011d8e:	push   ecx
64011d8f:	push   ebx
64011d90:	push   esi
64011d91:	push   edi
64011d92:	mov    eax,ds:0x6402f09c
64011d97:	xor    eax,esp
64011d99:	push   eax
64011d9a:	lea    eax,[esp+0x14]
64011d9e:	mov    fs:0x0,eax
64011da4:	mov    eax,0x1
64011da9:	test   BYTE PTR ds:0x640304c8,al
64011daf:	jne    0x64011dea
64011db1:	or     DWORD PTR ds:0x640304c8,eax
64011db7:	push   0x64025790
64011dbc:	mov    DWORD PTR ds:0x640304bc,0x0
64011dc6:	mov    DWORD PTR ds:0x640304c0,0x0
64011dd0:	mov    DWORD PTR ds:0x640304c4,0x0
64011dda:	call   0x6401409f
64011ddf:	add    esp,0x4
64011de2:	mov    DWORD PTR [esp+0x1c],0xffffffff
64011dea:	mov    esi,DWORD PTR ds:0x640304bc
64011df0:	test   esi,esi
64011df2:	je     0x64011e07
64011df4:	mov    edi,DWORD PTR ds:0x640304c0
64011dfa:	mov    eax,edi
64011dfc:	sub    eax,esi
64011dfe:	sar    eax,0x2
64011e01:	jne    0x64011f1d
64011e07:	push   0x64026588
64011e0c:	push   0xc
64011e0e:	push   0x64026578
64011e13:	call   0x64006840
64011e18:	mov    esi,DWORD PTR ds:0x640261c8
64011e1e:	add    esp,0xc
64011e21:	push   eax
64011e22:	call   esi
64011e24:	lea    ecx,[esp+0x10]
64011e28:	push   ecx
64011e29:	mov    ecx,0x640304b8
64011e2e:	mov    DWORD PTR [esp+0x14],eax
64011e32:	call   0x64011840
64011e37:	push   0x64026538
64011e3c:	push   0xc
64011e3e:	push   0x64026528
64011e43:	call   0x64006840
64011e48:	add    esp,0xc
64011e4b:	push   eax
64011e4c:	call   esi
64011e4e:	lea    edx,[esp+0x10]
64011e52:	push   edx
64011e53:	mov    ecx,0x640304b8
64011e58:	mov    DWORD PTR [esp+0x14],eax
64011e5c:	call   0x64011840
64011e61:	push   0x640264f8
64011e66:	push   0xc
64011e68:	push   0x64026528
64011e6d:	call   0x64006840
64011e72:	add    esp,0xc
64011e75:	push   eax
64011e76:	call   esi
64011e78:	mov    DWORD PTR [esp+0x10],eax
64011e7c:	lea    eax,[esp+0x10]
64011e80:	push   eax
64011e81:	mov    ecx,0x640304b8
64011e86:	call   0x64011840
64011e8b:	push   0x640264d0
64011e90:	push   0xc
64011e92:	push   0x640264c0
64011e97:	call   0x64006840
64011e9c:	add    esp,0xc
64011e9f:	push   eax
64011ea0:	call   esi
64011ea2:	lea    ecx,[esp+0x10]
64011ea6:	push   ecx
64011ea7:	mov    ecx,0x640304b8
64011eac:	mov    DWORD PTR [esp+0x14],eax
64011eb0:	call   0x64011840
64011eb5:	push   0x64026490
64011eba:	push   0xc
64011ebc:	push   0x640264c0
64011ec1:	call   0x64006840
64011ec6:	add    esp,0xc
64011ec9:	push   eax
64011eca:	call   esi
64011ecc:	lea    edx,[esp+0x10]
64011ed0:	push   edx
64011ed1:	mov    ecx,0x640304b8
64011ed6:	mov    DWORD PTR [esp+0x14],eax
64011eda:	call   0x64011840
64011edf:	call   DWORD PTR ds:0x6402605c
64011ee5:	push   eax
64011ee6:	call   0x6401471c
64011eeb:	mov    eax,ds:0x640304bc
64011ef0:	add    esp,0x4
64011ef3:	test   eax,eax
64011ef5:	jne    0x64011efb
64011ef7:	xor    esi,esi
64011ef9:	jmp    0x64011f06
64011efb:	mov    esi,DWORD PTR ds:0x640304c0
64011f01:	sub    esi,eax
64011f03:	sar    esi,0x2
64011f06:	call   0x64014729
64011f0b:	mov    edi,DWORD PTR ds:0x640304c0
64011f11:	xor    edx,edx
64011f13:	div    esi
64011f15:	mov    esi,DWORD PTR ds:0x640304bc
64011f1b:	jmp    0x64011f23
64011f1d:	mov    edx,DWORD PTR ds:0x640304b4
64011f23:	test   esi,esi
64011f25:	jne    0x64011f2b
64011f27:	xor    ecx,ecx
64011f29:	jmp    0x64011f32
64011f2b:	mov    ecx,edi
64011f2d:	sub    ecx,esi
64011f2f:	sar    ecx,0x2
64011f32:	lea    eax,[edx+0x1]
64011f35:	xor    edx,edx
64011f37:	div    ecx
64011f39:	test   esi,esi
64011f3b:	mov    DWORD PTR ds:0x640304b4,edx
64011f41:	mov    ebx,edx
64011f43:	je     0x64011f4e
64011f45:	sub    edi,esi
64011f47:	sar    edi,0x2
64011f4a:	cmp    edx,edi
64011f4c:	jb     0x64011f6e
64011f4e:	call   0x64013ac8
64011f53:	mov    eax,ds:0x640304bc
64011f58:	mov    eax,DWORD PTR [eax+ebx*4]
64011f5b:	mov    ecx,DWORD PTR [esp+0x14]
64011f5f:	mov    DWORD PTR fs:0x0,ecx
64011f66:	pop    ecx
64011f67:	pop    edi
64011f68:	pop    esi
64011f69:	pop    ebx
64011f6a:	add    esp,0x10
64011f6d:	ret    
64011f6e:	mov    eax,DWORD PTR [esi+ebx*4]
64011f71:	mov    ecx,DWORD PTR [esp+0x14]
64011f75:	mov    DWORD PTR fs:0x0,ecx
64011f7c:	pop    ecx
64011f7d:	pop    edi
64011f7e:	pop    esi
64011f7f:	pop    ebx
64011f80:	add    esp,0x10
64011f83:	ret    
64011f84:	int3   
64011f85:	int3   
64011f86:	int3   
64011f87:	int3   
64011f88:	int3   
64011f89:	int3   
64011f8a:	int3   
64011f8b:	int3   
64011f8c:	int3   
64011f8d:	int3   
64011f8e:	int3   
64011f8f:	int3   
64011f90:	push   ebp
64011f91:	mov    ebp,esp
64011f93:	push   0xffffffff
64011f95:	push   0x640236c8
64011f9a:	mov    eax,fs:0x0
64011fa0:	push   eax
64011fa1:	sub    esp,0x8
64011fa4:	push   ebx
64011fa5:	push   esi
64011fa6:	push   edi
64011fa7:	mov    eax,ds:0x6402f09c
64011fac:	xor    eax,ebp
64011fae:	push   eax
64011faf:	lea    eax,[ebp-0xc]
64011fb2:	mov    fs:0x0,eax
64011fb8:	mov    DWORD PTR [ebp-0x10],esp
64011fbb:	xor    ebx,ebx
64011fbd:	mov    DWORD PTR [ebp-0x4],ebx
64011fc0:	call   0x64011d80
64011fc5:	lea    ecx,[ebp-0x14]
64011fc8:	mov    edi,eax
64011fca:	call   0x6400a270
64011fcf:	mov    eax,DWORD PTR [ebp+0x8]
64011fd2:	cmp    DWORD PTR [eax+0x18],0x10
64011fd6:	mov    ecx,DWORD PTR [eax+0x14]
64011fd9:	mov    BYTE PTR [ebp-0x4],0x1
64011fdd:	jb     0x64011fe4
64011fdf:	mov    eax,DWORD PTR [eax+0x4]
64011fe2:	jmp    0x64011fe7
64011fe4:	add    eax,0x4
64011fe7:	mov    esi,DWORD PTR [ebp+0xc]
64011fea:	push   0xffffffff
64011fec:	push   esi
64011fed:	add    ecx,0x1
64011ff0:	push   ecx
64011ff1:	push   eax
64011ff2:	push   edi
64011ff3:	lea    ecx,[ebp-0x14]
64011ff6:	call   0x6400a290
64011ffb:	cmp    al,bl
64011ffd:	je     0x6401201e
64011fff:	lea    ecx,[ebp-0x14]
64012002:	mov    BYTE PTR [ebp-0x4],bl
64012005:	call   0x6400a280
6401200a:	mov    al,0x1
6401200c:	mov    ecx,DWORD PTR [ebp-0xc]
6401200f:	mov    DWORD PTR fs:0x0,ecx
64012016:	pop    ecx
64012017:	pop    edi
64012018:	pop    esi
64012019:	pop    ebx
6401201a:	mov    esp,ebp
6401201c:	pop    ebp
6401201d:	ret    
6401201e:	push   ebx
6401201f:	push   0x640286e6
64012024:	mov    ecx,esi
64012026:	call   0x64001880
6401202b:	lea    ecx,[ebp-0x14]
6401202e:	mov    BYTE PTR [ebp-0x4],bl
64012031:	call   0x6400a280
64012036:	xor    al,al
64012038:	mov    ecx,DWORD PTR [ebp-0xc]
6401203b:	mov    DWORD PTR fs:0x0,ecx
64012042:	pop    ecx
64012043:	pop    edi
64012044:	pop    esi
64012045:	pop    ebx
64012046:	mov    esp,ebp
64012048:	pop    ebp
64012049:	ret    
6401204a:	mov    eax,0x64012036
6401204f:	ret    
64012050:	push   ecx
64012051:	push   esi
64012052:	push   0x640265c4
64012057:	push   0x17
64012059:	push   0x640265ac
6401205e:	mov    DWORD PTR [esp+0x10],0x0
64012066:	call   0x64006840
6401206b:	mov    esi,DWORD PTR [esp+0x18]
6401206f:	add    esp,0xc
64012072:	push   eax
64012073:	mov    ecx,esi
64012075:	call   0x640065a0
6401207a:	mov    eax,esi
6401207c:	pop    esi
6401207d:	pop    ecx
6401207e:	ret    
6401207f:	int3   
64012080:	push   0xffffffff
64012082:	push   0x640236f8
64012087:	mov    eax,fs:0x0
6401208d:	push   eax
6401208e:	push   ecx
6401208f:	push   esi
64012090:	mov    eax,ds:0x6402f09c
64012095:	xor    eax,esp
64012097:	push   eax
64012098:	lea    eax,[esp+0xc]
6401209c:	mov    fs:0x0,eax
640120a2:	lea    eax,[esp+0x8]
640120a6:	push   eax
640120a7:	call   0x64012050
640120ac:	add    esp,0x4
640120af:	mov    eax,DWORD PTR [eax]
640120b1:	push   eax
640120b2:	push   0x0
640120b4:	mov    DWORD PTR [esp+0x1c],0x0
640120bc:	call   0x640064a0
640120c1:	push   eax
640120c2:	call   DWORD PTR ds:0x64026064
640120c8:	mov    esi,eax
640120ca:	mov    eax,DWORD PTR [esp+0x8]
640120ce:	add    eax,0xfffffff0
640120d1:	mov    DWORD PTR [esp+0x14],0xffffffff
640120d9:	lea    ecx,[eax+0xc]
640120dc:	or     edx,0xffffffff
640120df:	lock xadd DWORD PTR [ecx],edx
640120e3:	dec    edx
640120e4:	test   edx,edx
640120e6:	jg     0x640120f2
640120e8:	mov    ecx,DWORD PTR [eax]
640120ea:	mov    edx,DWORD PTR [ecx]
640120ec:	push   eax
640120ed:	mov    eax,DWORD PTR [edx+0x4]
640120f0:	call   eax
640120f2:	test   esi,esi
640120f4:	jne    0x64012109
640120f6:	xor    al,al
640120f8:	mov    ecx,DWORD PTR [esp+0xc]
640120fc:	mov    DWORD PTR fs:0x0,ecx
64012103:	pop    ecx
64012104:	pop    esi
64012105:	add    esp,0x10
64012108:	ret    
64012109:	push   0x0
6401210b:	push   esi
6401210c:	call   DWORD PTR ds:0x640260b4
64012112:	test   eax,eax
64012114:	sete   al
64012117:	mov    ecx,DWORD PTR [esp+0xc]
6401211b:	mov    DWORD PTR fs:0x0,ecx
64012122:	pop    ecx
64012123:	pop    esi
64012124:	add    esp,0x10
64012127:	ret    
64012128:	int3   
64012129:	int3   
6401212a:	int3   
6401212b:	int3   
6401212c:	int3   
6401212d:	int3   
6401212e:	int3   
6401212f:	int3   
64012130:	push   0xffffffff
64012132:	push   0x64023730
64012137:	mov    eax,fs:0x0
6401213d:	push   eax
6401213e:	sub    esp,0x8
64012141:	push   ebx
64012142:	push   esi
64012143:	push   edi
64012144:	mov    eax,ds:0x6402f09c
64012149:	xor    eax,esp
6401214b:	push   eax
6401214c:	lea    eax,[esp+0x18]
64012150:	mov    fs:0x0,eax
64012156:	xor    ebx,ebx
64012158:	mov    DWORD PTR [esp+0x14],ebx
6401215c:	push   0x64026610
64012161:	push   0xf
64012163:	push   0x640265f0
64012168:	mov    DWORD PTR [esp+0x2c],ebx
6401216c:	call   0x64006b30
64012171:	add    esp,0xc
64012174:	push   eax
64012175:	lea    ecx,[esp+0x14]
64012179:	call   0x64002550
6401217e:	mov    eax,DWORD PTR [esp+0x10]
64012182:	push   ebx
64012183:	push   ebx
64012184:	push   0x3
64012186:	push   ebx
64012187:	push   ebx
64012188:	push   0xc0000000
6401218d:	push   eax
6401218e:	mov    BYTE PTR [esp+0x3c],0x1
64012193:	call   0x6400e1c0
64012198:	call   eax
6401219a:	mov    esi,eax
6401219c:	mov    eax,DWORD PTR [esp+0x10]
640121a0:	add    eax,0xfffffff0
640121a3:	mov    DWORD PTR [esp+0x14],esi
640121a7:	mov    BYTE PTR [esp+0x20],bl
640121ab:	or     edx,0xffffffff
640121ae:	lea    ecx,[eax+0xc]
640121b1:	lock xadd DWORD PTR [ecx],edx
640121b5:	dec    edx
640121b6:	cmp    esi,0xffffffff
640121b9:	je     0x640121f8
640121bb:	test   edx,edx
640121bd:	jg     0x640121c9
640121bf:	mov    ecx,DWORD PTR [eax]
640121c1:	mov    edx,DWORD PTR [ecx]
640121c3:	push   eax
640121c4:	mov    eax,DWORD PTR [edx+0x4]
640121c7:	call   eax
640121c9:	cmp    esi,ebx
640121cb:	je     0x640121e3
640121cd:	call   DWORD PTR ds:0x64026044
640121d3:	push   esi
640121d4:	mov    edi,eax
640121d6:	call   DWORD PTR ds:0x64026040
640121dc:	push   edi
640121dd:	call   DWORD PTR ds:0x64026060
640121e3:	mov    al,0x1
640121e5:	mov    ecx,DWORD PTR [esp+0x18]
640121e9:	mov    DWORD PTR fs:0x0,ecx
640121f0:	pop    ecx
640121f1:	pop    edi
640121f2:	pop    esi
640121f3:	pop    ebx
640121f4:	add    esp,0x14
640121f7:	ret    
640121f8:	test   edx,edx
640121fa:	jg     0x64012206
640121fc:	mov    ecx,DWORD PTR [eax]
640121fe:	mov    edx,DWORD PTR [ecx]
64012200:	push   eax
64012201:	mov    eax,DWORD PTR [edx+0x4]
64012204:	call   eax
64012206:	call   DWORD PTR ds:0x64026044
6401220c:	push   0xffffffff
6401220e:	mov    esi,eax
64012210:	call   DWORD PTR ds:0x64026040
64012216:	push   esi
64012217:	call   DWORD PTR ds:0x64026060
6401221d:	xor    al,al
6401221f:	mov    ecx,DWORD PTR [esp+0x18]
64012223:	mov    DWORD PTR fs:0x0,ecx
6401222a:	pop    ecx
6401222b:	pop    edi
6401222c:	pop    esi
6401222d:	pop    ebx
6401222e:	add    esp,0x14
64012231:	ret    
64012232:	int3   
64012233:	int3   
64012234:	int3   
64012235:	int3   
64012236:	int3   
64012237:	int3   
64012238:	int3   
64012239:	int3   
6401223a:	int3   
6401223b:	int3   
6401223c:	int3   
6401223d:	int3   
6401223e:	int3   
6401223f:	int3   
64012240:	push   ebp
64012241:	lea    ebp,[esp-0x128]
64012248:	sub    esp,0x128
6401224e:	push   0xffffffff
64012250:	push   0x64023851
64012255:	mov    eax,fs:0x0
6401225b:	push   eax
6401225c:	sub    esp,0x90
64012262:	mov    eax,ds:0x6402f09c
64012267:	xor    eax,ebp
64012269:	mov    DWORD PTR [ebp+0x124],eax
6401226f:	push   ebx
64012270:	push   esi
64012271:	push   edi
64012272:	push   eax
64012273:	lea    eax,[ebp-0xc]
64012276:	mov    fs:0x0,eax
6401227c:	mov    esi,DWORD PTR [ebp+0x130]
64012282:	xor    ebx,ebx
64012284:	mov    DWORD PTR [ebp-0x4],ebx
64012287:	mov    DWORD PTR [ebp-0x58],esi
6401228a:	mov    DWORD PTR [ebp-0x50],ebx
6401228d:	call   DWORD PTR ds:0x6402f06c
64012293:	mov    eax,ds:0x64030540
64012298:	mov    edx,DWORD PTR [eax+0xc]
6401229b:	mov    ecx,0x64030540
640122a0:	call   edx
640122a2:	add    eax,0x10
640122a5:	mov    DWORD PTR [esi],eax
640122a7:	push   0x640269bc
640122ac:	push   0xd
640122ae:	mov    edi,0x1
640122b3:	push   0x640269ac
640122b8:	mov    DWORD PTR [ebp-0x4],ebx
640122bb:	mov    DWORD PTR [ebp-0x50],edi
640122be:	call   0x64006840
640122c3:	add    esp,0xc
640122c6:	push   eax
640122c7:	mov    ecx,esi
640122c9:	call   0x64002620
640122ce:	push   0x6402697c
640122d3:	push   0x3
640122d5:	push   0x64026978
640122da:	call   0x64006840
640122df:	add    esp,0xc
640122e2:	push   eax
640122e3:	mov    ecx,esi
640122e5:	call   0x64002620
640122ea:	push   0x6402696c
640122ef:	mov    ecx,esi
640122f1:	call   0x64002620
640122f6:	push   0x64026930
640122fb:	push   0x3
640122fd:	push   0x6402692c
64012302:	call   0x64006840
64012307:	add    esp,0xc
6401230a:	push   eax
6401230b:	mov    ecx,esi
6401230d:	call   0x64002620
64012312:	push   0x64026924
64012317:	mov    ecx,esi
64012319:	call   0x64002620
6401231e:	mov    eax,ds:0x64030540
64012323:	mov    edx,DWORD PTR [eax+0xc]
64012326:	mov    ecx,0x64030540
6401232b:	call   edx
6401232d:	add    eax,0x10
64012330:	mov    DWORD PTR [ebp-0x4c],eax
64012333:	mov    eax,ds:0x64030540
64012338:	mov    edx,DWORD PTR [eax+0xc]
6401233b:	mov    ecx,0x64030540
64012340:	mov    DWORD PTR [ebp-0x4],edi
64012343:	call   edx
64012345:	add    eax,0x10
64012348:	mov    DWORD PTR [ebp-0x54],eax
6401234b:	lea    eax,[ebp+0x114]
64012351:	push   eax
64012352:	mov    BYTE PTR [ebp-0x4],0x2
64012356:	call   0x640062f0
6401235b:	add    esp,0x4
6401235e:	test   al,al
64012360:	je     0x64012400
64012366:	push   0x640268e8
6401236b:	push   0x4
6401236d:	push   0x640268e0
64012372:	call   0x64006840
64012377:	add    esp,0xc
6401237a:	push   eax
6401237b:	lea    ecx,[ebp-0x10]
6401237e:	call   0x640065a0
64012383:	mov    eax,DWORD PTR [eax]
64012385:	mov    ecx,DWORD PTR [eax-0xc]
64012388:	push   ecx
64012389:	push   eax
6401238a:	mov    ecx,esi
6401238c:	mov    BYTE PTR [ebp-0x4],0x3
64012390:	call   0x640029a0
64012395:	mov    eax,DWORD PTR [ebp-0x10]
64012398:	add    eax,0xfffffff0
6401239b:	mov    BYTE PTR [ebp-0x4],0x2
6401239f:	lea    ecx,[eax+0xc]
640123a2:	or     edx,0xffffffff
640123a5:	lock xadd DWORD PTR [ecx],edx
640123a9:	dec    edx
640123aa:	test   edx,edx
640123ac:	jg     0x640123b8
640123ae:	mov    ecx,DWORD PTR [eax]
640123b0:	mov    edx,DWORD PTR [ecx]
640123b2:	push   eax
640123b3:	mov    eax,DWORD PTR [edx+0x4]
640123b6:	call   eax
640123b8:	lea    ecx,[ebp+0x114]
640123be:	push   ecx
640123bf:	lea    edx,[ebp-0x10]
640123c2:	push   edx
640123c3:	call   0x64002e70
640123c8:	add    esp,0x8
640123cb:	mov    eax,DWORD PTR [eax]
640123cd:	mov    ecx,DWORD PTR [eax-0xc]
640123d0:	push   ecx
640123d1:	push   eax
640123d2:	mov    ecx,esi
640123d4:	mov    BYTE PTR [ebp-0x4],0x4
640123d8:	call   0x640029a0
640123dd:	mov    eax,DWORD PTR [ebp-0x10]
640123e0:	add    eax,0xfffffff0
640123e3:	mov    BYTE PTR [ebp-0x4],0x2
640123e7:	lea    ecx,[eax+0xc]
640123ea:	or     edx,0xffffffff
640123ed:	lock xadd DWORD PTR [ecx],edx
640123f1:	dec    edx
640123f2:	test   edx,edx
640123f4:	jg     0x64012400
640123f6:	mov    ecx,DWORD PTR [eax]
640123f8:	mov    edx,DWORD PTR [ecx]
640123fa:	push   eax
640123fb:	mov    eax,DWORD PTR [edx+0x4]
640123fe:	call   eax
64012400:	call   0x64010d30
64012405:	test   al,al
64012407:	je     0x64012425
64012409:	push   0x640268b4
6401240e:	push   0x6
64012410:	push   0x640268ac
64012415:	call   0x64006840
6401241a:	add    esp,0xc
6401241d:	push   eax
6401241e:	mov    ecx,esi
64012420:	call   0x64002620
64012425:	call   0x64012130
6401242a:	test   al,al
6401242c:	je     0x6401244a
6401242e:	push   0x64026870
64012433:	push   0x6
64012435:	push   0x64026868
6401243a:	call   0x64006840
6401243f:	add    esp,0xc
64012442:	push   eax
64012443:	mov    ecx,esi
64012445:	call   0x64002620
6401244a:	mov    edx,DWORD PTR ds:0x64030540
64012450:	mov    eax,DWORD PTR [edx+0xc]
64012453:	mov    ecx,0x64030540
64012458:	call   eax
6401245a:	add    eax,0x10
6401245d:	mov    DWORD PTR [ebp-0x28],eax
64012460:	mov    edx,DWORD PTR ds:0x64030540
64012466:	mov    eax,DWORD PTR [edx+0xc]
64012469:	mov    ecx,0x64030540
6401246e:	mov    BYTE PTR [ebp-0x4],0x5
64012472:	call   eax
64012474:	add    eax,0x10
64012477:	mov    DWORD PTR [ebp-0x48],eax
6401247a:	mov    edx,DWORD PTR ds:0x64030540
64012480:	mov    eax,DWORD PTR [edx+0xc]
64012483:	mov    ecx,0x64030540
64012488:	mov    BYTE PTR [ebp-0x4],0x6
6401248c:	call   eax
6401248e:	add    eax,0x10
64012491:	mov    DWORD PTR [ebp-0x24],eax
64012494:	lea    ecx,[ebp-0x44]
64012497:	push   ecx
64012498:	lea    edx,[ebp-0x24]
6401249b:	push   edx
6401249c:	lea    eax,[ebp-0x28]
6401249f:	push   eax
640124a0:	mov    BYTE PTR [ebp-0x4],0x7
640124a4:	mov    DWORD PTR [ebp-0x44],ebx
640124a7:	mov    DWORD PTR [ebp-0x40],ebx
640124aa:	call   0x6400b0d0
640124af:	add    esp,0xc
640124b2:	test   al,al
640124b4:	je     0x640126f5
640124ba:	lea    ecx,[ebp-0x24]
640124bd:	push   ecx
640124be:	lea    edx,[ebp-0x14]
640124c1:	push   edx
640124c2:	call   0x64003110
640124c7:	mov    edi,eax
640124c9:	push   0x64026838
640124ce:	push   0x5
640124d0:	mov    bl,0x8
640124d2:	push   0x64026830
640124d7:	mov    BYTE PTR [ebp-0x4],bl
640124da:	call   0x64006840
640124df:	add    esp,0x14
640124e2:	push   eax
640124e3:	lea    ecx,[ebp-0x18]
640124e6:	call   0x640065a0
640124eb:	push   edi
640124ec:	push   eax
640124ed:	lea    eax,[ebp-0x10]
640124f0:	push   eax
640124f1:	mov    BYTE PTR [ebp-0x4],0x9
640124f5:	call   0x64011080
640124fa:	add    esp,0xc
640124fd:	mov    eax,DWORD PTR [eax]
640124ff:	mov    ecx,DWORD PTR [eax-0xc]
64012502:	push   ecx
64012503:	push   eax
64012504:	mov    ecx,esi
64012506:	mov    BYTE PTR [ebp-0x4],0xa
6401250a:	call   0x640029a0
6401250f:	mov    eax,DWORD PTR [ebp-0x10]
64012512:	add    eax,0xfffffff0
64012515:	mov    BYTE PTR [ebp-0x4],0x9
64012519:	lea    ecx,[eax+0xc]
6401251c:	or     edx,0xffffffff
6401251f:	lock xadd DWORD PTR [ecx],edx
64012523:	dec    edx
64012524:	test   edx,edx
64012526:	jg     0x64012532
64012528:	mov    ecx,DWORD PTR [eax]
6401252a:	mov    edx,DWORD PTR [ecx]
6401252c:	push   eax
6401252d:	mov    eax,DWORD PTR [edx+0x4]
64012530:	call   eax
64012532:	mov    eax,DWORD PTR [ebp-0x18]
64012535:	add    eax,0xfffffff0
64012538:	mov    BYTE PTR [ebp-0x4],bl
6401253b:	lea    ecx,[eax+0xc]
6401253e:	or     edx,0xffffffff
64012541:	lock xadd DWORD PTR [ecx],edx
64012545:	dec    edx
64012546:	test   edx,edx
64012548:	jg     0x64012554
6401254a:	mov    ecx,DWORD PTR [eax]
6401254c:	mov    edx,DWORD PTR [ecx]
6401254e:	push   eax
6401254f:	mov    eax,DWORD PTR [edx+0x4]
64012552:	call   eax
64012554:	mov    eax,DWORD PTR [ebp-0x14]
64012557:	add    eax,0xfffffff0
6401255a:	mov    BYTE PTR [ebp-0x4],0x7
6401255e:	lea    ecx,[eax+0xc]
64012561:	or     edx,0xffffffff
64012564:	lock xadd DWORD PTR [ecx],edx
64012568:	dec    edx
64012569:	test   edx,edx
6401256b:	jg     0x64012577
6401256d:	mov    ecx,DWORD PTR [eax]
6401256f:	mov    edx,DWORD PTR [ecx]
64012571:	push   eax
64012572:	mov    eax,DWORD PTR [edx+0x4]
64012575:	call   eax
64012577:	lea    ecx,[ebp-0x28]
6401257a:	push   ecx
6401257b:	lea    edx,[ebp-0x10]
6401257e:	push   edx
6401257f:	call   0x64003110
64012584:	mov    edi,eax
64012586:	push   0x6402680c
6401258b:	push   0x7
6401258d:	mov    bl,0xb
6401258f:	push   0x64026804
64012594:	mov    BYTE PTR [ebp-0x4],bl
64012597:	call   0x64006840
6401259c:	add    esp,0x14
6401259f:	push   eax
640125a0:	lea    ecx,[ebp-0x18]
640125a3:	call   0x640065a0
640125a8:	push   edi
640125a9:	push   eax
640125aa:	lea    eax,[ebp-0x14]
640125ad:	push   eax
640125ae:	mov    BYTE PTR [ebp-0x4],0xc
640125b2:	call   0x64011080
640125b7:	add    esp,0xc
640125ba:	mov    eax,DWORD PTR [eax]
640125bc:	mov    ecx,DWORD PTR [eax-0xc]
640125bf:	push   ecx
640125c0:	push   eax
640125c1:	mov    ecx,esi
640125c3:	mov    BYTE PTR [ebp-0x4],0xd
640125c7:	call   0x640029a0
640125cc:	mov    eax,DWORD PTR [ebp-0x14]
640125cf:	add    eax,0xfffffff0
640125d2:	mov    BYTE PTR [ebp-0x4],0xc
640125d6:	lea    ecx,[eax+0xc]
640125d9:	or     edx,0xffffffff
640125dc:	lock xadd DWORD PTR [ecx],edx
640125e0:	dec    edx
640125e1:	test   edx,edx
640125e3:	jg     0x640125ef
640125e5:	mov    ecx,DWORD PTR [eax]
640125e7:	mov    edx,DWORD PTR [ecx]
640125e9:	push   eax
640125ea:	mov    eax,DWORD PTR [edx+0x4]
640125ed:	call   eax
640125ef:	mov    eax,DWORD PTR [ebp-0x18]
640125f2:	add    eax,0xfffffff0
640125f5:	mov    BYTE PTR [ebp-0x4],bl
640125f8:	lea    ecx,[eax+0xc]
640125fb:	or     edx,0xffffffff
640125fe:	lock xadd DWORD PTR [ecx],edx
64012602:	dec    edx
64012603:	test   edx,edx
64012605:	jg     0x64012611
64012607:	mov    ecx,DWORD PTR [eax]
64012609:	mov    edx,DWORD PTR [ecx]
6401260b:	push   eax
6401260c:	mov    eax,DWORD PTR [edx+0x4]
6401260f:	call   eax
64012611:	mov    eax,DWORD PTR [ebp-0x10]
64012614:	add    eax,0xfffffff0
64012617:	mov    BYTE PTR [ebp-0x4],0x7
6401261b:	lea    ecx,[eax+0xc]
6401261e:	or     edx,0xffffffff
64012621:	lock xadd DWORD PTR [ecx],edx
64012625:	dec    edx
64012626:	test   edx,edx
64012628:	jg     0x64012634
6401262a:	mov    ecx,DWORD PTR [eax]
6401262c:	mov    edx,DWORD PTR [ecx]
6401262e:	push   eax
6401262f:	mov    eax,DWORD PTR [edx+0x4]
64012632:	call   eax
64012634:	mov    edx,DWORD PTR ds:0x64030540
6401263a:	mov    eax,DWORD PTR [edx+0xc]
6401263d:	mov    ecx,0x64030540
64012642:	call   eax
64012644:	add    eax,0x10
64012647:	mov    DWORD PTR [ebp-0x10],eax
6401264a:	mov    ecx,DWORD PTR [ebp-0x40]
6401264d:	mov    edx,DWORD PTR [ebp-0x44]
64012650:	push   ecx
64012651:	push   edx
64012652:	push   0x640267cc
64012657:	push   0xc
64012659:	push   0x640267b0
6401265e:	mov    BYTE PTR [ebp-0x4],0xe
64012662:	call   0x64006b30
64012667:	add    esp,0xc
6401266a:	push   eax
6401266b:	lea    eax,[ebp-0x10]
6401266e:	push   eax
6401266f:	call   0x64001d40
64012674:	add    esp,0x10
64012677:	call   DWORD PTR ds:0x6402f06c
6401267d:	mov    edi,DWORD PTR [ebp-0x10]
64012680:	cmp    DWORD PTR [edi-0x4],0x1
64012684:	mov    DWORD PTR [ebp-0x14],eax
64012687:	jle    0x64012698
64012689:	mov    ecx,DWORD PTR [edi-0xc]
6401268c:	push   ecx
6401268d:	lea    ecx,[ebp-0x10]
64012690:	call   0x64001950
64012695:	mov    edi,DWORD PTR [ebp-0x10]
64012698:	test   edi,edi
6401269a:	jne    0x640126a0
6401269c:	xor    eax,eax
6401269e:	jmp    0x640126cd
640126a0:	push   edi
640126a1:	call   DWORD PTR ds:0x64026054
640126a7:	add    eax,0x1
640126aa:	cmp    eax,0x3fffffff
640126af:	jle    0x640126b5
640126b1:	xor    eax,eax
640126b3:	jmp    0x640126cd
640126b5:	lea    ebx,[eax+eax*1]
640126b8:	mov    eax,ebx
640126ba:	call   0x640146f0
640126bf:	mov    edx,DWORD PTR [ebp-0x14]
640126c2:	mov    eax,esp
640126c4:	push   edx
640126c5:	push   ebx
640126c6:	push   edi
640126c7:	push   eax
640126c8:	call   0x64002b40
640126cd:	push   eax
640126ce:	mov    ecx,esi
640126d0:	call   0x64002620
640126d5:	add    edi,0xfffffff0
640126d8:	mov    BYTE PTR [ebp-0x4],0x7
640126dc:	lea    eax,[edi+0xc]
640126df:	or     ecx,0xffffffff
640126e2:	lock xadd DWORD PTR [eax],ecx
640126e6:	dec    ecx
640126e7:	test   ecx,ecx
640126e9:	jg     0x640126f5
640126eb:	mov    ecx,DWORD PTR [edi]
640126ed:	mov    edx,DWORD PTR [ecx]
640126ef:	mov    eax,DWORD PTR [edx+0x4]
640126f2:	push   edi
640126f3:	call   eax
640126f5:	xor    edi,edi
640126f7:	mov    DWORD PTR [ebp-0x38],edi
640126fa:	mov    DWORD PTR [ebp-0x34],edi
640126fd:	mov    DWORD PTR [ebp-0x30],edi
64012700:	lea    ecx,[ebp-0x3c]
64012703:	push   ecx
64012704:	mov    BYTE PTR [ebp-0x4],0xf
64012708:	call   0x6400b280
6401270d:	add    esp,0x4
64012710:	mov    DWORD PTR [ebp-0x10],edi
64012713:	xor    ebx,ebx
64012715:	mov    eax,DWORD PTR [ebp-0x38]
64012718:	cmp    eax,edi
6401271a:	jne    0x64012720
6401271c:	xor    eax,eax
6401271e:	jmp    0x64012738
64012720:	mov    ecx,DWORD PTR [ebp-0x34]
64012723:	sub    ecx,eax
64012725:	mov    eax,0x92492493
6401272a:	imul   ecx
6401272c:	add    edx,ecx
6401272e:	sar    edx,0x4
64012731:	mov    eax,edx
64012733:	shr    eax,0x1f
64012736:	add    eax,edx
64012738:	cmp    DWORD PTR [ebp-0x10],eax
6401273b:	je     0x640127e6
64012741:	push   0x64026784
64012746:	push   0x5
64012748:	push   0x6402677c
6401274d:	call   0x64006840
64012752:	add    esp,0xc
64012755:	push   eax
64012756:	lea    ecx,[ebp-0x14]
64012759:	call   0x640065a0
6401275e:	mov    eax,DWORD PTR [eax]
64012760:	mov    ecx,DWORD PTR [eax-0xc]
64012763:	push   ecx
64012764:	push   eax
64012765:	mov    ecx,esi
64012767:	mov    BYTE PTR [ebp-0x4],0x10
6401276b:	call   0x640029a0
64012770:	mov    eax,DWORD PTR [ebp-0x14]
64012773:	add    eax,0xfffffff0
64012776:	mov    BYTE PTR [ebp-0x4],0xf
6401277a:	lea    edx,[eax+0xc]
6401277d:	or     ecx,0xffffffff
64012780:	lock xadd DWORD PTR [edx],ecx
64012784:	dec    ecx
64012785:	test   ecx,ecx
64012787:	jg     0x64012793
64012789:	mov    ecx,DWORD PTR [eax]
6401278b:	mov    edx,DWORD PTR [ecx]
6401278d:	push   eax
6401278e:	mov    eax,DWORD PTR [edx+0x4]
64012791:	call   eax
64012793:	mov    edi,DWORD PTR [ebp-0x38]
64012796:	test   edi,edi
64012798:	je     0x640127b7
6401279a:	mov    ecx,DWORD PTR [ebp-0x34]
6401279d:	sub    ecx,edi
6401279f:	mov    eax,0x92492493
640127a4:	imul   ecx
640127a6:	add    edx,ecx
640127a8:	sar    edx,0x4
640127ab:	mov    eax,edx
640127ad:	shr    eax,0x1f
640127b0:	add    eax,edx
640127b2:	cmp    DWORD PTR [ebp-0x10],eax
640127b5:	jb     0x640127bf
640127b7:	call   0x64013ac8
640127bc:	mov    edi,DWORD PTR [ebp-0x38]
640127bf:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
640127c4:	jb     0x640127cc
640127c6:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
640127ca:	jmp    0x640127d0
640127cc:	lea    edi,[ebx+edi*1+0x4]
640127d0:	push   edi
640127d1:	mov    ecx,esi
640127d3:	call   0x64002620
640127d8:	add    DWORD PTR [ebp-0x10],0x1
640127dc:	add    ebx,0x1c
640127df:	xor    edi,edi
640127e1:	jmp    0x64012715
640127e6:	call   DWORD PTR ds:0x6402f06c
640127ec:	push   0x110
640127f1:	lea    ecx,[ebp+0x4]
640127f4:	push   edi
640127f5:	push   ecx
640127f6:	mov    DWORD PTR [ebp-0x14],eax
640127f9:	call   0x64014670
640127fe:	mov    edx,DWORD PTR ds:0x64030540
64012804:	mov    eax,DWORD PTR [edx+0xc]
64012807:	add    esp,0xc
6401280a:	mov    ecx,0x64030540
6401280f:	mov    DWORD PTR [ebp+0x0],0x114
64012816:	call   eax
64012818:	add    eax,0x10
6401281b:	mov    DWORD PTR [ebp-0x10],eax
6401281e:	lea    ecx,[ebp+0x0]
64012821:	push   ecx
64012822:	mov    BYTE PTR [ebp-0x4],0x11
64012826:	call   DWORD PTR ds:0x6402606c
6401282c:	test   eax,eax
6401282e:	lea    ecx,[ebp-0x10]
64012831:	je     0x6401284b
64012833:	mov    edx,DWORD PTR [ebp+0x8]
64012836:	mov    eax,DWORD PTR [ebp+0x4]
64012839:	push   edx
6401283a:	push   eax
6401283b:	push   0x64026754
64012840:	push   ecx
64012841:	call   0x64001d40
64012846:	add    esp,0x10
64012849:	jmp    0x64012857
6401284b:	push   0xc
6401284d:	push   0x64026738
64012852:	call   0x64002aa0
64012857:	xor    eax,eax
64012859:	lea    edx,[ebp-0x8c]
6401285f:	push   edx
64012860:	mov    DWORD PTR [ebp-0x8c],edi
64012866:	mov    DWORD PTR [ebp-0x88],eax
6401286c:	mov    DWORD PTR [ebp-0x84],eax
64012872:	mov    DWORD PTR [ebp-0x80],eax
64012875:	mov    DWORD PTR [ebp-0x7c],eax
64012878:	mov    DWORD PTR [ebp-0x78],eax
6401287b:	mov    DWORD PTR [ebp-0x74],eax
6401287e:	mov    DWORD PTR [ebp-0x70],eax
64012881:	mov    DWORD PTR [ebp-0x6c],eax
64012884:	call   DWORD PTR ds:0x64026068
6401288a:	movzx  eax,WORD PTR [ebp-0x8c]
64012891:	cmp    eax,edi
64012893:	je     0x640128a3
64012895:	cmp    eax,0x9
64012898:	jne    0x640128b2
6401289a:	push   0x4
6401289c:	push   0x6402672c
640128a1:	jmp    0x640128aa
640128a3:	push   0x4
640128a5:	push   0x64026720
640128aa:	lea    ecx,[ebp-0x10]
640128ad:	call   0x640029a0
640128b2:	mov    ebx,DWORD PTR [ebp-0x10]
640128b5:	cmp    ebx,edi
640128b7:	jne    0x640128bd
640128b9:	xor    eax,eax
640128bb:	jmp    0x64012906
640128bd:	push   ebx
640128be:	call   DWORD PTR ds:0x64026054
640128c4:	add    eax,0x1
640128c7:	cmp    eax,0x3fffffff
640128cc:	jg     0x64012901
640128ce:	lea    ebx,[eax+eax*1]
640128d1:	mov    eax,ebx
640128d3:	call   0x640146f0
640128d8:	mov    edi,esp
640128da:	test   edi,edi
640128dc:	je     0x64012901
640128de:	mov    eax,DWORD PTR [ebp-0x10]
640128e1:	mov    ecx,DWORD PTR [ebp-0x14]
640128e4:	push   0x0
640128e6:	push   0x0
640128e8:	push   ebx
640128e9:	push   edi
640128ea:	push   0xffffffff
640128ec:	push   eax
640128ed:	push   0x0
640128ef:	push   ecx
640128f0:	mov    BYTE PTR [edi],0x0
640128f3:	call   DWORD PTR ds:0x64026028
640128f9:	neg    eax
640128fb:	sbb    eax,eax
640128fd:	and    eax,edi
640128ff:	jmp    0x64012903
64012901:	xor    eax,eax
64012903:	mov    ebx,DWORD PTR [ebp-0x10]
64012906:	push   eax
64012907:	mov    ecx,esi
64012909:	call   0x64002620
6401290e:	lea    eax,[ebx-0x10]
64012911:	mov    BYTE PTR [ebp-0x4],0xf
64012915:	lea    edx,[eax+0xc]
64012918:	or     ecx,0xffffffff
6401291b:	lock xadd DWORD PTR [edx],ecx
6401291f:	dec    ecx
64012920:	test   ecx,ecx
64012922:	jg     0x6401292e
64012924:	mov    ecx,DWORD PTR [eax]
64012926:	mov    edx,DWORD PTR [ecx]
64012928:	push   eax
64012929:	mov    eax,DWORD PTR [edx+0x4]
6401292c:	call   eax
6401292e:	lea    ecx,[ebp-0x20]
64012931:	push   ecx
64012932:	call   0x6400b840
64012937:	push   eax
64012938:	lea    edx,[ebp-0x10]
6401293b:	push   edx
6401293c:	mov    BYTE PTR [ebp-0x4],0x12
64012940:	call   0x64003110
64012945:	mov    edi,eax
64012947:	push   0x640266ec
6401294c:	push   0x7
6401294e:	push   0x640266e4
64012953:	mov    BYTE PTR [ebp-0x4],0x13
64012957:	call   0x64006840
6401295c:	add    esp,0x18
6401295f:	push   eax
64012960:	lea    ecx,[ebp-0x18]
64012963:	call   0x640065a0
64012968:	push   edi
64012969:	push   eax
6401296a:	lea    eax,[ebp-0x14]
6401296d:	mov    bl,0x14
6401296f:	push   eax
64012970:	mov    BYTE PTR [ebp-0x4],bl
64012973:	call   0x64011080
64012978:	add    esp,0xc
6401297b:	mov    eax,DWORD PTR [eax]
6401297d:	mov    ecx,DWORD PTR [eax-0xc]
64012980:	push   ecx
64012981:	push   eax
64012982:	mov    ecx,esi
64012984:	mov    BYTE PTR [ebp-0x4],0x15
64012988:	call   0x640029a0
6401298d:	mov    eax,DWORD PTR [ebp-0x14]
64012990:	add    eax,0xfffffff0
64012993:	mov    BYTE PTR [ebp-0x4],bl
64012996:	lea    ecx,[eax+0xc]
64012999:	or     edx,0xffffffff
6401299c:	lock xadd DWORD PTR [ecx],edx
640129a0:	dec    edx
640129a1:	test   edx,edx
640129a3:	jg     0x640129af
640129a5:	mov    ecx,DWORD PTR [eax]
640129a7:	mov    edx,DWORD PTR [ecx]
640129a9:	push   eax
640129aa:	mov    eax,DWORD PTR [edx+0x4]
640129ad:	call   eax
640129af:	mov    eax,DWORD PTR [ebp-0x18]
640129b2:	add    eax,0xfffffff0
640129b5:	mov    BYTE PTR [ebp-0x4],0x13
640129b9:	lea    ecx,[eax+0xc]
640129bc:	or     edx,0xffffffff
640129bf:	lock xadd DWORD PTR [ecx],edx
640129c3:	dec    edx
640129c4:	test   edx,edx
640129c6:	jg     0x640129d2
640129c8:	mov    ecx,DWORD PTR [eax]
640129ca:	mov    edx,DWORD PTR [ecx]
640129cc:	push   eax
640129cd:	mov    eax,DWORD PTR [edx+0x4]
640129d0:	call   eax
640129d2:	mov    eax,DWORD PTR [ebp-0x10]
640129d5:	add    eax,0xfffffff0
640129d8:	mov    BYTE PTR [ebp-0x4],0x12
640129dc:	lea    ecx,[eax+0xc]
640129df:	or     edx,0xffffffff
640129e2:	lock xadd DWORD PTR [ecx],edx
640129e6:	dec    edx
640129e7:	test   edx,edx
640129e9:	jg     0x640129f5
640129eb:	mov    ecx,DWORD PTR [eax]
640129ed:	mov    edx,DWORD PTR [ecx]
640129ef:	push   eax
640129f0:	mov    eax,DWORD PTR [edx+0x4]
640129f3:	call   eax
640129f5:	mov    eax,DWORD PTR [ebp-0x20]
640129f8:	add    eax,0xfffffff0
640129fb:	mov    BYTE PTR [ebp-0x4],0xf
640129ff:	lea    ecx,[eax+0xc]
64012a02:	or     edx,0xffffffff
64012a05:	lock xadd DWORD PTR [ecx],edx
64012a09:	dec    edx
64012a0a:	test   edx,edx
64012a0c:	jg     0x64012a18
64012a0e:	mov    ecx,DWORD PTR [eax]
64012a10:	mov    edx,DWORD PTR [ecx]
64012a12:	push   eax
64012a13:	mov    eax,DWORD PTR [edx+0x4]
64012a16:	call   eax
64012a18:	call   DWORD PTR ds:0x6402f06c
64012a1e:	mov    edx,DWORD PTR ds:0x64030540
64012a24:	mov    DWORD PTR [ebp-0x14],eax
64012a27:	mov    eax,DWORD PTR [edx+0xc]
64012a2a:	mov    ecx,0x64030540
64012a2f:	call   eax
64012a31:	add    eax,0x10
64012a34:	mov    DWORD PTR [ebp-0x10],eax
64012a37:	mov    BYTE PTR [ebp-0x4],0x16
64012a3b:	call   0x640037c0
64012a40:	push   eax
64012a41:	push   0x640266bc
64012a46:	push   0x4
64012a48:	push   0x640266b0
64012a4d:	call   0x64006b30
64012a52:	add    esp,0xc
64012a55:	push   eax
64012a56:	lea    ecx,[ebp-0x10]
64012a59:	push   ecx
64012a5a:	call   0x64001d40
64012a5f:	mov    ebx,DWORD PTR [ebp-0x10]
64012a62:	mov    eax,DWORD PTR [ebx-0x8]
64012a65:	mov    ecx,0x1
64012a6a:	sub    ecx,DWORD PTR [ebx-0x4]
64012a6d:	add    eax,0x1
64012a70:	add    esp,0xc
64012a73:	or     eax,ecx
64012a75:	jge    0x64012a84
64012a77:	push   0xffffffff
64012a79:	lea    ecx,[ebp-0x10]
64012a7c:	call   0x64001e00
64012a81:	mov    ebx,DWORD PTR [ebp-0x10]
64012a84:	test   ebx,ebx
64012a86:	je     0x64012acc
64012a88:	push   ebx
64012a89:	call   DWORD PTR ds:0x64026054
64012a8f:	add    eax,0x1
64012a92:	cmp    eax,0x3fffffff
64012a97:	jg     0x64012acc
64012a99:	add    eax,eax
64012a9b:	mov    DWORD PTR [ebp-0x20],eax
64012a9e:	call   0x640146f0
64012aa3:	mov    edi,esp
64012aa5:	test   edi,edi
64012aa7:	je     0x64012acc
64012aa9:	mov    edx,DWORD PTR [ebp-0x20]
64012aac:	mov    eax,DWORD PTR [ebp-0x14]
64012aaf:	push   0x0
64012ab1:	push   0x0
64012ab3:	push   edx
64012ab4:	push   edi
64012ab5:	push   0xffffffff
64012ab7:	push   ebx
64012ab8:	push   0x0
64012aba:	push   eax
64012abb:	mov    BYTE PTR [edi],0x0
64012abe:	call   DWORD PTR ds:0x64026028
64012ac4:	neg    eax
64012ac6:	sbb    eax,eax
64012ac8:	and    eax,edi
64012aca:	jmp    0x64012ace
64012acc:	xor    eax,eax
64012ace:	push   eax
64012acf:	lea    ecx,[ebp-0x1c]
64012ad2:	call   0x640065a0
64012ad7:	mov    edi,eax
64012ad9:	push   0x64026684
64012ade:	push   0x5
64012ae0:	push   0x6402667c
64012ae5:	mov    BYTE PTR [ebp-0x4],0x17
64012ae9:	call   0x64006840
64012aee:	add    esp,0xc
64012af1:	push   eax
64012af2:	lea    ecx,[ebp-0x2c]
64012af5:	call   0x640065a0
64012afa:	push   edi
64012afb:	push   eax
64012afc:	lea    ecx,[ebp-0x18]
64012aff:	push   ecx
64012b00:	mov    BYTE PTR [ebp-0x4],0x18
64012b04:	call   0x64011080
64012b09:	add    esp,0xc
64012b0c:	mov    eax,DWORD PTR [eax]
64012b0e:	mov    ecx,DWORD PTR [eax-0xc]
64012b11:	push   ecx
64012b12:	push   eax
64012b13:	mov    ecx,esi
64012b15:	mov    BYTE PTR [ebp-0x4],0x19
64012b19:	call   0x640029a0
64012b1e:	mov    eax,DWORD PTR [ebp-0x18]
64012b21:	add    eax,0xfffffff0
64012b24:	mov    BYTE PTR [ebp-0x4],0x18
64012b28:	lea    edx,[eax+0xc]
64012b2b:	or     ecx,0xffffffff
64012b2e:	lock xadd DWORD PTR [edx],ecx
64012b32:	dec    ecx
64012b33:	test   ecx,ecx
64012b35:	jg     0x64012b41
64012b37:	mov    ecx,DWORD PTR [eax]
64012b39:	mov    edx,DWORD PTR [ecx]
64012b3b:	push   eax
64012b3c:	mov    eax,DWORD PTR [edx+0x4]
64012b3f:	call   eax
64012b41:	mov    eax,DWORD PTR [ebp-0x2c]
64012b44:	add    eax,0xfffffff0
64012b47:	mov    BYTE PTR [ebp-0x4],0x17
64012b4b:	lea    ecx,[eax+0xc]
64012b4e:	or     edx,0xffffffff
64012b51:	lock xadd DWORD PTR [ecx],edx
64012b55:	dec    edx
64012b56:	test   edx,edx
64012b58:	jg     0x64012b64
64012b5a:	mov    ecx,DWORD PTR [eax]
64012b5c:	mov    edx,DWORD PTR [ecx]
64012b5e:	push   eax
64012b5f:	mov    eax,DWORD PTR [edx+0x4]
64012b62:	call   eax
64012b64:	mov    eax,DWORD PTR [ebp-0x1c]
64012b67:	add    eax,0xfffffff0
64012b6a:	mov    BYTE PTR [ebp-0x4],0x16
64012b6e:	lea    ecx,[eax+0xc]
64012b71:	or     edx,0xffffffff
64012b74:	lock xadd DWORD PTR [ecx],edx
64012b78:	dec    edx
64012b79:	test   edx,edx
64012b7b:	jg     0x64012b87
64012b7d:	mov    ecx,DWORD PTR [eax]
64012b7f:	mov    edx,DWORD PTR [ecx]
64012b81:	push   eax
64012b82:	mov    eax,DWORD PTR [edx+0x4]
64012b85:	call   eax
64012b87:	add    ebx,0xfffffff0
64012b8a:	mov    BYTE PTR [ebp-0x4],0xf
64012b8e:	lea    ecx,[ebx+0xc]
64012b91:	or     edx,0xffffffff
64012b94:	lock xadd DWORD PTR [ecx],edx
64012b98:	dec    edx
64012b99:	test   edx,edx
64012b9b:	jg     0x64012ba7
64012b9d:	mov    ecx,DWORD PTR [ebx]
64012b9f:	mov    eax,DWORD PTR [ecx]
64012ba1:	mov    edx,DWORD PTR [eax+0x4]
64012ba4:	push   ebx
64012ba5:	call   edx
64012ba7:	lea    eax,[ebp-0x9c]
64012bad:	push   eax
64012bae:	call   0x64003990
64012bb3:	mov    ecx,DWORD PTR [eax]
64012bb5:	mov    DWORD PTR [ebp-0x68],ecx
64012bb8:	mov    edx,DWORD PTR [eax+0x4]
64012bbb:	mov    DWORD PTR [ebp-0x64],edx
64012bbe:	mov    ecx,DWORD PTR [eax+0x8]
64012bc1:	push   0x6402663c
64012bc6:	mov    DWORD PTR [ebp-0x60],ecx
64012bc9:	mov    edx,DWORD PTR [eax+0xc]
64012bcc:	push   0x5
64012bce:	push   0x64026634
64012bd3:	mov    DWORD PTR [ebp-0x5c],edx
64012bd6:	call   0x64006840
64012bdb:	add    esp,0x10
64012bde:	push   eax
64012bdf:	lea    ecx,[ebp-0x10]
64012be2:	call   0x640065a0
64012be7:	lea    eax,[ebp-0x68]
64012bea:	push   eax
64012beb:	lea    ecx,[ebp-0x2c]
64012bee:	push   ecx
64012bef:	mov    BYTE PTR [ebp-0x4],0x1a
64012bf3:	call   0x64002e70
64012bf8:	push   eax
64012bf9:	lea    edx,[ebp-0x10]
64012bfc:	push   edx
64012bfd:	lea    eax,[ebp-0x1c]
64012c00:	mov    bl,0x1b
64012c02:	push   eax
64012c03:	mov    BYTE PTR [ebp-0x4],bl
64012c06:	call   0x64011080
64012c0b:	add    esp,0x14
64012c0e:	mov    eax,DWORD PTR [eax]
64012c10:	mov    ecx,DWORD PTR [eax-0xc]
64012c13:	push   ecx
64012c14:	push   eax
64012c15:	mov    ecx,esi
64012c17:	mov    BYTE PTR [ebp-0x4],0x1c
64012c1b:	call   0x640029a0
64012c20:	mov    eax,DWORD PTR [ebp-0x1c]
64012c23:	add    eax,0xfffffff0
64012c26:	mov    BYTE PTR [ebp-0x4],bl
64012c29:	lea    ecx,[eax+0xc]
64012c2c:	or     edx,0xffffffff
64012c2f:	lock xadd DWORD PTR [ecx],edx
64012c33:	dec    edx
64012c34:	test   edx,edx
64012c36:	jg     0x64012c42
64012c38:	mov    ecx,DWORD PTR [eax]
64012c3a:	mov    edx,DWORD PTR [ecx]
64012c3c:	push   eax
64012c3d:	mov    eax,DWORD PTR [edx+0x4]
64012c40:	call   eax
64012c42:	mov    eax,DWORD PTR [ebp-0x2c]
64012c45:	add    eax,0xfffffff0
64012c48:	mov    BYTE PTR [ebp-0x4],0x1a
64012c4c:	lea    ecx,[eax+0xc]
64012c4f:	or     edx,0xffffffff
64012c52:	lock xadd DWORD PTR [ecx],edx
64012c56:	dec    edx
64012c57:	test   edx,edx
64012c59:	jg     0x64012c65
64012c5b:	mov    ecx,DWORD PTR [eax]
64012c5d:	mov    edx,DWORD PTR [ecx]
64012c5f:	push   eax
64012c60:	mov    eax,DWORD PTR [edx+0x4]
64012c63:	call   eax
64012c65:	mov    eax,DWORD PTR [ebp-0x10]
64012c68:	add    eax,0xfffffff0
64012c6b:	mov    BYTE PTR [ebp-0x4],0xf
64012c6f:	lea    ecx,[eax+0xc]
64012c72:	or     edx,0xffffffff
64012c75:	lock xadd DWORD PTR [ecx],edx
64012c79:	dec    edx
64012c7a:	test   edx,edx
64012c7c:	jg     0x64012c88
64012c7e:	mov    ecx,DWORD PTR [eax]
64012c80:	mov    edx,DWORD PTR [ecx]
64012c82:	push   eax
64012c83:	mov    eax,DWORD PTR [edx+0x4]
64012c86:	call   eax
64012c88:	lea    ecx,[ebp-0x1c]
64012c8b:	push   0x1
64012c8d:	push   ecx
64012c8e:	call   0x640060d0
64012c93:	add    esp,0x8
64012c96:	mov    eax,DWORD PTR [eax]
64012c98:	mov    ecx,DWORD PTR [eax-0xc]
64012c9b:	push   ecx
64012c9c:	push   eax
64012c9d:	mov    ecx,esi
64012c9f:	mov    BYTE PTR [ebp-0x4],0x1d
64012ca3:	call   0x640029a0
64012ca8:	mov    eax,DWORD PTR [ebp-0x1c]
64012cab:	add    eax,0xfffffff0
64012cae:	mov    BYTE PTR [ebp-0x4],0xf
64012cb2:	lea    edx,[eax+0xc]
64012cb5:	or     ecx,0xffffffff
64012cb8:	lock xadd DWORD PTR [edx],ecx
64012cbc:	dec    ecx
64012cbd:	test   ecx,ecx
64012cbf:	jg     0x64012ccb
64012cc1:	mov    ecx,DWORD PTR [eax]
64012cc3:	mov    edx,DWORD PTR [ecx]
64012cc5:	push   eax
64012cc6:	mov    eax,DWORD PTR [edx+0x4]
64012cc9:	call   eax
64012ccb:	mov    eax,DWORD PTR [ebp-0x38]
64012cce:	xor    edi,edi
64012cd0:	cmp    eax,edi
64012cd2:	je     0x64012cf2
64012cd4:	mov    ecx,DWORD PTR [ebp-0x58]
64012cd7:	push   ecx
64012cd8:	mov    ecx,DWORD PTR [ebp-0x34]
64012cdb:	lea    edx,[ebp-0x3c]
64012cde:	push   edx
64012cdf:	push   ecx
64012ce0:	push   eax
64012ce1:	call   0x6400c120
64012ce6:	mov    edx,DWORD PTR [ebp-0x38]
64012ce9:	push   edx
64012cea:	call   0x64013712
64012cef:	add    esp,0x14
64012cf2:	mov    eax,DWORD PTR [ebp-0x24]
64012cf5:	add    eax,0xfffffff0
64012cf8:	mov    DWORD PTR [ebp-0x38],edi
64012cfb:	mov    DWORD PTR [ebp-0x34],edi
64012cfe:	mov    DWORD PTR [ebp-0x30],edi
64012d01:	mov    BYTE PTR [ebp-0x4],0x6
64012d05:	lea    ecx,[eax+0xc]
64012d08:	or     edx,0xffffffff
64012d0b:	lock xadd DWORD PTR [ecx],edx
64012d0f:	dec    edx
64012d10:	test   edx,edx
64012d12:	jg     0x64012d1e
64012d14:	mov    ecx,DWORD PTR [eax]
64012d16:	mov    edx,DWORD PTR [ecx]
64012d18:	push   eax
64012d19:	mov    eax,DWORD PTR [edx+0x4]
64012d1c:	call   eax
64012d1e:	mov    eax,DWORD PTR [ebp-0x48]
64012d21:	add    eax,0xfffffff0
64012d24:	mov    BYTE PTR [ebp-0x4],0x5
64012d28:	lea    ecx,[eax+0xc]
64012d2b:	or     edx,0xffffffff
64012d2e:	lock xadd DWORD PTR [ecx],edx
64012d32:	dec    edx
64012d33:	test   edx,edx
64012d35:	jg     0x64012d41
64012d37:	mov    ecx,DWORD PTR [eax]
64012d39:	mov    edx,DWORD PTR [ecx]
64012d3b:	push   eax
64012d3c:	mov    eax,DWORD PTR [edx+0x4]
64012d3f:	call   eax
64012d41:	mov    eax,DWORD PTR [ebp-0x28]
64012d44:	add    eax,0xfffffff0
64012d47:	mov    BYTE PTR [ebp-0x4],0x2
64012d4b:	lea    ecx,[eax+0xc]
64012d4e:	or     edx,0xffffffff
64012d51:	lock xadd DWORD PTR [ecx],edx
64012d55:	dec    edx
64012d56:	test   edx,edx
64012d58:	jg     0x64012d64
64012d5a:	mov    ecx,DWORD PTR [eax]
64012d5c:	mov    edx,DWORD PTR [ecx]
64012d5e:	push   eax
64012d5f:	mov    eax,DWORD PTR [edx+0x4]
64012d62:	call   eax
64012d64:	mov    eax,DWORD PTR [ebp-0x54]
64012d67:	add    eax,0xfffffff0
64012d6a:	mov    BYTE PTR [ebp-0x4],0x1
64012d6e:	lea    ecx,[eax+0xc]
64012d71:	or     edx,0xffffffff
64012d74:	lock xadd DWORD PTR [ecx],edx
64012d78:	dec    edx
64012d79:	test   edx,edx
64012d7b:	jg     0x64012d87
64012d7d:	mov    ecx,DWORD PTR [eax]
64012d7f:	mov    edx,DWORD PTR [ecx]
64012d81:	push   eax
64012d82:	mov    eax,DWORD PTR [edx+0x4]
64012d85:	call   eax
64012d87:	mov    eax,DWORD PTR [ebp-0x4c]
64012d8a:	add    eax,0xfffffff0
64012d8d:	mov    BYTE PTR [ebp-0x4],0x0
64012d91:	lea    ecx,[eax+0xc]
64012d94:	or     edx,0xffffffff
64012d97:	lock xadd DWORD PTR [ecx],edx
64012d9b:	dec    edx
64012d9c:	test   edx,edx
64012d9e:	jg     0x64012daa
64012da0:	mov    ecx,DWORD PTR [eax]
64012da2:	mov    edx,DWORD PTR [ecx]
64012da4:	push   eax
64012da5:	mov    eax,DWORD PTR [edx+0x4]
64012da8:	call   eax
64012daa:	mov    eax,esi
64012dac:	lea    esp,[ebp-0xac]
64012db2:	mov    ecx,DWORD PTR [ebp-0xc]
64012db5:	mov    DWORD PTR fs:0x0,ecx
64012dbc:	pop    ecx
64012dbd:	pop    edi
64012dbe:	pop    esi
64012dbf:	pop    ebx
64012dc0:	mov    ecx,DWORD PTR [ebp+0x124]
64012dc6:	xor    ecx,ebp
64012dc8:	call   0x64013f6c
64012dcd:	add    ebp,0x128
64012dd3:	mov    esp,ebp
64012dd5:	pop    ebp
64012dd6:	ret    
64012dd7:	int3   
64012dd8:	int3   
64012dd9:	int3   
64012dda:	int3   
64012ddb:	int3   
64012ddc:	int3   
64012ddd:	int3   
64012dde:	int3   
64012ddf:	int3   
64012de0:	push   ebp
64012de1:	mov    ebp,esp
64012de3:	push   0xffffffff
64012de5:	push   0x64023898
64012dea:	mov    eax,fs:0x0
64012df0:	push   eax
64012df1:	sub    esp,0x50
64012df4:	mov    eax,ds:0x6402f09c
64012df9:	xor    eax,ebp
64012dfb:	mov    DWORD PTR [ebp-0x10],eax
64012dfe:	push   ebx
64012dff:	push   esi
64012e00:	push   edi
64012e01:	push   eax
64012e02:	lea    eax,[ebp-0xc]
64012e05:	mov    fs:0x0,eax
64012e0b:	call   DWORD PTR ds:0x6402f06c
64012e11:	push   0xea60
64012e16:	mov    DWORD PTR [ebp-0x3c],eax
64012e19:	call   0x64010e00
64012e1e:	add    esp,0x4
64012e21:	mov    DWORD PTR [ebp-0x34],0x0
64012e28:	lea    eax,[ebp-0x30]
64012e2b:	push   eax
64012e2c:	call   0x64012240
64012e31:	add    esp,0x4
64012e34:	xor    esi,esi
64012e36:	mov    DWORD PTR [ebp-0x4],esi
64012e39:	mov    DWORD PTR [ebp-0x14],0xf
64012e40:	mov    DWORD PTR [ebp-0x18],esi
64012e43:	mov    BYTE PTR [ebp-0x28],0x0
64012e47:	mov    eax,DWORD PTR [ebp-0x30]
64012e4a:	cmp    eax,esi
64012e4c:	mov    BYTE PTR [ebp-0x4],0x1
64012e50:	mov    ebx,eax
64012e52:	jne    0x64012e58
64012e54:	xor    ecx,ecx
64012e56:	jmp    0x64012e9f
64012e58:	push   eax
64012e59:	call   DWORD PTR ds:0x64026054
64012e5f:	add    eax,0x1
64012e62:	cmp    eax,0x3fffffff
64012e67:	jg     0x64012e99
64012e69:	lea    edi,[eax+eax*1]
64012e6c:	mov    eax,edi
64012e6e:	call   0x640146f0
64012e73:	mov    esi,esp
64012e75:	test   esi,esi
64012e77:	je     0x64012e99
64012e79:	mov    ecx,DWORD PTR [ebp-0x3c]
64012e7c:	push   0x0
64012e7e:	push   0x0
64012e80:	push   edi
64012e81:	push   esi
64012e82:	push   0xffffffff
64012e84:	push   ebx
64012e85:	push   0x0
64012e87:	push   ecx
64012e88:	mov    BYTE PTR [esi],0x0
64012e8b:	call   DWORD PTR ds:0x64026028
64012e91:	neg    eax
64012e93:	sbb    eax,eax
64012e95:	and    eax,esi
64012e97:	jmp    0x64012e9b
64012e99:	xor    eax,eax
64012e9b:	mov    ecx,eax
64012e9d:	xor    esi,esi
64012e9f:	mov    eax,ecx
64012ea1:	mov    DWORD PTR [ebp-0x48],esi
64012ea4:	mov    DWORD PTR [ebp-0x44],0xf
64012eab:	mov    BYTE PTR [ebp-0x58],0x0
64012eaf:	lea    esi,[eax+0x1]
64012eb2:	mov    dl,BYTE PTR [eax]
64012eb4:	add    eax,0x1
64012eb7:	test   dl,dl
64012eb9:	jne    0x64012eb2
64012ebb:	sub    eax,esi
64012ebd:	push   eax
64012ebe:	push   ecx
64012ebf:	lea    ecx,[ebp-0x5c]
64012ec2:	call   0x64001880
64012ec7:	lea    edx,[ebp-0x2c]
64012eca:	push   edx
64012ecb:	lea    eax,[ebp-0x5c]
64012ece:	push   eax
64012ecf:	mov    BYTE PTR [ebp-0x4],0x2
64012ed3:	call   0x64011f90
64012ed8:	mov    edi,0x10
64012edd:	add    esp,0x8
64012ee0:	cmp    DWORD PTR [ebp-0x44],edi
64012ee3:	mov    bl,al
64012ee5:	mov    BYTE PTR [ebp-0x4],0x1
64012ee9:	jb     0x64012ef7
64012eeb:	mov    ecx,DWORD PTR [ebp-0x58]
64012eee:	push   ecx
64012eef:	call   0x64013712
64012ef4:	add    esp,0x4
64012ef7:	test   bl,bl
64012ef9:	jne    0x64012f8c
64012eff:	xor    ebx,ebx
64012f01:	xor    esi,esi
64012f03:	lea    edx,[ebp-0x38]
64012f06:	push   ebx
64012f07:	push   edx
64012f08:	mov    DWORD PTR [ebp-0x38],ebx
64012f0b:	call   0x6400ed20
64012f10:	call   eax
64012f12:	test   eax,eax
64012f14:	je     0x64012f24
64012f16:	add    esi,0x3e8
64012f1c:	cmp    esi,0x493e0
64012f22:	ja     0x64012f31
64012f24:	push   0x3e8
64012f29:	call   DWORD PTR ds:0x64026050
64012f2f:	jmp    0x64012f03
64012f31:	cmp    DWORD PTR [ebp-0x14],edi
64012f34:	jb     0x64012f42
64012f36:	mov    eax,DWORD PTR [ebp-0x28]
64012f39:	push   eax
64012f3a:	call   0x64013712
64012f3f:	add    esp,0x4
64012f42:	mov    eax,DWORD PTR [ebp-0x30]
64012f45:	add    eax,0xfffffff0
64012f48:	mov    DWORD PTR [ebp-0x14],0xf
64012f4f:	mov    DWORD PTR [ebp-0x18],ebx
64012f52:	mov    BYTE PTR [ebp-0x28],0x0
64012f56:	mov    DWORD PTR [ebp-0x4],0xffffffff
64012f5d:	lea    ecx,[eax+0xc]
64012f60:	or     edx,0xffffffff
64012f63:	lock xadd DWORD PTR [ecx],edx
64012f67:	dec    edx
64012f68:	test   edx,edx
64012f6a:	jg     0x64012f76
64012f6c:	mov    ecx,DWORD PTR [eax]
64012f6e:	mov    edx,DWORD PTR [ecx]
64012f70:	push   eax
64012f71:	mov    eax,DWORD PTR [edx+0x4]
64012f74:	call   eax
64012f76:	mov    eax,DWORD PTR [ebp-0x34]
64012f79:	add    eax,0x1
64012f7c:	cmp    eax,0x3
64012f7f:	mov    DWORD PTR [ebp-0x34],eax
64012f82:	jne    0x64012e28
64012f88:	xor    ebx,ebx
64012f8a:	jmp    0x64012fe4
64012f8c:	xor    ebx,ebx
64012f8e:	cmp    DWORD PTR [ebp-0x18],ebx
64012f91:	je     0x64012f9f
64012f93:	lea    ecx,[ebp-0x2c]
64012f96:	push   ecx
64012f97:	call   0x64011920
64012f9c:	add    esp,0x4
64012f9f:	cmp    DWORD PTR [ebp-0x14],edi
64012fa2:	jb     0x64012fb0
64012fa4:	mov    edx,DWORD PTR [ebp-0x28]
64012fa7:	push   edx
64012fa8:	call   0x64013712
64012fad:	add    esp,0x4
64012fb0:	mov    eax,DWORD PTR [ebp-0x30]
64012fb3:	add    eax,0xfffffff0
64012fb6:	mov    DWORD PTR [ebp-0x14],0xf
64012fbd:	mov    DWORD PTR [ebp-0x18],ebx
64012fc0:	mov    BYTE PTR [ebp-0x28],0x0
64012fc4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64012fcb:	lea    ecx,[eax+0xc]
64012fce:	or     edx,0xffffffff
64012fd1:	lock xadd DWORD PTR [ecx],edx
64012fd5:	dec    edx
64012fd6:	test   edx,edx
64012fd8:	jg     0x64012fe4
64012fda:	mov    ecx,DWORD PTR [eax]
64012fdc:	mov    edx,DWORD PTR [ecx]
64012fde:	push   eax
64012fdf:	mov    eax,DWORD PTR [edx+0x4]
64012fe2:	call   eax
64012fe4:	xor    esi,esi
64012fe6:	lea    ecx,[ebp-0x40]
64012fe9:	push   ebx
64012fea:	push   ecx
64012feb:	mov    DWORD PTR [ebp-0x40],ebx
64012fee:	call   0x6400ed20
64012ff3:	call   eax
64012ff5:	test   eax,eax
64012ff7:	je     0x6401300b
64012ff9:	add    esi,0x3e8
64012fff:	cmp    esi,0x12e1fc0
64013005:	ja     0x64012e21
6401300b:	push   0x3e8
64013010:	call   DWORD PTR ds:0x64026050
64013016:	jmp    0x64012fe6
64013018:	int3   
64013019:	int3   
6401301a:	int3   
6401301b:	int3   
6401301c:	int3   
6401301d:	int3   
6401301e:	int3   
6401301f:	int3   
64013020:	sub    esp,0x20c
64013026:	mov    eax,ds:0x6402f09c
6401302b:	xor    eax,esp
6401302d:	mov    DWORD PTR [esp+0x208],eax
64013034:	push   0x208
64013039:	lea    eax,[esp+0x4]
6401303d:	push   eax
6401303e:	push   0x0
64013040:	call   DWORD PTR ds:0x64026074
64013046:	test   eax,eax
64013048:	je     0x64013097
6401304a:	lea    ecx,[esp]
6401304d:	push   0x104
64013052:	push   ecx
64013053:	call   0x64014651
64013058:	lea    edx,[esp+0x8]
6401305c:	push   0x640269e8
64013061:	push   edx
64013062:	call   0x640140b1
64013067:	add    esp,0x10
6401306a:	test   eax,eax
6401306c:	je     0x64013097
6401306e:	call   0x64012080
64013073:	test   al,al
64013075:	je     0x64013097
64013077:	push   0x0
64013079:	push   0x0
6401307b:	push   0x0
6401307d:	push   0x64012de0
64013082:	push   0x0
64013084:	push   0x0
64013086:	call   DWORD PTR ds:0x64026070
6401308c:	test   eax,eax
6401308e:	je     0x64013097
64013090:	push   eax
64013091:	call   DWORD PTR ds:0x64026040
64013097:	mov    ecx,DWORD PTR [esp+0x208]
6401309e:	xor    ecx,esp
640130a0:	xor    eax,eax
640130a2:	call   0x64013f6c
640130a7:	add    esp,0x20c
640130ad:	ret    0x4
640130b0:	push   0x0
640130b2:	push   0x0
640130b4:	push   0x0
640130b6:	push   0x64013020
640130bb:	push   0x0
640130bd:	push   0x0
640130bf:	call   DWORD PTR ds:0x64026070
640130c5:	ret    
640130c6:	push   ebp
640130c7:	mov    ebp,esp
640130c9:	sub    esp,0xc
640130cc:	mov    eax,ds:0x6402f09c
640130d1:	xor    eax,ebp
640130d3:	mov    DWORD PTR [ebp-0x4],eax
640130d6:	push   esi
640130d7:	xor    esi,esi
640130d9:	call   DWORD PTR ds:0x640260e4
640130df:	push   0x7
640130e1:	lea    ecx,[ebp-0xc]
640130e4:	push   ecx
640130e5:	push   0x1004
640130ea:	push   eax
640130eb:	call   DWORD PTR ds:0x640260e0
640130f1:	test   eax,eax
640130f3:	je     0x64013114
640130f5:	mov    cl,BYTE PTR [ebp-0xc]
640130f8:	test   cl,cl
640130fa:	lea    eax,[ebp-0xc]
640130fd:	je     0x64013114
640130ff:	imul   esi,esi,0xa
64013102:	movsx  ecx,cl
64013105:	inc    eax
64013106:	lea    esi,[esi+ecx*1-0x30]
6401310a:	mov    cl,BYTE PTR [eax]
6401310c:	test   cl,cl
6401310e:	jne    0x640130ff
64013110:	test   esi,esi
64013112:	jne    0x6401311c
64013114:	call   DWORD PTR ds:0x640260dc
6401311a:	mov    esi,eax
6401311c:	mov    ecx,DWORD PTR [ebp-0x4]
6401311f:	mov    eax,esi
64013121:	xor    ecx,ebp
64013123:	pop    esi
64013124:	call   0x64013f6c
64013129:	leave  
6401312a:	ret    
6401312b:	push   0x3
6401312d:	pop    eax
6401312e:	ret    
6401312f:	push   ebp
64013130:	mov    ebp,esp
64013132:	sub    esp,0x98
64013138:	mov    eax,ds:0x6402f09c
6401313d:	xor    eax,ebp
6401313f:	mov    DWORD PTR [ebp-0x4],eax
64013142:	lea    eax,[ebp-0x98]
64013148:	push   eax
64013149:	mov    DWORD PTR [ebp-0x98],0x94
64013153:	call   DWORD PTR ds:0x640260e8
64013159:	cmp    DWORD PTR [ebp-0x88],0x2
64013160:	jne    0x64013170
64013162:	cmp    DWORD PTR [ebp-0x94],0x5
64013169:	mov    eax,0x6401312b
6401316e:	jae    0x64013175
64013170:	mov    eax,0x640130c6
64013175:	push   eax
64013176:	push   0x6402f06c
6401317b:	call   DWORD PTR ds:0x640260d8
64013181:	call   DWORD PTR ds:0x6402f06c
64013187:	mov    ecx,DWORD PTR [ebp-0x4]
6401318a:	xor    ecx,ebp
6401318c:	call   0x64013f6c
64013191:	leave  
64013192:	ret    
64013193:	push   esi
64013194:	mov    esi,ecx
64013196:	mov    eax,DWORD PTR [esi]
64013198:	test   eax,eax
6401319a:	je     0x640131a6
6401319c:	push   eax
6401319d:	call   0x64014e06
640131a2:	and    DWORD PTR [esi],0x0
640131a5:	pop    ecx
640131a6:	and    DWORD PTR [esi+0x4],0x0
640131aa:	and    DWORD PTR [esi+0x8],0x0
640131ae:	pop    esi
640131af:	ret    
640131b0:	push   esi
640131b1:	push   0x18
640131b3:	mov    esi,ecx
640131b5:	push   0x0
640131b7:	push   esi
640131b8:	call   0x64014670
640131bd:	add    esp,0xc
640131c0:	mov    eax,esi
640131c2:	pop    esi
640131c3:	ret    
640131c4:	push   0xc
640131c6:	push   0x6402c208
640131cb:	call   0x64015530
640131d0:	and    DWORD PTR [ebp-0x4],0x0
640131d4:	push   ecx
640131d5:	call   DWORD PTR ds:0x6402601c
640131db:	and    DWORD PTR [ebp-0x1c],0x0
640131df:	jmp    0x640131ff
640131e1:	mov    eax,DWORD PTR [ebp-0x14]
640131e4:	mov    eax,DWORD PTR [eax]
640131e6:	mov    eax,DWORD PTR [eax]
640131e8:	xor    ecx,ecx
640131ea:	cmp    eax,0xc0000017
640131ef:	sete   cl
640131f2:	mov    eax,ecx
640131f4:	ret    
640131f5:	mov    esp,DWORD PTR [ebp-0x18]
640131f8:	mov    DWORD PTR [ebp-0x1c],0x8007000e
640131ff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013206:	mov    eax,DWORD PTR [ebp-0x1c]
64013209:	call   0x64015575
6401320e:	ret    
6401320f:	mov    eax,DWORD PTR [esp+0x4]
64013213:	test   eax,eax
64013215:	jne    0x6401321e
64013217:	mov    eax,0x80070057
6401321c:	jmp    0x6401322f
6401321e:	cmp    DWORD PTR [eax],0x2c
64013221:	jne    0x64013217
64013223:	and    DWORD PTR [eax+0x1c],0x0
64013227:	lea    ecx,[eax+0x4]
6401322a:	call   0x640131c4
6401322f:	ret    0x4
64013232:	mov    eax,DWORD PTR [esp+0x4]
64013236:	test   eax,eax
64013238:	jl     0x64013247
6401323a:	cmp    eax,DWORD PTR [ecx+0x4]
6401323d:	jge    0x64013247
6401323f:	mov    ecx,DWORD PTR [ecx]
64013241:	lea    eax,[ecx+eax*2]
64013244:	ret    0x4
64013247:	push   0x0
64013249:	push   0x0
6401324b:	push   0x1
6401324d:	push   0xc000008c
64013252:	call   DWORD PTR ds:0x640260ec
64013258:	int3   
64013259:	mov    eax,DWORD PTR [esp+0x4]
6401325d:	test   eax,eax
6401325f:	jl     0x6401326e
64013261:	cmp    eax,DWORD PTR [ecx+0x4]
64013264:	jge    0x6401326e
64013266:	mov    ecx,DWORD PTR [ecx]
64013268:	lea    eax,[ecx+eax*4]
6401326b:	ret    0x4
6401326e:	push   0x0
64013270:	push   0x0
64013272:	push   0x1
64013274:	push   0xc000008c
64013279:	call   DWORD PTR ds:0x640260ec
6401327f:	int3   
64013280:	push   esi
64013281:	mov    esi,ecx
64013283:	lea    ecx,[esi+0x4]
64013286:	call   0x640131b0
6401328b:	xor    eax,eax
6401328d:	mov    DWORD PTR [esi+0x20],eax
64013290:	mov    DWORD PTR [esi+0x24],eax
64013293:	mov    DWORD PTR [esi+0x28],eax
64013296:	mov    eax,esi
64013298:	pop    esi
64013299:	ret    
6401329a:	push   esi
6401329b:	mov    esi,DWORD PTR [esp+0x8]
6401329f:	test   esi,esi
640132a1:	jne    0x640132aa
640132a3:	mov    eax,0x80070057
640132a8:	jmp    0x640132f6
640132aa:	mov    eax,DWORD PTR [esi]
640132ac:	test   eax,eax
640132ae:	je     0x640132f4
640132b0:	cmp    eax,0x2c
640132b3:	jne    0x640132a3
640132b5:	push   edi
640132b6:	xor    edi,edi
640132b8:	cmp    DWORD PTR [esi+0x24],edi
640132bb:	jle    0x640132de
640132bd:	push   ebx
640132be:	lea    ebx,[esi+0x20]
640132c1:	push   edi
640132c2:	mov    ecx,ebx
640132c4:	call   0x64013232
640132c9:	movzx  eax,WORD PTR [eax]
640132cc:	push   DWORD PTR [esp+0x14]
640132d0:	push   eax
640132d1:	call   DWORD PTR ds:0x640261b8
640132d7:	inc    edi
640132d8:	cmp    edi,DWORD PTR [esi+0x24]
640132db:	jl     0x640132c1
640132dd:	pop    ebx
640132de:	lea    ecx,[esi+0x20]
640132e1:	call   0x64013193
640132e6:	lea    eax,[esi+0x4]
640132e9:	push   eax
640132ea:	call   DWORD PTR ds:0x640260a4
640132f0:	and    DWORD PTR [esi],0x0
640132f3:	pop    edi
640132f4:	xor    eax,eax
640132f6:	pop    esi
640132f7:	ret    0x8
640132fa:	push   esi
640132fb:	mov    esi,ecx
640132fd:	cmp    BYTE PTR [esi+0x4],0x0
64013301:	je     0x6401330f
64013303:	push   DWORD PTR [esi]
64013305:	call   DWORD PTR ds:0x640260a0
6401330b:	mov    BYTE PTR [esi+0x4],0x0
6401330f:	pop    esi
64013310:	ret    
64013311:	push   esi
64013312:	mov    esi,ecx
64013314:	lea    ecx,[esi+0x18]
64013317:	call   0x640131b0
6401331c:	xor    eax,eax
6401331e:	mov    DWORD PTR [esi+0x30],eax
64013321:	mov    DWORD PTR [esi+0x34],eax
64013324:	mov    DWORD PTR [esi+0x38],eax
64013327:	mov    eax,esi
64013329:	pop    esi
6401332a:	ret    
6401332b:	push   esi
6401332c:	mov    esi,ecx
6401332e:	lea    eax,[esi+0x18]
64013331:	push   eax
64013332:	call   DWORD PTR ds:0x640260a4
64013338:	lea    ecx,[esi+0x30]
6401333b:	pop    esi
6401333c:	jmp    0x64013193
64013341:	push   ebp
64013342:	mov    ebp,esp
64013344:	push   ecx
64013345:	push   ecx
64013346:	push   esi
64013347:	mov    esi,ecx
64013349:	lea    eax,[esi+0x18]
6401334c:	push   eax
6401334d:	mov    DWORD PTR [ebp-0x8],eax
64013350:	call   DWORD PTR ds:0x6402609c
64013356:	mov    eax,DWORD PTR [esi+0x34]
64013359:	mov    ecx,DWORD PTR [ebp+0x8]
6401335c:	cmp    ecx,eax
6401335e:	mov    BYTE PTR [ebp-0x4],0x1
64013362:	jg     0x64013388
64013364:	test   ecx,ecx
64013366:	jl     0x64013388
64013368:	cmp    ecx,eax
6401336a:	jne    0x6401337b
6401336c:	mov    esi,DWORD PTR [esi+0x8]
6401336f:	lea    ecx,[ebp-0x8]
64013372:	call   0x640132fa
64013377:	mov    eax,esi
64013379:	jmp    0x64013392
6401337b:	push   ecx
6401337c:	lea    ecx,[esi+0x30]
6401337f:	call   0x64013259
64013384:	mov    esi,DWORD PTR [eax]
64013386:	jmp    0x6401336f
64013388:	lea    ecx,[ebp-0x8]
6401338b:	call   0x640132fa
64013390:	xor    eax,eax
64013392:	pop    esi
64013393:	leave  
64013394:	ret    0x4
64013397:	push   esi
64013398:	mov    esi,ecx
6401339a:	call   0x64013280
6401339f:	push   esi
640133a0:	mov    DWORD PTR [esi],0x2c
640133a6:	call   0x6401320f
640133ab:	test   eax,eax
640133ad:	jge    0x640133b9
640133af:	mov    BYTE PTR ds:0x6403332c,0x1
640133b6:	and    DWORD PTR [esi],0x0
640133b9:	mov    eax,esi
640133bb:	pop    esi
640133bc:	ret    
640133bd:	push   ebp
640133be:	lea    ebp,[esp-0x78]
640133c2:	sub    esp,0x98
640133c8:	mov    eax,ds:0x6402f09c
640133cd:	xor    eax,ebp
640133cf:	mov    DWORD PTR [ebp+0x74],eax
640133d2:	push   esi
640133d3:	mov    esi,ecx
640133d5:	call   0x64013311
640133da:	mov    eax,0x64000000
640133df:	push   0x94
640133e4:	mov    DWORD PTR [esi+0x8],eax
640133e7:	mov    DWORD PTR [esi+0x4],eax
640133ea:	lea    eax,[ebp-0x20]
640133ed:	push   0x0
640133ef:	push   eax
640133f0:	mov    DWORD PTR [esi],0x3c
640133f6:	mov    BYTE PTR [esi+0xc],0x0
640133fa:	call   0x64014670
640133ff:	add    esp,0xc
64013402:	lea    eax,[ebp-0x20]
64013405:	push   eax
64013406:	mov    DWORD PTR [ebp-0x20],0x94
6401340d:	call   DWORD PTR ds:0x640260e8
64013413:	cmp    DWORD PTR [ebp-0x10],0x2
64013417:	jne    0x64013421
64013419:	cmp    DWORD PTR [ebp-0x1c],0x5
6401341d:	jb     0x64013439
6401341f:	jmp    0x64013435
64013421:	cmp    DWORD PTR [ebp-0x10],0x1
64013425:	jne    0x64013439
64013427:	cmp    DWORD PTR [ebp-0x1c],0x4
6401342b:	ja     0x64013435
6401342d:	jne    0x64013439
6401342f:	cmp    DWORD PTR [ebp-0x18],0x0
64013433:	jbe    0x64013439
64013435:	mov    BYTE PTR [esi+0xc],0x1
64013439:	lea    ecx,[esi+0x18]
6401343c:	mov    DWORD PTR [esi+0x10],0x800
64013443:	mov    DWORD PTR [esi+0x14],0x64026c00
6401344a:	call   0x640131c4
6401344f:	test   eax,eax
64013451:	jge    0x6401345a
64013453:	mov    BYTE PTR ds:0x6403332c,0x1
6401345a:	mov    ecx,DWORD PTR [ebp+0x74]
6401345d:	mov    eax,esi
6401345f:	xor    ecx,ebp
64013461:	pop    esi
64013462:	call   0x64013f6c
64013467:	add    ebp,0x78
6401346a:	leave  
6401346b:	ret    
6401346c:	push   esi
6401346d:	push   DWORD PTR ds:0x640304d0
64013473:	mov    esi,ecx
64013475:	push   esi
64013476:	call   0x6401329a
6401347b:	lea    ecx,[esi+0x20]
6401347e:	pop    esi
6401347f:	jmp    0x64013193
64013484:	cmp    BYTE PTR [ecx+0x8],0x0
64013488:	mov    DWORD PTR [ecx],0x64026c10
6401348e:	je     0x6401349e
64013490:	mov    ecx,DWORD PTR [ecx+0x4]
64013493:	test   ecx,ecx
64013495:	je     0x6401349e
64013497:	push   ecx
64013498:	call   DWORD PTR ds:0x640260f0
6401349e:	ret    
6401349f:	push   DWORD PTR [esp+0x4]
640134a3:	push   0x0
640134a5:	push   DWORD PTR [ecx+0x4]
640134a8:	call   DWORD PTR ds:0x640260f4
640134ae:	ret    0x4
640134b1:	cmp    DWORD PTR [esp+0x4],0x0
640134b6:	je     0x640134c7
640134b8:	push   DWORD PTR [esp+0x4]
640134bc:	push   0x0
640134be:	push   DWORD PTR [ecx+0x4]
640134c1:	call   DWORD PTR ds:0x640260f8
640134c7:	ret    0x4
640134ca:	push   ebp
640134cb:	mov    ebp,esp
640134cd:	xor    eax,eax
640134cf:	cmp    DWORD PTR [ebp+0x8],eax
640134d2:	jne    0x640134dd
640134d4:	push   DWORD PTR [ebp+0xc]
640134d7:	mov    eax,DWORD PTR [ecx]
640134d9:	call   DWORD PTR [eax]
640134db:	jmp    0x640134fe
640134dd:	cmp    DWORD PTR [ebp+0xc],eax
640134e0:	jne    0x640134ee
640134e2:	push   DWORD PTR [ebp+0x8]
640134e5:	mov    eax,DWORD PTR [ecx]
640134e7:	call   DWORD PTR [eax+0x4]
640134ea:	xor    eax,eax
640134ec:	jmp    0x640134fe
640134ee:	push   DWORD PTR [ebp+0xc]
640134f1:	push   DWORD PTR [ebp+0x8]
640134f4:	push   eax
640134f5:	push   DWORD PTR [ecx+0x4]
640134f8:	call   DWORD PTR ds:0x640260fc
640134fe:	pop    ebp
640134ff:	ret    0x8
64013502:	push   DWORD PTR [esp+0x4]
64013506:	push   0x0
64013508:	push   DWORD PTR [ecx+0x4]
6401350b:	call   DWORD PTR ds:0x64026100
64013511:	ret    0x4
64013514:	push   esi
64013515:	mov    esi,ecx
64013517:	call   0x64013484
6401351c:	test   BYTE PTR [esp+0x8],0x1
64013521:	je     0x6401352a
64013523:	push   esi
64013524:	call   0x64013712
64013529:	pop    ecx
6401352a:	mov    eax,esi
6401352c:	pop    esi
6401352d:	ret    0x4
64013530:	mov    eax,ecx
64013532:	mov    ecx,DWORD PTR [esp+0x4]
64013536:	mov    DWORD PTR [eax+0x4],ecx
64013539:	mov    DWORD PTR [eax],0x64026c24
6401353f:	xor    ecx,ecx
64013541:	mov    DWORD PTR [eax+0x14],0x2
64013548:	mov    DWORD PTR [eax+0xc],ecx
6401354b:	mov    DWORD PTR [eax+0x10],ecx
6401354e:	mov    WORD PTR [eax+0x18],cx
64013552:	mov    WORD PTR [eax+0x1a],cx
64013556:	mov    DWORD PTR [eax+0x8],eax
64013559:	ret    0x4
6401355c:	mov    eax,DWORD PTR [esp+0x8]
64013560:	mul    DWORD PTR [esp+0xc]
64013564:	test   edx,edx
64013566:	ja     0x6401356d
64013568:	cmp    eax,0xffffffff
6401356b:	jbe    0x64013573
6401356d:	mov    eax,0x80070057
64013572:	ret    
64013573:	mov    ecx,DWORD PTR [esp+0x4]
64013577:	mov    DWORD PTR [ecx],eax
64013579:	xor    eax,eax
6401357b:	ret    
6401357c:	mov    ecx,DWORD PTR [ecx+0x4]
6401357f:	mov    eax,DWORD PTR [ecx]
64013581:	jmp    DWORD PTR [eax+0x4]
64013584:	xor    edx,edx
64013586:	lea    eax,[ecx+0x14]
64013589:	inc    edx
6401358a:	lock xadd DWORD PTR [eax],edx
6401358e:	lea    eax,[ecx+0x8]
64013591:	ret    
64013592:	mov    eax,ecx
64013594:	ret    
64013595:	test   BYTE PTR [esp+0x4],0x1
6401359a:	push   esi
6401359b:	mov    esi,ecx
6401359d:	mov    DWORD PTR [esi],0x64026c24
640135a3:	je     0x640135ac
640135a5:	push   esi
640135a6:	call   0x64013712
640135ab:	pop    ecx
640135ac:	mov    eax,esi
640135ae:	pop    esi
640135af:	ret    0x4
640135b2:	mov    eax,DWORD PTR [esp+0x8]
640135b6:	mov    ecx,DWORD PTR [esp+0xc]
640135ba:	or     edx,0xffffffff
640135bd:	sub    edx,eax
640135bf:	cmp    edx,ecx
640135c1:	jae    0x640135c9
640135c3:	mov    eax,0x80070057
640135c8:	ret    
640135c9:	add    eax,ecx
640135cb:	mov    ecx,DWORD PTR [esp+0x4]
640135cf:	mov    DWORD PTR [ecx],eax
640135d1:	xor    eax,eax
640135d3:	ret    
640135d4:	push   ebp
640135d5:	mov    ebp,esp
640135d7:	push   esi
640135d8:	mov    esi,DWORD PTR [ebp+0x8]
640135db:	push   edi
640135dc:	push   DWORD PTR [ebp+0xc]
640135df:	add    esi,0x8
640135e2:	and    esi,0xfffffff8
640135e5:	lea    eax,[ebp+0x8]
640135e8:	push   esi
640135e9:	push   eax
640135ea:	mov    edi,ecx
640135ec:	call   0x6401355c
640135f1:	add    esp,0xc
640135f4:	test   eax,eax
640135f6:	jl     0x6401362e
640135f8:	push   DWORD PTR [ebp+0x8]
640135fb:	lea    eax,[ebp+0x8]
640135fe:	push   0x10
64013600:	push   eax
64013601:	call   0x640135b2
64013606:	add    esp,0xc
64013609:	test   eax,eax
6401360b:	jl     0x6401362e
6401360d:	mov    ecx,DWORD PTR [edi+0x4]
64013610:	push   DWORD PTR [ebp+0x8]
64013613:	mov    eax,DWORD PTR [ecx]
64013615:	call   DWORD PTR [eax]
64013617:	test   eax,eax
64013619:	je     0x6401362e
6401361b:	dec    esi
6401361c:	and    DWORD PTR [eax+0x4],0x0
64013620:	mov    DWORD PTR [eax],edi
64013622:	mov    DWORD PTR [eax+0xc],0x1
64013629:	mov    DWORD PTR [eax+0x8],esi
6401362c:	jmp    0x64013630
6401362e:	xor    eax,eax
64013630:	pop    edi
64013631:	pop    esi
64013632:	pop    ebp
64013633:	ret    0x8
64013636:	push   ebp
64013637:	mov    ebp,esp
64013639:	push   esi
6401363a:	mov    esi,DWORD PTR [ebp+0xc]
6401363d:	push   edi
6401363e:	push   DWORD PTR [ebp+0x10]
64013641:	add    esi,0x8
64013644:	and    esi,0xfffffff8
64013647:	lea    eax,[ebp+0xc]
6401364a:	push   esi
6401364b:	push   eax
6401364c:	mov    edi,ecx
6401364e:	call   0x6401355c
64013653:	add    esp,0xc
64013656:	test   eax,eax
64013658:	jl     0x64013687
6401365a:	push   DWORD PTR [ebp+0xc]
6401365d:	lea    eax,[ebp+0xc]
64013660:	push   0x10
64013662:	push   eax
64013663:	call   0x640135b2
64013668:	add    esp,0xc
6401366b:	test   eax,eax
6401366d:	jl     0x64013687
6401366f:	push   DWORD PTR [ebp+0xc]
64013672:	mov    ecx,DWORD PTR [edi+0x4]
64013675:	push   DWORD PTR [ebp+0x8]
64013678:	mov    eax,DWORD PTR [ecx]
6401367a:	call   DWORD PTR [eax+0x8]
6401367d:	test   eax,eax
6401367f:	je     0x64013687
64013681:	dec    esi
64013682:	mov    DWORD PTR [eax+0x8],esi
64013685:	jmp    0x64013689
64013687:	xor    eax,eax
64013689:	pop    edi
6401368a:	pop    esi
6401368b:	pop    ebp
6401368c:	ret    0xc
6401368f:	push   0x44
64013691:	mov    eax,0x640238c5
64013696:	call   0x640157bb
6401369b:	push   0x64026c3c
640136a0:	lea    ecx,[ebp-0x28]
640136a3:	call   0x640026d0
640136a8:	and    DWORD PTR [ebp-0x4],0x0
640136ac:	lea    eax,[ebp-0x28]
640136af:	push   eax
640136b0:	lea    ecx,[ebp-0x50]
640136b3:	call   0x64002cc0
640136b8:	push   0x6402c940
640136bd:	lea    eax,[ebp-0x50]
640136c0:	push   eax
640136c1:	mov    DWORD PTR [ebp-0x50],0x6402631c
640136c8:	call   0x64013b5b
640136cd:	int3   
640136ce:	push   0x44
640136d0:	mov    eax,0x640238e8
640136d5:	call   0x640157bb
640136da:	push   0x64026c4c
640136df:	lea    ecx,[ebp-0x28]
640136e2:	call   0x640026d0
640136e7:	and    DWORD PTR [ebp-0x4],0x0
640136eb:	lea    eax,[ebp-0x28]
640136ee:	push   eax
640136ef:	lea    ecx,[ebp-0x50]
640136f2:	call   0x64002cc0
640136f7:	push   0x6402c904
640136fc:	lea    eax,[ebp-0x50]
640136ff:	push   eax
64013700:	mov    DWORD PTR [ebp-0x50],0x64026328
64013707:	call   0x64013b5b
6401370c:	int3   
6401370d:	jmp    0x64013af1
64013712:	jmp    0x64014e06
64013717:	push   ecx
64013718:	mov    DWORD PTR [ecx],0x64026c68
6401371e:	call   0x64015824
64013723:	pop    ecx
64013724:	ret    
64013725:	push   esi
64013726:	mov    esi,ecx
64013728:	call   0x64013717
6401372d:	test   BYTE PTR [esp+0x8],0x1
64013732:	je     0x6401373b
64013734:	push   esi
64013735:	call   0x64013712
6401373a:	pop    ecx
6401373b:	mov    eax,esi
6401373d:	pop    esi
6401373e:	ret    0x4
64013741:	mov    eax,DWORD PTR [esp+0x4]
64013745:	add    ecx,0x9
64013748:	push   ecx
64013749:	add    eax,0x9
6401374c:	push   eax
6401374d:	call   0x640158a0
64013752:	neg    eax
64013754:	pop    ecx
64013755:	sbb    eax,eax
64013757:	pop    ecx
64013758:	inc    eax
64013759:	ret    0x4
6401375c:	mov    eax,ecx
6401375e:	and    DWORD PTR [eax+0x4],0x0
64013762:	and    DWORD PTR [eax+0x8],0x0
64013766:	mov    DWORD PTR [eax],0x64026c70
6401376c:	ret    
6401376d:	push   ebx
6401376e:	mov    ebx,DWORD PTR [esp+0x8]
64013772:	push   esi
64013773:	push   edi
64013774:	mov    edi,ecx
64013776:	mov    DWORD PTR [edi],0x64026c70
6401377c:	mov    eax,DWORD PTR [ebx]
6401377e:	test   eax,eax
64013780:	je     0x640137a8
64013782:	push   eax
64013783:	call   0x64015730
64013788:	mov    esi,eax
6401378a:	inc    esi
6401378b:	push   esi
6401378c:	call   0x64014ee3
64013791:	test   eax,eax
64013793:	pop    ecx
64013794:	pop    ecx
64013795:	mov    DWORD PTR [edi+0x4],eax
64013798:	je     0x640137ac
6401379a:	push   DWORD PTR [ebx]
6401379c:	push   esi
6401379d:	push   eax
6401379e:	call   0x64015928
640137a3:	add    esp,0xc
640137a6:	jmp    0x640137ac
640137a8:	and    DWORD PTR [edi+0x4],0x0
640137ac:	mov    DWORD PTR [edi+0x8],0x1
640137b3:	mov    eax,edi
640137b5:	pop    edi
640137b6:	pop    esi
640137b7:	pop    ebx
640137b8:	ret    0x4
640137bb:	mov    eax,ecx
640137bd:	mov    ecx,DWORD PTR [esp+0x4]
640137c1:	mov    DWORD PTR [eax],0x64026c70
640137c7:	mov    ecx,DWORD PTR [ecx]
640137c9:	and    DWORD PTR [eax+0x8],0x0
640137cd:	mov    DWORD PTR [eax+0x4],ecx
640137d0:	ret    0x8
640137d3:	push   ebx
640137d4:	mov    ebx,DWORD PTR [esp+0x8]
640137d8:	push   esi
640137d9:	mov    esi,ecx
640137db:	mov    DWORD PTR [esi],0x64026c70
640137e1:	mov    eax,DWORD PTR [ebx+0x8]
640137e4:	mov    DWORD PTR [esi+0x8],eax
640137e7:	test   eax,eax
640137e9:	mov    eax,DWORD PTR [ebx+0x4]
640137ec:	push   edi
640137ed:	je     0x64013820
640137ef:	test   eax,eax
640137f1:	je     0x6401381a
640137f3:	push   eax
640137f4:	call   0x64015730
640137f9:	mov    edi,eax
640137fb:	inc    edi
640137fc:	push   edi
640137fd:	call   0x64014ee3
64013802:	test   eax,eax
64013804:	pop    ecx
64013805:	pop    ecx
64013806:	mov    DWORD PTR [esi+0x4],eax
64013809:	je     0x64013823
6401380b:	push   DWORD PTR [ebx+0x4]
6401380e:	push   edi
6401380f:	push   eax
64013810:	call   0x64015928
64013815:	add    esp,0xc
64013818:	jmp    0x64013823
6401381a:	and    DWORD PTR [esi+0x4],0x0
6401381e:	jmp    0x64013823
64013820:	mov    DWORD PTR [esi+0x4],eax
64013823:	pop    edi
64013824:	mov    eax,esi
64013826:	pop    esi
64013827:	pop    ebx
64013828:	ret    0x4
6401382b:	cmp    DWORD PTR [ecx+0x8],0x0
6401382f:	mov    DWORD PTR [ecx],0x64026c70
64013835:	je     0x64013840
64013837:	push   DWORD PTR [ecx+0x4]
6401383a:	call   0x64014e06
6401383f:	pop    ecx
64013840:	ret    
64013841:	mov    eax,DWORD PTR [ecx+0x4]
64013844:	test   eax,eax
64013846:	jne    0x6401384d
64013848:	mov    eax,0x64026c78
6401384d:	ret    
6401384e:	push   esi
6401384f:	lea    eax,[esp+0x8]
64013853:	push   eax
64013854:	mov    esi,ecx
64013856:	call   0x6401376d
6401385b:	mov    DWORD PTR [esi],0x64026c90
64013861:	mov    eax,esi
64013863:	pop    esi
64013864:	ret    0x4
64013867:	push   esi
64013868:	push   DWORD PTR [esp+0x8]
6401386c:	mov    esi,ecx
6401386e:	call   0x640137d3
64013873:	mov    DWORD PTR [esi],0x64026c90
64013879:	mov    eax,esi
6401387b:	pop    esi
6401387c:	ret    0x4
6401387f:	mov    DWORD PTR [ecx],0x64026c90
64013885:	jmp    0x6401382b
6401388a:	push   esi
6401388b:	mov    esi,ecx
6401388d:	call   0x6401382b
64013892:	test   BYTE PTR [esp+0x8],0x1
64013897:	je     0x640138a0
64013899:	push   esi
6401389a:	call   0x64013712
6401389f:	pop    ecx
640138a0:	mov    eax,esi
640138a2:	pop    esi
640138a3:	ret    0x4
640138a6:	push   esi
640138a7:	mov    esi,ecx
640138a9:	mov    DWORD PTR [esi],0x64026c90
640138af:	call   0x6401382b
640138b4:	test   BYTE PTR [esp+0x8],0x1
640138b9:	je     0x640138c2
640138bb:	push   esi
640138bc:	call   0x64013712
640138c1:	pop    ecx
640138c2:	mov    eax,esi
640138c4:	pop    esi
640138c5:	ret    0x4
640138c8:	push   ebp
640138c9:	mov    ebp,esp
640138cb:	push   esi
640138cc:	mov    esi,DWORD PTR [ebp+0x14]
640138cf:	push   edi
640138d0:	xor    edi,edi
640138d2:	cmp    esi,edi
640138d4:	jne    0x640138da
640138d6:	xor    eax,eax
640138d8:	jmp    0x6401393f
640138da:	cmp    DWORD PTR [ebp+0x8],edi
640138dd:	jne    0x640138fa
640138df:	call   0x64015d30
640138e4:	push   0x16
640138e6:	pop    esi
640138e7:	mov    DWORD PTR [eax],esi
640138e9:	push   edi
640138ea:	push   edi
640138eb:	push   edi
640138ec:	push   edi
640138ed:	push   edi
640138ee:	call   0x64013aa4
640138f3:	add    esp,0x14
640138f6:	mov    eax,esi
640138f8:	jmp    0x6401393f
640138fa:	cmp    DWORD PTR [ebp+0x10],edi
640138fd:	je     0x64013915
640138ff:	cmp    DWORD PTR [ebp+0xc],esi
64013902:	jb     0x64013915
64013904:	push   esi
64013905:	push   DWORD PTR [ebp+0x10]
64013908:	push   DWORD PTR [ebp+0x8]
6401390b:	call   0x64015990
64013910:	add    esp,0xc
64013913:	jmp    0x640138d6
64013915:	push   DWORD PTR [ebp+0xc]
64013918:	push   edi
64013919:	push   DWORD PTR [ebp+0x8]
6401391c:	call   0x64014670
64013921:	add    esp,0xc
64013924:	cmp    DWORD PTR [ebp+0x10],edi
64013927:	je     0x640138df
64013929:	cmp    DWORD PTR [ebp+0xc],esi
6401392c:	jae    0x6401393c
6401392e:	call   0x64015d30
64013933:	push   0x22
64013935:	pop    ecx
64013936:	mov    DWORD PTR [eax],ecx
64013938:	mov    esi,ecx
6401393a:	jmp    0x640138e9
6401393c:	push   0x16
6401393e:	pop    eax
6401393f:	pop    edi
64013940:	pop    esi
64013941:	pop    ebp
64013942:	ret    
64013943:	push   ebp
64013944:	mov    ebp,esp
64013946:	mov    eax,DWORD PTR [ebp+0x14]
64013949:	push   esi
6401394a:	push   edi
6401394b:	xor    edi,edi
6401394d:	cmp    eax,edi
6401394f:	je     0x64013998
64013951:	cmp    DWORD PTR [ebp+0x8],edi
64013954:	jne    0x64013971
64013956:	call   0x64015d30
6401395b:	push   0x16
6401395d:	pop    esi
6401395e:	mov    DWORD PTR [eax],esi
64013960:	push   edi
64013961:	push   edi
64013962:	push   edi
64013963:	push   edi
64013964:	push   edi
64013965:	call   0x64013aa4
6401396a:	add    esp,0x14
6401396d:	mov    eax,esi
6401396f:	jmp    0x6401399a
64013971:	cmp    DWORD PTR [ebp+0x10],edi
64013974:	je     0x64013956
64013976:	cmp    DWORD PTR [ebp+0xc],eax
64013979:	jae    0x64013989
6401397b:	call   0x64015d30
64013980:	push   0x22
64013982:	pop    ecx
64013983:	mov    DWORD PTR [eax],ecx
64013985:	mov    esi,ecx
64013987:	jmp    0x64013960
64013989:	push   eax
6401398a:	push   DWORD PTR [ebp+0x10]
6401398d:	push   DWORD PTR [ebp+0x8]
64013990:	call   0x64014fb0
64013995:	add    esp,0xc
64013998:	xor    eax,eax
6401399a:	pop    edi
6401399b:	pop    esi
6401399c:	pop    ebp
6401399d:	ret    
6401399e:	mov    eax,DWORD PTR [esp+0x4]
640139a2:	mov    ds:0x6403055c,eax
640139a7:	ret    
640139a8:	push   ebp
640139a9:	lea    ebp,[esp-0x2a8]
640139b0:	sub    esp,0x328
640139b6:	mov    eax,ds:0x6402f09c
640139bb:	xor    eax,ebp
640139bd:	mov    DWORD PTR [ebp+0x2a4],eax
640139c3:	push   esi
640139c4:	mov    DWORD PTR [ebp+0x88],eax
640139ca:	mov    DWORD PTR [ebp+0x84],ecx
640139d0:	mov    DWORD PTR [ebp+0x80],edx
640139d6:	mov    DWORD PTR [ebp+0x7c],ebx
640139d9:	mov    DWORD PTR [ebp+0x78],esi
640139dc:	mov    DWORD PTR [ebp+0x74],edi
640139df:	data16 mov WORD PTR [ebp+0xa0],ss
640139e6:	data16 mov WORD PTR [ebp+0x94],cs
640139ed:	data16 mov WORD PTR [ebp+0x70],ds
640139f1:	data16 mov WORD PTR [ebp+0x6c],es
640139f5:	data16 mov WORD PTR [ebp+0x68],fs
640139f9:	data16 mov WORD PTR [ebp+0x64],gs
640139fd:	pushf  
640139fe:	pop    DWORD PTR [ebp+0x98]
64013a04:	mov    esi,DWORD PTR [ebp+0x2ac]
64013a0a:	lea    eax,[ebp+0x2ac]
64013a10:	mov    DWORD PTR [ebp+0x9c],eax
64013a16:	mov    DWORD PTR [ebp-0x28],0x10001
64013a1d:	mov    DWORD PTR [ebp+0x90],esi
64013a23:	mov    eax,DWORD PTR [eax-0x4]
64013a26:	push   0x50
64013a28:	mov    DWORD PTR [ebp+0x8c],eax
64013a2e:	lea    eax,[ebp-0x80]
64013a31:	push   0x0
64013a33:	push   eax
64013a34:	call   0x64014670
64013a39:	lea    eax,[ebp-0x80]
64013a3c:	mov    DWORD PTR [ebp-0x30],eax
64013a3f:	lea    eax,[ebp-0x28]
64013a42:	add    esp,0xc
64013a45:	mov    DWORD PTR [ebp-0x80],0xc000000d
64013a4c:	mov    DWORD PTR [ebp-0x74],esi
64013a4f:	mov    DWORD PTR [ebp-0x2c],eax
64013a52:	call   DWORD PTR ds:0x64026114
64013a58:	push   0x0
64013a5a:	mov    esi,eax
64013a5c:	call   DWORD PTR ds:0x64026110
64013a62:	lea    eax,[ebp-0x30]
64013a65:	push   eax
64013a66:	call   DWORD PTR ds:0x6402610c
64013a6c:	test   eax,eax
64013a6e:	jne    0x64013a7c
64013a70:	test   esi,esi
64013a72:	jne    0x64013a7c
64013a74:	push   0x2
64013a76:	call   0x64015d74
64013a7b:	pop    ecx
64013a7c:	push   0xc000000d
64013a81:	call   DWORD PTR ds:0x64026048
64013a87:	push   eax
64013a88:	call   DWORD PTR ds:0x64026108
64013a8e:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013a94:	xor    ecx,ebp
64013a96:	pop    esi
64013a97:	call   0x64013f6c
64013a9c:	add    ebp,0x2a8
64013aa2:	leave  
64013aa3:	ret    
64013aa4:	push   ebp
64013aa5:	mov    ebp,esp
64013aa7:	push   DWORD PTR ds:0x6403055c
64013aad:	call   0x64015e5f
64013ab2:	test   eax,eax
64013ab4:	pop    ecx
64013ab5:	je     0x64013aba
64013ab7:	pop    ebp
64013ab8:	jmp    eax
64013aba:	push   0x2
64013abc:	call   0x64015d74
64013ac1:	pop    ecx
64013ac2:	pop    ebp
64013ac3:	jmp    0x640139a8
64013ac8:	xor    eax,eax
64013aca:	push   eax
64013acb:	push   eax
64013acc:	push   eax
64013acd:	push   eax
64013ace:	push   eax
64013acf:	call   0x64013aa4
64013ad4:	add    esp,0x14
64013ad7:	ret    
64013ad8:	push   esi
64013ad9:	push   0x1
64013adb:	push   0x6402f098
64013ae0:	mov    esi,ecx
64013ae2:	call   0x640137bb
64013ae7:	mov    DWORD PTR [esi],0x64026304
64013aed:	mov    eax,esi
64013aef:	pop    esi
64013af0:	ret    
64013af1:	push   ebp
64013af2:	mov    ebp,esp
64013af4:	sub    esp,0xc
64013af7:	jmp    0x64013b06
64013af9:	push   DWORD PTR [ebp+0x8]
64013afc:	call   0x640163ab
64013b01:	test   eax,eax
64013b03:	pop    ecx
64013b04:	je     0x64013b15
64013b06:	push   DWORD PTR [ebp+0x8]
64013b09:	call   0x64014ee3
64013b0e:	test   eax,eax
64013b10:	pop    ecx
64013b11:	je     0x64013af9
64013b13:	leave  
64013b14:	ret    
64013b15:	test   BYTE PTR ds:0x6403056c,0x1
64013b1c:	mov    esi,0x64030560
64013b21:	jne    0x64013b3c
64013b23:	or     DWORD PTR ds:0x6403056c,0x1
64013b2a:	mov    ecx,esi
64013b2c:	call   0x64013ad8
64013b31:	push   0x640257ea
64013b36:	call   0x6401409f
64013b3b:	pop    ecx
64013b3c:	push   esi
64013b3d:	lea    ecx,[ebp-0xc]
64013b40:	call   0x640137d3
64013b45:	push   0x6402c874
64013b4a:	lea    eax,[ebp-0xc]
64013b4d:	push   eax
64013b4e:	mov    DWORD PTR [ebp-0xc],0x64026304
64013b55:	call   0x64013b5b
64013b5a:	int3   
64013b5b:	push   ebp
64013b5c:	mov    ebp,esp
64013b5e:	sub    esp,0x20
64013b61:	mov    eax,DWORD PTR [ebp+0x8]
64013b64:	push   esi
64013b65:	push   edi
64013b66:	push   0x8
64013b68:	pop    ecx
64013b69:	mov    esi,0x64026c98
64013b6e:	lea    edi,[ebp-0x20]
64013b71:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013b73:	mov    DWORD PTR [ebp-0x8],eax
64013b76:	mov    eax,DWORD PTR [ebp+0xc]
64013b79:	test   eax,eax
64013b7b:	pop    edi
64013b7c:	mov    DWORD PTR [ebp-0x4],eax
64013b7f:	pop    esi
64013b80:	je     0x64013b8e
64013b82:	test   BYTE PTR [eax],0x8
64013b85:	je     0x64013b8e
64013b87:	mov    DWORD PTR [ebp-0xc],0x1994000
64013b8e:	lea    eax,[ebp-0xc]
64013b91:	push   eax
64013b92:	push   DWORD PTR [ebp-0x10]
64013b95:	push   DWORD PTR [ebp-0x1c]
64013b98:	push   DWORD PTR [ebp-0x20]
64013b9b:	call   DWORD PTR ds:0x640260ec
64013ba1:	leave  
64013ba2:	ret    0x8
64013ba5:	push   ebp
64013ba6:	mov    ebp,esp
64013ba8:	push   ecx
64013ba9:	push   ebx
64013baa:	mov    eax,DWORD PTR [ebp+0xc]
64013bad:	add    eax,0xc
64013bb0:	mov    DWORD PTR [ebp-0x4],eax
64013bb3:	mov    ebx,DWORD PTR fs:0x0
64013bba:	mov    eax,DWORD PTR [ebx]
64013bbc:	mov    fs:0x0,eax
64013bc2:	mov    eax,DWORD PTR [ebp+0x8]
64013bc5:	mov    ebx,DWORD PTR [ebp+0xc]
64013bc8:	mov    ebp,DWORD PTR [ebp-0x4]
64013bcb:	mov    esp,DWORD PTR [ebx-0x4]
64013bce:	jmp    eax
64013bd0:	pop    ebx
64013bd1:	leave  
64013bd2:	ret    0x8
64013bd5:	pop    eax
64013bd6:	pop    ecx
64013bd7:	xchg   DWORD PTR [esp],eax
64013bda:	jmp    eax
64013bdc:	push   ebp
64013bdd:	mov    ebp,esp
64013bdf:	push   ecx
64013be0:	push   ecx
64013be1:	push   ebx
64013be2:	push   esi
64013be3:	push   edi
64013be4:	mov    esi,DWORD PTR fs:0x0
64013beb:	mov    DWORD PTR [ebp-0x4],esi
64013bee:	mov    DWORD PTR [ebp-0x8],0x64013c05
64013bf5:	push   0x0
64013bf7:	push   DWORD PTR [ebp+0xc]
64013bfa:	push   DWORD PTR [ebp-0x8]
64013bfd:	push   DWORD PTR [ebp+0x8]
64013c00:	call   0x640201dc
64013c05:	mov    eax,DWORD PTR [ebp+0xc]
64013c08:	mov    eax,DWORD PTR [eax+0x4]
64013c0b:	and    eax,0xfffffffd
64013c0e:	mov    ecx,DWORD PTR [ebp+0xc]
64013c11:	mov    DWORD PTR [ecx+0x4],eax
64013c14:	mov    edi,DWORD PTR fs:0x0
64013c1b:	mov    ebx,DWORD PTR [ebp-0x4]
64013c1e:	mov    DWORD PTR [ebx],edi
64013c20:	mov    DWORD PTR fs:0x0,ebx
64013c27:	pop    edi
64013c28:	pop    esi
64013c29:	pop    ebx
64013c2a:	leave  
64013c2b:	ret    0x8
64013c2e:	push   ebp
64013c2f:	mov    ebp,esp
64013c31:	sub    esp,0x8
64013c34:	push   ebx
64013c35:	push   esi
64013c36:	push   edi
64013c37:	cld    
64013c38:	mov    DWORD PTR [ebp-0x4],eax
64013c3b:	xor    eax,eax
64013c3d:	push   eax
64013c3e:	push   eax
64013c3f:	push   eax
64013c40:	push   DWORD PTR [ebp-0x4]
64013c43:	push   DWORD PTR [ebp+0x14]
64013c46:	push   DWORD PTR [ebp+0x10]
64013c49:	push   DWORD PTR [ebp+0xc]
64013c4c:	push   DWORD PTR [ebp+0x8]
64013c4f:	call   0x64016f73
64013c54:	add    esp,0x20
64013c57:	mov    DWORD PTR [ebp-0x8],eax
64013c5a:	pop    edi
64013c5b:	pop    esi
64013c5c:	pop    ebx
64013c5d:	mov    eax,DWORD PTR [ebp-0x8]
64013c60:	mov    esp,ebp
64013c62:	pop    ebp
64013c63:	ret    
64013c64:	push   esi
64013c65:	cld    
64013c66:	mov    esi,DWORD PTR [esp+0xc]
64013c6a:	mov    ecx,DWORD PTR [esi+0x8]
64013c6d:	xor    ecx,esi
64013c6f:	call   0x64013f6c
64013c74:	push   0x0
64013c76:	push   esi
64013c77:	push   DWORD PTR [esi+0x14]
64013c7a:	push   DWORD PTR [esi+0xc]
64013c7d:	push   0x0
64013c7f:	push   DWORD PTR [esp+0x24]
64013c83:	push   DWORD PTR [esi+0x10]
64013c86:	push   DWORD PTR [esp+0x24]
64013c8a:	call   0x64016f73
64013c8f:	add    esp,0x20
64013c92:	pop    esi
64013c93:	ret    
64013c94:	push   ebp
64013c95:	mov    ebp,esp
64013c97:	sub    esp,0x38
64013c9a:	push   ebx
64013c9b:	cmp    DWORD PTR [ebp+0x8],0x123
64013ca2:	jne    0x64013cb6
64013ca4:	mov    eax,0x64013d3d
64013ca9:	mov    ecx,DWORD PTR [ebp+0xc]
64013cac:	mov    DWORD PTR [ecx],eax
64013cae:	xor    eax,eax
64013cb0:	inc    eax
64013cb1:	jmp    0x64013d66
64013cb6:	and    DWORD PTR [ebp-0x28],0x0
64013cba:	mov    DWORD PTR [ebp-0x24],0x64013d69
64013cc1:	mov    eax,ds:0x6402f09c
64013cc6:	lea    ecx,[ebp-0x28]
64013cc9:	xor    eax,ecx
64013ccb:	mov    DWORD PTR [ebp-0x20],eax
64013cce:	mov    eax,DWORD PTR [ebp+0x18]
64013cd1:	mov    DWORD PTR [ebp-0x1c],eax
64013cd4:	mov    eax,DWORD PTR [ebp+0xc]
64013cd7:	mov    DWORD PTR [ebp-0x18],eax
64013cda:	mov    eax,DWORD PTR [ebp+0x1c]
64013cdd:	mov    DWORD PTR [ebp-0x14],eax
64013ce0:	mov    eax,DWORD PTR [ebp+0x20]
64013ce3:	mov    DWORD PTR [ebp-0x10],eax
64013ce6:	and    DWORD PTR [ebp-0xc],0x0
64013cea:	and    DWORD PTR [ebp-0x8],0x0
64013cee:	and    DWORD PTR [ebp-0x4],0x0
64013cf2:	mov    DWORD PTR [ebp-0xc],esp
64013cf5:	mov    DWORD PTR [ebp-0x8],ebp
64013cf8:	mov    eax,fs:0x0
64013cfe:	mov    DWORD PTR [ebp-0x28],eax
64013d01:	lea    eax,[ebp-0x28]
64013d04:	mov    fs:0x0,eax
64013d0a:	mov    DWORD PTR [ebp-0x38],0x1
64013d11:	mov    eax,DWORD PTR [ebp+0x8]
64013d14:	mov    DWORD PTR [ebp-0x34],eax
64013d17:	mov    eax,DWORD PTR [ebp+0x10]
64013d1a:	mov    DWORD PTR [ebp-0x30],eax
64013d1d:	call   0x6401607b
64013d22:	mov    eax,DWORD PTR [eax+0x80]
64013d28:	mov    DWORD PTR [ebp-0x2c],eax
64013d2b:	lea    eax,[ebp-0x34]
64013d2e:	push   eax
64013d2f:	mov    eax,DWORD PTR [ebp+0x8]
64013d32:	push   DWORD PTR [eax]
64013d34:	call   DWORD PTR [ebp-0x2c]
64013d37:	pop    ecx
64013d38:	pop    ecx
64013d39:	and    DWORD PTR [ebp-0x38],0x0
64013d3d:	cmp    DWORD PTR [ebp-0x4],0x0
64013d41:	je     0x64013d5a
64013d43:	mov    ebx,DWORD PTR fs:0x0
64013d4a:	mov    eax,DWORD PTR [ebx]
64013d4c:	mov    ebx,DWORD PTR [ebp-0x28]
64013d4f:	mov    DWORD PTR [ebx],eax
64013d51:	mov    DWORD PTR fs:0x0,ebx
64013d58:	jmp    0x64013d63
64013d5a:	mov    eax,DWORD PTR [ebp-0x28]
64013d5d:	mov    fs:0x0,eax
64013d63:	mov    eax,DWORD PTR [ebp-0x38]
64013d66:	pop    ebx
64013d67:	leave  
64013d68:	ret    
64013d69:	push   ebp
64013d6a:	mov    ebp,esp
64013d6c:	push   ecx
64013d6d:	push   ebx
64013d6e:	cld    
64013d6f:	mov    eax,DWORD PTR [ebp+0xc]
64013d72:	mov    ecx,DWORD PTR [eax+0x8]
64013d75:	xor    ecx,DWORD PTR [ebp+0xc]
64013d78:	call   0x64013f6c
64013d7d:	mov    eax,DWORD PTR [ebp+0x8]
64013d80:	mov    eax,DWORD PTR [eax+0x4]
64013d83:	and    eax,0x66
64013d86:	je     0x64013d99
64013d88:	mov    eax,DWORD PTR [ebp+0xc]
64013d8b:	mov    DWORD PTR [eax+0x24],0x1
64013d92:	xor    eax,eax
64013d94:	inc    eax
64013d95:	jmp    0x64013e03
64013d97:	jmp    0x64013e03
64013d99:	push   0x1
64013d9b:	mov    eax,DWORD PTR [ebp+0xc]
64013d9e:	push   DWORD PTR [eax+0x18]
64013da1:	mov    eax,DWORD PTR [ebp+0xc]
64013da4:	push   DWORD PTR [eax+0x14]
64013da7:	mov    eax,DWORD PTR [ebp+0xc]
64013daa:	push   DWORD PTR [eax+0xc]
64013dad:	push   0x0
64013daf:	push   DWORD PTR [ebp+0x10]
64013db2:	mov    eax,DWORD PTR [ebp+0xc]
64013db5:	push   DWORD PTR [eax+0x10]
64013db8:	push   DWORD PTR [ebp+0x8]
64013dbb:	call   0x64016f73
64013dc0:	add    esp,0x20
64013dc3:	mov    eax,DWORD PTR [ebp+0xc]
64013dc6:	cmp    DWORD PTR [eax+0x24],0x0
64013dca:	jne    0x64013dd7
64013dcc:	push   DWORD PTR [ebp+0x8]
64013dcf:	push   DWORD PTR [ebp+0xc]
64013dd2:	call   0x64013bdc
64013dd7:	push   0x0
64013dd9:	push   0x0
64013ddb:	push   0x0
64013ddd:	push   0x0
64013ddf:	push   0x0
64013de1:	lea    eax,[ebp-0x4]
64013de4:	push   eax
64013de5:	push   0x123
64013dea:	call   0x64013c94
64013def:	add    esp,0x1c
64013df2:	mov    eax,DWORD PTR [ebp-0x4]
64013df5:	mov    ebx,DWORD PTR [ebp+0xc]
64013df8:	mov    esp,DWORD PTR [ebx+0x1c]
64013dfb:	mov    ebp,DWORD PTR [ebx+0x20]
64013dfe:	jmp    eax
64013e00:	xor    eax,eax
64013e02:	inc    eax
64013e03:	pop    ebx
64013e04:	leave  
64013e05:	ret    
64013e06:	push   ebp
64013e07:	mov    ebp,esp
64013e09:	push   ecx
64013e0a:	push   ebx
64013e0b:	push   esi
64013e0c:	push   edi
64013e0d:	mov    edi,DWORD PTR [ebp+0x8]
64013e10:	mov    eax,DWORD PTR [edi+0x10]
64013e13:	mov    esi,DWORD PTR [edi+0xc]
64013e16:	mov    DWORD PTR [ebp-0x4],eax
64013e19:	mov    ebx,esi
64013e1b:	jmp    0x64013e4a
64013e1d:	cmp    esi,0xffffffff
64013e20:	jne    0x64013e27
64013e22:	call   0x640170a3
64013e27:	mov    ecx,DWORD PTR [ebp-0x4]
64013e2a:	dec    esi
64013e2b:	mov    eax,esi
64013e2d:	imul   eax,eax,0x14
64013e30:	add    eax,ecx
64013e32:	mov    ecx,DWORD PTR [ebp+0x10]
64013e35:	cmp    DWORD PTR [eax+0x4],ecx
64013e38:	jge    0x64013e3f
64013e3a:	cmp    ecx,DWORD PTR [eax+0x8]
64013e3d:	jle    0x64013e44
64013e3f:	cmp    esi,0xffffffff
64013e42:	jne    0x64013e4d
64013e44:	dec    DWORD PTR [ebp+0xc]
64013e47:	mov    ebx,DWORD PTR [ebp+0x8]
64013e4a:	mov    DWORD PTR [ebp+0x8],esi
64013e4d:	cmp    DWORD PTR [ebp+0xc],0x0
64013e51:	jge    0x64013e1d
64013e53:	mov    eax,DWORD PTR [ebp+0x14]
64013e56:	inc    esi
64013e57:	mov    DWORD PTR [eax],esi
64013e59:	mov    eax,DWORD PTR [ebp+0x18]
64013e5c:	mov    DWORD PTR [eax],ebx
64013e5e:	cmp    ebx,DWORD PTR [edi+0xc]
64013e61:	ja     0x64013e67
64013e63:	cmp    esi,ebx
64013e65:	jbe    0x64013e6c
64013e67:	call   0x640170a3
64013e6c:	mov    eax,esi
64013e6e:	imul   eax,eax,0x14
64013e71:	add    eax,DWORD PTR [ebp-0x4]
64013e74:	pop    edi
64013e75:	pop    esi
64013e76:	pop    ebx
64013e77:	leave  
64013e78:	ret    
64013e79:	mov    eax,DWORD PTR [esp+0x8]
64013e7d:	push   esi
64013e7e:	mov    esi,DWORD PTR [esp+0x8]
64013e82:	mov    DWORD PTR [esi],eax
64013e84:	call   0x6401607b
64013e89:	mov    eax,DWORD PTR [eax+0x98]
64013e8f:	mov    DWORD PTR [esi+0x4],eax
64013e92:	call   0x6401607b
64013e97:	mov    DWORD PTR [eax+0x98],esi
64013e9d:	mov    eax,esi
64013e9f:	pop    esi
64013ea0:	ret    
64013ea1:	call   0x6401607b
64013ea6:	mov    eax,DWORD PTR [eax+0x98]
64013eac:	jmp    0x64013eb9
64013eae:	mov    ecx,DWORD PTR [eax]
64013eb0:	cmp    ecx,DWORD PTR [esp+0x4]
64013eb4:	je     0x64013ebf
64013eb6:	mov    eax,DWORD PTR [eax+0x4]
64013eb9:	test   eax,eax
64013ebb:	jne    0x64013eae
64013ebd:	inc    eax
64013ebe:	ret    
64013ebf:	xor    eax,eax
64013ec1:	ret    
64013ec2:	push   esi
64013ec3:	call   0x6401607b
64013ec8:	mov    esi,DWORD PTR [esp+0x8]
64013ecc:	cmp    esi,DWORD PTR [eax+0x98]
64013ed2:	jne    0x64013ee4
64013ed4:	call   0x6401607b
64013ed9:	mov    ecx,DWORD PTR [esi+0x4]
64013edc:	mov    DWORD PTR [eax+0x98],ecx
64013ee2:	pop    esi
64013ee3:	ret    
64013ee4:	call   0x6401607b
64013ee9:	mov    eax,DWORD PTR [eax+0x98]
64013eef:	jmp    0x64013efa
64013ef1:	mov    ecx,DWORD PTR [eax+0x4]
64013ef4:	cmp    esi,ecx
64013ef6:	je     0x64013f06
64013ef8:	mov    eax,ecx
64013efa:	cmp    DWORD PTR [eax+0x4],0x0
64013efe:	jne    0x64013ef1
64013f00:	pop    esi
64013f01:	jmp    0x640170a3
64013f06:	mov    ecx,DWORD PTR [esi+0x4]
64013f09:	mov    DWORD PTR [eax+0x4],ecx
64013f0c:	pop    esi
64013f0d:	ret    
64013f0e:	push   ebp
64013f0f:	mov    ebp,esp
64013f11:	sub    esp,0x18
64013f14:	mov    eax,ds:0x6402f09c
64013f19:	and    DWORD PTR [ebp-0x18],0x0
64013f1d:	lea    ecx,[ebp-0x18]
64013f20:	xor    eax,ecx
64013f22:	mov    ecx,DWORD PTR [ebp+0x8]
64013f25:	mov    DWORD PTR [ebp-0x10],eax
64013f28:	mov    eax,DWORD PTR [ebp+0xc]
64013f2b:	mov    DWORD PTR [ebp-0xc],eax
64013f2e:	mov    eax,DWORD PTR [ebp+0x14]
64013f31:	inc    eax
64013f32:	mov    DWORD PTR [ebp-0x14],0x64013c64
64013f39:	mov    DWORD PTR [ebp-0x8],ecx
64013f3c:	mov    DWORD PTR [ebp-0x4],eax
64013f3f:	mov    eax,fs:0x0
64013f45:	mov    DWORD PTR [ebp-0x18],eax
64013f48:	lea    eax,[ebp-0x18]
64013f4b:	mov    fs:0x0,eax
64013f51:	push   DWORD PTR [ebp+0x18]
64013f54:	push   ecx
64013f55:	push   DWORD PTR [ebp+0x10]
64013f58:	call   0x640170f0
64013f5d:	mov    ecx,eax
64013f5f:	mov    eax,DWORD PTR [ebp-0x18]
64013f62:	mov    fs:0x0,eax
64013f68:	mov    eax,ecx
64013f6a:	leave  
64013f6b:	ret    
64013f6c:	cmp    ecx,DWORD PTR ds:0x6402f09c
64013f72:	jne    0x64013f76
64013f74:	repz ret 
64013f76:	jmp    0x6401713c
64013f7b:	push   ecx
64013f7c:	push   ebx
64013f7d:	push   ebp
64013f7e:	push   esi
64013f7f:	push   edi
64013f80:	push   DWORD PTR ds:0x64034650
64013f86:	call   0x64015e5f
64013f8b:	push   DWORD PTR ds:0x6403464c
64013f91:	mov    esi,eax
64013f93:	mov    DWORD PTR [esp+0x18],esi
64013f97:	call   0x64015e5f
64013f9c:	mov    edi,eax
64013f9e:	cmp    edi,esi
64013fa0:	pop    ecx
64013fa1:	pop    ecx
64013fa2:	jb     0x6401402c
64013fa8:	mov    ebx,edi
64013faa:	sub    ebx,esi
64013fac:	lea    ebp,[ebx+0x4]
64013faf:	cmp    ebp,0x4
64013fb2:	jb     0x6401402c
64013fb4:	push   esi
64013fb5:	call   0x64017313
64013fba:	mov    esi,eax
64013fbc:	cmp    esi,ebp
64013fbe:	pop    ecx
64013fbf:	jae    0x6401400b
64013fc1:	mov    eax,0x800
64013fc6:	cmp    esi,eax
64013fc8:	jae    0x64013fcc
64013fca:	mov    eax,esi
64013fcc:	add    eax,esi
64013fce:	cmp    eax,esi
64013fd0:	jb     0x64013fe2
64013fd2:	push   eax
64013fd3:	push   DWORD PTR [esp+0x14]
64013fd7:	call   0x640172c8
64013fdc:	test   eax,eax
64013fde:	pop    ecx
64013fdf:	pop    ecx
64013fe0:	jne    0x64013ff9
64013fe2:	lea    eax,[esi+0x10]
64013fe5:	cmp    eax,esi
64013fe7:	jb     0x6401402c
64013fe9:	push   eax
64013fea:	push   DWORD PTR [esp+0x14]
64013fee:	call   0x640172c8
64013ff3:	test   eax,eax
64013ff5:	pop    ecx
64013ff6:	pop    ecx
64013ff7:	je     0x6401402c
64013ff9:	sar    ebx,0x2
64013ffc:	push   eax
64013ffd:	lea    edi,[eax+ebx*4]
64014000:	call   0x64015de8
64014005:	pop    ecx
64014006:	mov    ds:0x64034650,eax
6401400b:	push   DWORD PTR [esp+0x18]
6401400f:	call   0x64015de8
64014014:	mov    DWORD PTR [edi],eax
64014016:	add    edi,0x4
64014019:	push   edi
6401401a:	call   0x64015de8
6401401f:	pop    ecx
64014020:	mov    ds:0x6403464c,eax
64014025:	mov    eax,DWORD PTR [esp+0x1c]
64014029:	pop    ecx
6401402a:	jmp    0x6401402e
6401402c:	xor    eax,eax
6401402e:	pop    edi
6401402f:	pop    esi
64014030:	pop    ebp
64014031:	pop    ebx
64014032:	pop    ecx
64014033:	ret    
64014034:	push   esi
64014035:	push   0x4
64014037:	push   0x20
64014039:	call   0x64017280
6401403e:	mov    esi,eax
64014040:	push   esi
64014041:	call   0x64015de8
64014046:	add    esp,0xc
64014049:	test   esi,esi
6401404b:	mov    ds:0x64034650,eax
64014050:	mov    ds:0x6403464c,eax
64014055:	jne    0x6401405c
64014057:	push   0x18
64014059:	pop    eax
6401405a:	pop    esi
6401405b:	ret    
6401405c:	and    DWORD PTR [esi],0x0
6401405f:	xor    eax,eax
64014061:	pop    esi
64014062:	ret    
64014063:	push   0xc
64014065:	push   0x6402c280
6401406a:	call   0x64015530
6401406f:	call   0x64017415
64014074:	and    DWORD PTR [ebp-0x4],0x0
64014078:	push   DWORD PTR [ebp+0x8]
6401407b:	call   0x64013f7b
64014080:	pop    ecx
64014081:	mov    DWORD PTR [ebp-0x1c],eax
64014084:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401408b:	call   0x64014099
64014090:	mov    eax,DWORD PTR [ebp-0x1c]
64014093:	call   0x64015575
64014098:	ret    
64014099:	call   0x6401741e
6401409e:	ret    
6401409f:	push   DWORD PTR [esp+0x4]
640140a3:	call   0x64014063
640140a8:	neg    eax
640140aa:	sbb    eax,eax
640140ac:	neg    eax
640140ae:	pop    ecx
640140af:	dec    eax
640140b0:	ret    
640140b1:	mov    eax,DWORD PTR [esp+0x4]
640140b5:	push   ebx
640140b6:	mov    ebx,DWORD PTR [esp+0xc]
640140ba:	cmp    WORD PTR [ebx],0x0
640140be:	push   edi
640140bf:	mov    edi,eax
640140c1:	je     0x64014108
640140c3:	movzx  ecx,WORD PTR [eax]
640140c6:	test   cx,cx
640140c9:	je     0x64014106
640140cb:	movzx  edx,cx
640140ce:	sub    eax,ebx
640140d0:	test   dx,dx
640140d3:	mov    ecx,DWORD PTR [esp+0x10]
640140d7:	je     0x640140f4
640140d9:	movzx  edx,WORD PTR [ecx]
640140dc:	test   dx,dx
640140df:	je     0x6401410b
640140e1:	movzx  ebx,WORD PTR [eax+ecx*1]
640140e5:	movzx  edx,dx
640140e8:	sub    ebx,edx
640140ea:	jne    0x640140f4
640140ec:	inc    ecx
640140ed:	inc    ecx
640140ee:	cmp    WORD PTR [eax+ecx*1],bx
640140f2:	jne    0x640140d9
640140f4:	cmp    WORD PTR [ecx],0x0
640140f8:	je     0x6401410b
640140fa:	inc    edi
640140fb:	inc    edi
640140fc:	movzx  edx,WORD PTR [edi]
640140ff:	inc    eax
64014100:	inc    eax
64014101:	test   dx,dx
64014104:	jne    0x640140d0
64014106:	xor    eax,eax
64014108:	pop    edi
64014109:	pop    ebx
6401410a:	ret    
6401410b:	mov    eax,edi
6401410d:	jmp    0x64014108
6401410f:	mov    eax,DWORD PTR [esp+0x4]
64014113:	test   eax,eax
64014115:	push   esi
64014116:	mov    esi,ecx
64014118:	mov    BYTE PTR [esi+0xc],0x0
6401411c:	jne    0x64014181
6401411e:	call   0x6401607b
64014123:	mov    DWORD PTR [esi+0x8],eax
64014126:	mov    ecx,DWORD PTR [eax+0x6c]
64014129:	mov    DWORD PTR [esi],ecx
6401412b:	mov    ecx,DWORD PTR [eax+0x68]
6401412e:	mov    DWORD PTR [esi+0x4],ecx
64014131:	mov    ecx,DWORD PTR [esi]
64014133:	cmp    ecx,DWORD PTR ds:0x6402f870
64014139:	je     0x6401414d
6401413b:	mov    ecx,DWORD PTR ds:0x6402f78c
64014141:	test   DWORD PTR [eax+0x70],ecx
64014144:	jne    0x6401414d
64014146:	call   0x64017fff
6401414b:	mov    DWORD PTR [esi],eax
6401414d:	mov    eax,DWORD PTR [esi+0x4]
64014150:	cmp    eax,DWORD PTR ds:0x6402f690
64014156:	je     0x6401416e
64014158:	mov    eax,DWORD PTR [esi+0x8]
6401415b:	mov    ecx,DWORD PTR ds:0x6402f78c
64014161:	test   DWORD PTR [eax+0x70],ecx
64014164:	jne    0x6401416e
64014166:	call   0x640178c0
6401416b:	mov    DWORD PTR [esi+0x4],eax
6401416e:	mov    eax,DWORD PTR [esi+0x8]
64014171:	test   BYTE PTR [eax+0x70],0x2
64014175:	jne    0x6401418b
64014177:	or     DWORD PTR [eax+0x70],0x2
6401417b:	mov    BYTE PTR [esi+0xc],0x1
6401417f:	jmp    0x6401418b
64014181:	mov    ecx,DWORD PTR [eax]
64014183:	mov    DWORD PTR [esi],ecx
64014185:	mov    eax,DWORD PTR [eax+0x4]
64014188:	mov    DWORD PTR [esi+0x4],eax
6401418b:	mov    eax,esi
6401418d:	pop    esi
6401418e:	ret    0x4
64014191:	push   ebp
64014192:	mov    ebp,esp
64014194:	sub    esp,0x20
64014197:	push   esi
64014198:	xor    esi,esi
6401419a:	cmp    DWORD PTR [ebp+0xc],esi
6401419d:	jne    0x640141bc
6401419f:	call   0x64015d30
640141a4:	push   esi
640141a5:	push   esi
640141a6:	push   esi
640141a7:	push   esi
640141a8:	push   esi
640141a9:	mov    DWORD PTR [eax],0x16
640141af:	call   0x64013aa4
640141b4:	add    esp,0x14
640141b7:	or     eax,0xffffffff
640141ba:	jmp    0x640141e3
640141bc:	push   DWORD PTR [ebp+0x14]
640141bf:	lea    eax,[ebp-0x20]
640141c2:	push   DWORD PTR [ebp+0x10]
640141c5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640141cc:	push   DWORD PTR [ebp+0xc]
640141cf:	mov    DWORD PTR [ebp-0x14],0x42
640141d6:	push   eax
640141d7:	mov    DWORD PTR [ebp-0x18],esi
640141da:	mov    DWORD PTR [ebp-0x20],esi
640141dd:	call   DWORD PTR [ebp+0x8]
640141e0:	add    esp,0x10
640141e3:	pop    esi
640141e4:	leave  
640141e5:	ret    
640141e6:	push   DWORD PTR [esp+0x8]
640141ea:	push   0x0
640141ec:	push   DWORD PTR [esp+0xc]
640141f0:	push   0x64018249
640141f5:	call   0x64014191
640141fa:	add    esp,0x10
640141fd:	ret    
640141fe:	push   ebp
640141ff:	mov    ebp,esp
64014201:	sub    esp,0x20
64014204:	push   ebx
64014205:	xor    ebx,ebx
64014207:	cmp    DWORD PTR [ebp+0x14],ebx
6401420a:	jne    0x6401422c
6401420c:	call   0x64015d30
64014211:	push   ebx
64014212:	push   ebx
64014213:	push   ebx
64014214:	push   ebx
64014215:	push   ebx
64014216:	mov    DWORD PTR [eax],0x16
6401421c:	call   0x64013aa4
64014221:	add    esp,0x14
64014224:	or     eax,0xffffffff
64014227:	jmp    0x640142f1
6401422c:	push   esi
6401422d:	mov    esi,DWORD PTR [ebp+0xc]
64014230:	push   edi
64014231:	mov    edi,DWORD PTR [ebp+0x10]
64014234:	cmp    edi,ebx
64014236:	je     0x6401425c
64014238:	cmp    esi,ebx
6401423a:	jne    0x6401425c
6401423c:	call   0x64015d30
64014241:	push   ebx
64014242:	push   ebx
64014243:	push   ebx
64014244:	push   ebx
64014245:	push   ebx
64014246:	mov    DWORD PTR [eax],0x16
6401424c:	call   0x64013aa4
64014251:	add    esp,0x14
64014254:	or     eax,0xffffffff
64014257:	jmp    0x640142ef
6401425c:	cmp    edi,0x3fffffff
64014262:	mov    DWORD PTR [ebp-0x14],0x42
64014269:	mov    DWORD PTR [ebp-0x18],esi
6401426c:	mov    DWORD PTR [ebp-0x20],esi
6401426f:	jbe    0x6401427a
64014271:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014278:	jmp    0x64014280
6401427a:	lea    eax,[edi+edi*1]
6401427d:	mov    DWORD PTR [ebp-0x1c],eax
64014280:	push   DWORD PTR [ebp+0x1c]
64014283:	lea    eax,[ebp-0x20]
64014286:	push   DWORD PTR [ebp+0x18]
64014289:	push   DWORD PTR [ebp+0x14]
6401428c:	push   eax
6401428d:	call   DWORD PTR [ebp+0x8]
64014290:	add    esp,0x10
64014293:	cmp    esi,ebx
64014295:	mov    DWORD PTR [ebp+0x14],eax
64014298:	je     0x640142ef
6401429a:	cmp    eax,ebx
6401429c:	jl     0x640142e0
6401429e:	dec    DWORD PTR [ebp-0x1c]
640142a1:	js     0x640142ad
640142a3:	mov    eax,DWORD PTR [ebp-0x20]
640142a6:	mov    BYTE PTR [eax],bl
640142a8:	inc    DWORD PTR [ebp-0x20]
640142ab:	jmp    0x640142be
640142ad:	lea    eax,[ebp-0x20]
640142b0:	push   eax
640142b1:	push   ebx
640142b2:	call   0x64018075
640142b7:	cmp    eax,0xffffffff
640142ba:	pop    ecx
640142bb:	pop    ecx
640142bc:	je     0x640142e0
640142be:	dec    DWORD PTR [ebp-0x1c]
640142c1:	js     0x640142ca
640142c3:	mov    eax,DWORD PTR [ebp-0x20]
640142c6:	mov    BYTE PTR [eax],bl
640142c8:	jmp    0x640142db
640142ca:	lea    eax,[ebp-0x20]
640142cd:	push   eax
640142ce:	push   ebx
640142cf:	call   0x64018075
640142d4:	cmp    eax,0xffffffff
640142d7:	pop    ecx
640142d8:	pop    ecx
640142d9:	je     0x640142e0
640142db:	mov    eax,DWORD PTR [ebp+0x14]
640142de:	jmp    0x640142ef
640142e0:	xor    eax,eax
640142e2:	cmp    DWORD PTR [ebp-0x1c],ebx
640142e5:	mov    WORD PTR [esi+edi*2-0x2],bx
640142ea:	setge  al
640142ed:	dec    eax
640142ee:	dec    eax
640142ef:	pop    edi
640142f0:	pop    esi
640142f1:	pop    ebx
640142f2:	leave  
640142f3:	ret    
640142f4:	push   ebp
640142f5:	mov    ebp,esp
640142f7:	push   esi
640142f8:	xor    esi,esi
640142fa:	cmp    DWORD PTR [ebp+0x10],esi
640142fd:	jne    0x6401431c
640142ff:	call   0x64015d30
64014304:	push   esi
64014305:	push   esi
64014306:	push   esi
64014307:	push   esi
64014308:	push   esi
64014309:	mov    DWORD PTR [eax],0x16
6401430f:	call   0x64013aa4
64014314:	add    esp,0x14
64014317:	or     eax,0xffffffff
6401431a:	jmp    0x64014378
6401431c:	push   edi
6401431d:	mov    edi,DWORD PTR [ebp+0x8]
64014320:	cmp    edi,esi
64014322:	je     0x64014329
64014324:	cmp    DWORD PTR [ebp+0xc],esi
64014327:	ja     0x64014336
64014329:	call   0x64015d30
6401432e:	mov    DWORD PTR [eax],0x16
64014334:	jmp    0x64014367
64014336:	push   DWORD PTR [ebp+0x18]
64014339:	push   DWORD PTR [ebp+0x14]
6401433c:	push   DWORD PTR [ebp+0x10]
6401433f:	push   DWORD PTR [ebp+0xc]
64014342:	push   edi
64014343:	push   0x64018b7e
64014348:	call   0x640141fe
6401434d:	add    esp,0x18
64014350:	cmp    eax,esi
64014352:	jge    0x64014357
64014354:	mov    WORD PTR [edi],si
64014357:	cmp    eax,0xfffffffe
6401435a:	jne    0x64014377
6401435c:	call   0x64015d30
64014361:	mov    DWORD PTR [eax],0x22
64014367:	push   esi
64014368:	push   esi
64014369:	push   esi
6401436a:	push   esi
6401436b:	push   esi
6401436c:	call   0x64013aa4
64014371:	add    esp,0x14
64014374:	or     eax,0xffffffff
64014377:	pop    edi
64014378:	pop    esi
64014379:	pop    ebp
6401437a:	ret    
6401437b:	push   DWORD PTR [esp+0x10]
6401437f:	push   0x0
64014381:	push   DWORD PTR [esp+0x14]
64014385:	push   DWORD PTR [esp+0x14]
64014389:	push   DWORD PTR [esp+0x14]
6401438d:	call   0x640142f4
64014392:	add    esp,0x14
64014395:	ret    
64014396:	mov    edx,DWORD PTR [esp+0x4]
6401439a:	push   ebx
6401439b:	push   esi
6401439c:	xor    esi,esi
6401439e:	cmp    edx,esi
640143a0:	push   edi
640143a1:	je     0x640143ab
640143a3:	mov    ebx,DWORD PTR [esp+0x14]
640143a7:	cmp    ebx,esi
640143a9:	ja     0x640143c6
640143ab:	call   0x64015d30
640143b0:	push   0x16
640143b2:	pop    edi
640143b3:	mov    DWORD PTR [eax],edi
640143b5:	push   esi
640143b6:	push   esi
640143b7:	push   esi
640143b8:	push   esi
640143b9:	push   esi
640143ba:	call   0x64013aa4
640143bf:	add    esp,0x14
640143c2:	mov    eax,edi
640143c4:	jmp    0x6401440c
640143c6:	mov    edi,DWORD PTR [esp+0x18]
640143ca:	cmp    edi,esi
640143cc:	jne    0x640143d3
640143ce:	mov    WORD PTR [edx],si
640143d1:	jmp    0x640143ab
640143d3:	mov    ecx,edx
640143d5:	cmp    WORD PTR [ecx],si
640143d8:	je     0x640143df
640143da:	inc    ecx
640143db:	inc    ecx
640143dc:	dec    ebx
640143dd:	jne    0x640143d5
640143df:	cmp    ebx,esi
640143e1:	je     0x640143ce
640143e3:	movzx  eax,WORD PTR [edi]
640143e6:	mov    WORD PTR [ecx],ax
640143e9:	inc    ecx
640143ea:	inc    ecx
640143eb:	inc    edi
640143ec:	inc    edi
640143ed:	cmp    ax,si
640143f0:	je     0x640143f5
640143f2:	dec    ebx
640143f3:	jne    0x640143e3
640143f5:	cmp    ebx,esi
640143f7:	jne    0x6401440a
640143f9:	mov    WORD PTR [edx],si
640143fc:	call   0x64015d30
64014401:	push   0x22
64014403:	pop    ecx
64014404:	mov    DWORD PTR [eax],ecx
64014406:	mov    edi,ecx
64014408:	jmp    0x640143b5
6401440a:	xor    eax,eax
6401440c:	pop    edi
6401440d:	pop    esi
6401440e:	pop    ebx
6401440f:	ret    
64014410:	mov    ecx,DWORD PTR [esp+0x4]
64014414:	push   ebx
64014415:	push   esi
64014416:	push   edi
64014417:	xor    edi,edi
64014419:	cmp    ecx,edi
6401441b:	je     0x64014425
6401441d:	mov    ebx,DWORD PTR [esp+0x14]
64014421:	cmp    ebx,edi
64014423:	ja     0x64014440
64014425:	call   0x64015d30
6401442a:	push   0x16
6401442c:	pop    esi
6401442d:	mov    DWORD PTR [eax],esi
6401442f:	push   edi
64014430:	push   edi
64014431:	push   edi
64014432:	push   edi
64014433:	push   edi
64014434:	call   0x64013aa4
64014439:	add    esp,0x14
6401443c:	mov    eax,esi
6401443e:	jmp    0x64014478
64014440:	mov    esi,DWORD PTR [esp+0x18]
64014444:	cmp    esi,edi
64014446:	jne    0x6401444d
64014448:	mov    WORD PTR [ecx],di
6401444b:	jmp    0x64014425
6401444d:	mov    edx,ecx
6401444f:	movzx  eax,WORD PTR [esi]
64014452:	mov    WORD PTR [edx],ax
64014455:	inc    edx
64014456:	inc    edx
64014457:	inc    esi
64014458:	inc    esi
64014459:	cmp    ax,di
6401445c:	je     0x64014461
6401445e:	dec    ebx
6401445f:	jne    0x6401444f
64014461:	cmp    ebx,edi
64014463:	jne    0x64014476
64014465:	mov    WORD PTR [ecx],di
64014468:	call   0x64015d30
6401446d:	push   0x22
6401446f:	pop    ecx
64014470:	mov    DWORD PTR [eax],ecx
64014472:	mov    esi,ecx
64014474:	jmp    0x6401442f
64014476:	xor    eax,eax
64014478:	pop    edi
64014479:	pop    esi
6401447a:	pop    ebx
6401447b:	ret    
6401447c:	mov    eax,DWORD PTR [esp+0x4]
64014480:	test   eax,eax
64014482:	je     0x64014496
64014484:	sub    eax,0x8
64014487:	cmp    DWORD PTR [eax],0xdddd
6401448d:	jne    0x64014496
6401448f:	push   eax
64014490:	call   0x64014e06
64014495:	pop    ecx
64014496:	ret    
64014497:	push   ebp
64014498:	mov    ebp,esp
6401449a:	sub    esp,0xc
6401449d:	mov    eax,ds:0x6402f09c
640144a2:	xor    eax,ebp
640144a4:	mov    DWORD PTR [ebp-0x4],eax
640144a7:	push   esi
640144a8:	xor    esi,esi
640144aa:	cmp    ebx,esi
640144ac:	push   edi
640144ad:	jne    0x640144cd
640144af:	call   0x64015d30
640144b4:	push   0x16
640144b6:	pop    edi
640144b7:	push   esi
640144b8:	push   esi
640144b9:	push   esi
640144ba:	push   esi
640144bb:	push   esi
640144bc:	mov    DWORD PTR [eax],edi
640144be:	call   0x64013aa4
640144c3:	add    esp,0x14
640144c6:	mov    eax,edi
640144c8:	jmp    0x6401460d
640144cd:	push   DWORD PTR [ebp+0x8]
640144d0:	push   ebx
640144d1:	call   0x6401973b
640144d6:	cmp    eax,DWORD PTR [ebp+0x8]
640144d9:	pop    ecx
640144da:	pop    ecx
640144db:	jb     0x640144e2
640144dd:	mov    WORD PTR [ebx],si
640144e0:	jmp    0x640144af
640144e2:	mov    edx,DWORD PTR [ebp+0xc]
640144e5:	mov    eax,DWORD PTR [edx]
640144e7:	mov    ecx,DWORD PTR [eax+0x14]
640144ea:	cmp    ecx,esi
640144ec:	jne    0x64014518
640144ee:	cmp    WORD PTR [ebx],si
640144f1:	mov    eax,ebx
640144f3:	je     0x64014511
640144f5:	movzx  ecx,WORD PTR [eax]
640144f8:	cmp    cx,0x41
640144fc:	jb     0x6401450a
640144fe:	cmp    cx,0x5a
64014502:	ja     0x6401450a
64014504:	add    ecx,0x20
64014507:	mov    WORD PTR [eax],cx
6401450a:	inc    eax
6401450b:	inc    eax
6401450c:	cmp    WORD PTR [eax],si
6401450f:	jne    0x640144f5
64014511:	xor    eax,eax
64014513:	jmp    0x6401460d
64014518:	push   DWORD PTR [eax+0x4]
6401451b:	mov    edi,0x100
64014520:	push   esi
64014521:	push   esi
64014522:	push   0xffffffff
64014524:	push   ebx
64014525:	push   edi
64014526:	push   ecx
64014527:	push   edx
64014528:	call   0x640196fb
6401452d:	mov    ecx,eax
6401452f:	add    esp,0x20
64014532:	cmp    ecx,esi
64014534:	mov    DWORD PTR [ebp-0xc],ecx
64014537:	jne    0x64014550
64014539:	call   0x64015d30
6401453e:	mov    DWORD PTR [eax],0x2a
64014544:	call   0x64015d30
64014549:	mov    eax,DWORD PTR [eax]
6401454b:	jmp    0x6401460d
64014550:	cmp    DWORD PTR [ebp+0x8],ecx
64014553:	jae    0x64014564
64014555:	mov    WORD PTR [ebx],si
64014558:	call   0x64015d30
6401455d:	push   0x22
6401455f:	jmp    0x640144b6
64014564:	cmp    ecx,esi
64014566:	jle    0x640145ae
64014568:	push   0xffffffe0
6401456a:	xor    edx,edx
6401456c:	pop    eax
6401456d:	div    ecx
6401456f:	cmp    eax,0x2
64014572:	jb     0x640145ae
64014574:	lea    eax,[ecx+ecx*1+0x8]
64014578:	cmp    eax,0x400
6401457d:	ja     0x64014592
6401457f:	call   0x640146f0
64014584:	mov    eax,esp
64014586:	cmp    eax,esi
64014588:	je     0x640145a6
6401458a:	mov    DWORD PTR [eax],0xcccc
64014590:	jmp    0x640145a3
64014592:	push   eax
64014593:	call   0x64014ee3
64014598:	cmp    eax,esi
6401459a:	pop    ecx
6401459b:	je     0x640145a6
6401459d:	mov    DWORD PTR [eax],0xdddd
640145a3:	add    eax,0x8
640145a6:	mov    ecx,DWORD PTR [ebp-0xc]
640145a9:	mov    DWORD PTR [ebp-0x8],eax
640145ac:	jmp    0x640145b1
640145ae:	mov    DWORD PTR [ebp-0x8],esi
640145b1:	cmp    DWORD PTR [ebp-0x8],esi
640145b4:	jne    0x640145c3
640145b6:	call   0x64015d30
640145bb:	mov    DWORD PTR [eax],0xc
640145c1:	jmp    0x64014544
640145c3:	mov    edx,DWORD PTR [ebp+0xc]
640145c6:	mov    eax,DWORD PTR [edx]
640145c8:	push   DWORD PTR [eax+0x4]
640145cb:	push   ecx
640145cc:	push   DWORD PTR [ebp-0x8]
640145cf:	push   0xffffffff
640145d1:	push   ebx
640145d2:	push   edi
640145d3:	push   DWORD PTR [eax+0x14]
640145d6:	push   edx
640145d7:	call   0x640196fb
640145dc:	add    esp,0x20
640145df:	test   eax,eax
640145e1:	je     0x640145f6
640145e3:	push   DWORD PTR [ebp-0x8]
640145e6:	push   DWORD PTR [ebp+0x8]
640145e9:	push   ebx
640145ea:	call   0x64014410
640145ef:	add    esp,0xc
640145f2:	mov    esi,eax
640145f4:	jmp    0x64014602
640145f6:	call   0x64015d30
640145fb:	push   0x2a
640145fd:	pop    ecx
640145fe:	mov    DWORD PTR [eax],ecx
64014600:	mov    esi,ecx
64014602:	push   DWORD PTR [ebp-0x8]
64014605:	call   0x6401447c
6401460a:	pop    ecx
6401460b:	mov    eax,esi
6401460d:	lea    esp,[ebp-0x14]
64014610:	pop    edi
64014611:	pop    esi
64014612:	mov    ecx,DWORD PTR [ebp-0x4]
64014615:	xor    ecx,ebp
64014617:	call   0x64013f6c
6401461c:	leave  
6401461d:	ret    
6401461e:	push   ebp
6401461f:	mov    ebp,esp
64014621:	sub    esp,0x10
64014624:	push   ebx
64014625:	push   DWORD PTR [ebp+0x10]
64014628:	lea    ecx,[ebp-0x10]
6401462b:	call   0x6401410f
64014630:	mov    ebx,DWORD PTR [ebp+0x8]
64014633:	lea    eax,[ebp-0x10]
64014636:	push   eax
64014637:	push   DWORD PTR [ebp+0xc]
6401463a:	call   0x64014497
6401463f:	cmp    BYTE PTR [ebp-0x4],0x0
64014643:	pop    ecx
64014644:	pop    ecx
64014645:	pop    ebx
64014646:	je     0x6401464f
64014648:	mov    ecx,DWORD PTR [ebp-0x8]
6401464b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401464f:	leave  
64014650:	ret    
64014651:	push   0x0
64014653:	push   DWORD PTR [esp+0xc]
64014657:	push   DWORD PTR [esp+0xc]
6401465b:	call   0x6401461e
64014660:	add    esp,0xc
64014663:	ret    
64014664:	jmp    0x64013712
64014669:	int3   
6401466a:	int3   
6401466b:	int3   
6401466c:	int3   
6401466d:	int3   
6401466e:	int3   
6401466f:	int3   
64014670:	mov    edx,DWORD PTR [esp+0xc]
64014674:	mov    ecx,DWORD PTR [esp+0x4]
64014678:	test   edx,edx
6401467a:	je     0x640146e5
6401467c:	xor    eax,eax
6401467e:	mov    al,BYTE PTR [esp+0x8]
64014682:	test   al,al
64014684:	jne    0x6401469c
64014686:	cmp    edx,0x100
6401468c:	jb     0x6401469c
6401468e:	cmp    DWORD PTR ds:0x64034644,0x0
64014695:	je     0x6401469c
64014697:	jmp    0x640197ae
6401469c:	push   edi
6401469d:	mov    edi,ecx
6401469f:	cmp    edx,0x4
640146a2:	jb     0x640146d5
640146a4:	neg    ecx
640146a6:	and    ecx,0x3
640146a9:	je     0x640146b7
640146ab:	sub    edx,ecx
640146ad:	mov    BYTE PTR [edi],al
640146af:	add    edi,0x1
640146b2:	sub    ecx,0x1
640146b5:	jne    0x640146ad
640146b7:	mov    ecx,eax
640146b9:	shl    eax,0x8
640146bc:	add    eax,ecx
640146be:	mov    ecx,eax
640146c0:	shl    eax,0x10
640146c3:	add    eax,ecx
640146c5:	mov    ecx,edx
640146c7:	and    edx,0x3
640146ca:	shr    ecx,0x2
640146cd:	je     0x640146d5
640146cf:	rep stos DWORD PTR es:[edi],eax
640146d1:	test   edx,edx
640146d3:	je     0x640146df
640146d5:	mov    BYTE PTR [edi],al
640146d7:	add    edi,0x1
640146da:	sub    edx,0x1
640146dd:	jne    0x640146d5
640146df:	mov    eax,DWORD PTR [esp+0x8]
640146e3:	pop    edi
640146e4:	ret    
640146e5:	mov    eax,DWORD PTR [esp+0x4]
640146e9:	ret    
640146ea:	int3   
640146eb:	int3   
640146ec:	int3   
640146ed:	int3   
640146ee:	int3   
640146ef:	int3   
640146f0:	push   ecx
640146f1:	lea    ecx,[esp+0x8]
640146f5:	sub    ecx,eax
640146f7:	and    ecx,0xf
640146fa:	add    eax,ecx
640146fc:	sbb    ecx,ecx
640146fe:	or     eax,ecx
64014700:	pop    ecx
64014701:	jmp    0x64019860
64014706:	push   ecx
64014707:	lea    ecx,[esp+0x8]
6401470b:	sub    ecx,eax
6401470d:	and    ecx,0x7
64014710:	add    eax,ecx
64014712:	sbb    ecx,ecx
64014714:	or     eax,ecx
64014716:	pop    ecx
64014717:	jmp    0x64019860
6401471c:	call   0x6401607b
64014721:	mov    ecx,DWORD PTR [esp+0x4]
64014725:	mov    DWORD PTR [eax+0x14],ecx
64014728:	ret    
64014729:	call   0x6401607b
6401472e:	mov    ecx,DWORD PTR [eax+0x14]
64014731:	imul   ecx,ecx,0x343fd
64014737:	add    ecx,0x269ec3
6401473d:	mov    DWORD PTR [eax+0x14],ecx
64014740:	mov    eax,ecx
64014742:	shr    eax,0x10
64014745:	and    eax,0x7fff
6401474a:	ret    
6401474b:	push   ebp
6401474c:	mov    ebp,esp
6401474e:	push   ecx
6401474f:	mov    eax,DWORD PTR [ebp+0xc]
64014752:	cmp    eax,0x1
64014755:	push   ebx
64014756:	push   esi
64014757:	push   edi
64014758:	jne    0x64014875
6401475e:	mov    ebx,DWORD PTR ds:0x64026104
64014764:	mov    edi,0x94
64014769:	push   edi
6401476a:	push   0x0
6401476c:	call   ebx
6401476e:	push   eax
6401476f:	call   DWORD PTR ds:0x640260f4
64014775:	mov    esi,eax
64014777:	test   esi,esi
64014779:	jne    0x64014782
6401477b:	xor    eax,eax
6401477d:	jmp    0x6401491d
64014782:	push   esi
64014783:	mov    DWORD PTR [esi],edi
64014785:	call   DWORD PTR ds:0x640260e8
6401478b:	test   eax,eax
6401478d:	push   esi
6401478e:	push   0x0
64014790:	jne    0x6401479d
64014792:	call   ebx
64014794:	push   eax
64014795:	call   DWORD PTR ds:0x640260f8
6401479b:	jmp    0x6401477b
6401479d:	mov    eax,DWORD PTR [esi+0x10]
640147a0:	mov    edi,DWORD PTR [esi+0xc]
640147a3:	mov    DWORD PTR [ebp+0xc],eax
640147a6:	mov    eax,DWORD PTR [esi+0x4]
640147a9:	mov    DWORD PTR [ebp+0x10],eax
640147ac:	mov    eax,DWORD PTR [esi+0x8]
640147af:	mov    DWORD PTR [ebp-0x4],eax
640147b2:	and    edi,0x7fff
640147b8:	call   ebx
640147ba:	push   eax
640147bb:	call   DWORD PTR ds:0x640260f8
640147c1:	mov    eax,DWORD PTR [ebp+0xc]
640147c4:	cmp    eax,0x2
640147c7:	je     0x640147cf
640147c9:	or     edi,0x8000
640147cf:	mov    ecx,DWORD PTR [ebp-0x4]
640147d2:	mov    ds:0x640308d4,eax
640147d7:	mov    eax,DWORD PTR [ebp+0x10]
640147da:	mov    edx,eax
640147dc:	shl    edx,0x8
640147df:	add    edx,ecx
640147e1:	push   0x1
640147e3:	mov    DWORD PTR ds:0x640308dc,edx
640147e9:	mov    ds:0x640308e0,eax
640147ee:	mov    DWORD PTR ds:0x640308e4,ecx
640147f4:	mov    DWORD PTR ds:0x640308d8,edi
640147fa:	call   0x6401a02f
640147ff:	test   eax,eax
64014801:	pop    ecx
64014802:	je     0x6401477b
64014808:	call   0x6401621d
6401480d:	test   eax,eax
6401480f:	jne    0x6401481b
64014811:	call   0x6401a089
64014816:	jmp    0x6401477b
6401481b:	call   0x64019f8c
64014820:	call   DWORD PTR ds:0x64026120
64014826:	mov    ds:0x64034660,eax
6401482b:	call   0x64019e57
64014830:	mov    ds:0x64030574,eax
64014835:	call   0x6401988b
6401483a:	test   eax,eax
6401483c:	jge    0x64014845
6401483e:	call   0x64015f08
64014843:	jmp    0x64014811
64014845:	call   0x64019d9e
6401484a:	test   eax,eax
6401484c:	jl     0x6401486e
6401484e:	call   0x64019b2b
64014853:	test   eax,eax
64014855:	jl     0x6401486e
64014857:	push   0x0
64014859:	call   0x640174d2
6401485e:	test   eax,eax
64014860:	pop    ecx
64014861:	jne    0x6401486e
64014863:	inc    DWORD PTR ds:0x64030570
64014869:	jmp    0x6401491a
6401486e:	call   0x64019adf
64014873:	jmp    0x6401483e
64014875:	xor    edi,edi
64014877:	cmp    eax,edi
64014879:	jne    0x640148b0
6401487b:	cmp    DWORD PTR ds:0x64030570,edi
64014881:	jle    0x6401477b
64014887:	dec    DWORD PTR ds:0x64030570
6401488d:	cmp    DWORD PTR ds:0x64030910,edi
64014893:	jne    0x6401489a
64014895:	call   0x64017657
6401489a:	cmp    DWORD PTR [ebp+0x10],edi
6401489d:	jne    0x6401491a
6401489f:	call   0x64019adf
640148a4:	call   0x64015f08
640148a9:	call   0x6401a089
640148ae:	jmp    0x6401491a
640148b0:	cmp    eax,0x2
640148b3:	jne    0x6401490e
640148b5:	call   0x64015ed6
640148ba:	push   0x214
640148bf:	push   0x1
640148c1:	call   0x64017280
640148c6:	mov    esi,eax
640148c8:	cmp    esi,edi
640148ca:	pop    ecx
640148cb:	pop    ecx
640148cc:	je     0x6401477b
640148d2:	push   esi
640148d3:	push   DWORD PTR ds:0x6402f230
640148d9:	push   DWORD PTR ds:0x64030594
640148df:	call   0x64015e5f
640148e4:	pop    ecx
640148e5:	call   eax
640148e7:	test   eax,eax
640148e9:	je     0x64014902
640148eb:	push   edi
640148ec:	push   esi
640148ed:	call   0x64015f45
640148f2:	pop    ecx
640148f3:	pop    ecx
640148f4:	call   DWORD PTR ds:0x6402611c
640148fa:	or     DWORD PTR [esi+0x4],0xffffffff
640148fe:	mov    DWORD PTR [esi],eax
64014900:	jmp    0x6401491a
64014902:	push   esi
64014903:	call   0x64014e06
64014908:	pop    ecx
64014909:	jmp    0x6401477b
6401490e:	cmp    eax,0x3
64014911:	jne    0x6401491a
64014913:	push   edi
64014914:	call   0x640161b4
64014919:	pop    ecx
6401491a:	xor    eax,eax
6401491c:	inc    eax
6401491d:	pop    edi
6401491e:	pop    esi
6401491f:	pop    ebx
64014920:	leave  
64014921:	ret    0xc
64014924:	push   0xc
64014926:	push   0x6402c2a0
6401492b:	call   0x64015530
64014930:	mov    edi,ecx
64014932:	mov    esi,edx
64014934:	mov    ebx,DWORD PTR [ebp+0x8]
64014937:	xor    eax,eax
64014939:	inc    eax
6401493a:	mov    DWORD PTR [ebp-0x1c],eax
6401493d:	test   esi,esi
6401493f:	jne    0x6401494d
64014941:	cmp    DWORD PTR ds:0x64030570,edx
64014947:	je     0x64014a12
6401494d:	and    DWORD PTR [ebp-0x4],0x0
64014951:	cmp    esi,eax
64014953:	je     0x6401495a
64014955:	cmp    esi,0x2
64014958:	jne    0x64014988
6401495a:	mov    eax,ds:0x64026cb8
6401495f:	test   eax,eax
64014961:	je     0x6401496b
64014963:	push   edi
64014964:	push   esi
64014965:	push   ebx
64014966:	call   eax
64014968:	mov    DWORD PTR [ebp-0x1c],eax
6401496b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401496f:	je     0x64014a0b
64014975:	push   edi
64014976:	push   esi
64014977:	push   ebx
64014978:	call   0x6401474b
6401497d:	mov    DWORD PTR [ebp-0x1c],eax
64014980:	test   eax,eax
64014982:	je     0x64014a0b
64014988:	push   edi
64014989:	push   esi
6401498a:	push   ebx
6401498b:	call   0x64010c10
64014990:	mov    DWORD PTR [ebp-0x1c],eax
64014993:	cmp    esi,0x1
64014996:	jne    0x640149bc
64014998:	test   eax,eax
6401499a:	jne    0x640149bc
6401499c:	push   edi
6401499d:	push   eax
6401499e:	push   ebx
6401499f:	call   0x64010c10
640149a4:	push   edi
640149a5:	push   0x0
640149a7:	push   ebx
640149a8:	call   0x6401474b
640149ad:	mov    eax,ds:0x64026cb8
640149b2:	test   eax,eax
640149b4:	je     0x640149bc
640149b6:	push   edi
640149b7:	push   0x0
640149b9:	push   ebx
640149ba:	call   eax
640149bc:	test   esi,esi
640149be:	je     0x640149c5
640149c0:	cmp    esi,0x3
640149c3:	jne    0x640149eb
640149c5:	push   edi
640149c6:	push   esi
640149c7:	push   ebx
640149c8:	call   0x6401474b
640149cd:	test   eax,eax
640149cf:	jne    0x640149d4
640149d1:	and    DWORD PTR [ebp-0x1c],eax
640149d4:	cmp    DWORD PTR [ebp-0x1c],0x0
640149d8:	je     0x640149eb
640149da:	mov    eax,ds:0x64026cb8
640149df:	test   eax,eax
640149e1:	je     0x640149eb
640149e3:	push   edi
640149e4:	push   esi
640149e5:	push   ebx
640149e6:	call   eax
640149e8:	mov    DWORD PTR [ebp-0x1c],eax
640149eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640149f2:	mov    eax,DWORD PTR [ebp-0x1c]
640149f5:	jmp    0x64014a14
640149f7:	mov    eax,DWORD PTR [ebp-0x14]
640149fa:	mov    ecx,DWORD PTR [eax]
640149fc:	mov    ecx,DWORD PTR [ecx]
640149fe:	push   eax
640149ff:	push   ecx
64014a00:	call   0x6401a25b
64014a05:	pop    ecx
64014a06:	pop    ecx
64014a07:	ret    
64014a08:	mov    esp,DWORD PTR [ebp-0x18]
64014a0b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014a12:	xor    eax,eax
64014a14:	call   0x64015575
64014a19:	ret    
64014a1a:	cmp    DWORD PTR [esp+0x8],0x1
64014a1f:	jne    0x64014a26
64014a21:	call   0x6401a276
64014a26:	push   DWORD PTR [esp+0x4]
64014a2a:	mov    ecx,DWORD PTR [esp+0x10]
64014a2e:	mov    edx,DWORD PTR [esp+0xc]
64014a32:	call   0x64014924
64014a37:	pop    ecx
64014a38:	ret    0xc
64014a3b:	push   ebp
64014a3c:	mov    ebp,esp
64014a3e:	sub    esp,0x20
64014a41:	push   ebx
64014a42:	xor    ebx,ebx
64014a44:	cmp    DWORD PTR [ebp+0xc],ebx
64014a47:	jne    0x64014a66
64014a49:	call   0x64015d30
64014a4e:	push   ebx
64014a4f:	push   ebx
64014a50:	push   ebx
64014a51:	push   ebx
64014a52:	push   ebx
64014a53:	mov    DWORD PTR [eax],0x16
64014a59:	call   0x64013aa4
64014a5e:	add    esp,0x14
64014a61:	or     eax,0xffffffff
64014a64:	jmp    0x64014ab3
64014a66:	mov    eax,DWORD PTR [ebp+0x8]
64014a69:	cmp    eax,ebx
64014a6b:	je     0x64014a49
64014a6d:	push   esi
64014a6e:	mov    DWORD PTR [ebp-0x18],eax
64014a71:	mov    DWORD PTR [ebp-0x20],eax
64014a74:	lea    eax,[ebp+0x10]
64014a77:	push   eax
64014a78:	push   ebx
64014a79:	push   DWORD PTR [ebp+0xc]
64014a7c:	lea    eax,[ebp-0x20]
64014a7f:	push   eax
64014a80:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014a87:	mov    DWORD PTR [ebp-0x14],0x42
64014a8e:	call   0x6401a361
64014a93:	add    esp,0x10
64014a96:	dec    DWORD PTR [ebp-0x1c]
64014a99:	mov    esi,eax
64014a9b:	js     0x64014aa4
64014a9d:	mov    eax,DWORD PTR [ebp-0x20]
64014aa0:	mov    BYTE PTR [eax],bl
64014aa2:	jmp    0x64014ab0
64014aa4:	lea    eax,[ebp-0x20]
64014aa7:	push   eax
64014aa8:	push   ebx
64014aa9:	call   0x64018075
64014aae:	pop    ecx
64014aaf:	pop    ecx
64014ab0:	mov    eax,esi
64014ab2:	pop    esi
64014ab3:	pop    ebx
64014ab4:	leave  
64014ab5:	ret    
64014ab6:	lea    eax,[esp+0x10]
64014aba:	push   eax
64014abb:	push   0x0
64014abd:	push   DWORD PTR [esp+0x14]
64014ac1:	push   DWORD PTR [esp+0x14]
64014ac5:	push   DWORD PTR [esp+0x14]
64014ac9:	call   0x6401adbf
64014ace:	add    esp,0x14
64014ad1:	ret    
64014ad2:	cmp    DWORD PTR [esp+0x8],0x0
64014ad7:	je     0x64014adf
64014ad9:	mov    BYTE PTR [ecx],0x2d
64014adc:	inc    ecx
64014add:	neg    eax
64014adf:	push   esi
64014ae0:	mov    esi,ecx
64014ae2:	xor    edx,edx
64014ae4:	div    DWORD PTR [esp+0x8]
64014ae8:	cmp    edx,0x9
64014aeb:	jbe    0x64014af2
64014aed:	add    dl,0x57
64014af0:	jmp    0x64014af5
64014af2:	add    dl,0x30
64014af5:	mov    BYTE PTR [ecx],dl
64014af7:	inc    ecx
64014af8:	test   eax,eax
64014afa:	ja     0x64014ae2
64014afc:	mov    BYTE PTR [ecx],0x0
64014aff:	dec    ecx
64014b00:	mov    dl,BYTE PTR [esi]
64014b02:	mov    al,BYTE PTR [ecx]
64014b04:	mov    BYTE PTR [ecx],dl
64014b06:	dec    ecx
64014b07:	mov    BYTE PTR [esi],al
64014b09:	inc    esi
64014b0a:	cmp    esi,ecx
64014b0c:	jb     0x64014b00
64014b0e:	pop    esi
64014b0f:	ret    0x8
64014b12:	push   ebp
64014b13:	mov    ebp,esp
64014b15:	xor    eax,eax
64014b17:	cmp    DWORD PTR [ebp+0x10],0xa
64014b1b:	jne    0x64014b23
64014b1d:	cmp    DWORD PTR [ebp+0x8],eax
64014b20:	jge    0x64014b23
64014b22:	inc    eax
64014b23:	mov    ecx,DWORD PTR [ebp+0xc]
64014b26:	push   eax
64014b27:	push   DWORD PTR [ebp+0x10]
64014b2a:	mov    eax,DWORD PTR [ebp+0x8]
64014b2d:	call   0x64014ad2
64014b32:	mov    eax,DWORD PTR [ebp+0xc]
64014b35:	pop    ebp
64014b36:	ret    
64014b37:	mov    eax,DWORD PTR [esp+0x4]
64014b3b:	mov    dx,WORD PTR [esp+0x8]
64014b40:	jmp    0x64014b49
64014b42:	cmp    cx,dx
64014b45:	je     0x64014b58
64014b47:	inc    eax
64014b48:	inc    eax
64014b49:	movzx  ecx,WORD PTR [eax]
64014b4c:	test   cx,cx
64014b4f:	jne    0x64014b42
64014b51:	cmp    WORD PTR [eax],dx
64014b54:	je     0x64014b58
64014b56:	xor    eax,eax
64014b58:	ret    
64014b59:	push   ebp
64014b5a:	mov    ebp,esp
64014b5c:	sub    esp,0x10
64014b5f:	push   DWORD PTR [ebp+0xc]
64014b62:	lea    ecx,[ebp-0x10]
64014b65:	call   0x6401410f
64014b6a:	mov    eax,DWORD PTR [ebp-0x10]
64014b6d:	cmp    DWORD PTR [eax+0xac],0x1
64014b74:	jle    0x64014b89
64014b76:	lea    eax,[ebp-0x10]
64014b79:	push   eax
64014b7a:	push   0x4
64014b7c:	push   DWORD PTR [ebp+0x8]
64014b7f:	call   0x6401aee5
64014b84:	add    esp,0xc
64014b87:	jmp    0x64014b99
64014b89:	mov    eax,DWORD PTR [eax+0xc8]
64014b8f:	mov    ecx,DWORD PTR [ebp+0x8]
64014b92:	movzx  eax,BYTE PTR [eax+ecx*2]
64014b96:	and    eax,0x4
64014b99:	cmp    BYTE PTR [ebp-0x4],0x0
64014b9d:	je     0x64014ba6
64014b9f:	mov    ecx,DWORD PTR [ebp-0x8]
64014ba2:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014ba6:	leave  
64014ba7:	ret    
64014ba8:	cmp    DWORD PTR ds:0x64030934,0x0
64014baf:	jne    0x64014bc3
64014bb1:	mov    eax,DWORD PTR [esp+0x4]
64014bb5:	mov    ecx,DWORD PTR ds:0x6402f860
64014bbb:	movzx  eax,BYTE PTR [ecx+eax*2]
64014bbf:	and    eax,0x4
64014bc2:	ret    
64014bc3:	push   0x0
64014bc5:	push   DWORD PTR [esp+0x8]
64014bc9:	call   0x64014b59
64014bce:	pop    ecx
64014bcf:	pop    ecx
64014bd0:	ret    
64014bd1:	push   ebp
64014bd2:	mov    ebp,esp
64014bd4:	sub    esp,0x10
64014bd7:	push   DWORD PTR [ebp+0xc]
64014bda:	lea    ecx,[ebp-0x10]
64014bdd:	call   0x6401410f
64014be2:	mov    eax,DWORD PTR [ebp-0x10]
64014be5:	cmp    DWORD PTR [eax+0xac],0x1
64014bec:	jle    0x64014c01
64014bee:	lea    eax,[ebp-0x10]
64014bf1:	push   eax
64014bf2:	push   0x8
64014bf4:	push   DWORD PTR [ebp+0x8]
64014bf7:	call   0x6401aee5
64014bfc:	add    esp,0xc
64014bff:	jmp    0x64014c11
64014c01:	mov    eax,DWORD PTR [eax+0xc8]
64014c07:	mov    ecx,DWORD PTR [ebp+0x8]
64014c0a:	movzx  eax,BYTE PTR [eax+ecx*2]
64014c0e:	and    eax,0x8
64014c11:	cmp    BYTE PTR [ebp-0x4],0x0
64014c15:	je     0x64014c1e
64014c17:	mov    ecx,DWORD PTR [ebp-0x8]
64014c1a:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014c1e:	leave  
64014c1f:	ret    
64014c20:	cmp    DWORD PTR ds:0x64030934,0x0
64014c27:	jne    0x64014c3b
64014c29:	mov    eax,DWORD PTR [esp+0x4]
64014c2d:	mov    ecx,DWORD PTR ds:0x6402f860
64014c33:	movzx  eax,BYTE PTR [ecx+eax*2]
64014c37:	and    eax,0x8
64014c3a:	ret    
64014c3b:	push   0x0
64014c3d:	push   DWORD PTR [esp+0x8]
64014c41:	call   0x64014bd1
64014c46:	pop    ecx
64014c47:	pop    ecx
64014c48:	ret    
64014c49:	push   ebp
64014c4a:	mov    ebp,esp
64014c4c:	sub    esp,0x10
64014c4f:	push   DWORD PTR [ebp+0xc]
64014c52:	lea    ecx,[ebp-0x10]
64014c55:	call   0x6401410f
64014c5a:	mov    eax,DWORD PTR [ebp-0x10]
64014c5d:	cmp    DWORD PTR [eax+0xac],0x1
64014c64:	jle    0x64014c7c
64014c66:	lea    eax,[ebp-0x10]
64014c69:	push   eax
64014c6a:	push   0x157
64014c6f:	push   DWORD PTR [ebp+0x8]
64014c72:	call   0x6401aee5
64014c77:	add    esp,0xc
64014c7a:	jmp    0x64014c8e
64014c7c:	mov    eax,DWORD PTR [eax+0xc8]
64014c82:	mov    ecx,DWORD PTR [ebp+0x8]
64014c85:	movzx  eax,WORD PTR [eax+ecx*2]
64014c89:	and    eax,0x157
64014c8e:	cmp    BYTE PTR [ebp-0x4],0x0
64014c92:	je     0x64014c9b
64014c94:	mov    ecx,DWORD PTR [ebp-0x8]
64014c97:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014c9b:	leave  
64014c9c:	ret    
64014c9d:	cmp    DWORD PTR ds:0x64030934,0x0
64014ca4:	jne    0x64014cba
64014ca6:	mov    eax,DWORD PTR [esp+0x4]
64014caa:	mov    ecx,DWORD PTR ds:0x6402f860
64014cb0:	movzx  eax,WORD PTR [ecx+eax*2]
64014cb4:	and    eax,0x157
64014cb9:	ret    
64014cba:	push   0x0
64014cbc:	push   DWORD PTR [esp+0x8]
64014cc0:	call   0x64014c49
64014cc5:	pop    ecx
64014cc6:	pop    ecx
64014cc7:	ret    
64014cc8:	push   ebp
64014cc9:	mov    ebp,esp
64014ccb:	sub    esp,0x18
64014cce:	push   ebx
64014ccf:	push   esi
64014cd0:	push   DWORD PTR [ebp+0xc]
64014cd3:	lea    ecx,[ebp-0x18]
64014cd6:	call   0x6401410f
64014cdb:	mov    ebx,DWORD PTR [ebp+0x8]
64014cde:	mov    esi,0x100
64014ce3:	cmp    ebx,esi
64014ce5:	jae    0x64014d3b
64014ce7:	mov    ecx,DWORD PTR [ebp-0x18]
64014cea:	cmp    DWORD PTR [ecx+0xac],0x1
64014cf1:	jle    0x64014d07
64014cf3:	lea    eax,[ebp-0x18]
64014cf6:	push   eax
64014cf7:	push   0x1
64014cf9:	push   ebx
64014cfa:	call   0x6401aee5
64014cff:	mov    ecx,DWORD PTR [ebp-0x18]
64014d02:	add    esp,0xc
64014d05:	jmp    0x64014d14
64014d07:	mov    eax,DWORD PTR [ecx+0xc8]
64014d0d:	movzx  eax,BYTE PTR [eax+ebx*2]
64014d11:	and    eax,0x1
64014d14:	test   eax,eax
64014d16:	je     0x64014d27
64014d18:	mov    eax,DWORD PTR [ecx+0xcc]
64014d1e:	movzx  eax,BYTE PTR [eax+ebx*1]
64014d22:	jmp    0x64014dce
64014d27:	cmp    BYTE PTR [ebp-0xc],0x0
64014d2b:	je     0x64014d34
64014d2d:	mov    eax,DWORD PTR [ebp-0x10]
64014d30:	and    DWORD PTR [eax+0x70],0xfffffffd
64014d34:	mov    eax,ebx
64014d36:	jmp    0x64014ddb
64014d3b:	mov    eax,DWORD PTR [ebp-0x18]
64014d3e:	cmp    DWORD PTR [eax+0xac],0x1
64014d45:	jle    0x64014d78
64014d47:	mov    DWORD PTR [ebp+0x8],ebx
64014d4a:	sar    DWORD PTR [ebp+0x8],0x8
64014d4e:	lea    eax,[ebp-0x18]
64014d51:	push   eax
64014d52:	mov    eax,DWORD PTR [ebp+0x8]
64014d55:	and    eax,0xff
64014d5a:	push   eax
64014d5b:	call   0x6401b380
64014d60:	test   eax,eax
64014d62:	pop    ecx
64014d63:	pop    ecx
64014d64:	je     0x64014d78
64014d66:	mov    al,BYTE PTR [ebp+0x8]
64014d69:	push   0x2
64014d6b:	mov    BYTE PTR [ebp-0x4],al
64014d6e:	mov    BYTE PTR [ebp-0x3],bl
64014d71:	mov    BYTE PTR [ebp-0x2],0x0
64014d75:	pop    ecx
64014d76:	jmp    0x64014d8d
64014d78:	call   0x64015d30
64014d7d:	mov    DWORD PTR [eax],0x2a
64014d83:	xor    ecx,ecx
64014d85:	mov    BYTE PTR [ebp-0x4],bl
64014d88:	mov    BYTE PTR [ebp-0x3],0x0
64014d8c:	inc    ecx
64014d8d:	mov    eax,DWORD PTR [ebp-0x18]
64014d90:	push   0x1
64014d92:	push   DWORD PTR [eax+0x4]
64014d95:	lea    edx,[ebp-0x8]
64014d98:	push   0x3
64014d9a:	push   edx
64014d9b:	push   ecx
64014d9c:	lea    ecx,[ebp-0x4]
64014d9f:	push   ecx
64014da0:	push   esi
64014da1:	push   DWORD PTR [eax+0x14]
64014da4:	lea    eax,[ebp-0x18]
64014da7:	push   eax
64014da8:	call   0x6401b33d
64014dad:	add    esp,0x24
64014db0:	test   eax,eax
64014db2:	je     0x64014d27
64014db8:	cmp    eax,0x1
64014dbb:	jne    0x64014dc3
64014dbd:	movzx  eax,BYTE PTR [ebp-0x8]
64014dc1:	jmp    0x64014dce
64014dc3:	movzx  ecx,BYTE PTR [ebp-0x7]
64014dc7:	xor    eax,eax
64014dc9:	mov    ah,BYTE PTR [ebp-0x8]
64014dcc:	or     eax,ecx
64014dce:	cmp    BYTE PTR [ebp-0xc],0x0
64014dd2:	je     0x64014ddb
64014dd4:	mov    ecx,DWORD PTR [ebp-0x10]
64014dd7:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014ddb:	pop    esi
64014ddc:	pop    ebx
64014ddd:	leave  
64014dde:	ret    
64014ddf:	cmp    DWORD PTR ds:0x64030934,0x0
64014de6:	jne    0x64014df8
64014de8:	mov    eax,DWORD PTR [esp+0x4]
64014dec:	lea    ecx,[eax-0x41]
64014def:	cmp    ecx,0x19
64014df2:	ja     0x64014e05
64014df4:	add    eax,0x20
64014df7:	ret    
64014df8:	push   0x0
64014dfa:	push   DWORD PTR [esp+0x8]
64014dfe:	call   0x64014cc8
64014e03:	pop    ecx
64014e04:	pop    ecx
64014e05:	ret    
64014e06:	push   0xc
64014e08:	push   0x6402c2c0
64014e0d:	call   0x64015530
64014e12:	mov    esi,DWORD PTR [ebp+0x8]
64014e15:	test   esi,esi
64014e17:	je     0x64014e8e
64014e19:	cmp    DWORD PTR ds:0x6403451c,0x3
64014e20:	jne    0x64014e65
64014e22:	push   0x4
64014e24:	call   0x6401b53a
64014e29:	pop    ecx
64014e2a:	and    DWORD PTR [ebp-0x4],0x0
64014e2e:	push   esi
64014e2f:	call   0x6401b5b3
64014e34:	pop    ecx
64014e35:	mov    DWORD PTR [ebp-0x1c],eax
64014e38:	test   eax,eax
64014e3a:	je     0x64014e45
64014e3c:	push   esi
64014e3d:	push   eax
64014e3e:	call   0x6401b5de
64014e43:	pop    ecx
64014e44:	pop    ecx
64014e45:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014e4c:	call   0x64014e5c
64014e51:	cmp    DWORD PTR [ebp-0x1c],0x0
64014e55:	jne    0x64014e8e
64014e57:	push   DWORD PTR [ebp+0x8]
64014e5a:	jmp    0x64014e66
64014e5c:	push   0x4
64014e5e:	call   0x6401b462
64014e63:	pop    ecx
64014e64:	ret    
64014e65:	push   esi
64014e66:	push   0x0
64014e68:	push   DWORD PTR ds:0x64030a6c
64014e6e:	call   DWORD PTR ds:0x640260f8
64014e74:	test   eax,eax
64014e76:	jne    0x64014e8e
64014e78:	call   0x64015d30
64014e7d:	mov    esi,eax
64014e7f:	call   DWORD PTR ds:0x64026044
64014e85:	push   eax
64014e86:	call   0x64015cf5
64014e8b:	mov    DWORD PTR [esi],eax
64014e8d:	pop    ecx
64014e8e:	call   0x64015575
64014e93:	ret    
64014e94:	push   0xc
64014e96:	push   0x6402c2e0
64014e9b:	call   0x64015530
64014ea0:	and    DWORD PTR [ebp-0x1c],0x0
64014ea4:	mov    esi,DWORD PTR [ebp+0x8]
64014ea7:	cmp    esi,DWORD PTR ds:0x6403450c
64014ead:	ja     0x64014ed1
64014eaf:	push   0x4
64014eb1:	call   0x6401b53a
64014eb6:	pop    ecx
64014eb7:	and    DWORD PTR [ebp-0x4],0x0
64014ebb:	push   esi
64014ebc:	call   0x6401bd87
64014ec1:	pop    ecx
64014ec2:	mov    DWORD PTR [ebp-0x1c],eax
64014ec5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014ecc:	call   0x64014eda
64014ed1:	mov    eax,DWORD PTR [ebp-0x1c]
64014ed4:	call   0x64015575
64014ed9:	ret    
64014eda:	push   0x4
64014edc:	call   0x6401b462
64014ee1:	pop    ecx
64014ee2:	ret    
64014ee3:	push   ebp
64014ee4:	mov    ebp,DWORD PTR [esp+0x8]
64014ee8:	cmp    ebp,0xffffffe0
64014eeb:	ja     0x64014f90
64014ef1:	push   ebx
64014ef2:	mov    ebx,DWORD PTR ds:0x640260f4
64014ef8:	push   esi
64014ef9:	push   edi
64014efa:	xor    esi,esi
64014efc:	cmp    DWORD PTR ds:0x64030a6c,esi
64014f02:	mov    edi,ebp
64014f04:	jne    0x64014f1e
64014f06:	call   0x6401c20a
64014f0b:	push   0x1e
64014f0d:	call   0x6401c06a
64014f12:	push   0xff
64014f17:	call   0x64017400
64014f1c:	pop    ecx
64014f1d:	pop    ecx
64014f1e:	mov    eax,ds:0x6403451c
64014f23:	cmp    eax,0x1
64014f26:	jne    0x64014f36
64014f28:	cmp    ebp,esi
64014f2a:	je     0x64014f30
64014f2c:	mov    eax,ebp
64014f2e:	jmp    0x64014f33
64014f30:	xor    eax,eax
64014f32:	inc    eax
64014f33:	push   eax
64014f34:	jmp    0x64014f54
64014f36:	cmp    eax,0x3
64014f39:	jne    0x64014f46
64014f3b:	push   ebp
64014f3c:	call   0x64014e94
64014f41:	cmp    eax,esi
64014f43:	pop    ecx
64014f44:	jne    0x64014f5d
64014f46:	cmp    ebp,esi
64014f48:	jne    0x64014f4d
64014f4a:	xor    edi,edi
64014f4c:	inc    edi
64014f4d:	add    edi,0xf
64014f50:	and    edi,0xfffffff0
64014f53:	push   edi
64014f54:	push   esi
64014f55:	push   DWORD PTR ds:0x64030a6c
64014f5b:	call   ebx
64014f5d:	mov    esi,eax
64014f5f:	test   esi,esi
64014f61:	jne    0x64014f89
64014f63:	cmp    DWORD PTR ds:0x64030ee4,eax
64014f69:	push   0xc
64014f6b:	pop    edi
64014f6c:	je     0x64014f7b
64014f6e:	push   ebp
64014f6f:	call   0x640163ab
64014f74:	test   eax,eax
64014f76:	pop    ecx
64014f77:	jne    0x64014efa
64014f79:	jmp    0x64014f82
64014f7b:	call   0x64015d30
64014f80:	mov    DWORD PTR [eax],edi
64014f82:	call   0x64015d30
64014f87:	mov    DWORD PTR [eax],edi
64014f89:	pop    edi
64014f8a:	mov    eax,esi
64014f8c:	pop    esi
64014f8d:	pop    ebx
64014f8e:	pop    ebp
64014f8f:	ret    
64014f90:	push   ebp
64014f91:	call   0x640163ab
64014f96:	pop    ecx
64014f97:	call   0x64015d30
64014f9c:	mov    DWORD PTR [eax],0xc
64014fa2:	xor    eax,eax
64014fa4:	pop    ebp
64014fa5:	ret    
64014fa6:	int3   
64014fa7:	int3   
64014fa8:	int3   
64014fa9:	int3   
64014faa:	int3   
64014fab:	int3   
64014fac:	int3   
64014fad:	int3   
64014fae:	int3   
64014faf:	int3   
64014fb0:	push   ebp
64014fb1:	mov    ebp,esp
64014fb3:	push   edi
64014fb4:	push   esi
64014fb5:	mov    esi,DWORD PTR [ebp+0xc]
64014fb8:	mov    ecx,DWORD PTR [ebp+0x10]
64014fbb:	mov    edi,DWORD PTR [ebp+0x8]
64014fbe:	mov    eax,ecx
64014fc0:	mov    edx,ecx
64014fc2:	add    eax,esi
64014fc4:	cmp    edi,esi
64014fc6:	jbe    0x64014fd0
64014fc8:	cmp    edi,eax
64014fca:	jb     0x64015174
64014fd0:	cmp    ecx,0x100
64014fd6:	jb     0x64014ff7
64014fd8:	cmp    DWORD PTR ds:0x64034644,0x0
64014fdf:	je     0x64014ff7
64014fe1:	push   edi
64014fe2:	push   esi
64014fe3:	and    edi,0xf
64014fe6:	and    esi,0xf
64014fe9:	cmp    edi,esi
64014feb:	pop    esi
64014fec:	pop    edi
64014fed:	jne    0x64014ff7
64014fef:	pop    esi
64014ff0:	pop    edi
64014ff1:	pop    ebp
64014ff2:	jmp    0x6401c2ca
64014ff7:	test   edi,0x3
64014ffd:	jne    0x64015014
64014fff:	shr    ecx,0x2
64015002:	and    edx,0x3
64015005:	cmp    ecx,0x8
64015008:	jb     0x64015034
6401500a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401500c:	jmp    DWORD PTR [edx*4+0x64015124]
64015013:	nop
64015014:	mov    eax,edi
64015016:	mov    edx,0x3
6401501b:	sub    ecx,0x4
6401501e:	jb     0x6401502c
64015020:	and    eax,0x3
64015023:	add    ecx,eax
64015025:	jmp    DWORD PTR [eax*4+0x64015038]
6401502c:	jmp    DWORD PTR [ecx*4+0x64015134]
64015033:	nop
64015034:	jmp    DWORD PTR [ecx*4+0x640150b8]
6401503b:	nop
6401503c:	dec    eax
6401503d:	push   eax
6401503e:	add    DWORD PTR [esp+esi*2+0x50],esp
64015042:	add    DWORD PTR [eax+ebx*4+0x50],esp
64015046:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401504a:	mov    al,BYTE PTR [esi]
6401504c:	mov    BYTE PTR [edi],al
6401504e:	mov    al,BYTE PTR [esi+0x1]
64015051:	mov    BYTE PTR [edi+0x1],al
64015054:	mov    al,BYTE PTR [esi+0x2]
64015057:	shr    ecx,0x2
6401505a:	mov    BYTE PTR [edi+0x2],al
6401505d:	add    esi,0x3
64015060:	add    edi,0x3
64015063:	cmp    ecx,0x8
64015066:	jb     0x64015034
64015068:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401506a:	jmp    DWORD PTR [edx*4+0x64015124]
64015071:	lea    ecx,[ecx+0x0]
64015074:	and    edx,ecx
64015076:	mov    al,BYTE PTR [esi]
64015078:	mov    BYTE PTR [edi],al
6401507a:	mov    al,BYTE PTR [esi+0x1]
6401507d:	shr    ecx,0x2
64015080:	mov    BYTE PTR [edi+0x1],al
64015083:	add    esi,0x2
64015086:	add    edi,0x2
64015089:	cmp    ecx,0x8
6401508c:	jb     0x64015034
6401508e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015090:	jmp    DWORD PTR [edx*4+0x64015124]
64015097:	nop
64015098:	and    edx,ecx
6401509a:	mov    al,BYTE PTR [esi]
6401509c:	mov    BYTE PTR [edi],al
6401509e:	add    esi,0x1
640150a1:	shr    ecx,0x2
640150a4:	add    edi,0x1
640150a7:	cmp    ecx,0x8
640150aa:	jb     0x64015034
640150ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640150ae:	jmp    DWORD PTR [edx*4+0x64015124]
640150b5:	lea    ecx,[ecx+0x0]
640150b8:	sbb    edx,DWORD PTR [ecx+0x1]
640150bb:	or     BYTE PTR fs:[ecx+0x1],dl
640150bf:	add    BYTE PTR fs:[ecx+0x1],dl
640150c3:	fs clc 
640150c5:	push   eax
640150c6:	add    DWORD PTR [eax+esi*8+0x50],esp
640150ca:	add    DWORD PTR [eax+ebp*8+0x50],esp
640150ce:	add    DWORD PTR [eax+eiz*8+0x50],esp
640150d2:	add    DWORD PTR [eax+ebx*8+0x50],esp
640150d6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640150da:	mov    fs,esp
640150dc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640150e0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640150e4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640150e8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640150ec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640150f0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640150f4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640150f8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640150fc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64015100:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64015104:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64015108:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401510c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64015110:	lea    eax,[ecx*4+0x0]
64015117:	add    esi,eax
64015119:	add    edi,eax
6401511b:	jmp    DWORD PTR [edx*4+0x64015124]
64015122:	mov    edi,edi
64015124:	xor    al,0x51
64015126:	add    DWORD PTR [esp+edi*1+0x51],esp
6401512a:	add    DWORD PTR [eax+ecx*2+0x51],esp
6401512e:	add    DWORD PTR [esp+ebx*2+0x51],esp
64015132:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015136:	or     BYTE PTR [esi+0x5f],bl
64015139:	leave  
6401513a:	ret    
6401513b:	nop
6401513c:	mov    al,BYTE PTR [esi]
6401513e:	mov    BYTE PTR [edi],al
64015140:	mov    eax,DWORD PTR [ebp+0x8]
64015143:	pop    esi
64015144:	pop    edi
64015145:	leave  
64015146:	ret    
64015147:	nop
64015148:	mov    al,BYTE PTR [esi]
6401514a:	mov    BYTE PTR [edi],al
6401514c:	mov    al,BYTE PTR [esi+0x1]
6401514f:	mov    BYTE PTR [edi+0x1],al
64015152:	mov    eax,DWORD PTR [ebp+0x8]
64015155:	pop    esi
64015156:	pop    edi
64015157:	leave  
64015158:	ret    
64015159:	lea    ecx,[ecx+0x0]
6401515c:	mov    al,BYTE PTR [esi]
6401515e:	mov    BYTE PTR [edi],al
64015160:	mov    al,BYTE PTR [esi+0x1]
64015163:	mov    BYTE PTR [edi+0x1],al
64015166:	mov    al,BYTE PTR [esi+0x2]
64015169:	mov    BYTE PTR [edi+0x2],al
6401516c:	mov    eax,DWORD PTR [ebp+0x8]
6401516f:	pop    esi
64015170:	pop    edi
64015171:	leave  
64015172:	ret    
64015173:	nop
64015174:	lea    esi,[ecx+esi*1-0x4]
64015178:	lea    edi,[ecx+edi*1-0x4]
6401517c:	test   edi,0x3
64015182:	jne    0x640151a8
64015184:	shr    ecx,0x2
64015187:	and    edx,0x3
6401518a:	cmp    ecx,0x8
6401518d:	jb     0x6401519c
6401518f:	std    
64015190:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015192:	cld    
64015193:	jmp    DWORD PTR [edx*4+0x640152c0]
6401519a:	mov    edi,edi
6401519c:	neg    ecx
6401519e:	jmp    DWORD PTR [ecx*4+0x64015270]
640151a5:	lea    ecx,[ecx+0x0]
640151a8:	mov    eax,edi
640151aa:	mov    edx,0x3
640151af:	cmp    ecx,0x4
640151b2:	jb     0x640151c0
640151b4:	and    eax,0x3
640151b7:	sub    ecx,eax
640151b9:	jmp    DWORD PTR [eax*4+0x640151c4]
640151c0:	jmp    DWORD PTR [ecx*4+0x640152c0]
640151c7:	nop
640151c8:	aam    0x51
640151ca:	add    DWORD PTR [eax+edi*8+0x51],esp
640151ce:	add    DWORD PTR [eax+eiz*1+0x52],esp
640151d2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640151d6:	add    esp,DWORD PTR [ebx]
640151d8:	ror    DWORD PTR [eax-0x117cfcb9],1
640151de:	add    ecx,eax
640151e0:	jmp    0x65f0d4e7
640151e5:	cmp    ecx,0x8
640151e8:	jb     0x6401519c
640151ea:	std    
640151eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640151ed:	cld    
640151ee:	jmp    DWORD PTR [edx*4+0x640152c0]
640151f5:	lea    ecx,[ecx+0x0]
640151f8:	mov    al,BYTE PTR [esi+0x3]
640151fb:	and    edx,ecx
640151fd:	mov    BYTE PTR [edi+0x3],al
64015200:	mov    al,BYTE PTR [esi+0x2]
64015203:	shr    ecx,0x2
64015206:	mov    BYTE PTR [edi+0x2],al
64015209:	sub    esi,0x2
6401520c:	sub    edi,0x2
6401520f:	cmp    ecx,0x8
64015212:	jb     0x6401519c
64015214:	std    
64015215:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015217:	cld    
64015218:	jmp    DWORD PTR [edx*4+0x640152c0]
6401521f:	nop
64015220:	mov    al,BYTE PTR [esi+0x3]
64015223:	and    edx,ecx
64015225:	mov    BYTE PTR [edi+0x3],al
64015228:	mov    al,BYTE PTR [esi+0x2]
6401522b:	mov    BYTE PTR [edi+0x2],al
6401522e:	mov    al,BYTE PTR [esi+0x1]
64015231:	shr    ecx,0x2
64015234:	mov    BYTE PTR [edi+0x1],al
64015237:	sub    esi,0x3
6401523a:	sub    edi,0x3
6401523d:	cmp    ecx,0x8
64015240:	jb     0x6401519c
64015246:	std    
64015247:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015249:	cld    
6401524a:	jmp    DWORD PTR [edx*4+0x640152c0]
64015251:	lea    ecx,[ecx+0x0]
64015254:	je     0x640152a8
64015256:	add    DWORD PTR [esp+edi*2+0x52],esp
6401525a:	add    DWORD PTR [esp+eax*4+0x52],esp
6401525e:	add    DWORD PTR [esp+ecx*4+0x52],esp
64015262:	add    DWORD PTR [esp+edx*4+0x52],esp
64015266:	add    DWORD PTR [esp+ebx*4+0x52],esp
6401526a:	add    DWORD PTR [esp+eiz*4+0x52],esp
6401526e:	add    DWORD PTR [edi+esi*4+0x52],esp
64015272:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015276:	mov    ds,WORD PTR [ecx+ecx*4]
64015279:	inc    esp
6401527a:	(bad)  
6401527b:	sbb    al,0x8b
6401527d:	inc    esp
6401527e:	mov    ds,WORD PTR [eax]
64015280:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64015284:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64015288:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401528c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64015290:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64015294:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64015298:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401529c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640152a0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640152a4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640152a8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640152ac:	lea    eax,[ecx*4+0x0]
640152b3:	add    esi,eax
640152b5:	add    edi,eax
640152b7:	jmp    DWORD PTR [edx*4+0x640152c0]
640152be:	mov    edi,edi
640152c0:	rcl    BYTE PTR [edx+0x1],1
640152c3:	fcom   DWORD PTR fs:[edx+0x1]
640152c7:	fs call 0x6065541f
640152cd:	push   edx
640152ce:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640152d2:	or     BYTE PTR [esi+0x5f],bl
640152d5:	leave  
640152d6:	ret    
640152d7:	nop
640152d8:	mov    al,BYTE PTR [esi+0x3]
640152db:	mov    BYTE PTR [edi+0x3],al
640152de:	mov    eax,DWORD PTR [ebp+0x8]
640152e1:	pop    esi
640152e2:	pop    edi
640152e3:	leave  
640152e4:	ret    
640152e5:	lea    ecx,[ecx+0x0]
640152e8:	mov    al,BYTE PTR [esi+0x3]
640152eb:	mov    BYTE PTR [edi+0x3],al
640152ee:	mov    al,BYTE PTR [esi+0x2]
640152f1:	mov    BYTE PTR [edi+0x2],al
640152f4:	mov    eax,DWORD PTR [ebp+0x8]
640152f7:	pop    esi
640152f8:	pop    edi
640152f9:	leave  
640152fa:	ret    
640152fb:	nop
640152fc:	mov    al,BYTE PTR [esi+0x3]
640152ff:	mov    BYTE PTR [edi+0x3],al
64015302:	mov    al,BYTE PTR [esi+0x2]
64015305:	mov    BYTE PTR [edi+0x2],al
64015308:	mov    al,BYTE PTR [esi+0x1]
6401530b:	mov    BYTE PTR [edi+0x1],al
6401530e:	mov    eax,DWORD PTR [ebp+0x8]
64015311:	pop    esi
64015312:	pop    edi
64015313:	leave  
64015314:	ret    
64015315:	push   0x10
64015317:	push   0x6402c300
6401531c:	call   0x64015530
64015321:	mov    ebx,DWORD PTR [ebp+0x8]
64015324:	test   ebx,ebx
64015326:	jne    0x64015336
64015328:	push   DWORD PTR [ebp+0xc]
6401532b:	call   0x64014ee3
64015330:	pop    ecx
64015331:	jmp    0x64015502
64015336:	mov    esi,DWORD PTR [ebp+0xc]
64015339:	test   esi,esi
6401533b:	jne    0x64015349
6401533d:	push   ebx
6401533e:	call   0x64014e06
64015343:	pop    ecx
64015344:	jmp    0x64015500
64015349:	cmp    DWORD PTR ds:0x6403451c,0x3
64015350:	jne    0x640154e9
64015356:	xor    edi,edi
64015358:	mov    DWORD PTR [ebp-0x1c],edi
6401535b:	cmp    esi,0xffffffe0
6401535e:	ja     0x640154ee
64015364:	push   0x4
64015366:	call   0x6401b53a
6401536b:	pop    ecx
6401536c:	mov    DWORD PTR [ebp-0x4],edi
6401536f:	push   ebx
64015370:	call   0x6401b5b3
64015375:	pop    ecx
64015376:	mov    DWORD PTR [ebp-0x20],eax
64015379:	cmp    eax,edi
6401537b:	je     0x6401541f
64015381:	cmp    esi,DWORD PTR ds:0x6403450c
64015387:	ja     0x640153d2
64015389:	push   esi
6401538a:	push   ebx
6401538b:	push   eax
6401538c:	call   0x6401baa8
64015391:	add    esp,0xc
64015394:	test   eax,eax
64015396:	je     0x6401539d
64015398:	mov    DWORD PTR [ebp-0x1c],ebx
6401539b:	jmp    0x640153d2
6401539d:	push   esi
6401539e:	call   0x6401bd87
640153a3:	pop    ecx
640153a4:	mov    DWORD PTR [ebp-0x1c],eax
640153a7:	cmp    eax,edi
640153a9:	je     0x640153d2
640153ab:	mov    eax,DWORD PTR [ebx-0x4]
640153ae:	dec    eax
640153af:	cmp    eax,esi
640153b1:	jb     0x640153b5
640153b3:	mov    eax,esi
640153b5:	push   eax
640153b6:	push   ebx
640153b7:	push   DWORD PTR [ebp-0x1c]
640153ba:	call   0x64015990
640153bf:	push   ebx
640153c0:	call   0x6401b5b3
640153c5:	mov    DWORD PTR [ebp-0x20],eax
640153c8:	push   ebx
640153c9:	push   eax
640153ca:	call   0x6401b5de
640153cf:	add    esp,0x18
640153d2:	cmp    DWORD PTR [ebp-0x1c],edi
640153d5:	jne    0x6401541f
640153d7:	cmp    esi,edi
640153d9:	jne    0x640153e1
640153db:	xor    esi,esi
640153dd:	inc    esi
640153de:	mov    DWORD PTR [ebp+0xc],esi
640153e1:	add    esi,0xf
640153e4:	and    esi,0xfffffff0
640153e7:	mov    DWORD PTR [ebp+0xc],esi
640153ea:	push   esi
640153eb:	push   edi
640153ec:	push   DWORD PTR ds:0x64030a6c
640153f2:	call   DWORD PTR ds:0x640260f4
640153f8:	mov    DWORD PTR [ebp-0x1c],eax
640153fb:	cmp    eax,edi
640153fd:	je     0x6401541f
640153ff:	mov    eax,DWORD PTR [ebx-0x4]
64015402:	dec    eax
64015403:	cmp    eax,esi
64015405:	jb     0x64015409
64015407:	mov    eax,esi
64015409:	push   eax
6401540a:	push   ebx
6401540b:	push   DWORD PTR [ebp-0x1c]
6401540e:	call   0x64015990
64015413:	push   ebx
64015414:	push   DWORD PTR [ebp-0x20]
64015417:	call   0x6401b5de
6401541c:	add    esp,0x14
6401541f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015426:	call   0x64015459
6401542b:	cmp    DWORD PTR [ebp-0x20],0x0
6401542f:	jne    0x64015462
64015431:	test   esi,esi
64015433:	jne    0x64015436
64015435:	inc    esi
64015436:	add    esi,0xf
64015439:	and    esi,0xfffffff0
6401543c:	mov    DWORD PTR [ebp+0xc],esi
6401543f:	push   esi
64015440:	push   ebx
64015441:	push   0x0
64015443:	push   DWORD PTR ds:0x64030a6c
64015449:	call   DWORD PTR ds:0x640260fc
6401544f:	mov    edi,eax
64015451:	jmp    0x64015465
64015453:	mov    esi,DWORD PTR [ebp+0xc]
64015456:	mov    ebx,DWORD PTR [ebp+0x8]
64015459:	push   0x4
6401545b:	call   0x6401b462
64015460:	pop    ecx
64015461:	ret    
64015462:	mov    edi,DWORD PTR [ebp-0x1c]
64015465:	test   edi,edi
64015467:	jne    0x6401552c
6401546d:	cmp    DWORD PTR ds:0x64030ee4,edi
64015473:	je     0x640154a1
64015475:	push   esi
64015476:	call   0x640163ab
6401547b:	pop    ecx
6401547c:	test   eax,eax
6401547e:	jne    0x64015356
64015484:	call   0x64015d30
64015489:	cmp    DWORD PTR [ebp-0x20],edi
6401548c:	jne    0x640154fa
6401548e:	mov    esi,eax
64015490:	call   DWORD PTR ds:0x64026044
64015496:	push   eax
64015497:	call   0x64015cf5
6401549c:	pop    ecx
6401549d:	mov    DWORD PTR [esi],eax
6401549f:	jmp    0x64015500
640154a1:	test   edi,edi
640154a3:	jne    0x6401552c
640154a9:	call   0x64015d30
640154ae:	cmp    DWORD PTR [ebp-0x20],edi
640154b1:	je     0x6401551b
640154b3:	mov    DWORD PTR [eax],0xc
640154b9:	jmp    0x6401552c
640154bb:	test   esi,esi
640154bd:	jne    0x640154c0
640154bf:	inc    esi
640154c0:	push   esi
640154c1:	push   ebx
640154c2:	push   0x0
640154c4:	push   DWORD PTR ds:0x64030a6c
640154ca:	call   DWORD PTR ds:0x640260fc
640154d0:	mov    edi,eax
640154d2:	test   edi,edi
640154d4:	jne    0x6401552c
640154d6:	cmp    DWORD PTR ds:0x64030ee4,eax
640154dc:	je     0x64015512
640154de:	push   esi
640154df:	call   0x640163ab
640154e4:	pop    ecx
640154e5:	test   eax,eax
640154e7:	je     0x64015508
640154e9:	cmp    esi,0xffffffe0
640154ec:	jbe    0x640154bb
640154ee:	push   esi
640154ef:	call   0x640163ab
640154f4:	pop    ecx
640154f5:	call   0x64015d30
640154fa:	mov    DWORD PTR [eax],0xc
64015500:	xor    eax,eax
64015502:	call   0x64015575
64015507:	ret    
64015508:	call   0x64015d30
6401550d:	jmp    0x6401548e
64015512:	test   edi,edi
64015514:	jne    0x6401552c
64015516:	call   0x64015d30
6401551b:	mov    esi,eax
6401551d:	call   DWORD PTR ds:0x64026044
64015523:	push   eax
64015524:	call   0x64015cf5
64015529:	mov    DWORD PTR [esi],eax
6401552b:	pop    ecx
6401552c:	mov    eax,edi
6401552e:	jmp    0x64015502
64015530:	push   0x64015590
64015535:	push   DWORD PTR fs:0x0
6401553c:	mov    eax,DWORD PTR [esp+0x10]
64015540:	mov    DWORD PTR [esp+0x10],ebp
64015544:	lea    ebp,[esp+0x10]
64015548:	sub    esp,eax
6401554a:	push   ebx
6401554b:	push   esi
6401554c:	push   edi
6401554d:	mov    eax,ds:0x6402f09c
64015552:	xor    DWORD PTR [ebp-0x4],eax
64015555:	xor    eax,ebp
64015557:	push   eax
64015558:	mov    DWORD PTR [ebp-0x18],esp
6401555b:	push   DWORD PTR [ebp-0x8]
6401555e:	mov    eax,DWORD PTR [ebp-0x4]
64015561:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015568:	mov    DWORD PTR [ebp-0x8],eax
6401556b:	lea    eax,[ebp-0x10]
6401556e:	mov    fs:0x0,eax
64015574:	ret    
64015575:	mov    ecx,DWORD PTR [ebp-0x10]
64015578:	mov    DWORD PTR fs:0x0,ecx
6401557f:	pop    ecx
64015580:	pop    edi
64015581:	pop    edi
64015582:	pop    esi
64015583:	pop    ebx
64015584:	mov    esp,ebp
64015586:	pop    ebp
64015587:	push   ecx
64015588:	ret    
64015589:	int3   
6401558a:	int3   
6401558b:	int3   
6401558c:	int3   
6401558d:	int3   
6401558e:	int3   
6401558f:	int3   
64015590:	sub    esp,0x14
64015593:	push   ebx
64015594:	mov    ebx,DWORD PTR [esp+0x20]
64015598:	push   ebp
64015599:	push   esi
6401559a:	mov    esi,DWORD PTR [ebx+0x8]
6401559d:	xor    esi,DWORD PTR ds:0x6402f09c
640155a3:	push   edi
640155a4:	mov    eax,DWORD PTR [esi]
640155a6:	cmp    eax,0xfffffffe
640155a9:	mov    BYTE PTR [esp+0x13],0x0
640155ae:	mov    DWORD PTR [esp+0x18],0x1
640155b6:	lea    edi,[ebx+0x10]
640155b9:	je     0x640155c8
640155bb:	mov    ecx,DWORD PTR [esi+0x4]
640155be:	add    ecx,edi
640155c0:	xor    ecx,DWORD PTR [eax+edi*1]
640155c3:	call   0x64013f6c
640155c8:	mov    ecx,DWORD PTR [esi+0xc]
640155cb:	mov    eax,DWORD PTR [esi+0x8]
640155ce:	add    ecx,edi
640155d0:	xor    ecx,DWORD PTR [eax+edi*1]
640155d3:	call   0x64013f6c
640155d8:	mov    eax,DWORD PTR [esp+0x28]
640155dc:	test   BYTE PTR [eax+0x4],0x66
640155e0:	jne    0x64015705
640155e6:	mov    ebp,DWORD PTR [ebx+0xc]
640155e9:	cmp    ebp,0xfffffffe
640155ec:	mov    ecx,DWORD PTR [esp+0x30]
640155f0:	lea    edx,[esp+0x1c]
640155f4:	mov    DWORD PTR [esp+0x1c],eax
640155f8:	mov    DWORD PTR [esp+0x20],ecx
640155fc:	mov    DWORD PTR [ebx-0x4],edx
640155ff:	je     0x6401565f
64015601:	lea    eax,[ebp+ebp*2+0x0]
64015605:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64015609:	test   ecx,ecx
6401560b:	lea    ebx,[esi+eax*4+0x10]
6401560f:	mov    eax,DWORD PTR [ebx]
64015611:	mov    DWORD PTR [esp+0x14],eax
64015615:	je     0x6401562d
64015617:	mov    edx,edi
64015619:	call   0x6401c4a2
6401561e:	test   eax,eax
64015620:	mov    BYTE PTR [esp+0x13],0x1
64015625:	jl     0x6401566b
64015627:	jg     0x64015675
64015629:	mov    eax,DWORD PTR [esp+0x14]
6401562d:	cmp    eax,0xfffffffe
64015630:	mov    ebp,eax
64015632:	jne    0x64015601
64015634:	cmp    BYTE PTR [esp+0x13],0x0
64015639:	je     0x6401565f
6401563b:	mov    eax,DWORD PTR [esi]
6401563d:	cmp    eax,0xfffffffe
64015640:	je     0x6401564f
64015642:	mov    ecx,DWORD PTR [esi+0x4]
64015645:	add    ecx,edi
64015647:	xor    ecx,DWORD PTR [eax+edi*1]
6401564a:	call   0x64013f6c
6401564f:	mov    ecx,DWORD PTR [esi+0xc]
64015652:	mov    eax,DWORD PTR [esi+0x8]
64015655:	add    ecx,edi
64015657:	xor    ecx,DWORD PTR [eax+edi*1]
6401565a:	call   0x64013f6c
6401565f:	mov    eax,DWORD PTR [esp+0x18]
64015663:	pop    edi
64015664:	pop    esi
64015665:	pop    ebp
64015666:	pop    ebx
64015667:	add    esp,0x14
6401566a:	ret    
6401566b:	mov    DWORD PTR [esp+0x18],0x0
64015673:	jmp    0x6401563b
64015675:	mov    ecx,DWORD PTR [esp+0x28]
64015679:	cmp    DWORD PTR [ecx],0xe06d7363
6401567f:	jne    0x640156ab
64015681:	cmp    DWORD PTR ds:0x64026d20,0x0
64015688:	je     0x640156ab
6401568a:	push   0x64026d20
6401568f:	call   0x6401c590
64015694:	add    esp,0x4
64015697:	test   eax,eax
64015699:	je     0x640156ab
6401569b:	mov    edx,DWORD PTR [esp+0x28]
6401569f:	push   0x1
640156a1:	push   edx
640156a2:	call   DWORD PTR ds:0x64026d20
640156a8:	add    esp,0x8
640156ab:	mov    ecx,DWORD PTR [esp+0x2c]
640156af:	call   0x6401c4d2
640156b4:	mov    eax,DWORD PTR [esp+0x2c]
640156b8:	cmp    DWORD PTR [eax+0xc],ebp
640156bb:	je     0x640156d0
640156bd:	push   0x6402f09c
640156c2:	push   edi
640156c3:	mov    edx,ebp
640156c5:	mov    ecx,eax
640156c7:	call   0x6401c4ec
640156cc:	mov    eax,DWORD PTR [esp+0x2c]
640156d0:	mov    ecx,DWORD PTR [esp+0x14]
640156d4:	mov    DWORD PTR [eax+0xc],ecx
640156d7:	mov    eax,DWORD PTR [esi]
640156d9:	cmp    eax,0xfffffffe
640156dc:	je     0x640156eb
640156de:	mov    ecx,DWORD PTR [esi+0x4]
640156e1:	add    ecx,edi
640156e3:	xor    ecx,DWORD PTR [eax+edi*1]
640156e6:	call   0x64013f6c
640156eb:	mov    ecx,DWORD PTR [esi+0xc]
640156ee:	mov    edx,DWORD PTR [esi+0x8]
640156f1:	add    ecx,edi
640156f3:	xor    ecx,DWORD PTR [edx+edi*1]
640156f6:	call   0x64013f6c
640156fb:	mov    ecx,DWORD PTR [ebx+0x8]
640156fe:	mov    edx,edi
64015700:	jmp    0x6401c4b9
64015705:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64015709:	je     0x6401565f
6401570f:	push   0x6402f09c
64015714:	push   edi
64015715:	mov    ecx,ebx
64015717:	mov    edx,0xfffffffe
6401571c:	call   0x6401c4ec
64015721:	jmp    0x6401563b
64015726:	int3   
64015727:	int3   
64015728:	int3   
64015729:	int3   
6401572a:	int3   
6401572b:	int3   
6401572c:	int3   
6401572d:	int3   
6401572e:	int3   
6401572f:	int3   
64015730:	mov    ecx,DWORD PTR [esp+0x4]
64015734:	test   ecx,0x3
6401573a:	je     0x64015760
6401573c:	mov    al,BYTE PTR [ecx]
6401573e:	add    ecx,0x1
64015741:	test   al,al
64015743:	je     0x64015793
64015745:	test   ecx,0x3
6401574b:	jne    0x6401573c
6401574d:	add    eax,0x0
64015752:	lea    esp,[esp+0x0]
64015759:	lea    esp,[esp+0x0]
64015760:	mov    eax,DWORD PTR [ecx]
64015762:	mov    edx,0x7efefeff
64015767:	add    edx,eax
64015769:	xor    eax,0xffffffff
6401576c:	xor    eax,edx
6401576e:	add    ecx,0x4
64015771:	test   eax,0x81010100
64015776:	je     0x64015760
64015778:	mov    eax,DWORD PTR [ecx-0x4]
6401577b:	test   al,al
6401577d:	je     0x640157b1
6401577f:	test   ah,ah
64015781:	je     0x640157a7
64015783:	test   eax,0xff0000
64015788:	je     0x6401579d
6401578a:	test   eax,0xff000000
6401578f:	je     0x64015793
64015791:	jmp    0x64015760
64015793:	lea    eax,[ecx-0x1]
64015796:	mov    ecx,DWORD PTR [esp+0x4]
6401579a:	sub    eax,ecx
6401579c:	ret    
6401579d:	lea    eax,[ecx-0x2]
640157a0:	mov    ecx,DWORD PTR [esp+0x4]
640157a4:	sub    eax,ecx
640157a6:	ret    
640157a7:	lea    eax,[ecx-0x3]
640157aa:	mov    ecx,DWORD PTR [esp+0x4]
640157ae:	sub    eax,ecx
640157b0:	ret    
640157b1:	lea    eax,[ecx-0x4]
640157b4:	mov    ecx,DWORD PTR [esp+0x4]
640157b8:	sub    eax,ecx
640157ba:	ret    
640157bb:	push   eax
640157bc:	push   DWORD PTR fs:0x0
640157c3:	lea    eax,[esp+0xc]
640157c7:	sub    esp,DWORD PTR [esp+0xc]
640157cb:	push   ebx
640157cc:	push   esi
640157cd:	push   edi
640157ce:	mov    DWORD PTR [eax],ebp
640157d0:	mov    ebp,eax
640157d2:	mov    eax,ds:0x6402f09c
640157d7:	xor    eax,ebp
640157d9:	push   eax
640157da:	push   DWORD PTR [ebp-0x4]
640157dd:	mov    DWORD PTR [ebp-0x4],0xffffffff
640157e4:	lea    eax,[ebp-0xc]
640157e7:	mov    fs:0x0,eax
640157ed:	ret    
640157ee:	push   eax
640157ef:	push   DWORD PTR fs:0x0
640157f6:	lea    eax,[esp+0xc]
640157fa:	sub    esp,DWORD PTR [esp+0xc]
640157fe:	push   ebx
640157ff:	push   esi
64015800:	push   edi
64015801:	mov    DWORD PTR [eax],ebp
64015803:	mov    ebp,eax
64015805:	mov    eax,ds:0x6402f09c
6401580a:	xor    eax,ebp
6401580c:	push   eax
6401580d:	mov    DWORD PTR [ebp-0x10],esp
64015810:	push   DWORD PTR [ebp-0x4]
64015813:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401581a:	lea    eax,[ebp-0xc]
6401581d:	mov    fs:0x0,eax
64015823:	ret    
64015824:	push   0xc
64015826:	push   0x6402c320
6401582b:	call   0x64015530
64015830:	push   0xe
64015832:	call   0x6401b53a
64015837:	pop    ecx
64015838:	and    DWORD PTR [ebp-0x4],0x0
6401583c:	mov    esi,DWORD PTR [ebp+0x8]
6401583f:	mov    ecx,DWORD PTR [esi+0x4]
64015842:	test   ecx,ecx
64015844:	je     0x64015875
64015846:	mov    eax,ds:0x64030588
6401584b:	mov    edx,0x64030584
64015850:	mov    DWORD PTR [ebp-0x1c],eax
64015853:	test   eax,eax
64015855:	je     0x64015868
64015857:	cmp    DWORD PTR [eax],ecx
64015859:	jne    0x64015887
6401585b:	mov    ecx,DWORD PTR [eax+0x4]
6401585e:	mov    DWORD PTR [edx+0x4],ecx
64015861:	push   eax
64015862:	call   0x64014e06
64015867:	pop    ecx
64015868:	push   DWORD PTR [esi+0x4]
6401586b:	call   0x64014e06
64015870:	pop    ecx
64015871:	and    DWORD PTR [esi+0x4],0x0
64015875:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401587c:	call   0x6401588b
64015881:	call   0x64015575
64015886:	ret    
64015887:	mov    edx,eax
64015889:	jmp    0x64015850
6401588b:	push   0xe
6401588d:	call   0x6401b462
64015892:	pop    ecx
64015893:	ret    
64015894:	int3   
64015895:	int3   
64015896:	int3   
64015897:	int3   
64015898:	int3   
64015899:	int3   
6401589a:	int3   
6401589b:	int3   
6401589c:	int3   
6401589d:	int3   
6401589e:	int3   
6401589f:	int3   
640158a0:	mov    edx,DWORD PTR [esp+0x4]
640158a4:	mov    ecx,DWORD PTR [esp+0x8]
640158a8:	test   edx,0x3
640158ae:	jne    0x640158ec
640158b0:	mov    eax,DWORD PTR [edx]
640158b2:	cmp    al,BYTE PTR [ecx]
640158b4:	jne    0x640158e4
640158b6:	or     al,al
640158b8:	je     0x640158e0
640158ba:	cmp    ah,BYTE PTR [ecx+0x1]
640158bd:	jne    0x640158e4
640158bf:	or     ah,ah
640158c1:	je     0x640158e0
640158c3:	shr    eax,0x10
640158c6:	cmp    al,BYTE PTR [ecx+0x2]
640158c9:	jne    0x640158e4
640158cb:	or     al,al
640158cd:	je     0x640158e0
640158cf:	cmp    ah,BYTE PTR [ecx+0x3]
640158d2:	jne    0x640158e4
640158d4:	add    ecx,0x4
640158d7:	add    edx,0x4
640158da:	or     ah,ah
640158dc:	jne    0x640158b0
640158de:	mov    edi,edi
640158e0:	xor    eax,eax
640158e2:	ret    
640158e3:	nop
640158e4:	sbb    eax,eax
640158e6:	shl    eax,1
640158e8:	add    eax,0x1
640158eb:	ret    
640158ec:	test   edx,0x1
640158f2:	je     0x6401590c
640158f4:	mov    al,BYTE PTR [edx]
640158f6:	add    edx,0x1
640158f9:	cmp    al,BYTE PTR [ecx]
640158fb:	jne    0x640158e4
640158fd:	add    ecx,0x1
64015900:	or     al,al
64015902:	je     0x640158e0
64015904:	test   edx,0x2
6401590a:	je     0x640158b0
6401590c:	mov    ax,WORD PTR [edx]
6401590f:	add    edx,0x2
64015912:	cmp    al,BYTE PTR [ecx]
64015914:	jne    0x640158e4
64015916:	or     al,al
64015918:	je     0x640158e0
6401591a:	cmp    ah,BYTE PTR [ecx+0x1]
6401591d:	jne    0x640158e4
6401591f:	or     ah,ah
64015921:	je     0x640158e0
64015923:	add    ecx,0x2
64015926:	jmp    0x640158b0
64015928:	mov    ecx,DWORD PTR [esp+0x4]
6401592c:	push   ebx
6401592d:	xor    ebx,ebx
6401592f:	cmp    ecx,ebx
64015931:	push   esi
64015932:	push   edi
64015933:	je     0x6401593d
64015935:	mov    edi,DWORD PTR [esp+0x14]
64015939:	cmp    edi,ebx
6401593b:	ja     0x64015958
6401593d:	call   0x64015d30
64015942:	push   0x16
64015944:	pop    esi
64015945:	mov    DWORD PTR [eax],esi
64015947:	push   ebx
64015948:	push   ebx
64015949:	push   ebx
6401594a:	push   ebx
6401594b:	push   ebx
6401594c:	call   0x64013aa4
64015951:	add    esp,0x14
64015954:	mov    eax,esi
64015956:	jmp    0x64015989
64015958:	mov    esi,DWORD PTR [esp+0x18]
6401595c:	cmp    esi,ebx
6401595e:	jne    0x64015964
64015960:	mov    BYTE PTR [ecx],bl
64015962:	jmp    0x6401593d
64015964:	mov    edx,ecx
64015966:	mov    al,BYTE PTR [esi]
64015968:	mov    BYTE PTR [edx],al
6401596a:	inc    edx
6401596b:	inc    esi
6401596c:	cmp    al,bl
6401596e:	je     0x64015973
64015970:	dec    edi
64015971:	jne    0x64015966
64015973:	cmp    edi,ebx
64015975:	jne    0x64015987
64015977:	mov    BYTE PTR [ecx],bl
64015979:	call   0x64015d30
6401597e:	push   0x22
64015980:	pop    ecx
64015981:	mov    DWORD PTR [eax],ecx
64015983:	mov    esi,ecx
64015985:	jmp    0x64015947
64015987:	xor    eax,eax
64015989:	pop    edi
6401598a:	pop    esi
6401598b:	pop    ebx
6401598c:	ret    
6401598d:	int3   
6401598e:	int3   
6401598f:	int3   
64015990:	push   ebp
64015991:	mov    ebp,esp
64015993:	push   edi
64015994:	push   esi
64015995:	mov    esi,DWORD PTR [ebp+0xc]
64015998:	mov    ecx,DWORD PTR [ebp+0x10]
6401599b:	mov    edi,DWORD PTR [ebp+0x8]
6401599e:	mov    eax,ecx
640159a0:	mov    edx,ecx
640159a2:	add    eax,esi
640159a4:	cmp    edi,esi
640159a6:	jbe    0x640159b0
640159a8:	cmp    edi,eax
640159aa:	jb     0x64015b54
640159b0:	cmp    ecx,0x100
640159b6:	jb     0x640159d7
640159b8:	cmp    DWORD PTR ds:0x64034644,0x0
640159bf:	je     0x640159d7
640159c1:	push   edi
640159c2:	push   esi
640159c3:	and    edi,0xf
640159c6:	and    esi,0xf
640159c9:	cmp    edi,esi
640159cb:	pop    esi
640159cc:	pop    edi
640159cd:	jne    0x640159d7
640159cf:	pop    esi
640159d0:	pop    edi
640159d1:	pop    ebp
640159d2:	jmp    0x6401c2ca
640159d7:	test   edi,0x3
640159dd:	jne    0x640159f4
640159df:	shr    ecx,0x2
640159e2:	and    edx,0x3
640159e5:	cmp    ecx,0x8
640159e8:	jb     0x64015a14
640159ea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640159ec:	jmp    DWORD PTR [edx*4+0x64015b04]
640159f3:	nop
640159f4:	mov    eax,edi
640159f6:	mov    edx,0x3
640159fb:	sub    ecx,0x4
640159fe:	jb     0x64015a0c
64015a00:	and    eax,0x3
64015a03:	add    ecx,eax
64015a05:	jmp    DWORD PTR [eax*4+0x64015a18]
64015a0c:	jmp    DWORD PTR [ecx*4+0x64015b14]
64015a13:	nop
64015a14:	jmp    DWORD PTR [ecx*4+0x64015a98]
64015a1b:	nop
64015a1c:	sub    BYTE PTR [edx+0x1],bl
64015a1f:	fs push esp
64015a21:	pop    edx
64015a22:	add    DWORD PTR [eax+edi*2+0x5a],esp
64015a26:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64015a2a:	mov    al,BYTE PTR [esi]
64015a2c:	mov    BYTE PTR [edi],al
64015a2e:	mov    al,BYTE PTR [esi+0x1]
64015a31:	mov    BYTE PTR [edi+0x1],al
64015a34:	mov    al,BYTE PTR [esi+0x2]
64015a37:	shr    ecx,0x2
64015a3a:	mov    BYTE PTR [edi+0x2],al
64015a3d:	add    esi,0x3
64015a40:	add    edi,0x3
64015a43:	cmp    ecx,0x8
64015a46:	jb     0x64015a14
64015a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015a4a:	jmp    DWORD PTR [edx*4+0x64015b04]
64015a51:	lea    ecx,[ecx+0x0]
64015a54:	and    edx,ecx
64015a56:	mov    al,BYTE PTR [esi]
64015a58:	mov    BYTE PTR [edi],al
64015a5a:	mov    al,BYTE PTR [esi+0x1]
64015a5d:	shr    ecx,0x2
64015a60:	mov    BYTE PTR [edi+0x1],al
64015a63:	add    esi,0x2
64015a66:	add    edi,0x2
64015a69:	cmp    ecx,0x8
64015a6c:	jb     0x64015a14
64015a6e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015a70:	jmp    DWORD PTR [edx*4+0x64015b04]
64015a77:	nop
64015a78:	and    edx,ecx
64015a7a:	mov    al,BYTE PTR [esi]
64015a7c:	mov    BYTE PTR [edi],al
64015a7e:	add    esi,0x1
64015a81:	shr    ecx,0x2
64015a84:	add    edi,0x1
64015a87:	cmp    ecx,0x8
64015a8a:	jb     0x64015a14
64015a8c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015a8e:	jmp    DWORD PTR [edx*4+0x64015b04]
64015a95:	lea    ecx,[ecx+0x0]
64015a98:	sti    
64015a99:	pop    edx
64015a9a:	add    DWORD PTR [eax+ebp*8+0x5a],esp
64015a9e:	add    DWORD PTR [eax+eiz*8+0x5a],esp
64015aa2:	add    DWORD PTR [eax+ebx*8+0x5a],esp
64015aa6:	add    DWORD PTR [eax+edx*8+0x5a],esp
64015aaa:	add    DWORD PTR [eax+ecx*8+0x5a],esp
64015aae:	add    DWORD PTR [eax+eax*8+0x5a],esp
64015ab2:	add    DWORD PTR [eax+edi*4+0x5a],esp
64015ab6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015aba:	mov    fs,esp
64015abc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64015ac0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64015ac4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64015ac8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64015acc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64015ad0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64015ad4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64015ad8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64015adc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64015ae0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64015ae4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64015ae8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64015aec:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64015af0:	lea    eax,[ecx*4+0x0]
64015af7:	add    esi,eax
64015af9:	add    edi,eax
64015afb:	jmp    DWORD PTR [edx*4+0x64015b04]
64015b02:	mov    edi,edi
64015b04:	adc    al,0x5b
64015b06:	add    DWORD PTR [esp+ebx*1+0x5b],esp
64015b0a:	add    DWORD PTR [eax+ebp*1+0x5b],esp
64015b0e:	add    DWORD PTR [esp+edi*1+0x5b],esp
64015b12:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015b16:	or     BYTE PTR [esi+0x5f],bl
64015b19:	leave  
64015b1a:	ret    
64015b1b:	nop
64015b1c:	mov    al,BYTE PTR [esi]
64015b1e:	mov    BYTE PTR [edi],al
64015b20:	mov    eax,DWORD PTR [ebp+0x8]
64015b23:	pop    esi
64015b24:	pop    edi
64015b25:	leave  
64015b26:	ret    
64015b27:	nop
64015b28:	mov    al,BYTE PTR [esi]
64015b2a:	mov    BYTE PTR [edi],al
64015b2c:	mov    al,BYTE PTR [esi+0x1]
64015b2f:	mov    BYTE PTR [edi+0x1],al
64015b32:	mov    eax,DWORD PTR [ebp+0x8]
64015b35:	pop    esi
64015b36:	pop    edi
64015b37:	leave  
64015b38:	ret    
64015b39:	lea    ecx,[ecx+0x0]
64015b3c:	mov    al,BYTE PTR [esi]
64015b3e:	mov    BYTE PTR [edi],al
64015b40:	mov    al,BYTE PTR [esi+0x1]
64015b43:	mov    BYTE PTR [edi+0x1],al
64015b46:	mov    al,BYTE PTR [esi+0x2]
64015b49:	mov    BYTE PTR [edi+0x2],al
64015b4c:	mov    eax,DWORD PTR [ebp+0x8]
64015b4f:	pop    esi
64015b50:	pop    edi
64015b51:	leave  
64015b52:	ret    
64015b53:	nop
64015b54:	lea    esi,[ecx+esi*1-0x4]
64015b58:	lea    edi,[ecx+edi*1-0x4]
64015b5c:	test   edi,0x3
64015b62:	jne    0x64015b88
64015b64:	shr    ecx,0x2
64015b67:	and    edx,0x3
64015b6a:	cmp    ecx,0x8
64015b6d:	jb     0x64015b7c
64015b6f:	std    
64015b70:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015b72:	cld    
64015b73:	jmp    DWORD PTR [edx*4+0x64015ca0]
64015b7a:	mov    edi,edi
64015b7c:	neg    ecx
64015b7e:	jmp    DWORD PTR [ecx*4+0x64015c50]
64015b85:	lea    ecx,[ecx+0x0]
64015b88:	mov    eax,edi
64015b8a:	mov    edx,0x3
64015b8f:	cmp    ecx,0x4
64015b92:	jb     0x64015ba0
64015b94:	and    eax,0x3
64015b97:	sub    ecx,eax
64015b99:	jmp    DWORD PTR [eax*4+0x64015ba4]
64015ba0:	jmp    DWORD PTR [ecx*4+0x64015ca0]
64015ba7:	nop
64015ba8:	mov    ah,0x5b
64015baa:	add    DWORD PTR [eax+ebx*8+0x5b],esp
64015bae:	add    DWORD PTR [eax+eax*1+0x5c],esp
64015bb2:	add    DWORD PTR [edx+ecx*4+0x46],esp
64015bb6:	add    esp,DWORD PTR [ebx]
64015bb8:	ror    DWORD PTR [eax-0x117cfcb9],1
64015bbe:	add    ecx,eax
64015bc0:	jmp    0x65f0dec7
64015bc5:	cmp    ecx,0x8
64015bc8:	jb     0x64015b7c
64015bca:	std    
64015bcb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015bcd:	cld    
64015bce:	jmp    DWORD PTR [edx*4+0x64015ca0]
64015bd5:	lea    ecx,[ecx+0x0]
64015bd8:	mov    al,BYTE PTR [esi+0x3]
64015bdb:	and    edx,ecx
64015bdd:	mov    BYTE PTR [edi+0x3],al
64015be0:	mov    al,BYTE PTR [esi+0x2]
64015be3:	shr    ecx,0x2
64015be6:	mov    BYTE PTR [edi+0x2],al
64015be9:	sub    esi,0x2
64015bec:	sub    edi,0x2
64015bef:	cmp    ecx,0x8
64015bf2:	jb     0x64015b7c
64015bf4:	std    
64015bf5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015bf7:	cld    
64015bf8:	jmp    DWORD PTR [edx*4+0x64015ca0]
64015bff:	nop
64015c00:	mov    al,BYTE PTR [esi+0x3]
64015c03:	and    edx,ecx
64015c05:	mov    BYTE PTR [edi+0x3],al
64015c08:	mov    al,BYTE PTR [esi+0x2]
64015c0b:	mov    BYTE PTR [edi+0x2],al
64015c0e:	mov    al,BYTE PTR [esi+0x1]
64015c11:	shr    ecx,0x2
64015c14:	mov    BYTE PTR [edi+0x1],al
64015c17:	sub    esi,0x3
64015c1a:	sub    edi,0x3
64015c1d:	cmp    ecx,0x8
64015c20:	jb     0x64015b7c
64015c26:	std    
64015c27:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015c29:	cld    
64015c2a:	jmp    DWORD PTR [edx*4+0x64015ca0]
64015c31:	lea    ecx,[ecx+0x0]
64015c34:	push   esp
64015c35:	pop    esp
64015c36:	add    DWORD PTR [esp+ebx*2+0x5c],esp
64015c3a:	add    DWORD PTR [esp+eiz*2+0x5c],esp
64015c3e:	add    DWORD PTR [esp+ebp*2+0x5c],esp
64015c42:	add    DWORD PTR [esp+esi*2+0x5c],esp
64015c46:	add    DWORD PTR [esp+edi*2+0x5c],esp
64015c4a:	add    DWORD PTR [esp+eax*4+0x5c],esp
64015c4e:	add    DWORD PTR [edi+edx*4+0x5c],esp
64015c52:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015c56:	mov    ds,WORD PTR [ecx+ecx*4]
64015c59:	inc    esp
64015c5a:	(bad)  
64015c5b:	sbb    al,0x8b
64015c5d:	inc    esp
64015c5e:	mov    ds,WORD PTR [eax]
64015c60:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64015c64:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64015c68:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64015c6c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64015c70:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64015c74:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64015c78:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64015c7c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64015c80:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64015c84:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64015c88:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64015c8c:	lea    eax,[ecx*4+0x0]
64015c93:	add    esi,eax
64015c95:	add    edi,eax
64015c97:	jmp    DWORD PTR [edx*4+0x64015ca0]
64015c9e:	mov    edi,edi
64015ca0:	mov    al,0x5c
64015ca2:	add    DWORD PTR [eax+edi*4+0x5c],esp
64015ca6:	add    DWORD PTR [eax+ecx*8+0x5c],esp
64015caa:	add    DWORD PTR [esp+ebx*8+0x5c],esp
64015cae:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015cb2:	or     BYTE PTR [esi+0x5f],bl
64015cb5:	leave  
64015cb6:	ret    
64015cb7:	nop
64015cb8:	mov    al,BYTE PTR [esi+0x3]
64015cbb:	mov    BYTE PTR [edi+0x3],al
64015cbe:	mov    eax,DWORD PTR [ebp+0x8]
64015cc1:	pop    esi
64015cc2:	pop    edi
64015cc3:	leave  
64015cc4:	ret    
64015cc5:	lea    ecx,[ecx+0x0]
64015cc8:	mov    al,BYTE PTR [esi+0x3]
64015ccb:	mov    BYTE PTR [edi+0x3],al
64015cce:	mov    al,BYTE PTR [esi+0x2]
64015cd1:	mov    BYTE PTR [edi+0x2],al
64015cd4:	mov    eax,DWORD PTR [ebp+0x8]
64015cd7:	pop    esi
64015cd8:	pop    edi
64015cd9:	leave  
64015cda:	ret    
64015cdb:	nop
64015cdc:	mov    al,BYTE PTR [esi+0x3]
64015cdf:	mov    BYTE PTR [edi+0x3],al
64015ce2:	mov    al,BYTE PTR [esi+0x2]
64015ce5:	mov    BYTE PTR [edi+0x2],al
64015ce8:	mov    al,BYTE PTR [esi+0x1]
64015ceb:	mov    BYTE PTR [edi+0x1],al
64015cee:	mov    eax,DWORD PTR [ebp+0x8]
64015cf1:	pop    esi
64015cf2:	pop    edi
64015cf3:	leave  
64015cf4:	ret    
64015cf5:	mov    eax,DWORD PTR [esp+0x4]
64015cf9:	xor    ecx,ecx
64015cfb:	cmp    eax,DWORD PTR [ecx*8+0x6402f0c0]
64015d02:	je     0x64015d16
64015d04:	inc    ecx
64015d05:	cmp    ecx,0x2d
64015d08:	jb     0x64015cfb
64015d0a:	lea    ecx,[eax-0x13]
64015d0d:	cmp    ecx,0x11
64015d10:	ja     0x64015d1e
64015d12:	push   0xd
64015d14:	pop    eax
64015d15:	ret    
64015d16:	mov    eax,DWORD PTR [ecx*8+0x6402f0c4]
64015d1d:	ret    
64015d1e:	add    eax,0xffffff44
64015d23:	push   0xe
64015d25:	pop    ecx
64015d26:	cmp    ecx,eax
64015d28:	sbb    eax,eax
64015d2a:	and    eax,ecx
64015d2c:	add    eax,0x8
64015d2f:	ret    
64015d30:	call   0x64016004
64015d35:	test   eax,eax
64015d37:	jne    0x64015d3f
64015d39:	mov    eax,0x6402f228
64015d3e:	ret    
64015d3f:	add    eax,0x8
64015d42:	ret    
64015d43:	call   0x64016004
64015d48:	test   eax,eax
64015d4a:	jne    0x64015d52
64015d4c:	mov    eax,0x6402f22c
64015d51:	ret    
64015d52:	add    eax,0xc
64015d55:	ret    
64015d56:	push   esi
64015d57:	call   0x64015d43
64015d5c:	mov    ecx,DWORD PTR [esp+0x8]
64015d60:	push   ecx
64015d61:	mov    DWORD PTR [eax],ecx
64015d63:	call   0x64015cf5
64015d68:	pop    ecx
64015d69:	mov    esi,eax
64015d6b:	call   0x64015d30
64015d70:	mov    DWORD PTR [eax],esi
64015d72:	pop    esi
64015d73:	ret    
64015d74:	and    DWORD PTR ds:0x6403465c,0x0
64015d7b:	ret    
64015d7c:	push   ebp
64015d7d:	mov    ebp,esp
64015d7f:	push   ecx
64015d80:	push   ecx
64015d81:	push   ebx
64015d82:	push   esi
64015d83:	xor    esi,esi
64015d85:	lea    eax,[ebp-0x4]
64015d88:	inc    esi
64015d89:	xor    ebx,ebx
64015d8b:	push   eax
64015d8c:	mov    DWORD PTR [ebp-0x8],esi
64015d8f:	mov    DWORD PTR [ebp-0x4],ebx
64015d92:	call   0x64017496
64015d97:	cmp    DWORD PTR [ebp-0x4],0x5
64015d9b:	pop    ecx
64015d9c:	jle    0x64015da2
64015d9e:	mov    eax,esi
64015da0:	jmp    0x64015de4
64015da2:	push   edi
64015da3:	push   ebx
64015da4:	call   DWORD PTR ds:0x64026124
64015daa:	mov    esi,DWORD PTR [eax+0x3c]
64015dad:	add    esi,eax
64015daf:	cmp    WORD PTR [esi+0x6],bx
64015db3:	movzx  eax,WORD PTR [esi+0x14]
64015db7:	lea    edi,[eax+esi*1+0x18]
64015dbb:	jbe    0x64015de0
64015dbd:	push   edi
64015dbe:	push   0x64026cbc
64015dc3:	call   0x640158a0
64015dc8:	test   eax,eax
64015dca:	pop    ecx
64015dcb:	pop    ecx
64015dcc:	je     0x64015ddc
64015dce:	movzx  eax,WORD PTR [esi+0x6]
64015dd2:	inc    ebx
64015dd3:	add    edi,0x28
64015dd6:	cmp    ebx,eax
64015dd8:	jb     0x64015dbd
64015dda:	jmp    0x64015de0
64015ddc:	and    DWORD PTR [ebp-0x8],0x0
64015de0:	mov    eax,DWORD PTR [ebp-0x8]
64015de3:	pop    edi
64015de4:	pop    esi
64015de5:	pop    ebx
64015de6:	leave  
64015de7:	ret    
64015de8:	push   esi
64015de9:	push   DWORD PTR ds:0x6402f234
64015def:	mov    esi,DWORD PTR ds:0x64026128
64015df5:	call   esi
64015df7:	test   eax,eax
64015df9:	je     0x64015e1c
64015dfb:	mov    eax,ds:0x6402f230
64015e00:	cmp    eax,0xffffffff
64015e03:	je     0x64015e1c
64015e05:	push   eax
64015e06:	push   DWORD PTR ds:0x6402f234
64015e0c:	call   esi
64015e0e:	call   eax
64015e10:	test   eax,eax
64015e12:	je     0x64015e1c
64015e14:	mov    eax,DWORD PTR [eax+0x1f8]
64015e1a:	jmp    0x64015e42
64015e1c:	push   0x64026cd4
64015e21:	call   DWORD PTR ds:0x64026124
64015e27:	mov    esi,eax
64015e29:	test   esi,esi
64015e2b:	je     0x64015e50
64015e2d:	call   0x64015d7c
64015e32:	test   eax,eax
64015e34:	je     0x64015e50
64015e36:	push   0x64026cc4
64015e3b:	push   esi
64015e3c:	call   DWORD PTR ds:0x64026014
64015e42:	test   eax,eax
64015e44:	je     0x64015e50
64015e46:	push   DWORD PTR [esp+0x8]
64015e4a:	call   eax
64015e4c:	mov    DWORD PTR [esp+0x8],eax
64015e50:	mov    eax,DWORD PTR [esp+0x8]
64015e54:	pop    esi
64015e55:	ret    
64015e56:	push   0x0
64015e58:	call   0x64015de8
64015e5d:	pop    ecx
64015e5e:	ret    
64015e5f:	push   esi
64015e60:	push   DWORD PTR ds:0x6402f234
64015e66:	mov    esi,DWORD PTR ds:0x64026128
64015e6c:	call   esi
64015e6e:	test   eax,eax
64015e70:	je     0x64015e93
64015e72:	mov    eax,ds:0x6402f230
64015e77:	cmp    eax,0xffffffff
64015e7a:	je     0x64015e93
64015e7c:	push   eax
64015e7d:	push   DWORD PTR ds:0x6402f234
64015e83:	call   esi
64015e85:	call   eax
64015e87:	test   eax,eax
64015e89:	je     0x64015e93
64015e8b:	mov    eax,DWORD PTR [eax+0x1fc]
64015e91:	jmp    0x64015eb9
64015e93:	push   0x64026cd4
64015e98:	call   DWORD PTR ds:0x64026124
64015e9e:	mov    esi,eax
64015ea0:	test   esi,esi
64015ea2:	je     0x64015ec7
64015ea4:	call   0x64015d7c
64015ea9:	test   eax,eax
64015eab:	je     0x64015ec7
64015ead:	push   0x64026ce4
64015eb2:	push   esi
64015eb3:	call   DWORD PTR ds:0x64026014
64015eb9:	test   eax,eax
64015ebb:	je     0x64015ec7
64015ebd:	push   DWORD PTR [esp+0x8]
64015ec1:	call   eax
64015ec3:	mov    DWORD PTR [esp+0x8],eax
64015ec7:	mov    eax,DWORD PTR [esp+0x8]
64015ecb:	pop    esi
64015ecc:	ret    
64015ecd:	call   DWORD PTR ds:0x6402612c
64015ed3:	ret    0x4
64015ed6:	push   esi
64015ed7:	push   DWORD PTR ds:0x6402f234
64015edd:	call   DWORD PTR ds:0x64026128
64015ee3:	mov    esi,eax
64015ee5:	test   esi,esi
64015ee7:	jne    0x64015f04
64015ee9:	push   DWORD PTR ds:0x64030590
64015eef:	call   0x64015e5f
64015ef4:	pop    ecx
64015ef5:	mov    esi,eax
64015ef7:	push   esi
64015ef8:	push   DWORD PTR ds:0x6402f234
64015efe:	call   DWORD PTR ds:0x64026130
64015f04:	mov    eax,esi
64015f06:	pop    esi
64015f07:	ret    
64015f08:	mov    eax,ds:0x6402f230
64015f0d:	cmp    eax,0xffffffff
64015f10:	je     0x64015f28
64015f12:	push   eax
64015f13:	push   DWORD PTR ds:0x64030598
64015f19:	call   0x64015e5f
64015f1e:	pop    ecx
64015f1f:	call   eax
64015f21:	or     DWORD PTR ds:0x6402f230,0xffffffff
64015f28:	mov    eax,ds:0x6402f234
64015f2d:	cmp    eax,0xffffffff
64015f30:	je     0x64015f40
64015f32:	push   eax
64015f33:	call   DWORD PTR ds:0x64026134
64015f39:	or     DWORD PTR ds:0x6402f234,0xffffffff
64015f40:	jmp    0x6401b40d
64015f45:	push   0xc
64015f47:	push   0x6402c340
64015f4c:	call   0x64015530
64015f51:	push   0x64026cd4
64015f56:	call   DWORD PTR ds:0x64026124
64015f5c:	mov    DWORD PTR [ebp-0x1c],eax
64015f5f:	mov    esi,DWORD PTR [ebp+0x8]
64015f62:	mov    DWORD PTR [esi+0x5c],0x6402f8c8
64015f69:	xor    edi,edi
64015f6b:	inc    edi
64015f6c:	mov    DWORD PTR [esi+0x14],edi
64015f6f:	test   eax,eax
64015f71:	je     0x64015fa2
64015f73:	call   0x64015d7c
64015f78:	test   eax,eax
64015f7a:	je     0x64015fa2
64015f7c:	push   0x64026cc4
64015f81:	push   DWORD PTR [ebp-0x1c]
64015f84:	mov    ebx,DWORD PTR ds:0x64026014
64015f8a:	call   ebx
64015f8c:	mov    DWORD PTR [esi+0x1f8],eax
64015f92:	push   0x64026ce4
64015f97:	push   DWORD PTR [ebp-0x1c]
64015f9a:	call   ebx
64015f9c:	mov    DWORD PTR [esi+0x1fc],eax
64015fa2:	mov    DWORD PTR [esi+0x70],edi
64015fa5:	mov    BYTE PTR [esi+0xc8],0x43
64015fac:	mov    BYTE PTR [esi+0x14b],0x43
64015fb3:	mov    eax,0x6402f268
64015fb8:	mov    DWORD PTR [esi+0x68],eax
64015fbb:	push   eax
64015fbc:	call   DWORD PTR ds:0x64026020
64015fc2:	push   0xc
64015fc4:	call   0x6401b53a
64015fc9:	pop    ecx
64015fca:	and    DWORD PTR [ebp-0x4],0x0
64015fce:	mov    eax,DWORD PTR [ebp+0xc]
64015fd1:	mov    DWORD PTR [esi+0x6c],eax
64015fd4:	test   eax,eax
64015fd6:	jne    0x64015fe0
64015fd8:	mov    eax,ds:0x6402f870
64015fdd:	mov    DWORD PTR [esi+0x6c],eax
64015fe0:	push   DWORD PTR [esi+0x6c]
64015fe3:	call   0x64017eaf
64015fe8:	pop    ecx
64015fe9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ff0:	call   0x64015ffb
64015ff5:	call   0x64015575
64015ffa:	ret    
64015ffb:	push   0xc
64015ffd:	call   0x6401b462
64016002:	pop    ecx
64016003:	ret    
64016004:	push   esi
64016005:	push   edi
64016006:	call   DWORD PTR ds:0x64026044
6401600c:	push   DWORD PTR ds:0x6402f230
64016012:	mov    edi,eax
64016014:	call   0x64015ed6
64016019:	call   eax
6401601b:	mov    esi,eax
6401601d:	test   esi,esi
6401601f:	jne    0x6401606f
64016021:	push   0x214
64016026:	push   0x1
64016028:	call   0x64017280
6401602d:	mov    esi,eax
6401602f:	test   esi,esi
64016031:	pop    ecx
64016032:	pop    ecx
64016033:	je     0x6401606f
64016035:	push   esi
64016036:	push   DWORD PTR ds:0x6402f230
6401603c:	push   DWORD PTR ds:0x64030594
64016042:	call   0x64015e5f
64016047:	pop    ecx
64016048:	call   eax
6401604a:	test   eax,eax
6401604c:	je     0x64016066
6401604e:	push   0x0
64016050:	push   esi
64016051:	call   0x64015f45
64016056:	pop    ecx
64016057:	pop    ecx
64016058:	call   DWORD PTR ds:0x6402611c
6401605e:	or     DWORD PTR [esi+0x4],0xffffffff
64016062:	mov    DWORD PTR [esi],eax
64016064:	jmp    0x6401606f
64016066:	push   esi
64016067:	call   0x64014e06
6401606c:	pop    ecx
6401606d:	xor    esi,esi
6401606f:	push   edi
64016070:	call   DWORD PTR ds:0x64026060
64016076:	pop    edi
64016077:	mov    eax,esi
64016079:	pop    esi
6401607a:	ret    
6401607b:	push   esi
6401607c:	call   0x64016004
64016081:	mov    esi,eax
64016083:	test   esi,esi
64016085:	jne    0x6401608f
64016087:	push   0x10
64016089:	call   0x640173b6
6401608e:	pop    ecx
6401608f:	mov    eax,esi
64016091:	pop    esi
64016092:	ret    
64016093:	push   0x8
64016095:	push   0x6402c360
6401609a:	call   0x64015530
6401609f:	mov    esi,DWORD PTR [ebp+0x8]
640160a2:	test   esi,esi
640160a4:	je     0x64016194
640160aa:	mov    eax,DWORD PTR [esi+0x24]
640160ad:	test   eax,eax
640160af:	je     0x640160b8
640160b1:	push   eax
640160b2:	call   0x64014e06
640160b7:	pop    ecx
640160b8:	mov    eax,DWORD PTR [esi+0x2c]
640160bb:	test   eax,eax
640160bd:	je     0x640160c6
640160bf:	push   eax
640160c0:	call   0x64014e06
640160c5:	pop    ecx
640160c6:	mov    eax,DWORD PTR [esi+0x34]
640160c9:	test   eax,eax
640160cb:	je     0x640160d4
640160cd:	push   eax
640160ce:	call   0x64014e06
640160d3:	pop    ecx
640160d4:	mov    eax,DWORD PTR [esi+0x3c]
640160d7:	test   eax,eax
640160d9:	je     0x640160e2
640160db:	push   eax
640160dc:	call   0x64014e06
640160e1:	pop    ecx
640160e2:	mov    eax,DWORD PTR [esi+0x44]
640160e5:	test   eax,eax
640160e7:	je     0x640160f0
640160e9:	push   eax
640160ea:	call   0x64014e06
640160ef:	pop    ecx
640160f0:	mov    eax,DWORD PTR [esi+0x48]
640160f3:	test   eax,eax
640160f5:	je     0x640160fe
640160f7:	push   eax
640160f8:	call   0x64014e06
640160fd:	pop    ecx
640160fe:	mov    eax,DWORD PTR [esi+0x5c]
64016101:	cmp    eax,0x6402f8c8
64016106:	je     0x6401610f
64016108:	push   eax
64016109:	call   0x64014e06
6401610e:	pop    ecx
6401610f:	push   0xd
64016111:	call   0x6401b53a
64016116:	pop    ecx
64016117:	and    DWORD PTR [ebp-0x4],0x0
6401611b:	mov    edi,DWORD PTR [esi+0x68]
6401611e:	test   edi,edi
64016120:	je     0x6401613c
64016122:	push   edi
64016123:	call   DWORD PTR ds:0x64026098
64016129:	test   eax,eax
6401612b:	jne    0x6401613c
6401612d:	cmp    edi,0x6402f268
64016133:	je     0x6401613c
64016135:	push   edi
64016136:	call   0x64014e06
6401613b:	pop    ecx
6401613c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016143:	call   0x6401619f
64016148:	push   0xc
6401614a:	call   0x6401b53a
6401614f:	pop    ecx
64016150:	mov    DWORD PTR [ebp-0x4],0x1
64016157:	mov    edi,DWORD PTR [esi+0x6c]
6401615a:	test   edi,edi
6401615c:	je     0x64016181
6401615e:	push   edi
6401615f:	call   0x64017f35
64016164:	pop    ecx
64016165:	cmp    edi,DWORD PTR ds:0x6402f870
6401616b:	je     0x64016181
6401616d:	cmp    edi,0x6402f798
64016173:	je     0x64016181
64016175:	cmp    DWORD PTR [edi],0x0
64016178:	jne    0x64016181
6401617a:	push   edi
6401617b:	call   0x64017d6f
64016180:	pop    ecx
64016181:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016188:	call   0x640161ab
6401618d:	push   esi
6401618e:	call   0x64014e06
64016193:	pop    ecx
64016194:	call   0x64015575
64016199:	ret    0x4
6401619c:	mov    esi,DWORD PTR [ebp+0x8]
6401619f:	push   0xd
640161a1:	call   0x6401b462
640161a6:	pop    ecx
640161a7:	ret    
640161a8:	mov    esi,DWORD PTR [ebp+0x8]
640161ab:	push   0xc
640161ad:	call   0x6401b462
640161b2:	pop    ecx
640161b3:	ret    
640161b4:	cmp    DWORD PTR ds:0x6402f230,0xffffffff
640161bb:	je     0x64016209
640161bd:	push   edi
640161be:	mov    edi,DWORD PTR [esp+0x8]
640161c2:	test   edi,edi
640161c4:	jne    0x640161ec
640161c6:	push   esi
640161c7:	push   DWORD PTR ds:0x6402f234
640161cd:	mov    esi,DWORD PTR ds:0x64026128
640161d3:	call   esi
640161d5:	test   eax,eax
640161d7:	je     0x640161eb
640161d9:	push   DWORD PTR ds:0x6402f230
640161df:	push   DWORD PTR ds:0x6402f234
640161e5:	call   esi
640161e7:	call   eax
640161e9:	mov    edi,eax
640161eb:	pop    esi
640161ec:	push   0x0
640161ee:	push   DWORD PTR ds:0x6402f230
640161f4:	push   DWORD PTR ds:0x64030594
640161fa:	call   0x64015e5f
640161ff:	pop    ecx
64016200:	call   eax
64016202:	push   edi
64016203:	call   0x64016093
64016208:	pop    edi
64016209:	mov    eax,ds:0x6402f234
6401620e:	cmp    eax,0xffffffff
64016211:	je     0x6401621c
64016213:	push   0x0
64016215:	push   eax
64016216:	call   DWORD PTR ds:0x64026130
6401621c:	ret    
6401621d:	push   edi
6401621e:	push   0x64026cd4
64016223:	call   DWORD PTR ds:0x64026124
64016229:	mov    edi,eax
6401622b:	test   edi,edi
6401622d:	jne    0x64016238
6401622f:	call   0x64015f08
64016234:	xor    eax,eax
64016236:	pop    edi
64016237:	ret    
64016238:	push   esi
64016239:	mov    esi,DWORD PTR ds:0x64026014
6401623f:	push   0x64026d14
64016244:	push   edi
64016245:	call   esi
64016247:	push   0x64026d08
6401624c:	push   edi
6401624d:	mov    ds:0x6403058c,eax
64016252:	call   esi
64016254:	push   0x64026cfc
64016259:	push   edi
6401625a:	mov    ds:0x64030590,eax
6401625f:	call   esi
64016261:	push   0x64026cf4
64016266:	push   edi
64016267:	mov    ds:0x64030594,eax
6401626c:	call   esi
6401626e:	cmp    DWORD PTR ds:0x6403058c,0x0
64016275:	mov    esi,DWORD PTR ds:0x64026130
6401627b:	mov    ds:0x64030598,eax
64016280:	je     0x64016298
64016282:	cmp    DWORD PTR ds:0x64030590,0x0
64016289:	je     0x64016298
6401628b:	cmp    DWORD PTR ds:0x64030594,0x0
64016292:	je     0x64016298
64016294:	test   eax,eax
64016296:	jne    0x640162bc
64016298:	mov    eax,ds:0x64026128
6401629d:	mov    ds:0x64030590,eax
640162a2:	mov    eax,ds:0x64026134
640162a7:	mov    DWORD PTR ds:0x6403058c,0x64015ecd
640162b1:	mov    DWORD PTR ds:0x64030594,esi
640162b7:	mov    ds:0x64030598,eax
640162bc:	call   DWORD PTR ds:0x6402612c
640162c2:	cmp    eax,0xffffffff
640162c5:	mov    ds:0x6402f234,eax
640162ca:	je     0x6401639c
640162d0:	push   DWORD PTR ds:0x64030590
640162d6:	push   eax
640162d7:	call   esi
640162d9:	test   eax,eax
640162db:	je     0x6401639c
640162e1:	call   0x64017666
640162e6:	push   DWORD PTR ds:0x6403058c
640162ec:	call   0x64015de8
640162f1:	push   DWORD PTR ds:0x64030590
640162f7:	mov    ds:0x6403058c,eax
640162fc:	call   0x64015de8
64016301:	push   DWORD PTR ds:0x64030594
64016307:	mov    ds:0x64030590,eax
6401630c:	call   0x64015de8
64016311:	push   DWORD PTR ds:0x64030598
64016317:	mov    ds:0x64030594,eax
6401631c:	call   0x64015de8
64016321:	add    esp,0x10
64016324:	mov    ds:0x64030598,eax
64016329:	call   0x6401b3c4
6401632e:	test   eax,eax
64016330:	je     0x64016397
64016332:	push   0x64016093
64016337:	push   DWORD PTR ds:0x6403058c
6401633d:	call   0x64015e5f
64016342:	pop    ecx
64016343:	call   eax
64016345:	cmp    eax,0xffffffff
64016348:	mov    ds:0x6402f230,eax
6401634d:	je     0x64016397
6401634f:	push   0x214
64016354:	push   0x1
64016356:	call   0x64017280
6401635b:	mov    esi,eax
6401635d:	test   esi,esi
6401635f:	pop    ecx
64016360:	pop    ecx
64016361:	je     0x64016397
64016363:	push   esi
64016364:	push   DWORD PTR ds:0x6402f230
6401636a:	push   DWORD PTR ds:0x64030594
64016370:	call   0x64015e5f
64016375:	pop    ecx
64016376:	call   eax
64016378:	test   eax,eax
6401637a:	je     0x64016397
6401637c:	push   0x0
6401637e:	push   esi
6401637f:	call   0x64015f45
64016384:	pop    ecx
64016385:	pop    ecx
64016386:	call   DWORD PTR ds:0x6402611c
6401638c:	or     DWORD PTR [esi+0x4],0xffffffff
64016390:	mov    DWORD PTR [esi],eax
64016392:	xor    eax,eax
64016394:	inc    eax
64016395:	jmp    0x6401639e
64016397:	call   0x64015f08
6401639c:	xor    eax,eax
6401639e:	pop    esi
6401639f:	pop    edi
640163a0:	ret    
640163a1:	mov    eax,DWORD PTR [esp+0x4]
640163a5:	mov    ds:0x6403059c,eax
640163aa:	ret    
640163ab:	push   DWORD PTR ds:0x6403059c
640163b1:	call   0x64015e5f
640163b6:	test   eax,eax
640163b8:	pop    ecx
640163b9:	je     0x640163ca
640163bb:	push   DWORD PTR [esp+0x4]
640163bf:	call   eax
640163c1:	test   eax,eax
640163c3:	pop    ecx
640163c4:	je     0x640163ca
640163c6:	xor    eax,eax
640163c8:	inc    eax
640163c9:	ret    
640163ca:	xor    eax,eax
640163cc:	ret    
640163cd:	mov    DWORD PTR [ecx],0x64026d28
640163d3:	jmp    0x6401382b
640163d8:	push   esi
640163d9:	mov    esi,ecx
640163db:	mov    DWORD PTR [esi],0x64026d28
640163e1:	call   0x6401382b
640163e6:	test   BYTE PTR [esp+0x8],0x1
640163eb:	je     0x640163f4
640163ed:	push   esi
640163ee:	call   0x64013712
640163f3:	pop    ecx
640163f4:	mov    eax,esi
640163f6:	pop    esi
640163f7:	ret    0x4
640163fa:	push   esi
640163fb:	push   edi
640163fc:	mov    edi,DWORD PTR [esp+0xc]
64016400:	mov    eax,DWORD PTR [edi+0x4]
64016403:	test   eax,eax
64016405:	je     0x64016450
64016407:	lea    edx,[eax+0x8]
6401640a:	cmp    BYTE PTR [edx],0x0
6401640d:	je     0x64016450
6401640f:	mov    esi,DWORD PTR [esp+0x10]
64016413:	mov    ecx,DWORD PTR [esi+0x4]
64016416:	cmp    eax,ecx
64016418:	je     0x6401642e
6401641a:	add    ecx,0x8
6401641d:	push   ecx
6401641e:	push   edx
6401641f:	call   0x640158a0
64016424:	test   eax,eax
64016426:	pop    ecx
64016427:	pop    ecx
64016428:	je     0x6401642e
6401642a:	xor    eax,eax
6401642c:	jmp    0x64016453
6401642e:	test   BYTE PTR [esi],0x2
64016431:	je     0x64016438
64016433:	test   BYTE PTR [edi],0x8
64016436:	je     0x6401642a
64016438:	mov    eax,DWORD PTR [esp+0x14]
6401643c:	mov    eax,DWORD PTR [eax]
6401643e:	test   al,0x1
64016440:	je     0x64016447
64016442:	test   BYTE PTR [edi],0x1
64016445:	je     0x6401642a
64016447:	test   al,0x2
64016449:	je     0x64016450
6401644b:	test   BYTE PTR [edi],0x2
6401644e:	je     0x6401642a
64016450:	xor    eax,eax
64016452:	inc    eax
64016453:	pop    edi
64016454:	pop    esi
64016455:	ret    
64016456:	mov    eax,DWORD PTR [esp+0x4]
6401645a:	mov    eax,DWORD PTR [eax]
6401645c:	mov    eax,DWORD PTR [eax]
6401645e:	cmp    eax,0xe0434f4d
64016463:	je     0x6401647d
64016465:	cmp    eax,0xe06d7363
6401646a:	jne    0x64016497
6401646c:	call   0x6401607b
64016471:	and    DWORD PTR [eax+0x90],0x0
64016478:	jmp    0x64017057
6401647d:	call   0x6401607b
64016482:	cmp    DWORD PTR [eax+0x90],0x0
64016489:	jle    0x64016497
6401648b:	call   0x6401607b
64016490:	add    eax,0x90
64016495:	dec    DWORD PTR [eax]
64016497:	xor    eax,eax
64016499:	ret    
6401649a:	push   0x10
6401649c:	push   0x6402c388
640164a1:	call   0x64015530
640164a6:	mov    edi,DWORD PTR [ebp+0x10]
640164a9:	mov    ebx,DWORD PTR [ebp+0x8]
640164ac:	cmp    DWORD PTR [edi+0x4],0x80
640164b3:	jg     0x640164bb
640164b5:	movsx  esi,BYTE PTR [ebx+0x8]
640164b9:	jmp    0x640164be
640164bb:	mov    esi,DWORD PTR [ebx+0x8]
640164be:	mov    DWORD PTR [ebp-0x1c],esi
640164c1:	call   0x6401607b
640164c6:	add    eax,0x90
640164cb:	inc    DWORD PTR [eax]
640164cd:	and    DWORD PTR [ebp-0x4],0x0
640164d1:	cmp    esi,DWORD PTR [ebp+0x14]
640164d4:	je     0x6401653b
640164d6:	cmp    esi,0xffffffff
640164d9:	jle    0x640164e0
640164db:	cmp    esi,DWORD PTR [edi+0x4]
640164de:	jl     0x640164e5
640164e0:	call   0x640170a3
640164e5:	mov    eax,esi
640164e7:	shl    eax,0x3
640164ea:	mov    ecx,DWORD PTR [edi+0x8]
640164ed:	add    ecx,eax
640164ef:	mov    esi,DWORD PTR [ecx]
640164f1:	mov    DWORD PTR [ebp-0x20],esi
640164f4:	mov    DWORD PTR [ebp-0x4],0x1
640164fb:	cmp    DWORD PTR [ecx+0x4],0x0
640164ff:	je     0x64016516
64016501:	mov    DWORD PTR [ebx+0x8],esi
64016504:	push   0x103
64016509:	push   ebx
6401650a:	mov    ecx,DWORD PTR [edi+0x8]
6401650d:	push   DWORD PTR [ecx+eax*1+0x4]
64016511:	call   0x640170f0
64016516:	and    DWORD PTR [ebp-0x4],0x0
6401651a:	jmp    0x64016536
6401651c:	push   DWORD PTR [ebp-0x14]
6401651f:	call   0x64016456
64016524:	pop    ecx
64016525:	ret    
64016526:	mov    esp,DWORD PTR [ebp-0x18]
64016529:	and    DWORD PTR [ebp-0x4],0x0
6401652d:	mov    edi,DWORD PTR [ebp+0x10]
64016530:	mov    ebx,DWORD PTR [ebp+0x8]
64016533:	mov    esi,DWORD PTR [ebp-0x20]
64016536:	mov    DWORD PTR [ebp-0x1c],esi
64016539:	jmp    0x640164d1
6401653b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016542:	call   0x64016560
64016547:	cmp    esi,DWORD PTR [ebp+0x14]
6401654a:	je     0x64016551
6401654c:	call   0x640170a3
64016551:	mov    DWORD PTR [ebx+0x8],esi
64016554:	call   0x64015575
64016559:	ret    
6401655a:	mov    ebx,DWORD PTR [ebp+0x8]
6401655d:	mov    esi,DWORD PTR [ebp-0x1c]
64016560:	call   0x6401607b
64016565:	cmp    DWORD PTR [eax+0x90],0x0
6401656c:	jle    0x6401657a
6401656e:	call   0x6401607b
64016573:	add    eax,0x90
64016578:	dec    DWORD PTR [eax]
6401657a:	ret    
6401657b:	mov    eax,DWORD PTR [eax]
6401657d:	cmp    DWORD PTR [eax],0xe06d7363
64016583:	jne    0x640165bd
64016585:	cmp    DWORD PTR [eax+0x10],0x3
64016589:	jne    0x640165bd
6401658b:	mov    ecx,DWORD PTR [eax+0x14]
6401658e:	cmp    ecx,0x19930520
64016594:	je     0x640165a6
64016596:	cmp    ecx,0x19930521
6401659c:	je     0x640165a6
6401659e:	cmp    ecx,0x19930522
640165a4:	jne    0x640165bd
640165a6:	cmp    DWORD PTR [eax+0x1c],0x0
640165aa:	jne    0x640165bd
640165ac:	call   0x6401607b
640165b1:	xor    ecx,ecx
640165b3:	inc    ecx
640165b4:	mov    DWORD PTR [eax+0x20c],ecx
640165ba:	mov    eax,ecx
640165bc:	ret    
640165bd:	xor    eax,eax
640165bf:	ret    
640165c0:	push   0x8
640165c2:	push   0x6402c3b0
640165c7:	call   0x64015530
640165cc:	mov    ecx,DWORD PTR [ebp+0x8]
640165cf:	test   ecx,ecx
640165d1:	je     0x640165fd
640165d3:	cmp    DWORD PTR [ecx],0xe06d7363
640165d9:	jne    0x640165fd
640165db:	mov    eax,DWORD PTR [ecx+0x1c]
640165de:	test   eax,eax
640165e0:	je     0x640165fd
640165e2:	mov    eax,DWORD PTR [eax+0x4]
640165e5:	test   eax,eax
640165e7:	je     0x640165fd
640165e9:	and    DWORD PTR [ebp-0x4],0x0
640165ed:	push   eax
640165ee:	push   DWORD PTR [ecx+0x18]
640165f1:	call   0x64013bd5
640165f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640165fd:	call   0x64015575
64016602:	ret    
64016603:	xor    eax,eax
64016605:	cmp    BYTE PTR [ebp+0xc],al
64016608:	setne  al
6401660b:	ret    
6401660c:	mov    esp,DWORD PTR [ebp-0x18]
6401660f:	jmp    0x64017057
64016614:	mov    ecx,DWORD PTR [esp+0x8]
64016618:	mov    eax,DWORD PTR [ecx]
6401661a:	push   esi
6401661b:	mov    esi,DWORD PTR [esp+0x8]
6401661f:	add    eax,esi
64016621:	cmp    DWORD PTR [ecx+0x4],0x0
64016625:	jl     0x64016637
64016627:	mov    edx,DWORD PTR [ecx+0x4]
6401662a:	mov    ecx,DWORD PTR [ecx+0x8]
6401662d:	mov    esi,DWORD PTR [edx+esi*1]
64016630:	mov    ecx,DWORD PTR [esi+ecx*1]
64016633:	add    ecx,edx
64016635:	add    eax,ecx
64016637:	pop    esi
64016638:	ret    
64016639:	push   ebp
6401663a:	mov    ebp,esp
6401663c:	sub    esp,0xc
6401663f:	test   edi,edi
64016641:	jne    0x6401664d
64016643:	call   0x640170a3
64016648:	jmp    0x64017057
6401664d:	and    DWORD PTR [ebp-0x8],0x0
64016651:	cmp    DWORD PTR [edi],0x0
64016654:	mov    BYTE PTR [ebp-0x1],0x0
64016658:	jle    0x640166ad
6401665a:	push   ebx
6401665b:	push   esi
6401665c:	mov    eax,DWORD PTR [ebp+0x8]
6401665f:	mov    eax,DWORD PTR [eax+0x1c]
64016662:	mov    eax,DWORD PTR [eax+0xc]
64016665:	mov    ebx,DWORD PTR [eax]
64016667:	test   ebx,ebx
64016669:	lea    esi,[eax+0x4]
6401666c:	jle    0x640166a1
6401666e:	mov    eax,DWORD PTR [ebp-0x8]
64016671:	shl    eax,0x4
64016674:	mov    DWORD PTR [ebp-0xc],eax
64016677:	mov    ecx,DWORD PTR [ebp+0x8]
6401667a:	push   DWORD PTR [ecx+0x1c]
6401667d:	mov    eax,DWORD PTR [esi]
6401667f:	push   eax
64016680:	mov    eax,DWORD PTR [edi+0x4]
64016683:	add    eax,DWORD PTR [ebp-0xc]
64016686:	push   eax
64016687:	call   0x640163fa
6401668c:	add    esp,0xc
6401668f:	test   eax,eax
64016691:	jne    0x6401669d
64016693:	dec    ebx
64016694:	add    esi,0x4
64016697:	test   ebx,ebx
64016699:	jg     0x64016677
6401669b:	jmp    0x640166a1
6401669d:	mov    BYTE PTR [ebp-0x1],0x1
640166a1:	inc    DWORD PTR [ebp-0x8]
640166a4:	mov    eax,DWORD PTR [ebp-0x8]
640166a7:	cmp    eax,DWORD PTR [edi]
640166a9:	jl     0x6401665c
640166ab:	pop    esi
640166ac:	pop    ebx
640166ad:	mov    al,BYTE PTR [ebp-0x1]
640166b0:	leave  
640166b1:	ret    
640166b2:	push   0x4
640166b4:	mov    eax,0x64023903
640166b9:	call   0x640157ee
640166be:	call   0x6401607b
640166c3:	cmp    DWORD PTR [eax+0x94],0x0
640166ca:	je     0x640166d1
640166cc:	call   0x640170a3
640166d1:	and    DWORD PTR [ebp-0x4],0x0
640166d5:	call   0x64017090
640166da:	or     DWORD PTR [ebp-0x4],0xffffffff
640166de:	jmp    0x64017057
640166e3:	call   0x6401607b
640166e8:	mov    ecx,DWORD PTR [ebp+0x8]
640166eb:	push   0x0
640166ed:	push   0x0
640166ef:	mov    DWORD PTR [eax+0x94],ecx
640166f5:	call   0x64013b5b
640166fa:	int3   
640166fb:	push   0x2c
640166fd:	push   0x6402c428
64016702:	call   0x64015530
64016707:	mov    ebx,ecx
64016709:	mov    edi,DWORD PTR [ebp+0xc]
6401670c:	mov    esi,DWORD PTR [ebp+0x8]
6401670f:	mov    DWORD PTR [ebp-0x1c],ebx
64016712:	and    DWORD PTR [ebp-0x34],0x0
64016716:	mov    eax,DWORD PTR [edi-0x4]
64016719:	mov    DWORD PTR [ebp-0x24],eax
6401671c:	push   DWORD PTR [esi+0x18]
6401671f:	lea    eax,[ebp-0x3c]
64016722:	push   eax
64016723:	call   0x64013e79
64016728:	pop    ecx
64016729:	pop    ecx
6401672a:	mov    DWORD PTR [ebp-0x28],eax
6401672d:	call   0x6401607b
64016732:	mov    eax,DWORD PTR [eax+0x88]
64016738:	mov    DWORD PTR [ebp-0x2c],eax
6401673b:	call   0x6401607b
64016740:	mov    eax,DWORD PTR [eax+0x8c]
64016746:	mov    DWORD PTR [ebp-0x30],eax
64016749:	call   0x6401607b
6401674e:	mov    DWORD PTR [eax+0x88],esi
64016754:	call   0x6401607b
64016759:	mov    ecx,DWORD PTR [ebp+0x10]
6401675c:	mov    DWORD PTR [eax+0x8c],ecx
64016762:	and    DWORD PTR [ebp-0x4],0x0
64016766:	xor    eax,eax
64016768:	inc    eax
64016769:	mov    DWORD PTR [ebp+0x10],eax
6401676c:	mov    DWORD PTR [ebp-0x4],eax
6401676f:	push   DWORD PTR [ebp+0x1c]
64016772:	push   DWORD PTR [ebp+0x18]
64016775:	push   ebx
64016776:	push   DWORD PTR [ebp+0x14]
64016779:	push   edi
6401677a:	call   0x64013f0e
6401677f:	add    esp,0x14
64016782:	mov    DWORD PTR [ebp-0x1c],eax
64016785:	and    DWORD PTR [ebp-0x4],0x0
64016789:	jmp    0x640167fa
6401678b:	mov    eax,DWORD PTR [ebp-0x14]
6401678e:	call   0x6401657b
64016793:	ret    
64016794:	mov    esp,DWORD PTR [ebp-0x18]
64016797:	call   0x6401607b
6401679c:	and    DWORD PTR [eax+0x20c],0x0
640167a3:	mov    esi,DWORD PTR [ebp+0x14]
640167a6:	mov    edi,DWORD PTR [ebp+0xc]
640167a9:	cmp    DWORD PTR [esi+0x4],0x80
640167b0:	jg     0x640167b8
640167b2:	movsx  ecx,BYTE PTR [edi+0x8]
640167b6:	jmp    0x640167bb
640167b8:	mov    ecx,DWORD PTR [edi+0x8]
640167bb:	mov    ebx,DWORD PTR [esi+0x10]
640167be:	and    DWORD PTR [ebp-0x20],0x0
640167c2:	mov    eax,DWORD PTR [ebp-0x20]
640167c5:	cmp    eax,DWORD PTR [esi+0xc]
640167c8:	jae    0x640167e2
640167ca:	imul   eax,eax,0x14
640167cd:	add    eax,ebx
640167cf:	mov    edx,DWORD PTR [eax+0x4]
640167d2:	cmp    ecx,edx
640167d4:	jle    0x64016816
640167d6:	cmp    ecx,DWORD PTR [eax+0x8]
640167d9:	jg     0x64016816
640167db:	mov    eax,DWORD PTR [esi+0x8]
640167de:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
640167e2:	push   ecx
640167e3:	push   esi
640167e4:	push   0x0
640167e6:	push   edi
640167e7:	call   0x6401649a
640167ec:	add    esp,0x10
640167ef:	and    DWORD PTR [ebp-0x1c],0x0
640167f3:	and    DWORD PTR [ebp-0x4],0x0
640167f7:	mov    esi,DWORD PTR [ebp+0x8]
640167fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016801:	mov    DWORD PTR [ebp+0x10],0x0
64016808:	call   0x64016821
6401680d:	mov    eax,DWORD PTR [ebp-0x1c]
64016810:	call   0x64015575
64016815:	ret    
64016816:	inc    DWORD PTR [ebp-0x20]
64016819:	jmp    0x640167c2
6401681b:	mov    edi,DWORD PTR [ebp+0xc]
6401681e:	mov    esi,DWORD PTR [ebp+0x8]
64016821:	mov    eax,DWORD PTR [ebp-0x24]
64016824:	mov    DWORD PTR [edi-0x4],eax
64016827:	push   DWORD PTR [ebp-0x28]
6401682a:	call   0x64013ec2
6401682f:	pop    ecx
64016830:	call   0x6401607b
64016835:	mov    ecx,DWORD PTR [ebp-0x2c]
64016838:	mov    DWORD PTR [eax+0x88],ecx
6401683e:	call   0x6401607b
64016843:	mov    ecx,DWORD PTR [ebp-0x30]
64016846:	mov    DWORD PTR [eax+0x8c],ecx
6401684c:	cmp    DWORD PTR [esi],0xe06d7363
64016852:	jne    0x64016896
64016854:	cmp    DWORD PTR [esi+0x10],0x3
64016858:	jne    0x64016896
6401685a:	mov    eax,DWORD PTR [esi+0x14]
6401685d:	cmp    eax,0x19930520
64016862:	je     0x64016872
64016864:	cmp    eax,0x19930521
64016869:	je     0x64016872
6401686b:	cmp    eax,0x19930522
64016870:	jne    0x64016896
64016872:	cmp    DWORD PTR [ebp-0x34],0x0
64016876:	jne    0x64016896
64016878:	cmp    DWORD PTR [ebp-0x1c],0x0
6401687c:	je     0x64016896
6401687e:	push   DWORD PTR [esi+0x18]
64016881:	call   0x64013ea1
64016886:	pop    ecx
64016887:	test   eax,eax
64016889:	je     0x64016896
6401688b:	push   DWORD PTR [ebp+0x10]
6401688e:	push   esi
6401688f:	call   0x640165c0
64016894:	pop    ecx
64016895:	pop    ecx
64016896:	ret    
64016897:	push   0xc
64016899:	push   0x6402c450
6401689e:	call   0x64015530
640168a3:	xor    edx,edx
640168a5:	mov    DWORD PTR [ebp-0x1c],edx
640168a8:	mov    eax,DWORD PTR [ebp+0x10]
640168ab:	mov    ecx,DWORD PTR [eax+0x4]
640168ae:	cmp    ecx,edx
640168b0:	je     0x64016a0e
640168b6:	cmp    BYTE PTR [ecx+0x8],dl
640168b9:	je     0x64016a0e
640168bf:	mov    ecx,DWORD PTR [eax+0x8]
640168c2:	cmp    ecx,edx
640168c4:	jne    0x640168d2
640168c6:	test   DWORD PTR [eax],0x80000000
640168cc:	je     0x64016a0e
640168d2:	mov    eax,DWORD PTR [eax]
640168d4:	mov    esi,DWORD PTR [ebp+0xc]
640168d7:	test   eax,eax
640168d9:	js     0x640168df
640168db:	lea    esi,[ecx+esi*1+0xc]
640168df:	mov    DWORD PTR [ebp-0x4],edx
640168e2:	xor    ebx,ebx
640168e4:	inc    ebx
640168e5:	push   ebx
640168e6:	test   al,0x8
640168e8:	je     0x6401692b
640168ea:	mov    edi,DWORD PTR [ebp+0x8]
640168ed:	push   DWORD PTR [edi+0x18]
640168f0:	call   0x6401c64b
640168f5:	pop    ecx
640168f6:	pop    ecx
640168f7:	test   eax,eax
640168f9:	je     0x640169f1
640168ff:	push   ebx
64016900:	push   esi
64016901:	call   0x6401c64b
64016906:	pop    ecx
64016907:	pop    ecx
64016908:	test   eax,eax
6401690a:	je     0x640169f1
64016910:	mov    eax,DWORD PTR [edi+0x18]
64016913:	mov    DWORD PTR [esi],eax
64016915:	mov    ecx,DWORD PTR [ebp+0x14]
64016918:	add    ecx,0x8
6401691b:	push   ecx
6401691c:	push   eax
6401691d:	call   0x64016614
64016922:	pop    ecx
64016923:	pop    ecx
64016924:	mov    DWORD PTR [esi],eax
64016926:	jmp    0x640169f6
6401692b:	mov    edi,DWORD PTR [ebp+0x14]
6401692e:	mov    eax,DWORD PTR [ebp+0x8]
64016931:	push   DWORD PTR [eax+0x18]
64016934:	test   BYTE PTR [edi],bl
64016936:	je     0x64016980
64016938:	call   0x6401c64b
6401693d:	pop    ecx
6401693e:	pop    ecx
6401693f:	test   eax,eax
64016941:	je     0x640169f1
64016947:	push   ebx
64016948:	push   esi
64016949:	call   0x6401c64b
6401694e:	pop    ecx
6401694f:	pop    ecx
64016950:	test   eax,eax
64016952:	je     0x640169f1
64016958:	push   DWORD PTR [edi+0x14]
6401695b:	mov    eax,DWORD PTR [ebp+0x8]
6401695e:	push   DWORD PTR [eax+0x18]
64016961:	push   esi
64016962:	call   0x64014fb0
64016967:	add    esp,0xc
6401696a:	cmp    DWORD PTR [edi+0x14],0x4
6401696e:	jne    0x640169f6
64016974:	mov    eax,DWORD PTR [esi]
64016976:	test   eax,eax
64016978:	je     0x640169f6
6401697a:	add    edi,0x8
6401697d:	push   edi
6401697e:	jmp    0x6401691c
64016980:	cmp    DWORD PTR [edi+0x18],edx
64016983:	jne    0x640169bd
64016985:	call   0x6401c64b
6401698a:	pop    ecx
6401698b:	pop    ecx
6401698c:	test   eax,eax
6401698e:	je     0x640169f1
64016990:	push   ebx
64016991:	push   esi
64016992:	call   0x6401c64b
64016997:	pop    ecx
64016998:	pop    ecx
64016999:	test   eax,eax
6401699b:	je     0x640169f1
6401699d:	push   DWORD PTR [edi+0x14]
640169a0:	add    edi,0x8
640169a3:	push   edi
640169a4:	mov    eax,DWORD PTR [ebp+0x8]
640169a7:	push   DWORD PTR [eax+0x18]
640169aa:	call   0x64016614
640169af:	pop    ecx
640169b0:	pop    ecx
640169b1:	push   eax
640169b2:	push   esi
640169b3:	call   0x64014fb0
640169b8:	add    esp,0xc
640169bb:	jmp    0x640169f6
640169bd:	call   0x6401c64b
640169c2:	pop    ecx
640169c3:	pop    ecx
640169c4:	test   eax,eax
640169c6:	je     0x640169f1
640169c8:	push   ebx
640169c9:	push   esi
640169ca:	call   0x6401c64b
640169cf:	pop    ecx
640169d0:	pop    ecx
640169d1:	test   eax,eax
640169d3:	je     0x640169f1
640169d5:	push   DWORD PTR [edi+0x18]
640169d8:	call   0x6401c64b
640169dd:	pop    ecx
640169de:	test   eax,eax
640169e0:	je     0x640169f1
640169e2:	test   BYTE PTR [edi],0x4
640169e5:	push   0x0
640169e7:	pop    eax
640169e8:	setne  al
640169eb:	inc    eax
640169ec:	mov    DWORD PTR [ebp-0x1c],eax
640169ef:	jmp    0x640169f6
640169f1:	call   0x640170a3
640169f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640169fd:	mov    eax,DWORD PTR [ebp-0x1c]
64016a00:	jmp    0x64016a10
64016a02:	xor    eax,eax
64016a04:	inc    eax
64016a05:	ret    
64016a06:	mov    esp,DWORD PTR [ebp-0x18]
64016a09:	jmp    0x64017057
64016a0e:	xor    eax,eax
64016a10:	call   0x64015575
64016a15:	ret    
64016a16:	push   0x8
64016a18:	push   0x6402c470
64016a1d:	call   0x64015530
64016a22:	mov    eax,DWORD PTR [ebp+0x10]
64016a25:	test   DWORD PTR [eax],0x80000000
64016a2b:	je     0x64016a32
64016a2d:	mov    ebx,DWORD PTR [ebp+0xc]
64016a30:	jmp    0x64016a3c
64016a32:	mov    ecx,DWORD PTR [eax+0x8]
64016a35:	mov    edx,DWORD PTR [ebp+0xc]
64016a38:	lea    ebx,[ecx+edx*1+0xc]
64016a3c:	and    DWORD PTR [ebp-0x4],0x0
64016a40:	mov    esi,DWORD PTR [ebp+0x14]
64016a43:	push   esi
64016a44:	push   eax
64016a45:	push   DWORD PTR [ebp+0xc]
64016a48:	mov    edi,DWORD PTR [ebp+0x8]
64016a4b:	push   edi
64016a4c:	call   0x64016897
64016a51:	add    esp,0x10
64016a54:	dec    eax
64016a55:	je     0x64016a76
64016a57:	dec    eax
64016a58:	jne    0x64016a8e
64016a5a:	push   0x1
64016a5c:	lea    eax,[esi+0x8]
64016a5f:	push   eax
64016a60:	push   DWORD PTR [edi+0x18]
64016a63:	call   0x64016614
64016a68:	pop    ecx
64016a69:	pop    ecx
64016a6a:	push   eax
64016a6b:	push   DWORD PTR [esi+0x18]
64016a6e:	push   ebx
64016a6f:	call   0x64013bd5
64016a74:	jmp    0x64016a8e
64016a76:	lea    eax,[esi+0x8]
64016a79:	push   eax
64016a7a:	push   DWORD PTR [edi+0x18]
64016a7d:	call   0x64016614
64016a82:	pop    ecx
64016a83:	pop    ecx
64016a84:	push   eax
64016a85:	push   DWORD PTR [esi+0x18]
64016a88:	push   ebx
64016a89:	call   0x64013bd5
64016a8e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016a95:	call   0x64015575
64016a9a:	ret    
64016a9b:	xor    eax,eax
64016a9d:	inc    eax
64016a9e:	ret    
64016a9f:	mov    esp,DWORD PTR [ebp-0x18]
64016aa2:	jmp    0x64017057
64016aa7:	push   ebp
64016aa8:	mov    ebp,esp
64016aaa:	cmp    DWORD PTR [ebp+0x18],0x0
64016aae:	je     0x64016ac0
64016ab0:	push   DWORD PTR [ebp+0x18]
64016ab3:	push   ebx
64016ab4:	push   esi
64016ab5:	push   DWORD PTR [ebp+0x8]
64016ab8:	call   0x64016a16
64016abd:	add    esp,0x10
64016ac0:	cmp    DWORD PTR [ebp+0x20],0x0
64016ac4:	push   DWORD PTR [ebp+0x8]
64016ac7:	jne    0x64016acc
64016ac9:	push   esi
64016aca:	jmp    0x64016acf
64016acc:	push   DWORD PTR [ebp+0x20]
64016acf:	call   0x64013bdc
64016ad4:	push   DWORD PTR [edi]
64016ad6:	push   DWORD PTR [ebp+0x14]
64016ad9:	push   DWORD PTR [ebp+0x10]
64016adc:	push   esi
64016add:	call   0x6401649a
64016ae2:	mov    eax,DWORD PTR [edi+0x4]
64016ae5:	push   0x100
64016aea:	push   DWORD PTR [ebp+0x1c]
64016aed:	inc    eax
64016aee:	push   DWORD PTR [ebp+0x14]
64016af1:	mov    DWORD PTR [esi+0x8],eax
64016af4:	push   DWORD PTR [ebp+0xc]
64016af7:	mov    ecx,DWORD PTR [ebx+0xc]
64016afa:	push   esi
64016afb:	push   DWORD PTR [ebp+0x8]
64016afe:	call   0x640166fb
64016b03:	add    esp,0x28
64016b06:	test   eax,eax
64016b08:	je     0x64016b11
64016b0a:	push   esi
64016b0b:	push   eax
64016b0c:	call   0x64013ba5
64016b11:	pop    ebp
64016b12:	ret    
64016b13:	push   ebp
64016b14:	mov    ebp,esp
64016b16:	push   ecx
64016b17:	push   ecx
64016b18:	push   esi
64016b19:	mov    esi,DWORD PTR [ebp+0x8]
64016b1c:	cmp    DWORD PTR [esi],0x80000003
64016b22:	je     0x64016c02
64016b28:	push   edi
64016b29:	call   0x6401607b
64016b2e:	cmp    DWORD PTR [eax+0x80],0x0
64016b35:	je     0x64016b76
64016b37:	call   0x6401607b
64016b3c:	lea    edi,[eax+0x80]
64016b42:	call   0x64015e56
64016b47:	cmp    DWORD PTR [edi],eax
64016b49:	je     0x64016b76
64016b4b:	cmp    DWORD PTR [esi],0xe0434f4d
64016b51:	je     0x64016b76
64016b53:	push   DWORD PTR [ebp+0x24]
64016b56:	push   DWORD PTR [ebp+0x20]
64016b59:	push   DWORD PTR [ebp+0x18]
64016b5c:	push   DWORD PTR [ebp+0x14]
64016b5f:	push   DWORD PTR [ebp+0x10]
64016b62:	push   DWORD PTR [ebp+0xc]
64016b65:	push   esi
64016b66:	call   0x64013c94
64016b6b:	add    esp,0x1c
64016b6e:	test   eax,eax
64016b70:	jne    0x64016c01
64016b76:	mov    edi,DWORD PTR [ebp+0x18]
64016b79:	cmp    DWORD PTR [edi+0xc],0x0
64016b7d:	jne    0x64016b84
64016b7f:	call   0x640170a3
64016b84:	mov    esi,DWORD PTR [ebp+0x1c]
64016b87:	lea    eax,[ebp-0x8]
64016b8a:	push   eax
64016b8b:	lea    eax,[ebp-0x4]
64016b8e:	push   eax
64016b8f:	push   esi
64016b90:	push   DWORD PTR [ebp+0x20]
64016b93:	push   edi
64016b94:	call   0x64013e06
64016b99:	mov    edi,eax
64016b9b:	mov    eax,DWORD PTR [ebp-0x4]
64016b9e:	add    esp,0x14
64016ba1:	cmp    eax,DWORD PTR [ebp-0x8]
64016ba4:	jae    0x64016c01
64016ba6:	push   ebx
64016ba7:	cmp    esi,DWORD PTR [edi]
64016ba9:	jl     0x64016bf2
64016bab:	cmp    esi,DWORD PTR [edi+0x4]
64016bae:	jg     0x64016bf2
64016bb0:	mov    eax,DWORD PTR [edi+0xc]
64016bb3:	mov    ecx,DWORD PTR [edi+0x10]
64016bb6:	shl    eax,0x4
64016bb9:	add    eax,ecx
64016bbb:	mov    ecx,DWORD PTR [eax-0xc]
64016bbe:	test   ecx,ecx
64016bc0:	je     0x64016bc8
64016bc2:	cmp    BYTE PTR [ecx+0x8],0x0
64016bc6:	jne    0x64016bf2
64016bc8:	lea    ebx,[eax-0x10]
64016bcb:	test   BYTE PTR [ebx],0x40
64016bce:	jne    0x64016bf2
64016bd0:	push   DWORD PTR [ebp+0x24]
64016bd3:	mov    esi,DWORD PTR [ebp+0xc]
64016bd6:	push   DWORD PTR [ebp+0x20]
64016bd9:	push   0x0
64016bdb:	push   DWORD PTR [ebp+0x18]
64016bde:	push   DWORD PTR [ebp+0x14]
64016be1:	push   DWORD PTR [ebp+0x10]
64016be4:	push   DWORD PTR [ebp+0x8]
64016be7:	call   0x64016aa7
64016bec:	mov    esi,DWORD PTR [ebp+0x1c]
64016bef:	add    esp,0x1c
64016bf2:	inc    DWORD PTR [ebp-0x4]
64016bf5:	mov    eax,DWORD PTR [ebp-0x4]
64016bf8:	add    edi,0x14
64016bfb:	cmp    eax,DWORD PTR [ebp-0x8]
64016bfe:	jb     0x64016ba7
64016c00:	pop    ebx
64016c01:	pop    edi
64016c02:	pop    esi
64016c03:	leave  
64016c04:	ret    
64016c05:	push   ebp
64016c06:	mov    ebp,esp
64016c08:	sub    esp,0x2c
64016c0b:	mov    ecx,DWORD PTR [ebp+0xc]
64016c0e:	push   ebx
64016c0f:	mov    ebx,DWORD PTR [ebp+0x18]
64016c12:	mov    eax,DWORD PTR [ebx+0x4]
64016c15:	cmp    eax,0x80
64016c1a:	push   esi
64016c1b:	push   edi
64016c1c:	mov    BYTE PTR [ebp-0x1],0x0
64016c20:	jg     0x64016c28
64016c22:	movsx  ecx,BYTE PTR [ecx+0x8]
64016c26:	jmp    0x64016c2b
64016c28:	mov    ecx,DWORD PTR [ecx+0x8]
64016c2b:	cmp    ecx,0xffffffff
64016c2e:	mov    DWORD PTR [ebp-0x8],ecx
64016c31:	jl     0x64016c37
64016c33:	cmp    ecx,eax
64016c35:	jl     0x64016c3c
64016c37:	call   0x640170a3
64016c3c:	mov    esi,DWORD PTR [ebp+0x8]
64016c3f:	mov    edi,0xe06d7363
64016c44:	cmp    DWORD PTR [esi],edi
64016c46:	jne    0x64016f17
64016c4c:	cmp    DWORD PTR [esi+0x10],0x3
64016c50:	mov    ebx,0x19930520
64016c55:	jne    0x64016d84
64016c5b:	mov    eax,DWORD PTR [esi+0x14]
64016c5e:	cmp    eax,ebx
64016c60:	je     0x64016c74
64016c62:	cmp    eax,0x19930521
64016c67:	je     0x64016c74
64016c69:	cmp    eax,0x19930522
64016c6e:	jne    0x64016d84
64016c74:	cmp    DWORD PTR [esi+0x1c],0x0
64016c78:	jne    0x64016d84
64016c7e:	call   0x6401607b
64016c83:	cmp    DWORD PTR [eax+0x88],0x0
64016c8a:	je     0x64016f56
64016c90:	call   0x6401607b
64016c95:	mov    esi,DWORD PTR [eax+0x88]
64016c9b:	mov    DWORD PTR [ebp+0x8],esi
64016c9e:	call   0x6401607b
64016ca3:	mov    eax,DWORD PTR [eax+0x8c]
64016ca9:	push   0x1
64016cab:	push   esi
64016cac:	mov    DWORD PTR [ebp+0x10],eax
64016caf:	call   0x6401c64b
64016cb4:	test   eax,eax
64016cb6:	pop    ecx
64016cb7:	pop    ecx
64016cb8:	jne    0x64016cbf
64016cba:	call   0x640170a3
64016cbf:	cmp    DWORD PTR [esi],edi
64016cc1:	jne    0x64016ce9
64016cc3:	cmp    DWORD PTR [esi+0x10],0x3
64016cc7:	jne    0x64016ce9
64016cc9:	mov    eax,DWORD PTR [esi+0x14]
64016ccc:	cmp    eax,ebx
64016cce:	je     0x64016cde
64016cd0:	cmp    eax,0x19930521
64016cd5:	je     0x64016cde
64016cd7:	cmp    eax,0x19930522
64016cdc:	jne    0x64016ce9
64016cde:	cmp    DWORD PTR [esi+0x1c],0x0
64016ce2:	jne    0x64016ce9
64016ce4:	call   0x640170a3
64016ce9:	call   0x6401607b
64016cee:	cmp    DWORD PTR [eax+0x94],0x0
64016cf5:	je     0x64016d84
64016cfb:	call   0x6401607b
64016d00:	mov    edi,DWORD PTR [eax+0x94]
64016d06:	call   0x6401607b
64016d0b:	push   DWORD PTR [ebp+0x8]
64016d0e:	xor    esi,esi
64016d10:	mov    DWORD PTR [eax+0x94],esi
64016d16:	call   0x64016639
64016d1b:	test   al,al
64016d1d:	pop    ecx
64016d1e:	jne    0x64016d7c
64016d20:	xor    ebx,ebx
64016d22:	cmp    DWORD PTR [edi],ebx
64016d24:	jle    0x64016d43
64016d26:	mov    eax,DWORD PTR [edi+0x4]
64016d29:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64016d2d:	push   0x6402f23c
64016d32:	call   0x64013741
64016d37:	test   al,al
64016d39:	jne    0x64016d48
64016d3b:	inc    esi
64016d3c:	add    ebx,0x10
64016d3f:	cmp    esi,DWORD PTR [edi]
64016d41:	jl     0x64016d26
64016d43:	jmp    0x64017057
64016d48:	push   0x1
64016d4a:	push   DWORD PTR [ebp+0x8]
64016d4d:	call   0x640165c0
64016d52:	pop    ecx
64016d53:	pop    ecx
64016d54:	lea    eax,[ebp+0x8]
64016d57:	push   eax
64016d58:	lea    ecx,[ebp-0x2c]
64016d5b:	mov    DWORD PTR [ebp+0x8],0x64026d30
64016d62:	call   0x6401376d
64016d67:	push   0x6402c48c
64016d6c:	lea    eax,[ebp-0x2c]
64016d6f:	push   eax
64016d70:	mov    DWORD PTR [ebp-0x2c],0x64026d28
64016d77:	call   0x64013b5b
64016d7c:	mov    esi,DWORD PTR [ebp+0x8]
64016d7f:	mov    edi,0xe06d7363
64016d84:	cmp    DWORD PTR [esi],edi
64016d86:	jne    0x64016f14
64016d8c:	cmp    DWORD PTR [esi+0x10],0x3
64016d90:	jne    0x64016f14
64016d96:	mov    eax,DWORD PTR [esi+0x14]
64016d99:	cmp    eax,ebx
64016d9b:	je     0x64016daf
64016d9d:	cmp    eax,0x19930521
64016da2:	je     0x64016daf
64016da4:	cmp    eax,0x19930522
64016da9:	jne    0x64016f14
64016daf:	mov    edi,DWORD PTR [ebp+0x18]
64016db2:	cmp    DWORD PTR [edi+0xc],0x0
64016db6:	jbe    0x64016e7b
64016dbc:	lea    eax,[ebp-0x1c]
64016dbf:	push   eax
64016dc0:	lea    eax,[ebp-0x10]
64016dc3:	push   eax
64016dc4:	push   DWORD PTR [ebp-0x8]
64016dc7:	push   DWORD PTR [ebp+0x20]
64016dca:	push   edi
64016dcb:	call   0x64013e06
64016dd0:	add    esp,0x14
64016dd3:	mov    edi,eax
64016dd5:	mov    eax,DWORD PTR [ebp-0x10]
64016dd8:	cmp    eax,DWORD PTR [ebp-0x1c]
64016ddb:	jae    0x64016e78
64016de1:	mov    eax,DWORD PTR [ebp-0x8]
64016de4:	cmp    DWORD PTR [edi],eax
64016de6:	jg     0x64016e6d
64016dec:	cmp    eax,DWORD PTR [edi+0x4]
64016def:	jg     0x64016e6d
64016df1:	mov    eax,DWORD PTR [edi+0x10]
64016df4:	mov    DWORD PTR [ebp-0xc],eax
64016df7:	mov    eax,DWORD PTR [edi+0xc]
64016dfa:	test   eax,eax
64016dfc:	mov    DWORD PTR [ebp-0x18],eax
64016dff:	jle    0x64016e6d
64016e01:	mov    eax,DWORD PTR [esi+0x1c]
64016e04:	mov    eax,DWORD PTR [eax+0xc]
64016e07:	lea    ebx,[eax+0x4]
64016e0a:	mov    eax,DWORD PTR [eax]
64016e0c:	test   eax,eax
64016e0e:	mov    DWORD PTR [ebp-0x14],eax
64016e11:	jle    0x64016e36
64016e13:	push   DWORD PTR [esi+0x1c]
64016e16:	mov    eax,DWORD PTR [ebx]
64016e18:	push   eax
64016e19:	push   DWORD PTR [ebp-0xc]
64016e1c:	mov    DWORD PTR [ebp-0x20],eax
64016e1f:	call   0x640163fa
64016e24:	add    esp,0xc
64016e27:	test   eax,eax
64016e29:	jne    0x64016e45
64016e2b:	dec    DWORD PTR [ebp-0x14]
64016e2e:	add    ebx,0x4
64016e31:	cmp    DWORD PTR [ebp-0x14],eax
64016e34:	jg     0x64016e13
64016e36:	dec    DWORD PTR [ebp-0x18]
64016e39:	add    DWORD PTR [ebp-0xc],0x10
64016e3d:	cmp    DWORD PTR [ebp-0x18],0x0
64016e41:	jg     0x64016e01
64016e43:	jmp    0x64016e6d
64016e45:	push   DWORD PTR [ebp+0x24]
64016e48:	mov    ebx,DWORD PTR [ebp-0xc]
64016e4b:	push   DWORD PTR [ebp+0x20]
64016e4e:	mov    BYTE PTR [ebp-0x1],0x1
64016e52:	push   DWORD PTR [ebp-0x20]
64016e55:	push   DWORD PTR [ebp+0x18]
64016e58:	push   DWORD PTR [ebp+0x14]
64016e5b:	push   DWORD PTR [ebp+0x10]
64016e5e:	push   esi
64016e5f:	mov    esi,DWORD PTR [ebp+0xc]
64016e62:	call   0x64016aa7
64016e67:	mov    esi,DWORD PTR [ebp+0x8]
64016e6a:	add    esp,0x1c
64016e6d:	inc    DWORD PTR [ebp-0x10]
64016e70:	add    edi,0x14
64016e73:	jmp    0x64016dd5
64016e78:	mov    edi,DWORD PTR [ebp+0x18]
64016e7b:	cmp    BYTE PTR [ebp+0x1c],0x0
64016e7f:	je     0x64016e8b
64016e81:	push   0x1
64016e83:	push   esi
64016e84:	call   0x640165c0
64016e89:	pop    ecx
64016e8a:	pop    ecx
64016e8b:	cmp    BYTE PTR [ebp-0x1],0x0
64016e8f:	jne    0x64016f43
64016e95:	mov    eax,DWORD PTR [edi]
64016e97:	and    eax,0x1fffffff
64016e9c:	cmp    eax,0x19930521
64016ea1:	jb     0x64016f43
64016ea7:	mov    edi,DWORD PTR [edi+0x1c]
64016eaa:	test   edi,edi
64016eac:	je     0x64016f43
64016eb2:	push   esi
64016eb3:	call   0x64016639
64016eb8:	test   al,al
64016eba:	pop    ecx
64016ebb:	jne    0x64016f43
64016ec1:	call   0x6401607b
64016ec6:	call   0x6401607b
64016ecb:	call   0x6401607b
64016ed0:	mov    DWORD PTR [eax+0x88],esi
64016ed6:	call   0x6401607b
64016edb:	cmp    DWORD PTR [ebp+0x24],0x0
64016edf:	mov    ecx,DWORD PTR [ebp+0x10]
64016ee2:	mov    DWORD PTR [eax+0x8c],ecx
64016ee8:	push   esi
64016ee9:	jne    0x64016ef0
64016eeb:	push   DWORD PTR [ebp+0xc]
64016eee:	jmp    0x64016ef3
64016ef0:	push   DWORD PTR [ebp+0x24]
64016ef3:	call   0x64013bdc
64016ef8:	mov    esi,DWORD PTR [ebp+0x18]
64016efb:	push   0xffffffff
64016efd:	push   esi
64016efe:	push   DWORD PTR [ebp+0x14]
64016f01:	push   DWORD PTR [ebp+0xc]
64016f04:	call   0x6401649a
64016f09:	add    esp,0x10
64016f0c:	push   DWORD PTR [esi+0x1c]
64016f0f:	call   0x640166b2
64016f14:	mov    ebx,DWORD PTR [ebp+0x18]
64016f17:	cmp    DWORD PTR [ebx+0xc],0x0
64016f1b:	jbe    0x64016f43
64016f1d:	cmp    BYTE PTR [ebp+0x1c],0x0
64016f21:	jne    0x64016d43
64016f27:	push   DWORD PTR [ebp+0x24]
64016f2a:	push   DWORD PTR [ebp+0x20]
64016f2d:	push   DWORD PTR [ebp-0x8]
64016f30:	push   ebx
64016f31:	push   DWORD PTR [ebp+0x14]
64016f34:	push   DWORD PTR [ebp+0x10]
64016f37:	push   DWORD PTR [ebp+0xc]
64016f3a:	push   esi
64016f3b:	call   0x64016b13
64016f40:	add    esp,0x20
64016f43:	call   0x6401607b
64016f48:	cmp    DWORD PTR [eax+0x94],0x0
64016f4f:	je     0x64016f56
64016f51:	call   0x640170a3
64016f56:	pop    edi
64016f57:	pop    esi
64016f58:	pop    ebx
64016f59:	leave  
64016f5a:	ret    
64016f5b:	push   esi
64016f5c:	push   DWORD PTR [esp+0x8]
64016f60:	mov    esi,ecx
64016f62:	call   0x640137d3
64016f67:	mov    DWORD PTR [esi],0x64026d28
64016f6d:	mov    eax,esi
64016f6f:	pop    esi
64016f70:	ret    0x4
64016f73:	push   ebp
64016f74:	mov    ebp,esp
64016f76:	push   ebx
64016f77:	push   esi
64016f78:	push   edi
64016f79:	call   0x6401607b
64016f7e:	cmp    DWORD PTR [eax+0x20c],0x0
64016f85:	mov    eax,DWORD PTR [ebp+0x18]
64016f88:	mov    ecx,DWORD PTR [ebp+0x8]
64016f8b:	mov    edi,0xe06d7363
64016f90:	mov    esi,0x1fffffff
64016f95:	mov    ebx,0x19930522
64016f9a:	jne    0x64016fbc
64016f9c:	mov    edx,DWORD PTR [ecx]
64016f9e:	cmp    edx,edi
64016fa0:	je     0x64016fbc
64016fa2:	cmp    edx,0x80000026
64016fa8:	je     0x64016fbc
64016faa:	mov    edx,DWORD PTR [eax]
64016fac:	and    edx,esi
64016fae:	cmp    edx,ebx
64016fb0:	jb     0x64016fbc
64016fb2:	test   BYTE PTR [eax+0x20],0x1
64016fb6:	jne    0x6401704f
64016fbc:	test   BYTE PTR [ecx+0x4],0x66
64016fc0:	je     0x64016fe5
64016fc2:	cmp    DWORD PTR [eax+0x4],0x0
64016fc6:	je     0x6401704f
64016fcc:	cmp    DWORD PTR [ebp+0x1c],0x0
64016fd0:	jne    0x6401704f
64016fd2:	push   0xffffffff
64016fd4:	push   eax
64016fd5:	push   DWORD PTR [ebp+0x14]
64016fd8:	push   DWORD PTR [ebp+0xc]
64016fdb:	call   0x6401649a
64016fe0:	add    esp,0x10
64016fe3:	jmp    0x6401704f
64016fe5:	cmp    DWORD PTR [eax+0xc],0x0
64016fe9:	jne    0x64016ffd
64016feb:	mov    edx,DWORD PTR [eax]
64016fed:	and    edx,esi
64016fef:	cmp    edx,0x19930521
64016ff5:	jb     0x6401704f
64016ff7:	cmp    DWORD PTR [eax+0x1c],0x0
64016ffb:	je     0x6401704f
64016ffd:	cmp    DWORD PTR [ecx],edi
64016fff:	jne    0x64017033
64017001:	cmp    DWORD PTR [ecx+0x10],0x3
64017005:	jb     0x64017033
64017007:	cmp    DWORD PTR [ecx+0x14],ebx
6401700a:	jbe    0x64017033
6401700c:	mov    edx,DWORD PTR [ecx+0x1c]
6401700f:	mov    edx,DWORD PTR [edx+0x8]
64017012:	test   edx,edx
64017014:	je     0x64017033
64017016:	movzx  esi,BYTE PTR [ebp+0x24]
6401701a:	push   esi
6401701b:	push   DWORD PTR [ebp+0x20]
6401701e:	push   DWORD PTR [ebp+0x1c]
64017021:	push   eax
64017022:	push   DWORD PTR [ebp+0x14]
64017025:	push   DWORD PTR [ebp+0x10]
64017028:	push   DWORD PTR [ebp+0xc]
6401702b:	push   ecx
6401702c:	call   edx
6401702e:	add    esp,0x20
64017031:	jmp    0x64017052
64017033:	push   DWORD PTR [ebp+0x20]
64017036:	push   DWORD PTR [ebp+0x1c]
64017039:	push   DWORD PTR [ebp+0x24]
6401703c:	push   eax
6401703d:	push   DWORD PTR [ebp+0x14]
64017040:	push   DWORD PTR [ebp+0x10]
64017043:	push   DWORD PTR [ebp+0xc]
64017046:	push   ecx
64017047:	call   0x64016c05
6401704c:	add    esp,0x20
6401704f:	xor    eax,eax
64017051:	inc    eax
64017052:	pop    edi
64017053:	pop    esi
64017054:	pop    ebx
64017055:	pop    ebp
64017056:	ret    
64017057:	push   0x8
64017059:	push   0x6402c4c8
6401705e:	call   0x64015530
64017063:	call   0x6401607b
64017068:	mov    eax,DWORD PTR [eax+0x78]
6401706b:	test   eax,eax
6401706d:	je     0x64017085
6401706f:	and    DWORD PTR [ebp-0x4],0x0
64017073:	call   eax
64017075:	jmp    0x6401707e
64017077:	xor    eax,eax
64017079:	inc    eax
6401707a:	ret    
6401707b:	mov    esp,DWORD PTR [ebp-0x18]
6401707e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017085:	call   0x6401c658
6401708a:	call   0x64015575
6401708f:	ret    
64017090:	call   0x6401607b
64017095:	mov    eax,DWORD PTR [eax+0x7c]
64017098:	test   eax,eax
6401709a:	je     0x6401709e
6401709c:	call   eax
6401709e:	jmp    0x64017057
640170a3:	push   0x8
640170a5:	push   0x6402c4e8
640170aa:	call   0x64015530
640170af:	push   DWORD PTR ds:0x640305a0
640170b5:	call   0x64015e5f
640170ba:	pop    ecx
640170bb:	test   eax,eax
640170bd:	je     0x640170d5
640170bf:	and    DWORD PTR [ebp-0x4],0x0
640170c3:	call   eax
640170c5:	jmp    0x640170ce
640170c7:	xor    eax,eax
640170c9:	inc    eax
640170ca:	ret    
640170cb:	mov    esp,DWORD PTR [ebp-0x18]
640170ce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640170d5:	jmp    0x64017057
640170da:	push   0x64017057
640170df:	call   0x64015de8
640170e4:	pop    ecx
640170e5:	mov    ds:0x640305a0,eax
640170ea:	ret    
640170eb:	int3   
640170ec:	int3   
640170ed:	int3   
640170ee:	int3   
640170ef:	int3   
640170f0:	push   ebp
640170f1:	mov    ebp,esp
640170f3:	sub    esp,0x4
640170f6:	push   ebx
640170f7:	push   ecx
640170f8:	mov    eax,DWORD PTR [ebp+0xc]
640170fb:	add    eax,0xc
640170fe:	mov    DWORD PTR [ebp-0x4],eax
64017101:	mov    eax,DWORD PTR [ebp+0x8]
64017104:	push   ebp
64017105:	push   DWORD PTR [ebp+0x10]
64017108:	mov    ecx,DWORD PTR [ebp+0x10]
6401710b:	mov    ebp,DWORD PTR [ebp-0x4]
6401710e:	call   0x6401c858
64017113:	push   esi
64017114:	push   edi
64017115:	call   eax
64017117:	pop    edi
64017118:	pop    esi
64017119:	mov    ebx,ebp
6401711b:	pop    ebp
6401711c:	mov    ecx,DWORD PTR [ebp+0x10]
6401711f:	push   ebp
64017120:	mov    ebp,ebx
64017122:	cmp    ecx,0x100
64017128:	jne    0x6401712f
6401712a:	mov    ecx,0x2
6401712f:	push   ecx
64017130:	call   0x6401c858
64017135:	pop    ebp
64017136:	pop    ecx
64017137:	pop    ebx
64017138:	leave  
64017139:	ret    0xc
6401713c:	push   ebp
6401713d:	mov    ebp,esp
6401713f:	sub    esp,0x328
64017145:	mov    ds:0x640306b0,eax
6401714a:	mov    DWORD PTR ds:0x640306ac,ecx
64017150:	mov    DWORD PTR ds:0x640306a8,edx
64017156:	mov    DWORD PTR ds:0x640306a4,ebx
6401715c:	mov    DWORD PTR ds:0x640306a0,esi
64017162:	mov    DWORD PTR ds:0x6403069c,edi
64017168:	data16 mov WORD PTR ds:0x640306c8,ss
6401716f:	data16 mov WORD PTR ds:0x640306bc,cs
64017176:	data16 mov WORD PTR ds:0x64030698,ds
6401717d:	data16 mov WORD PTR ds:0x64030694,es
64017184:	data16 mov WORD PTR ds:0x64030690,fs
6401718b:	data16 mov WORD PTR ds:0x6403068c,gs
64017192:	pushf  
64017193:	pop    DWORD PTR ds:0x640306c0
64017199:	mov    eax,DWORD PTR [ebp+0x0]
6401719c:	mov    ds:0x640306b4,eax
640171a1:	mov    eax,DWORD PTR [ebp+0x4]
640171a4:	mov    ds:0x640306b8,eax
640171a9:	lea    eax,[ebp+0x8]
640171ac:	mov    ds:0x640306c4,eax
640171b1:	mov    eax,DWORD PTR [ebp-0x320]
640171b7:	mov    DWORD PTR ds:0x64030600,0x10001
640171c1:	mov    eax,ds:0x640306b8
640171c6:	mov    ds:0x640305b4,eax
640171cb:	mov    DWORD PTR ds:0x640305a8,0xc0000409
640171d5:	mov    DWORD PTR ds:0x640305ac,0x1
640171df:	mov    eax,ds:0x6402f09c
640171e4:	mov    DWORD PTR [ebp-0x328],eax
640171ea:	mov    eax,ds:0x6402f0a0
640171ef:	mov    DWORD PTR [ebp-0x324],eax
640171f5:	call   DWORD PTR ds:0x64026114
640171fb:	mov    ds:0x640305f8,eax
64017200:	push   0x1
64017202:	call   0x64015d74
64017207:	pop    ecx
64017208:	push   0x0
6401720a:	call   DWORD PTR ds:0x64026110
64017210:	push   0x64026d40
64017215:	call   DWORD PTR ds:0x6402610c
6401721b:	cmp    DWORD PTR ds:0x640305f8,0x0
64017222:	jne    0x6401722c
64017224:	push   0x1
64017226:	call   0x64015d74
6401722b:	pop    ecx
6401722c:	push   0xc0000409
64017231:	call   DWORD PTR ds:0x64026048
64017237:	push   eax
64017238:	call   DWORD PTR ds:0x64026108
6401723e:	leave  
6401723f:	ret    
64017240:	push   esi
64017241:	push   edi
64017242:	xor    esi,esi
64017244:	push   DWORD PTR [esp+0xc]
64017248:	call   0x64014ee3
6401724d:	mov    edi,eax
6401724f:	test   edi,edi
64017251:	pop    ecx
64017252:	jne    0x6401727b
64017254:	cmp    DWORD PTR ds:0x640308cc,eax
6401725a:	jbe    0x6401727b
6401725c:	push   esi
6401725d:	call   DWORD PTR ds:0x64026050
64017263:	lea    eax,[esi+0x3e8]
64017269:	cmp    eax,DWORD PTR ds:0x640308cc
6401726f:	jbe    0x64017274
64017271:	or     eax,0xffffffff
64017274:	cmp    eax,0xffffffff
64017277:	mov    esi,eax
64017279:	jne    0x64017244
6401727b:	mov    eax,edi
6401727d:	pop    edi
6401727e:	pop    esi
6401727f:	ret    
64017280:	push   esi
64017281:	push   edi
64017282:	xor    esi,esi
64017284:	push   0x0
64017286:	push   DWORD PTR [esp+0x14]
6401728a:	push   DWORD PTR [esp+0x14]
6401728e:	call   0x6401c883
64017293:	mov    edi,eax
64017295:	add    esp,0xc
64017298:	test   edi,edi
6401729a:	jne    0x640172c3
6401729c:	cmp    DWORD PTR ds:0x640308cc,eax
640172a2:	jbe    0x640172c3
640172a4:	push   esi
640172a5:	call   DWORD PTR ds:0x64026050
640172ab:	lea    eax,[esi+0x3e8]
640172b1:	cmp    eax,DWORD PTR ds:0x640308cc
640172b7:	jbe    0x640172bc
640172b9:	or     eax,0xffffffff
640172bc:	cmp    eax,0xffffffff
640172bf:	mov    esi,eax
640172c1:	jne    0x64017284
640172c3:	mov    eax,edi
640172c5:	pop    edi
640172c6:	pop    esi
640172c7:	ret    
640172c8:	push   esi
640172c9:	push   edi
640172ca:	xor    esi,esi
640172cc:	push   DWORD PTR [esp+0x10]
640172d0:	push   DWORD PTR [esp+0x10]
640172d4:	call   0x64015315
640172d9:	mov    edi,eax
640172db:	test   edi,edi
640172dd:	pop    ecx
640172de:	pop    ecx
640172df:	jne    0x6401730e
640172e1:	cmp    DWORD PTR [esp+0x10],eax
640172e5:	je     0x6401730e
640172e7:	cmp    DWORD PTR ds:0x640308cc,eax
640172ed:	jbe    0x6401730e
640172ef:	push   esi
640172f0:	call   DWORD PTR ds:0x64026050
640172f6:	lea    eax,[esi+0x3e8]
640172fc:	cmp    eax,DWORD PTR ds:0x640308cc
64017302:	jbe    0x64017307
64017304:	or     eax,0xffffffff
64017307:	cmp    eax,0xffffffff
6401730a:	mov    esi,eax
6401730c:	jne    0x640172cc
6401730e:	mov    eax,edi
64017310:	pop    edi
64017311:	pop    esi
64017312:	ret    
64017313:	push   0x10
64017315:	push   0x6402c508
6401731a:	call   0x64015530
6401731f:	xor    eax,eax
64017321:	mov    ebx,DWORD PTR [ebp+0x8]
64017324:	xor    edi,edi
64017326:	cmp    ebx,edi
64017328:	setne  al
6401732b:	cmp    eax,edi
6401732d:	jne    0x6401734c
6401732f:	call   0x64015d30
64017334:	mov    DWORD PTR [eax],0x16
6401733a:	push   edi
6401733b:	push   edi
6401733c:	push   edi
6401733d:	push   edi
6401733e:	push   edi
6401733f:	call   0x64013aa4
64017344:	add    esp,0x14
64017347:	or     eax,0xffffffff
6401734a:	jmp    0x6401739f
6401734c:	cmp    DWORD PTR ds:0x6403451c,0x3
64017353:	jne    0x6401738d
64017355:	push   0x4
64017357:	call   0x6401b53a
6401735c:	pop    ecx
6401735d:	mov    DWORD PTR [ebp-0x4],edi
64017360:	push   ebx
64017361:	call   0x6401b5b3
64017366:	pop    ecx
64017367:	mov    DWORD PTR [ebp-0x20],eax
6401736a:	cmp    eax,edi
6401736c:	je     0x64017379
6401736e:	mov    esi,DWORD PTR [ebx-0x4]
64017371:	sub    esi,0x9
64017374:	mov    DWORD PTR [ebp-0x1c],esi
64017377:	jmp    0x6401737c
64017379:	mov    esi,DWORD PTR [ebp-0x1c]
6401737c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017383:	call   0x640173ad
64017388:	cmp    DWORD PTR [ebp-0x20],edi
6401738b:	jne    0x6401739d
6401738d:	push   ebx
6401738e:	push   edi
6401738f:	push   DWORD PTR ds:0x64030a6c
64017395:	call   DWORD PTR ds:0x64026100
6401739b:	mov    esi,eax
6401739d:	mov    eax,esi
6401739f:	call   0x64015575
640173a4:	ret    
640173a5:	xor    edi,edi
640173a7:	mov    ebx,DWORD PTR [ebp+0x8]
640173aa:	mov    esi,DWORD PTR [ebp-0x1c]
640173ad:	push   0x4
640173af:	call   0x6401b462
640173b4:	pop    ecx
640173b5:	ret    
640173b6:	call   0x6401c20a
640173bb:	push   DWORD PTR [esp+0x4]
640173bf:	call   0x6401c06a
640173c4:	push   DWORD PTR ds:0x6402f260
640173ca:	call   0x64015e5f
640173cf:	push   0xff
640173d4:	call   eax
640173d6:	add    esp,0xc
640173d9:	ret    
640173da:	push   0x64026d58
640173df:	call   DWORD PTR ds:0x64026124
640173e5:	test   eax,eax
640173e7:	je     0x640173ff
640173e9:	push   0x64026d48
640173ee:	push   eax
640173ef:	call   DWORD PTR ds:0x64026014
640173f5:	test   eax,eax
640173f7:	je     0x640173ff
640173f9:	push   DWORD PTR [esp+0x4]
640173fd:	call   eax
640173ff:	ret    
64017400:	push   DWORD PTR [esp+0x4]
64017404:	call   0x640173da
64017409:	pop    ecx
6401740a:	push   DWORD PTR [esp+0x4]
6401740e:	call   DWORD PTR ds:0x64026138
64017414:	int3   
64017415:	push   0x8
64017417:	call   0x6401b53a
6401741c:	pop    ecx
6401741d:	ret    
6401741e:	push   0x8
64017420:	call   0x6401b462
64017425:	pop    ecx
64017426:	ret    
64017427:	push   esi
64017428:	mov    esi,eax
6401742a:	jmp    0x64017437
6401742c:	mov    eax,DWORD PTR [esi]
6401742e:	test   eax,eax
64017430:	je     0x64017434
64017432:	call   eax
64017434:	add    esi,0x4
64017437:	cmp    esi,DWORD PTR [esp+0x8]
6401743b:	jb     0x6401742c
6401743d:	pop    esi
6401743e:	ret    
6401743f:	push   esi
64017440:	mov    esi,DWORD PTR [esp+0x8]
64017444:	xor    eax,eax
64017446:	jmp    0x64017457
64017448:	test   eax,eax
6401744a:	jne    0x6401745d
6401744c:	mov    ecx,DWORD PTR [esi]
6401744e:	test   ecx,ecx
64017450:	je     0x64017454
64017452:	call   ecx
64017454:	add    esi,0x4
64017457:	cmp    esi,DWORD PTR [esp+0xc]
6401745b:	jb     0x64017448
6401745d:	pop    esi
6401745e:	ret    
6401745f:	mov    ecx,DWORD PTR [esp+0x4]
64017463:	push   esi
64017464:	xor    esi,esi
64017466:	cmp    ecx,esi
64017468:	jne    0x64017487
6401746a:	call   0x64015d30
6401746f:	push   esi
64017470:	push   esi
64017471:	push   esi
64017472:	push   esi
64017473:	push   esi
64017474:	mov    DWORD PTR [eax],0x16
6401747a:	call   0x64013aa4
6401747f:	add    esp,0x14
64017482:	push   0x16
64017484:	pop    eax
64017485:	pop    esi
64017486:	ret    
64017487:	mov    eax,ds:0x640308d4
6401748c:	cmp    eax,esi
6401748e:	je     0x6401746a
64017490:	mov    DWORD PTR [ecx],eax
64017492:	xor    eax,eax
64017494:	pop    esi
64017495:	ret    
64017496:	mov    eax,DWORD PTR [esp+0x4]
6401749a:	push   esi
6401749b:	xor    esi,esi
6401749d:	cmp    eax,esi
6401749f:	jne    0x640174be
640174a1:	call   0x64015d30
640174a6:	push   esi
640174a7:	push   esi
640174a8:	push   esi
640174a9:	push   esi
640174aa:	push   esi
640174ab:	mov    DWORD PTR [eax],0x16
640174b1:	call   0x64013aa4
640174b6:	add    esp,0x14
640174b9:	push   0x16
640174bb:	pop    eax
640174bc:	pop    esi
640174bd:	ret    
640174be:	cmp    DWORD PTR ds:0x640308d4,esi
640174c4:	je     0x640174a1
640174c6:	mov    ecx,DWORD PTR ds:0x640308e0
640174cc:	mov    DWORD PTR [eax],ecx
640174ce:	xor    eax,eax
640174d0:	pop    esi
640174d1:	ret    
640174d2:	cmp    DWORD PTR ds:0x640285cc,0x0
640174d9:	je     0x640174f5
640174db:	push   0x640285cc
640174e0:	call   0x6401c590
640174e5:	test   eax,eax
640174e7:	pop    ecx
640174e8:	je     0x640174f5
640174ea:	push   DWORD PTR [esp+0x4]
640174ee:	call   DWORD PTR ds:0x640285cc
640174f4:	pop    ecx
640174f5:	call   0x6401c9a1
640174fa:	push   0x640262c4
640174ff:	push   0x640262ac
64017504:	call   0x6401743f
64017509:	test   eax,eax
6401750b:	pop    ecx
6401750c:	pop    ecx
6401750d:	jne    0x64017563
6401750f:	push   esi
64017510:	push   edi
64017511:	push   0x64019fb0
64017516:	call   0x6401409f
6401751b:	mov    esi,0x640261e4
64017520:	mov    eax,esi
64017522:	mov    edi,0x640262a8
64017527:	cmp    eax,edi
64017529:	pop    ecx
6401752a:	jae    0x6401753b
6401752c:	mov    eax,DWORD PTR [esi]
6401752e:	test   eax,eax
64017530:	je     0x64017534
64017532:	call   eax
64017534:	add    esi,0x4
64017537:	cmp    esi,edi
64017539:	jb     0x6401752c
6401753b:	cmp    DWORD PTR ds:0x64034658,0x0
64017542:	pop    edi
64017543:	pop    esi
64017544:	je     0x64017561
64017546:	push   0x64034658
6401754b:	call   0x6401c590
64017550:	test   eax,eax
64017552:	pop    ecx
64017553:	je     0x64017561
64017555:	push   0x0
64017557:	push   0x2
64017559:	push   0x0
6401755b:	call   DWORD PTR ds:0x64034658
64017561:	xor    eax,eax
64017563:	ret    
64017564:	push   0x10
64017566:	push   0x6402c528
6401756b:	call   0x64015530
64017570:	push   0x8
64017572:	call   0x6401b53a
64017577:	pop    ecx
64017578:	xor    edi,edi
6401757a:	mov    DWORD PTR [ebp-0x4],edi
6401757d:	xor    ebx,ebx
6401757f:	inc    ebx
64017580:	cmp    DWORD PTR ds:0x64030914,ebx
64017586:	je     0x64017606
64017588:	mov    DWORD PTR ds:0x64030910,ebx
6401758e:	mov    al,BYTE PTR [ebp+0x10]
64017591:	mov    ds:0x6403090c,al
64017596:	cmp    DWORD PTR [ebp+0xc],edi
64017599:	jne    0x640175f6
6401759b:	push   DWORD PTR ds:0x64034650
640175a1:	call   0x64015e5f
640175a6:	mov    DWORD PTR [ebp-0x1c],eax
640175a9:	push   DWORD PTR ds:0x6403464c
640175af:	call   0x64015e5f
640175b4:	pop    ecx
640175b5:	pop    ecx
640175b6:	mov    esi,eax
640175b8:	mov    DWORD PTR [ebp-0x20],esi
640175bb:	cmp    DWORD PTR [ebp-0x1c],edi
640175be:	je     0x640175e6
640175c0:	sub    esi,0x4
640175c3:	mov    DWORD PTR [ebp-0x20],esi
640175c6:	cmp    esi,DWORD PTR [ebp-0x1c]
640175c9:	jb     0x640175e6
640175cb:	cmp    DWORD PTR [esi],0x0
640175ce:	je     0x640175c0
640175d0:	mov    edi,DWORD PTR [esi]
640175d2:	call   0x64015e56
640175d7:	cmp    edi,eax
640175d9:	je     0x640175c0
640175db:	push   edi
640175dc:	call   0x64015e5f
640175e1:	pop    ecx
640175e2:	call   eax
640175e4:	jmp    0x640175c0
640175e6:	push   0x640262d4
640175eb:	mov    eax,0x640262c8
640175f0:	call   0x64017427
640175f5:	pop    ecx
640175f6:	push   0x640262dc
640175fb:	mov    eax,0x640262d8
64017600:	call   0x64017427
64017605:	pop    ecx
64017606:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401760d:	call   0x64017631
64017612:	cmp    DWORD PTR [ebp+0x10],0x0
64017616:	jne    0x64017640
64017618:	mov    DWORD PTR ds:0x64030914,ebx
6401761e:	push   0x8
64017620:	call   0x6401b462
64017625:	pop    ecx
64017626:	push   DWORD PTR [ebp+0x8]
64017629:	call   0x64017400
6401762e:	xor    ebx,ebx
64017630:	inc    ebx
64017631:	cmp    DWORD PTR [ebp+0x10],0x0
64017635:	je     0x6401763f
64017637:	push   0x8
64017639:	call   0x6401b462
6401763e:	pop    ecx
6401763f:	ret    
64017640:	call   0x64015575
64017645:	ret    
64017646:	push   0x0
64017648:	push   0x1
6401764a:	push   DWORD PTR [esp+0xc]
6401764e:	call   0x64017564
64017653:	add    esp,0xc
64017656:	ret    
64017657:	push   0x1
64017659:	push   0x0
6401765b:	push   0x0
6401765d:	call   0x64017564
64017662:	add    esp,0xc
64017665:	ret    
64017666:	push   esi
64017667:	call   0x64015e56
6401766c:	mov    esi,eax
6401766e:	push   esi
6401766f:	call   0x640163a1
64017674:	push   esi
64017675:	call   0x6401cbde
6401767a:	push   esi
6401767b:	call   0x6401399e
64017680:	push   esi
64017681:	call   0x6401cbd4
64017686:	push   esi
64017687:	call   0x6401cbca
6401768c:	push   esi
6401768d:	call   0x6401c9c0
64017692:	push   esi
64017693:	call   0x640203f7
64017698:	push   esi
64017699:	call   0x640170da
6401769e:	push   0x64017646
640176a3:	call   0x64015de8
640176a8:	add    esp,0x24
640176ab:	mov    ds:0x6402f260,eax
640176b0:	pop    esi
640176b1:	ret    
640176b2:	sub    eax,0x3a4
640176b7:	je     0x640176db
640176b9:	sub    eax,0x4
640176bc:	je     0x640176d5
640176be:	sub    eax,0xd
640176c1:	je     0x640176cf
640176c3:	dec    eax
640176c4:	je     0x640176c9
640176c6:	xor    eax,eax
640176c8:	ret    
640176c9:	mov    eax,0x404
640176ce:	ret    
640176cf:	mov    eax,0x412
640176d4:	ret    
640176d5:	mov    eax,0x804
640176da:	ret    
640176db:	mov    eax,0x411
640176e0:	ret    
640176e1:	push   ebx
640176e2:	push   ebp
640176e3:	push   esi
640176e4:	push   edi
640176e5:	mov    ebp,0x101
640176ea:	mov    esi,eax
640176ec:	push   ebp
640176ed:	xor    edi,edi
640176ef:	lea    ebx,[esi+0x1c]
640176f2:	push   edi
640176f3:	push   ebx
640176f4:	call   0x64014670
640176f9:	mov    DWORD PTR [esi+0x4],edi
640176fc:	mov    DWORD PTR [esi+0x8],edi
640176ff:	mov    DWORD PTR [esi+0xc],edi
64017702:	xor    eax,eax
64017704:	lea    edi,[esi+0x10]
64017707:	stos   DWORD PTR es:[edi],eax
64017708:	stos   DWORD PTR es:[edi],eax
64017709:	stos   DWORD PTR es:[edi],eax
6401770a:	mov    eax,0x6402f268
6401770f:	add    esp,0xc
64017712:	sub    eax,esi
64017714:	mov    cl,BYTE PTR [eax+ebx*1]
64017717:	mov    BYTE PTR [ebx],cl
64017719:	inc    ebx
6401771a:	dec    ebp
6401771b:	jne    0x64017714
6401771d:	lea    ecx,[esi+0x11d]
64017723:	mov    esi,0x100
64017728:	mov    dl,BYTE PTR [ecx+eax*1]
6401772b:	mov    BYTE PTR [ecx],dl
6401772d:	inc    ecx
6401772e:	dec    esi
6401772f:	jne    0x64017728
64017731:	pop    edi
64017732:	pop    esi
64017733:	pop    ebp
64017734:	pop    ebx
64017735:	ret    
64017736:	push   ebp
64017737:	lea    ebp,[esp-0x49c]
6401773e:	sub    esp,0x51c
64017744:	mov    eax,ds:0x6402f09c
64017749:	xor    eax,ebp
6401774b:	mov    DWORD PTR [ebp+0x498],eax
64017751:	push   ebx
64017752:	push   edi
64017753:	lea    eax,[ebp-0x7c]
64017756:	push   eax
64017757:	push   DWORD PTR [esi+0x4]
6401775a:	call   DWORD PTR ds:0x6402613c
64017760:	test   eax,eax
64017762:	mov    edi,0x100
64017767:	je     0x6401785c
6401776d:	xor    eax,eax
6401776f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64017776:	inc    eax
64017777:	cmp    eax,edi
64017779:	jb     0x6401776f
6401777b:	mov    al,BYTE PTR [ebp-0x76]
6401777e:	test   al,al
64017780:	mov    BYTE PTR [ebp+0x398],0x20
64017787:	je     0x640177b4
64017789:	lea    ebx,[ebp-0x75]
6401778c:	movzx  ecx,al
6401778f:	movzx  eax,BYTE PTR [ebx]
64017792:	cmp    ecx,eax
64017794:	ja     0x640177ac
64017796:	sub    eax,ecx
64017798:	inc    eax
64017799:	push   eax
6401779a:	lea    edx,[ebp+ecx*1+0x398]
640177a1:	push   0x20
640177a3:	push   edx
640177a4:	call   0x64014670
640177a9:	add    esp,0xc
640177ac:	inc    ebx
640177ad:	mov    al,BYTE PTR [ebx]
640177af:	inc    ebx
640177b0:	test   al,al
640177b2:	jne    0x6401778c
640177b4:	push   0x0
640177b6:	push   DWORD PTR [esi+0xc]
640177b9:	lea    eax,[ebp-0x68]
640177bc:	push   DWORD PTR [esi+0x4]
640177bf:	push   eax
640177c0:	push   edi
640177c1:	lea    eax,[ebp+0x398]
640177c7:	push   eax
640177c8:	push   0x1
640177ca:	push   0x0
640177cc:	call   0x6401ce75
640177d1:	xor    ebx,ebx
640177d3:	push   ebx
640177d4:	push   DWORD PTR [esi+0x4]
640177d7:	lea    eax,[ebp+0x298]
640177dd:	push   edi
640177de:	push   eax
640177df:	push   edi
640177e0:	lea    eax,[ebp+0x398]
640177e6:	push   eax
640177e7:	push   edi
640177e8:	push   DWORD PTR [esi+0xc]
640177eb:	push   ebx
640177ec:	call   0x6401b33d
640177f1:	add    esp,0x44
640177f4:	push   ebx
640177f5:	push   DWORD PTR [esi+0x4]
640177f8:	lea    eax,[ebp+0x198]
640177fe:	push   edi
640177ff:	push   eax
64017800:	push   edi
64017801:	lea    eax,[ebp+0x398]
64017807:	push   eax
64017808:	push   0x200
6401780d:	push   DWORD PTR [esi+0xc]
64017810:	push   ebx
64017811:	call   0x6401b33d
64017816:	add    esp,0x24
64017819:	xor    eax,eax
6401781b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64017820:	test   cl,0x1
64017823:	je     0x64017833
64017825:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6401782a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64017831:	jmp    0x64017844
64017833:	test   cl,0x2
64017836:	je     0x6401784d
64017838:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6401783d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64017844:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401784b:	jmp    0x64017855
6401784d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64017855:	inc    eax
64017856:	cmp    eax,edi
64017858:	jb     0x6401781b
6401785a:	jmp    0x640178a9
6401785c:	lea    eax,[esi+0x11d]
64017862:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64017869:	xor    ecx,ecx
6401786b:	sub    DWORD PTR [ebp-0x80],eax
6401786e:	mov    edx,DWORD PTR [ebp-0x80]
64017871:	lea    eax,[esi+ecx*1+0x11d]
64017878:	add    edx,eax
6401787a:	lea    ebx,[edx+0x20]
6401787d:	cmp    ebx,0x19
64017880:	ja     0x6401788e
64017882:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64017887:	mov    dl,cl
64017889:	add    dl,0x20
6401788c:	jmp    0x6401789d
6401788e:	cmp    edx,0x19
64017891:	ja     0x640178a1
64017893:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64017898:	mov    dl,cl
6401789a:	sub    dl,0x20
6401789d:	mov    BYTE PTR [eax],dl
6401789f:	jmp    0x640178a4
640178a1:	mov    BYTE PTR [eax],0x0
640178a4:	inc    ecx
640178a5:	cmp    ecx,edi
640178a7:	jb     0x6401786e
640178a9:	mov    ecx,DWORD PTR [ebp+0x498]
640178af:	pop    edi
640178b0:	xor    ecx,ebp
640178b2:	pop    ebx
640178b3:	call   0x64013f6c
640178b8:	add    ebp,0x49c
640178be:	leave  
640178bf:	ret    
640178c0:	push   0xc
640178c2:	push   0x6402c548
640178c7:	call   0x64015530
640178cc:	call   0x6401607b
640178d1:	mov    edi,eax
640178d3:	mov    eax,ds:0x6402f78c
640178d8:	test   DWORD PTR [edi+0x70],eax
640178db:	je     0x640178fa
640178dd:	cmp    DWORD PTR [edi+0x6c],0x0
640178e1:	je     0x640178fa
640178e3:	mov    esi,DWORD PTR [edi+0x68]
640178e6:	test   esi,esi
640178e8:	jne    0x640178f2
640178ea:	push   0x20
640178ec:	call   0x640173b6
640178f1:	pop    ecx
640178f2:	mov    eax,esi
640178f4:	call   0x64015575
640178f9:	ret    
640178fa:	push   0xd
640178fc:	call   0x6401b53a
64017901:	pop    ecx
64017902:	and    DWORD PTR [ebp-0x4],0x0
64017906:	mov    esi,DWORD PTR [edi+0x68]
64017909:	mov    DWORD PTR [ebp-0x1c],esi
6401790c:	cmp    esi,DWORD PTR ds:0x6402f690
64017912:	je     0x6401794a
64017914:	test   esi,esi
64017916:	je     0x64017932
64017918:	push   esi
64017919:	call   DWORD PTR ds:0x64026098
6401791f:	test   eax,eax
64017921:	jne    0x64017932
64017923:	cmp    esi,0x6402f268
64017929:	je     0x64017932
6401792b:	push   esi
6401792c:	call   0x64014e06
64017931:	pop    ecx
64017932:	mov    eax,ds:0x6402f690
64017937:	mov    DWORD PTR [edi+0x68],eax
6401793a:	mov    esi,DWORD PTR ds:0x6402f690
64017940:	mov    DWORD PTR [ebp-0x1c],esi
64017943:	push   esi
64017944:	call   DWORD PTR ds:0x64026020
6401794a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017951:	call   0x6401795b
64017956:	jmp    0x640178e6
64017958:	mov    esi,DWORD PTR [ebp-0x1c]
6401795b:	push   0xd
6401795d:	call   0x6401b462
64017962:	pop    ecx
64017963:	ret    
64017964:	push   ebp
64017965:	mov    ebp,esp
64017967:	sub    esp,0x10
6401796a:	push   ebx
6401796b:	xor    ebx,ebx
6401796d:	push   ebx
6401796e:	lea    ecx,[ebp-0x10]
64017971:	call   0x6401410f
64017976:	cmp    esi,0xfffffffe
64017979:	mov    DWORD PTR ds:0x64030918,ebx
6401797f:	jne    0x6401799f
64017981:	mov    DWORD PTR ds:0x64030918,0x1
6401798b:	call   DWORD PTR ds:0x64026140
64017991:	cmp    BYTE PTR [ebp-0x4],bl
64017994:	je     0x640179db
64017996:	mov    ecx,DWORD PTR [ebp-0x8]
64017999:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401799d:	jmp    0x640179db
6401799f:	cmp    esi,0xfffffffd
640179a2:	jne    0x640179b6
640179a4:	mov    DWORD PTR ds:0x64030918,0x1
640179ae:	call   DWORD PTR ds:0x640260dc
640179b4:	jmp    0x64017991
640179b6:	cmp    esi,0xfffffffc
640179b9:	jne    0x640179cd
640179bb:	mov    eax,DWORD PTR [ebp-0x10]
640179be:	mov    eax,DWORD PTR [eax+0x4]
640179c1:	mov    DWORD PTR ds:0x64030918,0x1
640179cb:	jmp    0x64017991
640179cd:	cmp    BYTE PTR [ebp-0x4],bl
640179d0:	je     0x640179d9
640179d2:	mov    eax,DWORD PTR [ebp-0x8]
640179d5:	and    DWORD PTR [eax+0x70],0xfffffffd
640179d9:	mov    eax,esi
640179db:	pop    ebx
640179dc:	leave  
640179dd:	ret    
640179de:	push   ebp
640179df:	mov    ebp,esp
640179e1:	sub    esp,0x20
640179e4:	mov    eax,ds:0x6402f09c
640179e9:	xor    eax,ebp
640179eb:	mov    DWORD PTR [ebp-0x4],eax
640179ee:	push   ebx
640179ef:	mov    ebx,DWORD PTR [ebp+0xc]
640179f2:	push   esi
640179f3:	mov    esi,DWORD PTR [ebp+0x8]
640179f6:	push   edi
640179f7:	call   0x64017964
640179fc:	mov    edi,eax
640179fe:	xor    esi,esi
64017a00:	cmp    edi,esi
64017a02:	mov    DWORD PTR [ebp+0x8],edi
64017a05:	jne    0x64017a15
64017a07:	mov    eax,ebx
64017a09:	call   0x640176e1
64017a0e:	xor    eax,eax
64017a10:	jmp    0x64017ba8
64017a15:	mov    DWORD PTR [ebp-0x1c],esi
64017a18:	xor    eax,eax
64017a1a:	cmp    DWORD PTR [eax+0x6402f698],edi
64017a20:	je     0x64017ab7
64017a26:	inc    DWORD PTR [ebp-0x1c]
64017a29:	add    eax,0x30
64017a2c:	cmp    eax,0xf0
64017a31:	jb     0x64017a1a
64017a33:	cmp    edi,0xfde8
64017a39:	je     0x64017ba5
64017a3f:	cmp    edi,0xfde9
64017a45:	je     0x64017ba5
64017a4b:	movzx  eax,di
64017a4e:	push   eax
64017a4f:	call   DWORD PTR ds:0x64026144
64017a55:	test   eax,eax
64017a57:	je     0x64017ba5
64017a5d:	lea    eax,[ebp-0x18]
64017a60:	push   eax
64017a61:	push   edi
64017a62:	call   DWORD PTR ds:0x6402613c
64017a68:	test   eax,eax
64017a6a:	je     0x64017b99
64017a70:	push   0x101
64017a75:	lea    eax,[ebx+0x1c]
64017a78:	push   esi
64017a79:	push   eax
64017a7a:	call   0x64014670
64017a7f:	xor    edx,edx
64017a81:	inc    edx
64017a82:	add    esp,0xc
64017a85:	cmp    DWORD PTR [ebp-0x18],edx
64017a88:	mov    DWORD PTR [ebx+0x4],edi
64017a8b:	mov    DWORD PTR [ebx+0xc],esi
64017a8e:	jbe    0x64017b8c
64017a94:	cmp    BYTE PTR [ebp-0x12],0x0
64017a98:	je     0x64017b6d
64017a9e:	lea    esi,[ebp-0x11]
64017aa1:	mov    cl,BYTE PTR [esi]
64017aa3:	test   cl,cl
64017aa5:	je     0x64017b6d
64017aab:	movzx  eax,BYTE PTR [esi-0x1]
64017aaf:	movzx  ecx,cl
64017ab2:	jmp    0x64017b5d
64017ab7:	push   0x101
64017abc:	lea    eax,[ebx+0x1c]
64017abf:	push   esi
64017ac0:	push   eax
64017ac1:	call   0x64014670
64017ac6:	mov    ecx,DWORD PTR [ebp-0x1c]
64017ac9:	add    esp,0xc
64017acc:	imul   ecx,ecx,0x30
64017acf:	mov    DWORD PTR [ebp-0x20],esi
64017ad2:	lea    esi,[ecx+0x6402f6a8]
64017ad8:	mov    DWORD PTR [ebp-0x1c],esi
64017adb:	jmp    0x64017b07
64017add:	mov    al,BYTE PTR [esi+0x1]
64017ae0:	test   al,al
64017ae2:	je     0x64017b0c
64017ae4:	movzx  edi,BYTE PTR [esi]
64017ae7:	movzx  eax,al
64017aea:	jmp    0x64017afe
64017aec:	mov    eax,DWORD PTR [ebp-0x20]
64017aef:	mov    al,BYTE PTR [eax+0x6402f694]
64017af5:	or     BYTE PTR [ebx+edi*1+0x1d],al
64017af9:	movzx  eax,BYTE PTR [esi+0x1]
64017afd:	inc    edi
64017afe:	cmp    edi,eax
64017b00:	jbe    0x64017aec
64017b02:	mov    edi,DWORD PTR [ebp+0x8]
64017b05:	inc    esi
64017b06:	inc    esi
64017b07:	cmp    BYTE PTR [esi],0x0
64017b0a:	jne    0x64017add
64017b0c:	mov    esi,DWORD PTR [ebp-0x1c]
64017b0f:	inc    DWORD PTR [ebp-0x20]
64017b12:	add    esi,0x8
64017b15:	cmp    DWORD PTR [ebp-0x20],0x4
64017b19:	mov    DWORD PTR [ebp-0x1c],esi
64017b1c:	jb     0x64017b07
64017b1e:	mov    eax,edi
64017b20:	mov    DWORD PTR [ebx+0x4],edi
64017b23:	mov    DWORD PTR [ebx+0x8],0x1
64017b2a:	call   0x640176b2
64017b2f:	push   0x6
64017b31:	mov    DWORD PTR [ebx+0xc],eax
64017b34:	lea    eax,[ebx+0x10]
64017b37:	lea    ecx,[ecx+0x6402f69c]
64017b3d:	pop    edx
64017b3e:	mov    si,WORD PTR [ecx]
64017b41:	inc    ecx
64017b42:	mov    WORD PTR [eax],si
64017b45:	inc    ecx
64017b46:	inc    eax
64017b47:	inc    eax
64017b48:	dec    edx
64017b49:	jne    0x64017b3e
64017b4b:	mov    esi,ebx
64017b4d:	call   0x64017736
64017b52:	jmp    0x64017a0e
64017b57:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
64017b5c:	inc    eax
64017b5d:	cmp    eax,ecx
64017b5f:	jbe    0x64017b57
64017b61:	inc    esi
64017b62:	inc    esi
64017b63:	cmp    BYTE PTR [esi-0x1],0x0
64017b67:	jne    0x64017aa1
64017b6d:	lea    eax,[ebx+0x1e]
64017b70:	mov    ecx,0xfe
64017b75:	or     BYTE PTR [eax],0x8
64017b78:	inc    eax
64017b79:	dec    ecx
64017b7a:	jne    0x64017b75
64017b7c:	mov    eax,DWORD PTR [ebx+0x4]
64017b7f:	call   0x640176b2
64017b84:	mov    DWORD PTR [ebx+0xc],eax
64017b87:	mov    DWORD PTR [ebx+0x8],edx
64017b8a:	jmp    0x64017b8f
64017b8c:	mov    DWORD PTR [ebx+0x8],esi
64017b8f:	xor    eax,eax
64017b91:	lea    edi,[ebx+0x10]
64017b94:	stos   DWORD PTR es:[edi],eax
64017b95:	stos   DWORD PTR es:[edi],eax
64017b96:	stos   DWORD PTR es:[edi],eax
64017b97:	jmp    0x64017b4b
64017b99:	cmp    DWORD PTR ds:0x64030918,esi
64017b9f:	jne    0x64017a07
64017ba5:	or     eax,0xffffffff
64017ba8:	mov    ecx,DWORD PTR [ebp-0x4]
64017bab:	pop    edi
64017bac:	pop    esi
64017bad:	xor    ecx,ebp
64017baf:	pop    ebx
64017bb0:	call   0x64013f6c
64017bb5:	leave  
64017bb6:	ret    
64017bb7:	push   0x14
64017bb9:	push   0x6402c568
64017bbe:	call   0x64015530
64017bc3:	or     DWORD PTR [ebp-0x20],0xffffffff
64017bc7:	call   0x6401607b
64017bcc:	mov    edi,eax
64017bce:	mov    DWORD PTR [ebp-0x24],edi
64017bd1:	call   0x640178c0
64017bd6:	mov    ebx,DWORD PTR [edi+0x68]
64017bd9:	mov    esi,DWORD PTR [ebp+0x8]
64017bdc:	call   0x64017964
64017be1:	mov    DWORD PTR [ebp+0x8],eax
64017be4:	cmp    eax,DWORD PTR [ebx+0x4]
64017be7:	je     0x64017d44
64017bed:	push   0x220
64017bf2:	call   0x64017240
64017bf7:	pop    ecx
64017bf8:	mov    ebx,eax
64017bfa:	test   ebx,ebx
64017bfc:	je     0x64017d48
64017c02:	mov    ecx,0x88
64017c07:	mov    esi,DWORD PTR [edi+0x68]
64017c0a:	mov    edi,ebx
64017c0c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64017c0e:	and    DWORD PTR [ebx],0x0
64017c11:	push   ebx
64017c12:	push   DWORD PTR [ebp+0x8]
64017c15:	call   0x640179de
64017c1a:	pop    ecx
64017c1b:	pop    ecx
64017c1c:	mov    DWORD PTR [ebp-0x20],eax
64017c1f:	test   eax,eax
64017c21:	jne    0x64017d23
64017c27:	mov    esi,DWORD PTR [ebp-0x24]
64017c2a:	push   DWORD PTR [esi+0x68]
64017c2d:	call   DWORD PTR ds:0x64026098
64017c33:	test   eax,eax
64017c35:	jne    0x64017c48
64017c37:	mov    eax,DWORD PTR [esi+0x68]
64017c3a:	cmp    eax,0x6402f268
64017c3f:	je     0x64017c48
64017c41:	push   eax
64017c42:	call   0x64014e06
64017c47:	pop    ecx
64017c48:	mov    DWORD PTR [esi+0x68],ebx
64017c4b:	push   ebx
64017c4c:	mov    edi,DWORD PTR ds:0x64026020
64017c52:	call   edi
64017c54:	test   BYTE PTR [esi+0x70],0x2
64017c58:	jne    0x64017d48
64017c5e:	test   BYTE PTR ds:0x6402f78c,0x1
64017c65:	jne    0x64017d48
64017c6b:	push   0xd
64017c6d:	call   0x6401b53a
64017c72:	pop    ecx
64017c73:	and    DWORD PTR [ebp-0x4],0x0
64017c77:	mov    eax,DWORD PTR [ebx+0x4]
64017c7a:	mov    ds:0x64030928,eax
64017c7f:	mov    eax,DWORD PTR [ebx+0x8]
64017c82:	mov    ds:0x6403092c,eax
64017c87:	mov    eax,DWORD PTR [ebx+0xc]
64017c8a:	mov    ds:0x64030930,eax
64017c8f:	xor    eax,eax
64017c91:	mov    DWORD PTR [ebp-0x1c],eax
64017c94:	cmp    eax,0x5
64017c97:	jge    0x64017ca9
64017c99:	mov    cx,WORD PTR [ebx+eax*2+0x10]
64017c9e:	mov    WORD PTR [eax*2+0x6403091c],cx
64017ca6:	inc    eax
64017ca7:	jmp    0x64017c91
64017ca9:	xor    eax,eax
64017cab:	mov    DWORD PTR [ebp-0x1c],eax
64017cae:	cmp    eax,0x101
64017cb3:	jge    0x64017cc2
64017cb5:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64017cb9:	mov    BYTE PTR [eax+0x6402f488],cl
64017cbf:	inc    eax
64017cc0:	jmp    0x64017cab
64017cc2:	xor    eax,eax
64017cc4:	mov    DWORD PTR [ebp-0x1c],eax
64017cc7:	cmp    eax,0x100
64017ccc:	jge    0x64017cde
64017cce:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64017cd5:	mov    BYTE PTR [eax+0x6402f590],cl
64017cdb:	inc    eax
64017cdc:	jmp    0x64017cc4
64017cde:	push   DWORD PTR ds:0x6402f690
64017ce4:	call   DWORD PTR ds:0x64026098
64017cea:	test   eax,eax
64017cec:	jne    0x64017d01
64017cee:	mov    eax,ds:0x6402f690
64017cf3:	cmp    eax,0x6402f268
64017cf8:	je     0x64017d01
64017cfa:	push   eax
64017cfb:	call   0x64014e06
64017d00:	pop    ecx
64017d01:	mov    DWORD PTR ds:0x6402f690,ebx
64017d07:	push   ebx
64017d08:	call   edi
64017d0a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d11:	call   0x64017d18
64017d16:	jmp    0x64017d48
64017d18:	push   0xd
64017d1a:	call   0x6401b462
64017d1f:	pop    ecx
64017d20:	ret    
64017d21:	jmp    0x64017d48
64017d23:	cmp    eax,0xffffffff
64017d26:	jne    0x64017d48
64017d28:	cmp    ebx,0x6402f268
64017d2e:	je     0x64017d37
64017d30:	push   ebx
64017d31:	call   0x64014e06
64017d36:	pop    ecx
64017d37:	call   0x64015d30
64017d3c:	mov    DWORD PTR [eax],0x16
64017d42:	jmp    0x64017d48
64017d44:	and    DWORD PTR [ebp-0x20],0x0
64017d48:	mov    eax,DWORD PTR [ebp-0x20]
64017d4b:	call   0x64015575
64017d50:	ret    
64017d51:	cmp    DWORD PTR ds:0x64034654,0x0
64017d58:	jne    0x64017d6c
64017d5a:	push   0xfffffffd
64017d5c:	call   0x64017bb7
64017d61:	pop    ecx
64017d62:	mov    DWORD PTR ds:0x64034654,0x1
64017d6c:	xor    eax,eax
64017d6e:	ret    
64017d6f:	push   ebx
64017d70:	push   ebp
64017d71:	push   esi
64017d72:	mov    esi,DWORD PTR [esp+0x10]
64017d76:	mov    eax,DWORD PTR [esi+0xbc]
64017d7c:	xor    ebp,ebp
64017d7e:	cmp    eax,ebp
64017d80:	push   edi
64017d81:	je     0x64017df2
64017d83:	cmp    eax,0x6402fc40
64017d88:	je     0x64017df2
64017d8a:	mov    eax,DWORD PTR [esi+0xb0]
64017d90:	cmp    eax,ebp
64017d92:	je     0x64017df2
64017d94:	cmp    DWORD PTR [eax],ebp
64017d96:	jne    0x64017df2
64017d98:	mov    eax,DWORD PTR [esi+0xb8]
64017d9e:	cmp    eax,ebp
64017da0:	je     0x64017db9
64017da2:	cmp    DWORD PTR [eax],ebp
64017da4:	jne    0x64017db9
64017da6:	push   eax
64017da7:	call   0x64014e06
64017dac:	push   DWORD PTR [esi+0xbc]
64017db2:	call   0x6401d085
64017db7:	pop    ecx
64017db8:	pop    ecx
64017db9:	mov    eax,DWORD PTR [esi+0xb4]
64017dbf:	cmp    eax,ebp
64017dc1:	je     0x64017dda
64017dc3:	cmp    DWORD PTR [eax],ebp
64017dc5:	jne    0x64017dda
64017dc7:	push   eax
64017dc8:	call   0x64014e06
64017dcd:	push   DWORD PTR [esi+0xbc]
64017dd3:	call   0x6401d045
64017dd8:	pop    ecx
64017dd9:	pop    ecx
64017dda:	push   DWORD PTR [esi+0xb0]
64017de0:	call   0x64014e06
64017de5:	push   DWORD PTR [esi+0xbc]
64017deb:	call   0x64014e06
64017df0:	pop    ecx
64017df1:	pop    ecx
64017df2:	mov    eax,DWORD PTR [esi+0xc0]
64017df8:	cmp    eax,ebp
64017dfa:	je     0x64017e40
64017dfc:	cmp    DWORD PTR [eax],ebp
64017dfe:	jne    0x64017e40
64017e00:	mov    eax,DWORD PTR [esi+0xc4]
64017e06:	sub    eax,0xfe
64017e0b:	push   eax
64017e0c:	call   0x64014e06
64017e11:	mov    eax,DWORD PTR [esi+0xcc]
64017e17:	mov    edi,0x80
64017e1c:	sub    eax,edi
64017e1e:	push   eax
64017e1f:	call   0x64014e06
64017e24:	mov    eax,DWORD PTR [esi+0xd0]
64017e2a:	sub    eax,edi
64017e2c:	push   eax
64017e2d:	call   0x64014e06
64017e32:	push   DWORD PTR [esi+0xc0]
64017e38:	call   0x64014e06
64017e3d:	add    esp,0x10
64017e40:	lea    edi,[esi+0xd4]
64017e46:	mov    eax,DWORD PTR [edi]
64017e48:	cmp    eax,0x6402fb80
64017e4d:	je     0x64017e66
64017e4f:	cmp    DWORD PTR [eax+0xb4],ebp
64017e55:	jne    0x64017e66
64017e57:	push   eax
64017e58:	call   0x6401ceb5
64017e5d:	push   DWORD PTR [edi]
64017e5f:	call   0x64014e06
64017e64:	pop    ecx
64017e65:	pop    ecx
64017e66:	push   0x6
64017e68:	lea    edi,[esi+0x50]
64017e6b:	pop    ebx
64017e6c:	cmp    DWORD PTR [edi-0x8],0x6402f790
64017e73:	je     0x64017e86
64017e75:	mov    eax,DWORD PTR [edi]
64017e77:	cmp    eax,ebp
64017e79:	je     0x64017e86
64017e7b:	cmp    DWORD PTR [eax],ebp
64017e7d:	jne    0x64017e86
64017e7f:	push   eax
64017e80:	call   0x64014e06
64017e85:	pop    ecx
64017e86:	cmp    DWORD PTR [edi-0x4],ebp
64017e89:	je     0x64017e9d
64017e8b:	mov    eax,DWORD PTR [edi+0x4]
64017e8e:	cmp    eax,ebp
64017e90:	je     0x64017e9d
64017e92:	cmp    DWORD PTR [eax],ebp
64017e94:	jne    0x64017e9d
64017e96:	push   eax
64017e97:	call   0x64014e06
64017e9c:	pop    ecx
64017e9d:	add    edi,0x10
64017ea0:	dec    ebx
64017ea1:	jne    0x64017e6c
64017ea3:	push   esi
64017ea4:	call   0x64014e06
64017ea9:	pop    ecx
64017eaa:	pop    edi
64017eab:	pop    esi
64017eac:	pop    ebp
64017ead:	pop    ebx
64017eae:	ret    
64017eaf:	push   ebx
64017eb0:	push   ebp
64017eb1:	push   esi
64017eb2:	mov    esi,DWORD PTR [esp+0x10]
64017eb6:	push   edi
64017eb7:	mov    edi,DWORD PTR ds:0x64026020
64017ebd:	push   esi
64017ebe:	call   edi
64017ec0:	mov    eax,DWORD PTR [esi+0xb0]
64017ec6:	test   eax,eax
64017ec8:	je     0x64017ecd
64017eca:	push   eax
64017ecb:	call   edi
64017ecd:	mov    eax,DWORD PTR [esi+0xb8]
64017ed3:	test   eax,eax
64017ed5:	je     0x64017eda
64017ed7:	push   eax
64017ed8:	call   edi
64017eda:	mov    eax,DWORD PTR [esi+0xb4]
64017ee0:	test   eax,eax
64017ee2:	je     0x64017ee7
64017ee4:	push   eax
64017ee5:	call   edi
64017ee7:	mov    eax,DWORD PTR [esi+0xc0]
64017eed:	test   eax,eax
64017eef:	je     0x64017ef4
64017ef1:	push   eax
64017ef2:	call   edi
64017ef4:	push   0x6
64017ef6:	lea    ebx,[esi+0x50]
64017ef9:	pop    ebp
64017efa:	cmp    DWORD PTR [ebx-0x8],0x6402f790
64017f01:	je     0x64017f0c
64017f03:	mov    eax,DWORD PTR [ebx]
64017f05:	test   eax,eax
64017f07:	je     0x64017f0c
64017f09:	push   eax
64017f0a:	call   edi
64017f0c:	cmp    DWORD PTR [ebx-0x4],0x0
64017f10:	je     0x64017f1c
64017f12:	mov    eax,DWORD PTR [ebx+0x4]
64017f15:	test   eax,eax
64017f17:	je     0x64017f1c
64017f19:	push   eax
64017f1a:	call   edi
64017f1c:	add    ebx,0x10
64017f1f:	dec    ebp
64017f20:	jne    0x64017efa
64017f22:	mov    eax,DWORD PTR [esi+0xd4]
64017f28:	add    eax,0xb4
64017f2d:	push   eax
64017f2e:	call   edi
64017f30:	pop    edi
64017f31:	pop    esi
64017f32:	pop    ebp
64017f33:	pop    ebx
64017f34:	ret    
64017f35:	push   esi
64017f36:	mov    esi,DWORD PTR [esp+0x8]
64017f3a:	test   esi,esi
64017f3c:	je     0x64017fbd
64017f3e:	push   ebx
64017f3f:	push   ebp
64017f40:	push   edi
64017f41:	mov    edi,DWORD PTR ds:0x64026098
64017f47:	push   esi
64017f48:	call   edi
64017f4a:	mov    eax,DWORD PTR [esi+0xb0]
64017f50:	test   eax,eax
64017f52:	je     0x64017f57
64017f54:	push   eax
64017f55:	call   edi
64017f57:	mov    eax,DWORD PTR [esi+0xb8]
64017f5d:	test   eax,eax
64017f5f:	je     0x64017f64
64017f61:	push   eax
64017f62:	call   edi
64017f64:	mov    eax,DWORD PTR [esi+0xb4]
64017f6a:	test   eax,eax
64017f6c:	je     0x64017f71
64017f6e:	push   eax
64017f6f:	call   edi
64017f71:	mov    eax,DWORD PTR [esi+0xc0]
64017f77:	test   eax,eax
64017f79:	je     0x64017f7e
64017f7b:	push   eax
64017f7c:	call   edi
64017f7e:	push   0x6
64017f80:	lea    ebx,[esi+0x50]
64017f83:	pop    ebp
64017f84:	cmp    DWORD PTR [ebx-0x8],0x6402f790
64017f8b:	je     0x64017f96
64017f8d:	mov    eax,DWORD PTR [ebx]
64017f8f:	test   eax,eax
64017f91:	je     0x64017f96
64017f93:	push   eax
64017f94:	call   edi
64017f96:	cmp    DWORD PTR [ebx-0x4],0x0
64017f9a:	je     0x64017fa6
64017f9c:	mov    eax,DWORD PTR [ebx+0x4]
64017f9f:	test   eax,eax
64017fa1:	je     0x64017fa6
64017fa3:	push   eax
64017fa4:	call   edi
64017fa6:	add    ebx,0x10
64017fa9:	dec    ebp
64017faa:	jne    0x64017f84
64017fac:	mov    eax,DWORD PTR [esi+0xd4]
64017fb2:	add    eax,0xb4
64017fb7:	push   eax
64017fb8:	call   edi
64017fba:	pop    edi
64017fbb:	pop    ebp
64017fbc:	pop    ebx
64017fbd:	mov    eax,esi
64017fbf:	pop    esi
64017fc0:	ret    
64017fc1:	test   edi,edi
64017fc3:	je     0x64017ffc
64017fc5:	test   eax,eax
64017fc7:	je     0x64017ffc
64017fc9:	push   esi
64017fca:	mov    esi,DWORD PTR [eax]
64017fcc:	cmp    esi,edi
64017fce:	je     0x64017ff8
64017fd0:	push   edi
64017fd1:	mov    DWORD PTR [eax],edi
64017fd3:	call   0x64017eaf
64017fd8:	test   esi,esi
64017fda:	pop    ecx
64017fdb:	je     0x64017ff8
64017fdd:	push   esi
64017fde:	call   0x64017f35
64017fe3:	cmp    DWORD PTR [esi],0x0
64017fe6:	pop    ecx
64017fe7:	jne    0x64017ff8
64017fe9:	cmp    esi,0x6402f798
64017fef:	je     0x64017ff8
64017ff1:	push   esi
64017ff2:	call   0x64017d6f
64017ff7:	pop    ecx
64017ff8:	mov    eax,edi
64017ffa:	pop    esi
64017ffb:	ret    
64017ffc:	xor    eax,eax
64017ffe:	ret    
64017fff:	push   0xc
64018001:	push   0x6402c588
64018006:	call   0x64015530
6401800b:	call   0x6401607b
64018010:	mov    esi,eax
64018012:	mov    eax,ds:0x6402f78c
64018017:	test   DWORD PTR [esi+0x70],eax
6401801a:	je     0x6401803e
6401801c:	cmp    DWORD PTR [esi+0x6c],0x0
64018020:	je     0x6401803e
64018022:	call   0x6401607b
64018027:	mov    esi,DWORD PTR [eax+0x6c]
6401802a:	test   esi,esi
6401802c:	jne    0x64018036
6401802e:	push   0x20
64018030:	call   0x640173b6
64018035:	pop    ecx
64018036:	mov    eax,esi
64018038:	call   0x64015575
6401803d:	ret    
6401803e:	push   0xc
64018040:	call   0x6401b53a
64018045:	pop    ecx
64018046:	and    DWORD PTR [ebp-0x4],0x0
6401804a:	lea    eax,[esi+0x6c]
6401804d:	mov    edi,DWORD PTR ds:0x6402f870
64018053:	call   0x64017fc1
64018058:	mov    DWORD PTR [ebp-0x1c],eax
6401805b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018062:	call   0x64018069
64018067:	jmp    0x6401802a
64018069:	push   0xc
6401806b:	call   0x6401b462
64018070:	pop    ecx
64018071:	mov    esi,DWORD PTR [ebp-0x1c]
64018074:	ret    
64018075:	push   ebp
64018076:	mov    ebp,esp
64018078:	push   ecx
64018079:	push   esi
6401807a:	mov    esi,DWORD PTR [ebp+0xc]
6401807d:	push   esi
6401807e:	call   0x6401dd9d
64018083:	mov    DWORD PTR [ebp+0xc],eax
64018086:	mov    eax,DWORD PTR [esi+0xc]
64018089:	test   al,0x82
6401808b:	pop    ecx
6401808c:	jne    0x640180a5
6401808e:	call   0x64015d30
64018093:	mov    DWORD PTR [eax],0x9
64018099:	or     DWORD PTR [esi+0xc],0x20
6401809d:	or     eax,0xffffffff
640180a0:	jmp    0x640181d2
640180a5:	test   al,0x40
640180a7:	je     0x640180b6
640180a9:	call   0x64015d30
640180ae:	mov    DWORD PTR [eax],0x22
640180b4:	jmp    0x64018099
640180b6:	push   ebx
640180b7:	xor    ebx,ebx
640180b9:	test   al,0x1
640180bb:	je     0x640180d3
640180bd:	test   al,0x10
640180bf:	mov    DWORD PTR [esi+0x4],ebx
640180c2:	je     0x6401814d
640180c8:	mov    ecx,DWORD PTR [esi+0x8]
640180cb:	and    eax,0xfffffffe
640180ce:	mov    DWORD PTR [esi],ecx
640180d0:	mov    DWORD PTR [esi+0xc],eax
640180d3:	mov    eax,DWORD PTR [esi+0xc]
640180d6:	and    eax,0xffffffef
640180d9:	or     eax,0x2
640180dc:	test   ax,0x10c
640180e0:	mov    DWORD PTR [esi+0xc],eax
640180e3:	mov    DWORD PTR [esi+0x4],ebx
640180e6:	mov    DWORD PTR [ebp-0x4],ebx
640180e9:	jne    0x64018117
640180eb:	call   0x6401dbfc
640180f0:	add    eax,0x20
640180f3:	cmp    esi,eax
640180f5:	je     0x64018103
640180f7:	call   0x6401dbfc
640180fc:	add    eax,0x40
640180ff:	cmp    esi,eax
64018101:	jne    0x64018110
64018103:	push   DWORD PTR [ebp+0xc]
64018106:	call   0x6401db9e
6401810b:	test   eax,eax
6401810d:	pop    ecx
6401810e:	jne    0x64018117
64018110:	push   esi
64018111:	call   0x6401db5a
64018116:	pop    ecx
64018117:	test   WORD PTR [esi+0xc],0x108
6401811d:	push   edi
6401811e:	je     0x640181a4
64018124:	mov    eax,DWORD PTR [esi+0x8]
64018127:	mov    edi,DWORD PTR [esi]
64018129:	lea    ecx,[eax+0x1]
6401812c:	mov    DWORD PTR [esi],ecx
6401812e:	mov    ecx,DWORD PTR [esi+0x18]
64018131:	sub    edi,eax
64018133:	dec    ecx
64018134:	cmp    edi,ebx
64018136:	mov    DWORD PTR [esi+0x4],ecx
64018139:	jle    0x64018158
6401813b:	push   edi
6401813c:	push   eax
6401813d:	push   DWORD PTR [ebp+0xc]
64018140:	call   0x6401da7e
64018145:	add    esp,0xc
64018148:	mov    DWORD PTR [ebp-0x4],eax
6401814b:	jmp    0x6401819a
6401814d:	or     eax,0x20
64018150:	mov    DWORD PTR [esi+0xc],eax
64018153:	or     eax,0xffffffff
64018156:	jmp    0x640181d1
64018158:	mov    ecx,DWORD PTR [ebp+0xc]
6401815b:	cmp    ecx,0xffffffff
6401815e:	je     0x6401817b
64018160:	cmp    ecx,0xfffffffe
64018163:	je     0x6401817b
64018165:	mov    eax,ecx
64018167:	and    eax,0x1f
6401816a:	mov    edx,ecx
6401816c:	sar    edx,0x5
6401816f:	shl    eax,0x6
64018172:	add    eax,DWORD PTR [edx*4+0x64034540]
64018179:	jmp    0x64018180
6401817b:	mov    eax,0x6402f880
64018180:	test   BYTE PTR [eax+0x4],0x20
64018184:	je     0x6401819a
64018186:	push   0x2
64018188:	push   ebx
64018189:	push   ebx
6401818a:	push   ecx
6401818b:	call   0x6401d343
64018190:	and    eax,edx
64018192:	add    esp,0x10
64018195:	cmp    eax,0xffffffff
64018198:	je     0x640181bf
6401819a:	mov    eax,DWORD PTR [esi+0x8]
6401819d:	mov    cl,BYTE PTR [ebp+0x8]
640181a0:	mov    BYTE PTR [eax],cl
640181a2:	jmp    0x640181ba
640181a4:	xor    edi,edi
640181a6:	inc    edi
640181a7:	push   edi
640181a8:	lea    eax,[ebp+0x8]
640181ab:	push   eax
640181ac:	push   DWORD PTR [ebp+0xc]
640181af:	call   0x6401da7e
640181b4:	add    esp,0xc
640181b7:	mov    DWORD PTR [ebp-0x4],eax
640181ba:	cmp    DWORD PTR [ebp-0x4],edi
640181bd:	je     0x640181c8
640181bf:	or     DWORD PTR [esi+0xc],0x20
640181c3:	or     eax,0xffffffff
640181c6:	jmp    0x640181d0
640181c8:	mov    eax,DWORD PTR [ebp+0x8]
640181cb:	and    eax,0xff
640181d0:	pop    edi
640181d1:	pop    ebx
640181d2:	pop    esi
640181d3:	leave  
640181d4:	ret    
640181d5:	push   ebp
640181d6:	mov    ebp,esp
640181d8:	push   esi
640181d9:	mov    esi,eax
640181db:	jmp    0x640181f1
640181dd:	push   DWORD PTR [ebp+0x8]
640181e0:	mov    eax,DWORD PTR [ebp+0x10]
640181e3:	dec    DWORD PTR [ebp+0xc]
640181e6:	call   0x64018b59
640181eb:	cmp    DWORD PTR [esi],0xffffffff
640181ee:	pop    ecx
640181ef:	je     0x640181f7
640181f1:	cmp    DWORD PTR [ebp+0xc],0x0
640181f5:	jg     0x640181dd
640181f7:	pop    esi
640181f8:	pop    ebp
640181f9:	ret    
640181fa:	test   BYTE PTR [edi+0xc],0x40
640181fe:	push   ebx
640181ff:	push   esi
64018200:	mov    esi,eax
64018202:	mov    ebx,ecx
64018204:	je     0x6401823f
64018206:	cmp    DWORD PTR [edi+0x8],0x0
6401820a:	jne    0x6401823f
6401820c:	mov    eax,DWORD PTR [esp+0xc]
64018210:	add    DWORD PTR [esi],eax
64018212:	jmp    0x64018246
64018214:	movzx  eax,WORD PTR [ebx]
64018217:	dec    DWORD PTR [esp+0xc]
6401821b:	push   eax
6401821c:	mov    eax,edi
6401821e:	call   0x64018b59
64018223:	inc    ebx
64018224:	inc    ebx
64018225:	cmp    DWORD PTR [esi],0xffffffff
64018228:	pop    ecx
64018229:	jne    0x6401823f
6401822b:	call   0x64015d30
64018230:	cmp    DWORD PTR [eax],0x2a
64018233:	jne    0x64018246
64018235:	push   0x3f
64018237:	mov    eax,edi
64018239:	call   0x64018b59
6401823e:	pop    ecx
6401823f:	cmp    DWORD PTR [esp+0xc],0x0
64018244:	jg     0x64018214
64018246:	pop    esi
64018247:	pop    ebx
64018248:	ret    
64018249:	push   ebp
6401824a:	lea    ebp,[esp-0x3f4]
64018251:	sub    esp,0x474
64018257:	mov    eax,ds:0x6402f09c
6401825c:	xor    eax,ebp
6401825e:	mov    DWORD PTR [ebp+0x3f0],eax
64018264:	mov    eax,DWORD PTR [ebp+0x3fc]
6401826a:	push   ebx
6401826b:	mov    ebx,DWORD PTR [ebp+0x408]
64018271:	push   esi
64018272:	mov    esi,DWORD PTR [ebp+0x400]
64018278:	push   edi
64018279:	push   DWORD PTR [ebp+0x404]
6401827f:	xor    edi,edi
64018281:	lea    ecx,[ebp-0x64]
64018284:	mov    DWORD PTR [ebp-0x3c],eax
64018287:	mov    DWORD PTR [ebp-0x28],ebx
6401828a:	mov    DWORD PTR [ebp-0x54],edi
6401828d:	mov    DWORD PTR [ebp-0x14],edi
64018290:	mov    DWORD PTR [ebp-0x38],edi
64018293:	mov    DWORD PTR [ebp-0x18],edi
64018296:	mov    DWORD PTR [ebp-0x30],edi
64018299:	mov    DWORD PTR [ebp-0x48],edi
6401829c:	mov    DWORD PTR [ebp-0x34],edi
6401829f:	call   0x6401410f
640182a4:	cmp    DWORD PTR [ebp-0x3c],edi
640182a7:	jne    0x640182d6
640182a9:	call   0x64015d30
640182ae:	push   edi
640182af:	push   edi
640182b0:	push   edi
640182b1:	push   edi
640182b2:	mov    DWORD PTR [eax],0x16
640182b8:	push   edi
640182b9:	call   0x64013aa4
640182be:	add    esp,0x14
640182c1:	cmp    BYTE PTR [ebp-0x58],0x0
640182c5:	je     0x640182ce
640182c7:	mov    eax,DWORD PTR [ebp-0x5c]
640182ca:	and    DWORD PTR [eax+0x70],0xfffffffd
640182ce:	or     eax,0xffffffff
640182d1:	jmp    0x64018b21
640182d6:	cmp    esi,edi
640182d8:	je     0x640182a9
640182da:	movzx  edx,WORD PTR [esi]
640182dd:	xor    ecx,ecx
640182df:	cmp    dx,di
640182e2:	mov    DWORD PTR [ebp-0x2c],edi
640182e5:	mov    DWORD PTR [ebp-0x20],edi
640182e8:	mov    DWORD PTR [ebp-0x50],edi
640182eb:	mov    DWORD PTR [ebp-0x24],edx
640182ee:	je     0x64018b11
640182f4:	push   0x2
640182f6:	pop    edi
640182f7:	add    esi,edi
640182f9:	cmp    DWORD PTR [ebp-0x2c],0x0
640182fd:	mov    DWORD PTR [ebp-0x4c],esi
64018300:	jl     0x64018b11
64018306:	lea    eax,[edx-0x20]
64018309:	cmp    ax,0x58
6401830d:	ja     0x6401831e
6401830f:	movzx  eax,dx
64018312:	movzx  eax,BYTE PTR [eax+0x64026de8]
64018319:	and    eax,0xf
6401831c:	jmp    0x64018320
6401831e:	xor    eax,eax
64018320:	movsx  eax,BYTE PTR [ecx+eax*8+0x64026e08]
64018328:	push   0x7
6401832a:	sar    eax,0x4
6401832d:	pop    ecx
6401832e:	cmp    eax,ecx
64018330:	mov    DWORD PTR [ebp-0x68],eax
64018333:	ja     0x64018adf
64018339:	jmp    DWORD PTR [eax*4+0x64018b39]
64018340:	xor    eax,eax
64018342:	or     DWORD PTR [ebp-0x18],0xffffffff
64018346:	mov    DWORD PTR [ebp-0x6c],eax
64018349:	mov    DWORD PTR [ebp-0x48],eax
6401834c:	mov    DWORD PTR [ebp-0x38],eax
6401834f:	mov    DWORD PTR [ebp-0x30],eax
64018352:	mov    DWORD PTR [ebp-0x14],eax
64018355:	mov    DWORD PTR [ebp-0x34],eax
64018358:	jmp    0x64018adf
6401835d:	movzx  eax,dx
64018360:	sub    eax,0x20
64018363:	je     0x640183a3
64018365:	sub    eax,0x3
64018368:	je     0x64018397
6401836a:	sub    eax,0x8
6401836d:	je     0x6401838e
6401836f:	sub    eax,edi
64018371:	je     0x64018385
64018373:	sub    eax,0x3
64018376:	jne    0x64018adf
6401837c:	or     DWORD PTR [ebp-0x14],0x8
64018380:	jmp    0x64018adf
64018385:	or     DWORD PTR [ebp-0x14],0x4
64018389:	jmp    0x64018adf
6401838e:	or     DWORD PTR [ebp-0x14],0x1
64018392:	jmp    0x64018adf
64018397:	or     DWORD PTR [ebp-0x14],0x80
6401839e:	jmp    0x64018adf
640183a3:	or     DWORD PTR [ebp-0x14],edi
640183a6:	jmp    0x64018adf
640183ab:	cmp    dx,0x2a
640183af:	jne    0x640183d1
640183b1:	add    ebx,0x4
640183b4:	mov    DWORD PTR [ebp-0x28],ebx
640183b7:	mov    ebx,DWORD PTR [ebx-0x4]
640183ba:	test   ebx,ebx
640183bc:	mov    DWORD PTR [ebp-0x38],ebx
640183bf:	jge    0x64018adf
640183c5:	or     DWORD PTR [ebp-0x14],0x4
640183c9:	neg    DWORD PTR [ebp-0x38]
640183cc:	jmp    0x64018adf
640183d1:	mov    eax,DWORD PTR [ebp-0x38]
640183d4:	imul   eax,eax,0xa
640183d7:	movzx  ecx,dx
640183da:	lea    eax,[eax+ecx*1-0x30]
640183de:	mov    DWORD PTR [ebp-0x38],eax
640183e1:	jmp    0x64018adf
640183e6:	and    DWORD PTR [ebp-0x18],0x0
640183ea:	jmp    0x64018adf
640183ef:	cmp    dx,0x2a
640183f3:	jne    0x64018412
640183f5:	add    ebx,0x4
640183f8:	mov    DWORD PTR [ebp-0x28],ebx
640183fb:	mov    ebx,DWORD PTR [ebx-0x4]
640183fe:	test   ebx,ebx
64018400:	mov    DWORD PTR [ebp-0x18],ebx
64018403:	jge    0x64018adf
64018409:	or     DWORD PTR [ebp-0x18],0xffffffff
6401840d:	jmp    0x64018adf
64018412:	mov    eax,DWORD PTR [ebp-0x18]
64018415:	imul   eax,eax,0xa
64018418:	movzx  ecx,dx
6401841b:	lea    eax,[eax+ecx*1-0x30]
6401841f:	mov    DWORD PTR [ebp-0x18],eax
64018422:	jmp    0x64018adf
64018427:	movzx  eax,dx
6401842a:	cmp    eax,0x49
6401842d:	je     0x64018477
6401842f:	cmp    eax,0x68
64018432:	je     0x6401846e
64018434:	cmp    eax,0x6c
64018437:	je     0x6401844e
64018439:	cmp    eax,0x77
6401843c:	jne    0x64018adf
64018442:	or     DWORD PTR [ebp-0x14],0x800
64018449:	jmp    0x64018adf
6401844e:	cmp    WORD PTR [esi],0x6c
64018452:	jne    0x64018465
64018454:	add    esi,edi
64018456:	or     DWORD PTR [ebp-0x14],0x1000
6401845d:	mov    DWORD PTR [ebp-0x4c],esi
64018460:	jmp    0x64018adf
64018465:	or     DWORD PTR [ebp-0x14],0x10
64018469:	jmp    0x64018adf
6401846e:	or     DWORD PTR [ebp-0x14],0x20
64018472:	jmp    0x64018adf
64018477:	movzx  eax,WORD PTR [esi]
6401847a:	cmp    ax,0x36
6401847e:	jne    0x64018499
64018480:	cmp    WORD PTR [esi+0x2],0x34
64018485:	jne    0x64018499
64018487:	add    esi,0x4
6401848a:	or     DWORD PTR [ebp-0x14],0x8000
64018491:	mov    DWORD PTR [ebp-0x4c],esi
64018494:	jmp    0x64018adf
64018499:	cmp    ax,0x33
6401849d:	jne    0x640184b8
6401849f:	cmp    WORD PTR [esi+0x2],0x32
640184a4:	jne    0x640184b8
640184a6:	add    esi,0x4
640184a9:	and    DWORD PTR [ebp-0x14],0xffff7fff
640184b0:	mov    DWORD PTR [ebp-0x4c],esi
640184b3:	jmp    0x64018adf
640184b8:	cmp    ax,0x64
640184bc:	je     0x64018adf
640184c2:	cmp    ax,0x69
640184c6:	je     0x64018adf
640184cc:	cmp    ax,0x6f
640184d0:	je     0x64018adf
640184d6:	cmp    ax,0x75
640184da:	je     0x64018adf
640184e0:	cmp    ax,0x78
640184e4:	je     0x64018adf
640184ea:	cmp    ax,0x58
640184ee:	je     0x64018adf
640184f4:	and    DWORD PTR [ebp-0x68],0x0
640184f8:	mov    eax,DWORD PTR [ebp-0x3c]
640184fb:	push   edx
640184fc:	lea    esi,[ebp-0x2c]
640184ff:	mov    DWORD PTR [ebp-0x34],0x1
64018506:	call   0x64018b59
6401850b:	jmp    0x64018ade
64018510:	movzx  eax,dx
64018513:	cmp    eax,0x64
64018516:	jg     0x640186c3
6401851c:	je     0x64018742
64018522:	cmp    eax,0x53
64018525:	jg     0x64018602
6401852b:	je     0x6401858c
6401852d:	sub    eax,0x41
64018530:	je     0x64018542
64018532:	sub    eax,edi
64018534:	je     0x64018577
64018536:	sub    eax,edi
64018538:	je     0x64018542
6401853a:	sub    eax,edi
6401853c:	jne    0x640189c3
64018542:	add    edx,0x20
64018545:	mov    DWORD PTR [ebp-0x6c],0x1
6401854c:	mov    DWORD PTR [ebp-0x24],edx
6401854f:	or     DWORD PTR [ebp-0x14],0x40
64018553:	cmp    DWORD PTR [ebp-0x18],0x0
64018557:	lea    esi,[ebp-0x10]
6401855a:	mov    eax,0x200
6401855f:	mov    DWORD PTR [ebp-0x1c],esi
64018562:	mov    DWORD PTR [ebp-0x20],eax
64018565:	jge    0x64018766
6401856b:	mov    DWORD PTR [ebp-0x18],0x6
64018572:	jmp    0x640187b3
64018577:	test   WORD PTR [ebp-0x14],0x830
6401857d:	jne    0x6401861f
64018583:	or     DWORD PTR [ebp-0x14],0x20
64018587:	jmp    0x6401861f
6401858c:	test   WORD PTR [ebp-0x14],0x830
64018592:	jne    0x64018598
64018594:	or     DWORD PTR [ebp-0x14],0x20
64018598:	mov    edi,DWORD PTR [ebp-0x18]
6401859b:	cmp    edi,0xffffffff
6401859e:	jne    0x640185a5
640185a0:	mov    edi,0x7fffffff
640185a5:	add    ebx,0x4
640185a8:	test   BYTE PTR [ebp-0x14],0x20
640185ac:	mov    DWORD PTR [ebp-0x28],ebx
640185af:	mov    ebx,DWORD PTR [ebx-0x4]
640185b2:	mov    DWORD PTR [ebp-0x1c],ebx
640185b5:	je     0x64018996
640185bb:	test   ebx,ebx
640185bd:	jne    0x640185c7
640185bf:	mov    eax,ds:0x6402f950
640185c4:	mov    DWORD PTR [ebp-0x1c],eax
640185c7:	and    DWORD PTR [ebp-0x20],0x0
640185cb:	test   edi,edi
640185cd:	mov    esi,DWORD PTR [ebp-0x1c]
640185d0:	jle    0x640189c3
640185d6:	mov    al,BYTE PTR [esi]
640185d8:	test   al,al
640185da:	je     0x640189c3
640185e0:	lea    ecx,[ebp-0x64]
640185e3:	movzx  eax,al
640185e6:	push   ecx
640185e7:	push   eax
640185e8:	call   0x6401b380
640185ed:	test   eax,eax
640185ef:	pop    ecx
640185f0:	pop    ecx
640185f1:	je     0x640185f4
640185f3:	inc    esi
640185f4:	inc    esi
640185f5:	inc    DWORD PTR [ebp-0x20]
640185f8:	cmp    DWORD PTR [ebp-0x20],edi
640185fb:	jl     0x640185d6
640185fd:	jmp    0x640189c3
64018602:	sub    eax,0x58
64018605:	je     0x6401884e
6401860b:	sub    eax,edi
6401860d:	je     0x64018676
6401860f:	sub    eax,ecx
64018611:	je     0x6401854f
64018617:	sub    eax,edi
64018619:	jne    0x640189c3
6401861f:	movzx  eax,WORD PTR [ebx]
64018622:	add    ebx,0x4
64018625:	xor    esi,esi
64018627:	inc    esi
64018628:	test   BYTE PTR [ebp-0x14],0x20
6401862c:	mov    DWORD PTR [ebp-0x34],esi
6401862f:	mov    DWORD PTR [ebp-0x28],ebx
64018632:	mov    DWORD PTR [ebp-0x70],eax
64018635:	je     0x64018664
64018637:	mov    BYTE PTR [ebp-0x40],al
6401863a:	lea    eax,[ebp-0x64]
6401863d:	push   eax
6401863e:	mov    eax,DWORD PTR [ebp-0x64]
64018641:	mov    BYTE PTR [ebp-0x3f],0x0
64018645:	push   DWORD PTR [eax+0xac]
6401864b:	lea    eax,[ebp-0x40]
6401864e:	push   eax
6401864f:	lea    eax,[ebp-0x10]
64018652:	push   eax
64018653:	call   0x6401dfbe
64018658:	add    esp,0x10
6401865b:	test   eax,eax
6401865d:	jge    0x64018668
6401865f:	mov    DWORD PTR [ebp-0x48],esi
64018662:	jmp    0x64018668
64018664:	mov    WORD PTR [ebp-0x10],ax
64018668:	lea    eax,[ebp-0x10]
6401866b:	mov    DWORD PTR [ebp-0x1c],eax
6401866e:	mov    DWORD PTR [ebp-0x20],esi
64018671:	jmp    0x640189c3
64018676:	mov    eax,DWORD PTR [ebx]
64018678:	add    ebx,0x4
6401867b:	test   eax,eax
6401867d:	mov    DWORD PTR [ebp-0x28],ebx
64018680:	je     0x640186af
64018682:	mov    ecx,DWORD PTR [eax+0x4]
64018685:	test   ecx,ecx
64018687:	je     0x640186af
64018689:	test   WORD PTR [ebp-0x14],0x800
6401868f:	movsx  eax,WORD PTR [eax]
64018692:	mov    DWORD PTR [ebp-0x1c],ecx
64018695:	je     0x640186a6
64018697:	cdq    
64018698:	sub    eax,edx
6401869a:	mov    DWORD PTR [ebp-0x34],0x1
640186a1:	jmp    0x640189be
640186a6:	and    DWORD PTR [ebp-0x34],0x0
640186aa:	jmp    0x640189c0
640186af:	mov    eax,ds:0x6402f950
640186b4:	mov    DWORD PTR [ebp-0x1c],eax
640186b7:	push   eax
640186b8:	call   0x64015730
640186bd:	pop    ecx
640186be:	jmp    0x640189c0
640186c3:	cmp    eax,0x70
640186c6:	jg     0x64018853
640186cc:	je     0x64018847
640186d2:	cmp    eax,0x65
640186d5:	jl     0x640189c3
640186db:	cmp    eax,0x67
640186de:	jle    0x6401854f
640186e4:	cmp    eax,0x69
640186e7:	je     0x64018742
640186e9:	cmp    eax,0x6e
640186ec:	je     0x6401870d
640186ee:	cmp    eax,0x6f
640186f1:	jne    0x640189c3
640186f7:	test   BYTE PTR [ebp-0x14],0x80
640186fb:	mov    DWORD PTR [ebp-0x24],0x8
64018702:	je     0x6401874d
64018704:	or     DWORD PTR [ebp-0x14],0x200
6401870b:	jmp    0x6401874d
6401870d:	mov    esi,DWORD PTR [ebx]
6401870f:	add    ebx,0x4
64018712:	mov    DWORD PTR [ebp-0x28],ebx
64018715:	call   0x6401dfa8
6401871a:	test   eax,eax
6401871c:	je     0x64018afa
64018722:	test   BYTE PTR [ebp-0x14],0x20
64018726:	je     0x64018731
64018728:	mov    ax,WORD PTR [ebp-0x2c]
6401872c:	mov    WORD PTR [esi],ax
6401872f:	jmp    0x64018736
64018731:	mov    eax,DWORD PTR [ebp-0x2c]
64018734:	mov    DWORD PTR [esi],eax
64018736:	mov    DWORD PTR [ebp-0x48],0x1
6401873d:	jmp    0x64018acc
64018742:	or     DWORD PTR [ebp-0x14],0x40
64018746:	mov    DWORD PTR [ebp-0x24],0xa
6401874d:	test   WORD PTR [ebp-0x14],0x8000
64018753:	je     0x6401889d
64018759:	mov    eax,DWORD PTR [ebx]
6401875b:	mov    edx,DWORD PTR [ebx+0x4]
6401875e:	add    ebx,0x8
64018761:	jmp    0x640188d6
64018766:	jne    0x64018777
64018768:	cmp    dx,0x67
6401876c:	jne    0x640187b3
6401876e:	mov    DWORD PTR [ebp-0x18],0x1
64018775:	jmp    0x640187b3
64018777:	cmp    DWORD PTR [ebp-0x18],eax
6401877a:	jle    0x6401877f
6401877c:	mov    DWORD PTR [ebp-0x18],eax
6401877f:	cmp    DWORD PTR [ebp-0x18],0xa3
64018786:	jle    0x640187b3
64018788:	mov    edi,DWORD PTR [ebp-0x18]
6401878b:	add    edi,0x15d
64018791:	push   edi
64018792:	call   0x64017240
64018797:	test   eax,eax
64018799:	mov    edx,DWORD PTR [ebp-0x24]
6401879c:	pop    ecx
6401879d:	mov    DWORD PTR [ebp-0x50],eax
640187a0:	je     0x640187ac
640187a2:	mov    DWORD PTR [ebp-0x1c],eax
640187a5:	mov    DWORD PTR [ebp-0x20],edi
640187a8:	mov    esi,eax
640187aa:	jmp    0x640187b3
640187ac:	mov    DWORD PTR [ebp-0x18],0xa3
640187b3:	mov    eax,DWORD PTR [ebx]
640187b5:	add    ebx,0x8
640187b8:	mov    DWORD PTR [ebp-0x78],eax
640187bb:	mov    eax,DWORD PTR [ebx-0x4]
640187be:	mov    DWORD PTR [ebp-0x74],eax
640187c1:	lea    eax,[ebp-0x64]
640187c4:	push   eax
640187c5:	push   DWORD PTR [ebp-0x6c]
640187c8:	movsx  eax,dl
640187cb:	push   DWORD PTR [ebp-0x18]
640187ce:	mov    DWORD PTR [ebp-0x28],ebx
640187d1:	push   eax
640187d2:	push   DWORD PTR [ebp-0x20]
640187d5:	lea    eax,[ebp-0x78]
640187d8:	push   esi
640187d9:	push   eax
640187da:	push   DWORD PTR ds:0x6402fb64
640187e0:	call   0x64015e5f
640187e5:	pop    ecx
640187e6:	call   eax
640187e8:	mov    ebx,DWORD PTR [ebp-0x14]
640187eb:	add    esp,0x1c
640187ee:	and    ebx,0x80
640187f4:	je     0x64018811
640187f6:	cmp    DWORD PTR [ebp-0x18],0x0
640187fa:	jne    0x64018811
640187fc:	lea    eax,[ebp-0x64]
640187ff:	push   eax
64018800:	push   esi
64018801:	push   DWORD PTR ds:0x6402fb70
64018807:	call   0x64015e5f
6401880c:	pop    ecx
6401880d:	call   eax
6401880f:	pop    ecx
64018810:	pop    ecx
64018811:	cmp    WORD PTR [ebp-0x24],0x67
64018816:	jne    0x64018831
64018818:	test   ebx,ebx
6401881a:	jne    0x64018831
6401881c:	lea    eax,[ebp-0x64]
6401881f:	push   eax
64018820:	push   esi
64018821:	push   DWORD PTR ds:0x6402fb6c
64018827:	call   0x64015e5f
6401882c:	pop    ecx
6401882d:	call   eax
6401882f:	pop    ecx
64018830:	pop    ecx
64018831:	cmp    BYTE PTR [esi],0x2d
64018834:	jne    0x64018841
64018836:	or     DWORD PTR [ebp-0x14],0x100
6401883d:	inc    esi
6401883e:	mov    DWORD PTR [ebp-0x1c],esi
64018841:	push   esi
64018842:	jmp    0x640186b8
64018847:	mov    DWORD PTR [ebp-0x18],0x8
6401884e:	mov    DWORD PTR [ebp-0x54],ecx
64018851:	jmp    0x64018874
64018853:	sub    eax,0x73
64018856:	je     0x64018598
6401885c:	sub    eax,edi
6401885e:	je     0x64018746
64018864:	sub    eax,0x3
64018867:	jne    0x640189c3
6401886d:	mov    DWORD PTR [ebp-0x54],0x27
64018874:	test   BYTE PTR [ebp-0x14],0x80
64018878:	mov    DWORD PTR [ebp-0x24],0x10
6401887f:	je     0x6401874d
64018885:	mov    eax,DWORD PTR [ebp-0x54]
64018888:	add    eax,0x51
6401888b:	mov    WORD PTR [ebp-0x44],0x30
64018891:	mov    WORD PTR [ebp-0x42],ax
64018895:	mov    DWORD PTR [ebp-0x30],edi
64018898:	jmp    0x6401874d
6401889d:	test   WORD PTR [ebp-0x14],0x1000
640188a3:	jne    0x64018759
640188a9:	add    ebx,0x4
640188ac:	test   BYTE PTR [ebp-0x14],0x20
640188b0:	je     0x640188c8
640188b2:	test   BYTE PTR [ebp-0x14],0x40
640188b6:	mov    DWORD PTR [ebp-0x28],ebx
640188b9:	je     0x640188c1
640188bb:	movsx  eax,WORD PTR [ebx-0x4]
640188bf:	jmp    0x640188c5
640188c1:	movzx  eax,WORD PTR [ebx-0x4]
640188c5:	cdq    
640188c6:	jmp    0x640188d9
640188c8:	test   BYTE PTR [ebp-0x14],0x40
640188cc:	mov    eax,DWORD PTR [ebx-0x4]
640188cf:	je     0x640188d4
640188d1:	cdq    
640188d2:	jmp    0x640188d6
640188d4:	xor    edx,edx
640188d6:	mov    DWORD PTR [ebp-0x28],ebx
640188d9:	test   BYTE PTR [ebp-0x14],0x40
640188dd:	je     0x640188f7
640188df:	test   edx,edx
640188e1:	jg     0x640188f7
640188e3:	jl     0x640188e9
640188e5:	test   eax,eax
640188e7:	jae    0x640188f7
640188e9:	neg    eax
640188eb:	adc    edx,0x0
640188ee:	neg    edx
640188f0:	or     DWORD PTR [ebp-0x14],0x100
640188f7:	test   WORD PTR [ebp-0x14],0x9000
640188fd:	mov    ebx,edx
640188ff:	mov    edi,eax
64018901:	jne    0x64018905
64018903:	xor    ebx,ebx
64018905:	cmp    DWORD PTR [ebp-0x18],0x0
64018909:	jge    0x64018914
6401890b:	mov    DWORD PTR [ebp-0x18],0x1
64018912:	jmp    0x64018925
64018914:	and    DWORD PTR [ebp-0x14],0xfffffff7
64018918:	mov    eax,0x200
6401891d:	cmp    DWORD PTR [ebp-0x18],eax
64018920:	jle    0x64018925
64018922:	mov    DWORD PTR [ebp-0x18],eax
64018925:	mov    eax,edi
64018927:	or     eax,ebx
64018929:	jne    0x6401892e
6401892b:	and    DWORD PTR [ebp-0x30],eax
6401892e:	lea    esi,[ebp+0x1ef]
64018934:	mov    eax,DWORD PTR [ebp-0x18]
64018937:	dec    DWORD PTR [ebp-0x18]
6401893a:	test   eax,eax
6401893c:	jg     0x64018944
6401893e:	mov    eax,edi
64018940:	or     eax,ebx
64018942:	je     0x64018968
64018944:	mov    eax,DWORD PTR [ebp-0x24]
64018947:	cdq    
64018948:	push   edx
64018949:	push   eax
6401894a:	push   ebx
6401894b:	push   edi
6401894c:	call   0x6401ae50
64018951:	add    ecx,0x30
64018954:	cmp    ecx,0x39
64018957:	mov    DWORD PTR [ebp-0x7c],ebx
6401895a:	mov    edi,eax
6401895c:	mov    ebx,edx
6401895e:	jle    0x64018963
64018960:	add    ecx,DWORD PTR [ebp-0x54]
64018963:	mov    BYTE PTR [esi],cl
64018965:	dec    esi
64018966:	jmp    0x64018934
64018968:	lea    eax,[ebp+0x1ef]
6401896e:	sub    eax,esi
64018970:	inc    esi
64018971:	test   WORD PTR [ebp-0x14],0x200
64018977:	mov    DWORD PTR [ebp-0x20],eax
6401897a:	mov    DWORD PTR [ebp-0x1c],esi
6401897d:	je     0x640189c3
6401897f:	test   eax,eax
64018981:	je     0x6401898a
64018983:	mov    ecx,esi
64018985:	cmp    BYTE PTR [ecx],0x30
64018988:	je     0x640189c3
6401898a:	dec    DWORD PTR [ebp-0x1c]
6401898d:	mov    ecx,DWORD PTR [ebp-0x1c]
64018990:	mov    BYTE PTR [ecx],0x30
64018993:	inc    eax
64018994:	jmp    0x640189c0
64018996:	test   ebx,ebx
64018998:	jne    0x640189a2
6401899a:	mov    eax,ds:0x6402f954
6401899f:	mov    DWORD PTR [ebp-0x1c],eax
640189a2:	mov    eax,DWORD PTR [ebp-0x1c]
640189a5:	mov    DWORD PTR [ebp-0x34],0x1
640189ac:	jmp    0x640189b7
640189ae:	dec    edi
640189af:	cmp    WORD PTR [eax],0x0
640189b3:	je     0x640189bb
640189b5:	inc    eax
640189b6:	inc    eax
640189b7:	test   edi,edi
640189b9:	jne    0x640189ae
640189bb:	sub    eax,DWORD PTR [ebp-0x1c]
640189be:	sar    eax,1
640189c0:	mov    DWORD PTR [ebp-0x20],eax
640189c3:	cmp    DWORD PTR [ebp-0x48],0x0
640189c7:	jne    0x64018acc
640189cd:	mov    eax,DWORD PTR [ebp-0x14]
640189d0:	test   al,0x40
640189d2:	je     0x640189ff
640189d4:	test   ax,0x100
640189d8:	je     0x640189e2
640189da:	mov    WORD PTR [ebp-0x44],0x2d
640189e0:	jmp    0x640189f8
640189e2:	test   al,0x1
640189e4:	je     0x640189ee
640189e6:	mov    WORD PTR [ebp-0x44],0x2b
640189ec:	jmp    0x640189f8
640189ee:	test   al,0x2
640189f0:	je     0x640189ff
640189f2:	mov    WORD PTR [ebp-0x44],0x20
640189f8:	mov    DWORD PTR [ebp-0x30],0x1
640189ff:	mov    ebx,DWORD PTR [ebp-0x38]
64018a02:	mov    esi,DWORD PTR [ebp-0x20]
64018a05:	sub    ebx,esi
64018a07:	sub    ebx,DWORD PTR [ebp-0x30]
64018a0a:	test   BYTE PTR [ebp-0x14],0xc
64018a0e:	jne    0x64018a21
64018a10:	push   DWORD PTR [ebp-0x3c]
64018a13:	lea    eax,[ebp-0x2c]
64018a16:	push   ebx
64018a17:	push   0x20
64018a19:	call   0x640181d5
64018a1e:	add    esp,0xc
64018a21:	push   DWORD PTR [ebp-0x30]
64018a24:	mov    edi,DWORD PTR [ebp-0x3c]
64018a27:	lea    eax,[ebp-0x2c]
64018a2a:	lea    ecx,[ebp-0x44]
64018a2d:	call   0x640181fa
64018a32:	test   BYTE PTR [ebp-0x14],0x8
64018a36:	pop    ecx
64018a37:	je     0x64018a4e
64018a39:	test   BYTE PTR [ebp-0x14],0x4
64018a3d:	jne    0x64018a4e
64018a3f:	push   edi
64018a40:	push   ebx
64018a41:	push   0x30
64018a43:	lea    eax,[ebp-0x2c]
64018a46:	call   0x640181d5
64018a4b:	add    esp,0xc
64018a4e:	cmp    DWORD PTR [ebp-0x34],0x0
64018a52:	jne    0x64018aa2
64018a54:	test   esi,esi
64018a56:	jle    0x64018aa2
64018a58:	mov    edi,DWORD PTR [ebp-0x1c]
64018a5b:	mov    DWORD PTR [ebp-0x24],esi
64018a5e:	dec    DWORD PTR [ebp-0x24]
64018a61:	lea    eax,[ebp-0x64]
64018a64:	push   eax
64018a65:	mov    eax,DWORD PTR [ebp-0x64]
64018a68:	push   DWORD PTR [eax+0xac]
64018a6e:	lea    eax,[ebp-0x70]
64018a71:	push   edi
64018a72:	push   eax
64018a73:	call   0x6401dfbe
64018a78:	add    esp,0x10
64018a7b:	test   eax,eax
64018a7d:	mov    DWORD PTR [ebp-0x7c],eax
64018a80:	jle    0x64018a9c
64018a82:	push   DWORD PTR [ebp-0x70]
64018a85:	mov    eax,DWORD PTR [ebp-0x3c]
64018a88:	lea    esi,[ebp-0x2c]
64018a8b:	call   0x64018b59
64018a90:	add    edi,DWORD PTR [ebp-0x7c]
64018a93:	cmp    DWORD PTR [ebp-0x24],0x0
64018a97:	pop    ecx
64018a98:	jg     0x64018a5e
64018a9a:	jmp    0x64018aaf
64018a9c:	or     DWORD PTR [ebp-0x2c],0xffffffff
64018aa0:	jmp    0x64018aaf
64018aa2:	mov    ecx,DWORD PTR [ebp-0x1c]
64018aa5:	push   esi
64018aa6:	lea    eax,[ebp-0x2c]
64018aa9:	call   0x640181fa
64018aae:	pop    ecx
64018aaf:	cmp    DWORD PTR [ebp-0x2c],0x0
64018ab3:	jl     0x64018acc
64018ab5:	test   BYTE PTR [ebp-0x14],0x4
64018ab9:	je     0x64018acc
64018abb:	push   DWORD PTR [ebp-0x3c]
64018abe:	lea    eax,[ebp-0x2c]
64018ac1:	push   ebx
64018ac2:	push   0x20
64018ac4:	call   0x640181d5
64018ac9:	add    esp,0xc
64018acc:	cmp    DWORD PTR [ebp-0x50],0x0
64018ad0:	je     0x64018adf
64018ad2:	push   DWORD PTR [ebp-0x50]
64018ad5:	call   0x64014e06
64018ada:	and    DWORD PTR [ebp-0x50],0x0
64018ade:	pop    ecx
64018adf:	mov    esi,DWORD PTR [ebp-0x4c]
64018ae2:	movzx  eax,WORD PTR [esi]
64018ae5:	test   ax,ax
64018ae8:	mov    DWORD PTR [ebp-0x24],eax
64018aeb:	je     0x64018b11
64018aed:	mov    ecx,DWORD PTR [ebp-0x68]
64018af0:	mov    ebx,DWORD PTR [ebp-0x28]
64018af3:	mov    edx,eax
64018af5:	jmp    0x640182f4
64018afa:	call   0x64015d30
64018aff:	mov    DWORD PTR [eax],0x16
64018b05:	xor    eax,eax
64018b07:	push   eax
64018b08:	push   eax
64018b09:	push   eax
64018b0a:	push   eax
64018b0b:	push   eax
64018b0c:	jmp    0x640182b9
64018b11:	cmp    BYTE PTR [ebp-0x58],0x0
64018b15:	je     0x64018b1e
64018b17:	mov    eax,DWORD PTR [ebp-0x5c]
64018b1a:	and    DWORD PTR [eax+0x70],0xfffffffd
64018b1e:	mov    eax,DWORD PTR [ebp-0x2c]
64018b21:	mov    ecx,DWORD PTR [ebp+0x3f0]
64018b27:	pop    edi
64018b28:	pop    esi
64018b29:	xor    ecx,ebp
64018b2b:	pop    ebx
64018b2c:	call   0x64013f6c
64018b31:	add    ebp,0x3f4
64018b37:	leave  
64018b38:	ret    
64018b39:	clc    
64018b3a:	test   BYTE PTR [ecx],al
64018b3c:	fs inc eax
64018b3e:	add    DWORD PTR [ecx],0x64
64018b41:	pop    ebp
64018b42:	add    DWORD PTR [ecx],0x64
64018b45:	stos   DWORD PTR es:[edi],eax
64018b46:	add    DWORD PTR [ecx],0x64
64018b49:	out    0x83,al
64018b4b:	add    DWORD PTR [edi+ebp*8-0x7d],esp
64018b4f:	add    DWORD PTR [edi+eiz*1-0x7c],esp
64018b53:	add    DWORD PTR [eax+edx*1-0x7b],esp
64018b57:	add    DWORD PTR [esi+esi*8+0x40],esp
64018b5b:	or     al,0x40
64018b5d:	je     0x64018b65
64018b5f:	cmp    DWORD PTR [eax+0x8],0x0
64018b63:	je     0x64018b7b
64018b65:	push   eax
64018b66:	push   DWORD PTR [esp+0x8]
64018b6a:	call   0x6401ddca
64018b6f:	cmp    ax,0xffff
64018b73:	pop    ecx
64018b74:	pop    ecx
64018b75:	jne    0x64018b7b
64018b77:	or     DWORD PTR [esi],0xffffffff
64018b7a:	ret    
64018b7b:	inc    DWORD PTR [esi]
64018b7d:	ret    
64018b7e:	push   ebp
64018b7f:	lea    ebp,[esp-0x3f4]
64018b86:	sub    esp,0x474
64018b8c:	mov    eax,ds:0x6402f09c
64018b91:	xor    eax,ebp
64018b93:	mov    DWORD PTR [ebp+0x3f0],eax
64018b99:	push   ebx
64018b9a:	mov    ebx,DWORD PTR [ebp+0x408]
64018ba0:	push   esi
64018ba1:	mov    esi,DWORD PTR [ebp+0x3fc]
64018ba7:	xor    eax,eax
64018ba9:	push   edi
64018baa:	push   DWORD PTR [ebp+0x404]
64018bb0:	mov    edi,DWORD PTR [ebp+0x400]
64018bb6:	lea    ecx,[ebp-0x58]
64018bb9:	mov    DWORD PTR [ebp-0x48],esi
64018bbc:	mov    DWORD PTR [ebp-0x24],ebx
64018bbf:	mov    DWORD PTR [ebp-0x60],eax
64018bc2:	mov    DWORD PTR [ebp-0x14],eax
64018bc5:	mov    DWORD PTR [ebp-0x38],eax
64018bc8:	mov    DWORD PTR [ebp-0x18],eax
64018bcb:	mov    DWORD PTR [ebp-0x30],eax
64018bce:	mov    DWORD PTR [ebp-0x5c],eax
64018bd1:	mov    DWORD PTR [ebp-0x34],eax
64018bd4:	call   0x6401410f
64018bd9:	test   esi,esi
64018bdb:	jne    0x64018c0c
64018bdd:	call   0x64015d30
64018be2:	mov    DWORD PTR [eax],0x16
64018be8:	xor    eax,eax
64018bea:	push   eax
64018beb:	push   eax
64018bec:	push   eax
64018bed:	push   eax
64018bee:	push   eax
64018bef:	call   0x64013aa4
64018bf4:	add    esp,0x14
64018bf7:	cmp    BYTE PTR [ebp-0x4c],0x0
64018bfb:	je     0x64018c04
64018bfd:	mov    eax,DWORD PTR [ebp-0x50]
64018c00:	and    DWORD PTR [eax+0x70],0xfffffffd
64018c04:	or     eax,0xffffffff
64018c07:	jmp    0x64019462
64018c0c:	xor    esi,esi
64018c0e:	cmp    edi,esi
64018c10:	jne    0x64018c24
64018c12:	call   0x64015d30
64018c17:	push   esi
64018c18:	push   esi
64018c19:	push   esi
64018c1a:	push   esi
64018c1b:	mov    DWORD PTR [eax],0x16
64018c21:	push   esi
64018c22:	jmp    0x64018bef
64018c24:	movzx  ecx,WORD PTR [edi]
64018c27:	cmp    cx,si
64018c2a:	mov    DWORD PTR [ebp-0x2c],esi
64018c2d:	mov    DWORD PTR [ebp-0x20],esi
64018c30:	mov    DWORD PTR [ebp-0x40],esi
64018c33:	mov    DWORD PTR [ebp-0x64],esi
64018c36:	mov    DWORD PTR [ebp-0x28],ecx
64018c39:	je     0x64019452
64018c3f:	push   0x2
64018c41:	pop    esi
64018c42:	add    edi,esi
64018c44:	xor    eax,eax
64018c46:	cmp    DWORD PTR [ebp-0x2c],eax
64018c49:	mov    DWORD PTR [ebp-0x6c],edi
64018c4c:	jl     0x64019442
64018c52:	lea    edx,[ecx-0x20]
64018c55:	cmp    dx,0x58
64018c59:	ja     0x64018c68
64018c5b:	movzx  eax,cx
64018c5e:	movzx  eax,BYTE PTR [eax+0x64028490]
64018c65:	and    eax,0xf
64018c68:	mov    edx,DWORD PTR [ebp-0x40]
64018c6b:	imul   eax,eax,0x9
64018c6e:	movzx  eax,BYTE PTR [eax+edx*1+0x640284b0]
64018c76:	push   0x8
64018c78:	shr    eax,0x4
64018c7b:	pop    edx
64018c7c:	cmp    eax,edx
64018c7e:	mov    DWORD PTR [ebp-0x40],eax
64018c81:	je     0x64018bdd
64018c87:	cmp    eax,0x7
64018c8a:	ja     0x6401942a
64018c90:	jmp    DWORD PTR [eax*4+0x6401947a]
64018c97:	xor    eax,eax
64018c99:	or     DWORD PTR [ebp-0x18],0xffffffff
64018c9d:	mov    DWORD PTR [ebp-0x68],eax
64018ca0:	mov    DWORD PTR [ebp-0x5c],eax
64018ca3:	mov    DWORD PTR [ebp-0x38],eax
64018ca6:	mov    DWORD PTR [ebp-0x30],eax
64018ca9:	mov    DWORD PTR [ebp-0x14],eax
64018cac:	mov    DWORD PTR [ebp-0x34],eax
64018caf:	jmp    0x64019430
64018cb4:	movzx  eax,cx
64018cb7:	sub    eax,0x20
64018cba:	je     0x64018cf8
64018cbc:	sub    eax,0x3
64018cbf:	je     0x64018cec
64018cc1:	sub    eax,edx
64018cc3:	je     0x64018ce3
64018cc5:	sub    eax,esi
64018cc7:	je     0x64018cda
64018cc9:	sub    eax,0x3
64018ccc:	jne    0x6401942a
64018cd2:	or     DWORD PTR [ebp-0x14],edx
64018cd5:	jmp    0x64019430
64018cda:	or     DWORD PTR [ebp-0x14],0x4
64018cde:	jmp    0x64019430
64018ce3:	or     DWORD PTR [ebp-0x14],0x1
64018ce7:	jmp    0x64019430
64018cec:	or     DWORD PTR [ebp-0x14],0x80
64018cf3:	jmp    0x64019430
64018cf8:	or     DWORD PTR [ebp-0x14],esi
64018cfb:	jmp    0x64019430
64018d00:	cmp    cx,0x2a
64018d04:	jne    0x64018d25
64018d06:	mov    eax,DWORD PTR [ebx]
64018d08:	add    ebx,0x4
64018d0b:	test   eax,eax
64018d0d:	mov    DWORD PTR [ebp-0x24],ebx
64018d10:	mov    DWORD PTR [ebp-0x38],eax
64018d13:	jge    0x64019430
64018d19:	or     DWORD PTR [ebp-0x14],0x4
64018d1d:	neg    DWORD PTR [ebp-0x38]
64018d20:	jmp    0x64019430
64018d25:	mov    eax,DWORD PTR [ebp-0x38]
64018d28:	imul   eax,eax,0xa
64018d2b:	movzx  ecx,cx
64018d2e:	lea    eax,[eax+ecx*1-0x30]
64018d32:	mov    DWORD PTR [ebp-0x38],eax
64018d35:	jmp    0x64019430
64018d3a:	and    DWORD PTR [ebp-0x18],0x0
64018d3e:	jmp    0x64019430
64018d43:	cmp    cx,0x2a
64018d47:	jne    0x64018d65
64018d49:	mov    eax,DWORD PTR [ebx]
64018d4b:	add    ebx,0x4
64018d4e:	test   eax,eax
64018d50:	mov    DWORD PTR [ebp-0x24],ebx
64018d53:	mov    DWORD PTR [ebp-0x18],eax
64018d56:	jge    0x64019430
64018d5c:	or     DWORD PTR [ebp-0x18],0xffffffff
64018d60:	jmp    0x64019430
64018d65:	mov    eax,DWORD PTR [ebp-0x18]
64018d68:	imul   eax,eax,0xa
64018d6b:	movzx  ecx,cx
64018d6e:	lea    eax,[eax+ecx*1-0x30]
64018d72:	mov    DWORD PTR [ebp-0x18],eax
64018d75:	jmp    0x64019430
64018d7a:	movzx  eax,cx
64018d7d:	cmp    eax,0x49
64018d80:	je     0x64018dc7
64018d82:	cmp    eax,0x68
64018d85:	je     0x64018dbe
64018d87:	cmp    eax,0x6c
64018d8a:	je     0x64018da1
64018d8c:	cmp    eax,0x77
64018d8f:	jne    0x64019430
64018d95:	or     DWORD PTR [ebp-0x14],0x800
64018d9c:	jmp    0x64019430
64018da1:	cmp    WORD PTR [edi],0x6c
64018da5:	jne    0x64018db5
64018da7:	add    edi,esi
64018da9:	or     DWORD PTR [ebp-0x14],0x1000
64018db0:	jmp    0x64019430
64018db5:	or     DWORD PTR [ebp-0x14],0x10
64018db9:	jmp    0x64019430
64018dbe:	or     DWORD PTR [ebp-0x14],0x20
64018dc2:	jmp    0x64019430
64018dc7:	movzx  eax,WORD PTR [edi]
64018dca:	cmp    ax,0x36
64018dce:	jne    0x64018de6
64018dd0:	cmp    WORD PTR [edi+0x2],0x34
64018dd5:	jne    0x64018de6
64018dd7:	add    edi,0x4
64018dda:	or     DWORD PTR [ebp-0x14],0x8000
64018de1:	jmp    0x64019430
64018de6:	cmp    ax,0x33
64018dea:	jne    0x64018e02
64018dec:	cmp    WORD PTR [edi+0x2],0x32
64018df1:	jne    0x64018e02
64018df3:	add    edi,0x4
64018df6:	and    DWORD PTR [ebp-0x14],0xffff7fff
64018dfd:	jmp    0x64019430
64018e02:	cmp    ax,0x64
64018e06:	je     0x64019430
64018e0c:	cmp    ax,0x69
64018e10:	je     0x64019430
64018e16:	cmp    ax,0x6f
64018e1a:	je     0x64019430
64018e20:	cmp    ax,0x75
64018e24:	je     0x64019430
64018e2a:	cmp    ax,0x78
64018e2e:	je     0x64019430
64018e34:	cmp    ax,0x58
64018e38:	je     0x64019430
64018e3e:	and    DWORD PTR [ebp-0x40],0x0
64018e42:	mov    eax,DWORD PTR [ebp-0x48]
64018e45:	push   ecx
64018e46:	lea    esi,[ebp-0x2c]
64018e49:	mov    DWORD PTR [ebp-0x34],0x1
64018e50:	call   0x64018b59
64018e55:	pop    ecx
64018e56:	jmp    0x64019430
64018e5b:	movzx  eax,cx
64018e5e:	cmp    eax,0x64
64018e61:	jg     0x6401900f
64018e67:	je     0x6401908a
64018e6d:	cmp    eax,0x53
64018e70:	jg     0x64018f4d
64018e76:	je     0x64018ed7
64018e78:	sub    eax,0x41
64018e7b:	je     0x64018e8d
64018e7d:	sub    eax,esi
64018e7f:	je     0x64018ec2
64018e81:	sub    eax,esi
64018e83:	je     0x64018e8d
64018e85:	sub    eax,esi
64018e87:	jne    0x6401930e
64018e8d:	add    ecx,0x20
64018e90:	mov    DWORD PTR [ebp-0x68],0x1
64018e97:	mov    DWORD PTR [ebp-0x28],ecx
64018e9a:	or     DWORD PTR [ebp-0x14],0x40
64018e9e:	cmp    DWORD PTR [ebp-0x18],0x0
64018ea2:	lea    esi,[ebp-0x10]
64018ea5:	mov    eax,0x200
64018eaa:	mov    DWORD PTR [ebp-0x1c],esi
64018ead:	mov    DWORD PTR [ebp-0x20],eax
64018eb0:	jge    0x640190ae
64018eb6:	mov    DWORD PTR [ebp-0x18],0x6
64018ebd:	jmp    0x640190fe
64018ec2:	test   WORD PTR [ebp-0x14],0x830
64018ec8:	jne    0x64018f6b
64018ece:	or     DWORD PTR [ebp-0x14],0x20
64018ed2:	jmp    0x64018f6b
64018ed7:	test   WORD PTR [ebp-0x14],0x830
64018edd:	jne    0x64018ee3
64018edf:	or     DWORD PTR [ebp-0x14],0x20
64018ee3:	mov    edi,DWORD PTR [ebp-0x18]
64018ee6:	cmp    edi,0xffffffff
64018ee9:	jne    0x64018ef0
64018eeb:	mov    edi,0x7fffffff
64018ef0:	add    ebx,0x4
64018ef3:	test   BYTE PTR [ebp-0x14],0x20
64018ef7:	mov    DWORD PTR [ebp-0x24],ebx
64018efa:	mov    ebx,DWORD PTR [ebx-0x4]
64018efd:	mov    DWORD PTR [ebp-0x1c],ebx
64018f00:	je     0x640192e1
64018f06:	test   ebx,ebx
64018f08:	jne    0x64018f12
64018f0a:	mov    eax,ds:0x6402f950
64018f0f:	mov    DWORD PTR [ebp-0x1c],eax
64018f12:	and    DWORD PTR [ebp-0x20],0x0
64018f16:	test   edi,edi
64018f18:	mov    esi,DWORD PTR [ebp-0x1c]
64018f1b:	jle    0x6401930e
64018f21:	mov    al,BYTE PTR [esi]
64018f23:	test   al,al
64018f25:	je     0x6401930e
64018f2b:	lea    ecx,[ebp-0x58]
64018f2e:	movzx  eax,al
64018f31:	push   ecx
64018f32:	push   eax
64018f33:	call   0x6401b380
64018f38:	test   eax,eax
64018f3a:	pop    ecx
64018f3b:	pop    ecx
64018f3c:	je     0x64018f3f
64018f3e:	inc    esi
64018f3f:	inc    esi
64018f40:	inc    DWORD PTR [ebp-0x20]
64018f43:	cmp    DWORD PTR [ebp-0x20],edi
64018f46:	jl     0x64018f21
64018f48:	jmp    0x6401930e
64018f4d:	sub    eax,0x58
64018f50:	je     0x64019195
64018f56:	sub    eax,esi
64018f58:	je     0x64018fc2
64018f5a:	sub    eax,0x7
64018f5d:	je     0x64018e9a
64018f63:	sub    eax,esi
64018f65:	jne    0x6401930e
64018f6b:	movzx  eax,WORD PTR [ebx]
64018f6e:	add    ebx,0x4
64018f71:	xor    esi,esi
64018f73:	inc    esi
64018f74:	test   BYTE PTR [ebp-0x14],0x20
64018f78:	mov    DWORD PTR [ebp-0x34],esi
64018f7b:	mov    DWORD PTR [ebp-0x24],ebx
64018f7e:	mov    DWORD PTR [ebp-0x70],eax
64018f81:	je     0x64018fb0
64018f83:	mov    BYTE PTR [ebp-0x44],al
64018f86:	lea    eax,[ebp-0x58]
64018f89:	push   eax
64018f8a:	mov    eax,DWORD PTR [ebp-0x58]
64018f8d:	mov    BYTE PTR [ebp-0x43],0x0
64018f91:	push   DWORD PTR [eax+0xac]
64018f97:	lea    eax,[ebp-0x44]
64018f9a:	push   eax
64018f9b:	lea    eax,[ebp-0x10]
64018f9e:	push   eax
64018f9f:	call   0x6401dfbe
64018fa4:	add    esp,0x10
64018fa7:	test   eax,eax
64018fa9:	jge    0x64018fb4
64018fab:	mov    DWORD PTR [ebp-0x5c],esi
64018fae:	jmp    0x64018fb4
64018fb0:	mov    WORD PTR [ebp-0x10],ax
64018fb4:	lea    eax,[ebp-0x10]
64018fb7:	mov    DWORD PTR [ebp-0x1c],eax
64018fba:	mov    DWORD PTR [ebp-0x20],esi
64018fbd:	jmp    0x6401930e
64018fc2:	mov    eax,DWORD PTR [ebx]
64018fc4:	add    ebx,0x4
64018fc7:	test   eax,eax
64018fc9:	mov    DWORD PTR [ebp-0x24],ebx
64018fcc:	je     0x64018ffb
64018fce:	mov    ecx,DWORD PTR [eax+0x4]
64018fd1:	test   ecx,ecx
64018fd3:	je     0x64018ffb
64018fd5:	test   WORD PTR [ebp-0x14],0x800
64018fdb:	movsx  eax,WORD PTR [eax]
64018fde:	mov    DWORD PTR [ebp-0x1c],ecx
64018fe1:	je     0x64018ff2
64018fe3:	cdq    
64018fe4:	sub    eax,edx
64018fe6:	mov    DWORD PTR [ebp-0x34],0x1
64018fed:	jmp    0x64019309
64018ff2:	and    DWORD PTR [ebp-0x34],0x0
64018ff6:	jmp    0x6401930b
64018ffb:	mov    eax,ds:0x6402f950
64019000:	mov    DWORD PTR [ebp-0x1c],eax
64019003:	push   eax
64019004:	call   0x64015730
64019009:	pop    ecx
6401900a:	jmp    0x6401930b
6401900f:	cmp    eax,0x70
64019012:	jg     0x6401919e
64019018:	je     0x64019192
6401901e:	cmp    eax,0x65
64019021:	jl     0x6401930e
64019027:	cmp    eax,0x67
6401902a:	jle    0x64018e9a
64019030:	cmp    eax,0x69
64019033:	je     0x6401908a
64019035:	cmp    eax,0x6e
64019038:	je     0x64019055
6401903a:	cmp    eax,0x6f
6401903d:	jne    0x6401930e
64019043:	test   BYTE PTR [ebp-0x14],0x80
64019047:	mov    DWORD PTR [ebp-0x28],edx
6401904a:	je     0x64019095
6401904c:	or     DWORD PTR [ebp-0x14],0x200
64019053:	jmp    0x64019095
64019055:	mov    esi,DWORD PTR [ebx]
64019057:	add    ebx,0x4
6401905a:	mov    DWORD PTR [ebp-0x24],ebx
6401905d:	call   0x6401dfa8
64019062:	test   eax,eax
64019064:	je     0x64018bdd
6401906a:	test   BYTE PTR [ebp-0x14],0x20
6401906e:	je     0x64019079
64019070:	mov    ax,WORD PTR [ebp-0x2c]
64019074:	mov    WORD PTR [esi],ax
64019077:	jmp    0x6401907e
64019079:	mov    eax,DWORD PTR [ebp-0x2c]
6401907c:	mov    DWORD PTR [esi],eax
6401907e:	mov    DWORD PTR [ebp-0x5c],0x1
64019085:	jmp    0x64019417
6401908a:	or     DWORD PTR [ebp-0x14],0x40
6401908e:	mov    DWORD PTR [ebp-0x28],0xa
64019095:	test   WORD PTR [ebp-0x14],0x8000
6401909b:	je     0x640191e8
640190a1:	add    ebx,edx
640190a3:	mov    eax,DWORD PTR [ebx-0x8]
640190a6:	mov    edx,DWORD PTR [ebx-0x4]
640190a9:	jmp    0x64019221
640190ae:	jne    0x640190bf
640190b0:	cmp    cx,0x67
640190b4:	jne    0x640190fe
640190b6:	mov    DWORD PTR [ebp-0x18],0x1
640190bd:	jmp    0x640190fe
640190bf:	cmp    DWORD PTR [ebp-0x18],eax
640190c2:	jle    0x640190c7
640190c4:	mov    DWORD PTR [ebp-0x18],eax
640190c7:	cmp    DWORD PTR [ebp-0x18],0xa3
640190ce:	jle    0x640190fe
640190d0:	mov    edi,DWORD PTR [ebp-0x18]
640190d3:	add    edi,0x15d
640190d9:	push   edi
640190da:	call   0x64017240
640190df:	test   eax,eax
640190e1:	pop    ecx
640190e2:	mov    ecx,DWORD PTR [ebp-0x28]
640190e5:	push   0x8
640190e7:	mov    DWORD PTR [ebp-0x64],eax
640190ea:	pop    edx
640190eb:	je     0x640190f7
640190ed:	mov    DWORD PTR [ebp-0x1c],eax
640190f0:	mov    DWORD PTR [ebp-0x20],edi
640190f3:	mov    esi,eax
640190f5:	jmp    0x640190fe
640190f7:	mov    DWORD PTR [ebp-0x18],0xa3
640190fe:	add    ebx,edx
64019100:	mov    eax,DWORD PTR [ebx-0x8]
64019103:	mov    DWORD PTR [ebp-0x78],eax
64019106:	mov    eax,DWORD PTR [ebx-0x4]
64019109:	mov    DWORD PTR [ebp-0x74],eax
6401910c:	lea    eax,[ebp-0x58]
6401910f:	push   eax
64019110:	push   DWORD PTR [ebp-0x68]
64019113:	movsx  eax,cl
64019116:	push   DWORD PTR [ebp-0x18]
64019119:	mov    DWORD PTR [ebp-0x24],ebx
6401911c:	push   eax
6401911d:	push   DWORD PTR [ebp-0x20]
64019120:	lea    eax,[ebp-0x78]
64019123:	push   esi
64019124:	push   eax
64019125:	push   DWORD PTR ds:0x6402fb64
6401912b:	call   0x64015e5f
64019130:	pop    ecx
64019131:	call   eax
64019133:	mov    ebx,DWORD PTR [ebp-0x14]
64019136:	add    esp,0x1c
64019139:	and    ebx,0x80
6401913f:	je     0x6401915c
64019141:	cmp    DWORD PTR [ebp-0x18],0x0
64019145:	jne    0x6401915c
64019147:	lea    eax,[ebp-0x58]
6401914a:	push   eax
6401914b:	push   esi
6401914c:	push   DWORD PTR ds:0x6402fb70
64019152:	call   0x64015e5f
64019157:	pop    ecx
64019158:	call   eax
6401915a:	pop    ecx
6401915b:	pop    ecx
6401915c:	cmp    WORD PTR [ebp-0x28],0x67
64019161:	jne    0x6401917c
64019163:	test   ebx,ebx
64019165:	jne    0x6401917c
64019167:	lea    eax,[ebp-0x58]
6401916a:	push   eax
6401916b:	push   esi
6401916c:	push   DWORD PTR ds:0x6402fb6c
64019172:	call   0x64015e5f
64019177:	pop    ecx
64019178:	call   eax
6401917a:	pop    ecx
6401917b:	pop    ecx
6401917c:	cmp    BYTE PTR [esi],0x2d
6401917f:	jne    0x6401918c
64019181:	or     DWORD PTR [ebp-0x14],0x100
64019188:	inc    esi
64019189:	mov    DWORD PTR [ebp-0x1c],esi
6401918c:	push   esi
6401918d:	jmp    0x64019004
64019192:	mov    DWORD PTR [ebp-0x18],edx
64019195:	mov    DWORD PTR [ebp-0x60],0x7
6401919c:	jmp    0x640191bf
6401919e:	sub    eax,0x73
640191a1:	je     0x64018ee3
640191a7:	sub    eax,esi
640191a9:	je     0x6401908e
640191af:	sub    eax,0x3
640191b2:	jne    0x6401930e
640191b8:	mov    DWORD PTR [ebp-0x60],0x27
640191bf:	test   BYTE PTR [ebp-0x14],0x80
640191c3:	mov    DWORD PTR [ebp-0x28],0x10
640191ca:	je     0x64019095
640191d0:	mov    eax,DWORD PTR [ebp-0x60]
640191d3:	add    eax,0x51
640191d6:	mov    WORD PTR [ebp-0x3c],0x30
640191dc:	mov    WORD PTR [ebp-0x3a],ax
640191e0:	mov    DWORD PTR [ebp-0x30],esi
640191e3:	jmp    0x64019095
640191e8:	test   WORD PTR [ebp-0x14],0x1000
640191ee:	jne    0x640190a1
640191f4:	add    ebx,0x4
640191f7:	test   BYTE PTR [ebp-0x14],0x20
640191fb:	je     0x64019213
640191fd:	test   BYTE PTR [ebp-0x14],0x40
64019201:	mov    DWORD PTR [ebp-0x24],ebx
64019204:	je     0x6401920c
64019206:	movsx  eax,WORD PTR [ebx-0x4]
6401920a:	jmp    0x64019210
6401920c:	movzx  eax,WORD PTR [ebx-0x4]
64019210:	cdq    
64019211:	jmp    0x64019224
64019213:	test   BYTE PTR [ebp-0x14],0x40
64019217:	mov    eax,DWORD PTR [ebx-0x4]
6401921a:	je     0x6401921f
6401921c:	cdq    
6401921d:	jmp    0x64019221
6401921f:	xor    edx,edx
64019221:	mov    DWORD PTR [ebp-0x24],ebx
64019224:	test   BYTE PTR [ebp-0x14],0x40
64019228:	je     0x64019242
6401922a:	test   edx,edx
6401922c:	jg     0x64019242
6401922e:	jl     0x64019234
64019230:	test   eax,eax
64019232:	jae    0x64019242
64019234:	neg    eax
64019236:	adc    edx,0x0
64019239:	neg    edx
6401923b:	or     DWORD PTR [ebp-0x14],0x100
64019242:	test   WORD PTR [ebp-0x14],0x9000
64019248:	mov    ebx,edx
6401924a:	mov    edi,eax
6401924c:	jne    0x64019250
6401924e:	xor    ebx,ebx
64019250:	cmp    DWORD PTR [ebp-0x18],0x0
64019254:	jge    0x6401925f
64019256:	mov    DWORD PTR [ebp-0x18],0x1
6401925d:	jmp    0x64019270
6401925f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64019263:	mov    eax,0x200
64019268:	cmp    DWORD PTR [ebp-0x18],eax
6401926b:	jle    0x64019270
6401926d:	mov    DWORD PTR [ebp-0x18],eax
64019270:	mov    eax,edi
64019272:	or     eax,ebx
64019274:	jne    0x64019279
64019276:	and    DWORD PTR [ebp-0x30],eax
64019279:	lea    esi,[ebp+0x1ef]
6401927f:	mov    eax,DWORD PTR [ebp-0x18]
64019282:	dec    DWORD PTR [ebp-0x18]
64019285:	test   eax,eax
64019287:	jg     0x6401928f
64019289:	mov    eax,edi
6401928b:	or     eax,ebx
6401928d:	je     0x640192b3
6401928f:	mov    eax,DWORD PTR [ebp-0x28]
64019292:	cdq    
64019293:	push   edx
64019294:	push   eax
64019295:	push   ebx
64019296:	push   edi
64019297:	call   0x6401ae50
6401929c:	add    ecx,0x30
6401929f:	cmp    ecx,0x39
640192a2:	mov    DWORD PTR [ebp-0x7c],ebx
640192a5:	mov    edi,eax
640192a7:	mov    ebx,edx
640192a9:	jle    0x640192ae
640192ab:	add    ecx,DWORD PTR [ebp-0x60]
640192ae:	mov    BYTE PTR [esi],cl
640192b0:	dec    esi
640192b1:	jmp    0x6401927f
640192b3:	lea    eax,[ebp+0x1ef]
640192b9:	sub    eax,esi
640192bb:	inc    esi
640192bc:	test   WORD PTR [ebp-0x14],0x200
640192c2:	mov    DWORD PTR [ebp-0x20],eax
640192c5:	mov    DWORD PTR [ebp-0x1c],esi
640192c8:	je     0x6401930e
640192ca:	test   eax,eax
640192cc:	je     0x640192d5
640192ce:	mov    ecx,esi
640192d0:	cmp    BYTE PTR [ecx],0x30
640192d3:	je     0x6401930e
640192d5:	dec    DWORD PTR [ebp-0x1c]
640192d8:	mov    ecx,DWORD PTR [ebp-0x1c]
640192db:	mov    BYTE PTR [ecx],0x30
640192de:	inc    eax
640192df:	jmp    0x6401930b
640192e1:	test   ebx,ebx
640192e3:	jne    0x640192ed
640192e5:	mov    eax,ds:0x6402f954
640192ea:	mov    DWORD PTR [ebp-0x1c],eax
640192ed:	mov    eax,DWORD PTR [ebp-0x1c]
640192f0:	mov    DWORD PTR [ebp-0x34],0x1
640192f7:	jmp    0x64019302
640192f9:	dec    edi
640192fa:	cmp    WORD PTR [eax],0x0
640192fe:	je     0x64019306
64019300:	add    eax,esi
64019302:	test   edi,edi
64019304:	jne    0x640192f9
64019306:	sub    eax,DWORD PTR [ebp-0x1c]
64019309:	sar    eax,1
6401930b:	mov    DWORD PTR [ebp-0x20],eax
6401930e:	cmp    DWORD PTR [ebp-0x5c],0x0
64019312:	jne    0x64019417
64019318:	mov    eax,DWORD PTR [ebp-0x14]
6401931b:	test   al,0x40
6401931d:	je     0x6401934a
6401931f:	test   ax,0x100
64019323:	je     0x6401932d
64019325:	mov    WORD PTR [ebp-0x3c],0x2d
6401932b:	jmp    0x64019343
6401932d:	test   al,0x1
6401932f:	je     0x64019339
64019331:	mov    WORD PTR [ebp-0x3c],0x2b
64019337:	jmp    0x64019343
64019339:	test   al,0x2
6401933b:	je     0x6401934a
6401933d:	mov    WORD PTR [ebp-0x3c],0x20
64019343:	mov    DWORD PTR [ebp-0x30],0x1
6401934a:	mov    ebx,DWORD PTR [ebp-0x38]
6401934d:	mov    esi,DWORD PTR [ebp-0x20]
64019350:	sub    ebx,esi
64019352:	sub    ebx,DWORD PTR [ebp-0x30]
64019355:	test   BYTE PTR [ebp-0x14],0xc
64019359:	jne    0x6401936c
6401935b:	push   DWORD PTR [ebp-0x48]
6401935e:	lea    eax,[ebp-0x2c]
64019361:	push   ebx
64019362:	push   0x20
64019364:	call   0x640181d5
64019369:	add    esp,0xc
6401936c:	push   DWORD PTR [ebp-0x30]
6401936f:	mov    edi,DWORD PTR [ebp-0x48]
64019372:	lea    eax,[ebp-0x2c]
64019375:	lea    ecx,[ebp-0x3c]
64019378:	call   0x640181fa
6401937d:	test   BYTE PTR [ebp-0x14],0x8
64019381:	pop    ecx
64019382:	je     0x64019399
64019384:	test   BYTE PTR [ebp-0x14],0x4
64019388:	jne    0x64019399
6401938a:	push   edi
6401938b:	push   ebx
6401938c:	push   0x30
6401938e:	lea    eax,[ebp-0x2c]
64019391:	call   0x640181d5
64019396:	add    esp,0xc
64019399:	cmp    DWORD PTR [ebp-0x34],0x0
6401939d:	jne    0x640193ed
6401939f:	test   esi,esi
640193a1:	jle    0x640193ed
640193a3:	mov    edi,DWORD PTR [ebp-0x1c]
640193a6:	mov    DWORD PTR [ebp-0x28],esi
640193a9:	dec    DWORD PTR [ebp-0x28]
640193ac:	lea    eax,[ebp-0x58]
640193af:	push   eax
640193b0:	mov    eax,DWORD PTR [ebp-0x58]
640193b3:	push   DWORD PTR [eax+0xac]
640193b9:	lea    eax,[ebp-0x70]
640193bc:	push   edi
640193bd:	push   eax
640193be:	call   0x6401dfbe
640193c3:	add    esp,0x10
640193c6:	test   eax,eax
640193c8:	mov    DWORD PTR [ebp-0x7c],eax
640193cb:	jle    0x640193e7
640193cd:	push   DWORD PTR [ebp-0x70]
640193d0:	mov    eax,DWORD PTR [ebp-0x48]
640193d3:	lea    esi,[ebp-0x2c]
640193d6:	call   0x64018b59
640193db:	add    edi,DWORD PTR [ebp-0x7c]
640193de:	cmp    DWORD PTR [ebp-0x28],0x0
640193e2:	pop    ecx
640193e3:	jg     0x640193a9
640193e5:	jmp    0x640193fa
640193e7:	or     DWORD PTR [ebp-0x2c],0xffffffff
640193eb:	jmp    0x640193fa
640193ed:	mov    ecx,DWORD PTR [ebp-0x1c]
640193f0:	push   esi
640193f1:	lea    eax,[ebp-0x2c]
640193f4:	call   0x640181fa
640193f9:	pop    ecx
640193fa:	cmp    DWORD PTR [ebp-0x2c],0x0
640193fe:	jl     0x64019417
64019400:	test   BYTE PTR [ebp-0x14],0x4
64019404:	je     0x64019417
64019406:	push   DWORD PTR [ebp-0x48]
64019409:	lea    eax,[ebp-0x2c]
6401940c:	push   ebx
6401940d:	push   0x20
6401940f:	call   0x640181d5
64019414:	add    esp,0xc
64019417:	cmp    DWORD PTR [ebp-0x64],0x0
6401941b:	je     0x6401942a
6401941d:	push   DWORD PTR [ebp-0x64]
64019420:	call   0x64014e06
64019425:	and    DWORD PTR [ebp-0x64],0x0
64019429:	pop    ecx
6401942a:	mov    edi,DWORD PTR [ebp-0x6c]
6401942d:	mov    ebx,DWORD PTR [ebp-0x24]
64019430:	movzx  eax,WORD PTR [edi]
64019433:	test   ax,ax
64019436:	mov    DWORD PTR [ebp-0x28],eax
64019439:	je     0x64019442
6401943b:	mov    ecx,eax
6401943d:	jmp    0x64018c3f
64019442:	cmp    DWORD PTR [ebp-0x40],0x0
64019446:	je     0x64019452
64019448:	cmp    DWORD PTR [ebp-0x40],0x7
6401944c:	jne    0x64018bdd
64019452:	cmp    BYTE PTR [ebp-0x4c],0x0
64019456:	je     0x6401945f
64019458:	mov    eax,DWORD PTR [ebp-0x50]
6401945b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401945f:	mov    eax,DWORD PTR [ebp-0x2c]
64019462:	mov    ecx,DWORD PTR [ebp+0x3f0]
64019468:	pop    edi
64019469:	pop    esi
6401946a:	xor    ecx,ebp
6401946c:	pop    ebx
6401946d:	call   0x64013f6c
64019472:	add    ebp,0x3f4
64019478:	leave  
64019479:	ret    
6401947a:	inc    edx
6401947b:	mov    es,WORD PTR [ecx]
6401947d:	fs xchg edi,eax
6401947f:	mov    WORD PTR [ecx],es
64019481:	fs mov ah,0x8c
64019484:	add    DWORD PTR [eax+eax*1-0x73],esp
64019488:	add    DWORD PTR [edx+edi*1-0x73],esp
6401948c:	add    DWORD PTR [ebx+eax*2-0x73],esp
64019490:	add    DWORD PTR [edx+edi*2-0x73],esp
64019494:	add    DWORD PTR [ebx+ebx*2-0x72],esp
64019498:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401949c:	in     al,dx
6401949d:	sub    esp,0x10
640194a0:	mov    eax,ds:0x6402f09c
640194a5:	xor    eax,ebp
640194a7:	mov    DWORD PTR [ebp-0x4],eax
640194aa:	push   ebx
640194ab:	push   esi
640194ac:	mov    esi,DWORD PTR ds:0x6402614c
640194b2:	xor    ebx,ebx
640194b4:	cmp    DWORD PTR ds:0x64030958,ebx
640194ba:	push   edi
640194bb:	mov    edi,ecx
640194bd:	jne    0x640194f5
640194bf:	push   ebx
640194c0:	push   ebx
640194c1:	push   0x1
640194c3:	push   0x640286e0
640194c8:	push   0x100
640194cd:	push   ebx
640194ce:	call   esi
640194d0:	test   eax,eax
640194d2:	je     0x640194e0
640194d4:	mov    DWORD PTR ds:0x64030958,0x1
640194de:	jmp    0x640194f5
640194e0:	call   DWORD PTR ds:0x64026044
640194e6:	cmp    eax,0x78
640194e9:	jne    0x640194f5
640194eb:	mov    DWORD PTR ds:0x64030958,0x2
640194f5:	cmp    DWORD PTR [ebp+0x14],ebx
640194f8:	jle    0x64019517
640194fa:	mov    ecx,DWORD PTR [ebp+0x14]
640194fd:	mov    eax,DWORD PTR [ebp+0x10]
64019500:	dec    ecx
64019501:	cmp    WORD PTR [eax],bx
64019504:	je     0x6401950f
64019506:	inc    eax
64019507:	inc    eax
64019508:	cmp    ecx,ebx
6401950a:	jne    0x64019500
6401950c:	or     ecx,0xffffffff
6401950f:	or     eax,0xffffffff
64019512:	sub    eax,ecx
64019514:	add    DWORD PTR [ebp+0x14],eax
64019517:	mov    eax,ds:0x64030958
6401951c:	cmp    eax,0x1
6401951f:	jne    0x6401953a
64019521:	push   DWORD PTR [ebp+0x1c]
64019524:	push   DWORD PTR [ebp+0x18]
64019527:	push   DWORD PTR [ebp+0x14]
6401952a:	push   DWORD PTR [ebp+0x10]
6401952d:	push   DWORD PTR [ebp+0xc]
64019530:	push   DWORD PTR [ebp+0x8]
64019533:	call   esi
64019535:	jmp    0x640196e9
6401953a:	cmp    eax,0x2
6401953d:	je     0x64019543
6401953f:	cmp    eax,ebx
64019541:	jne    0x64019595
64019543:	cmp    DWORD PTR [ebp+0x8],ebx
64019546:	mov    DWORD PTR [ebp-0xc],ebx
64019549:	jne    0x64019553
6401954b:	mov    eax,DWORD PTR [edi]
6401954d:	mov    eax,DWORD PTR [eax+0x14]
64019550:	mov    DWORD PTR [ebp+0x8],eax
64019553:	cmp    DWORD PTR [ebp+0x20],ebx
64019556:	jne    0x64019560
64019558:	mov    eax,DWORD PTR [edi]
6401955a:	mov    eax,DWORD PTR [eax+0x4]
6401955d:	mov    DWORD PTR [ebp+0x20],eax
64019560:	push   DWORD PTR [ebp+0x8]
64019563:	call   0x6401eae2
64019568:	cmp    DWORD PTR [ebp+0x20],eax
6401956b:	pop    ecx
6401956c:	je     0x64019576
6401956e:	cmp    eax,0xffffffff
64019571:	je     0x64019576
64019573:	mov    DWORD PTR [ebp+0x20],eax
64019576:	mov    esi,DWORD PTR ds:0x64026028
6401957c:	push   ebx
6401957d:	push   ebx
6401957e:	push   ebx
6401957f:	push   ebx
64019580:	push   DWORD PTR [ebp+0x14]
64019583:	push   DWORD PTR [ebp+0x10]
64019586:	push   ebx
64019587:	push   DWORD PTR [ebp+0x20]
6401958a:	call   esi
6401958c:	mov    edi,eax
6401958e:	cmp    edi,ebx
64019590:	mov    DWORD PTR [ebp-0x10],edi
64019593:	jne    0x6401959c
64019595:	xor    eax,eax
64019597:	jmp    0x640196e9
6401959c:	jle    0x640195e0
6401959e:	push   0xffffffe0
640195a0:	xor    edx,edx
640195a2:	pop    eax
640195a3:	div    edi
640195a5:	cmp    eax,0x1
640195a8:	jb     0x640195e0
640195aa:	lea    eax,[edi+0x8]
640195ad:	cmp    eax,0x400
640195b2:	ja     0x640195c7
640195b4:	call   0x640146f0
640195b9:	mov    eax,esp
640195bb:	cmp    eax,ebx
640195bd:	je     0x640195db
640195bf:	mov    DWORD PTR [eax],0xcccc
640195c5:	jmp    0x640195d8
640195c7:	push   eax
640195c8:	call   0x64014ee3
640195cd:	cmp    eax,ebx
640195cf:	pop    ecx
640195d0:	je     0x640195db
640195d2:	mov    DWORD PTR [eax],0xdddd
640195d8:	add    eax,0x8
640195db:	mov    DWORD PTR [ebp-0x8],eax
640195de:	jmp    0x640195e3
640195e0:	mov    DWORD PTR [ebp-0x8],ebx
640195e3:	cmp    DWORD PTR [ebp-0x8],ebx
640195e6:	je     0x64019595
640195e8:	push   ebx
640195e9:	push   ebx
640195ea:	push   edi
640195eb:	push   DWORD PTR [ebp-0x8]
640195ee:	push   DWORD PTR [ebp+0x14]
640195f1:	push   DWORD PTR [ebp+0x10]
640195f4:	push   ebx
640195f5:	push   DWORD PTR [ebp+0x20]
640195f8:	call   esi
640195fa:	test   eax,eax
640195fc:	je     0x640196dd
64019602:	push   ebx
64019603:	push   ebx
64019604:	push   edi
64019605:	push   DWORD PTR [ebp-0x8]
64019608:	mov    edi,DWORD PTR ds:0x64026148
6401960e:	push   DWORD PTR [ebp+0xc]
64019611:	push   DWORD PTR [ebp+0x8]
64019614:	call   edi
64019616:	mov    esi,eax
64019618:	cmp    esi,ebx
6401961a:	je     0x640196dd
64019620:	jle    0x64019661
64019622:	push   0xffffffe0
64019624:	xor    edx,edx
64019626:	pop    eax
64019627:	div    esi
64019629:	cmp    eax,0x1
6401962c:	jb     0x64019661
6401962e:	lea    eax,[esi+0x8]
64019631:	cmp    eax,0x400
64019636:	ja     0x6401964b
64019638:	call   0x640146f0
6401963d:	mov    eax,esp
6401963f:	cmp    eax,ebx
64019641:	je     0x6401965f
64019643:	mov    DWORD PTR [eax],0xcccc
64019649:	jmp    0x6401965c
6401964b:	push   eax
6401964c:	call   0x64014ee3
64019651:	cmp    eax,ebx
64019653:	pop    ecx
64019654:	je     0x6401965f
64019656:	mov    DWORD PTR [eax],0xdddd
6401965c:	add    eax,0x8
6401965f:	mov    ebx,eax
64019661:	test   ebx,ebx
64019663:	je     0x640196dd
64019665:	push   esi
64019666:	push   ebx
64019667:	push   DWORD PTR [ebp-0x10]
6401966a:	push   DWORD PTR [ebp-0x8]
6401966d:	push   DWORD PTR [ebp+0xc]
64019670:	push   DWORD PTR [ebp+0x8]
64019673:	call   edi
64019675:	test   eax,eax
64019677:	je     0x640196d6
64019679:	test   WORD PTR [ebp+0xc],0x400
6401967f:	je     0x640196b5
64019681:	mov    eax,DWORD PTR [ebp+0x1c]
64019684:	xor    edi,edi
64019686:	cmp    eax,edi
64019688:	mov    DWORD PTR [ebp-0xc],esi
6401968b:	je     0x640196d6
6401968d:	cmp    eax,esi
6401968f:	jg     0x64019694
64019691:	lea    esi,[eax-0x1]
64019694:	push   esi
64019695:	push   ebx
64019696:	push   eax
64019697:	push   DWORD PTR [ebp+0x18]
6401969a:	call   0x6401d1c6
6401969f:	add    esp,0x10
640196a2:	test   eax,eax
640196a4:	je     0x640196d6
640196a6:	push   edi
640196a7:	push   edi
640196a8:	push   edi
640196a9:	push   edi
640196aa:	push   edi
640196ab:	call   0x640139a8
640196b0:	add    esp,0x14
640196b3:	jmp    0x640196d6
640196b5:	xor    eax,eax
640196b7:	cmp    DWORD PTR [ebp+0x1c],eax
640196ba:	jne    0x640196c0
640196bc:	push   eax
640196bd:	push   eax
640196be:	jmp    0x640196c6
640196c0:	push   DWORD PTR [ebp+0x1c]
640196c3:	push   DWORD PTR [ebp+0x18]
640196c6:	push   esi
640196c7:	push   ebx
640196c8:	push   0x1
640196ca:	push   DWORD PTR [ebp+0x20]
640196cd:	call   DWORD PTR ds:0x64026024
640196d3:	mov    DWORD PTR [ebp-0xc],eax
640196d6:	push   ebx
640196d7:	call   0x6401447c
640196dc:	pop    ecx
640196dd:	push   DWORD PTR [ebp-0x8]
640196e0:	call   0x6401447c
640196e5:	mov    eax,DWORD PTR [ebp-0xc]
640196e8:	pop    ecx
640196e9:	lea    esp,[ebp-0x1c]
640196ec:	pop    edi
640196ed:	pop    esi
640196ee:	pop    ebx
640196ef:	mov    ecx,DWORD PTR [ebp-0x4]
640196f2:	xor    ecx,ebp
640196f4:	call   0x64013f6c
640196f9:	leave  
640196fa:	ret    
640196fb:	push   ebp
640196fc:	mov    ebp,esp
640196fe:	sub    esp,0x10
64019701:	push   DWORD PTR [ebp+0x8]
64019704:	lea    ecx,[ebp-0x10]
64019707:	call   0x6401410f
6401970c:	push   DWORD PTR [ebp+0x24]
6401970f:	lea    ecx,[ebp-0x10]
64019712:	push   DWORD PTR [ebp+0x20]
64019715:	push   DWORD PTR [ebp+0x1c]
64019718:	push   DWORD PTR [ebp+0x18]
6401971b:	push   DWORD PTR [ebp+0x14]
6401971e:	push   DWORD PTR [ebp+0x10]
64019721:	push   DWORD PTR [ebp+0xc]
64019724:	call   0x6401949a
64019729:	add    esp,0x1c
6401972c:	cmp    BYTE PTR [ebp-0x4],0x0
64019730:	je     0x64019739
64019732:	mov    ecx,DWORD PTR [ebp-0x8]
64019735:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019739:	leave  
6401973a:	ret    
6401973b:	xor    eax,eax
6401973d:	cmp    DWORD PTR [esp+0x8],eax
64019741:	jbe    0x64019756
64019743:	mov    ecx,DWORD PTR [esp+0x4]
64019747:	cmp    WORD PTR [ecx],0x0
6401974b:	je     0x64019756
6401974d:	inc    eax
6401974e:	inc    ecx
6401974f:	inc    ecx
64019750:	cmp    eax,DWORD PTR [esp+0x8]
64019754:	jb     0x64019747
64019756:	ret    
64019757:	push   ebp
64019758:	mov    ebp,esp
6401975a:	sub    esp,0x4
6401975d:	mov    DWORD PTR [ebp-0x4],edi
64019760:	mov    edi,DWORD PTR [ebp+0x8]
64019763:	mov    ecx,DWORD PTR [ebp+0xc]
64019766:	shr    ecx,0x7
64019769:	pxor   xmm0,xmm0
6401976d:	jmp    0x64019777
6401976f:	lea    esp,[esp+0x0]
64019776:	nop
64019777:	movdqa XMMWORD PTR [edi],xmm0
6401977b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64019780:	movdqa XMMWORD PTR [edi+0x20],xmm0
64019785:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401978a:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401978f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64019794:	movdqa XMMWORD PTR [edi+0x60],xmm0
64019799:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401979e:	lea    edi,[edi+0x80]
640197a4:	dec    ecx
640197a5:	jne    0x64019777
640197a7:	mov    edi,DWORD PTR [ebp-0x4]
640197aa:	mov    esp,ebp
640197ac:	pop    ebp
640197ad:	ret    
640197ae:	push   ebp
640197af:	mov    ebp,esp
640197b1:	sub    esp,0x10
640197b4:	mov    DWORD PTR [ebp-0x4],edi
640197b7:	mov    eax,DWORD PTR [ebp+0x8]
640197ba:	cdq    
640197bb:	mov    edi,eax
640197bd:	xor    edi,edx
640197bf:	sub    edi,edx
640197c1:	and    edi,0xf
640197c4:	xor    edi,edx
640197c6:	sub    edi,edx
640197c8:	test   edi,edi
640197ca:	jne    0x64019808
640197cc:	mov    ecx,DWORD PTR [ebp+0x10]
640197cf:	mov    edx,ecx
640197d1:	and    edx,0x7f
640197d4:	mov    DWORD PTR [ebp-0xc],edx
640197d7:	cmp    ecx,edx
640197d9:	je     0x640197ed
640197db:	sub    ecx,edx
640197dd:	push   ecx
640197de:	push   eax
640197df:	call   0x64019757
640197e4:	add    esp,0x8
640197e7:	mov    eax,DWORD PTR [ebp+0x8]
640197ea:	mov    edx,DWORD PTR [ebp-0xc]
640197ed:	test   edx,edx
640197ef:	je     0x64019836
640197f1:	add    eax,DWORD PTR [ebp+0x10]
640197f4:	sub    eax,edx
640197f6:	mov    DWORD PTR [ebp-0x8],eax
640197f9:	xor    eax,eax
640197fb:	mov    edi,DWORD PTR [ebp-0x8]
640197fe:	mov    ecx,DWORD PTR [ebp-0xc]
64019801:	rep stos BYTE PTR es:[edi],al
64019803:	mov    eax,DWORD PTR [ebp+0x8]
64019806:	jmp    0x64019836
64019808:	neg    edi
6401980a:	add    edi,0x10
6401980d:	mov    DWORD PTR [ebp-0x10],edi
64019810:	xor    eax,eax
64019812:	mov    edi,DWORD PTR [ebp+0x8]
64019815:	mov    ecx,DWORD PTR [ebp-0x10]
64019818:	rep stos BYTE PTR es:[edi],al
6401981a:	mov    eax,DWORD PTR [ebp-0x10]
6401981d:	mov    ecx,DWORD PTR [ebp+0x8]
64019820:	mov    edx,DWORD PTR [ebp+0x10]
64019823:	add    ecx,eax
64019825:	sub    edx,eax
64019827:	push   edx
64019828:	push   0x0
6401982a:	push   ecx
6401982b:	call   0x640197ae
64019830:	add    esp,0xc
64019833:	mov    eax,DWORD PTR [ebp+0x8]
64019836:	mov    edi,DWORD PTR [ebp-0x4]
64019839:	mov    esp,ebp
6401983b:	pop    ebp
6401983c:	ret    
6401983d:	and    DWORD PTR ds:0x64034640,0x0
64019844:	call   0x6401ed2b
64019849:	mov    ds:0x64034640,eax
6401984e:	xor    eax,eax
64019850:	ret    
64019851:	int3   
64019852:	int3   
64019853:	int3   
64019854:	int3   
64019855:	int3   
64019856:	int3   
64019857:	int3   
64019858:	int3   
64019859:	int3   
6401985a:	int3   
6401985b:	int3   
6401985c:	int3   
6401985d:	int3   
6401985e:	int3   
6401985f:	int3   
64019860:	push   ecx
64019861:	lea    ecx,[esp+0x4]
64019865:	sub    ecx,eax
64019867:	sbb    eax,eax
64019869:	not    eax
6401986b:	and    ecx,eax
6401986d:	mov    eax,esp
6401986f:	and    eax,0xfffff000
64019874:	cmp    ecx,eax
64019876:	jb     0x64019882
64019878:	mov    eax,ecx
6401987a:	pop    ecx
6401987b:	xchg   esp,eax
6401987c:	mov    eax,DWORD PTR [eax]
6401987e:	mov    DWORD PTR [esp],eax
64019881:	ret    
64019882:	sub    eax,0x1000
64019887:	test   DWORD PTR [eax],eax
64019889:	jmp    0x64019874
6401988b:	push   0x54
6401988d:	push   0x6402c5a8
64019892:	call   0x64015530
64019897:	xor    edi,edi
64019899:	mov    DWORD PTR [ebp-0x4],edi
6401989c:	lea    eax,[ebp-0x64]
6401989f:	push   eax
640198a0:	call   DWORD PTR ds:0x6402615c
640198a6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640198ad:	push   0x40
640198af:	push   0x20
640198b1:	pop    esi
640198b2:	push   esi
640198b3:	call   0x64017280
640198b8:	pop    ecx
640198b9:	pop    ecx
640198ba:	cmp    eax,edi
640198bc:	je     0x64019ad6
640198c2:	mov    ds:0x64034540,eax
640198c7:	mov    DWORD PTR ds:0x64034520,esi
640198cd:	lea    ecx,[eax+0x800]
640198d3:	jmp    0x64019905
640198d5:	mov    BYTE PTR [eax+0x4],0x0
640198d9:	or     DWORD PTR [eax],0xffffffff
640198dc:	mov    BYTE PTR [eax+0x5],0xa
640198e0:	mov    DWORD PTR [eax+0x8],edi
640198e3:	mov    BYTE PTR [eax+0x24],0x0
640198e7:	mov    BYTE PTR [eax+0x25],0xa
640198eb:	mov    BYTE PTR [eax+0x26],0xa
640198ef:	mov    DWORD PTR [eax+0x38],edi
640198f2:	mov    BYTE PTR [eax+0x34],0x0
640198f6:	add    eax,0x40
640198f9:	mov    ecx,DWORD PTR ds:0x64034540
640198ff:	add    ecx,0x800
64019905:	cmp    eax,ecx
64019907:	jb     0x640198d5
64019909:	cmp    WORD PTR [ebp-0x32],di
6401990d:	je     0x64019a1d
64019913:	mov    eax,DWORD PTR [ebp-0x30]
64019916:	cmp    eax,edi
64019918:	je     0x64019a1d
6401991e:	mov    edi,DWORD PTR [eax]
64019920:	lea    ebx,[eax+0x4]
64019923:	lea    eax,[ebx+edi*1]
64019926:	mov    DWORD PTR [ebp-0x1c],eax
64019929:	mov    esi,0x800
6401992e:	cmp    edi,esi
64019930:	jl     0x64019934
64019932:	mov    edi,esi
64019934:	mov    DWORD PTR [ebp-0x20],0x1
6401993b:	jmp    0x64019998
6401993d:	push   0x40
6401993f:	push   0x20
64019941:	call   0x64017280
64019946:	pop    ecx
64019947:	pop    ecx
64019948:	test   eax,eax
6401994a:	je     0x640199a2
6401994c:	mov    ecx,DWORD PTR [ebp-0x20]
6401994f:	lea    ecx,[ecx*4+0x64034540]
64019956:	mov    DWORD PTR [ecx],eax
64019958:	add    DWORD PTR ds:0x64034520,0x20
6401995f:	lea    edx,[eax+0x800]
64019965:	jmp    0x64019991
64019967:	mov    BYTE PTR [eax+0x4],0x0
6401996b:	or     DWORD PTR [eax],0xffffffff
6401996e:	mov    BYTE PTR [eax+0x5],0xa
64019972:	and    DWORD PTR [eax+0x8],0x0
64019976:	and    BYTE PTR [eax+0x24],0x80
6401997a:	mov    BYTE PTR [eax+0x25],0xa
6401997e:	mov    BYTE PTR [eax+0x26],0xa
64019982:	and    DWORD PTR [eax+0x38],0x0
64019986:	mov    BYTE PTR [eax+0x34],0x0
6401998a:	add    eax,0x40
6401998d:	mov    edx,DWORD PTR [ecx]
6401998f:	add    edx,esi
64019991:	cmp    eax,edx
64019993:	jb     0x64019967
64019995:	inc    DWORD PTR [ebp-0x20]
64019998:	cmp    DWORD PTR ds:0x64034520,edi
6401999e:	jl     0x6401993d
640199a0:	jmp    0x640199a8
640199a2:	mov    edi,DWORD PTR ds:0x64034520
640199a8:	and    DWORD PTR [ebp-0x20],0x0
640199ac:	test   edi,edi
640199ae:	jle    0x64019a1d
640199b0:	mov    eax,DWORD PTR [ebp-0x1c]
640199b3:	mov    ecx,DWORD PTR [eax]
640199b5:	cmp    ecx,0xffffffff
640199b8:	je     0x64019a10
640199ba:	cmp    ecx,0xfffffffe
640199bd:	je     0x64019a10
640199bf:	mov    al,BYTE PTR [ebx]
640199c1:	test   al,0x1
640199c3:	je     0x64019a10
640199c5:	test   al,0x8
640199c7:	jne    0x640199d4
640199c9:	push   ecx
640199ca:	call   DWORD PTR ds:0x64026158
640199d0:	test   eax,eax
640199d2:	je     0x64019a10
640199d4:	mov    esi,DWORD PTR [ebp-0x20]
640199d7:	mov    eax,esi
640199d9:	sar    eax,0x5
640199dc:	and    esi,0x1f
640199df:	shl    esi,0x6
640199e2:	add    esi,DWORD PTR [eax*4+0x64034540]
640199e9:	mov    eax,DWORD PTR [ebp-0x1c]
640199ec:	mov    eax,DWORD PTR [eax]
640199ee:	mov    DWORD PTR [esi],eax
640199f0:	mov    al,BYTE PTR [ebx]
640199f2:	mov    BYTE PTR [esi+0x4],al
640199f5:	push   0xfa0
640199fa:	lea    eax,[esi+0xc]
640199fd:	push   eax
640199fe:	call   0x6401cbf8
64019a03:	pop    ecx
64019a04:	pop    ecx
64019a05:	test   eax,eax
64019a07:	je     0x64019ad6
64019a0d:	inc    DWORD PTR [esi+0x8]
64019a10:	inc    DWORD PTR [ebp-0x20]
64019a13:	inc    ebx
64019a14:	add    DWORD PTR [ebp-0x1c],0x4
64019a18:	cmp    DWORD PTR [ebp-0x20],edi
64019a1b:	jl     0x640199b0
64019a1d:	xor    ebx,ebx
64019a1f:	mov    esi,ebx
64019a21:	shl    esi,0x6
64019a24:	add    esi,DWORD PTR ds:0x64034540
64019a2a:	mov    eax,DWORD PTR [esi]
64019a2c:	cmp    eax,0xffffffff
64019a2f:	je     0x64019a3c
64019a31:	cmp    eax,0xfffffffe
64019a34:	je     0x64019a3c
64019a36:	or     BYTE PTR [esi+0x4],0x80
64019a3a:	jmp    0x64019aae
64019a3c:	mov    BYTE PTR [esi+0x4],0x81
64019a40:	test   ebx,ebx
64019a42:	jne    0x64019a49
64019a44:	push   0xfffffff6
64019a46:	pop    eax
64019a47:	jmp    0x64019a53
64019a49:	mov    eax,ebx
64019a4b:	dec    eax
64019a4c:	neg    eax
64019a4e:	sbb    eax,eax
64019a50:	add    eax,0xfffffff5
64019a53:	push   eax
64019a54:	call   DWORD PTR ds:0x64026154
64019a5a:	mov    edi,eax
64019a5c:	cmp    edi,0xffffffff
64019a5f:	je     0x64019aa4
64019a61:	test   edi,edi
64019a63:	je     0x64019aa4
64019a65:	push   edi
64019a66:	call   DWORD PTR ds:0x64026158
64019a6c:	test   eax,eax
64019a6e:	je     0x64019aa4
64019a70:	mov    DWORD PTR [esi],edi
64019a72:	and    eax,0xff
64019a77:	cmp    eax,0x2
64019a7a:	jne    0x64019a82
64019a7c:	or     BYTE PTR [esi+0x4],0x40
64019a80:	jmp    0x64019a8b
64019a82:	cmp    eax,0x3
64019a85:	jne    0x64019a8b
64019a87:	or     BYTE PTR [esi+0x4],0x8
64019a8b:	push   0xfa0
64019a90:	lea    eax,[esi+0xc]
64019a93:	push   eax
64019a94:	call   0x6401cbf8
64019a99:	pop    ecx
64019a9a:	pop    ecx
64019a9b:	test   eax,eax
64019a9d:	je     0x64019ad6
64019a9f:	inc    DWORD PTR [esi+0x8]
64019aa2:	jmp    0x64019aae
64019aa4:	or     BYTE PTR [esi+0x4],0x40
64019aa8:	mov    DWORD PTR [esi],0xfffffffe
64019aae:	inc    ebx
64019aaf:	cmp    ebx,0x3
64019ab2:	jl     0x64019a1f
64019ab8:	push   DWORD PTR ds:0x64034520
64019abe:	call   DWORD PTR ds:0x64026150
64019ac4:	xor    eax,eax
64019ac6:	jmp    0x64019ad9
64019ac8:	xor    eax,eax
64019aca:	inc    eax
64019acb:	ret    
64019acc:	mov    esp,DWORD PTR [ebp-0x18]
64019acf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019ad6:	or     eax,0xffffffff
64019ad9:	call   0x64015575
64019ade:	ret    
64019adf:	push   esi
64019ae0:	push   edi
64019ae1:	mov    esi,0x64034540
64019ae6:	mov    edi,DWORD PTR [esi]
64019ae8:	test   edi,edi
64019aea:	je     0x64019b1d
64019aec:	lea    eax,[edi+0x800]
64019af2:	jmp    0x64019b0e
64019af4:	cmp    DWORD PTR [edi+0x8],0x0
64019af8:	je     0x64019b04
64019afa:	lea    eax,[edi+0xc]
64019afd:	push   eax
64019afe:	call   DWORD PTR ds:0x640260a4
64019b04:	mov    eax,DWORD PTR [esi]
64019b06:	add    edi,0x40
64019b09:	add    eax,0x800
64019b0e:	cmp    edi,eax
64019b10:	jb     0x64019af4
64019b12:	push   DWORD PTR [esi]
64019b14:	call   0x64014e06
64019b19:	and    DWORD PTR [esi],0x0
64019b1c:	pop    ecx
64019b1d:	add    esi,0x4
64019b20:	cmp    esi,0x64034640
64019b26:	jl     0x64019ae6
64019b28:	pop    edi
64019b29:	pop    esi
64019b2a:	ret    
64019b2b:	push   ebx
64019b2c:	xor    ebx,ebx
64019b2e:	cmp    DWORD PTR ds:0x64034654,ebx
64019b34:	push   esi
64019b35:	push   edi
64019b36:	jne    0x64019b3d
64019b38:	call   0x64017d51
64019b3d:	mov    esi,DWORD PTR ds:0x64030574
64019b43:	xor    edi,edi
64019b45:	cmp    esi,ebx
64019b47:	jne    0x64019b61
64019b49:	or     eax,0xffffffff
64019b4c:	jmp    0x64019bec
64019b51:	cmp    al,0x3d
64019b53:	je     0x64019b56
64019b55:	inc    edi
64019b56:	push   esi
64019b57:	call   0x64015730
64019b5c:	pop    ecx
64019b5d:	lea    esi,[esi+eax*1+0x1]
64019b61:	mov    al,BYTE PTR [esi]
64019b63:	cmp    al,bl
64019b65:	jne    0x64019b51
64019b67:	push   0x4
64019b69:	inc    edi
64019b6a:	push   edi
64019b6b:	call   0x64017280
64019b70:	mov    edi,eax
64019b72:	cmp    edi,ebx
64019b74:	pop    ecx
64019b75:	pop    ecx
64019b76:	mov    DWORD PTR ds:0x640308f4,edi
64019b7c:	je     0x64019b49
64019b7e:	mov    esi,DWORD PTR ds:0x64030574
64019b84:	push   ebp
64019b85:	jmp    0x64019bc7
64019b87:	push   esi
64019b88:	call   0x64015730
64019b8d:	mov    ebp,eax
64019b8f:	inc    ebp
64019b90:	cmp    BYTE PTR [esi],0x3d
64019b93:	pop    ecx
64019b94:	je     0x64019bc5
64019b96:	push   0x1
64019b98:	push   ebp
64019b99:	call   0x64017280
64019b9e:	cmp    eax,ebx
64019ba0:	pop    ecx
64019ba1:	pop    ecx
64019ba2:	mov    DWORD PTR [edi],eax
64019ba4:	je     0x64019bf0
64019ba6:	push   esi
64019ba7:	push   ebp
64019ba8:	push   eax
64019ba9:	call   0x64015928
64019bae:	add    esp,0xc
64019bb1:	test   eax,eax
64019bb3:	je     0x64019bc2
64019bb5:	push   ebx
64019bb6:	push   ebx
64019bb7:	push   ebx
64019bb8:	push   ebx
64019bb9:	push   ebx
64019bba:	call   0x640139a8
64019bbf:	add    esp,0x14
64019bc2:	add    edi,0x4
64019bc5:	add    esi,ebp
64019bc7:	cmp    BYTE PTR [esi],bl
64019bc9:	jne    0x64019b87
64019bcb:	push   DWORD PTR ds:0x64030574
64019bd1:	call   0x64014e06
64019bd6:	mov    DWORD PTR ds:0x64030574,ebx
64019bdc:	mov    DWORD PTR [edi],ebx
64019bde:	mov    DWORD PTR ds:0x64034648,0x1
64019be8:	xor    eax,eax
64019bea:	pop    ecx
64019beb:	pop    ebp
64019bec:	pop    edi
64019bed:	pop    esi
64019bee:	pop    ebx
64019bef:	ret    
64019bf0:	push   DWORD PTR ds:0x640308f4
64019bf6:	call   0x64014e06
64019bfb:	mov    DWORD PTR ds:0x640308f4,ebx
64019c01:	or     eax,0xffffffff
64019c04:	jmp    0x64019bea
64019c06:	push   ebp
64019c07:	mov    ebp,esp
64019c09:	push   ecx
64019c0a:	mov    ecx,DWORD PTR [ebp+0x10]
64019c0d:	push   ebx
64019c0e:	xor    eax,eax
64019c10:	cmp    DWORD PTR [ebp+0x8],eax
64019c13:	push   esi
64019c14:	mov    DWORD PTR [edi],eax
64019c16:	mov    esi,edx
64019c18:	mov    edx,DWORD PTR [ebp+0xc]
64019c1b:	mov    DWORD PTR [ecx],0x1
64019c21:	je     0x64019c2c
64019c23:	mov    ebx,DWORD PTR [ebp+0x8]
64019c26:	add    DWORD PTR [ebp+0x8],0x4
64019c2a:	mov    DWORD PTR [ebx],edx
64019c2c:	mov    DWORD PTR [ebp-0x4],eax
64019c2f:	cmp    BYTE PTR [esi],0x22
64019c32:	jne    0x64019c44
64019c34:	xor    eax,eax
64019c36:	cmp    DWORD PTR [ebp-0x4],eax
64019c39:	mov    bl,0x22
64019c3b:	sete   al
64019c3e:	inc    esi
64019c3f:	mov    DWORD PTR [ebp-0x4],eax
64019c42:	jmp    0x64019c80
64019c44:	inc    DWORD PTR [edi]
64019c46:	test   edx,edx
64019c48:	je     0x64019c52
64019c4a:	mov    al,BYTE PTR [esi]
64019c4c:	mov    BYTE PTR [edx],al
64019c4e:	inc    edx
64019c4f:	mov    DWORD PTR [ebp+0xc],edx
64019c52:	mov    bl,BYTE PTR [esi]
64019c54:	movzx  eax,bl
64019c57:	push   eax
64019c58:	inc    esi
64019c59:	call   0x6401ede9
64019c5e:	test   eax,eax
64019c60:	pop    ecx
64019c61:	je     0x64019c76
64019c63:	inc    DWORD PTR [edi]
64019c65:	cmp    DWORD PTR [ebp+0xc],0x0
64019c69:	je     0x64019c75
64019c6b:	mov    ecx,DWORD PTR [ebp+0xc]
64019c6e:	mov    al,BYTE PTR [esi]
64019c70:	inc    DWORD PTR [ebp+0xc]
64019c73:	mov    BYTE PTR [ecx],al
64019c75:	inc    esi
64019c76:	test   bl,bl
64019c78:	mov    edx,DWORD PTR [ebp+0xc]
64019c7b:	mov    ecx,DWORD PTR [ebp+0x10]
64019c7e:	je     0x64019cb2
64019c80:	cmp    DWORD PTR [ebp-0x4],0x0
64019c84:	jne    0x64019c2f
64019c86:	cmp    bl,0x20
64019c89:	je     0x64019c90
64019c8b:	cmp    bl,0x9
64019c8e:	jne    0x64019c2f
64019c90:	test   edx,edx
64019c92:	je     0x64019c98
64019c94:	mov    BYTE PTR [edx-0x1],0x0
64019c98:	and    DWORD PTR [ebp-0x4],0x0
64019c9c:	cmp    BYTE PTR [esi],0x0
64019c9f:	je     0x64019d8e
64019ca5:	mov    al,BYTE PTR [esi]
64019ca7:	cmp    al,0x20
64019ca9:	je     0x64019caf
64019cab:	cmp    al,0x9
64019cad:	jne    0x64019cb5
64019caf:	inc    esi
64019cb0:	jmp    0x64019ca5
64019cb2:	dec    esi
64019cb3:	jmp    0x64019c98
64019cb5:	cmp    BYTE PTR [esi],0x0
64019cb8:	je     0x64019d8e
64019cbe:	cmp    DWORD PTR [ebp+0x8],0x0
64019cc2:	je     0x64019ccd
64019cc4:	mov    eax,DWORD PTR [ebp+0x8]
64019cc7:	add    DWORD PTR [ebp+0x8],0x4
64019ccb:	mov    DWORD PTR [eax],edx
64019ccd:	inc    DWORD PTR [ecx]
64019ccf:	xor    ebx,ebx
64019cd1:	inc    ebx
64019cd2:	xor    ecx,ecx
64019cd4:	jmp    0x64019cd8
64019cd6:	inc    esi
64019cd7:	inc    ecx
64019cd8:	cmp    BYTE PTR [esi],0x5c
64019cdb:	je     0x64019cd6
64019cdd:	cmp    BYTE PTR [esi],0x22
64019ce0:	jne    0x64019d08
64019ce2:	test   cl,0x1
64019ce5:	jne    0x64019d06
64019ce7:	cmp    DWORD PTR [ebp-0x4],0x0
64019ceb:	je     0x64019cf9
64019ced:	lea    eax,[esi+0x1]
64019cf0:	cmp    BYTE PTR [eax],0x22
64019cf3:	jne    0x64019cf9
64019cf5:	mov    esi,eax
64019cf7:	jmp    0x64019d06
64019cf9:	xor    eax,eax
64019cfb:	xor    ebx,ebx
64019cfd:	cmp    DWORD PTR [ebp-0x4],eax
64019d00:	sete   al
64019d03:	mov    DWORD PTR [ebp-0x4],eax
64019d06:	shr    ecx,1
64019d08:	test   ecx,ecx
64019d0a:	je     0x64019d1e
64019d0c:	dec    ecx
64019d0d:	test   edx,edx
64019d0f:	je     0x64019d15
64019d11:	mov    BYTE PTR [edx],0x5c
64019d14:	inc    edx
64019d15:	inc    DWORD PTR [edi]
64019d17:	test   ecx,ecx
64019d19:	jne    0x64019d0c
64019d1b:	mov    DWORD PTR [ebp+0xc],edx
64019d1e:	mov    al,BYTE PTR [esi]
64019d20:	test   al,al
64019d22:	je     0x64019d79
64019d24:	cmp    DWORD PTR [ebp-0x4],0x0
64019d28:	jne    0x64019d32
64019d2a:	cmp    al,0x20
64019d2c:	je     0x64019d79
64019d2e:	cmp    al,0x9
64019d30:	je     0x64019d79
64019d32:	test   ebx,ebx
64019d34:	je     0x64019d73
64019d36:	test   edx,edx
64019d38:	movsx  eax,al
64019d3b:	push   eax
64019d3c:	je     0x64019d61
64019d3e:	call   0x6401ede9
64019d43:	test   eax,eax
64019d45:	pop    ecx
64019d46:	je     0x64019d55
64019d48:	mov    al,BYTE PTR [esi]
64019d4a:	mov    ecx,DWORD PTR [ebp+0xc]
64019d4d:	inc    DWORD PTR [ebp+0xc]
64019d50:	mov    BYTE PTR [ecx],al
64019d52:	inc    esi
64019d53:	inc    DWORD PTR [edi]
64019d55:	mov    ecx,DWORD PTR [ebp+0xc]
64019d58:	mov    al,BYTE PTR [esi]
64019d5a:	inc    DWORD PTR [ebp+0xc]
64019d5d:	mov    BYTE PTR [ecx],al
64019d5f:	jmp    0x64019d6e
64019d61:	call   0x6401ede9
64019d66:	test   eax,eax
64019d68:	pop    ecx
64019d69:	je     0x64019d6e
64019d6b:	inc    esi
64019d6c:	inc    DWORD PTR [edi]
64019d6e:	inc    DWORD PTR [edi]
64019d70:	mov    edx,DWORD PTR [ebp+0xc]
64019d73:	inc    esi
64019d74:	jmp    0x64019ccf
64019d79:	test   edx,edx
64019d7b:	je     0x64019d84
64019d7d:	mov    BYTE PTR [edx],0x0
64019d80:	inc    edx
64019d81:	mov    DWORD PTR [ebp+0xc],edx
64019d84:	inc    DWORD PTR [edi]
64019d86:	mov    ecx,DWORD PTR [ebp+0x10]
64019d89:	jmp    0x64019c9c
64019d8e:	mov    eax,DWORD PTR [ebp+0x8]
64019d91:	test   eax,eax
64019d93:	pop    esi
64019d94:	pop    ebx
64019d95:	je     0x64019d9a
64019d97:	and    DWORD PTR [eax],0x0
64019d9a:	inc    DWORD PTR [ecx]
64019d9c:	leave  
64019d9d:	ret    
64019d9e:	push   ebp
64019d9f:	mov    ebp,esp
64019da1:	sub    esp,0xc
64019da4:	push   ebx
64019da5:	xor    ebx,ebx
64019da7:	cmp    DWORD PTR ds:0x64034654,ebx
64019dad:	push   esi
64019dae:	push   edi
64019daf:	jne    0x64019db6
64019db1:	call   0x64017d51
64019db6:	push   0x104
64019dbb:	mov    esi,0x64030960
64019dc0:	push   esi
64019dc1:	push   ebx
64019dc2:	mov    BYTE PTR ds:0x64030a64,bl
64019dc8:	call   DWORD PTR ds:0x64026160
64019dce:	mov    eax,ds:0x64034660
64019dd3:	cmp    eax,ebx
64019dd5:	mov    DWORD PTR ds:0x64030904,esi
64019ddb:	je     0x64019de4
64019ddd:	cmp    BYTE PTR [eax],bl
64019ddf:	mov    DWORD PTR [ebp-0x4],eax
64019de2:	jne    0x64019de7
64019de4:	mov    DWORD PTR [ebp-0x4],esi
64019de7:	mov    edx,DWORD PTR [ebp-0x4]
64019dea:	lea    eax,[ebp-0x8]
64019ded:	push   eax
64019dee:	push   ebx
64019def:	push   ebx
64019df0:	lea    edi,[ebp-0xc]
64019df3:	call   0x64019c06
64019df8:	mov    eax,DWORD PTR [ebp-0x8]
64019dfb:	add    esp,0xc
64019dfe:	cmp    eax,0x3fffffff
64019e03:	jae    0x64019e4f
64019e05:	mov    ecx,DWORD PTR [ebp-0xc]
64019e08:	cmp    ecx,0xffffffff
64019e0b:	jae    0x64019e4f
64019e0d:	mov    edi,eax
64019e0f:	shl    edi,0x2
64019e12:	lea    eax,[edi+ecx*1]
64019e15:	cmp    eax,ecx
64019e17:	jb     0x64019e4f
64019e19:	push   eax
64019e1a:	call   0x64017240
64019e1f:	mov    esi,eax
64019e21:	cmp    esi,ebx
64019e23:	pop    ecx
64019e24:	je     0x64019e4f
64019e26:	mov    edx,DWORD PTR [ebp-0x4]
64019e29:	lea    eax,[ebp-0x8]
64019e2c:	push   eax
64019e2d:	add    edi,esi
64019e2f:	push   edi
64019e30:	push   esi
64019e31:	lea    edi,[ebp-0xc]
64019e34:	call   0x64019c06
64019e39:	mov    eax,DWORD PTR [ebp-0x8]
64019e3c:	add    esp,0xc
64019e3f:	dec    eax
64019e40:	mov    ds:0x640308e8,eax
64019e45:	mov    DWORD PTR ds:0x640308ec,esi
64019e4b:	xor    eax,eax
64019e4d:	jmp    0x64019e52
64019e4f:	or     eax,0xffffffff
64019e52:	pop    edi
64019e53:	pop    esi
64019e54:	pop    ebx
64019e55:	leave  
64019e56:	ret    
64019e57:	push   ecx
64019e58:	push   ecx
64019e59:	mov    eax,ds:0x64030a68
64019e5e:	push   ebx
64019e5f:	push   ebp
64019e60:	push   esi
64019e61:	push   edi
64019e62:	mov    edi,DWORD PTR ds:0x64026084
64019e68:	xor    ebx,ebx
64019e6a:	xor    esi,esi
64019e6c:	cmp    eax,ebx
64019e6e:	push   0x2
64019e70:	pop    ebp
64019e71:	jne    0x64019ea0
64019e73:	call   edi
64019e75:	mov    esi,eax
64019e77:	cmp    esi,ebx
64019e79:	je     0x64019e87
64019e7b:	mov    DWORD PTR ds:0x64030a68,0x1
64019e85:	jmp    0x64019ea9
64019e87:	call   DWORD PTR ds:0x64026044
64019e8d:	cmp    eax,0x78
64019e90:	jne    0x64019e9b
64019e92:	mov    eax,ebp
64019e94:	mov    ds:0x64030a68,eax
64019e99:	jmp    0x64019ea0
64019e9b:	mov    eax,ds:0x64030a68
64019ea0:	cmp    eax,0x1
64019ea3:	jne    0x64019f2d
64019ea9:	cmp    esi,ebx
64019eab:	jne    0x64019ebc
64019ead:	call   edi
64019eaf:	mov    esi,eax
64019eb1:	cmp    esi,ebx
64019eb3:	jne    0x64019ebc
64019eb5:	xor    eax,eax
64019eb7:	jmp    0x64019f85
64019ebc:	cmp    WORD PTR [esi],bx
64019ebf:	mov    eax,esi
64019ec1:	je     0x64019ed1
64019ec3:	add    eax,ebp
64019ec5:	cmp    WORD PTR [eax],bx
64019ec8:	jne    0x64019ec3
64019eca:	add    eax,ebp
64019ecc:	cmp    WORD PTR [eax],bx
64019ecf:	jne    0x64019ec3
64019ed1:	mov    edi,DWORD PTR ds:0x64026028
64019ed7:	push   ebx
64019ed8:	push   ebx
64019ed9:	push   ebx
64019eda:	sub    eax,esi
64019edc:	push   ebx
64019edd:	sar    eax,1
64019edf:	inc    eax
64019ee0:	push   eax
64019ee1:	push   esi
64019ee2:	push   ebx
64019ee3:	push   ebx
64019ee4:	mov    DWORD PTR [esp+0x34],eax
64019ee8:	call   edi
64019eea:	mov    ebp,eax
64019eec:	cmp    ebp,ebx
64019eee:	je     0x64019f22
64019ef0:	push   ebp
64019ef1:	call   0x64017240
64019ef6:	cmp    eax,ebx
64019ef8:	pop    ecx
64019ef9:	mov    DWORD PTR [esp+0x10],eax
64019efd:	je     0x64019f22
64019eff:	push   ebx
64019f00:	push   ebx
64019f01:	push   ebp
64019f02:	push   eax
64019f03:	push   DWORD PTR [esp+0x24]
64019f07:	push   esi
64019f08:	push   ebx
64019f09:	push   ebx
64019f0a:	call   edi
64019f0c:	test   eax,eax
64019f0e:	jne    0x64019f1e
64019f10:	push   DWORD PTR [esp+0x10]
64019f14:	call   0x64014e06
64019f19:	pop    ecx
64019f1a:	mov    DWORD PTR [esp+0x10],ebx
64019f1e:	mov    ebx,DWORD PTR [esp+0x10]
64019f22:	push   esi
64019f23:	call   DWORD PTR ds:0x6402616c
64019f29:	mov    eax,ebx
64019f2b:	jmp    0x64019f85
64019f2d:	cmp    eax,ebp
64019f2f:	je     0x64019f35
64019f31:	cmp    eax,ebx
64019f33:	jne    0x64019eb5
64019f35:	call   DWORD PTR ds:0x64026168
64019f3b:	mov    esi,eax
64019f3d:	cmp    esi,ebx
64019f3f:	je     0x64019eb5
64019f45:	cmp    BYTE PTR [esi],bl
64019f47:	je     0x64019f53
64019f49:	inc    eax
64019f4a:	cmp    BYTE PTR [eax],bl
64019f4c:	jne    0x64019f49
64019f4e:	inc    eax
64019f4f:	cmp    BYTE PTR [eax],bl
64019f51:	jne    0x64019f49
64019f53:	sub    eax,esi
64019f55:	inc    eax
64019f56:	mov    ebp,eax
64019f58:	push   ebp
64019f59:	call   0x64017240
64019f5e:	mov    edi,eax
64019f60:	cmp    edi,ebx
64019f62:	pop    ecx
64019f63:	jne    0x64019f71
64019f65:	push   esi
64019f66:	call   DWORD PTR ds:0x64026164
64019f6c:	jmp    0x64019eb5
64019f71:	push   ebp
64019f72:	push   esi
64019f73:	push   edi
64019f74:	call   0x64015990
64019f79:	add    esp,0xc
64019f7c:	push   esi
64019f7d:	call   DWORD PTR ds:0x64026164
64019f83:	mov    eax,edi
64019f85:	pop    edi
64019f86:	pop    esi
64019f87:	pop    ebp
64019f88:	pop    ebx
64019f89:	pop    ecx
64019f8a:	pop    ecx
64019f8b:	ret    
64019f8c:	push   esi
64019f8d:	push   edi
64019f8e:	mov    eax,0x6402bd8c
64019f93:	mov    edi,0x6402bd8c
64019f98:	cmp    eax,edi
64019f9a:	mov    esi,eax
64019f9c:	jae    0x64019fad
64019f9e:	mov    eax,DWORD PTR [esi]
64019fa0:	test   eax,eax
64019fa2:	je     0x64019fa6
64019fa4:	call   eax
64019fa6:	add    esi,0x4
64019fa9:	cmp    esi,edi
64019fab:	jb     0x64019f9e
64019fad:	pop    edi
64019fae:	pop    esi
64019faf:	ret    
64019fb0:	push   esi
64019fb1:	push   edi
64019fb2:	mov    eax,0x6402bd94
64019fb7:	mov    edi,0x6402bd94
64019fbc:	cmp    eax,edi
64019fbe:	mov    esi,eax
64019fc0:	jae    0x64019fd1
64019fc2:	mov    eax,DWORD PTR [esi]
64019fc4:	test   eax,eax
64019fc6:	je     0x64019fca
64019fc8:	call   eax
64019fca:	add    esi,0x4
64019fcd:	cmp    esi,edi
64019fcf:	jb     0x64019fc2
64019fd1:	pop    edi
64019fd2:	pop    esi
64019fd3:	ret    
64019fd4:	push   ebp
64019fd5:	mov    ebp,esp
64019fd7:	push   ecx
64019fd8:	push   ecx
64019fd9:	push   esi
64019fda:	lea    eax,[ebp-0x4]
64019fdd:	xor    esi,esi
64019fdf:	push   eax
64019fe0:	mov    DWORD PTR [ebp-0x4],esi
64019fe3:	mov    DWORD PTR [ebp-0x8],esi
64019fe6:	call   0x6401745f
64019feb:	test   eax,eax
64019fed:	pop    ecx
64019fee:	je     0x64019ffd
64019ff0:	push   esi
64019ff1:	push   esi
64019ff2:	push   esi
64019ff3:	push   esi
64019ff4:	push   esi
64019ff5:	call   0x640139a8
64019ffa:	add    esp,0x14
64019ffd:	lea    eax,[ebp-0x8]
6401a000:	push   eax
6401a001:	call   0x64017496
6401a006:	test   eax,eax
6401a008:	pop    ecx
6401a009:	je     0x6401a018
6401a00b:	push   esi
6401a00c:	push   esi
6401a00d:	push   esi
6401a00e:	push   esi
6401a00f:	push   esi
6401a010:	call   0x640139a8
6401a015:	add    esp,0x14
6401a018:	cmp    DWORD PTR [ebp-0x4],0x2
6401a01c:	pop    esi
6401a01d:	jne    0x6401a02a
6401a01f:	cmp    DWORD PTR [ebp-0x8],0x5
6401a023:	jb     0x6401a02a
6401a025:	xor    eax,eax
6401a027:	inc    eax
6401a028:	leave  
6401a029:	ret    
6401a02a:	push   0x3
6401a02c:	pop    eax
6401a02d:	leave  
6401a02e:	ret    
6401a02f:	xor    eax,eax
6401a031:	cmp    DWORD PTR [esp+0x4],eax
6401a035:	push   0x0
6401a037:	sete   al
6401a03a:	push   0x1000
6401a03f:	push   eax
6401a040:	call   DWORD PTR ds:0x64026170
6401a046:	test   eax,eax
6401a048:	mov    ds:0x64030a6c,eax
6401a04d:	jne    0x6401a052
6401a04f:	xor    eax,eax
6401a051:	ret    
6401a052:	call   0x64019fd4
6401a057:	cmp    eax,0x3
6401a05a:	mov    ds:0x6403451c,eax
6401a05f:	jne    0x6401a085
6401a061:	push   0x3f8
6401a066:	call   0x6401b56b
6401a06b:	test   eax,eax
6401a06d:	pop    ecx
6401a06e:	jne    0x6401a085
6401a070:	push   DWORD PTR ds:0x64030a6c
6401a076:	call   DWORD PTR ds:0x640260f0
6401a07c:	and    DWORD PTR ds:0x64030a6c,0x0
6401a083:	jmp    0x6401a04f
6401a085:	xor    eax,eax
6401a087:	inc    eax
6401a088:	ret    
6401a089:	push   ebp
6401a08a:	xor    ebp,ebp
6401a08c:	cmp    DWORD PTR ds:0x6403451c,0x3
6401a093:	jne    0x6401a0e9
6401a095:	push   ebx
6401a096:	mov    ebx,DWORD PTR ds:0x640260f8
6401a09c:	push   edi
6401a09d:	xor    edi,edi
6401a09f:	cmp    DWORD PTR ds:0x64034504,ebp
6401a0a5:	jle    0x6401a0d8
6401a0a7:	push   esi
6401a0a8:	mov    esi,DWORD PTR ds:0x64034508
6401a0ae:	add    esi,0x10
6401a0b1:	push   0x8000
6401a0b6:	push   ebp
6401a0b7:	push   DWORD PTR [esi-0x4]
6401a0ba:	call   DWORD PTR ds:0x64026174
6401a0c0:	push   DWORD PTR [esi]
6401a0c2:	push   ebp
6401a0c3:	push   DWORD PTR ds:0x64030a6c
6401a0c9:	call   ebx
6401a0cb:	add    esi,0x14
6401a0ce:	inc    edi
6401a0cf:	cmp    edi,DWORD PTR ds:0x64034504
6401a0d5:	jl     0x6401a0b1
6401a0d7:	pop    esi
6401a0d8:	push   DWORD PTR ds:0x64034508
6401a0de:	push   ebp
6401a0df:	push   DWORD PTR ds:0x64030a6c
6401a0e5:	call   ebx
6401a0e7:	pop    edi
6401a0e8:	pop    ebx
6401a0e9:	push   DWORD PTR ds:0x64030a6c
6401a0ef:	call   DWORD PTR ds:0x640260f0
6401a0f5:	mov    DWORD PTR ds:0x64030a6c,ebp
6401a0fb:	pop    ebp
6401a0fc:	ret    
6401a0fd:	push   ebp
6401a0fe:	mov    ebp,esp
6401a100:	push   ecx
6401a101:	push   ecx
6401a102:	push   esi
6401a103:	call   0x64016004
6401a108:	mov    esi,eax
6401a10a:	test   esi,esi
6401a10c:	je     0x6401a258
6401a112:	mov    edx,DWORD PTR [esi+0x5c]
6401a115:	mov    eax,ds:0x6402f94c
6401a11a:	push   edi
6401a11b:	mov    edi,DWORD PTR [ebp+0x8]
6401a11e:	mov    ecx,edx
6401a120:	push   ebx
6401a121:	cmp    DWORD PTR [ecx],edi
6401a123:	je     0x6401a133
6401a125:	mov    ebx,eax
6401a127:	imul   ebx,ebx,0xc
6401a12a:	add    ecx,0xc
6401a12d:	add    ebx,edx
6401a12f:	cmp    ecx,ebx
6401a131:	jb     0x6401a121
6401a133:	imul   eax,eax,0xc
6401a136:	add    eax,edx
6401a138:	cmp    ecx,eax
6401a13a:	jae    0x6401a144
6401a13c:	cmp    DWORD PTR [ecx],edi
6401a13e:	jne    0x6401a144
6401a140:	mov    eax,ecx
6401a142:	jmp    0x6401a146
6401a144:	xor    eax,eax
6401a146:	test   eax,eax
6401a148:	je     0x6401a154
6401a14a:	mov    ebx,DWORD PTR [eax+0x8]
6401a14d:	test   ebx,ebx
6401a14f:	mov    DWORD PTR [ebp-0x4],ebx
6401a152:	jne    0x6401a15b
6401a154:	xor    eax,eax
6401a156:	jmp    0x6401a256
6401a15b:	cmp    ebx,0x5
6401a15e:	jne    0x6401a16c
6401a160:	and    DWORD PTR [eax+0x8],0x0
6401a164:	xor    eax,eax
6401a166:	inc    eax
6401a167:	jmp    0x6401a256
6401a16c:	cmp    ebx,0x1
6401a16f:	je     0x6401a253
6401a175:	mov    ecx,DWORD PTR [esi+0x60]
6401a178:	mov    DWORD PTR [ebp-0x8],ecx
6401a17b:	mov    ecx,DWORD PTR [ebp+0xc]
6401a17e:	mov    DWORD PTR [esi+0x60],ecx
6401a181:	mov    ecx,DWORD PTR [eax+0x4]
6401a184:	cmp    ecx,0x8
6401a187:	jne    0x6401a245
6401a18d:	mov    ecx,DWORD PTR ds:0x6402f940
6401a193:	mov    edi,DWORD PTR ds:0x6402f944
6401a199:	mov    edx,ecx
6401a19b:	add    edi,ecx
6401a19d:	cmp    edx,edi
6401a19f:	jge    0x6401a1c5
6401a1a1:	imul   ecx,ecx,0xc
6401a1a4:	mov    edi,DWORD PTR [esi+0x5c]
6401a1a7:	and    DWORD PTR [ecx+edi*1+0x8],0x0
6401a1ac:	mov    edi,DWORD PTR ds:0x6402f940
6401a1b2:	mov    ebx,DWORD PTR ds:0x6402f944
6401a1b8:	inc    edx
6401a1b9:	add    ebx,edi
6401a1bb:	add    ecx,0xc
6401a1be:	cmp    edx,ebx
6401a1c0:	jl     0x6401a1a4
6401a1c2:	mov    ebx,DWORD PTR [ebp-0x4]
6401a1c5:	mov    eax,DWORD PTR [eax]
6401a1c7:	cmp    eax,0xc000008e
6401a1cc:	mov    edi,DWORD PTR [esi+0x64]
6401a1cf:	jne    0x6401a1da
6401a1d1:	mov    DWORD PTR [esi+0x64],0x83
6401a1d8:	jmp    0x6401a238
6401a1da:	cmp    eax,0xc0000090
6401a1df:	jne    0x6401a1ea
6401a1e1:	mov    DWORD PTR [esi+0x64],0x81
6401a1e8:	jmp    0x6401a238
6401a1ea:	cmp    eax,0xc0000091
6401a1ef:	jne    0x6401a1fa
6401a1f1:	mov    DWORD PTR [esi+0x64],0x84
6401a1f8:	jmp    0x6401a238
6401a1fa:	cmp    eax,0xc0000093
6401a1ff:	jne    0x6401a20a
6401a201:	mov    DWORD PTR [esi+0x64],0x85
6401a208:	jmp    0x6401a238
6401a20a:	cmp    eax,0xc000008d
6401a20f:	jne    0x6401a21a
6401a211:	mov    DWORD PTR [esi+0x64],0x82
6401a218:	jmp    0x6401a238
6401a21a:	cmp    eax,0xc000008f
6401a21f:	jne    0x6401a22a
6401a221:	mov    DWORD PTR [esi+0x64],0x86
6401a228:	jmp    0x6401a238
6401a22a:	cmp    eax,0xc0000092
6401a22f:	jne    0x6401a238
6401a231:	mov    DWORD PTR [esi+0x64],0x8a
6401a238:	push   DWORD PTR [esi+0x64]
6401a23b:	push   0x8
6401a23d:	call   ebx
6401a23f:	pop    ecx
6401a240:	mov    DWORD PTR [esi+0x64],edi
6401a243:	jmp    0x6401a24c
6401a245:	and    DWORD PTR [eax+0x8],0x0
6401a249:	push   ecx
6401a24a:	call   ebx
6401a24c:	mov    eax,DWORD PTR [ebp-0x8]
6401a24f:	pop    ecx
6401a250:	mov    DWORD PTR [esi+0x60],eax
6401a253:	or     eax,0xffffffff
6401a256:	pop    ebx
6401a257:	pop    edi
6401a258:	pop    esi
6401a259:	leave  
6401a25a:	ret    
6401a25b:	mov    eax,0xe06d7363
6401a260:	cmp    DWORD PTR [esp+0x4],eax
6401a264:	jne    0x6401a273
6401a266:	push   DWORD PTR [esp+0x8]
6401a26a:	push   eax
6401a26b:	call   0x6401a0fd
6401a270:	pop    ecx
6401a271:	pop    ecx
6401a272:	ret    
6401a273:	xor    eax,eax
6401a275:	ret    
6401a276:	push   ebp
6401a277:	mov    ebp,esp
6401a279:	sub    esp,0x10
6401a27c:	mov    eax,ds:0x6402f09c
6401a281:	and    DWORD PTR [ebp-0x8],0x0
6401a285:	and    DWORD PTR [ebp-0x4],0x0
6401a289:	push   ebx
6401a28a:	push   edi
6401a28b:	mov    edi,0xbb40e64e
6401a290:	cmp    eax,edi
6401a292:	mov    ebx,0xffff0000
6401a297:	je     0x6401a2a6
6401a299:	test   ebx,eax
6401a29b:	je     0x6401a2a6
6401a29d:	not    eax
6401a29f:	mov    ds:0x6402f0a0,eax
6401a2a4:	jmp    0x6401a306
6401a2a6:	push   esi
6401a2a7:	lea    eax,[ebp-0x8]
6401a2aa:	push   eax
6401a2ab:	call   DWORD PTR ds:0x64026180
6401a2b1:	mov    esi,DWORD PTR [ebp-0x4]
6401a2b4:	xor    esi,DWORD PTR [ebp-0x8]
6401a2b7:	call   DWORD PTR ds:0x6402617c
6401a2bd:	xor    esi,eax
6401a2bf:	call   DWORD PTR ds:0x6402611c
6401a2c5:	xor    esi,eax
6401a2c7:	call   DWORD PTR ds:0x6402605c
6401a2cd:	xor    esi,eax
6401a2cf:	lea    eax,[ebp-0x10]
6401a2d2:	push   eax
6401a2d3:	call   DWORD PTR ds:0x64026178
6401a2d9:	mov    eax,DWORD PTR [ebp-0xc]
6401a2dc:	xor    eax,DWORD PTR [ebp-0x10]
6401a2df:	xor    esi,eax
6401a2e1:	cmp    esi,edi
6401a2e3:	jne    0x6401a2ec
6401a2e5:	mov    esi,0xbb40e64f
6401a2ea:	jmp    0x6401a2f7
6401a2ec:	test   ebx,esi
6401a2ee:	jne    0x6401a2f7
6401a2f0:	mov    eax,esi
6401a2f2:	shl    eax,0x10
6401a2f5:	or     esi,eax
6401a2f7:	mov    DWORD PTR ds:0x6402f09c,esi
6401a2fd:	not    esi
6401a2ff:	mov    DWORD PTR ds:0x6402f0a0,esi
6401a305:	pop    esi
6401a306:	pop    edi
6401a307:	pop    ebx
6401a308:	leave  
6401a309:	ret    
6401a30a:	test   BYTE PTR [ecx+0xc],0x40
6401a30e:	je     0x6401a316
6401a310:	cmp    DWORD PTR [ecx+0x8],0x0
6401a314:	je     0x6401a33a
6401a316:	dec    DWORD PTR [ecx+0x4]
6401a319:	js     0x6401a326
6401a31b:	mov    edx,DWORD PTR [ecx]
6401a31d:	mov    BYTE PTR [edx],al
6401a31f:	inc    DWORD PTR [ecx]
6401a321:	movzx  eax,al
6401a324:	jmp    0x6401a332
6401a326:	movsx  eax,al
6401a329:	push   ecx
6401a32a:	push   eax
6401a32b:	call   0x64018075
6401a330:	pop    ecx
6401a331:	pop    ecx
6401a332:	cmp    eax,0xffffffff
6401a335:	jne    0x6401a33a
6401a337:	or     DWORD PTR [esi],eax
6401a339:	ret    
6401a33a:	inc    DWORD PTR [esi]
6401a33c:	ret    
6401a33d:	push   ebp
6401a33e:	mov    ebp,esp
6401a340:	push   esi
6401a341:	mov    esi,eax
6401a343:	jmp    0x6401a358
6401a345:	mov    ecx,DWORD PTR [ebp+0x10]
6401a348:	mov    al,BYTE PTR [ebp+0x8]
6401a34b:	dec    DWORD PTR [ebp+0xc]
6401a34e:	call   0x6401a30a
6401a353:	cmp    DWORD PTR [esi],0xffffffff
6401a356:	je     0x6401a35e
6401a358:	cmp    DWORD PTR [ebp+0xc],0x0
6401a35c:	jg     0x6401a345
6401a35e:	pop    esi
6401a35f:	pop    ebp
6401a360:	ret    
6401a361:	push   ebp
6401a362:	lea    ebp,[esp-0x1f8]
6401a369:	sub    esp,0x278
6401a36f:	mov    eax,ds:0x6402f09c
6401a374:	xor    eax,ebp
6401a376:	mov    DWORD PTR [ebp+0x1f4],eax
6401a37c:	mov    eax,DWORD PTR [ebp+0x200]
6401a382:	push   ebx
6401a383:	mov    ebx,DWORD PTR [ebp+0x204]
6401a389:	push   esi
6401a38a:	xor    esi,esi
6401a38c:	push   edi
6401a38d:	mov    edi,DWORD PTR [ebp+0x20c]
6401a393:	push   DWORD PTR [ebp+0x208]
6401a399:	lea    ecx,[ebp-0x64]
6401a39c:	mov    DWORD PTR [ebp-0x30],eax
6401a39f:	mov    DWORD PTR [ebp-0x2c],edi
6401a3a2:	mov    DWORD PTR [ebp-0x4c],esi
6401a3a5:	mov    DWORD PTR [ebp-0x18],esi
6401a3a8:	mov    DWORD PTR [ebp-0x40],esi
6401a3ab:	mov    DWORD PTR [ebp-0x20],esi
6401a3ae:	mov    DWORD PTR [ebp-0x3c],esi
6401a3b1:	mov    DWORD PTR [ebp-0x50],esi
6401a3b4:	mov    DWORD PTR [ebp-0x44],esi
6401a3b7:	call   0x6401410f
6401a3bc:	cmp    DWORD PTR [ebp-0x30],esi
6401a3bf:	jne    0x6401a3ee
6401a3c1:	call   0x64015d30
6401a3c6:	push   esi
6401a3c7:	push   esi
6401a3c8:	push   esi
6401a3c9:	push   esi
6401a3ca:	mov    DWORD PTR [eax],0x16
6401a3d0:	push   esi
6401a3d1:	call   0x64013aa4
6401a3d6:	add    esp,0x14
6401a3d9:	cmp    BYTE PTR [ebp-0x58],0x0
6401a3dd:	je     0x6401a3e6
6401a3df:	mov    eax,DWORD PTR [ebp-0x5c]
6401a3e2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a3e6:	or     eax,0xffffffff
6401a3e9:	jmp    0x6401acbd
6401a3ee:	mov    eax,DWORD PTR [ebp-0x30]
6401a3f1:	test   BYTE PTR [eax+0xc],0x40
6401a3f5:	jne    0x6401a49f
6401a3fb:	push   eax
6401a3fc:	call   0x6401dd9d
6401a401:	cmp    eax,0xffffffff
6401a404:	pop    ecx
6401a405:	je     0x6401a43d
6401a407:	push   DWORD PTR [ebp-0x30]
6401a40a:	call   0x6401dd9d
6401a40f:	cmp    eax,0xfffffffe
6401a412:	pop    ecx
6401a413:	je     0x6401a43d
6401a415:	push   DWORD PTR [ebp-0x30]
6401a418:	call   0x6401dd9d
6401a41d:	push   DWORD PTR [ebp-0x30]
6401a420:	sar    eax,0x5
6401a423:	lea    esi,[eax*4+0x64034540]
6401a42a:	call   0x6401dd9d
6401a42f:	and    eax,0x1f
6401a432:	shl    eax,0x6
6401a435:	add    eax,DWORD PTR [esi]
6401a437:	pop    ecx
6401a438:	pop    ecx
6401a439:	xor    esi,esi
6401a43b:	jmp    0x6401a442
6401a43d:	mov    eax,0x6402f880
6401a442:	test   BYTE PTR [eax+0x24],0x7f
6401a446:	jne    0x6401a3c1
6401a44c:	push   DWORD PTR [ebp-0x30]
6401a44f:	call   0x6401dd9d
6401a454:	cmp    eax,0xffffffff
6401a457:	pop    ecx
6401a458:	je     0x6401a490
6401a45a:	push   DWORD PTR [ebp-0x30]
6401a45d:	call   0x6401dd9d
6401a462:	cmp    eax,0xfffffffe
6401a465:	pop    ecx
6401a466:	je     0x6401a490
6401a468:	push   DWORD PTR [ebp-0x30]
6401a46b:	call   0x6401dd9d
6401a470:	push   DWORD PTR [ebp-0x30]
6401a473:	sar    eax,0x5
6401a476:	lea    esi,[eax*4+0x64034540]
6401a47d:	call   0x6401dd9d
6401a482:	and    eax,0x1f
6401a485:	shl    eax,0x6
6401a488:	add    eax,DWORD PTR [esi]
6401a48a:	pop    ecx
6401a48b:	pop    ecx
6401a48c:	xor    esi,esi
6401a48e:	jmp    0x6401a495
6401a490:	mov    eax,0x6402f880
6401a495:	test   BYTE PTR [eax+0x24],0x80
6401a499:	jne    0x6401a3c1
6401a49f:	cmp    ebx,esi
6401a4a1:	je     0x6401a3c1
6401a4a7:	mov    dl,BYTE PTR [ebx]
6401a4a9:	xor    ecx,ecx
6401a4ab:	test   dl,dl
6401a4ad:	mov    DWORD PTR [ebp-0x34],esi
6401a4b0:	mov    DWORD PTR [ebp-0x28],esi
6401a4b3:	mov    DWORD PTR [ebp-0x54],esi
6401a4b6:	mov    BYTE PTR [ebp-0x19],dl
6401a4b9:	je     0x6401acad
6401a4bf:	inc    ebx
6401a4c0:	cmp    DWORD PTR [ebp-0x34],0x0
6401a4c4:	mov    DWORD PTR [ebp-0x48],ebx
6401a4c7:	jl     0x6401acad
6401a4cd:	mov    al,dl
6401a4cf:	sub    al,0x20
6401a4d1:	cmp    al,0x58
6401a4d3:	ja     0x6401a4e6
6401a4d5:	movsx  eax,dl
6401a4d8:	movzx  eax,BYTE PTR [eax+0x64026de8]
6401a4df:	and    eax,0xf
6401a4e2:	xor    esi,esi
6401a4e4:	jmp    0x6401a4ea
6401a4e6:	xor    esi,esi
6401a4e8:	xor    eax,eax
6401a4ea:	movsx  eax,BYTE PTR [ecx+eax*8+0x64026e08]
6401a4f2:	push   0x7
6401a4f4:	sar    eax,0x4
6401a4f7:	pop    ecx
6401a4f8:	cmp    eax,ecx
6401a4fa:	mov    DWORD PTR [ebp-0x74],eax
6401a4fd:	ja     0x6401ac7d
6401a503:	jmp    DWORD PTR [eax*4+0x6401acd5]
6401a50a:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a50e:	mov    DWORD PTR [ebp-0x78],esi
6401a511:	mov    DWORD PTR [ebp-0x50],esi
6401a514:	mov    DWORD PTR [ebp-0x40],esi
6401a517:	mov    DWORD PTR [ebp-0x3c],esi
6401a51a:	mov    DWORD PTR [ebp-0x18],esi
6401a51d:	mov    DWORD PTR [ebp-0x44],esi
6401a520:	jmp    0x6401ac7d
6401a525:	movsx  eax,dl
6401a528:	sub    eax,0x20
6401a52b:	je     0x6401a56b
6401a52d:	sub    eax,0x3
6401a530:	je     0x6401a55f
6401a532:	sub    eax,0x8
6401a535:	je     0x6401a556
6401a537:	dec    eax
6401a538:	dec    eax
6401a539:	je     0x6401a54d
6401a53b:	sub    eax,0x3
6401a53e:	jne    0x6401ac7d
6401a544:	or     DWORD PTR [ebp-0x18],0x8
6401a548:	jmp    0x6401ac7d
6401a54d:	or     DWORD PTR [ebp-0x18],0x4
6401a551:	jmp    0x6401ac7d
6401a556:	or     DWORD PTR [ebp-0x18],0x1
6401a55a:	jmp    0x6401ac7d
6401a55f:	or     DWORD PTR [ebp-0x18],0x80
6401a566:	jmp    0x6401ac7d
6401a56b:	or     DWORD PTR [ebp-0x18],0x2
6401a56f:	jmp    0x6401ac7d
6401a574:	cmp    dl,0x2a
6401a577:	jne    0x6401a599
6401a579:	add    edi,0x4
6401a57c:	mov    DWORD PTR [ebp-0x2c],edi
6401a57f:	mov    edi,DWORD PTR [edi-0x4]
6401a582:	cmp    edi,esi
6401a584:	mov    DWORD PTR [ebp-0x40],edi
6401a587:	jge    0x6401ac7d
6401a58d:	or     DWORD PTR [ebp-0x18],0x4
6401a591:	neg    DWORD PTR [ebp-0x40]
6401a594:	jmp    0x6401ac7d
6401a599:	mov    eax,DWORD PTR [ebp-0x40]
6401a59c:	imul   eax,eax,0xa
6401a59f:	movsx  ecx,dl
6401a5a2:	lea    eax,[eax+ecx*1-0x30]
6401a5a6:	mov    DWORD PTR [ebp-0x40],eax
6401a5a9:	jmp    0x6401ac7d
6401a5ae:	mov    DWORD PTR [ebp-0x20],esi
6401a5b1:	jmp    0x6401ac7d
6401a5b6:	cmp    dl,0x2a
6401a5b9:	jne    0x6401a5d8
6401a5bb:	add    edi,0x4
6401a5be:	mov    DWORD PTR [ebp-0x2c],edi
6401a5c1:	mov    edi,DWORD PTR [edi-0x4]
6401a5c4:	cmp    edi,esi
6401a5c6:	mov    DWORD PTR [ebp-0x20],edi
6401a5c9:	jge    0x6401ac7d
6401a5cf:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a5d3:	jmp    0x6401ac7d
6401a5d8:	mov    eax,DWORD PTR [ebp-0x20]
6401a5db:	imul   eax,eax,0xa
6401a5de:	movsx  ecx,dl
6401a5e1:	lea    eax,[eax+ecx*1-0x30]
6401a5e5:	mov    DWORD PTR [ebp-0x20],eax
6401a5e8:	jmp    0x6401ac7d
6401a5ed:	cmp    dl,0x49
6401a5f0:	je     0x6401a638
6401a5f2:	cmp    dl,0x68
6401a5f5:	je     0x6401a62f
6401a5f7:	cmp    dl,0x6c
6401a5fa:	je     0x6401a611
6401a5fc:	cmp    dl,0x77
6401a5ff:	jne    0x6401ac7d
6401a605:	or     DWORD PTR [ebp-0x18],0x800
6401a60c:	jmp    0x6401ac7d
6401a611:	cmp    BYTE PTR [ebx],0x6c
6401a614:	jne    0x6401a626
6401a616:	inc    ebx
6401a617:	or     DWORD PTR [ebp-0x18],0x1000
6401a61e:	mov    DWORD PTR [ebp-0x48],ebx
6401a621:	jmp    0x6401ac7d
6401a626:	or     DWORD PTR [ebp-0x18],0x10
6401a62a:	jmp    0x6401ac7d
6401a62f:	or     DWORD PTR [ebp-0x18],0x20
6401a633:	jmp    0x6401ac7d
6401a638:	mov    al,BYTE PTR [ebx]
6401a63a:	cmp    al,0x36
6401a63c:	jne    0x6401a655
6401a63e:	cmp    BYTE PTR [ebx+0x1],0x34
6401a642:	jne    0x6401a655
6401a644:	inc    ebx
6401a645:	inc    ebx
6401a646:	or     DWORD PTR [ebp-0x18],0x8000
6401a64d:	mov    DWORD PTR [ebp-0x48],ebx
6401a650:	jmp    0x6401ac7d
6401a655:	cmp    al,0x33
6401a657:	jne    0x6401a670
6401a659:	cmp    BYTE PTR [ebx+0x1],0x32
6401a65d:	jne    0x6401a670
6401a65f:	inc    ebx
6401a660:	inc    ebx
6401a661:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401a668:	mov    DWORD PTR [ebp-0x48],ebx
6401a66b:	jmp    0x6401ac7d
6401a670:	cmp    al,0x64
6401a672:	je     0x6401ac7d
6401a678:	cmp    al,0x69
6401a67a:	je     0x6401ac7d
6401a680:	cmp    al,0x6f
6401a682:	je     0x6401ac7d
6401a688:	cmp    al,0x75
6401a68a:	je     0x6401ac7d
6401a690:	cmp    al,0x78
6401a692:	je     0x6401ac7d
6401a698:	cmp    al,0x58
6401a69a:	je     0x6401ac7d
6401a6a0:	mov    DWORD PTR [ebp-0x74],esi
6401a6a3:	lea    eax,[ebp-0x64]
6401a6a6:	push   eax
6401a6a7:	movzx  eax,dl
6401a6aa:	push   eax
6401a6ab:	mov    DWORD PTR [ebp-0x44],esi
6401a6ae:	call   0x6401b380
6401a6b3:	pop    ecx
6401a6b4:	test   eax,eax
6401a6b6:	mov    al,BYTE PTR [ebp-0x19]
6401a6b9:	pop    ecx
6401a6ba:	je     0x6401a6d5
6401a6bc:	mov    ecx,DWORD PTR [ebp-0x30]
6401a6bf:	lea    esi,[ebp-0x34]
6401a6c2:	call   0x6401a30a
6401a6c7:	mov    al,BYTE PTR [ebx]
6401a6c9:	inc    ebx
6401a6ca:	test   al,al
6401a6cc:	mov    DWORD PTR [ebp-0x48],ebx
6401a6cf:	je     0x6401ac96
6401a6d5:	mov    ecx,DWORD PTR [ebp-0x30]
6401a6d8:	lea    esi,[ebp-0x34]
6401a6db:	call   0x6401a30a
6401a6e0:	jmp    0x6401ac7d
6401a6e5:	movsx  eax,dl
6401a6e8:	cmp    eax,0x64
6401a6eb:	jg     0x6401a863
6401a6f1:	je     0x6401a8e2
6401a6f7:	cmp    eax,0x53
6401a6fa:	jg     0x6401a7ab
6401a700:	je     0x6401a75c
6401a702:	sub    eax,0x41
6401a705:	je     0x6401a717
6401a707:	dec    eax
6401a708:	dec    eax
6401a709:	je     0x6401a74b
6401a70b:	dec    eax
6401a70c:	dec    eax
6401a70d:	je     0x6401a717
6401a70f:	dec    eax
6401a710:	dec    eax
6401a711:	jne    0x6401ab65
6401a717:	add    dl,0x20
6401a71a:	mov    DWORD PTR [ebp-0x78],0x1
6401a721:	mov    BYTE PTR [ebp-0x19],dl
6401a724:	or     DWORD PTR [ebp-0x18],0x40
6401a728:	cmp    DWORD PTR [ebp-0x20],esi
6401a72b:	lea    ebx,[ebp-0x14]
6401a72e:	mov    eax,0x200
6401a733:	mov    DWORD PTR [ebp-0x24],ebx
6401a736:	mov    DWORD PTR [ebp-0x68],eax
6401a739:	jge    0x6401a906
6401a73f:	mov    DWORD PTR [ebp-0x20],0x6
6401a746:	jmp    0x6401a954
6401a74b:	test   WORD PTR [ebp-0x18],0x830
6401a751:	jne    0x6401a7c8
6401a753:	or     DWORD PTR [ebp-0x18],0x800
6401a75a:	jmp    0x6401a7c8
6401a75c:	test   WORD PTR [ebp-0x18],0x830
6401a762:	jne    0x6401a76b
6401a764:	or     DWORD PTR [ebp-0x18],0x800
6401a76b:	mov    ecx,DWORD PTR [ebp-0x20]
6401a76e:	cmp    ecx,0xffffffff
6401a771:	jne    0x6401a778
6401a773:	mov    ecx,0x7fffffff
6401a778:	add    edi,0x4
6401a77b:	test   WORD PTR [ebp-0x18],0x810
6401a781:	mov    DWORD PTR [ebp-0x2c],edi
6401a784:	mov    edi,DWORD PTR [edi-0x4]
6401a787:	mov    DWORD PTR [ebp-0x24],edi
6401a78a:	je     0x6401ab43
6401a790:	cmp    edi,esi
6401a792:	jne    0x6401a79c
6401a794:	mov    eax,ds:0x6402f954
6401a799:	mov    DWORD PTR [ebp-0x24],eax
6401a79c:	mov    eax,DWORD PTR [ebp-0x24]
6401a79f:	mov    DWORD PTR [ebp-0x44],0x1
6401a7a6:	jmp    0x6401ab38
6401a7ab:	sub    eax,0x58
6401a7ae:	je     0x6401a9ed
6401a7b4:	dec    eax
6401a7b5:	dec    eax
6401a7b6:	je     0x6401a815
6401a7b8:	sub    eax,ecx
6401a7ba:	je     0x6401a724
6401a7c0:	dec    eax
6401a7c1:	dec    eax
6401a7c2:	jne    0x6401ab65
6401a7c8:	add    edi,0x4
6401a7cb:	test   WORD PTR [ebp-0x18],0x810
6401a7d1:	mov    DWORD PTR [ebp-0x2c],edi
6401a7d4:	je     0x6401a7fd
6401a7d6:	movzx  eax,WORD PTR [edi-0x4]
6401a7da:	push   eax
6401a7db:	push   0x200
6401a7e0:	lea    eax,[ebp-0x14]
6401a7e3:	push   eax
6401a7e4:	lea    eax,[ebp-0x28]
6401a7e7:	push   eax
6401a7e8:	call   0x6401ef5b
6401a7ed:	add    esp,0x10
6401a7f0:	test   eax,eax
6401a7f2:	je     0x6401a80a
6401a7f4:	mov    DWORD PTR [ebp-0x50],0x1
6401a7fb:	jmp    0x6401a80a
6401a7fd:	mov    al,BYTE PTR [edi-0x4]
6401a800:	mov    BYTE PTR [ebp-0x14],al
6401a803:	mov    DWORD PTR [ebp-0x28],0x1
6401a80a:	lea    eax,[ebp-0x14]
6401a80d:	mov    DWORD PTR [ebp-0x24],eax
6401a810:	jmp    0x6401ab65
6401a815:	mov    eax,DWORD PTR [edi]
6401a817:	add    edi,0x4
6401a81a:	cmp    eax,esi
6401a81c:	mov    DWORD PTR [ebp-0x2c],edi
6401a81f:	je     0x6401a84f
6401a821:	mov    ecx,DWORD PTR [eax+0x4]
6401a824:	cmp    ecx,esi
6401a826:	je     0x6401a84f
6401a828:	test   WORD PTR [ebp-0x18],0x800
6401a82e:	movsx  eax,WORD PTR [eax]
6401a831:	mov    DWORD PTR [ebp-0x24],ecx
6401a834:	je     0x6401a847
6401a836:	cdq    
6401a837:	sub    eax,edx
6401a839:	sar    eax,1
6401a83b:	mov    DWORD PTR [ebp-0x44],0x1
6401a842:	jmp    0x6401ab62
6401a847:	mov    DWORD PTR [ebp-0x44],esi
6401a84a:	jmp    0x6401ab62
6401a84f:	mov    eax,ds:0x6402f950
6401a854:	mov    DWORD PTR [ebp-0x24],eax
6401a857:	push   eax
6401a858:	call   0x64015730
6401a85d:	pop    ecx
6401a85e:	jmp    0x6401ab62
6401a863:	cmp    eax,0x70
6401a866:	jg     0x6401a9f2
6401a86c:	je     0x6401a9e6
6401a872:	cmp    eax,0x65
6401a875:	jl     0x6401ab65
6401a87b:	cmp    eax,0x67
6401a87e:	jle    0x6401a724
6401a884:	cmp    eax,0x69
6401a887:	je     0x6401a8e2
6401a889:	cmp    eax,0x6e
6401a88c:	je     0x6401a8ad
6401a88e:	cmp    eax,0x6f
6401a891:	jne    0x6401ab65
6401a897:	test   BYTE PTR [ebp-0x18],0x80
6401a89b:	mov    DWORD PTR [ebp-0x28],0x8
6401a8a2:	je     0x6401a8ed
6401a8a4:	or     DWORD PTR [ebp-0x18],0x200
6401a8ab:	jmp    0x6401a8ed
6401a8ad:	mov    esi,DWORD PTR [edi]
6401a8af:	add    edi,0x4
6401a8b2:	mov    DWORD PTR [ebp-0x2c],edi
6401a8b5:	call   0x6401dfa8
6401a8ba:	test   eax,eax
6401a8bc:	je     0x6401ac96
6401a8c2:	test   BYTE PTR [ebp-0x18],0x20
6401a8c6:	je     0x6401a8d1
6401a8c8:	mov    ax,WORD PTR [ebp-0x34]
6401a8cc:	mov    WORD PTR [esi],ax
6401a8cf:	jmp    0x6401a8d6
6401a8d1:	mov    eax,DWORD PTR [ebp-0x34]
6401a8d4:	mov    DWORD PTR [esi],eax
6401a8d6:	mov    DWORD PTR [ebp-0x50],0x1
6401a8dd:	jmp    0x6401ac6a
6401a8e2:	or     DWORD PTR [ebp-0x18],0x40
6401a8e6:	mov    DWORD PTR [ebp-0x28],0xa
6401a8ed:	mov    ecx,DWORD PTR [ebp-0x18]
6401a8f0:	test   cx,cx
6401a8f3:	jns    0x6401aa3c
6401a8f9:	mov    eax,DWORD PTR [edi]
6401a8fb:	mov    edx,DWORD PTR [edi+0x4]
6401a8fe:	add    edi,0x8
6401a901:	jmp    0x6401aa71
6401a906:	jne    0x6401a916
6401a908:	cmp    dl,0x67
6401a90b:	jne    0x6401a954
6401a90d:	mov    DWORD PTR [ebp-0x20],0x1
6401a914:	jmp    0x6401a954
6401a916:	cmp    DWORD PTR [ebp-0x20],eax
6401a919:	jle    0x6401a91e
6401a91b:	mov    DWORD PTR [ebp-0x20],eax
6401a91e:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a925:	jle    0x6401a954
6401a927:	mov    esi,DWORD PTR [ebp-0x20]
6401a92a:	add    esi,0x15d
6401a930:	push   esi
6401a931:	call   0x64017240
6401a936:	test   eax,eax
6401a938:	mov    dl,BYTE PTR [ebp-0x19]
6401a93b:	pop    ecx
6401a93c:	mov    DWORD PTR [ebp-0x54],eax
6401a93f:	je     0x6401a94b
6401a941:	mov    DWORD PTR [ebp-0x24],eax
6401a944:	mov    DWORD PTR [ebp-0x68],esi
6401a947:	mov    ebx,eax
6401a949:	jmp    0x6401a952
6401a94b:	mov    DWORD PTR [ebp-0x20],0xa3
6401a952:	xor    esi,esi
6401a954:	mov    eax,DWORD PTR [edi]
6401a956:	add    edi,0x8
6401a959:	mov    DWORD PTR [ebp-0x80],eax
6401a95c:	mov    eax,DWORD PTR [edi-0x4]
6401a95f:	mov    DWORD PTR [ebp-0x7c],eax
6401a962:	lea    eax,[ebp-0x64]
6401a965:	push   eax
6401a966:	push   DWORD PTR [ebp-0x78]
6401a969:	movsx  eax,dl
6401a96c:	push   DWORD PTR [ebp-0x20]
6401a96f:	mov    DWORD PTR [ebp-0x2c],edi
6401a972:	push   eax
6401a973:	push   DWORD PTR [ebp-0x68]
6401a976:	lea    eax,[ebp-0x80]
6401a979:	push   ebx
6401a97a:	push   eax
6401a97b:	push   DWORD PTR ds:0x6402fb64
6401a981:	call   0x64015e5f
6401a986:	pop    ecx
6401a987:	call   eax
6401a989:	mov    edi,DWORD PTR [ebp-0x18]
6401a98c:	add    esp,0x1c
6401a98f:	and    edi,0x80
6401a995:	je     0x6401a9b1
6401a997:	cmp    DWORD PTR [ebp-0x20],esi
6401a99a:	jne    0x6401a9b1
6401a99c:	lea    eax,[ebp-0x64]
6401a99f:	push   eax
6401a9a0:	push   ebx
6401a9a1:	push   DWORD PTR ds:0x6402fb70
6401a9a7:	call   0x64015e5f
6401a9ac:	pop    ecx
6401a9ad:	call   eax
6401a9af:	pop    ecx
6401a9b0:	pop    ecx
6401a9b1:	cmp    BYTE PTR [ebp-0x19],0x67
6401a9b5:	jne    0x6401a9d0
6401a9b7:	cmp    edi,esi
6401a9b9:	jne    0x6401a9d0
6401a9bb:	lea    eax,[ebp-0x64]
6401a9be:	push   eax
6401a9bf:	push   ebx
6401a9c0:	push   DWORD PTR ds:0x6402fb6c
6401a9c6:	call   0x64015e5f
6401a9cb:	pop    ecx
6401a9cc:	call   eax
6401a9ce:	pop    ecx
6401a9cf:	pop    ecx
6401a9d0:	cmp    BYTE PTR [ebx],0x2d
6401a9d3:	jne    0x6401a9e0
6401a9d5:	or     DWORD PTR [ebp-0x18],0x100
6401a9dc:	inc    ebx
6401a9dd:	mov    DWORD PTR [ebp-0x24],ebx
6401a9e0:	push   ebx
6401a9e1:	jmp    0x6401a858
6401a9e6:	mov    DWORD PTR [ebp-0x20],0x8
6401a9ed:	mov    DWORD PTR [ebp-0x4c],ecx
6401a9f0:	jmp    0x6401aa13
6401a9f2:	sub    eax,0x73
6401a9f5:	je     0x6401a76b
6401a9fb:	dec    eax
6401a9fc:	dec    eax
6401a9fd:	je     0x6401a8e6
6401aa03:	sub    eax,0x3
6401aa06:	jne    0x6401ab65
6401aa0c:	mov    DWORD PTR [ebp-0x4c],0x27
6401aa13:	test   BYTE PTR [ebp-0x18],0x80
6401aa17:	mov    DWORD PTR [ebp-0x28],0x10
6401aa1e:	je     0x6401a8ed
6401aa24:	mov    al,BYTE PTR [ebp-0x4c]
6401aa27:	add    al,0x51
6401aa29:	mov    BYTE PTR [ebp-0x38],0x30
6401aa2d:	mov    BYTE PTR [ebp-0x37],al
6401aa30:	mov    DWORD PTR [ebp-0x3c],0x2
6401aa37:	jmp    0x6401a8ed
6401aa3c:	test   cx,0x1000
6401aa41:	jne    0x6401a8f9
6401aa47:	add    edi,0x4
6401aa4a:	test   cl,0x20
6401aa4d:	je     0x6401aa64
6401aa4f:	test   cl,0x40
6401aa52:	mov    DWORD PTR [ebp-0x2c],edi
6401aa55:	je     0x6401aa5d
6401aa57:	movsx  eax,WORD PTR [edi-0x4]
6401aa5b:	jmp    0x6401aa61
6401aa5d:	movzx  eax,WORD PTR [edi-0x4]
6401aa61:	cdq    
6401aa62:	jmp    0x6401aa74
6401aa64:	test   cl,0x40
6401aa67:	mov    eax,DWORD PTR [edi-0x4]
6401aa6a:	je     0x6401aa6f
6401aa6c:	cdq    
6401aa6d:	jmp    0x6401aa71
6401aa6f:	xor    edx,edx
6401aa71:	mov    DWORD PTR [ebp-0x2c],edi
6401aa74:	test   cl,0x40
6401aa77:	je     0x6401aa91
6401aa79:	cmp    edx,esi
6401aa7b:	jg     0x6401aa91
6401aa7d:	jl     0x6401aa83
6401aa7f:	cmp    eax,esi
6401aa81:	jae    0x6401aa91
6401aa83:	neg    eax
6401aa85:	adc    edx,0x0
6401aa88:	neg    edx
6401aa8a:	or     DWORD PTR [ebp-0x18],0x100
6401aa91:	test   WORD PTR [ebp-0x18],0x9000
6401aa97:	mov    ebx,edx
6401aa99:	mov    edi,eax
6401aa9b:	jne    0x6401aa9f
6401aa9d:	xor    ebx,ebx
6401aa9f:	cmp    DWORD PTR [ebp-0x20],0x0
6401aaa3:	jge    0x6401aaae
6401aaa5:	mov    DWORD PTR [ebp-0x20],0x1
6401aaac:	jmp    0x6401aabf
6401aaae:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401aab2:	mov    eax,0x200
6401aab7:	cmp    DWORD PTR [ebp-0x20],eax
6401aaba:	jle    0x6401aabf
6401aabc:	mov    DWORD PTR [ebp-0x20],eax
6401aabf:	mov    eax,edi
6401aac1:	or     eax,ebx
6401aac3:	jne    0x6401aac8
6401aac5:	and    DWORD PTR [ebp-0x3c],eax
6401aac8:	lea    esi,[ebp+0x1eb]
6401aace:	mov    eax,DWORD PTR [ebp-0x20]
6401aad1:	dec    DWORD PTR [ebp-0x20]
6401aad4:	test   eax,eax
6401aad6:	jg     0x6401aade
6401aad8:	mov    eax,edi
6401aada:	or     eax,ebx
6401aadc:	je     0x6401ab02
6401aade:	mov    eax,DWORD PTR [ebp-0x28]
6401aae1:	cdq    
6401aae2:	push   edx
6401aae3:	push   eax
6401aae4:	push   ebx
6401aae5:	push   edi
6401aae6:	call   0x6401ae50
6401aaeb:	add    ecx,0x30
6401aaee:	cmp    ecx,0x39
6401aaf1:	mov    DWORD PTR [ebp-0x68],ebx
6401aaf4:	mov    edi,eax
6401aaf6:	mov    ebx,edx
6401aaf8:	jle    0x6401aafd
6401aafa:	add    ecx,DWORD PTR [ebp-0x4c]
6401aafd:	mov    BYTE PTR [esi],cl
6401aaff:	dec    esi
6401ab00:	jmp    0x6401aace
6401ab02:	lea    eax,[ebp+0x1eb]
6401ab08:	sub    eax,esi
6401ab0a:	inc    esi
6401ab0b:	test   WORD PTR [ebp-0x18],0x200
6401ab11:	mov    DWORD PTR [ebp-0x28],eax
6401ab14:	mov    DWORD PTR [ebp-0x24],esi
6401ab17:	je     0x6401ab65
6401ab19:	test   eax,eax
6401ab1b:	je     0x6401ab24
6401ab1d:	mov    ecx,esi
6401ab1f:	cmp    BYTE PTR [ecx],0x30
6401ab22:	je     0x6401ab65
6401ab24:	dec    DWORD PTR [ebp-0x24]
6401ab27:	mov    ecx,DWORD PTR [ebp-0x24]
6401ab2a:	mov    BYTE PTR [ecx],0x30
6401ab2d:	inc    eax
6401ab2e:	jmp    0x6401ab62
6401ab30:	dec    ecx
6401ab31:	cmp    WORD PTR [eax],si
6401ab34:	je     0x6401ab3c
6401ab36:	inc    eax
6401ab37:	inc    eax
6401ab38:	cmp    ecx,esi
6401ab3a:	jne    0x6401ab30
6401ab3c:	sub    eax,DWORD PTR [ebp-0x24]
6401ab3f:	sar    eax,1
6401ab41:	jmp    0x6401ab62
6401ab43:	cmp    edi,esi
6401ab45:	jne    0x6401ab4f
6401ab47:	mov    eax,ds:0x6402f950
6401ab4c:	mov    DWORD PTR [ebp-0x24],eax
6401ab4f:	mov    eax,DWORD PTR [ebp-0x24]
6401ab52:	jmp    0x6401ab5b
6401ab54:	dec    ecx
6401ab55:	cmp    BYTE PTR [eax],0x0
6401ab58:	je     0x6401ab5f
6401ab5a:	inc    eax
6401ab5b:	cmp    ecx,esi
6401ab5d:	jne    0x6401ab54
6401ab5f:	sub    eax,DWORD PTR [ebp-0x24]
6401ab62:	mov    DWORD PTR [ebp-0x28],eax
6401ab65:	cmp    DWORD PTR [ebp-0x50],0x0
6401ab69:	jne    0x6401ac6a
6401ab6f:	mov    eax,DWORD PTR [ebp-0x18]
6401ab72:	test   al,0x40
6401ab74:	je     0x6401ab9b
6401ab76:	test   ax,0x100
6401ab7a:	je     0x6401ab82
6401ab7c:	mov    BYTE PTR [ebp-0x38],0x2d
6401ab80:	jmp    0x6401ab94
6401ab82:	test   al,0x1
6401ab84:	je     0x6401ab8c
6401ab86:	mov    BYTE PTR [ebp-0x38],0x2b
6401ab8a:	jmp    0x6401ab94
6401ab8c:	test   al,0x2
6401ab8e:	je     0x6401ab9b
6401ab90:	mov    BYTE PTR [ebp-0x38],0x20
6401ab94:	mov    DWORD PTR [ebp-0x3c],0x1
6401ab9b:	mov    ebx,DWORD PTR [ebp-0x40]
6401ab9e:	sub    ebx,DWORD PTR [ebp-0x28]
6401aba1:	sub    ebx,DWORD PTR [ebp-0x3c]
6401aba4:	test   BYTE PTR [ebp-0x18],0xc
6401aba8:	jne    0x6401abbb
6401abaa:	push   DWORD PTR [ebp-0x30]
6401abad:	lea    eax,[ebp-0x34]
6401abb0:	push   ebx
6401abb1:	push   0x20
6401abb3:	call   0x6401a33d
6401abb8:	add    esp,0xc
6401abbb:	push   DWORD PTR [ebp-0x3c]
6401abbe:	mov    edi,DWORD PTR [ebp-0x30]
6401abc1:	lea    eax,[ebp-0x34]
6401abc4:	lea    ecx,[ebp-0x38]
6401abc7:	call   0x6401e0e8
6401abcc:	test   BYTE PTR [ebp-0x18],0x8
6401abd0:	pop    ecx
6401abd1:	je     0x6401abe8
6401abd3:	test   BYTE PTR [ebp-0x18],0x4
6401abd7:	jne    0x6401abe8
6401abd9:	push   edi
6401abda:	push   ebx
6401abdb:	push   0x30
6401abdd:	lea    eax,[ebp-0x34]
6401abe0:	call   0x6401a33d
6401abe5:	add    esp,0xc
6401abe8:	cmp    DWORD PTR [ebp-0x44],0x0
6401abec:	mov    eax,DWORD PTR [ebp-0x28]
6401abef:	je     0x6401ac42
6401abf1:	test   eax,eax
6401abf3:	jle    0x6401ac42
6401abf5:	mov    esi,DWORD PTR [ebp-0x24]
6401abf8:	mov    DWORD PTR [ebp-0x68],eax
6401abfb:	movzx  eax,WORD PTR [esi]
6401abfe:	dec    DWORD PTR [ebp-0x68]
6401ac01:	push   eax
6401ac02:	push   0x6
6401ac04:	lea    eax,[ebp+0x1ec]
6401ac0a:	push   eax
6401ac0b:	lea    eax,[ebp-0x70]
6401ac0e:	inc    esi
6401ac0f:	push   eax
6401ac10:	inc    esi
6401ac11:	call   0x6401ef5b
6401ac16:	add    esp,0x10
6401ac19:	test   eax,eax
6401ac1b:	jne    0x6401ac3c
6401ac1d:	cmp    DWORD PTR [ebp-0x70],eax
6401ac20:	je     0x6401ac3c
6401ac22:	push   DWORD PTR [ebp-0x70]
6401ac25:	lea    eax,[ebp-0x34]
6401ac28:	lea    ecx,[ebp+0x1ec]
6401ac2e:	call   0x6401e0e8
6401ac33:	cmp    DWORD PTR [ebp-0x68],0x0
6401ac37:	pop    ecx
6401ac38:	jne    0x6401abfb
6401ac3a:	jmp    0x6401ac4f
6401ac3c:	or     DWORD PTR [ebp-0x34],0xffffffff
6401ac40:	jmp    0x6401ac4f
6401ac42:	mov    ecx,DWORD PTR [ebp-0x24]
6401ac45:	push   eax
6401ac46:	lea    eax,[ebp-0x34]
6401ac49:	call   0x6401e0e8
6401ac4e:	pop    ecx
6401ac4f:	cmp    DWORD PTR [ebp-0x34],0x0
6401ac53:	jl     0x6401ac6a
6401ac55:	test   BYTE PTR [ebp-0x18],0x4
6401ac59:	je     0x6401ac6a
6401ac5b:	push   edi
6401ac5c:	push   ebx
6401ac5d:	push   0x20
6401ac5f:	lea    eax,[ebp-0x34]
6401ac62:	call   0x6401a33d
6401ac67:	add    esp,0xc
6401ac6a:	cmp    DWORD PTR [ebp-0x54],0x0
6401ac6e:	je     0x6401ac7d
6401ac70:	push   DWORD PTR [ebp-0x54]
6401ac73:	call   0x64014e06
6401ac78:	and    DWORD PTR [ebp-0x54],0x0
6401ac7c:	pop    ecx
6401ac7d:	mov    ebx,DWORD PTR [ebp-0x48]
6401ac80:	mov    al,BYTE PTR [ebx]
6401ac82:	test   al,al
6401ac84:	mov    BYTE PTR [ebp-0x19],al
6401ac87:	je     0x6401acad
6401ac89:	mov    ecx,DWORD PTR [ebp-0x74]
6401ac8c:	mov    edi,DWORD PTR [ebp-0x2c]
6401ac8f:	mov    dl,al
6401ac91:	jmp    0x6401a4bf
6401ac96:	call   0x64015d30
6401ac9b:	mov    DWORD PTR [eax],0x16
6401aca1:	xor    eax,eax
6401aca3:	push   eax
6401aca4:	push   eax
6401aca5:	push   eax
6401aca6:	push   eax
6401aca7:	push   eax
6401aca8:	jmp    0x6401a3d1
6401acad:	cmp    BYTE PTR [ebp-0x58],0x0
6401acb1:	je     0x6401acba
6401acb3:	mov    eax,DWORD PTR [ebp-0x5c]
6401acb6:	and    DWORD PTR [eax+0x70],0xfffffffd
6401acba:	mov    eax,DWORD PTR [ebp-0x34]
6401acbd:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401acc3:	pop    edi
6401acc4:	pop    esi
6401acc5:	xor    ecx,ebp
6401acc7:	pop    ebx
6401acc8:	call   0x64013f6c
6401accd:	add    ebp,0x1f8
6401acd3:	leave  
6401acd4:	ret    
6401acd5:	mov    ds:0xa6401a6,eax
6401acda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401acdb:	add    DWORD PTR [ebp+eiz*1-0x5b],esp
6401acdf:	add    DWORD PTR [esp+esi*2-0x5b],esp
6401ace3:	add    DWORD PTR [esi+ebp*4-0x5b],esp
6401ace7:	add    DWORD PTR [esi+esi*4-0x5b],esp
6401aceb:	add    DWORD PTR [ebp+ebp*8-0x5b],esp
6401acef:	add    DWORD PTR [ebp+eiz*8-0x5a],esp
6401acf3:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401acf7:	in     al,dx
6401acf8:	sub    esp,0x20
6401acfb:	push   ebx
6401acfc:	xor    ebx,ebx
6401acfe:	cmp    DWORD PTR [ebp+0x14],ebx
6401ad01:	jne    0x6401ad23
6401ad03:	call   0x64015d30
6401ad08:	push   ebx
6401ad09:	push   ebx
6401ad0a:	push   ebx
6401ad0b:	push   ebx
6401ad0c:	push   ebx
6401ad0d:	mov    DWORD PTR [eax],0x16
6401ad13:	call   0x64013aa4
6401ad18:	add    esp,0x14
6401ad1b:	or     eax,0xffffffff
6401ad1e:	jmp    0x6401adbc
6401ad23:	push   esi
6401ad24:	mov    esi,DWORD PTR [ebp+0xc]
6401ad27:	push   edi
6401ad28:	mov    edi,DWORD PTR [ebp+0x10]
6401ad2b:	cmp    edi,ebx
6401ad2d:	je     0x6401ad50
6401ad2f:	cmp    esi,ebx
6401ad31:	jne    0x6401ad50
6401ad33:	call   0x64015d30
6401ad38:	push   ebx
6401ad39:	push   ebx
6401ad3a:	push   ebx
6401ad3b:	push   ebx
6401ad3c:	push   ebx
6401ad3d:	mov    DWORD PTR [eax],0x16
6401ad43:	call   0x64013aa4
6401ad48:	add    esp,0x14
6401ad4b:	or     eax,0xffffffff
6401ad4e:	jmp    0x6401adba
6401ad50:	mov    eax,0x7fffffff
6401ad55:	cmp    edi,eax
6401ad57:	mov    DWORD PTR [ebp-0x1c],eax
6401ad5a:	ja     0x6401ad5f
6401ad5c:	mov    DWORD PTR [ebp-0x1c],edi
6401ad5f:	push   DWORD PTR [ebp+0x1c]
6401ad62:	lea    eax,[ebp-0x20]
6401ad65:	push   DWORD PTR [ebp+0x18]
6401ad68:	mov    DWORD PTR [ebp-0x14],0x42
6401ad6f:	push   DWORD PTR [ebp+0x14]
6401ad72:	mov    DWORD PTR [ebp-0x18],esi
6401ad75:	push   eax
6401ad76:	mov    DWORD PTR [ebp-0x20],esi
6401ad79:	call   DWORD PTR [ebp+0x8]
6401ad7c:	add    esp,0x10
6401ad7f:	cmp    esi,ebx
6401ad81:	mov    DWORD PTR [ebp+0x14],eax
6401ad84:	je     0x6401adba
6401ad86:	cmp    eax,ebx
6401ad88:	jl     0x6401adac
6401ad8a:	dec    DWORD PTR [ebp-0x1c]
6401ad8d:	js     0x6401ad96
6401ad8f:	mov    eax,DWORD PTR [ebp-0x20]
6401ad92:	mov    BYTE PTR [eax],bl
6401ad94:	jmp    0x6401ada7
6401ad96:	lea    eax,[ebp-0x20]
6401ad99:	push   eax
6401ad9a:	push   ebx
6401ad9b:	call   0x64018075
6401ada0:	cmp    eax,0xffffffff
6401ada3:	pop    ecx
6401ada4:	pop    ecx
6401ada5:	je     0x6401adac
6401ada7:	mov    eax,DWORD PTR [ebp+0x14]
6401adaa:	jmp    0x6401adba
6401adac:	xor    eax,eax
6401adae:	cmp    DWORD PTR [ebp-0x1c],ebx
6401adb1:	mov    BYTE PTR [esi+edi*1-0x1],bl
6401adb5:	setge  al
6401adb8:	dec    eax
6401adb9:	dec    eax
6401adba:	pop    edi
6401adbb:	pop    esi
6401adbc:	pop    ebx
6401adbd:	leave  
6401adbe:	ret    
6401adbf:	push   ebp
6401adc0:	mov    ebp,esp
6401adc2:	push   ebx
6401adc3:	xor    ebx,ebx
6401adc5:	cmp    DWORD PTR [ebp+0x10],ebx
6401adc8:	jne    0x6401ade7
6401adca:	call   0x64015d30
6401adcf:	push   ebx
6401add0:	push   ebx
6401add1:	push   ebx
6401add2:	push   ebx
6401add3:	push   ebx
6401add4:	mov    DWORD PTR [eax],0x16
6401adda:	call   0x64013aa4
6401addf:	add    esp,0x14
6401ade2:	or     eax,0xffffffff
6401ade5:	jmp    0x6401ae42
6401ade7:	push   esi
6401ade8:	mov    esi,DWORD PTR [ebp+0x8]
6401adeb:	cmp    esi,ebx
6401aded:	je     0x6401adf4
6401adef:	cmp    DWORD PTR [ebp+0xc],ebx
6401adf2:	ja     0x6401ae01
6401adf4:	call   0x64015d30
6401adf9:	mov    DWORD PTR [eax],0x16
6401adff:	jmp    0x6401ae31
6401ae01:	push   DWORD PTR [ebp+0x18]
6401ae04:	push   DWORD PTR [ebp+0x14]
6401ae07:	push   DWORD PTR [ebp+0x10]
6401ae0a:	push   DWORD PTR [ebp+0xc]
6401ae0d:	push   esi
6401ae0e:	push   0x6401e132
6401ae13:	call   0x6401acf5
6401ae18:	add    esp,0x18
6401ae1b:	cmp    eax,ebx
6401ae1d:	jge    0x6401ae21
6401ae1f:	mov    BYTE PTR [esi],bl
6401ae21:	cmp    eax,0xfffffffe
6401ae24:	jne    0x6401ae41
6401ae26:	call   0x64015d30
6401ae2b:	mov    DWORD PTR [eax],0x22
6401ae31:	push   ebx
6401ae32:	push   ebx
6401ae33:	push   ebx
6401ae34:	push   ebx
6401ae35:	push   ebx
6401ae36:	call   0x64013aa4
6401ae3b:	add    esp,0x14
6401ae3e:	or     eax,0xffffffff
6401ae41:	pop    esi
6401ae42:	pop    ebx
6401ae43:	pop    ebp
6401ae44:	ret    
6401ae45:	int3   
6401ae46:	int3   
6401ae47:	int3   
6401ae48:	int3   
6401ae49:	int3   
6401ae4a:	int3   
6401ae4b:	int3   
6401ae4c:	int3   
6401ae4d:	int3   
6401ae4e:	int3   
6401ae4f:	int3   
6401ae50:	push   esi
6401ae51:	mov    eax,DWORD PTR [esp+0x14]
6401ae55:	or     eax,eax
6401ae57:	jne    0x6401ae81
6401ae59:	mov    ecx,DWORD PTR [esp+0x10]
6401ae5d:	mov    eax,DWORD PTR [esp+0xc]
6401ae61:	xor    edx,edx
6401ae63:	div    ecx
6401ae65:	mov    ebx,eax
6401ae67:	mov    eax,DWORD PTR [esp+0x8]
6401ae6b:	div    ecx
6401ae6d:	mov    esi,eax
6401ae6f:	mov    eax,ebx
6401ae71:	mul    DWORD PTR [esp+0x10]
6401ae75:	mov    ecx,eax
6401ae77:	mov    eax,esi
6401ae79:	mul    DWORD PTR [esp+0x10]
6401ae7d:	add    edx,ecx
6401ae7f:	jmp    0x6401aec8
6401ae81:	mov    ecx,eax
6401ae83:	mov    ebx,DWORD PTR [esp+0x10]
6401ae87:	mov    edx,DWORD PTR [esp+0xc]
6401ae8b:	mov    eax,DWORD PTR [esp+0x8]
6401ae8f:	shr    ecx,1
6401ae91:	rcr    ebx,1
6401ae93:	shr    edx,1
6401ae95:	rcr    eax,1
6401ae97:	or     ecx,ecx
6401ae99:	jne    0x6401ae8f
6401ae9b:	div    ebx
6401ae9d:	mov    esi,eax
6401ae9f:	mul    DWORD PTR [esp+0x14]
6401aea3:	mov    ecx,eax
6401aea5:	mov    eax,DWORD PTR [esp+0x10]
6401aea9:	mul    esi
6401aeab:	add    edx,ecx
6401aead:	jb     0x6401aebd
6401aeaf:	cmp    edx,DWORD PTR [esp+0xc]
6401aeb3:	ja     0x6401aebd
6401aeb5:	jb     0x6401aec6
6401aeb7:	cmp    eax,DWORD PTR [esp+0x8]
6401aebb:	jbe    0x6401aec6
6401aebd:	dec    esi
6401aebe:	sub    eax,DWORD PTR [esp+0x10]
6401aec2:	sbb    edx,DWORD PTR [esp+0x14]
6401aec6:	xor    ebx,ebx
6401aec8:	sub    eax,DWORD PTR [esp+0x8]
6401aecc:	sbb    edx,DWORD PTR [esp+0xc]
6401aed0:	neg    edx
6401aed2:	neg    eax
6401aed4:	sbb    edx,0x0
6401aed7:	mov    ecx,edx
6401aed9:	mov    edx,ebx
6401aedb:	mov    ebx,ecx
6401aedd:	mov    ecx,eax
6401aedf:	mov    eax,esi
6401aee1:	pop    esi
6401aee2:	ret    0x10
6401aee5:	push   ebp
6401aee6:	mov    ebp,esp
6401aee8:	sub    esp,0x18
6401aeeb:	push   ebx
6401aeec:	push   DWORD PTR [ebp+0x10]
6401aeef:	lea    ecx,[ebp-0x18]
6401aef2:	call   0x6401410f
6401aef7:	mov    ebx,DWORD PTR [ebp+0x8]
6401aefa:	lea    eax,[ebx+0x1]
6401aefd:	cmp    eax,0x100
6401af02:	ja     0x6401af13
6401af04:	mov    eax,DWORD PTR [ebp-0x18]
6401af07:	mov    eax,DWORD PTR [eax+0xc8]
6401af0d:	movzx  eax,WORD PTR [eax+ebx*2]
6401af11:	jmp    0x6401af88
6401af13:	mov    DWORD PTR [ebp+0x8],ebx
6401af16:	sar    DWORD PTR [ebp+0x8],0x8
6401af1a:	lea    eax,[ebp-0x18]
6401af1d:	push   eax
6401af1e:	mov    eax,DWORD PTR [ebp+0x8]
6401af21:	and    eax,0xff
6401af26:	push   eax
6401af27:	call   0x6401b380
6401af2c:	test   eax,eax
6401af2e:	pop    ecx
6401af2f:	pop    ecx
6401af30:	je     0x6401af44
6401af32:	mov    al,BYTE PTR [ebp+0x8]
6401af35:	push   0x2
6401af37:	mov    BYTE PTR [ebp-0x8],al
6401af3a:	mov    BYTE PTR [ebp-0x7],bl
6401af3d:	mov    BYTE PTR [ebp-0x6],0x0
6401af41:	pop    ecx
6401af42:	jmp    0x6401af4e
6401af44:	xor    ecx,ecx
6401af46:	mov    BYTE PTR [ebp-0x8],bl
6401af49:	mov    BYTE PTR [ebp-0x7],0x0
6401af4d:	inc    ecx
6401af4e:	mov    eax,DWORD PTR [ebp-0x18]
6401af51:	push   0x1
6401af53:	push   DWORD PTR [eax+0x14]
6401af56:	push   DWORD PTR [eax+0x4]
6401af59:	lea    eax,[ebp-0x4]
6401af5c:	push   eax
6401af5d:	push   ecx
6401af5e:	lea    eax,[ebp-0x8]
6401af61:	push   eax
6401af62:	lea    eax,[ebp-0x18]
6401af65:	push   0x1
6401af67:	push   eax
6401af68:	call   0x6401ce75
6401af6d:	add    esp,0x20
6401af70:	test   eax,eax
6401af72:	jne    0x6401af84
6401af74:	cmp    BYTE PTR [ebp-0xc],al
6401af77:	je     0x6401af80
6401af79:	mov    eax,DWORD PTR [ebp-0x10]
6401af7c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401af80:	xor    eax,eax
6401af82:	jmp    0x6401af98
6401af84:	movzx  eax,WORD PTR [ebp-0x4]
6401af88:	and    eax,DWORD PTR [ebp+0xc]
6401af8b:	cmp    BYTE PTR [ebp-0xc],0x0
6401af8f:	je     0x6401af98
6401af91:	mov    ecx,DWORD PTR [ebp-0x10]
6401af94:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401af98:	pop    ebx
6401af99:	leave  
6401af9a:	ret    
6401af9b:	push   ebp
6401af9c:	mov    ebp,esp
6401af9e:	sub    esp,0x14
6401afa1:	mov    eax,ds:0x6402f09c
6401afa6:	xor    eax,ebp
6401afa8:	mov    DWORD PTR [ebp-0x4],eax
6401afab:	push   ebx
6401afac:	push   esi
6401afad:	xor    ebx,ebx
6401afaf:	cmp    DWORD PTR ds:0x64030a70,ebx
6401afb5:	push   edi
6401afb6:	mov    esi,ecx
6401afb8:	jne    0x6401aff2
6401afba:	push   ebx
6401afbb:	push   ebx
6401afbc:	xor    edi,edi
6401afbe:	inc    edi
6401afbf:	push   edi
6401afc0:	push   0x640286e0
6401afc5:	push   0x100
6401afca:	push   ebx
6401afcb:	call   DWORD PTR ds:0x6402614c
6401afd1:	test   eax,eax
6401afd3:	je     0x6401afdd
6401afd5:	mov    DWORD PTR ds:0x64030a70,edi
6401afdb:	jmp    0x6401aff2
6401afdd:	call   DWORD PTR ds:0x64026044
6401afe3:	cmp    eax,0x78
6401afe6:	jne    0x6401aff2
6401afe8:	mov    DWORD PTR ds:0x64030a70,0x2
6401aff2:	cmp    DWORD PTR [ebp+0x14],ebx
6401aff5:	jle    0x6401b019
6401aff7:	mov    ecx,DWORD PTR [ebp+0x14]
6401affa:	mov    eax,DWORD PTR [ebp+0x10]
6401affd:	dec    ecx
6401affe:	cmp    BYTE PTR [eax],bl
6401b000:	je     0x6401b00a
6401b002:	inc    eax
6401b003:	cmp    ecx,ebx
6401b005:	jne    0x6401affd
6401b007:	or     ecx,0xffffffff
6401b00a:	mov    eax,DWORD PTR [ebp+0x14]
6401b00d:	sub    eax,ecx
6401b00f:	dec    eax
6401b010:	cmp    eax,DWORD PTR [ebp+0x14]
6401b013:	jge    0x6401b016
6401b015:	inc    eax
6401b016:	mov    DWORD PTR [ebp+0x14],eax
6401b019:	mov    eax,ds:0x64030a70
6401b01e:	cmp    eax,0x2
6401b021:	je     0x6401b1d2
6401b027:	cmp    eax,ebx
6401b029:	je     0x6401b1d2
6401b02f:	cmp    eax,0x1
6401b032:	jne    0x6401b203
6401b038:	cmp    DWORD PTR [ebp+0x20],ebx
6401b03b:	mov    DWORD PTR [ebp-0x8],ebx
6401b03e:	jne    0x6401b048
6401b040:	mov    eax,DWORD PTR [esi]
6401b042:	mov    eax,DWORD PTR [eax+0x4]
6401b045:	mov    DWORD PTR [ebp+0x20],eax
6401b048:	mov    esi,DWORD PTR ds:0x64026024
6401b04e:	xor    eax,eax
6401b050:	cmp    DWORD PTR [ebp+0x24],ebx
6401b053:	push   ebx
6401b054:	push   ebx
6401b055:	push   DWORD PTR [ebp+0x14]
6401b058:	setne  al
6401b05b:	push   DWORD PTR [ebp+0x10]
6401b05e:	lea    eax,[eax*8+0x1]
6401b065:	push   eax
6401b066:	push   DWORD PTR [ebp+0x20]
6401b069:	call   esi
6401b06b:	mov    edi,eax
6401b06d:	cmp    edi,ebx
6401b06f:	je     0x6401b203
6401b075:	jle    0x6401b0ba
6401b077:	push   0xffffffe0
6401b079:	xor    edx,edx
6401b07b:	pop    eax
6401b07c:	div    edi
6401b07e:	cmp    eax,0x2
6401b081:	jb     0x6401b0ba
6401b083:	lea    eax,[edi+edi*1+0x8]
6401b087:	cmp    eax,0x400
6401b08c:	ja     0x6401b0a1
6401b08e:	call   0x640146f0
6401b093:	mov    eax,esp
6401b095:	cmp    eax,ebx
6401b097:	je     0x6401b0b5
6401b099:	mov    DWORD PTR [eax],0xcccc
6401b09f:	jmp    0x6401b0b2
6401b0a1:	push   eax
6401b0a2:	call   0x64014ee3
6401b0a7:	cmp    eax,ebx
6401b0a9:	pop    ecx
6401b0aa:	je     0x6401b0b5
6401b0ac:	mov    DWORD PTR [eax],0xdddd
6401b0b2:	add    eax,0x8
6401b0b5:	mov    DWORD PTR [ebp-0xc],eax
6401b0b8:	jmp    0x6401b0bd
6401b0ba:	mov    DWORD PTR [ebp-0xc],ebx
6401b0bd:	cmp    DWORD PTR [ebp-0xc],ebx
6401b0c0:	je     0x6401b203
6401b0c6:	push   edi
6401b0c7:	push   DWORD PTR [ebp-0xc]
6401b0ca:	push   DWORD PTR [ebp+0x14]
6401b0cd:	push   DWORD PTR [ebp+0x10]
6401b0d0:	push   0x1
6401b0d2:	push   DWORD PTR [ebp+0x20]
6401b0d5:	call   esi
6401b0d7:	test   eax,eax
6401b0d9:	je     0x6401b1c1
6401b0df:	mov    esi,DWORD PTR ds:0x6402614c
6401b0e5:	push   ebx
6401b0e6:	push   ebx
6401b0e7:	push   edi
6401b0e8:	push   DWORD PTR [ebp-0xc]
6401b0eb:	push   DWORD PTR [ebp+0xc]
6401b0ee:	push   DWORD PTR [ebp+0x8]
6401b0f1:	call   esi
6401b0f3:	mov    ecx,eax
6401b0f5:	cmp    ecx,ebx
6401b0f7:	mov    DWORD PTR [ebp-0x8],ecx
6401b0fa:	je     0x6401b1c1
6401b100:	test   WORD PTR [ebp+0xc],0x400
6401b106:	je     0x6401b131
6401b108:	cmp    DWORD PTR [ebp+0x1c],ebx
6401b10b:	je     0x6401b1c1
6401b111:	cmp    ecx,DWORD PTR [ebp+0x1c]
6401b114:	jg     0x6401b1c1
6401b11a:	push   DWORD PTR [ebp+0x1c]
6401b11d:	push   DWORD PTR [ebp+0x18]
6401b120:	push   edi
6401b121:	push   DWORD PTR [ebp-0xc]
6401b124:	push   DWORD PTR [ebp+0xc]
6401b127:	push   DWORD PTR [ebp+0x8]
6401b12a:	call   esi
6401b12c:	jmp    0x6401b1c1
6401b131:	cmp    ecx,ebx
6401b133:	jle    0x6401b17a
6401b135:	push   0xffffffe0
6401b137:	xor    edx,edx
6401b139:	pop    eax
6401b13a:	div    ecx
6401b13c:	cmp    eax,0x2
6401b13f:	jb     0x6401b17a
6401b141:	lea    eax,[ecx+ecx*1+0x8]
6401b145:	cmp    eax,0x400
6401b14a:	ja     0x6401b162
6401b14c:	call   0x640146f0
6401b151:	mov    esi,esp
6401b153:	cmp    esi,ebx
6401b155:	je     0x6401b1c1
6401b157:	mov    DWORD PTR [esi],0xcccc
6401b15d:	add    esi,0x8
6401b160:	jmp    0x6401b17c
6401b162:	push   eax
6401b163:	call   0x64014ee3
6401b168:	cmp    eax,ebx
6401b16a:	pop    ecx
6401b16b:	je     0x6401b176
6401b16d:	mov    DWORD PTR [eax],0xdddd
6401b173:	add    eax,0x8
6401b176:	mov    esi,eax
6401b178:	jmp    0x6401b17c
6401b17a:	xor    esi,esi
6401b17c:	cmp    esi,ebx
6401b17e:	je     0x6401b1c1
6401b180:	push   DWORD PTR [ebp-0x8]
6401b183:	push   esi
6401b184:	push   edi
6401b185:	push   DWORD PTR [ebp-0xc]
6401b188:	push   DWORD PTR [ebp+0xc]
6401b18b:	push   DWORD PTR [ebp+0x8]
6401b18e:	call   DWORD PTR ds:0x6402614c
6401b194:	test   eax,eax
6401b196:	je     0x6401b1ba
6401b198:	cmp    DWORD PTR [ebp+0x1c],ebx
6401b19b:	push   ebx
6401b19c:	push   ebx
6401b19d:	jne    0x6401b1a3
6401b19f:	push   ebx
6401b1a0:	push   ebx
6401b1a1:	jmp    0x6401b1a9
6401b1a3:	push   DWORD PTR [ebp+0x1c]
6401b1a6:	push   DWORD PTR [ebp+0x18]
6401b1a9:	push   DWORD PTR [ebp-0x8]
6401b1ac:	push   esi
6401b1ad:	push   ebx
6401b1ae:	push   DWORD PTR [ebp+0x20]
6401b1b1:	call   DWORD PTR ds:0x64026028
6401b1b7:	mov    DWORD PTR [ebp-0x8],eax
6401b1ba:	push   esi
6401b1bb:	call   0x6401447c
6401b1c0:	pop    ecx
6401b1c1:	push   DWORD PTR [ebp-0xc]
6401b1c4:	call   0x6401447c
6401b1c9:	mov    eax,DWORD PTR [ebp-0x8]
6401b1cc:	pop    ecx
6401b1cd:	jmp    0x6401b32b
6401b1d2:	cmp    DWORD PTR [ebp+0x8],ebx
6401b1d5:	mov    DWORD PTR [ebp-0xc],ebx
6401b1d8:	mov    DWORD PTR [ebp-0x10],ebx
6401b1db:	jne    0x6401b1e5
6401b1dd:	mov    eax,DWORD PTR [esi]
6401b1df:	mov    eax,DWORD PTR [eax+0x14]
6401b1e2:	mov    DWORD PTR [ebp+0x8],eax
6401b1e5:	cmp    DWORD PTR [ebp+0x20],ebx
6401b1e8:	jne    0x6401b1f2
6401b1ea:	mov    eax,DWORD PTR [esi]
6401b1ec:	mov    eax,DWORD PTR [eax+0x4]
6401b1ef:	mov    DWORD PTR [ebp+0x20],eax
6401b1f2:	push   DWORD PTR [ebp+0x8]
6401b1f5:	call   0x6401eae2
6401b1fa:	cmp    eax,0xffffffff
6401b1fd:	pop    ecx
6401b1fe:	mov    DWORD PTR [ebp-0x14],eax
6401b201:	jne    0x6401b20a
6401b203:	xor    eax,eax
6401b205:	jmp    0x6401b32b
6401b20a:	cmp    eax,DWORD PTR [ebp+0x20]
6401b20d:	je     0x6401b2ee
6401b213:	push   ebx
6401b214:	push   ebx
6401b215:	lea    ecx,[ebp+0x14]
6401b218:	push   ecx
6401b219:	push   DWORD PTR [ebp+0x10]
6401b21c:	push   eax
6401b21d:	push   DWORD PTR [ebp+0x20]
6401b220:	call   0x6401eb29
6401b225:	add    esp,0x18
6401b228:	cmp    eax,ebx
6401b22a:	mov    DWORD PTR [ebp-0xc],eax
6401b22d:	je     0x6401b203
6401b22f:	mov    esi,DWORD PTR ds:0x64026148
6401b235:	push   ebx
6401b236:	push   ebx
6401b237:	push   DWORD PTR [ebp+0x14]
6401b23a:	push   eax
6401b23b:	push   DWORD PTR [ebp+0xc]
6401b23e:	push   DWORD PTR [ebp+0x8]
6401b241:	call   esi
6401b243:	cmp    eax,ebx
6401b245:	mov    DWORD PTR [ebp-0x8],eax
6401b248:	jne    0x6401b251
6401b24a:	xor    esi,esi
6401b24c:	jmp    0x6401b308
6401b251:	jle    0x6401b290
6401b253:	cmp    eax,0xffffffe0
6401b256:	ja     0x6401b290
6401b258:	add    eax,0x8
6401b25b:	cmp    eax,0x400
6401b260:	ja     0x6401b278
6401b262:	call   0x640146f0
6401b267:	mov    edi,esp
6401b269:	cmp    edi,ebx
6401b26b:	je     0x6401b24a
6401b26d:	mov    DWORD PTR [edi],0xcccc
6401b273:	add    edi,0x8
6401b276:	jmp    0x6401b292
6401b278:	push   eax
6401b279:	call   0x64014ee3
6401b27e:	cmp    eax,ebx
6401b280:	pop    ecx
6401b281:	je     0x6401b28c
6401b283:	mov    DWORD PTR [eax],0xdddd
6401b289:	add    eax,0x8
6401b28c:	mov    edi,eax
6401b28e:	jmp    0x6401b292
6401b290:	xor    edi,edi
6401b292:	cmp    edi,ebx
6401b294:	je     0x6401b24a
6401b296:	push   DWORD PTR [ebp-0x8]
6401b299:	push   ebx
6401b29a:	push   edi
6401b29b:	call   0x64014670
6401b2a0:	add    esp,0xc
6401b2a3:	push   DWORD PTR [ebp-0x8]
6401b2a6:	push   edi
6401b2a7:	push   DWORD PTR [ebp+0x14]
6401b2aa:	push   DWORD PTR [ebp-0xc]
6401b2ad:	push   DWORD PTR [ebp+0xc]
6401b2b0:	push   DWORD PTR [ebp+0x8]
6401b2b3:	call   esi
6401b2b5:	cmp    eax,ebx
6401b2b7:	mov    DWORD PTR [ebp-0x8],eax
6401b2ba:	jne    0x6401b2c0
6401b2bc:	xor    esi,esi
6401b2be:	jmp    0x6401b2e5
6401b2c0:	push   DWORD PTR [ebp+0x1c]
6401b2c3:	lea    eax,[ebp-0x8]
6401b2c6:	push   DWORD PTR [ebp+0x18]
6401b2c9:	push   eax
6401b2ca:	push   edi
6401b2cb:	push   DWORD PTR [ebp+0x20]
6401b2ce:	push   DWORD PTR [ebp-0x14]
6401b2d1:	call   0x6401eb29
6401b2d6:	mov    esi,eax
6401b2d8:	mov    DWORD PTR [ebp-0x10],esi
6401b2db:	add    esp,0x18
6401b2de:	neg    esi
6401b2e0:	sbb    esi,esi
6401b2e2:	and    esi,DWORD PTR [ebp-0x8]
6401b2e5:	push   edi
6401b2e6:	call   0x6401447c
6401b2eb:	pop    ecx
6401b2ec:	jmp    0x6401b308
6401b2ee:	push   DWORD PTR [ebp+0x1c]
6401b2f1:	push   DWORD PTR [ebp+0x18]
6401b2f4:	push   DWORD PTR [ebp+0x14]
6401b2f7:	push   DWORD PTR [ebp+0x10]
6401b2fa:	push   DWORD PTR [ebp+0xc]
6401b2fd:	push   DWORD PTR [ebp+0x8]
6401b300:	call   DWORD PTR ds:0x64026148
6401b306:	mov    esi,eax
6401b308:	cmp    DWORD PTR [ebp-0xc],ebx
6401b30b:	je     0x6401b316
6401b30d:	push   DWORD PTR [ebp-0xc]
6401b310:	call   0x64014e06
6401b315:	pop    ecx
6401b316:	mov    eax,DWORD PTR [ebp-0x10]
6401b319:	cmp    eax,ebx
6401b31b:	je     0x6401b329
6401b31d:	cmp    DWORD PTR [ebp+0x18],eax
6401b320:	je     0x6401b329
6401b322:	push   eax
6401b323:	call   0x64014e06
6401b328:	pop    ecx
6401b329:	mov    eax,esi
6401b32b:	lea    esp,[ebp-0x20]
6401b32e:	pop    edi
6401b32f:	pop    esi
6401b330:	pop    ebx
6401b331:	mov    ecx,DWORD PTR [ebp-0x4]
6401b334:	xor    ecx,ebp
6401b336:	call   0x64013f6c
6401b33b:	leave  
6401b33c:	ret    
6401b33d:	push   ebp
6401b33e:	mov    ebp,esp
6401b340:	sub    esp,0x10
6401b343:	push   DWORD PTR [ebp+0x8]
6401b346:	lea    ecx,[ebp-0x10]
6401b349:	call   0x6401410f
6401b34e:	push   DWORD PTR [ebp+0x28]
6401b351:	lea    ecx,[ebp-0x10]
6401b354:	push   DWORD PTR [ebp+0x24]
6401b357:	push   DWORD PTR [ebp+0x20]
6401b35a:	push   DWORD PTR [ebp+0x1c]
6401b35d:	push   DWORD PTR [ebp+0x18]
6401b360:	push   DWORD PTR [ebp+0x14]
6401b363:	push   DWORD PTR [ebp+0x10]
6401b366:	push   DWORD PTR [ebp+0xc]
6401b369:	call   0x6401af9b
6401b36e:	add    esp,0x20
6401b371:	cmp    BYTE PTR [ebp-0x4],0x0
6401b375:	je     0x6401b37e
6401b377:	mov    ecx,DWORD PTR [ebp-0x8]
6401b37a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b37e:	leave  
6401b37f:	ret    
6401b380:	push   ebp
6401b381:	mov    ebp,esp
6401b383:	sub    esp,0x10
6401b386:	push   DWORD PTR [ebp+0xc]
6401b389:	lea    ecx,[ebp-0x10]
6401b38c:	call   0x6401410f
6401b391:	movzx  eax,BYTE PTR [ebp+0x8]
6401b395:	mov    ecx,DWORD PTR [ebp-0x10]
6401b398:	mov    ecx,DWORD PTR [ecx+0xc8]
6401b39e:	movzx  eax,WORD PTR [ecx+eax*2]
6401b3a2:	and    eax,0x8000
6401b3a7:	cmp    BYTE PTR [ebp-0x4],0x0
6401b3ab:	je     0x6401b3b4
6401b3ad:	mov    ecx,DWORD PTR [ebp-0x8]
6401b3b0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b3b4:	leave  
6401b3b5:	ret    
6401b3b6:	push   0x0
6401b3b8:	push   DWORD PTR [esp+0x8]
6401b3bc:	call   0x6401b380
6401b3c1:	pop    ecx
6401b3c2:	pop    ecx
6401b3c3:	ret    
6401b3c4:	push   esi
6401b3c5:	push   edi
6401b3c6:	xor    esi,esi
6401b3c8:	mov    edi,0x64030a78
6401b3cd:	cmp    DWORD PTR [esi*8+0x6402f964],0x1
6401b3d5:	jne    0x6401b3f5
6401b3d7:	lea    eax,[esi*8+0x6402f960]
6401b3de:	mov    DWORD PTR [eax],edi
6401b3e0:	push   0xfa0
6401b3e5:	push   DWORD PTR [eax]
6401b3e7:	add    edi,0x18
6401b3ea:	call   0x6401cbf8
6401b3ef:	test   eax,eax
6401b3f1:	pop    ecx
6401b3f2:	pop    ecx
6401b3f3:	je     0x6401b401
6401b3f5:	inc    esi
6401b3f6:	cmp    esi,0x24
6401b3f9:	jl     0x6401b3cd
6401b3fb:	xor    eax,eax
6401b3fd:	inc    eax
6401b3fe:	pop    edi
6401b3ff:	pop    esi
6401b400:	ret    
6401b401:	and    DWORD PTR [esi*8+0x6402f960],0x0
6401b409:	xor    eax,eax
6401b40b:	jmp    0x6401b3fe
6401b40d:	push   ebx
6401b40e:	mov    ebx,DWORD PTR ds:0x640260a4
6401b414:	push   esi
6401b415:	mov    esi,0x6402f960
6401b41a:	push   edi
6401b41b:	mov    edi,DWORD PTR [esi]
6401b41d:	test   edi,edi
6401b41f:	je     0x6401b434
6401b421:	cmp    DWORD PTR [esi+0x4],0x1
6401b425:	je     0x6401b434
6401b427:	push   edi
6401b428:	call   ebx
6401b42a:	push   edi
6401b42b:	call   0x64014e06
6401b430:	and    DWORD PTR [esi],0x0
6401b433:	pop    ecx
6401b434:	add    esi,0x8
6401b437:	cmp    esi,0x6402fa80
6401b43d:	jl     0x6401b41b
6401b43f:	mov    esi,0x6402f960
6401b444:	pop    edi
6401b445:	mov    eax,DWORD PTR [esi]
6401b447:	test   eax,eax
6401b449:	je     0x6401b454
6401b44b:	cmp    DWORD PTR [esi+0x4],0x1
6401b44f:	jne    0x6401b454
6401b451:	push   eax
6401b452:	call   ebx
6401b454:	add    esi,0x8
6401b457:	cmp    esi,0x6402fa80
6401b45d:	jl     0x6401b445
6401b45f:	pop    esi
6401b460:	pop    ebx
6401b461:	ret    
6401b462:	push   ebp
6401b463:	mov    ebp,esp
6401b465:	mov    eax,DWORD PTR [ebp+0x8]
6401b468:	push   DWORD PTR [eax*8+0x6402f960]
6401b46f:	call   DWORD PTR ds:0x640260a0
6401b475:	pop    ebp
6401b476:	ret    
6401b477:	push   0xc
6401b479:	push   0x6402c5c8
6401b47e:	call   0x64015530
6401b483:	xor    edi,edi
6401b485:	inc    edi
6401b486:	mov    DWORD PTR [ebp-0x1c],edi
6401b489:	xor    ebx,ebx
6401b48b:	cmp    DWORD PTR ds:0x64030a6c,ebx
6401b491:	jne    0x6401b4ab
6401b493:	call   0x6401c20a
6401b498:	push   0x1e
6401b49a:	call   0x6401c06a
6401b49f:	push   0xff
6401b4a4:	call   0x64017400
6401b4a9:	pop    ecx
6401b4aa:	pop    ecx
6401b4ab:	mov    esi,DWORD PTR [ebp+0x8]
6401b4ae:	lea    esi,[esi*8+0x6402f960]
6401b4b5:	cmp    DWORD PTR [esi],ebx
6401b4b7:	je     0x6401b4bd
6401b4b9:	mov    eax,edi
6401b4bb:	jmp    0x6401b52b
6401b4bd:	push   0x18
6401b4bf:	call   0x64017240
6401b4c4:	pop    ecx
6401b4c5:	mov    edi,eax
6401b4c7:	cmp    edi,ebx
6401b4c9:	jne    0x6401b4da
6401b4cb:	call   0x64015d30
6401b4d0:	mov    DWORD PTR [eax],0xc
6401b4d6:	xor    eax,eax
6401b4d8:	jmp    0x6401b52b
6401b4da:	push   0xa
6401b4dc:	call   0x6401b53a
6401b4e1:	pop    ecx
6401b4e2:	mov    DWORD PTR [ebp-0x4],ebx
6401b4e5:	cmp    DWORD PTR [esi],ebx
6401b4e7:	jne    0x6401b515
6401b4e9:	push   0xfa0
6401b4ee:	push   edi
6401b4ef:	call   0x6401cbf8
6401b4f4:	pop    ecx
6401b4f5:	pop    ecx
6401b4f6:	test   eax,eax
6401b4f8:	jne    0x6401b511
6401b4fa:	push   edi
6401b4fb:	call   0x64014e06
6401b500:	pop    ecx
6401b501:	call   0x64015d30
6401b506:	mov    DWORD PTR [eax],0xc
6401b50c:	mov    DWORD PTR [ebp-0x1c],ebx
6401b50f:	jmp    0x6401b51c
6401b511:	mov    DWORD PTR [esi],edi
6401b513:	jmp    0x6401b51c
6401b515:	push   edi
6401b516:	call   0x64014e06
6401b51b:	pop    ecx
6401b51c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b523:	call   0x6401b531
6401b528:	mov    eax,DWORD PTR [ebp-0x1c]
6401b52b:	call   0x64015575
6401b530:	ret    
6401b531:	push   0xa
6401b533:	call   0x6401b462
6401b538:	pop    ecx
6401b539:	ret    
6401b53a:	push   ebp
6401b53b:	mov    ebp,esp
6401b53d:	mov    eax,DWORD PTR [ebp+0x8]
6401b540:	push   esi
6401b541:	lea    esi,[eax*8+0x6402f960]
6401b548:	cmp    DWORD PTR [esi],0x0
6401b54b:	jne    0x6401b560
6401b54d:	push   eax
6401b54e:	call   0x6401b477
6401b553:	test   eax,eax
6401b555:	pop    ecx
6401b556:	jne    0x6401b560
6401b558:	push   0x11
6401b55a:	call   0x640173b6
6401b55f:	pop    ecx
6401b560:	push   DWORD PTR [esi]
6401b562:	call   DWORD PTR ds:0x6402609c
6401b568:	pop    esi
6401b569:	pop    ebp
6401b56a:	ret    
6401b56b:	push   0x140
6401b570:	push   0x0
6401b572:	push   DWORD PTR ds:0x64030a6c
6401b578:	call   DWORD PTR ds:0x640260f4
6401b57e:	test   eax,eax
6401b580:	mov    ds:0x64034508,eax
6401b585:	jne    0x6401b588
6401b587:	ret    
6401b588:	mov    ecx,DWORD PTR [esp+0x4]
6401b58c:	and    DWORD PTR ds:0x64030bc8,0x0
6401b593:	and    DWORD PTR ds:0x64034504,0x0
6401b59a:	mov    ds:0x64034510,eax
6401b59f:	xor    eax,eax
6401b5a1:	mov    DWORD PTR ds:0x6403450c,ecx
6401b5a7:	mov    DWORD PTR ds:0x64034514,0x10
6401b5b1:	inc    eax
6401b5b2:	ret    
6401b5b3:	mov    ecx,DWORD PTR ds:0x64034504
6401b5b9:	mov    eax,ds:0x64034508
6401b5be:	imul   ecx,ecx,0x14
6401b5c1:	add    ecx,eax
6401b5c3:	jmp    0x6401b5d7
6401b5c5:	mov    edx,DWORD PTR [esp+0x4]
6401b5c9:	sub    edx,DWORD PTR [eax+0xc]
6401b5cc:	cmp    edx,0x100000
6401b5d2:	jb     0x6401b5dd
6401b5d4:	add    eax,0x14
6401b5d7:	cmp    eax,ecx
6401b5d9:	jb     0x6401b5c5
6401b5db:	xor    eax,eax
6401b5dd:	ret    
6401b5de:	push   ebp
6401b5df:	mov    ebp,esp
6401b5e1:	sub    esp,0x10
6401b5e4:	mov    ecx,DWORD PTR [ebp+0x8]
6401b5e7:	mov    eax,DWORD PTR [ecx+0x10]
6401b5ea:	push   esi
6401b5eb:	mov    esi,DWORD PTR [ebp+0xc]
6401b5ee:	push   edi
6401b5ef:	mov    edi,esi
6401b5f1:	sub    edi,DWORD PTR [ecx+0xc]
6401b5f4:	add    esi,0xfffffffc
6401b5f7:	shr    edi,0xf
6401b5fa:	mov    ecx,edi
6401b5fc:	imul   ecx,ecx,0x204
6401b602:	lea    ecx,[ecx+eax*1+0x144]
6401b609:	mov    DWORD PTR [ebp-0x10],ecx
6401b60c:	mov    ecx,DWORD PTR [esi]
6401b60e:	dec    ecx
6401b60f:	test   cl,0x1
6401b612:	mov    DWORD PTR [ebp-0x4],ecx
6401b615:	jne    0x6401b8ee
6401b61b:	push   ebx
6401b61c:	lea    ebx,[ecx+esi*1]
6401b61f:	mov    edx,DWORD PTR [ebx]
6401b621:	mov    DWORD PTR [ebp-0xc],edx
6401b624:	mov    edx,DWORD PTR [esi-0x4]
6401b627:	mov    DWORD PTR [ebp-0x8],edx
6401b62a:	mov    edx,DWORD PTR [ebp-0xc]
6401b62d:	test   dl,0x1
6401b630:	mov    DWORD PTR [ebp+0xc],ebx
6401b633:	jne    0x6401b6a9
6401b635:	sar    edx,0x4
6401b638:	dec    edx
6401b639:	cmp    edx,0x3f
6401b63c:	jbe    0x6401b641
6401b63e:	push   0x3f
6401b640:	pop    edx
6401b641:	mov    ecx,DWORD PTR [ebx+0x4]
6401b644:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b647:	jne    0x6401b68b
6401b649:	cmp    edx,0x20
6401b64c:	mov    ebx,0x80000000
6401b651:	jae    0x6401b66c
6401b653:	mov    ecx,edx
6401b655:	shr    ebx,cl
6401b657:	lea    ecx,[edx+eax*1+0x4]
6401b65b:	not    ebx
6401b65d:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b661:	dec    BYTE PTR [ecx]
6401b663:	jne    0x6401b688
6401b665:	mov    ecx,DWORD PTR [ebp+0x8]
6401b668:	and    DWORD PTR [ecx],ebx
6401b66a:	jmp    0x6401b688
6401b66c:	lea    ecx,[edx-0x20]
6401b66f:	shr    ebx,cl
6401b671:	lea    ecx,[edx+eax*1+0x4]
6401b675:	not    ebx
6401b677:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b67e:	dec    BYTE PTR [ecx]
6401b680:	jne    0x6401b688
6401b682:	mov    ecx,DWORD PTR [ebp+0x8]
6401b685:	and    DWORD PTR [ecx+0x4],ebx
6401b688:	mov    ebx,DWORD PTR [ebp+0xc]
6401b68b:	mov    edx,DWORD PTR [ebx+0x8]
6401b68e:	mov    ebx,DWORD PTR [ebx+0x4]
6401b691:	mov    ecx,DWORD PTR [ebp-0x4]
6401b694:	add    ecx,DWORD PTR [ebp-0xc]
6401b697:	mov    DWORD PTR [edx+0x4],ebx
6401b69a:	mov    edx,DWORD PTR [ebp+0xc]
6401b69d:	mov    ebx,DWORD PTR [edx+0x4]
6401b6a0:	mov    edx,DWORD PTR [edx+0x8]
6401b6a3:	mov    DWORD PTR [ebx+0x8],edx
6401b6a6:	mov    DWORD PTR [ebp-0x4],ecx
6401b6a9:	mov    edx,ecx
6401b6ab:	sar    edx,0x4
6401b6ae:	dec    edx
6401b6af:	cmp    edx,0x3f
6401b6b2:	jbe    0x6401b6b7
6401b6b4:	push   0x3f
6401b6b6:	pop    edx
6401b6b7:	mov    ebx,DWORD PTR [ebp-0x8]
6401b6ba:	and    ebx,0x1
6401b6bd:	mov    DWORD PTR [ebp-0xc],ebx
6401b6c0:	jne    0x6401b755
6401b6c6:	sub    esi,DWORD PTR [ebp-0x8]
6401b6c9:	mov    ebx,DWORD PTR [ebp-0x8]
6401b6cc:	sar    ebx,0x4
6401b6cf:	push   0x3f
6401b6d1:	mov    DWORD PTR [ebp+0xc],esi
6401b6d4:	dec    ebx
6401b6d5:	pop    esi
6401b6d6:	cmp    ebx,esi
6401b6d8:	jbe    0x6401b6dc
6401b6da:	mov    ebx,esi
6401b6dc:	add    ecx,DWORD PTR [ebp-0x8]
6401b6df:	mov    edx,ecx
6401b6e1:	sar    edx,0x4
6401b6e4:	dec    edx
6401b6e5:	cmp    edx,esi
6401b6e7:	mov    DWORD PTR [ebp-0x4],ecx
6401b6ea:	jbe    0x6401b6ee
6401b6ec:	mov    edx,esi
6401b6ee:	cmp    ebx,edx
6401b6f0:	je     0x6401b750
6401b6f2:	mov    ecx,DWORD PTR [ebp+0xc]
6401b6f5:	mov    esi,DWORD PTR [ecx+0x4]
6401b6f8:	cmp    esi,DWORD PTR [ecx+0x8]
6401b6fb:	jne    0x6401b738
6401b6fd:	cmp    ebx,0x20
6401b700:	mov    esi,0x80000000
6401b705:	jae    0x6401b71e
6401b707:	mov    ecx,ebx
6401b709:	shr    esi,cl
6401b70b:	not    esi
6401b70d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b711:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b715:	jne    0x6401b738
6401b717:	mov    ecx,DWORD PTR [ebp+0x8]
6401b71a:	and    DWORD PTR [ecx],esi
6401b71c:	jmp    0x6401b738
6401b71e:	lea    ecx,[ebx-0x20]
6401b721:	shr    esi,cl
6401b723:	not    esi
6401b725:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b72c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b730:	jne    0x6401b738
6401b732:	mov    ecx,DWORD PTR [ebp+0x8]
6401b735:	and    DWORD PTR [ecx+0x4],esi
6401b738:	mov    ecx,DWORD PTR [ebp+0xc]
6401b73b:	mov    esi,DWORD PTR [ecx+0x8]
6401b73e:	mov    ecx,DWORD PTR [ecx+0x4]
6401b741:	mov    DWORD PTR [esi+0x4],ecx
6401b744:	mov    ecx,DWORD PTR [ebp+0xc]
6401b747:	mov    esi,DWORD PTR [ecx+0x4]
6401b74a:	mov    ecx,DWORD PTR [ecx+0x8]
6401b74d:	mov    DWORD PTR [esi+0x8],ecx
6401b750:	mov    esi,DWORD PTR [ebp+0xc]
6401b753:	jmp    0x6401b758
6401b755:	mov    ebx,DWORD PTR [ebp+0x8]
6401b758:	cmp    DWORD PTR [ebp-0xc],0x0
6401b75c:	jne    0x6401b766
6401b75e:	cmp    ebx,edx
6401b760:	je     0x6401b7e6
6401b766:	mov    ecx,DWORD PTR [ebp-0x10]
6401b769:	lea    ecx,[ecx+edx*8]
6401b76c:	mov    ebx,DWORD PTR [ecx+0x4]
6401b76f:	mov    DWORD PTR [esi+0x8],ecx
6401b772:	mov    DWORD PTR [esi+0x4],ebx
6401b775:	mov    DWORD PTR [ecx+0x4],esi
6401b778:	mov    ecx,DWORD PTR [esi+0x4]
6401b77b:	mov    DWORD PTR [ecx+0x8],esi
6401b77e:	mov    ecx,DWORD PTR [esi+0x4]
6401b781:	cmp    ecx,DWORD PTR [esi+0x8]
6401b784:	jne    0x6401b7e6
6401b786:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b78a:	mov    BYTE PTR [ebp+0xf],cl
6401b78d:	inc    cl
6401b78f:	cmp    edx,0x20
6401b792:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b796:	jae    0x6401b7bd
6401b798:	cmp    BYTE PTR [ebp+0xf],0x0
6401b79c:	jne    0x6401b7ac
6401b79e:	mov    ecx,edx
6401b7a0:	mov    ebx,0x80000000
6401b7a5:	shr    ebx,cl
6401b7a7:	mov    ecx,DWORD PTR [ebp+0x8]
6401b7aa:	or     DWORD PTR [ecx],ebx
6401b7ac:	mov    ebx,0x80000000
6401b7b1:	mov    ecx,edx
6401b7b3:	shr    ebx,cl
6401b7b5:	lea    eax,[eax+edi*4+0x44]
6401b7b9:	or     DWORD PTR [eax],ebx
6401b7bb:	jmp    0x6401b7e6
6401b7bd:	cmp    BYTE PTR [ebp+0xf],0x0
6401b7c1:	jne    0x6401b7d3
6401b7c3:	lea    ecx,[edx-0x20]
6401b7c6:	mov    ebx,0x80000000
6401b7cb:	shr    ebx,cl
6401b7cd:	mov    ecx,DWORD PTR [ebp+0x8]
6401b7d0:	or     DWORD PTR [ecx+0x4],ebx
6401b7d3:	lea    ecx,[edx-0x20]
6401b7d6:	mov    edx,0x80000000
6401b7db:	shr    edx,cl
6401b7dd:	lea    eax,[eax+edi*4+0xc4]
6401b7e4:	or     DWORD PTR [eax],edx
6401b7e6:	mov    eax,DWORD PTR [ebp-0x4]
6401b7e9:	mov    DWORD PTR [esi],eax
6401b7eb:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b7ef:	mov    eax,DWORD PTR [ebp-0x10]
6401b7f2:	dec    DWORD PTR [eax]
6401b7f4:	jne    0x6401b8ed
6401b7fa:	mov    eax,ds:0x64030bc8
6401b7ff:	test   eax,eax
6401b801:	je     0x6401b8df
6401b807:	mov    ecx,DWORD PTR ds:0x64034518
6401b80d:	mov    esi,DWORD PTR ds:0x64026174
6401b813:	push   0x4000
6401b818:	shl    ecx,0xf
6401b81b:	add    ecx,DWORD PTR [eax+0xc]
6401b81e:	mov    ebx,0x8000
6401b823:	push   ebx
6401b824:	push   ecx
6401b825:	call   esi
6401b827:	mov    ecx,DWORD PTR ds:0x64034518
6401b82d:	mov    eax,ds:0x64030bc8
6401b832:	mov    edx,0x80000000
6401b837:	shr    edx,cl
6401b839:	or     DWORD PTR [eax+0x8],edx
6401b83c:	mov    eax,ds:0x64030bc8
6401b841:	mov    eax,DWORD PTR [eax+0x10]
6401b844:	mov    ecx,DWORD PTR ds:0x64034518
6401b84a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b852:	mov    eax,ds:0x64030bc8
6401b857:	mov    eax,DWORD PTR [eax+0x10]
6401b85a:	dec    BYTE PTR [eax+0x43]
6401b85d:	mov    eax,ds:0x64030bc8
6401b862:	mov    ecx,DWORD PTR [eax+0x10]
6401b865:	cmp    BYTE PTR [ecx+0x43],0x0
6401b869:	jne    0x6401b874
6401b86b:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b86f:	mov    eax,ds:0x64030bc8
6401b874:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b878:	jne    0x6401b8df
6401b87a:	push   ebx
6401b87b:	push   0x0
6401b87d:	push   DWORD PTR [eax+0xc]
6401b880:	call   esi
6401b882:	mov    eax,ds:0x64030bc8
6401b887:	push   DWORD PTR [eax+0x10]
6401b88a:	push   0x0
6401b88c:	push   DWORD PTR ds:0x64030a6c
6401b892:	call   DWORD PTR ds:0x640260f8
6401b898:	mov    ecx,DWORD PTR ds:0x64034504
6401b89e:	mov    eax,ds:0x64030bc8
6401b8a3:	imul   ecx,ecx,0x14
6401b8a6:	mov    edx,DWORD PTR ds:0x64034508
6401b8ac:	sub    ecx,eax
6401b8ae:	lea    ecx,[ecx+edx*1-0x14]
6401b8b2:	push   ecx
6401b8b3:	lea    ecx,[eax+0x14]
6401b8b6:	push   ecx
6401b8b7:	push   eax
6401b8b8:	call   0x64014fb0
6401b8bd:	mov    eax,DWORD PTR [ebp+0x8]
6401b8c0:	add    esp,0xc
6401b8c3:	dec    DWORD PTR ds:0x64034504
6401b8c9:	cmp    eax,DWORD PTR ds:0x64030bc8
6401b8cf:	jbe    0x6401b8d5
6401b8d1:	sub    DWORD PTR [ebp+0x8],0x14
6401b8d5:	mov    eax,ds:0x64034508
6401b8da:	mov    ds:0x64034510,eax
6401b8df:	mov    eax,DWORD PTR [ebp+0x8]
6401b8e2:	mov    ds:0x64030bc8,eax
6401b8e7:	mov    DWORD PTR ds:0x64034518,edi
6401b8ed:	pop    ebx
6401b8ee:	pop    edi
6401b8ef:	pop    esi
6401b8f0:	leave  
6401b8f1:	ret    
6401b8f2:	mov    eax,ds:0x64034514
6401b8f7:	push   esi
6401b8f8:	mov    esi,DWORD PTR ds:0x64034504
6401b8fe:	push   edi
6401b8ff:	xor    edi,edi
6401b901:	cmp    esi,eax
6401b903:	jne    0x6401b939
6401b905:	add    eax,0x10
6401b908:	imul   eax,eax,0x14
6401b90b:	push   eax
6401b90c:	push   DWORD PTR ds:0x64034508
6401b912:	push   edi
6401b913:	push   DWORD PTR ds:0x64030a6c
6401b919:	call   DWORD PTR ds:0x640260fc
6401b91f:	cmp    eax,edi
6401b921:	jne    0x6401b927
6401b923:	xor    eax,eax
6401b925:	jmp    0x6401b99f
6401b927:	add    DWORD PTR ds:0x64034514,0x10
6401b92e:	mov    esi,DWORD PTR ds:0x64034504
6401b934:	mov    ds:0x64034508,eax
6401b939:	imul   esi,esi,0x14
6401b93c:	add    esi,DWORD PTR ds:0x64034508
6401b942:	push   0x41c4
6401b947:	push   0x8
6401b949:	push   DWORD PTR ds:0x64030a6c
6401b94f:	call   DWORD PTR ds:0x640260f4
6401b955:	cmp    eax,edi
6401b957:	mov    DWORD PTR [esi+0x10],eax
6401b95a:	je     0x6401b923
6401b95c:	push   0x4
6401b95e:	push   0x2000
6401b963:	push   0x100000
6401b968:	push   edi
6401b969:	call   DWORD PTR ds:0x640260c8
6401b96f:	cmp    eax,edi
6401b971:	mov    DWORD PTR [esi+0xc],eax
6401b974:	jne    0x6401b988
6401b976:	push   DWORD PTR [esi+0x10]
6401b979:	push   edi
6401b97a:	push   DWORD PTR ds:0x64030a6c
6401b980:	call   DWORD PTR ds:0x640260f8
6401b986:	jmp    0x6401b923
6401b988:	or     DWORD PTR [esi+0x8],0xffffffff
6401b98c:	mov    DWORD PTR [esi],edi
6401b98e:	mov    DWORD PTR [esi+0x4],edi
6401b991:	inc    DWORD PTR ds:0x64034504
6401b997:	mov    eax,DWORD PTR [esi+0x10]
6401b99a:	or     DWORD PTR [eax],0xffffffff
6401b99d:	mov    eax,esi
6401b99f:	pop    edi
6401b9a0:	pop    esi
6401b9a1:	ret    
6401b9a2:	push   ebp
6401b9a3:	mov    ebp,esp
6401b9a5:	push   ecx
6401b9a6:	push   ecx
6401b9a7:	mov    ecx,DWORD PTR [ebp+0x8]
6401b9aa:	mov    eax,DWORD PTR [ecx+0x8]
6401b9ad:	push   ebx
6401b9ae:	push   esi
6401b9af:	mov    esi,DWORD PTR [ecx+0x10]
6401b9b2:	push   edi
6401b9b3:	xor    ebx,ebx
6401b9b5:	jmp    0x6401b9ba
6401b9b7:	add    eax,eax
6401b9b9:	inc    ebx
6401b9ba:	test   eax,eax
6401b9bc:	jge    0x6401b9b7
6401b9be:	mov    eax,ebx
6401b9c0:	imul   eax,eax,0x204
6401b9c6:	lea    eax,[eax+esi*1+0x144]
6401b9cd:	push   0x3f
6401b9cf:	mov    DWORD PTR [ebp-0x8],eax
6401b9d2:	pop    edx
6401b9d3:	mov    DWORD PTR [eax+0x8],eax
6401b9d6:	mov    DWORD PTR [eax+0x4],eax
6401b9d9:	add    eax,0x8
6401b9dc:	dec    edx
6401b9dd:	jne    0x6401b9d3
6401b9df:	push   0x4
6401b9e1:	mov    edi,ebx
6401b9e3:	push   0x1000
6401b9e8:	shl    edi,0xf
6401b9eb:	add    edi,DWORD PTR [ecx+0xc]
6401b9ee:	push   0x8000
6401b9f3:	push   edi
6401b9f4:	call   DWORD PTR ds:0x640260c8
6401b9fa:	test   eax,eax
6401b9fc:	jne    0x6401ba06
6401b9fe:	or     eax,0xffffffff
6401ba01:	jmp    0x6401baa3
6401ba06:	lea    edx,[edi+0x7000]
6401ba0c:	cmp    edi,edx
6401ba0e:	mov    DWORD PTR [ebp-0x4],edx
6401ba11:	ja     0x6401ba56
6401ba13:	mov    ecx,edx
6401ba15:	sub    ecx,edi
6401ba17:	shr    ecx,0xc
6401ba1a:	lea    eax,[edi+0x10]
6401ba1d:	inc    ecx
6401ba1e:	or     DWORD PTR [eax-0x8],0xffffffff
6401ba22:	or     DWORD PTR [eax+0xfec],0xffffffff
6401ba29:	lea    edx,[eax+0xffc]
6401ba2f:	mov    DWORD PTR [eax],edx
6401ba31:	lea    edx,[eax-0x1004]
6401ba37:	mov    DWORD PTR [eax-0x4],0xff0
6401ba3e:	mov    DWORD PTR [eax+0x4],edx
6401ba41:	mov    DWORD PTR [eax+0xfe8],0xff0
6401ba4b:	add    eax,0x1000
6401ba50:	dec    ecx
6401ba51:	jne    0x6401ba1e
6401ba53:	mov    edx,DWORD PTR [ebp-0x4]
6401ba56:	mov    eax,DWORD PTR [ebp-0x8]
6401ba59:	add    eax,0x1f8
6401ba5e:	lea    ecx,[edi+0xc]
6401ba61:	mov    DWORD PTR [eax+0x4],ecx
6401ba64:	mov    DWORD PTR [ecx+0x8],eax
6401ba67:	lea    ecx,[edx+0xc]
6401ba6a:	mov    DWORD PTR [eax+0x8],ecx
6401ba6d:	mov    DWORD PTR [ecx+0x4],eax
6401ba70:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401ba75:	xor    edi,edi
6401ba77:	inc    edi
6401ba78:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401ba7f:	mov    al,BYTE PTR [esi+0x43]
6401ba82:	mov    cl,al
6401ba84:	inc    cl
6401ba86:	test   al,al
6401ba88:	mov    eax,DWORD PTR [ebp+0x8]
6401ba8b:	mov    BYTE PTR [esi+0x43],cl
6401ba8e:	jne    0x6401ba93
6401ba90:	or     DWORD PTR [eax+0x4],edi
6401ba93:	mov    edx,0x80000000
6401ba98:	mov    ecx,ebx
6401ba9a:	shr    edx,cl
6401ba9c:	not    edx
6401ba9e:	and    DWORD PTR [eax+0x8],edx
6401baa1:	mov    eax,ebx
6401baa3:	pop    edi
6401baa4:	pop    esi
6401baa5:	pop    ebx
6401baa6:	leave  
6401baa7:	ret    
6401baa8:	push   ebp
6401baa9:	mov    ebp,esp
6401baab:	sub    esp,0xc
6401baae:	mov    ecx,DWORD PTR [ebp+0x8]
6401bab1:	mov    eax,DWORD PTR [ecx+0x10]
6401bab4:	push   ebx
6401bab5:	push   esi
6401bab6:	mov    esi,DWORD PTR [ebp+0x10]
6401bab9:	push   edi
6401baba:	mov    edi,DWORD PTR [ebp+0xc]
6401babd:	mov    edx,edi
6401babf:	sub    edx,DWORD PTR [ecx+0xc]
6401bac2:	add    esi,0x17
6401bac5:	shr    edx,0xf
6401bac8:	mov    ecx,edx
6401baca:	imul   ecx,ecx,0x204
6401bad0:	lea    ecx,[ecx+eax*1+0x144]
6401bad7:	mov    DWORD PTR [ebp-0xc],ecx
6401bada:	mov    ecx,DWORD PTR [edi-0x4]
6401badd:	and    esi,0xfffffff0
6401bae0:	dec    ecx
6401bae1:	cmp    esi,ecx
6401bae3:	lea    edi,[ecx+edi*1-0x4]
6401bae7:	mov    ebx,DWORD PTR [edi]
6401bae9:	mov    DWORD PTR [ebp+0x10],ecx
6401baec:	mov    DWORD PTR [ebp-0x4],ebx
6401baef:	jle    0x6401bc4a
6401baf5:	test   bl,0x1
6401baf8:	jne    0x6401bc43
6401bafe:	add    ebx,ecx
6401bb00:	cmp    esi,ebx
6401bb02:	jg     0x6401bc43
6401bb08:	mov    ecx,DWORD PTR [ebp-0x4]
6401bb0b:	sar    ecx,0x4
6401bb0e:	dec    ecx
6401bb0f:	cmp    ecx,0x3f
6401bb12:	mov    DWORD PTR [ebp-0x8],ecx
6401bb15:	jbe    0x6401bb1d
6401bb17:	push   0x3f
6401bb19:	pop    ecx
6401bb1a:	mov    DWORD PTR [ebp-0x8],ecx
6401bb1d:	mov    ebx,DWORD PTR [edi+0x4]
6401bb20:	cmp    ebx,DWORD PTR [edi+0x8]
6401bb23:	jne    0x6401bb68
6401bb25:	cmp    ecx,0x20
6401bb28:	mov    ebx,0x80000000
6401bb2d:	jae    0x6401bb49
6401bb2f:	shr    ebx,cl
6401bb31:	mov    ecx,DWORD PTR [ebp-0x8]
6401bb34:	lea    ecx,[ecx+eax*1+0x4]
6401bb38:	not    ebx
6401bb3a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401bb3e:	dec    BYTE PTR [ecx]
6401bb40:	jne    0x6401bb68
6401bb42:	mov    ecx,DWORD PTR [ebp+0x8]
6401bb45:	and    DWORD PTR [ecx],ebx
6401bb47:	jmp    0x6401bb68
6401bb49:	add    ecx,0xffffffe0
6401bb4c:	shr    ebx,cl
6401bb4e:	mov    ecx,DWORD PTR [ebp-0x8]
6401bb51:	lea    ecx,[ecx+eax*1+0x4]
6401bb55:	not    ebx
6401bb57:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401bb5e:	dec    BYTE PTR [ecx]
6401bb60:	jne    0x6401bb68
6401bb62:	mov    ecx,DWORD PTR [ebp+0x8]
6401bb65:	and    DWORD PTR [ecx+0x4],ebx
6401bb68:	mov    ecx,DWORD PTR [edi+0x8]
6401bb6b:	mov    ebx,DWORD PTR [edi+0x4]
6401bb6e:	mov    DWORD PTR [ecx+0x4],ebx
6401bb71:	mov    ecx,DWORD PTR [edi+0x4]
6401bb74:	mov    edi,DWORD PTR [edi+0x8]
6401bb77:	mov    DWORD PTR [ecx+0x8],edi
6401bb7a:	mov    ecx,DWORD PTR [ebp+0x10]
6401bb7d:	sub    ecx,esi
6401bb7f:	add    DWORD PTR [ebp-0x4],ecx
6401bb82:	cmp    DWORD PTR [ebp-0x4],0x0
6401bb86:	jle    0x6401bc31
6401bb8c:	mov    edi,DWORD PTR [ebp-0x4]
6401bb8f:	mov    ecx,DWORD PTR [ebp+0xc]
6401bb92:	sar    edi,0x4
6401bb95:	dec    edi
6401bb96:	cmp    edi,0x3f
6401bb99:	lea    ecx,[ecx+esi*1-0x4]
6401bb9d:	jbe    0x6401bba2
6401bb9f:	push   0x3f
6401bba1:	pop    edi
6401bba2:	mov    ebx,DWORD PTR [ebp-0xc]
6401bba5:	lea    ebx,[ebx+edi*8]
6401bba8:	mov    DWORD PTR [ebp+0x10],ebx
6401bbab:	mov    ebx,DWORD PTR [ebx+0x4]
6401bbae:	mov    DWORD PTR [ecx+0x4],ebx
6401bbb1:	mov    ebx,DWORD PTR [ebp+0x10]
6401bbb4:	mov    DWORD PTR [ecx+0x8],ebx
6401bbb7:	mov    DWORD PTR [ebx+0x4],ecx
6401bbba:	mov    ebx,DWORD PTR [ecx+0x4]
6401bbbd:	mov    DWORD PTR [ebx+0x8],ecx
6401bbc0:	mov    ebx,DWORD PTR [ecx+0x4]
6401bbc3:	cmp    ebx,DWORD PTR [ecx+0x8]
6401bbc6:	jne    0x6401bc1f
6401bbc8:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401bbcc:	mov    BYTE PTR [ebp+0x13],cl
6401bbcf:	inc    cl
6401bbd1:	cmp    edi,0x20
6401bbd4:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401bbd8:	jae    0x6401bbf6
6401bbda:	cmp    BYTE PTR [ebp+0x13],0x0
6401bbde:	jne    0x6401bbee
6401bbe0:	mov    ecx,edi
6401bbe2:	mov    ebx,0x80000000
6401bbe7:	shr    ebx,cl
6401bbe9:	mov    ecx,DWORD PTR [ebp+0x8]
6401bbec:	or     DWORD PTR [ecx],ebx
6401bbee:	lea    eax,[eax+edx*4+0x44]
6401bbf2:	mov    ecx,edi
6401bbf4:	jmp    0x6401bc16
6401bbf6:	cmp    BYTE PTR [ebp+0x13],0x0
6401bbfa:	jne    0x6401bc0c
6401bbfc:	lea    ecx,[edi-0x20]
6401bbff:	mov    ebx,0x80000000
6401bc04:	shr    ebx,cl
6401bc06:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc09:	or     DWORD PTR [ecx+0x4],ebx
6401bc0c:	lea    eax,[eax+edx*4+0xc4]
6401bc13:	lea    ecx,[edi-0x20]
6401bc16:	mov    edx,0x80000000
6401bc1b:	shr    edx,cl
6401bc1d:	or     DWORD PTR [eax],edx
6401bc1f:	mov    edx,DWORD PTR [ebp+0xc]
6401bc22:	mov    ecx,DWORD PTR [ebp-0x4]
6401bc25:	lea    eax,[edx+esi*1-0x4]
6401bc29:	mov    DWORD PTR [eax],ecx
6401bc2b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401bc2f:	jmp    0x6401bc34
6401bc31:	mov    edx,DWORD PTR [ebp+0xc]
6401bc34:	lea    eax,[esi+0x1]
6401bc37:	mov    DWORD PTR [edx-0x4],eax
6401bc3a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401bc3e:	jmp    0x6401bd7f
6401bc43:	xor    eax,eax
6401bc45:	jmp    0x6401bd82
6401bc4a:	jge    0x6401bd7f
6401bc50:	mov    ebx,DWORD PTR [ebp+0xc]
6401bc53:	sub    DWORD PTR [ebp+0x10],esi
6401bc56:	lea    ecx,[esi+0x1]
6401bc59:	mov    DWORD PTR [ebx-0x4],ecx
6401bc5c:	lea    ebx,[ebx+esi*1-0x4]
6401bc60:	mov    esi,DWORD PTR [ebp+0x10]
6401bc63:	sar    esi,0x4
6401bc66:	dec    esi
6401bc67:	cmp    esi,0x3f
6401bc6a:	mov    DWORD PTR [ebp+0xc],ebx
6401bc6d:	mov    DWORD PTR [ebx-0x4],ecx
6401bc70:	jbe    0x6401bc75
6401bc72:	push   0x3f
6401bc74:	pop    esi
6401bc75:	test   BYTE PTR [ebp-0x4],0x1
6401bc79:	jne    0x6401bcff
6401bc7f:	mov    esi,DWORD PTR [ebp-0x4]
6401bc82:	sar    esi,0x4
6401bc85:	dec    esi
6401bc86:	cmp    esi,0x3f
6401bc89:	jbe    0x6401bc8e
6401bc8b:	push   0x3f
6401bc8d:	pop    esi
6401bc8e:	mov    ecx,DWORD PTR [edi+0x4]
6401bc91:	cmp    ecx,DWORD PTR [edi+0x8]
6401bc94:	jne    0x6401bcd8
6401bc96:	cmp    esi,0x20
6401bc99:	mov    ebx,0x80000000
6401bc9e:	jae    0x6401bcb9
6401bca0:	mov    ecx,esi
6401bca2:	shr    ebx,cl
6401bca4:	lea    esi,[esi+eax*1+0x4]
6401bca8:	not    ebx
6401bcaa:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401bcae:	dec    BYTE PTR [esi]
6401bcb0:	jne    0x6401bcd5
6401bcb2:	mov    ecx,DWORD PTR [ebp+0x8]
6401bcb5:	and    DWORD PTR [ecx],ebx
6401bcb7:	jmp    0x6401bcd5
6401bcb9:	lea    ecx,[esi-0x20]
6401bcbc:	shr    ebx,cl
6401bcbe:	lea    ecx,[esi+eax*1+0x4]
6401bcc2:	not    ebx
6401bcc4:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401bccb:	dec    BYTE PTR [ecx]
6401bccd:	jne    0x6401bcd5
6401bccf:	mov    ecx,DWORD PTR [ebp+0x8]
6401bcd2:	and    DWORD PTR [ecx+0x4],ebx
6401bcd5:	mov    ebx,DWORD PTR [ebp+0xc]
6401bcd8:	mov    ecx,DWORD PTR [edi+0x8]
6401bcdb:	mov    esi,DWORD PTR [edi+0x4]
6401bcde:	mov    DWORD PTR [ecx+0x4],esi
6401bce1:	mov    esi,DWORD PTR [edi+0x8]
6401bce4:	mov    ecx,DWORD PTR [edi+0x4]
6401bce7:	mov    DWORD PTR [ecx+0x8],esi
6401bcea:	mov    esi,DWORD PTR [ebp+0x10]
6401bced:	add    esi,DWORD PTR [ebp-0x4]
6401bcf0:	mov    DWORD PTR [ebp+0x10],esi
6401bcf3:	sar    esi,0x4
6401bcf6:	dec    esi
6401bcf7:	cmp    esi,0x3f
6401bcfa:	jbe    0x6401bcff
6401bcfc:	push   0x3f
6401bcfe:	pop    esi
6401bcff:	mov    ecx,DWORD PTR [ebp-0xc]
6401bd02:	lea    ecx,[ecx+esi*8]
6401bd05:	mov    edi,DWORD PTR [ecx+0x4]
6401bd08:	mov    DWORD PTR [ebx+0x8],ecx
6401bd0b:	mov    DWORD PTR [ebx+0x4],edi
6401bd0e:	mov    DWORD PTR [ecx+0x4],ebx
6401bd11:	mov    ecx,DWORD PTR [ebx+0x4]
6401bd14:	mov    DWORD PTR [ecx+0x8],ebx
6401bd17:	mov    ecx,DWORD PTR [ebx+0x4]
6401bd1a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401bd1d:	jne    0x6401bd76
6401bd1f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bd23:	mov    BYTE PTR [ebp+0xf],cl
6401bd26:	inc    cl
6401bd28:	cmp    esi,0x20
6401bd2b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bd2f:	jae    0x6401bd4d
6401bd31:	cmp    BYTE PTR [ebp+0xf],0x0
6401bd35:	jne    0x6401bd45
6401bd37:	mov    ecx,esi
6401bd39:	mov    edi,0x80000000
6401bd3e:	shr    edi,cl
6401bd40:	mov    ecx,DWORD PTR [ebp+0x8]
6401bd43:	or     DWORD PTR [ecx],edi
6401bd45:	lea    eax,[eax+edx*4+0x44]
6401bd49:	mov    ecx,esi
6401bd4b:	jmp    0x6401bd6d
6401bd4d:	cmp    BYTE PTR [ebp+0xf],0x0
6401bd51:	jne    0x6401bd63
6401bd53:	lea    ecx,[esi-0x20]
6401bd56:	mov    edi,0x80000000
6401bd5b:	shr    edi,cl
6401bd5d:	mov    ecx,DWORD PTR [ebp+0x8]
6401bd60:	or     DWORD PTR [ecx+0x4],edi
6401bd63:	lea    eax,[eax+edx*4+0xc4]
6401bd6a:	lea    ecx,[esi-0x20]
6401bd6d:	mov    edx,0x80000000
6401bd72:	shr    edx,cl
6401bd74:	or     DWORD PTR [eax],edx
6401bd76:	mov    eax,DWORD PTR [ebp+0x10]
6401bd79:	mov    DWORD PTR [ebx],eax
6401bd7b:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401bd7f:	xor    eax,eax
6401bd81:	inc    eax
6401bd82:	pop    edi
6401bd83:	pop    esi
6401bd84:	pop    ebx
6401bd85:	leave  
6401bd86:	ret    
6401bd87:	push   ebp
6401bd88:	mov    ebp,esp
6401bd8a:	sub    esp,0x14
6401bd8d:	mov    eax,ds:0x64034504
6401bd92:	mov    ecx,DWORD PTR [ebp+0x8]
6401bd95:	imul   eax,eax,0x14
6401bd98:	add    eax,DWORD PTR ds:0x64034508
6401bd9e:	add    ecx,0x17
6401bda1:	and    ecx,0xfffffff0
6401bda4:	mov    DWORD PTR [ebp-0x10],ecx
6401bda7:	sar    ecx,0x4
6401bdaa:	push   ebx
6401bdab:	dec    ecx
6401bdac:	cmp    ecx,0x20
6401bdaf:	push   esi
6401bdb0:	push   edi
6401bdb1:	jge    0x6401bdbe
6401bdb3:	or     esi,0xffffffff
6401bdb6:	shr    esi,cl
6401bdb8:	or     DWORD PTR [ebp-0x8],0xffffffff
6401bdbc:	jmp    0x6401bdcb
6401bdbe:	add    ecx,0xffffffe0
6401bdc1:	or     edx,0xffffffff
6401bdc4:	xor    esi,esi
6401bdc6:	shr    edx,cl
6401bdc8:	mov    DWORD PTR [ebp-0x8],edx
6401bdcb:	mov    ecx,DWORD PTR ds:0x64034510
6401bdd1:	mov    ebx,ecx
6401bdd3:	jmp    0x6401bde6
6401bdd5:	mov    edx,DWORD PTR [ebx+0x4]
6401bdd8:	mov    edi,DWORD PTR [ebx]
6401bdda:	and    edx,DWORD PTR [ebp-0x8]
6401bddd:	and    edi,esi
6401bddf:	or     edx,edi
6401bde1:	jne    0x6401bded
6401bde3:	add    ebx,0x14
6401bde6:	cmp    ebx,eax
6401bde8:	mov    DWORD PTR [ebp+0x8],ebx
6401bdeb:	jb     0x6401bdd5
6401bded:	cmp    ebx,eax
6401bdef:	jne    0x6401be70
6401bdf1:	mov    ebx,DWORD PTR ds:0x64034508
6401bdf7:	jmp    0x6401be0a
6401bdf9:	mov    edx,DWORD PTR [ebx+0x4]
6401bdfc:	mov    edi,DWORD PTR [ebx]
6401bdfe:	and    edx,DWORD PTR [ebp-0x8]
6401be01:	and    edi,esi
6401be03:	or     edx,edi
6401be05:	jne    0x6401be11
6401be07:	add    ebx,0x14
6401be0a:	cmp    ebx,ecx
6401be0c:	mov    DWORD PTR [ebp+0x8],ebx
6401be0f:	jb     0x6401bdf9
6401be11:	cmp    ebx,ecx
6401be13:	jne    0x6401be70
6401be15:	jmp    0x6401be23
6401be17:	cmp    DWORD PTR [ebx+0x8],0x0
6401be1b:	jne    0x6401be27
6401be1d:	add    ebx,0x14
6401be20:	mov    DWORD PTR [ebp+0x8],ebx
6401be23:	cmp    ebx,eax
6401be25:	jb     0x6401be17
6401be27:	cmp    ebx,eax
6401be29:	jne    0x6401be5c
6401be2b:	mov    ebx,DWORD PTR ds:0x64034508
6401be31:	jmp    0x6401be3c
6401be33:	cmp    DWORD PTR [ebx+0x8],0x0
6401be37:	jne    0x6401be43
6401be39:	add    ebx,0x14
6401be3c:	cmp    ebx,ecx
6401be3e:	mov    DWORD PTR [ebp+0x8],ebx
6401be41:	jb     0x6401be33
6401be43:	cmp    ebx,ecx
6401be45:	jne    0x6401be5c
6401be47:	call   0x6401b8f2
6401be4c:	mov    ebx,eax
6401be4e:	test   ebx,ebx
6401be50:	mov    DWORD PTR [ebp+0x8],ebx
6401be53:	jne    0x6401be5c
6401be55:	xor    eax,eax
6401be57:	jmp    0x6401c065
6401be5c:	push   ebx
6401be5d:	call   0x6401b9a2
6401be62:	pop    ecx
6401be63:	mov    ecx,DWORD PTR [ebx+0x10]
6401be66:	mov    DWORD PTR [ecx],eax
6401be68:	mov    eax,DWORD PTR [ebx+0x10]
6401be6b:	cmp    DWORD PTR [eax],0xffffffff
6401be6e:	je     0x6401be55
6401be70:	mov    DWORD PTR ds:0x64034510,ebx
6401be76:	mov    eax,DWORD PTR [ebx+0x10]
6401be79:	mov    edx,DWORD PTR [eax]
6401be7b:	cmp    edx,0xffffffff
6401be7e:	mov    DWORD PTR [ebp-0x4],edx
6401be81:	je     0x6401be97
6401be83:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401be8a:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401be8e:	and    ecx,DWORD PTR [ebp-0x8]
6401be91:	and    edi,esi
6401be93:	or     ecx,edi
6401be95:	jne    0x6401bec0
6401be97:	and    DWORD PTR [ebp-0x4],0x0
6401be9b:	mov    edx,DWORD PTR [eax+0xc4]
6401bea1:	lea    ecx,[eax+0x44]
6401bea4:	mov    edi,DWORD PTR [ecx]
6401bea6:	and    edx,DWORD PTR [ebp-0x8]
6401bea9:	and    edi,esi
6401beab:	or     edx,edi
6401bead:	jne    0x6401bebd
6401beaf:	inc    DWORD PTR [ebp-0x4]
6401beb2:	mov    edx,DWORD PTR [ecx+0x84]
6401beb8:	add    ecx,0x4
6401bebb:	jmp    0x6401bea4
6401bebd:	mov    edx,DWORD PTR [ebp-0x4]
6401bec0:	mov    ecx,edx
6401bec2:	imul   ecx,ecx,0x204
6401bec8:	lea    ecx,[ecx+eax*1+0x144]
6401becf:	mov    DWORD PTR [ebp-0xc],ecx
6401bed2:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401bed6:	xor    edi,edi
6401bed8:	and    ecx,esi
6401beda:	jne    0x6401beee
6401bedc:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bee3:	and    ecx,DWORD PTR [ebp-0x8]
6401bee6:	push   0x20
6401bee8:	pop    edi
6401bee9:	jmp    0x6401beee
6401beeb:	add    ecx,ecx
6401beed:	inc    edi
6401beee:	test   ecx,ecx
6401bef0:	jge    0x6401beeb
6401bef2:	mov    ecx,DWORD PTR [ebp-0xc]
6401bef5:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401bef9:	mov    ecx,DWORD PTR [edx]
6401befb:	sub    ecx,DWORD PTR [ebp-0x10]
6401befe:	mov    esi,ecx
6401bf00:	sar    esi,0x4
6401bf03:	dec    esi
6401bf04:	cmp    esi,0x3f
6401bf07:	mov    DWORD PTR [ebp-0x8],ecx
6401bf0a:	jle    0x6401bf0f
6401bf0c:	push   0x3f
6401bf0e:	pop    esi
6401bf0f:	cmp    esi,edi
6401bf11:	je     0x6401c018
6401bf17:	mov    ecx,DWORD PTR [edx+0x4]
6401bf1a:	cmp    ecx,DWORD PTR [edx+0x8]
6401bf1d:	jne    0x6401bf7b
6401bf1f:	cmp    edi,0x20
6401bf22:	mov    ebx,0x80000000
6401bf27:	jge    0x6401bf4f
6401bf29:	mov    ecx,edi
6401bf2b:	shr    ebx,cl
6401bf2d:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf30:	lea    edi,[eax+edi*1+0x4]
6401bf34:	not    ebx
6401bf36:	mov    DWORD PTR [ebp-0x14],ebx
6401bf39:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401bf3d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401bf41:	dec    BYTE PTR [edi]
6401bf43:	jne    0x6401bf78
6401bf45:	mov    ecx,DWORD PTR [ebp-0x14]
6401bf48:	mov    ebx,DWORD PTR [ebp+0x8]
6401bf4b:	and    DWORD PTR [ebx],ecx
6401bf4d:	jmp    0x6401bf7b
6401bf4f:	lea    ecx,[edi-0x20]
6401bf52:	shr    ebx,cl
6401bf54:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf57:	lea    ecx,[eax+ecx*4+0xc4]
6401bf5e:	lea    edi,[eax+edi*1+0x4]
6401bf62:	not    ebx
6401bf64:	and    DWORD PTR [ecx],ebx
6401bf66:	dec    BYTE PTR [edi]
6401bf68:	mov    DWORD PTR [ebp-0x14],ebx
6401bf6b:	jne    0x6401bf78
6401bf6d:	mov    ebx,DWORD PTR [ebp+0x8]
6401bf70:	mov    ecx,DWORD PTR [ebp-0x14]
6401bf73:	and    DWORD PTR [ebx+0x4],ecx
6401bf76:	jmp    0x6401bf7b
6401bf78:	mov    ebx,DWORD PTR [ebp+0x8]
6401bf7b:	cmp    DWORD PTR [ebp-0x8],0x0
6401bf7f:	mov    ecx,DWORD PTR [edx+0x8]
6401bf82:	mov    edi,DWORD PTR [edx+0x4]
6401bf85:	mov    DWORD PTR [ecx+0x4],edi
6401bf88:	mov    ecx,DWORD PTR [edx+0x4]
6401bf8b:	mov    edi,DWORD PTR [edx+0x8]
6401bf8e:	mov    DWORD PTR [ecx+0x8],edi
6401bf91:	je     0x6401c024
6401bf97:	mov    ecx,DWORD PTR [ebp-0xc]
6401bf9a:	lea    ecx,[ecx+esi*8]
6401bf9d:	mov    edi,DWORD PTR [ecx+0x4]
6401bfa0:	mov    DWORD PTR [edx+0x8],ecx
6401bfa3:	mov    DWORD PTR [edx+0x4],edi
6401bfa6:	mov    DWORD PTR [ecx+0x4],edx
6401bfa9:	mov    ecx,DWORD PTR [edx+0x4]
6401bfac:	mov    DWORD PTR [ecx+0x8],edx
6401bfaf:	mov    ecx,DWORD PTR [edx+0x4]
6401bfb2:	cmp    ecx,DWORD PTR [edx+0x8]
6401bfb5:	jne    0x6401c015
6401bfb7:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bfbb:	mov    BYTE PTR [ebp+0xb],cl
6401bfbe:	inc    cl
6401bfc0:	cmp    esi,0x20
6401bfc3:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bfc7:	jge    0x6401bfec
6401bfc9:	cmp    BYTE PTR [ebp+0xb],0x0
6401bfcd:	jne    0x6401bfda
6401bfcf:	mov    edi,0x80000000
6401bfd4:	mov    ecx,esi
6401bfd6:	shr    edi,cl
6401bfd8:	or     DWORD PTR [ebx],edi
6401bfda:	mov    ecx,esi
6401bfdc:	mov    edi,0x80000000
6401bfe1:	shr    edi,cl
6401bfe3:	mov    ecx,DWORD PTR [ebp-0x4]
6401bfe6:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401bfea:	jmp    0x6401c015
6401bfec:	cmp    BYTE PTR [ebp+0xb],0x0
6401bff0:	jne    0x6401bfff
6401bff2:	lea    ecx,[esi-0x20]
6401bff5:	mov    edi,0x80000000
6401bffa:	shr    edi,cl
6401bffc:	or     DWORD PTR [ebx+0x4],edi
6401bfff:	mov    ecx,DWORD PTR [ebp-0x4]
6401c002:	lea    edi,[eax+ecx*4+0xc4]
6401c009:	lea    ecx,[esi-0x20]
6401c00c:	mov    esi,0x80000000
6401c011:	shr    esi,cl
6401c013:	or     DWORD PTR [edi],esi
6401c015:	mov    ecx,DWORD PTR [ebp-0x8]
6401c018:	test   ecx,ecx
6401c01a:	je     0x6401c027
6401c01c:	mov    DWORD PTR [edx],ecx
6401c01e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401c022:	jmp    0x6401c027
6401c024:	mov    ecx,DWORD PTR [ebp-0x8]
6401c027:	mov    esi,DWORD PTR [ebp-0x10]
6401c02a:	add    edx,ecx
6401c02c:	lea    ecx,[esi+0x1]
6401c02f:	mov    DWORD PTR [edx],ecx
6401c031:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401c035:	mov    esi,DWORD PTR [ebp-0xc]
6401c038:	mov    ecx,DWORD PTR [esi]
6401c03a:	test   ecx,ecx
6401c03c:	lea    edi,[ecx+0x1]
6401c03f:	mov    DWORD PTR [esi],edi
6401c041:	jne    0x6401c05d
6401c043:	cmp    ebx,DWORD PTR ds:0x64030bc8
6401c049:	jne    0x6401c05d
6401c04b:	mov    ecx,DWORD PTR [ebp-0x4]
6401c04e:	cmp    ecx,DWORD PTR ds:0x64034518
6401c054:	jne    0x6401c05d
6401c056:	and    DWORD PTR ds:0x64030bc8,0x0
6401c05d:	mov    ecx,DWORD PTR [ebp-0x4]
6401c060:	mov    DWORD PTR [eax],ecx
6401c062:	lea    eax,[edx+0x4]
6401c065:	pop    edi
6401c066:	pop    esi
6401c067:	pop    ebx
6401c068:	leave  
6401c069:	ret    
6401c06a:	push   ecx
6401c06b:	push   ebx
6401c06c:	mov    ebx,DWORD PTR [esp+0xc]
6401c070:	push   esi
6401c071:	push   edi
6401c072:	xor    esi,esi
6401c074:	xor    edi,edi
6401c076:	cmp    ebx,DWORD PTR [edi*8+0x6402fa80]
6401c07d:	je     0x6401c085
6401c07f:	inc    edi
6401c080:	cmp    edi,0x17
6401c083:	jb     0x6401c076
6401c085:	cmp    edi,0x17
6401c088:	jae    0x6401c205
6401c08e:	push   ebp
6401c08f:	push   0x3
6401c091:	call   0x6401f133
6401c096:	cmp    eax,0x1
6401c099:	pop    ecx
6401c09a:	je     0x6401c1d1
6401c0a0:	push   0x3
6401c0a2:	call   0x6401f133
6401c0a7:	test   eax,eax
6401c0a9:	pop    ecx
6401c0aa:	jne    0x6401c0b9
6401c0ac:	cmp    DWORD PTR ds:0x64030580,0x1
6401c0b3:	je     0x6401c1d1
6401c0b9:	cmp    ebx,0xfc
6401c0bf:	je     0x6401c204
6401c0c5:	push   0x64027408
6401c0ca:	mov    ebx,0x314
6401c0cf:	push   ebx
6401c0d0:	mov    ebp,0x64030bd0
6401c0d5:	push   ebp
6401c0d6:	call   0x64015928
6401c0db:	add    esp,0xc
6401c0de:	test   eax,eax
6401c0e0:	je     0x6401c0ef
6401c0e2:	push   esi
6401c0e3:	push   esi
6401c0e4:	push   esi
6401c0e5:	push   esi
6401c0e6:	push   esi
6401c0e7:	call   0x640139a8
6401c0ec:	add    esp,0x14
6401c0ef:	push   0x104
6401c0f4:	mov    esi,0x64030be9
6401c0f9:	push   esi
6401c0fa:	push   0x0
6401c0fc:	mov    BYTE PTR ds:0x64030ced,0x0
6401c103:	call   DWORD PTR ds:0x64026160
6401c109:	test   eax,eax
6401c10b:	jne    0x6401c133
6401c10d:	push   0x640273f0
6401c112:	push   0x2fb
6401c117:	push   esi
6401c118:	call   0x64015928
6401c11d:	add    esp,0xc
6401c120:	test   eax,eax
6401c122:	je     0x6401c133
6401c124:	xor    eax,eax
6401c126:	push   eax
6401c127:	push   eax
6401c128:	push   eax
6401c129:	push   eax
6401c12a:	push   eax
6401c12b:	call   0x640139a8
6401c130:	add    esp,0x14
6401c133:	push   esi
6401c134:	call   0x64015730
6401c139:	inc    eax
6401c13a:	cmp    eax,0x3c
6401c13d:	pop    ecx
6401c13e:	jbe    0x6401c178
6401c140:	push   esi
6401c141:	call   0x64015730
6401c146:	sub    esi,0x3b
6401c149:	add    eax,esi
6401c14b:	push   0x3
6401c14d:	mov    ecx,0x64030ee4
6401c152:	push   0x640273ec
6401c157:	sub    ecx,eax
6401c159:	push   ecx
6401c15a:	push   eax
6401c15b:	call   0x6401d1c6
6401c160:	add    esp,0x14
6401c163:	test   eax,eax
6401c165:	je     0x6401c178
6401c167:	xor    esi,esi
6401c169:	push   esi
6401c16a:	push   esi
6401c16b:	push   esi
6401c16c:	push   esi
6401c16d:	push   esi
6401c16e:	call   0x640139a8
6401c173:	add    esp,0x14
6401c176:	jmp    0x6401c17a
6401c178:	xor    esi,esi
6401c17a:	push   0x640273e8
6401c17f:	push   ebx
6401c180:	push   ebp
6401c181:	call   0x6401d10e
6401c186:	add    esp,0xc
6401c189:	test   eax,eax
6401c18b:	je     0x6401c19a
6401c18d:	push   esi
6401c18e:	push   esi
6401c18f:	push   esi
6401c190:	push   esi
6401c191:	push   esi
6401c192:	call   0x640139a8
6401c197:	add    esp,0x14
6401c19a:	push   DWORD PTR [edi*8+0x6402fa84]
6401c1a1:	push   ebx
6401c1a2:	push   ebp
6401c1a3:	call   0x6401d10e
6401c1a8:	add    esp,0xc
6401c1ab:	test   eax,eax
6401c1ad:	je     0x6401c1bc
6401c1af:	push   esi
6401c1b0:	push   esi
6401c1b1:	push   esi
6401c1b2:	push   esi
6401c1b3:	push   esi
6401c1b4:	call   0x640139a8
6401c1b9:	add    esp,0x14
6401c1bc:	push   0x12010
6401c1c1:	push   0x640273c0
6401c1c6:	push   ebp
6401c1c7:	call   0x6401ef76
6401c1cc:	add    esp,0xc
6401c1cf:	jmp    0x6401c204
6401c1d1:	push   0xfffffff4
6401c1d3:	call   DWORD PTR ds:0x64026154
6401c1d9:	mov    ebp,eax
6401c1db:	cmp    ebp,esi
6401c1dd:	je     0x6401c204
6401c1df:	cmp    ebp,0xffffffff
6401c1e2:	je     0x6401c204
6401c1e4:	push   0x0
6401c1e6:	lea    eax,[esp+0x14]
6401c1ea:	push   eax
6401c1eb:	lea    esi,[edi*8+0x6402fa84]
6401c1f2:	push   DWORD PTR [esi]
6401c1f4:	call   0x64015730
6401c1f9:	pop    ecx
6401c1fa:	push   eax
6401c1fb:	push   DWORD PTR [esi]
6401c1fd:	push   ebp
6401c1fe:	call   DWORD PTR ds:0x64026088
6401c204:	pop    ebp
6401c205:	pop    edi
6401c206:	pop    esi
6401c207:	pop    ebx
6401c208:	pop    ecx
6401c209:	ret    
6401c20a:	push   0x3
6401c20c:	call   0x6401f133
6401c211:	cmp    eax,0x1
6401c214:	pop    ecx
6401c215:	je     0x6401c22c
6401c217:	push   0x3
6401c219:	call   0x6401f133
6401c21e:	test   eax,eax
6401c220:	pop    ecx
6401c221:	jne    0x6401c242
6401c223:	cmp    DWORD PTR ds:0x64030580,0x1
6401c22a:	jne    0x6401c242
6401c22c:	push   0xfc
6401c231:	call   0x6401c06a
6401c236:	push   0xff
6401c23b:	call   0x6401c06a
6401c240:	pop    ecx
6401c241:	pop    ecx
6401c242:	ret    
6401c243:	push   ebp
6401c244:	mov    ebp,esp
6401c246:	sub    esp,0x8
6401c249:	mov    DWORD PTR [ebp-0x4],edi
6401c24c:	mov    DWORD PTR [ebp-0x8],esi
6401c24f:	mov    esi,DWORD PTR [ebp+0xc]
6401c252:	mov    edi,DWORD PTR [ebp+0x8]
6401c255:	mov    ecx,DWORD PTR [ebp+0x10]
6401c258:	shr    ecx,0x7
6401c25b:	jmp    0x6401c263
6401c25d:	lea    ebx,[ebx+0x0]
6401c263:	movdqa xmm0,XMMWORD PTR [esi]
6401c267:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401c26c:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401c271:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401c276:	movdqa XMMWORD PTR [edi],xmm0
6401c27a:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401c27f:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401c284:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401c289:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401c28e:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401c293:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401c298:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401c29d:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401c2a2:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401c2a7:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401c2ac:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401c2b1:	lea    esi,[esi+0x80]
6401c2b7:	lea    edi,[edi+0x80]
6401c2bd:	dec    ecx
6401c2be:	jne    0x6401c263
6401c2c0:	mov    esi,DWORD PTR [ebp-0x8]
6401c2c3:	mov    edi,DWORD PTR [ebp-0x4]
6401c2c6:	mov    esp,ebp
6401c2c8:	pop    ebp
6401c2c9:	ret    
6401c2ca:	push   ebp
6401c2cb:	mov    ebp,esp
6401c2cd:	sub    esp,0x1c
6401c2d0:	mov    DWORD PTR [ebp-0xc],edi
6401c2d3:	mov    DWORD PTR [ebp-0x8],esi
6401c2d6:	mov    DWORD PTR [ebp-0x4],ebx
6401c2d9:	mov    ebx,DWORD PTR [ebp+0xc]
6401c2dc:	mov    eax,ebx
6401c2de:	cdq    
6401c2df:	mov    ecx,eax
6401c2e1:	mov    eax,DWORD PTR [ebp+0x8]
6401c2e4:	xor    ecx,edx
6401c2e6:	sub    ecx,edx
6401c2e8:	and    ecx,0xf
6401c2eb:	xor    ecx,edx
6401c2ed:	sub    ecx,edx
6401c2ef:	cdq    
6401c2f0:	mov    edi,eax
6401c2f2:	xor    edi,edx
6401c2f4:	sub    edi,edx
6401c2f6:	and    edi,0xf
6401c2f9:	xor    edi,edx
6401c2fb:	sub    edi,edx
6401c2fd:	mov    edx,ecx
6401c2ff:	or     edx,edi
6401c301:	jne    0x6401c34d
6401c303:	mov    esi,DWORD PTR [ebp+0x10]
6401c306:	mov    ecx,esi
6401c308:	and    ecx,0x7f
6401c30b:	mov    DWORD PTR [ebp-0x18],ecx
6401c30e:	cmp    esi,ecx
6401c310:	je     0x6401c325
6401c312:	sub    esi,ecx
6401c314:	push   esi
6401c315:	push   ebx
6401c316:	push   eax
6401c317:	call   0x6401c243
6401c31c:	add    esp,0xc
6401c31f:	mov    eax,DWORD PTR [ebp+0x8]
6401c322:	mov    ecx,DWORD PTR [ebp-0x18]
6401c325:	test   ecx,ecx
6401c327:	je     0x6401c3a0
6401c329:	mov    ebx,DWORD PTR [ebp+0x10]
6401c32c:	mov    edx,DWORD PTR [ebp+0xc]
6401c32f:	add    edx,ebx
6401c331:	sub    edx,ecx
6401c333:	mov    DWORD PTR [ebp-0x14],edx
6401c336:	add    ebx,eax
6401c338:	sub    ebx,ecx
6401c33a:	mov    DWORD PTR [ebp-0x10],ebx
6401c33d:	mov    esi,DWORD PTR [ebp-0x14]
6401c340:	mov    edi,DWORD PTR [ebp-0x10]
6401c343:	mov    ecx,DWORD PTR [ebp-0x18]
6401c346:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c348:	mov    eax,DWORD PTR [ebp+0x8]
6401c34b:	jmp    0x6401c3a0
6401c34d:	cmp    ecx,edi
6401c34f:	jne    0x6401c386
6401c351:	neg    ecx
6401c353:	add    ecx,0x10
6401c356:	mov    DWORD PTR [ebp-0x1c],ecx
6401c359:	mov    esi,DWORD PTR [ebp+0xc]
6401c35c:	mov    edi,DWORD PTR [ebp+0x8]
6401c35f:	mov    ecx,DWORD PTR [ebp-0x1c]
6401c362:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c364:	mov    ecx,DWORD PTR [ebp+0x8]
6401c367:	add    ecx,DWORD PTR [ebp-0x1c]
6401c36a:	mov    edx,DWORD PTR [ebp+0xc]
6401c36d:	add    edx,DWORD PTR [ebp-0x1c]
6401c370:	mov    eax,DWORD PTR [ebp+0x10]
6401c373:	sub    eax,DWORD PTR [ebp-0x1c]
6401c376:	push   eax
6401c377:	push   edx
6401c378:	push   ecx
6401c379:	call   0x6401c2ca
6401c37e:	add    esp,0xc
6401c381:	mov    eax,DWORD PTR [ebp+0x8]
6401c384:	jmp    0x6401c3a0
6401c386:	mov    esi,DWORD PTR [ebp+0xc]
6401c389:	mov    edi,DWORD PTR [ebp+0x8]
6401c38c:	mov    ecx,DWORD PTR [ebp+0x10]
6401c38f:	mov    edx,ecx
6401c391:	shr    ecx,0x2
6401c394:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c396:	mov    ecx,edx
6401c398:	and    ecx,0x3
6401c39b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c39d:	mov    eax,DWORD PTR [ebp+0x8]
6401c3a0:	mov    ebx,DWORD PTR [ebp-0x4]
6401c3a3:	mov    esi,DWORD PTR [ebp-0x8]
6401c3a6:	mov    edi,DWORD PTR [ebp-0xc]
6401c3a9:	mov    esp,ebp
6401c3ab:	pop    ebp
6401c3ac:	ret    
6401c3ad:	int3   
6401c3ae:	int3   
6401c3af:	int3   
6401c3b0:	push   ebx
6401c3b1:	push   esi
6401c3b2:	push   edi
6401c3b3:	mov    edx,DWORD PTR [esp+0x10]
6401c3b7:	mov    eax,DWORD PTR [esp+0x14]
6401c3bb:	mov    ecx,DWORD PTR [esp+0x18]
6401c3bf:	push   ebp
6401c3c0:	push   edx
6401c3c1:	push   eax
6401c3c2:	push   ecx
6401c3c3:	push   ecx
6401c3c4:	push   0x6401c440
6401c3c9:	push   DWORD PTR fs:0x0
6401c3d0:	mov    eax,ds:0x6402f09c
6401c3d5:	xor    eax,esp
6401c3d7:	mov    DWORD PTR [esp+0x8],eax
6401c3db:	mov    DWORD PTR fs:0x0,esp
6401c3e2:	mov    eax,DWORD PTR [esp+0x30]
6401c3e6:	mov    ebx,DWORD PTR [eax+0x8]
6401c3e9:	mov    ecx,DWORD PTR [esp+0x2c]
6401c3ed:	xor    ebx,DWORD PTR [ecx]
6401c3ef:	mov    esi,DWORD PTR [eax+0xc]
6401c3f2:	cmp    esi,0xfffffffe
6401c3f5:	je     0x6401c432
6401c3f7:	mov    edx,DWORD PTR [esp+0x34]
6401c3fb:	cmp    edx,0xfffffffe
6401c3fe:	je     0x6401c404
6401c400:	cmp    esi,edx
6401c402:	jbe    0x6401c432
6401c404:	lea    esi,[esi+esi*2]
6401c407:	lea    ebx,[ebx+esi*4+0x10]
6401c40b:	mov    ecx,DWORD PTR [ebx]
6401c40d:	mov    DWORD PTR [eax+0xc],ecx
6401c410:	cmp    DWORD PTR [ebx+0x4],0x0
6401c414:	jne    0x6401c3e2
6401c416:	push   0x101
6401c41b:	mov    eax,DWORD PTR [ebx+0x8]
6401c41e:	call   0x6401c861
6401c423:	mov    ecx,0x1
6401c428:	mov    eax,DWORD PTR [ebx+0x8]
6401c42b:	call   0x6401c880
6401c430:	jmp    0x6401c3e2
6401c432:	pop    DWORD PTR fs:0x0
6401c439:	add    esp,0x18
6401c43c:	pop    edi
6401c43d:	pop    esi
6401c43e:	pop    ebx
6401c43f:	ret    
6401c440:	mov    ecx,DWORD PTR [esp+0x4]
6401c444:	test   DWORD PTR [ecx+0x4],0x6
6401c44b:	mov    eax,0x1
6401c450:	je     0x6401c485
6401c452:	mov    eax,DWORD PTR [esp+0x8]
6401c456:	mov    ecx,DWORD PTR [eax+0x8]
6401c459:	xor    ecx,eax
6401c45b:	call   0x64013f6c
6401c460:	push   ebp
6401c461:	mov    ebp,DWORD PTR [eax+0x18]
6401c464:	push   DWORD PTR [eax+0xc]
6401c467:	push   DWORD PTR [eax+0x10]
6401c46a:	push   DWORD PTR [eax+0x14]
6401c46d:	call   0x6401c3b0
6401c472:	add    esp,0xc
6401c475:	pop    ebp
6401c476:	mov    eax,DWORD PTR [esp+0x8]
6401c47a:	mov    edx,DWORD PTR [esp+0x10]
6401c47e:	mov    DWORD PTR [edx],eax
6401c480:	mov    eax,0x3
6401c485:	ret    
6401c486:	push   ebp
6401c487:	mov    ecx,DWORD PTR [esp+0x8]
6401c48b:	mov    ebp,DWORD PTR [ecx]
6401c48d:	push   DWORD PTR [ecx+0x1c]
6401c490:	push   DWORD PTR [ecx+0x18]
6401c493:	push   DWORD PTR [ecx+0x28]
6401c496:	call   0x6401c3b0
6401c49b:	add    esp,0xc
6401c49e:	pop    ebp
6401c49f:	ret    0x4
6401c4a2:	push   ebp
6401c4a3:	push   esi
6401c4a4:	push   edi
6401c4a5:	push   ebx
6401c4a6:	mov    ebp,edx
6401c4a8:	xor    eax,eax
6401c4aa:	xor    ebx,ebx
6401c4ac:	xor    edx,edx
6401c4ae:	xor    esi,esi
6401c4b0:	xor    edi,edi
6401c4b2:	call   ecx
6401c4b4:	pop    ebx
6401c4b5:	pop    edi
6401c4b6:	pop    esi
6401c4b7:	pop    ebp
6401c4b8:	ret    
6401c4b9:	mov    ebp,edx
6401c4bb:	mov    esi,ecx
6401c4bd:	mov    eax,ecx
6401c4bf:	push   0x1
6401c4c1:	call   0x6401c861
6401c4c6:	xor    eax,eax
6401c4c8:	xor    ebx,ebx
6401c4ca:	xor    ecx,ecx
6401c4cc:	xor    edx,edx
6401c4ce:	xor    edi,edi
6401c4d0:	jmp    esi
6401c4d2:	push   ebp
6401c4d3:	mov    ebp,esp
6401c4d5:	push   ebx
6401c4d6:	push   esi
6401c4d7:	push   edi
6401c4d8:	push   0x0
6401c4da:	push   0x0
6401c4dc:	push   0x6401c4e7
6401c4e1:	push   ecx
6401c4e2:	call   0x640201dc
6401c4e7:	pop    edi
6401c4e8:	pop    esi
6401c4e9:	pop    ebx
6401c4ea:	pop    ebp
6401c4eb:	ret    
6401c4ec:	push   ebp
6401c4ed:	mov    ebp,DWORD PTR [esp+0x8]
6401c4f1:	push   edx
6401c4f2:	push   ecx
6401c4f3:	push   DWORD PTR [esp+0x14]
6401c4f7:	call   0x6401c3b0
6401c4fc:	add    esp,0xc
6401c4ff:	pop    ebp
6401c500:	ret    0x8
6401c503:	int3   
6401c504:	int3   
6401c505:	int3   
6401c506:	int3   
6401c507:	int3   
6401c508:	int3   
6401c509:	int3   
6401c50a:	int3   
6401c50b:	int3   
6401c50c:	int3   
6401c50d:	int3   
6401c50e:	int3   
6401c50f:	int3   
6401c510:	mov    ecx,DWORD PTR [esp+0x4]
6401c514:	cmp    WORD PTR [ecx],0x5a4d
6401c519:	je     0x6401c51e
6401c51b:	xor    eax,eax
6401c51d:	ret    
6401c51e:	mov    eax,DWORD PTR [ecx+0x3c]
6401c521:	add    eax,ecx
6401c523:	cmp    DWORD PTR [eax],0x4550
6401c529:	jne    0x6401c51b
6401c52b:	xor    ecx,ecx
6401c52d:	cmp    WORD PTR [eax+0x18],0x10b
6401c533:	sete   cl
6401c536:	mov    eax,ecx
6401c538:	ret    
6401c539:	int3   
6401c53a:	int3   
6401c53b:	int3   
6401c53c:	int3   
6401c53d:	int3   
6401c53e:	int3   
6401c53f:	int3   
6401c540:	mov    eax,DWORD PTR [esp+0x4]
6401c544:	mov    ecx,DWORD PTR [eax+0x3c]
6401c547:	add    ecx,eax
6401c549:	movzx  eax,WORD PTR [ecx+0x14]
6401c54d:	push   ebx
6401c54e:	push   esi
6401c54f:	movzx  esi,WORD PTR [ecx+0x6]
6401c553:	xor    edx,edx
6401c555:	test   esi,esi
6401c557:	push   edi
6401c558:	lea    eax,[eax+ecx*1+0x18]
6401c55c:	jbe    0x6401c57c
6401c55e:	mov    edi,DWORD PTR [esp+0x14]
6401c562:	mov    ecx,DWORD PTR [eax+0xc]
6401c565:	cmp    edi,ecx
6401c567:	jb     0x6401c572
6401c569:	mov    ebx,DWORD PTR [eax+0x8]
6401c56c:	add    ebx,ecx
6401c56e:	cmp    edi,ebx
6401c570:	jb     0x6401c57e
6401c572:	add    edx,0x1
6401c575:	add    eax,0x28
6401c578:	cmp    edx,esi
6401c57a:	jb     0x6401c562
6401c57c:	xor    eax,eax
6401c57e:	pop    edi
6401c57f:	pop    esi
6401c580:	pop    ebx
6401c581:	ret    
6401c582:	int3   
6401c583:	int3   
6401c584:	int3   
6401c585:	int3   
6401c586:	int3   
6401c587:	int3   
6401c588:	int3   
6401c589:	int3   
6401c58a:	int3   
6401c58b:	int3   
6401c58c:	int3   
6401c58d:	int3   
6401c58e:	int3   
6401c58f:	int3   
6401c590:	push   ebp
6401c591:	mov    ebp,esp
6401c593:	push   0xfffffffe
6401c595:	push   0x6402c5e8
6401c59a:	push   0x64015590
6401c59f:	mov    eax,fs:0x0
6401c5a5:	push   eax
6401c5a6:	sub    esp,0x8
6401c5a9:	push   ebx
6401c5aa:	push   esi
6401c5ab:	push   edi
6401c5ac:	mov    eax,ds:0x6402f09c
6401c5b1:	xor    DWORD PTR [ebp-0x8],eax
6401c5b4:	xor    eax,ebp
6401c5b6:	push   eax
6401c5b7:	lea    eax,[ebp-0x10]
6401c5ba:	mov    fs:0x0,eax
6401c5c0:	mov    DWORD PTR [ebp-0x18],esp
6401c5c3:	mov    DWORD PTR [ebp-0x4],0x0
6401c5ca:	push   0x64000000
6401c5cf:	call   0x6401c510
6401c5d4:	add    esp,0x4
6401c5d7:	test   eax,eax
6401c5d9:	je     0x6401c630
6401c5db:	mov    eax,DWORD PTR [ebp+0x8]
6401c5de:	sub    eax,0x64000000
6401c5e3:	push   eax
6401c5e4:	push   0x64000000
6401c5e9:	call   0x6401c540
6401c5ee:	add    esp,0x8
6401c5f1:	test   eax,eax
6401c5f3:	je     0x6401c630
6401c5f5:	mov    eax,DWORD PTR [eax+0x24]
6401c5f8:	shr    eax,0x1f
6401c5fb:	not    eax
6401c5fd:	and    eax,0x1
6401c600:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c607:	mov    ecx,DWORD PTR [ebp-0x10]
6401c60a:	mov    DWORD PTR fs:0x0,ecx
6401c611:	pop    ecx
6401c612:	pop    edi
6401c613:	pop    esi
6401c614:	pop    ebx
6401c615:	mov    esp,ebp
6401c617:	pop    ebp
6401c618:	ret    
6401c619:	mov    eax,DWORD PTR [ebp-0x14]
6401c61c:	mov    ecx,DWORD PTR [eax]
6401c61e:	mov    eax,DWORD PTR [ecx]
6401c620:	xor    edx,edx
6401c622:	cmp    eax,0xc0000005
6401c627:	sete   dl
6401c62a:	mov    eax,edx
6401c62c:	ret    
6401c62d:	mov    esp,DWORD PTR [ebp-0x18]
6401c630:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c637:	xor    eax,eax
6401c639:	mov    ecx,DWORD PTR [ebp-0x10]
6401c63c:	mov    DWORD PTR fs:0x0,ecx
6401c643:	pop    ecx
6401c644:	pop    edi
6401c645:	pop    esi
6401c646:	pop    ebx
6401c647:	mov    esp,ebp
6401c649:	pop    ebp
6401c64a:	ret    
6401c64b:	xor    eax,eax
6401c64d:	inc    eax
6401c64e:	cmp    DWORD PTR [esp+0x4],0x0
6401c653:	jne    0x6401c657
6401c655:	xor    eax,eax
6401c657:	ret    
6401c658:	push   ebp
6401c659:	lea    ebp,[esp-0x2a8]
6401c660:	sub    esp,0x328
6401c666:	mov    eax,ds:0x6402f09c
6401c66b:	xor    eax,ebp
6401c66d:	mov    DWORD PTR [ebp+0x2a4],eax
6401c673:	test   BYTE PTR ds:0x6402fb38,0x1
6401c67a:	push   esi
6401c67b:	je     0x6401c685
6401c67d:	push   0xa
6401c67f:	call   0x6401c06a
6401c684:	pop    ecx
6401c685:	call   0x6401ca0d
6401c68a:	test   eax,eax
6401c68c:	je     0x6401c696
6401c68e:	push   0x16
6401c690:	call   0x6401ca1a
6401c695:	pop    ecx
6401c696:	test   BYTE PTR ds:0x6402fb38,0x2
6401c69d:	je     0x6401c743
6401c6a3:	mov    DWORD PTR [ebp+0x88],eax
6401c6a9:	mov    DWORD PTR [ebp+0x84],ecx
6401c6af:	mov    DWORD PTR [ebp+0x80],edx
6401c6b5:	mov    DWORD PTR [ebp+0x7c],ebx
6401c6b8:	mov    DWORD PTR [ebp+0x78],esi
6401c6bb:	mov    DWORD PTR [ebp+0x74],edi
6401c6be:	data16 mov WORD PTR [ebp+0xa0],ss
6401c6c5:	data16 mov WORD PTR [ebp+0x94],cs
6401c6cc:	data16 mov WORD PTR [ebp+0x70],ds
6401c6d0:	data16 mov WORD PTR [ebp+0x6c],es
6401c6d4:	data16 mov WORD PTR [ebp+0x68],fs
6401c6d8:	data16 mov WORD PTR [ebp+0x64],gs
6401c6dc:	pushf  
6401c6dd:	pop    DWORD PTR [ebp+0x98]
6401c6e3:	mov    esi,DWORD PTR [ebp+0x2ac]
6401c6e9:	lea    eax,[ebp+0x2ac]
6401c6ef:	mov    DWORD PTR [ebp+0x9c],eax
6401c6f5:	mov    DWORD PTR [ebp-0x28],0x10001
6401c6fc:	mov    DWORD PTR [ebp+0x90],esi
6401c702:	mov    eax,DWORD PTR [eax-0x4]
6401c705:	push   0x50
6401c707:	mov    DWORD PTR [ebp+0x8c],eax
6401c70d:	lea    eax,[ebp-0x80]
6401c710:	push   0x0
6401c712:	push   eax
6401c713:	call   0x64014670
6401c718:	lea    eax,[ebp-0x80]
6401c71b:	add    esp,0xc
6401c71e:	mov    DWORD PTR [ebp-0x30],eax
6401c721:	lea    eax,[ebp-0x28]
6401c724:	push   0x0
6401c726:	mov    DWORD PTR [ebp-0x80],0x40000015
6401c72d:	mov    DWORD PTR [ebp-0x74],esi
6401c730:	mov    DWORD PTR [ebp-0x2c],eax
6401c733:	call   DWORD PTR ds:0x64026110
6401c739:	lea    eax,[ebp-0x30]
6401c73c:	push   eax
6401c73d:	call   DWORD PTR ds:0x6402610c
6401c743:	push   0x3
6401c745:	call   0x64017646
6401c74a:	int3   
6401c74b:	int3   
6401c74c:	push   ebp
6401c74d:	mov    ebp,esp
6401c74f:	push   ebx
6401c750:	push   esi
6401c751:	push   edi
6401c752:	push   ebp
6401c753:	push   0x0
6401c755:	push   0x0
6401c757:	push   0x6401c764
6401c75c:	push   DWORD PTR [ebp+0x8]
6401c75f:	call   0x640201dc
6401c764:	pop    ebp
6401c765:	pop    edi
6401c766:	pop    esi
6401c767:	pop    ebx
6401c768:	mov    esp,ebp
6401c76a:	pop    ebp
6401c76b:	ret    
6401c76c:	mov    ecx,DWORD PTR [esp+0x4]
6401c770:	test   DWORD PTR [ecx+0x4],0x6
6401c777:	mov    eax,0x1
6401c77c:	je     0x6401c7b0
6401c77e:	mov    eax,DWORD PTR [esp+0x14]
6401c782:	mov    ecx,DWORD PTR [eax-0x4]
6401c785:	xor    ecx,eax
6401c787:	call   0x64013f6c
6401c78c:	push   ebp
6401c78d:	mov    ebp,DWORD PTR [eax+0x10]
6401c790:	mov    edx,DWORD PTR [eax+0x28]
6401c793:	push   edx
6401c794:	mov    edx,DWORD PTR [eax+0x24]
6401c797:	push   edx
6401c798:	call   0x6401c7b1
6401c79d:	add    esp,0x8
6401c7a0:	pop    ebp
6401c7a1:	mov    eax,DWORD PTR [esp+0x8]
6401c7a5:	mov    edx,DWORD PTR [esp+0x10]
6401c7a9:	mov    DWORD PTR [edx],eax
6401c7ab:	mov    eax,0x3
6401c7b0:	ret    
6401c7b1:	push   ebx
6401c7b2:	push   esi
6401c7b3:	push   edi
6401c7b4:	mov    eax,DWORD PTR [esp+0x10]
6401c7b8:	push   ebp
6401c7b9:	push   eax
6401c7ba:	push   0xfffffffe
6401c7bc:	push   0x6401c76c
6401c7c1:	push   DWORD PTR fs:0x0
6401c7c8:	mov    eax,ds:0x6402f09c
6401c7cd:	xor    eax,esp
6401c7cf:	push   eax
6401c7d0:	lea    eax,[esp+0x4]
6401c7d4:	mov    fs:0x0,eax
6401c7da:	mov    eax,DWORD PTR [esp+0x28]
6401c7de:	mov    ebx,DWORD PTR [eax+0x8]
6401c7e1:	mov    esi,DWORD PTR [eax+0xc]
6401c7e4:	cmp    esi,0xffffffff
6401c7e7:	je     0x6401c823
6401c7e9:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401c7ee:	je     0x6401c7f6
6401c7f0:	cmp    esi,DWORD PTR [esp+0x2c]
6401c7f4:	jbe    0x6401c823
6401c7f6:	lea    esi,[esi+esi*2]
6401c7f9:	mov    ecx,DWORD PTR [ebx+esi*4]
6401c7fc:	mov    DWORD PTR [esp+0xc],ecx
6401c800:	mov    DWORD PTR [eax+0xc],ecx
6401c803:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401c808:	jne    0x6401c821
6401c80a:	push   0x101
6401c80f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401c813:	call   0x6401c861
6401c818:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401c81c:	call   0x6401c880
6401c821:	jmp    0x6401c7da
6401c823:	mov    ecx,DWORD PTR [esp+0x4]
6401c827:	mov    DWORD PTR fs:0x0,ecx
6401c82e:	add    esp,0x18
6401c831:	pop    edi
6401c832:	pop    esi
6401c833:	pop    ebx
6401c834:	ret    
6401c835:	xor    eax,eax
6401c837:	mov    ecx,DWORD PTR fs:0x0
6401c83e:	cmp    DWORD PTR [ecx+0x4],0x6401c76c
6401c845:	jne    0x6401c857
6401c847:	mov    edx,DWORD PTR [ecx+0xc]
6401c84a:	mov    edx,DWORD PTR [edx+0xc]
6401c84d:	cmp    DWORD PTR [ecx+0x8],edx
6401c850:	jne    0x6401c857
6401c852:	mov    eax,0x1
6401c857:	ret    
6401c858:	push   ebx
6401c859:	push   ecx
6401c85a:	mov    ebx,0x6402fb3c
6401c85f:	jmp    0x6401c86c
6401c861:	push   ebx
6401c862:	push   ecx
6401c863:	mov    ebx,0x6402fb3c
6401c868:	mov    ecx,DWORD PTR [esp+0xc]
6401c86c:	mov    DWORD PTR [ebx+0x8],ecx
6401c86f:	mov    DWORD PTR [ebx+0x4],eax
6401c872:	mov    DWORD PTR [ebx+0xc],ebp
6401c875:	push   ebp
6401c876:	push   ecx
6401c877:	push   eax
6401c878:	pop    eax
6401c879:	pop    ecx
6401c87a:	pop    ebp
6401c87b:	pop    ecx
6401c87c:	pop    ebx
6401c87d:	ret    0x4
6401c880:	call   eax
6401c882:	ret    
6401c883:	push   0xc
6401c885:	push   0x6402c608
6401c88a:	call   0x64015530
6401c88f:	mov    ecx,DWORD PTR [ebp+0x8]
6401c892:	xor    edi,edi
6401c894:	cmp    ecx,edi
6401c896:	jbe    0x6401c8c6
6401c898:	push   0xffffffe0
6401c89a:	pop    eax
6401c89b:	xor    edx,edx
6401c89d:	div    ecx
6401c89f:	cmp    eax,DWORD PTR [ebp+0xc]
6401c8a2:	sbb    eax,eax
6401c8a4:	inc    eax
6401c8a5:	jne    0x6401c8c6
6401c8a7:	call   0x64015d30
6401c8ac:	mov    DWORD PTR [eax],0xc
6401c8b2:	push   edi
6401c8b3:	push   edi
6401c8b4:	push   edi
6401c8b5:	push   edi
6401c8b6:	push   edi
6401c8b7:	call   0x64013aa4
6401c8bc:	add    esp,0x14
6401c8bf:	xor    eax,eax
6401c8c1:	jmp    0x6401c99b
6401c8c6:	imul   ecx,DWORD PTR [ebp+0xc]
6401c8ca:	mov    esi,ecx
6401c8cc:	mov    DWORD PTR [ebp+0x8],esi
6401c8cf:	cmp    esi,edi
6401c8d1:	jne    0x6401c8d6
6401c8d3:	xor    esi,esi
6401c8d5:	inc    esi
6401c8d6:	xor    ebx,ebx
6401c8d8:	mov    DWORD PTR [ebp-0x1c],ebx
6401c8db:	cmp    esi,0xffffffe0
6401c8de:	ja     0x6401c949
6401c8e0:	cmp    DWORD PTR ds:0x6403451c,0x3
6401c8e7:	jne    0x6401c934
6401c8e9:	add    esi,0xf
6401c8ec:	and    esi,0xfffffff0
6401c8ef:	mov    DWORD PTR [ebp+0xc],esi
6401c8f2:	mov    eax,DWORD PTR [ebp+0x8]
6401c8f5:	cmp    eax,DWORD PTR ds:0x6403450c
6401c8fb:	ja     0x6401c934
6401c8fd:	push   0x4
6401c8ff:	call   0x6401b53a
6401c904:	pop    ecx
6401c905:	mov    DWORD PTR [ebp-0x4],edi
6401c908:	push   DWORD PTR [ebp+0x8]
6401c90b:	call   0x6401bd87
6401c910:	pop    ecx
6401c911:	mov    DWORD PTR [ebp-0x1c],eax
6401c914:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c91b:	call   0x6401c97f
6401c920:	mov    ebx,DWORD PTR [ebp-0x1c]
6401c923:	cmp    ebx,edi
6401c925:	je     0x6401c938
6401c927:	push   DWORD PTR [ebp+0x8]
6401c92a:	push   edi
6401c92b:	push   ebx
6401c92c:	call   0x64014670
6401c931:	add    esp,0xc
6401c934:	cmp    ebx,edi
6401c936:	jne    0x6401c999
6401c938:	push   esi
6401c939:	push   0x8
6401c93b:	push   DWORD PTR ds:0x64030a6c
6401c941:	call   DWORD PTR ds:0x640260f4
6401c947:	mov    ebx,eax
6401c949:	cmp    ebx,edi
6401c94b:	jne    0x6401c999
6401c94d:	cmp    DWORD PTR ds:0x64030ee4,edi
6401c953:	je     0x6401c988
6401c955:	push   esi
6401c956:	call   0x640163ab
6401c95b:	pop    ecx
6401c95c:	test   eax,eax
6401c95e:	jne    0x6401c8d6
6401c964:	mov    eax,DWORD PTR [ebp+0x10]
6401c967:	cmp    eax,edi
6401c969:	je     0x6401c8bf
6401c96f:	mov    DWORD PTR [eax],0xc
6401c975:	jmp    0x6401c8bf
6401c97a:	xor    edi,edi
6401c97c:	mov    esi,DWORD PTR [ebp+0xc]
6401c97f:	push   0x4
6401c981:	call   0x6401b462
6401c986:	pop    ecx
6401c987:	ret    
6401c988:	cmp    ebx,edi
6401c98a:	jne    0x6401c999
6401c98c:	mov    eax,DWORD PTR [ebp+0x10]
6401c98f:	cmp    eax,edi
6401c991:	je     0x6401c999
6401c993:	mov    DWORD PTR [eax],0xc
6401c999:	mov    eax,ebx
6401c99b:	call   0x64015575
6401c9a0:	ret    
6401c9a1:	push   esi
6401c9a2:	push   edi
6401c9a3:	xor    edi,edi
6401c9a5:	lea    esi,[edi+0x6402fb4c]
6401c9ab:	push   DWORD PTR [esi]
6401c9ad:	call   0x64015de8
6401c9b2:	add    edi,0x4
6401c9b5:	cmp    edi,0x28
6401c9b8:	pop    ecx
6401c9b9:	mov    DWORD PTR [esi],eax
6401c9bb:	jb     0x6401c9a5
6401c9bd:	pop    edi
6401c9be:	pop    esi
6401c9bf:	ret    
6401c9c0:	mov    eax,DWORD PTR [esp+0x4]
6401c9c4:	mov    ds:0x64030f24,eax
6401c9c9:	mov    ds:0x64030f28,eax
6401c9ce:	mov    ds:0x64030f2c,eax
6401c9d3:	mov    ds:0x64030f30,eax
6401c9d8:	ret    
6401c9d9:	mov    eax,DWORD PTR [esp+0x4]
6401c9dd:	mov    ecx,DWORD PTR ds:0x6402f94c
6401c9e3:	push   esi
6401c9e4:	cmp    DWORD PTR [eax+0x4],edx
6401c9e7:	je     0x6401c9f9
6401c9e9:	mov    esi,ecx
6401c9eb:	imul   esi,esi,0xc
6401c9ee:	add    esi,DWORD PTR [esp+0x8]
6401c9f2:	add    eax,0xc
6401c9f5:	cmp    eax,esi
6401c9f7:	jb     0x6401c9e4
6401c9f9:	imul   ecx,ecx,0xc
6401c9fc:	add    ecx,DWORD PTR [esp+0x8]
6401ca00:	pop    esi
6401ca01:	cmp    eax,ecx
6401ca03:	jae    0x6401ca0a
6401ca05:	cmp    DWORD PTR [eax+0x4],edx
6401ca08:	je     0x6401ca0c
6401ca0a:	xor    eax,eax
6401ca0c:	ret    
6401ca0d:	push   DWORD PTR ds:0x64030f2c
6401ca13:	call   0x64015e5f
6401ca18:	pop    ecx
6401ca19:	ret    
6401ca1a:	push   0x20
6401ca1c:	push   0x6402c628
6401ca21:	call   0x64015530
6401ca26:	xor    edi,edi
6401ca28:	mov    DWORD PTR [ebp-0x1c],edi
6401ca2b:	mov    DWORD PTR [ebp-0x28],edi
6401ca2e:	mov    ebx,DWORD PTR [ebp+0x8]
6401ca31:	cmp    ebx,0xb
6401ca34:	jg     0x6401ca82
6401ca36:	je     0x6401ca4d
6401ca38:	mov    eax,ebx
6401ca3a:	push   0x2
6401ca3c:	pop    ecx
6401ca3d:	sub    eax,ecx
6401ca3f:	je     0x6401ca63
6401ca41:	sub    eax,ecx
6401ca43:	je     0x6401ca4d
6401ca45:	sub    eax,ecx
6401ca47:	je     0x6401caad
6401ca49:	sub    eax,ecx
6401ca4b:	jne    0x6401ca91
6401ca4d:	call   0x64016004
6401ca52:	mov    edi,eax
6401ca54:	mov    DWORD PTR [ebp-0x28],edi
6401ca57:	test   edi,edi
6401ca59:	jne    0x6401ca6f
6401ca5b:	or     eax,0xffffffff
6401ca5e:	jmp    0x6401cbc4
6401ca63:	mov    esi,0x64030f24
6401ca68:	mov    eax,ds:0x64030f24
6401ca6d:	jmp    0x6401cacf
6401ca6f:	push   DWORD PTR [edi+0x5c]
6401ca72:	mov    edx,ebx
6401ca74:	call   0x6401c9d9
6401ca79:	mov    esi,eax
6401ca7b:	add    esi,0x8
6401ca7e:	mov    eax,DWORD PTR [esi]
6401ca80:	jmp    0x6401cadc
6401ca82:	mov    eax,ebx
6401ca84:	sub    eax,0xf
6401ca87:	je     0x6401cac5
6401ca89:	sub    eax,0x6
6401ca8c:	je     0x6401cab9
6401ca8e:	dec    eax
6401ca8f:	je     0x6401caad
6401ca91:	call   0x64015d30
6401ca96:	mov    DWORD PTR [eax],0x16
6401ca9c:	xor    eax,eax
6401ca9e:	push   eax
6401ca9f:	push   eax
6401caa0:	push   eax
6401caa1:	push   eax
6401caa2:	push   eax
6401caa3:	call   0x64013aa4
6401caa8:	add    esp,0x14
6401caab:	jmp    0x6401ca5b
6401caad:	mov    esi,0x64030f2c
6401cab2:	mov    eax,ds:0x64030f2c
6401cab7:	jmp    0x6401cacf
6401cab9:	mov    esi,0x64030f28
6401cabe:	mov    eax,ds:0x64030f28
6401cac3:	jmp    0x6401cacf
6401cac5:	mov    esi,0x64030f30
6401caca:	mov    eax,ds:0x64030f30
6401cacf:	mov    DWORD PTR [ebp-0x1c],0x1
6401cad6:	push   eax
6401cad7:	call   0x64015e5f
6401cadc:	mov    DWORD PTR [ebp-0x20],eax
6401cadf:	pop    ecx
6401cae0:	xor    eax,eax
6401cae2:	cmp    DWORD PTR [ebp-0x20],0x1
6401cae6:	je     0x6401cbc4
6401caec:	cmp    DWORD PTR [ebp-0x20],eax
6401caef:	jne    0x6401caf8
6401caf1:	push   0x3
6401caf3:	call   0x64017646
6401caf8:	cmp    DWORD PTR [ebp-0x1c],eax
6401cafb:	je     0x6401cb04
6401cafd:	push   eax
6401cafe:	call   0x6401b53a
6401cb03:	pop    ecx
6401cb04:	xor    eax,eax
6401cb06:	mov    DWORD PTR [ebp-0x4],eax
6401cb09:	cmp    ebx,0x8
6401cb0c:	je     0x6401cb18
6401cb0e:	cmp    ebx,0xb
6401cb11:	je     0x6401cb18
6401cb13:	cmp    ebx,0x4
6401cb16:	jne    0x6401cb33
6401cb18:	mov    ecx,DWORD PTR [edi+0x60]
6401cb1b:	mov    DWORD PTR [ebp-0x2c],ecx
6401cb1e:	mov    DWORD PTR [edi+0x60],eax
6401cb21:	cmp    ebx,0x8
6401cb24:	jne    0x6401cb66
6401cb26:	mov    ecx,DWORD PTR [edi+0x64]
6401cb29:	mov    DWORD PTR [ebp-0x30],ecx
6401cb2c:	mov    DWORD PTR [edi+0x64],0x8c
6401cb33:	cmp    ebx,0x8
6401cb36:	jne    0x6401cb66
6401cb38:	mov    ecx,DWORD PTR ds:0x6402f940
6401cb3e:	mov    DWORD PTR [ebp-0x24],ecx
6401cb41:	mov    ecx,DWORD PTR ds:0x6402f944
6401cb47:	mov    edx,DWORD PTR ds:0x6402f940
6401cb4d:	add    ecx,edx
6401cb4f:	cmp    DWORD PTR [ebp-0x24],ecx
6401cb52:	jge    0x6401cb6d
6401cb54:	mov    ecx,DWORD PTR [ebp-0x24]
6401cb57:	imul   ecx,ecx,0xc
6401cb5a:	mov    edx,DWORD PTR [edi+0x5c]
6401cb5d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401cb61:	inc    DWORD PTR [ebp-0x24]
6401cb64:	jmp    0x6401cb41
6401cb66:	call   0x64015e56
6401cb6b:	mov    DWORD PTR [esi],eax
6401cb6d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401cb74:	call   0x6401cb8e
6401cb79:	cmp    ebx,0x8
6401cb7c:	jne    0x6401cb9d
6401cb7e:	push   DWORD PTR [edi+0x64]
6401cb81:	push   ebx
6401cb82:	call   DWORD PTR [ebp-0x20]
6401cb85:	pop    ecx
6401cb86:	jmp    0x6401cba1
6401cb88:	mov    ebx,DWORD PTR [ebp+0x8]
6401cb8b:	mov    edi,DWORD PTR [ebp-0x28]
6401cb8e:	cmp    DWORD PTR [ebp-0x1c],0x0
6401cb92:	je     0x6401cb9c
6401cb94:	push   0x0
6401cb96:	call   0x6401b462
6401cb9b:	pop    ecx
6401cb9c:	ret    
6401cb9d:	push   ebx
6401cb9e:	call   DWORD PTR [ebp-0x20]
6401cba1:	pop    ecx
6401cba2:	cmp    ebx,0x8
6401cba5:	je     0x6401cbb1
6401cba7:	cmp    ebx,0xb
6401cbaa:	je     0x6401cbb1
6401cbac:	cmp    ebx,0x4
6401cbaf:	jne    0x6401cbc2
6401cbb1:	mov    eax,DWORD PTR [ebp-0x2c]
6401cbb4:	mov    DWORD PTR [edi+0x60],eax
6401cbb7:	cmp    ebx,0x8
6401cbba:	jne    0x6401cbc2
6401cbbc:	mov    eax,DWORD PTR [ebp-0x30]
6401cbbf:	mov    DWORD PTR [edi+0x64],eax
6401cbc2:	xor    eax,eax
6401cbc4:	call   0x64015575
6401cbc9:	ret    
6401cbca:	mov    eax,DWORD PTR [esp+0x4]
6401cbce:	mov    ds:0x64030f38,eax
6401cbd3:	ret    
6401cbd4:	mov    eax,DWORD PTR [esp+0x4]
6401cbd8:	mov    ds:0x64030f44,eax
6401cbdd:	ret    
6401cbde:	mov    eax,DWORD PTR [esp+0x4]
6401cbe2:	mov    ds:0x64030f48,eax
6401cbe7:	ret    
6401cbe8:	push   DWORD PTR [esp+0x4]
6401cbec:	call   DWORD PTR ds:0x6402601c
6401cbf2:	xor    eax,eax
6401cbf4:	inc    eax
6401cbf5:	ret    0x8
6401cbf8:	push   0x14
6401cbfa:	push   0x6402c648
6401cbff:	call   0x64015530
6401cc04:	xor    edi,edi
6401cc06:	mov    DWORD PTR [ebp-0x1c],edi
6401cc09:	push   DWORD PTR ds:0x64030f48
6401cc0f:	call   0x64015e5f
6401cc14:	pop    ecx
6401cc15:	mov    esi,eax
6401cc17:	cmp    esi,edi
6401cc19:	jne    0x6401cc6e
6401cc1b:	lea    eax,[ebp-0x1c]
6401cc1e:	push   eax
6401cc1f:	call   0x6401745f
6401cc24:	pop    ecx
6401cc25:	cmp    eax,edi
6401cc27:	je     0x6401cc36
6401cc29:	push   edi
6401cc2a:	push   edi
6401cc2b:	push   edi
6401cc2c:	push   edi
6401cc2d:	push   edi
6401cc2e:	call   0x640139a8
6401cc33:	add    esp,0x14
6401cc36:	cmp    DWORD PTR [ebp-0x1c],0x1
6401cc3a:	je     0x6401cc5d
6401cc3c:	push   0x64027b68
6401cc41:	call   DWORD PTR ds:0x64026124
6401cc47:	cmp    eax,edi
6401cc49:	je     0x6401cc5d
6401cc4b:	push   0x64027b40
6401cc50:	push   eax
6401cc51:	call   DWORD PTR ds:0x64026014
6401cc57:	mov    esi,eax
6401cc59:	cmp    esi,edi
6401cc5b:	jne    0x6401cc62
6401cc5d:	mov    esi,0x6401cbe8
6401cc62:	push   esi
6401cc63:	call   0x64015de8
6401cc68:	pop    ecx
6401cc69:	mov    ds:0x64030f48,eax
6401cc6e:	mov    DWORD PTR [ebp-0x4],edi
6401cc71:	push   DWORD PTR [ebp+0xc]
6401cc74:	push   DWORD PTR [ebp+0x8]
6401cc77:	call   esi
6401cc79:	mov    DWORD PTR [ebp-0x20],eax
6401cc7c:	jmp    0x6401ccad
6401cc7e:	mov    eax,DWORD PTR [ebp-0x14]
6401cc81:	mov    eax,DWORD PTR [eax]
6401cc83:	mov    eax,DWORD PTR [eax]
6401cc85:	mov    DWORD PTR [ebp-0x24],eax
6401cc88:	xor    ecx,ecx
6401cc8a:	cmp    eax,0xc0000017
6401cc8f:	sete   cl
6401cc92:	mov    eax,ecx
6401cc94:	ret    
6401cc95:	mov    esp,DWORD PTR [ebp-0x18]
6401cc98:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401cc9f:	jne    0x6401cca9
6401cca1:	push   0x8
6401cca3:	call   DWORD PTR ds:0x64026060
6401cca9:	and    DWORD PTR [ebp-0x20],0x0
6401ccad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ccb4:	mov    eax,DWORD PTR [ebp-0x20]
6401ccb7:	call   0x64015575
6401ccbc:	ret    
6401ccbd:	push   ebp
6401ccbe:	mov    ebp,esp
6401ccc0:	push   ecx
6401ccc1:	push   ecx
6401ccc2:	mov    eax,ds:0x6402f09c
6401ccc7:	xor    eax,ebp
6401ccc9:	mov    DWORD PTR [ebp-0x4],eax
6401cccc:	mov    eax,ds:0x64030f4c
6401ccd1:	push   ebx
6401ccd2:	push   esi
6401ccd3:	xor    ebx,ebx
6401ccd5:	cmp    eax,ebx
6401ccd7:	push   edi
6401ccd8:	mov    edi,ecx
6401ccda:	jne    0x6401cd16
6401ccdc:	lea    eax,[ebp-0x8]
6401ccdf:	push   eax
6401cce0:	xor    esi,esi
6401cce2:	inc    esi
6401cce3:	push   esi
6401cce4:	push   0x640286e0
6401cce9:	push   esi
6401ccea:	call   DWORD PTR ds:0x640260bc
6401ccf0:	test   eax,eax
6401ccf2:	je     0x6401ccfc
6401ccf4:	mov    DWORD PTR ds:0x64030f4c,esi
6401ccfa:	jmp    0x6401cd30
6401ccfc:	call   DWORD PTR ds:0x64026044
6401cd02:	cmp    eax,0x78
6401cd05:	jne    0x6401cd11
6401cd07:	push   0x2
6401cd09:	pop    eax
6401cd0a:	mov    ds:0x64030f4c,eax
6401cd0f:	jmp    0x6401cd16
6401cd11:	mov    eax,ds:0x64030f4c
6401cd16:	cmp    eax,0x2
6401cd19:	je     0x6401cdee
6401cd1f:	cmp    eax,ebx
6401cd21:	je     0x6401cdee
6401cd27:	cmp    eax,0x1
6401cd2a:	jne    0x6401ce18
6401cd30:	cmp    DWORD PTR [ebp+0x18],ebx
6401cd33:	mov    DWORD PTR [ebp-0x8],ebx
6401cd36:	jne    0x6401cd40
6401cd38:	mov    eax,DWORD PTR [edi]
6401cd3a:	mov    eax,DWORD PTR [eax+0x4]
6401cd3d:	mov    DWORD PTR [ebp+0x18],eax
6401cd40:	mov    esi,DWORD PTR ds:0x64026024
6401cd46:	xor    eax,eax
6401cd48:	cmp    DWORD PTR [ebp+0x20],ebx
6401cd4b:	push   ebx
6401cd4c:	push   ebx
6401cd4d:	push   DWORD PTR [ebp+0x10]
6401cd50:	setne  al
6401cd53:	push   DWORD PTR [ebp+0xc]
6401cd56:	lea    eax,[eax*8+0x1]
6401cd5d:	push   eax
6401cd5e:	push   DWORD PTR [ebp+0x18]
6401cd61:	call   esi
6401cd63:	mov    edi,eax
6401cd65:	cmp    edi,ebx
6401cd67:	je     0x6401ce18
6401cd6d:	jle    0x6401cdab
6401cd6f:	cmp    edi,0x7ffffff0
6401cd75:	ja     0x6401cdab
6401cd77:	lea    eax,[edi+edi*1+0x8]
6401cd7b:	cmp    eax,0x400
6401cd80:	ja     0x6401cd95
6401cd82:	call   0x640146f0
6401cd87:	mov    eax,esp
6401cd89:	cmp    eax,ebx
6401cd8b:	je     0x6401cda9
6401cd8d:	mov    DWORD PTR [eax],0xcccc
6401cd93:	jmp    0x6401cda6
6401cd95:	push   eax
6401cd96:	call   0x64014ee3
6401cd9b:	cmp    eax,ebx
6401cd9d:	pop    ecx
6401cd9e:	je     0x6401cda9
6401cda0:	mov    DWORD PTR [eax],0xdddd
6401cda6:	add    eax,0x8
6401cda9:	mov    ebx,eax
6401cdab:	test   ebx,ebx
6401cdad:	je     0x6401ce18
6401cdaf:	lea    eax,[edi+edi*1]
6401cdb2:	push   eax
6401cdb3:	push   0x0
6401cdb5:	push   ebx
6401cdb6:	call   0x64014670
6401cdbb:	add    esp,0xc
6401cdbe:	push   edi
6401cdbf:	push   ebx
6401cdc0:	push   DWORD PTR [ebp+0x10]
6401cdc3:	push   DWORD PTR [ebp+0xc]
6401cdc6:	push   0x1
6401cdc8:	push   DWORD PTR [ebp+0x18]
6401cdcb:	call   esi
6401cdcd:	test   eax,eax
6401cdcf:	je     0x6401cde2
6401cdd1:	push   DWORD PTR [ebp+0x14]
6401cdd4:	push   eax
6401cdd5:	push   ebx
6401cdd6:	push   DWORD PTR [ebp+0x8]
6401cdd9:	call   DWORD PTR ds:0x640260bc
6401cddf:	mov    DWORD PTR [ebp-0x8],eax
6401cde2:	push   ebx
6401cde3:	call   0x6401447c
6401cde8:	mov    eax,DWORD PTR [ebp-0x8]
6401cdeb:	pop    ecx
6401cdec:	jmp    0x6401ce63
6401cdee:	xor    esi,esi
6401cdf0:	cmp    DWORD PTR [ebp+0x1c],ebx
6401cdf3:	jne    0x6401cdfd
6401cdf5:	mov    eax,DWORD PTR [edi]
6401cdf7:	mov    eax,DWORD PTR [eax+0x14]
6401cdfa:	mov    DWORD PTR [ebp+0x1c],eax
6401cdfd:	cmp    DWORD PTR [ebp+0x18],ebx
6401ce00:	jne    0x6401ce0a
6401ce02:	mov    eax,DWORD PTR [edi]
6401ce04:	mov    eax,DWORD PTR [eax+0x4]
6401ce07:	mov    DWORD PTR [ebp+0x18],eax
6401ce0a:	push   DWORD PTR [ebp+0x1c]
6401ce0d:	call   0x6401eae2
6401ce12:	cmp    eax,0xffffffff
6401ce15:	pop    ecx
6401ce16:	jne    0x6401ce1c
6401ce18:	xor    eax,eax
6401ce1a:	jmp    0x6401ce63
6401ce1c:	cmp    eax,DWORD PTR [ebp+0x18]
6401ce1f:	je     0x6401ce3f
6401ce21:	push   ebx
6401ce22:	push   ebx
6401ce23:	lea    ecx,[ebp+0x10]
6401ce26:	push   ecx
6401ce27:	push   DWORD PTR [ebp+0xc]
6401ce2a:	push   eax
6401ce2b:	push   DWORD PTR [ebp+0x18]
6401ce2e:	call   0x6401eb29
6401ce33:	mov    esi,eax
6401ce35:	add    esp,0x18
6401ce38:	cmp    esi,ebx
6401ce3a:	je     0x6401ce18
6401ce3c:	mov    DWORD PTR [ebp+0xc],esi
6401ce3f:	push   DWORD PTR [ebp+0x14]
6401ce42:	push   DWORD PTR [ebp+0x10]
6401ce45:	push   DWORD PTR [ebp+0xc]
6401ce48:	push   DWORD PTR [ebp+0x8]
6401ce4b:	push   DWORD PTR [ebp+0x1c]
6401ce4e:	call   DWORD PTR ds:0x640260c0
6401ce54:	cmp    esi,ebx
6401ce56:	mov    edi,eax
6401ce58:	je     0x6401ce61
6401ce5a:	push   esi
6401ce5b:	call   0x64014e06
6401ce60:	pop    ecx
6401ce61:	mov    eax,edi
6401ce63:	lea    esp,[ebp-0x14]
6401ce66:	pop    edi
6401ce67:	pop    esi
6401ce68:	pop    ebx
6401ce69:	mov    ecx,DWORD PTR [ebp-0x4]
6401ce6c:	xor    ecx,ebp
6401ce6e:	call   0x64013f6c
6401ce73:	leave  
6401ce74:	ret    
6401ce75:	push   ebp
6401ce76:	mov    ebp,esp
6401ce78:	sub    esp,0x10
6401ce7b:	push   DWORD PTR [ebp+0x8]
6401ce7e:	lea    ecx,[ebp-0x10]
6401ce81:	call   0x6401410f
6401ce86:	push   DWORD PTR [ebp+0x24]
6401ce89:	lea    ecx,[ebp-0x10]
6401ce8c:	push   DWORD PTR [ebp+0x20]
6401ce8f:	push   DWORD PTR [ebp+0x1c]
6401ce92:	push   DWORD PTR [ebp+0x18]
6401ce95:	push   DWORD PTR [ebp+0x14]
6401ce98:	push   DWORD PTR [ebp+0x10]
6401ce9b:	push   DWORD PTR [ebp+0xc]
6401ce9e:	call   0x6401ccbd
6401cea3:	add    esp,0x1c
6401cea6:	cmp    BYTE PTR [ebp-0x4],0x0
6401ceaa:	je     0x6401ceb3
6401ceac:	mov    ecx,DWORD PTR [ebp-0x8]
6401ceaf:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ceb3:	leave  
6401ceb4:	ret    
6401ceb5:	push   esi
6401ceb6:	mov    esi,DWORD PTR [esp+0x8]
6401ceba:	test   esi,esi
6401cebc:	je     0x6401d043
6401cec2:	push   DWORD PTR [esi+0x4]
6401cec5:	call   0x64014e06
6401ceca:	push   DWORD PTR [esi+0x8]
6401cecd:	call   0x64014e06
6401ced2:	push   DWORD PTR [esi+0xc]
6401ced5:	call   0x64014e06
6401ceda:	push   DWORD PTR [esi+0x10]
6401cedd:	call   0x64014e06
6401cee2:	push   DWORD PTR [esi+0x14]
6401cee5:	call   0x64014e06
6401ceea:	push   DWORD PTR [esi+0x18]
6401ceed:	call   0x64014e06
6401cef2:	push   DWORD PTR [esi]
6401cef4:	call   0x64014e06
6401cef9:	push   DWORD PTR [esi+0x20]
6401cefc:	call   0x64014e06
6401cf01:	push   DWORD PTR [esi+0x24]
6401cf04:	call   0x64014e06
6401cf09:	push   DWORD PTR [esi+0x28]
6401cf0c:	call   0x64014e06
6401cf11:	push   DWORD PTR [esi+0x2c]
6401cf14:	call   0x64014e06
6401cf19:	push   DWORD PTR [esi+0x30]
6401cf1c:	call   0x64014e06
6401cf21:	push   DWORD PTR [esi+0x34]
6401cf24:	call   0x64014e06
6401cf29:	push   DWORD PTR [esi+0x1c]
6401cf2c:	call   0x64014e06
6401cf31:	push   DWORD PTR [esi+0x38]
6401cf34:	call   0x64014e06
6401cf39:	push   DWORD PTR [esi+0x3c]
6401cf3c:	call   0x64014e06
6401cf41:	add    esp,0x40
6401cf44:	push   DWORD PTR [esi+0x40]
6401cf47:	call   0x64014e06
6401cf4c:	push   DWORD PTR [esi+0x44]
6401cf4f:	call   0x64014e06
6401cf54:	push   DWORD PTR [esi+0x48]
6401cf57:	call   0x64014e06
6401cf5c:	push   DWORD PTR [esi+0x4c]
6401cf5f:	call   0x64014e06
6401cf64:	push   DWORD PTR [esi+0x50]
6401cf67:	call   0x64014e06
6401cf6c:	push   DWORD PTR [esi+0x54]
6401cf6f:	call   0x64014e06
6401cf74:	push   DWORD PTR [esi+0x58]
6401cf77:	call   0x64014e06
6401cf7c:	push   DWORD PTR [esi+0x5c]
6401cf7f:	call   0x64014e06
6401cf84:	push   DWORD PTR [esi+0x60]
6401cf87:	call   0x64014e06
6401cf8c:	push   DWORD PTR [esi+0x64]
6401cf8f:	call   0x64014e06
6401cf94:	push   DWORD PTR [esi+0x68]
6401cf97:	call   0x64014e06
6401cf9c:	push   DWORD PTR [esi+0x6c]
6401cf9f:	call   0x64014e06
6401cfa4:	push   DWORD PTR [esi+0x70]
6401cfa7:	call   0x64014e06
6401cfac:	push   DWORD PTR [esi+0x74]
6401cfaf:	call   0x64014e06
6401cfb4:	push   DWORD PTR [esi+0x78]
6401cfb7:	call   0x64014e06
6401cfbc:	push   DWORD PTR [esi+0x7c]
6401cfbf:	call   0x64014e06
6401cfc4:	add    esp,0x40
6401cfc7:	push   DWORD PTR [esi+0x80]
6401cfcd:	call   0x64014e06
6401cfd2:	push   DWORD PTR [esi+0x84]
6401cfd8:	call   0x64014e06
6401cfdd:	push   DWORD PTR [esi+0x88]
6401cfe3:	call   0x64014e06
6401cfe8:	push   DWORD PTR [esi+0x8c]
6401cfee:	call   0x64014e06
6401cff3:	push   DWORD PTR [esi+0x90]
6401cff9:	call   0x64014e06
6401cffe:	push   DWORD PTR [esi+0x94]
6401d004:	call   0x64014e06
6401d009:	push   DWORD PTR [esi+0x98]
6401d00f:	call   0x64014e06
6401d014:	push   DWORD PTR [esi+0x9c]
6401d01a:	call   0x64014e06
6401d01f:	push   DWORD PTR [esi+0xa0]
6401d025:	call   0x64014e06
6401d02a:	push   DWORD PTR [esi+0xa4]
6401d030:	call   0x64014e06
6401d035:	push   DWORD PTR [esi+0xa8]
6401d03b:	call   0x64014e06
6401d040:	add    esp,0x2c
6401d043:	pop    esi
6401d044:	ret    
6401d045:	push   esi
6401d046:	mov    esi,DWORD PTR [esp+0x8]
6401d04a:	test   esi,esi
6401d04c:	je     0x6401d083
6401d04e:	mov    eax,DWORD PTR [esi]
6401d050:	cmp    eax,DWORD PTR ds:0x6402fc40
6401d056:	je     0x6401d05f
6401d058:	push   eax
6401d059:	call   0x64014e06
6401d05e:	pop    ecx
6401d05f:	mov    eax,DWORD PTR [esi+0x4]
6401d062:	cmp    eax,DWORD PTR ds:0x6402fc44
6401d068:	je     0x6401d071
6401d06a:	push   eax
6401d06b:	call   0x64014e06
6401d070:	pop    ecx
6401d071:	mov    esi,DWORD PTR [esi+0x8]
6401d074:	cmp    esi,DWORD PTR ds:0x6402fc48
6401d07a:	je     0x6401d083
6401d07c:	push   esi
6401d07d:	call   0x64014e06
6401d082:	pop    ecx
6401d083:	pop    esi
6401d084:	ret    
6401d085:	push   esi
6401d086:	mov    esi,DWORD PTR [esp+0x8]
6401d08a:	test   esi,esi
6401d08c:	je     0x6401d10c
6401d08e:	mov    eax,DWORD PTR [esi+0xc]
6401d091:	cmp    eax,DWORD PTR ds:0x6402fc4c
6401d097:	je     0x6401d0a0
6401d099:	push   eax
6401d09a:	call   0x64014e06
6401d09f:	pop    ecx
6401d0a0:	mov    eax,DWORD PTR [esi+0x10]
6401d0a3:	cmp    eax,DWORD PTR ds:0x6402fc50
6401d0a9:	je     0x6401d0b2
6401d0ab:	push   eax
6401d0ac:	call   0x64014e06
6401d0b1:	pop    ecx
6401d0b2:	mov    eax,DWORD PTR [esi+0x14]
6401d0b5:	cmp    eax,DWORD PTR ds:0x6402fc54
6401d0bb:	je     0x6401d0c4
6401d0bd:	push   eax
6401d0be:	call   0x64014e06
6401d0c3:	pop    ecx
6401d0c4:	mov    eax,DWORD PTR [esi+0x18]
6401d0c7:	cmp    eax,DWORD PTR ds:0x6402fc58
6401d0cd:	je     0x6401d0d6
6401d0cf:	push   eax
6401d0d0:	call   0x64014e06
6401d0d5:	pop    ecx
6401d0d6:	mov    eax,DWORD PTR [esi+0x1c]
6401d0d9:	cmp    eax,DWORD PTR ds:0x6402fc5c
6401d0df:	je     0x6401d0e8
6401d0e1:	push   eax
6401d0e2:	call   0x64014e06
6401d0e7:	pop    ecx
6401d0e8:	mov    eax,DWORD PTR [esi+0x20]
6401d0eb:	cmp    eax,DWORD PTR ds:0x6402fc60
6401d0f1:	je     0x6401d0fa
6401d0f3:	push   eax
6401d0f4:	call   0x64014e06
6401d0f9:	pop    ecx
6401d0fa:	mov    esi,DWORD PTR [esi+0x24]
6401d0fd:	cmp    esi,DWORD PTR ds:0x6402fc64
6401d103:	je     0x6401d10c
6401d105:	push   esi
6401d106:	call   0x64014e06
6401d10b:	pop    ecx
6401d10c:	pop    esi
6401d10d:	ret    
6401d10e:	mov    eax,DWORD PTR [esp+0x4]
6401d112:	push   ebx
6401d113:	xor    ebx,ebx
6401d115:	cmp    eax,ebx
6401d117:	push   esi
6401d118:	push   edi
6401d119:	je     0x6401d123
6401d11b:	mov    edi,DWORD PTR [esp+0x14]
6401d11f:	cmp    edi,ebx
6401d121:	ja     0x6401d13e
6401d123:	call   0x64015d30
6401d128:	push   0x16
6401d12a:	pop    esi
6401d12b:	mov    DWORD PTR [eax],esi
6401d12d:	push   ebx
6401d12e:	push   ebx
6401d12f:	push   ebx
6401d130:	push   ebx
6401d131:	push   ebx
6401d132:	call   0x64013aa4
6401d137:	add    esp,0x14
6401d13a:	mov    eax,esi
6401d13c:	jmp    0x6401d17b
6401d13e:	mov    esi,DWORD PTR [esp+0x18]
6401d142:	cmp    esi,ebx
6401d144:	jne    0x6401d14a
6401d146:	mov    BYTE PTR [eax],bl
6401d148:	jmp    0x6401d123
6401d14a:	mov    edx,eax
6401d14c:	cmp    BYTE PTR [edx],bl
6401d14e:	je     0x6401d154
6401d150:	inc    edx
6401d151:	dec    edi
6401d152:	jne    0x6401d14c
6401d154:	cmp    edi,ebx
6401d156:	je     0x6401d146
6401d158:	mov    cl,BYTE PTR [esi]
6401d15a:	mov    BYTE PTR [edx],cl
6401d15c:	inc    edx
6401d15d:	inc    esi
6401d15e:	cmp    cl,bl
6401d160:	je     0x6401d165
6401d162:	dec    edi
6401d163:	jne    0x6401d158
6401d165:	cmp    edi,ebx
6401d167:	jne    0x6401d179
6401d169:	mov    BYTE PTR [eax],bl
6401d16b:	call   0x64015d30
6401d170:	push   0x22
6401d172:	pop    ecx
6401d173:	mov    DWORD PTR [eax],ecx
6401d175:	mov    esi,ecx
6401d177:	jmp    0x6401d12d
6401d179:	xor    eax,eax
6401d17b:	pop    edi
6401d17c:	pop    esi
6401d17d:	pop    ebx
6401d17e:	ret    
6401d17f:	int3   
6401d180:	push   ebp
6401d181:	mov    ebp,esp
6401d183:	push   esi
6401d184:	xor    eax,eax
6401d186:	push   eax
6401d187:	push   eax
6401d188:	push   eax
6401d189:	push   eax
6401d18a:	push   eax
6401d18b:	push   eax
6401d18c:	push   eax
6401d18d:	push   eax
6401d18e:	mov    edx,DWORD PTR [ebp+0xc]
6401d191:	lea    ecx,[ecx+0x0]
6401d194:	mov    al,BYTE PTR [edx]
6401d196:	or     al,al
6401d198:	je     0x6401d1a3
6401d19a:	add    edx,0x1
6401d19d:	bts    DWORD PTR [esp],eax
6401d1a1:	jmp    0x6401d194
6401d1a3:	mov    esi,DWORD PTR [ebp+0x8]
6401d1a6:	or     ecx,0xffffffff
6401d1a9:	lea    ecx,[ecx+0x0]
6401d1ac:	add    ecx,0x1
6401d1af:	mov    al,BYTE PTR [esi]
6401d1b1:	or     al,al
6401d1b3:	je     0x6401d1be
6401d1b5:	add    esi,0x1
6401d1b8:	bt     DWORD PTR [esp],eax
6401d1bc:	jae    0x6401d1ac
6401d1be:	mov    eax,ecx
6401d1c0:	add    esp,0x20
6401d1c3:	pop    esi
6401d1c4:	leave  
6401d1c5:	ret    
6401d1c6:	push   ebp
6401d1c7:	mov    ebp,esp
6401d1c9:	push   ebx
6401d1ca:	push   esi
6401d1cb:	mov    esi,DWORD PTR [ebp+0x8]
6401d1ce:	xor    ebx,ebx
6401d1d0:	cmp    DWORD PTR [ebp+0x14],ebx
6401d1d3:	push   edi
6401d1d4:	jne    0x6401d1e6
6401d1d6:	cmp    esi,ebx
6401d1d8:	jne    0x6401d1ea
6401d1da:	cmp    DWORD PTR [ebp+0xc],ebx
6401d1dd:	jne    0x6401d1f1
6401d1df:	xor    eax,eax
6401d1e1:	pop    edi
6401d1e2:	pop    esi
6401d1e3:	pop    ebx
6401d1e4:	pop    ebp
6401d1e5:	ret    
6401d1e6:	cmp    esi,ebx
6401d1e8:	je     0x6401d1f1
6401d1ea:	mov    edi,DWORD PTR [ebp+0xc]
6401d1ed:	cmp    edi,ebx
6401d1ef:	ja     0x6401d20c
6401d1f1:	call   0x64015d30
6401d1f6:	push   0x16
6401d1f8:	pop    esi
6401d1f9:	mov    DWORD PTR [eax],esi
6401d1fb:	push   ebx
6401d1fc:	push   ebx
6401d1fd:	push   ebx
6401d1fe:	push   ebx
6401d1ff:	push   ebx
6401d200:	call   0x64013aa4
6401d205:	add    esp,0x14
6401d208:	mov    eax,esi
6401d20a:	jmp    0x6401d1e1
6401d20c:	cmp    DWORD PTR [ebp+0x14],ebx
6401d20f:	jne    0x6401d215
6401d211:	mov    BYTE PTR [esi],bl
6401d213:	jmp    0x6401d1df
6401d215:	mov    edx,DWORD PTR [ebp+0x10]
6401d218:	cmp    edx,ebx
6401d21a:	jne    0x6401d220
6401d21c:	mov    BYTE PTR [esi],bl
6401d21e:	jmp    0x6401d1f1
6401d220:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401d224:	mov    eax,esi
6401d226:	jne    0x6401d237
6401d228:	mov    cl,BYTE PTR [edx]
6401d22a:	mov    BYTE PTR [eax],cl
6401d22c:	inc    eax
6401d22d:	inc    edx
6401d22e:	cmp    cl,bl
6401d230:	je     0x6401d250
6401d232:	dec    edi
6401d233:	jne    0x6401d228
6401d235:	jmp    0x6401d250
6401d237:	mov    cl,BYTE PTR [edx]
6401d239:	mov    BYTE PTR [eax],cl
6401d23b:	inc    eax
6401d23c:	inc    edx
6401d23d:	cmp    cl,bl
6401d23f:	je     0x6401d249
6401d241:	dec    edi
6401d242:	je     0x6401d249
6401d244:	dec    DWORD PTR [ebp+0x14]
6401d247:	jne    0x6401d237
6401d249:	cmp    DWORD PTR [ebp+0x14],ebx
6401d24c:	jne    0x6401d250
6401d24e:	mov    BYTE PTR [eax],bl
6401d250:	cmp    edi,ebx
6401d252:	jne    0x6401d1df
6401d254:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401d258:	jne    0x6401d269
6401d25a:	mov    eax,DWORD PTR [ebp+0xc]
6401d25d:	push   0x50
6401d25f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401d263:	pop    eax
6401d264:	jmp    0x6401d1e1
6401d269:	mov    BYTE PTR [esi],bl
6401d26b:	call   0x64015d30
6401d270:	push   0x22
6401d272:	pop    ecx
6401d273:	mov    DWORD PTR [eax],ecx
6401d275:	mov    esi,ecx
6401d277:	jmp    0x6401d1fb
6401d279:	int3   
6401d27a:	int3   
6401d27b:	int3   
6401d27c:	int3   
6401d27d:	int3   
6401d27e:	int3   
6401d27f:	int3   
6401d280:	push   ebp
6401d281:	mov    ebp,esp
6401d283:	push   esi
6401d284:	xor    eax,eax
6401d286:	push   eax
6401d287:	push   eax
6401d288:	push   eax
6401d289:	push   eax
6401d28a:	push   eax
6401d28b:	push   eax
6401d28c:	push   eax
6401d28d:	push   eax
6401d28e:	mov    edx,DWORD PTR [ebp+0xc]
6401d291:	lea    ecx,[ecx+0x0]
6401d294:	mov    al,BYTE PTR [edx]
6401d296:	or     al,al
6401d298:	je     0x6401d2a3
6401d29a:	add    edx,0x1
6401d29d:	bts    DWORD PTR [esp],eax
6401d2a1:	jmp    0x6401d294
6401d2a3:	mov    esi,DWORD PTR [ebp+0x8]
6401d2a6:	mov    edi,edi
6401d2a8:	mov    al,BYTE PTR [esi]
6401d2aa:	or     al,al
6401d2ac:	je     0x6401d2ba
6401d2ae:	add    esi,0x1
6401d2b1:	bt     DWORD PTR [esp],eax
6401d2b5:	jae    0x6401d2a8
6401d2b7:	lea    eax,[esi-0x1]
6401d2ba:	add    esp,0x20
6401d2bd:	pop    esi
6401d2be:	leave  
6401d2bf:	ret    
6401d2c0:	push   ebp
6401d2c1:	mov    ebp,esp
6401d2c3:	push   ecx
6401d2c4:	push   ecx
6401d2c5:	mov    eax,DWORD PTR [ebp+0xc]
6401d2c8:	push   esi
6401d2c9:	mov    esi,DWORD PTR [ebp+0x8]
6401d2cc:	mov    DWORD PTR [ebp-0x8],eax
6401d2cf:	mov    eax,DWORD PTR [ebp+0x10]
6401d2d2:	push   edi
6401d2d3:	push   esi
6401d2d4:	mov    DWORD PTR [ebp-0x4],eax
6401d2d7:	call   0x6401f24f
6401d2dc:	or     edi,0xffffffff
6401d2df:	cmp    eax,edi
6401d2e1:	pop    ecx
6401d2e2:	jne    0x6401d2f5
6401d2e4:	call   0x64015d30
6401d2e9:	mov    DWORD PTR [eax],0x9
6401d2ef:	mov    eax,edi
6401d2f1:	mov    edx,edi
6401d2f3:	jmp    0x6401d33f
6401d2f5:	push   DWORD PTR [ebp+0x14]
6401d2f8:	lea    ecx,[ebp-0x4]
6401d2fb:	push   ecx
6401d2fc:	push   DWORD PTR [ebp-0x8]
6401d2ff:	push   eax
6401d300:	call   DWORD PTR ds:0x640260d4
6401d306:	cmp    eax,edi
6401d308:	mov    DWORD PTR [ebp-0x8],eax
6401d30b:	jne    0x6401d320
6401d30d:	call   DWORD PTR ds:0x64026044
6401d313:	test   eax,eax
6401d315:	je     0x6401d320
6401d317:	push   eax
6401d318:	call   0x64015d56
6401d31d:	pop    ecx
6401d31e:	jmp    0x6401d2ef
6401d320:	mov    eax,esi
6401d322:	sar    eax,0x5
6401d325:	mov    eax,DWORD PTR [eax*4+0x64034540]
6401d32c:	and    esi,0x1f
6401d32f:	shl    esi,0x6
6401d332:	lea    eax,[eax+esi*1+0x4]
6401d336:	and    BYTE PTR [eax],0xfd
6401d339:	mov    eax,DWORD PTR [ebp-0x8]
6401d33c:	mov    edx,DWORD PTR [ebp-0x4]
6401d33f:	pop    edi
6401d340:	pop    esi
6401d341:	leave  
6401d342:	ret    
6401d343:	push   0x14
6401d345:	push   0x6402c668
6401d34a:	call   0x64015530
6401d34f:	or     esi,0xffffffff
6401d352:	mov    DWORD PTR [ebp-0x24],esi
6401d355:	mov    DWORD PTR [ebp-0x20],esi
6401d358:	mov    eax,DWORD PTR [ebp+0x8]
6401d35b:	cmp    eax,0xfffffffe
6401d35e:	jne    0x6401d37c
6401d360:	call   0x64015d43
6401d365:	and    DWORD PTR [eax],0x0
6401d368:	call   0x64015d30
6401d36d:	mov    DWORD PTR [eax],0x9
6401d373:	mov    eax,esi
6401d375:	mov    edx,esi
6401d377:	jmp    0x6401d44c
6401d37c:	xor    edi,edi
6401d37e:	cmp    eax,edi
6401d380:	jl     0x6401d38a
6401d382:	cmp    eax,DWORD PTR ds:0x64034520
6401d388:	jb     0x6401d3ab
6401d38a:	call   0x64015d43
6401d38f:	mov    DWORD PTR [eax],edi
6401d391:	call   0x64015d30
6401d396:	mov    DWORD PTR [eax],0x9
6401d39c:	push   edi
6401d39d:	push   edi
6401d39e:	push   edi
6401d39f:	push   edi
6401d3a0:	push   edi
6401d3a1:	call   0x64013aa4
6401d3a6:	add    esp,0x14
6401d3a9:	jmp    0x6401d373
6401d3ab:	mov    ecx,eax
6401d3ad:	sar    ecx,0x5
6401d3b0:	lea    ebx,[ecx*4+0x64034540]
6401d3b7:	mov    esi,eax
6401d3b9:	and    esi,0x1f
6401d3bc:	shl    esi,0x6
6401d3bf:	mov    ecx,DWORD PTR [ebx]
6401d3c1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401d3c6:	and    ecx,0x1
6401d3c9:	jne    0x6401d3f1
6401d3cb:	call   0x64015d43
6401d3d0:	mov    DWORD PTR [eax],edi
6401d3d2:	call   0x64015d30
6401d3d7:	mov    DWORD PTR [eax],0x9
6401d3dd:	push   edi
6401d3de:	push   edi
6401d3df:	push   edi
6401d3e0:	push   edi
6401d3e1:	push   edi
6401d3e2:	call   0x64013aa4
6401d3e7:	add    esp,0x14
6401d3ea:	or     edx,0xffffffff
6401d3ed:	mov    eax,edx
6401d3ef:	jmp    0x6401d44c
6401d3f1:	push   eax
6401d3f2:	call   0x6401f2c0
6401d3f7:	pop    ecx
6401d3f8:	mov    DWORD PTR [ebp-0x4],edi
6401d3fb:	mov    eax,DWORD PTR [ebx]
6401d3fd:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401d402:	je     0x6401d420
6401d404:	push   DWORD PTR [ebp+0x14]
6401d407:	push   DWORD PTR [ebp+0x10]
6401d40a:	push   DWORD PTR [ebp+0xc]
6401d40d:	push   DWORD PTR [ebp+0x8]
6401d410:	call   0x6401d2c0
6401d415:	add    esp,0x10
6401d418:	mov    DWORD PTR [ebp-0x24],eax
6401d41b:	mov    DWORD PTR [ebp-0x20],edx
6401d41e:	jmp    0x6401d43a
6401d420:	call   0x64015d30
6401d425:	mov    DWORD PTR [eax],0x9
6401d42b:	call   0x64015d43
6401d430:	mov    DWORD PTR [eax],edi
6401d432:	or     DWORD PTR [ebp-0x24],0xffffffff
6401d436:	or     DWORD PTR [ebp-0x20],0xffffffff
6401d43a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d441:	call   0x6401d452
6401d446:	mov    eax,DWORD PTR [ebp-0x24]
6401d449:	mov    edx,DWORD PTR [ebp-0x20]
6401d44c:	call   0x64015575
6401d451:	ret    
6401d452:	push   DWORD PTR [ebp+0x8]
6401d455:	call   0x6401f360
6401d45a:	pop    ecx
6401d45b:	ret    
6401d45c:	push   ebp
6401d45d:	lea    ebp,[esp-0x514]
6401d464:	sub    esp,0x590
6401d46a:	mov    eax,ds:0x6402f09c
6401d46f:	xor    eax,ebp
6401d471:	mov    DWORD PTR [ebp+0x510],eax
6401d477:	mov    eax,DWORD PTR [ebp+0x520]
6401d47d:	push   esi
6401d47e:	xor    esi,esi
6401d480:	cmp    DWORD PTR [ebp+0x524],esi
6401d486:	mov    DWORD PTR [ebp-0x64],eax
6401d489:	mov    DWORD PTR [ebp-0x60],esi
6401d48c:	mov    DWORD PTR [ebp-0x68],esi
6401d48f:	jne    0x6401d498
6401d491:	xor    eax,eax
6401d493:	jmp    0x6401da68
6401d498:	cmp    eax,esi
6401d49a:	jne    0x6401d4c3
6401d49c:	call   0x64015d43
6401d4a1:	mov    DWORD PTR [eax],esi
6401d4a3:	call   0x64015d30
6401d4a8:	push   esi
6401d4a9:	push   esi
6401d4aa:	push   esi
6401d4ab:	push   esi
6401d4ac:	push   esi
6401d4ad:	mov    DWORD PTR [eax],0x16
6401d4b3:	call   0x64013aa4
6401d4b8:	add    esp,0x14
6401d4bb:	or     eax,0xffffffff
6401d4be:	jmp    0x6401da68
6401d4c3:	push   ebx
6401d4c4:	push   edi
6401d4c5:	mov    edi,DWORD PTR [ebp+0x51c]
6401d4cb:	mov    eax,edi
6401d4cd:	sar    eax,0x5
6401d4d0:	lea    esi,[eax*4+0x64034540]
6401d4d7:	mov    eax,DWORD PTR [esi]
6401d4d9:	and    edi,0x1f
6401d4dc:	shl    edi,0x6
6401d4df:	add    eax,edi
6401d4e1:	mov    bl,BYTE PTR [eax+0x24]
6401d4e4:	add    bl,bl
6401d4e6:	sar    bl,1
6401d4e8:	cmp    bl,0x2
6401d4eb:	mov    DWORD PTR [ebp-0x70],esi
6401d4ee:	mov    BYTE PTR [ebp-0x71],bl
6401d4f1:	je     0x6401d4f8
6401d4f3:	cmp    bl,0x1
6401d4f6:	jne    0x6401d52b
6401d4f8:	mov    ecx,DWORD PTR [ebp+0x524]
6401d4fe:	not    ecx
6401d500:	test   cl,0x1
6401d503:	jne    0x6401d52b
6401d505:	call   0x64015d43
6401d50a:	xor    esi,esi
6401d50c:	mov    DWORD PTR [eax],esi
6401d50e:	call   0x64015d30
6401d513:	push   esi
6401d514:	push   esi
6401d515:	push   esi
6401d516:	push   esi
6401d517:	push   esi
6401d518:	mov    DWORD PTR [eax],0x16
6401d51e:	call   0x64013aa4
6401d523:	add    esp,0x14
6401d526:	jmp    0x6401da5b
6401d52b:	test   BYTE PTR [eax+0x4],0x20
6401d52f:	je     0x6401d545
6401d531:	push   0x2
6401d533:	push   0x0
6401d535:	push   0x0
6401d537:	push   DWORD PTR [ebp+0x51c]
6401d53d:	call   0x6401d2c0
6401d542:	add    esp,0x10
6401d545:	push   DWORD PTR [ebp+0x51c]
6401d54b:	call   0x6401db9e
6401d550:	test   eax,eax
6401d552:	pop    ecx
6401d553:	je     0x6401d792
6401d559:	mov    eax,DWORD PTR [esi]
6401d55b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401d560:	je     0x6401d792
6401d566:	call   0x6401607b
6401d56b:	mov    eax,DWORD PTR [eax+0x6c]
6401d56e:	xor    ecx,ecx
6401d570:	cmp    DWORD PTR [eax+0x14],ecx
6401d573:	lea    eax,[ebp-0x7c]
6401d576:	sete   cl
6401d579:	push   eax
6401d57a:	mov    eax,DWORD PTR [esi]
6401d57c:	push   DWORD PTR [edi+eax*1]
6401d57f:	mov    DWORD PTR [ebp-0x78],ecx
6401d582:	call   DWORD PTR ds:0x640260cc
6401d588:	test   eax,eax
6401d58a:	je     0x6401d792
6401d590:	xor    ecx,ecx
6401d592:	cmp    DWORD PTR [ebp-0x78],ecx
6401d595:	je     0x6401d59f
6401d597:	test   bl,bl
6401d599:	je     0x6401d794
6401d59f:	call   DWORD PTR ds:0x640260d0
6401d5a5:	mov    ebx,DWORD PTR [ebp-0x64]
6401d5a8:	mov    DWORD PTR [ebp-0x7c],eax
6401d5ab:	xor    eax,eax
6401d5ad:	cmp    DWORD PTR [ebp+0x524],eax
6401d5b3:	mov    DWORD PTR [ebp-0x5c],eax
6401d5b6:	jbe    0x6401da03
6401d5bc:	mov    DWORD PTR [ebp-0x54],eax
6401d5bf:	mov    al,BYTE PTR [ebp-0x71]
6401d5c2:	test   al,al
6401d5c4:	jne    0x6401d707
6401d5ca:	mov    cl,BYTE PTR [ebx]
6401d5cc:	mov    esi,DWORD PTR [ebp-0x70]
6401d5cf:	xor    eax,eax
6401d5d1:	cmp    cl,0xa
6401d5d4:	sete   al
6401d5d7:	mov    DWORD PTR [ebp-0x78],eax
6401d5da:	mov    eax,DWORD PTR [esi]
6401d5dc:	add    eax,edi
6401d5de:	cmp    DWORD PTR [eax+0x38],0x0
6401d5e2:	je     0x6401d602
6401d5e4:	mov    dl,BYTE PTR [eax+0x34]
6401d5e7:	mov    BYTE PTR [ebp+0x508],dl
6401d5ed:	mov    BYTE PTR [ebp+0x509],cl
6401d5f3:	and    DWORD PTR [eax+0x38],0x0
6401d5f7:	push   0x2
6401d5f9:	lea    eax,[ebp+0x508]
6401d5ff:	push   eax
6401d600:	jmp    0x6401d647
6401d602:	movsx  eax,cl
6401d605:	push   eax
6401d606:	call   0x6401b3b6
6401d60b:	test   eax,eax
6401d60d:	pop    ecx
6401d60e:	je     0x6401d644
6401d610:	mov    ecx,DWORD PTR [ebp-0x64]
6401d613:	sub    ecx,ebx
6401d615:	add    ecx,DWORD PTR [ebp+0x524]
6401d61b:	xor    eax,eax
6401d61d:	inc    eax
6401d61e:	cmp    ecx,eax
6401d620:	jbe    0x6401d77c
6401d626:	push   0x2
6401d628:	lea    eax,[ebp-0x58]
6401d62b:	push   ebx
6401d62c:	push   eax
6401d62d:	call   0x6401e0d1
6401d632:	add    esp,0xc
6401d635:	cmp    eax,0xffffffff
6401d638:	je     0x6401d9fd
6401d63e:	inc    ebx
6401d63f:	inc    DWORD PTR [ebp-0x54]
6401d642:	jmp    0x6401d65c
6401d644:	push   0x1
6401d646:	push   ebx
6401d647:	lea    eax,[ebp-0x58]
6401d64a:	push   eax
6401d64b:	call   0x6401e0d1
6401d650:	add    esp,0xc
6401d653:	cmp    eax,0xffffffff
6401d656:	je     0x6401d9fd
6401d65c:	xor    eax,eax
6401d65e:	push   eax
6401d65f:	push   eax
6401d660:	push   0x5
6401d662:	lea    ecx,[ebp+0x508]
6401d668:	push   ecx
6401d669:	push   0x1
6401d66b:	lea    ecx,[ebp-0x58]
6401d66e:	push   ecx
6401d66f:	push   eax
6401d670:	push   DWORD PTR [ebp-0x7c]
6401d673:	inc    ebx
6401d674:	inc    DWORD PTR [ebp-0x54]
6401d677:	call   DWORD PTR ds:0x64026028
6401d67d:	mov    esi,eax
6401d67f:	test   esi,esi
6401d681:	je     0x6401d9fd
6401d687:	push   0x0
6401d689:	lea    eax,[ebp-0x5c]
6401d68c:	push   eax
6401d68d:	push   esi
6401d68e:	lea    eax,[ebp+0x508]
6401d694:	push   eax
6401d695:	mov    eax,DWORD PTR [ebp-0x70]
6401d698:	mov    eax,DWORD PTR [eax]
6401d69a:	push   DWORD PTR [edi+eax*1]
6401d69d:	call   DWORD PTR ds:0x64026088
6401d6a3:	test   eax,eax
6401d6a5:	je     0x6401d9f4
6401d6ab:	mov    eax,DWORD PTR [ebp-0x54]
6401d6ae:	mov    ecx,DWORD PTR [ebp-0x68]
6401d6b1:	add    eax,ecx
6401d6b3:	cmp    DWORD PTR [ebp-0x5c],esi
6401d6b6:	mov    DWORD PTR [ebp-0x60],eax
6401d6b9:	jl     0x6401d9fd
6401d6bf:	cmp    DWORD PTR [ebp-0x78],0x0
6401d6c3:	je     0x6401d768
6401d6c9:	push   0x0
6401d6cb:	lea    eax,[ebp-0x5c]
6401d6ce:	push   eax
6401d6cf:	push   0x1
6401d6d1:	lea    eax,[ebp+0x508]
6401d6d7:	push   eax
6401d6d8:	mov    eax,DWORD PTR [ebp-0x70]
6401d6db:	mov    eax,DWORD PTR [eax]
6401d6dd:	mov    BYTE PTR [ebp+0x508],0xd
6401d6e4:	push   DWORD PTR [edi+eax*1]
6401d6e7:	call   DWORD PTR ds:0x64026088
6401d6ed:	test   eax,eax
6401d6ef:	je     0x6401d9f4
6401d6f5:	cmp    DWORD PTR [ebp-0x5c],0x1
6401d6f9:	jl     0x6401d9fd
6401d6ff:	inc    DWORD PTR [ebp-0x68]
6401d702:	inc    DWORD PTR [ebp-0x60]
6401d705:	jmp    0x6401d768
6401d707:	cmp    al,0x1
6401d709:	je     0x6401d70f
6401d70b:	cmp    al,0x2
6401d70d:	jne    0x6401d727
6401d70f:	movzx  esi,WORD PTR [ebx]
6401d712:	xor    ecx,ecx
6401d714:	cmp    si,0xa
6401d718:	sete   cl
6401d71b:	inc    ebx
6401d71c:	inc    ebx
6401d71d:	add    DWORD PTR [ebp-0x54],0x2
6401d721:	mov    DWORD PTR [ebp-0x58],esi
6401d724:	mov    DWORD PTR [ebp-0x78],ecx
6401d727:	cmp    al,0x1
6401d729:	je     0x6401d72f
6401d72b:	cmp    al,0x2
6401d72d:	jne    0x6401d768
6401d72f:	push   DWORD PTR [ebp-0x58]
6401d732:	call   0x6401f382
6401d737:	cmp    ax,WORD PTR [ebp-0x58]
6401d73b:	pop    ecx
6401d73c:	jne    0x6401d9f4
6401d742:	inc    DWORD PTR [ebp-0x60]
6401d745:	cmp    DWORD PTR [ebp-0x78],0x0
6401d749:	je     0x6401d768
6401d74b:	push   0xd
6401d74d:	pop    eax
6401d74e:	push   eax
6401d74f:	mov    DWORD PTR [ebp-0x58],eax
6401d752:	call   0x6401f382
6401d757:	cmp    ax,WORD PTR [ebp-0x58]
6401d75b:	pop    ecx
6401d75c:	jne    0x6401d9f4
6401d762:	inc    DWORD PTR [ebp-0x60]
6401d765:	inc    DWORD PTR [ebp-0x68]
6401d768:	mov    eax,DWORD PTR [ebp+0x524]
6401d76e:	cmp    DWORD PTR [ebp-0x54],eax
6401d771:	jb     0x6401d5bf
6401d777:	jmp    0x6401d9fd
6401d77c:	mov    ecx,DWORD PTR [esi]
6401d77e:	mov    dl,BYTE PTR [ebx]
6401d780:	inc    DWORD PTR [ebp-0x60]
6401d783:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401d787:	mov    ecx,DWORD PTR [esi]
6401d789:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401d78d:	jmp    0x6401d9fd
6401d792:	xor    ecx,ecx
6401d794:	mov    eax,DWORD PTR [esi]
6401d796:	add    eax,edi
6401d798:	test   BYTE PTR [eax+0x4],0x80
6401d79c:	je     0x6401d9cd
6401d7a2:	test   bl,bl
6401d7a4:	mov    eax,DWORD PTR [ebp-0x64]
6401d7a7:	mov    DWORD PTR [ebp-0x58],ecx
6401d7aa:	jne    0x6401d846
6401d7b0:	cmp    DWORD PTR [ebp+0x524],ecx
6401d7b6:	mov    DWORD PTR [ebp-0x5c],eax
6401d7b9:	jbe    0x6401da33
6401d7bf:	jmp    0x6401d7c4
6401d7c1:	mov    esi,DWORD PTR [ebp-0x70]
6401d7c4:	mov    ecx,DWORD PTR [ebp-0x5c]
6401d7c7:	and    DWORD PTR [ebp-0x54],0x0
6401d7cb:	sub    ecx,DWORD PTR [ebp-0x64]
6401d7ce:	lea    eax,[ebp-0x50]
6401d7d1:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d7d7:	jae    0x6401d800
6401d7d9:	mov    edx,DWORD PTR [ebp-0x5c]
6401d7dc:	inc    DWORD PTR [ebp-0x5c]
6401d7df:	mov    dl,BYTE PTR [edx]
6401d7e1:	inc    ecx
6401d7e2:	cmp    dl,0xa
6401d7e5:	jne    0x6401d7f1
6401d7e7:	inc    DWORD PTR [ebp-0x68]
6401d7ea:	mov    BYTE PTR [eax],0xd
6401d7ed:	inc    eax
6401d7ee:	inc    DWORD PTR [ebp-0x54]
6401d7f1:	mov    BYTE PTR [eax],dl
6401d7f3:	inc    eax
6401d7f4:	inc    DWORD PTR [ebp-0x54]
6401d7f7:	cmp    DWORD PTR [ebp-0x54],0x400
6401d7fe:	jb     0x6401d7d1
6401d800:	mov    ebx,eax
6401d802:	lea    eax,[ebp-0x50]
6401d805:	sub    ebx,eax
6401d807:	push   0x0
6401d809:	lea    eax,[ebp-0x6c]
6401d80c:	push   eax
6401d80d:	push   ebx
6401d80e:	lea    eax,[ebp-0x50]
6401d811:	push   eax
6401d812:	mov    eax,DWORD PTR [esi]
6401d814:	push   DWORD PTR [edi+eax*1]
6401d817:	call   DWORD PTR ds:0x64026088
6401d81d:	test   eax,eax
6401d81f:	je     0x6401d9f4
6401d825:	mov    eax,DWORD PTR [ebp-0x6c]
6401d828:	add    DWORD PTR [ebp-0x60],eax
6401d82b:	cmp    eax,ebx
6401d82d:	jl     0x6401d9fd
6401d833:	mov    eax,DWORD PTR [ebp-0x5c]
6401d836:	sub    eax,DWORD PTR [ebp-0x64]
6401d839:	cmp    eax,DWORD PTR [ebp+0x524]
6401d83f:	jb     0x6401d7c1
6401d841:	jmp    0x6401d9fd
6401d846:	cmp    bl,0x2
6401d849:	mov    DWORD PTR [ebp-0x54],eax
6401d84c:	jne    0x6401d8f5
6401d852:	cmp    DWORD PTR [ebp+0x524],ecx
6401d858:	jbe    0x6401da33
6401d85e:	jmp    0x6401d863
6401d860:	mov    esi,DWORD PTR [ebp-0x70]
6401d863:	mov    ecx,DWORD PTR [ebp-0x54]
6401d866:	and    DWORD PTR [ebp-0x5c],0x0
6401d86a:	sub    ecx,DWORD PTR [ebp-0x64]
6401d86d:	lea    eax,[ebp-0x50]
6401d870:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d876:	jae    0x6401d8ab
6401d878:	mov    edx,DWORD PTR [ebp-0x54]
6401d87b:	add    DWORD PTR [ebp-0x54],0x2
6401d87f:	movzx  edx,WORD PTR [edx]
6401d882:	inc    ecx
6401d883:	inc    ecx
6401d884:	cmp    dx,0xa
6401d888:	jne    0x6401d899
6401d88a:	add    DWORD PTR [ebp-0x68],0x2
6401d88e:	mov    WORD PTR [eax],0xd
6401d893:	inc    eax
6401d894:	inc    eax
6401d895:	add    DWORD PTR [ebp-0x5c],0x2
6401d899:	add    DWORD PTR [ebp-0x5c],0x2
6401d89d:	mov    WORD PTR [eax],dx
6401d8a0:	inc    eax
6401d8a1:	inc    eax
6401d8a2:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401d8a9:	jb     0x6401d870
6401d8ab:	mov    ebx,eax
6401d8ad:	lea    eax,[ebp-0x50]
6401d8b0:	sub    ebx,eax
6401d8b2:	push   0x0
6401d8b4:	lea    eax,[ebp-0x6c]
6401d8b7:	push   eax
6401d8b8:	push   ebx
6401d8b9:	lea    eax,[ebp-0x50]
6401d8bc:	push   eax
6401d8bd:	mov    eax,DWORD PTR [esi]
6401d8bf:	push   DWORD PTR [edi+eax*1]
6401d8c2:	call   DWORD PTR ds:0x64026088
6401d8c8:	test   eax,eax
6401d8ca:	je     0x6401d9f4
6401d8d0:	mov    eax,DWORD PTR [ebp-0x6c]
6401d8d3:	add    DWORD PTR [ebp-0x60],eax
6401d8d6:	cmp    eax,ebx
6401d8d8:	jl     0x6401d9fd
6401d8de:	mov    eax,DWORD PTR [ebp-0x54]
6401d8e1:	sub    eax,DWORD PTR [ebp-0x64]
6401d8e4:	cmp    eax,DWORD PTR [ebp+0x524]
6401d8ea:	jb     0x6401d860
6401d8f0:	jmp    0x6401d9fd
6401d8f5:	cmp    DWORD PTR [ebp+0x524],ecx
6401d8fb:	jbe    0x6401da33
6401d901:	mov    ecx,DWORD PTR [ebp-0x54]
6401d904:	and    DWORD PTR [ebp-0x5c],0x0
6401d908:	sub    ecx,DWORD PTR [ebp-0x64]
6401d90b:	push   0x2
6401d90d:	lea    eax,[ebp+0x3b4]
6401d913:	pop    esi
6401d914:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d91a:	jae    0x6401d948
6401d91c:	mov    edx,DWORD PTR [ebp-0x54]
6401d91f:	movzx  edx,WORD PTR [edx]
6401d922:	add    DWORD PTR [ebp-0x54],esi
6401d925:	add    ecx,esi
6401d927:	cmp    dx,0xa
6401d92b:	jne    0x6401d937
6401d92d:	mov    WORD PTR [eax],0xd
6401d932:	add    eax,esi
6401d934:	add    DWORD PTR [ebp-0x5c],esi
6401d937:	add    DWORD PTR [ebp-0x5c],esi
6401d93a:	mov    WORD PTR [eax],dx
6401d93d:	add    eax,esi
6401d93f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401d946:	jb     0x6401d914
6401d948:	xor    esi,esi
6401d94a:	push   esi
6401d94b:	push   esi
6401d94c:	push   0x2ab
6401d951:	lea    ecx,[ebp+0x104]
6401d957:	push   ecx
6401d958:	lea    ecx,[ebp+0x3b4]
6401d95e:	sub    eax,ecx
6401d960:	cdq    
6401d961:	sub    eax,edx
6401d963:	sar    eax,1
6401d965:	push   eax
6401d966:	mov    eax,ecx
6401d968:	push   eax
6401d969:	push   esi
6401d96a:	push   0xfde9
6401d96f:	call   DWORD PTR ds:0x64026028
6401d975:	mov    ebx,eax
6401d977:	cmp    ebx,esi
6401d979:	je     0x6401d9f4
6401d97b:	push   0x0
6401d97d:	lea    eax,[ebp-0x6c]
6401d980:	push   eax
6401d981:	mov    eax,ebx
6401d983:	sub    eax,esi
6401d985:	push   eax
6401d986:	lea    eax,[ebp+esi*1+0x104]
6401d98d:	push   eax
6401d98e:	mov    eax,DWORD PTR [ebp-0x70]
6401d991:	mov    eax,DWORD PTR [eax]
6401d993:	push   DWORD PTR [edi+eax*1]
6401d996:	call   DWORD PTR ds:0x64026088
6401d99c:	test   eax,eax
6401d99e:	je     0x6401d9a9
6401d9a0:	add    esi,DWORD PTR [ebp-0x6c]
6401d9a3:	cmp    ebx,esi
6401d9a5:	jg     0x6401d97b
6401d9a7:	jmp    0x6401d9b2
6401d9a9:	call   DWORD PTR ds:0x64026044
6401d9af:	mov    DWORD PTR [ebp-0x58],eax
6401d9b2:	cmp    ebx,esi
6401d9b4:	jg     0x6401d9fd
6401d9b6:	mov    eax,DWORD PTR [ebp-0x54]
6401d9b9:	sub    eax,DWORD PTR [ebp-0x64]
6401d9bc:	cmp    eax,DWORD PTR [ebp+0x524]
6401d9c2:	mov    DWORD PTR [ebp-0x60],eax
6401d9c5:	jb     0x6401d901
6401d9cb:	jmp    0x6401d9fd
6401d9cd:	push   0x0
6401d9cf:	lea    ecx,[ebp-0x6c]
6401d9d2:	push   ecx
6401d9d3:	push   DWORD PTR [ebp+0x524]
6401d9d9:	push   DWORD PTR [ebp-0x64]
6401d9dc:	push   DWORD PTR [eax]
6401d9de:	call   DWORD PTR ds:0x64026088
6401d9e4:	test   eax,eax
6401d9e6:	je     0x6401d9f4
6401d9e8:	mov    eax,DWORD PTR [ebp-0x6c]
6401d9eb:	and    DWORD PTR [ebp-0x58],0x0
6401d9ef:	mov    DWORD PTR [ebp-0x60],eax
6401d9f2:	jmp    0x6401d9fd
6401d9f4:	call   DWORD PTR ds:0x64026044
6401d9fa:	mov    DWORD PTR [ebp-0x58],eax
6401d9fd:	cmp    DWORD PTR [ebp-0x60],0x0
6401da01:	jne    0x6401da60
6401da03:	cmp    DWORD PTR [ebp-0x58],0x0
6401da07:	je     0x6401da30
6401da09:	push   0x5
6401da0b:	pop    esi
6401da0c:	cmp    DWORD PTR [ebp-0x58],esi
6401da0f:	jne    0x6401da25
6401da11:	call   0x64015d30
6401da16:	mov    DWORD PTR [eax],0x9
6401da1c:	call   0x64015d43
6401da21:	mov    DWORD PTR [eax],esi
6401da23:	jmp    0x6401da5b
6401da25:	push   DWORD PTR [ebp-0x58]
6401da28:	call   0x64015d56
6401da2d:	pop    ecx
6401da2e:	jmp    0x6401da5b
6401da30:	mov    esi,DWORD PTR [ebp-0x70]
6401da33:	mov    eax,DWORD PTR [esi]
6401da35:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401da3a:	je     0x6401da48
6401da3c:	mov    eax,DWORD PTR [ebp-0x64]
6401da3f:	cmp    BYTE PTR [eax],0x1a
6401da42:	jne    0x6401da48
6401da44:	xor    eax,eax
6401da46:	jmp    0x6401da66
6401da48:	call   0x64015d30
6401da4d:	mov    DWORD PTR [eax],0x1c
6401da53:	call   0x64015d43
6401da58:	and    DWORD PTR [eax],0x0
6401da5b:	or     eax,0xffffffff
6401da5e:	jmp    0x6401da66
6401da60:	mov    eax,DWORD PTR [ebp-0x60]
6401da63:	sub    eax,DWORD PTR [ebp-0x68]
6401da66:	pop    edi
6401da67:	pop    ebx
6401da68:	mov    ecx,DWORD PTR [ebp+0x510]
6401da6e:	xor    ecx,ebp
6401da70:	pop    esi
6401da71:	call   0x64013f6c
6401da76:	add    ebp,0x514
6401da7c:	leave  
6401da7d:	ret    
6401da7e:	push   0x10
6401da80:	push   0x6402c688
6401da85:	call   0x64015530
6401da8a:	mov    eax,DWORD PTR [ebp+0x8]
6401da8d:	cmp    eax,0xfffffffe
6401da90:	jne    0x6401daad
6401da92:	call   0x64015d43
6401da97:	and    DWORD PTR [eax],0x0
6401da9a:	call   0x64015d30
6401da9f:	mov    DWORD PTR [eax],0x9
6401daa5:	or     eax,0xffffffff
6401daa8:	jmp    0x6401db4a
6401daad:	xor    edi,edi
6401daaf:	cmp    eax,edi
6401dab1:	jl     0x6401dabb
6401dab3:	cmp    eax,DWORD PTR ds:0x64034520
6401dab9:	jb     0x6401dadc
6401dabb:	call   0x64015d43
6401dac0:	mov    DWORD PTR [eax],edi
6401dac2:	call   0x64015d30
6401dac7:	mov    DWORD PTR [eax],0x9
6401dacd:	push   edi
6401dace:	push   edi
6401dacf:	push   edi
6401dad0:	push   edi
6401dad1:	push   edi
6401dad2:	call   0x64013aa4
6401dad7:	add    esp,0x14
6401dada:	jmp    0x6401daa5
6401dadc:	mov    ecx,eax
6401dade:	sar    ecx,0x5
6401dae1:	lea    ebx,[ecx*4+0x64034540]
6401dae8:	mov    esi,eax
6401daea:	and    esi,0x1f
6401daed:	shl    esi,0x6
6401daf0:	mov    ecx,DWORD PTR [ebx]
6401daf2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401daf7:	and    ecx,0x1
6401dafa:	je     0x6401dabb
6401dafc:	push   eax
6401dafd:	call   0x6401f2c0
6401db02:	pop    ecx
6401db03:	mov    DWORD PTR [ebp-0x4],edi
6401db06:	mov    eax,DWORD PTR [ebx]
6401db08:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401db0d:	je     0x6401db25
6401db0f:	push   DWORD PTR [ebp+0x10]
6401db12:	push   DWORD PTR [ebp+0xc]
6401db15:	push   DWORD PTR [ebp+0x8]
6401db18:	call   0x6401d45c
6401db1d:	add    esp,0xc
6401db20:	mov    DWORD PTR [ebp-0x1c],eax
6401db23:	jmp    0x6401db3b
6401db25:	call   0x64015d30
6401db2a:	mov    DWORD PTR [eax],0x9
6401db30:	call   0x64015d43
6401db35:	mov    DWORD PTR [eax],edi
6401db37:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401db3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401db42:	call   0x6401db50
6401db47:	mov    eax,DWORD PTR [ebp-0x1c]
6401db4a:	call   0x64015575
6401db4f:	ret    
6401db50:	push   DWORD PTR [ebp+0x8]
6401db53:	call   0x6401f360
6401db58:	pop    ecx
6401db59:	ret    
6401db5a:	inc    DWORD PTR ds:0x64030f54
6401db60:	push   0x1000
6401db65:	call   0x64017240
6401db6a:	test   eax,eax
6401db6c:	pop    ecx
6401db6d:	mov    ecx,DWORD PTR [esp+0x4]
6401db71:	mov    DWORD PTR [ecx+0x8],eax
6401db74:	je     0x6401db83
6401db76:	or     DWORD PTR [ecx+0xc],0x8
6401db7a:	mov    DWORD PTR [ecx+0x18],0x1000
6401db81:	jmp    0x6401db94
6401db83:	or     DWORD PTR [ecx+0xc],0x4
6401db87:	lea    eax,[ecx+0x14]
6401db8a:	mov    DWORD PTR [ecx+0x8],eax
6401db8d:	mov    DWORD PTR [ecx+0x18],0x2
6401db94:	mov    eax,DWORD PTR [ecx+0x8]
6401db97:	and    DWORD PTR [ecx+0x4],0x0
6401db9b:	mov    DWORD PTR [ecx],eax
6401db9d:	ret    
6401db9e:	mov    eax,DWORD PTR [esp+0x4]
6401dba2:	cmp    eax,0xfffffffe
6401dba5:	jne    0x6401dbb5
6401dba7:	call   0x64015d30
6401dbac:	mov    DWORD PTR [eax],0x9
6401dbb2:	xor    eax,eax
6401dbb4:	ret    
6401dbb5:	push   esi
6401dbb6:	xor    esi,esi
6401dbb8:	cmp    eax,esi
6401dbba:	jl     0x6401dbc4
6401dbbc:	cmp    eax,DWORD PTR ds:0x64034520
6401dbc2:	jb     0x6401dbe0
6401dbc4:	call   0x64015d30
6401dbc9:	push   esi
6401dbca:	push   esi
6401dbcb:	push   esi
6401dbcc:	push   esi
6401dbcd:	push   esi
6401dbce:	mov    DWORD PTR [eax],0x9
6401dbd4:	call   0x64013aa4
6401dbd9:	add    esp,0x14
6401dbdc:	xor    eax,eax
6401dbde:	pop    esi
6401dbdf:	ret    
6401dbe0:	mov    ecx,eax
6401dbe2:	and    eax,0x1f
6401dbe5:	sar    ecx,0x5
6401dbe8:	mov    ecx,DWORD PTR [ecx*4+0x64034540]
6401dbef:	shl    eax,0x6
6401dbf2:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401dbf7:	and    eax,0x40
6401dbfa:	pop    esi
6401dbfb:	ret    
6401dbfc:	mov    eax,0x6402fc80
6401dc01:	ret    
6401dc02:	mov    eax,ds:0x64034500
6401dc07:	test   eax,eax
6401dc09:	push   esi
6401dc0a:	push   0x14
6401dc0c:	pop    esi
6401dc0d:	jne    0x6401dc16
6401dc0f:	mov    eax,0x200
6401dc14:	jmp    0x6401dc1c
6401dc16:	cmp    eax,esi
6401dc18:	jge    0x6401dc21
6401dc1a:	mov    eax,esi
6401dc1c:	mov    ds:0x64034500,eax
6401dc21:	push   0x4
6401dc23:	push   eax
6401dc24:	call   0x64017280
6401dc29:	test   eax,eax
6401dc2b:	pop    ecx
6401dc2c:	pop    ecx
6401dc2d:	mov    ds:0x640334e4,eax
6401dc32:	jne    0x6401dc52
6401dc34:	push   0x4
6401dc36:	push   esi
6401dc37:	mov    DWORD PTR ds:0x64034500,esi
6401dc3d:	call   0x64017280
6401dc42:	test   eax,eax
6401dc44:	pop    ecx
6401dc45:	pop    ecx
6401dc46:	mov    ds:0x640334e4,eax
6401dc4b:	jne    0x6401dc52
6401dc4d:	push   0x1a
6401dc4f:	pop    eax
6401dc50:	pop    esi
6401dc51:	ret    
6401dc52:	xor    edx,edx
6401dc54:	mov    ecx,0x6402fc80
6401dc59:	jmp    0x6401dc60
6401dc5b:	mov    eax,ds:0x640334e4
6401dc60:	mov    DWORD PTR [edx+eax*1],ecx
6401dc63:	add    ecx,0x20
6401dc66:	add    edx,0x4
6401dc69:	cmp    ecx,0x6402ff00
6401dc6f:	jl     0x6401dc5b
6401dc71:	push   0xfffffffe
6401dc73:	pop    esi
6401dc74:	xor    edx,edx
6401dc76:	mov    ecx,0x6402fc90
6401dc7b:	push   edi
6401dc7c:	mov    eax,edx
6401dc7e:	sar    eax,0x5
6401dc81:	mov    eax,DWORD PTR [eax*4+0x64034540]
6401dc88:	mov    edi,edx
6401dc8a:	and    edi,0x1f
6401dc8d:	shl    edi,0x6
6401dc90:	mov    eax,DWORD PTR [edi+eax*1]
6401dc93:	cmp    eax,0xffffffff
6401dc96:	je     0x6401dca0
6401dc98:	cmp    eax,esi
6401dc9a:	je     0x6401dca0
6401dc9c:	test   eax,eax
6401dc9e:	jne    0x6401dca2
6401dca0:	mov    DWORD PTR [ecx],esi
6401dca2:	add    ecx,0x20
6401dca5:	inc    edx
6401dca6:	cmp    ecx,0x6402fcf0
6401dcac:	jl     0x6401dc7c
6401dcae:	pop    edi
6401dcaf:	xor    eax,eax
6401dcb1:	pop    esi
6401dcb2:	ret    
6401dcb3:	call   0x6401f661
6401dcb8:	cmp    BYTE PTR ds:0x6403090c,0x0
6401dcbf:	je     0x6401dcc6
6401dcc1:	call   0x6401f444
6401dcc6:	push   DWORD PTR ds:0x640334e4
6401dccc:	call   0x64014e06
6401dcd1:	pop    ecx
6401dcd2:	ret    
6401dcd3:	push   esi
6401dcd4:	mov    esi,DWORD PTR [esp+0x8]
6401dcd8:	mov    eax,0x6402fc80
6401dcdd:	cmp    esi,eax
6401dcdf:	jb     0x6401dd03
6401dce1:	cmp    esi,0x6402fee0
6401dce7:	ja     0x6401dd03
6401dce9:	mov    ecx,esi
6401dceb:	sub    ecx,eax
6401dced:	sar    ecx,0x5
6401dcf0:	add    ecx,0x10
6401dcf3:	push   ecx
6401dcf4:	call   0x6401b53a
6401dcf9:	or     DWORD PTR [esi+0xc],0x8000
6401dd00:	pop    ecx
6401dd01:	pop    esi
6401dd02:	ret    
6401dd03:	add    esi,0x20
6401dd06:	push   esi
6401dd07:	call   DWORD PTR ds:0x6402609c
6401dd0d:	pop    esi
6401dd0e:	ret    
6401dd0f:	mov    eax,DWORD PTR [esp+0x4]
6401dd13:	cmp    eax,0x14
6401dd16:	jge    0x6401dd2e
6401dd18:	add    eax,0x10
6401dd1b:	push   eax
6401dd1c:	call   0x6401b53a
6401dd21:	mov    eax,DWORD PTR [esp+0xc]
6401dd25:	or     DWORD PTR [eax+0xc],0x8000
6401dd2c:	pop    ecx
6401dd2d:	ret    
6401dd2e:	mov    eax,DWORD PTR [esp+0x8]
6401dd32:	add    eax,0x20
6401dd35:	push   eax
6401dd36:	call   DWORD PTR ds:0x6402609c
6401dd3c:	ret    
6401dd3d:	mov    eax,DWORD PTR [esp+0x4]
6401dd41:	mov    ecx,0x6402fc80
6401dd46:	cmp    eax,ecx
6401dd48:	jb     0x6401dd68
6401dd4a:	cmp    eax,0x6402fee0
6401dd4f:	ja     0x6401dd68
6401dd51:	and    DWORD PTR [eax+0xc],0xffff7fff
6401dd58:	sub    eax,ecx
6401dd5a:	sar    eax,0x5
6401dd5d:	add    eax,0x10
6401dd60:	push   eax
6401dd61:	call   0x6401b462
6401dd66:	pop    ecx
6401dd67:	ret    
6401dd68:	add    eax,0x20
6401dd6b:	push   eax
6401dd6c:	call   DWORD PTR ds:0x640260a0
6401dd72:	ret    
6401dd73:	mov    ecx,DWORD PTR [esp+0x4]
6401dd77:	cmp    ecx,0x14
6401dd7a:	mov    eax,DWORD PTR [esp+0x8]
6401dd7e:	jge    0x6401dd92
6401dd80:	and    DWORD PTR [eax+0xc],0xffff7fff
6401dd87:	add    ecx,0x10
6401dd8a:	push   ecx
6401dd8b:	call   0x6401b462
6401dd90:	pop    ecx
6401dd91:	ret    
6401dd92:	add    eax,0x20
6401dd95:	push   eax
6401dd96:	call   DWORD PTR ds:0x640260a0
6401dd9c:	ret    
6401dd9d:	mov    eax,DWORD PTR [esp+0x4]
6401dda1:	push   esi
6401dda2:	xor    esi,esi
6401dda4:	cmp    eax,esi
6401dda6:	jne    0x6401ddc5
6401dda8:	call   0x64015d30
6401ddad:	push   esi
6401ddae:	push   esi
6401ddaf:	push   esi
6401ddb0:	push   esi
6401ddb1:	push   esi
6401ddb2:	mov    DWORD PTR [eax],0x16
6401ddb8:	call   0x64013aa4
6401ddbd:	add    esp,0x14
6401ddc0:	or     eax,0xffffffff
6401ddc3:	pop    esi
6401ddc4:	ret    
6401ddc5:	mov    eax,DWORD PTR [eax+0x10]
6401ddc8:	pop    esi
6401ddc9:	ret    
6401ddca:	push   ebp
6401ddcb:	mov    ebp,esp
6401ddcd:	sub    esp,0x10
6401ddd0:	mov    eax,ds:0x6402f09c
6401ddd5:	xor    eax,ebp
6401ddd7:	mov    DWORD PTR [ebp-0x4],eax
6401ddda:	push   ebx
6401dddb:	push   esi
6401dddc:	mov    esi,DWORD PTR [ebp+0xc]
6401dddf:	test   BYTE PTR [esi+0xc],0x40
6401dde3:	push   edi
6401dde4:	jne    0x6401df79
6401ddea:	push   esi
6401ddeb:	call   0x6401dd9d
6401ddf0:	cmp    eax,0xffffffff
6401ddf3:	pop    ecx
6401ddf4:	mov    edi,0x6402f880
6401ddf9:	je     0x6401de29
6401ddfb:	push   esi
6401ddfc:	call   0x6401dd9d
6401de01:	cmp    eax,0xfffffffe
6401de04:	pop    ecx
6401de05:	je     0x6401de29
6401de07:	push   esi
6401de08:	call   0x6401dd9d
6401de0d:	sar    eax,0x5
6401de10:	push   esi
6401de11:	lea    ebx,[eax*4+0x64034540]
6401de18:	call   0x6401dd9d
6401de1d:	and    eax,0x1f
6401de20:	pop    ecx
6401de21:	shl    eax,0x6
6401de24:	add    eax,DWORD PTR [ebx]
6401de26:	pop    ecx
6401de27:	jmp    0x6401de2b
6401de29:	mov    eax,edi
6401de2b:	mov    al,BYTE PTR [eax+0x24]
6401de2e:	and    al,0x7f
6401de30:	cmp    al,0x2
6401de32:	je     0x6401df79
6401de38:	push   esi
6401de39:	call   0x6401dd9d
6401de3e:	cmp    eax,0xffffffff
6401de41:	pop    ecx
6401de42:	je     0x6401de72
6401de44:	push   esi
6401de45:	call   0x6401dd9d
6401de4a:	cmp    eax,0xfffffffe
6401de4d:	pop    ecx
6401de4e:	je     0x6401de72
6401de50:	push   esi
6401de51:	call   0x6401dd9d
6401de56:	sar    eax,0x5
6401de59:	push   esi
6401de5a:	lea    ebx,[eax*4+0x64034540]
6401de61:	call   0x6401dd9d
6401de66:	and    eax,0x1f
6401de69:	pop    ecx
6401de6a:	shl    eax,0x6
6401de6d:	add    eax,DWORD PTR [ebx]
6401de6f:	pop    ecx
6401de70:	jmp    0x6401de74
6401de72:	mov    eax,edi
6401de74:	mov    al,BYTE PTR [eax+0x24]
6401de77:	and    al,0x7f
6401de79:	cmp    al,0x1
6401de7b:	jne    0x6401ded9
6401de7d:	dec    DWORD PTR [esi+0x4]
6401de80:	mov    ebx,DWORD PTR [ebp+0x8]
6401de83:	js     0x6401de93
6401de85:	mov    eax,DWORD PTR [esi]
6401de87:	mov    BYTE PTR [eax],bl
6401de89:	mov    ecx,DWORD PTR [esi]
6401de8b:	movzx  eax,BYTE PTR [ecx]
6401de8e:	inc    ecx
6401de8f:	mov    DWORD PTR [esi],ecx
6401de91:	jmp    0x6401de9f
6401de93:	movsx  eax,bl
6401de96:	push   esi
6401de97:	push   eax
6401de98:	call   0x64018075
6401de9d:	pop    ecx
6401de9e:	pop    ecx
6401de9f:	cmp    eax,0xffffffff
6401dea2:	jne    0x6401dead
6401dea4:	or     ax,0xffff
6401dea8:	jmp    0x6401df99
6401dead:	dec    DWORD PTR [esi+0x4]
6401deb0:	js     0x6401dec0
6401deb2:	mov    eax,DWORD PTR [esi]
6401deb4:	mov    BYTE PTR [eax],bh
6401deb6:	mov    ecx,DWORD PTR [esi]
6401deb8:	movzx  eax,BYTE PTR [ecx]
6401debb:	inc    ecx
6401debc:	mov    DWORD PTR [esi],ecx
6401debe:	jmp    0x6401decc
6401dec0:	movsx  eax,bh
6401dec3:	push   esi
6401dec4:	push   eax
6401dec5:	call   0x64018075
6401deca:	pop    ecx
6401decb:	pop    ecx
6401decc:	cmp    eax,0xffffffff
6401decf:	je     0x6401dea4
6401ded1:	mov    ax,bx
6401ded4:	jmp    0x6401df99
6401ded9:	push   esi
6401deda:	call   0x6401dd9d
6401dedf:	cmp    eax,0xffffffff
6401dee2:	pop    ecx
6401dee3:	je     0x6401df13
6401dee5:	push   esi
6401dee6:	call   0x6401dd9d
6401deeb:	cmp    eax,0xfffffffe
6401deee:	pop    ecx
6401deef:	je     0x6401df13
6401def1:	push   esi
6401def2:	call   0x6401dd9d
6401def7:	sar    eax,0x5
6401defa:	push   esi
6401defb:	lea    ebx,[eax*4+0x64034540]
6401df02:	call   0x6401dd9d
6401df07:	and    eax,0x1f
6401df0a:	pop    ecx
6401df0b:	shl    eax,0x6
6401df0e:	add    eax,DWORD PTR [ebx]
6401df10:	pop    ecx
6401df11:	jmp    0x6401df15
6401df13:	mov    eax,edi
6401df15:	test   BYTE PTR [eax+0x4],0x80
6401df19:	je     0x6401df79
6401df1b:	push   DWORD PTR [ebp+0x8]
6401df1e:	lea    eax,[ebp-0xc]
6401df21:	push   0x5
6401df23:	push   eax
6401df24:	lea    eax,[ebp-0x10]
6401df27:	push   eax
6401df28:	call   0x6401ef5b
6401df2d:	add    esp,0x10
6401df30:	test   eax,eax
6401df32:	jne    0x6401dea4
6401df38:	xor    ebx,ebx
6401df3a:	cmp    DWORD PTR [ebp-0x10],ebx
6401df3d:	jle    0x6401df73
6401df3f:	dec    DWORD PTR [esi+0x4]
6401df42:	js     0x6401df56
6401df44:	mov    eax,DWORD PTR [esi]
6401df46:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401df4a:	mov    BYTE PTR [eax],cl
6401df4c:	mov    ecx,DWORD PTR [esi]
6401df4e:	movzx  eax,BYTE PTR [ecx]
6401df51:	inc    ecx
6401df52:	mov    DWORD PTR [esi],ecx
6401df54:	jmp    0x6401df64
6401df56:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401df5b:	push   esi
6401df5c:	push   eax
6401df5d:	call   0x64018075
6401df62:	pop    ecx
6401df63:	pop    ecx
6401df64:	cmp    eax,0xffffffff
6401df67:	je     0x6401dea4
6401df6d:	inc    ebx
6401df6e:	cmp    ebx,DWORD PTR [ebp-0x10]
6401df71:	jl     0x6401df3f
6401df73:	mov    ax,WORD PTR [ebp+0x8]
6401df77:	jmp    0x6401df99
6401df79:	add    DWORD PTR [esi+0x4],0xfffffffe
6401df7d:	js     0x6401df8c
6401df7f:	mov    ecx,DWORD PTR [esi]
6401df81:	mov    eax,DWORD PTR [ebp+0x8]
6401df84:	mov    WORD PTR [ecx],ax
6401df87:	add    DWORD PTR [esi],0x2
6401df8a:	jmp    0x6401df99
6401df8c:	movzx  eax,WORD PTR [ebp+0x8]
6401df90:	push   esi
6401df91:	push   eax
6401df92:	call   0x6401f66a
6401df97:	pop    ecx
6401df98:	pop    ecx
6401df99:	mov    ecx,DWORD PTR [ebp-0x4]
6401df9c:	pop    edi
6401df9d:	pop    esi
6401df9e:	xor    ecx,ebp
6401dfa0:	pop    ebx
6401dfa1:	call   0x64013f6c
6401dfa6:	leave  
6401dfa7:	ret    
6401dfa8:	mov    eax,ds:0x6402f09c
6401dfad:	or     eax,0x1
6401dfb0:	xor    ecx,ecx
6401dfb2:	cmp    DWORD PTR ds:0x64030f58,eax
6401dfb8:	sete   cl
6401dfbb:	mov    eax,ecx
6401dfbd:	ret    
6401dfbe:	push   ebp
6401dfbf:	mov    ebp,esp
6401dfc1:	sub    esp,0x10
6401dfc4:	push   ebx
6401dfc5:	push   esi
6401dfc6:	mov    esi,DWORD PTR [ebp+0xc]
6401dfc9:	xor    ebx,ebx
6401dfcb:	cmp    esi,ebx
6401dfcd:	je     0x6401dfe2
6401dfcf:	cmp    DWORD PTR [ebp+0x10],ebx
6401dfd2:	je     0x6401dfe2
6401dfd4:	cmp    BYTE PTR [esi],bl
6401dfd6:	jne    0x6401dfe8
6401dfd8:	mov    eax,DWORD PTR [ebp+0x8]
6401dfdb:	cmp    eax,ebx
6401dfdd:	je     0x6401dfe2
6401dfdf:	mov    WORD PTR [eax],bx
6401dfe2:	xor    eax,eax
6401dfe4:	pop    esi
6401dfe5:	pop    ebx
6401dfe6:	leave  
6401dfe7:	ret    
6401dfe8:	push   DWORD PTR [ebp+0x14]
6401dfeb:	lea    ecx,[ebp-0x10]
6401dfee:	call   0x6401410f
6401dff3:	mov    eax,DWORD PTR [ebp-0x10]
6401dff6:	cmp    DWORD PTR [eax+0x14],ebx
6401dff9:	jne    0x6401e01a
6401dffb:	mov    eax,DWORD PTR [ebp+0x8]
6401dffe:	cmp    eax,ebx
6401e000:	je     0x6401e009
6401e002:	movzx  cx,BYTE PTR [esi]
6401e006:	mov    WORD PTR [eax],cx
6401e009:	cmp    BYTE PTR [ebp-0x4],bl
6401e00c:	je     0x6401e015
6401e00e:	mov    eax,DWORD PTR [ebp-0x8]
6401e011:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e015:	xor    eax,eax
6401e017:	inc    eax
6401e018:	jmp    0x6401dfe4
6401e01a:	lea    eax,[ebp-0x10]
6401e01d:	push   eax
6401e01e:	movzx  eax,BYTE PTR [esi]
6401e021:	push   eax
6401e022:	call   0x6401b380
6401e027:	test   eax,eax
6401e029:	pop    ecx
6401e02a:	pop    ecx
6401e02b:	je     0x6401e0aa
6401e02d:	mov    eax,DWORD PTR [ebp-0x10]
6401e030:	mov    ecx,DWORD PTR [eax+0xac]
6401e036:	cmp    ecx,0x1
6401e039:	jle    0x6401e060
6401e03b:	cmp    DWORD PTR [ebp+0x10],ecx
6401e03e:	jl     0x6401e060
6401e040:	xor    edx,edx
6401e042:	cmp    DWORD PTR [ebp+0x8],ebx
6401e045:	setne  dl
6401e048:	push   edx
6401e049:	push   DWORD PTR [ebp+0x8]
6401e04c:	push   ecx
6401e04d:	push   esi
6401e04e:	push   0x9
6401e050:	push   DWORD PTR [eax+0x4]
6401e053:	call   DWORD PTR ds:0x64026024
6401e059:	test   eax,eax
6401e05b:	mov    eax,DWORD PTR [ebp-0x10]
6401e05e:	jne    0x6401e070
6401e060:	mov    ecx,DWORD PTR [ebp+0x10]
6401e063:	cmp    ecx,DWORD PTR [eax+0xac]
6401e069:	jb     0x6401e08b
6401e06b:	cmp    BYTE PTR [esi+0x1],bl
6401e06e:	je     0x6401e08b
6401e070:	cmp    BYTE PTR [ebp-0x4],bl
6401e073:	mov    eax,DWORD PTR [eax+0xac]
6401e079:	je     0x6401dfe4
6401e07f:	mov    ecx,DWORD PTR [ebp-0x8]
6401e082:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401e086:	jmp    0x6401dfe4
6401e08b:	call   0x64015d30
6401e090:	mov    DWORD PTR [eax],0x2a
6401e096:	cmp    BYTE PTR [ebp-0x4],bl
6401e099:	je     0x6401e0a2
6401e09b:	mov    eax,DWORD PTR [ebp-0x8]
6401e09e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e0a2:	or     eax,0xffffffff
6401e0a5:	jmp    0x6401dfe4
6401e0aa:	xor    eax,eax
6401e0ac:	cmp    DWORD PTR [ebp+0x8],ebx
6401e0af:	setne  al
6401e0b2:	push   eax
6401e0b3:	push   DWORD PTR [ebp+0x8]
6401e0b6:	mov    eax,DWORD PTR [ebp-0x10]
6401e0b9:	push   0x1
6401e0bb:	push   esi
6401e0bc:	push   0x9
6401e0be:	push   DWORD PTR [eax+0x4]
6401e0c1:	call   DWORD PTR ds:0x64026024
6401e0c7:	test   eax,eax
6401e0c9:	jne    0x6401e009
6401e0cf:	jmp    0x6401e08b
6401e0d1:	push   0x0
6401e0d3:	push   DWORD PTR [esp+0x10]
6401e0d7:	push   DWORD PTR [esp+0x10]
6401e0db:	push   DWORD PTR [esp+0x10]
6401e0df:	call   0x6401dfbe
6401e0e4:	add    esp,0x10
6401e0e7:	ret    
6401e0e8:	test   BYTE PTR [edi+0xc],0x40
6401e0ec:	push   ebx
6401e0ed:	push   esi
6401e0ee:	mov    esi,eax
6401e0f0:	mov    ebx,ecx
6401e0f2:	je     0x6401e128
6401e0f4:	cmp    DWORD PTR [edi+0x8],0x0
6401e0f8:	jne    0x6401e128
6401e0fa:	mov    eax,DWORD PTR [esp+0xc]
6401e0fe:	add    DWORD PTR [esi],eax
6401e100:	jmp    0x6401e12f
6401e102:	mov    al,BYTE PTR [ebx]
6401e104:	dec    DWORD PTR [esp+0xc]
6401e108:	mov    ecx,edi
6401e10a:	call   0x6401a30a
6401e10f:	inc    ebx
6401e110:	cmp    DWORD PTR [esi],0xffffffff
6401e113:	jne    0x6401e128
6401e115:	call   0x64015d30
6401e11a:	cmp    DWORD PTR [eax],0x2a
6401e11d:	jne    0x6401e12f
6401e11f:	mov    ecx,edi
6401e121:	mov    al,0x3f
6401e123:	call   0x6401a30a
6401e128:	cmp    DWORD PTR [esp+0xc],0x0
6401e12d:	jg     0x6401e102
6401e12f:	pop    esi
6401e130:	pop    ebx
6401e131:	ret    
6401e132:	push   ebp
6401e133:	lea    ebp,[esp-0x1f8]
6401e13a:	sub    esp,0x278
6401e140:	mov    eax,ds:0x6402f09c
6401e145:	xor    eax,ebp
6401e147:	mov    DWORD PTR [ebp+0x1f4],eax
6401e14d:	mov    eax,DWORD PTR [ebp+0x200]
6401e153:	push   ebx
6401e154:	mov    ebx,DWORD PTR [ebp+0x204]
6401e15a:	push   esi
6401e15b:	xor    esi,esi
6401e15d:	push   edi
6401e15e:	mov    edi,DWORD PTR [ebp+0x20c]
6401e164:	push   DWORD PTR [ebp+0x208]
6401e16a:	lea    ecx,[ebp-0x5c]
6401e16d:	mov    DWORD PTR [ebp-0x30],eax
6401e170:	mov    DWORD PTR [ebp-0x2c],edi
6401e173:	mov    DWORD PTR [ebp-0x64],esi
6401e176:	mov    DWORD PTR [ebp-0x18],esi
6401e179:	mov    DWORD PTR [ebp-0x40],esi
6401e17c:	mov    DWORD PTR [ebp-0x20],esi
6401e17f:	mov    DWORD PTR [ebp-0x3c],esi
6401e182:	mov    DWORD PTR [ebp-0x68],esi
6401e185:	mov    DWORD PTR [ebp-0x44],esi
6401e188:	call   0x6401410f
6401e18d:	cmp    DWORD PTR [ebp-0x30],esi
6401e190:	jne    0x6401e1bf
6401e192:	call   0x64015d30
6401e197:	push   esi
6401e198:	push   esi
6401e199:	push   esi
6401e19a:	push   esi
6401e19b:	mov    DWORD PTR [eax],0x16
6401e1a1:	push   esi
6401e1a2:	call   0x64013aa4
6401e1a7:	add    esp,0x14
6401e1aa:	cmp    BYTE PTR [ebp-0x50],0x0
6401e1ae:	je     0x6401e1b7
6401e1b0:	mov    eax,DWORD PTR [ebp-0x54]
6401e1b3:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e1b7:	or     eax,0xffffffff
6401e1ba:	jmp    0x6401eaa9
6401e1bf:	mov    eax,DWORD PTR [ebp-0x30]
6401e1c2:	test   BYTE PTR [eax+0xc],0x40
6401e1c6:	jne    0x6401e270
6401e1cc:	push   eax
6401e1cd:	call   0x6401dd9d
6401e1d2:	cmp    eax,0xffffffff
6401e1d5:	pop    ecx
6401e1d6:	je     0x6401e20e
6401e1d8:	push   DWORD PTR [ebp-0x30]
6401e1db:	call   0x6401dd9d
6401e1e0:	cmp    eax,0xfffffffe
6401e1e3:	pop    ecx
6401e1e4:	je     0x6401e20e
6401e1e6:	push   DWORD PTR [ebp-0x30]
6401e1e9:	call   0x6401dd9d
6401e1ee:	push   DWORD PTR [ebp-0x30]
6401e1f1:	sar    eax,0x5
6401e1f4:	lea    esi,[eax*4+0x64034540]
6401e1fb:	call   0x6401dd9d
6401e200:	and    eax,0x1f
6401e203:	shl    eax,0x6
6401e206:	add    eax,DWORD PTR [esi]
6401e208:	pop    ecx
6401e209:	pop    ecx
6401e20a:	xor    esi,esi
6401e20c:	jmp    0x6401e213
6401e20e:	mov    eax,0x6402f880
6401e213:	test   BYTE PTR [eax+0x24],0x7f
6401e217:	jne    0x6401e192
6401e21d:	push   DWORD PTR [ebp-0x30]
6401e220:	call   0x6401dd9d
6401e225:	cmp    eax,0xffffffff
6401e228:	pop    ecx
6401e229:	je     0x6401e261
6401e22b:	push   DWORD PTR [ebp-0x30]
6401e22e:	call   0x6401dd9d
6401e233:	cmp    eax,0xfffffffe
6401e236:	pop    ecx
6401e237:	je     0x6401e261
6401e239:	push   DWORD PTR [ebp-0x30]
6401e23c:	call   0x6401dd9d
6401e241:	push   DWORD PTR [ebp-0x30]
6401e244:	sar    eax,0x5
6401e247:	lea    esi,[eax*4+0x64034540]
6401e24e:	call   0x6401dd9d
6401e253:	and    eax,0x1f
6401e256:	shl    eax,0x6
6401e259:	add    eax,DWORD PTR [esi]
6401e25b:	pop    ecx
6401e25c:	pop    ecx
6401e25d:	xor    esi,esi
6401e25f:	jmp    0x6401e266
6401e261:	mov    eax,0x6402f880
6401e266:	test   BYTE PTR [eax+0x24],0x80
6401e26a:	jne    0x6401e192
6401e270:	cmp    ebx,esi
6401e272:	je     0x6401e192
6401e278:	mov    dl,BYTE PTR [ebx]
6401e27a:	test   dl,dl
6401e27c:	mov    DWORD PTR [ebp-0x34],esi
6401e27f:	mov    DWORD PTR [ebp-0x28],esi
6401e282:	mov    DWORD PTR [ebp-0x48],esi
6401e285:	mov    DWORD PTR [ebp-0x60],esi
6401e288:	mov    BYTE PTR [ebp-0x19],dl
6401e28b:	je     0x6401ea99
6401e291:	inc    ebx
6401e292:	xor    eax,eax
6401e294:	cmp    DWORD PTR [ebp-0x34],eax
6401e297:	mov    DWORD PTR [ebp-0x4c],ebx
6401e29a:	jl     0x6401ea88
6401e2a0:	mov    cl,dl
6401e2a2:	sub    cl,0x20
6401e2a5:	cmp    cl,0x58
6401e2a8:	ja     0x6401e2b7
6401e2aa:	movsx  eax,dl
6401e2ad:	movzx  eax,BYTE PTR [eax+0x64028490]
6401e2b4:	and    eax,0xf
6401e2b7:	mov    ecx,DWORD PTR [ebp-0x48]
6401e2ba:	imul   eax,eax,0x9
6401e2bd:	movzx  eax,BYTE PTR [eax+ecx*1+0x640284b0]
6401e2c5:	push   0x8
6401e2c7:	shr    eax,0x4
6401e2ca:	pop    esi
6401e2cb:	cmp    eax,esi
6401e2cd:	mov    DWORD PTR [ebp-0x48],eax
6401e2d0:	je     0x6401ea71
6401e2d6:	push   0x7
6401e2d8:	pop    ecx
6401e2d9:	cmp    eax,ecx
6401e2db:	ja     0x6401ea5b
6401e2e1:	jmp    DWORD PTR [eax*4+0x6401eac2]
6401e2e8:	xor    eax,eax
6401e2ea:	or     DWORD PTR [ebp-0x20],0xffffffff
6401e2ee:	mov    DWORD PTR [ebp-0x74],eax
6401e2f1:	mov    DWORD PTR [ebp-0x68],eax
6401e2f4:	mov    DWORD PTR [ebp-0x40],eax
6401e2f7:	mov    DWORD PTR [ebp-0x3c],eax
6401e2fa:	mov    DWORD PTR [ebp-0x18],eax
6401e2fd:	mov    DWORD PTR [ebp-0x44],eax
6401e300:	jmp    0x6401ea5b
6401e305:	movsx  eax,dl
6401e308:	sub    eax,0x20
6401e30b:	je     0x6401e349
6401e30d:	sub    eax,0x3
6401e310:	je     0x6401e33d
6401e312:	sub    eax,esi
6401e314:	je     0x6401e334
6401e316:	dec    eax
6401e317:	dec    eax
6401e318:	je     0x6401e32b
6401e31a:	sub    eax,0x3
6401e31d:	jne    0x6401ea5b
6401e323:	or     DWORD PTR [ebp-0x18],esi
6401e326:	jmp    0x6401ea5b
6401e32b:	or     DWORD PTR [ebp-0x18],0x4
6401e32f:	jmp    0x6401ea5b
6401e334:	or     DWORD PTR [ebp-0x18],0x1
6401e338:	jmp    0x6401ea5b
6401e33d:	or     DWORD PTR [ebp-0x18],0x80
6401e344:	jmp    0x6401ea5b
6401e349:	or     DWORD PTR [ebp-0x18],0x2
6401e34d:	jmp    0x6401ea5b
6401e352:	cmp    dl,0x2a
6401e355:	jne    0x6401e377
6401e357:	add    edi,0x4
6401e35a:	mov    DWORD PTR [ebp-0x2c],edi
6401e35d:	mov    edi,DWORD PTR [edi-0x4]
6401e360:	test   edi,edi
6401e362:	mov    DWORD PTR [ebp-0x40],edi
6401e365:	jge    0x6401ea5b
6401e36b:	or     DWORD PTR [ebp-0x18],0x4
6401e36f:	neg    DWORD PTR [ebp-0x40]
6401e372:	jmp    0x6401ea5b
6401e377:	mov    eax,DWORD PTR [ebp-0x40]
6401e37a:	imul   eax,eax,0xa
6401e37d:	movsx  ecx,dl
6401e380:	lea    eax,[eax+ecx*1-0x30]
6401e384:	mov    DWORD PTR [ebp-0x40],eax
6401e387:	jmp    0x6401ea5b
6401e38c:	and    DWORD PTR [ebp-0x20],0x0
6401e390:	jmp    0x6401ea5b
6401e395:	cmp    dl,0x2a
6401e398:	jne    0x6401e3b7
6401e39a:	add    edi,0x4
6401e39d:	mov    DWORD PTR [ebp-0x2c],edi
6401e3a0:	mov    edi,DWORD PTR [edi-0x4]
6401e3a3:	test   edi,edi
6401e3a5:	mov    DWORD PTR [ebp-0x20],edi
6401e3a8:	jge    0x6401ea5b
6401e3ae:	or     DWORD PTR [ebp-0x20],0xffffffff
6401e3b2:	jmp    0x6401ea5b
6401e3b7:	mov    eax,DWORD PTR [ebp-0x20]
6401e3ba:	imul   eax,eax,0xa
6401e3bd:	movsx  ecx,dl
6401e3c0:	lea    eax,[eax+ecx*1-0x30]
6401e3c4:	mov    DWORD PTR [ebp-0x20],eax
6401e3c7:	jmp    0x6401ea5b
6401e3cc:	cmp    dl,0x49
6401e3cf:	je     0x6401e417
6401e3d1:	cmp    dl,0x68
6401e3d4:	je     0x6401e40e
6401e3d6:	cmp    dl,0x6c
6401e3d9:	je     0x6401e3f0
6401e3db:	cmp    dl,0x77
6401e3de:	jne    0x6401ea5b
6401e3e4:	or     DWORD PTR [ebp-0x18],0x800
6401e3eb:	jmp    0x6401ea5b
6401e3f0:	cmp    BYTE PTR [ebx],0x6c
6401e3f3:	jne    0x6401e405
6401e3f5:	inc    ebx
6401e3f6:	or     DWORD PTR [ebp-0x18],0x1000
6401e3fd:	mov    DWORD PTR [ebp-0x4c],ebx
6401e400:	jmp    0x6401ea5b
6401e405:	or     DWORD PTR [ebp-0x18],0x10
6401e409:	jmp    0x6401ea5b
6401e40e:	or     DWORD PTR [ebp-0x18],0x20
6401e412:	jmp    0x6401ea5b
6401e417:	mov    al,BYTE PTR [ebx]
6401e419:	cmp    al,0x36
6401e41b:	jne    0x6401e434
6401e41d:	cmp    BYTE PTR [ebx+0x1],0x34
6401e421:	jne    0x6401e434
6401e423:	inc    ebx
6401e424:	inc    ebx
6401e425:	or     DWORD PTR [ebp-0x18],0x8000
6401e42c:	mov    DWORD PTR [ebp-0x4c],ebx
6401e42f:	jmp    0x6401ea5b
6401e434:	cmp    al,0x33
6401e436:	jne    0x6401e44f
6401e438:	cmp    BYTE PTR [ebx+0x1],0x32
6401e43c:	jne    0x6401e44f
6401e43e:	inc    ebx
6401e43f:	inc    ebx
6401e440:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401e447:	mov    DWORD PTR [ebp-0x4c],ebx
6401e44a:	jmp    0x6401ea5b
6401e44f:	cmp    al,0x64
6401e451:	je     0x6401ea5b
6401e457:	cmp    al,0x69
6401e459:	je     0x6401ea5b
6401e45f:	cmp    al,0x6f
6401e461:	je     0x6401ea5b
6401e467:	cmp    al,0x75
6401e469:	je     0x6401ea5b
6401e46f:	cmp    al,0x78
6401e471:	je     0x6401ea5b
6401e477:	cmp    al,0x58
6401e479:	je     0x6401ea5b
6401e47f:	and    DWORD PTR [ebp-0x48],0x0
6401e483:	and    DWORD PTR [ebp-0x44],0x0
6401e487:	lea    eax,[ebp-0x5c]
6401e48a:	push   eax
6401e48b:	movzx  eax,dl
6401e48e:	push   eax
6401e48f:	call   0x6401b380
6401e494:	pop    ecx
6401e495:	test   eax,eax
6401e497:	mov    al,BYTE PTR [ebp-0x19]
6401e49a:	pop    ecx
6401e49b:	je     0x6401e4b6
6401e49d:	mov    ecx,DWORD PTR [ebp-0x30]
6401e4a0:	lea    esi,[ebp-0x34]
6401e4a3:	call   0x6401a30a
6401e4a8:	mov    al,BYTE PTR [ebx]
6401e4aa:	inc    ebx
6401e4ab:	test   al,al
6401e4ad:	mov    DWORD PTR [ebp-0x4c],ebx
6401e4b0:	je     0x6401ea71
6401e4b6:	mov    ecx,DWORD PTR [ebp-0x30]
6401e4b9:	lea    esi,[ebp-0x34]
6401e4bc:	call   0x6401a30a
6401e4c1:	jmp    0x6401ea5b
6401e4c6:	movsx  eax,dl
6401e4c9:	cmp    eax,0x64
6401e4cc:	jg     0x6401e646
6401e4d2:	je     0x6401e6c1
6401e4d8:	cmp    eax,0x53
6401e4db:	jg     0x6401e58d
6401e4e1:	je     0x6401e53e
6401e4e3:	sub    eax,0x41
6401e4e6:	je     0x6401e4f8
6401e4e8:	dec    eax
6401e4e9:	dec    eax
6401e4ea:	je     0x6401e52d
6401e4ec:	dec    eax
6401e4ed:	dec    eax
6401e4ee:	je     0x6401e4f8
6401e4f0:	dec    eax
6401e4f1:	dec    eax
6401e4f2:	jne    0x6401e943
6401e4f8:	add    dl,0x20
6401e4fb:	mov    DWORD PTR [ebp-0x74],0x1
6401e502:	mov    BYTE PTR [ebp-0x19],dl
6401e505:	or     DWORD PTR [ebp-0x18],0x40
6401e509:	cmp    DWORD PTR [ebp-0x20],0x0
6401e50d:	lea    ebx,[ebp-0x14]
6401e510:	mov    eax,0x200
6401e515:	mov    DWORD PTR [ebp-0x24],ebx
6401e518:	mov    DWORD PTR [ebp-0x6c],eax
6401e51b:	jge    0x6401e6e5
6401e521:	mov    DWORD PTR [ebp-0x20],0x6
6401e528:	jmp    0x6401e734
6401e52d:	test   WORD PTR [ebp-0x18],0x830
6401e533:	jne    0x6401e5aa
6401e535:	or     DWORD PTR [ebp-0x18],0x800
6401e53c:	jmp    0x6401e5aa
6401e53e:	test   WORD PTR [ebp-0x18],0x830
6401e544:	jne    0x6401e54d
6401e546:	or     DWORD PTR [ebp-0x18],0x800
6401e54d:	mov    ecx,DWORD PTR [ebp-0x20]
6401e550:	cmp    ecx,0xffffffff
6401e553:	jne    0x6401e55a
6401e555:	mov    ecx,0x7fffffff
6401e55a:	add    edi,0x4
6401e55d:	test   WORD PTR [ebp-0x18],0x810
6401e563:	mov    DWORD PTR [ebp-0x2c],edi
6401e566:	mov    edi,DWORD PTR [edi-0x4]
6401e569:	mov    DWORD PTR [ebp-0x24],edi
6401e56c:	je     0x6401e921
6401e572:	test   edi,edi
6401e574:	jne    0x6401e57e
6401e576:	mov    eax,ds:0x6402f954
6401e57b:	mov    DWORD PTR [ebp-0x24],eax
6401e57e:	mov    eax,DWORD PTR [ebp-0x24]
6401e581:	mov    DWORD PTR [ebp-0x44],0x1
6401e588:	jmp    0x6401e916
6401e58d:	sub    eax,0x58
6401e590:	je     0x6401e7ca
6401e596:	dec    eax
6401e597:	dec    eax
6401e598:	je     0x6401e5f7
6401e59a:	sub    eax,ecx
6401e59c:	je     0x6401e505
6401e5a2:	dec    eax
6401e5a3:	dec    eax
6401e5a4:	jne    0x6401e943
6401e5aa:	add    edi,0x4
6401e5ad:	test   WORD PTR [ebp-0x18],0x810
6401e5b3:	mov    DWORD PTR [ebp-0x2c],edi
6401e5b6:	je     0x6401e5df
6401e5b8:	movzx  eax,WORD PTR [edi-0x4]
6401e5bc:	push   eax
6401e5bd:	push   0x200
6401e5c2:	lea    eax,[ebp-0x14]
6401e5c5:	push   eax
6401e5c6:	lea    eax,[ebp-0x28]
6401e5c9:	push   eax
6401e5ca:	call   0x6401ef5b
6401e5cf:	add    esp,0x10
6401e5d2:	test   eax,eax
6401e5d4:	je     0x6401e5ec
6401e5d6:	mov    DWORD PTR [ebp-0x68],0x1
6401e5dd:	jmp    0x6401e5ec
6401e5df:	mov    al,BYTE PTR [edi-0x4]
6401e5e2:	mov    BYTE PTR [ebp-0x14],al
6401e5e5:	mov    DWORD PTR [ebp-0x28],0x1
6401e5ec:	lea    eax,[ebp-0x14]
6401e5ef:	mov    DWORD PTR [ebp-0x24],eax
6401e5f2:	jmp    0x6401e943
6401e5f7:	mov    eax,DWORD PTR [edi]
6401e5f9:	add    edi,0x4
6401e5fc:	test   eax,eax
6401e5fe:	mov    DWORD PTR [ebp-0x2c],edi
6401e601:	je     0x6401e632
6401e603:	mov    ecx,DWORD PTR [eax+0x4]
6401e606:	test   ecx,ecx
6401e608:	je     0x6401e632
6401e60a:	test   WORD PTR [ebp-0x18],0x800
6401e610:	movsx  eax,WORD PTR [eax]
6401e613:	mov    DWORD PTR [ebp-0x24],ecx
6401e616:	je     0x6401e629
6401e618:	cdq    
6401e619:	sub    eax,edx
6401e61b:	sar    eax,1
6401e61d:	mov    DWORD PTR [ebp-0x44],0x1
6401e624:	jmp    0x6401e940
6401e629:	and    DWORD PTR [ebp-0x44],0x0
6401e62d:	jmp    0x6401e940
6401e632:	mov    eax,ds:0x6402f950
6401e637:	mov    DWORD PTR [ebp-0x24],eax
6401e63a:	push   eax
6401e63b:	call   0x64015730
6401e640:	pop    ecx
6401e641:	jmp    0x6401e940
6401e646:	cmp    eax,0x70
6401e649:	jg     0x6401e7cf
6401e64f:	je     0x6401e7c7
6401e655:	cmp    eax,0x65
6401e658:	jl     0x6401e943
6401e65e:	cmp    eax,0x67
6401e661:	jle    0x6401e505
6401e667:	cmp    eax,0x69
6401e66a:	je     0x6401e6c1
6401e66c:	cmp    eax,0x6e
6401e66f:	je     0x6401e68c
6401e671:	cmp    eax,0x6f
6401e674:	jne    0x6401e943
6401e67a:	test   BYTE PTR [ebp-0x18],0x80
6401e67e:	mov    DWORD PTR [ebp-0x28],esi
6401e681:	je     0x6401e6cc
6401e683:	or     DWORD PTR [ebp-0x18],0x200
6401e68a:	jmp    0x6401e6cc
6401e68c:	mov    esi,DWORD PTR [edi]
6401e68e:	add    edi,0x4
6401e691:	mov    DWORD PTR [ebp-0x2c],edi
6401e694:	call   0x6401dfa8
6401e699:	test   eax,eax
6401e69b:	je     0x6401ea71
6401e6a1:	test   BYTE PTR [ebp-0x18],0x20
6401e6a5:	je     0x6401e6b0
6401e6a7:	mov    ax,WORD PTR [ebp-0x34]
6401e6ab:	mov    WORD PTR [esi],ax
6401e6ae:	jmp    0x6401e6b5
6401e6b0:	mov    eax,DWORD PTR [ebp-0x34]
6401e6b3:	mov    DWORD PTR [esi],eax
6401e6b5:	mov    DWORD PTR [ebp-0x68],0x1
6401e6bc:	jmp    0x6401ea48
6401e6c1:	or     DWORD PTR [ebp-0x18],0x40
6401e6c5:	mov    DWORD PTR [ebp-0x28],0xa
6401e6cc:	mov    ecx,DWORD PTR [ebp-0x18]
6401e6cf:	test   cx,cx
6401e6d2:	jns    0x6401e819
6401e6d8:	add    edi,esi
6401e6da:	mov    eax,DWORD PTR [edi-0x8]
6401e6dd:	mov    edx,DWORD PTR [edi-0x4]
6401e6e0:	jmp    0x6401e84e
6401e6e5:	jne    0x6401e6f5
6401e6e7:	cmp    dl,0x67
6401e6ea:	jne    0x6401e734
6401e6ec:	mov    DWORD PTR [ebp-0x20],0x1
6401e6f3:	jmp    0x6401e734
6401e6f5:	cmp    DWORD PTR [ebp-0x20],eax
6401e6f8:	jle    0x6401e6fd
6401e6fa:	mov    DWORD PTR [ebp-0x20],eax
6401e6fd:	cmp    DWORD PTR [ebp-0x20],0xa3
6401e704:	jle    0x6401e734
6401e706:	mov    esi,DWORD PTR [ebp-0x20]
6401e709:	add    esi,0x15d
6401e70f:	push   esi
6401e710:	call   0x64017240
6401e715:	test   eax,eax
6401e717:	mov    dl,BYTE PTR [ebp-0x19]
6401e71a:	pop    ecx
6401e71b:	mov    DWORD PTR [ebp-0x60],eax
6401e71e:	push   0x8
6401e720:	je     0x6401e72c
6401e722:	mov    DWORD PTR [ebp-0x24],eax
6401e725:	mov    DWORD PTR [ebp-0x6c],esi
6401e728:	mov    ebx,eax
6401e72a:	jmp    0x6401e733
6401e72c:	mov    DWORD PTR [ebp-0x20],0xa3
6401e733:	pop    esi
6401e734:	add    edi,esi
6401e736:	mov    eax,DWORD PTR [edi-0x8]
6401e739:	mov    DWORD PTR [ebp-0x80],eax
6401e73c:	mov    eax,DWORD PTR [edi-0x4]
6401e73f:	mov    DWORD PTR [ebp-0x7c],eax
6401e742:	lea    eax,[ebp-0x5c]
6401e745:	push   eax
6401e746:	push   DWORD PTR [ebp-0x74]
6401e749:	movsx  eax,dl
6401e74c:	push   DWORD PTR [ebp-0x20]
6401e74f:	mov    DWORD PTR [ebp-0x2c],edi
6401e752:	push   eax
6401e753:	push   DWORD PTR [ebp-0x6c]
6401e756:	lea    eax,[ebp-0x80]
6401e759:	push   ebx
6401e75a:	push   eax
6401e75b:	push   DWORD PTR ds:0x6402fb64
6401e761:	call   0x64015e5f
6401e766:	pop    ecx
6401e767:	call   eax
6401e769:	mov    edi,DWORD PTR [ebp-0x18]
6401e76c:	add    esp,0x1c
6401e76f:	and    edi,0x80
6401e775:	je     0x6401e792
6401e777:	cmp    DWORD PTR [ebp-0x20],0x0
6401e77b:	jne    0x6401e792
6401e77d:	lea    eax,[ebp-0x5c]
6401e780:	push   eax
6401e781:	push   ebx
6401e782:	push   DWORD PTR ds:0x6402fb70
6401e788:	call   0x64015e5f
6401e78d:	pop    ecx
6401e78e:	call   eax
6401e790:	pop    ecx
6401e791:	pop    ecx
6401e792:	cmp    BYTE PTR [ebp-0x19],0x67
6401e796:	jne    0x6401e7b1
6401e798:	test   edi,edi
6401e79a:	jne    0x6401e7b1
6401e79c:	lea    eax,[ebp-0x5c]
6401e79f:	push   eax
6401e7a0:	push   ebx
6401e7a1:	push   DWORD PTR ds:0x6402fb6c
6401e7a7:	call   0x64015e5f
6401e7ac:	pop    ecx
6401e7ad:	call   eax
6401e7af:	pop    ecx
6401e7b0:	pop    ecx
6401e7b1:	cmp    BYTE PTR [ebx],0x2d
6401e7b4:	jne    0x6401e7c1
6401e7b6:	or     DWORD PTR [ebp-0x18],0x100
6401e7bd:	inc    ebx
6401e7be:	mov    DWORD PTR [ebp-0x24],ebx
6401e7c1:	push   ebx
6401e7c2:	jmp    0x6401e63b
6401e7c7:	mov    DWORD PTR [ebp-0x20],esi
6401e7ca:	mov    DWORD PTR [ebp-0x64],ecx
6401e7cd:	jmp    0x6401e7f0
6401e7cf:	sub    eax,0x73
6401e7d2:	je     0x6401e54d
6401e7d8:	dec    eax
6401e7d9:	dec    eax
6401e7da:	je     0x6401e6c5
6401e7e0:	sub    eax,0x3
6401e7e3:	jne    0x6401e943
6401e7e9:	mov    DWORD PTR [ebp-0x64],0x27
6401e7f0:	test   BYTE PTR [ebp-0x18],0x80
6401e7f4:	mov    DWORD PTR [ebp-0x28],0x10
6401e7fb:	je     0x6401e6cc
6401e801:	mov    al,BYTE PTR [ebp-0x64]
6401e804:	add    al,0x51
6401e806:	mov    BYTE PTR [ebp-0x38],0x30
6401e80a:	mov    BYTE PTR [ebp-0x37],al
6401e80d:	mov    DWORD PTR [ebp-0x3c],0x2
6401e814:	jmp    0x6401e6cc
6401e819:	test   cx,0x1000
6401e81e:	jne    0x6401e6d8
6401e824:	add    edi,0x4
6401e827:	test   cl,0x20
6401e82a:	je     0x6401e841
6401e82c:	test   cl,0x40
6401e82f:	mov    DWORD PTR [ebp-0x2c],edi
6401e832:	je     0x6401e83a
6401e834:	movsx  eax,WORD PTR [edi-0x4]
6401e838:	jmp    0x6401e83e
6401e83a:	movzx  eax,WORD PTR [edi-0x4]
6401e83e:	cdq    
6401e83f:	jmp    0x6401e851
6401e841:	test   cl,0x40
6401e844:	mov    eax,DWORD PTR [edi-0x4]
6401e847:	je     0x6401e84c
6401e849:	cdq    
6401e84a:	jmp    0x6401e84e
6401e84c:	xor    edx,edx
6401e84e:	mov    DWORD PTR [ebp-0x2c],edi
6401e851:	test   cl,0x40
6401e854:	je     0x6401e86e
6401e856:	test   edx,edx
6401e858:	jg     0x6401e86e
6401e85a:	jl     0x6401e860
6401e85c:	test   eax,eax
6401e85e:	jae    0x6401e86e
6401e860:	neg    eax
6401e862:	adc    edx,0x0
6401e865:	neg    edx
6401e867:	or     DWORD PTR [ebp-0x18],0x100
6401e86e:	test   WORD PTR [ebp-0x18],0x9000
6401e874:	mov    ebx,edx
6401e876:	mov    edi,eax
6401e878:	jne    0x6401e87c
6401e87a:	xor    ebx,ebx
6401e87c:	cmp    DWORD PTR [ebp-0x20],0x0
6401e880:	jge    0x6401e88b
6401e882:	mov    DWORD PTR [ebp-0x20],0x1
6401e889:	jmp    0x6401e89c
6401e88b:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401e88f:	mov    eax,0x200
6401e894:	cmp    DWORD PTR [ebp-0x20],eax
6401e897:	jle    0x6401e89c
6401e899:	mov    DWORD PTR [ebp-0x20],eax
6401e89c:	mov    eax,edi
6401e89e:	or     eax,ebx
6401e8a0:	jne    0x6401e8a5
6401e8a2:	and    DWORD PTR [ebp-0x3c],eax
6401e8a5:	lea    esi,[ebp+0x1eb]
6401e8ab:	mov    eax,DWORD PTR [ebp-0x20]
6401e8ae:	dec    DWORD PTR [ebp-0x20]
6401e8b1:	test   eax,eax
6401e8b3:	jg     0x6401e8bb
6401e8b5:	mov    eax,edi
6401e8b7:	or     eax,ebx
6401e8b9:	je     0x6401e8df
6401e8bb:	mov    eax,DWORD PTR [ebp-0x28]
6401e8be:	cdq    
6401e8bf:	push   edx
6401e8c0:	push   eax
6401e8c1:	push   ebx
6401e8c2:	push   edi
6401e8c3:	call   0x6401ae50
6401e8c8:	add    ecx,0x30
6401e8cb:	cmp    ecx,0x39
6401e8ce:	mov    DWORD PTR [ebp-0x6c],ebx
6401e8d1:	mov    edi,eax
6401e8d3:	mov    ebx,edx
6401e8d5:	jle    0x6401e8da
6401e8d7:	add    ecx,DWORD PTR [ebp-0x64]
6401e8da:	mov    BYTE PTR [esi],cl
6401e8dc:	dec    esi
6401e8dd:	jmp    0x6401e8ab
6401e8df:	lea    eax,[ebp+0x1eb]
6401e8e5:	sub    eax,esi
6401e8e7:	inc    esi
6401e8e8:	test   WORD PTR [ebp-0x18],0x200
6401e8ee:	mov    DWORD PTR [ebp-0x28],eax
6401e8f1:	mov    DWORD PTR [ebp-0x24],esi
6401e8f4:	je     0x6401e943
6401e8f6:	test   eax,eax
6401e8f8:	je     0x6401e901
6401e8fa:	mov    ecx,esi
6401e8fc:	cmp    BYTE PTR [ecx],0x30
6401e8ff:	je     0x6401e943
6401e901:	dec    DWORD PTR [ebp-0x24]
6401e904:	mov    ecx,DWORD PTR [ebp-0x24]
6401e907:	mov    BYTE PTR [ecx],0x30
6401e90a:	inc    eax
6401e90b:	jmp    0x6401e940
6401e90d:	dec    ecx
6401e90e:	cmp    WORD PTR [eax],0x0
6401e912:	je     0x6401e91a
6401e914:	inc    eax
6401e915:	inc    eax
6401e916:	test   ecx,ecx
6401e918:	jne    0x6401e90d
6401e91a:	sub    eax,DWORD PTR [ebp-0x24]
6401e91d:	sar    eax,1
6401e91f:	jmp    0x6401e940
6401e921:	test   edi,edi
6401e923:	jne    0x6401e92d
6401e925:	mov    eax,ds:0x6402f950
6401e92a:	mov    DWORD PTR [ebp-0x24],eax
6401e92d:	mov    eax,DWORD PTR [ebp-0x24]
6401e930:	jmp    0x6401e939
6401e932:	dec    ecx
6401e933:	cmp    BYTE PTR [eax],0x0
6401e936:	je     0x6401e93d
6401e938:	inc    eax
6401e939:	test   ecx,ecx
6401e93b:	jne    0x6401e932
6401e93d:	sub    eax,DWORD PTR [ebp-0x24]
6401e940:	mov    DWORD PTR [ebp-0x28],eax
6401e943:	cmp    DWORD PTR [ebp-0x68],0x0
6401e947:	jne    0x6401ea48
6401e94d:	mov    eax,DWORD PTR [ebp-0x18]
6401e950:	test   al,0x40
6401e952:	je     0x6401e979
6401e954:	test   ax,0x100
6401e958:	je     0x6401e960
6401e95a:	mov    BYTE PTR [ebp-0x38],0x2d
6401e95e:	jmp    0x6401e972
6401e960:	test   al,0x1
6401e962:	je     0x6401e96a
6401e964:	mov    BYTE PTR [ebp-0x38],0x2b
6401e968:	jmp    0x6401e972
6401e96a:	test   al,0x2
6401e96c:	je     0x6401e979
6401e96e:	mov    BYTE PTR [ebp-0x38],0x20
6401e972:	mov    DWORD PTR [ebp-0x3c],0x1
6401e979:	mov    ebx,DWORD PTR [ebp-0x40]
6401e97c:	sub    ebx,DWORD PTR [ebp-0x28]
6401e97f:	sub    ebx,DWORD PTR [ebp-0x3c]
6401e982:	test   BYTE PTR [ebp-0x18],0xc
6401e986:	jne    0x6401e999
6401e988:	push   DWORD PTR [ebp-0x30]
6401e98b:	lea    eax,[ebp-0x34]
6401e98e:	push   ebx
6401e98f:	push   0x20
6401e991:	call   0x6401a33d
6401e996:	add    esp,0xc
6401e999:	push   DWORD PTR [ebp-0x3c]
6401e99c:	mov    edi,DWORD PTR [ebp-0x30]
6401e99f:	lea    eax,[ebp-0x34]
6401e9a2:	lea    ecx,[ebp-0x38]
6401e9a5:	call   0x6401e0e8
6401e9aa:	test   BYTE PTR [ebp-0x18],0x8
6401e9ae:	pop    ecx
6401e9af:	je     0x6401e9c6
6401e9b1:	test   BYTE PTR [ebp-0x18],0x4
6401e9b5:	jne    0x6401e9c6
6401e9b7:	push   edi
6401e9b8:	push   ebx
6401e9b9:	push   0x30
6401e9bb:	lea    eax,[ebp-0x34]
6401e9be:	call   0x6401a33d
6401e9c3:	add    esp,0xc
6401e9c6:	cmp    DWORD PTR [ebp-0x44],0x0
6401e9ca:	mov    eax,DWORD PTR [ebp-0x28]
6401e9cd:	je     0x6401ea20
6401e9cf:	test   eax,eax
6401e9d1:	jle    0x6401ea20
6401e9d3:	mov    esi,DWORD PTR [ebp-0x24]
6401e9d6:	mov    DWORD PTR [ebp-0x6c],eax
6401e9d9:	movzx  eax,WORD PTR [esi]
6401e9dc:	dec    DWORD PTR [ebp-0x6c]
6401e9df:	push   eax
6401e9e0:	push   0x6
6401e9e2:	lea    eax,[ebp+0x1ec]
6401e9e8:	push   eax
6401e9e9:	lea    eax,[ebp-0x78]
6401e9ec:	inc    esi
6401e9ed:	push   eax
6401e9ee:	inc    esi
6401e9ef:	call   0x6401ef5b
6401e9f4:	add    esp,0x10
6401e9f7:	test   eax,eax
6401e9f9:	jne    0x6401ea1a
6401e9fb:	cmp    DWORD PTR [ebp-0x78],eax
6401e9fe:	je     0x6401ea1a
6401ea00:	push   DWORD PTR [ebp-0x78]
6401ea03:	lea    eax,[ebp-0x34]
6401ea06:	lea    ecx,[ebp+0x1ec]
6401ea0c:	call   0x6401e0e8
6401ea11:	cmp    DWORD PTR [ebp-0x6c],0x0
6401ea15:	pop    ecx
6401ea16:	jne    0x6401e9d9
6401ea18:	jmp    0x6401ea2d
6401ea1a:	or     DWORD PTR [ebp-0x34],0xffffffff
6401ea1e:	jmp    0x6401ea2d
6401ea20:	mov    ecx,DWORD PTR [ebp-0x24]
6401ea23:	push   eax
6401ea24:	lea    eax,[ebp-0x34]
6401ea27:	call   0x6401e0e8
6401ea2c:	pop    ecx
6401ea2d:	cmp    DWORD PTR [ebp-0x34],0x0
6401ea31:	jl     0x6401ea48
6401ea33:	test   BYTE PTR [ebp-0x18],0x4
6401ea37:	je     0x6401ea48
6401ea39:	push   edi
6401ea3a:	push   ebx
6401ea3b:	push   0x20
6401ea3d:	lea    eax,[ebp-0x34]
6401ea40:	call   0x6401a33d
6401ea45:	add    esp,0xc
6401ea48:	cmp    DWORD PTR [ebp-0x60],0x0
6401ea4c:	je     0x6401ea5b
6401ea4e:	push   DWORD PTR [ebp-0x60]
6401ea51:	call   0x64014e06
6401ea56:	and    DWORD PTR [ebp-0x60],0x0
6401ea5a:	pop    ecx
6401ea5b:	mov    ebx,DWORD PTR [ebp-0x4c]
6401ea5e:	mov    al,BYTE PTR [ebx]
6401ea60:	test   al,al
6401ea62:	mov    BYTE PTR [ebp-0x19],al
6401ea65:	je     0x6401ea88
6401ea67:	mov    edi,DWORD PTR [ebp-0x2c]
6401ea6a:	mov    dl,al
6401ea6c:	jmp    0x6401e291
6401ea71:	call   0x64015d30
6401ea76:	mov    DWORD PTR [eax],0x16
6401ea7c:	xor    eax,eax
6401ea7e:	push   eax
6401ea7f:	push   eax
6401ea80:	push   eax
6401ea81:	push   eax
6401ea82:	push   eax
6401ea83:	jmp    0x6401e1a2
6401ea88:	xor    esi,esi
6401ea8a:	cmp    DWORD PTR [ebp-0x48],esi
6401ea8d:	je     0x6401ea99
6401ea8f:	cmp    DWORD PTR [ebp-0x48],0x7
6401ea93:	jne    0x6401e192
6401ea99:	cmp    BYTE PTR [ebp-0x50],0x0
6401ea9d:	je     0x6401eaa6
6401ea9f:	mov    eax,DWORD PTR [ebp-0x54]
6401eaa2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eaa6:	mov    eax,DWORD PTR [ebp-0x34]
6401eaa9:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401eaaf:	pop    edi
6401eab0:	pop    esi
6401eab1:	xor    ecx,ebp
6401eab3:	pop    ebx
6401eab4:	call   0x64013f6c
6401eab9:	add    ebp,0x1f8
6401eabf:	leave  
6401eac0:	ret    
6401eac1:	nop
6401eac2:	and    esp,0x1
6401eac5:	fs call 0x6965ecad
6401eacb:	jecxz  0x6401eace
6401eacd:	fs push edx
6401eacf:	jecxz  0x6401ead2
6401ead1:	fs mov ebx,fs
6401ead4:	add    DWORD PTR [ebp+edx*4-0x1d],esp
6401ead8:	add    DWORD PTR [esp+ecx*8-0x1d],esp
6401eadc:	add    DWORD PTR [esi+eax*8-0x1c],esp
6401eae0:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401eae4:	in     al,dx
6401eae5:	sub    esp,0xc
6401eae8:	mov    eax,ds:0x6402f09c
6401eaed:	xor    eax,ebp
6401eaef:	mov    DWORD PTR [ebp-0x4],eax
6401eaf2:	push   0x6
6401eaf4:	lea    eax,[ebp-0xc]
6401eaf7:	push   eax
6401eaf8:	push   0x1004
6401eafd:	push   DWORD PTR [ebp+0x8]
6401eb00:	mov    BYTE PTR [ebp-0x6],0x0
6401eb04:	call   DWORD PTR ds:0x640260e0
6401eb0a:	test   eax,eax
6401eb0c:	jne    0x6401eb13
6401eb0e:	or     eax,0xffffffff
6401eb11:	jmp    0x6401eb1d
6401eb13:	lea    eax,[ebp-0xc]
6401eb16:	push   eax
6401eb17:	call   0x6401f1b4
6401eb1c:	pop    ecx
6401eb1d:	mov    ecx,DWORD PTR [ebp-0x4]
6401eb20:	xor    ecx,ebp
6401eb22:	call   0x64013f6c
6401eb27:	leave  
6401eb28:	ret    
6401eb29:	push   ebp
6401eb2a:	mov    ebp,esp
6401eb2c:	sub    esp,0x34
6401eb2f:	mov    eax,ds:0x6402f09c
6401eb34:	xor    eax,ebp
6401eb36:	mov    DWORD PTR [ebp-0x4],eax
6401eb39:	mov    eax,DWORD PTR [ebp+0x10]
6401eb3c:	mov    ecx,DWORD PTR [ebp+0x18]
6401eb3f:	mov    DWORD PTR [ebp-0x28],eax
6401eb42:	mov    eax,DWORD PTR [ebp+0x14]
6401eb45:	push   ebx
6401eb46:	mov    DWORD PTR [ebp-0x30],eax
6401eb49:	mov    eax,DWORD PTR [eax]
6401eb4b:	push   esi
6401eb4c:	mov    DWORD PTR [ebp-0x24],eax
6401eb4f:	mov    eax,DWORD PTR [ebp+0x8]
6401eb52:	push   edi
6401eb53:	xor    edi,edi
6401eb55:	cmp    eax,DWORD PTR [ebp+0xc]
6401eb58:	mov    DWORD PTR [ebp-0x34],ecx
6401eb5b:	mov    DWORD PTR [ebp-0x20],edi
6401eb5e:	mov    DWORD PTR [ebp-0x2c],edi
6401eb61:	je     0x6401ecc6
6401eb67:	mov    esi,DWORD PTR ds:0x6402613c
6401eb6d:	lea    ecx,[ebp-0x18]
6401eb70:	push   ecx
6401eb71:	push   eax
6401eb72:	call   esi
6401eb74:	test   eax,eax
6401eb76:	mov    ebx,DWORD PTR ds:0x64026024
6401eb7c:	je     0x6401ebdc
6401eb7e:	cmp    DWORD PTR [ebp-0x18],0x1
6401eb82:	jne    0x6401ebdc
6401eb84:	lea    eax,[ebp-0x18]
6401eb87:	push   eax
6401eb88:	push   DWORD PTR [ebp+0xc]
6401eb8b:	call   esi
6401eb8d:	test   eax,eax
6401eb8f:	je     0x6401ebdc
6401eb91:	cmp    DWORD PTR [ebp-0x18],0x1
6401eb95:	jne    0x6401ebdc
6401eb97:	mov    esi,DWORD PTR [ebp-0x24]
6401eb9a:	cmp    esi,0xffffffff
6401eb9d:	mov    DWORD PTR [ebp-0x2c],0x1
6401eba4:	jne    0x6401ebb2
6401eba6:	push   DWORD PTR [ebp-0x28]
6401eba9:	call   0x64015730
6401ebae:	mov    esi,eax
6401ebb0:	pop    ecx
6401ebb1:	inc    esi
6401ebb2:	cmp    esi,edi
6401ebb4:	jle    0x6401ec11
6401ebb6:	cmp    esi,0x7ffffff0
6401ebbc:	ja     0x6401ec11
6401ebbe:	lea    eax,[esi+esi*1+0x8]
6401ebc2:	cmp    eax,0x400
6401ebc7:	ja     0x6401ebf8
6401ebc9:	call   0x640146f0
6401ebce:	mov    eax,esp
6401ebd0:	cmp    eax,edi
6401ebd2:	je     0x6401ec0c
6401ebd4:	mov    DWORD PTR [eax],0xcccc
6401ebda:	jmp    0x6401ec09
6401ebdc:	push   edi
6401ebdd:	push   edi
6401ebde:	push   DWORD PTR [ebp-0x24]
6401ebe1:	push   DWORD PTR [ebp-0x28]
6401ebe4:	push   0x1
6401ebe6:	push   DWORD PTR [ebp+0x8]
6401ebe9:	call   ebx
6401ebeb:	mov    esi,eax
6401ebed:	cmp    esi,edi
6401ebef:	jne    0x6401ebb4
6401ebf1:	xor    eax,eax
6401ebf3:	jmp    0x6401ecc9
6401ebf8:	push   eax
6401ebf9:	call   0x64014ee3
6401ebfe:	cmp    eax,edi
6401ec00:	pop    ecx
6401ec01:	je     0x6401ec0c
6401ec03:	mov    DWORD PTR [eax],0xdddd
6401ec09:	add    eax,0x8
6401ec0c:	mov    DWORD PTR [ebp-0x1c],eax
6401ec0f:	jmp    0x6401ec14
6401ec11:	mov    DWORD PTR [ebp-0x1c],edi
6401ec14:	cmp    DWORD PTR [ebp-0x1c],edi
6401ec17:	je     0x6401ebf1
6401ec19:	lea    eax,[esi+esi*1]
6401ec1c:	push   eax
6401ec1d:	push   edi
6401ec1e:	push   DWORD PTR [ebp-0x1c]
6401ec21:	call   0x64014670
6401ec26:	add    esp,0xc
6401ec29:	push   esi
6401ec2a:	push   DWORD PTR [ebp-0x1c]
6401ec2d:	push   DWORD PTR [ebp-0x24]
6401ec30:	push   DWORD PTR [ebp-0x28]
6401ec33:	push   0x1
6401ec35:	push   DWORD PTR [ebp+0x8]
6401ec38:	call   ebx
6401ec3a:	test   eax,eax
6401ec3c:	je     0x6401ecbd
6401ec3e:	mov    ebx,DWORD PTR [ebp-0x34]
6401ec41:	cmp    ebx,edi
6401ec43:	je     0x6401ec62
6401ec45:	push   edi
6401ec46:	push   edi
6401ec47:	push   DWORD PTR [ebp+0x1c]
6401ec4a:	push   ebx
6401ec4b:	push   esi
6401ec4c:	push   DWORD PTR [ebp-0x1c]
6401ec4f:	push   edi
6401ec50:	push   DWORD PTR [ebp+0xc]
6401ec53:	call   DWORD PTR ds:0x64026028
6401ec59:	test   eax,eax
6401ec5b:	je     0x6401ecbd
6401ec5d:	mov    DWORD PTR [ebp-0x20],ebx
6401ec60:	jmp    0x6401ecbd
6401ec62:	cmp    DWORD PTR [ebp-0x2c],edi
6401ec65:	mov    ebx,DWORD PTR ds:0x64026028
6401ec6b:	jne    0x6401ec81
6401ec6d:	push   edi
6401ec6e:	push   edi
6401ec6f:	push   edi
6401ec70:	push   edi
6401ec71:	push   esi
6401ec72:	push   DWORD PTR [ebp-0x1c]
6401ec75:	push   edi
6401ec76:	push   DWORD PTR [ebp+0xc]
6401ec79:	call   ebx
6401ec7b:	mov    esi,eax
6401ec7d:	cmp    esi,edi
6401ec7f:	je     0x6401ecbd
6401ec81:	push   esi
6401ec82:	push   0x1
6401ec84:	call   0x64017280
6401ec89:	cmp    eax,edi
6401ec8b:	pop    ecx
6401ec8c:	pop    ecx
6401ec8d:	mov    DWORD PTR [ebp-0x20],eax
6401ec90:	je     0x6401ecbd
6401ec92:	push   edi
6401ec93:	push   edi
6401ec94:	push   esi
6401ec95:	push   eax
6401ec96:	push   esi
6401ec97:	push   DWORD PTR [ebp-0x1c]
6401ec9a:	push   edi
6401ec9b:	push   DWORD PTR [ebp+0xc]
6401ec9e:	call   ebx
6401eca0:	cmp    eax,edi
6401eca2:	jne    0x6401ecb2
6401eca4:	push   DWORD PTR [ebp-0x20]
6401eca7:	call   0x64014e06
6401ecac:	pop    ecx
6401ecad:	mov    DWORD PTR [ebp-0x20],edi
6401ecb0:	jmp    0x6401ecbd
6401ecb2:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401ecb6:	je     0x6401ecbd
6401ecb8:	mov    ecx,DWORD PTR [ebp-0x30]
6401ecbb:	mov    DWORD PTR [ecx],eax
6401ecbd:	push   DWORD PTR [ebp-0x1c]
6401ecc0:	call   0x6401447c
6401ecc5:	pop    ecx
6401ecc6:	mov    eax,DWORD PTR [ebp-0x20]
6401ecc9:	lea    esp,[ebp-0x40]
6401eccc:	pop    edi
6401eccd:	pop    esi
6401ecce:	pop    ebx
6401eccf:	mov    ecx,DWORD PTR [ebp-0x4]
6401ecd2:	xor    ecx,ebp
6401ecd4:	call   0x64013f6c
6401ecd9:	leave  
6401ecda:	ret    
6401ecdb:	push   0xc
6401ecdd:	push   0x6402c6a8
6401ece2:	call   0x64015530
6401ece7:	and    DWORD PTR [ebp-0x4],0x0
6401eceb:	movapd xmm0,xmm1
6401ecef:	mov    DWORD PTR [ebp-0x1c],0x1
6401ecf6:	jmp    0x6401ed1b
6401ecf8:	mov    eax,DWORD PTR [ebp-0x14]
6401ecfb:	mov    eax,DWORD PTR [eax]
6401ecfd:	mov    eax,DWORD PTR [eax]
6401ecff:	cmp    eax,0xc0000005
6401ed04:	je     0x6401ed10
6401ed06:	cmp    eax,0xc000001d
6401ed0b:	je     0x6401ed10
6401ed0d:	xor    eax,eax
6401ed0f:	ret    
6401ed10:	xor    eax,eax
6401ed12:	inc    eax
6401ed13:	ret    
6401ed14:	mov    esp,DWORD PTR [ebp-0x18]
6401ed17:	and    DWORD PTR [ebp-0x1c],0x0
6401ed1b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ed22:	mov    eax,DWORD PTR [ebp-0x1c]
6401ed25:	call   0x64015575
6401ed2a:	ret    
6401ed2b:	push   ebp
6401ed2c:	mov    ebp,esp
6401ed2e:	sub    esp,0x18
6401ed31:	xor    eax,eax
6401ed33:	push   ebx
6401ed34:	mov    DWORD PTR [ebp-0x4],eax
6401ed37:	mov    DWORD PTR [ebp-0xc],eax
6401ed3a:	mov    DWORD PTR [ebp-0x8],eax
6401ed3d:	push   ebx
6401ed3e:	pushf  
6401ed3f:	pop    eax
6401ed40:	mov    ecx,eax
6401ed42:	xor    eax,0x200000
6401ed47:	push   eax
6401ed48:	popf   
6401ed49:	pushf  
6401ed4a:	pop    edx
6401ed4b:	sub    edx,ecx
6401ed4d:	je     0x6401ed6e
6401ed4f:	push   ecx
6401ed50:	popf   
6401ed51:	xor    eax,eax
6401ed53:	cpuid  
6401ed55:	mov    DWORD PTR [ebp-0xc],eax
6401ed58:	mov    DWORD PTR [ebp-0x18],ebx
6401ed5b:	mov    DWORD PTR [ebp-0x14],edx
6401ed5e:	mov    DWORD PTR [ebp-0x10],ecx
6401ed61:	mov    eax,0x1
6401ed66:	cpuid  
6401ed68:	mov    DWORD PTR [ebp-0x4],edx
6401ed6b:	mov    DWORD PTR [ebp-0x8],eax
6401ed6e:	pop    ebx
6401ed6f:	test   DWORD PTR [ebp-0x4],0x4000000
6401ed76:	je     0x6401ed86
6401ed78:	call   0x6401ecdb
6401ed7d:	test   eax,eax
6401ed7f:	je     0x6401ed86
6401ed81:	xor    eax,eax
6401ed83:	inc    eax
6401ed84:	jmp    0x6401ed88
6401ed86:	xor    eax,eax
6401ed88:	pop    ebx
6401ed89:	leave  
6401ed8a:	ret    
6401ed8b:	call   0x6401ed2b
6401ed90:	mov    ds:0x64034644,eax
6401ed95:	xor    eax,eax
6401ed97:	ret    
6401ed98:	push   ebp
6401ed99:	mov    ebp,esp
6401ed9b:	sub    esp,0x10
6401ed9e:	push   DWORD PTR [ebp+0x8]
6401eda1:	lea    ecx,[ebp-0x10]
6401eda4:	call   0x6401410f
6401eda9:	movzx  eax,BYTE PTR [ebp+0xc]
6401edad:	mov    ecx,DWORD PTR [ebp-0xc]
6401edb0:	mov    dl,BYTE PTR [ebp+0x14]
6401edb3:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401edb7:	jne    0x6401edd7
6401edb9:	cmp    DWORD PTR [ebp+0x10],0x0
6401edbd:	je     0x6401edd1
6401edbf:	mov    ecx,DWORD PTR [ebp-0x10]
6401edc2:	mov    ecx,DWORD PTR [ecx+0xc8]
6401edc8:	movzx  eax,WORD PTR [ecx+eax*2]
6401edcc:	and    eax,DWORD PTR [ebp+0x10]
6401edcf:	jmp    0x6401edd3
6401edd1:	xor    eax,eax
6401edd3:	test   eax,eax
6401edd5:	je     0x6401edda
6401edd7:	xor    eax,eax
6401edd9:	inc    eax
6401edda:	cmp    BYTE PTR [ebp-0x4],0x0
6401edde:	je     0x6401ede7
6401ede0:	mov    ecx,DWORD PTR [ebp-0x8]
6401ede3:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ede7:	leave  
6401ede8:	ret    
6401ede9:	push   0x4
6401edeb:	push   0x0
6401eded:	push   DWORD PTR [esp+0xc]
6401edf1:	push   0x0
6401edf3:	call   0x6401ed98
6401edf8:	add    esp,0x10
6401edfb:	ret    
6401edfc:	push   ebp
6401edfd:	mov    ebp,esp
6401edff:	sub    esp,0x10
6401ee02:	push   ebx
6401ee03:	push   esi
6401ee04:	mov    esi,DWORD PTR [ebp+0xc]
6401ee07:	xor    ebx,ebx
6401ee09:	cmp    esi,ebx
6401ee0b:	push   edi
6401ee0c:	mov    edi,DWORD PTR [ebp+0x10]
6401ee0f:	jne    0x6401ee22
6401ee11:	cmp    edi,ebx
6401ee13:	jbe    0x6401ee22
6401ee15:	mov    eax,DWORD PTR [ebp+0x8]
6401ee18:	cmp    eax,ebx
6401ee1a:	je     0x6401ee1e
6401ee1c:	mov    DWORD PTR [eax],ebx
6401ee1e:	xor    eax,eax
6401ee20:	jmp    0x6401eea1
6401ee22:	mov    eax,DWORD PTR [ebp+0x8]
6401ee25:	cmp    eax,ebx
6401ee27:	je     0x6401ee2c
6401ee29:	or     DWORD PTR [eax],0xffffffff
6401ee2c:	cmp    edi,0x7fffffff
6401ee32:	jbe    0x6401ee4f
6401ee34:	call   0x64015d30
6401ee39:	push   0x16
6401ee3b:	pop    esi
6401ee3c:	push   ebx
6401ee3d:	push   ebx
6401ee3e:	push   ebx
6401ee3f:	push   ebx
6401ee40:	push   ebx
6401ee41:	mov    DWORD PTR [eax],esi
6401ee43:	call   0x64013aa4
6401ee48:	add    esp,0x14
6401ee4b:	mov    eax,esi
6401ee4d:	jmp    0x6401eea1
6401ee4f:	push   DWORD PTR [ebp+0x18]
6401ee52:	lea    ecx,[ebp-0x10]
6401ee55:	call   0x6401410f
6401ee5a:	mov    eax,DWORD PTR [ebp-0x10]
6401ee5d:	cmp    DWORD PTR [eax+0x14],ebx
6401ee60:	jne    0x6401eefa
6401ee66:	mov    ax,WORD PTR [ebp+0x14]
6401ee6a:	cmp    ax,0xff
6401ee6e:	jbe    0x6401eea6
6401ee70:	cmp    esi,ebx
6401ee72:	je     0x6401ee83
6401ee74:	cmp    edi,ebx
6401ee76:	jbe    0x6401ee83
6401ee78:	push   edi
6401ee79:	push   ebx
6401ee7a:	push   esi
6401ee7b:	call   0x64014670
6401ee80:	add    esp,0xc
6401ee83:	call   0x64015d30
6401ee88:	mov    DWORD PTR [eax],0x2a
6401ee8e:	call   0x64015d30
6401ee93:	cmp    BYTE PTR [ebp-0x4],bl
6401ee96:	mov    eax,DWORD PTR [eax]
6401ee98:	je     0x6401eea1
6401ee9a:	mov    ecx,DWORD PTR [ebp-0x8]
6401ee9d:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401eea1:	pop    edi
6401eea2:	pop    esi
6401eea3:	pop    ebx
6401eea4:	leave  
6401eea5:	ret    
6401eea6:	cmp    esi,ebx
6401eea8:	je     0x6401eed8
6401eeaa:	cmp    edi,ebx
6401eeac:	ja     0x6401eed6
6401eeae:	call   0x64015d30
6401eeb3:	push   0x22
6401eeb5:	pop    esi
6401eeb6:	push   ebx
6401eeb7:	push   ebx
6401eeb8:	push   ebx
6401eeb9:	push   ebx
6401eeba:	push   ebx
6401eebb:	mov    DWORD PTR [eax],esi
6401eebd:	call   0x64013aa4
6401eec2:	add    esp,0x14
6401eec5:	cmp    BYTE PTR [ebp-0x4],bl
6401eec8:	je     0x6401ee4b
6401eeca:	mov    eax,DWORD PTR [ebp-0x8]
6401eecd:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eed1:	jmp    0x6401ee4b
6401eed6:	mov    BYTE PTR [esi],al
6401eed8:	mov    eax,DWORD PTR [ebp+0x8]
6401eedb:	cmp    eax,ebx
6401eedd:	je     0x6401eee5
6401eedf:	mov    DWORD PTR [eax],0x1
6401eee5:	cmp    BYTE PTR [ebp-0x4],bl
6401eee8:	je     0x6401ee1e
6401eeee:	mov    eax,DWORD PTR [ebp-0x8]
6401eef1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eef5:	jmp    0x6401ee1e
6401eefa:	lea    ecx,[ebp+0xc]
6401eefd:	push   ecx
6401eefe:	push   ebx
6401eeff:	push   edi
6401ef00:	push   esi
6401ef01:	push   0x1
6401ef03:	lea    ecx,[ebp+0x14]
6401ef06:	push   ecx
6401ef07:	push   ebx
6401ef08:	mov    DWORD PTR [ebp+0xc],ebx
6401ef0b:	push   DWORD PTR [eax+0x4]
6401ef0e:	call   DWORD PTR ds:0x64026028
6401ef14:	cmp    eax,ebx
6401ef16:	je     0x6401ef2c
6401ef18:	cmp    DWORD PTR [ebp+0xc],ebx
6401ef1b:	jne    0x6401ee83
6401ef21:	mov    ecx,DWORD PTR [ebp+0x8]
6401ef24:	cmp    ecx,ebx
6401ef26:	je     0x6401eee5
6401ef28:	mov    DWORD PTR [ecx],eax
6401ef2a:	jmp    0x6401eee5
6401ef2c:	call   DWORD PTR ds:0x64026044
6401ef32:	cmp    eax,0x7a
6401ef35:	jne    0x6401ee83
6401ef3b:	cmp    esi,ebx
6401ef3d:	je     0x6401eeae
6401ef43:	cmp    edi,ebx
6401ef45:	jbe    0x6401eeae
6401ef4b:	push   edi
6401ef4c:	push   ebx
6401ef4d:	push   esi
6401ef4e:	call   0x64014670
6401ef53:	add    esp,0xc
6401ef56:	jmp    0x6401eeae
6401ef5b:	push   0x0
6401ef5d:	push   DWORD PTR [esp+0x14]
6401ef61:	push   DWORD PTR [esp+0x14]
6401ef65:	push   DWORD PTR [esp+0x14]
6401ef69:	push   DWORD PTR [esp+0x14]
6401ef6d:	call   0x6401edfc
6401ef72:	add    esp,0x14
6401ef75:	ret    
6401ef76:	push   ebp
6401ef77:	mov    ebp,esp
6401ef79:	sub    esp,0x20
6401ef7c:	push   ebx
6401ef7d:	push   esi
6401ef7e:	push   edi
6401ef7f:	call   0x64015e56
6401ef84:	xor    ebx,ebx
6401ef86:	cmp    DWORD PTR ds:0x64030f5c,ebx
6401ef8c:	mov    DWORD PTR [ebp-0x8],eax
6401ef8f:	mov    DWORD PTR [ebp-0x4],ebx
6401ef92:	mov    DWORD PTR [ebp-0xc],ebx
6401ef95:	mov    DWORD PTR [ebp-0x10],ebx
6401ef98:	jne    0x6401f04c
6401ef9e:	push   0x64028570
6401efa3:	call   DWORD PTR ds:0x640260c4
6401efa9:	mov    edi,eax
6401efab:	cmp    edi,ebx
6401efad:	je     0x6401f12c
6401efb3:	mov    esi,DWORD PTR ds:0x64026014
6401efb9:	push   0x64028564
6401efbe:	push   edi
6401efbf:	call   esi
6401efc1:	cmp    eax,ebx
6401efc3:	je     0x6401f12c
6401efc9:	push   eax
6401efca:	call   0x64015de8
6401efcf:	mov    DWORD PTR [esp],0x64028554
6401efd6:	push   edi
6401efd7:	mov    ds:0x64030f5c,eax
6401efdc:	call   esi
6401efde:	push   eax
6401efdf:	call   0x64015de8
6401efe4:	mov    DWORD PTR [esp],0x64028540
6401efeb:	push   edi
6401efec:	mov    ds:0x64030f60,eax
6401eff1:	call   esi
6401eff3:	push   eax
6401eff4:	call   0x64015de8
6401eff9:	mov    ds:0x64030f64,eax
6401effe:	lea    eax,[ebp-0xc]
6401f001:	push   eax
6401f002:	call   0x6401745f
6401f007:	test   eax,eax
6401f009:	pop    ecx
6401f00a:	pop    ecx
6401f00b:	je     0x6401f01a
6401f00d:	push   ebx
6401f00e:	push   ebx
6401f00f:	push   ebx
6401f010:	push   ebx
6401f011:	push   ebx
6401f012:	call   0x640139a8
6401f017:	add    esp,0x14
6401f01a:	cmp    DWORD PTR [ebp-0xc],0x2
6401f01e:	jne    0x6401f04c
6401f020:	push   0x64028524
6401f025:	push   edi
6401f026:	call   esi
6401f028:	push   eax
6401f029:	call   0x64015de8
6401f02e:	cmp    eax,ebx
6401f030:	pop    ecx
6401f031:	mov    ds:0x64030f6c,eax
6401f036:	je     0x6401f04c
6401f038:	push   0x6402850c
6401f03d:	push   edi
6401f03e:	call   esi
6401f040:	push   eax
6401f041:	call   0x64015de8
6401f046:	pop    ecx
6401f047:	mov    ds:0x64030f68,eax
6401f04c:	mov    eax,ds:0x64030f68
6401f051:	mov    ecx,DWORD PTR [ebp-0x8]
6401f054:	cmp    eax,ecx
6401f056:	je     0x6401f0d1
6401f058:	cmp    DWORD PTR ds:0x64030f6c,ecx
6401f05e:	je     0x6401f0d1
6401f060:	push   eax
6401f061:	call   0x64015e5f
6401f066:	push   DWORD PTR ds:0x64030f6c
6401f06c:	mov    esi,eax
6401f06e:	call   0x64015e5f
6401f073:	cmp    esi,ebx
6401f075:	pop    ecx
6401f076:	pop    ecx
6401f077:	mov    edi,eax
6401f079:	je     0x6401f0d1
6401f07b:	cmp    edi,ebx
6401f07d:	je     0x6401f0d1
6401f07f:	call   esi
6401f081:	cmp    eax,ebx
6401f083:	je     0x6401f09e
6401f085:	lea    ecx,[ebp-0x14]
6401f088:	push   ecx
6401f089:	push   0xc
6401f08b:	lea    ecx,[ebp-0x20]
6401f08e:	push   ecx
6401f08f:	push   0x1
6401f091:	push   eax
6401f092:	call   edi
6401f094:	test   eax,eax
6401f096:	je     0x6401f09e
6401f098:	test   BYTE PTR [ebp-0x18],0x1
6401f09c:	jne    0x6401f0d1
6401f09e:	lea    eax,[ebp-0x10]
6401f0a1:	push   eax
6401f0a2:	call   0x64017496
6401f0a7:	test   eax,eax
6401f0a9:	pop    ecx
6401f0aa:	je     0x6401f0b9
6401f0ac:	push   ebx
6401f0ad:	push   ebx
6401f0ae:	push   ebx
6401f0af:	push   ebx
6401f0b0:	push   ebx
6401f0b1:	call   0x640139a8
6401f0b6:	add    esp,0x14
6401f0b9:	cmp    DWORD PTR [ebp-0x10],0x4
6401f0bd:	jb     0x6401f0c8
6401f0bf:	or     DWORD PTR [ebp+0x10],0x200000
6401f0c6:	jmp    0x6401f10c
6401f0c8:	or     DWORD PTR [ebp+0x10],0x40000
6401f0cf:	jmp    0x6401f10c
6401f0d1:	mov    eax,ds:0x64030f60
6401f0d6:	cmp    eax,DWORD PTR [ebp-0x8]
6401f0d9:	je     0x6401f10c
6401f0db:	push   eax
6401f0dc:	call   0x64015e5f
6401f0e1:	cmp    eax,ebx
6401f0e3:	pop    ecx
6401f0e4:	je     0x6401f10c
6401f0e6:	call   eax
6401f0e8:	cmp    eax,ebx
6401f0ea:	mov    DWORD PTR [ebp-0x4],eax
6401f0ed:	je     0x6401f10c
6401f0ef:	mov    eax,ds:0x64030f64
6401f0f4:	cmp    eax,DWORD PTR [ebp-0x8]
6401f0f7:	je     0x6401f10c
6401f0f9:	push   eax
6401f0fa:	call   0x64015e5f
6401f0ff:	cmp    eax,ebx
6401f101:	pop    ecx
6401f102:	je     0x6401f10c
6401f104:	push   DWORD PTR [ebp-0x4]
6401f107:	call   eax
6401f109:	mov    DWORD PTR [ebp-0x4],eax
6401f10c:	push   DWORD PTR ds:0x64030f5c
6401f112:	call   0x64015e5f
6401f117:	cmp    eax,ebx
6401f119:	pop    ecx
6401f11a:	je     0x6401f12c
6401f11c:	push   DWORD PTR [ebp+0x10]
6401f11f:	push   DWORD PTR [ebp+0xc]
6401f122:	push   DWORD PTR [ebp+0x8]
6401f125:	push   DWORD PTR [ebp-0x4]
6401f128:	call   eax
6401f12a:	jmp    0x6401f12e
6401f12c:	xor    eax,eax
6401f12e:	pop    edi
6401f12f:	pop    esi
6401f130:	pop    ebx
6401f131:	leave  
6401f132:	ret    
6401f133:	mov    ecx,DWORD PTR [esp+0x4]
6401f137:	push   esi
6401f138:	xor    esi,esi
6401f13a:	cmp    ecx,esi
6401f13c:	jl     0x6401f15c
6401f13e:	cmp    ecx,0x2
6401f141:	jle    0x6401f14f
6401f143:	cmp    ecx,0x3
6401f146:	jne    0x6401f15c
6401f148:	mov    eax,ds:0x6403057c
6401f14d:	pop    esi
6401f14e:	ret    
6401f14f:	mov    eax,ds:0x6403057c
6401f154:	mov    DWORD PTR ds:0x6403057c,ecx
6401f15a:	pop    esi
6401f15b:	ret    
6401f15c:	call   0x64015d30
6401f161:	push   esi
6401f162:	push   esi
6401f163:	push   esi
6401f164:	push   esi
6401f165:	push   esi
6401f166:	mov    DWORD PTR [eax],0x16
6401f16c:	call   0x64013aa4
6401f171:	add    esp,0x14
6401f174:	or     eax,0xffffffff
6401f177:	pop    esi
6401f178:	ret    
6401f179:	int3   
6401f17a:	int3   
6401f17b:	int3   
6401f17c:	int3   
6401f17d:	int3   
6401f17e:	int3   
6401f17f:	int3   
6401f180:	mov    eax,DWORD PTR [esp+0x8]
6401f184:	mov    ecx,DWORD PTR [esp+0x10]
6401f188:	or     ecx,eax
6401f18a:	mov    ecx,DWORD PTR [esp+0xc]
6401f18e:	jne    0x6401f199
6401f190:	mov    eax,DWORD PTR [esp+0x4]
6401f194:	mul    ecx
6401f196:	ret    0x10
6401f199:	push   ebx
6401f19a:	mul    ecx
6401f19c:	mov    ebx,eax
6401f19e:	mov    eax,DWORD PTR [esp+0x8]
6401f1a2:	mul    DWORD PTR [esp+0x14]
6401f1a6:	add    ebx,eax
6401f1a8:	mov    eax,DWORD PTR [esp+0x8]
6401f1ac:	mul    ecx
6401f1ae:	add    edx,ebx
6401f1b0:	pop    ebx
6401f1b1:	ret    0x10
6401f1b4:	push   0xa
6401f1b6:	push   0x0
6401f1b8:	push   DWORD PTR [esp+0xc]
6401f1bc:	call   0x6401fa05
6401f1c1:	add    esp,0xc
6401f1c4:	ret    
6401f1c5:	push   0x2
6401f1c7:	call   0x640173b6
6401f1cc:	pop    ecx
6401f1cd:	ret    
6401f1ce:	mov    ecx,DWORD PTR [esp+0x4]
6401f1d2:	push   ebx
6401f1d3:	xor    ebx,ebx
6401f1d5:	cmp    ecx,ebx
6401f1d7:	push   esi
6401f1d8:	push   edi
6401f1d9:	jl     0x6401f236
6401f1db:	cmp    ecx,DWORD PTR ds:0x64034520
6401f1e1:	jae    0x6401f236
6401f1e3:	mov    eax,ecx
6401f1e5:	sar    eax,0x5
6401f1e8:	mov    esi,ecx
6401f1ea:	lea    edi,[eax*4+0x64034540]
6401f1f1:	mov    eax,DWORD PTR [edi]
6401f1f3:	and    esi,0x1f
6401f1f6:	shl    esi,0x6
6401f1f9:	add    eax,esi
6401f1fb:	test   BYTE PTR [eax+0x4],0x1
6401f1ff:	je     0x6401f236
6401f201:	cmp    DWORD PTR [eax],0xffffffff
6401f204:	je     0x6401f236
6401f206:	cmp    DWORD PTR ds:0x64030580,0x1
6401f20d:	jne    0x6401f22c
6401f20f:	sub    ecx,ebx
6401f211:	je     0x6401f223
6401f213:	dec    ecx
6401f214:	je     0x6401f21e
6401f216:	dec    ecx
6401f217:	jne    0x6401f22c
6401f219:	push   ebx
6401f21a:	push   0xfffffff4
6401f21c:	jmp    0x6401f226
6401f21e:	push   ebx
6401f21f:	push   0xfffffff5
6401f221:	jmp    0x6401f226
6401f223:	push   ebx
6401f224:	push   0xfffffff6
6401f226:	call   DWORD PTR ds:0x640260b8
6401f22c:	mov    eax,DWORD PTR [edi]
6401f22e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401f232:	xor    eax,eax
6401f234:	jmp    0x6401f24b
6401f236:	call   0x64015d30
6401f23b:	mov    DWORD PTR [eax],0x9
6401f241:	call   0x64015d43
6401f246:	mov    DWORD PTR [eax],ebx
6401f248:	or     eax,0xffffffff
6401f24b:	pop    edi
6401f24c:	pop    esi
6401f24d:	pop    ebx
6401f24e:	ret    
6401f24f:	mov    eax,DWORD PTR [esp+0x4]
6401f253:	cmp    eax,0xfffffffe
6401f256:	jne    0x6401f26f
6401f258:	call   0x64015d43
6401f25d:	and    DWORD PTR [eax],0x0
6401f260:	call   0x64015d30
6401f265:	mov    DWORD PTR [eax],0x9
6401f26b:	or     eax,0xffffffff
6401f26e:	ret    
6401f26f:	push   esi
6401f270:	xor    esi,esi
6401f272:	cmp    eax,esi
6401f274:	jl     0x6401f298
6401f276:	cmp    eax,DWORD PTR ds:0x64034520
6401f27c:	jae    0x6401f298
6401f27e:	mov    ecx,eax
6401f280:	and    eax,0x1f
6401f283:	sar    ecx,0x5
6401f286:	mov    ecx,DWORD PTR [ecx*4+0x64034540]
6401f28d:	shl    eax,0x6
6401f290:	add    eax,ecx
6401f292:	test   BYTE PTR [eax+0x4],0x1
6401f296:	jne    0x6401f2bc
6401f298:	call   0x64015d43
6401f29d:	mov    DWORD PTR [eax],esi
6401f29f:	call   0x64015d30
6401f2a4:	push   esi
6401f2a5:	push   esi
6401f2a6:	push   esi
6401f2a7:	push   esi
6401f2a8:	push   esi
6401f2a9:	mov    DWORD PTR [eax],0x9
6401f2af:	call   0x64013aa4
6401f2b4:	add    esp,0x14
6401f2b7:	or     eax,0xffffffff
6401f2ba:	pop    esi
6401f2bb:	ret    
6401f2bc:	mov    eax,DWORD PTR [eax]
6401f2be:	pop    esi
6401f2bf:	ret    
6401f2c0:	push   0xc
6401f2c2:	push   0x6402c6c8
6401f2c7:	call   0x64015530
6401f2cc:	mov    edi,DWORD PTR [ebp+0x8]
6401f2cf:	mov    eax,edi
6401f2d1:	sar    eax,0x5
6401f2d4:	mov    esi,edi
6401f2d6:	and    esi,0x1f
6401f2d9:	shl    esi,0x6
6401f2dc:	add    esi,DWORD PTR [eax*4+0x64034540]
6401f2e3:	mov    DWORD PTR [ebp-0x1c],0x1
6401f2ea:	xor    ebx,ebx
6401f2ec:	cmp    DWORD PTR [esi+0x8],ebx
6401f2ef:	jne    0x6401f327
6401f2f1:	push   0xa
6401f2f3:	call   0x6401b53a
6401f2f8:	pop    ecx
6401f2f9:	mov    DWORD PTR [ebp-0x4],ebx
6401f2fc:	cmp    DWORD PTR [esi+0x8],ebx
6401f2ff:	jne    0x6401f31b
6401f301:	push   0xfa0
6401f306:	lea    eax,[esi+0xc]
6401f309:	push   eax
6401f30a:	call   0x6401cbf8
6401f30f:	pop    ecx
6401f310:	pop    ecx
6401f311:	test   eax,eax
6401f313:	jne    0x6401f318
6401f315:	mov    DWORD PTR [ebp-0x1c],ebx
6401f318:	inc    DWORD PTR [esi+0x8]
6401f31b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f322:	call   0x6401f357
6401f327:	cmp    DWORD PTR [ebp-0x1c],ebx
6401f32a:	je     0x6401f349
6401f32c:	mov    eax,edi
6401f32e:	sar    eax,0x5
6401f331:	and    edi,0x1f
6401f334:	shl    edi,0x6
6401f337:	mov    eax,DWORD PTR [eax*4+0x64034540]
6401f33e:	lea    eax,[eax+edi*1+0xc]
6401f342:	push   eax
6401f343:	call   DWORD PTR ds:0x6402609c
6401f349:	mov    eax,DWORD PTR [ebp-0x1c]
6401f34c:	call   0x64015575
6401f351:	ret    
6401f352:	xor    ebx,ebx
6401f354:	mov    edi,DWORD PTR [ebp+0x8]
6401f357:	push   0xa
6401f359:	call   0x6401b462
6401f35e:	pop    ecx
6401f35f:	ret    
6401f360:	mov    eax,DWORD PTR [esp+0x4]
6401f364:	mov    ecx,eax
6401f366:	and    eax,0x1f
6401f369:	sar    ecx,0x5
6401f36c:	mov    ecx,DWORD PTR [ecx*4+0x64034540]
6401f373:	shl    eax,0x6
6401f376:	lea    eax,[ecx+eax*1+0xc]
6401f37a:	push   eax
6401f37b:	call   DWORD PTR ds:0x640260a0
6401f381:	ret    
6401f382:	push   ebp
6401f383:	mov    ebp,esp
6401f385:	sub    esp,0x10
6401f388:	mov    eax,ds:0x6402f09c
6401f38d:	xor    eax,ebp
6401f38f:	mov    DWORD PTR [ebp-0x4],eax
6401f392:	push   esi
6401f393:	xor    esi,esi
6401f395:	cmp    DWORD PTR ds:0x6402ffb0,esi
6401f39b:	je     0x6401f3eb
6401f39d:	cmp    DWORD PTR ds:0x64030024,0xfffffffe
6401f3a4:	jne    0x6401f3ab
6401f3a6:	call   0x6401fa91
6401f3ab:	mov    eax,ds:0x64030024
6401f3b0:	cmp    eax,0xffffffff
6401f3b3:	jne    0x6401f3bb
6401f3b5:	or     ax,0xffff
6401f3b9:	jmp    0x6401f42b
6401f3bb:	push   esi
6401f3bc:	lea    ecx,[ebp-0x10]
6401f3bf:	push   ecx
6401f3c0:	push   0x1
6401f3c2:	lea    ecx,[ebp+0x8]
6401f3c5:	push   ecx
6401f3c6:	push   eax
6401f3c7:	call   DWORD PTR ds:0x640260a8
6401f3cd:	test   eax,eax
6401f3cf:	jne    0x6401f438
6401f3d1:	cmp    DWORD PTR ds:0x6402ffb0,0x2
6401f3d8:	jne    0x6401f3b5
6401f3da:	call   DWORD PTR ds:0x64026044
6401f3e0:	cmp    eax,0x78
6401f3e3:	jne    0x6401f3b5
6401f3e5:	mov    DWORD PTR ds:0x6402ffb0,esi
6401f3eb:	push   esi
6401f3ec:	push   esi
6401f3ed:	push   0x5
6401f3ef:	lea    eax,[ebp-0xc]
6401f3f2:	push   eax
6401f3f3:	push   0x1
6401f3f5:	lea    eax,[ebp+0x8]
6401f3f8:	push   eax
6401f3f9:	push   esi
6401f3fa:	call   DWORD PTR ds:0x64026090
6401f400:	push   eax
6401f401:	call   DWORD PTR ds:0x64026028
6401f407:	mov    ecx,DWORD PTR ds:0x64030024
6401f40d:	cmp    ecx,0xffffffff
6401f410:	je     0x6401f3b5
6401f412:	push   esi
6401f413:	lea    edx,[ebp-0x10]
6401f416:	push   edx
6401f417:	push   eax
6401f418:	lea    eax,[ebp-0xc]
6401f41b:	push   eax
6401f41c:	push   ecx
6401f41d:	call   DWORD PTR ds:0x64026094
6401f423:	test   eax,eax
6401f425:	je     0x6401f3b5
6401f427:	mov    ax,WORD PTR [ebp+0x8]
6401f42b:	mov    ecx,DWORD PTR [ebp-0x4]
6401f42e:	xor    ecx,ebp
6401f430:	pop    esi
6401f431:	call   0x64013f6c
6401f436:	leave  
6401f437:	ret    
6401f438:	mov    DWORD PTR ds:0x6402ffb0,0x1
6401f442:	jmp    0x6401f427
6401f444:	push   0x10
6401f446:	push   0x6402c6e8
6401f44b:	call   0x64015530
6401f450:	xor    ebx,ebx
6401f452:	mov    DWORD PTR [ebp-0x1c],ebx
6401f455:	push   0x1
6401f457:	call   0x6401b53a
6401f45c:	pop    ecx
6401f45d:	mov    DWORD PTR [ebp-0x4],ebx
6401f460:	push   0x3
6401f462:	pop    edi
6401f463:	mov    DWORD PTR [ebp-0x20],edi
6401f466:	cmp    edi,DWORD PTR ds:0x64034500
6401f46c:	jge    0x6401f4c5
6401f46e:	mov    esi,edi
6401f470:	shl    esi,0x2
6401f473:	mov    eax,ds:0x640334e4
6401f478:	add    eax,esi
6401f47a:	cmp    DWORD PTR [eax],ebx
6401f47c:	je     0x6401f4c2
6401f47e:	mov    eax,DWORD PTR [eax]
6401f480:	test   BYTE PTR [eax+0xc],0x83
6401f484:	je     0x6401f495
6401f486:	push   eax
6401f487:	call   0x6401fb4f
6401f48c:	pop    ecx
6401f48d:	cmp    eax,0xffffffff
6401f490:	je     0x6401f495
6401f492:	inc    DWORD PTR [ebp-0x1c]
6401f495:	cmp    edi,0x14
6401f498:	jl     0x6401f4c2
6401f49a:	mov    eax,ds:0x640334e4
6401f49f:	mov    eax,DWORD PTR [esi+eax*1]
6401f4a2:	add    eax,0x20
6401f4a5:	push   eax
6401f4a6:	call   DWORD PTR ds:0x640260a4
6401f4ac:	mov    eax,ds:0x640334e4
6401f4b1:	push   DWORD PTR [esi+eax*1]
6401f4b4:	call   0x64014e06
6401f4b9:	pop    ecx
6401f4ba:	mov    eax,ds:0x640334e4
6401f4bf:	mov    DWORD PTR [esi+eax*1],ebx
6401f4c2:	inc    edi
6401f4c3:	jmp    0x6401f463
6401f4c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f4cc:	call   0x6401f4da
6401f4d1:	mov    eax,DWORD PTR [ebp-0x1c]
6401f4d4:	call   0x64015575
6401f4d9:	ret    
6401f4da:	push   0x1
6401f4dc:	call   0x6401b462
6401f4e1:	pop    ecx
6401f4e2:	ret    
6401f4e3:	push   ebx
6401f4e4:	push   esi
6401f4e5:	mov    esi,DWORD PTR [esp+0xc]
6401f4e9:	mov    eax,DWORD PTR [esi+0xc]
6401f4ec:	mov    ecx,eax
6401f4ee:	and    cl,0x3
6401f4f1:	xor    ebx,ebx
6401f4f3:	cmp    cl,0x2
6401f4f6:	jne    0x6401f537
6401f4f8:	test   ax,0x108
6401f4fc:	je     0x6401f537
6401f4fe:	mov    eax,DWORD PTR [esi+0x8]
6401f501:	push   edi
6401f502:	mov    edi,DWORD PTR [esi]
6401f504:	sub    edi,eax
6401f506:	test   edi,edi
6401f508:	jle    0x6401f536
6401f50a:	push   edi
6401f50b:	push   eax
6401f50c:	push   esi
6401f50d:	call   0x6401dd9d
6401f512:	pop    ecx
6401f513:	push   eax
6401f514:	call   0x6401da7e
6401f519:	add    esp,0xc
6401f51c:	cmp    eax,edi
6401f51e:	jne    0x6401f52f
6401f520:	mov    eax,DWORD PTR [esi+0xc]
6401f523:	test   al,al
6401f525:	jns    0x6401f536
6401f527:	and    eax,0xfffffffd
6401f52a:	mov    DWORD PTR [esi+0xc],eax
6401f52d:	jmp    0x6401f536
6401f52f:	or     DWORD PTR [esi+0xc],0x20
6401f533:	or     ebx,0xffffffff
6401f536:	pop    edi
6401f537:	mov    eax,DWORD PTR [esi+0x8]
6401f53a:	and    DWORD PTR [esi+0x4],0x0
6401f53e:	mov    DWORD PTR [esi],eax
6401f540:	pop    esi
6401f541:	mov    eax,ebx
6401f543:	pop    ebx
6401f544:	ret    
6401f545:	push   esi
6401f546:	mov    esi,DWORD PTR [esp+0x8]
6401f54a:	test   esi,esi
6401f54c:	jne    0x6401f557
6401f54e:	push   esi
6401f54f:	call   0x6401f587
6401f554:	pop    ecx
6401f555:	pop    esi
6401f556:	ret    
6401f557:	push   esi
6401f558:	call   0x6401f4e3
6401f55d:	test   eax,eax
6401f55f:	pop    ecx
6401f560:	je     0x6401f567
6401f562:	or     eax,0xffffffff
6401f565:	pop    esi
6401f566:	ret    
6401f567:	test   WORD PTR [esi+0xc],0x4000
6401f56d:	je     0x6401f583
6401f56f:	push   esi
6401f570:	call   0x6401dd9d
6401f575:	push   eax
6401f576:	call   0x6401fbcb
6401f57b:	pop    ecx
6401f57c:	pop    ecx
6401f57d:	neg    eax
6401f57f:	sbb    eax,eax
6401f581:	pop    esi
6401f582:	ret    
6401f583:	xor    eax,eax
6401f585:	pop    esi
6401f586:	ret    
6401f587:	push   0x14
6401f589:	push   0x6402c708
6401f58e:	call   0x64015530
6401f593:	xor    edi,edi
6401f595:	mov    DWORD PTR [ebp-0x1c],edi
6401f598:	mov    DWORD PTR [ebp-0x24],edi
6401f59b:	push   0x1
6401f59d:	call   0x6401b53a
6401f5a2:	pop    ecx
6401f5a3:	mov    DWORD PTR [ebp-0x4],edi
6401f5a6:	xor    esi,esi
6401f5a8:	mov    DWORD PTR [ebp-0x20],esi
6401f5ab:	cmp    esi,DWORD PTR ds:0x64034500
6401f5b1:	jge    0x6401f63a
6401f5b7:	mov    eax,ds:0x640334e4
6401f5bc:	lea    eax,[eax+esi*4]
6401f5bf:	cmp    DWORD PTR [eax],edi
6401f5c1:	je     0x6401f621
6401f5c3:	mov    eax,DWORD PTR [eax]
6401f5c5:	test   BYTE PTR [eax+0xc],0x83
6401f5c9:	je     0x6401f621
6401f5cb:	push   eax
6401f5cc:	push   esi
6401f5cd:	call   0x6401dd0f
6401f5d2:	pop    ecx
6401f5d3:	pop    ecx
6401f5d4:	xor    edx,edx
6401f5d6:	inc    edx
6401f5d7:	mov    DWORD PTR [ebp-0x4],edx
6401f5da:	mov    eax,ds:0x640334e4
6401f5df:	mov    eax,DWORD PTR [eax+esi*4]
6401f5e2:	mov    ecx,DWORD PTR [eax+0xc]
6401f5e5:	test   cl,0x83
6401f5e8:	je     0x6401f619
6401f5ea:	cmp    DWORD PTR [ebp+0x8],edx
6401f5ed:	jne    0x6401f600
6401f5ef:	push   eax
6401f5f0:	call   0x6401f545
6401f5f5:	pop    ecx
6401f5f6:	cmp    eax,0xffffffff
6401f5f9:	je     0x6401f619
6401f5fb:	inc    DWORD PTR [ebp-0x1c]
6401f5fe:	jmp    0x6401f619
6401f600:	cmp    DWORD PTR [ebp+0x8],edi
6401f603:	jne    0x6401f619
6401f605:	test   cl,0x2
6401f608:	je     0x6401f619
6401f60a:	push   eax
6401f60b:	call   0x6401f545
6401f610:	pop    ecx
6401f611:	cmp    eax,0xffffffff
6401f614:	jne    0x6401f619
6401f616:	or     DWORD PTR [ebp-0x24],eax
6401f619:	mov    DWORD PTR [ebp-0x4],edi
6401f61c:	call   0x6401f629
6401f621:	inc    esi
6401f622:	jmp    0x6401f5a8
6401f624:	xor    edi,edi
6401f626:	mov    esi,DWORD PTR [ebp-0x20]
6401f629:	mov    eax,ds:0x640334e4
6401f62e:	push   DWORD PTR [eax+esi*4]
6401f631:	push   esi
6401f632:	call   0x6401dd73
6401f637:	pop    ecx
6401f638:	pop    ecx
6401f639:	ret    
6401f63a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f641:	call   0x6401f658
6401f646:	cmp    DWORD PTR [ebp+0x8],0x1
6401f64a:	mov    eax,DWORD PTR [ebp-0x1c]
6401f64d:	je     0x6401f652
6401f64f:	mov    eax,DWORD PTR [ebp-0x24]
6401f652:	call   0x64015575
6401f657:	ret    
6401f658:	push   0x1
6401f65a:	call   0x6401b462
6401f65f:	pop    ecx
6401f660:	ret    
6401f661:	push   0x1
6401f663:	call   0x6401f587
6401f668:	pop    ecx
6401f669:	ret    
6401f66a:	push   ebp
6401f66b:	mov    ebp,esp
6401f66d:	push   ecx
6401f66e:	push   esi
6401f66f:	mov    esi,DWORD PTR [ebp+0xc]
6401f672:	push   esi
6401f673:	call   0x6401dd9d
6401f678:	mov    DWORD PTR [ebp+0xc],eax
6401f67b:	mov    eax,DWORD PTR [esi+0xc]
6401f67e:	test   al,0x82
6401f680:	pop    ecx
6401f681:	jne    0x6401f69c
6401f683:	call   0x64015d30
6401f688:	mov    DWORD PTR [eax],0x9
6401f68e:	or     DWORD PTR [esi+0xc],0x20
6401f692:	mov    eax,0xffff
6401f697:	jmp    0x6401f7d7
6401f69c:	test   al,0x40
6401f69e:	je     0x6401f6ad
6401f6a0:	call   0x64015d30
6401f6a5:	mov    DWORD PTR [eax],0x22
6401f6ab:	jmp    0x6401f68e
6401f6ad:	test   al,0x1
6401f6af:	je     0x6401f6c8
6401f6b1:	and    DWORD PTR [esi+0x4],0x0
6401f6b5:	test   al,0x10
6401f6b7:	je     0x6401f748
6401f6bd:	mov    ecx,DWORD PTR [esi+0x8]
6401f6c0:	and    eax,0xfffffffe
6401f6c3:	mov    DWORD PTR [esi],ecx
6401f6c5:	mov    DWORD PTR [esi+0xc],eax
6401f6c8:	mov    eax,DWORD PTR [esi+0xc]
6401f6cb:	and    DWORD PTR [esi+0x4],0x0
6401f6cf:	and    DWORD PTR [ebp-0x4],0x0
6401f6d3:	push   ebx
6401f6d4:	push   0x2
6401f6d6:	and    eax,0xffffffef
6401f6d9:	pop    ebx
6401f6da:	or     eax,ebx
6401f6dc:	test   ax,0x10c
6401f6e0:	mov    DWORD PTR [esi+0xc],eax
6401f6e3:	jne    0x6401f711
6401f6e5:	call   0x6401dbfc
6401f6ea:	add    eax,0x20
6401f6ed:	cmp    esi,eax
6401f6ef:	je     0x6401f6fd
6401f6f1:	call   0x6401dbfc
6401f6f6:	add    eax,0x40
6401f6f9:	cmp    esi,eax
6401f6fb:	jne    0x6401f70a
6401f6fd:	push   DWORD PTR [ebp+0xc]
6401f700:	call   0x6401db9e
6401f705:	test   eax,eax
6401f707:	pop    ecx
6401f708:	jne    0x6401f711
6401f70a:	push   esi
6401f70b:	call   0x6401db5a
6401f710:	pop    ecx
6401f711:	test   WORD PTR [esi+0xc],0x108
6401f717:	push   edi
6401f718:	je     0x6401f7a1
6401f71e:	mov    eax,DWORD PTR [esi+0x8]
6401f721:	mov    edi,DWORD PTR [esi]
6401f723:	lea    ecx,[eax+0x2]
6401f726:	mov    DWORD PTR [esi],ecx
6401f728:	mov    ecx,DWORD PTR [esi+0x18]
6401f72b:	sub    edi,eax
6401f72d:	sub    ecx,ebx
6401f72f:	test   edi,edi
6401f731:	mov    DWORD PTR [esi+0x4],ecx
6401f734:	jle    0x6401f753
6401f736:	push   edi
6401f737:	push   eax
6401f738:	push   DWORD PTR [ebp+0xc]
6401f73b:	call   0x6401da7e
6401f740:	add    esp,0xc
6401f743:	mov    DWORD PTR [ebp-0x4],eax
6401f746:	jmp    0x6401f796
6401f748:	or     eax,0x20
6401f74b:	mov    DWORD PTR [esi+0xc],eax
6401f74e:	jmp    0x6401f692
6401f753:	mov    ecx,DWORD PTR [ebp+0xc]
6401f756:	cmp    ecx,0xffffffff
6401f759:	je     0x6401f776
6401f75b:	cmp    ecx,0xfffffffe
6401f75e:	je     0x6401f776
6401f760:	mov    eax,ecx
6401f762:	and    eax,0x1f
6401f765:	mov    edx,ecx
6401f767:	sar    edx,0x5
6401f76a:	shl    eax,0x6
6401f76d:	add    eax,DWORD PTR [edx*4+0x64034540]
6401f774:	jmp    0x6401f77b
6401f776:	mov    eax,0x6402f880
6401f77b:	test   BYTE PTR [eax+0x4],0x20
6401f77f:	je     0x6401f796
6401f781:	push   ebx
6401f782:	push   0x0
6401f784:	push   0x0
6401f786:	push   ecx
6401f787:	call   0x6401d343
6401f78c:	and    eax,edx
6401f78e:	add    esp,0x10
6401f791:	cmp    eax,0xffffffff
6401f794:	je     0x6401f7c3
6401f796:	mov    eax,DWORD PTR [esi+0x8]
6401f799:	mov    ebx,DWORD PTR [ebp+0x8]
6401f79c:	mov    WORD PTR [eax],bx
6401f79f:	jmp    0x6401f7be
6401f7a1:	push   0x2
6401f7a3:	lea    eax,[ebp-0x4]
6401f7a6:	push   eax
6401f7a7:	push   DWORD PTR [ebp+0xc]
6401f7aa:	mov    edi,ebx
6401f7ac:	mov    ebx,DWORD PTR [ebp+0x8]
6401f7af:	mov    WORD PTR [ebp-0x4],bx
6401f7b3:	call   0x6401da7e
6401f7b8:	add    esp,0xc
6401f7bb:	mov    DWORD PTR [ebp-0x4],eax
6401f7be:	cmp    DWORD PTR [ebp-0x4],edi
6401f7c1:	je     0x6401f7ce
6401f7c3:	or     DWORD PTR [esi+0xc],0x20
6401f7c7:	mov    eax,0xffff
6401f7cc:	jmp    0x6401f7d5
6401f7ce:	mov    eax,ebx
6401f7d0:	and    eax,0xffff
6401f7d5:	pop    edi
6401f7d6:	pop    ebx
6401f7d7:	pop    esi
6401f7d8:	leave  
6401f7d9:	ret    
6401f7da:	push   ebp
6401f7db:	mov    ebp,esp
6401f7dd:	sub    esp,0x14
6401f7e0:	push   esi
6401f7e1:	push   edi
6401f7e2:	push   DWORD PTR [ebp+0x8]
6401f7e5:	lea    ecx,[ebp-0x14]
6401f7e8:	call   0x6401410f
6401f7ed:	mov    eax,DWORD PTR [ebp+0x10]
6401f7f0:	mov    esi,DWORD PTR [ebp+0xc]
6401f7f3:	xor    edi,edi
6401f7f5:	cmp    eax,edi
6401f7f7:	je     0x6401f7fb
6401f7f9:	mov    DWORD PTR [eax],esi
6401f7fb:	cmp    esi,edi
6401f7fd:	jne    0x6401f82b
6401f7ff:	call   0x64015d30
6401f804:	push   edi
6401f805:	push   edi
6401f806:	push   edi
6401f807:	push   edi
6401f808:	push   edi
6401f809:	mov    DWORD PTR [eax],0x16
6401f80f:	call   0x64013aa4
6401f814:	add    esp,0x14
6401f817:	cmp    BYTE PTR [ebp-0x8],0x0
6401f81b:	je     0x6401f824
6401f81d:	mov    eax,DWORD PTR [ebp-0xc]
6401f820:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f824:	xor    eax,eax
6401f826:	jmp    0x6401fa01
6401f82b:	cmp    DWORD PTR [ebp+0x14],edi
6401f82e:	je     0x6401f83c
6401f830:	cmp    DWORD PTR [ebp+0x14],0x2
6401f834:	jl     0x6401f7ff
6401f836:	cmp    DWORD PTR [ebp+0x14],0x24
6401f83a:	jg     0x6401f7ff
6401f83c:	mov    ecx,DWORD PTR [ebp-0x14]
6401f83f:	push   ebx
6401f840:	mov    bl,BYTE PTR [esi]
6401f842:	mov    DWORD PTR [ebp-0x4],edi
6401f845:	lea    edi,[esi+0x1]
6401f848:	cmp    DWORD PTR [ecx+0xac],0x1
6401f84f:	jle    0x6401f868
6401f851:	lea    eax,[ebp-0x14]
6401f854:	push   eax
6401f855:	movzx  eax,bl
6401f858:	push   0x8
6401f85a:	push   eax
6401f85b:	call   0x6401aee5
6401f860:	mov    ecx,DWORD PTR [ebp-0x14]
6401f863:	add    esp,0xc
6401f866:	jmp    0x6401f878
6401f868:	mov    edx,DWORD PTR [ecx+0xc8]
6401f86e:	movzx  eax,bl
6401f871:	movzx  eax,BYTE PTR [edx+eax*2]
6401f875:	and    eax,0x8
6401f878:	test   eax,eax
6401f87a:	je     0x6401f881
6401f87c:	mov    bl,BYTE PTR [edi]
6401f87e:	inc    edi
6401f87f:	jmp    0x6401f848
6401f881:	cmp    bl,0x2d
6401f884:	jne    0x6401f88c
6401f886:	or     DWORD PTR [ebp+0x18],0x2
6401f88a:	jmp    0x6401f891
6401f88c:	cmp    bl,0x2b
6401f88f:	jne    0x6401f894
6401f891:	mov    bl,BYTE PTR [edi]
6401f893:	inc    edi
6401f894:	mov    eax,DWORD PTR [ebp+0x14]
6401f897:	test   eax,eax
6401f899:	jl     0x6401f9e8
6401f89f:	cmp    eax,0x1
6401f8a2:	je     0x6401f9e8
6401f8a8:	cmp    eax,0x24
6401f8ab:	jg     0x6401f9e8
6401f8b1:	test   eax,eax
6401f8b3:	jne    0x6401f8df
6401f8b5:	cmp    bl,0x30
6401f8b8:	je     0x6401f8c3
6401f8ba:	mov    DWORD PTR [ebp+0x14],0xa
6401f8c1:	jmp    0x6401f8f7
6401f8c3:	mov    al,BYTE PTR [edi]
6401f8c5:	cmp    al,0x78
6401f8c7:	je     0x6401f8d6
6401f8c9:	cmp    al,0x58
6401f8cb:	je     0x6401f8d6
6401f8cd:	mov    DWORD PTR [ebp+0x14],0x8
6401f8d4:	jmp    0x6401f8f7
6401f8d6:	mov    DWORD PTR [ebp+0x14],0x10
6401f8dd:	jmp    0x6401f8e9
6401f8df:	cmp    eax,0x10
6401f8e2:	jne    0x6401f8f7
6401f8e4:	cmp    bl,0x30
6401f8e7:	jne    0x6401f8f7
6401f8e9:	mov    al,BYTE PTR [edi]
6401f8eb:	cmp    al,0x78
6401f8ed:	je     0x6401f8f3
6401f8ef:	cmp    al,0x58
6401f8f1:	jne    0x6401f8f7
6401f8f3:	inc    edi
6401f8f4:	mov    bl,BYTE PTR [edi]
6401f8f6:	inc    edi
6401f8f7:	mov    esi,DWORD PTR [ecx+0xc8]
6401f8fd:	or     eax,0xffffffff
6401f900:	xor    edx,edx
6401f902:	div    DWORD PTR [ebp+0x14]
6401f905:	movzx  ecx,bl
6401f908:	movzx  ecx,WORD PTR [esi+ecx*2]
6401f90c:	test   cl,0x4
6401f90f:	je     0x6401f919
6401f911:	movsx  ecx,bl
6401f914:	sub    ecx,0x30
6401f917:	jmp    0x6401f933
6401f919:	test   cx,0x103
6401f91e:	je     0x6401f951
6401f920:	mov    cl,bl
6401f922:	sub    cl,0x61
6401f925:	cmp    cl,0x19
6401f928:	movsx  ecx,bl
6401f92b:	ja     0x6401f930
6401f92d:	sub    ecx,0x20
6401f930:	add    ecx,0xffffffc9
6401f933:	cmp    ecx,DWORD PTR [ebp+0x14]
6401f936:	jae    0x6401f951
6401f938:	or     DWORD PTR [ebp+0x18],0x8
6401f93c:	cmp    DWORD PTR [ebp-0x4],eax
6401f93f:	jb     0x6401f968
6401f941:	jne    0x6401f947
6401f943:	cmp    ecx,edx
6401f945:	jbe    0x6401f968
6401f947:	or     DWORD PTR [ebp+0x18],0x4
6401f94b:	cmp    DWORD PTR [ebp+0x10],0x0
6401f94f:	jne    0x6401f974
6401f951:	mov    eax,DWORD PTR [ebp+0x18]
6401f954:	dec    edi
6401f955:	test   al,0x8
6401f957:	jne    0x6401f979
6401f959:	cmp    DWORD PTR [ebp+0x10],0x0
6401f95d:	je     0x6401f962
6401f95f:	mov    edi,DWORD PTR [ebp+0xc]
6401f962:	and    DWORD PTR [ebp-0x4],0x0
6401f966:	jmp    0x6401f9c4
6401f968:	mov    ebx,DWORD PTR [ebp-0x4]
6401f96b:	imul   ebx,DWORD PTR [ebp+0x14]
6401f96f:	add    ebx,ecx
6401f971:	mov    DWORD PTR [ebp-0x4],ebx
6401f974:	mov    bl,BYTE PTR [edi]
6401f976:	inc    edi
6401f977:	jmp    0x6401f905
6401f979:	test   al,0x4
6401f97b:	mov    esi,0x7fffffff
6401f980:	jne    0x6401f99d
6401f982:	test   al,0x1
6401f984:	jne    0x6401f9c4
6401f986:	and    eax,0x2
6401f989:	je     0x6401f994
6401f98b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401f992:	ja     0x6401f99d
6401f994:	test   eax,eax
6401f996:	jne    0x6401f9c4
6401f998:	cmp    DWORD PTR [ebp-0x4],esi
6401f99b:	jbe    0x6401f9c4
6401f99d:	call   0x64015d30
6401f9a2:	test   BYTE PTR [ebp+0x18],0x1
6401f9a6:	mov    DWORD PTR [eax],0x22
6401f9ac:	je     0x6401f9b4
6401f9ae:	or     DWORD PTR [ebp-0x4],0xffffffff
6401f9b2:	jmp    0x6401f9c4
6401f9b4:	mov    al,BYTE PTR [ebp+0x18]
6401f9b7:	and    al,0x2
6401f9b9:	neg    al
6401f9bb:	sbb    eax,eax
6401f9bd:	neg    eax
6401f9bf:	add    eax,esi
6401f9c1:	mov    DWORD PTR [ebp-0x4],eax
6401f9c4:	mov    eax,DWORD PTR [ebp+0x10]
6401f9c7:	test   eax,eax
6401f9c9:	je     0x6401f9cd
6401f9cb:	mov    DWORD PTR [eax],edi
6401f9cd:	test   BYTE PTR [ebp+0x18],0x2
6401f9d1:	je     0x6401f9d6
6401f9d3:	neg    DWORD PTR [ebp-0x4]
6401f9d6:	cmp    BYTE PTR [ebp-0x8],0x0
6401f9da:	je     0x6401f9e3
6401f9dc:	mov    eax,DWORD PTR [ebp-0xc]
6401f9df:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f9e3:	mov    eax,DWORD PTR [ebp-0x4]
6401f9e6:	jmp    0x6401fa00
6401f9e8:	mov    eax,DWORD PTR [ebp+0x10]
6401f9eb:	test   eax,eax
6401f9ed:	je     0x6401f9f1
6401f9ef:	mov    DWORD PTR [eax],esi
6401f9f1:	cmp    BYTE PTR [ebp-0x8],0x0
6401f9f5:	je     0x6401f9fe
6401f9f7:	mov    eax,DWORD PTR [ebp-0xc]
6401f9fa:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f9fe:	xor    eax,eax
6401fa00:	pop    ebx
6401fa01:	pop    edi
6401fa02:	pop    esi
6401fa03:	leave  
6401fa04:	ret    
6401fa05:	push   ebp
6401fa06:	mov    ebp,esp
6401fa08:	xor    eax,eax
6401fa0a:	cmp    DWORD PTR ds:0x64030934,eax
6401fa10:	push   eax
6401fa11:	push   DWORD PTR [ebp+0x10]
6401fa14:	push   DWORD PTR [ebp+0xc]
6401fa17:	push   DWORD PTR [ebp+0x8]
6401fa1a:	jne    0x6401fa23
6401fa1c:	push   0x6402f878
6401fa21:	jmp    0x6401fa24
6401fa23:	push   eax
6401fa24:	call   0x6401f7da
6401fa29:	add    esp,0x14
6401fa2c:	pop    ebp
6401fa2d:	ret    
6401fa2e:	int3   
6401fa2f:	int3   
6401fa30:	push   ebp
6401fa31:	mov    ebp,esp
6401fa33:	push   edi
6401fa34:	push   esi
6401fa35:	push   ebx
6401fa36:	mov    ecx,DWORD PTR [ebp+0x10]
6401fa39:	or     ecx,ecx
6401fa3b:	je     0x6401fa8a
6401fa3d:	mov    esi,DWORD PTR [ebp+0x8]
6401fa40:	mov    edi,DWORD PTR [ebp+0xc]
6401fa43:	mov    bh,0x41
6401fa45:	mov    bl,0x5a
6401fa47:	mov    dh,0x20
6401fa49:	lea    ecx,[ecx+0x0]
6401fa4c:	mov    ah,BYTE PTR [esi]
6401fa4e:	or     ah,ah
6401fa50:	mov    al,BYTE PTR [edi]
6401fa52:	je     0x6401fa7b
6401fa54:	or     al,al
6401fa56:	je     0x6401fa7b
6401fa58:	add    esi,0x1
6401fa5b:	add    edi,0x1
6401fa5e:	cmp    ah,bh
6401fa60:	jb     0x6401fa68
6401fa62:	cmp    ah,bl
6401fa64:	ja     0x6401fa68
6401fa66:	add    ah,dh
6401fa68:	cmp    al,bh
6401fa6a:	jb     0x6401fa72
6401fa6c:	cmp    al,bl
6401fa6e:	ja     0x6401fa72
6401fa70:	add    al,dh
6401fa72:	cmp    ah,al
6401fa74:	jne    0x6401fa81
6401fa76:	sub    ecx,0x1
6401fa79:	jne    0x6401fa4c
6401fa7b:	xor    ecx,ecx
6401fa7d:	cmp    ah,al
6401fa7f:	je     0x6401fa8a
6401fa81:	mov    ecx,0xffffffff
6401fa86:	jb     0x6401fa8a
6401fa88:	neg    ecx
6401fa8a:	mov    eax,ecx
6401fa8c:	pop    ebx
6401fa8d:	pop    esi
6401fa8e:	pop    edi
6401fa8f:	leave  
6401fa90:	ret    
6401fa91:	xor    eax,eax
6401fa93:	push   eax
6401fa94:	push   eax
6401fa95:	push   0x3
6401fa97:	push   eax
6401fa98:	push   0x3
6401fa9a:	push   0x40000000
6401fa9f:	push   0x640285bc
6401faa4:	call   DWORD PTR ds:0x640260ac
6401faaa:	mov    ds:0x64030024,eax
6401faaf:	ret    
6401fab0:	mov    eax,ds:0x64030024
6401fab5:	cmp    eax,0xffffffff
6401fab8:	push   esi
6401fab9:	mov    esi,DWORD PTR ds:0x64026040
6401fabf:	je     0x6401fac9
6401fac1:	cmp    eax,0xfffffffe
6401fac4:	je     0x6401fac9
6401fac6:	push   eax
6401fac7:	call   esi
6401fac9:	mov    eax,ds:0x64030020
6401face:	cmp    eax,0xffffffff
6401fad1:	je     0x6401fadb
6401fad3:	cmp    eax,0xfffffffe
6401fad6:	je     0x6401fadb
6401fad8:	push   eax
6401fad9:	call   esi
6401fadb:	pop    esi
6401fadc:	ret    
6401fadd:	push   ebx
6401fade:	push   esi
6401fadf:	mov    esi,DWORD PTR [esp+0xc]
6401fae3:	push   edi
6401fae4:	xor    edi,edi
6401fae6:	or     ebx,0xffffffff
6401fae9:	cmp    esi,edi
6401faeb:	jne    0x6401fb09
6401faed:	call   0x64015d30
6401faf2:	push   edi
6401faf3:	push   edi
6401faf4:	push   edi
6401faf5:	push   edi
6401faf6:	push   edi
6401faf7:	mov    DWORD PTR [eax],0x16
6401fafd:	call   0x64013aa4
6401fb02:	add    esp,0x14
6401fb05:	or     eax,ebx
6401fb07:	jmp    0x6401fb4b
6401fb09:	test   BYTE PTR [esi+0xc],0x83
6401fb0d:	je     0x6401fb46
6401fb0f:	push   esi
6401fb10:	call   0x6401f4e3
6401fb15:	push   esi
6401fb16:	mov    ebx,eax
6401fb18:	call   0x6401fe2a
6401fb1d:	push   esi
6401fb1e:	call   0x6401dd9d
6401fb23:	push   eax
6401fb24:	call   0x6401fd5d
6401fb29:	add    esp,0x10
6401fb2c:	test   eax,eax
6401fb2e:	jge    0x6401fb35
6401fb30:	or     ebx,0xffffffff
6401fb33:	jmp    0x6401fb46
6401fb35:	mov    eax,DWORD PTR [esi+0x1c]
6401fb38:	cmp    eax,edi
6401fb3a:	je     0x6401fb46
6401fb3c:	push   eax
6401fb3d:	call   0x64014e06
6401fb42:	pop    ecx
6401fb43:	mov    DWORD PTR [esi+0x1c],edi
6401fb46:	mov    DWORD PTR [esi+0xc],edi
6401fb49:	mov    eax,ebx
6401fb4b:	pop    edi
6401fb4c:	pop    esi
6401fb4d:	pop    ebx
6401fb4e:	ret    
6401fb4f:	push   0xc
6401fb51:	push   0x6402c730
6401fb56:	call   0x64015530
6401fb5b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401fb5f:	xor    eax,eax
6401fb61:	mov    esi,DWORD PTR [ebp+0x8]
6401fb64:	xor    edi,edi
6401fb66:	cmp    esi,edi
6401fb68:	setne  al
6401fb6b:	cmp    eax,edi
6401fb6d:	jne    0x6401fb8c
6401fb6f:	call   0x64015d30
6401fb74:	mov    DWORD PTR [eax],0x16
6401fb7a:	push   edi
6401fb7b:	push   edi
6401fb7c:	push   edi
6401fb7d:	push   edi
6401fb7e:	push   edi
6401fb7f:	call   0x64013aa4
6401fb84:	add    esp,0x14
6401fb87:	or     eax,0xffffffff
6401fb8a:	jmp    0x6401fb98
6401fb8c:	test   BYTE PTR [esi+0xc],0x40
6401fb90:	je     0x6401fb9e
6401fb92:	mov    DWORD PTR [esi+0xc],edi
6401fb95:	mov    eax,DWORD PTR [ebp-0x1c]
6401fb98:	call   0x64015575
6401fb9d:	ret    
6401fb9e:	push   esi
6401fb9f:	call   0x6401dcd3
6401fba4:	pop    ecx
6401fba5:	mov    DWORD PTR [ebp-0x4],edi
6401fba8:	push   esi
6401fba9:	call   0x6401fadd
6401fbae:	pop    ecx
6401fbaf:	mov    DWORD PTR [ebp-0x1c],eax
6401fbb2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fbb9:	call   0x6401fbc3
6401fbbe:	jmp    0x6401fb95
6401fbc0:	mov    esi,DWORD PTR [ebp+0x8]
6401fbc3:	push   esi
6401fbc4:	call   0x6401dd3d
6401fbc9:	pop    ecx
6401fbca:	ret    
6401fbcb:	push   0x10
6401fbcd:	push   0x6402c750
6401fbd2:	call   0x64015530
6401fbd7:	mov    eax,DWORD PTR [ebp+0x8]
6401fbda:	cmp    eax,0xfffffffe
6401fbdd:	jne    0x6401fbf2
6401fbdf:	call   0x64015d30
6401fbe4:	mov    DWORD PTR [eax],0x9
6401fbea:	or     eax,0xffffffff
6401fbed:	jmp    0x6401fc9c
6401fbf2:	xor    ebx,ebx
6401fbf4:	cmp    eax,ebx
6401fbf6:	jl     0x6401fc00
6401fbf8:	cmp    eax,DWORD PTR ds:0x64034520
6401fbfe:	jb     0x6401fc1a
6401fc00:	call   0x64015d30
6401fc05:	mov    DWORD PTR [eax],0x9
6401fc0b:	push   ebx
6401fc0c:	push   ebx
6401fc0d:	push   ebx
6401fc0e:	push   ebx
6401fc0f:	push   ebx
6401fc10:	call   0x64013aa4
6401fc15:	add    esp,0x14
6401fc18:	jmp    0x6401fbea
6401fc1a:	mov    ecx,eax
6401fc1c:	sar    ecx,0x5
6401fc1f:	lea    edi,[ecx*4+0x64034540]
6401fc26:	mov    esi,eax
6401fc28:	and    esi,0x1f
6401fc2b:	shl    esi,0x6
6401fc2e:	mov    ecx,DWORD PTR [edi]
6401fc30:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401fc35:	and    ecx,0x1
6401fc38:	je     0x6401fc00
6401fc3a:	push   eax
6401fc3b:	call   0x6401f2c0
6401fc40:	pop    ecx
6401fc41:	mov    DWORD PTR [ebp-0x4],ebx
6401fc44:	mov    eax,DWORD PTR [edi]
6401fc46:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401fc4b:	je     0x6401fc7e
6401fc4d:	push   DWORD PTR [ebp+0x8]
6401fc50:	call   0x6401f24f
6401fc55:	pop    ecx
6401fc56:	push   eax
6401fc57:	call   DWORD PTR ds:0x640260b0
6401fc5d:	test   eax,eax
6401fc5f:	jne    0x6401fc6c
6401fc61:	call   DWORD PTR ds:0x64026044
6401fc67:	mov    DWORD PTR [ebp-0x1c],eax
6401fc6a:	jmp    0x6401fc6f
6401fc6c:	mov    DWORD PTR [ebp-0x1c],ebx
6401fc6f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401fc72:	je     0x6401fc8d
6401fc74:	call   0x64015d43
6401fc79:	mov    ecx,DWORD PTR [ebp-0x1c]
6401fc7c:	mov    DWORD PTR [eax],ecx
6401fc7e:	call   0x64015d30
6401fc83:	mov    DWORD PTR [eax],0x9
6401fc89:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401fc8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fc94:	call   0x6401fca2
6401fc99:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc9c:	call   0x64015575
6401fca1:	ret    
6401fca2:	push   DWORD PTR [ebp+0x8]
6401fca5:	call   0x6401f360
6401fcaa:	pop    ecx
6401fcab:	ret    
6401fcac:	xor    eax,eax
6401fcae:	cmp    DWORD PTR [esp+0x8],eax
6401fcb2:	jbe    0x6401fcc5
6401fcb4:	mov    ecx,DWORD PTR [esp+0x4]
6401fcb8:	cmp    BYTE PTR [ecx],0x0
6401fcbb:	je     0x6401fcc5
6401fcbd:	inc    eax
6401fcbe:	inc    ecx
6401fcbf:	cmp    eax,DWORD PTR [esp+0x8]
6401fcc3:	jb     0x6401fcb8
6401fcc5:	ret    
6401fcc6:	push   esi
6401fcc7:	mov    esi,DWORD PTR [esp+0x8]
6401fccb:	push   edi
6401fccc:	push   esi
6401fccd:	call   0x6401f24f
6401fcd2:	cmp    eax,0xffffffff
6401fcd5:	pop    ecx
6401fcd6:	je     0x6401fd28
6401fcd8:	cmp    esi,0x1
6401fcdb:	mov    eax,ds:0x64034540
6401fce0:	jne    0x6401fceb
6401fce2:	test   BYTE PTR [eax+0x84],0x1
6401fce9:	jne    0x6401fcf6
6401fceb:	cmp    esi,0x2
6401fcee:	jne    0x6401fd0c
6401fcf0:	test   BYTE PTR [eax+0x44],0x1
6401fcf4:	je     0x6401fd0c
6401fcf6:	push   0x2
6401fcf8:	call   0x6401f24f
6401fcfd:	push   0x1
6401fcff:	mov    edi,eax
6401fd01:	call   0x6401f24f
6401fd06:	cmp    eax,edi
6401fd08:	pop    ecx
6401fd09:	pop    ecx
6401fd0a:	je     0x6401fd28
6401fd0c:	push   esi
6401fd0d:	call   0x6401f24f
6401fd12:	pop    ecx
6401fd13:	push   eax
6401fd14:	call   DWORD PTR ds:0x64026040
6401fd1a:	test   eax,eax
6401fd1c:	jne    0x6401fd28
6401fd1e:	call   DWORD PTR ds:0x64026044
6401fd24:	mov    edi,eax
6401fd26:	jmp    0x6401fd2a
6401fd28:	xor    edi,edi
6401fd2a:	push   esi
6401fd2b:	call   0x6401f1ce
6401fd30:	mov    eax,esi
6401fd32:	sar    eax,0x5
6401fd35:	mov    eax,DWORD PTR [eax*4+0x64034540]
6401fd3c:	and    esi,0x1f
6401fd3f:	shl    esi,0x6
6401fd42:	test   edi,edi
6401fd44:	pop    ecx
6401fd45:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401fd4a:	je     0x6401fd58
6401fd4c:	push   edi
6401fd4d:	call   0x64015d56
6401fd52:	pop    ecx
6401fd53:	or     eax,0xffffffff
6401fd56:	jmp    0x6401fd5a
6401fd58:	xor    eax,eax
6401fd5a:	pop    edi
6401fd5b:	pop    esi
6401fd5c:	ret    
6401fd5d:	push   0x10
6401fd5f:	push   0x6402c770
6401fd64:	call   0x64015530
6401fd69:	mov    eax,DWORD PTR [ebp+0x8]
6401fd6c:	cmp    eax,0xfffffffe
6401fd6f:	jne    0x6401fd8c
6401fd71:	call   0x64015d43
6401fd76:	and    DWORD PTR [eax],0x0
6401fd79:	call   0x64015d30
6401fd7e:	mov    DWORD PTR [eax],0x9
6401fd84:	or     eax,0xffffffff
6401fd87:	jmp    0x6401fe1a
6401fd8c:	xor    edi,edi
6401fd8e:	cmp    eax,edi
6401fd90:	jl     0x6401fd9a
6401fd92:	cmp    eax,DWORD PTR ds:0x64034520
6401fd98:	jb     0x6401fdbb
6401fd9a:	call   0x64015d43
6401fd9f:	mov    DWORD PTR [eax],edi
6401fda1:	call   0x64015d30
6401fda6:	mov    DWORD PTR [eax],0x9
6401fdac:	push   edi
6401fdad:	push   edi
6401fdae:	push   edi
6401fdaf:	push   edi
6401fdb0:	push   edi
6401fdb1:	call   0x64013aa4
6401fdb6:	add    esp,0x14
6401fdb9:	jmp    0x6401fd84
6401fdbb:	mov    ecx,eax
6401fdbd:	sar    ecx,0x5
6401fdc0:	lea    ebx,[ecx*4+0x64034540]
6401fdc7:	mov    esi,eax
6401fdc9:	and    esi,0x1f
6401fdcc:	shl    esi,0x6
6401fdcf:	mov    ecx,DWORD PTR [ebx]
6401fdd1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401fdd6:	and    ecx,0x1
6401fdd9:	je     0x6401fd9a
6401fddb:	push   eax
6401fddc:	call   0x6401f2c0
6401fde1:	pop    ecx
6401fde2:	mov    DWORD PTR [ebp-0x4],edi
6401fde5:	mov    eax,DWORD PTR [ebx]
6401fde7:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401fdec:	je     0x6401fdfc
6401fdee:	push   DWORD PTR [ebp+0x8]
6401fdf1:	call   0x6401fcc6
6401fdf6:	pop    ecx
6401fdf7:	mov    DWORD PTR [ebp-0x1c],eax
6401fdfa:	jmp    0x6401fe0b
6401fdfc:	call   0x64015d30
6401fe01:	mov    DWORD PTR [eax],0x9
6401fe07:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401fe0b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fe12:	call   0x6401fe20
6401fe17:	mov    eax,DWORD PTR [ebp-0x1c]
6401fe1a:	call   0x64015575
6401fe1f:	ret    
6401fe20:	push   DWORD PTR [ebp+0x8]
6401fe23:	call   0x6401f360
6401fe28:	pop    ecx
6401fe29:	ret    
6401fe2a:	push   esi
6401fe2b:	mov    esi,DWORD PTR [esp+0x8]
6401fe2f:	mov    eax,DWORD PTR [esi+0xc]
6401fe32:	test   al,0x83
6401fe34:	je     0x6401fe54
6401fe36:	test   al,0x8
6401fe38:	je     0x6401fe54
6401fe3a:	push   DWORD PTR [esi+0x8]
6401fe3d:	call   0x64014e06
6401fe42:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401fe49:	xor    eax,eax
6401fe4b:	pop    ecx
6401fe4c:	mov    DWORD PTR [esi],eax
6401fe4e:	mov    DWORD PTR [esi+0x8],eax
6401fe51:	mov    DWORD PTR [esi+0x4],eax
6401fe54:	pop    esi
6401fe55:	ret    
6401fe56:	int3   
6401fe57:	int3   
6401fe58:	int3   
6401fe59:	int3   
6401fe5a:	int3   
6401fe5b:	int3   
6401fe5c:	int3   
6401fe5d:	int3   
6401fe5e:	int3   
6401fe5f:	int3   
6401fe60:	lea    eax,[edx-0x1]
6401fe63:	pop    ebx
6401fe64:	ret    
6401fe65:	lea    esp,[esp+0x0]
6401fe6c:	lea    esp,[esp+0x0]
6401fe70:	xor    eax,eax
6401fe72:	mov    al,BYTE PTR [esp+0x8]
6401fe76:	push   ebx
6401fe77:	mov    ebx,eax
6401fe79:	shl    eax,0x8
6401fe7c:	mov    edx,DWORD PTR [esp+0x8]
6401fe80:	test   edx,0x3
6401fe86:	je     0x6401fe9d
6401fe88:	mov    cl,BYTE PTR [edx]
6401fe8a:	add    edx,0x1
6401fe8d:	cmp    cl,bl
6401fe8f:	je     0x6401fe60
6401fe91:	test   cl,cl
6401fe93:	je     0x6401fee6
6401fe95:	test   edx,0x3
6401fe9b:	jne    0x6401fe88
6401fe9d:	or     ebx,eax
6401fe9f:	push   edi
6401fea0:	mov    eax,ebx
6401fea2:	shl    ebx,0x10
6401fea5:	push   esi
6401fea6:	or     ebx,eax
6401fea8:	mov    ecx,DWORD PTR [edx]
6401feaa:	mov    edi,0x7efefeff
6401feaf:	mov    eax,ecx
6401feb1:	mov    esi,edi
6401feb3:	xor    ecx,ebx
6401feb5:	add    esi,eax
6401feb7:	add    edi,ecx
6401feb9:	xor    ecx,0xffffffff
6401febc:	xor    eax,0xffffffff
6401febf:	xor    ecx,edi
6401fec1:	xor    eax,esi
6401fec3:	add    edx,0x4
6401fec6:	and    ecx,0x81010100
6401fecc:	jne    0x6401feea
6401fece:	and    eax,0x81010100
6401fed3:	je     0x6401fea8
6401fed5:	and    eax,0x1010100
6401feda:	jne    0x6401fee4
6401fedc:	and    esi,0x80000000
6401fee2:	jne    0x6401fea8
6401fee4:	pop    esi
6401fee5:	pop    edi
6401fee6:	pop    ebx
6401fee7:	xor    eax,eax
6401fee9:	ret    
6401feea:	mov    eax,DWORD PTR [edx-0x4]
6401feed:	cmp    al,bl
6401feef:	je     0x6401ff27
6401fef1:	test   al,al
6401fef3:	je     0x6401fee4
6401fef5:	cmp    ah,bl
6401fef7:	je     0x6401ff20
6401fef9:	test   ah,ah
6401fefb:	je     0x6401fee4
6401fefd:	shr    eax,0x10
6401ff00:	cmp    al,bl
6401ff02:	je     0x6401ff19
6401ff04:	test   al,al
6401ff06:	je     0x6401fee4
6401ff08:	cmp    ah,bl
6401ff0a:	je     0x6401ff12
6401ff0c:	test   ah,ah
6401ff0e:	je     0x6401fee4
6401ff10:	jmp    0x6401fea8
6401ff12:	pop    esi
6401ff13:	pop    edi
6401ff14:	lea    eax,[edx-0x1]
6401ff17:	pop    ebx
6401ff18:	ret    
6401ff19:	lea    eax,[edx-0x2]
6401ff1c:	pop    esi
6401ff1d:	pop    edi
6401ff1e:	pop    ebx
6401ff1f:	ret    
6401ff20:	lea    eax,[edx-0x3]
6401ff23:	pop    esi
6401ff24:	pop    edi
6401ff25:	pop    ebx
6401ff26:	ret    
6401ff27:	lea    eax,[edx-0x4]
6401ff2a:	pop    esi
6401ff2b:	pop    edi
6401ff2c:	pop    ebx
6401ff2d:	ret    
6401ff2e:	int3   
6401ff2f:	int3   
6401ff30:	mov    eax,DWORD PTR [esp+0x4]
6401ff34:	push   0x0
6401ff36:	push   eax
6401ff37:	call   DWORD PTR ds:0x64030030
6401ff3d:	ret    0x4
6401ff40:	push   ebp
6401ff41:	mov    ebp,esp
6401ff43:	push   0xfffffffe
6401ff45:	push   0x6402c790
6401ff4a:	push   0x64015590
6401ff4f:	mov    eax,fs:0x0
6401ff55:	push   eax
6401ff56:	sub    esp,0x18
6401ff59:	mov    eax,ds:0x6402f09c
6401ff5e:	xor    DWORD PTR [ebp-0x8],eax
6401ff61:	xor    eax,ebp
6401ff63:	mov    DWORD PTR [ebp-0x1c],eax
6401ff66:	push   ebx
6401ff67:	push   esi
6401ff68:	push   edi
6401ff69:	push   eax
6401ff6a:	lea    eax,[ebp-0x10]
6401ff6d:	mov    fs:0x0,eax
6401ff73:	mov    DWORD PTR [ebp-0x18],esp
6401ff76:	mov    esi,DWORD PTR [ebp+0x8]
6401ff79:	test   esi,esi
6401ff7b:	je     0x6401ffd2
6401ff7d:	push   esi
6401ff7e:	call   DWORD PTR ds:0x64026058
6401ff84:	mov    edi,eax
6401ff86:	add    edi,0x1
6401ff89:	mov    DWORD PTR [ebp-0x20],edi
6401ff8c:	push   0x0
6401ff8e:	push   0x0
6401ff90:	push   edi
6401ff91:	push   esi
6401ff92:	push   0x0
6401ff94:	push   0x0
6401ff96:	call   DWORD PTR ds:0x64026024
6401ff9c:	mov    esi,eax
6401ff9e:	mov    DWORD PTR [ebp-0x28],esi
6401ffa1:	test   esi,esi
6401ffa3:	jne    0x6401ffd9
6401ffa5:	mov    esi,DWORD PTR ds:0x64026044
6401ffab:	call   esi
6401ffad:	test   eax,eax
6401ffaf:	jg     0x6401ffc0
6401ffb1:	call   esi
6401ffb3:	push   eax
6401ffb4:	call   0x6401ff30
6401ffb9:	xor    eax,eax
6401ffbb:	jmp    0x640200a0
6401ffc0:	call   esi
6401ffc2:	and    eax,0xffff
6401ffc7:	or     eax,0x80070000
6401ffcc:	push   eax
6401ffcd:	call   0x6401ff30
6401ffd2:	xor    eax,eax
6401ffd4:	jmp    0x640200a0
6401ffd9:	mov    DWORD PTR [ebp-0x4],0x0
6401ffe0:	lea    eax,[esi+esi*1]
6401ffe3:	cmp    esi,0x1000
6401ffe9:	jge    0x64020003
6401ffeb:	call   0x640146f0
6401fff0:	mov    DWORD PTR [ebp-0x18],esp
6401fff3:	mov    eax,esp
6401fff5:	mov    ebx,eax
6401fff7:	mov    DWORD PTR [ebp-0x24],ebx
6401fffa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64020001:	jmp    0x64020035
64020003:	push   eax
64020004:	call   0x64014ee3
64020009:	add    esp,0x4
6402000c:	mov    ebx,eax
6402000e:	mov    DWORD PTR [ebp-0x24],ebx
64020011:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64020018:	jmp    0x64020035
6402001a:	mov    eax,0x1
6402001f:	ret    
64020020:	mov    esp,DWORD PTR [ebp-0x18]
64020023:	xor    ebx,ebx
64020025:	mov    DWORD PTR [ebp-0x24],ebx
64020028:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6402002f:	mov    edi,DWORD PTR [ebp-0x20]
64020032:	mov    esi,DWORD PTR [ebp-0x28]
64020035:	test   ebx,ebx
64020037:	jne    0x64020047
64020039:	push   0x8007000e
6402003e:	call   0x6401ff30
64020043:	xor    eax,eax
64020045:	jmp    0x640200a0
64020047:	push   esi
64020048:	push   ebx
64020049:	push   edi
6402004a:	mov    ecx,DWORD PTR [ebp+0x8]
6402004d:	push   ecx
6402004e:	push   0x0
64020050:	push   0x0
64020052:	call   DWORD PTR ds:0x64026024
64020058:	test   eax,eax
6402005a:	jne    0x64020076
6402005c:	cmp    esi,0x1000
64020062:	jl     0x6401ffa5
64020068:	push   ebx
64020069:	call   0x64014e06
6402006e:	add    esp,0x4
64020071:	jmp    0x6401ffa5
64020076:	push   ebx
64020077:	call   DWORD PTR ds:0x64026198
6402007d:	mov    edi,eax
6402007f:	cmp    esi,0x1000
64020085:	jl     0x64020090
64020087:	push   ebx
64020088:	call   0x64014e06
6402008d:	add    esp,0x4
64020090:	test   edi,edi
64020092:	jne    0x6402009e
64020094:	push   0x8007000e
64020099:	call   0x6401ff30
6402009e:	mov    eax,edi
640200a0:	lea    esp,[ebp-0x38]
640200a3:	mov    ecx,DWORD PTR [ebp-0x10]
640200a6:	mov    DWORD PTR fs:0x0,ecx
640200ad:	pop    ecx
640200ae:	pop    edi
640200af:	pop    esi
640200b0:	pop    ebx
640200b1:	mov    ecx,DWORD PTR [ebp-0x1c]
640200b4:	xor    ecx,ebp
640200b6:	call   0x64013f6c
640200bb:	mov    esp,ebp
640200bd:	pop    ebp
640200be:	ret    0x4
640200c1:	int3   
640200c2:	int3   
640200c3:	int3   
640200c4:	int3   
640200c5:	int3   
640200c6:	int3   
640200c7:	int3   
640200c8:	int3   
640200c9:	int3   
640200ca:	int3   
640200cb:	int3   
640200cc:	int3   
640200cd:	int3   
640200ce:	int3   
640200cf:	int3   
640200d0:	push   esi
640200d1:	mov    esi,ecx
640200d3:	mov    eax,DWORD PTR [esi+0x8]
640200d6:	test   eax,eax
640200d8:	mov    DWORD PTR [esi],0x640285c8
640200de:	je     0x640200e8
640200e0:	mov    ecx,DWORD PTR [eax]
640200e2:	mov    edx,DWORD PTR [ecx+0x8]
640200e5:	push   eax
640200e6:	call   edx
640200e8:	cmp    DWORD PTR [esi+0xc],0x0
640200ec:	je     0x64020105
640200ee:	call   DWORD PTR ds:0x64026104
640200f4:	test   eax,eax
640200f6:	je     0x64020105
640200f8:	mov    ecx,DWORD PTR [esi+0xc]
640200fb:	push   ecx
640200fc:	push   0x0
640200fe:	push   eax
640200ff:	call   DWORD PTR ds:0x640260f8
64020105:	pop    esi
64020106:	ret    
64020107:	int3   
64020108:	int3   
64020109:	int3   
6402010a:	int3   
6402010b:	int3   
6402010c:	int3   
6402010d:	int3   
6402010e:	int3   
6402010f:	int3   
64020110:	sub    esp,0x10
64020113:	mov    eax,DWORD PTR [esp+0x14]
64020117:	mov    ecx,DWORD PTR [esp+0x18]
6402011b:	push   0x6402c7ac
64020120:	lea    edx,[esp+0x4]
64020124:	push   edx
64020125:	mov    DWORD PTR [esp+0x8],0x640285c8
6402012d:	mov    DWORD PTR [esp+0xc],eax
64020131:	mov    DWORD PTR [esp+0x10],ecx
64020135:	mov    DWORD PTR [esp+0x14],0x0
6402013d:	call   0x64013b5b
64020142:	int3   
64020143:	int3   
64020144:	int3   
64020145:	int3   
64020146:	int3   
64020147:	int3   
64020148:	int3   
64020149:	int3   
6402014a:	int3   
6402014b:	int3   
6402014c:	int3   
6402014d:	int3   
6402014e:	int3   
6402014f:	int3   
64020150:	mov    eax,DWORD PTR [esp+0x4]
64020154:	push   esi
64020155:	mov    esi,ecx
64020157:	mov    DWORD PTR [esi],0x640285c8
6402015d:	mov    ecx,DWORD PTR [eax+0x4]
64020160:	mov    DWORD PTR [esi+0x4],ecx
64020163:	mov    edx,DWORD PTR [eax+0x8]
64020166:	mov    eax,edx
64020168:	test   eax,eax
6402016a:	mov    DWORD PTR [esi+0x8],edx
6402016d:	mov    DWORD PTR [esi+0xc],0x0
64020174:	je     0x6402017e
64020176:	mov    ecx,DWORD PTR [eax]
64020178:	mov    edx,DWORD PTR [ecx+0x4]
6402017b:	push   eax
6402017c:	call   edx
6402017e:	mov    eax,esi
64020180:	pop    esi
64020181:	ret    0x4
64020184:	int3   
64020185:	int3   
64020186:	int3   
64020187:	int3   
64020188:	int3   
64020189:	int3   
6402018a:	int3   
6402018b:	int3   
6402018c:	int3   
6402018d:	int3   
6402018e:	int3   
6402018f:	int3   
64020190:	push   esi
64020191:	mov    esi,ecx
64020193:	mov    eax,DWORD PTR [esi+0x8]
64020196:	test   eax,eax
64020198:	mov    DWORD PTR [esi],0x640285c8
6402019e:	je     0x640201a8
640201a0:	mov    ecx,DWORD PTR [eax]
640201a2:	mov    edx,DWORD PTR [ecx+0x8]
640201a5:	push   eax
640201a6:	call   edx
640201a8:	cmp    DWORD PTR [esi+0xc],0x0
640201ac:	je     0x640201c5
640201ae:	call   DWORD PTR ds:0x64026104
640201b4:	test   eax,eax
640201b6:	je     0x640201c5
640201b8:	mov    ecx,DWORD PTR [esi+0xc]
640201bb:	push   ecx
640201bc:	push   0x0
640201be:	push   eax
640201bf:	call   DWORD PTR ds:0x640260f8
640201c5:	test   BYTE PTR [esp+0x8],0x1
640201ca:	je     0x640201d5
640201cc:	push   esi
640201cd:	call   0x64013712
640201d2:	add    esp,0x4
640201d5:	mov    eax,esi
640201d7:	pop    esi
640201d8:	ret    0x4
640201db:	int3   
640201dc:	jmp    DWORD PTR ds:0x64026118
640201e2:	push   ebp
640201e3:	mov    ebp,esp
640201e5:	sub    esp,0xc
640201e8:	mov    eax,ds:0x6402f09c
640201ed:	xor    eax,ebp
640201ef:	mov    DWORD PTR [ebp-0x4],eax
640201f2:	push   ebx
640201f3:	push   esi
640201f4:	push   edi
640201f5:	mov    edi,DWORD PTR [ebp+0x8]
640201f8:	xor    ebx,ebx
640201fa:	cmp    edi,ebx
640201fc:	jne    0x6402021a
640201fe:	call   0x64015d30
64020203:	push   0x16
64020205:	pop    esi
64020206:	push   ebx
64020207:	push   ebx
64020208:	push   ebx
64020209:	push   ebx
6402020a:	push   ebx
6402020b:	mov    DWORD PTR [eax],esi
6402020d:	call   0x64013aa4
64020212:	add    esp,0x14
64020215:	jmp    0x6402034f
6402021a:	push   DWORD PTR [ebp+0xc]
6402021d:	push   edi
6402021e:	call   0x6401fcac
64020223:	cmp    eax,DWORD PTR [ebp+0xc]
64020226:	pop    ecx
64020227:	pop    ecx
64020228:	jb     0x6402022e
6402022a:	mov    BYTE PTR [edi],bl
6402022c:	jmp    0x640201fe
6402022e:	mov    edx,DWORD PTR [ebp+0x10]
64020231:	mov    eax,DWORD PTR [edx]
64020233:	mov    ecx,DWORD PTR [eax+0x14]
64020236:	cmp    ecx,ebx
64020238:	jne    0x6402025a
6402023a:	cmp    BYTE PTR [edi],bl
6402023c:	mov    ecx,edi
6402023e:	je     0x64020253
64020240:	mov    al,BYTE PTR [ecx]
64020242:	cmp    al,0x41
64020244:	jl     0x6402024e
64020246:	cmp    al,0x5a
64020248:	jg     0x6402024e
6402024a:	add    al,0x20
6402024c:	mov    BYTE PTR [ecx],al
6402024e:	inc    ecx
6402024f:	cmp    BYTE PTR [ecx],bl
64020251:	jne    0x64020240
64020253:	xor    eax,eax
64020255:	jmp    0x64020351
6402025a:	push   0x1
6402025c:	push   DWORD PTR [eax+0x4]
6402025f:	mov    esi,0x100
64020264:	push   ebx
64020265:	push   ebx
64020266:	push   0xffffffff
64020268:	push   edi
64020269:	push   esi
6402026a:	push   ecx
6402026b:	push   edx
6402026c:	call   0x6401b33d
64020271:	mov    ecx,eax
64020273:	add    esp,0x24
64020276:	cmp    ecx,ebx
64020278:	mov    DWORD PTR [ebp-0xc],ecx
6402027b:	jne    0x64020294
6402027d:	call   0x64015d30
64020282:	mov    DWORD PTR [eax],0x2a
64020288:	call   0x64015d30
6402028d:	mov    eax,DWORD PTR [eax]
6402028f:	jmp    0x64020351
64020294:	cmp    DWORD PTR [ebp+0xc],ecx
64020297:	jae    0x640202a7
64020299:	mov    BYTE PTR [edi],bl
6402029b:	call   0x64015d30
640202a0:	push   0x22
640202a2:	jmp    0x64020205
640202a7:	cmp    ecx,ebx
640202a9:	jle    0x640202f0
640202ab:	push   0xffffffe0
640202ad:	xor    edx,edx
640202af:	pop    eax
640202b0:	div    ecx
640202b2:	cmp    eax,0x1
640202b5:	jb     0x640202f0
640202b7:	lea    eax,[ecx+0x8]
640202ba:	cmp    eax,0x400
640202bf:	ja     0x640202d4
640202c1:	call   0x640146f0
640202c6:	mov    eax,esp
640202c8:	cmp    eax,ebx
640202ca:	je     0x640202e8
640202cc:	mov    DWORD PTR [eax],0xcccc
640202d2:	jmp    0x640202e5
640202d4:	push   eax
640202d5:	call   0x64014ee3
640202da:	cmp    eax,ebx
640202dc:	pop    ecx
640202dd:	je     0x640202e8
640202df:	mov    DWORD PTR [eax],0xdddd
640202e5:	add    eax,0x8
640202e8:	mov    ecx,DWORD PTR [ebp-0xc]
640202eb:	mov    DWORD PTR [ebp-0x8],eax
640202ee:	jmp    0x640202f3
640202f0:	mov    DWORD PTR [ebp-0x8],ebx
640202f3:	cmp    DWORD PTR [ebp-0x8],ebx
640202f6:	jne    0x64020305
640202f8:	call   0x64015d30
640202fd:	mov    DWORD PTR [eax],0xc
64020303:	jmp    0x64020288
64020305:	mov    edx,DWORD PTR [ebp+0x10]
64020308:	mov    eax,DWORD PTR [edx]
6402030a:	push   0x1
6402030c:	push   DWORD PTR [eax+0x4]
6402030f:	push   ecx
64020310:	push   DWORD PTR [ebp-0x8]
64020313:	push   0xffffffff
64020315:	push   edi
64020316:	push   esi
64020317:	push   DWORD PTR [eax+0x14]
6402031a:	push   edx
6402031b:	call   0x6401b33d
64020320:	add    esp,0x24
64020323:	test   eax,eax
64020325:	je     0x6402033a
64020327:	push   DWORD PTR [ebp-0x8]
6402032a:	push   DWORD PTR [ebp+0xc]
6402032d:	push   edi
6402032e:	call   0x64015928
64020333:	add    esp,0xc
64020336:	mov    esi,eax
64020338:	jmp    0x64020346
6402033a:	call   0x64015d30
6402033f:	push   0x2a
64020341:	pop    ecx
64020342:	mov    DWORD PTR [eax],ecx
64020344:	mov    esi,ecx
64020346:	push   DWORD PTR [ebp-0x8]
64020349:	call   0x6401447c
6402034e:	pop    ecx
6402034f:	mov    eax,esi
64020351:	lea    esp,[ebp-0x18]
64020354:	pop    edi
64020355:	pop    esi
64020356:	pop    ebx
64020357:	mov    ecx,DWORD PTR [ebp-0x4]
6402035a:	xor    ecx,ebp
6402035c:	call   0x64013f6c
64020361:	leave  
64020362:	ret    
64020363:	push   ebp
64020364:	mov    ebp,esp
64020366:	sub    esp,0x10
64020369:	push   DWORD PTR [ebp+0x10]
6402036c:	lea    ecx,[ebp-0x10]
6402036f:	call   0x6401410f
64020374:	lea    eax,[ebp-0x10]
64020377:	push   eax
64020378:	push   DWORD PTR [ebp+0xc]
6402037b:	push   DWORD PTR [ebp+0x8]
6402037e:	call   0x640201e2
64020383:	add    esp,0xc
64020386:	cmp    BYTE PTR [ebp-0x4],0x0
6402038a:	je     0x64020393
6402038c:	mov    ecx,DWORD PTR [ebp-0x8]
6402038f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64020393:	leave  
64020394:	ret    
64020395:	push   ebx
64020396:	xor    ebx,ebx
64020398:	cmp    DWORD PTR ds:0x64030934,ebx
6402039e:	jne    0x640203e2
640203a0:	mov    eax,DWORD PTR [esp+0x8]
640203a4:	cmp    eax,ebx
640203a6:	jne    0x640203c4
640203a8:	call   0x64015d30
640203ad:	push   ebx
640203ae:	push   ebx
640203af:	push   ebx
640203b0:	push   ebx
640203b1:	push   ebx
640203b2:	mov    DWORD PTR [eax],0x16
640203b8:	call   0x64013aa4
640203bd:	add    esp,0x14
640203c0:	xor    eax,eax
640203c2:	pop    ebx
640203c3:	ret    
640203c4:	cmp    BYTE PTR [eax],bl
640203c6:	mov    edx,eax
640203c8:	je     0x640203f5
640203ca:	mov    cl,BYTE PTR [edx]
640203cc:	cmp    cl,0x41
640203cf:	jl     0x640203db
640203d1:	cmp    cl,0x5a
640203d4:	jg     0x640203db
640203d6:	add    cl,0x20
640203d9:	mov    BYTE PTR [edx],cl
640203db:	inc    edx
640203dc:	cmp    BYTE PTR [edx],bl
640203de:	jne    0x640203ca
640203e0:	pop    ebx
640203e1:	ret    
640203e2:	push   ebx
640203e3:	push   0xffffffff
640203e5:	push   DWORD PTR [esp+0x10]
640203e9:	call   0x64020363
640203ee:	mov    eax,DWORD PTR [esp+0x14]
640203f2:	add    esp,0xc
640203f5:	pop    ebx
640203f6:	ret    
640203f7:	ret    
640203f8:	mov    eax,0x64020f03
640203fd:	mov    ds:0x6402fb4c,eax
64020402:	mov    DWORD PTR ds:0x6402fb50,0x640205ff
6402040c:	mov    DWORD PTR ds:0x6402fb54,0x640205bd
64020416:	mov    DWORD PTR ds:0x6402fb58,0x640205f1
64020420:	mov    DWORD PTR ds:0x6402fb5c,0x64020567
6402042a:	mov    ds:0x6402fb60,eax
6402042f:	mov    DWORD PTR ds:0x6402fb64,0x64020e7d
64020439:	mov    DWORD PTR ds:0x6402fb68,0x6402057d
64020443:	mov    DWORD PTR ds:0x6402fb6c,0x640204e7
6402044d:	mov    DWORD PTR ds:0x6402fb70,0x64020476
64020457:	ret    
64020458:	call   0x640203f8
6402045d:	call   0x64020f89
64020462:	cmp    DWORD PTR [esp+0x4],0x0
64020467:	mov    ds:0x64031034,eax
6402046c:	je     0x64020473
6402046e:	call   0x64020f24
64020473:	fnclex 
64020475:	ret    
64020476:	push   ebp
64020477:	mov    ebp,esp
64020479:	sub    esp,0x10
6402047c:	push   esi
6402047d:	push   DWORD PTR [ebp+0xc]
64020480:	lea    ecx,[ebp-0x10]
64020483:	call   0x6401410f
64020488:	mov    esi,DWORD PTR [ebp+0x8]
6402048b:	movsx  eax,BYTE PTR [esi]
6402048e:	push   eax
6402048f:	call   0x64014ddf
64020494:	cmp    eax,0x65
64020497:	jmp    0x640204a5
64020499:	inc    esi
6402049a:	movzx  eax,BYTE PTR [esi]
6402049d:	push   eax
6402049e:	call   0x64014ba8
640204a3:	test   eax,eax
640204a5:	pop    ecx
640204a6:	jne    0x64020499
640204a8:	movsx  eax,BYTE PTR [esi]
640204ab:	push   eax
640204ac:	call   0x64014ddf
640204b1:	cmp    eax,0x78
640204b4:	pop    ecx
640204b5:	jne    0x640204b9
640204b7:	inc    esi
640204b8:	inc    esi
640204b9:	mov    ecx,DWORD PTR [ebp-0x10]
640204bc:	mov    ecx,DWORD PTR [ecx+0xbc]
640204c2:	mov    ecx,DWORD PTR [ecx]
640204c4:	mov    al,BYTE PTR [esi]
640204c6:	mov    cl,BYTE PTR [ecx]
640204c8:	mov    BYTE PTR [esi],cl
640204ca:	inc    esi
640204cb:	mov    cl,BYTE PTR [esi]
640204cd:	mov    BYTE PTR [esi],al
640204cf:	mov    al,cl
640204d1:	mov    cl,BYTE PTR [esi]
640204d3:	inc    esi
640204d4:	test   cl,cl
640204d6:	jne    0x640204cb
640204d8:	cmp    BYTE PTR [ebp-0x4],cl
640204db:	pop    esi
640204dc:	je     0x640204e5
640204de:	mov    eax,DWORD PTR [ebp-0x8]
640204e1:	and    DWORD PTR [eax+0x70],0xfffffffd
640204e5:	leave  
640204e6:	ret    
640204e7:	push   ebp
640204e8:	mov    ebp,esp
640204ea:	sub    esp,0x10
640204ed:	push   esi
640204ee:	push   DWORD PTR [ebp+0xc]
640204f1:	lea    ecx,[ebp-0x10]
640204f4:	call   0x6401410f
640204f9:	mov    eax,DWORD PTR [ebp+0x8]
640204fc:	mov    cl,BYTE PTR [eax]
640204fe:	test   cl,cl
64020500:	mov    esi,DWORD PTR [ebp-0x10]
64020503:	je     0x6402051a
64020505:	mov    edx,DWORD PTR [esi+0xbc]
6402050b:	mov    edx,DWORD PTR [edx]
6402050d:	mov    dl,BYTE PTR [edx]
6402050f:	cmp    cl,dl
64020511:	je     0x6402051a
64020513:	inc    eax
64020514:	mov    cl,BYTE PTR [eax]
64020516:	test   cl,cl
64020518:	jne    0x6402050f
6402051a:	mov    cl,BYTE PTR [eax]
6402051c:	inc    eax
6402051d:	test   cl,cl
6402051f:	je     0x64020557
64020521:	jmp    0x6402052e
64020523:	cmp    cl,0x65
64020526:	je     0x64020534
64020528:	cmp    cl,0x45
6402052b:	je     0x64020534
6402052d:	inc    eax
6402052e:	mov    cl,BYTE PTR [eax]
64020530:	test   cl,cl
64020532:	jne    0x64020523
64020534:	mov    edx,eax
64020536:	dec    eax
64020537:	cmp    BYTE PTR [eax],0x30
6402053a:	je     0x64020536
6402053c:	mov    ecx,DWORD PTR [esi+0xbc]
64020542:	mov    ecx,DWORD PTR [ecx]
64020544:	push   ebx
64020545:	mov    bl,BYTE PTR [eax]
64020547:	cmp    bl,BYTE PTR [ecx]
64020549:	pop    ebx
6402054a:	jne    0x6402054d
6402054c:	dec    eax
6402054d:	mov    cl,BYTE PTR [edx]
6402054f:	inc    eax
64020550:	inc    edx
64020551:	test   cl,cl
64020553:	mov    BYTE PTR [eax],cl
64020555:	jne    0x6402054d
64020557:	cmp    BYTE PTR [ebp-0x4],0x0
6402055b:	pop    esi
6402055c:	je     0x64020565
6402055e:	mov    eax,DWORD PTR [ebp-0x8]
64020561:	and    DWORD PTR [eax+0x70],0xfffffffd
64020565:	leave  
64020566:	ret    
64020567:	fldz   
64020569:	mov    eax,DWORD PTR [esp+0x4]
6402056d:	fcomp  QWORD PTR [eax]
6402056f:	fnstsw ax
64020571:	test   ah,0x41
64020574:	jp     0x6402057a
64020576:	xor    eax,eax
64020578:	inc    eax
64020579:	ret    
6402057a:	xor    eax,eax
6402057c:	ret    
6402057d:	push   ebp
6402057e:	mov    ebp,esp
64020580:	push   ecx
64020581:	push   ecx
64020582:	cmp    DWORD PTR [ebp+0x8],0x0
64020586:	push   DWORD PTR [ebp+0x14]
64020589:	push   DWORD PTR [ebp+0x10]
6402058c:	je     0x640205a7
6402058e:	lea    eax,[ebp-0x8]
64020591:	push   eax
64020592:	call   0x64020fed
64020597:	mov    ecx,DWORD PTR [ebp-0x8]
6402059a:	mov    eax,DWORD PTR [ebp+0xc]
6402059d:	mov    DWORD PTR [eax],ecx
6402059f:	mov    ecx,DWORD PTR [ebp-0x4]
640205a2:	mov    DWORD PTR [eax+0x4],ecx
640205a5:	jmp    0x640205b8
640205a7:	lea    eax,[ebp+0x8]
640205aa:	push   eax
640205ab:	call   0x64021093
640205b0:	mov    eax,DWORD PTR [ebp+0xc]
640205b3:	mov    ecx,DWORD PTR [ebp+0x8]
640205b6:	mov    DWORD PTR [eax],ecx
640205b8:	add    esp,0xc
640205bb:	leave  
640205bc:	ret    
640205bd:	push   0x0
640205bf:	push   DWORD PTR [esp+0x10]
640205c3:	push   DWORD PTR [esp+0x10]
640205c7:	push   DWORD PTR [esp+0x10]
640205cb:	call   0x6402057d
640205d0:	add    esp,0x10
640205d3:	ret    
640205d4:	test   edi,edi
640205d6:	push   esi
640205d7:	mov    esi,eax
640205d9:	je     0x640205ef
640205db:	push   esi
640205dc:	call   0x64015730
640205e1:	inc    eax
640205e2:	push   eax
640205e3:	push   esi
640205e4:	add    esi,edi
640205e6:	push   esi
640205e7:	call   0x64014fb0
640205ec:	add    esp,0x10
640205ef:	pop    esi
640205f0:	ret    
640205f1:	push   0x0
640205f3:	push   DWORD PTR [esp+0x8]
640205f7:	call   0x64020476
640205fc:	pop    ecx
640205fd:	pop    ecx
640205fe:	ret    
640205ff:	push   0x0
64020601:	push   DWORD PTR [esp+0x8]
64020605:	call   0x640204e7
6402060a:	pop    ecx
6402060b:	pop    ecx
6402060c:	ret    
6402060d:	push   ebp
6402060e:	mov    ebp,esp
64020610:	sub    esp,0x10
64020613:	push   ebx
64020614:	push   esi
64020615:	push   edi
64020616:	push   DWORD PTR [ebp+0x1c]
64020619:	lea    ecx,[ebp-0x10]
6402061c:	mov    ebx,eax
6402061e:	call   0x6401410f
64020623:	xor    esi,esi
64020625:	cmp    ebx,esi
64020627:	jne    0x64020654
64020629:	call   0x64015d30
6402062e:	push   0x16
64020630:	pop    edi
64020631:	push   esi
64020632:	push   esi
64020633:	push   esi
64020634:	push   esi
64020635:	push   esi
64020636:	mov    DWORD PTR [eax],edi
64020638:	call   0x64013aa4
6402063d:	add    esp,0x14
64020640:	cmp    BYTE PTR [ebp-0x4],0x0
64020644:	je     0x6402064d
64020646:	mov    eax,DWORD PTR [ebp-0x8]
64020649:	and    DWORD PTR [eax+0x70],0xfffffffd
6402064d:	mov    eax,edi
6402064f:	jmp    0x64020775
64020654:	cmp    DWORD PTR [ebp+0x8],esi
64020657:	jbe    0x64020629
64020659:	cmp    DWORD PTR [ebp+0xc],esi
6402065c:	jle    0x64020663
6402065e:	mov    eax,DWORD PTR [ebp+0xc]
64020661:	jmp    0x64020665
64020663:	xor    eax,eax
64020665:	add    eax,0x9
64020668:	cmp    DWORD PTR [ebp+0x8],eax
6402066b:	ja     0x64020676
6402066d:	call   0x64015d30
64020672:	push   0x22
64020674:	jmp    0x64020630
64020676:	cmp    BYTE PTR [ebp+0x18],0x0
6402067a:	je     0x6402069a
6402067c:	mov    edx,DWORD PTR [ebp+0x14]
6402067f:	xor    eax,eax
64020681:	cmp    DWORD PTR [ebp+0xc],esi
64020684:	setg   al
64020687:	xor    ecx,ecx
64020689:	cmp    DWORD PTR [edx],0x2d
6402068c:	sete   cl
6402068f:	mov    edi,eax
64020691:	add    ecx,ebx
64020693:	mov    eax,ecx
64020695:	call   0x640205d4
6402069a:	mov    edi,DWORD PTR [ebp+0x14]
6402069d:	cmp    DWORD PTR [edi],0x2d
640206a0:	mov    esi,ebx
640206a2:	jne    0x640206aa
640206a4:	mov    BYTE PTR [ebx],0x2d
640206a7:	lea    esi,[ebx+0x1]
640206aa:	cmp    DWORD PTR [ebp+0xc],0x0
640206ae:	jle    0x640206c8
640206b0:	lea    eax,[esi+0x1]
640206b3:	mov    cl,BYTE PTR [eax]
640206b5:	mov    BYTE PTR [esi],cl
640206b7:	mov    esi,eax
640206b9:	mov    eax,DWORD PTR [ebp-0x10]
640206bc:	mov    eax,DWORD PTR [eax+0xbc]
640206c2:	mov    eax,DWORD PTR [eax]
640206c4:	mov    al,BYTE PTR [eax]
640206c6:	mov    BYTE PTR [esi],al
640206c8:	xor    eax,eax
640206ca:	cmp    BYTE PTR [ebp+0x18],al
640206cd:	sete   al
640206d0:	add    eax,DWORD PTR [ebp+0xc]
640206d3:	add    esi,eax
640206d5:	cmp    DWORD PTR [ebp+0x8],0xffffffff
640206d9:	jne    0x640206e0
640206db:	or     ebx,0xffffffff
640206de:	jmp    0x640206e5
640206e0:	sub    ebx,esi
640206e2:	add    ebx,DWORD PTR [ebp+0x8]
640206e5:	push   0x640285d8
640206ea:	push   ebx
640206eb:	push   esi
640206ec:	call   0x64015928
640206f1:	add    esp,0xc
640206f4:	xor    ebx,ebx
640206f6:	test   eax,eax
640206f8:	je     0x64020707
640206fa:	push   ebx
640206fb:	push   ebx
640206fc:	push   ebx
640206fd:	push   ebx
640206fe:	push   ebx
640206ff:	call   0x640139a8
64020704:	add    esp,0x14
64020707:	cmp    DWORD PTR [ebp+0x10],ebx
6402070a:	lea    ecx,[esi+0x2]
6402070d:	je     0x64020712
6402070f:	mov    BYTE PTR [esi],0x45
64020712:	mov    eax,DWORD PTR [edi+0xc]
64020715:	inc    esi
64020716:	cmp    BYTE PTR [eax],0x30
64020719:	je     0x64020749
6402071b:	mov    eax,DWORD PTR [edi+0x4]
6402071e:	dec    eax
6402071f:	jns    0x64020726
64020721:	neg    eax
64020723:	mov    BYTE PTR [esi],0x2d
64020726:	inc    esi
64020727:	cmp    eax,0x64
6402072a:	jl     0x64020736
6402072c:	cdq    
6402072d:	push   0x64
6402072f:	pop    edi
64020730:	idiv   edi
64020732:	add    BYTE PTR [esi],al
64020734:	mov    eax,edx
64020736:	inc    esi
64020737:	cmp    eax,0xa
6402073a:	jl     0x64020746
6402073c:	cdq    
6402073d:	push   0xa
6402073f:	pop    edi
64020740:	idiv   edi
64020742:	add    BYTE PTR [esi],al
64020744:	mov    eax,edx
64020746:	add    BYTE PTR [esi+0x1],al
64020749:	test   BYTE PTR ds:0x64031038,0x1
64020750:	je     0x64020766
64020752:	cmp    BYTE PTR [ecx],0x30
64020755:	jne    0x64020766
64020757:	push   0x3
64020759:	lea    eax,[ecx+0x1]
6402075c:	push   eax
6402075d:	push   ecx
6402075e:	call   0x64014fb0
64020763:	add    esp,0xc
64020766:	cmp    BYTE PTR [ebp-0x4],0x0
6402076a:	je     0x64020773
6402076c:	mov    eax,DWORD PTR [ebp-0x8]
6402076f:	and    DWORD PTR [eax+0x70],0xfffffffd
64020773:	xor    eax,eax
64020775:	pop    edi
64020776:	pop    esi
64020777:	pop    ebx
64020778:	leave  
64020779:	ret    
6402077a:	push   ebp
6402077b:	mov    ebp,esp
6402077d:	sub    esp,0x2c
64020780:	mov    eax,ds:0x6402f09c
64020785:	xor    eax,ebp
64020787:	mov    DWORD PTR [ebp-0x4],eax
6402078a:	mov    eax,DWORD PTR [ebp+0x8]
6402078d:	push   ebx
6402078e:	push   esi
6402078f:	push   edi
64020790:	mov    edi,DWORD PTR [ebp+0xc]
64020793:	push   0x16
64020795:	pop    esi
64020796:	push   esi
64020797:	lea    ecx,[ebp-0x1c]
6402079a:	push   ecx
6402079b:	lea    ecx,[ebp-0x2c]
6402079e:	push   ecx
6402079f:	push   DWORD PTR [eax+0x4]
640207a2:	push   DWORD PTR [eax]
640207a4:	call   0x640212b1
640207a9:	xor    ebx,ebx
640207ab:	add    esp,0x14
640207ae:	cmp    edi,ebx
640207b0:	jne    0x640207ca
640207b2:	call   0x64015d30
640207b7:	push   ebx
640207b8:	push   ebx
640207b9:	push   ebx
640207ba:	push   ebx
640207bb:	push   ebx
640207bc:	mov    DWORD PTR [eax],esi
640207be:	call   0x64013aa4
640207c3:	add    esp,0x14
640207c6:	mov    eax,esi
640207c8:	jmp    0x64020839
640207ca:	mov    eax,DWORD PTR [ebp+0x10]
640207cd:	cmp    eax,ebx
640207cf:	jbe    0x640207b2
640207d1:	cmp    eax,0xffffffff
640207d4:	mov    esi,DWORD PTR [ebp+0x14]
640207d7:	jne    0x640207de
640207d9:	or     eax,0xffffffff
640207dc:	jmp    0x640207f2
640207de:	xor    ecx,ecx
640207e0:	cmp    DWORD PTR [ebp-0x2c],0x2d
640207e4:	sete   cl
640207e7:	sub    eax,ecx
640207e9:	xor    ecx,ecx
640207eb:	cmp    esi,ebx
640207ed:	setg   cl
640207f0:	sub    eax,ecx
640207f2:	lea    ecx,[ebp-0x2c]
640207f5:	push   ecx
640207f6:	lea    ecx,[esi+0x1]
640207f9:	push   ecx
640207fa:	push   eax
640207fb:	xor    eax,eax
640207fd:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020801:	sete   al
64020804:	xor    ecx,ecx
64020806:	cmp    esi,ebx
64020808:	setg   cl
6402080b:	add    eax,edi
6402080d:	add    ecx,eax
6402080f:	push   ecx
64020810:	call   0x64021139
64020815:	add    esp,0x10
64020818:	cmp    eax,ebx
6402081a:	je     0x64020820
6402081c:	mov    BYTE PTR [edi],bl
6402081e:	jmp    0x64020839
64020820:	push   DWORD PTR [ebp+0x1c]
64020823:	lea    eax,[ebp-0x2c]
64020826:	push   ebx
64020827:	push   eax
64020828:	push   DWORD PTR [ebp+0x18]
6402082b:	mov    eax,edi
6402082d:	push   esi
6402082e:	push   DWORD PTR [ebp+0x10]
64020831:	call   0x6402060d
64020836:	add    esp,0x18
64020839:	mov    ecx,DWORD PTR [ebp-0x4]
6402083c:	pop    edi
6402083d:	pop    esi
6402083e:	xor    ecx,ebp
64020840:	pop    ebx
64020841:	call   0x64013f6c
64020846:	leave  
64020847:	ret    
64020848:	push   ebp
64020849:	mov    ebp,esp
6402084b:	push   0x0
6402084d:	push   DWORD PTR [ebp+0x18]
64020850:	push   DWORD PTR [ebp+0x14]
64020853:	push   DWORD PTR [ebp+0x10]
64020856:	push   DWORD PTR [ebp+0xc]
64020859:	push   DWORD PTR [ebp+0x8]
6402085c:	call   0x6402077a
64020861:	add    esp,0x18
64020864:	pop    ebp
64020865:	ret    
64020866:	push   ebp
64020867:	mov    ebp,esp
64020869:	sub    esp,0x24
6402086c:	push   esi
6402086d:	push   edi
6402086e:	push   DWORD PTR [ebp+0x1c]
64020871:	lea    ecx,[ebp-0x24]
64020874:	mov    DWORD PTR [ebp-0x14],0x3ff
6402087b:	xor    edi,edi
6402087d:	mov    DWORD PTR [ebp-0x4],0x30
64020884:	call   0x6401410f
64020889:	cmp    DWORD PTR [ebp+0x14],edi
6402088c:	jge    0x64020891
6402088e:	mov    DWORD PTR [ebp+0x14],edi
64020891:	mov    esi,DWORD PTR [ebp+0xc]
64020894:	cmp    esi,edi
64020896:	jne    0x640208c3
64020898:	call   0x64015d30
6402089d:	push   0x16
6402089f:	pop    esi
640208a0:	push   edi
640208a1:	push   edi
640208a2:	push   edi
640208a3:	push   edi
640208a4:	push   edi
640208a5:	mov    DWORD PTR [eax],esi
640208a7:	call   0x64013aa4
640208ac:	add    esp,0x14
640208af:	cmp    BYTE PTR [ebp-0x18],0x0
640208b3:	je     0x640208bc
640208b5:	mov    eax,DWORD PTR [ebp-0x1c]
640208b8:	and    DWORD PTR [eax+0x70],0xfffffffd
640208bc:	mov    eax,esi
640208be:	jmp    0x64020bd3
640208c3:	cmp    DWORD PTR [ebp+0x10],edi
640208c6:	jbe    0x64020898
640208c8:	mov    eax,DWORD PTR [ebp+0x14]
640208cb:	add    eax,0xb
640208ce:	cmp    DWORD PTR [ebp+0x10],eax
640208d1:	mov    BYTE PTR [esi],0x0
640208d4:	ja     0x640208df
640208d6:	call   0x64015d30
640208db:	push   0x22
640208dd:	jmp    0x6402089f
640208df:	mov    edi,DWORD PTR [ebp+0x8]
640208e2:	mov    eax,DWORD PTR [edi]
640208e4:	mov    DWORD PTR [ebp-0xc],eax
640208e7:	mov    eax,DWORD PTR [edi+0x4]
640208ea:	mov    ecx,eax
640208ec:	shr    ecx,0x14
640208ef:	mov    edx,0x7ff
640208f4:	push   ebx
640208f5:	and    ecx,edx
640208f7:	xor    ebx,ebx
640208f9:	cmp    ecx,edx
640208fb:	jne    0x64020991
64020901:	test   ebx,ebx
64020903:	jne    0x64020991
64020909:	mov    eax,DWORD PTR [ebp+0x10]
6402090c:	cmp    eax,0xffffffff
6402090f:	jne    0x64020915
64020911:	or     eax,eax
64020913:	jmp    0x64020918
64020915:	add    eax,0xfffffffe
64020918:	push   0x0
6402091a:	push   DWORD PTR [ebp+0x14]
6402091d:	lea    ebx,[esi+0x2]
64020920:	push   eax
64020921:	push   ebx
64020922:	push   edi
64020923:	call   0x64020848
64020928:	add    esp,0x14
6402092b:	test   eax,eax
6402092d:	je     0x64020948
6402092f:	cmp    BYTE PTR [ebp-0x18],0x0
64020933:	mov    BYTE PTR [esi],0x0
64020936:	je     0x64020bd2
6402093c:	mov    ecx,DWORD PTR [ebp-0x1c]
6402093f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64020943:	jmp    0x64020bd2
64020948:	cmp    BYTE PTR [ebx],0x2d
6402094b:	jne    0x64020951
6402094d:	mov    BYTE PTR [esi],0x2d
64020950:	inc    esi
64020951:	mov    BYTE PTR [esi],0x30
64020954:	inc    esi
64020955:	cmp    DWORD PTR [ebp+0x18],0x0
64020959:	push   0x65
6402095b:	sete   al
6402095e:	dec    al
64020960:	and    al,0xe0
64020962:	add    al,0x78
64020964:	mov    BYTE PTR [esi],al
64020966:	inc    esi
64020967:	push   esi
64020968:	call   0x64020fc0
6402096d:	test   eax,eax
6402096f:	pop    ecx
64020970:	pop    ecx
64020971:	je     0x64020bc3
64020977:	cmp    DWORD PTR [ebp+0x18],0x0
6402097b:	sete   cl
6402097e:	dec    cl
64020980:	and    cl,0xe0
64020983:	add    cl,0x70
64020986:	mov    BYTE PTR [eax],cl
64020988:	mov    BYTE PTR [eax+0x3],0x0
6402098c:	jmp    0x64020bc3
64020991:	and    eax,0x80000000
64020996:	xor    ecx,ecx
64020998:	or     ecx,eax
6402099a:	je     0x640209a0
6402099c:	mov    BYTE PTR [esi],0x2d
6402099f:	inc    esi
640209a0:	mov    ebx,DWORD PTR [ebp+0x18]
640209a3:	mov    BYTE PTR [esi],0x30
640209a6:	inc    esi
640209a7:	test   ebx,ebx
640209a9:	sete   al
640209ac:	dec    al
640209ae:	and    al,0xe0
640209b0:	add    al,0x78
640209b2:	mov    BYTE PTR [esi],al
640209b4:	mov    ecx,DWORD PTR [edi+0x4]
640209b7:	inc    esi
640209b8:	neg    ebx
640209ba:	sbb    ebx,ebx
640209bc:	and    ebx,0xffffffe0
640209bf:	and    ecx,0x7ff00000
640209c5:	xor    eax,eax
640209c7:	add    ebx,0x27
640209ca:	xor    edx,edx
640209cc:	or     eax,ecx
640209ce:	jne    0x640209f1
640209d0:	mov    BYTE PTR [esi],0x30
640209d3:	mov    ecx,DWORD PTR [edi+0x4]
640209d6:	mov    eax,DWORD PTR [edi]
640209d8:	and    ecx,0xfffff
640209de:	inc    esi
640209df:	or     eax,ecx
640209e1:	jne    0x640209e8
640209e3:	mov    DWORD PTR [ebp-0x14],edx
640209e6:	jmp    0x640209f5
640209e8:	mov    DWORD PTR [ebp-0x14],0x3fe
640209ef:	jmp    0x640209f5
640209f1:	mov    BYTE PTR [esi],0x31
640209f4:	inc    esi
640209f5:	mov    eax,esi
640209f7:	inc    esi
640209f8:	cmp    DWORD PTR [ebp+0x14],edx
640209fb:	mov    DWORD PTR [ebp+0xc],eax
640209fe:	jne    0x64020a04
64020a00:	mov    BYTE PTR [eax],dl
64020a02:	jmp    0x64020a13
64020a04:	mov    ecx,DWORD PTR [ebp-0x24]
64020a07:	mov    ecx,DWORD PTR [ecx+0xbc]
64020a0d:	mov    ecx,DWORD PTR [ecx]
64020a0f:	mov    cl,BYTE PTR [ecx]
64020a11:	mov    BYTE PTR [eax],cl
64020a13:	mov    ecx,DWORD PTR [edi+0x4]
64020a16:	mov    eax,DWORD PTR [edi]
64020a18:	and    ecx,0xfffff
64020a1e:	mov    DWORD PTR [ebp-0x8],ecx
64020a21:	ja     0x64020a2b
64020a23:	cmp    eax,edx
64020a25:	jbe    0x64020ae0
64020a2b:	mov    DWORD PTR [ebp-0xc],edx
64020a2e:	mov    DWORD PTR [ebp-0x8],0xf0000
64020a35:	cmp    DWORD PTR [ebp+0x14],0x0
64020a39:	jle    0x64020a88
64020a3b:	mov    edx,DWORD PTR [edi+0x4]
64020a3e:	and    edx,DWORD PTR [ebp-0x8]
64020a41:	mov    eax,DWORD PTR [edi]
64020a43:	movsx  ecx,WORD PTR [ebp-0x4]
64020a47:	and    eax,DWORD PTR [ebp-0xc]
64020a4a:	and    edx,0xfffff
64020a50:	call   0x64021420
64020a55:	add    ax,0x30
64020a59:	movzx  eax,ax
64020a5c:	cmp    ax,0x39
64020a60:	jbe    0x64020a64
64020a62:	add    eax,ebx
64020a64:	mov    ecx,DWORD PTR [ebp-0x8]
64020a67:	sub    DWORD PTR [ebp-0x4],0x4
64020a6b:	mov    BYTE PTR [esi],al
64020a6d:	mov    eax,DWORD PTR [ebp-0xc]
64020a70:	shrd   eax,ecx,0x4
64020a74:	shr    ecx,0x4
64020a77:	inc    esi
64020a78:	dec    DWORD PTR [ebp+0x14]
64020a7b:	cmp    WORD PTR [ebp-0x4],0x0
64020a80:	mov    DWORD PTR [ebp-0xc],eax
64020a83:	mov    DWORD PTR [ebp-0x8],ecx
64020a86:	jge    0x64020a35
64020a88:	cmp    WORD PTR [ebp-0x4],0x0
64020a8d:	jl     0x64020ae0
64020a8f:	mov    edx,DWORD PTR [edi+0x4]
64020a92:	and    edx,DWORD PTR [ebp-0x8]
64020a95:	mov    eax,DWORD PTR [edi]
64020a97:	movsx  ecx,WORD PTR [ebp-0x4]
64020a9b:	and    eax,DWORD PTR [ebp-0xc]
64020a9e:	and    edx,0xfffff
64020aa4:	call   0x64021420
64020aa9:	cmp    ax,0x8
64020aad:	jbe    0x64020ae0
64020aaf:	lea    eax,[esi-0x1]
64020ab2:	mov    cl,BYTE PTR [eax]
64020ab4:	cmp    cl,0x66
64020ab7:	je     0x64020abe
64020ab9:	cmp    cl,0x46
64020abc:	jne    0x64020ac4
64020abe:	mov    BYTE PTR [eax],0x30
64020ac1:	dec    eax
64020ac2:	jmp    0x64020ab2
64020ac4:	cmp    eax,DWORD PTR [ebp+0xc]
64020ac7:	je     0x64020add
64020ac9:	mov    cl,BYTE PTR [eax]
64020acb:	cmp    cl,0x39
64020ace:	jne    0x64020ad7
64020ad0:	add    bl,0x3a
64020ad3:	mov    BYTE PTR [eax],bl
64020ad5:	jmp    0x64020ae0
64020ad7:	inc    cl
64020ad9:	mov    BYTE PTR [eax],cl
64020adb:	jmp    0x64020ae0
64020add:	inc    BYTE PTR [eax-0x1]
64020ae0:	cmp    DWORD PTR [ebp+0x14],0x0
64020ae4:	jle    0x64020af7
64020ae6:	push   DWORD PTR [ebp+0x14]
64020ae9:	push   0x30
64020aeb:	push   esi
64020aec:	call   0x64014670
64020af1:	add    esp,0xc
64020af4:	add    esi,DWORD PTR [ebp+0x14]
64020af7:	mov    eax,DWORD PTR [ebp+0xc]
64020afa:	cmp    BYTE PTR [eax],0x0
64020afd:	jne    0x64020b01
64020aff:	mov    esi,eax
64020b01:	cmp    DWORD PTR [ebp+0x18],0x0
64020b05:	mov    cl,0x34
64020b07:	sete   al
64020b0a:	dec    al
64020b0c:	and    al,0xe0
64020b0e:	add    al,0x70
64020b10:	mov    BYTE PTR [esi],al
64020b12:	mov    eax,DWORD PTR [edi]
64020b14:	mov    edx,DWORD PTR [edi+0x4]
64020b17:	inc    esi
64020b18:	call   0x64021420
64020b1d:	xor    ebx,ebx
64020b1f:	and    eax,0x7ff
64020b24:	and    edx,ebx
64020b26:	sub    eax,DWORD PTR [ebp-0x14]
64020b29:	push   ebx
64020b2a:	pop    ecx
64020b2b:	sbb    edx,ecx
64020b2d:	js     0x64020b3b
64020b2f:	jg     0x64020b35
64020b31:	cmp    eax,ebx
64020b33:	jb     0x64020b3b
64020b35:	mov    BYTE PTR [esi],0x2b
64020b38:	inc    esi
64020b39:	jmp    0x64020b45
64020b3b:	mov    BYTE PTR [esi],0x2d
64020b3e:	inc    esi
64020b3f:	neg    eax
64020b41:	adc    edx,ebx
64020b43:	neg    edx
64020b45:	cmp    edx,ebx
64020b47:	mov    edi,esi
64020b49:	mov    BYTE PTR [esi],0x30
64020b4c:	jl     0x64020b72
64020b4e:	mov    ecx,0x3e8
64020b53:	jg     0x64020b59
64020b55:	cmp    eax,ecx
64020b57:	jb     0x64020b72
64020b59:	push   ebx
64020b5a:	push   ecx
64020b5b:	push   edx
64020b5c:	push   eax
64020b5d:	call   0x64021340
64020b62:	add    al,0x30
64020b64:	mov    BYTE PTR [esi],al
64020b66:	inc    esi
64020b67:	cmp    esi,edi
64020b69:	mov    DWORD PTR [ebp-0x10],edx
64020b6c:	mov    eax,ecx
64020b6e:	mov    edx,ebx
64020b70:	jne    0x64020b7d
64020b72:	test   edx,edx
64020b74:	jl     0x64020b94
64020b76:	jg     0x64020b7d
64020b78:	cmp    eax,0x64
64020b7b:	jb     0x64020b94
64020b7d:	push   0x0
64020b7f:	push   0x64
64020b81:	push   edx
64020b82:	push   eax
64020b83:	call   0x64021340
64020b88:	add    al,0x30
64020b8a:	mov    BYTE PTR [esi],al
64020b8c:	mov    DWORD PTR [ebp-0x10],edx
64020b8f:	inc    esi
64020b90:	mov    eax,ecx
64020b92:	mov    edx,ebx
64020b94:	cmp    esi,edi
64020b96:	jne    0x64020ba3
64020b98:	test   edx,edx
64020b9a:	jl     0x64020bbb
64020b9c:	jg     0x64020ba3
64020b9e:	cmp    eax,0xa
64020ba1:	jb     0x64020bbb
64020ba3:	push   0x0
64020ba5:	push   0xa
64020ba7:	push   edx
64020ba8:	push   eax
64020ba9:	call   0x64021340
64020bae:	add    al,0x30
64020bb0:	mov    BYTE PTR [esi],al
64020bb2:	mov    DWORD PTR [ebp-0x10],edx
64020bb5:	inc    esi
64020bb6:	mov    eax,ecx
64020bb8:	mov    DWORD PTR [ebp-0x10],ebx
64020bbb:	add    al,0x30
64020bbd:	mov    BYTE PTR [esi],al
64020bbf:	mov    BYTE PTR [esi+0x1],0x0
64020bc3:	cmp    BYTE PTR [ebp-0x18],0x0
64020bc7:	je     0x64020bd0
64020bc9:	mov    eax,DWORD PTR [ebp-0x1c]
64020bcc:	and    DWORD PTR [eax+0x70],0xfffffffd
64020bd0:	xor    eax,eax
64020bd2:	pop    ebx
64020bd3:	pop    edi
64020bd4:	pop    esi
64020bd5:	leave  
64020bd6:	ret    
64020bd7:	push   ebp
64020bd8:	mov    ebp,esp
64020bda:	sub    esp,0x10
64020bdd:	push   ebx
64020bde:	push   esi
64020bdf:	push   edi
64020be0:	push   DWORD PTR [ebp+0x14]
64020be3:	mov    ebx,eax
64020be5:	mov    esi,DWORD PTR [ebx+0x4]
64020be8:	mov    edi,ecx
64020bea:	lea    ecx,[ebp-0x10]
64020bed:	dec    esi
64020bee:	call   0x6401410f
64020bf3:	test   edi,edi
64020bf5:	jne    0x64020c24
64020bf7:	call   0x64015d30
64020bfc:	push   0x16
64020bfe:	pop    esi
64020bff:	mov    DWORD PTR [eax],esi
64020c01:	xor    eax,eax
64020c03:	push   eax
64020c04:	push   eax
64020c05:	push   eax
64020c06:	push   eax
64020c07:	push   eax
64020c08:	call   0x64013aa4
64020c0d:	add    esp,0x14
64020c10:	cmp    BYTE PTR [ebp-0x4],0x0
64020c14:	je     0x64020c1d
64020c16:	mov    eax,DWORD PTR [ebp-0x8]
64020c19:	and    DWORD PTR [eax+0x70],0xfffffffd
64020c1d:	mov    eax,esi
64020c1f:	jmp    0x64020cc7
64020c24:	cmp    DWORD PTR [ebp+0x8],0x0
64020c28:	jbe    0x64020bf7
64020c2a:	cmp    BYTE PTR [ebp+0x10],0x0
64020c2e:	je     0x64020c48
64020c30:	cmp    esi,DWORD PTR [ebp+0xc]
64020c33:	jne    0x64020c48
64020c35:	xor    eax,eax
64020c37:	cmp    DWORD PTR [ebx],0x2d
64020c3a:	sete   al
64020c3d:	add    eax,esi
64020c3f:	add    eax,edi
64020c41:	mov    BYTE PTR [eax],0x30
64020c44:	mov    BYTE PTR [eax+0x1],0x0
64020c48:	cmp    DWORD PTR [ebx],0x2d
64020c4b:	mov    esi,edi
64020c4d:	jne    0x64020c55
64020c4f:	mov    BYTE PTR [edi],0x2d
64020c52:	lea    esi,[edi+0x1]
64020c55:	mov    eax,DWORD PTR [ebx+0x4]
64020c58:	xor    edi,edi
64020c5a:	inc    edi
64020c5b:	test   eax,eax
64020c5d:	jg     0x64020c6c
64020c5f:	mov    eax,esi
64020c61:	call   0x640205d4
64020c66:	mov    BYTE PTR [esi],0x30
64020c69:	inc    esi
64020c6a:	jmp    0x64020c6e
64020c6c:	add    esi,eax
64020c6e:	cmp    DWORD PTR [ebp+0xc],0x0
64020c72:	jle    0x64020cb8
64020c74:	mov    eax,esi
64020c76:	call   0x640205d4
64020c7b:	mov    eax,DWORD PTR [ebp-0x10]
64020c7e:	mov    eax,DWORD PTR [eax+0xbc]
64020c84:	mov    eax,DWORD PTR [eax]
64020c86:	mov    al,BYTE PTR [eax]
64020c88:	mov    BYTE PTR [esi],al
64020c8a:	mov    ebx,DWORD PTR [ebx+0x4]
64020c8d:	inc    esi
64020c8e:	test   ebx,ebx
64020c90:	jge    0x64020cb8
64020c92:	neg    ebx
64020c94:	cmp    BYTE PTR [ebp+0x10],0x0
64020c98:	jne    0x64020c9f
64020c9a:	cmp    DWORD PTR [ebp+0xc],ebx
64020c9d:	jl     0x64020ca2
64020c9f:	mov    DWORD PTR [ebp+0xc],ebx
64020ca2:	mov    edi,DWORD PTR [ebp+0xc]
64020ca5:	mov    eax,esi
64020ca7:	call   0x640205d4
64020cac:	push   edi
64020cad:	push   0x30
64020caf:	push   esi
64020cb0:	call   0x64014670
64020cb5:	add    esp,0xc
64020cb8:	cmp    BYTE PTR [ebp-0x4],0x0
64020cbc:	je     0x64020cc5
64020cbe:	mov    eax,DWORD PTR [ebp-0x8]
64020cc1:	and    DWORD PTR [eax+0x70],0xfffffffd
64020cc5:	xor    eax,eax
64020cc7:	pop    edi
64020cc8:	pop    esi
64020cc9:	pop    ebx
64020cca:	leave  
64020ccb:	ret    
64020ccc:	push   ebp
64020ccd:	mov    ebp,esp
64020ccf:	sub    esp,0x2c
64020cd2:	mov    eax,ds:0x6402f09c
64020cd7:	xor    eax,ebp
64020cd9:	mov    DWORD PTR [ebp-0x4],eax
64020cdc:	mov    eax,DWORD PTR [ebp+0x8]
64020cdf:	push   ebx
64020ce0:	push   esi
64020ce1:	push   edi
64020ce2:	mov    edi,DWORD PTR [ebp+0xc]
64020ce5:	push   0x16
64020ce7:	pop    esi
64020ce8:	push   esi
64020ce9:	lea    ecx,[ebp-0x1c]
64020cec:	push   ecx
64020ced:	lea    ecx,[ebp-0x2c]
64020cf0:	push   ecx
64020cf1:	push   DWORD PTR [eax+0x4]
64020cf4:	push   DWORD PTR [eax]
64020cf6:	call   0x640212b1
64020cfb:	xor    ebx,ebx
64020cfd:	add    esp,0x14
64020d00:	cmp    edi,ebx
64020d02:	jne    0x64020d1c
64020d04:	call   0x64015d30
64020d09:	push   ebx
64020d0a:	push   ebx
64020d0b:	push   ebx
64020d0c:	push   ebx
64020d0d:	push   ebx
64020d0e:	mov    DWORD PTR [eax],esi
64020d10:	call   0x64013aa4
64020d15:	add    esp,0x14
64020d18:	mov    eax,esi
64020d1a:	jmp    0x64020d76
64020d1c:	mov    eax,DWORD PTR [ebp+0x10]
64020d1f:	cmp    eax,ebx
64020d21:	jbe    0x64020d04
64020d23:	cmp    eax,0xffffffff
64020d26:	jne    0x64020d2c
64020d28:	or     eax,eax
64020d2a:	jmp    0x64020d37
64020d2c:	xor    ecx,ecx
64020d2e:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020d32:	sete   cl
64020d35:	sub    eax,ecx
64020d37:	mov    esi,DWORD PTR [ebp+0x14]
64020d3a:	lea    ecx,[ebp-0x2c]
64020d3d:	push   ecx
64020d3e:	mov    ecx,DWORD PTR [ebp-0x28]
64020d41:	add    ecx,esi
64020d43:	push   ecx
64020d44:	push   eax
64020d45:	xor    eax,eax
64020d47:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020d4b:	sete   al
64020d4e:	add    eax,edi
64020d50:	push   eax
64020d51:	call   0x64021139
64020d56:	add    esp,0x10
64020d59:	cmp    eax,ebx
64020d5b:	je     0x64020d61
64020d5d:	mov    BYTE PTR [edi],bl
64020d5f:	jmp    0x64020d76
64020d61:	push   DWORD PTR [ebp+0x18]
64020d64:	lea    eax,[ebp-0x2c]
64020d67:	push   ebx
64020d68:	push   esi
64020d69:	push   DWORD PTR [ebp+0x10]
64020d6c:	mov    ecx,edi
64020d6e:	call   0x64020bd7
64020d73:	add    esp,0x10
64020d76:	mov    ecx,DWORD PTR [ebp-0x4]
64020d79:	pop    edi
64020d7a:	pop    esi
64020d7b:	xor    ecx,ebp
64020d7d:	pop    ebx
64020d7e:	call   0x64013f6c
64020d83:	leave  
64020d84:	ret    
64020d85:	push   ebp
64020d86:	mov    ebp,esp
64020d88:	sub    esp,0x30
64020d8b:	mov    eax,ds:0x6402f09c
64020d90:	xor    eax,ebp
64020d92:	mov    DWORD PTR [ebp-0x4],eax
64020d95:	mov    eax,DWORD PTR [ebp+0x8]
64020d98:	push   ebx
64020d99:	push   esi
64020d9a:	mov    esi,DWORD PTR [ebp+0xc]
64020d9d:	push   edi
64020d9e:	push   0x16
64020da0:	pop    edi
64020da1:	push   edi
64020da2:	lea    ecx,[ebp-0x1c]
64020da5:	push   ecx
64020da6:	lea    ecx,[ebp-0x30]
64020da9:	push   ecx
64020daa:	push   DWORD PTR [eax+0x4]
64020dad:	push   DWORD PTR [eax]
64020daf:	call   0x640212b1
64020db4:	xor    ebx,ebx
64020db6:	add    esp,0x14
64020db9:	cmp    esi,ebx
64020dbb:	jne    0x64020dd8
64020dbd:	call   0x64015d30
64020dc2:	push   ebx
64020dc3:	push   ebx
64020dc4:	push   ebx
64020dc5:	push   ebx
64020dc6:	push   ebx
64020dc7:	mov    DWORD PTR [eax],edi
64020dc9:	call   0x64013aa4
64020dce:	add    esp,0x14
64020dd1:	mov    eax,edi
64020dd3:	jmp    0x64020e6e
64020dd8:	mov    ecx,DWORD PTR [ebp+0x10]
64020ddb:	cmp    ecx,ebx
64020ddd:	jbe    0x64020dbd
64020ddf:	mov    eax,DWORD PTR [ebp-0x2c]
64020de2:	dec    eax
64020de3:	mov    DWORD PTR [ebp-0x20],eax
64020de6:	xor    eax,eax
64020de8:	cmp    DWORD PTR [ebp-0x30],0x2d
64020dec:	sete   al
64020def:	cmp    ecx,0xffffffff
64020df2:	lea    edi,[eax+esi*1]
64020df5:	jne    0x64020dfb
64020df7:	or     ecx,ecx
64020df9:	jmp    0x64020dfd
64020dfb:	sub    ecx,eax
64020dfd:	lea    eax,[ebp-0x30]
64020e00:	push   eax
64020e01:	push   DWORD PTR [ebp+0x14]
64020e04:	push   ecx
64020e05:	push   edi
64020e06:	call   0x64021139
64020e0b:	add    esp,0x10
64020e0e:	cmp    eax,ebx
64020e10:	je     0x64020e16
64020e12:	mov    BYTE PTR [esi],bl
64020e14:	jmp    0x64020e6e
64020e16:	mov    eax,DWORD PTR [ebp-0x2c]
64020e19:	dec    eax
64020e1a:	cmp    DWORD PTR [ebp-0x20],eax
64020e1d:	setl   cl
64020e20:	cmp    eax,0xfffffffc
64020e23:	jl     0x64020e52
64020e25:	cmp    eax,DWORD PTR [ebp+0x14]
64020e28:	jge    0x64020e52
64020e2a:	cmp    cl,bl
64020e2c:	je     0x64020e38
64020e2e:	mov    al,BYTE PTR [edi]
64020e30:	inc    edi
64020e31:	test   al,al
64020e33:	jne    0x64020e2e
64020e35:	mov    BYTE PTR [edi-0x2],bl
64020e38:	push   DWORD PTR [ebp+0x1c]
64020e3b:	lea    eax,[ebp-0x30]
64020e3e:	push   0x1
64020e40:	push   DWORD PTR [ebp+0x14]
64020e43:	mov    ecx,esi
64020e45:	push   DWORD PTR [ebp+0x10]
64020e48:	call   0x64020bd7
64020e4d:	add    esp,0x10
64020e50:	jmp    0x64020e6e
64020e52:	push   DWORD PTR [ebp+0x1c]
64020e55:	lea    eax,[ebp-0x30]
64020e58:	push   0x1
64020e5a:	push   eax
64020e5b:	push   DWORD PTR [ebp+0x18]
64020e5e:	mov    eax,esi
64020e60:	push   DWORD PTR [ebp+0x14]
64020e63:	push   DWORD PTR [ebp+0x10]
64020e66:	call   0x6402060d
64020e6b:	add    esp,0x18
64020e6e:	mov    ecx,DWORD PTR [ebp-0x4]
64020e71:	pop    edi
64020e72:	pop    esi
64020e73:	xor    ecx,ebp
64020e75:	pop    ebx
64020e76:	call   0x64013f6c
64020e7b:	leave  
64020e7c:	ret    
64020e7d:	push   ebp
64020e7e:	mov    ebp,esp
64020e80:	mov    eax,DWORD PTR [ebp+0x14]
64020e83:	cmp    eax,0x65
64020e86:	je     0x64020ee7
64020e88:	cmp    eax,0x45
64020e8b:	je     0x64020ee7
64020e8d:	cmp    eax,0x66
64020e90:	jne    0x64020eab
64020e92:	push   DWORD PTR [ebp+0x20]
64020e95:	push   DWORD PTR [ebp+0x18]
64020e98:	push   DWORD PTR [ebp+0x10]
64020e9b:	push   DWORD PTR [ebp+0xc]
64020e9e:	push   DWORD PTR [ebp+0x8]
64020ea1:	call   0x64020ccc
64020ea6:	add    esp,0x14
64020ea9:	pop    ebp
64020eaa:	ret    
64020eab:	cmp    eax,0x61
64020eae:	je     0x64020ece
64020eb0:	cmp    eax,0x41
64020eb3:	je     0x64020ece
64020eb5:	push   DWORD PTR [ebp+0x20]
64020eb8:	push   DWORD PTR [ebp+0x1c]
64020ebb:	push   DWORD PTR [ebp+0x18]
64020ebe:	push   DWORD PTR [ebp+0x10]
64020ec1:	push   DWORD PTR [ebp+0xc]
64020ec4:	push   DWORD PTR [ebp+0x8]
64020ec7:	call   0x64020d85
64020ecc:	jmp    0x64020efe
64020ece:	push   DWORD PTR [ebp+0x20]
64020ed1:	push   DWORD PTR [ebp+0x1c]
64020ed4:	push   DWORD PTR [ebp+0x18]
64020ed7:	push   DWORD PTR [ebp+0x10]
64020eda:	push   DWORD PTR [ebp+0xc]
64020edd:	push   DWORD PTR [ebp+0x8]
64020ee0:	call   0x64020866
64020ee5:	jmp    0x64020efe
64020ee7:	push   DWORD PTR [ebp+0x20]
64020eea:	push   DWORD PTR [ebp+0x1c]
64020eed:	push   DWORD PTR [ebp+0x18]
64020ef0:	push   DWORD PTR [ebp+0x10]
64020ef3:	push   DWORD PTR [ebp+0xc]
64020ef6:	push   DWORD PTR [ebp+0x8]
64020ef9:	call   0x6402077a
64020efe:	add    esp,0x18
64020f01:	pop    ebp
64020f02:	ret    
64020f03:	push   ebp
64020f04:	mov    ebp,esp
64020f06:	push   0x0
64020f08:	push   DWORD PTR [ebp+0x1c]
64020f0b:	push   DWORD PTR [ebp+0x18]
64020f0e:	push   DWORD PTR [ebp+0x14]
64020f11:	push   DWORD PTR [ebp+0x10]
64020f14:	push   DWORD PTR [ebp+0xc]
64020f17:	push   DWORD PTR [ebp+0x8]
64020f1a:	call   0x64020e7d
64020f1f:	add    esp,0x1c
64020f22:	pop    ebp
64020f23:	ret    
64020f24:	push   esi
64020f25:	push   0x30000
64020f2a:	push   0x10000
64020f2f:	xor    esi,esi
64020f31:	push   esi
64020f32:	call   0x6402143f
64020f37:	add    esp,0xc
64020f3a:	test   eax,eax
64020f3c:	je     0x64020f4b
64020f3e:	push   esi
64020f3f:	push   esi
64020f40:	push   esi
64020f41:	push   esi
64020f42:	push   esi
64020f43:	call   0x640139a8
64020f48:	add    esp,0x14
64020f4b:	pop    esi
64020f4c:	ret    
64020f4d:	push   ebp
64020f4e:	mov    ebp,esp
64020f50:	sub    esp,0x18
64020f53:	fld    QWORD PTR ds:0x640285e8
64020f59:	fstp   QWORD PTR [ebp-0x10]
64020f5c:	fld    QWORD PTR ds:0x640285e0
64020f62:	fstp   QWORD PTR [ebp-0x18]
64020f65:	fld    QWORD PTR [ebp-0x18]
64020f68:	fdiv   QWORD PTR [ebp-0x10]
64020f6b:	fmul   QWORD PTR [ebp-0x10]
64020f6e:	fsubr  QWORD PTR [ebp-0x18]
64020f71:	fstp   QWORD PTR [ebp-0x8]
64020f74:	fld1   
64020f76:	fcomp  QWORD PTR [ebp-0x8]
64020f79:	fnstsw ax
64020f7b:	test   ah,0x5
64020f7e:	jp     0x64020f85
64020f80:	xor    eax,eax
64020f82:	inc    eax
64020f83:	leave  
64020f84:	ret    
64020f85:	xor    eax,eax
64020f87:	leave  
64020f88:	ret    
64020f89:	push   0x6402860c
64020f8e:	call   DWORD PTR ds:0x64026124
64020f94:	test   eax,eax
64020f96:	je     0x64020fad
64020f98:	push   0x640285f0
64020f9d:	push   eax
64020f9e:	call   DWORD PTR ds:0x64026014
64020fa4:	test   eax,eax
64020fa6:	je     0x64020fad
64020fa8:	push   0x0
64020faa:	call   eax
64020fac:	ret    
64020fad:	jmp    0x64020f4d
64020fb2:	int3   
64020fb3:	int3   
64020fb4:	int3   
64020fb5:	int3   
64020fb6:	int3   
64020fb7:	int3   
64020fb8:	int3   
64020fb9:	int3   
64020fba:	int3   
64020fbb:	int3   
64020fbc:	int3   
64020fbd:	int3   
64020fbe:	int3   
64020fbf:	int3   
64020fc0:	push   ebp
64020fc1:	mov    ebp,esp
64020fc3:	push   edi
64020fc4:	mov    edi,DWORD PTR [ebp+0x8]
64020fc7:	xor    eax,eax
64020fc9:	or     ecx,0xffffffff
64020fcc:	repnz scas al,BYTE PTR es:[edi]
64020fce:	add    ecx,0x1
64020fd1:	neg    ecx
64020fd3:	sub    edi,0x1
64020fd6:	mov    al,BYTE PTR [ebp+0xc]
64020fd9:	std    
64020fda:	repnz scas al,BYTE PTR es:[edi]
64020fdc:	add    edi,0x1
64020fdf:	cmp    BYTE PTR [edi],al
64020fe1:	je     0x64020fe7
64020fe3:	xor    eax,eax
64020fe5:	jmp    0x64020fe9
64020fe7:	mov    eax,edi
64020fe9:	cld    
64020fea:	pop    edi
64020feb:	leave  
64020fec:	ret    
64020fed:	push   ebp
64020fee:	mov    ebp,esp
64020ff0:	sub    esp,0x28
64020ff3:	mov    eax,ds:0x6402f09c
64020ff8:	xor    eax,ebp
64020ffa:	mov    DWORD PTR [ebp-0x4],eax
64020ffd:	push   ebx
64020ffe:	push   esi
64020fff:	mov    esi,DWORD PTR [ebp+0x8]
64021002:	push   edi
64021003:	push   DWORD PTR [ebp+0x10]
64021006:	mov    edi,DWORD PTR [ebp+0xc]
64021009:	lea    ecx,[ebp-0x24]
6402100c:	call   0x6401410f
64021011:	lea    eax,[ebp-0x24]
64021014:	push   eax
64021015:	xor    ebx,ebx
64021017:	push   ebx
64021018:	push   ebx
64021019:	push   ebx
6402101a:	push   ebx
6402101b:	push   edi
6402101c:	lea    eax,[ebp-0x28]
6402101f:	push   eax
64021020:	lea    eax,[ebp-0x10]
64021023:	push   eax
64021024:	call   0x64021f2d
64021029:	mov    DWORD PTR [ebp-0x14],eax
6402102c:	lea    eax,[ebp-0x10]
6402102f:	push   esi
64021030:	push   eax
64021031:	call   0x640214a9
64021036:	add    esp,0x28
64021039:	test   BYTE PTR [ebp-0x14],0x3
6402103d:	jne    0x6402106a
6402103f:	cmp    eax,0x1
64021042:	jne    0x64021055
64021044:	cmp    BYTE PTR [ebp-0x18],bl
64021047:	je     0x64021050
64021049:	mov    eax,DWORD PTR [ebp-0x1c]
6402104c:	and    DWORD PTR [eax+0x70],0xfffffffd
64021050:	push   0x3
64021052:	pop    eax
64021053:	jmp    0x64021084
64021055:	cmp    eax,0x2
64021058:	jne    0x64021076
6402105a:	cmp    BYTE PTR [ebp-0x18],bl
6402105d:	je     0x64021066
6402105f:	mov    eax,DWORD PTR [ebp-0x1c]
64021062:	and    DWORD PTR [eax+0x70],0xfffffffd
64021066:	push   0x4
64021068:	jmp    0x64021052
6402106a:	test   BYTE PTR [ebp-0x14],0x1
6402106e:	jne    0x6402105a
64021070:	test   BYTE PTR [ebp-0x14],0x2
64021074:	jne    0x64021044
64021076:	cmp    BYTE PTR [ebp-0x18],bl
64021079:	je     0x64021082
6402107b:	mov    eax,DWORD PTR [ebp-0x1c]
6402107e:	and    DWORD PTR [eax+0x70],0xfffffffd
64021082:	xor    eax,eax
64021084:	mov    ecx,DWORD PTR [ebp-0x4]
64021087:	pop    edi
64021088:	pop    esi
64021089:	xor    ecx,ebp
6402108b:	pop    ebx
6402108c:	call   0x64013f6c
64021091:	leave  
64021092:	ret    
64021093:	push   ebp
64021094:	mov    ebp,esp
64021096:	sub    esp,0x28
64021099:	mov    eax,ds:0x6402f09c
6402109e:	xor    eax,ebp
640210a0:	mov    DWORD PTR [ebp-0x4],eax
640210a3:	push   ebx
640210a4:	push   esi
640210a5:	mov    esi,DWORD PTR [ebp+0x8]
640210a8:	push   edi
640210a9:	push   DWORD PTR [ebp+0x10]
640210ac:	mov    edi,DWORD PTR [ebp+0xc]
640210af:	lea    ecx,[ebp-0x24]
640210b2:	call   0x6401410f
640210b7:	lea    eax,[ebp-0x24]
640210ba:	push   eax
640210bb:	xor    ebx,ebx
640210bd:	push   ebx
640210be:	push   ebx
640210bf:	push   ebx
640210c0:	push   ebx
640210c1:	push   edi
640210c2:	lea    eax,[ebp-0x28]
640210c5:	push   eax
640210c6:	lea    eax,[ebp-0x10]
640210c9:	push   eax
640210ca:	call   0x64021f2d
640210cf:	mov    DWORD PTR [ebp-0x14],eax
640210d2:	lea    eax,[ebp-0x10]
640210d5:	push   esi
640210d6:	push   eax
640210d7:	call   0x640219eb
640210dc:	add    esp,0x28
640210df:	test   BYTE PTR [ebp-0x14],0x3
640210e3:	jne    0x64021110
640210e5:	cmp    eax,0x1
640210e8:	jne    0x640210fb
640210ea:	cmp    BYTE PTR [ebp-0x18],bl
640210ed:	je     0x640210f6
640210ef:	mov    eax,DWORD PTR [ebp-0x1c]
640210f2:	and    DWORD PTR [eax+0x70],0xfffffffd
640210f6:	push   0x3
640210f8:	pop    eax
640210f9:	jmp    0x6402112a
640210fb:	cmp    eax,0x2
640210fe:	jne    0x6402111c
64021100:	cmp    BYTE PTR [ebp-0x18],bl
64021103:	je     0x6402110c
64021105:	mov    eax,DWORD PTR [ebp-0x1c]
64021108:	and    DWORD PTR [eax+0x70],0xfffffffd
6402110c:	push   0x4
6402110e:	jmp    0x640210f8
64021110:	test   BYTE PTR [ebp-0x14],0x1
64021114:	jne    0x64021100
64021116:	test   BYTE PTR [ebp-0x14],0x2
6402111a:	jne    0x640210ea
6402111c:	cmp    BYTE PTR [ebp-0x18],bl
6402111f:	je     0x64021128
64021121:	mov    eax,DWORD PTR [ebp-0x1c]
64021124:	and    DWORD PTR [eax+0x70],0xfffffffd
64021128:	xor    eax,eax
6402112a:	mov    ecx,DWORD PTR [ebp-0x4]
6402112d:	pop    edi
6402112e:	pop    esi
6402112f:	xor    ecx,ebp
64021131:	pop    ebx
64021132:	call   0x64013f6c
64021137:	leave  
64021138:	ret    
64021139:	push   ebp
6402113a:	mov    ebp,esp
6402113c:	mov    ecx,DWORD PTR [ebp+0x14]
6402113f:	push   ebx
64021140:	push   esi
64021141:	mov    esi,DWORD PTR [ebp+0x8]
64021144:	xor    ebx,ebx
64021146:	cmp    esi,ebx
64021148:	push   edi
64021149:	mov    edi,DWORD PTR [ecx+0xc]
6402114c:	jne    0x6402116c
6402114e:	call   0x64015d30
64021153:	push   0x16
64021155:	pop    esi
64021156:	mov    DWORD PTR [eax],esi
64021158:	push   ebx
64021159:	push   ebx
6402115a:	push   ebx
6402115b:	push   ebx
6402115c:	push   ebx
6402115d:	call   0x64013aa4
64021162:	add    esp,0x14
64021165:	mov    eax,esi
64021167:	jmp    0x640211f1
6402116c:	cmp    DWORD PTR [ebp+0xc],ebx
6402116f:	jbe    0x6402114e
64021171:	mov    edx,DWORD PTR [ebp+0x10]
64021174:	cmp    edx,ebx
64021176:	mov    BYTE PTR [esi],bl
64021178:	jle    0x6402117e
6402117a:	mov    eax,edx
6402117c:	jmp    0x64021180
6402117e:	xor    eax,eax
64021180:	inc    eax
64021181:	cmp    DWORD PTR [ebp+0xc],eax
64021184:	ja     0x64021194
64021186:	call   0x64015d30
6402118b:	push   0x22
6402118d:	pop    ecx
6402118e:	mov    DWORD PTR [eax],ecx
64021190:	mov    esi,ecx
64021192:	jmp    0x64021158
64021194:	cmp    edx,ebx
64021196:	mov    BYTE PTR [esi],0x30
64021199:	lea    eax,[esi+0x1]
6402119c:	jle    0x640211b8
6402119e:	mov    cl,BYTE PTR [edi]
640211a0:	cmp    cl,bl
640211a2:	je     0x640211aa
640211a4:	movsx  ecx,cl
640211a7:	inc    edi
640211a8:	jmp    0x640211ad
640211aa:	push   0x30
640211ac:	pop    ecx
640211ad:	mov    BYTE PTR [eax],cl
640211af:	inc    eax
640211b0:	dec    edx
640211b1:	cmp    edx,ebx
640211b3:	jg     0x6402119e
640211b5:	mov    ecx,DWORD PTR [ebp+0x14]
640211b8:	cmp    edx,ebx
640211ba:	mov    BYTE PTR [eax],bl
640211bc:	jl     0x640211d0
640211be:	cmp    BYTE PTR [edi],0x35
640211c1:	jl     0x640211d0
640211c3:	jmp    0x640211c8
640211c5:	mov    BYTE PTR [eax],0x30
640211c8:	dec    eax
640211c9:	cmp    BYTE PTR [eax],0x39
640211cc:	je     0x640211c5
640211ce:	inc    BYTE PTR [eax]
640211d0:	cmp    BYTE PTR [esi],0x31
640211d3:	jne    0x640211da
640211d5:	inc    DWORD PTR [ecx+0x4]
640211d8:	jmp    0x640211ef
640211da:	lea    edi,[esi+0x1]
640211dd:	push   edi
640211de:	call   0x64015730
640211e3:	inc    eax
640211e4:	push   eax
640211e5:	push   edi
640211e6:	push   esi
640211e7:	call   0x64014fb0
640211ec:	add    esp,0x10
640211ef:	xor    eax,eax
640211f1:	pop    edi
640211f2:	pop    esi
640211f3:	pop    ebx
640211f4:	pop    ebp
640211f5:	ret    
640211f6:	push   ebp
640211f7:	mov    ebp,esp
640211f9:	push   ecx
640211fa:	mov    edx,DWORD PTR [ebp+0xc]
640211fd:	movzx  eax,WORD PTR [edx+0x6]
64021201:	push   ebx
64021202:	mov    ecx,eax
64021204:	push   esi
64021205:	push   edi
64021206:	shr    ecx,0x4
64021209:	and    eax,0x8000
6402120e:	mov    edi,0x7ff
64021213:	and    ecx,edi
64021215:	mov    DWORD PTR [ebp+0xc],eax
64021218:	mov    eax,DWORD PTR [edx+0x4]
6402121b:	mov    edx,DWORD PTR [edx]
6402121d:	movzx  ebx,cx
64021220:	mov    esi,0x80000000
64021225:	and    eax,0xfffff
6402122a:	test   ebx,ebx
6402122c:	mov    DWORD PTR [ebp-0x4],esi
6402122f:	je     0x64021244
64021231:	cmp    ebx,edi
64021233:	je     0x6402123d
64021235:	add    ecx,0x3c00
6402123b:	jmp    0x64021265
6402123d:	mov    edi,0x7fff
64021242:	jmp    0x64021268
64021244:	xor    ebx,ebx
64021246:	cmp    eax,ebx
64021248:	jne    0x6402125c
6402124a:	cmp    edx,ebx
6402124c:	jne    0x6402125c
6402124e:	mov    eax,DWORD PTR [ebp+0x8]
64021251:	mov    cx,WORD PTR [ebp+0xc]
64021255:	mov    DWORD PTR [eax+0x4],ebx
64021258:	mov    DWORD PTR [eax],ebx
6402125a:	jmp    0x640212a8
6402125c:	add    ecx,0x3c01
64021262:	mov    DWORD PTR [ebp-0x4],ebx
64021265:	movzx  edi,cx
64021268:	mov    ecx,edx
6402126a:	shr    ecx,0x15
6402126d:	shl    eax,0xb
64021270:	or     ecx,eax
64021272:	or     ecx,DWORD PTR [ebp-0x4]
64021275:	mov    eax,DWORD PTR [ebp+0x8]
64021278:	shl    edx,0xb
6402127b:	test   esi,ecx
6402127d:	mov    DWORD PTR [eax+0x4],ecx
64021280:	mov    DWORD PTR [eax],edx
64021282:	jne    0x640212a3
64021284:	mov    ecx,DWORD PTR [eax]
64021286:	mov    edx,DWORD PTR [eax+0x4]
64021289:	mov    ebx,ecx
6402128b:	add    edx,edx
6402128d:	shr    ebx,0x1f
64021290:	or     edx,ebx
64021292:	add    ecx,ecx
64021294:	add    edi,0xffff
6402129a:	test   esi,edx
6402129c:	mov    DWORD PTR [eax+0x4],edx
6402129f:	mov    DWORD PTR [eax],ecx
640212a1:	je     0x64021284
640212a3:	mov    ecx,DWORD PTR [ebp+0xc]
640212a6:	or     ecx,edi
640212a8:	pop    edi
640212a9:	pop    esi
640212aa:	mov    WORD PTR [eax+0x8],cx
640212ae:	pop    ebx
640212af:	leave  
640212b0:	ret    
640212b1:	push   ebp
640212b2:	mov    ebp,esp
640212b4:	sub    esp,0x30
640212b7:	mov    eax,ds:0x6402f09c
640212bc:	xor    eax,ebp
640212be:	mov    DWORD PTR [ebp-0x4],eax
640212c1:	mov    eax,DWORD PTR [ebp+0x14]
640212c4:	push   ebx
640212c5:	mov    ebx,DWORD PTR [ebp+0x10]
640212c8:	push   esi
640212c9:	mov    DWORD PTR [ebp-0x30],eax
640212cc:	push   edi
640212cd:	lea    eax,[ebp+0x8]
640212d0:	push   eax
640212d1:	lea    eax,[ebp-0x10]
640212d4:	push   eax
640212d5:	call   0x640211f6
640212da:	pop    ecx
640212db:	pop    ecx
640212dc:	lea    eax,[ebp-0x2c]
640212df:	push   eax
640212e0:	push   0x0
640212e2:	push   0x11
640212e4:	sub    esp,0xc
640212e7:	lea    esi,[ebp-0x10]
640212ea:	mov    edi,esp
640212ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640212ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640212ee:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
640212f0:	call   0x640225ed
640212f5:	mov    esi,DWORD PTR [ebp-0x30]
640212f8:	mov    DWORD PTR [ebx+0x8],eax
640212fb:	movsx  eax,BYTE PTR [ebp-0x2a]
640212ff:	mov    DWORD PTR [ebx],eax
64021301:	movsx  eax,WORD PTR [ebp-0x2c]
64021305:	mov    DWORD PTR [ebx+0x4],eax
64021308:	lea    eax,[ebp-0x28]
6402130b:	push   eax
6402130c:	push   DWORD PTR [ebp+0x18]
6402130f:	push   esi
64021310:	call   0x64015928
64021315:	add    esp,0x24
64021318:	test   eax,eax
6402131a:	je     0x6402132b
6402131c:	xor    eax,eax
6402131e:	push   eax
6402131f:	push   eax
64021320:	push   eax
64021321:	push   eax
64021322:	push   eax
64021323:	call   0x640139a8
64021328:	add    esp,0x14
6402132b:	mov    ecx,DWORD PTR [ebp-0x4]
6402132e:	pop    edi
6402132f:	mov    DWORD PTR [ebx+0xc],esi
64021332:	pop    esi
64021333:	mov    eax,ebx
64021335:	xor    ecx,ebp
64021337:	pop    ebx
64021338:	call   0x64013f6c
6402133d:	leave  
6402133e:	ret    
6402133f:	int3   
64021340:	push   edi
64021341:	push   esi
64021342:	push   ebp
64021343:	xor    edi,edi
64021345:	xor    ebp,ebp
64021347:	mov    eax,DWORD PTR [esp+0x14]
6402134b:	or     eax,eax
6402134d:	jge    0x64021364
6402134f:	inc    edi
64021350:	inc    ebp
64021351:	mov    edx,DWORD PTR [esp+0x10]
64021355:	neg    eax
64021357:	neg    edx
64021359:	sbb    eax,0x0
6402135c:	mov    DWORD PTR [esp+0x14],eax
64021360:	mov    DWORD PTR [esp+0x10],edx
64021364:	mov    eax,DWORD PTR [esp+0x1c]
64021368:	or     eax,eax
6402136a:	jge    0x64021380
6402136c:	inc    edi
6402136d:	mov    edx,DWORD PTR [esp+0x18]
64021371:	neg    eax
64021373:	neg    edx
64021375:	sbb    eax,0x0
64021378:	mov    DWORD PTR [esp+0x1c],eax
6402137c:	mov    DWORD PTR [esp+0x18],edx
64021380:	or     eax,eax
64021382:	jne    0x640213ac
64021384:	mov    ecx,DWORD PTR [esp+0x18]
64021388:	mov    eax,DWORD PTR [esp+0x14]
6402138c:	xor    edx,edx
6402138e:	div    ecx
64021390:	mov    ebx,eax
64021392:	mov    eax,DWORD PTR [esp+0x10]
64021396:	div    ecx
64021398:	mov    esi,eax
6402139a:	mov    eax,ebx
6402139c:	mul    DWORD PTR [esp+0x18]
640213a0:	mov    ecx,eax
640213a2:	mov    eax,esi
640213a4:	mul    DWORD PTR [esp+0x18]
640213a8:	add    edx,ecx
640213aa:	jmp    0x640213f3
640213ac:	mov    ebx,eax
640213ae:	mov    ecx,DWORD PTR [esp+0x18]
640213b2:	mov    edx,DWORD PTR [esp+0x14]
640213b6:	mov    eax,DWORD PTR [esp+0x10]
640213ba:	shr    ebx,1
640213bc:	rcr    ecx,1
640213be:	shr    edx,1
640213c0:	rcr    eax,1
640213c2:	or     ebx,ebx
640213c4:	jne    0x640213ba
640213c6:	div    ecx
640213c8:	mov    esi,eax
640213ca:	mul    DWORD PTR [esp+0x1c]
640213ce:	mov    ecx,eax
640213d0:	mov    eax,DWORD PTR [esp+0x18]
640213d4:	mul    esi
640213d6:	add    edx,ecx
640213d8:	jb     0x640213e8
640213da:	cmp    edx,DWORD PTR [esp+0x14]
640213de:	ja     0x640213e8
640213e0:	jb     0x640213f1
640213e2:	cmp    eax,DWORD PTR [esp+0x10]
640213e6:	jbe    0x640213f1
640213e8:	dec    esi
640213e9:	sub    eax,DWORD PTR [esp+0x18]
640213ed:	sbb    edx,DWORD PTR [esp+0x1c]
640213f1:	xor    ebx,ebx
640213f3:	sub    eax,DWORD PTR [esp+0x10]
640213f7:	sbb    edx,DWORD PTR [esp+0x14]
640213fb:	dec    ebp
640213fc:	jns    0x64021405
640213fe:	neg    edx
64021400:	neg    eax
64021402:	sbb    edx,0x0
64021405:	mov    ecx,edx
64021407:	mov    edx,ebx
64021409:	mov    ebx,ecx
6402140b:	mov    ecx,eax
6402140d:	mov    eax,esi
6402140f:	dec    edi
64021410:	jne    0x64021419
64021412:	neg    edx
64021414:	neg    eax
64021416:	sbb    edx,0x0
64021419:	pop    ebp
6402141a:	pop    esi
6402141b:	pop    edi
6402141c:	ret    0x10
6402141f:	int3   
64021420:	cmp    cl,0x40
64021423:	jae    0x6402143a
64021425:	cmp    cl,0x20
64021428:	jae    0x64021430
6402142a:	shrd   eax,edx,cl
6402142d:	shr    edx,cl
6402142f:	ret    
64021430:	mov    eax,edx
64021432:	xor    edx,edx
64021434:	and    cl,0x1f
64021437:	shr    eax,cl
64021439:	ret    
6402143a:	xor    eax,eax
6402143c:	xor    edx,edx
6402143e:	ret    
6402143f:	push   ebp
64021440:	mov    ebp,esp
64021442:	mov    eax,DWORD PTR [ebp+0x10]
64021445:	mov    ecx,DWORD PTR [ebp+0xc]
64021448:	and    eax,0xfff7ffff
6402144d:	and    ecx,eax
6402144f:	test   ecx,0xfcf0fce0
64021455:	push   esi
64021456:	je     0x64021489
64021458:	push   edi
64021459:	mov    edi,DWORD PTR [ebp+0x8]
6402145c:	xor    esi,esi
6402145e:	cmp    edi,esi
64021460:	je     0x6402146d
64021462:	push   esi
64021463:	push   esi
64021464:	call   0x64022fe1
64021469:	pop    ecx
6402146a:	pop    ecx
6402146b:	mov    DWORD PTR [edi],eax
6402146d:	call   0x64015d30
64021472:	push   0x16
64021474:	pop    edi
64021475:	push   esi
64021476:	push   esi
64021477:	push   esi
64021478:	push   esi
64021479:	push   esi
6402147a:	mov    DWORD PTR [eax],edi
6402147c:	call   0x64013aa4
64021481:	add    esp,0x14
64021484:	mov    eax,edi
64021486:	pop    edi
64021487:	jmp    0x640214a6
64021489:	mov    esi,DWORD PTR [ebp+0x8]
6402148c:	test   esi,esi
6402148e:	push   eax
6402148f:	push   DWORD PTR [ebp+0xc]
64021492:	je     0x6402149d
64021494:	call   0x64022fe1
64021499:	mov    DWORD PTR [esi],eax
6402149b:	jmp    0x640214a2
6402149d:	call   0x64022fe1
640214a2:	pop    ecx
640214a3:	pop    ecx
640214a4:	xor    eax,eax
640214a6:	pop    esi
640214a7:	pop    ebp
640214a8:	ret    
640214a9:	push   ebp
640214aa:	mov    ebp,esp
640214ac:	sub    esp,0x2c
640214af:	mov    eax,DWORD PTR [ebp+0x8]
640214b2:	movzx  ecx,WORD PTR [eax+0xa]
640214b6:	push   ebx
640214b7:	mov    ebx,ecx
640214b9:	and    ecx,0x8000
640214bf:	mov    DWORD PTR [ebp-0x14],ecx
640214c2:	mov    ecx,DWORD PTR [eax+0x6]
640214c5:	mov    DWORD PTR [ebp-0x20],ecx
640214c8:	mov    ecx,DWORD PTR [eax+0x2]
640214cb:	movzx  eax,WORD PTR [eax]
640214ce:	and    ebx,0x7fff
640214d4:	sub    ebx,0x3fff
640214da:	shl    eax,0x10
640214dd:	cmp    ebx,0xffffc001
640214e3:	push   edi
640214e4:	mov    DWORD PTR [ebp-0x1c],ecx
640214e7:	mov    DWORD PTR [ebp-0x18],eax
640214ea:	jne    0x64021513
640214ec:	xor    ebx,ebx
640214ee:	xor    eax,eax
640214f0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
640214f4:	jne    0x64021503
640214f6:	inc    eax
640214f7:	cmp    eax,0x3
640214fa:	jl     0x640214f0
640214fc:	xor    eax,eax
640214fe:	jmp    0x640219a8
64021503:	xor    eax,eax
64021505:	lea    edi,[ebp-0x20]
64021508:	stos   DWORD PTR es:[edi],eax
64021509:	stos   DWORD PTR es:[edi],eax
6402150a:	push   0x2
6402150c:	stos   DWORD PTR es:[edi],eax
6402150d:	pop    eax
6402150e:	jmp    0x640219a8
64021513:	and    DWORD PTR [ebp+0x8],0x0
64021517:	push   esi
64021518:	lea    esi,[ebp-0x20]
6402151b:	lea    edi,[ebp-0x2c]
6402151e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402151f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021521:	mov    esi,DWORD PTR ds:0x64030078
64021527:	dec    esi
64021528:	lea    ecx,[esi+0x1]
6402152b:	mov    eax,ecx
6402152d:	cdq    
6402152e:	and    edx,0x1f
64021531:	add    eax,edx
64021533:	sar    eax,0x5
64021536:	mov    edx,ecx
64021538:	and    edx,0x8000001f
6402153e:	mov    DWORD PTR [ebp-0x10],ebx
64021541:	mov    DWORD PTR [ebp-0xc],eax
64021544:	jns    0x6402154b
64021546:	dec    edx
64021547:	or     edx,0xffffffe0
6402154a:	inc    edx
6402154b:	lea    edi,[ebp+eax*4-0x20]
6402154f:	push   0x1f
64021551:	xor    eax,eax
64021553:	pop    ecx
64021554:	sub    ecx,edx
64021556:	inc    eax
64021557:	shl    eax,cl
64021559:	mov    DWORD PTR [ebp-0x8],ecx
6402155c:	test   DWORD PTR [edi],eax
6402155e:	je     0x640215f1
64021564:	mov    eax,DWORD PTR [ebp-0xc]
64021567:	or     edx,0xffffffff
6402156a:	shl    edx,cl
6402156c:	not    edx
6402156e:	test   DWORD PTR [ebp+eax*4-0x20],edx
64021572:	jmp    0x64021579
64021574:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021579:	jne    0x64021583
6402157b:	inc    eax
6402157c:	cmp    eax,0x3
6402157f:	jl     0x64021574
64021581:	jmp    0x640215f1
64021583:	mov    eax,esi
64021585:	cdq    
64021586:	push   0x1f
64021588:	pop    ecx
64021589:	and    edx,ecx
6402158b:	add    eax,edx
6402158d:	sar    eax,0x5
64021590:	and    esi,0x8000001f
64021596:	jns    0x6402159d
64021598:	dec    esi
64021599:	or     esi,0xffffffe0
6402159c:	inc    esi
6402159d:	and    DWORD PTR [ebp-0x4],0x0
640215a1:	sub    ecx,esi
640215a3:	xor    edx,edx
640215a5:	inc    edx
640215a6:	shl    edx,cl
640215a8:	lea    ecx,[ebp+eax*4-0x20]
640215ac:	mov    esi,DWORD PTR [ecx]
640215ae:	add    esi,edx
640215b0:	mov    DWORD PTR [ebp+0x8],esi
640215b3:	mov    esi,DWORD PTR [ecx]
640215b5:	cmp    DWORD PTR [ebp+0x8],esi
640215b8:	jb     0x640215dc
640215ba:	cmp    DWORD PTR [ebp+0x8],edx
640215bd:	jmp    0x640215da
640215bf:	test   ecx,ecx
640215c1:	je     0x640215ee
640215c3:	and    DWORD PTR [ebp-0x4],0x0
640215c7:	lea    ecx,[ebp+eax*4-0x20]
640215cb:	mov    edx,DWORD PTR [ecx]
640215cd:	lea    esi,[edx+0x1]
640215d0:	cmp    esi,edx
640215d2:	mov    DWORD PTR [ebp+0x8],esi
640215d5:	jb     0x640215dc
640215d7:	cmp    esi,0x1
640215da:	jae    0x640215e3
640215dc:	mov    DWORD PTR [ebp-0x4],0x1
640215e3:	dec    eax
640215e4:	mov    edx,DWORD PTR [ebp+0x8]
640215e7:	mov    DWORD PTR [ecx],edx
640215e9:	mov    ecx,DWORD PTR [ebp-0x4]
640215ec:	jns    0x640215bf
640215ee:	mov    DWORD PTR [ebp+0x8],ecx
640215f1:	mov    ecx,DWORD PTR [ebp-0x8]
640215f4:	or     eax,0xffffffff
640215f7:	shl    eax,cl
640215f9:	and    DWORD PTR [edi],eax
640215fb:	mov    eax,DWORD PTR [ebp-0xc]
640215fe:	inc    eax
640215ff:	cmp    eax,0x3
64021602:	jge    0x64021611
64021604:	push   0x3
64021606:	pop    ecx
64021607:	lea    edi,[ebp+eax*4-0x20]
6402160b:	sub    ecx,eax
6402160d:	xor    eax,eax
6402160f:	rep stos DWORD PTR es:[edi],eax
64021611:	cmp    DWORD PTR [ebp+0x8],0x0
64021615:	je     0x64021618
64021617:	inc    ebx
64021618:	mov    eax,ds:0x64030074
6402161d:	mov    ecx,eax
6402161f:	sub    ecx,DWORD PTR ds:0x64030078
64021625:	cmp    ebx,ecx
64021627:	jge    0x64021636
64021629:	xor    eax,eax
6402162b:	lea    edi,[ebp-0x20]
6402162e:	stos   DWORD PTR es:[edi],eax
6402162f:	stos   DWORD PTR es:[edi],eax
64021630:	stos   DWORD PTR es:[edi],eax
64021631:	jmp    0x64021843
64021636:	cmp    ebx,eax
64021638:	jg     0x6402184d
6402163e:	sub    eax,DWORD PTR [ebp-0x10]
64021641:	lea    esi,[ebp-0x2c]
64021644:	mov    ecx,eax
64021646:	lea    edi,[ebp-0x20]
64021649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402164a:	cdq    
6402164b:	and    edx,0x1f
6402164e:	add    eax,edx
64021650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021651:	mov    edx,ecx
64021653:	sar    eax,0x5
64021656:	and    edx,0x8000001f
6402165c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402165d:	jns    0x64021664
6402165f:	dec    edx
64021660:	or     edx,0xffffffe0
64021663:	inc    edx
64021664:	and    DWORD PTR [ebp-0xc],0x0
64021668:	and    DWORD PTR [ebp+0x8],0x0
6402166c:	or     edi,0xffffffff
6402166f:	mov    ecx,edx
64021671:	shl    edi,cl
64021673:	mov    DWORD PTR [ebp-0x4],0x20
6402167a:	sub    DWORD PTR [ebp-0x4],edx
6402167d:	not    edi
6402167f:	mov    ebx,DWORD PTR [ebp+0x8]
64021682:	lea    ebx,[ebp+ebx*4-0x20]
64021686:	mov    esi,DWORD PTR [ebx]
64021688:	mov    ecx,esi
6402168a:	and    ecx,edi
6402168c:	mov    DWORD PTR [ebp-0x10],ecx
6402168f:	mov    ecx,edx
64021691:	shr    esi,cl
64021693:	mov    ecx,DWORD PTR [ebp-0x4]
64021696:	or     esi,DWORD PTR [ebp-0xc]
64021699:	mov    DWORD PTR [ebx],esi
6402169b:	mov    esi,DWORD PTR [ebp-0x10]
6402169e:	shl    esi,cl
640216a0:	inc    DWORD PTR [ebp+0x8]
640216a3:	cmp    DWORD PTR [ebp+0x8],0x3
640216a7:	mov    DWORD PTR [ebp-0xc],esi
640216aa:	jl     0x6402167f
640216ac:	mov    esi,eax
640216ae:	push   0x2
640216b0:	shl    esi,0x2
640216b3:	lea    ecx,[ebp-0x18]
640216b6:	pop    edx
640216b7:	sub    ecx,esi
640216b9:	cmp    edx,eax
640216bb:	jl     0x640216c5
640216bd:	mov    esi,DWORD PTR [ecx]
640216bf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640216c3:	jmp    0x640216ca
640216c5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640216ca:	dec    edx
640216cb:	sub    ecx,0x4
640216ce:	test   edx,edx
640216d0:	jge    0x640216b9
640216d2:	mov    esi,DWORD PTR ds:0x64030078
640216d8:	dec    esi
640216d9:	lea    ecx,[esi+0x1]
640216dc:	mov    eax,ecx
640216de:	cdq    
640216df:	and    edx,0x1f
640216e2:	add    eax,edx
640216e4:	sar    eax,0x5
640216e7:	mov    edx,ecx
640216e9:	and    edx,0x8000001f
640216ef:	mov    DWORD PTR [ebp-0xc],eax
640216f2:	jns    0x640216f9
640216f4:	dec    edx
640216f5:	or     edx,0xffffffe0
640216f8:	inc    edx
640216f9:	push   0x1f
640216fb:	pop    ecx
640216fc:	sub    ecx,edx
640216fe:	xor    edx,edx
64021700:	inc    edx
64021701:	shl    edx,cl
64021703:	lea    ebx,[ebp+eax*4-0x20]
64021707:	mov    DWORD PTR [ebp-0x10],ecx
6402170a:	test   DWORD PTR [ebx],edx
6402170c:	je     0x64021794
64021712:	or     edx,0xffffffff
64021715:	shl    edx,cl
64021717:	not    edx
64021719:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402171d:	jmp    0x64021724
6402171f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021724:	jne    0x6402172e
64021726:	inc    eax
64021727:	cmp    eax,0x3
6402172a:	jl     0x6402171f
6402172c:	jmp    0x64021794
6402172e:	mov    eax,esi
64021730:	cdq    
64021731:	push   0x1f
64021733:	pop    ecx
64021734:	and    edx,ecx
64021736:	add    eax,edx
64021738:	sar    eax,0x5
6402173b:	and    esi,0x8000001f
64021741:	jns    0x64021748
64021743:	dec    esi
64021744:	or     esi,0xffffffe0
64021747:	inc    esi
64021748:	and    DWORD PTR [ebp+0x8],0x0
6402174c:	xor    edx,edx
6402174e:	sub    ecx,esi
64021750:	inc    edx
64021751:	shl    edx,cl
64021753:	lea    ecx,[ebp+eax*4-0x20]
64021757:	mov    esi,DWORD PTR [ecx]
64021759:	lea    edi,[esi+edx*1]
6402175c:	cmp    edi,esi
6402175e:	jb     0x64021764
64021760:	cmp    edi,edx
64021762:	jae    0x6402176b
64021764:	mov    DWORD PTR [ebp+0x8],0x1
6402176b:	mov    DWORD PTR [ecx],edi
6402176d:	mov    ecx,DWORD PTR [ebp+0x8]
64021770:	jmp    0x64021791
64021772:	test   ecx,ecx
64021774:	je     0x64021794
64021776:	lea    ecx,[ebp+eax*4-0x20]
6402177a:	mov    edx,DWORD PTR [ecx]
6402177c:	lea    esi,[edx+0x1]
6402177f:	xor    edi,edi
64021781:	cmp    esi,edx
64021783:	jb     0x6402178a
64021785:	cmp    esi,0x1
64021788:	jae    0x6402178d
6402178a:	xor    edi,edi
6402178c:	inc    edi
6402178d:	mov    DWORD PTR [ecx],esi
6402178f:	mov    ecx,edi
64021791:	dec    eax
64021792:	jns    0x64021772
64021794:	mov    ecx,DWORD PTR [ebp-0x10]
64021797:	or     eax,0xffffffff
6402179a:	shl    eax,cl
6402179c:	and    DWORD PTR [ebx],eax
6402179e:	mov    eax,DWORD PTR [ebp-0xc]
640217a1:	inc    eax
640217a2:	cmp    eax,0x3
640217a5:	jge    0x640217b4
640217a7:	push   0x3
640217a9:	pop    ecx
640217aa:	lea    edi,[ebp+eax*4-0x20]
640217ae:	sub    ecx,eax
640217b0:	xor    eax,eax
640217b2:	rep stos DWORD PTR es:[edi],eax
640217b4:	mov    ecx,DWORD PTR ds:0x6403007c
640217ba:	inc    ecx
640217bb:	mov    eax,ecx
640217bd:	cdq    
640217be:	and    edx,0x1f
640217c1:	add    eax,edx
640217c3:	mov    edx,ecx
640217c5:	sar    eax,0x5
640217c8:	and    edx,0x8000001f
640217ce:	jns    0x640217d5
640217d0:	dec    edx
640217d1:	or     edx,0xffffffe0
640217d4:	inc    edx
640217d5:	and    DWORD PTR [ebp-0xc],0x0
640217d9:	and    DWORD PTR [ebp+0x8],0x0
640217dd:	or     edi,0xffffffff
640217e0:	mov    ecx,edx
640217e2:	shl    edi,cl
640217e4:	mov    DWORD PTR [ebp-0x4],0x20
640217eb:	sub    DWORD PTR [ebp-0x4],edx
640217ee:	not    edi
640217f0:	mov    ebx,DWORD PTR [ebp+0x8]
640217f3:	lea    ebx,[ebp+ebx*4-0x20]
640217f7:	mov    esi,DWORD PTR [ebx]
640217f9:	mov    ecx,esi
640217fb:	and    ecx,edi
640217fd:	mov    DWORD PTR [ebp-0x10],ecx
64021800:	mov    ecx,edx
64021802:	shr    esi,cl
64021804:	mov    ecx,DWORD PTR [ebp-0x4]
64021807:	or     esi,DWORD PTR [ebp-0xc]
6402180a:	mov    DWORD PTR [ebx],esi
6402180c:	mov    esi,DWORD PTR [ebp-0x10]
6402180f:	shl    esi,cl
64021811:	inc    DWORD PTR [ebp+0x8]
64021814:	cmp    DWORD PTR [ebp+0x8],0x3
64021818:	mov    DWORD PTR [ebp-0xc],esi
6402181b:	jl     0x640217f0
6402181d:	mov    esi,eax
6402181f:	push   0x2
64021821:	shl    esi,0x2
64021824:	lea    ecx,[ebp-0x18]
64021827:	pop    edx
64021828:	sub    ecx,esi
6402182a:	cmp    edx,eax
6402182c:	jl     0x64021836
6402182e:	mov    esi,DWORD PTR [ecx]
64021830:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021834:	jmp    0x6402183b
64021836:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402183b:	dec    edx
6402183c:	sub    ecx,0x4
6402183f:	test   edx,edx
64021841:	jge    0x6402182a
64021843:	push   0x2
64021845:	xor    ebx,ebx
64021847:	pop    eax
64021848:	jmp    0x640219a7
6402184d:	cmp    ebx,DWORD PTR ds:0x64030070
64021853:	mov    ecx,DWORD PTR ds:0x6403007c
64021859:	jl     0x6402190c
6402185f:	xor    eax,eax
64021861:	lea    edi,[ebp-0x20]
64021864:	stos   DWORD PTR es:[edi],eax
64021865:	stos   DWORD PTR es:[edi],eax
64021866:	stos   DWORD PTR es:[edi],eax
64021867:	or     DWORD PTR [ebp-0x20],0x80000000
6402186e:	mov    eax,ecx
64021870:	cdq    
64021871:	and    edx,0x1f
64021874:	add    eax,edx
64021876:	mov    edx,ecx
64021878:	sar    eax,0x5
6402187b:	and    edx,0x8000001f
64021881:	jns    0x64021888
64021883:	dec    edx
64021884:	or     edx,0xffffffe0
64021887:	inc    edx
64021888:	and    DWORD PTR [ebp-0xc],0x0
6402188c:	and    DWORD PTR [ebp+0x8],0x0
64021890:	or     edi,0xffffffff
64021893:	mov    ecx,edx
64021895:	shl    edi,cl
64021897:	mov    DWORD PTR [ebp-0x4],0x20
6402189e:	sub    DWORD PTR [ebp-0x4],edx
640218a1:	not    edi
640218a3:	mov    ebx,DWORD PTR [ebp+0x8]
640218a6:	lea    ebx,[ebp+ebx*4-0x20]
640218aa:	mov    esi,DWORD PTR [ebx]
640218ac:	mov    ecx,esi
640218ae:	and    ecx,edi
640218b0:	mov    DWORD PTR [ebp-0x10],ecx
640218b3:	mov    ecx,edx
640218b5:	shr    esi,cl
640218b7:	mov    ecx,DWORD PTR [ebp-0x4]
640218ba:	or     esi,DWORD PTR [ebp-0xc]
640218bd:	mov    DWORD PTR [ebx],esi
640218bf:	mov    esi,DWORD PTR [ebp-0x10]
640218c2:	shl    esi,cl
640218c4:	inc    DWORD PTR [ebp+0x8]
640218c7:	cmp    DWORD PTR [ebp+0x8],0x3
640218cb:	mov    DWORD PTR [ebp-0xc],esi
640218ce:	jl     0x640218a3
640218d0:	mov    esi,eax
640218d2:	push   0x2
640218d4:	shl    esi,0x2
640218d7:	lea    ecx,[ebp-0x18]
640218da:	pop    edx
640218db:	sub    ecx,esi
640218dd:	cmp    edx,eax
640218df:	jl     0x640218e9
640218e1:	mov    esi,DWORD PTR [ecx]
640218e3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640218e7:	jmp    0x640218ee
640218e9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640218ee:	dec    edx
640218ef:	sub    ecx,0x4
640218f2:	test   edx,edx
640218f4:	jge    0x640218dd
640218f6:	mov    eax,ds:0x64030070
640218fb:	mov    ecx,DWORD PTR ds:0x64030084
64021901:	lea    ebx,[ecx+eax*1]
64021904:	xor    eax,eax
64021906:	inc    eax
64021907:	jmp    0x640219a7
6402190c:	mov    eax,ds:0x64030084
64021911:	and    DWORD PTR [ebp-0x20],0x7fffffff
64021918:	add    ebx,eax
6402191a:	mov    eax,ecx
6402191c:	cdq    
6402191d:	and    edx,0x1f
64021920:	add    eax,edx
64021922:	mov    edx,ecx
64021924:	sar    eax,0x5
64021927:	and    edx,0x8000001f
6402192d:	jns    0x64021934
6402192f:	dec    edx
64021930:	or     edx,0xffffffe0
64021933:	inc    edx
64021934:	and    DWORD PTR [ebp-0xc],0x0
64021938:	and    DWORD PTR [ebp+0x8],0x0
6402193c:	or     esi,0xffffffff
6402193f:	mov    ecx,edx
64021941:	shl    esi,cl
64021943:	mov    DWORD PTR [ebp-0x4],0x20
6402194a:	sub    DWORD PTR [ebp-0x4],edx
6402194d:	not    esi
6402194f:	mov    ecx,DWORD PTR [ebp+0x8]
64021952:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64021956:	mov    ecx,edi
64021958:	and    ecx,esi
6402195a:	mov    DWORD PTR [ebp-0x10],ecx
6402195d:	mov    ecx,edx
6402195f:	shr    edi,cl
64021961:	mov    ecx,DWORD PTR [ebp+0x8]
64021964:	or     edi,DWORD PTR [ebp-0xc]
64021967:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6402196b:	mov    edi,DWORD PTR [ebp-0x10]
6402196e:	mov    ecx,DWORD PTR [ebp-0x4]
64021971:	shl    edi,cl
64021973:	inc    DWORD PTR [ebp+0x8]
64021976:	cmp    DWORD PTR [ebp+0x8],0x3
6402197a:	mov    DWORD PTR [ebp-0xc],edi
6402197d:	jl     0x6402194f
6402197f:	mov    esi,eax
64021981:	push   0x2
64021983:	shl    esi,0x2
64021986:	lea    ecx,[ebp-0x18]
64021989:	pop    edx
6402198a:	sub    ecx,esi
6402198c:	cmp    edx,eax
6402198e:	jl     0x64021998
64021990:	mov    esi,DWORD PTR [ecx]
64021992:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021996:	jmp    0x6402199d
64021998:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402199d:	dec    edx
6402199e:	sub    ecx,0x4
640219a1:	test   edx,edx
640219a3:	jge    0x6402198c
640219a5:	xor    eax,eax
640219a7:	pop    esi
640219a8:	push   0x1f
640219aa:	pop    ecx
640219ab:	sub    ecx,DWORD PTR ds:0x6403007c
640219b1:	shl    ebx,cl
640219b3:	mov    ecx,DWORD PTR [ebp-0x14]
640219b6:	neg    ecx
640219b8:	sbb    ecx,ecx
640219ba:	and    ecx,0x80000000
640219c0:	or     ebx,ecx
640219c2:	mov    ecx,DWORD PTR ds:0x64030080
640219c8:	or     ebx,DWORD PTR [ebp-0x20]
640219cb:	cmp    ecx,0x40
640219ce:	jne    0x640219dd
640219d0:	mov    ecx,DWORD PTR [ebp+0xc]
640219d3:	mov    edx,DWORD PTR [ebp-0x1c]
640219d6:	mov    DWORD PTR [ecx+0x4],ebx
640219d9:	mov    DWORD PTR [ecx],edx
640219db:	jmp    0x640219e7
640219dd:	cmp    ecx,0x20
640219e0:	jne    0x640219e7
640219e2:	mov    ecx,DWORD PTR [ebp+0xc]
640219e5:	mov    DWORD PTR [ecx],ebx
640219e7:	pop    edi
640219e8:	pop    ebx
640219e9:	leave  
640219ea:	ret    
640219eb:	push   ebp
640219ec:	mov    ebp,esp
640219ee:	sub    esp,0x2c
640219f1:	mov    eax,DWORD PTR [ebp+0x8]
640219f4:	movzx  ecx,WORD PTR [eax+0xa]
640219f8:	push   ebx
640219f9:	mov    ebx,ecx
640219fb:	and    ecx,0x8000
64021a01:	mov    DWORD PTR [ebp-0x14],ecx
64021a04:	mov    ecx,DWORD PTR [eax+0x6]
64021a07:	mov    DWORD PTR [ebp-0x20],ecx
64021a0a:	mov    ecx,DWORD PTR [eax+0x2]
64021a0d:	movzx  eax,WORD PTR [eax]
64021a10:	and    ebx,0x7fff
64021a16:	sub    ebx,0x3fff
64021a1c:	shl    eax,0x10
64021a1f:	cmp    ebx,0xffffc001
64021a25:	push   edi
64021a26:	mov    DWORD PTR [ebp-0x1c],ecx
64021a29:	mov    DWORD PTR [ebp-0x18],eax
64021a2c:	jne    0x64021a55
64021a2e:	xor    ebx,ebx
64021a30:	xor    eax,eax
64021a32:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64021a36:	jne    0x64021a45
64021a38:	inc    eax
64021a39:	cmp    eax,0x3
64021a3c:	jl     0x64021a32
64021a3e:	xor    eax,eax
64021a40:	jmp    0x64021eea
64021a45:	xor    eax,eax
64021a47:	lea    edi,[ebp-0x20]
64021a4a:	stos   DWORD PTR es:[edi],eax
64021a4b:	stos   DWORD PTR es:[edi],eax
64021a4c:	push   0x2
64021a4e:	stos   DWORD PTR es:[edi],eax
64021a4f:	pop    eax
64021a50:	jmp    0x64021eea
64021a55:	and    DWORD PTR [ebp+0x8],0x0
64021a59:	push   esi
64021a5a:	lea    esi,[ebp-0x20]
64021a5d:	lea    edi,[ebp-0x2c]
64021a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021a63:	mov    esi,DWORD PTR ds:0x64030090
64021a69:	dec    esi
64021a6a:	lea    ecx,[esi+0x1]
64021a6d:	mov    eax,ecx
64021a6f:	cdq    
64021a70:	and    edx,0x1f
64021a73:	add    eax,edx
64021a75:	sar    eax,0x5
64021a78:	mov    edx,ecx
64021a7a:	and    edx,0x8000001f
64021a80:	mov    DWORD PTR [ebp-0x10],ebx
64021a83:	mov    DWORD PTR [ebp-0xc],eax
64021a86:	jns    0x64021a8d
64021a88:	dec    edx
64021a89:	or     edx,0xffffffe0
64021a8c:	inc    edx
64021a8d:	lea    edi,[ebp+eax*4-0x20]
64021a91:	push   0x1f
64021a93:	xor    eax,eax
64021a95:	pop    ecx
64021a96:	sub    ecx,edx
64021a98:	inc    eax
64021a99:	shl    eax,cl
64021a9b:	mov    DWORD PTR [ebp-0x8],ecx
64021a9e:	test   DWORD PTR [edi],eax
64021aa0:	je     0x64021b33
64021aa6:	mov    eax,DWORD PTR [ebp-0xc]
64021aa9:	or     edx,0xffffffff
64021aac:	shl    edx,cl
64021aae:	not    edx
64021ab0:	test   DWORD PTR [ebp+eax*4-0x20],edx
64021ab4:	jmp    0x64021abb
64021ab6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021abb:	jne    0x64021ac5
64021abd:	inc    eax
64021abe:	cmp    eax,0x3
64021ac1:	jl     0x64021ab6
64021ac3:	jmp    0x64021b33
64021ac5:	mov    eax,esi
64021ac7:	cdq    
64021ac8:	push   0x1f
64021aca:	pop    ecx
64021acb:	and    edx,ecx
64021acd:	add    eax,edx
64021acf:	sar    eax,0x5
64021ad2:	and    esi,0x8000001f
64021ad8:	jns    0x64021adf
64021ada:	dec    esi
64021adb:	or     esi,0xffffffe0
64021ade:	inc    esi
64021adf:	and    DWORD PTR [ebp-0x4],0x0
64021ae3:	sub    ecx,esi
64021ae5:	xor    edx,edx
64021ae7:	inc    edx
64021ae8:	shl    edx,cl
64021aea:	lea    ecx,[ebp+eax*4-0x20]
64021aee:	mov    esi,DWORD PTR [ecx]
64021af0:	add    esi,edx
64021af2:	mov    DWORD PTR [ebp+0x8],esi
64021af5:	mov    esi,DWORD PTR [ecx]
64021af7:	cmp    DWORD PTR [ebp+0x8],esi
64021afa:	jb     0x64021b1e
64021afc:	cmp    DWORD PTR [ebp+0x8],edx
64021aff:	jmp    0x64021b1c
64021b01:	test   ecx,ecx
64021b03:	je     0x64021b30
64021b05:	and    DWORD PTR [ebp-0x4],0x0
64021b09:	lea    ecx,[ebp+eax*4-0x20]
64021b0d:	mov    edx,DWORD PTR [ecx]
64021b0f:	lea    esi,[edx+0x1]
64021b12:	cmp    esi,edx
64021b14:	mov    DWORD PTR [ebp+0x8],esi
64021b17:	jb     0x64021b1e
64021b19:	cmp    esi,0x1
64021b1c:	jae    0x64021b25
64021b1e:	mov    DWORD PTR [ebp-0x4],0x1
64021b25:	dec    eax
64021b26:	mov    edx,DWORD PTR [ebp+0x8]
64021b29:	mov    DWORD PTR [ecx],edx
64021b2b:	mov    ecx,DWORD PTR [ebp-0x4]
64021b2e:	jns    0x64021b01
64021b30:	mov    DWORD PTR [ebp+0x8],ecx
64021b33:	mov    ecx,DWORD PTR [ebp-0x8]
64021b36:	or     eax,0xffffffff
64021b39:	shl    eax,cl
64021b3b:	and    DWORD PTR [edi],eax
64021b3d:	mov    eax,DWORD PTR [ebp-0xc]
64021b40:	inc    eax
64021b41:	cmp    eax,0x3
64021b44:	jge    0x64021b53
64021b46:	push   0x3
64021b48:	pop    ecx
64021b49:	lea    edi,[ebp+eax*4-0x20]
64021b4d:	sub    ecx,eax
64021b4f:	xor    eax,eax
64021b51:	rep stos DWORD PTR es:[edi],eax
64021b53:	cmp    DWORD PTR [ebp+0x8],0x0
64021b57:	je     0x64021b5a
64021b59:	inc    ebx
64021b5a:	mov    eax,ds:0x6403008c
64021b5f:	mov    ecx,eax
64021b61:	sub    ecx,DWORD PTR ds:0x64030090
64021b67:	cmp    ebx,ecx
64021b69:	jge    0x64021b78
64021b6b:	xor    eax,eax
64021b6d:	lea    edi,[ebp-0x20]
64021b70:	stos   DWORD PTR es:[edi],eax
64021b71:	stos   DWORD PTR es:[edi],eax
64021b72:	stos   DWORD PTR es:[edi],eax
64021b73:	jmp    0x64021d85
64021b78:	cmp    ebx,eax
64021b7a:	jg     0x64021d8f
64021b80:	sub    eax,DWORD PTR [ebp-0x10]
64021b83:	lea    esi,[ebp-0x2c]
64021b86:	mov    ecx,eax
64021b88:	lea    edi,[ebp-0x20]
64021b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021b8c:	cdq    
64021b8d:	and    edx,0x1f
64021b90:	add    eax,edx
64021b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021b93:	mov    edx,ecx
64021b95:	sar    eax,0x5
64021b98:	and    edx,0x8000001f
64021b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021b9f:	jns    0x64021ba6
64021ba1:	dec    edx
64021ba2:	or     edx,0xffffffe0
64021ba5:	inc    edx
64021ba6:	and    DWORD PTR [ebp-0xc],0x0
64021baa:	and    DWORD PTR [ebp+0x8],0x0
64021bae:	or     edi,0xffffffff
64021bb1:	mov    ecx,edx
64021bb3:	shl    edi,cl
64021bb5:	mov    DWORD PTR [ebp-0x4],0x20
64021bbc:	sub    DWORD PTR [ebp-0x4],edx
64021bbf:	not    edi
64021bc1:	mov    ebx,DWORD PTR [ebp+0x8]
64021bc4:	lea    ebx,[ebp+ebx*4-0x20]
64021bc8:	mov    esi,DWORD PTR [ebx]
64021bca:	mov    ecx,esi
64021bcc:	and    ecx,edi
64021bce:	mov    DWORD PTR [ebp-0x10],ecx
64021bd1:	mov    ecx,edx
64021bd3:	shr    esi,cl
64021bd5:	mov    ecx,DWORD PTR [ebp-0x4]
64021bd8:	or     esi,DWORD PTR [ebp-0xc]
64021bdb:	mov    DWORD PTR [ebx],esi
64021bdd:	mov    esi,DWORD PTR [ebp-0x10]
64021be0:	shl    esi,cl
64021be2:	inc    DWORD PTR [ebp+0x8]
64021be5:	cmp    DWORD PTR [ebp+0x8],0x3
64021be9:	mov    DWORD PTR [ebp-0xc],esi
64021bec:	jl     0x64021bc1
64021bee:	mov    esi,eax
64021bf0:	push   0x2
64021bf2:	shl    esi,0x2
64021bf5:	lea    ecx,[ebp-0x18]
64021bf8:	pop    edx
64021bf9:	sub    ecx,esi
64021bfb:	cmp    edx,eax
64021bfd:	jl     0x64021c07
64021bff:	mov    esi,DWORD PTR [ecx]
64021c01:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021c05:	jmp    0x64021c0c
64021c07:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021c0c:	dec    edx
64021c0d:	sub    ecx,0x4
64021c10:	test   edx,edx
64021c12:	jge    0x64021bfb
64021c14:	mov    esi,DWORD PTR ds:0x64030090
64021c1a:	dec    esi
64021c1b:	lea    ecx,[esi+0x1]
64021c1e:	mov    eax,ecx
64021c20:	cdq    
64021c21:	and    edx,0x1f
64021c24:	add    eax,edx
64021c26:	sar    eax,0x5
64021c29:	mov    edx,ecx
64021c2b:	and    edx,0x8000001f
64021c31:	mov    DWORD PTR [ebp-0xc],eax
64021c34:	jns    0x64021c3b
64021c36:	dec    edx
64021c37:	or     edx,0xffffffe0
64021c3a:	inc    edx
64021c3b:	push   0x1f
64021c3d:	pop    ecx
64021c3e:	sub    ecx,edx
64021c40:	xor    edx,edx
64021c42:	inc    edx
64021c43:	shl    edx,cl
64021c45:	lea    ebx,[ebp+eax*4-0x20]
64021c49:	mov    DWORD PTR [ebp-0x10],ecx
64021c4c:	test   DWORD PTR [ebx],edx
64021c4e:	je     0x64021cd6
64021c54:	or     edx,0xffffffff
64021c57:	shl    edx,cl
64021c59:	not    edx
64021c5b:	test   DWORD PTR [ebp+eax*4-0x20],edx
64021c5f:	jmp    0x64021c66
64021c61:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021c66:	jne    0x64021c70
64021c68:	inc    eax
64021c69:	cmp    eax,0x3
64021c6c:	jl     0x64021c61
64021c6e:	jmp    0x64021cd6
64021c70:	mov    eax,esi
64021c72:	cdq    
64021c73:	push   0x1f
64021c75:	pop    ecx
64021c76:	and    edx,ecx
64021c78:	add    eax,edx
64021c7a:	sar    eax,0x5
64021c7d:	and    esi,0x8000001f
64021c83:	jns    0x64021c8a
64021c85:	dec    esi
64021c86:	or     esi,0xffffffe0
64021c89:	inc    esi
64021c8a:	and    DWORD PTR [ebp+0x8],0x0
64021c8e:	xor    edx,edx
64021c90:	sub    ecx,esi
64021c92:	inc    edx
64021c93:	shl    edx,cl
64021c95:	lea    ecx,[ebp+eax*4-0x20]
64021c99:	mov    esi,DWORD PTR [ecx]
64021c9b:	lea    edi,[esi+edx*1]
64021c9e:	cmp    edi,esi
64021ca0:	jb     0x64021ca6
64021ca2:	cmp    edi,edx
64021ca4:	jae    0x64021cad
64021ca6:	mov    DWORD PTR [ebp+0x8],0x1
64021cad:	mov    DWORD PTR [ecx],edi
64021caf:	mov    ecx,DWORD PTR [ebp+0x8]
64021cb2:	jmp    0x64021cd3
64021cb4:	test   ecx,ecx
64021cb6:	je     0x64021cd6
64021cb8:	lea    ecx,[ebp+eax*4-0x20]
64021cbc:	mov    edx,DWORD PTR [ecx]
64021cbe:	lea    esi,[edx+0x1]
64021cc1:	xor    edi,edi
64021cc3:	cmp    esi,edx
64021cc5:	jb     0x64021ccc
64021cc7:	cmp    esi,0x1
64021cca:	jae    0x64021ccf
64021ccc:	xor    edi,edi
64021cce:	inc    edi
64021ccf:	mov    DWORD PTR [ecx],esi
64021cd1:	mov    ecx,edi
64021cd3:	dec    eax
64021cd4:	jns    0x64021cb4
64021cd6:	mov    ecx,DWORD PTR [ebp-0x10]
64021cd9:	or     eax,0xffffffff
64021cdc:	shl    eax,cl
64021cde:	and    DWORD PTR [ebx],eax
64021ce0:	mov    eax,DWORD PTR [ebp-0xc]
64021ce3:	inc    eax
64021ce4:	cmp    eax,0x3
64021ce7:	jge    0x64021cf6
64021ce9:	push   0x3
64021ceb:	pop    ecx
64021cec:	lea    edi,[ebp+eax*4-0x20]
64021cf0:	sub    ecx,eax
64021cf2:	xor    eax,eax
64021cf4:	rep stos DWORD PTR es:[edi],eax
64021cf6:	mov    ecx,DWORD PTR ds:0x64030094
64021cfc:	inc    ecx
64021cfd:	mov    eax,ecx
64021cff:	cdq    
64021d00:	and    edx,0x1f
64021d03:	add    eax,edx
64021d05:	mov    edx,ecx
64021d07:	sar    eax,0x5
64021d0a:	and    edx,0x8000001f
64021d10:	jns    0x64021d17
64021d12:	dec    edx
64021d13:	or     edx,0xffffffe0
64021d16:	inc    edx
64021d17:	and    DWORD PTR [ebp-0xc],0x0
64021d1b:	and    DWORD PTR [ebp+0x8],0x0
64021d1f:	or     edi,0xffffffff
64021d22:	mov    ecx,edx
64021d24:	shl    edi,cl
64021d26:	mov    DWORD PTR [ebp-0x4],0x20
64021d2d:	sub    DWORD PTR [ebp-0x4],edx
64021d30:	not    edi
64021d32:	mov    ebx,DWORD PTR [ebp+0x8]
64021d35:	lea    ebx,[ebp+ebx*4-0x20]
64021d39:	mov    esi,DWORD PTR [ebx]
64021d3b:	mov    ecx,esi
64021d3d:	and    ecx,edi
64021d3f:	mov    DWORD PTR [ebp-0x10],ecx
64021d42:	mov    ecx,edx
64021d44:	shr    esi,cl
64021d46:	mov    ecx,DWORD PTR [ebp-0x4]
64021d49:	or     esi,DWORD PTR [ebp-0xc]
64021d4c:	mov    DWORD PTR [ebx],esi
64021d4e:	mov    esi,DWORD PTR [ebp-0x10]
64021d51:	shl    esi,cl
64021d53:	inc    DWORD PTR [ebp+0x8]
64021d56:	cmp    DWORD PTR [ebp+0x8],0x3
64021d5a:	mov    DWORD PTR [ebp-0xc],esi
64021d5d:	jl     0x64021d32
64021d5f:	mov    esi,eax
64021d61:	push   0x2
64021d63:	shl    esi,0x2
64021d66:	lea    ecx,[ebp-0x18]
64021d69:	pop    edx
64021d6a:	sub    ecx,esi
64021d6c:	cmp    edx,eax
64021d6e:	jl     0x64021d78
64021d70:	mov    esi,DWORD PTR [ecx]
64021d72:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021d76:	jmp    0x64021d7d
64021d78:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021d7d:	dec    edx
64021d7e:	sub    ecx,0x4
64021d81:	test   edx,edx
64021d83:	jge    0x64021d6c
64021d85:	push   0x2
64021d87:	xor    ebx,ebx
64021d89:	pop    eax
64021d8a:	jmp    0x64021ee9
64021d8f:	cmp    ebx,DWORD PTR ds:0x64030088
64021d95:	mov    ecx,DWORD PTR ds:0x64030094
64021d9b:	jl     0x64021e4e
64021da1:	xor    eax,eax
64021da3:	lea    edi,[ebp-0x20]
64021da6:	stos   DWORD PTR es:[edi],eax
64021da7:	stos   DWORD PTR es:[edi],eax
64021da8:	stos   DWORD PTR es:[edi],eax
64021da9:	or     DWORD PTR [ebp-0x20],0x80000000
64021db0:	mov    eax,ecx
64021db2:	cdq    
64021db3:	and    edx,0x1f
64021db6:	add    eax,edx
64021db8:	mov    edx,ecx
64021dba:	sar    eax,0x5
64021dbd:	and    edx,0x8000001f
64021dc3:	jns    0x64021dca
64021dc5:	dec    edx
64021dc6:	or     edx,0xffffffe0
64021dc9:	inc    edx
64021dca:	and    DWORD PTR [ebp-0xc],0x0
64021dce:	and    DWORD PTR [ebp+0x8],0x0
64021dd2:	or     edi,0xffffffff
64021dd5:	mov    ecx,edx
64021dd7:	shl    edi,cl
64021dd9:	mov    DWORD PTR [ebp-0x4],0x20
64021de0:	sub    DWORD PTR [ebp-0x4],edx
64021de3:	not    edi
64021de5:	mov    ebx,DWORD PTR [ebp+0x8]
64021de8:	lea    ebx,[ebp+ebx*4-0x20]
64021dec:	mov    esi,DWORD PTR [ebx]
64021dee:	mov    ecx,esi
64021df0:	and    ecx,edi
64021df2:	mov    DWORD PTR [ebp-0x10],ecx
64021df5:	mov    ecx,edx
64021df7:	shr    esi,cl
64021df9:	mov    ecx,DWORD PTR [ebp-0x4]
64021dfc:	or     esi,DWORD PTR [ebp-0xc]
64021dff:	mov    DWORD PTR [ebx],esi
64021e01:	mov    esi,DWORD PTR [ebp-0x10]
64021e04:	shl    esi,cl
64021e06:	inc    DWORD PTR [ebp+0x8]
64021e09:	cmp    DWORD PTR [ebp+0x8],0x3
64021e0d:	mov    DWORD PTR [ebp-0xc],esi
64021e10:	jl     0x64021de5
64021e12:	mov    esi,eax
64021e14:	push   0x2
64021e16:	shl    esi,0x2
64021e19:	lea    ecx,[ebp-0x18]
64021e1c:	pop    edx
64021e1d:	sub    ecx,esi
64021e1f:	cmp    edx,eax
64021e21:	jl     0x64021e2b
64021e23:	mov    esi,DWORD PTR [ecx]
64021e25:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021e29:	jmp    0x64021e30
64021e2b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021e30:	dec    edx
64021e31:	sub    ecx,0x4
64021e34:	test   edx,edx
64021e36:	jge    0x64021e1f
64021e38:	mov    eax,ds:0x64030088
64021e3d:	mov    ecx,DWORD PTR ds:0x6403009c
64021e43:	lea    ebx,[ecx+eax*1]
64021e46:	xor    eax,eax
64021e48:	inc    eax
64021e49:	jmp    0x64021ee9
64021e4e:	mov    eax,ds:0x6403009c
64021e53:	and    DWORD PTR [ebp-0x20],0x7fffffff
64021e5a:	add    ebx,eax
64021e5c:	mov    eax,ecx
64021e5e:	cdq    
64021e5f:	and    edx,0x1f
64021e62:	add    eax,edx
64021e64:	mov    edx,ecx
64021e66:	sar    eax,0x5
64021e69:	and    edx,0x8000001f
64021e6f:	jns    0x64021e76
64021e71:	dec    edx
64021e72:	or     edx,0xffffffe0
64021e75:	inc    edx
64021e76:	and    DWORD PTR [ebp-0xc],0x0
64021e7a:	and    DWORD PTR [ebp+0x8],0x0
64021e7e:	or     esi,0xffffffff
64021e81:	mov    ecx,edx
64021e83:	shl    esi,cl
64021e85:	mov    DWORD PTR [ebp-0x4],0x20
64021e8c:	sub    DWORD PTR [ebp-0x4],edx
64021e8f:	not    esi
64021e91:	mov    ecx,DWORD PTR [ebp+0x8]
64021e94:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64021e98:	mov    ecx,edi
64021e9a:	and    ecx,esi
64021e9c:	mov    DWORD PTR [ebp-0x10],ecx
64021e9f:	mov    ecx,edx
64021ea1:	shr    edi,cl
64021ea3:	mov    ecx,DWORD PTR [ebp+0x8]
64021ea6:	or     edi,DWORD PTR [ebp-0xc]
64021ea9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
64021ead:	mov    edi,DWORD PTR [ebp-0x10]
64021eb0:	mov    ecx,DWORD PTR [ebp-0x4]
64021eb3:	shl    edi,cl
64021eb5:	inc    DWORD PTR [ebp+0x8]
64021eb8:	cmp    DWORD PTR [ebp+0x8],0x3
64021ebc:	mov    DWORD PTR [ebp-0xc],edi
64021ebf:	jl     0x64021e91
64021ec1:	mov    esi,eax
64021ec3:	push   0x2
64021ec5:	shl    esi,0x2
64021ec8:	lea    ecx,[ebp-0x18]
64021ecb:	pop    edx
64021ecc:	sub    ecx,esi
64021ece:	cmp    edx,eax
64021ed0:	jl     0x64021eda
64021ed2:	mov    esi,DWORD PTR [ecx]
64021ed4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021ed8:	jmp    0x64021edf
64021eda:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021edf:	dec    edx
64021ee0:	sub    ecx,0x4
64021ee3:	test   edx,edx
64021ee5:	jge    0x64021ece
64021ee7:	xor    eax,eax
64021ee9:	pop    esi
64021eea:	push   0x1f
64021eec:	pop    ecx
64021eed:	sub    ecx,DWORD PTR ds:0x64030094
64021ef3:	shl    ebx,cl
64021ef5:	mov    ecx,DWORD PTR [ebp-0x14]
64021ef8:	neg    ecx
64021efa:	sbb    ecx,ecx
64021efc:	and    ecx,0x80000000
64021f02:	or     ebx,ecx
64021f04:	mov    ecx,DWORD PTR ds:0x64030098
64021f0a:	or     ebx,DWORD PTR [ebp-0x20]
64021f0d:	cmp    ecx,0x40
64021f10:	jne    0x64021f1f
64021f12:	mov    ecx,DWORD PTR [ebp+0xc]
64021f15:	mov    edx,DWORD PTR [ebp-0x1c]
64021f18:	mov    DWORD PTR [ecx+0x4],ebx
64021f1b:	mov    DWORD PTR [ecx],edx
64021f1d:	jmp    0x64021f29
64021f1f:	cmp    ecx,0x20
64021f22:	jne    0x64021f29
64021f24:	mov    ecx,DWORD PTR [ebp+0xc]
64021f27:	mov    DWORD PTR [ecx],ebx
64021f29:	pop    edi
64021f2a:	pop    ebx
64021f2b:	leave  
64021f2c:	ret    
64021f2d:	push   ebp
64021f2e:	mov    ebp,esp
64021f30:	sub    esp,0x7c
64021f33:	mov    eax,ds:0x6402f09c
64021f38:	xor    eax,ebp
64021f3a:	mov    DWORD PTR [ebp-0x4],eax
64021f3d:	mov    eax,DWORD PTR [ebp+0x8]
64021f40:	push   ebx
64021f41:	xor    ebx,ebx
64021f43:	push   esi
64021f44:	xor    esi,esi
64021f46:	mov    DWORD PTR [ebp-0x7c],eax
64021f49:	mov    eax,DWORD PTR [ebp+0xc]
64021f4c:	inc    esi
64021f4d:	xor    ecx,ecx
64021f4f:	cmp    DWORD PTR [ebp+0x24],ebx
64021f52:	push   edi
64021f53:	mov    DWORD PTR [ebp-0x70],eax
64021f56:	lea    edi,[ebp-0x20]
64021f59:	mov    DWORD PTR [ebp-0x74],ebx
64021f5c:	mov    DWORD PTR [ebp-0x68],esi
64021f5f:	mov    DWORD PTR [ebp-0x4c],ebx
64021f62:	mov    DWORD PTR [ebp-0x58],ebx
64021f65:	mov    DWORD PTR [ebp-0x5c],ebx
64021f68:	mov    DWORD PTR [ebp-0x60],ebx
64021f6b:	mov    DWORD PTR [ebp-0x64],ebx
64021f6e:	mov    DWORD PTR [ebp-0x50],ebx
64021f71:	mov    DWORD PTR [ebp-0x6c],ebx
64021f74:	jne    0x64021f95
64021f76:	call   0x64015d30
64021f7b:	push   ebx
64021f7c:	push   ebx
64021f7d:	push   ebx
64021f7e:	push   ebx
64021f7f:	push   ebx
64021f80:	mov    DWORD PTR [eax],0x16
64021f86:	call   0x64013aa4
64021f8b:	add    esp,0x14
64021f8e:	xor    eax,eax
64021f90:	jmp    0x640225ae
64021f95:	mov    edx,DWORD PTR [ebp+0x10]
64021f98:	mov    DWORD PTR [ebp-0x54],edx
64021f9b:	mov    al,BYTE PTR [edx]
64021f9d:	cmp    al,0x20
64021f9f:	je     0x64021fad
64021fa1:	cmp    al,0x9
64021fa3:	je     0x64021fad
64021fa5:	cmp    al,0xa
64021fa7:	je     0x64021fad
64021fa9:	cmp    al,0xd
64021fab:	jne    0x64021fb0
64021fad:	inc    edx
64021fae:	jmp    0x64021f9b
64021fb0:	mov    bl,0x30
64021fb2:	mov    al,BYTE PTR [edx]
64021fb4:	inc    edx
64021fb5:	cmp    ecx,0xb
64021fb8:	ja     0x640221ed
64021fbe:	jmp    DWORD PTR [ecx*4+0x640225bd]
64021fc5:	mov    cl,al
64021fc7:	sub    cl,0x31
64021fca:	cmp    cl,0x8
64021fcd:	ja     0x64021fd5
64021fcf:	push   0x3
64021fd1:	pop    ecx
64021fd2:	dec    edx
64021fd3:	jmp    0x64021fb2
64021fd5:	mov    ecx,DWORD PTR [ebp+0x24]
64021fd8:	mov    ecx,DWORD PTR [ecx]
64021fda:	mov    ecx,DWORD PTR [ecx+0xbc]
64021fe0:	mov    ecx,DWORD PTR [ecx]
64021fe2:	cmp    al,BYTE PTR [ecx]
64021fe4:	jne    0x64021feb
64021fe6:	push   0x5
64021fe8:	pop    ecx
64021fe9:	jmp    0x64021fb2
64021feb:	movsx  eax,al
64021fee:	sub    eax,0x2b
64021ff1:	je     0x64022010
64021ff3:	dec    eax
64021ff4:	dec    eax
64021ff5:	je     0x64022004
64021ff7:	sub    eax,0x3
64021ffa:	jne    0x6402218b
64022000:	mov    ecx,esi
64022002:	jmp    0x64021fb2
64022004:	push   0x2
64022006:	pop    ecx
64022007:	mov    DWORD PTR [ebp-0x74],0x8000
6402200e:	jmp    0x64021fb2
64022010:	and    DWORD PTR [ebp-0x74],0x0
64022014:	push   0x2
64022016:	pop    ecx
64022017:	jmp    0x64021fb2
64022019:	mov    cl,al
6402201b:	sub    cl,0x31
6402201e:	cmp    cl,0x8
64022021:	mov    DWORD PTR [ebp-0x58],esi
64022024:	jbe    0x64021fcf
64022026:	mov    ecx,DWORD PTR [ebp+0x24]
64022029:	mov    ecx,DWORD PTR [ecx]
6402202b:	mov    ecx,DWORD PTR [ecx+0xbc]
64022031:	mov    ecx,DWORD PTR [ecx]
64022033:	cmp    al,BYTE PTR [ecx]
64022035:	jne    0x6402203b
64022037:	push   0x4
64022039:	jmp    0x64021fe8
6402203b:	cmp    al,0x2b
6402203d:	je     0x64022067
6402203f:	cmp    al,0x2d
64022041:	je     0x64022067
64022043:	cmp    al,bl
64022045:	je     0x64022000
64022047:	cmp    al,0x43
64022049:	jle    0x6402218b
6402204f:	cmp    al,0x45
64022051:	jle    0x64022063
64022053:	cmp    al,0x63
64022055:	jle    0x6402218b
6402205b:	cmp    al,0x65
6402205d:	jg     0x6402218b
64022063:	push   0x6
64022065:	jmp    0x64021fe8
64022067:	dec    edx
64022068:	push   0xb
6402206a:	jmp    0x64021fe8
6402206f:	mov    cl,al
64022071:	sub    cl,0x31
64022074:	cmp    cl,0x8
64022077:	jbe    0x64021fcf
6402207d:	mov    ecx,DWORD PTR [ebp+0x24]
64022080:	mov    ecx,DWORD PTR [ecx]
64022082:	mov    ecx,DWORD PTR [ecx+0xbc]
64022088:	mov    ecx,DWORD PTR [ecx]
6402208a:	cmp    al,BYTE PTR [ecx]
6402208c:	je     0x64021fe6
64022092:	cmp    al,bl
64022094:	je     0x64022000
6402209a:	mov    edx,DWORD PTR [ebp-0x54]
6402209d:	jmp    0x640221b6
640220a2:	mov    DWORD PTR [ebp-0x58],esi
640220a5:	jmp    0x640220c1
640220a7:	cmp    al,0x39
640220a9:	jg     0x640220c5
640220ab:	cmp    DWORD PTR [ebp-0x4c],0x19
640220af:	jae    0x640220bb
640220b1:	inc    DWORD PTR [ebp-0x4c]
640220b4:	sub    al,bl
640220b6:	mov    BYTE PTR [edi],al
640220b8:	inc    edi
640220b9:	jmp    0x640220be
640220bb:	inc    DWORD PTR [ebp-0x50]
640220be:	mov    al,BYTE PTR [edx]
640220c0:	inc    edx
640220c1:	cmp    al,bl
640220c3:	jge    0x640220a7
640220c5:	mov    ecx,DWORD PTR [ebp+0x24]
640220c8:	mov    ecx,DWORD PTR [ecx]
640220ca:	mov    ecx,DWORD PTR [ecx+0xbc]
640220d0:	mov    ecx,DWORD PTR [ecx]
640220d2:	cmp    al,BYTE PTR [ecx]
640220d4:	je     0x64022037
640220da:	cmp    al,0x2b
640220dc:	je     0x64022067
640220de:	cmp    al,0x2d
640220e0:	je     0x64022067
640220e2:	jmp    0x64022047
640220e7:	cmp    DWORD PTR [ebp-0x4c],0x0
640220eb:	mov    DWORD PTR [ebp-0x58],esi
640220ee:	mov    DWORD PTR [ebp-0x5c],esi
640220f1:	jne    0x64022119
640220f3:	jmp    0x640220fb
640220f5:	dec    DWORD PTR [ebp-0x50]
640220f8:	mov    al,BYTE PTR [edx]
640220fa:	inc    edx
640220fb:	cmp    al,bl
640220fd:	je     0x640220f5
640220ff:	jmp    0x64022119
64022101:	cmp    al,0x39
64022103:	jg     0x640220da
64022105:	cmp    DWORD PTR [ebp-0x4c],0x19
64022109:	jae    0x64022116
6402210b:	inc    DWORD PTR [ebp-0x4c]
6402210e:	sub    al,bl
64022110:	mov    BYTE PTR [edi],al
64022112:	inc    edi
64022113:	dec    DWORD PTR [ebp-0x50]
64022116:	mov    al,BYTE PTR [edx]
64022118:	inc    edx
64022119:	cmp    al,bl
6402211b:	jge    0x64022101
6402211d:	jmp    0x640220da
6402211f:	sub    al,bl
64022121:	cmp    al,0x9
64022123:	mov    DWORD PTR [ebp-0x5c],esi
64022126:	ja     0x6402209a
6402212c:	push   0x4
6402212e:	jmp    0x64021fd1
64022133:	lea    ecx,[edx-0x2]
64022136:	mov    DWORD PTR [ebp-0x54],ecx
64022139:	mov    cl,al
6402213b:	sub    cl,0x31
6402213e:	cmp    cl,0x8
64022141:	ja     0x6402214a
64022143:	push   0x9
64022145:	jmp    0x64021fd1
6402214a:	movsx  eax,al
6402214d:	sub    eax,0x2b
64022150:	je     0x64022172
64022152:	dec    eax
64022153:	dec    eax
64022154:	je     0x64022166
64022156:	sub    eax,0x3
64022159:	jne    0x6402209a
6402215f:	push   0x8
64022161:	jmp    0x64021fe8
64022166:	or     DWORD PTR [ebp-0x68],0xffffffff
6402216a:	push   0x7
6402216c:	pop    ecx
6402216d:	jmp    0x64021fb2
64022172:	push   0x7
64022174:	jmp    0x64021fe8
64022179:	mov    DWORD PTR [ebp-0x60],esi
6402217c:	jmp    0x64022181
6402217e:	mov    al,BYTE PTR [edx]
64022180:	inc    edx
64022181:	cmp    al,bl
64022183:	je     0x6402217e
64022185:	sub    al,0x31
64022187:	cmp    al,0x8
64022189:	jbe    0x64022143
6402218b:	dec    edx
6402218c:	jmp    0x640221b6
6402218e:	mov    cl,al
64022190:	sub    cl,0x31
64022193:	cmp    cl,0x8
64022196:	jbe    0x64022143
64022198:	cmp    al,bl
6402219a:	jmp    0x64022159
6402219c:	cmp    DWORD PTR [ebp+0x20],0x0
640221a0:	je     0x640221e9
640221a2:	movsx  eax,al
640221a5:	sub    eax,0x2b
640221a8:	lea    ecx,[edx-0x1]
640221ab:	mov    DWORD PTR [ebp-0x54],ecx
640221ae:	je     0x64022172
640221b0:	dec    eax
640221b1:	dec    eax
640221b2:	je     0x64022166
640221b4:	mov    edx,ecx
640221b6:	cmp    DWORD PTR [ebp-0x58],0x0
640221ba:	mov    eax,DWORD PTR [ebp-0x70]
640221bd:	mov    DWORD PTR [eax],edx
640221bf:	je     0x64022569
640221c5:	push   0x18
640221c7:	pop    eax
640221c8:	cmp    DWORD PTR [ebp-0x4c],eax
640221cb:	jbe    0x640221dd
640221cd:	cmp    BYTE PTR [ebp-0x9],0x5
640221d1:	jl     0x640221d6
640221d3:	inc    BYTE PTR [ebp-0x9]
640221d6:	dec    edi
640221d7:	inc    DWORD PTR [ebp-0x50]
640221da:	mov    DWORD PTR [ebp-0x4c],eax
640221dd:	cmp    DWORD PTR [ebp-0x4c],0x0
640221e1:	jbe    0x64022590
640221e7:	jmp    0x64022242
640221e9:	push   0xa
640221eb:	pop    ecx
640221ec:	dec    edx
640221ed:	cmp    ecx,0xa
640221f0:	jne    0x64021fb2
640221f6:	jmp    0x640221b6
640221f8:	mov    DWORD PTR [ebp-0x60],esi
640221fb:	xor    ecx,ecx
640221fd:	jmp    0x64022218
640221ff:	cmp    al,0x39
64022201:	jg     0x64022223
64022203:	imul   ecx,ecx,0xa
64022206:	movsx  esi,al
64022209:	lea    ecx,[ecx+esi*1-0x30]
6402220d:	cmp    ecx,0x1450
64022213:	jg     0x6402221e
64022215:	mov    al,BYTE PTR [edx]
64022217:	inc    edx
64022218:	cmp    al,bl
6402221a:	jge    0x640221ff
6402221c:	jmp    0x64022223
6402221e:	mov    ecx,0x1451
64022223:	mov    DWORD PTR [ebp-0x64],ecx
64022226:	jmp    0x64022233
64022228:	cmp    al,0x39
6402222a:	jg     0x6402218b
64022230:	mov    al,BYTE PTR [edx]
64022232:	inc    edx
64022233:	cmp    al,bl
64022235:	jge    0x64022228
64022237:	jmp    0x6402218b
6402223c:	dec    DWORD PTR [ebp-0x4c]
6402223f:	inc    DWORD PTR [ebp-0x50]
64022242:	dec    edi
64022243:	cmp    BYTE PTR [edi],0x0
64022246:	je     0x6402223c
64022248:	lea    eax,[ebp-0x3c]
6402224b:	push   eax
6402224c:	push   DWORD PTR [ebp-0x4c]
6402224f:	lea    eax,[ebp-0x20]
64022252:	push   eax
64022253:	call   0x640232e4
64022258:	mov    eax,DWORD PTR [ebp-0x64]
6402225b:	xor    ecx,ecx
6402225d:	add    esp,0xc
64022260:	cmp    DWORD PTR [ebp-0x68],ecx
64022263:	jge    0x64022267
64022265:	neg    eax
64022267:	add    eax,DWORD PTR [ebp-0x50]
6402226a:	cmp    DWORD PTR [ebp-0x60],ecx
6402226d:	jne    0x64022272
6402226f:	add    eax,DWORD PTR [ebp+0x18]
64022272:	cmp    DWORD PTR [ebp-0x5c],ecx
64022275:	jne    0x6402227a
64022277:	sub    eax,DWORD PTR [ebp+0x1c]
6402227a:	cmp    eax,0x1450
6402227f:	jg     0x64022572
64022285:	cmp    eax,0xffffebb0
6402228a:	jl     0x64022589
64022290:	mov    esi,0x640300a0
64022295:	sub    esi,0x60
64022298:	cmp    eax,ecx
6402229a:	mov    DWORD PTR [ebp-0x54],eax
6402229d:	je     0x64022557
640222a3:	jge    0x640222b2
640222a5:	neg    eax
640222a7:	mov    esi,0x64030200
640222ac:	mov    DWORD PTR [ebp-0x54],eax
640222af:	sub    esi,0x60
640222b2:	cmp    DWORD PTR [ebp+0x14],ecx
640222b5:	jne    0x640222bb
640222b7:	mov    WORD PTR [ebp-0x3c],cx
640222bb:	cmp    DWORD PTR [ebp-0x54],ecx
640222be:	je     0x64022557
640222c4:	mov    eax,DWORD PTR [ebp-0x54]
640222c7:	sar    DWORD PTR [ebp-0x54],0x3
640222cb:	add    esi,0x54
640222ce:	and    eax,0x7
640222d1:	test   eax,eax
640222d3:	mov    DWORD PTR [ebp-0x4c],esi
640222d6:	je     0x6402254d
640222dc:	imul   eax,eax,0xc
640222df:	add    eax,esi
640222e1:	mov    ebx,eax
640222e3:	cmp    WORD PTR [ebx],0x8000
640222e8:	mov    DWORD PTR [ebp-0x70],ebx
640222eb:	jb     0x64022301
640222ed:	mov    esi,ebx
640222ef:	lea    edi,[ebp-0x48]
640222f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640222f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640222f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640222f5:	dec    DWORD PTR [ebp-0x46]
640222f8:	mov    esi,DWORD PTR [ebp-0x4c]
640222fb:	lea    ebx,[ebp-0x48]
640222fe:	mov    DWORD PTR [ebp-0x70],ebx
64022301:	movzx  edx,WORD PTR [ebx+0xa]
64022305:	mov    ecx,DWORD PTR [ebp-0x32]
64022308:	xor    eax,eax
6402230a:	mov    DWORD PTR [ebp-0x50],eax
6402230d:	mov    DWORD PTR [ebp-0x2c],eax
64022310:	mov    DWORD PTR [ebp-0x28],eax
64022313:	mov    DWORD PTR [ebp-0x24],eax
64022316:	mov    eax,edx
64022318:	mov    edi,0x7fff
6402231d:	xor    eax,ecx
6402231f:	and    ecx,edi
64022321:	and    edx,edi
64022323:	and    eax,0x8000
64022328:	cmp    cx,0x7fff
6402232d:	lea    edi,[edx+ecx*1]
64022330:	movzx  edi,di
64022333:	jae    0x64022533
64022339:	cmp    dx,0x7fff
6402233e:	jae    0x64022533
64022344:	cmp    di,0xbffd
64022349:	ja     0x64022533
6402234f:	cmp    di,0x3fbf
64022354:	ja     0x64022363
64022356:	xor    eax,eax
64022358:	mov    DWORD PTR [ebp-0x38],eax
6402235b:	mov    DWORD PTR [ebp-0x3c],eax
6402235e:	jmp    0x6402254a
64022363:	test   cx,cx
64022366:	jne    0x64022387
64022368:	inc    edi
64022369:	test   DWORD PTR [ebp-0x34],0x7fffffff
64022370:	jne    0x64022387
64022372:	cmp    DWORD PTR [ebp-0x38],0x0
64022376:	jne    0x64022387
64022378:	cmp    DWORD PTR [ebp-0x3c],0x0
6402237c:	jne    0x64022387
6402237e:	and    WORD PTR [ebp-0x32],cx
64022382:	jmp    0x6402254d
64022387:	xor    ecx,ecx
64022389:	cmp    dx,cx
6402238c:	jne    0x640223af
6402238e:	inc    edi
6402238f:	test   DWORD PTR [ebx+0x8],0x7fffffff
64022396:	jne    0x640223af
64022398:	cmp    DWORD PTR [ebx+0x4],ecx
6402239b:	jne    0x640223af
6402239d:	cmp    DWORD PTR [ebx],ecx
6402239f:	jne    0x640223af
640223a1:	mov    DWORD PTR [ebp-0x34],ecx
640223a4:	mov    DWORD PTR [ebp-0x38],ecx
640223a7:	mov    DWORD PTR [ebp-0x3c],ecx
640223aa:	jmp    0x6402254d
640223af:	and    DWORD PTR [ebp-0x68],ecx
640223b2:	lea    esi,[ebp-0x28]
640223b5:	mov    DWORD PTR [ebp-0x58],0x5
640223bc:	mov    ecx,DWORD PTR [ebp-0x68]
640223bf:	mov    edx,DWORD PTR [ebp-0x58]
640223c2:	add    ecx,ecx
640223c4:	test   edx,edx
640223c6:	mov    DWORD PTR [ebp-0x64],edx
640223c9:	jle    0x64022420
640223cb:	lea    ecx,[ebp+ecx*1-0x3c]
640223cf:	add    ebx,0x8
640223d2:	mov    DWORD PTR [ebp-0x5c],ecx
640223d5:	mov    DWORD PTR [ebp-0x60],ebx
640223d8:	mov    ecx,DWORD PTR [ebp-0x60]
640223db:	mov    edx,DWORD PTR [ebp-0x5c]
640223de:	movzx  edx,WORD PTR [edx]
640223e1:	movzx  ecx,WORD PTR [ecx]
640223e4:	and    DWORD PTR [ebp-0x78],0x0
640223e8:	imul   ecx,edx
640223eb:	mov    edx,DWORD PTR [esi-0x4]
640223ee:	lea    ebx,[edx+ecx*1]
640223f1:	cmp    ebx,edx
640223f3:	jb     0x640223f9
640223f5:	cmp    ebx,ecx
640223f7:	jae    0x64022400
640223f9:	mov    DWORD PTR [ebp-0x78],0x1
64022400:	cmp    DWORD PTR [ebp-0x78],0x0
64022404:	mov    DWORD PTR [esi-0x4],ebx
64022407:	je     0x6402240c
64022409:	inc    WORD PTR [esi]
6402240c:	add    DWORD PTR [ebp-0x5c],0x2
64022410:	sub    DWORD PTR [ebp-0x60],0x2
64022414:	dec    DWORD PTR [ebp-0x64]
64022417:	cmp    DWORD PTR [ebp-0x64],0x0
6402241b:	jg     0x640223d8
6402241d:	mov    ebx,DWORD PTR [ebp-0x70]
64022420:	inc    esi
64022421:	inc    esi
64022422:	inc    DWORD PTR [ebp-0x68]
64022425:	dec    DWORD PTR [ebp-0x58]
64022428:	cmp    DWORD PTR [ebp-0x58],0x0
6402242c:	jg     0x640223bc
6402242e:	add    edi,0xc002
64022434:	test   di,di
64022437:	jle    0x64022474
64022439:	test   DWORD PTR [ebp-0x24],0x80000000
64022440:	jne    0x6402246f
64022442:	mov    esi,DWORD PTR [ebp-0x28]
64022445:	mov    ecx,DWORD PTR [ebp-0x2c]
64022448:	shl    DWORD PTR [ebp-0x2c],1
6402244b:	shr    ecx,0x1f
6402244e:	mov    edx,esi
64022450:	add    esi,esi
64022452:	or     esi,ecx
64022454:	mov    ecx,DWORD PTR [ebp-0x24]
64022457:	shr    edx,0x1f
6402245a:	add    ecx,ecx
6402245c:	or     ecx,edx
6402245e:	add    edi,0xffff
64022464:	test   di,di
64022467:	mov    DWORD PTR [ebp-0x28],esi
6402246a:	mov    DWORD PTR [ebp-0x24],ecx
6402246d:	jg     0x64022439
6402246f:	test   di,di
64022472:	jg     0x640224c1
64022474:	add    edi,0xffff
6402247a:	test   di,di
6402247d:	jge    0x640224c1
6402247f:	mov    ecx,edi
64022481:	neg    ecx
64022483:	movzx  esi,cx
64022486:	add    edi,esi
64022488:	test   BYTE PTR [ebp-0x2c],0x1
6402248c:	je     0x64022491
6402248e:	inc    DWORD PTR [ebp-0x50]
64022491:	mov    ecx,DWORD PTR [ebp-0x24]
64022494:	mov    ebx,DWORD PTR [ebp-0x28]
64022497:	mov    edx,DWORD PTR [ebp-0x28]
6402249a:	shr    DWORD PTR [ebp-0x24],1
6402249d:	shl    ecx,0x1f
640224a0:	shr    ebx,1
640224a2:	or     ebx,ecx
640224a4:	mov    ecx,DWORD PTR [ebp-0x2c]
640224a7:	shl    edx,0x1f
640224aa:	shr    ecx,1
640224ac:	or     ecx,edx
640224ae:	dec    esi
640224af:	mov    DWORD PTR [ebp-0x28],ebx
640224b2:	mov    DWORD PTR [ebp-0x2c],ecx
640224b5:	jne    0x64022488
640224b7:	cmp    DWORD PTR [ebp-0x50],esi
640224ba:	je     0x640224c1
640224bc:	or     WORD PTR [ebp-0x2c],0x1
640224c1:	cmp    WORD PTR [ebp-0x2c],0x8000
640224c7:	ja     0x640224da
640224c9:	mov    ecx,DWORD PTR [ebp-0x2c]
640224cc:	and    ecx,0x1ffff
640224d2:	cmp    ecx,0x18000
640224d8:	jne    0x6402250d
640224da:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
640224de:	jne    0x6402250a
640224e0:	and    DWORD PTR [ebp-0x2a],0x0
640224e4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
640224e8:	jne    0x64022505
640224ea:	and    DWORD PTR [ebp-0x26],0x0
640224ee:	cmp    WORD PTR [ebp-0x22],0xffff
640224f4:	jne    0x640224ff
640224f6:	mov    WORD PTR [ebp-0x22],0x8000
640224fc:	inc    edi
640224fd:	jmp    0x6402250d
640224ff:	inc    WORD PTR [ebp-0x22]
64022503:	jmp    0x6402250d
64022505:	inc    DWORD PTR [ebp-0x26]
64022508:	jmp    0x6402250d
6402250a:	inc    DWORD PTR [ebp-0x2a]
6402250d:	cmp    di,0x7fff
64022512:	mov    esi,DWORD PTR [ebp-0x4c]
64022515:	jae    0x64022533
64022517:	mov    cx,WORD PTR [ebp-0x2a]
6402251b:	mov    WORD PTR [ebp-0x3c],cx
6402251f:	mov    ecx,DWORD PTR [ebp-0x28]
64022522:	mov    DWORD PTR [ebp-0x3a],ecx
64022525:	mov    ecx,DWORD PTR [ebp-0x24]
64022528:	or     edi,eax
6402252a:	mov    DWORD PTR [ebp-0x36],ecx
6402252d:	mov    WORD PTR [ebp-0x32],di
64022531:	jmp    0x6402254d
64022533:	neg    ax
64022536:	sbb    eax,eax
64022538:	and    DWORD PTR [ebp-0x38],0x0
6402253c:	and    eax,0x80000000
64022541:	add    eax,0x7fff8000
64022546:	and    DWORD PTR [ebp-0x3c],0x0
6402254a:	mov    DWORD PTR [ebp-0x34],eax
6402254d:	cmp    DWORD PTR [ebp-0x54],0x0
64022551:	jne    0x640222c4
64022557:	mov    eax,DWORD PTR [ebp-0x34]
6402255a:	movzx  ecx,WORD PTR [ebp-0x3c]
6402255e:	mov    esi,DWORD PTR [ebp-0x3a]
64022561:	mov    edx,DWORD PTR [ebp-0x36]
64022564:	shr    eax,0x10
64022567:	jmp    0x64022598
64022569:	mov    DWORD PTR [ebp-0x6c],0x4
64022570:	jmp    0x64022590
64022572:	xor    esi,esi
64022574:	mov    eax,0x7fff
64022579:	mov    edx,0x80000000
6402257e:	xor    ecx,ecx
64022580:	mov    DWORD PTR [ebp-0x6c],0x2
64022587:	jmp    0x64022598
64022589:	mov    DWORD PTR [ebp-0x6c],0x1
64022590:	xor    ecx,ecx
64022592:	xor    eax,eax
64022594:	xor    edx,edx
64022596:	xor    esi,esi
64022598:	mov    edi,DWORD PTR [ebp-0x7c]
6402259b:	or     eax,DWORD PTR [ebp-0x74]
6402259e:	mov    WORD PTR [edi],cx
640225a1:	mov    WORD PTR [edi+0xa],ax
640225a5:	mov    eax,DWORD PTR [ebp-0x6c]
640225a8:	mov    DWORD PTR [edi+0x2],esi
640225ab:	mov    DWORD PTR [edi+0x6],edx
640225ae:	mov    ecx,DWORD PTR [ebp-0x4]
640225b1:	pop    edi
640225b2:	pop    esi
640225b3:	xor    ecx,ebp
640225b5:	pop    ebx
640225b6:	call   0x64013f6c
640225bb:	leave  
640225bc:	ret    
640225bd:	lds    ebx,FWORD PTR [edi]
640225bf:	add    ah,BYTE PTR [ecx+ebx*1+0x20]
640225c3:	add    ah,BYTE PTR [edi+ebp*2+0x20]
640225c7:	add    ah,BYTE PTR [edx+eiz*4+0x20]
640225cb:	add    ah,BYTE PTR [edi+eiz*8+0x20]
640225cf:	add    ah,BYTE PTR [edi+ebx*1+0x21]
640225d3:	add    ah,BYTE PTR [ebx+esi*1+0x21]
640225d7:	add    ah,BYTE PTR [esi+ecx*4+0x21]
640225db:	add    ah,BYTE PTR [ecx+edi*2+0x21]
640225df:	add    ah,BYTE PTR [eax+edi*8+0x21]
640225e3:	add    ah,BYTE PTR [ebp+ebp*8+0x21]
640225e7:	add    ah,BYTE PTR [esp+ebx*4+0x21]
640225eb:	add    ah,BYTE PTR [ebp+edx*2-0x75]
640225ef:	in     al,dx
640225f0:	sub    esp,0x74
640225f3:	mov    eax,ds:0x6402f09c
640225f8:	xor    eax,ebp
640225fa:	mov    DWORD PTR [ebp-0x4],eax
640225fd:	push   ebx
640225fe:	mov    ebx,DWORD PTR [ebp+0x1c]
64022601:	push   esi
64022602:	push   edi
64022603:	lea    esi,[ebp+0x8]
64022606:	lea    edi,[ebp-0x10]
64022609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402260a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402260b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6402260d:	mov    edx,DWORD PTR [ebp-0x8]
64022610:	mov    ecx,edx
64022612:	mov    eax,0x8000
64022617:	and    ecx,eax
64022619:	and    edx,0x7fff
6402261f:	test   cx,cx
64022622:	mov    DWORD PTR [ebp-0x60],ebx
64022625:	mov    BYTE PTR [ebp-0x30],0xcc
64022629:	mov    BYTE PTR [ebp-0x2f],0xcc
6402262d:	mov    BYTE PTR [ebp-0x2e],0xcc
64022631:	mov    BYTE PTR [ebp-0x2d],0xcc
64022635:	mov    BYTE PTR [ebp-0x2c],0xcc
64022639:	mov    BYTE PTR [ebp-0x2b],0xcc
6402263d:	mov    BYTE PTR [ebp-0x2a],0xcc
64022641:	mov    BYTE PTR [ebp-0x29],0xcc
64022645:	mov    BYTE PTR [ebp-0x28],0xcc
64022649:	mov    BYTE PTR [ebp-0x27],0xcc
6402264d:	mov    BYTE PTR [ebp-0x26],0xfb
64022651:	mov    BYTE PTR [ebp-0x25],0x3f
64022655:	mov    DWORD PTR [ebp-0x74],0x1
6402265c:	mov    DWORD PTR [ebp-0x6c],ecx
6402265f:	je     0x64022667
64022661:	mov    BYTE PTR [ebx+0x2],0x2d
64022665:	jmp    0x6402266b
64022667:	mov    BYTE PTR [ebx+0x2],0x20
6402266b:	test   dx,dx
6402266e:	mov    esi,DWORD PTR [ebp-0xc]
64022671:	mov    edi,DWORD PTR [ebp-0x10]
64022674:	jne    0x640226a4
64022676:	test   esi,esi
64022678:	jne    0x640226a4
6402267a:	test   edi,edi
6402267c:	jne    0x640226a4
6402267e:	and    WORD PTR [ebx],di
64022681:	cmp    cx,ax
64022684:	setne  al
64022687:	dec    al
64022689:	and    al,0xd
6402268b:	add    al,0x20
6402268d:	mov    BYTE PTR [ebx+0x2],al
64022690:	mov    BYTE PTR [ebx+0x3],0x1
64022694:	mov    BYTE PTR [ebx+0x4],0x30
64022698:	mov    BYTE PTR [ebx+0x5],0x0
6402269c:	xor    eax,eax
6402269e:	inc    eax
6402269f:	jmp    0x64022e6b
640226a4:	cmp    dx,0x7fff
640226a9:	jne    0x6402274d
640226af:	mov    eax,0x80000000
640226b4:	cmp    esi,eax
640226b6:	mov    WORD PTR [ebx],0x1
640226bb:	jne    0x640226c1
640226bd:	test   edi,edi
640226bf:	je     0x640226d0
640226c1:	test   esi,0x40000000
640226c7:	jne    0x640226d0
640226c9:	push   0x64028630
640226ce:	jmp    0x64022721
640226d0:	test   cx,cx
640226d3:	je     0x640226e8
640226d5:	cmp    esi,0xc0000000
640226db:	jne    0x640226e8
640226dd:	test   edi,edi
640226df:	jne    0x6402271c
640226e1:	push   0x64028628
640226e6:	jmp    0x640226f5
640226e8:	cmp    esi,eax
640226ea:	jne    0x6402271c
640226ec:	test   edi,edi
640226ee:	jne    0x6402271c
640226f0:	push   0x64028620
640226f5:	lea    eax,[ebx+0x4]
640226f8:	push   0x16
640226fa:	push   eax
640226fb:	call   0x64015928
64022700:	add    esp,0xc
64022703:	xor    esi,esi
64022705:	test   eax,eax
64022707:	je     0x64022716
64022709:	push   esi
6402270a:	push   esi
6402270b:	push   esi
6402270c:	push   esi
6402270d:	push   esi
6402270e:	call   0x640139a8
64022713:	add    esp,0x14
64022716:	mov    BYTE PTR [ebx+0x3],0x5
6402271a:	jmp    0x64022746
6402271c:	push   0x64028618
64022721:	lea    eax,[ebx+0x4]
64022724:	push   0x16
64022726:	push   eax
64022727:	call   0x64015928
6402272c:	add    esp,0xc
6402272f:	xor    esi,esi
64022731:	test   eax,eax
64022733:	je     0x64022742
64022735:	push   esi
64022736:	push   esi
64022737:	push   esi
64022738:	push   esi
64022739:	push   esi
6402273a:	call   0x640139a8
6402273f:	add    esp,0x14
64022742:	mov    BYTE PTR [ebx+0x3],0x6
64022746:	xor    eax,eax
64022748:	jmp    0x64022e6b
6402274d:	movzx  ecx,dx
64022750:	mov    ebx,ecx
64022752:	imul   ecx,ecx,0x4d10
64022758:	shr    ebx,0x8
6402275b:	mov    eax,esi
6402275d:	shr    eax,0x18
64022760:	lea    eax,[ebx+eax*2]
64022763:	imul   eax,eax,0x4d
64022766:	lea    eax,[eax+ecx*1-0x134312f4]
6402276d:	sar    eax,0x10
64022770:	movzx  ecx,ax
64022773:	movsx  ebx,cx
64022776:	mov    DWORD PTR [ebp-0x4c],ecx
64022779:	xor    eax,eax
6402277b:	mov    ecx,0x640300a0
64022780:	neg    ebx
64022782:	sub    ecx,0x60
64022785:	cmp    ebx,eax
64022787:	mov    WORD PTR [ebp-0x16],dx
6402278b:	mov    DWORD PTR [ebp-0x1a],esi
6402278e:	mov    DWORD PTR [ebp-0x1e],edi
64022791:	mov    WORD PTR [ebp-0x20],ax
64022795:	mov    DWORD PTR [ebp-0x68],ecx
64022798:	je     0x64022a4c
6402279e:	jge    0x640227ad
640227a0:	mov    ecx,0x64030200
640227a5:	neg    ebx
640227a7:	sub    ecx,0x60
640227aa:	mov    DWORD PTR [ebp-0x68],ecx
640227ad:	cmp    ebx,eax
640227af:	je     0x64022a4c
640227b5:	add    DWORD PTR [ebp-0x68],0x54
640227b9:	mov    ecx,ebx
640227bb:	and    ecx,0x7
640227be:	sar    ebx,0x3
640227c1:	test   ecx,ecx
640227c3:	je     0x64022a42
640227c9:	imul   ecx,ecx,0xc
640227cc:	add    ecx,DWORD PTR [ebp-0x68]
640227cf:	cmp    WORD PTR [ecx],0x8000
640227d4:	mov    DWORD PTR [ebp-0x64],ecx
640227d7:	jb     0x640227ec
640227d9:	mov    esi,ecx
640227db:	lea    edi,[ebp-0x3c]
640227de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640227df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640227e0:	lea    eax,[ebp-0x3c]
640227e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640227e4:	dec    DWORD PTR [ebp-0x3a]
640227e7:	mov    DWORD PTR [ebp-0x64],eax
640227ea:	mov    ecx,eax
640227ec:	movzx  edi,WORD PTR [ecx+0xa]
640227f0:	mov    edx,DWORD PTR [ebp-0x16]
640227f3:	xor    eax,eax
640227f5:	mov    ecx,edi
640227f7:	mov    esi,0x7fff
640227fc:	xor    ecx,edx
640227fe:	and    edx,esi
64022800:	and    edi,esi
64022802:	mov    DWORD PTR [ebp-0x48],eax
64022805:	mov    DWORD PTR [ebp-0x10],eax
64022808:	mov    DWORD PTR [ebp-0xc],eax
6402280b:	mov    DWORD PTR [ebp-0x8],eax
6402280e:	and    ecx,0x8000
64022814:	cmp    dx,si
64022817:	lea    eax,[edi+edx*1]
6402281a:	movzx  eax,ax
6402281d:	jae    0x64022a26
64022823:	cmp    di,si
64022826:	jae    0x64022a26
6402282c:	cmp    ax,0xbffd
64022830:	ja     0x64022a26
64022836:	cmp    ax,0x3fbf
6402283a:	ja     0x6402284c
6402283c:	xor    eax,eax
6402283e:	mov    DWORD PTR [ebp-0x18],eax
64022841:	mov    DWORD PTR [ebp-0x1c],eax
64022844:	mov    DWORD PTR [ebp-0x20],eax
64022847:	jmp    0x64022a42
6402284c:	xor    esi,esi
6402284e:	cmp    dx,si
64022851:	jne    0x64022870
64022853:	inc    eax
64022854:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402285b:	jne    0x64022870
6402285d:	cmp    DWORD PTR [ebp-0x1c],esi
64022860:	jne    0x64022870
64022862:	cmp    DWORD PTR [ebp-0x20],esi
64022865:	jne    0x64022870
64022867:	mov    WORD PTR [ebp-0x16],si
6402286b:	jmp    0x64022a42
64022870:	cmp    di,si
64022873:	jne    0x64022899
64022875:	mov    edx,DWORD PTR [ebp-0x64]
64022878:	inc    eax
64022879:	test   DWORD PTR [edx+0x8],0x7fffffff
64022880:	jne    0x64022899
64022882:	cmp    DWORD PTR [edx+0x4],esi
64022885:	jne    0x64022899
64022887:	cmp    DWORD PTR [edx],esi
64022889:	jne    0x64022899
6402288b:	mov    DWORD PTR [ebp-0x18],esi
6402288e:	mov    DWORD PTR [ebp-0x1c],esi
64022891:	mov    DWORD PTR [ebp-0x20],esi
64022894:	jmp    0x64022a42
64022899:	lea    edi,[ebp-0xc]
6402289c:	mov    DWORD PTR [ebp-0x5c],esi
6402289f:	mov    DWORD PTR [ebp-0x44],edi
640228a2:	mov    DWORD PTR [ebp-0x40],0x5
640228a9:	mov    edx,DWORD PTR [ebp-0x5c]
640228ac:	mov    esi,DWORD PTR [ebp-0x40]
640228af:	add    edx,edx
640228b1:	test   esi,esi
640228b3:	mov    DWORD PTR [ebp-0x50],esi
640228b6:	jle    0x64022910
640228b8:	lea    edx,[ebp+edx*1-0x20]
640228bc:	mov    DWORD PTR [ebp-0x58],edx
640228bf:	mov    edx,DWORD PTR [ebp-0x64]
640228c2:	add    edx,0x8
640228c5:	mov    DWORD PTR [ebp-0x54],edx
640228c8:	mov    edx,DWORD PTR [ebp-0x58]
640228cb:	mov    esi,DWORD PTR [ebp-0x54]
640228ce:	movzx  esi,WORD PTR [esi]
640228d1:	movzx  edx,WORD PTR [edx]
640228d4:	mov    edi,DWORD PTR [edi-0x4]
640228d7:	imul   edx,esi
640228da:	and    DWORD PTR [ebp-0x70],0x0
640228de:	lea    esi,[edi+edx*1]
640228e1:	cmp    esi,edi
640228e3:	jb     0x640228e9
640228e5:	cmp    esi,edx
640228e7:	jae    0x640228f0
640228e9:	mov    DWORD PTR [ebp-0x70],0x1
640228f0:	cmp    DWORD PTR [ebp-0x70],0x0
640228f4:	mov    edi,DWORD PTR [ebp-0x44]
640228f7:	mov    DWORD PTR [edi-0x4],esi
640228fa:	je     0x640228ff
640228fc:	inc    WORD PTR [edi]
640228ff:	add    DWORD PTR [ebp-0x58],0x2
64022903:	sub    DWORD PTR [ebp-0x54],0x2
64022907:	dec    DWORD PTR [ebp-0x50]
6402290a:	cmp    DWORD PTR [ebp-0x50],0x0
6402290e:	jg     0x640228c8
64022910:	inc    edi
64022911:	inc    edi
64022912:	inc    DWORD PTR [ebp-0x5c]
64022915:	dec    DWORD PTR [ebp-0x40]
64022918:	cmp    DWORD PTR [ebp-0x40],0x0
6402291c:	mov    DWORD PTR [ebp-0x44],edi
6402291f:	jg     0x640228a9
64022921:	add    eax,0xc002
64022926:	test   ax,ax
64022929:	jle    0x64022966
6402292b:	test   DWORD PTR [ebp-0x8],0x80000000
64022932:	jne    0x64022961
64022934:	mov    edx,DWORD PTR [ebp-0x10]
64022937:	mov    edi,DWORD PTR [ebp-0xc]
6402293a:	mov    esi,DWORD PTR [ebp-0xc]
6402293d:	shl    DWORD PTR [ebp-0x10],1
64022940:	shr    edx,0x1f
64022943:	add    edi,edi
64022945:	or     edi,edx
64022947:	mov    edx,DWORD PTR [ebp-0x8]
6402294a:	shr    esi,0x1f
6402294d:	add    edx,edx
6402294f:	or     edx,esi
64022951:	add    eax,0xffff
64022956:	test   ax,ax
64022959:	mov    DWORD PTR [ebp-0xc],edi
6402295c:	mov    DWORD PTR [ebp-0x8],edx
6402295f:	jg     0x6402292b
64022961:	test   ax,ax
64022964:	jg     0x640229b8
64022966:	add    eax,0xffff
6402296b:	test   ax,ax
6402296e:	jge    0x640229b8
64022970:	mov    edx,eax
64022972:	neg    edx
64022974:	movzx  edx,dx
64022977:	mov    DWORD PTR [ebp-0x44],edx
6402297a:	add    eax,edx
6402297c:	test   BYTE PTR [ebp-0x10],0x1
64022980:	je     0x64022985
64022982:	inc    DWORD PTR [ebp-0x48]
64022985:	mov    edx,DWORD PTR [ebp-0x8]
64022988:	mov    edi,DWORD PTR [ebp-0xc]
6402298b:	mov    esi,DWORD PTR [ebp-0xc]
6402298e:	shr    DWORD PTR [ebp-0x8],1
64022991:	shl    edx,0x1f
64022994:	shr    edi,1
64022996:	or     edi,edx
64022998:	mov    edx,DWORD PTR [ebp-0x10]
6402299b:	shl    esi,0x1f
6402299e:	shr    edx,1
640229a0:	or     edx,esi
640229a2:	dec    DWORD PTR [ebp-0x44]
640229a5:	mov    DWORD PTR [ebp-0xc],edi
640229a8:	mov    DWORD PTR [ebp-0x10],edx
640229ab:	jne    0x6402297c
640229ad:	cmp    DWORD PTR [ebp-0x48],0x0
640229b1:	je     0x640229b8
640229b3:	or     WORD PTR [ebp-0x10],0x1
640229b8:	cmp    WORD PTR [ebp-0x10],0x8000
640229be:	ja     0x640229d1
640229c0:	mov    edx,DWORD PTR [ebp-0x10]
640229c3:	and    edx,0x1ffff
640229c9:	cmp    edx,0x18000
640229cf:	jne    0x64022a04
640229d1:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640229d5:	jne    0x64022a01
640229d7:	and    DWORD PTR [ebp-0xe],0x0
640229db:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640229df:	jne    0x640229fc
640229e1:	and    DWORD PTR [ebp-0xa],0x0
640229e5:	cmp    WORD PTR [ebp-0x6],0xffff
640229eb:	jne    0x640229f6
640229ed:	mov    WORD PTR [ebp-0x6],0x8000
640229f3:	inc    eax
640229f4:	jmp    0x64022a04
640229f6:	inc    WORD PTR [ebp-0x6]
640229fa:	jmp    0x64022a04
640229fc:	inc    DWORD PTR [ebp-0xa]
640229ff:	jmp    0x64022a04
64022a01:	inc    DWORD PTR [ebp-0xe]
64022a04:	cmp    ax,0x7fff
64022a08:	jae    0x64022a26
64022a0a:	mov    dx,WORD PTR [ebp-0xe]
64022a0e:	mov    WORD PTR [ebp-0x20],dx
64022a12:	mov    edx,DWORD PTR [ebp-0xc]
64022a15:	mov    DWORD PTR [ebp-0x1e],edx
64022a18:	mov    edx,DWORD PTR [ebp-0x8]
64022a1b:	or     eax,ecx
64022a1d:	mov    DWORD PTR [ebp-0x1a],edx
64022a20:	mov    WORD PTR [ebp-0x16],ax
64022a24:	jmp    0x64022a42
64022a26:	neg    cx
64022a29:	sbb    ecx,ecx
64022a2b:	and    DWORD PTR [ebp-0x1c],0x0
64022a2f:	and    ecx,0x80000000
64022a35:	add    ecx,0x7fff8000
64022a3b:	and    DWORD PTR [ebp-0x20],0x0
64022a3f:	mov    DWORD PTR [ebp-0x18],ecx
64022a42:	test   ebx,ebx
64022a44:	jne    0x640227b5
64022a4a:	xor    eax,eax
64022a4c:	mov    ecx,DWORD PTR [ebp-0x18]
64022a4f:	shr    ecx,0x10
64022a52:	cmp    cx,0x3fff
64022a57:	mov    ebx,0x7fff
64022a5c:	jb     0x64022caa
64022a62:	mov    esi,DWORD PTR [ebp-0x26]
64022a65:	inc    DWORD PTR [ebp-0x4c]
64022a68:	movzx  edx,cx
64022a6b:	mov    ecx,esi
64022a6d:	xor    ecx,edx
64022a6f:	and    edx,ebx
64022a71:	and    esi,ebx
64022a73:	and    ecx,0x8000
64022a79:	cmp    dx,bx
64022a7c:	lea    edi,[esi+edx*1]
64022a7f:	mov    DWORD PTR [ebp-0x58],eax
64022a82:	mov    DWORD PTR [ebp-0x10],eax
64022a85:	mov    DWORD PTR [ebp-0xc],eax
64022a88:	mov    DWORD PTR [ebp-0x8],eax
64022a8b:	movzx  edi,di
64022a8e:	jae    0x64022c90
64022a94:	cmp    si,bx
64022a97:	jae    0x64022c90
64022a9d:	cmp    di,0xbffd
64022aa2:	ja     0x64022c90
64022aa8:	cmp    di,0x3fbf
64022aad:	ja     0x64022ab7
64022aaf:	mov    DWORD PTR [ebp-0x18],eax
64022ab2:	jmp    0x64022ca4
64022ab7:	cmp    dx,ax
64022aba:	jne    0x64022ad9
64022abc:	inc    edi
64022abd:	test   DWORD PTR [ebp-0x18],0x7fffffff
64022ac4:	jne    0x64022ad9
64022ac6:	cmp    DWORD PTR [ebp-0x1c],eax
64022ac9:	jne    0x64022ad9
64022acb:	cmp    DWORD PTR [ebp-0x20],eax
64022ace:	jne    0x64022ad9
64022ad0:	mov    WORD PTR [ebp-0x16],ax
64022ad4:	jmp    0x64022caa
64022ad9:	cmp    si,ax
64022adc:	jne    0x64022af2
64022ade:	inc    edi
64022adf:	test   DWORD PTR [ebp-0x28],0x7fffffff
64022ae6:	jne    0x64022af2
64022ae8:	cmp    DWORD PTR [ebp-0x2c],eax
64022aeb:	jne    0x64022af2
64022aed:	cmp    DWORD PTR [ebp-0x30],eax
64022af0:	je     0x64022aaf
64022af2:	and    DWORD PTR [ebp-0x54],0x0
64022af6:	lea    eax,[ebp-0xc]
64022af9:	mov    DWORD PTR [ebp-0x40],0x5
64022b00:	mov    edx,DWORD PTR [ebp-0x54]
64022b03:	mov    esi,DWORD PTR [ebp-0x40]
64022b06:	add    edx,edx
64022b08:	test   esi,esi
64022b0a:	mov    DWORD PTR [ebp-0x50],esi
64022b0d:	jle    0x64022b61
64022b0f:	lea    esi,[ebp-0x28]
64022b12:	lea    edx,[ebp+edx*1-0x20]
64022b16:	mov    DWORD PTR [ebp-0x5c],esi
64022b19:	mov    DWORD PTR [ebp-0x48],edx
64022b1c:	mov    edx,DWORD PTR [ebp-0x5c]
64022b1f:	mov    esi,DWORD PTR [ebp-0x48]
64022b22:	movzx  esi,WORD PTR [esi]
64022b25:	movzx  edx,WORD PTR [edx]
64022b28:	and    DWORD PTR [ebp-0x44],0x0
64022b2c:	imul   edx,esi
64022b2f:	mov    esi,DWORD PTR [eax-0x4]
64022b32:	lea    ebx,[esi+edx*1]
64022b35:	cmp    ebx,esi
64022b37:	jb     0x64022b3d
64022b39:	cmp    ebx,edx
64022b3b:	jae    0x64022b44
64022b3d:	mov    DWORD PTR [ebp-0x44],0x1
64022b44:	cmp    DWORD PTR [ebp-0x44],0x0
64022b48:	mov    DWORD PTR [eax-0x4],ebx
64022b4b:	je     0x64022b50
64022b4d:	inc    WORD PTR [eax]
64022b50:	add    DWORD PTR [ebp-0x48],0x2
64022b54:	sub    DWORD PTR [ebp-0x5c],0x2
64022b58:	dec    DWORD PTR [ebp-0x50]
64022b5b:	cmp    DWORD PTR [ebp-0x50],0x0
64022b5f:	jg     0x64022b1c
64022b61:	inc    eax
64022b62:	inc    eax
64022b63:	inc    DWORD PTR [ebp-0x54]
64022b66:	dec    DWORD PTR [ebp-0x40]
64022b69:	cmp    DWORD PTR [ebp-0x40],0x0
64022b6d:	jg     0x64022b00
64022b6f:	add    edi,0xc002
64022b75:	xor    eax,eax
64022b77:	cmp    di,ax
64022b7a:	jle    0x64022bb8
64022b7c:	test   DWORD PTR [ebp-0x8],0x80000000
64022b83:	jne    0x64022bb3
64022b85:	mov    edx,DWORD PTR [ebp-0x10]
64022b88:	mov    ebx,DWORD PTR [ebp-0xc]
64022b8b:	mov    esi,DWORD PTR [ebp-0xc]
64022b8e:	shl    DWORD PTR [ebp-0x10],1
64022b91:	shr    edx,0x1f
64022b94:	add    ebx,ebx
64022b96:	or     ebx,edx
64022b98:	mov    edx,DWORD PTR [ebp-0x8]
64022b9b:	shr    esi,0x1f
64022b9e:	add    edx,edx
64022ba0:	or     edx,esi
64022ba2:	add    edi,0xffff
64022ba8:	cmp    di,ax
64022bab:	mov    DWORD PTR [ebp-0xc],ebx
64022bae:	mov    DWORD PTR [ebp-0x8],edx
64022bb1:	jg     0x64022b7c
64022bb3:	cmp    di,ax
64022bb6:	jg     0x64022c05
64022bb8:	add    edi,0xffff
64022bbe:	cmp    di,ax
64022bc1:	jge    0x64022c05
64022bc3:	mov    eax,edi
64022bc5:	neg    eax
64022bc7:	movzx  eax,ax
64022bca:	add    edi,eax
64022bcc:	test   BYTE PTR [ebp-0x10],0x1
64022bd0:	je     0x64022bd5
64022bd2:	inc    DWORD PTR [ebp-0x58]
64022bd5:	mov    edx,DWORD PTR [ebp-0x8]
64022bd8:	mov    ebx,DWORD PTR [ebp-0xc]
64022bdb:	mov    esi,DWORD PTR [ebp-0xc]
64022bde:	shr    DWORD PTR [ebp-0x8],1
64022be1:	shl    edx,0x1f
64022be4:	shr    ebx,1
64022be6:	or     ebx,edx
64022be8:	mov    edx,DWORD PTR [ebp-0x10]
64022beb:	shl    esi,0x1f
64022bee:	shr    edx,1
64022bf0:	or     edx,esi
64022bf2:	dec    eax
64022bf3:	mov    DWORD PTR [ebp-0xc],ebx
64022bf6:	mov    DWORD PTR [ebp-0x10],edx
64022bf9:	jne    0x64022bcc
64022bfb:	cmp    DWORD PTR [ebp-0x58],eax
64022bfe:	je     0x64022c05
64022c00:	or     WORD PTR [ebp-0x10],0x1
64022c05:	cmp    WORD PTR [ebp-0x10],0x8000
64022c0b:	ja     0x64022c1e
64022c0d:	mov    edx,DWORD PTR [ebp-0x10]
64022c10:	and    edx,0x1ffff
64022c16:	cmp    edx,0x18000
64022c1c:	jne    0x64022c4f
64022c1e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022c22:	jne    0x64022c4c
64022c24:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64022c28:	mov    DWORD PTR [ebp-0xe],eax
64022c2b:	jne    0x64022c47
64022c2d:	cmp    WORD PTR [ebp-0x6],0xffff
64022c33:	mov    DWORD PTR [ebp-0xa],eax
64022c36:	jne    0x64022c41
64022c38:	mov    WORD PTR [ebp-0x6],0x8000
64022c3e:	inc    edi
64022c3f:	jmp    0x64022c4f
64022c41:	inc    WORD PTR [ebp-0x6]
64022c45:	jmp    0x64022c4f
64022c47:	inc    DWORD PTR [ebp-0xa]
64022c4a:	jmp    0x64022c4f
64022c4c:	inc    DWORD PTR [ebp-0xe]
64022c4f:	cmp    di,0x7fff
64022c54:	jb     0x64022c74
64022c56:	neg    cx
64022c59:	mov    DWORD PTR [ebp-0x1c],eax
64022c5c:	mov    DWORD PTR [ebp-0x20],eax
64022c5f:	sbb    ecx,ecx
64022c61:	and    ecx,0x80000000
64022c67:	add    ecx,0x7fff8000
64022c6d:	mov    DWORD PTR [ebp-0x18],ecx
64022c70:	xor    eax,eax
64022c72:	jmp    0x64022caa
64022c74:	mov    ax,WORD PTR [ebp-0xe]
64022c78:	mov    WORD PTR [ebp-0x20],ax
64022c7c:	mov    eax,DWORD PTR [ebp-0xc]
64022c7f:	mov    DWORD PTR [ebp-0x1e],eax
64022c82:	mov    eax,DWORD PTR [ebp-0x8]
64022c85:	or     edi,ecx
64022c87:	mov    DWORD PTR [ebp-0x1a],eax
64022c8a:	mov    WORD PTR [ebp-0x16],di
64022c8e:	jmp    0x64022c70
64022c90:	neg    cx
64022c93:	sbb    ecx,ecx
64022c95:	and    ecx,0x80000000
64022c9b:	add    ecx,0x7fff8000
64022ca1:	mov    DWORD PTR [ebp-0x18],ecx
64022ca4:	mov    DWORD PTR [ebp-0x1c],eax
64022ca7:	mov    DWORD PTR [ebp-0x20],eax
64022caa:	test   BYTE PTR [ebp+0x18],0x1
64022cae:	mov    edx,DWORD PTR [ebp-0x60]
64022cb1:	mov    ecx,DWORD PTR [ebp-0x4c]
64022cb4:	mov    WORD PTR [edx],cx
64022cb7:	je     0x64022ceb
64022cb9:	movsx  ecx,cx
64022cbc:	add    DWORD PTR [ebp+0x14],ecx
64022cbf:	cmp    DWORD PTR [ebp+0x14],eax
64022cc2:	jg     0x64022ceb
64022cc4:	and    WORD PTR [edx],0x0
64022cc8:	cmp    WORD PTR [ebp-0x6c],0x8000
64022cce:	mov    BYTE PTR [edx+0x3],0x1
64022cd2:	setne  al
64022cd5:	dec    al
64022cd7:	and    al,0xd
64022cd9:	add    al,0x20
64022cdb:	mov    BYTE PTR [edx+0x2],al
64022cde:	mov    BYTE PTR [edx+0x4],0x30
64022ce2:	mov    BYTE PTR [edx+0x5],0x0
64022ce6:	jmp    0x6402269c
64022ceb:	push   0x15
64022ced:	pop    ecx
64022cee:	cmp    DWORD PTR [ebp+0x14],ecx
64022cf1:	jle    0x64022cf6
64022cf3:	mov    DWORD PTR [ebp+0x14],ecx
64022cf6:	mov    esi,DWORD PTR [ebp-0x18]
64022cf9:	shr    esi,0x10
64022cfc:	push   0x8
64022cfe:	sub    esi,0x3ffe
64022d04:	mov    WORD PTR [ebp-0x16],ax
64022d08:	pop    ebx
64022d09:	mov    eax,DWORD PTR [ebp-0x20]
64022d0c:	mov    edi,DWORD PTR [ebp-0x1c]
64022d0f:	mov    ecx,DWORD PTR [ebp-0x1c]
64022d12:	shl    DWORD PTR [ebp-0x20],1
64022d15:	shr    eax,0x1f
64022d18:	add    edi,edi
64022d1a:	or     edi,eax
64022d1c:	mov    eax,DWORD PTR [ebp-0x18]
64022d1f:	shr    ecx,0x1f
64022d22:	add    eax,eax
64022d24:	or     eax,ecx
64022d26:	dec    ebx
64022d27:	mov    DWORD PTR [ebp-0x1c],edi
64022d2a:	mov    DWORD PTR [ebp-0x18],eax
64022d2d:	jne    0x64022d09
64022d2f:	test   esi,esi
64022d31:	jge    0x64022d65
64022d33:	neg    esi
64022d35:	and    esi,0xff
64022d3b:	jle    0x64022d65
64022d3d:	mov    eax,DWORD PTR [ebp-0x18]
64022d40:	mov    edi,DWORD PTR [ebp-0x1c]
64022d43:	mov    ecx,DWORD PTR [ebp-0x1c]
64022d46:	shr    DWORD PTR [ebp-0x18],1
64022d49:	shl    eax,0x1f
64022d4c:	shr    edi,1
64022d4e:	or     edi,eax
64022d50:	mov    eax,DWORD PTR [ebp-0x20]
64022d53:	shl    ecx,0x1f
64022d56:	shr    eax,1
64022d58:	or     eax,ecx
64022d5a:	dec    esi
64022d5b:	test   esi,esi
64022d5d:	mov    DWORD PTR [ebp-0x1c],edi
64022d60:	mov    DWORD PTR [ebp-0x20],eax
64022d63:	jg     0x64022d3d
64022d65:	mov    eax,DWORD PTR [ebp+0x14]
64022d68:	inc    eax
64022d69:	test   eax,eax
64022d6b:	lea    ebx,[edx+0x4]
64022d6e:	mov    DWORD PTR [ebp-0x40],ebx
64022d71:	mov    DWORD PTR [ebp-0x4c],eax
64022d74:	jle    0x64022e2f
64022d7a:	mov    edx,DWORD PTR [ebp-0x20]
64022d7d:	mov    eax,DWORD PTR [ebp-0x1c]
64022d80:	lea    esi,[ebp-0x20]
64022d83:	lea    edi,[ebp-0x3c]
64022d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022d89:	shl    DWORD PTR [ebp-0x20],1
64022d8c:	mov    edi,DWORD PTR [ebp-0x20]
64022d8f:	shl    DWORD PTR [ebp-0x20],1
64022d92:	shr    edx,0x1f
64022d95:	lea    ecx,[eax+eax*1]
64022d98:	or     ecx,edx
64022d9a:	mov    edx,DWORD PTR [ebp-0x18]
64022d9d:	mov    esi,eax
64022d9f:	shr    esi,0x1f
64022da2:	add    edx,edx
64022da4:	or     edx,esi
64022da6:	mov    eax,ecx
64022da8:	lea    esi,[ecx+ecx*1]
64022dab:	shr    eax,0x1f
64022dae:	lea    ecx,[edx+edx*1]
64022db1:	mov    edx,DWORD PTR [ebp-0x3c]
64022db4:	shr    edi,0x1f
64022db7:	or     ecx,eax
64022db9:	mov    eax,DWORD PTR [ebp-0x20]
64022dbc:	or     esi,edi
64022dbe:	lea    edi,[edx+eax*1]
64022dc1:	cmp    edi,eax
64022dc3:	jb     0x64022dc9
64022dc5:	cmp    edi,edx
64022dc7:	jae    0x64022de1
64022dc9:	lea    eax,[esi+0x1]
64022dcc:	xor    edx,edx
64022dce:	cmp    eax,esi
64022dd0:	jb     0x64022dd7
64022dd2:	cmp    eax,0x1
64022dd5:	jae    0x64022dda
64022dd7:	xor    edx,edx
64022dd9:	inc    edx
64022dda:	test   edx,edx
64022ddc:	mov    esi,eax
64022dde:	je     0x64022de1
64022de0:	inc    ecx
64022de1:	mov    eax,DWORD PTR [ebp-0x38]
64022de4:	lea    edx,[eax+esi*1]
64022de7:	cmp    edx,esi
64022de9:	mov    DWORD PTR [ebp-0x44],edx
64022dec:	jb     0x64022df2
64022dee:	cmp    edx,eax
64022df0:	jae    0x64022df3
64022df2:	inc    ecx
64022df3:	add    ecx,DWORD PTR [ebp-0x34]
64022df6:	shr    edx,0x1f
64022df9:	add    ecx,ecx
64022dfb:	or     ecx,edx
64022dfd:	lea    esi,[edi+edi*1]
64022e00:	mov    DWORD PTR [ebp-0x20],esi
64022e03:	mov    esi,DWORD PTR [ebp-0x44]
64022e06:	mov    DWORD PTR [ebp-0x18],ecx
64022e09:	shr    ecx,0x18
64022e0c:	add    esi,esi
64022e0e:	add    cl,0x30
64022e11:	mov    eax,edi
64022e13:	shr    eax,0x1f
64022e16:	or     esi,eax
64022e18:	mov    BYTE PTR [ebx],cl
64022e1a:	inc    ebx
64022e1b:	dec    DWORD PTR [ebp-0x4c]
64022e1e:	cmp    DWORD PTR [ebp-0x4c],0x0
64022e22:	mov    DWORD PTR [ebp-0x1c],esi
64022e25:	mov    BYTE PTR [ebp-0x15],0x0
64022e29:	jg     0x64022d7a
64022e2f:	dec    ebx
64022e30:	mov    al,BYTE PTR [ebx]
64022e32:	dec    ebx
64022e33:	cmp    al,0x35
64022e35:	jge    0x64022e45
64022e37:	mov    ecx,DWORD PTR [ebp-0x40]
64022e3a:	jmp    0x64022e80
64022e3c:	cmp    BYTE PTR [ebx],0x39
64022e3f:	jne    0x64022e4a
64022e41:	mov    BYTE PTR [ebx],0x30
64022e44:	dec    ebx
64022e45:	cmp    ebx,DWORD PTR [ebp-0x40]
64022e48:	jae    0x64022e3c
64022e4a:	cmp    ebx,DWORD PTR [ebp-0x40]
64022e4d:	mov    eax,DWORD PTR [ebp-0x60]
64022e50:	jae    0x64022e56
64022e52:	inc    ebx
64022e53:	inc    WORD PTR [eax]
64022e56:	inc    BYTE PTR [ebx]
64022e58:	sub    bl,al
64022e5a:	sub    bl,0x3
64022e5d:	movsx  ecx,bl
64022e60:	mov    BYTE PTR [eax+0x3],bl
64022e63:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
64022e68:	mov    eax,DWORD PTR [ebp-0x74]
64022e6b:	mov    ecx,DWORD PTR [ebp-0x4]
64022e6e:	pop    edi
64022e6f:	pop    esi
64022e70:	xor    ecx,ebp
64022e72:	pop    ebx
64022e73:	call   0x64013f6c
64022e78:	leave  
64022e79:	ret    
64022e7a:	cmp    BYTE PTR [ebx],0x30
64022e7d:	jne    0x64022e84
64022e7f:	dec    ebx
64022e80:	cmp    ebx,ecx
64022e82:	jae    0x64022e7a
64022e84:	cmp    ebx,ecx
64022e86:	mov    eax,DWORD PTR [ebp-0x60]
64022e89:	jae    0x64022e58
64022e8b:	and    WORD PTR [eax],0x0
64022e8f:	cmp    WORD PTR [ebp-0x6c],0x8000
64022e95:	mov    BYTE PTR [eax+0x3],0x1
64022e99:	setne  dl
64022e9c:	dec    dl
64022e9e:	and    dl,0xd
64022ea1:	add    dl,0x20
64022ea4:	mov    BYTE PTR [eax+0x2],dl
64022ea7:	mov    BYTE PTR [ecx],0x30
64022eaa:	mov    BYTE PTR [eax+0x5],0x0
64022eae:	jmp    0x6402269c
64022eb3:	xor    eax,eax
64022eb5:	test   bl,0x10
64022eb8:	je     0x64022ebb
64022eba:	inc    eax
64022ebb:	test   bl,0x8
64022ebe:	je     0x64022ec3
64022ec0:	or     eax,0x4
64022ec3:	test   bl,0x4
64022ec6:	je     0x64022ecb
64022ec8:	or     eax,0x8
64022ecb:	test   bl,0x2
64022ece:	je     0x64022ed3
64022ed0:	or     eax,0x10
64022ed3:	test   bl,0x1
64022ed6:	je     0x64022edb
64022ed8:	or     eax,0x20
64022edb:	test   ebx,0x80000
64022ee1:	je     0x64022ee6
64022ee3:	or     eax,0x2
64022ee6:	mov    ecx,ebx
64022ee8:	mov    edx,0x300
64022eed:	and    ecx,edx
64022eef:	push   esi
64022ef0:	mov    esi,0x200
64022ef5:	je     0x64022f1a
64022ef7:	cmp    ecx,0x100
64022efd:	je     0x64022f15
64022eff:	cmp    ecx,esi
64022f01:	je     0x64022f0e
64022f03:	cmp    ecx,edx
64022f05:	jne    0x64022f1a
64022f07:	or     eax,0xc00
64022f0c:	jmp    0x64022f1a
64022f0e:	or     eax,0x800
64022f13:	jmp    0x64022f1a
64022f15:	or     eax,0x400
64022f1a:	mov    ecx,ebx
64022f1c:	and    ecx,0x30000
64022f22:	je     0x64022f30
64022f24:	cmp    ecx,0x10000
64022f2a:	jne    0x64022f32
64022f2c:	or     eax,esi
64022f2e:	jmp    0x64022f32
64022f30:	or     eax,edx
64022f32:	test   ebx,0x40000
64022f38:	pop    esi
64022f39:	je     0x64022f40
64022f3b:	or     eax,0x1000
64022f40:	ret    
64022f41:	xor    eax,eax
64022f43:	test   dl,0x10
64022f46:	je     0x64022f4d
64022f48:	mov    eax,0x80
64022f4d:	test   dl,0x8
64022f50:	push   ebx
64022f51:	push   esi
64022f52:	push   edi
64022f53:	mov    ebx,0x200
64022f58:	je     0x64022f5c
64022f5a:	or     eax,ebx
64022f5c:	test   dl,0x4
64022f5f:	je     0x64022f66
64022f61:	or     eax,0x400
64022f66:	test   dl,0x2
64022f69:	je     0x64022f70
64022f6b:	or     eax,0x800
64022f70:	test   dl,0x1
64022f73:	je     0x64022f7a
64022f75:	or     eax,0x1000
64022f7a:	test   edx,0x80000
64022f80:	mov    edi,0x100
64022f85:	je     0x64022f89
64022f87:	or     eax,edi
64022f89:	mov    ecx,edx
64022f8b:	mov    esi,0x300
64022f90:	and    ecx,esi
64022f92:	je     0x64022fb3
64022f94:	cmp    ecx,edi
64022f96:	je     0x64022fae
64022f98:	cmp    ecx,ebx
64022f9a:	je     0x64022fa7
64022f9c:	cmp    ecx,esi
64022f9e:	jne    0x64022fb3
64022fa0:	or     eax,0x6000
64022fa5:	jmp    0x64022fb3
64022fa7:	or     eax,0x4000
64022fac:	jmp    0x64022fb3
64022fae:	or     eax,0x2000
64022fb3:	mov    ecx,0x3000000
64022fb8:	pop    edi
64022fb9:	and    edx,ecx
64022fbb:	cmp    edx,0x1000000
64022fc1:	pop    esi
64022fc2:	pop    ebx
64022fc3:	je     0x64022fdb
64022fc5:	cmp    edx,0x2000000
64022fcb:	je     0x64022fd7
64022fcd:	cmp    edx,ecx
64022fcf:	jne    0x64022fe0
64022fd1:	or     eax,0x8000
64022fd6:	ret    
64022fd7:	or     eax,0x40
64022fda:	ret    
64022fdb:	or     eax,0x8040
64022fe0:	ret    
64022fe1:	sub    esp,0x10
64022fe4:	push   ebx
64022fe5:	push   ebp
64022fe6:	push   esi
64022fe7:	push   edi
64022fe8:	fstcw  WORD PTR [esp+0x14]
64022fed:	mov    ebx,DWORD PTR [esp+0x14]
64022ff1:	xor    edx,edx
64022ff3:	test   bl,0x1
64022ff6:	je     0x64022ffb
64022ff8:	push   0x10
64022ffa:	pop    edx
64022ffb:	test   bl,0x4
64022ffe:	je     0x64023003
64023000:	or     edx,0x8
64023003:	test   bl,0x8
64023006:	je     0x6402300b
64023008:	or     edx,0x4
6402300b:	test   bl,0x10
6402300e:	je     0x64023013
64023010:	or     edx,0x2
64023013:	test   bl,0x20
64023016:	je     0x6402301b
64023018:	or     edx,0x1
6402301b:	test   bl,0x2
6402301e:	je     0x64023026
64023020:	or     edx,0x80000
64023026:	movzx  ecx,bx
64023029:	mov    eax,ecx
6402302b:	mov    edi,0xc00
64023030:	and    eax,edi
64023032:	mov    ebp,0x300
64023037:	mov    esi,0x200
6402303c:	je     0x6402305e
6402303e:	cmp    eax,0x400
64023043:	je     0x64023058
64023045:	cmp    eax,0x800
6402304a:	je     0x64023054
6402304c:	cmp    eax,edi
6402304e:	jne    0x6402305e
64023050:	or     edx,ebp
64023052:	jmp    0x6402305e
64023054:	or     edx,esi
64023056:	jmp    0x6402305e
64023058:	or     edx,0x100
6402305e:	and    ecx,ebp
64023060:	je     0x6402306e
64023062:	cmp    ecx,esi
64023064:	jne    0x64023074
64023066:	or     edx,0x10000
6402306c:	jmp    0x64023074
6402306e:	or     edx,0x20000
64023074:	test   bx,0x1000
64023079:	je     0x64023081
6402307b:	or     edx,0x40000
64023081:	mov    esi,DWORD PTR [esp+0x28]
64023085:	mov    ecx,DWORD PTR [esp+0x24]
64023089:	mov    eax,esi
6402308b:	not    eax
6402308d:	and    eax,edx
6402308f:	and    ecx,esi
64023091:	or     eax,ecx
64023093:	cmp    eax,edx
64023095:	mov    DWORD PTR [esp+0x1c],eax
64023099:	je     0x64023149
6402309f:	mov    ebx,eax
640230a1:	call   0x64022eb3
640230a6:	movzx  eax,ax
640230a9:	mov    DWORD PTR [esp+0x10],eax
640230ad:	fldcw  WORD PTR [esp+0x10]
640230b1:	fstcw  WORD PTR [esp+0x10]
640230b6:	mov    ebx,DWORD PTR [esp+0x10]
640230ba:	xor    edx,edx
640230bc:	test   bl,0x1
640230bf:	je     0x640230c4
640230c1:	push   0x10
640230c3:	pop    edx
640230c4:	test   bl,0x4
640230c7:	je     0x640230cc
640230c9:	or     edx,0x8
640230cc:	test   bl,0x8
640230cf:	je     0x640230d4
640230d1:	or     edx,0x4
640230d4:	test   bl,0x10
640230d7:	je     0x640230dc
640230d9:	or     edx,0x2
640230dc:	test   bl,0x20
640230df:	je     0x640230e4
640230e1:	or     edx,0x1
640230e4:	test   bl,0x2
640230e7:	je     0x640230ef
640230e9:	or     edx,0x80000
640230ef:	movzx  ecx,bx
640230f2:	mov    eax,ecx
640230f4:	and    eax,edi
640230f6:	je     0x6402311c
640230f8:	cmp    eax,0x400
640230fd:	je     0x64023116
640230ff:	cmp    eax,0x800
64023104:	je     0x6402310e
64023106:	cmp    eax,edi
64023108:	jne    0x6402311c
6402310a:	or     edx,ebp
6402310c:	jmp    0x6402311c
6402310e:	or     edx,0x200
64023114:	jmp    0x6402311c
64023116:	or     edx,0x100
6402311c:	and    ecx,ebp
6402311e:	je     0x64023130
64023120:	cmp    ecx,0x200
64023126:	jne    0x64023136
64023128:	or     edx,0x10000
6402312e:	jmp    0x64023136
64023130:	or     edx,0x20000
64023136:	test   bx,0x1000
6402313b:	je     0x64023143
6402313d:	or     edx,0x40000
64023143:	mov    eax,edx
64023145:	mov    DWORD PTR [esp+0x1c],edx
64023149:	cmp    DWORD PTR ds:0x64034644,0x0
64023150:	je     0x640232dc
64023156:	and    esi,0x308031f
6402315c:	mov    edi,esi
6402315e:	stmxcsr DWORD PTR [esp+0x18]
64023163:	mov    eax,DWORD PTR [esp+0x18]
64023167:	xor    esi,esi
64023169:	test   al,al
6402316b:	jns    0x64023170
6402316d:	push   0x10
6402316f:	pop    esi
64023170:	test   ax,0x200
64023174:	je     0x64023179
64023176:	or     esi,0x8
64023179:	test   ax,0x400
6402317d:	je     0x64023182
6402317f:	or     esi,0x4
64023182:	test   ax,0x800
64023186:	je     0x6402318b
64023188:	or     esi,0x2
6402318b:	test   ax,0x1000
6402318f:	je     0x64023194
64023191:	or     esi,0x1
64023194:	test   ax,0x100
64023198:	je     0x640231a0
6402319a:	or     esi,0x80000
640231a0:	mov    ecx,eax
640231a2:	mov    ebp,0x6000
640231a7:	and    ecx,ebp
640231a9:	je     0x640231d5
640231ab:	cmp    ecx,0x2000
640231b1:	je     0x640231cf
640231b3:	cmp    ecx,0x4000
640231b9:	je     0x640231c7
640231bb:	cmp    ecx,ebp
640231bd:	jne    0x640231d5
640231bf:	or     esi,0x300
640231c5:	jmp    0x640231d5
640231c7:	or     esi,0x200
640231cd:	jmp    0x640231d5
640231cf:	or     esi,0x100
640231d5:	mov    ebx,0x8040
640231da:	and    eax,ebx
640231dc:	sub    eax,0x40
640231df:	je     0x640231fd
640231e1:	sub    eax,0x7fc0
640231e6:	je     0x640231f5
640231e8:	sub    eax,0x40
640231eb:	jne    0x64023203
640231ed:	or     esi,0x1000000
640231f3:	jmp    0x64023203
640231f5:	or     esi,0x3000000
640231fb:	jmp    0x64023203
640231fd:	or     esi,0x2000000
64023203:	mov    edx,edi
64023205:	and    edi,DWORD PTR [esp+0x24]
64023209:	not    edx
6402320b:	and    edx,esi
6402320d:	or     edx,edi
6402320f:	cmp    edx,esi
64023211:	jne    0x6402321a
64023213:	mov    eax,esi
64023215:	jmp    0x640232c5
6402321a:	call   0x64022f41
6402321f:	push   eax
64023220:	mov    DWORD PTR [esp+0x2c],eax
64023224:	call   0x640234b0
64023229:	pop    ecx
6402322a:	stmxcsr DWORD PTR [esp+0x28]
6402322f:	mov    eax,DWORD PTR [esp+0x28]
64023233:	xor    edx,edx
64023235:	test   al,al
64023237:	jns    0x6402323c
64023239:	push   0x10
6402323b:	pop    edx
6402323c:	mov    edi,0x200
64023241:	test   edi,eax
64023243:	je     0x64023248
64023245:	or     edx,0x8
64023248:	test   ax,0x400
6402324c:	je     0x64023251
6402324e:	or     edx,0x4
64023251:	test   ax,0x800
64023255:	je     0x6402325a
64023257:	or     edx,0x2
6402325a:	test   ax,0x1000
6402325e:	je     0x64023263
64023260:	or     edx,0x1
64023263:	mov    esi,0x100
64023268:	test   esi,eax
6402326a:	je     0x64023272
6402326c:	or     edx,0x80000
64023272:	mov    ecx,eax
64023274:	and    ecx,ebp
64023276:	je     0x6402329a
64023278:	cmp    ecx,0x2000
6402327e:	je     0x64023298
64023280:	cmp    ecx,0x4000
64023286:	je     0x64023294
64023288:	cmp    ecx,ebp
6402328a:	jne    0x6402329a
6402328c:	or     edx,0x300
64023292:	jmp    0x6402329a
64023294:	or     edx,edi
64023296:	jmp    0x6402329a
64023298:	or     edx,esi
6402329a:	and    eax,ebx
6402329c:	sub    eax,0x40
6402329f:	je     0x640232bd
640232a1:	sub    eax,0x7fc0
640232a6:	je     0x640232b5
640232a8:	sub    eax,0x40
640232ab:	jne    0x640232c3
640232ad:	or     edx,0x1000000
640232b3:	jmp    0x640232c3
640232b5:	or     edx,0x3000000
640232bb:	jmp    0x640232c3
640232bd:	or     edx,0x2000000
640232c3:	mov    eax,edx
640232c5:	mov    ecx,DWORD PTR [esp+0x1c]
640232c9:	mov    edx,eax
640232cb:	xor    edx,ecx
640232cd:	or     eax,ecx
640232cf:	test   edx,0x8031f
640232d5:	je     0x640232dc
640232d7:	or     eax,0x80000000
640232dc:	pop    edi
640232dd:	pop    esi
640232de:	pop    ebp
640232df:	pop    ebx
640232e0:	add    esp,0x10
640232e3:	ret    
640232e4:	push   ebp
640232e5:	mov    ebp,esp
640232e7:	sub    esp,0x18
640232ea:	mov    eax,ds:0x6402f09c
640232ef:	xor    eax,ebp
640232f1:	mov    DWORD PTR [ebp-0x4],eax
640232f4:	mov    eax,DWORD PTR [ebp+0x10]
640232f7:	push   ebx
640232f8:	push   esi
640232f9:	xor    esi,esi
640232fb:	cmp    DWORD PTR [ebp+0xc],esi
640232fe:	push   edi
640232ff:	mov    DWORD PTR [ebp-0x18],0x404e
64023306:	mov    DWORD PTR [eax],esi
64023308:	mov    DWORD PTR [eax+0x4],esi
6402330b:	mov    DWORD PTR [eax+0x8],esi
6402330e:	jbe    0x6402345a
64023314:	mov    edx,DWORD PTR [eax]
64023316:	mov    ebx,DWORD PTR [eax+0x4]
64023319:	mov    esi,eax
6402331b:	lea    edi,[ebp-0x10]
6402331e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402331f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64023320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64023321:	mov    ecx,edx
64023323:	shr    ecx,0x1f
64023326:	lea    edi,[edx+edx*1]
64023329:	lea    edx,[ebx+ebx*1]
6402332c:	or     edx,ecx
6402332e:	mov    ecx,DWORD PTR [eax+0x8]
64023331:	mov    esi,ebx
64023333:	shr    esi,0x1f
64023336:	add    ecx,ecx
64023338:	or     ecx,esi
6402333a:	mov    DWORD PTR [ebp-0x14],edi
6402333d:	mov    esi,edi
6402333f:	and    DWORD PTR [ebp-0x14],0x0
64023343:	mov    ebx,edx
64023345:	shr    ebx,0x1f
64023348:	add    ecx,ecx
6402334a:	shr    edi,0x1f
6402334d:	or     ecx,ebx
6402334f:	mov    ebx,DWORD PTR [ebp-0x10]
64023352:	add    esi,esi
64023354:	add    edx,edx
64023356:	or     edx,edi
64023358:	lea    edi,[esi+ebx*1]
6402335b:	cmp    edi,esi
6402335d:	mov    DWORD PTR [eax],esi
6402335f:	mov    DWORD PTR [eax+0x4],edx
64023362:	mov    DWORD PTR [eax+0x8],ecx
64023365:	jb     0x6402336b
64023367:	cmp    edi,ebx
64023369:	jae    0x64023372
6402336b:	mov    DWORD PTR [ebp-0x14],0x1
64023372:	xor    ebx,ebx
64023374:	cmp    DWORD PTR [ebp-0x14],ebx
64023377:	mov    DWORD PTR [eax],edi
64023379:	je     0x64023395
6402337b:	lea    esi,[edx+0x1]
6402337e:	cmp    esi,edx
64023380:	jb     0x64023387
64023382:	cmp    esi,0x1
64023385:	jae    0x6402338a
64023387:	xor    ebx,ebx
64023389:	inc    ebx
6402338a:	test   ebx,ebx
6402338c:	mov    DWORD PTR [eax+0x4],esi
6402338f:	je     0x64023395
64023391:	inc    ecx
64023392:	mov    DWORD PTR [eax+0x8],ecx
64023395:	mov    ecx,DWORD PTR [eax+0x4]
64023398:	mov    edx,DWORD PTR [ebp-0xc]
6402339b:	lea    ebx,[ecx+edx*1]
6402339e:	xor    esi,esi
640233a0:	cmp    ebx,ecx
640233a2:	jb     0x640233a8
640233a4:	cmp    ebx,edx
640233a6:	jae    0x640233ab
640233a8:	xor    esi,esi
640233aa:	inc    esi
640233ab:	test   esi,esi
640233ad:	mov    DWORD PTR [eax+0x4],ebx
640233b0:	je     0x640233b5
640233b2:	inc    DWORD PTR [eax+0x8]
640233b5:	mov    ecx,DWORD PTR [ebp-0x8]
640233b8:	add    DWORD PTR [eax+0x8],ecx
640233bb:	and    DWORD PTR [ebp-0x14],0x0
640233bf:	lea    ecx,[edi+edi*1]
640233c2:	mov    edx,edi
640233c4:	shr    edx,0x1f
640233c7:	lea    edi,[ebx+ebx*1]
640233ca:	or     edi,edx
640233cc:	mov    edx,DWORD PTR [eax+0x8]
640233cf:	mov    esi,ebx
640233d1:	shr    esi,0x1f
640233d4:	lea    ebx,[edx+edx*1]
640233d7:	mov    edx,DWORD PTR [ebp+0x8]
640233da:	or     ebx,esi
640233dc:	mov    DWORD PTR [eax],ecx
640233de:	mov    DWORD PTR [eax+0x4],edi
640233e1:	mov    DWORD PTR [eax+0x8],ebx
640233e4:	movsx  edx,BYTE PTR [edx]
640233e7:	lea    esi,[ecx+edx*1]
640233ea:	cmp    esi,ecx
640233ec:	mov    DWORD PTR [ebp-0x10],edx
640233ef:	jb     0x640233f5
640233f1:	cmp    esi,edx
640233f3:	jae    0x640233fc
640233f5:	mov    DWORD PTR [ebp-0x14],0x1
640233fc:	cmp    DWORD PTR [ebp-0x14],0x0
64023400:	mov    DWORD PTR [eax],esi
64023402:	je     0x64023420
64023404:	lea    ecx,[edi+0x1]
64023407:	xor    edx,edx
64023409:	cmp    ecx,edi
6402340b:	jb     0x64023412
6402340d:	cmp    ecx,0x1
64023410:	jae    0x64023415
64023412:	xor    edx,edx
64023414:	inc    edx
64023415:	test   edx,edx
64023417:	mov    DWORD PTR [eax+0x4],ecx
6402341a:	je     0x64023420
6402341c:	inc    ebx
6402341d:	mov    DWORD PTR [eax+0x8],ebx
64023420:	dec    DWORD PTR [ebp+0xc]
64023423:	inc    DWORD PTR [ebp+0x8]
64023426:	cmp    DWORD PTR [ebp+0xc],0x0
6402342a:	ja     0x64023314
64023430:	xor    esi,esi
64023432:	jmp    0x6402345a
64023434:	mov    ecx,DWORD PTR [eax+0x4]
64023437:	mov    edx,ecx
64023439:	shr    edx,0x10
6402343c:	mov    DWORD PTR [eax+0x8],edx
6402343f:	mov    edx,DWORD PTR [eax]
64023441:	mov    edi,edx
64023443:	shl    ecx,0x10
64023446:	shr    edi,0x10
64023449:	or     ecx,edi
6402344b:	shl    edx,0x10
6402344e:	add    DWORD PTR [ebp-0x18],0xfff0
64023455:	mov    DWORD PTR [eax+0x4],ecx
64023458:	mov    DWORD PTR [eax],edx
6402345a:	cmp    DWORD PTR [eax+0x8],esi
6402345d:	je     0x64023434
6402345f:	mov    ebx,0x8000
64023464:	test   DWORD PTR [eax+0x8],ebx
64023467:	jne    0x64023499
64023469:	mov    esi,DWORD PTR [eax]
6402346b:	mov    edi,DWORD PTR [eax+0x4]
6402346e:	add    DWORD PTR [ebp-0x18],0xffff
64023475:	mov    ecx,esi
64023477:	add    esi,esi
64023479:	shr    ecx,0x1f
6402347c:	mov    DWORD PTR [eax],esi
6402347e:	lea    esi,[edi+edi*1]
64023481:	or     esi,ecx
64023483:	mov    ecx,DWORD PTR [eax+0x8]
64023486:	mov    edx,edi
64023488:	shr    edx,0x1f
6402348b:	add    ecx,ecx
6402348d:	or     ecx,edx
6402348f:	test   ebx,ecx
64023491:	mov    DWORD PTR [eax+0x4],esi
64023494:	mov    DWORD PTR [eax+0x8],ecx
64023497:	je     0x64023469
64023499:	mov    cx,WORD PTR [ebp-0x18]
6402349d:	mov    WORD PTR [eax+0xa],cx
640234a1:	mov    ecx,DWORD PTR [ebp-0x4]
640234a4:	pop    edi
640234a5:	pop    esi
640234a6:	xor    ecx,ebp
640234a8:	pop    ebx
640234a9:	call   0x64013f6c
640234ae:	leave  
640234af:	ret    
640234b0:	push   0x8
640234b2:	push   0x6402c7e0
640234b7:	call   0x64015530
640234bc:	xor    eax,eax
640234be:	cmp    DWORD PTR ds:0x64034644,eax
640234c4:	je     0x6402351c
640234c6:	test   BYTE PTR [ebp+0x8],0x40
640234ca:	je     0x64023514
640234cc:	cmp    DWORD PTR ds:0x64030374,eax
640234d2:	je     0x64023514
640234d4:	mov    DWORD PTR [ebp-0x4],eax
640234d7:	ldmxcsr DWORD PTR [ebp+0x8]
640234db:	jmp    0x6402350b
640234dd:	mov    eax,DWORD PTR [ebp-0x14]
640234e0:	mov    eax,DWORD PTR [eax]
640234e2:	mov    eax,DWORD PTR [eax]
640234e4:	cmp    eax,0xc0000005
640234e9:	je     0x640234f5
640234eb:	cmp    eax,0xc000001d
640234f0:	je     0x640234f5
640234f2:	xor    eax,eax
640234f4:	ret    
640234f5:	xor    eax,eax
640234f7:	inc    eax
640234f8:	ret    
640234f9:	mov    esp,DWORD PTR [ebp-0x18]
640234fc:	and    DWORD PTR ds:0x64030374,0x0
64023503:	and    DWORD PTR [ebp+0x8],0xffffffbf
64023507:	ldmxcsr DWORD PTR [ebp+0x8]
6402350b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64023512:	jmp    0x6402351c
64023514:	and    DWORD PTR [ebp+0x8],0xffffffbf
64023518:	ldmxcsr DWORD PTR [ebp+0x8]
6402351c:	call   0x64015575
64023521:	ret    
64023522:	int3   
64023523:	int3   
64023524:	int3   
64023525:	int3   
64023526:	int3   
64023527:	int3   
64023528:	int3   
64023529:	int3   
6402352a:	int3   
6402352b:	int3   
6402352c:	int3   
6402352d:	int3   
6402352e:	int3   
6402352f:	int3   
64023530:	mov    eax,DWORD PTR [ebp-0x10]
64023533:	and    eax,0x1
64023536:	je     0x64023548
6402353c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023540:	mov    ecx,DWORD PTR [ebp+0x4]
64023543:	jmp    0x64001680
64023548:	ret    
64023549:	mov    edx,DWORD PTR [esp+0x8]
6402354d:	lea    eax,[edx-0xc]
64023550:	mov    ecx,DWORD PTR [edx-0x10]
64023553:	xor    ecx,eax
64023555:	call   0x64013f6c
6402355a:	mov    eax,0x6402bda0
6402355f:	jmp    0x64013c2e
64023564:	int3   
64023565:	int3   
64023566:	int3   
64023567:	int3   
64023568:	int3   
64023569:	int3   
6402356a:	int3   
6402356b:	int3   
6402356c:	int3   
6402356d:	int3   
6402356e:	int3   
6402356f:	int3   
64023570:	mov    eax,DWORD PTR [ebp-0x10]
64023573:	and    eax,0x1
64023576:	je     0x64023588
6402357c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023580:	mov    ecx,DWORD PTR [ebp+0x4]
64023583:	jmp    0x64001680
64023588:	ret    
64023589:	mov    edx,DWORD PTR [esp+0x8]
6402358d:	lea    eax,[edx-0x10]
64023590:	mov    ecx,DWORD PTR [edx-0x14]
64023593:	xor    ecx,eax
64023595:	call   0x64013f6c
6402359a:	mov    eax,0x6402bdcc
6402359f:	jmp    0x64013c2e
640235a4:	int3   
640235a5:	int3   
640235a6:	int3   
640235a7:	int3   
640235a8:	int3   
640235a9:	int3   
640235aa:	int3   
640235ab:	int3   
640235ac:	int3   
640235ad:	int3   
640235ae:	int3   
640235af:	int3   
640235b0:	lea    ecx,[ebp-0x50]
640235b3:	jmp    0x64001650
640235b8:	mov    edx,DWORD PTR [esp+0x8]
640235bc:	lea    eax,[edx-0x44]
640235bf:	mov    ecx,DWORD PTR [edx-0x48]
640235c2:	xor    ecx,eax
640235c4:	call   0x64013f6c
640235c9:	mov    eax,0x6402be50
640235ce:	jmp    0x64013c2e
640235d3:	int3   
640235d4:	int3   
640235d5:	int3   
640235d6:	int3   
640235d7:	int3   
640235d8:	int3   
640235d9:	int3   
640235da:	int3   
640235db:	int3   
640235dc:	int3   
640235dd:	int3   
640235de:	int3   
640235df:	int3   
640235e0:	lea    ecx,[ebp-0x98]
640235e6:	jmp    0x64010eb0
640235eb:	lea    ecx,[ebp-0x94]
640235f1:	jmp    0x64001650
640235f6:	lea    ecx,[ebp-0x78]
640235f9:	jmp    0x64001650
640235fe:	mov    edx,DWORD PTR [esp+0x8]
64023602:	lea    eax,[edx-0xa8]
64023608:	mov    ecx,DWORD PTR [edx-0xac]
6402360e:	xor    ecx,eax
64023610:	call   0x64013f6c
64023615:	mov    eax,0x6402be9c
6402361a:	jmp    0x64013c2e
6402361f:	int3   
64023620:	lea    ecx,[ebp+0x38]
64023623:	jmp    0x64011030
64023628:	lea    ecx,[ebp-0x38]
6402362b:	jmp    0x64010ed0
64023630:	lea    ecx,[ebp+0x10]
64023633:	jmp    0x64001680
64023638:	lea    ecx,[ebp+0x14]
6402363b:	jmp    0x64001680
64023640:	lea    ecx,[ebp+0x18]
64023643:	jmp    0x64001680
64023648:	lea    ecx,[ebp+0xc]
6402364b:	jmp    0x64001680
64023650:	lea    ecx,[ebp+0x8]
64023653:	jmp    0x64001680
64023658:	lea    ecx,[ebp+0x4]
6402365b:	jmp    0x64001680
64023660:	lea    ecx,[ebp+0x1c]
64023663:	jmp    0x64001650
64023668:	mov    edx,DWORD PTR [esp+0x8]
6402366c:	lea    eax,[edx+0xc]
6402366f:	mov    ecx,DWORD PTR [edx-0x80]
64023672:	xor    ecx,eax
64023674:	call   0x64013f6c
64023679:	mov    ecx,DWORD PTR [edx+0x7c]
6402367c:	xor    ecx,eax
6402367e:	call   0x64013f6c
64023683:	mov    eax,0x6402bf0c
64023688:	jmp    0x64013c2e
6402368d:	int3   
6402368e:	int3   
6402368f:	int3   
64023690:	mov    eax,ds:0x640304c8
64023695:	and    eax,0xfffffffe
64023698:	mov    ds:0x640304c8,eax
6402369d:	ret    
6402369e:	mov    edx,DWORD PTR [esp+0x8]
640236a2:	lea    eax,[edx-0x10]
640236a5:	mov    ecx,DWORD PTR [edx-0x14]
640236a8:	xor    ecx,eax
640236aa:	call   0x64013f6c
640236af:	mov    eax,0x6402bfd0
640236b4:	jmp    0x64013c2e
640236b9:	int3   
640236ba:	int3   
640236bb:	int3   
640236bc:	int3   
640236bd:	int3   
640236be:	int3   
640236bf:	int3   
640236c0:	lea    ecx,[ebp-0x14]
640236c3:	jmp    0x6400a280
640236c8:	mov    edx,DWORD PTR [esp+0x8]
640236cc:	lea    eax,[edx+0xc]
640236cf:	mov    ecx,DWORD PTR [edx-0x18]
640236d2:	xor    ecx,eax
640236d4:	call   0x64013f6c
640236d9:	mov    eax,0x6402c030
640236de:	jmp    0x64013c2e
640236e3:	int3   
640236e4:	int3   
640236e5:	int3   
640236e6:	int3   
640236e7:	int3   
640236e8:	int3   
640236e9:	int3   
640236ea:	int3   
640236eb:	int3   
640236ec:	int3   
640236ed:	int3   
640236ee:	int3   
640236ef:	int3   
640236f0:	lea    ecx,[ebp-0x10]
640236f3:	jmp    0x64001680
640236f8:	mov    edx,DWORD PTR [esp+0x8]
640236fc:	lea    eax,[edx-0x8]
640236ff:	mov    ecx,DWORD PTR [edx-0xc]
64023702:	xor    ecx,eax
64023704:	call   0x64013f6c
64023709:	mov    eax,0x6402c05c
6402370e:	jmp    0x64013c2e
64023713:	int3   
64023714:	int3   
64023715:	int3   
64023716:	int3   
64023717:	int3   
64023718:	int3   
64023719:	int3   
6402371a:	int3   
6402371b:	int3   
6402371c:	int3   
6402371d:	int3   
6402371e:	int3   
6402371f:	int3   
64023720:	lea    ecx,[ebp-0x10]
64023723:	jmp    0x640016a0
64023728:	lea    ecx,[ebp-0x14]
6402372b:	jmp    0x64001680
64023730:	mov    edx,DWORD PTR [esp+0x8]
64023734:	lea    eax,[edx-0x14]
64023737:	mov    ecx,DWORD PTR [edx-0x18]
6402373a:	xor    ecx,eax
6402373c:	call   0x64013f6c
64023741:	mov    eax,0x6402c090
64023746:	jmp    0x64013c2e
6402374b:	int3   
6402374c:	int3   
6402374d:	int3   
6402374e:	int3   
6402374f:	int3   
64023750:	mov    eax,DWORD PTR [ebp-0x50]
64023753:	and    eax,0x1
64023756:	je     0x64023768
6402375c:	and    DWORD PTR [ebp-0x50],0xfffffffe
64023760:	mov    ecx,DWORD PTR [ebp-0x58]
64023763:	jmp    0x64001680
64023768:	ret    
64023769:	lea    ecx,[ebp-0x4c]
6402376c:	jmp    0x64001680
64023771:	lea    ecx,[ebp-0x54]
64023774:	jmp    0x64001680
64023779:	lea    ecx,[ebp-0x10]
6402377c:	jmp    0x64001680
64023781:	lea    ecx,[ebp-0x10]
64023784:	jmp    0x64001680
64023789:	lea    ecx,[ebp-0x28]
6402378c:	jmp    0x64001680
64023791:	lea    ecx,[ebp-0x48]
64023794:	jmp    0x64001680
64023799:	lea    ecx,[ebp-0x24]
6402379c:	jmp    0x64001680
640237a1:	lea    ecx,[ebp-0x14]
640237a4:	jmp    0x64001680
640237a9:	lea    ecx,[ebp-0x18]
640237ac:	jmp    0x64001680
640237b1:	lea    ecx,[ebp-0x10]
640237b4:	jmp    0x64001680
640237b9:	lea    ecx,[ebp-0x10]
640237bc:	jmp    0x64001680
640237c1:	lea    ecx,[ebp-0x18]
640237c4:	jmp    0x64001680
640237c9:	lea    ecx,[ebp-0x14]
640237cc:	jmp    0x64001680
640237d1:	lea    ecx,[ebp-0x10]
640237d4:	jmp    0x64001680
640237d9:	lea    ecx,[ebp-0x3c]
640237dc:	jmp    0x64011d40
640237e1:	lea    ecx,[ebp-0x14]
640237e4:	jmp    0x64001680
640237e9:	lea    ecx,[ebp-0x10]
640237ec:	jmp    0x64001680
640237f1:	lea    ecx,[ebp-0x20]
640237f4:	jmp    0x64001680
640237f9:	lea    ecx,[ebp-0x10]
640237fc:	jmp    0x64001680
64023801:	lea    ecx,[ebp-0x18]
64023804:	jmp    0x64001680
64023809:	lea    ecx,[ebp-0x14]
6402380c:	jmp    0x64001680
64023811:	lea    ecx,[ebp-0x10]
64023814:	jmp    0x64001680
64023819:	lea    ecx,[ebp-0x1c]
6402381c:	jmp    0x64001680
64023821:	lea    ecx,[ebp-0x2c]
64023824:	jmp    0x64001680
64023829:	lea    ecx,[ebp-0x18]
6402382c:	jmp    0x64001680
64023831:	lea    ecx,[ebp-0x10]
64023834:	jmp    0x64001680
64023839:	lea    ecx,[ebp-0x2c]
6402383c:	jmp    0x64001680
64023841:	lea    ecx,[ebp-0x1c]
64023844:	jmp    0x64001680
64023849:	lea    ecx,[ebp-0x1c]
6402384c:	jmp    0x64001680
64023851:	mov    edx,DWORD PTR [esp+0x8]
64023855:	lea    eax,[edx+0xc]
64023858:	mov    ecx,DWORD PTR [edx-0xa0]
6402385e:	xor    ecx,eax
64023860:	call   0x64013f6c
64023865:	mov    ecx,DWORD PTR [edx+0x130]
6402386b:	xor    ecx,eax
6402386d:	call   0x64013f6c
64023872:	mov    eax,0x6402c0b4
64023877:	jmp    0x64013c2e
6402387c:	int3   
6402387d:	int3   
6402387e:	int3   
6402387f:	int3   
64023880:	lea    ecx,[ebp-0x30]
64023883:	jmp    0x64001680
64023888:	lea    ecx,[ebp-0x2c]
6402388b:	jmp    0x64001650
64023890:	lea    ecx,[ebp-0x5c]
64023893:	jmp    0x64001650
64023898:	mov    edx,DWORD PTR [esp+0x8]
6402389c:	lea    eax,[edx+0xc]
6402389f:	mov    ecx,DWORD PTR [edx-0x60]
640238a2:	xor    ecx,eax
640238a4:	call   0x64013f6c
640238a9:	mov    ecx,DWORD PTR [edx-0x4]
640238ac:	xor    ecx,eax
640238ae:	call   0x64013f6c
640238b3:	mov    eax,0x6402c1e0
640238b8:	jmp    0x64013c2e
640238bd:	lea    ecx,[ebp-0x28]
640238c0:	jmp    0x64001650
640238c5:	mov    edx,DWORD PTR [esp+0x8]
640238c9:	lea    eax,[edx+0xc]
640238cc:	mov    ecx,DWORD PTR [edx-0x54]
640238cf:	xor    ecx,eax
640238d1:	call   0x64013f6c
640238d6:	mov    eax,0x6402c22c
640238db:	jmp    0x64013c2e
640238e0:	lea    ecx,[ebp-0x28]
640238e3:	jmp    0x64001650
640238e8:	mov    edx,DWORD PTR [esp+0x8]
640238ec:	lea    eax,[edx+0xc]
640238ef:	mov    ecx,DWORD PTR [edx-0x54]
640238f2:	xor    ecx,eax
640238f4:	call   0x64013f6c
640238f9:	mov    eax,0x6402c258
640238fe:	jmp    0x64013c2e
64023903:	mov    edx,DWORD PTR [esp+0x8]
64023907:	lea    eax,[edx+0xc]
6402390a:	mov    ecx,DWORD PTR [edx-0x14]
6402390d:	xor    ecx,eax
6402390f:	call   0x64013f6c
64023914:	mov    eax,0x6402c400
64023919:	jmp    0x64013c2e
6402391e:	int3   
6402391f:	int3   
64023920:	mov    eax,DWORD PTR [ebp+0x4]
64023923:	push   eax
64023924:	call   0x64013712
64023929:	pop    ecx
6402392a:	ret    
6402392b:	mov    edx,DWORD PTR [esp+0x8]
6402392f:	lea    eax,[edx-0x8]
64023932:	mov    ecx,DWORD PTR [edx-0xc]
64023935:	xor    ecx,eax
64023937:	call   0x64013f6c
6402393c:	mov    eax,0x6402c958
64023941:	jmp    0x64013c2e
64023946:	int3   
64023947:	int3   
64023948:	int3   
64023949:	int3   
6402394a:	int3   
6402394b:	int3   
6402394c:	int3   
6402394d:	int3   
6402394e:	int3   
6402394f:	int3   
64023950:	mov    eax,DWORD PTR [ebp+0x4]
64023953:	push   eax
64023954:	call   0x64013712
64023959:	pop    ecx
6402395a:	ret    
6402395b:	mov    edx,DWORD PTR [esp+0x8]
6402395f:	lea    eax,[edx-0x8]
64023962:	mov    ecx,DWORD PTR [edx-0xc]
64023965:	xor    ecx,eax
64023967:	call   0x64013f6c
6402396c:	mov    eax,0x6402c984
64023971:	jmp    0x64013c2e
64023976:	int3   
64023977:	int3   
64023978:	int3   
64023979:	int3   
6402397a:	int3   
6402397b:	int3   
6402397c:	int3   
6402397d:	int3   
6402397e:	int3   
6402397f:	int3   
64023980:	mov    eax,DWORD PTR [ebp-0x10]
64023983:	push   eax
64023984:	call   0x64013712
64023989:	pop    ecx
6402398a:	ret    
6402398b:	mov    edx,DWORD PTR [esp+0x8]
6402398f:	lea    eax,[edx-0x8]
64023992:	mov    ecx,DWORD PTR [edx-0xc]
64023995:	xor    ecx,eax
64023997:	call   0x64013f6c
6402399c:	mov    eax,0x6402c9b0
640239a1:	jmp    0x64013c2e
640239a6:	int3   
640239a7:	int3   
640239a8:	int3   
640239a9:	int3   
640239aa:	int3   
640239ab:	int3   
640239ac:	int3   
640239ad:	int3   
640239ae:	int3   
640239af:	int3   
640239b0:	mov    eax,DWORD PTR [ebp-0x10]
640239b3:	push   eax
640239b4:	call   0x64013712
640239b9:	pop    ecx
640239ba:	ret    
640239bb:	mov    edx,DWORD PTR [esp+0x8]
640239bf:	lea    eax,[edx-0xc]
640239c2:	mov    ecx,DWORD PTR [edx-0x10]
640239c5:	xor    ecx,eax
640239c7:	call   0x64013f6c
640239cc:	mov    eax,0x6402c9dc
640239d1:	jmp    0x64013c2e
640239d6:	int3   
640239d7:	int3   
640239d8:	int3   
640239d9:	int3   
640239da:	int3   
640239db:	int3   
640239dc:	int3   
640239dd:	int3   
640239de:	int3   
640239df:	int3   
640239e0:	lea    ecx,[ebp-0x144]
640239e6:	jmp    0x64002710
640239eb:	mov    edx,DWORD PTR [esp+0x8]
640239ef:	lea    eax,[edx-0x144]
640239f5:	mov    ecx,DWORD PTR [edx-0x148]
640239fb:	xor    ecx,eax
640239fd:	call   0x64013f6c
64023a02:	add    eax,0xc
64023a05:	mov    ecx,DWORD PTR [edx-0x4]
64023a08:	xor    ecx,eax
64023a0a:	call   0x64013f6c
64023a0f:	mov    eax,0x6402ca08
64023a14:	jmp    0x64013c2e
64023a19:	int3   
64023a1a:	int3   
64023a1b:	int3   
64023a1c:	int3   
64023a1d:	int3   
64023a1e:	int3   
64023a1f:	int3   
64023a20:	lea    ecx,[ebp-0x20]
64023a23:	jmp    0x6400aea0
64023a28:	mov    edx,DWORD PTR [esp+0x8]
64023a2c:	lea    eax,[edx-0x1c]
64023a2f:	mov    ecx,DWORD PTR [edx-0x20]
64023a32:	xor    ecx,eax
64023a34:	call   0x64013f6c
64023a39:	mov    eax,0x6402ca34
64023a3e:	jmp    0x64013c2e
64023a43:	int3   
64023a44:	int3   
64023a45:	int3   
64023a46:	int3   
64023a47:	int3   
64023a48:	int3   
64023a49:	int3   
64023a4a:	int3   
64023a4b:	int3   
64023a4c:	int3   
64023a4d:	int3   
64023a4e:	int3   
64023a4f:	int3   
64023a50:	mov    eax,DWORD PTR [ebp-0x10]
64023a53:	and    eax,0x1
64023a56:	je     0x64023a68
64023a5c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023a60:	mov    edi,DWORD PTR [ebp+0x8]
64023a63:	jmp    0x6400ab30
64023a68:	ret    
64023a69:	mov    edx,DWORD PTR [esp+0x8]
64023a6d:	lea    eax,[edx-0x8]
64023a70:	mov    ecx,DWORD PTR [edx-0xc]
64023a73:	xor    ecx,eax
64023a75:	call   0x64013f6c
64023a7a:	mov    eax,0x6402ca60
64023a7f:	jmp    0x64013c2e
64023a84:	int3   
64023a85:	int3   
64023a86:	int3   
64023a87:	int3   
64023a88:	int3   
64023a89:	int3   
64023a8a:	int3   
64023a8b:	int3   
64023a8c:	int3   
64023a8d:	int3   
64023a8e:	int3   
64023a8f:	int3   
64023a90:	mov    edx,DWORD PTR [esp+0x8]
64023a94:	lea    eax,[edx+0xc]
64023a97:	mov    ecx,DWORD PTR [edx-0x2c]
64023a9a:	xor    ecx,eax
64023a9c:	call   0x64013f6c
64023aa1:	mov    eax,0x6402caec
64023aa6:	jmp    0x64013c2e
64023aab:	int3   
64023aac:	int3   
64023aad:	int3   
64023aae:	int3   
64023aaf:	int3   
64023ab0:	mov    eax,DWORD PTR [ebp-0x18]
64023ab3:	push   eax
64023ab4:	mov    ecx,DWORD PTR [ebp-0x1c]
64023ab7:	push   ecx
64023ab8:	call   0x64002c20
64023abd:	add    esp,0x8
64023ac0:	ret    
64023ac1:	mov    edx,DWORD PTR [esp+0x8]
64023ac5:	lea    eax,[edx+0xc]
64023ac8:	mov    ecx,DWORD PTR [edx-0x20]
64023acb:	xor    ecx,eax
64023acd:	call   0x64013f6c
64023ad2:	mov    eax,0x6402cb4c
64023ad7:	jmp    0x64013c2e
64023adc:	int3   
64023add:	int3   
64023ade:	int3   
64023adf:	int3   
64023ae0:	mov    ecx,DWORD PTR [ebp-0x10]
64023ae3:	jmp    0x64001650
64023ae8:	mov    edx,DWORD PTR [esp+0x8]
64023aec:	lea    eax,[edx-0xc]
64023aef:	mov    ecx,DWORD PTR [edx-0x10]
64023af2:	xor    ecx,eax
64023af4:	call   0x64013f6c
64023af9:	mov    eax,0x6402cb78
64023afe:	jmp    0x64013c2e
64023b03:	int3   
64023b04:	int3   
64023b05:	int3   
64023b06:	int3   
64023b07:	int3   
64023b08:	int3   
64023b09:	int3   
64023b0a:	int3   
64023b0b:	int3   
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	mov    ecx,DWORD PTR [ebp-0x10]
64023b13:	jmp    0x64001650
64023b18:	mov    edx,DWORD PTR [esp+0x8]
64023b1c:	lea    eax,[edx-0x10]
64023b1f:	mov    ecx,DWORD PTR [edx-0x14]
64023b22:	xor    ecx,eax
64023b24:	call   0x64013f6c
64023b29:	mov    eax,0x6402cba4
64023b2e:	jmp    0x64013c2e
64023b33:	int3   
64023b34:	int3   
64023b35:	int3   
64023b36:	int3   
64023b37:	int3   
64023b38:	int3   
64023b39:	int3   
64023b3a:	int3   
64023b3b:	int3   
64023b3c:	int3   
64023b3d:	int3   
64023b3e:	int3   
64023b3f:	int3   
64023b40:	lea    ecx,[ebp+0x24]
64023b43:	jmp    0x64001650
64023b48:	lea    ecx,[ebp+0x8]
64023b4b:	jmp    0x64001650
64023b50:	mov    edx,DWORD PTR [esp+0x8]
64023b54:	lea    eax,[edx-0x8]
64023b57:	mov    ecx,DWORD PTR [edx-0xc]
64023b5a:	xor    ecx,eax
64023b5c:	call   0x64013f6c
64023b61:	mov    eax,0x6402cbd8
64023b66:	jmp    0x64013c2e
64023b6b:	int3   
64023b6c:	int3   
64023b6d:	int3   
64023b6e:	int3   
64023b6f:	int3   
64023b70:	lea    ecx,[ebp-0x28]
64023b73:	jmp    0x64001650
64023b78:	mov    edx,DWORD PTR [esp+0x8]
64023b7c:	lea    eax,[edx-0x28]
64023b7f:	mov    ecx,DWORD PTR [edx-0x2c]
64023b82:	xor    ecx,eax
64023b84:	call   0x64013f6c
64023b89:	mov    eax,0x6402cc04
64023b8e:	jmp    0x64013c2e
64023b93:	int3   
64023b94:	int3   
64023b95:	int3   
64023b96:	int3   
64023b97:	int3   
64023b98:	int3   
64023b99:	int3   
64023b9a:	int3   
64023b9b:	int3   
64023b9c:	int3   
64023b9d:	int3   
64023b9e:	int3   
64023b9f:	int3   
64023ba0:	mov    ecx,DWORD PTR [ebp-0x10]
64023ba3:	jmp    0x64001650
64023ba8:	mov    edx,DWORD PTR [esp+0x8]
64023bac:	lea    eax,[edx-0x10]
64023baf:	mov    ecx,DWORD PTR [edx-0x14]
64023bb2:	xor    ecx,eax
64023bb4:	call   0x64013f6c
64023bb9:	mov    eax,0x6402cc30
64023bbe:	jmp    0x64013c2e
64023bc3:	int3   
64023bc4:	int3   
64023bc5:	int3   
64023bc6:	int3   
64023bc7:	int3   
64023bc8:	int3   
64023bc9:	int3   
64023bca:	int3   
64023bcb:	int3   
64023bcc:	int3   
64023bcd:	int3   
64023bce:	int3   
64023bcf:	int3   
64023bd0:	mov    edx,DWORD PTR [esp+0x8]
64023bd4:	lea    eax,[edx+0xc]
64023bd7:	mov    ecx,DWORD PTR [edx-0x1c]
64023bda:	xor    ecx,eax
64023bdc:	call   0x64013f6c
64023be1:	mov    eax,0x6402ccbc
64023be6:	jmp    0x64013c2e
64023beb:	int3   
64023bec:	int3   
64023bed:	int3   
64023bee:	int3   
64023bef:	int3   
64023bf0:	mov    eax,DWORD PTR [ebp-0x14]
64023bf3:	push   eax
64023bf4:	mov    ecx,DWORD PTR [ebp-0x18]
64023bf7:	push   ecx
64023bf8:	call   0x64002c20
64023bfd:	add    esp,0x8
64023c00:	ret    
64023c01:	mov    edx,DWORD PTR [esp+0x8]
64023c05:	lea    eax,[edx+0xc]
64023c08:	mov    ecx,DWORD PTR [edx-0x1c]
64023c0b:	xor    ecx,eax
64023c0d:	call   0x64013f6c
64023c12:	mov    eax,0x6402cd1c
64023c17:	jmp    0x64013c2e
64023c1c:	int3   
64023c1d:	int3   
64023c1e:	int3   
64023c1f:	int3   
64023c20:	mov    eax,DWORD PTR [ebp-0x14]
64023c23:	push   eax
64023c24:	mov    ecx,DWORD PTR [ebp-0x18]
64023c27:	push   ecx
64023c28:	call   0x64002c20
64023c2d:	add    esp,0x8
64023c30:	ret    
64023c31:	mov    edx,DWORD PTR [esp+0x8]
64023c35:	lea    eax,[edx+0xc]
64023c38:	mov    ecx,DWORD PTR [edx-0x1c]
64023c3b:	xor    ecx,eax
64023c3d:	call   0x64013f6c
64023c42:	mov    eax,0x6402cd7c
64023c47:	jmp    0x64013c2e
64023c4c:	int3   
64023c4d:	int3   
64023c4e:	int3   
64023c4f:	int3   
64023c50:	mov    edx,DWORD PTR [esp+0x8]
64023c54:	lea    eax,[edx+0xc]
64023c57:	mov    ecx,DWORD PTR [edx-0x1c]
64023c5a:	xor    ecx,eax
64023c5c:	call   0x64013f6c
64023c61:	mov    eax,0x6402cdd4
64023c66:	jmp    0x64013c2e
64023c6b:	int3   
64023c6c:	int3   
64023c6d:	int3   
64023c6e:	int3   
64023c6f:	int3   
64023c70:	lea    ecx,[ebp+0x8]
64023c73:	jmp    0x64007b90
64023c78:	mov    edx,DWORD PTR [esp+0x8]
64023c7c:	lea    eax,[edx-0x14]
64023c7f:	mov    ecx,DWORD PTR [edx-0x18]
64023c82:	xor    ecx,eax
64023c84:	call   0x64013f6c
64023c89:	mov    eax,0x6402ce00
64023c8e:	jmp    0x64013c2e
64023c93:	int3   
64023c94:	int3   
64023c95:	int3   
64023c96:	int3   
64023c97:	int3   
64023c98:	int3   
64023c99:	int3   
64023c9a:	int3   
64023c9b:	int3   
64023c9c:	int3   
64023c9d:	int3   
64023c9e:	int3   
64023c9f:	int3   
64023ca0:	lea    ecx,[ebp+0x8]
64023ca3:	jmp    0x64001650
64023ca8:	mov    edx,DWORD PTR [esp+0x8]
64023cac:	lea    eax,[edx-0x14]
64023caf:	mov    ecx,DWORD PTR [edx-0x18]
64023cb2:	xor    ecx,eax
64023cb4:	call   0x64013f6c
64023cb9:	mov    eax,0x6402ce2c
64023cbe:	jmp    0x64013c2e
64023cc3:	int3   
64023cc4:	int3   
64023cc5:	int3   
64023cc6:	int3   
64023cc7:	int3   
64023cc8:	int3   
64023cc9:	int3   
64023cca:	int3   
64023ccb:	int3   
64023ccc:	int3   
64023ccd:	int3   
64023cce:	int3   
64023ccf:	int3   
64023cd0:	mov    ecx,DWORD PTR [ebp-0x10]
64023cd3:	jmp    0x6401382b
64023cd8:	mov    edx,DWORD PTR [esp+0x8]
64023cdc:	lea    eax,[edx-0xc]
64023cdf:	mov    ecx,DWORD PTR [edx-0x10]
64023ce2:	xor    ecx,eax
64023ce4:	call   0x64013f6c
64023ce9:	mov    eax,0x6402ce58
64023cee:	jmp    0x64013c2e
64023cf3:	int3   
64023cf4:	int3   
64023cf5:	int3   
64023cf6:	int3   
64023cf7:	int3   
64023cf8:	int3   
64023cf9:	int3   
64023cfa:	int3   
64023cfb:	int3   
64023cfc:	int3   
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	mov    ecx,DWORD PTR [ebp-0x10]
64023d03:	jmp    0x6401382b
64023d08:	mov    edx,DWORD PTR [esp+0x8]
64023d0c:	lea    eax,[edx-0x8]
64023d0f:	mov    ecx,DWORD PTR [edx-0xc]
64023d12:	xor    ecx,eax
64023d14:	call   0x64013f6c
64023d19:	mov    eax,0x6402ce84
64023d1e:	jmp    0x64013c2e
64023d23:	int3   
64023d24:	int3   
64023d25:	int3   
64023d26:	int3   
64023d27:	int3   
64023d28:	int3   
64023d29:	int3   
64023d2a:	int3   
64023d2b:	int3   
64023d2c:	int3   
64023d2d:	int3   
64023d2e:	int3   
64023d2f:	int3   
64023d30:	mov    ecx,DWORD PTR [ebp-0x10]
64023d33:	jmp    0x6401382b
64023d38:	mov    edx,DWORD PTR [esp+0x8]
64023d3c:	lea    eax,[edx-0xc]
64023d3f:	mov    ecx,DWORD PTR [edx-0x10]
64023d42:	xor    ecx,eax
64023d44:	call   0x64013f6c
64023d49:	mov    eax,0x6402ceb0
64023d4e:	jmp    0x64013c2e
64023d53:	int3   
64023d54:	int3   
64023d55:	int3   
64023d56:	int3   
64023d57:	int3   
64023d58:	int3   
64023d59:	int3   
64023d5a:	int3   
64023d5b:	int3   
64023d5c:	int3   
64023d5d:	int3   
64023d5e:	int3   
64023d5f:	int3   
64023d60:	mov    ecx,DWORD PTR [ebp-0x10]
64023d63:	jmp    0x6401382b
64023d68:	mov    edx,DWORD PTR [esp+0x8]
64023d6c:	lea    eax,[edx-0x8]
64023d6f:	mov    ecx,DWORD PTR [edx-0xc]
64023d72:	xor    ecx,eax
64023d74:	call   0x64013f6c
64023d79:	mov    eax,0x6402cedc
64023d7e:	jmp    0x64013c2e
64023d83:	int3   
64023d84:	int3   
64023d85:	int3   
64023d86:	int3   
64023d87:	int3   
64023d88:	int3   
64023d89:	int3   
64023d8a:	int3   
64023d8b:	int3   
64023d8c:	int3   
64023d8d:	int3   
64023d8e:	int3   
64023d8f:	int3   
64023d90:	mov    eax,DWORD PTR [ebp-0x34]
64023d93:	and    eax,0x1
64023d96:	je     0x64023da8
64023d9c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64023da0:	mov    ecx,DWORD PTR [ebp-0x30]
64023da3:	jmp    0x64001650
64023da8:	ret    
64023da9:	lea    ecx,[ebp-0x2c]
64023dac:	jmp    0x64001650
64023db1:	lea    ecx,[ebp-0x3c]
64023db4:	jmp    0x64001680
64023db9:	lea    ecx,[ebp-0x2c]
64023dbc:	jmp    0x64001650
64023dc1:	lea    ecx,[ebp-0x3c]
64023dc4:	jmp    0x64001680
64023dc9:	lea    ecx,[ebp-0x2c]
64023dcc:	jmp    0x64001650
64023dd1:	lea    ecx,[ebp-0x2c]
64023dd4:	jmp    0x64001650
64023dd9:	mov    edx,DWORD PTR [esp+0x8]
64023ddd:	lea    eax,[edx-0x40]
64023de0:	mov    ecx,DWORD PTR [edx-0x44]
64023de3:	xor    ecx,eax
64023de5:	call   0x64013f6c
64023dea:	add    eax,0x10
64023ded:	mov    ecx,DWORD PTR [edx-0x4]
64023df0:	xor    ecx,eax
64023df2:	call   0x64013f6c
64023df7:	mov    eax,0x6402cf38
64023dfc:	jmp    0x64013c2e
64023e01:	int3   
64023e02:	int3   
64023e03:	int3   
64023e04:	int3   
64023e05:	int3   
64023e06:	int3   
64023e07:	int3   
64023e08:	int3   
64023e09:	int3   
64023e0a:	int3   
64023e0b:	int3   
64023e0c:	int3   
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	lea    ecx,[ebp-0x30]
64023e13:	jmp    0x64001650
64023e18:	mov    eax,DWORD PTR [ebp-0x4c]
64023e1b:	push   eax
64023e1c:	mov    ecx,DWORD PTR [ebp-0x50]
64023e1f:	push   ecx
64023e20:	call   0x64002c20
64023e25:	add    esp,0x8
64023e28:	ret    
64023e29:	mov    edx,DWORD PTR [esp+0x8]
64023e2d:	lea    eax,[edx+0xc]
64023e30:	mov    ecx,DWORD PTR [edx-0x54]
64023e33:	xor    ecx,eax
64023e35:	call   0x64013f6c
64023e3a:	mov    ecx,DWORD PTR [edx-0x8]
64023e3d:	xor    ecx,eax
64023e3f:	call   0x64013f6c
64023e44:	mov    eax,0x6402cfa8
64023e49:	jmp    0x64013c2e
64023e4e:	int3   
64023e4f:	int3   
64023e50:	mov    ecx,DWORD PTR [ebp-0x10]
64023e53:	jmp    0x64007b90
64023e58:	mov    edx,DWORD PTR [esp+0x8]
64023e5c:	lea    eax,[edx-0xc]
64023e5f:	mov    ecx,DWORD PTR [edx-0x10]
64023e62:	xor    ecx,eax
64023e64:	call   0x64013f6c
64023e69:	mov    eax,0x6402cfd4
64023e6e:	jmp    0x64013c2e
64023e73:	int3   
64023e74:	int3   
64023e75:	int3   
64023e76:	int3   
64023e77:	int3   
64023e78:	int3   
64023e79:	int3   
64023e7a:	int3   
64023e7b:	int3   
64023e7c:	int3   
64023e7d:	int3   
64023e7e:	int3   
64023e7f:	int3   
64023e80:	mov    ecx,DWORD PTR [ebp-0x10]
64023e83:	jmp    0x64007b90
64023e88:	mov    edx,DWORD PTR [esp+0x8]
64023e8c:	lea    eax,[edx-0x10]
64023e8f:	mov    ecx,DWORD PTR [edx-0x14]
64023e92:	xor    ecx,eax
64023e94:	call   0x64013f6c
64023e99:	mov    eax,0x6402d000
64023e9e:	jmp    0x64013c2e
64023ea3:	int3   
64023ea4:	int3   
64023ea5:	int3   
64023ea6:	int3   
64023ea7:	int3   
64023ea8:	int3   
64023ea9:	int3   
64023eaa:	int3   
64023eab:	int3   
64023eac:	int3   
64023ead:	int3   
64023eae:	int3   
64023eaf:	int3   
64023eb0:	lea    ecx,[ebp+0x24]
64023eb3:	jmp    0x64007b90
64023eb8:	lea    ecx,[ebp+0x8]
64023ebb:	jmp    0x64007b90
64023ec0:	mov    edx,DWORD PTR [esp+0x8]
64023ec4:	lea    eax,[edx-0x8]
64023ec7:	mov    ecx,DWORD PTR [edx-0xc]
64023eca:	xor    ecx,eax
64023ecc:	call   0x64013f6c
64023ed1:	mov    eax,0x6402d034
64023ed6:	jmp    0x64013c2e
64023edb:	int3   
64023edc:	int3   
64023edd:	int3   
64023ede:	int3   
64023edf:	int3   
64023ee0:	mov    ecx,DWORD PTR [ebp-0x10]
64023ee3:	jmp    0x64007b90
64023ee8:	mov    edx,DWORD PTR [esp+0x8]
64023eec:	lea    eax,[edx-0x10]
64023eef:	mov    ecx,DWORD PTR [edx-0x14]
64023ef2:	xor    ecx,eax
64023ef4:	call   0x64013f6c
64023ef9:	mov    eax,0x6402d060
64023efe:	jmp    0x64013c2e
64023f03:	int3   
64023f04:	int3   
64023f05:	int3   
64023f06:	int3   
64023f07:	int3   
64023f08:	int3   
64023f09:	int3   
64023f0a:	int3   
64023f0b:	int3   
64023f0c:	int3   
64023f0d:	int3   
64023f0e:	int3   
64023f0f:	int3   
64023f10:	mov    eax,DWORD PTR [ebp-0x14]
64023f13:	push   eax
64023f14:	mov    ecx,DWORD PTR [ebp-0x18]
64023f17:	push   ecx
64023f18:	call   0x64002c20
64023f1d:	add    esp,0x8
64023f20:	ret    
64023f21:	mov    edx,DWORD PTR [esp+0x8]
64023f25:	lea    eax,[edx+0xc]
64023f28:	mov    ecx,DWORD PTR [edx-0x1c]
64023f2b:	xor    ecx,eax
64023f2d:	call   0x64013f6c
64023f32:	mov    eax,0x6402d0c0
64023f37:	jmp    0x64013c2e
64023f3c:	int3   
64023f3d:	int3   
64023f3e:	int3   
64023f3f:	int3   
64023f40:	lea    eax,[ebp-0x10]
64023f43:	jmp    0x640016d0
64023f48:	mov    edx,DWORD PTR [esp+0x8]
64023f4c:	lea    eax,[edx-0x34]
64023f4f:	mov    ecx,DWORD PTR [edx-0x38]
64023f52:	xor    ecx,eax
64023f54:	call   0x64013f6c
64023f59:	mov    eax,0x6402d0ec
64023f5e:	jmp    0x64013c2e
64023f63:	int3   
64023f64:	int3   
64023f65:	int3   
64023f66:	int3   
64023f67:	int3   
64023f68:	int3   
64023f69:	int3   
64023f6a:	int3   
64023f6b:	int3   
64023f6c:	int3   
64023f6d:	int3   
64023f6e:	int3   
64023f6f:	int3   
64023f70:	lea    ecx,[ebp-0x54]
64023f73:	jmp    0x64001650
64023f78:	mov    edx,DWORD PTR [esp+0x8]
64023f7c:	lea    eax,[edx-0x4c]
64023f7f:	mov    ecx,DWORD PTR [edx-0x50]
64023f82:	xor    ecx,eax
64023f84:	call   0x64013f6c
64023f89:	mov    eax,0x6402d118
64023f8e:	jmp    0x64013c2e
64023f93:	int3   
64023f94:	int3   
64023f95:	int3   
64023f96:	int3   
64023f97:	int3   
64023f98:	int3   
64023f99:	int3   
64023f9a:	int3   
64023f9b:	int3   
64023f9c:	int3   
64023f9d:	int3   
64023f9e:	int3   
64023f9f:	int3   
64023fa0:	lea    ecx,[ebp-0x30]
64023fa3:	jmp    0x64001650
64023fa8:	mov    edx,DWORD PTR [esp+0x8]
64023fac:	lea    eax,[edx+0xc]
64023faf:	mov    ecx,DWORD PTR [edx-0x44]
64023fb2:	xor    ecx,eax
64023fb4:	call   0x64013f6c
64023fb9:	mov    ecx,DWORD PTR [edx-0x8]
64023fbc:	xor    ecx,eax
64023fbe:	call   0x64013f6c
64023fc3:	mov    eax,0x6402d1ac
64023fc8:	jmp    0x64013c2e
64023fcd:	int3   
64023fce:	int3   
64023fcf:	int3   
64023fd0:	lea    ecx,[ebp-0x54]
64023fd3:	jmp    0x64001650
64023fd8:	mov    edx,DWORD PTR [esp+0x8]
64023fdc:	lea    eax,[edx-0x5c]
64023fdf:	mov    ecx,DWORD PTR [edx-0x60]
64023fe2:	xor    ecx,eax
64023fe4:	call   0x64013f6c
64023fe9:	mov    eax,0x6402d1d8
64023fee:	jmp    0x64013c2e
64023ff3:	int3   
64023ff4:	int3   
64023ff5:	int3   
64023ff6:	int3   
64023ff7:	int3   
64023ff8:	int3   
64023ff9:	int3   
64023ffa:	int3   
64023ffb:	int3   
64023ffc:	int3   
64023ffd:	int3   
64023ffe:	int3   
64023fff:	int3   
64024000:	lea    ecx,[ebp-0x54]
64024003:	jmp    0x64001650
64024008:	mov    edx,DWORD PTR [esp+0x8]
6402400c:	lea    eax,[edx-0x5c]
6402400f:	mov    ecx,DWORD PTR [edx-0x60]
64024012:	xor    ecx,eax
64024014:	call   0x64013f6c
64024019:	mov    eax,0x6402d204
6402401e:	jmp    0x64013c2e
64024023:	int3   
64024024:	int3   
64024025:	int3   
64024026:	int3   
64024027:	int3   
64024028:	int3   
64024029:	int3   
6402402a:	int3   
6402402b:	int3   
6402402c:	int3   
6402402d:	int3   
6402402e:	int3   
6402402f:	int3   
64024030:	lea    ecx,[ebp-0x54]
64024033:	jmp    0x64001650
64024038:	mov    edx,DWORD PTR [esp+0x8]
6402403c:	lea    eax,[edx-0x5c]
6402403f:	mov    ecx,DWORD PTR [edx-0x60]
64024042:	xor    ecx,eax
64024044:	call   0x64013f6c
64024049:	mov    eax,0x6402d230
6402404e:	jmp    0x64013c2e
64024053:	int3   
64024054:	int3   
64024055:	int3   
64024056:	int3   
64024057:	int3   
64024058:	int3   
64024059:	int3   
6402405a:	int3   
6402405b:	int3   
6402405c:	int3   
6402405d:	int3   
6402405e:	int3   
6402405f:	int3   
64024060:	lea    ecx,[ebp-0x54]
64024063:	jmp    0x64001650
64024068:	mov    edx,DWORD PTR [esp+0x8]
6402406c:	lea    eax,[edx-0x5c]
6402406f:	mov    ecx,DWORD PTR [edx-0x60]
64024072:	xor    ecx,eax
64024074:	call   0x64013f6c
64024079:	mov    eax,0x6402d25c
6402407e:	jmp    0x64013c2e
64024083:	int3   
64024084:	int3   
64024085:	int3   
64024086:	int3   
64024087:	int3   
64024088:	int3   
64024089:	int3   
6402408a:	int3   
6402408b:	int3   
6402408c:	int3   
6402408d:	int3   
6402408e:	int3   
6402408f:	int3   
64024090:	lea    ecx,[ebp-0x50]
64024093:	jmp    0x64001650
64024098:	mov    edx,DWORD PTR [esp+0x8]
6402409c:	lea    eax,[edx-0x54]
6402409f:	mov    ecx,DWORD PTR [edx-0x58]
640240a2:	xor    ecx,eax
640240a4:	call   0x64013f6c
640240a9:	mov    eax,0x6402d288
640240ae:	jmp    0x64013c2e
640240b3:	int3   
640240b4:	int3   
640240b5:	int3   
640240b6:	int3   
640240b7:	int3   
640240b8:	int3   
640240b9:	int3   
640240ba:	int3   
640240bb:	int3   
640240bc:	int3   
640240bd:	int3   
640240be:	int3   
640240bf:	int3   
640240c0:	lea    ecx,[ebp-0x50]
640240c3:	jmp    0x64001650
640240c8:	mov    edx,DWORD PTR [esp+0x8]
640240cc:	lea    eax,[edx-0x54]
640240cf:	mov    ecx,DWORD PTR [edx-0x58]
640240d2:	xor    ecx,eax
640240d4:	call   0x64013f6c
640240d9:	mov    eax,0x6402d2b4
640240de:	jmp    0x64013c2e
640240e3:	int3   
640240e4:	int3   
640240e5:	int3   
640240e6:	int3   
640240e7:	int3   
640240e8:	int3   
640240e9:	int3   
640240ea:	int3   
640240eb:	int3   
640240ec:	int3   
640240ed:	int3   
640240ee:	int3   
640240ef:	int3   
640240f0:	mov    eax,ds:0x64033348
640240f5:	and    eax,0xfffffffe
640240f8:	mov    ds:0x64033348,eax
640240fd:	ret    
640240fe:	mov    edx,DWORD PTR [esp+0x8]
64024102:	lea    eax,[edx]
64024104:	mov    ecx,DWORD PTR [edx-0x4]
64024107:	xor    ecx,eax
64024109:	call   0x64013f6c
6402410e:	mov    eax,0x6402d2e0
64024113:	jmp    0x64013c2e
64024118:	int3   
64024119:	int3   
6402411a:	int3   
6402411b:	int3   
6402411c:	int3   
6402411d:	int3   
6402411e:	int3   
6402411f:	int3   
64024120:	mov    eax,ds:0x6403334c
64024125:	and    eax,0xfffffffe
64024128:	mov    ds:0x6403334c,eax
6402412d:	ret    
6402412e:	mov    edx,DWORD PTR [esp+0x8]
64024132:	lea    eax,[edx]
64024134:	mov    ecx,DWORD PTR [edx-0x4]
64024137:	xor    ecx,eax
64024139:	call   0x64013f6c
6402413e:	mov    eax,0x6402d30c
64024143:	jmp    0x64013c2e
64024148:	int3   
64024149:	int3   
6402414a:	int3   
6402414b:	int3   
6402414c:	int3   
6402414d:	int3   
6402414e:	int3   
6402414f:	int3   
64024150:	lea    ecx,[ebp-0x4c]
64024153:	jmp    0x64007b90
64024158:	lea    ecx,[ebp-0x30]
6402415b:	jmp    0x64007b90
64024160:	mov    ecx,DWORD PTR [ebp-0xc0]
64024166:	jmp    0x64007b90
6402416b:	lea    ecx,[ebp-0x84]
64024171:	jmp    0x640070e0
64024176:	lea    ecx,[ebp-0xbc]
6402417c:	jmp    0x640070e0
64024181:	mov    edx,DWORD PTR [esp+0x8]
64024185:	lea    eax,[edx-0xdc]
6402418b:	mov    ecx,DWORD PTR [edx-0xe0]
64024191:	xor    ecx,eax
64024193:	call   0x64013f6c
64024198:	add    eax,0xc
6402419b:	mov    ecx,DWORD PTR [edx-0x8]
6402419e:	xor    ecx,eax
640241a0:	call   0x64013f6c
640241a5:	mov    eax,0x6402d358
640241aa:	jmp    0x64013c2e
640241af:	int3   
640241b0:	lea    ecx,[ebp-0x4c]
640241b3:	jmp    0x64001650
640241b8:	lea    ecx,[ebp-0x30]
640241bb:	jmp    0x64001650
640241c0:	mov    ecx,DWORD PTR [ebp-0xc0]
640241c6:	jmp    0x64001650
640241cb:	lea    ecx,[ebp-0x84]
640241d1:	jmp    0x64011030
640241d6:	lea    ecx,[ebp-0xbc]
640241dc:	jmp    0x64011030
640241e1:	mov    edx,DWORD PTR [esp+0x8]
640241e5:	lea    eax,[edx-0xdc]
640241eb:	mov    ecx,DWORD PTR [edx-0xe0]
640241f1:	xor    ecx,eax
640241f3:	call   0x64013f6c
640241f8:	add    eax,0xc
640241fb:	mov    ecx,DWORD PTR [edx-0x8]
640241fe:	xor    ecx,eax
64024200:	call   0x64013f6c
64024205:	mov    eax,0x6402d3a4
6402420a:	jmp    0x64013c2e
6402420f:	int3   
64024210:	lea    ecx,[ebp+0x4]
64024213:	jmp    0x64001680
64024218:	mov    edx,DWORD PTR [esp+0x8]
6402421c:	lea    eax,[edx-0x30]
6402421f:	mov    ecx,DWORD PTR [edx-0x34]
64024222:	xor    ecx,eax
64024224:	call   0x64013f6c
64024229:	add    eax,0xc
6402422c:	mov    ecx,DWORD PTR [edx-0x4]
6402422f:	xor    ecx,eax
64024231:	call   0x64013f6c
64024236:	mov    eax,0x6402d3d0
6402423b:	jmp    0x64013c2e
64024240:	mov    ecx,DWORD PTR [ebp-0x10]
64024243:	jmp    0x64001680
64024248:	mov    edx,DWORD PTR [esp+0x8]
6402424c:	lea    eax,[edx-0xc]
6402424f:	mov    ecx,DWORD PTR [edx-0x10]
64024252:	xor    ecx,eax
64024254:	call   0x64013f6c
64024259:	mov    eax,0x6402d3fc
6402425e:	jmp    0x64013c2e
64024263:	int3   
64024264:	int3   
64024265:	int3   
64024266:	int3   
64024267:	int3   
64024268:	int3   
64024269:	int3   
6402426a:	int3   
6402426b:	int3   
6402426c:	int3   
6402426d:	int3   
6402426e:	int3   
6402426f:	int3   
64024270:	lea    ecx,[ebp-0x10]
64024273:	jmp    0x64001680
64024278:	mov    edx,DWORD PTR [esp+0x8]
6402427c:	lea    eax,[edx-0x8]
6402427f:	mov    ecx,DWORD PTR [edx-0xc]
64024282:	xor    ecx,eax
64024284:	call   0x64013f6c
64024289:	mov    eax,0x6402d428
6402428e:	jmp    0x64013c2e
64024293:	int3   
64024294:	int3   
64024295:	int3   
64024296:	int3   
64024297:	int3   
64024298:	int3   
64024299:	int3   
6402429a:	int3   
6402429b:	int3   
6402429c:	int3   
6402429d:	int3   
6402429e:	int3   
6402429f:	int3   
640242a0:	mov    ecx,DWORD PTR [ebp-0x10]
640242a3:	jmp    0x64001680
640242a8:	mov    edx,DWORD PTR [esp+0x8]
640242ac:	lea    eax,[edx-0xc]
640242af:	mov    ecx,DWORD PTR [edx-0x10]
640242b2:	xor    ecx,eax
640242b4:	call   0x64013f6c
640242b9:	mov    eax,0x6402d454
640242be:	jmp    0x64013c2e
640242c3:	int3   
640242c4:	int3   
640242c5:	int3   
640242c6:	int3   
640242c7:	int3   
640242c8:	int3   
640242c9:	int3   
640242ca:	int3   
640242cb:	int3   
640242cc:	int3   
640242cd:	int3   
640242ce:	int3   
640242cf:	int3   
640242d0:	mov    eax,ds:0x64033360
640242d5:	and    eax,0xfffffffe
640242d8:	mov    ds:0x64033360,eax
640242dd:	ret    
640242de:	mov    edx,DWORD PTR [esp+0x8]
640242e2:	lea    eax,[edx-0xc]
640242e5:	mov    ecx,DWORD PTR [edx-0x10]
640242e8:	xor    ecx,eax
640242ea:	call   0x64013f6c
640242ef:	mov    eax,0x6402d480
640242f4:	jmp    0x64013c2e
640242f9:	int3   
640242fa:	int3   
640242fb:	int3   
640242fc:	int3   
640242fd:	int3   
640242fe:	int3   
640242ff:	int3   
64024300:	mov    eax,ds:0x64033368
64024305:	and    eax,0xfffffffe
64024308:	mov    ds:0x64033368,eax
6402430d:	ret    
6402430e:	mov    edx,DWORD PTR [esp+0x8]
64024312:	lea    eax,[edx-0xc]
64024315:	mov    ecx,DWORD PTR [edx-0x10]
64024318:	xor    ecx,eax
6402431a:	call   0x64013f6c
6402431f:	mov    eax,0x6402d4ac
64024324:	jmp    0x64013c2e
64024329:	int3   
6402432a:	int3   
6402432b:	int3   
6402432c:	int3   
6402432d:	int3   
6402432e:	int3   
6402432f:	int3   
64024330:	mov    eax,ds:0x64033370
64024335:	and    eax,0xfffffffe
64024338:	mov    ds:0x64033370,eax
6402433d:	ret    
6402433e:	mov    edx,DWORD PTR [esp+0x8]
64024342:	lea    eax,[edx-0xc]
64024345:	mov    ecx,DWORD PTR [edx-0x10]
64024348:	xor    ecx,eax
6402434a:	call   0x64013f6c
6402434f:	mov    eax,0x6402d4d8
64024354:	jmp    0x64013c2e
64024359:	int3   
6402435a:	int3   
6402435b:	int3   
6402435c:	int3   
6402435d:	int3   
6402435e:	int3   
6402435f:	int3   
64024360:	mov    eax,ds:0x64033378
64024365:	and    eax,0xfffffffe
64024368:	mov    ds:0x64033378,eax
6402436d:	ret    
6402436e:	mov    edx,DWORD PTR [esp+0x8]
64024372:	lea    eax,[edx-0xc]
64024375:	mov    ecx,DWORD PTR [edx-0x10]
64024378:	xor    ecx,eax
6402437a:	call   0x64013f6c
6402437f:	mov    eax,0x6402d504
64024384:	jmp    0x64013c2e
64024389:	int3   
6402438a:	int3   
6402438b:	int3   
6402438c:	int3   
6402438d:	int3   
6402438e:	int3   
6402438f:	int3   
64024390:	mov    eax,ds:0x64033380
64024395:	and    eax,0xfffffffe
64024398:	mov    ds:0x64033380,eax
6402439d:	ret    
6402439e:	mov    edx,DWORD PTR [esp+0x8]
640243a2:	lea    eax,[edx-0xc]
640243a5:	mov    ecx,DWORD PTR [edx-0x10]
640243a8:	xor    ecx,eax
640243aa:	call   0x64013f6c
640243af:	mov    eax,0x6402d530
640243b4:	jmp    0x64013c2e
640243b9:	int3   
640243ba:	int3   
640243bb:	int3   
640243bc:	int3   
640243bd:	int3   
640243be:	int3   
640243bf:	int3   
640243c0:	mov    eax,ds:0x64033388
640243c5:	and    eax,0xfffffffe
640243c8:	mov    ds:0x64033388,eax
640243cd:	ret    
640243ce:	mov    edx,DWORD PTR [esp+0x8]
640243d2:	lea    eax,[edx-0xc]
640243d5:	mov    ecx,DWORD PTR [edx-0x10]
640243d8:	xor    ecx,eax
640243da:	call   0x64013f6c
640243df:	mov    eax,0x6402d55c
640243e4:	jmp    0x64013c2e
640243e9:	int3   
640243ea:	int3   
640243eb:	int3   
640243ec:	int3   
640243ed:	int3   
640243ee:	int3   
640243ef:	int3   
640243f0:	mov    eax,ds:0x64033390
640243f5:	and    eax,0xfffffffe
640243f8:	mov    ds:0x64033390,eax
640243fd:	ret    
640243fe:	mov    edx,DWORD PTR [esp+0x8]
64024402:	lea    eax,[edx-0xc]
64024405:	mov    ecx,DWORD PTR [edx-0x10]
64024408:	xor    ecx,eax
6402440a:	call   0x64013f6c
6402440f:	mov    eax,0x6402d588
64024414:	jmp    0x64013c2e
64024419:	int3   
6402441a:	int3   
6402441b:	int3   
6402441c:	int3   
6402441d:	int3   
6402441e:	int3   
6402441f:	int3   
64024420:	mov    eax,ds:0x64033398
64024425:	and    eax,0xfffffffe
64024428:	mov    ds:0x64033398,eax
6402442d:	ret    
6402442e:	mov    edx,DWORD PTR [esp+0x8]
64024432:	lea    eax,[edx-0xc]
64024435:	mov    ecx,DWORD PTR [edx-0x10]
64024438:	xor    ecx,eax
6402443a:	call   0x64013f6c
6402443f:	mov    eax,0x6402d5b4
64024444:	jmp    0x64013c2e
64024449:	int3   
6402444a:	int3   
6402444b:	int3   
6402444c:	int3   
6402444d:	int3   
6402444e:	int3   
6402444f:	int3   
64024450:	mov    eax,ds:0x640333a0
64024455:	and    eax,0xfffffffe
64024458:	mov    ds:0x640333a0,eax
6402445d:	ret    
6402445e:	mov    edx,DWORD PTR [esp+0x8]
64024462:	lea    eax,[edx-0xc]
64024465:	mov    ecx,DWORD PTR [edx-0x10]
64024468:	xor    ecx,eax
6402446a:	call   0x64013f6c
6402446f:	mov    eax,0x6402d5e0
64024474:	jmp    0x64013c2e
64024479:	int3   
6402447a:	int3   
6402447b:	int3   
6402447c:	int3   
6402447d:	int3   
6402447e:	int3   
6402447f:	int3   
64024480:	mov    eax,ds:0x640333a8
64024485:	and    eax,0xfffffffe
64024488:	mov    ds:0x640333a8,eax
6402448d:	ret    
6402448e:	mov    edx,DWORD PTR [esp+0x8]
64024492:	lea    eax,[edx-0xc]
64024495:	mov    ecx,DWORD PTR [edx-0x10]
64024498:	xor    ecx,eax
6402449a:	call   0x64013f6c
6402449f:	mov    eax,0x6402d60c
640244a4:	jmp    0x64013c2e
640244a9:	int3   
640244aa:	int3   
640244ab:	int3   
640244ac:	int3   
640244ad:	int3   
640244ae:	int3   
640244af:	int3   
640244b0:	mov    eax,ds:0x640333b0
640244b5:	and    eax,0xfffffffe
640244b8:	mov    ds:0x640333b0,eax
640244bd:	ret    
640244be:	mov    edx,DWORD PTR [esp+0x8]
640244c2:	lea    eax,[edx-0xc]
640244c5:	mov    ecx,DWORD PTR [edx-0x10]
640244c8:	xor    ecx,eax
640244ca:	call   0x64013f6c
640244cf:	mov    eax,0x6402d638
640244d4:	jmp    0x64013c2e
640244d9:	int3   
640244da:	int3   
640244db:	int3   
640244dc:	int3   
640244dd:	int3   
640244de:	int3   
640244df:	int3   
640244e0:	mov    eax,ds:0x640333b8
640244e5:	and    eax,0xfffffffe
640244e8:	mov    ds:0x640333b8,eax
640244ed:	ret    
640244ee:	mov    edx,DWORD PTR [esp+0x8]
640244f2:	lea    eax,[edx-0xc]
640244f5:	mov    ecx,DWORD PTR [edx-0x10]
640244f8:	xor    ecx,eax
640244fa:	call   0x64013f6c
640244ff:	mov    eax,0x6402d664
64024504:	jmp    0x64013c2e
64024509:	int3   
6402450a:	int3   
6402450b:	int3   
6402450c:	int3   
6402450d:	int3   
6402450e:	int3   
6402450f:	int3   
64024510:	mov    eax,ds:0x640333c0
64024515:	and    eax,0xfffffffe
64024518:	mov    ds:0x640333c0,eax
6402451d:	ret    
6402451e:	mov    edx,DWORD PTR [esp+0x8]
64024522:	lea    eax,[edx-0xc]
64024525:	mov    ecx,DWORD PTR [edx-0x10]
64024528:	xor    ecx,eax
6402452a:	call   0x64013f6c
6402452f:	mov    eax,0x6402d690
64024534:	jmp    0x64013c2e
64024539:	int3   
6402453a:	int3   
6402453b:	int3   
6402453c:	int3   
6402453d:	int3   
6402453e:	int3   
6402453f:	int3   
64024540:	mov    eax,ds:0x640333c8
64024545:	and    eax,0xfffffffe
64024548:	mov    ds:0x640333c8,eax
6402454d:	ret    
6402454e:	mov    edx,DWORD PTR [esp+0x8]
64024552:	lea    eax,[edx-0xc]
64024555:	mov    ecx,DWORD PTR [edx-0x10]
64024558:	xor    ecx,eax
6402455a:	call   0x64013f6c
6402455f:	mov    eax,0x6402d6bc
64024564:	jmp    0x64013c2e
64024569:	int3   
6402456a:	int3   
6402456b:	int3   
6402456c:	int3   
6402456d:	int3   
6402456e:	int3   
6402456f:	int3   
64024570:	mov    eax,ds:0x640333d0
64024575:	and    eax,0xfffffffe
64024578:	mov    ds:0x640333d0,eax
6402457d:	ret    
6402457e:	mov    edx,DWORD PTR [esp+0x8]
64024582:	lea    eax,[edx-0xc]
64024585:	mov    ecx,DWORD PTR [edx-0x10]
64024588:	xor    ecx,eax
6402458a:	call   0x64013f6c
6402458f:	mov    eax,0x6402d6e8
64024594:	jmp    0x64013c2e
64024599:	int3   
6402459a:	int3   
6402459b:	int3   
6402459c:	int3   
6402459d:	int3   
6402459e:	int3   
6402459f:	int3   
640245a0:	mov    eax,ds:0x640333d8
640245a5:	and    eax,0xfffffffe
640245a8:	mov    ds:0x640333d8,eax
640245ad:	ret    
640245ae:	mov    edx,DWORD PTR [esp+0x8]
640245b2:	lea    eax,[edx-0xc]
640245b5:	mov    ecx,DWORD PTR [edx-0x10]
640245b8:	xor    ecx,eax
640245ba:	call   0x64013f6c
640245bf:	mov    eax,0x6402d714
640245c4:	jmp    0x64013c2e
640245c9:	int3   
640245ca:	int3   
640245cb:	int3   
640245cc:	int3   
640245cd:	int3   
640245ce:	int3   
640245cf:	int3   
640245d0:	mov    eax,ds:0x640333e0
640245d5:	and    eax,0xfffffffe
640245d8:	mov    ds:0x640333e0,eax
640245dd:	ret    
640245de:	mov    edx,DWORD PTR [esp+0x8]
640245e2:	lea    eax,[edx-0xc]
640245e5:	mov    ecx,DWORD PTR [edx-0x10]
640245e8:	xor    ecx,eax
640245ea:	call   0x64013f6c
640245ef:	mov    eax,0x6402d740
640245f4:	jmp    0x64013c2e
640245f9:	int3   
640245fa:	int3   
640245fb:	int3   
640245fc:	int3   
640245fd:	int3   
640245fe:	int3   
640245ff:	int3   
64024600:	mov    eax,ds:0x640333e8
64024605:	and    eax,0xfffffffe
64024608:	mov    ds:0x640333e8,eax
6402460d:	ret    
6402460e:	mov    edx,DWORD PTR [esp+0x8]
64024612:	lea    eax,[edx-0xc]
64024615:	mov    ecx,DWORD PTR [edx-0x10]
64024618:	xor    ecx,eax
6402461a:	call   0x64013f6c
6402461f:	mov    eax,0x6402d76c
64024624:	jmp    0x64013c2e
64024629:	int3   
6402462a:	int3   
6402462b:	int3   
6402462c:	int3   
6402462d:	int3   
6402462e:	int3   
6402462f:	int3   
64024630:	mov    eax,ds:0x640333f0
64024635:	and    eax,0xfffffffe
64024638:	mov    ds:0x640333f0,eax
6402463d:	ret    
6402463e:	mov    edx,DWORD PTR [esp+0x8]
64024642:	lea    eax,[edx-0xc]
64024645:	mov    ecx,DWORD PTR [edx-0x10]
64024648:	xor    ecx,eax
6402464a:	call   0x64013f6c
6402464f:	mov    eax,0x6402d798
64024654:	jmp    0x64013c2e
64024659:	int3   
6402465a:	int3   
6402465b:	int3   
6402465c:	int3   
6402465d:	int3   
6402465e:	int3   
6402465f:	int3   
64024660:	mov    eax,ds:0x640333f8
64024665:	and    eax,0xfffffffe
64024668:	mov    ds:0x640333f8,eax
6402466d:	ret    
6402466e:	mov    edx,DWORD PTR [esp+0x8]
64024672:	lea    eax,[edx-0xc]
64024675:	mov    ecx,DWORD PTR [edx-0x10]
64024678:	xor    ecx,eax
6402467a:	call   0x64013f6c
6402467f:	mov    eax,0x6402d7c4
64024684:	jmp    0x64013c2e
64024689:	int3   
6402468a:	int3   
6402468b:	int3   
6402468c:	int3   
6402468d:	int3   
6402468e:	int3   
6402468f:	int3   
64024690:	mov    eax,ds:0x64033400
64024695:	and    eax,0xfffffffe
64024698:	mov    ds:0x64033400,eax
6402469d:	ret    
6402469e:	mov    edx,DWORD PTR [esp+0x8]
640246a2:	lea    eax,[edx-0xc]
640246a5:	mov    ecx,DWORD PTR [edx-0x10]
640246a8:	xor    ecx,eax
640246aa:	call   0x64013f6c
640246af:	mov    eax,0x6402d7f0
640246b4:	jmp    0x64013c2e
640246b9:	int3   
640246ba:	int3   
640246bb:	int3   
640246bc:	int3   
640246bd:	int3   
640246be:	int3   
640246bf:	int3   
640246c0:	mov    eax,ds:0x64033408
640246c5:	and    eax,0xfffffffe
640246c8:	mov    ds:0x64033408,eax
640246cd:	ret    
640246ce:	mov    edx,DWORD PTR [esp+0x8]
640246d2:	lea    eax,[edx-0xc]
640246d5:	mov    ecx,DWORD PTR [edx-0x10]
640246d8:	xor    ecx,eax
640246da:	call   0x64013f6c
640246df:	mov    eax,0x6402d81c
640246e4:	jmp    0x64013c2e
640246e9:	int3   
640246ea:	int3   
640246eb:	int3   
640246ec:	int3   
640246ed:	int3   
640246ee:	int3   
640246ef:	int3   
640246f0:	mov    eax,ds:0x64033410
640246f5:	and    eax,0xfffffffe
640246f8:	mov    ds:0x64033410,eax
640246fd:	ret    
640246fe:	mov    edx,DWORD PTR [esp+0x8]
64024702:	lea    eax,[edx-0xc]
64024705:	mov    ecx,DWORD PTR [edx-0x10]
64024708:	xor    ecx,eax
6402470a:	call   0x64013f6c
6402470f:	mov    eax,0x6402d848
64024714:	jmp    0x64013c2e
64024719:	int3   
6402471a:	int3   
6402471b:	int3   
6402471c:	int3   
6402471d:	int3   
6402471e:	int3   
6402471f:	int3   
64024720:	mov    eax,ds:0x64033418
64024725:	and    eax,0xfffffffe
64024728:	mov    ds:0x64033418,eax
6402472d:	ret    
6402472e:	mov    edx,DWORD PTR [esp+0x8]
64024732:	lea    eax,[edx-0xc]
64024735:	mov    ecx,DWORD PTR [edx-0x10]
64024738:	xor    ecx,eax
6402473a:	call   0x64013f6c
6402473f:	mov    eax,0x6402d874
64024744:	jmp    0x64013c2e
64024749:	int3   
6402474a:	int3   
6402474b:	int3   
6402474c:	int3   
6402474d:	int3   
6402474e:	int3   
6402474f:	int3   
64024750:	mov    eax,ds:0x64033420
64024755:	and    eax,0xfffffffe
64024758:	mov    ds:0x64033420,eax
6402475d:	ret    
6402475e:	mov    edx,DWORD PTR [esp+0x8]
64024762:	lea    eax,[edx-0xc]
64024765:	mov    ecx,DWORD PTR [edx-0x10]
64024768:	xor    ecx,eax
6402476a:	call   0x64013f6c
6402476f:	mov    eax,0x6402d8a0
64024774:	jmp    0x64013c2e
64024779:	int3   
6402477a:	int3   
6402477b:	int3   
6402477c:	int3   
6402477d:	int3   
6402477e:	int3   
6402477f:	int3   
64024780:	mov    eax,ds:0x64033428
64024785:	and    eax,0xfffffffe
64024788:	mov    ds:0x64033428,eax
6402478d:	ret    
6402478e:	mov    edx,DWORD PTR [esp+0x8]
64024792:	lea    eax,[edx-0xc]
64024795:	mov    ecx,DWORD PTR [edx-0x10]
64024798:	xor    ecx,eax
6402479a:	call   0x64013f6c
6402479f:	mov    eax,0x6402d8cc
640247a4:	jmp    0x64013c2e
640247a9:	int3   
640247aa:	int3   
640247ab:	int3   
640247ac:	int3   
640247ad:	int3   
640247ae:	int3   
640247af:	int3   
640247b0:	mov    eax,ds:0x64033430
640247b5:	and    eax,0xfffffffe
640247b8:	mov    ds:0x64033430,eax
640247bd:	ret    
640247be:	mov    edx,DWORD PTR [esp+0x8]
640247c2:	lea    eax,[edx-0xc]
640247c5:	mov    ecx,DWORD PTR [edx-0x10]
640247c8:	xor    ecx,eax
640247ca:	call   0x64013f6c
640247cf:	mov    eax,0x6402d8f8
640247d4:	jmp    0x64013c2e
640247d9:	int3   
640247da:	int3   
640247db:	int3   
640247dc:	int3   
640247dd:	int3   
640247de:	int3   
640247df:	int3   
640247e0:	mov    eax,ds:0x64033438
640247e5:	and    eax,0xfffffffe
640247e8:	mov    ds:0x64033438,eax
640247ed:	ret    
640247ee:	mov    edx,DWORD PTR [esp+0x8]
640247f2:	lea    eax,[edx-0xc]
640247f5:	mov    ecx,DWORD PTR [edx-0x10]
640247f8:	xor    ecx,eax
640247fa:	call   0x64013f6c
640247ff:	mov    eax,0x6402d924
64024804:	jmp    0x64013c2e
64024809:	int3   
6402480a:	int3   
6402480b:	int3   
6402480c:	int3   
6402480d:	int3   
6402480e:	int3   
6402480f:	int3   
64024810:	mov    eax,ds:0x64033440
64024815:	and    eax,0xfffffffe
64024818:	mov    ds:0x64033440,eax
6402481d:	ret    
6402481e:	mov    edx,DWORD PTR [esp+0x8]
64024822:	lea    eax,[edx-0xc]
64024825:	mov    ecx,DWORD PTR [edx-0x10]
64024828:	xor    ecx,eax
6402482a:	call   0x64013f6c
6402482f:	mov    eax,0x6402d950
64024834:	jmp    0x64013c2e
64024839:	int3   
6402483a:	int3   
6402483b:	int3   
6402483c:	int3   
6402483d:	int3   
6402483e:	int3   
6402483f:	int3   
64024840:	mov    eax,ds:0x64033448
64024845:	and    eax,0xfffffffe
64024848:	mov    ds:0x64033448,eax
6402484d:	ret    
6402484e:	mov    edx,DWORD PTR [esp+0x8]
64024852:	lea    eax,[edx-0xc]
64024855:	mov    ecx,DWORD PTR [edx-0x10]
64024858:	xor    ecx,eax
6402485a:	call   0x64013f6c
6402485f:	mov    eax,0x6402d97c
64024864:	jmp    0x64013c2e
64024869:	int3   
6402486a:	int3   
6402486b:	int3   
6402486c:	int3   
6402486d:	int3   
6402486e:	int3   
6402486f:	int3   
64024870:	mov    eax,ds:0x64033450
64024875:	and    eax,0xfffffffe
64024878:	mov    ds:0x64033450,eax
6402487d:	ret    
6402487e:	mov    edx,DWORD PTR [esp+0x8]
64024882:	lea    eax,[edx-0xc]
64024885:	mov    ecx,DWORD PTR [edx-0x10]
64024888:	xor    ecx,eax
6402488a:	call   0x64013f6c
6402488f:	mov    eax,0x6402d9a8
64024894:	jmp    0x64013c2e
64024899:	int3   
6402489a:	int3   
6402489b:	int3   
6402489c:	int3   
6402489d:	int3   
6402489e:	int3   
6402489f:	int3   
640248a0:	mov    eax,ds:0x64033458
640248a5:	and    eax,0xfffffffe
640248a8:	mov    ds:0x64033458,eax
640248ad:	ret    
640248ae:	mov    edx,DWORD PTR [esp+0x8]
640248b2:	lea    eax,[edx-0xc]
640248b5:	mov    ecx,DWORD PTR [edx-0x10]
640248b8:	xor    ecx,eax
640248ba:	call   0x64013f6c
640248bf:	mov    eax,0x6402d9d4
640248c4:	jmp    0x64013c2e
640248c9:	int3   
640248ca:	int3   
640248cb:	int3   
640248cc:	int3   
640248cd:	int3   
640248ce:	int3   
640248cf:	int3   
640248d0:	mov    eax,ds:0x64033460
640248d5:	and    eax,0xfffffffe
640248d8:	mov    ds:0x64033460,eax
640248dd:	ret    
640248de:	mov    edx,DWORD PTR [esp+0x8]
640248e2:	lea    eax,[edx-0xc]
640248e5:	mov    ecx,DWORD PTR [edx-0x10]
640248e8:	xor    ecx,eax
640248ea:	call   0x64013f6c
640248ef:	mov    eax,0x6402da00
640248f4:	jmp    0x64013c2e
640248f9:	int3   
640248fa:	int3   
640248fb:	int3   
640248fc:	int3   
640248fd:	int3   
640248fe:	int3   
640248ff:	int3   
64024900:	mov    eax,ds:0x64033468
64024905:	and    eax,0xfffffffe
64024908:	mov    ds:0x64033468,eax
6402490d:	ret    
6402490e:	mov    edx,DWORD PTR [esp+0x8]
64024912:	lea    eax,[edx-0xc]
64024915:	mov    ecx,DWORD PTR [edx-0x10]
64024918:	xor    ecx,eax
6402491a:	call   0x64013f6c
6402491f:	mov    eax,0x6402da2c
64024924:	jmp    0x64013c2e
64024929:	int3   
6402492a:	int3   
6402492b:	int3   
6402492c:	int3   
6402492d:	int3   
6402492e:	int3   
6402492f:	int3   
64024930:	mov    eax,ds:0x64033470
64024935:	and    eax,0xfffffffe
64024938:	mov    ds:0x64033470,eax
6402493d:	ret    
6402493e:	mov    edx,DWORD PTR [esp+0x8]
64024942:	lea    eax,[edx-0xc]
64024945:	mov    ecx,DWORD PTR [edx-0x10]
64024948:	xor    ecx,eax
6402494a:	call   0x64013f6c
6402494f:	mov    eax,0x6402da58
64024954:	jmp    0x64013c2e
64024959:	int3   
6402495a:	int3   
6402495b:	int3   
6402495c:	int3   
6402495d:	int3   
6402495e:	int3   
6402495f:	int3   
64024960:	mov    eax,ds:0x64033478
64024965:	and    eax,0xfffffffe
64024968:	mov    ds:0x64033478,eax
6402496d:	ret    
6402496e:	mov    edx,DWORD PTR [esp+0x8]
64024972:	lea    eax,[edx-0xc]
64024975:	mov    ecx,DWORD PTR [edx-0x10]
64024978:	xor    ecx,eax
6402497a:	call   0x64013f6c
6402497f:	mov    eax,0x6402da84
64024984:	jmp    0x64013c2e
64024989:	int3   
6402498a:	int3   
6402498b:	int3   
6402498c:	int3   
6402498d:	int3   
6402498e:	int3   
6402498f:	int3   
64024990:	mov    eax,ds:0x64033480
64024995:	and    eax,0xfffffffe
64024998:	mov    ds:0x64033480,eax
6402499d:	ret    
6402499e:	mov    edx,DWORD PTR [esp+0x8]
640249a2:	lea    eax,[edx-0xc]
640249a5:	mov    ecx,DWORD PTR [edx-0x10]
640249a8:	xor    ecx,eax
640249aa:	call   0x64013f6c
640249af:	mov    eax,0x6402dab0
640249b4:	jmp    0x64013c2e
640249b9:	int3   
640249ba:	int3   
640249bb:	int3   
640249bc:	int3   
640249bd:	int3   
640249be:	int3   
640249bf:	int3   
640249c0:	mov    eax,ds:0x64033488
640249c5:	and    eax,0xfffffffe
640249c8:	mov    ds:0x64033488,eax
640249cd:	ret    
640249ce:	mov    edx,DWORD PTR [esp+0x8]
640249d2:	lea    eax,[edx-0xc]
640249d5:	mov    ecx,DWORD PTR [edx-0x10]
640249d8:	xor    ecx,eax
640249da:	call   0x64013f6c
640249df:	mov    eax,0x6402dadc
640249e4:	jmp    0x64013c2e
640249e9:	int3   
640249ea:	int3   
640249eb:	int3   
640249ec:	int3   
640249ed:	int3   
640249ee:	int3   
640249ef:	int3   
640249f0:	mov    eax,ds:0x64033490
640249f5:	and    eax,0xfffffffe
640249f8:	mov    ds:0x64033490,eax
640249fd:	ret    
640249fe:	mov    edx,DWORD PTR [esp+0x8]
64024a02:	lea    eax,[edx-0xc]
64024a05:	mov    ecx,DWORD PTR [edx-0x10]
64024a08:	xor    ecx,eax
64024a0a:	call   0x64013f6c
64024a0f:	mov    eax,0x6402db08
64024a14:	jmp    0x64013c2e
64024a19:	int3   
64024a1a:	int3   
64024a1b:	int3   
64024a1c:	int3   
64024a1d:	int3   
64024a1e:	int3   
64024a1f:	int3   
64024a20:	mov    eax,ds:0x64033498
64024a25:	and    eax,0xfffffffe
64024a28:	mov    ds:0x64033498,eax
64024a2d:	ret    
64024a2e:	mov    edx,DWORD PTR [esp+0x8]
64024a32:	lea    eax,[edx-0xc]
64024a35:	mov    ecx,DWORD PTR [edx-0x10]
64024a38:	xor    ecx,eax
64024a3a:	call   0x64013f6c
64024a3f:	mov    eax,0x6402db34
64024a44:	jmp    0x64013c2e
64024a49:	int3   
64024a4a:	int3   
64024a4b:	int3   
64024a4c:	int3   
64024a4d:	int3   
64024a4e:	int3   
64024a4f:	int3   
64024a50:	mov    eax,ds:0x640334a0
64024a55:	and    eax,0xfffffffe
64024a58:	mov    ds:0x640334a0,eax
64024a5d:	ret    
64024a5e:	mov    edx,DWORD PTR [esp+0x8]
64024a62:	lea    eax,[edx-0xc]
64024a65:	mov    ecx,DWORD PTR [edx-0x10]
64024a68:	xor    ecx,eax
64024a6a:	call   0x64013f6c
64024a6f:	mov    eax,0x6402db60
64024a74:	jmp    0x64013c2e
64024a79:	int3   
64024a7a:	int3   
64024a7b:	int3   
64024a7c:	int3   
64024a7d:	int3   
64024a7e:	int3   
64024a7f:	int3   
64024a80:	mov    eax,ds:0x640334a8
64024a85:	and    eax,0xfffffffe
64024a88:	mov    ds:0x640334a8,eax
64024a8d:	ret    
64024a8e:	mov    edx,DWORD PTR [esp+0x8]
64024a92:	lea    eax,[edx-0xc]
64024a95:	mov    ecx,DWORD PTR [edx-0x10]
64024a98:	xor    ecx,eax
64024a9a:	call   0x64013f6c
64024a9f:	mov    eax,0x6402db8c
64024aa4:	jmp    0x64013c2e
64024aa9:	int3   
64024aaa:	int3   
64024aab:	int3   
64024aac:	int3   
64024aad:	int3   
64024aae:	int3   
64024aaf:	int3   
64024ab0:	mov    eax,ds:0x640334b0
64024ab5:	and    eax,0xfffffffe
64024ab8:	mov    ds:0x640334b0,eax
64024abd:	ret    
64024abe:	mov    edx,DWORD PTR [esp+0x8]
64024ac2:	lea    eax,[edx-0xc]
64024ac5:	mov    ecx,DWORD PTR [edx-0x10]
64024ac8:	xor    ecx,eax
64024aca:	call   0x64013f6c
64024acf:	mov    eax,0x6402dbb8
64024ad4:	jmp    0x64013c2e
64024ad9:	int3   
64024ada:	int3   
64024adb:	int3   
64024adc:	int3   
64024add:	int3   
64024ade:	int3   
64024adf:	int3   
64024ae0:	lea    edi,[ebp-0x58]
64024ae3:	jmp    0x6400ab30
64024ae8:	lea    edi,[ebp-0x40]
64024aeb:	jmp    0x6400ab30
64024af0:	lea    edi,[ebp-0x38]
64024af3:	jmp    0x6400ab30
64024af8:	lea    edi,[ebp-0x3c]
64024afb:	jmp    0x6400ab30
64024b00:	lea    edi,[ebp-0x40]
64024b03:	jmp    0x6400ab30
64024b08:	lea    ecx,[ebp-0x24]
64024b0b:	jmp    0x6400aea0
64024b10:	mov    edx,DWORD PTR [esp+0x8]
64024b14:	lea    eax,[edx-0x60]
64024b17:	mov    ecx,DWORD PTR [edx-0x64]
64024b1a:	xor    ecx,eax
64024b1c:	call   0x64013f6c
64024b21:	mov    eax,0x6402dc0c
64024b26:	jmp    0x64013c2e
64024b2b:	int3   
64024b2c:	int3   
64024b2d:	int3   
64024b2e:	int3   
64024b2f:	int3   
64024b30:	lea    eax,[ebp-0x24]
64024b33:	jmp    0x6400b9c0
64024b38:	lea    ecx,[ebp-0x10]
64024b3b:	jmp    0x64001680
64024b40:	lea    ecx,[ebp-0x18]
64024b43:	jmp    0x64001680
64024b48:	lea    ecx,[ebp-0x40]
64024b4b:	jmp    0x64001650
64024b50:	mov    edx,DWORD PTR [esp+0x8]
64024b54:	lea    eax,[edx+0xc]
64024b57:	mov    ecx,DWORD PTR [edx-0x44]
64024b5a:	xor    ecx,eax
64024b5c:	call   0x64013f6c
64024b61:	mov    ecx,DWORD PTR [edx+0x294]
64024b67:	xor    ecx,eax
64024b69:	call   0x64013f6c
64024b6e:	mov    eax,0x6402dc50
64024b73:	jmp    0x64013c2e
64024b78:	int3   
64024b79:	int3   
64024b7a:	int3   
64024b7b:	int3   
64024b7c:	int3   
64024b7d:	int3   
64024b7e:	int3   
64024b7f:	int3   
64024b80:	lea    ecx,[ebp-0x1005c]
64024b86:	jmp    0x64001650
64024b8b:	lea    ecx,[ebp-0x10074]
64024b91:	jmp    0x64002710
64024b96:	lea    ecx,[ebp-0x10074]
64024b9c:	jmp    0x64002710
64024ba1:	lea    ecx,[ebp-0x1005c]
64024ba7:	jmp    0x64001650
64024bac:	mov    edx,DWORD PTR [esp+0x8]
64024bb0:	lea    eax,[edx-0x10084]
64024bb6:	mov    ecx,DWORD PTR [edx-0x10088]
64024bbc:	xor    ecx,eax
64024bbe:	call   0x64013f6c
64024bc3:	add    eax,0x10
64024bc6:	mov    ecx,DWORD PTR [edx-0x4]
64024bc9:	xor    ecx,eax
64024bcb:	call   0x64013f6c
64024bd0:	mov    eax,0x6402dc94
64024bd5:	jmp    0x64013c2e
64024bda:	int3   
64024bdb:	int3   
64024bdc:	int3   
64024bdd:	int3   
64024bde:	int3   
64024bdf:	int3   
64024be0:	lea    ecx,[ebp-0x30]
64024be3:	jmp    0x64001650
64024be8:	lea    ecx,[ebp-0x5c]
64024beb:	jmp    0x64001650
64024bf0:	mov    edx,DWORD PTR [esp+0x8]
64024bf4:	lea    eax,[edx-0x74]
64024bf7:	mov    ecx,DWORD PTR [edx-0x78]
64024bfa:	xor    ecx,eax
64024bfc:	call   0x64013f6c
64024c01:	add    eax,0xc
64024c04:	mov    ecx,DWORD PTR [edx-0x8]
64024c07:	xor    ecx,eax
64024c09:	call   0x64013f6c
64024c0e:	mov    eax,0x6402dcc8
64024c13:	jmp    0x64013c2e
64024c18:	int3   
64024c19:	int3   
64024c1a:	int3   
64024c1b:	int3   
64024c1c:	int3   
64024c1d:	int3   
64024c1e:	int3   
64024c1f:	int3   
64024c20:	mov    edx,DWORD PTR [esp+0x8]
64024c24:	lea    eax,[edx+0xc]
64024c27:	mov    ecx,DWORD PTR [edx-0x14]
64024c2a:	xor    ecx,eax
64024c2c:	call   0x64013f6c
64024c31:	mov    eax,0x6402dd20
64024c36:	jmp    0x64013c2e
64024c3b:	int3   
64024c3c:	int3   
64024c3d:	int3   
64024c3e:	int3   
64024c3f:	int3   
64024c40:	mov    ecx,DWORD PTR [ebp-0x10]
64024c43:	jmp    0x64001680
64024c48:	mov    edx,DWORD PTR [esp+0x8]
64024c4c:	lea    eax,[edx-0xc]
64024c4f:	mov    ecx,DWORD PTR [edx-0x10]
64024c52:	xor    ecx,eax
64024c54:	call   0x64013f6c
64024c59:	mov    eax,0x6402dd4c
64024c5e:	jmp    0x64013c2e
64024c63:	int3   
64024c64:	int3   
64024c65:	int3   
64024c66:	int3   
64024c67:	int3   
64024c68:	int3   
64024c69:	int3   
64024c6a:	int3   
64024c6b:	int3   
64024c6c:	int3   
64024c6d:	int3   
64024c6e:	int3   
64024c6f:	int3   
64024c70:	lea    ecx,[ebp-0x1c]
64024c73:	jmp    0x64001680
64024c78:	mov    edx,DWORD PTR [esp+0x8]
64024c7c:	lea    eax,[edx-0x1c]
64024c7f:	mov    ecx,DWORD PTR [edx-0x20]
64024c82:	xor    ecx,eax
64024c84:	call   0x64013f6c
64024c89:	mov    eax,0x6402dd78
64024c8e:	jmp    0x64013c2e
64024c93:	int3   
64024c94:	int3   
64024c95:	int3   
64024c96:	int3   
64024c97:	int3   
64024c98:	int3   
64024c99:	int3   
64024c9a:	int3   
64024c9b:	int3   
64024c9c:	int3   
64024c9d:	int3   
64024c9e:	int3   
64024c9f:	int3   
64024ca0:	mov    edx,DWORD PTR [esp+0x8]
64024ca4:	lea    eax,[edx+0xc]
64024ca7:	mov    ecx,DWORD PTR [edx-0x16c]
64024cad:	xor    ecx,eax
64024caf:	call   0x64013f6c
64024cb4:	mov    ecx,DWORD PTR [edx-0x8]
64024cb7:	xor    ecx,eax
64024cb9:	call   0x64013f6c
64024cbe:	mov    eax,0x6402ddd0
64024cc3:	jmp    0x64013c2e
64024cc8:	int3   
64024cc9:	int3   
64024cca:	int3   
64024ccb:	int3   
64024ccc:	int3   
64024ccd:	int3   
64024cce:	int3   
64024ccf:	int3   
64024cd0:	mov    eax,ds:0x640334c0
64024cd5:	and    eax,0xfffffffe
64024cd8:	mov    ds:0x640334c0,eax
64024cdd:	ret    
64024cde:	lea    ecx,[ebp-0x434]
64024ce4:	jmp    0x64001650
64024ce9:	lea    ecx,[ebp-0x460]
64024cef:	jmp    0x64001650
64024cf4:	mov    edx,DWORD PTR [esp+0x8]
64024cf8:	lea    eax,[edx-0x46c]
64024cfe:	mov    ecx,DWORD PTR [edx-0x470]
64024d04:	xor    ecx,eax
64024d06:	call   0x64013f6c
64024d0b:	add    eax,0xc
64024d0e:	mov    ecx,DWORD PTR [edx-0x8]
64024d11:	xor    ecx,eax
64024d13:	call   0x64013f6c
64024d18:	mov    eax,0x6402de0c
64024d1d:	jmp    0x64013c2e
64024d22:	int3   
64024d23:	int3   
64024d24:	int3   
64024d25:	int3   
64024d26:	int3   
64024d27:	int3   
64024d28:	int3   
64024d29:	int3   
64024d2a:	int3   
64024d2b:	int3   
64024d2c:	int3   
64024d2d:	int3   
64024d2e:	int3   
64024d2f:	int3   
64024d30:	lea    esi,[ebp-0x840]
64024d36:	jmp    0x64002b80
64024d3b:	lea    ecx,[ebp-0x848]
64024d41:	jmp    0x64001680
64024d46:	mov    edx,DWORD PTR [esp+0x8]
64024d4a:	lea    eax,[edx-0x84c]
64024d50:	mov    ecx,DWORD PTR [edx-0x850]
64024d56:	xor    ecx,eax
64024d58:	call   0x64013f6c
64024d5d:	add    eax,0xc
64024d60:	mov    ecx,DWORD PTR [edx-0x8]
64024d63:	xor    ecx,eax
64024d65:	call   0x64013f6c
64024d6a:	mov    eax,0x6402de40
64024d6f:	jmp    0x64013c2e
64024d74:	int3   
64024d75:	int3   
64024d76:	int3   
64024d77:	int3   
64024d78:	int3   
64024d79:	int3   
64024d7a:	int3   
64024d7b:	int3   
64024d7c:	int3   
64024d7d:	int3   
64024d7e:	int3   
64024d7f:	int3   
64024d80:	mov    eax,DWORD PTR [ebp-0x54]
64024d83:	and    eax,0x1
64024d86:	je     0x64024d98
64024d8c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64024d90:	mov    ecx,DWORD PTR [ebp+0x4]
64024d93:	jmp    0x64001680
64024d98:	ret    
64024d99:	lea    ecx,[ebp-0x50]
64024d9c:	jmp    0x64001650
64024da1:	lea    ecx,[ebp-0x50]
64024da4:	jmp    0x64001650
64024da9:	mov    edx,DWORD PTR [esp+0x8]
64024dad:	lea    eax,[edx-0x54]
64024db0:	mov    ecx,DWORD PTR [edx-0x58]
64024db3:	xor    ecx,eax
64024db5:	call   0x64013f6c
64024dba:	mov    eax,0x6402de7c
64024dbf:	jmp    0x64013c2e
64024dc4:	int3   
64024dc5:	int3   
64024dc6:	int3   
64024dc7:	int3   
64024dc8:	int3   
64024dc9:	int3   
64024dca:	int3   
64024dcb:	int3   
64024dcc:	int3   
64024dcd:	int3   
64024dce:	int3   
64024dcf:	int3   
64024dd0:	lea    ecx,[ebp+0x4]
64024dd3:	jmp    0x64001680
64024dd8:	lea    ecx,[ebp-0x58]
64024ddb:	jmp    0x640016a0
64024de0:	lea    ecx,[ebp-0x50]
64024de3:	jmp    0x64001650
64024de8:	lea    ecx,[ebp-0x50]
64024deb:	jmp    0x64001650
64024df0:	mov    edx,DWORD PTR [esp+0x8]
64024df4:	lea    eax,[edx-0x58]
64024df7:	mov    ecx,DWORD PTR [edx-0x5c]
64024dfa:	xor    ecx,eax
64024dfc:	call   0x64013f6c
64024e01:	mov    eax,0x6402dec0
64024e06:	jmp    0x64013c2e
64024e0b:	int3   
64024e0c:	int3   
64024e0d:	int3   
64024e0e:	int3   
64024e0f:	int3   
64024e10:	lea    ecx,[ebp-0x428]
64024e16:	jmp    0x64001680
64024e1b:	mov    edx,DWORD PTR [esp+0x8]
64024e1f:	lea    eax,[edx-0x42c]
64024e25:	mov    ecx,DWORD PTR [edx-0x430]
64024e2b:	xor    ecx,eax
64024e2d:	call   0x64013f6c
64024e32:	add    eax,0x10
64024e35:	mov    ecx,DWORD PTR [edx-0x4]
64024e38:	xor    ecx,eax
64024e3a:	call   0x64013f6c
64024e3f:	mov    eax,0x6402deec
64024e44:	jmp    0x64013c2e
64024e49:	int3   
64024e4a:	int3   
64024e4b:	int3   
64024e4c:	int3   
64024e4d:	int3   
64024e4e:	int3   
64024e4f:	int3   
64024e50:	lea    edi,[ebp-0x18]
64024e53:	jmp    0x6400ab30
64024e58:	lea    edi,[ebp-0x1c]
64024e5b:	jmp    0x6400ab30
64024e60:	lea    edi,[ebp-0x14]
64024e63:	jmp    0x6400ab30
64024e68:	mov    edx,DWORD PTR [esp+0x8]
64024e6c:	lea    eax,[edx-0x1c]
64024e6f:	mov    ecx,DWORD PTR [edx-0x20]
64024e72:	xor    ecx,eax
64024e74:	call   0x64013f6c
64024e79:	mov    eax,0x6402df38
64024e7e:	jmp    0x64013c2e
64024e83:	int3   
64024e84:	int3   
64024e85:	int3   
64024e86:	int3   
64024e87:	int3   
64024e88:	int3   
64024e89:	int3   
64024e8a:	int3   
64024e8b:	int3   
64024e8c:	int3   
64024e8d:	int3   
64024e8e:	int3   
64024e8f:	int3   
64024e90:	lea    ecx,[ebp+0x40c]
64024e96:	jmp    0x64001680
64024e9b:	mov    eax,ds:0x640334d0
64024ea0:	and    eax,0xfffffffe
64024ea3:	mov    ds:0x640334d0,eax
64024ea8:	ret    
64024ea9:	lea    eax,[ebp-0x34]
64024eac:	jmp    0x64003e00
64024eb1:	lea    ecx,[ebp-0x28]
64024eb4:	jmp    0x64001650
64024eb9:	lea    ecx,[ebp-0x28]
64024ebc:	jmp    0x64001650
64024ec1:	lea    ecx,[ebp-0x28]
64024ec4:	jmp    0x64001650
64024ec9:	lea    ecx,[ebp-0x28]
64024ecc:	jmp    0x64001650
64024ed1:	lea    ecx,[ebp-0x28]
64024ed4:	jmp    0x64001650
64024ed9:	lea    ecx,[ebp-0x28]
64024edc:	jmp    0x64001650
64024ee1:	lea    ecx,[ebp-0x28]
64024ee4:	jmp    0x64001650
64024ee9:	lea    ecx,[ebp-0x28]
64024eec:	jmp    0x64001650
64024ef1:	lea    ecx,[ebp-0x28]
64024ef4:	jmp    0x64001650
64024ef9:	lea    ecx,[ebp-0x28]
64024efc:	jmp    0x64001650
64024f01:	lea    ecx,[ebp-0x28]
64024f04:	jmp    0x64001650
64024f09:	lea    ecx,[ebp-0x28]
64024f0c:	jmp    0x64001650
64024f11:	lea    ecx,[ebp-0x28]
64024f14:	jmp    0x64001650
64024f19:	lea    ecx,[ebp-0x28]
64024f1c:	jmp    0x64001650
64024f21:	lea    ecx,[ebp-0x28]
64024f24:	jmp    0x64001650
64024f29:	lea    ecx,[ebp-0x28]
64024f2c:	jmp    0x64001650
64024f31:	lea    ecx,[ebp-0x28]
64024f34:	jmp    0x64001650
64024f39:	lea    ecx,[ebp-0x28]
64024f3c:	jmp    0x64001650
64024f41:	lea    ecx,[ebp-0x28]
64024f44:	jmp    0x64001650
64024f49:	lea    ecx,[ebp-0x28]
64024f4c:	jmp    0x64001650
64024f51:	lea    ecx,[ebp-0x28]
64024f54:	jmp    0x64001650
64024f59:	lea    ecx,[ebp-0x28]
64024f5c:	jmp    0x64001650
64024f61:	lea    ecx,[ebp-0x28]
64024f64:	jmp    0x64001650
64024f69:	lea    ecx,[ebp-0x28]
64024f6c:	jmp    0x64001650
64024f71:	lea    ecx,[ebp-0x28]
64024f74:	jmp    0x64001650
64024f79:	lea    ecx,[ebp-0x28]
64024f7c:	jmp    0x64001650
64024f81:	lea    ecx,[ebp-0x28]
64024f84:	jmp    0x64001650
64024f89:	lea    ecx,[ebp-0x28]
64024f8c:	jmp    0x64001650
64024f91:	lea    ecx,[ebp-0x28]
64024f94:	jmp    0x64001650
64024f99:	lea    ecx,[ebp-0x28]
64024f9c:	jmp    0x64001650
64024fa1:	lea    ecx,[ebp-0x28]
64024fa4:	jmp    0x64001650
64024fa9:	lea    ecx,[ebp-0x28]
64024fac:	jmp    0x64001650
64024fb1:	lea    ecx,[ebp-0x28]
64024fb4:	jmp    0x64001650
64024fb9:	lea    ecx,[ebp-0x28]
64024fbc:	jmp    0x64001650
64024fc1:	lea    ecx,[ebp-0x28]
64024fc4:	jmp    0x64001650
64024fc9:	lea    ecx,[ebp-0x28]
64024fcc:	jmp    0x64001650
64024fd1:	lea    ecx,[ebp-0x28]
64024fd4:	jmp    0x64001650
64024fd9:	lea    ecx,[ebp-0x28]
64024fdc:	jmp    0x64001650
64024fe1:	lea    ecx,[ebp-0x28]
64024fe4:	jmp    0x64001650
64024fe9:	lea    ecx,[ebp-0x28]
64024fec:	jmp    0x64001650
64024ff1:	lea    ecx,[ebp-0x28]
64024ff4:	jmp    0x64001650
64024ff9:	lea    ecx,[ebp-0x28]
64024ffc:	jmp    0x64001650
64025001:	lea    ecx,[ebp-0x28]
64025004:	jmp    0x64001650
64025009:	lea    ecx,[ebp-0x28]
6402500c:	jmp    0x64001650
64025011:	lea    ecx,[ebp-0x28]
64025014:	jmp    0x64001650
64025019:	lea    ecx,[ebp-0x28]
6402501c:	jmp    0x64001650
64025021:	lea    ecx,[ebp-0x28]
64025024:	jmp    0x64001650
64025029:	lea    ecx,[ebp-0x28]
6402502c:	jmp    0x64001650
64025031:	lea    ecx,[ebp-0x28]
64025034:	jmp    0x64001650
64025039:	lea    ecx,[ebp-0x28]
6402503c:	jmp    0x64001650
64025041:	lea    ecx,[ebp-0x28]
64025044:	jmp    0x64001650
64025049:	lea    ecx,[ebp-0x28]
6402504c:	jmp    0x64001650
64025051:	lea    eax,[ebp-0x40]
64025054:	jmp    0x64003e00
64025059:	lea    ecx,[ebp-0x28]
6402505c:	jmp    0x64001650
64025061:	mov    edx,DWORD PTR [esp+0x8]
64025065:	lea    eax,[edx+0xc]
64025068:	mov    ecx,DWORD PTR [edx-0x4c]
6402506b:	xor    ecx,eax
6402506d:	call   0x64013f6c
64025072:	mov    ecx,DWORD PTR [edx+0x40c]
64025078:	xor    ecx,eax
6402507a:	call   0x64013f6c
6402507f:	mov    eax,0x6402e128
64025084:	jmp    0x64013c2e
64025089:	int3   
6402508a:	int3   
6402508b:	int3   
6402508c:	int3   
6402508d:	int3   
6402508e:	int3   
6402508f:	int3   
64025090:	lea    ecx,[ebp+0x40c]
64025096:	jmp    0x64001680
6402509b:	mov    eax,ds:0x640334e0
640250a0:	and    eax,0xfffffffe
640250a3:	mov    ds:0x640334e0,eax
640250a8:	ret    
640250a9:	lea    eax,[ebp-0x34]
640250ac:	jmp    0x64003e00
640250b1:	lea    ecx,[ebp-0x28]
640250b4:	jmp    0x64001650
640250b9:	lea    ecx,[ebp-0x28]
640250bc:	jmp    0x64001650
640250c1:	lea    ecx,[ebp-0x28]
640250c4:	jmp    0x64001650
640250c9:	lea    ecx,[ebp-0x28]
640250cc:	jmp    0x64001650
640250d1:	lea    ecx,[ebp-0x28]
640250d4:	jmp    0x64001650
640250d9:	lea    ecx,[ebp-0x28]
640250dc:	jmp    0x64001650
640250e1:	lea    ecx,[ebp-0x28]
640250e4:	jmp    0x64001650
640250e9:	lea    ecx,[ebp-0x28]
640250ec:	jmp    0x64001650
640250f1:	lea    ecx,[ebp-0x28]
640250f4:	jmp    0x64001650
640250f9:	lea    ecx,[ebp-0x28]
640250fc:	jmp    0x64001650
64025101:	lea    ecx,[ebp-0x28]
64025104:	jmp    0x64001650
64025109:	lea    ecx,[ebp-0x28]
6402510c:	jmp    0x64001650
64025111:	lea    ecx,[ebp-0x28]
64025114:	jmp    0x64001650
64025119:	lea    ecx,[ebp-0x28]
6402511c:	jmp    0x64001650
64025121:	lea    ecx,[ebp-0x28]
64025124:	jmp    0x64001650
64025129:	lea    ecx,[ebp-0x28]
6402512c:	jmp    0x64001650
64025131:	lea    ecx,[ebp-0x28]
64025134:	jmp    0x64001650
64025139:	lea    ecx,[ebp-0x28]
6402513c:	jmp    0x64001650
64025141:	lea    ecx,[ebp-0x28]
64025144:	jmp    0x64001650
64025149:	lea    ecx,[ebp-0x28]
6402514c:	jmp    0x64001650
64025151:	lea    ecx,[ebp-0x28]
64025154:	jmp    0x64001650
64025159:	lea    ecx,[ebp-0x28]
6402515c:	jmp    0x64001650
64025161:	lea    ecx,[ebp-0x28]
64025164:	jmp    0x64001650
64025169:	lea    ecx,[ebp-0x28]
6402516c:	jmp    0x64001650
64025171:	lea    ecx,[ebp-0x28]
64025174:	jmp    0x64001650
64025179:	lea    ecx,[ebp-0x28]
6402517c:	jmp    0x64001650
64025181:	lea    ecx,[ebp-0x28]
64025184:	jmp    0x64001650
64025189:	lea    ecx,[ebp-0x28]
6402518c:	jmp    0x64001650
64025191:	lea    ecx,[ebp-0x28]
64025194:	jmp    0x64001650
64025199:	lea    ecx,[ebp-0x28]
6402519c:	jmp    0x64001650
640251a1:	lea    ecx,[ebp-0x28]
640251a4:	jmp    0x64001650
640251a9:	lea    ecx,[ebp-0x28]
640251ac:	jmp    0x64001650
640251b1:	lea    ecx,[ebp-0x28]
640251b4:	jmp    0x64001650
640251b9:	lea    ecx,[ebp-0x28]
640251bc:	jmp    0x64001650
640251c1:	lea    ecx,[ebp-0x28]
640251c4:	jmp    0x64001650
640251c9:	lea    ecx,[ebp-0x28]
640251cc:	jmp    0x64001650
640251d1:	lea    ecx,[ebp-0x28]
640251d4:	jmp    0x64001650
640251d9:	lea    ecx,[ebp-0x28]
640251dc:	jmp    0x64001650
640251e1:	lea    eax,[ebp-0x40]
640251e4:	jmp    0x64003e00
640251e9:	lea    ecx,[ebp-0x28]
640251ec:	jmp    0x64001650
640251f1:	mov    edx,DWORD PTR [esp+0x8]
640251f5:	lea    eax,[edx+0xc]
640251f8:	mov    ecx,DWORD PTR [edx-0x4c]
640251fb:	xor    ecx,eax
640251fd:	call   0x64013f6c
64025202:	mov    ecx,DWORD PTR [edx+0x40c]
64025208:	xor    ecx,eax
6402520a:	call   0x64013f6c
6402520f:	mov    eax,0x6402e2a8
64025214:	jmp    0x64013c2e
64025219:	int3   
6402521a:	int3   
6402521b:	int3   
6402521c:	int3   
6402521d:	int3   
6402521e:	int3   
6402521f:	int3   
64025220:	mov    eax,DWORD PTR [ebp-0x54]
64025223:	and    eax,0x1
64025226:	je     0x64025238
6402522c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64025230:	mov    ecx,DWORD PTR [ebp+0x4]
64025233:	jmp    0x64001680
64025238:	ret    
64025239:	lea    ecx,[ebp-0x50]
6402523c:	jmp    0x64001650
64025241:	mov    edx,DWORD PTR [esp+0x8]
64025245:	lea    eax,[edx-0x58]
64025248:	mov    ecx,DWORD PTR [edx-0x5c]
6402524b:	xor    ecx,eax
6402524d:	call   0x64013f6c
64025252:	mov    eax,0x6402e2dc
64025257:	jmp    0x64013c2e
6402525c:	int3   
6402525d:	int3   
6402525e:	int3   
6402525f:	int3   
64025260:	mov    eax,DWORD PTR [ebp-0x28]
64025263:	and    eax,0x1
64025266:	je     0x64025278
6402526c:	and    DWORD PTR [ebp-0x28],0xfffffffe
64025270:	mov    ecx,DWORD PTR [ebp+0x4]
64025273:	jmp    0x64001680
64025278:	ret    
64025279:	lea    ecx,[ebp-0x24]
6402527c:	jmp    0x64001680
64025281:	lea    ecx,[ebp-0x20]
64025284:	jmp    0x64001680
64025289:	lea    ecx,[ebp-0x1c]
6402528c:	jmp    0x64001680
64025291:	lea    ecx,[ebp-0x18]
64025294:	jmp    0x64001680
64025299:	lea    ecx,[ebp-0x14]
6402529c:	jmp    0x64001680
640252a1:	lea    ecx,[ebp-0x10]
640252a4:	jmp    0x64001680
640252a9:	mov    edx,DWORD PTR [esp+0x8]
640252ad:	lea    eax,[edx-0x30]
640252b0:	mov    ecx,DWORD PTR [edx-0x34]
640252b3:	xor    ecx,eax
640252b5:	call   0x64013f6c
640252ba:	mov    eax,0x6402e338
640252bf:	jmp    0x64013c2e
640252c4:	int3   
640252c5:	int3   
640252c6:	int3   
640252c7:	int3   
640252c8:	int3   
640252c9:	int3   
640252ca:	int3   
640252cb:	int3   
640252cc:	int3   
640252cd:	int3   
640252ce:	int3   
640252cf:	int3   
640252d0:	mov    eax,DWORD PTR [ebp-0x3c]
640252d3:	and    eax,0x1
640252d6:	je     0x640252e8
640252dc:	and    DWORD PTR [ebp-0x3c],0xfffffffe
640252e0:	mov    ecx,DWORD PTR [ebp+0x4]
640252e3:	jmp    0x64001680
640252e8:	ret    
640252e9:	lea    ecx,[ebp-0x50]
640252ec:	jmp    0x64001680
640252f1:	lea    ecx,[ebp-0x38]
640252f4:	jmp    0x64001680
640252f9:	mov    edx,DWORD PTR [esp+0x8]
640252fd:	lea    eax,[edx-0x54]
64025300:	mov    ecx,DWORD PTR [edx-0x58]
64025303:	xor    ecx,eax
64025305:	call   0x64013f6c
6402530a:	mov    eax,0x6402e374
6402530f:	jmp    0x64013c2e
64025314:	int3   
64025315:	int3   
64025316:	int3   
64025317:	int3   
64025318:	int3   
64025319:	int3   
6402531a:	int3   
6402531b:	int3   
6402531c:	int3   
6402531d:	int3   
6402531e:	int3   
6402531f:	int3   
64025320:	lea    ecx,[ebp+0xc]
64025323:	jmp    0x64001680
64025328:	lea    ecx,[ebp-0x28]
6402532b:	jmp    0x64001650
64025330:	lea    ecx,[ebp-0x6c]
64025333:	jmp    0x64001650
64025338:	lea    ecx,[ebp-0x88]
6402533e:	jmp    0x64001650
64025343:	lea    ecx,[ebp-0xc0]
64025349:	jmp    0x64001650
6402534e:	lea    ecx,[ebp-0xa4]
64025354:	jmp    0x64001650
64025359:	mov    edx,DWORD PTR [esp+0x8]
6402535d:	lea    eax,[edx+0xc]
64025360:	mov    ecx,DWORD PTR [edx-0xc4]
64025366:	xor    ecx,eax
64025368:	call   0x64013f6c
6402536d:	mov    ecx,DWORD PTR [edx+0x80]
64025373:	xor    ecx,eax
64025375:	call   0x64013f6c
6402537a:	mov    eax,0x6402e3c8
6402537f:	jmp    0x64013c2e
64025384:	int3   
64025385:	int3   
64025386:	int3   
64025387:	int3   
64025388:	int3   
64025389:	int3   
6402538a:	int3   
6402538b:	int3   
6402538c:	int3   
6402538d:	int3   
6402538e:	int3   
6402538f:	int3   
64025390:	call   0x6400dac0
64025395:	mov    ds:0x6403329c,eax
6402539a:	ret    
6402539b:	int3   
6402539c:	int3   
6402539d:	int3   
6402539e:	int3   
6402539f:	int3   
640253a0:	call   0x6400dba0
640253a5:	mov    ds:0x640332f4,eax
640253aa:	ret    
640253ab:	int3   
640253ac:	int3   
640253ad:	int3   
640253ae:	int3   
640253af:	int3   
640253b0:	call   0x6400dc80
640253b5:	mov    ds:0x64033310,eax
640253ba:	ret    
640253bb:	int3   
640253bc:	int3   
640253bd:	int3   
640253be:	int3   
640253bf:	int3   
640253c0:	call   0x6400dd60
640253c5:	mov    ds:0x6403328c,eax
640253ca:	ret    
640253cb:	int3   
640253cc:	int3   
640253cd:	int3   
640253ce:	int3   
640253cf:	int3   
640253d0:	call   0x6400de40
640253d5:	mov    ds:0x64033314,eax
640253da:	ret    
640253db:	int3   
640253dc:	int3   
640253dd:	int3   
640253de:	int3   
640253df:	int3   
640253e0:	call   0x6400df20
640253e5:	mov    ds:0x64033288,eax
640253ea:	ret    
640253eb:	int3   
640253ec:	int3   
640253ed:	int3   
640253ee:	int3   
640253ef:	int3   
640253f0:	call   0x6400e000
640253f5:	mov    ds:0x640332b8,eax
640253fa:	ret    
640253fb:	int3   
640253fc:	int3   
640253fd:	int3   
640253fe:	int3   
640253ff:	int3   
64025400:	call   0x6400e0e0
64025405:	mov    ds:0x640332e8,eax
6402540a:	ret    
6402540b:	int3   
6402540c:	int3   
6402540d:	int3   
6402540e:	int3   
6402540f:	int3   
64025410:	call   0x6400e1c0
64025415:	mov    ds:0x64033318,eax
6402541a:	ret    
6402541b:	int3   
6402541c:	int3   
6402541d:	int3   
6402541e:	int3   
6402541f:	int3   
64025420:	call   0x6400e2a0
64025425:	mov    ds:0x640332f0,eax
6402542a:	ret    
6402542b:	int3   
6402542c:	int3   
6402542d:	int3   
6402542e:	int3   
6402542f:	int3   
64025430:	call   0x6400e380
64025435:	mov    ds:0x640332c4,eax
6402543a:	ret    
6402543b:	int3   
6402543c:	int3   
6402543d:	int3   
6402543e:	int3   
6402543f:	int3   
64025440:	call   0x6400e460
64025445:	mov    ds:0x640332a4,eax
6402544a:	ret    
6402544b:	int3   
6402544c:	int3   
6402544d:	int3   
6402544e:	int3   
6402544f:	int3   
64025450:	call   0x6400e540
64025455:	mov    ds:0x640332dc,eax
6402545a:	ret    
6402545b:	int3   
6402545c:	int3   
6402545d:	int3   
6402545e:	int3   
6402545f:	int3   
64025460:	call   0x6400e620
64025465:	mov    ds:0x64033294,eax
6402546a:	ret    
6402546b:	int3   
6402546c:	int3   
6402546d:	int3   
6402546e:	int3   
6402546f:	int3   
64025470:	call   0x6400e700
64025475:	mov    ds:0x64033284,eax
6402547a:	ret    
6402547b:	int3   
6402547c:	int3   
6402547d:	int3   
6402547e:	int3   
6402547f:	int3   
64025480:	call   0x6400e7e0
64025485:	mov    ds:0x64033300,eax
6402548a:	ret    
6402548b:	int3   
6402548c:	int3   
6402548d:	int3   
6402548e:	int3   
6402548f:	int3   
64025490:	call   0x6400e8c0
64025495:	mov    ds:0x640332c0,eax
6402549a:	ret    
6402549b:	int3   
6402549c:	int3   
6402549d:	int3   
6402549e:	int3   
6402549f:	int3   
640254a0:	call   0x6400e9a0
640254a5:	mov    ds:0x640332e4,eax
640254aa:	ret    
640254ab:	int3   
640254ac:	int3   
640254ad:	int3   
640254ae:	int3   
640254af:	int3   
640254b0:	call   0x6400ea80
640254b5:	mov    ds:0x64033280,eax
640254ba:	ret    
640254bb:	int3   
640254bc:	int3   
640254bd:	int3   
640254be:	int3   
640254bf:	int3   
640254c0:	call   0x6400eb60
640254c5:	mov    ds:0x640332fc,eax
640254ca:	ret    
640254cb:	int3   
640254cc:	int3   
640254cd:	int3   
640254ce:	int3   
640254cf:	int3   
640254d0:	call   0x6400ec40
640254d5:	mov    ds:0x640332b4,eax
640254da:	ret    
640254db:	int3   
640254dc:	int3   
640254dd:	int3   
640254de:	int3   
640254df:	int3   
640254e0:	call   0x6400ed20
640254e5:	mov    ds:0x64033298,eax
640254ea:	ret    
640254eb:	int3   
640254ec:	int3   
640254ed:	int3   
640254ee:	int3   
640254ef:	int3   
640254f0:	call   0x6400ee00
640254f5:	mov    ds:0x640332a0,eax
640254fa:	ret    
640254fb:	int3   
640254fc:	int3   
640254fd:	int3   
640254fe:	int3   
640254ff:	int3   
64025500:	call   0x6400eee0
64025505:	mov    ds:0x64033324,eax
6402550a:	ret    
6402550b:	int3   
6402550c:	int3   
6402550d:	int3   
6402550e:	int3   
6402550f:	int3   
64025510:	call   0x6400efc0
64025515:	mov    ds:0x640332ac,eax
6402551a:	ret    
6402551b:	int3   
6402551c:	int3   
6402551d:	int3   
6402551e:	int3   
6402551f:	int3   
64025520:	call   0x6400f0a0
64025525:	mov    ds:0x640332e0,eax
6402552a:	ret    
6402552b:	int3   
6402552c:	int3   
6402552d:	int3   
6402552e:	int3   
6402552f:	int3   
64025530:	call   0x6400f180
64025535:	mov    ds:0x64033290,eax
6402553a:	ret    
6402553b:	int3   
6402553c:	int3   
6402553d:	int3   
6402553e:	int3   
6402553f:	int3   
64025540:	call   0x6400f260
64025545:	mov    ds:0x640332ec,eax
6402554a:	ret    
6402554b:	int3   
6402554c:	int3   
6402554d:	int3   
6402554e:	int3   
6402554f:	int3   
64025550:	call   0x6400f340
64025555:	mov    ds:0x640332d0,eax
6402555a:	ret    
6402555b:	int3   
6402555c:	int3   
6402555d:	int3   
6402555e:	int3   
6402555f:	int3   
64025560:	call   0x6400f420
64025565:	mov    ds:0x640332bc,eax
6402556a:	ret    
6402556b:	int3   
6402556c:	int3   
6402556d:	int3   
6402556e:	int3   
6402556f:	int3   
64025570:	call   0x6400f500
64025575:	mov    ds:0x640332d8,eax
6402557a:	ret    
6402557b:	int3   
6402557c:	int3   
6402557d:	int3   
6402557e:	int3   
6402557f:	int3   
64025580:	call   0x6400f5e0
64025585:	mov    ds:0x640332d4,eax
6402558a:	ret    
6402558b:	int3   
6402558c:	int3   
6402558d:	int3   
6402558e:	int3   
6402558f:	int3   
64025590:	call   0x6400f6c0
64025595:	mov    ds:0x640332c8,eax
6402559a:	ret    
6402559b:	int3   
6402559c:	int3   
6402559d:	int3   
6402559e:	int3   
6402559f:	int3   
640255a0:	call   0x6400f7a0
640255a5:	mov    ds:0x6403331c,eax
640255aa:	ret    
640255ab:	int3   
640255ac:	int3   
640255ad:	int3   
640255ae:	int3   
640255af:	int3   
640255b0:	call   0x6400f880
640255b5:	mov    ds:0x64033328,eax
640255ba:	ret    
640255bb:	int3   
640255bc:	int3   
640255bd:	int3   
640255be:	int3   
640255bf:	int3   
640255c0:	call   0x6400f960
640255c5:	mov    ds:0x640332a8,eax
640255ca:	ret    
640255cb:	int3   
640255cc:	int3   
640255cd:	int3   
640255ce:	int3   
640255cf:	int3   
640255d0:	call   0x6400fa40
640255d5:	mov    ds:0x640332b0,eax
640255da:	ret    
640255db:	int3   
640255dc:	int3   
640255dd:	int3   
640255de:	int3   
640255df:	int3   
640255e0:	call   0x6400fb20
640255e5:	mov    ds:0x64033308,eax
640255ea:	ret    
640255eb:	int3   
640255ec:	int3   
640255ed:	int3   
640255ee:	int3   
640255ef:	int3   
640255f0:	call   0x6400fc00
640255f5:	mov    ds:0x64033320,eax
640255fa:	ret    
640255fb:	int3   
640255fc:	int3   
640255fd:	int3   
640255fe:	int3   
640255ff:	int3   
64025600:	call   0x6400fce0
64025605:	mov    ds:0x640332cc,eax
6402560a:	ret    
6402560b:	int3   
6402560c:	int3   
6402560d:	int3   
6402560e:	int3   
6402560f:	int3   
64025610:	call   0x6400fdc0
64025615:	mov    ds:0x64033304,eax
6402561a:	ret    
6402561b:	int3   
6402561c:	int3   
6402561d:	int3   
6402561e:	int3   
6402561f:	int3   
64025620:	call   0x6400fea0
64025625:	mov    ds:0x640332f8,eax
6402562a:	ret    
6402562b:	int3   
6402562c:	int3   
6402562d:	int3   
6402562e:	int3   
6402562f:	int3   
64025630:	call   0x6400ff80
64025635:	mov    ds:0x6403330c,eax
6402563a:	ret    
6402563b:	mov    ecx,0x640304cc
64025640:	call   0x640133bd
64025645:	push   0x640257c1
6402564a:	call   0x6401409f
6402564f:	pop    ecx
64025650:	ret    
64025651:	mov    ecx,0x64030508
64025656:	call   0x64013397
6402565b:	push   0x640257cb
64025660:	call   0x6401409f
64025665:	pop    ecx
64025666:	ret    
64025667:	call   DWORD PTR ds:0x64026104
6402566d:	push   0x640257d5
64025672:	mov    DWORD PTR ds:0x64030534,0x64026c10
6402567c:	mov    ds:0x64030538,eax
64025681:	mov    BYTE PTR ds:0x6403053c,0x0
64025688:	call   0x6401409f
6402568d:	pop    ecx
6402568e:	ret    
6402568f:	push   0x64030534
64025694:	mov    ecx,0x64030540
64025699:	call   0x64013530
6402569e:	push   0x640257df
640256a3:	call   0x6401409f
640256a8:	pop    ecx
640256a9:	ret    
640256aa:	int3   
640256ab:	int3   
640256ac:	int3   
640256ad:	int3   
640256ae:	int3   
640256af:	int3   
640256b0:	push   0x64025800
640256b5:	call   0x6401409f
640256ba:	pop    ecx
640256bb:	ret    
640256bc:	int3   
640256bd:	int3   
640256be:	int3   
640256bf:	int3   
640256c0:	push   ecx
640256c1:	mov    eax,0x640334b4
640256c6:	call   0x640078d0
640256cb:	pop    ecx
640256cc:	ret    
640256cd:	int3   
640256ce:	int3   
640256cf:	int3   
640256d0:	mov    eax,0x640334d4
640256d5:	jmp    0x640078d0
640256da:	int3   
640256db:	int3   
640256dc:	int3   
640256dd:	int3   
640256de:	int3   
640256df:	int3   
640256e0:	mov    eax,0x640334c4
640256e5:	jmp    0x640078d0
640256ea:	int3   
640256eb:	int3   
640256ec:	int3   
640256ed:	int3   
640256ee:	int3   
640256ef:	int3   
640256f0:	push   ebp
640256f1:	mov    ebp,esp
640256f3:	and    esp,0xfffffff8
640256f6:	mov    eax,ds:0x64033340
640256fb:	mov    edx,DWORD PTR [eax]
640256fd:	sub    esp,0xc
64025700:	push   esi
64025701:	push   eax
64025702:	mov    ecx,0x6403333c
64025707:	push   ecx
64025708:	push   edx
64025709:	mov    esi,ecx
6402570b:	push   esi
6402570c:	lea    eax,[esp+0x18]
64025710:	push   eax
64025711:	call   0x64009150
64025716:	mov    ecx,DWORD PTR ds:0x64033340
6402571c:	push   ecx
6402571d:	call   0x64013712
64025722:	add    esp,0x4
64025725:	xor    eax,eax
64025727:	mov    ds:0x64033340,eax
6402572c:	mov    ds:0x64033344,eax
64025731:	pop    esi
64025732:	mov    esp,ebp
64025734:	pop    ebp
64025735:	ret    
64025736:	int3   
64025737:	int3   
64025738:	int3   
64025739:	int3   
6402573a:	int3   
6402573b:	int3   
6402573c:	int3   
6402573d:	int3   
6402573e:	int3   
6402573f:	int3   
64025740:	push   ebp
64025741:	mov    ebp,esp
64025743:	and    esp,0xfffffff8
64025746:	mov    eax,ds:0x64033334
6402574b:	mov    edx,DWORD PTR [eax]
6402574d:	sub    esp,0xc
64025750:	push   esi
64025751:	push   eax
64025752:	mov    ecx,0x64033330
64025757:	push   ecx
64025758:	push   edx
64025759:	mov    esi,ecx
6402575b:	push   esi
6402575c:	lea    eax,[esp+0x18]
64025760:	push   eax
64025761:	call   0x64008ef0
64025766:	mov    ecx,DWORD PTR ds:0x64033334
6402576c:	push   ecx
6402576d:	call   0x64013712
64025772:	add    esp,0x4
64025775:	xor    eax,eax
64025777:	mov    ds:0x64033334,eax
6402577c:	mov    ds:0x64033338,eax
64025781:	pop    esi
64025782:	mov    esp,ebp
64025784:	pop    ebp
64025785:	ret    
64025786:	int3   
64025787:	int3   
64025788:	int3   
64025789:	int3   
6402578a:	int3   
6402578b:	int3   
6402578c:	int3   
6402578d:	int3   
6402578e:	int3   
6402578f:	int3   
64025790:	mov    eax,ds:0x640304bc
64025795:	test   eax,eax
64025797:	je     0x640257a2
64025799:	push   eax
6402579a:	call   0x64013712
6402579f:	add    esp,0x4
640257a2:	mov    DWORD PTR ds:0x640304bc,0x0
640257ac:	mov    DWORD PTR ds:0x640304c0,0x0
640257b6:	mov    DWORD PTR ds:0x640304c4,0x0
640257c0:	ret    
640257c1:	mov    ecx,0x640304cc
640257c6:	jmp    0x6401332b
640257cb:	mov    ecx,0x64030508
640257d0:	jmp    0x6401346c
640257d5:	mov    ecx,0x64030534
640257da:	jmp    0x64013484
640257df:	mov    DWORD PTR ds:0x64030540,0x64026c24
640257e9:	ret    
640257ea:	mov    DWORD PTR ds:0x64030560,0x64026304
640257f4:	mov    ecx,0x64030560
640257f9:	jmp    0x6401382b
640257fe:	int3   
640257ff:	int3   
64025800:	push   0x64030038
64025805:	call   DWORD PTR ds:0x64026190
6402580b:	ret    
