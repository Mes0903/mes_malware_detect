
c20e9208750f47a286b121d44d9d2bcde6f6386913df5eb79aa20bb2ea80dda3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x4182fc
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x418300,0x401660
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x418300,0x416ecc
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x401258
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x39
  4011cf:	mov    DWORD PTR ds:0x418304,edx
  4011d5:	mov    eax,DWORD PTR [ebp+0x8]
  4011d8:	add    eax,DWORD PTR [ebp-0x10]
  4011db:	mov    ecx,DWORD PTR [eax]
  4011dd:	add    ecx,DWORD PTR [ebp-0x10]
  4011e0:	mov    edx,DWORD PTR [ebp+0x8]
  4011e3:	add    edx,DWORD PTR [ebp-0x10]
  4011e6:	mov    DWORD PTR [edx],ecx
  4011e8:	mov    eax,DWORD PTR [ebp-0xc]
  4011eb:	mov    DWORD PTR [ebp-0x14],eax
  4011ee:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f5:	mov    ecx,DWORD PTR ds:0x418304
  4011fb:	mov    DWORD PTR [ebp-0x20],ecx
  4011fe:	mov    edx,DWORD PTR [ebp-0x20]
  401201:	mov    DWORD PTR [ebp-0x1c],edx
  401204:	mov    eax,DWORD PTR [ebp-0x1c]
  401207:	mov    DWORD PTR [ebp-0x18],eax
  40120a:	cmp    DWORD PTR [ebp-0x10],0x0
  40120e:	jne    0x401240
  401210:	push   0x0
  401212:	push   0x80
  401217:	push   0x3
  401219:	push   0x0
  40121b:	push   0x3
  40121d:	push   0x1
  40121f:	push   0x418308
  401224:	call   DWORD PTR ds:0x418214
  40122a:	mov    DWORD PTR [ebp-0x4],eax
  40122d:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401231:	je     0x401239
  401233:	cmp    DWORD PTR [ebp-0x4],0x0
  401237:	jne    0x401240
  401239:	mov    eax,0x42
  40123e:	jmp    0x401258
  401240:	mov    ecx,DWORD PTR [ebp+0x8]
  401243:	add    ecx,DWORD PTR [ebp-0x10]
  401246:	mov    edx,DWORD PTR [ecx]
  401248:	xor    edx,DWORD PTR [ebp-0x18]
  40124b:	mov    eax,DWORD PTR [ebp+0x8]
  40124e:	add    eax,DWORD PTR [ebp-0x10]
  401251:	mov    DWORD PTR [eax],edx
  401253:	jmp    0x4011a6
  401258:	mov    esp,ebp
  40125a:	pop    ebp
  40125b:	ret    
  40125c:	int3   
  40125d:	int3   
  40125e:	int3   
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x2b8
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x41840c,ebp
  401280:	mov    DWORD PTR [ebp-0x294],0x0
  40128a:	push   0x0
  40128c:	call   DWORD PTR ds:0x41822c
  401292:	mov    DWORD PTR [ebp-0x22c],eax
  401298:	cmp    DWORD PTR [ebp-0x22c],0x0
  40129f:	jne    0x4012a8
  4012a1:	xor    eax,eax
  4012a3:	jmp    0x401657
  4012a8:	mov    eax,ds:0x41823c
  4012ad:	mov    DWORD PTR [ebp-0x27c],eax
  4012b3:	lea    ecx,[ebp-0x258]
  4012b9:	push   ecx
  4012ba:	push   0x20019
  4012bf:	push   0x0
  4012c1:	push   0x418088
  4012c6:	push   0x80000002
  4012cb:	call   DWORD PTR [ebp-0x27c]
  4012d1:	test   eax,eax
  4012d3:	je     0x4012e9
  4012d5:	push   0x104
  4012da:	push   0x5
  4012dc:	call   DWORD PTR ds:0x418218
  4012e2:	xor    eax,eax
  4012e4:	jmp    0x401657
  4012e9:	lea    edx,[ebp-0x258]
  4012ef:	push   edx
  4012f0:	push   0x20019
  4012f5:	push   0x0
  4012f7:	push   0x418074
  4012fc:	mov    eax,DWORD PTR [ebp-0x258]
  401302:	push   eax
  401303:	call   DWORD PTR [ebp-0x27c]
  401309:	test   eax,eax
  40130b:	jne    0x401314
  40130d:	xor    eax,eax
  40130f:	jmp    0x401657
  401314:	mov    DWORD PTR [ebp-0x214],0x0
  40131e:	mov    DWORD PTR [ebp-0x288],0x64
  401328:	mov    DWORD PTR [ebp-0x21c],0x1
  401332:	mov    DWORD PTR [ebp-0x294],0x0
  40133c:	mov    DWORD PTR [ebp-0x254],0x0
  401346:	mov    DWORD PTR [ebp-0x284],0x1
  401350:	mov    DWORD PTR [ebp-0x218],0x3
  40135a:	push   0x104
  40135f:	push   0x418308
  401364:	call   DWORD PTR ds:0x418218
  40136a:	push   0x418138
  40136f:	push   0x418308
  401374:	call   DWORD PTR ds:0x41821c
  40137a:	push   0x418150
  40137f:	push   0x418160
  401384:	call   DWORD PTR ds:0x418220
  40138a:	push   eax
  40138b:	call   DWORD PTR ds:0x418224
  401391:	mov    ds:0x4182fc,eax
  401396:	call   0x401080
  40139b:	mov    ecx,DWORD PTR ds:0x418300
  4013a1:	push   ecx
  4013a2:	call   0x4010a0
  4013a7:	add    esp,0x4
  4013aa:	mov    DWORD PTR [ebp-0x298],eax
  4013b0:	mov    edx,DWORD PTR [ebp-0x298]
  4013b6:	push   edx
  4013b7:	call   0x401010
  4013bc:	add    esp,0x4
  4013bf:	mov    DWORD PTR [ebp-0x290],eax
  4013c5:	mov    eax,DWORD PTR [ebp-0x298]
  4013cb:	push   eax
  4013cc:	push   0x0
  4013ce:	mov    ecx,DWORD PTR [ebp-0x290]
  4013d4:	push   ecx
  4013d5:	call   0x401040
  4013da:	add    esp,0xc
  4013dd:	mov    edx,DWORD PTR [ebp-0x298]
  4013e3:	mov    DWORD PTR [ebp-0x2a0],edx
  4013e9:	mov    eax,DWORD PTR [ebp-0x294]
  4013ef:	cmp    eax,DWORD PTR [ebp-0x298]
  4013f5:	jae    0x401481
  4013fb:	mov    ecx,DWORD PTR [ebp-0x2a0]
  401401:	push   ecx
  401402:	mov    edx,DWORD PTR [ebp-0x288]
  401408:	push   edx
  401409:	call   0x401050
  40140e:	add    esp,0x8
  401411:	mov    DWORD PTR [ebp-0x2a4],eax
  401417:	mov    eax,DWORD PTR [ebp-0x2a4]
  40141d:	push   eax
  40141e:	mov    ecx,DWORD PTR ds:0x418300
  401424:	add    ecx,DWORD PTR [ebp-0x254]
  40142a:	push   ecx
  40142b:	mov    edx,DWORD PTR [ebp-0x290]
  401431:	add    edx,DWORD PTR [ebp-0x294]
  401437:	push   edx
  401438:	call   0x4170f6
  40143d:	add    esp,0xc
  401440:	mov    eax,DWORD PTR [ebp-0x21c]
  401446:	add    eax,DWORD PTR [ebp-0x288]
  40144c:	add    eax,DWORD PTR [ebp-0x254]
  401452:	mov    DWORD PTR [ebp-0x254],eax
  401458:	mov    ecx,DWORD PTR [ebp-0x294]
  40145e:	add    ecx,DWORD PTR [ebp-0x288]
  401464:	mov    DWORD PTR [ebp-0x294],ecx
  40146a:	mov    edx,DWORD PTR [ebp-0x2a0]
  401470:	sub    edx,DWORD PTR [ebp-0x2a4]
  401476:	mov    DWORD PTR [ebp-0x2a0],edx
  40147c:	jmp    0x4013e9
  401481:	mov    eax,DWORD PTR [ebp-0x298]
  401487:	push   eax
  401488:	mov    ecx,DWORD PTR [ebp-0x290]
  40148e:	push   ecx
  40148f:	call   0x401190
  401494:	add    esp,0x8
  401497:	mov    DWORD PTR [ebp-0x254],0x0
  4014a1:	mov    DWORD PTR [ebp-0x2a8],0x0
  4014ab:	call   0x401090
  4014b0:	mov    edx,DWORD PTR ds:0x418300
  4014b6:	push   edx
  4014b7:	call   0x4010a0
  4014bc:	add    esp,0x4
  4014bf:	mov    DWORD PTR [ebp-0x2ac],eax
  4014c5:	mov    eax,DWORD PTR [ebp-0x2ac]
  4014cb:	push   eax
  4014cc:	call   0x401010
  4014d1:	add    esp,0x4
  4014d4:	mov    DWORD PTR [ebp-0x250],eax
  4014da:	mov    ecx,DWORD PTR [ebp-0x2ac]
  4014e0:	push   ecx
  4014e1:	push   0x0
  4014e3:	mov    edx,DWORD PTR [ebp-0x250]
  4014e9:	push   edx
  4014ea:	call   0x401040
  4014ef:	add    esp,0xc
  4014f2:	mov    eax,DWORD PTR [ebp-0x2ac]
  4014f8:	mov    DWORD PTR [ebp-0x2b4],eax
  4014fe:	mov    ecx,DWORD PTR [ebp-0x2a8]
  401504:	cmp    ecx,DWORD PTR [ebp-0x2ac]
  40150a:	jae    0x401596
  401510:	mov    edx,DWORD PTR [ebp-0x2b4]
  401516:	push   edx
  401517:	mov    eax,DWORD PTR [ebp-0x288]
  40151d:	push   eax
  40151e:	call   0x401050
  401523:	add    esp,0x8
  401526:	mov    DWORD PTR [ebp-0x2b8],eax
  40152c:	mov    ecx,DWORD PTR [ebp-0x2b8]
  401532:	push   ecx
  401533:	mov    edx,DWORD PTR ds:0x418300
  401539:	add    edx,DWORD PTR [ebp-0x254]
  40153f:	push   edx
  401540:	mov    eax,DWORD PTR [ebp-0x250]
  401546:	add    eax,DWORD PTR [ebp-0x2a8]
  40154c:	push   eax
  40154d:	call   0x4170f6
  401552:	add    esp,0xc
  401555:	mov    ecx,DWORD PTR [ebp-0x21c]
  40155b:	add    ecx,DWORD PTR [ebp-0x288]
  401561:	add    ecx,DWORD PTR [ebp-0x254]
  401567:	mov    DWORD PTR [ebp-0x254],ecx
  40156d:	mov    edx,DWORD PTR [ebp-0x2a8]
  401573:	add    edx,DWORD PTR [ebp-0x288]
  401579:	mov    DWORD PTR [ebp-0x2a8],edx
  40157f:	mov    eax,DWORD PTR [ebp-0x2b4]
  401585:	sub    eax,DWORD PTR [ebp-0x2b8]
  40158b:	mov    DWORD PTR [ebp-0x2b4],eax
  401591:	jmp    0x4014fe
  401596:	mov    ecx,DWORD PTR [ebp-0x2ac]
  40159c:	push   ecx
  40159d:	mov    edx,DWORD PTR [ebp-0x250]
  4015a3:	push   edx
  4015a4:	call   0x401190
  4015a9:	add    esp,0x8
  4015ac:	mov    eax,DWORD PTR [ebp-0x290]
  4015b2:	mov    ecx,DWORD PTR [ebp-0x250]
  4015b8:	mov    DWORD PTR [eax],ecx
  4015ba:	push   0x17000
  4015bf:	call   0x401010
  4015c4:	add    esp,0x4
  4015c7:	mov    DWORD PTR [ebp-0x4],eax
  4015ca:	lea    edx,[ebp-0x258]
  4015d0:	push   edx
  4015d1:	push   0x20019
  4015d6:	push   0x0
  4015d8:	push   0x41816c
  4015dd:	push   0x80000002
  4015e2:	call   DWORD PTR ds:0x41823c
  4015e8:	test   eax,eax
  4015ea:	je     0x4015f0
  4015ec:	xor    eax,eax
  4015ee:	jmp    0x401657
  4015f0:	push   0x15500
  4015f5:	mov    eax,DWORD PTR [ebp-0x290]
  4015fb:	push   eax
  4015fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4015ff:	add    ecx,0x200
  401605:	push   ecx
  401606:	call   0x4170f6
  40160b:	add    esp,0xc
  40160e:	mov    edx,DWORD PTR [ebp-0x4]
  401611:	sub    edx,0x400000
  401617:	push   edx
  401618:	mov    eax,DWORD PTR [ebp-0x4]
  40161b:	push   eax
  40161c:	mov    ecx,DWORD PTR [ebp-0x250]
  401622:	push   ecx
  401623:	call   0x401130
  401628:	add    esp,0xc
  40162b:	mov    esp,DWORD PTR ds:0x41840c
  401631:	pop    ecx
  401632:	mov    ecx,DWORD PTR [ebp-0x4]
  401635:	add    ecx,0x15350
  40163b:	mov    edx,ecx
  40163d:	call   0x401642
  401642:	pop    eax
  401643:	call   0x401648
  401648:	pop    eax
  401649:	call   0x40164e
  40164e:	pop    eax
  40164f:	call   0x401654
  401654:	pop    eax
  401655:	jmp    edx
  401657:	mov    esp,ebp
  401659:	pop    ebp
  40165a:	ret    
  40165b:	int3   
  40165c:	add    BYTE PTR [ebp+0x1],dl
  40165f:	add    BYTE PTR [ecx],bh
  401661:	push   edi
  401662:	inc    ecx
  401663:	add    BYTE PTR [esi+0x65],dh
  401666:	je     0x4016b8
  401668:	sub    ebp,DWORD PTR [edi+0x63]
  40166b:	inc    ecx
  40166c:	adc    eax,0x2a657264
  401671:	jae    0x401673
  401673:	add    ch,ch
  401675:	outs   dx,BYTE PTR ds:[esi]
  401676:	popa   
  401677:	fs add eax,0x18726269
  40167d:	jb     0x4016f8
  40167f:	inc    ebp
  401680:	add    DWORD PTR [ecx+0x0],eax
  401683:	add    ch,ch
  401685:	outs   dx,BYTE PTR ds:[esi]
  401686:	popa   
  401687:	fs add eax,0xd8726269
  40168d:	jno    0x401708
  40168f:	inc    ebp
  401690:	loope  0x4016e8
  401692:	add    BYTE PTR [eax],al
  401694:	mul    BYTE PTR [esp+esi*2+0x4d]
  401698:	out    0x63,al
  40169a:	jne    0x401708
  40169c:	aam    0x47
  40169e:	popa   
  40169f:	outs   dx,BYTE PTR ds:[esi]
  4016a0:	(bad)  [ebx+0x65]
  4016a3:	inc    ecx
  4016a4:	cmp    DWORD PTR [eax],eax
  4016a6:	add    BYTE PTR [eax],al
  4016a8:	jp     0x40171c
  4016aa:	gs popa 
  4016ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ad:	gs inc esi
  4016af:	imul   edx,DWORD PTR [ebp-0x72ffbe9b],0x9a727473
  4016b9:	popa   
  4016ba:	je     0x4016fd
  4016bc:	cmp    DWORD PTR [eax],eax
  4016be:	add    BYTE PTR [eax],al
  4016c0:	jle    0x401727
  4016c2:	je     0x40171b
  4016c4:	add    BYTE PTR [eax+0x6e6f646e],dl
  4016ca:	jae    0x401710
  4016cc:	imul   ebp,DWORD PTR [ebx+0x65],0x72567463
  4016d3:	jns    0x401716
  4016d5:	cmp    DWORD PTR [eax],eax
  4016d7:	add    BYTE PTR [eax],al
  4016d9:	jle    0x401740
  4016db:	je     0x40172a
  4016dd:	pop    esi
  4016de:	fs jne 0x40174d
  4016e1:	pop    esp
  4016e2:	dec    eax
  4016e3:	popa   
  4016e4:	outs   dx,BYTE PTR ds:[esi]
  4016e5:	push   ebp
  4016e6:	ins    BYTE PTR es:[edi],dx
  4016e7:	gs push edi
  4016e9:	cmp    DWORD PTR [eax],eax
  4016eb:	add    BYTE PTR [eax],al
  4016ed:	xor    eax,0x4d004002
  4016f2:	add    al,BYTE PTR [eax+0x0]
  4016f5:	push   ebp
  4016f6:	add    al,BYTE PTR [eax+0x0]
  4016f9:	dec    ebp
  4016fa:	add    al,BYTE PTR [eax+0x0]
  4016fd:	add    DWORD PTR [edx],eax
  4016ff:	inc    eax
  401700:	add    ch,ch
  401702:	add    DWORD PTR [eax+0x0],eax
  401705:	sbb    DWORD PTR [edx],eax
  401707:	inc    eax
  401708:	add    cl,dh
  40170a:	add    DWORD PTR [eax+0x0],eax
  40170d:	mul    BYTE PTR [esp+esi*2+0x50]
  401711:	jmp    0x401781
  401713:	arpl   WORD PTR [ecx-0x2b],ax
  401716:	arpl   WORD PTR [edx+0x65],si
  401719:	retf   0x72
  40171c:	add    ch,bh
  40171e:	outs   dx,BYTE PTR ds:[esi]
  40171f:	popa   
  401720:	fs cmc 
  401722:	push   0x71d87262
  401727:	jns    0x40176e
  401729:	add    BYTE PTR [ecx-0x5dffffc1],dh
  40172f:	arpl   WORD PTR [edx+0x6e],si
  401732:	pushf  
  401733:	ins    BYTE PTR es:[edi],dx
  401734:	xor    esi,DWORD PTR [edx]
  401736:	dec    edi
  401737:	fs ins BYTE PTR es:[edi],dx
  401739:	ins    BYTE PTR es:[edi],dx
  40173a:	cmp    DWORD PTR [eax],eax
  40173c:	add    BYTE PTR [eax],al
  40173e:	pushf  
  40173f:	jno    0x4017b7
  401741:	arpl   WORD PTR [ebx-0x729bd18c],cx
  401747:	ins    BYTE PTR es:[edi],dx
  401748:	add    BYTE PTR [eax],al
  40174a:	arpl   WORD PTR fs:[ebp+0x73],bp
  40174e:	push   esp
  40174f:	je     0x401751
  401751:	add    BYTE PTR [ecx+esi*2+0x76],dl
  401755:	arpl   WORD PTR [ebx+0x74],bp
  401758:	cs fs gs ins BYTE PTR es:[edi],dx
  40175c:	add    BYTE PTR [eax],al
  40175e:	pop    esp
  40175f:	arpl   WORD PTR [ebp+0x63],bp
  401762:	dec    ecx
  401763:	ja     0x401765
  401765:	add    BYTE PTR [edi+0x67],ah
  401768:	jb     0x4017de
  40176a:	sub    al,0x5f
  40176c:	ins    BYTE PTR es:[edi],dx
  40176d:	inc    ecx
  40176e:	sbb    eax,0x39636f6c
  401773:	add    BYTE PTR [eax],al
  401775:	add    BYTE PTR [edi],al
  401777:	addr16 jb 0x4017ee
  40177a:	or     al,0x5f
  40177c:	ins    BYTE PTR es:[edi],dx
  40177d:	inc    ecx
  40177e:	sbb    eax,0x39636f6c
  401783:	add    BYTE PTR [eax],al
  401785:	add    ah,ah
  401787:	ins    DWORD PTR es:[edi],dx
  401788:	ins    DWORD PTR es:[edi],dx
  401789:	popa   
  40178a:	jmp    0xa580e4
  40178f:	out    0x4c,al
  401791:	inc    si
  401793:	shr    BYTE PTR [ebx+0x65],1
  401796:	add    BYTE PTR [edi],al
  401798:	addr16 jb 0x40180f
  40179b:	int3   
  40179c:	pop    esi
  40179d:	ins    BYTE PTR es:[edi],dx
  40179e:	push   eax
  40179f:	retf   
  4017a0:	ins    BYTE PTR es:[edi],dx
  4017a1:	je     0x401808
  4017a3:	fidiv  DWORD PTR [ebx+0x0]
  4017a6:	add    cl,dh
  4017a8:	bound  esp,QWORD PTR [ecx+0x70]
  4017ab:	js     0x401819
  4017ad:	ins    BYTE PTR es:[edi],dx
  4017ae:	outs   dx,DWORD PTR ds:[esi]
  4017af:	call   0x7263:0x92000000
  4017b6:	outs   dx,BYTE PTR ds:[esi]
  4017b7:	xchg   esp,eax
  4017b8:	ins    BYTE PTR es:[edi],dx
  4017b9:	xor    esi,DWORD PTR [edx]
  4017bb:	fs ins BYTE PTR es:[di],dx
  4017be:	ins    BYTE PTR es:[edi],dx
  4017bf:	cmp    DWORD PTR [eax],eax
  4017c1:	add    BYTE PTR [eax],al
  4017c3:	jle    0x401828
  4017c5:	je     0x401817
  4017c7:	mov    ebp,DWORD PTR [ebp+0x63]
  4017ca:	gs push 0x71
  4017cd:	dec    eax
  4017ce:	gs pop eax
  4017d0:	jo     0x4017d2
  4017d2:	add    BYTE PTR [ecx],bh
  4017d4:	add    BYTE PTR [ecx+eax*1+0x39],al
  4017d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d9:	pop    ecx
  4017da:	nop
  4017db:	cmp    edx,ebp
  4017dd:	add    eax,DWORD PTR [eax]
  4017df:	cmp    ebx,ebp
  4017e1:	add    eax,DWORD PTR [eax]
  4017e3:	cmp    esi,edi
  4017e5:	sti    
  4017e6:	add    BYTE PTR [ecx],bh
  4017e8:	das    
  4017e9:	add    eax,DWORD PTR [eax]
  4017eb:	cmp    edi,esp
  4017ed:	add    eax,DWORD PTR [eax]
  4017ef:	cmp    DWORD PTR [edi],esp
  4017f1:	add    al,0x0
  4017f3:	add    BYTE PTR [ecx],bh
  4017f5:	out    0x3,eax
  4017f7:	add    BYTE PTR [ecx],bh
  4017f9:	out    0x3,eax
  4017fb:	add    BYTE PTR [ecx],bh
  4017fd:	out    0x3,eax
  4017ff:	add    BYTE PTR [ecx],bh
  401801:	out    0x3,eax
  401803:	add    BYTE PTR [ecx],bh
  401805:	out    0x3,eax
  401807:	add    BYTE PTR [ecx],bh
  401809:	out    0x3,eax
  40180b:	add    BYTE PTR [ecx],bh
  40180d:	out    0x3,eax
  40180f:	add    BYTE PTR [ecx],bh
  401811:	out    0x3,eax
  401813:	add    BYTE PTR [ecx],bh
  401815:	addr16 add al,0x0
  401818:	cmp    ebp,esp
  40181a:	sbb    bh,BYTE PTR [edx+0x9afe747]
  401820:	jl     0x4017e9
  401822:	mov    ebx,0x25abf501
  401827:	push   esp
  401828:	sar    edi,1
  40182a:	jbe    0x40184c
  40182c:	test   eax,0xab676af7
  401831:	enter  0x2068,0x9a
  401835:	enter  0x6e69,0x8e
  401839:	frstor [ebx]
  40183b:	bound  ebx,QWORD PTR [ecx+ecx*1+0x99f7576]
  401842:	ins    DWORD PTR es:[edi],dx
  401843:	outs   dx,BYTE PTR ds:[esi]
  401844:	pop    ecx
  401845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401846:	dec    edx
  401847:	push   ebx
  401848:	pop    ecx
  401849:	les    ebp,FWORD PTR [edx+0x64]
  40184c:	pop    esp
  40184d:	sti    
  40184e:	or     BYTE PTR ds:0x3cd0043,cl
  401854:	cmp    DWORD PTR [eax],eax
  401856:	jmp    0x79185e
  40185b:	mov    ecx,0x9d003940
  401860:	add    al,0x3a
  401862:	add    BYTE PTR [esi-0x80],dl
  401865:	inc    esp
  401866:	dec    ebx
  401867:	jmp    0xe940516f
  40186c:	add    edi,DWORD PTR [ecx]
  40186e:	add    BYTE PTR [ecx],cl
  401870:	add    al,0x3e
  401872:	add    edx,esi
  401874:	add    al,0x3b
  401876:	cs jmp 0xe9405275
  40187c:	dec    ebp
  40187d:	cmp    DWORD PTR [eax],eax
  40187f:	jmp    0x55405187
  401884:	in     eax,dx
  401885:	cmp    DWORD PTR [eax],eax
  401887:	jmp    0xe940519f
  40188c:	adc    edi,DWORD PTR [eax]
  40188e:	add    cl,ch
  401890:	add    edi,ecx
  401892:	(bad)  
  401893:	call   0xe94051ab
  401898:	add    eax,0x3ed0039
  40189d:	cmp    DWORD PTR [eax],eax
  40189f:	jmp    0xed4051a7
  4018a4:	add    edi,DWORD PTR [ecx]
  4018a6:	add    cl,ch
  4018a8:	add    edi,DWORD PTR [ecx]
  4018aa:	add    cl,ch
  4018ac:	jae    0x4018e6
  4018ae:	add    cl,ch
  4018b0:	add    eax,0xc9ec0039
  4018b5:	cmp    BYTE PTR [eax],al
  4018b7:	jmp    0x4018bc
  4018b9:	cmp    DWORD PTR [eax],eax
  4018bb:	jmp    0x6918c3
  4018c0:	jmp    0xe94051d8
  4018c5:	add    ebp,DWORD PTR [ecx]
  4018c7:	add    cl,ch
  4018c9:	adc    edi,DWORD PTR [ecx]
  4018cb:	add    BYTE PTR [eax],al
  4018cd:	jmp    0xd940190c
  4018d2:	cmp    al,BYTE PTR [eax]
  4018d4:	add    cl,ch
  4018d6:	cmp    al,BYTE PTR [eax]
  4018d8:	add    cl,ch
  4018da:	cmp    al,BYTE PTR [eax]
  4018dc:	add    cl,al
  4018de:	imul   eax,DWORD PTR [ecx],0x0
  4018e1:	and    DWORD PTR [edx],edi
  4018e3:	add    BYTE PTR [eax],al
  4018e5:	jmp    0xe9401924
  4018ea:	cmp    al,BYTE PTR [eax]
  4018ec:	add    cl,ch
  4018ee:	cmp    al,BYTE PTR [eax]
  4018f0:	add    cl,ch
  4018f2:	cmp    al,BYTE PTR [eax]
  4018f4:	add    cl,ch
  4018f6:	cmp    al,BYTE PTR [eax]
  4018f8:	add    cl,ch
  4018fa:	cmp    al,BYTE PTR [eax]
  4018fc:	add    cl,ch
  4018fe:	cmp    al,BYTE PTR [eax]
  401900:	add    cl,ch
  401902:	cmp    al,BYTE PTR [eax]
  401904:	add    cl,ch
  401906:	cmp    al,BYTE PTR [eax]
  401908:	add    cl,ch
  40190a:	cmp    al,BYTE PTR [eax]
  40190c:	add    cl,ch
  40190e:	cmp    al,BYTE PTR [eax]
  401910:	add    cl,ch
  401912:	cmp    al,BYTE PTR [eax]
  401914:	add    cl,ch
  401916:	cmp    al,BYTE PTR [eax]
  401918:	add    cl,ch
  40191a:	cmp    al,BYTE PTR [eax]
  40191c:	add    cl,ch
  40191e:	cmp    al,BYTE PTR [eax]
  401920:	add    cl,ch
  401922:	add    BYTE PTR [edx],bh
  401924:	add    BYTE PTR [eax],al
  401926:	jmp    0xe9401965
  40192b:	cmp    al,BYTE PTR [eax]
  40192d:	add    cl,ch
  40192f:	cmp    al,BYTE PTR [eax]
  401931:	add    cl,ch
  401933:	cmp    al,BYTE PTR [eax]
  401935:	add    ch,ah
  401937:	cmp    edi,0xffffffff
  40193a:	ins    BYTE PTR es:[edi],dx
  40193b:	cmp    al,BYTE PTR [eax]
  40193d:	add    cl,ch
  40193f:	cmp    al,BYTE PTR [eax]
  401941:	add    cl,ch
  401943:	cmp    al,BYTE PTR [eax]
  401945:	add    BYTE PTR [eax],al
  401947:	adc    dh,bh
  401949:	(bad)  
  40194a:	call   DWORD PTR [eax]
  40194c:	(bad)  
  40194d:	(bad)  
  40194e:	jmp    eax
  401950:	std    
  401951:	(bad)  
  401952:	jmp    eax
  401954:	std    
  401955:	(bad)  
  401956:	dec    DWORD PTR [esi]
  401958:	push   0x65
  40195a:	js     0x401920
  40195c:	std    
  40195d:	(bad)  
  40195e:	call   FWORD PTR [ebx-0xf]
  401961:	add    BYTE PTR [eax],al
  401963:	loopne 0x401972
  401965:	add    BYTE PTR [eax],al
  401967:	shl    bh,1
  401969:	add    BYTE PTR [eax],al
  40196b:	rol    BYTE PTR [ebx],1
  40196d:	add    BYTE PTR [eax],al
  40196f:	mov    al,ds:0xa0fffffd
  401974:	std    
  401975:	(bad)  
  401976:	call   DWORD PTR [eax+0x30fffffd]
  40197c:	add    al,0x0
  40197e:	pusha  
  40197f:	ds jb  0x4019e6
  401982:	popa   
  401983:	in     al,0x5c
  401985:	add    BYTE PTR [eax],al
  401987:	add    BYTE PTR [eax-0x6f000002],dl
  40198d:	or     eax,0x3600001
  401992:	add    BYTE PTR [eax],al
  401994:	pusha  
  401995:	std    
  401996:	add    BYTE PTR [eax],al
  401998:	push   eax
  401999:	std    
  40199a:	(bad)  
  40199b:	call   DWORD PTR [eax-0x3]
  40199e:	(bad)  
  40199f:	jmp    DWORD PTR [eax-0x3]
  4019a2:	(bad)  
  4019a3:	jmp    DWORD PTR [eax]
  4019a5:	add    al,0x0
  4019a7:	inc    eax
  4019a8:	outs   dx,BYTE PTR ds:[esi]
  4019a9:	pop    ecx
  4019aa:	popa   
  4019ab:	je     0x4019de
  4019ad:	add    al,0x0
  4019af:	add    al,bl
  4019b1:	add    BYTE PTR ds:[eax],al
  4019b4:	and    BYTE PTR ds:0x43100001,bl
  4019ba:	add    BYTE PTR [eax],al
  4019bc:	adc    BYTE PTR [ebx],al
  4019be:	add    DWORD PTR [eax],eax
  4019c0:	cmp    edi,esp
  4019c2:	add    eax,DWORD PTR [eax]
  4019c4:	cmp    edi,esp
  4019c6:	add    eax,DWORD PTR [eax]
  4019c8:	cmp    edi,esp
  4019ca:	add    eax,DWORD PTR [eax]
  4019cc:	cmp    DWORD PTR [edi-0x1906fffd],esp
  4019d2:	add    eax,DWORD PTR [eax]
  4019d4:	cmp    edi,esp
  4019d6:	add    eax,DWORD PTR [eax]
  4019d8:	cmp    edi,esp
  4019da:	add    eax,DWORD PTR [eax]
  4019dc:	cmp    edi,esp
  4019de:	add    eax,DWORD PTR [eax]
  4019e0:	cmp    DWORD PTR [esp+ecx*4+0x13dc61ec],edi
  4019e7:	inc    eax
  4019e8:	cmp    edi,edi
  4019ea:	je     0x4019ed
  4019ec:	add    dl,bh
  4019ee:	stc    
  4019ef:	div    DWORD PTR [ebp+0x41]
  4019f2:	jge    0x4019f6
  4019f4:	push   0x39
  4019f6:	(bad)  
  4019f7:	mov    ebx,0xcce739da
  4019fc:	ret    0xe735
  4019ff:	push   eax
  401a00:	mov    esp,DWORD PTR [ebp-0x6efd5c2]
  401a06:	out    0xfb,al
  401a08:	jb     0x401a42
  401a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a0b:	test   DWORD PTR [ebx+0x7403eefc],0x8515e42
  401a15:	ret    0xf6d4
  401a18:	jne    0x401a4b
  401a1a:	mov    ds:0xa4700852,al
  401a1f:	add    BYTE PTR [eax],al
  401a21:	in     al,dx
  401a22:	pop    ebp
  401a23:	call   0x6cce8fab
  401a28:	dec    edi
  401a29:	sub    DWORD PTR [edi],esp
  401a2b:	add    al,0xf8
  401a2d:	retf   
  401a2e:	out    0xc2,eax
  401a30:	push   DWORD PTR [esi]
  401a32:	cmc    
  401a33:	pop    es
  401a34:	(bad)  
  401a35:	je     0x401aa8
  401a37:	mov    edi,0xe9012545
  401a3c:	add    edi,DWORD PTR [ecx]
  401a3e:	add    BYTE PTR [edx+0x51],dh
  401a41:	inc    ecx
  401a42:	mov    edi,ebx
  401a44:	imul   edi,DWORD PTR [ecx],0x613d4f7
  401a4a:	outs   dx,BYTE PTR ds:[esi]
  401a4b:	inc    ebp
  401a4c:	test   DWORD PTR [eax+edi*8+0x4100713e],0xf9bf7
  401a57:	ret    
  401a58:	fld    QWORD PTR [ebx]
  401a5a:	mov    WORD PTR [ebx-0x70a7ceb],cs
  401a60:	xchg   ecx,eax
  401a61:	jge    0x401a8c
  401a63:	inc    eax
  401a64:	jmp    0x2a416664
  401a69:	idiv   esi
  401a6b:	cmp    eax,0x390401
  401a70:	jmp    0xea341733
  401a75:	add    edi,DWORD PTR [ecx]
  401a77:	add    BYTE PTR [edx+0x51],ah
  401a7a:	xor    DWORD PTR [ebx-0x80b7705],ecx
  401a80:	cmp    DWORD PTR [edx+0x3b],ebp
  401a83:	neg    DWORD PTR [eax+edi*8-0x72]
  401a87:	ins    DWORD PTR es:[edi],dx
  401a88:	shl    esi,1
  401a8a:	or     al,0x8
  401a8c:	(bad)  
  401a8d:	push   ecx
  401a8e:	and    eax,0x80fc248b
  401a93:	ret    0x3ed
  401a96:	add    al,0x8b
  401a98:	mov    ebp,0x11f87d82
  401a9d:	ret    0x4049
  401aa0:	jmp    0xaa40e6a0
  401aa5:	div    BYTE PTR [esi+0x3d]
  401aa8:	xchg   ecx,eax
  401aa9:	add    edi,DWORD PTR [ecx]
  401aab:	add    cl,ch
  401aad:	mov    esi,0x3e9f3f4
  401ab2:	cmp    DWORD PTR [eax],eax
  401ab4:	add    BYTE PTR [edx+0x0],ah
  401ab7:	mov    DWORD PTR [eax],ecx
  401ab9:	mov    ebx,ebx
  401abb:	mov    cl,0x3c
  401abd:	clc    
  401abe:	mov    ecx,0xd4ff0190
  401ac3:	push   cs
  401ac4:	div    DWORD PTR [ebp+0x51]
  401ac7:	pop    es
  401ac8:	ins    DWORD PTR es:[edi],dx
  401ac9:	or     BYTE PTR [esi+0x68],cl
  401acc:	or     al,0xff
  401ace:	mov    esp,0x3e87e832
  401ad3:	out    dx,eax
  401ad4:	not    BYTE PTR [eax+0x62]
  401ad7:	mov    DWORD PTR [eax],ecx
  401ad9:	mov    ebx,ebx
  401adb:	push   eax
  401adc:	add    BYTE PTR [edx-0x17],ch
  401adf:	out    0x6c,eax
  401ae1:	cld    
  401ae2:	push   ds
  401ae3:	dec    ecx
  401ae4:	clc    
  401ae5:	call   FWORD PTR [edx+eax*2+0x62f552f7]
  401aec:	mov    edx,DWORD PTR [ebp+0x1]
  401aef:	cmp    ecx,DWORD PTR [ebp+0xc]
  401af2:	ret    0x6d8a
  401af5:	push   es
  401af6:	ret    0xc87a
  401af9:	ret    0x3ae1
  401afc:	mov    eax,0x3ae901
  401b01:	leave  
  401b02:	stos   DWORD PTR es:[edi],eax
  401b03:	inc    ebp
  401b04:	add    BYTE PTR [ebp+0x62],dl
  401b07:	mov    eax,ds:0x15cdc482
  401b0c:	daa    
  401b0d:	adc    DWORD PTR [ecx],ebp
  401b0f:	xor    eax,0x79e872f8
  401b14:	idiv   bh
  401b16:	cmp    al,0x45
  401b18:	div    DWORD PTR [ebp-0x1f]
  401b1b:	add    BYTE PTR [edx+0x77],dl
  401b1e:	jmp    DWORD PTR [esi+0x14c00a64]
  401b24:	cmp    ecx,ecx
  401b26:	ret    0x3ae5
  401b29:	mov    edx,DWORD PTR [ebp-0x1f]
  401b2c:	mov    cl,0x11
  401b2e:	lea    eax,[eax]
  401b30:	or     eax,0x2dff50f8
  401b35:	adc    bh,bh
  401b37:	jne    0x401b4d
  401b39:	in     eax,dx
  401b3a:	jne    0x401b44
  401b3c:	xchg   edi,eax
  401b3d:	push   edx
  401b3e:	or     al,0x85
  401b40:	push   eax
  401b41:	je     0x401b56
  401b43:	mov    ebx,ebp
  401b45:	in     eax,dx
  401b46:	cmp    eax,DWORD PTR [ebp+0x10]
  401b49:	addr16 pop es
  401b4b:	mov    eax,0x211
  401b50:	imul   esi,esi,0x2a
  401b53:	ror    BYTE PTR [ebx+0x19c02b02],0xc2
  401b5a:	or     al,0x0
  401b5c:	int    0x88
  401b5e:	in     al,dx
  401b5f:	or     DWORD PTR [eax+edi*8],0x56
  401b63:	push   0x40115d
  401b68:	sub    BYTE PTR [edx+0x1],dh
  401b6b:	ret    
  401b6c:	aaa    
  401b6d:	jg     0x401bec
  401b6f:	or     al,0xd0
  401b71:	gs push es
  401b73:	xor    DWORD PTR ds:0x9f750009,0x28
  401b7a:	rcr    BYTE PTR [esi+0x59],0xc2
  401b7e:	or     al,0x0
  401b80:	add    BYTE PTR [ebx],dl
  401b82:	outs   dx,BYTE PTR ds:[esi]
  401b83:	adc    BYTE PTR [eax],al
  401b85:	in     eax,dx
  401b86:	or     DWORD PTR [eax+0x1a001],edi
  401b8c:	pop    esi
  401b8d:	fnstcw WORD PTR [edi+0x660b000c]
  401b93:	or     al,0xc7
  401b95:	sbb    eax,0x600000f8
  401b9a:	add    DWORD PTR [ebx+0x12885855],ecx
  401ba0:	lea    ecx,ds:0x2dff50f8
  401ba6:	or     al,0x56
  401ba8:	(bad)  
  401ba9:	cmp    DWORD PTR [esp+ecx*1],edx
  401bac:	(bad)  
  401bad:	jmp    0x401ba5
  401baf:	jle    0x401b71
  401bb1:	shl    ch,0x28
  401bb4:	rcl    BYTE PTR [edi+0x390cc1b0],0x6a
  401bbb:	jbe    0x401bb9
  401bbd:	cmp    esp,ebp
  401bbf:	cld    
  401bc0:	sub    bh,cl
  401bc2:	mov    esp,0xe745c2ca
  401bc7:	mov    BYTE PTR [ebp+0xd],al
  401bca:	jmp    0xc46e:0xf77c29f3
  401bd1:	shl    edi,0x3
  401bd4:	add    BYTE PTR [ecx],bh
  401bd6:	xchg   ebp,eax
  401bd7:	retf   0x3dc2
  401bda:	out    0x4e,eax
  401bdc:	mov    edx,ebp
  401bde:	addr16 mov edi,0xf41dcef8
  401be4:	push   0x43f93d00
  401be9:	add    cl,dl
  401beb:	cwde   
  401bec:	add    al,bl
  401bee:	mov    BYTE PTR [eax-0x6ec695fd],0x0
  401bf5:	push   0x39
  401bf7:	xchg   ecx,eax
  401bf8:	add    BYTE PTR [eax+0x39],ch
  401bfb:	out    0x3,eax
  401bfd:	and    BYTE PTR [esi-0x4717f495],0xb5
  401c04:	add    al,0x0
  401c06:	rcr    BYTE PTR [ebx],0xf0
  401c09:	inc    eax
  401c0a:	add    al,0xe3
  401c0c:	mov    esp,0x5de731c2
  401c11:	add    BYTE PTR [ebx+eiz*1-0x191eaf14],ch
  401c18:	adc    eax,DWORD PTR [eax]
  401c1a:	cmp    DWORD PTR [ecx+ecx*4-0x8],ebx
  401c1e:	push   esi
  401c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c20:	repz push eax
  401c22:	pop    esi
  401c23:	call   FWORD PTR [ebx]
  401c25:	lock popa 
  401c27:	pusha  
  401c28:	mov    dh,0x4
  401c2a:	cmp    DWORD PTR [ecx],ecx
  401c2c:	test   eax,0x14f53779
  401c31:	lock push ecx
  401c33:	push   edx
  401c34:	sahf   
  401c35:	add    al,0x39
  401c37:	daa    
  401c38:	test   eax,0xe908fbbd
  401c3d:	repnz lods al,BYTE PTR ds:[esi]
  401c3f:	clc    
  401c40:	pop    esp
  401c41:	mov    DWORD PTR [ecx],esp
  401c43:	in     al,0x66
  401c45:	repz imul esi,ebx,0x1600ffd4
  401c4c:	adc    dl,BYTE PTR [esi-0xd]
  401c4f:	push   es
  401c50:	or     ah,0xeb
  401c53:	cmp    DWORD PTR [ebp-0x7b],ebp
  401c56:	rep ins BYTE PTR es:[edi],dx
  401c58:	hlt    
  401c59:	push   ecx
  401c5a:	cmp    eax,DWORD PTR [esi]
  401c5c:	add    ecx,ebp
  401c5e:	stos   DWORD PTR es:[edi],eax
  401c5f:	cmp    BYTE PTR [eax],al
  401c61:	jmp    0xf1ff0c69
  401c66:	add    ebp,DWORD PTR [edi+eax*4+0xd]
  401c6a:	pop    esp
  401c6b:	mov    dh,0xe
  401c6d:	test   eax,0xe86ec103
  401c72:	(bad)  
  401c73:	mov    esi,0x395deb66
  401c78:	repz je 0x401c76
  401c7b:	xchg   esi,eax
  401c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c7d:	hlt    
  401c7e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c80:	leave  
  401c81:	sub    ecx,DWORD PTR [eax]
  401c83:	cmp    DWORD PTR [ebp+0x72],ecx
  401c86:	fbld   TBYTE PTR [ecx]
  401c88:	pushf  
  401c89:	sti    
  401c8a:	inc    ebx
  401c8b:	cmp    eax,edi
  401c8d:	pop    ebx
  401c8e:	add    eax,0x443f37a
  401c93:	adc    eax,DWORD PTR [eax]
  401c95:	(bad)  
  401c96:	js     0x401cd9
  401c98:	call   0xf3af0d0b
  401c9d:	add    BYTE PTR [eax+0x13fffc7c],ah
  401ca3:	fsubrp st(3),st
  401ca5:	sub    DWORD PTR [ebp-0x43b979e],0xfffffffa
  401cac:	push   edi
  401cae:	sbb    eax,DWORD PTR [eax]
  401cb0:	cmp    al,0xbf
  401cb2:	dec    DWORD PTR [esi+0x2c8f03c1]
  401cb8:	and    eax,0x3a7d45bb
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	jmp    0xf53f1d48
  401cc4:	push   ds
  401cc5:	bnd jne 0x401cb9
  401cc8:	repnz pusha 
  401cca:	std    
  401ccb:	pop    esi
  401ccc:	or     eax,DWORD PTR [edi+0xe87e155]
  401cd2:	call   esp
  401cd4:	push   cs
  401cd5:	repz jne 0x401d19
  401cd8:	jmp    0x401d46
  401cda:	or     BYTE PTR [esi],bh
  401cdc:	test   BYTE PTR [eax],bl
  401cde:	leave  
  401cdf:	sub    esp,edx
  401ce1:	repnz push esp
  401ce3:	(bad)  
  401ce4:	(bad)  
  401ce5:	addr16 add dl,bh
  401ce8:	jp     0x401cea
  401cea:	clc    
  401ceb:	fwait
  401cec:	xor    eax,0x3a83ffbf
  401cf1:	repz jne 0x401cd5
  401cf4:	loop   0x401c9b
  401cf6:	inc    DWORD PTR [esi]
  401cf8:	stos   DWORD PTR es:[edi],eax
  401cf9:	enter  0xe5c2,0x3a
  401cfd:	dec    ebp
  401cfe:	mov    eax,DWORD PTR ds:0x6a144d27
  401d04:	dec    esp
  401d05:	add    BYTE PTR [ebp-0x13],dh
  401d08:	sar    DWORD PTR [ebp+0x6c89e910],cl
  401d0e:	adc    dh,dl
  401d10:	push   cs
  401d11:	add    al,0xff
  401d13:	push   esp
  401d14:	add    BYTE PTR [ebp-0x26],bh
  401d17:	hlt    
  401d18:	add    BYTE PTR [ebp-0x10],bh
  401d1b:	dec    DWORD PTR [ebx+0x2211845]
  401d21:	cdq    
  401d22:	mov    ecx,0x75450010
  401d27:	in     al,dx
  401d28:	and    DWORD PTR [edi+ebp*8+0x545c75ff],0x4
  401d30:	lea    edx,ds:0x25ff50f0
  401d36:	hlt    
  401d37:	out    0xc3,eax
  401d39:	mov    edi,0x558bffef
  401d3e:	add    BYTE PTR [ebx+0x76a1038],al
  401d44:	mov    edx,DWORD PTR [ebp-0x10]
  401d47:	bswap  eax
  401d49:	imul   edi,edx,0x2a
  401d4c:	ror    BYTE PTR [ecx-0x46],0x8
  401d50:	add    ch,al
  401d52:	je     0x401d40
  401d54:	adc    DWORD PTR [eax+esi*8-0x1],0x75
  401d59:	in     al,dx
  401d5a:	push   ebx
  401d5b:	add    cl,BYTE PTR [ebp-0xaf106b]
  401d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d62:	cmc    
  401d63:	out    0x97,eax
  401d65:	pxor   mm7,mm7
  401d68:	mov    esp,DWORD PTR [ebp-0x1fc77d0f]
  401d6e:	imul   ecx,DWORD PTR [eax],0xfe39670f
  401d74:	xchg   BYTE PTR [ebx+edx*8],dl
  401d77:	add    ch,BYTE PTR [ebx]
  401d79:	add    BYTE PTR [eax-0x4b],ah
  401d7c:	ret    0xa008
  401d7f:	dec    edx
  401d80:	mov    ebp,esp
  401d82:	adc    ecx,eax
  401d84:	cld    
  401d85:	jmp    DWORD PTR ds:0xd0169f1
  401d8b:	cmp    bh,bh
  401d8d:	push   eax
  401d8e:	outs   dx,DWORD PTR ds:[esi]
  401d8f:	push   0x8
  401d91:	call   0x315acf
  401d96:	jle    0x401df6
  401d98:	inc    esi
  401d99:	or     al,0xba
  401d9b:	inc    DWORD PTR [ebx]
  401d9d:	je     0x401dd6
  401d9f:	loop   0x401d5a
  401da1:	inc    ebp
  401da2:	mov    si,0x2b05
  401da6:	jns    0x401d48
  401da8:	lds    ecx,FWORD PTR [eax]
  401daa:	cmp    DWORD PTR [edi*2+0x142cc2ec],esi
  401db1:	add    DWORD PTR [ebx],0xffffffe7
  401db4:	jbe    0x401dba
  401db6:	jo     0x401d5d
  401db8:	(bad)  
  401db9:	push   DWORD PTR [edi]
  401dbb:	hlt    
  401dbc:	(bad)  
  401dbd:	(bad)  
  401dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dbf:	out    dx,eax
  401dc0:	fneni(8087 only) 
  401dc2:	and    eax,0xf90bf06a
  401dc7:	jmp    0x401dc5
  401dc9:	mov    ch,BYTE PTR [edi+esi*8-0x38]
  401dcd:	add    bh,BYTE PTR [ecx]
  401dcf:	out    0x3,eax
  401dd1:	add    BYTE PTR [edx],dl
  401dd3:	fcomp  QWORD PTR [ebp+0x1]
  401dd6:	dec    bl
  401dd8:	(bad)  
  401dd9:	(bad)  
  401dda:	ins    BYTE PTR es:[edi],dx
  401ddb:	out    dx,eax
  401ddc:	fist   DWORD PTR [ecx+0x0]
  401ddf:	in     eax,dx
  401de0:	xor    eax,esi
  401de2:	leave  
  401de3:	sti    
  401de4:	fiadd  DWORD PTR [ebx]
  401de6:	push   ebp
  401de7:	mov    dl,0x32
  401de9:	test   ah,al
  401deb:	aad    0xb0
  401ded:	jl     0x401e64
  401def:	cmp    eax,0x7c8d038d
  401df4:	or     edx,DWORD PTR [ebx-0x1]
  401df7:	inc    esp
  401df8:	neg    DWORD PTR [ecx-0x1]
  401dfb:	sub    al,0xef
  401dfd:	(bad)  [eax+0xb03e684]
  401e03:	jns    0x401e77
  401e05:	or     DWORD PTR [ebx+0x7502e31c],eax
  401e0b:	add    BYTE PTR ds:[edx],dl
  401e0e:	(bad)  
  401e0f:	out    dx,eax
  401e10:	(bad)  
  401e11:	stos   DWORD PTR es:[edi],eax
  401e12:	add    BYTE PTR [ecx],bh
  401e14:	test   DWORD PTR [eax+esi*8],ebp
  401e17:	cmp    dh,al
  401e19:	add    BYTE PTR [ecx+0x49],cl
  401e1c:	imul   ebx,DWORD PTR [edx-0x16ffc754],0x3
  401e23:	pop    es
  401e24:	(bad)  
  401e25:	stos   DWORD PTR es:[edi],eax
  401e26:	add    BYTE PTR [ecx],bh
  401e28:	dec    ebx
  401e29:	(bad)  
  401e2a:	loopne 0x401de4
  401e2c:	mov    ebx,0xf04eef21
  401e31:	cmp    bl,BYTE PTR [ebx]
  401e33:	bound  esp,QWORD PTR [ebp-0x17]
  401e36:	pop    ecx
  401e37:	cmp    DWORD PTR [esi-0x15],esp
  401e3a:	pop    ecx
  401e3b:	cmp    DWORD PTR [edx-0x16],ebx
  401e3e:	pop    ebx
  401e3f:	cmp    DWORD PTR [eax],eax
  401e41:	jmp    0x76661f09
  401e46:	in     eax,0xdb
  401e48:	ja     0x401e1f
  401e4a:	jmp    0x6585de52
  401e4f:	inc    esp
  401e50:	test   DWORD PTR [ebx+0x5e],edx
  401e53:	jns    0x401e86
  401e55:	fcomp  DWORD PTR [edx]
  401e57:	out    dx,al
  401e58:	(bad)  
  401e59:	out    dx,eax
  401e5a:	es dec ecx
  401e5c:	icebp  
  401e5d:	add    cl,ch
  401e5f:	add    edi,DWORD PTR [ecx]
  401e61:	jnp    0x401df7
  401e63:	sti    
  401e64:	mov    bl,0x12
  401e66:	fs dec ecx
  401e68:	loope  0x401eba
  401e6a:	rol    DWORD PTR [ebx-0x7f16ffc7],0xb4
  401e71:	push   0x50c6ef1e
  401e76:	push   ss
  401e77:	jns    0x401eaa
  401e79:	out    dx,eax
  401e7a:	mov    ebx,0x16dbbff
  401e7f:	add    al,0x24
  401e81:	add    ebp,DWORD PTR [edx+0xef41da]
  401e87:	jl     0x401e1b
  401e89:	jge    0x401e10
  401e8b:	jno    0x401e34
  401e8d:	out    dx,eax
  401e8e:	(bad)  
  401e8f:	cmp    DWORD PTR [esi-0x122e038b],ebx
  401e95:	out    dx,al
  401e96:	call   esi
  401e98:	sub    DWORD PTR [edi-0x526c148c],0xffffffff
  401e9f:	cmp    al,0x69
  401ea1:	fdivr  st,st(1)
  401ea3:	xchg   ebp,eax
  401ea4:	cmp    al,BYTE PTR [eax]
  401ea6:	mov    ebp,DWORD PTR [edx-0x3d470d00]
  401eac:	loope  0x401ee8
  401eae:	push   ebp
  401eaf:	mov    edx,DWORD PTR [ebp-0x61073b45]
  401eb5:	sar    ebx,0xe7
  401eb8:	pop    ebx
  401eb9:	push   ebx
  401eba:	out    dx,eax
  401ebb:	jmp    DWORD PTR [eax-0x7f]
  401ebe:	call   0x694b8a
  401ec3:	add    cl,ch
  401ec5:	cmp    ch,bh
  401ec7:	jne    0x401eae
  401ec9:	add    al,cl
  401ecb:	std    
  401ecc:	outs   dx,BYTE PTR ds:[esi]
  401ecd:	daa    
  401ece:	jnp    0x401f25
  401ed0:	cmc    
  401ed1:	xchg   ebx,eax
  401ed2:	adc    ch,BYTE PTR [edx-0x17]
  401ed5:	pusha  
  401ed6:	add    bh,bh
  401ed8:	fmul   QWORD PTR [esi]
  401eda:	out    dx,eax
  401edb:	jne    0x401f2e
  401edd:	out    0x74,eax
  401edf:	or     BYTE PTR [esi+0x71],al
  401ee2:	cld    
  401ee3:	(bad)  
  401ee4:	fwait
  401ee5:	ss mov ecx,0x553ae1c2
  401eeb:	mov    edi,DWORD PTR ds:0x2ef8c3bb
  401ef1:	sub    eax,0x3ae900
  401ef7:	(bad)  
  401ef8:	lods   al,BYTE PTR ds:[esi]
  401ef9:	into   
  401efa:	(bad)  
  401efb:	(bad)  
  401efc:	call   0x959a3b
  401f01:	test   al,0x69
  401f03:	adc    cl,BYTE PTR [ebp+0x6a50dadd]
  401f09:	xchg   ecx,eax
  401f0a:	fnsave [ebp-0x4]
  401f0d:	add    BYTE PTR [edi-0x1200078a],ah
  401f13:	jmp    0x401f13
  401f15:	push   edx
  401f16:	mov    WORD PTR [edi+0x45],fs
  401f19:	clc    
  401f1a:	fld    st(1)
  401f1c:	add    al,0x0
  401f1e:	sub    eax,0x616aec69
  401f23:	ins    DWORD PTR es:[edi],dx
  401f24:	inc    ebp
  401f25:	or     al,0x40
  401f27:	fnsave [ebp+0x8]
  401f2a:	js     0x401f48
  401f2c:	cld    
  401f2d:	jmp    DWORD PTR [edi+0x6008c2aa]
  401f33:	push   ebp
  401f34:	mov    ebp,esp
  401f36:	sub    bh,al
  401f38:	mov    WORD PTR [ebp+0x54],es
  401f3b:	push   edx
  401f3c:	push   DWORD PTR [ebp+0x18]
  401f3f:	retf   0xfc2a
  401f42:	mov    bh,0xdb
  401f44:	leave  
  401f45:	ret    0x228
  401f48:	push   ebp
  401f49:	mov    esi,DWORD PTR [edi+edi*2+0x76200c7d]
  401f50:	adc    al,0x83
  401f52:	adc    eax,0x16740012
  401f57:	fnsave [ebp+0x10]
  401f5a:	addr16 jne 0x401f69
  401f5d:	dec    DWORD PTR ds:0x7409e7ea
  401f63:	(bad)  
  401f65:	leave  
  401f66:	adc    al,BYTE PTR [eax]
  401f68:	add    BYTE PTR [ebp+0x5b],dl
  401f6b:	loopne 0x401f6c
  401f6d:	jne    0x401f5f
  401f6f:	fdiv   QWORD PTR [ebp+0x8]
  401f72:	add    BYTE PTR [eax],ch
  401f74:	mov    al,0xff
  401f76:	jmp    DWORD PTR [edi]
  401f78:	jg     0x401ff7
  401f7a:	adc    BYTE PTR [ecx],bh
  401f7c:	xlat   BYTE PTR ds:[ebx]
  401f7d:	ja     0x401f93
  401f7f:	mov    edx,0x2affff7c
  401f84:	cmc    
  401f85:	in     al,dx
  401f86:	jne    0x401fd1
  401f88:	out    dx,al
  401f89:	jbe    0x401f97
  401f8b:	sahf   
  401f8c:	ins    BYTE PTR es:[edi],dx
  401f8d:	sti    
  401f8e:	out    0xce,eax
  401f90:	fsubp  st(4),st
  401f92:	inc    DWORD PTR [eax-0x12000067]
  401f98:	jno    0x401f79
  401f9a:	cmp    esp,0xffffffe2
  401f9d:	add    esi,DWORD PTR [ebx+eax*2-0x42]
  401fa1:	jbe    0x401faf
  401fa3:	popa   
  401fa4:	out    dx,eax
  401fa5:	xlat   BYTE PTR ds:[ebx]
  401fa6:	add    BYTE PTR [ecx],bh
  401fa8:	rol    BYTE PTR [ecx],cl
  401faa:	sub    edi,DWORD PTR [ecx+0x7]
  401fad:	in     eax,dx
  401fae:	jne    0x401ff5
  401fb0:	sahf   
  401fb1:	jbe    0x401fbb
  401fb3:	popa   
  401fb4:	dec    edx
  401fb5:	in     al,dx
  401fb6:	inc    DWORD PTR [esi-0x50]
  401fb9:	ror    DWORD PTR [eax],0x39
  401fbc:	sub    al,0x79
  401fbe:	in     al,dx
  401fbf:	mov    edx,0xa4ff13fb
  401fc4:	hlt    
  401fc5:	in     al,dx
  401fc6:	jne    0x401ffd
  401fc8:	outs   dx,BYTE PTR ds:[esi]
  401fc9:	jbe    0x401fd3
  401fcb:	adc    DWORD PTR [esi-0x7de90014],ebx
  401fd1:	std    
  401fd2:	inc    BYTE PTR [edi+eiz*8+0x350075ec]
  401fd9:	dec    esi
  401fda:	jbe    0x401fe4
  401fdc:	adc    DWORD PTR [edx-0x14],esp
  401fdf:	push   esi
  401fe1:	pop    ds
  401fe2:	ror    DWORD PTR [ecx+edi*1],0x8c
  401fe6:	js     0x401fd4
  401fe8:	out    0xb3,al
  401fea:	sti    
  401feb:	out    0xde,eax
  401fed:	xor    al,0xec
  401fef:	jmp    FWORD PTR [ecx-0x3f]
  401ff2:	sti    
  401ff3:	addr16 pop esp
  401ff5:	add    cl,dl
  401ff7:	inc    edx
  401ff8:	cmp    ebp,ebp
  401ffa:	xchg   esp,eax
  401ffb:	sti    
  401ffc:	(bad)  
  401ffd:	cmp    BYTE PTR [esi],dl
  401fff:	in     al,dx
  402000:	mov    dh,0x59
  402002:	jmp    0x113844f3
  402007:	pop    ds
  402008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402009:	in     al,dx
  40200a:	(bad)  
  40200b:	pop    eax
  40200c:	cmp    edi,DWORD PTR [ebx-0x54]
  40200f:	inc    DWORD PTR [esi]
  402011:	in     eax,dx
  402012:	je     0x40200f
  402014:	xchg   esi,eax
  402015:	xor    dh,ah
  402017:	jmp    0x401f9f
  402019:	pop    ecx
  40201a:	jmp    0x402094
  40201c:	hlt    
  40201d:	(bad)  
  40201f:	jmp    0x40200d
  402021:	test   eax,0xc6ec6e21
  402027:	dec    esp
  402028:	jo     0x401feb
  40202a:	in     eax,dx
  40202b:	add    eax,DWORD PTR [ecx+edi*2]
  40202e:	lds    eax,FWORD PTR [edi+0x71aeeb7d]
  402034:	inc    ecx
  402035:	fsub   st,st(3)
  402037:	in     eax,dx
  402038:	inc    esi
  402039:	in     al,dx
  40203a:	rol    BYTE PTR [eax+0x0],cl
  40203d:	sub    eax,0xbae82c77
  402042:	inc    ebp
  402043:	(bad)  
  402045:	mov    al,ds:0x35718600
  40204a:	jmp    0x402040
  40204c:	sti    
  40204d:	push   ss
  40204e:	fnsave [eax-0x15]
  402051:	push   ss
  402052:	in     al,dx
  402053:	hlt    
  402054:	out    0xe,eax
  402056:	jbe    0x402049
  402058:	fnclex 
  40205a:	jmp    0xdbe1:0x75feeb5e
  402061:	dec    ebp
  402062:	in     al,dx
  402063:	dec    esi
  402064:	jmp    0x402028
  402066:	inc    ebp
  402067:	inc    ebp
  402068:	mov    ebp,0x50e8f8fb
  40206d:	mov    dl,0xdc
  40206f:	add    BYTE PTR [edx-0x7],ch
  402072:	hlt    
  402073:	(bad)  
  402074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402075:	fiadd  WORD PTR [eax]
  402077:	add    cl,ch
  402079:	cmp    bh,BYTE PTR [ebp+0x45]
  40207c:	sbb    eax,0xe175eb65
  402081:	xchg   edx,eax
  402082:	push   esp
  402083:	aam    0xe9
  402085:	cmp    al,BYTE PTR [ebp-0x14be7e40]
  40208b:	jne    0x40207e
  40208d:	and    ah,0xf9
  402090:	mul    BYTE PTR [ebx-0x5c0eba87]
  402096:	jne    0x402094
  402098:	shl    DWORD PTR [ecx],1
  40209a:	iret   
  40209b:	add    cl,ch
  40209d:	jg     0x40204a
  40209f:	je     0x4020a0
  4020a1:	add    BYTE PTR [ebx+0x75],ah
  4020a4:	clc    
  4020a5:	cmp    DWORD PTR [edi],ecx
  4020a7:	add    al,ch
  4020a9:	cmp    BYTE PTR [eax],bh
  4020ab:	add    BYTE PTR [eax],al
  4020ad:	jo     0x4020a8
  4020af:	repz (bad) 
  4020b1:	cmp    al,0x61
  4020b3:	fmul   DWORD PTR [ecx]
  4020b5:	call   0xe345:0x1cff003a
  4020bc:	mov    ebx,0x8beb53a2
  4020c1:	sub    al,0x29
  4020c3:	sti    
  4020c4:	(bad)  
  4020c5:	xchg   esi,eax
  4020c6:	or     dl,BYTE PTR [eax-0x1]
  4020c9:	cld    
  4020ca:	and    ah,bl
  4020cc:	push   0x7f
  4020ce:	adc    ebp,ebx
  4020d0:	leave  
  4020d1:	stos   DWORD PTR es:[edi],eax
  4020d2:	push   ss
  4020d3:	jmp    0x402129
  4020d5:	(bad)  
  4020d6:	out    0x7e,al
  4020d8:	les    ebx,FWORD PTR [ecx-0x5]
  4020db:	inc    esp
  4020dc:	hlt    
  4020dd:	jmp    0x6440211c
  4020e2:	jns    0x4020d0
  4020e4:	push   eax
  4020e5:	dec    esi
  4020e6:	imul   edi,eax,0xd28e00e7
  4020ec:	add    BYTE PTR [eax],al
  4020ee:	push   ebp
  4020ef:	mov    edi,0x700f4d78
  4020f4:	or     al,ch
  4020f6:	sahf   
  4020f7:	(bad)  
  4020f9:	dec    DWORD PTR [ecx+0x40]
  4020fc:	clc    
  4020fd:	sbb    DWORD PTR [ebp+0x7c7204d6],0xffffff81
  402104:	ins    DWORD PTR es:[edi],dx
  402105:	clc    
  402106:	add    BYTE PTR [ebp+edx*8-0x77b7038b],dl
  40210d:	rol    BYTE PTR [eax],cl
  40210f:	nop
  402110:	jmp    0xd61295d4
  402115:	jne    0x40210f
  402117:	mov    al,0x4c
  402119:	add    al,ch
  40211b:	xchg   ecx,eax
  40211c:	jmp    0xa6d02120
  402121:	not    eax
  402123:	fldcw  WORD PTR [edx]
  402125:	hlt    
  402126:	inc    DWORD PTR ds:0xc295e8d8
  40212c:	add    eax,DWORD PTR [eax]
  40212e:	jmp    0x4020b6
  402130:	xlat   BYTE PTR ds:[ebx]
  402131:	jne    0x40213b
  402133:	js     0x40215f
  402135:	sti    
  402136:	call   FWORD PTR [edi-0x6d363ff4]
  40213c:	(bad)  
  40213d:	(bad)  
  40213e:	jmp    0xe2:0xc9c00b56
  402145:	add    BYTE PTR [edx+0x22],ch
  402148:	dec    esp
  402149:	cld    
  40214a:	jmp    DWORD PTR ds:0xb8f0e7e6
  402150:	xlat   BYTE PTR ds:[ebx]
  402151:	inc    edi
  402153:	gs hlt 
  402155:	add    DWORD PTR [eax],eax
  402157:	and    dh,bh
  402159:	mov    WORD PTR [ebp+0x60],es
  40215c:	push   esp
  40215d:	push   DWORD PTR [ebp+0x8]
  402160:	(bad)  
  402161:	sar    bl,cl
  402163:	cmp    DWORD PTR [edx-0x17],edx
  402166:	sub    DWORD PTR [edi+eax*2+0x4],0x74
  40216b:	add    BYTE PTR [ebx-0xe],cl
  40216e:	mov    ebx,0x6f33743b
  402173:	pop    es
  402174:	xchg   ecx,eax
  402175:	fadd   DWORD PTR [ebx]
  402177:	add    BYTE PTR [ecx],bh
  402179:	add    ch,BYTE PTR ds:[ebx]
  40217c:	stc    
  40217d:	push   cs
  40217e:	push   es
  40217f:	sub    edi,ecx
  402181:	xor    dh,al
  402183:	add    al,0x39
  402185:	lods   al,BYTE PTR ds:[esi]
  402186:	jl     0x402174
  402188:	mov    edx,0xfc8dec23
  40218d:	add    dl,BYTE PTR [edi+edi*8+0x24]
  402191:	out    dx,eax
  402192:	fisttp DWORD PTR [eax+0x6a]
  402195:	xlat   BYTE PTR ds:[ebx]
  402196:	add    eax,DWORD PTR [ebp-0xe39087]
  40219c:	or     al,0xef
  40219e:	fcmovnu st,st(0)
  4021a0:	or     edx,0xcefc89e8
  4021a6:	call   0x12ff8f20
  4021ab:	sar    BYTE PTR [ecx],cl
  4021ad:	xlat   BYTE PTR ds:[ebx]
  4021ae:	cld    
  4021af:	mov    edi,0x75e8d2e5
  4021b4:	inc    ebp
  4021b5:	mov    dl,0x6e
  4021b7:	clc    
  4021b8:	jmp    0x394b397b
  4021bd:	xlat   BYTE PTR ds:[ebx]
  4021be:	call   0xe8cf5f38
  4021c3:	sar    DWORD PTR [ecx],1
  4021c5:	xlat   BYTE PTR ds:[ebx]
  4021c6:	call   0xb2bf6340
  4021cb:	cli    
  4021cc:	cmp    BYTE PTR es:[edx-0x28ceff3e],0x4e
  4021d4:	mov    esp,DWORD PTR ds:0x6ae8bf56
  4021da:	mov    esi,0x7c8dcc
  4021df:	gs push ebx
  4021e1:	(bad)  
  4021e2:	jb     0x4021d5
  4021e4:	fcomi  st,st(1)
  4021e6:	int    0xe9
  4021e8:	add    esi,DWORD PTR [edi+edi*4-0x518422]
  4021ef:	call   0xf1b2fff7
  4021f4:	fstp   TBYTE PTR [ebp-0x3f17c919]
  4021fa:	inc    edx
  4021fb:	xor    eax,0x11ec4ce8
  402200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402201:	call   0xf73d0b05
  402206:	clc    
  402207:	ins    BYTE PTR es:[edi],dx
  402208:	xchg   DWORD PTR [ecx],edi
  40220a:	add    cl,ch
  40220c:	jp     0x40220a
  40220e:	out    dx,eax
  40220f:	push   es
  402210:	outs   dx,BYTE PTR ds:[esi]
  402211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402212:	xlat   BYTE PTR ds:[ebx]
  402213:	sub    ebx,edx
  402215:	cmp    DWORD PTR [eax],eax
  402217:	push   0xffffffbf
  402219:	xor    eax,0xe903e903
  40221e:	(bad)  
  40221f:	cmp    ah,bl
  402221:	sar    bh,1
  402223:	call   0xc582e22b
  402228:	out    0xe4,eax
  40222a:	repz rcl DWORD PTR [edi-0x7d1700b0],0x75
  402232:	add    esp,esp
  402234:	add    eax,DWORD PTR [eax]
  402236:	cmp    DWORD PTR [eax],edx
  402238:	jmp    0xe9cf8390
  40223d:	add    edi,DWORD PTR [ecx]
  40223f:	ja     0x40226d
  402241:	(bad)  
  402243:	call   FWORD PTR [ebp+0x1ce82571]
  402249:	lock outs dx,BYTE PTR cs:[esi]
  40224c:	and    edi,0x8d91f0ac
  402252:	adc    BYTE PTR [ecx],al
  402254:	jmp    0x4d1fdb
  402259:	pusha  
  40225a:	js     0x402244
  40225c:	push   esp
  40225e:	push   ds
  40225f:	fldenv [ebp+0x38]
  402262:	xor    eax,0xf2d4ff00
  402267:	fist   WORD PTR [eax+0x6ae7d653]
  40226d:	loope  0x4021f1
  40226f:	aaa    
  402270:	sub    BYTE PTR [eax-0xe8a18c6],ch
  402276:	repnz (bad) 
  402278:	cld    
  402279:	ss (bad) 
  40227b:	sti    
  40227c:	xlat   BYTE PTR ds:[ebx]
  40227d:	cs dec eax
  40227f:	in     al,dx
  402280:	call   FWORD PTR [edx+eax*8-0x61e24521]
  402287:	out    0x23,eax
  402289:	xor    DWORD PTR [esi+0x280ef86d],edx
  40228f:	fdivr  st,st(7)
  402291:	jl     0x402235
  402293:	fnstsw ax
  402295:	std    
  402296:	lahf   
  402297:	out    0x23,eax
  402299:	adc    DWORD PTR [eax],eax
  40229b:	xchg   esi,eax
  40229c:	ins    DWORD PTR es:[edi],dx
  40229d:	in     al,dx
  40229e:	add    DWORD PTR [esi],esi
  4022a0:	add    BYTE PTR [eax],al
  4022a2:	jmp    0xd228903e
  4022a7:	outs   dx,DWORD PTR ds:[esi]
  4022a8:	out    0xff,eax
  4022aa:	jmp    0xc1489006
  4022af:	(bad)  
  4022b0:	jmp    0xc323e9b4
  4022b5:	pop    ebx
  4022b6:	mov    al,0x78
  4022b8:	cld    
  4022b9:	call   FWORD PTR [ebx]
  4022bb:	rcl    bl,cl
  4022bd:	sub    DWORD PTR [eax*2+0x57f173e7],0x6d
  4022c5:	or     BYTE PTR [ecx-0x16ff2ec7],dl
  4022cb:	push   ebx
  4022cc:	ror    cl,0xab
  4022cf:	es out 0x54,eax
  4022d2:	add    BYTE PTR [ebx+0x8458bcf],ch
  4022d8:	add    BYTE PTR [eax+0x50032000],al
  4022de:	push   0x50
  4022e0:	(bad)  
  4022e1:	repnz rcl BYTE PTR [eax],1
  4022e4:	add    ecx,ecx
  4022e6:	ret    0x2dc
  4022e9:	push   ebp
  4022ea:	mov    esi,DWORD PTR [esi+esi*1-0x4]
  4022ee:	mov    esi,ebp
  4022f0:	jmp    0x510e:0xe1e44d8a
  4022f7:	and    esp,eax
  4022f9:	add    ch,BYTE PTR [ebx]
  4022fb:	and    dl,dh
  4022fd:	stos   DWORD PTR es:[edi],eax
  4022fe:	pop    ecx
  4022ff:	add    BYTE PTR [ebx-0x24],dl
  402302:	add    esi,ebx
  402304:	push   0x3e
  402306:	leave  
  402307:	ret    0x2a8
  40230a:	push   ebp
  40230b:	mov    esi,DWORD PTR [esi*1-0x114a74a9]
  402312:	sti    
  402313:	mov    ebx,DWORD PTR ds:0x704d8aeb
  402319:	loope  0x40231d
  40231b:	repz cld 
  40231d:	cmp    eax,0xef52c95e
  402322:	call   DWORD PTR [ebx+ecx*1-0x38]
  402326:	push   esi
  402327:	push   edi
  402328:	jmp    0x402380
  40232a:	or     ah,bh
  40232c:	fld    TBYTE PTR [esi]
  40232e:	adc    BYTE PTR [ebx],ch
  402330:	nop
  402331:	push   0x1730c7d
  402336:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402338:	dec    ebx
  402339:	test   eax,0x3d200175
  40233e:	pop    esi
  40233f:	leave  
  402340:	xchg   edx,eax
  402341:	out    0xff,eax
  402343:	push   esp
  402344:	retf   
  402345:	mov    DWORD PTR [ebx+0x5736d4c4],0x1ff3953
  40234f:	add    DWORD PTR [ecx],edi
  402351:	xlat   BYTE PTR ds:[ebx]
  402352:	in     al,0x75
  402354:	xor    DWORD PTR [edi+0x6716ff93],ecx
  40235a:	jns    0x4023d9
  40235c:	inc    ecx
  40235d:	push   ss
  40235e:	cmp    eax,0x430eb2b
  402363:	add    DWORD PTR [eax],eax
  402365:	cmp    edi,edx
  402367:	jnp    0x40237d
  402369:	xor    eax,DWORD PTR [ebp-0x3e]
  40236c:	loop   0x40235e
  40236e:	bound  esp,QWORD PTR [edi+0x8]
  402371:	jle    0x402311
  402373:	js     0x4023ea
  402375:	sub    eax,0x39fe3f15
  40237a:	adc    bh,BYTE PTR [ebx+0x61f22b]
  402380:	cmp    esi,DWORD PTR [ecx+0x7400e49c]
  402386:	sbb    eax,0xd768047a
  40238b:	ds (bad) 
  40238d:	ds inc ebp
  40238f:	dec    edi
  402390:	(bad)  
  402391:	mov    bl,0xdb
  402393:	sub    DWORD PTR [eax+0x4579c235],ecx
  402399:	xchg   esi,eax
  40239a:	outs   dx,DWORD PTR ds:[esi]
  40239b:	add    BYTE PTR [edx],bh
  40239d:	clc    
  40239e:	mov    cl,0x36
  4023a0:	adc    BYTE PTR [ebx],cl
  4023a2:	fstp   DWORD PTR [eax]
  4023a4:	leave  
  4023a5:	jg     0x402341
  4023a7:	outs   dx,BYTE PTR ds:[esi]
  4023a8:	aad    0x12
  4023aa:	es inc esi
  4023ac:	leave  
  4023ad:	jnp    0x40238a
  4023af:	add    edx,DWORD PTR [ebp-0x4e]
  4023b2:	mov    ds:0xa61c480,eax
  4023b7:	dec    esi
  4023b8:	push   edi
  4023b9:	push   esi
  4023ba:	sub    al,0xfc
  4023bc:	pop    edx
  4023bd:	ret    
  4023be:	fidivr DWORD PTR [ebx+0x45]
  4023c1:	inc    esp
  4023c2:	popa   
  4023c3:	inc    eax
  4023c4:	add    DWORD PTR [ecx+0xe82c00],esi
  4023ca:	ret    0x26e8
  4023cd:	cmp    eax,0xbce56ac2
  4023d2:	jl     0x4023bc
  4023d4:	jmp    0x72405cdc
  4023d9:	ss sub ecx,esp
  4023dc:	sub    esi,esp
  4023de:	je     0x4023c3
  4023e0:	out    0xad,al
  4023e2:	jl     0x4023c7
  4023e4:	fisubr WORD PTR [ebp+0x4e712825]
  4023ea:	idiv   bh
  4023ec:	mov    bl,0xe7
  4023ee:	ds scas al,BYTE PTR es:[edi]
  4023f0:	lods   al,BYTE PTR ds:[esi]
  4023f1:	out    0xb3,eax
  4023f3:	or     edx,DWORD PTR [ecx]
  4023f5:	jl     0x40237b
  4023f7:	out    0xf6,al
  4023f9:	lods   eax,DWORD PTR ds:[esi]
  4023fa:	jl     0x4023df
  4023fc:	jno    0x40240d
  4023fe:	adc    ebp,esi
  402400:	jle    0x402440
  402402:	lds    edi,FWORD PTR [ecx-0x6c]
  402405:	in     al,0xb1
  402407:	or     esp,ecx
  402409:	jns    0x402417
  40240b:	in     eax,0xeb
  40240d:	dec    esi
  40240e:	scas   eax,DWORD PTR es:[edi]
  40240f:	jns    0x40240e
  402411:	sub    DWORD PTR [edx+0x4533113a],esi
  402417:	xor    BYTE PTR [esi],al
  402419:	ds xchg ecx,eax
  40241b:	loope  0x402446
  40241d:	jns    0x402413
  40241f:	loop   0x402482
  402421:	add    BYTE PTR [ebx-0x58512c6],dh
  402427:	inc    BYTE PTR [ebp+0x42]
  40242a:	adc    dh,BYTE PTR [edi+0x390010ab]
  402430:	dec    ebx
  402431:	(bad)  
  402432:	lock mov eax,0x5ee2bdbb
  402438:	in     al,0x1a
  40243a:	das    
  40243b:	jb     0x4024af
  40243d:	and    al,0xe0
  40243f:	jmp    0x357c2528
  402444:	fsub   DWORD PTR [ebx-0x7affca67]
  40244a:	test   eax,0xe996784a
  40244f:	cmp    al,BYTE PTR [eax]
  402451:	call   FWORD PTR [esi*1+0x1a972fd8]
  402458:	in     al,0x89
  40245a:	sub    al,0xf1
  40245c:	jecxz  0x4024d3
  40245e:	jge    0x40247d
  402460:	pop    ecx
  402461:	iret   
  402462:	jmp    0xf6001ba1
  402467:	fwait
  402468:	jns    0x4024af
  40246a:	pop    ecx
  40246b:	fisubr DWORD PTR [ebp-0xc]
  40246e:	push   ecx
  40246f:	arpl   dx,sp
  402471:	call   DWORD PTR [esi-0x4c]
  402474:	cmp    eax,0xec804ef8
  402479:	(bad)  
  40247a:	mov    esp,0x3975e3f2
  40247f:	fnsave [esi+edi*8+0x36]
  402483:	(bad)  
  402485:	jne    0x4024b4
  402487:	int    0x3a
  402489:	iret   
  40248a:	jmp    0xedb607c9
  40248f:	mov    ds:0xe9cf2e,al
  402494:	cmp    dl,BYTE PTR [eax-0x1]
  402497:	xchg   esp,eax
  402498:	cs jne 0x402420
  40249b:	pop    ss
  40249c:	fwait
  40249d:	jecxz  0x40249e
  40249f:	cdq    
  4024a0:	mov    ds:0x9bf6fe9d,al
  4024a5:	jecxz  0x40251c
  4024a7:	cmc    
  4024a8:	fwait
  4024a9:	ins    DWORD PTR es:[edi],dx
  4024aa:	clc    
  4024ab:	je     0x40246e
  4024ad:	sar    dh,cl
  4024af:	ficomp WORD PTR [ebx+0x50]
  4024b2:	call   0x237d8e
  4024b7:	into   
  4024b8:	add    eax,edi
  4024ba:	out    0x0,eax
  4024bc:	daa    
  4024bd:	(bad)  
  4024be:	(bad)  
  4024bf:	(bad)  
  4024c0:	jmp    0x3d:0x385a67f3
  4024c7:	inc    DWORD PTR ds:0xda93e7f4
  4024cd:	(bad)  
  4024cf:	or     edi,eax
  4024d1:	fnsave [ebp-0xc]
  4024d4:	iret   
  4024d5:	inc    edi
  4024d6:	clc    
  4024d7:	inc    DWORD PTR [ebp-0xc]
  4024da:	out    0x83,eax
  4024dc:	mov    edx,0xd823ffdd
  4024e1:	fnsave [ebp-0x8]
  4024e4:	mov    eax,0x8ffffda1
  4024e9:	fidiv  WORD PTR [ebp+0x8]
  4024ec:	mov    BYTE PTR [eax+0x728ffff7],al
  4024f2:	ret    
  4024f3:	pop    ebx
  4024f4:	sbb    DWORD PTR [ebp-0x5afffff8],edi
  4024fa:	jno    0x4024e8
  4024fc:	and    DWORD PTR [ebx+ecx*8],0x57
  402500:	mov    edx,DWORD PTR [ebp-0x7b3ff516]
  402506:	clc    
  402507:	mov    BYTE PTR [eax],0xd0
  40250a:	(bad)  
  40250b:	(bad)  
  40250c:	dec    DWORD PTR [ebx+0x387d83dd]
  402512:	std    
  402513:	je     0x40251c
  402515:	or     bh,bh
  402517:	add    DWORD PTR [eax],eax
  402519:	nop
  40251a:	ror    DWORD PTR [edi],1
  40251c:	cmp    DWORD PTR [ebp-0x688afe1a],0xffffff84
  402523:	add    BYTE PTR [ecx],al
  402525:	nop
  402526:	(bad)  
  402527:	jmp    0x39ca:0x81ac7b02
  40252e:	cld    
  40252f:	add    DWORD PTR [eax],eax
  402531:	fnstsw WORD PTR [edx]
  402533:	cld    
  402534:	push   eax
  402535:	cmp    DWORD PTR [edi],esp
  402537:	outs   dx,BYTE PTR ds:[esi]
  402538:	add    BYTE PTR [esi+0x4b],bl
  40253b:	adc    bh,bh
  40253d:	int3   
  40253e:	lock jmp 0x402511
  402541:	jle    0x40251b
  402543:	add    ecx,DWORD PTR [ebx]
  402545:	jns    0x40256a
  402547:	jno    0x4024d6
  402549:	hlt    
  40254a:	mov    al,0x34
  40254c:	push   0x39
  40254e:	ins    BYTE PTR es:[edi],dx
  40254f:	inc    edi
  402550:	hlt    
  402551:	mov    DWORD PTR ds:0xe7acff04,ecx
  402557:	loopne 0x4025ce
  402559:	sbb    eax,0xcf9d80
  40255e:	cmp    edi,edx
  402560:	or     al,0xc0
  402562:	test   BYTE PTR [ebx],dl
  402564:	test   DWORD PTR [ebp+0x1],edi
  402567:	fcom   DWORD PTR [edi+0x46]
  40256a:	mov    edx,0x6c01d7d4
  40256f:	rol    DWORD PTR [ebp+edi*2+0x3a57d8f1],1
  402576:	mov    dl,0x94
  402578:	fild   DWORD PTR [eax-0x77]
  40257b:	aas    
  40257c:	inc    edx
  40257d:	std    
  40257e:	(bad)  
  40257f:	cmp    cl,BYTE PTR [ebp-0x24634308]
  402585:	push   eax
  402586:	outs   dx,BYTE PTR ds:[esi]
  402587:	mov    ebp,0x12396a03
  40258c:	push   edi
  40258d:	adc    BYTE PTR [esi-0x4b17207c],dh
  402593:	adc    al,BYTE PTR [eax+eax*1]
  402596:	xor    dl,BYTE PTR [edi]
  402598:	pop    eax
  402599:	or     al,BYTE PTR [esi]
  40259b:	jmp    FWORD PTR [eax]
  40259d:	std    
  40259e:	xchg   esi,eax
  40259f:	cli    
  4025a0:	sub    al,0xff
  4025a2:	mov    ds:0x2d458cd3,al
  4025a7:	faddp  st(3),st
  4025a9:	je     0x4025df
  4025ab:	rcl    BYTE PTR [esi-0x8],cl
  4025ae:	mov    BYTE PTR [eax],0xe9
  4025b1:	loopne 0x402597
  4025b3:	jecxz  0x402586
  4025b5:	push   0x76
  4025b7:	add    cl,ch
  4025b9:	mov    WORD PTR [esi-0xb],?
  4025bc:	test   al,0x56
  4025be:	xor    eax,0xfc447d
  4025c3:	cmp    BYTE PTR [ebp-0x29],ch
  4025c6:	mov    esp,?
  4025c8:	pop    es
  4025c9:	sub    DWORD PTR [esi+edi*1],esi
  4025cc:	imul   edx,ebp,0xffffffe0
  4025cf:	lods   al,BYTE PTR ds:[esi]
  4025d0:	adc    BYTE PTR [esi+0x14e13d56],ah
  4025d6:	or     al,0x11
  4025d8:	pop    ds
  4025d9:	xchg   esi,eax
  4025da:	loopne 0x4025fa
  4025dc:	inc    ecx
  4025dd:	mov    al,ds:0x1c002dc5
  4025e2:	lea    ebx,ds:0x380bfc7f
  4025e8:	add    cl,ch
  4025ea:	add    DWORD PTR [edi+esi*8+0x1795166d],0xffffffa8
  4025f2:	add    edi,DWORD PTR [esi+0x396df13a]
  4025f8:	loope  0x4025d6
  4025fa:	neg    edi
  4025fc:	push   0xfffffff9
  4025fe:	loopne 0x40264c
  402600:	hlt    
  402601:	inc    ebp
  402602:	push   esi
  402603:	inc    ecx
  402604:	fdiv   DWORD PTR ds:0x20e0c6e1
  40260a:	lds    ebp,FWORD PTR [ecx]
  40260c:	add    BYTE PTR [edx],al
  40260e:	(bad)
  402612:	in     eax,0xf0
  402614:	imul   al
  402616:	add    edi,DWORD PTR [ecx]
  402618:	iret   
  402619:	add    edx,DWORD PTR [ebp+ebp*1+0x7f]
  40261d:	sbb    edx,DWORD PTR [edx]
  40261f:	stos   DWORD PTR es:[edi],eax
  402620:	xchg   esi,eax
  402621:	add    eax,0xd80e8b82
  402626:	repnz add BYTE PTR [ecx],ch
  402629:	fiadd  WORD PTR [eax]
  40262b:	pop    es
  40262c:	mov    bl,0xb
  40262e:	test   DWORD PTR [ecx-0x18ffc125],ecx
  402634:	jne    0x4026a0
  402636:	fisubr DWORD PTR [edx+0x3eec7520]
  40263c:	mov    dl,0x3a
  40263e:	or     dh,dl
  402640:	lea    esi,[ebp+edi*2-0xb]
  402644:	ret    
  402645:	xor    dl,BYTE PTR [eax]
  402647:	bnd jne 0x4026b5
  40264a:	sbb    BYTE PTR [edx-0x7b],ah
  40264d:	mov    esi,0x748e1ea
  402652:	and    eax,0x35a6
  402657:	jb     0x40268a
  402659:	test   DWORD PTR [eax+0x8],esp
  40265c:	je     0x40265e
  40265e:	xor    ebp,DWORD PTR [ebx+0x7ee8e27e]
  402664:	lds    edi,FWORD PTR [edi]
  402666:	leave  
  402667:	stos   DWORD PTR es:[edi],eax
  402668:	sub    DWORD PTR [eax],eax
  40266a:	push   ebp
  40266b:	bound  ecx,QWORD PTR [ecx]
  40266d:	xor    al,0x83
  40266f:	in     al,dx
  402670:	inc    edx
  402671:	add    BYTE PTR [ebp-0x12],dh
  402674:	test   DWORD PTR [ebp+0x8],0x41152e
  40267b:	push   0x58
  40267d:	or     al,0x0
  40267f:	aam    0x3f
  402681:	mov    DWORD PTR [ebp-0xb],0xe94128ff
  402688:	out    0x55,eax
  40268a:	or     BYTE PTR [ecx+0x0],al
  40268d:	push   ds
  40268e:	int    0x0
  402690:	jmp    0x9d3fdf58
  402695:	ds call 0x7d52d0
  40269b:	add    esi,DWORD PTR [ecx]
  40269d:	cli    
  40269e:	xor    ch,al
  4026a0:	into   
  4026a1:	jbe    0x402682
  4026a3:	inc    DWORD PTR [eax]
  4026a5:	or     ebx,DWORD PTR [edi+edi*8-0x17ed778b]
  4026ac:	aas    
  4026ad:	push   ebp
  4026ae:	add    al,0x0
  4026b0:	(bad)  
  4026b1:	in     eax,dx
  4026b2:	push   cs
  4026b3:	push   ebx
  4026b4:	call   0x40d7cd
  4026b9:	jmp    0x40267c
  4026bb:	pop    ebx
  4026bc:	leave  
  4026bd:	xchg   edx,eax
  4026be:	or     eax,DWORD PTR [eax]
  4026c0:	push   ebp
  4026c1:	fucomi st,st(6)
  4026c3:	push   ebx
  4026c4:	xor    ebp,0xb
  4026c7:	add    BYTE PTR [ebp+0x5f],dh
  4026ca:	mov    BYTE PTR [ebp+0x8],0x97
  4026ce:	sub    eax,DWORD PTR [ecx+0x0]
  4026d1:	mov    ds:0x4d000c60,eax
  4026d6:	pop    es
  4026d7:	mov    DWORD PTR [ebp+0x14],0x104128ce
  4026de:	mov    esi,0xe9b80875
  4026e3:	int3   
  4026e4:	add    BYTE PTR [eax],ah
  4026e6:	mov    bl,al
  4026e8:	dec    DWORD PTR ds:0xd4e1e80f
  4026ee:	add    al,BYTE PTR [eax]
  4026f0:	add    eax,DWORD PTR [eax]
  4026f2:	enter  0x5341,0xe8
  4026f6:	mov    edi,DWORD PTR [edx-0x64940001]
  4026fc:	push   DWORD PTR [ebp-0x28]
  4026ff:	adc    eax,ebp
  402701:	jmp    0x402737
  402703:	add    eax,DWORD PTR [eax]
  402705:	dec    DWORD PTR [ebp+0x68e8530e]
  40270b:	iret   
  40270c:	add    BYTE PTR [eax],al
  40270e:	pop    es
  40270f:	cmp    BYTE PTR [eax],cl
  402711:	call   0x3fe13e
  402716:	sub    eax,edx
  402718:	pop    ebx
  402719:	leave  
  40271a:	push   edx
  40271b:	or     eax,DWORD PTR [eax]
  40271d:	push   ebp
  40271e:	cmp    DWORD PTR [edx-0x11],esp
  402721:	cmp    DWORD PTR [ebp+0xc],0x36
  402725:	push   0x3e834
  40272a:	xchg   ecx,eax
  40272b:	adc    eax,0x5f7effda
  402730:	dec    eax
  402731:	cld    
  402732:	mov    edx,0xf8295dab
  402737:	call   0xb27b9c3f
  40273c:	idiv   dh
  40273e:	in     al,0xb4
  402740:	push   0x0
  402742:	jecxz  0x40272c
  402744:	fdiv   QWORD PTR [ebp+0x41]
  402747:	xor    eax,DWORD PTR [edi+edi*8]
  40274a:	sub    al,0x1f
  40274c:	sub    eax,DWORD PTR [ecx+0x39]
  40274f:	ins    BYTE PTR es:[edi],dx
  402750:	les    edi,FWORD PTR [ecx-0x7f]
  402753:	scas   al,BYTE PTR es:[edi]
  402754:	push   edi
  402755:	cld    
  402756:	add    BYTE PTR [ecx],ah
  402758:	cld    
  402759:	fdivr  st,st(7)
  40275b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40275d:	inc    edi
  40275e:	cld    
  40275f:	cmp    edi,esp
  402761:	add    eax,DWORD PTR [eax]
  402763:	(bad)  
  402764:	imul   ebp,DWORD PTR [ebx],0x2f723941
  40276a:	mov    ebp,DWORD PTR [esi]
  40276c:	push   edx
  40276d:	inc    edi
  40276e:	or     BYTE PTR [esi+edx*2+0x5d],dl
  402772:	push   esi
  402774:	nop
  402775:	inc    ecx
  402776:	add    al,0x64
  402778:	add    ch,BYTE PTR [edx+0x0]
  40277b:	mov    ah,0xa9
  40277d:	or     edx,DWORD PTR [eax+0x51]
  402780:	and    eax,0x4e39412a
  402785:	adc    ch,al
  402787:	ins    BYTE PTR es:[edi],dx
  402788:	inc    ebp
  402789:	(bad)  
  40278b:	xor    ah,BYTE PTR [edi]
  40278d:	pop    eax
  40278e:	add    eax,0xebdfacb0
  402793:	inc    ecx
  402794:	push   0xffffffc5
  402796:	add    al,0xba
  402798:	add    dh,ah
  40279a:	add    ebp,DWORD PTR [esi+ecx*8]
  40279d:	jb     0x4027e6
  40279f:	popf   
  4027a0:	cmp    eax,0x3dc220
  4027a5:	mov    ah,0x88
  4027a7:	popf   
  4027a8:	xor    DWORD PTR [edx+0x47],esi
  4027ab:	xor    DWORD PTR [ecx],ecx
  4027ad:	sub    DWORD PTR [eax+0x34],ebx
  4027b0:	xor    BYTE PTR [ecx+0x3109ec03],0x4
  4027b7:	cmp    DWORD PTR [eax],eax
  4027b9:	jmp    0xc2b027f6
  4027be:	in     eax,0x3
  4027c0:	sar    edi,cl
  4027c2:	inc    edx
  4027c3:	add    al,0xe3
  4027c5:	add    BYTE PTR [ebx+0x4],al
  4027c8:	jecxz  0x4027c9
  4027ca:	push   eax
  4027cb:	test   BYTE PTR [ecx],bh
  4027cd:	add    cl,ch
  4027cf:	fadd   st(4),st
  4027d1:	pop    es
  4027d2:	shl    esp,0x2
  4027d5:	add    cl,ch
  4027d7:	mov    BYTE PTR [ecx],dl
  4027d9:	sub    DWORD PTR [ecx+0x3a09ad40],ebp
  4027df:	in     al,dx
  4027e0:	pop    ss
  4027e1:	leave  
  4027e2:	jmp    0xe93ef8ea
  4027e7:	add    edi,DWORD PTR [ecx]
  4027e9:	cmp    DWORD PTR [eax+0x14003dc1],esi
  4027ef:	mov    DWORD PTR ds:0x420c2c89,ecx
  4027f5:	shl    ch,0x6
  4027f8:	mov    ecx,0x3056e917
  4027fd:	cwde   
  4027fe:	jmp    0x20406106
  402803:	sar    DWORD PTR ds:0x41564e00,0xe8
  40280a:	cmp    ecx,eax
  40280c:	cmp    DWORD PTR [eax],eax
  40280e:	push   0xffffffdb
  402810:	mov    esi,0xe3e40053
  402815:	out    dx,eax
  402816:	(bad)  
  402817:	call   0x29d53556
  40281c:	xor    eax,0x12c096
  402821:	aaa    
  402822:	cwde   
  402823:	add    cl,ch
  402825:	cmp    al,BYTE PTR [eax]
  402827:	leave  
  402828:	sub    esi,DWORD PTR [esi]
  40282a:	add    BYTE PTR [ebp+0x72],dl
  40282d:	xchg   esi,eax
  40282e:	add    ah,0xfd
  402831:	adc    DWORD PTR [eax],eax
  402833:	push   0xffffffe9
  402835:	xchg   ebp,eax
  402836:	push   edx
  402837:	or     BYTE PTR [ecx],al
  402839:	or     eax,0xc037e900
  40283f:	je     0x402854
  402841:	and    eax,0x778ae830
  402846:	fdiv   st(7),st
  402848:	pusha  
  402849:	clc    
  40284a:	fistp  DWORD PTR [eax+0x19]
  40284d:	bound  edx,QWORD PTR [edx-0x4]
  402850:	mov    esi,0x79e807e8
  402855:	push   es
  402856:	add    DWORD PTR [eax],eax
  402858:	loop   0x402854
  40285a:	push   ebp
  40285b:	or     al,0xa6
  40285d:	mov    ah,bl
  40285f:	call   0x1c277d
  402864:	ret    0xe7fa
  402867:	add    esp,DWORD PTR [edx+0x78]
  40286a:	fmul   st(1),st
  40286c:	stos   DWORD PTR es:[edi],eax
  40286d:	cmp    DWORD PTR [eax],eax
  40286f:	push   ebp
  402870:	jb     0x402883
  402872:	xor    BYTE PTR [ebx+0x10664114],cl
  402878:	sbb    bl,ch
  40287a:	test   dl,bh
  40287c:	data16 add ah,BYTE PTR [edi+0x0]
  402880:	sar    DWORD PTR [edx],cl
  402882:	add    ax,bx
  402885:	add    BYTE PTR [edx],bh
  402887:	add    ax,cx
  40288a:	cmp    al,BYTE PTR [eax]
  40288c:	add    BYTE PTR [eax],al
  40288e:	push   eax
  40288f:	mov    bh,0x75
  402891:	or     BYTE PTR [eax+0x2b],ch
  402894:	retf   
  402895:	add    BYTE PTR [eax-0x1bbffc74],ah
  40289b:	adc    ebp,DWORD PTR [edx+0x0]
  40289e:	loopne 0x402887
  4028a0:	ins    BYTE PTR es:[edi],dx
  4028a1:	retf   
  4028a2:	nop
  4028a3:	dec    DWORD PTR [eax+0x6d9c43]
  4028a9:	push   0xffffffa0
  4028ab:	ins    DWORD PTR es:[edi],dx
  4028ac:	add    BYTE PTR [edx-0x6e],ch
  4028af:	ins    DWORD PTR es:[edi],dx
  4028b0:	add    bh,bh
  4028b2:	ret    
  4028b3:	out    0x5e,eax
  4028b5:	retf   
  4028b6:	pusha  
  4028b7:	dec    DWORD PTR [edx]
  4028b9:	shl    ah,0x25
  4028bc:	mov    DWORD PTR [ebx+0x54],eax
  4028bf:	ins    DWORD PTR es:[edi],dx
  4028c0:	add    BYTE PTR [edx+0x50],ch
  4028c3:	ins    DWORD PTR es:[edi],dx
  4028c4:	add    BYTE PTR [edx+0x64],ch
  4028c7:	psubsb mm1,QWORD PTR [edi-0x65]
  4028cb:	(bad)  
  4028cc:	dec    DWORD PTR [eax-0x3ff4f3ed]
  4028d2:	add    eax,0x2473ff20
  4028d7:	out    0xf2,eax
  4028d9:	retf   0xff20
  4028dc:	(bad)  
  4028dd:	xor    ecx,eax
  4028df:	jmp    0xbe5029ae
  4028e4:	add    edi,edi
  4028e6:	scas   eax,DWORD PTR es:[edi]
  4028e7:	mov    ch,0xff
  4028e9:	jmp    0x4028eb
  4028eb:	in     eax,dx
  4028ec:	mov    ch,0x33
  4028ee:	call   0x40f5cf
  4028f3:	xlat   BYTE PTR ds:[ebx]
  4028f4:	add    edi,edi
  4028f6:	jmp    FWORD PTR [edi-0x4a]
  4028f9:	sub    eax,eax
  4028fb:	test   eax,0x650f0841
  402900:	mov    edi,0x712c95b
  402905:	add    BYTE PTR [ebp+0x39],dl
  402908:	pop    esi
  402909:	out    0x53,eax
  40290b:	ret    0xbab
  40290e:	add    DWORD PTR [edx],0x42
  402911:	dec    edi
  402912:	pop    ss
  402913:	mov    esi,0x40e80b95
  402918:	push   ds
  402919:	add    eax,DWORD PTR [eax]
  40291b:	scas   al,BYTE PTR es:[edi]
  40291c:	xchg   ebp,eax
  40291d:	jmp    edi
  40291f:	aam    0xe
  402921:	add    eax,DWORD PTR [eax]
  402923:	sahf   
  402924:	mov    ch,0xeb
  402926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402927:	sub    eax,0x3
  40292a:	pop    ebx
  40292b:	and    BYTE PTR [esi],0xff
  40292e:	(bad)  
  40292f:	in     eax,dx
  402930:	dec    ebp
  402931:	out    0x81,eax
  402933:	jne    0x40293d
  402935:	jmp    0x2c83:0x327a76ff
  40293c:	push   esp
  40293d:	sub    eax,DWORD PTR [ecx+0x39]
  402940:	jmp    0xf39e3e94
  402945:	dec    esi
  402946:	sub    al,bh
  402948:	call   0xc990b438
  40294d:	fld    st(7)
  40294f:	add    BYTE PTR [esp+ebx*1],bh
  402952:	sub    al,0x41
  402954:	cmp    ecx,ebp
  402956:	add    eax,DWORD PTR [eax]
  402958:	cmp    DWORD PTR [esi+0x17],esp
  40295b:	jns    0x4029be
  40295d:	sub    BYTE PTR [eax+eax*1],al
  402960:	lods   eax,DWORD PTR ds:[esi]
  402961:	(bad)  
  402963:	xor    eax,0x42afa0
  402968:	and    DWORD PTR [ebx+ebx*8],eax
  40296b:	dec    DWORD PTR [esi]
  40296d:	mov    ds:0x285178ff,eax
  402972:	add    al,0x0
  402974:	cmp    edi,esp
  402976:	add    ecx,DWORD PTR [ebp-0x16a844]
  40297c:	out    dx,al
  40297d:	imul   ebx
  40297f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402980:	jmp    0xad198f85
  402985:	or     DWORD PTR [ebp-0x17],0xffffffd6
  402989:	fnstcw WORD PTR [ecx+0x4ed0b3eb]
  40298f:	fnstenv [ebx+eax*2+0x5b513445]
  402996:	adc    DWORD PTR [ebx+0x39],eax
  402999:	push   0x803903eb
  40299e:	inc    ecx
  40299f:	jno    0x402a13
  4029a1:	add    cl,ch
  4029a3:	or     al,0x79
  4029a5:	or     DWORD PTR [ebp+edi*1+0x38],esp
  4029a9:	add    cl,ch
  4029ab:	shl    BYTE PTR [esp+edx*8+0x86d8fe],0xe9
  4029b3:	add    eax,DWORD PTR [eax]
  4029b5:	cmp    ecx,eax
  4029b7:	fsub   QWORD PTR fs:[esi-0x27]
  4029bb:	neg    al
  4029bd:	ds add cl,ch
  4029c0:	ins    DWORD PTR es:[edi],dx
  4029c1:	cmp    DWORD PTR [esi-0x17],esp
  4029c4:	ins    DWORD PTR es:[edi],dx
  4029c5:	cmp    DWORD PTR [esi-0x17],esp
  4029c8:	xchg   BYTE PTR [eax+ebx*8+0x304ed8c6],bh
  4029cf:	pop    esp
  4029d0:	jle    0x402a17
  4029d2:	jmp    0xd92a029d
  4029d7:	je     0x4029a8
  4029d9:	fnstenv es:[esi-0x3e235b28]
  4029e0:	ss repnz (bad) 
  4029e3:	call   0x644922f4
  4029e8:	hlt    
  4029e9:	cmp    DWORD PTR [eax],eax
  4029eb:	jmp    0x2868265b
  4029f0:	add    al,0x91
  4029f2:	pop    ebx
  4029f3:	rol    DWORD PTR [edx+0x39],1
  4029f6:	call   0xd93701f9
  4029fb:	add    dl,ah
  4029fd:	cli    
  4029fe:	or     BYTE PTR [eax+edi*2+0x7200003a],al
  402a05:	stos   BYTE PTR es:[edi],al
  402a06:	mov    al,BYTE PTR [ebp-0x271ea3]
  402a0c:	mov    ecx,0x4dbce804
  402a11:	loope  0x4029eb
  402a13:	or     ebp,DWORD PTR [ecx]
  402a15:	xor    DWORD PTR [edx+ebx*8+0x3a00e9],eax
  402a1c:	mov    DWORD PTR [edx+ebx*4-0x18],ebp
  402a20:	jmp    FWORD PTR [esi]
  402a22:	mov    edi,0x8116e882
  402a27:	fcom   DWORD PTR [eax-0x6f]
  402a2a:	stos   DWORD PTR es:[edi],eax
  402a2b:	daa    
  402a2c:	inc    ecx
  402a2d:	jmp    0xff20bca3
  402a32:	outs   dx,BYTE PTR ds:[esi]
  402a33:	fsubr  DWORD PTR [eax-0x15]
  402a36:	cmp    al,BYTE PTR [eax]
  402a38:	adc    BYTE PTR [ecx],0xc9
  402a3b:	aam    0xff
  402a3d:	test   BYTE PTR [edx-0x40],0xf
  402a41:	gs (bad) 
  402a43:	(bad)  
  402a44:	(bad)  
  402a45:	call   0xee420205
  402a4a:	aam    0x7b
  402a4c:	add    cl,ch
  402a4e:	cmp    dh,BYTE PTR [eax]
  402a50:	call   DWORD PTR [ebp+edx*2+0x5c6ffe8]
  402a57:	fnstenv [ebp-0x27e147]
  402a5d:	shr    DWORD PTR [ecx*8+0x7db0aeff],0xe8
  402a65:	xchg   esi,eax
  402a66:	push   es
  402a67:	fcom   DWORD PTR [eax+0x11]
  402a6a:	cld    
  402a6b:	sub    BYTE PTR [ecx-0x17],al
  402a6e:	out    0x8d,eax
  402a70:	loopne 0x402af0
  402a72:	out    dx,al
  402a73:	xlat   BYTE PTR ds:[ebx]
  402a74:	push   0x41200
  402a79:	or     al,0x47
  402a7c:	sti    
  402a7d:	inc    DWORD PTR [eax]
  402a7f:	addr16 or eax,eax
  402a82:	je     0x402aa0
  402a84:	cmp    DWORD PTR [ebp-0x507818],0x1
  402a8b:	out    dx,al
  402a8c:	cli    
  402a8d:	dec    edi
  402a8e:	push   eax
  402a8f:	push   ebp
  402a90:	cmp    esp,0x50af77ef
  402a96:	call   0x40ef23
  402a9b:	ror    BYTE PTR [eax-0x5108037b],1
  402aa1:	call   DWORD PTR [eax+0x57]
  402aa4:	jno    0x402a92
  402aa6:	out    dx,eax
  402aa7:	push   edi
  402aa8:	scas   eax,DWORD PTR es:[edi]
  402aa9:	call   0xffef577d
  402aae:	pop    eax
  402aaf:	daa    
  402ab0:	jno    0x402a9a
  402ab2:	out    dx,eax
  402ab3:	aaa    
  402ab4:	scas   eax,DWORD PTR es:[edi]
  402ab5:	push   eax
  402ab6:	(bad)  
  402ab7:	cmp    eax,0x77ffefe8
  402abc:	jmp    0x402a7a
  402abe:	hlt    
  402abf:	scas   al,BYTE PTR es:[di]
  402ac1:	call   0xffee92df
  402ac6:	jmp    0x402af8
  402ac8:	mov    DWORD PTR [ebp-0x517804],eax
  402ace:	push   eax
  402acf:	js     0x402acf
  402ad1:	enter  0x5000,0x43
  402ad5:	push   eax
  402ad6:	(bad)  
  402ad7:	int    0xae
  402ad9:	out    dx,eax
  402ada:	push   edi
  402adc:	adc    bh,bh
  402ade:	mov    ch,0xf4
  402ae0:	(bad)  
  402ae2:	inc    DWORD PTR [eax]
  402ae4:	clc    
  402ae5:	dec    edi
  402ae6:	hlt    
  402ae7:	call   edi
  402ae9:	jmp    0xb5ff:0xadb7f7f2
  402af0:	cmp    DWORD PTR [ecx-0x7ef9001a],ecx
  402af6:	fdivrp st(7),st
  402af8:	(bad)  
  402af9:	jge    0x402ad1
  402afb:	test   ebp,ebp
  402afd:	test   esi,edx
  402aff:	jmp    eax
  402b01:	adc    eax,0x65e6ffd5
  402b06:	push   eax
  402b07:	cld    
  402b08:	shr    esi,1
  402b0a:	leave  
  402b0b:	add    BYTE PTR [ecx],bh
  402b0d:	mov    bl,0x3
  402b0f:	inc    DWORD PTR [eax+edi*1+0x40c6ffe6]
  402b16:	xor    esi,esp
  402b18:	mov    esi,0xb600693d
  402b1d:	dec    ebx
  402b1e:	out    0xef,eax
  402b20:	scas   al,BYTE PTR es:[edi]
  402b21:	or     eax,0x25ad43eb
  402b26:	(bad)  
  402b27:	lea    esi,[esp+eax*1-0x6769001a]
  402b2e:	(bad)  
  402b2f:	mov    ch,0x89
  402b31:	std    
  402b32:	aad    0xff
  402b34:	xchg   ecx,eax
  402b35:	sbb    cl,ah
  402b37:	add    BYTE PTR [ecx],bh
  402b39:	fs ret 
  402b3b:	js     0x402b3f
  402b3d:	(bad)  
  402b3e:	(bad)  
  402b3f:	lock pop esi
  402b41:	int    0xd5
  402b43:	call   0x16014e
  402b48:	add    BYTE PTR [eax+0x56efec63],dh
  402b4e:	mov    ch,0xd5
  402b50:	mov    ch,0x61
  402b52:	mov    ebp,0x6551ffd5
  402b57:	int    0xff
  402b59:	mov    DWORD PTR ds:[edi+0x28],ecx
  402b5d:	js     0x402b46
  402b5f:	aam    0xb5
  402b61:	adc    eax,0x11ffd5bf
  402b66:	push   0xffffffcc
  402b68:	add    BYTE PTR [ecx],bh
  402b6a:	add    dl,dh
  402b6c:	ret    
  402b6d:	(bad)  
  402b6e:	stc    
  402b6f:	jno    0x402af8
  402b71:	and    esi,esp
  402b73:	xchg   esi,eax
  402b74:	aad    0xb2
  402b76:	shl    BYTE PTR [edx+0x17],1
  402b79:	test   BYTE PTR [eax],ch
  402b7b:	sub    BYTE PTR [edx+ebp*8],al
  402b7e:	pushf  
  402b7f:	jle    0x402b10
  402b81:	aad    0xe5
  402b83:	jbe    0x402b5a
  402b85:	shl    DWORD PTR [edi-0x5f],1
  402b88:	add    al,0x39
  402b8a:	sub    DWORD PTR [eax+eiz*8-0x1a],0xffffffd5
  402b8f:	pop    esi
  402b90:	xor    al,0xce
  402b92:	mov    eax,DWORD PTR [ebp-0x1b]
  402b95:	(bad)  
  402b96:	aad    0x41
  402b98:	push   ebx
  402b99:	lock add cl,ch
  402b9c:	jle    0x402c17
  402b9e:	pop    eax
  402b9f:	mov    dl,0xd4
  402ba1:	in     al,0xe4
  402ba3:	inc    esi
  402ba4:	aad    0xa6
  402ba6:	call   0xd5df11da
  402bab:	jo     0x402c2c
  402bad:	add    BYTE PTR [ecx-0x712ae11b],ah
  402bb3:	mov    eax,DWORD PTR [ecx]
  402bb5:	in     eax,0x86
  402bb7:	aad    0x1
  402bb9:	push   ss
  402bba:	xchg   ch,dl
  402bbc:	push   es
  402bbd:	mov    eax,ds:0x3a827f0
  402bc2:	outs   dx,BYTE PTR ds:[esi]
  402bc3:	mov    ecx,DWORD PTR ds:0x1d566e5
  402bc9:	and    esi,DWORD PTR [ecx+0x0]
  402bcc:	jmp    0x28ca4d9
  402bd1:	mov    DWORD PTR [eax+ebp*8-0x76b92b3a],edi
  402bd8:	(bad)  [eax+0x431156fc]
  402bde:	cmp    ecx,edx
  402be0:	test   esp,edx
  402be2:	in     al,0xdb
  402be4:	add    dh,al
  402be6:	or     eax,0xf2e1e8d5
  402beb:	(bad)  
  402bec:	jmp    DWORD PTR [ebp-0x61103039]
  402bf2:	in     eax,0xe7
  402bf4:	pop    edx
  402bf5:	xchg   ebp,ebp
  402bf7:	aam    0xff
  402bf9:	push   esp
  402bfa:	push   ss
  402bfb:	in     eax,0xff
  402bfd:	xchg   dl,ah
  402bff:	inc    esp
  402c00:	out    dx,al
  402c01:	jle    0x402c08
  402c03:	xor    eax,0x2af9a05e
  402c08:	mov    edi,DWORD PTR [ebp+0x50]
  402c0b:	or     al,ch
  402c0d:	push   edx
  402c0e:	add    al,0xd5
  402c10:	push   DWORD PTR [edx+0x0]
  402c13:	mov    dl,ah
  402c15:	xor    eax,0x3f123a
  402c1a:	pop    esi
  402c1b:	cmp    ch,dl
  402c1d:	jne    0x402c10
  402c1f:	mov    ebp,0x9f700441
  402c24:	mov    cl,0x28
  402c26:	test   al,0x3a
  402c28:	mov    edx,0x8b2b3ae5
  402c2e:	adc    eax,0xb6f8bbb9
  402c33:	int    0x3a
  402c35:	clc    
  402c36:	jmp    0x6a402c75
  402c3b:	out    0x7,eax
  402c3d:	add    BYTE PTR [ebp+0x68],bh
  402c40:	aad    0x75
  402c42:	in     eax,dx
  402c43:	test   DWORD PTR [edx+0x8],ecx
  402c46:	cmp    DWORD PTR [edx],0xffffffe8
  402c49:	push   es
  402c4a:	repz mov dl,ah
  402c4d:	mov    DWORD PTR [ecx+ebp*2],ebp
  402c50:	call   0xd440d25c
  402c55:	add    cl,ch
  402c57:	cmp    al,BYTE PTR [eax]
  402c59:	mov    ecx,DWORD PTR [esi+eax*4]
  402c5c:	daa    
  402c5d:	inc    ecx
  402c5e:	add    BYTE PTR [eax],ah
  402c60:	mov    bl,0x13
  402c62:	mov    edx,DWORD PTR [ebp-0x50]
  402c65:	cmp    eax,DWORD PTR [edi+0x14]
  402c68:	cmp    DWORD PTR [ecx],ecx
  402c6a:	(bad)  
  402c6b:	push   ebp
  402c6c:	les    eax,FWORD PTR [ecx]
  402c6e:	add    BYTE PTR [eax],ah
  402c70:	add    bl,ch
  402c72:	push   es
  402c73:	mov    ebp,edi
  402c75:	or     bh,bh
  402c77:	add    BYTE PTR ds:0xa87d83b5,ah
  402c7d:	cld    
  402c7e:	je     0x402c88
  402c80:	mov    edi,0x62e8fc39
  402c85:	scas   eax,DWORD PTR es:[edi]
  402c86:	(bad)  
  402c87:	call   FWORD PTR [ebx+0x49]
  402c8a:	clc    
  402c8b:	pop    edi
  402c8c:	cdq    
  402c8d:	mov    edx,0x52970008
  402c92:	cmp    eax,0x3d28d3
  402c97:	jmp    0x402c71
  402c99:	push   ss
  402c9a:	mov    edi,DWORD PTR [edi]
  402c9c:	js     0x402ce5
  402c9e:	idiv   bh
  402ca0:	call   edx
  402ca2:	(bad)  
  402ca3:	jne    0x402d09
  402ca5:	mov    DWORD PTR ds:0x3d38d3,0xffff9000
  402caf:	pop    esi
  402cb0:	arpl   WORD PTR [ecx],bx
  402cb2:	mov    ebp,esp
  402cb4:	(bad)  
  402cb5:	sbb    DWORD PTR [edx+0x0],ebp
  402cb8:	das    
  402cb9:	cmp    DWORD PTR [eax],ecx
  402cbb:	call   0x3ff217
  402cc0:	jmp    0x402c85
  402cc2:	push   DWORD PTR [ebp+0x68]
  402cc5:	mov    bh,0x22
  402cc7:	(bad)  
  402cc8:	push   eax
  402cc9:	inc    DWORD PTR [edx+0xf3951f8]
  402ccf:	push   edi
  402cd0:	loopne 0x402cbf
  402cd2:	and    DWORD PTR [ebp+0x48],esi
  402cd5:	ret    
  402cd6:	lea    esi,[edi+0x39]
  402cd9:	call   0x4a40f55c
  402cde:	jge    0x402d12
  402ce0:	push   0x44f07b
  402ce5:	xchg   BYTE PTR [ecx-0x16c63792],dh
  402ceb:	(bad)  
  402cec:	mov    edi,0x40c9dda5
  402cf1:	cmp    eax,0xa35c5de9
  402cf6:	jmp    0xa0f71535
  402cfb:	add    eax,DWORD PTR [eax]
  402cfd:	xor    ch,BYTE PTR [ecx-0x1700faa9]
  402d03:	add    ebp,ebx
  402d05:	cmp    bl,BYTE PTR [ebx-0x7e71fff6]
  402d0b:	mov    dl,0xc6
  402d0d:	cmp    ecx,ebp
  402d0f:	xchg   al,bh
  402d11:	cmp    dh,BYTE PTR [edx-0x16c939fa]
  402d17:	jle    0x402ce0
  402d19:	mov    bh,BYTE PTR [si+0x35c2]
  402d1e:	jmp    0x65e5b85b
  402d23:	(bad)  
  402d24:	cld    
  402d25:	ret    0xff9b
  402d28:	add    al,0x39
  402d2a:	mov    ecx,0x41090003
  402d2f:	shl    ebp,0x96
  402d32:	sbb    DWORD PTR [ebp+eax*2-0x73],edi
  402d36:	icebp  
  402d37:	push   edi
  402d38:	or     al,0x86
  402d3a:	jae    0x402d0b
  402d3c:	inc    DWORD PTR [ecx+eiz*8]
  402d3f:	fcomi  st,st(4)
  402d41:	add    BYTE PTR [ecx+edi*8-0x2f],ch
  402d45:	jmp    esp
  402d47:	mov    eax,0xca3575d2
  402d4c:	push   edi
  402d4d:	cld    
  402d4e:	push   ecx
  402d4f:	pusha  
  402d50:	or     BYTE PTR [eax],al
  402d52:	cmp    DWORD PTR [eax],eax
  402d54:	out    0x57,al
  402d56:	dec    ebp
  402d57:	out    0x79,eax
  402d59:	xlat   BYTE PTR ds:[ebx]
  402d5a:	inc    esi
  402d5b:	shl    BYTE PTR [eax+0x3a002dc6],cl
  402d61:	pop    esp
  402d62:	push   esi
  402d63:	daa    
  402d64:	sub    BYTE PTR [ecx+eiz*1],al
  402d67:	scas   al,BYTE PTR es:[edi]
  402d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d69:	add    al,0x39
  402d6b:	add    eax,0x854b58a9
  402d70:	xchg   ecx,eax
  402d71:	pop    esp
  402d72:	bound  esp,QWORD PTR [edi]
  402d74:	sub    BYTE PTR [edx+ebp*2],al
  402d77:	call   0x79f82d
  402d7c:	dec    edx
  402d7d:	adc    dl,BYTE PTR [eax+0x3f]
  402d80:	jmp    0x726c27b1
  402d85:	loopne 0x402d0e
  402d87:	sub    eax,0x86cd116
  402d8c:	sbb    DWORD PTR [edi+0x73e900f7],0x8dcc042
  402d96:	outs   dx,BYTE PTR ds:[esi]
  402d97:	xor    eax,0x8fbbabf
  402d9c:	jmp    0x79486a1d
  402da1:	jge    0x402d34
  402da3:	jo     0x402e17
  402da5:	push   edi
  402da6:	add    BYTE PTR ds:0xe0d02925,bh
  402dac:	shl    DWORD PTR [esi],1
  402dae:	rcr    DWORD PTR [esi-0x565dc490],1
  402db4:	and    dh,0x3
  402db7:	add    eax,0x9134b5f7
  402dbc:	jnp    0x402ded
  402dbe:	add    al,0x39
  402dc0:	add    eax,0x313e5729
  402dc5:	mov    ds:0xf1be8031,al
  402dca:	add    esi,DWORD PTR [eax+0x7369fffa]
  402dd0:	cld    
  402dd1:	jmp    0x3ae8:0xffffc517
  402dd8:	xor    DWORD PTR [ebx+0x3f],ebx
  402ddb:	cmp    BYTE PTR [esi-0x7af816f8],0xec
  402de2:	bound  edi,QWORD PTR [edi+0x8]
  402de5:	or     ebp,DWORD PTR [ecx+0x17ffb86]
  402deb:	cmp    eax,0x3a71094b
  402df0:	add    BYTE PTR [eax],al
  402df2:	jmp    0xe944ebca
  402df7:	sub    eax,0xbaf6ebae
  402dfc:	pop    ss
  402dfd:	pop    esp
  402dfe:	sbb    eax,0xbe388036
  402e03:	(bad)  
  402e04:	stc    
  402e05:	mov    ecx,0x3ae8
  402e0a:	xchg   edx,eax
  402e0b:	add    BYTE PTR [edi],bh
  402e0d:	xchg   esi,eax
  402e0e:	add    cl,ch
  402e10:	cmp    al,BYTE PTR [eax]
  402e12:	inc    eax
  402e13:	imul   eax,DWORD PTR [edx+0x0],0xbe4d4d75
  402e1a:	leave  
  402e1b:	sub    edi,DWORD PTR [esi]
  402e1d:	add    BYTE PTR [ebp+0x62],dl
  402e20:	fisubr WORD PTR [eax]
  402e22:	push   esi
  402e23:	mov    edx,0xec0c3b35
  402e28:	cmp    bh,ah
  402e2a:	(bad)  
  402e2b:	call   0x41910e1b
  402e30:	in     al,0xcb
  402e32:	jmp    FWORD PTR [esi]
  402e34:	adc    eax,0xd418bd8
  402e39:	dec    ebx
  402e3a:	or     BYTE PTR [edx+0x47],dh
  402e3d:	add    al,0xeb
  402e3f:	jmp    0x402e17
  402e41:	inc    esi
  402e42:	or     esp,DWORD PTR [eax]
  402e44:	push   cs
  402e45:	sti    
  402e46:	jg     0x402e48
  402e48:	jbe    0x402e1c
  402e4a:	je     0x402e41
  402e4c:	imul   edx,DWORD PTR [ebp+0x15ec0274],0x2b
  402e53:	sar    dl,0x79
  402e56:	leave  
  402e57:	jne    0x402ed7
  402e59:	push   esp
  402e5a:	ret    
  402e5b:	pop    ebx
  402e5c:	push   es
  402e5d:	and    ecx,ecx
  402e5f:	ret    0xfc58
  402e62:	push   edx
  402e63:	push   esi
  402e64:	leave  
  402e65:	clc    
  402e66:	(bad)  
  402e67:	jmp    DWORD PTR [eax]
  402e69:	push   esp
  402e6a:	xor    edx,edx
  402e6c:	xor    bl,0xda
  402e6f:	nop
  402e70:	add    BYTE PTR [esp+edx*2+0x54e0b60f],dh
  402e77:	cmp    al,0x2b
  402e79:	nop
  402e7a:	sub    DWORD PTR [esi],eax
  402e7c:	nop
  402e7d:	xchg   ebx,eax
  402e7e:	ret    0x903e
  402e81:	push   ebx
  402e82:	lock cs nop
  402e85:	dec    ebp
  402e86:	push   es
  402e87:	nop
  402e88:	and    DWORD PTR [edx-0x5bbc7001],0xfffffff3
  402e8f:	(bad)  
  402e90:	jl     0x402e6c
  402e92:	(bad)  
  402e93:	cmp    BYTE PTR [eax+0x403f8e7],dl
  402e99:	jecxz  0x402e2e
  402e9b:	inc    ebx
  402e9c:	cmp    al,0x91
  402e9e:	push   ebx
  402e9f:	jl     0x402eac
  402ea1:	and    al,0x1a
  402ea3:	nop
  402ea4:	jg     0x402e44
  402ea6:	out    dx,eax
  402ea7:	inc    eax
  402ea8:	nop
  402ea9:	mov    ds:0x713c4393,eax
  402eae:	push   ebx
  402eaf:	jl     0x402ebb
  402eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb2:	cmp    DWORD PTR [eax+0x46ef9d7f],edx
  402eb8:	add    edx,DWORD PTR [eax+0x43]
  402ebb:	rol    edx,0x9e
  402ebe:	loope  0x402e71
  402ec0:	sar    DWORD PTR [ecx],0x23
  402ec3:	push   es
  402ec4:	mov    edi,DWORD PTR [ebx-0x52]
  402ec7:	mov    ebx,0x3ad161c1
  402ecc:	nop
  402ecd:	mov    dl,0x12
  402ecf:	je     0x402f2f
  402ed1:	add    bl,BYTE PTR [edx]
  402ed3:	cmp    DWORD PTR [ebx+0x366a6500],ecx
  402ed9:	push   esi
  402eda:	dec    ebp
  402edb:	push   edx
  402edc:	pop    eax
  402edd:	or     BYTE PTR [ecx-0x56efafae],ch
  402ee3:	bound  eax,QWORD PTR [eax+0xc]
  402ee6:	leave  
  402ee7:	jmp    0x299c1296
  402eec:	xor    al,0x90
  402eee:	adc    DWORD PTR [ebx],ecx
  402ef0:	iret   
  402ef1:	call   FWORD PTR [esi]
  402ef3:	sub    DWORD PTR [eax-0x661e6837],ecx
  402ef9:	shl    DWORD PTR [ecx],0xd1
  402efc:	jae    0x402f41
  402efe:	sbb    esp,DWORD PTR [ecx+0x59a95973]
  402f04:	lds    eax,FWORD PTR [ecx+ecx*8]
  402f07:	pop    ecx
  402f08:	fadd   QWORD PTR [ecx+ecx*8]
  402f0b:	add    eax,0x99b290ae
  402f10:	jae    0x402f70
  402f12:	jle    0x402f06
  402f14:	mov    esp,0x38d945c2
  402f19:	mov    ebx,ebp
  402f1b:	push   edi
  402f1c:	(bad)  
  402f1d:	in     al,dx
  402f1e:	(bad)  
  402f1f:	sub    eax,0x121253ce
  402f24:	add    BYTE PTR [ebp-0x4b],0x88
  402f28:	pop    ebx
  402f29:	inc    edi
  402f2a:	pusha  
  402f2b:	cwde   
  402f2c:	add    edi,edi
  402f2e:	ins    BYTE PTR es:[edi],dx
  402f2f:	ins    DWORD PTR es:[edi],dx
  402f30:	sbb    al,0x41
  402f32:	cmp    DWORD PTR [ecx+0x26],eax
  402f35:	(bad)  
  402f36:	cmp    ecx,ebx
  402f38:	cli    
  402f39:	mov    edi,0xcb000400
  402f3e:	into   
  402f3f:	or     al,0xf0
  402f41:	sbb    eax,0xea5a2d58
  402f46:	pop    ecx
  402f47:	cmp    edi,ecx
  402f49:	xchg   esp,eax
  402f4a:	sti    
  402f4b:	outs   dx,DWORD PTR ds:[esi]
  402f4c:	push   esp
  402f4d:	add    eax,0xe9c64ddb
  402f52:	add    esi,DWORD PTR [edx]
  402f54:	sar    BYTE PTR [esp+eax*1-0x6],0xce
  402f59:	je     0x402f2a
  402f5b:	popa   
  402f5c:	fisubr WORD PTR [esp+eax*1-0x23e04c7]
  402f63:	mov    ch,0xc4
  402f65:	jmp    0x64bb686d
  402f6a:	shr    DWORD PTR [edi],1
  402f6c:	into   
  402f6d:	(bad)  
  402f6e:	xor    al,0x91
  402f70:	add    al,0xe8
  402f72:	add    edi,DWORD PTR [ecx]
  402f74:	fcom   DWORD PTR [ebx-0x1dffc638]
  402f7a:	ret    
  402f7b:	test   BYTE PTR ds:[ebp+0x4],dl
  402f7f:	cmp    DWORD PTR [eax],eax
  402f81:	fadd   QWORD PTR [edi]
  402f83:	cmp    BYTE PTR [eax],al
  402f85:	jmp    0xe9dfef86
  402f8a:	add    edi,DWORD PTR [ecx]
  402f8c:	pop    edx
  402f8d:	jmp    0x8011ec10
  402f92:	int    0xde
  402f94:	xor    BYTE PTR [ecx-0x16ff0273],al
  402f9a:	jle    0x402f50
  402f9c:	shl    DWORD PTR [edi-0x33],1
  402f9f:	add    dh,al
  402fa1:	xor    BYTE PTR [ecx+0x44],dl
  402fa4:	mov    edi,0xf6f956cd
  402fa9:	push   ebx
  402faa:	in     eax,dx
  402fab:	pop    ebx
  402fac:	jl     0x402fc6
  402fae:	test   al,0x3
  402fb0:	mov    ah,0x83
  402fb2:	cmp    cl,dh
  402fb4:	sahf   
  402fb5:	int    0x0
  402fb7:	cdq    
  402fb8:	jb     0x402f61
  402fba:	imul   BYTE PTR [esi]
  402fbc:	jl     0x402f8b
  402fbe:	jne    0x402fb1
  402fc0:	dec    edx
  402fc1:	fsub   DWORD PTR [esi+edx*1]
  402fc4:	ins    BYTE PTR es:[edi],dx
  402fc5:	int    0xeb
  402fc7:	out    0x85,al
  402fc9:	push   ebx
  402fca:	or     BYTE PTR [esi+esi*4-0x2f],bl
  402fce:	inc    BYTE PTR [esi]
  402fd0:	je     0x403002
  402fd2:	call   0xdb715
  402fd7:	pusha  
  402fd8:	mov    esi,0x7deefedc
  402fdd:	pop    edx
  402fde:	add    BYTE PTR [ebx+0x3d],dl
  402fe1:	pop    edx
  402fe2:	add    dl,BYTE PTR [ebx+0x35]
  402fe5:	pop    edx
  402fe6:	add    eax,DWORD PTR [ecx+0x3d]
  402fe9:	add    BYTE PTR [eax],al
  402feb:	test   eax,0xc7ec92fd
  402ff0:	cmc    
  402ff1:	int3   
  402ff2:	call   0x4029c4
  402ff7:	pop    edi
  402ff8:	jg     0x402fc2
  402ffa:	inc    eax
  402ffb:	xor    eax,0xf975ce1d
  403000:	cmc    
  403001:	push   edx
  403002:	or     al,0x9e
  403004:	add    BYTE PTR [edi-0x38],ah
  403007:	call   0xd44d3
  40300c:	bound  esp,QWORD PTR [edx+0x28175cc]
  403012:	stos   BYTE PTR es:[edi],al
  403013:	ret    
  403014:	jmp    0xfd1b2953
  403019:	ror    ebp,1
  40301b:	mov    ch,0x7d
  40301d:	cld    
  40301e:	int3   
  40301f:	call   DWORD PTR [ecx+0x37]
  403022:	les    eax,FWORD PTR [eax]
  403024:	jmp    0x582cc316
  403029:	test   esp,ecx
  40302b:	call   0xcb851
  403030:	add    BYTE PTR [ebx],ch
  403032:	rcr    BYTE PTR [ebx-0x37],0x52
  403036:	int    0xff
  403038:	push   esp
  403039:	sbb    ebp,DWORD PTR [ebp-0x44b33b7f]
  40303f:	(bad)  
  403040:	inc    ebx
  403042:	mov    ebx,0x361f0c75
  403047:	or     BYTE PTR [eax-0x59],ch
  40304a:	jmp    0xf67f308f
  40304f:	pop    ebx
  403050:	sub    DWORD PTR [ecx+0x65b9e800],edx
  403056:	mov    eax,0xcc200bff
  40305b:	test   dl,bl
  40305d:	pusha  
  40305e:	add    BYTE PTR [eax],al
  403060:	sub    edi,DWORD PTR [ebx+0x46]
  403063:	test   edi,ebp
  403065:	pop    esi
  403066:	mov    eax,0x780050ff
  40306b:	add    BYTE PTR [ecx],al
  40306d:	add    BYTE PTR [eax],ah
  40306f:	test   al,0xe4
  403071:	ret    
  403072:	adc    BYTE PTR [eax],al
  403074:	or     eax,eax
  403076:	cmovl  edi,DWORD PTR [ebp+0x3d002000]
  40307d:	add    al,0x21
  40307f:	add    BYTE PTR [eax],al
  403081:	seta   BYTE PTR [edx+0x0]
  403085:	add    BYTE PTR [eax],dl
  403087:	dec    ecx
  403088:	inc    ebp
  403089:	cld    
  40308a:	xor    BYTE PTR [edx+edi*4-0x72484017],ch
  403091:	test   edi,ecx
  403093:	mov    dh,0xff
  403095:	inc    DWORD PTR [eax-0x54]
  403098:	dec    edi
  403099:	std    
  40309a:	dec    edi
  40309b:	mov    bh,0xb
  40309d:	rol    ch,0xe3
  4030a0:	addr16 int 0x28
  4030a3:	inc    ebp
  4030a4:	add    BYTE PTR [ebp-0x158ab],cl
  4030aa:	cmp    DWORD PTR [edx],esi
  4030ac:	xor    al,0xe8
  4030ae:	mov    eax,ds:0xa6ffcb34
  4030b3:	mov    ebx,?
  4030b5:	dec    edi
  4030b6:	xchg   ecx,eax
  4030b7:	(bad)  
  4030b8:	sar    edi,1
  4030ba:	xchg   esi,eax
  4030bb:	ds sti 
  4030bd:	inc    BYTE PTR [ecx+eiz*8]
  4030c0:	js     0x403047
  4030c2:	xchg   esi,eax
  4030c3:	and    ecx,ebx
  4030c5:	(bad)  
  4030c6:	jmp    0x7735eabb
  4030cb:	repnz xor edi,edi
  4030ce:	add    ah,ah
  4030d0:	cld    
  4030d1:	xor    ebp,eax
  4030d3:	fucomip st,st(5)
  4030d5:	retf   0x32ff
  4030d8:	sbb    DWORD PTR [eax+0x53],edx
  4030db:	push   esi
  4030dc:	dec    esp
  4030dd:	(bad)  
  4030de:	call   0xb3151
  4030e3:	mov    al,0x1c
  4030e5:	int3   
  4030e6:	cmp    DWORD PTR [eax+eiz*8+0x647b7403],0x40
  4030ee:	hlt    
  4030ef:	mov    DWORD PTR [edx-0xcee03b0],edi
  4030f5:	mov    edi,0xc3643900
  4030fa:	js     0x403147
  4030fc:	xchg   edx,eax
  4030fd:	push   eax
  4030fe:	hlt    
  4030ff:	and    edi,edx
  403101:	mov    BYTE PTR [eax],0x39
  403104:	into   
  403105:	ret    
  403106:	je     0x40315f
  403108:	or     ebx,ecx
  40310a:	jne    0x4030fd
  40310c:	add    BYTE PTR ds:0x7e79eef2,0xd8
  403113:	add    DWORD PTR [edx-0x167507b0],0x51cb2cdb
  40311d:	retf   0x44ff
  403120:	push   ebp
  403121:	(bad)  
  403123:	sti    
  403124:	(bad)  
  403125:	call   0xed84e32d
  40312a:	retf   0xc82c
  40312d:	add    sp,WORD PTR [ecx+0xca58b8]
  403134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403135:	retf   0xc7bc
  403138:	xchg   ecx,eax
  403139:	sbb    DWORD PTR [eax-0x36],edx
  40313c:	xchg   esi,eax
  40313d:	jbe    0x403169
  40313f:	cmp    BYTE PTR cs:[ebp+0x76ec03e1],0x15
  403147:	xor    dh,BYTE PTR [edx+0x48def14c]
  40314d:	xor    eax,DWORD PTR [edx]
  40314f:	add    ebx,eax
  403151:	inc    edx
  403152:	call   0x69836fd2
  403157:	or     bh,BYTE PTR [ecx]
  403159:	push   ebp
  40315a:	hlt    
  40315b:	sub    DWORD PTR [esi],eax
  40315d:	inc    ebx
  40315e:	imul   ecx,DWORD PTR [edx],0x83035419
  403164:	push   es
  403165:	std    
  403166:	pop    esp
  403167:	fistp  QWORD PTR [ecx+0x194ff30a]
  40316d:	adc    DWORD PTR [esi],0x62a5aafb
  403173:	inc    edi
  403174:	xor    ecx,ecx
  403176:	cmp    al,0xfc
  403178:	push   ss
  403179:	test   BYTE PTR [ebx-0x4e82c6fc],ch
  40317f:	add    al,0x87
  403181:	and    DWORD PTR [ecx+0x48],ebp
  403184:	inc    ecx
  403185:	leave  
  403186:	leave  
  403187:	dec    edi
  403188:	and    al,0x80
  40318a:	sbb    eax,0x1cfbf60c
  40318f:	cli    
  403190:	outs   dx,BYTE PTR ds:[esi]
  403191:	dec    esp
  403192:	ror    eax,1
  403194:	xor    edx,DWORD PTR [esi+ebp*8-0x7d]
  403198:	add    BYTE PTR [ebp+0x8],bl
  40319b:	jle    0x403198
  40319d:	dec    ebp
  40319e:	add    DWORD PTR [eax],eax
  4031a0:	scas   eax,DWORD PTR es:[edi]
  4031a1:	jns    0x4031ab
  4031a3:	(bad)  
  4031a4:	jmp    0xec2b308e
  4031a9:	fnstsw WORD PTR [edi+ebx*2+0x47f30]
  4031b0:	mov    esp,0x2583dc2d
  4031b5:	cdq    
  4031b6:	sub    eax,0x1a6f0483
  4031bb:	inc    ecx
  4031bc:	jmp    0x6a5285fb
  4031c1:	ss retf 0xa82e
  4031c5:	cmp    al,BYTE PTR [eax]
  4031c7:	je     0x4031b9
  4031c9:	mov    ch,0xb
  4031cb:	out    0xcf,al
  4031cd:	sti    
  4031ce:	(bad)  
  4031cf:	call   FWORD PTR [ebx-0x4d3feac7]
  4031d5:	mov    ds:0x3de908be,eax
  4031da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031db:	(bad)  
  4031dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031dd:	xchg   BYTE PTR [eax],al
  4031df:	add    cl,ch
  4031e1:	cmp    bh,BYTE PTR [ebx+0x45]
  4031e4:	icebp  
  4031e5:	or     cl,cl
  4031e7:	jne    0x4031da
  4031e9:	fdiv   st(7),st
  4031eb:	(bad)  
  4031ec:	hlt    
  4031ed:	add    al,0x1a
  4031ef:	inc    ecx
  4031f0:	jmp    0x32b4bb22
  4031f5:	add    eax,0x3ae9c252
  4031fa:	jne    0x4031cc
  4031fc:	ins    BYTE PTR es:[edi],dx
  4031fd:	add    BYTE PTR [edi-0x2c],dl
  403200:	push   eax
  403201:	inc    ebx
  403202:	push   ebp
  403203:	cs call esp
  403206:	sbb    BYTE PTR [edx],bl
  403208:	inc    ecx
  403209:	jmp    0xd0b4bb0b
  40320e:	stc    
  40320f:	inc    edx
  403210:	in     al,0xe8
  403212:	cmp    al,BYTE PTR [eax]
  403214:	add    BYTE PTR [esi+0x8fc877],cl
  40321a:	or     eax,0x5475ffac
  40321f:	dec    eax
  403220:	inc    ebp
  403221:	in     al,dx
  403222:	arpl   WORD PTR [edx+0xc],ax
  403225:	add    ah,cl
  403227:	(bad)
  40322a:	pusha  
  40322b:	add    eax,DWORD PTR [eax]
  40322d:	add    BYTE PTR [eax-0x2238f855],ah
  403233:	lods   al,BYTE PTR ds:[esi]
  403234:	add    BYTE PTR [eax],al
  403236:	nop
  403237:	cld    
  403238:	imul   eax,DWORD PTR [eax],0x1069fc8a
  40323e:	and    eax,0x7a50e40a
  403243:	cld    
  403244:	(bad)  
  403245:	jne    0x403293
  403247:	mov    eax,0x3d66fe15
  40324c:	add    BYTE PTR [ebx],cl
  40324e:	and    BYTE PTR [ecx],bh
  403250:	add    DWORD PTR [ebx-0x1d],eax
  403253:	inc    ecx
  403254:	hlt    
  403255:	add    ah,cl
  403257:	(bad)  
  403258:	(bad)  
  403259:	jne    0x4032b7
  40325b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325c:	call   0xc3:0x8afc60c1
  403263:	stos   DWORD PTR es:[edi],eax
  403264:	test   edx,eax
  403266:	or     BYTE PTR [eax+0x19],dl
  403269:	mov    ebp,esp
  40326b:	push   edi
  40326c:	cs or  al,ch
  40326f:	lods   al,BYTE PTR ds:[esi]
  403270:	mov    ebp,0xc600000
  403275:	call   0x331a
  40327a:	push   eax
  40327b:	div    DWORD PTR [ecx]
  40327d:	or     BYTE PTR [eax-0x18],dl
  403280:	popf   
  403281:	rol    DWORD PTR [eax],0x20
  403284:	sbb    al,0xc9
  403286:	ret    0x41c
  403289:	push   ebp
  40328a:	mov    esp,DWORD PTR [ebx+eax*4-0x7ccc033c]
  403291:	jge    0x40329b
  403293:	cmp    ecx,ebx
  403295:	push   eax
  403296:	pop    es
  403297:	adc    bl,BYTE PTR [ecx-0x2a0436d5]
  40329d:	add    ebp,DWORD PTR [ebx]
  40329f:	repnz repz add ebp,DWORD PTR [edx+0x39]
  4032a4:	add    eax,DWORD PTR [edx+ebp*2]
  4032a7:	cmp    DWORD PTR [ebx],eax
  4032a9:	(bad)  
  4032aa:	inc    DWORD PTR [ecx+edx*8+0x59]
  4032ae:	add    BYTE PTR [ebx],ah
  4032b0:	(bad)  
  4032b2:	les    edi,FWORD PTR [eax-0x27]
  4032b5:	add    ecx,DWORD PTR [ebx]
  4032b7:	jns    0x403266
  4032b9:	adc    cl,BYTE PTR [ecx+0x75c73cf4]
  4032bf:	xchg   ebp,eax
  4032c0:	xor    DWORD PTR [esi],ebp
  4032c2:	lock mov cs,WORD PTR [esi]
  4032c5:	sti    
  4032c6:	mov    edi,0x7afd0d00
  4032cb:	fcom   DWORD PTR [ebx]
  4032cd:	fstp   DWORD PTR [ecx+0x0]
  4032d0:	jbe    0x40333e
  4032d2:	(bad)  
  4032d3:	push   ebx
  4032d4:	jecxz  0x4032c3
  4032d6:	(bad)  
  4032d7:	jne    0x40330a
  4032d9:	add    DWORD PTR [ebx],0x6a
  4032dc:	cmp    ecx,esi
  4032de:	ins    BYTE PTR es:[edi],dx
  4032df:	sar    DWORD PTR [ecx],0xd9
  4032e2:	cli    
  4032e3:	mov    edi,0xe832e0c4
  4032e8:	and    cl,cl
  4032ea:	(bad)  
  4032eb:	call   DWORD PTR [edx]
  4032ed:	ret    0xc37a
  4032f0:	xchg   edx,eax
  4032f1:	nop
  4032f2:	rol    DWORD PTR [ecx+edi*1],0x4
  4032f6:	jnp    0x4032e4
  4032f8:	mov    edx,0x8a50d79c
  4032fd:	call   0x52af8a33
  403302:	inc    eax
  403303:	or     al,0xbc
  403305:	pusha  
  403306:	add    DWORD PTR [eax],0x39
  403309:	fnstcw WORD PTR [eax+0x14]
  40330c:	hlt    
  40330d:	(bad)  
  40330e:	call   0x72406c16
  403313:	stos   DWORD PTR es:[edi],eax
  403314:	ret    0xa8b7
  403317:	fstp   TBYTE PTR [edi]
  403319:	jns    0x40333f
  40331b:	fdiv   DWORD PTR [edx-0x2ffd0ebc]
  403321:	mov    ebp,0xe2ba83e6
  403326:	mov    dh,0x1a
  403328:	ret    0x7282
  40332b:	or     eax,DWORD PTR [eax]
  40332d:	dec    ebx
  40332e:	imul   cl
  403330:	retf   0x3ff1
  403333:	jmp    0x2a5b6c3b
  403338:	add    ah,BYTE PTR [ecx-0x4f285b3a]
  40333e:	add    DWORD PTR cs:[ecx+0xc],edi
  403342:	shl    BYTE PTR [esi],1
  403344:	std    
  403345:	cmp    DWORD PTR [ebx],esp
  403347:	lods   al,BYTE PTR ds:[esi]
  403348:	pop    esi
  403349:	jle    0x403388
  40334b:	in     eax,0x7c
  40334d:	shl    BYTE PTR [esi+edx*1+0x1ef7ffbe],cl
  403354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403355:	mov    bl,0x67
  403357:	cs cmp eax,0x11b54e35
  40335d:	dec    ecx
  40335e:	(bad)  
  40335f:	jl     0x403338
  403361:	push   esi
  403362:	dec    esp
  403363:	icebp  
  403364:	js     0x40335a
  403366:	iret   
  403367:	cdq    
  403368:	fld    TBYTE PTR [eax+eax*1]
  40336b:	jmp    0xedc87073
  403370:	add    edi,DWORD PTR [ecx]
  403372:	add    BYTE PTR [edx+0x47],dh
  403375:	dec    ecx
  403376:	ror    DWORD PTR [esi+eiz*1+0x29302a86],1
  40337d:	xor    DWORD PTR [edi+0x2d16f8ab],0xbcbad872
  403387:	add    BYTE PTR [ebp+0x1a502d57],dh
  40338d:	dec    edx
  40338e:	xor    cl,BYTE PTR [ebx+0x7af1001c]
  403394:	jge    0x403387
  403396:	jno    0x4033d3
  403398:	adc    BYTE PTR [eax+0x26],ah
  40339b:	les    ecx,FWORD PTR [ebx+0x42561e6]
  4033a1:	jb     0x4033af
  4033a3:	clc    
  4033a4:	mov    dl,BYTE PTR [esi]
  4033a6:	sar    DWORD PTR [edx-0x7],1
  4033a9:	mov    edx,0xbafb21f0
  4033ae:	lock jae 0x403335
  4033b1:	out    dx,al
  4033b2:	add    bl,BYTE PTR [edx+ebp*2-0x3f01c7ca]
  4033b9:	sub    DWORD PTR [edx+eax*1+0x117062c3],esp
  4033c0:	stc    
  4033c1:	or     al,BYTE PTR [ebp+0x96cf911]
  4033c7:	in     eax,dx
  4033c8:	push   ebp
  4033c9:	jle    0x40338f
  4033cb:	fadd   DWORD PTR [ebx]
  4033cd:	xchg   edi,eax
  4033ce:	jle    0x403390
  4033d0:	ret    0x39f5
  4033d3:	mov    al,0x8b
  4033d5:	and    DWORD PTR [eax-0x37],ecx
  4033d8:	and    edx,DWORD PTR [ebx]
  4033da:	dec    eax
  4033db:	leave  
  4033dc:	lea    ebx,[ebp+0x64]
  4033df:	stos   BYTE PTR es:[edi],al
  4033e0:	jo     0x4033ab
  4033e2:	add    DWORD PTR ss:[esi-0xf],ecx
  4033e6:	jnp    0x4033a7
  4033e8:	adc    edx,ebp
  4033ea:	cmp    BYTE PTR [ecx-0x6],0xba
  4033ee:	jb     0x403411
  4033f0:	stc    
  4033f1:	sbb    al,BYTE PTR ds:0xfe9c73
  4033f7:	add    al,0xb6
  4033f9:	mov    ebp,0xc2639a8
  4033fe:	test   al,0xf9
  403400:	in     eax,dx
  403401:	add    al,BYTE PTR [eax]
  403403:	fld    DWORD PTR [edi-0x7]
  403406:	xor    edi,edx
  403408:	pop    ds
  403409:	sti    
  40340a:	xor    ecx,edx
  40340c:	dec    ebp
  40340d:	test   BYTE PTR [edi],al
  40340f:	jg     0x4033dd
  403411:	jnp    0x403408
  403413:	jecxz  0x403417
  403415:	adc    cl,al
  403417:	mov    al,ds:0x5bc302c3
  40341c:	mov    eax,0xb8f3f933
  403421:	xor    edi,ecx
  403423:	dec    ebp
  403424:	push   ebp
  403425:	pop    ss
  403426:	sub    dl,BYTE PTR [esi+0x26034743]
  40342c:	rol    al,1
  40342e:	ret    0xffdc
  403431:	iret   
  403432:	mov    ebx,DWORD PTR [eax]
  403434:	lock cli 
  403436:	and    ebx,DWORD PTR [edx]
  403438:	lock cli 
  40343a:	lea    ebx,[esp+ecx*8]
  40343d:	adc    al,BYTE PTR [esi+0x40]
  403440:	add    ecx,DWORD PTR fs:[esi-0x68]
  403444:	rol    ecx,0x11
  403447:	mov    ds:0x83fa8b86,eax
  40344c:	mov    eax,0xb883f923
  403451:	lea    ebx,[edi+edi*1+0x4d469501]
  403458:	add    BYTE PTR [esi+0x1c],bl
  40345b:	add    BYTE PTR [ecx],dl
  40345d:	rcl    BYTE PTR [esi],0x3
  403460:	sub    DWORD PTR [eax-0x7],ecx
  403463:	xor    edi,DWORD PTR [edx]
  403465:	and    bl,bh
  403467:	xor    edi,DWORD PTR [edx]
  403469:	dec    esi
  40346a:	test   BYTE PTR [edi],al
  40346c:	sub    BYTE PTR [ecx-0x80],bl
  40346f:	imul   edx,DWORD PTR [ebx+0x2],0xf7e0c120
  403476:	add    al,bl
  403478:	stos   DWORD PTR es:[edi],eax
  403479:	xor    DWORD PTR [ebx],0xfffffff9
  40347c:	cmp    esi,esi
  40347e:	mov    ebx,0x98252033
  403483:	pop    ss
  403484:	out    0x82,al
  403486:	dec    eax
  403487:	mov    edi,DWORD PTR [edx]
  403489:	jmp    0x403472
  40348b:	sar    bl,0xdd
  40348e:	push   es
  40348f:	shl    BYTE PTR [edx+0x1afaf791],1
  403495:	lahf   
  403496:	idiv   edx
  403498:	mov    esp,0x82b11355
  40349d:	push   0xffffffc3
  40349f:	add    ebp,DWORD PTR [edi-0x3f]
  4034a2:	(bad)
  4034a6:	int    0x8b
  4034a8:	rol    DWORD PTR [esi-0x793fdc45],cl
  4034ae:	mov    ebx,0x81b29d8d
  4034b3:	xlat   BYTE PTR ds:[ebx]
  4034b4:	adc    eax,0x5d5e0750
  4034b9:	sbb    bh,al
  4034bb:	push   ss
  4034bc:	cmp    dl,BYTE PTR [eax]
  4034be:	(bad)  
  4034bf:	stc    
  4034c0:	add    BYTE PTR [edx+0x2f],ch
  4034c3:	out    0xfa,eax
  4034c5:	dec    edx
  4034c6:	aas    
  4034c7:	xchg   ecx,eax
  4034c8:	test   BYTE PTR [esi],dh
  4034ca:	not    DWORD PTR [eax+edx*4]
  4034cd:	adc    dl,dh
  4034cf:	dec    ecx
  4034d0:	xor    BYTE PTR [eax+0x19],bh
  4034d3:	or     eax,DWORD PTR [ebx]
  4034d5:	jp     0x403525
  4034d7:	mov    edi,0xbbb67033
  4034dc:	xor    esp,DWORD PTR [eax+0x5c]
  4034df:	cwde   
  4034e0:	pop    ss
  4034e1:	retf   0x9b68
  4034e4:	std    
  4034e5:	cmp    ah,BYTE PTR [ebx-0x9]
  4034e8:	sar    BYTE PTR [ebx-0x2b],0x6
  4034ec:	shl    BYTE PTR [edx+0x1afaf6d1],1
  4034f2:	iret   
  4034f3:	idiv   dl
  4034f5:	(bad)  
  4034f6:	push   DWORD PTR [edx+edx*1-0x41]
  4034fa:	ds pusha 
  4034fc:	push   0x3a
  4034fe:	xor    dl,BYTE PTR [ecx]
  403500:	(bad)  
  403503:	jmp    0xfb05f7d5
  403508:	mov    ebx,0xbbfac95a
  40350d:	mov    ah,0x63
  40350f:	(bad)  
  403510:	in     al,0x36
  403512:	mov    WORD PTR [eax],fs
  403514:	pop    es
  403515:	xchg   edi,eax
  403516:	add    al,0xa8
  403518:	mov    BYTE PTR [edi-0x1],0xbf
  40351c:	mov    fs,eax
  40351e:	push   cs
  40351f:	xchg   edx,eax
  403520:	out    0xe0,al
  403522:	push   cs
  403523:	nop
  403524:	nop
  403525:	add    BYTE PTR [ebp+0x2ce90afa],bh
  40352b:	retf   0x49ea
  40352e:	cmp    eax,0x3a08a9c1
  403533:	mov    edi,0xc86abe62
  403538:	or     bh,BYTE PTR [ebp-0x68933896]
  40353e:	dec    esi
  40353f:	inc    eax
  403540:	call   0x781b:0xb6fe7943
  403547:	mov    ebp,0x766906f0
  40354c:	inc    ecx
  40354d:	test   BYTE PTR [eax-0x7909cde2],0x74
  403554:	pop    ebp
  403555:	adc    cl,BYTE PTR [eax]
  403557:	es (bad) 
  403559:	jmp    0xc50d6799
  40355e:	js     0x403551
  403560:	jmp    0xdb05e832
  403565:	mov    esp,0xbdbac81a
  40356a:	mov    esp,0x7e6dde63
  40356f:	mov    DWORD PTR [eax],eax
  403571:	add    BYTE PTR [edi],dh
  403573:	loop   0x403535
  403575:	sub    cl,BYTE PTR [esi-0x3]
  403578:	fdiv   DWORD PTR [edx-0xe]
  40357b:	or     eax,0xde70afb
  403580:	stc    
  403581:	fs mov cl,0xf9
  403584:	pop    esp
  403585:	stc    
  403586:	or     DWORD PTR [ebx+eax*1-0x40ceffd1],ebp
  40358d:	shl    ah,0x3d
  403590:	mov    ebp,0xca04b28b
  403595:	and    esi,DWORD PTR [eax+0x7d8dc6ec]
  40359b:	push   eax
  40359c:	sub    eax,0xfd3f2514
  4035a1:	push   ebp
  4035a2:	sar    ebx,0xbe
  4035a5:	or     edx,ebp
  4035a7:	jmp    0xfb1d:0x8cbaf875
  4035ae:	mov    edx,0xe68c7382
  4035b3:	mov    ebx,0x3c91a1da
  4035b8:	xor    bh,BYTE PTR [eax+ebp*1]
  4035bb:	jp     0x4035af
  4035bd:	add    dh,BYTE PTR [ebx]
  4035bf:	mov    ah,0xc6
  4035c1:	xor    edx,DWORD PTR [eax-0x6c]
  4035c4:	leave  
  4035c5:	xor    edx,DWORD PTR [ebx-0x3a]
  4035c8:	fs pop ds
  4035ca:	xor    esp,ecx
  4035cc:	lods   eax,DWORD PTR ds:[esi]
  4035cd:	out    0xea,eax
  4035cf:	sbb    al,dh
  4035d1:	shr    BYTE PTR [edx],0x21
  4035d4:	std    
  4035d5:	fsub   DWORD PTR [edx-0x4e]
  4035d8:	or     eax,0xdaccafb
  4035dd:	stc    
  4035de:	ins    BYTE PTR es:[edi],dx
  4035df:	mov    cl,0xf9
  4035e1:	in     eax,0x24
  4035e3:	call   0xc0c0:0x5ea7031f
  4035ea:	add    BYTE PTR [ebp-0x4],bl
  4035ed:	ret    0x8b
  4035f0:	cmp    ecx,ebx
  4035f2:	mul    DWORD PTR [ebx]
  4035f4:	dec    ecx
  4035f5:	int3   
  4035f6:	cli    
  4035f7:	lea    ecx,[edi+eiz*8-0x44b0f82b]
  4035fe:	add    edx,DWORD PTR [esi+0x58]
  403601:	mov    ebp,0xad1309c2
  403606:	mov    edi,eax
  403608:	xor    eax,DWORD PTR [edx-0x7aec04dd]
  40360e:	lea    ecx,[edi+edx*1-0x432af288]
  403615:	sti    
  403616:	dec    ebp
  403617:	or     al,0xa1
  403619:	mov    ebp,0x73aa030e
  40361e:	cli    
  40361f:	xor    ebx,DWORD PTR [ecx-0x35cc0825]
  403625:	jno    0x4035c3
  403627:	pop    ds
  403628:	push   ebp
  403629:	jmp    0x5f237b87
  40362e:	and    cl,al
  403630:	xchg   ebx,eax
  403631:	call   0x869c0f38
  403636:	xor    edi,ebx
  403638:	add    DWORD PTR [edx+0x7925f933],0x7
  40363f:	add    eax,0x3a99c09
  403644:	into   
  403645:	enter  0xc0c0,0x9d
  403649:	sti    
  40364a:	ret    0xfb8b
  40364d:	retf   
  40364e:	mul    DWORD PTR [ebx]
  403650:	stc    
  403651:	retf   
  403652:	cli    
  403653:	lea    eax,[eax]
  403655:	fsubr  st(7),st
  403657:	mul    DWORD PTR [ebx+0x56038137]
  40365d:	push   0x5309c2bd
  403662:	lods   al,BYTE PTR ds:[esi]
  403663:	mov    edi,eax
  403665:	cmp    DWORD PTR [esi-0x5aaddc43],esp
  40366b:	mov    ebx,0xdac9bd8d
  403670:	add    dl,dh
  403672:	jns    0x403678
  403674:	dec    esi
  403675:	sbb    eax,0x3a0ec218
  40367a:	jecxz  0x403607
  40367c:	cli    
  40367d:	push   0xffffffa0
  40367f:	jecxz  0x403678
  403681:	push   0xffffffa3
  403683:	xchg   ecx,eax
  403684:	pushf  
  403685:	and    edx,DWORD PTR ds:[eax+0x2a]
  403689:	les    ebp,FWORD PTR [edx+0x6af8305d]
  40368f:	sbb    BYTE PTR [ebx],al
  403691:	loopne 0x4036c5
  403693:	mov    ebp,0xbabb0333
  403698:	lea    edi,[ebp-0xcc6be5a]
  40369e:	add    ax,WORD PTR [esi+0x4d]
  4036a2:	push   0x6a3a04c4
  4036a7:	mov    edi,ebx
  4036a9:	or     dl,BYTE PTR [eax+0x5dbcf7f3]
  4036af:	pop    ss
  4036b0:	or     edi,0x670386b8
  4036b6:	leave  
  4036b7:	(bad)
  4036bb:	stos   BYTE PTR es:[edi],al
  4036bc:	ror    DWORD PTR [ebx+0x33bb1ab1],cl
  4036c2:	mov    ds:0x5b0f902c,eax
  4036c7:	enter  0x6da0,0x3a
  4036cb:	lahf   
  4036cc:	out    dx,eax
  4036cd:	sar    BYTE PTR [eax-0x27],0x2
  4036d1:	retf   0x43b2
  4036d4:	repz test DWORD PTR [edx-0x10],0xdd569c90
  4036dc:	sti    
  4036dd:	in     al,0x6c
  4036df:	add    dl,ch
  4036e1:	pop    ebp
  4036e2:	and    ecx,eax
  4036e4:	sub    dl,BYTE PTR [edi]
  4036e6:	cmp    bl,cl
  4036e8:	bound  edi,QWORD PTR [ebp-0x452545f6]
  4036ee:	mov    esp,0x5347ee84
  4036f3:	jle    0x40373a
  4036f5:	add    esi,edi
  4036f7:	add    ebp,DWORD PTR [eax]
  4036f9:	les    edi,FWORD PTR ds:0x328b2a03
  4036ff:	repz fcomip st,st(2)
  403702:	lea    esi,cs:[ebp+0x16]
  403706:	ror    dh,1
  403708:	mov    bh,0x4a
  40370a:	cmp    dl,BYTE PTR [esi-0x7]
  40370d:	(bad)  
  40370e:	sti    
  40370f:	or     ch,dl
  403711:	shl    DWORD PTR [edx+0x4abafab7],cl
  403717:	mov    edx,0x20468f64
  40371c:	and    bh,BYTE PTR [ebx+0x0]
  40371f:	out    0x2,eax
  403721:	aaa    
  403722:	and    al,bh
  403724:	sar    cl,0x2
  403727:	repz mov dl,BYTE PTR [ebx-0x700d310e]
  40372e:	nop
  40372f:	lods   eax,DWORD PTR ds:[esi]
  403730:	push   ds
  403731:	stc    
  403732:	jg     0x4036ba
  403734:	jge    0x403720
  403736:	pop    ebp
  403737:	adc    ecx,eax
  403739:	stos   BYTE PTR es:[edi],al
  40373a:	push   ss
  40373b:	cmp    bl,cl
  40373d:	bound  edi,QWORD PTR [edx+ebp*2-0x4b44e546]
  403744:	and    esi,0xffffffc5
  403747:	pop    ds
  403748:	fwait
  403749:	add    DWORD PTR [ebx],eax
  40374b:	push   ebx
  40374d:	daa    
  40374e:	ret    
  40374f:	xor    eax,0x828a2a03
  403754:	repnz aas 
  403756:	xacquire xchg BYTE PTR [eax+eax*1+0x27ba4f5d],cl
  40375e:	mov    BYTE PTR [eax+0x78281602],ah
  403764:	or     al,BYTE PTR [ebx]
  403766:	cmp    DWORD PTR [ebx+0x4b1233b7],esi
  40376c:	mov    eax,0x853f5d8d
  403771:	xor    BYTE PTR [esi],dl
  403773:	outs   dx,BYTE PTR ds:[esi]
  403774:	add    cl,BYTE PTR [esi-0x13]
  403777:	jne    0x403739
  403779:	adc    dl,ch
  40377b:	add    BYTE PTR [edx-0xe0d4506],cl
  403781:	clc    
  403782:	je     0x403784
  403784:	fstp   DWORD PTR ds:0x4b2fc05
  40378a:	add    esi,DWORD PTR [edi]
  40378c:	xor    eax,0x39f6c3bf
  403791:	xlat   BYTE PTR ds:[ebx]
  403792:	mov    eax,eax
  403794:	or     BYTE PTR [eax-0x7b513dcd],bh
  40379a:	pop    es
  40379b:	lock or dl,ch
  40379e:	fldl2e 
  4037a0:	je     0x403786
  4037a2:	shr    BYTE PTR [ecx+0x72c30131],0xa0
  4037a9:	icebp  
  4037aa:	clc    
  4037ab:	ficom  DWORD PTR [edx-0x68096b75]
  4037b1:	xchg   edi,eax
  4037b2:	fisttp DWORD PTR [edi-0x57cfa9c8]
  4037b8:	sti    
  4037b9:	or     DWORD PTR [ebx],eax
  4037bb:	cdq    
  4037bc:	sar    BYTE PTR [eax-0x48578dcd],0x8d
  4037c3:	jne    0x4037f9
  4037c5:	mov    eax,0x13c8b7c
  4037ca:	dec    esi
  4037cb:	adc    eax,0xea10bf7a
  4037d0:	or     BYTE PTR [ecx+0x798300fa],0x33
  4037d7:	stc    
  4037d8:	or     eax,0xd6651f60
  4037dd:	sub    eax,0x9be03c4
  4037e2:	rol    ebx,0x67
  4037e5:	add    cl,bl
  4037e7:	mov    edi,0xff7b3f00
  4037ec:	push   DWORD PTR [ebx+0x77]
  4037ef:	or     edi,ebx
  4037f1:	jae    0x40386d
  4037f3:	lea    eax,[edi+edx*2+0x44292245]
  4037fa:	add    BYTE PTR [esi],al
  4037fc:	shl    DWORD PTR [eax+0x6],0x3
  403800:	ret    
  403801:	pop    edi
  403802:	jnp    0x403803
  403804:	call   FWORD PTR [edi]
  403806:	mov    al,0xf8
  403808:	or     ebx,DWORD PTR [eax]
  40380a:	mov    al,0xfa
  40380c:	lea    edx,[esp+edx*1+0x3f3aff97]
  403813:	add    edx,DWORD PTR [esi+0x1c]
  403816:	ret    0xac2
  403819:	adc    edx,ecx
  40381b:	mov    edi,0xff7bafff
  403820:	xor    ebp,DWORD PTR [ebx-0x67cc05f9]
  403826:	lea    ecx,[edi+ecx*1-0x546c5f89]
  40382d:	jecxz  0x403879
  40382f:	cmp    cl,al
  403831:	mov    eax,ds:0x7fca030b
  403836:	jl     0x403837
  403838:	(bad)  
  403839:	aas    
  40383a:	mov    al,0xf7
  40383c:	or     ebp,DWORD PTR [ecx]
  40383e:	mov    al,0xf9
  403840:	(bad)  
  403841:	cld    
  403842:	sbb    edi,DWORD PTR [ecx]
  403844:	mov    al,ds:0x5e037d23
  403849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40384a:	rol    ebx,0x15
  40384d:	add    BYTE PTR [ecx],bh
  40384f:	stos   BYTE PTR es:[edi],al
  403850:	fidivr DWORD PTR [edi-0x43b272]
  403856:	dec    edx
  403857:	inc    ecx
  403858:	or     bl,bh
  40385a:	dec    edx
  40385b:	inc    eax
  40385c:	mov    es,WORD PTR [esi+edi*1-0x2ba4a616]
  403863:	test   eax,0xe6783045
  403868:	add    al,0x3
  40386a:	jp     0x4038c9
  40386c:	mov    esp,0xf01556ff
  403871:	clc    
  403872:	inc    edx
  403873:	(bad)  
  403875:	cli    
  403876:	mov    ah,0x5a
  403878:	adc    al,0x92
  40387a:	ins    DWORD PTR es:[edi],dx
  40387b:	stos   BYTE PTR es:[edi],al
  40387c:	mov    WORD PTR [ebx],es
  40387e:	(bad)  
  40387f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403880:	ret    0x43c2
  403883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403884:	sar    DWORD PTR [edi-0x445cda],cl
  40388a:	push   0xffffff9e
  40388c:	psubd  mm1,QWORD PTR [edx-0x2f]
  403890:	mov    DWORD PTR [esi+edi*1+0x6efb04c],ecx
  403897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403898:	dec    ecx
  403899:	sub    al,bh
  40389b:	push   0x3303030b
  4038a0:	mov    ebx,0xf76aeeff
  4038a5:	div    DWORD PTR [edx]
  4038a7:	pusha  
  4038a8:	idiv   ecx
  4038aa:	lods   al,BYTE PTR ds:[esi]
  4038ab:	cmp    eax,0x2d74d11b
  4038b0:	add    DWORD PTR [ebx],0xc4a56f00
  4038b6:	ret    
  4038b7:	sub    al,0xa6
  4038b9:	fdivr  QWORD PTR [edi-0x44c542]
  4038bf:	push   0x2f
  4038c1:	psubq  mm5,QWORD PTR [edx+0x30]
  4038c5:	mov    DWORD PTR [esi+edi*1-0x2ec64a00],eax
  4038cc:	sub    ebp,edx
  4038ce:	inc    ecx
  4038cf:	pop    ecx
  4038d0:	shr    DWORD PTR [ecx],0x2
  4038d3:	cmp    bh,BYTE PTR [edi-0x44794472]
  4038d9:	inc    esi
  4038da:	test   DWORD PTR [ecx+0x73f74107],0x59135d8d
  4038e4:	mov    ds:0x523ab9fd,al
  4038e9:	in     eax,0xc4
  4038eb:	jnp    0x4038f3
  4038ed:	jmp    0x4ebb:0x16bb96d3
  4038f4:	out    dx,eax
  4038f5:	adc    DWORD PTR [edi],ecx
  4038f7:	inc    ebx
  4038f8:	out    dx,eax
  4038f9:	add    BYTE PTR [ecx+0x46d50bad],cl
  4038ff:	cmp    BYTE PTR [edi-0x16],bl
  403902:	dec    ecx
  403903:	push   ecx
  403904:	shr    DWORD PTR [eax],0xb
  403907:	cmp    al,dh
  403909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40390a:	mov    edx,0xf6debb1e
  40390f:	push   cs
  403910:	pop    es
  403911:	shl    dh,1
  403913:	adc    BYTE PTR [ebp-0x27ffe593],cl
  403919:	adc    cl,dh
  40391b:	dec    ecx
  40391c:	cmp    bl,BYTE PTR [edx-0xb]
  40391f:	(bad)  
  403920:	cli    
  403921:	adc    al,0xea
  403923:	fsubr  QWORD PTR [esi-0x19455146]
  403929:	out    dx,al
  40392a:	mov    ds:0x9feee20e,al
  40392f:	mov    BYTE PTR [ebp+0x6a396b02],bh
  403935:	mov    bl,0xea
  403937:	inc    ecx
  403938:	sub    ecx,eax
  40393a:	test   eax,0x3ebf3a01
  40393f:	mov    edx,0x7600bab6
  403944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403945:	mov    bh,0xb
  403947:	jno    0x4038f8
  403949:	mov    ch,0x8d
  40394b:	jge    0x403998
  40394d:	cmc    
  40394e:	icebp  
  40394f:	and    edx,DWORD PTR [eax]
  403951:	call   DWORD PTR [ebp+0x5]
  403954:	je     0x403913
  403956:	or     ch,dl
  403958:	push   0x7a
  40395a:	inc    DWORD PTR [esi-0x3d]
  40395d:	mov    edx,0xb6474233
  403962:	xor    esi,DWORD PTR [ecx]
  403964:	ror    DWORD PTR [ebx-0x2d738df1],0x2a
  40396b:	jmp    0xff43:0x28c107f0
  403972:	leave  
  403973:	push   esi
  403974:	xchg   ebx,eax
  403975:	mov    edx,0xb24f0eff
  40397a:	or     eax,DWORD PTR [eax]
  40397c:	add    BYTE PTR [edi-0x48],al
  40397f:	lea    ebx,[ebp+0x53]
  403982:	(bad)  
  403983:	shr    DWORD PTR [edi-0x21],cl
  403986:	std    
  403987:	pop    ebp
  403988:	(bad)  
  40398b:	adc    eax,0x7d8603ea
  403990:	icebp  
  403991:	cmp    eax,DWORD PTR [ecx]
  403993:	add    DWORD PTR [esi],esi
  403995:	cmp    edi,edi
  403997:	dec    esi
  403998:	loope  0x4039d5
  40399a:	push   ecx
  40399b:	or     al,0xc6
  40399d:	jbe    0x40395b
  40399f:	lea    esi,[edi]
  4039a1:	jge    0x4039ac
  4039a3:	mov    esi,esp
  4039a5:	lods   al,BYTE PTR ds:[esi]
  4039a6:	mov    ecx,0x558213ff
  4039ab:	pop    eax
  4039ac:	inc    esi
  4039ad:	add    edi,0xffffffc2
  4039b0:	in     eax,dx
  4039b1:	cmp    dl,BYTE PTR [ebx-0x75]
  4039b4:	test   DWORD PTR [esp+eax*8+0x4d6b36f8],esi
  4039bb:	mov    DWORD PTR [eax],0x780d
  4039c1:	mov    al,ds:0x9475fefd
  4039c6:	mov    BYTE PTR [ebp-0x8],al
  4039c9:	fistp  QWORD PTR [ecx-0x22e9aa1]
  4039cf:	add    BYTE PTR [ebx],ah
  4039d1:	fucom  st(0)
  4039d3:	mov    BYTE PTR ds:0x411a7c,0x19
  4039da:	sub    ecx,ebp
  4039dc:	out    dx,eax
  4039dd:	dec    edi
  4039de:	mov    ecx,0xa1006567
  4039e3:	std    
  4039e4:	std    
  4039e5:	fsub   st(2),st
  4039e7:	fwait
  4039e8:	mov    DWORD PTR ds:0x411aa4,0x103249be
  4039f2:	pop    ds
  4039f3:	mov    ecx,0xfda1656f
  4039f8:	out    dx,eax
  4039f9:	loope  0x4039fd
  4039fb:	ret    
  4039fc:	jmp    0x403a1a
  4039fe:	retf   
  4039ff:	clc    
  403a00:	pop    es
  403a01:	add    ebx,ebp
  403a03:	jo     0x403a6f
  403a05:	inc    eax
  403a06:	mov    eax,0x104164e8
  403a0b:	dec    ebp
  403a0c:	call   0xffb84374
  403a11:	sbb    DWORD PTR [ebp+0x78],0x40
  403a15:	call   0x4036ee
  403a1a:	xchg   ebx,eax
  403a1b:	loop   0x403a14
  403a1d:	inc    eax
  403a1e:	inc    ebx
  403a1f:	(bad)  
  403a20:	mov    ebx,DWORD PTR [ebp-0x8]
  403a23:	add    ebx,0x40
  403a26:	pop    ebx
  403a27:	cli    
  403a28:	pop    es
  403a29:	add    ebx,DWORD PTR ds:0x3c685378
  403a2f:	sbb    DWORD PTR [ecx+0x0],eax
  403a32:	adc    BYTE PTR [esp+edi*1-0x17],ch
  403a36:	cmp    DWORD PTR [edx-0x749bfe48],edx
  403a3c:	rol    DWORD PTR [ebx+0x430c45],0xb9
  403a43:	and    eax,0x270037ac
  403a48:	into   
  403a49:	test   bl,ch
  403a4b:	xor    DWORD PTR [ebx-0x65257ff3],esi
  403a51:	push   ds
  403a52:	inc    ecx
  403a53:	cmp    DWORD PTR [edi+0x3e877844],esp
  403a59:	mov    WORD PTR [eax],es
  403a5b:	cmp    DWORD PTR [edi+0x417ec87c],esp
  403a61:	mov    eax,0xd733beb
  403a66:	sbb    BYTE PTR [edx+0x39411e82],0xa7
  403a6d:	inc    esp
  403a6e:	js     0x403ad7
  403a70:	sub    eax,0xae900c3e
  403a75:	add    eax,DWORD PTR [eax]
  403a77:	cmp    esi,edx
  403a79:	aad    0xf7
  403a7b:	pop    eax
  403a7c:	fxch   st(3)
  403a7e:	(bad)  
  403a80:	inc    ebp
  403a81:	jae    0x403ae8
  403a83:	js     0x403a2e
  403a85:	mov    dl,BYTE PTR ds:0x4284dd
  403a8b:	adc    DWORD PTR [edx-0x77c6fffd],edx
  403a91:	and    al,0x65
  403a93:	js     0x403a3e
  403a95:	mov    dl,BYTE PTR ds:0x454495
  403a9b:	mov    dl,0xd4
  403a9d:	sub    esp,DWORD PTR [ebp+0x78]
  403aa0:	test   eax,0x7346c806
  403aa5:	pop    es
  403aa6:	leave  
  403aa7:	call   0x2039:0x412149
  403aae:	adc    DWORD PTR [esp+edx*2+0x0],esp
  403ab2:	sub    BYTE PTR [eax+eax*8],al
  403ab5:	add    eax,0x782111
  403aba:	dec    eax
  403abb:	sub    BYTE PTR [ecx+eax*2-0x17],bl
  403abf:	mov    ah,BYTE PTR [eax+esi*1]
  403ac2:	or     al,0x45
  403ac4:	cmp    DWORD PTR [edi],eax
  403ac6:	mov    cl,0x7
  403ac8:	and    DWORD PTR [ebx+0x5],0x21
  403acc:	clc    
  403acd:	call   FWORD PTR [edi+0x11]
  403ad0:	sub    DWORD PTR ds:0xc2303a8,ebx
  403ad6:	pop    esi
  403ad7:	xor    DWORD PTR [ecx],ebp
  403ad9:	sub    cl,cl
  403adb:	and    al,bh
  403add:	inc    DWORD PTR [eax-0x6f]
  403ae0:	xchg   ecx,eax
  403ae1:	mov    bh,0x46
  403ae3:	pop    ebx
  403ae4:	pop    ss
  403ae5:	push   edi
  403ae6:	xor    dl,al
  403ae8:	cmp    eax,0x558a9c00
  403aed:	and    DWORD PTR ds:0x26b8a0bc,0xffffffb7
  403af4:	push   esi
  403af5:	mov    esp,ebp
  403af7:	enter  0x1d85,0xa8
  403afb:	add    esi,DWORD PTR [edx-0x2b83e3f4]
  403b01:	inc    eax
  403b02:	jmp    0x33473c0d
  403b07:	lea    esi,ds:0x78213dc5
  403b0d:	add    BYTE PTR [eax+0x10],ah
  403b10:	add    ah,ch
  403b12:	ja     0x403b60
  403b14:	inc    ebp
  403b15:	cmp    DWORD PTR [ecx+0x54],eax
  403b18:	fnop   
  403b1a:	mov    edi,0x8b06b6d6
  403b1f:	in     eax,0x88
  403b21:	rcr    DWORD PTR ds:0xbc20428,1
  403b27:	ins    BYTE PTR es:[edi],dx
  403b28:	(bad)  
  403b29:	push   edi
  403b2a:	inc    ecx
  403b2b:	add    cl,ch
  403b2d:	jmp    0x403b31
  403b2f:	lea    ebp,ds:0xda00413f
  403b35:	inc    esi
  403b36:	test   DWORD PTR [edi+eax*1+0x74],esi
  403b3a:	add    BYTE PTR [ebx],dh
  403b3c:	stos   DWORD PTR es:[edi],eax
  403b3d:	in     eax,dx
  403b3e:	mov    edi,0x6bb1e589
  403b43:	data16 sub BYTE PTR ds:0xc3977541,bh
  403b4a:	adc    al,0x60
  403b4c:	or     al,0xfc
  403b4e:	dec    DWORD PTR [edx+0x411d3eb4]
  403b54:	jmp    0xc4a8301c
  403b59:	cmc    
  403b5a:	(bad)  
  403b5b:	(bad)  
  403b5c:	sbb    al,0x51
  403b5e:	sbb    eax,0x3cb7e941
  403b63:	cld    
  403b64:	inc    esi
  403b65:	imul   esp,DWORD PTR [esi],0x873aa865
  403b6b:	inc    ebp
  403b6c:	xor    ebp,esp
  403b6e:	mov    ds:0x8aa72eff,eax
  403b73:	(bad)  
  403b74:	jb     0x403b76
  403b76:	xchg   edi,eax
  403b77:	scas   al,BYTE PTR es:[edi]
  403b78:	ror    dl,cl
  403b7a:	mov    edx,fs
  403b7c:	push   esp
  403b7d:	adc    eax,0xe503c233
  403b82:	mov    cl,0xbb
  403b84:	gs test al,0x3a
  403b87:	add    DWORD PTR [ebp+0x1],eax
  403b8a:	cmp    DWORD PTR [edi-0x4a7f9487],edx
  403b90:	jne    0x403b7f
  403b92:	mov    ah,0x3b
  403b94:	clc    
  403b95:	jo     0x403be5
  403b97:	mov    ah,0xc1
  403b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b9a:	daa    
  403b9b:	mov    esi,edi
  403b9d:	(bad)  
  403b9e:	enter  0xc3bf,0xe4
  403ba2:	cmp    eax,ebx
  403ba4:	inc    ecx
  403ba5:	add    BYTE PTR ds:0xafecb9c8,dh
  403bab:	imul   edi,edi,0xffffff8b
  403bae:	xchg   esi,eax
  403baf:	xchg   edi,edx
  403bb1:	xor    edx,DWORD PTR ds:0xe3c23378
  403bb7:	mov    ch,0x8c
  403bb9:	adc    al,0x36
  403bbb:	inc    ecx
  403bbc:	add    BYTE PTR [ebx],al
  403bbe:	adc    eax,0xbba10574
  403bc3:	fldcw  WORD PTR [esi-0x1]
  403bc6:	mov    ch,0x6d
  403bc8:	pop    DWORD PTR [ebp-0x48]
  403bcb:	mov    DWORD PTR [ebp-0x4],edi
  403bce:	shl    DWORD PTR [esi+0x1e],1
  403bd1:	mov    ecx,DWORD PTR [esi]
  403bd3:	xchg   ebx,esi
  403bd5:	shl    DWORD PTR [ebx-0x4b],0x2
  403bd9:	fadd   DWORD PTR [eax]
  403bdb:	loope  0x403bc3
  403bdd:	iret   
  403bde:	mov    ecx,0xffff6afc
  403be3:	sbb    esi,DWORD PTR [ebx-0x75]
  403be6:	push   ebp
  403be7:	cld    
  403be8:	push   es
  403be9:	inc    ebp
  403bea:	cld    
  403beb:	inc    ebx
  403bec:	ret    
  403bed:	and    eax,esi
  403bef:	pop    ebx
  403bf0:	mov    edi,0xdffd0403
  403bf5:	gs inc ecx
  403bf7:	pusha  
  403bf8:	add    BYTE PTR [ebp-0x8],al
  403bfb:	push   ebp
  403bfc:	int    0xbc
  403bfe:	sbb    ebx,edi
  403c00:	push   0x75
  403c02:	cld    
  403c03:	fcomip st,st(4)
  403c05:	test   DWORD PTR [ecx-0x393e9343],0x8bfe880e
  403c0f:	and    eax,edx
  403c11:	ret    
  403c12:	add    eax,0x7541d913
  403c17:	retf   
  403c18:	cmp    esp,ebp
  403c1a:	(bad)  
  403c1b:	out    dx,eax
  403c1c:	imul   ecx,DWORD PTR [ebx-0x33ddc63a],0x33
  403c23:	je     0x403be8
  403c25:	lock sar DWORD PTR [edx],0xa3
  403c29:	xchg   BYTE PTR [edi+edx*2+0x7c0303e8],dh
  403c30:	outs   dx,DWORD PTR ds:[esi]
  403c31:	(bad)  
  403c32:	aad    0xf8
  403c34:	dec    eax
  403c35:	retf   0x4cff
  403c38:	pop    ebx
  403c39:	test   BYTE PTR [ebp-0x2f],al
  403c3c:	das    
  403c3d:	ss cld 
  403c3f:	add    al,bh
  403c41:	fs adc eax,0xb021bf8b
  403c47:	sar    DWORD PTR [edx-0x5d],0x0
  403c4b:	fdivr  st,st(0)
  403c4d:	stos   DWORD PTR es:[edi],eax
  403c4e:	rol    DWORD PTR [ecx],cl
  403c50:	inc    esp
  403c51:	pop    es
  403c52:	pop    ds
  403c53:	inc    ecx
  403c54:	cmp    DWORD PTR [eax+0x681c63ee],ebp
  403c5a:	add    eax,DWORD PTR [ecx]
  403c5c:	dec    esp
  403c5d:	iret   
  403c5e:	push   ds
  403c5f:	inc    ecx
  403c60:	cmp    DWORD PTR [edx],esp
  403c62:	ds cld 
  403c64:	cmp    BYTE PTR [edi+eiz*1-0x7759079b],bl
  403c6b:	inc    ebp
  403c6c:	jno    0x403c15
  403c6e:	(bad)  
  403c6f:	outs   dx,DWORD PTR ds:[esi]
  403c70:	fsub   QWORD PTR [edi+0x3]
  403c73:	leave  
  403c74:	jp     0x403c01
  403c76:	mov    ah,ch
  403c78:	push   esi
  403c79:	xchg   ebx,eax
  403c7a:	or     ebp,eax
  403c7c:	enter  0x31f,0x0
  403c80:	mov    edx,0x1775b40e
  403c85:	push   es
  403c86:	or     BYTE PTR cs:[ecx],ah
  403c89:	nop
  403c8a:	jp     0x403c8c
  403c8c:	cmp    DWORD PTR [esi-0xec18a3d],ebp
  403c92:	mov    bl,0xff
  403c94:	push   ds
  403c95:	mov    ds:0xc213a7,eax
  403c9a:	sub    DWORD PTR [eax],eax
  403c9c:	test   eax,0x3e39a907
  403ca1:	js     0x403c79
  403ca3:	mov    bl,0x0
  403ca5:	(bad)  
  403ca6:	mov    bl,0xc2
  403ca8:	or     dl,al
  403caa:	add    BYTE PTR [edx+0x4],dh
  403cad:	add    BYTE PTR [edi-0x7873fc1b],bh
  403cb3:	lds    eax,FWORD PTR [edi-0x8e54f0b]
  403cb9:	repz es out dx,eax
  403cbc:	sbb    eax,0x9beb2638
  403cc1:	add    edi,DWORD PTR [ecx-0x17]
  403cc4:	add    edi,DWORD PTR [edx+0x3b398eb8]
  403cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ccb:	or     edi,DWORD PTR [edi-0x6f]
  403cce:	fld    DWORD PTR es:[eax-0x63e65004]
  403cd5:	mov    cl,0x9a
  403cd7:	outs   dx,BYTE PTR ds:[esi]
  403cd8:	mov    bl,0x1f
  403cda:	mov    ebx,0x3bb3ac
  403cdf:	jb     0x403d22
  403ce1:	sub    DWORD PTR [edx+0x24],edi
  403ce4:	sub    dh,BYTE PTR [eax-0xb78a4bb]
  403cea:	add    ebp,ecx
  403cec:	aaa    
  403ced:	xor    al,0x87
  403cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf0:	call   DWORD PTR [ebx+0x13]
  403cf3:	push   0x31
  403cf5:	sub    eax,0xbbfdb400
  403cfa:	xor    eax,0xfbc403f1
  403cff:	adc    ecx,ebp
  403d01:	push   ebx
  403d02:	add    edx,DWORD PTR [esi]
  403d04:	cmp    DWORD PTR [ecx],esi
  403d06:	test   al,0x7d
  403d08:	mov    dl,0x0
  403d0a:	ss mov bl,0x6a
  403d0d:	lods   al,BYTE PTR ds:[esi]
  403d0e:	cs sub eax,0x894d9eeb
  403d14:	add    BYTE PTR [esi+eiz*8-0x7fa3efdb],ch
  403d1b:	mov    al,0x50
  403d1d:	cmp    ch,BYTE PTR [ebp+0x3ae9b89b]
  403d23:	jg     0x403d1d
  403d25:	(bad)  
  403d26:	inc    ecx
  403d27:	or     BYTE PTR [ebx-0x3f],dl
  403d2a:	or     edi,DWORD PTR [eax+0x0]
  403d2d:	jmp    0xaacc1319
  403d32:	ja     0x403cfd
  403d34:	ret    0x3ae5
  403d37:	dec    ebp
  403d38:	mov    edi,DWORD PTR [ebp+0x24834b6f]
  403d3e:	and    eax,0x52f27500
  403d43:	add    DWORD PTR [eax],eax
  403d45:	jmp    0xa09b9084
  403d4a:	jl     0x403d4f
  403d4c:	add    BYTE PTR [edx+0x69],dh
  403d4f:	add    al,0xbb
  403d51:	jmp    0x3403d90
  403d56:	xor    eax,0xf3d975b3
  403d5b:	mov    dl,0x75
  403d5d:	icebp  
  403d5e:	mov    dl,0x6f
  403d60:	mov    eax,0xc07d3ae9
  403d65:	xlat   BYTE PTR ds:[ebx]
  403d66:	es push edi
  403d69:	add    BYTE PTR [eax],al
  403d6b:	adc    BYTE PTR [ebx+0x4a00c4],al
  403d71:	jne    0x403d59
  403d73:	xlat   BYTE PTR ds:[ebx]
  403d74:	add    BYTE PTR [eax],al
  403d76:	jmp    0x4242e4b5
  403d7b:	test   BYTE PTR [esi-0x3700393d],al
  403d81:	ret    0x3aed
  403d84:	dec    ebp
  403d85:	mov    eax,DWORD PTR ds:0xff4bbb5
  403d8b:	jmp    0x403d3e
  403d8d:	inc    DWORD PTR [eax]
  403d8f:	lods   eax,DWORD PTR ds:[esi]
  403d90:	mov    cl,0x8e
  403d92:	test   DWORD PTR [ecx+esi*2],ebp
  403d95:	(bad)  
  403d96:	dec    DWORD PTR [edi-0x78]
  403d99:	clc    
  403d9a:	(bad)  
  403d9b:	daa    
  403d9c:	jo     0x403d9e
  403d9e:	add    BYTE PTR [eax],ah
  403da0:	inc    dh
  403da2:	test   esp,esp
  403da4:	outs   dx,BYTE PTR ds:[esi]
  403da5:	(bad)  
  403da6:	call   DWORD PTR [ecx]
  403da8:	(bad)  
  403da9:	(bad)  
  403daa:	call   DWORD PTR [ebp-0x800ff87]
  403db0:	outs   dx,DWORD PTR ds:[esi]
  403db1:	push   DWORD PTR [ebp-0x18]
  403db4:	add    BYTE PTR [eax],0x8d
  403db7:	dec    ebp
  403db8:	js     0x403db8
  403dba:	jmp    DWORD PTR [edi+0x2a006a4c]
  403dc0:	cld    
  403dc1:	mov    WORD PTR [ebp-0x915c],es
  403dc7:	add    BYTE PTR [edx],dl
  403dc9:	add    al,ch
  403dcb:	push   esp
  403dcc:	and    al,0x0
  403dce:	add    BYTE PTR [ebx],ah
  403dd0:	push   DWORD PTR fs:[eax+eax*1-0x64]
  403dd5:	mov    ah,0xbf
  403dd7:	jne    0x403d65
  403dd9:	lods   al,BYTE PTR ds:[esi]
  403dda:	mov    edi,0x1259deb
  403ddf:	add    BYTE PTR [eax-0x773d3703],ah
  403de5:	std    
  403de6:	push   esp
  403de7:	mov    esi,esp
  403de9:	jp     0x403daf
  403deb:	cld    
  403dec:	mov    bl,0xd4
  403dee:	fisubr DWORD PTR [edx-0x66]
  403df1:	jo     0x403e68
  403df3:	or     BYTE PTR [eax],cl
  403df5:	xor    edi,edi
  403df7:	jmp    DWORD PTR [edi]
  403df9:	mov    bl,0xbf
  403dfb:	je     0x403da9
  403dfd:	adc    ebx,DWORD PTR [edx-0x1]
  403e00:	lods   eax,DWORD PTR ds:[esi]
  403e01:	mov    ch,0xe7
  403e03:	jg     0x403e2c
  403e05:	outs   dx,DWORD PTR ds:[esi]
  403e06:	dec    DWORD PTR [ebx]
  403e08:	cmp    edi,esp
  403e0a:	add    ah,BYTE PTR ss:[edx]
  403e0d:	pop    ebx
  403e0e:	sbb    eax,0x7ea8a300
  403e13:	inc    ebp
  403e14:	es xchg edi,eax
  403e16:	mov    al,0x75
  403e18:	xor    edi,edi
  403e1a:	push   es
  403e1b:	mov    eax,0xc086a739
  403e20:	(bad)  
  403e21:	pop    ss
  403e22:	jge    0x403e69
  403e24:	sub    eax,0x84ff46df
  403e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2a:	je     0x403e2d
  403e2c:	ret    0xffeb
  403e2f:	mov    cl,BYTE PTR [ebx+0x4d]
  403e32:	add    al,0x6a
  403e34:	cmp    BYTE PTR [esi+eax*2],ah
  403e37:	inc    DWORD PTR [eax]
  403e39:	mov    DWORD PTR [edx+0x36],ebp
  403e3c:	or     al,0xd6
  403e3e:	adc    al,0x14
  403e40:	inc    DWORD PTR [ebx+ebp*4-0x65]
  403e44:	mov    eax,0x3bb091e5
  403e49:	je     0x403e02
  403e4b:	xor    eax,0x869aa202
  403e50:	(bad)  ds:0x2c37c4b
  403e56:	jo     0x403e1d
  403e58:	adc    al,0x39
  403e5a:	adc    al,0x7d
  403e5c:	in     al,dx
  403e5d:	mov    eax,0x8ef8035a
  403e62:	sbb    DWORD PTR [ebx+ebp*1+0x62],edx
  403e66:	int3   
  403e67:	dec    ebp
  403e68:	inc    DWORD PTR [edi+ebx*4]
  403e6b:	fwait
  403e6c:	sbb    BYTE PTR [esi+0x41],dh
  403e6f:	mov    al,0xb
  403e71:	jns    0x403ee5
  403e73:	sub    BYTE PTR [edx+0x3],ch
  403e76:	repnz xor eax,0xb09c5108
  403e7c:	call   DWORD PTR [esi-0x63]
  403e7f:	ret    
  403e80:	jne    0x403ebd
  403e82:	add    BYTE PTR [edx],dl
  403e84:	pop    eax
  403e85:	mov    eax,0x3103f932
  403e8a:	add    cl,ch
  403e8c:	cmp    DWORD PTR [esi],edi
  403e8e:	push   0xb02efbe9
  403e93:	adc    al,BYTE PTR [edx+esi*4]
  403e96:	inc    ebp
  403e97:	fstp   DWORD PTR ds:0x86645039
  403e9d:	add    BYTE PTR [ecx],bh
  403e9f:	test   al,0xee
  403ea1:	scas   eax,DWORD PTR es:[edi]
  403ea2:	imul   ebp,DWORD PTR [edi+0x2c1efc5c],0x85390496
  403eac:	test   eax,0xfd9b3b2d
  403eb1:	cmp    BYTE PTR [edx],bh
  403eb3:	inc    ebx
  403eb4:	shl    bh,cl
  403eb6:	jbe    0x403f33
  403eb8:	adc    al,0x0
  403eba:	mov    dl,0x12
  403ebc:	inc    ebx
  403ebd:	add    al,0x69
  403ebf:	jge    0x403f25
  403ec1:	add    al,0xd1
  403ec3:	scas   eax,DWORD PTR es:[edi]
  403ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec5:	push   esp
  403ec6:	(bad)  
  403ec7:	xor    eax,0x106baeed
  403ecc:	xor    ebp,ebx
  403ece:	std    
  403ecf:	punpckhdq mm6,QWORD PTR [ecx]
  403ed2:	dec    ecx
  403ed3:	add    ah,bh
  403ed5:	add    bh,dl
  403ed7:	call   0x7b50:0x348288e5
  403ede:	jp     0x403f2b
  403ee0:	mov    al,ds:0xbc003dc2
  403ee5:	jp     0x403e7c
  403ee7:	and    DWORD PTR ds:0x55f2e6ac,0x1a
  403eee:	cmp    DWORD PTR [edi+0x4e],edx
  403ef1:	cmp    DWORD PTR [ecx-0x68],eax
  403ef4:	sbb    cl,bl
  403ef6:	scas   ax,WORD PTR es:[edi]
  403ef8:	es dec ecx
  403efa:	pop    ebp
  403efb:	add    BYTE PTR [eax],al
  403efd:	jmp    0x94cb3f3c
  403f02:	add    BYTE PTR [edx+0x7a],dl
  403f05:	adc    dh,BYTE PTR [eax+esi*8-0x59]
  403f09:	push   eax
  403f0a:	xchg   ebx,eax
  403f0b:	ss jge 0x403f53
  403f0e:	adc    eax,0xe175af8d
  403f13:	fist   WORD PTR [ecx+0xc]
  403f16:	scas   al,BYTE PTR es:[edi]
  403f17:	mov    ebp,0x20ecfc2c
  403f1c:	cld    
  403f1d:	or     DWORD PTR [ebp+0x10],edi
  403f20:	cmp    BYTE PTR [ebp-0xf],0x3a
  403f24:	xor    eax,0x9afd1ac9
  403f29:	add    eax,0xc082f772
  403f2e:	jmp    0x553a:0xe5c2b987
  403f35:	mov    edx,ebp
  403f37:	mov    ebx,0x861af4c3
  403f3c:	sbb    BYTE PTR [eax-0x17ffc50d],bl
  403f42:	ficom  WORD PTR [esi+0x7170ffae]
  403f48:	lods   al,BYTE PTR ds:[esi]
  403f49:	lea    esp,[ecx+eax*4]
  403f4c:	dec    edi
  403f4d:	call   0xffeec327
  403f52:	fiadd  DWORD PTR [ebx-0x5cece1e7]
  403f58:	add    BYTE PTR es:[ebx-0x300ffc6],al
  403f5f:	into   
  403f60:	scas   al,BYTE PTR es:[edi]
  403f61:	jne    0x403f44
  403f63:	mov    dl,0x83
  403f65:	(bad)  
  403f66:	data16 add bh,dl
  403f69:	test   al,al
  403f6b:	out    dx,al
  403f6c:	mov    dh,0xef
  403f6e:	add    cl,ch
  403f70:	cmp    ch,BYTE PTR [edi+0x7bd25575]
  403f76:	fild   DWORD PTR [eax]
  403f78:	call   FWORD PTR [ebp+0x3d]
  403f7b:	add    dl,bh
  403f7d:	add    al,BYTE PTR [eax]
  403f7f:	jbe    0x403fe6
  403f81:	mov    ebx,DWORD PTR [ecx+eax*1]
  403f84:	pusha  
  403f85:	add    bh,bh
  403f87:	jne    0x403fad
  403f89:	mov    ebx,DWORD PTR [edx-0x1]
  403f8c:	pop    ds
  403f8d:	pop    esi
  403f8e:	test   eax,eax
  403f90:	aam    0xc5
  403f92:	push   DWORD PTR [ebp+0x44]
  403f95:	mov    DWORD PTR [ebp-0x74a1c023],ecx
  403f9b:	push   ebp
  403f9c:	and    al,0x28
  403f9e:	adc    ch,BYTE PTR [edx+0x20]
  403fa1:	or     dh,BYTE PTR [ecx+eiz*1]
  403fa4:	and    BYTE PTR [edx],al
  403fa6:	push   DWORD PTR [ebp+0x1c]
  403fa9:	pop    esp
  403faa:	jne    0x403fa0
  403fac:	fist   WORD PTR [edx+0xc]
  403faf:	(bad)  
  403fb0:	and    eax,0xe000005c
  403fb5:	add    DWORD PTR [eax+0x3],ebp
  403fb8:	dec    esp
  403fb9:	inc    ecx
  403fba:	add    bh,bh
  403fbc:	and    eax,0x5619e870
  403fc1:	add    al,0x0
  403fc3:	push   ebx
  403fc4:	fcmovnb st,st(1)
  403fc6:	je     0x403ffe
  403fc8:	dec    ebx
  403fc9:	pop    esp
  403fca:	push   0x42ec0003
  403fcf:	add    al,ch
  403fd1:	push   eax
  403fd2:	sub    BYTE PTR [eax],al
  403fd4:	add    BYTE PTR [ebx+0x2b475759],ah
  403fda:	mov    ebx,0x18194b9
  403fdf:	add    BYTE PTR [eax-0x47519063],dh
  403fe5:	in     al,0x10
  403fe7:	add    BYTE PTR [eax],al
  403fe9:	sub    eax,ecx
  403feb:	mov    BYTE PTR [edi-0x21],0x3
  403fef:	push   edi
  403ff0:	push   ebx
  403ff1:	cmp    DWORD PTR [edi],edi
  403ff3:	mov    cl,0xb5
  403ff5:	cmp    DWORD PTR [edi+0x6661457a],edx
  403ffb:	lds    eax,FWORD PTR [edi+0x5e]
  403ffe:	pushf  
  403fff:	dec    esp
  404000:	pop    ebx
  404001:	loope  0x403fcc
  404003:	fild   WORD PTR [eax+0x39]
  404006:	fidiv  WORD PTR [esi]
  404008:	cld    
  404009:	push   ecx
  40400a:	out    0x76,eax
  40400c:	add    BYTE PTR [ecx],bh
  40400e:	push   0xfffffff8
  404010:	mov    edi,0xf8785bad
  404015:	mov    eax,ds:0x3940dfaa
  40401a:	pmulhw mm6,QWORD PTR [ebx-0x7ff68c7]
  404021:	outs   dx,BYTE PTR ds:[esi]
  404022:	pop    esi
  404023:	js     0x404004
  404025:	rcl    BYTE PTR [edx+0x13],1
  404028:	add    BYTE PTR [ecx],bh
  40402a:	xchg   esi,edi
  40402c:	icebp  
  40402d:	iret   
  40402e:	pop    esi
  40402f:	xchg   edi,eax
  404030:	adc    DWORD PTR [eax],eax
  404032:	cmp    DWORD PTR [edi-0x1a083f28],edx
  404038:	lods   al,BYTE PTR ds:[esi]
  404039:	add    BYTE PTR [esi-0x149863f6],cl
  40403f:	ins    DWORD PTR es:[edi],dx
  404040:	lods   al,BYTE PTR ds:[esi]
  404041:	mov    ebp,DWORD PTR [edi+eax*8-0x8]
  404045:	rol    DWORD PTR [ebp-0x5d],1
  404048:	jp     0x40404c
  40404a:	rcr    BYTE PTR [ebx+edx*2-0x53873718],cl
  404051:	call   DWORD PTR [esi]
  404053:	pop    ebp
  404054:	inc    esp
  404055:	(bad)  
  404056:	cmp    al,0xde
  404058:	dec    eax
  404059:	jmp    FWORD PTR [ebx+ebp*1]
  40405c:	fwait
  40405d:	and    eax,0x83ac2d7c
  404062:	adc    al,0x2f
  404064:	add    esi,DWORD PTR [edi+0x36]
  404067:	inc    si
  404069:	clc    
  40406a:	cmp    DWORD PTR [eax],eax
  40406c:	jmp    0xd4ed79d4
  404071:	stos   DWORD PTR es:[edi],eax
  404072:	jbe    0x4040a6
  404074:	pop    ebp
  404075:	lods   al,BYTE PTR ds:[esi]
  404076:	in     al,0xf7
  404078:	inc    eax
  404079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40407a:	lods   al,BYTE PTR fs:[esi]
  40407c:	inc    esi
  40407d:	lods   al,BYTE PTR ds:[esi]
  40407e:	in     al,0xb3
  404080:	push   ecx
  404081:	xchg   BYTE PTR [ebx-0x54],dh
  404084:	ss clc 
  404086:	mov    ?,WORD PTR [edx]
  404088:	jmp    0x404022
  40408a:	and    bh,cl
  40408c:	sub    BYTE PTR [edi],dh
  40408e:	es jns 0x404045
  404091:	mov    bh,0xc2
  404093:	push   cs
  404094:	push   ss
  404095:	add    BYTE PTR ss:0x26b794ab,bh
  40409c:	dec    edi
  40409d:	mov    ebp,0xe428f986
  4040a2:	push   0x3e90038
  4040a7:	ret    0xf555
  4040aa:	ja     0x4040d7
  4040ac:	stos   DWORD PTR es:[edi],eax
  4040ad:	pop    esp
  4040ae:	mov    al,0xfe
  4040b0:	dec    esi
  4040b1:	icebp  
  4040b2:	stos   BYTE PTR es:[edi],al
  4040b3:	ins    BYTE PTR es:[edi],dx
  4040b4:	lods   al,BYTE PTR ds:[esi]
  4040b5:	sar    DWORD PTR [edi-0x25],0xab
  4040b9:	into   
  4040ba:	jg     0x4040b6
  4040bc:	dec    ebx
  4040bd:	and    bh,BYTE PTR [ebp+0x50e8fcfb]
  4040c3:	ret    0x6a9c
  4040c6:	ror    BYTE PTR [ecx-0x1c20e5ad],0x18
  4040cd:	jmp    0x91ebffb5
  4040d2:	sbb    BYTE PTR [ebx-0xb826955],0xab
  4040d9:	add    DWORD PTR [ecx+ebx*2],eax
  4040dc:	add    cl,ch
  4040de:	fwait
  4040df:	and    BYTE PTR [esi+0x45c0ab7e],bl
  4040e5:	add    BYTE PTR ds:0xe920002d,bh
  4040eb:	cmp    bl,BYTE PTR [eax-0x542db494]
  4040f1:	mov    DWORD PTR [esi+ebx*8-0x23d68284],esp
  4040f8:	jmp    0x4040f9
  4040fa:	call   0xc02f7aff
  4040ff:	cmp    bh,bh
  404101:	ret    0x2945
  404104:	popa   
  404105:	stos   DWORD PTR es:[edi],eax
  404106:	(bad)  
  404107:	jmp    0x2f148687
  40410c:	xor    al,BYTE PTR [eax]
  40410e:	add    BYTE PTR [esi],ch
  404110:	clc    
  404111:	scas   eax,DWORD PTR es:[edi]
  404112:	(bad)  
  404113:	(bad)  
  404114:	cmp    al,BYTE PTR [eax]
  404116:	call   FWORD PTR [esi+edx*8-0x2dc6ba86]
  40411d:	xor    al,0xb4
  40411f:	jbe    0x404199
  404121:	pushf  
  404122:	lea    esp,[edx+edi*8+0x3ae9684f]
  404129:	add    BYTE PTR [eax+0x75ab3a83],al
  40412f:	icebp  
  404130:	mov    ds:0x3ae9b45d,al
  404135:	idiv   DWORD PTR [edi+0x7d7f3b5d]
  40413b:	mov    ecx,0xd005353a
  404140:	mov    al,ds:0xfbe8ffff
  404145:	inc    esp
  404146:	mov    al,0xb6
  404148:	inc    ebx
  404149:	add    BYTE PTR [eax],al
  40414b:	pop    esp
  40414c:	jns    0x4041be
  40414e:	push   eax
  40414f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404150:	or     DWORD PTR [eax+ebp*2-0x17],ebp
  404154:	cmp    al,BYTE PTR [eax]
  404156:	and    BYTE PTR [ecx+edi*8-0x41],0x50
  40415b:	adc    DWORD PTR [ecx+0x74],0x90000000
  404162:	test   eax,0x8b9d75bf
  404167:	test   eax,0x8afea000
  40416c:	inc    ebp
  40416d:	dec    esp
  40416e:	rol    DWORD PTR [eax],0x0
  404171:	add    eax,0x54b9bfd8
  404176:	add    al,0x0
  404178:	add    BYTE PTR [ebx-0x3c],dl
  40417b:	rep stos BYTE PTR es:[edi],al
  40417d:	pop    ds
  40417e:	inc    eax
  40417f:	sar    BYTE PTR [eax+edx*2],0xfe
  404183:	(bad)  
  404184:	dec    BYTE PTR [ebp-0xbba70e6]
  40418a:	mov    ebp,0xf617d445
  40418f:	(bad)  
  404190:	dec    DWORD PTR [edi]
  404192:	inc    eax
  404193:	lock push DWORD PTR [edi]
  404196:	(bad)  
  404197:	dec    DWORD PTR [ebp+ebx*8+0x106a50bd]
  40419e:	or     al,0x0
  4041a0:	call   FWORD PTR [ebp+0x4c31e821]
  4041a6:	std    
  4041a7:	dec    DWORD PTR [edx]
  4041a9:	pusha  
  4041aa:	fld    DWORD PTR ds:0xcd9583
  4041b0:	jne    0x4041c4
  4041b2:	lea    esp,[eax-0x1]
  4041b5:	lea    ebx,[eax-0x1]
  4041b8:	jne    0x404186
  4041ba:	or     al,0x1d
  4041bc:	sub    al,0x11
  4041be:	add    al,0xff
  4041c0:	jne    0x404176
  4041c2:	mov    edx,cs
  4041c4:	mov    bl,0x0
  4041c6:	loopne 0x4041c5
  4041c8:	add    ah,0xf0
  4041cb:	test   al,0xb6
  4041cd:	inc    ebp
  4041ce:	test   al,0x54
  4041d0:	push   0x0
  4041d2:	xchg   edi,eax
  4041d3:	fsincos 
  4041d5:	call   0x3f9ca0
  4041da:	cmp    DWORD PTR [esi+0x7e3b75c3],ebx
  4041e0:	out    dx,eax
  4041e1:	mov    ah,dh
  4041e3:	ds test eax,0x258fd575
  4041e9:	mov    dl,0x39
  4041eb:	xchg   edi,eax
  4041ec:	push   ebx
  4041ed:	dec    DWORD PTR [ebx+ebx*8]
  4041f0:	test   al,0x75
  4041f2:	ror    DWORD PTR [edi+0x4f],0xfb
  4041f6:	jbe    0x404242
  4041f8:	std    
  4041f9:	mov    edi,0x109c94e4
  4041fe:	data16 aam 0x13
  404201:	jmp    esp
  404203:	mov    dl,0xa8
  404205:	jne    0x404198
  404207:	dec    edi
  404208:	out    dx,eax
  404209:	cld    
  40420a:	dec    esi
  40420b:	bnd jl 0x4041e6
  40420e:	inc    esi
  40420f:	je     0x40427c
  404211:	call   0x448d42
  404216:	ss xchg esp,eax
  404218:	outs   dx,DWORD PTR ds:[esi]
  404219:	call   0xffe93a7a
  40421e:	es xchg esp,eax
  404220:	addr16 call 0xffe93a7a
  404226:	push   ss
  404227:	xor    al,0xa7
  404229:	call   0xa9386e2e
  40422e:	push   DWORD PTR [edx-0xfa0b32b]
  404234:	push   esp
  404235:	idiv   edi
  404237:	lea    ebp,[esi]
  404239:	xchg   edi,eax
  40423a:	xor    ebp,0xffffffd2
  40423d:	jl     0x404284
  40423f:	xor    eax,0x3774c39e
  404244:	pop    edx
  404245:	add    eax,DWORD PTR [eax]
  404247:	cmp    DWORD PTR [edi+0x7374c703],edx
  40424d:	add    eax,DWORD PTR [eax]
  40424f:	cmp    DWORD PTR [edi-0x42ba8a],edx
  404255:	cmp    BYTE PTR [ecx+0x2e9dfc2c],ch
  40425b:	inc    ecx
  40425c:	cwde   
  40425d:	add    BYTE PTR [edx+0x266aa8a6],ch
  404263:	popf   
  404264:	(bad)  
  404265:	cld    
  404266:	adc    BYTE PTR [ebx],ah
  404268:	add    BYTE PTR [esi+0x2e],bh
  40426b:	cmp    eax,0x91a7fca9
  404270:	push   ecx
  404271:	outs   dx,DWORD PTR ds:[esi]
  404272:	test   al,0x7e
  404274:	dec    edi
  404275:	data16 cs jne 0x404210
  404279:	cmp    DWORD PTR [ebx-0x454e5792],esp
  40427f:	jnp    0x404278
  404281:	call   0x6adbf4d4
  404286:	mov    edi,0x3e262155
  40428b:	dec    ebp
  40428c:	(bad)  
  40428d:	call   0x42be42b3
  404292:	das    
  404293:	or     DWORD PTR [ecx],edi
  404295:	push   ss
  404296:	in     eax,dx
  404297:	jbe    0x404315
  404299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40429a:	mov    ecx,0xe900b91b
  40429f:	add    edx,DWORD PTR [ecx+0x39030ea7]
  4042a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a6:	jl     0x4042a3
  4042a8:	push   ds
  4042a9:	xchg   edx,eax
  4042aa:	cmp    al,BYTE PTR [ebx]
  4042ac:	cmp    DWORD PTR [ecx+0x4d06ff2b],edi
  4042b2:	bound  edx,QWORD PTR [edi+0x4f95bcba]
  4042b8:	mov    bh,BYTE PTR [edi+0x395824]
  4042be:	jmp    0x420b6cc6
  4042c3:	add    al,0x49
  4042c5:	add    cl,ch
  4042c7:	fwait
  4042c8:	mov    al,0xa0
  4042ca:	mov    esi,0x3dc0a7
  4042cf:	test   eax,0xe9100025
  4042d4:	cmp    bl,BYTE PTR [eax-0x58217674]
  4042da:	mov    DWORD PTR [ebx*1+0x3af90018],esp
  4042e1:	add    al,ch
  4042e3:	push   cs
  4042e4:	aad    0xa7
  4042e6:	push   DWORD PTR [eax-0x8]
  4042e9:	arpl   WORD PTR [ebp+0x3c69cefc],cx
  4042ef:	jmp    0xa973432e
  4042f4:	add    dl,cl
  4042f6:	pop    edx
  4042f7:	(bad)  
  4042f8:	lods   al,BYTE PTR ds:[esi]
  4042f9:	mov    dh,0xe4
  4042fb:	(bad)  
  4042fc:	call   0x29b5ea3b
  404301:	out    dx,al
  404302:	cmp    al,0xd4
  404304:	dec    esi
  404305:	sub    BYTE PTR [eax-0x71],ch
  404308:	lods   al,BYTE PTR ds:[esi]
  404309:	mov    bh,BYTE PTR [edi-0x869debb]
  40430f:	(bad)  
  404310:	call   0x2f34809c
  404315:	inc    esi
  404316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404317:	push   DWORD PTR [eax+edi*2-0x44]
  40431b:	push   eax
  40431c:	xchg   ecx,eax
  40431d:	cmp    al,BYTE PTR [eax]
  40431f:	add    BYTE PTR [ecx+0x43],ch
  404322:	add    bh,bh
  404324:	xchg   esp,eax
  404325:	and    bl,BYTE PTR [edi+0x3d3bb5]
  40432b:	or     ebp,DWORD PTR [ecx]
  40432d:	dec    ecx
  40432e:	inc    BYTE PTR [edx+0x74fff674]
  404334:	in     al,0x9d
  404336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404337:	add    cl,ch
  404339:	cmp    bh,BYTE PTR [edi-0x96866bb]
  40433f:	(bad)  
  404340:	call   0x39f080a6
  404345:	xchg   esi,eax
  404346:	sub    al,0xbc
  404348:	add    BYTE PTR [eax-0x4],ch
  40434b:	(bad)  
  40434c:	jmp    DWORD PTR [eax+0x28]
  40434f:	inc    ebp
  404350:	les    esp,FWORD PTR [eax]
  404352:	test   BYTE PTR [eax+0xb02d0b2],dl
  404358:	rol    BYTE PTR [eax],0x55
  40435b:	add    ecx,ebp
  40435d:	fsub   DWORD PTR [eax+0x558b0002]
  404363:	adc    al,0xc6
  404365:	add    BYTE PTR [eax-0x63b82d9],dl
  40436b:	sahf   
  40436c:	(bad)  
  40436d:	jmp    DWORD PTR [eax-0x50c404f]
  404373:	gs inc ebp
  404375:	(bad)  
  404376:	int3   
  404377:	add    al,BYTE PTR [eax]
  404379:	add    bh,bl
  40437b:	out    dx,eax
  40437c:	mov    bh,0x8f
  40437e:	xchg   ebp,eax
  40437f:	jb     0x404348
  404381:	inc    ebp
  404382:	sub    BYTE PTR [esi+0xf],bl
  404385:	add    BYTE PTR [eax+0x65],dl
  404388:	inc    ebp
  404389:	hlt    
  40438a:	jmp    FWORD PTR [ebp+0x3fddffff]
  404390:	les    edx,FWORD PTR [eax+0x7a]
  404393:	add    ch,BYTE PTR [edx+0x0]
  404396:	(bad)  
  404398:	mov    ebx,0x2fe4e8
  40439d:	add    BYTE PTR [ebx],ch
  40439f:	ret    0x674
  4043a2:	xchg   ebx,eax
  4043a3:	fcom   st(3)
  4043a5:	add    ch,al
  4043a7:	add    cl,ch
  4043a9:	mov    WORD PTR [eax],fs
  4043ab:	add    al,BYTE PTR [eax]
  4043ad:	inc    DWORD PTR [ebp+0x5075ff11]
  4043b3:	pop    esi
  4043b4:	jne    0x40436e
  4043b6:	mov    eax,0xe0412aae
  4043bb:	pop    esp
  4043bc:	jne    0x40437a
  4043be:	add    BYTE PTR [eax],cl
  4043c0:	mov    ah,0xb1
  4043c2:	add    BYTE PTR [ecx],bh
  4043c4:	xchg   edi,eax
  4043c5:	add    ah,0x45
  4043c8:	(bad)  
  4043c9:	ins    BYTE PTR es:[edi],dx
  4043ca:	inc    ebp
  4043cb:	cmc    
  4043cc:	pop    es
  4043cd:	sbb    al,BYTE PTR [eax]
  4043cf:	into   
  4043d0:	in     al,dx
  4043d1:	ret    
  4043d2:	call   0xffe5b399
  4043d7:	xor    dl,BYTE PTR [edi+0x2f]
  4043da:	add    ah,BYTE PTR [edx-0x1aba84c3]
  4043e0:	xchg   BYTE PTR [edi],ch
  4043e2:	mov    ah,0x91
  4043e4:	cmp    BYTE PTR [esi+0x2f769eff],ah
  4043ea:	mov    esp,0x740fa1
  4043ef:	cmp    DWORD PTR [edi],eax
  4043f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f2:	jne    0x4043b9
  4043f4:	cs das 
  4043f6:	mov    ah,0x91
  4043f8:	adc    DWORD PTR [ebx-0x3c4d8901],ebp
  4043fe:	jne    0x40443b
  404400:	push   edx
  404401:	repz and ah,0xa6
  404405:	add    esi,DWORD PTR [ebp+eax*2+0x36]
  404409:	das    
  40440a:	adc    BYTE PTR [esi+0x64],dl
  40440d:	idiv   esi
  40440f:	les    ebp,FWORD PTR [edx]
  404411:	pushf  
  404412:	inc    eax
  404413:	inc    eax
  404414:	out    dx,al
  404415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404416:	or     edi,DWORD PTR [ecx+0x6c]
  404419:	add    ebx,ebp
  40441b:	dec    esi
  40441c:	xor    cl,ah
  40441e:	or     edx,DWORD PTR [edx]
  404420:	mov    edx,DWORD PTR [edx]
  404422:	lea    eax,[eax]
  404424:	jl     0x404461
  404426:	push   esp
  404427:	jmp    DWORD PTR [ebx+ebp*4+0xecd75a4]
  40442e:	or     edi,ebx
  404430:	push   cs
  404431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404432:	js     0x40440c
  404434:	push   es
  404435:	and    al,0x6f
  404437:	call   0x442c44
  40443c:	idiv   bh
  40443e:	pop    ebx
  40443f:	(bad)
  404443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404444:	out    0xa4,al
  404446:	pop    esp
  404447:	push   0xa4adf6d1
  40444c:	(bad)  
  40444d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40444e:	cmp    al,0x6c
  404450:	loope  0x404450
  404452:	popf   
  404453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404454:	mov    BYTE PTR [eax+0x2c395834],0xe1
  40445b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445c:	sub    al,0x54
  40445e:	xchg   ecx,eax
  40445f:	mov    al,0x8f
  404461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404462:	sahf   
  404463:	js     0x4044df
  404465:	dec    eax
  404466:	ss mov ebx,0x4ee90f7b
  40446c:	ret    0x6a93
  40446f:	mov    edi,0xc8d25091
  404474:	mov    edx,0x503e522
  404479:	ss push 0x26
  40447c:	dec    ecx
  40447d:	add    ch,bl
  40447f:	cmp    edi,DWORD PTR [edx+edi*1+0x2a66535d]
  404486:	in     eax,0x9b
  404488:	add    BYTE PTR [ebp+0x6f],ah
  40448b:	jmp    0xc2000093
  404490:	repz dec edi
  404492:	sub    ch,ch
  404494:	fwait
  404495:	mov    ebp,0xb0a436cd
  40449a:	cmp    dh,BYTE PTR [ecx]
  40449c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449d:	lods   al,BYTE PTR ds:[esi]
  40449e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449f:	adc    DWORD PTR [esi-0x22],esp
  4044a2:	add    cl,ch
  4044a4:	clc    
  4044a5:	out    0x2c,al
  4044a7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044aa:	adc    BYTE PTR [esi],cl
  4044ac:	adc    DWORD PTR cs:[ecx+0x6],edx
  4044b0:	cs inc ecx
  4044b2:	cwde   
  4044b3:	jmp    0xf262:0xa406a5
  4044ba:	mov    ds:0x5ad3ed75,eax
  4044bf:	scas   eax,DWORD PTR es:[edi]
  4044c0:	jmp    0xedb5e7ff
  4044c5:	xchg   edx,eax
  4044c6:	dec    eax
  4044c7:	fcom   st(6)
  4044c9:	call   0xcbf:0x432c377
  4044d0:	jmp    0x692cbbe6
  4044d5:	icebp  
  4044d6:	xor    dh,bh
  4044d8:	mov    dh,0x9a
  4044da:	jne    0x404461
  4044dc:	cmp    ebx,ebx
  4044de:	mov    ds:0x15d39ff,eax
  4044e3:	add    ecx,ebp
  4044e5:	cmp    bl,BYTE PTR [eax+0x355863]
  4044eb:	leave  
  4044ec:	stos   BYTE PTR es:[edi],al
  4044ed:	add    BYTE PTR [eax+0x77],dl
  4044f0:	in     al,dx
  4044f1:	push   0x58
  4044f3:	clc    
  4044f4:	push   esp
  4044f6:	cmp    edi,DWORD PTR [edi+0x7d]
  4044f9:	fnstcw WORD PTR [edx]
  4044fb:	sub    al,0x19
  4044fd:	outs   dx,BYTE PTR ds:[esi]
  4044fe:	push   eax
  4044ff:	or     al,0xff
  404501:	fadd   QWORD PTR [edx-0x68]
  404504:	fiadd  DWORD PTR [ebx-0x66]
  404507:	mov    ds:0xa26adcff,eax
  40450c:	jne    0x4044eb
  40450e:	fwait
  40450f:	sub    eax,0xc7375108
  404514:	(bad)  
  404515:	ds je  0x4044d6
  404518:	adc    cl,ch
  40451a:	add    DWORD PTR [edi-0x14],esi
  40451d:	push   0x58
  40451f:	clc    
  404520:	call   FWORD PTR [esi+ebp*1+0x3aed7d7e]
  404527:	sub    al,0x16
  404529:	push   ss
  40452a:	inc    eax
  40452b:	adc    bh,bh
  40452d:	xchg   esp,eax
  40452e:	inc    edx
  40452f:	cwde   
  404530:	scas   al,BYTE PTR es:[edi]
  404531:	add    BYTE PTR [edx+0x5f],bl
  404534:	(bad)  
  404535:	dec    DWORD PTR [ebp+0x1875fef3]
  40453b:	push   edi
  40453c:	add    eax,0xc95de7db
  404541:	ret    0xfee4
  404544:	push   esp
  404545:	mov    esi,esp
  404547:	jns    0x40450d
  404549:	lock pop es
  40454b:	or     BYTE PTR [eax+ebp*8],cl
  40454e:	daa    
  40454f:	pop    ebx
  404550:	(bad)  
  404551:	inc    DWORD PTR [eax]
  404553:	dec    ecx
  404554:	cmp    BYTE PTR [ebx+eax*4],cl
  404557:	add    eax,0x1e740010
  40455c:	pop    edi
  40455d:	jne    0x40456b
  40455f:	js     0x404512
  404561:	loop   0x404562
  404563:	xlat   BYTE PTR ds:[ebx]
  404564:	icebp  
  404565:	mov    edi,0x45915274
  40456a:	lock pusha 
  40456c:	pop    edi
  40456d:	jne    0x40457b
  40456f:	mov    eax,0xb7ffe37c
  404574:	icebp  
  404575:	mov    edi,0x7d7bc274
  40457a:	cld    
  40457b:	nop
  40457c:	dec    BYTE PTR [edi]
  40457e:	add    BYTE PTR [ebx-0x62],dh
  404581:	(bad)  
  404582:	jne    0x404558
  404584:	pop    ebp
  404585:	jne    0x40457f
  404587:	or     BYTE PTR [eax-0xdf8001a],ch
  40458d:	mov    edi,0x755d5175
  404592:	adc    bh,dh
  404594:	pop    es
  404595:	cld    
  404596:	dec    DWORD PTR [ebp+0x5875ff86]
  40459c:	push   esi
  40459d:	dec    edi
  40459e:	jmp    DWORD PTR [edi+0x5e]
  4045a1:	lea    eax,[ebp+0x50]
  4045a4:	in     eax,dx
  4045a5:	out    0xe0,eax
  4045a7:	xor    ebx,DWORD PTR [esi-0x1]
  4045aa:	(bad)  
  4045ab:	cmp    DWORD PTR [edi+ecx*1-0x5e2b1f18],eax
  4045b2:	inc    DWORD PTR [eax]
  4045b4:	(bad)  
  4045b5:	push   cs
  4045b6:	add    BYTE PTR [eax],al
  4045b8:	ins    BYTE PTR es:[edi],dx
  4045b9:	cs scas eax,DWORD PTR es:[edi]
  4045bb:	xor    ebp,0xffffffa7
  4045be:	mov    eax,ds:0xb0ff4575
  4045c3:	loop   0x4045b3
  4045c5:	call   0xc1f:0x1635458b
  4045cc:	cmp    DWORD PTR [ebx+0x49],eax
  4045cf:	dec    DWORD PTR [ebx+eax*8-0x55]
  4045d3:	pop    edx
  4045d4:	fstp   TBYTE PTR [edx-0x1406f45f]
  4045da:	aam    0x8c
  4045dc:	je     0x404645
  4045de:	xor    al,0xff
  4045e0:	sub    al,0xc3
  4045e2:	stos   DWORD PTR es:[edi],eax
  4045e3:	adc    DWORD PTR [edx+0x790ba15a],ebx
  4045e9:	or     esp,ebp
  4045eb:	sbb    BYTE PTR [ebx+ecx*4],0x4
  4045ef:	add    BYTE PTR [ecx],ch
  4045f1:	xchg   edi,eax
  4045f2:	adc    al,0x11
  4045f4:	mov    fs,WORD PTR [ebx+esi*8-0x5edcf302]
  4045fb:	jne    0x40457e
  4045fd:	sub    dl,BYTE PTR [edi]
  4045ff:	or     BYTE PTR [ecx+0x24],ah
  404602:	mov    ds:0x472c6eff,al
  404607:	lock or DWORD PTR [edi+0x22],ecx
  40460b:	jecxz  0x40466b
  40460d:	dec    edx
  40460e:	mov    eax,ds:0x493f4575
  404613:	fisttp QWORD PTR [esi+0x3a]
  404616:	retf   
  404617:	ret    0x9735
  40461a:	mov    eax,DWORD PTR ss:[eax]
  40461d:	dec    ebp
  40461e:	push   ss
  40461f:	enter  0x8af0,0xfe
  404623:	mov    esp,0xf100a4ff
  404628:	stos   DWORD PTR es:[edi],eax
  404629:	mov    al,0x9d
  40462b:	push   ds
  40462c:	mov    eax,ds:0x84e13ab0
  404631:	xchg   esp,eax
  404632:	clc    
  404633:	call   0x7ce1bd4f
  404638:	or     edx,DWORD PTR [ecx]
  40463a:	stos   DWORD PTR es:[edi],eax
  40463b:	or     BYTE PTR [ecx+0x1828f4fe],ah
  404641:	sub    esi,DWORD PTR [ebx-0x5c]
  404644:	xchg   ebx,eax
  404645:	mov    DWORD PTR [ecx+0x53d10c5c],esp
  40464b:	retf   
  40464c:	mov    al,ds:0x17a8f4de
  404651:	sbb    edi,DWORD PTR [edi+0x4c]
  404654:	mov    al,ds:0x3d90039
  404659:	dec    edx
  40465a:	adc    BYTE PTR [esi+0x3ca0bd16],bh
  404660:	pushf  
  404661:	mov    eax,ds:0xaea0c6e0
  404666:	hlt    
  404667:	test   al,0x17
  404669:	cmp    BYTE PTR ds:0x4fa9466c,bh
  40466f:	cmp    ebp,0xa08ea09b
  404675:	add    al,0xf8
  404677:	nop
  404678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404679:	mov    al,gs:0x447a8c7e
  40467f:	mov    al,ds:0x3d00c5
  404684:	adc    al,0x8d
  404686:	pop    ebp
  404687:	jle    0x4046b6
  404689:	push   edi
  40468a:	addr16 mov al,ds:0xc85e
  40468e:	mov    ah,0x67
  404690:	push   edi
  404691:	mov    al,ds:0x3e8ff56
  404696:	cmp    DWORD PTR [ebp-0x54],esi
  404699:	rdmsr  
  40469b:	shl    BYTE PTR [ebp-0x1846fa],0xe8
  4046a2:	dec    edi
  4046a3:	add    eax,0x3bb1e9
  4046a8:	add    BYTE PTR [esi],ah
  4046aa:	dec    edi
  4046ab:	or     al,0xe8
  4046ad:	dec    eax
  4046ae:	rcr    DWORD PTR [edi+0x15fae2ff],1
  4046b4:	jno    0xe9813352
  4046ba:	fst    DWORD PTR ds:0xc018110c
  4046c0:	push   esi
  4046c2:	mov    ds:0xde2a680d,al
  4046c7:	inc    eax
  4046c8:	add    dh,ah
  4046ca:	inc    eax
  4046cb:	or     al,0xe8
  4046cd:	push   cs
  4046ce:	xchg   ebp,eax
  4046cf:	lahf   
  4046d0:	jmp    DWORD PTR [eax-0x40]
  4046d3:	pop    eax
  4046d4:	dec    dh
  4046d6:	scas   al,BYTE PTR es:[edi]
  4046d7:	sub    BYTE PTR [esi],bh
  4046d9:	call   0x64cd4718
  4046de:	sti    
  4046df:	sahf   
  4046e0:	push   DWORD PTR [esi-0x72585793]
  4046e6:	add    dh,cl
  4046e8:	lahf   
  4046e9:	lea    ebp,[ebx+edi*2-0x62]
  4046ed:	call   FWORD PTR [esi+0x51b59f65]
  4046f3:	mov    bh,0x9f
  4046f5:	inc    DWORD PTR [ecx-0x16ff9226]
  4046fb:	mov    ch,0x85
  4046fd:	mov    esp,0x409f9e7f
  404702:	out    0xbe,al
  404704:	cli    
  404705:	add    cl,ch
  404707:	cmp    cl,BYTE PTR [ebp-0x6038d46b]
  40470d:	call   DWORD PTR [esi+0x3b]
  404710:	lock (bad) 
  404712:	call   0x6ac45651
  404717:	xor    eax,0xcd000000
  40471c:	inc    ecx
  40471d:	sub    al,0x50
  40471f:	push   0x20412c3c
  404724:	imul   edi,DWORD PTR [ebp+ebp*4-0x3ff4fce0],0xffffffc5
  40472c:	pop    es
  40472d:	jmp    0x4357fe
  404732:	lea    edx,[ebp+0x3ffffec2]
  404738:	jno    0x40477c
  40473a:	sub    al,0xa0
  40473c:	jmp    0x9fe8:0x2d12cba
  404743:	jge    0x404749
  404745:	add    BYTE PTR [ebx],cl
  404747:	and    cl,bh
  404749:	add    al,0xe9
  40474b:	add    bh,cl
  40474d:	add    al,BYTE PTR [eax]
  40474f:	add    bh,bh
  404751:	test   DWORD PTR [ebx],0xff64ede8
  404757:	(bad)  
  404758:	fcmovnb st,st(2)
  40475a:	jne    0x40476b
  40475c:	push   0xd04128b1
  404761:	jge    0x4047d8
  404763:	or     al,0x78
  404765:	sbb    bh,bl
  404767:	(bad)  
  404768:	fild   QWORD PTR [ecx+0xa]
  40476b:	push   0xffffff90
  40476d:	jge    0x4047e4
  40476f:	or     al,0xc8
  404771:	mov    edi,ds
  404773:	jmp    FWORD PTR [edi-0x413d6a91]
  404779:	jge    0x40477a
  40477b:	lea    esp,[edx]
  40477d:	nop
  40477e:	push   ecx
  40477f:	push   eax
  404780:	test   al,0x50
  404782:	(bad)  
  404784:	out    dx,eax
  404785:	sar    dh,cl
  404787:	jne    0x404711
  404789:	jge    0x404800
  40478b:	adc    al,0xdf
  40478d:	test   DWORD PTR [edi],0x7f7ff50
  404793:	call   0xffdd80d1
  404798:	dec    esi
  404799:	inc    eax
  40479a:	(bad)  
  40479b:	fild   DWORD PTR [esi+0x45]
  40479e:	stos   BYTE PTR es:[edi],al
  40479f:	pusha  
  4047a0:	lods   al,BYTE PTR ds:[esi]
  4047a1:	push   0xffffffef
  4047a3:	mov    BYTE PTR [ebx+ebx*1+0x2b2eff9d],bh
  4047aa:	and    BYTE PTR [eax],dl
  4047ac:	cmp    DWORD PTR [ecx+eax*1-0x15],edi
  4047b0:	add    BYTE PTR [ebx-0x2],cl
  4047b3:	pop    ss
  4047b4:	adc    BYTE PTR [esi],dl
  4047b6:	cmp    eax,0xf0efe57
  4047bb:	stos   DWORD PTR es:[edi],eax
  4047bc:	inc    edx
  4047bd:	xlat   BYTE PTR ds:[ebx]
  4047be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047bf:	add    ecx,DWORD PTR [ebx]
  4047c1:	stc    
  4047c2:	adc    esp,eax
  4047c4:	addr16 add al,0xc0
  4047c7:	inc    esp
  4047c8:	add    dh,ch
  4047ca:	adc    al,0xf
  4047cc:	call   0xffde0dfe
  4047d1:	fidiv  WORD PTR [eax+ebx*2-0x2]
  4047d5:	(bad)  
  4047d6:	mov    dh,0x34
  4047d8:	call   0xffddb62a
  4047dd:	imul   ebp,DWORD PTR [edx],0xd339181f
  4047e3:	ud0    ebp,DWORD PTR [ebx+edi*4]
  4047e7:	xor    edi,edi
  4047e9:	and    al,0x9f
  4047eb:	pushf  
  4047ec:	push   ebp
  4047ed:	inc    ecx
  4047ee:	jb     0x404800
  4047f0:	jmp    DWORD PTR [ebx+edx*4]
  4047f3:	xor    edi,edi
  4047f5:	or     al,0x9f
  4047f7:	stos   DWORD PTR es:[edi],eax
  4047f8:	push   esp
  4047f9:	mov    WORD PTR [esi+0x621ce89d],cs
  4047ff:	popf   
  404800:	jmp    FWORD PTR [esp+0x1676fec2]
  404807:	xor    al,0xff
  404809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40480a:	jmp    0x4047a9
  40480c:	jmp    DWORD PTR [esi+0x0]
  40480f:	push   ecx
  404810:	mov    ecx,0x86e9008d
  404815:	add    BYTE PTR [ecx+0xd],bh
  404818:	ins    BYTE PTR es:[edi],dx
  404819:	xchg   ebx,eax
  40481a:	dec    edi
  40481b:	popf   
  40481c:	dec    esi
  40481d:	popf   
  40481e:	mov    WORD PTR [edi+eax*2-0x63],ds
  404822:	ds test al,0x2f
  404825:	jo     0x404860
  404827:	add    BYTE PTR [esi],dh
  404829:	push   edi
  40482a:	icebp  
  40482b:	popf   
  40482c:	cs popf 
  40482e:	adc    ebx,edx
  404830:	inc    ecx
  404831:	popf   
  404832:	push   ds
  404833:	(bad)  
  404834:	sub    edi,eax
  404836:	push   ss
  404837:	xor    al,0x62
  404839:	mov    al,0xa3
  40483b:	add    BYTE PTR [esi],cl
  40483d:	pop    ss
  40483e:	sub    eax,0xfff37c9d
  404843:	adc    ch,ch
  404845:	pushf  
  404846:	ins    BYTE PTR es:[edi],dx
  404847:	or     BYTE PTR [ecx],al
  404849:	fucomp st(4)
  40484b:	pushf  
  40484c:	out    dx,al
  40484d:	retf   0xeffb
  404850:	call   0xdeebfa8b
  404855:	push   ss
  404856:	inc    ebp
  404857:	test   al,0x32
  404859:	mov    ebp,0xc3e29cce
  40485e:	dec    ebp
  40485f:	inc    ch
  404861:	push   ss
  404862:	sub    DWORD PTR [eax],esi
  404864:	rcl    DWORD PTR [ecx+0x33b69c97],1
  40486a:	scas   al,BYTE PTR es:[edi]
  40486b:	adc    dl,cl
  40486d:	pushf  
  40486e:	sub    al,0xf4
  404870:	cmp    BYTE PTR [ebp+0x5d910824],bl
  404876:	xchg   esi,eax
  404877:	pushf  
  404878:	xchg   esi,eax
  404879:	stos   DWORD PTR es:[edi],eax
  40487a:	add    BYTE PTR [ebx+0x709c8eb9],ah
  404880:	rcr    ebp,0x3
  404883:	in     al,0x88
  404885:	lea    ebx,[esp+ebp*8+0x4775fff3]
  40488c:	lock (bad) 
  40488e:	hlt    
  40488f:	sub    bl,BYTE PTR ss:[edx]
  404892:	inc    di
  404894:	or     al,ch
  404896:	mov    al,ds:0x56ff9cb5
  40489b:	daa    
  40489c:	hlt    
  40489d:	(bad)  
  40489e:	aam    0x4a
  4048a0:	popf   
  4048a1:	jne    0x404898
  4048a3:	adc    cl,ah
  4048a5:	(bad)  
  4048a6:	mov    ah,0x42
  4048a8:	test   al,0xa6
  4048aa:	ss int 0x9b
  4048ad:	push   DWORD PTR [esi+ebp*1-0x42068a65]
  4048b4:	adc    eax,0x9b16930c
  4048b9:	jne    0x40489c
  4048bb:	loop   0x40492c
  4048bd:	dec    DWORD PTR [esi]
  4048bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c0:	leave  
  4048c1:	ret    0x3ad9
  4048c4:	xor    eax,0xc4b90d8b
  4048c9:	lock call 0x45b1:0x122b3324
  4048d1:	or     al,0xe6
  4048d3:	add    eax,0xb2e1458b
  4048d8:	adc    eax,0x9c786608
  4048dd:	(bad)  
  4048de:	and    al,0x0
  4048e0:	test   eax,0x3ae90000
  4048e5:	jg     0x404924
  4048e7:	jmp    DWORD PTR [ebp+0x3ee90040]
  4048ed:	cmp    al,0x83
  4048ef:	sub    al,0x35
  4048f1:	add    BYTE PTR [edi+edi*1-0x50],dh
  4048f5:	inc    ebp
  4048f6:	lock cmp DWORD PTR [edi+0x1],esp
  4048fa:	push   0xffffffe9
  4048fc:	pop    esp
  4048fd:	add    BYTE PTR [ebx+0x739b8d0c],al
  404903:	add    BYTE PTR [ebp-0x34ef8a8a],cl
  404909:	add    ch,BYTE PTR [edx+0x0]
  40490c:	cmp    al,BYTE PTR [ecx*4-0x12c17bb]
  404913:	adc    eax,0x40ad16
  404918:	dec    ebx
  404919:	mov    edi,0xf8e32f74
  40491e:	repz add BYTE PTR [esp+ebp*4-0x76],ch
  404923:	inc    ebp
  404924:	inc    esp
  404925:	mov    cl,BYTE PTR [ebp-0x10]
  404928:	cmp    ecx,DWORD PTR [edi+esi*2]
  40492b:	pop    ss
  40492c:	jecxz  0x4049a0
  40492e:	mov    esi,DWORD PTR [ebp+0x6c]
  404931:	mov    edi,DWORD PTR [ebp+0x8]
  404934:	stos   DWORD PTR es:[edi],eax
  404935:	dec    ecx
  404936:	lock jecxz 0x40495b
  404939:	jb     0x4048df
  40493b:	mov    ebx,ebp
  40493d:	add    bh,bh
  40493f:	jne    0x404961
  404941:	xchg   DWORD PTR [eax],eax
  404943:	inc    DWORD PTR [eax]
  404945:	jge    0x4048d2
  404947:	call   0x44d483
  40494c:	mov    esp,DWORD PTR [ebx]
  40494e:	xlat   BYTE PTR ds:[ebx]
  40494f:	pop    ebp
  404950:	pop    ebx
  404951:	sbb    edx,eax
  404953:	or     al,0x0
  404955:	sbb    eax,0x9c83ec8b
  40495a:	jb     0x4049af
  40495c:	push   esi
  40495d:	paddsb mm3,QWORD PTR [ebp+0x2f]
  404961:	adc    DWORD PTR [eax+ebp*8],eax
  404964:	cdq    
  404965:	stos   DWORD PTR es:[edi],eax
  404966:	(bad)  
  404967:	dec    DWORD PTR [edx-0x3ba4228]
  40496d:	mov    al,ds:0x9bfffffe
  404972:	mov    esi,0x4a483e74
  404977:	das    
  404978:	inc    ecx
  404979:	mov    al,ds:0x3945e7d1
  40497e:	add    eax,DWORD PTR ds:[eax]
  404981:	xor    ch,BYTE PTR [ecx+0xf]
  404984:	das    
  404985:	mov    dl,0x18
  404987:	sub    ebp,DWORD PTR [ebx+0x26]
  40498a:	call   0x5ca19c92
  40498f:	outs   dx,BYTE PTR ds:[esi]
  404990:	add    BYTE PTR [ecx],bh
  404992:	sahf   
  404993:	ret    
  404994:	je     0x4049d5
  404996:	push   cs
  404997:	fwait
  404998:	(bad)  
  404999:	cld    
  40499a:	cmp    al,0x33
  40499c:	call   0x43c7ad
  4049a1:	jmp    0xbcc3fbef
  4049a6:	inc    esp
  4049a7:	add    esi,DWORD PTR [eax+eax*1+0x43]
  4049ab:	jg     0x4049b1
  4049ad:	add    BYTE PTR [ecx],bh
  4049af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b0:	cmp    bl,BYTE PTR [esi-0x7e]
  4049b3:	loopne 0x40497a
  4049b5:	mov    eax,0x3a739
  4049ba:	jbe    0x404a15
  4049bc:	ds leave 
  4049be:	cli    
  4049bf:	pop    esp
  4049c0:	mov    gs,esp
  4049c2:	mov    edx,0x3c8392e3
  4049c7:	inc    ecx
  4049c8:	jmp    0xfe7830d
  4049cd:	adc    bh,BYTE PTR [edx+0x782ec554]
  4049d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d4:	add    esi,DWORD PTR [eax+esi*1+0x26]
  4049d8:	xlat   BYTE PTR ds:[ebx]
  4049d9:	lds    esp,FWORD PTR [edi]
  4049db:	call   0xaa8449e3
  4049e0:	pop    ebx
  4049e1:	add    DWORD PTR [ecx],edi
  4049e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e4:	add    ecx,ecx
  4049e6:	cli    
  4049e7:	adc    al,0x3f
  4049e9:	cli    
  4049ea:	jg     0x404993
  4049ec:	add    eax,esi
  4049ee:	stc    
  4049ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f0:	add    eax,esi
  4049f2:	stc    
  4049f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f4:	add    eax,esi
  4049f6:	stc    
  4049f7:	(bad)  
  4049f8:	jmp    0xe580c900
  4049fd:	add    esi,DWORD PTR [edi+0x40]
  404a00:	in     al,dx
  404a01:	(bad)  
  404a02:	mov    ch,0x43
  404a04:	xchg   ebp,eax
  404a05:	xor    al,0x13
  404a07:	add    BYTE PTR [ebx],dl
  404a09:	add    al,0xe3
  404a0b:	call   DWORD PTR [edx]
  404a0d:	add    al,0x0
  404a0f:	jecxz  0x404a10
  404a11:	add    al,BYTE PTR [ecx+edx*8]
  404a14:	fucomip st,st(2)
  404a16:	add    edi,DWORD PTR [ecx]
  404a18:	or     DWORD PTR es:[esi],ebp
  404a1b:	cmp    ecx,DWORD PTR [ebx-0x6716625c]
  404a21:	cld    
  404a22:	pop    ecx
  404a23:	pop    ss
  404a24:	aas    
  404a25:	jmp    0xeb53c336
  404a2a:	retf   0xc0fa
  404a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a2e:	xchg   ebx,eax
  404a2f:	cmp    DWORD PTR [eax],eax
  404a31:	jmp    0x3982fe39
  404a36:	xor    al,0x1e
  404a38:	adc    ebx,DWORD PTR ds:0xf499392e
  404a3e:	lds    ebx,FWORD PTR [edi+0x3f]
  404a41:	jmp    0xe6534352
  404a46:	shl    BYTE PTR [eax+edx*4-0x17],0x3
  404a4b:	cmp    DWORD PTR [eax],eax
  404a4d:	dec    BYTE PTR [esi]
  404a4f:	in     eax,0x98
  404a51:	fadd   st(1),st
  404a53:	pop    ss
  404a54:	aas    
  404a55:	jmp    0xb0d0bee6
  404a5a:	les    ebp,FWORD PTR [ebp+eax*4-0x33]
  404a5e:	test   ch,dh
  404a60:	xchg   DWORD PTR [esi+edi*1-0x4f],esp
  404a64:	das    
  404a65:	inc    ecx
  404a66:	test   BYTE PTR [edi],0x3f
  404a69:	jmp    0xbee24319
  404a6e:	cwde   
  404a6f:	or     DWORD PTR ds:0x3600a900,eax
  404a75:	add    al,BYTE PTR [ebx+0x76f3ad2c]
  404a7b:	adc    bh,BYTE PTR [esi-0x22c60fbe]
  404a81:	stc    
  404a82:	stos   BYTE PTR es:[edi],al
  404a83:	jmp    0x1200cdc2
  404a88:	inc    ebx
  404a89:	or     DWORD PTR [esi+0xf2fd02c],esi
  404a8f:	aaa    
  404a90:	das    
  404a91:	call   0x19fd:0x4308e650
  404a98:	xor    BYTE PTR [edx+0x45],dl
  404a9b:	or     cl,BYTE PTR gs:[ecx]
  404a9e:	mov    dh,0xa4
  404aa0:	lods   eax,DWORD PTR ds:[esi]
  404aa1:	das    
  404aa2:	setg   BYTE PTR [edi]
  404aa5:	xchg   esi,eax
  404aa6:	push   eax
  404aa7:	fsubp  st(0),st
  404aa9:	inc    edx
  404aaa:	stc    
  404aab:	cdq    
  404aac:	inc    ecx
  404aad:	dec    esi
  404aae:	inc    ebp
  404aaf:	inc    ecx
  404ab0:	push   0x7
  404ab2:	mov    bh,0xac
  404ab4:	enter  0xf30,0x76
  404ab8:	pop    edi
  404ab9:	mov    WORD PTR [eax+0x26],ss
  404abc:	inc    edi
  404abd:	nop
  404abe:	push   0x4121f6
  404ac3:	fs inc edi
  404ac5:	test   BYTE PTR [eax+0x1],dl
  404ac8:	shr    DWORD PTR [edx+0x0],1
  404acb:	jmp    0x6c75078d
  404ad0:	das    
  404ad1:	test   BYTE PTR [eax+0x1],dl
  404ad4:	popa   
  404ad5:	imul   eax,DWORD PTR [eax],0x852a00e9
  404adb:	inc    ebp
  404adc:	jne    0x404aeb
  404ade:	sub    BYTE PTR [edx],dl
  404ae0:	push   cs
  404ae1:	je     0x404ae3
  404ae3:	call   0xffd7e480
  404ae8:	sar    DWORD PTR [esi],0xb8
  404aeb:	inc    DWORD PTR [eax]
  404aed:	jg     0x404ab4
  404aef:	ret    
  404af0:	push   ebp
  404af1:	sub    ebp,DWORD PTR [eax-0x7f]
  404af4:	les    edi,FWORD PTR [edi+ebp*2]
  404af7:	(bad)  
  404af8:	inc    DWORD PTR [ebx-0x19]
  404afb:	imul   eax,DWORD PTR [eax],0x75fefc2a
  404b01:	mov    BYTE PTR [ebx-0x5a],ch
  404b04:	aad    0xaf
  404b06:	outs   dx,DWORD PTR ds:[esi]
  404b07:	mov    DWORD PTR [ebp-0x54],eax
  404b0a:	in     al,0x0
  404b0c:	add    bh,cl
  404b0e:	push   DWORD PTR cs:[ebp+0x68]
  404b12:	imul   esp,edi,0xffffffd4
  404b15:	out    dx,eax
  404b16:	outs   dx,BYTE PTR ds:[esi]
  404b17:	push   0x3509c
  404b1c:	(bad)  
  404b1d:	in     eax,0xdb
  404b1f:	(bad)  
  404b20:	(bad)  
  404b21:	out    dx,eax
  404b22:	retf   
  404b23:	out    0x7b,eax
  404b25:	or     BYTE PTR [edi-0x1],ch
  404b28:	(bad)  
  404b29:	aad    0xdb
  404b2b:	(bad)  
  404b2c:	(bad)  
  404b2d:	jg     0x404b47
  404b2f:	add    BYTE PTR [eax],al
  404b31:	and    BYTE PTR [eax+0x6f6f6085],cl
  404b37:	call   DWORD PTR [eax+0x78]
  404b3a:	dec    ebp
  404b3b:	test   eax,0xaa200000
  404b40:	enter  0x522b,0x89
  404b44:	mov    ebp,0xff6f2f74
  404b49:	jmp    0x404b4e
  404b4b:	cmp    DWORD PTR [edi],0x0
  404b4e:	jne    0x404b50
  404b50:	mov    edx,0x2e001
  404b55:	or     eax,DWORD PTR [edx-0x10]
  404b58:	add    al,dh
  404b5a:	xlat   BYTE PTR ds:[ebx]
  404b5b:	add    al,BYTE PTR [edi+0x41]
  404b5e:	popa   
  404b5f:	je     0x404ae1
  404b61:	add    al,ah
  404b63:	add    dh,BYTE PTR [edx-0x1b]
  404b66:	cmp    DWORD PTR [edx+0x412774c3],esp
  404b6c:	js     0x404b6e
  404b6e:	cmp    DWORD PTR [ecx+0x56198588],ebp
  404b74:	xchg   esi,eax
  404b75:	dec    DWORD PTR [ecx]
  404b77:	dec    esi
  404b78:	adc    BYTE PTR [eax],cl
  404b7a:	xchg   ecx,eax
  404b7b:	or     eax,0x7196ffaf
  404b80:	pop    es
  404b81:	push   0x39
  404b83:	repz add edi,edi
  404b86:	or     al,0xa1
  404b88:	stos   DWORD PTR es:[edi],eax
  404b89:	test   eax,0xe8968565
  404b8e:	test   BYTE PTR [ebx-0x6a],bh
  404b91:	dec    DWORD PTR [ecx]
  404b93:	push   ss
  404b94:	adc    BYTE PTR [eax],cl
  404b96:	push   ecx
  404b97:	add    esi,DWORD PTR [eax+0x4005eff]
  404b9d:	add    al,0x39
  404b9f:	test   eax,0x6600e9ab
  404ba4:	xor    eax,0x4cbc8996
  404ba9:	xchg   esi,eax
  404baa:	(bad)  
  404bab:	rcl    BYTE PTR ds:[esi-0x6958c6fd],0xb5
  404bb3:	(bad)  
  404bb4:	(bad)  
  404bb5:	xchg   ebp,eax
  404bb6:	call   DWORD PTR [ecx+0x1efff3a9]
  404bbc:	rol    BYTE PTR [ebx],0x4
  404bbf:	cmp    DWORD PTR [edi-0x581fad55],esp
  404bc5:	add    edx,DWORD PTR [eax+0x6]
  404bc8:	xor    eax,0x6feff37
  404bcd:	xchg   esi,eax
  404bce:	jne    0x404c11
  404bd0:	out    dx,eax
  404bd1:	and    ah,dl
  404bd3:	out    dx,al
  404bd4:	xchg   esi,eax
  404bd5:	sub    bh,bh
  404bd7:	cmp    ah,BYTE PTR [edi-0x7c5b00fd]
  404bdd:	xchg   esi,eax
  404bde:	call   esi
  404be0:	add    BYTE PTR [ecx+0x3],dl
  404be3:	sub    DWORD PTR [eax],eax
  404be5:	jmp    0xe93c8515
  404bea:	add    edx,ecx
  404bec:	out    0x7f,eax
  404bee:	add    al,0x39
  404bf0:	xor    dh,al
  404bf2:	dec    edi
  404bf3:	or     eax,0xa695be95
  404bf8:	or     esp,ecx
  404bfa:	stos   DWORD PTR es:[edi],eax
  404bfb:	pusha  
  404bfc:	lods   al,BYTE PTR ds:[esi]
  404bfd:	scas   al,BYTE PTR es:[edi]
  404bfe:	xchg   ebp,eax
  404bff:	mov    eax,ds:0x8e95a4bb
  404c04:	xor    BYTE PTR [esi-0x57cefff1],bl
  404c0a:	pushf  
  404c0b:	mov    cl,0x7e
  404c0d:	xchg   ebp,eax
  404c0e:	xor    DWORD PTR [ebx],0x87869577
  404c14:	mov    ah,0x38
  404c16:	jle    0x404bad
  404c18:	data16 xor BYTE PTR [ecx],al
  404c1b:	repnz (bad) 
  404c1e:	jmp    0x66dcf8ce
  404c23:	xchg   ebp,eax
  404c24:	sar    BYTE PTR [ebx-0x4b],0x94
  404c28:	inc    esi
  404c29:	xchg   ebp,eax
  404c2a:	push   0x57
  404c2c:	in     eax,0x94
  404c2e:	dec    esi
  404c2f:	xchg   ebp,eax
  404c30:	cmp    DWORD PTR [esp+ebp*4],ecx
  404c33:	sub    ah,0x37
  404c36:	ds xchg ebp,eax
  404c38:	es in  al,dx
  404c3a:	mov    edx,0x917abbd7
  404c3f:	xchg   esp,eax
  404c40:	push   ss
  404c41:	xchg   ebp,eax
  404c42:	in     eax,dx
  404c43:	xchg   esp,eax
  404c44:	les    esi,FWORD PTR [edi]
  404c46:	push   ds
  404c47:	xchg   ebp,eax
  404c48:	push   es
  404c49:	xchg   ebp,eax
  404c4a:	pushf  
  404c4b:	or     edx,DWORD PTR [ecx]
  404c4d:	push   edx
  404c4e:	cmp    dl,BYTE PTR [ebp+0x3c5480f6]
  404c54:	out    dx,al
  404c55:	xchg   esp,eax
  404c56:	(bad)  
  404c57:	call   DWORD PTR [eax-0x6b]
  404c5a:	add    dh,dh
  404c5c:	das    
  404c5d:	or     al,ch
  404c5f:	dec    eax
  404c60:	mov    BYTE PTR [edi+edi*8-0xc7801a],dl
  404c67:	fisubr WORD PTR [ebp+0x3db594]
  404c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6e:	xchg   esp,eax
  404c6f:	dec    esi
  404c71:	inc    edi
  404c72:	or     al,ch
  404c74:	mov    ebp,ecx
  404c76:	xchg   esp,eax
  404c77:	call   edx
  404c79:	sub    al,BYTE PTR ds:[eax]
  404c7c:	inc    ebx
  404c7d:	xor    eax,0xe2e17595
  404c82:	dec    edx
  404c83:	shl    DWORD PTR [esi+0x35b594a5],cl
  404c89:	lods   al,BYTE PTR ds:[esi]
  404c8a:	xchg   esp,eax
  404c8b:	inc    DWORD PTR [ecx-0x7100522f]
  404c91:	int    0x4a
  404c93:	pop    esp
  404c94:	xchg   ch,al
  404c96:	xchg   esp,eax
  404c97:	call   0xffd4e125
  404c9c:	ret    0x27a1
  404c9f:	pop    esi
  404ca0:	mov    esi,0xd1e7fffb
  404ca5:	loop   0x404ca6
  404ca7:	jmp    FWORD PTR [edi-0x39]
  404caa:	jecxz  0x404caa
  404cac:	push   esi
  404cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cae:	cmp    BYTE PTR [ebp-0x6c3203],0xe9
  404cb5:	ds repnz addr16 mov bl,0x1d
  404cba:	inc    ecx
  404cbb:	add    BYTE PTR [esi],dh
  404cbd:	outs   dx,DWORD PTR ds:[esi]
  404cbe:	in     al,0xfe
  404cc0:	lods   eax,DWORD PTR cs:[esi]
  404cc2:	test   al,0xd
  404cc4:	push   ecx
  404cc5:	cmp    al,BYTE PTR [eax]
  404cc7:	or     ebp,DWORD PTR [ecx]
  404cc9:	ss push es
  404ccb:	lea    edi,[edx+ebp*8-0x6e]
  404ccf:	dec    DWORD PTR [esi]
  404cd1:	add    BYTE PTR [eax],ch
  404cd3:	xchg   ebx,eax
  404cd4:	rol    BYTE PTR [eax],1
  404cd6:	mov    ds:0xd475db08,eax
  404cdb:	jp     0x404c62
  404cdd:	xor    bh,ah
  404cdf:	outs   dx,DWORD PTR ds:[esi]
  404ce0:	call   DWORD PTR [eax+0x38]
  404ce3:	stos   BYTE PTR es:[edi],al
  404ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce5:	add    al,ah
  404ce7:	cmc    
  404ce8:	and    ecx,DWORD PTR [ebp-0x153a3]
  404cee:	out    0xcc,eax
  404cf0:	(bad)  
  404cf1:	jne    0x404c8b
  404cf3:	ja     0x404d3a
  404cf5:	shl    DWORD PTR [edi+0x6f],cl
  404cf8:	push   DWORD PTR [ebp-0x1c]
  404cfb:	outs   dx,DWORD PTR ds:[esi]
  404cfc:	jne    0x404d06
  404cfe:	js     0x404c85
  404d00:	sar    edi,cl
  404d02:	out    0xcf,eax
  404d04:	pop    edx
  404d05:	leave  
  404d06:	loop   0x404d10
  404d08:	add    BYTE PTR [ebp+0xb],dl
  404d0b:	pusha  
  404d0c:	add    esp,0xffff77b8
  404d12:	adc    eax,0xb750fc49
  404d17:	stc    
  404d18:	or     edi,edi
  404d1a:	lods   eax,DWORD PTR ds:[esi]
  404d1b:	jecxz  0x404d45
  404d1d:	inc    ecx
  404d1e:	push   eax
  404d1f:	ja     0x404cdb
  404d21:	test   al,0x60
  404d23:	dec    DWORD PTR [edx]
  404d25:	rol    BYTE PTR [edi-0x78],0xe7
  404d29:	add    BYTE PTR [eax-0x1],dl
  404d2c:	mov    BYTE PTR [ebp-0x18],0xfb
  404d30:	(bad)  
  404d31:	jmp    DWORD PTR [eax]
  404d33:	mov    BYTE PTR [ebp-0xc],0x0
  404d37:	ja     0x404d40
  404d39:	add    BYTE PTR [eax],al
  404d3b:	or     bh,bh
  404d3d:	imul   eax,DWORD PTR [eax],0xf7ec8995
  404d43:	outs   dx,DWORD PTR ds:[si]
  404d45:	push   eax
  404d46:	push   0x20
  404d48:	add    BYTE PTR [ebp-0xc],0xc0
  404d4c:	jg     0x404cd3
  404d4e:	hlt    
  404d4f:	cmp    edx,esi
  404d51:	xchg   edx,eax
  404d52:	dec    DWORD PTR [ecx-0x1107e6fe]
  404d58:	adc    ecx,DWORD PTR [edi+0x430c0e8]
  404d5e:	add    BYTE PTR [edx],dh
  404d60:	jmp    0x3c20527c
  404d65:	add    al,0x0
  404d67:	cmp    DWORD PTR [esi],esp
  404d69:	push   eax
  404d6a:	in     al,dx
  404d6b:	into   
  404d6c:	mov    cl,0x92
  404d6e:	add    DWORD PTR [ebp-0x65],eax
  404d71:	xchg   BYTE PTR [ebp-0x6d565b],bh
  404d77:	ss aad 0x8
  404d7a:	(bad)  
  404d7b:	cld    
  404d7c:	rcr    BYTE PTR [esi-0x2bf7ee4a],0x40
  404d83:	cmp    DWORD PTR [eax+ecx*4],esi
  404d86:	hlt    
  404d87:	xchg   BYTE PTR [ecx-0x6e],bl
  404d8a:	push   eax
  404d8b:	xchg   ecx,eax
  404d8c:	and    al,0x5b
  404d8e:	add    BYTE PTR [ecx],bh
  404d90:	sahf   
  404d91:	ret    
  404d92:	je     0x404d7c
  404d94:	xor    ecx,DWORD PTR [eax-0x6d869918]
  404d9a:	push   eax
  404d9b:	add    BYTE PTR [ebx+ebx*1+0x95ef797],dh
  404da2:	xor    edi,edi
  404da4:	int3   
  404da5:	mov    ah,0x92
  404da7:	xor    eax,0x44efed
  404dac:	push   ecx
  404dad:	xor    BYTE PTR [ebx-0x3c62c101],ch
  404db3:	je     0x404d3d
  404db5:	and    BYTE PTR [eax-0x6dc4d910],cl
  404dbb:	push   0xbea2a738
  404dc0:	push   ds
  404dc1:	push   ebp
  404dc2:	sti    
  404dc3:	out    0x7b,eax
  404dc5:	cmc    
  404dc6:	xchg   ecx,eax
  404dc7:	(bad)  
  404dc8:	mov    edx,0xe9f6400
  404dcd:	xchg   edx,eax
  404dce:	push   ds
  404dcf:	add    al,0x84
  404dd1:	add    al,0x83
  404dd3:	add    esi,esi
  404dd5:	or     esp,ecx
  404dd7:	fwait
  404dd8:	push   ds
  404dd9:	scas   al,BYTE PTR es:[edi]
  404dda:	push   es
  404ddb:	xchg   edx,eax
  404ddc:	rol    BYTE PTR [esi],cl
  404dde:	xchg   ebx,eax
  404ddf:	add    al,0xde
  404de1:	or     esp,ecx
  404de3:	fwait
  404de4:	sbb    ch,BYTE PTR [esi+0x4bce91ee]
  404dea:	rcr    DWORD PTR [ecx+0x57de91c6],1
  404df0:	leave  
  404df1:	mov    esi,edx
  404df3:	xchg   ecx,eax
  404df4:	mov    dh,0xb
  404df6:	loope  0x404d93
  404df8:	hlt    
  404df9:	lods   eax,DWORD PTR ds:[esi]
  404dfa:	(bad)  
  404dfb:	xchg   ecx,eax
  404dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfd:	dec    ebx
  404dfe:	mov    ecx,0x919e0099
  404e03:	ror    DWORD PTR ds:0x91ae916c,0xf4
  404e0a:	xchg   edi,eax
  404e0b:	nop
  404e0c:	fadd   QWORD PTR [edi+0x4919e91]
  404e12:	xchg   esp,eax
  404e13:	add    edi,0xbae9009e
  404e19:	jnp    0x404e23
  404e1b:	jmp    0x68e50056
  404e20:	enter  0x8955,0x76
  404e24:	xchg   ecx,eax
  404e25:	les    edi,FWORD PTR [ebx]
  404e27:	ins    DWORD PTR es:[edi],dx
  404e28:	xor    al,0x4e
  404e2a:	or     esi,ebp
  404e2c:	nop
  404e2d:	or     al,0x34
  404e2f:	adc    BYTE PTR [ebx+0x39],al
  404e32:	test   al,0x85
  404e34:	imul   edi,DWORD PTR [ecx],0x3ec3e200
  404e3a:	jnp    0x404dd6
  404e3c:	add    bh,BYTE PTR [ecx]
  404e3e:	add    BYTE PTR [esi],ah
  404e40:	inc    edi
  404e41:	and    DWORD PTR [eax],eax
  404e43:	add    cl,ch
  404e45:	cmp    al,BYTE PTR [eax]
  404e47:	(bad)  
  404e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4a:	nop
  404e4b:	pop    es
  404e4c:	jmp    0x9340748b
  404e51:	cmp    ah,BYTE PTR [esi]
  404e53:	add    BYTE PTR [ebx+0x1545833a],al
  404e59:	and    eax,0xc1fd8583
  404e5e:	nop
  404e5f:	call   FWORD PTR [ecx-0x907f537]
  404e65:	add    BYTE PTR [edi],ch
  404e67:	xchg   esp,eax
  404e68:	call   0x40afdc
  404e6d:	repnz cli 
  404e6f:	or     eax,DWORD PTR ds:0xffffc0d0
  404e75:	call   0x286911cc
  404e7a:	xor    eax,0xc2f57591
  404e7f:	pop    esi
  404e80:	fdivr  DWORD PTR [esi-0x6674d037]
  404e86:	pop    ss
  404e87:	jnp    0x404e7d
  404e89:	mov    dh,0xa9
  404e8b:	nop
  404e8c:	push   eax
  404e8d:	cmp    esp,DWORD PTR [ebp-0x56612792]
  404e93:	xchg   BYTE PTR [ebp-0x6f2e67],al
  404e99:	and    DWORD PTR [ecx+0x4486ffab],0x8af36800
  404ea3:	aas    
  404ea4:	add    BYTE PTR [esi-0x11],dh
  404ea7:	(bad)  
  404ea8:	imul   DWORD PTR [esi-0x57]
  404eab:	nop
  404eac:	xor    eax,0x3f63c5
  404eb1:	push   ecx
  404eb2:	xchg   ecx,eax
  404eb3:	test   al,0xff
  404eb5:	push   esi
  404eb6:	mov    bl,0x85
  404eb8:	in     al,0x56
  404eba:	leave  
  404ebb:	(bad)
  404ebf:	in     al,dx
  404ec0:	adc    dh,BYTE PTR [eax]
  404ec2:	rol    DWORD PTR [ebx],1
  404ec4:	push   DWORD PTR [ebp-0x97b0]
  404eca:	add    BYTE PTR [edi-0x4a],bl
  404ecd:	pop    ebx
  404ece:	sub    ecx,edx
  404ed0:	add    ebp,eax
  404ed2:	leave  
  404ed3:	inc    edi
  404ed4:	jo     0x404ed5
  404ed6:	mov    DWORD PTR [ebp+0x6f],esp
  404ed9:	idiv   edi
  404edb:	aas    
  404edc:	in     eax,dx
  404edd:	jmp    DWORD PTR [edi-0x24]
  404ee0:	mov    bl,0x40
  404ee2:	add    bh,bl
  404ee4:	xor    eax,0x7fcff7f0
  404ee9:	push   DWORD PTR ds:0x40aabc
  404eef:	call   0xe040261f
  404ef4:	or     eax,0x7f97e885
  404ef9:	inc    DWORD PTR [ebx-0x8a743]
  404eff:	jg     0x404f05
  404f01:	je     0x404f4c
  404f03:	adc    esi,DWORD PTR [ecx]
  404f05:	in     al,dx
  404f06:	test   edi,0x6074007f
  404f0c:	cmp    DWORD PTR [ebp-0x805818],0x0
  404f13:	and    al,0xb7
  404f15:	add    BYTE PTR [bx+si+0x6e],ah
  404f19:	mov    esi,0xe78c45ff
  404f1e:	out    dx,al
  404f1f:	sar    BYTE PTR [edi-0x1],0xff
  404f23:	and    eax,0xcffff760
  404f28:	jle    0x404f9f
  404f2a:	or     BYTE PTR [eax+0xffd142],bh
  404f30:	fistp  QWORD PTR [esi-0x4b]
  404f33:	call   0x3fce1f
  404f38:	cmp    DWORD PTR [ebx+edi*8-0x71379a19],ebp
  404f3f:	jmp    DWORD PTR [esi]
  404f41:	or     al,0xa8
  404f43:	neg    DWORD PTR [esi]
  404f45:	into   
  404f46:	mov    ?,WORD PTR [ebp+0x41]
  404f49:	inc    ecx
  404f4a:	out    0xd0,al
  404f4c:	push   cs
  404f4d:	fimul  WORD PTR [esi-0x7111e24b]
  404f53:	call   DWORD PTR [ecx]
  404f55:	test   eax,0xf5f6ffb7
  404f5a:	pop    eax
  404f5b:	in     al,dx
  404f5c:	out    0xfd,al
  404f5e:	mov    gs,eax
  404f60:	sbb    al,0xed
  404f62:	mov    ?,edi
  404f64:	(bad)  
  404f66:	fwait
  404f67:	not    esi
  404f69:	xchg   ebp,eax
  404f6a:	fwait
  404f6b:	sbb    ah,ch
  404f6d:	popf   
  404f6e:	mov    ?,edi
  404f70:	mov    WORD PTR [eax-0x5241006a],gs
  404f76:	sbb    BYTE PTR [eax],cl
  404f78:	mov    eax,ds:0xaeff8d7b
  404f7d:	mov    ebp,0xc5aef058
  404f82:	mov    gs,eax
  404f84:	cmp    BYTE PTR [ebp-0x72],dh
  404f87:	call   DWORD PTR [esi-0x32167425]
  404f8d:	pop    esi
  404f8e:	mov    ?,edi
  404f90:	xchg   bl,ch
  404f92:	(bad)
  404f96:	inc    esi
  404f97:	add    eax,DWORD PTR [eax]
  404f99:	sbb    BYTE PTR [edx-0x5],0xff
  404f9d:	add    eax,0x7d839f22
  404fa2:	test   BYTE PTR [ecx],bl
  404fa4:	add    bl,dl
  404fa6:	xchg   edi,eax
  404fa7:	mov    ?,WORD PTR [ebp+0x41]
  404faa:	xor    edx,0x7c1d4ed0
  404fb0:	inc    ebp
  404fb1:	inc    ebp
  404fb2:	call   eax
  404fb4:	or     DWORD PTR [esi],ecx
  404fb6:	inc    ecx
  404fb7:	jmp    0x4138fc4a
  404fbc:	daa    
  404fbd:	das    
  404fbe:	mov    cs,WORD PTR [esi+0x1b]
  404fc1:	rcr    ch,0xa7
  404fc4:	add    ebx,DWORD PTR [esi]
  404fc6:	adc    al,0xf1
  404fc8:	fwait
  404fc9:	outs   dx,BYTE PTR ds:[esi]
  404fca:	mov    ?,WORD PTR [esi]
  404fcc:	mov    fs,WORD PTR [ecx+0x3944fe47]
  404fd2:	lea    ebx,[ebx+edi*8-0x71e432ea]
  404fd9:	neg    BYTE PTR [eax]
  404fdb:	or     dh,bl
  404fdd:	jns    0x404fdf
  404fdf:	push   cs
  404fe0:	sbb    BYTE PTR [ecx],dh
  404fe2:	cwde   
  404fe3:	(bad)  
  404fe4:	nop
  404fe5:	fimul  WORD PTR [ebp-0x722ae802]
  404feb:	jl     0x404fe8
  404fed:	(bad)  
  404fee:	cmc    
  404fef:	pop    ss
  404ff0:	mov    es,esi
  404ff2:	mov    bh,0xab
  404ff4:	or     BYTE PTR [ecx],bh
  404ff6:	xor    esi,DWORD PTR [edx-0x60]
  404ff9:	add    BYTE PTR [ecx],ah
  404ffb:	add    cl,ch
  404ffd:	pushf  
  404ffe:	out    dx,eax
  404fff:	lea    edx,[eax+eax*1-0x5a]
  405003:	adc    esi,ecx
  405005:	fwait
  405006:	or     eax,0x808dbe93
  40500b:	ret    0x3e1
  40500e:	in     al,0x78
  405010:	mov    ebp,0xe8fc0481
  405015:	cld    
  405016:	mov    edx,0x3903e7e2
  40501b:	lea    ebx,[eax+eax*1]
  40501e:	popa   
  40501f:	sub    ch,BYTE PTR [edi-0x57069973]
  405025:	pop    ss
  405026:	dec    ecx
  405027:	sbb    BYTE PTR [esp+ebx*8+0x75fffff9],ch
  40502e:	es cld 
  405030:	out    0x22,eax
  405032:	mov    WORD PTR [ebp-0x4098f01],cs
  405038:	imul   ebp,ecx,0xa8304652
  40503e:	cmp    bl,BYTE PTR [eax]
  405040:	push   ecx
  405041:	sbb    DWORD PTR [edx+0x0],edi
  405044:	(bad)  
  405045:	cld    
  405046:	dec    esi
  405047:	xlat   BYTE PTR ds:[ebx]
  405048:	inc    eax
  405049:	jmp    0x37168600
  40504e:	mov    esp,0x14b5bff8
  405053:	cmp    eax,0xfc262650
  405058:	out    0x2e,eax
  40505a:	scas   eax,DWORD PTR es:[edi]
  40505b:	mov    edi,?
  40505d:	mov    ecx,0x758d2a00
  405062:	loope  0x405026
  405064:	outs   dx,BYTE PTR ds:[esi]
  405065:	inc    DWORD PTR [esi]
  405067:	lods   al,BYTE PTR ds:[esi]
  405068:	xchg   edi,eax
  405069:	and    DWORD PTR [edx],ebx
  40506b:	les    ecx,FWORD PTR [eax+ebp*8-0x73762b]
  405072:	cmp    DWORD PTR [edx],0x18
  405075:	inc    esi
  405076:	sbb    DWORD PTR [edx+0x0],edi
  405079:	push   0x3f8d38
  40507e:	inc    ecx
  40507f:	cmp    eax,DWORD PTR [eax]
  405081:	add    BYTE PTR [ecx-0x3e],ch
  405084:	in     eax,dx
  405085:	aad    0xc6
  405087:	lods   eax,DWORD PTR ds:[esi]
  405088:	clc    
  405089:	mov    edi,0x503ca735
  40508e:	mov    dh,0x27
  405090:	cld    
  405091:	out    0x56,eax
  405093:	int3   
  405094:	mov    edi,?
  405096:	cmp    DWORD PTR [ebp-0x73],eax
  405099:	jne    0x40508c
  40509b:	shl    BYTE PTR [esi],cl
  40509d:	call   DWORD PTR [esi-0x44166843]
  4050a3:	mov    ch,0x8c
  4050a5:	call   0xff8efcaa
  4050aa:	jmp    FWORD PTR [edx]
  4050ac:	add    al,0x68
  4050ae:	inc    esi
  4050af:	nop
  4050b0:	inc    ecx
  4050b1:	add    BYTE PTR [eax+0x4c],ch
  4050b4:	mov    al,0x40
  4050b6:	add    bh,dl
  4050b8:	mov    ch,0x5b
  4050ba:	sub    ecx,esp
  4050bc:	jmp    edi
  4050be:	in     eax,0x6d
  4050c0:	jl     0x4050c1
  4050c2:	or     eax,DWORD PTR [eax]
  4050c4:	push   eax
  4050c5:	repz sbb eax,0x757cc050
  4050cb:	or     al,0x68
  4050cd:	fst    st(5)
  4050cf:	inc    DWORD PTR [edi-0x31]
  4050d2:	dec    edi
  4050d3:	dec    ebp
  4050d5:	xchg   edi,esp
  4050d7:	and    BYTE PTR [edi+0x7c],dl
  4050da:	(bad)  
  4050db:	call   0x3fa270
  4050e0:	cmp    BYTE PTR [eax],ch
  4050e2:	sar    bh,cl
  4050e4:	aaa    
  4050e5:	jmp    0xafceb8e9
  4050ea:	inc    eax
  4050eb:	add    BYTE PTR [eax-0x1fbed00d],ch
  4050f1:	out    0x1,eax
  4050f3:	add    al,dl
  4050f5:	jg     0x4050df
  4050f7:	lods   eax,DWORD PTR ds:[esi]
  4050f8:	jge    0x405171
  4050fa:	dec    DWORD PTR [ebx]
  4050fc:	loopne 0x4050ee
  4050fe:	sbb    eax,0x75777050
  405103:	or     al,0x78
  405105:	sahf   
  405106:	aad    0xff
  405108:	ja     0x4050de
  40510a:	dec    edi
  40510b:	dec    DWORD PTR [ebp-0x74]
  40510e:	out    0xe8,eax
  405110:	(bad)  
  405111:	ja     0x405112
  405113:	call   0x3fa360
  405118:	test   al,0xf3
  40511a:	sar    edi,1
  40511c:	xlat   BYTE PTR ds:[ebx]
  40511d:	in     al,dx
  40511e:	and    eax,0x3d83930
  405123:	(bad)  
  405124:	in     al,dx
  405125:	lods   al,BYTE PTR ds:[esi]
  405126:	fwait
  405127:	add    eax,0x8b828700
  40512c:	push   eax
  40512d:	jmp    0x6148623b
  405132:	pop    edx
  405133:	mov    bh,bh
  405135:	inc    esi
  405136:	xor    DWORD PTR [ebx],0x8b223ed2
  40513c:	jne    0x405183
  40513e:	xor    DWORD PTR [ebx],edi
  405140:	shr    BYTE PTR [esi],cl
  405142:	xor    bh,BYTE PTR [ebp+0x309931c2]
  405148:	mov    ecx,DWORD PTR ds:0xa3f4c016
  40514e:	cdq    
  40514f:	sbb    eax,0xfb4c0e02
  405154:	out    0x88,eax
  405156:	jmp    0x6887:0x5bb0ff8a
  40515d:	cmp    al,0x98
  40515f:	add    eax,DWORD PTR [eax]
  405161:	loope  0x4051b8
  405163:	mov    ch,0xff
  405165:	out    0x1f,al
  405167:	inc    ecx
  405168:	clc    
  405169:	push   ecx
  40516a:	popf   
  40516b:	add    al,0x0
  40516d:	cmp    DWORD PTR [edx-0x1f1e07f0],ecx
  405173:	data16 add BYTE PTR [ecx],bh
  405176:	sahf   
  405177:	ret    
  405178:	je     0x40519f
  40517a:	in     al,0xff
  40517c:	add    BYTE PTR [ecx],bh
  40517e:	cdq    
  40517f:	adc    cl,BYTE PTR ds:0xff8c2bae
  405185:	sub    al,0xa1
  405187:	fwait
  405188:	mov    BYTE PTR [edi+0xeb8ac1],bl
  40518e:	inc    ecx
  40518f:	dec    edx
  405190:	adc    al,bh
  405192:	mov    eax,ds:0x86ffb454
  405197:	ds fsubr st(7),st
  40519a:	cmc    
  40519b:	(bad)  
  40519c:	mov    esi,0x9e2f768a
  4051a1:	adc    BYTE PTR [ecx-0x68],al
  4051a4:	pop    es
  4051a5:	mov    ah,BYTE PTR [esi-0x76]
  4051a8:	add    ebp,esi
  4051aa:	push   esi
  4051ab:	rcr    DWORD PTR [esi-0x5709a976],cl
  4051b1:	(bad)  
  4051b3:	sbb    BYTE PTR [ebx+0x18fff9d3],bh
  4051b9:	pushf  
  4051ba:	jo     0x405170
  4051bc:	data16 mov cl,BYTE PTR [ecx+0x16fbd489]
  4051c3:	cmp    dl,BYTE PTR [edi-0x76]
  4051c6:	es pop ss
  4051c8:	or     bl,BYTE PTR [esp+eax*2+0x428a46b2]
  4051cf:	shl    BYTE PTR [ebp-0x7316911],0x44
  4051d6:	cmp    DWORD PTR [eax],esi
  4051d8:	inc    ecx
  4051d9:	pop    ebp
  4051da:	in     al,0x89
  4051dc:	es xor esi,esi
  4051df:	adc    esi,ecx
  4051e1:	fwait
  4051e2:	sub    DWORD PTR [edx-0x13ac75ea],ecx
  4051e8:	add    BYTE PTR [ecx-0x1f975fc],dl
  4051ee:	xchg   esi,eax
  4051ef:	adc    al,0xd5
  4051f1:	sbb    eax,DWORD PTR [eax]
  4051f3:	or     edx,eax
  4051f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051f6:	add    ebp,DWORD PTR [ecx-0x68]
  4051f9:	bound  esi,QWORD PTR [eax-0x76c67642]
  4051ff:	sub    al,0xf8
  405201:	shl    bl,1
  405203:	lods   al,BYTE PTR ds:[esi]
  405204:	mov    esi,edx
  405206:	push   ds
  405207:	cmp    DWORD PTR [eax],ebx
  405209:	adc    dl,ah
  40520b:	stc    
  40520c:	call   DWORD PTR [eax+0x33]
  40520f:	dec    ecx
  405210:	aas    
  405211:	jmp    0x6c969e
  405216:	add    dl,bh
  405218:	jmp    edi
  40521a:	pop    ecx
  40521b:	leave  
  40521c:	mov    edi,edi
  40521e:	cmp    eax,eax
  405220:	adc    ecx,DWORD PTR [eax]
  405222:	xchg   ecx,eax
  405223:	retf   0xff8b
  405226:	xchg   esi,eax
  405227:	inc    edi
  405228:	add    BYTE PTR [eax+0x27],ch
  40522b:	test   DWORD PTR [eax+0x0],eax
  40522e:	adc    DWORD PTR [edx],ecx
  405230:	rol    BYTE PTR [eax-0x17],1
  405233:	rcl    ebx,0x5b
  405236:	sar    bl,0xff
  405239:	out    0xf9,eax
  40523b:	mov    cs,WORD PTR [ecx+0x13faf2ff]
  405241:	push   ss
  405242:	jo     0x4052b2
  405244:	xchg   esp,eax
  405245:	(bad)  
  405246:	fdiv   QWORD PTR [esi-0x3d1e8a78]
  40524c:	dec    esi
  40524d:	std    
  40524e:	inc    esi
  40524f:	ror    BYTE PTR [eax-0x3652ca8b],0xd0
  405256:	add    BYTE PTR ss:[eax-0x123effeb],dh
  40525d:	fadd   DWORD PTR [eax-0x17]
  405260:	push   edx
  405261:	adc    al,0x30
  405263:	test   al,0x3a
  405265:	mov    DWORD PTR ds:0x4003b5,esi
  40526b:	add    eax,esi
  40526d:	lods   al,BYTE PTR ds:[esi]
  40526e:	inc    DWORD PTR [esi]
  405270:	or     eax,0xb2f17589
  405275:	pop    edi
  405276:	std    
  405277:	div    BYTE PTR [ecx+0x78810015]
  40527d:	rol    BYTE PTR [eax-0x17],1
  405280:	push   edx
  405281:	adc    al,0x30
  405283:	sub    BYTE PTR ds:0x82353589,dh
  405289:	aas    
  40528a:	add    cl,al
  40528c:	xchg   ecx,eax
  40528d:	lods   al,BYTE PTR ds:[esi]
  40528e:	inc    DWORD PTR [eax]
  405290:	jg     0x40521d
  405292:	mov    edi,0x45056674
  405297:	hlt    
  405298:	iret   
  405299:	stc    
  40529a:	repz inc DWORD PTR [ebp-0x74]
  40529e:	out    0x60,eax
  4052a0:	popf   
  4052a1:	ja     0x4052a2
  4052a3:	inc    DWORD PTR [ebp+0x70]
  4052a6:	call   0xffb7f398
  4052ab:	push   0x50
  4052ad:	in     al,0x3a
  4052af:	xor    BYTE PTR [ecx],ah
  4052b1:	add    al,0x68
  4052b3:	push   ecx
  4052b4:	nop
  4052b5:	cmp    eax,0xfc526800
  4052ba:	(bad)  
  4052bb:	jg     0x4052bd
  4052bd:	mov    eax,0x9fffd367
  4052c2:	sar    esi,cl
  4052c4:	jne    0x4052ee
  4052c6:	ins    BYTE PTR es:[edi],dx
  4052c7:	push   eax
  4052c8:	std    
  4052c9:	(bad)  
  4052ca:	js     0x405336
  4052cc:	add    al,bh
  4052ce:	inc    ecx
  4052cf:	xor    BYTE PTR [ecx+0x20],al
  4052d2:	in     al,dx
  4052d3:	push   eax
  4052d4:	xor    cl,ah
  4052d6:	add    ebp,DWORD PTR [eax+0x2]
  4052d9:	adc    BYTE PTR [eax+eax*4],al
  4052dc:	call   0x3f9f01
  4052e1:	jmp    0x4052a6
  4052e3:	je     0x4052fb
  4052e5:	imul   eax,esi,0x77c5fff3
  4052eb:	push   DWORD PTR [ebp-0x28]
  4052ee:	imul   edx,DWORD PTR [ecx],0xfffffffd
  4052f1:	aas    
  4052f2:	js     0x4052f3
  4052f4:	jne    0x4052ba
  4052f6:	push   0xffffff9e
  4052f8:	ror    bh,1
  4052fa:	jg     0x405366
  4052fc:	add    BYTE PTR [eax-0x5fbed04c],bh
  405302:	jmp    0x405377
  405304:	xor    BYTE PTR [ecx-0x4],ah
  405307:	add    bh,BYTE PTR [bx+di]
  40530a:	cdq    
  40530b:	add    eax,DWORD PTR [eax-0x4c866f]
  405311:	xchg   esi,eax
  405312:	jmp    0xb181c89d
  405317:	add    eax,0x1a4e86fd
  40531c:	add    BYTE PTR [ecx],dl
  40531e:	(bad)  
  405320:	inc    eax
  405321:	add    BYTE PTR [ecx],bh
  405323:	icebp  
  405324:	wrmsr  
  405326:	clc    
  405327:	cwde   
  405328:	sbb    eax,DWORD PTR [edx]
  40532a:	cmp    DWORD PTR [ecx+0x4ab8e883],ebx
  405330:	xchg   edi,edi
  405332:	inc    edx
  405333:	pop    ecx
  405334:	adc    BYTE PTR [esi],dl
  405336:	rcr    ah,0x8f
  405339:	dec    esp
  40533b:	add    al,0x87
  40533d:	jne    0x405370
  40533f:	add    edx,0x871e36fc
  405345:	jne    0x40536c
  405347:	xor    DWORD PTR [edi],esi
  405349:	shl    BYTE PTR [esi],1
  40534b:	xchg   DWORD PTR cs:[ebp+0x1d],esi
  40534f:	adc    DWORD PTR ss:[eax],ecx
  405352:	and    ebx,ebx
  405354:	mov    eax,0xc1d00eff
  405359:	add    al,0x39
  40535b:	fs jp  0x40534a
  40535e:	xchg   ecx,eax
  40535f:	cdq    
  405360:	add    ebp,edi
  405362:	mov    bh,0xdd
  405364:	adc    BYTE PTR [esi+ebp*8],cl
  405367:	imul   edi,ebx,0xffffffe7
  40536a:	dec    esi
  40536b:	jmp    0x4052f3
  40536d:	push   eax
  40536f:	(bad)  
  405371:	jmp    FWORD PTR [ebp+0x12]
  405374:	cwde   
  405375:	xor    ebp,0xc6ff85cc
  40537b:	aad    0x80
  40537d:	mov    eax,0x8695bf
  405382:	cmp    DWORD PTR [eax],eax
  405384:	jmp    0x3d02538c
  405389:	in     eax,dx
  40538a:	cli    
  40538b:	out    0xb,al
  40538d:	in     al,dx
  40538e:	and    DWORD PTR [ecx+0x0],0x54
  405392:	add    DWORD PTR [eax+0x3903e828],esp
  405398:	xchg   DWORD PTR [eax+edi*8],esi
  40539b:	sahf   
  40539c:	xchg   ebp,eax
  40539d:	xchg   ebx,eax
  40539e:	xchg   BYTE PTR [esi-0x6],bh
  4053a1:	test   al,0x10
  4053a3:	inc    esi
  4053a4:	sbb    BYTE PTR [edi-0x29],ah
  4053a7:	stc    
  4053a8:	call   FWORD PTR [ebp+0x62983510]
  4053ae:	mov    dl,0x5e
  4053b0:	xchg   BYTE PTR [edx-0x2a3d2108],al
  4053b6:	inc    esp
  4053b7:	cmp    DWORD PTR [edi+0x35ef7f4],eax
  4053bd:	call   0x374b:0x64783e86
  4053c4:	xchg   BYTE PTR [esi+0x1b],ah
  4053c7:	outs   dx,DWORD PTR ds:[esi]
  4053c8:	(bad)  
  4053c9:	call   0x2bbc07d1
  4053ce:	test   DWORD PTR [esi],ebx
  4053d0:	xchg   BYTE PTR [ecx+0x46b60d9b],bh
  4053d6:	xchg   BYTE PTR [ebx+edi*2-0x79f97ad5],bh
  4053dd:	cdq    
  4053de:	xchg   ah,al
  4053e0:	dec    eax
  4053e1:	das    
  4053e2:	xchg   dh,dh
  4053e4:	cwde   
  4053e5:	fldenv [ecx+edi*1+0x0]
  4053e9:	jo     0x40536b
  4053eb:	add    BYTE PTR [ebp+0x79861686],ah
  4053f1:	cmc    
  4053f2:	mov    bh,BYTE PTR fs:[ecx]
  4053f5:	add    cl,ch
  4053f7:	js     0x40539d
  4053f9:	ret    0x85ff
  4053fc:	(bad)  
  4053fd:	lea    eax,[eax]
  4053ff:	jmp    0x4053cb
  405401:	test   edi,edi
  405403:	jmp    0x2bcd6f4e
  405408:	xchg   ecx,eax
  405409:	xor    eax,0x4081a068
  40540e:	add    cl,al
  405410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405411:	pusha  
  405412:	add    cl,ch
  405414:	xchg   ecx,eax
  405415:	inc    ebp
  405416:	jne    0x405404
  405418:	mov    bl,0x4f
  40541a:	add    cl,ch
  40541c:	cmp    dh,BYTE PTR [ebx-0x6b]
  40541f:	stos   DWORD PTR es:[edi],eax
  405420:	mov    bh,0x85
  405422:	call   FWORD PTR [ebx+edi*8-0x2d]
  405426:	dec    edi
  405427:	adc    DWORD PTR [eax],eax
  405429:	aam    0x40
  40542b:	jmp    0xe9e0e4f2
  405430:	cmp    bh,cl
  405432:	mov    edi,0x94985614
  405437:	jmp    0xaca85476
  40543c:	gs inc eax
  40543e:	add    BYTE PTR [esi+0x2e],dh
  405441:	hlt    
  405442:	out    0x76,eax
  405444:	jmp    0x4053ca
  405446:	push   DWORD PTR [esi+ebx*4-0x3e]
  40544a:	(bad)  
  40544b:	pop    esi
  40544c:	mov    esp,0x55272
  405451:	imul   esi,DWORD PTR [eax],0xffffffe8
  405454:	adc    cl,al
  405456:	test   bh,bh
  405458:	cdq    
  405459:	mov    ch,0xa
  40545b:	adc    BYTE PTR [ecx+0x41080abd],bl
  405461:	or     eax,DWORD PTR [esi-0x322ad101]
  405467:	into   
  405468:	es mov ah,0x98
  40546b:	arpl   WORD PTR [ebx+edi*2-0x2c],bp
  40546f:	mov    BYTE PTR [ecx+ecx*4-0x7a],ch
  405473:	dec    DWORD PTR [esi]
  405475:	xor    eax,0xa10030c0
  40547a:	add    bh,bh
  40547c:	mov    ch,0xc
  40547e:	jle    0x40547f
  405480:	(bad)  
  405481:	cmp    BYTE PTR [ebx],dh
  405483:	mov    eax,ds:0xbf87a000
  405488:	je     0x4054e8
  40548a:	in     al,0xcc
  40548c:	sub    BYTE PTR [ecx-0x4],dl
  40548f:	(bad)  
  405490:	jne    0x405426
  405492:	push   0x7b87d2a9
  405497:	push   DWORD PTR [ebp-0x84f4]
  40549d:	and    BYTE PTR [ecx+esi*8-0x2e],ah
  4054a1:	(bad)  
  4054a2:	jnp    0x4054f4
  4054a4:	push   eax
  4054a5:	jecxz  0x4054a4
  4054a7:	str    WORD PTR [ebp+ecx*4+0x67]
  4054ac:	lahf   
  4054ad:	add    BYTE PTR [ecx+0x0],0x50
  4054b1:	mov    eax,0xa103
  4054b6:	pusha  
  4054b7:	addr16 add eax,0x61b8
  4054bd:	add    BYTE PTR [edx],bl
  4054bf:	xchg   DWORD PTR [edi-0x131a68c],edi
  4054c5:	jne    0x4054df
  4054c7:	push   0x7c97fe96
  4054cc:	call   0xffbcaba2
  4054d1:	lea    ecx,[ebp-0x7800013f]
  4054d7:	iret   
  4054d8:	(bad)  
  4054d9:	mov    ch,0xb4
  4054db:	jge    0x4054dc
  4054dd:	jmp    FWORD PTR [eax-0x3c]
  4054e0:	lahf   
  4054e1:	add    BYTE PTR [eax],dl
  4054e3:	add    eax,eax
  4054e5:	minps  xmm1,XMMWORD PTR [edi+0x7c17fffe]
  4054ec:	mov    ch,0xbc
  4054ee:	inc    esi
  4054ef:	jl     0x4054f0
  4054f1:	call   0xa4042f
  4054f6:	cmp    edx,esi
  4054f8:	dec    ebp
  4054f9:	mov    eax,0xe883facf
  4054fe:	cwde   
  4054ff:	rol    DWORD PTR [ebx-0x9280f01],cl
  405505:	dec    DWORD PTR ds:0x7583971e
  40550b:	popf   
  40550c:	dec    ebx
  40550d:	inc    ebp
  40550e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40550f:	cdq    
  405510:	add    eax,DWORD PTR [eax]
  405512:	cmp    DWORD PTR [edx+0x4aa10bf9],ebp
  405518:	push   esi
  405519:	inc    DWORD PTR [eax]
  40551b:	mov    cs,WORD PTR [esi+0x10237443]
  405521:	leave  
  405522:	sti    
  405523:	jle    0x4054e9
  405525:	adc    edi,edi
  405527:	in     al,dx
  405528:	push   esp
  405529:	ins    BYTE PTR es:[edi],dx
  40552a:	adc    eax,0x50835a8b
  40552f:	data16 in al,dx
  405531:	jg     0x40551b
  405533:	int3   
  405534:	pop    edx
  405535:	cmp    edi,0xffffffc6
  405538:	fdivr  QWORD PTR [edi+0x6a]
  40553b:	cmp    BYTE PTR [edx-0x7],bh
  40553e:	sti    
  40553f:	inc    esi
  405540:	mov    WORD PTR [ebx],cs
  405542:	call   0xffc3604c
  405547:	mov    WORD PTR ss:[edi-0x18],?
  40554b:	test   bl,cl
  40554d:	cmp    bh,0xf0
  405550:	(bad)  
  405551:	sldt   WORD PTR [esi+ebx*1+0x28fd8170]
  405559:	cmp    bh,0xe
  40555c:	scas   eax,DWORD PTR es:[edi]
  40555d:	add    ebp,DWORD PTR [edx+0x3a]
  405560:	ret    0x7f8
  405563:	adc    DWORD PTR [ebp+0x4e],eax
  405566:	push   esi
  405568:	pop    ds
  405569:	leave  
  40556a:	sti    
  40556b:	popa   
  40556c:	add    ch,ch
  40556e:	add    al,0x39
  405570:	add    BYTE PTR [ecx+ecx*4-0x1a],ch
  405574:	adc    DWORD PTR [esi],0x35986983
  40557a:	mov    ds:0x43f20039,eax
  40557f:	add    BYTE PTR [esi],dh
  405581:	jl     0x4055cd
  405583:	add    al,0x39
  405585:	add    BYTE PTR [edi+eax*1+0x12e90038],dh
  40558c:	mov    dh,0x67
  40558e:	jmp    0x96588e96
  405593:	xor    edi,eax
  405595:	jmp    DWORD PTR [ebx-0x78]
  405598:	mov    es,WORD PTR [ecx-0x68167d32]
  40559e:	mov    dl,BYTE PTR [esi+eax*4-0x7e]
  4055a2:	jo     0x40552c
  4055a4:	mov    DWORD PTR [ecx+0x4c7682b6],eax
  4055aa:	mov    ecx,0x11826e81
  4055af:	or     BYTE PTR [eax],bh
  4055b1:	add    cl,ch
  4055b3:	nop
  4055b4:	mov    ah,0x8a
  4055b6:	xchg   edi,eax
  4055b7:	adc    BYTE PTR [esi+0x2f],0x1
  4055bb:	push   ebx
  4055bc:	and    DWORD PTR [ecx-0x17],eax
  4055bf:	jmp    0x405633
  4055c1:	iret   
  4055c2:	daa    
  4055c3:	add    al,0xd1
  4055c5:	mov    esp,0x9a36c4b9
  4055ca:	arpl   WORD PTR [edx+0x43f20039],sp
  4055d0:	lods   eax,DWORD PTR ds:[esi]
  4055d1:	out    dx,eax
  4055d2:	rol    BYTE PTR [ebx],cl
  4055d4:	lods   al,BYTE PTR ds:[esi]
  4055d5:	jnp    0x405635
  4055d7:	adc    DWORD PTR [esi],0x8482b982
  4055dd:	clc    
  4055de:	push   eax
  4055df:	popf   
  4055e0:	add    al,0x82
  4055e2:	add    BYTE PTR ds:[eax],0xc4
  4055e6:	nop
  4055e7:	add    BYTE PTR [edi],dh
  4055e9:	mov    ebx,0x35e56881
  4055ee:	add    BYTE PTR [eax],al
  4055f0:	je     0x4055a3
  4055f2:	mov    esi,edi
  4055f4:	push   ds
  4055f5:	mov    ebx,0x22266830
  4055fa:	aas    
  4055fb:	add    BYTE PTR [ecx-0x16bf2f96],al
  405601:	sar    BYTE PTR [eax+esi*1+0x4f983aa8],cl
  405608:	push   esi
  405609:	cmp    al,BYTE PTR [eax]
  40560b:	or     ebp,DWORD PTR [ecx]
  40560d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40560e:	lock imul ebp,ecx,0xdff77bb7
  405615:	mov    eax,0x8ed65081
  40561a:	stc    
  40561b:	out    0x2e,eax
  40561d:	push   cs
  40561e:	cmp    edi,0xfe90cec6
  405624:	mov    esi,0xa47d98b8
  405629:	mov    eax,0xdd026a81
  40562e:	mov    edx,0xf5b8a6d1
  405633:	mov    edi,0xa6181915
  405638:	fnstcw WORD PTR [ebx-0x7f]
  40563b:	dec    edi
  40563c:	sub    DWORD PTR [edi-0x50],0x176d86ff
  405643:	add    BYTE PTR [ecx],bl
  405645:	mov    eax,0x81080b
  40564a:	outs   dx,DWORD PTR ds:[esi]
  40564b:	cmp    edi,0x6e
  40564e:	popf   
  40564f:	sub    cl,ch
  405651:	mov    ax,0x9517
  405655:	sbb    edx,edi
  405657:	sub    BYTE PTR [ecx-0xd],0xb9
  40565b:	or     cl,BYTE PTR [eax]
  40565d:	inc    ecx
  40565e:	fild   WORD PTR [ecx-0x6b80ff01]
  405664:	xchg   esp,eax
  405665:	xor    cl,dl
  405667:	cld    
  405668:	imul   esp,DWORD PTR [ebx],0xe807892f
  40566e:	mov    edi,DWORD PTR [esi-0x1]
  405671:	dec    eax
  405673:	imul   esi,DWORD PTR [eax],0x1b92d041
  405679:	push   DWORD PTR [ebp+0x3e8ce7f4]
  40567f:	jg     0x405680
  405681:	inc    DWORD PTR [ebp+0x1]
  405684:	push   DWORD PTR [ebp-0x38]
  405687:	adc    al,0x9c
  405689:	retf   0x7faf
  40568c:	leave  
  40568d:	ret    0xfc94
  405690:	push   esp
  405691:	mov    ecx,DWORD PTR [esp+edx*4-0x41900001]
  405698:	push   DWORD PTR [ebp-0x64]
  40569b:	jg     0x405712
  40569d:	or     BYTE PTR [eax+0xd],bh
  4056a0:	out    dx,al
  4056a1:	(bad)  
  4056a2:	jg     0x4056d9
  4056a4:	ret    0x9008
  4056a7:	test   eax,0x38e3ec8a
  4056ac:	clc    
  4056ad:	mov    DWORD PTR [eax],0x8015
  4056b3:	push   eax
  4056b4:	cld    
  4056b5:	mov    WORD PTR [ebp-0x44],es
  4056b8:	lods   al,BYTE PTR ds:[esi]
  4056b9:	fbstp  TBYTE PTR [bx+si-0x43]
  4056bd:	(bad)  
  4056be:	(bad)  
  4056bf:	and    eax,0x1c35fef0
  4056c4:	aad    0x40
  4056c6:	add    BYTE PTR [eax-0x500030f9],ch
  4056cc:	or     al,0xc0
  4056ce:	je     0x4056ce
  4056d0:	mov    al,BYTE PTR [ebp-0x8]
  4056d3:	or     BYTE PTR [ebx],al
  4056d5:	add    bh,ch
  4056d7:	mov    esi,0x39fc7580
  4056dc:	(bad)  
  4056dd:	cmc    
  4056de:	test   DWORD PTR [esi],0x63e80b55
  4056e4:	xlat   BYTE PTR ds:[ebx]
  4056e5:	jg     0x4056e6
  4056e7:	(bad)  
  4056e8:	mov    ah,0x7b
  4056ea:	call   0xffc07ca3
  4056ef:	add    BYTE PTR [ebx+ecx*1],ch
  4056f2:	add    BYTE PTR [edx+esi*8-0x2a0a7e92],cl
  4056f9:	cmp    bh,0xd6
  4056fc:	xchg   BYTE PTR cs:[eax+0x800ecf],bh
  405703:	cmp    DWORD PTR [ecx+0x3],ebp
  405706:	mov    esi,DWORD PTR [ebp+ebp*2+0xc]
  40570a:	shr    BYTE PTR ds:0x3938836c,0xf4
  405711:	add    eax,0x683d00e9
  405716:	add    eax,DWORD PTR [eax]
  405718:	sahf   
  405719:	aam    0x13
  40571b:	dec    DWORD PTR [eiz*2+0x4e69296b]
  405722:	jg     0x405774
  405724:	jmp    0x9148506e
  405729:	(bad)  
  40572a:	jle    0x40572b
  40572c:	jbe    0x40576f
  40572e:	sti    
  40572f:	retf   
  405730:	outs   dx,BYTE PTR ds:[esi]
  405731:	scas   al,BYTE PTR es:[edi]
  405732:	in     al,dx
  405733:	mov    ebp,0xff042815
  405738:	in     al,0x6c
  40573a:	imul   ecx,DWORD PTR ds:0x897f9669,0xffffffb4
  405741:	sar    DWORD PTR [ebp-0x1],1
  405744:	inc    esi
  405745:	adc    DWORD PTR [esi],edi
  405747:	add    DWORD PTR [ecx],edi
  405749:	imul   edx,DWORD PTR [eax+0x7ef6fb85],0x898189ff
  405753:	int3   
  405754:	add    BYTE PTR es:[esi-0x6f],ah
  405758:	mov    ah,0x41
  40575a:	pop    edi
  40575b:	jg     0x405773
  40575d:	rcl    BYTE PTR [ebp-0x47],1
  405760:	sar    DWORD PTR [ebp+0x4e],1
  405763:	jg     0x405776
  405765:	inc    ecx
  405766:	fs add al,0x39
  405769:	mov    DWORD PTR [eax+eax*8-0x9],esp
  40576d:	jle    0x4057a5
  40576f:	les    edi,FWORD PTR [edi]
  405771:	test   BYTE PTR [esi+0x74003904],al
  405777:	cdq    
  405778:	add    bl,bh
  40577a:	jge    0x40579a
  40577c:	jg     0x40574c
  40577e:	add    ecx,edi
  405780:	add    edi,DWORD PTR [ecx]
  405782:	add    BYTE PTR [ebp+0x2b94b5f7],dl
  405788:	jle    0x405748
  40578a:	jle    0x4057f8
  40578c:	ret    0xd062
  40578f:	cmp    BYTE PTR [ebp+ebx*2-0x3e94173f],0x9c
  405797:	jmp    0x5480899f
  40579c:	add    ah,BYTE PTR [edx+0x7b9863d9]
  4057a2:	jge    0x405772
  4057a4:	jle    0x40575a
  4057a6:	rcl    DWORD PTR [esp+edx*8],0x16
  4057aa:	mov    ebx,0x6676c50d
  4057af:	aaa    
  4057b0:	mov    eax,ds:0x43e20039
  4057b5:	in     al,dx
  4057b6:	add    DWORD PTR [edx-0x546b523d],edx
  4057bc:	jge    0x405814
  4057be:	jle    0x405824
  4057c0:	shl    DWORD PTR [edx],0x89
  4057c3:	fs mov bh,0x47
  4057c6:	jle    0x40574e
  4057c8:	jmp    0x405837
  4057ca:	daa    
  4057cb:	sub    BYTE PTR [esi+esi*1],al
  4057ce:	hlt    
  4057cf:	jmp    esp
  4057d1:	mov    ds:0xa76ecef7,al
  4057d6:	jge    0x40578d
  4057d8:	popf   
  4057d9:	pushf  
  4057da:	jge    0x4057db
  4057dc:	mov    ecx,0xcf3fa200
  4057e1:	push   esi
  4057e2:	(bad)  
  4057e3:	jge    0x40585a
  4057e5:	stc    
  4057e6:	jmp    0x507d:0x7f36b865
  4057ed:	cdq    
  4057ee:	ja     0x4057e3
  4057f0:	pop    es
  4057f1:	inc    ecx
  4057f2:	xchg   ebp,eax
  4057f3:	jle    0x4057f4
  4057f5:	cs push edx
  4057f7:	mov    dh,0xcb
  4057f9:	es pop edi
  4057fb:	mov    eax,DWORD PTR [ebp-0x82abd5]
  405801:	mov    ecx,0xfbcb34f
  405806:	inc    edi
  405807:	jge    0x4057f1
  405809:	aad    0x99
  40580b:	add    BYTE PTR [eax],al
  40580d:	fs cli 
  40580f:	or     al,0x85
  405811:	lea    ebp,[edi]
  405813:	jge    0x405814
  405815:	out    dx,al
  405816:	out    dx,al
  405817:	mov    esp,0x681ce6fe
  40581c:	pop    ds
  40581d:	jl     0x40585c
  40581f:	add    bh,bh
  405821:	pushf  
  405822:	int    0x7e
  405824:	dec    esi
  405826:	adc    eax,0xfcc6cb86
  40582b:	inc    esi
  40582c:	ret    0x3aed
  40582f:	ror    DWORD PTR [edx-0x3bb473b],cl
  405835:	scas   al,BYTE PTR es:[edi]
  405836:	outs   dx,BYTE PTR ds:[esi]
  405837:	or     eax,ebp
  405839:	stos   BYTE PTR es:[edi],al
  40583a:	in     al,dx
  40583b:	jl     0x40583c
  40583d:	jo     0x4058bd
  40583f:	jns    0x40584c
  405841:	test   eax,0x8c843c00
  405846:	jmp    0xa85885
  40584b:	pop    ebp
  40584c:	das    
  40584d:	inc    ecx
  40584e:	add    BYTE PTR [edi-0x5417048b],dh
  405854:	into   
  405855:	(bad)  
  405856:	inc    DWORD PTR [eax+0x6c]
  405859:	gs xor dl,cl
  40585c:	add    BYTE PTR [eax-0x1],dl
  40585f:	in     eax,dx
  405860:	or     al,ch
  405862:	xchg   esp,eax
  405863:	data16 sti 
  405865:	(bad)  
  405866:	call   0x3f2043
  40586b:	call   0xe0818a96
  405870:	sti    
  405871:	je     0x40586f
  405873:	js     0x40584f
  405875:	int    0xff
  405877:	pop    ss
  405878:	push   esp
  405879:	data16 add al,BYTE PTR [bp+si-0x1]
  40587e:	dec    edi
  40587f:	aaa    
  405880:	jne    0x405889
  405882:	call   0x3f533a
  405887:	cmp    BYTE PTR [ebx],ah
  405889:	retf   
  40588a:	push   DWORD PTR [edi]
  40588c:	ins    BYTE PTR es:[edi],dx
  40588d:	inc    edx
  40588e:	xor    ah,cl
  405890:	add    bh,bh
  405892:	jne    0x405838
  405894:	call   0xfbd82751
  405899:	dec    edi
  40589a:	push   0x4131ee
  40589f:	push   eax
  4058a0:	sti    
  4058a1:	je     0x4058ab
  4058a3:	js     0x4058f3
  4058a5:	std    
  4058a6:	inc    DWORD PTR [eax]
  4058a8:	ja     0x405892
  4058aa:	add    eax,0x67fb77cb
  4058af:	pop    ebp
  4058b0:	jb     0x4058f3
  4058b2:	(bad)  
  4058b3:	(bad)  
  4058b4:	sub    eax,0xc698e880
  4058b9:	sti    
  4058ba:	(bad)  
  4058bb:	push   eax
  4058bc:	dec    eax
  4058bd:	xor    WORD PTR [ecx+0x60],ax
  4058c1:	push   eax
  4058c2:	(bad)  
  4058c3:	jne    0x4058fe
  4058c5:	pop    edi
  4058c6:	imul   esi,DWORD PTR [ecx],0x47
  4058c9:	lea    edi,[eax+ebp*8+0x54]
  4058cd:	mov    al,0x7c
  4058cf:	push   DWORD PTR [esi]
  4058d1:	jne    0x405952
  4058d3:	call   0xffbcf8e4
  4058d8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058da:	or     eax,DWORD PTR [eax]
  4058dc:	test   dh,ch
  4058de:	outs   dx,BYTE PTR ds:[esi]
  4058df:	cmp    ebp,0xffffffdd
  4058e2:	shr    DWORD PTR [ecx+0x39],cl
  4058e5:	aas    
  4058e6:	pop    es
  4058e7:	dec    DWORD PTR [ecx+eiz*2-0x3d090195]
  4058ee:	jnp    0x405879
  4058f0:	jl     0x40592f
  4058f2:	mov    BYTE PTR ds:0xffc30164,bh
  4058f8:	pushw  0x3
  4058fb:	je     0x40591f
  4058fd:	xchg   ecx,eax
  4058fe:	push   esp
  4058ff:	xor    BYTE PTR [eax+0x69],bh
  405902:	aam    0xe7
  405904:	xor    ah,0x2
  405907:	add    BYTE PTR [edx],dh
  405909:	sub    edi,esi
  40590b:	sbb    eax,0xef116600
  405910:	shl    DWORD PTR [esi+0x25c0077a],cl
  405916:	pop    ebp
  405917:	shl    DWORD PTR [edi+0x1f],cl
  40591a:	mov    bh,0xc2
  40591c:	(bad)  
  40591d:	out    dx,al
  40591e:	popa   
  40591f:	icebp  
  405920:	pop    es
  405921:	mov    eax,ds:0x8eff79b2
  405926:	inc    ecx
  405927:	(bad)
  40592b:	js     0x405960
  40592d:	jns    0x4058af
  40592f:	jnp    0x405930
  405931:	jbe    0x4058ed
  405933:	jbe    0x4058e3
  405935:	xor    DWORD PTR [edx-0x10],ebp
  405938:	(bad)  
  405939:	ror    DWORD PTR [esi+0x7a],cl
  40593c:	jne    0x40596f
  40593e:	add    BYTE PTR [ecx-0x6184a88b],dl
  405944:	out    dx,al
  405945:	sbb    edi,DWORD PTR [ebx+0x1c]
  405948:	or     al,0x51
  40594a:	arpl   WORD PTR [edi-0x1b19c185],cx
  405950:	jp     0x4058fe
  405952:	or     BYTE PTR [ecx+0x767b2f59],dl
  405958:	out    dx,al
  405959:	pop    esp
  40595a:	jnp    0x405950
  40595c:	or     edx,DWORD PTR [ecx]
  40595e:	dec    edi
  40595f:	addr16 jnp 0x405978
  405962:	call   0xb88db6
  405967:	push   esi
  405968:	icebp  
  405969:	ds push 0x7afe78a4
  40596f:	rcl    DWORD PTR [edx],1
  405971:	add    BYTE PTR [eax],ch
  405973:	shr    eax,0x7a
  405976:	or     BYTE PTR fs:[ecx+0x3c],al
  40597a:	in     al,0x7a
  40597c:	cs in  al,dx
  40597e:	ins    DWORD PTR es:[edi],dx
  40597f:	xor    DWORD PTR [eax-0xf0b29fd],ebp
  405985:	imul   esp,DWORD PTR [edx],0x7d
  405988:	push   ss
  405989:	jnp    0x4059dc
  40598b:	not    edi
  40598d:	les    edi,FWORD PTR [esi-0x5ef48387]
  405993:	sbb    esp,edi
  405995:	jp     0x405945
  405997:	out    0x37,eax
  405999:	xor    eax,0xf0edfff8
  40599e:	ss push 0x7a9678f8
  4059a4:	push   ecx
  4059a5:	pop    ebx
  4059a6:	dec    eax
  4059a7:	shr    eax,0x7a
  4059aa:	or     al,0x8
  4059ac:	sar    edi,0x7d
  4059af:	jp     0x405977
  4059b1:	jp     0x40599f
  4059b3:	jnp    0x405973
  4059b5:	lock ss push 0x7afa3300
  4059bc:	dec    DWORD PTR [esi]
  4059be:	in     al,dx
  4059bf:	cmp    eax,0x8569e904
  4059c4:	in     al,dx
  4059c5:	push   0x51
  4059c7:	push   es
  4059c8:	add    BYTE PTR ds:0xf9757b2b,bl
  4059ce:	ret    
  4059cf:	hlt    
  4059d0:	or     eax,DWORD PTR [esi-0x4c17fdd7]
  4059d6:	add    BYTE PTR [edi+0x2976ff79],bl
  4059dc:	push   es
  4059dd:	call   0xffb9c773
  4059e2:	xor    BYTE PTR [esp+ecx*1+0x0],bh
  4059e6:	mov    ah,0xbf
  4059e8:	ins    BYTE PTR es:[edi],dx
  4059e9:	sub    DWORD PTR ds:0x4dffe68e,0x9
  4059f0:	push   cs
  4059f1:	(bad)  
  4059f2:	mov    esp,0xed75794a
  4059f7:	bound  edx,QWORD PTR [edx-0x34]
  4059fa:	arpl   WORD PTR ss:0x8906b5c0,ax
  405a01:	inc    ebp
  405a02:	and    eax,0xa83252e2
  405a07:	cmp    bh,BYTE PTR [ecx+0x75]
  405a0a:	adc    eax,0xeccc752
  405a0f:	inc    ebx
  405a10:	call   0xba644314
  405a15:	push   eax
  405a16:	(bad)  
  405a17:	sahf   
  405a18:	add    eax,ebp
  405a1a:	dec    esp
  405a1b:	and    edi,DWORD PTR [ecx-0x1]
  405a1e:	adc    DWORD PTR [esi+ebp*1],0xf311e941
  405a25:	sti    
  405a26:	shl    DWORD PTR [ebx+0x4b],1
  405a29:	call   esi
  405a2b:	xchg   ebp,eax
  405a2c:	add    BYTE PTR [eax],al
  405a2e:	mov    esi,0xfed0c3
  405a33:	xor    eax,0xaf8ae80c
  405a38:	idiv   esi
  405a3a:	push   0x41327d00
  405a3f:	add    BYTE PTR [edi+0x53e8fb69],cl
  405a45:	ret    0xfffe
  405a48:	sub    BYTE PTR [edx],al
  405a4a:	add    bh,ch
  405a4c:	out    dx,al
  405a4d:	push   ebx
  405a4e:	(bad)  
  405a4f:	jne    0x405aa9
  405a51:	in     eax,0x6e
  405a53:	(bad)  
  405a54:	mov    edi,0xac75fef6
  405a59:	in     al,dx
  405a5a:	pop    ebp
  405a5b:	leave  
  405a5c:	scas   eax,DWORD PTR es:[edi]
  405a5d:	test   eax,0x54fd00c2
  405a63:	mov    ebp,DWORD PTR [esp+ebp*2-0x7]
  405a67:	xor    ah,cl
  405a69:	cld    
  405a6a:	(bad)  
  405a6b:	jne    0x405a89
  405a6d:	in     eax,0xe8
  405a6f:	int3   
  405a70:	outs   dx,DWORD PTR ds:[esi]
  405a71:	idiv   esi
  405a73:	jne    0x405a85
  405a75:	dec    ebp
  405a76:	out    0x34,eax
  405a78:	sbb    eax,0xa5fffef7
  405a7d:	or     BYTE PTR [eax-0x1],dl
  405a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a81:	add    al,0xe8
  405a83:	ds pop ds
  405a85:	idiv   esi
  405a87:	push   0x4133d6
  405a8c:	das    
  405a8d:	imul   ecx,DWORD PTR [ebx],0xfec817e8
  405a93:	(bad)  
  405a94:	aas    
  405a95:	imul   ecx,DWORD PTR [edi],0xcd124850
  405a9b:	jmp    FWORD PTR [edi+0x1474f7]
  405aa1:	shl    bh,0x74
  405aa4:	or     BYTE PTR [eax+0x10],ch
  405aa7:	(bad)  
  405aa8:	jmp    FWORD PTR [edi-0x3b]
  405aab:	rcl    DWORD PTR [eax],0x39
  405aae:	addr16 into 
  405ab0:	mov    cl,BYTE PTR [ebp+0x76fc3ee5]
  405ab6:	cmp    ecx,DWORD PTR [eax]
  405ab8:	call   0xffb906c6
  405abd:	xor    ah,BYTE PTR [edi+0x23b049ef]
  405ac3:	js     0x405b2d
  405ac5:	cmp    DWORD PTR [edi+0x68],esp
  405ac8:	mov    esi,0x4135b1e1
  405acd:	cmp    DWORD PTR [edx+0x133efbee],edx
  405ad3:	or     al,0xe8
  405ad5:	ret    0x787e
  405ad8:	jmp    DWORD PTR [ecx-0x1810fc98]
  405ade:	add    DWORD PTR [esi+0x32],esp
  405ae1:	js     0x405b4c
  405ae3:	js     0x405b5a
  405ae5:	adc    eax,0x2107eddf
  405aea:	push   eax
  405aeb:	js     0x405aec
  405aed:	push   es
  405aee:	inc    edx
  405aef:	add    eax,0xeb880e00
  405af4:	in     al,dx
  405af5:	sub    ebp,DWORD PTR [eax+0x3564ff03]
  405afb:	js     0x405b72
  405afd:	xor    ecx,eax
  405aff:	loope  0x405aff
  405b01:	fisub  WORD PTR [esi]
  405b03:	js     0x405b7a
  405b05:	add    ch,dl
  405b07:	adc    DWORD PTR [eax+ecx*8-0x3db5e932],esi
  405b0e:	xor    DWORD PTR [ecx-0x32],ebp
  405b11:	mov    cl,ch
  405b13:	jmp    0x4ed:0x6923fc3e
  405b1a:	scas   al,BYTE PTR es:[edi]
  405b1b:	in     al,dx
  405b1c:	or     ch,al
  405b1e:	mov    WORD PTR [eax+edi*2],fs
  405b21:	push   DWORD PTR [eax-0x1e978864]
  405b27:	add    BYTE PTR [ebx],bl
  405b29:	lds    ecx,FWORD PTR [esi-0x7cdb121]
  405b2f:	call   ebp
  405b31:	xor    ebp,ebx
  405b33:	sub    BYTE PTR [eax],ch
  405b35:	add    al,0x76
  405b37:	in     eax,dx
  405b38:	lock imul ebx,DWORD PTR [edi-0x2e88418a],0xffffffb9
  405b40:	sti    
  405b41:	les    ebx,FWORD PTR [esi-0x21]
  405b44:	push   0x32
  405b46:	clc    
  405b47:	jmp    DWORD PTR [ebp+0x2828ed31]
  405b4d:	add    al,0x46
  405b4f:	in     eax,dx
  405b50:	loopne 0x405bbd
  405b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b53:	jbe    0x405ae3
  405b55:	ja     0x405af8
  405b57:	mov    bh,0xbb
  405b59:	les    ebp,FWORD PTR [esi]
  405b5b:	fisttp WORD PTR [esi]
  405b5d:	xor    bh,BYTE PTR [eax+0x0]
  405b60:	jbe    0x405b93
  405b62:	jge    0x405b8d
  405b64:	sub    BYTE PTR [esi+edx*1],al
  405b67:	in     eax,dx
  405b68:	lock imul eax,DWORD PTR [eax],0xffffff8f
  405b6c:	jbe    0x405bcc
  405b6e:	ja     0x405b01
  405b70:	inc    esp
  405b71:	sbb    eax,ebp
  405b73:	(bad)  
  405b74:	fidivr WORD PTR [esi+0x46007831]
  405b7a:	xor    DWORD PTR [ebp-0x19fc57d7],ecx
  405b80:	in     al,dx
  405b81:	loopne 0x405bee
  405b83:	push   edi
  405b84:	jbe    0x405bb4
  405b86:	ja     0x405be9
  405b88:	test   al,0xdb
  405b8a:	(bad)  
  405b8b:	into   
  405b8c:	fidiv  WORD PTR [edx+esi*1+0x78]
  405b90:	add    BYTE PTR [esi],dl
  405b92:	xor    DWORD PTR [ebp+0x29],ebx
  405b95:	test   al,0x3
  405b97:	mov    dh,0xec
  405b99:	lock imul edi,edi,0x75
  405b9d:	(bad)  
  405b9e:	jbe    0x405bb1
  405ba0:	mov    edx,0x7675bb00
  405ba5:	addr16 push ebp
  405ba7:	dec    ebx
  405ba8:	sar    edi,0xe5
  405bab:	dec    ecx
  405bac:	aam    0x28
  405bae:	sub    BYTE PTR ds:0x12e17577,bh
  405bb4:	cs dec dh
  405bb7:	out    dx,eax
  405bb8:	out    0xbe,eax
  405bba:	sti    
  405bbb:	jne    0x405c33
  405bbd:	addr16 push ebp
  405bbf:	sub    cl,al
  405bc1:	push   DWORD PTR [ebp+0x2828d429]
  405bc7:	cmp    eax,0xe2f17577
  405bcc:	adc    eax,0xcf009efe
  405bd1:	out    0xcb,eax
  405bd3:	(bad)  [ebp+0x76]
  405bd6:	addr16 jne 0x405c41
  405bd9:	mov    edi,0xd46985ff
  405bde:	sub    BYTE PTR [eax],ch
  405be0:	cmp    eax,0x92e17575
  405be5:	(bad)  
  405be6:	std    
  405be7:	outs   dx,BYTE PTR ds:[esi]
  405be8:	(bad)
  405bec:	hlt    
  405bed:	jne    0x405c56
  405bef:	iret   
  405bf0:	dec    eax
  405bf1:	mov    edi,0x38c0ff
  405bf6:	add    BYTE PTR [ecx+0x6f],ch
  405bf9:	jmp    0x405c02
  405bfb:	push   ecx
  405bfc:	push   edi
  405bfd:	jae    0x405bfe
  405bff:	shl    BYTE PTR ds:[edi-0x17c557ce],cl
  405c06:	cmp    ebx,0xeb6775fd
  405c0c:	cmp    al,BYTE PTR [eax]
  405c0e:	sbb    BYTE PTR [esi],0xc9
  405c11:	std    
  405c12:	out    0x31,eax
  405c14:	inc    ecx
  405c15:	jne    0x405c16
  405c17:	sub    edi,0xa0004132
  405c1d:	imul   ebp,DWORD PTR [ebp+0x32],0x26801d1
  405c24:	nop
  405c25:	add    DWORD PTR [eax-0x17f6f201],eax
  405c2b:	rcl    DWORD PTR [ebp-0x2b970115],0x32
  405c32:	inc    ecx
  405c33:	add    BYTE PTR [eax],al
  405c35:	clc    
  405c36:	pop    ebp
  405c37:	xor    DWORD PTR [ecx+0x60],eax
  405c3a:	imul   eax,DWORD PTR [ecx],0xff816000
  405c40:	jne    0x405caa
  405c42:	jmp    0xebe859f0
  405c47:	addr16 test al,0x52
  405c4a:	inc    edx
  405c4b:	jmp    DWORD PTR [edi-0x34]
  405c4e:	xor    DWORD PTR [ecx+0x0],eax
  405c51:	sub    BYTE PTR [edx],al
  405c53:	add    BYTE PTR [eax],al
  405c55:	shr    dl,1
  405c57:	je     0x405c61
  405c59:	mov    eax,0xb7fffd8e
  405c5e:	arpl   WORD PTR [ecx+0x67fc5132],di
  405c64:	xchg   esp,eax
  405c65:	loop   0x405ca8
  405c67:	jmp    DWORD PTR [edi+0x22]
  405c6a:	add    DWORD PTR [eax],eax
  405c6c:	adc    BYTE PTR [edi-0x1b17f89b],0xed
  405c73:	(bad)  
  405c74:	(bad)  
  405c75:	clc    
  405c76:	stos   DWORD PTR es:[edi],eax
  405c77:	xor    al,BYTE PTR [ecx-0x20]
  405c7a:	push   0xa13293
  405c7f:	push   0x8000d002
  405c84:	call   FWORD PTR [ebp+0x2565e808]
  405c8a:	jmp    0x405c8a
  405c8c:	push   0x413204
  405c91:	test   al,0x84
  405c93:	xor    al,BYTE PTR [ecx+0x39]
  405c96:	addr16 jmp 0x405c9a
  405c99:	add    BYTE PTR [ecx],bh
  405c9b:	addr16 cmp edi,0x24
  405c9f:	outs   dx,DWORD PTR ds:[esi]
  405ca0:	imul   ecx,DWORD PTR [esi-0x5c],0x75
  405ca4:	je     0x405d10
  405ca6:	inc    ebx
  405ca7:	outs   dx,BYTE PTR ds:[esi]
  405ca8:	out    dx,al
  405ca9:	pop    es
  405caa:	mov    eax,ds:0x8eff755f
  405caf:	shl    BYTE PTR [eax],1
  405cb1:	dec    DWORD PTR [edi+ebp*2]
  405cb4:	imul   edi,edi,0x7c
  405cb7:	dec    ebp
  405cb8:	je     0x405d24
  405cba:	push   ebp
  405cbb:	inc    esi
  405cbc:	out    dx,al
  405cbd:	pop    es
  405cbe:	popa   
  405cbf:	mov    bl,0x76
  405cc1:	jmp    DWORD PTR [esi-0x4b]
  405cc4:	out    dx,al
  405cc5:	sti    
  405cc6:	pop    esi
  405cc7:	xor    ecx,DWORD PTR [eax+ebp*8]
  405cca:	into   
  405ccb:	call   0xffff:0xa880ff74
  405cd2:	in     eax,dx
  405cd3:	icebp  
  405cd4:	cmp    WORD PTR [edx+ebx*2+0x19a7403],0x17
  405cdd:	xor    edi,DWORD PTR [eax+0x69]
  405ce0:	je     0x405d57
  405ce2:	xor    eax,0x1ec9f591
  405ce7:	jmp    0x405cbb
  405ce9:	cmp    DWORD PTR [bx+di+0x64],ebp
  405ced:	mov    esi,0x7edda69
  405cf2:	adc    DWORD PTR [eax-0x3e010095],esp
  405cf8:	inc    edi
  405cf9:	(bad)  
  405cfa:	test   dl,0xea
  405cfd:	sub    eax,0x3a82a00
  405d02:	jmp    FWORD PTR [ebp+eiz*2+0x6b]
  405d06:	pop    ebp
  405d07:	repz sub dh,BYTE PTR [eax+edx*2+0x61]
  405d0c:	push   0x8fef03
  405d11:	mov    ecx,0x11084c74
  405d16:	call   0x3ae3:0x6b1673d1
  405d1d:	push   cs
  405d1e:	je     0x405d41
  405d20:	sar    DWORD PTR [ecx+0x7472a6c2],0x7
  405d27:	xchg   ecx,eax
  405d28:	xor    al,0x23
  405d2a:	je     0x405cc2
  405d2c:	rol    BYTE PTR [eax-0x589cc6ff],1
  405d32:	aam    0x87
  405d34:	in     eax,dx
  405d35:	lock pop ebx
  405d37:	add    DWORD PTR [eax-0x2a],ebp
  405d3a:	jae    0x405d9d
  405d3c:	mov    DWORD PTR [edi-0x54b6918d],esp
  405d42:	cld    
  405d43:	data16 int3 
  405d45:	jno    0x405da7
  405d47:	pop    esi
  405d48:	in     eax,dx
  405d49:	in     al,0x5b
  405d4b:	add    BYTE PTR [esi-0x52],0x73
  405d4f:	inc    edx
  405d50:	inc    eax
  405d51:	sbb    eax,0xda0dd10e
  405d56:	les    edi,FWORD PTR [esi]
  405d58:	ret    
  405d59:	adc    dl,0x0
  405d5c:	jae    0x405cec
  405d5e:	aam    0x7e
  405d60:	jae    0x405d5e
  405d62:	sti    
  405d63:	add    BYTE PTR [esi],bl
  405d65:	in     al,0x7d
  405d67:	jae    0x405d87
  405d69:	push   0x73164a15
  405d6e:	mov    al,ds:0xbc004146
  405d73:	jle    0x405d8a
  405d75:	jg     0x405d9c
  405d77:	fs xchg ebx,eax
  405d79:	add    BYTE PTR [esi-0x7],dl
  405d7c:	inc    esi
  405d7d:	jae    0x405d53
  405d7f:	(bad)  
  405d80:	out    dx,eax
  405d81:	sub    al,0xa5
  405d83:	sbb    al,0x78
  405d85:	add    BYTE PTR [ecx-0x25],dl
  405d88:	icebp  
  405d89:	jb     0x405d8b
  405d8b:	ss push esp
  405d8d:	mov    ebp,0x733ac3f3
  405d92:	jne    0x405d91
  405d94:	dec    ebx
  405d95:	in     eax,dx
  405d96:	or     ebx,DWORD PTR [esi]
  405d98:	add    ah,dl
  405d9a:	sub    BYTE PTR [eax+0x2041683a],ch
  405da0:	sub    dh,BYTE PTR [ebx-0x77]
  405da3:	lods   al,BYTE PTR ds:[esi]
  405da4:	push   ss
  405da5:	out    0xff,al
  405da7:	std    
  405da8:	mov    eax,ds:0x967cff0a
  405dad:	jno    0x405de4
  405daf:	lea    ebp,ds:0x27d0ffc1
  405db5:	dec    ecx
  405db6:	(bad)  
  405db7:	fdivp  st(5),st
  405db9:	mov    esp,0x5a8164f7
  405dbe:	push   eax
  405dbf:	into   
  405dc0:	jno    0x405dd8
  405dc2:	(bad)  
  405dc3:	cmp    al,0x39
  405dc5:	jae    0x405dfc
  405dc7:	sbb    eax,0xffc13c00
  405dcc:	shr    BYTE PTR [edi],0x49
  405dcf:	jmp    FWORD PTR [esi+0x13efbccd]
  405dd5:	cmp    eax,0xcbc97573
  405dda:	in     al,dx
  405ddb:	or     edx,DWORD PTR [esi+0x2828d471]
  405de1:	xor    eax,0xabb1fd68
  405de6:	jno    0x405d71
  405de8:	and    al,0x99
  405dea:	add    DWORD PTR [ebp-0x77],0xffffffea
  405dee:	jb     0x405e65
  405df0:	lds    ecx,FWORD PTR [ebx+0x41660beb]
  405df6:	aam    0x28
  405df8:	test   al,0x3a
  405dfa:	push   0x716b21e5
  405dff:	mov    DWORD PTR [esi+edx*2+0x7c007d7d],esp
  405e06:	std    
  405e07:	push   cs
  405e08:	test   BYTE PTR [ebp+edi*8+0x7063ffff],al
  405e0f:	test   DWORD PTR [eax],0x8a79ef
  405e15:	sar    ch,1
  405e17:	cmp    BYTE PTR [ebp+0x24],0xfd
  405e1b:	push   cs
  405e1c:	test   BYTE PTR [eax],ah
  405e1e:	std    
  405e1f:	(bad)  
  405e20:	(bad)  
  405e21:	aas    
  405e22:	js     0x405e4b
  405e24:	jmp    DWORD PTR ds:0x522ae775
  405e2a:	out    dx,al
  405e2b:	(bad)  
  405e2c:	inc    DWORD PTR [eax]
  405e2e:	adc    eax,0x9875fee1
  405e33:	aad    0x80
  405e35:	ret    0xef9f
  405e38:	(bad)  
  405e39:	jne    0x405dd3
  405e3b:	out    dx,eax
  405e3c:	je     0x405e46
  405e3e:	js     0x405eb6
  405e40:	sar    edi,0x7f
  405e43:	out    dx,eax
  405e44:	je     0x405e3a
  405e46:	jg     0x405eb1
  405e48:	pop    es
  405e49:	call   0x3f1859
  405e4e:	loope  0x405eb0
  405e50:	daa    
  405e51:	adc    esp,DWORD PTR [eax-0x20]
  405e54:	mov    ebp,0x74f04d75
  405e59:	lock lahf 
  405e5b:	imul   eax,DWORD PTR [edi],0xfeba77e8
  405e61:	(bad)  
  405e62:	mov    ebx,0xc875fefd
  405e67:	out    dx,al
  405e68:	je     0x405e5a
  405e6a:	lahf   
  405e6b:	imul   eax,DWORD PTR [edi],0xfebaebe8
  405e71:	call   FWORD PTR [edi-0x1a001497]
  405e77:	je     0x405e60
  405e79:	cmp    al,0x52
  405e7b:	out    dx,eax
  405e7c:	inc    BYTE PTR [ebx+0x674c39]
  405e82:	gs ins BYTE PTR es:[edi],dx
  405e84:	test   BYTE PTR [ebp-0x27],bh
  405e87:	(bad)  
  405e88:	test   BYTE PTR [esi],0xb2
  405e8b:	fwait
  405e8c:	dec    DWORD PTR [bx+di]
  405e8f:	sub    dh,bh
  405e91:	pop    es
  405e92:	add    cl,ah
  405e94:	daa    
  405e95:	inc    ebx
  405e96:	inc    esi
  405e98:	or     eax,0x123969fe
  405e9d:	test   DWORD PTR [edi],0xff42d3a1
  405ea3:	scas   al,BYTE PTR es:[edi]
  405ea4:	add    edi,esi
  405ea6:	repz xchg ecx,eax
  405ea8:	inc    edx
  405ea9:	inc    esi
  405eaa:	call   FWORD PTR [esi-0x5e04098f]
  405eb0:	dec    edx
  405eb1:	inc    esi
  405eb2:	dec    DWORD PTR [esi-0x6e08099f]
  405eb8:	jb     0x405f00
  405eba:	(bad)  
  405ebb:	jle    0x405f0e
  405ebd:	imul   bh
  405ebf:	popa   
  405ec0:	pop    edx
  405ec1:	inc    esi
  405ec2:	jmp    FWORD PTR [esi+0x41]
  405ec5:	imul   bl
  405ec7:	push   ecx
  405ec8:	bound  eax,QWORD PTR [esi-0x1]
  405ecb:	pop    esi
  405ecc:	mov    cl,0xf6
  405ece:	jecxz  0x405f31
  405ed0:	stos   BYTE PTR es:[edi],al
  405ed1:	inc    edi
  405ed2:	dec    DWORD PTR [esi-0x61]
  405ed5:	inc    ebp
  405ed6:	and    al,0x39
  405ed8:	xor    al,0x7d
  405eda:	in     al,dx
  405edb:	mov    eax,0x36f7739a
  405ee0:	xchg   edi,eax
  405ee1:	fist   DWORD PTR [edx]
  405ee3:	cmp    esi,ebp
  405ee5:	mov    al,0x68
  405ee7:	shr    DWORD PTR [edx-0x3369003e],1
  405eed:	xor    eax,DWORD PTR [ecx+0x39]
  405ef0:	add    DWORD PTR [ebx+esi*1-0x7224a688],ecx
  405ef7:	add    BYTE PTR [edx+0x0],cl
  405efa:	test   al,0x3
  405efc:	xchg   ecx,eax
  405efd:	jns    0x405f19
  405eff:	ret    
  405f00:	mul    bh
  405f02:	jns    0x405f38
  405f04:	js     0x405f06
  405f06:	dec    esi
  405f07:	div    BYTE PTR [edx]
  405f09:	outs   dx,DWORD PTR ds:[esi]
  405f0a:	mov    esp,0x3ed9d6fb
  405f0f:	jo     0x405ee7
  405f11:	fcomp  st(1)
  405f13:	add    ebx,esi
  405f15:	scas   al,BYTE PTR es:[edi]
  405f16:	rcr    DWORD PTR [edx+0xa],0xc1
  405f1a:	call   0xa87439fa
  405f1f:	add    esp,DWORD PTR [ecx]
  405f21:	dec    eax
  405f22:	fcmovb st,st(2)
  405f24:	scas   al,BYTE PTR es:[edi]
  405f25:	out    0x28,eax
  405f27:	xor    al,0xf8
  405f29:	call   DWORD PTR [eax-0x173e9549]
  405f2f:	fild   DWORD PTR [edx-0x71fc57cd]
  405f35:	cmc    
  405f36:	fdiv   QWORD PTR [eax+0xc]
  405f39:	clc    
  405f3a:	shr    BYTE PTR [ebx],1
  405f3c:	jg     0x405fad
  405f3e:	(bad)  
  405f40:	dec    edx
  405f41:	add    dh,al
  405f43:	scas   al,BYTE PTR es:[edi]
  405f44:	loope  0x405efe
  405f46:	adc    al,0xc5
  405f48:	out    0x0,ax
  405f4b:	cmp    al,bh
  405f4d:	call   DWORD PTR [eax+0x27]
  405f50:	or     eax,0x35dbe8c1
  405f55:	xor    al,0x28
  405f57:	add    al,0xd1
  405f59:	jae    0x405f35
  405f5b:	les    eax,FWORD PTR [eax]
  405f5d:	ds out 0xf6,eax
  405f60:	aaa    
  405f61:	js     0x405f63
  405f63:	xchg   esi,eax
  405f64:	stc    
  405f65:	inc    edx
  405f66:	outs   dx,DWORD PTR ds:[esi]
  405f67:	adc    al,0xfc
  405f69:	push   ds
  405f6a:	std    
  405f6b:	xchg   BYTE PTR [edi+0x1e],ch
  405f6e:	jge    0x405f94
  405f70:	jo     0x405fdb
  405f72:	outs   dx,DWORD PTR ds:[esi]
  405f73:	add    ah,bh
  405f75:	push   cs
  405f76:	outs   dx,BYTE PTR ds:[esi]
  405f77:	xor    eax,0xffc1240d
  405f7c:	push   eax
  405f7d:	retf   0x95
  405f80:	jmp    0xd3b60e78
  405f85:	ja     0x405f4c
  405f87:	imul   ecx
  405f89:	cmp    al,BYTE PTR [eax]
  405f8b:	add    BYTE PTR [esi],ch
  405f8d:	lock jb 0x405f8f
  405f90:	out    0x3a,al
  405f92:	add    BYTE PTR [edx-0x17],ch
  405f95:	lock outs dx,BYTE PTR ds:[esi]
  405f97:	imul   ebp,ecx,0xac8c6ee0
  405f9d:	inc    esi
  405f9e:	ror    BYTE PTR [esp+eiz*2+0x16ff7731],1
  405fa5:	test   DWORD PTR [ebp+0x75],ebp
  405fa8:	adc    DWORD PTR [esi],edx
  405faa:	cmc    
  405fab:	sti    
  405fac:	adc    DWORD PTR [esi+edx*4],ebx
  405faf:	add    cl,ch
  405fb1:	xchg   ebx,eax
  405fb2:	scas   al,BYTE PTR es:[edi]
  405fb3:	je     0x405fa0
  405fb5:	repz mov edi,0xc1251c67
  405fbb:	jmp    ebp
  405fbd:	cmp    edx,0xff008ee7
  405fc3:	outs   dx,BYTE PTR ds:[esi]
  405fc4:	jmp    DWORD PTR [edx+0xa]
  405fc7:	jge    0x405f4e
  405fc9:	aad    0xef
  405fcb:	outs   dx,BYTE PTR ds:[esi]
  405fcc:	call   FWORD PTR [ecx]
  405fce:	mov    esp,DWORD PTR [esi-0xc]
  405fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd2:	out    0x6e,eax
  405fd4:	mov    DWORD PTR [edx+ecx*8+0x76],ebp
  405fd8:	jmp    FWORD PTR [esi-0x610f4b29]
  405fde:	iret   
  405fdf:	outs   dx,BYTE PTR ds:[esi]
  405fe0:	call   DWORD PTR [esi*1-0x60680a9a]
  405fe7:	ins    DWORD PTR es:[edi],dx
  405fe8:	call   DWORD PTR [edx+ebp*4+0x75]
  405fec:	inc    DWORD PTR [eax]
  405fee:	mov    bh,0xc9
  405ff0:	loope  0x405fb5
  405ff2:	xchg   edi,eax
  405ff3:	fdivp  st(6),st
  405ff5:	inc    ebp
  405ff6:	mov    dl,cl
  405ff8:	xchg   esp,eax
  405ff9:	dec    DWORD PTR ds:0x7e2fe7de
  405fff:	add    DWORD PTR [eax],eax
  406001:	leave  
  406002:	and    ch,BYTE PTR [ecx-0x1]
  406005:	push   esp
  406006:	pop    ebx
  406007:	int    0x82
  406009:	les    esi,FWORD PTR [edi+eax*2-0x1]
  40600d:	imul   ecx,esi,0x680874de
  406013:	idiv   BYTE PTR [edi+0x44ec07ff]
  406019:	cld    
  40601a:	clc    
  40601b:	push   ecx
  40601c:	xor    al,BYTE PTR [ecx-0x30]
  40601f:	fidiv  WORD PTR [eax+ecx*1+0x48]
  406023:	mov    dh,0xfe
  406025:	inc    DWORD PTR [eax]
  406027:	inc    edi
  406028:	inc    edi
  406029:	jmp    DWORD PTR [edi-0x4b]
  40602c:	xor    al,BYTE PTR [ecx+0x0]
  40602f:	enter  0x3251,0x41
  406033:	mov    al,ds:0x795c34de
  406038:	inc    esp
  406039:	jmp    edi
  40603b:	inc    eax
  40603c:	ret    
  40603d:	(bad)  
  40603e:	dec    DWORD PTR [ebx+0x300f73c1]
  406044:	push   esp
  406045:	(bad)  
  406046:	jne    0x4060a0
  406048:	leave  
  406049:	xchg   esp,eax
  40604a:	cld    
  40604b:	ja     0x406028
  40604d:	out    0x85,eax
  40604f:	xchg   ebx,eax
  406050:	(bad)  
  406052:	push   0x60
  406054:	dec    ecx
  406055:	into   
  406056:	sub    BYTE PTR [ecx],ah
  406058:	add    al,0x68
  40605a:	arpl   WORD PTR [ebx+0x42],ax
  40605d:	(bad)  
  40605e:	(bad)  
  40605f:	pop    ebp
  406060:	cmp    eax,0xc9204128
  406065:	test   esi,eax
  406067:	cmp    DWORD PTR [esi+0x12f90b6d],edx
  40606d:	std    
  40606e:	dec    edi
  40606f:	mov    DWORD PTR [esi+0x122107f7],eax
  406075:	jo     0x406076
  406077:	push   cs
  406078:	jg     0x406043
  40607a:	ret    0xde06
  40607d:	fcos   
  40607f:	xchg   esi,eax
  406080:	xor    BYTE PTR fs:[ecx+0x39],al
  406084:	dec    edi
  406085:	shl    DWORD PTR [edx],cl
  406087:	js     0x4060e0
  406089:	fild   DWORD PTR [ecx]
  40608b:	add    BYTE PTR [ecx],bh
  40608d:	push   edi
  40608e:	sub    eax,0x7c
  406091:	sbb    eax,0x1742ff6d
  406096:	clc    
  406097:	push   cs
  406098:	imul   eax,DWORD PTR [edi-0x40ce8a94],0x25befbc1
  4060a2:	pop    esp
  4060a3:	xor    bh,BYTE PTR [edx+0xd]
  4060a6:	ins    DWORD PTR es:[edi],dx
  4060a7:	push   0x39
  4060a9:	jg     0x4060e7
  4060ab:	sub    al,bh
  4060ad:	push   esi
  4060ae:	(bad)  [edx+0x6a]
  4060b1:	cwde   
  4060b2:	add    ebp,DWORD PTR [eax+0x3b]
  4060b5:	push   edi
  4060b6:	add    eax,DWORD PTR [eax-0xba555f]
  4060bc:	xchg   BYTE PTR [ecx+0x43],ah
  4060bf:	je     0x4060ef
  4060c1:	daa    
  4060c2:	aam    0xfe
  4060c4:	in     al,dx
  4060c5:	outs   dx,BYTE PTR ds:[esi]
  4060c6:	pop    ebx
  4060c7:	sbb    DWORD PTR [ebp+0x55],ebp
  4060ca:	ins    BYTE PTR es:[edi],dx
  4060cb:	call   0xffacfb00
  4060d0:	shl    DWORD PTR [eax+0x6c],cl
  4060d3:	jne    0x406116
  4060d5:	dec    edi
  4060d6:	jmp    0xd9f5afd6
  4060db:	and    al,BYTE PTR [esi+0x33]
  4060de:	cld    
  4060df:	out    0xc9,eax
  4060e1:	jmp    DWORD PTR [esp+ebp*2+0x6cfcd736]
  4060e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060e9:	clc    
  4060ea:	and    ch,0x22
  4060ed:	ins    BYTE PTR es:[edi],dx
  4060ee:	mov    gs,WORD PTR [eax+eax*1-0x5c]
  4060f2:	ins    BYTE PTR es:[edi],dx
  4060f3:	xchg   dh,dh
  4060f5:	ds pop eax
  4060f7:	pop    ds
  4060f8:	inc    esp
  4060f9:	push   cs
  4060fa:	ins    BYTE PTR es:[edi],dx
  4060fb:	mov    al,ds:0x14003d41
  406100:	jns    0x40610f
  406102:	sub    BYTE PTR ds:0xd2d38f6f,0x3
  406109:	arpl   WORD PTR [ebx],ax
  40610b:	push   esi
  40610c:	idiv   BYTE PTR [esi]
  40610e:	pop    eax
  40610f:	jmp    0x70ac3f57
  406114:	(bad)  
  406115:	shl    BYTE PTR [edi-0xc],cl
  406118:	not    BYTE PTR [esi]
  40611a:	shr    eax,0x78
  40611d:	add    al,0xe9
  40611f:	add    bl,al
  406121:	mov    esi,0x2d03e5eb
  406126:	out    dx,eax
  406127:	nop
  406128:	leave  
  406129:	push   0xffffffc1
  40612b:	call   0x74060004
  406130:	add    edi,DWORD PTR [ecx]
  406132:	imul   DWORD PTR [eax]
  406134:	div    DWORD PTR [edi]
  406136:	rcl    BYTE PTR [eax],cl
  406138:	fild   DWORD PTR [edx+0x1ed2f66b]
  40613e:	add    cl,ch
  406140:	pop    esp
  406141:	mov    edi,0xf8305ed8
  406146:	(bad)  
  406147:	cmp    BYTE PTR [ebx-0x1c],ch
  40614a:	test   eax,0xce6b5fce
  406150:	pop    esp
  406151:	mov    bh,0x3e
  406153:	(bad)  
  406154:	imul   eax,DWORD PTR [eax],0xffffffe1
  406157:	xlat   BYTE PTR ds:[ebx]
  406158:	hlt    
  406159:	les    ecx,FWORD PTR [esi-0x2e]
  40615c:	inc    eax
  40615e:	sub    dl,BYTE PTR [ebp-0x54c01700]
  406164:	je     0x40616c
  406166:	or     esp,DWORD PTR [ebx+0x3a]
  406169:	lods   eax,DWORD PTR ds:[esi]
  40616a:	mov    ds:0x3d01506b,al
  40616f:	add    bh,ch
  406171:	dec    edi
  406172:	std    
  406173:	hlt    
  406174:	xor    ebp,DWORD PTR [eax]
  406176:	cmp    eax,0x12f4fed0
  40617b:	arpl   WORD PTR [esi+ecx*4],bp
  40617e:	xchg   edx,eax
  40617f:	imul   ebp,eax,0x11
  406182:	ja     0x4061ef
  406184:	call   DWORD PTR [edx+0x3c]
  406187:	ret    0x1f7f
  40618a:	xor    eax,0x5eaff9f5
  40618f:	das    
  406190:	rcl    BYTE PTR [eax+0x46ff6b52],0x4f
  406197:	call   0xbcff:0x7bc9e638
  40619e:	pop    esi
  40619f:	imul   esi,DWORD PTR [ebp-0x1f],0x62
  4061a3:	mov    ah,0xbf
  4061a5:	es and cl,bl
  4061a8:	pop    ebp
  4061a9:	xor    bh,dh
  4061ab:	add    eax,DWORD PTR [eax]
  4061ad:	mov    esp,0xe9685c27
  4061b2:	cmp    bl,BYTE PTR [ebx-0x42]
  4061b5:	xchg   ecx,eax
  4061b6:	ret    0x4133
  4061b9:	jmp    0xc3584be
  4061be:	test   BYTE PTR [ecx+0x1b06e802],0x6b
  4061c5:	call   DWORD PTR [ecx+0x3c]
  4061c8:	add    bh,ch
  4061ca:	lahf   
  4061cb:	xchg   edx,eax
  4061cc:	mov    esi,DWORD PTR [eax+ebp*1]
  4061cf:	cmp    eax,0xd3dd756b
  4061d4:	hlt    
  4061d5:	pop    es
  4061d6:	add    BYTE PTR [eax-0x2c],ch
  4061d9:	in     eax,0xff
  4061db:	(bad)  
  4061dc:	sub    eax,edx
  4061de:	or     BYTE PTR [eax+0x4f],dl
  4061e1:	mov    ch,ah
  4061e3:	(bad)  
  4061e4:	outs   dx,DWORD PTR ds:[esi]
  4061e5:	or     ebp,eax
  4061e7:	arpl   WORD PTR [esi-0x41d40002],di
  4061ed:	jae    0x406209
  4061ef:	cmp    BYTE PTR [edx+0x4e104134],al
  4061f5:	out    0xd8,eax
  4061f7:	in     eax,0xd6
  4061f9:	(bad)  
  4061fa:	push   eax
  4061fb:	xor    ch,dl
  4061fd:	je     0x406207
  4061ff:	mov    eax,0x8fffff8a
  406204:	(bad)
  406207:	pop    edi
  406208:	(bad)  
  406209:	enter  0xe8c2,0xfd
  40620d:	push   esp
  40620e:	mov    edi,DWORD PTR [edx+eax*4-0x3c]
  406212:	cld    
  406213:	cli    
  406214:	std    
  406215:	imul   ecx,DWORD PTR [eax],0xe807707f
  40621b:	js     0x4061b4
  40621d:	(bad)  
  40621e:	inc    DWORD PTR [eax]
  406220:	pop    ecx
  406221:	inc    eax
  406222:	sti    
  406223:	push   0xffffffd0
  406225:	inc    ebp
  406226:	je     0x40625d
  406228:	loope  0x406227
  40622a:	addr16 mov ds:0x4484,al
  40622e:	(bad)  
  40622f:	inc    BYTE PTR [ebp-0x6fbed7bf]
  406235:	lds    edi,FWORD PTR [ebp+0xad63fc4]
  40623b:	rol    BYTE PTR [ecx+edi*8],0x4f
  40623f:	push   0xbeeefd91
  406244:	mov    al,ds:0x880874d6
  406249:	popa   
  40624a:	loop   0x40624b
  40624c:	(bad)  
  40624d:	int3   
  40624e:	(bad)  
  40624f:	sar    DWORD PTR [ecx],0x52
  406252:	imul   ebp,DWORD PTR [edx+0x39],0xf834eebf
  406259:	push   esi
  40625a:	fcmovnb st,st(6)
  40625c:	add    eax,0xcff0418
  406261:	adc    ebx,DWORD PTR [ebx]
  406263:	inc    ecx
  406264:	cmp    DWORD PTR [edi],edi
  406266:	jns    0x40622c
  406268:	mov    ss:0x73a5bffd,al
  40626e:	shl    DWORD PTR [edi+0x38],cl
  406271:	push   edi
  406272:	pop    eax
  406273:	mov    esi,0x7ef7a89
  406278:	and    DWORD PTR [ecx],esi
  40627a:	dec    DWORD PTR gs:[esi]
  40627d:	(bad)
  406281:	repnz (bad) 
  406284:	add    BYTE PTR [esi+0x39412ee4],dl
  40628a:	dec    edi
  40628b:	add    dh,BYTE PTR ds:0x35685778
  406291:	test   DWORD PTR [eax],eax
  406293:	ret    
  406294:	call   esi
  406296:	ss aas 
  406298:	call   esi
  40629a:	ins    DWORD PTR es:[edi],dx
  40629b:	inc    ebx
  40629c:	je     0x4062dc
  40629e:	xchg   ebx,edx
  4062a0:	dec    BYTE PTR [edi+ebx*2+0x5b]
  4062a4:	or     bh,BYTE PTR [esi+0x6ce86919]
  4062aa:	sbb    BYTE PTR [ecx-0x1],ch
  4062ad:	and    edx,DWORD PTR [edi-0x25]
  4062b0:	test   BYTE PTR [eax+ebx*4+0x3],ch
  4062b4:	push   0xffc25450
  4062b9:	xchg   edi,eax
  4062ba:	stos   DWORD PTR es:[edi],eax
  4062bb:	(bad)  
  4062bc:	sub    al,bh
  4062be:	push   esi
  4062bf:	pop    ebx
  4062c0:	ss jge 0x406334
  4062c3:	push   0xf7f2790b
  4062c8:	dec    edi
  4062c9:	or     DWORD PTR [eax],eax
  4062cb:	out    0xee,al
  4062cd:	ss pop eax
  4062cf:	leave  
  4062d0:	imul   esp,DWORD PTR [esi+0x68],0x6879fcc1
  4062d7:	into   
  4062d8:	fst    QWORD PTR [esi-0x20]
  4062db:	jbe    0x40630b
  4062dd:	clc    
  4062de:	call   DWORD PTR [eax-0x1e]
  4062e1:	or     eax,0x468e8bf
  4062e6:	int3   
  4062e7:	inc    edx
  4062e9:	add    BYTE PTR [esi],dh
  4062eb:	pusha  
  4062ec:	cmc    
  4062ed:	aas    
  4062ee:	cs push 0xf7ad43f2
  4062f4:	cmp    ah,dl
  4062f6:	pop    ds
  4062f7:	out    dx,al
  4062f8:	loopne 0x406355
  4062fa:	iret   
  4062fb:	data16 xchg BYTE PTR [eax+0x21],ch
  4062ff:	bound  ebp,QWORD PTR [ecx-0x2b24f998]
  406305:	push   0x4b80f884
  40630a:	mul    DWORD PTR [edi+0x66]
  40630d:	fst    QWORD PTR [eax+0x67]
  406310:	aam    0xfb
  406312:	fidiv  WORD PTR [esi]
  406314:	push   edi
  406315:	push   0x6909dade
  40631a:	dec    esp
  40631b:	clc    
  40631c:	push   eax
  40631d:	aas    
  40631e:	iret   
  40631f:	addr16 ds push 0xee36644c
  406326:	ss pop eax
  406328:	imul   DWORD PTR [ecx+0x453067b6]
  40632e:	xor    eax,0x957cb400
  406333:	addr16 pushf 
  406335:	not    DWORD PTR [esi-0x6997da98]
  40633b:	sti    
  40633c:	sub    bh,ch
  40633e:	cld    
  40633f:	xlat   BYTE PTR ds:[ebx]
  406340:	pop    ebp
  406341:	cs clc 
  406343:	(bad)  
  406344:	call   FWORD PTR [eax-0x113b8b1e]
  40634a:	fmulp  st(7),st
  40634c:	dec    edi
  40634d:	cmp    DWORD PTR [eax],eax
  40634f:	lea    esp,[edi-0x1]
  406352:	into   
  406353:	lahf   
  406354:	fcomp  DWORD PTR [ecx+0x4f67741c]
  40635a:	into   
  40635b:	dec    eax
  40635c:	jmp    edi
  40635e:	sbb    bl,al
  406360:	jmp    WORD PTR [ecx]
  406363:	add    BYTE PTR gs:[eax],al
  406366:	(bad)  
  406367:	xchg   edi,eax
  406368:	fsubr  DWORD PTR [eax+0x4f66fdf4]
  40636e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636f:	sub    bh,bh
  406371:	out    0xde,eax
  406373:	cdq    
  406374:	push   DWORD PTR [bx+di]
  406377:	std    
  406378:	add    BYTE PTR [eax],al
  40637a:	jle    0x40635b
  40637c:	xlat   BYTE PTR ds:[ebx]
  40637d:	mov    dh,0xbc
  40637f:	cmc    
  406380:	dec    di
  406382:	jle    0x40638c
  406384:	jmp    edi
  406386:	ret    0x6799
  406389:	inc    DWORD PTR [ecx+0x66ffa706]
  40638f:	sub    al,0x42
  406391:	or     cl,ch
  406393:	or     DWORD PTR [edx-0x14],edi
  406396:	push   0x79
  406398:	fs push 0xffffffe9
  40639b:	lock idiv esi
  40639e:	mov    esp,0x7c795ed2
  4063a3:	pop    esi
  4063a4:	mov    DWORD PTR [si-0x25aa],ebp
  4063a9:	sbb    DWORD PTR [esi],ebp
  4063ab:	test   al,0xfe
  4063ad:	out    0x69,eax
  4063af:	push   ss
  4063b0:	call   DWORD PTR [bp+di+0x5b00]
  4063b5:	addr16 jne 0x406399
  4063b8:	add    ch,dh
  4063ba:	dec    BYTE PTR [esi]
  4063bc:	push   ds
  4063bd:	ficomp DWORD PTR [ebx]
  4063bf:	add    BYTE PTR [edi],dh
  4063c1:	jno    0x4063ca
  4063c3:	call   0x3f417c
  4063c8:	xchg   DWORD PTR [edi-0x5],ebp
  4063cb:	(bad)  
  4063cc:	in     eax,dx
  4063cd:	push   0xffffffe7
  4063cf:	xchg   ebx,eax
  4063d0:	xchg   ebp,eax
  4063d1:	(bad)  
  4063d3:	leave  
  4063d4:	xchg   edx,eax
  4063d5:	call   WORD PTR [ebx+ebx*8-0x32]
  4063da:	imul   eax,DWORD PTR [eax],0x4134eff8
  4063e0:	pusha  
  4063e1:	dec    edx
  4063e2:	loope  0x406419
  4063e4:	adc    esp,edi
  4063e6:	(bad)  
  4063e7:	xor    eax,0x410524
  4063ec:	clc    
  4063ed:	outs   dx,BYTE PTR ds:[esi]
  4063ee:	ret    0xd7ff
  4063f1:	push   0xffffffbf
  4063f3:	je     0x406422
  4063f5:	push   edx
  4063f6:	(bad)  
  4063f7:	jne    0x406419
  4063f9:	fbstp  TBYTE PTR [esp+ecx*1+0x50]
  4063fd:	fnsave [eax+ecx*1-0x58]
  406401:	scas   eax,DWORD PTR es:[edi]
  406402:	in     al,0xff
  406404:	xchg   ecx,ecx
  406406:	fnstsw WORD PTR [edi+0x69de87]
  40640c:	cmp    al,dh
  40640e:	xor    al,0x41
  406410:	loopne 0x40645b
  406412:	loope  0x406449
  406414:	xchg   ecx,eax
  406415:	add    DWORD PTR [eax+0x2],ebp
  406418:	add    al,dl
  40641a:	add    DWORD PTR [eax-0x1407f18],eax
  406420:	dec    ebx
  406422:	shl    DWORD PTR [ebx+0x15],0xa0
  406426:	fidiv  WORD PTR [eax+edx*1+0x7]
  40642a:	jo     0x406437
  40642c:	push   eax
  40642d:	addr16 jo 0x406437
  406430:	call   0x3f2958
  406435:	dec    eax
  406436:	mov    ?,WORD PTR [edi+0x660e39ff]
  40643c:	jne    0x406467
  40643e:	imul   bh
  406440:	or     esp,DWORD PTR [ecx]
  406442:	pop    ds
  406443:	xor    BYTE PTR [ecx+0x39],al
  406446:	out    dx,ax
  406448:	pop    es
  406449:	xchg   ecx,eax
  40644a:	and    eax,0x2076ff5f
  40644f:	inc    ecx
  406450:	or     al,0x39
  406452:	and    al,0x79
  406454:	in     al,dx
  406455:	mov    edx,0x396a689b
  40645a:	sar    ecx,0xfe
  40645d:	int3   
  40645e:	pop    esi
  40645f:	pop    ebx
  406460:	mov    esi,0x89653e8d
  406465:	cld    
  406466:	mov    ds:0x3e3effdc,al
  40646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646c:	push   0xffc26bfa
  406471:	das    
  406472:	add    al,0xfc
  406474:	out    0x99,eax
  406476:	xchg   BYTE PTR [ebp-0x1],ah
  406479:	xchg   ecx,eax
  40647a:	pop    eax
  40647b:	add    ebp,edi
  40647d:	add    bh,dl
  40647f:	(bad)  
  406480:	xor    eax,0x64577835
  406485:	jne    0x4064b8
  406487:	(bad)  
  406488:	mov    dh,0xfe
  40648a:	(bad)  
  40648b:	in     eax,dx
  40648c:	fs jne 0x406484
  40648f:	aad    0xee
  406491:	pop    es
  406492:	loope  0x4064bc
  406494:	test   al,0xff
  406496:	out    0x2f,al
  406498:	inc    edx
  406499:	add    al,0x39
  40649b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649c:	js     0x40648a
  40649e:	mov    eax,0xcef74c1a
  4064a3:	mov    ebp,0x86c54576
  4064a8:	fs jne 0x4064d8
  4064ab:	cs das 
  4064ad:	pop    esp
  4064ae:	pusha  
  4064af:	cwde   
  4064b0:	add    ebp,eax
  4064b2:	(bad)  
  4064b3:	push   DWORD PTR [edi+0x4]
  4064b6:	cmp    ecx,edi
  4064b8:	sub    ch,dh
  4064ba:	mov    ch,0x47
  4064bc:	call   0xa47d9dc4
  4064c1:	imul   edi,DWORD PTR [ecx],0x0
  4064c4:	jmp    0xf4fae2cc
  4064c9:	fs ss add cl,ch
  4064cd:	fnstenv [esi-0x2a]
  4064d0:	call   0xe916d3ae
  4064d5:	jbe    0x4064d3
  4064d7:	imul   edi,DWORD PTR [ecx],0x77
  4064da:	mov    ah,0x6b
  4064dc:	fisub  WORD PTR [esi+edx*2-0x31]
  4064e0:	int    0xee
  4064e2:	add    BYTE PTR [esi+0x64],al
  4064e5:	cmp    al,0x68
  4064e7:	push   ecx
  4064e8:	fcom   QWORD PTR [edi+0x3]
  4064eb:	cmp    ecx,edi
  4064ed:	test   al,0xef
  4064ef:	cmp    eax,0x39025259
  4064f4:	add    BYTE PTR [ecx],dl
  4064f6:	aaa    
  4064f7:	push   ecx
  4064f8:	shr    eax,0x64
  4064fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064fc:	hlt    
  4064fd:	cmp    BYTE PTR [ecx-0x5],0x63
  406501:	mov    ss,ebx
  406503:	ret    
  406504:	push   eax
  406505:	je     0x406585
  406507:	or     eax,0x69647e6c
  40650c:	into   
  40650d:	sub    cl,0xf8
  406510:	arpl   WORD PTR [esi+0x7a],bp
  406513:	mov    ah,0x70
  406515:	pop    esi
  406516:	fs out 0x58,al
  406519:	cmp    DWORD PTR [ebp+0x3c363de],esp
  40651f:	popa   
  406520:	mov    bl,0x16
  406522:	ret    
  406523:	into   
  406524:	bound  edi,QWORD PTR [ebx+esi*2-0x32]
  406528:	arpl   WORD PTR [esi],di
  40652a:	fs add al,0xc4
  40652d:	(bad)  
  40652e:	(bad)  
  40652f:	jp     0x406594
  406531:	out    0x19,eax
  406533:	sti    
  406534:	(bad)  
  406535:	push   DWORD PTR [eax+0x27]
  406538:	pop    esp
  406539:	neg    DWORD PTR [esi]
  40653b:	adc    eax,0x9b80ffd6
  406540:	sub    eax,0xad15e941
  406545:	lock inc BYTE PTR [eax]
  406548:	sbb    ah,BYTE PTR [ebx-0x1]
  40654b:	mov    ah,0x76
  40654d:	sbb    BYTE PTR [ecx-0x17],al
  406550:	adc    ch,BYTE PTR [esi+0x78daeec1]
  406556:	test   ebp,edx
  406558:	add    ah,BYTE PTR [ebx-0x1]
  40655b:	push   ebx
  40655c:	xor    eax,0x7c1f57d8
  406561:	arpl   si,di
  406563:	xchg   esp,eax
  406564:	in     eax,0x6a
  406566:	inc    esi
  406568:	fisubr DWORD PTR [esp+ebx*2]
  40656b:	adc    BYTE PTR [ebx+eiz*2-0x19],dh
  40656f:	pop    ebp
  406570:	jl     0x4065d5
  406572:	jmp    DWORD PTR [eax-0x40]
  406575:	push   edi
  406576:	mul    DWORD PTR [esi+0x10ffd69a]
  40657c:	cvtps2pi mm0,QWORD PTR [ecx-0x17]
  406580:	fwait
  406581:	lods   eax,DWORD PTR ds:[esi]
  406582:	lock xchg esi,eax
  406584:	call   0x4117:0xc6bcff63
  40658b:	jmp    0x77015022
  406590:	pop    edx
  406591:	jns    0x406518
  406593:	mov    DWORD PTR [edx-0x4f8b009d],edx
  406599:	inc    edi
  40659a:	neg    DWORD PTR [esi+0x5a]
  40659d:	shl    BYTE PTR [edi-0x23],1
  4065a0:	xor    cl,al
  4065a2:	dec    DWORD PTR [ebp-0x50]
  4065a5:	outs   dx,DWORD PTR ds:[esi]
  4065a6:	test   DWORD PTR [eax],0x35fedf7f
  4065ac:	add    BYTE PTR [ebx+edx*1-0x5507ffbf],bl
  4065b3:	sar    bh,0x5f
  4065b6:	repz mov edi,0xbd7b3974
  4065bc:	fadd   DWORD PTR [edi-0x21]
  4065bf:	inc    BYTE PTR [esi*4-0x10cf0192]
  4065c6:	js     0x4065a4
  4065c8:	idiv   DWORD PTR [edi]
  4065ca:	fisttp WORD PTR [edi-0x18]
  4065cd:	jo     0x40656f
  4065cf:	(bad)  
  4065d0:	(bad)  
  4065d1:	cmp    ebp,DWORD PTR [eax+0xa]
  4065d4:	shl    ah,0xf8
  4065d7:	dec    edi
  4065d8:	call   0x400641
  4065dd:	xchg   edi,eax
  4065de:	ja     0x4065bc
  4065e0:	imul   DWORD PTR [edi-0x23]
  4065e3:	adc    al,0x0
  4065e5:	pusha  
  4065e6:	inc    BYTE PTR [edx-0x13a8b43]
  4065ec:	call   DWORD PTR [eax+0x4a]
  4065ef:	sub    DWORD PTR fs:[ebp-0x2000092f],0xfffffffd
  4065f7:	jae    0x406655
  4065f9:	xchg   ebx,eax
  4065fa:	mov    al,ds:0xdebff7e8
  4065ff:	push   DWORD PTR [ebx+0x53]
  406602:	push   esp
  406603:	(bad)  
  406604:	dec    DWORD PTR [edi+0x875ff9f]
  40660a:	(bad)  
  40660b:	push   0xffffffba
  40660d:	jg     0x4065ed
  40660f:	(bad)  
  406610:	mov    ch,0x0
  406612:	mov    esp,0x5ffffec6
  406617:	dec    eax
  406618:	pop    es
  406619:	call   0x3fe9bd
  40661e:	jg     0x4065a8
  406620:	call   0x620aa01c
  406625:	inc    DWORD PTR [edi+ebx*2+0x6b]
  406629:	mov    cl,0x83
  40662b:	mov    edx,0xbb84ff61
  406630:	pop    ecx
  406631:	push   DWORD PTR [esi-0x5ef827d6]
  406637:	jbe    0x4065d6
  406639:	jmp    DWORD PTR [esi-0x591f67e6]
  40663f:	add    ah,BYTE PTR [edx-0x1]
  406642:	or     al,0x5f
  406644:	imul   edx,DWORD PTR [ebp-0x9e0d2d],0xffffffcc
  40664b:	sbb    ebx,DWORD PTR [edx-0x1]
  40664e:	jle    0x4066b2
  406650:	xlat   BYTE PTR ds:[ebx]
  406651:	pop    es
  406652:	popa   
  406653:	xor    al,0x9d
  406655:	jmp    FWORD PTR [esi+0x52]
  406658:	xchg   edi,eax
  406659:	in     al,0x6e
  40665b:	pop    edx
  40665c:	popa   
  40665d:	call   0xffa1eb2a
  406662:	push   esi
  406663:	test   BYTE PTR [eax-0x9],dh
  406666:	dec    esi
  406667:	xor    ch,BYTE PTR [esi+eax*4-0x7c]
  40666b:	cmp    ah,BYTE PTR [ecx-0x1]
  40666e:	test   BYTE PTR [edi+0x59],cl
  406671:	push   DWORD PTR [esi]
  406673:	aas    
  406674:	fnstsw WORD PTR [eax+eax*1-0x4a9e6dd2]
  40667b:	sbb    DWORD PTR [edx+0x711ff61],eax
  406681:	lahf   
  406682:	call   DWORD PTR [esi]
  406684:	mov    dl,BYTE PTR [edi+0x617206f0]
  40668a:	call   0xffa1232b
  40668f:	(bad)  
  406690:	sbb    ebx,DWORD PTR [ecx+ebp*8+0x2e]
  406694:	jmp    0x6c2f65f9
  406699:	pop    edi
  40669a:	call   0x4b66635
  40669f:	cmp    DWORD PTR [edi],esi
  4066a1:	sub    ecx,DWORD PTR [ecx+edi*1]
  4066a4:	retf   
  4066a5:	popa   
  4066a6:	jo     0x406662
  4066a8:	cmp    edx,DWORD PTR [ecx-0x12]
  4066ab:	(bad)  
  4066ac:	(bad)  
  4066ad:	icebp  
  4066ae:	pusha  
  4066af:	inc    esp
  4066b0:	clc    
  4066b1:	push   eax
  4066b2:	f2xm1  
  4066b4:	pusha  
  4066b5:	ss mov esi,esp
  4066b8:	arpl   WORD PTR [edi+eax*8-0x52],bx
  4066bc:	iret   
  4066bd:	nop
  4066be:	mul    DWORD PTR [edi+edi*4-0x18]
  4066c2:	jmp    0x40665a
  4066c4:	sub    ch,BYTE PTR [eax-0x52d571fd]
  4066ca:	sub    bh,al
  4066cc:	call   DWORD PTR [eax]
  4066ce:	sbb    eax,0xcfe6079
  4066d3:	jns    0x4066c0
  4066d5:	fnsave [ebx+0x70e8fed6]
  4066db:	add    BYTE PTR [edi+0x95c5c60],ah
  4066e1:	popa   
  4066e2:	push   esp
  4066e3:	or     al,0x61
  4066e5:	popf   
  4066e6:	mov    bh,0x60
  4066e8:	dec    esi
  4066e9:	push   edi
  4066ea:	loope  0x40668a
  4066ec:	inc    esi
  4066ed:	pusha  
  4066ee:	je     0x4066b6
  4066f0:	inc    esi
  4066f1:	iret   
  4066f2:	push   eax
  4066f3:	and    eax,0xebe8c16f
  4066f8:	cs push ss
  4066fa:	sub    BYTE PTR [esi+eiz*1],al
  4066fd:	push   ss
  4066fe:	inc    ebp
  4066ff:	sub    edi,DWORD PTR [eax+0x0]
  406702:	xchg   ecx,eax
  406703:	or     cl,bh
  406705:	pop    edi
  406706:	xchg   esi,eax
  406707:	or     al,0xf9
  406709:	aam    0xf5
  40670b:	mov    bl,0x9e
  40670d:	add    ch,cl
  40670f:	jo     0x4066d0
  406711:	pop    edi
  406712:	hlt    
  406713:	pop    ebx
  406714:	mov    DWORD PTR [edi+0x0],ebx
  406717:	cld    
  406718:	inc    edx
  406719:	push   0x5f598f6e
  40671e:	call   0xffa02560
  406723:	shr    DWORD PTR ds:0x59e94116,1
  406729:	aad    0x7
  40672b:	inc    ecx
  40672c:	loope  0x40678a
  40672e:	inc    DWORD PTR [esi+0x59]
  406731:	aad    0xfb
  406733:	pop    DWORD PTR ds:[edi]
  406736:	call   0xffa0342e
  40673b:	and    ah,bh
  40673d:	add    eax,DWORD PTR [eax]
  40673f:	mov    esp,0x816cad00
  406744:	and    eax,0x16ff5756
  406749:	mov    edi,0x19b9fbc5
  40674e:	aad    0xb
  406750:	push   es
  406751:	daa    
  406752:	mov    esp,0x683aa828
  406757:	std    
  406758:	cmp    al,BYTE PTR [bx+si]
  40675b:	or     ebp,DWORD PTR [ecx]
  40675d:	dec    ecx
  40675e:	test   ecx,eax
  406760:	call   0x2507679f
  406765:	cmc    
  406766:	(bad)  
  406767:	(bad)  
  406768:	call   0xd585aea7
  40676d:	out    0x6,al
  40676f:	add    cl,ch
  406771:	push   eax
  406772:	pop    edi
  406773:	imul   ebp,ecx,0xe9695f20
  406779:	leave  
  40677a:	(bad)  
  40677b:	repz sbb eax,ecx
  40677e:	test   ah,dh
  406780:	sahf   
  406781:	jle    0x4067e2
  406783:	push   eax
  406784:	sahf   
  406785:	lock push esi
  406787:	call   FWORD PTR [ecx+ebx*4]
  40678a:	push   0x3d5fcf
  40678f:	or     eax,DWORD PTR [eax]
  406791:	shl    BYTE PTR [edi],1
  406793:	add    al,0xe9
  406795:	pop    esp
  406796:	add    eax,0xb1380000
  40679b:	daa    
  40679c:	inc    ecx
  40679d:	sar    BYTE PTR [ebp-0x4d77f38c],1
  4067a3:	mov    esi,0x947700ff
  4067a8:	mov    dl,al
  4067aa:	push   ebp
  4067ab:	mov    esp,esi
  4067ad:	div    DWORD PTR [edi-0x41]
  4067b0:	dec    edi
  4067b1:	push   edx
  4067b2:	push   0x77ffbee2
  4067b7:	lea    eax,[ebp-0x1409010]
  4067bd:	call   0x3fe66a
  4067c2:	retf   0x6802
  4067c5:	nop
  4067c6:	outs   dx,BYTE PTR ds:[esi]
  4067c7:	inc    ebx
  4067c8:	(bad)  
  4067c9:	(bad)  
  4067ca:	in     eax,dx
  4067cb:	mov    bl,0xf6
  4067cd:	push   DWORD PTR [edi]
  4067cf:	mov    edi,0x43695c34
  4067d4:	jmp    edi
  4067d6:	js     0x406855
  4067d8:	(bad)  
  4067d9:	(bad)  
  4067da:	(bad)  [eax-0x42a8081c]
  4067e0:	imul   eax,DWORD PTR [eax],0x41353d08
  4067e6:	pusha  
  4067e7:	mov    ebp,0xbd6ff0b4
  4067ec:	(bad)  
  4067ed:	jmp    FWORD PTR ds:0x50412840
  4067f3:	jmp    0x8588:0xbef7bf19
  4067fa:	hlt    
  4067fb:	mov    dh,0xfe
  4067fd:	(bad)  
  4067fe:	jp     0x406804
  406800:	push   0xff44fe82
  406805:	(bad)  
  406806:	ins    DWORD PTR es:[edi],dx
  406807:	mov    cl,0xf6
  406809:	inc    DWORD PTR [eax]
  40680b:	cmp    DWORD PTR [esi+0x5e],esi
  40680e:	xor    eax,0xffc44065
  406813:	push   ss
  406814:	test   BYTE PTR [ebp-0x782f0901],bl
  40681a:	loopne 0x406802
  40681c:	(bad)  
  40681d:	pop    ebp
  40681e:	push   0x39
  406820:	inc    DWORD PTR [esi+0x5e677836]
  406826:	mov    ch,0xc9
  406828:	mov    dh,0x5d
  40682a:	dec    esi
  40682c:	cld    
  40682d:	mov    edi,0x6b677828
  406832:	fidivr WORD PTR [edi-0x3a]
  406835:	pop    ebp
  406836:	mov    DWORD PTR [edi+ebp*4+0x41aeff55],edi
  40683d:	add    ebp,DWORD PTR [eax-0x40]
  406840:	push   ebp
  406841:	(bad)  
  406842:	call   FWORD PTR [edi-0x6908ad44]
  406848:	(bad)  
  406849:	pop    ebp
  40684a:	xor    eax,0xffc43fed
  40684f:	sahf   
  406850:	daa    
  406851:	popf   
  406852:	(bad)  
  406853:	jle    0x406825
  406855:	xchg   esp,ebx
  406857:	outs   dx,BYTE PTR ds:[esi]
  406858:	pop    esi
  406859:	pop    ebp
  40685a:	sub    DWORD PTR [ebx+ecx*1+0x6766ff56],0xffffffd7
  406862:	fs mov edx,0x56f770a4
  406868:	ds add al,0x74
  40686b:	in     eax,dx
  40686c:	jmp    0x4e41510f
  406871:	dec    esi
  406872:	pop    ebp
  406873:	add    ch,al
  406875:	stc    
  406876:	jmp    0x406877
  406878:	ss dec esi
  40687a:	sahf   
  40687b:	jmp    DWORD PTR [edi+ebx*2-0x521efc95]
  406882:	pop    ebp
  406883:	jmp    esp
  406885:	call   DWORD PTR [ebp+edx*2-0x2861a2ea]
  40688c:	ss push 0x5d069c3e
  406892:	mov    ss,WORD PTR [edi+0x5d865511]
  406898:	not    dl
  40689a:	lock imul eax,DWORD PTR [eax-0x19a28968],0xffffff92
  4068a2:	test   DWORD PTR [ebp-0x22],edx
  4068a5:	pop    esp
  4068a6:	data16 xlat BYTE PTR ds:[ebx]
  4068a8:	ds push 0x5cce9c22
  4068ae:	push   esi
  4068af:	xchg   edi,eax
  4068b0:	fst    DWORD PTR [esi+ecx*2+0x5d]
  4068b4:	mov    esi,0x646bf0d2
  4068b9:	cwde   
  4068ba:	ds pop ebp
  4068bc:	scas   al,BYTE PTR es:[edi]
  4068bd:	xchg   edx,eax
  4068be:	adc    eax,0x2e5ca655
  4068c3:	xlat   BYTE PTR ds:[ebx]
  4068c4:	ss push 0x5c969c06
  4068ca:	push   ds
  4068cb:	xchg   edi,eax
  4068cc:	xchg   ebp,eax
  4068cd:	push   esp
  4068ce:	push   ss
  4068cf:	pop    ebp
  4068d0:	xchg   ecx,eax
  4068d1:	es push edx
  4068d3:	pop    ebp
  4068d4:	add    BYTE PTR [esi+0x5c],bh
  4068d7:	cmp    al,0x70
  4068d9:	outs   dx,BYTE PTR ds:[esi]
  4068da:	pop    esp
  4068db:	(bad)  
  4068dc:	imul   ecx,DWORD PTR [edi-0x67],0xfffffff6
  4068e0:	pop    esp
  4068e1:	xchg   dx,ax
  4068e3:	add    DWORD PTR [ebp+0x5e],edx
  4068e6:	pop    esp
  4068e7:	shl    eax,1
  4068e9:	xchg   ebx,eax
  4068ea:	pop    esp
  4068eb:	ficomp WORD PTR [esp+eax*4+0x5f]
  4068ef:	ficomp WORD PTR [esi+eax*2+0x67]
  4068f3:	loope  0x40688d
  4068f5:	ds pop esp
  4068f7:	(bad)  
  4068f8:	xchg   esi,eax
  4068f9:	adc    eax,0x215cbe54
  4068fe:	pop    esi
  4068ff:	add    BYTE PTR [ebx-0x7b],dh
  406902:	pop    ebx
  406903:	push   DWORD PTR [edx+ecx*4+0x53]
  406907:	jmp    DWORD PTR [esi-0x6ef82a8b]
  40690d:	and    eax,0x6596ff5a
  406912:	xchg   ebp,eax
  406913:	lock xchg esi,eax
  406915:	pop    ebp
  406916:	pop    ebx
  406917:	call   0xff9c39a9
  40691c:	jle    0x406915
  40691e:	push   ebx
  40691f:	jmp    0xff9bf04b
  406924:	outs   dx,BYTE PTR ds:[esi]
  406925:	pop    es
  406926:	pop    eax
  406927:	call   0x412f43
  40692c:	xor    BYTE PTR [eax+0x8],bh
  40692f:	add    BYTE PTR [ecx+esi*4+0x5e25836c],bh
  406936:	out    0xff,al
  406938:	rol    BYTE PTR [eax],cl
  40693a:	inc    esi
  40693b:	pop    ebx
  40693c:	jne    0x40692f
  40693e:	and    dl,BYTE PTR [edx-0x49]
  406941:	ss add eax,0x922d4589
  406947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406948:	ss test al,0x3a
  40694b:	pop    ebx
  40694c:	jne    0x40693f
  40694e:	and    dl,BYTE PTR [edx-0x3]
  406951:	push   ss
  406952:	in     eax,0x5a
  406954:	jne    0x406963
  406956:	fst    st(4)
  406958:	pop    es
  406959:	adc    DWORD PTR [ebx],ebx
  40695b:	cwde   
  40695c:	(bad)  
  40695d:	inc    BYTE PTR [eax]
  40695f:	ds add al,0xe9
  406962:	scas   eax,DWORD PTR es:[edi]
  406963:	xchg   ah,ch
  406965:	push   0xe6f72ff6
  40696a:	repnz mov WORD PTR [ebp-0x23],es
  40696e:	test   DWORD PTR [edx+0x75],ebx
  406971:	in     eax,0xe3
  406973:	adc    al,0x5c
  406975:	add    BYTE PTR [ebx+ebx*2-0x19],dh
  406979:	add    BYTE PTR [eax+ecx*4],al
  40697c:	add    BYTE PTR [eax],al
  40697e:	sub    edi,DWORD PTR [edi+0x52a850e]
  406984:	add    BYTE PTR [eax],al
  406986:	xlat   BYTE PTR ds:[ebx]
  406987:	inc    eax
  406988:	test   DWORD PTR [eax],0xc6ffff20
  40698e:	push   ebp
  40698f:	mov    al,0xfe
  406991:	pop    es
  406992:	adc    bh,bh
  406994:	imul   eax,DWORD PTR [eax],0x6a043a
  40699a:	dec    edx
  40699b:	add    al,0x8d
  40699d:	inc    ebp
  40699e:	add    BYTE PTR [esp+edx*4-0x74],ah
  4069a2:	test   DWORD PTR [edi+ebp*4-0x2],esp
  4069a6:	inc    DWORD PTR [eax-0x49]
  4069a9:	je     0x4069a3
  4069ab:	pop    edi
  4069ac:	xor    ebx,edi
  4069ae:	call   0x40f159
  4069b3:	fstp   TBYTE PTR [esi-0x4686fa8d]
  4069b9:	add    BYTE PTR [eax],al
  4069bb:	mov    al,ds:0xe128cc66
  4069c0:	(bad)  
  4069c1:	(bad)  
  4069c2:	jne    0x406960
  4069c4:	out    0xd8,al
  4069c6:	mov    ebp,0xd08ab74f
  4069cb:	or     eax,0x2ff7f481
  4069d0:	mov    bh,0x4f
  4069d2:	push   edx
  4069d3:	cmp    BYTE PTR [esi-0x43],dl
  4069d6:	jmp    FWORD PTR [edi]
  4069d8:	lea    eax,[ebp-0x14a8810]
  4069de:	push   0x60
  4069e0:	data16 add BYTE PTR [edi],dh
  4069e3:	xchg   ecx,eax
  4069e4:	(bad)  
  4069e5:	(bad)  
  4069e6:	mov    ch,0x60
  4069e8:	lods   eax,DWORD PTR ds:[esi]
  4069e9:	(bad)  
  4069ea:	call   FWORD PTR [edi-0x11]
  4069ed:	pop    ebx
  4069ee:	sub    DWORD PTR [ecx],esp
  4069f0:	add    al,0xe8
  4069f2:	and    eax,0xff5a7439
  4069f7:	mov    al,0xe3
  4069f9:	pop    esi
  4069fa:	div    DWORD PTR [esi]
  4069fc:	inc    ebx
  4069fd:	in     eax,dx
  4069fe:	call   DWORD PTR [esi+0x411195]
  406a04:	cmp    DWORD PTR [edx-0x54d90f70],edx
  406a0a:	pop    edx
  406a0b:	dec    DWORD PTR [ebx+eax*8+0x2c]
  406a0f:	inc    ecx
  406a10:	cmp    DWORD PTR [edi+0x2],ebp
  406a13:	mov    ebp,0x858c7306
  406a18:	or     eax,0x63ff5a73
  406a1d:	addr16 jmp 0x406a16
  406a20:	daa    
  406a21:	sub    BYTE PTR [edi+edi*8],al
  406a24:	lods   al,BYTE PTR ds:[esi]
  406a25:	xlat   BYTE PTR ds:[ebx]
  406a26:	push   ecx
  406a27:	(bad)  
  406a28:	fsubp  st(2),st
  406a2a:	subps  xmm4,XMMWORD PTR [eax]
  406a2d:	test   al,0x3
  406a2f:	call   0xff9ae614
  406a34:	mov    al,0xec
  406a36:	push   0xfffffff7
  406a38:	mov    esi,0x1effecca
  406a3d:	imul   edx,DWORD PTR [edx],0x41
  406a40:	cmp    DWORD PTR [edx],ebx
  406a42:	nop
  406a43:	lock scas al,BYTE PTR es:[edi]
  406a45:	adc    bl,BYTE PTR [edx-0x1]
  406a48:	mov    ebp,DWORD PTR fs:[ecx+eax*2]
  406a4c:	cmp    edi,ebp
  406a4e:	dec    ebp
  406a4f:	mov    esp,0x858bfa8e
  406a54:	cdq    
  406a55:	cli    
  406a56:	pop    ecx
  406a57:	jmp    FWORD PTR [esp+eiz*8+0x276f72e]
  406a5e:	mov    bl,0x67
  406a60:	ins    DWORD PTR es:[edi],dx
  406a61:	xchg   ecx,eax
  406a62:	(bad)  
  406a63:	jmp    DWORD PTR [edi+0x1c]
  406a66:	push   ebx
  406a67:	test   DWORD PTR [eax],0x35596a5e
  406a6d:	cmc    
  406a6e:	dec    DWORD PTR [edi]
  406a70:	ret    
  406a71:	dec    esi
  406a72:	popa   
  406a73:	xchg   ecx,eax
  406a74:	cwde   
  406a75:	inc    esi
  406a76:	pop    ecx
  406a77:	loop   0x406abc
  406a79:	(bad)
  406a7c:	xchg   edi,eax
  406a7d:	or     eax,0x3559c651
  406a82:	rcr    eax,cl
  406a84:	pop    eax
  406a85:	imul   ecx,DWORD PTR [ecx+0x5926386c],0xd31eb4ae
  406a8f:	pop    edi
  406a90:	pop    ecx
  406a91:	push   cs
  406a92:	gs cmc 
  406a94:	or     al,0xf9
  406a96:	shr    esi,cl
  406a98:	mov    bl,0x16
  406a9a:	out    0x4f,eax
  406a9c:	pop    ecx
  406a9d:	test   BYTE PTR [eax+0x6c],0x38
  406aa1:	out    0x58,al
  406aa3:	jle    0x406a94
  406aa5:	out    0x58,al
  406aa7:	jmp    0x76701f32
  406aac:	pop    ecx
  406aad:	(bad)  
  406aae:	scas   eax,DWORD PTR es:[edi]
  406aaf:	ror    BYTE PTR [edx],1
  406ab1:	push   es
  406ab2:	mov    edi,0x4f8c58e8
  406ab7:	pop    esi
  406ab8:	pop    ecx
  406ab9:	mov    esi,0x61b81458
  406abe:	mov    edi,0x9c136be8
  406ac3:	ds pop ecx
  406ac5:	mov    al,0x82
  406ac7:	adc    DWORD PTR [ecx-0x62],edx
  406aca:	pop    eax
  406acb:	push   0xffffff97
  406acd:	add    BYTE PTR [ebp+0x39592650],bl
  406ad3:	or     DWORD PTR [ebp+0x7d],esp
  406ad6:	cmp    DWORD PTR [eax],eax
  406ad8:	jmp    0x16ac2761
  406add:	pop    ecx
  406ade:	jbe    0x406adf
  406ae0:	cmc    
  406ae1:	jg     0x406aa2
  406ae3:	(bad)  
  406ae4:	call   0xdb24ec
  406ae9:	add    DWORD PTR [eax],ecx
  406aeb:	pop    ecx
  406aec:	(bad)  
  406aed:	jmp    0xe9c1ef33
  406af2:	cmp    al,BYTE PTR [eax]
  406af4:	push   0xbe693af9
  406af9:	(bad)  
  406afa:	outs   dx,DWORD PTR ds:[esi]
  406afb:	add    al,ch
  406afd:	js     0x406ac6
  406aff:	push   edi
  406b00:	inc    esi
  406b02:	mov    edi,0x81bef764
  406b07:	push   edi
  406b08:	jne    0x406aeb
  406b0a:	xchg   edx,eax
  406b0b:	pop    ebp
  406b0c:	mov    ch,0xae
  406b0e:	jno    0x406b67
  406b10:	mov    ch,0x91
  406b12:	imul   edx,DWORD PTR [edi-0x1],0xe7fff79e
  406b19:	mov    esi,0x8eff57af
  406b1e:	(bad)  
  406b1f:	pop    esp
  406b20:	test   DWORD PTR [esi-0xe8aa86f],0x76b54952
  406b2a:	adc    DWORD PTR [edi-0x4b],0xff57698d
  406b31:	data16 add bh,bh
  406b34:	jmp    edi
  406b36:	shl    BYTE PTR [edi-0x50a900a9],0x60
  406b3d:	test   DWORD PTR [esi+0x11],0x22f17557
  406b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b45:	mov    ch,0x3e
  406b47:	add    DWORD PTR [ebx+0x570911bd],eax
  406b4d:	(bad)  
  406b4e:	jmp    0x64c365d9
  406b53:	dec    edx
  406b54:	dec    edi
  406b55:	call   FWORD PTR [esi]
  406b57:	xchg   ah,cl
  406b59:	adc    DWORD PTR [edx-0x1],esp
  406b5c:	aaa    
  406b5d:	test   DWORD PTR [esi],0x305711
  406b63:	aaa    
  406b64:	inc    esi
  406b65:	pop    es
  406b66:	call   0x3ff1f4
  406b6b:	cmp    eax,DWORD PTR ds:0x4567006a
  406b71:	pop    es
  406b72:	call   0x3fdcac
  406b77:	addr16 jno 0x406b5e
  406b7a:	mul    DWORD PTR [edi-0x51]
  406b7d:	out    0x89,eax
  406b7f:	enter  0xfeae,0xff
  406b83:	lods   eax,DWORD PTR ds:[esi]
  406b84:	call   0xe4286b7f
  406b89:	jge    0x406b43
  406b8b:	out    0xae,eax
  406b8d:	(bad)  
  406b8e:	mov    ch,0xf8
  406b90:	(bad)  
  406b91:	(bad)  
  406b92:	jmp    FWORD PTR [eax+0xffb732]
  406b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b99:	scas   al,BYTE PTR es:[edi]
  406b9a:	mov    ah,0xe0
  406b9c:	lahf   
  406b9d:	scas   al,BYTE PTR es:[edi]
  406b9e:	(bad)  
  406b9f:	call   0x3fdfdc
  406ba4:	mov    bh,0x70
  406ba6:	fdiv   st,st(7)
  406ba8:	scas   eax,DWORD PTR es:[di]
  406baa:	out    0x5d,eax
  406bac:	sub    BYTE PTR [edi-0x53f20002],ch
  406bb2:	idiv   bh
  406bb4:	push   edi
  406bb5:	in     al,0x51
  406bb7:	mov    eax,0x45feaf67
  406bbc:	push   0x7fdd4e5
  406bc1:	scas   eax,DWORD PTR es:[edi]
  406bc2:	(bad)  
  406bc3:	jne    0x406bb9
  406bc5:	jecxz  0x406b62
  406bc7:	mov    dl,BYTE PTR [eax-0x673d36fe]
  406bcd:	add    dl,BYTE PTR [ebp-0x75]
  406bd0:	push   esp
  406bd1:	add    esp,0xfffffffc
  406bd4:	stos   BYTE PTR es:[edi],al
  406bd5:	add    ch,BYTE PTR [edx+0xd]
  406bd8:	daa    
  406bd9:	xor    DWORD PTR [edi],eax
  406bdb:	call   0xffd0f119
  406be0:	jbe    0x406bc1
  406be2:	sar    bl,0xe1
  406be5:	stc    
  406be6:	or     eax,0xd0563941
  406beb:	pop    es
  406bec:	push   ecx
  406bed:	retf   
  406bee:	push   edi
  406bef:	call   DWORD PTR [esi+0x65]
  406bf2:	sar    bl,1
  406bf4:	dec    esi
  406bf5:	mov    bl,0xb
  406bf7:	call   0xff96d7b2
  406bfc:	add    BYTE PTR [eax-0x56],dh
  406bff:	(bad)  
  406c00:	dec    DWORD PTR [ebp-0xa7e991e]
  406c06:	mov    ecx,DWORD PTR [esi-0x1]
  406c09:	es in  eax,0xbf
  406c0c:	sti    
  406c0d:	mov    DWORD PTR [esi+0x4d160bd0],ecx
  406c13:	mov    bh,0x28
  406c15:	js     0x406c7e
  406c17:	imul   edx,DWORD PTR [edx-0x4d],0x67
  406c1b:	add    ecx,DWORD PTR [ebx]
  406c1d:	stc    
  406c1e:	pop    esi
  406c1f:	sbb    BYTE PTR [edi+0x3b],0x67
  406c23:	add    eax,edi
  406c25:	je     0x406ca6
  406c27:	add    eax,DWORD PTR [eax]
  406c29:	cmp    DWORD PTR [edi+0x3e],esp
  406c2c:	inc    ebp
  406c2d:	in     eax,0xce
  406c2f:	std    
  406c30:	call   esi
  406c32:	add    DWORD PTR [edx+ebp*2],eax
  406c35:	cmp    DWORD PTR [ecx],esi
  406c37:	add    ebp,DWORD PTR [edx+0x39]
  406c3a:	in     al,0xbf
  406c3c:	repz imul ebx,esp,0xc6aef47f
  406c43:	push   ebp
  406c44:	push   eax
  406c45:	scas   al,BYTE PTR es:[edi]
  406c46:	xchg   esp,eax
  406c47:	pop    ebx
  406c48:	jmp    FWORD PTR [ebx+edx*1]
  406c4b:	imul   esp,DWORD PTR [ebx+esi*4],0x67
  406c4f:	add    ecx,DWORD PTR [ebx]
  406c51:	jns    0x406bde
  406c53:	add    cl,ch
  406c55:	pop    ebx
  406c56:	add    bl,ch
  406c58:	add    edi,DWORD PTR [ecx]
  406c5a:	call   0x38978a
  406c5f:	adc    eax,0x684200d0
  406c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c65:	call   0x7bb4:0x3372556e
  406c6c:	cmc    
  406c6d:	dec    ebp
  406c6e:	pop    esi
  406c6f:	push   ebp
  406c70:	cdq    
  406c71:	mov    cl,0x5e
  406c73:	test   BYTE PTR [edx],dh
  406c75:	push   esi
  406c76:	dec    esi
  406c77:	xchg   DWORD PTR [esp+edx*2+0x4e],ebp
  406c7b:	push   ebp
  406c7c:	fiadd  WORD PTR [edi+0x55de44b4]
  406c82:	ss mov al,0x40
  406c85:	mov    DWORD PTR [esi-0x41],esp
  406c88:	call   0xb69058e1
  406c8d:	push   ebp
  406c8e:	push   ds
  406c8f:	push   ebp
  406c90:	cld    
  406c91:	mov    bh,0x61
  406c93:	mov    edi,0x99bf6be8
  406c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c99:	push   ebp
  406c9a:	mov    al,0x7a
  406c9c:	test   DWORD PTR [ebp-0x2],ecx
  406c9f:	push   esp
  406ca0:	add    eax,DWORD PTR [ecx+eiz*2]
  406ca3:	lahf   
  406ca4:	(bad)  
  406ca5:	ret    0x55ee
  406ca8:	cmp    al,0x54
  406caa:	out    dx,al
  406cab:	push   esp
  406cac:	jle    0x406d03
  406cae:	and    al,0xb4
  406cb0:	mov    edi,0xf95cd6c2
  406cb5:	cdq    
  406cb6:	into   
  406cb7:	push   esp
  406cb8:	jo     0x406d39
  406cba:	aad    0x4c
  406cbc:	pop    esi
  406cbd:	push   ebp
  406cbe:	push   ebx
  406cbf:	add    cl,al
  406cc1:	popf   
  406cc2:	outs   dx,BYTE PTR ds:[esi]
  406cc3:	mov    edi,0xe40054e8
  406cc8:	dec    edi
  406cc9:	ds push ebp
  406ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ccc:	push   esp
  406ccd:	hlt    
  406cce:	mov    bh,0x51
  406cd0:	mov    edi,0xb222e8ff
  406cd5:	mov    ecx,0x8586e42e
  406cda:	adc    esp,esi
  406cdc:	push   esp
  406cdd:	call   DWORD PTR [ebx-0x214f17c6]
  406ce3:	jnp    0x406d39
  406ce5:	(bad)  
  406ce6:	push   esp
  406ce7:	add    eax,0xc06ff4d
  406cec:	or     ebx,DWORD PTR [eax+edx*8+0x7b]
  406cf0:	push   esp
  406cf1:	out    0xbd,eax
  406cf3:	mov    al,0x54
  406cf5:	jmp    DWORD PTR [eax-0x32]
  406cf8:	pop    edi
  406cf9:	mul    esi
  406cfb:	in     eax,dx
  406cfc:	add    BYTE PTR [ebp-0xab123f],0x39
  406d03:	and    eax,0x352837a8
  406d08:	push   ebx
  406d09:	mov    ch,0xb9
  406d0b:	jne    0x406d60
  406d0d:	(bad)  
  406d0e:	mov    esi,0x2828b42f
  406d13:	cmp    eax,0x65731168
  406d18:	push   ebx
  406d19:	or     ebp,DWORD PTR [ecx+0x5c82eef6]
  406d1f:	inc    edx
  406d20:	dec    ebx
  406d21:	call   DWORD PTR [esi-0x71f6330a]
  406d27:	dec    edx
  406d28:	add    DWORD PTR [ebp+0x537500a5],0xffffffff
  406d2f:	xchg   edx,eax
  406d30:	xor    BYTE PTR [ebx],bh
  406d32:	test   DWORD PTR [ebp-0x2b00ac7b],edx
  406d38:	cmp    al,BYTE PTR [eax]
  406d3a:	add    BYTE PTR [ecx+0x5eb62e52],bh
  406d40:	test   DWORD PTR gs:[ebp-0xacfac7],eax
  406d47:	mov    ecx,0x376fa2
  406d4c:	sar    edi,1
  406d4e:	(bad)  
  406d4f:	mov    ch,0x60
  406d51:	(bad)  
  406d52:	(bad)  
  406d53:	dec    DWORD PTR [edi+0x2]
  406d56:	pop    esp
  406d57:	sub    ecx,esp
  406d59:	jmp    edi
  406d5b:	int    0x19
  406d5d:	lods   al,BYTE PTR ds:[esi]
  406d5e:	dec    BYTE PTR [ebx]
  406d60:	push   eax
  406d61:	inc    ebx
  406d62:	adc    al,BYTE PTR [ebx-0x8f0f3]
  406d68:	aas    
  406d69:	push   ebx
  406d6a:	je     0x406d76
  406d6c:	aas    
  406d6d:	out    dx,eax
  406d6e:	mov    es,WORD PTR [ebp-0x13bbc]
  406d74:	cmp    ecx,DWORD PTR [ecx]
  406d76:	mov    DWORD PTR [ebp-0x13bdc],0xffffff50
  406d80:	add    BYTE PTR [ebp+ecx*4-0x7d50f04a],dh
  406d87:	mov    ebp,0xfffeb6f4
  406d8c:	adc    BYTE PTR [ebx],ch
  406d8e:	add    DWORD PTR ds:[eax],0xffffff9d
  406d92:	sbb    bh,dh
  406d94:	dec    edi
  406d96:	stc    
  406d97:	je     0x406dcf
  406d99:	jp     0x406d97
  406d9b:	mov    WORD PTR [ebp-0x14934],es
  406da1:	inc    eax
  406da2:	scas   eax,DWORD PTR es:[edi]
  406da3:	mov    ah,0xe4
  406da5:	xlat   BYTE PTR ds:[ebx]
  406da6:	scas   al,BYTE PTR es:[edi]
  406da7:	(bad)  
  406da8:	call   0x3f904f
  406dad:	jmp    0x406d6d
  406daf:	jae    0x406dba
  406db1:	push   ebx
  406db2:	jno    0x406d80
  406db4:	test   DWORD PTR [edi-0x51],0xade574ff
  406dbb:	mov    ah,0xe4
  406dbd:	scas   eax,DWORD PTR es:[di]
  406dbf:	(bad)  
  406dc0:	call   0x3fe645
  406dc5:	cmp    DWORD PTR [edx],esp
  406dc7:	mov    esp,esp
  406dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dca:	rcl    DWORD PTR [edx+0x0],0x39
  406dce:	imul   eax,DWORD PTR [ebx],0x5abcdc83
  406dd4:	call   DWORD PTR [esi-0x45952898]
  406dda:	jecxz  0x406e3b
  406ddc:	test   DWORD PTR [esi+0x1b740419],0x6ee890e6
  406de6:	jmp    0x90256e3d
  406deb:	fild   DWORD PTR [ecx]
  406ded:	cmp    edx,ebp
  406def:	xchg   ecx,eax
  406df0:	jmp    esp
  406df2:	push   eax
  406df3:	pop    ebx
  406df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df5:	add    BYTE PTR [ebx-0x7b00adb7],cl
  406dfb:	push   esp
  406dfc:	pop    edx
  406dfd:	inc    DWORD PTR [esi+0x59]
  406e00:	fadd   DWORD PTR [edi]
  406e02:	push   ecx
  406e03:	pop    ebp
  406e04:	xchg   ebp,eax
  406e05:	push   DWORD PTR [esi]
  406e07:	sub    ebx,DWORD PTR [eax+0x524326e8]
  406e0d:	jmp    FWORD PTR [edi+ecx*2-0x6d1412a5]
  406e14:	push   edx
  406e15:	dec    esp
  406e17:	fwait
  406e18:	pop    edx
  406e19:	dec    DWORD PTR [esi]
  406e1b:	mov    ds:0x9b0ee498,eax
  406e20:	push   edx
  406e21:	inc    DWORD PTR [edi+ecx*2+0x6aabad5b]
  406e28:	push   edx
  406e29:	jmp    DWORD PTR [ebx+eiz*4+0x7ae6ff5a]
  406e30:	fadd   DWORD PTR [edi]
  406e32:	shl    eax,1
  406e34:	xchg   ebp,eax
  406e35:	call   esi
  406e37:	retf   0xe097
  406e3a:	(bad)  
  406e3b:	loop   0x406e8e
  406e3d:	dec    DWORD PTR [eax+eax*1-0xf]
  406e41:	pop    ebx
  406e42:	jl     0x406dd2
  406e44:	pop    esi
  406e45:	push   edx
  406e46:	mov    dh,0x8b
  406e48:	dec    ebp
  406e49:	pop    edx
  406e4a:	scas   al,BYTE PTR es:[edi]
  406e4b:	push   ecx
  406e4c:	inc    ecx
  406e4d:	dec    edx
  406e4e:	in     al,dx
  406e4f:	push   ecx
  406e50:	inc    esi
  406e51:	push   edx
  406e52:	in     al,0x64
  406e54:	ss push edx
  406e56:	xchg   esi,eax
  406e57:	push   0x8e009875
  406e5c:	push   ecx
  406e5d:	cs cwde 
  406e5f:	xchg   ecx,eax
  406e60:	dec    ecx
  406e61:	es push edx
  406e63:	xchg   ecx,eax
  406e64:	(bad)  
  406e65:	push   esp
  406e66:	push   edx
  406e67:	jbe    0x406eba
  406e69:	pop    esp
  406e6a:	arpl   WORD PTR [esi+0x51],sp
  406e6d:	push   cs
  406e6e:	pop    ebx
  406e6f:	lahf   
  406e70:	mov    eax,DWORD PTR [esi]
  406e72:	push   edx
  406e73:	pop    esi
  406e74:	mov    edi,ecx
  406e76:	pop    ecx
  406e77:	push   esi
  406e78:	push   ecx
  406e79:	add    DWORD PTR [esi-0x7c],ebp
  406e7c:	push   ecx
  406e7d:	out    dx,al
  406e7e:	push   ecx
  406e7f:	cld    
  406e80:	push   edi
  406e81:	rcl    BYTE PTR [esp+edi*1-0x53ae21af],1
  406e88:	push   esp
  406e89:	shl    DWORD PTR [edi-0x4a],0xff
  406e8d:	call   0xe94869cc
  406e92:	mov    dh,0xb3
  406e94:	arpl   WORD PTR [edx+0x48],bp
  406e97:	or     eax,0x3cdde8e6
  406e9c:	push   ecx
  406e9d:	xor    al,0xfc
  406e9f:	push   ds
  406ea0:	mov    ds:0x86fe515b,eax
  406ea5:	and    al,0x50
  406ea7:	popa   
  406ea8:	add    cl,ch
  406eaa:	pusha  
  406eab:	scas   eax,DWORD PTR es:[edi]
  406eac:	out    0xdb,eax
  406eae:	sbb    BYTE PTR [eax+0x0],bh
  406eb1:	adc    esi,ebp
  406eb3:	daa    
  406eb4:	mov    edi,0x84c50e8
  406eb9:	add    BYTE PTR [ecx+0x6eff36e6],al
  406ebf:	add    BYTE PTR [esi-0x45],al
  406ec2:	idiv   DWORD PTR [ecx-0x57c9231e]
  406ec8:	cmp    ch,al
  406eca:	daa    
  406ecb:	push   ds
  406ecc:	jp     0x406f1e
  406ece:	(bad)  
  406ecf:	adc    al,0xe9
  406ed1:	daa    
  406ed2:	inc    ecx
  406ed3:	jmp    0x3ef824da
  406ed8:	call   0x60fe2ee1
  406edd:	xchg   DWORD PTR [ebp+0x35],eax
  406ee0:	gs (bad) 
  406ee2:	call   DWORD PTR ds:0xf17550ab
  406ee8:	adc    cl,BYTE PTR [ecx+0x510816b1]
  406eee:	jne    0x406f01
  406ef0:	or     bl,cl
  406ef2:	repz push es
  406ef4:	xchg   al,bh
  406ef6:	out    0x1e,eax
  406ef8:	stos   BYTE PTR es:[edi],al
  406ef9:	push   eax
  406efa:	push   esi
  406efc:	addr16 dec esp
  406efe:	call   0xff911ed4
  406f03:	push   ecx
  406f04:	pop    ecx
  406f05:	or     DWORD PTR [ecx-0x17],eax
  406f08:	mov    ebp,edx
  406f0a:	pop    es
  406f0b:	ror    DWORD PTR [eax-0x763100b4],0xd5
  406f12:	sti    
  406f13:	mov    BYTE PTR [edi],0x8
  406f16:	call   0xff901e5a
  406f1b:	mov    al,ds:0x14000474
  406f20:	test   BYTE PTR [ebx+eax*4-0x53],bl
  406f24:	add    BYTE PTR [esi-0x26],ch
  406f27:	call   DWORD PTR [edx]
  406f29:	cmp    BYTE PTR [edi+0x75],cl
  406f2c:	loope  0x406ec0
  406f2e:	and    dh,BYTE PTR [edx+0x4579898e]
  406f34:	add    BYTE PTR [ebx+ebp*1+0x71c7ffff],dh
  406f3b:	push   0xff428fbd
  406f40:	addr16 cdq 
  406f42:	call   0x36976f87
  406f47:	pop    es
  406f48:	call   0x3f8957
  406f4d:	pop    es
  406f4e:	ss sti 
  406f50:	dec    DWORD PTR [ebp+0x2243e74b]
  406f56:	mov    al,0xfe
  406f58:	leave  
  406f59:	bound  eax,QWORD PTR [edi]
  406f5b:	add    BYTE PTR [ebp+0x1b],dl
  406f5e:	scas   eax,DWORD PTR es:[edi]
  406f5f:	add    ah,0x54
  406f62:	sub    eax,0xb08069ff
  406f67:	je     0x406f71
  406f69:	dec    eax
  406f6a:	fdiv   DWORD PTR [eax+0x44ca47ff]
  406f70:	cld    
  406f71:	mov    eax,0xf6ef0003
  406f76:	sub    dl,dl
  406f78:	aaa    
  406f79:	mov    eax,ds:0x8fd86803
  406f7e:	inc    edx
  406f7f:	(bad)  
  406f80:	dec    ch
  406f82:	dec    edx
  406f83:	out    0xaf,eax
  406f85:	jns    0x406f46
  406f87:	(bad)  
  406f88:	push   0x0
  406f8a:	and    BYTE PTR [ebx],ch
  406f8c:	adc    al,0x38
  406f8e:	popa   
  406f8f:	add    al,0x68
  406f91:	sti    
  406f92:	dec    edi
  406f93:	inc    ebp
  406f94:	(bad)  
  406f95:	(bad)  
  406f96:	sbb    eax,0x2041289f
  406f9b:	stos   DWORD PTR es:[edi],eax
  406f9c:	xchg   ebp,eax
  406f9d:	mov    bh,0xc7
  406f9f:	mov    esi,0x184cc00a
  406fa4:	push   0xff43dff1
  406fa9:	dec    edi
  406faa:	enter  0xb761,0xff
  406fae:	cmp    DWORD PTR [esi-0x4c],esi
  406fb1:	cmp    DWORD PTR [bx+di+0x5e],ebx
  406fb5:	mov    esi,0x41176a51
  406fba:	cmp    ecx,ebp
  406fbc:	dec    esi
  406fbd:	jne    0x407000
  406fbf:	sbb    DWORD PTR [edx],0x5bddc6d9
  406fc5:	push   esi
  406fc6:	test   ebp,esp
  406fc8:	dec    esi
  406fc9:	jmp    FWORD PTR [ebp*4-0x3ebe8ab2]
  406fd0:	cmp    al,0xb1
  406fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd3:	mov    ebp,0x5935c23c
  406fd8:	mov    eax,0x47d9a58a
  406fdd:	cld    
  406fde:	out    0x6d,eax
  406fe0:	fcos   
  406fe2:	adc    BYTE PTR [eax],ch
  406fe4:	dec    esi
  406fe5:	jne    0x407018
  406fe7:	icebp  
  406fe8:	fidiv  DWORD PTR [eax+0x457ced76]
  406fee:	add    BYTE PTR [ebp-0x1f],ch
  406ff1:	sbb    BYTE PTR [ebp+0x11],dh
  406ff4:	cwde   
  406ff5:	add    ecx,DWORD PTR [ebx+0x411b801c]
  406ffb:	cmp    ecx,ebx
  406ffd:	push   cs
  406ffe:	add    ch,al
  407000:	mov    eax,ds:0x980120db
  407005:	add    edx,DWORD PTR [edi+0x51]
  407008:	push   0x52390085
  40700d:	inc    ebx
  40700e:	je     0x407064
  407010:	or     eax,0x3ee4d35c
  407015:	dec    esi
  407016:	push   0xffc4ff53
  40701b:	xchg   BYTE PTR [edi],ch
  40701d:	push   ecx
  40701e:	mov    bh,0xe
  407020:	xchg   edi,eax
  407021:	mov    bl,0x67
  407023:	cmp    DWORD PTR [edi+0x5e],edx
  407026:	mov    esi,0xd8a60069
  40702b:	ds pop eax
  40702d:	ret    
  40702e:	cmp    dh,ch
  407030:	dec    ebp
  407031:	sbb    DWORD PTR [edx-0x56],0x385a8e4d
  407038:	(bad)  
  407039:	push   0x82d3390d
  40703e:	(bad)
  407041:	test   eax,0x6e4dc68c
  407046:	dec    esi
  407047:	retf   
  407048:	sahf   
  407049:	and    DWORD PTR [edi],eax
  40704b:	sub    al,0x93
  40704d:	pop    esi
  40704e:	fdiv   DWORD PTR [edx+0xfbdc4d]
  407054:	sahf   
  407055:	lds    edx,FWORD PTR [edi-0x595261b2]
  40705b:	cmp    al,0x7b
  40705d:	add    al,0xe9
  40705f:	mov    eax,0x476a5cc3
  407064:	test   edx,ebx
  407066:	call   0x9c8d9944
  40706b:	sti    
  40706c:	pop    esi
  40706d:	push   edi
  40706e:	pop    ecx
  40706f:	dec    esi
  407070:	outs   dx,BYTE PTR ds:[esi]
  407071:	ja     0x40701f
  407073:	dec    edi
  407074:	sar    edi,1
  407076:	call   0xc7190fd9
  40707b:	or     edi,eax
  40707d:	call   DWORD PTR [eax-0x1740eee8]
  407083:	dec    esi
  407084:	int3   
  407085:	test   DWORD PTR [eax],0xe64d6194
  40708b:	dec    ebp
  40708c:	lods   al,BYTE PTR ds:[esi]
  40708d:	dec    esp
  40708e:	(bad)  
  407090:	ss pop eax
  407092:	jecxz  0x407026
  407094:	es dec ebp
  407096:	mov    al,ds:0x1c003542
  40709b:	jns    0x4070c2
  40709d:	jg     0x407044
  40709f:	xor    BYTE PTR [esi],al
  4070a1:	dec    ebp
  4070a2:	add    BYTE PTR [esi+0x19fbc386],dh
  4070a8:	ins    BYTE PTR es:[edi],dx
  4070a9:	ror    DWORD PTR [ebx],cl
  4070ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ac:	dec    esi
  4070ad:	lods   al,BYTE PTR ds:[esi]
  4070ae:	sub    BYTE PTR [eax],ch
  4070b0:	xor    eax,0x3d6ccd58
  4070b5:	add    BYTE PTR [ebx],cl
  4070b7:	test   eax,0xa183dc00
  4070bc:	call   0x250770fb
  4070c1:	jge    0x4070c3
  4070c3:	add    cl,ch
  4070c5:	cmp    al,BYTE PTR [ebp+0x45]
  4070c8:	jne    0x407136
  4070ca:	add    eax,0x4c90e900
  4070cf:	imul   ebp,ecx,0xe9694c90
  4070d5:	daa    
  4070d6:	ret    
  4070d7:	repz mov ecx,0x3ef4831f
  4070dd:	add    al,0x4d
  4070df:	push   eax
  4070e0:	ds push sp
  4070e3:	(bad)  
  4070e4:	mov    esp,0x649f57f6
  4070e9:	xor    eax,0x91290b00
  4070ee:	add    ebp,ecx
  4070f0:	test   DWORD PTR [ebx],edi
  4070f2:	add    BYTE PTR [eax],al
  4070f4:	and    DWORD PTR [edi],0xede94118
  4070fa:	ror    BYTE PTR [ebx],cl
  4070fc:	adc    ebx,edi
  4070fe:	xchg   ebp,eax
  4070ff:	(bad)  
  407100:	dec    BYTE PTR [edx-0x419b2f87]
  407106:	push   ebx
  407107:	imul   esi
  407109:	in     eax,dx
  40710a:	scas   eax,DWORD PTR es:[edi]
  40710b:	push   ecx
  40710c:	ror    eax,1
  40710e:	xchg   edx,eax
  40710f:	(bad)  
  407110:	fidiv  WORD PTR [ebx+0x75def085]
  407116:	dec    ebx
  407117:	call   0xff8c3afd
  40711c:	add    BYTE PTR [eax],al
  40711e:	push   0x4
  407120:	push   0xff3f385b
  407125:	inc    BYTE PTR [ebp-0x30000951]
  40712b:	mov    esp,0x3f095c34
  407130:	jmp    edi
  407132:	call   0x5a4070ac
  407137:	and    ah,0xf7
  40713a:	scas   eax,DWORD PTR es:[edi]
  40713b:	mov    esp,0x89280069
  407140:	aaa    
  407141:	inc    ecx
  407142:	loopne 0x407100
  407144:	mov    ah,0xf0
  407146:	inc    edi
  407147:	mov    esp,0x9b85fffe
  40714c:	sub    BYTE PTR [ecx-0x60],al
  40714f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407150:	jmp    0x88fc810a
  407155:	test   esp,edi
  407157:	mov    bl,0xfe
  407159:	(bad)  
  40715a:	jp     0x40715b
  40715c:	addr16 push edx
  40715e:	cmp    BYTE PTR [edi],bh
  407160:	(bad)  
  407161:	inc    BYTE PTR ds:0x4ffff6af
  407167:	mov    esp,0x3f395c34
  40716c:	jmp    edi
  40716e:	sub    al,0x72
  407170:	(bad)  
  407171:	(bad)  
  407172:	jmp    0x503859f8
  407177:	mov    esp,0xb40c858c
  40717c:	(bad)  
  40717d:	push   DWORD PTR [eax+0x386327]
  407183:	mov    eax,ds:0x40b5feff
  407188:	scas   eax,DWORD PTR es:[edi]
  407189:	(bad)  
  40718a:	dec    DWORD PTR [edi-0xb]
  40718d:	pop    ebx
  40718e:	sub    DWORD PTR [ecx+0x4],esp
  407191:	call   0xfef7373f
  407196:	or     edi,DWORD PTR [ecx]
  407198:	cdq    
  407199:	rcr    BYTE PTR [eax],1
  40719b:	mov    edx,0x16f7287b
  4071a0:	inc    edx
  4071a1:	add    BYTE PTR [ebp+0x29],dh
  4071a4:	mov    dl,BYTE PTR [edi+ecx*4]
  4071a7:	mov    esp,0xfeff5338
  4071ac:	call   0xa1ebe80c
  4071b1:	dec    ebx
  4071b2:	jmp    0x4071f9
  4071b4:	dec    esi
  4071b5:	inc    ebx
  4071b6:	je     0x4071f7
  4071b8:	or     DWORD PTR [edx+ebp*2-0x55],ebx
  4071bc:	jns    0x407209
  4071be:	(bad)  
  4071bf:	mov    esp,0xceff5378
  4071c4:	xor    eax,DWORD PTR [ebx]
  4071c6:	add    BYTE PTR [ecx],bh
  4071c8:	(bad)  
  4071c9:	mov    ah,ah
  4071cb:	(bad)  
  4071cc:	(bad)  [edx+0x0]
  4071cf:	sub    eax,0x9dbd868a
  4071d4:	mov    cl,0x4a
  4071d6:	(bad)  
  4071d7:	cmp    DWORD PTR ds:0xc0dc82b9,ebp
  4071dd:	push   edx
  4071de:	call   DWORD PTR [esi+0x2144cf58]
  4071e4:	pop    ecx
  4071e5:	add    ebp,edi
  4071e7:	add    bh,al
  4071e9:	adc    ecx,edx
  4071eb:	pop    es
  4071ec:	xchg   ecx,eax
  4071ed:	pop    ss
  4071ee:	call   0x66ec:0x912176ff
  4071f5:	jmp    0x612d7144
  4071fa:	pop    ebx
  4071fb:	adc    eax,0xff4af98e
  407200:	mov    eax,?
  407202:	push   edx
  407203:	dec    DWORD PTR [esi+0x49]
  407206:	rol    BYTE PTR [edi],1
  407208:	push   ecx
  407209:	pop    ecx
  40720a:	call   0x2ee4:0x90593eff
  407211:	add    esi,esp
  407213:	dec    edx
  407214:	cs aam 0xf0
  407217:	pop    ebx
  407218:	and    BYTE PTR [ebx-0x6be1b52a],bl
  40721e:	leave  
  40721f:	push   edx
  407220:	push   ss
  407221:	dec    edx
  407222:	(bad)  
  407223:	shl    BYTE PTR [esi],1
  407225:	pop    eax
  407226:	jo     0x4071c1
  407228:	push   es
  407229:	dec    edx
  40722a:	mov    dh,0x90
  40722c:	adc    eax,0xe14aae52
  407231:	push   ebx
  407232:	pop    eax
  407233:	dec    edx
  407234:	out    dx,al
  407235:	dec    ecx
  407236:	push   esp
  407237:	push   edi
  407238:	out    dx,al
  407239:	dec    ecx
  40723a:	xchg   esi,eax
  40723b:	pop    ebx
  40723c:	ror    DWORD PTR [edi-0x6c29b572],cl
  407242:	xchg   ecx,eax
  407243:	push   edx
  407244:	into   
  407245:	dec    ecx
  407246:	xchg   ecx,eax
  407247:	sub    cl,BYTE PTR [eax+0x4a7649]
  40724d:	test   BYTE PTR [eax+0x76],dl
  407250:	dec    edx
  407251:	mov    dh,0x58
  407253:	cmp    eax,0x5e49ae94
  407258:	shr    BYTE PTR [esi-0x61b638a9],0x49
  40725f:	dec    esi
  407260:	rcl    BYTE PTR [edx+0x397fe758],1
  407266:	add    BYTE PTR [eax],dh
  407268:	inc    ebp
  407269:	xor    DWORD PTR [eax],eax
  40726b:	pushf  
  40726c:	jle    0x4071fb
  40726e:	jge    0x407295
  407270:	inc    edi
  407271:	jecxz  0x407272
  407273:	xchg   edx,eax
  407274:	imul   BYTE PTR [edi-0x2d]
  407277:	lock pop ebx
  407279:	pop    edi
  40727a:	call   0xdb0c:0xc3b04a16
  407281:	loop   0x40728a
  407283:	test   al,0x3
  407285:	dec    esi
  407286:	shl    eax,cl
  407288:	pop    ebx
  407289:	das    
  40728a:	dec    edx
  40728b:	add    dh,dh
  40728d:	lock dec eax
  40728f:	jne    0x40727e
  407291:	adc    bl,0x7
  407294:	shr    DWORD PTR [edx],1
  407296:	call   0xe904:0x3e62deff
  40729d:	iret   
  40729e:	jne    0x40728c
  4072a0:	push   0x79
  4072a2:	dec    esp
  4072a3:	push   0xffffffe9
  4072a5:	in     al,dx
  4072a6:	in     al,dx
  4072a7:	(bad)  
  4072a8:	xor    al,0x5
  4072aa:	popa   
  4072ab:	mov    ch,0x87
  4072ad:	jo     0x4072f8
  4072af:	mov    DWORD PTR [eax+eax*1],esp
  4072b2:	sbb    eax,0x8a91e8ff
  4072b8:	push   0xffbf3577
  4072bd:	add    BYTE PTR [ecx+0x8],ah
  4072c0:	inc    ecx
  4072c1:	jmp    0x91484647
  4072c6:	div    BYTE PTR [edx]
  4072c8:	(bad)  
  4072c9:	jle    0x40733b
  4072cb:	sar    ebx,cl
  4072cd:	jbe    0x4072bd
  4072cf:	add    al,ch
  4072d1:	xchg   edi,eax
  4072d2:	ror    DWORD PTR [eax-0x1],cl
  4072d5:	xor    bh,dh
  4072d7:	add    eax,DWORD PTR [eax]
  4072d9:	mov    ah,0x25
  4072db:	pop    esp
  4072dc:	sub    DWORD PTR ds:0x4eff514d,0x99fbc30e
  4072e6:	add    ebx,edx
  4072e8:	or     edi,DWORD PTR [esi]
  4072ea:	lods   al,BYTE PTR ss:[esi]
  4072ec:	sub    BYTE PTR [eax+0x6a99583a],ch
  4072f2:	cmp    eax,0x70290b00
  4072f7:	or     ebp,0xffffffe8
  4072fa:	cmp    al,BYTE PTR [eax]
  4072fc:	(bad)  
  4072fd:	lods   al,BYTE PTR ds:[esi]
  4072fe:	repnz (bad) 
  407300:	(bad)  
  407301:	call   0x85b440
  407306:	dec    esp
  407307:	mov    bh,0x6
  407309:	add    BYTE PTR [eax+0x2a],dl
  40730c:	jmp    FWORD PTR [ecx+0x50]
  40730f:	sub    bh,bh
  407311:	imul   esp,DWORD PTR [eax],0xf444cf
  407317:	jo     0x4072e8
  407319:	test   ah,dh
  40731b:	ud1    edi,esi
  40731e:	push   eax
  40731f:	pop    es
  407320:	aaa    
  407321:	idiv   edi
  407323:	ins    DWORD PTR es:[edi],dx
  407324:	mov    eax,0x3a36be7
  407329:	add    BYTE PTR [ebx],cl
  40732b:	shl    BYTE PTR [edi],1
  40732d:	add    al,0xe9
  40732f:	pusha  
  407330:	add    al,BYTE PTR [eax]
  407332:	add    BYTE PTR [eax+0xf],bh
  407335:	sub    BYTE PTR [ecx-0x20],al
  407338:	mov    eax,0xc9c80c74
  40733d:	mov    bl,0xff
  40733f:	(bad)  
  407340:	xchg   ebx,eax
  407341:	mov    dl,al
  407343:	jne    0x40730b
  407345:	repz div DWORD PTR [edi-0x57adb048]
  40734c:	cmp    DWORD PTR [ebx-0x7b35b801],esi
  407352:	lock das 
  407354:	mov    eax,0x736ce8fe
  407359:	(bad)  
  40735a:	call   DWORD PTR ds:0x7f7d7c6
  407360:	mov    eax,0xfbac684f
  407365:	inc    eax
  407366:	add    bh,dh
  407368:	jne    0x40735a
  40736a:	test   DWORD PTR [edi-0x48],0xeaa435fe
  407371:	inc    eax
  407372:	add    al,bh
  407374:	pop    es
  407375:	mov    bl,0xff
  407377:	pop    ss
  407378:	retf   0xe484
  40737b:	add    BYTE PTR [edi-0x48],cl
  40737e:	(bad)  
  40737f:	push   0x39
  407381:	pop    ecx
  407382:	(bad)  [ecx-0xfc67ef]
  407388:	test   BYTE PTR [ecx+0x4f],cl
  40738b:	inc    DWORD PTR [esi+0x46]
  40738e:	or     eax,0x398105c
  407393:	call   0xff887d80
  407398:	rcl    bl,0x57
  40739b:	mul    DWORD PTR [esi]
  40739d:	es (bad) 
  4073a0:	xchg   esi,eax
  4073a1:	or     BYTE PTR [ecx+eax*2],0x39
  4073a5:	ss xchg ecx,eax
  4073a7:	lock push es
  4073a9:	ds inc edi
  4073ab:	dec    DWORD PTR [ebp+eiz*8+0x1c]
  4073af:	inc    ecx
  4073b0:	cmp    DWORD PTR [ecx+0x73],eax
  4073b3:	mov    bl,0xf6
  4073b5:	xchg   ebp,eax
  4073b6:	jge    0x40733d
  4073b8:	loope  0x40741f
  4073ba:	inc    edi
  4073bb:	push   DWORD PTR [ebx+ebx*8+0x6ddef727]
  4073c2:	mov    ah,0x67
  4073c4:	xchg   esp,eax
  4073c5:	xor    ah,al
  4073c7:	dec    edi
  4073c9:	add    edx,DWORD PTR [edi+esi*8-0x3a]
  4073cd:	lds    eax,FWORD PTR [esi+0x35]
  4073d0:	pop    ebp
  4073d1:	inc    eax
  4073d2:	(bad)  
  4073d3:	call   FWORD PTR [esi-0x51006db8]
  4073d9:	push   ecx
  4073da:	inc    ebx
  4073db:	je     0x40741d
  4073dd:	fimul  DWORD PTR [eax-0x5259ff24]
  4073e3:	inc    esi
  4073e4:	add    al,0xc
  4073e6:	dec    ecx
  4073e7:	inc    esi
  4073e8:	xor    BYTE PTR [esi-0x79089c2d],bh
  4073ee:	add    eax,0xc93ce7b4
  4073f3:	inc    esi
  4073f4:	jmp    DWORD PTR [edx+0x2c]
  4073f7:	cli    
  4073f8:	mov    edi,0xb3eeffe5
  4073fd:	pop    esi
  4073fe:	adc    BYTE PTR [ecx+0x47],bl
  407401:	pop    esi
  407402:	ds ins BYTE PTR es:[edi],dx
  407404:	fs dec esi
  407406:	inc    esi
  407407:	push   cs
  407408:	icebp  
  407409:	dec    esi
  40740a:	inc    esi
  40740b:	jmp    0xf69bf892
  407410:	inc    esi
  407411:	ds (bad) 
  407413:	jl     0x4073da
  407415:	mov    ebx,0x2e4efd83
  40741a:	inc    esi
  40741b:	jmp    0x9cc221ef
  407420:	pop    ebx
  407421:	es inc esi
  407423:	(bad)  
  407424:	add    ecx,DWORD PTR [ebp-0x43fbbd2c]
  40742a:	jnp    0x4073cd
  40742c:	dec    esi
  40742d:	push   es
  40742e:	inc    esi
  40742f:	sbb    DWORD PTR [edi-0x3c],eax
  407432:	pop    esp
  407433:	mov    esi,0x1b58f646
  407438:	xor    esi,ebp
  40743a:	inc    ebp
  40743b:	repnz inc ebx
  40743d:	ins    DWORD PTR es:[edi],dx
  40743e:	lods   al,BYTE PTR ds:[esi]
  40743f:	imul   ecx,DWORD PTR [eax+0x46964e01],0x21cc3900
  407449:	fmul   st(6),st
  40744b:	inc    ebp
  40744c:	xchg   esi,eax
  40744d:	test   esi,eax
  40744f:	retf   
  407450:	lock pop ebx
  407452:	push   esi
  407453:	xchg   esp,eax
  407454:	jbe    0x40749c
  407456:	mov    dh,0x8b
  407458:	jge    0x4074a8
  40745a:	scas   al,BYTE PTR es:[edi]
  40745b:	inc    ebp
  40745c:	data16 sar BYTE PTR [esi],1
  40745f:	pop    eax
  407460:	mov    ds:0x56459e97,al
  407465:	nop
  407466:	mov    eax,ds:0x8e464e4d
  40746b:	retf   
  40746c:	lock pop ebx
  40746e:	aam    0x94
  407470:	ds inc esi
  407472:	jle    0x4073ff
  407474:	add    BYTE PTR [ecx],dl
  407476:	pop    es
  407477:	inc    ebp
  407478:	jmp    FWORD PTR [esi]
  40747a:	leave  
  40747b:	pop    esp
  40747c:	mul    DWORD PTR [esi]
  40747e:	inc    DWORD PTR [ebp+esi*2-0xf]
  407482:	add    dl,bl
  407484:	stos   DWORD PTR es:[edi],eax
  407485:	push   ss
  407486:	inc    DWORD PTR [ebp+esi*4+0x9]
  40748a:	inc    DWORD PTR [edi+edi*8+0x6]
  40748e:	imul   edi,ebp,0x45a6d0e7
  407494:	push   esi
  407496:	(bad)  
  407497:	pop    ebx
  407498:	imul   esi
  40749a:	je     0x4074f4
  40749c:	xchg   ebp,eax
  40749d:	xchg   esi,eax
  40749e:	jl     0x4074e5
  4074a0:	call   DWORD PTR [ecx+eax*4+0x75d6ff4d]
  4074a7:	jp     0x407458
  4074a9:	into   
  4074aa:	add    BYTE PTR [ebp+eax*2-0x4b],dh
  4074ae:	shl    DWORD PTR [ebp+eax*2-0x1],1
  4074b2:	shl    esp,1
  4074b4:	xchg   ebp,eax
  4074b5:	push   DWORD PTR [esi-0x490f7484]
  4074bb:	je     0x407502
  4074bd:	call   0xff8540df
  4074c2:	sahf   
  4074c3:	sahf   
  4074c4:	dec    esp
  4074c5:	jmp    0xff85f3f5
  4074ca:	mov    ?,esi
  4074cc:	dec    eax
  4074cd:	call   0x402f19
  4074d2:	scas   eax,DWORD PTR es:[edi]
  4074d3:	jnp    0x4074cd
  4074d5:	call   FWORD PTR [ebx]
  4074d7:	xor    BYTE PTR [ebx+eax*4-0x5b],dl
  4074db:	or     DWORD PTR [ebp+0x75],eax
  4074de:	cmc    
  4074df:	add    ch,BYTE PTR [esi+0x773ae97f]
  4074e5:	inc    ebp
  4074e6:	push   ecx
  4074e7:	cld    
  4074e8:	retf   0x41f7
  4074eb:	xlat   BYTE PTR ds:[ebx]
  4074ec:	xchg   ebp,eax
  4074ed:	inc    DWORD PTR [eax]
  4074ef:	dec    eax
  4074f1:	inc    esp
  4074f2:	cld    
  4074f3:	aas    
  4074f4:	xor    eax,0xb8b5fffb
  4074f9:	(bad)  
  4074fa:	jne    0x407488
  4074fc:	test   al,0x16
  4074fe:	mov    ebx,0xc00abb1f
  407503:	(bad)  
  407504:	cli    
  407505:	mov    BYTE PTR [ebp+0x34],al
  407508:	sub    bh,bh
  40750a:	mov    WORD PTR [ebp+0xff4fb4],ss
  407510:	lds    edi,FWORD PTR [edi+eiz*8-0x144db85]
  407517:	or     esp,DWORD PTR [eax+0x30]
  40751a:	sub    BYTE PTR [eax+0x20],ch
  40751d:	push   eax
  40751e:	out    dx,al
  40751f:	mov    esi,0xe807331f
  407524:	mov    ecx,0xefffff68
  407529:	xor    dh,bh
  40752b:	jmp    DWORD PTR [ebp+0x48]
  40752e:	(bad)  
  40752f:	jne    0x407539
  407531:	test   al,0xc0
  407533:	stos   DWORD PTR es:[edi],eax
  407534:	mov    edi,0xb475febc
  407539:	mov    esp,0x329ffc74
  40753e:	pop    es
  40753f:	call   0x3fddc7
  407544:	mov    edi,0xbce8fb32
  407549:	ins    DWORD PTR es:[edi],dx
  40754a:	(bad)  
  40754b:	call   FWORD PTR [ecx+0x250007c1]
  407551:	leave  
  407552:	jmp    0x4074d7
  407554:	xchg   esp,eax
  407555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407556:	push   ebp
  407557:	push   DWORD PTR [ebp+0x73ade74b]
  40755d:	mov    esp,0x32500bfe
  407562:	add    al,0x5e
  407564:	imul   eax,ecx,0xdc390007
  40756a:	mov    ebp,0xcdb1e9ef
  40756f:	or     edx,DWORD PTR [ecx+0xff8f9a]
  407575:	jle    0x4075c5
  407577:	inc    ebx
  407578:	bsr    ebp,DWORD PTR [edi+0x12390002]
  40757f:	into   
  407580:	sti    
  407581:	push   ecx
  407582:	push   cs
  407583:	xchg   ebp,eax
  407584:	call   FWORD PTR [esi-0x30]
  407587:	mov    ebp,0x476456eb
  40758c:	inc    esp
  40758e:	inc    esp
  40758f:	inc    ebx
  407590:	jne    0x4075d3
  407592:	icebp  
  407593:	push   ecx
  407594:	scas   al,BYTE PTR es:[edi]
  407595:	ds inc edx
  407597:	ja     0x40760e
  407599:	and    eax,0x2767b9fe
  40759e:	xchg   ecx,eax
  40759f:	ret    0x8cff
  4075a2:	xor    ebp,eax
  4075a4:	cmp    BYTE PTR [ecx],0x59
  4075a7:	push   cs
  4075a8:	ror    BYTE PTR [edi+edx*2+0x28c23d2e],0xac
  4075b0:	cmc    
  4075b1:	inc    ecx
  4075b2:	sbb    BYTE PTR [eax+ebp*8],al
  4075b5:	mov    ah,0x1
  4075b7:	add    al,0x0
  4075b9:	cmp    cl,BYTE PTR [ecx-0x3f1e8a73]
  4075bf:	or     BYTE PTR [ecx],bh
  4075c1:	js     0x40761c
  4075c3:	(bad)  
  4075c5:	fadd   DWORD PTR ds:[ebx]
  4075c8:	add    BYTE PTR [edx-0x67],al
  4075cb:	mov    ecx,0x8d4de201
  4075d0:	adc    bh,bh
  4075d2:	pop    eax
  4075d3:	add    edx,DWORD PTR [eax+0x6b]
  4075d6:	ret    0xe7b8
  4075d9:	add    BYTE PTR [esi-0x4f17f4bd],dh
  4075df:	rol    BYTE PTR [edx-0x1],cl
  4075e2:	add    eax,DWORD PTR [eax]
  4075e4:	ror    DWORD PTR [ebx+0x41f8049],0xc
  4075eb:	mov    es,ecx
  4075ed:	add    al,0x29
  4075ef:	push   ebx
  4075f0:	pop    DWORD PTR [ebx+0xc]
  4075f3:	clc    
  4075f4:	push   eax
  4075f5:	push   eax
  4075f6:	rol    DWORD PTR [edx+0x3e],cl
  4075f9:	inc    ebx
  4075fa:	in     al,dx
  4075fb:	inc    ebx
  4075fc:	ss mov ecx,0xbb44262
  407602:	push   ecx
  407603:	dec    ebx
  407604:	push   ebx
  407605:	inc    ebx
  407606:	pop    esi
  407607:	inc    edx
  407608:	xchg   esp,eax
  407609:	das    
  40760a:	popa   
  40760b:	adc    al,0x47
  40760d:	inc    ebx
  40760e:	dec    esi
  40760f:	je     0x4075b5
  407611:	xor    ebp,ecx
  407613:	push   edi
  407614:	call   0x9704:0x12423e77
  40761b:	aaa    
  40761c:	sub    ecx,DWORD PTR [ecx+edi*1]
  40761f:	stos   DWORD PTR es:[edi],eax
  407620:	popa   
  407621:	xor    BYTE PTR [edx+0x1eade53c],bh
  407627:	fdiv   st,st(3)
  407629:	inc    edx
  40762a:	mov    eax,?
  40762c:	rol    dh,0xe3
  40762f:	inc    ecx
  407630:	into   
  407631:	mov    WORD PTR [esp+eax*2+0x51],?
  407635:	inc    esi
  407636:	inc    ecx
  407637:	mov    edi,0xf86c42e8
  40763c:	shr    BYTE PTR [edx+0x0],0xed
  407640:	inc    ecx
  407641:	scas   al,BYTE PTR es:[edi]
  407642:	lods   eax,DWORD PTR ds:[esi]
  407643:	out    0xd9,al
  407645:	add    al,0xfd
  407647:	jns    0x407649
  407649:	adc    DWORD PTR [eax+edx*1],ecx
  40764c:	mov    edi,0xa40442e8
  407651:	mov    edi,0x8559c6c4
  407656:	jae    0x407616
  407658:	inc    ecx
  407659:	repnz inc ebx
  40765b:	sub    eax,0x5e00ffe6
  407660:	or     BYTE PTR [ecx-0x17],al
  407663:	mov    bl,BYTE PTR [ecx-0x38]
  407666:	cwde   
  407667:	sti    
  407668:	inc    eax
  407669:	push   eax
  40766a:	mov    ecx,0x4107cafb
  40766f:	push   edi
  407670:	inc    edx
  407671:	dec    DWORD PTR [esi+0x52]
  407674:	cmp    ch,BYTE PTR [ebp+0x19d5fb46]
  40767a:	push   ecx
  40767b:	dec    eax
  40767c:	mov    ?,edi
  40767e:	ss aas 
  407680:	inc    eax
  407681:	je     0x407687
  407683:	xchg   ebp,eax
  407684:	and    bh,BYTE PTR [eax]
  407686:	test   al,0x3a
  407688:	mov    al,0xe7
  40768a:	dec    edx
  40768b:	int    0x40
  40768d:	inc    DWORD PTR [ecx-0x16bef7e1]
  407693:	push   0x59
  407695:	cwde   
  407696:	cmp    bl,bh
  407698:	inc    eax
  407699:	push   eax
  40769a:	cdq    
  40769b:	jnp    0x407668
  40769d:	pop    es
  40769e:	add    DWORD PTR [edi+0xeeff42],esp
  4076a4:	push   ebx
  4076a5:	push   0xffffffad
  4076a7:	out    0x78,al
  4076a9:	(bad)  
  4076aa:	sbb    edx,ecx
  4076ac:	fwait
  4076ad:	(bad)  
  4076ae:	call   esi
  4076b0:	cmp    al,0x40
  4076b2:	je     0x4076b8
  4076b4:	aad    0x21
  4076b6:	cmp    BYTE PTR [eax],ch
  4076b8:	xor    eax,0x6a3ae7b0
  4076bd:	inc    ecx
  4076be:	inc    DWORD PTR [ecx+0x1c]
  4076c1:	or     BYTE PTR [ecx-0x17],al
  4076c4:	or     bl,BYTE PTR [ecx+0x68]
  4076c7:	pop    eax
  4076c8:	js     0x40770b
  4076ca:	push   eax
  4076cb:	cmp    DWORD PTR [eax-0x35],edi
  4076ce:	pop    es
  4076cf:	xor    DWORD PTR [ecx+eax*2-0x25ea7101],0xbeb700ac
  4076da:	imul   esp,DWORD PTR [ebx],0xffb0cdc8
  4076e0:	daa    
  4076e1:	repz mov edi,0xde947d74
  4076e7:	cmp    cl,dl
  4076e9:	cld    
  4076ea:	dec    edi
  4076eb:	call   0x3f44d3
  4076f0:	js     0x407705
  4076f2:	cmp    BYTE PTR [ecx-0x70],al
  4076f5:	sub    al,0xe7
  4076f7:	cmp    BYTE PTR [ecx],al
  4076f9:	mov    edi,0xbfd050fe
  4076fe:	je     0x407708
  407700:	clc    
  407701:	sub    bh,ch
  407703:	call   DWORD PTR [edi]
  407705:	adc    al,0x36
  407707:	lods   eax,DWORD PTR ds:[esi]
  407708:	add    BYTE PTR [edi],dl
  40770a:	mov    edi,0xbf3475fe
  40770f:	je     0x407719
  407711:	cmp    ch,dl
  407713:	test   eax,0xc1b537ff
  407718:	add    al,0x50
  40771a:	sub    DWORD PTR [edx-0x24375e14],ecx
  407720:	mul    DWORD PTR [edi]
  407722:	ror    DWORD PTR [ebp+eax*2+0x75fe5414],0x20
  40772a:	shl    DWORD PTR [esp+ecx*1-0x18],0x70
  40772f:	jle    0x407731
  407731:	and    BYTE PTR ds:0x819d0fc0,cl
  407737:	add    DWORD PTR [eax],eax
  407739:	adc    cl,cl
  40773b:	inc    esp
  40773c:	clc    
  40773d:	loopne 0x407742
  40773f:	add    BYTE PTR [eax],al
  407741:	lahf   
  407742:	inc    esi
  407743:	repz (bad) 
  407745:	fild   WORD PTR [ebx]
  407747:	add    BYTE PTR [edx-0x30],ch
  40774a:	ins    DWORD PTR es:[edi],dx
  40774b:	jmp    FWORD PTR [ecx-0x20]
  40774e:	ins    DWORD PTR es:[edi],dx
  40774f:	dec    DWORD PTR [ecx+edi*1-0x4bafc814]
  407756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407757:	idiv   DWORD PTR ss:[esi+0x2cfed386]
  40775e:	add    DWORD PTR [eax+0x75],0x7ec281ad
  407765:	cmp    DWORD PTR [ecx],ebp
  407767:	or     al,0xc0
  407769:	and    eax,0x812a2c
  40776e:	cmp    BYTE PTR [ecx],ch
  407770:	add    ebp,DWORD PTR [eax+0x7c]
  407773:	add    ebx,eax
  407775:	inc    DWORD PTR [edi+0x15e81354]
  40777b:	mov    ecx,0xb209ff3f
  407780:	push   edx
  407781:	lea    esi,[ebp+edi*8-0x669900c9]
  407788:	aad    0xe7
  40778a:	add    eax,0xc0ff3fd9
  40778f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407790:	xor    dh,bh
  407792:	dec    esi
  407793:	push   ss
  407794:	sub    ebp,DWORD PTR [edx+0x6a400e95]
  40779a:	cmp    DWORD PTR [ecx+0x297838ff],edx
  4077a0:	inc    eax
  4077a1:	mov    ch,0x29
  4077a3:	ds aas 
  4077a5:	jmp    DWORD PTR [esi]
  4077a7:	mov    ah,0xe
  4077a9:	call   0xff800d7a
  4077ae:	shl    BYTE PTR [ebx+0x560ef727],0xaa
  4077b5:	call   FWORD PTR [esi+0x3940fce4]
  4077bb:	inc    esi
  4077bc:	jns    0x4077ae
  4077be:	out    dx,al
  4077bf:	jge    0x407800
  4077c1:	jmp    DWORD PTR [ebp+eiz*1+0x2b]
  4077c5:	xchg   edx,eax
  4077c6:	xchg   esi,eax
  4077c7:	ins    DWORD PTR es:[edi],dx
  4077c8:	aas    
  4077c9:	mov    DWORD PTR [edi+edi*8+0x3ed63788],esi
  4077d0:	adc    eax,DWORD PTR [eax+eax*1]
  4077d3:	popa   
  4077d4:	in     al,dx
  4077d5:	iret   
  4077d6:	(bad)  
  4077d7:	(bad)  
  4077d8:	cmp    eax,0x3ec63454
  4077dd:	xchg   BYTE PTR [edi],bh
  4077df:	sub    al,0xc
  4077e1:	xchg   ecx,eax
  4077e2:	mov    bh,0xdf
  4077e4:	ds jbe 0x407774
  4077e7:	mov    esp,0x9e3f762b
  4077ec:	test   eax,0xf94babe8
  4077f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f2:	add    ecx,DWORD PTR [esi-0x79c8a68c]
  4077f8:	ds dec esi
  4077fa:	mov    ecx,0x6ea52832
  4077ff:	jbe    0x40783f
  407801:	jo     0x40778c
  407803:	popa   
  407804:	ss ss aas 
  407807:	sar    edi,cl
  407809:	ror    dh,0x21
  40780c:	shr    eax,0x3e
  40780f:	mov    WORD PTR [edi],gs
  407811:	push   ss
  407812:	aas    
  407813:	dec    esi
  407814:	ds pushf 
  407816:	sqrtps xmm0,xmm0
  407819:	cmp    eax,0x6c883e3f
  40781e:	pusha  
  40781f:	cs inc BYTE PTR ds:[edx+0x3efe24ec]
  407827:	add    DWORD PTR es:[esp+ecx*1-0x46],esi
  40782c:	jnp    0x4077f7
  40782e:	ss push ss
  407830:	ds jmp 0x94c20ded
  407836:	das    
  407837:	add    BYTE PTR [esi],cl
  407839:	ds into 
  40783b:	add    eax,DWORD PTR [ebp-0x1e7f9624]
  407841:	xor    eax,0xb4393ebe
  407846:	call   FWORD PTR [ecx]
  407848:	xchg   ebp,eax
  407849:	cmp    eax,0x3d5cbeff
  40784e:	jne    0x407841
  407850:	and    bh,BYTE PTR [ecx+0x3d0f9ea7]
  407856:	mov    ch,0x85
  407858:	(bad)  
  40785a:	dec    DWORD PTR [esi-0x4917fa7f]
  407860:	and    bh,BYTE PTR ds:0x28317eff
  407866:	div    DWORD PTR [esi+0x67]
  407869:	cmp    eax,0x3f52e175
  40786e:	test   al,0x66
  407870:	push   edi
  407871:	cmp    eax,0x3d4745b5
  407876:	call   DWORD PTR [esi-0x3f]
  407879:	add    eax,0x3d129ae8
  40787e:	inc    DWORD PTR [esi-0xf]
  407881:	pop    ds
  407882:	idiv   DWORD PTR [esi]
  407884:	das    
  407885:	cmp    eax,0x6312e175
  40788a:	test   al,0x2e
  40788c:	pop    ds
  40788d:	cmp    eax,0x3d0f45b5
  407892:	call   FWORD PTR [esi]
  407894:	xchg   ecx,eax
  407895:	add    eax,0x3cd27ee8
  40789a:	dec    DWORD PTR [esi]
  40789c:	add    cl,al
  40789e:	and    esi,edi
  4078a0:	push   es
  4078a1:	ja     0x4078cb
  4078a3:	mov    eax,ds:0xff3d6f52
  4078a8:	cmp    al,0x5a
  4078aa:	xor    eax,0x9653eeff
  4078af:	stos   DWORD PTR es:[edi],eax
  4078b0:	out    0x54,al
  4078b2:	cmp    eax,0x3d44cdb5
  4078b7:	inc    ecx
  4078b9:	mov    al,0x68
  4078bb:	dec    esi
  4078bd:	cmp    al,0x73
  4078bf:	call   0xff3b2fc4
  4078c4:	call   0x3f2029
  4078c9:	scas   eax,DWORD PTR es:[edi]
  4078ca:	mov    ah,0xdb
  4078cc:	test   DWORD PTR [edi+0x6b75e7fa],0x65fffefb
  4078d6:	hlt    
  4078d7:	idiv   bh
  4078d9:	scas   eax,DWORD PTR es:[edi]
  4078da:	cli    
  4078db:	je     0x4078e9
  4078dd:	scas   eax,DWORD PTR es:[edi]
  4078de:	je     0x4078e7
  4078e0:	call   0x3f7362
  4078e5:	das    
  4078e6:	mov    ch,0xef
  4078e8:	imul   DWORD PTR [edi]
  4078ea:	sti    
  4078eb:	out    0x59,eax
  4078ed:	sti    
  4078ee:	cli    
  4078ef:	(bad)  
  4078f0:	jmp    ebp
  4078f2:	clc    
  4078f3:	call   0xff3b6749
  4078f8:	jmp    DWORD PTR [ebp-0x4]
  4078fb:	out    0xa3,eax
  4078fd:	ins    DWORD PTR es:[edi],dx
  4078fe:	add    BYTE PTR [eax],al
  407900:	leave  
  407901:	add    BYTE PTR [edx],ah
  407903:	adc    BYTE PTR [eax],al
  407905:	push   ebp
  407906:	jmp    0x4078f7
  407908:	add    ah,0x2c
  40790b:	push   0xffffffff
  40790d:	imul   eax,DWORD PTR [esi+0x280874fb],0x2fffa767
  407917:	mov    DWORD PTR [ebp-0x4],eax
  40791a:	mov    eax,0x50413859
  40791f:	push   0x80200001
  407924:	push   DWORD PTR [ebp+0x28]
  407927:	call   0xfd707722
  40792c:	addr16 pop ecx
  40792e:	jmp    0x363f7871
  407933:	and    BYTE PTR [eax],ch
  407935:	inc    ecx
  407936:	and    ch,bh
  407938:	je     0x407942
  40793a:	cmp    DWORD PTR [ecx+0x27],eax
  40793d:	std    
  40793e:	dec    BYTE PTR [edx+0x3c]
  407941:	jne    0x407938
  407943:	inc    edx
  407944:	mov    dh,0x7
  407946:	loope  0x407943
  407948:	imul   edi,edi,0xffffffe6
  40794b:	pusha  
  40794c:	inc    ecx
  40794d:	add    al,0x39
  40794f:	adc    al,0x89
  407951:	in     al,dx
  407952:	mov    eax,0xcef75f6d
  407957:	call   0x753c:0xf9c5458e
  40795e:	sub    DWORD PTR [edx-0x125ef44a],ecx
  407964:	mov    esi,0x2eae00ff
  407969:	inc    ebx
  40796a:	bsf    esi,ebx
  40796d:	add    DWORD PTR [eax],eax
  40796f:	cmp    DWORD PTR [edx-0x3a],esp
  407972:	idiv   DWORD PTR [ecx]
  407974:	sub    DWORD PTR [ebx],eax
  407976:	add    BYTE PTR [esi+0x64],dh
  407979:	aaa    
  40797a:	(bad)  
  40797b:	sub    DWORD PTR ds:[ebx],eax
  40797e:	push   0x39
  407980:	aas    
  407981:	add    ebp,DWORD PTR [edx+0x39]
  407984:	dec    edi
  407985:	add    ecx,DWORD PTR [ebp-0x732d0b0c]
  40798b:	mov    esp,0x5eff33fd
  407990:	cdq    
  407991:	cmp    al,0x75
  407993:	push   ecx
  407994:	loop   0x40794b
  407996:	sti    
  407997:	popa   
  407998:	xor    edi,DWORD PTR [esi+0x431e46ff]
  40799e:	je     0x4079d4
  4079a0:	add    BYTE PTR [edx-0x54d6c6ff],al
  4079a6:	int3   
  4079a7:	popa   
  4079a8:	push   0x59acff03
  4079ad:	sub    edi,DWORD PTR [ecx]
  4079af:	iret   
  4079b0:	sub    DWORD PTR [ebx],edi
  4079b2:	push   eax
  4079b3:	ret    0xb8ff
  4079b6:	mov    DWORD PTR [ebx+esi*1-0x2ff9c42a],esi
  4079bd:	cmp    ch,BYTE PTR [eax+edx*2]
  4079c0:	push   0xffffffce
  4079c2:	cmp    eax,eax
  4079c4:	test   BYTE PTR [ecx-0x2ec511cd],bh
  4079ca:	mov    ebx,0xb63a9000
  4079cf:	scas   al,BYTE PTR es:[edi]
  4079d0:	fisub  WORD PTR [edx+0x79fd4c]
  4079d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079d7:	jno    0x4079a2
  4079d9:	xor    bl,BYTE PTR [esi-0x1b4b39c5]
  4079df:	sub    edi,DWORD PTR [ebx-0x3fc47194]
  4079e5:	test   BYTE PTR [ebp+0x133aae33],cl
  4079eb:	add    al,0x11
  4079ed:	push   0x399ec4b0
  4079f2:	xor    al,0x34
  4079f4:	mov    ?,WORD PTR [edx]
  4079f6:	cmp    ax,WORD PTR [esp+ecx*1]
  4079fa:	push   ecx
  4079fb:	mov    ds:0x8d563ad5,eax
  407a00:	mov    ah,0x1f
  407a02:	push   esi
  407a03:	cmp    esi,DWORD PTR [esi-0x5b]
  407a06:	call   0xa8392eb6
  407a0b:	add    esp,DWORD PTR [esi+0x74]
  407a0e:	cmp    DWORD PTR [ebx],esi
  407a10:	pop    esi
  407a11:	cmp    ch,BYTE PTR [esi]
  407a13:	mov    cl,0x42
  407a15:	sub    BYTE PTR [ebp+0x703a4e68],dh
  407a1b:	adc    DWORD PTR [ebp+0x32],0xffd33b16
  407a22:	adc    BYTE PTR [ebx+0x3ae8bf70],0xe4
  407a29:	xor    dh,dh
  407a2b:	cmp    ah,BYTE PTR [esi]
  407a2d:	cmp    al,BYTE PTR [eax]
  407a2f:	jl     0x407a31
  407a31:	sub    BYTE PTR ss:[ecx],dh
  407a34:	cmp    al,0x52
  407a36:	cmp    DWORD PTR [ecx-0xce9d94],ecx
  407a3c:	(bad)  
  407a3e:	cmp    DWORD PTR [edi-0x64],esp
  407a41:	std    
  407a42:	sar    bh,0xcd
  407a45:	imul   esi,DWORD PTR [eax],0x3933c6f7
  407a4b:	jne    0x407a3a
  407a4d:	adc    dl,BYTE PTR [edx]
  407a4f:	lods   eax,DWORD PTR ds:[esi]
  407a50:	mov    dh,0x23
  407a52:	xchg   DWORD PTR [ebp-0xc6f473],eax
  407a58:	push   0x51
  407a5a:	and    al,0xf7
  407a5c:	sahf   
  407a5d:	add    eax,DWORD PTR [eax]
  407a5f:	jne    0x407a41
  407a61:	mov    bh,0x7b
  407a63:	loopne 0x4079fb
  407a65:	jae    0x407aa0
  407a67:	add    ch,bh
  407a69:	fnstcw WORD PTR [esi-0x43]
  407a6c:	lea    ebp,[ebx+0x39]
  407a6f:	(bad)  
  407a70:	jmp    0x2cc35043
  407a75:	bound  esi,QWORD PTR [ecx]
  407a77:	jmp    DWORD PTR [esi+0x3a]
  407a7a:	mov    ah,0x52
  407a7c:	sar    DWORD PTR [edx],1
  407a7e:	add    bh,ch
  407a80:	xchg   edi,eax
  407a81:	inc    ebx
  407a82:	mov    bl,0x7
  407a84:	inc    ecx
  407a85:	mov    ah,BYTE PTR [ebx-0x1]
  407a88:	inc    esi
  407a89:	xor    esi,DWORD PTR [ebx-0x14]
  407a8c:	and    edi,DWORD PTR ss:[ecx]
  407a8f:	(bad)  
  407a90:	mov    esp,0x87a42832
  407a95:	add    BYTE PTR [ebx],dl
  407a97:	cmp    edi,edi
  407a99:	pop    esp
  407a9a:	and    dh,BYTE PTR [ecx]
  407a9c:	call   FWORD PTR [esi]
  407a9e:	add    esi,DWORD PTR [ebx+0x62a80107]
  407aa4:	dec    DWORD PTR [esi]
  407aa6:	jae    0x407b1b
  407aa8:	in     al,0x0
  407aaa:	das    
  407aab:	idiv   esi
  407aad:	jmp    FWORD PTR [ebp+0x6e88e805]
  407ab3:	idiv   dh
  407ab5:	dec    DWORD PTR [ebp-0x23]
  407ab8:	idiv   bh
  407aba:	pop    ss
  407abb:	div    DWORD PTR [eax+ecx*1-0x18]
  407abf:	jns    0x407a66
  407ac1:	jmp    edi
  407ac3:	div    BYTE PTR [esp+ebx*8-0x108f1]
  407aca:	sub    eax,0xbe6ce80c
  407acf:	idiv   dh
  407ad1:	call   FWORD PTR [ebp-0x20]
  407ad4:	idiv   bh
  407ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad7:	jmp    0x407b4e
  407ad9:	test   eax,0xb5fef697
  407ade:	mov    al,0xee
  407ae0:	(bad)  
  407ae1:	(bad)  
  407ae2:	mov    eax,0xc7ffa86a
  407ae7:	div    BYTE PTR [esp+ebp*8-0x170108d1]
  407aee:	xor    BYTE PTR [ebp-0x56d80002],ah
  407af4:	out    0xf7,eax
  407af6:	daa    
  407af7:	mul    edi
  407af9:	push   ebp
  407afa:	add    BYTE PTR [ecx-0x5200010a],ch
  407b00:	xlat   BYTE PTR ds:[ebx]
  407b01:	idiv   bh
  407b03:	out    0xeb,eax
  407b05:	dec    ecx
  407b06:	test   eax,0xb5fef707
  407b0b:	xor    bh,ch
  407b0d:	(bad)  
  407b0e:	jmp    DWORD PTR [edi]
  407b10:	imul   ecx,DWORD PTR [ebx],0xe8049dff
  407b16:	cmp    eax,0xfffef726
  407b1b:	in     eax,dx
  407b1c:	repz idiv bh
  407b1f:	daa    
  407b20:	in     al,dx
  407b21:	sub    eax,0x391239a9
  407b26:	(bad)  
  407b27:	jl     0x407b3a
  407b29:	sub    edx,DWORD PTR [ecx+0x2f]
  407b2c:	(bad)  
  407b2d:	cmp    bh,bh
  407b2f:	lods   al,BYTE PTR ds:[esi]
  407b30:	xor    eax,0x29a2782b
  407b35:	add    ecx,ecx
  407b37:	sti    
  407b38:	push   ebp
  407b39:	add    edx,DWORD PTR [ebp-0x3e]
  407b3c:	dec    ebp
  407b3d:	test   ah,al
  407b3f:	add    eax,0x266a03d4
  407b44:	dec    esi
  407b45:	scas   al,BYTE PTR es:[edi]
  407b46:	pop    es
  407b47:	loope  0x407b32
  407b49:	popa   
  407b4a:	(bad)  
  407b4b:	out    dx,al
  407b4c:	mov    al,0xbd
  407b4e:	sti    
  407b4f:	push   ecx
  407b50:	imul   edi,edx,0x40
  407b53:	cmp    DWORD PTR [esi-0x12],ebp
  407b56:	pop    ebx
  407b57:	and    al,ch
  407b59:	add    edi,edi
  407b5b:	inc    esp
  407b5c:	xor    DWORD PTR [ebx],ebp
  407b5e:	test   BYTE PTR [eax],0xc4
  407b61:	xchg   esi,eax
  407b62:	cmp    BYTE PTR [eax-0x5],ch
  407b65:	push   eax
  407b66:	ret    0x1eff
  407b69:	sub    eax,DWORD PTR [ebx]
  407b6b:	add    BYTE PTR [ecx-0x6ef85182],bh
  407b71:	jge    0x407ba9
  407b73:	call   FWORD PTR [esi-0x69045252]
  407b79:	sub    al,0xb
  407b7b:	call   0xff79026a
  407b80:	jo     0x407b6d
  407b82:	(bad)  
  407b83:	jmp    ebp
  407b85:	mov    eax,ds:0xf57d8126
  407b8a:	das    
  407b8b:	jmp    FWORD PTR [esi-0x54]
  407b8e:	mov    ebp,0xadf609fb
  407b93:	divps  xmm6,XMMWORD PTR [edi+eax*1-0x18]
  407b98:	xor    BYTE PTR [edx+0x3],dh
  407b9b:	add    BYTE PTR [edx+0x0],al
  407b9e:	sub    DWORD PTR [eax],ecx
  407ba0:	mov    esp,0x3903e987
  407ba5:	aas    
  407ba6:	lods   al,BYTE PTR ds:[esi]
  407ba7:	cmp    edi,DWORD PTR [ecx]
  407ba9:	add    cl,ch
  407bab:	add    esi,esi
  407bad:	mov    esp,0x3e37fc
  407bb2:	jmp    0xe8e99a64
  407bb7:	lods   eax,DWORD PTR ds:[esi]
  407bb8:	push   ss
  407bb9:	test   eax,0x2c7486e8
  407bbe:	cmp    DWORD PTR [ecx+0x37d62bbc],ecx
  407bc4:	add    dh,bh
  407bc6:	iret   
  407bc7:	aad    0xb1
  407bc9:	out    dx,al
  407bca:	ss push esp
  407bcc:	cmp    cl,ah
  407bce:	xor    al,0x43
  407bd0:	add    al,0x39
  407bd2:	or     ebp,DWORD PTR [ecx+0x1c2b38b0]
  407bd8:	mov    DWORD PTR [ebx+eiz*1-0x3031c84a],edi
  407bdf:	jae    0x407b62
  407be1:	int    0x2e
  407be3:	sahf   
  407be4:	aaa    
  407be5:	imul   esi,DWORD PTR [edi],0xacb6141c
  407beb:	fsubr  QWORD PTR [ebx]
  407bed:	das    
  407bee:	imul   eax,DWORD PTR [esi+0x797cb037],0x2f
  407bf5:	sahf   
  407bf6:	ss loop 0x407c3c
  407bf9:	or     eax,0x9d7969e2
  407bfe:	cs data16 aaa 
  407c01:	cmp    DWORD PTR [edi+edi*8+0x46367eab],ebp
  407c08:	jbe    0x407c80
  407c0a:	ins    BYTE PTR es:[edi],dx
  407c0b:	cmp    eax,0x46366e2f
  407c10:	jno    0x407c7b
  407c12:	cs ds aaa 
  407c15:	pop    esi
  407c16:	lods   al,BYTE PTR ds:[esi]
  407c17:	jmp    eax
  407c19:	and    al,BYTE PTR [edi-0x37]
  407c1c:	cs push es
  407c1e:	aaa    
  407c1f:	mov    ch,0x19
  407c21:	push   ss
  407c22:	aaa    
  407c23:	call   DWORD PTR [ecx]
  407c25:	push   esi
  407c26:	pop    esi
  407c27:	call   DWORD PTR [esi]
  407c29:	add    BYTE PTR [esi-0x45],ch
  407c2c:	test   DWORD PTR [edx],0x57535b5
  407c32:	push   ebp
  407c33:	mov    ah,0x79
  407c35:	jmp    0xe602c374
  407c3a:	cmp    cl,bl
  407c3c:	mov    bh,ch
  407c3e:	mov    ebx,0x3d53fc3c
  407c43:	stos   BYTE PTR es:[edi],al
  407c44:	pop    ss
  407c45:	fmulp  st(1),st
  407c47:	std    
  407c48:	out    0x2d,eax
  407c4a:	pop    eax
  407c4b:	xor    eax,0x39f960ff
  407c50:	push   0xffc0e5ce
  407c55:	mov    ebp,0x2828d9e9
  407c5a:	cmp    eax,0x22e17535
  407c5f:	(bad)  
  407c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c62:	push   gs
  407c64:	out    0xe0,al
  407c66:	cmc    
  407c67:	xor    eax,0x3aeb67
  407c6c:	or     BYTE PTR [esi-0x25180217],0x6f
  407c73:	xor    eax,0xfa3511ff
  407c78:	inc    eax
  407c79:	jmp    0xc09c67cd
  407c7e:	jne    0x407cb5
  407c80:	(bad)  
  407c81:	fdiv   QWORD PTR [edx]
  407c83:	sub    BYTE PTR [eax],al
  407c85:	pop    esi
  407c86:	inc    edi
  407c87:	xor    eax,0xc070e968
  407c8c:	inc    eax
  407c8e:	add    BYTE PTR [eax],bh
  407c90:	add    BYTE PTR [eax],al
  407c92:	add    al,dl
  407c94:	in     eax,dx
  407c95:	je     0x407c9f
  407c97:	or     bl,bl
  407c99:	std    
  407c9a:	dec    DWORD PTR [edi]
  407c9c:	out    dx,al
  407c9d:	je     0x407c9b
  407c9f:	pop    ds
  407ca0:	jo     0x407ca9
  407ca2:	call   0x3f1d09
  407ca7:	or     DWORD PTR [edi-0x760afffd],edi
  407cad:	in     al,dx
  407cae:	inc    ebp
  407cb0:	cld    
  407cb1:	out    0xf4,eax
  407cb3:	mov    ebp,esi
  407cb5:	dec    BYTE PTR [ebx]
  407cb7:	push   eax
  407cb8:	cmp    BYTE PTR gs:[eax-0x3],ch
  407cbc:	ss inc eax
  407cbe:	add    BYTE PTR [eax+0x1fab88e8],dh
  407cc4:	jmp    0x407d15
  407cc6:	push   eax
  407cc7:	push   0xceeefffc
  407ccc:	arpl   WORD PTR [edx],sp
  407cce:	cmp    ah,BYTE PTR [ecx]
  407cd0:	cld    
  407cd1:	dec    edi
  407cd2:	jmp    DWORD PTR ds:0x8c50e804
  407cd8:	jmp    0xef00:0x17858fe
  407cdf:	pop    esi
  407ce0:	fs daa 
  407ce2:	cmp    dl,BYTE PTR [ecx]
  407ce4:	cld    
  407ce5:	dec    edi
  407ce6:	jmp    DWORD PTR ds:0xdc3ce804
  407cec:	jmp    0xfffe:0xd338e8fe
  407cf3:	add    cl,ch
  407cf5:	rol    DWORD PTR [edi],0x0
  407cf8:	inc    ebp
  407cf9:	xchg   esp,ebp
  407cfb:	and    esp,0xfffffff7
  407cfe:	imul   eax,DWORD PTR [eax],0x75ff193a
  407d04:	mov    al,ch
  407d06:	mov    DWORD PTR [edi+ebx*8+0x394588ea],esp
  407d0d:	retf   
  407d0e:	test   eax,0xb4b6e19
  407d13:	call   0xff753ae4
  407d18:	ror    DWORD PTR [ecx],cl
  407d1a:	xor    eax,0x88bf4175
  407d1f:	dec    DWORD PTR [esi-0x1b]
  407d22:	test   eax,0xb93461b
  407d27:	call   0xff7592e4
  407d2c:	ss xchg ebp,eax
  407d2e:	aaa    
  407d2f:	jmp    DWORD PTR [ecx+eiz*1-0x5225bd5]
  407d36:	xor    al,0xc9
  407d38:	sti    
  407d39:	sbb    eax,0xfdc25503
  407d3e:	add    ah,0xd
  407d41:	and    ebp,DWORD PTR [esi+0x68c7110b]
  407d47:	(bad)  
  407d48:	(bad)  
  407d49:	cs inc ebx
  407d4b:	bsr    eax,DWORD PTR [esi-0x5fc6fffd]
  407d52:	mov    ebp,0x13bcbafb
  407d57:	add    BYTE PTR [eax],al
  407d59:	and    esi,DWORD PTR gs:[esi*2-0x45195d7]
  407d61:	loope  0x407da1
  407d63:	imul   edi,edi,0xfbbdb0c6
  407d69:	push   ecx
  407d6a:	icebp  
  407d6b:	stc    
  407d6c:	inc    eax
  407d6d:	cmp    DWORD PTR [edx-0x655e0452],ecx
  407d73:	push   0xac19a6ff
  407d78:	call   FWORD PTR [esi-0x69af8a7e]
  407d7e:	xor    al,0xb
  407d80:	call   0xff74deff
  407d85:	xchg   ecx,eax
  407d86:	add    BYTE PTR ds:0xd1337e5d,bh
  407d8c:	lods   eax,DWORD PTR ds:[esi]
  407d8d:	xor    cl,al
  407d8f:	call   0x417461c8
  407d94:	popf   
  407d95:	nop
  407d96:	xor    eax,DWORD PTR [esi-0x2d]
  407d99:	(bad)  
  407d9a:	add    cl,ch
  407d9c:	and    al,0x97
  407d9e:	shl    BYTE PTR ds:0x8b2836ae,1
  407da4:	dec    ebx
  407da5:	inc    esi
  407da6:	xor    edx,DWORD PTR [ecx]
  407da8:	jo     0x407d41
  407daa:	xor    ebx,DWORD PTR [esi]
  407dac:	stos   DWORD PTR es:[edi],eax
  407dad:	xchg   edx,eax
  407dae:	mul    BYTE PTR [edi+0xcad2e03]
  407db4:	sub    edi,DWORD PTR [esi+eiz*2+0x6]
  407db8:	xor    al,0x89
  407dba:	test   al,0xe8
  407dbc:	add    eax,DWORD PTR [eax]
  407dbe:	es jb  0x407d5a
  407dc1:	xor    al,0x84
  407dc3:	or     BYTE PTR [ecx],al
  407dc5:	xor    cl,0x32
  407dc8:	out    0x1c,al
  407dca:	stos   DWORD PTR es:[edi],eax
  407dcb:	pop    ecx
  407dcc:	fidiv  WORD PTR [ebx]
  407dce:	popa   
  407dcf:	test   DWORD PTR [ebx],edx
  407dd1:	(bad)
  407dd4:	push   esp
  407dd5:	xor    cl,dl
  407dd7:	fist   DWORD PTR [edx+0x50cfde33]
  407ddd:	add    eax,0xd4772339
  407de2:	iret   
  407de3:	lods   al,BYTE PTR ds:[esi]
  407de4:	loopne 0x407e01
  407de6:	pop    ecx
  407de7:	dec    eax
  407de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407de9:	xor    edx,ecx
  407deb:	mov    al,0x46
  407ded:	xor    esi,DWORD PTR [esi-0x5ecfe3ce]
  407df3:	test   al,0x46
  407df5:	xor    esp,DWORD PTR [esi+0x3900ab48]
  407dfb:	int    0x71
  407dfd:	and    BYTE PTR [edx-0x508affc5],bh
  407e03:	xor    ch,BYTE PTR [ecx-0x2d]
  407e06:	dec    ebx
  407e07:	lods   eax,DWORD PTR ds:[esi]
  407e08:	pop    es
  407e09:	push   ecx
  407e0a:	(bad)  
  407e0b:	pop    esi
  407e0c:	call   FWORD PTR [esi-0xc]
  407e0f:	mov    esp,0xa63ac3fb
  407e14:	sbb    DWORD PTR [esi-0x60],ecx
  407e17:	cli    
  407e18:	out    0xb,eax
  407e1a:	sub    dh,BYTE PTR [ebx]
  407e1c:	call   ebx
  407e1e:	cmp    ah,BYTE PTR [esi-0x6fffc9de]
  407e24:	cli    
  407e25:	out    0xd7,eax
  407e27:	or     esi,DWORD PTR [ebx]
  407e29:	call   DWORD PTR [ebx+0x1e1ba63a]
  407e2f:	lock stc 
  407e31:	out    0xe3,eax
  407e33:	imul   esi,DWORD PTR [ecx],0xffffffff
  407e36:	add    DWORD PTR [esi+esi*8+0x17bce940],0x1a1274ff
  407e41:	sti    
  407e42:	test   DWORD PTR [ebx+0x31],0xc1174368
  407e49:	call   DWORD PTR [edx+0x16]
  407e4c:	xor    esi,DWORD PTR [ebp-0xf]
  407e4f:	push   edx
  407e50:	and    al,0xfe
  407e52:	(bad)  
  407e53:	sub    ebp,DWORD PTR [eax+0x31fc13a9]
  407e59:	imul   esp,ebp,0xd107ab2b
  407e5f:	imul   esi,DWORD PTR [edx],0xab0bb6ff
  407e65:	sti    
  407e66:	scas   al,BYTE PTR es:[edi]
  407e67:	cmp    ecx,0x31561be7
  407e6d:	push   DWORD PTR [eax+0x3bfffbfc]
  407e73:	cs and al,0x81
  407e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e77:	inc    edx
  407e78:	sub    edi,edi
  407e7a:	add    BYTE PTR [edi+0x30fc4580],dh
  407e80:	in     eax,dx
  407e81:	je     0x407e93
  407e83:	pop    es
  407e84:	js     0x407e91
  407e86:	call   0xffa6468b
  407e8b:	dec    DWORD PTR [ebx-0x607af143]
  407e91:	cld    
  407e92:	(bad)  
  407e93:	call   FWORD PTR [edi]
  407e95:	dec    eax
  407e96:	test   DWORD PTR [eax],0xc6fffd50
  407e9c:	(bad)  
  407e9d:	jmp    0xfda086a0
  407ea2:	imul   eax,DWORD PTR [eax],0x69fd7a
  407ea8:	jp     0x407ea7
  407eaa:	mov    WORD PTR [ebp+0x1c],es
  407ead:	dec    ebp
  407eae:	mov    WORD PTR [ebp-0x109b4],es
  407eb4:	lock in eax,dx
  407eb6:	je     0x407eb0
  407eb8:	aaa    
  407eb9:	js     0x407eb6
  407ebb:	call   0x3fe3ea
  407ec0:	or     edi,DWORD PTR [ebp+0x33390573]
  407ec6:	add    BYTE PTR [eax],al
  407ec8:	adc    BYTE PTR [ebp-0x3aed734],dl
  407ece:	(bad)  
  407ecf:	jne    0x407ec1
  407ed1:	adc    al,0x2d
  407ed3:	test   eax,0x8b4fef07
  407ed8:	mov    al,ds:0x9ff484b0
  407edd:	out    dx,al
  407ede:	(bad)  
  407edf:	push   eax
  407ee0:	xor    dl,BYTE PTR [ebx*1-0x77117857]
  407ee7:	test   DWORD PTR [eax+0xfffef6],eax
  407eed:	test   al,0x6a
  407eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ef0:	call   edi
  407ef2:	xchg   ecx,eax
  407ef3:	jmp    DWORD PTR [edi+0x39]
  407ef6:	and    ah,ch
  407ef8:	inc    eax
  407ef9:	cmp    DWORD PTR [edx+0x79a6f077],eax
  407eff:	xor    edi,edi
  407f01:	or     al,0x23
  407f03:	sbb    esi,DWORD PTR [esi-0x1f]
  407f06:	test   eax,0xb2bc8930
  407f0b:	cmp    bh,bh
  407f0d:	jle    0x407f5b
  407f0f:	add    ebp,DWORD PTR [eax+0x4c]
  407f12:	faddp  st(2),st
  407f14:	jmp    FWORD PTR [edi-0x6d]
  407f17:	xor    al,0xf7
  407f19:	shl    WORD PTR [eax],0x75
  407f1d:	sub    eax,0x56a7cccf
  407f22:	icebp  
  407f23:	jp     0x407eaa
  407f25:	popa   
  407f26:	icebp  
  407f27:	xor    bh,bh
  407f29:	mov    edx,0x3ef71fa3
  407f2e:	fld    DWORD PTR [ebx]
  407f30:	je     0x407f9b
  407f32:	xchg   ecx,eax
  407f33:	add    eax,DWORD PTR [eax]
  407f35:	push   ds
  407f36:	fcomp  DWORD PTR [ebx+0x35863d0]
  407f3c:	jmp    esp
  407f3e:	adc    eax,0x2f16ff39
  407f43:	mov    dh,0x7
  407f45:	and    DWORD PTR [ebx],eax
  407f47:	cmp    edi,edi
  407f49:	push   es
  407f4a:	add    BYTE PTR [edx],0x0
  407f4d:	push   cs
  407f4e:	push   0x3300da9b
  407f53:	fadd   DWORD PTR [ebx]
  407f55:	jmp    DWORD PTR [ebp+eax*2+0x3ee6ff38]
  407f5c:	mov    dh,0x7
  407f5e:	ror    DWORD PTR [edx-0x652900c6],1
  407f64:	ins    DWORD PTR es:[edi],dx
  407f65:	call   0x70f630
  407f6a:	dec    ebp
  407f6b:	sub    DWORD PTR [ebx-0x69ff4101],ebx
  407f71:	jno    0x407f94
  407f73:	push   ecx
  407f74:	jecxz  0x407f38
  407f76:	scas   al,BYTE PTR es:[edi]
  407f77:	cs pop esp
  407f79:	sbb    ebp,DWORD PTR [esi+0x24308e2f]
  407f7f:	clc    
  407f80:	nop
  407f81:	jne    0x407f03
  407f83:	das    
  407f84:	jle    0x407f21
  407f86:	cmp    DWORD PTR [eax],eax
  407f88:	xchg   BYTE PTR [ecx+0x11],dh
  407f8b:	dec    ebx
  407f8c:	mov    bl,0xc2
  407f8e:	jle    0x407fbe
  407f90:	pushf  
  407f91:	sbb    ebp,DWORD PTR [esi+0x2f]
  407f94:	pop    esi
  407f95:	xor    ah,ah
  407f97:	test   DWORD PTR [eax-0x73],0x304e2f70
  407f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9f:	sbb    al,0x3e
  407fa1:	xor    BYTE PTR [esi+0x18],dl
  407fa4:	sub    DWORD PTR [edi+0x4e],esp
  407fa7:	das    
  407fa8:	ss jbe 0x407ffc
  407fab:	aaa    
  407fac:	xor    BYTE PTR cs:[ecx+0x75],dl
  407fb0:	dec    ebp
  407fb1:	xor    BYTE PTR [esi],dh
  407fb3:	das    
  407fb4:	push   esp
  407fb5:	xor    eax,DWORD PTR [eax]
  407fb7:	es das 
  407fb9:	push   ss
  407fba:	xor    BYTE PTR [esp+edi*8+0x1836b60d],ch
  407fc1:	cmp    eax,0xfe2f1631
  407fc6:	jne    0x407fd1
  407fc8:	aaa    
  407fc9:	imul   BYTE PTR [edi]
  407fcb:	adc    DWORD PTR [ecx+0x2efe3045],ecx
  407fd1:	sub    al,0x2c
  407fd3:	loopne 0x40800c
  407fd5:	fild   QWORD PTR [edi]
  407fd7:	out    dx,al
  407fd8:	cs pop esp
  407fda:	xor    cl,dl
  407fdc:	and    dl,BYTE PTR [edi+0x4]
  407fdf:	cmp    DWORD PTR [ecx],edi
  407fe1:	stos   DWORD PTR es:[edi],eax
  407fe2:	add    BYTE PTR [ecx],bh
  407fe4:	aad    0x71
  407fe6:	and    dh,cl
  407fe8:	mov    ah,0xff
  407fea:	in     al,0x22
  407fec:	cmp    DWORD PTR [eax-0x4004f152],ebp
  407ff2:	sbb    eax,0xe3e4a6a4
  407ff7:	jne    0x408027
  407ff9:	dec    edi
  407ffa:	xor    DWORD PTR [edi+0x66],0xbe858eff
  408001:	addr16 jmp 0x11fe9f41
  408007:	in     al,0xe9
  408009:	inc    eax
  40800a:	jmp    0xe1b5ad79
  40800f:	and    ah,ch
  408011:	enter  0x2666,0xc8
  408015:	addr16 call 0xc1fe9f55
  40801b:	add    bl,dh
  40801d:	jmp    0x2dcb6962
  408022:	jne    0x408015
  408024:	xor    dl,BYTE PTR [ecx]
  408026:	leave  
  408027:	ds push ds
  408029:	sbb    BYTE PTR ds:0xc92f168d,bh
  40802f:	sub    edi,DWORD PTR ds:0x5972542e
  408035:	add    esp,0x69d7071d
  40803b:	jmp    0x953f8b00
  408040:	and    ah,BYTE PTR [esi]
  408042:	pop    ebp
  408043:	dec    eax
  408044:	sub    ax,0xa489
  408048:	pop    esi
  408049:	jns    0x408080
  40804b:	jl     0x40802f
  40804d:	sar    bh,0x61
  408050:	or     BYTE PTR [ecx-0x7fc2d7d9],ch
  408056:	aas    
  408057:	jmp    0xe9fc024b
  40805c:	cmp    al,BYTE PTR [eax]
  40805e:	push   0xffc0d0a7
  408063:	push   DWORD PTR [esi]
  408065:	or     al,0xb0
  408067:	jbe    0x408049
  408069:	add    DWORD PTR [ebx],ecx
  40806b:	rol    BYTE PTR [esi+ebp*2],0x3f
  40806f:	or     al,0x1
  408072:	je     0x40819f
  408078:	jo     0x408006
  40807a:	lds    edi,FWORD PTR [edx]
  40807c:	push   ecx
  40807d:	add    al,0xe8
  40807f:	in     eax,dx
  408080:	add    BYTE PTR [esp+eax*1+0x0],al
  408084:	pop    edx
  408085:	mov    ds:0xe9e84fbf,eax
  40808a:	lahf   
  40808b:	(bad)  
  40808c:	jmp    DWORD PTR [eax]
  40808e:	push   esp
  40808f:	add    BYTE PTR [bx+si-0x41f2],dl
  408094:	push   0x401731
  408099:	mov    al,0xde
  40809b:	je     0x4080a5
  40809d:	clc    
  40809e:	jbe    0x408068
  4080a0:	(bad)  
  4080a1:	out    dx,eax
  4080a2:	cmp    BYTE PTR [edi+0x1],ah
  4080a5:	pusha  
  4080a6:	push   cs
  4080a7:	mov    esi,0x40171b68
  4080ac:	add    BYTE PTR [eax-0x7f78b22],ah
  4080b2:	or     al,0xff
  4080b5:	pop    edi
  4080b6:	or     DWORD PTR [edx-0x1521b05d],esi
  4080bc:	inc    ebx
  4080bd:	mov    eax,0x1041399a
  4080c2:	push   esi
  4080c3:	out    0x41,eax
  4080c5:	xchg   esi,eax
  4080c6:	add    DWORD PTR [eax],eax
  4080c8:	or     esp,DWORD PTR [eax+0x75]
  4080cb:	xor    edx,DWORD PTR [esi+0x38]
  4080ce:	lods   al,BYTE PTR gs:[esi]
  4080d0:	dec    DWORD PTR [edi]
  4080d2:	push   edx
  4080d3:	dec    edi
  4080d4:	push   0xbeef00e0
  4080d9:	mov    cl,dl
  4080db:	cmp    DWORD PTR [ecx+0x39],eax
  4080de:	pop    ss
  4080df:	sar    esi,cl
  4080e1:	fs pop ds
  4080e3:	sbb    edx,DWORD PTR [ebp+0x0]
  4080e6:	add    DWORD PTR [esi+0x2d],eax
  4080e9:	pop    eax
  4080ea:	popa   
  4080eb:	sbb    BYTE PTR [ebx],al
  4080ed:	out    dx,eax
  4080ee:	xchg   DWORD PTR [esi+0x17783a48],edi
  4080f4:	sar    esi,cl
  4080f6:	sub    al,0x2f
  4080f8:	sbb    eax,DWORD PTR [ecx-0x7f]
  4080fb:	lea    ebp,ds:0x2cba14e8
  408101:	call   DWORD PTR [edx+0x577fc517]
  408107:	pop    ss
  408108:	mov    dh,0xf9
  40810a:	imul   DWORD PTR [edx-0x4a3f4010]
  408110:	sub    al,0xff
  408112:	jle    0x4080bc
  408114:	pop    ebp
  408115:	cmp    BYTE PTR [esi],bh
  408117:	xchg   BYTE PTR ss:[ebp+0x6e],al
  40811b:	int    0x2c
  40811d:	push   0x43
  40811f:	(bad)  
  408120:	mov    dh,0x7
  408122:	push   ecx
  408123:	fldcw  WORD PTR ds:0xe05056ff
  408129:	inc    ah
  40812b:	sbb    edi,DWORD PTR cs:[ecx+0x6a2cf547]
  408132:	sbb    eax,0x2107b6de
  408137:	shr    DWORD PTR ds:0x34922eff,cl
  40813d:	cmp    bh,BYTE PTR [eax+0x19]
  408140:	sub    al,0x35
  408142:	jge    0x408184
  408144:	ret    0x17ff
  408147:	lods   eax,DWORD PTR ds:[esi]
  408148:	cli    
  408149:	out    0x0,eax
  40814b:	dec    eax
  40814c:	sub    al,0x2c
  40814e:	call   DWORD PTR [ecx+0x3940e92a]
  408154:	add    DWORD PTR [ecx],0x69003900
  40815a:	sub    al,0x64
  40815c:	clc    
  40815d:	ror    BYTE PTR [esp+eiz*8],1
  408160:	sub    edx,esi
  408162:	sub    al,0x64
  408164:	sub    al,0xce
  408166:	mov    dh,0x3e
  408168:	sbb    BYTE PTR [ebx+0x63],ch
  40816b:	into   
  40816c:	sub    ebx,DWORD PTR [esi]
  40816e:	into   
  40816f:	icebp  
  408170:	ds in  eax,dx
  408172:	add    esp,DWORD PTR [edi+esi*2-0x43]
  408176:	cmp    BYTE PTR [ebp+0x50],0x9e
  40817a:	sub    al,0xae
  40817c:	jge    0x4081a2
  40817e:	xor    BYTE PTR [ecx],cl
  408180:	sub    ebx,DWORD PTR [esp+edx*1]
  408183:	sahf   
  408184:	mov    ch,0xdc
  408186:	sbb    edi,edi
  408188:	mov    ah,0xe8
  40818a:	add    eax,DWORD PTR [edx+0x40]
  40818d:	out    dx,al
  40818e:	xchg   bl,bh
  408190:	std    
  408191:	call   0x7105f799
  408196:	add    edi,DWORD PTR [ecx]
  408198:	add    cl,ch
  40819a:	inc    esp
  40819b:	hlt    
  40819c:	xor    ebx,DWORD PTR [esi+0x4]
  40819f:	cmp    DWORD PTR [eax],eax
  4081a1:	ret    
  4081a2:	add    edx,ebx
  4081a4:	inc    edx
  4081a6:	add    esp,ebx
  4081a8:	push   DWORD PTR [ebx-0x3a]
  4081ab:	dec    edx
  4081ac:	shr    BYTE PTR [ebx-0x7a],1
  4081af:	add    BYTE PTR [ebp+0x33],cl
  4081b2:	ss sub al,0xe9
  4081b5:	sub    dh,BYTE PTR [ebx+ebp*1+0x1b24b536]
  4081bc:	push   ecx
  4081bd:	mov    ch,0xe8
  4081bf:	add    esi,DWORD PTR [edx]
  4081c1:	inc    eax
  4081c2:	popf   
  4081c3:	push   es
  4081c4:	adc    BYTE PTR ds:0x983903eb,al
  4081ca:	xor    ebx,ebx
  4081cc:	jns    0x4081ce
  4081ce:	(bad)  
  4081cf:	mov    ch,0x36
  4081d1:	sbb    BYTE PTR [eax],al
  4081d3:	mov    dl,0x94
  4081d5:	sub    edi,edi
  4081d7:	cdq    
  4081d8:	jno    0x40822a
  4081da:	lea    ebp,[ecx+ebp*1+0x33]
  4081de:	(bad)  
  4081df:	fimul  WORD PTR ds:0x5b02e7d1
  4081e5:	sub    edi,edi
  4081e7:	pusha  
  4081e8:	mov    eax,0x22c6f72f
  4081ed:	sbb    BYTE PTR [ecx+0x6a2b128b],al
  4081f3:	jmp    0x287b8d9a
  4081f8:	cmp    eax,0x6a99b52b
  4081fd:	sub    edi,edi
  4081ff:	sahf   
  408200:	call   0x18ae69fb
  408205:	sub    edi,edi
  408207:	pusha  
  408208:	mov    eax,0x6286f723
  40820d:	xchg   esi,eax
  40820e:	call   DWORD PTR [eax]
  408210:	fwait
  408211:	in     eax,0x40
  408213:	jmp    0xf0b5d518
  408218:	jbe    0x40823c
  40821a:	sub    edi,edi
  40821c:	fsub   QWORD PTR [esi+0x22]
  40821f:	imul   eax,DWORD PTR [edx+edx*1+0x416c892b],0xb74eff33
  40822a:	sub    ah,BYTE PTR [edi+0x16]
  40822d:	pop    esi
  40822e:	mov    edi,0x2fc83dff
  408233:	div    DWORD PTR [esi]
  408235:	adc    ch,BYTE PTR [ebx]
  408237:	jne    0x408216
  408239:	push   edx
  40823a:	mov    edx,0x776226a4
  40823f:	test   DWORD PTR [ecx],edx
  408241:	push   0x29
  408243:	inc    DWORD PTR [ebx-0x2dc867c6]
  408249:	std    
  40824a:	sub    esi,edi
  40824c:	add    BYTE PTR [ebp-0xc],cl
  40824f:	idiv   bh
  408251:	pop    es
  408252:	xlat   BYTE PTR ds:[ebx]
  408253:	je     0x408261
  408255:	cmp    BYTE PTR [ecx],dh
  408257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408258:	jmp    edi
  40825a:	lods   al,BYTE PTR ds:[esi]
  40825b:	test   ah,bl
  40825d:	pmovmskb edi,mm6
  408260:	lea    ebx,[ebp-0x23]
  408263:	idiv   bh
  408265:	pop    es
  408266:	dec    esi
  408267:	addr16 dec eax
  408269:	sub    eax,DWORD PTR [ebx-0x1]
  40826c:	dec    BYTE PTR [ebp-0x13]
  40826f:	idiv   bh
  408271:	xchg   esi,edx
  408273:	xor    al,0x5c
  408275:	cmp    DWORD PTR [ebx-0x1],eax
  408278:	out    0x0,eax
  40827a:	nop
  40827b:	mov    al,ds:0xbdabfffe
  408280:	jae    0x40829b
  408282:	adc    ebx,DWORD PTR [eax-0x29380821]
  408288:	add    esi,DWORD PTR [ebp-0x70]
  40828b:	(bad)  
  40828c:	das    
  40828d:	(bad)  
  40828e:	sbb    eax,0x7fff6b5
  408293:	dec    ebp
  408294:	out    0xdd,eax
  408296:	icebp  
  408297:	aad    0xfe
  408299:	jmp    0x408227
  40829b:	sub    bh,BYTE PTR [edi-0x18b2a18c]
  4082a1:	shl    DWORD PTR [ecx-0x3238012a],1
  4082a7:	mov    ah,0xf6
  4082a9:	inc    DWORD PTR [edi]
  4082ab:	adc    BYTE PTR [eax],al
  4082ad:	add    BYTE PTR [eax-0x58],ah
  4082b0:	test   al,dl
  4082b2:	(bad)  
  4082b4:	(bad)  
  4082b5:	push   eax
  4082b6:	js     0x40830a
  4082b8:	cmp    al,BYTE PTR [ecx+0x20]
  4082bb:	(bad)  
  4082bc:	mov    ah,0xf0
  4082be:	dec    edi
  4082bf:	(bad)  
  4082c0:	(bad)  
  4082c1:	dec    ebp
  4082c3:	xor    bh,ah
  4082c5:	lds    edi,FWORD PTR [ecx]
  4082c7:	mov    ebx,0xa3c0ff29
  4082cc:	dec    esi
  4082cd:	test   DWORD PTR [esi],0x1dbd8602
  4082d3:	xor    ch,BYTE PTR [ecx]
  4082d5:	(bad)  
  4082d6:	cmp    DWORD PTR [edx],esp
  4082d8:	jg     0x408275
  4082da:	cmp    DWORD PTR [edi],edx
  4082dc:	add    eax,DWORD PTR [ebx+0x3152ac00]
  4082e2:	jmp    esi
  4082e4:	push   ss
  4082e5:	clc    
  4082e6:	sub    DWORD PTR [edi-0x45fffcea],0x7b
  4082ed:	sbb    al,0xf7
  4082ef:	into   
  4082f0:	inc    ecx
  4082f1:	add    al,0xf
  4082f3:	mov    ebp,0x39000397
  4082f8:	mov    edi,0x98a60013
  4082fd:	sub    BYTE PTR [ebp+0x41],dh
  408300:	vpmadcsswd ymm9,ymm4,ymm2,YMMWORD PTR [ecx-0x76724ad7]
  40830a:	call   DWORD PTR [esi-0x161803ed]
  408310:	mov    al,ds:0xf386ff28
  408315:	sbb    esi,edi
  408317:	jle    0x4082ca
  408319:	sub    BYTE PTR [ebp+0x41],dh
  40831c:	jg     0x4082e4
  40831e:	popf   
  40831f:	outs   dx,BYTE PTR ds:[esi]
  408320:	mov    eax,ds:0xd15db528
  408325:	sub    bh,bh
  408327:	pop    esi
  408328:	dec    ebx
  408329:	sti    
  40832a:	out    0xd,eax
  40832c:	cdq    
  40832d:	sub    bh,bh
  40832f:	dec    esi
  408330:	stos   DWORD PTR es:[edi],eax
  408331:	dec    ebx
  408332:	test   DWORD PTR [esi-0x17],0xbf317528
  408339:	aas    
  40833a:	popf   
  40833b:	xlat   BYTE PTR ss:[ebx]
  40833d:	sub    BYTE PTR [ebp+0x291e010d],dh
  408343:	add    BYTE PTR [esi],ah
  408345:	sub    BYTE PTR [ebx+edi*8+0x29770916],dl
  40834c:	push   ss
  40834d:	test   BYTE PTR [eax+edx*2+0x6],cl
  408351:	sub    BYTE PTR [esi],al
  408353:	add    al,0x8d
  408355:	or     ebp,DWORD PTR [edx+0x67]
  408358:	jmp    0x3d69798c
  40835d:	lods   eax,DWORD PTR ds:[esi]
  40835e:	fidivr DWORD PTR [esp+esi*4+0x4c]
  408362:	fisubr WORD PTR [eax]
  408364:	out    0x27,al
  408366:	sbb    DWORD PTR [ecx],ebp
  408368:	fs clc 
  40836a:	ror    BYTE PTR [edi+0x1cce27b4],0x43
  408371:	call   0x7bd0:0xf84c28e8
  408378:	pushf  
  408379:	daa    
  40837a:	mov    dh,0x28
  40837c:	in     al,dx
  40837d:	sbb    al,0xb6
  40837f:	sub    BYTE PTR [esi-0x599c62e8],ch
  408385:	daa    
  408386:	sahf   
  408387:	outs   dx,BYTE PTR ds:[esi]
  408388:	lea    ebp,[edi]
  40838a:	xchg   esi,eax
  40838b:	sub    BYTE PTR [ecx-0x71d7b6e7],ah
  408391:	daa    
  408392:	cmp    al,0x1b
  408394:	mov    fs,WORD PTR [edi]
  408396:	jle    0x4083b3
  408398:	pop    edi
  408399:	pusha  
  40839a:	jbe    0x4083c4
  40839c:	jbe    0x40840b
  40839e:	lea    esi,[eax]
  4083a0:	outs   dx,BYTE PTR ds:[esi]
  4083a1:	daa    
  4083a2:	push   ecx
  4083a3:	push   esp
  4083a4:	cdq    
  4083a5:	daa    
  4083a6:	pop    esi
  4083a7:	sub    BYTE PTR [eax],al
  4083a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083aa:	dec    esp
  4083ab:	pop    esi
  4083ac:	sub    BYTE PTR [esi+0x18],dl
  4083af:	and    DWORD PTR [ebx+0x4e],esp
  4083b2:	daa    
  4083b3:	inc    esi
  4083b4:	outs   dx,BYTE PTR ds:[esi]
  4083b5:	dec    ecx
  4083b6:	das    
  4083b7:	sub    BYTE PTR ds:[esi],bh
  4083ba:	lods   eax,DWORD PTR ds:[esi]
  4083bb:	jmp    esp
  4083bd:	popa   
  4083be:	lods   eax,DWORD PTR ds:[esi]
  4083bf:	pop    es
  4083c0:	inc    ecx
  4083c1:	mov    ds:0x5126ff25,eax
  4083c6:	ins    DWORD PTR es:[edi],dx
  4083c7:	lock push ss
  4083c9:	push   ecx
  4083ca:	daa    
  4083cb:	call   0xff681e15
  4083d0:	push   cs
  4083d1:	iret   
  4083d2:	cs jmp 0xff67e30c
  4083d8:	dec    ah
  4083da:	sub    ch,al
  4083dc:	jmp    FWORD PTR [ebp+0x7420ff26]
  4083e2:	hlt    
  4083e3:	(bad)  
  4083e4:	cmp    esp,DWORD PTR [edx+0x14]
  4083e7:	and    DWORD PTR [ebp+0x42ff9a11],0x41
  4083ee:	daa    
  4083ef:	jne    0x4083d2
  4083f1:	xor    ah,BYTE PTR [esi-0x63]
  4083f4:	(bad)  
  4083f5:	push   ds
  4083f6:	jns    0x40843d
  4083f8:	mov    ebp,0x283ac49d
  4083fd:	cmp    eax,0x8c0d3527
  408402:	mov    edi,0xfee8a5ff
  408407:	out    0x1b,eax
  408409:	push   eax
  40840a:	daa    
  40840b:	inc    DWORD PTR [ecx]
  40840d:	add    BYTE PTR [edi-0x17],bh
  408410:	inc    eax
  408411:	jmp    0xe94084c8
  408416:	mov    edx,0x22f17526
  40841b:	mov    al,ds:0x271e76fc
  408420:	jne    0x40848f
  408422:	push   ss
  408423:	lods   eax,DWORD PTR ds:[esi]
  408424:	pop    es
  408425:	push   ecx
  408426:	or     al,0x85
  408428:	call   FWORD PTR [esi+0x1c]
  40842b:	inc    edx
  40842c:	add    al,0xe9
  40842e:	imul   edi,DWORD PTR [ecx-0x14],0xfe2bf968
  408435:	add    bh,bh
  408437:	fisubr WORD PTR [ecx+0x0]
  40843a:	push   0xfffffff7
  40843c:	(bad)  
  40843d:	jne    0x408457
  40843f:	or     dh,BYTE PTR [edx-0x63]
  408442:	pop    edi
  408443:	fisttp QWORD PTR [eax+0x3845c45]
  408449:	add    DWORD PTR [eax],edx
  40844b:	add    cl,BYTE PTR [ebp-0x121c87b]
  408451:	call   eax
  408453:	or     edx,edx
  408455:	jno    0x408467
  408457:	add    cl,BYTE PTR [ebx]
  408459:	rol    BYTE PTR [ebp+ecx*2+0x1e1043c],0x0
  408461:	ja     0x408458
  408463:	mov    DWORD PTR [ebp+0x3b],esi
  408466:	adc    esp,edi
  408468:	mov    WORD PTR [ebp-0x123f9],es
  40846e:	adc    BYTE PTR [ecx+ebp*4],al
  408471:	mov    ds:0x4fdeff00,eax
  408476:	push   0xbeef01d0
  40847b:	and    ch,bl
  40847d:	je     0x408487
  40847f:	js     0x408461
  408481:	sar    bh,0xdf
  408484:	or     esi,esi
  408486:	lahf   
  408487:	(bad)  
  408489:	(bad)  
  40848a:	jne    0x408448
  40848c:	fidiv  WORD PTR [eax+ecx*1-0x48]
  408490:	test   BYTE PTR [edi+edi*8+0x4c1e4bf],bl
  408497:	nop
  408498:	push   eax
  408499:	mov    ch,ah
  40849b:	adc    esp,ebp
  40849d:	sti    
  40849e:	push   0x60
  4084a0:	xchg   DWORD PTR ds:0xe72965ff,ebx
  4084a6:	or     eax,0x89fedebd
  4084ab:	xchg   ebp,eax
  4084ac:	frstor [edi+0x0]
  4084af:	cmp    DWORD PTR [edi],edx
  4084b1:	push   ss
  4084b2:	mov    esi,0x40e99ae1
  4084b7:	cmp    DWORD PTR [edi-0x6d],ecx
  4084ba:	cmp    edi,eax
  4084bc:	push   ss
  4084bd:	es jne 0x408501
  4084c0:	mov    edi,0xd62ec44f
  4084c5:	and    eax,0xafde2575
  4084ca:	pop    es
  4084cb:	adc    DWORD PTR ds:0xe016ff88,esi
  4084d1:	inc    eax
  4084d2:	add    al,0x39
  4084d4:	ins    BYTE PTR es:[edi],dx
  4084d5:	jp     0x4084c3
  4084d7:	add    BYTE PTR [eax-0x108b12e],bh
  4084dd:	and    eax,0x86f54577
  4084e2:	es jne 0x40852e
  4084e5:	push   ss
  4084e6:	scas   eax,DWORD PTR es:[edi]
  4084e7:	or     edx,ecx
  4084e9:	inc    edx
  4084ea:	mov    bl,0xff
  4084ec:	fidiv  WORD PTR [ecx]
  4084ee:	inc    ebx
  4084ef:	bsf    eax,DWORD PTR [edx+0x3]
  4084f3:	add    BYTE PTR [ecx],bh
  4084f5:	pop    esi
  4084f6:	mov    edi,0x31739f7
  4084fb:	add    dh,dh
  4084fd:	fld    TBYTE PTR [edi]
  4084ff:	(bad)  
  408500:	ds pop ss
  408502:	add    ebp,DWORD PTR [edx+0x39]
  408505:	rol    DWORD PTR [ebx],0x6a
  408508:	cmp    DWORD PTR [ecx],edx
  40850a:	add    al,0x8d
  40850c:	hlt    
  40850d:	mov    dl,ah
  40850f:	mov    WORD PTR [edx+eax*4-0x197100d3],?
  408516:	and    al,0x75
  408518:	cmp    DWORD PTR [ebp-0x51],0xb35c91fb
  40851f:	push   DWORD PTR [esi+0x21]
  408522:	inc    ebx
  408523:	je     0x408559
  408525:	sub    BYTE PTR [ebp+0x1],0x39
  408529:	add    cl,ch
  40852b:	fwait
  40852c:	ins    DWORD PTR es:[edi],dx
  40852d:	xlat   BYTE PTR ds:[ebx]
  40852e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40852f:	add    edx,DWORD PTR [esi-0x56]
  408532:	clc    
  408533:	sbb    esp,DWORD PTR [eax+0x61]
  408536:	dec    esi
  408537:	and    eax,0x771978e9
  40853c:	add    BYTE PTR [ebx+ebp*1-0x2ec9daca],dh
  408543:	call   0xb025:0x2e5f101b
  40854a:	jge    0x408565
  40854c:	sub    eax,0xd511241e
  408551:	mov    bh,0x23
  408553:	push   ss
  408554:	ja     0x40850a
  408556:	and    BYTE PTR [esi],dl
  408558:	and    eax,0x8990d106
  40855d:	inc    edx
  40855e:	shr    eax,0x24
  408561:	lods   al,BYTE PTR ds:[esi]
  408562:	xor    dh,bh
  408564:	and    al,0xee
  408566:	and    esi,DWORD PTR [edi+esi*8-0x22]
  40856a:	aad    0x8a
  40856c:	and    al,0xde
  40856e:	jns    0x4085d4
  408570:	pop    ds
  408571:	into   
  408572:	and    edx,esi
  408574:	cdq    
  408575:	into   
  408576:	fwait
  408577:	mov    eax,ebp
  408579:	jns    0x40857b
  40857b:	(bad)  
  40857c:	outs   dx,BYTE PTR ds:[esi]
  40857d:	leave  
  40857e:	sub    edi,DWORD PTR [esi-0x1b5249dc]
  408584:	sbb    ecx,DWORD PTR [ebx+0x5e]
  408587:	scas   al,BYTE PTR es:[edi]
  408588:	and    al,0xb0
  40858a:	jge    0x408521
  40858c:	sub    al,0x9e
  40858e:	and    edx,DWORD PTR [ebx]
  408590:	add    al,0x21
  408592:	pop    ebx
  408593:	rol    dl,cl
  408595:	mov    fs,WORD PTR [edx]
  408597:	push   esp
  408598:	xor    ecx,DWORD PTR [esi+0x4248623]
  40859e:	hlt    
  40859f:	nop
  4085a0:	sub    al,0x0
  4085a2:	cwde   
  4085a3:	and    eax,DWORD PTR [eax]
  4085a5:	jbe    0x40859a
  4085a7:	jl     0x408591
  4085a9:	jbe    0x4085c8
  4085ab:	and    ebp,DWORD PTR [edx-0x17]
  4085ae:	ret    0x3b53
  4085b1:	test   al,0x3a
  4085b3:	and    esi,DWORD PTR [ebp-0xdce2a7]
  4085b9:	dec    esi
  4085ba:	xchg   edi,eax
  4085bb:	mul    edi
  4085bd:	and    eax,0x70ff22db
  4085c2:	mov    bh,0x44
  4085c4:	div    DWORD PTR [esi]
  4085c6:	push   ebp
  4085c7:	xchg   esi,eax
  4085c8:	inc    eax
  4085ca:	pushf  
  4085cb:	out    0x40,eax
  4085cd:	jmp    0x1730f327
  4085d2:	pop    ebp
  4085d3:	and    edi,edi
  4085d5:	pushf  
  4085d6:	push   es
  4085d7:	sbb    eax,ecx
  4085d9:	dec    eax
  4085da:	pop    ebp
  4085db:	and    ecx,DWORD PTR [ecx-0xd48d94]
  4085e1:	(bad)  
  4085e2:	shl    DWORD PTR [edx],1
  4085e4:	addr16 repz (bad) 
  4085e7:	mov    edi,0x3054edff
  4085ec:	mul    esi
  4085ee:	sbb    ah,BYTE PTR [ebx]
  4085f0:	jne    0x4085df
  4085f2:	and    bl,BYTE PTR [edx-0x5f]
  4085f5:	(bad)  
  4085f6:	sbb    bh,BYTE PTR [ecx-0x7b]
  4085f9:	mov    ch,0x22
  4085fb:	and    edi,edi
  4085fd:	push   0x58
  4085ff:	sbb    al,0xf7
  408601:	mov    esi,0x3074005a
  408606:	add    BYTE PTR [esi+0x5ab6ec64],dh
  40860c:	and    eax,DWORD PTR [eax]
  40860e:	sbb    eax,0x91bd7dc5
  408613:	xor    ah,BYTE PTR [ebx]
  408615:	(bad)  
  408616:	jmp    0xf9a81fc1
  40861b:	cmp    dl,BYTE PTR [ebx]
  40861d:	mov    esi,0x788b700
  408622:	call   0x3f27f0
  408627:	out    0xc8,eax
  408629:	jmp    0x408622
  40862b:	xlat   BYTE PTR ds:[ebx]
  40862c:	fdivp  st(6),st
  40862e:	jne    0x408698
  408630:	(bad)  
  408631:	cmp    al,0x9b
  408633:	neg    esi
  408635:	(bad)  
  408636:	mov    ch,0xf8
  408638:	push   es
  408639:	(bad)  
  40863a:	push   edi
  40863c:	mov    BYTE PTR [edi],al
  40863e:	call   0x3f296a
  408643:	ja     0x40860c
  408645:	fcomip st,st(7)
  408647:	addr16 (bad) 
  40864a:	mov    ch,0x7c
  40864c:	add    eax,0x8757ffff
  408651:	pop    es
  408652:	call   0x3f289e
  408657:	daa    
  408658:	(bad)  
  408659:	xlat   BYTE PTR ds:[ebx]
  40865a:	div    DWORD PTR [edi]
  40865c:	(bad)  
  40865e:	jne    0x408668
  408660:	(bad)  
  408661:	or     al,0x9b
  408663:	neg    esi
  408665:	(bad)  
  408666:	mov    ch,0x44
  408668:	add    eax,0xd700ffff
  40866d:	mov    BYTE PTR [edi],al
  40866f:	call   0x3f2a4b
  408674:	test   eax,0xdee7f7d3
  40867a:	(bad)  
  40867b:	jne    0x408655
  40867d:	aad    0xf0
  40867f:	call   0x67c:0xb5fedef7
  408686:	(bad)  
  408687:	(bad)  
  408688:	js     0x40868c
  40868a:	popf   
  40868b:	call   edi
  40868d:	fidiv  WORD PTR [esp+ebp*8-0x17012141]
  408694:	mov    al,0x80
  408696:	(bad)  
  408697:	(bad)  
  408698:	cmp    DWORD PTR [edx+0x728ee858],ecx
  40869e:	and    ch,al
  4086a0:	xchg   esp,eax
  4086a1:	pushf  
  4086a2:	and    edi,edi
  4086a4:	jbe    0x408692
  4086a6:	imul   DWORD PTR ds:[esi-0x56]
  4086aa:	sub    bl,dl
  4086ac:	les    edx,FWORD PTR [edx-0x405b00df]
  4086b2:	sbb    edi,edi
  4086b4:	push   esi
  4086b5:	iret   
  4086b6:	push   ecx
  4086b7:	popf   
  4086b8:	dec    esi
  4086b9:	retf   0xb521
  4086bc:	ins    DWORD PTR es:[edi],dx
  4086bd:	retf   0xff21
  4086c0:	push   ecx
  4086c1:	sar    DWORD PTR [edi-0x1],cl
  4086c4:	ss loop 0x40871e
  4086c7:	lock es jmp 0x7522:0x43acff21
  4086d0:	add    BYTE PTR [ecx],dh
  4086d2:	(bad)  
  4086d4:	(bad)  
  4086d5:	push   ss
  4086d6:	add    ah,BYTE PTR [edx]
  4086d8:	mov    ch,0x9
  4086da:	add    ah,BYTE PTR [edx]
  4086dc:	call   DWORD PTR [ecx]
  4086de:	mov    edi,0xf9feff7f
  4086e3:	(bad)  
  4086e4:	mul    eax
  4086e6:	sbb    eax,0x29eeff21
  4086eb:	xchg   edi,eax
  4086ec:	sti    
  4086ed:	shl    DWORD PTR [ecx+esi*4],1
  4086f0:	(bad)  
  4086f1:	fisubr WORD PTR [edi+0x46]
  4086f4:	or     al,0x39
  4086f6:	in     al,dx
  4086f7:	mov    esp,gs
  4086f9:	mov    edx,0x396a2052
  4086fe:	mov    ebp,0x2f44ff00
  408703:	sub    edi,DWORD PTR [edx-0x76de9e2d]
  408709:	hlt    
  40870a:	push   0xffffffac
  40870c:	ret    0xd862
  40870f:	add    edi,edi
  408711:	add    BYTE PTR fs:[ebp-0x15],al
  408715:	stc    
  408716:	call   FWORD PTR [ebp-0x56e7c969]
  40871c:	pop    ds
  40871d:	xchg   BYTE PTR [eax],ah
  40871f:	add    DWORD PTR [ebp+0x42],eax
  408722:	mov    edi,0x38abe8
  408727:	jmp    0xe0eaf5af
  40872c:	sub    edx,DWORD PTR [edi+0x5e216e22]
  408732:	stos   BYTE PTR es:[edi],al
  408733:	and    DWORD PTR fs:[eax],eax
  408736:	int3   
  408737:	not    DWORD PTR [eax+0x4f]
  40873a:	mov    bl,0x20
  40873c:	push   esi
  40873d:	dec    ebx
  40873e:	jnp    0x40873b
  408740:	call   0x6a543afb
  408745:	dec    eax
  408746:	xor    eax,0x2ead95b7
  40874b:	stos   BYTE PTR es:[edi],al
  40874c:	or     BYTE PTR [ecx],ah
  40874e:	lods   al,BYTE PTR ds:[esi]
  40874f:	or     BYTE PTR [ecx-0x4f],al
  408752:	rcr    BYTE PTR [edi],0x26
  408755:	mov    edi,DWORD PTR [esp+ebx*1+0x72]
  408759:	xlat   BYTE PTR ds:[ebx]
  40875a:	test   eax,ebp
  40875c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40875d:	add    esi,DWORD PTR [edx+0x79eb8fdd]
  408763:	add    BYTE PTR [ecx-0x1f],ch
  408766:	not    BYTE PTR [ebx-0x23b65479]
  40876c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40876d:	add    ecx,DWORD PTR [edi-0x214ecad8]
  408773:	pop    ds
  408774:	cmp    DWORD PTR [ebp+edi*1+0x660427dc],ebp
  40877b:	sub    BYTE PTR [ecx+0x331fc6b0],al
  408781:	or     eax,0xcec95f9
  408786:	mov    edx,DWORD PTR [edx+edx*1+0x4696ba]
  40878d:	(bad)  
  40878e:	pop    ecx
  40878f:	pop    ds
  408790:	push   0xffc07ecc
  408795:	cmp    BYTE PTR [ebp+0x25],ah
  408798:	mov    al,ds:0xb059009e
  40879d:	addr16 jmp 0x1feb6dd
  4087a3:	jge    0x408780
  4087a5:	inc    eax
  4087a6:	jmp    0xf1b5a655
  4087ab:	and    ch,BYTE PTR [ebp-0x3f]
  4087ae:	jbe    0x4087c9
  4087b0:	sub    cl,bl
  4087b2:	dec    ebp
  4087b3:	sbb    DWORD PTR [edi],ebx
  4087b5:	jmp    0x40879f
  4087b7:	sbb    BYTE PTR [edi+0x19a7e93d],0x46
  4087be:	push   ebp
  4087bf:	ins    DWORD PTR es:[edi],dx
  4087c0:	pop    edi
  4087c1:	mov    ecx,0xff1f194e
  4087c6:	cmp    ebp,DWORD PTR [eax-0x464bf928]
  4087cc:	push   ds
  4087cd:	jne    0x408804
  4087cf:	pop    ecx
  4087d0:	xchg   ebp,eax
  4087d1:	pop    es
  4087d2:	inc    ecx
  4087d3:	pop    es
  4087d4:	jns    0x4087d5
  4087d6:	es stc 
  4087d8:	mov    esp,0x362bc8
  4087dd:	push   ebp
  4087de:	bound  edx,QWORD PTR [esi-0x7d]
  4087e1:	les    ecx,FWORD PTR ds:0x60b9559
  4087e7:	iret   
  4087e8:	push   es
  4087e9:	call   0xff5ff9b3
  4087ee:	pusha  
  4087ef:	call   FWORD PTR [edx]
  4087f1:	push   DWORD PTR [esi+edi*1+0x1f]
  4087f5:	jne    0x4087e8
  4087f7:	and    dh,BYTE PTR [esp+edx*4-0x22]
  4087fb:	mov    ecx,DWORD PTR cs:[ebp-0x1b]
  4087ff:	add    BYTE PTR [ebx],dh
  408801:	inc    eax
  408802:	je     0x40882f
  408804:	mov    edx,0x74ffffd8
  408809:	and    esi,edi
  40880b:	jne    0x4087f9
  40880d:	jmp    0x4087a3
  40880f:	pushf  
  408810:	out    dx,eax
  408811:	dec    BYTE PTR [edi-0x1]
  408814:	gs lock (bad) 
  408817:	jne    0x4087f5
  408819:	push   ebx
  40881a:	(bad)  
  40881b:	jne    0x4087a5
  40881d:	jmp    0x8b59:0xfeaf96cb
  408824:	sbb    eax,0x603982f0
  408829:	ja     0x408834
  40882b:	push   edx
  40882c:	enter  0x9b5e,0xff
  408830:	out    dx,eax
  408831:	sub    bh,BYTE PTR [edi+0x7d8184eb]
  408837:	adc    BYTE PTR [eax+0x76],ah
  40883a:	pop    es
  40883b:	mov    edx,DWORD PTR [ebp-0x138a01ee]
  408841:	mov    es,WORD PTR [eax]
  408843:	mov    edx,DWORD PTR [edx]
  408845:	jmp    0x408848
  408847:	sub    esp,DWORD PTR [eax-0x35]
  40884a:	ror    DWORD PTR [eax+eiz*1],0x59
  40884e:	mov    ch,ah
  408850:	outs   dx,DWORD PTR ds:[esi]
  408851:	ja     0x40885e
  408853:	jmp    ebp
  408855:	or     eax,ebp
  408857:	mov    ecx,0xfffefd96
  40885c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885d:	or     eax,0x9a5ff50
  408862:	call   0xfdc78898
  408867:	dec    cl
  408869:	and    cl,BYTE PTR [eax+eax*1]
  40886c:	push   ebp
  40886d:	imul   edx,eax,0xffffff82
  408870:	les    edx,FWORD PTR [eax]
  408872:	push   esi
  408873:	push   esi
  408874:	push   ebx
  408875:	push   ebx
  408876:	pop    edi
  408877:	pop    es
  408878:	add    BYTE PTR [edx+edx*1-0x7e],dh
  40887c:	jge    0x40885a
  40887e:	add    DWORD PTR [esp+ecx*1+0x39],esi
  408882:	stos   BYTE PTR es:[edi],al
  408883:	lahf   
  408884:	(bad)  
  408886:	mov    bl,0x5
  408888:	xor    DWORD PTR [ebx+edi*1],0x3
  40888c:	jne    0x4088ce
  40888e:	repnz inc ebx
  408890:	pop    ebx
  408891:	push   es
  408892:	cmc    
  408893:	dec    esp
  408894:	ret    0x2749
  408897:	mov    al,BYTE PTR [ebp+0x45]
  40889a:	stos   BYTE PTR es:[edi],al
  40889b:	and    al,BYTE PTR [edi]
  40889d:	mov    edx,0xd000ffc
  4088a2:	sub    ecx,DWORD PTR [edx]
  4088a4:	rol    BYTE PTR ds:0x12bfea20,0xe6
  4088ab:	mov    ebp,0x3377bc8
  4088b0:	mov    edi,esp
  4088b2:	cmp    al,BYTE PTR [edx-0x6055c920]
  4088b8:	adc    edi,DWORD PTR [ecx]
  4088ba:	cmp    eax,DWORD PTR [edi]
  4088bc:	or     edi,DWORD PTR [ecx+0x33]
  4088bf:	or     al,0x2b
  4088c1:	jns    0x408915
  4088c3:	mov    esi,0xf2e9705d
  4088c8:	inc    DWORD PTR [eax]
  4088ca:	arpl   dx,sp
  4088cc:	sbb    eax,0xc7ae3d75
  4088d1:	mov    edi,0xb436bba
  4088d6:	push   ds
  4088d7:	push   esp
  4088d8:	inc    ebx
  4088d9:	call   0xff5f0ae3
  4088de:	or     eax,0xb2c3c790
  4088e3:	jae    0x40892c
  4088e5:	mov    esi,0xffc44b56
  4088ea:	mov    cl,0x11
  4088ec:	add    eax,DWORD PTR [eax]
  4088ee:	cmp    DWORD PTR [edx],ebx
  4088f0:	mov    bp,WORD PTR [edi+ebx*1-0x76]
  4088f5:	dec    ebp
  4088f6:	sub    eax,0x7c8d661a
  4088fb:	add    cl,bl
  4088fd:	mov    ah,0xcf
  4088ff:	xchg   edx,eax
  408900:	test   al,0x1d
  408902:	dec    esp
  408903:	inc    esp
  408904:	rol    DWORD PTR [esp+edx*4+0x1c],0xce
  408909:	sbb    eax,0x81d1442c
  40890e:	rcr    BYTE PTR [esi+edi*4],cl
  408911:	sbb    eax,0xc7660c2c
  408916:	fiadd  WORD PTR [eax+0x1d324424]
  40891c:	sbb    al,0x44
  40891e:	mov    eax,ds:0x861d8287
  408923:	xchg   BYTE PTR [eax+ecx*2],ch
  408926:	jge    0x4088ae
  408928:	and    al,0x48
  40892a:	les    edx,FWORD PTR [edx-0x13ff7688]
  408930:	inc    ebx
  408931:	inc    eax
  408932:	hlt    
  408933:	data16 sbb al,0xe9
  408936:	adc    BYTE PTR [ebp-0x62039a3],dl
  40893c:	call   FWORD PTR [edi-0x16ffc6f7]
  408942:	adc    BYTE PTR [ebp-0x4df42378],bl
  408948:	retf   0x10dc
  40894b:	fisttp QWORD PTR [ebp+0x1b8923ac]
  408951:	mov    ah,0x43
  408953:	es xchg esi,eax
  408955:	sub    al,0x2c
  408957:	mov    fs,WORD PTR [ebp+0x2e]
  40895a:	sbb    eax,0x2c2c9616
  40895f:	dec    ebx
  408960:	ja     0x408980
  408962:	sbb    eax,0x139c8e05
  408967:	lods   al,BYTE PTR ds:[esi]
  408968:	popf   
  408969:	and    BYTE PTR [ebx+0x49],bl
  40896c:	add    cl,ch
  40896e:	add    ebp,edx
  408970:	fs ins BYTE PTR es:[edi],dx
  408972:	xchg   edi,eax
  408973:	push   es
  408974:	pop    edx
  408975:	add    cl,ah
  408977:	cmp    al,BYTE PTR [eax]
  408979:	add    dl,bh
  40897b:	pop    esi
  40897c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897d:	add    BYTE PTR [edi+esi*8+0x43],dh
  408981:	push   eax
  408982:	rcl    DWORD PTR [eax],1
  408984:	mov    WORD PTR [eax],es
  408986:	jmp    0x62501f3c
  40898b:	xlat   BYTE PTR ds:[ebx]
  40898c:	out    dx,eax
  40898d:	rcl    dh,0x39
  408990:	pop    es
  408991:	push   DWORD PTR ds:0xf26dc00
  408997:	fs ja  0x4089bd
  40899a:	push   eax
  40899b:	pop    ss
  40899c:	iret   
  40899d:	and    edi,DWORD PTR [ebx+0x76]
  4089a0:	cmp    al,BYTE PTR [eax]
  4089a2:	and    DWORD PTR [edi-0x69f534ce],0xffffffa7
  4089a9:	sub    al,0xf
  4089ab:	push   edi
  4089ac:	jl     0x4089c8
  4089ae:	add    DWORD PTR [ecx-0x2dfe6cbe],0x4a
  4089b5:	out    0x74,eax
  4089b7:	fldcw  WORD PTR [ebx]
  4089b9:	sub    ch,BYTE PTR [edx-0x17]
  4089bc:	mov    al,ds:0xa0e9691b
  4089c1:	sbb    edx,DWORD PTR [ebp+0x5e]
  4089c4:	scas   eax,DWORD PTR es:[edi]
  4089c5:	or     ebp,DWORD PTR [edx-0x17]
  4089c8:	nop
  4089c9:	sbb    esp,edi
  4089cb:	psubsw mm3,QWORD PTR [edx]
  4089ce:	push   edx
  4089d0:	jp     0x408966
  4089d2:	sub    BYTE PTR [ecx+0x53d422ea],bl
  4089d8:	cmp    eax,0xd3118b1b
  4089dd:	test   al,0xff
  4089df:	xchg   edx,eax
  4089e0:	cmp    dh,BYTE PTR [ecx-0x6ada48ae]
  4089e6:	jae    0x1403026
  4089ec:	mul    DWORD PTR [esi+0x7e0ffff]
  4089f2:	shl    BYTE PTR [ebp-0x18],0x4f
  4089f6:	out    0x9d,eax
  4089f8:	add    BYTE PTR [edx+0x2b2bfefc],cl
  4089fe:	mov    bl,al
  408a00:	pop    ebx
  408a01:	ja     0x408a59
  408a03:	enter  0xc0c2,0xfe
  408a07:	push   esp
  408a08:	mov    esi,esp
  408a0a:	add    ah,0xf0
  408a0d:	outs   dx,DWORD PTR ds:[esi]
  408a0e:	push   ebx
  408a0f:	sub    bl,bl
  408a11:	ja     0x408a83
  408a13:	or     edi,edi
  408a15:	ins    DWORD PTR es:[edi],dx
  408a16:	or     al,0xe8
  408a18:	add    ebp,edi
  408a1a:	idiv   dh
  408a1c:	push   eax
  408a1d:	out    0x70,eax
  408a1f:	pop    es
  408a20:	call   0x3f1813
  408a25:	or     edi,esp
  408a27:	push   edi
  408a28:	add    ebp,DWORD PTR [eax+0x1f74c00a]
  408a2e:	mov    DWORD PTR [ebp-0xc],eax
  408a31:	push   eax
  408a32:	div    DWORD PTR [esp+ecx*1-0x19]
  408a36:	jo     0x408a3f
  408a38:	call   0x3f8338
  408a3d:	fld    DWORD PTR [eax-0x5]
  408a40:	lea    ebx,[ebp+0x6dff4fee]
  408a46:	add    bh,bh
  408a48:	jne    0x408aa2
  408a4a:	out    0x98,al
  408a4c:	std    
  408a4d:	xchg   ebp,esi
  408a4f:	mov    BYTE PTR [ebp+0x78],al
  408a52:	cmc    
  408a53:	je     0x408a45
  408a55:	outs   dx,DWORD PTR ds:[si]
  408a57:	idiv   edi
  408a59:	fisttp QWORD PTR [ecx]
  408a5b:	push   DWORD PTR [ebp+0x0]
  408a5e:	fs in  al,dx
  408a60:	adc    dh,bh
  408a62:	push   edi
  408a63:	cmc    
  408a64:	mov    bl,al
  408a66:	daa    
  408a67:	outs   dx,DWORD PTR ds:[esi]
  408a68:	sti    
  408a69:	call   0xffbdcda7
  408a6e:	test   BYTE PTR [edx],0x91
  408a71:	mul    ecx
  408a73:	dec    ebx
  408a74:	jge    0x408a75
  408a76:	out    0x6d,al
  408a78:	add    edx,DWORD PTR [edi-0x22]
  408a7b:	pushf  
  408a7c:	or     ch,al
  408a7e:	mov    eax,ds:0xc2ff1ab8
  408a83:	mov    si,0xf05e
  408a87:	or     eax,DWORD PTR gs:[eax]
  408a8a:	fs sahf 
  408a8c:	xor    DWORD PTR es:[ebx+edi*1],0x1
  408a91:	jb     0x408aeb
  408a93:	inc    edx
  408a94:	nop
  408a95:	xsha256 (bad)
  408a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a97:	aam    0xb
  408a99:	call   0xff5a4656
  408a9e:	xchg   esi,eax
  408a9f:	aam    0xf3
  408aa1:	inc    BYTE PTR [edi+ecx*1]
  408aa4:	sub    ebp,DWORD PTR [edi-0xe5857c]
  408aaa:	add    al,0x17
  408aac:	sbb    dh,BYTE PTR [ebp+0x41]
  408aaf:	jg     0x408b10
  408ab1:	std    
  408ab2:	outs   dx,BYTE PTR ds:[esi]
  408ab3:	sbb    BYTE PTR [edx],0x75
  408ab6:	dec    ecx
  408ab7:	call   0xff1a:0xdd51078f
  408abe:	push   esi
  408abf:	sahf   
  408ac0:	scas   eax,DWORD PTR es:[edi]
  408ac1:	adc    eax,DWORD PTR [eax]
  408ac3:	shl    BYTE PTR ds:0xba29751a,0x8f
  408aca:	pop    es
  408acb:	push   ecx
  408acc:	mov    al,ds:0xa636ff17
  408ad1:	xchg   edi,eax
  408ad2:	or     edi,DWORD PTR [edx]
  408ad4:	pop    ecx
  408ad5:	icebp  
  408ad6:	(bad)  
  408ad7:	lods   al,BYTE PTR ds:[esi]
  408ad8:	aaa    
  408ad9:	sbb    dh,BYTE PTR [ebp+0x31]
  408adc:	mov    edi,0xea16fc9a
  408ae1:	sbb    DWORD PTR [ebp+0x29],esi
  408ae4:	add    BYTE PTR [esi],ah
  408ae6:	nop
  408ae7:	sub    BYTE PTR ds:[eax+ebx*1-0x6fe9e702],cl
  408aef:	inc    esi
  408af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408af1:	lock sbb ah,BYTE PTR [eax+ecx*1+0x11]
  408af6:	outs   dx,BYTE PTR ds:[esi]
  408af7:	int    0x18
  408af9:	(bad)  
  408afa:	sbb    DWORD PTR [eax+esi*8-0xb],esp
  408afe:	(bad)  
  408aff:	ds sub ch,cl
  408b02:	outs   dx,DWORD PTR ds:[esi]
  408b03:	into   
  408b04:	sbb    BYTE PTR [eax+0x34002946],dh
  408b0a:	(bad)  
  408b0b:	int    0x18
  408b0d:	pop    esp
  408b0e:	or     BYTE PTR [ebx],ah
  408b10:	dec    ebp
  408b12:	(bad)  
  408b13:	sub    BYTE PTR ss:[ebp+0x70],dh
  408b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b18:	sbb    BYTE PTR [esi+0x3c19328f],bh
  408b1e:	or     al,0xa1
  408b20:	and    BYTE PTR [edi+0x3c848e19],ch
  408b26:	hlt    
  408b27:	add    BYTE PTR [ecx+0x328f9dfd],dh
  408b2d:	sbb    DWORD PTR [esp+ecx*1],ebx
  408b30:	popa   
  408b31:	xor    BYTE PTR [edi+0x1c846e19],cl
  408b37:	lock mov cl,0xfd
  408b3a:	jge    0x408acb
  408b3c:	xor    bl,BYTE PTR [ecx]
  408b3e:	cld    
  408b3f:	or     esp,DWORD PTR [ecx+0x40]
  408b42:	outs   dx,DWORD PTR ds:[esi]
  408b43:	sbb    DWORD PTR [esi-0x7c],ecx
  408b46:	mov    esp,0x2ffdb1fb
  408b4b:	inc    esi
  408b4c:	and    eax,0x258cbc00
  408b51:	test   BYTE PTR ds:0x45af8728,ah
  408b57:	(bad)
  408b5b:	sbb    BYTE PTR [eax+ecx*1+0x73fc4100],ah
  408b62:	jmp    FWORD PTR [esi]
  408b64:	xor    BYTE PTR [ebp-0x49d9ed],cl
  408b6a:	out    0x55,eax
  408b6c:	test   BYTE PTR [edi],dl
  408b6e:	jmp    DWORD PTR [edx+0x4d]
  408b71:	sub    DWORD PTR [ebx],edi
  408b73:	call   0xaccb8bb2
  408b78:	(bad)  
  408b79:	cmp    BYTE PTR [eax],0xe9
  408b7c:	scas   eax,DWORD PTR es:[edi]
  408b7d:	cld    
  408b7e:	call   0x40c742
  408b83:	mov    ds,WORD PTR es:[ebx]
  408b86:	add    cl,ch
  408b88:	cmp    al,BYTE PTR [eax]
  408b8a:	lea    esp,[eax+eax*1]
  408b8d:	and    DWORD PTR [eax+0x16a95cfe],esi
  408b93:	jne    0x408b8e
  408b95:	push   ecx
  408b96:	lea    eax,[edi]
  408b98:	ror    DWORD PTR [esi+edx*1-0x1],1
  408b9c:	mov    esi,0x348318ad
  408ba1:	xor    DWORD PTR [eax],eax
  408ba3:	je     0x408baf
  408ba5:	fst    st(1)
  408ba7:	cmp    ebp,DWORD PTR [eax]
  408ba9:	cmp    eax,0x529d7517
  408bae:	mov    ch,BYTE PTR [ebx-0x17]
  408bb1:	cmp    cl,BYTE PTR [ebx]
  408bb3:	rcl    BYTE PTR [esi+esi*1],0xa8
  408bb7:	cmp    ebp,eax
  408bb9:	jnp    0x408bd2
  408bbb:	(bad)  
  408bbc:	hlt    
  408bbd:	inc    esi
  408bbe:	sub    BYTE PTR [ecx+0x2],bh
  408bc1:	cmp    eax,0x21248900
  408bc6:	sub    eax,DWORD PTR [edi]
  408bc8:	xchg   DWORD PTR cs:[ebx],ebp
  408bcb:	add    cl,ch
  408bcd:	cmp    al,BYTE PTR [eax]
  408bcf:	adc    esp,0x5e
  408bd2:	add    BYTE PTR [ecx+esi*8-0x1e],dh
  408bd6:	(bad)  
  408bd7:	(bad)  
  408bd8:	dec    DWORD PTR [edi+0xc75feb9]
  408bde:	jmp    0x408c26
  408be0:	xchg   ebp,eax
  408be1:	dec    edi
  408be2:	clc    
  408be3:	(bad)  
  408be4:	jne    0x408c42
  408be6:	clc    
  408be7:	je     0x408bf5
  408be9:	sub    BYTE PTR [ecx-0x15e0006c],bl
  408bef:	mov    al,BYTE PTR [eax]
  408bf1:	add    al,ah
  408bf3:	add    cl,BYTE PTR [ebx+0x387be445]
  408bf9:	add    BYTE PTR [ebp+0x16],ah
  408bfc:	call   0x435c87
  408c01:	(bad)  
  408c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c03:	cli    
  408c04:	(bad)  
  408c05:	jmp    eax
  408c07:	add    al,bh
  408c09:	inc    ebp
  408c0a:	in     al,0xfb
  408c0c:	(bad)  
  408c0d:	call   eax
  408c0f:	aad    0x44
  408c11:	lock mov al,ds:0xd000002
  408c17:	inc    ecx
  408c18:	out    dx,eax
  408c19:	push   eax
  408c1a:	sub    eax,0xd50f341
  408c1f:	inc    ecx
  408c20:	not    DWORD PTR [eax-0x31]
  408c23:	jo     0x408c38
  408c25:	inc    DWORD PTR [ebp+0x4]
  408c28:	call   0xff2f6b0e
  408c2d:	sbb    DWORD PTR ds:0x9373ffe8,0xffffff81
  408c34:	jge    0x408c2e
  408c36:	pusha  
  408c37:	xchg   BYTE PTR [ebx+eax*4],ch
  408c3a:	cmp    eax,0x5674fff0
  408c3f:	cmp    DWORD PTR [ebp-0x10],0xff208660
  408c46:	inc    ebp
  408c47:	cli    
  408c48:	(bad)  
  408c49:	jne    0x408c97
  408c4b:	jmp    0x75fe:0xeedf953c
  408c52:	cmp    DWORD PTR [ebx+0x3d007516],esi
  408c58:	mov    edi,0xbf2694d1
  408c5d:	push   ss
  408c5e:	jne    0x408c89
  408c60:	xlat   BYTE PTR ds:[ebx]
  408c61:	nop
  408c62:	or     esp,DWORD PTR [ecx]
  408c64:	pop    es
  408c65:	jno    0x408c66
  408c67:	push   cs
  408c68:	out    0x90,eax
  408c6a:	not    DWORD PTR [ecx]
  408c6c:	xor    al,0x7b
  408c6e:	(bad)  
  408c6f:	(bad)  
  408c70:	not    BYTE PTR [eax+0x7b3be1f3]
  408c76:	(bad)  
  408c77:	out    dx,al
  408c78:	push   es
  408c79:	xchg   ecx,eax
  408c7a:	out    dx,eax
  408c7b:	rol    DWORD PTR [ebx+0x7b],1
  408c7e:	(bad)  
  408c7f:	fisub  WORD PTR [esi+0xa]
  408c82:	inc    DWORD PTR [esi-0x5c]
  408c85:	test   al,0xfe
  408c87:	into   
  408c88:	cmp    BYTE PTR es:[ebp-0x2b],0x27
  408c8d:	(bad)  
  408c8e:	sbb    eax,0x75162753
  408c93:	inc    ebp
  408c94:	aas    
  408c95:	outs   dx,DWORD PTR ds:[esi]
  408c96:	xchg   esp,eax
  408c97:	scas   al,BYTE PTR es:[edi]
  408c98:	inc    esi
  408c99:	test   eax,0x7d4a7ff
  408c9e:	call   0xff563856
  408ca3:	and    esp,DWORD PTR [edi]
  408ca5:	push   ss
  408ca6:	jne    0x408ce5
  408ca8:	aas    
  408ca9:	adc    DWORD PTR [esi+eax*4+0x7d75165e],0x6f
  408cb1:	es xchg edi,eax
  408cb3:	jbe    0x408d23
  408cb5:	lds    ecx,FWORD PTR [edx]
  408cb7:	cmp    BYTE PTR ss:[di+0x6700],0x7e
  408cbe:	push   ss
  408cbf:	pop    edi
  408cc0:	dec    DWORD PTR [edi+0x41]
  408cc3:	adc    BYTE PTR [ecx],bh
  408cc5:	hlt    
  408cc6:	mov    ch,ah
  408cc8:	mov    edx,0x46561f5b
  408ccd:	add    ah,bl
  408ccf:	or     edx,DWORD PTR [ecx+0x6d]
  408cd2:	outs   dx,BYTE PTR ds:[esi]
  408cd3:	push   ss
  408cd4:	xchg   DWORD PTR ss:[edi+ecx*1-0xcab6d46],ebp
  408cdc:	stos   DWORD PTR es:[edi],eax
  408cdd:	or     al,BYTE PTR [ecx-0x16ffc6fc]
  408ce3:	mov    ch,0x1
  408ce5:	inc    edx
  408ce6:	loope  0x408ceb
  408ce8:	push   cs
  408ce9:	mov    esp,eax
  408ceb:	sub    esp,DWORD PTR [esi+ebp*2-0x4509e9da]
  408cf2:	and    BYTE PTR [ecx+edi*1],al
  408cf5:	add    cl,ch
  408cf7:	mov    BYTE PTR [eax+ebx*1-0x47],dh
  408cfb:	push   ss
  408cfc:	ins    BYTE PTR es:[edi],dx
  408cfd:	or     BYTE PTR [ecx],dl
  408cff:	fmulp  st(0),st
  408d01:	adc    al,0xfe
  408d03:	mov    edi,DWORD PTR [esp+edx*1+0x6a]
  408d07:	cwde   
  408d08:	(bad)  
  408d09:	push   DWORD PTR [edi+eax*1-0x46]
  408d0d:	xchg   edx,eax
  408d0e:	in     al,0x2
  408d10:	dec    ebx
  408d11:	(bad)  
  408d12:	imul   edx,DWORD PTR [edi+0xa5efdb2],0x3e8fef1
  408d1c:	cmp    DWORD PTR [esi+0x310042af],esi
  408d22:	add    BYTE PTR [edi+edi*4-0x72],ch
  408d26:	scas   eax,DWORD PTR es:[edi]
  408d27:	mov    ch,0x8f
  408d29:	sub    BYTE PTR ss:[ebp+0x6a148673],ch
  408d30:	xchg   edi,eax
  408d31:	xchg   bh,bh
  408d33:	adc    al,0x0
  408d35:	inc    edx
  408d36:	inc    eax
  408d37:	sbb    eax,0xe8feb10a
  408d3c:	add    edi,DWORD PTR [ecx]
  408d3e:	mov    dh,0xaf
  408d40:	inc    edx
  408d41:	xor    DWORD PTR [eax],eax
  408d43:	push   0xffffff97
  408d45:	push   edx
  408d46:	cli    
  408d47:	(bad)  
  408d48:	cli    
  408d49:	inc    ebp
  408d4a:	add    DWORD PTR [ebp+0x71],0xffffff8d
  408d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d4f:	pop    ss
  408d50:	data16 scas al,BYTE PTR es:[edi]
  408d52:	cld    
  408d53:	out    0xc1,eax
  408d55:	test   al,0x13
  408d57:	jmp    DWORD PTR [esi+ebp*8+0xb]
  408d5b:	push   eax
  408d5c:	dec    esi
  408d5d:	mov    dh,0xfb
  408d5f:	out    0x31,eax
  408d61:	stos   BYTE PTR es:[edi],al
  408d62:	adc    edi,edi
  408d64:	jo     0x408d3c
  408d66:	pop    ds
  408d67:	jmp    0x408d3d
  408d69:	mov    bh,0xbd
  408d6b:	neg    DWORD PTR [ecx+0x11078d2d]
  408d71:	ins    BYTE PTR es:[edi],dx
  408d72:	jno    0x408d73
  408d74:	push   ds
  408d75:	ret    0xe3bd
  408d78:	fs scas al,BYTE PTR es:[edi]
  408d7a:	or     edx,DWORD PTR [eax-0x7d]
  408d7d:	out    0x12,al
  408d7f:	jne    0x408d72
  408d81:	adc    ah,dh
  408d83:	xchg   ecx,eax
  408d84:	inc    BYTE PTR [eax]
  408d86:	sub    eax,0x8af14585
  408d8b:	adc    dh,BYTE PTR [ebp-0x1f]
  408d8e:	adc    ch,BYTE PTR [edi]
  408d90:	cli    
  408d91:	out    0x25,al
  408d93:	jg     0x408e12
  408d95:	lds    edi,FWORD PTR [ebx]
  408d97:	lea    ebx,ds:0x500bef64
  408d9d:	into   
  408d9e:	mov    bh,0x17
  408da0:	(bad)  
  408da1:	cmp    al,0x31
  408da3:	adc    esi,DWORD PTR [ebp-0xf]
  408da6:	bound  esp,QWORD PTR [edx-0x3]
  408da9:	mov    dh,0x25
  408dab:	test   DWORD PTR [ebp-0x4f],eax
  408dae:	retf   0x7512
  408db1:	icebp  
  408db2:	push   edx
  408db3:	arpl   dx,di
  408db5:	sahf   
  408db6:	dec    ebp
  408db7:	jg     0x408e36
  408db9:	xchg   ecx,eax
  408dba:	cmp    cl,BYTE PTR [ebp+0x3a5109]
  408dc0:	add    BYTE PTR [eax],al
  408dc2:	push   eax
  408dc3:	dec    ebp
  408dc4:	enter  0x48c2,0xff
  408dc8:	mov    WORD PTR [ebp-0x38],es
  408dcb:	dec    esi
  408dcc:	(bad)  
  408dcd:	jne    0x408da3
  408dcf:	jmp    0x408e45
  408dd1:	or     al,0xd7
  408dd3:	add    DWORD PTR [edi],0xfeeaa0e8
  408dd9:	jmp    DWORD PTR [ebx+0xd00f76a]
  408ddf:	or     DWORD PTR [eax-0xf000],edi
  408de5:	pop    ebp
  408de6:	dec    ecx
  408de7:	rol    DWORD PTR [edi],0x0
  408dea:	add    BYTE PTR [ebp+0x5750f752],dl
  408df0:	add    BYTE PTR [edi],0xe8
  408df3:	sbb    BYTE PTR [esi-0x10940002],cl
  408df9:	call   0x3f6ef9
  408dfe:	dec    ch
  408e00:	push   es
  408e01:	call   0xff2d10ed
  408e06:	cmp    ebx,DWORD PTR [ebp+0x39057502]
  408e0c:	add    al,0x0
  408e0e:	add    al,dl
  408e10:	jg     0x408e8f
  408e12:	cld    
  408e13:	into   
  408e14:	ins    BYTE PTR es:[edi],dx
  408e15:	and    ecx,DWORD PTR [ebp-0xaffba3]
  408e1b:	or     eax,0x210de714
  408e20:	out    dx,eax
  408e21:	dec    BYTE PTR [ebp-0xaffbb3]
  408e27:	dec    ebp
  408e28:	adc    al,0xe7
  408e2a:	cmp    cl,dl
  408e2c:	out    dx,al
  408e2d:	dec    BYTE PTR [ebp-0xaffba3]
  408e33:	sbb    eax,0x9a2ee714
  408e38:	out    dx,al
  408e39:	dec    BYTE PTR [ebp+0x500be439]
  408e3f:	data16 jmp 0x408e3d
  408e42:	out    0x8a,eax
  408e44:	jge    0x408e59
  408e46:	inc    eax
  408e48:	fist   DWORD PTR [ebx]
  408e4a:	(bad)  
  408e4b:	hlt    
  408e4c:	nop
  408e4d:	mov    bl,0xfe
  408e4f:	add    ah,cl
  408e51:	and    BYTE PTR [ebx],bl
  408e53:	les    eax,FWORD PTR [edx-0x67]
  408e56:	adc    cl,BYTE PTR [ecx+0x4580c37c]
  408e5c:	xor    DWORD PTR [eax+0x12],ebx
  408e5f:	jne    0x408e92
  408e61:	mov    edi,0xbb1efb58
  408e66:	jl     0x408ead
  408e68:	and    DWORD PTR [edi+0x5339ef90],esp
  408e6e:	xchg   esi,eax
  408e6f:	add    BYTE PTR [ebx+edx*8-0x59738bfd],0x90
  408e77:	out    0x39,eax
  408e79:	imul   ebp,DWORD PTR [edx+0x3ef6c82],0x74
  408e80:	pop    eax
  408e81:	jg     0x408e49
  408e83:	cmp    edi,DWORD PTR [eax+0x27]
  408e86:	adc    dh,BYTE PTR [ebp-0x37]
  408e89:	out    dx,eax
  408e8a:	dec    esi
  408e8b:	push   0xbffe2739
  408e90:	dec    esp
  408e91:	inc    ecx
  408e92:	fwait
  408e93:	xor    ebp,edi
  408e95:	out    0x3,eax
  408e97:	jmp    FWORD PTR [edi+esi*1]
  408e9a:	sbb    ebp,DWORD PTR [edx+0xb032721]
  408ea0:	jns    0x408e4e
  408ea2:	add    BYTE PTR [eax+0x63],ch
  408ea5:	sti    
  408ea6:	(bad)  
  408ea7:	call   DWORD PTR [edi-0x4f17ec34]
  408ead:	mov    edi,0x67320003
  408eb2:	xchg   edi,eax
  408eb3:	sub    eax,0xe9001100
  408eb8:	add    esp,DWORD PTR [esi+0x52]
  408ebb:	sahf   
  408ebc:	cwde   
  408ebd:	inc    edx
  408ebe:	sub    BYTE PTR [esi+esi*2],bl
  408ec1:	adc    WORD PTR [esi-0x3eeb168],cx
  408ec8:	call   FWORD PTR [esi+0x44]
  408ecb:	pop    ebx
  408ecc:	adc    cl,BYTE PTR [esi+0x11]
  408ecf:	cld    
  408ed0:	pop    ds
  408ed1:	inc    esi
  408ed2:	mov    ebx,esp
  408ed4:	sbb    edi,DWORD PTR [eax+0x6e]
  408ed7:	data16 adc dh,BYTE PTR [esi]
  408eda:	mov    edx,DWORD PTR [eax+0x12]
  408edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ede:	add    al,0x41
  408ee0:	pop    ecx
  408ee1:	retf   
  408ee2:	adc    BYTE PTR [esi+0x12],cl
  408ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee6:	adc    BYTE PTR [ecx+0x46],dl
  408ee9:	lods   al,BYTE PTR ds:[esi]
  408eea:	adc    BYTE PTR [esi],bh
  408eec:	adc    al,BYTE PTR [esp+0x10ac4e41]
  408ef3:	adc    al,BYTE PTR cs:[eax+ebp*1+0x10cc5611]
  408efb:	push   ds
  408efc:	sar    DWORD PTR [ebx+0x6d031092],0x8
  408f03:	loop   0x408f1e
  408f05:	cs jnp 0x408f06
  408f08:	adc    dh,dl
  408f0a:	adc    BYTE PTR [edx-0x38],dh
  408f0d:	(bad)  
  408f0e:	mov    cl,0x1f
  408f10:	inc    ebp
  408f11:	xor    DWORD PTR [eax],eax
  408f13:	xchg   esp,eax
  408f14:	jle    0x408ee3
  408f16:	jl     0x408ec5
  408f18:	adc    BYTE PTR [eax],al
  408f1a:	mov    dh,0x8a
  408f1c:	in     al,dx
  408f1d:	sbb    eax,DWORD PTR [edx]
  408f1f:	pop    eax
  408f20:	(bad)  
  408f21:	adc    DWORD PTR [edx],esi
  408f23:	inc    eax
  408f24:	push   esp
  408f25:	shr    DWORD PTR [ebp-0x614b3b46],1
  408f2b:	cs ins DWORD PTR es:[edi],dx
  408f2d:	adc    DWORD PTR [esi+0x293c0010],ecx
  408f33:	adc    DWORD PTR [ebp-0x23],esi
  408f36:	and    cl,BYTE PTR [ecx-0x72]
  408f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f3a:	dec    eax
  408f3b:	add    eax,0x116815c0
  408f40:	jne    0x408f23
  408f42:	dec    ecx
  408f43:	mov    edi,ebx
  408f45:	xor    DWORD PTR [eax+0x5486ff12],0xb2d97550
  408f4f:	adc    BYTE PTR [edi],cl
  408f51:	xchg   bl,ch
  408f53:	adc    BYTE PTR [ebp-0x23],dh
  408f56:	sub    DWORD PTR [ebx+0x579b5107],ecx
  408f5c:	call   FWORD PTR [esi+0x48]
  408f5f:	xchg   ebp,eax
  408f60:	sti    
  408f61:	inc    ecx
  408f62:	jne    0x408fe0
  408f64:	dec    DWORD PTR [esi+0x62]
  408f67:	inc    edx
  408f68:	or     cl,ch
  408f6a:	iret   
  408f6b:	jp     0x408f59
  408f6d:	push   0x36fe5481
  408f72:	sub    BYTE PTR [edi-0x7b],al
  408f75:	jno    0x408fa2
  408f77:	ud0    ebp,ecx
  408f7a:	cmp    al,BYTE PTR [eax]
  408f7c:	add    BYTE PTR [edx+0x0],dh
  408f7f:	idiv   bl
  408f81:	or     ch,BYTE PTR [ecx]
  408f83:	rol    DWORD PTR [eax+eax*4],0xd1
  408f87:	cmp    dl,BYTE PTR [ebp+0x8a1004]
  408f8d:	add    cl,ch
  408f8f:	sub    DWORD PTR [ebp+0x6039010b],edx
  408f95:	(bad)  
  408f96:	out    dx,al
  408f97:	mov    ebp,0xd2f6754f
  408f9c:	dec    ebp
  408f9d:	sub    al,0x28
  408f9f:	xor    eax,0x42e5750f
  408fa4:	pop    ecx
  408fa5:	cwde   
  408fa6:	into   
  408fa7:	dec    ecx
  408fa8:	sbb    ecx,DWORD PTR ds:0x2bc4e800
  408fae:	inc    ecx
  408faf:	mov    al,ds:0x780c74f0
  408fb4:	popf   
  408fb5:	xchg   edi,eax
  408fb6:	dec    edi
  408fb8:	mov    al,BYTE PTR [eax+edi*4+0x68fef09e]
  408fbf:	mov    es,WORD PTR [edx]
  408fc1:	add    BYTE PTR [eax],al
  408fc3:	fld    QWORD PTR [ebp-0xf50013e]
  408fc9:	dec    edi
  408fca:	call   0x3f2641
  408fcf:	fld    QWORD PTR [ebp-0x1030013e]
  408fd5:	dec    edi
  408fd6:	inc    DWORD PTR ds:0x9ffffdbb
  408fdc:	jmp    0x40902b
  408fde:	data16 and BYTE PTR [ebx],al
  408fe1:	mov    DWORD PTR [ebp-0x10f3400],eax
  408fe7:	call   eax
  408fe9:	inc    DWORD PTR [ebx+0x320f3]
  408fef:	lea    esp,[ebp-0x3b]
  408ff2:	std    
  408ff3:	dec    DWORD PTR [edi-0x18]
  408ff6:	add    DWORD PTR [eax],edx
  408ff8:	adc    BYTE PTR [ebx],al
  408ffa:	add    BYTE PTR [ebp+ebx*4-0x73],dh
  408ffe:	inc    ecx
  408fff:	sub    al,0xb0
  409001:	push   0xffffffb8
  409003:	sub    al,0x91
  409005:	add    ch,al
  409007:	sub    esi,DWORD PTR [esi+0x200b0002]
  40900d:	jbe    0x409013
  40900f:	jmp    0x40937d
  409014:	pop    ebp
  409015:	xchg   esi,eax
  409016:	sar    esi,0xcf
  409019:	dec    BYTE PTR [edx+eax*2-0x4498abb4]
  409020:	cmp    al,0x45
  409022:	jmp    edi
  409024:	cmp    DWORD PTR [edi],esp
  409026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409027:	call   FWORD PTR [esi+0x3c754321]
  40902d:	xor    BYTE PTR [eax+0xe193900],al
  409033:	jne    0x40906a
  409035:	inc    ecx
  409036:	mov    al,ds:0xfb5d7e9e
  40903b:	mov    edi,0xcc9b15ec
  409040:	and    eax,ebx
  409042:	add    edi,edi
  409044:	in     al,dx
  409045:	and    al,0x1b
  409047:	or     DWORD PTR [eax],eax
  409049:	sar    DWORD PTR [ebp+0xf],0xeb
  40904d:	inc    ebx
  40904e:	repz add edi,edi
  409051:	les    ebx,FWORD PTR [ebx+ebx*1]
  409054:	std    
  409055:	scas   al,BYTE PTR es:[edi]
  409056:	xchg   ebp,eax
  409057:	push   cs
  409058:	lea    esp,[edx+ebx*2-0x6ac900f2]
  40905f:	mov    cl,0x2b
  409061:	mov    eax,DWORD PTR [edi+0x1b]
  409064:	inc    ecx
  409065:	shl    DWORD PTR [esi+0x351e500e],0xf3
  40906c:	dec    edi
  40906d:	push   ss
  40906e:	dec    ebp
  40906f:	sti    
  409070:	out    0x13,eax
  409072:	into   
  409073:	push   cs
  409074:	call   DWORD PTR [ecx]
  409076:	adc    al,0x77
  409078:	(bad)  
  409079:	inc    dl
  40907b:	ret    0x7b8c
  40907e:	xor    edi,DWORD PTR [ebp+eax*4-0x5b]
  409082:	in     eax,dx
  409083:	push   cs
  409084:	jmp    esi
  409086:	ins    BYTE PTR es:[edi],dx
  409087:	repz (bad) 
  409089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908a:	mov    bl,0xd
  40908c:	call   esi
  40908e:	out    dx,eax
  40908f:	dec    esi
  409090:	cmp    WORD PTR [edi],dx
  409093:	cli    
  409094:	mov    edi,0xcc9b3f4d
  409099:	adc    DWORD PTR [eax+0x3],ebx
  40909c:	jmp    FWORD PTR [eax+eax*1]
  40909f:	cmc    
  4090a0:	sbb    ebp,eax
  4090a2:	jne    0x409082
  4090a4:	push   cs
  4090a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090a6:	push   ebx
  4090a7:	popf   
  4090a8:	or     eax,0x1c390d9e
  4090ad:	add    BYTE PTR [eax-0x16f1398b],dl
  4090b3:	scas   eax,DWORD PTR es:[edi]
  4090b4:	mov    ebp,0x49183e98
  4090b9:	push   cs
  4090ba:	jle    0x4090c9
  4090bc:	rcl    DWORD PTR [esi],0xca
  4090bf:	or     eax,0x42b480a6
  4090c4:	lahf   
  4090c5:	push   cs
  4090c6:	data16 mov al,0x95
  4090c9:	pop    eax
  4090ca:	popf   
  4090cb:	push   cs
  4090cc:	mov    cs,WORD PTR [esi]
  4090ce:	popa   
  4090cf:	fwait
  4090d0:	or     eax,DWORD PTR [ecx+edi*1]
  4090d3:	sub    DWORD PTR [ecx+0x75e8bdfe],0xe
  4090da:	ds or  eax,0xd374f34
  4090e0:	sbb    bx,WORD PTR [ecx+0x2603e8a3]
  4090e7:	push   ebx
  4090e8:	xchg   ecx,eax
  4090e9:	or     eax,0x46410d1e
  4090ee:	stos   BYTE PTR es:[edi],al
  4090ef:	or     al,0x46
  4090f1:	cmp    al,0xfb
  4090f3:	sti    
  4090f4:	call   0x685c44b1
  4090f9:	inc    edi
  4090fa:	leave  
  4090fb:	or     eax,0x82fe0e2e
  409100:	popa   
  409101:	or     eax,0x3e90cee
  409106:	cmp    DWORD PTR [eax],eax
  409108:	(bad)  
  409109:	enter  0xf932,0x28
  40910d:	xchg   edi,eax
  40910e:	cmp    eax,0x3c180
  409113:	inc    esp
  409114:	add    edx,DWORD PTR [eax]
  409116:	cld    
  409117:	cmp    DWORD PTR [eax],eax
  409119:	add    cl,ch
  40911b:	mov    ds:0x3aa82c4a,al
  409120:	or     eax,0xcf52f575
  409125:	xchg   esi,eax
  409126:	fidiv  WORD PTR [edi+esi*2]
  409129:	test   DWORD PTR [ecx+0x41ff0d2f],edx
  40912f:	xchg   edi,edi
  409131:	(bad)  
  409132:	call   0xc0031446
  409137:	xor    al,0xd
  409139:	push   eax
  40913a:	shl    edx,0x70
  40913d:	jmp    FWORD PTR [esi-0x583d7d0a]
  409143:	cmp    al,0xd
  409145:	push   eax
  409146:	sahf   
  409147:	push   cs
  409148:	dec    eax
  409149:	(bad)  
  40914a:	xchg   esi,eax
  40914b:	sub    al,0x18
  40914d:	in     eax,0x5
  40914f:	cmp    eax,0xe96c8900
  409154:	or     eax,0xfd7d7eff
  409159:	sub    DWORD PTR [edi+0x5c000035],0xffffffae
  409160:	ds (bad) 
  409162:	data16 cmp al,0x13
  409165:	add    bh,cl
  409167:	cmp    al,BYTE PTR [eax]
  409169:	add    dh,ah
  40916b:	mov    dh,0x7b
  40916d:	add    cl,ch
  40916f:	cmp    bh,BYTE PTR [ebp-0x6b]
  409172:	sub    edi,DWORD PTR [edi]
  409174:	or     edi,edi
  409176:	ins    BYTE PTR es:[edi],dx
  409177:	add    bl,bh
  409179:	xlat   BYTE PTR ds:[ebx]
  40917a:	dec    edi
  40917b:	shl    DWORD PTR [ebx-0x24],0x40
  40917f:	jmp    0xe9a4d9d6
  409184:	cmp    dh,bh
  409186:	mov    edi,0x75173894
  40918b:	fs data16 dec BYTE PTR ds:[esi]
  409190:	inc    esp
  409191:	jge    0x4091d5
  409193:	add    ah,ah
  409195:	dec    edi
  409196:	addr16 mov ebx,0xe7ff3ef4
  40919c:	pop    ax
  40919e:	(bad)  
  40919f:	call   FWORD PTR [ebx-0x74fd8b41]
  4091a5:	pop    eax
  4091a6:	mov    WORD PTR [ebp-0x1022e],ss
  4091ac:	adc    eax,0x1d892b41
  4091b1:	mov    bl,0xfd
  4091b3:	push   DWORD PTR [edi+0x67]
  4091b6:	int3   
  4091b7:	sub    BYTE PTR [ecx+0x4],dl
  4091ba:	push   DWORD PTR [ebp-0x6c]
  4091bd:	out    0x98,eax
  4091bf:	xchg   esi,eax
  4091c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c1:	cld    
  4091c2:	(bad)  
  4091c3:	mov    ch,0xc
  4091c5:	std    
  4091c6:	(bad)  
  4091c7:	jmp    DWORD PTR [eax]
  4091c9:	in     al,dx
  4091ca:	loopne 0x409162
  4091cc:	(bad)  
  4091cd:	cld    
  4091ce:	mov    BYTE PTR [ebp-0x10310],al
  4091d4:	xor    BYTE PTR [ecx+ecx*2+0x3c],ch
  4091d8:	adc    DWORD PTR [edi+edi*8],eax
  4091db:	mov    ch,0x0
  4091dd:	add    ch,bh
  4091df:	(bad)  
  4091e0:	(bad)  
  4091e1:	mov    eax,0x2000646f
  4091e6:	or     BYTE PTR [edi+0x4f672374],bh
  4091ec:	cmp    al,0xd1
  4091ee:	(bad)  
  4091ef:	(bad)  
  4091f0:	mov    ch,0xb0
  4091f2:	cld    
  4091f3:	(bad)  
  4091f4:	push   DWORD PTR [edi+0x72]
  4091f7:	pop    es
  4091f8:	call   0x3f8bf6
  4091fd:	js     0x4091b7
  4091ff:	xchg   ecx,eax
  409200:	jmp    DWORD PTR [edi]
  409202:	mov    al,BYTE PTR [edx+eax*8+0x50fefc16]
  409209:	inc    edi
  40920a:	mov    dl,0xbb
  40920c:	(bad)  
  40920d:	cmp    edx,esi
  40920f:	or     ebp,eax
  409211:	or     BYTE PTR [ebp-0x274bfffd],al
  409217:	sti    
  409218:	test   BYTE PTR [edx+ecx*1+0xb],bh
  40921c:	(bad)  
  40921d:	mov    esi,0xb6fe4ecb
  409222:	sbb    DWORD PTR [edx],ebx
  409224:	and    al,0x15
  409226:	sbb    DWORD PTR [ebx],eax
  409228:	(bad)  
  409229:	in     al,dx
  40922a:	pusha  
  40922b:	or     bh,bh
  40922d:	sahf   
  40922e:	inc    eax
  40922f:	jg     0x4091c3
  409231:	xchg   esi,eax
  409232:	cmp    DWORD PTR ds:0xb01941c2,edi
  409238:	mov    dl,BYTE PTR [ebp-0x6ef46eb7]
  40923e:	pop    ebp
  40923f:	jb     0x409240
  409241:	add    BYTE PTR [esi+0x1d],dh
  409244:	inc    ebx
  409245:	je     0x409285
  409247:	leave  
  409248:	mov    bl,0xfe
  40924a:	in     al,dx
  40924b:	adc    BYTE PTR [ebx],bl
  40924d:	stos   DWORD PTR es:[edi],eax
  40924e:	pop    edi
  40924f:	jno    0x40925c
  409251:	call   0xff4b1936
  409256:	adc    BYTE PTR [esi-0x4],0xff
  40925a:	in     eax,dx
  40925b:	lea    edx,[edi]
  40925d:	xor    DWORD PTR [ebp-0x6c],0xffffff9d
  409261:	jmp    DWORD PTR [eax+0x41750a38]
  409267:	scas   eax,DWORD PTR es:[edi]
  409268:	jle    0x4091f9
  40926a:	es stos DWORD PTR es:[edi],eax
  40926c:	jl     0x4092b3
  40926e:	sbb    eax,0x8cfeed3e
  409273:	pop    ds
  409274:	sbb    edi,DWORD PTR [edi+0x6a0ac30e]
  40927a:	pop    edx
  40927b:	retf   0x790
  40927e:	adc    DWORD PTR [ebp+0x3df6ff0a],ecx
  409284:	out    0xfe,eax
  409286:	fs add cl,dh
  409289:	sbb    edx,DWORD PTR [edx+0x530b1e09]
  40928f:	add    BYTE PTR [ecx-0x1740ed6b],al
  409295:	fwait
  409296:	jo     0x409264
  409298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409299:	add    eax,esi
  40929b:	rcr    DWORD PTR [esp+ebx*8-0x28feff87],cl
  4092a2:	int    0x9
  4092a4:	out    dx,al
  4092a5:	inc    BYTE PTR [eax]
  4092a7:	out    dx,al
  4092a8:	xchg   esp,eax
  4092a9:	cld    
  4092aa:	mov    bl,0x1e
  4092ac:	mov    al,0x1c
  4092ae:	lds    ebx,FWORD PTR [esi+0x3e90d5b9]
  4092b4:	sbb    BYTE PTR [eax-0x2ef671f9],ch
  4092ba:	push   es
  4092bb:	stos   DWORD PTR es:[edi],eax
  4092bc:	or     DWORD PTR [esi+0x6aa17e9d],edi
  4092c2:	(bad)  
  4092c3:	stc    
  4092c4:	inc    DWORD PTR [eax-0x52]
  4092c7:	xor    bh,BYTE PTR [edi-0x53d3f518]
  4092cd:	iret   
  4092ce:	les    ebx,FWORD PTR [esi+0x21]
  4092d1:	in     eax,dx
  4092d2:	jo     0x40932a
  4092d4:	or     edx,esp
  4092d6:	inc    ebx
  4092d7:	(bad)
  4092da:	pushf  
  4092db:	test   bl,0x27
  4092de:	add    al,0xe9
  4092e0:	or     ah,bh
  4092e2:	sti    
  4092e3:	push   ds
  4092e4:	outs   dx,BYTE PTR ds:[esi]
  4092e5:	ins    DWORD PTR es:[edi],dx
  4092e6:	or     ch,BYTE PTR [esi]
  4092e8:	sbb    BYTE PTR ds:0xd3092674,bh
  4092ee:	add    edx,DWORD PTR [ebx+0x556fc100]
  4092f4:	mov    edi,0x90e9be8
  4092f9:	jmp    0x5567a481
  4092fe:	or     bh,dh
  409300:	hlt    
  409301:	jmp    FWORD PTR [eax]
  409303:	(bad)  
  409304:	fmul   QWORD PTR [edi-0x67]
  409307:	push   edx
  409308:	mov    DWORD PTR [edx-0xaccffda],ebx
  40930e:	mov    edi,0x67b8ce95
  409313:	mov    ecx,0xb8ffbffe
  409318:	inc    ebx
  409319:	xchg   ebx,eax
  40931a:	pop    es
  40931b:	adc    DWORD PTR [esi+0x23feff04],ebx
  409321:	push   0xffffff91
  409323:	test   BYTE PTR [eax+0x18],0x99
  409327:	pop    eax
  409328:	inc    ebx
  409329:	or     edi,edi
  40932b:	pop    esp
  40932c:	xor    DWORD PTR [ecx],ecx
  40932e:	jne    0x409321
  409330:	inc    edx
  409331:	cld    
  409332:	mov    ss,esi
  409334:	inc    eax
  409335:	aaa    
  409336:	ret    0x3ae5
  409339:	mov    bl,0x8a
  40933b:	aad    0xba
  40933d:	inc    ebx
  40933e:	in     al,dx
  40933f:	mov    dh,0x30
  409341:	or     DWORD PTR [ebp-0x14fbed4],ecx
  409347:	xor    al,0x65
  409349:	or     DWORD PTR [ebp-0xb],esi
  40934c:	inc    edx
  40934d:	cs arpl cx,bp
  409350:	cmp    dh,ch
  409352:	mov    edi,0x34d7e6
  409357:	jmp    0x8185d496
  40935c:	cmp    eax,0xf9e90000
  409361:	ret    0x76f3
  409364:	cmp    BYTE PTR [eax],al
  409366:	add    BYTE PTR [ebx],al
  409368:	xor    eax,0x3ad2ff9a
  40936d:	call   0x5013:0xde006bff
  409374:	fs xchg esi,eax
  409376:	or     al,0xf7
  409378:	dec    esi
  409379:	inc    eax
  40937a:	mov    al,0xfe
  40937c:	add    ch,al
  40937e:	sti    
  40937f:	(bad)  
  409380:	jne    0x4093be
  409382:	in     al,0xa3
  409384:	arpl   ax,sp
  409386:	add    ecx,DWORD PTR [ebx]
  409388:	shl    BYTE PTR [esi+eax*1+0x3d08ee8],0x0
  409390:	push   0x40240d
  409395:	das    
  409396:	ja     0x4093a7
  409398:	call   0x3f23b4
  40939d:	mov    al,ds:0x558dcf84
  4093a2:	lock idiv bh
  4093a5:	scas   eax,DWORD PTR es:[edi]
  4093a6:	push   ebx
  4093a7:	push   ecx
  4093a8:	call   0x3f2414
  4093ad:	sub    DWORD PTR [esi-0x7800811],eax
  4093b3:	out    0xd,eax
  4093b5:	adc    eax,edi
  4093b7:	(bad)  
  4093b8:	push   0xffffffa0
  4093ba:	imul   ebx,ecx,0x3c
  4093bd:	push   ecx
  4093be:	cld    
  4093bf:	(bad)  
  4093c0:	mov    ch,0xc0
  4093c2:	lock (bad) 
  4093c4:	jmp    FWORD PTR [edi-0x6f17f48a]
  4093ca:	xchg   edi,eax
  4093cb:	(bad)  
  4093cc:	(bad)  
  4093cd:	jmp    0xc0387f57
  4093d2:	clc    
  4093d3:	cmp    BYTE PTR [ebp-0x10f4400],0xff
  4093da:	pusha  
  4093db:	ja     0x4093ef
  4093dd:	push   0xbeef0351
  4093e2:	mov    edi,0xaff7ebb5
  4093e7:	clc    
  4093e8:	(bad)  
  4093e9:	jne    0x409403
  4093eb:	jmp    0x409383
  4093ed:	mov    dl,0x9f
  4093ef:	clc    
  4093f0:	(bad)  
  4093f1:	mov    ch,0x6c
  4093f3:	lock (bad) 
  4093f5:	(bad)  
  4093f6:	cmp    ecx,eax
  4093f8:	cmp    edx,DWORD PTR [eax-0x4af849f2]
  4093fe:	or     esi,eax
  409400:	pop    es
  409401:	(bad)  
  409402:	dec    BYTE PTR [ebx-0x9]
  409405:	(bad)  
  409406:	ins    BYTE PTR es:[edi],dx
  409407:	and    DWORD PTR [ebx],ebx
  409409:	xor    dh,ch
  40940b:	aad    0x7
  40940d:	jmp    FWORD PTR [eax+ebp*8-0xf2100f1]
  409414:	push   edi
  409415:	nop
  409416:	(bad)  
  409417:	in     eax,dx
  409418:	pop    es
  409419:	inc    ebp
  40941a:	sar    edi,1
  40941c:	mov    esi,0x7fdc6fe
  409421:	jne    0x4093e0
  409423:	lock or DWORD PTR [edx+0x39],esp
  409427:	sbb    DWORD PTR [edx],edi
  409429:	ret    0x193d
  40942c:	scas   al,BYTE PTR es:[edi]
  40942d:	mov    dl,BYTE PTR [ebp-0x5917c069]
  409433:	and    eax,0x2cfc8d07
  409438:	mov    ah,0xfe
  40943a:	add    BYTE PTR [ecx+ecx*1],al
  40943d:	push   es
  40943e:	jne    0x409475
  409440:	xor    DWORD PTR [ebx],esp
  409442:	bound  edi,QWORD PTR [ecx]
  409444:	sbb    edx,edi
  409446:	mov    edi,0xe59446
  40944b:	cmp    DWORD PTR [ecx],ebx
  40944d:	ds inc ebp
  40944f:	popa   
  409450:	sbb    BYTE PTR [ebx],al
  409452:	add    BYTE PTR [ecx],bh
  409454:	pop    esi
  409455:	shl    ebx,0x56
  409458:	adc    eax,0x18e30003
  40945d:	cdq    
  40945e:	call   eax
  409460:	sbb    BYTE PTR [ecx+0xfdbadff],bl
  409466:	push   eax
  409467:	les    edx,FWORD PTR [edi+ecx*1-0x4c68d109]
  40946e:	(bad)  
  40946f:	lods   al,BYTE PTR ds:[esi]
  409470:	add    BYTE PTR [ecx+0x7],ah
  409473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409474:	add    al,0x51
  409476:	push   ecx
  409477:	fwait
  409478:	add    cl,ch
  40947a:	cli    
  40947b:	into   
  40947c:	mov    ebx,fs
  40947e:	sbb    al,0x18
  409480:	add    ecx,ebp
  409482:	add    edx,DWORD PTR [ecx-0x93aeecd]
  409488:	push   es
  409489:	mov    esp,0x5a28d6f3
  40948e:	pop    es
  40948f:	out    0xb0,al
  409491:	jno    0x4094c7
  409493:	lods   al,BYTE PTR ds:[esi]
  409494:	jnp    0x4094ab
  409496:	(bad)  
  409498:	add    eax,0x38d6b1b9
  40949d:	jp     0x4094a6
  40949f:	add    dh,al
  4094a1:	ja     0x40950f
  4094a3:	adc    al,0xc6
  4094a5:	add    eax,0x70571bfe
  4094aa:	test   BYTE PTR [esi],0x23
  4094ad:	add    BYTE PTR [ebx-0x26b459fd],al
  4094b3:	push   cs
  4094b4:	sahf   
  4094b5:	add    eax,0x184290de
  4094ba:	or     eax,0x60058e73
  4094bf:	adc    BYTE PTR [ebp+0x7e06c60d],0x4b
  4094c6:	int    0xe
  4094c8:	jbe    0x4094cf
  4094ca:	sar    DWORD PTR [edi],0xd0
  4094cd:	add    eax,0x8ca6faae
  4094d2:	or     DWORD PTR [ecx+esi*4+0x560e917b],esi
  4094d9:	add    eax,0xd615096
  4094de:	mov    es,WORD PTR [esi]
  4094e0:	push   ecx
  4094e1:	call   FWORD PTR [ebx+0x6]
  4094e4:	ds stc 
  4094e6:	test   al,0x8f
  4094e8:	jle    0x409482
  4094ea:	(bad)  
  4094eb:	jmp    0xc3df:0x1be153a
  4094f2:	inc    eax
  4094f3:	jmp    0x5728e02f
  4094f8:	aas    
  4094f9:	add    eax,0x1d12dcff
  4094fe:	cwde   
  4094ff:	xchg   ebp,eax
  409500:	aas    
  409501:	add    eax,0x3a00eb68
  409506:	adc    eax,0xc3ccd1be
  40950b:	inc    eax
  40950c:	jmp    0x3728e048
  409511:	aas    
  409512:	add    eax,0x1ce29cff
  409517:	adc    BYTE PTR [ebp+0x3f],0x5
  40951b:	push   0xbe153ae9
  409520:	sub    DWORD PTR [eax-0x3c],0x4b37e940
  409527:	call   0xff45d222
  40952c:	jl     0x4094e0
  40952e:	sbb    al,0x68
  409530:	xor    eax,0x7de8053f
  409535:	and    al,0x5
  409537:	(bad)  
  409538:	fiadd  WORD PTR [esi]
  40953a:	adc    al,0xf7
  40953c:	(bad)  
  40953d:	xor    al,0x18
  40953f:	mov    DWORD PTR [esi+0x3c],ebx
  409542:	add    eax,0xd257cff
  409547:	(bad)  
  409548:	mov    esi,0xb60b8b3c
  40954d:	mov    esi,0x3f8ce7fc
  409552:	add    eax,0xfeea6ff
  409557:	neg    DWORD PTR [esi+0x666d183c]
  40955d:	xor    al,0x5
  40955f:	jmp    DWORD PTR [esi*1-0x49ff0ee9]
  409566:	cli    
  409567:	(bad)  
  409568:	inc    DWORD PTR [eax]
  40956a:	sub    eax,0x41b7e7fc
  40956f:	cld    
  409570:	dec    eax
  409572:	ror    BYTE PTR [eax],cl
  409574:	call   DWORD PTR [ebx+ebp*4-0x18]
  409578:	add    ah,0x74
  40957b:	jmp    DWORD PTR [ecx+0x42]
  40957f:	std    
  409580:	je     0x40958a
  409582:	js     0x409601
  409584:	mov    edi,edi
  409586:	ja     0x40950f
  409588:	inc    esp
  409589:	cld    
  40958a:	or     BYTE PTR [eax],al
  40958c:	add    bh,ch
  40958e:	data16 fs mov cl,0x3c
  409592:	xchg   ecx,eax
  409593:	jmp    DWORD PTR [edi-0x3e]
  409596:	aam    0x3e
  409598:	(bad)  
  409599:	(bad)  
  40959a:	lods   eax,DWORD PTR ds:[esi]
  40959b:	pop    es
  40959c:	out    0x47,eax
  40959e:	ins    BYTE PTR es:[edi],dx
  40959f:	std    
  4095a0:	(bad)  
  4095a1:	push   0x40381a
  4095a6:	aaa    
  4095a7:	xor    ebx,DWORD PTR [ebx+0x29]
  4095aa:	loope  0x4095ab
  4095ac:	(bad)  
  4095ad:	jne    0x409547
  4095af:	out    0x8f,eax
  4095b1:	std    
  4095b2:	xchg   edi,eax
  4095b3:	cld    
  4095b4:	addr16 retf 0x3f54
  4095b8:	jmp    DWORD PTR [edi-0x5e]
  4095bb:	(bad)  
  4095bc:	(bad)  
  4095bd:	jg     0x409626
  4095bf:	jb     0x4095c8
  4095c1:	call   0x3f90bc
  4095c6:	call   0x6081d1a4
  4095cb:	add    DWORD PTR [bx+si],eax
  4095ce:	add    BYTE PTR [eax+0x7f],ah
  4095d1:	push   DWORD PTR [ebp+0x58]
  4095d4:	out    0x5a,eax
  4095d6:	(bad)  
  4095d7:	xchg   edi,eax
  4095d8:	cld    
  4095d9:	addr16 push ds
  4095db:	jne    0x40961b
  4095dd:	jmp    DWORD PTR [edi+0x39]
  4095e0:	pop    ss
  4095e1:	add    eax,DWORD PTR [eax]
  4095e3:	mov    ecx,0x51078e72
  4095e8:	rol    BYTE PTR ds:0x8d8236ff,1
  4095ee:	sti    
  4095ef:	cs add al,0xfb
  4095f2:	out    0x8e,eax
  4095f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f5:	add    edi,edi
  4095f7:	lock (bad) 
  4095f9:	(bad)  
  4095fa:	jmp    FWORD PTR [ebp-0x72]
  4095fd:	push   ss
  4095fe:	inc    DWORD PTR [ebp+ebx*1-0x4e55e6e5]
  409605:	add    ecx,DWORD PTR [ebx]
  409607:	stc    
  409608:	inc    esp
  409609:	retf   0xce67
  40960c:	add    eax,edx
  40960e:	(bad)  
  40960f:	jle    0x4095d2
  409611:	push   esp
  409612:	xchg   edx,eax
  409613:	out    0xd1,al
  409615:	mov    dl,0x4f
  409617:	push   ecx
  409618:	sbb    DWORD PTR [ebx],eax
  40961a:	out    dx,eax
  40961b:	xchg   edi,eax
  40961c:	jo     0x4095a7
  40961e:	cmp    al,0x78
  409620:	sbb    DWORD PTR [ebx+0x1b214cfe],esi
  409626:	jne    0x4095b2
  409628:	stc    
  409629:	add    ebx,DWORD PTR [eax+0x21]
  40962c:	sbb    BYTE PTR [ebx],al
  40962e:	out    dx,eax
  40962f:	out    dx,eax
  409630:	cmp    BYTE PTR [edx+0x3d],0x0
  409634:	clc    
  409635:	sbb    BYTE PTR [ebx-0x14eedb02],dh
  40963b:	pusha  
  40963c:	retf   0x321
  40963f:	call   0xff433100
  409644:	jo     0x40969c
  409646:	or     al,0x0
  409648:	in     al,0x8d
  40964a:	out    dx,eax
  40964b:	cmp    BYTE PTR [ebp+0x44],0x6e
  40964f:	add    bl,ah
  409651:	cmc    
  409652:	add    dh,BYTE PTR [ebp+0x31]
  409655:	inc    ecx
  409656:	mov    bl,0x8a
  409658:	pop    esi
  409659:	jmp    DWORD PTR [ebp+0x1303fd8d]
  40965f:	push   ds
  409660:	dec    esi
  409661:	mov    eax,fs
  409663:	jmp    0x409612
  409665:	add    cl,BYTE PTR [esi-0x7a212cfd]
  40966b:	jns    0x4096ae
  40966d:	sbb    BYTE PTR [edx+0x3],dh
  409670:	add    al,BYTE PTR cs:[ebx]
  409673:	and    BYTE PTR [esi],ah
  409675:	mov    eax,fs
  409677:	jmp    0x409632
  409679:	add    DWORD PTR [esi+0x3],esp
  40967c:	push   ss
  40967d:	mov    WORD PTR [ebx+eax*1-0x7c],ds
  409681:	clc    
  409682:	inc    eax
  409683:	int    0xb3
  409685:	add    DWORD PTR [esi-0x33],ecx
  409688:	clc    
  409689:	cld    
  40968a:	call   0x9a5558e7
  40968f:	retf   0xaf35
  409692:	cmc    
  409693:	inc    esp
  409694:	cmp    DWORD PTR [eax],eax
  409696:	jmp    0xd579969e
  40969b:	inc    ecx
  40969c:	add    ecx,DWORD PTR [eax+edi*8+0x10]
  4096a0:	aaa    
  4096a1:	outs   dx,BYTE PTR ds:[esi]
  4096a2:	add    cl,ch
  4096a4:	mov    gs,WORD PTR [ebp-0x8]
  4096a7:	imul   edi,esp,0x6d78a38
  4096ad:	mov    DWORD PTR [ebp+0x13],edi
  4096b0:	push   es
  4096b1:	pop    ss
  4096b2:	jg     0x409667
  4096b4:	pop    edi
  4096b5:	add    eax,0x7669e38b
  4096ba:	inc    BYTE PTR [esp+eax*1-0x6a]
  4096be:	mov    ebp,esp
  4096c0:	jmp    0x409736
  4096c2:	mov    eax,ds:0xca1103e8
  4096c7:	push   cs
  4096c8:	inc    ebp
  4096c9:	cmp    DWORD PTR [eax-0x7bf72],ebx
  4096cf:	rcr    BYTE PTR [ecx-0x49fffe3a],1
  4096d5:	aaa    
  4096d6:	inc    eax
  4096d7:	je     0x40971d
  4096d9:	cmp    cl,BYTE PTR [ebx-0x35ce59f9]
  4096df:	cmp    eax,0xc47d3528
  4096e4:	in     eax,dx
  4096e5:	aaa    
  4096e6:	inc    eax
  4096e7:	jne    0x40971d
  4096e9:	cmp    ch,bl
  4096eb:	inc    ebp
  4096ec:	(bad)  
  4096ed:	jge    0x4096ef
  4096ef:	mov    ds:0xffbf7a18,eax
  4096f4:	imul   edi,DWORD PTR [ecx-0x51],0x35283e
  4096fb:	jne    0x4096ee
  4096fd:	add    BYTE PTR [ebx],bh
  4096ff:	jmp    0x40973a
  409701:	pop    ds
  409702:	je     0x409704
  409704:	jmp    0x409716
  409706:	xchg   edi,eax
  409707:	add    BYTE PTR [edx-0x18],ch
  40970a:	cmp    ecx,ebx
  40970c:	push   eax
  40970d:	push   es
  40970e:	jl     0x409710
  409710:	call   esp
  409712:	jl     0x4096d6
  409714:	inc    eax
  409715:	jmp    0xe24cd3d9
  40971a:	cli    
  40971b:	mov    WORD PTR [eax],fs
  40971d:	adc    DWORD PTR es:[edi+0x13aa83e],ebp
  409724:	adc    eax,0xffbf78bb
  409729:	imul   esi,esi,0x74dcfefc
  40972f:	ret    0xe940
  409732:	cmp    ebx,0x50
  409735:	mov    dh,0xfd
  409737:	(bad)  
  409738:	(bad)  
  409739:	call   0xe92b9778
  40973e:	std    
  40973f:	je     0x409704
  409741:	inc    edx
  409742:	cmp    BYTE PTR [esi],0x8
  409745:	jmp    0xe915b07
  40974a:	cli    
  40974b:	(bad)  
  40974c:	(bad)  
  40974d:	push   DWORD PTR [edi+ebx*8]
  409750:	(bad)  
  409751:	xor    eax,0x40bf51
  409756:	scas   eax,DWORD PTR es:[edi]
  409757:	call   0xfc51d5ad
  40975c:	add    ah,0x64
  40975f:	call   DWORD PTR [edx+edi*1]
  409762:	add    BYTE PTR [esi-0x43],ch
  409765:	inc    esi
  409767:	push   ebp
  409768:	lods   eax,DWORD PTR ds:[esi]
  409769:	ds inc ecx
  40976b:	push   eax
  40976c:	cld    
  40976d:	(bad)  
  40976e:	jmp    DWORD PTR [eax]
  409770:	lds    edx,FWORD PTR [ebx-0x75]
  409773:	mov    esp,0x43f0c285
  409778:	lea    eax,[ebx+0x8]
  40977b:	sbb    eax,esp
  40977d:	jb     0x40978a
  40977f:	mov    ds:0xe4000c7f,eax
  409784:	push   es
  409785:	cmp    BYTE PTR [eax],0x10
  409788:	ja     0x409791
  40978a:	sub    edx,DWORD PTR [eax+0x5d]
  40978d:	leave  
  40978e:	ret    0x3e8
  409791:	cmp    BYTE PTR [eax],0xae
  409794:	ja     0x4097a6
  409796:	sub    ebp,0x52
  409799:	aas    
  40979a:	inc    ecx
  40979b:	rol    BYTE PTR [ebx],1
  40979d:	jne    0x4097a6
  40979f:	jmp    0x409764
  4097a1:	pop    ecx
  4097a2:	leave  
  4097a3:	and    cl,BYTE PTR [eax+eax*1]
  4097a6:	sub    al,0x81
  4097a9:	je     0x4097e9
  4097ab:	pop    ebx
  4097ac:	push   edi
  4097ad:	or     al,0x4a
  4097af:	and    esp,esi
  4097b1:	add    DWORD PTR [ebx],ecx
  4097b3:	push   edx
  4097b4:	ja     0x4097bc
  4097b6:	sub    DWORD PTR ds:0x9475010f,0x2c
  4097bd:	shr    bl,0x44
  4097c0:	add    DWORD PTR [ebp+0xc],ecx
  4097c3:	or     eax,DWORD PTR [esi+0xc]
  4097c6:	add    eax,0x6e93900
  4097cb:	add    BYTE PTR [ecx],bh
  4097cd:	test   al,0xe2
  4097cf:	add    DWORD PTR [ecx],ecx
  4097d1:	rcr    DWORD PTR [ecx*4-0x74ad4192],1
  4097d8:	or     al,0xe1
  4097da:	inc    esp
  4097db:	push   eax
  4097dc:	pop    esi
  4097dd:	xor    al,0x10
  4097df:	push   edx
  4097e0:	popa   
  4097e1:	mov    esp,0x414efe9a
  4097e6:	pop    ebp
  4097e7:	leave  
  4097e8:	jnp    0x4097cb
  4097ea:	add    ch,BYTE PTR [ebx]
  4097ec:	bound  ecx,QWORD PTR [esi-0x3c9f38b]
  4097f2:	or     ch,BYTE PTR [edx+0x39]
  4097f5:	adc    eax,DWORD PTR [edi+edi*8]
  4097f8:	dec    esp
  4097f9:	mov    bh,0x40
  4097fb:	inc    ecx
  4097fc:	cmp    DWORD PTR [edx-0x39],ebp
  4097ff:	cmovb  ebp,DWORD PTR [ecx]
  409802:	ja     0x409869
  409804:	shl    BYTE PTR [ebx+0x643569fe],0x46
  40980b:	lock imul eax,DWORD PTR [ecx-0xa],0x6d45f68b
  409813:	add    BYTE PTR [ebx+eiz*4-0x4419b00e],bh
  40981a:	(bad)  
  40981b:	inc    BYTE PTR [edi+ebx*4+0x40]
  40981f:	inc    ecx
  409820:	cmp    DWORD PTR [edx-0x39],ebp
  409823:	or     eax,DWORD PTR [edx+0x29]
  409826:	jbe    0x40985b
  409828:	mov    ah,0xab
  40982a:	repnz add BYTE PTR [eax],0x41
  40982e:	in     eax,0x2
  409830:	je     0x409884
  409832:	jb     0x409877
  409834:	or     cl,bh
  409836:	cwde   
  409837:	jmp    0x818a:0xfef5b5b4
  40983e:	pop    ebx
  40983f:	inc    esi
  409840:	lock xchg esi,eax
  409842:	call   FWORD PTR [eax+0xc]
  409845:	jmp    0x64da:0x910858fe
  40984c:	(bad)  
  40984d:	jg     0x4098b8
  40984f:	jmp    0x193095e4
  409854:	inc    DWORD PTR [ebp+0x42]
  409857:	inc    DWORD PTR [ecx+edi*1-0x7d]
  40985b:	lods   al,BYTE PTR ds:[esi]
  40985c:	or     al,0xd3
  40985e:	add    BYTE PTR [esi-0x401aa87],ch
  409864:	inc    ecx
  409865:	cmovno ebp,ecx
  409868:	cmp    BYTE PTR [edx+0x7],0x62
  40986c:	ret    
  40986d:	jecxz  0x409837
  40986f:	stos   BYTE PTR es:[edi],al
  409870:	or     al,0x39
  409872:	push   ebx
  409873:	jb     0x409865
  409875:	das    
  409876:	je     0x409865
  409878:	(bad)  
  409879:	lods   eax,DWORD PTR ds:[esi]
  40987a:	or     BYTE PTR [esi+0x19],dh
  40987d:	jo     0x4098bc
  40987f:	sub    BYTE PTR [edx+edi*4],al
  409882:	(bad)  
  409883:	lock push ebx
  409885:	push   cs
  409886:	je     0x409875
  409888:	dec    BYTE PTR [ebp+0x74195608]
  40988e:	cmp    eax,0xba0003a8
  409893:	(bad)  
  409894:	lock mov al,BYTE PTR [ebp-0x7efd8ff0]
  40989b:	(bad)  
  40989c:	sub    dl,BYTE PTR [eax]
  40989e:	cmp    DWORD PTR [ebx+0x62],edx
  4098a1:	lock mov ebx,0x45ff10c4
  4098a7:	or     al,0x11
  4098a9:	add    ebp,DWORD PTR [eax-0x6f4ea03]
  4098af:	jae    0x409896
  4098b1:	int3   
  4098b2:	js     0x4098c4
  4098b4:	jmp    0x114cbeb7
  4098b9:	loopne 0x40988f
  4098bb:	std    
  4098bc:	push   ebp
  4098be:	xor    eax,eax
  4098c0:	jae    0x4098a7
  4098c2:	test   DWORD PTR [edi+0x748fe90f],edi
  4098c8:	adc    al,0xde
  4098ca:	add    DWORD PTR [eax],edx
  4098cc:	call   0xff3dd27d
  4098d1:	loop   0x40994d
  4098d3:	je     0x4098d9
  4098d5:	mov    al,0x78
  4098d7:	or     eax,0x3d205100
  4098dc:	inc    ecx
  4098dd:	jmp    0x287e5cb4
  4098e2:	cmp    eax,0x4f7f8be8
  4098e7:	dec    BYTE PTR [edx]
  4098e9:	test   eax,0xdc680cc1
  4098ee:	(bad)  
  4098ef:	add    BYTE PTR ds:[ecx],al
  4098f2:	(bad)  
  4098f3:	ds inc ecx
  4098f5:	jmp    0x96b8bafa
  4098fa:	jle    0x409923
  4098fc:	or     al,al
  4098fe:	out    0xb6,al
  409900:	lods   eax,DWORD PTR ds:[esi]
  409901:	add    cl,ch
  409903:	cmp    cl,BYTE PTR [ebx-0x2959abc]
  409909:	je     0x4098f8
  40990b:	pop    es
  40990c:	adc    al,0x35
  40990e:	push   ss
  40990f:	je     0x409911
  409911:	and    DWORD PTR ds:0xf6c00942,0xffffffc1
  409918:	xchg   ebp,eax
  409919:	add    cl,ch
  40991b:	cmp    ch,BYTE PTR [edx+0x0]
  40991e:	fs jno 0x409919
  409921:	dec    edi
  409922:	ret    
  409923:	xlat   BYTE PTR ds:[ebx]
  409924:	(bad)
  409928:	add    bh,bh
  40992a:	xchg   esp,eax
  40992b:	(bad)  
  40992c:	std    
  40992d:	adc    al,0xd4
  40992f:	(bad)  
  409930:	add    BYTE PTR ds:[edx+0x7e],ch
  409934:	adc    BYTE PTR [ebx],cl
  409936:	add    BYTE PTR [eax+0xe],ah
  409939:	test   DWORD PTR [edx-0x6f],ebp
  40993c:	add    BYTE PTR [eax],al
  40993e:	call   FWORD PTR ds:0xe115fdf9
  409944:	cmp    eax,0xc8230041
  409949:	add    al,BYTE PTR [ebx+0x5746798]
  40994f:	jns    0x4099a8
  409951:	add    DWORD PTR [eax],eax
  409953:	pusha  
  409954:	lea    eax,[ebx-0xc]
  409957:	push   eax
  409958:	push   0x0
  40995a:	inc    DWORD PTR [eax]
  40995c:	sub    eax,0xa714e6fc
  409961:	cli    
  409962:	std    
  409963:	or     esp,DWORD PTR [eax+0x6139840a]
  409969:	add    BYTE PTR [eax],al
  40996b:	and    DWORD PTR ds:0xcc0efef8,0x2a
  409972:	add    DWORD PTR [eax],eax
  409974:	and    BYTE PTR [eax-0x7bd8ffca],al
  40997a:	and    al,0x1
  40997c:	adc    BYTE PTR [eax],al
  40997e:	push   eax
  40997f:	mov    edi,DWORD PTR ds:0xb85240f8
  409985:	push   0xffffff8b
  409987:	call   DWORD PTR [edi+0x68458956]
  40998d:	std    
  40998e:	jae    0x409984
  409990:	addr16 jae 0x40997b
  409993:	push   edx
  409994:	js     0x409929
  409996:	mov    edi,edi
  409998:	ja     0x40995f
  40999a:	inc    ebx
  40999b:	lock sar bh,1
  40999e:	(bad)  
  40999f:	dec    DWORD PTR [edi]
  4099a1:	inc    ebx
  4099a2:	in     al,dx
  4099a3:	add    al,ah
  4099a5:	(bad)  
  4099a6:	inc    DWORD PTR [edx+0x413f4ad5]
  4099ac:	sar    bh,1
  4099ae:	je     0x409a02
  4099b0:	cmp    DWORD PTR [ecx-0x1707bfc8],eax
  4099b6:	jmp    0x1150:0x2e90d29
  4099bd:	mov    edi,0x39004142
  4099c2:	bnd jne 0x4099ad
  4099c5:	mov    eax,ds:0x39005f1d
  4099ca:	out    dx,al
  4099cb:	ret    0x2173
  4099ce:	push   ecx
  4099cf:	inc    ebx
  4099d0:	inc    eax
  4099d1:	clc    
  4099d2:	call   0xe955a7c1
  4099d7:	add    dl,BYTE PTR [eax-0x1f]
  4099da:	daa    
  4099db:	inc    esp
  4099dc:	inc    ecx
  4099dd:	cmp    DWORD PTR [edx+0x7951e875],edi
  4099e3:	pop    esi
  4099e4:	add    BYTE PTR [ecx],bh
  4099e6:	faddp  st(2),st
  4099e8:	jae    0x4099f5
  4099ea:	adc    DWORD PTR [ebx+0x40],ecx
  4099ed:	clc    
  4099ee:	call   0xe9238bdd
  4099f3:	add    dl,BYTE PTR [eax-0x5f]
  4099f6:	and    BYTE PTR [ecx+eax*2+0x39],al
  4099fa:	xor    BYTE PTR [ebp-0x18],0x11
  4099fe:	push   ebp
  4099ff:	pop    esi
  409a00:	add    BYTE PTR [ecx],bh
  409a02:	jle    0x409a1e
  409a04:	push   0x43296b
  409a09:	and    DWORD PTR [ecx+0x58],eax
  409a0c:	add    BYTE PTR [ecx],bh
  409a0e:	mov    ecx,0xa879526a
  409a13:	add    bh,bh
  409a15:	ins    BYTE PTR es:[edi],dx
  409a16:	inc    ecx
  409a17:	jmp    0x409a92
  409a19:	mov    ecx,gs
  409a1b:	add    cl,BYTE PTR [ebx]
  409a1d:	stc    
  409a1e:	mov    bl,0x6c
  409a20:	lea    esi,[ebp+edi*1+0x53]
  409a24:	push   0x0
  409a26:	cmp    BYTE PTR [edx],ch
  409a28:	jbe    0x409a22
  409a2a:	loope  0x409a2b
  409a2c:	mov    cl,0xfd
  409a2e:	(bad)  
  409a2f:	cli    
  409a30:	sbb    eax,0x14fc576
  409a35:	inc    esi
  409a36:	mov    ah,0xfa
  409a38:	or     eax,0x73eff58a
  409a3d:	inc    esi
  409a3e:	lods   eax,DWORD PTR ds:[esi]
  409a3f:	dec    edi
  409a40:	xchg   ebx,eax
  409a41:	add    DWORD PTR [esi+0x49eaf174],ebx
  409a47:	cli    
  409a48:	in     eax,dx
  409a49:	sti    
  409a4a:	(bad)  
  409a4b:	je     0x409a2a
  409a4d:	push   esp
  409a4e:	xchg   ecx,eax
  409a4f:	es fdiv st(3),st
  409a52:	jg     0x4099dc
  409a54:	sub    ebp,eax
  409a56:	mov    ebx,0xe504c17c
  409a5b:	xor    ebp,DWORD PTR [edx+0x79]
  409a5e:	push   ebp
  409a5f:	push   DWORD PTR [edx+ebp*1]
  409a62:	sar    edi,1
  409a64:	call   0x343b2f53
  409a69:	or     al,0x61
  409a6b:	stc    
  409a6c:	outs   dx,BYTE PTR ds:[esi]
  409a6d:	sti    
  409a6e:	inc    edi
  409a6f:	cli    
  409a70:	adc    ebp,esp
  409a72:	aas    
  409a73:	je     0x409a56
  409a75:	jmp    0x409a04
  409a77:	or     DWORD PTR [ebp+0x79742ffb],0x9108adfb
  409a81:	dec    esi
  409a82:	mov    dh,0xf9
  409a84:	jne    0x409a81
  409a86:	(bad)  
  409a87:	in     al,dx
  409a88:	ins    DWORD PTR es:[edi],dx
  409a89:	jno    0x409a8b
  409a8b:	inc    ecx
  409a8c:	call   0xfa481db6
  409a91:	pop    ebp
  409a92:	jno    0x409a9d
  409a94:	jmp    0xfa38283d
  409a99:	dec    ebp
  409a9a:	jno    0x409a79
  409a9c:	call   0xfa28284d
  409aa1:	cmp    eax,0xffe8d171
  409aa6:	hlt    
  409aa7:	(bad)  
  409aa8:	cli    
  409aa9:	inc    BYTE PTR [eax-0x55]
  409aac:	sti    
  409aad:	(bad)  
  409aae:	es ret 0xfc74
  409ab2:	push   ds
  409ab3:	sub    BYTE PTR [edi],dh
  409ab5:	aas    
  409ab6:	test   al,0x3a
  409ab8:	jge    0x409a7d
  409aba:	in     eax,0xa2
  409abc:	xchg   edx,eax
  409abd:	sti    
  409abe:	push   es
  409abf:	mov    ds:0x3ad9c1c8,al
  409ac4:	push   ebx
  409ac5:	mov    eax,DWORD PTR ds:0xee0065ee
  409acb:	or     DWORD PTR [eax],ecx
  409acd:	call   0xff3b4c6c
  409ad2:	jb     0x409b36
  409ad4:	dec    esi
  409ad5:	call   0x40b2d3
  409ada:	loop   0x409b56
  409adc:	ins    DWORD PTR es:[edi],dx
  409add:	sbb    ebp,edx
  409adf:	jg     0x409b22
  409ae1:	jmp    0x409abe
  409ae3:	mov    edx,0x383d0d31
  409ae8:	xor    BYTE PTR [edi],0xe3
  409aeb:	leave  
  409aec:	add    al,dh
  409aee:	jmp    0x225d4f3
  409af3:	xchg   edx,eax
  409af4:	cmp    DWORD PTR [eax+0x3b],ecx
  409af7:	stos   BYTE PTR es:[edi],al
  409af8:	scas   eax,DWORD PTR es:[edi]
  409af9:	out    0x8a,al
  409afb:	stos   BYTE PTR es:[edi],al
  409afc:	pop    edi
  409afe:	shr    ebp,0x3a
  409b01:	push   ebx
  409b02:	mov    ecx,DWORD PTR [ebp+0x1eb3bcb7]
  409b08:	adc    dh,BYTE PTR [esp+ecx*1-0x7f]
  409b0c:	fisttp WORD PTR [edx-0x3fc89902]
  409b12:	je     0x409af8
  409b14:	arpl   di,ax
  409b16:	sar    ecx,0x3a
  409b19:	stc    
  409b1a:	je     0x409af9
  409b1c:	loop   0x409b9b
  409b1e:	stos   DWORD PTR es:[edi],eax
  409b1f:	add    BYTE PTR [edi-0xa],bh
  409b22:	or     eax,eax
  409b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b25:	call   FWORD PTR [esi-0x37]
  409b28:	and    cl,BYTE PTR ds:0x885ff00
  409b2e:	push   DWORD PTR [ebp-0x40]
  409b31:	in     al,0x69
  409b33:	sti    
  409b34:	pop    ds
  409b35:	test   BYTE PTR [ebx-0xb2afbb],0x75
  409b3c:	mov    esp,fs
  409b3e:	aas    
  409b3f:	(bad)  
  409b40:	aas    
  409b41:	test   BYTE PTR [ecx],0xc0
  409b44:	(bad)  
  409b45:	js     0x409b41
  409b47:	add    ah,BYTE PTR [eax-0x638a0104]
  409b4d:	div    BYTE PTR [ebx-0x8]
  409b50:	push   0xff92c1
  409b55:	pop    edi
  409b56:	or     al,al
  409b58:	pmulhuw mm2,mm6
  409b5b:	add    BYTE PTR [eax],al
  409b5d:	pusha  
  409b5e:	test   DWORD PTR [ebx-0x14],eax
  409b61:	jmp    0x409b5e
  409b63:	jle    0x409ba4
  409b65:	push   eax
  409b66:	pop    es
  409b67:	test   cl,cl
  409b69:	(bad)  
  409b6a:	cld    
  409b6b:	call   DWORD PTR [esi+0x78]
  409b6e:	dec    eax
  409b6f:	(bad)  
  409b70:	call   FWORD PTR [edi-0x602fbc7c]
  409b76:	push   0x398968d0
  409b7b:	inc    ecx
  409b7c:	add    BYTE PTR [eax+0x10005b17],bh
  409b82:	push   esp
  409b83:	push   DWORD PTR [ebp-0x40]
  409b86:	fs mov ebp,0xe7fc613f
  409b8c:	pop    ss
  409b8d:	sub    edi,esp
  409b8f:	dec    DWORD PTR [edi-0x61]
  409b92:	shr    BYTE PTR [bx+si+0x51],1
  409b96:	cmp    DWORD PTR [ecx+0x0],eax
  409b99:	cmp    DWORD PTR [ecx+0xb],eax
  409b9c:	pop    ebx
  409b9d:	cmp    ecx,ebp
  409b9f:	pop    esp
  409ba0:	pop    ecx
  409ba1:	xor    ch,BYTE PTR [ecx]
  409ba3:	jo     0x409bb1
  409ba5:	xor    bl,BYTE PTR [ebx]
  409ba7:	jo     0x409bb1
  409ba9:	inc    edx
  409baa:	and    BYTE PTR [ecx],cl
  409bac:	test   DWORD PTR [ebx+ebp*8+0x2],ecx
  409bb0:	add    BYTE PTR [edx],dh
  409bb2:	xor    BYTE PTR [edi+0x9],ch
  409bb5:	neg    BYTE PTR [esi+ebp*4-0x16c70000]
  409bbc:	add    ch,bl
  409bbe:	ss push ds
  409bc0:	aas    
  409bc1:	mov    ah,0x39
  409bc3:	jmp    0xbadd9bca
  409bc8:	ret    0x96b8
  409bcb:	out    dx,al
  409bcc:	idiv   esi
  409bce:	mov    esi,DWORD PTR [edi]
  409bd0:	cmp    al,0x7
  409bd2:	or     al,0xe9
  409bd4:	mov    edi,0x2e99144
  409bd9:	add    BYTE PTR [ecx],bh
  409bdb:	imul   edi,DWORD PTR [eax],0x4c5d3e00
  409be1:	add    bh,BYTE PTR [ecx]
  409be3:	jmp    0xb7bf8437
  409be8:	idiv   esi
  409bea:	shl    BYTE PTR [eax+ecx*8],0x82
  409bee:	int3   
  409bef:	rol    BYTE PTR [edx],0x75
  409bf2:	sbb    BYTE PTR [ecx],dl
  409bf4:	mov    ebx,0xf7e8f82b
  409bf9:	je     0x409c00
  409bfb:	sub    DWORD PTR [ecx+0xbe93959],0x66436c0
  409c05:	add    bh,BYTE PTR [ecx]
  409c07:	jmp    0xe861e0cb
  409c0c:	add    al,BYTE PTR [eax]
  409c0e:	cmp    DWORD PTR [eax+0x390201],eax
  409c14:	jmp    0xe829199d
  409c19:	outs   dx,BYTE PTR ds:[esi]
  409c1a:	inc    esi
  409c1b:	mov    ebx,edx
  409c1d:	fild   WORD PTR [eax]
  409c1f:	idiv   DWORD PTR [ecx+eax*2]
  409c22:	add    eax,0xeae90039
  409c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c28:	add    cl,ch
  409c2a:	add    edi,DWORD PTR [edx+0x44054174]
  409c30:	pop    es
  409c31:	pusha  
  409c32:	jbe    0x409c0d
  409c34:	mov    esi,0x3bebab
  409c39:	jmp    0xe7e13c41
  409c3e:	add    edi,DWORD PTR [ecx]
  409c40:	or     DWORD PTR [ebx-0x992c415],0xffffff8a
  409c47:	sbb    eax,0xa13e25d4
  409c4c:	sti    
  409c4d:	call   0x5d29d555
  409c52:	add    bh,BYTE PTR [ecx]
  409c54:	add    BYTE PTR [edx+0x79],ch
  409c57:	xchg   ecx,eax
  409c58:	sti    
  409c59:	push   ebx
  409c5a:	pop    es
  409c5b:	shl    BYTE PTR [ecx+esi*4-0x41],0xf5
  409c60:	out    0xe3,eax
  409c62:	add    edi,DWORD PTR [ecx]
  409c64:	add    al,dl
  409c66:	outs   dx,DWORD PTR ds:[esi]
  409c67:	cmp    BYTE PTR [eax],al
  409c69:	jmp    0xec2871f0
  409c6e:	push   es
  409c6f:	mov    ah,0x5f
  409c71:	call   0x23c9d579
  409c76:	sar    BYTE PTR [ebx-0x52fbaa8c],1
  409c7c:	pop    es
  409c7d:	scas   al,BYTE PTR es:[edi]
  409c7e:	inc    ecx
  409c7f:	and    DWORD PTR [ebx],eax
  409c81:	jmp    0xe9799c89
  409c86:	in     eax,dx
  409c87:	mov    esi,0x3e6e875
  409c8c:	cmp    DWORD PTR [eax],eax
  409c8e:	add    BYTE PTR [esi-0x17003f88],ch
  409c94:	cmp    al,BYTE PTR [eax]
  409c96:	(bad)  
  409c97:	lods   al,BYTE PTR ds:[esi]
  409c98:	repnz cmc 
  409c9a:	(bad)  
  409c9b:	jmp    0x2d8559da
  409ca0:	xor    eax,0xa7e90000
  409ca5:	cmp    al,0xbc
  409ca7:	jmp    0x26409ce6
  409cac:	js     0x409c66
  409cae:	(bad)  
  409caf:	call   0xb53f9cee
  409cb4:	out    0xdd,al
  409cb6:	adc    ah,BYTE PTR [edi]
  409cb8:	(bad)  
  409cb9:	test   BYTE PTR [eax+0x74f67aa4],0x35
  409cc0:	popf   
  409cc1:	std    
  409cc2:	std    
  409cc3:	push   cs
  409cc4:	scas   al,BYTE PTR es:[edi]
  409cc5:	mov    BYTE PTR [ecx+esi*1-0x5a],al
  409cc9:	ins    BYTE PTR es:[edi],dx
  409cca:	aam    0x11
  409ccc:	nop
  409ccd:	hlt    
  409cce:	(bad)  
  409ccf:	idiv   BYTE PTR [ebp+0x406ac43c]
  409cd5:	inc    ebx
  409cd6:	aas    
  409cd7:	sub    BYTE PTR ds:0xe53b7500,dh
  409cdd:	cmp    DWORD PTR [eax+0x28],eax
  409ce0:	xor    eax,0x3d300ce8
  409ce5:	add    BYTE PTR [eax+0x51],dl
  409ce8:	add    BYTE PTR [ebx],ah
  409cea:	inc    eax
  409ceb:	inc    ecx
  409cec:	jmp    0xc2010940
  409cf1:	xchg   edi,eax
  409cf2:	push   edi
  409cf3:	add    cl,ch
  409cf5:	xor    eax,eax
  409cf7:	jae    0x409cfa
  409cf9:	int    0x3e
  409cfb:	inc    eax
  409cfc:	sub    BYTE PTR ds:0x3531f0e8,bh
  409d02:	add    BYTE PTR [eax+0x1],dl
  409d05:	jl     0x409d47
  409d07:	inc    ecx
  409d08:	add    BYTE PTR [eax],dl
  409d0a:	out    dx,al
  409d0b:	jae    0x409ccd
  409d0d:	test   al,0x91
  409d0f:	pop    eax
  409d10:	add    BYTE PTR [eax],ah
  409d12:	or     al,al
  409d14:	je     0x409cd8
  409d16:	push   0xd14049
  409d1b:	call   0x4195f5
  409d20:	push   eax
  409d21:	clc    
  409d22:	inc    ebx
  409d23:	inc    eax
  409d24:	inc    ecx
  409d25:	shr    ch,1
  409d27:	jae    0x409ce9
  409d29:	mov    BYTE PTR [esi+0x5a],ah
  409d2c:	add    al,ah
  409d2e:	jmp    0x40f30549
  409d33:	inc    ecx
  409d34:	add    BYTE PTR [eax-0x46],bh
  409d37:	push   esi
  409d38:	add    al,dl
  409d3a:	push   eax
  409d3b:	push   0x3be052
  409d40:	dec    ebp
  409d42:	shl    dh,0x5d
  409d45:	jmp    0x6270:0x500b0000
  409d4c:	inc    DWORD PTR [eax]
  409d4e:	or     eax,0xa8a1e6c9
  409d53:	add    BYTE PTR [eax],al
  409d55:	push   eax
  409d56:	xchg   edi,eax
  409d57:	fs enter 0x26e8,0xfa
  409d5c:	std    
  409d5d:	(bad)  
  409d5e:	jmp    0xe405997
  409d63:	shl    dh,0x8d
  409d66:	sub    ah,bh
  409d68:	dec    DWORD PTR [edi+0x77]
  409d6b:	fs (bad) 
  409d6d:	call   0x3e93cc
  409d72:	fnstenv [eax+edi*4]
  409d75:	adc    DWORD PTR ds:0x5c73febc,0x7f
  409d7c:	jnp    0x409d36
  409d7e:	and    BYTE PTR [esi+ebp*1+0x68],ah
  409d82:	cmp    ecx,ebp
  409d84:	add    ch,bh
  409d86:	out    0x82,eax
  409d88:	outs   dx,BYTE PTR ds:[esi]
  409d89:	or     BYTE PTR [ecx],dl
  409d8b:	lea    eax,[eax+0x6f7316fe]
  409d91:	ror    BYTE PTR [esi],0xf5
  409d94:	or     ch,al
  409d96:	jge    0x409df5
  409d98:	cmc    
  409d99:	(bad)  
  409d9a:	(bad)  
  409d9b:	aam    0xb6
  409d9d:	(bad)  
  409d9e:	ins    BYTE PTR es:[edi],dx
  409d9f:	icebp  
  409da0:	jmp    0x6cfe:0xf54ab538
  409da7:	xchg   ecx,eax
  409da8:	hlt    
  409da9:	je     0x409ddc
  409dab:	push   ecx
  409dac:	es test dh,dl
  409daf:	xor    dh,ch
  409db1:	je     0x409db3
  409db3:	stc    
  409db4:	inc    ecx
  409db5:	cmp    DWORD PTR [edi+0x74f522c6],eax
  409dbb:	icebp  
  409dbc:	adc    DWORD PTR [ecx],esi
  409dbe:	xchg   DWORD PTR [esi+0x7574f512],esi
  409dc4:	add    DWORD PTR [ecx],ebp
  409dc6:	xchg   DWORD PTR [esi-0x228b0afe],esp
  409dcc:	adc    DWORD PTR [ecx],esp
  409dce:	xchg   DWORD PTR [esi-0x2e8b0c0e],edx
  409dd4:	add    DWORD PTR [ecx],ebx
  409dd6:	xchg   DWORD PTR [esi-0x45f3181e],eax
  409ddc:	pop    esp
  409ddd:	in     al,dx
  409dde:	add    eax,0x44bbd9ec
  409de3:	popa   
  409de4:	out    0x2,eax
  409de6:	add    BYTE PTR [ecx],bh
  409de8:	data16 jbe 0x409dd3
  409deb:	cmp    DWORD PTR ds:0x5906834,esi
  409df1:	inc    ebx
  409df2:	add    BYTE PTR [esi+0x34],cl
  409df5:	enter  0x8ee7,0x11
  409df9:	add    al,0x0
  409dfb:	xor    al,BYTE PTR [eax]
  409dfd:	test   eax,0x23bb3e6e
  409e02:	in     al,dx
  409e03:	cmp    DWORD PTR [eax],eax
  409e05:	jmp    0x296b2f0d
  409e0a:	inc    ebx
  409e0b:	cmp    ebx,esi
  409e0d:	sti    
  409e0e:	(bad)  
  409e0f:	push   ds
  409e10:	xchg   ebx,eax
  409e11:	and    BYTE PTR [ecx+edi*1],al
  409e14:	pop    es
  409e15:	test   eax,0xbb3e006e
  409e1a:	and    ebp,esp
  409e1c:	cmp    BYTE PTR [eax],al
  409e1e:	jmp    0x2dad9426
  409e23:	jmp    0x409e21
  409e25:	jns    0x409e7c
  409e27:	hlt    
  409e28:	loop   0x409e58
  409e2a:	sub    DWORD PTR [edx-0xbba0d21],edi
  409e30:	enter  0xa1,0xfd
  409e34:	aas    
  409e35:	jge    0x409dbb
  409e37:	test   bh,0xf2
  409e3a:	sub    eax,0x5ce7e96e
  409e3f:	jge    0x409df8
  409e41:	repnz sbb eax,0x44e79d6e
  409e47:	jge    0x409df0
  409e49:	repnz pop ebx
  409e4b:	ds test eax,0xc2d1114f
  409e51:	repnz std 
  409e53:	jmp    0xc8e7:0xf3f5f93f
  409e5a:	sub    dl,BYTE PTR [ebx]
  409e5c:	cmp    DWORD PTR [ebp+0x72],ecx
  409e5f:	loopne 0x409e1a
  409e61:	mov    ebx,0xf26ff294
  409e66:	lods   eax,DWORD PTR ds:[esi]
  409e67:	mov    DWORD PTR [esi+0x5ef3cdf1],ebp
  409e6d:	bnd call 0xd57d6076
  409e73:	dec    BYTE PTR [esi-0x4513ff95]
  409e79:	sub    al,BYTE PTR [eax]
  409e7b:	xor    al,0x0
  409e7d:	xor    cl,ch
  409e7f:	hlt    
  409e80:	call   0x153f9ebf
  409e85:	push   ecx
  409e86:	call   0xf36b16e8
  409e8b:	or     ch,BYTE PTR [ecx+0x476801a0]
  409e91:	pop    ecx
  409e92:	aas    
  409e93:	add    BYTE PTR [esi-0x70],bh
  409e96:	or     al,0xe8
  409e98:	jb     0x409e1e
  409e9a:	repnz inc BYTE PTR [edx+0x15c36838]
  409ea1:	jl     0x409ea3
  409ea3:	call   esp
  409ea5:	inc    esi
  409ea6:	call   0xf32aff96
  409eab:	mov    BYTE PTR [ebp+ecx*4-0xd],ah
  409eaf:	inc    BYTE PTR [esi+0x75]
  409eb2:	xor    al,BYTE PTR [ecx]
  409eb4:	jmp    0x2bc521f3
  409eb9:	retf   
  409eba:	repnz (bad) 
  409ebc:	cdq    
  409ebd:	loop   0x409f1c
  409ebf:	xchg   BYTE PTR [esi],ah
  409ec1:	stos   BYTE PTR es:[edi],al
  409ec2:	test   BYTE PTR [ebx+ebp*1-0x46010d55],al
  409ec9:	stos   DWORD PTR es:[edi],eax
  409eca:	lods   al,BYTE PTR ds:[esi]
  409ecb:	mov    bh,0xf
  409ecd:	stos   BYTE PTR es:[edi],al
  409ece:	repnz out 0x49,eax
  409ed1:	repnz (bad) 
  409ed3:	jmp    FWORD PTR [edi-0x40]
  409ed6:	mov    ch,0xfd
  409ed8:	test   BYTE PTR [ebx-0x5d9af0cf],0x0
  409edf:	add    cl,ch
  409ee1:	add    BYTE PTR [ecx+0x6bdfc18c],bh
  409ee7:	repnz imul bl
  409eea:	dec    edx
  409eeb:	add    BYTE PTR [eax],al
  409eed:	jmp    0xc31b2d
  409ef2:	pusha  
  409ef3:	std    
  409ef4:	dec    DWORD PTR [edx+eiz*1-0x3697afe0]
  409efb:	adc    BYTE PTR [ecx+0x0],al
  409efe:	js     0x409f64
  409f00:	push   edi
  409f01:	add    BYTE PTR [eax],ah
  409f03:	repnz mov esi,0x47d41575
  409f09:	add    DWORD PTR [eax],edx
  409f0b:	std    
  409f0c:	mov    WORD PTR [ebp-0x2112e],ss
  409f12:	lea    edi,[ebx]
  409f14:	sub    al,0x50
  409f16:	sub    BYTE PTR [ecx-0x2aefbed6],ah
  409f1c:	pop    edx
  409f1d:	push   edi
  409f1e:	adc    ch,bh
  409f20:	or     al,al
  409f22:	adc    eax,0xe12ce908
  409f27:	cld    
  409f28:	(bad)  
  409f29:	inc    BYTE PTR ds:0x60bae809
  409f2f:	out    dx,al
  409f30:	std    
  409f31:	or     esp,DWORD PTR [eax]
  409f33:	js     0x409f44
  409f35:	push   0x41151d
  409f3a:	vmread DWORD PTR [eax+ebp*8],edx
  409f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3f:	jae    0x409f3f
  409f41:	dec    DWORD PTR [ebx-0xd]
  409f44:	push   0x784f0000
  409f49:	adc    al,0xe8
  409f4b:	(bad)  [ebx-0x2]
  409f4e:	(bad)  
  409f4f:	std    
  409f50:	xchg   edi,eax
  409f51:	sar    dh,0x3f
  409f54:	out    dx,al
  409f55:	mov    edx,DWORD PTR [edx+0x7c]
  409f58:	dec    edx
  409f59:	push   eax
  409f5a:	call   0x3f137e
  409f5f:	mov    al,ds:0x7075ff4c
  409f64:	out    dx,eax
  409f65:	jae    0x409f73
  409f67:	(bad)
  409f6b:	cmp    esi,edx
  409f6d:	icebp  
  409f6e:	(bad)  
  409f6f:	pop    esi
  409f70:	mov    esi,0xb9568488
  409f75:	fcmovu st,st(4)
  409f77:	cmp    edi,esp
  409f79:	add    cl,BYTE PTR [ebp-0x7b850505]
  409f7f:	test   DWORD PTR [eax+0x5da1fef0],esp
  409f85:	xor    DWORD PTR [ecx+0x39],eax
  409f88:	mov    ?,WORD PTR [esi-0xf68d84d]
  409f8e:	out    0x34,eax
  409f90:	xor    DWORD PTR [eax+eax*1],eax
  409f93:	inc    edx
  409f94:	cdq    
  409f95:	ja     0x409fc5
  409f97:	mov    eax,ds:0x39411b9c
  409f9c:	jbe    0x40a015
  409f9e:	adc    al,0x11
  409fa0:	ja     0x40a01e
  409fa2:	(bad)  
  409fa3:	mul    BYTE PTR [esi-0x49]
  409fa6:	mov    bl,0xef
  409fa8:	dec    esi
  409fa9:	icebp  
  409faa:	dec    edi
  409fab:	add    cl,dl
  409fad:	push   ss
  409fae:	jnp    0x409fae
  409fb0:	fisubr WORD PTR [ecx+0x462974ef]
  409fb6:	ja     0x409fc4
  409fb8:	imul   ebp,DWORD PTR [esi],0x36d10877
  409fbe:	in     al,dx
  409fbf:	(bad)  
  409fc0:	mov    esi,0xb6853941
  409fc5:	es icebp 
  409fc7:	mov    ah,0xe5
  409fc9:	psllw  mm7,mm6
  409fcc:	xchg   ecx,eax
  409fcd:	leave  
  409fce:	pop    eax
  409fcf:	add    BYTE PTR [ecx],bh
  409fd1:	pop    edx
  409fd2:	in     al,dx
  409fd3:	add    DWORD PTR [ebx],ecx
  409fd5:	int    0x7b
  409fd7:	xchg   esp,eax
  409fd8:	(bad)
  409fdb:	(bad)  
  409fdc:	cmp    cl,BYTE PTR [ecx]
  409fde:	test   ecx,ebp
  409fe0:	cmp    eax,DWORD PTR [edi+0x273981]
  409fe6:	pop    edx
  409fe7:	ja     0x40a024
  409fe9:	fld    TBYTE PTR [eax]
  409feb:	pop    esp
  409fec:	retf   0x282f
  409fef:	add    al,0x5e
  409ff1:	mov    ch,0x94
  409ff3:	icebp  
  409ff4:	push   edi
  409ff5:	out    dx,eax
  409ff6:	rcl    BYTE PTR [eax+0x53e8ffe7],1
  409ffc:	ror    DWORD PTR [esi-0x10c6bd0b],1
  40a002:	jae    0x409fbb
  40a004:	xor    al,0xef
  40a006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a007:	fstp   TBYTE PTR [esi+edx*2+0x588903e9]
  40a00e:	inc    ebp
  40a00f:	xor    BYTE PTR [eax],al
  40a011:	js     0x40a013
  40a013:	mov    ?,WORD PTR [esi-0xf7a1236]
  40a019:	push   ss
  40a01a:	ins    DWORD PTR es:[edi],dx
  40a01b:	push   ss
  40a01c:	add    al,0x39
  40a01e:	dec    edx
  40a01f:	adc    ch,bh
  40a021:	mov    esi,0x8fce174
  40a026:	jne    0x40a015
  40a028:	cld    
  40a029:	add    DWORD PTR [edi+ecx*1+0x5c],esi
  40a02d:	hlt    
  40a02e:	pop    ss
  40a02f:	test   al,0x3
  40a031:	fidiv  WORD PTR [ebp+esi*8-0x25]
  40a035:	pop    ebp
  40a036:	js     0x40a07d
  40a038:	lock iret 
  40a03a:	mov    ah,0x74
  40a03c:	icebp  
  40a03d:	(bad)  
  40a03e:	out    dx,al
  40a03f:	cwde   
  40a040:	fisttp DWORD PTR [ebp+0x6f02d77]
  40a046:	out    dx,eax
  40a047:	fwait
  40a048:	adc    ebp,DWORD PTR [esi-0x59ac128c]
  40a04e:	je     0x40a031
  40a050:	fstp   TBYTE PTR [edx-0x17]
  40a053:	or     eax,0x6ca49ef0
  40a058:	lock (bad) 
  40a05a:	jl     0x40a0bf
  40a05c:	lds    eax,FWORD PTR [esi+ebp*8-0x11140a01]
  40a063:	mov    ah,0x2d
  40a065:	push   0x42d1feed
  40a06a:	push   esi
  40a06b:	add    cl,ch
  40a06d:	mov    cl,0xae
  40a06f:	push   cs
  40a070:	ins    BYTE PTR es:[edi],dx
  40a071:	loope  0x40a060
  40a073:	dec    dh
  40a075:	add    BYTE PTR [esi-0x4d],ah
  40a078:	mov    ebx,0xe7ed5ec7
  40a07d:	out    dx,eax
  40a07e:	in     al,dx
  40a07f:	(bad)  
  40a080:	push   DWORD PTR [ebp-0x51024980]
  40a086:	es out 0x74,al
  40a089:	ins    DWORD PTR es:[edi],dx
  40a08a:	push   ds
  40a08b:	out    dx,eax
  40a08c:	enter  0x4dab,0x0
  40a090:	push   ebp
  40a091:	bound  ebx,QWORD PTR [ecx]
  40a093:	out    dx,eax
  40a094:	je     0x40a073
  40a096:	daa    
  40a097:	jne    0x40a0a9
  40a099:	xchg   BYTE PTR [eax+0x2f4fefc],dl
  40a09f:	out    0xc3,al
  40a0a1:	je     0x40a0b1
  40a0a3:	out    dx,eax
  40a0a4:	enter  0x39ab,0x0
  40a0a8:	push   ebp
  40a0a9:	jb     0x40a084
  40a0ab:	add    bl,0x59
  40a0ae:	mov    gs,ebp
  40a0b0:	je     0x40a097
  40a0b2:	add    ah,BYTE PTR [ecx+ecx*4+0x4e]
  40a0b6:	out    0xfa,al
  40a0b8:	mov    edi,0xc94d41bc
  40a0bd:	sub    edi,DWORD PTR [ecx]
  40a0bf:	add    bh,bh
  40a0c1:	mov    esp,0x6054d82a
  40a0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c7:	out    dx,al
  40a0c8:	or     ch,BYTE PTR [ecx]
  40a0ca:	xor    BYTE PTR [ebx],al
  40a0cc:	pop    edi
  40a0cd:	xor    BYTE PTR [ebx-0x7],bh
  40a0d0:	call   DWORD PTR ds:0xf0e7fc20
  40a0d6:	pop    ss
  40a0d7:	out    dx,al
  40a0d8:	inc    BYTE PTR [eax]
  40a0da:	add    BYTE PTR [ebx-0x57f08c3f],cl
  40a0e0:	shl    BYTE PTR [esi],0x41
  40a0e3:	nop
  40a0e4:	fidiv  WORD PTR [ebx+0xc]
  40a0e7:	cmp    BYTE PTR [esi-0x35a8007b],dh
  40a0ed:	or     BYTE PTR [edx+0x50],ch
  40a0f0:	fidiv  WORD PTR [ebx+0xc]
  40a0f3:	js     0x40a07c
  40a0f5:	test   edi,edi
  40a0f7:	xchg   DWORD PTR [esp+eax*2-0xc],ebp
  40a0fb:	call   0x5081e046
  40a100:	fidiv  WORD PTR [ebx-0xc]
  40a103:	js     0x40a17c
  40a105:	test   edi,edi
  40a107:	out    0x6b,eax
  40a109:	inc    esp
  40a10a:	clc    
  40a10b:	dec    eax
  40a10c:	retf   0xfb
  40a10f:	adc    cl,cl
  40a111:	add    eax,DWORD PTR [edi+eax*8-0x3bba7823]
  40a118:	dec    eax
  40a119:	add    BYTE PTR [eax],dl
  40a11b:	and    BYTE PTR [ecx],al
  40a11d:	call   0xfe1f351a
  40a122:	mov    DWORD PTR [ebp-0xc],ecx
  40a125:	std    
  40a126:	jne    0x40a190
  40a128:	leave  
  40a129:	test   al,0x88
  40a12b:	push   edi
  40a12c:	fimul  WORD PTR [ecx]
  40a12e:	rcl    bh,0x84
  40a131:	mov    ebx,0xff00d000
  40a136:	jne    0x40a1a0
  40a138:	dec    ecx
  40a139:	call   0xff41823b
  40a13e:	jne    0x40a140
  40a140:	add    al,0xc9
  40a142:	adc    BYTE PTR [ebp-0x30],0x0
  40a146:	cmp    eax,0xffffffa2
  40a149:	in     eax,dx
  40a14a:	test   BYTE PTR [eax+eiz*4-0x3a750000],ah
  40a151:	fdivr  QWORD PTR [esi+0x3f]
  40a154:	cmp    edi,edx
  40a156:	std    
  40a157:	xor    DWORD PTR [ecx+0x210002d6],0x79
  40a15e:	sub    eax,0xda963941
  40a163:	cmp    edi,esp
  40a165:	(bad)  
  40a166:	add    cl,BYTE PTR [ebx]
  40a168:	jns    0x40a1dc
  40a16a:	jbe    0x40a16b
  40a16c:	in     al,0xde
  40a16e:	pop    ebx
  40a16f:	push   DWORD PTR [esi]
  40a171:	xlat   BYTE PTR ds:[ebx]
  40a172:	add    bh,bh
  40a174:	in     al,0xc6
  40a176:	pop    ebx
  40a177:	iret   
  40a178:	and    DWORD PTR [eax],ebx
  40a17a:	add    al,0x68
  40a17c:	les    eax,FWORD PTR ds:0xceee0043
  40a182:	xor    dl,BYTE PTR [ebp+0x39]
  40a185:	xlat   BYTE PTR ds:[ebx]
  40a186:	idiv   DWORD PTR [edi+0x74ed11ad]
  40a18c:	xor    DWORD PTR [eax],edx
  40a18e:	add    ebp,DWORD PTR [eax-0x6d]
  40a191:	retf   0x41
  40a194:	xchg   BYTE PTR [ecx-0x26c6aaca],al
  40a19a:	jg     0x40a193
  40a19c:	cmp    ah,ch
  40a19e:	xor    eax,0xed698cff
  40a1a3:	je     0x40a1a5
  40a1a5:	add    eax,0xf685e982
  40a1aa:	pop    edx
  40a1ab:	push   esp
  40a1ac:	mov    ecx,DWORD PTR [ecx]
  40a1ae:	dec    edi
  40a1af:	sti    
  40a1b0:	jg     0x40a1d5
  40a1b2:	cli    
  40a1b3:	jbe    0x40a1b8
  40a1b5:	not    edi
  40a1b7:	dec    esi
  40a1b8:	inc    edx
  40a1b9:	inc    edx
  40a1ba:	daa    
  40a1bb:	js     0x40a1c2
  40a1bd:	mov    ecx,0xd77503ff
  40a1c2:	sub    dh,BYTE PTR [edi+0x10]
  40a1c5:	imul   esi,DWORD PTR [edx],0x22a10877
  40a1cb:	out    dx,al
  40a1cc:	(bad)  
  40a1cd:	scas   al,BYTE PTR es:[edi]
  40a1ce:	add    BYTE PTR [ecx],dl
  40a1d0:	xor    DWORD PTR [edx+0x2cd91deb],edi
  40a1d6:	jmp    0x40a173
  40a1d8:	adc    edx,DWORD PTR [esi+0x5ed1975]
  40a1de:	clc    
  40a1df:	adc    BYTE PTR [edx-0x1002147c],dh
  40a1e5:	dec    ebx
  40a1e6:	shr    BYTE PTR [edi],0xed
  40a1e9:	ja     0x40a1d6
  40a1eb:	in     eax,dx
  40a1ec:	icebp  
  40a1ed:	pushf  
  40a1ee:	sub    dh,ch
  40a1f0:	cld    
  40a1f1:	mov    ebp,0x5fecde58
  40a1f6:	jmp    0x40a253
  40a1f8:	clc    
  40a1f9:	pop    esi
  40a1fa:	stc    
  40a1fb:	imul   ebp,esp,0xf43beb4f
  40a201:	pop    esi
  40a202:	add    DWORD PTR [edx-0x14],ebp
  40a205:	aas    
  40a206:	jmp    0x40a243
  40a208:	in     al,dx
  40a209:	add    BYTE PTR [esi],bl
  40a20b:	jmp    0xeb708e7a
  40a210:	sbb    esi,eax
  40a212:	push   ds
  40a213:	icebp  
  40a214:	push   0xffffffec
  40a216:	pop    ds
  40a217:	jmp    0x40a234
  40a219:	adc    al,0x16
  40a21b:	jne    0x40a1fa
  40a21d:	in     al,dx
  40a21e:	test   eax,edi
  40a220:	nop
  40a221:	jno    0x40a22a
  40a223:	jmp    0x40a2a2
  40a225:	dec    esp
  40a226:	lock mov ebp,0x778c03e4
  40a22c:	jl     0x40a1ae
  40a22e:	cli    
  40a22f:	xlat   BYTE PTR ds:[ebx]
  40a230:	gs jbe 0x40a280
  40a233:	jmp    0x40a208
  40a235:	adc    edx,ecx
  40a237:	pop    eax
  40a238:	mov    esp,0x28f73903
  40a23d:	ja     0x40a2a5
  40a23f:	push   esi
  40a240:	jmp    0xa86be5a0
  40a245:	add    edi,DWORD PTR [esi-0x5a26ff8c]
  40a24b:	jae    0x40a259
  40a24d:	inc    ecx
  40a24e:	in     eax,dx
  40a24f:	cmp    esi,0x26
  40a252:	mov    eax,ds:0xaa873aa
  40a257:	push   eax
  40a258:	call   0xff2ab8f9
  40a25d:	loop   0x40a2d9
  40a25f:	outs   dx,BYTE PTR ds:[esi]
  40a260:	xor    DWORD PTR [eax-0x1],esi
  40a263:	xlat   BYTE PTR ds:[ebx]
  40a264:	imul   esp,ebx,0xf685db62
  40a26a:	(bad)  
  40a26b:	cmc    
  40a26c:	mov    edi,0xeb410075
  40a271:	je     0x40a274
  40a273:	or     eax,0x526783d8
  40a278:	jmp    0xd80978cc
  40a27d:	dec    edi
  40a27e:	into   
  40a27f:	enter  0xe7f7,0x12
  40a283:	push   ebx
  40a284:	jmp    0x7e137487
  40a289:	(bad)  
  40a28a:	mov    dh,0x22
  40a28c:	jne    0x40a276
  40a28e:	shr    DWORD PTR [edx+0x5a6fe7e],0x70
  40a295:	sbb    BYTE PTR [esi-0x1eff9dee],0x3a
  40a29c:	add    al,ch
  40a29e:	push   cs
  40a29f:	mov    bh,0xea
  40a2a1:	(bad)  
  40a2a2:	jo     0x40a31c
  40a2a4:	call   0x3a51c735
  40a2a9:	(bad)  
  40a2aa:	cld    
  40a2ab:	dec    edx
  40a2ac:	jmp    0xb4538025
  40a2b1:	push   ebx
  40a2b2:	jmp    0xd50097f1
  40a2b7:	push   0xffffffc1
  40a2b9:	inc    esp
  40a2ba:	pop    ecx
  40a2bb:	cmp    eax,0xfbe90000
  40a2c0:	inc    esp
  40a2c1:	hlt    
  40a2c2:	add    BYTE PTR [edi-0x3],bh
  40a2c5:	(bad)  
  40a2c6:	(bad)  
  40a2c7:	jmp    0x69fd:0x7a0069fd
  40a2ce:	add    BYTE PTR ds:0x50f43f,cl
  40a2d4:	pop    edi
  40a2d5:	outs   dx,DWORD PTR ds:[esi]
  40a2d6:	clc    
  40a2d7:	inc    ebp
  40a2d9:	in     eax,dx
  40a2da:	std    
  40a2db:	jne    0x40a309
  40a2dd:	int3   
  40a2de:	mov    ss,WORD PTR [eax+eiz*4-0x3]
  40a2e2:	or     al,al
  40a2e4:	add    al,0x3
  40a2e6:	jmp    0x40a322
  40a2e8:	test   al,0xa8
  40a2ea:	es inc ecx
  40a2ec:	pusha  
  40a2ed:	(bad)  
  40a2ee:	jae    0x40a300
  40a2f0:	cmp    BYTE PTR [esi-0x29a0007d],ch
  40a2f6:	jae    0x40a2f0
  40a2f8:	and    ah,cl
  40a2fa:	inc    DWORD PTR [ebp+0x4587d66f]
  40a300:	mov    esi,ss
  40a302:	jae    0x40a31c
  40a304:	jg     0x40a376
  40a306:	adc    al,0xff
  40a308:	add    eax,0x1c75fdc8
  40a30d:	(bad)  
  40a30e:	jae    0x40a318
  40a310:	clc    
  40a311:	sti    
  40a312:	(bad)  
  40a313:	(bad)  
  40a314:	(bad)  
  40a316:	jae    0x40a304
  40a318:	enter  0x7fc5,0xff
  40a31c:	scas   eax,DWORD PTR es:[edi]
  40a31d:	aad    0x43
  40a31f:	lock mov ebx,0xbc75fd75
  40a325:	les    edi,FWORD PTR [edx]
  40a327:	push   esp
  40a328:	adc    ch,bh
  40a32a:	(bad)  
  40a32b:	jne    0x40a395
  40a32d:	(bad)
  40a330:	pop    edi
  40a331:	(bad)  
  40a332:	mov    edx,0x8b54fce4
  40a338:	add    BYTE PTR [esp+eax*4-0x3e],ch
  40a33c:	hlt    
  40a33d:	cmp    DWORD PTR [ecx-0x16],edx
  40a340:	(bad)  
  40a341:	arpl   di,dx
  40a343:	pop    esp
  40a344:	and    al,0xc6
  40a346:	stos   DWORD PTR es:[edi],eax
  40a347:	cli    
  40a348:	out    0xc0,eax
  40a34a:	test   al,0xe9
  40a34c:	inc    al
  40a34e:	fwait
  40a34f:	out    0xc6,al
  40a351:	xor    al,0x8c
  40a353:	sub    DWORD PTR [ecx+0x39],eax
  40a356:	xlat   BYTE PTR ds:[ebx]
  40a357:	add    al,BYTE PTR [eax]
  40a359:	cmp    DWORD PTR [eax+eax*4-0xa],ebx
  40a35d:	xchg   edi,eax
  40a35e:	adc    edx,ebp
  40a360:	dec    edi
  40a361:	and    ebx,esp
  40a363:	add    eax,DWORD PTR [eax]
  40a365:	cmp    DWORD PTR [edi],ecx
  40a367:	jbe    0x40a3bc
  40a369:	cmp    edi,edx
  40a36b:	pop    edx
  40a36c:	adc    edi,ecx
  40a36e:	xchg   edi,eax
  40a36f:	add    ch,BYTE PTR [eax+0x42]
  40a372:	xchg   edi,eax
  40a373:	inc    ebx
  40a374:	add    cl,dl
  40a376:	sti    
  40a377:	inc    ebx
  40a378:	inc    ecx
  40a379:	cmp    edx,ecx
  40a37b:	cs pop esp
  40a37d:	and    BYTE PTR [eax],bl
  40a37f:	add    al,0xff
  40a381:	(bad)  
  40a382:	(bad)  
  40a384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a385:	inc    edi
  40a386:	shr    eax,0x67
  40a389:	sub    dl,BYTE PTR [edi]
  40a38b:	inc    ebx
  40a38c:	add    BYTE PTR [ecx+0x394142e2],ah
  40a392:	inc    ecx
  40a393:	pop    ds
  40a394:	inc    eax
  40a395:	js     0x40a370
  40a397:	pop    edx
  40a398:	add    bh,BYTE PTR [ecx]
  40a39a:	fld    DWORD PTR [edx-0x1e73ff02]
  40a3a0:	fimul  DWORD PTR [ebx-0x731788f1]
  40a3a6:	mov    esp,0xfefeea66
  40a3ab:	or     esp,ebx
  40a3ad:	adc    eax,0xff02d98a
  40a3b2:	fs push ebp
  40a3b4:	jmp    0x5140d52d
  40a3b9:	rcr    DWORD PTR [edi+eiz*8+0x5d],cl
  40a3bd:	mov    ebx,0x4ee8fcf8
  40a3c2:	ret    0x67d4
  40a3c5:	ror    dl,0xe6
  40a3c8:	inc    ebp
  40a3c9:	jmp    0x1f13a41e
  40a3ce:	mov    dh,0x6d
  40a3d0:	loope  0x40a3ad
  40a3d2:	sub    BYTE PTR [esi+0x2e],ah
  40a3d5:	jmp    0x5e65e18b
  40a3da:	inc    ebx
  40a3db:	fcomp  DWORD PTR [ebp-0x1e186882]
  40a3e1:	ret    
  40a3e2:	or     bl,BYTE PTR [ecx+eax*4]
  40a3e5:	adc    al,0xf9
  40a3e7:	inc    eax
  40a3e8:	jmp    0x644d3540
  40a3ed:	jmp    0x3c1f469
  40a3f2:	dec    ecx
  40a3f3:	xlat   BYTE PTR ds:[ebx]
  40a3f4:	cs pop esp
  40a3f6:	push   cs
  40a3f7:	inc    eax
  40a3f8:	sub    BYTE PTR [ecx+ecx*1],al
  40a3fb:	out    0x53,eax
  40a3fd:	cld    
  40a3fe:	pop    esi
  40a3ff:	les    ecx,FWORD PTR [ebx-0x27b0ff18]
  40a405:	loopne 0x40a389
  40a407:	inc    edi
  40a408:	out    0xad,eax
  40a40a:	(bad)  
  40a40b:	in     eax,dx
  40a40c:	sub    BYTE PTR es:[eax+edi*1],al
  40a410:	add    cl,ch
  40a412:	add    edi,DWORD PTR [esp+edi*2-0x18d8164b]
  40a419:	cmp    BYTE PTR [ebp+esi*1+0x1],bl
  40a41d:	jmp    0x3ae5c525
  40a422:	add    al,0x39
  40a424:	pop    eax
  40a425:	cli    
  40a426:	inc    ebx
  40a427:	js     0x40a429
  40a429:	adc    ebp,edi
  40a42b:	ds inc ecx
  40a42d:	jmp    0x80c08d
  40a432:	sub    BYTE PTR ds:0x420d34e7,dh
  40a438:	inc    ecx
  40a439:	add    BYTE PTR [esi+0x4f],ah
  40a43c:	clc    
  40a43d:	out    0x5b,eax
  40a43f:	(bad)  
  40a441:	inc    cl
  40a443:	and    eax,0x62e94140
  40a448:	sti    
  40a449:	aas    
  40a44a:	test   al,0x3a
  40a44c:	pop    eax
  40a44d:	and    eax,0x67fffba9
  40a452:	jmp    0x40a48e
  40a454:	add    BYTE PTR [eax-0x1807e8d2],al
  40a45a:	aas    
  40a45b:	xchg   edi,eax
  40a45c:	in     eax,0xfe
  40a45e:	ins    BYTE PTR es:[edi],dx
  40a45f:	pop    ss
  40a460:	out    dx,al
  40a461:	std    
  40a462:	push   ss
  40a463:	mov    eax,ds:0x89e836
  40a468:	in     al,dx
  40a469:	(bad)  
  40a46a:	inc    DWORD PTR ds:0x74fee40f
  40a470:	jb     0x40a450
  40a472:	sbb    dh,BYTE PTR [edi+0x61]
  40a475:	in     eax,0xc8
  40a477:	sub    esp,DWORD PTR [esi-0x1a]
  40a47a:	push   ebx
  40a47b:	jb     0x40a3fe
  40a47d:	jg     0x40a442
  40a47f:	aad    0x5f
  40a481:	in     eax,0xfe
  40a483:	inc    ebx
  40a484:	xor    eax,0xc8ce265a
  40a489:	mul    edi
  40a48b:	test   eax,edx
  40a48d:	out    0xfe,al
  40a48f:	jo     0x40a509
  40a491:	in     al,0xc6
  40a493:	in     al,dx
  40a494:	jno    0x40a4bb
  40a496:	inc    ecx
  40a497:	jmp    0xe940a4d6
  40a49c:	mov    eax,ds:0x1e9ff67c
  40a4a1:	out    0x4f,eax
  40a4a3:	add    DWORD PTR [ecx],edi
  40a4a5:	(bad)  
  40a4a6:	(bad)  
  40a4a7:	call   0x92d08e
  40a4ac:	adc    BYTE PTR [edx],al
  40a4ae:	push   0x3b2072
  40a4b3:	push   0x413c38
  40a4b8:	cmp    BYTE PTR [edi],bl
  40a4ba:	inc    eax
  40a4bb:	inc    ecx
  40a4bc:	rcr    dh,1
  40a4be:	xor    ebx,DWORD PTR [ecx+ebp*1+0x3b]
  40a4c2:	add    bh,bh
  40a4c4:	in     eax,dx
  40a4c5:	jmp    0xddb610b0
  40a4ca:	std    
  40a4cb:	push   0x41418200
  40a4d0:	add    BYTE PTR [eax-0x5fbebfb7],cl
  40a4d6:	dec    ecx
  40a4d7:	and    eax,0x6801d140
  40a4dc:	add    dl,BYTE PTR [eax-0x52007fff]
  40a4e2:	jmp    0xdd65f4cd
  40a4e7:	std    
  40a4e8:	lea    ebx,ds:0x37fffcd5
  40a4ee:	dec    esp
  40a4ef:	call   0x4276cd
  40a4f4:	(bad)  
  40a4f5:	in     eax,dx
  40a4f6:	fdiv   st(5),st
  40a4f8:	jne    0x40a552
  40a4fa:	leave  
  40a4fb:	xchg   edx,eax
  40a4fc:	jge    0x40a555
  40a4fe:	faddp  st(7),st
  40a500:	ret    0x15c
  40a503:	push   ebp
  40a504:	mov    esi,DWORD PTR [esp+edi*2-0x3e]
  40a508:	hlt    
  40a509:	jbe    0x40a4e9
  40a50b:	std    
  40a50c:	push   0x50
  40a50e:	inc    edi
  40a50f:	daa    
  40a510:	jmp    FWORD PTR [ebp-0x1c]
  40a513:	out    0x35,al
  40a515:	gs (bad) 
  40a518:	mov    DWORD PTR [ebp-0x28],ebx
  40a51b:	lds    eax,FWORD PTR ds:0x411d65
  40a521:	and    BYTE PTR [ecx],al
  40a523:	add    BYTE PTR [eax],al
  40a525:	cmp    DWORD PTR [eax+eax*4-0xa],ebx
  40a529:	pop    es
  40a52a:	jbe    0x40a511
  40a52c:	dec    edi
  40a52d:	xchg   ecx,eax
  40a52e:	rol    DWORD PTR [ebx],cl
  40a530:	add    BYTE PTR [eax],al
  40a532:	cmp    DWORD PTR [edi-0x28c6af6b],ecx
  40a538:	pop    edx
  40a539:	mov    WORD PTR [ecx+0x18],?
  40a53c:	add    al,0x68
  40a53e:	mov    bh,0x96
  40a540:	inc    ebx
  40a541:	add    BYTE PTR [ecx-0x4],ah
  40a544:	inc    ebx
  40a545:	inc    ecx
  40a546:	cmp    DWORD PTR [esi+0x30],ecx
  40a549:	pop    esp
  40a54a:	adc    BYTE PTR [eax-0x10bb00fe],bl
  40a550:	(bad)  
  40a552:	mov    ch,0x25
  40a554:	out    0x67,al
  40a556:	mov    ebp,0x11004396
  40a55b:	pop    ebp
  40a55c:	inc    ebx
  40a55d:	inc    ecx
  40a55e:	cmp    DWORD PTR [edi-0x2907bfe1],ecx
  40a564:	pop    edx
  40a565:	add    bh,BYTE PTR [ecx]
  40a567:	xlat   BYTE PTR ds:[ebx]
  40a568:	cmp    dh,0xc
  40a56b:	(bad)  
  40a56d:	(bad)  
  40a56e:	jge    0x40a56d
  40a570:	in     eax,0x8c
  40a572:	mov    esp,0x6efee3ed
  40a577:	xchg   dl,bl
  40a579:	push   ecx
  40a57a:	or     bh,dl
  40a57c:	add    bh,bh
  40a57e:	in     al,0xda
  40a580:	in     al,0x74
  40a582:	inc    ecx
  40a583:	iret   
  40a584:	idiv   BYTE PTR [esi+ecx*2-0x33]
  40a588:	mov    edx,0x4dd73dc1
  40a58d:	mov    ecx,DWORD PTR [ebp+0x57]
  40a590:	shl    bl,0x37
  40a593:	mov    ds:0x390069e4,eax
  40a598:	aas    
  40a599:	sbb    al,0xff
  40a59b:	lods   al,BYTE PTR ds:[esi]
  40a59c:	loope  0x40a578
  40a59e:	lods   eax,DWORD PTR ds:[esi]
  40a59f:	popf   
  40a5a0:	add    BYTE PTR [esi-0x62c23e1b],ah
  40a5a6:	mov    ebp,0x42d63535
  40a5ab:	cmp    DWORD PTR [eax],eax
  40a5ad:	jmp    0x6bb5deb5
  40a5b2:	in     eax,dx
  40a5b3:	hlt    
  40a5b4:	jecxz  0x40a633
  40a5b6:	push   esp
  40a5b7:	popa   
  40a5b8:	cld    
  40a5b9:	out    0x3,eax
  40a5bb:	cmp    eax,ebx
  40a5bd:	rcl    BYTE PTR [edx+0x39],0x0
  40a5c1:	rcr    DWORD PTR [edi+0x5be94116],1
  40a5c7:	lods   eax,DWORD PTR ds:[esi]
  40a5c8:	inc    eax
  40a5c9:	test   al,0x3
  40a5cb:	push   ecx
  40a5cc:	sbb    eax,0xe33942a9
  40a5d1:	sti    
  40a5d2:	inc    edi
  40a5d3:	pusha  
  40a5d4:	inc    ecx
  40a5d5:	jmp    0x4138cbbe
  40a5da:	inc    edi
  40a5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5dc:	jecxz  0x40a60b
  40a5de:	pop    esp
  40a5df:	aad    0x40
  40a5e1:	test   al,0x3
  40a5e3:	and    DWORD PTR [eax+ebp*4-0x33a7c6be],eax
  40a5ea:	inc    ebx
  40a5eb:	clc    
  40a5ec:	inc    DWORD PTR [eax+0x69003901]
  40a5f2:	in     eax,0xed
  40a5f4:	not    DWORD PTR [eax]
  40a5f6:	inc    ebx
  40a5f7:	ins    DWORD PTR es:[edi],dx
  40a5f8:	jecxz  0x40a5ef
  40a5fa:	jbe    0x40a5fc
  40a5fc:	mov    ebp,0x5fe4eeeb
  40a601:	push   eax
  40a602:	sar    DWORD PTR [eax-0x1b16fffa],1
  40a608:	(bad)
  40a60b:	outs   dx,BYTE PTR ds:[esi]
  40a60c:	xor    eax,ebx
  40a60e:	data16 ds jcxz 0x40a5c2
  40a613:	sar    DWORD PTR [edx],0x0
  40a616:	adc    al,0x79
  40a618:	and    bh,BYTE PTR [edi-0x1]
  40a61b:	lods   al,BYTE PTR ds:[esi]
  40a61c:	push   ds
  40a61d:	pop    ecx
  40a61e:	add    BYTE PTR [ebx+0x42],al
  40a621:	jecxz  0x40a697
  40a623:	icebp  
  40a624:	repnz sbb BYTE PTR [esi+ebx*4+0x15],bh
  40a629:	js     0x40a66f
  40a62b:	xchg   ebp,eax
  40a62c:	pusha  
  40a62d:	add    BYTE PTR [eax-0x60],ch
  40a630:	jp     0x40a673
  40a632:	add    BYTE PTR [ecx],dl
  40a634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a635:	and    al,BYTE PTR [ecx-0x17]
  40a638:	aad    0x2b
  40a63a:	pop    esp
  40a63b:	sar    BYTE PTR [ebx+0x0],0xe8
  40a63f:	jns    0x40a5fc
  40a641:	loope  0x40a641
  40a643:	repnz cli 
  40a645:	outs   dx,BYTE PTR ds:[esi]
  40a646:	sbb    DWORD PTR [ecx+0x46000072],edi
  40a64c:	pushf  
  40a64d:	pop    edx
  40a64e:	fldcw  WORD PTR [ecx+0x4650007b]
  40a654:	daa    
  40a655:	clc    
  40a656:	out    0x6e,eax
  40a658:	fabs   
  40a65a:	inc    BYTE PTR [ecx-0x2f]
  40a65d:	jmp    FWORD PTR fs:[esi]
  40a660:	add    BYTE PTR [eax],al
  40a662:	add    BYTE PTR [eax+0x39],ch
  40a665:	cli    
  40a666:	inc    eax
  40a667:	add    BYTE PTR [ecx-0x16bedd23],dl
  40a66d:	popf   
  40a66e:	sub    ebx,DWORD PTR [eax+eax*8-0x5]
  40a672:	jmp    edi
  40a674:	inc    ebp
  40a675:	mov    ebx,0x7af2fee1
  40a67a:	outs   dx,BYTE PTR ds:[esi]
  40a67b:	sbb    DWORD PTR [ecx-0x1fffffe],ebx
  40a681:	xchg   ebp,eax
  40a682:	pop    edx
  40a683:	fldcw  WORD PTR [ecx]
  40a685:	cld    
  40a686:	dec    DWORD PTR [edi-0x22]
  40a689:	lock mul edi
  40a68c:	xor    bl,BYTE PTR [esi-0x4d3e011f]
  40a692:	inc    DWORD PTR fs:[eax]
  40a695:	(bad)  
  40a696:	fnsave [ebx-0x4]
  40a699:	out    dx,eax
  40a69a:	inc    edi
  40a69b:	or     al,ch
  40a69d:	jmp    0x2ba:0xd9ffff41
  40a6a4:	add    BYTE PTR [ebp+0x71],dl
  40a6a7:	jmp    0x3a57:0x54e0d483
  40a6ae:	cld    
  40a6af:	imul   ebp,DWORD PTR [edx],0xe80847af
  40a6b5:	pop    esp
  40a6b6:	inc    ecx
  40a6b7:	(bad)  
  40a6b8:	jmp    FWORD PTR [ecx+0x37]
  40a6bb:	cld    
  40a6bc:	push   0xffffffd0
  40a6be:	aad    0xa7
  40a6c0:	or     BYTE PTR [edi-0x23],0x9
  40a6c4:	rol    BYTE PTR [eax],0xf4
  40a6c7:	in     al,0x4e
  40a6c9:	push   0xbeeefde0
  40a6ce:	clc    
  40a6cf:	xlat   BYTE PTR ds:[ebx]
  40a6d0:	ds inc ecx
  40a6d2:	shr    BYTE PTR ds:0xd5a875ff,1
  40a6d8:	bt     DWORD PTR [edi-0x23],ebp
  40a6dc:	out    0x3d,al
  40a6de:	out    dx,al
  40a6df:	fdivp  st(5),st
  40a6e1:	mov    esp,DWORD PTR [ebp-0x5fbed7b8]
  40a6e7:	jb     0x40a724
  40a6e9:	jns    0x40a753
  40a6eb:	cmp    al,0x0
  40a6ed:	sub    BYTE PTR [edi-0x3],0x73
  40a6f1:	inc    ebp
  40a6f2:	mov    eax,0x60413eca
  40a6f7:	es call 0x3e77ba
  40a6fd:	or     dl,BYTE PTR [eax]
  40a6ff:	dec    eax
  40a700:	pop    ds
  40a701:	push   esi
  40a702:	cmp    ah,bl
  40a704:	test   edi,edi
  40a706:	pop    edi
  40a707:	sub    eax,0xee600068
  40a70c:	mov    esp,0x42b13968
  40a711:	inc    ecx
  40a712:	cmp    DWORD PTR [edi],esp
  40a714:	jecxz  0x40a78a
  40a716:	inc    ecx
  40a717:	iret   
  40a718:	mov    ah,0xa1
  40a71a:	mov    cs:0xaaa4fdea,al
  40a720:	loope  0x40a70c
  40a722:	cmp    BYTE PTR [ecx],bl
  40a724:	test   BYTE PTR ds:0x45de0439,bh
  40a72a:	add    BYTE PTR ds:0x6b8c2c6,cl
  40a730:	mov    ah,cl
  40a732:	dec    BYTE PTR [ebx]
  40a734:	and    DWORD PTR [ebx],ebx
  40a736:	pop    es
  40a737:	ins    BYTE PTR es:[edi],dx
  40a738:	ds loop 0x40a7af
  40a73b:	in     eax,dx
  40a73c:	popa   
  40a73d:	pop    eax
  40a73e:	or     cl,dl
  40a740:	or     al,0x5f
  40a742:	(bad)  
  40a743:	fdivrp st(1),st
  40a745:	inc    ecx
  40a746:	leave  
  40a747:	sti    
  40a748:	rol    BYTE PTR [edx],cl
  40a74a:	push   ebp
  40a74b:	ret    0x8632
  40a74e:	ret    
  40a74f:	lds    esp,FWORD PTR [eax-0x42c695c7]
  40a755:	sub    eax,0xeaef2cff
  40a75a:	stc    
  40a75b:	xor    esp,DWORD PTR [edx]
  40a75d:	loop   0x40a6e7
  40a75f:	cld    
  40a760:	sub    cl,BYTE PTR [esi+0x44ff2434]
  40a766:	add    dl,al
  40a768:	fistp  DWORD PTR [ebx+0x28]
  40a76b:	clc    
  40a76c:	(bad)  
  40a76d:	cmp    BYTE PTR [esi],0x39
  40a770:	add    DWORD PTR [edi+0x68],0x37
  40a774:	cwde   
  40a775:	inc    ebx
  40a776:	add    BYTE PTR [esi],cl
  40a778:	mov    cr2,eax
  40a77b:	cmp    edi,edx
  40a77d:	or     eax,0x38c9edc0
  40a782:	call   0xff230162
  40a787:	jmp    0x3944f88b
  40a78c:	rcr    DWORD PTR [esi+0x3f41006c],1
  40a792:	sub    BYTE PTR [ecx+ebp*8],al
  40a795:	loopne 0x40a7ea
  40a797:	or     al,0x21
  40a799:	xor    eax,0xe92fe18b
  40a79e:	push   0xc1e0265f
  40a7a3:	add    esi,DWORD PTR [edi-0x80]
  40a7a6:	out    dx,al
  40a7a7:	add    ecx,DWORD PTR [edx+ebx*8-0x3fb41fd2]
  40a7ae:	pop    edi
  40a7af:	loope  0x40a7b8
  40a7b1:	loopne 0x40a748
  40a7b3:	(bad)  
  40a7b4:	int3   
  40a7b5:	sbb    dh,ah
  40a7b7:	push   esi
  40a7b8:	mov    dl,0xdf
  40a7ba:	sti    
  40a7bb:	fucomip st,st(7)
  40a7bd:	push   ebp
  40a7be:	icebp  
  40a7bf:	jmp    0x40a7c3
  40a7c1:	pop    ebx
  40a7c2:	jbe    0x40a7a5
  40a7c4:	jg     0x40a804
  40a7c6:	mov    al,ds:0xbc003ac6
  40a7cb:	mov    edx,fs
  40a7cd:	and    DWORD PTR [eax+eiz*8],0x50
  40a7d1:	add    bl,al
  40a7d3:	das    
  40a7d4:	mov    esi,0x34ebe155
  40a7d9:	pop    edx
  40a7da:	inc    esi
  40a7db:	loope  0x40a79e
  40a7dd:	inc    ebp
  40a7de:	cmp    eax,0xe96a396e
  40a7e3:	imul   eax,DWORD PTR [edi+0x41],0xffffffa8
  40a7e7:	add    esp,DWORD PTR [ecx]
  40a7e9:	add    cl,ch
  40a7eb:	add    edi,DWORD PTR [ecx-0x787c4f18]
  40a7f1:	(bad)  
  40a7f3:	ret    
  40a7f4:	add    BYTE PTR [edx],cl
  40a7f6:	(bad)  
  40a7f7:	mov    eax,0x58667eb
  40a7fc:	loope  0x40a7fc
  40a7fe:	addr16 jmp 0xffdefe07
  40a804:	sub    BYTE PTR [edi],0x41
  40a807:	inc    ecx
  40a808:	jmp    0xf1b58717
  40a80d:	(bad)  
  40a80e:	loopne 0x40a7b0
  40a810:	ficomp WORD PTR [ecx-0x19]
  40a813:	or     al,0x54
  40a815:	pop    eax
  40a816:	fdivp  st(6),st
  40a818:	push   esp
  40a819:	sbb    esi,ebx
  40a81b:	je     0x40a80e
  40a81d:	and    bl,BYTE PTR [edi+0x7a]
  40a820:	mov    esi,0xedc1c819
  40a825:	cmp    dh,BYTE PTR ds:0xc2bdbd8b
  40a82b:	sti    
  40a82c:	adc    esi,DWORD PTR ds:0x6f9e2d6a
  40a832:	or     al,ch
  40a834:	int    0x5c
  40a836:	(bad)  
  40a838:	pusha  
  40a839:	jg     0x40a817
  40a83b:	addr16 jmp 0x11fe977b
  40a841:	das    
  40a842:	inc    ecx
  40a843:	inc    ecx
  40a844:	jmp    0x2881e69b
  40a849:	cmp    eax,0xe2f174df
  40a84e:	jmp    0x5574:0xddd95ea0
  40a855:	fst    DWORD PTR [ebx+0x8]
  40a858:	inc    ecx
  40a859:	add    bh,bh
  40a85b:	pop    ecx
  40a85c:	inc    DWORD PTR [esi-0x7d]
  40a85f:	rol    BYTE PTR [ebx],0xe9
  40a862:	outs   dx,DWORD PTR ds:[esi]
  40a863:	mov    ebp,ebx
  40a865:	push   0x76
  40a867:	fisubr DWORD PTR [ecx-0x17]
  40a86a:	and    al,0x2e
  40a86c:	call   FWORD PTR [edx+eax*2-0x665f1718]
  40a873:	fisttp QWORD PTR [eax+0x665eac]
  40a879:	jmp    0xa844e7
  40a87e:	leave  
  40a87f:	inc    ecx
  40a880:	inc    ecx
  40a881:	add    al,cl
  40a883:	pusha  
  40a884:	inc    ecx
  40a885:	inc    ecx
  40a886:	push   eax
  40a887:	fbstp  TBYTE PTR [ebx+0x8]
  40a88a:	cmp    BYTE PTR [edx-0x61],dh
  40a88d:	call   DWORD PTR [edi+0x6b]
  40a890:	add    BYTE PTR [eax],al
  40a892:	ja     0x40a911
  40a894:	data16 je 0x40a8a8
  40a897:	inc    ebp
  40a898:	add    BYTE PTR [eax-0x7a],ch
  40a89b:	inc    ebx
  40a89c:	inc    ecx
  40a89d:	add    bh,dh
  40a89f:	aaa    
  40a8a0:	or     al,ch
  40a8a2:	call   0xfc37:0xe7fffda3
  40a8a9:	dec    DWORD PTR [ebp+0xc]
  40a8ac:	call   0xfdfe02a4
  40a8b1:	leave  
  40a8b2:	ror    BYTE PTR [eax],cl
  40a8b4:	add    BYTE PTR [ebp-0x65],dl
  40a8b7:	rol    BYTE PTR [ecx+0x5389c4c4],1
  40a8bd:	adc    BYTE PTR [eax],al
  40a8bf:	imul   edx,edx,0x68
  40a8c2:	add    BYTE PTR [ebp+0x47],dl
  40a8c5:	cld    
  40a8c6:	push   eax
  40a8c7:	addr16 aaa 
  40a8c9:	or     BYTE PTR [edx-0x20],ch
  40a8cc:	mov    esi,0x12571073
  40a8d1:	sbb    al,0x85
  40a8d3:	adc    BYTE PTR [edi],dh
  40a8d5:	daa    
  40a8d6:	mov    edi,DWORD PTR [ebp-0x43]
  40a8d9:	mov    gs,WORD PTR [edx-0x60]
  40a8dc:	add    BYTE PTR [bx+si-0x9],ch
  40a8e0:	add    BYTE PTR [eax],al
  40a8e2:	add    BYTE PTR [edi+0x37],ah
  40a8e5:	or     al,0x6a
  40a8e7:	addr16 mov ebp,0x17a0470
  40a8ed:	push   0x0
  40a8ef:	sub    BYTE PTR [ebx+0x5190004b],ch
  40a8f5:	(bad)  
  40a8f6:	jne    0x40a931
  40a8f8:	repz jmp 0x40a95a
  40a8fb:	pop    es
  40a8fc:	out    0x2,eax
  40a8fe:	leave  
  40a8ff:	jnp    0x40a8d4
  40a901:	add    dl,BYTE PTR [ebp-0x4e]
  40a904:	or     eax,DWORD PTR [ebx+0x39625dc3]
  40a90a:	adc    al,0xc2
  40a90c:	mov    ecx,0x2cbc0068
  40a911:	loopne 0x40a962
  40a913:	inc    esi
  40a914:	xor    al,0x10
  40a916:	inc    esp
  40a918:	fisubr WORD PTR [eax+0x0]
  40a91b:	ss xor al,0xf8
  40a91e:	dec    BYTE PTR [ebx+0xbf88ef]
  40a924:	lods   al,BYTE PTR ds:[esi]
  40a925:	push   es
  40a926:	mov    edx,DWORD PTR [ebp+ebx*1+0x37]
  40a92a:	imul   eax,DWORD PTR [eax],0xff6ae7a3
  40a930:	cmp    ah,bh
  40a932:	add    bh,bh
  40a934:	mov    edi,ss
  40a936:	push   0x7f8feff
  40a93b:	push   0x39
  40a93d:	add    DWORD PTR [eax+ebp*8],eax
  40a940:	xchg   edx,eax
  40a941:	adc    al,0x4
  40a943:	add    cl,cl
  40a945:	pop    ebp
  40a946:	pop    eax
  40a947:	cld    
  40a948:	sar    DWORD PTR [eax-0x5fc6ffb4],1
  40a94e:	ror    BYTE PTR [edi],0x39
  40a951:	pushf  
  40a952:	mov    ebx,ebp
  40a954:	(bad)  
  40a955:	mov    bl,0xa
  40a957:	inc    DWORD PTR [edi+ecx*8-0x16]
  40a95b:	push   edx
  40a95c:	xor    DWORD PTR [esi-0x22],ecx
  40a95f:	(bad)  
  40a960:	and    al,0xd3
  40a962:	jmp    0x99d1:0x2e6f497
  40a969:	imul   eax,ebx,0x582de901
  40a96f:	or     al,0x8e
  40a971:	call   FWORD PTR [ebx-0x5eb06105]
  40a977:	fidivr WORD PTR [edi-0x24]
  40a97a:	fwait
  40a97b:	div    DWORD PTR [edi+0x52]
  40a97e:	stc    
  40a97f:	fsubrp st(5),st
  40a981:	not    DWORD PTR [eax]
  40a983:	popa   
  40a984:	loope  0x40a962
  40a986:	std    
  40a987:	retf   
  40a988:	add    BYTE PTR [eax-0xd],bh
  40a98b:	call   0xee2c6bc8
  40a990:	push   edi
  40a991:	inc    ecx
  40a992:	fstp   QWORD PTR [ebx-0x4]
  40a995:	pop    esi
  40a996:	stc    
  40a997:	pusha  
  40a998:	fnstsw WORD PTR [edi]
  40a99a:	fcomp  QWORD PTR [ebx+0x10]
  40a99d:	and    DWORD PTR [esi+0x4039041c],ecx
  40a9a3:	sbb    ebp,ebx
  40a9a5:	lods   eax,DWORD PTR ds:[esi]
  40a9a6:	or     al,0xbe
  40a9a8:	push   edi
  40a9a9:	inc    ecx
  40a9aa:	call   0xdc5705a0
  40a9af:	lods   eax,DWORD PTR ds:[esi]
  40a9b0:	push   edi
  40a9b1:	and    eax,0x7f41bdb
  40a9b6:	push   esi
  40a9b7:	add    esp,ebp
  40a9b9:	dec    ebp
  40a9ba:	pop    eax
  40a9bb:	xchg   esi,eax
  40a9bc:	fld    QWORD PTR [ecx]
  40a9be:	mov    edi,0x878403f4
  40a9c3:	xchg   esp,eax
  40a9c4:	cmp    edx,0xffffffb4
  40a9c7:	jns    0x40a9a6
  40a9c9:	(bad)  
  40a9cb:	sti    
  40a9cc:	sti    
  40a9cd:	lds    eax,FWORD PTR [ebp-0x24302018]
  40a9d3:	mov    eax,0x51084ddc
  40a9d8:	mov    esi,0xdd55dbbc
  40a9dd:	sub    eax,0xae875bf8
  40a9e2:	rol    DWORD PTR [ebp-0x23],cl
  40a9e5:	neg    dl
  40a9e7:	mov    bl,0xf
  40a9e9:	sahf   
  40a9ea:	push   ebp
  40a9eb:	add    cl,ah
  40a9ed:	add    BYTE PTR [edx+0x6c2efeef],ah
  40a9f3:	imul   eax,DWORD PTR [eax],0xff683a93
  40a9f9:	jmp    0xd43d:0x6c8d003a
  40aa00:	dec    BYTE PTR [esi]
  40aa02:	and    eax,0xe06ff66
  40aa07:	lock imul ebp,ecx,0x5be7ffd0
  40aa0e:	jmp    0xb666aa12
  40aa13:	jmp    0x40aa07
  40aa15:	out    0x65,al
  40aa17:	or     eax,DWORD PTR [eax]
  40aa19:	jmp    0xddc56d58
  40aa1e:	or     edx,ebx
  40aa20:	(bad)  
  40aa21:	jmp    0x40aa5d
  40aa23:	add    BYTE PTR [eax],al
  40aa25:	scas   al,BYTE PTR es:[edi]
  40aa26:	mov    edi,0xfdbef2d2
  40aa2b:	(bad)  
  40aa2d:	jmp    0xadc56d6c
  40aa32:	jmp    0x3b2aa910
  40aa37:	add    BYTE PTR [eax],al
  40aa39:	jb     0x40aa82
  40aa3b:	clc    
  40aa3c:	mov    bh,bl
  40aa3e:	pusha  
  40aa3f:	add    BYTE PTR [ebp-0x131f59c],cl
  40aa45:	xchg   BYTE PTR [edx],ch
  40aa47:	lea    eax,[ebp+ecx*4+0x19feda09]
  40aa4e:	mov    BYTE PTR [ebx-0x12ff8519],0xd9
  40aa55:	dec    edi
  40aa56:	outs   dx,WORD PTR ds:[esi]
  40aa58:	lock (bad) 
  40aa5a:	aam    0x2e
  40aa5c:	(bad)  [ecx+eiz*8+0x20]
  40aa60:	add    bh,bh
  40aa62:	aam    0xb2
  40aa64:	fst    DWORD PTR [ecx+0x0]
  40aa67:	aam    0x7f
  40aa69:	mov    ebx,0xfdbc63e8
  40aa6e:	add    BYTE PTR [edi-0x5ffee57e],bl
  40aa74:	inc    BYTE PTR [edx-0x24fd343]
  40aa7a:	call   DWORD PTR [eax+0x610f840b]
  40aa80:	(bad)  
  40aa81:	inc    esi
  40aa83:	aad    0x92
  40aa85:	icebp  
  40aa86:	(bad)  
  40aa87:	aas    
  40aa88:	(bad)  
  40aa89:	(bad)  
  40aa8a:	out    dx,al
  40aa8b:	push   ds
  40aa8c:	lea    eax,[bx+di-0x5f]
  40aa90:	dec    BYTE PTR [ebp+eax*4-0x245a0]
  40aa97:	add    ah,ch
  40aa99:	adc    cl,BYTE PTR [eax+edx*2-0x2]
  40aa9d:	test   al,al
  40aa9f:	xchg   esp,eax
  40aaa0:	inc    edx
  40aaa1:	mov    DWORD PTR [ebp-0x24e1c],0xbeeefe11
  40aaab:	mov    BYTE PTR [ebp+0x40],dl
  40aaae:	inc    ecx
  40aaaf:	and    BYTE PTR [ecx-0x4a23ff7d],cl
  40aab5:	std    
  40aab6:	push   eax
  40aab7:	add    BYTE PTR [eax+0x100049af],ch
  40aabd:	cmp    DWORD PTR [esi-0x7c40fc8c],0xfdb5d3d4
  40aac7:	add    dl,al
  40aac9:	out    0xbc,al
  40aacb:	push   0x414327
  40aad0:	pop    ebp
  40aad1:	jg     0x40aad1
  40aad3:	sti    
  40aad4:	pop    edi
  40aad5:	mov    ch,0x4e
  40aad7:	call   0x40f3e2
  40aadc:	push   ebp
  40aadd:	les    ecx,FWORD PTR ds:0x3863985
  40aae3:	add    BYTE PTR [ecx],bh
  40aae5:	mov    edi,0xe6f840cd
  40aaea:	xchg   DWORD PTR [ecx+edi*1-0x160124ed],eax
  40aaf1:	ds mov bl,0x4b
  40aaf4:	cmp    edi,esp
  40aaf6:	or     eax,0x85780dc0
  40aafb:	cmp    al,0x27
  40aafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aafe:	inc    ebx
  40aaff:	add    BYTE PTR [ecx],bh
  40ab01:	loop   0x40ab81
  40ab03:	cmp    BYTE PTR [ecx],0xe7
  40ab06:	add    bh,bh
  40ab08:	lods   al,BYTE PTR ds:[esi]
  40ab09:	out    dx,eax
  40ab0a:	(bad)  
  40ab0b:	(bad)  
  40ab0c:	pop    esi
  40ab0d:	push   0xffffff81
  40ab0f:	fisttp WORD PTR [edx-0x2e]
  40ab12:	fsin   
  40ab14:	test   bl,bl
  40ab16:	aad    0xfe
  40ab18:	inc    esi
  40ab19:	push   edx
  40ab1a:	and    bl,0x0
  40ab1d:	dec    edx
  40ab1e:	mov    edx,0x8ebc8cd9
  40ab23:	aad    0xfe
  40ab25:	cs pop ss
  40ab27:	outs   dx,BYTE PTR ds:[esi]
  40ab28:	add    DWORD PTR [ebx-0x6cff9319],edx
  40ab2e:	out    0x6c,eax
  40ab30:	add    ah,al
  40ab32:	imul   esp,ebx,0xfffffff2
  40ab35:	push   cs
  40ab36:	stos   BYTE PTR es:[edi],al
  40ab37:	xor    bh,bh
  40ab39:	sub    al,0xd9
  40ab3b:	inc    esp
  40ab3c:	inc    ecx
  40ab3d:	cmp    esi,ecx
  40ab3f:	ret    0x7e73
  40ab42:	jb     0x40ab93
  40ab44:	adc    al,0xee
  40ab46:	xor    edi,DWORD PTR [ebx-0x267e190e]
  40ab4c:	mov    ah,0xfd
  40ab4e:	push   ebp
  40ab4f:	(bad)  
  40ab51:	(bad)  
  40ab52:	fcomi  st,st(2)
  40ab54:	inc    BYTE PTR [edx+esi*2-0x39012b]
  40ab5b:	push   eax
  40ab5c:	fidivr WORD PTR [ebp-0x1225a228]
  40ab62:	mov    ebx,0xe7afda59
  40ab67:	cs dec ebp
  40ab69:	cmp    DWORD PTR [eax],eax
  40ab6b:	push   edx
  40ab6c:	clc    
  40ab6d:	lahf   
  40ab6e:	push   edx
  40ab6f:	aad    0xda
  40ab71:	int    0xe7
  40ab73:	cmp    edx,ebx
  40ab75:	(bad)  
  40ab76:	fdiv   DWORD PTR [ebx-0x19]
  40ab79:	mov    ebx,eax
  40ab7b:	and    eax,0x1df005da
  40ab80:	nop
  40ab81:	add    BYTE PTR [edx+0x56da15cc],cl
  40ab87:	scas   al,BYTE PTR es:[edi]
  40ab88:	or     ebx,edx
  40ab8a:	fdivr  DWORD PTR [bp+di]
  40ab8d:	out    0x6b,eax
  40ab8f:	fdivr  st,st(5)
  40ab91:	jmp    0xbd80:0x3e9446a
  40ab98:	aam    0x3
  40ab9a:	in     al,dx
  40ab9b:	test   ah,dl
  40ab9d:	test   DWORD PTR [edx-0x69],edi
  40aba0:	xor    eax,0x61ec8d8d
  40aba5:	idiv   BYTE PTR [ebp-0x6ccb6ec3]
  40abab:	add    dh,al
  40abad:	dec    edi
  40abae:	sub    eax,0xa30c33d7
  40abb3:	add    BYTE PTR [esi+0x1ad7254f],dh
  40abb9:	xor    BYTE PTR [eax+eax*8+0x3df6301b],bh
  40abc0:	pop    ebp
  40abc1:	add    al,0x39
  40abc3:	add    cl,ch
  40abc5:	mov    WORD PTR [ebp-0x4a099e68],es
  40abcb:	cmp    eax,0x3dac3445
  40abd0:	test   eax,0xfff06334
  40abd5:	jne    0x40ac55
  40abd7:	cwde   
  40abd8:	(bad)  
  40abd9:	sbb    esi,DWORD PTR [ecx]
  40abdb:	cmp    DWORD PTR [ebp+eiz*4+0x35],0x4c
  40abe0:	daa    
  40abe1:	ins    BYTE PTR es:[edi],dx
  40abe2:	push   cs
  40abe3:	sar    dh,0xdc
  40abe6:	add    BYTE PTR [esi-0x7e068b2a],bl
  40abec:	push   cs
  40abed:	(bad)  
  40abee:	mov    esp,0xf174d736
  40abf3:	mov    ds:0x7036fcb3,al
  40abf8:	(bad)  
  40abf9:	ss inc ecx
  40abfb:	push   ds
  40abfc:	dec    ebx
  40abfd:	add    cl,ch
  40abff:	mov    ch,0xbe
  40ac01:	add    ebx,DWORD PTR [esi]
  40ac03:	(bad)  
  40ac04:	xchg   ebx,eax
  40ac05:	je     0x40ac3e
  40ac07:	pop    esp
  40ac08:	mov    cs,WORD PTR [edx+0x118ac2b4]
  40ac0e:	push   es
  40ac0f:	out    dx,al
  40ac10:	xchg   edi,eax
  40ac11:	(bad)  
  40ac12:	fwait
  40ac13:	inc    edx
  40ac14:	aaa    
  40ac15:	leave  
  40ac16:	sub    eax,DWORD PTR [ebp-0x29]
  40ac19:	push   ebx
  40ac1a:	bound  edx,QWORD PTR [ecx-0x80]
  40ac1d:	ret    
  40ac1e:	loope  0x40ac80
  40ac20:	(bad)  
  40ac21:	(bad)  
  40ac22:	les    ebp,FWORD PTR ss:[ebx]
  40ac25:	adc    BYTE PTR [edx+0x24],ah
  40ac28:	test   BYTE PTR [ecx+edx*8+0x19fed600],al
  40ac2f:	pop    DWORD PTR [eax]
  40ac31:	push   DWORD PTR [eax*2+0x7fb6006a]
  40ac38:	lock (bad) 
  40ac3a:	sbb    esp,DWORD PTR [ecx]
  40ac3c:	jge    0x40abfd
  40ac3e:	sbb    al,0x98
  40ac40:	mov    edi,0xd6109d84
  40ac45:	(bad)  
  40ac46:	jmp    0x6240ac85
  40ac4b:	add    BYTE PTR [edi-0x31],dl
  40ac4e:	std    
  40ac4f:	add    BYTE PTR [edi+0x651289b7],dh
  40ac55:	push   esi
  40ac56:	sti    
  40ac57:	inc    BYTE PTR [edi-0x48]
  40ac5a:	dec    esi
  40ac5b:	lea    ebx,[ebp+0x3]
  40ac5e:	(bad)  
  40ac5f:	call   DWORD PTR [edi+0x13]
  40ac62:	push   0x10
  40ac64:	pop    ss
  40ac65:	xchg   dh,dh
  40ac67:	inc    BYTE PTR [edi]
  40ac69:	mov    eax,0x7b8452fd
  40ac6e:	mov    ebx,0xfdb7f6fc
  40ac73:	add    ah,cl
  40ac75:	sbb    al,0x8d
  40ac77:	mov    ebp,0xfffdb7a0
  40ac7c:	push   edi
  40ac7d:	inc    esi
  40ac7e:	adc    bh,bh
  40ac80:	popf   
  40ac81:	(bad)  
  40ac82:	push   esi
  40ac83:	dec    ebp
  40ac85:	or     ch,al
  40ac87:	adc    eax,DWORD PTR [edi-0x48]
  40ac8a:	std    
  40ac8b:	sbb    DWORD PTR [edi],0xffffffd3
  40ac8e:	std    
  40ac8f:	lea    esi,[ecx+edi*4]
  40ac92:	std    
  40ac93:	dec    ebp
  40ac95:	loopne 0x40ac80
  40ac97:	stos   BYTE PTR es:[edi],al
  40ac98:	(bad)  [ebp-0x9]
  40ac9b:	(bad)  
  40ac9c:	push   edi
  40ac9d:	scas   al,BYTE PTR es:[edi]
  40ac9e:	mov    DWORD PTR [edx],edx
  40aca0:	push   edi
  40aca1:	jo     0x40ac99
  40aca3:	(bad)  
  40aca4:	pop    ss
  40aca5:	scas   al,BYTE PTR es:[edi]
  40aca6:	std    
  40aca7:	push   edx
  40aca8:	sbb    BYTE PTR [edi],cl
  40acaa:	leave  
  40acab:	ret    0x204
  40acae:	push   ebp
  40acaf:	mov    eax,DWORD PTR [eax]
  40acb1:	add    al,0x7c
  40acb3:	ret    0xd6f8
  40acb6:	lods   eax,DWORD PTR ds:[esi]
  40acb7:	std    
  40acb8:	push   edi
  40acb9:	fwait
  40acba:	(bad)  
  40acbc:	mov    esp,edx
  40acbe:	mov    BYTE PTR [ebx-0x2522908],al
  40acc4:	push   eax
  40acc5:	dec    edx
  40acc6:	cld    
  40acc7:	imul   eax,DWORD PTR [eax],0xc506e39
  40accd:	out    0x19,al
  40accf:	sbb    al,0x85
  40acd1:	stc    
  40acd2:	aam    0x35
  40acd4:	(bad)  
  40acd5:	jl     0x40ad2a
  40acd7:	add    al,0x0
  40acd9:	cmp    edi,esp
  40acdb:	jb     0x40ac67
  40acdd:	lods   al,BYTE PTR ds:[esi]
  40acde:	dec    edi
  40acdf:	(bad)  
  40ace0:	(bad)  
  40ace1:	mov    esi,0xfc8cf252
  40ace6:	xor    dh,BYTE PTR [ecx*4-0x129d44c]
  40aced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acee:	xchg   edi,eax
  40acef:	push   0xdc549e10
  40acf4:	std    
  40acf5:	xchg   esi,eax
  40acf6:	push   ss
  40acf7:	xlat   BYTE PTR ds:[ebx]
  40acf8:	push   ecx
  40acf9:	cmp    eax,0x857c8337
  40acfe:	out    0x72,eax
  40ad00:	jae    0x40ad5b
  40ad02:	dec    esp
  40ad03:	cdq    
  40ad04:	sti    
  40ad05:	ja     0x40acfd
  40ad07:	(bad)  
  40ad08:	(bad)  
  40ad09:	outs   dx,BYTE PTR ds:[esi]
  40ad0a:	je     0x40ad12
  40ad0c:	(bad)  
  40ad0d:	in     al,dx
  40ad0e:	fisubr WORD PTR ds:0xd6fe31e8
  40ad14:	inc    BYTE PTR [eax]
  40ad16:	mov    edx,0x4e8ff41e
  40ad1b:	pushf  
  40ad1c:	(bad)  
  40ad1d:	(bad)  
  40ad1e:	int3   
  40ad1f:	push   DWORD PTR [ebx-0x16]
  40ad22:	mov    edx,DWORD PTR [edx+0x70]
  40ad25:	div    DWORD PTR [edi]
  40ad27:	mov    dh,0xd5
  40ad29:	mov    cl,BYTE PTR [ebx-0x52]
  40ad2c:	(bad)  
  40ad2d:	mul    DWORD PTR [edi]
  40ad2f:	(bad)  
  40ad30:	aad    0xfe
  40ad32:	mov    ecx,edi
  40ad34:	xor    eax,0x2cefbc9
  40ad39:	push   ebp
  40ad3a:	ret    0x81ba
  40ad3d:	ret    
  40ad3e:	leave  
  40ad3f:	in     al,dx
  40ad40:	(bad)  
  40ad41:	je     0x40ad70
  40ad43:	add    BYTE PTR [ecx-0x16ff7e34],dl
  40ad49:	or     bh,cl
  40ad4b:	dec    edx
  40ad4c:	in     al,dx
  40ad4d:	xor    eax,0x3dcc1f0
  40ad52:	or     al,ah
  40ad54:	imul   eax,ebx,0x88988938
  40ad5a:	jne    0x40ad40
  40ad5c:	sbb    BYTE PTR [edx],dh
  40ad5e:	(bad)  
  40ad5f:	dec    edx
  40ad60:	fucomp st(3)
  40ad62:	pop    edx
  40ad63:	xchg   BYTE PTR [ebp-0x2a],ah
  40ad66:	arpl   di,ax
  40ad68:	outs   dx,DWORD PTR ds:[esi]
  40ad69:	dec    eax
  40ad6a:	test   eax,ebp
  40ad6c:	loop   0x40ad7b
  40ad6e:	mov    fs,WORD PTR ss:[esp+ebp*1-0x50540173]
  40ad76:	stc    
  40ad77:	cmp    BYTE PTR [edi],0xef
  40ad7a:	add    BYTE PTR [eax],cl
  40ad7c:	iret   
  40ad7d:	add    esi,ecx
  40ad7f:	mov    cl,0x4a
  40ad81:	sbb    edx,ebp
  40ad83:	push   esi
  40ad84:	push   cs
  40ad85:	test   BYTE PTR [ebp+0x330d25fa],0xe1
  40ad8c:	xor    DWORD PTR [ebx-0x5c7cc6bc],ebp
  40ad92:	mov    ebx,0x4c14e7ee
  40ad97:	cmp    DWORD PTR [eax],eax
  40ad99:	push   0xffffffbf
  40ad9b:	inc    edx
  40ad9c:	sub    DWORD PTR [ebx+0x73d4f6bb],0xffffffb3
  40ada3:	push   esi
  40ada4:	xchg   DWORD PTR [ecx-0x2b],esp
  40ada7:	aaa    
  40ada8:	mov    ah,BYTE PTR [ebx]
  40adaa:	mov    ah,0x74
  40adac:	jg     0x40ad84
  40adae:	lock test al,0xaf
  40adb1:	addr16 pop edi
  40adb3:	add    eax,0x3903e8d4
  40adb8:	shl    DWORD PTR [ebx],cl
  40adba:	mov    al,0x96
  40adbc:	add    BYTE PTR cs:[ebx],ch
  40adbf:	jp     0x40adc1
  40adc1:	lea    esp,[edi*4-0x7d9a17bd]
  40adc8:	add    BYTE PTR [eax],al
  40adca:	push   0xfffffff9
  40adcc:	pop    es
  40adcd:	lea    ebp,[eiz*4-0x5aeb00bd]
  40add4:	fist   DWORD PTR [edi+0x2]
  40add7:	in     al,dx
  40add8:	ror    BYTE PTR [eax+0x44848524],cl
  40adde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40addf:	add    BYTE PTR ds:0x4d9974d3,cl
  40ade5:	sub    eax,DWORD PTR [edx-0x58]
  40ade8:	cmp    dl,bl
  40adea:	xor    al,0xbd
  40adec:	arpl   WORD PTR [ecx+0x0],ax
  40adef:	inc    ecx
  40adf0:	sbb    BYTE PTR [esi-0x1],dl
  40adf3:	dec    esi
  40adf4:	xor    al,al
  40adf6:	push   cs
  40adf7:	ins    DWORD PTR es:[edi],dx
  40adf8:	and    al,0xd3
  40adfa:	(bad)  
  40adfb:	jmp    0x6b08eac3
  40ae00:	out    dx,al
  40ae01:	ret    
  40ae02:	(bad)  
  40ae03:	(bad)  
  40ae05:	cmp    bh,0xe8
  40ae08:	cmp    dl,bl
  40ae0a:	je     0x40adf9
  40ae0c:	(bad)  
  40ae0d:	dec    DWORD PTR [eax-0x17]
  40ae10:	cmp    dh,BYTE PTR [ecx+0x1756adf]
  40ae16:	mov    DWORD PTR [edx+ebp*4-0x4a128b2e],ebp
  40ae1d:	cmp    al,0xb4
  40ae1f:	div    bh
  40ae21:	ret    
  40ae22:	mov    fs,WORD PTR [edx+edi*2-0x424e8b2e]
  40ae29:	cmp    eax,esp
  40ae2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae2c:	outs   dx,DWORD PTR ds:[esi]
  40ae2d:	xchg   esp,eax
  40ae2e:	(bad)  
  40ae2f:	call   0xcc3ae6e
  40ae34:	inc    edi
  40ae35:	sub    DWORD PTR [ecx+0x0],eax
  40ae38:	and    bh,bh
  40ae3a:	jae    0x40ae8c
  40ae3c:	popf   
  40ae3d:	adc    bh,BYTE PTR [eax+0x69ff7a50]
  40ae43:	add    BYTE PTR [eax],al
  40ae45:	jp     0x40ae43
  40ae47:	mov    WORD PTR [ebp-0x70],es
  40ae4a:	punpckhdq mm0,QWORD PTR [eax]
  40ae4d:	pop    ebp
  40ae4e:	adc    al,al
  40ae50:	push   eax
  40ae51:	iret   
  40ae52:	loope  0x40ae90
  40ae54:	sub    DWORD PTR [ecx],edx
  40ae56:	cld    
  40ae57:	or     al,al
  40ae59:	aam    0xf0
  40ae5b:	cmp    BYTE PTR [ebp+0xc],0xff
  40ae5f:	jae    0x40ae8d
  40ae61:	push   ebx
  40ae62:	sub    dl,BYTE PTR [eax]
  40ae64:	add    ah,al
  40ae66:	push   es
  40ae67:	mov    edx,DWORD PTR [ebp-0x50]
  40ae6a:	xor    al,0xc7
  40ae6c:	add    cl,BYTE PTR [edi-0x4]
  40ae6f:	(bad)  
  40ae70:	jne    0x40ae0a
  40ae72:	stos   DWORD PTR es:[edi],eax
  40ae73:	jae    0x40ae2d
  40ae75:	out    dx,eax
  40ae76:	inc    ecx
  40ae77:	mov    esp,0x67fad5ff
  40ae7c:	add    esp,DWORD PTR [eax-0xb174325]
  40ae82:	mov    eax,0x424ffffd
  40ae87:	mov    esp,0x142ae8
  40ae8c:	add    BYTE PTR [edi+0x42],cl
  40ae8f:	enter  0xfce8,0x44
  40ae93:	(bad)  
  40ae94:	jmp    FWORD PTR [edi]
  40ae96:	inc    edx
  40ae97:	shr    al,1
  40ae99:	add    al,0x45
  40ae9b:	(bad)  
  40ae9c:	jmp    FWORD PTR [esi+0x500cc0c5]
  40aea2:	and    DWORD PTR [ebx-0x396d2c14],ecx
  40aea8:	lea    eax,[eax]
  40aeaa:	gs mov al,0x4e
  40aead:	push   0x413a3e
  40aeb2:	cmp    DWORD PTR ds:0x3f396a09,edi
  40aeb8:	repnz inc ecx
  40aeba:	js     0x40aea3
  40aebc:	fidivr DWORD PTR [ebp-0x7afd187f]
  40aec2:	stc    
  40aec3:	fidivr DWORD PTR [edx-0x41]
  40aec6:	cmp    edi,esp
  40aec8:	add    cl,BYTE PTR [ebx+0x117e9b8c]
  40aece:	mov    esp,0xe64fcc1c
  40aed3:	hlt    
  40aed4:	iret   
  40aed5:	dec    BYTE PTR [ebx+0x46bf87e3]
  40aedb:	dec    edi
  40aedc:	jb     0x40aedd
  40aede:	into   
  40aedf:	out    0x85,eax
  40aee1:	jl     0x40aea4
  40aee3:	out    0x1,eax
  40aee5:	test   BYTE PTR [ebp+0x7e0002e7],ah
  40aeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeec:	mov    dh,0xff
  40aeee:	scas   al,BYTE PTR es:[edi]
  40aeef:	out    0x2,eax
  40aef1:	(bad)  
  40aef2:	cld    
  40aef3:	push   cs
  40aef4:	add    al,0x0
  40aef6:	cmp    edi,esp
  40aef8:	leave  
  40aef9:	inc    esp
  40aefa:	imul   ebp,edi,0x1a390003
  40af00:	dec    ecx
  40af01:	int3   
  40af02:	cmp    edi,esp
  40af04:	add    al,BYTE PTR [eax]
  40af06:	mov    dl,0x6c
  40af08:	retf   0x4b8a
  40af0b:	dec    esp
  40af0c:	dec    ecx
  40af0d:	int3   
  40af0e:	add    BYTE PTR [ecx],cl
  40af10:	fs dec ecx
  40af12:	ror    BYTE PTR [ecx],1
  40af14:	jge    0x40af19
  40af16:	jmp    esp
  40af18:	out    dx,al
  40af19:	rcl    BYTE PTR [ecx+0x45],cl
  40af1c:	into   
  40af1d:	ret    0xe574
  40af20:	gs push ecx
  40af22:	int3   
  40af23:	cmp    BYTE PTR [ecx+eax*2-0x7d],dl
  40af27:	mov    esp,0x7f7403ea
  40af2c:	add    BYTE PTR [ecx+0x42],dl
  40af2f:	jnp    0x40af70
  40af31:	jmp    0xc0ed5d08
  40af36:	enter  0x76,0xe9
  40af3a:	(bad)  
  40af3b:	(bad)  
  40af3c:	dec    ebx
  40af3d:	repz imul esi,esi,0xb003e8ff
  40af44:	cmp    ah,BYTE PTR [ecx+0x23b937de]
  40af4a:	mov    esp,0x3e8d0f6
  40af4f:	out    dx,al
  40af50:	dec    edx
  40af51:	mov    cl,0xd2
  40af53:	ins    DWORD PTR es:[edi],dx
  40af54:	lods   al,BYTE PTR ds:[esi]
  40af55:	xchg   ebp,eax
  40af56:	pop    eax
  40af57:	xor    eax,ebp
  40af59:	xchg   al,dl
  40af5b:	xlat   BYTE PTR ds:[ebx]
  40af5c:	rol    BYTE PTR [ebp-0x29181aa8],1
  40af62:	cmp    edi,DWORD PTR [ecx]
  40af64:	add    BYTE PTR [edx+0x50],ch
  40af67:	loope  0x40af68
  40af69:	hlt    
  40af6a:	sti    
  40af6b:	mov    bh,0x4a
  40af6d:	inc    ecx
  40af6e:	(bad)  [esi]
  40af70:	dec    eax
  40af71:	jmp    0x83d2af79
  40af76:	popa   
  40af77:	cmp    BYTE PTR [ecx+0xdd2fa84],ah
  40af7d:	fadd   DWORD PTR [ebp+0x35]
  40af80:	inc    ecx
  40af81:	test   DWORD PTR [ebx+0x35edb3cf],edx
  40af87:	pop    eax
  40af88:	jge    0x40af5a
  40af8a:	call   0x403:0xecbd81fb
  40af91:	test   DWORD PTR [esi+eax*4],ecx
  40af94:	jp     0x40af75
  40af96:	mov    esi,0xaa6e1d86
  40af9b:	inc    esp
  40af9c:	cmp    DWORD PTR [eax],eax
  40af9e:	jl     0x40af91
  40afa0:	ja     0x40af9c
  40afa2:	pop    edx
  40afa3:	inc    ebp
  40afa4:	clc    
  40afa5:	(bad)  
  40afa6:	jmp    edi
  40afa8:	cmp    al,BYTE PTR [eax]
  40afaa:	add    BYTE PTR [edi],ch
  40afac:	mov    al,0x41
  40afae:	inc    ecx
  40afaf:	jmp    0xa8a6b6c1
  40afb4:	push   ebx
  40afb5:	add    al,BYTE PTR [ebx-0x7c99c851]
  40afbb:	(bad)  
  40afbd:	push   ebp
  40afbe:	repz push 0x3e
  40afc1:	mov    esi,0x3d282d
  40afc6:	(bad)  
  40afc8:	in     al,dx
  40afc9:	iret   
  40afca:	(bad)  
  40afcb:	jmp    0xd80abc8d
  40afd0:	jnp    0x40afd2
  40afd2:	add    dh,ch
  40afd4:	mov    esi,0xe8ffdd
  40afd9:	cmp    al,BYTE PTR [ebx+0x4133cf3c]
  40afdf:	add    cl,ch
  40afe1:	cmp    DWORD PTR [eax+eiz*8-0x38ffc517],eax
  40afe8:	sub    al,0xe9
  40afea:	iret   
  40afeb:	(bad)  
  40afec:	jmp    0x6185772b
  40aff1:	xor    eax,0x27e90000
  40aff6:	inc    esp
  40aff7:	cld    
  40aff8:	mov    ecx,0xb9f8441f
  40affd:	hlt    
  40affe:	jmp    DWORD PTR [edi+0x49]
  40b001:	test   DWORD PTR [eax+0x0],0x2db98e3e
  40b008:	test   al,0x3a
  40b00a:	sti    
  40b00b:	mov    edi,0xff95bede
  40b010:	call   0x21bd334f
  40b015:	cmp    eax,0x354583ff
  40b01a:	add    BYTE PTR [eax],al
  40b01c:	push   0x6
  40b01e:	int3   
  40b01f:	(bad)  
  40b020:	inc    DWORD PTR [edi-0x79]
  40b023:	mov    al,ds:0x8b035000
  40b028:	jne    0x40b06e
  40b02a:	stos   BYTE PTR es:[edi],al
  40b02b:	add    BYTE PTR [eax],0x20
  40b02e:	add    edx,DWORD PTR [esi-0x75]
  40b031:	dec    esi
  40b032:	mov    cl,0x74
  40b034:	sbb    BYTE PTR [edi+0x7efff046],dl
  40b03a:	ror    BYTE PTR [ebp+0x2aec0045],1
  40b040:	xchg   esi,eax
  40b041:	inc    edx
  40b042:	popa   
  40b043:	add    al,0xe8
  40b045:	xlat   BYTE PTR ds:[ebx]
  40b046:	pop    esi
  40b047:	add    al,0x0
  40b049:	shl    eax,1
  40b04b:	cmp    DWORD PTR [esi-0x1fb9a6fe],0x68
  40b052:	outs   dx,BYTE PTR ds:[esi]
  40b053:	inc    ebp
  40b054:	inc    ecx
  40b055:	add    BYTE PTR [edi+0x46],dl
  40b058:	in     al,0xc7
  40b05a:	or     eax,0xe0fffee0
  40b05f:	add    cl,BYTE PTR [ebp+0x6a12a845]
  40b065:	add    DWORD PTR [edx],ebp
  40b067:	add    al,0x6a
  40b069:	add    BYTE PTR [ebp+0x46],dl
  40b06c:	loopne 0x40b0be
  40b06e:	cmp    al,BYTE PTR [ecx*4-0xecefbb]
  40b075:	adc    eax,0x40eb46
  40b07a:	fwait
  40b07b:	ret    0x2d72
  40b07e:	and    edi,DWORD PTR [esi]
  40b080:	in     al,dx
  40b081:	add    ah,cl
  40b083:	pop    ss
  40b084:	mov    eax,0x29001
  40b089:	or     edx,DWORD PTR [eax+0x37]
  40b08c:	push   ss
  40b08d:	jmp    FWORD PTR [ebp+0x4875fdca]
  40b093:	mov    al,0x73
  40b095:	in     al,dx
  40b096:	inc    edi
  40b097:	sub    DWORD PTR [eax],ecx
  40b099:	push   0xef02dd39
  40b09e:	xchg   edi,eax
  40b09f:	add    bl,bh
  40b0a1:	clc    
  40b0a2:	add    BYTE PTR [esi+0x5],cl
  40b0a5:	shl    BYTE PTR [ebp+edx*2-0x10],1
  40b0a9:	xchg   ebp,eax
  40b0aa:	inc    esp
  40b0ab:	cmp    ecx,ebx
  40b0ad:	xor    bh,bh
  40b0af:	test   bh,cl
  40b0b1:	add    ch,0x35
  40b0b4:	pop    edx
  40b0b5:	push   ecx
  40b0b6:	clc    
  40b0b7:	cmp    DWORD PTR [ebx],esi
  40b0b9:	std    
  40b0ba:	sbb    BYTE PTR [edi-0x29],0xfd
  40b0be:	test   BYTE PTR [esi+0xefecebe],ah
  40b0c4:	or     eax,0x9d2cfed0
  40b0c9:	sbb    eax,0xbcf53941
  40b0ce:	sar    DWORD PTR ds:0xdd8b37d7,0x5a
  40b0d5:	enter  0x53f7,0xd7
  40b0d9:	pop    eax
  40b0da:	das    
  40b0db:	fsubp  st(4),st
  40b0dd:	sti    
  40b0de:	out    0x98,eax
  40b0e0:	call   0x1d01afb3
  40b0e5:	sar    BYTE PTR [edi+0x4],1
  40b0e8:	mov    ah,0x40
  40b0ea:	inc    ecx
  40b0eb:	cmp    edi,edx
  40b0ed:	push   edi
  40b0ee:	sub    DWORD PTR [ecx],esp
  40b0f0:	mov    cl,0x40
  40b0f2:	inc    ecx
  40b0f3:	cmp    DWORD PTR [edi-0x2907bf4f],ebp
  40b0f9:	(bad)  
  40b0fb:	pop    ds
  40b0fc:	ss iret 
  40b0fe:	test   BYTE PTR [ecx-0x4d],bh
  40b101:	sub    ebp,DWORD PTR [eax+0x27]
  40b104:	cdq    
  40b105:	inc    ebx
  40b106:	add    BYTE PTR [eax],al
  40b108:	adc    DWORD PTR [eax*2-0x4dc0c6bf],edx
  40b10f:	jge    0x40b187
  40b111:	push   ds
  40b112:	mov    BYTE PTR [esp+eax*2],0x0
  40b116:	stos   DWORD PTR es:[edi],eax
  40b117:	inc    esp
  40b118:	cmp    edi,edi
  40b11a:	imul   edx,DWORD PTR [ecx],0x3a84243
  40b120:	cmp    DWORD PTR [ebx+edx*8-0x3a],edx
  40b124:	cmc    
  40b125:	(bad)  
  40b126:	call   0xd240ea2e
  40b12b:	ret    
  40b12c:	out    dx,al
  40b12d:	das    
  40b12e:	cdq    
  40b12f:	or     BYTE PTR [ebp+0x45ce9ac8],0xea
  40b136:	sub    al,BYTE PTR [ebp+0x39]
  40b139:	sub    DWORD PTR [eax-0x926c4b4],0xffffff82
  40b140:	xchg   ebp,eax
  40b141:	enter  0x58e8,0x3b
  40b145:	(bad)  
  40b147:	into   
  40b148:	(bad)  
  40b149:	enter  0x58bd,0x31
  40b14d:	fdivr  DWORD PTR [edx]
  40b14f:	retf   
  40b150:	test   esp,0x78f13861
  40b156:	cli    
  40b157:	into   
  40b158:	ins    DWORD PTR es:[edi],dx
  40b159:	enter  0x319d,0x31
  40b15d:	int    0x1b
  40b15f:	cld    
  40b160:	fidivr WORD PTR [ecx]
  40b162:	mov    esi,cs
  40b164:	iret   
  40b165:	int3   
  40b166:	sti    
  40b167:	sti    
  40b168:	ficomp WORD PTR [eax]
  40b16a:	jg     0x40b13a
  40b16c:	add    BYTE PTR [edi-0x48300434],bh
  40b172:	push   edx
  40b173:	loope  0x40b150
  40b175:	or     cl,BYTE PTR [edi+0x66]
  40b178:	into   
  40b179:	jno    0x40b13c
  40b17b:	in     al,0x3
  40b17d:	add    al,0x79
  40b17f:	inc    esp
  40b180:	cmp    BYTE PTR [edx-0x31],0xb6
  40b184:	ss jmp 0xe901:0x7fff9b78
  40b18c:	add    edi,DWORD PTR [ecx]
  40b18e:	add    BYTE PTR [eax],al
  40b190:	ss adc eax,edi
  40b193:	out    0x6d,eax
  40b195:	idiv   bh
  40b197:	jmp    FWORD PTR [ecx+0x72]
  40b19a:	push   DWORD PTR [esi-0x10]
  40b19d:	inc    ebx
  40b19e:	rcr    BYTE PTR [edx-0x4a],0x24
  40b1a2:	mov    bh,0xc1
  40b1a4:	loope  0x40b1e0
  40b1a6:	scas   eax,DWORD PTR es:[edi]
  40b1a7:	out    0x72,eax
  40b1a9:	add    esp,edi
  40b1ab:	mov    bl,ch
  40b1ad:	ret    
  40b1ae:	mov    ah,0xe
  40b1b0:	imul   esp,eax,0xffffffcb
  40b1b3:	(bad)  
  40b1b4:	jmp    0x7249066c
  40b1b9:	jbe    0x40b1b3
  40b1bb:	jmp    0xe969:0x5779743
  40b1c2:	sbb    esi,DWORD PTR [edx-0x1d]
  40b1c5:	mov    edx,0x3e3e38c7
  40b1ca:	sub    bl,0xf9
  40b1cd:	loope  0x40b1b5
  40b1cf:	jg     0x40b186
  40b1d1:	add    BYTE PTR [edx+0x4e],bh
  40b1d4:	or     eax,0x77460969
  40b1d9:	icebp  
  40b1da:	mov    edx,0xf16940d7
  40b1df:	stc    
  40b1e0:	jmp    0x1f2e:0x5ac031e0
  40b1e7:	mov    ecx,0xc3af1c1
  40b1ec:	xor    bl,bh
  40b1ee:	ret    0x3907
  40b1f1:	(bad)  
  40b1f2:	ds sbb al,0x30
  40b1f5:	and    BYTE PTR [edi+eax*1+0x7a0db41],0x46
  40b1fd:	(bad)  
  40b1fe:	xor    al,0x1c
  40b200:	inc    ecx
  40b201:	in     eax,dx
  40b202:	nop
  40b203:	(bad)  
  40b204:	or     BYTE PTR [edx],al
  40b206:	jne    0x40b22e
  40b208:	pop    edi
  40b209:	add    dh,bl
  40b20b:	xchg   al,al
  40b20d:	or     BYTE PTR [eax+0x5a04debf],dl
  40b213:	ret    
  40b214:	test   al,0x4b
  40b216:	jecxz  0x40b1d9
  40b218:	add    BYTE PTR [ebx],cl
  40b21a:	sti    
  40b21b:	xor    ah,BYTE PTR [edx-0x2346a75]
  40b221:	xor    bh,bl
  40b223:	inc    edx
  40b224:	clc    
  40b225:	jmp    DWORD PTR [ebp+0x3c458dc7]
  40b22b:	lds    eax,FWORD PTR [ebx-0xc]
  40b22e:	push   eax
  40b22f:	(bad)  
  40b230:	(bad)  
  40b231:	jmp    DWORD PTR [ebx+0x293dfb]
  40b237:	loope  0x40b237
  40b239:	push   DWORD PTR [ebx+0x66]
  40b23c:	dec    ebx
  40b23d:	inc    esp
  40b23e:	lock pusha 
  40b240:	add    DWORD PTR es:[edx+0x20],ebp
  40b244:	sub    DWORD PTR [eax],eax
  40b246:	push   0x20
  40b248:	sub    DWORD PTR [eax],eax
  40b24a:	lea    edx,[ebp-0x44]
  40b24d:	dec    esi
  40b24e:	jmp    ebp
  40b250:	cld    
  40b251:	sub    BYTE PTR [ecx-0x20],al
  40b254:	(bad)  
  40b255:	mov    esi,0x7b7fea74
  40b25a:	hlt    
  40b25b:	shl    BYTE PTR [edx],1
  40b25d:	xor    al,0x8b
  40b25f:	adc    eax,0xb04d8b00
  40b264:	test   DWORD PTR [edi],0x89bafa77
  40b26a:	jne    0x40b2b0
  40b26c:	dec    eax
  40b26d:	jl     0x40b277
  40b26f:	dec    ebx
  40b270:	or     dh,al
  40b272:	jecxz  0x40b216
  40b274:	scas   eax,DWORD PTR es:[edi]
  40b275:	mov    ds:0xff00558b,al
  40b27a:	jne    0x40b27c
  40b27c:	dec    esp
  40b27d:	(bad)  
  40b27e:	inc    BYTE PTR [ebp+0x39e3e6b2]
  40b284:	xchg   esi,eax
  40b285:	add    al,BYTE PTR [eax]
  40b287:	rcl    edi,1
  40b289:	add    al,BYTE PTR [eax]
  40b28b:	cmp    DWORD PTR [esi+0x16705e2b],ebx
  40b291:	sti    
  40b292:	jmp    DWORD PTR [ebx]
  40b294:	sbb    DWORD PTR [eax],ebp
  40b296:	pop    edi
  40b297:	mov    ecx,cr0
  40b29a:	pop    es
  40b29b:	add    BYTE PTR [ecx],bh
  40b29d:	mov    WORD PTR [edi-0x15],?
  40b2a0:	mov    edx,0x3967c324
  40b2a5:	mov    ecx,0x39610002
  40b2aa:	push   ecx
  40b2ab:	inc    DWORD PTR [esi+0x4f]
  40b2ae:	inc    esi
  40b2af:	cld    
  40b2b0:	rcr    eax,1
  40b2b2:	and    al,BYTE PTR [eax]
  40b2b4:	cmp    edi,edi
  40b2b6:	nop
  40b2b7:	jno    0x40b2e7
  40b2b9:	fstp   TBYTE PTR [eax+0x44]
  40b2bc:	and    DWORD PTR [eax],esi
  40b2be:	add    al,0x20
  40b2c0:	cmp    edi,edx
  40b2c2:	fisub  DWORD PTR [ebx+ecx*4+0x7488cab2]
  40b2c9:	mov    bl,0x5b
  40b2cb:	add    BYTE PTR [ecx-0x29],bl
  40b2ce:	add    ch,al
  40b2d0:	mov    eax,ds:0xc0fecb05
  40b2d5:	sbb    al,0xd4
  40b2d7:	addr16 cmp edi,esi
  40b2da:	add    eax,DWORD PTR [eax]
  40b2dc:	ror    DWORD PTR [esi+0x56],1
  40b2df:	(bad)  
  40b2e0:	ficom  WORD PTR [eax+0x41]
  40b2e3:	in     al,dx
  40b2e4:	popa   
  40b2e5:	xlat   BYTE PTR ds:[ebx]
  40b2e6:	and    al,BYTE PTR [eax]
  40b2e8:	cmp    DWORD PTR [edi+0x49],edi
  40b2eb:	jb     0x40b2b3
  40b2ed:	cmp    BYTE PTR [esp+eax*2-0x2f],0xef
  40b2f2:	add    esp,DWORD PTR [eax]
  40b2f4:	cmp    edi,edx
  40b2f6:	fidiv  DWORD PTR [eax+0x2b]
  40b2f9:	pop    edx
  40b2fa:	retf   
  40b2fb:	mov    ah,bh
  40b2fd:	dec    DWORD PTR [ebx+ecx*8+0x0]
  40b301:	and    eax,0xfbe8d0f0
  40b306:	ds jmp 0x410cb8d6
  40b30c:	jnp    0x40b308
  40b30e:	(bad)  
  40b30f:	call   0x3e3d2d9a
  40b314:	push   ecx
  40b315:	dec    ecx
  40b316:	pop    eax
  40b317:	stc    
  40b318:	inc    esi
  40b319:	clc    
  40b31a:	jmp    FWORD PTR ds:0xa4d86151
  40b320:	aas    
  40b321:	cmp    DWORD PTR [eax],eax
  40b323:	push   0xffffffc0
  40b325:	inc    edx
  40b326:	leave  
  40b327:	fwait
  40b328:	repz (bad) 
  40b32a:	inc    edx
  40b32b:	stos   BYTE PTR es:[edi],al
  40b32c:	inc    esp
  40b32d:	cmp    ecx,ecx
  40b32f:	jnp    0x40b300
  40b331:	push   esi
  40b332:	push   edi
  40b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b334:	add    edi,DWORD PTR [ecx]
  40b336:	jge    0x40b364
  40b338:	clc    
  40b339:	das    
  40b33a:	push   ebx
  40b33b:	fstp   DWORD PTR [ebx-0x63]
  40b33e:	cmp    eax,0x531e0428
  40b343:	(bad)  
  40b345:	ins    BYTE PTR es:[edi],dx
  40b346:	inc    esp
  40b347:	jmp    0xdd046d4f
  40b34c:	retf   0xf08d
  40b34f:	push   eax
  40b350:	push   ebx
  40b351:	jp     0x40b392
  40b353:	jmp    0xc11d2122
  40b358:	inc    esi
  40b359:	jne    0x40b35b
  40b35b:	jmp    0xa63cade6
  40b360:	push   eax
  40b361:	sub    eax,0x466c58
  40b366:	js     0x40b368
  40b368:	xchg   esi,eax
  40b369:	push   eax
  40b36a:	loope  0x40b343
  40b36c:	fdivr  DWORD PTR [edi]
  40b36e:	cmp    DWORD PTR [eax],eax
  40b370:	push   0xffffffbf
  40b372:	xor    cl,cl
  40b374:	repz repz push ds
  40b377:	jmp    FWORD PTR [bx+di]
  40b37a:	hlt    
  40b37b:	(bad)  
  40b37c:	(bad)  
  40b37d:	hlt    
  40b37e:	xchg   al,ah
  40b380:	sbb    al,0xad
  40b382:	cmp    al,BYTE PTR [eax]
  40b384:	and    DWORD PTR ds:0x5600568e,0xffffffe9
  40b38b:	retf   
  40b38c:	(bad)  
  40b38d:	aam    0x8e
  40b38f:	leave  
  40b390:	xor    al,0xa5
  40b392:	sbb    eax,0xab51003f
  40b397:	dec    esp
  40b398:	push   DWORD PTR [esi]
  40b39a:	in     eax,dx
  40b39b:	inc    ebx
  40b39c:	loopne 0x40b361
  40b39e:	cmp    cl,cl
  40b3a0:	je     0x40b3c3
  40b3a2:	jae    0x40b3f7
  40b3a4:	or     al,0x1e
  40b3a6:	sub    DWORD PTR [ecx+ebp*1],ebp
  40b3a9:	test   al,0x3a
  40b3ab:	fadd   st,st(0)
  40b3ad:	xchg   ebp,eax
  40b3ae:	jae    0x40b379
  40b3b0:	mov    BYTE PTR [esi+edx*4-0x7901ffaa],ch
  40b3b7:	int3   
  40b3b8:	(bad)  
  40b3b9:	jl     0x40b3e1
  40b3bb:	(bad)  
  40b3bc:	xor    al,0x8d
  40b3be:	inc    ebp
  40b3bf:	inc    ecx
  40b3c0:	add    cl,dl
  40b3c2:	mov    esp,0x92deff53
  40b3c7:	cmp    al,0xd8
  40b3c9:	inc    ebx
  40b3ca:	add    BYTE PTR ds:0xf0d974c7,dh
  40b3d0:	dec    esp
  40b3d1:	call   0x2964e29c
  40b3d6:	sub    BYTE PTR ds:0x3d94d8,bh
  40b3dc:	(bad)  
  40b3dd:	mov    BYTE PTR [ecx+ebp*4],ah
  40b3e0:	pop    ecx
  40b3e1:	add    BYTE PTR [esi+0x14fed46e],ah
  40b3e7:	cmc    
  40b3e8:	(bad)  
  40b3e9:	xor    al,0x35
  40b3eb:	xor    al,BYTE PTR [ecx+0x0]
  40b3ee:	xor    DWORD PTR [eax+0x4c],0x4bb700ff
  40b3f5:	inc    esp
  40b3f6:	shl    BYTE PTR ds:0x2750c007,1
  40b3fc:	aaa    
  40b3fd:	in     al,0xff
  40b3ff:	lods   eax,DWORD PTR ds:[esi]
  40b400:	iret   
  40b401:	std    
  40b402:	xor    eax,0x40ea74
  40b407:	call   0xe840286c
  40b40c:	dec    edx
  40b40d:	inc    esp
  40b40e:	int3   
  40b40f:	adc    edi,DWORD PTR [edi]
  40b411:	loopne 0x40b413
  40b413:	xchg   DWORD PTR [edi-0x4a],eax
  40b416:	add    BYTE PTR [eax+0x3],ah
  40b419:	cmp    DWORD PTR [ebp+0x4c],0xfffffffc
  40b41d:	push   cs
  40b41e:	test   ch,ah
  40b420:	sti    
  40b421:	(bad)  
  40b422:	call   ebx
  40b424:	rol    BYTE PTR ds:[eax],1
  40b427:	addr16 inc edi
  40b429:	mov    ds:0x8d036000,al
  40b42e:	inc    ebp
  40b42f:	add    BYTE PTR [esp+ecx*1],bl
  40b432:	push   DWORD PTR [ebp+0x1c]
  40b435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b436:	dec    esi
  40b437:	std    
  40b438:	aaa    
  40b439:	mov    eax,0x4717c009
  40b43e:	mov    es,WORD PTR [eax]
  40b440:	adc    BYTE PTR [ebx],al
  40b442:	cmp    DWORD PTR [ebp-0x34],0x2
  40b446:	je     0x40b7e9
  40b44c:	xchg   ebp,eax
  40b44d:	push   es
  40b44e:	enter  0xf750,0x35
  40b452:	shr    al,1
  40b454:	add    bh,BYTE PTR [esi-0x3d140003]
  40b45a:	jb     0x40b4d1
  40b45c:	arpl   WORD PTR [esi],di
  40b45e:	enter  0x2c00,0x29
  40b462:	push   0xbca7d010
  40b467:	jmp    FWORD PTR ds:0x3976e6c4
  40b46d:	cld    
  40b46e:	enter  0xc6fe,0xeb
  40b472:	jecxz  0x40b472
  40b474:	inc    esp
  40b475:	rcr    edx,1
  40b477:	int3   
  40b478:	and    al,0x46
  40b47a:	enter  0x24fe,0x6d
  40b47e:	(bad)  
  40b47f:	je     0x40b4b2
  40b481:	add    esp,0xc85d9e6c
  40b487:	je     0x40b4fa
  40b489:	and    eax,0x65a1084e
  40b48e:	push   ebp
  40b48f:	inc    DWORD PTR [esi+0xc44e35]
  40b495:	jle    0x40b41a
  40b497:	scas   al,BYTE PTR es:[edi]
  40b498:	(bad)  
  40b499:	in     al,dx
  40b49a:	rcr    dl,1
  40b49c:	jl     0x40b47a
  40b49e:	or     eax,0x20ecfec8
  40b4a3:	enter  0x8974,0x1d
  40b4a7:	dec    esi
  40b4a8:	or     BYTE PTR [ecx+0x75],ah
  40b4ab:	push   ebp
  40b4ac:	dec    DWORD PTR [esi+0x59]
  40b4af:	inc    esi
  40b4b0:	int3   
  40b4b1:	cmp    DWORD PTR [ebp-0x13],ebp
  40b4b4:	cmp    BYTE PTR [eax+ebx*1+0x524674ff],0x3e
  40b4bc:	int3   
  40b4bd:	cs mov bh,al
  40b4c0:	je     0x40b4f3
  40b4c2:	jmp    DWORD PTR [edx]
  40b4c4:	ins    DWORD PTR es:[edi],dx
  40b4c5:	push   ds
  40b4c6:	(bad)  
  40b4c8:	or     DWORD PTR [ebx+0x4174c5d7],esp
  40b4ce:	mov    edi,0xb7066cef
  40b4d3:	(bad)  
  40b4d4:	je     0x40b4d3
  40b4d6:	scas   eax,DWORD PTR es:[edi]
  40b4d7:	sub    BYTE PTR [edi-0xa],0x86
  40b4db:	(bad)  
  40b4dc:	je     0x40b4cf
  40b4de:	mov    edi,0x96e6704a
  40b4e3:	(bad)  
  40b4e4:	je     0x40b4cb
  40b4e6:	add    BYTE PTR [ecx-0x623ab6ad],dl
  40b4ec:	mov    DWORD PTR [ebp-0x30],0xc5495b80
  40b4f3:	(bad)  
  40b4f4:	mov    DWORD PTR [ebp-0x2c],0x29006390
  40b4fb:	lds    edi,FWORD PTR [ebp-0x39]
  40b4fe:	and    eax,0x292b80d8
  40b503:	lds    ebp,FWORD PTR [ebp-0x39]
  40b506:	and    eax,0x93350dc
  40b50b:	lds    ebx,FWORD PTR [ebp-0x39]
  40b50e:	add    eax,0x93b40e0
  40b513:	lds    ecx,FWORD PTR [ebp-0x39]
  40b516:	add    eax,0xe94350a4
  40b51b:	les    edi,FWORD PTR ds:0x40a7e5c7
  40b521:	or     ebp,ecx
  40b523:	les    ebp,FWORD PTR ds:0x10abe5c7
  40b529:	adc    ecx,ecx
  40b52b:	les    ebx,FWORD PTR ds:0xafc5c7
  40b531:	sbb    ecx,ecx
  40b533:	les    ecx,FWORD PTR ds:0x10b3c5c7
  40b539:	and    ebp,DWORD PTR [ecx-0x743023b]
  40b53f:	repz call 0x68146775
  40b545:	rcl    BYTE PTR [esi],0xcd
  40b548:	in     eax,0xc6
  40b54a:	lds    edi,FWORD PTR [edx]
  40b54c:	fnsave [ebx]
  40b54e:	push   cs
  40b54f:	dec    ebx
  40b550:	in     eax,0xc6
  40b552:	dec    ebp
  40b553:	and    al,0x0
  40b555:	inc    ebp
  40b556:	cmp    eax,ebx
  40b558:	dec    esp
  40b559:	inc    edx
  40b55a:	cmp    DWORD PTR [eax],eax
  40b55c:	bnd ret 
  40b55e:	add    BYTE PTR [edi],bh
  40b560:	jnp    0x40b561
  40b562:	fdivr  QWORD PTR ds:0x79a60000
  40b568:	enter  0xe8ff,0x3a
  40b56c:	add    bh,al
  40b56e:	and    al,0xe9
  40b570:	lds    eax,FWORD PTR [esi]
  40b572:	jmp    0x3410fb1
  40b577:	xor    eax,0x3d13005a
  40b57c:	jae    0x40b5c2
  40b57e:	jne    0x40b5ea
  40b580:	jae    0x40b506
  40b582:	jns    0x40b5fb
  40b584:	(bad)  
  40b587:	jbe    0x40b5d4
  40b589:	clc    
  40b58a:	jmpw   0x9d51
  40b58e:	pop    ss
  40b58f:	sti    
  40b590:	(bad)  
  40b591:	jmp    ecx
  40b593:	jp     0x40b5e5
  40b595:	add    eax,0xfec4cf40
  40b59a:	jmp    0xa86868b1
  40b59f:	cmp    al,ch
  40b5a1:	je     0x40b588
  40b5a3:	and    BYTE PTR [edi],0x73
  40b5a6:	cs ja  0x40b5dd
  40b5a9:	mov    edi,DWORD PTR [ecx]
  40b5ab:	sar    DWORD PTR [ebx-0x11],1
  40b5ae:	push   ss
  40b5af:	ja     0x40b576
  40b5b1:	dec    edi
  40b5b2:	mov    ebx,0xe733762
  40b5b7:	ja     0x40b630
  40b5b9:	test   BYTE PTR [ecx],dl
  40b5bb:	pop    es
  40b5bc:	ret    
  40b5bd:	(bad)  
  40b5be:	adc    DWORD PTR [edi+0xf6ff52],edx
  40b5c4:	scas   al,BYTE PTR es:[edi]
  40b5c5:	cmp    al,0xf0
  40b5c7:	cdq    
  40b5c8:	xor    cl,0x42
  40b5cb:	sub    BYTE PTR ds:0xfcd1b4c3,bh
  40b5d1:	ret    0xd6fe
  40b5d4:	ss and al,0x29
  40b5d7:	sub    BYTE PTR ds:0x32009cd8,dh
  40b5dd:	mov    ebp,0xa85589fd
  40b5e2:	cmc    
  40b5e3:	jmp    FWORD PTR [edi-0x5813447f]
  40b5e9:	mov    ebp,0x163400fd
  40b5ee:	cmp    DWORD PTR [ebp-0x50],0x0
  40b5f2:	jne    0x40b63d
  40b5f4:	pop    ebx
  40b5f5:	inc    ebx
  40b5f6:	jmp    0x40b5ef
  40b5f8:	scas   eax,DWORD PTR es:[edi]
  40b5f9:	mov    ebp,0x432f30fd
  40b5fe:	jmp    0x40b5f7
  40b600:	das    
  40b601:	mov    ebp,0xb5bcbd7f
  40b606:	std    
  40b607:	(bad)  
  40b608:	mov    eax,0x76000001
  40b60d:	leave  
  40b60e:	lds    eax,FWORD PTR [ebp-0x24b04]
  40b614:	clc    
  40b615:	add    BYTE PTR [eax],al
  40b617:	add    bl,bh
  40b619:	aad    0xfd
  40b61b:	lea    ecx,[esi*4+0x732ffffd]
  40b622:	jmp    0xb5:0xfdbd2ff7
  40b629:	clc    
  40b62a:	mov    ah,0xfd
  40b62c:	call   FWORD PTR [edi]
  40b62e:	xor    ecx,DWORD PTR [eax]
  40b630:	call   0x3e71cd
  40b635:	sar    DWORD PTR [edx-0x16],cl
  40b638:	imul   DWORD PTR [edi]
  40b63a:	mov    ebp,0xbd5d74fe
  40b63f:	mov    bl,0xec
  40b641:	daa    
  40b642:	mov    esp,0x2c0ce8fd
  40b647:	(bad)  
  40b648:	dec    DWORD PTR [edi]
  40b64a:	jb     0x40b636
  40b64c:	neg    DWORD PTR [edi]
  40b64e:	mov    esp,0xbd7f11e6
  40b653:	std    
  40b654:	(bad)  
  40b655:	cmp    DWORD PTR [edx+ebx*8-0xa],esp
  40b659:	(bad)  
  40b65a:	mov    cl,0xc3
  40b65c:	je     0x40b69f
  40b65e:	mov    cl,0xde
  40b660:	std    
  40b661:	out    dx,al
  40b662:	add    ebx,0xc381d1b4
  40b668:	(bad)  
  40b669:	rcl    DWORD PTR [eax-0x662900ac],1
  40b66f:	cmp    eax,0xc49de0f8
  40b674:	inc    dh
  40b676:	imul   ecx,DWORD PTR [ebp-0x4],0x4316d1
  40b67d:	cmp    DWORD PTR [eax-0x13c6f840],edx
  40b683:	js     0x40b670
  40b685:	mov    edx,0x3969c694
  40b68a:	call   DWORD PTR [ebx]
  40b68c:	inc    DWORD PTR [eax]
  40b68e:	or     al,0xd1
  40b690:	fimul  DWORD PTR [ecx]
  40b692:	sbb    eax,0xfc88c422
  40b697:	sub    al,0x5b
  40b699:	sti    
  40b69a:	sti    
  40b69b:	xchg   edi,eax
  40b69c:	add    bh,bh
  40b69e:	in     al,dx
  40b69f:	rcr    dl,1
  40b6a1:	mov    ds:0xfec4016f,al
  40b6a6:	in     al,dx
  40b6a7:	or     al,0xc4
  40b6a9:	je     0x40b6dc
  40b6ab:	inc    ecx
  40b6ac:	push   cs
  40b6ad:	ins    BYTE PTR es:[edi],dx
  40b6ae:	push   esi
  40b6af:	sbb    DWORD PTR [edx+0x2dd935c1],edi
  40b6b5:	mov    edx,DWORD PTR [ebp+0x55]
  40b6b8:	mov    edi,0x5889e7fb
  40b6bd:	add    BYTE PTR [ebx+0x4174c388],ah
  40b6c3:	out    dx,eax
  40b6c4:	stos   DWORD PTR es:[edi],eax
  40b6c5:	push   0x26
  40b6c7:	retf   
  40b6c8:	js     0x40b70e
  40b6ca:	sbb    eax,0x61750e5f
  40b6cf:	add    BYTE PTR [eax],ch
  40b6d1:	add    al,0xc2
  40b6d3:	add    esp,DWORD PTR [eax-0x14]
  40b6d6:	jns    0x40b6d8
  40b6d8:	imul   eax,DWORD PTR [ebx],0x2c244c39
  40b6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6df:	cmp    eax,0xd8860428
  40b6e4:	fadd   QWORD PTR [ecx+edi*1+0x0]
  40b6e8:	loop   0x40b6ad
  40b6ea:	push   0xffffffe1
  40b6ec:	push   ss
  40b6ed:	lods   al,BYTE PTR ds:[esi]
  40b6ee:	pop    ss
  40b6ef:	dec    eax
  40b6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f1:	ret    
  40b6f2:	add    BYTE PTR [esi+0x58],bh
  40b6f5:	jmp    0xc38cfd
  40b6fa:	jp     0x40b777
  40b6fc:	aas    
  40b6fd:	jmp    0xf18c6d55
  40b702:	stos   DWORD PTR es:[edi],eax
  40b703:	imul   ebp,DWORD PTR [ebp+0x7d],0x7239ec3
  40b70a:	ret    
  40b70b:	lahf   
  40b70c:	aad    0xe7
  40b70e:	dec    ecx
  40b70f:	mov    ecx,0x9338e902
  40b714:	cmp    bl,BYTE PTR [ebp-0x9]
  40b717:	mov    BYTE PTR [edi-0x3e803cab],0x5a
  40b71e:	jb     0x40b74e
  40b720:	stc    
  40b721:	mov    ebx,0x3d4b6f7e
  40b726:	ret    
  40b727:	in     eax,dx
  40b728:	test   DWORD PTR [eax+0x7d],0x632dc0d3
  40b72f:	div    DWORD PTR [esi+0x2b39082a]
  40b735:	jb     0x40b6e7
  40b737:	mov    ebx,0x765710bc
  40b73c:	cmp    edx,DWORD PTR [ecx]
  40b73e:	add    al,0x39
  40b740:	add    cl,ch
  40b742:	retf   0xc475
  40b745:	call   0x40f04d
  40b74a:	bound  esi,QWORD PTR [eax-0xc]
  40b74d:	xor    BYTE PTR [ecx+0x12094b3a],0xf5
  40b754:	adc    eax,0xf40042d2
  40b759:	mov    esi,0x7fe90b
  40b75e:	add    cl,ch
  40b760:	cmp    dl,ch
  40b762:	pusha  
  40b763:	push   0x79
  40b765:	lock push DWORD PTR [eax+esi*1]
  40b769:	jne    0x40b7af
  40b76b:	fldcw  WORD PTR [ebp+0x2934fee8]
  40b771:	shl    DWORD PTR [ecx+esi*8-0x5e],0xb1
  40b776:	addr16 sahf 
  40b778:	sti    
  40b779:	jge    0x40b775
  40b77b:	loopne 0x40b77e
  40b77d:	sti    
  40b77e:	or     BYTE PTR [esi*8-0x5fe6ba2b],ah
  40b785:	inc    ecx
  40b786:	(bad)  
  40b787:	jle    0x40b804
  40b789:	test   DWORD PTR [ecx+esi*2+0x2],0x3ae97f97
  40b791:	add    BYTE PTR [ebp-0x15],dh
  40b794:	fisttp WORD PTR ds:0x4b326283
  40b79a:	adc    eax,0x8ac7f162
  40b79f:	mov    ah,0xb6
  40b7a1:	icebp  
  40b7a2:	mov    ds:0xdfbf422b,eax
  40b7a7:	icebp  
  40b7a8:	mov    ch,0x3b
  40b7aa:	clc    
  40b7ab:	pusha  
  40b7ac:	add    esp,eax
  40b7ae:	jmp    0xf172:0xf83bc7da
  40b7b5:	ret    
  40b7b6:	push   cs
  40b7b7:	inc    ebp
  40b7b8:	jl     0x40b7b3
  40b7ba:	ror    BYTE PTR [ecx],0x0
  40b7bd:	xor    esi,DWORD PTR [edi+0x44]
  40b7c0:	adc    ebp,eax
  40b7c2:	push   esp
  40b7c3:	cld    
  40b7c4:	add    bl,ah
  40b7c6:	xchg   cl,bh
  40b7c8:	or     DWORD PTR [esi+0x1445899d],ebp
  40b7ce:	xchg   DWORD PTR [esi],esi
  40b7d0:	add    BYTE PTR [ebp+0x2bc02b09],cl
  40b7d6:	(bad)  
  40b7d7:	jmp    0xf88842e2
  40b7dc:	mov    edi,DWORD PTR ds:0xa2c959c0
  40b7e2:	adc    BYTE PTR [eax],al
  40b7e4:	push   ebp
  40b7e5:	imul   esi,DWORD PTR [eax-0x7f],0xffffffc4
  40b7e9:	lods   al,BYTE PTR ds:[esi]
  40b7ea:	and    esi,DWORD PTR [ebx+0x39041166]
  40b7f0:	inc    ebp
  40b7f1:	hlt    
  40b7f2:	stc    
  40b7f3:	add    eax,0xc0cba02b
  40b7f8:	adc    al,dl
  40b7fa:	shl    BYTE PTR [ebx],0xb4
  40b7fd:	cs inc ebx
  40b7ff:	add    al,ch
  40b801:	inc    edi
  40b802:	out    dx,eax
  40b803:	(bad)  
  40b804:	jmp    FWORD PTR [ecx]
  40b806:	inc    edi
  40b807:	clc    
  40b808:	lea    ebx,[ebp-0x40]
  40b80b:	dec    esi
  40b80c:	call   0x3fa005
  40b811:	daa    
  40b812:	not    DWORD PTR [ebx]
  40b814:	jmp    FWORD PTR [ebp+0xf]
  40b817:	push   DWORD PTR [ebp+0x18]
  40b81a:	shl    DWORD PTR [ebx+0x8],0xf8
  40b81e:	sub    ah,BYTE PTR [esi-0x1]
  40b821:	add    BYTE PTR [edi],al
  40b823:	or     eax,0x29dc0fc0
  40b828:	(bad)  
  40b829:	call   DWORD PTR [eax-0x40]
  40b82c:	jae    0x40b83a
  40b82e:	daa    
  40b82f:	div    edi
  40b831:	dec    DWORD PTR [ebp-0x42061981]
  40b837:	sar    ch,0x8b
  40b83a:	popf   
  40b83b:	(bad)  
  40b83d:	inc    ebp
  40b83e:	cmp    DWORD PTR [ecx-0x57227cf1],edi
  40b844:	add    al,BYTE PTR [eax]
  40b846:	cs cmp al,0x17
  40b849:	jmp    FWORD PTR [ecx+esi*4-0x49695e56]
  40b850:	mov    edi,0xabb57c88
  40b855:	jae    0x40b865
  40b857:	hlt    
  40b858:	mov    bh,0x2a
  40b85a:	jmp    0x40b88d
  40b85c:	inc    esi
  40b85d:	hlt    
  40b85e:	push   es
  40b85f:	or     al,0x78
  40b861:	gs js  0x40b80d
  40b864:	or     edx,edx
  40b866:	gs stos DWORD PTR es:[edi],eax
  40b868:	stos   DWORD PTR es:[edi],eax
  40b869:	addr16 push ebx
  40b86b:	test   eax,0xa164ff52
  40b870:	stos   BYTE PTR es:[edi],al
  40b871:	mov    BYTE PTR [ebp+0x6e],bl
  40b874:	mov    edi,0xbfbd44fe
  40b879:	je     0x40b8ac
  40b87b:	xchg   ecx,eax
  40b87c:	xor    esp,DWORD PTR [edi-0x42]
  40b87f:	xchg   ebp,eax
  40b880:	mov    edx,DWORD PTR [ebp+ecx*2+0x2a]
  40b884:	std    
  40b885:	inc    DWORD PTR [eax]
  40b887:	and    eax,0xb047abab
  40b88c:	jecxz  0x40b845
  40b88e:	mov    ch,BYTE PTR [edi*8+0x2a394128]
  40b895:	stos   BYTE PTR es:[edi],al
  40b896:	add    ebp,eax
  40b898:	and    eax,0x5de81436
  40b89d:	ss clc 
  40b89f:	jle    0x40b87c
  40b8a1:	or     ch,al
  40b8a3:	push   ds
  40b8a4:	(bad)  
  40b8a5:	mov    edi,0xc2b210fe
  40b8aa:	je     0x40b8e7
  40b8ac:	push   edx
  40b8ad:	out    0x50,al
  40b8af:	pop    esi
  40b8b0:	jnp    0x40b86c
  40b8b2:	dec    ah
  40b8b4:	in     al,dx
  40b8b5:	stos   BYTE PTR es:[edi],al
  40b8b6:	jns    0x40b88c
  40b8b8:	jmp    DWORD PTR ds:0x1d3447c0
  40b8be:	stos   DWORD PTR es:[edi],eax
  40b8bf:	retf   0x1623
  40b8c2:	shl    BYTE PTR [ebp+0x0],0xe9
  40b8c6:	inc    ebx
  40b8c7:	aaa    
  40b8c8:	ss jmp 0x40b877
  40b8cb:	cmp    DWORD PTR ds:[ebx-0x49],0xac6f351e
  40b8d3:	cs mov ebp,0x316bf73
  40b8d9:	dec    ebp
  40b8da:	mov    edi,0xc023c607
  40b8df:	(bad)  
  40b8e0:	mov    ebp,0x43c203e8
  40b8e5:	cmc    
  40b8e6:	(bad)  
  40b8e7:	out    dx,al
  40b8e8:	mov    ebp,0x390003e8
  40b8ed:	mov    ebp,0x3bd6bc33
  40b8f2:	inc    ebp
  40b8f3:	mov    edi,0xc02389d7
  40b8f8:	add    ebx,eax
  40b8fa:	clc    
  40b8fb:	add    ebp,DWORD PTR [ecx+ecx*4-0x74]
  40b8ff:	push   edi
  40b900:	mov    dl,0x43
  40b902:	in     eax,0x82
  40b904:	test   BYTE PTR [eax],0x39
  40b907:	lods   al,BYTE PTR ds:[esi]
  40b908:	sub    eax,0xb3bf862c
  40b90d:	mov    eax,0x8d2d397d
  40b912:	in     eax,dx
  40b913:	mov    esi,0x475e100d
  40b918:	xor    eax,0x390fe381
  40b91d:	xor    al,0xee
  40b91f:	mov    esi,0x47640c05
  40b924:	inc    ecx
  40b925:	push   eax
  40b926:	dec    esi
  40b927:	cmp    DWORD PTR [ecx-0x58],eax
  40b92a:	pop    edx
  40b92b:	xor    BYTE PTR [esi-0x43],ah
  40b92e:	jno    0x40b979
  40b930:	inc    ebp
  40b931:	xchg   edi,edi
  40b933:	lock sar bh,cl
  40b936:	(bad)  
  40b937:	call   0x2c0a1676
  40b93c:	sub    eax,0x89725500
  40b941:	add    bl,0x1d
  40b944:	ret    0x1453
  40b947:	cmp    eax,DWORD PTR es:[eax]
  40b94a:	add    cl,ch
  40b94c:	cmp    ch,cl
  40b94e:	shl    esi,1
  40b950:	add    BYTE PTR [ecx+0xc],dh
  40b953:	add    ecx,ebp
  40b955:	cmp    al,BYTE PTR [eax]
  40b957:	andnps xmm7,xmm3
  40b95a:	cmp    DWORD PTR [ebp+esi*8+0x3a],0x41de1333
  40b962:	adc    al,0x6a
  40b964:	jmp    0x8ca2:0xe96a0020
  40b96b:	inc    dh
  40b96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96f:	sub    bl,ch
  40b971:	cmp    al,BYTE PTR [eax]
  40b973:	xor    DWORD PTR [ecx+ebp*1],0xffffffff
  40b977:	je     0x40b983
  40b979:	mov    ?,WORD PTR [ebx]
  40b97b:	adc    BYTE PTR [esi-0x5317f7ff],ah
  40b981:	adc    al,0xbd
  40b983:	(bad)  
  40b984:	pusha  
  40b985:	add    DWORD PTR [esi+edi*8+0x2a5114],edi
  40b98c:	adc    esi,DWORD PTR [ecx]
  40b98e:	mov    eax,DWORD PTR [ebp+edi*2+0xa]
  40b992:	test   al,0x66
  40b994:	jbe    0x40b96d
  40b996:	mov    ebp,0x38e9e8
  40b99b:	add    BYTE PTR [edx-0x7],ch
  40b99e:	or     eax,DWORD PTR [edx]
  40b9a0:	aam    0x9b
  40b9a2:	mov    ebp,0x33b7f974
  40b9a7:	or     BYTE PTR [ecx+0x27],al
  40b9aa:	inc    DWORD PTR es:[eax]
  40b9ad:	dec    DWORD PTR [ebx-0x7e003bd]
  40b9b3:	adc    ebp,DWORD PTR [edx+0x0]
  40b9b6:	pusha  
  40b9b7:	out    0x3,al
  40b9b9:	lea    edx,[ebp+0x5ee84e7c]
  40b9bf:	jge    0x40b9be
  40b9c1:	jmp    FWORD PTR [ecx]
  40b9c3:	(bad)  
  40b9c4:	(bad)  
  40b9c5:	jmp    DWORD PTR [eax]
  40b9c7:	jg     0x40ba44
  40b9c9:	or     al,0x23
  40b9cb:	stc    
  40b9cc:	pop    ds
  40b9cd:	jmp    DWORD PTR [ebp+0x1f036a0f]
  40b9d3:	hlt    
  40b9d4:	pop    es
  40b9d5:	call   0x3f9f5e
  40b9da:	pop    ds
  40b9db:	hlt    
  40b9dc:	adc    ebp,DWORD PTR [edx+0x13]
  40b9df:	jmp    0xff16:0x681069ff
  40b9e6:	movd   edi,mm4
  40b9e9:	mov    cl,0xe1
  40b9eb:	(bad)  
  40b9ec:	inc    DWORD PTR [edx+0x7504107d]
  40b9f2:	xor    edi,DWORD PTR [ebp+0x73]
  40b9f5:	adc    BYTE PTR [edi-0x6317f80d],cl
  40b9fb:	jecxz  0x40b9fb
  40b9fd:	dec    DWORD PTR [ecx+0x43]
  40ba00:	cld    
  40ba01:	jmp    DWORD PTR ds:0x3a006a18
  40ba07:	or     BYTE PTR [ebp-0x17ab43bb],cl
  40ba0d:	out    dx,eax
  40ba0e:	mov    esi,0x28e9fd7d
  40ba13:	(bad)  
  40ba14:	(bad)  
  40ba15:	jmp    DWORD PTR [ebx]
  40ba17:	sti    
  40ba18:	or     eax,DWORD PTR ds:0xff148500
  40ba1e:	jne    0x40b9a0
  40ba20:	jmp    0x7a6b92a
  40ba25:	call   0xbc0bf37f
  40ba2a:	(bad)  
  40ba2b:	mov    cl,0xa8
  40ba2d:	add    al,BYTE PTR [eax]
  40ba2f:	cmp    DWORD PTR [eax+0x29],edx
  40ba32:	add    DWORD PTR [ecx],edi
  40ba34:	test   eax,0xab457c7f
  40ba39:	xor    eax,0x12744e20
  40ba3e:	push   0x31
  40ba40:	loop   0x40ba78
  40ba42:	or     BYTE PTR [ecx-0x5f],dl
  40ba45:	and    al,0xff
  40ba47:	adc    dh,BYTE PTR ss:[edi]
  40ba4a:	adc    al,0xa3
  40ba4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba4d:	sub    BYTE PTR [eax],al
  40ba4f:	xchg   ebx,eax
  40ba50:	test   eax,0xba1fabaa
  40ba55:	mov    ebx,0x2a87ce8
  40ba5a:	add    BYTE PTR [edx-0x73f8f0d5],bh
  40ba60:	or     DWORD PTR [ebp+0xc4f2974],edi
  40ba66:	jmp    FWORD PTR [ecx+eiz*4-0x56]
  40ba6a:	adc    DWORD PTR [edi-0x36],edx
  40ba6d:	mov    ebx,0x28dd6cfe
  40ba72:	add    edx,DWORD PTR [ebx-0x57]
  40ba75:	sub    BYTE PTR [eax],al
  40ba77:	loope  0x40baa3
  40ba79:	mov    ebp,0x1bbfcefe
  40ba7e:	add    DWORD PTR [eax],eax
  40ba80:	cmp    DWORD PTR [ecx-0x4ed28381],ebp
  40ba86:	xor    eax,0xbfeb7e1c
  40ba8b:	jmp    FWORD PTR [esi+0x2cff02a8]
  40ba91:	(bad)  [eax]
  40ba93:	add    BYTE PTR [ebx],dl
  40ba95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba96:	lea    eax,[ebp+edx*4+0x18]
  40ba9a:	lods   al,BYTE PTR ds:[esi]
  40ba9b:	arpl   WORD PTR [edi-0x7b1743d7],cx
  40baa1:	(bad)  
  40baa2:	call   0xdbbff3aa
  40baa7:	cmovo  esi,DWORD PTR ds:0xbbf5c4f5
  40baae:	out    0x3,eax
  40bab0:	cmp    DWORD PTR [eax],eax
  40bab2:	inc    esi
  40bab3:	ss inc ebp
  40bab5:	es jmp 0xabcdf7e4
  40babb:	mov    edi,0xbdaaa7fe
  40bac0:	inc    edi
  40bac1:	mov    edx,0xba3ed80f
  40bac6:	call   0xe34d704b
  40bacb:	ss inc ebx
  40bacd:	js     0x40bab7
  40bacf:	add    edi,DWORD PTR [ecx]
  40bad1:	add    BYTE PTR [eax],dl
  40bad3:	enter  0xba1e,0xe8
  40bad7:	adc    BYTE PTR [ebp+0x4336e20c],0x78
  40bade:	call   0xd040f3e6
  40bae3:	jg     0x40bae5
  40bae5:	(bad)  
  40bae6:	mov    ecx,0xc7586e8
  40baeb:	in     eax,0x35
  40baed:	test   BYTE PTR ds:0x7f8830bb,al
  40baf3:	inc    ebx
  40baf4:	or     BYTE PTR [ecx],bh
  40baf6:	add    BYTE PTR [ecx],ch
  40baf8:	add    cl,BYTE PTR [edx+0x48]
  40bafb:	mov    dh,0x31
  40bafd:	cmp    eax,0xbbb02389
  40bb02:	sub    ebx,DWORD PTR [ebp-0x6ad417f8]
  40bb08:	mov    ebx,0x8680b42d
  40bb0d:	and    BYTE PTR [ecx-0x48027273],bh
  40bb13:	test   DWORD PTR [ecx],esi
  40bb15:	dec    ecx
  40bb16:	mov    ecx,0x3397aff3
  40bb1b:	add    BYTE PTR [ecx-0x2e],dh
  40bb1e:	xor    al,0x8
  40bb20:	or     DWORD PTR [eax],0xc266ff1d
  40bb26:	xor    al,0x14
  40bb28:	sar    DWORD PTR [ecx+edi*4],cl
  40bb2b:	je     0x40bb8a
  40bb2d:	mov    dl,0x34
  40bb2f:	clc    
  40bb30:	inc    ecx
  40bb31:	mov    WORD PTR [esi+edi*8-0x7cb5dba],?
  40bb38:	push   ecx
  40bb39:	push   edx
  40bb3a:	daa    
  40bb3b:	push   DWORD PTR [esi]
  40bb3d:	int    0xff
  40bb3f:	(bad)  
  40bb40:	call   0x6aa0607f
  40bb45:	add    BYTE PTR [ecx*1+0x589009b],cl
  40bb4c:	rcr    BYTE PTR [ebp+eax*4+0x3add7c7f],cl
  40bb53:	add    BYTE PTR [eax-0x11],al
  40bb56:	addr16 dec eax
  40bb58:	push   DWORD PTR [esi+edi*1-0x77]
  40bb5c:	inc    esp
  40bb5d:	std    
  40bb5e:	mov    bh,0x2b
  40bb60:	hlt    
  40bb61:	fsub   st(5),st
  40bb63:	sub    esi,esp
  40bb65:	out    0x49,al
  40bb67:	mov    ah,0xe7
  40bb69:	push   es
  40bb6a:	daa    
  40bb6b:	mov    ecx,0xb87960fe
  40bb70:	(bad)  
  40bb71:	push   esp
  40bb72:	dec    ebp
  40bb73:	mov    ecx,0x33a3bd74
  40bb78:	clc    
  40bb79:	mov    esi,0x13e80809
  40bb7e:	sbb    DWORD PTR [ecx+0x1409aefe],edi
  40bb84:	push   0xffffffe8
  40bb86:	xor    DWORD PTR [ebx],0xfffffff4
  40bb89:	sahf   
  40bb8a:	imul   edi,DWORD PTR [eax-0x460fe019],0xb8698efe
  40bb94:	out    0x0,eax
  40bb96:	lods   al,BYTE PTR ds:[esi]
  40bb97:	jmp    0x40bb97
  40bb99:	(bad)  
  40bb9a:	clc    
  40bb9b:	add    eax,DWORD PTR [eax]
  40bb9d:	add    BYTE PTR [eax-0x6f47fc97],ah
  40bba3:	cld    
  40bba4:	(bad)  
  40bba5:	dec    DWORD PTR [ecx-0x3d]
  40bba8:	push   cs
  40bba9:	add    BYTE PTR [ebp+0x56ea89],ch
  40bbaf:	jecxz  0x40bba8
  40bbb1:	pop    es
  40bbb2:	add    BYTE PTR [ebp+0x12c95dff],cl
  40bbb8:	mov    ecx,0x48d8afe
  40bbbd:	jmp    0x40bbc9
  40bbbf:	pop    es
  40bbc0:	scas   eax,DWORD PTR es:[edi]
  40bbc1:	out    0xb9,al
  40bbc3:	jns    0x40bc3a
  40bbc5:	std    
  40bbc6:	or     DWORD PTR [esi],0xffffffb9
  40bbc9:	cmp    DWORD PTR [esi],0xfff0f120
  40bbcf:	int    0xb
  40bbd1:	call   0xfdbb757f
  40bbd6:	pop    esi
  40bbd7:	imul   edi,DWORD PTR [ebp-0x7952fffe],0xbdd8bea
  40bbe1:	mov    edx,DWORD PTR [ebp-0x1c]
  40bbe4:	xchg   BYTE PTR [edx],al
  40bbe6:	nop
  40bbe7:	xchg   ebx,eax
  40bbe8:	out    dx,eax
  40bbe9:	str    WORD PTR [ecx+eax*1+0x78f0558b]
  40bbf1:	cs (bad) 
  40bbf3:	sar    BYTE PTR [ebx+edi*2+0x14],cl
  40bbf7:	shl    bh,1
  40bbf9:	pop    es
  40bbfa:	mov    ebp,DWORD PTR ds:0xdc70ff10
  40bc00:	mov    BYTE PTR [eax],al
  40bc02:	adc    DWORD PTR ds:0xc9740014,0xffffff84
  40bc09:	push   ebx
  40bc0a:	sbb    BYTE PTR [eax-0x77],dh
  40bc0d:	add    BYTE PTR [ebx-0x36f554c7],al
  40bc13:	add    BYTE PTR [ebx-0x53],bh
  40bc16:	add    dl,BYTE PTR [ebp-0x4e]
  40bc19:	lea    eax,[ebx+eax*8-0x74adf18b]
  40bc20:	hlt    
  40bc21:	fdivr  DWORD PTR [edi+0x2a986ff]
  40bc27:	add    BYTE PTR [edx+0x39c70664],dh
  40bc2d:	test   eax,0x2a390002
  40bc32:	aaa    
  40bc33:	or     BYTE PTR [ecx],bh
  40bc35:	int3   
  40bc36:	or     ch,BYTE PTR [ebx]
  40bc38:	jns    0x40bc99
  40bc3a:	push   edi
  40bc3b:	leave  
  40bc3c:	jnp    0x40bbe3
  40bc3e:	add    bh,bh
  40bc40:	les    esp,FWORD PTR [eax-0x1a260056]
  40bc46:	mov    eax,0xa94790a
  40bc4b:	sub    edi,ecx
  40bc4d:	jbe    0x40bca6
  40bc4f:	leave  
  40bc50:	sti    
  40bc51:	pushf  
  40bc52:	add    cl,BYTE PTR [ecx+0x74b9117c]
  40bc58:	xor    DWORD PTR [ecx],edx
  40bc5a:	push   cs
  40bc5b:	arpl   WORD PTR [esi],dx
  40bc5d:	mov    dh,0xbf
  40bc5f:	inc    esp
  40bc60:	add    eax,0x390002a8
  40bc65:	push   esp
  40bc66:	aas    
  40bc67:	in     al,dx
  40bc68:	imul   ebp,DWORD PTR [esi+edi*1],0x2dd689f4
  40bc6f:	or     cl,ah
  40bc71:	jne    0x40bc2f
  40bc73:	(bad)  
  40bc74:	out    0xf,al
  40bc76:	aas    
  40bc77:	in     al,dx
  40bc78:	add    BYTE PTR [esi-0x4d],ah
  40bc7b:	cmp    DWORD PTR [ebp+ecx*8-0x58],0x2e
  40bc80:	add    al,0x42
  40bc82:	fwait
  40bc83:	or     BYTE PTR cs:[edx],dl
  40bc86:	imul   ebx,DWORD PTR [eax+0x5f],0x7aafff0
  40bc8d:	cmp    ebx,ebp
  40bc8f:	and    ebp,DWORD PTR [eax-0x7d7ec33f]
  40bc95:	and    eax,0xd903e8a8
  40bc9a:	(bad)  
  40bc9b:	dec    BYTE PTR [ebx]
  40bc9d:	(bad)  
  40bc9e:	rcr    BYTE PTR [esi],0x59
  40bca1:	add    cl,0xe4
  40bca4:	add    esi,DWORD PTR [edx+0x5ec2813c]
  40bcaa:	add    DWORD PTR [ecx+0x5e2761ab],edi
  40bcb0:	mov    eax,0x8c553cc1
  40bcb5:	outs   dx,BYTE PTR ds:[esi]
  40bcb6:	mov    esi,0xb65e9fa3
  40bcbb:	call   0x6c331ec3
  40bcc0:	ds dec ecx
  40bcc2:	dec    edi
  40bcc3:	fs ds dec ebp
  40bcc6:	dec    edi
  40bcc7:	cs xor DWORD PTR cs:[eax-0x49c8425b],ebp
  40bccf:	jno    0x40bd17
  40bcd1:	sub    edx,edi
  40bcd3:	mov    ds:0xe1fcafab,eax
  40bcd8:	aad    0xaa
  40bcda:	adc    BYTE PTR [esi],al
  40bcdc:	add    BYTE PTR cs:0xe2b48a9,dl
  40bce3:	mov    dh,0xc1
  40bce5:	ret    
  40bce6:	fs push ebp
  40bce8:	and    ch,al
  40bcea:	xor    al,BYTE PTR [eax]
  40bcec:	adc    BYTE PTR [ecx-0x1f],cl
  40bcef:	mov    ch,0x23
  40bcf1:	mov    al,ds:0xac5381a3
  40bcf6:	out    0x2b,al
  40bcf8:	out    0x82,eax
  40bcfa:	pop    ebp
  40bcfb:	lods   al,BYTE PTR ds:[esi]
  40bcfc:	call   0x3bc2b531
  40bd01:	lods   al,BYTE PTR ds:[esi]
  40bd02:	into   
  40bd03:	sub    al,0x0
  40bd05:	out    dx,eax
  40bd06:	mov    ebx,0x9e9f434
  40bd0b:	adc    bh,bh
  40bd0d:	sbb    al,0xf1
  40bd0f:	popf   
  40bd10:	jo     0x40bd23
  40bd12:	out    0xb6,al
  40bd14:	sub    ch,BYTE PTR [ecx-0x5436aaf1]
  40bd1a:	xor    DWORD PTR [eax],eax
  40bd1c:	add    DWORD PTR [ecx+ebx*8],0xffffffb5
  40bd20:	jae    0x40bd06
  40bd22:	fisttp QWORD PTR [edx-0x76c51701]
  40bd28:	inc    esp
  40bd29:	fld    st(7)
  40bd2b:	sub    al,0xe4
  40bd2d:	jbe    0x40bd6c
  40bd2f:	mov    DWORD PTR [ebp+eax*2+0x74],eax
  40bd33:	aad    0x1
  40bd35:	mov    ecx,0x4e682092
  40bd3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3b:	mov    BYTE PTR [ebp+eiz*1-0x3e],al
  40bd3f:	xor    al,0xdc
  40bd41:	jb     0x40bd43
  40bd43:	or     BYTE PTR [edx+ebp*8-0x30762e6f],dh
  40bd4a:	es clc 
  40bd4c:	lahf   
  40bd4d:	(bad)  
  40bd4e:	call   0xa4cdbd8d
  40bd53:	fiadd  DWORD PTR [ebp+ecx*4-0x54]
  40bd57:	(bad)  
  40bd58:	inc    esp
  40bd59:	push   edx
  40bd5a:	push   cs
  40bd5b:	push   0xd216e808
  40bd60:	mov    ch,0xfe
  40bd62:	repnz cli 
  40bd64:	xor    BYTE PTR [edx+ebp*2],cl
  40bd67:	inc    eax
  40bd68:	lods   al,BYTE PTR ds:[esi]
  40bd69:	push   DWORD PTR [esp+edi*8-0x7f]
  40bd6d:	jl     0x40bd38
  40bd6f:	cmp    ch,BYTE PTR [ebx]
  40bd71:	es push 0x31
  40bd74:	mov    al,ds:0xb5355cff
  40bd79:	je     0x40bd44
  40bd7b:	xchg   edx,eax
  40bd7c:	cli    
  40bd7d:	addr16 add bh,bh
  40bd80:	ins    DWORD PTR es:[edi],dx
  40bd81:	std    
  40bd82:	jne    0x40bd30
  40bd84:	push   0x6d8ffe28
  40bd89:	std    
  40bd8a:	jne    0x40bd18
  40bd8c:	push   0x6ddf67f4
  40bd91:	sub    eax,eax
  40bd93:	outs   dx,BYTE PTR ds:[esi]
  40bd94:	dec    ebp
  40bd95:	leave  
  40bd96:	ret    0x9c
  40bd99:	mov    eax,DWORD PTR [ebp-0x50]
  40bd9c:	sub    esi,edi
  40bd9e:	dec    ebp
  40bd9f:	les    eax,FWORD PTR [ecx-0x1b5f1b85]
  40bda5:	add    eax,0x648d0083
  40bdaa:	(bad)  
  40bdab:	je     0x40bd99
  40bdad:	mov    DWORD PTR [ebx+0xc],eax
  40bdb0:	fucomip st,st(7)
  40bdb2:	fisttp DWORD PTR [edi-0x38c92a0]
  40bdb8:	clc    
  40bdb9:	leave  
  40bdba:	gs (bad) 
  40bdbc:	out    dx,eax
  40bdbd:	cmp    BYTE PTR [eax],al
  40bdbf:	add    BYTE PTR [eax+0x0],ah
  40bdc2:	pop    esi
  40bdc3:	pop    edi
  40bdc4:	or     DWORD PTR [edi-0x765afff6],edi
  40bdca:	jmp    0xdd83:0x55c91483
  40bdd1:	(bad)  
  40bdd3:	jne    0x40bdff
  40bdd5:	cmp    BYTE PTR [eax],al
  40bdd7:	add    BYTE PTR [eax],dl
  40bdd9:	add    BYTE PTR [edi-0x37],bl
  40bddc:	push   edx
  40bddd:	add    eax,DWORD PTR [eax]
  40bddf:	dec    ebp
  40bde1:	(bad)  
  40bde3:	ror    BYTE PTR [ebx-0xa08efc0],cl
  40bde9:	and    esp,DWORD PTR [ebp+0x41]
  40bdec:	adc    BYTE PTR [ebp-0x3750fbd],al
  40bdf2:	(bad)  
  40bdf3:	jne    0x40be05
  40bdf5:	outs   dx,BYTE PTR ds:[esi]
  40bdf6:	jae    0x40be00
  40bdf8:	cmp    ecx,eax
  40bdfa:	sbb    DWORD PTR [edi-0x22],ebx
  40bdfd:	ret    0x7c80
  40be00:	sub    DWORD PTR [ecx-0x579cf3d3],ebp
  40be06:	sub    BYTE PTR [esi+eax*8-0xc],ah
  40be0a:	or     ebp,eax
  40be0c:	add    BYTE PTR [ecx],dh
  40be0e:	add    dh,BYTE PTR [ebp+0x1014b6fe]
  40be14:	jmp    DWORD PTR [ecx+esi*4]
  40be17:	stos   BYTE PTR es:[edi],al
  40be18:	dec    edx
  40be19:	sbb    ecx,DWORD PTR [edx-0x7b0b774c]
  40be1f:	mov    ah,0x74
  40be21:	sub    eax,0xa1082e7a
  40be26:	fldenv [eax]
  40be28:	inc    DWORD PTR [esi+0x7e142f2a]
  40be2e:	lods   al,BYTE PTR ds:[esi]
  40be2f:	or     ch,al
  40be31:	cmp    al,0xc7
  40be33:	mov    bl,0xfe
  40be35:	rcr    BYTE PTR [edx+edi*4-0x2],0xec
  40be3a:	mov    ah,0xb3
  40be3c:	je     0x40be6f
  40be3e:	inc    ecx
  40be3f:	lods   eax,DWORD PTR ds:[esi]
  40be40:	pusha  
  40be41:	push   esi
  40be42:	cmp    dh,BYTE PTR [ebp+0x2ef22574]
  40be48:	or     BYTE PTR [ecx-0x30],dl
  40be4b:	and    bh,bh
  40be4d:	ds push ds
  40be4f:	aas    
  40be50:	adc    al,0xba
  40be52:	mov    al,ds:0x263d7402
  40be57:	aaa    
  40be58:	cld    
  40be59:	xor    al,0x95
  40be5b:	add    eax,0xff059c83
  40be60:	jae    0x40bea0
  40be62:	into   
  40be63:	ret    0x5e
  40be66:	out    0xf,eax
  40be68:	add    al,bl
  40be6a:	hlt    
  40be6b:	sbb    eax,0xac183941
  40be70:	cmp    BYTE PTR [eax],al
  40be72:	jl     0x40be74
  40be74:	loope  0x40bea3
  40be76:	ss out 0xa8,eax
  40be79:	push   esp
  40be7a:	lock mov ebp,0x34ba03fc
  40be80:	int    0xfe
  40be82:	dec    ebp
  40be83:	add    al,dh
  40be85:	cs and eax,0xd10c33b3
  40be8b:	add    BYTE PTR [edi-0x4b],0xbf
  40be8f:	mov    BYTE PTR [ebx],ah
  40be91:	int3   
  40be92:	push   ds
  40be93:	add    cl,ch
  40be95:	add    bh,BYTE PTR [ecx]
  40be97:	test   al,0xe5
  40be99:	sbb    al,0xa6
  40be9b:	mov    dl,0x5f
  40be9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be9f:	out    0x8d,al
  40bea1:	test   al,0x28
  40bea3:	mov    bl,0xfb
  40bea5:	jle    0xb4ecafd7
  40beab:	and    BYTE PTR [esi-0x4c],dh
  40beae:	mov    bl,0x4c
  40beb0:	jne    0x40be3c
  40beb2:	cmp    dh,BYTE PTR [esi-0x53]
  40beb5:	clc    
  40beb6:	in     eax,dx
  40beb7:	mov    bh,0xda
  40beb9:	stos   BYTE PTR es:[edi],al
  40beba:	mov    bl,0x3c
  40bebc:	std    
  40bebd:	and    BYTE PTR [esi],0x0
  40bec0:	aam    0x4
  40bec2:	push   esi
  40bec3:	sub    al,0x3d
  40bec5:	stos   DWORD PTR es:[edi],eax
  40bec6:	js     0x40bee1
  40bec8:	ds mov ah,0x13
  40becb:	rcl    BYTE PTR [ebp-0x16f48736],0x80
  40bed2:	mov    ch,0xb4
  40bed4:	jmp    0x40beda
  40bed6:	add    BYTE PTR [ecx+ebx*2-0x1ac6fc18],dh
  40bedd:	adc    eax,0xb3858ca8
  40bee2:	scas   eax,DWORD PTR es:[edi]
  40bee3:	ret    
  40bee4:	cld    
  40bee5:	inc    edx
  40bee6:	add    BYTE PTR [eax+esi*4-0x6e],dh
  40beea:	add    ebp,DWORD PTR [ecx-0x4f]
  40beed:	(bad)  
  40beee:	jnp    0x40bf22
  40bef0:	test   al,0x27
  40bef2:	(bad)  
  40bef3:	lods   eax,DWORD PTR ds:[esi]
  40bef4:	mov    dl,0xfe
  40bef6:	pop    esp
  40bef7:	push   ecx
  40bef8:	mov    cl,0x74
  40befa:	icebp  
  40befb:	ret    0x610f
  40befe:	(bad)  
  40beff:	stos   BYTE PTR es:[edi],al
  40bf00:	mov    BYTE PTR [ebp+ebx*4+0x37],al
  40bf04:	add    bh,bh
  40bf06:	cmp    al,0x31
  40bf08:	mov    cl,0x74
  40bf0a:	icebp  
  40bf0b:	mov    ds:0x8ab6f848,al
  40bf10:	xchg   BYTE PTR [ebp+edx*8-0x41],cl
  40bf14:	clc    
  40bf15:	call   FWORD PTR [ebx]
  40bf17:	cmp    dh,BYTE PTR [ecx+0x23c59574]
  40bf1d:	xchg   si,ax
  40bf1f:	jmp    0x13bf:0xd42ebfe6
  40bf26:	jmp    0x7e58ebf6
  40bf2b:	inc    eax
  40bf2c:	or     al,0xff
  40bf2e:	cld    
  40bf2f:	mov    esi,0xabdd74b2
  40bf34:	sub    al,0x8
  40bf36:	push   ecx
  40bf37:	(bad)  
  40bf38:	mov    bl,0xfe
  40bf3a:	pop    esi
  40bf3b:	add    BYTE PTR [esi+0x71],ah
  40bf3e:	je     0x40bf26
  40bf40:	stos   DWORD PTR es:[edi],eax
  40bf41:	sub    al,0xf4
  40bf43:	inc    ecx
  40bf44:	add    bl,BYTE PTR [edx]
  40bf46:	inc    DWORD PTR [esi+0x6e]
  40bf49:	jno    0x40bfa9
  40bf4b:	xor    BYTE PTR [edi+0xd],bh
  40bf4e:	add    BYTE PTR [esi-0x4407cbb1],ch
  40bf54:	mov    ecx,0xea0174b1
  40bf59:	sub    edx,DWORD PTR [esi+ebx*1]
  40bf5c:	pusha  
  40bf5d:	enter  0x9cfe,0x1e
  40bf61:	mov    dl,0x74
  40bf63:	loope  0x40bf17
  40bf65:	sbb    bh,dh
  40bf67:	add    BYTE PTR [edi],dh
  40bf69:	ins    DWORD PTR es:[edi],dx
  40bf6a:	or     eax,eax
  40bf6c:	pop    ss
  40bf6d:	mov    BYTE PTR [eax+0x1],dl
  40bf70:	adc    ch,bh
  40bf72:	(bad)  
  40bf73:	jne    0x40bf61
  40bf75:	xchg   esp,eax
  40bf76:	adc    al,0x66
  40bf78:	xlat   BYTE PTR ds:[ebx]
  40bf79:	ins    DWORD PTR es:[edi],dx
  40bf7a:	sub    eax,eax
  40bf7c:	daa    
  40bf7d:	jae    0x40bf3f
  40bf7f:	adc    al,0xd0
  40bf81:	xchg   ebx,eax
  40bf82:	cmp    al,0x1
  40bf84:	loopne 0x40bf82
  40bf86:	cmp    BYTE PTR [ebp-0xc],0xff
  40bf8a:	push   cs
  40bf8b:	test   esp,ecx
  40bf8d:	sti    
  40bf8e:	(bad)  
  40bf8f:	(bad)  
  40bf90:	cmp    ebp,DWORD PTR [ebp-0x19]
  40bf93:	and    al,0xa1
  40bf95:	cld    
  40bf96:	dec    DWORD PTR [edx+0x489786d]
  40bf9c:	sbb    bh,dl
  40bf9e:	inc    esp
  40bf9f:	lock add BYTE PTR [edx],bh
  40bfa2:	cld    
  40bfa3:	dec    edi
  40bfa4:	jmp    FWORD PTR ds:0x5574e6b4
  40bfaa:	ins    DWORD PTR es:[edi],dx
  40bfab:	std    
  40bfac:	push   0xffffff90
  40bfae:	ins    DWORD PTR es:[edi],dx
  40bfaf:	jae    0x40bfc5
  40bfb1:	pop    es
  40bfb2:	clc    
  40bfb3:	pop    es
  40bfb4:	call   0x3e35bc
  40bfb9:	jmp    0x40bffa
  40bfbb:	adc    al,0x83
  40bfbd:	sbb    esp,edi
  40bfbf:	je     0x40bfd0
  40bfc1:	pop    es
  40bfc2:	clc    
  40bfc3:	repz call 0x3fa7e1
  40bfc9:	sub    edi,DWORD PTR [ebp+ebx*2+0x912c9]
  40bfd0:	or     esp,DWORD PTR [edx]
  40bfd2:	jmp    0x3b5a8db
  40bfd7:	add    BYTE PTR [eax],al
  40bfd9:	test   eax,0x106aec38
  40bfde:	jae    0x40c053
  40bfe0:	adc    al,0x39
  40bfe2:	push   ss
  40bfe3:	cmp    BYTE PTR [eax],cl
  40bfe5:	and    DWORD PTR [ebx+0x330efeb9],ecx
  40bfeb:	inc    eax
  40bfec:	adc    al,0xba
  40bfee:	rol    BYTE PTR [edx],0x75
  40bff1:	cs mov dh,0x36
  40bff4:	hlt    
  40bff5:	loope  0x40c048
  40bff7:	sub    bh,bh
  40bff9:	out    dx,al
  40bffa:	adc    al,ah
  40bffc:	pop    esi
  40bffd:	lock pop ebx
  40bfff:	pop    ss
  40c000:	add    dh,bl
  40c002:	or     al,0x78
  40c004:	add    BYTE PTR gs:[eax-0x67],bh
  40c008:	jg     0x40c04e
  40c00a:	loope  0x40c03e
  40c00c:	inc    edi
  40c00d:	call   0xc14091cc
  40c012:	fstp   DWORD PTR [ebx+ebx*8+0x35ef0d1]
  40c019:	add    BYTE PTR [ecx],bh
  40c01b:	mov    ?,WORD PTR [edx+0x79b69182]
  40c021:	inc    esp
  40c022:	cdq    
  40c023:	sbb    bl,BYTE PTR [edi]
  40c025:	call   0xec87e284
  40c02a:	push   edx
  40c02b:	fcomp  QWORD PTR [ebx-0x256dc48a]
  40c031:	sub    ch,BYTE PTR [ebx+0x22]
  40c034:	inc    edi
  40c035:	in     al,dx
  40c036:	and    ah,ah
  40c038:	mov    ds:0x8550fc8a,eax
  40c03d:	rcr    BYTE PTR [edx],0x1a
  40c040:	fwait
  40c041:	add    esp,DWORD PTR [esi+0x48]
  40c044:	add    eax,0x57205955
  40c049:	in     al,0xc2
  40c04b:	pop    esp
  40c04c:	call   0xb205:0x3544fc3a
  40c053:	pop    esp
  40c054:	mov    ds:0x47223aea,al
  40c059:	in     al,0x2e
  40c05b:	add    BYTE PTR [edi+edx*1+0x540d3526],bl
  40c062:	push   ds
  40c063:	xor    eax,0xb6d99be1
  40c068:	or     eax,0xc04300b1
  40c06d:	jnp    0x40c06f
  40c06f:	push   es
  40c070:	xor    eax,0x251c9bf5
  40c075:	div    BYTE PTR [eax-0x45723fdd]
  40c07b:	clc    
  40c07c:	adc    ebp,ecx
  40c07e:	jp     0x40c0fd
  40c080:	int3   
  40c081:	jno    0x40c056
  40c083:	lods   eax,DWORD PTR ds:[esi]
  40c084:	inc    esp
  40c085:	mov    ebp,0xb144c453
  40c08a:	push   ebx
  40c08b:	imul   ebx,DWORD PTR [eax-0x5138539e],0x6f
  40c092:	inc    esi
  40c093:	jmp    0x9f10fc46
  40c098:	and    eax,0x82afb10d
  40c09d:	and    edx,esp
  40c09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a0:	xor    bh,ah
  40c0a2:	test   BYTE PTR ds:0x2e37e8c8,bl
  40c0a8:	scas   eax,DWORD PTR es:[edi]
  40c0a9:	adc    ebx,eax
  40c0ab:	(bad)  
  40c0ac:	xor    al,0xa1
  40c0ae:	mov    al,0xd
  40c0b0:	cld    
  40c0b1:	jge    0x40c0e9
  40c0b3:	xor    DWORD PTR [edi+0x34760c1b],ebp
  40c0b9:	xchg   ecx,eax
  40c0ba:	fwait
  40c0bb:	cmp    BYTE PTR [ebx-0x15004f9b],ch
  40c0c1:	fld    TBYTE PTR [ebx-0x4ec67dd1]
  40c0c7:	push   edi
  40c0c8:	scas   al,BYTE PTR es:[edi]
  40c0c9:	dec    ebp
  40c0ca:	ss inc ebp
  40c0cc:	xchg   edi,eax
  40c0cd:	sub    al,0x27
  40c0cf:	add    BYTE PTR [esi-0x52],al
  40c0d2:	add    BYTE PTR [edx],0x39
  40c0d5:	add    BYTE PTR [eax],al
  40c0d7:	jmp    0xd6027865
  40c0dc:	cmp    dl,BYTE PTR [ebx-0x75]
  40c0df:	adc    eax,0xf174ad81
  40c0e4:	ret    0x71b1
  40c0e7:	push   ss
  40c0e8:	leave  
  40c0e9:	and    eax,0x7baaee
  40c0ee:	(bad)  
  40c0ef:	jl     0x40c0f3
  40c0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f2:	cmp    al,0xb6
  40c0f4:	cmp    al,BYTE PTR [eax]
  40c0f6:	or     ebp,DWORD PTR [ecx]
  40c0f8:	das    
  40c0f9:	add    ebx,DWORD PTR [edi+0x20]
  40c0fc:	hlt    
  40c0fd:	add    eax,0x3daf00
  40c102:	call   DWORD PTR [ebp+ebx*8-0x5b]
  40c106:	rcr    BYTE PTR [ebx-0x5a],cl
  40c109:	scas   al,BYTE PTR es:[edi]
  40c10a:	mov    esi,0x3f7ad9
  40c10f:	mov    BYTE PTR [eax],0xf8
  40c112:	push   esi
  40c113:	shl    DWORD PTR [esi+esi*8],1
  40c116:	(bad)  
  40c117:	call   0xe4b52ecf
  40c11c:	push   DWORD PTR [esi-0x53c50e3f]
  40c122:	xor    ch,BYTE PTR [ecx-0x690151f4]
  40c128:	out    0xaf,al
  40c12a:	lods   eax,DWORD PTR ds:[esi]
  40c12b:	shl    DWORD PTR [edi],1
  40c12d:	xor    esp,eax
  40c12f:	xchg   BYTE PTR [eax-0x8],al
  40c132:	out    0x5,eax
  40c134:	add    BYTE PTR [eax+0x7ae2fead],al
  40c13a:	xor    al,0x5
  40c13c:	push   cs
  40c13d:	lods   al,BYTE PTR ds:[esi]
  40c13e:	mov    edi,0xe042e907
  40c143:	inc    ebx
  40c144:	test   al,0x3a
  40c146:	lods   eax,DWORD PTR ds:[esi]
  40c147:	je     0x40c12a
  40c149:	mov    dl,0xb9
  40c14b:	xor    al,0xe9
  40c14d:	cmp    bh,cl
  40c14f:	mov    edi,0xfdac8500
  40c154:	jne    0x40c1a2
  40c156:	cs add al,0xbc
  40c159:	push   es
  40c15a:	inc    esp
  40c15b:	add    BYTE PTR [eax+0x3b],ch
  40c15e:	cmp    BYTE PTR [ecx+0x0],al
  40c161:	pop    edi
  40c162:	out    0x7,eax
  40c164:	call   0x3f68eb
  40c169:	sbb    eax,ecx
  40c16b:	jae    0x40c176
  40c16d:	aas    
  40c16e:	out    0xb,eax
  40c170:	(bad)  
  40c171:	adc    eax,0x104164c1
  40c176:	or     DWORD PTR [edx],edi
  40c178:	inc    esp
  40c179:	mov    eax,ds:0xd875ff00
  40c17e:	mov    BYTE PTR [esi+0xb00d035],dl
  40c184:	rol    BYTE PTR [ebp-0x238a0255],0x2d
  40c18b:	add    al,0xc4
  40c18d:	jbe    0x40c1d2
  40c18f:	add    BYTE PTR [eax+0xd1],bh
  40c195:	pop    ds
  40c196:	imul   eax,eax,0x8
  40c199:	add    BYTE PTR [eax+0x23ec8b47],ah
  40c19f:	vorps  xmm4,xmm1,XMMWORD PTR [edi+0xc]
  40c1a4:	jmp    0x9875:0xff045143
  40c1ab:	mov    BYTE PTR [esi+esi*1-0x3ff4ff60],al
  40c1b2:	test   DWORD PTR [edx],eax
  40c1b4:	pop    edi
  40c1b5:	pop    esi
  40c1b6:	leave  
  40c1b7:	mov    esi,0x29200002
  40c1bc:	out    dx,eax
  40c1bd:	mov    ebx,DWORD PTR [ebp-0x58]
  40c1c0:	jmp    0x3cc175c6
  40c1c5:	add    BYTE PTR [ebp+0x3968a256],al
  40c1cb:	inc    ebx
  40c1cc:	inc    edx
  40c1cd:	inc    ecx
  40c1ce:	cmp    DWORD PTR [esi],edi
  40c1d0:	cmp    BYTE PTR [eax],cl
  40c1d2:	push   ecx
  40c1d3:	mov    dh,0xf4
  40c1d5:	(bad)  
  40c1d6:	ds mov cl,0xc2
  40c1d9:	je     0x40c21a
  40c1db:	xchg   edx,eax
  40c1dc:	dec    esp
  40c1dd:	leave  
  40c1de:	sti    
  40c1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e0:	add    cl,BYTE PTR [ebx+0x2199b1a4]
  40c1e6:	mov    ecx,0x3073fbca
  40c1eb:	sbb    esi,ebp
  40c1ed:	or     al,0x85
  40c1ef:	mov    ch,0x82
  40c1f1:	xor    ebp,DWORD PTR ds:0x5e3e7ffe
  40c1f8:	or     bh,BYTE PTR ss:[ecx+0x744f72]
  40c1ff:	xor    al,0x19
  40c201:	out    dx,al
  40c202:	pop    edi
  40c203:	ins    BYTE PTR es:[edi],dx
  40c204:	xchg   esi,eax
  40c205:	les    eax,FWORD PTR [esi]
  40c207:	sbb    edx,esp
  40c209:	cmp    DWORD PTR [esi],0x39
  40c20c:	dec    esp
  40c20d:	retf   
  40c20e:	(bad)  
  40c20f:	je     0x40c1ce
  40c211:	add    eax,DWORD PTR [eax]
  40c213:	cmp    DWORD PTR [ecx-0x663ebb3d],ebx
  40c219:	add    al,BYTE PTR [eax]
  40c21b:	cmp    DWORD PTR [esi],ebx
  40c21d:	das    
  40c21e:	or     BYTE PTR [edx+0x5e3e83de],ah
  40c224:	or     al,0xd9
  40c226:	sbb    BYTE PTR [ecx*4-0x75d48afd],0x46
  40c22e:	clc    
  40c22f:	cmp    BYTE PTR [ecx-0x5af3fffe],bl
  40c235:	ret    
  40c236:	inc    esp
  40c237:	jge    0x40c1d1
  40c239:	add    al,BYTE PTR [eax]
  40c23b:	cmp    DWORD PTR [esi+0x10],edi
  40c23e:	div    esp
  40c240:	xor    BYTE PTR [ebx],al
  40c242:	add    BYTE PTR [ecx],bh
  40c244:	add    cl,ch
  40c246:	ss xor eax,edx
  40c249:	in     eax,0xe3
  40c24b:	jg     0x40c292
  40c24d:	push   ebp
  40c24e:	add    al,0x39
  40c250:	add    cl,ch
  40c252:	add    DWORD PTR [edi],0x4c
  40c255:	mov    esp,0x41453e06
  40c25a:	cdq    
  40c25b:	aas    
  40c25c:	ret    
  40c25d:	stos   DWORD PTR es:[edi],eax
  40c25e:	stos   DWORD PTR es:[edi],eax
  40c25f:	cs stos DWORD PTR es:[edi],eax
  40c261:	call   0x2cfac269
  40c266:	and    eax,0x26ffa403
  40c26b:	add    eax,0xed694359
  40c270:	push   cs
  40c271:	xor    al,0x59
  40c273:	jns    0x40c1fa
  40c275:	clc    
  40c276:	adc    DWORD PTR [eax],edx
  40c278:	mov    ecx,0x4f36c8ea
  40c27d:	xor    BYTE PTR [ebp+0x2],0x19
  40c281:	xor    eax,0x1d254d9
  40c286:	jae    0x40c2cc
  40c288:	cmp    BYTE PTR [eax-0x1b],bh
  40c28b:	inc    esp
  40c28c:	mov    ecx,0xc436e8ea
  40c291:	dec    edx
  40c292:	push   ds
  40c293:	inc    ebp
  40c294:	mov    ecx,0xde36e8ea
  40c299:	ret    0xb823
  40c29c:	mov    dh,0xaa
  40c29e:	call   0xe17584a6
  40c2a3:	js     0x40c2ca
  40c2a5:	clc    
  40c2a6:	xchg   ecx,eax
  40c2a7:	loope  0x40c2c7
  40c2a9:	jmp    0x40c277
  40c2ab:	ss xor eax,0x8e03edc2
  40c2b1:	xor    al,0x95
  40c2b3:	push   ebp
  40c2b4:	xchg   ecx,eax
  40c2b5:	(bad)  
  40c2b6:	xchg   BYTE PTR [edi+edi*2+0x3f36a8f6],ch
  40c2bd:	dec    ebx
  40c2be:	add    BYTE PTR [edi],dl
  40c2c0:	mov    dl,0xc0
  40c2c2:	add    ebp,ecx
  40c2c4:	loope  0x40c277
  40c2c6:	inc    ebp
  40c2c7:	data16 add bh,dh
  40c2ca:	mov    bl,0x46
  40c2cc:	imul   esp,DWORD PTR [ebp-0x56],0x339d3073
  40c2d3:	hlt    
  40c2d4:	mov    bh,0xa2
  40c2d6:	idiv   ch
  40c2d8:	inc    esi
  40c2d9:	lea    ecx,[ecx+0x5e]
  40c2dc:	xor    al,bh
  40c2de:	std    
  40c2df:	call   FWORD PTR [ebx+0x258295b1]
  40c2e5:	loop   0x40c33a
  40c2e7:	push   edi
  40c2e8:	push   0x4f
  40c2ea:	adc    al,0x0
  40c2ec:	xchg   ebp,eax
  40c2ed:	adc    edi,DWORD PTR [edi+0x3c]
  40c2f0:	xlat   BYTE PTR ds:[ebx]
  40c2f1:	repz inc eax
  40c2f3:	add    cl,ch
  40c2f5:	dec    edi
  40c2f6:	add    bl,BYTE PTR [edi-0x59]
  40c2f9:	ret    
  40c2fa:	mov    edi,0x4471e90f
  40c2ff:	adc    al,0xb0
  40c301:	aaa    
  40c302:	ins    BYTE PTR es:[edi],dx
  40c303:	gs test al,0x3a
  40c306:	stc    
  40c307:	or     BYTE PTR [edx+0x20000034],0x38
  40c30e:	shl    BYTE PTR [ebp+0x28],0x35
  40c312:	stc    
  40c313:	xor    BYTE PTR [esi+0x3c],0x0
  40c317:	add    BYTE PTR [eax],al
  40c319:	cmp    ah,al
  40c31b:	sub    BYTE PTR gs:0x346282f9,bh
  40c322:	add    BYTE PTR [eax],al
  40c324:	pop    esp
  40c325:	clc    
  40c326:	mov    bl,0x4f
  40c328:	je     0x40c322
  40c32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c32b:	dec    edi
  40c32c:	ins    BYTE PTR es:[edi],dx
  40c32d:	add    al,bh
  40c32f:	stos   DWORD PTR es:[edi],eax
  40c330:	dec    edi
  40c331:	xchg   esi,eax
  40c332:	mov    BYTE PTR [ebp+0x65],ah
  40c335:	sub    BYTE PTR ds:0x600074a9,bh
  40c33b:	test   DWORD PTR [eax+edi*8+0x458b54f7],edi
  40c342:	mov    eax,0xe4458d54
  40c347:	push   ebx
  40c348:	lea    eax,[ebp+0x0]
  40c34b:	push   esp
  40c34c:	push   DWORD PTR ds:0x40de1c
  40c352:	out    0xee,eax
  40c354:	psubsb mm7,QWORD PTR [esp+ebx*2+0x3ec5fffd]
  40c35c:	fcom   QWORD PTR [eax-0x5b]
  40c35f:	aas    
  40c360:	loopne 0x40c3b2
  40c362:	xchg   ebp,eax
  40c363:	aas    
  40c364:	in     al,0x50
  40c366:	push   edi
  40c367:	scas   eax,DWORD PTR es:[edi]
  40c368:	mov    esi,0xfefcd166
  40c36d:	jne    0x40c37f
  40c36f:	test   DWORD PTR [eax-0x2aad808],ecx
  40c375:	jne    0x40c3b3
  40c377:	and    eax,0xef37d444
  40c37c:	fisttp DWORD PTR [edi+0x45c5b49d]
  40c382:	push   eax
  40c383:	add    al,0x0
  40c385:	add    al,dl
  40c387:	daa    
  40c388:	inc    esp
  40c389:	int3   
  40c38a:	and    BYTE PTR [edx],cl
  40c38c:	add    DWORD PTR [edx-0x20],ebp
  40c38f:	or     al,BYTE PTR [eax]
  40c391:	push   0x0
  40c393:	loopne 0x40c39f
  40c395:	add    BYTE PTR [ebp-0xb12fe3],cl
  40c39b:	fst    QWORD PTR [esi-0x565fbed9]
  40c3a1:	mov    esi,0xffab1c0f
  40c3a6:	call   DWORD PTR [eax-0x6f2f847f]
  40c3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ad:	add    BYTE PTR [eax],0xa1
  40c3b0:	cld    
  40c3b1:	dec    DWORD PTR [edx+0x3ab7e439]
  40c3b7:	hlt    
  40c3b8:	cmp    cl,0x86
  40c3bb:	test   DWORD PTR [esi+0x2d750002],edx
  40c3c1:	xor    al,dl
  40c3c3:	ret    0xc6b3
  40c3c6:	mov    dh,ah
  40c3c8:	mov    ah,BYTE PTR [ebp-0x568595ff]
  40c3ce:	je     0x40c355
  40c3d0:	sbb    DWORD PTR [eax-0x1c],eax
  40c3d3:	dec    esi
  40c3d4:	retf   
  40c3d5:	shl    bh,cl
  40c3d7:	data16 add al,0x4
  40c3da:	add    BYTE PTR [edx+0x47ffa6c3],bh
  40c3e0:	sbb    eax,0x9a2effb9
  40c3e5:	test   DWORD PTR [ecx+ebp*1-0x66],edi
  40c3e9:	stc    
  40c3ea:	xor    ebp,0xffffff99
  40c3ed:	add    al,BYTE PTR [eax]
  40c3ef:	mov    edx,0x3fff9e84
  40c3f4:	adc    eax,0x600ff6d
  40c3f9:	call   0x606d:0x11fd74a9
  40c400:	mul    BYTE PTR [esi-0x50febb86]
  40c406:	cs cld 
  40c408:	out    0x2c,al
  40c40a:	mov    ebx,0x9bc564fe
  40c40f:	fistp  WORD PTR [eax-0x3a]
  40c412:	test   al,0x67
  40c414:	adc    ch,0x42
  40c417:	add    cl,dl
  40c419:	inc    ebp
  40c41a:	idiv   bh
  40c41c:	mov    esi,0xfd491c09
  40c421:	xlat   BYTE PTR ds:[ebx]
  40c422:	add    edi,edi
  40c424:	and    al,0x61
  40c426:	fwait
  40c427:	sub    eax,0xb02996d
  40c42c:	jns    0x40c42e
  40c42e:	sbb    eax,0x2550210c
  40c433:	inc    ebx
  40c434:	cmp    DWORD PTR [eax-0x587909e8],ebx
  40c43a:	cmp    BYTE PTR [ecx+ebp*8],bl
  40c43d:	cmp    ebp,DWORD PTR [eax]
  40c43f:	add    al,0x76
  40c441:	sub    eax,0xec489cb1
  40c446:	call   0xf500f64e
  40c44b:	or     edx,ecx
  40c44d:	inc    edi
  40c44e:	lods   eax,DWORD PTR ds:[esi]
  40c44f:	inc    edx
  40c450:	cmp    DWORD PTR [eax-0x58b10a4c],ebx
  40c456:	mov    eax,0xa83be11b
  40c45b:	add    eax,DWORD PTR [eax]
  40c45d:	ds sub eax,0xf32c9c31
  40c463:	call   0xbc01066b
  40c468:	ds xchg ecx,eax
  40c46a:	add    cl,ch
  40c46c:	cwde   
  40c46d:	fsub   QWORD PTR [esi+0x6a1ef79b]
  40c473:	mov    ebx,0xdba70fa8
  40c478:	imul   ebx,DWORD PTR [ecx+eax*2-0xb7a5717],0x10
  40c480:	pop    eax
  40c481:	xchg   ebp,eax
  40c482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c483:	std    
  40c484:	test   al,0x65
  40c486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c487:	cmc    
  40c488:	cs in  eax,dx
  40c48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c48b:	jae    0x40c484
  40c48d:	(bad)  
  40c48e:	retf   
  40c48f:	inc    ebx
  40c490:	test   eax,0xb453a6d7
  40c495:	iret   
  40c496:	sub    al,0xc1
  40c498:	test   al,0x4d
  40c49a:	hlt    
  40c49b:	rol    cl,0x5d
  40c49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c49f:	lds    ebp,FWORD PTR [eax+0x2ebd9c2d]
  40c4a5:	lea    esp,[esi-0x615ec401]
  40c4ab:	mov    bh,0xc
  40c4ad:	shl    BYTE PTR [ebp-0x612ae302],1
  40c4b3:	lock or eax,esp
  40c4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b7:	pop    esi
  40c4b8:	aaa    
  40c4b9:	ret    0xfc0
  40c4bc:	jmp    0x6b2c3fb0
  40c4c1:	add    BYTE PTR [esi+0x3efc829e],dh
  40c4c7:	std    
  40c4c8:	push   cs
  40c4c9:	ins    BYTE PTR es:[edi],dx
  40c4ca:	dec    ebp
  40c4cb:	add    DWORD PTR [eax],eax
  40c4cd:	jmp    0xba3500b9
  40c4d2:	iret   
  40c4d3:	cmp    edi,eax
  40c4d5:	mov    ecx,0xb9fc3bc7
  40c4da:	and    al,0x2
  40c4dc:	call   esp
  40c4de:	sub    bl,BYTE PTR [eax-0x591ec1e0]
  40c4e4:	cmp    BYTE PTR [edx+eiz*8-0x1293f100],0xa5
  40c4ec:	(bad)  
  40c4ed:	jmp    0x7734f1c3
  40c4f2:	push   edi
  40c4f3:	mov    al,0x67
  40c4f5:	add    BYTE PTR [ecx+0x3f],bh
  40c4f8:	add    BYTE PTR [esi],dl
  40c4fa:	push   edi
  40c4fb:	mov    al,0xe7
  40c4fd:	ret    
  40c4fe:	add    al,0xa6
  40c500:	(bad)  
  40c501:	repnz cli 
  40c503:	test   BYTE PTR [ecx+eiz*1+0x6400003a],0x27
  40c50b:	lods   al,BYTE PTR ds:[esi]
  40c50c:	dec    edi
  40c50d:	pop    esp
  40c50e:	pop    ds
  40c50f:	test   al,0x4f
  40c511:	je     0x40c58b
  40c513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c514:	dec    edi
  40c515:	push   ebx
  40c516:	xor    eax,0xa2f974a5
  40c51b:	fwait
  40c51c:	cmc    
  40c51d:	into   
  40c51e:	xchg   esi,eax
  40c51f:	cmp    BYTE PTR [eax+eax*1+0x78],0xfb
  40c524:	push   cs
  40c525:	test   DWORD PTR [eax],eax
  40c527:	mov    eax,0xeffffffc
  40c52c:	out    dx,eax
  40c52d:	repz push 0x414174
  40c533:	test   al,0xab
  40c535:	xor    BYTE PTR [eax],al
  40c537:	mov    al,ds:0x150fbeaa
  40c53c:	and    edi,edi
  40c53e:	call   DWORD PTR [eax+0x50f44428]
  40c544:	daa    
  40c545:	inc    esp
  40c546:	clc    
  40c547:	push   eax
  40c548:	daa    
  40c549:	inc    esp
  40c54a:	cld    
  40c54b:	inc    eax
  40c54c:	or     al,BYTE PTR [ebx]
  40c54e:	jmp    DWORD PTR [ebp+0x11]
  40c551:	call   0xfd9dbc07
  40c556:	sub    DWORD PTR [ebp+0x59],0xfffffffe
  40c55a:	push   cs
  40c55b:	aad    0x80
  40c55d:	(bad)  
  40c55e:	call   DWORD PTR [eax+0x2a]
  40c561:	inc    esp
  40c562:	hlt    
  40c563:	jg     0x40c511
  40c565:	lea    eax,[ebp+0x7c]
  40c568:	daa    
  40c569:	inc    esp
  40c56a:	hlt    
  40c56b:	shl    BYTE PTR [edi],0x44
  40c56e:	clc    
  40c56f:	shl    BYTE PTR [edi],0x44
  40c572:	cld    
  40c573:	rol    BYTE PTR [esi],1
  40c575:	add    al,0xff
  40c577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c578:	adc    al,ch
  40c57a:	mov    DWORD PTR [esi],esp
  40c57c:	pop    ebp
  40c57d:	std    
  40c57e:	sub    DWORD PTR [ebp-0x608b00a8],0x65
  40c585:	add    edi,DWORD PTR [esi+esi*4+0xff003b]
  40c58c:	out    dx,eax
  40c58d:	pop    ebp
  40c58e:	std    
  40c58f:	(bad)  
  40c590:	aad    0xc0
  40c592:	fs inc ecx
  40c594:	loopne 0x40c5f3
  40c596:	std    
  40c597:	(bad)  
  40c598:	out    dx,eax
  40c599:	gs add eax,esp
  40c59c:	cmp    DWORD PTR ds:0xb5be0045,esi
  40c5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a3:	(bad)  
  40c5a4:	mov    dh,0xe3
  40c5a6:	scas   eax,DWORD PTR es:[edi]
  40c5a7:	out    0x3b,eax
  40c5a9:	arpl   WORD PTR [ebp-0x642c8102],sp
  40c5af:	add    BYTE PTR [ecx],bh
  40c5b1:	xchg   edi,eax
  40c5b2:	add    al,BYTE PTR [ebx+0x411d1b54]
  40c5b8:	cmp    DWORD PTR [esi-0x3445d6d2],eax
  40c5be:	ret    0xf865
  40c5c1:	xchg   esi,eax
  40c5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c3:	jae    0x40c5de
  40c5c5:	sbb    ch,al
  40c5c7:	ret    
  40c5c8:	xlat   BYTE PTR ds:[ebx]
  40c5c9:	xlat   BYTE PTR ds:[ebx]
  40c5ca:	add    edi,edi
  40c5cc:	in     eax,dx
  40c5cd:	lds    ebx,FWORD PTR [edx]
  40c5cf:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d1:	(bad)  
  40c5d2:	add    ecx,DWORD PTR [ebp-0xacb104]
  40c5d8:	les    esi,FWORD PTR [edx]
  40c5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5db:	je     0x40c612
  40c5dd:	dec    esi
  40c5de:	xor    BYTE PTR [eax],cl
  40c5e0:	push   ecx
  40c5e1:	sahf   
  40c5e2:	stos   BYTE PTR es:[edi],al
  40c5e3:	(bad)  
  40c5e4:	ss icebp 
  40c5e6:	ror    BYTE PTR [edi],0x39
  40c5e9:	mov    WORD PTR [ecx-0x15],?
  40c5ec:	mov    edx,0xfe96d5
  40c5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f2:	mov    eax,ds:0xda709c9a
  40c5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f8:	imul   ebp,DWORD PTR [ecx],0x69f04014
  40c5fe:	or     dh,BYTE PTR [eax]
  40c600:	or     BYTE PTR [ecx],dl
  40c602:	stos   DWORD PTR es:[edi],eax
  40c603:	dec    edx
  40c604:	push   esi
  40c606:	scas   al,BYTE PTR es:[edi]
  40c607:	ret    0x3574
  40c60a:	lock rol BYTE PTR [edi],0x39
  40c60e:	jg     0x40c622
  40c610:	push   0x435705
  40c615:	les    eax,FWORD PTR [eax]
  40c617:	sub    al,0xb4
  40c619:	jle    0x40c5b3
  40c61b:	aad    0x45
  40c61d:	(bad)  
  40c61e:	mov    ds:0xfc45c3e1,eax
  40c623:	lahf   
  40c624:	ret    0x3e
  40c627:	scas   al,BYTE PTR es:[edi]
  40c628:	aas    
  40c629:	popf   
  40c62a:	add    ecx,ebp
  40c62c:	add    edi,DWORD PTR [ecx]
  40c62e:	jne    0x40c65b
  40c630:	cwde   
  40c631:	out    dx,al
  40c632:	mov    ds:0xdd9efc33,al
  40c637:	inc    edx
  40c638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c639:	(bad)  
  40c63a:	imul   DWORD PTR [eax+0x137f3f30]
  40c640:	cwde   
  40c641:	jle    0x40c66f
  40c643:	out    0xd8,eax
  40c645:	mov    dh,0xb9
  40c647:	stos   BYTE PTR es:[edi],al
  40c648:	cld    
  40c649:	outs   dx,BYTE PTR ds:[esi]
  40c64a:	xor    edx,edx
  40c64c:	mov    edx,0x9c97fd53
  40c651:	jmp    0x40c653
  40c653:	sub    cl,bh
  40c655:	add    BYTE PTR [esi-0x45b3a1d3],dl
  40c65b:	test   al,0xe7
  40c65d:	cs cmp al,0x68
  40c660:	call   0x6a40fe68
  40c665:	stos   DWORD PTR es:[edi],eax
  40c666:	cmp    DWORD PTR [edi+ebp*8],ebp
  40c669:	fsubr  st,st(6)
  40c66b:	mov    eax,0x5e26fc2a
  40c670:	jl     0x40c690
  40c672:	js     0x40c674
  40c674:	pop    esp
  40c675:	aas    
  40c676:	and    eax,0x412f2650
  40c67b:	cwde   
  40c67c:	jmp    0x40c6c7
  40c67e:	push   es
  40c67f:	mov    ds:0x2c39ac69,eax
  40c684:	in     al,0x80
  40c686:	out    dx,al
  40c687:	std    
  40c688:	jnp    0x40c687
  40c68a:	mov    ebx,0x6c040d24
  40c68f:	cli    
  40c690:	inc    ecx
  40c692:	cli    
  40c693:	mov    bh,0xc1
  40c695:	loope  0x40c6d1
  40c697:	jne    0x40c6dd
  40c699:	aad    0x6a
  40c69b:	mov    ds:0x95a2f174,eax
  40c6a0:	pop    eax
  40c6a1:	(bad)  
  40c6a2:	xchg   ebp,eax
  40c6a3:	jge    0x40c69c
  40c6a5:	call   0xc1c3c410
  40c6aa:	cmp    BYTE PTR ds:0x945f6a06,ch
  40c6b0:	(bad)  
  40c6b1:	cmp    ebx,DWORD PTR [edi+0x78a0bfd5]
  40c6b7:	cli    
  40c6b8:	push   DWORD PTR [ebx+0x0]
  40c6bb:	dec    edi
  40c6bc:	xchg   esp,eax
  40c6bd:	dec    edi
  40c6be:	sahf   
  40c6bf:	push   edi
  40c6c0:	clc    
  40c6c1:	out    0xa0,eax
  40c6c3:	repz mov ds:0x2b7ae2fe,al
  40c6c9:	push   es
  40c6ca:	push   0x17
  40c6cc:	xchg   esp,eax
  40c6cd:	push   ebx
  40c6cf:	fs aad 0xbf
  40c6d2:	mov    al,ds:0x5bfffa78
  40c6d7:	pop    ss
  40c6d8:	xchg   esp,eax
  40c6d9:	dec    edi
  40c6da:	popw   ds
  40c6dc:	clc    
  40c6dd:	out    0x8c,eax
  40c6df:	repz mov ds:0xe2926afe,al
  40c6e5:	je     0x40c6ce
  40c6e7:	mov    ecx,0x5fe9ec24
  40c6ec:	cli    
  40c6ed:	sub    ch,BYTE PTR [ecx]
  40c6ef:	jecxz  0x40c6b0
  40c6f1:	pop    es
  40c6f2:	jmp    0x9a2d039e
  40c6f7:	(bad)  [eax+ecx*1]
  40c6fa:	adc    DWORD PTR [edx-0x46e100b8],ebp
  40c700:	test   eax,0x7efc9c1f
  40c705:	jl     0x40c704
  40c707:	cmp    ebp,DWORD PTR [ebx]
  40c709:	push   es
  40c70a:	add    BYTE PTR [ebx],cl
  40c70c:	mov    esi,0xfde8c2c7
  40c711:	mov    WORD PTR [ebp+0x34],es
  40c714:	dec    ebp
  40c715:	push   DWORD PTR [ebp-0x28]
  40c718:	test   DWORD PTR [ecx+0x59],esi
  40c71b:	xlat   BYTE PTR ds:[ebx]
  40c71c:	pop    ebp
  40c71d:	cmp    eax,0x6073000
  40c723:	and    DWORD PTR [ebp+0x70],0xfffffffe
  40c727:	je     0x40c6c7
  40c729:	xchg   edx,eax
  40c72a:	mov    esi,0xfff4e2c9
  40c72f:	mov    WORD PTR [ebp+0x70],ds
  40c732:	dec    esi
  40c733:	push   0x30
  40c735:	pop    ebp
  40c736:	jae    0x40c740
  40c738:	js     0x40c717
  40c73a:	pop    eax
  40c73b:	call   edi
  40c73d:	pop    DWORD PTR [ebx-0x14]
  40c740:	inc    eax
  40c741:	pop    ebp
  40c742:	jae    0x40c74c
  40c744:	mov    eax,0xc7ff566d
  40c749:	jns    0x40c741
  40c74b:	add    DWORD PTR [edx-0xe],esi
  40c74e:	cmp    al,0x53
  40c751:	push   es
  40c752:	push   es
  40c753:	and    DWORD PTR [ebp+0x51],0xfffffffe
  40c757:	je     0x40c7b7
  40c759:	xchg   edx,eax
  40c75a:	mov    esi,0xfff422c9
  40c75f:	mov    ds:0x40d698,al
  40c764:	aad    0x36
  40c766:	in     al,dx
  40c767:	push   eax
  40c768:	cli    
  40c769:	xchg   esp,eax
  40c76a:	std    
  40c76b:	jne    0x40c795
  40c76d:	push   ebp
  40c76e:	dec    eax
  40c76f:	pop    ecx
  40c770:	addr16 pop ebp
  40c772:	lds    bx,DWORD PTR [edi-0x2272ffc4]
  40c779:	push   eax
  40c77a:	dec    esi
  40c77b:	push   0x21
  40c77d:	pop    esi
  40c77e:	jae    0x40c78c
  40c780:	daa    
  40c781:	pop    es
  40c782:	or     al,ch
  40c784:	add    BYTE PTR [ecx],bh
  40c786:	jnp    0x40c720
  40c788:	(bad)  
  40c789:	neg    bh
  40c78b:	lds    eax,FWORD PTR [edi]
  40c78d:	cmp    DWORD PTR [ebp+ecx*4-0x60254515],eax
  40c794:	mov    WORD PTR [ebx+ebp*4+0x32],?
  40c798:	call   0xfee253fd
  40c79d:	into   
  40c79e:	inc    ebx
  40c79f:	mov    al,ds:0xaa934cfe
  40c7a4:	dec    esi
  40c7a5:	retfw  0xaa1
  40c7a9:	jns    0x40c7f5
  40c7ab:	adc    edi,edi
  40c7ad:	and    al,0xaf
  40c7af:	mov    eax,ds:0xddcea574
  40c7b4:	std    
  40c7b5:	sahf   
  40c7b6:	imul   ecx,DWORD PTR ds:0xa1970cc0,0x228e8d74
  40c7c0:	push   ebp
  40c7c1:	xchg   BYTE PTR [ecx-0x68d23e35],al
  40c7c7:	aaa    
  40c7c8:	mov    esp,DWORD PTR [ebp+0x71]
  40c7cb:	pop    ss
  40c7cc:	or     al,0x61
  40c7ce:	gs and al,0xff
  40c7d1:	lods   ax,WORD PTR ds:[esi]
  40c7d3:	ret    0x1a73
  40c7d6:	sub    bl,BYTE PTR [eax]
  40c7d8:	adc    cl,ch
  40c7da:	jle    0x40c7a8
  40c7dc:	pusha  
  40c7dd:	dec    esi
  40c7de:	sbb    DWORD PTR [ebx],esi
  40c7e0:	push   0x425cb1
  40c7e5:	ds ret 
  40c7e7:	cli    
  40c7e8:	inc    BYTE PTR [eax]
  40c7ea:	lods   al,BYTE PTR ds:[esi]
  40c7eb:	xchg   ebp,eax
  40c7ec:	xor    bh,bh
  40c7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ef:	xchg   ecx,eax
  40c7f0:	stos   BYTE PTR es:[edi],al
  40c7f1:	in     eax,0xb9
  40c7f3:	fisub  WORD PTR [ecx-0x5e8b2319]
  40c7f9:	inc    BYTE PTR [eax]
  40c7fb:	in     al,dx
  40c7fc:	idiv   bh
  40c7fe:	add    BYTE PTR gs:[edx-0x51],dh
  40c802:	sahf   
  40c803:	add    cl,ch
  40c805:	mov    dl,0xbc
  40c807:	sub    BYTE PTR [ecx],ch
  40c809:	inc    esi
  40c80a:	js     0x40c80c
  40c80c:	push   cs
  40c80d:	sbb    BYTE PTR ds:0x6da2e32a,bh
  40c813:	or     BYTE PTR [ecx],dl
  40c815:	push   ebx
  40c816:	fistp  WORD PTR [edi+0x392af5]
  40c81c:	(bad)  
  40c81d:	pusha  
  40c81e:	push   esi
  40c81f:	leave  
  40c820:	sub    DWORD PTR [ebx+0x39],eax
  40c823:	lahf   
  40c824:	push   ebx
  40c825:	adc    BYTE PTR [ebx-0x6],dl
  40c828:	aad    0x17
  40c82a:	inc    ecx
  40c82b:	test   al,0x6f
  40c82d:	mov    eax,ds:0x4509faf
  40c832:	cmp    DWORD PTR [edi+0x43792c7e],ebp
  40c838:	sub    BYTE PTR [esi+edx*4],al
  40c83b:	adc    eax,0x9f2d2ddd
  40c840:	sbb    ecx,DWORD PTR [ecx+edx*4]
  40c843:	sbb    BYTE PTR [ebp-0x16d7805f],0x3
  40c84a:	pop    si
  40c84c:	add    bl,cl
  40c84e:	add    bl,bh
  40c850:	inc    eax
  40c851:	jmp    0x134cb5f6
  40c856:	add    BYTE PTR [esi+0x15],bl
  40c859:	loope  0x40c806
  40c85b:	jecxz  0x40c7fb
  40c85d:	ins    DWORD PTR es:[edi],dx
  40c85e:	mov    eax,ds:0xb0e8ffd6
  40c863:	test   BYTE PTR [eax],ch
  40c865:	sub    DWORD PTR [ebp-0x8],eax
  40c868:	call   DWORD PTR [ebp+0x17]
  40c86b:	inc    ebp
  40c86c:	sub    cl,BYTE PTR [edx]
  40c86e:	mov    eax,ds:0x385108a5
  40c873:	es lahf 
  40c875:	cmp    eax,0x392c
  40c87a:	inc    esi
  40c87b:	fwait
  40c87c:	daa    
  40c87d:	leave  
  40c87e:	stos   BYTE PTR es:[edi],al
  40c87f:	jnp    0x40c881
  40c881:	call   FWORD PTR [esi+esi*1+0x261e232a]
  40c888:	or     al,ch
  40c88a:	aam    0x99
  40c88c:	popf   
  40c88d:	(bad)  
  40c88e:	and    bh,dh
  40c890:	push   es
  40c891:	add    BYTE PTR [ebp+esi*4-0x66da7d56],bl
  40c898:	sub    BYTE PTR [eax],al
  40c89a:	sub    esp,0xffffff9d
  40c89d:	je     0x40c880
  40c89f:	mov    ds:0x99e65a4c,al
  40c8a4:	xchg   DWORD PTR [ebp+ebx*8+0x12],eax
  40c8a8:	and    DWORD PTR [eax+ebp*1+0x3d],eax
  40c8ac:	lahf   
  40c8ad:	je     0x40c890
  40c8af:	loop   0x40c8fc
  40c8b1:	inc    esi
  40c8b3:	add    cl,bl
  40c8b5:	popf   
  40c8b6:	je     0x40c875
  40c8b8:	fst    DWORD PTR [ebx]
  40c8ba:	or     cl,al
  40c8bc:	xor    edi,DWORD PTR [edx]
  40c8be:	jmp    FWORD PTR [esi-0x16fc3f7d]
  40c8c4:	dec    edi
  40c8c5:	mov    ebp,ebx
  40c8c7:	push   0x76
  40c8c9:	call   0x14fe:0xd324e969
  40c8d0:	cmp    eax,0x98231ca8
  40c8d5:	popf   
  40c8d6:	mov    BYTE PTR [ecx+ebx*4],ah
  40c8d9:	es jo  0x40c909
  40c8dc:	cli    
  40c8dd:	(bad)  
  40c8de:	(bad)  
  40c8df:	hlt    
  40c8e0:	inc    edx
  40c8e1:	test   al,0x1b
  40c8e3:	cwd    
  40c8e5:	popf   
  40c8e6:	(bad)  
  40c8e7:	aam    0x9e
  40c8e9:	popf   
  40c8ea:	je     0x40c8cd
  40c8ec:	loop   0x40c933
  40c8ee:	pop    edx
  40c8ef:	dec    esi
  40c8f0:	fxch   st(0)
  40c8f2:	rol    DWORD PTR [eax],0x14
  40c8f5:	add    dl,BYTE PTR [ebp-0x75]
  40c8f8:	ins    BYTE PTR es:[edi],dx
  40c8f9:	test   dl,al
  40c8fb:	clc    
  40c8fc:	cli    
  40c8fd:	add    DWORD PTR [edx+0x34],ebp
  40c900:	pop    edi
  40c901:	test   BYTE PTR [edi],0xe8
  40c904:	sub    al,0xda
  40c906:	(bad)  
  40c907:	dec    DWORD PTR [ecx-0x359703ba]
  40c90d:	inc    ebp
  40c90e:	inc    ecx
  40c90f:	add    BYTE PTR [edi],bh
  40c911:	test   BYTE PTR [edi],0xe8
  40c914:	dec    ebx
  40c915:	pop    edi
  40c916:	std    
  40c917:	inc    DWORD PTR [eax]
  40c919:	retf   0x6801
  40c91c:	call   0x4556:0x680042a4
  40c923:	inc    ecx
  40c924:	add    bh,bl
  40c926:	mov    bh,0x5a
  40c928:	sub    DWORD PTR [ecx],edx
  40c92a:	add    al,0xe8
  40c92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c92d:	outs   dx,DWORD PTR ds:[esi]
  40c92e:	jge    0x40c92d
  40c930:	or     esp,eax
  40c932:	clc    
  40c933:	mov    DWORD PTR ds:[ebp+0x7c],edx
  40c937:	data16 mov BYTE PTR [edx-0x5f97ffbc],bh
  40c93e:	add    edi,ebp
  40c940:	mov    esi,0x4141c3f8
  40c945:	nop
  40c946:	jle    0x40c9bb
  40c948:	clc    
  40c949:	lahf   
  40c94a:	test   DWORD PTR [edi],0xfefcf0e8
  40c950:	(bad)  
  40c951:	cmp    BYTE PTR [eax+edi*4-0x16afc0],cl
  40c958:	jmp    FWORD PTR [edi+0x23c9673e]
  40c95e:	inc    ebx
  40c95f:	add    bh,bh
  40c961:	inc    ebp
  40c962:	jns    0x40c961
  40c964:	jne    0x40c9ae
  40c966:	imul   esi,DWORD PTR [edi+edi*2-0x21],0x3975fd7c
  40c96e:	das    
  40c96f:	lods   al,BYTE PTR ds:[esi]
  40c970:	dec    ecx
  40c971:	lea    ecx,[esi-0x61]
  40c974:	(bad)  
  40c975:	lods   al,BYTE PTR ds:[esi]
  40c976:	inc    ebx
  40c977:	lahf   
  40c978:	je     0x40c9ab
  40c97a:	das    
  40c97b:	popa   
  40c97c:	pop    eax
  40c97d:	add    BYTE PTR [esi],dl
  40c97f:	(bad)  
  40c980:	int3   
  40c981:	shl    DWORD PTR ds:0x158b37a7,0x2a
  40c988:	enter  0x93fb,0xa7
  40c98c:	sub    BYTE PTR ds:0xe80a7bf6,dh
  40c992:	pop    eax
  40c993:	push   eax
  40c994:	popf   
  40c995:	(bad)  
  40c996:	mov    al,0x6b
  40c998:	sahf   
  40c999:	addr16 xchg edi,eax
  40c99b:	bound  eax,QWORD PTR [ebx+0x0]
  40c99e:	(bad)  
  40c99f:	sbb    ecx,DWORD PTR [ebx]
  40c9a1:	call   0xfede76ff
  40c9a6:	(bad)  
  40c9a7:	cmp    esp,DWORD PTR [eax-0x5570bb02]
  40c9ad:	mov    edx,DWORD PTR [eax]
  40c9af:	mov    dh,0x9d
  40c9b1:	enter  0xa27b,0x2
  40c9b5:	push   ebp
  40c9b6:	mov    dl,0xb2
  40c9b8:	add    ebx,0x6a04309d
  40c9be:	dec    edi
  40c9bf:	push   esi
  40c9c0:	pop    ss
  40c9c1:	or     BYTE PTR [ecx-0x7900c46a],ah
  40c9c7:	cmovs  edi,esp
  40c9ca:	adc    DWORD PTR [esi+0x47],ecx
  40c9cd:	inc    ecx
  40c9ce:	cmp    DWORD PTR [esi+0x17],esi
  40c9d1:	or     BYTE PTR [ecx+0x5d],ah
  40c9d4:	pushf  
  40c9d5:	(bad)  
  40c9d6:	test   WORD PTR [edi],dx
  40c9d9:	cld    
  40c9da:	pop    esi
  40c9db:	xchg   ebx,eax
  40c9dc:	or     ch,al
  40c9de:	repnz out dx,eax
  40c9e0:	sahf   
  40c9e1:	inc    BYTE PTR [eax]
  40c9e3:	sub    BYTE PTR [eax+0x6],0x0
  40c9e7:	in     al,dx
  40c9e8:	push   DWORD PTR [ecx-0x51]
  40c9eb:	mov    ebx,0x39295cc3
  40c9f0:	es push ds
  40c9f2:	lahf   
  40c9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f4:	or     BYTE PTR [ecx-0x62],al
  40c9f7:	mov    ds,WORD PTR [ebx-0x638a73bb]
  40c9fd:	rcr    BYTE PTR [edx+edi*2+0x41],1
  40ca01:	jmp    0x41494fa4
  40ca06:	popf   
  40ca07:	add    eax,0x859e259c
  40ca0c:	pushf  
  40ca0d:	sbb    eax,0xc2a84118
  40ca12:	cmp    al,0xee
  40ca14:	fwait
  40ca15:	pop    ds
  40ca16:	sar    DWORD PTR [edx],0x0
  40ca19:	pushf  
  40ca1a:	mov    dl,dl
  40ca1c:	jg     0x40ca42
  40ca1e:	lahf   
  40ca1f:	pusha  
  40ca20:	add    BYTE PTR [ebx-0x1eea3025],al
  40ca26:	stos   DWORD PTR es:[edi],eax
  40ca27:	hlt    
  40ca28:	cmp    dh,ah
  40ca2a:	popf   
  40ca2b:	mov    cl,0x45
  40ca2d:	(bad)  [eax+edi*2]
  40ca30:	inc    esp
  40ca31:	sub    BYTE PTR [esi+ebp*4],al
  40ca34:	adc    eax,0x9d75abe1
  40ca39:	lds    ebx,FWORD PTR [ebp-0x6242ea61]
  40ca3f:	or     eax,0xe69bc108
  40ca44:	call   0xe904:0x7800cbad
  40ca4b:	ss mov dl,0xac
  40ca4e:	popf   
  40ca4f:	pop    ss
  40ca50:	inc    ebp
  40ca51:	test   al,0x51
  40ca53:	cmp    eax,0xc3e19b6e
  40ca58:	jmp    0xe940:0xfab810fc
  40ca5f:	xor    esp,DWORD PTR [ecx+0x30]
  40ca62:	add    BYTE PTR [esi],dl
  40ca64:	lods   al,BYTE PTR ds:[esi]
  40ca65:	call   0x664f:0xf02e6e4f
  40ca6c:	es or  al,ch
  40ca6f:	push   esi
  40ca70:	out    dx,eax
  40ca71:	cdq    
  40ca72:	inc    BYTE PTR [ecx-0x80]
  40ca75:	aaa    
  40ca76:	dec    DWORD PTR [esi-0xe]
  40ca79:	ror    BYTE PTR [ebx],0xe9
  40ca7c:	addr16 xchg ebx,ebp
  40ca7f:	push   0x1
  40ca81:	xchg   ebx,eax
  40ca82:	push   esi
  40ca83:	ret    
  40ca84:	cmp    ah,BYTE PTR [esi]
  40ca86:	cmp    DWORD PTR [esi],ebp
  40ca88:	cs or  al,ch
  40ca8b:	xchg   ebp,eax
  40ca8c:	inc    edx
  40ca8d:	fwait
  40ca8e:	(bad)  
  40ca8f:	jo     0x40cb0f
  40ca91:	pushf  
  40ca92:	mov    dl,ah
  40ca94:	inc    edi
  40ca95:	call   0xd9fbb3da
  40ca9a:	(bad)  
  40ca9b:	jl     0x40cadb
  40ca9d:	sub    bl,cl
  40ca9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caa0:	jnp    0x40caa2
  40caa2:	push   edi
  40caa3:	add    DWORD PTR [esp+ebp*8-0x1],esp
  40caa7:	call   0x46b48add
  40caac:	add    BYTE PTR [eax+ebp*4],al
  40caaf:	fld    DWORD PTR [ebp-0x2c]
  40cab2:	cdq    
  40cab3:	or     ch,BYTE PTR [ecx+0x24893546]
  40cab9:	lds    ebx,FWORD PTR [ecx-0x9af3e8c]
  40cabf:	(bad)  
  40cac0:	xor    al,0x45
  40cac2:	test   al,0x85
  40cac4:	mov    dh,0xad
  40cac6:	cdq    
  40cac7:	(bad)  
  40cac8:	xor    al,0xa5
  40caca:	sub    BYTE PTR [esi+eiz*4],bl
  40cacd:	daa    
  40cace:	or     al,ch
  40cad0:	and    ah,dl
  40cad2:	cdq    
  40cad3:	(bad)  
  40cad4:	xchg   esi,eax
  40cad5:	inc    edi
  40cad6:	cwde   
  40cad7:	imul   ecx,edx,0x813c5
  40cadd:	enter  0xfeea,0xff
  40cae1:	xlat   BYTE PTR ds:[ebx]
  40cae2:	out    0xdd,al
  40cae4:	inc    esp
  40cae5:	and    DWORD PTR [edi+edi*8],eax
  40cae8:	jne    0x40cab2
  40caea:	data16 jae 0x40cb4b
  40caed:	xlat   BYTE PTR ds:[ebx]
  40caee:	jnp    0x40caf9
  40caf0:	ror    BYTE PTR [eax+edx*4],0x4e
  40caf4:	dec    DWORD PTR ds:0xdff4e76
  40cafa:	push   es
  40cafb:	call   0xfdbd096c
  40cb00:	call   0x3fa265
  40cb05:	inc    edi
  40cb06:	repnz imul eax
  40cb09:	mov    bh,dl
  40cb0b:	(bad)  
  40cb0c:	call   DWORD PTR [eax+esi*4-0x42]
  40cb10:	mov    ecx,0xfd7c5700
  40cb15:	call   DWORD PTR [edx+0x2b]
  40cb18:	aaa    
  40cb19:	pop    es
  40cb1a:	int    0x81
  40cb1c:	std    
  40cb1d:	jne    0x40cb53
  40cb1f:	jl     0x40cb94
  40cb21:	or     BYTE PTR [eax],ch
  40cb23:	call   0xc2c8:0xd5c7ff56
  40cb2a:	fdiv   st(5),st
  40cb2c:	push   esp
  40cb2d:	mov    esp,esp
  40cb2f:	jne    0x40cba4
  40cb31:	or     al,0x88
  40cb33:	push   esi
  40cb34:	pop    esp
  40cb35:	inc    DWORD PTR [edi-0x6a8b3ff7]
  40cb3b:	in     eax,0xec
  40cb3d:	inc    esp
  40cb3e:	push   ecx
  40cb3f:	add    al,0x50
  40cb41:	call   0x3fa199
  40cb46:	xor    BYTE PTR [ebp+0x73],dh
  40cb49:	adc    BYTE PTR [eax],ah
  40cb4b:	jne    0x40cbc0
  40cb4d:	or     BYTE PTR [eax-0x28002b66],ch
  40cb53:	ins    BYTE PTR es:[edi],dx
  40cb54:	ins    BYTE PTR es:[edi],dx
  40cb55:	pop    edx
  40cb56:	cmp    DWORD PTR [edx-0x66],esi
  40cb59:	enter  0xbb7b,0x2
  40cb5d:	push   ebp
  40cb5e:	mov    dl,0x73
  40cb60:	xchg   bl,al
  40cb62:	push   ecx
  40cb63:	repnz sub eax,0x994ce300
  40cb69:	je     0x40cb9c
  40cb6b:	jg     0x40caf7
  40cb6d:	push   esi
  40cb6e:	and    cl,BYTE PTR ds:[ebp-0x26f1cabc]
  40cb75:	je     0x40cb77
  40cb77:	popa   
  40cb78:	push   0xa7668002
  40cb7d:	push   cs
  40cb7e:	pop    ecx
  40cb7f:	xchg   ecx,eax
  40cb80:	das    
  40cb81:	inc    eax
  40cb82:	inc    ecx
  40cb83:	cmp    DWORD PTR [edx-0x56],esi
  40cb86:	fstp   DWORD PTR [ebp-0x59]
  40cb89:	add    cl,BYTE PTR [ebx]
  40cb8b:	stc    
  40cb8c:	push   edx
  40cb8d:	(bad)  
  40cb8e:	push   esi
  40cb8f:	adc    esp,esp
  40cb91:	es push esi
  40cb94:	(bad)  
  40cb95:	ret    0x2b73
  40cb98:	and    BYTE PTR [ecx-0x8],al
  40cb9b:	out    0x73,al
  40cb9d:	call   0xe108:0x11024369
  40cba4:	and    BYTE PTR [ebx+0xf91cefe],bl
  40cbaa:	clc    
  40cbab:	push   ebx
  40cbac:	retf   
  40cbad:	cdq    
  40cbae:	je     0x40cbe1
  40cbb0:	scas   eax,DWORD PTR es:[edi]
  40cbb1:	sbb    edi,edi
  40cbb3:	mov    dh,0xb9
  40cbb5:	cdq    
  40cbb6:	je     0x40cb69
  40cbb8:	cmp    al,0xe7
  40cbba:	(bad)  
  40cbbb:	sub    al,0x9f
  40cbbd:	stos   BYTE PTR es:[edi],al
  40cbbe:	imul   ebx,DWORD PTR [esi+0xcfe99c1],0xffffffbf
  40cbc5:	stos   BYTE PTR es:[edi],al
  40cbc6:	std    
  40cbc7:	lock push ecx
  40cbc9:	cdq    
  40cbca:	sti    
  40cbcb:	dec    edx
  40cbcc:	addr16 pop ebx
  40cbce:	(bad)  
  40cbcf:	jle    0x40cbd0
  40cbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbd2:	call   0x60e4:0x2e06968
  40cbd9:	xchg   ebp,eax
  40cbda:	adc    BYTE PTR [eax],al
  40cbdc:	gs cwde 
  40cbde:	adc    ecx,DWORD PTR [ecx+edx*2]
  40cbe1:	sbb    al,0x1e
  40cbe3:	fwait
  40cbe4:	push   edi
  40cbe5:	cmp    BYTE PTR [eax+0x1c003ac5],dh
  40cbeb:	(bad)  
  40cbec:	push   edx
  40cbed:	jl     0x40cb93
  40cbef:	xchg   edi,eax
  40cbf0:	out    0x25,eax
  40cbf2:	jmp    0xd3d83e24
  40cbf7:	or     esp,DWORD PTR [ecx]
  40cbf9:	(bad)  
  40cbfa:	mov    ebp,0xa38a279a
  40cbff:	xchg   edi,eax
  40cc00:	mov    bl,0xd5
  40cc02:	mov    ebx,0x690079eb
  40cc07:	fimul  DWORD PTR [esi]
  40cc09:	adc    al,0xa9
  40cc0b:	sub    eax,DWORD PTR [ecx]
  40cc0d:	cmp    eax,0xa86603a8
  40cc12:	mov    eax,0xf197f6e7
  40cc17:	ret    
  40cc18:	push   0xffffffe3
  40cc1a:	mov    ebp,0xe236bab
  40cc1f:	call   0x2886:0xfc7cc033
  40cc26:	jmp    0x8097aa2e
  40cc2b:	add    eax,0x33e9417c
  40cc30:	mov    esi,0x19abf10d
  40cc35:	push   ss
  40cc36:	ficomp WORD PTR [ecx-0x66d07a6a]
  40cc3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc3d:	xchg   esp,eax
  40cc3e:	sbb    esp,eax
  40cc40:	add    cl,ah
  40cc42:	xchg   edi,eax
  40cc43:	lds    ebx,FWORD PTR [ecx-0x23716d69]
  40cc49:	aaa    
  40cc4a:	or     eax,0xca0a900
  40cc4f:	cld    
  40cc50:	scas   al,BYTE PTR es:[edi]
  40cc51:	cs or  al,ch
  40cc54:	fwait
  40cc55:	sub    edx,DWORD PTR [edi-0x3e7dc102]
  40cc5b:	add    ebp,ecx
  40cc5d:	pop    ss
  40cc5e:	mov    ebp,ebx
  40cc60:	push   0x79
  40cc62:	lahf   
  40cc63:	add    ah,0xf4
  40cc66:	in     al,0x40
  40cc68:	jmp    0xa044d9a7
  40cc6d:	jg     0x40cc7a
  40cc6f:	add    BYTE PTR [ebx],al
  40cc71:	xor    eax,0xd1d3002a
  40cc76:	xchg   ebp,eax
  40cc77:	je     0x40cc66
  40cc79:	pop    esp
  40cc7a:	add    BYTE PTR [edx-0x17],ch
  40cc7d:	rcr    ah,cl
  40cc7f:	sub    ch,cl
  40cc81:	cmp    cl,BYTE PTR [ecx+0xbb04144]
  40cc87:	clc    
  40cc88:	push   ecx
  40cc89:	dec    ebx
  40cc8a:	cmp    edi,edi
  40cc8c:	ss mov dl,0x3b
  40cc8f:	cld    
  40cc90:	cs cs cwde 
  40cc93:	(bad)  
  40cc94:	pushf  
  40cc95:	into   
  40cc96:	sub    bh,bh
  40cc98:	push   ds
  40cc99:	ds add al,0x6a
  40cc9c:	jmp    0xe628ccb5
  40cca1:	int    0x96
  40cca3:	(bad)  
  40cca4:	je     0x40cca6
  40cca6:	push   ss
  40cca7:	mov    WORD PTR [edi-0x6d],cs
  40ccaa:	cmp    ch,BYTE PTR [edx]
  40ccac:	add    BYTE PTR [ebx-0x11ffd734],al
  40ccb2:	das    
  40ccb3:	xchg   esp,eax
  40ccb4:	(bad)  
  40ccb5:	cld    
  40ccb6:	adc    al,0xe5
  40ccb8:	inc    eax
  40ccb9:	jmp    0x614f23ed
  40ccbe:	mov    dl,0x96
  40ccc0:	(bad)  
  40ccc1:	jmp    0x134f873
  40ccc6:	or     ecx,DWORD PTR [ebp-0x2d2fba75]
  40cccc:	imul   eax,DWORD PTR [eax],0x688dfa
  40ccd2:	clc    
  40ccd3:	mov    al,ds:0x77604143
  40ccd8:	jae    0x40ccce
  40ccda:	iret   
  40ccdb:	int3   
  40ccdc:	jne    0xff9fc772
  40cce2:	inc    ebp
  40cce3:	ins    BYTE PTR es:[edi],dx
  40cce4:	out    0xab,al
  40cce6:	xor    BYTE PTR [ecx-0x3],bh
  40cce9:	mov    DWORD PTR ds:0x44c00964,edx
  40ccef:	dec    edx
  40ccf0:	push   DWORD PTR [ebp-0x48]
  40ccf3:	push   0xffffffeb
  40ccf5:	pop    eax
  40ccf6:	lahf   
  40ccf7:	js     0x40cc80
  40ccf9:	inc    ebp
  40ccfa:	jl     0x40cd74
  40ccfc:	jae    0x40ccee
  40ccfe:	js     0x40cd2b
  40cd00:	push   ecx
  40cd01:	jmp    FWORD PTR [edi+0x78]
  40cd04:	jae    0x40ccee
  40cd06:	jg     0x40cd0e
  40cd08:	in     al,dx
  40cd09:	inc    DWORD PTR [eax]
  40cd0b:	lds    esi,FWORD PTR [ecx-0x1a]
  40cd0e:	sub    al,0xa1
  40cd10:	js     0x40cd0f
  40cd12:	or     edx,DWORD PTR [eax+0x5]
  40cd15:	sbb    ebp,DWORD PTR [eax-0x20]
  40cd18:	add    edi,ebp
  40cd1a:	mov    esi,0xe808064f
  40cd1f:	add    eax,0x2ffffee7
  40cd24:	push   es
  40cd25:	call   0xfd9e2329
  40cd2a:	jne    0x40ccf4
  40cd2c:	imul   ebx,DWORD PTR [ebx+0x55],0x75fd6dcf
  40cd33:	mov    esp,0x9f58946a
  40cd38:	ins    DWORD PTR es:[edi],dx
  40cd39:	std    
  40cd3a:	jne    0x40cccc
  40cd3c:	fs stc 
  40cd3e:	dec    edi
  40cd3f:	cmp    DWORD PTR [esi-0x54fb756a],ebp
  40cd45:	mov    dl,BYTE PTR [ecx]
  40cd47:	xchg   esi,eax
  40cd48:	aam    0x8f
  40cd4a:	(bad)  
  40cd4b:	jmp    0x40ccdb
  40cd4d:	xchg   ebp,eax
  40cd4e:	je     0x40ccd5
  40cd50:	mov    edi,0x667e581a
  40cd55:	int3   
  40cd56:	rol    DWORD PTR [ebp-0x59],0x2f
  40cd5a:	mov    ebx,DWORD PTR [ebp+0x76]
  40cd5d:	adc    BYTE PTR [ecx+edx*2],cl
  40cd60:	xor    bh,BYTE PTR [eax]
  40cd62:	call   FWORD PTR [esi-0x5e]
  40cd65:	ret    0x2073
  40cd68:	out    dx,eax
  40cd69:	pop    es
  40cd6a:	inc    ebp
  40cd6b:	clc    
  40cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd6d:	xor    ch,al
  40cd6f:	add    cl,ch
  40cd71:	jmp    0xbf44:0xfee9fe96
  40cd78:	jns    0x40cd21
  40cd7a:	sub    al,BYTE PTR [eax]
  40cd7c:	cmp    DWORD PTR [esi+0x56],eax
  40cd7f:	addr16 pop ebx
  40cd81:	fs inc ebx
  40cd83:	add    BYTE PTR [ecx+0x21081146],cl
  40cd89:	scas   eax,DWORD PTR es:[edi]
  40cd8a:	sbb    edi,edi
  40cd8c:	push   cs
  40cd8d:	das    
  40cd8e:	xlat   BYTE PTR ds:[ebx]
  40cd8f:	push   edi
  40cd90:	push   es
  40cd91:	into   
  40cd92:	xchg   esi,eax
  40cd93:	je     0x40cdc2
  40cd95:	aas    
  40cd96:	jle    0x40cdf3
  40cd98:	neg    ch
  40cd9a:	or     al,al
  40cd9c:	gs mov al,0x2a
  40cd9f:	adc    edi,DWORD PTR [eax+ebp*2+0x2]
  40cda3:	push   eax
  40cda4:	rcl    DWORD PTR [ecx+0x76d6ff36],1
  40cdaa:	sub    al,BYTE PTR [ecx-0x72]
  40cdad:	data16 add ch,BYTE PTR [eax+0x39]
  40cdb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdb3:	mov    ebp,0x413fc951
  40cdb8:	cmp    DWORD PTR [eax],eax
  40cdba:	cmp    DWORD PTR [edi-0x2d2ef7db],edx
  40cdc0:	and    edx,DWORD PTR [ebp+0x3830abd5]
  40cdc6:	into   
  40cdc7:	xchg   esi,eax
  40cdc8:	add    ecx,0x88e403f0
  40cdce:	int3   
  40cdcf:	cmp    BYTE PTR [edx-0x6d],0x42
  40cdd3:	add    al,0x0
  40cdd5:	adc    edx,esp
  40cdd7:	lods   eax,DWORD PTR ds:[esi]
  40cdd8:	adc    BYTE PTR [ecx-0x58],al
  40cddb:	aam    0x30
  40cddd:	outs   dx,BYTE PTR ds:[esi]
  40cdde:	xchg   esp,eax
  40cddf:	outs   dx,DWORD PTR ds:[esi]
  40cde0:	inc    eax
  40cde1:	gs sub ebx,esi
  40cde4:	xchg   esi,eax
  40cde5:	in     eax,0x7
  40cde7:	adc    DWORD PTR [ebx],0x29859456
  40cded:	sbb    dl,BYTE PTR [ebp+0x1d510bf3]
  40cdf3:	jbe    0x40cd8b
  40cdf5:	aas    
  40cdf6:	sub    ebp,ecx
  40cdf8:	xchg   esi,eax
  40cdf9:	lods   eax,DWORD PTR ds:[esi]
  40cdfa:	or     BYTE PTR [ecx+0x37],dl
  40cdfd:	cs xchg esp,eax
  40cdff:	pop    ebp
  40ce00:	xchg   esi,eax
  40ce01:	lods   eax,DWORD PTR ds:[esi]
  40ce02:	xchg   esp,eax
  40ce03:	push   ebp
  40ce04:	adc    BYTE PTR [ecx],dh
  40ce06:	test   al,0xa6
  40ce08:	xor    BYTE PTR [esi],dl
  40ce0a:	xchg   esp,eax
  40ce0b:	das    
  40ce0c:	sar    DWORD PTR [edx],0x0
  40ce0f:	xchg   esp,eax
  40ce10:	mov    dl,BYTE PTR [edx]
  40ce12:	xchg   esp,eax
  40ce13:	mov    ebx,0x8d091107
  40ce18:	xchg   esi,eax
  40ce19:	test   DWORD PTR [edi],0x28150f29
  40ce1f:	loopne 0x40ce61
  40ce21:	js     0x40ce23
  40ce23:	mov    ecx,0xe37bdab
  40ce28:	xchg   esi,eax
  40ce29:	xchg   BYTE PTR [eax],ch
  40ce2b:	jmp    0x9093ac33
  40ce30:	inc    edi
  40ce31:	jl     0x40ce74
  40ce33:	add    cl,ch
  40ce35:	or     dl,BYTE PTR [ebx-0x1dff1e8c]
  40ce3b:	sbb    al,0x7c
  40ce3d:	out    0xc4,al
  40ce3f:	fwait
  40ce40:	nop
  40ce41:	ss int3 
  40ce43:	xchg   edx,eax
  40ce44:	enter  0x2dab,0x0
  40ce48:	push   ebp
  40ce49:	(bad)  {k3}{z}
  40ce4e:	arpl   WORD PTR [eax],ax
  40ce50:	push   0xfffffffc
  40ce52:	lods   eax,DWORD PTR ds:[esi]
  40ce53:	or     al,0x8
  40ce55:	shr    eax,0x2e
  40ce58:	jmp    FWORD PTR [esi+0x13fc3cc2]
  40ce5e:	jae    0x40cdf2
  40ce60:	je     0x40ce53
  40ce62:	xchg   edx,eax
  40ce63:	imul   edi,esi,0x2329c496
  40ce69:	mov    es,WORD PTR [esi+0x8]
  40ce6c:	call   0xfed372ba
  40ce71:	adc    eax,DWORD PTR [ecx-0x6e]
  40ce74:	je     0x40ce57
  40ce76:	xchg   edx,eax
  40ce77:	ins    DWORD PTR es:[edi],dx
  40ce78:	(bad)  
  40ce79:	outs   dx,BYTE PTR ds:[esi]
  40ce7a:	int3   
  40ce7b:	xchg   ecx,eax
  40ce7c:	je     0x40cee3
  40ce7e:	les    ecx,FWORD PTR [ebx]
  40ce80:	or     BYTE PTR [ecx-0x2],dl
  40ce83:	call   DWORD PTR cs:[esi-0xe]
  40ce87:	rol    BYTE PTR [ebx],0xe9
  40ce8a:	addr16 xchg ebx,ebp
  40ce8d:	push   0xfffffff9
  40ce8f:	mov    dl,BYTE PTR [esi-0x2d]
  40ce92:	cmp    ah,BYTE PTR [esi]
  40ce94:	ds ss cs or al,ch
  40ce99:	mov    ecx,0x70fe9326
  40ce9e:	add    BYTE PTR [esi],ch
  40cea0:	xchg   esp,eax
  40cea1:	mov    bl,ah
  40cea3:	aaa    
  40cea4:	call   0xd1fbb7e9
  40cea9:	call   DWORD PTR [ebp+edx*1-0x62ffabd8]
  40ceb0:	cmp    eax,0x39285700
  40ceb5:	sub    BYTE PTR [eax],al
  40ceb7:	rol    BYTE PTR [edi],1
  40ceb9:	shl    BYTE PTR [edx+edi*2-0x1d],0xe7
  40cebe:	fiadd  WORD PTR [eax]
  40cec0:	ins    DWORD PTR es:[edi],dx
  40cec1:	std    
  40cec2:	or     edx,eax
  40cec4:	add    ah,BYTE PTR [eax]
  40cec6:	mov    DWORD PTR [ebp+0x74],ecx
  40cec9:	data16 add BYTE PTR [eax+0x5568bc5b],ah
  40ced0:	rol    DWORD PTR [eax+0x0],cl
  40ced3:	mov    DWORD PTR [ecx],0x43dfff8
  40ced9:	call   0xfdadfaa6
  40cede:	dec    DWORD PTR [ebp+0x74]
  40cee1:	out    0xf1,al
  40cee3:	cs ins DWORD PTR es:[edi],dx
  40cee5:	std    
  40cee6:	cld    
  40cee7:	cmp    DWORD PTR [esi+0x6bc7ffb7],0xfffffffd
  40ceee:	repnz out 0xb6,al
  40cef1:	add    eax,0x736bf975
  40cef6:	cld    
  40cef7:	mov    DWORD PTR [ecx],0xd04ee808
  40cefd:	(bad)  
  40cefe:	push   edi
  40cf00:	mov    al,0x4
  40cf03:	add    BYTE PTR [eax],dl
  40cf05:	jecxz  0x40ce91
  40cf07:	in     al,dx
  40cf08:	xchg   ebx,eax
  40cf09:	push   ecx
  40cf0a:	loop   0x40cf63
  40cf0c:	cli    
  40cf0d:	std    
  40cf0e:	imul   edi,DWORD PTR [edi],0xe8080277
  40cf14:	js     0x40cee6
  40cf16:	(bad)  
  40cf17:	call   FWORD PTR [ecx-0x1a74042e]
  40cf1d:	add    ch,BYTE PTR [eax]
  40cf1f:	inc    ecx
  40cf20:	loopne 0x40cf9f
  40cf22:	cmp    eax,0x67d4cc00
  40cf27:	bound  edi,QWORD PTR [ecx]
  40cf29:	fs inc ecx
  40cf2b:	add    BYTE PTR [esi-0x1],ch
  40cf2e:	aas    
  40cf2f:	sub    DWORD PTR [ecx],edi
  40cf31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf32:	pop    es
  40cf33:	ror    BYTE PTR [ebp-0x53],0x2b
  40cf37:	call   0xfed45693
  40cf3c:	inc    edx
  40cf3d:	out    0xe,eax
  40cf3f:	and    al,al
  40cf41:	in     al,0x8b
  40cf43:	cmp    DWORD PTR [bx-0x425f],esp
  40cf48:	adc    DWORD PTR [esi],edi
  40cf4a:	dec    ecx
  40cf4b:	inc    ecx
  40cf4c:	cmp    edx,eax
  40cf4e:	sbb    al,bh
  40cf50:	mov    ss,esp
  40cf52:	sti    
  40cf53:	out    0xe9,eax
  40cf55:	cmp    eax,0xd47efe93
  40cf5a:	mov    esp,edi
  40cf5c:	lock call 0xb6aecdf4
  40cf62:	ret    0x66b8
  40cf65:	jb     0x40cef9
  40cf67:	inc    BYTE PTR [eax]
  40cf69:	imul   edi,DWORD PTR [ecx],0xffffffcc
  40cf6c:	push   es
  40cf6d:	int3   
  40cf6e:	das    
  40cf6f:	sbb    al,0x0
  40cf71:	cmp    DWORD PTR [edx+0x51],ebp
  40cf74:	addr16 rcr bl,cl
  40cf77:	inc    esp
  40cf78:	add    cl,dl
  40cf7a:	bound  ecx,QWORD PTR [eax+0x41]
  40cf7d:	cmp    DWORD PTR [edx],esp
  40cf7f:	sbb    DWORD PTR [eax],ecx
  40cf81:	and    DWORD PTR [ecx-0x52d900f3],ebp
  40cf87:	add    ch,BYTE PTR [eax-0x5b]
  40cf8a:	fs inc ebx
  40cf8c:	add    BYTE PTR [ecx+0x39414922],ah
  40cf92:	cmp    bl,cl
  40cf94:	pop    ebx
  40cf95:	push   eax
  40cf96:	push   0x7064e802
  40cf9b:	xchg   ecx,eax
  40cf9c:	inc    al
  40cf9e:	pop    ebx
  40cf9f:	sahf   
  40cfa0:	imul   edi,DWORD PTR [ecx],0x7d849100
  40cfa6:	aas    
  40cfa7:	jmp    0xa87b8dc7
  40cfac:	add    edx,esi
  40cfae:	retf   0xdcac
  40cfb1:	jns    0x40cfb3
  40cfb3:	adc    edi,ecx
  40cfb5:	popa   
  40cfb6:	xchg   ecx,eax
  40cfb7:	std    
  40cfb8:	jl     0x40d02f
  40cfba:	mov    WORD PTR [edx-0x5c7cdefd],es
  40cfc0:	inc    esp
  40cfc1:	cmp    DWORD PTR [eax],ebp
  40cfc3:	xchg   BYTE PTR [eax-0x8],cl
  40cfc6:	(bad)  
  40cfc7:	fstp   st(0)
  40cfc9:	add    ah,bh
  40cfcb:	daa    
  40cfcc:	add    al,0x0
  40cfce:	mov    eax,ds:0x8f932fde
  40cfd3:	xchg   BYTE PTR [ebx],ch
  40cfd5:	xchg   esp,eax
  40cfd6:	mov    ch,0x3a
  40cfd8:	lds    esi,FWORD PTR [ebx]
  40cfda:	adc    DWORD PTR [edx+0x2b],ebp
  40cfdd:	inc    ebp
  40cfde:	cmp    DWORD PTR [eax],ebp
  40cfe0:	dec    esi
  40cfe1:	dec    eax
  40cfe2:	clc    
  40cfe3:	jmp    DWORD PTR [ebp+0x27e702d8]
  40cfe9:	add    al,0x51
  40cfeb:	cli    
  40cfec:	das    
  40cfed:	xchg   ebx,eax
  40cfee:	push   edi
  40cfef:	xchg   BYTE PTR [ebx],ah
  40cff1:	pushf  
  40cff2:	mov    ebx,0xcd037d12
  40cff7:	inc    edi
  40cff8:	push   0x10
  40cffa:	dec    ecx
  40cffb:	(bad)  
  40cffc:	cld    
  40cffd:	inc    ebp
  40cffe:	mov    edx,0xa5037d0d
  40d003:	int3   
  40d004:	rol    BYTE PTR [ecx+edi*1],1
  40d007:	lahf   
  40d008:	sahf   
  40d009:	xchg   edx,eax
  40d00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d00b:	clc    
  40d00c:	inc    eax
  40d00d:	aaa    
  40d00e:	imul   ecx,DWORD PTR [edi-0x6b7a6db3],0x45
  40d015:	sbb    BYTE PTR [ecx],dh
  40d017:	cwde   
  40d018:	xchg   ecx,eax
  40d019:	xor    eax,0x35ff8ffe
  40d01e:	push   ecx
  40d01f:	nop
  40d020:	(bad)  
  40d021:	mov    ah,0xf2
  40d023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d024:	lahf   
  40d025:	mov    ebx,0x94fe8ecb
  40d02a:	mov    esi,0xb2e1748e
  40d02f:	je     0x40d082
  40d031:	push   cs
  40d032:	add    BYTE PTR [ebx-0x54f28b72],ch
  40d038:	adc    al,0xe8
  40d03a:	(bad)  
  40d03b:	es clc 
  40d03d:	out    0x92,eax
  40d03f:	ins    BYTE PTR es:[edi],dx
  40d040:	(bad)  
  40d041:	(bad)  
  40d042:	out    dx,al
  40d043:	inc    esi
  40d044:	pushf  
  40d045:	out    0x7d,eax
  40d047:	outs   dx,BYTE PTR ds:[esi]
  40d048:	(bad)  
  40d049:	(bad)  
  40d04a:	fiadd  WORD PTR [esi-0x6c]
  40d04d:	out    0x65,eax
  40d04f:	dec    esi
  40d050:	(bad)  
  40d051:	dec    dh
  40d053:	es nop
  40d055:	out    0x6d,eax
  40d057:	dec    esi
  40d058:	(bad)  
  40d059:	(bad)  
  40d05a:	mov    esi,0x35e79826
  40d05f:	cs (bad) 
  40d061:	(bad)  
  40d062:	scas   al,BYTE PTR es:[edi]
  40d063:	inc    esi
  40d064:	mov    esi,?
  40d066:	sbb    al,0x65
  40d068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d069:	out    dx,al
  40d06a:	cmp    ecx,eax
  40d06c:	mov    ds,WORD PTR [esi-0x60]
  40d06f:	jg     0x40d074
  40d071:	add    BYTE PTR [esp+ecx*8],dh
  40d074:	call   0x1300:0x19a9ad82
  40d07b:	cmc    
  40d07c:	mov    ?,WORD PTR [ecx+eiz*8-0x2e]
  40d080:	jo     0x40d0d3
  40d082:	outs   dx,BYTE PTR ds:[esi]
  40d083:	enter  0x4477,0x65
  40d087:	inc    edi
  40d088:	add    BYTE PTR [edx-0x17],ch
  40d08b:	inc    edx
  40d08c:	mov    bl,0x44
  40d08e:	test   al,0x3a
  40d090:	sbb    BYTE PTR [eax],al
  40d092:	jmp    0x12850d1
  40d097:	add    ah,bl
  40d099:	(bad)  
  40d09b:	dec    DWORD PTR [ebx]
  40d09d:	ret    
  40d09e:	jb     0x40d0c3
  40d0a0:	shr    BYTE PTR [edx+0x1],1
  40d0a3:	pop    edi
  40d0a4:	pop    ds
  40d0a5:	jno    0x40d0b0
  40d0a7:	rol    ah,0x99
  40d0aa:	dec    esi
  40d0ab:	push   0xbeef02d0
  40d0b0:	mov    eax,0xe04143c0
  40d0b5:	sar    dh,cl
  40d0b7:	jne    0x40d081
  40d0b9:	push   0xffffffef
  40d0bb:	jns    0x40d07c
  40d0bd:	outs   dx,DWORD PTR ds:[esi]
  40d0be:	out    0x1d,al
  40d0c0:	aad    0x6f
  40d0c2:	std    
  40d0c3:	jmp    DWORD PTR ds:0xa875fd7f
  40d0c9:	push   0xffffff8e
  40d0cb:	push   edx
  40d0cc:	jg     0x40d13d
  40d0ce:	mov    edx,0x8b5502a4
  40d0d4:	int3   
  40d0d5:	add    edx,0xfffffffc
  40d0d8:	daa    
  40d0d9:	out    dx,al
  40d0da:	jmp    FWORD PTR [ecx+0x51]
  40d0dd:	jno    0x40d152
  40d0df:	or     BYTE PTR [eax-0x4d],bh
  40d0e2:	push   eax
  40d0e3:	call   FWORD PTR [edi-0x1403bbf7]
  40d0e9:	mov    ebp,0x4112873
  40d0ee:	cmp    BYTE PTR [edi],0x60
  40d0f1:	idiv   BYTE PTR [edi]
  40d0f3:	push   0x4145b1
  40d0f8:	daa    
  40d0f9:	ins    BYTE PTR es:[edi],dx
  40d0fa:	jl     0x40d123
  40d0fc:	add    BYTE PTR [eax+0x2],dl
  40d0ff:	or     eax,eax
  40d101:	xor    al,0xa5
  40d103:	push   ebp
  40d104:	call   0x3fa08a
  40d109:	sub    eax,edx
  40d10b:	jb     0x40d126
  40d10d:	loopne 0x40d0f8
  40d10f:	(bad)  
  40d110:	(bad)  
  40d111:	cmp    DWORD PTR [esi+0x51],eax
  40d114:	addr16 push es
  40d116:	gs inc ecx
  40d118:	add    BYTE PTR [ecx+0x46],ch
  40d11b:	push   ss
  40d11c:	or     BYTE PTR [ecx],dl
  40d11e:	pop    ds
  40d11f:	or     bh,bh
  40d121:	idiv   BYTE PTR [edi]
  40d123:	dec    esp
  40d124:	push   ebx
  40d125:	out    dx,al
  40d126:	fimul  WORD PTR [esi-0x6fdf06ce]
  40d12c:	(bad)  
  40d12d:	fsubp  st(6),st
  40d12f:	xchg   esp,eax
  40d130:	lods   eax,DWORD PTR ds:[esi]
  40d131:	adc    DWORD PTR [esi+0x74cec015],ebx
  40d137:	mov    ?,esi
  40d139:	dec    esp
  40d13a:	(bad)  
  40d13b:	call   0x805e:0x8e8e6b1f
  40d142:	fld    DWORD PTR [esi]
  40d144:	add    BYTE PTR [edx+eiz*1],al
  40d147:	lahf   
  40d148:	cmp    BYTE PTR [ebp-0x5d],0x36
  40d14c:	push   0x39
  40d14e:	xor    DWORD PTR [edx-0x1],eax
  40d151:	or     al,0x9f
  40d153:	call   0xfc88:0x8ebde8c1
  40d15a:	ret    0x3c7a
  40d15d:	add    al,0xef
  40d15f:	inc    esp
  40d160:	add    BYTE PTR [eax],al
  40d162:	mov    ecx,0xf9740296
  40d167:	ds pop es
  40d169:	inc    esi
  40d16a:	clc    
  40d16b:	xchg   esi,eax
  40d16c:	xor    eax,0x2c62ce8
  40d171:	add    BYTE PTR [edx+0x57],al
  40d174:	pop    ss
  40d175:	and    esp,esi
  40d177:	jle    0x40d14c
  40d179:	pop    ebp
  40d17a:	inc    esi
  40d17b:	xchg   dl,bh
  40d17d:	mov    edi,0x68329fc5
  40d182:	cmp    DWORD PTR [edi-0x525e4263],edx
  40d188:	inc    esp
  40d189:	inc    ecx
  40d18a:	cmp    DWORD PTR [eax],eax
  40d18c:	mov    ecx,0x50f8a58e
  40d191:	out    dx,al
  40d192:	xchg   ecx,eax
  40d193:	lea    edx,[ebp-0x64]
  40d196:	xor    BYTE PTR [esi+ecx*2],0x8f
  40d19a:	add    dl,cl
  40d19c:	sub    BYTE PTR [ebp-0x1],cl
  40d19f:	mov    WORD PTR ds:0xf05de88f,?
  40d1a5:	push   es
  40d1a6:	fs rol dl,0xe2
  40d1aa:	fiadd  WORD PTR [ebx-0x7207140]
  40d1b0:	sub    BYTE PTR [eax],bl
  40d1b2:	sbb    eax,0x7845f118
  40d1b7:	add    BYTE PTR [ecx+0x628219b],bh
  40d1bd:	(bad)  
  40d1be:	outs   dx,BYTE PTR ds:[esi]
  40d1bf:	sbb    cl,ch
  40d1c1:	add    esp,DWORD PTR [esi+0xfd804d]
  40d1c7:	hlt    
  40d1c8:	ds jmp 0xf1537801
  40d1ce:	fwait
  40d1cf:	cdq    
  40d1d0:	pop    es
  40d1d1:	fimul  WORD PTR [esi-0x70c30562]
  40d1d7:	(bad)  
  40d1d8:	sbb    DWORD PTR [edx],ecx
  40d1da:	pushf  
  40d1db:	in     eax,dx
  40d1dc:	daa    
  40d1dd:	(bad)  
  40d1de:	mov    ?,WORD PTR [ebx]
  40d1e0:	shl    BYTE PTR [eax+ebp*8],0xde
  40d1e4:	fild   QWORD PTR [esi]
  40d1e6:	inc    ebp
  40d1e7:	cmp    DWORD PTR [eax],esi
  40d1e9:	rcr    DWORD PTR [ecx+0x33a58d0f],0xd1
  40d1f0:	(bad)  
  40d1f1:	call   0xe7586694
  40d1f6:	inc    ebp
  40d1f7:	clc    
  40d1f8:	(bad)  
  40d1f9:	cmp    BYTE PTR [edi+0x5190f7cd],cl
  40d1ff:	(bad)  
  40d200:	mov    WORD PTR [ebp-0x65],?
  40d203:	adc    al,0x30
  40d205:	add    BYTE PTR [esi-0x41],dh
  40d208:	mov    dh,BYTE PTR [ebp+ebp*2-0x49]
  40d20c:	adc    al,0x8
  40d20e:	push   ecx
  40d20f:	gs xor edi,edi
  40d212:	pop    esi
  40d213:	addr16 mov ecx,0x353aedc1
  40d219:	mov    edi,DWORD PTR ds:0x74efbfbb
  40d21f:	jno    0x40d1b1
  40d221:	dec    edi
  40d222:	ds push ecx
  40d224:	cld    
  40d225:	out    0x9e,eax
  40d227:	sbb    eax,0xe2fe8b
  40d22c:	cli    
  40d22d:	rdmsr  
  40d22f:	push   0x49
  40d231:	mov    WORD PTR [ecx],es
  40d233:	xchg   edi,eax
  40d234:	(bad)  [esi+0x44]
  40d237:	adc    DWORD PTR [ecx+eax*4],edx
  40d23a:	aaa    
  40d23b:	mov    ebp,0x61914d8
  40d240:	and    eax,esi
  40d242:	(bad)  
  40d243:	je     0x40d1f7
  40d245:	mov    ds:0x8abf9925,eax
  40d24a:	(bad)  
  40d24b:	je     0x40d203
  40d24d:	mov    dh,BYTE PTR [ecx+eiz*8-0x54]
  40d251:	adc    al,0x8
  40d253:	rcl    DWORD PTR [edi+0x30],1
  40d256:	call   esi
  40d258:	push   cs
  40d259:	inc    esp
  40d25a:	lock cmp DWORD PTR [ebp-0x5339a7ac],esp
  40d261:	mov    eax,0x353aedc1
  40d266:	mov    eax,ebp
  40d268:	mov    eax,0x3d43f7bf
  40d26d:	push   ss
  40d26e:	inc    ebx
  40d26f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d270:	inc    esi
  40d271:	clc    
  40d272:	out    0x51,eax
  40d274:	or     eax,0xf660fe8b
  40d279:	mov    ebp,DWORD PTR [ecx-0x17]
  40d27c:	and    BYTE PTR [eax],al
  40d27e:	push   0x41456600
  40d283:	add    BYTE PTR [eax-0x2],cl
  40d286:	(bad)  
  40d287:	jmp    DWORD PTR [eax-0x68a98f94]
  40d28d:	jge    0x40d298
  40d28f:	rol    BYTE PTR [eax],0xfc
  40d292:	mov    ebx,0xec984587
  40d297:	jns    0x40d2df
  40d299:	loope  0x40d299
  40d29b:	(bad)  
  40d29c:	jne    0x40d306
  40d29e:	ins    BYTE PTR es:[edi],dx
  40d29f:	loopne 0x40d2c6
  40d2a1:	adc    bh,bh
  40d2a3:	or     al,al
  40d2a5:	lods   al,BYTE PTR ds:[esi]
  40d2a6:	lahf   
  40d2a7:	std    
  40d2a8:	jne    0x40d2d2
  40d2aa:	ins    BYTE PTR es:[edi],dx
  40d2ab:	add    DWORD PTR [ebp+0x17],ebx
  40d2ae:	jge    0x40d2fe
  40d2b0:	push   0x3eb832
  40d2b5:	test   al,0xfe
  40d2b7:	(bad)  
  40d2b8:	out    dx,al
  40d2b9:	data16 out 0xff,al
  40d2bc:	dec    edi
  40d2bd:	aaa    
  40d2be:	repz pop es
  40d2c0:	call   0x3fc74d
  40d2c5:	dec    eax
  40d2c6:	popf   
  40d2c7:	push   ecx
  40d2c8:	jmp    DWORD PTR [edi+0x38f8737b]
  40d2ce:	xchg   ebp,eax
  40d2cf:	push   ecx
  40d2d0:	call   DWORD PTR [edi+0x77fc737b]
  40d2d6:	icebp  
  40d2d7:	pop    es
  40d2d8:	call   0x3fa1f7
  40d2dd:	fld    st(0)
  40d2df:	add    al,BYTE PTR [eax]
  40d2e1:	sbb    eax,0x9c83eb09
  40d2e6:	jp     0x40d350
  40d2e8:	add    dl,bh
  40d2ea:	aaa    
  40d2eb:	push   DWORD PTR [ebp+0x58]
  40d2ee:	data16 sub al,0x50
  40d2f1:	xchg   edi,eax
  40d2f2:	jnp    0x40d27b
  40d2f4:	inc    ebp
  40d2f5:	add    BYTE PTR [esi+eiz*8-0x7dc60001],dh
  40d2fc:	dec    esp
  40d2fd:	addr16 mov ah,0xe2
  40d300:	inc    edx
  40d301:	add    cl,dl
  40d303:	push   ss
  40d304:	inc    ebp
  40d305:	inc    ecx
  40d306:	cmp    DWORD PTR [edx],ecx
  40d308:	push   ss
  40d309:	or     BYTE PTR [ecx],ah
  40d30b:	or     dl,BYTE PTR [edi+edi*8]
  40d30e:	sbb    edx,DWORD PTR es:[esi]
  40d311:	cld    
  40d312:	push   ds
  40d313:	lods   eax,DWORD PTR ds:[esi]
  40d314:	cli    
  40d315:	out    0x86,eax
  40d317:	inc    edi
  40d318:	mov    edi,esi
  40d31a:	add    dh,dl
  40d31c:	push   es
  40d31d:	add    BYTE PTR [esi+ebx*1-0x61],ch
  40d321:	xor    ch,0x3f
  40d324:	sbb    eax,DWORD PTR [eax]
  40d326:	cmp    DWORD PTR [edx],edi
  40d328:	dec    ebp
  40d329:	(bad)  
  40d32a:	fs lahf 
  40d32c:	call   0x64fe:0x8bda7642
  40d333:	xchg   ebx,eax
  40d334:	mov    esi,DWORD PTR [ecx+eax*2-0x11]
  40d338:	push   0x8bf2ce4e
  40d33d:	je     0x40d368
  40d33f:	cli    
  40d340:	adc    eax,0x3c12d108
  40d345:	push   DWORD PTR [esi-0x51e7eb76]
  40d34b:	or     al,0xf7
  40d34d:	(bad)  
  40d34e:	sub    al,0x9f
  40d350:	call   0x8567:0x8aa1ee54
  40d357:	loope  0x40d39d
  40d359:	add    BYTE PTR [eax],al
  40d35b:	mov    gs,WORD PTR [esp+esi*8]
  40d35e:	out    0x5c,eax
  40d360:	add    al,0x4
  40d362:	add    BYTE PTR [edx],dh
  40d364:	push   edi
  40d365:	adc    BYTE PTR [ebp-0x1f],ah
  40d368:	pop    eax
  40d369:	inc    ecx
  40d36a:	inc    ecx
  40d36b:	cmp    DWORD PTR [edi-0x68c6dcf6],edi
  40d371:	jnp    0x40d3b7
  40d373:	popa   
  40d374:	add    BYTE PTR [ecx],dl
  40d376:	mov    edx,0x8ae93efc
  40d37b:	(bad)
  40d37e:	add    ebx,DWORD PTR [eax+eax*1]
  40d381:	jmp    0xef555284
  40d386:	push   es
  40d387:	jl     0x40d311
  40d389:	outs   dx,DWORD PTR ds:[esi]
  40d38a:	inc    ecx
  40d38b:	dec    ecx
  40d38c:	mov    ebx,edi
  40d38e:	repz push ds
  40d390:	imul   eax,DWORD PTR [ecx],0xffffff8b
  40d393:	pop    ds
  40d394:	jge    0x40d3f6
  40d396:	mov    ecx,DWORD PTR [edx+0xd416fd4]
  40d39c:	sbb    al,ch
  40d39e:	add    edx,DWORD PTR [esi]
  40d3a0:	dec    edx
  40d3a1:	dec    ebp
  40d3a2:	adc    DWORD PTR [ecx],esi
  40d3a4:	cwde   
  40d3a5:	xor    edi,DWORD PTR [edx]
  40d3a7:	test   BYTE PTR [eax-0x76c2eec3],0xbb
  40d3ae:	sti    
  40d3af:	fsubrp st(3),st
  40d3b1:	popf   
  40d3b2:	mov    bl,bh
  40d3b4:	mov    BYTE PTR [ebx-0xeed2879],bl
  40d3ba:	fwait
  40d3bb:	xchg   DWORD PTR [ecx],edi
  40d3bd:	push   ss
  40d3be:	mov    eax,DWORD PTR [eax]
  40d3c0:	(bad)  
  40d3c1:	adc    dh,cl
  40d3c3:	mov    al,BYTE PTR [ebp-0xc]
  40d3c6:	add    eax,0x1d984111
  40d3cb:	cmp    ch,BYTE PTR [esi+0x4ac61f88]
  40d3d1:	add    BYTE PTR [esi+edi*2-0x7453836e],dl
  40d3d8:	in     al,dx
  40d3d9:	jl     0x40d3f6
  40d3db:	mov    edx,0x3e93f5c
  40d3e0:	or     eax,0x70c86a0c
  40d3e5:	fldenv [edi]
  40d3e7:	add    al,0x39
  40d3e9:	adc    al,0x3a
  40d3eb:	xchg   DWORD PTR ds:0xfcffffca,ebp
  40d3f1:	(bad)  
  40d3f2:	push   DWORD PTR [edi+edi*1]
  40d3f5:	rol    DWORD PTR [ebp+eiz*4+0x3a],0x0
  40d3fa:	add    cl,ch
  40d3fc:	jnp    0x40d441
  40d3fe:	clc    
  40d3ff:	jmp    0x5c40d43e
  40d404:	stc    
  40d405:	mov    ecx,DWORD PTR [edi+0x74]
  40d408:	jns    0x40d392
  40d40a:	dec    edi
  40d40b:	adc    esi,DWORD PTR ds:0x7c2f9718
  40d411:	add    bh,bh
  40d413:	aam    0xdc
  40d415:	aad    0x40
  40d417:	jmp    0xaab41c33
  40d41c:	mov    bh,0x4
  40d41e:	clc    
  40d41f:	jmp    0xccc3995a
  40d424:	add    BYTE PTR [esi+0x77fe7287],dh
  40d42a:	or     al,0xfc
  40d42c:	push   edx
  40d42d:	loopne 0x40d45c
  40d42f:	mov    edi,edi
  40d431:	mov    bl,0xd
  40d433:	sbb    BYTE PTR [esi],ch
  40d435:	dec    eax
  40d436:	in     al,0xfe
  40d438:	lahf   
  40d439:	rol    BYTE PTR [esi+0xcc3d975],cl
  40d43f:	or     BYTE PTR [ecx],al
  40d441:	nop
  40d442:	test   esi,edi
  40d444:	push   cs
  40d445:	adc    BYTE PTR [edi-0x4240feb4],al
  40d44b:	add    ebp,DWORD PTR [edx+0x41]
  40d44e:	mov    bh,bh
  40d450:	jl     0x40d48b
  40d452:	cmp    DWORD PTR ds:0xfeaf49e9,0x5c
  40d459:	rol    DWORD PTR [esi+0x4073af14],0x0
  40d460:	aaa    
  40d461:	ret    0x3c1
  40d464:	jmp    0x12c4fb8
  40d469:	jecxz  0x40d42a
  40d46b:	repnz push ebx
  40d46d:	xchg   edi,eax
  40d46e:	(bad)  
  40d46f:	test   DWORD PTR [eax],0xc7000350
  40d475:	adc    eax,0x60fffe70
  40d47a:	add    edi,edi
  40d47c:	jne    0x40d4ce
  40d47e:	or     BYTE PTR [esp+edi*8-0x7f],al
  40d482:	out    dx,eax
  40d483:	sti    
  40d484:	push   0x50
  40d486:	in     eax,0xff
  40d488:	imul   eax,DWORD PTR [eax],0xfeffe520
  40d48e:	and    eax,0x1c75fd7f
  40d493:	in     eax,0xff
  40d495:	imul   edx,DWORD PTR [eax],0x2022ca6b
  40d49b:	add    ecx,DWORD PTR [ebx]
  40d49d:	shl    ah,0xb5
  40d4a0:	dec    esi
  40d4a1:	push   eax
  40d4a2:	js     0x40d482
  40d4a4:	push   eax
  40d4a5:	jmp    FWORD PTR [edi+0xb]
  40d4a8:	inc    esp
  40d4a9:	clc    
  40d4aa:	cdq    
  40d4ab:	in     al,0xff
  40d4ad:	imul   esp,eax,0x2875fed1
  40d4b3:	jns    0x40d528
  40d4b5:	cld    
  40d4b6:	maskmovq mm1,(bad)
  40d4b7:	test   DWORD PTR [ebx],0xffe4e06a
  40d4bd:	out    0x76,eax
  40d4bf:	sahf   
  40d4c0:	(bad)  
  40d4c1:	(bad)  
  40d4c2:	fcmovnb st,st(2)
  40d4c4:	jae    0x40d4d5
  40d4c6:	das    
  40d4c7:	div    edi
  40d4c9:	call   0x3fa652
  40d4ce:	push   edi
  40d4cf:	(bad)  
  40d4d0:	test   DWORD PTR [eax],0x83000290
  40d4d6:	or     eax,0x4e73fe7b
  40d4db:	jns    0x40d550
  40d4dd:	or     BYTE PTR [edi-0xb],ch
  40d4e0:	imul   eax
  40d4e2:	cmp    DWORD PTR [ecx-0x5e81001d],eax
  40d4e8:	ret    0x3673
  40d4eb:	jmp    0x41414978
  40d4f0:	mov    cl,0x3
  40d4f2:	and    bh,BYTE PTR [ecx]
  40d4f4:	cdq    
  40d4f5:	sub    DWORD PTR [ebx],eax
  40d4f7:	js     0x40d51a
  40d4f9:	stos   DWORD PTR es:[edi],eax
  40d4fa:	jmp    0xbcc4:0xccb1923
  40d501:	sar    bh,0x46
  40d504:	leave  
  40d505:	fwait
  40d506:	in     eax,dx
  40d507:	sbb    BYTE PTR [ecx-0x7c06f4fe],bl
  40d50d:	in     eax,dx
  40d50e:	dec    edi
  40d50f:	mov    DWORD PTR [edi-0x70],ebp
  40d512:	dec    edi
  40d513:	es (bad) 
  40d516:	inc    esp
  40d517:	and    eax,0x8cff32f1
  40d51c:	and    esi,DWORD PTR [eax+ebp*8]
  40d51f:	cs dec eax
  40d521:	xchg   esi,edi
  40d523:	adc    dl,BYTE PTR [esi-0x68be7fbe]
  40d529:	or     eax,0x8a44f6d1
  40d52e:	out    0xf8,eax
  40d530:	addr16 xchg esi,edi
  40d533:	mov    dl,0x54
  40d535:	mov    ds,WORD PTR [edx-0x10]
  40d538:	fdecstp 
  40d53a:	jmp    FWORD PTR [ebp+0x12]
  40d53d:	xchg   edi,eax
  40d53e:	xor    ch,0xcb
  40d541:	xor    BYTE PTR [edi-0x46],dl
  40d544:	lods   al,BYTE PTR ds:[esi]
  40d545:	enter  0x7828,0x97
  40d549:	add    dh,BYTE PTR [ebp+0x3f]
  40d54c:	pop    esi
  40d54d:	sub    cl,cl
  40d54f:	jnp    0x40d4e4
  40d551:	add    cl,BYTE PTR [ebp+0x3186fc00]
  40d557:	jmp    DWORD PTR [ebx+eiz*4]
  40d55a:	call   0x4387:0xe5ffef30
  40d561:	shr    ch,0x7f
  40d564:	push   ebp
  40d565:	(bad)  
  40d566:	call   0xcd448d6e
  40d56b:	add    al,0x39
  40d56d:	lock call 0xe82e9169
  40d573:	add    edi,DWORD PTR [ecx]
  40d575:	test   DWORD PTR [ebx],edi
  40d577:	mov    BYTE PTR [edi+0xb],bl
  40d57a:	mov    cl,0x9c
  40d57c:	xchg   edx,eax
  40d57d:	daa    
  40d57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d57f:	xchg   DWORD PTR [ebx-0x40],eax
  40d582:	in     eax,dx
  40d583:	cmp    BYTE PTR [edx],0xff
  40d586:	call   0x8d4c138e
  40d58b:	xchg   DWORD PTR [ebp+0x74541088],ebp
  40d591:	aas    
  40d592:	jmp    0x75c6e132
  40d597:	xchg   DWORD PTR [ecx-0x727882c6],esi
  40d59d:	test   BYTE PTR [ebp+0x11],ah
  40d5a0:	adc    DWORD PTR [eax],ebx
  40d5a2:	mov    BYTE PTR [esi],bh
  40d5a4:	js     0x40d5a6
  40d5a6:	inc    ecx
  40d5a7:	(bad)  
  40d5a8:	cld    
  40d5a9:	test   BYTE PTR [ebp+0x7d],cl
  40d5ac:	jge    0x40d546
  40d5ae:	inc    ebp
  40d5af:	adc    ebp,ebp
  40d5b1:	test   BYTE PTR [ebx-0x51bba175],dh
  40d5b7:	inc    esp
  40d5b8:	add    BYTE PTR [ecx],bh
  40d5ba:	cwde   
  40d5bb:	jnp    0x40d543
  40d5bd:	xlat   BYTE PTR ds:[ebx]
  40d5be:	test   BYTE PTR [edi+0x41],ch
  40d5c1:	aad    0x80
  40d5c3:	fwait
  40d5c4:	xchg   edi,eax
  40d5c5:	(bad)  
  40d5c6:	cmc    
  40d5c7:	ins    BYTE PTR es:[edi],dx
  40d5c8:	pop    ebp
  40d5c9:	mov    esi,0x3582e884
  40d5ce:	cwde   
  40d5cf:	call   0xe8a590ca
  40d5d4:	add    edi,DWORD PTR [ecx]
  40d5d6:	cmp    edi,0xd84be73
  40d5dc:	or     BYTE PTR gs:[ebp+0xbb7e9fe],al
  40d5e3:	call   0x2061b9
  40d5e8:	call   0x6328e1f0
  40d5ed:	mov    esp,0xcd98c779
  40d5f2:	das    
  40d5f3:	jmp    0x40d604
  40d5f5:	inc    edi
  40d5f6:	push   ebx
  40d5f7:	cmp    edi,ecx
  40d5f9:	dec    eax
  40d5fa:	clc    
  40d5fb:	cmp    esi,eax
  40d5fd:	inc    edi
  40d5fe:	cld    
  40d5ff:	sub    ebx,ecx
  40d601:	mov    bl,0x0
  40d603:	sub    al,0x28
  40d605:	cmp    edx,edi
  40d607:	jg     0x40d59e
  40d609:	push   0xe
  40d60b:	or     ch,BYTE PTR [ecx-0x42]
  40d60e:	enter  0xec76,0xba
  40d612:	xchg   edi,eax
  40d613:	das    
  40d614:	xchg   edx,eax
  40d615:	and    al,0x4
  40d617:	in     al,dx
  40d618:	sub    BYTE PTR [ebp+0xa909bf],dh
  40d61e:	(bad)  
  40d620:	or     DWORD PTR ds:0x300b3870,ebp
  40d626:	sub    DWORD PTR [edx-0x5bbe9fa8],esi
  40d62c:	(bad)  
  40d62d:	aam    0xd2
  40d62f:	jb     0x40d675
  40d631:	dec    ecx
  40d632:	scas   eax,DWORD PTR es:[edi]
  40d633:	cmp    al,0xd8
  40d635:	jmp    0x6440d674
  40d63a:	jns    0x40d5e8
  40d63c:	dec    edi
  40d63d:	ret    
  40d63e:	cmp    eax,0x3a930016
  40d643:	push   ss
  40d644:	add    BYTE PTR [ebx+0x3544753a],dl
  40d64a:	or     al,BYTE PTR [ebx+0x4095cf14]
  40d650:	add    BYTE PTR [eax],al
  40d652:	stos   DWORD PTR es:[edi],eax
  40d653:	mov    edi,0xf8132272
  40d658:	xlat   BYTE PTR ds:[ebx]
  40d659:	add    BYTE PTR [ebx+ebx*4],bl
  40d65c:	std    
  40d65d:	jne    0x40d68b
  40d65f:	jp     0x40d6d4
  40d661:	fcom   DWORD PTR [edi-0x12001c0d]
  40d667:	addr16 std 
  40d669:	jne    0x40d603
  40d66b:	addr16 mov ebx,0xfd7d87fc
  40d671:	jne    0x40d60b
  40d673:	fs xchg esi,eax
  40d675:	and    BYTE PTR [eax-0x1],dl
  40d678:	(bad)  
  40d679:	jne    0x40d6ef
  40d67b:	fs js  0x40d6cd
  40d67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d67f:	jge    0x40d67e
  40d681:	jne    0x40d683
  40d683:	test   al,0x64
  40d685:	jo     0x40d6d6
  40d687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d688:	jge    0x40d687
  40d68a:	jne    0x40d638
  40d68c:	fs push 0x8b7cc74f
  40d692:	inc    ebp
  40d693:	mov    al,0xcc
  40d695:	out    0x90,eax
  40d697:	dec    ebp
  40d698:	jge    0x40d697
  40d69a:	pop    edi
  40d69b:	inc    esi
  40d69c:	inc    edi
  40d69d:	ror    BYTE PTR [eax+eiz*1],0xd2
  40d6a1:	mov    ch,ah
  40d6a3:	mov    ds:0x106afac0,eax
  40d6a8:	jmp    0x871ed5f1
  40d6ad:	out    0x81,al
  40d6af:	aam    0x7b
  40d6b1:	std    
  40d6b2:	mov    DWORD PTR [ebp-0x178a0286],ebx
  40d6b8:	data16 and ch,bh
  40d6bb:	daa    
  40d6bc:	jge    0x40d726
  40d6be:	add    eax,0xff520278
  40d6c3:	pop    ss
  40d6c4:	mov    DWORD PTR [esi+0x67cec674],edi
  40d6ca:	idiv   DWORD PTR [ecx]
  40d6cc:	rol    BYTE PTR [ebx+0x0],cl
  40d6cf:	and    DWORD PTR [ecx+0x70efef02],ebx
  40d6d5:	jo     0x40d71c
  40d6d7:	clc    
  40d6d8:	cwde   
  40d6d9:	xor    bh,bh
  40d6db:	and    al,0xa1
  40d6dd:	call   0x24e7:0x83920b3d
  40d6e4:	retf   0xfe84
  40d6e7:	add    BYTE PTR [esi+0x4fe882b],al
  40d6ed:	mov    eax,ds:0xb205879a
  40d6f2:	or     eax,0x7b
  40d6f5:	xchg   esp,eax
  40d6f6:	add    dl,BYTE PTR [ebp-0x4e]
  40d6f9:	mov    ah,0x7f
  40d6fb:	ret    
  40d6fc:	pop    ebp
  40d6fd:	loope  0x40d718
  40d6ff:	add    bl,ah
  40d701:	fiadd  DWORD PTR [esp+esi*2+0x4bd77141]
  40d708:	inc    esi
  40d709:	popa   
  40d70a:	jns    0x40d750
  40d70c:	cmp    eax,0x6174c61d
  40d711:	fadd   DWORD PTR [ebx]
  40d713:	sub    BYTE PTR [esi-0x69],0xe
  40d717:	push   ecx
  40d718:	xchg   ecx,eax
  40d719:	bound  edi,QWORD PTR [ecx+eax*2]
  40d71c:	cmp    edx,esp
  40d71e:	fwait
  40d71f:	jne    0x40d779
  40d721:	xchg   edi,eax
  40d722:	add    cl,BYTE PTR [ebx]
  40d724:	stc    
  40d725:	mov    ds:0xaf36eb00,eax
  40d72a:	stos   DWORD PTR es:[edi],eax
  40d72b:	inc    ebp
  40d72c:	js     0x40d6c5
  40d72e:	sub    ebp,eax
  40d730:	pop    esp
  40d731:	clc    
  40d732:	add    eax,DWORD PTR [eax]
  40d734:	inc    edx
  40d735:	xlat   BYTE PTR ds:[ebx]
  40d736:	push   cs
  40d737:	and    ecx,DWORD PTR [esi-0x21a884d1]
  40d73d:	retf   0xbff7
  40d740:	dec    ebp
  40d741:	mov    al,0x32
  40d743:	push   0x94e90039
  40d748:	test   BYTE PTR [eax],bl
  40d74a:	pop    es
  40d74b:	cmp    eax,0xb9007800
  40d750:	test   BYTE PTR ds:0x2a0d00f8,ch
  40d756:	add    DWORD PTR ds:0xfe32d89b,0x28cda283
  40d760:	dec    edx
  40d761:	xchg   edi,eax
  40d762:	sub    ebp,0x20528883
  40d768:	or     ecx,DWORD PTR [ecx+edx*2]
  40d76b:	(bad)  
  40d76d:	add    BYTE PTR [ecx-0x69ef3a5],0x1c
  40d774:	sub    DWORD PTR [edi+0x21],0xffffffb0
  40d778:	inc    esi
  40d779:	cmp    al,BYTE PTR [eax]
  40d77b:	adc    al,0x8f
  40d77d:	push   edx
  40d77e:	jg     0x40d72c
  40d780:	push   esp
  40d781:	dec    edi
  40d782:	sub    DWORD PTR [ebp+0x3883f591],0x9defcd83
  40d78c:	stc    
  40d78d:	xor    bl,BYTE PTR [eax+0x3924a4]
  40d793:	loop   0x40d7d8
  40d795:	aas    
  40d796:	jnp    0x40d753
  40d798:	add    eax,0xc9a60039
  40d79d:	es add cl,ch
  40d7a0:	add    edi,DWORD PTR [ecx]
  40d7a2:	mov    ecx,0xf90f7423
  40d7a7:	call   0xd3416aaf
  40d7ac:	add    edx,DWORD PTR [ebx+0x3c300]
  40d7b2:	les    edi,FWORD PTR [edx]
  40d7b4:	pop    ecx
  40d7b5:	aam    0xbd
  40d7b7:	jp     0x40d7f1
  40d7b9:	jnp    0x40d7a2
  40d7bb:	sbb    BYTE PTR [eax-0x779a7e],0x35
  40d7c2:	rol    BYTE PTR [edi+eiz*8+0x154f],1
  40d7c9:	bnd jp 0x40d7d9
  40d7cc:	add    eax,0x3d10
  40d7d1:	jmp    0xa8688b78
  40d7d6:	cmp    al,BYTE PTR [ecx-0x3fed268c]
  40d7dc:	push   eax
  40d7dd:	(bad)  
  40d7de:	mov    ebx,0xa8198b30
  40d7e3:	jnp    0x40d7d4
  40d7e5:	idiv   BYTE PTR [ebx+0x153b4f81]
  40d7eb:	push   eax
  40d7ec:	push   eax
  40d7ed:	fidivr WORD PTR [ebx-0xc3a7b89]
  40d7f3:	cmp    esi,0xff3243c1
  40d7f9:	(bad)  
  40d7fa:	leave  
  40d7fb:	cmp    esi,esp
  40d7fd:	sbb    DWORD PTR [ebp+0x3c],ecx
  40d800:	inc    edi
  40d801:	sub    BYTE PTR ds:0xd3bdb481,bh
  40d807:	cmp    esi,0xe7f441a6
  40d80d:	icebp  
  40d80e:	gs cmp esi,0xf657c160
  40d815:	mov    es,WORD PTR [eax]
  40d817:	mov    ebx,0x810ffe9
  40d81c:	mov    DWORD PTR [eax-0x17],0x7eebb4bb
  40d823:	mov    ebx,0x3ef4fe7e
  40d828:	push   0x7ebbb9ec
  40d82d:	mov    BYTE PTR [edx+edx*4+0x76],ah
  40d831:	(bad)  
  40d832:	push   esi
  40d833:	in     al,0x7f
  40d835:	data16 mov cl,0x3
  40d838:	sar    edi,0xff
  40d83b:	jg     0x40d7f5
  40d83d:	jmp    0xdc75:0xfd821ff7
  40d844:	jmp    0x40d816
  40d846:	push   eax
  40d847:	pop    ds
  40d848:	add    BYTE PTR [edi-0x205cb7b],0xff
  40d84f:	dec    ebp
  40d850:	mov    dl,dl
  40d852:	test   DWORD PTR [edi-0x7e],0x4ad0684e
  40d859:	aas    
  40d85a:	add    BYTE PTR [edi],bh
  40d85c:	mov    eax,0x819ff7ea
  40d861:	std    
  40d862:	jne    0x40d800
  40d864:	jmp    0x40d816
  40d866:	push   eax
  40d867:	lahf   
  40d868:	or     DWORD PTR [ecx],0x831ae4c0
  40d86e:	mov    ebp,0xfffdf9c4
  40d873:	fs jbe 0x40d884
  40d876:	call   DWORD PTR [eax-0x6f]
  40d879:	and    eax,0x0
  40d87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d87d:	cmp    ebp,0x4d018850
  40d883:	dec    DWORD PTR [edi-0x5ff4ed13]
  40d889:	js     0x40d88f
  40d88b:	push   eax
  40d88c:	test   al,0x75
  40d88e:	dec    ebx
  40d88f:	call   FWORD PTR [edi-0x281f7c37]
  40d895:	cmp    ch,0x15
  40d898:	and    BYTE PTR [ebx],al
  40d89a:	add    BYTE PTR [edx+0x10],ch
  40d89d:	imul   ebx,DWORD PTR [ebp+0x47],0x51
  40d8a1:	add    al,0xff
  40d8a3:	mov    ch,0xbc
  40d8a5:	clc    
  40d8a6:	std    
  40d8a7:	call   FWORD PTR [edi-0x1317f589]
  40d8ad:	push   edx
  40d8ae:	std    
  40d8af:	dec    DWORD PTR [ecx+0x39f7da87]
  40d8b5:	(bad)  
  40d8b6:	sub    BYTE PTR [ecx+0x39],0x41
  40d8ba:	sti    
  40d8bb:	inc    esi
  40d8bc:	js     0x40d927
  40d8be:	jg     0x40d874
  40d8c0:	int    0x35
  40d8c2:	cmp    esi,0xe80ebbd6
  40d8c8:	push   0xb0fe7f99
  40d8cd:	jmp    0x40d922
  40d8cf:	idiv   BYTE PTR [esi-0x6e437ae3]
  40d8d5:	sbb    eax,0x5e39fe81
  40d8da:	xchg   BYTE PTR [ebx+0x68026939],dl
  40d8e0:	add    BYTE PTR [edi-0x3a003e5b],dh
  40d8e6:	stos   DWORD PTR es:[edi],eax
  40d8e7:	jbe    0x40d938
  40d8e9:	mov    ?,WORD PTR [ebx]
  40d8eb:	pop    esp
  40d8ec:	test   BYTE PTR [esi+0xb6b6a65],0x5e
  40d8f3:	jg     0x40d8ff
  40d8f5:	jns    0x40d8d3
  40d8f7:	inc    DWORD PTR [edx+0x740254ec]
  40d8fd:	out    dx,eax
  40d8fe:	jmp    0xbda7bcc0
  40d903:	jg     0x40d904
  40d905:	retf   0x84c3
  40d908:	mov    esp,0xfe7fb561
  40d90d:	cmp    DWORD PTR ds:0x692967e8,ebx
  40d913:	outs   dx,DWORD PTR ds:[esi]
  40d914:	mov    ebp,0xe80c1d36
  40d919:	stos   DWORD PTR es:[edi],eax
  40d91a:	and    BYTE PTR [ecx+0x6b3d26fe],al
  40d920:	neg    BYTE PTR [esi]
  40d922:	(bad)  
  40d923:	jg     0x40d999
  40d925:	inc    ecx
  40d926:	jg     0x40d970
  40d928:	dec    eax
  40d929:	push   cs
  40d92a:	out    dx,eax
  40d92b:	jg     0x40d8e1
  40d92d:	sbb    eax,0xff805e01
  40d932:	jge    0x40d907
  40d934:	or     esp,ecx
  40d936:	mov    eax,0x7def809f
  40d93b:	shl    DWORD PTR [edi-0x19],cl
  40d93e:	mov    bl,0x20
  40d940:	js     0x40d921
  40d942:	jge    0x40d981
  40d944:	test   BYTE PTR [eax],0x3e
  40d947:	push   0x7dcfcab1
  40d94c:	sub    eax,0x2575e6b6
  40d951:	cmp    BYTE PTR [edi+0x6f6bf0f3],0xc7
  40d958:	adc    eax,0x2cb3af80
  40d95d:	js     0x40d906
  40d95f:	jge    0x40d966
  40d961:	div    BYTE PTR [esi]
  40d963:	push   0x7d97ca71
  40d968:	cmc    
  40d969:	mov    ch,0x7e
  40d96b:	jne    0x40d95a
  40d96d:	jg     0x40d8f6
  40d96f:	repz lock imul edi,ebp,0xffffffc6
  40d974:	fnstsw WORD PTR [edi+0x77]
  40d977:	mov    bl,0xb0
  40d979:	ja     0x40d9ea
  40d97b:	jge    0x40d93d
  40d97d:	xchg   edx,esi
  40d97f:	jl     0x40d946
  40d981:	jg     0x40d928
  40d983:	push   0x68577fb5
  40d988:	xor    al,0xd0
  40d98a:	dec    edi
  40d98b:	jge    0x40d93a
  40d98d:	mov    ecx,0x7fa57562
  40d992:	push   esi
  40d993:	out    dx,eax
  40d994:	sub    al,0x7f
  40d996:	aaa    
  40d997:	jge    0x40d9f4
  40d999:	push   0x6c8d7d27
  40d99e:	pushf  
  40d99f:	int3   
  40d9a0:	test   DWORD PTR [edi+0x1f],edi
  40d9a3:	mov    bl,0x98
  40d9a5:	ja     0x40d9be
  40d9a7:	jge    0x40d9a8
  40d9a9:	add    BYTE PTR [eax],0xf2
  40d9ac:	enter  0x6efe,0x86
  40d9b0:	mov    ah,0xeb
  40d9b2:	pop    esi
  40d9b3:	jle    0x40da33
  40d9b5:	(bad)  
  40d9b6:	aam    0x46
  40d9b8:	jge    0x40da2e
  40d9ba:	loope  0x40da1e
  40d9bc:	inc    ebx
  40d9bd:	cld    
  40d9be:	dec    esi
  40d9bf:	data16 jle 0x40d976
  40d9c2:	push   ebp
  40d9c3:	data16 jle 0x40d9c4
  40d9c6:	push   ecx
  40d9c7:	push   ss
  40d9c8:	int3   
  40d9c9:	(bad)  
  40d9ca:	ss dec esi
  40d9cc:	(bad)  
  40d9cd:	test   DWORD PTR [eax+0x63],0x3e26fe7c
  40d9d4:	hlt    
  40d9d5:	sti    
  40d9d6:	adc    esp,eax
  40d9d8:	sbb    al,BYTE PTR [eax]
  40d9da:	jmp    0xe94c18dc
  40d9df:	or     DWORD PTR [ecx+0x60f16aeb],0xcd16a48c
  40d9e9:	addr16 (bad) 
  40d9eb:	ja     0x40d9ac
  40d9ed:	inc    DWORD PTR [eax-0x16bf3cf6]
  40d9f3:	push   ebx
  40d9f5:	or     edx,ecx
  40d9f7:	pop    ds
  40d9f8:	int    0xfe
  40d9fa:	(bad)  
  40d9fb:	inc    ebx
  40d9fc:	inc    eax
  40d9fd:	jae    0x40da41
  40d9ff:	lea    eax,[ecx-0xcc93a84]
  40da05:	pop    esi
  40da06:	mov    esi,0xb1448d0a
  40da0b:	mov    ch,0xfb
  40da0d:	div    DWORD PTR [ebp+0x3d00]
  40da13:	pop    ds
  40da14:	ss inc ebp
  40da16:	inc    esp
  40da17:	mov    eax,ds:0xe90000ae
  40da1c:	mov    ds:0xa514fec1,eax
  40da21:	jecxz  0x40da5b
  40da23:	add    BYTE PTR [edi+0x45],cl
  40da26:	dec    BYTE PTR [ebp+ebx*2-0x317b118]
  40da2d:	sbb    eax,0xc3930000
  40da32:	or     ch,BYTE PTR [edx+0x10]
  40da35:	xchg   ecx,eax
  40da36:	inc    ebx
  40da37:	in     al,0xb0
  40da39:	addr16 out dx,al
  40da3b:	inc    esi
  40da3c:	mov    eax,ds:0x475feff
  40da41:	call   0xfab82922
  40da46:	or     eax,eax
  40da48:	mov    WORD PTR [ebx],ss
  40da4a:	push   eax
  40da4b:	push   0xbeeeffe1
  40da50:	mov    al,ds:0x280873fa
  40da55:	mov    al,ds:0xe757ff6b
  40da5a:	lods   al,BYTE PTR ds:[esi]
  40da5b:	dec    ebx
  40da5c:	inc    edi
  40da5d:	cli    
  40da5e:	std    
  40da5f:	dec    ebp
  40da60:	dec    eax
  40da61:	jle    0x40dade
  40da63:	clc    
  40da64:	nop
  40da65:	js     0x40da1d
  40da67:	call   0x3e206c
  40da6c:	pop    ecx
  40da6d:	rol    DWORD PTR [esi],0x0
  40da70:	lods   eax,DWORD PTR ds:[esi]
  40da71:	xchg   dl,ch
  40da73:	add    DWORD PTR [eax],0xffffffcc
  40da76:	sub    BYTE PTR [eax+0x0],0xa
  40da7a:	inc    ebp
  40da7b:	std    
  40da7c:	jne    0x40dad6
  40da7e:	out    0xc0,eax
  40da80:	dec    eax
  40da81:	ja     0x40da80
  40da83:	xchg   DWORD PTR [ebp+0x74],eax
  40da86:	ins    BYTE PTR es:[edi],dx
  40da87:	or     al,0x47
  40da89:	and    DWORD PTR [edi+edi*8],eax
  40da8c:	xor    eax,0x412724
  40da91:	xchg   edi,eax
  40da92:	jae    0x40da9a
  40da94:	call   0x3e5b39
  40da99:	dec    eax
  40da9a:	or     al,BYTE PTR [edi+0x41]
  40da9d:	cmp    DWORD PTR [ecx-0x16],ebp
  40daa0:	add    DWORD PTR [ecx],edi
  40daa2:	imul   eax,DWORD PTR [edx+0x6a71a4fe],0x7cfa15dd
  40daac:	inc    BYTE PTR [ebp+edx*1+0x2b]
  40dab0:	inc    ecx
  40dab1:	cmp    edx,ebp
  40dab3:	test   BYTE PTR [edi],0x11
  40dab6:	adc    BYTE PTR [ebp-0x2],bh
  40dab9:	not    BYTE PTR [eax+0x0]
  40dabc:	add    BYTE PTR [ecx],bh
  40dabe:	jmp    0xc1724f3f
  40dac3:	pop    ds
  40dac4:	(bad)  
  40dac5:	faddp  st(1),st
  40dac7:	jl     0x40db3d
  40dac9:	aad    0x39
  40dacb:	test   DWORD PTR [edi],0xfecbeee1
  40dad1:	(bad)  
  40dad2:	pop    ds
  40dad3:	inc    edx
  40dad4:	add    edi,DWORD PTR [ecx]
  40dad6:	mov    esp,0xba00eb87
  40dadb:	and    al,0x60
  40dadd:	push   ebp
  40dade:	push   es
  40dadf:	jg     0x40dae3
  40dae1:	push   0xfffffff1
  40dae3:	or     edi,esi
  40dae5:	pop    es
  40dae6:	xchg   ecx,eax
  40dae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae8:	retf   0x96fe
  40daeb:	out    dx,eax
  40daec:	(bad)  
  40daed:	sti    
  40daee:	mov    edx,0xf82f00b3
  40daf3:	push   0xb3b50f02
  40daf8:	add    DWORD PTR [eax],eax
  40dafa:	cmp    esi,esp
  40dafc:	cmp    eax,0x4281e06
  40db01:	add    BYTE PTR [esi],dh
  40db03:	in     eax,0x42
  40db05:	add    BYTE PTR [ecx],bh
  40db07:	imul   edi,DWORD PTR [edi+0x3c],0xffc30a47
  40db0e:	dec    esi
  40db0f:	popa   
  40db10:	xchg   BYTE PTR [edx-0x7cfd96c8],dh
  40db16:	cld    
  40db17:	(bad)  
  40db18:	mov    edx,0xe900782d
  40db1d:	or     al,0xb5
  40db1f:	mov    ds:0x7d3903e7,al
  40db24:	retf   
  40db25:	push   ebp
  40db26:	dec    esp
  40db27:	mov    edi,0x844603e8
  40db2c:	pop    edi
  40db2d:	add    bh,BYTE PTR [ecx]
  40db2f:	add    BYTE PTR [edx+0x3e],ch
  40db32:	jecxz  0x40db5e
  40db34:	sub    BYTE PTR [ecx+edi*1],al
  40db37:	or     DWORD PTR [ebp-0x71],ebp
  40db3a:	cmp    DWORD PTR [eax],eax
  40db3c:	jmp    0x5a6ddbc1
  40db41:	push   es
  40db42:	ret    
  40db43:	out    0x79,al
  40db45:	fld    QWORD PTR [edi+0x3e8ff5f]
  40db4b:	mov    edx,0x782cf33b
  40db50:	add    cl,ch
  40db52:	or     al,0xbd
  40db54:	out    dx,al
  40db55:	out    0x3,eax
  40db57:	cmp    eax,ebp
  40db59:	xchg   ah,al
  40db5b:	stc    
  40db5c:	call   DWORD PTR [edx-0x14ec51fd]
  40db62:	sub    al,0xf8
  40db64:	call   FWORD PTR [edi-0x3a]
  40db67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db68:	jge    0x40daed
  40db6a:	jnp    0x40db02
  40db6c:	or     ah,BYTE PTR [ebp-0x25]
  40db6f:	cmp    DWORD PTR [eax],eax
  40db71:	jmp    0xee136a9e
  40db76:	cmc    
  40db77:	xchg   BYTE PTR [ecx-0x5],bh
  40db7a:	add    DWORD PTR [esi],esp
  40db7c:	mov    edi,0x55e8ee8
  40db81:	fcomip st,st(1)
  40db83:	cmp    eax,0x39051667
  40db88:	add    BYTE PTR [edx-0x2e],dh
  40db8b:	inc    edx
  40db8c:	test   DWORD PTR [edx],esi
  40db8e:	in     al,dx
  40db8f:	ret    
  40db90:	idiv   bh
  40db92:	inc    esp
  40db93:	mov    ah,0xcc
  40db95:	repz loop 0x40db5b
  40db98:	or     DWORD PTR [esp+eax*1-0x6fffffc4],eax
  40db9f:	inc    ebx
  40dba0:	(bad)  
  40dba1:	(bad)  
  40dba2:	call   0x46e0eda7
  40dba7:	sub    BYTE PTR ds:0x5c913679,dh
  40dbad:	sbb    al,0x0
  40dbaf:	jmp    0x6c4f1bf3
  40dbb4:	mov    DWORD PTR [ecx-0x2],edi
  40dbb7:	jmp    0xe948d573
  40dbbc:	inc    ebx
  40dbbd:	test   cl,ch
  40dbbf:	jmp    0xdf3fdbfe
  40dbc4:	xor    ch,BYTE PTR [eax+0x5f]
  40dbc7:	mov    ds:0xac887a63,eax
  40dbcc:	dec    edx
  40dbcd:	jp     0x40dc45
  40dbcf:	icebp  
  40dbd0:	push   ebx
  40dbd1:	hlt    
  40dbd2:	out    dx,eax
  40dbd3:	ss retf 0xe804
  40dbd7:	addr16 out dx,eax
  40dbd9:	jns    0x40dbd9
  40dbdb:	xchg   ecx,eax
  40dbdc:	out    0xc1,eax
  40dbde:	inc    eax
  40dbdf:	jmp    0x230d017
  40dbe4:	adc    al,0x16
  40dbe6:	add    cl,ch
  40dbe8:	das    
  40dbe9:	inc    eax
  40dbea:	push   cs
  40dbeb:	ins    BYTE PTR es:[edi],dx
  40dbec:	leave  
  40dbed:	js     0x40dbed
  40dbef:	jmp    0xaccc5490
  40dbf4:	adc    cl,cl
  40dbf6:	mov    WORD PTR [esi+edx*1+0x64e969c9],fs
  40dbfd:	js     0x40dc53
  40dbff:	fimul  WORD PTR [ecx+0xa]
  40dc02:	das    
  40dc03:	sub    BYTE PTR ds:0xdec005,bh
  40dc09:	ficom  WORD PTR [ecx-0x39f0001]
  40dc0f:	mov    WORD PTR [ebp+0x74],es
  40dc12:	dec    esp
  40dc13:	std    
  40dc14:	jne    0x40dc8e
  40dc16:	cmc    
  40dc17:	jae    0x40dc05
  40dc19:	(bad)  
  40dc1a:	psrld  mm5,QWORD PTR [esi]
  40dc1d:	popa   
  40dc1e:	cld    
  40dc1f:	or     al,al
  40dc21:	inc    esp
  40dc22:	je     0x40dbaf
  40dc24:	inc    ebp
  40dc25:	mov    al,0x53
  40dc27:	push   0x69fc3a00
  40dc2c:	pop    es
  40dc2d:	sub    bh,ah
  40dc2f:	(bad)  
  40dc30:	jne    0x40dbe6
  40dc32:	cli    
  40dc33:	adc    edx,esi
  40dc35:	(bad)  
  40dc36:	cmp    al,0xfe
  40dc38:	or     dl,al
  40dc3a:	addr16 push esp
  40dc3c:	call   DWORD PTR ds:0xa9e8e6e4
  40dc42:	cli    
  40dc43:	std    
  40dc44:	mov    DWORD PTR [ebp+0x70458bcf],edx
  40dc4a:	push   ebx
  40dc4b:	std    
  40dc4c:	jne    0x40dc6a
  40dc4e:	gs (bad) 
  40dc50:	imul   edx,edi,0x85fefe65
  40dc56:	xlat   BYTE PTR ds:[ebx]
  40dc57:	std    
  40dc58:	adc    eax,0x412926
  40dc5d:	stos   DWORD PTR es:[edi],eax
  40dc5e:	ret    
  40dc5f:	jb     0x40dc8a
  40dc61:	enter  0x3,0xef
  40dc65:	push   cs
  40dc66:	cli    
  40dc67:	jae    0x40dc71
  40dc69:	cmp    BYTE PTR [ebx],dh
  40dc6b:	inc    esi
  40dc6c:	inc    DWORD PTR [eax]
  40dc6e:	aas    
  40dc6f:	cli    
  40dc70:	je     0x40dc7a
  40dc72:	(bad)  
  40dc73:	jo     0x40dc77
  40dc75:	inc    DWORD PTR ds:0xd658e80b
  40dc7b:	cli    
  40dc7c:	std    
  40dc7d:	call   DWORD PTR ds:0xac75fddc
  40dc83:	stc    
  40dc84:	jae    0x40dc8e
  40dc86:	cmp    DWORD PTR [ecx-0x33],eax
  40dc89:	inc    ebp
  40dc8a:	pop    esi
  40dc8b:	inc    esi
  40dc8c:	js     0x40dd02
  40dc8e:	jne    0x40dce1
  40dc90:	test   BYTE PTR [eax+0x4e],cl
  40dc93:	mov    dh,0x78
  40dc95:	je     0x40dcf4
  40dc97:	scas   al,BYTE PTR es:[edi]
  40dc98:	push   cs
  40dc99:	fimul  DWORD PTR [edi]
  40dc9b:	sub    BYTE PTR [edx+ebp*2],al
  40dc9e:	cmp    DWORD PTR [esi+0x6c2eebee],ebx
  40dca4:	pop    eax
  40dca5:	sub    eax,0x74776978
  40dcaa:	sub    DWORD PTR [ecx+0x7e1648e0],eax
  40dcb0:	test   dh,al
  40dcb2:	sub    esi,esi
  40dcb4:	(bad)  
  40dcb5:	repz mov edx,0x2fff6e6b
  40dcbb:	fsubr  QWORD PTR [ebx-0x3]
  40dcbe:	neg    ch
  40dcc0:	push   0xffffffb4
  40dcc2:	out    dx,eax
  40dcc3:	aad    0x78
  40dcc5:	imul   edi,DWORD PTR [ecx],0xdef7eece
  40dccb:	imul   ecx,DWORD PTR [edi+ebp*1],0x78
  40dccf:	imul   esi,DWORD PTR [edi+0x74],0xef35cd00
  40dcd6:	pop    es
  40dcd7:	shl    edx,1
  40dcd9:	sar    esi,0xbe
  40dcdc:	test   eax,ebx
  40dcde:	enter  0x647b,0x2
  40dce2:	push   ebp
  40dce3:	ret    0x8304
  40dce6:	ret    
  40dce7:	test   DWORD PTR ds:0x9bacfe79,edx
  40dced:	jbe    0x40dd3e
  40dcef:	xchg   esi,eax
  40dcf0:	repz push es
  40dcf2:	inc    DWORD PTR [ebp+edx*4+0x29]
  40dcf6:	inc    ecx
  40dcf7:	cmp    DWORD PTR [ecx],eax
  40dcf9:	std    
  40dcfa:	sbb    bh,BYTE PTR [ecx]
  40dcfc:	imul   ecx,DWORD PTR [ebx],0x6c0046c0
  40dd02:	test   al,0x39
  40dd04:	add    cl,ch
  40dd06:	inc    eax
  40dd07:	std    
  40dd08:	ja     0x40dcf2
  40dd0a:	add    edi,DWORD PTR [ecx]
  40dd0c:	add    BYTE PTR [esi-0x1289b542],ah
  40dd12:	add    edi,DWORD PTR [ecx]
  40dd14:	jmp    0xede8:0xe846ede8
  40dd1b:	and    DWORD PTR ds:[ebx],0x70
  40dd1f:	xchg   BYTE PTR [ebx+0x76276f6b],al
  40dd25:	popf   
  40dd26:	shl    DWORD PTR [edi],cl
  40dd28:	in     al,dx
  40dd29:	nop
  40dd2a:	js     0x40dcd1
  40dd2c:	je     0x40dcae
  40dd2e:	(bad)  
  40dd2f:	xor    eax,DWORD PTR [eax]
  40dd31:	jmp    0xe42dd642
  40dd36:	push   0x0
  40dd38:	mov    bh,bh
  40dd3a:	call   0xc0846e42
  40dd3f:	ret    0x76f6
  40dd42:	fild   DWORD PTR [edi]
  40dd44:	loope  0x40dd36
  40dd46:	lods   al,BYTE PTR ds:[esi]
  40dd47:	js     0x40dd30
  40dd49:	shl    BYTE PTR [ecx+0x53],1
  40dd4c:	lods   eax,DWORD PTR ds:[esi]
  40dd4d:	jnp    0x40dda3
  40dd4f:	jo     0x40dd28
  40dd51:	jne    0x40dceb
  40dd53:	aad    0xd6
  40dd55:	loopne 0x40dd03
  40dd57:	js     0x40dd20
  40dd59:	xchg   DWORD PTR [ebx+0x57],ebp
  40dd5c:	(bad)  
  40dd5d:	jne    0x40dd8c
  40dd5f:	imul   ebp,esp,0xffffffc8
  40dd62:	and    eax,0x91002078
  40dd67:	push   eax
  40dd68:	(bad)  
  40dd69:	mov    esi,0x54e578e8
  40dd6e:	adc    eax,0xbb759778
  40dd73:	xlat   BYTE PTR ds:[ebx]
  40dd74:	popa   
  40dd75:	mov    edi,0xc9cc6be8
  40dd7a:	push   ebp
  40dd7c:	push   es
  40dd7d:	mov    BYTE PTR [ecx+edi*8+0x53fe75e6],al
  40dd84:	xor    eax,0x7c26dbe8
  40dd89:	jne    0x40dd88
  40dd8b:	pushf  
  40dd8c:	add    DWORD PTR [esi-0x2],ebp
  40dd8f:	into   
  40dd90:	into   
  40dd91:	sub    ebx,DWORD PTR [eax+edx*1+0x74]
  40dd95:	jne    0x40dd7d
  40dd97:	popa   
  40dd98:	jb     0x40de10
  40dd9a:	(bad)  
  40dd9b:	pusha  
  40dd9c:	add    BYTE PTR [eax-0x51510997],bh
  40dda2:	out    0xff,eax
  40dda4:	adc    BYTE PTR [esi+edi*4-0x535016c0],dl
  40ddab:	fistp  DWORD PTR [esi-0x2b01895a]
  40ddb1:	out    dx,al
  40ddb2:	daa    
  40ddb3:	inc    ecx
  40ddb4:	jmp    0x7e8bd55b
  40ddb9:	mov    cs,WORD PTR [eax+0x768e8184]
  40ddbf:	inc    BYTE PTR [ebx]
  40ddc1:	cmp    eax,0xf5aee5e8
  40ddc6:	je     0x40ddc5
  40ddc8:	xchg   esp,eax
  40ddc9:	sub    DWORD PTR [esi-0x2],0x5c2c6656
  40ddd0:	add    ah,bh
  40ddd2:	je     0x40ddba
  40ddd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddd5:	add    esi,DWORD PTR [esi-0x2]
  40ddd8:	jo     0x40dd92
  40ddda:	pusha  
  40dddb:	div    BYTE PTR [esi]
  40dddd:	inc    esi
  40ddde:	out    0xff,eax
  40dde0:	shl    BYTE PTR [ebx],0xbe
  40dde3:	inc    eax
  40dde4:	jmp    0x171c8a10
  40dde9:	cs jbe 0x40ddea
  40ddec:	fadd   QWORD PTR [esi+0x22e94127]
  40ddf2:	xor    ecx,DWORD PTR [ebx+0x0]
  40ddf5:	aaa    
  40ddf6:	in     eax,dx
  40ddf7:	xchg   DWORD PTR [ebp-0x21ad0],eax
  40ddfd:	adc    esi,DWORD PTR [edi+0x6700f7ea]
  40de03:	in     eax,dx
  40de04:	(bad)  
  40de05:	jae    0x40de3a
  40de07:	fs (bad) 
  40de09:	push   DWORD PTR [edi-0x56]
  40de0c:	std    
  40de0d:	jne    0x40de67
  40de0f:	call   0xedc822a5
  40de14:	std    
  40de15:	mov    ch,0x90
  40de17:	in     eax,0xfd
  40de19:	inc    DWORD PTR [edi+0x6fe8066f]
  40de1f:	mov    ah,0xfd
  40de21:	jmp    edi
  40de23:	mov    al,0xea
  40de25:	not    edi
  40de27:	jmp    0x44d7:0xe82875fd
  40de2e:	(bad)  
  40de2f:	jmp    0xfffd:0xe2b8b5fd
  40de36:	mov    bh,0x70
  40de38:	push   es
  40de39:	call   0x3e9209
  40de3e:	xchg   DWORD PTR [eax-0x1598081e],esi
  40de44:	std    
  40de45:	jne    0x40de2f
  40de47:	out    0xbb,eax
  40de49:	inc    esp
  40de4a:	xchg   edx,ebp
  40de4c:	std    
  40de4d:	mov    ch,0x70
  40de4f:	loop   0x40de4e
  40de51:	inc    DWORD PTR [edi-0x5817f990]
  40de57:	mov    bl,0xfd
  40de59:	inc    DWORD PTR [edi]
  40de5b:	mov    al,0xda
  40de5d:	test   DWORD PTR [edi],0x9875fdea
  40de63:	out    0x7e,eax
  40de65:	inc    BYTE PTR [eax]
  40de67:	push   edi
  40de68:	jmp    0xfffd:0xe264b5fd
  40de6f:	cmp    DWORD PTR [ecx],eax
  40de71:	stos   BYTE PTR es:[edi],al
  40de72:	inc    esi
  40de73:	xchg   esi,eax
  40de74:	add    dh,BYTE PTR [esi-0x4c]
  40de77:	mov    DWORD PTR [edx+0x74],esi
  40de7a:	(bad)  
  40de7b:	xchg   ecx,eax
  40de7c:	leave  
  40de7d:	mov    ebp,0xae6a7efe
  40de82:	jmp    0x40def2
  40de84:	bound  esi,QWORD PTR [edi+eiz*8-0x3c]
  40de88:	and    dh,BYTE PTR [ebp-0x2]
  40de8b:	data16 mov WORD PTR [ebx-0xa],gs
  40de8f:	pop    esi
  40de90:	dec    edx
  40de91:	imul   ecx,DWORD PTR [ecx-0x18bbe02],0xffffff84
  40de98:	inc    ebp
  40de99:	ins    BYTE PTR es:[edi],dx
  40de9a:	inc    BYTE PTR [esi+0x51]
  40de9d:	hlt    
  40de9e:	inc    esi
  40de9f:	ds stos BYTE PTR es:[edi],al
  40dea1:	je     0x40de57
  40dea3:	sbb    DWORD PTR [edx+0x1521fe74],ebp
  40dea9:	mov    ebp,0xbe9226fe
  40deae:	not    DWORD PTR [eax]
  40deb0:	or     DWORD PTR [esi-0x2],esi
  40deb3:	push   ss
  40deb4:	sub    dh,0xfb
  40deb7:	and    DWORD PTR [ebx-0x4fc6ffe6],edi
  40debd:	inc    ecx
  40debe:	pop    es
  40debf:	cmp    DWORD PTR [ecx+ecx*4],edx
  40dec2:	jmp    0x40de7e
  40dec4:	pushf  
  40dec5:	ja     0x40df30
  40dec7:	cmp    DWORD PTR [edi-0x37],ecx
  40deca:	inc    BYTE PTR [eax]
  40decc:	ins    BYTE PTR es:[edi],dx
  40decd:	jno    0x40df39
  40decf:	test   DWORD PTR [ebp-0x36],esi
  40ded2:	je     0x40de5c
  40ded4:	jl     0x40de9b
  40ded6:	jmp    0x40de8f
  40ded8:	jbe    0x40de82
  40deda:	add    bh,bh
  40dedc:	dec    esp
  40dedd:	jno    0x40df49
  40dedf:	pop    es
  40dee0:	mov    edi,0x2cfe7529
  40dee5:	and    eax,0x417475
  40deea:	adc    DWORD PTR [ebx+0x4b1d72fa],esi
  40def0:	js     0x40deed
  40def2:	call   0x69a4a2c5
  40def7:	inc    eax
  40def8:	mov    dh,BYTE PTR [edx+0x7b]
  40defb:	pop    es
  40defc:	xchg   ecx,eax
  40defd:	sbb    al,0xe1
  40deff:	add    edi,DWORD PTR [ecx]
  40df01:	pop    es
  40df02:	sub    edi,ebp
  40df04:	cmp    cl,BYTE PTR [ecx+0x2a]
  40df07:	or     BYTE PTR [ecx],bh
  40df09:	jae    0x40df66
  40df0b:	adc    al,0x51
  40df0d:	or     al,0x1
  40df0f:	add    al,0x39
  40df11:	pop    es
  40df12:	test   eax,0xaa493aee
  40df17:	pop    es
  40df18:	cmp    DWORD PTR [ecx-0x13b883d5],ecx
  40df1e:	shr    BYTE PTR [ebx+0x25],0xbb
  40df22:	mov    ch,0x74
  40df24:	sar    DWORD PTR [ebx+0x74a574ac],0xa5
  40df2b:	out    dx,al
  40df2c:	cs jb  0x40df42
  40df2f:	adc    al,0x0
  40df31:	adc    DWORD PTR [ebx+0x3a],eax
  40df34:	jne    0x40df4d
  40df36:	push   es
  40df37:	test   eax,0x2b8753ef
  40df3c:	jo     0x40dece
  40df3e:	add    BYTE PTR [esi+edi*4+0xa],ch
  40df42:	shl    DWORD PTR [ebp-0x12],1
  40df45:	repnz push 0x71efe7ba
  40df4b:	icebp  
  40df4c:	inc    ebx
  40df4d:	push   0x1a
  40df4f:	rol    DWORD PTR [ebx],1
  40df51:	dec    ecx
  40df52:	popa   
  40df53:	xchg   esi,eax
  40df54:	je     0x40dfa3
  40df56:	or     BYTE PTR [ecx-0x2d],al
  40df59:	jnp    0x40dfcc
  40df5b:	inc    ebp
  40df5c:	je     0x40dfab
  40df5e:	add    al,0x3e
  40df60:	out    dx,al
  40df61:	ss push 0x72798dff
  40df67:	(bad)  
  40df68:	cs lahf 
  40df6a:	ins    DWORD PTR es:[edi],dx
  40df6b:	(bad)  
  40df6c:	pushf  
  40df6d:	cs jb  0x40dfe4
  40df70:	icebp  
  40df71:	adc    ah,ah
  40df73:	inc    edx
  40df74:	push   ss
  40df75:	or     eax,0x220d7472
  40df7a:	fwait
  40df7b:	inc    ebp
  40df7c:	push   es
  40df7d:	or     eax,0x3aedc148
  40df82:	retf   
  40df83:	mov    al,BYTE PTR ds:0x97d33db9
  40df89:	in     eax,0xeb
  40df8b:	or     edx,ecx
  40df8d:	push   edx
  40df8e:	(bad)  
  40df8f:	(bad)  
  40df90:	ficomp WORD PTR [esi-0x4f]
  40df93:	je     0x40df81
  40df95:	add    BYTE PTR [eax+0x48],ch
  40df98:	rcr    ebp,0x3a
  40df9b:	add    DWORD PTR [ecx+edi*4+0x6d],0x72
  40dfa0:	je     0x40df8f
  40dfa2:	loop   0x40dfbb
  40dfa4:	dec    esp
  40dfa5:	mov    dh,0xaa
  40dfa7:	push   es
  40dfa8:	rcr    dh,0xb6
  40dfab:	push   eax
  40dfac:	(bad)  
  40dfad:	call   0x9db550ec
  40dfb2:	jge    0x40e030
  40dfb4:	inc    ebp
  40dfb5:	xchg   esi,eax
  40dfb6:	mov    cl,BYTE PTR [eax-0x137582bc]
  40dfbc:	sti    
  40dfbd:	xchg   BYTE PTR [eax],al
  40dfbf:	gs (bad) 
  40dfc1:	hlt    
  40dfc2:	xchg   edx,eax
  40dfc3:	pop    ecx
  40dfc4:	stos   BYTE PTR es:[edi],al
  40dfc5:	das    
  40dfc6:	push   0x72
  40dfc8:	mov    dh,ah
  40dfca:	mov    gs,WORD PTR [eax-0x5e]
  40dfcd:	jmp    0xfaa8e00c
  40dfd2:	mov    ds:0x72beffbf,al
  40dfd7:	imul   edx,DWORD PTR [edi],0xc0053ae9
  40dfdd:	add    BYTE PTR [ebp-0x2f6716f9],al
  40dfe3:	cld    
  40dfe4:	dec    DWORD PTR [edx+0x48115470]
  40dfea:	loope  0x40dfe8
  40dfec:	out    0x39,eax
  40dfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfef:	cld    
  40dff0:	inc    DWORD PTR [edx]
  40dff2:	inc    eax
  40dff3:	repz jae 0x40dfde
  40dff6:	mov    eax,0x414819
  40dffb:	mov    al,ds:0x98d3e656
  40e000:	cld    
  40e001:	dec    DWORD PTR [edx]
  40e003:	push   eax
  40e004:	ja     0x40e006
  40e006:	jmp    0x40dffe
  40e008:	repnz push cs
  40e00a:	mov    ch,al
  40e00c:	fld    DWORD PTR [edi+0x23547445]
  40e012:	dec    eax
  40e013:	adc    esp,edi
  40e015:	push   ebp
  40e016:	call   0x40e4c5
  40e01b:	pop    ebx
  40e01c:	mov    esp,0x4f6b0273
  40e021:	mov    eax,esi
  40e023:	call   0x2082284e
  40e028:	int3   
  40e029:	cld    
  40e02a:	push   ss
  40e02b:	and    BYTE PTR [ebx+eax*1],al
  40e02e:	lock test eax,0xf368da68
  40e034:	stos   DWORD PTR es:[edi],eax
  40e035:	aas    
  40e036:	add    BYTE PTR [esi-0x34],dl
  40e039:	xchg   esi,eax
  40e03a:	sbb    BYTE PTR [eax],ah
  40e03c:	add    al,0xb
  40e03e:	rol    BYTE PTR ds:0x8a3beb06,0x13
  40e045:	mov    BYTE PTR [ebp-0x29],dl
  40e048:	in     al,dx
  40e049:	inc    ebx
  40e04a:	fcomp  DWORD PTR [ebx+0x38]
  40e04d:	loop   0x40e015
  40e04f:	rol    BYTE PTR [ebx],1
  40e051:	mov    eax,DWORD PTR [ebp+0x78]
  40e054:	mov    ecx,0xd639fffe
  40e059:	neg    ebx
  40e05b:	into   
  40e05c:	push   esp
  40e05d:	pop    edx
  40e05e:	inc    BYTE PTR [eax]
  40e060:	dec    esp
  40e061:	jno    0x40e0bd
  40e063:	xchg   edx,eax
  40e064:	mov    edi,0xc89722e
  40e069:	mov    edx,0xe195447d
  40e06e:	adc    cl,BYTE PTR [edx+0x447e2e0c]
  40e074:	xor    ecx,0x59578012
  40e07a:	add    DWORD PTR [ebp-0x18e021b],eax
  40e080:	xchg   ah,ch
  40e082:	pop    esi
  40e083:	out    0xd8,eax
  40e085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e086:	jno    0x40e086
  40e088:	les    ebx,FWORD PTR [edx+esi*2-0x41d99eb1]
  40e08f:	(bad)  
  40e090:	push   dx
  40e092:	add    ebx,DWORD PTR [esi+0x70]
  40e095:	fwait
  40e096:	(bad)  
  40e097:	(bad)  
  40e098:	in     al,dx
  40e099:	loope  0x40e0fa
  40e09b:	inc    ah
  40e09d:	dec    esp
  40e09e:	pop    edx
  40e09f:	aam    0xf0
  40e0a1:	inc    ebp
  40e0a2:	jo     0x40e0ae
  40e0a4:	jns    0x40e0db
  40e0a6:	sbb    ebp,DWORD PTR [eax+0x2f]
  40e0a9:	push   ds
  40e0aa:	ret    
  40e0ab:	(bad)  
  40e0ac:	jle    0x40e0ef
  40e0ae:	fisttp QWORD PTR [eax+0x26]
  40e0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b2:	shl    DWORD PTR [edi+0x2f],cl
  40e0b5:	stos   DWORD PTR es:[edi],eax
  40e0b6:	ret    
  40e0b7:	call   FWORD PTR [esi-0x3010fda7]
  40e0bd:	add    BYTE PTR [ecx],cl
  40e0bf:	dec    eax
  40e0c0:	js     0x40e11b
  40e0c2:	sar    dh,cl
  40e0c4:	add    BYTE PTR [ecx+esi*2-0x99e7ea6],al
  40e0cb:	jo     0x40e0b4
  40e0cd:	nop
  40e0ce:	and    al,0x71
  40e0d0:	(bad)  
  40e0d1:	lock jmp FWORD PTR [edx]
  40e0d4:	cld    
  40e0d5:	(bad)  
  40e0d7:	jno    0x40e139
  40e0d9:	mov    ebx,0xcede5443
  40e0de:	fsub   DWORD PTR [edx+0x50f84d70]
  40e0e4:	in     eax,dx
  40e0e5:	js     0x40e156
  40e0e7:	cmp    eax,0xc26bfd7b
  40e0ec:	or     eax,0x5be0f4ae
  40e0f1:	(bad)  [esi+0x25]
  40e0f4:	jno    0x40e106
  40e0f6:	and    ebx,DWORD PTR [esi]
  40e0f8:	idiv   DWORD PTR [esi]
  40e0fa:	pop    eax
  40e0fb:	jno    0x40e16e
  40e0fd:	(bad)  
  40e0fe:	outs   dx,BYTE PTR ds:[esi]
  40e0ff:	or     BYTE PTR [edi],0x86
  40e102:	hlt    
  40e103:	lock pop ebx
  40e105:	test   eax,0xde70fd6e
  40e10a:	(bad)  
  40e10b:	call   0xe8188d70
  40e110:	mov    ebx,0x7a50fff9
  40e115:	test   eax,0xf7cd70e8
  40e11b:	shl    BYTE PTR [esi],0xe3
  40e11e:	outs   dx,BYTE PTR ds:[esi]
  40e11f:	int    0x70
  40e121:	int    0x6b
  40e123:	(bad)
  40e126:	pop    eax
  40e127:	mov    BYTE PTR ds:[eax],0x37
  40e12b:	outs   dx,BYTE PTR ds:[esi]
  40e12c:	lahf   
  40e12d:	inc    ebp
  40e12e:	cmp    al,BYTE PTR [eax]
  40e130:	adc    al,0x7d
  40e132:	adc    al,BYTE PTR [eax+0x6e274bac]
  40e138:	popf   
  40e139:	jle    0x40e1b8
  40e13b:	ins    BYTE PTR es:[edi],dx
  40e13c:	cmp    BYTE PTR [ecx-0x7b],dh
  40e13f:	cld    
  40e140:	(bad)  
  40e141:	idiv   BYTE PTR [esi]
  40e143:	pop    eax
  40e144:	sub    al,0x19
  40e146:	cmp    DWORD PTR [eax],eax
  40e148:	repnz inc ebx
  40e14a:	inc    edi
  40e14b:	cmp    edi,0xffffffa8
  40e14e:	cmp    eax,DWORD PTR [eax]
  40e150:	add    BYTE PTR [esi-0x17008a01],ah
  40e156:	cmp    al,BYTE PTR [eax]
  40e158:	(bad)  
  40e159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e15a:	dec    esi
  40e15b:	outs   dx,BYTE PTR ds:[esi]
  40e15c:	push   es
  40e15d:	jmp    0xc340bb9c
  40e162:	cmp    bl,dl
  40e164:	call   edx
  40e166:	cmp    bh,BYTE PTR [ebx+0x44]
  40e169:	xor    eax,0x3d847c8a
  40e16e:	xor    DWORD PTR [esi-0x2],ebp
  40e171:	cdq    
  40e172:	sub    esp,esi
  40e174:	mul    DWORD PTR [esi]
  40e176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e177:	imul   esp,edi,0x31f7
  40e17d:	loop   0x40e179
  40e17f:	lock add al,0x0
  40e182:	mov    ebp,0x62e90000
  40e187:	cmp    al,0x27
  40e189:	test   al,0x3a
  40e18b:	ins    DWORD PTR es:[edi],dx
  40e18c:	je     0x40e173
  40e18e:	add    BYTE PTR [edx],dl
  40e190:	sub    BYTE PTR [eax-0x12],cl
  40e193:	(bad)  
  40e194:	mov    esp,0x84b8b98a
  40e199:	repz (bad) 
  40e19b:	out    0x6d,al
  40e19d:	dec    edi
  40e19e:	cmp    ebp,ebp
  40e1a0:	pop    ss
  40e1a1:	dec    eax
  40e1a2:	into   
  40e1a3:	(bad)  
  40e1a4:	ja     0x40e12a
  40e1a6:	mov    eax,ds:0xd1fe6dc6
  40e1ab:	es sar esi,0xb6
  40e1af:	adc    ebp,DWORD PTR [ebp+0x66]
  40e1b2:	sbb    ch,ah
  40e1b4:	mov    edi,0x54e0a5ff
  40e1b9:	neg    BYTE PTR [esi-0x1e8b915a]
  40e1bf:	jb     0x40e240
  40e1c1:	inc    esi
  40e1c2:	mov    ss,WORD PTR [esi-0x7fff7b88]
  40e1c8:	cmc    
  40e1c9:	std    
  40e1ca:	dec    DWORD PTR [edx+0x4]
  40e1cd:	push   0xfe43185a
  40e1d2:	(bad)  
  40e1d3:	sub    eax,0x57fff5bc
  40e1d8:	fnsave [ebx+0x8]
  40e1db:	push   0x67ff4565
  40e1e0:	jmp    0x40e165
  40e1e2:	in     al,dx
  40e1e3:	outs   dx,DWORD PTR ds:[esi]
  40e1e4:	(bad)  
  40e1e6:	push   0xffffffd0
  40e1e8:	dec    eax
  40e1e9:	popa   
  40e1ea:	dec    eax
  40e1eb:	loope  0x40e1ed
  40e1ed:	push   DWORD PTR [ebp-0x20ab8]
  40e1f3:	add    BYTE PTR [edi+0x67],dl
  40e1f6:	push   es
  40e1f7:	call   0x3e27e0
  40e1fc:	or     DWORD PTR [edi-0x1a],esi
  40e1ff:	mul    DWORD PTR [edi]
  40e201:	fisttp QWORD PTR [ebx-0x20aab7b]
  40e207:	jmp    DWORD PTR [eax-0x5eb795b8]
  40e20d:	add    bh,bh
  40e20f:	mov    ch,0x48
  40e211:	cmc    
  40e212:	std    
  40e213:	call   DWORD PTR [edi+0x67]
  40e216:	push   es
  40e217:	call   0x3e2760
  40e21c:	leave  
  40e21d:	ja     0x40e201
  40e21f:	mul    DWORD PTR [edi-0x23]
  40e222:	push   0x4674f800
  40e227:	inc    ecx
  40e228:	push   eax
  40e229:	fnsave [ebx-0x2251028]
  40e22f:	jmp    FWORD PTR [ebp+0x6c]
  40e232:	out    0x11,al
  40e234:	pop    edi
  40e235:	(bad)  
  40e237:	mov    DWORD PTR [ebp-0x48000a21],ecx
  40e23d:	jle    0x40e1fa
  40e23f:	lock cmp DWORD PTR [edx+0x1539fe6d],ecx
  40e246:	fild   DWORD PTR [edx-0x18a6a44]
  40e24c:	neg    BYTE PTR [ecx-0xa]
  40e24f:	popa   
  40e250:	mov    edx,0xe6f65b34
  40e255:	fiadd  DWORD PTR [edx]
  40e257:	je     0x40e259
  40e259:	adc    BYTE PTR [ecx+0x2],0x0
  40e25d:	out    0x8b,al
  40e25f:	ins    DWORD PTR es:[edi],dx
  40e260:	je     0x40e28b
  40e262:	rcl    esi,0x3f
  40e265:	(bad)  
  40e266:	mov    edx,0x2ac9b46d
  40e26b:	outs   dx,BYTE PTR ds:[esi]
  40e26c:	(bad)  
  40e26d:	mov    dh,0xb4
  40e26f:	adc    ch,al
  40e271:	loope  0x40e20c
  40e273:	ins    DWORD PTR es:[edi],dx
  40e274:	(bad)  
  40e275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e276:	hlt    
  40e277:	pop    esi
  40e278:	neg    BYTE PTR [esi+0x29746e22]
  40e27e:	adc    DWORD PTR [ecx+0x6e128e3f],ecx
  40e284:	mov    ah,0x91
  40e286:	adc    ch,BYTE PTR [esi-0x2]
  40e289:	jle    0x40e277
  40e28b:	adc    ch,al
  40e28d:	lds    ebx,FWORD PTR [ecx+0x2c6efe6d]
  40e293:	dec    edi
  40e294:	mul    BYTE PTR [esi+0x5a]
  40e297:	ins    BYTE PTR es:[edi],dx
  40e298:	mov    ah,0x55
  40e29a:	dec    edx
  40e29b:	ins    BYTE PTR es:[edi],dx
  40e29c:	(bad)  
  40e29d:	push   esi
  40e29e:	aam    0x13
  40e2a0:	call   0xfeadfba2
  40e2a5:	inc    esi
  40e2a6:	xchg   esp,eax
  40e2a7:	arpl   si,si
  40e2a9:	ds inc edx
  40e2ab:	ins    BYTE PTR es:[edi],dx
  40e2ac:	je     0x40e2f7
  40e2ae:	push   ecx
  40e2af:	fnstcw WORD PTR [edi]
  40e2b1:	cs mov dl,0x6c
  40e2b4:	je     0x40e2ff
  40e2b6:	call   0x6da6:0x26d7b6
  40e2bd:	add    BYTE PTR [edi],dl
  40e2bf:	cmc    
  40e2c0:	lock pop ebx
  40e2c2:	mov    BYTE PTR [edx-0x6b],ch
  40e2c5:	ins    DWORD PTR es:[edi],dx
  40e2c6:	pop    es
  40e2c7:	mov    ch,0xb0
  40e2c9:	jne    0x40e2ca
  40e2cb:	push   0xffffff90
  40e2cd:	loope  0x40e34a
  40e2cf:	imul   edi,DWORD PTR [ebp+0x6d],0xffffffa5
  40e2d3:	outs   dx,DWORD PTR ds:[esi]
  40e2d4:	jge    0x40e343
  40e2d6:	out    0x57,eax
  40e2d8:	adc    cl,al
  40e2da:	fild   QWORD PTR [edx+0x65]
  40e2dd:	mov    bh,0xe2
  40e2df:	jb     0x40e33e
  40e2e1:	ins    DWORD PTR es:[edi],dx
  40e2e2:	(bad)  
  40e2e3:	mov    esp,0x6ac76ca9
  40e2e8:	xchg   ebx,eax
  40e2e9:	pop    esp
  40e2ea:	(bad)  
  40e2eb:	push   0x45
  40e2ed:	pop    esp
  40e2ee:	clc    
  40e2ef:	mov    esi,0xb4af6d3d
  40e2f4:	dec    esp
  40e2f5:	jne    0x40e29e
  40e2f7:	push   0x40
  40e2f9:	xor    eax,0x6d256afa
  40e2fe:	int    0x5f
  40e300:	adc    eax,0xc4578f6d
  40e305:	rol    BYTE PTR [edi-0x7938f296],0x58
  40e30c:	mov    ch,0x6d
  40e30e:	ja     0x40e37a
  40e310:	std    
  40e311:	div    BYTE PTR [edx+0x57]
  40e314:	jle    0x40e32c
  40e316:	cmp    DWORD PTR [eax],eax
  40e318:	and    BYTE PTR [edx+0x32],al
  40e31b:	add    BYTE PTR [ecx+edi*2],bh
  40e31e:	bound  edi,QWORD PTR [esi-0x5c]
  40e321:	outs   dx,DWORD PTR ds:[esi]
  40e322:	add    al,ah
  40e324:	inc    DWORD PTR [edx-0x47]
  40e327:	inc    edi
  40e328:	hlt    
  40e329:	loopne 0x40e386
  40e32b:	cld    
  40e32c:	mov    edi,0xc3c16cc5
  40e331:	mov    esp,0xfff8a56c
  40e336:	inc    eax
  40e337:	inc    esi
  40e338:	mov    eax,0x348de940
  40e33d:	pop    esp
  40e33e:	sar    bl,1
  40e340:	imul   esp,esi,0xfe6a9f95
  40e346:	xchg   esi,eax
  40e347:	lar    ebp,WORD PTR [eax-0x44]
  40e34b:	ret    0xffc0
  40e34e:	adc    BYTE PTR [ebx],bh
  40e350:	add    BYTE PTR [eax],al
  40e352:	imul   edx,DWORD PTR [edx+0x5576fc5f],0x4d6d746a
  40e35c:	hlt    
  40e35d:	pop    es
  40e35e:	push   ecx
  40e35f:	jmp    0x40e38a
  40e361:	call   FWORD PTR [esi+0x13]
  40e364:	aas    
  40e365:	add    ebp,ecx
  40e367:	out    dx,eax
  40e368:	jbe    0x40e355
  40e36a:	push   0x76
  40e36c:	gs imul ebp,ecx,0xb4feb590
  40e373:	mov    dl,0x61
  40e375:	hlt    
  40e376:	not    BYTE PTR ds:0xea4886a
  40e37c:	loope  0x40e37d
  40e37e:	call   0x65a88e78
  40e383:	rol    al,cl
  40e385:	inc    DWORD PTR [eax+0x40c10500]
  40e38b:	jmp    0x1148d79d
  40e390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e391:	loop   0x40e391
  40e393:	(bad)  
  40e394:	loop   0x40e389
  40e396:	sti    
  40e397:	imul   BYTE PTR [ecx+eax*1-0x18]
  40e39b:	xlat   BYTE PTR ds:[ebx]
  40e39c:	jp     0x40e408
  40e39e:	(bad)  
  40e39f:	mov    al,0xff
  40e3a1:	cld    
  40e3a2:	push   DWORD PTR [ebx]
  40e3a4:	into   
  40e3a5:	push   esp
  40e3a6:	sub    BYTE PTR [ebp-0x31018e13],0xc0
  40e3ad:	ret    
  40e3ae:	sti    
  40e3af:	add    BYTE PTR [eax-0x2b],dl
  40e3b2:	jae    0x40e3c0
  40e3b4:	out    dx,eax
  40e3b5:	outs   dx,BYTE PTR ds:[esi]
  40e3b6:	push   es
  40e3b7:	call   0x40f388
  40e3bc:	sbb    edi,DWORD PTR [ebp+0x315850d]
  40e3c2:	add    BYTE PTR [eax],al
  40e3c4:	xlat   BYTE PTR ds:[ebx]
  40e3c5:	test   BYTE PTR ds:[eax],0x10
  40e3c9:	std    
  40e3ca:	inc    esi
  40e3cc:	push   ebp
  40e3cd:	lock std 
  40e3cf:	pop    es
  40e3d0:	loopne 0x40e3ce
  40e3d2:	imul   eax,DWORD PTR [eax],0x6a044a
  40e3d8:	cmp    al,BYTE PTR [ecx*4-0x74ab9bbb]
  40e3df:	test   DWORD PTR [ebp+ebp*8-0x3],esi
  40e3e3:	call   DWORD PTR [eax+0x6ff873d5]
  40e3e9:	outs   dx,DWORD PTR ds:[esi]
  40e3ea:	cli    
  40e3eb:	call   0x5121f0
  40e3f0:	add    BYTE PTR [ebx+0x90572bc],ch
  40e3f6:	mov    esp,0x4490ffff
  40e3fb:	retf   
  40e3fc:	sub    cl,dl
  40e3fe:	cld    
  40e3ff:	(bad)  
  40e400:	jne    0x40e38e
  40e402:	(bad)  
  40e403:	iret   
  40e404:	inc    ebp
  40e405:	das    
  40e406:	aad    0x4e
  40e408:	mov    eax,DWORD PTR [eax-0x19]
  40e40b:	xor    esp,0x27
  40e40e:	aad    0xfd
  40e410:	push   eax
  40e411:	rol    ah,cl
  40e413:	mov    edi,0x87d56f45
  40e418:	test   DWORD PTR [eax-0x13],ecx
  40e41b:	std    
  40e41c:	(bad)  
  40e41d:	cmp    BYTE PTR ds:0x4a5fff42,cl
  40e423:	(bad)  
  40e424:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e427:	aas    
  40e428:	add    BYTE PTR [ecx],bh
  40e42a:	push   edx
  40e42b:	scas   eax,DWORD PTR es:[edi]
  40e42c:	xlat   BYTE PTR ds:[ebx]
  40e42d:	inc    esi
  40e42e:	cmp    DWORD PTR [ecx-0x2],ebp
  40e431:	lods   al,BYTE PTR ds:[esi]
  40e432:	jno    0x40e48e
  40e434:	sbb    DWORD PTR [esi+eiz*4+0x69],esi
  40e438:	mov    BYTE PTR [ecx+ebp*4-0x3be1018f],bh
  40e43f:	add    ebp,DWORD PTR [eax+0x4]
  40e442:	xor    al,ch
  40e444:	dec    DWORD PTR [edi]
  40e446:	int    0x4a
  40e448:	test   BYTE PTR [esi],0x8f
  40e44b:	imul   esi,DWORD PTR [ecx+esi*1-0x7f],0xf6004369
  40e453:	jle    0x40e4d0
  40e455:	test   ch,bl
  40e457:	out    dx,al
  40e458:	imul   edi,esi,0xe1da5953
  40e45e:	jno    0x40e478
  40e460:	add    al,0xff
  40e462:	mov    ecx,es
  40e464:	jno    0x40e464
  40e466:	into   
  40e467:	(bad)  
  40e468:	out    dx,eax
  40e469:	pop    es
  40e46a:	shl    DWORD PTR [ebp-0x1f410142],1
  40e470:	jg     0x40e459
  40e472:	scas   al,BYTE PTR es:[edi]
  40e473:	mov    esi,0x5b48c69
  40e478:	jb     0x40e478
  40e47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e47b:	mov    edx,ebx
  40e47d:	cli    
  40e47e:	icebp  
  40e47f:	xchg   edi,eax
  40e480:	add    bh,bh
  40e482:	int3   
  40e483:	shl    DWORD PTR [ecx-0x2],0x8e
  40e487:	push   es
  40e488:	lock pop es
  40e48a:	xchg   ecx,eax
  40e48b:	adc    eax,0xe07efebf
  40e490:	jg     0x40e475
  40e492:	outs   dx,BYTE PTR ds:[esi]
  40e493:	(bad)  
  40e494:	imul   ebp,DWORD PTR [ecx+0x39],0xf8491291
  40e49b:	pop    eax
  40e49c:	imul   esi,DWORD PTR [ecx+eax*4+0x56fe686e],0x56fc5c00
  40e4a7:	cdq    
  40e4a8:	and    al,0x69
  40e4aa:	inc    edi
  40e4ab:	jns    0x40e518
  40e4ad:	fs inc edi
  40e4af:	addr16 int 0x77
  40e4b2:	mov    ebp,0x69bd4f
  40e4b7:	das    
  40e4b8:	rcl    BYTE PTR [eax+0x1c],1
  40e4bb:	jo     0x40e47e
  40e4bd:	call   0xb588ca2a
  40e4c2:	imul   edx,DWORD PTR [edi],0x16fc1b67
  40e4c8:	jns    0x40e4ee
  40e4ca:	imul   eax,DWORD PTR [edi],0x7506b79
  40e4d0:	lea    eax,[di+0x6fb5]
  40e4d5:	jge    0x40e540
  40e4d7:	out    dx,eax
  40e4d8:	push   esp
  40e4da:	fdivr  QWORD PTR [ebx-0x208e7b5c]
  40e4e0:	callw  0x3dd3
  40e4e4:	and    DWORD PTR [ebx+0x5d66c75c],0x4
  40e4eb:	dec    ebp
  40e4ec:	leave  
  40e4ed:	rol    BYTE PTR [ebx],0x39
  40e4f0:	push   edi
  40e4f1:	mov    gs,WORD PTR [ecx+0x2d]
  40e4f4:	adc    BYTE PTR [ecx+0x38],dl
  40e4f7:	ins    DWORD PTR es:[edi],dx
  40e4f8:	addr16 cmp eax,0x3d6fed69
  40e4fe:	imul   ebx,DWORD PTR [edi-0x5eec4c9a],0x8f68e71f
  40e508:	push   bx
  40e50a:	pop    eax
  40e50b:	(bad)  
  40e50c:	adc    ax,0x569
  40e510:	adc    BYTE PTR [ecx],al
  40e512:	push   ss
  40e513:	aaa    
  40e514:	addr16 add eax,0xf557a569
  40e51a:	push   0xff666700
  40e51f:	jnp    0x40e56b
  40e521:	pop    eax
  40e522:	add    ebp,DWORD PTR [edi-0x63019a1f]
  40e528:	imul   BYTE PTR [ebp-0x2]
  40e52b:	(bad)  
  40e52d:	stos   DWORD PTR es:[edi],eax
  40e52e:	jecxz  0x40e50e
  40e530:	shl    DWORD PTR [ebp-0x2],1
  40e533:	push   esp
  40e534:	dec    ebp
  40e535:	pop    eax
  40e536:	ret    
  40e537:	add    al,0xa0
  40e539:	data16 (bad) 
  40e53b:	je     0x40e4d7
  40e53d:	outs   dx,BYTE PTR ds:[esi]
  40e53e:	(bad)  
  40e53f:	mov    dh,0x91
  40e541:	in     al,dx
  40e542:	xadd   DWORD PTR [esp-0x5b4a5901],ebx
  40e54a:	iret   
  40e54b:	xchg   esi,eax
  40e54c:	xchg   ecx,eax
  40e54d:	call   DWORD PTR [edx+ebx*2]
  40e551:	fadd   DWORD PTR [eax]
  40e553:	jmp    0xfd3f88e9
  40e558:	dec    edx
  40e559:	pop    eax
  40e55a:	imul   edi,DWORD PTR [ecx+edx*2-0x75c3019a],0x616efe6e
  40e565:	lods   al,BYTE PTR ds:[esi]
  40e566:	rcr    DWORD PTR [esi+0x61],cl
  40e569:	data16 (bad) 
  40e56b:	aam    0x2a
  40e56d:	pop    eax
  40e56e:	mov    edx,DWORD PTR [eax+edx*2]
  40e571:	data16 (bad) 
  40e573:	aam    0x4a
  40e575:	gs mov ah,0x21
  40e578:	sub    DWORD PTR [esi-0x2],esp
  40e57b:	ds xchg edi,eax
  40e57d:	std    
  40e57e:	out    0x1,eax
  40e580:	add    BYTE PTR [ebx],dl
  40e582:	data16 (bad) 
  40e584:	cs out 0x4d,eax
  40e587:	mul    BYTE PTR [esi]
  40e589:	and    DWORD PTR [ebp-0x50],ebx
  40e58c:	test   eax,0x5cfe6611
  40e591:	or     ch,BYTE PTR [esi-0x2]
  40e594:	push   cs
  40e595:	adc    bl,BYTE PTR [ebx-0x27c8ffc1]
  40e59b:	std    
  40e59c:	mov    ch,0x34
  40e59e:	lock std 
  40e5a0:	(bad)  
  40e5a1:	cmp    BYTE PTR [esi+edi*1-0x1],dh
  40e5a5:	fnsave [bp+di+0x6fe8]
  40e5aa:	(bad)  
  40e5ac:	call   0x3e2171
  40e5b1:	scas   eax,DWORD PTR es:[di]
  40e5b3:	loop   0x40e5ac
  40e5b5:	pop    es
  40e5b6:	fucom  st(6)
  40e5b8:	test   DWORD PTR [eax-0x23],esp
  40e5bb:	std    
  40e5bc:	jmp    FWORD PTR [ebp-0x18000a24]
  40e5c2:	ret    
  40e5c3:	js     0x40e605
  40e5c5:	out    0xdc,eax
  40e5c7:	std    
  40e5c8:	mov    ch,0xcc
  40e5ca:	aam    0xfd
  40e5cc:	jmp    FWORD PTR [eax-0x5800c1b4]
  40e5d2:	fadd   QWORD PTR [ebx-0x8]
  40e5d5:	mov    ecx,0xb7fffbd9
  40e5da:	fdiv   QWORD PTR [ebx-0x4]
  40e5dd:	enter  0x1092,0x0
  40e5e1:	shl    BYTE PTR [ebx],1
  40e5e3:	ror    DWORD PTR [eax+eax*1],0xe0
  40e5e7:	dec    edi
  40e5e8:	mov    esp,ebp
  40e5ea:	arpl   ax,ax
  40e5ec:	cli    
  40e5ed:	push   0xffffffd0
  40e5ef:	inc    esi
  40e5f0:	dec    ebx
  40e5f1:	(bad)  
  40e5f2:	(bad)  [eax-0x1a]
  40e5f5:	add    DWORD PTR [ebp-0x23],0xdcdd89fd
  40e5fc:	std    
  40e5fd:	jne    0x40e5a7
  40e5ff:	dec    eax
  40e600:	cwde   
  40e601:	dec    eax
  40e602:	rol    DWORD PTR [eax],1
  40e604:	push   DWORD PTR ds:0x4103c4
  40e60a:	sub    BYTE PTR [ebp-0x5],bh
  40e60d:	jmp    DWORD PTR [edi]
  40e60f:	fnsave [ebx+0x8]
  40e612:	cmp    DWORD PTR [edi-0x78],edi
  40e615:	inc    edi
  40e616:	clc    
  40e617:	push   esi
  40e618:	fiadd  DWORD PTR [ecx]
  40e61a:	cmp    DWORD PTR [edi-0x7e],edx
  40e61d:	out    0xb4,eax
  40e61f:	arpl   WORD PTR [ebp-0x2],sp
  40e622:	pop    esi
  40e623:	jecxz  0x40e68b
  40e625:	dec    ah
  40e627:	pop    esi
  40e628:	pop    edx
  40e629:	xchg   ebx,eax
  40e62a:	or     al,0x5e
  40e62c:	gs enter 0x5a7b,0x2
  40e631:	push   ebp
  40e632:	mov    dl,0x3a
  40e634:	add    ebx,0x69cf2c35
  40e63a:	cmp    edi,ecx
  40e63c:	mov    ch,0xfe
  40e63e:	lods   al,BYTE PTR ds:[esi]
  40e63f:	jno    0x40e69b
  40e641:	xor    eax,0x8865aa5c
  40e646:	jl     0x40e5dd
  40e648:	jns    0x40e67e
  40e64a:	add    BYTE PTR [ecx+edx*2+0x44b3ffc3],al
  40e651:	jmp    0x40e67a
  40e653:	js     0x40e6ae
  40e655:	cmp    BYTE PTR [esi],0x39
  40e658:	or     eax,0x302467c1
  40e65d:	(bad)  
  40e660:	xchg   ecx,eax
  40e661:	jmp    0xf99a1f77
  40e666:	mov    edi,0xe7cc324d
  40e66b:	scas   eax,DWORD PTR es:[edi]
  40e66c:	mov    al,0x65
  40e66e:	(bad)  
  40e66f:	imul   edx,DWORD PTR [ecx+0x2],0xda8bce00
  40e676:	cmp    eax,0x50029800
  40e67b:	scas   al,BYTE PTR es:[edi]
  40e67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67d:	cli    
  40e67e:	out    0xc9,eax
  40e680:	cmp    eax,0xed91fe65
  40e685:	and    eax,0x3be96ff
  40e68a:	inc    esi
  40e68b:	mov    ecx,0xc03e700
  40e690:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e692:	addr16 dec ebx
  40e694:	inc    eax
  40e695:	dec    edi
  40e696:	data16 ja 0x40e6fc
  40e699:	or     eax,0xee289c71
  40e69e:	lock mov ds:0x5f677363,eax
  40e6a4:	in     eax,dx
  40e6a5:	loopne 0x40e702
  40e6a7:	cs and eax,0xc1ef65ee
  40e6ad:	scas   eax,DWORD PTR es:[edi]
  40e6ae:	inc    edx
  40e6af:	add    BYTE PTR [edx],bh
  40e6b1:	add    BYTE PTR [ecx+edi*2],dh
  40e6b4:	push   edx
  40e6b5:	jg     0x40e663
  40e6b7:	push   0xb54300a0
  40e6bc:	das    
  40e6bd:	in     eax,dx
  40e6be:	lock pop ebx
  40e6c0:	loopne 0x40e6e5
  40e6c2:	mov    esi,0xb4bcb165
  40e6c7:	ficom  DWORD PTR [esi]
  40e6c9:	fild   DWORD PTR [ecx-0x45]
  40e6cc:	jns    0x40e6ce
  40e6ce:	adc    DWORD PTR [ecx+0x64e8c171],edi
  40e6d4:	inc    ebp
  40e6d5:	les    edi,FWORD PTR [edi+0x685af6c2]
  40e6db:	ret    0x62ef
  40e6de:	icebp  
  40e6df:	inc    ebx
  40e6e0:	push   0x9
  40e6e2:	sbb    esp,ebx
  40e6e4:	fisub  WORD PTR [edx-0x7b]
  40e6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e8:	pop    esi
  40e6e9:	in     al,0x1f
  40e6eb:	ret    
  40e6ec:	into   
  40e6ed:	mov    dl,0x65
  40e6ef:	out    dx,eax
  40e6f0:	ds pop eax
  40e6f2:	std    
  40e6f3:	fistp  QWORD PTR [edi+0x77b94062]
  40e6f9:	arpl   WORD PTR [ebp-0x24],cx
  40e6fc:	scas   al,BYTE PTR es:[edi]
  40e6fd:	bound  edx,QWORD PTR [ebp-0x5a]
  40e700:	push   ds
  40e701:	in     al,0xaf
  40e703:	ret    0xda9e
  40e706:	(bad)  
  40e707:	mov    ecx,0x2dffbfd3
  40e70c:	sahf   
  40e70d:	cli    
  40e70e:	out    0xb7,eax
  40e710:	popaw  
  40e712:	(bad)  
  40e713:	push   ds
  40e714:	add    BYTE PTR [esi+0x729cfe66],cl
  40e71a:	pop    edx
  40e71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e71c:	int    0xd5
  40e71e:	popa   
  40e71f:	enter  0x392b,0x0
  40e723:	push   ebp
  40e724:	jb     0x40e727
  40e726:	jle    0x40e6eb
  40e728:	cmc    
  40e729:	test   cl,cl
  40e72b:	imul   ebp,ecx,0x5cfeb270
  40e731:	inc    ebp
  40e732:	pop    edx
  40e733:	dec    eax
  40e734:	sbb    eax,0x2c8861d4
  40e739:	mov    eax,ds:0x4d543476
  40e73e:	mov    edi,0xe75f71ff
  40e743:	daa    
  40e744:	sub    BYTE PTR ds:0x26e93e80,dh
  40e74a:	mov    ebp,0xc0d36267
  40e74f:	(bad)  
  40e750:	cmp    eax,0xe9107365
  40e755:	cmp    dh,ch
  40e757:	mov    edi,0xe7ca3c1d
  40e75c:	pop    eax
  40e75d:	mov    dl,0x62
  40e75f:	(bad)  
  40e760:	sbb    DWORD PTR ds:0x948efe62,eax
  40e766:	fst    DWORD PTR [eax+eiz*1+0x6e4e61fa]
  40e76d:	(bad)  
  40e76f:	out    0x8a,eax
  40e771:	fldenv [edx-0x2]
  40e774:	push   ecx
  40e775:	add    eax,0x56ff23
  40e77a:	adc    DWORD PTR [eax],eax
  40e77c:	inc    esi
  40e77d:	imul   edx,DWORD PTR [eax+eax*1+0x75],0xfaa2fa00
  40e785:	xor    edx,DWORD PTR [eax-0x6a]
  40e788:	std    
  40e789:	dec    DWORD PTR [edi-0x24]
  40e78c:	lock scas al,BYTE PTR es:[edi]
  40e78e:	mov    BYTE PTR [ebx+esi*2-0x45],ah
  40e792:	pop    edi
  40e793:	push   edx
  40e794:	cli    
  40e795:	jmp    DWORD PTR [ebp-0x73d4199b]
  40e79b:	fdiv   st(5),st
  40e79d:	pop    edi
  40e79e:	sahf   
  40e79f:	rol    DWORD PTR es:[eax+edx*2],0x32
  40e7a4:	mov    esp,ebp
  40e7a6:	shl    DWORD PTR [eax],cl
  40e7a8:	sti    
  40e7a9:	push   esi
  40e7aa:	mov    bh,0x47
  40e7ac:	(bad)  
  40e7ad:	imul   esi,DWORD PTR [ecx+0x680873dc],0x5fff39b1
  40e7b7:	jae    0x40e7fc
  40e7b9:	cld    
  40e7ba:	fwait
  40e7bb:	pop    es
  40e7bc:	jne    0x40e7e6
  40e7be:	popa   
  40e7bf:	cld    
  40e7c0:	mov    bh,BYTE PTR ds:0x411479
  40e7c6:	nop
  40e7c7:	sbb    eax,0x54657400
  40e7cc:	lahf   
  40e7cd:	dec    ecx
  40e7ce:	popa   
  40e7cf:	cld    
  40e7d0:	push   esi
  40e7d1:	call   0x3f53d6
  40e7d6:	or     edi,DWORD PTR [ebp-0x2bc9e08e]
  40e7dc:	xor    DWORD PTR [eax+0x0],ecx
  40e7df:	mov    edi,0xd0684edc
  40e7e4:	cld    
  40e7e5:	out    dx,al
  40e7e6:	mov    esi,0x41478948
  40e7eb:	loopne 0x40e799
  40e7ed:	std    
  40e7ee:	jne    0x40e7c8
  40e7f0:	aam    0x23
  40e7f2:	arpl   WORD PTR [edi-0x23],bx
  40e7f5:	out    0x51,al
  40e7f7:	push   ds
  40e7f8:	(bad)  
  40e7fa:	jmp    0x40e835
  40e7fc:	pop    eax
  40e7fd:	enter  0x6f7f,0x57
  40e801:	xlat   BYTE PTR ds:[ebx]
  40e802:	stc    
  40e803:	(bad)  
  40e804:	mov    edx,0x21e0c016
  40e809:	arpl   si,di
  40e80b:	xchg   esi,eax
  40e80c:	and    al,0xb2
  40e80e:	aaa    
  40e80f:	lods   al,BYTE PTR ss:[esi]
  40e811:	popf   
  40e812:	dec    BYTE PTR [ebx+ebx*1]
  40e815:	arpl   WORD PTR [ecx+esi*1+0xf],si
  40e819:	mov    cl,0x3a
  40e81b:	jbe    0x40e826
  40e81d:	ret    
  40e81e:	pop    ebp
  40e81f:	adc    BYTE PTR [eax+ecx*1],0x0
  40e823:	or     al,0xee
  40e825:	outs   dx,DWORD PTR ds:[esi]
  40e826:	xor    BYTE PTR [ebp+0x62],0xec
  40e82a:	jmp    eax
  40e82c:	test   BYTE PTR [ecx+0x74],ah
  40e82f:	inc    ecx
  40e830:	call   edx
  40e832:	cmp    al,BYTE PTR [esi+0x59]
  40e835:	mov    eax,DWORD PTR [ebp+edi*1-0x32]
  40e839:	mov    eax,ds:0x61697848
  40e83e:	je     0x40e881
  40e840:	inc    ecx
  40e841:	rcr    bh,1
  40e843:	add    BYTE PTR [esi],ah
  40e845:	inc    edi
  40e846:	popa   
  40e847:	je     0x40e866
  40e849:	lahf   
  40e84a:	xlat   BYTE PTR ds:[ebx]
  40e84b:	pop    es
  40e84c:	and    DWORD PTR [edi+ebx*1],edx
  40e84f:	dec    DWORD PTR [esi]
  40e851:	mov    eax,ds:0x1c390344
  40e856:	(bad)  
  40e857:	jmp    0x40e813
  40e859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e85a:	pop    esi
  40e85b:	push   esi
  40e85c:	popa   
  40e85d:	mov    al,ds:0x71393f3c
  40e862:	aam    0x0
  40e864:	cli    
  40e865:	xchg   BYTE PTR [ecx+0x44],cl
  40e868:	(bad)  [ecx+0x2]
  40e86b:	add    BYTE PTR [ecx],bh
  40e86d:	push   ss
  40e86e:	cmp    DWORD PTR [eax+0x78],ecx
  40e871:	imul   esp,DWORD PTR [ecx+0x74],0x8760031
  40e878:	adc    ecx,ebx
  40e87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87b:	add    ebx,DWORD PTR ds:0x390418a1
  40e881:	add    BYTE PTR [ecx-0x25],ch
  40e884:	cmp    BYTE PTR [eax],al
  40e886:	mov    ebp,0xf0d59e0b
  40e88b:	imul   esp,DWORD PTR [ebx+0x15],0x36
  40e88f:	bound  esp,QWORD PTR [ecx+0x3903e898]
  40e895:	push   0x5f7fcac4
  40e89a:	sbb    eax,0x6683ed8
  40e89f:	sbb    al,0x6e
  40e8a1:	pop    edi
  40e8a2:	dec    ecx
  40e8a3:	sub    edx,esi
  40e8a5:	shr    al,0xe7
  40e8a8:	add    BYTE PTR [edi+0x15],bl
  40e8ab:	jmp    0x624121b3
  40e8b0:	inc    edi
  40e8b1:	ficomp DWORD PTR [esi-0x4d]
  40e8b4:	add    edi,DWORD PTR [ecx]
  40e8b6:	add    cl,ch
  40e8b8:	mov    dh,0xee
  40e8ba:	out    0x83,eax
  40e8bc:	cmp    eax,0xc2410076
  40e8c1:	adc    eax,eax
  40e8c3:	call   0xbca837b
  40e8c8:	add    al,0x39
  40e8ca:	add    cl,ch
  40e8cc:	pusha  
  40e8cd:	lea    ecx,[eax]
  40e8cf:	mov    dh,0xf9
  40e8d1:	mov    ecx,0x46c4021e
  40e8d6:	add    BYTE PTR ds:0xf857ba01,bl
  40e8dc:	xlat   BYTE PTR ds:[ebx]
  40e8dd:	inc    ecx
  40e8de:	inc    edi
  40e8df:	sub    esp,DWORD PTR [eax+0x39]
  40e8e2:	add    cl,ch
  40e8e4:	add    edx,edx
  40e8e6:	lock test DWORD PTR [edi],edx
  40e8e9:	pop    ss
  40e8ea:	retf   
  40e8eb:	daa    
  40e8ec:	add    al,0xd6
  40e8ee:	adc    al,0x0
  40e8f0:	ret    
  40e8f1:	std    
  40e8f2:	mov    edi,0x158480ff
  40e8f7:	jmp    DWORD PTR [esi-0x4c]
  40e8fa:	inc    edx
  40e8fb:	pop    ss
  40e8fc:	push   edx
  40e8fd:	xor    BYTE PTR [ebx-0x4c43ba76],0xb
  40e904:	bound  edi,QWORD PTR [esi+0xe]
  40e907:	(bad)  
  40e908:	mov    ebx,0x817f8f32
  40e90d:	add    BYTE PTR ds:0x67360000,bh
  40e913:	or     cl,BYTE PTR [edi-0x1a10e97]
  40e919:	jmp    0x6e50ba37
  40e91e:	mov    ebp,0x3ae8ff92
  40e923:	cmp    DWORD PTR [ebx+eax*8],0x75
  40e927:	mov    edi,0xef86e8ff
  40e92c:	(bad)  
  40e92d:	mov    ah,0x20
  40e92f:	retf   
  40e930:	inc    eax
  40e931:	jmp    0xa26afd0f
  40e936:	jnp    0x40e996
  40e938:	out    0x1,al
  40e93a:	and    BYTE PTR [edi-0x2],bl
  40e93d:	mov    eax,ds:0xe900003a
  40e942:	out    dx,eax
  40e943:	aas    
  40e944:	and    ebp,ecx
  40e946:	push   ds
  40e947:	pop    DWORD PTR [ecx+ebp*8]
  40e94a:	cmp    al,BYTE PTR [eax]
  40e94c:	add    BYTE PTR [edx-0x7f],ch
  40e94f:	add    DWORD PTR [ebx-0x7af2c50a],eax
  40e955:	out    dx,al
  40e956:	cdq    
  40e957:	pop    esi
  40e958:	(bad)  
  40e959:	jb     0x40e952
  40e95b:	pop    ecx
  40e95c:	pop    esi
  40e95d:	mov    al,0x7c
  40e95f:	add    DWORD PTR [eax],eax
  40e961:	aas    
  40e962:	fisttp QWORD PTR [edx-0x26]
  40e965:	sub    DWORD PTR ds:0xd1007158,edi
  40e96b:	(bad)  
  40e96c:	std    
  40e96d:	mov    ecx,DWORD PTR [ecx+0x8bf62c]
  40e973:	cdq    
  40e974:	imul   edi,DWORD PTR [esi-0x58],0xc98b02e2
  40e97b:	test   BYTE PTR [edi+eax*8-0x3874c715],0x3
  40e983:	pop    esi
  40e984:	mov    edi,es
  40e986:	push   eax
  40e987:	sbb    ecx,edx
  40e989:	out    0xa7,al
  40e98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98c:	add    DWORD PTR [eax],eax
  40e98e:	mov    ecx,DWORD PTR [ecx-0x67]
  40e991:	mov    ecx,ecx
  40e993:	mov    ds:0xa6c989c3,eax
  40e998:	or     al,0xf6
  40e99a:	jne    0x40e9c8
  40e99c:	aas    
  40e99d:	rcl    DWORD PTR [ebp-0x15],0xec
  40e9a1:	data16 or BYTE PTR [ecx+eax*2],ah
  40e9a5:	(bad)  
  40e9a6:	test   edx,0xebffc302
  40e9ac:	inc    ebp
  40e9ad:	push   es
  40e9ae:	or     esp,DWORD PTR [eax]
  40e9b0:	xor    eax,0xdf5deb0a
  40e9b5:	push   es
  40e9b6:	(bad)  
  40e9b7:	pop    eax
  40e9b8:	inc    ecx
  40e9b9:	jle    0x40e9f3
  40e9bb:	push   eax
  40e9bc:	cmp    ah,dh
  40e9be:	leave  
  40e9bf:	loop   0x40e9c8
  40e9c1:	add    BYTE PTR [ebp-0x65],dl
  40e9c4:	rol    BYTE PTR [ecx+0x66910cc4],1
  40e9ca:	xor    ah,dl
  40e9cc:	inc    ebx
  40e9cd:	(bad)  
  40e9ce:	not    DWORD PTR [edx+0x3]
  40e9d1:	ret    
  40e9d2:	(bad)  
  40e9d3:	fild   WORD PTR [esi-0xe]
  40e9d6:	add    BYTE PTR [eax],al
  40e9d8:	adc    BYTE PTR [ecx],al
  40e9da:	add    BYTE PTR [ebx],ch
  40e9dc:	sti    
  40e9dd:	outs   dx,BYTE PTR ds:[esi]
  40e9de:	inc    ebx
  40e9df:	cld    
  40e9e0:	xor    BYTE PTR [ebp+0x7f390873],bh
  40e9e6:	js     0x40e9f5
  40e9e8:	cmp    DWORD PTR [edi-0x79],esp
  40e9eb:	mov    edi,0x745d9c61
  40e9f0:	inc    ecx
  40e9f1:	outs   dx,DWORD PTR ds:[esi]
  40e9f2:	sub    BYTE PTR [esi+ecx*8],dh
  40e9f5:	aad    0x8c
  40e9f7:	inc    esp
  40e9f8:	shl    DWORD PTR [esi],0xb4
  40e9fb:	out    0x4d,eax
  40e9fd:	and    ebx,DWORD PTR [edi-0x2]
  40ea00:	shl    BYTE PTR [ebx-0x4cdb01aa],0x6b
  40ea07:	push   ebx
  40ea08:	xor    al,0x67
  40ea0a:	add    cl,BYTE PTR [ebx]
  40ea0c:	jns    0x40e9a8
  40ea0e:	idiv   dh
  40ea10:	or     al,0xbf
  40ea12:	pop    esi
  40ea13:	je     0x40e99a
  40ea15:	jbe    0x40ea81
  40ea17:	xchg   DWORD PTR [ebp+0x2e],eax
  40ea1a:	pop    edi
  40ea1b:	inc    BYTE PTR [ebx+eiz*1]
  40ea1e:	ins    BYTE PTR es:[edi],dx
  40ea1f:	inc    ecx
  40ea20:	inc    esp
  40ea21:	addr16 add bh,bh
  40ea24:	in     al,0x5e
  40ea26:	push   0xfffffff3
  40ea28:	sub    al,0xe
  40ea2a:	pop    edi
  40ea2b:	sbb    ah,0x5a
  40ea2e:	add    dh,BYTE PTR [edi+esi*1+0x6f]
  40ea32:	ror    BYTE PTR [edx-0x8],0x66
  40ea36:	pop    ebp
  40ea37:	je     0x40ea86
  40ea39:	(bad)  
  40ea3a:	xchg   edx,eax
  40ea3b:	or     eax,0x9673900
  40ea40:	shr    BYTE PTR [ebp+0x39009964],0x69
  40ea47:	add    bh,bh
  40ea49:	lods   al,BYTE PTR ds:[esi]
  40ea4a:	xor    eax,0x425d056a
  40ea4f:	pop    ebp
  40ea50:	mov    bh,dl
  40ea52:	push   ds
  40ea53:	dec    ebp
  40ea54:	shl    DWORD PTR ds:0x158ab769,0xc2
  40ea5b:	popf   
  40ea5c:	fstp   TBYTE PTR [ecx+0x0]
  40ea5f:	jmp    0xaa4252bf
  40ea64:	pop    esi
  40ea65:	out    dx,eax
  40ea66:	aad    0xe0
  40ea68:	imul   edx,DWORD PTR ds:0x505e8e12,0x8
  40ea6f:	adc    eax,ecx
  40ea71:	push   ds
  40ea72:	shr    eax,0x5e
  40ea75:	inc    ebp
  40ea76:	or     BYTE PTR [ecx+0x6d5b0edc],al
  40ea7c:	jmp    0x2c0cd2b7
  40ea81:	clc    
  40ea82:	call   FWORD PTR [ebp-0x28]
  40ea85:	ss push 0x5ba61bc2
  40ea8b:	dec    ebp
  40ea8c:	fdiv   DWORD PTR [esi]
  40ea8e:	push   0x5b976034
  40ea93:	add    BYTE PTR [ecx+edi*1],0x0
  40ea97:	jmp    0xe94562e8
  40ea9c:	mov    eax,0x47696cb3
  40eaa1:	add    BYTE PTR [esi-0x18],ch
  40eaa4:	jecxz  0x40eae6
  40eaa6:	add    BYTE PTR cs:[ecx],dl
  40eaa9:	sar    DWORD PTR [ecx],1
  40eaab:	aas    
  40eaac:	or     eax,0x60be55e
  40eab1:	fdivr  DWORD PTR [esi]
  40eab3:	push   0x5b4e1978
  40eab8:	sub    eax,0xe90142c8
  40eabd:	add    edi,DWORD PTR [ecx]
  40eabf:	lea    ebp,[ebx]
  40eac1:	pop    esp
  40eac2:	xchg   al,ch
  40eac4:	push   ss
  40eac5:	leave  
  40eac6:	jns    0x40eac8
  40eac8:	ror    DWORD PTR [edx+0x7e],0x5b
  40eacc:	int    0x9
  40eace:	stc    
  40eacf:	ror    DWORD PTR [edx],cl
  40ead1:	mov    ah,0xbb
  40ead3:	fadd   st(0),st
  40ead5:	hlt    
  40ead6:	test   edx,esi
  40ead8:	inc    DWORD PTR [edx+0xd]
  40eadb:	retf   
  40eadc:	(bad)  
  40eadd:	xor    al,0x29
  40eadf:	push   0x5a95e2db
  40eae4:	or     ch,BYTE PTR [ecx+0x2cc70211]
  40eaea:	pop    ecx
  40eaeb:	pop    ebx
  40eaec:	(bad)  
  40eaed:	jmp    0xc2a5532c
  40eaf2:	jne    0x40eb4e
  40eaf4:	mov    ah,BYTE PTR [ecx+ebx*2]
  40eaf7:	dec    eax
  40eaf8:	shl    ecx,0x3a
  40eafb:	mov    ch,0x8a
  40eafd:	jge    0x40ea87
  40eaff:	loop   0x40eb60
  40eb01:	inc    esp
  40eb02:	jge    0x40eb5e
  40eb04:	neg    bl
  40eb06:	add    BYTE PTR [ebx],bh
  40eb08:	aas    
  40eb09:	inc    BYTE PTR [edx]
  40eb0b:	pusha  
  40eb0c:	pop    edx
  40eb0d:	je     0x40eaf0
  40eb0f:	adc    al,dl
  40eb11:	inc    BYTE PTR [esi-0xc]
  40eb14:	add    eax,0x74b6eec0
  40eb19:	(bad)  
  40eb1a:	call   0xe1b54659
  40eb1f:	adc    dl,BYTE PTR [edi+0x31]
  40eb22:	es adc al,0x6
  40eb25:	rcl    BYTE PTR [edi+esi*1+0x3ae98969],0x0
  40eb2d:	call   DWORD PTR [esi+ebp*1-0x1d0e8ba5]
  40eb34:	loope  0x40eb34
  40eb36:	(bad)  
  40eb37:	in     eax,dx
  40eb38:	pop    ecx
  40eb39:	je     0x40eb1c
  40eb3b:	rcl    BYTE PTR [ecx],cl
  40eb3d:	cmp    ch,dh
  40eb3f:	fld    QWORD PTR ds:0x653b5cc0
  40eb45:	jo     0x40eb25
  40eb47:	pop    es
  40eb48:	add    ch,al
  40eb4a:	mov    al,ds:0xe2fe5942
  40eb4f:	jp     0x40eb25
  40eb51:	add    DWORD PTR [eax],eax
  40eb53:	jmp    0x40ebb5
  40eb55:	std    
  40eb56:	jne    0x40eb60
  40eb58:	out    0x1f,al
  40eb5a:	cmp    edi,ecx
  40eb5c:	mov    esp,0xfe45c009
  40eb61:	jmp    0xe041:0x25924855
  40eb68:	mov    esp,0xb8000873
  40eb6d:	xchg   edi,eax
  40eb6e:	cmp    bh,bh
  40eb70:	scas   eax,DWORD PTR es:[edi]
  40eb71:	or     al,al
  40eb73:	jne    0x40eb57
  40eb75:	call   0x606eaba
  40eb7a:	call   0xfdfd7419
  40eb7f:	or     edx,DWORD PTR [eax+0x54eb0032]
  40eb85:	mov    ebx,0xaf080873
  40eb8a:	dec    DWORD PTR ss:[edi]
  40eb8d:	or     al,al
  40eb8f:	jne    0x40eb23
  40eb91:	call   0x616eaba
  40eb96:	call   0xfdfd7e22
  40eb9b:	or     DWORD PTR [eax+0x1d],0x77
  40eb9f:	add    bh,BYTE PTR [ebx]
  40eba1:	les    ecx,FWORD PTR [ecx]
  40eba3:	rcl    ah,0x50
  40eba6:	cmp    eax,DWORD PTR [eax]
  40eba8:	pusha  
  40eba9:	dec    ebp
  40ebaa:	(bad)  
  40ebab:	jb     0x40ec09
  40ebad:	js     0x40ebae
  40ebaf:	call   DWORD PTR [eax-0x3]
  40ebb2:	jmp    0x60ff:0xfffffb05
  40ebb9:	mov    cl,al
  40ebbb:	pop    ebx
  40ebbc:	sbb    DWORD PTR [edi-0x775afffa],edi
  40ebc2:	jmp    0x1800:0x3f164168
  40ebc9:	xor    bh,bh
  40ebcb:	ret    0x3239
  40ebce:	pop    edx
  40ebcf:	je     0x40ebd1
  40ebd1:	sub    eax,0x2107d04a
  40ebd6:	or     DWORD PTR [ebx-0x2],ebx
  40ebd9:	push   cs
  40ebda:	dec    esi
  40ebdb:	inc    edx
  40ebdc:	je     0x40ec01
  40ebde:	xchg   edx,eax
  40ebdf:	ror    BYTE PTR [ebx],1
  40ebe1:	(bad)  
  40ebe2:	adc    ecx,DWORD PTR [eax+ebp*8]
  40ebe5:	dec    esi
  40ebe6:	mov    ds:0xa742fe5a,al
  40ebeb:	ror    BYTE PTR [edx],1
  40ebed:	out    0xfb,al
  40ebef:	pop    es
  40ebf0:	jmp    DWORD PTR [edi+ebx*2+0x6a]
  40ebf4:	pop    es
  40ebf5:	(bad)  
  40ebf6:	sbb    DWORD PTR [edx-0x38],0x55024efb
  40ebfd:	mov    dl,0x82
  40ebff:	xchg   bl,al
  40ec01:	aad    0xf5
  40ec03:	mov    dl,0x67
  40ec05:	sbb    ecx,eax
  40ec07:	ret    
  40ec08:	jmp    DWORD PTR [esi-0x593cfccc]
  40ec0e:	std    
  40ec0f:	ds out 0x7b,eax
  40ec12:	lea    ebx,[ecx-0x2]
  40ec15:	jle    0x40ebc2
  40ec17:	dec    WORD PTR [esi-0x372fd9a]
  40ec1e:	ret    0xe7b3
  40ec21:	mov    al,0x57
  40ec23:	pop    ecx
  40ec24:	(bad)  
  40ec25:	mov    edx,0xe5ff66a3
  40ec2a:	dec    BYTE PTR [eax+0x6a965544]
  40ec30:	jns    0x40ec5a
  40ec32:	or     bl,BYTE PTR [ebx-0x7e]
  40ec35:	add    ah,dl
  40ec37:	repnz add esi,DWORD PTR [ebp+0x40]
  40ec3b:	in     al,dx
  40ec3c:	shr    bl,0xe9
  40ec3f:	(bad)  
  40ec40:	out    dx,al
  40ec41:	xor    BYTE PTR [esi],bh
  40ec43:	imul   eax,DWORD PTR [ebp-0x16feda84],0xe886b50a
  40ec4d:	add    edi,DWORD PTR [ecx]
  40ec4f:	test   DWORD PTR [ebx],ebp
  40ec51:	push   esp
  40ec52:	outs   dx,BYTE PTR ds:[esi]
  40ec53:	push   edi
  40ec54:	push   ebx
  40ec55:	push   0x5ac5ea1e
  40ec5a:	je     0xd5ccf120
  40ec60:	jne    0x40ec47
  40ec62:	push   edi
  40ec63:	shr    eax,0x6e
  40ec66:	xchg   ecx,eax
  40ec67:	aas    
  40ec68:	sub    esp,DWORD PTR [eax+0x40]
  40ec6b:	add    cl,ch
  40ec6d:	add    edi,esi
  40ec6f:	mov    ebp,0x390380
  40ec74:	jmp    0x18a96a01
  40ec79:	pop    ebx
  40ec7a:	inc    ebp
  40ec7b:	fs adc eax,0x75bacb6c
  40ec81:	pop    edx
  40ec82:	xor    eax,DWORD PTR [eax-0xc]
  40ec85:	repz mov ebx,0x250350d5
  40ec8b:	or     bl,BYTE PTR [esi-0x30]
  40ec8e:	sahf   
  40ec8f:	push   0x579f5911
  40ec94:	popa   
  40ec95:	cmp    edx,DWORD PTR [edi+0x6b50cd]
  40ec9b:	pop    edi
  40ec9c:	adc    DWORD PTR [esi],edi
  40ec9e:	pop    edx
  40ec9f:	xor    edi,DWORD PTR [ebx]
  40eca1:	mov    ebx,0x44d5bbf0
  40eca6:	add    ebp,ebp
  40eca8:	push   es
  40eca9:	es enter 0xe85a,0x70
  40ecae:	mul    BYTE PTR [esi+0x57]
  40ecb1:	add    BYTE PTR [esi+0x33],dh
  40ecb4:	add    cl,ch
  40ecb6:	outs   dx,BYTE PTR ds:[esi]
  40ecb7:	(bad)  
  40ecb8:	imul   esp,edi,0xffffffc2
  40ecbb:	into   
  40ecbc:	push   ss
  40ecbd:	jmp    0x2d92
  40ecc2:	push   0xe5740023
  40ecc7:	inc    edi
  40ecc8:	cmp    esi,DWORD PTR [ebx-0x79]
  40eccb:	cmp    al,0x3b
  40eccd:	jae    0x40ecc8
  40eccf:	adc    al,0x7
  40ecd1:	lea    ebp,[eax*4+0x41767c7]
  40ecd8:	sar    bh,0xd0
  40ecdb:	fnstsw WORD PTR [ebx-0x339f4102]
  40ece1:	jmp    0x40eca4
  40ece3:	lea    esp,[edi]
  40ece5:	jmp    FWORD PTR [esi+0x425e41c4]
  40eceb:	add    BYTE PTR [edx+0x54],0x72
  40ecef:	push   ecx
  40ecf0:	add    bl,0x49
  40ecf3:	adc    DWORD PTR [esi-0x2],0x36
  40ecf7:	mov    ebx,esi
  40ecf9:	dec    edi
  40ecfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecfb:	cmc    
  40ecfc:	push   esi
  40ecfd:	idiv   bl
  40ecff:	add    BYTE PTR [ebx],bh
  40ed01:	inc    ebx
  40ed02:	(bad)  
  40ed03:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ed05:	sbb    eax,0x15bae941
  40ed0a:	add    dh,dh
  40ed0c:	cs dec edx
  40ed0e:	add    cl,ch
  40ed10:	cmp    al,BYTE PTR [ebp+0x56035d84]
  40ed16:	(bad)  
  40ed17:	mov    ecx,0xa12f5ec9
  40ed1c:	icebp  
  40ed1d:	push   ebp
  40ed1e:	or     ch,BYTE PTR [ecx]
  40ed20:	xor    BYTE PTR [ebx+eiz*4-0x18],bh
  40ed24:	cmp    al,BYTE PTR [eax]
  40ed26:	sub    DWORD PTR [ecx+ecx*1+0x55],0xfffffffe
  40ed2b:	es xor eax,0x3a768407
  40ed31:	add    BYTE PTR [eax],al
  40ed33:	ficomp WORD PTR fs:[esi-0x390ff103]
  40ed3a:	inc    BYTE PTR [eax]
  40ed3c:	or     eax,0x47fffcb0
  40ed41:	jmp    0xf629:0xb74737ec
  40ed48:	cdq    
  40ed49:	test   DWORD PTR [edx-0x1646e802],esp
  40ed4f:	aaa    
  40ed50:	dec    esi
  40ed51:	pop    es
  40ed52:	mov    dh,0x84
  40ed54:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ed56:	cld    
  40ed57:	inc    DWORD PTR [edi]
  40ed59:	xchg   edx,eax
  40ed5a:	pop    dx
  40ed5c:	dec    ebx
  40ed5d:	inc    ecx
  40ed5e:	dec    BYTE PTR [ebp+ebx*4+0xfffcbb]
  40ed65:	(bad)  
  40ed66:	xchg   ecx,eax
  40ed67:	out    0x41,al
  40ed69:	fild   DWORD PTR [ecx]
  40ed6b:	add    BYTE PTR [ebx-0x7a730264],al
  40ed71:	xchg   edx,eax
  40ed72:	mov    bh,0xfd
  40ed74:	jmp    DWORD PTR [eax]
  40ed76:	mov    bh,0xb3
  40ed78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed79:	(bad)  
  40ed7a:	mov    eax,0xedafe8fd
  40ed7f:	(bad)  
  40ed80:	dec    DWORD PTR [ecx-0x2a]
  40ed83:	mov    ds:0x44b847fe,al
  40ed88:	and    DWORD PTR [esi],0x51
  40ed8b:	jo     0x40ed51
  40ed8d:	pop    ss
  40ed8e:	xchg   dl,dh
  40ed90:	inc    BYTE PTR [edi]
  40ed92:	mov    eax,0xb742b4e6
  40ed97:	std    
  40ed98:	(bad)  
  40ed99:	sbb    eax,0xf7fffc79
  40ed9e:	add    BYTE PTR [eax],al
  40eda0:	add    BYTE PTR [eax+0xd8d0063],dl
  40eda6:	jns    0x40eda4
  40eda8:	jmp    DWORD PTR [edi]
  40edaa:	xchg   ecx,eax
  40edab:	std    
  40edac:	mov    ch,0x4c
  40edae:	mov    bh,0xfd
  40edb0:	dec    DWORD PTR [eax+0x57]
  40edb3:	das    
  40edb4:	(bad)  
  40edb5:	cmp    esi,ebp
  40edb7:	or     eax,eax
  40edb9:	inc    esi
  40edba:	fistp  DWORD PTR [edx-0x1]
  40edbd:	dec    esi
  40edbe:	cmp    DWORD PTR [si+0x5581],0x70ecfe56
  40edc7:	add    al,BYTE PTR [eax]
  40edc9:	add    BYTE PTR [esi-0x24],al
  40edcc:	push   0xffffffff
  40edce:	xchg   DWORD PTR cs:[si+0x3522],eax
  40edd4:	push   esi
  40edd5:	dec    BYTE PTR [ecx+0x3900ffbf]
  40eddb:	addr16 push 0xffffffe3
  40edde:	inc    eax
  40eddf:	add    cl,BYTE PTR [bp+di]
  40ede2:	stc    
  40ede3:	gs jle 0x40edb4
  40ede6:	cmp    DWORD PTR [edi+0x2],esp
  40ede9:	cmp    eax,0x2683d
  40edee:	ds out 0x3f,al
  40edf1:	jmp    esi
  40edf3:	pushw  0x4f
  40edf6:	xor    esp,DWORD PTR [edi+0x2]
  40edf9:	push   eax
  40edfa:	popa   
  40edfb:	sbb    cl,bl
  40edfd:	inc    eax
  40edfe:	cmp    esp,ecx
  40ee00:	add    cl,0xc7
  40ee03:	aad    0x56
  40ee05:	dec    edi
  40ee06:	rol    edx,1
  40ee08:	or     DWORD PTR [eax],eax
  40ee0a:	cmp    edx,ebp
  40ee0c:	aas    
  40ee0d:	or     esp,DWORD PTR [ebx]
  40ee0f:	xchg   DWORD PTR [si-0x4b5e],eax
  40ee14:	push   esi
  40ee15:	dec    BYTE PTR [ecx]
  40ee17:	mov    edi,0x673908a6
  40ee1c:	xchg   DWORD PTR [edx+edx*4-0x1601a944],eax
  40ee23:	scas   al,BYTE PTR es:[edi]
  40ee24:	adc    eax,DWORD PTR [ebx+0x7e]
  40ee27:	or     eax,0x6ecc00b
  40ee2c:	in     al,dx
  40ee2d:	int3   
  40ee2e:	add    BYTE PTR [ecx],ah
  40ee30:	add    BYTE PTR [eax+0x217ab403],ch
  40ee36:	push   esi
  40ee37:	pop    edi
  40ee38:	push   esp
  40ee39:	mov    eax,0xe18816b
  40ee3e:	push   edi
  40ee3f:	mov    ebp,0x47562a6a
  40ee44:	push   esp
  40ee45:	call   0x3756:0xb4ef56b3
  40ee4c:	push   0x3eb588d9
  40ee51:	out    0x56,al
  40ee53:	daa    
  40ee54:	mov    cl,0x6b
  40ee56:	and    BYTE PTR [ebx],0x53
  40ee59:	aad    0x56
  40ee5b:	xchg   BYTE PTR [eax-0x7b],ch
  40ee5e:	sbb    cl,BYTE PTR [esi]
  40ee60:	push   esp
  40ee61:	outs   dx,DWORD PTR ds:[esi]
  40ee62:	add    dl,0x52
  40ee65:	mov    ebp,0x748dff56
  40ee6a:	push   ebp
  40ee6b:	not    DWORD PTR [ebx-0x53]
  40ee6e:	nop
  40ee6f:	jmp    0xd9cc:0xde56a552
  40ee76:	push   esi
  40ee77:	fild   WORD PTR [edi]
  40ee79:	test   eax,0x2de80bcf
  40ee7e:	retf   
  40ee7f:	jns    0x40ee81
  40ee81:	xchg   ecx,eax
  40ee82:	pop    esi
  40ee83:	ds add cl,ch
  40ee86:	mov    bl,0x56
  40ee88:	mov    bl,0x21
  40ee8a:	lds    esi,FWORD PTR [esi-0x5360ccae]
  40ee90:	push   ebx
  40ee91:	imul   eax,DWORD PTR gs:[eax],0xffffffaf
  40ee95:	mov    edi,0x110565d
  40ee9a:	ret    
  40ee9b:	add    esp,DWORD PTR [ebx]
  40ee9d:	add    BYTE PTR [esi-0x70],cl
  40eea0:	rcl    BYTE PTR [edx+0x45],cl
  40eea3:	push   esi
  40eea4:	push   ds
  40eea5:	stos   DWORD PTR es:[edi],eax
  40eea6:	pextrw edi,(bad),0xc5
  40eea8:	jle    0x40ee93
  40eeaa:	(bad)  
  40eeab:	call   0xe94aad92
  40eeb0:	cmp    dl,BYTE PTR [ebx-0x4c]
  40eeb3:	gs or  al,0x52
  40eeb6:	(bad)  
  40eeb7:	adc    DWORD PTR [edi-0x10e900f6],edx
  40eebd:	mov    esp,DWORD PTR [ebx-0x18ae18f1]
  40eec3:	dec    ebp
  40eec4:	aaa    
  40eec5:	push   ebx
  40eec6:	(bad)  
  40eec7:	(bad)  
  40eec8:	scas   al,BYTE PTR es:[edi]
  40eec9:	dec    edi
  40eeca:	std    
  40eecb:	test   BYTE PTR [ebx+ebx*2+0x5287be05],0xfb
  40eed3:	sbb    bh,BYTE PTR [ebp-0x68]
  40eed6:	(bad)  
  40eed7:	fiadd  WORD PTR [edx+edx*2-0x4ca780f]
  40eede:	push   cs
  40eedf:	fs ds push edx
  40eee2:	inc    dh
  40eee4:	iret   
  40eee5:	mov    cl,0xc8
  40eee7:	stos   BYTE PTR es:[edi],al
  40eee8:	into   
  40eee9:	test   ebx,ebp
  40eeeb:	push   0x79
  40eeed:	arpl   WORD PTR [edi-0x14],sp
  40eef0:	pop    ebx
  40eef1:	adc    eax,DWORD PTR [eax]
  40eef3:	mov    eax,ds:0x9ec3000b
  40eef8:	add    BYTE PTR [eax+0x3bec6730],dh
  40eefe:	add    BYTE PTR [eax],al
  40ef00:	and    edi,0xb086ff09
  40ef06:	xor    BYTE PTR [eax-0x2e799edc],cl
  40ef0c:	add    DWORD PTR [esi+0x22e8ffff],esi
  40ef12:	in     al,0x36
  40ef14:	data16 or al,0x86
  40ef17:	shl    DWORD PTR [eax-0x22],1
  40ef1a:	bound  esp,QWORD PTR [edi-0x14]
  40ef1d:	cmp    eax,DWORD PTR [eax]
  40ef1f:	add    BYTE PTR [ecx-0x39],al
  40ef22:	or     edi,edi
  40ef24:	add    bh,bh
  40ef26:	mov    al,dl
  40ef28:	mov    esp,DWORD PTR [edx]
  40ef2a:	xchg   DWORD PTR [ebx-0x8],eax
  40ef2d:	fisttp DWORD PTR ds:0x5278d28a
  40ef33:	(bad)  
  40ef34:	call   DWORD PTR [eax-0x55]
  40ef37:	jae    0x40ef35
  40ef39:	retf   0xe7fe
  40ef3c:	sbb    ebx,DWORD PTR [ecx-0x2]
  40ef3f:	dec    DWORD PTR [edx-0x2f76ee]
  40ef45:	lds    ebp,FWORD PTR [esi-0x1aefb9a]
  40ef4b:	jmp    edi
  40ef4d:	stos   BYTE PTR es:[edi],al
  40ef4e:	add    eax,0xbe1b0000
  40ef53:	jb     0x40ef64
  40ef55:	stos   DWORD PTR es:[edi],eax
  40ef56:	packuswb mm4,QWORD PTR [ebx+ebp*2+0x3d]
  40ef5b:	(bad)  
  40ef5c:	inc    BYTE PTR [eax]
  40ef5e:	jne    0x40ef0c
  40ef60:	out    0x31,al
  40ef62:	sbb    dh,bh
  40ef64:	dec    DWORD PTR [edx+0x69fe67a2]
  40ef6a:	adc    BYTE PTR [eax+0x0],ch
  40ef6d:	push   0xffffffe0
  40ef6f:	add    DWORD PTR [bx+si-0x20],ebp
  40ef73:	std    
  40ef74:	(bad)  
  40ef75:	mov    edi,0xe8ee429f
  40ef7a:	pushf  
  40ef7b:	push   esp
  40ef7c:	(bad)  
  40ef7d:	call   FWORD PTR [ecx-0x6e]
  40ef80:	repnz inc eax
  40ef82:	fstp   TBYTE PTR [ebp+0x42bf4473]
  40ef88:	cli    
  40ef89:	inc    ebp
  40ef8b:	lods   eax,DWORD PTR ds:[esi]
  40ef8c:	out    0xff,al
  40ef8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef8f:	std    
  40ef90:	jmp    FWORD PTR [ecx+0x3c]
  40ef93:	data16 (bad) 
  40ef95:	inc    BYTE PTR [ebp-0x568c1953]
  40ef9b:	std    
  40ef9c:	dec    DWORD PTR [edx]
  40ef9e:	cmp    DWORD PTR [edi],esp
  40efa0:	iret   
  40efa1:	or     edi,ecx
  40efa3:	fimul  WORD PTR ds:[edx-0x8]
  40efa7:	data16 mov dl,0xe7
  40efaa:	call   0xe866:0xe300025a
  40efb1:	jmp    eax
  40efb3:	fs call 0xeaa6c0b8
  40efb9:	call   FWORD PTR [esi+0x67]
  40efbc:	inc    edx
  40efbd:	dec    ah
  40efbf:	imul   BYTE PTR [edx-0x6b]
  40efc2:	add    BYTE PTR [esi],dh
  40efc4:	add    cl,BYTE PTR [bx+di+0x52fc]
  40efc9:	shl    DWORD PTR [ebx-0x2e],0x6e
  40efcd:	out    0x4a,al
  40efcf:	js     0x40f038
  40efd1:	push   0xffffff9d
  40efd3:	add    dl,BYTE PTR ss:[bx+si-0x6f]
  40efd8:	stos   DWORD PTR es:[edi],eax
  40efd9:	mov    esi,0xd8323940
  40efde:	repz and DWORD PTR [ecx+0x170eff14],ebx
  40efe5:	push   ebx
  40efe6:	je     0x40eff5
  40efe8:	das    
  40efe9:	into   
  40efea:	push   es
  40efeb:	cmp    DWORD PTR [edi-0x56],esp
  40efee:	or     bh,cl
  40eff0:	adc    eax,DWORD PTR [esi]
  40eff2:	jmp    0x40f06e
  40eff4:	mov    ds:0xb351fbd8,al
  40eff9:	mov    esi,0xd8723940
  40effe:	mul    ecx
  40f000:	mov    dl,0xfb
  40f002:	dec    esi
  40f004:	in     eax,0x47
  40f006:	or     edx,DWORD PTR [ecx-0x77]
  40f009:	mov    esi,0x946f3940
  40f00e:	push   es
  40f00f:	cmp    DWORD PTR [edi-0x3],esp
  40f012:	mov    edi,0xbfda4525
  40f017:	bnd jmp DWORD PTR [edi-0x6f97f6fd]
  40f01e:	or     edi,DWORD PTR [ecx]
  40f020:	add    dl,ah
  40f022:	inc    ebx
  40f023:	or     ch,ch
  40f025:	ret    0x3
  40f028:	adc    eax,DWORD PTR [eax]
  40f02a:	inc    esi
  40f02b:	fld    DWORD PTR [esi-0x21ac4cb0]
  40f031:	test   al,0xff
  40f033:	les    ebp,FWORD PTR [esi-0x1a]
  40f036:	call   0x9b91668d
  40f03b:	dec    edi
  40f03c:	push   esi
  40f03d:	push   cs
  40f03e:	xlat   BYTE PTR ds:[ebx]
  40f03f:	push   edx
  40f040:	push   edi
  40f041:	push   eax
  40f042:	fwait
  40f043:	push   ebx
  40f044:	push   esi
  40f045:	xlat   BYTE PTR es:[ebx]
  40f047:	push   edx
  40f048:	inc    edi
  40f049:	push   eax
  40f04a:	jnp    0x40f097
  40f04c:	push   esi
  40f04d:	push   ds
  40f04e:	mov    bh,0x52
  40f050:	aaa    
  40f051:	cmp    ch,BYTE PTR [ecx]
  40f053:	mov    ebx,0x664bd88b
  40f058:	data16 add cl,ah
  40f05b:	aad    0x39
  40f05d:	inc    ebx
  40f05e:	fisttp QWORD PTR [esi+0x3e90039]
  40f064:	into   
  40f065:	push   esp
  40f066:	and    ebp,eax
  40f068:	push   es
  40f069:	(bad)  
  40f06b:	mov    edx,0x53249216
  40f070:	mul    DWORD PTR [ebx]
  40f072:	xchg   ecx,eax
  40f073:	dec    edi
  40f074:	sub    eax,DWORD PTR [eax+0x6f]
  40f077:	push   edx
  40f078:	out    0x4f,eax
  40f07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07b:	push   ebp
  40f07c:	mov    WORD PTR [eax],cs
  40f07e:	out    0xd8,al
  40f080:	fidivr WORD PTR [ebx-0x57]
  40f083:	scas   al,BYTE PTR es:[edi]
  40f084:	outs   dx,DWORD PTR ds:[esi]
  40f085:	inc    ebx
  40f086:	xor    edi,DWORD PTR [edi-0x2e]
  40f089:	sub    DWORD PTR [ebx+edx*2-0x6c279500],0x65
  40f091:	jbe    0x40f093
  40f093:	add    BYTE PTR [ecx-0x7c],dh
  40f096:	add    bl,al
  40f098:	outs   dx,BYTE PTR ds:[esi]
  40f099:	mov    edi,0x7417e60c
  40f09e:	dec    edi
  40f09f:	(bad)  
  40f0a0:	aad    0x8c
  40f0a2:	cmp    BYTE PTR [edi+eax*2],0x58
  40f0a6:	sar    edi,0xe8
  40f0a9:	outs   dx,BYTE PTR ds:[esi]
  40f0aa:	clc    
  40f0ab:	add    BYTE PTR [edi+eiz*8],0x1c
  40f0af:	inc    ecx
  40f0b0:	jmp    0x245c5ef
  40f0b5:	cmc    
  40f0b6:	test   eax,0x2b472ac8
  40f0bb:	out    0xcd,eax
  40f0bd:	xor    eax,DWORD PTR [eax]
  40f0bf:	add    BYTE PTR [ecx+edx*4+0x4b],ch
  40f0c3:	push   ecx
  40f0c4:	adc    DWORD PTR [edx-0x41],0xfffffffe
  40f0c8:	hlt    
  40f0c9:	rcr    BYTE PTR [ecx+eax*2],1
  40f0cc:	jmp    0x654f8010
  40f0d1:	stos   BYTE PTR es:[edi],al
  40f0d2:	dec    edi
  40f0d3:	(bad)  
  40f0d4:	jmp    0xea38b55c
  40f0d9:	cmp    al,BYTE PTR [eax]
  40f0db:	add    BYTE PTR [esi+esi*8+0x56],dh
  40f0df:	dec    edi
  40f0e0:	push   ebx
  40f0e1:	cmp    eax,0x3a42ffda
  40f0e6:	dec    edi
  40f0e7:	je     0x40f0b6
  40f0e9:	push   0xfa17edf4
  40f0ee:	dec    esi
  40f0ef:	or     DWORD PTR [ecx-0x1826f200],ebp
  40f0f5:	cmp    DWORD PTR [eax+0x0],eax
  40f0f8:	add    BYTE PTR [edx+0x75],ch
  40f0fb:	leave  
  40f0fc:	je     0x40f107
  40f0fe:	mov    ah,0xcb
  40f100:	imul   ecx
  40f102:	out    dx,al
  40f103:	test   al,0xfe
  40f105:	sbb    al,0x7d
  40f107:	addr16 jg 0x40f0de
  40f10a:	imul   ecx,DWORD PTR [esi-0x78],0x8ba80d00
  40f111:	inc    ebp
  40f112:	mov    eax,0x2875fd93
  40f117:	mov    cl,0x73
  40f119:	hlt    
  40f11a:	cmp    al,BYTE PTR [ebx]
  40f11c:	push   DWORD PTR [ebp+0x14]
  40f11f:	mov    cl,0x13
  40f121:	out    dx,al
  40f122:	inc    esi
  40f123:	inc    ebx
  40f124:	dec    BYTE PTR [edx]
  40f126:	pusha  
  40f127:	sub    BYTE PTR [ebx+ecx*4],ch
  40f12a:	fnsave [esi+0x47051089]
  40f130:	out    dx,al
  40f131:	push   eax
  40f132:	shr    BYTE PTR [edi+0x4336f213],cl
  40f138:	dec    BYTE PTR [edx]
  40f13a:	adc    BYTE PTR [eax],ch
  40f13c:	sbb    BYTE PTR [eax+0x2f],ch
  40f13f:	lea    edi,[edi]
  40f141:	add    BYTE PTR [edi],dh
  40f143:	aaa    
  40f144:	out    dx,al
  40f145:	call   0x40eb84
  40f14a:	pop    ebx
  40f14b:	ret    0x173
  40f14e:	xchg   ebx,eax
  40f14f:	scas   eax,DWORD PTR es:[edi]
  40f150:	jae    0x40f142
  40f152:	dec    eax
  40f153:	cmc    
  40f154:	add    eax,0xb1200000
  40f159:	jae    0x40f14f
  40f15b:	cmp    BYTE PTR [edi+0x33],al
  40f15e:	call   DWORD PTR [edi]
  40f160:	mov    cl,0x73
  40f162:	cld    
  40f163:	call   0x2040f760
  40f168:	int    0xc1
  40f16a:	pop    ebx
  40f16b:	fld    st(4)
  40f16d:	push   ebx
  40f16e:	mov    esp,esp
  40f170:	add    dl,0xc0
  40f173:	mov    dh,0xb0
  40f175:	std    
  40f176:	push   ebx
  40f177:	js     0x40f1f7
  40f179:	loope  0x40f1bb
  40f17b:	sar    BYTE PTR [ecx-0x4f6cfe90],1
  40f181:	cmp    DWORD PTR ds:0x40eacf,0x1ad65739
  40f18b:	mov    edx,0x7828eb3c
  40f190:	push   edi
  40f191:	add    dh,BYTE PTR [ebx+ecx*2-0x26]
  40f195:	or     eax,0x4185fe6
  40f19a:	add    BYTE PTR ds:0x933c8360,ch
  40f1a0:	cmc    
  40f1a1:	ret    0x96ff
  40f1a4:	xor    al,0x5
  40f1a6:	sub    edi,DWORD PTR [ecx-0x6e]
  40f1a9:	cmp    edx,eax
  40f1ab:	push   edx
  40f1ac:	adc    dl,BYTE PTR [eax+0x14]
  40f1af:	es lock ret 0xc1ff
  40f1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b5:	push   esi
  40f1b6:	(bad)  
  40f1b7:	mov    ah,0x23
  40f1b9:	push   ecx
  40f1ba:	inc    BYTE PTR [eax]
  40f1bc:	inc    WORD PTR [edx]
  40f1bf:	add    BYTE PTR [ecx],bh
  40f1c1:	jno    0x40f1c5
  40f1c3:	push   0x3b
  40f1c5:	out    dx,eax
  40f1c6:	cdq    
  40f1c7:	add    eax,0xf7835739
  40f1cc:	inc    esi
  40f1cd:	xchg   BYTE PTR cs:0x89025738,bl
  40f1d4:	mov    esp,0x2efe510e
  40f1d9:	in     al,0x85
  40f1db:	retf   
  40f1dc:	daa    
  40f1dd:	pop    esi
  40f1de:	dec    esi
  40f1df:	dec    edi
  40f1e0:	push   ds
  40f1e1:	ins    BYTE PTR es:[edi],dx
  40f1e2:	cmp    edi,ebp
  40f1e4:	push   ss
  40f1e5:	cs pop ebx
  40f1e7:	lea    esi,[edi]
  40f1e9:	push   edi
  40f1ea:	add    cl,BYTE PTR [ebx]
  40f1ec:	stc    
  40f1ed:	sub    eax,0x5739f286
  40f1f2:	add    ch,BYTE PTR [eax+0x13]
  40f1f5:	adc    al,ch
  40f1f7:	(bad)  
  40f1f8:	mov    ebp,0xe6fd53db
  40f1fd:	popf   
  40f1fe:	mov    bl,0xe7
  40f200:	dec    eax
  40f201:	add    dh,ch
  40f203:	add    edi,DWORD PTR [ecx]
  40f205:	stc    
  40f206:	test   al,0xff
  40f208:	mov    edx,0x3903e840
  40f20d:	inc    ebp
  40f20e:	arpl   WORD PTR [eax-0x44],cx
  40f211:	dec    esp
  40f212:	test   DWORD PTR [ecx+edi*1],eax
  40f215:	add    cl,ch
  40f217:	xor    BYTE PTR [ebp-0x58b089bd],0xaf
  40f21e:	ins    DWORD PTR es:[edi],dx
  40f21f:	cdq    
  40f220:	add    BYTE PTR [edx-0x68b09ab3],cl
  40f226:	repnz add DWORD PTR ds:0x7961fff8,ebx
  40f22d:	jp     0x40f27c
  40f22f:	dec    ebp
  40f230:	dec    edi
  40f231:	xor    eax,DWORD PTR [eax-0xb]
  40f234:	xchg   esi,ecx
  40f236:	(bad)  
  40f237:	call   0x3cf4243f
  40f23c:	(bad)  
  40f23d:	mov    ebp,0x3903e87c
  40f242:	dec    ebp
  40f243:	pop    ebx
  40f244:	cmp    BYTE PTR [esp+ecx*2+0x1d],dl
  40f248:	fimul  DWORD PTR [esi-0x1c]
  40f24b:	call   0x1432b53
  40f250:	and    DWORD PTR [edi],esi
  40f252:	add    cl,ch
  40f254:	cli    
  40f255:	not    ah
  40f257:	jg     0x40f2d5
  40f259:	jne    0x40f2a3
  40f25b:	arpl   cx,cx
  40f25d:	and    dh,BYTE PTR [ecx-0x1c6a580]
  40f263:	call   0xdd897fb6
  40f268:	clc    
  40f269:	adc    al,0x1b
  40f26b:	sub    BYTE PTR [edx+esi*1],al
  40f26e:	inc    eax
  40f26f:	push   esp
  40f270:	lods   al,BYTE PTR ds:[esi]
  40f271:	call   ebp
  40f273:	les    ecx,FWORD PTR [esi+0x4d]
  40f276:	push   esi
  40f277:	push   cs
  40f278:	(bad)
  40f27b:	jmp    FWORD PTR [eax-0x59bcf6f2]
  40f281:	mov    cl,0x8b
  40f283:	std    
  40f284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f285:	add    BYTE PTR [edi+0x3ae9fe4b],al
  40f28b:	jge    0x40f211
  40f28d:	test   eax,0x39fe4a74
  40f292:	fisttp QWORD PTR [edx]
  40f294:	add    dh,dh
  40f296:	cmp    bl,BYTE PTR [eax+0x5e]
  40f299:	out    0x3a,eax
  40f29b:	add    BYTE PTR [ebx],cl
  40f29d:	test   eax,0x2c82f481
  40f2a2:	cli    
  40f2a3:	dec    esp
  40f2a4:	(bad)  
  40f2a5:	data16 cmp dl,ah
  40f2a8:	or     ebx,DWORD PTR [esi-0x4f]
  40f2ab:	mov    edi,ebp
  40f2ad:	push   esi
  40f2ae:	idiv   DWORD PTR [ecx+0x4]
  40f2b1:	lods   eax,DWORD PTR ds:[esi]
  40f2b2:	sbb    eax,0x4b51ffc1
  40f2b7:	push   edi
  40f2b8:	sbb    DWORD PTR [esi],edi
  40f2ba:	xchg   ecx,eax
  40f2bb:	inc    edi
  40f2bc:	out    0x7d,eax
  40f2be:	add    BYTE PTR ds:[eax],al
  40f2c1:	adc    DWORD PTR cs:[ebx-0x19],0x3e55
  40f2c9:	adc    dl,BYTE PTR [edx+0x4a]
  40f2cc:	je     0x40f2df
  40f2ce:	loop   0x40f270
  40f2d0:	add    ebp,ecx
  40f2d2:	cmp    bh,BYTE PTR [ebp-0x7c]
  40f2d5:	xor    eax,0x99fe4a84
  40f2da:	jg     0x40f270
  40f2dc:	(bad)  
  40f2dd:	div    DWORD PTR [edx+ecx*2-0x19]
  40f2e1:	inc    ebp
  40f2e2:	xor    DWORD PTR [eax],eax
  40f2e4:	add    al,dl
  40f2e6:	ds dec ebx
  40f2e8:	(bad)  
  40f2e9:	fiadd  WORD PTR [eax]
  40f2eb:	jl     0x40f281
  40f2ed:	(bad)  
  40f2ee:	xlat   BYTE PTR ds:[ebx]
  40f2ef:	je     0x40f33b
  40f2f1:	out    0x69,eax
  40f2f3:	xor    DWORD PTR [eax],eax
  40f2f5:	add    BYTE PTR [eax],al
  40f2f7:	imul   eax,ecx,0x59
  40f2fa:	leave  
  40f2fb:	mov    ds:0x53ec8992,eax
  40f300:	mov    eax,0xfa7853de
  40f305:	in     al,0x40
  40f307:	loopne 0x40f2bf
  40f309:	jo     0x40f30c
  40f30b:	mov    ds:0x663d81bc,eax
  40f310:	jmp    0x8307:0x32d00040
  40f317:	jge    0x40f389
  40f319:	sub    al,0x41
  40f31b:	mov    al,ds:0x7b0574fe
  40f320:	mov    esi,0xc4d3c959
  40f325:	inc    ebx
  40f326:	cld    
  40f327:	mov    al,ds:0x57fffffe
  40f32c:	inc    ebx
  40f32d:	test   BYTE PTR [eax],0x90
  40f330:	(bad)  
  40f331:	inc    esi
  40f333:	aad    0xaa
  40f335:	(bad)  
  40f336:	jmp    DWORD PTR [eax-0x2]
  40f339:	mov    BYTE PTR [ebp+0x24],0x4
  40f33d:	add    BYTE PTR [eax],al
  40f33f:	push   eax
  40f340:	ret    
  40f341:	inc    ebx
  40f342:	lock push eax
  40f344:	(bad)  
  40f345:	(bad)  
  40f346:	dec    ebp
  40f348:	inc    edx
  40f349:	out    dx,al
  40f34a:	push   eax
  40f34b:	fld    QWORD PTR [edx-0xe]
  40f34e:	push   eax
  40f34f:	add    ch,bl
  40f351:	inc    edx
  40f352:	jmp    0x3c45:0x8bbbba50
  40f359:	xchg   esp,eax
  40f35a:	push   0x6a00ca02
  40f35f:	add    BYTE PTR [edi],ch
  40f361:	push   ebx
  40f362:	mov    ah,0x2e
  40f364:	sar    ebp,1
  40f366:	mov    BYTE PTR [ebp-0x18],al
  40f369:	cmp    BYTE PTR [ebx-0x18],0x20
  40f36d:	xor    al,BYTE PTR [edi]
  40f36f:	cmp    DWORD PTR [ecx],0x39e95bb4
  40f375:	push   edi
  40f376:	add    dh,BYTE PTR [ebp+0x6d]
  40f379:	inc    edx
  40f37a:	aad    0xfb
  40f37c:	mov    esi,0x64824c24
  40f381:	pop    DWORD PTR [edx]
  40f383:	je     0x40f308
  40f385:	fisubr WORD PTR [ebp+0x4b62e2f7]
  40f38b:	jb     0x40f3ee
  40f38d:	outs   dx,DWORD PTR ds:[esi]
  40f38e:	aad    0x41
  40f390:	(bad)  
  40f391:	jb     0x40f40c
  40f393:	inc    esp
  40f394:	fnstcw WORD PTR [edx+0xf]
  40f397:	call   0xfe8e08be
  40f39c:	inc    edx
  40f39d:	xchg   edi,eax
  40f39e:	(bad)  
  40f39f:	and    dh,BYTE PTR [eax+0x2d69681c]
  40f3a5:	jg     0x40f403
  40f3a7:	xor    DWORD PTR [esi-0x668bb41e],edx
  40f3ad:	fcmovb st,st(2)
  40f3af:	pop    es
  40f3b0:	xchg   BYTE PTR [esi+eiz*2],ch
  40f3b3:	mov    es,WORD PTR [eax]
  40f3b5:	stc    
  40f3b6:	bound  ecx,QWORD PTR [ebx+0x34]
  40f3b9:	daa    
  40f3ba:	mov    es,ecx
  40f3bc:	(bad)  
  40f3bd:	mov    edi,0xf22d9f57
  40f3c2:	xchg   edi,eax
  40f3c3:	add    al,BYTE PTR [ebx+0x4c4b937a]
  40f3c9:	gs (bad) 
  40f3cb:	int    0xeb
  40f3cd:	cmp    DWORD PTR [edi+eax*4-0x2],esi
  40f3d1:	int3   
  40f3d2:	repnz dec ebx
  40f3d4:	adc    al,0x8b
  40f3d6:	mov    ecx,eax
  40f3d8:	(bad)  
  40f3d9:	call   FWORD PTR [ebx+0x572eff4e]
  40f3df:	add    al,BYTE PTR [ecx-0xa7005c]
  40f3e5:	push   ds
  40f3e6:	push   edi
  40f3e7:	aad    0x4
  40f3e9:	and    BYTE PTR [eax],al
  40f3eb:	inc    ebp
  40f3ec:	dec    ebx
  40f3ed:	cmovns ebp,DWORD PTR [ecx-0x37]
  40f3f1:	add    al,BYTE PTR [eax]
  40f3f3:	pop    ebp
  40f3f4:	std    
  40f3f5:	call   edx
  40f3f7:	int3   
  40f3f8:	dec    ebx
  40f3f9:	dec    ebp
  40f3fa:	mov    ss,WORD PTR [esi]
  40f3fc:	(bad)
  40f3ff:	out    0x3,eax
  40f401:	cmp    DWORD PTR [eax],eax
  40f403:	adc    bh,BYTE PTR ds:0x5861b2fb
  40f409:	mov    ebx,0x67b7bc43
  40f40e:	fsub   DWORD PTR [ebx]
  40f410:	bound  eax,QWORD PTR [esi]
  40f412:	add    BYTE PTR [ecx-0x72c2c62a],dl
  40f418:	xchg   DWORD PTR [eax],eax
  40f41a:	jne    0x40f472
  40f41c:	(bad)  
  40f41d:	les    ebp,FWORD PTR [esi-0x44030bb8]
  40f423:	or     bh,BYTE PTR [edi+0x1a]
  40f426:	clc    
  40f427:	(bad)  
  40f428:	call   0x295630fd
  40f42d:	stos   DWORD PTR es:[edi],eax
  40f42e:	repz sub DWORD PTR ss:[edi+0x25],edi
  40f433:	sbb    ah,BYTE PTR [edx+0x77577ec4]
  40f439:	add    eax,0x20510039
  40f43e:	ins    DWORD PTR es:[edi],dx
  40f43f:	dec    eax
  40f440:	cmp    eax,0xa20e2587
  40f445:	les    ebx,FWORD PTR [esi+0x48]
  40f448:	mov    ah,0xf2
  40f44a:	push   edi
  40f44b:	int3   
  40f44c:	in     al,dx
  40f44d:	dec    edx
  40f44e:	add    eax,0x46c4b20e
  40f453:	pusha  
  40f454:	inc    esi
  40f455:	pop    es
  40f456:	cmp    DWORD PTR [eax],eax
  40f458:	loop   0x40f49d
  40f45a:	lods   eax,DWORD PTR ds:[esi]
  40f45b:	std    
  40f45c:	pmaxub mm7,QWORD PTR [ecx]
  40f45f:	add    cl,ch
  40f461:	inc    edx
  40f462:	jge    0x40f4a8
  40f464:	(bad)  
  40f465:	call   0x5c40f4a4
  40f46a:	clc    
  40f46b:	dec    ebx
  40f46c:	dec    edi
  40f46d:	push   ebx
  40f46e:	xor    eax,0xefde01da
  40f473:	add    ebp,DWORD PTR [edx-0x17]
  40f476:	jae    0x40f44a
  40f478:	add    ecx,esi
  40f47a:	jmp    0x6921cc
  40f47f:	xor    eax,0x3835bffb
  40f484:	pop    ecx
  40f485:	mov    cl,ch
  40f487:	cmp    al,BYTE PTR [eax]
  40f489:	(bad)  
  40f48a:	cmp    bh,BYTE PTR [ecx]
  40f48c:	pop    eax
  40f48d:	pop    ecx
  40f48e:	sub    BYTE PTR [edx+0x75248846],al
  40f494:	inc    esi
  40f495:	jb     0x40f484
  40f497:	bound  edx,QWORD PTR [ebp+0x1]
  40f49a:	jmp    0xfd3fa4d9
  40f49f:	add    dh,BYTE PTR [edi-0x20590502]
  40f4a5:	jmp    edi
  40f4a7:	cmp    al,BYTE PTR [eax]
  40f4a9:	push   0xfe4796e9
  40f4ae:	push   ecx
  40f4af:	sbb    DWORD PTR [edx],eax
  40f4b1:	add    cl,ch
  40f4b3:	xchg   DWORD PTR [edi-0x4405fd8d],eax
  40f4b9:	sti    
  40f4ba:	jmp    0x7440f4f9
  40f4bf:	jns    0x40f50c
  40f4c1:	dec    edi
  40f4c2:	sar    DWORD PTR [edx],cl
  40f4c4:	fiadd  DWORD PTR [ecx]
  40f4c6:	mov    DWORD PTR ss:[edi+0x69],ecx
  40f4ca:	jmp    0x2644c6d2
  40f4cf:	dec    ecx
  40f4d0:	dec    ebp
  40f4d1:	sub    eax,0xbffb3aa8
  40f4d6:	popf   
  40f4d7:	cmp    al,0x46
  40f4d9:	je     0x40f4ec
  40f4db:	xchg   edx,eax
  40f4dc:	popf   
  40f4dd:	xor    BYTE PTR [eax],al
  40f4df:	aaa    
  40f4e0:	mov    edx,0x270030e9
  40f4e5:	aaa    
  40f4e6:	imul   al
  40f4e8:	test   ah,ch
  40f4ea:	(bad)  
  40f4eb:	jmp    DWORD PTR [edi+0x3]
  40f4ee:	and    BYTE PTR [ecx+0x20],al
  40f4f1:	rol    BYTE PTR [ebx-0x4],0x10
  40f4f5:	add    eax,DWORD PTR [eax]
  40f4f7:	add    BYTE PTR [ebp+0x7a50fa87],dl
  40f4fd:	cld    
  40f4fe:	imul   eax,DWORD PTR [edx],0xfefe264f
  40f504:	and    eax,DWORD PTR [eax]
  40f506:	call   DWORD PTR ds:0x40e99e
  40f50c:	fcmovnb st,st(2)
  40f50e:	or     eax,0xfffc6984
  40f513:	call   FWORD PTR [edi-0x2fdf297a]
  40f519:	add    al,BYTE PTR [eax]
  40f51b:	(bad)  
  40f51c:	pop    ebp
  40f51d:	sbb    BYTE PTR [eax],al
  40f51f:	add    BYTE PTR [eax-0x638c00fe],ah
  40f525:	mov    DWORD PTR [ebx-0x20],0x8f062d27
  40f52c:	pop    ebp
  40f52d:	loopne 0x40f4f4
  40f52f:	inc    ebp
  40f530:	call   0x9140f530
  40f535:	mov    edi,0x290ec43
  40f53a:	add    BYTE PTR [eax],al
  40f53c:	pop    ds
  40f53d:	xchg   esi,ebp
  40f53f:	add    BYTE PTR [eax+0x2],ah
  40f542:	add    bh,al
  40f544:	popf   
  40f545:	mov    dh,0xfe
  40f547:	inc    DWORD PTR [eax]
  40f549:	push   eax
  40f54a:	add    cl,BYTE PTR [ebp-0x273d7bb]
  40f550:	jne    0x40f566
  40f552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f553:	sub    al,0x4
  40f555:	push   eax
  40f556:	add    cl,BYTE PTR [ebx]
  40f558:	sar    BYTE PTR [ecx],0x65
  40f55b:	jmp    0x4074:0x3ebb482
  40f562:	dec    dh
  40f564:	repz mov dh,0x5c
  40f567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f568:	sub    BYTE PTR [eax+0x57],bh
  40f56b:	aas    
  40f56c:	inc    esp
  40f56d:	in     eax,dx
  40f56e:	pop    eax
  40f56f:	add    al,BYTE PTR [eax]
  40f571:	cmp    DWORD PTR [edx],esi
  40f573:	inc    esi
  40f575:	jl     0x40f502
  40f577:	add    al,BYTE PTR [eax]
  40f579:	cmp    DWORD PTR [edi+0x47],edx
  40f57c:	je     0x40f573
  40f57e:	ss in  eax,dx
  40f580:	jmp    0xb450da4
  40f585:	stc    
  40f586:	or     ebp,edx
  40f588:	out    0xc2,eax
  40f58a:	test   DWORD PTR [edi-0x2],eax
  40f58d:	mov    edx,0x782d6454
  40f592:	push   edi
  40f593:	add    dh,BYTE PTR [edi+edi*1+0x66]
  40f597:	in     eax,dx
  40f598:	loope  0x40f5a9
  40f59a:	sbb    BYTE PTR [edi+eax*8],al
  40f59d:	cmp    al,0x13
  40f59f:	sbb    eax,DWORD PTR [ecx+0x39]
  40f5a2:	pop    eax
  40f5a3:	add    al,BYTE PTR [eax]
  40f5a5:	mov    ecx,0x39d3c5da
  40f5aa:	inc    ebx
  40f5ab:	sti    
  40f5ac:	inc    BYTE PTR [eax]
  40f5ae:	or     al,0xcb
  40f5b0:	inc    edi
  40f5b1:	je     0x40f540
  40f5b3:	scas   eax,DWORD PTR es:[edi]
  40f5b4:	sub    eax,0x47573902
  40f5b9:	je     0x40f638
  40f5bb:	mov    edi,0x57390043
  40f5c0:	inc    esi
  40f5c1:	xor    bh,BYTE PTR [ecx-0x80]
  40f5c4:	inc    edi
  40f5c5:	(bad)  
  40f5c6:	pushw  es
  40f5c8:	push   ebp
  40f5c9:	lods   eax,DWORD PTR ds:[esi]
  40f5ca:	and    DWORD PTR [esi-0x9],edx
  40f5cd:	test   BYTE PTR [ebx],bl
  40f5cf:	push   ss
  40f5d0:	dec    eax
  40f5d1:	inc    dl
  40f5d3:	add    BYTE PTR [edx],al
  40f5d5:	std    
  40f5d6:	arpl   bp,si
  40f5d8:	arpl   ax,sp
  40f5da:	cmp    al,0x45
  40f5dc:	adc    eax,0xe900398b
  40f5e1:	add    ecx,DWORD PTR [esi-0x72bbd057]
  40f5e7:	jns    0x40f5f5
  40f5e9:	test   dl,bh
  40f5eb:	inc    ebx
  40f5ec:	sub    ch,0x1e
  40f5ef:	shr    al,0x4b
  40f5f2:	mov    bh,bh
  40f5f4:	test   eax,0xd1009047
  40f5f9:	xor    eax,0x5be90038
  40f5fe:	hlt    
  40f5ff:	or     esi,ecx
  40f601:	inc    edi
  40f602:	(bad)  
  40f603:	push   0xffffffb9
  40f605:	inc    edi
  40f606:	out    0xd7,eax
  40f608:	adc    BYTE PTR [esi],0x78
  40f60b:	add    BYTE PTR [ecx+0x52],al
  40f60e:	and    bh,BYTE PTR [edi+0x3d005be8]
  40f614:	or     DWORD PTR [esi-0x31fda1b9],esp
  40f61a:	les    edi,FWORD PTR [esi-0x7e9d624]
  40f620:	inc    DWORD PTR [eax-0x7aba8fba]
  40f626:	fsubr  st(4),st
  40f628:	adc    eax,0xf4110428
  40f62d:	ret    
  40f62e:	les    edx,FWORD PTR [esi-0x71f582a4]
  40f634:	inc    esp
  40f635:	rol    ch,1
  40f637:	push   ecx
  40f638:	mov    edi,0x16dedbe8
  40f63d:	test   al,0x3
  40f63f:	popa   
  40f640:	pop    edi
  40f641:	adc    al,BYTE PTR [edi+0x6f]
  40f644:	xlat   BYTE PTR ds:[ebx]
  40f645:	jp     0x40f65d
  40f647:	clc    
  40f648:	call   eax
  40f64a:	adc    bh,BYTE PTR ds:[edi+0x2ff2e8ff]
  40f651:	cmp    DWORD PTR [esi],ebp
  40f653:	neg    ah
  40f655:	push   ss
  40f656:	sar    BYTE PTR [ebp+0x44],1
  40f659:	ss sbb ax,0xffbf
  40f65e:	add    BYTE PTR [ebx+0x9],bh
  40f661:	dec    DWORD PTR [esi]
  40f663:	(bad)  
  40f664:	cli    
  40f665:	stc    
  40f666:	push   es
  40f667:	jle    0x40f6c4
  40f669:	xor    al,0x3
  40f66b:	jbe    0x40f6af
  40f66d:	or     ch,BYTE PTR [ecx]
  40f66f:	jmp    0x8420de62
  40f674:	inc    edx
  40f675:	(bad)  
  40f676:	repnz add BYTE PTR [edx-0x31],bh
  40f67a:	or     DWORD PTR [esi+0x284a5039],esp
  40f680:	cmp    eax,0x3ae90001
  40f685:	fadd   DWORD PTR [eax]
  40f687:	call   0xd728f6c6
  40f68c:	dec    edx
  40f68d:	inc    ebx
  40f68e:	dec    BYTE PTR [edx-0x16bf48d8]
  40f694:	bsf    edi,ebx
  40f697:	call   0x6c40f6d9
  40f69c:	stc    
  40f69d:	inc    edi
  40f69e:	dec    edi
  40f69f:	xchg   esi,eax
  40f6a0:	dec    ecx
  40f6a1:	push   cs
  40f6a2:	dec    ebx
  40f6a3:	sub    BYTE PTR ds:0x3aeb6858,dh
  40f6a9:	add    BYTE PTR [ebx],cl
  40f6ab:	test   eax,0xbcfeec89
  40f6b0:	sub    BYTE PTR [edi+0x2cf2e940],dh
  40f6b6:	cs data16 (bad) 
  40f6b9:	cmp    DWORD PTR [ebx+ebx*1],eax
  40f6bc:	ret    0xffc0
  40f6bf:	call   0x4140f6fe
  40f6c4:	push   esp
  40f6c5:	or     eax,0xa6ff00ff
  40f6ca:	add    al,0x33
  40f6cc:	pop    ds
  40f6cd:	mov    edx,0x3d475666
  40f6d2:	(bad)  
  40f6d3:	out    0x63,eax
  40f6d5:	scas   al,BYTE PTR es:[edi]
  40f6d6:	std    
  40f6d7:	dec    DWORD PTR [ecx]
  40f6d9:	mov    esi,0x2c008b53
  40f6de:	daa    
  40f6df:	add    eax,0xf7fee0e9
  40f6e4:	jb     0x40f707
  40f6e6:	mov    esi,0xa7106afd
  40f6eb:	mov    eax,0xb7ff1001
  40f6f0:	add    BYTE PTR [eax],ah
  40f6f2:	(bad)  
  40f6f3:	dec    eax
  40f6f5:	bound  eax,QWORD PTR [ebx-0x2]
  40f6f8:	xor    DWORD PTR [bx+0x3e],esp
  40f6fd:	sbb    BYTE PTR [esi],ch
  40f6ff:	inc    edx
  40f701:	mov    eax,tr7
  40f704:	call   0xa428f329
  40f709:	sar    esi,1
  40f70b:	jmp    edi
  40f70d:	call   0xf0c8:0xf8fffdb9
  40f714:	call   FWORD PTR [edi-0x600aed5d]
  40f71a:	mov    esp,0xbca5fce6
  40f71f:	std    
  40f720:	or     DWORD PTR [ebp-0x5fbeb652],0xfffffffe
  40f727:	jae    0x40f742
  40f729:	adc    edi,ebx
  40f72b:	loope  0x40f75b
  40f72d:	push   ecx
  40f72e:	cld    
  40f72f:	push   DWORD PTR [ebx-0x5a]
  40f732:	mov    ebx,0x3dcee213
  40f737:	inc    dh
  40f739:	xchg   ebp,eax
  40f73a:	call   0xffff:0xfd904127
  40f741:	add    BYTE PTR [ecx],bh
  40f743:	fstp   DWORD PTR [ebx-0x3a]
  40f746:	jb     0x40f6f9
  40f748:	inc    esp
  40f749:	out    0x71,eax
  40f74b:	mov    esp,0x307afe44
  40f750:	int3   
  40f751:	call   0x718b504f
  40f756:	cmp    BYTE PTR [esi],dl
  40f758:	inc    ebp
  40f759:	out    0x2e,eax
  40f75b:	pop    eax
  40f75c:	add    al,BYTE PTR [eax]
  40f75e:	rcr    DWORD PTR [ebx-0x57],cl
  40f761:	sub    cl,BYTE PTR [ebx]
  40f763:	jecxz  0x40f7b7
  40f765:	xor    BYTE PTR [ebx],0x5c
  40f768:	int    0x1
  40f76a:	adc    dl,BYTE PTR [esi+0x57]
  40f76d:	jmp    0x16:0xfe44db11
  40f774:	ins    BYTE PTR es:[edi],dx
  40f775:	test   BYTE PTR [esi],0x53
  40f778:	fdivr  st,st(7)
  40f77a:	push   ds
  40f77b:	in     al,dx
  40f77c:	add    al,BYTE PTR [eax]
  40f77e:	cmp    DWORD PTR [edx],esp
  40f780:	sbb    eax,0x418907c
  40f785:	call   DWORD PTR [edi+edx*8]
  40f788:	test   eax,0x1d3a3940
  40f78d:	test   BYTE PTR [eax+0x1cff0418],al
  40f793:	fild   QWORD PTR [ecx+0x1d923940]
  40f799:	mov    WORD PTR [eax+0x18],fs
  40f79c:	add    al,0xff
  40f79e:	adc    al,0xc7
  40f7a0:	test   eax,0x1d6a3940
  40f7a5:	xchg   esp,eax
  40f7a6:	add    BYTE PTR [eax],dl
  40f7a8:	sbb    BYTE PTR [edi+edi*8],al
  40f7ab:	pop    esp
  40f7ac:	fild   QWORD PTR [ecx+0x1dc23940]
  40f7b2:	pushf  
  40f7b3:	lock pop ss
  40f7b5:	add    al,0xff
  40f7b7:	push   esp
  40f7b8:	mov    bh,0xa9
  40f7ba:	inc    eax
  40f7bb:	cmp    DWORD PTR [eax],eax
  40f7bd:	pushw  ds
  40f7bf:	aad    0xa7
  40f7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c2:	add    esi,DWORD PTR [esi+0x1b]
  40f7c5:	sub    DWORD PTR [edx+0x1e4dfff9],0x3a7a795
  40f7cf:	pop    esi
  40f7d0:	sbb    edi,DWORD PTR [ecx-0x56]
  40f7d3:	stc    
  40f7d4:	push   DWORD PTR ds:0xa7a7851e
  40f7da:	add    eax,DWORD PTR [esi+0x1b]
  40f7dd:	popa   
  40f7de:	stos   BYTE PTR es:[edi],al
  40f7df:	stc    
  40f7e0:	call   FWORD PTR ds:0xa7a6f51e
  40f7e6:	add    ebp,DWORD PTR [esi]
  40f7e8:	sbb    ebp,DWORD PTR [ecx]
  40f7ea:	stos   BYTE PTR es:[edi],al
  40f7eb:	jns    0x40f7ed
  40f7ed:	push   es
  40f7ee:	push   ds
  40f7ef:	cmc    
  40f7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f2:	add    edx,DWORD PTR [esi]
  40f7f4:	sbb    esp,DWORD PTR [ecx]
  40f7f6:	stos   BYTE PTR es:[edi],al
  40f7f7:	jns    0x40f7f9
  40f7f9:	out    dx,al
  40f7fa:	sbb    eax,0x427a6f5
  40f7ff:	(bad)  
  40f800:	sbb    bh,BYTE PTR [ecx-0x29ff8623]
  40f806:	jmp    0x4689f15
  40f80b:	add    dh,ah
  40f80d:	sbb    ah,BYTE PTR [ecx-0x41ff8623]
  40f813:	jmp    0x4689f0a
  40f818:	into   
  40f819:	sbb    cl,cl
  40f81b:	fnstsw WORD PTR [ecx+0x0]
  40f81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81f:	jmp    0x4689efe
  40f824:	mov    dh,0x1a
  40f826:	sbb    ebp,0xe98dfff9
  40f82c:	xchg   edx,eax
  40f82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f82e:	daa    
  40f82f:	add    al,0x9e
  40f831:	sbb    bh,BYTE PTR [ecx-0x23]
  40f834:	stc    
  40f835:	(bad)  
  40f836:	push   DWORD PTR [ebp-0x60]
  40f839:	dec    esp
  40f83a:	pop    eax
  40f83b:	sub    BYTE PTR ds:0x5c612441,bh
  40f841:	mov    edi,0x44605dff
  40f846:	pop    eax
  40f847:	test   al,0x3a
  40f849:	inc    ecx
  40f84a:	and    al,0xe9
  40f84c:	test   BYTE PTR [edi-0x3afba01],bh
  40f852:	pop    ecx
  40f853:	test   al,0x3a
  40f855:	inc    ecx
  40f856:	and    al,0xe1
  40f858:	ins    BYTE PTR es:[edi],dx
  40f859:	mov    edi,0xf4502dff
  40f85e:	pop    ecx
  40f85f:	test   al,0x3a
  40f861:	inc    ecx
  40f862:	and    al,0xf9
  40f864:	adc    al,0xc1
  40f866:	call   DWORD PTR ds:0xa85a1420
  40f86c:	cmp    bh,BYTE PTR [edi]
  40f86e:	and    al,0xe1
  40f870:	add    ah,bh
  40f872:	sar    bh,0xfd
  40f875:	and    DWORD PTR [edx+ebx*2],ebx
  40f878:	test   al,0x3a
  40f87a:	aas    
  40f87b:	and    al,0xc9
  40f87d:	in     al,0xc0
  40f87f:	jmp    ebp
  40f881:	adc    esp,esp
  40f883:	pop    ecx
  40f884:	sub    BYTE PTR ds:0xf01243f,bh
  40f88a:	sar    edi,0xcd
  40f88d:	shr    ebx,1
  40f88f:	pop    ecx
  40f890:	sub    BYTE PTR ds:0xf4f9243f,dh
  40f896:	sar    bh,0xb5
  40f899:	loope  0x40f88e
  40f89b:	pop    ecx
  40f89c:	sub    BYTE PTR ds:0xdce1243f,bh
  40f8a2:	sar    bh,0x9d
  40f8a5:	mov    eax,ds:0x352859fb
  40f8aa:	aas    
  40f8ab:	and    al,0x29
  40f8ad:	xchg   eax,eax
  40f8af:	(bad)  
  40f8b0:	push   DWORD PTR [edi+0x615a4228]
  40f8b6:	add    al,0xff
  40f8b8:	and    eax,0x3f5e58
  40f8bd:	pop    ss
  40f8be:	sub    BYTE PTR [esi+0x5a],cl
  40f8c1:	rol    DWORD PTR [ebx],1
  40f8c3:	jmp    DWORD PTR ds:0x3f5dac
  40f8c9:	pop    es
  40f8ca:	sub    BYTE PTR [esi+0x5a],dl
  40f8cd:	xchg   ecx,eax
  40f8ce:	add    edi,edi
  40f8d0:	and    eax,0x3f5d94
  40f8d5:	add    BYTE PTR [edi],dl
  40f8d7:	sub    BYTE PTR [esi+0x5a],bl
  40f8da:	mov    eax,ds:0x7c25ff03
  40f8df:	pop    ebp
  40f8e0:	aas    
  40f8e1:	add    BYTE PTR [edi],dl
  40f8e3:	sub    BYTE PTR [edx+0x5a],ch
  40f8e6:	loope  0x40f8ea
  40f8e8:	jmp    DWORD PTR ds:0x3f5ccc
  40f8ee:	aaa    
  40f8ef:	sub    BYTE PTR [esi+0x5a],dh
  40f8f2:	rol    DWORD PTR [edx],1
  40f8f4:	jmp    DWORD PTR ds:0x3f5d94
  40f8fa:	pop    es
  40f8fb:	daa    
  40f8fc:	jle    0x40f958
  40f8fe:	rol    DWORD PTR [edx],1
  40f900:	jmp    DWORD PTR ds:0x3f5e8c
  40f906:	pop    ss
  40f907:	daa    
  40f908:	xchg   BYTE PTR [edx+0x21],bl
  40f90b:	add    al,0xff
  40f90d:	and    eax,0x3f5e84
  40f912:	mul    DWORD PTR [esi]
  40f914:	mov    ds,WORD PTR [edx+0x21]
  40f917:	add    al,0xff
  40f919:	and    eax,0x3f5e6c
  40f91e:	xchg   edi,eax
  40f91f:	es xchg esi,eax
  40f921:	pop    edx
  40f922:	adc    DWORD PTR [edi+edi*8],eax
  40f925:	and    eax,0x3f5e00
  40f92a:	cmp    DWORD PTR [esi-0x17fc581a],edx
  40f930:	add    edi,edi
  40f932:	push   esp
  40f933:	aad    0xdd
  40f935:	inc    eax
  40f936:	cmp    DWORD PTR [esi-0xcff4c1a],edi
  40f93c:	out    0x3,eax
  40f93e:	call   FWORD PTR [ecx+esi*8-0x23]
  40f942:	inc    eax
  40f943:	cmp    DWORD PTR [esi+0x6813bbe6],esp
  40f949:	add    bh,bh
  40f94b:	adc    al,0xe9
  40f94d:	fld    QWORD PTR [eax+0x39]
  40f950:	into   
  40f951:	out    0xc3,al
  40f953:	add    ebp,DWORD PTR [eax+0x2]
  40f956:	call   FWORD PTR [ecx+esi*8]
  40f959:	fld    QWORD PTR [eax+0x39]
  40f95c:	mul    dh
  40f95e:	iret   
  40f95f:	jecxz  0x40f9c8
  40f961:	add    bh,bh
  40f963:	adc    al,0xfd
  40f965:	fld    QWORD PTR [eax+0x39]
  40f968:	push   ds
  40f969:	out    0xd7,eax
  40f96b:	xchg   ebx,eax
  40f96c:	push   0xeb5cff02
  40f971:	fld    QWORD PTR [eax+0x39]
  40f974:	push   es
  40f975:	out    0xdf,eax
  40f977:	jae    0x40f9e1
  40f979:	add    bh,bh
  40f97b:	push   esp
  40f97c:	or     ebx,esi
  40f97e:	inc    eax
  40f97f:	cmp    DWORD PTR [esi],ebp
  40f981:	in     eax,0xe7
  40f983:	arpl   ax,bp
  40f985:	add    edi,edi
  40f987:	sbb    al,0x4b
  40f989:	fadd   QWORD PTR [eax+0x39]
  40f98c:	push   esi
  40f98d:	in     eax,0xef
  40f98f:	sub    eax,0x3
  40f992:	call   DWORD PTR [ebx+edi*2]
  40f995:	fadd   QWORD PTR [eax+0x39]
  40f998:	jle    0x40f97f
  40f99a:	sti    
  40f99b:	jae    0x40f985
  40f99d:	add    edi,edi
  40f99f:	add    BYTE PTR [edi+eiz*1],bl
  40f9a2:	fild   DWORD PTR [eax+0x39]
  40f9a5:	add    BYTE PTR [ebp-0x53b37db1],dh
  40f9ab:	dec    edi
  40f9ac:	or     BYTE PTR [ecx+eiz*2-0x39],0x5a
  40f9b1:	add    al,0x6a
  40f9b3:	cmp    edi,DWORD PTR [eax]
  40f9b5:	mov    ebx,0x1a7bf0
  40f9ba:	jmp    0xe94574c2
  40f9bf:	test   BYTE PTR [esi-0x3ef413fc],cl
  40f9c5:	add    ch,cl
  40f9c7:	add    edi,DWORD PTR [ecx]
  40f9c9:	inc    edx
  40f9ca:	in     al,0x3
  40f9cc:	mov    edx,0x3ebee038
  40f9d1:	js     0x40f9b7
  40f9d3:	add    edi,DWORD PTR [ecx]
  40f9d5:	add    BYTE PTR [ebx],ch
  40f9d7:	pop    es
  40f9d8:	cmp    DWORD PTR [ecx+0x7cc1340],eax
  40f9de:	jno    0x40f9e9
  40f9e0:	cmp    DWORD PTR [eax],eax
  40f9e2:	jmp    0x6a41342c
  40f9e7:	cmp    edx,DWORD PTR [esi-0x45]
  40f9ea:	lock jnp 0x40fa23
  40f9ed:	add    cl,ch
  40f9ef:	add    edi,ebx
  40f9f1:	add    ebp,ecx
  40f9f3:	test   BYTE PTR [esi],ah
  40f9f5:	rol    BYTE PTR [ebx-0x16f62ef5],0x3
  40f9fc:	cmp    DWORD PTR [edx-0x14],eax
  40f9ff:	add    eax,DWORD PTR [eax+eax*4-0x18]
  40fa03:	add    eax,DWORD PTR [eax]
  40fa05:	cmp    DWORD PTR [ebx+0x427bf0],edi
  40fa0b:	jmp    0xe944f513
  40fa10:	add    BYTE PTR [ecx],bh
  40fa12:	(bad)  
  40fa13:	call   0x8149561b
  40fa18:	push   cs
  40fa19:	cmp    DWORD PTR [eax],eax
  40fa1b:	jmp    0x413461
  40fa20:	hlt    
  40fa21:	cmp    al,BYTE PTR [edx]
  40fa23:	add    cl,ch
  40fa25:	stc    
  40fa26:	add    al,0xb8
  40fa28:	stc    
  40fa29:	cmp    al,BYTE PTR [eax]
  40fa2b:	add    BYTE PTR [ebx-0x16c2ffbf],ch
  40fa31:	add    BYTE PTR ds:[eax],al
  40fa34:	or     al,0x2d
  40fa36:	js     0x40fa49
  40fa38:	jmp    0xe602fa77
  40fa3d:	cmp    bh,bl
  40fa3f:	jmp    eax
  40fa41:	cmp    al,BYTE PTR [eax]
  40fa43:	jge    0x40fa26
  40fa45:	add    dl,BYTE PTR [ecx]
  40fa47:	add    cl,ch
  40fa49:	cmp    al,BYTE PTR [edx+0x3]
  40fa4c:	jmp    0xe950fa8a
  40fa51:	cmp    bh,BYTE PTR [ebx+0x479107]
  40fa57:	add    cl,ch
  40fa59:	clc    
  40fa5a:	add    BYTE PTR [eax],al
  40fa5c:	cld    
  40fa5d:	cmp    ah,al
  40fa5f:	(bad)  
  40fa60:	call   0xd1f8fede
  40fa65:	cmp    al,BYTE PTR [eax]
  40fa67:	add    BYTE PTR [ebx],ch
  40fa69:	add    BYTE PTR [ecx+0x0],al
  40fa6c:	cmp    eax,0xfe3bfae9
  40fa71:	xchg   esp,eax
  40fa72:	xor    bh,BYTE PTR [eax+0x19]
  40fa75:	jmp    0xee02fab4
  40fa7a:	cmp    bh,ch
  40fa7c:	jmp    FWORD PTR [eax+0x35]
  40fa7f:	add    BYTE PTR [ebp-0x1f],bh
  40fa82:	adc    BYTE PTR [edi],0x0
  40fa85:	jmp    0xe94438c4
  40fa8a:	jmp    0x40fad4
  40fa8c:	cmp    al,0xe9
  40fa8e:	cmp    al,BYTE PTR [ecx]
  40fa90:	add    dh,ah
  40fa92:	cdq    
  40fa93:	inc    eax
  40fa94:	mov    WORD PTR ds:0x8b1a2c,ds
  40fa9a:	mov    eax,ds:0x630002c1
  40fa9f:	test   BYTE PTR [edx],bl
  40faa1:	add    al,0xd0
  40faa3:	(bad)  
  40faa4:	(bad)  
  40faa5:	jne    0x40fa94
  40faa7:	xchg   BYTE PTR [edi+0x10],bh
  40faaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faab:	(bad)  
  40faac:	dec    DWORD PTR [eax+0x41721]
  40fab2:	nop
  40fab3:	aas    
  40fab4:	lds    eax,FWORD PTR [ecx+0x38c]
  40faba:	mov    bh,bh
  40fabc:	(bad)  
  40fabd:	dec    DWORD PTR [ecx]
  40fabf:	test   BYTE PTR [esi],cl
  40fac1:	add    al,0x90
  40fac3:	inc    DWORD PTR [edx+0x3747c]
  40fac9:	mov    ebp,ecx
  40facb:	push   ss
  40facc:	add    al,0x0
  40face:	add    BYTE PTR [eax+0x73],ah
  40fad1:	or     DWORD PTR [edx-0x13ffeaf],ecx
  40fad7:	adc    BYTE PTR [edi-0x9b3e01],al
  40fadd:	iret   
  40fade:	and    DWORD PTR [edx],esp
  40fae0:	add    eax,DWORD PTR [eax]
  40fae2:	adc    ecx,0x1a
  40fae5:	add    al,0x0
  40fae7:	push   eax
  40fae8:	cli    
  40fae9:	jae    0x40fb08
  40faeb:	stos   DWORD PTR es:[edi],eax
  40faec:	test   BYTE PTR [esi],cl
  40faee:	add    al,0x20
  40faf0:	dec    DWORD PTR [eax+0x32881]
  40faf6:	add    al,dl
  40faf8:	sar    DWORD PTR [edi+0x1c],0x24
  40fafc:	(bad)  
  40fafd:	inc    DWORD PTR [edi]
  40faff:	and    bh,bh
  40fb01:	dec    DWORD PTR [eax+0x40f91]
  40fb07:	adc    BYTE PTR [esi-0x11be779],al
  40fb0d:	dec    edi
  40fb0f:	inc    ecx
  40fb10:	rol    DWORD PTR [ecx+0x6353981],0x0
  40fb17:	cmp    DWORD PTR [edx-0x4a],ecx
  40fb1a:	sbb    al,0xc2
  40fb1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb1d:	adc    eax,DWORD PTR [ecx+edi*1]
  40fb20:	sub    DWORD PTR [ecx+0x22d2180],ecx
  40fb26:	add    BYTE PTR [ecx+0x62],bh
  40fb29:	sbb    BYTE PTR [ebx],0x3d
  40fb2c:	sub    DWORD PTR [edx],eax
  40fb2e:	or     BYTE PTR [ecx],bh
  40fb30:	sub    DWORD PTR [edx],eax
  40fb32:	mov    DWORD PTR [eax],eax
  40fb34:	mov    eax,0x39000638
  40fb39:	sahf   
  40fb3a:	mov    dl,BYTE PTR [edi]
  40fb3c:	cmp    eax,0x388a0229
  40fb41:	daa    
  40fb42:	inc    edx
  40fb43:	std    
  40fb44:	jns    0x40fae6
  40fb46:	add    al,bl
  40fb48:	mov    dl,0xe4
  40fb4a:	out    0x3,eax
  40fb4c:	ret    0xe67c
  40fb4f:	add    eax,DWORD PTR [ebx+esi*2]
  40fb52:	shl    DWORD PTR [edx],cl
  40fb54:	outs   dx,DWORD PTR ds:[esi]
  40fb55:	mov    ds:0xd0b3ffca,eax
  40fb5a:	and    dh,0x38
  40fb5d:	sbb    BYTE PTR [eax*2-0x7d2cab44],ch
  40fb64:	inc    ecx
  40fb65:	daa    
  40fb66:	mov    bl,0xef
  40fb68:	mov    edx,0x36bd02fa
  40fb6d:	jecxz  0x40fbab
  40fb6f:	(bad)  
  40fb70:	mov    esp,0xab74099c
  40fb75:	jbe    0x40fafe
  40fb77:	(bad)  
  40fb78:	cmp    al,al
  40fb7a:	pop    ds
  40fb7b:	add    al,0x39
  40fb7d:	daa    
  40fb7e:	mov    ch,0x18
  40fb80:	ret    0x13a8
  40fb83:	add    al,0x39
  40fb85:	daa    
  40fb86:	mov    DWORD PTR [eax+0x22321],eax
  40fb8c:	jns    0x40fb8e
  40fb8e:	jo     0x40fc0a
  40fb90:	push   edx
  40fb91:	add    al,0xe9
  40fb93:	add    esi,DWORD PTR [eax+0x7f87f]
  40fb99:	cmp    DWORD PTR [eax],eax
  40fb9b:	bound  eax,QWORD PTR [edx+0x3e9042e]
  40fba1:	(bad)  
  40fba2:	ds out 0xb7,eax
  40fba5:	xor    BYTE PTR [esi+0x3ae201d0],al
  40fbab:	test   eax,0xea254e8b
  40fbb0:	push   ebx
  40fbb1:	dec    esi
  40fbb2:	dec    DWORD PTR [edi+0x1f]
  40fbb5:	cmp    eax,0x41b6e900
  40fbba:	test   DWORD PTR [edi+0x13],esp
  40fbbd:	cmp    eax,0xb98ae900
  40fbc2:	sbb    ch,ah
  40fbc4:	add    edi,DWORD PTR [ecx]
  40fbc6:	rcr    BYTE PTR [edi+0x7a],0x22
  40fbca:	add    al,0xe9
  40fbcc:	add    eax,eax
  40fbce:	jg     0x40fbc8
  40fbd0:	pop    es
  40fbd1:	cmp    DWORD PTR [eax],eax
  40fbd3:	jb     0x40fb57
  40fbd5:	dec    esi
  40fbd6:	add    al,0xe9
  40fbd8:	add    esi,DWORD PTR [ebx+0x5458eb18]
  40fbde:	cmp    eax,0x2abb2917
  40fbe3:	out    0x8b,eax
  40fbe5:	cs mov bl,0x5a
  40fbe8:	fdivr  DWORD PTR [ecx]
  40fbea:	addr16 int3 
  40fbec:	pop    es
  40fbed:	cmp    DWORD PTR [eax],eax
  40fbef:	pushf  
  40fbf0:	sbb    al,dl
  40fbf2:	jle    0x40fbec
  40fbf4:	pop    es
  40fbf5:	cmp    DWORD PTR [eax],eax
  40fbf7:	pusha  
  40fbf8:	add    BYTE PTR [esi+0x4],0xe9
  40fbfc:	add    eax,DWORD PTR [eax]
  40fbfe:	jns    0x40fb87
  40fc00:	aas    
  40fc01:	pop    ds
  40fc02:	xor    eax,0xb98ae900
  40fc07:	verw   bp
  40fc0a:	cmp    al,BYTE PTR [eax]
  40fc0c:	mov    ebp,DWORD PTR [eax+0x52]
  40fc0f:	add    al,0x0
  40fc11:	jmp    0x55413b3e
  40fc16:	aaa    
  40fc17:	xchg   BYTE PTR [edi],cl
  40fc19:	jmp    0x40fb9f
  40fc1b:	cmp    eax,ecx
  40fc1d:	popa   
  40fc1e:	sub    eax,0xd5990125
  40fc23:	jmp    FWORD PTR [eax-0x1c73923]
  40fc29:	cmp    al,0x1c
  40fc2b:	test   DWORD PTR [eax-0x1c74927],eax
  40fc31:	jo     0x40fbe7
  40fc33:	adc    BYTE PTR [ecx+ebp*8],al
  40fc36:	cmp    al,al
  40fc38:	mov    BYTE PTR [eax+0x41],dl
  40fc3b:	add    al,0x0
  40fc3d:	jmp    0xed507c07
  40fc42:	cmp    al,BYTE PTR [eax]
  40fc44:	mov    esi,DWORD PTR [eax+0x25]
  40fc47:	add    al,0x0
  40fc49:	jmp    0xf9fdc38
  40fc4e:	nop
  40fc4f:	ds add ebp,ecx
  40fc52:	xchg   ebx,edx
  40fc54:	mov    cl,ch
  40fc56:	xchg   BYTE PTR [eax],cl
  40fc58:	push   esi
  40fc59:	sbb    dh,ch
  40fc5b:	rol    DWORD PTR [edx+0x4b2424c],1
  40fc61:	test   BYTE PTR [eax],al
  40fc63:	inc    edx
  40fc64:	add    BYTE PTR [eax],al
  40fc66:	jmp    0xdd64b122
  40fc6b:	scas   eax,DWORD PTR es:[edi]
  40fc6c:	xor    DWORD PTR [edx],ebp
  40fc6e:	xor    al,0xc0
  40fc70:	mov    ds:0x16bce923,eax
  40fc75:	test   BYTE PTR [edx-0x17],al
  40fc78:	pop    ss
  40fc79:	mov    esp,DWORD PTR [esi+ebp*4]
  40fc7c:	dec    ebp
  40fc7d:	mov    WORD PTR [edx+0x3d],?
  40fc80:	add    BYTE PTR [eax],al
  40fc82:	add    BYTE PTR [eax],ah
  40fc84:	sbb    BYTE PTR ss:[esi+ebx*1+0x45],dh
  40fc89:	inc    eax
  40fc8a:	test   DWORD PTR [ecx+0x71],ebx
  40fc8d:	hlt    
  40fc8e:	and    DWORD PTR [eax],0x3
  40fc91:	test   ecx,ecx
  40fc93:	lea    eax,[ebx+eax*4]
  40fc96:	rcl    dl,0xe6
  40fc99:	add    DWORD PTR [ebx+0x46470290],eax
  40fc9f:	arpl   WORD PTR [edi+0x22],bx
  40fca2:	sbb    al,0xe1
  40fca4:	jo     0x40fc72
  40fca6:	pop    edi
  40fca7:	es pop ecx
  40fca9:	pop    ecx
  40fcaa:	ret    0x3d4
  40fcad:	mov    edx,DWORD PTR [esp+edi*1+0x0]
  40fcb1:	push   ebp
  40fcb2:	push   esi
  40fcb3:	sub    ebp,esp
  40fcb5:	lds    eax,FWORD PTR [esi-0x1c878]
  40fcbb:	nop
  40fcbc:	add    eax,DWORD PTR [eax]
  40fcbe:	add    BYTE PTR [edx],bl
  40fcc0:	add    eax,0xb787c984
  40fcc5:	add    DWORD PTR cs:[eax],eax
  40fcc8:	nop
  40fcc9:	add    edx,DWORD PTR [edi-0x75]
  40fccc:	test   BYTE PTR [edi+0x12],dl
  40fccf:	and    edi,0x9
  40fcd2:	jbe    0x40fcd9
  40fcd4:	xchg   edi,eax
  40fcd5:	or     al,BYTE PTR [eax]
  40fcd7:	add    BYTE PTR [eax-0x7a],dl
  40fcda:	shr    BYTE PTR [ebx],0xf
  40fcdd:	xchg   ebx,eax
  40fcde:	cmp    BYTE PTR [eax],cl
  40fce0:	ins    BYTE PTR es:[edi],dx
  40fce1:	inc    ebp
  40fce2:	dec    ebp
  40fce3:	inc    eax
  40fce4:	(bad)  
  40fce6:	jae    0x40fcde
  40fce8:	rol    DWORD PTR [eax+0x350041a],cl
  40fcee:	push   DWORD PTR [ebp+0x5]
  40fcf1:	xchg   BYTE PTR [eax+edx*1-0x76fffce4],al
  40fcf8:	sahf   
  40fcf9:	sbb    eax,DWORD PTR [eax+eax*1]
  40fcfc:	cmp    DWORD PTR [ecx],ebp
  40fcfe:	ret    0xbfc6
  40fd01:	and    al,0xfe
  40fd03:	dec    DWORD PTR [esi]
  40fd05:	xor    DWORD PTR [edx],eax
  40fd07:	add    BYTE PTR [ecx],bh
  40fd09:	mov    al,0x80
  40fd0b:	sysexit 
  40fd0d:	sub    DWORD PTR [edx],eax
  40fd0f:	mov    edi,DWORD PTR [edi-0x110001b0]
  40fd15:	js     0x40fcfa
  40fd17:	mov    bh,BYTE PTR [edi-0x210001c8]
  40fd1d:	mov    ds:0x20c15f0d,al
  40fd22:	aaa    
  40fd23:	test   DWORD PTR [ecx],ebp
  40fd25:	and    eax,0x14670002
  40fd2a:	inc    esi
  40fd2b:	pop    es
  40fd2c:	add    BYTE PTR [ecx],bh
  40fd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2f:	cmp    BYTE PTR [ebx-0xf],dh
  40fd32:	test   eax,0xaf38fe4a
  40fd37:	pop    ss
  40fd38:	add    al,0x39
  40fd3a:	sub    DWORD PTR [ebp+0x1b143068],eax
  40fd40:	mov    edi,DWORD PTR [edi-0x710001c8]
  40fd46:	scas   eax,DWORD PTR es:[edi]
  40fd47:	adc    DWORD PTR [edi],0x4002293d
  40fd4d:	mov    al,0xbe
  40fd4f:	pop    ss
  40fd50:	add    al,0x39
  40fd52:	sub    DWORD PTR [ecx+0x2254985],ecx
  40fd58:	add    BYTE PTR [edx+0x39041b9e],dh
  40fd5e:	sub    DWORD PTR [edi+ecx*1-0x3ec604c5],ecx
  40fd65:	rcr    DWORD PTR [eax+0x1],0x8e
  40fd69:	and    eax,0xc400021d
  40fd6e:	dec    edi
  40fd6f:	mov    eax,DWORD PTR [ebp+0x21b49]
  40fd75:	rol    BYTE PTR [eax],0x6f
  40fd78:	sbb    al,0x3d
  40fd7a:	add    cl,ch
  40fd7c:	ret    
  40fd7d:	mov    cl,0x66
  40fd7f:	hlt    
  40fd80:	call   DWORD PTR [esi]
  40fd82:	ss pop edi
  40fd84:	cmp    BYTE PTR [esi],0xfc
  40fd87:	call   0xe0bfaf8f
  40fd8c:	(bad)  
  40fd8d:	(bad)  
  40fd8e:	xor    eax,0x3b001462
  40fd93:	push   edx
  40fd94:	out    dx,al
  40fd95:	inc    ebp
  40fd96:	mov    dh,0x10
  40fd98:	call   0xe93d4026
  40fd9d:	add    esp,DWORD PTR [edi+edx*1+0x62]
  40fda1:	add    DWORD PTR [esi-0x4],0x7ec003e8
  40fda8:	loopne 0x40fda9
  40fdaa:	(bad)  
  40fdab:	xor    eax,0x148c8b28
  40fdb0:	in     eax,dx
  40fdb1:	add    edi,DWORD PTR [ecx]
  40fdb3:	xchg   DWORD PTR [esi+0x13],esp
  40fdb6:	xor    eax,0xbc8ce900
  40fdbb:	sbb    ch,ah
  40fdbd:	add    edi,DWORD PTR [ecx]
  40fdbf:	mov    ah,al
  40fdc1:	add    eax,0x8ca73680
  40fdc6:	addr16 loope 0x40fd64
  40fdc9:	mov    edi,DWORD PTR [esi]
  40fdcb:	shl    BYTE PTR [ecx+0x49],cl
  40fdce:	xchg   esi,eax
  40fdcf:	push   edi
  40fdd0:	je     0x40fe0a
  40fdd2:	ja     0x40fd5d
  40fdd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd5:	test   BYTE PTR [esi+0x748cb8fc],cl
  40fddb:	sub    BYTE PTR [edi+esi*1],ch
  40fdde:	pop    edi
  40fddf:	xor    eax,0x1fbb4861
  40fde4:	jmp    0x4278:0x5046c3d2
  40fdeb:	xor    eax,0xff57843d
  40fdf0:	call   FWORD PTR [ebp+0x75e742c5]
  40fdf6:	add    BYTE PTR [esi+0x36],ah
  40fdf9:	inc    dh
  40fdfb:	add    ah,dl
  40fdfd:	shl    ecx,0x3a
  40fe00:	or     eax,0x1b863b16
  40fe06:	in     eax,0x3a
  40fe08:	add    BYTE PTR [ebp+0x18ab3390],cl
  40fe0e:	jb     0x40fdc8
  40fe10:	add    al,0x4
  40fe12:	jmp    0xd1c68551
  40fe17:	out    dx,al
  40fe18:	xor    al,0xfe
  40fe1a:	sub    DWORD PTR [edx+eiz*2+0x3ae51b],esi
  40fe21:	mov    DWORD PTR [edi+0x2d],ebp
  40fe24:	cld    
  40fe25:	(bad)  
  40fe26:	call   0xed5878ee
  40fe2b:	cmp    al,BYTE PTR [eax]
  40fe2d:	mov    bl,cl
  40fe2f:	cmp    BYTE PTR [edx-0x3],dl
  40fe32:	stos   DWORD PTR es:[edi],eax
  40fe33:	lds    eax,FWORD PTR [ecx+eax*1]
  40fe36:	pop    edi
  40fe37:	push   ecx
  40fe38:	cld    
  40fe39:	(bad)  
  40fe3a:	call   0x67cc1628
  40fe3f:	inc    ebp
  40fe40:	cld    
  40fe41:	(bad)  
  40fe42:	call   0xe558790c
  40fe47:	cmp    al,BYTE PTR [eax]
  40fe49:	inc    eax
  40fe4a:	jo     0x40fe6b
  40fe4c:	sbb    DWORD PTR [ecx+ebp*8],eax
  40fe4f:	cmp    al,BYTE PTR [edi+0x3476d985]
  40fe55:	(bad)  
  40fe56:	(bad)  
  40fe57:	out    dx,eax
  40fe58:	or     al,0x4
  40fe5a:	jmp    0xfcb385f
  40fe5f:	jmp    0x40fe69
  40fe61:	xor    eax,ecx
  40fe63:	popa   
  40fe64:	sub    eax,0x4eed8dff
  40fe69:	xor    al,0xfe
  40fe6b:	add    BYTE PTR [ebp+0x60868b13],al
  40fe71:	xor    al,0xfe
  40fe73:	call   FWORD PTR [ecx+0x200416b2]
  40fe79:	add    BYTE PTR [eax-0x77],al
  40fe7c:	mov    ds,WORD PTR [eax]
  40fe7e:	add    al,0x0
  40fe80:	adc    BYTE PTR [ebp+0x241084],al
  40fe86:	add    BYTE PTR [ebx+0x41496],cl
  40fe8c:	adc    BYTE PTR [edx-0x15ddfdf2],cl
  40fe92:	ror    BYTE PTR [eax+0x1c8dfd10],0xd4
  40fe99:	(bad)  
  40fe9a:	push   DWORD PTR [ecx+edi*1-0x79]
  40fe9e:	test   BYTE PTR [eax],dl
  40fea0:	aam    0xff
  40fea2:	dec    DWORD PTR [eax+0x41766]
  40fea8:	loopne 0x40fee9
  40feaa:	xchg   DWORD PTR [esi-0x1cc24],ebp
  40feb0:	dec    ecx
  40feb1:	mov    ch,0xe
  40feb3:	add    al,0xa0
  40feb5:	dec    DWORD PTR [edx-0x1cc777a]
  40febb:	jmp    eax
  40febd:	pop    ds
  40febe:	dec    DWORD PTR [ebp-0x1cc6400]
  40fec4:	push   DWORD PTR ds:0x90868b15
  40feca:	xor    edi,esi
  40fecc:	dec    DWORD PTR [ecx]
  40fece:	mov    ch,0x16
  40fed0:	add    al,0x90
  40fed2:	(bad)  
  40fed3:	aas    
  40fed4:	mov    esi,edi
  40fed6:	or     al,BYTE PTR [eax+eax*1]
  40fed9:	pusha  
  40feda:	test   BYTE PTR [eax+edx*1-0x750000ac],al
  40fee1:	(bad)  
  40fee2:	push   ss
  40fee3:	add    al,0x0
  40fee5:	cmp    DWORD PTR [ecx],ebp
  40fee7:	push   edx
  40fee8:	pop    ds
  40fee9:	cmp    bl,dl
  40feeb:	push   ss
  40feec:	add    al,0x39
  40feee:	sub    DWORD PTR [edi+0x129bb218],ebp
  40fef4:	add    al,0x39
  40fef6:	sub    DWORD PTR [ebx+0x21d5185],ecx
  40fefc:	add    BYTE PTR [ecx-0x50],bh
  40feff:	sbb    esi,DWORD PTR fs:0xbf890229
  40ff06:	cmp    dh,bh
  40ff08:	dec    DWORD PTR [esi]
  40ff0a:	sahf   
  40ff0b:	jl     0x40ff24
  40ff0d:	cmp    eax,0x59d00229
  40ff12:	sub    BYTE PTR [ebx+ebx*1+0x7502293d],al
  40ff19:	push   eax
  40ff1a:	sahf   
  40ff1b:	jl     0x40ff2c
  40ff1d:	cmp    eax,0xb7890229
  40ff22:	add    BYTE PTR [eax],al
  40ff24:	add    BYTE PTR [eax],al
  40ff26:	cmp    ecx,ebp
  40ff28:	mov    ch,BYTE PTR [ebp+0x21d2d]
  40ff2e:	mov    al,0xa2
  40ff30:	adc    eax,DWORD PTR [ecx+edi*1]
  40ff33:	sub    DWORD PTR [edi+0x22551b5],eax
  40ff39:	add    BYTE PTR [ecx+0x7b5cd5fa],cl
  40ff3f:	xor    BYTE PTR [edx],al
  40ff41:	mov    esi,ebp
  40ff43:	cmp    al,0xfe
  40ff45:	push   ebp
  40ff46:	out    dx,al
  40ff47:	popf   
  40ff48:	mov    bh,0x23
  40ff4a:	sub    DWORD PTR [esi+0x28b93c32],ebx
  40ff50:	add    al,BYTE PTR [eax]
  40ff52:	or     dl,BYTE PTR [ebp+0x7f]
  40ff55:	(bad)  
  40ff56:	cmp    eax,0xb73b0b36
  40ff5b:	cmp    al,0xfe
  40ff5d:	jmp    DWORD PTR [esi-0x1]
  40ff60:	fmul   st(7),st
  40ff62:	addr16 push edi
  40ff64:	add    DWORD PTR [ebx+edi*4+0x1f],eax
  40ff68:	out    dx,al
  40ff69:	aam    0xbb
  40ff6b:	aas    
  40ff6c:	jecxz  0x40ff43
  40ff6e:	js     0x40ff77
  40ff70:	jmp    0xe51cb46d
  40ff75:	add    edi,DWORD PTR [ecx]
  40ff77:	lods   al,BYTE PTR ds:[esi]
  40ff78:	repz imul BYTE PTR [esi-0x55fc1700]
  40ff7f:	sti    
  40ff80:	imul   esp,DWORD PTR ds:0xf6f82538,0x3e8fd16
  40ff8a:	add    BYTE PTR [ebx+0x6f69dff],cl
  40ff90:	mov    ch,0xe8
  40ff92:	add    ecx,DWORD PTR [ebx-0x21bd5201]
  40ff98:	or     BYTE PTR [edx-0x67025180],bl
  40ff9e:	sub    ebx,DWORD PTR [esi+esi*1]
  40ffa1:	in     eax,0x34
  40ffa3:	xchg   DWORD PTR [ebp+0x28ee88ae],eax
  40ffa9:	hlt    
  40ffaa:	cmp    edi,ecx
  40ffac:	xor    DWORD PTR [ebx-0x41],ebx
  40ffaf:	cs push es
  40ffb1:	and    dl,ch
  40ffb3:	pop    esp
  40ffb4:	lock add ecx,DWORD PTR ds:[esi]
  40ffb8:	sub    ah,ah
  40ffba:	cmp    DWORD PTR [edi-0x197ef2cf],ebp
  40ffc0:	cld    
  40ffc1:	inc    esi
  40ffc2:	inc    edx
  40ffc3:	add    BYTE PTR ss:[edx],bh
  40ffc6:	mov    edx,esi
  40ffc8:	fneni(8087 only) 
  40ffca:	into   
  40ffcb:	in     al,0x84
  40ffcd:	xchg   edi,eax
  40ffce:	add    ah,0xe8
  40ffd1:	in     al,dx
  40ffd2:	add    edi,DWORD PTR [ecx]
  40ffd4:	add    BYTE PTR [esi],dl
  40ffd6:	add    eax,0xe80015bd
  40ffdb:	cmp    al,BYTE PTR [eax]
  40ffdd:	xor    DWORD PTR [edx-0x46],0xa9e9fe31
  40ffe4:	rol    BYTE PTR [edx+0x40976dd],0xda
  40ffeb:	push   eax
  40ffec:	sbb    DWORD PTR [esi],esi
  40ffee:	push   edx
  40ffef:	add    BYTE PTR ds:0x12378a32,cl
  40fff5:	loope  0x40fff1
  40fff7:	ds ins DWORD PTR es:[edi],dx
  40fff9:	xchg   ch,cl
  40fffb:	inc    ecx
  40fffc:	jo     0x410035
  40fffe:	(bad)  
  40ffff:	cs mov al,0xbc
  410002:	and    eax,DWORD PTR [ecx]
  410004:	mov    al,0x8a
  410006:	pmulhw mm7,QWORD PTR [edx]
  410009:	add    BYTE PTR [edx+0x1ffee22],cl
  41000f:	and    BYTE PTR [eax],bh
  410011:	aas    
  410012:	pop    esi
  410013:	jno    0x41004d
  410015:	xor    DWORD PTR [ebp-0x1cf0927],eax
  41001b:	pusha  
  41001c:	(bad)  
  41001d:	fadd   QWORD PTR [ebx]
  41001f:	jmp    0x429dd25e
  410024:	ja     0x41001f
  410026:	jmp    FWORD PTR [ecx+0x7a]
  410029:	xor    al,BYTE PTR [eax]
  41002b:	xchg   edi,eax
  41002c:	sub    esp,edi
  41002e:	(bad)  
  41002f:	call   0x3c49a1ed
  410034:	sub    al,0x85
  410036:	test   ecx,ebx
  410038:	add    BYTE PTR ds:[eax],al
  41003b:	pusha  
  41003c:	ret    
  41003d:	or     BYTE PTR [ecx+ebp*8],al
  410040:	cmp    al,al
  410042:	mov    BYTE PTR [edi+0x49],dl
  410045:	cld    
  410046:	(bad)  
  410047:	call   0xed507b61
  41004c:	cmp    al,BYTE PTR [eax]
  41004e:	mov    esp,DWORD PTR [edi+0x35]
  410051:	cld    
  410052:	(bad)  
  410053:	inc    DWORD PTR [eax]
  410055:	nop
  410056:	mov    dl,0x6
  410058:	add    ch,BYTE PTR [ecx+0x5888bfed]
  41005e:	sti    
  41005f:	mov    ebp,0xfffc5c1c
  410064:	je     0x41009f
  410066:	mov    cl,0x84
  410068:	adc    BYTE PTR [esp+edi*8-0x1],bl
  41006c:	mov    dh,bl
  41006e:	add    eax,DWORD PTR [eax+eax*1]
  410071:	push   eax
  410072:	cmp    al,0x87
  410074:	scas   al,BYTE PTR es:[edi]
  410075:	push   esp
  410076:	clc    
  410077:	(bad)  
  410078:	jmp    FWORD PTR [ecx+0x20040e7a]
  41007e:	add    al,0x8b
  410080:	xchg   BYTE PTR [eax],cl
  410082:	or     BYTE PTR [eax],al
  410084:	add    BYTE PTR [eax+0x24],ah
  410087:	mov    ebx,edx
  410089:	popa   
  41008a:	push   cs
  41008b:	pop    es
  41008c:	and    DWORD PTR [edx+0x6],0x52
  410090:	mov    esp,DWORD PTR [esi]
  410092:	or     al,0xc8
  410094:	cli    
  410095:	aaa    
  410096:	xrelease mov DWORD PTR [esi+0x810],eax
  41009d:	pop    eax
  41009e:	cld    
  41009f:	mov    bh,0x1
  4100a1:	rol    BYTE PTR [ebx],1
  4100a3:	add    BYTE PTR [ecx],al
  4100a5:	dec    esi
  4100a6:	adc    eax,DWORD PTR [eax+eax*1]
  4100a9:	loopne 0x410057
  4100ab:	pushf  
  4100ac:	and    al,0xdc
  4100ae:	add    eax,DWORD PTR [eax]
  4100b0:	sub    ebx,0xd0fffe83
  4100b6:	jbe    0x4100ce
  4100b8:	add    DWORD PTR [eax],0x4
  4100bb:	sbb    BYTE PTR [esi],dl
  4100bd:	add    bl,BYTE PTR [ebx]
  4100bf:	outs   dx,DWORD PTR ds:[esi]
  4100c0:	and    bl,BYTE PTR [eax]
  4100c2:	inc    ecx
  4100c3:	scas   eax,DWORD PTR es:[edi]
  4100c4:	int3   
  4100c5:	call   0x3edde9
  4100ca:	push   edi
  4100cb:	push   edx
  4100cc:	pop    ebx
  4100cd:	pop    ebx
  4100ce:	cmp    DWORD PTR [ebx-0x6],ebx
  4100d1:	(bad)  
  4100d2:	mov    ecx,0x39050292
  4100d7:	sbb    DWORD PTR [ebx+eax*1+0x17e7e520],esi
  4100de:	mov    eax,0x397d02b2
  4100e3:	sbb    DWORD PTR [ebx+eax*1+0x17e65d10],esi
  4100ea:	ret    0xe65d
  4100ed:	pop    ss
  4100ee:	call   0xd6284194
  4100f3:	shl    BYTE PTR [ecx],cl
  4100f5:	(bad)  
  4100f6:	fisub  WORD PTR [esi-0x31]
  4100f9:	pop    edx
  4100fa:	sti    
  4100fb:	xor    BYTE PTR [edx],al
  4100fd:	(bad)  
  4100fe:	mov    bh,0x0
  410100:	or     BYTE PTR [eax],al
  410102:	cmp    DWORD PTR [eax],ebx
  410104:	add    al,BYTE PTR [eax]
  410106:	cmp    DWORD PTR [eax+0x19397f2d],ebx
  41010c:	add    dh,BYTE PTR [ebx-0x80]
  41010f:	call   0x41b5:0x252123ae
  410116:	inc    edx
  410117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410118:	out    0x3,al
  41011a:	cmp    DWORD PTR [ecx],ebx
  41011c:	mov    dh,0x39
  41011e:	add    cl,ah
  410120:	and    ch,BYTE PTR [esi+edi*8]
  410123:	out    0xa1,al
  410125:	inc    eax
  410126:	out    0x3a,eax
  410128:	and    esi,DWORD PTR [eax]
  41012a:	inc    dl
  41012c:	pop    esi
  41012d:	sbb    ecx,esp
  41012f:	rcl    BYTE PTR [ebp+0x30],1
  410132:	mov    DWORD PTR [ebp+0x5],edi
  410135:	or     al,0x8b
  410137:	scas   eax,DWORD PTR es:[edi]
  410138:	dec    eax
  410139:	push   es
  41013a:	add    BYTE PTR [ecx],bh
  41013c:	mov    bl,0x54
  41013e:	and    edi,DWORD PTR [eax]
  410140:	sbb    edx,DWORD PTR [ecx+eax*1+0x7b]
  410144:	std    
  410145:	jnp    0x410147
  410147:	sahf   
  410148:	jmp    FWORD PTR [esi+0x14]
  41014b:	cmp    eax,0xac7ae900
  410150:	jecxz  0x41013e
  410152:	add    edi,DWORD PTR [ecx]
  410154:	into   
  410155:	sub    ecx,ebp
  410157:	js     0x410150
  410159:	call   0xe76f88e2
  41015e:	jno    0x4101b2
  410160:	add    al,0xe9
  410162:	add    esi,DWORD PTR [esi+ebx*4+0x7b41b6df]
  410169:	outs   dx,BYTE PTR ds:[esi]
  41016a:	adc    al,0x3d
  41016c:	add    cl,ch
  41016e:	jp     0x410124
  410170:	pop    es
  410171:	in     eax,dx
  410172:	add    edi,DWORD PTR [ecx]
  410174:	rcr    BYTE PTR [edi+0x62],0x22
  410178:	add    al,0xe9
  41017a:	add    eax,eax
  41017c:	xchg   al,bl
  41017e:	pop    es
  41017f:	cmp    DWORD PTR [eax],eax
  410181:	bound  ecx,QWORD PTR [edx-0x16fbb200]
  410187:	add    esi,DWORD PTR [ebx+0x1455eb10]
  41018d:	inc    ebx
  41018e:	jo     0x4101a4
  410190:	cmp    BYTE PTR [esi-0xc],ch
  410193:	pop    es
  410194:	cmp    DWORD PTR [eax],eax
  410196:	xchg   esp,eax
  410197:	or     dh,BYTE PTR [edx+0x3907d886]
  41019d:	add    BYTE PTR [eax-0x76],dh
  4101a0:	inc    esi
  4101a1:	add    al,0xe9
  4101a3:	add    edi,DWORD PTR [ecx+0x77]
  4101a6:	adc    BYTE PTR ds:0xbc7ae900,dh
  4101ad:	adc    ch,ah
  4101af:	add    edi,DWORD PTR [ecx]
  4101b1:	jns    0x410221
  4101b3:	or     edi,DWORD PTR ds:0x1e53e900
  4101b9:	jmp    0x7be924
  4101be:	jmp    0xffba2a7a
  4101c3:	test   eax,0x6a0724fb
  4101c8:	cli    
  4101c9:	add    DWORD PTR [eax-0x6f],edx
  4101cc:	mov    al,0x28
  4101ce:	(bad)  
  4101cf:	sahf   
  4101d0:	or     eax,0x3aed0f7b
  4101d5:	add    BYTE PTR [eax+0x12f0],cl
  4101db:	jmp    0xd9c7011a
  4101e0:	add    BYTE PTR ss:[eax],al
  4101e3:	pusha  
  4101e4:	enter  0x3e1,0xe9
  4101e8:	add    BYTE PTR [edx],bh
  4101ea:	jg     0x4101e6
  4101ec:	imul   edi,DWORD PTR [edx],0x42da0000
  4101f2:	sub    DWORD PTR [ebx+0xd],0xb58b0235
  4101f9:	push   esi
  4101fa:	adc    eax,0x25787252
  4101ff:	arpl   WORD PTR [eax+0x69],ax
  410202:	cs pop esi
  410204:	xchg   edi,eax
  410205:	test   ecx,0x7f3ae1c1
  41020b:	cli    
  41020c:	jmp    0x9b410250
  410211:	xlat   BYTE PTR ss:[ebx]
  410213:	inc    ebx
  410214:	int    0x32
  410216:	jg     0x410212
  410218:	jmp    0x7c3f2eec
  41021d:	rcl    edi,cl
  41021f:	inc    ebx
  410220:	lds    eax,FWORD PTR [edx+0x79]
  410223:	push   ebx
  410224:	int    0x32
  410226:	ror    BYTE PTR [edx-0x717bde1],cl
  41022c:	out    0x26,al
  41022e:	into   
  41022f:	pop    ebp
  410230:	cmp    al,0x2
  410232:	aas    
  410233:	pop    es
  410234:	jmp    0xe55c7076
  410239:	cmp    al,BYTE PTR [eax]
  41023b:	jne    0x41023d
  41023d:	cdq    
  41023e:	test   eax,0x941084
  410243:	add    BYTE PTR [ecx+0x3fc16],cl
  410249:	nop
  41024a:	inc    eax
  41024b:	xchg   DWORD PTR [esi-0x7c400],ebp
  410251:	dec    DWORD PTR [ecx]
  410253:	xchg   BYTE PTR [esi],cl
  410255:	add    al,0x90
  410257:	add    BYTE PTR [ebx+0x48886],cl
  41025d:	add    al,dl
  41025f:	and    edi,edi
  410261:	mov    ebp,0x48c
  410266:	gs sti 
  410268:	mov    al,BYTE PTR [esi+0x480]
  41026e:	leave  
  41026f:	test   DWORD PTR [esi],edx
  410271:	add    al,0x60
  410273:	add    BYTE PTR [eax-0x77],al
  410276:	mov    esi,0x5000040f
  41027b:	stos   DWORD PTR es:[edi],eax
  41027c:	test   BYTE PTR [eax],dl
  41027e:	and    al,0x0
  410280:	add    BYTE PTR [ebx+0x3fc96],cl
  410286:	adc    al,dl
  410288:	push   ds
  410289:	mov    eax,esp
  41028b:	and    edx,DWORD PTR [esi]
  41028d:	push   edx
  41028e:	mov    ebp,edx
  410290:	out    0xd4,al
  410292:	pop    eax
  410293:	(bad)  
  410295:	pop    edi
  410296:	into   
  410297:	push   eax
  410298:	pop    ecx
  410299:	ret    0x18
  41029c:	mov    eax,DWORD PTR [esp+eax*1+0x4]
  4102a0:	lea    edx,[eax-0x7820]
  4102a6:	stos   DWORD PTR es:[edi],eax
  4102a7:	xchg   esp,eax
  4102a8:	add    al,BYTE PTR [eax+edx*8]
  4102ab:	push   DWORD PTR [ebp+0x19]
  4102ae:	dec    ebx
  4102af:	lods   al,BYTE PTR ds:[esi]
  4102b0:	or     al,BYTE PTR [eax+eax*1]
  4102b3:	loopne 0x4102b4
  4102b5:	cmp    al,cl
  4102b7:	cmp    ebx,ecx
  4102b9:	or     BYTE PTR [ebx],ch
  4102bb:	clc    
  4102bc:	push   edi
  4102bd:	push   es
  4102be:	add    BYTE PTR [edx+0x58],ah
  4102c1:	pop    es
  4102c2:	add    BYTE PTR [ecx],ah
  4102c4:	sbb    BYTE PTR [edx],al
  4102c6:	ret    0x193d
  4102c9:	icebp  
  4102ca:	mov    edi,0x8302257b
  4102cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d0:	sub    ecx,edx
  4102d2:	push   esp
  4102d3:	ret    0xe7fd
  4102d6:	pop    ds
  4102d7:	out    dx,eax
  4102d8:	inc    ebp
  4102d9:	dec    ecx
  4102da:	mov    cl,BYTE PTR [eax+0x1d5b7cf2]
  4102e0:	dec    ecx
  4102e1:	jnp    0x41033e
  4102e3:	adc    eax,0x31adeb21
  4102e8:	sbb    eax,0x962e0002
  4102ed:	popa   
  4102ee:	call   DWORD PTR [esi+0x19]
  4102f1:	sbb    DWORD PTR [edx],ecx
  4102f3:	mov    esp,0x46ffe685
  4102f8:	sbb    DWORD PTR [edx],eax
  4102fa:	(bad)  
  4102fb:	aad    0x4
  4102fd:	add    al,0x8b
  4102ff:	mov    edi,0x3900061c
  410304:	pushf  
  410305:	jp     0x410306
  410307:	sahf   
  410308:	sbb    BYTE PTR [edx],al
  41030a:	cmp    esi,ecx
  41030c:	jb     0x410323
  41030e:	mov    eax,edi
  410310:	xor    al,0x6
  410312:	add    BYTE PTR [ecx],bh
  410314:	push   ds
  410315:	inc    ebx
  410316:	jne    0x410318
  410318:	cmp    eax,0x32ea433e
  41031d:	ds inc ebx
  41031f:	add    al,0x39
  410321:	xchg   ecx,eax
  410322:	add    eax,DWORD PTR [eax]
  410324:	loop   0x41033c
  410326:	icebp  
  410327:	mov    edi,0x3faa2b2
  41032c:	cmp    DWORD PTR [ecx],ebx
  41032e:	std    
  41032f:	mov    ch,0x28
  410331:	add    dh,dh
  410333:	jne    0x4102b6
  410335:	add    DWORD PTR [edx-0x28],esi
  410338:	lods   al,BYTE PTR ds:[esi]
  410339:	add    esp,DWORD PTR [edx+0x0]
  41033c:	mov    bl,0x76
  41033e:	push   cs
  41033f:	jnp    0x410383
  410341:	xor    DWORD PTR [ecx-0x7a],0x36
  410345:	add    al,0xe9
  410347:	add    esi,DWORD PTR [esi]
  410349:	jb     0x410323
  41034b:	cld    
  41034c:	in     al,0xbf
  41034e:	out    0x78,eax
  410350:	add    dl,BYTE PTR [edx+0x3a478ec]
  410356:	in     eax,0x3
  410358:	cmp    DWORD PTR [ecx-0x4],edi
  41035b:	add    cl,0x0
  41035e:	jmp    0x77423c66
  410363:	or     BYTE PTR ds:0xb702e900,dh
  410369:	imul   esp
  41036b:	add    edi,DWORD PTR [ecx]
  41036d:	ja     0x4103d5
  41036f:	or     BYTE PTR ds:0x7678e900,bh
  410375:	(bad)  
  410376:	outs   dx,BYTE PTR ds:[esi]
  410377:	add    BYTE PTR ds:0x82e900,bh
  41037d:	inc    ecx
  41037e:	inc    eax
  410380:	add    bh,BYTE PTR [ecx]
  410382:	mov    dl,0xed
  410384:	mov    ebx,0x7ec82c1
  410389:	cmp    DWORD PTR [eax],eax
  41038b:	lock pop ebp
  41038d:	ss add al,0xe9
  410390:	add    eax,DWORD PTR [esi+0x7e]
  410393:	xchg   edx,eax
  410394:	sub    al,0xf
  410396:	sub    dh,BYTE PTR [ecx-0x38]
  410399:	pop    edx
  41039a:	lock push edx
  41039c:	add    al,0x96
  41039e:	(bad)  
  41039f:	call   0xeef3fc8c
  4103a4:	jp     0x410330
  4103a6:	in     al,0xb8
  4103a8:	sbb    BYTE PTR [ecx],dh
  4103aa:	jge    0x4103ab
  4103ac:	lock cmp edi,ecx
  4103af:	test   DWORD PTR [ebx],esp
  4103b1:	cmp    al,BYTE PTR [eax]
  4103b3:	add    dh,dh
  4103b5:	inc    esp
  4103b6:	(bad)  
  4103b7:	(bad)  
  4103b8:	in     eax,dx
  4103b9:	dec    esp
  4103ba:	mov    esp,0x83f66200
  4103bf:	add    esp,DWORD PTR [edx-0x5a]
  4103c2:	cmp    DWORD PTR [edx],0xb27dadc2
  4103c8:	call   0x67cc0407
  4103cd:	call   0xefd:0x17e8fffd
  4103d4:	scas   al,BYTE PTR es:[edi]
  4103d5:	jbe    0x4103b4
  4103d7:	sbb    ebp,ecx
  4103d9:	sub    BYTE PTR [ecx],0xfe
  4103dc:	shl    bh,cl
  4103de:	scas   al,BYTE PTR es:[edi]
  4103df:	cmp    DWORD PTR [edx+0x0],esp
  4103e2:	and    eax,0x66fdfae6
  4103e7:	jl     0x41036f
  4103e9:	jmp    0xb24104b0
  4103ee:	mov    ah,0xfd
  4103f0:	add    ebp,ecx
  4103f2:	cmp    dh,BYTE PTR [edx-0xa4b8de9]
  4103f8:	add    ebp,ecx
  4103fa:	cmp    ah,ch
  4103fc:	neg    edi
  4103fe:	ss aad 0xf7
  410401:	inc    edx
  410402:	ss (bad) 
  410404:	imul   DWORD PTR [eax+0x75]
  410407:	sub    DWORD PTR [esi-0x18],esp
  41040a:	cmp    dl,BYTE PTR ds:0x764dfa01
  410410:	add    eax,0x8c712662
  410415:	in     eax,dx
  410416:	or     eax,0x429ac4e6
  41041b:	call   0xb31fd173
  410420:	add    esp,DWORD PTR [eax+0xe]
  410423:	(bad)  [ebx]
  410425:	add    bl,bh
  410427:	xlat   BYTE PTR ds:[ebx]
  410428:	or     eax,0xfffdc284
  41042d:	call   DWORD PTR [ebp+0x78]
  410430:	(bad)  
  410431:	jmp    eax
  410433:	cld    
  410434:	mov    cl,ch
  410436:	sub    ebp,esp
  410438:	xchg   DWORD PTR [esp+edi*1+0x10],ecx
  41043c:	cmp    ecx,DWORD PTR [esp+ebp*1+0x48]
  410440:	or     eax,0x34a87
  410445:	add    BYTE PTR [eax],al
  410447:	sub    ebp,DWORD PTR [eax+0x22]
  41044a:	adc    BYTE PTR [edx],ch
  41044c:	adc    BYTE PTR [ecx],al
  41044e:	cmp    bh,BYTE PTR [edi+eiz*1]
  410451:	dec    BYTE PTR [edx-0x44eddfcc]
  410457:	mov    ds:0x2cfffffc,al
  41045c:	sub    BYTE PTR [ecx],bh
  41045e:	mov    gs,WORD PTR [eax+ebp*1-0x2]
  410462:	call   DWORD PTR [edi+0x6000c87f]
  410468:	cld    
  410469:	mov    dl,BYTE PTR [esp+edi*2+0x2c]
  41046d:	cmp    edx,ebx
  41046f:	arpl   WORD PTR [ebx],sp
  410471:	mov    ecx,DWORD PTR [ebp+0x62]
  410474:	test   eax,0x48642be6
  410479:	mov    bl,BYTE PTR es:[edi+eiz*1+0x6f5139fe]
  410481:	add    al,0x43
  410483:	loope  0x41049b
  410485:	fdiv   DWORD PTR [edx+0x72]
  410488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410489:	dec    edx
  41048a:	and    al,0xc
  41048c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048d:	push   0x24
  41048f:	cmp    BYTE PTR [edi],dl
  410491:	fmul   DWORD PTR [edi]
  410493:	pushf  
  410494:	(bad)  
  410496:	jmp    DWORD PTR [eax]
  410498:	pop    ss
  410499:	pop    edx
  41049a:	and    al,0x0
  41049c:	jb     0x4104e3
  41049e:	push   ebx
  41049f:	cmp    DWORD PTR [eax+0x7d],ebp
  4104a2:	int    0xe1
  4104a4:	retf   
  4104a5:	sub    eax,0xb7b2eefe
  4104aa:	and    eax,DWORD PTR [eax]
  4104ac:	dec    ecx
  4104ad:	mov    dl,0xcf
  4104af:	and    eax,DWORD PTR [ecx-0x78]
  4104b2:	aam    0x8a
  4104b4:	pop    es
  4104b5:	mov    ds:0x23aee71b,eax
  4104ba:	sub    esi,edi
  4104bc:	adc    dl,BYTE PTR [ecx+0x7d]
  4104bf:	dec    ebx
  4104c0:	adc    eax,0xf1ed0525
  4104c5:	push   es
  4104c6:	sbb    bl,al
  4104c8:	jmp    DWORD PTR [ebp+0x17]
  4104cb:	mov    dl,BYTE PTR ds:0xa3c0dbfd
  4104d1:	sbb    edi,DWORD PTR [ebp-0x3f]
  4104d4:	js     0x410517
  4104d6:	or     DWORD PTR [ebx],eax
  4104d8:	jnp    0x4104f4
  4104da:	mov    esi,0x4a222923
  4104df:	jne    0x410518
  4104e1:	mov    al,ds:0x825123b6
  4104e6:	mov    esp,0xfe35bf3a
  4104eb:	jmp    DWORD PTR [esi+0x2c]
  4104ee:	rcl    BYTE PTR [edx+0x8],0xa2
  4104f2:	cmp    bh,ah
  4104f4:	fidiv  DWORD PTR [edx+0x65c2fe29]
  4104fa:	fimul  WORD PTR [edi]
  4104fc:	mov    dl,0xd1
  4104fe:	jge    0x410543
  410500:	adc    eax,0xc24fd431
  410505:	push   es
  410506:	sbb    ecx,DWORD PTR [edi+0x33]
  410509:	mov    esi,0x11f18a29
  41050e:	cmp    DWORD PTR [edx-0x240a7300],ecx
  410514:	mov    bh,0xe2
  410516:	sbb    BYTE PTR [ecx+ebp*1+0x6],0x0
  41051b:	adc    BYTE PTR [esi-0x10],bh
  41051e:	inc    eax
  41051f:	(bad)  
  410521:	cmp    bh,BYTE PTR [edx]
  410523:	jmp    0xc4f53866
  410528:	adc    ebp,DWORD PTR [ebx-0xc]
  41052b:	jno    0x4104fc
  41052d:	sbb    cl,BYTE PTR [eax+esi*2]
  410530:	iret   
  410531:	sbb    cl,BYTE PTR [eax]
  410533:	pusha  
  410534:	(bad)  
  410535:	sbb    dl,BYTE PTR [eax]
  410537:	pop    esp
  410538:	or     dh,0x9e
  41053b:	out    0x3,eax
  41053d:	add    bh,BYTE PTR [esi-0x1c]
  410540:	(bad)  
  410541:	mov    esi,0xc20c5e26
  410546:	jge    0x410524
  410548:	jmp    FWORD PTR [esi+0x2c2c0126]
  41054e:	cld    
  41054f:	adc    DWORD PTR [ebx+edx*4],ebp
  410552:	repz add DWORD PTR [ecx+edi*4],ebp
  410556:	ds call 0x92413ef7
  41055c:	push   es
  41055d:	dec    edx
  41055e:	daa    
  41055f:	jno    0x41055b
  410561:	mov    bl,0xe3
  410563:	dec    edi
  410564:	jge    0x410522
  410566:	(bad)  
  410568:	add    edi,DWORD PTR [ecx]
  41056a:	add    ebp,DWORD PTR [esi-0x23242d7b]
  410570:	add    ah,ch
  410572:	adc    DWORD PTR [ecx+ebp*1+0x0],ebp
  410576:	inc    edi
  410577:	jge    0x4105a7
  410579:	sub    cl,BYTE PTR [edi+0x26]
  41057c:	push   ecx
  41057d:	cld    
  41057e:	mov    cl,0xb3
  410580:	add    al,0xc
  410582:	mov    al,0xc3
  410584:	or     al,0x14
  410586:	ret    0x4bc
  410589:	loopne 0x41054e
  41058b:	int3   
  41058c:	or     al,0x14
  41058e:	mov    dl,0xb4
  410590:	add    al,0xc
  410592:	jle    0x41055a
  410594:	call   DWORD PTR [ebx+0x6003b593]
  41059a:	or     eax,0x2d2d82cb
  41059f:	inc    edx
  4105a0:	psubsw mm6,QWORD PTR [ebp-0x5e95c8e7]
  4105a7:	loope  0x4105ec
  4105a9:	jmp    0x7d3180b6
  4105ae:	jecxz  0x4105a2
  4105b0:	mov    edi,0x3741b59f
  4105b5:	sub    eax,DWORD PTR [ebp+0x0]
  4105b8:	mov    esp,DWORD PTR [ebp-0x567b1a12]
  4105be:	xchg   edi,eax
  4105bf:	test   DWORD PTR [edx-0x7d3cee4f],0x173fa2ad
  4105c9:	jmp    0x2d64befb
  4105ce:	cmp    BYTE PTR es:[ebx-0x31],dh
  4105d2:	sbb    eax,0x162523d1
  4105d7:	dec    edi
  4105d8:	jae    0x4105a1
  4105da:	add    BYTE PTR [ebx],dl
  4105dc:	jnp    0x4105f1
  4105de:	in     eax,dx
  4105df:	cmp    al,BYTE PTR [eax]
  4105e1:	dec    eax
  4105e2:	jo     0x41059c
  4105e4:	add    eax,0x773ae904
  4105e9:	(bad)  
  4105ea:	stc    
  4105eb:	outs   dx,BYTE PTR ds:[esi]
  4105ec:	and    eax,0x2a4041fe
  4105f1:	in     eax,dx
  4105f2:	push   edx
  4105f3:	cmp    BYTE PTR gs:[esi-0x1a],dl
  4105f7:	enter  0xff67,0xd8
  4105fb:	jnp    0x410622
  4105fd:	iret   
  4105fe:	sub    DWORD PTR [ebp+0x3e],ecx
  410601:	push   cs
  410602:	xchg   edi,eax
  410603:	sar    edi,cl
  410605:	push   gs
  410607:	cmp    cl,BYTE PTR [edi-0x41]
  41060a:	sbb    bh,BYTE PTR [eax-0xa]
  41060d:	mov    ch,0x0
  41060f:	mov    ecx,0x10410ffa
  410614:	sar    BYTE PTR [esi-0x4bd798cd],cl
  41061a:	mov    ecx,0x411123
  41061f:	inc    ecx
  410620:	rol    DWORD PTR [ecx-0x3ad3eb3f],0x81
  410627:	dec    ecx
  410628:	add    DWORD PTR [ecx],eax
  41062a:	add    al,ah
  41062c:	push   0xffffffc7
  41062e:	test   DWORD PTR [eax],edx
  410630:	sub    BYTE PTR [ebx+0xe9bb],al
  410636:	push   ebx
  410637:	pop    ecx
  410638:	jge    0xc0c2da8c
  41063e:	sbb    BYTE PTR [eax],al
  410640:	mov    al,0xfe
  410642:	(bad)  
  410643:	mov    esi,0xfffffbd0
  410648:	sbb    eax,0x1954ff34
  41064d:	or     esi,DWORD PTR [ebx]
  41064f:	rcl    BYTE PTR [ebp-0x70000000],0xa9
  410656:	daa    
  410657:	(bad)  
  410658:	fs (bad) 
  41065a:	(bad)  
  41065b:	jmp    DWORD PTR [eax-0x2f7d0000]
  410661:	(bad)  
  410662:	cmp    al,0x0
  410664:	xchg   esp,eax
  410665:	add    BYTE PTR [eax],al
  410667:	jb     0x410625
  410669:	jp     0x41062b
  41066b:	add    BYTE PTR [eax+eax*1+0x0],dl
  41066f:	adc    DWORD PTR [ecx+0x65fb2aff],0xffffffb2
  410676:	mov    DWORD PTR [esi-0x1db8c],ecx
  41067c:	fcomi  st,st(5)
  41067e:	or     al,0xdf
  410681:	mov    ds:0x542484,al
  410686:	add    BYTE PTR [ecx+0x3fb9b39],cl
  41068c:	cmp    DWORD PTR [ecx],ebx
  41068e:	jnp    0x41062d
  410690:	cmp    eax,0xb0000215
  410695:	mov    ds:0x193903f7,eax
  41069a:	jnp    0x4106d5
  41069c:	ret    0xfc3
  41069f:	add    al,0x39
  4106a1:	sbb    DWORD PTR [ecx-0x6b],edi
  4106a4:	add    BYTE PTR [ecx],ch
  4106a6:	sbb    eax,0xcbc00002
  4106ab:	fild   DWORD PTR [ebx]
  4106ad:	cmp    DWORD PTR [ecx],ebx
  4106af:	js     0x4106b9
  4106b1:	mov    al,0x55
  4106b3:	ficomp WORD PTR [ebx]
  4106b5:	mov    dl,0x5d
  4106b7:	ficom  WORD PTR [ebx-0x3f]
  4106ba:	pop    ds
  4106bb:	add    ebx,DWORD PTR [esi+0x21d25]
  4106c1:	cmp    BYTE PTR [ebx+0x12],bh
  4106c4:	add    al,0x39
  4106c6:	sbb    DWORD PTR [edx+0x13f53588],edi
  4106cc:	mov    DWORD PTR ds:0xc7890bfd,ebp
  4106d2:	sbb    eax,0xb09efffe
  4106d7:	(bad)  
  4106d8:	and    esi,ecx
  4106da:	sub    eax,0x66b70e41
  4106df:	std    
  4106e0:	inc    DWORD PTR [esi+0x7eff89ac]
  4106e6:	sbb    DWORD PTR [edx],eax
  4106e8:	mov    edi,ebp
  4106ea:	xor    al,0xc6
  4106ec:	test   BYTE PTR [ecx+0xd],bh
  4106ef:	jmp    0xb041:0xa34f58a
  4106f6:	aad    0xdf
  4106f8:	pop    ss
  4106f9:	mov    ebp,0xc22caf60
  4106fe:	or     eax,0xb25fe0
  410703:	ja     0x410718
  410705:	xor    eax,0xdae900
  41070a:	sbb    ah,0xb8
  41070d:	rol    ebx,1
  41070f:	mov    esp,esi
  410711:	jmp    DWORD PTR [esi]
  410713:	and    edx,DWORD PTR [ecx]
  410715:	rcr    BYTE PTR [edx-0x30],1
  410718:	xchg   edi,eax
  410719:	jp     0x41069d
  41071b:	fcom   QWORD PTR [ecx+edx*8-0x7de7dc97]
  410722:	cli    
  410723:	(bad)  
  410725:	inc    ebx
  410726:	das    
  410727:	jl     0x4106bc
  410729:	(bad)  
  41072a:	mul    BYTE PTR [edx]
  41072c:	rol    edi,1
  41072e:	sbb    al,BYTE PTR [esp+edx*4]
  410731:	adc    DWORD PTR [edx-0x4c40336d],esi
  410737:	retf   
  410738:	(bad)
  41073c:	int3   
  41073d:	xlat   BYTE PTR ds:[ebx]
  41073e:	ror    ebx,0xc4
  410741:	fcmovnbe st,st(3)
  410743:	add    dh,BYTE PTR [edx-0x40]
  410746:	sbb    cl,ah
  410748:	jno    0x4107c0
  41074a:	dec    edx
  41074b:	cld    
  41074c:	call   0x38806954
  410751:	ror    DWORD PTR [ecx],1
  410753:	jne    0x410771
  410755:	loopne 0x4107c1
  410757:	into   
  410758:	jno    0x410790
  41075a:	sahf   
  41075b:	jle    0x41070e
  41075d:	and    eax,0xe03c768f
  410762:	push   edx
  410763:	jg     0x410708
  410765:	add    ch,BYTE PTR [esi]
  410767:	je     0x4107af
  410769:	push   DWORD PTR [esi+0x22]
  41076c:	popa   
  41076d:	jle    0x41076f
  41076f:	sbb    bh,ah
  410771:	call   0xccfc8579
  410776:	(bad)  
  410778:	add    cl,ch
  41077a:	add    edx,DWORD PTR [eax]
  41077c:	mov    esp,0xab72ccff
  410781:	popa   
  410782:	push   0x1c
  410784:	add    BYTE PTR [edi],cl
  410786:	outs   dx,DWORD PTR ds:[esi]
  410787:	imul   edi,ebp,0xffffffff
  41078a:	call   0x1164c5b2
  41078f:	and    al,0x7e
  410791:	inc    edi
  410792:	jmp    0xf1fe:0xad8b003a
  410799:	push   esi
  41079a:	adc    bh,BYTE PTR [esi+ecx*8+0x4f]
  41079e:	bound  eax,QWORD PTR [edi+0x19]
  4107a1:	loope  0x4107d8
  4107a3:	pop    esp
  4107a4:	and    cl,BYTE PTR [edx+0x56e9deb5]
  4107aa:	mov    eax,0x318a3371
  4107af:	dec    ebp
  4107b0:	ins    DWORD PTR es:[edi],dx
  4107b1:	test   BYTE PTR [esi],0x1c
  4107b4:	out    0xc2,al
  4107b6:	mul    BYTE PTR [edi+0x4]
  4107b9:	add    ebp,ecx
  4107bb:	cmp    dh,BYTE PTR [ebp+0x43]
  4107be:	int    0xe2
  4107c0:	in     al,0xff
  4107c2:	jecxz  0x4107fe
  4107c4:	add    BYTE PTR [eax+esi*8-0x47],bh
  4107c8:	and    al,BYTE PTR [ecx]
  4107ca:	out    dx,al
  4107cb:	ss clc 
  4107cd:	add    ch,cl
  4107cf:	cmp    ah,bl
  4107d1:	dec    DWORD PTR [ebx+0x0]
  4107d4:	cmp    eax,0xb9f07c00
  4107d9:	and    al,BYTE PTR [edx]
  4107db:	out    dx,al
  4107dc:	push   ss
  4107dd:	sub    BYTE PTR [ecx],al
  4107df:	jmp    0x59c7d1e
  4107e4:	jne    0x41085c
  4107e6:	inc    ebx
  4107e7:	int    0x6e
  4107e9:	jbe    0x410780
  4107eb:	cmc    
  4107ec:	jbe    0x41080f
  4107ee:	inc    dl
  4107f0:	stc    
  4107f1:	ja     0x410836
  4107f3:	lds    ebx,FWORD PTR [edx-0x47]
  4107f6:	dec    edi
  4107f7:	add    ch,ah
  4107f9:	call   DWORD PTR [bx+si+0x22]
  4107fd:	dec    esi
  4107fe:	mov    eax,DWORD PTR [esp+edi*2+0x69]
  410802:	dec    esi
  410803:	mov    esp,DWORD PTR [esi-0x280524fb]
  410809:	fisttp DWORD PTR [ecx+0x37443c4c]
  41080f:	dec    esp
  410810:	cmp    al,0x3c
  410812:	mov    eax,DWORD PTR [ebx+0x11]
  410815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410816:	inc    edx
  410817:	and    al,0x14
  410819:	xor    bh,BYTE PTR [edx+0x39]
  41081c:	mov    ecx,esi
  41081e:	push   eax
  41081f:	mov    edx,DWORD PTR [esi+0x5]
  410822:	inc    ebx
  410823:	not    DWORD PTR [edi-0x24]
  410826:	mov    DWORD PTR [esp+ebp*8+0x3c],ecx
  41082a:	xchg   DWORD PTR [esp+edi*8+0x40],eax
  41082e:	mov    DWORD PTR [esp+edi*8+0x60],eax
  410832:	dec    esi
  410833:	push   ecx
  410834:	pop    ebx
  410835:	jmp    0x41081d
  410837:	das    
  410838:	add    bh,bl
  41083a:	fdiv   st(5),st
  41083c:	mov    esp,DWORD PTR [eax+eax*2+0x182b22]
  410843:	leave  
  410844:	mov    eax,0x38e1aa89
  410849:	(bad)  
  41084b:	iret   
  41084c:	cli    
  41084d:	sub    edi,DWORD PTR [edx-0x6581741]
  410853:	shr    ebx,0x40
  410856:	jno    0x4108a2
  410858:	and    al,0x44
  41085a:	imul   ecx,DWORD PTR [ecx-0x90d9732],0xffffffff
  410861:	(bad)  
  410862:	jo     0x4108b6
  410864:	and    al,0x5c
  410866:	jno    0x41083e
  410868:	mov    ecx,DWORD PTR [eax+ebx*1+0x3e]
  41086c:	push   edx
  41086d:	xor    BYTE PTR [ecx-0x34],dh
  410870:	call   0xfe5a89ae
  410875:	cmp    ax,0x8a3a
  410879:	jp     0x410828
  41087b:	mov    edi,0x869ff123
  410880:	loope  0x4108bc
  410882:	push   ss
  410883:	inc    esp
  410884:	rol    BYTE PTR [ecx+0x14],0x5
  410888:	inc    esp
  410889:	adc    eax,0xb4e7dd53
  41088e:	adc    DWORD PTR [ecx+0x43],ecx
  410891:	push   ebp
  410892:	sbb    eax,0x29390003
  410897:	xchg   esi,edi
  410899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089a:	add    ebp,ebx
  41089c:	imul   eax,DWORD PTR [eax],0x5d
  41089f:	gs sahf 
  4108a1:	das    
  4108a2:	ret    0xe665
  4108a5:	daa    
  4108a6:	ins    BYTE PTR es:[edi],dx
  4108a7:	js     0x410836
  4108a9:	int    0x11
  4108ab:	test   al,0x19
  4108ad:	(bad)  
  4108ae:	not    BYTE PTR [edx-0x5d8adc49]
  4108b4:	cmp    ecx,DWORD PTR [edx+0x51c2457d]
  4108ba:	mov    DWORD PTR [edx+0x17a2e751],edx
  4108c0:	and    esi,edi
  4108c2:	adc    ch,dl
  4108c4:	mov    ds,WORD PTR [ebx+0x1d]
  4108c7:	jno    0x410868
  4108c9:	pop    es
  4108ca:	imul   ch
  4108cc:	out    0x13,eax
  4108ce:	cmp    BYTE PTR [ecx],ch
  4108d0:	add    al,BYTE PTR [eax]
  4108d2:	mov    ah,0x36
  4108d4:	xchg   edi,eax
  4108d5:	dec    esp
  4108d6:	pusha  
  4108d7:	fucom  st(7)
  4108d9:	inc    ebx
  4108da:	sbb    al,0xee
  4108dc:	mov    cs,WORD PTR [ebp+0x2252d]
  4108e2:	and    ebp,DWORD PTR [eax]
  4108e4:	mov    ch,0x50
  4108e6:	mov    dl,0x7f
  4108e8:	sub    bl,BYTE PTR [esi+0x22a6008a]
  4108ee:	ret    
  4108ef:	mov    ah,0xc4
  4108f1:	mov    ebx,0x1ac76138
  4108f7:	sar    BYTE PTR [edx],0xb4
  4108fa:	mov    bl,0x4e
  4108fc:	nop
  4108fd:	mov    al,0x4c
  4108ff:	pop    ds
  410900:	jge    0x410890
  410902:	add    BYTE PTR [edx],al
  410904:	in     al,0xc0
  410906:	mov    eax,0x909e8ae9
  41090b:	loop   0x410904
  41090d:	out    0x2b,eax
  41090f:	xchg   edx,eax
  410910:	push   ss
  410911:	pop    ebp
  410912:	and    dh,BYTE PTR [ebx+0x38]
  410915:	popa   
  410916:	mov    edi,0xdceb85a
  41091b:	test   bl,0xc
  41091e:	clc    
  41091f:	push   ss
  410920:	pop    ds
  410921:	call   0x6a4c2b29
  410926:	lahf   
  410927:	pop    edx
  410928:	hlt    
  410929:	call   0xe98ebd40
  41092e:	add    edi,DWORD PTR [ecx]
  410930:	sbb    DWORD PTR [ebx],0x5
  410933:	mov    es,WORD PTR ds:[ecx+0x4]
  410937:	cmp    DWORD PTR [eax],eax
  410939:	bound  esi,QWORD PTR [edi-0x768e1fe6]
  41093f:	sub    al,BYTE PTR [ecx+ebp*8]
  410942:	add    edi,DWORD PTR [edx-0x444b09bf]
  410948:	inc    edx
  410949:	jmp    0xc5b3:0xea3fbbb6
  410950:	retf   
  410951:	add    al,0xe0
  410953:	or     DWORD PTR [ebx+0x18b62ca6],ecx
  410959:	int    0x21
  41095b:	mov    bl,0xc3
  41095d:	or     al,0xd4
  41095f:	push   ebx
  410960:	les    eax,FWORD PTR [esp+ebp*8]
  410963:	ret    
  410964:	mov    bl,0xff
  410966:	or     al,0x0
  410968:	popa   
  410969:	mov    al,0x8a
  41096b:	lahf   
  41096c:	lds    ebx,FWORD PTR [edx+0x14569122]
  410972:	(bad)  
  410973:	sahf   
  410974:	mov    esp,0x512d8a36
  410979:	out    0x54,al
  41097b:	cmp    DWORD PTR [esp+ecx*2+0x1e2e97e7],ebp
  410982:	(bad)  
  410983:	shl    ch,cl
  410985:	ja     0x410909
  410987:	mov    edi,DWORD PTR [ebx+eax*1]
  41098a:	ret    0xed62
  41098d:	aas    
  41098e:	clc    
  41098f:	jmp    0x4109f6
  410991:	out    0xe7,eax
  410993:	inc    ebx
  410994:	inc    esi
  410995:	push   ds
  410996:	(bad)  
  410997:	bound  esp,QWORD PTR [ebp-0x76]
  41099a:	inc    ebx
  41099b:	add    eax,0x724fb50d
  4109a0:	imul   esp,DWORD PTR ds:0x1e5834ca,0xffffff8a
  4109a7:	and    DWORD PTR [ebx+ecx*2],edx
  4109aa:	add    ah,BYTE PTR [eax]
  4109ac:	pop    ebp
  4109ad:	sub    BYTE PTR [ecx-0x17e9148e],ah
  4109b3:	cmp    BYTE PTR [edi-0x76],cl
  4109b6:	leave  
  4109b7:	sub    BYTE PTR [edx],dl
  4109b9:	inc    BYTE PTR [edx]
  4109bb:	and    ebp,DWORD PTR [ecx+eax*8+0x483dbd23]
  4109c2:	cmp    dl,BYTE PTR [eax]
  4109c4:	scas   al,BYTE PTR es:[edi]
  4109c5:	add    eax,0xf1deadc7
  4109ca:	add    cl,ch
  4109cc:	add    BYTE PTR [edx],bh
  4109ce:	add    BYTE PTR [ebp+0x3ae5d0e6],al
  4109d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d5:	into   
  4109d6:	loope  0x410962
  4109d8:	cmp    eax,0x3b4fed91
  4109dd:	lods   al,BYTE PTR ds:[esi]
  4109de:	dec    ebx
  4109df:	out    0x0,eax
  4109e1:	push   cs
  4109e2:	idiv   ch
  4109e4:	dec    DWORD PTR [ebx]
  4109e6:	(bad)  [ecx+0x532c3444]
  4109ec:	push   eax
  4109ed:	sbb    ebp,DWORD PTR [edi-0x1f2a801a]
  4109f3:	std    
  4109f4:	cmp    edi,DWORD PTR [eax-0x10]
  4109f7:	mov    eax,DWORD PTR [edx]
  4109f9:	push   ebx
  4109fa:	add    DWORD PTR [eax],eax
  4109fc:	sub    DWORD PTR [eax+ebp*1],0x12
  410a00:	add    BYTE PTR [edi-0x7a],cl
  410a03:	cmc    
  410a04:	add    ah,BYTE PTR [eax+0x1]
  410a07:	cmp    ebp,0x53
  410a0a:	lock (bad) 
  410a0c:	aam    0x50
  410a0e:	add    DWORD PTR [eax],eax
  410a10:	mov    ebp,esp
  410a12:	and    al,0x1e
  410a14:	mov    esp,esp
  410a16:	and    al,0x56
  410a18:	mov    edx,DWORD PTR [esi+0x10000215]
  410a1e:	test   BYTE PTR [edi-0x3f7c4e03],bh
  410a24:	add    esi,DWORD PTR [edx-0x5ffc417d]
  410a2a:	lea    ecx,[edx+0x24]
  410a2d:	or     al,0x52
  410a2f:	mov    esi,ecx
  410a31:	add    BYTE PTR [eax-0x46],cl
  410a34:	idiv   bh
  410a36:	dec    edi
  410a37:	mov    WORD PTR [edx+0x24],es
  410a3a:	add    BYTE PTR [edx+edx*2+0x5a8c0424],cl
  410a41:	and    al,0xe8
  410a43:	cmp    eax,ecx
  410a45:	push   edx
  410a46:	dec    ebx
  410a47:	scas   eax,DWORD PTR es:[edi]
  410a48:	dec    esi
  410a49:	jl     0x410a40
  410a4b:	call   0xfd10ff72
  410a50:	push   ebx
  410a51:	push   ebx
  410a52:	sub    ecx,esi
  410a54:	xchg   DWORD PTR [esp+esi*1+0x10],eax
  410a58:	out    0x17,al
  410a5a:	cmp    DWORD PTR [esi+ebx*1],edi
  410a5d:	(bad)  
  410a5e:	mov    dl,0xfa
  410a60:	out    0x23,eax
  410a62:	bound  ebp,QWORD PTR [eax+0x7c]
  410a65:	sbb    BYTE PTR [ebx-0x4d3dfed7],0x5e
  410a6c:	inc    esp
  410a6d:	clc    
  410a6e:	cmp    eax,DWORD PTR [edx-0x11]
  410a71:	out    0x76,eax
  410a73:	jp     0x410a93
  410a75:	inc    BYTE PTR [edx+ebx*8]
  410a78:	mov    cl,ch
  410a7a:	mov    al,0xea
  410a7c:	out    0x2b,eax
  410a7e:	push   ecx
  410a7f:	js     0x410a98
  410a81:	(bad)  
  410a82:	push   esi
  410a83:	xchg   ecx,eax
  410a84:	dec    ebx
  410a85:	mov    dh,ch
  410a87:	inc    edx
  410a88:	out    0x2a,al
  410a8a:	jno    0x410ab5
  410a8c:	dec    ebx
  410a8d:	mov    bh,0x50
  410a8f:	enter  0x2d8a,0x2e
  410a93:	mov    cl,0x34
  410a95:	stc    
  410a96:	add    dl,al
  410a98:	iret   
  410a99:	inc    esp
  410a9a:	call   0x8a8930e5
  410a9f:	jne    0x410aa6
  410aa1:	fadd   DWORD PTR [edx]
  410aa3:	add    edi,edi
  410aa5:	sub    al,0x7c
  410aa7:	inc    ecx
  410aa8:	loop   0x410a71
  410aaa:	and    ebp,DWORD PTR ds:0x39000228
  410ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab1:	push   ds
  410ab2:	jne    0x410ad5
  410ab4:	push   ds
  410ab5:	inc    edi
  410ab6:	jnp    0x410acd
  410ab8:	mov    ?,WORD PTR [edi-0x4fa6d6dd]
  410abe:	mov    ch,bh
  410ac0:	add    DWORD PTR [ebp-0xd],edx
  410ac3:	(bad)  
  410ac4:	add    cl,BYTE PTR [ebx-0x199a3d29]
  410aca:	daa    
  410acb:	ins    BYTE PTR es:[edi],dx
  410acc:	jns    0x410a57
  410ace:	int    0xd1
  410ad0:	(bad)  
  410ad1:	pop    ss
  410ad2:	(bad)  
  410ad3:	mov    dh,0x0
  410ad5:	and    bh,BYTE PTR [edi+edi*1]
  410ad8:	mov    WORD PTR [ebx],es
  410ada:	add    bh,BYTE PTR [ecx]
  410adc:	add    BYTE PTR [edx-0x61],ch
  410adf:	pop    edx
  410ae0:	hlt    
  410ae1:	call   0xeb37c6f4
  410ae6:	add    edi,DWORD PTR [ecx]
  410ae8:	xchg   DWORD PTR [eax+ebp*8],ebx
  410aeb:	out    dx,al
  410aec:	test   BYTE PTR [ebp-0x18584af2],dh
  410af2:	add    edi,DWORD PTR [ecx]
  410af4:	jg     0x410a9b
  410af6:	add    al,0x3e
  410af8:	cmp    BYTE PTR [eax],0x5
  410afb:	add    BYTE PTR [ecx],bh
  410afd:	add    BYTE PTR [edx-0x49],ah
  410b00:	sbb    dh,BYTE PTR [ecx+eiz*2+0x7347234e]
  410b07:	pop    es
  410b08:	inc    ebx
  410b09:	xlat   BYTE PTR ds:[ebx]
  410b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b0b:	xchg   ebp,eax
  410b0c:	cmp    BYTE PTR [edi-0x3b4c4c53],al
  410b12:	(bad)  
  410b13:	mul    DWORD PTR [ebx+0x3b]
  410b16:	mov    ecx,0x4cbbdb3
  410b1b:	loopne 0x410aa6
  410b1d:	xchg   DWORD PTR [esi],esp
  410b1f:	mov    WORD PTR [edx+0x22c04e4],es
  410b25:	adc    eax,DWORD PTR [ebp+0x1e]
  410b28:	push   ecx
  410b29:	pushf  
  410b2a:	add    al,0xd8
  410b2c:	mov    ah,dl
  410b2e:	popa   
  410b2f:	mov    bh,0x5a
  410b31:	rcl    BYTE PTR [ebp+0x1049c3b1],1
  410b37:	loopne 0x410b23
  410b39:	sbb    bl,BYTE PTR ds:0xac870e8a
  410b3f:	out    0x26,eax
  410b41:	mov    bl,0xb8
  410b43:	mov    al,BYTE PTR [eax+ebp*1]
  410b46:	(bad)  
  410b47:	pop    ss
  410b48:	iret   
  410b49:	sbb    al,cl
  410b4b:	inc    edx
  410b4c:	mov    bl,0xbb
  410b4e:	dec    esp
  410b50:	(bad)  
  410b51:	pushf  
  410b52:	punpckldq mm0,DWORD PTR [esi-0xe8dd022]
  410b59:	fidiv  WORD PTR [ebx]
  410b5b:	jo     0x410ae6
  410b5d:	fidiv  WORD PTR [edi]
  410b5f:	pusha  
  410b60:	add    cl,ah
  410b62:	fidivr WORD PTR [ebx]
  410b64:	bound  eax,QWORD PTR [ecx-0x37e1f022]
  410b6a:	retf   0xaf8a
  410b6d:	push   ebp
  410b6e:	loop   0x410b60
  410b70:	mov    dh,0x1c
  410b72:	xchg   BYTE PTR [ebx+0x5],cl
  410b75:	xchg   ebp,eax
  410b76:	mov    cl,0x50
  410b78:	jb     0x410b79
  410b7a:	test   edi,edx
  410b7c:	xchg   ecx,eax
  410b7d:	inc    edx
  410b7e:	push   cs
  410b7f:	(bad)  
  410b80:	xchg   esi,eax
  410b81:	cmp    BYTE PTR ds:0x1adc5c0e,0xfe
  410b88:	jmp    0xd164c24e
  410b8d:	popa   
  410b8e:	jl     0x410bb3
  410b90:	in     eax,dx
  410b91:	cmp    al,BYTE PTR [eax]
  410b93:	jne    0x410ba6
  410b95:	shr    BYTE PTR [ebp-0x423e02dd],0x23
  410b9c:	stc    
  410b9d:	in     eax,dx
  410b9e:	scas   eax,DWORD PTR es:[edi]
  410b9f:	dec    edi
  410ba0:	bound  ebp,QWORD PTR [edi+0x21]
  410ba3:	icebp  
  410ba4:	pop    ecx
  410ba5:	xor    al,0x1a
  410ba7:	push   esp
  410ba8:	call   0xe61e:0xa5884bc1
  410baf:	out    0x2f,eax
  410bb1:	sub    BYTE PTR [edx],bl
  410bb3:	(bad)  
  410bb4:	bound  ecx,QWORD PTR [ecx]
  410bb6:	fisub  WORD PTR [ebx]
  410bb8:	jmp    0x88f8:0xb4d28682
  410bbf:	dec    ebx
  410bc0:	int    0xd2
  410bc2:	scas   eax,DWORD PTR es:[edi]
  410bc3:	mov    bl,BYTE PTR [edi]
  410bc5:	add    BYTE PTR ds:0x3700f269,ah
  410bcb:	sti    
  410bcc:	mov    eax,ebx
  410bce:	dec    ebx
  410bcf:	dec    eax
  410bd0:	and    bh,BYTE PTR [eax]
  410bd2:	lahf   
  410bd3:	dec    ebp
  410bd4:	mov    esi,ecx
  410bd6:	cmp    BYTE PTR [ebp-0x7768000f],bl
  410bdc:	push   0x24
  410bde:	xor    al,0xff
  410be0:	xlat   BYTE PTR ds:[ebx]
  410be1:	mov    ecx,DWORD PTR [eax+ebp*1+0x22]
  410be5:	cmp    esp,ebx
  410be7:	mov    BYTE PTR [edx+0x24],bl
  410bea:	pop    eax
  410beb:	jp     0x410c34
  410bed:	jmp    0x410b8b
  410bef:	mov    BYTE PTR [edx+0x24],bl
  410bf2:	sub    BYTE PTR [edi+0x38682442],al
  410bf8:	test   BYTE PTR [esp+ebx*2],ah
  410bfb:	std    
  410bfc:	push   DWORD PTR [ecx+ebp*2-0x80]
  410c00:	mov    esp,0xfffd4c28
  410c05:	jmp    FWORD PTR [edi+edx*1]
  410c08:	cmp    eax,DWORD PTR [eax]
  410c0a:	pop    ebp
  410c0b:	std    
  410c0c:	(bad)  
  410c0d:	jnp    0x410c6c
  410c0f:	cmp    ch,0x2
  410c12:	cmp    al,0x1f
  410c14:	jg     0x410c92
  410c16:	cld    
  410c17:	xor    al,0xfe
  410c19:	jl     0x410c3b
  410c1b:	std    
  410c1c:	jnp    0x410c23
  410c1e:	xchg   ebx,eax
  410c1f:	cld    
  410c20:	add    DWORD PTR [ebx+eiz*1-0x78],esi
  410c24:	dec    edx
  410c25:	and    al,0x28
  410c27:	push   ebx
  410c28:	dec    edi
  410c29:	mov    eax,DWORD PTR [eax]
  410c2b:	inc    esi
  410c2c:	in     eax,0xcc
  410c2e:	repz inc edi
  410c30:	cld    
  410c31:	jmp    0x229aa766
  410c36:	pop    eax
  410c37:	pop    ebx
  410c38:	inc    ecx
  410c39:	and    dl,BYTE PTR [eax]
  410c3b:	imul   edx,eax,0x29
  410c3e:	xlat   BYTE PTR ds:[ebx]
  410c3f:	mov    ds:0x39ce894c,al
  410c44:	jmp    FWORD PTR [ebp-0x11]
  410c47:	(bad)  
  410c48:	or     DWORD PTR [ebx+eax*2],ebx
  410c4b:	adc    eax,0x38ee7f37
  410c50:	xchg   esp,eax
  410c51:	and    al,0xea
  410c53:	sub    ebx,DWORD PTR [esi-0x43b6dc4a]
  410c59:	(bad)  
  410c5a:	dec    BYTE PTR [eax]
  410c5c:	aad    0x8e
  410c5e:	int    0x91
  410c60:	xchg   esp,eax
  410c61:	adc    edi,esi
  410c63:	sahf   
  410c64:	cmc    
  410c65:	sbb    al,BYTE PTR [edx-0x70f6da6c]
  410c6b:	mov    eax,0xb2000226
  410c70:	mov    al,ds:0x273903ef
  410c75:	scas   eax,DWORD PTR es:[edi]
  410c76:	push   edx
  410c77:	or     DWORD PTR [esi+0x774fe749],ebx
  410c7d:	sbb    bh,dh
  410c7f:	mov    dl,0xea
  410c81:	fbld   TBYTE PTR [edi]
  410c83:	add    al,0xd8
  410c85:	mov    cs,ebp
  410c87:	ret    0x2b4e
  410c8a:	out    dx,eax
  410c8b:	dec    ebx
  410c8c:	sbb    DWORD PTR [edx],0x197a003a
  410c92:	jmp    0xbf3a:0xea4af58a
  410c99:	cmp    eax,0x352efffe
  410c9e:	or     eax,DWORD PTR [ebx-0xe19]
  410ca4:	cmp    DWORD PTR [ecx],ebp
  410ca6:	mov    es,WORD PTR [esp+edx*2+0x29]
  410caa:	(bad)  
  410cab:	(bad)  
  410cac:	cmp    DWORD PTR ds:0x2c0482ff,edi
  410cb2:	mov    es,WORD PTR [esi]
  410cb4:	cmp    al,0x29
  410cb6:	xchg   edi,eax
  410cb7:	push   esi
  410cb9:	gs aam 0x8a
  410cbc:	lea    eax,[eax]
  410cbe:	int    0xbb
  410cc0:	mov    cl,0xa4
  410cc2:	(bad)  
  410cc3:	out    dx,eax
  410cc4:	mov    ch,0x25
  410cc6:	pushf  
  410cc7:	jecxz  0x410c8c
  410cc9:	outs   dx,BYTE PTR ds:[esi]
  410cca:	hlt    
  410ccb:	dec    esi
  410ccd:	pop    ss
  410cce:	cdq    
  410ccf:	mov    ch,0xb3
  410cd1:	inc    esi
  410cd2:	adc    ch,ah
  410cd4:	into   
  410cd5:	pop    ss
  410cd6:	cmc    
  410cd7:	pop    ebx
  410cd8:	cmp    DWORD PTR [eax],eax
  410cda:	jmp    0xfcbf44e2
  410cdf:	jmp    DWORD PTR [esi+0x5ac00f17]
  410ce5:	in     al,dx
  410ce6:	pop    ebx
  410ce7:	and    al,0xc5
  410ce9:	mov    ah,0xeb
  410ceb:	sbb    ah,BYTE PTR [ebx+0x5ab771ba]
  410cf1:	mov    eax,0x5a00bf71
  410cf6:	call   0x4704c116
  410cfb:	rol    BYTE PTR [esi],0x6a
  410cfe:	pop    ss
  410cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d00:	add    al,0x97
  410d02:	in     al,dx
  410d03:	in     al,0x3
  410d05:	cmp    DWORD PTR [ebp+0x2b57f934],eax
  410d0b:	retf   
  410d0c:	mov    ?,edx
  410d0e:	(bad)  [eax]
  410d10:	add    DWORD PTR [edi-0x73],0xdbf28ed6
  410d17:	ror    BYTE PTR [esi+0x3e4ebcc],0x39
  410d1e:	mov    esp,edx
  410d20:	fbld   TBYTE PTR [edx-0x77]
  410d23:	lods   al,BYTE PTR ds:[esi]
  410d24:	fbld   TBYTE PTR [esi-0x77]
  410d27:	mov    esp,0x41bf46df
  410d2c:	icebp  
  410d2d:	mov    ch,0x16
  410d2f:	mov    esp,0xed2b7e06
  410d34:	mov    ?,WORD PTR [ebx+ebp*8+0x3aecff]
  410d3b:	push   ebx
  410d3c:	cdq    
  410d3d:	mov    edi,0x135fe744
  410d42:	push   ss
  410d43:	(bad)  
  410d44:	push   ds
  410d45:	mov    eax,0x3ae903f2
  410d4a:	jge    0x410d4a
  410d4c:	fimul  WORD PTR [esi+0x2a]
  410d4f:	(bad)  
  410d50:	call   0xc5bce88f
  410d55:	out    0x5,al
  410d57:	test   DWORD PTR [eax],ecx
  410d59:	add    BYTE PTR [edx],bh
  410d5b:	add    BYTE PTR [eax],al
  410d5d:	(bad)  
  410d5e:	fsubrp st(2),st
  410d60:	push   ebx
  410d61:	jb     0x410d53
  410d63:	jmp    0xa7a7a32
  410d68:	cmp    ebp,DWORD PTR [esi-0x5974ff55]
  410d6e:	lds    ecx,FWORD PTR [ecx-0x7676f2bd]
  410d74:	jmp    0x8164:0x4fac5012
  410d7b:	loop   0x410db8
  410d7d:	sbb    BYTE PTR [esp+eax*2-0x1da6ea78],bh
  410d84:	out    0x17,eax
  410d86:	cs push ss
  410d88:	(bad)  
  410d89:	shr    BYTE PTR [esi+0x691b33e2],1
  410d8f:	mov    DWORD PTR [ebx-0x33],edx
  410d92:	push   0xffffffad
  410d94:	push   ecx
  410d95:	jb     0x410d8a
  410d97:	push   ds
  410d98:	out    0x78,al
  410d9a:	push   eax
  410d9b:	push   ss
  410d9c:	mov    al,BYTE PTR [ecx+0x2123c1bc]
  410da2:	call   0x4d70986c
  410da7:	sub    eax,0xda3056f0
  410dac:	les    esp,FWORD PTR [edx-0x1f]
  410daf:	loope  0x410dc4
  410db1:	add    dh,bh
  410db3:	adc    DWORD PTR [ecx-0x76d3cbb4],ecx
  410db9:	push   esp
  410dba:	inc    esp
  410dbb:	xor    BYTE PTR [edi+0x3434004c],al
  410dc1:	xchg   DWORD PTR [esp+esi*8+0x2d],edx
  410dc5:	mov    DWORD PTR [esp+esi*8+0x11],eax
  410dc9:	push   ebp
  410dca:	push   ebp
  410dcb:	nop
  410dcc:	test   ah,cl
  410dce:	call   0x3ef7e4
  410dd3:	dec    ebx
  410dd4:	dec    eax
  410dd5:	and    bh,BYTE PTR [eax]
  410dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd8:	push   edx
  410dd9:	mov    esi,ecx
  410ddb:	sbb    esp,esp
  410ddd:	out    0xa3,al
  410ddf:	mov    cl,0xf8
  410de1:	std    
  410de2:	cmp    edx,ebp
  410de4:	outs   dx,BYTE PTR ds:[esi]
  410de5:	cmp    BYTE PTR [ebx+0x3b362054],cl
  410deb:	es xor eax,0x86a00002
  410df1:	pop    es
  410df2:	cmp    DWORD PTR [esi-0x6ffffdd7],0x1
  410df9:	je     0x410e13
  410dfb:	ins    DWORD PTR es:[edi],dx
  410dfc:	add    DWORD PTR ds:0x36d6000,eax
  410e02:	sbb    DWORD PTR [edi+0x7d1973fb],0x1
  410e09:	jge    0x410e0b
  410e0b:	pusha  
  410e0c:	ins    DWORD PTR es:[edi],dx
  410e0d:	add    eax,DWORD PTR [ebx+0xd73fcbf]
  410e13:	daa    
  410e14:	dec    esp
  410e15:	mov    esi,ecx
  410e17:	test   al,0xe4
  410e19:	out    dx,eax
  410e1a:	jmp    FWORD PTR [edi+0xebfd2c]
  410e20:	test   BYTE PTR [edx+0x24],ch
  410e23:	add    BYTE PTR [eax],ah
  410e25:	push   ss
  410e26:	(bad)  
  410e27:	call   DWORD PTR [eax]
  410e29:	add    DWORD PTR [ebx+0x310239d3],ecx
  410e2f:	push   ecx
  410e30:	mov    fs:0xacfee748,al
  410e36:	pop    ss
  410e37:	(bad)  
  410e38:	je     0x410de4
  410e3a:	daa    
  410e3b:	add    BYTE PTR [esp+edi*4-0x77],ch
  410e3f:	imul   edx,DWORD PTR ds:0x1d438b37,0x53
  410e46:	ret    
  410e47:	inc    edi
  410e48:	mov    al,0x52
  410e4a:	ficom  WORD PTR [edi+0x12]
  410e4d:	iret   
  410e4e:	pop    es
  410e4f:	add    BYTE PTR [esi-0x4301e812],0xfd
  410e56:	pop    es
  410e57:	test   BYTE PTR [ebp-0x45fffdda],bl
  410e5d:	or     eax,0xa9b70f00
  410e62:	add    al,BYTE PTR [eax]
  410e64:	cmp    DWORD PTR [edx-0x31b6dc39],edx
  410e6a:	mov    al,dl
  410e6c:	bound  esp,QWORD PTR [esi-0x4d]
  410e6f:	push   eax
  410e70:	ret    0x2b74
  410e73:	cs xchg edi,eax
  410e75:	cmp    eax,0xfae58a16
  410e7a:	fist   DWORD PTR [esi+0xb]
  410e7d:	mov    ds:0x3e618a45,al
  410e82:	add    al,0xf1
  410e84:	pop    bp
  410e86:	fcmovb st,st(4)
  410e88:	add    dh,bl
  410e8a:	fisttp DWORD PTR [edx-0x26d0e2bd]
  410e90:	test   DWORD PTR ds:0xcc00021b,edx
  410e96:	jno    0x25c2059
  410e9c:	add    BYTE PTR [ecx],bh
  410e9e:	adc    eax,0x1c393cfa
  410ea3:	add    al,BYTE PTR [eax]
  410ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ea6:	add    ah,ch
  410ea8:	sbb    BYTE PTR [edi],0xff
  410eab:	aam    0xdf
  410ead:	push   ebp
  410eae:	add    ah,dl
  410eb0:	add    edi,DWORD PTR [ecx]
  410eb2:	xchg   esp,eax
  410eb3:	jecxz  0x410e37
  410eb5:	pop    es
  410eb6:	add    BYTE PTR [ebp+0x71b067fb],bh
  410ebc:	inc    esi
  410ebd:	fmulp  st(1),st
  410ebf:	aaa    
  410ec0:	pop    ss
  410ec1:	out    dx,eax
  410ec2:	daa    
  410ec3:	idiv   BYTE PTR [eax+0x4c69b383]
  410ec9:	fbstp  TBYTE PTR [edx+0x3e0e4069]
  410ecf:	lock add eax,edx
  410ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed3:	(bad)  
  410ed4:	repz mov bl,0x3f
  410ed7:	sar    DWORD PTR [esi],1
  410ed9:	outs   dx,BYTE PTR ds:[esi]
  410eda:	lods   eax,DWORD PTR ds:[esi]
  410edb:	jno    0x410f23
  410edd:	sahf   
  410ede:	repz push es
  410ee0:	pop    ss
  410ee1:	scas   eax,DWORD PTR es:[edi]
  410ee2:	mov    ebp,0x8d392769
  410ee7:	shr    DWORD PTR [edx],cl
  410ee9:	xchg   DWORD PTR cs:[eax+eiz*8],esi
  410eed:	add    BYTE PTR [esi-0x7b],al
  410ef0:	and    DWORD PTR [edi],edx
  410ef2:	jmp    0x9e8670a4
  410ef7:	sti    
  410ef8:	(bad)  
  410ef9:	push   ss
  410efa:	jg     0x410e83
  410efc:	cmp    al,0xe0
  410efe:	or     dl,BYTE PTR [ebp-0x19]
  410f01:	add    edi,DWORD PTR [ecx]
  410f03:	add    dl,dh
  410f05:	ss jmp 0x410ee8
  410f08:	jae    0x410f84
  410f0a:	pop    esi
  410f0b:	adc    ebp,eax
  410f0d:	add    eax,edx
  410f0f:	jp     0x410f0d
  410f11:	dec    DWORD PTR [esi+0x13]
  410f14:	cmp    DWORD PTR [ebx+esi*4+0x4d209042],esi
  410f1b:	adc    edi,DWORD PTR [ebp+0x4]
  410f1e:	out    0xeb,eax
  410f20:	(bad)  
  410f21:	in     al,dx
  410f22:	cmp    al,BYTE PTR [eax]
  410f24:	add    ecx,DWORD PTR [ebx+eax*1-0x44b38ece]
  410f2b:	inc    ebp
  410f2c:	(bad)  
  410f2d:	call   0xe94506be
  410f32:	cmp    al,BYTE PTR [ebp-0x8561fb6]
  410f38:	mov    ch,BYTE PTR [edi+0xa]
  410f3b:	(bad)  
  410f3c:	(bad)  
  410f3d:	call   0xed588c07
  410f42:	cmp    al,BYTE PTR [eax]
  410f44:	inc    eax
  410f45:	pusha  
  410f46:	mov    esp,0x3ae903f6
  410f4b:	mov    DWORD PTR [ebp-0x1ed2907],eax
  410f51:	bound  eax,QWORD PTR [eax]
  410f53:	dec    esp
  410f54:	jmp    0x410f59
  410f56:	jmp    0xeb509595
  410f5b:	or     BYTE PTR ds:0xffaa71c1,dl
  410f61:	popf   
  410f62:	aad    0xae
  410f64:	adc    bh,dh
  410f66:	je     0x410f0d
  410f68:	test   DWORD PTR [ebp-0x1ed6107],eax
  410f6e:	jo     0x410f87
  410f70:	jmp    0x410f75
  410f72:	jmp    0x5fc9cfb1
  410f77:	cmp    esi,0x7cb3e8ff
  410f7d:	pmulhw mm7,QWORD PTR [edx]
  410f80:	add    BYTE PTR [ebx-0x19291],cl
  410f86:	call   0xbb43123b
  410f8b:	inc    edi
  410f8c:	inc    ecx
  410f8d:	xchg   ecx,edi
  410f8f:	cmp    esi,DWORD PTR [edx+0x1b]
  410f92:	in     eax,dx
  410f93:	cmp    al,BYTE PTR [eax]
  410f95:	jne    0x410f87
  410f97:	mov    cl,0x7c
  410f99:	str    WORD PTR [esi+edi*8-0x1]
  410f9e:	mov    BYTE PTR [esi+0x20000214],bl
  410fa4:	xchg   DWORD PTR ds:[esi-0x1ee0c],ecx
  410fab:	test   eax,0x20040e92
  410fb0:	dec    BYTE PTR [edx-0x1edf77a]
  410fb6:	inc    DWORD PTR [eax]
  410fb8:	inc    eax
  410fb9:	sbb    al,0x89
  410fbb:	xchg   al,ah
  410fbd:	adc    esi,edi
  410fbf:	call   FWORD PTR [esi]
  410fc1:	cld    
  410fc2:	dec    DWORD PTR [edx+0x21856]
  410fc8:	ror    BYTE PTR [eax-0x233e77c],1
  410fce:	inc    DWORD PTR [eax]
  410fd0:	xchg   BYTE PTR [edx+eax*1],cl
  410fd3:	add    al,ah
  410fd5:	sub    bl,cl
  410fd7:	shl    al,cl
  410fd9:	mov    BYTE PTR [edx+0x24],al
  410fdc:	xchg   esp,eax
  410fdd:	xchg   edx,eax
  410fde:	mov    esi,0x4a88f174
  410fe3:	and    al,0xc0
  410fe5:	mov    BYTE PTR [eax+edx*1+0x2afffd9c],dl
  410fec:	pop    esp
  410fed:	and    BYTE PTR [esi+0x51],cl
  410ff0:	or     edi,DWORD PTR [ebx+0x12]
  410ff3:	add    al,0xa0
  410ff5:	std    
  410ff6:	sub    cl,BYTE PTR [esp+edi*1+0x4c]
  410ffa:	push   eax
  410ffb:	push   ecx
  410ffc:	pop    ds
  410ffd:	jmp    0x410fcd
  410fff:	sbb    DWORD PTR [ebp+ecx*1+0x82dc083],0x5d
  411007:	mov    edx,DWORD PTR [ebx-0x2ca1a2a8]
  41100d:	shl    BYTE PTR [esi],1
  41100f:	ret    0xfc38
  411012:	mov    al,BYTE PTR [esi-0x1e8c7]
  411018:	inc    esi
  411019:	ds mov esi,0xdbe90023
  41101f:	mov    eax,0x3ea6975e
  411024:	aaa    
  411025:	sti    
  411026:	add    bh,BYTE PTR cs:[eax+0x82739]
  41102d:	cli    
  41102e:	lea    edi,[esi+0x4a8e3d23]
  411034:	shl    BYTE PTR [eax],0x26
  411037:	test   DWORD PTR [ebx+0x31],eax
  41103a:	addr16 aas 
  41103c:	mov    dh,BYTE PTR [ebp+0x3]
  41103f:	or     BYTE PTR [ecx+0x2e5],al
  411045:	cmp    DWORD PTR [edx+eax*2+0x3ea83e74],esp
  41104c:	sub    esi,DWORD PTR ds:0xc2c30227
  411052:	mov    ds:0x273543de,al
  411057:	add    cl,BYTE PTR [ebx+0x3c23aad]
  41105d:	cmp    DWORD PTR [edi],esp
  41105f:	mov    cl,0x8a
  411061:	lds    edi,FWORD PTR [edx]
  411063:	ret    0x3903
  411066:	daa    
  411067:	mov    al,0x8a
  411069:	int    0x3a
  41106b:	(bad)  
  41106c:	add    edi,DWORD PTR [ecx]
  41106e:	daa    
  41106f:	mov    bl,0x4f
  411071:	ret    0xe79a
  411074:	aas    
  411075:	xor    eax,0xe9520227
  41107a:	mov    bl,0xbf
  41107c:	and    esp,DWORD PTR [ecx]
  41107e:	das    
  41107f:	mov    bl,0xf4
  411081:	add    BYTE PTR [esi+0x51],dh
  411084:	test   bl,al
  411086:	sbb    eax,0x7a000223
  41108b:	jb     0x4110cc
  41108d:	retf   
  41108e:	ins    DWORD PTR es:[edi],dx
  41108f:	push   DWORD PTR [eax+eax*2+0x40ac4382]
  411096:	add    BYTE PTR [ebx+0x3b],0x7d
  41109a:	pop    ebp
  41109b:	jle    0x411119
  41109d:	adc    al,0x3e
  41109f:	adc    al,ch
  4110a1:	mov    dh,0x8c
  4110a3:	mov    bh,0x71
  4110a5:	mov    ecx,0x391d136
  4110aa:	out    dx,eax
  4110ab:	push   ebx
  4110ac:	cmp    dl,al
  4110ae:	jns    0x4110b0
  4110b0:	jo     0x4110c6
  4110b2:	stc    
  4110b3:	or     cl,ch
  4110b5:	add    al,bh
  4110b7:	add    al,0xf9
  4110b9:	jl     0x4110c4
  4110bb:	test   BYTE PTR [edi+0xb],al
  4110be:	cs push edi
  4110c0:	je     0x4110bf
  4110c2:	ss mov esi,0x38b403a7
  4110c8:	in     eax,0x78
  4110ca:	or     DWORD PTR [eax],eax
  4110cc:	ja     0x411113
  4110ce:	mov    dh,0xc4
  4110d0:	add    edi,DWORD PTR [ebx+edi*2]
  4110d3:	and    DWORD PTR [ecx],0xffffffcc
  4110d6:	push   edx
  4110d7:	xor    edi,edx
  4110d9:	xor    eax,0xff8b835c
  4110de:	cmp    DWORD PTR [ebp+0x17867cf2],edx
  4110e4:	and    BYTE PTR [ecx-0x28fffe00],al
  4110ea:	push   ds
  4110eb:	cmp    edi,DWORD PTR [ebp-0x24]
  4110ee:	cmc    
  4110ef:	lods   eax,DWORD PTR ds:[esi]
  4110f0:	mov    edi,esp
  4110f2:	xchg   dl,bl
  4110f4:	dec    ebp
  4110f5:	clc    
  4110f6:	adc    cl,BYTE PTR [edi-0x257917f1]
  4110fc:	jge    0x4110f6
  4110fe:	adc    bh,BYTE PTR [edi+0xf]
  411101:	call   0x7740a4da
  411106:	test   DWORD PTR [esi-0x42],edx
  411109:	jmp    DWORD PTR [edi]
  41110b:	cmp    eax,0xb7d1337d
  411110:	or     eax,0x7957241b
  411115:	inc    ebx
  411116:	aam    0x12
  411118:	xchg   DWORD PTR [ebx-0xc],eax
  41111b:	retf   0x719
  41111e:	arpl   WORD PTR [esi-0x2c],si
  411121:	stos   DWORD PTR es:[edi],eax
  411122:	jno    0x411122
  411124:	jmp    0x4110b5
  411126:	sub    dh,BYTE PTR [esi+0x55f51b09]
  41112c:	dec    edx
  41112d:	sbb    ebp,ecx
  41112f:	cmp    al,BYTE PTR [eax]
  411131:	setg   BYTE PTR [esi+eiz*1+0x7d3aa84d]
  411139:	xor    esi,ecx
  41113b:	mov    edi,0xfccc370c
  411140:	js     0x411185
  411142:	cld    
  411143:	xor    al,BYTE PTR [edi+0x1a6adc43]
  411149:	pop    es
  41114a:	arpl   WORD PTR [eax],ax
  41114c:	(bad)  
  41114d:	shr    DWORD PTR [ebx-0x7014099f],cl
  411153:	stos   BYTE PTR es:[edi],al
  411154:	mov    edi,0x1d9d3709
  411159:	rcr    dl,1
  41115b:	out    0x60,al
  41115d:	xor    bh,0x9f
  411160:	cmc    
  411161:	push   cs
  411162:	jle    0x4110e9
  411164:	inc    ecx
  411165:	jo     0x411166
  411167:	je     0x4111a1
  411169:	jnp    0x41116e
  41116b:	push   esp
  41116c:	jmp    0x8c82:0x9de940bc
  411173:	stc    
  411174:	sub    DWORD PTR [esi],ecx
  411176:	(bad)  
  411177:	out    dx,al
  411178:	lock or DWORD PTR [edi],0x7e0e7a26
  41117f:	dec    ebp
  411180:	ss jo  0x411182
  411183:	push   DWORD PTR [edx+eax*1]
  411186:	mov    eax,DWORD PTR [ecx*1+0x50414c54]
  41118d:	or     DWORD PTR [edx-0x2107f43],eax
  411193:	jmp    DWORD PTR [ebx]
  411195:	test   ecx,edi
  411197:	sbb    BYTE PTR [esi+eax*8],ch
  41119a:	inc    eax
  41119b:	sub    DWORD PTR [edx+0x6a8c0d13],0xffffffef
  4111a2:	std    
  4111a3:	jmp    FWORD PTR [ebp-0x5000f17b]
  4111a9:	out    dx,eax
  4111aa:	dec    esi
  4111ab:	call   0x4113c9
  4111b0:	add    BYTE PTR [edi],ch
  4111b2:	push   edx
  4111b3:	pop    ecx
  4111b4:	mov    DWORD PTR [ebp+ebx*2-0x40],ebp
  4111b8:	or     BYTE PTR [eax],ah
  4111ba:	push   edi
  4111bb:	xchg   ebp,esp
  4111bd:	xchg   ecx,eax
  4111be:	loopne 0x41123e
  4111c0:	add    BYTE PTR [eax],dl
  4111c2:	add    dl,BYTE PTR [ebx+0x56]
  4111c5:	xlat   BYTE PTR ds:[ebx]
  4111c6:	mov    WORD PTR [ebx+0x8],es
  4111c9:	pop    ebp
  4111ca:	push   ebp
  4111cb:	jle    0x411186
  4111cd:	add    BYTE PTR [edx],al
  4111cf:	add    BYTE PTR [eax],al
  4111d1:	pop    ecx
  4111d2:	ret    
  4111d3:	add    eax,0x81318ce4
  4111d9:	ss add al,0x0
  4111dc:	cld    
  4111dd:	rol    dl,1
  4111df:	in     al,0x6
  4111e1:	pop    ebx
  4111e2:	cmp    edi,DWORD PTR [edi-0x19]
  4111e5:	pusha  
  4111e6:	(bad)  
  4111e7:	(bad)  
  4111e8:	jmp    DWORD PTR [ecx-0x29]
  4111eb:	or     BYTE PTR [ecx],cl
  4111ed:	scas   al,BYTE PTR es:[edi]
  4111ee:	mov    WORD PTR [esi],?
  4111f0:	xor    DWORD PTR [edi],0xa0fc0004
  4111f6:	ret    0xaed
  4111f9:	mov    edi,ebp
  4111fb:	xchg   DWORD PTR [edx],esi
  4111fd:	cmp    DWORD PTR [eax+0x237b8238],esp
  411203:	jnp    0x41123c
  411205:	mov    eax,0x390e423e
  41120a:	pop    ss
  41120b:	inc    ecx
  41120c:	out    dx,al
  41120d:	aas    
  41120e:	and    dl,al
  411210:	mov    BYTE PTR [edi],bl
  411212:	mov    ds:0x5f0080d3,al
  411217:	pop    ss
  411218:	adc    al,BYTE PTR [edx]
  41121a:	cmp    DWORD PTR [eax+0x28],ebx
  41121d:	or     esi,DWORD PTR [edx-0x11d7cee]
  411223:	push   edi
  411224:	and    ecx,DWORD PTR [edi]
  411226:	inc    eax
  411227:	gs jnp 0x411241
  41122a:	mov    eax,0x3af00279
  41122f:	pop    ss
  411230:	inc    ecx
  411231:	jmp    0x904b:0x88302035
  411238:	xor    eax,DWORD PTR [edx+0x2f7b22fb]
  41123e:	mov    edx,0x4a0acfbc
  411243:	mov    al,ds:0xd6ba48d3
  411248:	push   es
  411249:	test   DWORD PTR [eax],eax
  41124b:	push   esp
  41124c:	mov    BYTE PTR [esp+edi*2+0x16e7b297],cl
  411253:	pop    ss
  411254:	add    al,BYTE PTR [eax]
  411256:	jbe    0x41129d
  411258:	stos   DWORD PTR es:[edi],eax
  411259:	mov    ch,bl
  41125b:	dec    ebx
  41125c:	inc    esp
  41125d:	add    edi,DWORD PTR [ecx]
  41125f:	mov    ds:0xb13523c6,al
  411264:	pop    edx
  411265:	dec    ebx
  411266:	clc    
  411267:	push   ss
  411268:	jnp    0x411273
  41126a:	ror    BYTE PTR [esi],0x83
  41126d:	sar    DWORD PTR ds:0xb803429a,0x10
  411274:	(bad)  [eax+edi*8-0x1]
  411278:	call   0x41dd130e
  41127d:	in     al,0x3
  41127f:	mov    dl,0xc3
  411281:	or     al,0x8
  411283:	ret    
  411284:	push   edi
  411285:	sbb    al,0xc5
  411287:	jbe    0x411302
  411289:	lock jl 0x4112cc
  41128c:	sub    DWORD PTR [eax-0x13be45f8],0x1bd76084
  411296:	lds    edx,FWORD PTR [esi-0x72]
  411299:	xchg   esi,eax
  41129a:	inc    edx
  41129b:	cmp    al,BYTE PTR [eax]
  41129d:	xor    al,0x7d
  41129f:	pop    ebp
  4112a0:	scas   eax,DWORD PTR es:[edi]
  4112a1:	cmp    BYTE PTR [ebx+0x7ae0c2b3],dh
  4112a7:	xchg   ebp,eax
  4112a8:	cld    
  4112a9:	jae    0x411264
  4112ab:	es scas eax,DWORD PTR es:[edi]
  4112ad:	sbb    BYTE PTR [edi+eax*2],bl
  4112b0:	add    cl,ch
  4112b2:	add    edx,DWORD PTR [ecx+0x16c51c58]
  4112b8:	jge    0x411265
  4112ba:	or     edi,DWORD PTR [esi+0x18]
  4112bd:	das    
  4112be:	add    al,0x39
  4112c0:	add    BYTE PTR [edx-0x47f78a80],bh
  4112c6:	sbb    esp,DWORD PTR [esi+0x0]
  4112c9:	jmp    0x4cbaa4d1
  4112ce:	mov    cl,0xf8
  4112d0:	clc    
  4112d1:	call   0x505c688
  4112d6:	cld    
  4112d7:	ret    
  4112d8:	mov    ah,0xcc
  4112da:	inc    ecx
  4112dc:	inc    ecx
  4112dd:	test   al,0xfe
  4112df:	add    BYTE PTR [ecx+edi*8+0x79262527],cl
  4112e6:	loop   0x411364
  4112e8:	jns    0x4112aa
  4112ea:	cmc    
  4112eb:	push   ebp
  4112ec:	inc    ecx
  4112ed:	inc    ecx
  4112ee:	pop    es
  4112ef:	hlt    
  4112f0:	xor    esi,esi
  4112f2:	call   FWORD PTR [edi-0x5d]
  4112f5:	js     0x4112b7
  4112f7:	test   eax,0xa8085597
  4112fc:	push   ebp
  4112fd:	add    ecx,DWORD PTR [ebx]
  4112ff:	repz add eax,0xbbb888f9
  411305:	inc    ecx
  411306:	add    esp,DWORD PTR [eax-0x5]
  411309:	retf   0x7f0e
  41130c:	arpl   ax,di
  41130e:	sbb    BYTE PTR [eax-0x3],dh
  411311:	retf   0x7f0e
  411314:	pop    ebp
  411315:	inc    eax
  411316:	loopne 0x4112e9
  411318:	aad    0xf8
  41131a:	mov    BYTE PTR [eax-0xf4a0586],ch
  411320:	std    
  411321:	pop    ds
  411322:	psrad  mm0,QWORD PTR [eax+0x78]
  411326:	or     DWORD PTR [eax+0x7d],esp
  411329:	retf   
  41132a:	push   cs
  41132b:	aas    
  41132c:	sub    eax,0x23f1e040
  411331:	stc    
  411332:	push   cs
  411333:	aas    
  411334:	cmp    bh,cl
  411336:	shl    BYTE PTR [eax+0x10],0xa6
  41133a:	shl    ecx,0x3a
  41133d:	scas   eax,DWORD PTR es:[edi]
  41133e:	mov    dh,BYTE PTR [ebp-0x5a74fce2]
  411344:	add    BYTE PTR [esi],dl
  411346:	test   DWORD PTR [edx+0x17237deb],0x8ac13571
  411350:	jmp    0x4113cf
  411352:	and    ecx,DWORD PTR [edi]
  411354:	popa   
  411355:	xor    eax,0x7deb8ac1
  41135a:	and    eax,DWORD PTR [edi]
  41135c:	jno    0x411393
  41135e:	ror    DWORD PTR [eax-0x308802ce],0x6a
  411365:	js     0x411366
  411367:	mov    ch,cl
  411369:	xor    bh,dh
  41136b:	mov    al,BYTE PTR [eax]
  41136d:	mov    ds:0x2818e6c3,al
  411372:	add    al,0x41
  411374:	mov    edx,DWORD PTR [edx+0x1810e6c3]
  41137a:	add    al,0x41
  41137c:	mov    esp,DWORD PTR [edx+0x808e6bd]
  411382:	inc    DWORD PTR [eax-0x75]
  411385:	add    BYTE PTR [esi+0x576188ce],0xc0
  41138c:	or     BYTE PTR [eax+0x51],ah
  41138f:	xchg   ebp,esp
  411391:	rcr    edi,cl
  411393:	or     dl,BYTE PTR [ebx+0x3e]
  411396:	push   ebp
  411397:	mov    DWORD PTR [ebp+0x74],eax
  41139a:	xchg   DWORD PTR [ebx+0x8],edx
  41139d:	retf   
  41139e:	or     eax,0x87484d89
  4113a3:	inc    edi
  4113a4:	add    al,0xd9
  4113a6:	sar    BYTE PTR [edi+0x2f1c00eb],1
  4113ac:	leave  
  4113ad:	add    ebx,0x170f0d0b
  4113b3:	das    
  4113b4:	xlat   BYTE PTR ds:[ebx]
  4113b5:	mov    esi,eax
  4113b7:	mov    ebp,0xefd104e4
  4113bc:	xchg   esi,edx
  4113be:	popa   
  4113bf:	jmp    0x81f1:0x8556310e
  4113c6:	jae    0x4113c3
  4113c8:	std    
  4113c9:	add    al,ah
  4113cb:	xlat   BYTE PTR cs:[ebx]
  4113cd:	mov    DWORD PTR [esi],edx
  4113cf:	mov    ebp,0xefe110e4
  4113d4:	xchg   esi,ecx
  4113d6:	adc    edx,ebp
  4113d8:	add    BYTE PTR [ecx],dh
  4113da:	cs test ecx,esi
  4113dd:	add    DWORD PTR [ebx+0x2f],0x2ee33331
  4113e4:	fmul   DWORD PTR [ecx-0x1abd2ec7]
  4113ea:	cmp    ebp,DWORD PTR [eax]
  4113ec:	adc    DWORD PTR [eax+0x71dd87f],ecx
  4113f2:	push   0xb8f27af1
  4113f7:	test   BYTE PTR [edi+edi*8],0x97
  4113fb:	pop    ss
  4113fc:	rcr    ecx,1
  4113fe:	rol    BYTE PTR [ecx+0x41],0xe5
  411402:	xor    eax,ebp
  411404:	cmp    eax,0x1330488
  411409:	test   dl,0xbc
  41140c:	xadd   BYTE PTR [eax],al
  41140f:	pop    esi
  411410:	and    bh,BYTE PTR [edi-0x1a]
  411413:	cmp    BYTE PTR [eax-0x5f9ff7ef],dl
  411419:	xor    al,0x30
  41141b:	xchg   DWORD PTR [eax-0x52a57ff1],esp
  411421:	pop    eax
  411422:	test   eax,0x30282893
  411427:	pusha  
  411428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411429:	(bad)  
  41142a:	adc    eax,eax
  41142c:	push   ecx
  41142d:	inc    ecx
  41142e:	out    dx,al
  41142f:	dec    esi
  411430:	xchg   esi,eax
  411431:	and    eax,DWORD PTR [eax]
  411433:	mov    al,0x84
  411435:	stc    
  411436:	stc    
  411437:	neg    bl
  411439:	or     eax,DWORD PTR [edi]
  41143b:	cmp    DWORD PTR [edi],edx
  41143d:	add    cl,BYTE PTR [ecx+0x1b24d7ff]
  411443:	mov    al,0xd9
  411445:	inc    ecx
  411446:	out    dx,al
  411447:	xor    eax,0xf2080fa0
  41144c:	lahf   
  41144d:	inc    esp
  41144e:	cmp    cl,0x1a
  411451:	iret   
  411452:	sbb    eax,0xe57fe8b0
  411457:	push   ds
  411458:	sahf   
  411459:	(bad)  
  41145a:	mov    ah,0x21
  41145c:	je     0x41141f
  41145e:	inc    ecx
  411460:	inc    DWORD PTR [ebp+0x42]
  411463:	xlat   BYTE PTR ds:[ebx]
  411464:	add    DWORD PTR [eax+0x24],ebp
  411467:	ret    0xe8ff
  41146a:	add    eax,DWORD PTR [edx+0x51]
  41146d:	shl    BYTE PTR [eax+0x2c6ffff9],0x0
  411474:	jns    0x41148e
  411476:	out    dx,al
  411477:	adc    BYTE PTR [edi+0x3903e80b],0xf5
  41147e:	xor    eax,0xe8bee9db
  411483:	jl     0x4114ec
  411485:	ds int 0xf2
  411488:	mov    ecx,0x3904d420
  41148d:	add    dl,ah
  41148f:	push   edx
  411490:	push   ss
  411491:	mov    ecx,0x92b00427
  411496:	mov    ah,0x7d
  411498:	je     0x411516
  41149a:	test   al,0x0
  41149c:	shl    BYTE PTR [ecx+edi*8],0xe9
  4114a0:	shr    DWORD PTR [ecx],0x69
  4114a3:	and    al,BYTE PTR [edi]
  4114a5:	jne    0x41147b
  4114a7:	push   eax
  4114a8:	push   ss
  4114a9:	mov    dl,0x27
  4114ab:	add    al,0x42
  4114ad:	lea    edx,[ebp+edi*2+0x295420f]
  4114b4:	mov    eax,0x39047c1f
  4114b9:	add    dl,ah
  4114bb:	push   edx
  4114bc:	pop    esi
  4114bd:	lods   al,BYTE PTR ds:[esi]
  4114be:	daa    
  4114bf:	add    al,0xc0
  4114c1:	daa    
  4114c2:	daa    
  4114c3:	sbb    esi,DWORD PTR [ecx+eax*4]
  4114c6:	inc    ebp
  4114c7:	or     dh,bh
  4114c9:	pop    es
  4114ca:	call   0xbb19c4cd
  4114cf:	(bad)  
  4114d0:	out    dx,al
  4114d1:	js     0x4114f8
  4114d3:	inc    ebp
  4114d4:	xlat   BYTE PTR ds:[ebx]
  4114d5:	out    dx,al
  4114d6:	and    eax,DWORD PTR [bx+si]
  4114d9:	loop   0x4114db
  4114db:	add    cl,ch
  4114dd:	cmp    bh,bl
  4114df:	mov    dh,0x1
  4114e1:	test   eax,eax
  4114e3:	call   edi
  4114e5:	sub    al,0x78
  4114e7:	aad    0x28
  4114e9:	sbb    ebp,ebx
  4114eb:	mov    BYTE PTR [esi],bh
  4114ed:	cld    
  4114ee:	adc    eax,0xf8466003
  4114f3:	cli    
  4114f4:	jo     0x4114f1
  4114f6:	cmp    DWORD PTR [edi-0x771a781b],0x3e1dbe17
  411500:	bound  ebp,QWORD PTR [ecx+0x4c]
  411503:	daa    
  411504:	cmp    al,0x7c
  411506:	pop    es
  411507:	xchg   DWORD PTR [esi+0x680515f5],edi
  41150d:	sbb    ecx,DWORD PTR [ebx]
  41150f:	(bad)  
  411510:	call   0x11f8104f
  411515:	scas   al,BYTE PTR es:[edi]
  411516:	sar    bh,0x6f
  411519:	adc    eax,DWORD PTR [eax-0x12]
  41151c:	out    0xbd,eax
  41151e:	push   ds
  41151f:	sti    
  411520:	jmp    0x5e4c155f
  411525:	bound  esi,QWORD PTR [eax+0x25bde940]
  41152b:	rol    BYTE PTR [esi-0x72197fd8],0x3a
  411532:	add    BYTE PTR [eax],al
  411534:	repnz mov ebx,edi
  411537:	dec    esi
  411538:	sub    BYTE PTR ds:0x7d7479,dh
  41153e:	xchg   ebp,eax
  41153f:	cmp    eax,0x780ea982
  411544:	rcr    BYTE PTR [edx],cl
  411546:	adc    edi,DWORD PTR [eax-0x23]
  411549:	push   0x58
  41154b:	(bad)  
  41154c:	mov    bl,BYTE PTR ds:0xa855df88
  411552:	cmp    bh,bl
  411554:	je     0x411556
  411556:	and    al,0x84
  411558:	ffree  st(1)
  41155a:	outs   dx,DWORD PTR ds:[esi]
  41155b:	add    DWORD PTR [ecx+0x30ce7],eax
  411561:	add    bl,bl
  411563:	mov    cl,0x26
  411565:	push   esp
  411566:	xchg   ecx,eax
  411567:	add    cl,BYTE PTR [ecx+0xcea11df]
  41156d:	add    DWORD PTR [edi-0x1],0x5a0fffe
  411574:	mov    ch,0x28
  411576:	ret    0xfe3b
  411579:	mov    BYTE PTR [edi],bh
  41157b:	mov    esp,0xe22116ed
  411580:	cli    
  411581:	add    BYTE PTR [eax+0x28b70b02],ah
  411587:	dec    esp
  411588:	aas    
  411589:	add    BYTE PTR [ecx],ah
  41158b:	repz std 
  41158d:	dec    ebp
  41158e:	mov    BYTE PTR [ebx+edi*2-0x8],bh
  411592:	pusha  
  411593:	pop    es
  411594:	sub    DWORD PTR [ebx-0x76020782],0xffffffa8
  41159b:	ret    0x1fde
  41159e:	fxch   st(1)
  4115a0:	iret   
  4115a1:	out    dx,al
  4115a2:	add    cl,bl
  4115a4:	ret    0xf107
  4115a7:	leave  
  4115a8:	retf   
  4115a9:	das    
  4115aa:	enter  0xbcc9,0x7f
  4115ae:	jecxz  0x41162a
  4115b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b1:	test   al,0xaa
  4115b3:	adc    esp,edx
  4115b5:	das    
  4115b6:	fldcw  WORD PTR [ecx-0x1f4034]
  4115bc:	mov    dl,ah
  4115be:	sar    DWORD PTR [esi-0x6df63f77],1
  4115c4:	mov    esi,ecx
  4115c6:	shr    DWORD PTR [eax+0x4],0x2f
  4115ca:	enter  0xbb89,0x7f
  4115ce:	jecxz  0x411609
  4115d0:	scas   al,BYTE PTR es:[edi]
  4115d1:	add    edi,edi
  4115d3:	cmp    eax,ebp
  4115d5:	sub    cl,BYTE PTR [eax+0x723d901]
  4115db:	sub    cl,bl
  4115dd:	jp     0x4115ae
  4115df:	clc    
  4115e0:	mov    edi,0xa1013105
  4115e5:	inc    esp
  4115e6:	sbb    dl,0x2a
  4115e9:	shl    DWORD PTR [edx],cl
  4115eb:	or     ch,BYTE PTR [eax]
  4115ed:	sub    DWORD PTR [eax+0x123d891],ecx
  4115f3:	push   0x78c77ad9
  4115f8:	out    dx,eax
  4115f9:	repz xor BYTE PTR [ecx-0x657fbb70],cl
  411600:	push   cs
  411601:	pop    es
  411602:	dec    DWORD PTR [esi+0x882c48]
  411608:	popa   
  411609:	pop    eax
  41160a:	and    cl,BYTE PTR [edi]
  41160c:	dec    eax
  41160d:	pop    eax
  41160e:	jns    0x4115d7
  411610:	js     0x411651
  411612:	(bad)  
  411613:	xor    BYTE PTR [ecx+0x5a8043a0],cl
  411619:	push   cs
  41161a:	test   DWORD PTR [esi],0x8a2c082e
  411620:	cld    
  411621:	push   ds
  411622:	inc    ecx
  411623:	loop   0x41165a
  411625:	or     BYTE PTR [ebx],bh
  411627:	mov    BYTE PTR [ecx],ah
  411629:	call   0x7bd:0x923507bd
  411630:	rol    BYTE PTR [esi],0xa7
  411633:	pop    ebp
  411634:	xchg   edx,eax
  411635:	mov    al,ds:0xefb5c16
  41163a:	add    dl,BYTE PTR [ebx-0x79]
  41163d:	xchg   edx,eax
  41163e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163f:	and    eax,DWORD PTR [ebp-0xb]
  411642:	jl     0x4116b7
  411644:	push   ebp
  411645:	daa    
  411646:	mov    al,ds:0xf6000f84
  41164b:	outs   dx,DWORD PTR ds:[esi]
  41164c:	jmp    0x4783ad45
  411651:	dec    ebp
  411652:	sub    BYTE PTR [ebx-0x4c1f3f43],dh
  411658:	fisubr WORD PTR [edx-0x6820f7be]
  41165e:	adc    BYTE PTR [edi-0x3beff87],dh
  411664:	rol    BYTE PTR [ebp*1-0x41f27008],cl
  41166b:	mov    ah,0x0
  41166d:	(bad)  
  41166e:	mov    esi,0x97b70822
  411673:	inc    eax
  411674:	mov    dh,0xf9
  411676:	inc    DWORD PTR [eax]
  411678:	adc    BYTE PTR [ebx+0x3a90504],ah
  41167e:	inc    edx
  41167f:	lock add ebp,esp
  411682:	jbe    0x41168f
  411684:	mov    bl,0xfe
  411686:	mov    al,0x61
  411688:	mov    esi,0xf843793e
  41168d:	lods   eax,DWORD PTR ds:[esi]
  41168e:	stos   BYTE PTR es:[edi],al
  41168f:	loopne 0x411643
  411691:	push   es
  411692:	sbb    BYTE PTR [ebx],ah
  411694:	or     BYTE PTR [edi+0x4],ch
  411697:	inc    eax
  411698:	pop    esp
  411699:	repnz mov esi,0x7f578e8
  41169f:	sbb    BYTE PTR [edi+ecx*2],bl
  4116a2:	add    esi,DWORD PTR [ebp+0x1bd7d607]
  4116a8:	lds    eax,FWORD PTR [esi+0x73]
  4116ab:	sub    ecx,DWORD PTR [esi+ebp*8]
  4116ae:	pop    ss
  4116af:	(bad)
  4116b3:	add    BYTE PTR [ebp+edi*2-0x3f],bl
  4116b7:	call   0x18499434
  4116bc:	sbb    al,0x3
  4116be:	add    eax,0x756b077d
  4116c3:	jmp    FWORD PTR [ebx]
  4116c5:	cmp    eax,0x316be7b3
  4116ca:	add    bh,dh
  4116cc:	ret    0x177d
  4116cf:	pop    esp
  4116d0:	sub    eax,DWORD PTR [eax]
  4116d2:	cmc    
  4116d3:	add    edx,DWORD PTR [ebx+0x60]
  4116d6:	sbb    BYTE PTR [esi-0x15],bh
  4116d9:	stc    
  4116da:	stos   DWORD PTR es:[edi],eax
  4116db:	lods   eax,DWORD PTR ds:[esi]
  4116dc:	mov    ah,BYTE PTR [edx+eiz*8+0x51ed7476]
  4116e3:	mov    esp,0x1b8b99f7
  4116e8:	stc    
  4116e9:	xor    bh,BYTE PTR [esi]
  4116eb:	add    cl,BYTE PTR [esp+ebp*4+0x2a82b32a]
  4116f2:	mov    ch,0xae
  4116f4:	out    0x4,eax
  4116f6:	inc    edx
  4116f7:	add    bh,dh
  4116f9:	add    DWORD PTR [edx],0x21e940b7
  4116ff:	mov    esp,0x6a3299f7
  411704:	sti    
  411705:	div    BYTE PTR [edi]
  411707:	fwait
  411708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411709:	popf   
  41170a:	jge    0x41170f
  41170c:	mov    ebp,DWORD PTR [eiz*1+0x3e70e7b3]
  411713:	add    bh,dh
  411715:	bound  esp,QWORD PTR [ecx+0x4d248a07]
  41171b:	js     0x411761
  41171d:	(bad)
  411720:	out    dx,eax
  411721:	push   ecx
  411722:	jne    0x4116d8
  411724:	inc    eax
  411725:	jmp    0x1a38d2fb
  41172a:	and    eax,0x37a6fb92
  41172f:	fwait
  411730:	daa    
  411731:	sub    al,0xfc
  411733:	add    cl,BYTE PTR [ebx-0x4cbaffd4]
  411739:	out    0x8,eax
  41173b:	xor    DWORD PTR [edx],eax
  41173d:	inc    BYTE PTR [eax]
  41173f:	stos   DWORD PTR es:[edi],eax
  411740:	pop    eax
  411741:	cli    
  411742:	mov    ebx,DWORD PTR [ebp-0x14]
  411745:	xchg   DWORD PTR [ebp-0x7c],eax
  411748:	test   BYTE PTR [ebx-0x10],bl
  41174b:	cmp    BYTE PTR [ebx+ecx*2+0x43881041],ah
  411752:	clc    
  411753:	mov    al,0xe6
  411755:	inc    ebp
  411756:	cld    
  411757:	xchg   edx,edi
  411759:	data16 test al,0xc5
  41175c:	cmp    edi,esi
  41175e:	mov    WORD PTR [ebp+0x39e84eee],cs
  411764:	clc    
  411765:	std    
  411766:	jmp    FWORD PTR [esi-0x5f07bc79]
  41176c:	out    0xde,al
  41176e:	sti    
  41176f:	pop    ss
  411770:	cli    
  411771:	add    esi,0x458b54a8
  411777:	push   eax
  411778:	dec    edi
  411779:	out    0xd3,al
  41177b:	dec    ebx
  41177c:	cli    
  41177d:	std    
  41177e:	pop    esi
  41177f:	fild   DWORD PTR [ebx+0x7625dea]
  411785:	(bad)  
  411786:	push   esp
  411787:	sbb    eax,esp
  411789:	jg     0x411777
  41178b:	in     al,0xfb
  41178d:	(bad)  
  41178e:	inc    DWORD PTR [ebx+0x52]
  411791:	push   ebp
  411792:	mov    esi,DWORD PTR ds:0x54758904
  411798:	mov    DWORD PTR [ebx-0x389ff80],eax
  41179e:	std    
  41179f:	push   eax
  4117a0:	mov    BYTE PTR [edx+0x6860ffff],bh
  4117a6:	(bad)  
  4117a7:	cmp    BYTE PTR [bp+si+0x3f],cl
  4117ab:	add    BYTE PTR [eax-0x72],bh
  4117ae:	cld    
  4117af:	call   DWORD PTR [edi-0x5d752fd2]
  4117b5:	and    al,0x4c
  4117b7:	inc    ecx
  4117b8:	cmp    DWORD PTR [edi],edx
  4117ba:	jp     0x4117bf
  4117bc:	imul   edx,ebp,0xffffff80
  4117bf:	stc    
  4117c0:	xor    ebx,edi
  4117c2:	adc    al,dh
  4117c4:	mov    esp,0xefe05ff
  4117c9:	sbb    DWORD PTR [edx],eax
  4117cb:	add    BYTE PTR [ecx],bh
  4117cd:	jle    0x41177e
  4117cf:	mov    BYTE PTR [ecx],cl
  4117d1:	xchg   ecx,eax
  4117d2:	jle    0x411847
  4117d4:	mul    DWORD PTR [edx-0x40f4cffc]
  4117da:	ror    DWORD PTR [edx-0x1fbd444],cl
  4117e0:	ficom  WORD PTR [eax-0x3d288482]
  4117e6:	add    al,0xfe
  4117e8:	mov    ah,0x43
  4117ea:	add    al,0xfe
  4117ec:	(bad)  
  4117ed:	sahf   
  4117ee:	jbe    0x41186b
  4117f0:	mov    edi,0xf70e04da
  4117f5:	push   ss
  4117f6:	jg     0x4117d7
  4117f8:	cs sahf 
  4117fa:	inc    esi
  4117fb:	jnp    0x4117a4
  4117fd:	repnz add al,0xe
  411800:	add    bh,ah
  411802:	cmp    dl,cl
  411804:	test   ecx,0x39023c18
  41180a:	push   esi
  41180b:	rol    BYTE PTR [edx+0x4851f83],0xb9
  411812:	fiadd  WORD PTR [ebx]
  411814:	jne    0x411895
  411816:	leave  
  411817:	lods   eax,DWORD PTR ds:[esi]
  411818:	out    0xe2,eax
  41181a:	sub    BYTE PTR [ebx],al
  41181c:	(bad)  
  41181d:	mov    edx,0x5efd8a7c
  411822:	cmp    al,BYTE PTR [edx]
  411824:	adc    BYTE PTR [edx],0x17
  411827:	lea    esp,[esi-0x2757346]
  41182d:	inc    esi
  41182e:	push   edx
  41182f:	add    dh,BYTE PTR [ebp-0x61]
  411832:	add    BYTE PTR [esi+edi*2-0x4a],dh
  411836:	add    bl,BYTE PTR [ebp+0xd187e04]
  41183c:	add    edi,DWORD PTR [ecx]
  41183e:	add    BYTE PTR [esi],ch
  411840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411841:	xor    DWORD PTR [edi-0x6c],0xffffffa6
  411845:	clc    
  411846:	imul   eax
  411848:	scas   al,BYTE PTR es:[edi]
  411849:	rcr    DWORD PTR [edx],0x67
  41184c:	pop    ss
  41184d:	mov    dl,0xfe
  41184f:	call   0xbdeb8257
  411854:	js     0x4117eb
  411856:	clc    
  411857:	jno    0x4117e7
  411859:	inc    edx
  41185a:	jae    0x4118c7
  41185c:	and    esp,0x0
  41185f:	dec    ebp
  411860:	mov    bl,0xd6
  411862:	add    al,ch
  411864:	add    eax,DWORD PTR [eax]
  411866:	cmp    DWORD PTR [esi-0x4de96418],edx
  41186c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41186d:	add    edx,ecx
  41186f:	sub    al,0x2b
  411871:	add    al,0xbf
  411873:	into   
  411874:	cmp    bh,BYTE PTR [ecx-0x48]
  411877:	xlat   BYTE PTR ds:[ebx]
  411878:	scas   al,BYTE PTR es:[edi]
  411879:	ret    0x78ae
  41187c:	in     al,dx
  41187d:	sar    eax,1
  41187f:	jl     0x411893
  411881:	repz and cl,BYTE PTR [edi]
  411884:	sub    eax,0xfd020e7e
  411889:	add    edi,DWORD PTR [ecx]
  41188b:	add    cl,ch
  41188d:	add    edx,DWORD PTR [edx-0x4eeca055]
  411893:	jp     0x4118f1
  411895:	add    dh,BYTE PTR [edi+0x0]
  411898:	pop    ss
  411899:	(bad)  
  41189a:	pusha  
  41189b:	iret   
  41189c:	popa   
  41189d:	mov    ebp,ebp
  41189f:	add    ebp,ecx
  4118a1:	add    esi,DWORD PTR [ecx+0x5702447a]
  4118a7:	add    BYTE PTR [ebp-0xfe3a77],bh
  4118ad:	mov    ch,0x3a
  4118af:	jbe    0x41183d
  4118b1:	sub    eax,0xf6fe023b
  4118b6:	clc    
  4118b7:	add    DWORD PTR [ecx-0x44764577],eax
  4118bd:	adc    eax,0xdefdfe3b
  4118c2:	loopne 0x411901
  4118c4:	das    
  4118c5:	add    ebp,0xeac3ff
  4118cb:	cmp    al,BYTE PTR [ecx+0x42]
  4118ce:	push   0x7
  4118d0:	adc    DWORD PTR [ebx-0x1c],edi
  4118d3:	mov    edx,0xdc0039
  4118d8:	push   edi
  4118d9:	push   esi
  4118da:	push   ecx
  4118db:	cmp    edi,esp
  4118dd:	std    
  4118de:	push   esi
  4118df:	mov    esi,0x3a4f78a3
  4118e4:	inc    BYTE PTR [eax]
  4118e6:	imul   edx,DWORD PTR [esi],0xb6867300
  4118ec:	mov    ebx,0xfe3a3778
  4118f1:	add    BYTE PTR [eax+ebx*4+0x3b69838b],dh
  4118f8:	(bad)  
  4118f9:	std    
  4118fa:	mov    ecx,0xe900a7a2
  4118ff:	cmp    bl,BYTE PTR [ebp+0x5e]
  411902:	mov    dl,0xad
  411904:	in     al,dx
  411905:	pop    ebx
  411906:	sub    eax,DWORD PTR [ebp+0x0]
  411909:	push   ecx
  41190a:	xchg   edi,eax
  41190b:	xrelease mov BYTE PTR [ebp+ecx*8+0x2a],al
  411910:	mov    WORD PTR [ebp+0x6c661456],cx
  411917:	xchg   edi,eax
  411918:	jae    0x411923
  41191a:	jo     0x41189c
  41191c:	mov    edi,DWORD PTR [eax-0x7]
  41191f:	sar    BYTE PTR [ecx+0x84fe8ff],1
  411925:	mov    eax,DWORD PTR [eax]
  411927:	adc    BYTE PTR [eax*4-0x2dcb0939],dl
  41192e:	sldt   edi
  411931:	aam    0x52
  411933:	adc    DWORD PTR [eax-0x5b17aff5],0xfffffffa
  41193a:	sti    
  41193b:	dec    DWORD PTR [eax+0x2c]
  41193e:	dec    ecx
  41193f:	inc    ecx
  411940:	adc    bl,ch
  411942:	cmp    bh,cl
  411944:	scas   eax,DWORD PTR es:[edi]
  411945:	add    DWORD PTR [esi],ecx
  411947:	mov    bh,0xdb
  411949:	push   ebp
  41194a:	push   ebx
  41194b:	call   0x3d1360
  411950:	cmp    BYTE PTR [ecx+ecx*2+0x26eb1041],ch
  411957:	stc    
  411958:	pop    edi
  411959:	add    cl,BYTE PTR [esi]
  41195b:	mov    bh,0x7b
  41195d:	push   esi
  41195e:	push   esi
  41195f:	call   0x3d1310
  411964:	(bad)  
  411965:	pusha  
  411966:	push   edi
  411967:	ret    0x2c8
  41196a:	dec    edi
  41196b:	mov    ebp,DWORD PTR [esi+eiz*1+0xe785308]
  411972:	cmc    
  411973:	dec    DWORD PTR [edi]
  411975:	test   BYTE PTR [edi+0x2a080],bh
  41197b:	mov    eax,0x3d4f88
  411980:	sbb    edx,DWORD PTR [ebx]
  411982:	test   DWORD PTR [ebx],edx
  411984:	adc    eax,ebx
  411986:	add    al,0x83
  411988:	arpl   WORD PTR [edi],ax
  41198a:	cmp    DWORD PTR [eax+0x720043dd],ebp
  411990:	aas    
  411991:	mov    ebx,0xd1004da8
  411996:	add    al,BYTE PTR [edi+0x7f14e910]
  41199c:	rcl    BYTE PTR [ebx+eax*4-0x41],0x4
  4119a1:	cmp    DWORD PTR [esp+ebp*1],edx
  4119a4:	dec    esi
  4119a5:	clc    
  4119a6:	call   0xab34071e
  4119ab:	or     BYTE PTR [eax],al
  4119ad:	jmp    0xec1a:0x31246071
  4119b4:	call   0x8040c6fa
  4119b9:	cli    
  4119ba:	addr16 add al,0x0
  4119bd:	cmp    DWORD PTR [edi+0x2c],ebx
  4119c0:	dec    ebx
  4119c1:	js     0x4119aa
  4119c3:	mov    WORD PTR [ecx],ss
  4119c5:	mov    al,0xf7
  4119c7:	test   cl,al
  4119c9:	cmp    eax,0x4c04c46a
  4119ce:	dec    edi
  4119cf:	dec    ebp
  4119d0:	aas    
  4119d1:	cmp    ecx,edi
  4119d3:	lock mov eax,0x411cd1
  4119d9:	ret    0x8afa
  4119dc:	adc    BYTE PTR [edx-0x67ef7d6],bh
  4119e2:	jmp    0x411a22
  4119e4:	sub    BYTE PTR [edi-0x58],ch
  4119e7:	add    DWORD PTR [edx-0x1a],esi
  4119ea:	mov    ds:0x943904c3,al
  4119ef:	mov    ah,bl
  4119f1:	mov    edx,0x67511c43
  4119f6:	bound  ebx,QWORD PTR [ebp+0x8]
  4119f9:	add    dl,al
  4119fb:	pushf  
  4119fc:	or     eax,0x541ef48b
  411a01:	push   ecx
  411a02:	xchg   ecx,eax
  411a03:	add    al,0xfc
  411a05:	std    
  411a06:	sahf   
  411a07:	pop    esp
  411a08:	inc    ebp
  411a09:	lock jmp 0xe9495d82
  411a0f:	push   cs
  411a10:	in     al,0xf8
  411a12:	xchg   dh,dh
  411a14:	mov    es,WORD PTR [ebx-0x6f]
  411a17:	xchg   edi,eax
  411a18:	test   cl,al
  411a1a:	dec    ecx
  411a1b:	add    BYTE PTR [edx],bh
  411a1d:	in     al,dx
  411a1e:	mov    al,bh
  411a20:	fiadd  WORD PTR [eax]
  411a22:	shl    BYTE PTR [edi-0x74c6bcdd],1
  411a28:	and    al,0xfc
  411a2a:	jmp    0x4d3c5f16
  411a2f:	std    
  411a30:	dec    edi
  411a31:	lods   al,BYTE PTR ds:[esi]
  411a32:	cmc    
  411a33:	ds out 0x8e,eax
  411a36:	cli    
  411a37:	out    dx,eax
  411a38:	pop    ss
  411a39:	in     al,dx
  411a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a3b:	mul    DWORD PTR [esi+0x2ba8a000]
  411a41:	inc    ebx
  411a42:	cmp    DWORD PTR [ebx-0x177613d4],ecx
  411a48:	or     bl,bh
  411a4a:	adc    al,0xfd
  411a4c:	jb     0x411aac
  411a4e:	or     eax,0xbef42489
  411a53:	inc    edx
  411a54:	jae    0x4119e0
  411a56:	(bad)  
  411a57:	lock bound ebx,QWORD PTR [esi-0x13]
  411a5b:	mov    BYTE PTR [ebx+ebp*8+0x5342b600],ch
  411a62:	mov    al,BYTE PTR [edx+0x722bbfe8]
  411a68:	aas    
  411a69:	out    0x8e,eax
  411a6b:	jp     0x411a65
  411a6d:	xchg   edi,eax
  411a6e:	jmp    0x411a80
  411a70:	idiv   DWORD PTR [esi]
  411a72:	add    BYTE PTR [eax+0x28],dl
  411a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a76:	inc    edx
  411a77:	cmp    DWORD PTR [ebx-0x17f60c5c],ecx
  411a7d:	aam    0xfa
  411a7f:	lods   al,BYTE PTR ds:[esi]
  411a80:	cld    
  411a81:	(bad)  
  411a82:	sub    esi,edx
  411a84:	ds out 0x8e,eax
  411a87:	cli    
  411a88:	out    0xb7,eax
  411a8a:	jmp    0x411ac0
  411a8c:	test   DWORD PTR [esi],0xfb5ac300
  411a92:	mov    edi,edx
  411a94:	out    dx,eax
  411a95:	add    BYTE PTR [eax-0x9],ah
  411a98:	sti    
  411a99:	xchg   DWORD PTR [edx+ebp*2-0x3d22a47a],ecx
  411aa0:	inc    eax
  411aa1:	call   0x88350b16
  411aa6:	xor    al,0x4d
  411aa8:	addr16 test al,0x1c
  411aab:	cld    
  411aac:	dec    DWORD PTR [edx-0x17b0b2d4]
  411ab2:	rol    BYTE PTR [ebp-0x6],0xfd
  411ab6:	inc    ecx
  411ab7:	lea    ecx,[eax+0x3f]
  411aba:	jmp    0x3a315a88
  411abf:	sbb    eax,0x9ef8ea
  411ac4:	imul   ebp,DWORD PTR es:[eax-0x74ff8bdc],0xe8512524
  411acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad0:	or     eax,0xa817fdfe
  411ad5:	aas    
  411ad6:	clc    
  411ad7:	sbb    DWORD PTR ds:0xf66ef885,ecx
  411add:	xchg   DWORD PTR [esi-0xf],eax
  411ae0:	mov    al,BYTE PTR [edi-0x1772a6bd]
  411ae6:	jne    0x411b39
  411ae8:	fdivp  st(5),st
  411aea:	and    DWORD PTR [edi],0xac8b522d
  411af0:	loop   0x411b42
  411af2:	call   0xfe3eddca
  411af7:	xchg   edi,eax
  411af8:	arpl   WORD PTR [ebx+0x8788cec],ax
  411afe:	add    BYTE PTR [ebp+edi*4-0x36f28021],bh
  411b05:	sti    
  411b06:	std    
  411b07:	jmp    0x62966d17
  411b0c:	sbb    BYTE PTR [eax],cl
  411b0e:	mov    DWORD PTR [eax],eax
  411b10:	or     eax,0x1085890b
  411b15:	cli    
  411b16:	sti    
  411b17:	jmp    DWORD PTR [eax+0x67fe54e7]
  411b1d:	cli    
  411b1e:	push   0x0
  411b20:	or     BYTE PTR [esi+ecx*2],ch
  411b23:	inc    ecx
  411b24:	push   eax
  411b25:	out    0xe5,eax
  411b27:	std    
  411b28:	add    BYTE PTR [edi-0x252dd206],al
  411b2e:	sub    BYTE PTR [eax],0x4e
  411b31:	and    DWORD PTR [eax+ecx*4],eax
  411b34:	add    al,0x42
  411b36:	inc    ecx
  411b37:	jg     0x411b33
  411b39:	push   0x9dc7ed7b
  411b3e:	ja     0x411b3e
  411b40:	call   edi
  411b42:	add    eax,DWORD PTR [eax]
  411b44:	add    BYTE PTR [eax],dl
  411b46:	out    0x54,al
  411b48:	mov    eax,eax
  411b4a:	mov    eax,DWORD PTR [ecx-0x406398c]
  411b50:	xor    DWORD PTR [edx-0x6274cf1b],esi
  411b56:	jae    0x411b56
  411b58:	inc    DWORD PTR [edi+0x667c818c]
  411b5e:	cli    
  411b5f:	sti    
  411b60:	call   FWORD PTR [ebp+0x73]
  411b63:	(bad)  
  411b64:	inc    DWORD PTR [edi-0x7983767a]
  411b6a:	cli    
  411b6b:	sti    
  411b6c:	shufps xmm7,xmm5,0x7e
  411b70:	loopne 0x411b69
  411b72:	test   DWORD PTR [ecx-0x405f984],edi
  411b78:	(bad)  
  411b7a:	cmp    ch,BYTE PTR ds:0xc60418f8
  411b80:	add    esp,DWORD PTR [eax+0x5a83423d]
  411b86:	pop    ss
  411b87:	jns    0x411b8e
  411b89:	cmp    DWORD PTR [ecx+0x3a],ebp
  411b8c:	add    BYTE PTR [eax],al
  411b8e:	or     al,0x23
  411b90:	push   ebx
  411b91:	push   esi
  411b92:	mov    eax,ds:0x86fdfb88
  411b97:	gs test al,0x78
  411b9a:	jg     0x411b8d
  411b9c:	sti    
  411b9d:	add    BYTE PTR [ecx-0x698cfe53],bh
  411ba3:	gs mov ebp,0xfbd96778
  411ba9:	add    ah,ah
  411bab:	jb     0x411b3a
  411bad:	cmp    DWORD PTR [ecx-0x16020436],0xffffffd0
  411bb4:	(bad)  
  411bb5:	sti    
  411bb6:	inc    esi
  411bb7:	mov    ecx,0x5fe25e5b
  411bbc:	lock pop ebx
  411bbe:	sti    
  411bbf:	fild   WORD PTR [ecx]
  411bc1:	push   ebx
  411bc2:	ror    BYTE PTR [esp+edx*2-0x78ce75b0],0x53
  411bca:	xor    DWORD PTR [esi+0x5d],ebx
  411bcd:	or     al,0xc2
  411bcf:	adc    al,0x14
  411bd1:	das    
  411bd2:	add    BYTE PTR [esi+0x8],ch
  411bd5:	cmpxchg DWORD PTR [ebx],esp
  411bd8:	or     eax,0x12ebb3f8
  411bdd:	mov    BYTE PTR ds:0xf08142d0,bh
  411be3:	out    dx,eax
  411be4:	jge    0x411bd1
  411be6:	mov    dh,BYTE PTR [ebp+0x52e3ace9]
  411bec:	sti    
  411bed:	das    
  411bee:	jmp    0x411c4c
  411bf0:	adc    BYTE PTR [edx],bl
  411bf2:	add    bl,al
  411bf4:	jmp    0x411c25
  411bf6:	xor    bh,BYTE PTR [eax]
  411bf8:	outs   dx,DWORD PTR ds:[esi]
  411bf9:	add    DWORD PTR [edx-0x46],eax
  411bfc:	sub    eax,0xf8a97c0c
  411c01:	iret   
  411c02:	mov    dh,ch
  411c04:	(bad)  
  411c05:	sti    
  411c06:	sti    
  411c07:	mov    cl,0x4
  411c09:	fld    DWORD PTR [ecx-0x48]
  411c0c:	neg    bh
  411c0e:	jg     0x411b98
  411c10:	pop    edx
  411c11:	mov    dl,0x8a
  411c13:	popf   
  411c14:	pop    ebx
  411c15:	sub    DWORD PTR [eax],edx
  411c17:	cmp    DWORD PTR [eax],eax
  411c19:	out    0x3,eax
  411c1b:	cmp    DWORD PTR [eax],eax
  411c1d:	out    0x3,eax
  411c1f:	cmp    DWORD PTR [eax],eax
  411c21:	out    0x3,eax
  411c23:	cmp    DWORD PTR [eax],eax
  411c25:	out    0x3,eax
  411c27:	cmp    DWORD PTR [eax],eax
  411c29:	out    0x3,eax
  411c2b:	cmp    DWORD PTR [eax],eax
  411c2d:	out    0x3,eax
  411c2f:	cmp    DWORD PTR [eax],eax
  411c31:	out    0x3,eax
  411c33:	cmp    DWORD PTR [eax],eax
  411c35:	out    0x3,eax
  411c37:	cmp    DWORD PTR [eax],eax
  411c39:	out    0x3,eax
  411c3b:	cmp    DWORD PTR [eax],eax
  411c3d:	out    0x3,eax
  411c3f:	cmp    DWORD PTR [eax],eax
  411c41:	out    0x3,eax
  411c43:	cmp    DWORD PTR [eax],eax
  411c45:	out    0x3,eax
  411c47:	cmp    DWORD PTR [eax],eax
  411c49:	out    0x3,eax
  411c4b:	cmp    DWORD PTR [eax],eax
  411c4d:	out    0x3,eax
  411c4f:	cmp    DWORD PTR [eax],eax
  411c51:	out    0x3,eax
  411c53:	cmp    DWORD PTR [eax],eax
  411c55:	out    0x3,eax
  411c57:	add    BYTE PTR [ecx],bh
  411c59:	add    bh,ah
  411c5b:	add    edi,DWORD PTR [ecx]
  411c5d:	add    bh,ah
  411c5f:	add    edi,DWORD PTR [ecx]
  411c61:	add    bh,ah
  411c63:	add    edi,DWORD PTR [ecx]
  411c65:	add    bh,ah
  411c67:	add    edi,DWORD PTR [ecx]
  411c69:	add    bh,ah
  411c6b:	add    edi,DWORD PTR [ecx]
  411c6d:	add    bh,ah
  411c6f:	add    edi,DWORD PTR [ecx]
  411c71:	add    bh,ah
  411c73:	add    edi,DWORD PTR [ecx]
  411c75:	add    bh,ah
  411c77:	add    edi,DWORD PTR [ecx]
  411c79:	add    bh,ah
  411c7b:	add    edi,DWORD PTR [ecx]
  411c7d:	add    BYTE PTR [eax],al
  411c7f:	jmp    0xe9411cbe
  411c84:	cmp    al,BYTE PTR [eax]
  411c86:	add    cl,ch
  411c88:	cmp    al,BYTE PTR [eax]
  411c8a:	add    cl,ch
  411c8c:	cmp    al,BYTE PTR [eax]
  411c8e:	add    ah,ah
  411c90:	inc    eax
  411c91:	add    eax,0x4bea880a
  411c96:	mov    ebx,DWORD PTR [bp+si+0x72]
  411c9a:	das    
  411c9b:	iret   
  411c9c:	dec    edx
  411c9d:	sub    DWORD PTR [eax],esp
  411c9f:	leave  
  411ca0:	daa    
  411ca1:	and    BYTE PTR [eax],ah
  411ca3:	jne    0x411c87
  411ca5:	pop    esp
  411ca6:	and    BYTE PTR [edx-0x30],bl
  411ca9:	pop    eax
  411caa:	ins    BYTE PTR es:[edi],dx
  411cab:	dec    ebp
  411cac:	fsubr  DWORD PTR [ebp+0x20]
  411caf:	pop    ebp
  411cb0:	in     eax,0x5c
  411cb2:	and    BYTE PTR [ebx-0x28],cl
  411cb5:	jae    0x411d2b
  411cb7:	dec    esp
  411cb8:	iret   
  411cb9:	pop    ds
  411cba:	cmp    dl,BYTE PTR [eax]
  411cbc:	add    BYTE PTR [eax],dh
  411cbe:	push   es
  411cbf:	inc    ecx
  411cc0:	inc    esi
  411cc1:	lods   eax,DWORD PTR ds:[esi]
  411cc2:	outs   dx,DWORD PTR ds:[esi]
  411cc3:	jb     0x411d05
  411cc5:	call   0x2761:0x52c97468
  411ccc:	leave  
  411ccd:	gs das 
  411ccf:	aaa    
  411cd0:	shl    DWORD PTR [ecx+0x32],1
  411cd3:	xor    cl,bl
  411cd5:	dec    ebp
  411cd6:	and    BYTE PTR [edx+0x0],ah
  411cd9:	pop    ebp
  411cda:	dec    edx
  411cdb:	ins    DWORD PTR es:[edi],dx
  411cdc:	add    al,0x87
  411cde:	pop    ebp
  411cdf:	arpl   WORD PTR [edi],ax
  411ce1:	sbb    eax,0x59fa623f
  411ce6:	data16 sub al,0x9
  411ce9:	jl     0x411d4f
  411ceb:	ins    BYTE PTR es:[edi],dx
  411cec:	or     DWORD PTR [edi+0x66c1655f],eax
  411cf2:	jno    0x411d14
  411cf4:	mov    ebx,0x637159
  411cf9:	xor    BYTE PTR [ecx+0x61],0x64
  411cfd:	or     DWORD PTR cs:[edx],ecx
  411d00:	or     eax,0x726b489a
  411d05:	jne    0x411d2a
  411d07:	outs   dx,BYTE PTR gs:[esi]
  411d09:	mov    dh,0x6a
  411d0b:	jb     0x411d7a
  411d0d:	mov    cl,0x67
  411d0f:	outs   dx,DWORD PTR gs:[esi]
  411d11:	mov    esi,0xa4682035
  411d16:	addr16 jo 0x411d53
  411d19:	outs   dx,DWORD PTR ds:[esi]
  411d1a:	sub    dh,BYTE PTR [ebx+0x77]
  411d1d:	pop    es
  411d1e:	sub    DWORD PTR [ebp+0x62],esp
  411d21:	add    bl,dh
  411d23:	pop    edi
  411d24:	outs   dx,BYTE PTR ds:[esi]
  411d25:	jae    0x411d16
  411d27:	pusha  
  411d28:	je     0x411da1
  411d2a:	icebp  
  411d2b:	ins    DWORD PTR es:[edi],dx
  411d2c:	popa   
  411d2d:	cs repz push 0x69
  411d31:	das    
  411d32:	pop    ebp
  411d33:	add    eax,0x3600a09
  411d38:	add    BYTE PTR [eax],al
  411d3a:	push   eax
  411d3b:	add    eax,DWORD PTR [eax]
  411d3d:	add    BYTE PTR [eax+0x3],dl
  411d40:	add    BYTE PTR [eax],al
  411d42:	and    BYTE PTR [ebx],al
  411d44:	add    BYTE PTR [eax],al
  411d46:	and    BYTE PTR [ebx],al
  411d48:	add    BYTE PTR [eax],al
  411d4a:	adc    BYTE PTR [ebx],al
  411d4c:	add    BYTE PTR [eax],al
  411d4e:	adc    BYTE PTR [ebx],al
  411d50:	add    BYTE PTR [eax],al
  411d52:	and    BYTE PTR [ebx],al
  411d54:	add    BYTE PTR [eax],al
  411d56:	and    BYTE PTR [ebx],al
  411d58:	add    BYTE PTR [eax],al
  411d5a:	adc    BYTE PTR [ebx],al
  411d5c:	add    BYTE PTR [eax],al
  411d5e:	adc    BYTE PTR [ebx],al
  411d60:	add    BYTE PTR [eax],al
  411d62:	loopne 0x411d66
  411d64:	add    BYTE PTR [eax],al
  411d66:	loopne 0x411d6a
  411d68:	add    BYTE PTR [eax],al
  411d6a:	rol    BYTE PTR [edx],1
  411d6c:	add    BYTE PTR [eax],al
  411d6e:	rol    BYTE PTR [edx],1
  411d70:	add    BYTE PTR [eax],al
  411d72:	cmp    DWORD PTR [edx+esi*4+0x2028624e],ecx
  411d79:	sub    edi,DWORD PTR ds:0xcd54cf37
  411d7f:	adc    esp,DWORD PTR [ebx-0x7f419b9e]
  411d85:	or     DWORD PTR [eax],eax
  411d87:	push   es
  411d88:	hlt    
  411d89:	or     ecx,DWORD PTR [eax]
  411d8b:	dec    eax
  411d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8d:	or     ch,BYTE PTR [eax-0x6b]
  411d90:	mov    al,0x7b
  411d92:	push   ecx
  411d93:	(bad)  
  411d94:	call   0xe97a1d9a
  411d99:	add    DWORD PTR [eax],eax
  411d9b:	cmp    ecx,ebp
  411d9d:	add    DWORD PTR [eax],eax
  411d9f:	cmp    ecx,ebp
  411da1:	add    DWORD PTR [eax],eax
  411da3:	cmp    ecx,ebp
  411da5:	add    DWORD PTR [eax],eax
  411da7:	cmp    ecx,ebp
  411da9:	add    DWORD PTR [eax],eax
  411dab:	cmp    ecx,ebp
  411dad:	add    DWORD PTR [eax],eax
  411daf:	cmp    ecx,ebp
  411db1:	add    DWORD PTR [eax],eax
  411db3:	cmp    ecx,ebp
  411db5:	add    DWORD PTR [eax],eax
  411db7:	cmp    ecx,ebp
  411db9:	add    DWORD PTR [eax],eax
  411dbb:	cmp    ecx,ebp
  411dbd:	add    DWORD PTR [eax],eax
  411dbf:	cmp    ecx,ebp
  411dc1:	add    DWORD PTR [eax],eax
  411dc3:	cmp    edi,esp
  411dc5:	add    DWORD PTR [eax],eax
  411dc7:	cmp    edi,esp
  411dc9:	add    DWORD PTR [eax],eax
  411dcb:	cmp    edi,esp
  411dcd:	add    DWORD PTR [eax],eax
  411dcf:	cmp    edi,esp
  411dd1:	add    DWORD PTR [eax],eax
  411dd3:	cmp    edi,esp
  411dd5:	add    DWORD PTR [eax],eax
  411dd7:	cmp    edi,esp
  411dd9:	add    DWORD PTR [eax],eax
  411ddb:	cmp    edi,esp
  411ddd:	add    DWORD PTR [eax],eax
  411ddf:	cmp    edi,esp
  411de1:	add    DWORD PTR [eax],eax
  411de3:	cmp    edi,esp
  411de5:	add    DWORD PTR [eax],eax
  411de7:	cmp    edi,esp
  411de9:	add    DWORD PTR [eax],eax
  411deb:	add    BYTE PTR [ecx],bh
  411ded:	add    bh,ah
  411def:	add    edi,DWORD PTR [ecx]
  411df1:	add    bh,ah
  411df3:	add    edi,DWORD PTR [ecx]
  411df5:	add    bh,ah
  411df7:	add    edi,DWORD PTR [ecx]
  411df9:	add    bh,ah
  411dfb:	add    edi,DWORD PTR [ecx]
  411dfd:	add    bh,ah
  411dff:	add    edi,DWORD PTR [ecx]
  411e01:	add    bh,ah
  411e03:	add    edi,DWORD PTR [ecx]
  411e05:	add    bh,ah
  411e07:	add    edi,DWORD PTR [ecx]
  411e09:	add    bh,ah
  411e0b:	add    edi,DWORD PTR [ecx]
  411e0d:	add    bh,ah
  411e0f:	add    edi,DWORD PTR [ecx]
  411e11:	add    bh,ah
  411e13:	add    edi,DWORD PTR [ecx]
  411e15:	add    bh,ah
  411e17:	add    edi,DWORD PTR [ecx]
  411e19:	add    bh,ah
  411e1b:	add    edi,DWORD PTR [ecx]
  411e1d:	add    bh,ah
  411e1f:	add    edi,DWORD PTR [ecx]
  411e21:	add    bh,ah
  411e23:	add    edi,DWORD PTR [ecx]
  411e25:	add    bh,ah
  411e27:	add    edi,DWORD PTR [ecx]
  411e29:	add    bh,ah
  411e2b:	add    edi,DWORD PTR [ecx]
  411e2d:	add    bh,ah
  411e2f:	add    edi,DWORD PTR [ecx]
  411e31:	add    bh,ah
  411e33:	add    edi,DWORD PTR [ecx]
  411e35:	add    bh,ah
  411e37:	add    edi,DWORD PTR [ecx]
  411e39:	add    bh,ah
  411e3b:	add    edi,DWORD PTR [ecx]
  411e3d:	add    bh,ah
  411e3f:	add    edi,DWORD PTR [ecx]
  411e41:	add    bh,ah
  411e43:	add    edi,DWORD PTR [ecx]
  411e45:	add    bh,ah
  411e47:	add    edi,DWORD PTR [ecx]
  411e49:	add    bh,ah
  411e4b:	add    edi,DWORD PTR [ecx]
  411e4d:	add    bh,ah
  411e4f:	add    eax,DWORD PTR [eax]
  411e51:	cmp    DWORD PTR [eax],eax
  411e53:	out    0x3,eax
  411e55:	cmp    DWORD PTR [eax],eax
  411e57:	out    0x3,eax
  411e59:	cmp    DWORD PTR [eax],eax
  411e5b:	out    0x3,eax
  411e5d:	cmp    DWORD PTR [eax],eax
  411e5f:	out    0x3,eax
  411e61:	cmp    DWORD PTR [eax],eax
  411e63:	out    0x3,eax
  411e65:	cmp    DWORD PTR [eax],eax
  411e67:	add    cl,ch
  411e69:	cmp    al,BYTE PTR [eax]
  411e6b:	add    cl,ch
  411e6d:	cmp    al,BYTE PTR [eax]
  411e6f:	add    cl,ch
  411e71:	cmp    al,BYTE PTR [eax]
  411e73:	add    cl,ch
  411e75:	cmp    al,BYTE PTR [eax]
  411e77:	add    cl,ch
  411e79:	cmp    al,BYTE PTR [eax]
  411e7b:	add    cl,ch
  411e7d:	cmp    al,BYTE PTR [eax]
  411e7f:	add    cl,ch
  411e81:	cmp    al,BYTE PTR [eax]
  411e83:	add    cl,ch
  411e85:	cmp    al,BYTE PTR [eax]
  411e87:	add    cl,ch
  411e89:	cmp    al,BYTE PTR [eax]
  411e8b:	add    cl,ch
  411e8d:	cmp    al,BYTE PTR [eax]
  411e8f:	add    cl,ch
  411e91:	cmp    al,BYTE PTR [eax]
  411e93:	add    cl,ch
  411e95:	cmp    al,BYTE PTR [eax]
  411e97:	add    al,bl
  411e99:	inc    esp
  411e9a:	das    
  411e9b:	xor    al,0xd4
  411e9d:	dec    eax
  411e9e:	add    BYTE PTR [eax-0x78],dh
  411ea1:	add    eax,0xec8e756f
  411ea6:	pop    ebx
  411ea7:	add    BYTE PTR [ecx-0x1e],bh
  411eaa:	outs   dx,DWORD PTR ds:[esi]
  411eab:	bound  ecx,QWORD PTR [ebx+0x4c75653a]
  411eb1:	jmp    0x411f1e
  411eb3:	ja     0x411e9e
  411eb5:	add    BYTE PTR ds:0x81d3132,cl
  411ebb:	add    BYTE PTR [edx+0x44],ch
  411ebe:	retf   0x7170
  411ec1:	jmp    0xf57250cb
  411ec6:	imul   ebp,DWORD PTR [edx],0x233af135
  411ecc:	xor    bh,dl
  411ece:	push   esi
  411ecf:	add    BYTE PTR [edi+0xb],bl
  411ed2:	call   0x6364:0x3ada3223
  411ed9:	sbb    eax,0xff675fa0
  411ede:	cmp    ch,BYTE PTR [ebx+eiz*2+0x0]
  411ee2:	add    esp,DWORD PTR [eax+eax*1+0x6c]
  411ee6:	inc    edi
  411ee7:	bound  esp,QWORD PTR [ecx+0x0]
  411eea:	mov    cl,0x31
  411eec:	das    
  411eed:	add    al,ah
  411eef:	pop    esp
  411ef0:	outs   dx,DWORD PTR ds:[esi]
  411ef1:	jae    0x411ef2
  411ef3:	pop    edx
  411ef4:	jb     0x411f5a
  411ef6:	xor    esp,edi
  411ef8:	addr16 gs hlt 
  411efb:	pop    ebx
  411efc:	imul   eax,DWORD PTR [eax],0xffffff85
  411eff:	pop    edx
  411f00:	outs   dx,BYTE PTR ds:[esi]
  411f01:	imul   ebp,ebp,0x74
  411f04:	add    BYTE PTR [edx+esi*8+0x5c],ah
  411f08:	arpl   WORD PTR [edi+0x76],bp
  411f0b:	push   DWORD PTR [ebx+0x72]
  411f0e:	in     eax,dx
  411f0f:	outs   dx,BYTE PTR ds:[esi]
  411f10:	je     0x411f80
  411f12:	(bad)  
  411f13:	sub    al,0x0
  411f15:	xor    DWORD PTR [ecx+0x2c],esi
  411f18:	sub    eax,0xff710031
  411f1d:	fs ins BYTE PTR es:[edi],dx
  411f1f:	pop    es
  411f20:	gs popa 
  411f22:	jns    0x411ecb
  411f24:	jo     0x411f26
  411f26:	xor    DWORD PTR [edx-0x51cacbd2],esi
  411f2c:	and    al,BYTE PTR [eax]
  411f2e:	jae    0x411ee8
  411f30:	pop    esp
  411f31:	outs   dx,DWORD PTR fs:[esi]
  411f33:	(bad)  
  411f34:	sti    
  411f35:	sub    al,0x32
  411f37:	xor    esi,DWORD PTR [eax]
  411f39:	xor    DWORD PTR [esi],esi
  411f3b:	das    
  411f3c:	xor    al,0x35
  411f3e:	add    bl,dh
  411f40:	arpl   WORD PTR [edx+0x69],si
  411f43:	add    esi,DWORD PTR [eax+0x0]
  411f46:	jae    0x411fb5
  411f48:	pop    edx
  411f49:	outs   dx,DWORD PTR ds:[esi]
  411f4a:	push   0x615a79
  411f4f:	gs pop ebp
  411f51:	outs   dx,DWORD PTR ds:[esi]
  411f52:	je     0x411f81
  411f54:	outs   dx,BYTE PTR ds:[esi]
  411f55:	add    BYTE PTR [ebx+0x47],ah
  411f58:	imul   esi,DWORD PTR [eax+0x75],0x725f1539
  411f5f:	cmp    DWORD PTR [ecx],ebx
  411f61:	jb     0x411fca
  411f63:	pop    DWORD PTR [esi]
  411f65:	pop    edi
  411f66:	jno    0x411fd2
  411f68:	jmp    0x29786da
  411f6d:	pop    edi
  411f6e:	jb     0x411fa9
  411f70:	sti    
  411f71:	fs ins DWORD PTR es:[edi],dx
  411f73:	gs (bad) 
  411f75:	fs ins BYTE PTR es:[edi],dx
  411f77:	gs jmp 0xc4978de1
  411f7d:	add    BYTE PTR gs:[eax],al
  411f80:	push   ebx
  411f81:	mov    esp,0xf84a7372
  411f86:	add    DWORD PTR [edi],ebp
  411f88:	imul   esi,esi,0x34
  411f8b:	xor    ch,BYTE PTR [edx-0x17]
  411f8e:	outs   dx,BYTE PTR ds:[esi]
  411f8f:	push   0x7660ad18
  411f94:	adc    al,0x97
  411f96:	add    DWORD PTR [esi+0xb],esp
  411f99:	jl     0x411ffb
  411f9b:	fs push ds
  411f9d:	jl     0x411fa0
  411f9f:	imul   edx,DWORD PTR [eax],0xb636575
  411fa5:	jmp    0x7b1e910e
  411faa:	add    DWORD PTR [ecx-0x22],esi
  411fad:	test   DWORD PTR [edx+0x63],esp
  411fb0:	jmp    0x411f9a
  411fb2:	jb     0x412027
  411fb4:	jmp    0xd8ac91fc
  411fb9:	inc    edx
  411fba:	add    al,0x6b
  411fbc:	loopne 0x412003
  411fbe:	ins    BYTE PTR es:[edi],dx
  411fbf:	pop    edi
  411fc0:	fdiv   QWORD PTR [esp+eax*1]
  411fc3:	popa   
  411fc4:	rol    DWORD PTR [ebx+0x5d],1
  411fc7:	jno    0x411f65
  411fc9:	out    0x6a,eax
  411fcb:	outs   dx,BYTE PTR ds:[esi]
  411fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fcd:	inc    esp
  411fce:	jb     0x41203e
  411fd0:	pushf  
  411fd1:	sub    eax,DWORD PTR [edx+ebp*2]
  411fd4:	mov    es,WORD PTR [eax]
  411fd6:	sbb    ch,BYTE PTR [edx+ecx*4+0x5f]
  411fda:	out    0x5d,eax
  411fdc:	mov    bl,BYTE PTR [ebp+0x2]
  411fdf:	jnp    0x411f75
  411fe1:	imul   esp,edi,0x61
  411fe4:	add    BYTE PTR [ebp+0x5a70fa5b],cl
  411fea:	pop    esp
  411feb:	out    0x61,eax
  411fed:	mov    gs,WORD PTR [ebp+0xc]
  411ff0:	bound  eax,QWORD PTR [esi+0x6803fb64]
  411ff6:	ins    BYTE PTR es:[edi],dx
  411ff7:	enter  0x4c71,0x5f
  411ffb:	fnstenv [eax+0x39]
  411ffe:	xor    BYTE PTR [edi],dl
  412000:	xor    al,0x9
  412002:	xor    BYTE PTR [edi],dl
  412004:	add    al,0x49
  412006:	imul   edi,DWORD PTR [ecx-0x18a4da8d],0x69
  41200d:	sbb    al,0x6e
  41200f:	retf   
  412010:	bound  edx,QWORD PTR [edi]
  412012:	add    ch,al
  412014:	bound  edx,QWORD PTR [esi]
  412016:	ins    BYTE PTR es:[edi],dx
  412017:	pop    DWORD PTR [ebx]
  412019:	or     BYTE PTR [ebx-0x74],ch
  41201c:	data16 sbb ch,BYTE PTR [esi-0x19]
  412020:	bound  ecx,QWORD PTR [eax]
  412022:	push   0x65e7b
  412027:	mov    DWORD PTR [esi-0x18],ebp
  41202a:	imul   eax,DWORD PTR [ecx+esi*2+0x628c6839],0xffffffef
  412032:	pop    edx
  412033:	jge    0x412038
  412035:	jmp    0xdab57794
  41203a:	ins    DWORD PTR es:[edi],dx
  41203b:	out    0x2c,eax
  41203d:	add    al,0x29
  41203f:	push   ds
  412040:	sub    eax,0x6be7290c
  412045:	retf   0x3b61
  412048:	pop    edi
  412049:	add    BYTE PTR [ebx-0x589ab500],ch
  41204f:	pop    ebx
  412050:	add    BYTE PTR [ebp-0x5e],al
  412053:	add    BYTE PTR [edi+0x3f],bl
  412056:	cdq    
  412057:	outs   dx,BYTE PTR ds:[esi]
  412058:	arpl   WORD PTR [esi],bx
  41205a:	cmp    eax,0x960e686c
  41205f:	push   ecx
  412060:	jno    0x41204b
  412062:	fwait
  412063:	bound  esp,QWORD PTR [ebp+0x4]
  412066:	xchg   ecx,eax
  412067:	outs   dx,DWORD PTR ds:[esi]
  412068:	add    BYTE PTR [edx],cl
  41206a:	gs push ecx
  41206c:	jb     0x41207b
  41206e:	bound  ebx,QWORD PTR [ebp+0x0]
  412071:	or     eax,0x467625a
  412076:	push   ecx
  412077:	add    BYTE PTR [edi],ch
  412079:	sbb    BYTE PTR [edx],cl
  41207b:	and    DWORD PTR [eax],eax
  41207d:	shr    DWORD PTR [edi+0x62],cl
  412080:	outs   dx,BYTE PTR ds:[esi]
  412081:	shl    BYTE PTR [ebp+ebx*2+0x72],0xe9
  412086:	dec    ecx
  412087:	pop    ecx
  412088:	outs   dx,BYTE PTR ds:[esi]
  412089:	into   
  41208a:	push   ds
  41208b:	pop    ebp
  41208c:	add    cl,dl
  41208e:	sbb    esp,DWORD PTR [edx+0x6e]
  412091:	enter  0x12,0x6f
  412095:	enter  0x6b20,0x71
  412099:	mov    eax,ds:0x995f683a
  41209e:	or     ch,BYTE PTR [ecx+0x0]
  4120a1:	test   BYTE PTR [ebx],bl
  4120a3:	ins    BYTE PTR es:[edi],dx
  4120a4:	jb     0x412026
  4120a6:	add    al,BYTE PTR [eax]
  4120a8:	jo     0x412032
  4120aa:	jmp    0xc9211d
  4120af:	fist   DWORD PTR [eax+0x5f]
  4120b2:	mov    bl,bl
  4120b4:	push   DWORD PTR ds:0x322f0eb4
  4120ba:	sbb    BYTE PTR ds:0xdb486b51,bh
  4120c0:	pop    ebx
  4120c1:	pop    edi
  4120c2:	jmp    0x41b5839f
  4120c7:	fsub   QWORD PTR [ecx+0x65]
  4120ca:	add    BYTE PTR [eax],ah
  4120cc:	pop    ebx
  4120cd:	outs   dx,BYTE PTR gs:[esi]
  4120cf:	ja     0x41212a
  4120d1:	jb     0x4120d3
  4120d3:	jge    0x412138
  4120d5:	je     0x41213f
  4120d7:	jne    0x41214f
  4120d9:	add    BYTE PTR [ebx+0x2e],dh
  4120dc:	arpl   WORD PTR [ebx+0x70],bp
  4120df:	pop    ecx
  4120e0:	add    al,0x6a
  4120e2:	and    esi,DWORD PTR gs:[edi+0x65]
  4120e6:	arpl   WORD PTR [ecx],si
  4120e8:	add    al,0x73
  4120ea:	gs dec esp
  4120ec:	imul   ebp,DWORD PTR [di+0x35],0x4
  4120f1:	jo     0x412162
  4120f3:	cmp    ebx,DWORD PTR [ecx+0x69]
  4120f6:	outs   dx,DWORD PTR ds:[esi]
  4120f7:	fiadd  WORD PTR [ebx]
  4120f9:	gs ins BYTE PTR es:[edi],dx
  4120fb:	out    dx,eax
  4120fc:	imul   esp,DWORD PTR [ecx+0x79],0x2d68ff
  412103:	and    DWORD PTR ds:0x421312d,esi
  412109:	imul   esi,DWORD PTR [ebp-0xd],0x776e5d77
  412110:	add    ebp,DWORD PTR [eax+0x65]
  412113:	add    BYTE PTR [ebx+esi*2+0x69],bh
  412117:	gs nop
  412119:	dec    ebp
  41211a:	jno    0x41218f
  41211c:	mov    ah,0x4c
  41211e:	outs   dx,BYTE PTR ds:[esi]
  41211f:	add    BYTE PTR [edx-0x4692909c],ch
  412125:	popa   
  412126:	popa   
  412127:	add    bh,bh
  412129:	je     0x412188
  41212b:	outs   dx,BYTE PTR ds:[esi]
  41212c:	(bad)  
  41212d:	pop    eax
  41212e:	add    BYTE PTR [ebp+esi*4+0x76],dh
  412132:	je     0x41219d
  412134:	mov    esi,0xe061005a
  412139:	jb     0x4121a7
  41213b:	gs pusha 
  41213d:	pusha  
  41213e:	gs arpl ax,bp
  412141:	pop    eax
  412142:	ins    BYTE PTR es:[edi],dx
  412143:	ins    BYTE PTR es:[edi],dx
  412144:	cmp    DWORD PTR [esp+eax*1],edi
  412147:	jo     0x41211d
  412149:	aaa    
  41214a:	arpl   WORD PTR gs:[ecx],di
  41214d:	sub    ah,BYTE PTR [edi+0x61]
  412150:	stos   DWORD PTR es:[edi],eax
  412151:	inc    esp
  412152:	js     0x412154
  412154:	push   0x98726ad9
  412159:	cmp    ah,BYTE PTR [edi+0x0]
  41215c:	mov    ss,WORD PTR [eax]
  41215e:	pusha  
  41215f:	ins    BYTE PTR es:[edi],dx
  412160:	mov    al,ds:0x90005ef8
  412165:	add    eax,0x10947661
  41216a:	popa   
  41216b:	jae    0x412198
  41216d:	fstp   DWORD PTR [edi+0x67]
  412170:	pop    edx
  412171:	(bad)  
  412172:	pop    edi
  412173:	arpl   WORD PTR [ecx],di
  412175:	scas   eax,DWORD PTR es:[edi]
  412176:	aaa    
  412177:	add    BYTE PTR ss:[edi],ah
  41217a:	mov    bh,0x37
  41217c:	add    BYTE PTR [esp+ecx*8+0x67],ah
  412180:	pushaw 
  412182:	mov    edi,0xcd586501
  412187:	push   0x1d05875
  41218c:	data16 sub al,0xba
  41218f:	pop    esi
  412190:	ja     0x4121b0
  412192:	mov    ah,0x34
  412194:	add    BYTE PTR [eax],bl
  412196:	stos   BYTE PTR es:[edi],al
  412197:	jbe    0x412201
  412199:	push   cs
  41219a:	lods   eax,DWORD PTR ds:[esi]
  41219b:	push   0x59782100
  4121a0:	pop    edi
  4121a1:	and    DWORD PTR [eax+0x1],edi
  4121a4:	jo     0x4121bc
  4121a6:	xchg   BYTE PTR [ecx+0x0],dh
  4121a9:	sbb    ebp,DWORD PTR [ebp+0x68]
  4121ac:	jno    0x412198
  4121ae:	(bad)  
  4121af:	pop    edi
  4121b0:	cmp    DWORD PTR gs:[ebx+0x5d],edi
  4121b4:	pop    edi
  4121b5:	sar    DWORD PTR [edx+0x5d],1
  4121b8:	pop    edi
  4121b9:	rcr    eax,1
  4121bb:	pusha  
  4121bc:	ja     0x412188
  4121be:	call   DWORD PTR [esi+0x63]
  4121c1:	fsub   DWORD PTR [eax+ebx*1+0x4]
  4121c5:	shl    BYTE PTR [eax+0x5b],cl
  4121c8:	js     0x41219b
  4121ca:	fs push esi
  4121cc:	add    al,0x98
  4121ce:	pop    edi
  4121cf:	push   ebp
  4121d0:	arpl   WORD PTR [ebp-0x618b18a1],dx
  4121d6:	pop    esp
  4121d7:	cmp    eax,0x3900ab67
  4121dc:	popa   
  4121dd:	add    BYTE PTR [ebx+0x39781963],bl
  4121e3:	pushw  cs
  4121e5:	jbe    0x412181
  4121e7:	jbe    0x4121f5
  4121e9:	jbe    0x412224
  4121eb:	pop    edi
  4121ec:	sbb    ch,BYTE PTR [eax+0x5f]
  4121ef:	gs (bad) 
  4121f2:	imul   ebx,DWORD PTR [edi+0xa],0x5c
  4121f6:	pop    edx
  4121f7:	pop    esp
  4121f8:	out    0x75,eax
  4121fa:	jle    0x412253
  4121fc:	std    
  4121fd:	gs fs jne 0x4121e8
  412201:	push   0x62d3574a
  412206:	dec    ebx
  412207:	add    bh,dl
  412209:	pop    si
  41220b:	pop    esi
  41220c:	aam    0x77
  41220e:	cmp    DWORD PTR [edx-0x38],esp
  412211:	ja     0x412235
  412213:	pop    edi
  412214:	int    0x3
  412216:	sbb    BYTE PTR [ebp-0x3a],bl
  412219:	pop    esp
  41221a:	push   ss
  41221b:	arpl   di,sp
  41221d:	not    BYTE PTR gs:[esi-0x6d]
  412221:	pushw  es
  412223:	add    BYTE PTR [edx-0x739ee7a0],bl
  412229:	jne    0x412279
  41222b:	add    BYTE PTR [edx+ebx*2-0x28],bh
  41222f:	pop    eax
  412230:	mov    WORD PTR [edx+0x39],gs
  412233:	bound  edx,QWORD PTR [eax+0x5ada77]
  412239:	mov    WORD PTR [edx],?
  41223b:	pop    eax
  41223c:	arpl   WORD PTR [ebp-0xa],di
  41223f:	pop    edx
  412240:	das    
  412241:	jmp    0x6799f946
  412246:	dec    edi
  412247:	ficomp WORD PTR [eax+0x0]
  41224a:	dec    ebp
  41224b:	ficom  DWORD PTR [esi+0x6d]
  41224e:	push   ebp
  41224f:	call   0x6e4d:0x8e487100
  412256:	xor    eax,0x4a004d85
  41225b:	cwde   
  41225c:	pop    ecx
  41225d:	jo     0x4122a7
  41225f:	mov    al,BYTE PTR [eax]
  412261:	adc    BYTE PTR fs:[edx-0x6ef092a7],bl
  412268:	add    BYTE PTR [eax+ecx*1-0x6e],dh
  41226c:	pop    esp
  41226d:	ins    DWORD PTR es:[edi],dx
  41226e:	sbb    edi,DWORD PTR ds:0x67fb6d66
  412274:	pop    ecx
  412275:	add    BYTE PTR [ebx],dl
  412277:	pop    eax
  412278:	pop    eax
  412279:	outs   dx,BYTE PTR ds:[esi]
  41227a:	mov    edx,0xfb00362b
  41227f:	jae    0x4122e0
  412281:	push   0x6444c8
  412286:	retf   
  412287:	data16 outs dx,BYTE PTR gs:[esi]
  41228a:	ret    0x280b
  41228d:	xor    ch,cl
  41228f:	sub    ah,BYTE PTR [ecx+0x5f]
  412292:	retf   0x6112
  412295:	jno    0x412280
  412297:	sbb    eax,0x3ac56d5b
  41229c:	data16 ins BYTE PTR es:[edi],dx
  41229e:	mov    esi,0xe9726111
  4122a3:	add    eax,0x8e6d5f
  4122a8:	push   cs
  4122a9:	popa   
  4122aa:	jb     0x412295
  4122ac:	adc    al,0x4d
  4122ae:	outs   dx,BYTE PTR ds:[esi]
  4122af:	mov    al,bl
  4122b1:	dec    esp
  4122b2:	add    BYTE PTR [eax],al
  4122b4:	retf   0x6961
  4122b7:	gs jecxz 0x4122ba
  4122ba:	pop    ebp
  4122bb:	jae    0x412269
  4122bd:	push   esi
  4122be:	pop    ebp
  4122bf:	jae    0x41227d
  4122c1:	push   esi
  4122c2:	add    BYTE PTR [esi-0x17],dh
  4122c5:	pusha  
  4122c6:	je     0x412337
  4122c8:	loop   0x412324
  4122ca:	add    BYTE PTR [edi+esi*8+0x4d],ch
  4122ce:	outs   dx,DWORD PTR fs:[esi]
  4122d0:	jbe    0x4122d6
  4122d2:	sub    eax,0x73753332
  4122d7:	adc    BYTE PTR gs:0x32233332,dh
  4122de:	sub    eax,0x5d685300
  4122e3:	jb     0x412311
  4122e5:	outs   dx,BYTE PTR ds:[esi]
  4122e6:	popa   
  4122e7:	imul   edx,DWORD PTR [eax],0x63
  4122ea:	popa   
  4122eb:	outs   dx,DWORD PTR ds:[esi]
  4122ec:	and    ah,BYTE PTR [ebx+0x61]
  4122ef:	add    BYTE PTR [edi+0x4d],cl
  4122f2:	outs   dx,BYTE PTR ds:[esi]
  4122f3:	outs   dx,BYTE PTR ds:[esi]
  4122f4:	cmp    eax,0x316d006e
  4122f9:	arpl   WORD PTR [ebx+0x69],sp
  4122fc:	sub    eax,0x39727404
  412301:	dec    edx
  412302:	gs je  0x4122de
  412305:	jmp    FWORD PTR [edx+0x6e]
  412308:	hlt    
  412309:	dec    esp
  41230a:	outs   dx,BYTE PTR ds:[esi]
  41230b:	gs add al,dl
  41230e:	xor    al,0x32
  412310:	xor    eax,DWORD PTR [ecx-0x7cffa09f]
  412316:	inc    edi
  412317:	arpl   WORD PTR gs:[ebx+0x7a006e58],cx
  41231e:	push   0x71d7696e
  412323:	add    BYTE PTR [ebx-0x58],ah
  412326:	jno    0x41238d
  412328:	jae    0x4122ba
  41232a:	outs   dx,DWORD PTR ds:[esi]
  41232b:	pop    ebp
  41232c:	jae    0x412367
  41232e:	xchg   BYTE PTR [esi+0x30],dh
  412331:	jmp    0x4122b7
  412333:	add    DWORD PTR [edi-0x1c],ebx
  412336:	gs jne 0x4123a0
  412339:	xlat   BYTE PTR ds:[ebx]
  41233a:	fdiv   DWORD PTR [edx+0x70]
  41233d:	fsub   DWORD PTR [esi+0x5a]
  412340:	ja     0x41237b
  412342:	js     0x4123a9
  412344:	imul   esp,eax,0x52
  412347:	add    al,0x6b
  412349:	fadd   QWORD PTR [esi+0x60]
  41234c:	addr16 iret 
  41234e:	fsub   DWORD PTR [esi+0x6d]
  412351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412352:	inc    edx
  412353:	pusha  
  412354:	arpl   WORD PTR [ecx],di
  412356:	cmp    esi,DWORD PTR [edx+0x67]
  412359:	pushf  
  41235a:	cmp    ebp,DWORD PTR [eax+0x71]
  41235d:	cmp    DWORD PTR [ecx+0x5d],eax
  412360:	jo     0x4122fe
  412362:	fnstenv [edx+0x68]
  412365:	cwde   
  412366:	adc    eax,0xfb396b5d
  41236b:	pop    edx
  41236c:	outs   dx,BYTE PTR ds:[esi]
  41236d:	test   esp,edi
  41236f:	pop    ebp
  412370:	add    BYTE PTR fs:[esi-0x27],ah
  412374:	pop    ebp
  412375:	ins    DWORD PTR es:[edi],dx
  412376:	pop    esi
  412377:	push   cs
  412378:	pop    ebx
  412379:	outs   dx,BYTE PTR ds:[esi]
  41237a:	pop    esi
  41237b:	fstp   DWORD PTR [ecx+0x5f]
  41237e:	imul   eax,DWORD PTR ds:0xe6397767,0x60
  412385:	ins    DWORD PTR es:[edi],dx
  412386:	bound  edi,QWORD PTR [esp+ebp*2+0x35120e00]
  41238d:	xor    eax,0x715ebf39
  412392:	sbb    al,0xc9
  412394:	pop    ecx
  412395:	add    BYTE PTR ds:0x206962ac,bl
  41239b:	fldenv [ebp+0x67]
  41239e:	push   ss
  41239f:	shl    BYTE PTR [ebp+0x5f],0x25
  4123a3:	fldenv [eax+eax*1+0x5]
  4123a7:	add    BYTE PTR [edi-0x7b9be888],cl
  4123ad:	jno    0x4123e8
  4123af:	outs   dx,DWORD PTR ds:[esi]
  4123b0:	xchg   edi,eax
  4123b1:	pop    esp
  4123b2:	jmp    0x41240c
  4123b4:	xchg   ebx,eax
  4123b5:	add    ebx,ebx
  4123b7:	pusha  
  4123b8:	xchg   ebp,eax
  4123b9:	fidiv  WORD PTR [bp+di-0x19]
  4123bd:	push   0x718c73cf
  4123c2:	cmp    DWORD PTR [ecx+0x7d],esp
  4123c5:	ja     0x4123a8
  4123c7:	pop    edx
  4123c8:	push   ebp
  4123c9:	imul   edi,DWORD PTR [ecx],0x5f
  4123cc:	dec    esi
  4123cd:	jb     0x412396
  4123cf:	fs pop ebx
  4123d1:	js     0x41236d
  4123d3:	add    BYTE PTR [edi],bh
  4123d5:	pop    ebp
  4123d6:	add    BYTE PTR [eax+0x396b4c55],bl
  4123dc:	jo     0x41242c
  4123de:	jne    0x41237a
  4123e0:	outs   dx,BYTE PTR ds:[esi]
  4123e1:	out    0x61,eax
  4123e3:	call   0x1557:0xa263415a
  4123ea:	add    al,0x9e
  4123ec:	pop    esp
  4123ed:	push   cs
  4123ee:	jbe    0x41238a
  4123f0:	addr16 push es
  4123f2:	ja     0x41244a
  4123f4:	add    al,bl
  4123f6:	jb     0x412423
  4123f8:	jno    0x4123b4
  4123fa:	cmp    WORD PTR [edx+0x10],si
  4123fe:	je     0x41245a
  412400:	outs   dx,BYTE PTR ds:[esi]
  412401:	out    0x64,eax
  412403:	pop    edx
  412404:	pop    edx
  412405:	add    al,0x71
  412407:	push   esi
  412408:	ins    DWORD PTR es:[edi],dx
  412409:	out    0x58,eax
  41240b:	push   edi
  41240c:	push   edi
  41240d:	(bad)  
  41240e:	pop    ebx
  41240f:	inc    ebp
  412410:	add    al,bl
  412412:	je     0x41242e
  412414:	outs   dx,BYTE PTR ds:[esi]
  412415:	shr    DWORD PTR [edx+0x5e],cl
  412418:	add    dl,cl
  41241a:	jno    0x412436
  41241c:	pop    edi
  41241d:	mov    bl,0x5a
  41241f:	daa    
  412420:	arpl   WORD PTR [eax],ax
  412422:	jmp    0xcbae7f43
  412427:	sbb    ebp,DWORD PTR [esi+0x0]
  41242a:	mov    BYTE PTR [esi],bl
  41242c:	popa   
  41242d:	mov    BYTE PTR fs:[ecx],cl
  412430:	add    BYTE PTR [edx-0x7a],dh
  412433:	out    dx,al
  412434:	pusha  
  412435:	imul   eax,DWORD PTR [eax-0x779390c6],0x0
  41243c:	rcr    DWORD PTR [edx+esi*2-0x17],cl
  412440:	in     eax,0x60
  412442:	jno    0x4123d1
  412444:	cmc    
  412445:	push   esp
  412446:	add    BYTE PTR [ecx-0x38],bh
  412449:	dec    eax
  41244a:	addr16 pop edx
  41244c:	fdivp  st(7),st
  41244e:	jns    0x4124b1
  412450:	fdiv   DWORD PTR [ecx+0x62]
  412453:	inc    edi
  412454:	xchg   esi,eax
  412455:	add    BYTE PTR [ecx+0x48],dh
  412458:	mov    gs,WORD PTR [ebp+0x63]
  41245b:	push   ebp
  41245c:	cmp    eax,0x96526755
  412461:	add    BYTE PTR [eax+ecx*2-0x67],ah
  412465:	pop    esp
  412466:	pop    edi
  412467:	cmp    dh,BYTE PTR ds:0x9e0c7263
  41246d:	pop    edx
  41246e:	add    BYTE PTR ds:0x1d746f96,dl
  412474:	pop    esi
  412475:	outs   dx,DWORD PTR ds:[esi]
  412476:	je     0x412461
  412478:	(bad)
  41247c:	imul   esp,DWORD PTR [ecx+0x61],0x12
  412480:	xor    eax,0x590c6e5b
  412485:	pop    ebx
  412486:	jbe    0x41248c
  412488:	xor    eax,0x63df5f64
  41248d:	fs add ah,cl
  412490:	push   ebx
  412491:	pop    esp
  412492:	ins    DWORD PTR es:[edi],dx
  412493:	fistp  WORD PTR [edi]
  412495:	add    BYTE PTR [ecx-0x3f],ah
  412498:	daa    
  412499:	outs   dx,BYTE PTR ds:[esi]
  41249a:	popa   
  41249b:	add    BYTE PTR [eax+0x7265fc],cl
  4124a1:	mov    DWORD PTR [ecx+0x6e],esp
  4124a4:	mov    al,fs:0xa0646b63
  4124aa:	pusha  
  4124ab:	popa   
  4124ac:	jae    0x412452
  4124ae:	inc    ebp
  4124af:	outs   dx,BYTE PTR ds:[esi]
  4124b0:	jns    0x412442
  4124b2:	dec    edx
  4124b3:	imul   ebp,DWORD PTR [esi-0x3b],0xfffffffc
  4124b7:	push   0x6b6ec369
  4124bc:	jae    0x41248d
  4124be:	bound  esi,QWORD PTR [eax+eax*1-0x5e]
  4124c2:	xor    dh,BYTE PTR cs:[edx]
  4124c5:	xchg   edx,eax
  4124c6:	add    BYTE PTR cs:[edx-0x3b],ah
  4124ca:	pop    esi
  4124cb:	bound  ebp,QWORD PTR [ebp+esi*8+0x70]
  4124cf:	add    BYTE PTR [ecx],dh
  4124d1:	and    DWORD PTR [ebx],esi
  4124d3:	sub    eax,0x2d2d5131
  4124d8:	add    BYTE PTR [ebx+0x73615f4b],al
  4124de:	dec    ebx
  4124df:	ins    BYTE PTR es:[edi],dx
  4124e0:	popa   
  4124e1:	adc    BYTE PTR [esi+0x6b],al
  4124e4:	jb     0x41246a
  4124e6:	pop    ebp
  4124e7:	outs   dx,BYTE PTR ds:[esi]
  4124e8:	xor    dl,BYTE PTR [ebx]
  4124ea:	add    al,0x65
  4124ec:	ins    BYTE PTR es:[edi],dx
  4124ed:	das    
  4124ee:	jb     0x412551
  4124f0:	addr16 das 
  4124f2:	pusha  
  4124f3:	add    BYTE PTR [esi+0x3f],ah
  4124f6:	dec    ebx
  4124f7:	je     0x41255b
  4124f9:	inc    ecx
  4124fa:	dec    eax
  4124fb:	ins    BYTE PTR es:[edi],dx
  4124fc:	xor    eax,edx
  4124fe:	dec    edi
  4124ff:	imul   esi,DWORD PTR [esi+0x49],0x4a
  412503:	arpl   WORD PTR [eax],ax
  412505:	add    BYTE PTR [esi],bh
  412507:	pop    ebp
  412508:	je     0x412572
  41250a:	inc    ecx
  41250b:	dec    edx
  41250c:	add    BYTE PTR [ebp-0x13],ah
  41250f:	dec    eax
  412510:	pop    ebp
  412511:	outs   dx,BYTE PTR ds:[esi]
  412512:	in     eax,0x60
  412514:	ins    BYTE PTR es:[edi],dx
  412515:	add    BYTE PTR [ecx],bh
  412517:	retf   0x6d66
  41251a:	push   ds
  41251b:	mov    ebx,0xa41f006c
  412520:	imul   cx,WORD PTR [esi],0x5fbf
  412525:	add    BYTE PTR [edx],cl
  412527:	mov    eax,0xd9106b58
  41252c:	pop    eax
  41252d:	pop    edi
  41252e:	add    DWORD PTR [esi-0x26f293a0],eax
  412534:	pop    ebx
  412535:	pop    edi
  412536:	jmp    0x5965:0xe300577d
  41253d:	outs   dx,BYTE PTR ds:[esi]
  41253e:	cmp    DWORD PTR [eax-0x5619cd8c],ebp
  412544:	pusha  
  412545:	xor    al,0xcb
  412547:	fsub   DWORD PTR [ebx+0x5f]
  41254a:	fld    TBYTE PTR [edi+0x1]
  41254d:	jb     0x41252b
  41254f:	xor    al,0x33
  412551:	xor    cl,BYTE PTR [edx]
  412553:	fldenv [ebx+0x6c]
  412556:	cwde   
  412557:	cmp    ebx,DWORD PTR [eax+0x5f]
  41255a:	cmp    DWORD PTR [ecx+0x76],ecx
  41255d:	addr16 xchg edi,eax
  41255f:	cmp    bl,BYTE PTR [edi+0x0]
  412562:	test   al,0x2e
  412564:	pop    edi
  412565:	jb     0x4124f4
  412567:	fldenv [esi+0x68]
  41256a:	add    BYTE PTR [ebp+eiz*1-0x26679c8b],dl
  412571:	xor    BYTE PTR [ebx],dh
  412573:	inc    esp
  412574:	int3   
  412575:	xor    BYTE PTR [eax],al
  412577:	pop    eax
  412578:	jmp    DWORD PTR [eax+0x63]
  41257b:	pop    ebp
  41257c:	enter  0x6801,0x58
  412580:	jmp    0x4125df
  412582:	popa   
  412583:	dec    esi
  412584:	jmp    0x4125e6
  412586:	add    BYTE PTR [ebp-0xc],bl
  412589:	imul   esi,DWORD PTR [esp+edx*2-0x15],0x1
  41258e:	jno    0x4125e8
  412590:	add    ch,bl
  412592:	pusha  
  412593:	push   ebp
  412594:	add    BYTE PTR [eax],bl
  412596:	xor    eax,0x371a326b
  41259b:	cmp    DWORD PTR [eax-0x38],ebx
  41259e:	push   edi
  41259f:	adc    eax,0xfe5de757
  4125a4:	jb     0x41255d
  4125a6:	pusha  
  4125a7:	or     eax,DWORD PTR [eax]
  4125a9:	retf   
  4125aa:	fs pop ds
  4125ac:	pop    ecx
  4125ad:	les    edx,FWORD PTR [edi+0x15]
  4125b0:	pop    ebp
  4125b1:	out    0x5e,eax
  4125b3:	push   ss
  4125b4:	ins    BYTE PTR es:[edi],dx
  4125b5:	xchg   ebx,eax
  4125b6:	pusha  
  4125b7:	out    0xff,eax
  4125b9:	mov    DWORD PTR [eax+ebp*8+0x72],esp
  4125bd:	and    BYTE PTR [eax+0x39],0x73
  4125c1:	jnp    0x412623
  4125c3:	int    0x53
  4125c5:	mov    BYTE PTR [ebx],al
  4125c7:	leave  
  4125c8:	jno    0x412552
  4125ca:	ins    BYTE PTR es:[edi],dx
  4125cb:	fidiv  DWORD PTR [ecx-0x19]
  4125ce:	pop    ebx
  4125cf:	add    ah,dl
  4125d1:	imul   ecx,DWORD PTR [ebx+0x59],0xffffffd4
  4125d5:	call   DWORD PTR [ebp+0x5b]
  4125d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125d9:	pop    esp
  4125da:	inc    esi
  4125db:	jno    0x412585
  4125dd:	add    BYTE PTR [edi+ebp*2],bh
  4125e0:	test   al,0x6c
  4125e2:	dec    ebx
  4125e3:	pop    ebx
  4125e4:	call   0x3a5b:0x8d634600
  4125eb:	add    al,0x9b
  4125ed:	push   edi
  4125ee:	cmp    ebx,DWORD PTR [eax-0x64]
  4125f1:	pop    edi
  4125f2:	sbb    ebx,DWORD PTR [edi-0x78]
  4125f5:	add    BYTE PTR [esi],al
  4125f7:	pop    esp
  4125f8:	pop    ebx
  4125f9:	pop    esp
  4125fa:	sbb    ebx,DWORD PTR [edx+0x39]
  4125fd:	pop    ebp
  4125fe:	add    eax,0x1459535c
  412603:	add    al,0xe
  412605:	xor    bh,BYTE PTR [edx+0x2e0a2f]
  41260b:	mov    esi,0xe9302d22
  412610:	cmp    ah,BYTE PTR [ecx+0x74]
  412613:	loop   0x412659
  412615:	outs   dx,BYTE PTR ds:[esi]
  412616:	imul   ecx,esi,0xdc75562c
  41261c:	cmp    bl,BYTE PTR [eax+0x74]
  41261f:	aad    0x2a
  412621:	sub    ch,BYTE PTR ds:0x66560216
  412627:	into   
  412628:	or     BYTE PTR [ecx+0x65],ah
  41262b:	enter  0x5430,0x74
  41262f:	repz push edx
  412631:	xor    BYTE PTR [eax],bh
  412633:	fld    DWORD PTR [eax]
  412635:	and    DWORD PTR [eax+0x6d],esi
  412638:	(bad)  
  412639:	jecxz  0x41264d
  41263b:	gs mov dh,bl
  41263e:	pusha  
  41263f:	cs cdq 
  412641:	add    dh,BYTE PTR [eax+0x0]
  412644:	xchg   ecx,eax
  412645:	into   
  412646:	imul   esi,DWORD PTR [eax-0x3d],0x31
  41264a:	adc    esi,DWORD PTR [ecx+0x7c]
  41264d:	aam    0x5b
  41264f:	pop    edi
  412650:	jne    0x41262d
  412652:	outs   dx,DWORD PTR ds:[esi]
  412653:	jb     0x4126ab
  412655:	and    ebx,DWORD PTR [edi+0x6d]
  412658:	dec    esp
  412659:	sub    BYTE PTR [bx+si],dh
  41265c:	sbb    DWORD PTR [ebp+0x13],ebx
  41265f:	jo     0x41269f
  412661:	sub    DWORD PTR [ebp+0x2d],0x4e
  412665:	call   0x7058:0x8d0f636c
  41266c:	jmp    0x35b57eab
  412671:	lea    ebp,[edx]
  412673:	sub    eax,0x756b89d6
  412678:	iret   
  412679:	xchg   edi,eax
  41267a:	bound  esi,QWORD PTR [ecx]
  41267c:	or     ebp,DWORD PTR [ecx+0x6a]
  41267f:	or     al,BYTE PTR cs:[eax-0x60ffd2a7]
  412686:	sub    ah,BYTE PTR [esi+0x54]
  412689:	inc    ebp
  41268a:	and    eax,0x6ff76b58
  41268f:	xor    eax,0x2e19c36b
  412694:	fadd   DWORD PTR gs:[ebp+0x0]
  412698:	push   0x70548c00
  41269d:	cmp    dh,BYTE PTR [edi]
  41269f:	pop    es
  4126a0:	data16 je 0x412623
  4126a3:	push   es
  4126a4:	gs ins DWORD PTR es:[edi],dx
  4126a6:	loopne 0x4126ed
  4126a8:	jb     0x412713
  4126aa:	int    0x4d
  4126ac:	gs je  0x4126e5
  4126af:	pop    ebx
  4126b0:	imul   ebp,DWORD PTR [ebp-0x7a],0x5a
  4126b4:	jb     0x4126e5
  4126b6:	scas   eax,DWORD PTR es:[edi]
  4126b7:	outs   dx,BYTE PTR ds:[esi]
  4126b8:	imul   edx,DWORD PTR [edi-0x38],0x4e
  4126bc:	push   esi
  4126bd:	data16 ja 0x412703
  4126c0:	imul   edx,DWORD PTR [ebx-0x44],0x86316945
  4126c7:	inc    ebp
  4126c8:	js     0x41272f
  4126ca:	pusha  
  4126cb:	dec    eax
  4126cc:	je     0x412742
  4126ce:	rcl    BYTE PTR [edx],1
  4126d0:	sub    ebp,DWORD PTR [edi]
  4126d2:	les    esp,FWORD PTR [ecx+0x76]
  4126d5:	popa   
  4126d6:	out    0x5f,al
  4126d8:	popa   
  4126d9:	jb     0x412664
  4126db:	pop    ebp
  4126dc:	je     0x412747
  4126de:	jbe    0x412723
  4126e0:	popa   
  4126e1:	ins    DWORD PTR es:[edi],dx
  4126e2:	jno    0x412729
  4126e4:	outs   dx,DWORD PTR ds:[esi]
  4126e5:	cs jae 0x412733
  4126e8:	imul   ebp,DWORD PTR [esi],0x462b6e82
  4126ee:	push   cs
  4126ef:	inc    ecx
  4126f0:	jne    0x412745
  4126f2:	or     eax,0x512f3324
  4126f7:	xor    DWORD PTR [ecx+0x2e],ebp
  4126fa:	cmp    eax,0x6154
  4126ff:	cmp    ecx,ebx
  412701:	dec    esp
  412702:	push   ebx
  412703:	jo     0x41272e
  412705:	dec    ebp
  412706:	inc    esp
  412707:	ja     0x412739
  412709:	cmp    BYTE PTR [ebx+0x9],al
  41270c:	and    BYTE PTR [edi+0x47],cl
  41270f:	imul   ebx,DWORD PTR [esi],0x5704640
  412715:	aas    
  412716:	xor    BYTE PTR [eax-0x5c],ah
  412719:	cmp    al,0x41
  41271b:	or     eax,eax
  41271d:	push   ecx
  41271e:	push   esp
  41271f:	hlt    
  412720:	xchg   esp,eax
  412721:	xor    DWORD PTR [edi+0xc],edx
  412724:	mov    al,ds:0xd9692e34
  412729:	add    DWORD PTR [eax],eax
  41272b:	cmp    ecx,ebx
  41272d:	(bad)  
  41272e:	(bad)  
  41272f:	cld    
  412730:	cdq    
  412731:	cmp    eax,0x1d83853
  412736:	add    BYTE PTR [ecx],bh
  412738:	fld    DWORD PTR [ecx]
  41273a:	add    BYTE PTR [ecx],bh
  41273c:	fst    DWORD PTR [edx+0x4d]
  41273f:	mul    DWORD PTR [esi+ecx*2+0x459c0b3f]
  412746:	dec    ebx
  412747:	shl    BYTE PTR [ebp+0x6f],1
  41274a:	ins    DWORD PTR es:[edi],dx
  41274b:	retf   0x5b71
  41274e:	je     0x41273d
  412750:	sbb    DWORD PTR [esi+ebp*2-0x23],0xdd716e61
  412758:	adc    eax,0x3cab726f
  41275d:	push   esi
  41275e:	je     0x4126e7
  412760:	xor    al,0x72
  412762:	jno    0x412764
  412764:	nop
  412765:	and    dl,BYTE PTR [esi+0x5c]
  412768:	test   BYTE PTR [ebx+0x5b],cl
  41276b:	outs   dx,BYTE PTR ds:[esi]
  41276c:	mov    ch,BYTE PTR ds:0xd99d6c63
  412772:	push   eax
  412773:	outs   dx,BYTE PTR ds:[esi]
  412774:	nop
  412775:	and    esi,DWORD PTR [ecx+0x74]
  412778:	cwde   
  412779:	add    BYTE PTR [ebx],dl
  41277b:	pop    eax
  41277c:	mov    BYTE PTR [ecx+ebx*1+0x5d],ch
  412780:	pop    edi
  412781:	pop    ebx
  412782:	out    0x3f,eax
  412784:	pop    esi
  412785:	outs   dx,DWORD PTR ds:[esi]
  412786:	pop    ss
  412787:	pop    eax
  412788:	jle    0x4127f3
  41278a:	xor    eax,0xe75d6265
  41278f:	inc    edi
  412790:	cmp    DWORD PTR [eax],eax
  412792:	out    0x3,eax
  412794:	cmp    DWORD PTR [eax],eax
  412796:	out    0x3,eax
  412798:	cmp    DWORD PTR [edi-0x34],edx
  41279b:	jno    0x4127c4
  41279d:	pop    ebp
  41279e:	retf   
  41279f:	xor    ch,BYTE PTR [ebx+0x12]
  4127a2:	retf   
  4127a3:	push   edi
  4127a4:	adc    eax,0x84fb600
  4127a9:	cmp    ecx,esp
  4127ab:	outs   dx,DWORD PTR ds:[esi]
  4127ac:	push   esi
  4127ad:	pop    edi
  4127ae:	mov    bl,0x5c
  4127b0:	pop    es
  4127b1:	pop    ebp
  4127b2:	stos   BYTE PTR es:[edi],al
  4127b3:	push   esi
  4127b4:	pop    ss
  4127b5:	outs   dx,DWORD PTR ds:[esi]
  4127b6:	mov    esi,0x8c4f1a57
  4127bb:	jb     0x4127a5
  4127bd:	pop    eax
  4127be:	mov    ss,WORD PTR [ebp-0xa]
  4127c1:	pop    ebx
  4127c2:	out    0x53,eax
  4127c4:	jmp    0x412818
  4127c6:	mov    ah,BYTE PTR [eax+0x0]
  4127c9:	call   0xeda0d83c
  4127ce:	push   edx
  4127cf:	call   0xd756:0x806ec860
  4127d6:	cmp    BYTE PTR [ebx-0x18ffc6fd],al
  4127dc:	add    edi,DWORD PTR [ecx]
  4127de:	add    bh,ah
  4127e0:	add    edi,DWORD PTR [ecx]
  4127e2:	pop    ebp
  4127e3:	pop    ecx
  4127e4:	imul   ebp,DWORD PTR [ecx+0x4f321a6c],0x5c
  4127eb:	push   ebx
  4127ec:	pop    eax
  4127ed:	cmp    DWORD PTR ds:0x6c896b39,edi
  4127f3:	add    BYTE PTR [edi+ebp*2],bl
  4127f6:	jo     0x41286a
  4127f8:	mov    DWORD PTR ds:[ebp+0x61],ebx
  4127fc:	sbb    eax,0x8744179
  412801:	xor    eax,0x3ae90000
  412806:	adc    ah,BYTE PTR [ebx+0x11]
  412809:	jle    0x41280b
  41280b:	push   ecx
  41280c:	push   ss
  41280d:	ja     0x41287b
  41280f:	jne    0x412819
  412811:	dec    ebx
  412812:	pop    ebp
  412813:	pop    esp
  412814:	push   ds
  412815:	bound  edx,QWORD PTR [edx+0x52]
  412818:	sub    BYTE PTR [ebx+0x0],ch
  41281b:	ins    DWORD PTR es:[edi],dx
  41281c:	fst    DWORD PTR [edi]
  41281e:	push   edx
  41281f:	add    al,ch
  412821:	cmp    al,BYTE PTR [eax]
  412823:	sbb    dl,0x2
  412826:	pop    ebp
  412827:	ins    BYTE PTR es:[edi],dx
  412828:	mov    ebp,0xcd2e2e69
  41282d:	add    dh,ch
  41282f:	push   ebx
  412830:	add    BYTE PTR [edx-0x429cc4ae],bl
  412836:	inc    esp
  412837:	push   ebx
  412838:	ins    BYTE PTR es:[edi],dx
  412839:	(bad)
  41283c:	push   eax
  41283d:	mov    dh,ah
  41283f:	push   edi
  412840:	aas    
  412841:	jmp    0xe9412880
  412846:	cmp    ah,BYTE PTR [esi-0x4cc557d9]
  41284c:	daa    
  41284d:	test   al,0x3a
  41284f:	ret    
  412850:	daa    
  412851:	test   al,0x3a
  412853:	in     eax,dx
  412854:	daa    
  412855:	test   al,0x3a
  412857:	jmp    FWORD PTR [ecx]
  412859:	test   al,0x3a
  41285b:	cvtpi2ps xmm5,QWORD PTR [eax]
  41285e:	cmp    eax,0x35282a1f
  412863:	sub    BYTE PTR [edx],ch
  412865:	sub    BYTE PTR ds:0x35282a33,bh
  41286b:	pop    edi
  41286c:	sub    al,BYTE PTR [eax]
  41286e:	popa   
  41286f:	cld    
  412870:	jnp    0x41289c
  412872:	popa   
  412873:	cld    
  412874:	lahf   
  412875:	sub    dl,BYTE PTR [ecx-0x4]
  412878:	mov    eax,0xfffc512a
  41287d:	jmp    eax
  41287f:	cld    
  412880:	cld    
  412881:	jmp    eax
  412883:	jl     0x412886
  412885:	add    al,dl
  412887:	cld    
  412888:	dec    eax
  412889:	jns    0x41287b
  41288b:	and    BYTE PTR [ebx+0x63],ch
  41288e:	aad    0x49
  412890:	popa   
  412891:	outs   dx,BYTE PTR ds:[esi]
  412892:	add    ah,al
  412894:	outs   dx,DWORD PTR ds:[esi]
  412895:	add    BYTE PTR [ecx],al
  412897:	sar    ah,1
  412899:	jg     0x4128b5
  41289b:	sar    ah,1
  41289d:	inc    DWORD PTR [eax-0x70]
  4128a0:	ins    BYTE PTR es:[edi],dx
  4128a1:	inc    esp
  4128a2:	popa   
  4128a3:	test   BYTE PTR [ebp+0x0],bl
  4128a6:	add    DWORD PTR [eax-0x6fe38004],edx
  4128ac:	cld    
  4128ad:	dec    DWORD PTR [ebx+0x6f]
  4128b0:	pop    edi
  4128b1:	pop    ebp
  4128b2:	ins    BYTE PTR es:[edi],dx
  4128b3:	inc    eax
  4128b4:	cmp    eax,0x5dd47070
  4128b9:	je     0x41291c
  4128bb:	nop
  4128bc:	std    
  4128bd:	(bad)  
  4128be:	jmp    eax
  4128c0:	sbb    al,0x0
  4128c2:	add    BYTE PTR [eax+0x3f],ah
  4128c5:	pop    ebp
  4128c6:	arpl   WORD PTR [eax+0x50010041],di
  4128cc:	cld    
  4128cd:	jg     0x4128f0
  4128cf:	pusha  
  4128d0:	cld    
  4128d1:	inc    DWORD PTR [edx-0x41]
  4128d4:	dec    ebx
  4128d5:	imul   esi,DWORD PTR [di+0x6f],0x7ffc5001
  4128de:	and    ah,BYTE PTR [eax]
  4128e0:	add    al,0x0
  4128e2:	dec    eax
  4128e3:	mov    DWORD PTR [edi],esi
  4128e5:	je     0x412956
  4128e7:	cmp    DWORD PTR [ebx],edi
  4128e9:	pop    ebx
  4128ea:	add    BYTE PTR [ebx],bh
  4128ec:	jmp    0xe97da8f2
  4128f1:	add    DWORD PTR [eax],eax
  4128f3:	jl     0x412935
  4128f5:	and    al,0x44
  4128f7:	add    BYTE PTR [esi-0x6b94a8b6],dl
  4128fd:	pop    ds
  4128fe:	pop    eax
  4128ff:	jno    0x41293a
  412901:	jmp    0x412904
  412903:	add    BYTE PTR [ecx+0x390001ca],bh
  412909:	sub    dh,BYTE PTR [ecx+0x6b]
  41290c:	dec    esp
  41290d:	fisubr WORD PTR [edi+0x20]
  412910:	js     0x4128eb
  412912:	push   ecx
  412913:	inc    esp
  412914:	pop    eax
  412915:	aad    0x64
  412917:	add    BYTE PTR [eax],bh
  412919:	jmp    0xe957a91f
  41291e:	add    DWORD PTR [eax],eax
  412920:	add    al,0xe0
  412922:	and    DWORD PTR [eax+0x20],edx
  412925:	retf   0x7355
  412928:	sub    ecx,esp
  41292a:	push   esi
  41292b:	add    BYTE PTR [ebx],bh
  41292d:	jmp    0xe9a8a933
  412932:	add    DWORD PTR [eax],eax
  412934:	cli    
  412935:	int    0x70
  412937:	imul   edx,DWORD PTR [esi],0xffffffc7
  41293a:	and    DWORD PTR [esi+ecx*1-0x36],eax
  41293e:	pop    eax
  41293f:	imul   ebx,esp,0x76
  412942:	push   ebp
  412943:	jno    0x41297e
  412945:	jmp    0x412948
  412947:	add    BYTE PTR [ecx+0x390001c6],bh
  41294d:	stos   BYTE PTR es:[edi],al
  41294e:	jb     0x4129bb
  412950:	in     al,0x75
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	and    al,bh
  412955:	test   BYTE PTR [eax+0x67],dh
  412958:	xlat   BYTE PTR ds:[ebx]
  412959:	jg     0x4129b1
  41295b:	je     0x41295d
  41295d:	retf   
  41295e:	xchg   DWORD PTR [ebp+0x67],edx
  412961:	scas   eax,DWORD PTR es:[edi]
  412962:	add    BYTE PTR [esp-0x7b],cl
  412966:	outs   dx,DWORD PTR ds:[esi]
  412967:	dec    esi
  412968:	jo     0x412912
  41296a:	add    al,ch
  41296c:	add    edi,DWORD PTR [ecx]
  41296e:	adc    BYTE PTR [edi],0x4
  412971:	cmp    DWORD PTR [eax],eax
  412973:	sub    BYTE PTR [eax-0x5e],ch
  412976:	imul   ecx,DWORD PTR [ebp+0x6d],0x65395488
  41297d:	test   DWORD PTR [ecx+0x35],ebp
  412980:	imul   ebx,DWORD PTR [ecx],0x5d731634
  412986:	push   ebx
  412987:	out    0x4,eax
  412989:	cmp    DWORD PTR [eax],eax
  41298b:	or     BYTE PTR [bx+di],bh
  41298e:	add    bh,ah
  412990:	xor    ebx,DWORD PTR [edx+0x52]
  412993:	cli    
  412994:	jb     0x4129f5
  412996:	popa   
  412997:	or     eax,DWORD PTR [eax+ebp*2]
  41299a:	outs   dx,DWORD PTR ds:[esi]
  41299b:	or     eax,0xf9614458
  4129a0:	push   0x66d04d15
  4129a5:	sub    ebp,DWORD PTR [edi-0x26]
  4129a8:	jb     0x4129c9
  4129aa:	push   esp
  4129ab:	mov    bl,0x3a
  4129ad:	push   ss
  4129ae:	outs   dx,BYTE PTR ds:[esi]
  4129af:	ret    
  4129b0:	jb     0x4129be
  4129b2:	push   ebx
  4129b3:	mov    ds:0xb9520a46,eax
  4129b8:	push   0x689d5417
  4129bd:	or     edx,DWORD PTR [ebx-0x40]
  4129c0:	jb     0x4129c2
  4129c2:	out    0x3b,eax
  4129c4:	lods   al,BYTE PTR ds:[esi]
  4129c5:	pop    ebx
  4129c6:	jmp    0xda96b836
  4129cb:	push   ecx
  4129cc:	mov    bl,0x36
  4129ce:	shl    DWORD PTR [ebx+edi*2+0x6f],1
  4129d2:	sbb    DWORD PTR [esi-0x6a],eax
  4129d5:	outs   dx,DWORD PTR ds:[esi]
  4129d6:	aad    0x64
  4129d8:	jns    0x412a30
  4129da:	cmp    DWORD PTR [eax],esi
  4129dc:	add    BYTE PTR [esi-0x3bdfcbf9],ah
  4129e2:	(bad)  
  4129e3:	and    BYTE PTR [eax+0x3d],cl
  4129e6:	jno    0x412a18
  4129e8:	sub    eax,0xb106b18
  4129ed:	jecxz  0x412a61
  4129ef:	imul   esi,DWORD PTR [ecx+0x55],0x37
  4129f3:	and    BYTE PTR [ebx],ah
  4129f5:	cmp    bh,BYTE PTR [esi]
  4129f7:	or     bh,BYTE PTR [edi]
  4129f9:	dec    edx
  4129fa:	pushf  
  4129fb:	popa   
  4129fc:	jo     0x412a3b
  4129fe:	pop    ds
  4129ff:	and    BYTE PTR [edx],ch
  412a01:	(bad)  
  412a02:	and    al,0x9
  412a04:	or     ch,BYTE PTR [eax]
  412a06:	push   esp
  412a07:	pop    edi
  412a08:	arpl   WORD PTR [ecx],bx
  412a0a:	sub    DWORD PTR [ecx],0x6b540743
  412a10:	add    BYTE PTR fs:[ebx+0x63],cl
  412a14:	cmp    cl,cl
  412a16:	arpl   WORD PTR [ebx+eiz*2+0xf],sp
  412a1a:	popa   
  412a1b:	gs je  0x412a0e
  412a1e:	push   cs
  412a1f:	and    BYTE PTR [edx],ch
  412a21:	mov    dl,0xb
  412a23:	sbb    DWORD PTR [eax],esi
  412a25:	hlt    
  412a26:	add    BYTE PTR [edi+edi*1],bh
  412a29:	ins    DWORD PTR es:[edi],dx
  412a2a:	iret   
  412a2b:	push   cs
  412a2c:	popa   
  412a2d:	outs   dx,BYTE PTR ds:[esi]
  412a2e:	fisttp QWORD PTR [edi+0x4c]
  412a31:	arpl   WORD PTR [edi+0x3685421],di
  412a37:	push   ebp
  412a38:	and    DWORD PTR [esp+esi*4+0x37],ebp
  412a3c:	or     al,BYTE PTR [ecx-0x3a]
  412a3f:	or     BYTE PTR [esi+0x63],ch
  412a42:	retf   0x650e
  412a45:	ins    DWORD PTR es:[edi],dx
  412a46:	xchg   edi,eax
  412a47:	dec    esp
  412a48:	and    BYTE PTR [ecx-0x73],ah
  412a4b:	jmp    0x2d258d9e
  412a50:	aas    
  412a51:	ins    DWORD PTR es:[edi],dx
  412a52:	jg     0x412a42
  412a54:	pusha  
  412a55:	outs   dx,BYTE PTR ds:[esi]
  412a56:	add    ah,cl
  412a58:	sub    eax,0x65c07954
  412a5d:	cmp    ah,BYTE PTR [eax]
  412a5f:	mov    cl,0x31
  412a61:	jo     0x412acf
  412a63:	mov    ecx,0x89745d63
  412a68:	dec    edi
  412a69:	outs   dx,BYTE PTR ds:[esi]
  412a6a:	das    
  412a6b:	ja     0x412ad0
  412a6d:	je     0x412ad4
  412a6f:	jl     0x412a9e
  412a71:	outs   dx,DWORD PTR ds:[esi]
  412a72:	je     0x412ae6
  412a74:	gs pop ebp
  412a76:	ins    DWORD PTR es:[edi],dx
  412a77:	add    eax,0x766f3f0b
  412a7c:	cmp    BYTE PTR [ecx+0x6e],ah
  412a7f:	cmp    al,0x2d
  412a81:	inc    ecx
  412a82:	outs   dx,BYTE PTR ds:[esi]
  412a83:	or     DWORD PTR [edi+0x64],0x69
  412a87:	inc    esi
  412a88:	cmp    ah,BYTE PTR [bx+si]
  412a8b:	add    BYTE PTR [edx],dh
  412a8d:	imul   ebp,DWORD PTR [esi+0x61],0xa093942
  412a94:	or     eax,0xe5726133
  412a99:	inc    ecx
  412a9a:	arpl   WORD PTR [ebp+0x36],sp
  412a9d:	cmp    BYTE PTR [edx],bh
  412a9f:	and    BYTE PTR ds:0xb4697a4f,dl
  412aa5:	ins    BYTE PTR es:[edi],dx
  412aa6:	pop    ebp
  412aa7:	das    
  412aa8:	dec    esp
  412aa9:	adc    dh,BYTE PTR [eax]
  412aab:	and    BYTE PTR [eax+0x63],cl
  412aae:	imul   ebp,DWORD PTR [ebp-0x80],0x61
  412ab2:	je     0x412b1d
  412ab4:	sub    BYTE PTR [ecx+eiz*2+0x3b],0x40
  412ab9:	dec    ebp
  412aba:	dec    edi
  412abb:	dec    ecx
  412abc:	frstor [eax]
  412abe:	xor    DWORD PTR [esi],ebp
  412ac0:	cmp    bl,0x1f
  412ac3:	push   edi
  412ac4:	jns    0x412b14
  412ac6:	outs   dx,DWORD PTR fs:[esi]
  412ac8:	iret   
  412ac9:	xor    esp,DWORD PTR [eax]
  412acb:	cmp    DWORD PTR [eax+0x29],ebx
  412ace:	or     DWORD PTR [edx],ecx
  412ad0:	cmp    esp,esp
  412ad2:	or     eax,DWORD PTR [eax]
  412ad4:	cli    
  412ad5:	pop    ebp
  412ad6:	outs   dx,DWORD PTR ds:[esi]
  412ad7:	je     0x412aad
  412ad9:	je     0x412b30
  412adb:	sub    esi,ebp
  412add:	sub    DWORD PTR [edi+0x65],0xffffffc5
  412ae1:	jle    0x412afe
  412ae3:	add    BYTE PTR [ebp-0x5aa09ba6],al
  412ae9:	xor    BYTE PTR [ebp+0x6e],ch
  412aec:	arpl   cx,bp
  412aee:	inc    esi
  412aef:	inc    ebx
  412af0:	add    BYTE PTR [ebp+0x59712709],al
  412af6:	and    DWORD PTR [eax],edi
  412af8:	push   esp
  412af9:	imul   esi,edx,0xec492e12
  412aff:	pop    es
  412b00:	dec    eax
  412b01:	mov    ss,WORD PTR [esi]
  412b03:	pop    eax
  412b04:	cmp    bl,BYTE PTR [ecx]
  412b06:	add    al,0x51
  412b08:	or     eax,DWORD PTR [ebx+0x28]
  412b0b:	popa   
  412b0c:	popa   
  412b0d:	pop    esp
  412b0e:	stc    
  412b0f:	push   edi
  412b10:	cmp    bl,BYTE PTR [ecx]
  412b12:	mov    edi,0xdf442a2e
  412b17:	inc    esp
  412b18:	popa   
  412b19:	pop    edx
  412b1a:	or     al,0x54
  412b1c:	je     0x412b32
  412b1e:	and    al,0x6e
  412b20:	popa   
  412b21:	dec    esi
  412b22:	or     eax,0x8f1e6e6b
  412b27:	and    DWORD PTR [edi+0x15],esp
  412b2a:	int3   
  412b2b:	imul   esi,DWORD PTR [eax+edx*1-0x4b],0x5c
  412b30:	sub    al,0x59
  412b32:	call   FWORD PTR [eax]
  412b34:	outs   dx,DWORD PTR ds:[esi]
  412b35:	push   esp
  412b36:	stc    
  412b37:	push   cs
  412b38:	or     bh,dl
  412b3a:	mov    cl,0x6b
  412b3c:	outs   dx,BYTE PTR ds:[esi]
  412b3d:	sbb    al,0xc6
  412b3f:	push   ebp
  412b40:	addr16 push cs
  412b42:	ret    
  412b43:	pop    ss
  412b44:	and    dl,bl
  412b46:	pushf  
  412b47:	outs   dx,BYTE PTR ds:[esi]
  412b48:	jno    0x412b1e
  412b4a:	push   ebx
  412b4c:	or     DWORD PTR [edx],ecx
  412b4e:	dec    edi
  412b4f:	test   BYTE PTR [ecx+0x12],dl
  412b52:	inc    ecx
  412b53:	mov    gs,WORD PTR [eax+0x0]
  412b56:	out    0x53,eax
  412b58:	shl    DWORD PTR [ebx],1
  412b5a:	add    ch,BYTE PTR [ebx-0x7f]
  412b5d:	ins    BYTE PTR es:[edi],dx
  412b5e:	aad    0x6b
  412b60:	mov    BYTE PTR [esi],ch
  412b62:	add    eax,0x6123b72a
  412b67:	pop    edi
  412b68:	jle    0x412bda
  412b6a:	test   eax,0x9b6d5b61
  412b6f:	ins    BYTE PTR es:[edi],dx
  412b70:	inc    esp
  412b71:	sbb    ebx,DWORD PTR [ecx+0x4d]
  412b74:	cmp    cl,BYTE PTR [ebp+0x7a]
  412b77:	and    BYTE PTR [esi+ebp*1],dl
  412b7a:	dec    ecx
  412b7b:	pop    ss
  412b7c:	pop    es
  412b7d:	aaa    
  412b7e:	sahf   
  412b7f:	push   0x43
  412b81:	outs   dx,DWORD PTR ds:[esi]
  412b82:	test   BYTE PTR [edi+0x7],cl
  412b85:	sbb    eax,0x9dc2931
  412b8a:	inc    edx
  412b8b:	push   es
  412b8c:	out    0x2d,eax
  412b8e:	cmp    DWORD PTR [edx],ebp
  412b90:	int    0x3
  412b92:	jge    0x412bba
  412b94:	lds    ebp,FWORD PTR [ecx]
  412b96:	cmp    DWORD PTR [esi],esp
  412b98:	mov    ebp,0xc6a3929
  412b9d:	pop    eax
  412b9e:	push   ax
  412ba0:	adc    BYTE PTR [ebx],dl
  412ba2:	or     ebp,DWORD PTR [edx]
  412ba4:	or     esi,DWORD PTR [eax+0x25]
  412ba7:	add    BYTE PTR ds:0xd7412569,bl
  412bad:	ins    BYTE PTR es:[edi],dx
  412bae:	sti    
  412baf:	push   esp
  412bb0:	lds    esp,FWORD PTR [ebp+0x1a]
  412bb3:	dec    esi
  412bb4:	lods   eax,DWORD PTR ds:[esi]
  412bb5:	push   ecx
  412bb6:	sbb    ah,BYTE PTR [ebp-0x19]
  412bb9:	dec    ebp
  412bba:	add    BYTE PTR [edx],bl
  412bbc:	push   esp
  412bbd:	pushf  
  412bbe:	push   edx
  412bbf:	sbb    cl,BYTE PTR [esi-0x5c]
  412bc2:	ins    DWORD PTR es:[edi],dx
  412bc3:	or     ch,BYTE PTR [ebp+0x0]
  412bc6:	jmp    0xc4ad9905
  412bcb:	dec    ebx
  412bcc:	push   cs
  412bcd:	cs (bad) 
  412bcf:	(bad)  
  412bd0:	imul   eax,DWORD PTR [eax],0xffffffba
  412bd3:	push   es
  412bd4:	gs dec ebp
  412bd6:	cdq    
  412bd7:	loope  0x412c42
  412bd9:	push   ecx
  412bda:	xchg   ebp,eax
  412bdb:	fisttp WORD PTR [ebp+0x5f]
  412bde:	mov    ss,ecx
  412be0:	(bad)  
  412be1:	inc    DWORD PTR [edi+0x795f51d6]
  412be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412be8:	rdmsr  
  412bea:	mov    edi,0xe96c6c96
  412bef:	jnp    0x412c5d
  412bf1:	ins    BYTE PTR es:[edi],dx
  412bf2:	dec    esi
  412bf3:	cwde   
  412bf4:	cmp    DWORD PTR [esp+ecx*2+0x7a],esi
  412bf8:	push   0x64
  412bfa:	and    BYTE PTR [edi-0x65af8b9f],bl
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	addr16 inc ebx
  412c03:	xchg   esi,eax
  412c04:	das    
  412c05:	addr16 dec ebp
  412c07:	cmp    eax,0x5844683f
  412c0c:	addr16 push esp
  412c0e:	push   ss
  412c0f:	push   eax
  412c10:	pop    ebp
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	sub    al,0x56
  412c14:	bound  ecx,QWORD PTR gs:[ebx+ebp*2]
  412c18:	dec    edi
  412c19:	push   0x46006500
  412c1e:	sti    
  412c1f:	add    BYTE PTR [edi+0x5d],bl
  412c22:	push   ecx
  412c23:	adc    BYTE PTR [ecx+0x0],dl
  412c26:	inc    ecx
  412c27:	sti    
  412c28:	pop    ds
  412c29:	fs inc ebx
  412c2b:	inc    DWORD PTR [edi]
  412c2d:	gs arpl bx,bx
  412c30:	sbb    edx,DWORD PTR [ebx+eiz*2-0x58]
  412c34:	cmp    bh,BYTE PTR [edi]
  412c36:	jb     0x412c04
  412c38:	push   ds
  412c39:	inc    edx
  412c3a:	jb     0x412c00
  412c3c:	pop    ss
  412c3d:	add    BYTE PTR [ecx+0x0],al
  412c40:	ret    0x7036
  412c43:	je     0x412c1c
  412c45:	bound  esi,QWORD PTR [ebp+edx*2-0x4d]
  412c49:	bound  esi,QWORD PTR [edx+0x4b]
  412c4c:	jne    0x412c84
  412c4e:	add    BYTE PTR [ebx-0x3e],al
  412c51:	ss jo  0x412cc8
  412c54:	xchg   ebp,eax
  412c55:	xor    eax,0x31b26f70
  412c5a:	inc    edi
  412c5b:	gs test eax,0xb9723efd
  412c61:	sub    eax,0x30b54474
  412c66:	je     0x412cda
  412c68:	mov    edi,0xa9654735
  412c6d:	std    
  412c6e:	ds jb  0x412c0a
  412c71:	xor    al,0x74
  412c73:	push   edx
  412c74:	jne    0x412cc6
  412c76:	popa   
  412c77:	popa   
  412c78:	jae    0x412cdb
  412c7a:	aas    
  412c7b:	outs   dx,DWORD PTR ds:[esi]
  412c7c:	dec    esi
  412c7d:	cmp    BYTE PTR [ecx+0x78],ah
  412c80:	inc    esp
  412c81:	add    al,0x52
  412c83:	add    BYTE PTR gs:[esi+0x61],al
  412c87:	jb     0x412cfd
  412c89:	push   esp
  412c8a:	imul   ecx,DWORD PTR [edi+0x65],0x2c
  412c8e:	bound  eax,QWORD PTR [eax]
  412c90:	dec    edi
  412c91:	inc    eax
  412c92:	popa   
  412c93:	outs   dx,BYTE PTR ds:[esi]
  412c94:	push   eax
  412c95:	inc    edx
  412c96:	imul   ebx,DWORD PTR [edi+0x65],0x33
  412c9a:	das    
  412c9b:	push   esp
  412c9c:	outs   dx,DWORD PTR ds:[esi]
  412c9d:	cmp    esp,DWORD PTR [ecx+0x6e]
  412ca0:	add    BYTE PTR [ecx],cl
  412ca2:	imul   esi,DWORD PTR [eax+0x65],0x6e6b2fc2
  412ca9:	inc    ecx
  412caa:	cmp    BYTE PTR [ecx+0x4c],ah
  412cad:	scas   eax,DWORD PTR es:[edi]
  412cae:	arpl   WORD PTR [ebx+0x65],sp
  412cb1:	je     0x412cfe
  412cb3:	outs   dx,BYTE PTR ds:[esi]
  412cb4:	push   ebp
  412cb5:	and    DWORD PTR [ecx+0x72],0x0
  412cb9:	cmp    DWORD PTR [edx-0x661a8b9a],ebp
  412cbf:	push   0x6b901763
  412cc4:	pushw  cs
  412cc6:	xchg   ebp,eax
  412cc7:	outs   dx,BYTE PTR ds:[esi]
  412cc8:	pop    edi
  412cc9:	in     eax,dx
  412cca:	mov    edi,0xa6396e6c
  412ccf:	ins    BYTE PTR es:[edi],dx
  412cd0:	outs   dx,BYTE PTR ds:[esi]
  412cd1:	out    dx,eax
  412cd2:	mov    ecx,DWORD PTR [edi+0x74]
  412cd5:	or     dh,BYTE PTR [eax+0x65]
  412cd8:	push   esp
  412cd9:	out    0x95,al
  412cdb:	push   ebp
  412cdc:	jb     0x412cbe
  412cde:	pop    eax
  412cdf:	fs push ecx
  412ce1:	ror    BYTE PTR [edx-0x7612ffbe],1
  412ce7:	fs ins DWORD PTR es:[edi],dx
  412ce9:	add    BYTE PTR [edi-0x549caf8c],ah
  412cef:	test   al,0x1
  412cf1:	dec    esp
  412cf2:	xchg   esi,eax
  412cf3:	cs ins DWORD PTR es:[edi],dx
  412cf5:	jae    0x412ca0
  412cf7:	sbb    DWORD PTR [esi+0x67],edx
  412cfa:	pop    DWORD PTR [eax+0x68]
  412cfd:	arpl   WORD PTR [esi-0x6aa0cdc4],dx
  412d03:	adc    al,0x5f
  412d05:	aas    
  412d06:	cmp    DWORD PTR [eax],ebp
  412d08:	pusha  
  412d09:	push   0x6c
  412d0b:	sbb    dl,BYTE PTR [eax+0x54]
  412d0e:	pop    esi
  412d0f:	inc    edx
  412d10:	pop    edi
  412d11:	outs   dx,BYTE PTR ds:[esi]
  412d12:	mov    ebx,edi
  412d14:	push   0x76
  412d16:	push   eax
  412d17:	add    eax,0xfa5c655f
  412d1c:	add    eax,DWORD PTR [eax]
  412d1e:	pop    edx
  412d1f:	sti    
  412d20:	pop    edx
  412d21:	jo     0x412d70
  412d23:	call   0x68:0x5552e13
  412d2a:	cli    
  412d2b:	add    edx,DWORD PTR [esi+0x74]
  412d2e:	(bad)  
  412d2f:	fsub   DWORD PTR [eax+0x6e]
  412d32:	or     al,BYTE PTR [eax]
  412d34:	loopne 0x412d8c
  412d36:	and    eax,0xd36cc5d
  412d3b:	fldenv [bx+si+0x4e]
  412d3f:	add    BYTE PTR [edx-0x53b3f4a0],ch
  412d45:	imul   ecx,DWORD PTR [edx],0xeb60aa65
  412d4b:	dec    ebx
  412d4c:	shl    BYTE PTR [ecx+0x0],0xd6
  412d50:	(bad)  
  412d51:	enter  0xda4f,0x52
  412d55:	mov    al,0x69
  412d57:	or     BYTE PTR [esi+ecx*4+0x55],cl
  412d5b:	(bad)  
  412d5d:	test   eax,0xaa4bcb60
  412d62:	addr16 aam 0x52
  412d65:	mov    WORD PTR [esi],?
  412d67:	lds    esp,FWORD PTR [esi+0x79]
  412d6a:	pusha  
  412d6b:	cmp    DWORD PTR [ebx+0x79],eax
  412d6e:	pop    esp
  412d6f:	test   eax,0x9666a84c
  412d74:	dec    ebp
  412d75:	push   eax
  412d76:	push   esi
  412d77:	call   0x4d69:0x8d564443
  412d7e:	ins    DWORD PTR es:[edi],dx
  412d7f:	cwde   
  412d80:	popa   
  412d81:	push   ebx
  412d82:	popa   
  412d83:	imul   edx,DWORD PTR [edx+0x50],0x444c5e52
  412d8a:	dec    edi
  412d8b:	pop    edx
  412d8c:	pop    ecx
  412d8d:	out    0x3,eax
  412d8f:	cmp    DWORD PTR [eax],eax
  412d91:	out    0x3,eax
  412d93:	cmp    DWORD PTR [eax],eax
  412d95:	out    0x3,eax
  412d97:	cmp    DWORD PTR [eax],eax
  412d99:	out    0x3,eax
  412d9b:	cmp    DWORD PTR [eax],eax
  412d9d:	out    0x3,eax
  412d9f:	cmp    DWORD PTR [eax],eax
  412da1:	out    0x3,eax
  412da3:	cmp    DWORD PTR [eax],eax
  412da5:	out    0x3,eax
  412da7:	cmp    DWORD PTR [eax],eax
  412da9:	out    0x3,eax
  412dab:	cmp    DWORD PTR [eax],eax
  412dad:	add    cl,ch
  412daf:	cmp    al,BYTE PTR [eax]
  412db1:	add    cl,ch
  412db3:	add    BYTE PTR [edx],bh
  412db5:	add    BYTE PTR [eax],al
  412db7:	jmp    0xe9412df6
  412dbc:	cmp    al,BYTE PTR [eax]
  412dbe:	add    cl,ch
  412dc0:	cmp    al,BYTE PTR [eax]
  412dc2:	add    cl,ch
  412dc4:	cmp    al,BYTE PTR [eax]
  412dc6:	add    cl,ch
  412dc8:	cmp    al,BYTE PTR [eax]
  412dca:	add    cl,ch
  412dcc:	cmp    al,BYTE PTR [eax]
  412dce:	add    cl,ch
  412dd0:	cmp    al,BYTE PTR [eax]
  412dd2:	add    cl,ch
  412dd4:	cmp    al,BYTE PTR [eax]
  412dd6:	add    cl,ch
  412dd8:	cmp    al,BYTE PTR [eax]
  412dda:	add    cl,ch
  412ddc:	cmp    al,BYTE PTR [eax]
  412dde:	add    cl,ch
  412de0:	cmp    al,BYTE PTR [eax]
  412de2:	add    cl,ch
  412de4:	cmp    al,BYTE PTR [eax]
  412de6:	add    cl,ch
  412de8:	cmp    al,BYTE PTR [eax]
  412dea:	add    cl,ch
  412dec:	cmp    al,BYTE PTR [eax]
  412dee:	add    cl,ch
  412df0:	cmp    cl,BYTE PTR [eax+0x55]
  412df3:	mov    al,ds:0xc790066
  412df8:	inc    ebp
  412df9:	sbb    BYTE PTR [eax+0xc],bl
  412dfc:	adc    BYTE PTR ss:[ecx+esi*1],dh
  412e00:	push   esi
  412e01:	and    DWORD PTR [eax],esi
  412e03:	adc    eax,0xf9232945
  412e08:	and    al,0x38
  412e0a:	and    edi,ecx
  412e0c:	dec    esp
  412e0d:	cmp    BYTE PTR [ebx],ch
  412e0f:	or     al,0x45
  412e11:	adc    bl,BYTE PTR [eax+0x4]
  412e14:	dec    ebp
  412e15:	adc    bl,BYTE PTR [eax-0x34]
  412e18:	add    BYTE PTR [edx+0x12],cl
  412e1b:	pop    eax
  412e1c:	les    ebp,FWORD PTR [edx]
  412e1e:	adc    bl,BYTE PTR [eax-0x34]
  412e21:	sub    dl,BYTE PTR [edx]
  412e23:	pop    eax
  412e24:	les    ebp,FWORD PTR [edx]
  412e26:	adc    bl,BYTE PTR [eax+0x0]
  412e29:	xor    eax,0xac6542fc
  412e2e:	inc    edi
  412e2f:	pop    ebp
  412e30:	je     0x412e6b
  412e32:	xor    ah,BYTE PTR [ecx+0x53]
  412e35:	test   eax,0x8565742c
  412e3a:	dec    edx
  412e3b:	outs   dx,BYTE PTR ds:[esi]
  412e3c:	xchg   WORD PTR [ecx],ax
  412e3f:	addr16 gs jb 0x412eaa
  412e43:	popa   
  412e44:	ins    BYTE PTR es:[edi],dx
  412e45:	and    ebp,esi
  412e47:	sub    eax,0x5d6464
  412e4c:	dec    ecx
  412e4d:	mov    bl,0x10
  412e4f:	imul   esi,DWORD PTR [edi+0x6e],0x5
  412e53:	push   eax
  412e54:	jb     0x412dfd
  412e56:	pop    esp
  412e57:	popa   
  412e58:	jae    0x412e1d
  412e5a:	add    DWORD PTR [edi+0x6f],ecx
  412e5d:	mov    esi,0xb2617345
  412e62:	ss pop esp
  412e64:	inc    esi
  412e65:	mov    cl,0x2b
  412e67:	pop    esp
  412e68:	push   eax
  412e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e6a:	inc    esi
  412e6b:	arpl   WORD PTR [ecx-0x3a],bp
  412e6e:	sub    ebx,DWORD PTR [esi+eax*2-0x34]
  412e72:	adc    BYTE PTR [eax+ecx*2-0x59],bl
  412e76:	sub    al,0x74
  412e78:	jae    0x412e8a
  412e7a:	or     al,0x6b
  412e7c:	data16 add BYTE PTR [edi+ebp*1+0x5d],ch
  412e81:	jb     0x412f00
  412e83:	sbb    BYTE PTR [esi+0x61],al
  412e86:	(bad)  
  412e87:	out    dx,al
  412e88:	pop    ebx
  412e89:	push   eax
  412e8a:	fs inc ebp
  412e8c:	arpl   WORD PTR [ecx-0x7a],bp
  412e8f:	sub    ebx,DWORD PTR [esi+eax*2+0x4c]
  412e93:	or     al,0x5c
  412e95:	dec    eax
  412e96:	daa    
  412e97:	sub    esi,DWORD PTR [ebx+esi*2-0x30]
  412e9b:	or     ebp,DWORD PTR [ebx+0x66]
  412e9e:	sub    al,0x2f
  412ea0:	pop    ebp
  412ea1:	jb     0x412edc
  412ea3:	add    al,0x38
  412ea5:	inc    esi
  412ea6:	pop    eax
  412ea7:	stc    
  412ea8:	aaa    
  412ea9:	push   ecx
  412eaa:	pop    eax
  412eab:	aad    0x5e
  412ead:	fs std 
  412eaf:	out    dx,eax
  412eb0:	pusha  
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	push   ds
  412eb3:	push   es
  412eb4:	dec    esp
  412eb5:	addr16 sub cl,bl
  412eb8:	push   0x3fbb2072
  412ebd:	push   esp
  412ebe:	jmp    0x5b29751
  412ec3:	out    0x34,eax
  412ec5:	ins    DWORD PTR es:[edi],dx
  412ec6:	pop    ds
  412ec7:	stos   DWORD PTR es:[edi],eax
  412ec8:	push   eax
  412ec9:	pop    edi
  412eca:	or     eax,esp
  412ecc:	xor    eax,0x1398d846
  412ed1:	pop    esp
  412ed2:	or     cl,al
  412ed4:	dec    edi
  412ed5:	arpl   bp,bx
  412ed7:	call   0x4860:0x6dcd5f6a
  412ede:	loopne 0x412f59
  412ee0:	dec    ebp
  412ee1:	ins    DWORD PTR es:[edi],dx
  412ee2:	add    bl,cl
  412ee4:	outs   dx,DWORD PTR ds:[esi]
  412ee5:	xor    eax,0x4996ed46
  412eea:	ins    DWORD PTR es:[edi],dx
  412eeb:	retf   0x152
  412eee:	push   eax
  412eef:	cwde   
  412ef0:	push   esi
  412ef1:	push   esp
  412ef2:	jne    0x412e92
  412ef4:	push   edi
  412ef5:	pop    ebp
  412ef6:	add    BYTE PTR [ecx+0x52],dh
  412ef9:	push   esp
  412efa:	je     0x412f6b
  412efc:	dec    eax
  412efd:	arpl   WORD PTR [bx+di],di
  412f00:	or     al,0x51
  412f02:	arpl   WORD PTR [ebx-0x6898ba17],cx
  412f08:	cmp    al,0x4
  412f0a:	jne    0x412ea6
  412f0c:	inc    ecx
  412f0d:	xor    eax,0x26196d66
  412f12:	addr16 pop edi
  412f14:	inc    eax
  412f15:	add    al,0x5c
  412f17:	jle    0x412f3a
  412f19:	dec    ebx
  412f1a:	push   ecx
  412f1b:	ins    DWORD PTR es:[edi],dx
  412f1c:	add    BYTE PTR [edx+esi*1],ch
  412f1f:	cmp    DWORD PTR [ecx+0xd],ecx
  412f22:	push   ebx
  412f23:	inc    ebp
  412f24:	popa   
  412f25:	add    ebp,DWORD PTR [eax+0x7d]
  412f28:	imul   ebx,DWORD PTR [ecx],0xf74c7704
  412f2e:	dec    esp
  412f2f:	daa    
  412f30:	imul   ebp,DWORD PTR ds:0xe75d2265,0xf35a1432
  412f3a:	dec    esi
  412f3b:	dec    BYTE PTR [ebp-0x34]
  412f3e:	aaa    
  412f3f:	cld    
  412f40:	rcl    BYTE PTR [bp+si+0x1d],1
  412f44:	pop    ebp
  412f45:	fnstenv [edi]
  412f47:	add    ah,ch
  412f49:	push   0x4b0c5fbd
  412f4e:	mov    edx,0xcc62f823
  412f53:	push   0x60cb620e
  412f58:	jmp    0x412f59
  412f5a:	cdq    
  412f5b:	data16 xlat BYTE PTR ds:[ebx]
  412f5d:	dec    ebx
  412f5e:	sahf   
  412f5f:	fs retf 
  412f61:	pop    esp
  412f62:	mov    ebx,0x9a68e13e
  412f67:	fimul  DWORD PTR [di-0x55]
  412f6b:	das    
  412f6c:	int3   
  412f6d:	dec    ebx
  412f6e:	mov    BYTE PTR [edi+0x59],ah
  412f71:	aas    
  412f72:	mov    gs,WORD PTR [eax-0x5e]
  412f75:	popa   
  412f76:	test   DWORD PTR [edi-0x66],ebx
  412f79:	dec    esi
  412f7a:	out    0x37,eax
  412f7c:	jbe    0x412fce
  412f7e:	pop    edx
  412f7f:	dec    edi
  412f80:	sahf   
  412f81:	dec    esp
  412f82:	dec    edx
  412f83:	ins    BYTE PTR es:[edi],dx
  412f84:	cmp    DWORD PTR [edi],ebp
  412f86:	inc    eax
  412f87:	push   eax
  412f88:	call   0x3749:0x5d042b4f
  412f8f:	push   ebx
  412f90:	ins    BYTE PTR es:[edi],dx
  412f91:	imul   esi,DWORD PTR [ebx],0x346163
  412f97:	push   ds
  412f98:	sub    dh,BYTE PTR ds:0x251546
  412f9e:	pop    esp
  412f9f:	push   ds
  412fa0:	bound  ebp,QWORD PTR fs:[esi]
  412fa3:	adc    BYTE PTR [edi+0x5b],dl
  412fa6:	add    bh,al
  412fa8:	push   ebp
  412fa9:	bound  esp,QWORD PTR [edi-0x17]
  412fac:	add    BYTE PTR [edi],cl
  412fae:	xor    DWORD PTR [ebp+0x2f],ebx
  412fb1:	imul   esi,DWORD PTR [eax],0x2dfc2500
  412fb7:	add    BYTE PTR ds:0x204439f8,ch
  412fbd:	imul   eax,DWORD PTR [eax],0x41
  412fc0:	mov    esp,0xb5463f66
  412fc5:	dec    edx
  412fc6:	add    BYTE PTR [edi-0x56],cl
  412fc9:	repnz pop edx
  412fcb:	jno    0x412fa2
  412fcd:	pop    ss
  412fce:	dec    esi
  412fcf:	ja     0x412fba
  412fd1:	sub    esp,DWORD PTR [ebp+0x66]
  412fd4:	mov    ch,0xff
  412fd6:	xor    dh,BYTE PTR [edx-0x34]
  412fd9:	cs cmp eax,0x32d8be6c
  412fdf:	ins    BYTE PTR es:[edi],dx
  412fe0:	mov    edx,0xa45012fb
  412fe5:	push   es
  412fe6:	inc    ecx
  412fe7:	jae    0x412f86
  412fe9:	fnstcw WORD PTR [ecx]
  412feb:	push   esp
  412fec:	mov    ecx,0xb1200a1a
  412ff1:	lahf   
  412ff2:	arpl   WORD PTR gs:[ebp-0x79abc09b],bx
  412ff9:	lahf   
  412ffa:	bound  ecx,QWORD PTR fs:[eax+0x56510088]
  413001:	ja     0x41304f
  413003:	jne    0x41304d
  413005:	imul   ebx,DWORD PTR [ebp+0x5c],0x2e
  413009:	xchg   ecx,eax
  41300a:	arpl   WORD PTR [edx+0x48],sp
  41300d:	xchg   ecx,eax
  41300e:	das    
  41300f:	inc    ecx
  413010:	add    BYTE PTR [eax],al
  413012:	and    DWORD PTR [ecx+eax*2],ecx
  413015:	pop    esp
  413016:	and    eax,DWORD PTR [ecx+0x74]
  413019:	gs push ss
  41301b:	adc    BYTE PTR [eax+0x20],dl
  41301e:	out    0x1d,al
  413020:	push   eax
  413021:	jb     0x413052
  413023:	xor    ah,BYTE PTR [ecx+0x73]
  413026:	xor    esp,DWORD PTR [ebp+0x6b]
  413029:	outs   dx,BYTE PTR ds:[esi]
  41302a:	xor    DWORD PTR [eax+0x5c],ebp
  41302d:	push   ecx
  41302e:	adc    edx,DWORD PTR [eax]
  413030:	imul   ebp,DWORD PTR [edi+0x4c],0x5e
  413034:	pop    ebp
  413035:	jb     0x412fd7
  413037:	adc    BYTE PTR [ebx+0x66],ch
  41303a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41303b:	inc    esp
  41303c:	pop    ebp
  41303d:	jb     0x413074
  41303f:	sbb    BYTE PTR [ebx+0x6c],al
  413042:	outs   dx,DWORD PTR ds:[esi]
  413043:	pop    edi
  413044:	pop    ebp
  413045:	ins    BYTE PTR es:[edi],dx
  413046:	rol    DWORD PTR [eax+0x3d],cl
  413049:	push   eax
  41304a:	aad    0x9
  41304c:	aas    
  41304d:	jne    0x4130b3
  41304f:	xor    al,BYTE PTR [esi+0x54]
  413052:	rcr    BYTE PTR ds:0x5ca82033,1
  413058:	imul   esp,DWORD PTR [ebp-0x34],0x9f543f0e
  41305f:	pop    esp
  413060:	ins    BYTE PTR es:[edi],dx
  413061:	(bad)
  413066:	mov    edi,0xb1777433
  41306b:	das    
  41306c:	popa   
  41306d:	pop    esp
  41306e:	xchg   edi,eax
  41306f:	pop    ecx
  413070:	imul   esp,DWORD PTR [edx-0x3f],0x58
  413074:	dec    edi
  413075:	inc    ebx
  413076:	add    cl,ah
  413078:	or     al,0x41
  41307a:	pop    esp
  41307b:	rol    DWORD PTR [ecx+0x74],cl
  41307e:	gs (bad) 
  413080:	and    BYTE PTR [eax+0x20],dl
  413083:	aaa    
  413084:	sbb    al,0x50
  413086:	jb     0x413107
  413088:	xor    ah,BYTE PTR [ecx+0x73]
  41308b:	cmp    DWORD PTR [esi],esi
  41308d:	imul   ebp,DWORD PTR [ebp-0x71],0x885c6848
  413094:	xor    BYTE PTR es:[ebp+0x5e],ch
  413098:	inc    ebx
  413099:	bound  ebx,QWORD PTR [edi+0x6b]
  41309c:	out    0x30,eax
  41309e:	ins    DWORD PTR es:[edi],dx
  41309f:	push   edi
  4130a0:	or     ecx,DWORD PTR [ebx+0x5f]
  4130a3:	dec    ebx
  4130a4:	add    al,0x38
  4130a6:	inc    ebp
  4130a7:	pop    ebp
  4130a8:	add    ah,BYTE PTR [edx+0x5f]
  4130ab:	push   ebp
  4130ac:	push   ss
  4130ad:	aas    
  4130ae:	aas    
  4130af:	imul   ebx,DWORD PTR [eax+edi*1],0x5ed32c41
  4130b6:	inc    esi
  4130b7:	add    eax,0x593823f7
  4130bc:	pop    ds
  4130bd:	arpl   WORD PTR [ebx+0x14],bp
  4130c0:	add    esi,DWORD PTR [ecx]
  4130c2:	inc    ecx
  4130c3:	in     eax,dx
  4130c4:	test   eax,0xc81b6c64
  4130c9:	dec    edi
  4130ca:	add    dl,ch
  4130cc:	mov    ecx,0xc806745b
  4130d1:	dec    edi
  4130d2:	arpl   WORD PTR ds:0xdb6d65a2,dx
  4130d8:	(bad)  
  4130d9:	gs push ecx
  4130db:	add    dl,bh
  4130dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130de:	xor    DWORD PTR [ebx-0x3],eax
  4130e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e2:	dec    esi
  4130e3:	je     0x4130c1
  4130e5:	mov    al,ds:0xdf19502d
  4130ea:	and    DWORD PTR [eax-0x35],edx
  4130ed:	jns    0x41314a
  4130ef:	arpl   dx,cx
  4130f1:	jne    0x41315d
  4130f3:	ins    DWORD PTR es:[edi],dx
  4130f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f5:	js     0x41315c
  4130f7:	pop    esp
  4130f8:	mov    BYTE PTR [edx-0x7a6992d3],bl
  4130fe:	pop    edi
  4130ff:	pop    edi
  413100:	stos   DWORD PTR es:[edi],eax
  413101:	fnstenv ds:0x5600a545
  413107:	data16 outs dx,BYTE PTR ds:[esi]
  413109:	pop    esp
  41310a:	cmp    al,BYTE PTR [edi+0x46]
  41310d:	xor    BYTE PTR [eax+esi*1],ch
  413110:	js     0x413167
  413112:	push   ebx
  413113:	imul   edi,DWORD PTR [edi+0x34],0x478d0417
  41311a:	dec    ebx
  41311b:	arpl   WORD PTR [ebx+0x61],bx
  41311e:	inc    ebx
  41311f:	aaa    
  413120:	js     0x413163
  413122:	pop    ss
  413123:	dec    ecx
  413124:	jne    0x413169
  413126:	sbb    al,0x58
  413128:	pop    edx
  413129:	inc    esi
  41312a:	xor    esi,DWORD PTR [ecx+ebx*1]
  41312d:	xor    BYTE PTR [ecx],bl
  41312f:	arpl   WORD PTR [ecx],di
  413131:	sub    al,0x26
  413133:	pusha  
  413134:	and    al,0x62
  413136:	or     BYTE PTR [eax+0x8],ah
  413139:	inc    ebx
  41313a:	sub    BYTE PTR [edx+edi*8],dh
  41313d:	sub    ebp,DWORD PTR [edx]
  41313f:	pop    ecx
  413140:	add    BYTE PTR ds:0xe9382565,ah
  413146:	pop    ds
  413147:	mov    bl,0x5c
  413149:	add    eax,0xf82fe765
  41314e:	push   esp
  41314f:	fld    TBYTE PTR [eax-0x9]
  413152:	xor    esi,DWORD PTR [edi-0x2baceafd]
  413158:	and    ebp,edx
  41315a:	pusha  
  41315b:	mov    bl,0x3
  41315d:	or     BYTE PTR [edi-0x33],bl
  413160:	push   edi
  413161:	in     al,0x60
  413163:	mov    ecx,0x9345f568
  413168:	fs enter 0xa557,0x2b
  41316d:	jmp    0xe8450b9d
  413172:	pop    esi
  413173:	test   DWORD PTR [edi-0x54],edx
  413176:	popa   
  413177:	jns    0x4131e1
  413179:	lea    eax,[esi-0x75]
  41317c:	fs test al,0x58
  41317f:	add    BYTE PTR [edi-0x65ffcfae],ch
  413185:	fwait
  413186:	data16 je 0x4131e7
  413189:	xchg   esp,eax
  41318a:	push   edx
  41318b:	arpl   WORD PTR ds:0x5a5f5c73,di
  413191:	pop    ebp
  413192:	inc    esi
  413193:	pop    eax
  413194:	cmp    DWORD PTR [ecx],ebp
  413196:	adc    al,0x0
  413198:	xor    BYTE PTR [ebx+0x51],bl
  41319b:	je     0x4131e5
  41319d:	pop    ecx
  41319e:	pop    esp
  41319f:	arpl   WORD PTR [ebx],di
  4131a1:	jno    0x4131d2
  4131a3:	je     0x4131e6
  4131a5:	add    BYTE PTR ds:0x3511742f,cl
  4131ab:	push   eax
  4131ac:	pop    edi
  4131ad:	adc    eax,0x7470065
  4131b2:	push   sp
  4131b4:	pop    edi
  4131b5:	std    
  4131b6:	push   ss
  4131b7:	and    BYTE PTR [eax+0x8],dl
  4131ba:	adc    DWORD PTR [eax+0x0],ebx
  4131bd:	and    eax,0x2f5f541c
  4131c2:	sbb    bl,BYTE PTR [esp+eiz*2+0x4]
  4131c6:	out    dx,eax
  4131c7:	call   FWORD PTR [ebx-0x46]
  4131ca:	in     eax,dx
  4131cb:	push   ebx
  4131cc:	arpl   dx,bx
  4131ce:	pop    eax
  4131cf:	fs pop edi
  4131d1:	fnstsw WORD PTR [edx]
  4131d3:	sub    al,0x4f
  4131d5:	aam    0x15
  4131d7:	popa   
  4131d8:	imul   edx,DWORD PTR [edi],0xe9742ee1
  4131de:	push   ss
  4131df:	cmp    BYTE PTR [edi-0x46],ah
  4131e2:	push   es
  4131e3:	pop    ebp
  4131e4:	jb     0x413196
  4131e6:	sbb    BYTE PTR [edi+ebx*2-0x63],ah
  4131ea:	cmp    ch,BYTE PTR [esi+eax*2]
  4131ed:	(bad)  
  4131ee:	fst    QWORD PTR [eax+0x68]
  4131f1:	scas   eax,DWORD PTR es:[edi]
  4131f2:	adc    dh,BYTE PTR [eax]
  4131f4:	pop    esp
  4131f5:	fidivr DWORD PTR [edx]
  4131f7:	sub    al,0x46
  4131f9:	add    ah,al
  4131fb:	outs   dx,DWORD PTR fs:[esi]
  4131fd:	push   0x5c5019de
  413202:	fadd   QWORD PTR [ecx]
  413204:	pop    esp
  413205:	inc    esi
  413206:	mov    ecx,0x5a612d
  41320b:	imul   esp,DWORD PTR [eax+0x6c],0x6f1e1061
  413212:	imul   ebx,DWORD PTR [ebp+eiz*2+0x69],0x63613661
  41321a:	xor    ah,BYTE PTR gs:[edx]
  41321d:	js     0x41328c
  41321f:	je     0x413225
  413221:	pop    esp
  413222:	jb     0x413291
  413224:	arpl   WORD PTR [ecx+0x6e],sp
  413227:	or     al,0x33
  413229:	popa   
  41322a:	jb     0x41325a
  41322c:	gs jb  0x4132a2
  41322f:	idiv   BYTE PTR [ecx]
  413231:	imul   ebp,DWORD PTR [eax+edx*8+0x1d],0x66b46966
  413239:	jp     0x4132a4
  41323b:	inc    esp
  41323c:	pusha  
  41323d:	pop    ebp
  41323e:	cmp    BYTE PTR cs:0x5f43006c,ch
  413245:	data16 je 0x4131d7
  413248:	bound  esi,QWORD PTR [edx+0x65]
  41324b:	je     0x413284
  41324d:	gs ins BYTE PTR es:[edi],dx
  41324f:	jge    0x41326c
  413251:	gs ins BYTE PTR es:[edi],dx
  413253:	je     0x4132b7
  413255:	add    BYTE PTR [ebx-0x49],dl
  413258:	push   edi
  413259:	je     0x4132d2
  41325b:	xor    DWORD PTR [ebx],0x2a9e5c61
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	gs retf 0x6c2a
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	and    DWORD PTR [ecx],0x66a96c3f
  41326d:	outs   dx,BYTE PTR ds:[esi]
  41326e:	je     0x413270
  413270:	push   eax
  413271:	or     ch,BYTE PTR [esi+0x73]
  413274:	cmp    DWORD PTR [ebx+0x62],ebp
  413277:	ins    BYTE PTR es:[edi],dx
  413278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413279:	sahf   
  41327a:	inc    ebp
  41327b:	stos   DWORD PTR es:[di],eax
  41327d:	xlat   BYTE PTR ds:[ebx]
  41327e:	cmp    DWORD PTR [ebp-0x56],ebp
  413281:	push   ebx
  413282:	add    DWORD PTR [ebx-0x56],edx
  413285:	jl     0x4132da
  413287:	add    BYTE PTR [ecx+0x78],ch
  41328a:	push   esp
  41328b:	jno    0x4132c6
  41328d:	pop    es
  41328e:	pop    edi
  41328f:	jb     0x41321e
  413291:	xlat   BYTE PTR ds:[ebx]
  413292:	xor    esp,DWORD PTR [ebx-0x74]
  413295:	inc    esi
  413296:	pop    eax
  413297:	arpl   WORD PTR [ecx],bx
  413299:	and    ebx,DWORD PTR [ecx+0x72]
  41329c:	cmp    edx,ebp
  41329e:	fs jb  0x413310
  4132a1:	inc    esp
  4132a2:	push   esi
  4132a3:	and    BYTE PTR [ebp+0x39635410],al
  4132a9:	jmp    0x2e55:0xfc477264
  4132b0:	jno    0x4132b0
  4132b2:	push   edx
  4132b3:	je     0x4132ee
  4132b5:	or     ah,BYTE PTR [ebp+0x72]
  4132b8:	das    
  4132b9:	add    al,0x56
  4132bb:	cs add al,0xca
  4132be:	data16 jb 0x4132fa
  4132c1:	jmp    0x2e55:0xfc277264
  4132c8:	jmp    0x39b285c4
  4132cd:	mov    ah,BYTE PTR [esi+0x72]
  4132d0:	pinsrw mm2,WORD PTR [ebx+0x2e],0x0
  4132d5:	jmp    0x39b5869f
  4132da:	xchg   DWORD PTR [edx+0x74],esp
  4132dd:	loope  0x4132b5
  4132df:	xor    al,0x63
  4132e1:	jmp    0x413277
  4132e3:	data16 jb 0x4132eb
  4132e6:	nop
  4132e7:	push   ecx
  4132e8:	arpl   WORD PTR [ecx],di
  4132ea:	imul   esp,DWORD PTR [edx+0x71],0xffffffc5
  4132ee:	inc    esi
  4132f0:	xor    al,0xda
  4132f2:	push   ecx
  4132f3:	xchg   ebp,eax
  4132f4:	retfw  
  4132f6:	pop    ds
  4132f7:	lahf   
  4132f8:	pusha  
  4132f9:	test   al,0x54
  4132fb:	out    0x3f,eax
  4132fd:	mov    cs,WORD PTR [edi+0x7b]
  413300:	and    ecx,DWORD PTR [eax-0x65a6869b]
  413306:	dec    esi
  413307:	(bad)  
  413308:	mov    BYTE PTR ss:[ebp+0x79],ah
  41330c:	add    edi,DWORD PTR [ebp+0x61]
  41330f:	pop    edx
  413310:	pop    eax
  413311:	pop    ecx
  413312:	das    
  413313:	inc    esp
  413314:	push   edx
  413315:	xchg   DWORD PTR [ebp+0x59],esp
  413318:	and    al,0x89
  41331a:	popa   
  41331b:	pop    edx
  41331c:	push   ebx
  41331d:	cmp    DWORD PTR [eax+ecx*2],edi
  413320:	push   ebx
  413321:	ins    DWORD PTR es:[edi],dx
  413322:	and    BYTE PTR [edx],bl
  413324:	imul   ebp,DWORD PTR [ebx+0x52],0x3019524c
  41332b:	ds push edx
  41332d:	inc    ebp
  41332e:	add    BYTE PTR [ebx],dh
  413330:	gs dec eax
  413332:	push   esp
  413333:	(bad)  
  413334:	xor    bl,BYTE PTR [edx+0x4e]
  413337:	sbb    eax,0x202b0069
  41333c:	aaa    
  41333d:	gs and eax,0x63fe758
  413343:	dec    edi
  413344:	repz and ecx,DWORD PTR [eax]
  413347:	gs stc 
  413349:	push   ebp
  41334a:	sbb    cl,BYTE PTR [esi-0x39]
  41334d:	aaa    
  41334e:	push   es
  41334f:	push   eax
  413350:	int3   
  413351:	add    edi,edi
  413353:	xor    esi,DWORD PTR [edi-0x229f10dd]
  413359:	pop    esp
  41335a:	fsub   QWORD PTR [eax-0x2d]
  41335d:	pop    esi
  41335e:	jmp    0x41335f
  413360:	lods   al,BYTE PTR ds:[esi]
  413361:	aaa    
  413362:	or     DWORD PTR [eax],esp
  413364:	stos   BYTE PTR es:[edi],al
  413365:	pop    esi
  413366:	rcr    BYTE PTR [eax+eax*1-0x38],cl
  41336a:	hlt    
  41336b:	arpl   WORD PTR [ebx-0x45],sp
  41336e:	cmp    ah,BYTE PTR [edx+0x74]
  413371:	cdq    
  413372:	out    0x62,al
  413374:	jno    0x41330b
  413376:	sbb    al,0x54
  413378:	js     0x413317
  41337a:	cmp    ch,BYTE PTR [edx+eax*2]
  41337d:	xchg   esp,eax
  41337e:	mov    ds,WORD PTR [ebx+eiz*2+0x7d]
  413382:	push   0x4e
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	mov    ss,WORD PTR [eax+eiz*1+0x549c8651]
  41338c:	jne    0x413316
  41338e:	push   0x9117005f
  413393:	sub    esi,DWORD PTR [ecx+ebp*8+0x1c]
  413397:	pop    esi
  413398:	jo     0x4133f4
  41339a:	cmp    eax,0x476d31
  41339f:	xchg   ecx,eax
  4133a0:	push   ebp
  4133a1:	pop    edi
  4133a2:	cmp    edx,DWORD PTR [eax+0x2c]
  4133a5:	inc    edx
  4133a6:	sbb    DWORD PTR [edi+0x34],esi
  4133a9:	push   eax
  4133aa:	adc    eax,0x3d6c4f7b
  4133af:	pusha  
  4133b0:	push   esp
  4133b1:	and    BYTE PTR [ecx],bh
  4133b3:	imul   ebx,DWORD PTR [ebp+0x6d],0x7
  4133b7:	adc    eax,0x69395442
  4133bc:	aaa    
  4133bd:	pop    edi
  4133be:	add    BYTE PTR [edi],cl
  4133c0:	add    BYTE PTR [ecx+0x16],dl
  4133c3:	pop    ds
  4133c4:	push   esp
  4133c5:	jne    0x4133cf
  4133c7:	or     ebx,DWORD PTR [edi+0x5c]
  4133ca:	sub    esi,eax
  4133cc:	pop    ebx
  4133cd:	ins    BYTE PTR es:[edi],dx
  4133ce:	add    al,0xf1
  4133d0:	das    
  4133d1:	jb     0x4133a9
  4133d3:	out    0x61,eax
  4133d5:	and    BYTE PTR [edx-0x218b9e21],bh
  4133db:	fisttp QWORD PTR [ebp+0x63]
  4133de:	lods   eax,DWORD PTR ds:[esi]
  4133df:	clc    
  4133e0:	dec    esi
  4133e1:	ins    BYTE PTR es:[edi],dx
  4133e2:	add    BYTE PTR [edi+edx*2+0x29a25074],cl
  4133e9:	imul   esp,DWORD PTR [esi+0x40],0x42
  4133ed:	push   esp
  4133ee:	push   eax
  4133ef:	inc    eax
  4133f0:	aas    
  4133f1:	ins    BYTE PTR es:[edi],dx
  4133f2:	imul   esi,DWORD PTR [ebp-0x72a38bd4],0x206e6563
  4133fc:	packssdw mm4,QWORD PTR [esi-0x3c]
  413400:	xor    bl,BYTE PTR [ebp+0x72]
  413403:	add    BYTE PTR [ebp-0x29afbde7],dh
  413409:	adc    DWORD PTR [eax+0x5c],edx
  41340c:	loop   0x413436
  41340e:	ins    BYTE PTR es:[edi],dx
  41340f:	ins    BYTE PTR es:[edi],dx
  413410:	mov    ch,0x31
  413412:	and    BYTE PTR [eax+0x62],dl
  413415:	sub    ebp,DWORD PTR [ebx+0x66]
  413418:	xor    BYTE PTR [edx+0x54],al
  41341b:	push   eax
  41341c:	sub    al,0xb
  41341e:	jo     0x413494
  413420:	jns    0x41344d
  413422:	outs   dx,BYTE PTR ds:[esi]
  413423:	jae    0x4133f5
  413425:	adc    BYTE PTR [ebx+0x66],ch
  413428:	and    al,0x33
  41342a:	pop    ebp
  41342b:	jb     0x4133b2
  41342d:	adc    BYTE PTR [edx+0x75],al
  413430:	or     al,0x60
  413432:	popa   
  413433:	je     0x413435
  413435:	imul   ebp,DWORD PTR cs:[edi+0x36],0x24
  41343a:	dec    edi
  41343b:	outs   dx,DWORD PTR ds:[esi]
  41343c:	inc    esi
  41343d:	sub    BYTE PTR [ebx+0x61],dh
  413440:	push   edx
  413441:	popa   
  413442:	pop    esp
  413443:	inc    edx
  413444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413445:	sub    DWORD PTR [ebp+eiz*2-0x5c],ebp
  413449:	or     eax,0x623f6f72
  41344e:	and    BYTE PTR [esi+0x24],al
  413451:	adc    al,0x20
  413453:	inc    ebx
  413454:	ins    BYTE PTR es:[edi],dx
  413455:	es popa 
  413457:	outs   dx,BYTE PTR ds:[esi]
  413458:	sbb    DWORD PTR fs:[ebx+0x70],ecx
  41345c:	cmp    DWORD PTR [ebx-0x5a2092a6],ebp
  413462:	add    DWORD PTR [ecx-0x2a],edx
  413465:	mov    eax,0xd8007555
  41346a:	test   BYTE PTR [esi+0x5c],ah
  41346d:	sti    
  41346e:	inc    bx
  413470:	push   esp
  413471:	jmp    0xcaa0724c
  413476:	push   0x30
  413478:	arpl   dx,cx
  41347a:	gs pop edx
  41347c:	ins    DWORD PTR es:[edi],dx
  41347d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41347e:	cdq    
  41347f:	pop    edx
  413480:	ins    BYTE PTR es:[edi],dx
  413481:	xchg   esp,eax
  413482:	xlat   BYTE PTR ds:[ebx]
  413483:	xor    BYTE PTR [edi-0x53],ah
  413486:	jl     0x4134d8
  413488:	inc    esp
  413489:	nop
  41348a:	inc    ebp
  41348b:	add    DWORD PTR [edi-0x59],eax
  41348e:	inc    esi
  41348f:	push   ebp
  413490:	pop    edi
  413491:	popf   
  413492:	dec    ebx
  413493:	inc    ebp
  413494:	addr16 mov ebp,eax
  413497:	add    ebp,DWORD PTR [esi]
  413499:	cmp    DWORD PTR [eax+eiz*2],0x5d069500
  4134a0:	pop    edi
  4134a1:	imul   esi,DWORD PTR [ebx],0x46
  4134a4:	push   esp
  4134a5:	mov    edi,edx
  4134a7:	inc    ebx
  4134a8:	pop    edi
  4134a9:	cmp    dl,BYTE PTR [bp+si+0x67]
  4134ad:	dec    ebp
  4134ae:	cmp    al,0x4f
  4134b0:	cs push ebp
  4134b2:	cmp    BYTE PTR [eax+0x0],bl
  4134b5:	jno    0x4134a7
  4134b7:	dec    esi
  4134b8:	je     0x413508
  4134ba:	in     eax,0x48
  4134bc:	cs sbb eax,0x180057f8
  4134c2:	add    ebp,DWORD PTR [eax+0x72]
  4134c5:	sbb    ebp,esi
  4134c7:	sbb    eax,0x1d31864
  4134cc:	outs   dx,DWORD PTR ds:[esi]
  4134cd:	add    BYTE PTR [eax+eax*1],cl
  4134d0:	pop    edi
  4134d1:	imul   ebx,DWORD PTR [edi+0x3],0x397461
  4134d8:	ret    
  4134d9:	aaa    
  4134da:	or     cl,BYTE PTR [esi-0x37]
  4134dd:	pop    esp
  4134de:	push   DWORD PTR [ebx]
  4134e0:	mov    bh,0x3
  4134e2:	or     BYTE PTR [ecx-0x3b],bl
  4134e5:	push   edi
  4134e6:	in     al,dx
  4134e7:	pop    esi
  4134e8:	mov    ecx,0xb433fd66
  4134ed:	push   ecx
  4134ee:	fistp  DWORD PTR [eax-0x53]
  4134f1:	aaa    
  4134f2:	jmp    0xc89ef4f6
  4134f7:	push   ebx
  4134f8:	mov    BYTE PTR [edi-0x33],bl
  4134fb:	dec    edi
  4134fc:	mov    BYTE PTR [edi-0x5f],dl
  4134ff:	add    BYTE PTR [edx-0x69b368a4],bh
  413505:	bound  ebp,QWORD PTR [ebx-0x73cf5ca3]
  41350b:	dec    esp
  41350c:	mov    BYTE PTR [edi],ch
  41350e:	jg     0x41354e
  413510:	lods   eax,DWORD PTR ds:[esi]
  413511:	aaa    
  413512:	imul   eax,DWORD PTR [eax],0x5c9a51aa
  413518:	dec    esp
  413519:	pop    edx
  41351a:	test   DWORD PTR [ecx+0x48],ebx
  41351d:	pop    eax
  41351e:	mov    BYTE PTR [ecx+0x43],ah
  413521:	push   eax
  413522:	cmp    DWORD PTR [ebx+0x59],eax
  413525:	popa   
  413526:	pop    ebp
  413527:	pop    ebp
  413528:	push   ebp
  413529:	push   eax
  41352a:	push   esi
  41352b:	popa   
  41352c:	dec    ebx
  41352d:	inc    edi
  41352e:	popa   
  41352f:	pop    ebp
  413530:	dec    edx
  413531:	pop    edi
  413532:	add    BYTE PTR [ecx],bh
  413534:	xor    edi,DWORD PTR [esi]
  413536:	bound  ecx,QWORD PTR [ebp+0x4f]
  413539:	or     BYTE PTR [esi+0x5a],dl
  41353c:	and    al,0x3a
  41353e:	pop    ebx
  41353f:	sub    eax,0xf7423361
  413544:	cmp    eax,0x37053433
  413549:	test   DWORD PTR [edi+0x16],0x39570d57
  413550:	xor    BYTE PTR [eax],al
  413552:	or     dh,ah
  413554:	push   eax
  413555:	jne    0x413555
  413557:	in     al,dx
  413558:	pop    ebx
  413559:	add    BYTE PTR [edi+eiz*8-0x22508d9e],bh
  413560:	pop    edx
  413561:	arpl   cx,bp
  413563:	xor    dl,BYTE PTR [ebp+0x71]
  413566:	aad    0xfd
  413568:	pop    ebx
  413569:	jb     0x413525
  41356b:	cmp    dh,BYTE PTR [edx]
  41356d:	arpl   sp,cx
  41356f:	repz dec ebx
  413571:	arpl   WORD PTR [ebp-0x66ffae13],bp
  413577:	jecxz  0x4135ca
  413579:	je     0x413564
  41357b:	add    dl,BYTE PTR [ebp+0x71]
  41357e:	xchg   ebp,eax
  41357f:	jo     0x4135a8
  413581:	imul   ecx,DWORD PTR [edx+edi*1+0x769b6d30],0x0
  413589:	push   ebx
  41358a:	jp     0x413525
  41358c:	push   edx
  41358d:	outs   dx,BYTE PTR ds:[esi]
  41358e:	mov    BYTE PTR [ecx+0x63],dh
  413591:	add    BYTE PTR [ecx+0x76715195],bl
  413597:	add    BYTE PTR [ebx+0x52],ah
  41359a:	fs jmp 0x55b28ae2
  4135a0:	jns    0x413601
  4135a2:	jb     0x4135cb
  4135a4:	push   esp
  4135a5:	pop    ebx
  4135a6:	arpl   cx,bp
  4135a8:	das    
  4135a9:	push   ebp
  4135aa:	cmp    ax,0x278a
  4135ae:	jb     0x4135f4
  4135b0:	and    DWORD PTR [ecx+0x6d],eax
  4135b3:	dec    edi
  4135b4:	pop    ebx
  4135b5:	arpl   WORD PTR [ebx+0x2a],sp
  4135b8:	push   0x623a2050
  4135bd:	pop    esi
  4135be:	je     0x4135d6
  4135c0:	sbb    al,0x52
  4135c2:	arpl   WORD PTR ds:0x474566c,si
  4135c8:	orps   xmm4,XMMWORD PTR [ebx+0x0]
  4135cc:	pushf  
  4135cd:	push   ds
  4135ce:	push   eax
  4135cf:	jb     0x413618
  4135d1:	bound  esp,QWORD PTR [ebp+0x6c]
  4135d4:	cmp    eax,0x8753002f
  4135d9:	pusha  
  4135da:	je     0x413653
  4135dc:	jno    0x41360a
  4135de:	popa   
  4135df:	pop    esp
  4135e0:	sahf   
  4135e1:	push   ss
  4135e2:	push   eax
  4135e3:	push   edi
  4135e4:	sub    DWORD PTR [ecx+eiz*2],0x5209935c
  4135eb:	inc    ebp
  4135ec:	mov    ss,WORD PTR [esi]
  4135ee:	push   eax
  4135ef:	pop    esp
  4135f0:	mov    bl,0x23
  4135f2:	je     0x413659
  4135f4:	xchg   ebx,eax
  4135f5:	add    cl,BYTE PTR [eax+0x6f]
  4135f8:	xor    DWORD PTR [esi],0x0
  4135fb:	push   ebp
  4135fc:	add    BYTE PTR [ebx-0xfff8da1],ah
  413602:	sub    dh,BYTE PTR [edx+0x74]
  413605:	and    BYTE PTR [edx],dl
  413607:	push   ebx
  413608:	add    al,ah
  41360a:	xor    eax,0xf105268
  41360f:	dec    edi
  413610:	dec    eax
  413611:	and    BYTE PTR [edx],dh
  413613:	jb     0x413684
  413615:	mov    esi,0x83656c24
  41361a:	out    0x77,eax
  41361c:	ins    DWORD PTR es:[edi],dx
  41361d:	fs cld 
  41361f:	pop    ebx
  413620:	inc    esi
  413621:	sub    al,0xc
  413623:	and    BYTE PTR [ebp-0x78],al
  413626:	sub    al,0x6c
  413628:	outs   dx,DWORD PTR ds:[esi]
  413629:	and    BYTE PTR ds:0x27430072,0x66
  413630:	je     0x413641
  413632:	popa   
  413633:	jb     0x41369a
  413635:	and    al,0x42
  413637:	push   esp
  413638:	push   eax
  413639:	xor    BYTE PTR ds:0x27247078,al
  41363f:	jb     0x4136a6
  413641:	push   edx
  413642:	sbb    BYTE PTR [esi+0x54],al
  413645:	cmp    DWORD PTR [edi],eax
  413647:	and    al,0x43
  413649:	and    edi,esp
  41364b:	push   edi
  41364c:	ins    DWORD PTR es:[edi],dx
  41364d:	sub    esi,esp
  41364f:	push   ebp
  413650:	pop    esp
  413651:	out    dx,al
  413652:	cmc    
  413653:	push   ebp
  413654:	imul   ecx,DWORD PTR [edx],0x1c6162c7
  41365a:	repz xor al,0x46
  41365d:	cli    
  41365e:	sbb    BYTE PTR [eax+0x6d],0x0
  413662:	in     eax,0x98
  413664:	bound  esi,QWORD PTR [edx+0x1c]
  413667:	jmp    0x997a6a81
  41366c:	dec    esi
  41366d:	je     0x413654
  41366f:	lods   eax,DWORD PTR ds:[esi]
  413670:	push   edi
  413671:	jno    0x4136ac
  413673:	push   0x58
  413675:	lds    ax,DWORD PTR [ebp+0x72dc7262]
  41367c:	aas    
  41367d:	push   esp
  41367e:	jmp    0xa9b97539
  413683:	jae    0x4136dd
  413685:	jb     0x41361b
  413687:	imul   esp,DWORD PTR ds:0x5f46ab50,0x54748d67
  413691:	add    BYTE PTR [ecx+0x78],ch
  413694:	push   esp
  413695:	jno    0x41361d
  413697:	jle    0x4136ec
  413699:	cmp    DWORD PTR fs:[edi+0x62],esp
  41369d:	jno    0x413629
  41369f:	es push edi
  4136a1:	jb     0x413700
  4136a3:	or     ecx,DWORD PTR [ecx+0x70]
  4136a6:	push   esp
  4136a7:	xlat   BYTE PTR ds:[ebx]
  4136a8:	cmp    DWORD PTR [ebp+0x6a],ebp
  4136ab:	sub    eax,DWORD PTR [esp+ecx*2]
  4136ae:	dec    esi
  4136af:	ss pop ecx
  4136b1:	outs   dx,BYTE PTR ds:[esi]
  4136b2:	cmp    edi,esp
  4136b4:	push   esi
  4136b5:	jb     0x4136fc
  4136b7:	xlat   BYTE PTR ds:[ebx]
  4136b8:	cmp    ch,BYTE PTR [esi+0x50]
  4136bb:	or     ebx,DWORD PTR [ecx+0x5f]
  4136be:	dec    ebp
  4136bf:	add    BYTE PTR [edi],dh
  4136c1:	arpl   WORD PTR ds:0x41e758,bp
  4136c7:	and    eax,0x2d5b3a50
  4136cc:	pop    ebx
  4136cd:	mov    ebp,0xe754124b
  4136d2:	daa    
  4136d3:	call   DWORD PTR [ecx+0x10]
  4136d6:	popa   
  4136d7:	out    dx,al
  4136d8:	dec    ebx
  4136d9:	or     al,0x15
  4136db:	cmp    DWORD PTR [esi],edx
  4136dd:	add    BYTE PTR [edx+0x16],bl
  4136e0:	add    bl,al
  4136e2:	xor    DWORD PTR [esi],edx
  4136e4:	push   esi
  4136e5:	mov    ds:0xb35ae04a,eax
  4136ea:	inc    esp
  4136eb:	aam    0x55
  4136ed:	lds    ebx,FWORD PTR [edx-0x2c]
  4136f0:	and    ebx,DWORD PTR [edx-0x2faf37a2]
  4136f6:	pop    eax
  4136f7:	fist   WORD PTR [eax-0x19]
  4136fa:	daa    
  4136fb:	call   0xd695f15a
  413700:	push   esp
  413701:	xchg   ebp,eax
  413702:	push   esp
  413703:	cmp    DWORD PTR [edi],ebp
  413705:	mov    fs,WORD PTR [ecx-0x5b]
  413708:	dec    ebx
  413709:	mov    BYTE PTR [ebp-0x66],dl
  41370c:	and    al,0xb5
  41370e:	bound  ecx,QWORD PTR [edi-0x65a37fc4]
  413714:	and    al,0x9a
  413716:	pop    esi
  413717:	cwde   
  413718:	dec    ebp
  413719:	jns    0x413779
  41371b:	jg     0x413745
  41371d:	out    0x44,eax
  41371f:	mov    WORD PTR [edx+0x4d],ss
  413722:	pop    ebp
  413723:	pop    esp
  413724:	and    BYTE PTR [edi],dh
  413726:	gs gs pop eax
  413729:	out    0x30,eax
  41372b:	add    BYTE PTR [ebp+0x4c],dl
  41372e:	pop    ecx
  41372f:	gs ja  0x41375a
  413732:	pop    ss
  413733:	add    al,0x75
  413735:	dec    edi
  413736:	push   eax
  413737:	push   eax
  413738:	pop    edx
  413739:	dec    edi
  41373a:	add    BYTE PTR [edi],al
  41373c:	jne    0x413795
  41373e:	ins    BYTE PTR es:[edi],dx
  41373f:	jmp    0x3995715a
  413744:	imul   ecx,DWORD PTR [edi+0x71],0x11
  413748:	xor    eax,0x51a732e
  41374d:	xor    DWORD PTR [edi+0x15],esp
  413750:	sbb    BYTE PTR [edx],dl
  413752:	js     0x413768
  413754:	icebp  
  413755:	call   DWORD PTR [eax+0x4]
  413758:	jmp    0x4137a3
  41375a:	arpl   bx,di
  41375c:	cmp    ch,BYTE PTR [edi]
  41375e:	jno    0x413764
  413760:	jmp    0x4137b3
  413762:	pop    edi
  413763:	aam    0xd9
  413765:	dec    DWORD PTR [edi-0x38]
  413768:	or     edx,DWORD PTR [ecx+0x75]
  41376b:	(bad)  
  41376c:	or     BYTE PTR [eax+eax*1-0x59],bl
  413770:	out    dx,al
  413771:	dec    edi
  413772:	push   eax
  413773:	(bad)  
  413774:	call   0xe7db37c4
  413779:	pop    ecx
  41377a:	je     0x41373a
  41377c:	fisttp QWORD PTR [ebp+0x63]
  41377f:	(bad)  
  413780:	sti    
  413781:	dec    ebp
  413782:	ja     0x413710
  413784:	mov    BYTE PTR [edx*2+0x67319884],ah
  41378b:	popf   
  41378c:	cdq    
  41378d:	xor    BYTE PTR [ebx-0x75],dh
  413790:	add    BYTE PTR [esi-0x666e8ea5],al
  413796:	dec    esi
  413797:	add    BYTE PTR [ebp-0x5d8ba488],bl
  41379d:	gs push edx
  41379f:	arpl   WORD PTR [ecx+0x3a],si
  4137a2:	pop    esi
  4137a3:	addr16 pop ebp
  4137a5:	xchg   edx,eax
  4137a6:	pop    ebx
  4137a7:	outs   dx,BYTE PTR ds:[esi]
  4137a8:	inc    esp
  4137a9:	jge    0x4137bd
  4137ab:	fs pop edx
  4137ad:	cmp    eax,0x895a6d38
  4137b2:	push   edx
  4137b3:	pop    edi
  4137b4:	add    BYTE PTR [ebp+0x61],ch
  4137b7:	add    BYTE PTR [ebp+0x13],dl
  4137ba:	popa   
  4137bb:	jb     0x41382b
  4137bd:	jno    0x4137e8
  4137bf:	popa   
  4137c0:	add    BYTE PTR [eax],ah
  4137c2:	pop    ebp
  4137c3:	outs   dx,DWORD PTR ds:[esi]
  4137c4:	jae    0x41381d
  4137c6:	sub    esi,DWORD PTR [edx+0x64]
  4137c9:	mov    al,ds:0x44726b0e
  4137ce:	cld    
  4137cf:	dec    esi
  4137d0:	outs   dx,DWORD PTR ds:[esi]
  4137d1:	xor    BYTE PTR ss:[ebx+0x61],dh
  4137d5:	xchg   edx,eax
  4137d6:	pop    edi
  4137d7:	pop    esp
  4137d8:	inc    ebp
  4137d9:	cmp    BYTE PTR [ebx*2+0x652e546e],ch
  4137e0:	jbe    0x413817
  4137e2:	sbb    BYTE PTR [edi+0x65],cl
  4137e5:	xchg   ebx,eax
  4137e6:	sub    eax,0x2d7e6f65
  4137eb:	add    BYTE PTR [ebp+edx*4+0x36],bl
  4137ef:	jo     0x413852
  4137f1:	sahf   
  4137f2:	add    dh,BYTE PTR [edx+0x69]
  4137f5:	add    BYTE PTR [esi+0x745c005f],dl
  4137fb:	xor    BYTE PTR [ebp+0x76],ah
  4137fe:	jne    0x41382d
  413800:	cs push 0xffffff83
  413803:	(bad)  
  413804:	and    DWORD PTR [eax-0x3f],esi
  413807:	outs   dx,DWORD PTR cs:[esi]
  413809:	ja     0x4137ca
  41380b:	das    
  41380c:	fs and dh,al
  41380f:	neg    DWORD PTR [edi]
  413811:	and    dl,BYTE PTR [eax]
  413813:	and    BYTE PTR [eax+eax*1],ch
  413816:	mov    bl,0x2a
  413818:	data16 je 0x4137a2
  41381b:	pop    esp
  41381c:	jb     0x413883
  41381e:	lods   al,BYTE PTR ds:[esi]
  41381f:	inc    eax
  413820:	js     0x413892
  413822:	mov    cl,0x2b
  413824:	inc    esp
  413825:	jb     0x4137b0
  413827:	xor    ah,BYTE PTR [ecx+0x0]
  41382a:	adc    eax,0x39617034
  41382f:	cmp    DWORD PTR [eax+0x72],eax
  413832:	push   eax
  413833:	sub    DWORD PTR [ebp+0x5d],ebx
  413836:	sub    DWORD PTR [edx],0xe6396355
  41383c:	pop    esp
  41383d:	jb     0x41388e
  41383f:	xor    al,0x52
  413841:	add    BYTE PTR [esi+eax*1+0x5d],ah
  413845:	jb     0x41384e
  413847:	clc    
  413848:	push   esp
  413849:	arpl   WORD PTR [ecx],di
  41384b:	pop    es
  41384c:	popa   
  41384d:	jno    0x413879
  41384f:	loop   0x4138a3
  413851:	jb     0x413868
  413853:	xlat   BYTE PTR ds:[ebx]
  413854:	and    al,0x50
  413856:	sbb    dh,al
  413858:	push   eax
  413859:	jne    0x41385b
  41385b:	push   ds
  41385c:	lds    ebx,FWORD PTR [ebp+0x0]
  41385f:	std    
  413860:	call   DWORD PTR [ecx+0x63]
  413863:	sbb    cl,bl
  413865:	push   esp
  413866:	jb     0x413858
  413868:	(bad)  
  413869:	xor    BYTE PTR [ebp-0x29],ch
  41386c:	stos   BYTE PTR es:[edi],al
  41386d:	dec    esp
  41386e:	pop    edi
  41386f:	jmp    0x413824
  413871:	and    eax,0x219efa4e
  413876:	push   ecx
  413877:	out    0xb0,al
  413879:	dec    ebp
  41387a:	jne    0x413854
  41387c:	test   BYTE PTR [esi+0x5c],bl
  41387f:	cli    
  413880:	mov    edx,0xbfca7162
  413885:	pusha  
  413886:	inc    esi
  413887:	lea    eax,[edi-0x787ab9db]
  41388d:	inc    edx
  41388e:	popa   
  41388f:	call   0x166:0xa56e4e7a
  413896:	inc    esi
  413897:	lea    eax,[edi+0x30]
  41389a:	arpl   WORD PTR [ebx+0x39725e49],cx
  4138a0:	xchg   ecx,eax
  4138a1:	dec    ebp
  4138a2:	jo     0x413908
  4138a4:	inc    esi
  4138a5:	pop    esi
  4138a6:	jb     0x41382f
  4138a8:	add    BYTE PTR [eax+0x57],cl
  4138ab:	pop    edx
  4138ac:	add    BYTE PTR ds:0x48306950,ah
  4138b2:	push   ecx
  4138b3:	push   0x5d523e49
  4138b8:	add    BYTE PTR [esi],ah
  4138ba:	ds inc ebp
  4138bc:	push   eax
  4138bd:	pop    ss
  4138be:	arpl   WORD PTR [eax],ax
  4138c0:	dec    eax
  4138c1:	dec    ebp
  4138c2:	ds push ebp
  4138c4:	dec    ebx
  4138c5:	pop    esp
  4138c6:	out    0x3d,eax
  4138c8:	sub    eax,0x2b5b2b50
  4138cd:	pop    ebx
  4138ce:	or     dl,BYTE PTR [eax+0x14]
  4138d1:	dec    esi
  4138d2:	adc    BYTE PTR [eax+ecx*1],al
  4138d5:	xor    DWORD PTR ds:0x193eec30,esp
  4138db:	aas    
  4138dc:	in     eax,dx
  4138dd:	xor    DWORD PTR [edx],ebp
  4138df:	cmp    al,0x59
  4138e1:	sub    eax,0x49055e06
  4138e6:	or     BYTE PTR [edx-0x26],dl
  4138e9:	and    ebp,DWORD PTR [ebp-0x39ae29a9]
  4138ef:	daa    
  4138f0:	es pop ebp
  4138f2:	retf   0xea54
  4138f5:	push   ecx
  4138f6:	rcl    DWORD PTR [eax+0x39],cl
  4138f9:	sub    eax,0x48c55dd6
  4138fe:	enter  0xda51,0x23
  413902:	lods   eax,DWORD PTR ds:[esi]
  413903:	das    
  413904:	jmp    0x9a9bf445
  413909:	cs fwait
  41390b:	daa    
  41390c:	mov    BYTE PTR [ecx],ch
  41390e:	xchg   ebx,eax
  41390f:	pop    esi
  413910:	test   al,0x0
  413912:	mov    edx,0x96349754
  413917:	bound  ecx,QWORD PTR [ebx-0x63cf5cdb]
  41391d:	es jae 0x41394b
  413920:	push   edi
  413921:	das    
  413922:	add    BYTE PTR [ebx+0x0],bh
  413925:	pop    ebp
  413926:	pop    esp
  413927:	inc    esi
  413928:	xchg   ebp,eax
  413929:	sub    al,BYTE PTR [ecx+0x6c]
  41392c:	push   eax
  41392d:	and    BYTE PTR [esi],ch
  41392f:	je     0x41396e
  413931:	mov    fs,WORD PTR [edi]
  413933:	je     0x413981
  413935:	add    BYTE PTR es:[esi],ch
  413938:	ds adc eax,0xa170021
  41393e:	sub    al,0x6c
  413940:	jmp    0x1a917eab
  413945:	or     ah,BYTE PTR [esi]
  413947:	je     0x41397f
  413949:	pop    esp
  41394a:	xor    ah,BYTE PTR [ebx+0x45]
  41394d:	add    DWORD PTR [edi],esp
  41394f:	jb     0x413955
  413951:	pop    esi
  413952:	xor    al,0x6d
  413954:	sbb    ebx,DWORD PTR [eax+eiz*8+0x4c]
  413958:	sbb    DWORD PTR [eax+0x31],edx
  41395b:	add    BYTE PTR ds:0xfb5f27e6,ah
  413961:	push   ecx
  413962:	and    al,0x51
  413964:	or     al,0x41
  413966:	xor    al,0x67
  413968:	jmp    DWORD PTR [ebx]
  41396a:	xor    DWORD PTR [esi],ebp
  41396c:	retf   0x3117
  41396f:	add    BYTE PTR [ebp-0x24a0d7f1],bh
  413975:	adc    DWORD PTR [ecx+edx*2],esp
  413978:	les    ecx,FWORD PTR [esi]
  41397a:	xor    al,0x67
  41397c:	xlat   BYTE PTR ds:[ebx]
  41397d:	and    esi,DWORD PTR [ecx]
  41397f:	pop    ebp
  413980:	clc    
  413981:	fucomi st,st(7)
  413983:	pop    esp
  413984:	cld    
  413985:	dec    eax
  413986:	and    BYTE PTR [ecx-0x46],ah
  413989:	add    BYTE PTR [edx],bh
  41398b:	pop    esp
  41398c:	push   ecx
  41398d:	xchg   ecx,eax
  41398e:	push   ebp
  41398f:	xor    ah,BYTE PTR [ebx-0x7b]
  413992:	(bad)  
  413993:	and    esi,DWORD PTR [ebp+ebx*4+0x4d]
  413997:	cs gs call 0xeba4:0x6f3008
  4139a0:	jae    0x413a07
  4139a2:	adc    BYTE PTR [edi+0x4f],bl
  4139a5:	push   0x6460f4b1
  4139aa:	shl    edi,cl
  4139ac:	jae    0x413a22
  4139ae:	mov    edx,esi
  4139b0:	bound  esi,QWORD PTR [ebx+0x27]
  4139b3:	mov    ch,0x5c
  4139b5:	xor    BYTE PTR [edi],ah
  4139b7:	mov    ecx,0xf071732b
  4139bc:	fs je  0x413a3c
  4139bf:	add    al,0x5c
  4139c1:	inc    ebx
  4139c2:	ja     0x4139ae
  4139c4:	gs gs ins DWORD PTR es:[edi],dx
  4139c7:	inc    edi
  4139c8:	jno    0x413a3a
  4139ca:	inc    eax
  4139cb:	push   edi
  4139cc:	imul   esp,DWORD PTR [esi+0x4c],0xfffffffb
  4139d0:	pop    esp
  4139d1:	jb     0x413a10
  4139d3:	add    al,0x6c
  4139d5:	gs xor esp,esi
  4139d8:	gs je  0x413a0b
  4139db:	add    al,0x71
  4139dd:	outs   dx,BYTE PTR ds:[esi]
  4139de:	and    al,0xe9
  4139e0:	pop    esp
  4139e1:	jo     0x413a59
  4139e3:	out    0x77,eax
  4139e5:	gs nop
  4139e7:	cmc    
  4139e8:	fs je  0x413a28
  4139eb:	imul   DWORD PTR ds:0xf6810064
  4139f1:	push   DWORD PTR [edx-0x77]
  4139f4:	mul    BYTE PTR [eax+0x73]
  4139f7:	ss in  eax,dx
  4139f9:	ins    DWORD PTR es:[edi],dx
  4139fa:	imul   esp,DWORD PTR [eax+0x5e],0xf281654c
  413a01:	push   edx
  413a02:	popa   
  413a03:	and    bh,0x5b
  413a06:	dec    esp
  413a07:	ins    DWORD PTR es:[edi],dx
  413a08:	jecxz  0x413a79
  413a0a:	inc    esi
  413a0b:	int3   
  413a0c:	push   ecx
  413a0d:	add    BYTE PTR [ebx-0x19],dl
  413a10:	inc    edi
  413a11:	push   esp
  413a12:	push   edi
  413a13:	rcl    DWORD PTR [ebx+0x41],1
  413a16:	pop    esp
  413a17:	cmp    DWORD PTR [ebx+0x28],esp
  413a1a:	pop    edi
  413a1b:	mov    DWORD PTR [esi+0x24],esi
  413a1e:	jb     0x4139b4
  413a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a21:	dec    esp
  413a22:	outs   dx,BYTE PTR ds:[esi]
  413a23:	mov    dh,BYTE PTR [ebx]
  413a25:	and    al,0x6c
  413a27:	lea    edx,[edi-0x589e8bdc]
  413a2d:	inc    ebp
  413a2e:	pop    edi
  413a2f:	gs dec eax
  413a31:	dec    eax
  413a32:	imul   esp,DWORD PTR [bx+0x5f51],0x6a
  413a38:	pop    edx
  413a39:	aaa    
  413a3a:	ins    DWORD PTR es:[edi],dx
  413a3b:	dec    ebx
  413a3c:	inc    ebx
  413a3d:	add    al,0x48
  413a3f:	pop    esi
  413a40:	cli    
  413a41:	aaa    
  413a42:	dec    esi
  413a43:	pop    eax
  413a44:	dec    esp
  413a45:	and    eax,0x24fa6400
  413a4a:	jb     0x413a53
  413a4c:	dec    eax
  413a4d:	sub    eax,0x24f93963
  413a52:	imul   eax,DWORD PTR [eax],0x16
  413a55:	adc    esp,DWORD PTR ds:0x25191044
  413a5b:	popa   
  413a5c:	or     eax,0x397733be
  413a61:	pop    ss
  413a62:	das    
  413a63:	jb     0x413a72
  413a65:	in     eax,dx
  413a66:	xor    al,0x6b
  413a68:	sbb    ecx,DWORD PTR [esi+esi*1]
  413a6b:	add    bh,bh
  413a6d:	sbb    DWORD PTR [edx+esi*2-0x22],edx
  413a71:	fidiv  DWORD PTR [eax]
  413a73:	popa   
  413a74:	(bad)  
  413a75:	retf   0x5101
  413a78:	into   
  413a79:	int3   
  413a7a:	xor    eax,0x26d8d875
  413a7f:	pop    esp
  413a80:	cld    
  413a81:	(bad)  
  413a82:	xor    esi,DWORD PTR [eax+edx*8-0x34]
  413a86:	loope  0x413ad7
  413a88:	retf   
  413a89:	mov    edi,0x7bb0722c
  413a8e:	add    DWORD PTR [edx+ebp*2+0x0],ebx
  413a92:	fld    DWORD PTR [ebp-0x62]
  413a95:	xor    al,0xa5
  413a97:	aaa    
  413a98:	test   eax,0x9e317fee
  413a9d:	add    BYTE PTR [ebp+0x7b276847],bl
  413aa3:	es mov dh,ch
  413aa6:	(bad)  
  413aa7:	xor    DWORD PTR [esi+0x5a519300],edx
  413aad:	xor    al,0xa3
  413aaf:	xor    eax,0x44c3656
  413ab4:	mov    DWORD PTR [edi],ebx
  413ab6:	pop    edx
  413ab7:	xor    eax,0x592d8400
  413abc:	sub    BYTE PTR [ecx],bh
  413abe:	push   ebx
  413abf:	pop    ecx
  413ac0:	xor    BYTE PTR [ecx],bh
  413ac2:	push   ebx
  413ac3:	cmp    ah,BYTE PTR [edi]
  413ac5:	dec    ebx
  413ac6:	dec    esi
  413ac7:	dec    eax
  413ac8:	das    
  413ac9:	pop    edx
  413aca:	add    BYTE PTR [ecx],bl
  413acc:	xor    DWORD PTR [esp+esi*1],esp
  413acf:	and    ebp,DWORD PTR [ebx]
  413ad1:	sub    esp,DWORD PTR [ebx]
  413ad3:	or     bh,BYTE PTR [eax]
  413ad5:	adc    al,0x32
  413ad7:	and    BYTE PTR [ecx+ecx*1],al
  413ada:	sub    eax,0x51393819
  413adf:	(bad)  
  413ae0:	sub    DWORD PTR ds:0x1a360835,eax
  413ae6:	pop    esp
  413ae7:	sbb    dh,BYTE PTR [ecx]
  413ae9:	or     dh,BYTE PTR [edi+edi*8]
  413aec:	jecxz  0x413af6
  413aee:	daa    
  413aef:	cmc    
  413af0:	es jmp 0x413ad2
  413af3:	mov    edx,0xcd27d826
  413af8:	xor    ch,cl
  413afa:	sub    al,0xce
  413afc:	sub    bl,dl
  413afe:	xor    BYTE PTR [ebx-0x54de25a8],ch
  413b04:	xor    eax,0x5fc435de
  413b09:	clc    
  413b0a:	sub    al,0x0
  413b0c:	(bad)  
  413b0d:	push   0x63b5611f
  413b12:	sub    eax,0x513a9a6e
  413b17:	arpl   WORD PTR [ebx-0x428de0a0],bx
  413b1d:	add    BYTE PTR [ebx+0x30],dl
  413b20:	arpl   cx,bp
  413b22:	adc    BYTE PTR [eax+edx*2-0x37],0x7d
  413b27:	dec    ebp
  413b28:	dec    esi
  413b29:	xchg   ebp,eax
  413b2a:	fs dec ebp
  413b2c:	dec    esp
  413b2d:	jmp    0xaa918fb2
  413b32:	mov    DWORD PTR [edx+0x0],ecx
  413b35:	pop    ss
  413b36:	sub    eax,0x7ee9662e
  413b3b:	push   eax
  413b3c:	jb     0x413b84
  413b3e:	pop    ds
  413b3f:	and    ebp,DWORD PTR [esp+eax*2+0xa]
  413b43:	add    BYTE PTR [ecx-0x71f206bc],al
  413b49:	jp     0x413ad8
  413b4b:	and    esi,DWORD PTR [ecx-0x7a]
  413b4e:	imul   BYTE PTR [eax]
  413b50:	je     0x413b87
  413b52:	imul   BYTE PTR gs:[esi+edx*8]
  413b56:	cmp    ch,BYTE PTR [eax]
  413b58:	je     0x413b6f
  413b5a:	xor    DWORD PTR gs:[edx],edi
  413b5d:	(bad)  
  413b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b5f:	mov    ebx,0xf6451563
  413b64:	sub    al,0xd6
  413b66:	cmp    ch,BYTE PTR ds:0x5b4b0470
  413b6c:	add    dh,bh
  413b6e:	sbb    eax,0x16bf642a
  413b73:	pop    ebx
  413b74:	je     0x413b5f
  413b76:	pop    es
  413b77:	push   ecx
  413b78:	ins    DWORD PTR es:[edi],dx
  413b79:	(bad)  
  413b7a:	es xor eax,0x5c21db5f
  413b80:	dec    ebp
  413b81:	fld    DWORD PTR [eax]
  413b83:	and    DWORD PTR [esi],ebp
  413b85:	pop    edi
  413b86:	add    BYTE PTR [eax],dh
  413b88:	dec    edi
  413b89:	imul   esp,DWORD PTR [esi-0x7c],0xfffffff2
  413b8d:	pop    esp
  413b8e:	jb     0x413b95
  413b90:	dec    DWORD PTR [ebx+0x61]
  413b93:	repz repnz pop ds
  413b96:	inc    esp
  413b97:	leave  
  413b98:	lock pusha 
  413b9a:	arpl   sp,ax
  413b9c:	jmp    0xff34b512
  413ba1:	dec    ebx
  413ba2:	popa   
  413ba3:	mov    bl,0xf2
  413ba5:	pop    ds
  413ba6:	dec    ecx
  413ba7:	scas   al,BYTE PTR es:[edi]
  413ba8:	in     eax,dx
  413ba9:	jae    0x413c0c
  413bab:	lods   al,BYTE PTR ds:[esi]
  413bac:	jmp    0x67:0xf2c1501f
  413bb3:	iret   
  413bb4:	out    dx,al
  413bb5:	pusha  
  413bb6:	jb     0x413c29
  413bb8:	stos   BYTE PTR es:[edi],al
  413bb9:	inc    ebp
  413bba:	push   esp
  413bbb:	or     eax,0x78735c50
  413bc0:	jmp    0xeb5da830
  413bc5:	outs   dx,DWORD PTR ds:[esi]
  413bc6:	outs   dx,BYTE PTR gs:[esi]
  413bc8:	and    BYTE PTR [edi+0x6f],bl
  413bcb:	ins    DWORD PTR es:[edi],dx
  413bcc:	icebp  
  413bcd:	pop    esp
  413bce:	outs   dx,BYTE PTR ds:[esi]
  413bcf:	add    al,0x4
  413bd1:	jae    0x413c3c
  413bd3:	jae    0x413bbe
  413bd5:	gs je  0x413c18
  413bd8:	out    dx,eax
  413bd9:	jno    0x413c51
  413bdb:	inc    ebx
  413bdc:	stos   BYTE PTR es:[edi],al
  413bdd:	pop    edi
  413bde:	imul   edi,DWORD PTR [esi],0x43415c04
  413be4:	jmp    0x2441852a
  413be9:	add    al,0x4f
  413beb:	outs   dx,DWORD PTR ds:[esi]
  413bec:	ss clc 
  413bee:	jb     0x413c51
  413bf0:	jb     0x413bd9
  413bf2:	pop    ebx
  413bf3:	inc    ecx
  413bf4:	inc    ebx
  413bf5:	jmp    0xfee5853b
  413bfa:	dec    eax
  413bfb:	push   edx
  413bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bfd:	dec    BYTE PTR [esi+0x4f]
  413c00:	cmp    DWORD PTR [ebx+0x55],ebp
  413c03:	push   ebp
  413c04:	clc    
  413c05:	jbe    0x413c4f
  413c07:	pop    esp
  413c08:	cli    
  413c09:	aam    0x24
  413c0b:	jno    0x413bd7
  413c0d:	ret    
  413c0e:	xor    bl,BYTE PTR [ebp+ecx*4+0x70]
  413c12:	xor    DWORD PTR [ebx+0x7d],esp
  413c15:	rcr    BYTE PTR [edi],0x5c
  413c18:	mov    ds:0x772f3f66,al
  413c1d:	aad    0x42
  413c1f:	xor    BYTE PTR [edi-0x3c],bh
  413c22:	stc    
  413c23:	das    
  413c24:	push   eax
  413c25:	shl    eax,cl
  413c27:	xor    edi,DWORD PTR [eax+0x68]
  413c2a:	inc    edx
  413c2b:	sub    edi,DWORD PTR [ebx+0x66]
  413c2e:	inc    ebx
  413c2f:	xor    esp,DWORD PTR [ebx+edi*2]
  413c32:	hlt    
  413c33:	ds daa 
  413c35:	jae    0x413c7f
  413c37:	xor    ch,BYTE PTR [esi]
  413c39:	jmp    0x5c677130
  413c3e:	add    al,0x51
  413c40:	xchg   cl,ch
  413c42:	push   edi
  413c43:	push   ebp
  413c44:	js     0x413c3b
  413c46:	inc    esp
  413c47:	pop    esp
  413c48:	jp     0x413c9d
  413c4a:	and    DWORD PTR [ecx+0x0],esi
  413c4d:	dec    edx
  413c4e:	inc    esp
  413c4f:	das    
  413c50:	pop    esp
  413c51:	or     eax,0xfd6333f0
  413c56:	aas    
  413c57:	and    bl,BYTE PTR [edx+eiz*1-0x60]
  413c5b:	inc    esi
  413c5c:	aas    
  413c5d:	fs aam 0xf6
  413c60:	xor    DWORD PTR [eax-0x3c],edx
  413c63:	inc    esi
  413c64:	das    
  413c65:	dec    ebx
  413c66:	aad    0xee
  413c68:	xor    ecx,DWORD PTR [esi+0x7c]
  413c6b:	hlt    
  413c6c:	sub    bh,bl
  413c6e:	in     eax,0xf2
  413c70:	ss and al,0xec
  413c73:	div    DWORD PTR [edi]
  413c75:	sub    esi,DWORD PTR [ebx+eax*2+0x38]
  413c79:	sub    DWORD PTR [eax],eax
  413c7b:	push   ds
  413c7c:	icebp  
  413c7d:	sub    BYTE PTR ds:0x26cc03dc,bh
  413c83:	fisub  DWORD PTR [esi]
  413c85:	xlat   BYTE PTR ds:[ebx]
  413c86:	xor    edx,edi
  413c88:	xor    bl,cl
  413c8a:	xor    DWORD PTR [edx-0x2fd62813],edi
  413c90:	add    ebp,DWORD PTR [edi+eiz*1+0x349726ba]
  413c97:	mov    bh,0xed
  413c99:	lahf   
  413c9a:	sub    dl,BYTE PTR [eax-0x48ab88fd]
  413ca0:	push   ebp
  413ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca2:	aaa    
  413ca3:	mov    BYTE PTR [edx+ebx*4],ah
  413ca6:	cs mov ebp,0xe7308d25
  413cac:	inc    ebp
  413cad:	gs push eax
  413caf:	xchg   ebp,eax
  413cb0:	sub    al,0x0
  413cb2:	outs   dx,BYTE PTR ds:[esi]
  413cb3:	pop    ds
  413cb4:	mov    fs,WORD PTR [esi]
  413cb6:	imul   ebp,edx,0x77
  413cb9:	and    BYTE PTR [ecx],bh
  413cbb:	pop    esp
  413cbc:	cmp    DWORD PTR [esi+edx*2],ebp
  413cbf:	sub    cl,BYTE PTR [esi+0x51]
  413cc2:	and    bl,BYTE PTR fs:[ebx-0x12]
  413cc6:	pop    ecx
  413cc7:	sub    DWORD PTR [esp+eax*1],edi
  413cca:	push   edi
  413ccb:	sub    eax,0x240cf13a
  413cd0:	dec    ebx
  413cd1:	xor    BYTE PTR [ecx],bh
  413cd3:	dec    edx
  413cd4:	sbb    dl,BYTE PTR [ecx+0xc]
  413cd7:	inc    edi
  413cd8:	cmp    eax,0x35002d2b
  413cdd:	push   ecx
  413cde:	or     BYTE PTR [ecx+0x3a],bl
  413ce1:	sub    al,0xa
  413ce3:	xor    al,0xb
  413ce5:	sub    eax,0x4de72a04
  413cea:	call   0x864663b
  413cef:	and    esi,DWORD PTR [ebp+0x4415f7]
  413cf5:	or     al,0x18
  413cf7:	sub    esp,DWORD PTR [esp+eax*1-0x5]
  413cfb:	sub    al,0x66
  413cfd:	iret   
  413cfe:	pop    ss
  413cff:	add    BYTE PTR cs:[edx-0x42b8c101],bh
  413d06:	test   DWORD PTR [ebp+ebx*2-0x59],0xb0631d08
  413d0e:	push   es
  413d0f:	sbb    eax,0x498ae96b
  413d14:	das    
  413d15:	clc    
  413d16:	add    BYTE PTR [ebp+0x73b5633d],cl
  413d1c:	es je  0x413cab
  413d1f:	push   0x818d5f26
  413d24:	and    esi,DWORD PTR [edi-0x46]
  413d27:	pop    esi
  413d28:	and    eax,0x496ae974
  413d2d:	das    
  413d2e:	mov    eax,0x7572f75d
  413d33:	and    ah,BYTE PTR [ebx]
  413d35:	outs   dx,BYTE PTR ds:[esi]
  413d36:	jge    0x413d5b
  413d38:	and    DWORD PTR [edi+0x75],ebx
  413d3b:	pop    ds
  413d3c:	add    BYTE PTR [eax+0x32],dl
  413d3f:	in     al,0xe6
  413d41:	push   eax
  413d42:	and    eax,0x4c44556f
  413d47:	push   ss
  413d48:	xor    dh,BYTE PTR [edi+0x59]
  413d4b:	or     DWORD PTR [eax],eax
  413d4d:	push   eax
  413d4e:	xor    al,ah
  413d50:	out    0x5c,al
  413d52:	daa    
  413d53:	outs   dx,DWORD PTR ds:[esi]
  413d54:	and    esp,DWORD PTR [ebx+0x1a]
  413d57:	popa   
  413d58:	and    eax,0x3ae974
  413d5d:	add    cl,ch
  413d5f:	cmp    al,BYTE PTR [eax]
  413d61:	add    cl,ch
  413d63:	cmp    al,BYTE PTR [eax]
  413d65:	add    cl,ch
  413d67:	cmp    al,BYTE PTR [eax]
  413d69:	add    cl,ch
  413d6b:	cmp    al,BYTE PTR [eax]
  413d6d:	add    BYTE PTR [eax],al
  413d6f:	nop
  413d70:	add    eax,DWORD PTR [eax]
  413d72:	add    BYTE PTR [eax+0x3],ah
  413d75:	add    BYTE PTR [eax],al
  413d77:	pusha  
  413d78:	add    eax,DWORD PTR [eax]
  413d7a:	add    BYTE PTR [eax],al
  413d7c:	push   eax
  413d7d:	add    ebp,DWORD PTR [edi+0x71]
  413d80:	test   ah,ah
  413d82:	jae    0x413de9
  413d84:	xor    ebp,DWORD PTR [edx+0x3746c61]
  413d8a:	outs   dx,DWORD PTR ds:[esi]
  413d8b:	jno    0x413d11
  413d8d:	in     al,0x73
  413d8f:	gs inc ebx
  413d91:	pop    edx
  413d92:	imul   esi,DWORD PTR [eax-0x3],0xffffffe8
  413d96:	push   DWORD PTR [edx-0xf]
  413d99:	fisub  WORD PTR [esp+esi*2-0x3]
  413d9d:	lods   eax,DWORD PTR ds:[esi]
  413d9e:	pop    esp
  413d9f:	arpl   sp,ax
  413da1:	jmp    0xee61a314
  413da6:	ins    BYTE PTR es:[edi],dx
  413da7:	ins    BYTE PTR es:[edi],dx
  413da8:	mov    ecx,0xd73360e6
  413dad:	bnd jno 0x413e15
  413db0:	sbb    ah,0x71
  413db3:	gs loopne 0x413da3
  413db6:	ins    BYTE PTR es:[edi],dx
  413db7:	ins    BYTE PTR es:[edi],dx
  413db8:	mov    ecx,0xb73360e6
  413dbd:	in     eax,dx
  413dbe:	jae    0x413e25
  413dc0:	cmp    ah,0x6e
  413dc3:	jno    0x413d49
  413dc5:	in     eax,0x73
  413dc7:	xor    ebx,DWORD PTR gs:[ebx+0x5f]
  413dcb:	outs   dx,DWORD PTR ds:[esi]
  413dcc:	add    al,0xf1
  413dce:	push   0x74de176e
  413dd3:	je     0x413dd2
  413dd5:	out    dx,al
  413dd6:	push   DWORD PTR [edx+0x71]
  413dd9:	call   0xaf3eb242
  413dde:	pop    esp
  413ddf:	arpl   WORD PTR [eax],ax
  413de1:	inc    edi
  413de2:	call   0x5b87ab57
  413de7:	bound  ebp,QWORD PTR [ecx+edi*1-0x2]
  413deb:	and    eax,0x2ab43900
  413df0:	jp     0x413dfc
  413df2:	mov    eax,0xfbed6725
  413df7:	hlt    
  413df8:	sub    eax,0x27fcd5
  413dfd:	jmp    0xf6c3:0xe56725b7
  413e04:	pop    esp
  413e05:	out    0xd8,al
  413e07:	and    BYTE PTR [esi+0x39],ch
  413e0a:	fidiv  DWORD PTR [esp+ebp*2]
  413e0d:	ror    ah,1
  413e0f:	and    BYTE PTR [ecx],dh
  413e11:	fmulp  st(1),st
  413e13:	and    eax,0x1bcaa6d
  413e18:	jno    0x413dc2
  413e1a:	mov    ebx,0xba9c742c
  413e1f:	pop    edx
  413e20:	jo     0x413dcd
  413e22:	test   BYTE PTR [ecx],dh
  413e24:	pop    edi
  413e25:	mov    edi,DWORD PTR [ecx+eax*1+0x71]
  413e29:	mov    BYTE PTR [ebx+0x2c],bh
  413e2c:	je     0x413dca
  413e2e:	ficomp DWORD PTR [edx+0x71]
  413e31:	test   DWORD PTR [ecx+esi*1+0x25386a00],eax
  413e38:	addr16 gs test dh,dh
  413e3c:	pop    esp
  413e3d:	pop    edx
  413e3e:	ss and eax,0x574d4c73
  413e44:	bound  eax,QWORD PTR [eax]
  413e46:	push   eax
  413e47:	dec    ebx
  413e48:	sbb    eax,0x315a3971
  413e4d:	ins    BYTE PTR es:[edi],dx
  413e4e:	push   eax
  413e4f:	dec    ebx
  413e50:	sbb    eax,0x274a5e31
  413e55:	ins    BYTE PTR es:[edi],dx
  413e56:	sub    al,0x44
  413e58:	sub    bl,BYTE PTR [ebp+0x1b]
  413e5b:	cmp    esp,DWORD PTR [edi]
  413e5d:	bound  edi,QWORD PTR [ecx]
  413e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e60:	add    DWORD PTR [eax],eax
  413e62:	cmp    DWORD PTR [eax],eax
  413e64:	out    0x3,eax
  413e66:	cmp    DWORD PTR [eax],eax
  413e68:	out    0x3,eax
  413e6a:	cmp    DWORD PTR [eax],eax
  413e6c:	out    0x3,eax
  413e6e:	cmp    DWORD PTR [eax],eax
  413e70:	out    0x3,eax
  413e72:	cmp    DWORD PTR [eax],eax
  413e74:	out    0x3,eax
  413e76:	cmp    DWORD PTR [eax],eax
  413e78:	out    0x3,eax
  413e7a:	cmp    DWORD PTR [eax],eax
  413e7c:	out    0x3,eax
  413e7e:	cmp    DWORD PTR [eax],eax
  413e80:	out    0x33,eax
  413e82:	jmp    0x413ea8
  413e84:	int    0x2a
  413e86:	in     eax,0x1a
  413e88:	fucompp 
  413e8a:	xlat   BYTE PTR ds:[ebx]
  413e8b:	and    eax,0x31e903c0
  413e90:	mov    esi,0xcc23d621
  413e95:	add    edi,DWORD PTR [esi+0x31]
  413e98:	cdq    
  413e99:	push   ds
  413e9a:	popf   
  413e9b:	pop    ds
  413e9c:	mov    ebx,0xe71baf2a
  413ea1:	push   ebx
  413ea2:	jle    0x413ed0
  413ea4:	pop    DWORD PTR [ebx]
  413ea6:	imul   ebx,DWORD PTR [edi],0x65002b93
  413eac:	and    eax,0x9a3bac
  413eb1:	call   0x6829:0x9626942a
  413eb8:	out    0x79,al
  413eba:	xor    bl,BYTE PTR [ebp+0x27]
  413ebd:	jnp    0x413edd
  413ebf:	cmp    DWORD PTR [ecx],esi
  413ec1:	and    BYTE PTR [eax],0x4f
  413ec4:	and    eax,0x2c273555
  413ec9:	pop    edi
  413eca:	xor    BYTE PTR [ecx],bh
  413ecc:	xor    DWORD PTR [eax+0x21],eax
  413ecf:	push   edi
  413ed0:	and    eax,0xe60b353d
  413ed5:	cmp    bh,BYTE PTR [ebp*1+0x142b3a00]
  413edc:	add    BYTE PTR es:[esi+0x53],al
  413ee0:	das    
  413ee1:	xor    edi,edi
  413ee3:	dec    esi
  413ee4:	cmp    BYTE PTR [ecx+ebp*8-0x63],dh
  413ee8:	out    dx,al
  413ee9:	pusha  
  413eea:	jmp    0xe9a52d84
  413eef:	popf   
  413ef0:	out    dx,al
  413ef1:	(bad)  
  413ef2:	jmp    0x2c8d7fdc
  413ef7:	cld    
  413ef8:	dec    ebx
  413ef9:	and    BYTE PTR [ecx],dl
  413efb:	and    BYTE PTR [edi],ch
  413efd:	je     0x413f06
  413eff:	sbb    ch,BYTE PTR [ecx]
  413f01:	arpl   WORD PTR [ebp-0x3591dea6],di
  413f07:	or     al,0x2d
  413f09:	jo     0x413ee0
  413f0b:	das    
  413f0c:	sbb    al,0x53
  413f0e:	fiadd  DWORD PTR [eax]
  413f10:	daa    
  413f11:	xor    ch,BYTE PTR [esi-0x38]
  413f14:	pop    ss
  413f15:	and    DWORD PTR [ecx+ecx*1],ebp
  413f18:	push   esi
  413f19:	and    ah,BYTE PTR [ecx-0x45]
  413f1c:	jae    0x413f4e
  413f1e:	je     0x413eec
  413f20:	inc    esi
  413f21:	push   eax
  413f22:	pop    edi
  413f23:	mov    edx,0x9b6d2d65
  413f28:	ss loopne 0x413f70
  413f2b:	mov    ebx,0x84204781
  413f30:	push   ecx
  413f31:	ss pop ebp
  413f33:	jge    0x413f86
  413f35:	sbb    eax,0x2d9767
  413f3a:	inc    esi
  413f3b:	nop
  413f3c:	and    al,0x1f
  413f3e:	data16 xchg BYTE PTR [edx],ah
  413f41:	add    BYTE PTR [esp+ebx*4+0x11],bl
  413f45:	ss addr16 push ebp
  413f48:	and    DWORD PTR [ebx+0x5c],edx
  413f4b:	daa    
  413f4c:	sbb    al,0x2e
  413f4e:	arpl   WORD PTR [edi+0x1e],cx
  413f51:	cmp    BYTE PTR [ecx+ebp*8+0x6b],bl
  413f55:	and    eax,0xe3740066
  413f5a:	pop    esp
  413f5b:	jb     0x413f52
  413f5d:	push   edi
  413f5e:	dec    ecx
  413f5f:	outs   dx,DWORD PTR ds:[esi]
  413f60:	push   0xffffffe5
  413f62:	imul   ebp,DWORD PTR [ecx+esi*8-0x5],0x28
  413f67:	sub    eax,0x7465ff6d
  413f6c:	xor    BYTE PTR [esi-0x186fd0d4],dh
  413f72:	jae    0x413fe8
  413f74:	add    BYTE PTR [eax],ah
  413f76:	mov    dh,0x2c
  413f78:	das    
  413f79:	pusha  
  413f7a:	out    0x73,eax
  413f7c:	je     0x413fee
  413f7e:	out    dx,al
  413f7f:	cmp    DWORD PTR [edi],ebp
  413f81:	jg     0x413f82
  413f83:	gs je  0x413fe6
  413f86:	popf   
  413f87:	std    
  413f88:	gs imul esi,ecx,0x4f844660
  413f8f:	outs   dx,DWORD PTR ds:[esi]
  413f90:	imul   esp,DWORD PTR [eax+eiz*8+0x6e],0x73dc742e
  413f98:	add    bl,dl
  413f9a:	fistp  WORD PTR [ebp+ecx*2-0x1]
  413f9e:	fsub   QWORD PTR [esi+0x65]
  413fa1:	jmp    0xdf8e9ba4
  413fa6:	clc    
  413fa7:	fs ins BYTE PTR es:[edi],dx
  413fa9:	lods   al,BYTE PTR ds:[esi]
  413faa:	fistp  DWORD PTR [ebx+0x53]
  413fad:	mov    ch,0xdb
  413faf:	dec    eax
  413fb0:	outs   dx,DWORD PTR ds:[esi]
  413fb1:	mov    esi,0xcc7960e5
  413fb6:	inc    BYTE PTR [ebp+0x6c]
  413fb9:	iret   
  413fba:	frstor [esi+0x0]
  413fbd:	int3   
  413fbe:	hlt    
  413fbf:	imul   ebp,DWORD PTR [edi-0x4d],0xffffffe5
  413fc3:	pop    ebx
  413fc4:	inc    edx
  413fc5:	(bad)  
  413fc6:	fidiv  DWORD PTR [edx+0x73]
  413fc9:	test   esi,ebp
  413fcb:	pop    ebx
  413fcc:	add    BYTE PTR ds:0x396979db,bl
  413fd2:	cmp    eax,0xe5395f28
  413fd7:	inc    esi
  413fd8:	ins    DWORD PTR es:[edi],dx
  413fd9:	add    BYTE PTR [ebx],dh
  413fdb:	push   eax
  413fdc:	sub    BYTE PTR [eax+ebx*1+0x15],ch
  413fe0:	push   esp
  413fe1:	jb     0x413ff9
  413fe3:	inc    ebx
  413fe4:	sub    ebp,DWORD PTR [esp+edx*1-0xa]
  413fe8:	push   edi
  413fe9:	add    dl,ch
  413feb:	or     DWORD PTR [esi],ebx
  413fed:	je     0x413ff5
  413fef:	or     BYTE PTR [edx],dh
  413ff1:	arpl   bp,sp
  413ff3:	fcomp  QWORD PTR [esi]
  413ff5:	arpl   WORD PTR [edx],bx
  413ff7:	add    DWORD PTR [esi],edi
  413ff9:	push   esp
  413ffa:	or     DWORD PTR [ecx-0x23168fbc],ebp
  414000:	sub    dh,BYTE PTR [edx+0x39]
  414003:	frstor [ecx+eiz*2]
  414006:	fdiv   DWORD PTR [ebp+edi*1+0x1fa8cb67]
  41400d:	ins    DWORD PTR es:[edi],dx
  41400e:	fmulp  st(5),st
  414010:	sub    BYTE PTR [edi-0x35],bl
  414013:	mov    ebp,0xccd863e3
  414018:	add    DWORD PTR [ecx-0x60],edx
  41401b:	jae    0x41403d
  41401d:	inc    edi
  41401e:	lahf   
  41401f:	mov    ecx,0x61882e26
  414024:	push   ecx
  414025:	add    BYTE PTR [esi-0x45],ch
  414028:	sub    al,0x6e
  41402a:	cmp    DWORD PTR [ecx+0x24],esp
  41402d:	jbe    0x413fcd
  41402f:	xchg   ebp,eax
  414030:	sub    al,0x74
  414032:	pushf  
  414033:	xchg   esi,eax
  414034:	jecxz  0x414099
  414036:	cwde   
  414037:	mov    eax,DWORD PTR [ecx]
  414039:	push   ebp
  41403a:	pusha  
  41403b:	mov    DWORD PTR [ebx],edi
  41403d:	push   esp
  41403e:	add    BYTE PTR [ecx+0x6d6732a7],cl
  414044:	test   BYTE PTR [edx],dh
  414046:	cs push ebp
  414048:	test   DWORD PTR [ecx],eax
  41404a:	inc    ecx
  41404b:	test   DWORD PTR [eax],eax
  41404d:	cmp    cl,BYTE PTR [ebx+0x75]
  414050:	push   esp
  414051:	(bad)
  414056:	inc    eax
  414057:	add    al,0xec
  414059:	pop    ss
  41405a:	out    0x77,eax
  41405c:	idiv   ebx
  41405e:	inc    ecx
  41405f:	(bad)  
  414060:	out    dx,eax
  414061:	neg    DWORD PTR [edi]
  414063:	imul   esp,ebx,0xffffffee
  414066:	inc    edx
  414067:	popa   
  414068:	lock sti 
  41406a:	repz data16 clc 
  41406d:	(bad)  
  41406e:	inc    edx
  41406f:	cmc    
  414070:	cmp    eax,0x39fcf1da
  414075:	(bad)  [esi]
  414077:	fld    QWORD PTR [esi-0x3]
  41407a:	push   ebx
  41407b:	jmp    0x41409d
  41407d:	or     dl,BYTE PTR [ecx-0x26]
  414080:	sub    eax,0xeceb1ef5
  414085:	mov    eax,0xf91ae803
  41408a:	sub    eax,0xe5da2dda
  41408f:	(bad)  
  414090:	and    cl,bl
  414092:	add    esp,ebp
  414094:	cmp    DWORD PTR [ebx-0x2ce50bad],edi
  41409a:	das    
  41409b:	call   0xc34c:0x883ee72e
  4140a2:	and    DWORD PTR [eax],eax
  4140a4:	imul   esp,edx,0xffffffca
  4140a7:	and    ah,BYTE PTR [ebp+0x763f9800]
  4140ad:	sub    al,0x88
  4140af:	in     eax,0x9a
  4140b1:	pop    ds
  4140b2:	xchg   ebx,eax
  4140b3:	add    esp,DWORD PTR [ebp+0x3b]
  4140b6:	call   0x952f:0x8521882f
  4140bd:	aas    
  4140be:	mov    bl,0x3d
  4140c0:	test   DWORD PTR [eax-0x19],edx
  4140c3:	dec    edx
  4140c4:	push   edi
  4140c5:	sub    al,0x0
  4140c7:	mov    WORD PTR [eax],gs
  4140c9:	and    ah,BYTE PTR [ebx+0x75]
  4140cc:	fidivr DWORD PTR ds:0x23215978
  4140d2:	jb     0x414118
  4140d4:	or     eax,DWORD PTR [eax]
  4140d6:	push   ebp
  4140d7:	inc    eax
  4140d8:	pop    ss
  4140d9:	sbb    DWORD PTR [esi+0x44],ebp
  4140dc:	imul   edi,DWORD PTR [edi],0x1d5d4a5f
  4140e2:	inc    ecx
  4140e3:	cmp    eax,DWORD PTR [esi+0x1c]
  4140e6:	arpl   WORD PTR [edi+0x69],ax
  4140e9:	sbb    DWORD PTR [edi+0x3d],ebx
  4140ec:	dec    eax
  4140ed:	add    BYTE PTR [ebx+0x3a],cl
  4140f0:	xchg   ebp,eax
  4140f1:	cmp    DWORD PTR [ebx-0x37],eax
  4140f4:	inc    esp
  4140f5:	dec    esp
  4140f6:	push   eax
  4140f7:	leave  
  4140f8:	jmp    0x7223:0x241a7150
  4140ff:	or     eax,0x19440028
  414104:	cli    
  414105:	dec    edi
  414106:	inc    edi
  414107:	mov    bl,0x0
  414109:	pop    edx
  41410a:	mov    al,0x6d
  41410c:	cli    
  41410d:	and    esi,DWORD PTR es:[edx-0x34]
  414111:	sbb    edx,esp
  414113:	arpl   bp,cx
  414115:	push   ds
  414116:	add    BYTE PTR [eax-0x46],dl
  414119:	push   cs
  41411a:	and    esi,DWORD PTR [edx-0x3c]
  41411d:	jns    0x414151
  41411f:	arpl   ax,cx
  414121:	pop    esi
  414122:	and    eax,DWORD PTR [edi-0x31]
  414125:	imul   esi,DWORD PTR [edi+ebx*2],0x2359c7
  41412c:	jmp    0x99b8738a
  414131:	pop    esi
  414132:	icebp  
  414133:	xor    edi,ecx
  414135:	es sbb al,0x6c
  414138:	jmp    0x99b873b6
  41413d:	es push ebx
  41413f:	outs   dx,BYTE PTR ds:[esi]
  414140:	add    BYTE PTR [eax-0xf],dh
  414143:	push   0x74
  414145:	mov    ebp,0xb14473e0
  41414a:	fistp  WORD PTR [eax+eax*1-0x20]
  41414e:	add    eax,DWORD PTR [eax]
  414150:	add    al,ah
  414152:	add    eax,DWORD PTR [eax]
  414154:	add    al,dl
  414156:	add    eax,DWORD PTR [eax+0x4a]
  414159:	pop    ds
  41415a:	mov    al,0xe1
  41415c:	mov    edx,0x7dbb15d7
  414161:	mov    al,ds:0x5e69004d
  414166:	bound  edi,QWORD PTR ds:0xe19f9f4a
  41416c:	mov    edx,0xbb15b700
  414171:	jge    0x414113
  414173:	dec    ebp
  414174:	add    BYTE PTR [ecx+0x5e],ch
  414177:	bound  eax,QWORD PTR [edx+0x4a]
  41417a:	pop    edi
  41417b:	lahf   
  41417c:	loope  0x414138
  41417e:	xlat   BYTE PTR ds:[ebx]
  41417f:	adc    eax,0x4d607dbb
  414184:	add    BYTE PTR [ecx+0x1e],ch
  414187:	bound  edi,QWORD PTR [ebx]
  414189:	add    BYTE PTR [eax+0x3],dl
  41418c:	and    DWORD PTR [eax],esi
  41418e:	xchg   edx,eax
  41418f:	cmp    eax,DWORD PTR [eax]
  414191:	push   ebx
  414192:	fnstenv [bp+di+0x77]
  414196:	jno    0x41418d
  414198:	pusha  
  414199:	pop    esp
  41419a:	xchg   ebp,eax
  41419b:	or     al,0x5f
  41419d:	jb     0x414196
  41419f:	cmc    
  4141a0:	push   0x66
  4141a2:	in     al,dx
  4141a3:	ds inc ebp
  4141a5:	outs   dx,BYTE PTR ds:[esi]
  4141a6:	in     al,dx
  4141a7:	xlat   BYTE PTR ds:[ebx]
  4141a8:	jno    0x414218
  4141aa:	in     eax,dx
  4141ab:	neg    BYTE PTR [edi]
  4141ad:	inc    ebp
  4141ae:	enter  0x6bf2,0x6f
  4141b2:	mov    dl,0xd7
  4141b4:	jno    0x414212
  4141b6:	leave  
  4141b7:	loopne 0x41422c
  4141b9:	cmp    DWORD PTR gs:[ebp+0x2e7f671d],eax
  4141c0:	xor    ebp,DWORD PTR [ebx+0x6a]
  4141c3:	gs push esi
  4141c5:	je     0x41421d
  4141c7:	sub    esp,DWORD PTR [eiz*2+0x16b54]
  4141ce:	cmp    DWORD PTR [ecx+0x39005f01],ebx
  4141d4:	cmp    eax,DWORD PTR [ebx+eiz*2]
  4141d7:	cmp    DWORD PTR [ebx],ecx
  4141d9:	add    al,0x38
  4141db:	cmp    DWORD PTR [edi],ecx
  4141dd:	add    al,0x37
  4141df:	cmp    DWORD PTR [edi+0x4],eax
  4141e2:	sub    edi,DWORD PTR [ecx]
  4141e4:	add    BYTE PTR [edx+eiz*2],al
  4141e7:	cmp    DWORD PTR [ebp+0x4393501],esi
  4141ed:	add    al,0x34
  4141ef:	cmp    DWORD PTR [edx],edi
  4141f1:	add    al,0x64
  4141f3:	cmp    DWORD PTR [eax-0x7c6d4ff],esp
  4141f9:	add    esi,DWORD PTR [ecx]
  4141fb:	cmp    esp,ecx
  4141fd:	add    DWORD PTR [eax],edi
  4141ff:	cmp    DWORD PTR [ecx+eax*1+0x61],ebp
  414203:	cmp    DWORD PTR [ebx+0x1],ebp
  414206:	xor    bh,BYTE PTR [ecx]
  414208:	rol    BYTE PTR [ecx],0x30
  41420b:	cmp    DWORD PTR [ebp+0x1],ebp
  41420e:	fs cmp ebx,edi
  414211:	add    ebx,DWORD PTR [edi+0x39]
  414214:	push   cs
  414215:	add    al,0x66
  414217:	cmp    DWORD PTR [esi],edx
  414219:	add    al,0x0
  41421b:	cmp    DWORD PTR [esp+ebx*1+0x61],esp
  41421f:	stos   DWORD PTR es:[edi],eax
  414220:	outs   dx,BYTE PTR ds:[esi]
  414221:	ss ins DWORD PTR es:[edi],dx
  414223:	xchg   edi,eax
  414224:	imul   edx,DWORD PTR [edx+0x55],0xffffff90
  414228:	mov    ebp,0x6b946e3c
  41422d:	push   edx
  41422e:	sub    bh,BYTE PTR [ecx]
  414230:	lds    esi,FWORD PTR ds:0xd6005370
  414236:	loop   0x414238
  414238:	push   es
  414239:	push   ebx
  41423a:	mov    gs,WORD PTR [ecx]
  41423c:	test   DWORD PTR ds:0x4c5a3588,esi
  414242:	test   al,0x27
  414244:	pop    esp
  414245:	and    cl,BYTE PTR [edi+ecx*2+0x208c1d78]
  41424c:	dec    esp
  41424d:	push   ds
  41424e:	out    0x56,eax
  414250:	pop    esi
  414251:	xor    al,0x84
  414253:	push   esi
  414254:	pop    edx
  414255:	xor    bl,BYTE PTR [ebp+0x27]
  414258:	dec    ebx
  414259:	xor    edi,esp
  41425b:	push   esp
  41425c:	push   esi
  41425d:	xor    al,0x4c
  41425f:	push   ebp
  414260:	sbb    dh,BYTE PTR [edx]
  414262:	push   ebp
  414263:	daa    
  414264:	sub    esp,eax
  414266:	or     ebp,DWORD PTR [eax]
  414268:	add    eax,0x25354e38
  41426d:	add    BYTE PTR [edx],bl
  41426f:	sbb    ecx,DWORD PTR ds:0xb271a23
  414275:	ss or  al,0x36
  414278:	pop    ecx
  414279:	jecxz  0x41427d
  41427b:	push   eax
  41427c:	in     al,0x22
  41427e:	or     DWORD PTR [edi-0x15],edx
  414281:	sbb    esp,edi
  414283:	push   esp
  414284:	(bad)  
  414285:	xor    ecx,DWORD PTR [edx*2+0x26f531da]
  41428c:	jmp    0x41426d
  41428e:	retf   
  41428f:	daa    
  414290:	cmc    
  414291:	push   ecx
  414292:	add    al,0x1f
  414294:	fdiv   QWORD PTR [ebx]
  414296:	int3   
  414297:	jecxz  0x414293
  414299:	push   ss
  41429a:	fldenv [esi]
  41429c:	add    al,bl
  41429e:	xor    eax,esi
  4142a0:	xor    eax,0x1aba00ae
  4142a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a6:	and    ebx,DWORD PTR [edx-0x3bc954da]
  4142ac:	xor    eax,0xccffe359
  4142b1:	not    DWORD PTR [ecx+0x71]
  4142b4:	les    eax,FWORD PTR [eax+eax*1+0x51]
  4142b8:	nop
  4142b9:	dec    esi
  4142ba:	and    DWORD PTR [ecx-0x7c],edx
  4142bd:	inc    esp
  4142be:	arpl   WORD PTR ss:[ebx-0x439c1e26],bx
  4142c5:	xchg   DWORD PTR [edi],ebp
  4142c7:	arpl   WORD PTR [ebx-0x26],di
  4142ca:	cmp    al,0x55
  4142cc:	jmp    0xa29d72a8
  4142d1:	pop    ds
  4142d2:	xor    eax,0x251b8161
  4142d7:	outs   dx,BYTE PTR ds:[esi]
  4142d8:	jmp    0x44b5684a
  4142dd:	and    DWORD PTR fs:[edx+0x5f],esi
  4142e1:	pop    esi
  4142e2:	xor    ah,BYTE PTR [eax]
  4142e4:	add    al,0x61
  4142e6:	dec    esp
  4142e7:	push   ecx
  4142e8:	das    
  4142e9:	add    DWORD PTR [eax+0x0],edx
  4142ec:	and    eax,0x31731c56
  4142f1:	pop    esi
  4142f2:	inc    esi
  4142f3:	push   esp
  4142f4:	sbb    DWORD PTR ds:0x5e1d672f,esi
  4142fa:	das    
  4142fb:	and    DWORD PTR cs:[esi],ebx
  4142fe:	sbb    al,0x0
  414300:	add    BYTE PTR ds:[esi],bl
  414303:	and    ah,BYTE PTR [eax]
  414305:	and    eax,0xe95f341a
  41430a:	sbb    esp,DWORD PTR es:[ebp+0x10]
  41430e:	sbb    esp,eax
  414310:	inc    ebx
  414311:	or     BYTE PTR [ecx],dl
  414313:	dec    ebp
  414314:	add    BYTE PTR [edx],bl
  414316:	jmp    0x65e0:0x1fdd673b
  41431d:	into   
  41431e:	add    al,0x19
  414320:	pop    edi
  414321:	fstp   QWORD PTR [edx]
  414323:	icebp  
  414324:	call   esp
  414326:	pop    ebx
  414327:	push   ds
  414328:	ins    BYTE PTR es:[edi],dx
  414329:	add    ch,dh
  41432b:	jmp    DWORD PTR [edi]
  41432d:	add    BYTE PTR [ecx+0x4],cl
  414330:	and    BYTE PTR [eax],al
  414332:	jecxz  0x414374
  414334:	dec    esi
  414335:	push   ebx
  414336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414337:	push   ebp
  414338:	cmp    eax,0x53ce49
  41433d:	push   eax
  41433e:	ret    0x48e6
  414341:	inc    ecx
  414342:	mov    dl,0x36
  414344:	add    BYTE PTR [ebp-0x32],dl
  414347:	out    0x4c,al
  414349:	push   ebp
  41434a:	xchg   ebp,eax
  41434b:	(bad)  
  41434c:	ds dec eax
  41434e:	xchg   ebp,eax
  41434f:	inc    esp
  414350:	inc    edi
  414351:	add    BYTE PTR [esi-0x66baadc0],ah
  414357:	cmp    BYTE PTR [esi+0x0],cl
  41435a:	ror    BYTE PTR [ebx],1
  41435c:	imul   esp,DWORD PTR [edi+0x69],0xa
  414360:	outs   dx,DWORD PTR ds:[esi]
  414361:	add    bh,bh
  414363:	in     eax,dx
  414364:	fs addr16 add cl,bh
  414368:	or     DWORD PTR [ebx+0x75],ebx
  41436b:	(bad)  
  41436c:	loopne 0x41436d
  41436e:	outs   dx,DWORD PTR ds:[esi]
  41436f:	icebp  
  414370:	out    dx,al
  414371:	outs   dx,BYTE PTR ds:[esi]
  414372:	ja     0x414373
  414374:	in     eax,dx
  414375:	arpl   WORD PTR [edi+0x46],bx
  414378:	in     eax,0x6b
  41437a:	jne    0x4143b1
  41437c:	add    al,0x71
  41437e:	jae    0x4143b5
  414380:	out    dx,al
  414381:	ins    DWORD PTR es:[edi],dx
  414382:	popa   
  414383:	cmp    eax,0x41765ad9
  414388:	loopne 0x4143fa
  41438a:	gs push eax
  41438c:	in     eax,0x73
  41438e:	jo     0x41440a
  414390:	retf   0x2c
  414393:	cmp    al,ch
  414395:	jae    0x414407
  414397:	mov    cl,dl
  414399:	sub    al,0x0
  41439b:	push   0x637073f3
  4143a0:	cdq    
  4143a1:	sub    al,0x2f
  4143a3:	cmp    DWORD PTR [ecx+0x6a9e454d],ebx
  4143a9:	es ins BYTE PTR es:[edi],dx
  4143ab:	pushf  
  4143ac:	gs inc edx
  4143ae:	push   0x6320baab
  4143b3:	cmp    DWORD PTR [ebp+0x6a8b6842],edx
  4143b9:	and    BYTE PTR [edi-0x74],ah
  4143bc:	xchg   esp,eax
  4143bd:	add    DWORD PTR [edx+edi*2-0x6f],ebx
  4143c1:	das    
  4143c2:	ins    DWORD PTR es:[edi],dx
  4143c3:	fs jl  0x414417
  4143c6:	ins    BYTE PTR es:[edi],dx
  4143c7:	xchg   BYTE PTR fs:[ecx],al
  4143ca:	push   ecx
  4143cb:	add    BYTE PTR [esi+0x7b],dl
  4143ce:	xor    eax,0x28275875
  4143d3:	pop    esp
  4143d4:	jp     0x414357
  4143d6:	das    
  4143d7:	ins    DWORD PTR es:[edi],dx
  4143d8:	pop    esp
  4143d9:	test   BYTE PTR [ecx+0x6c],dl
  4143dc:	dec    esp
  4143dd:	inc    esi
  4143de:	add    al,0x47
  4143e0:	dec    edi
  4143e1:	inc    esi
  4143e2:	cmp    BYTE PTR [edi+0x25],bl
  4143e5:	inc    ebp
  4143e6:	dec    ebp
  4143e7:	inc    esp
  4143e8:	and    BYTE PTR [edi+0x4],al
  4143eb:	pop    esp
  4143ec:	sti    
  4143ed:	out    0x1c,al
  4143ef:	imul   edx,DWORD PTR [eax],0xfffffff4
  4143f2:	push   ds
  4143f3:	add    ch,dh
  4143f5:	loop   0x414411
  4143f7:	popa   
  4143f8:	and    edi,esp
  4143fa:	sbb    al,0x6b
  4143fc:	sbb    al,0x99
  4143fe:	dec    ebp
  4143ff:	inc    ecx
  414400:	push   cs
  414401:	cld    
  414402:	sbb    al,0x64
  414404:	out    0x98,al
  414406:	dec    ebp
  414407:	push   edx
  414408:	fdivrp st(5),st
  41440a:	sbb    BYTE PTR [ebx-0x24],cl
  41440d:	adc    al,0x38
  41440f:	add    dl,dh
  414411:	mov    ebx,0xfbe56340
  414416:	sbb    al,0x6e
  414418:	cmp    ebp,edi
  41441a:	cmp    BYTE PTR [ebx],ch
  41441c:	hlt    
  41441d:	dec    ebx
  41441f:	pop    ds
  414420:	ficomp DWORD PTR [edx]
  414422:	int    0x3
  414424:	xchg   ebp,eax
  414425:	push   eax
  414426:	fstp   DWORD PTR [esi]
  414428:	xchg   edi,eax
  414429:	pop    ss
  41442a:	mov    ebx,0xac00a828
  41442f:	xor    eax,DWORD PTR [eax]
  414431:	xchg   esi,eax
  414432:	sbb    eax,0x307a4fe7
  414437:	shl    BYTE PTR [edx],0x6d
  41443a:	inc    ebx
  41443b:	mov    bh,0x1c
  41443d:	cwde   
  41443e:	add    BYTE PTR [edx-0x7adda1c9],bh
  414444:	loopne 0x4144c2
  414446:	push   esp
  414447:	mov    bh,0x3
  414449:	push   0x68289317
  41444e:	fimul  DWORD PTR [edi-0x64ffa9e3]
  414454:	push   edx
  414455:	pop    esi
  414456:	xor    al,0x8c
  414458:	xor    bh,BYTE PTR [ecx]
  41445a:	dec    esp
  41445b:	xchg   ebp,eax
  41445c:	sbb    al,0x48
  41445e:	pop    ss
  41445f:	dec    edx
  414460:	sbb    eax,0x272be052
  414465:	sbb    eax,0x5f044817
  41446a:	and    dl,BYTE PTR [ebx+0x34]
  41446d:	cmp    DWORD PTR [ebp-0x19],ecx
  414470:	cmp    DWORD PTR es:[edi+eiz*8],esi
  414474:	aaa    
  414475:	cmp    DWORD PTR [edi],edx
  414477:	out    0x1d,eax
  414479:	cmp    DWORD PTR [ecx],esp
  41447b:	out    0x30,eax
  41447d:	cmp    DWORD PTR [eax],eax
  41447f:	out    0x4f,eax
  414481:	hlt    
  414482:	sbb    ecx,DWORD PTR [esi]
  414484:	and    dl,BYTE PTR [esi]
  414486:	sbb    al,0xc7
  414488:	inc    edi
  414489:	fdiv   QWORD PTR [eax]
  41448b:	std    
  41448c:	pop    ds
  41448d:	aam    0x1e
  41448f:	or     esp,DWORD PTR [edi]
  414491:	jmp    0x414492
  414493:	sbb    DWORD PTR [edi],edi
  414495:	add    BYTE PTR [edi],ah
  414497:	pop    ds
  414498:	add    bl,bh
  41449a:	sbb    DWORD PTR [eax],ebx
  41449c:	add    BYTE PTR [edi],ah
  41449e:	or     ebx,DWORD PTR ds:0x53f4d171
  4144a4:	push   eax
  4144a5:	jmp    0xaf8c94be
  4144aa:	cmp    bh,BYTE PTR [esi]
  4144ac:	ins    BYTE PTR es:[edi],dx
  4144ad:	enter  0x1d50,0x46
  4144b1:	mov    ebp,0xd071006a
  4144b6:	dec    esi
  4144b7:	sbb    eax,0x345bcd2e
  4144bc:	add    BYTE PTR [ebp-0x468bd0a5],bl
  4144c2:	pop    ebx
  4144c3:	das    
  4144c4:	jno    0x41445c
  4144c6:	push   ebp
  4144c7:	cs fs jmp 0x95b28dfc
  4144ce:	jnp    0x4144f4
  4144d0:	fs jnp 0x4144ea
  4144d3:	das    
  4144d4:	jno    0x4144bf
  4144d6:	push   ss
  4144d7:	dec    ecx
  4144d8:	jno    0x414557
  4144da:	addr16 das 
  4144dc:	arpl   WORD PTR [ebx+0x3a],di
  4144df:	cmp    al,0x5f
  4144e1:	pop    edx
  4144e2:	add    DWORD PTR [eax+0x6d],edx
  4144e5:	pop    ebx
  4144e6:	jno    0x4144e8
  4144e8:	push   ecx
  4144e9:	inc    esi
  4144ea:	push   edi
  4144eb:	xor    al,0x75
  4144ed:	dec    eax
  4144ee:	imul   ebx,DWORD PTR ds:0x49592f5c,0x71
  4144f5:	push   ecx
  4144f6:	in     eax,dx
  4144f7:	sbb    al,0x5f
  4144f9:	inc    edx
  4144fa:	add    cl,ch
  4144fc:	cmp    eax,0x1d53486c
  414501:	inc    esi
  414502:	sbb    eax,0x4514c45
  414507:	xor    DWORD PTR [edi+eiz*2],esi
  41450a:	pop    es
  41450b:	adc    al,0x2f
  41450d:	add    BYTE PTR ds:0x5f1bfb,ch
  414513:	cmp    ah,cl
  414515:	inc    ebp
  414516:	je     0x414568
  414518:	cld    
  414519:	sub    eax,0x85066
  41451e:	inc    esi
  41451f:	sub    al,0x54
  414521:	daa    
  414522:	sub    esp,DWORD PTR [esi]
  414524:	inc    eax
  414525:	outs   dx,BYTE PTR gs:[esi]
  414527:	or     edi,DWORD PTR [eax]
  414529:	outs   dx,DWORD PTR ds:[esi]
  41452a:	push   0x5c6c07fd
  41452f:	out    0xf3,eax
  414531:	pusha  
  414532:	outs   dx,BYTE PTR ds:[esi]
  414533:	aam    0xe0
  414535:	push   0x6d
  414537:	add    eax,0x20646de3
  41453c:	cmp    eax,0x53ac466b
  414541:	add    BYTE PTR [ebx-0x59],al
  414544:	add    eax,0xefc3656e
  414549:	outs   dx,DWORD PTR fs:[esi]
  41454b:	mov    dh,0xf0
  41454d:	sub    eax,0xffefc874
  414552:	xor    cl,BYTE PTR [esi+eax*8+0x3b05443]
  414559:	outs   dx,DWORD PTR ds:[esi]
  41455a:	imul   ecx,DWORD PTR [esi+ebx*8+0x6e],0x5b9002e
  414562:	add    BYTE PTR gs:[edi+ebp*4+0x41],dh
  414567:	sub    eax,0x50505e
  41456c:	fs dec edi
  41456e:	gs je  0x41456e
  414571:	aas    
  414572:	popa   
  414573:	jae    0x41457e
  414575:	jecxz  0x4145e4
  414577:	gs push edx
  414579:	cld    
  41457a:	dec    esi
  41457b:	dec    edi
  41457c:	pop    esi
  41457d:	push   eax
  41457e:	push   ebx
  41457f:	inc    ecx
  414580:	and    al,BYTE PTR [ecx+0x5c]
  414583:	inc    ebx
  414584:	and    al,0xdd
  414586:	outs   dx,BYTE PTR ds:[esi]
  414587:	jae    0x4145c6
  414589:	out    dx,eax
  41458a:	pop    ebx
  41458b:	push   esp
  41458c:	cmp    DWORD PTR [eax],edx
  41458e:	xor    al,0x63
  414590:	cmc    
  414591:	jmp    DWORD PTR ds:0xead6e25c
  414597:	das    
  414598:	or     eax,0x1138466a
  41459d:	mov    esp,0x6aff363f
  4145a2:	fsubr  DWORD PTR [esi]
  4145a4:	or     DWORD PTR [eax],ecx
  4145a6:	inc    ebx
  4145a7:	sub    edi,DWORD PTR [eax+0xa]
  4145aa:	inc    ebp
  4145ab:	aaa    
  4145ac:	pop    esp
  4145ad:	or     esp,ebp
  4145af:	das    
  4145b0:	imul   ecx,DWORD PTR [ebx],0xa5773246
  4145b6:	in     al,dx
  4145b7:	inc    ebp
  4145b8:	jnp    0x41461e
  4145ba:	inc    ebp
  4145bb:	das    
  4145bc:	pop    edi
  4145bd:	stos   DWORD PTR es:[edi],eax
  4145be:	inc    ebp
  4145bf:	xor    BYTE PTR [ebp+0x6e],ah
  4145c2:	sbb    al,0x6e
  4145c4:	add    BYTE PTR [edx-0x35],cl
  4145c7:	add    DWORD PTR [ebx+0x58],eax
  4145ca:	mov    ch,BYTE PTR [esi+eax*2]
  4145cd:	test   DWORD PTR [ecx+0x1],ebp
  4145d0:	pop    esp
  4145d1:	ja     0x41464f
  4145d3:	sub    eax,0x242b5851
  4145d8:	outs   dx,BYTE PTR ds:[esi]
  4145d9:	pop    esi
  4145da:	cdq    
  4145db:	xlat   BYTE PTR ds:[ebx]
  4145dc:	ja     0x414635
  4145de:	sub    DWORD PTR [ecx],eax
  4145e0:	cs dec ebx
  4145e2:	jge    0x414615
  4145e4:	add    BYTE PTR [ebp-0x2c],ah
  4145e7:	push   ebp
  4145e8:	dec    ebx
  4145e9:	or     ch,bl
  4145eb:	push   ecx
  4145ec:	sub    eax,0x5f319963
  4145f1:	sub    cl,BYTE PTR [edx+0x31]
  4145f4:	ins    DWORD PTR es:[edi],dx
  4145f5:	sub    esi,DWORD PTR ds:0x34832e4
  4145fb:	cmp    bh,BYTE PTR es:[ecx]
  4145fe:	in     al,0x34
  414600:	arpl   WORD PTR [ebx],cx
  414602:	out    0x22,eax
  414604:	imul   edx,DWORD PTR [eax+eax*1],0xffffffe1
  414608:	xor    eax,DWORD PTR ss:[eax]
  41460b:	add    eax,0xc713dd31
  414610:	and    al,0xdd
  414612:	sbb    ebx,DWORD PTR [ecx]
  414614:	and    eax,ebp
  414616:	xor    al,cl
  414618:	adc    eax,DWORD PTR ss:[eax]
  41461b:	int    0x3
  41461d:	in     eax,0x3c
  41461f:	sbb    DWORD PTR [ecx],edi
  414621:	call   0x3f1c5b77
  414626:	cmp    al,0xbb
  414628:	push   ebx
  414629:	add    BYTE PTR [ecx+0x36],bl
  41462c:	into   
  41462d:	xor    bh,BYTE PTR [ecx]
  41462f:	ds mov ebx,0xd6157753
  414635:	add    ebp,DWORD PTR [eax-0x77df44e9]
  41463b:	(bad)  
  41463c:	mov    esi,0x9a009d18
  414641:	cmp    bh,BYTE PTR [edi+0x4c]
  414644:	xchg   esi,eax
  414645:	inc    esp
  414646:	imul   edi,DWORD PTR [ebx],0xffffffc3
  414649:	push   ebp
  41464a:	and    cl,BYTE PTR fs:[esi-0x48b38b28]
  414651:	jecxz  0x41467c
  414653:	(bad)  
  414654:	aad    0x47
  414656:	mov    BYTE PTR [ecx],ah
  414658:	jns    0x414676
  41465a:	dec    ecx
  41465b:	sub    al,0x7a
  41465d:	add    ebp,DWORD PTR [eax+0x35]
  414660:	lods   eax,DWORD PTR ds:[esi]
  414661:	dec    edi
  414662:	ins    BYTE PTR es:[edi],dx
  414663:	aas    
  414664:	cdq    
  414665:	inc    eax
  414666:	pop    ebp
  414667:	push   edx
  414668:	push   esi
  414669:	es and al,0xd3
  41466c:	and    al,0x50
  41466e:	or     eax,esp
  414670:	sbb    edx,ebx
  414672:	ins    DWORD PTR es:[edi],dx
  414673:	inc    esp
  414674:	and    eax,0x4c510950
  414679:	bndstx ss:[ecx],(bad)
  41467d:	xor    eax,0x1d003e39
  414682:	in     eax,dx
  414683:	fild   WORD PTR [eax+0x3e]
  414686:	dec    esi
  414687:	push   ss
  414688:	je     0x414673
  41468a:	clc    
  41468b:	dec    ebx
  41468c:	push   eax
  41468d:	leave  
  41468e:	add    al,bh
  414690:	sbb    al,0x6c
  414692:	or     al,0x86
  414694:	and    DWORD PTR [eax],eax
  414696:	cmp    DWORD PTR [edx],ebx
  414698:	das    
  414699:	jno    0x414699
  41469b:	xor    DWORD PTR [edx],esi
  41469d:	fs jmp 0xffb36788
  4146a3:	daa    
  4146a4:	xor    cl,BYTE PTR [esi+0x8]
  4146a7:	and    DWORD PTR es:[eax],eax
  4146aa:	mov    esp,0xb072216d
  4146af:	outs   dx,BYTE PTR ds:[esi]
  4146b0:	add    BYTE PTR [edi-0x39],al
  4146b3:	inc    ebx
  4146b4:	sub    al,0x67
  4146b6:	enter  0x3c46,0x67
  4146ba:	mov    ebx,0xce741f37
  4146bf:	inc    esp
  4146c0:	sub    eax,0x32219900
  4146c5:	je     0x414666
  4146c7:	dec    edi
  4146c8:	sbb    DWORD PTR [edx-0x74],esp
  4146cb:	sub    al,0x0
  4146cd:	push   ecx
  4146ce:	test   BYTE PTR [esi+ebp*1],ah
  4146d1:	arpl   WORD PTR [ebx-0x7b8fd28a],bx
  4146d7:	cmp    dl,BYTE PTR [eax]
  4146d9:	add    cl,ch
  4146db:	cmp    dh,BYTE PTR [esi+0x45]
  4146de:	test   al,0x3a
  4146e0:	sbb    ah,BYTE PTR [ebx+0x58]
  4146e3:	push   ds
  4146e4:	and    eax,0x6ae19d45
  4146e9:	xlat   BYTE PTR ds:[ebx]
  4146ea:	out    dx,al
  4146eb:	sbb    ch,BYTE PTR [eax+0x3958bae3]
  4146f1:	push   edi
  4146f2:	jmp    0x3313f2f7
  4146f7:	jmp    DWORD PTR [ebp+ebp*8-0x506cffd3]
  4146fe:	std    
  4146ff:	das    
  414700:	mov    bh,dh
  414702:	pop    es
  414703:	sub    edx,DWORD PTR [esi-0x68fafeff]
  414709:	sti    
  41470a:	(bad)  
  41470b:	push   DWORD PTR [ebx]
  41470d:	pop    es
  41470e:	data16 je 0x414758
  414711:	loope  0x414784
  414713:	gs sub al,0xe8
  414716:	outs   dx,BYTE PTR fs:[esi]
  414718:	xor    ebx,ebp
  41471a:	inc    ebp
  41471b:	push   esp
  41471c:	xor    BYTE PTR [eax],bh
  41471e:	dec    edi
  41471f:	imul   eax,DWORD PTR [ebp+eax*1+0x20],0x5d0a314d
  414727:	addr16 xor eax,0xf47ffee
  41472d:	in     eax,dx
  41472e:	jae    0x414730
  414730:	in     eax,0xec
  414732:	pusha  
  414733:	jb     0x414745
  414735:	push   eax
  414736:	pop    ebp
  414737:	jae    0x41473c
  414739:	add    BYTE PTR [eax+0x6f],dl
  41473c:	rcl    bl,cl
  41473e:	call   DWORD PTR [ecx-0xb]
  414741:	or     ch,BYTE PTR [ebx+0x74]
  414744:	cmc    
  414745:	lahf   
  414746:	inc    ecx
  414747:	imul   eax,edx,0x99435bff
  41474d:	frstor [eax+0x72]
  414750:	mov    ah,0xd2
  414752:	pop    esi
  414753:	imul   edx,eax,0xffffffc9
  414756:	popa   
  414757:	jne    0x414759
  414759:	mov    bl,0x4
  41475b:	add    BYTE PTR [ebp+0x53],dh
  41475e:	add    dh,BYTE PTR [edx+0x2e]
  414761:	ret    
  414762:	or     BYTE PTR [esi+0x66],ch
  414765:	mov    ecx,0x433bffe0
  41476a:	add    dh,BYTE PTR [esp+esi*2+0x9]
  41476e:	or     ah,BYTE PTR [ebx+0x20]
  414771:	(bad)  
  414772:	fsubr  QWORD PTR [eax+0x65]
  414775:	cmp    DWORD PTR [edx+eiz*8],ecx
  414778:	call   FWORD PTR [eax-0x67]
  41477b:	sub    ebx,DWORD PTR [edi+0x25]
  41477e:	in     al,0x1e
  414780:	cmp    ebx,DWORD PTR [ebx-0x67]
  414783:	push   edx
  414784:	ins    DWORD PTR es:[edi],dx
  414785:	pop    ds
  414786:	in     eax,0x2c
  414788:	pop    edi
  414789:	or     edi,DWORD PTR [eax+ecx*2]
  41478c:	push   ecx
  41478d:	loopne 0x41479a
  41478f:	adc    eax,0x2ff8056e
  414794:	push   0x5047fbd8
  414799:	in     al,0xec
  41479b:	dec    edi
  41479c:	push   edi
  41479d:	cmc    
  41479e:	add    eax,0xfca711f
  4147a3:	adc    eax,0x3998ca6e
  4147a8:	ins    DWORD PTR es:[edi],dx
  4147a9:	retf   0x33ac
  4147ac:	pop    edi
  4147ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ae:	mov    ah,0x1
  4147b0:	push   ebx
  4147b1:	stos   BYTE PTR es:[edi],al
  4147b2:	mov    esp,0xbc984e2f
  4147b7:	and    BYTE PTR [eax],al
  4147b9:	mov    DWORD PTR [eax-0x71ff8ece],edi
  4147bf:	retf   0x642f
  4147c2:	cmp    DWORD PTR [ecx+0x5b8d7216],ecx
  4147c8:	xor    BYTE PTR [ebx-0x65],ch
  4147cb:	mov    esp,0x748d002f
  4147d0:	das    
  4147d1:	imul   esp,DWORD PTR [eax+0x73],0x24
  4147d5:	ins    BYTE PTR es:[edi],dx
  4147d6:	lea    edx,[eax-0x7cc69ccf]
  4147dc:	xor    DWORD PTR [eax+0x7f],esi
  4147df:	test   DWORD PTR [ecx+0x2e],edx
  4147e2:	push   ecx
  4147e3:	je     0x4147fa
  4147e5:	add    BYTE PTR [ebp+0x5b],ah
  4147e8:	push   ss
  4147e9:	je     0x41483f
  4147eb:	sub    DWORD PTR [esp+eiz*2],esp
  4147ee:	bound  eax,QWORD PTR [eax]
  4147f0:	adc    al,BYTE PTR [eax+ecx*1]
  4147f3:	adc    eax,DWORD PTR [ebp+0x30]
  4147f6:	sub    al,0x21
  4147f8:	pop    ecx
  4147f9:	and    ebp,edi
  4147fb:	ds ds push ds
  4147fe:	pop    ds
  4147ff:	sbb    eax,0x300a434c
  414804:	pop    es
  414805:	push   ebx
  414806:	adc    al,0x1a
  414808:	cmp    ebp,DWORD PTR [edi]
  41480a:	fisubr WORD PTR ds:0x4bff0444
  414810:	aaa    
  414811:	in     al,0xda
  414813:	sbb    al,0x1a
  414815:	xor    dh,bl
  414817:	adc    DWORD PTR [eax],ecx
  414819:	xor    dh,dl
  41481b:	adc    bh,ch
  41481d:	jecxz  0x4147e8
  41481f:	sbb    al,0xf9
  414821:	sub    eax,0xe72dda00
  414826:	cmp    eax,0x1fc74fed
  41482b:	fisubr DWORD PTR [esi]
  41482d:	repz sbb al,0xa7
  414830:	pop    ds
  414831:	fistp  DWORD PTR [esp+ebx*4]
  414834:	adc    al,BYTE PTR [edi]
  414836:	xor    DWORD PTR [eax+0x7703d91b],ebp
  41483c:	dec    esp
  41483d:	mov    bh,0xe3
  41483f:	call   0xc812:0x962fba1b
  414846:	das    
  414847:	sahf   
  414848:	adc    ebp,eax
  41484a:	jecxz  0x4147da
  41484c:	pop    ds
  41484d:	mov    edx,0x99116c32
  414852:	pop    ds
  414853:	cmp    DWORD PTR [edx],edi
  414855:	mov    bl,0x53
  414857:	sbb    DWORD PTR [esp+ecx*4],ebx
  41485a:	xor    ah,BYTE PTR [ebp+0x17]
  41485d:	jge    0x414883
  41485f:	dec    ebp
  414860:	pop    ss
  414861:	xchg   esi,eax
  414862:	adc    eax,0x318e3019
  414867:	dec    ebp
  414868:	add    BYTE PTR [eax],al
  41486a:	scas   eax,DWORD PTR es:[edi]
  41486b:	outs   dx,BYTE PTR ds:[esi]
  41486c:	push   eax
  41486d:	and    BYTE PTR [ebp+0x50742f59],al
  414873:	inc    edi
  414874:	inc    ecx
  414875:	je     0x4148c7
  414877:	dec    esp
  414878:	adc    ah,BYTE PTR [eax]
  41487a:	dec    edx
  41487b:	pop    edx
  41487c:	sub    al,0x5f
  41487e:	cmp    eax,0x2f001b2c
  414883:	jmp    0x7a68d7
  414888:	dec    ebx
  414889:	adc    esp,DWORD PTR [esi+0x40]
  41488c:	and    DWORD PTR ds:0x4c34e971,ebx
  414892:	push   eax
  414893:	cmp    cl,BYTE PTR [ebp+0x1d]
  414896:	ins    BYTE PTR es:[edi],dx
  414897:	or     eax,0x19741a3d
  41489c:	sub    BYTE PTR [eax],bl
  41489e:	arpl   bp,di
  4148a0:	shl    BYTE PTR cs:[ebp-0x6],cl
  4148a4:	xor    eax,DWORD PTR [eax]
  4148a6:	push   ecx
  4148a7:	push   cs
  4148a8:	daa    
  4148a9:	sub    al,0x75
  4148ab:	or     BYTE PTR [ebx],cl
  4148ad:	sbb    eax,0x4f7a1c5c
  4148b2:	sub    edi,DWORD PTR [edx-0x428be5bb]
  4148b8:	fs dec esp
  4148ba:	push   eax
  4148bb:	mov    al,ds:0xad6d1a44
  4148c0:	imul   ebx,DWORD PTR ds:0x4abc74,0x4156c844
  4148ca:	inc    esp
  4148cb:	ror    BYTE PTR [eax+0x0],0x5c
  4148cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d0:	xchg   BYTE PTR [eax+0x47],dl
  4148d3:	xchg   edi,eax
  4148d4:	dec    esp
  4148d5:	adc    eax,DWORD PTR [eax]
  4148d7:	mov    edx,0x8c762e47
  4148dc:	sub    BYTE PTR [edi+eiz*2],dh
  4148df:	call   0x8a5:0x77d226
  4148e6:	add    BYTE PTR [esi-0x43],cl
  4148e9:	aam    0x70
  4148eb:	jae    0x4148ed
  4148ed:	mov    es,WORD PTR ds:0x2a0656c
  4148f3:	je     0x414965
  4148f5:	adc    eax,DWORD PTR ds:0x5366574
  4148fb:	outs   dx,BYTE PTR ds:[esi]
  4148fc:	imul   edx,DWORD PTR [eax-0x138ca31e],0xe66f744e
  414906:	add    BYTE PTR [eax],ah
  414908:	inc    edx
  414909:	inc    edx
  41490a:	or     esi,DWORD PTR [ebx+0x73]
  41490d:	in     eax,dx
  41490e:	in     eax,dx
  41490f:	inc    DWORD PTR [ebp+0x4c]
  414912:	dec    esp
  414913:	dec    esp
  414914:	imul   edx,DWORD PTR [ebx-0x10],0xfc32642d
  41491b:	pop    ebx
  41491c:	dec    ebp
  41491d:	xor    esp,ebp
  41491f:	imul   esp,DWORD PTR [ebp+0x13],0xfffffff0
  414923:	jo     0x414989
  414925:	sub    DWORD PTR [ebx],ecx
  414927:	pop    esp
  414928:	inc    ebx
  414929:	sub    dh,ch
  41492b:	push   0x6d
  41492d:	sub    eax,0x33756c4c
  414932:	add    al,0x27
  414934:	inc    eax
  414935:	loopne 0x41493a
  414937:	mov    edi,0x6103d044
  41493c:	inc    esi
  41493d:	rol    BYTE PTR [ebx],1
  41493f:	pop    ebx
  414940:	dec    edx
  414941:	loopne 0x414946
  414943:	ror    DWORD PTR [ebp-0x20],cl
  414946:	add    edi,ebp
  414948:	dec    edi
  414949:	rol    BYTE PTR [ebx],1
  41494b:	fist   DWORD PTR [eax+edx*8+0x3]
  41494f:	aam    0x55
  414951:	add    BYTE PTR [eax-0x5fa921fd],ah
  414957:	add    ebx,DWORD PTR [ecx+0x58]
  41495a:	nop
  41495b:	add    ebx,DWORD PTR [eax]
  41495d:	pop    ecx
  41495e:	cmp    DWORD PTR [ecx+0x1],ebp
  414961:	pop    ebp
  414962:	jb     0x4149cd
  414964:	add    eax,esp
  414966:	ins    BYTE PTR es:[edi],dx
  414967:	imul   eax,DWORD PTR [ecx],0x1695972
  41496d:	daa    
  41496e:	pop    edx
  41496f:	imul   eax,DWORD PTR [ecx],0x1691ab4
  414975:	in     eax,dx
  414976:	sbb    ch,cl
  414978:	add    esp,DWORD PTR [edi+0x1d]
  41497b:	jmp    0xe9573483
  414980:	add    esi,eax
  414982:	pop    ds
  414983:	jmp    0xe957688b
  414988:	add    edx,DWORD PTR [ecx+0x6903e913]
  41498e:	or     al,0xe9
  414990:	add    edx,DWORD PTR [esi-0x6dfc171a]
  414996:	jmp    0xe88d4d83
  41499b:	call   0xe92c92a3
  4149a0:	add    esi,DWORD PTR [ebp-0x33]
  4149a3:	call   0xe91261ab
  4149a8:	add    ebx,DWORD PTR [edi-0x3f]
  4149ab:	call   0xe90310b3
  4149b0:	add    ebx,DWORD PTR [edx+esi*4]
  4149b3:	jmp    0xb241acbb
  4149b8:	imul   eax,DWORD PTR [ecx],0x168bf49
  4149be:	push   ebp
  4149bf:	mov    al,0x68
  4149c1:	add    DWORD PTR ds:0xda0168c3,esp
  4149c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c8:	push   0x68ae5f01
  4149cd:	add    DWORD PTR ds:0x9e0168a1,edx
  4149d3:	shr    DWORD PTR [eax+0x1],1
  4149d6:	and    edx,eax
  4149d8:	jmp    DWORD PTR [esi-0x58876afd]
  4149de:	add    esp,DWORD PTR [ecx]
  4149e0:	jp     0x414989
  4149e2:	add    esi,ebx
  4149e4:	jns    0x41498d
  4149e6:	add    esi,DWORD PTR [ecx+0x7b]
  4149e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ea:	add    ecx,DWORD PTR [ebx-0x2dfc5886]
  4149f0:	jp     0x414999
  4149f2:	add    ebp,DWORD PTR [edx+0x64]
  4149f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149f6:	add    edi,DWORD PTR [ebp+0x68]
  4149f9:	daa    
  4149fa:	add    al,0xa2
  4149fc:	push   0x5ab10427
  414a01:	daa    
  414a02:	add    al,0xce
  414a04:	pop    edx
  414a05:	daa    
  414a06:	add    al,0xa3
  414a08:	pop    edx
  414a09:	daa    
  414a0a:	add    al,0xa
  414a0c:	pop    esp
  414a0d:	daa    
  414a0e:	add    al,0xd7
  414a10:	pop    ebx
  414a11:	daa    
  414a12:	add    al,0x8c
  414a14:	pop    ebx
  414a15:	daa    
  414a16:	add    al,0x41
  414a18:	pop    ebp
  414a19:	daa    
  414a1a:	add    al,0x0
  414a1c:	ficomp WORD PTR [edi+eiz*1+0x4]
  414a20:	neg    DWORD PTR [ebp+0x27]
  414a23:	add    al,0x69
  414a25:	pop    ebp
  414a26:	daa    
  414a27:	add    al,0xa3
  414a29:	mov    edi,0xc1180427
  414a2e:	daa    
  414a2f:	add    al,0xda
  414a31:	shl    BYTE PTR [edi],0x4
  414a34:	adc    al,al
  414a36:	daa    
  414a37:	add    al,0x75
  414a39:	shl    DWORD PTR [edi-0x583e24fd],0x3
  414a40:	dec    eax
  414a41:	les    esp,FWORD PTR [edi-0x583c98fd]
  414a47:	add    esp,ecx
  414a49:	ret    
  414a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4b:	add    ebp,DWORD PTR [edx-0x39]
  414a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4f:	add    edx,ebx
  414a51:	mov    DWORD PTR [eax],0xcaf43aa9
  414a57:	test   eax,0xa9cb183a
  414a5c:	cmp    dh,BYTE PTR [eax]
  414a5e:	iret   
  414a5f:	test   eax,0xa9d1373a
  414a64:	cmp    bh,BYTE PTR [eax-0x2d]
  414a67:	test   eax,0xa9d3bd3a
  414a6c:	cmp    dh,BYTE PTR [ecx]
  414a6e:	fsubr  DWORD PTR [ecx-0x562781c6]
  414a74:	cmp    bh,ah
  414a76:	(bad)  
  414a77:	test   eax,0x29d7873a
  414a7c:	cmp    eax,0x29da05
  414a81:	xor    eax,0x3d29da83
  414a86:	add    BYTE PTR [eax],al
  414a88:	jmp    0xe9414ac7
  414a8d:	cmp    al,BYTE PTR [eax]
  414a8f:	add    cl,ch
  414a91:	cmp    al,BYTE PTR [eax]
  414a93:	add    cl,ch
  414a95:	cmp    al,BYTE PTR [eax]
  414a97:	add    cl,ch
  414a99:	cmp    bh,BYTE PTR [edi]
  414a9b:	ins    BYTE PTR es:[edi],dx
  414a9c:	adc    BYTE PTR [esi],bl
  414a9e:	cs je  0x414a6a
  414aa1:	repnz cmp al,0x71
  414aa4:	add    DWORD PTR ds:0x1128542f,edi
  414aaa:	xor    DWORD PTR [ecx-0x2c],edx
  414aad:	repz dec eax
  414aaf:	push   eax
  414ab0:	cs pop es
  414ab2:	xor    al,0x2b
  414ab4:	test   BYTE PTR es:[eax],al
  414ab7:	and    eax,DWORD PTR ds:0xcc78222b
  414abd:	cmp    ah,cl
  414abf:	das    
  414ac0:	sbb    ebx,DWORD PTR [ebp+0x0]
  414ac3:	je     0x414aa0
  414ac5:	das    
  414ac6:	and    DWORD PTR [eax],eax
  414ac8:	mov    esi,0x2e2463
  414acd:	repnz loope 0x414b43
  414ad0:	add    BYTE PTR [ecx],cl
  414ad2:	or     cl,BYTE PTR [ecx]
  414ad4:	or     bl,ch
  414ad6:	or     al,BYTE PTR ds:0x70cfea20
  414adc:	jno    0x414ace
  414ade:	or     eax,0xe5b4200a
  414ae3:	imul   esp,DWORD PTR [eax],0x0
  414ae6:	fldenv [ebp+0xe00202e]
  414aec:	or     cl,BYTE PTR [ecx]
  414aee:	test   eax,0xf0091fe6
  414af3:	in     eax,0x77
  414af5:	imul   esi,DWORD PTR [ebx],0x80091ff5
  414afb:	mov    al,ds:0x9303122
  414b00:	and    BYTE PTR [eax],ah
  414b02:	test   esi,0x9406f73
  414b08:	and    BYTE PTR [edi-0x1b],ch
  414b0b:	lock add al,0xd
  414b0e:	mov    ah,BYTE PTR [eax-0x5c139a9f]
  414b14:	push   es
  414b15:	and    BYTE PTR [ebp-0x4c],al
  414b18:	sbb    eax,0x1fa44000
  414b1d:	and    eax,0x201da643
  414b22:	jo     0x414ac4
  414b24:	sbb    eax,0x60ec1300
  414b29:	ins    BYTE PTR es:[edi],dx
  414b2a:	dec    esp
  414b2b:	inc    ebp
  414b2c:	js     0x414b93
  414b2e:	xor    esi,ebp
  414b30:	jae    0x414b97
  414b32:	adc    DWORD PTR [edi+ebp*2],eax
  414b35:	push   0x336bd045
  414b3a:	repnz xchg ecx,eax
  414b3c:	popa   
  414b3d:	ins    BYTE PTR es:[edi],dx
  414b3e:	or     al,0x0
  414b40:	popa   
  414b41:	js     0x414b43
  414b43:	in     al,dx
  414b44:	push   0x72
  414b46:	cmp    esp,ecx
  414b48:	adc    ebp,DWORD PTR [esi]
  414b4a:	add    BYTE PTR [ecx+esi*4-0xb95ffda],dl
  414b51:	shr    BYTE PTR [edx],1
  414b53:	inc    esp
  414b54:	or     al,0xd1
  414b56:	aaa    
  414b57:	cmp    DWORD PTR [ecx+0x76390001],ebp
  414b5d:	es inc edi
  414b5f:	push   esp
  414b60:	jns    0x414b88
  414b62:	jb     0x414bce
  414b64:	mov    ch,BYTE PTR [edi]
  414b66:	pop    edi
  414b67:	dec    ebp
  414b68:	mov    WORD PTR [ecx],?
  414b6a:	jb     0x414bcc
  414b6c:	jae    0x414b98
  414b6e:	ins    BYTE PTR es:[edi],dx
  414b6f:	pop    esp
  414b70:	mov    ah,BYTE PTR [esi]
  414b72:	add    BYTE PTR [edx-0x7c],ch
  414b75:	xor    eax,0x13791b61
  414b7a:	addr16 daa 
  414b7c:	sub    BYTE PTR ds:0x44c1e63,0x51
  414b83:	adc    al,0xe6
  414b85:	sub    ebx,DWORD PTR [edi+0x27]
  414b88:	dec    edx
  414b89:	daa    
  414b8a:	dec    esi
  414b8b:	push   ds
  414b8c:	xor    eax,0xf900662b
  414b91:	adc    DWORD PTR [edi+0x7],esp
  414b94:	xor    BYTE PTR [eax],dh
  414b96:	arpl   si,bx
  414b98:	dec    ebx
  414b99:	add    al,0x51
  414b9b:	aam    0xe5
  414b9d:	adc    DWORD PTR [ebx-0x28],esp
  414ba0:	cld    
  414ba1:	es push esp
  414ba3:	into   
  414ba4:	in     eax,dx
  414ba5:	outs   dx,BYTE PTR es:[esi]
  414ba7:	jmp    0xe0b776a2
  414bac:	pushf  
  414bad:	sub    BYTE PTR [ebp+0x0],ah
  414bb0:	fsubr  QWORD PTR [eax+0x7fb6332]
  414bb6:	and    DWORD PTR [ecx-0x54],ebp
  414bb9:	cdq    
  414bba:	xor    DWORD PTR [edx-0x60],esi
  414bbd:	xchg   ebx,eax
  414bbe:	sub    al,0x6c
  414bc0:	pushf  
  414bc1:	add    dh,cl
  414bc3:	sub    BYTE PTR [ecx],bh
  414bc5:	das    
  414bc6:	les    esi,FWORD PTR [ecx]
  414bc8:	call   0xb725:0x8b2edb0f
  414bcf:	adc    DWORD PTR [esi-0x65d02fee],ebx
  414bd5:	and    eax,esp
  414bd7:	add    ecx,DWORD PTR [eax+0x582da025]
  414bdd:	push   cs
  414bde:	les    esp,FWORD PTR [eax+ebp*2]
  414be1:	and    eax,0x144c18b8
  414be6:	mov    BYTE PTR [ebx],dh
  414be8:	dec    ebx
  414be9:	sub    DWORD PTR [ebp-0x79daa2d4],ebx
  414bef:	sub    BYTE PTR [ecx],bh
  414bf1:	das    
  414bf2:	mov    WORD PTR [eax+ecx*2+0xf],es
  414bf6:	nop
  414bf7:	es daa 
  414bf9:	xor    BYTE PTR [ecx+0x2c],bh
  414bfc:	and    ah,BYTE PTR [ecx]
  414bfe:	jns    0x414c1c
  414c00:	or     eax,0xf29522b
  414c05:	xor    BYTE PTR [ecx+0x2d],bl
  414c08:	movaps XMMWORD PTR [ebx+0x29],xmm0
  414c0c:	adc    al,0x25
  414c0e:	out    0x3,eax
  414c10:	cmp    DWORD PTR [eax],eax
  414c12:	out    0x3,eax
  414c14:	add    BYTE PTR [ecx],bh
  414c16:	add    bh,ah
  414c18:	add    edi,DWORD PTR [ecx]
  414c1a:	add    bh,ah
  414c1c:	add    edi,DWORD PTR [ecx]
  414c1e:	add    bh,ah
  414c20:	add    edi,DWORD PTR [ecx]
  414c22:	add    bh,ah
  414c24:	add    edi,DWORD PTR [ecx]
  414c26:	add    bh,ah
  414c28:	add    edi,DWORD PTR [ecx]
  414c2a:	add    bh,ah
  414c2c:	add    edi,DWORD PTR [ecx]
  414c2e:	add    bh,ah
  414c30:	add    edi,DWORD PTR [ecx]
  414c32:	add    bh,ah
  414c34:	add    edi,DWORD PTR [ecx]
  414c36:	add    bh,ah
  414c38:	add    edi,DWORD PTR [ecx]
  414c3a:	add    BYTE PTR [eax],al
  414c3c:	jmp    0xe9414c7b
  414c41:	cmp    al,BYTE PTR [eax]
  414c43:	add    cl,ch
  414c45:	cmp    al,BYTE PTR [eax]
  414c47:	add    cl,ch
  414c49:	cmp    al,BYTE PTR [eax]
  414c4b:	add    cl,ch
  414c4d:	cmp    al,BYTE PTR [eax]
  414c4f:	add    cl,ch
  414c51:	cmp    al,BYTE PTR [eax]
  414c53:	add    cl,ch
  414c55:	cmp    al,BYTE PTR [eax]
  414c57:	add    cl,ch
  414c59:	cmp    al,BYTE PTR [eax]
  414c5b:	add    cl,ch
  414c5d:	cmp    al,BYTE PTR [eax]
  414c5f:	add    cl,ch
  414c61:	cmp    al,BYTE PTR [eax]
  414c63:	add    cl,ch
  414c65:	cmp    al,BYTE PTR [eax]
  414c67:	add    cl,ch
  414c69:	cmp    al,BYTE PTR [eax]
  414c6b:	add    cl,ch
  414c6d:	cmp    al,BYTE PTR [eax]
  414c6f:	add    cl,ch
  414c71:	cmp    al,BYTE PTR [eax]
  414c73:	add    cl,ch
  414c75:	cmp    al,BYTE PTR [eax]
  414c77:	add    cl,ch
  414c79:	add    BYTE PTR [edx],bh
  414c7b:	add    BYTE PTR [eax],al
  414c7d:	jmp    0xe9414cbc
  414c82:	cmp    al,BYTE PTR [eax]
  414c84:	add    cl,ch
  414c86:	cmp    al,BYTE PTR [eax]
  414c88:	add    cl,ch
  414c8a:	cmp    al,BYTE PTR [eax]
  414c8c:	add    cl,ch
  414c8e:	cmp    al,BYTE PTR [eax]
  414c90:	add    cl,ch
  414c92:	cmp    al,BYTE PTR [eax]
  414c94:	add    cl,ch
  414c96:	cmp    al,BYTE PTR [eax]
  414c98:	add    cl,ch
  414c9a:	cmp    al,BYTE PTR [eax]
  414c9c:	add    cl,ch
  414c9e:	cmp    al,BYTE PTR [eax]
  414ca0:	add    cl,ch
  414ca2:	cmp    al,BYTE PTR [eax]
  414ca4:	add    cl,ch
  414ca6:	cmp    al,BYTE PTR [eax]
  414ca8:	add    cl,ch
  414caa:	cmp    al,BYTE PTR [eax]
  414cac:	add    cl,ch
  414cae:	cmp    al,BYTE PTR [eax]
  414cb0:	add    cl,ch
  414cb2:	cmp    al,BYTE PTR [eax]
  414cb4:	add    BYTE PTR [eax],al
  414cb6:	push   eax
  414cb7:	std    
  414cb8:	(bad)  
  414cb9:	jmp    DWORD PTR [eax]
  414cbb:	std    
  414cbc:	(bad)  
  414cbd:	jmp    DWORD PTR [eax]
  414cbf:	std    
  414cc0:	(bad)  
  414cc1:	call   DWORD PTR [eax]
  414cc3:	std    
  414cc4:	(bad)  
  414cc5:	call   DWORD PTR [eax]
  414cc7:	std    
  414cc8:	(bad)  
  414cc9:	jmp    DWORD PTR [eax]
  414ccb:	std    
  414ccc:	(bad)  
  414ccd:	jmp    DWORD PTR [eax]
  414ccf:	std    
  414cd0:	(bad)  
  414cd1:	call   DWORD PTR [eax]
  414cd3:	std    
  414cd4:	(bad)  
  414cd5:	call   DWORD PTR [eax]
  414cd7:	std    
  414cd8:	(bad)  
  414cd9:	jmp    eax
  414cdb:	cld    
  414cdc:	(bad)  
  414cdd:	inc    DWORD PTR [eax]
  414cdf:	loopne 0x414cdd
  414ce1:	(bad)  
  414ce2:	call   eax
  414ce4:	cld    
  414ce5:	(bad)  
  414ce6:	call   eax
  414ce8:	cld    
  414ce9:	(bad)  
  414cea:	jmp    eax
  414cec:	cld    
  414ced:	(bad)  
  414cee:	jmp    eax
  414cf0:	cld    
  414cf1:	(bad)  
  414cf2:	call   eax
  414cf4:	cld    
  414cf5:	(bad)  
  414cf6:	call   eax
  414cf8:	cld    
  414cf9:	(bad)  
  414cfa:	jmp    DWORD PTR [eax-0x5f000004]
  414d00:	cld    
  414d01:	(bad)  
  414d02:	call   DWORD PTR [eax-0x6f000004]
  414d08:	cld    
  414d09:	(bad)  
  414d0a:	jmp    DWORD PTR [eax-0x5f000004]
  414d10:	cld    
  414d11:	(bad)  
  414d12:	call   DWORD PTR [eax-0x6f000004]
  414d18:	cld    
  414d19:	(bad)  
  414d1a:	jmp    DWORD PTR [eax-0x4]
  414d1d:	(bad)  
  414d1e:	jmp    DWORD PTR [eax-0x4]
  414d21:	(bad)  
  414d22:	call   DWORD PTR [eax-0x4]
  414d25:	(bad)  
  414d26:	call   DWORD PTR [eax-0x4]
  414d29:	(bad)  
  414d2a:	jmp    DWORD PTR [eax-0x4]
  414d2d:	(bad)  
  414d2e:	(bad)  
  414d2f:	cmp    DWORD PTR [edi-0x58c6ffff],esp
  414d35:	add    DWORD PTR [eax],eax
  414d37:	cmp    DWORD PTR [edi-0x56c6ffff],esp
  414d3d:	add    DWORD PTR [eax],eax
  414d3f:	cmp    DWORD PTR [ecx+0x39000001],ebp
  414d45:	test   eax,0xa9390001
  414d4a:	add    DWORD PTR [eax],eax
  414d4c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d52:	add    DWORD PTR [eax],eax
  414d54:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d5a:	add    DWORD PTR [eax],eax
  414d5c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d62:	add    DWORD PTR [eax],eax
  414d64:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d6a:	add    DWORD PTR [eax],eax
  414d6c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d72:	add    DWORD PTR [eax],eax
  414d74:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d7a:	add    DWORD PTR [eax],eax
  414d7c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d82:	add    DWORD PTR [eax],eax
  414d84:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d8a:	add    DWORD PTR [eax],eax
  414d8c:	cmp    DWORD PTR [ecx-0x56c6ffff],ebp
  414d92:	add    DWORD PTR [eax],eax
  414d94:	cmp    DWORD PTR [ecx-0x57c6ffff],ebp
  414d9a:	out    0x42,al
  414d9c:	fimul  WORD PTR [edi]
  414d9e:	ins    DWORD PTR es:[edi],dx
  414d9f:	retf   
  414da0:	pop    esi
  414da1:	dec    edi
  414da2:	mov    eax,0x2fcfc1ba
  414da7:	xor    al,BYTE PTR [eax]
  414da9:	dec    ecx
  414daa:	add    BYTE PTR [eax+0x6f],dh
  414dad:	and    BYTE PTR [edi+0x1efbe6e8],0x67
  414db4:	add    al,0xf9
  414db6:	inc    esi
  414db8:	add    ebp,DWORD PTR [ecx]
  414dba:	add    bh,ch
  414dbc:	add    edi,DWORD PTR ds:0x2e03e900
  414dc2:	xchg   edi,eax
  414dc3:	out    0x3,eax
  414dc5:	mov    ecx,0x7903e6ff
  414dca:	add    bh,ah
  414dcc:	add    ebx,DWORD PTR [ecx+0x0]
  414dcf:	out    0x3,eax
  414dd1:	sub    DWORD PTR [eax],eax
  414dd3:	out    0x3,eax
  414dd5:	xor    DWORD PTR [eax],eax
  414dd7:	out    0x3,eax
  414dd9:	xor    eax,0x3b03e700
  414dde:	add    bh,ah
  414de0:	add    ebp,esi
  414de2:	xchg   esi,eax
  414de3:	out    0x83,eax
  414de5:	cmp    DWORD PTR [eax],eax
  414de7:	out    0x43,eax
  414de9:	cmp    DWORD PTR [eax],eax
  414deb:	out    0xe3,eax
  414ded:	(bad)  
  414dee:	xchg   esi,eax
  414def:	out    0xf3,eax
  414df1:	into   
  414df2:	xchg   esi,eax
  414df3:	out    0xb,eax
  414df5:	cmp    DWORD PTR [eax],eax
  414df7:	out    0xff,eax
  414df9:	mov    esi,0x3905e796
  414dfe:	add    bh,ah
  414e00:	add    al,0x39
  414e02:	add    BYTE PTR [edi+0x4],ah
  414e05:	cmp    DWORD PTR [eax],eax
  414e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e08:	add    edi,DWORD PTR [ecx]
  414e0a:	add    BYTE PTR [edi],al
  414e0c:	add    al,0x0
  414e0e:	cmp    DWORD PTR [eax],eax
  414e10:	test   DWORD PTR [ebx],0x3df0039
  414e16:	cmp    DWORD PTR [eax],eax
  414e18:	jecxz  0x414e1d
  414e1a:	cmp    DWORD PTR [eax],eax
  414e1c:	jmp    0xe8418724
  414e21:	add    edi,DWORD PTR [ecx]
  414e23:	add    BYTE PTR [eax],al
  414e25:	icebp  
  414e26:	mov    bl,dh
  414e28:	pop    ds
  414e29:	shr    DWORD PTR [edx-0x2],1
  414e2c:	(bad)  
  414e2d:	fild   QWORD PTR [ebp-0x23]
  414e30:	push   ds
  414e31:	add    BYTE PTR [ebp+edi*8-0x2],al
  414e35:	shr    BYTE PTR [eax+ebp*8+0x21],cl
  414e39:	repz inc esp
  414e3b:	or     BYTE PTR [edx],al
  414e3d:	ret    0xe90f
  414e40:	and    BYTE PTR [edi-0x28da1bf8],bh
  414e46:	sub    BYTE PTR [esi+eax*1],al
  414e49:	lods   al,BYTE PTR ds:[esi]
  414e4a:	or     ebx,ebp
  414e4c:	and    al,BYTE PTR [eax+ecx*1]
  414e4f:	or     eax,DWORD PTR [ebx]
  414e51:	sbb    eax,0xf523e9e9
  414e56:	push   ss
  414e57:	or     al,BYTE PTR [edx+esi*8]
  414e5a:	pop    es
  414e5b:	or     DWORD PTR [ecx],eax
  414e5d:	call   0xf1474a9e
  414e62:	cmp    al,0x4
  414e64:	push   cs
  414e65:	out    0xed,al
  414e67:	lock adc dl,dh
  414e6a:	(bad)  
  414e6c:	sbb    esi,esp
  414e6e:	retf   0x1507
  414e71:	jmp    0x19411c76
  414e76:	out    0x39,eax
  414e78:	in     al,dx
  414e79:	push   es
  414e7a:	test   esp,0x3be00108
  414e80:	add    eax,DWORD PTR [esi]
  414e82:	jecxz  0x414e2b
  414e84:	or     edi,edi
  414e86:	ror    BYTE PTR [edi-0x7740dc0d],0xfa
  414e8d:	and    al,0x1b
  414e8f:	mov    eax,ds:0x65122cf5
  414e94:	(bad)  [eax+ecx*1]
  414e97:	imul   ebp,edx,0xf9941826
  414e9d:	sbb    al,0x0
  414e9f:	pusha  
  414ea0:	xchg   ebp,eax
  414ea1:	inc    BYTE PTR [eax]
  414ea3:	pusha  
  414ea4:	add    DWORD PTR [eax],eax
  414ea6:	add    BYTE PTR [eax+0x1],dl
  414ea9:	std    
  414eaa:	call   DWORD PTR [ebp+edx*4-0x2]
  414eae:	add    BYTE PTR [ecx+eax*1-0x3],ah
  414eb2:	add    BYTE PTR [ebp+edx*4-0x2],dl
  414eb6:	call   DWORD PTR [ecx+eax*1+0x0]
  414eba:	add    BYTE PTR [eax+0x1],dl
  414ebd:	std    
  414ebe:	jmp    DWORD PTR [eax]
  414ec0:	xchg   ebp,eax
  414ec1:	std    
  414ec2:	jmp    DWORD PTR [eax]
  414ec4:	xchg   ebp,eax
  414ec5:	inc    BYTE PTR [eax]
  414ec7:	adc    al,0x95
  414ec9:	inc    BYTE PTR [eax]
  414ecb:	adc    BYTE PTR [ebp-0x6adb0003],dl
  414ed1:	std    
  414ed2:	add    BYTE PTR [ecx+eax*1],dl
  414ed5:	std    
  414ed6:	add    BYTE PTR [eax],al
  414ed8:	adc    BYTE PTR [ecx],al
  414eda:	add    BYTE PTR [ecx],al
  414edc:	adc    al,0x1
  414ede:	add    BYTE PTR [eax],al
  414ee0:	in     al,0x94
  414ee2:	std    
  414ee3:	jmp    eax
  414ee5:	xchg   esp,eax
  414ee6:	std    
  414ee7:	add    al,dl
  414ee9:	xchg   esp,eax
  414eea:	std    
  414eeb:	add    al,dl
  414eed:	xchg   esp,eax
  414eee:	(bad)  
  414eef:	jmp    eax
  414ef1:	xchg   esp,eax
  414ef2:	(bad)  
  414ef3:	jmp    eax
  414ef5:	add    ch,bh
  414ef7:	add    al,dl
  414ef9:	add    ch,bh
  414efb:	add    ah,dl
  414efd:	xchg   esp,eax
  414efe:	std    
  414eff:	add    BYTE PTR [eax+eax*1+0x94fffd],ah
  414f06:	add    BYTE PTR [ecx],al
  414f08:	xchg   esp,eax
  414f09:	add    BYTE PTR [eax],al
  414f0b:	add    DWORD PTR [eax+eax*1+0xa0fffd],edx
  414f12:	add    BYTE PTR [eax],al
  414f14:	xchg   esp,eax
  414f15:	xchg   esp,eax
  414f16:	std    
  414f17:	(bad)  
  414f18:	cmp    DWORD PTR [ebx-0x59810103],esp
  414f1e:	add    DWORD PTR [eax],eax
  414f20:	cmp    BYTE PTR [edi-0x659100ff],ah
  414f26:	std    
  414f27:	(bad)  
  414f28:	cmp    DWORD PTR [ebx-0x58c6ffff],esp
  414f2e:	add    edi,edi
  414f30:	cmp    DWORD PTR [edi-0x58c60103],esp
  414f36:	add    DWORD PTR [eax],eax
  414f38:	cmp    BYTE PTR [edi+0x38000001],ah
  414f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3f:	std    
  414f40:	push   DWORD PTR [esi]
  414f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f43:	add    edi,edi
  414f45:	cmp    DWORD PTR [ecx-0x55d900ff],ebp
  414f4b:	std    
  414f4c:	(bad)  
  414f4d:	push   ds
  414f4e:	sahf   
  414f4f:	add    DWORD PTR [eax],eax
  414f51:	cmp    BYTE PTR [ecx-0x61f10003],ch
  414f57:	add    DWORD PTR [eax],eax
  414f59:	cmp    DWORD PTR [ebp-0x62c60003],esp
  414f5f:	std    
  414f60:	(bad)  
  414f61:	mul    BYTE PTR [ebp-0x62c60103]
  414f67:	add    edi,edi
  414f69:	out    0xa9,al
  414f6b:	add    edi,edi
  414f6d:	cmp    DWORD PTR [ebp-0x5ac60003],ebx
  414f73:	add    DWORD PTR [eax],eax
  414f75:	cmp    BYTE PTR [ebp-0x5a390003],bl
  414f7b:	std    
  414f7c:	(bad)  
  414f7d:	mov    esi,0x39fefda9
  414f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f83:	std    
  414f84:	jmp    FWORD PTR [esi+0x39fffda9]
  414f8a:	test   eax,0xa939fffd
  414f8f:	add    DWORD PTR [eax],eax
  414f91:	cmp    DWORD PTR [eax],eax
  414f93:	jmp    0x414f98
  414f95:	mov    ss,WORD PTR [ebx-0x6c780019]
  414f9b:	out    0x3,eax
  414f9d:	cmp    DWORD PTR [eax],eax
  414f9f:	jecxz  0x414fa4
  414fa1:	add    BYTE PTR [esi+0x0],dh
  414fa4:	pop    es
  414fa5:	test   BYTE PTR [ecx-0x80],cl
  414fa8:	out    0x83,eax
  414faa:	cmp    DWORD PTR [eax+0x3983e7],eax
  414fb0:	pop    es
  414fb1:	test   BYTE PTR [ecx],ch
  414fb3:	add    bh,ah
  414fb5:	add    ebp,DWORD PTR [ecx]
  414fb7:	add    bh,al
  414fb9:	add    edi,DWORD PTR [ecx]
  414fbb:	add    bh,al
  414fbd:	add    ebp,DWORD PTR [ecx]
  414fbf:	add    bh,0x83
  414fc2:	cmp    DWORD PTR [eax-0x7fc6fc39],eax
  414fc8:	mov    DWORD PTR [ebx-0x7c187fb7],0x3e78049
  414fd2:	cmp    DWORD PTR [eax-0x7fc67c19],eax
  414fd8:	out    0x3,eax
  414fda:	sub    DWORD PTR [eax],eax
  414fdc:	pop    es
  414fdd:	add    al,0x39
  414fdf:	add    BYTE PTR [edi],al
  414fe1:	add    al,0x49
  414fe3:	and    bh,0x83
  414fe6:	dec    ecx
  414fe7:	add    BYTE PTR [edi],al
  414fe9:	add    al,0x49
  414feb:	add    BYTE PTR [edi],al
  414fed:	test   BYTE PTR [ecx],bh
  414fef:	and    bh,0x3
  414ff2:	cmp    DWORD PTR [eax],eax
  414ff4:	out    0x3,eax
  414ff6:	cmp    DWORD PTR [eax+0x3983e7],eax
  414ffc:	mov    DWORD PTR [ebx+0x3e70029],0x3c78049
  415006:	add    BYTE PTR [ecx+0x0],cl
  415009:	mov    DWORD PTR [ebx],0xe9008039
  41500f:	cmp    al,BYTE PTR [eax]
  415011:	add    cl,ch
  415013:	mov    edx,0xb508ffef
  415018:	(bad)  
  415019:	(bad)  
  41501a:	call   0xe9c13fd9
  41501f:	cmp    dh,al
  415021:	jg     0x41502c
  415023:	mov    ebp,0x3ae8ffff
  415028:	add    BYTE PTR [eax],al
  41502a:	or     DWORD PTR [ebp+0x3508ffef],edi
  415030:	lock jg 0x41501c
  415033:	cmp    dh,al
  415035:	dec    eax
  415037:	mov    edx,0x3ae97fff
  41503c:	lock jg 0x415028
  41503f:	mov    edx,0xbae97fef
  415044:	add    BYTE PTR [eax],al
  415046:	jmp    0xe9c14085
  41504b:	mov    edx,0x3ac98000
  415050:	add    BYTE PTR [eax],al
  415052:	leave  
  415053:	mov    edx,0xb5097ff0
  415058:	lock dec DWORD PTR [eax]
  41505b:	cmp    eax,0xbae90000
  415060:	add    BYTE PTR [eax],al
  415062:	jmp    0x9c150a1
  415067:	mov    ch,0x0
  415069:	add    cl,ch
  41506b:	add    BYTE PTR [edx+0x3ae97ff0],bh
  415071:	lock dec DWORD PTR [eax]
  415074:	cmp    eax,0x3ac98000
  415079:	lock dec eax
  41507c:	mov    edx,0x3ac98000
  415081:	add    BYTE PTR [eax-0xfc537],al
  415087:	jmp    DWORD PTR [eax-0x6fffef83]
  41508d:	std    
  41508e:	(bad)  
  41508f:	call   DWORD PTR [eax-0x7f7fff83]
  415095:	jge    0x415097
  415097:	add    BYTE PTR [eax+0x307ffffd],ah
  41509d:	cld    
  41509e:	jo     0x8051ccd4
  4150a4:	pusha  
  4150a5:	jge    0x4150b7
  4150a7:	add    BYTE PTR [eax-0x1],ch
  4150aa:	(bad)  
  4150ab:	call   DWORD PTR [eax-0x1]
  4150ae:	add    DWORD PTR [eax],ecx
  4150b0:	push   eax
  4150b1:	std    
  4150b2:	(bad)  
  4150b3:	call   FWORD PTR [eax-0x3]
  4150b6:	add    DWORD PTR [eax],ecx
  4150b8:	pusha  
  4150b9:	(bad)  
  4150ba:	inc    DWORD PTR [edi]
  4150bc:	push   eax
  4150bd:	std    
  4150be:	(bad)  
  4150bf:	call   FWORD PTR [eax-0x1]
  4150c2:	add    DWORD PTR [eax],eax
  4150c4:	and    bh,bh
  4150c6:	inc    DWORD PTR [edi]
  4150c8:	sub    ch,bh
  4150ca:	add    DWORD PTR [eax],eax
  4150cc:	sub    ch,bh
  4150ce:	inc    DWORD PTR [edi]
  4150d0:	add    BYTE PTR [eax],bl
  4150d2:	std    
  4150d3:	inc    DWORD PTR [edi]
  4150d5:	and    ch,bh
  4150d7:	add    DWORD PTR [eax],eax
  4150d9:	or     bh,bh
  4150db:	add    DWORD PTR [eax],ecx
  4150dd:	or     ch,bh
  4150df:	add    DWORD PTR [eax],eax
  4150e1:	adc    ch,bh
  4150e3:	add    DWORD PTR [eax],ecx
  4150e5:	fdivr  st,st(6)
  4150e7:	(bad)  
  4150e8:	jmp    eax
  4150ea:	cld    
  4150eb:	inc    DWORD PTR [edi]
  4150ed:	call   0xd14150ee
  4150f2:	inc    BYTE PTR [ecx]
  4150f4:	or     al,ah
  4150f6:	(bad)  
  4150f7:	(bad)  
  4150f8:	jmp    eax
  4150fa:	inc    BYTE PTR [ecx]
  4150fc:	add    al,dl
  4150fe:	cld    
  4150ff:	add    DWORD PTR [eax],ecx
  415101:	cmp    DWORD PTR [edi-0x60befdff],ebx
  415107:	inc    DWORD PTR [ecx]
  415109:	cmp    DWORD PTR [edi-0x58ce0001],ecx
  41510f:	inc    DWORD PTR [ecx]
  415111:	cmp    DWORD PTR [edi-0x60c6fdff],esp
  415117:	(bad)  
  415118:	inc    DWORD PTR [ecx-0x71]
  41511b:	add    DWORD PTR [eax],eax
  41511d:	cmp    DWORD PTR [edi-0x58cefe01],ecx
  415123:	(bad)  
  415124:	(bad)  
  415125:	cmp    DWORD PTR [edi-0x58beffff],esp
  41512b:	inc    DWORD PTR [ecx]
  41512d:	xor    DWORD PTR [edi-0x60ceffff],esp
  415133:	add    DWORD PTR [edx],eax
  415135:	add    BYTE PTR [ecx],bh
  415137:	lahf   
  415138:	(bad)  
  415139:	(bad)  
  41513a:	cmp    DWORD PTR [edi-0x58c6fdff],esp
  415140:	inc    DWORD PTR [ecx]
  415142:	xor    DWORD PTR [edi-0x66be0001],esp
  415148:	add    DWORD PTR [eax],eax
  41514a:	cmp    DWORD PTR [ecx-0x6ec60001],ebx
  415150:	add    DWORD PTR [edx],eax
  415152:	cmp    DWORD PTR [ecx-0x66befe01],esp
  415158:	(bad)  
  415159:	inc    DWORD PTR [ecx-0x6f]
  41515c:	add    DWORD PTR [eax],eax
  41515e:	xor    DWORD PTR [ecx-0x66c60001],ebx
  415164:	add    DWORD PTR [eax],eax
  415166:	cmp    DWORD PTR [ecx-0x6ebefdff],esp
  41516c:	(bad)  
  41516d:	push   DWORD PTR [ecx]
  41516f:	cdq    
  415170:	add    DWORD PTR [edx],eax
  415172:	cmp    DWORD PTR [ecx-0x5ebeffff],ebx
  415178:	inc    DWORD PTR [ecx]
  41517a:	inc    ecx
  41517b:	add    bh,ch
  41517d:	add    edi,DWORD PTR [ecx]
  41517f:	add    bh,ch
  415181:	add    DWORD PTR [ebx],edi
  415183:	add    bh,ah
  415185:	add    DWORD PTR [ebx],edi
  415187:	add    bh,bl
  415189:	add    edi,DWORD PTR [ecx]
  41518b:	clc    
  41518c:	out    0x3,al
  41518e:	cmp    edi,eax
  415190:	out    dx,al
  415191:	add    DWORD PTR [ecx],edi
  415193:	clc    
  415194:	fiadd  WORD PTR [ecx]
  415196:	cmp    DWORD PTR [eax],eax
  415198:	out    0x3,eax
  41519a:	add    BYTE PTR [ebx],bh
  41519c:	clc    
  41519d:	out    dx,al
  41519e:	add    eax,0x3ef003b
  4151a3:	cmp    DWORD PTR [eax],eax
  4151a5:	fild   WORD PTR [ebx]
  4151a7:	cmp    edi,eax
  4151a9:	out    0x5,al
  4151ab:	cmp    eax,DWORD PTR [eax]
  4151ad:	call   0x68413895
  4151b2:	in     al,0x5e
  4151b4:	(bad)
  4151b8:	(bad)  
  4151b9:	addr16 add al,0x39
  4151bc:	add    BYTE PTR [edi-0x1c],ah
  4151bf:	(bad)  
  4151c0:	jmp    DWORD PTR [edi+0x4]
  4151c3:	mov    ecx,0xb903e800
  4151c8:	jmp    edi
  4151ca:	jecxz  0x4151fa
  4151cc:	(bad)  
  4151cd:	out    0x3,eax
  4151cf:	cmp    DWORD PTR [eax],eax
  4151d1:	out    0xe3,eax
  4151d3:	sahf   
  4151d4:	add    bh,ah
  4151d6:	jecxz  0x41516e
  4151d8:	add    BYTE PTR [eax-0x1c],ch
  4151db:	mov    es,WORD PTR [eax]
  4151dd:	push   0xe7003904
  4151e2:	add    edi,DWORD PTR [ecx]
  4151e4:	add    BYTE PTR [edi+0x4],ah
  4151e7:	mov    ecx,0xb903e7ff
  4151ec:	jmp    edi
  4151ee:	add    edi,DWORD PTR [ecx]
  4151f0:	add    bh,ah
  4151f2:	jecxz  0x4151d2
  4151f4:	mov    es,WORD PTR [eax]
  4151f6:	jmp    0xe841d235
  4151fb:	fimul  DWORD PTR [esi]
  4151fd:	add    BYTE PTR [ecx+0x0],ch
  415200:	cmp    eax,0x3ae90000
  415205:	add    BYTE PTR [eax],0xe8
  415208:	call   0xfd8e:0x9569fd8e
  41520f:	push   0xe800803d
  415214:	cmp    al,BYTE PTR [eax]
  415216:	add    BYTE PTR [ecx-0x63],ch
  415219:	mov    ?,ebp
  41521b:	imul   esi,DWORD PTR ds:0x9ae90080,0x9a69fd8e
  415225:	push   cs
  415226:	add    BYTE PTR [eax+0x5a],ch
  415229:	push   cs
  41522a:	add    BYTE PTR [eax+0x3a],ch
  41522d:	add    BYTE PTR [eax],al
  41522f:	imul   edi,DWORD PTR [edx],0x3ae80080
  415235:	add    BYTE PTR [eax],0xe9
  415238:	pop    edx
  415239:	push   cs
  41523a:	add    BYTE PTR [eax+0x5a],ch
  41523d:	push   cs
  41523e:	add    BYTE PTR [eax+0x3a],ch
  415241:	add    BYTE PTR [eax],al
  415243:	jmp    0xe9415282
  415248:	cmp    al,BYTE PTR [eax]
  41524a:	add    cl,ch
  41524c:	sbb    cl,BYTE PTR [esi]
  41524e:	add    BYTE PTR [ecx+0x1a],ch
  415251:	mov    ?,ebp
  415253:	imul   edi,DWORD PTR [edx],0x3a680080
  415259:	add    BYTE PTR [eax],0xe8
  41525c:	cmp    al,BYTE PTR [eax]
  41525e:	add    al,ch
  415260:	sbb    cl,BYTE PTR [esi]
  415262:	add    BYTE PTR [eax+0x0],ch
  415265:	sbb    cl,BYTE PTR [esi-0x72259703]
  41526b:	std    
  41526c:	imul   edi,DWORD PTR [edx],0x51000000
  415272:	mov    eax,ds:0x151007d
  415277:	add    BYTE PTR [eax],al
  415279:	loope  0x41527c
  41527b:	add    BYTE PTR [eax],al
  41527d:	loopne 0x415220
  41527f:	std    
  415280:	call   ecx
  415282:	add    DWORD PTR [eax-0x25e2f00],eax
  415288:	jmp    DWORD PTR [eax]
  41528a:	mov    eax,ds:0x121007d
  41528f:	add    BYTE PTR [eax],0x91
  415292:	mov    eax,ds:0xa110fffd
  415297:	std    
  415298:	jmp    DWORD PTR [eax-0x5eff7fff]
  41529e:	mov    eax,ds:0x410007d
  4152a3:	add    BYTE PTR [eax],al
  4152a5:	nop
  4152a6:	add    DWORD PTR [eax-0x25ea000],eax
  4152ac:	jmp    eax
  4152ae:	mov    ds:0x250007d,eax
  4152b3:	add    BYTE PTR [eax],al
  4152b5:	push   eax
  4152b6:	add    cl,BYTE PTR [eax]
  4152b8:	add    ah,BYTE PTR [eax+0x1]
  4152bb:	or     BYTE PTR [edx],al
  4152bd:	pusha  
  4152be:	add    al,BYTE PTR [eax]
  4152c0:	inc    edx
  4152c1:	push   eax
  4152c2:	add    DWORD PTR [eax],ecx
  4152c4:	add    BYTE PTR [eax+0x2],dl
  4152c7:	add    BYTE PTR [eax],al
  4152c9:	add    BYTE PTR [eax],ah
  4152cb:	add    DWORD PTR [eax],eax
  4152cd:	inc    eax
  4152ce:	and    BYTE PTR [ecx],al
  4152d0:	or     BYTE PTR [edx],al
  4152d2:	adc    BYTE PTR [edx],al
  4152d4:	or     BYTE PTR [eax+0x10],al
  4152d7:	add    DWORD PTR [eax],ecx
  4152d9:	add    BYTE PTR [eax],ah
  4152db:	add    al,BYTE PTR [eax]
  4152dd:	add    ah,BYTE PTR [eax]
  4152df:	add    cl,BYTE PTR [eax]
  4152e1:	inc    eax
  4152e2:	adc    BYTE PTR [edx],al
  4152e4:	add    BYTE PTR [edx+0x10],al
  4152e7:	add    DWORD PTR [eax],ecx
  4152e9:	inc    edx
  4152ea:	cmp    DWORD PTR [edi-0x68c6f7fe],edx
  4152f0:	add    DWORD PTR [eax],eax
  4152f2:	jns    0x41528b
  4152f4:	add    DWORD PTR [eax],eax
  4152f6:	cmp    edx,DWORD PTR [edi-0x6886f7ff]
  4152fc:	add    DWORD PTR [eax],ecx
  4152fe:	jns    0x415297
  415300:	add    DWORD PTR [eax],eax
  415302:	cmp    DWORD PTR [edi-0x6886fffe],edx
  415308:	add    cl,BYTE PTR [eax]
  41530a:	sti    
  41530b:	xchg   esi,eax
  41530c:	add    cl,BYTE PTR [eax]
  41530e:	sti    
  41530f:	xchg   esi,eax
  415310:	add    al,BYTE PTR [eax]
  415312:	cmp    edx,DWORD PTR [edi-0x6904f7ff]
  415318:	add    al,BYTE PTR [eax]
  41531a:	stc    
  41531b:	xchg   esi,eax
  41531c:	add    DWORD PTR [eax],eax
  41531e:	cmp    DWORD PTR [edi-0x6904ffff],edx
  415324:	add    cl,BYTE PTR [eax]
  415326:	cmp    edx,DWORD PTR [edi-0x68c4ffff]
  41532c:	add    DWORD PTR [eax],eax
  41532e:	add    bl,bh
  415330:	xchg   esi,eax
  415331:	add    cl,BYTE PTR [eax]
  415333:	cmp    DWORD PTR [edi-0x68c6f7ff],edx
  415339:	add    al,BYTE PTR [eax]
  41533b:	sti    
  41533c:	xchg   esi,eax
  41533d:	add    al,BYTE PTR [eax]
  41533f:	cmp    DWORD PTR [edi-0x68c4ffff],edx
  415345:	add    DWORD PTR [eax],eax
  415347:	stc    
  415348:	xchg   esi,eax
  415349:	add    DWORD PTR [eax],ecx
  41534b:	cmp    ebx,DWORD PTR [ecx-0x6684fffe]
  415351:	add    cl,BYTE PTR [eax]
  415353:	jns    0x4152ee
  415355:	add    al,BYTE PTR [eax]
  415357:	cmp    ebx,DWORD PTR [ecx-0x6686ffff]
  41535d:	add    DWORD PTR [eax],ecx
  41535f:	jnp    0x4152fa
  415361:	add    cl,BYTE PTR [eax]
  415363:	cmp    eax,DWORD PTR [eax]
  415365:	out    0x2,eax
  415367:	xor    DWORD PTR [eax-0x19],eax
  41536a:	add    bh,BYTE PTR [ecx]
  41536c:	add    bh,ah
  41536e:	add    edi,DWORD PTR [ecx]
  415370:	(bad)  
  415371:	out    0x3,al
  415373:	xor    DWORD PTR [esi],edi
  415375:	out    0x2,eax
  415377:	xor    DWORD PTR [esi],edi
  415379:	out    0x2,eax
  41537b:	inc    ecx
  41537c:	add    bh,ah
  41537e:	add    edi,DWORD PTR [ecx]
  415380:	ds out 0x2,eax
  415383:	xor    DWORD PTR [esi],edi
  415385:	out    0x3,eax
  415387:	xor    esi,edi
  415389:	out    0x3,al
  41538b:	cmp    DWORD PTR [eax],eax
  41538d:	out    0x3,eax
  41538f:	inc    ecx
  415390:	inc    eax
  415391:	out    0x3,eax
  415393:	add    BYTE PTR [ecx],bh
  415395:	ds out 0x2,eax
  415398:	xor    DWORD PTR [eax],eax
  41539a:	out    0x2,eax
  41539c:	cmp    esi,edi
  41539e:	out    0x2,al
  4153a0:	cmp    DWORD PTR [eax-0x19],eax
  4153a3:	add    esi,DWORD PTR [ecx]
  4153a5:	add    bh,ah
  4153a7:	add    edi,DWORD PTR [ecx]
  4153a9:	add    bh,ah
  4153ab:	add    eax,DWORD PTR [ecx+0x40]
  4153ae:	out    0x4,eax
  4153b0:	inc    ecx
  4153b1:	(bad)  
  4153b2:	out    0x4,al
  4153b4:	cmp    DWORD PTR [eax-0x29],eax
  4153b7:	add    edi,DWORD PTR [ecx]
  4153b9:	loopne 0x4153a1
  4153bb:	add    edi,ecx
  4153bd:	(bad)  
  4153bf:	inc    ebx
  4153c0:	cmp    DWORD PTR [eax],eax
  4153c2:	xlat   BYTE PTR ds:[ebx]
  4153c3:	inc    ebx
  4153c4:	stc    
  4153c5:	(bad)  
  4153c7:	add    edi,ecx
  4153c9:	fcomip st,st(6)
  4153cb:	add    edi,DWORD PTR [ecx]
  4153cd:	add    bh,dh
  4153cf:	inc    ebx
  4153d0:	jns    0x4153b2
  4153d2:	out    0x3,al
  4153d4:	jns    0x4153d6
  4153d6:	out    0x43,eax
  4153d8:	cmp    eax,esp
  4153da:	(bad)  
  4153db:	inc    ebx
  4153dc:	jns    0x4153de
  4153de:	add    cl,ch
  4153e0:	cmp    al,BYTE PTR [eax+0x0]
  4153e3:	fnstcw WORD PTR [edx]
  4153e5:	add    BYTE PTR [eax],ah
  4153e7:	stc    
  4153e8:	cmp    al,BYTE PTR [eax+0x0]
  4153eb:	jmp    0xe961546a
  4153f0:	cmp    al,BYTE PTR [eax]
  4153f2:	and    cl,bh
  4153f4:	jp     0x4153f6
  4153f6:	add    cl,ch
  4153f8:	add    BYTE PTR [edx],bh
  4153fa:	add    BYTE PTR [eax],al
  4153fc:	fnstcw WORD PTR [edx]
  4153fe:	inc    eax
  4153ff:	add    cl,bl
  415401:	jp     0x415403
  415403:	and    cl,ch
  415405:	jp     0x415407
  415407:	add    cl,ch
  415409:	jp     0x41544b
  41540b:	add    cl,bh
  41540d:	cli    
  41540e:	call   FWORD PTR [edi]
  415410:	stc    
  415411:	cmp    al,BYTE PTR [eax]
  415413:	add    cl,bh
  415415:	cmp    al,BYTE PTR [eax+0x20]
  415418:	fnstcw WORD PTR [edx]
  41541a:	inc    eax
  41541b:	and    cl,ch
  41541d:	cmp    al,BYTE PTR [eax]
  41541f:	add    cl,bl
  415421:	cli    
  415422:	aas    
  415423:	add    cl,ch
  415425:	cli    
  415426:	aas    
  415427:	and    cl,bh
  415429:	cli    
  41542a:	(bad)  
  41542b:	(bad)  
  41542c:	call   0xe941942b
  415431:	cli    
  415432:	aas    
  415433:	and    cl,ch
  415435:	cmp    al,BYTE PTR [eax]
  415437:	and    cl,ch
  415439:	cli    
  41543a:	call   FWORD PTR [edi]
  41543c:	fnstcw WORD PTR [edx]
  41543e:	add    BYTE PTR [eax],al
  415440:	fnstcw WORD PTR [edx]
  415442:	inc    eax
  415443:	and    cl,ch
  415445:	cli    
  415446:	aas    
  415447:	add    cl,bh
  415449:	cli    
  41544a:	aas    
  41544b:	and    cl,ch
  41544d:	cmp    al,BYTE PTR [eax+0x0]
  415450:	stc    
  415451:	jp     0x415453
  415453:	add    cl,bh
  415455:	cmp    al,BYTE PTR [eax]
  415457:	and    BYTE PTR [eax],al
  415459:	adc    dh,bh
  41545b:	aas    
  41545c:	add    BYTE PTR [eax],al
  41545e:	and    BYTE PTR [esi],bh
  415460:	add    BYTE PTR [eax],ah
  415462:	and    dh,bh
  415464:	call   FWORD PTR [edi]
  415466:	loopne 0x4154a5
  415468:	add    BYTE PTR [eax],al
  41546a:	add    dh,bh
  41546c:	call   FWORD PTR [edi]
  41546e:	lock cmp eax,0x3de02040
  415474:	inc    eax
  415475:	add    al,dl
  415477:	std    
  415478:	aas    
  415479:	and    BYTE PTR [eax],al
  41547b:	ds inc eax
  41547d:	add    al,ah
  41547f:	cmp    eax,0xfde02040
  415484:	(bad)  
  415485:	jmp    eax
  415487:	std    
  415488:	aas    
  415489:	and    al,al
  41548b:	std    
  41548c:	(bad)  
  41548d:	jmp    DWORD PTR [eax-0x5fffffc3]
  415493:	std    
  415494:	aas    
  415495:	and    BYTE PTR [eax-0x6fffbfc3],ah
  41549b:	cmp    eax,0xfd700000
  4154a0:	aas    
  4154a1:	add    BYTE PTR [eax+0x3d],dh
  4154a4:	add    BYTE PTR [eax],ah
  4154a6:	nop
  4154a7:	std    
  4154a8:	(bad)  
  4154a9:	call   DWORD PTR [eax+0x6020403d]
  4154af:	std    
  4154b0:	call   FWORD PTR [edi]
  4154b2:	jo     0x4154b1
  4154b4:	aas    
  4154b5:	add    BYTE PTR [eax+0x3d],ah
  4154b8:	add    BYTE PTR [eax],ah
  4154ba:	push   eax
  4154bb:	std    
  4154bc:	pop    ds
  4154bd:	add    BYTE PTR [edx-0x3],ah
  4154c0:	pop    ds
  4154c1:	add    al,0x0
  4154c3:	bound  eax,QWORD PTR [ebp-0x2affc03]
  4154c9:	(bad)  
  4154ca:	call   DWORD PTR [eax-0x7b]
  4154cd:	std    
  4154ce:	jmp    DWORD PTR [edx]
  4154d0:	test   ebp,edi
  4154d2:	add    edi,DWORD PTR [ecx]
  4154d4:	xchg   ebp,eax
  4154d5:	stc    
  4154d6:	pop    ds
  4154d7:	cmp    DWORD PTR [edi-0x6acae007],edx
  4154dd:	stc    
  4154de:	pop    ds
  4154df:	cmp    eax,0x39200197
  4154e4:	xchg   edi,eax
  4154e5:	add    DWORD PTR [eax],eax
  4154e7:	cmp    DWORD PTR [ebp-0x6acaffff],edx
  4154ed:	add    DWORD PTR [eax],eax
  4154ef:	cmp    DWORD PTR [edi-0x6acaffff],edx
  4154f5:	add    DWORD PTR [eax],esp
  4154f7:	cmp    eax,0xdefff995
  4154fc:	xchg   esi,eax
  4154fd:	stc    
  4154fe:	(bad)  
  4154ff:	cmp    dl,BYTE PTR [ebp-0x6ac6e007]
  415505:	add    DWORD PTR [eax],esp
  415507:	cmp    DWORD PTR [edi-0x6ac50007],edx
  41550d:	add    DWORD PTR [eax],eax
  41550f:	cmp    eax,0x35200197
  415514:	xchg   edi,eax
  415515:	stc    
  415516:	pop    ds
  415517:	cmp    eax,0x39200195
  41551c:	xchg   edi,eax
  41551d:	add    DWORD PTR [eax],esp
  41551f:	cmp    eax,0x8efff997
  415524:	xchg   esp,eax
  415525:	stc    
  415526:	inc    DWORD PTR [eax]
  415528:	xchg   BYTE PTR [ecx+edi*8-0x668cae1],dl
  41552f:	pop    ds
  415530:	cmp    DWORD PTR [ebp-0x68c6ffff],edx
  415536:	add    DWORD PTR [eax],eax
  415538:	cmp    eax,0x391ff997
  41553d:	xchg   edi,eax
  41553e:	add    DWORD PTR [eax],eax
  415540:	cmp    eax,0x391ff997
  415545:	xchg   edi,eax
  415546:	add    DWORD PTR [eax],esp
  415548:	cmp    DWORD PTR [ebp+0x3afff9],edx
  41554e:	jmp    0xe9458c4e
  415553:	add    ebx,DWORD PTR [ecx-0x4]
  415556:	call   0xe93dae5e
  41555b:	add    edi,DWORD PTR [ecx]
  41555d:	add    cl,ch
  41555f:	add    ebx,DWORD PTR [ecx+0x0]
  415562:	out    0x3,eax
  415564:	cmp    esp,edi
  415566:	out    0xfb,al
  415568:	push   es
  415569:	add    al,0xe7
  41556b:	add    ebx,DWORD PTR [ecx+0x0]
  41556e:	out    0xfb,eax
  415570:	push   esi
  415571:	cld    
  415572:	call   0xe9c94472
  415577:	sti    
  415578:	inc    esi
  415579:	add    bh,ah
  41557b:	sti    
  41557c:	ds cld 
  41557e:	call   0xe9c92c7e
  415583:	add    edi,DWORD PTR [ecx]
  415585:	cld    
  415586:	call   0xe73d7c86
  41558b:	add    eax,DWORD PTR [eax]
  41558d:	sbb    esp,edi
  41558f:	out    0xfb,al
  415591:	push   esi
  415592:	add    bh,ah
  415594:	add    edi,DWORD PTR [ecx]
  415596:	add    cl,ch
  415598:	add    edi,DWORD PTR [ecx]
  41559a:	add    cl,ch
  41559c:	sti    
  41559d:	ds cld 
  41559f:	out    0x3,al
  4155a1:	cmp    DWORD PTR [eax],eax
  4155a3:	jmp    0xe74184a3
  4155a8:	add    ebx,DWORD PTR [ecx-0x4]
  4155ab:	out    0xfb,al
  4155ad:	jle    0x415536
  4155af:	jmp    0xe73d8eb7
  4155b4:	sti    
  4155b5:	outs   dx,BYTE PTR ds:[esi]
  4155b6:	add    esp,edi
  4155b8:	sti    
  4155b9:	xchg   cx,bp
  4155bc:	add    ebx,DWORD PTR [ecx]
  4155be:	add    BYTE PTR [edi],ah
  4155c0:	hlt    
  4155c1:	push   esi
  4155c2:	mul    esi
  4155c4:	repz dec esi
  4155c6:	xchg   DWORD PTR [eax],eax
  4155c8:	jmp    0x29415207
  4155cd:	inc    ebp
  4155ce:	add    edx,DWORD PTR [eax]
  4155d0:	jmp    0x2951560f
  4155d5:	and    eax,0x3d290d87
  4155da:	add    BYTE PTR [eax],al
  4155dc:	jmp    0x2951561b
  4155e1:	cmp    eax,0x3ae8fffc
  4155e6:	cld    
  4155e7:	movaps XMMWORD PTR ds:0xae91003,xmm1
  4155ee:	add    eax,DWORD PTR [eax]
  4155f0:	jmp    0x10443ff5
  4155f5:	test   eax,0xe90002ea
  4155fa:	jmp    0x0:0x3aa9fd86
  415601:	jmp    0xa9515240
  415606:	cmp    al,BYTE PTR [eax]
  415608:	adc    cl,ch
  41560a:	retf   0xd86
  41560d:	test   eax,0xe9fd86ca
  415612:	stos   BYTE PTR es:[edi],al
  415613:	add    al,BYTE PTR [eax]
  415615:	test   eax,0xa8fffc3a
  41561a:	cmp    bh,ah
  41561c:	psubsw mm5,QWORD PTR [edx-0x7556effe]
  415623:	xchg   ch,bh
  415625:	jmp    0xe9415664
  41562a:	cmp    al,BYTE PTR [eax]
  41562c:	add    BYTE PTR [ecx+0x290ffc3a],ch
  415632:	cmp    eax,0x6ae91000
  415637:	xchg   BYTE PTR ds:0x26d29,cl
  41563d:	jmp    0x41527c
  415642:	and    BYTE PTR [ecx+eax*1+0x4026000],cl
  415649:	add    BYTE PTR [eax-0x6e],dl
  41564c:	add    DWORD PTR [eax],edx
  41564e:	push   eax
  41564f:	xchg   edx,eax
  415650:	std    
  415651:	jmp    DWORD PTR [eax-0x4]
  415654:	(bad)  
  415655:	inc    DWORD PTR [eax]
  415657:	pusha  
  415658:	cld    
  415659:	add    edx,DWORD PTR [eax]
  41565b:	adc    BYTE PTR [edx-0x73af0003],dl
  415661:	add    DWORD PTR [eax],eax
  415663:	and    BYTE PTR [edx-0x39ff003],dl
  415669:	(bad)  
  41566a:	call   DWORD PTR [eax-0x4]
  41566d:	dec    DWORD PTR [edi]
  41566f:	adc    BYTE PTR [edx],al
  415671:	add    al,0x10
  415673:	mov    al,ds:0xe0100401
  415678:	add    DWORD PTR [eax],eax
  41567a:	adc    al,dl
  41567c:	add    DWORD PTR [eax+eax*1],eax
  41567f:	nop
  415680:	xchg   ecx,eax
  415681:	std    
  415682:	pavgb  mm0,QWORD PTR [ecx]
  415685:	add    BYTE PTR [eax],al
  415687:	mov    al,ds:0x90100191
  41568c:	add    DWORD PTR [eax+eax*1],eax
  41568f:	nop
  415690:	add    DWORD PTR [eax],eax
  415692:	adc    BYTE PTR [eax-0x5feffbff],ah
  415698:	xchg   ecx,eax
  415699:	std    
  41569a:	(bad)  
  41569c:	xchg   ecx,eax
  41569d:	std    
  41569e:	seto   BYTE PTR [ecx]
  4156a1:	add    BYTE PTR [eax],al
  4156a3:	loopne 0x415636
  4156a5:	add    DWORD PTR [eax],edx
  4156a7:	mov    al,ds:0x90000191
  4156ac:	xchg   ecx,eax
  4156ad:	add    DWORD PTR [eax],eax
  4156af:	rcl    BYTE PTR [ecx-0x73df0003],1
  4156b5:	std    
  4156b6:	jmp    DWORD PTR [eax]
  4156b8:	cld    
  4156b9:	add    eax,DWORD PTR [eax]
  4156bb:	add    BYTE PTR [ecx],bh
  4156bd:	xchg   edi,eax
  4156be:	add    DWORD PTR [eax],eax
  4156c0:	dec    ecx
  4156c1:	xchg   edi,eax
  4156c2:	icebp  
  4156c3:	add    ebp,DWORD PTR [ecx]
  4156c5:	inc    edi
  4156c6:	das    
  4156c7:	dec    DWORD PTR [esi-0x69]
  4156ca:	add    DWORD PTR [eax],eax
  4156cc:	cmp    DWORD PTR [edi+0x77390001],edx
  4156d2:	sub    bh,bh
  4156d4:	fld    TBYTE PTR ss:[eax]
  4156d7:	jmp    FWORD PTR [esi]
  4156d9:	pop    ebx
  4156da:	sub    al,0xff
  4156dc:	es xchg edi,eax
  4156de:	add    DWORD PTR [eax],eax
  4156e0:	cmp    DWORD PTR [edi-0x46c6ffff],edx
  4156e6:	sub    bh,bh
  4156e8:	push   cs
  4156e9:	out    0x2d,eax
  4156eb:	inc    DWORD PTR [esi]
  4156ed:	ja     0x41571b
  4156ef:	(bad)  
  4156f0:	(bad)  
  4156f1:	xchg   esi,eax
  4156f2:	add    DWORD PTR [eax],eax
  4156f4:	cmp    DWORD PTR [edi-0x20c6ffff],edx
  4156fa:	es jmp esi
  4156fd:	mov    edx,0x3edeff2b
  415702:	sub    al,0xff
  415704:	(bad)  
  415705:	xchg   esi,eax
  415706:	add    DWORD PTR [eax],eax
  415708:	cmp    DWORD PTR [edi+0x3b390001],edx
  41570e:	daa    
  41570f:	(bad)  
  415710:	mov    esi,0xb6ff2b4a
  415715:	sub    BYTE PTR [edx],0xff
  415718:	scas   al,BYTE PTR es:[edi]
  415719:	xchg   esi,eax
  41571a:	add    DWORD PTR [eax],eax
  41571c:	cmp    DWORD PTR [edi+0x39000001],edx
  415722:	mov    eax,ds:0x3696ff21
  415727:	dec    DWORD PTR cs:[esi-0x7900d55e]
  41572e:	xchg   esi,eax
  41572f:	add    DWORD PTR [eax],eax
  415731:	cmp    DWORD PTR [edi+0x390001],edx
  415737:	daa    
  415738:	and    al,0x6e
  41573a:	test   BYTE PTR [edi-0x7b99d3],cl
  415740:	sub    bl,BYTE PTR [esi-0x7c]
  415743:	out    0x3,eax
  415745:	cmp    DWORD PTR [eax],eax
  415747:	out    0x3,eax
  415749:	cmp    DWORD PTR [eax],eax
  41574b:	pop    ecx
  41574c:	and    eax,DWORD PTR [esi-0x7c]
  41574f:	jnp    0x41577e
  415751:	test   BYTE PTR ds:[ebx],ah
  415754:	sub    esi,DWORD PTR [esi]
  415756:	test   bh,ah
  415758:	add    edi,DWORD PTR [ecx]
  41575a:	add    bh,ah
  41575c:	add    edi,DWORD PTR [ecx]
  41575e:	add    cl,bh
  415760:	and    bl,BYTE PTR [esi]
  415762:	test   BYTE PTR [edi-0x87be9d3],dh
  415768:	sub    cl,BYTE PTR [esi]
  41576a:	test   bh,ah
  41576c:	add    edi,DWORD PTR [ecx]
  41576e:	add    bh,ah
  415770:	add    edi,DWORD PTR [ecx]
  415772:	add    BYTE PTR ds:0x6383f623,ah
  415778:	sub    eax,0x3e783ee
  41577d:	cmp    DWORD PTR [eax],eax
  41577f:	out    0x3,eax
  415781:	cmp    DWORD PTR [eax],eax
  415783:	out    0x3,eax
  415785:	add    BYTE PTR [ecx],bh
  415787:	add    bh,ah
  415789:	add    edi,DWORD PTR [ecx]
  41578b:	add    bh,ah
  41578d:	add    edi,DWORD PTR [ecx]
  41578f:	add    bh,bl
  415791:	sub    al,0xbe
  415793:	adc    ebp,0x2c
  415796:	mov    dh,0x83
  415798:	leave  
  415799:	sub    al,0xae
  41579b:	adc    edi,0x2c
  41579e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579f:	adc    ebx,0x2c
  4157a2:	sahf   
  4157a3:	sbb    DWORD PTR [edi-0x627c69d4],0x2c
  4157aa:	mov    es,WORD PTR [ebx-0x7c79d37b]
  4157b0:	add    BYTE PTR [ebx+0x4d],bh
  4157b3:	cmp    ebp,0x69
  4157b6:	and    eax,0x2275fd83
  4157bb:	cmp    ebp,0xffffff81
  4157be:	adc    al,BYTE PTR [ebx-0x7ced7803]
  4157c4:	std    
  4157c5:	mov    ds:0xa1fd8322,eax
  4157ca:	and    al,BYTE PTR [ebx-0x7ced3003]
  4157d0:	std    
  4157d1:	mov    bh,0x12
  4157d3:	cmp    ebp,0xffffffd9
  4157d6:	pop    esi
  4157d7:	cmp    ebp,0xffffffc9
  4157da:	push   esi
  4157db:	cmp    ebp,0xffffffdb
  4157de:	pop    esi
  4157df:	cmp    ebp,0x2b
  4157e2:	push   ecx
  4157e3:	cmp    ebp,0x37
  4157e6:	popa   
  4157e7:	cmp    ebp,0xd
  4157ea:	add    BYTE PTR [ecx-0x7d],ah
  4157ed:	std    
  4157ee:	add    DWORD PTR [ecx-0x7d],edx
  4157f1:	std    
  4157f2:	addr16 push ecx
  4157f4:	cmp    ebp,0x49
  4157f7:	and    DWORD PTR [ebx-0x7cde6a03],eax
  4157fd:	std    
  4157fe:	popf   
  4157ff:	adc    DWORD PTR [ebx-0x7ceede03],eax
  415805:	std    
  415806:	sub    eax,0x55fd8321
  41580b:	and    DWORD PTR [ebx-0x7ceec003],eax
  415811:	std    
  415812:	out    0x11,eax
  415814:	cmp    ebp,0x7
  415817:	pusha  
  415818:	cmp    ebp,0xffffffab
  41581b:	popa   
  41581c:	cmp    ebp,0xffffffc3
  41581f:	push   ecx
  415820:	cmp    ebp,0xffffff8f
  415823:	push   ecx
  415824:	cmp    ebp,0x61
  415827:	pusha  
  415828:	cmp    ebp,0x0
  41582b:	add    cl,bl
  41582d:	cld    
  41582e:	(bad)  
  41582f:	clc    
  415830:	fdivr  st,st(4)
  415832:	dec    DWORD PTR [ecx+ebx*8-0x4]
  415836:	dec    DWORD PTR [edx-0x27]
  415839:	cld    
  41583a:	dec    DWORD PTR [edx-0x7d000329]
  415840:	xlat   BYTE PTR ds:[ebx]
  415841:	cld    
  415842:	call   FWORD PTR [eax-0x24]
  415845:	cld    
  415846:	dec    DWORD PTR [eax-0x24]
  415849:	cld    
  41584a:	dec    DWORD PTR [esp+ebx*8-0x4]
  41584e:	inc    DWORD PTR [eax]
  415850:	push   ds
  415851:	(bad)  
  415853:	call   FWORD PTR [edx+ebx*8]
  415856:	cld    
  415857:	(bad)  
  415858:	jl     0x415834
  41585a:	cld    
  41585b:	dec    DWORD PTR [edx+ebx*8-0x4]
  41585f:	call   DWORD PTR [edx+0x10fffcdb]
  415865:	(bad)  
  415866:	(bad)  
  415867:	call   DWORD PTR [esi-0x25]
  41586a:	cld    
  41586b:	(bad)  
  41586c:	(bad)  
  41586e:	cld    
  41586f:	jmp    DWORD PTR [esi-0x49000325]
  415875:	(bad)  
  415877:	jmp    DWORD PTR [esi-0x25]
  41587a:	cld    
  41587b:	push   edx
  41587d:	(bad)  
  41587f:	call   eax
  415881:	std    
  415882:	(bad)  
  415883:	push   DWORD PTR [ecx+ebx*8]
  415886:	cld    
  415887:	jmp    eax
  415889:	std    
  41588a:	(bad)  
  41588b:	call   FWORD PTR [edx+ebx*8-0x25530004]
  415892:	cld    
  415893:	(bad)  
  415894:	clc    
  415895:	(bad)  
  415897:	(bad)  
  415898:	out    dx,al
  415899:	(bad)  
  41589b:	call   FWORD PTR [edx+ebx*8]
  41589e:	cld    
  41589f:	jmp    FWORD PTR [edx+ebx*8]
  4158a2:	cld    
  4158a3:	(bad)  
  4158a4:	cmp    DWORD PTR [ebx],esi
  4158a6:	call   DWORD PTR es:[esi-0x7100d9d7]
  4158ad:	shl    DWORD PTR ds:0x25e386ff,1
  4158b3:	inc    DWORD PTR [eax]
  4158b5:	jle    0x41584e
  4158b7:	add    DWORD PTR [eax],eax
  4158b9:	cmp    DWORD PTR [ebp-0x689100dd],ecx
  4158bf:	add    DWORD PTR [eax],eax
  4158c1:	cmp    DWORD PTR [ecx-0x2a100df],ecx
  4158c7:	and    edi,edi
  4158c9:	push   esi
  4158ca:	xchg   edi,eax
  4158cb:	add    DWORD PTR [eax],eax
  4158cd:	cmp    ebx,ecx
  4158cf:	and    edi,edi
  4158d1:	inc    esi
  4158d2:	fbld   TBYTE PTR [ebx]
  4158d4:	(bad)  
  4158d5:	xor    esp,DWORD PTR ds:[edi+edi*8]
  4158d9:	ss (bad) 
  4158db:	and    edi,edi
  4158dd:	frstor cs:[ebx]
  4158e0:	jmp    DWORD PTR [esi]
  4158e2:	sbb    DWORD PTR [edi+edi*8],esp
  4158e5:	push   ds
  4158e6:	xchg   edi,eax
  4158e7:	add    DWORD PTR [eax],eax
  4158e9:	cmp    DWORD PTR [ecx],edx
  4158eb:	and    al,0xff
  4158ed:	push   cs
  4158ee:	sub    eax,0x3d06ff24
  4158f3:	and    al,0xff
  4158f5:	(bad)  
  4158f6:	push   edx
  4158f7:	and    al,0xff
  4158f9:	mul    BYTE PTR [eax+0x24]
  4158fc:	(bad)  
  4158fd:	out    dx,al
  4158fe:	cmp    ah,BYTE PTR [edi+edi*8]
  415901:	out    0x3a,al
  415903:	and    al,0xff
  415905:	fidivr WORD PTR [eax]
  415907:	and    al,0xff
  415909:	(bad)  
  41590a:	sub    BYTE PTR [edi+edi*8],ah
  41590d:	into   
  41590e:	xchg   edx,eax
  41590f:	and    bh,bh
  415911:	(bad)  
  415912:	xchg   esi,eax
  415913:	add    DWORD PTR [eax],eax
  415915:	cmp    DWORD PTR [ecx-0x49ff00de],ebp
  41591b:	test   BYTE PTR [edx],ah
  41591d:	jmp    FWORD PTR [esi+0x3903e6ff]
  415923:	add    bh,ch
  415925:	sub    BYTE PTR [esi-0x69d70280],bl
  41592b:	or     cl,0x28
  41592e:	mov    es,WORD PTR [eax-0x7f79d749]
  415934:	mov    ebx,0x9f807e28
  415939:	sub    BYTE PTR [esi-0x80],dh
  41593c:	xchg   ebp,eax
  41593d:	sub    BYTE PTR [esi-0x80],ch
  415940:	dec    ebp
  415941:	sub    DWORD PTR [esi-0x80],esp
  415944:	pop    ecx
  415945:	sub    DWORD PTR [esi-0x80],ebx
  415948:	sub    BYTE PTR [bp-0x80],dl
  41594c:	pop    ebx
  41594d:	sub    BYTE PTR [esi-0x80],cl
  415950:	pop    edi
  415951:	sub    BYTE PTR [esi-0x80],al
  415954:	lea    ebp,[eax]
  415956:	and    BYTE PTR ds:[ecx-0x707fc9d8],0x28
  41595e:	adc    BYTE PTR cs:[ebp-0x627fd9d8],0x28
  415966:	push   ds
  415967:	xor    bh,0x27
  41596a:	push   ss
  41596b:	add    bh,0x27
  41596e:	push   cs
  41596f:	cmp    BYTE PTR [ecx+0x29800627],0x28
  415976:	(bad)  
  415977:	jg     0x415996
  415979:	sub    dh,dh
  41597b:	jg     0x415980
  41597d:	sub    BYTE PTR [eax],al
  41597f:	out    dx,al
  415980:	jg     0x415961
  415982:	daa    
  415983:	out    0x7f,al
  415985:	ins    DWORD PTR es:[edi],dx
  415986:	daa    
  415987:	fidivr WORD PTR [edi-0x79]
  41598a:	daa    
  41598b:	(bad)  
  41598c:	jg     0x415a09
  41598e:	daa    
  41598f:	into   
  415990:	jg     0x415915
  415992:	daa    
  415993:	(bad)  
  415994:	jg     0x4159c5
  415996:	daa    
  415997:	mov    esi,0x5e15007f
  41599c:	jg     0x41599b
  41599e:	cmp    eax,0x27fd7f56
  4159a3:	pop    esi
  4159a4:	jg     0x4159a3
  4159a6:	out    dx,eax
  4159a7:	push   edi
  4159a8:	jg     0x4159a7
  4159aa:	iret   
  4159ab:	pop    edi
  4159ac:	jg     0x4159ab
  4159ae:	stos   DWORD PTR es:[edi],eax
  4159af:	push   edi
  4159b0:	jg     0x4159af
  4159b2:	mov    ds:0x87fd7f5f,eax
  4159b7:	push   edi
  4159b8:	jg     0x4159b7
  4159ba:	popa   
  4159bb:	pop    ds
  4159bc:	jg     0x4159bb
  4159be:	dec    ecx
  4159bf:	pop    ss
  4159c0:	jg     0x4159bf
  4159c2:	mov    eax,ds:0xa5fd7e58
  4159c7:	pop    eax
  4159c8:	jle    0x4159c7
  4159ca:	mov    bl,0x58
  4159cc:	jle    0x4159cb
  4159ce:	ret    
  4159cf:	pop    eax
  4159d0:	jle    0x4159cf
  4159d2:	mov    ebx,0xf1fd7e58
  4159d7:	pop    eax
  4159d8:	jle    0x4159d7
  4159da:	rcr    DWORD PTR [eax],1
  4159dc:	jle    0x4159db
  4159de:	cmc    
  4159df:	sbb    BYTE PTR [esi-0x3],bh
  4159e2:	das    
  4159e3:	add    BYTE PTR [ebx],bl
  4159e5:	jle    0x4159e4
  4159e7:	xor    eax,0xdfd7e1b
  4159ec:	sbb    edi,DWORD PTR [esi-0x3]
  4159ef:	adc    eax,0x6bfd7e1b
  4159f4:	sbb    edi,DWORD PTR [esi-0x3]
  4159f7:	jmp    0x47415a36
  4159fc:	fstp   TBYTE PTR [ebp-0x3]
  4159ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a00:	fstp   TBYTE PTR [ebp-0x3]
  415a03:	inc    edi
  415a04:	fstp   TBYTE PTR [ebp-0x3]
  415a07:	dec    edi
  415a08:	fstp   TBYTE PTR [ebp-0x3]
  415a0b:	push   edi
  415a0c:	fstp   TBYTE PTR [ebp-0x3]
  415a0f:	sti    
  415a10:	fstp   TBYTE PTR [ebp-0x3]
  415a13:	add    al,dl
  415a15:	add    al,BYTE PTR [eax]
  415a17:	add    BYTE PTR [ebx+eiz*2],ch
  415a1a:	(bad)  
  415a1b:	jmp    DWORD PTR [eax-0x2bfffffe]
  415a21:	popa   
  415a22:	(bad)  
  415a23:	jmp    esp
  415a25:	popa   
  415a26:	(bad)  
  415a27:	dec    eax
  415a29:	popa   
  415a2a:	(bad)  
  415a2b:	push   DWORD PTR [esi+0x14fffe61]
  415a31:	arpl   si,di
  415a33:	jmp    esp
  415a35:	(bad)  
  415a36:	(bad)  
  415a37:	push   esp
  415a39:	(bad)  
  415a3a:	(bad)  
  415a3b:	push   DWORD PTR [esi]
  415a3d:	arpl   si,di
  415a3f:	call   DWORD PTR [esi]
  415a41:	arpl   si,di
  415a43:	(bad)  
  415a44:	jl     0x415aa7
  415a46:	(bad)  
  415a47:	inc    DWORD PTR [eax]
  415a49:	push   eax
  415a4a:	add    al,BYTE PTR [eax]
  415a4c:	add    BYTE PTR [edx+0x61],ch
  415a4f:	(bad)  
  415a50:	jmp    DWORD PTR [eax+0x2]
  415a53:	add    BYTE PTR [eax],al
  415a55:	data16 (bad) 
  415a57:	(bad)  
  415a58:	jmp    FWORD PTR [edx]
  415a5a:	fs (bad) 
  415a5c:	jmp    DWORD PTR [eax]
  415a5e:	add    al,BYTE PTR [eax]
  415a60:	add    BYTE PTR [esp+eiz*2-0x2],cl
  415a64:	(bad)  
  415a65:	js     0x415acb
  415a67:	(bad)  
  415a68:	push   DWORD PTR [esp+eiz*2]
  415a6b:	(bad)  
  415a6c:	push   DWORD PTR [eax]
  415a6e:	fs (bad) 
  415a70:	jmp    FWORD PTR [edx]
  415a72:	fs (bad) 
  415a74:	call   DWORD PTR [esi+0x10fffe61]
  415a7a:	add    al,BYTE PTR [eax]
  415a7c:	add    BYTE PTR [esi+0x7afffe61],cl
  415a82:	popa   
  415a83:	(bad)  
  415a84:	call   FWORD PTR [edx+0x14fffe61]
  415a8a:	popa   
  415a8b:	(bad)  
  415a8c:	(bad)  
  415a8d:	cmp    DWORD PTR ds:0x2bcefee1,esp
  415a93:	loope  0x415a93
  415a95:	(bad)  
  415a96:	retf   
  415a97:	loopne 0x415a97
  415a99:	mov    esi,0xb6fee0cd
  415a9e:	cmp    eax,0x63aefee1
  415aa3:	in     al,0xfe
  415aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa6:	add    DWORD PTR [bx+si],eax
  415aa9:	cmp    DWORD PTR [ebp-0x1c],edi
  415aac:	inc    BYTE PTR [eax]
  415aae:	xchg   esi,eax
  415aaf:	pop    ecx
  415ab0:	in     al,0xfe
  415ab2:	mov    fs,WORD PTR [edi+0x1]
  415ab5:	add    BYTE PTR [ecx],bh
  415ab7:	inc    esp
  415ab8:	add    DWORD PTR [ecx+0xb],eax
  415abb:	test   ah,ah
  415abd:	jae    0x415a9b
  415abf:	lods   al,BYTE PTR ds:[esi]
  415ac0:	in     al,dx
  415ac1:	imul   edx,esp,0xffffffa7
  415ac4:	add    DWORD PTR [edi],edi
  415ac6:	cmp    edi,DWORD PTR [ecx]
  415ac8:	in     eax,0x5e
  415aca:	aad    0x24
  415acc:	jmp    0x1a8373c
  415ad1:	and    DWORD PTR [ecx],edi
  415ad3:	sub    dh,al
  415ad5:	ins    BYTE PTR es:[edi],dx
  415ad6:	retf   0xcbcb
  415ad9:	pop    esi
  415ada:	iret   
  415adb:	ret    0x62ef
  415ade:	cmp    DWORD PTR [edx-0x3f54aafa],esi
  415ae4:	mul    DWORD PTR [edx+0x7f]
  415ae7:	adc    al,dh
  415ae9:	bound  edi,QWORD PTR [ecx]
  415aeb:	jl     0x415af1
  415aed:	ins    BYTE PTR es:[edi],dx
  415aee:	mov    bl,BYTE PTR [ebx]
  415af0:	imul   BYTE PTR [ebx-0x6c]
  415af3:	jge    0x415ab7
  415af5:	inc    DWORD PTR [esi]
  415af7:	aaa    
  415af8:	add    DWORD PTR [ebp-0x73],eax
  415afb:	push   cs
  415afc:	out    0x5e,al
  415afe:	gs and ebp,edi
  415b01:	pusha  
  415b02:	bound  esp,QWORD PTR [edi+0x1]
  415b05:	mov    ch,0x38
  415b07:	add    BYTE PTR [esi-0x381db211],ch
  415b0d:	out    dx,eax
  415b0e:	imul   ebp,esi,0xffffffc2
  415b11:	lock add BYTE PTR [ecx-0x17],bl
  415b15:	out    0x3,al
  415b17:	int    0xfe
  415b19:	mov    dl,0xf0
  415b1b:	pop    ecx
  415b1c:	(bad)  
  415b1e:	leave  
  415b1f:	sub    bl,ah
  415b21:	retf   
  415b22:	add    ebp,DWORD PTR [ecx+0x19f09afe]
  415b28:	fist   WORD PTR [edx-0x7213ed3e]
  415b2e:	in     al,0x96
  415b30:	jl     0x415b22
  415b32:	add    al,0x1d
  415b34:	icebp  
  415b35:	xchg   edx,eax
  415b36:	cmc    
  415b37:	sbb    eax,esi
  415b39:	jg     0x415afd
  415b3b:	jle    0x415bb9
  415b3d:	fiadd  DWORD PTR [eiz*8-0x260a8510]
  415b44:	fidiv  WORD PTR [edx-0x3e]
  415b47:	data16 jl 0x415b48
  415b4a:	add    dh,ah
  415b4c:	loop   0x415ba0
  415b4e:	retf   0xebdf
  415b51:	dec    ebx
  415b52:	ret    
  415b53:	retf   0x58f3
  415b56:	jmp    0x415b30
  415b58:	repnz cmp ah,bh
  415b5b:	leave  
  415b5c:	mov    esi,0xd203e6
  415b61:	sub    al,0xfc
  415b63:	sahf   
  415b64:	loope  0x415ba2
  415b66:	call   0xeb5e45e6
  415b6b:	test   al,0xeb
  415b6d:	or     al,0xef
  415b6f:	fwait
  415b70:	jmp    0xf1ff:0xee8ad51a
  415b77:	add    BYTE PTR [ebp+0x1d0427ef],bl
  415b7d:	add    DWORD PTR [esi],esp
  415b7f:	out    0x6a,eax
  415b81:	ret    0xffff
  415b84:	jmp    0xe741ac67
  415b89:	fdivp  st(7),st
  415b8b:	es xor eax,0xdbc471c1
  415b91:	out    dx,eax
  415b92:	bound  ebp,QWORD PTR [edi-0x639d181d]
  415b98:	fucomi st,st(3)
  415b9a:	outs   dx,DWORD PTR ds:[esi]
  415b9b:	ror    al,1
  415b9d:	in     al,0x3e
  415b9f:	jmp    0xa4435bde
  415ba4:	fwait
  415ba5:	jmp    0x415bfc
  415ba7:	rcr    BYTE PTR [edi+0x708f4cf4],0xe2
  415bae:	imul   eax,DWORD PTR [edx+edi*1-0x7743fdaf],0xffffffe6
  415bb6:	pop    esi
  415bb7:	cdq    
  415bb8:	pusha  
  415bb9:	loop   0x415c1d
  415bbb:	jle    0x415c26
  415bbd:	in     eax,0x45
  415bbf:	nop
  415bc0:	data16 fdivp st(7),st
  415bc3:	add    bh,BYTE PTR [ebx]
  415bc5:	int3   
  415bc6:	ins    BYTE PTR es:[edi],dx
  415bc7:	mov    BYTE PTR [esi-0x39],bl
  415bca:	dec    bx
  415bcc:	imul   ebx,edx,0x71
  415bcf:	pusha  
  415bd0:	jl     0x415c4d
  415bd2:	std    
  415bd3:	cmp    dh,BYTE PTR [eax*8-0xe92aa9e]
  415bda:	ins    BYTE PTR es:[edi],dx
  415bdb:	dec    edx
  415bdc:	add    BYTE PTR [edi+ebx*8+0x63],dh
  415be0:	cmp    esp,DWORD PTR [eax]
  415be2:	lock jo 0x415bce
  415be5:	cmp    al,BYTE PTR [edi+edi*8+0x53ef1025]
  415bec:	or     al,0x28
  415bee:	jmp    0x415c3f
  415bf0:	or     BYTE PTR [ecx],dl
  415bf2:	jecxz  0x415c32
  415bf4:	jmp    0x2a418b33
  415bf9:	or     ebx,esi
  415bfb:	pop    esi
  415bfc:	add    ah,bh
  415bfe:	addr16 inc ecx
  415c00:	imul   esi,edx,0x37746067
  415c06:	outs   dx,BYTE PTR ds:[esi]
  415c07:	jbe    0x415c4a
  415c09:	sar    dh,1
  415c0b:	add    BYTE PTR fs:[edi+eiz*2+0x67ec6569],cl
  415c13:	inc    ebx
  415c14:	imul   esi,esp,0xd0003e67
  415c1a:	add    eax,DWORD PTR [ebx+0x65]
  415c1d:	jl     0x415c5c
  415c1f:	jb     0x415c93
  415c21:	repnz imul esi,DWORD PTR [si-0x30],0x70
  415c27:	ins    BYTE PTR es:[edi],dx
  415c28:	arpl   WORD PTR [ebp+0x6d],di
  415c2b:	jo     0x415c2d
  415c2d:	inc    eax
  415c2e:	(bad)  
  415c2f:	push   edx
  415c30:	imul   edi,DWORD PTR [edi+eiz*2+0x70c16840],0x77a56f51
  415c3b:	imul   esi,DWORD PTR [ecx+ebp*4+0x40],0xbd007476
  415c43:	(bad)  
  415c44:	lods   al,BYTE PTR ds:[esi]
  415c45:	add    BYTE PTR [esi-0x619b9495],bl
  415c4b:	imul   ebp,DWORD PTR [edi+0x73],0xfffffffc
  415c4f:	inc    ecx
  415c50:	data16 ins BYTE PTR es:[edi],dx
  415c52:	std    
  415c53:	inc    esp
  415c54:	std    
  415c55:	dec    DWORD PTR [edi-0x3]
  415c58:	imul   esi,DWORD PTR [ebx-0x14],0x6d
  415c5c:	pusha  
  415c5d:	ins    DWORD PTR es:[edi],dx
  415c5e:	add    BYTE PTR [ebp+0x3e],ch
  415c61:	add    BYTE PTR [edx+0x766945fd],bh
  415c67:	push   0x7868654b
  415c6c:	inc    ebx
  415c6d:	imul   eax,DWORD PTR [edi+eiz*2+0x3e],0x45fd8500
  415c75:	imul   edi,DWORD PTR [ecx],0x9540e801
  415c7b:	jp     0x415c6f
  415c7d:	bound  edi,QWORD PTR [ecx]
  415c7f:	mov    ebx,0x735c4504
  415c84:	shr    BYTE PTR [ebp+edx*2+0x7c],1
  415c88:	in     eax,dx
  415c89:	bound  esi,QWORD PTR [ecx+0x8]
  415c8c:	out    dx,al
  415c8d:	arpl   WORD PTR [ebp+0x4c],cx
  415c90:	(bad)  
  415c91:	call   esi
  415c93:	icebp  
  415c94:	add    eax,DWORD PTR [ebp+0x54]
  415c97:	pop    ebx
  415c98:	shl    DWORD PTR [edx+0x4b],cl
  415c9b:	push   esi
  415c9c:	in     al,dx
  415c9d:	ins    BYTE PTR es:[edi],dx
  415c9e:	dec    edi
  415c9f:	lods   al,BYTE PTR ds:[esi]
  415ca0:	stc    
  415ca1:	cmp    DWORD PTR ds:0x14004503,ecx
  415ca8:	mov    ebx,0x481a6ccd
  415cad:	in     eax,dx
  415cae:	(bad)  
  415caf:	lock nop
  415cb1:	jecxz  0x415d1f
  415cb3:	clc    
  415cb4:	add    WORD PTR [eax+edi*1-0x56],si
  415cb9:	call   0xf2d14731
  415cbe:	jae    0x415cd4
  415cc0:	xchg   esp,eax
  415cc1:	int3   
  415cc2:	ins    DWORD PTR es:[edi],dx
  415cc3:	fisttp WORD PTR [ecx-0x55c75fff]
  415cc9:	call   0xebc16b41
  415cce:	arpl   si,cx
  415cd0:	fldz   
  415cd2:	inc    ebx
  415cd3:	loopne 0x415ca9
  415cd5:	in     al,0x60
  415cd7:	vpsllw xmm6,xmm7,XMMWORD PTR [esi-0x8]
  415cdc:	add    WORD PTR [ebp+0x38],cx
  415ce0:	sub    ah,ch
  415ce2:	jae    0x415c6d
  415ce4:	xor    eax,0x3b9875e9
  415ce9:	in     eax,0x4f
  415ceb:	stos   DWORD PTR es:[edi],eax
  415cec:	cmp    ah,dh
  415cee:	lea    ax,[eax]
  415cf1:	or     al,0xd1
  415cf3:	mov    ch,dh
  415cf5:	pmaxsw mm2,QWORD PTR [ebp-0x7cfc1941]
  415cfc:	(bad)  
  415cfd:	cmp    edi,esp
  415cff:	mov    bh,BYTE PTR [ebp-0x1c970e05]
  415d05:	or     al,0xf8
  415d07:	jp     0x415cf0
  415d09:	clc    
  415d0a:	out    0x0,al
  415d0c:	pop    ecx
  415d0d:	hlt    
  415d0e:	std    
  415d0f:	icebp  
  415d10:	addr16 mov edi,0xfd2a03e6
  415d16:	retf   0x4af0
  415d19:	out    dx,al
  415d1a:	leave  
  415d1b:	out    dx,al
  415d1c:	push   esi
  415d1d:	mov    edi,0xff6d03e6
  415d22:	lods   eax,DWORD PTR ds:[esi]
  415d23:	out    0x2a,al
  415d25:	sar    BYTE PTR [eax-0x4520db16],1
  415d2b:	out    0xf6,al
  415d2d:	in     eax,dx
  415d2e:	mov    ebp,0x8bec17e5
  415d33:	rcr    BYTE PTR [ebx],1
  415d35:	fst    QWORD PTR [edx-0x5b15e216]
  415d3b:	loop   0x415d50
  415d3d:	jecxz  0x415cd8
  415d3f:	ret    0x787e
  415d42:	mov    al,0x2
  415d44:	cld    
  415d45:	loop   0x415db9
  415d47:	shr    eax,cl
  415d49:	out    0x7c,al
  415d4b:	loop   0x415d37
  415d4d:	loop   0x415ce5
  415d4f:	icebp  
  415d50:	int    0xe1
  415d52:	dec    edi
  415d53:	lock fcmovnb st,st(6)
  415d56:	dec    esp
  415d57:	clc    
  415d58:	lldt   bp
  415d5b:	add    edi,esp
  415d5d:	loop   0x415db1
  415d5f:	ror    ebx,0xed
  415d62:	cmp    bh,ah
  415d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d65:	in     al,dx
  415d66:	and    ch,bl
  415d68:	test   al,0xdd
  415d6a:	dec    DWORD PTR [ecx+0x21]
  415d6d:	in     eax,0x71
  415d6f:	xor    BYTE PTR [eax],al
  415d71:	cli    
  415d72:	ja     0x415d71
  415d74:	pop    es
  415d75:	cmp    ah,ah
  415d77:	jo     0x415d8e
  415d79:	or     ebp,esp
  415d7b:	bound  eax,QWORD PTR [edi]
  415d7d:	in     al,dx
  415d7e:	ja     0x415d7d
  415d80:	fdivr  QWORD PTR [eax]
  415d82:	retf   
  415d83:	jb     0x415d9a
  415d85:	icebp  
  415d86:	fiadd  WORD PTR [ecx+0x0]
  415d89:	icebp  
  415d8a:	loop   0x415ddf
  415d8c:	push   es
  415d8d:	or     al,0xdf
  415d8f:	arpl   WORD PTR [eax+edi*8],ax
  415d92:	fistp  WORD PTR [esi-0x25]
  415d95:	cmp    cl,BYTE PTR [ebx-0xc285a01]
  415d9b:	push   ebx
  415d9c:	rcr    cl,0xe8
  415d9f:	inc    eax
  415da0:	mov    esi,0xe973e5c7
  415da5:	cmp    bh,BYTE PTR [ecx-0x1d6165fe]
  415dab:	bound  edi,QWORD PTR [ecx-0x5a00cdc6]
  415db1:	xchg   edi,eax
  415db2:	repz dec edx
  415db4:	xchg   esi,eax
  415db5:	sahf   
  415db6:	repnz imul eax,DWORD PTR [esp+esi*2+0x748c6bde],0xffffffd6
  415dbf:	push   0xffffff84
  415dc1:	jnp    0x415e3a
  415dc3:	std    
  415dc4:	sar    DWORD PTR [ebx],1
  415dc6:	mov    ebp,0xd67e7562
  415dcb:	jo     0x415e4a
  415dcd:	jg     0x415dc0
  415dcf:	jno    0x415e4f
  415dd1:	push   0x40fd77
  415dd6:	cmp    eax,0x544471c1
  415ddb:	repz bound edi,QWORD PTR ds:0x416be452
  415de2:	pop    eax
  415de3:	jmp    0x415e54
  415de5:	add    BYTE PTR [ebx],dh
  415de7:	sub    eax,0x6c816e4f
  415dec:	jo     0x415e56
  415dee:	jg     0x415e60
  415df0:	std    
  415df1:	push   DWORD PTR ds:0x2f724ffe
  415df7:	pop    edi
  415df8:	bound  esi,QWORD PTR [ebx+0x33]
  415dfb:	das    
  415dfc:	xor    al,BYTE PTR [esi+0x39]
  415dff:	outs   dx,BYTE PTR ds:[esi]
  415e00:	jo     0x415e76
  415e02:	adc    BYTE PTR [ebx],al
  415e04:	sbb    BYTE PTR [edx],al
  415e06:	das    
  415e07:	ins    BYTE PTR es:[edi],dx
  415e08:	bound  ebp,QWORD PTR [esi+0x50]
  415e0b:	outs   dx,BYTE PTR ds:[esi]
  415e0c:	ins    BYTE PTR es:[edi],dx
  415e0d:	arpl   WORD PTR ds:0xf700706f,si
  415e13:	cld    
  415e14:	dec    edi
  415e15:	jb     0x415e06
  415e17:	pop    ebp
  415e18:	bound  esi,QWORD PTR [ebx-0xd]
  415e1b:	sub    eax,0x7af54e32
  415e20:	jno    0x415e22
  415e22:	ja     0x415e21
  415e24:	dec    ebx
  415e25:	inc    ebx
  415e26:	in     eax,dx
  415e27:	pop    ebx
  415e28:	ins    DWORD PTR es:[edi],dx
  415e29:	push   ebx
  415e2a:	in     al,0x6c
  415e2c:	data16 outs dx,BYTE PTR ds:[esi]
  415e2e:	ja     0x415e6b
  415e30:	std    
  415e31:	dec    DWORD PTR [ebx]
  415e33:	cld    
  415e34:	inc    eax
  415e35:	js     0x415de0
  415e37:	dec    bp
  415e39:	jb     0x415e3b
  415e3b:	mov    edi,0xa373625d
  415e40:	add    ch,BYTE PTR [ebp+0x715fc302]
  415e46:	push   ebp
  415e47:	into   
  415e48:	push   0x5e
  415e4a:	outs   dx,BYTE PTR ds:[esi]
  415e4b:	mov    ah,0x5e
  415e4d:	bound  esp,QWORD PTR [ebp+edx*4+0x7a]
  415e51:	pusha  
  415e52:	gs loopne 0x415ebb
  415e55:	outs   dx,WORD PTR ds:[esi]
  415e57:	out    dx,al
  415e58:	inc    ecx
  415e59:	data16 ins BYTE PTR es:[edi],dx
  415e5b:	in     al,0x60
  415e5d:	outs   dx,DWORD PTR ds:[esi]
  415e5e:	add    BYTE PTR [ecx],bh
  415e60:	ret    0x71de
  415e63:	iret   
  415e64:	mov    ebx,0xd6b30e7
  415e69:	loopne 0x415ed6
  415e6b:	popf   
  415e6c:	add    DWORD PTR [bx+di+0x2a39],ecx
  415e71:	mul    BYTE PTR [edx-0x68]
  415e74:	sub    ebx,edi
  415e76:	push   eax
  415e77:	lea    ebx,[ecx]
  415e79:	fistp  WORD PTR [esi-0x64]
  415e7c:	es jmp 0x9861:0xe8fb7e47
  415e84:	jae    0x415e87
  415e86:	xchg   ebp,eax
  415e87:	cmp    DWORD PTR [esi],esp
  415e89:	fbstp  TBYTE PTR [ebx-0x7f]
  415e8c:	push   ds
  415e8d:	call   0xe849b9fe
  415e92:	inc    ebp
  415e93:	imul   esi,DWORD PTR [esi-0x18],0x50
  415e97:	dec    ebp
  415e98:	pop    ecx
  415e99:	loopne 0x415ef9
  415e9b:	pop    esp
  415e9c:	add    DWORD PTR ds:0x3900,ecx
  415ea1:	stos   BYTE PTR es:[edi],al
  415ea2:	jmp    0x1c73:0xe43c4b40
  415ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eaa:	lock adc ax,0x167
  415eaf:	pusha  
  415eb0:	cmp    DWORD PTR [edx-0x45e7ac16],ebp
  415eb6:	out    dx,al
  415eb7:	dec    edx
  415eb8:	sbb    al,0x8c
  415eba:	mov    edi,0x17c1471
  415ebf:	or     eax,0x40eaaa39
  415ec4:	or     edi,DWORD PTR [esp+eiz*8+0x73]
  415ec8:	fsubr  QWORD PTR [edi-0x781a8f19]
  415ece:	out    0x60,eax
  415ed0:	fsub   QWORD PTR [esi+0x1]
  415ed3:	icebp  
  415ed4:	cmp    DWORD PTR [esi+0x62e5],edx
  415eda:	push   ebp
  415edb:	jmp    0x415ea7
  415edd:	out    0x47,al
  415edf:	call   0x48d58c3
  415ee4:	int3   
  415ee5:	jecxz  0x415f2a
  415ee7:	xor    eax,0xe84b266b
  415eec:	mov    ds:0xac063c00,al
  415ef1:	icebp  
  415ef2:	not    BYTE PTR ss:[edi+0x57e232e6]
  415ef9:	add    BYTE PTR [esi*8+0x35d9f29b],bl
  415f00:	push   edi
  415f01:	fadd   QWORD PTR [edx]
  415f03:	call   0xb7b65d08
  415f08:	add    ecx,DWORD PTR [ebx+0x5ec90ddb]
  415f0e:	fisttp DWORD PTR [ecx*8-0x3d408a5]
  415f15:	pop    ds
  415f16:	add    BYTE PTR [ecx-0x322494fd],dl
  415f1c:	ror    BYTE PTR [ebx-0x25],cl
  415f1f:	fdivr  st,st(2)
  415f21:	ins    BYTE PTR es:[edi],dx
  415f22:	ffreep st(2)
  415f24:	out    dx,al
  415f25:	pop    ebx
  415f26:	mov    ebx,0x74b6c2ce
  415f2b:	jle    0x415f30
  415f2d:	or     ebx,ebx
  415f2f:	(bad)
  415f32:	in     eax,0xb9
  415f34:	fdivrp st(1),st
  415f36:	fisubr DWORD PTR [edi-0x47017bfd]
  415f3c:	ficom  WORD PTR ds:0x14de96c5
  415f42:	leave  
  415f43:	mov    edi,edx
  415f45:	aas    
  415f46:	add    BYTE PTR [ebx],ah
  415f48:	add    ecx,DWORD PTR [ebx]
  415f4a:	fisttp DWORD PTR [ebp-0x74152342]
  415f50:	int3   
  415f51:	fcomi  st,st(6)
  415f53:	jmp    FWORD PTR [ebx+0x33003562]
  415f59:	cmp    dl,dl
  415f5b:	bound  ecx,QWORD PTR [esi+0x74]
  415f5e:	out    dx,al
  415f5f:	bound  ecx,QWORD PTR [eax+0x49]
  415f62:	loope  0x415fac
  415f64:	dec    esp
  415f65:	inc    edx
  415f66:	xor    eax,0x3b00c600
  415f6b:	into   
  415f6c:	bound  ecx,QWORD PTR [esi+0x4]
  415f6f:	fbstp  TBYTE PTR [ebx+0x17]
  415f72:	sbb    ch,al
  415f74:	jb     0x415fc2
  415f76:	fsubp  st(3),st
  415f78:	ds jmp 0x3b409cb8
  415f7e:	out    dx,al
  415f7f:	fadd   QWORD PTR [edx+0xf]
  415f82:	push   ss
  415f83:	out    0x55,eax
  415f85:	or     BYTE PTR [ecx],dl
  415f87:	out    dx,eax
  415f88:	bound  ebp,QWORD PTR [eax]
  415f8a:	cmp    eax,0xe1aff42
  415f8f:	fisttp QWORD PTR [ecx+edi*8+0x7]
  415f93:	out    0x40,al
  415f95:	cld    
  415f96:	in     al,0xf1
  415f98:	(bad)  
  415f99:	jmp    esi
  415f9b:	into   
  415f9c:	jo     0x415f6a
  415f9e:	les    esi,FWORD PTR [ebx-0x3]
  415fa1:	add    bh,BYTE PTR [edx]
  415fa3:	mov    ebp,0xf0efdd62
  415fa8:	(bad)  
  415fa9:	fild   DWORD PTR [eax+0x7bcc6ad2]
  415faf:	jae    0x415fae
  415fb1:	enter  0xed86,0x5e
  415fb5:	mov    ecx,0xff323093
  415fba:	jbe    0x415fa3
  415fbc:	imul   ebp,ecx,0x3a
  415fbf:	dec    ebx
  415fc0:	add    BYTE PTR [edx-0x7a94216e],bh
  415fc6:	mov    edi,0x678a62eb
  415fcb:	out    dx,eax
  415fcc:	bound  eax,QWORD PTR [eax]
  415fce:	add    BYTE PTR [ecx-0x42979101],ah
  415fd4:	pop    ebx
  415fd5:	imul   esi,DWORD PTR [ebx],0x6c6429a2
  415fdb:	aam    0xfe
  415fdd:	je     0x415fdf
  415fdf:	or     DWORD PTR [edx+0x71],ebx
  415fe2:	gs loop 0x41603e
  415fe5:	bound  esi,QWORD PTR [ebx+edx*1+0x6e]
  415fe9:	pop    esi
  415fea:	arpl   WORD PTR [ebx+0x51],di
  415fed:	outs   dx,DWORD PTR ds:[esi]
  415fee:	ins    BYTE PTR es:[edi],dx
  415fef:	popa   
  415ff0:	cld    
  415ff1:	jbe    0x415ff3
  415ff3:	imul   ebx,DWORD PTR [edx+0x71],0x625a6265
  415ffa:	je     0x41605f
  415ffc:	outs   dx,BYTE PTR ds:[esi]
  415ffd:	bound  esp,QWORD PTR [ecx+0x2c]
  416000:	popa   
  416001:	push   edx
  416002:	jb     0x416038
  416004:	cmp    eax,0x651ffffd
  416009:	imul   ebp,DWORD PTR [ecx-0xa],0x5f
  41600d:	jno    0x41603d
  41600f:	cmp    al,0x68
  416011:	imul   eax,DWORD PTR [eax],0x744efbd5
  416017:	loop   0x416066
  416019:	jno    0x41608d
  41601b:	sbb    DWORD PTR ds:0xfbe0fffd,edi
  416021:	dec    esi
  416022:	je     0x416006
  416024:	push   eax
  416025:	inc    eax
  416026:	push   0x3e43e2
  41602b:	lods   al,BYTE PTR ds:[esi]
  41602c:	sti    
  41602d:	dec    esi
  41602e:	je     0x416022
  416030:	inc    edx
  416031:	ins    BYTE PTR es:[edi],dx
  416032:	dec    ecx
  416033:	add    BYTE PTR [esi+0x62],dh
  416036:	add    BYTE PTR ds:[ebx+edi*8+0x4dd2744e],dl
  41603e:	jno    0x4160b2
  416040:	loope  0x416040
  416042:	jmp    0x6fa42347
  416047:	inc    ebx
  416048:	cmp    DWORD PTR [ecx+esi*8+0x4d],edi
  41604c:	add    BYTE PTR [eax-0x69c7f1ff],ch
  416052:	in     eax,dx
  416053:	jno    0x41605f
  416055:	in     eax,dx
  416056:	out    dx,al
  416057:	inc    esi
  416058:	push   es
  416059:	imul   eax,DWORD PTR [ecx],0xedf4e171
  41605f:	pop    esi
  416060:	leave  
  416061:	iret   
  416062:	and    eax,0x3c4d564
  416067:	ss cmp eax,eax
  41606a:	in     eax,0x62
  41606c:	lods   eax,DWORD PTR ds:[esi]
  41606d:	and    ah,bl
  41606f:	arpl   WORD PTR [ebp+0x392a0435],dx
  416075:	mov    edx,0xba9173de
  41607a:	lock jae 0x416018
  41607d:	xor    dh,ah
  41607f:	pop    esi
  416080:	pushf  
  416081:	add    al,0x4
  416083:	inc    edi
  416084:	cmp    DWORD PTR [esi],edx
  416086:	in     eax,0x60
  416088:	xchg   edx,eax
  416089:	add    al,0xf0
  41608b:	push   esi
  41608d:	cmp    al,BYTE PTR [ecx]
  41608f:	popa   
  416090:	pop    esi
  416091:	or     esi,esp
  416093:	bound  ebx,QWORD PTR [edx+0x6b]
  416096:	add    DWORD PTR [esi],esp
  416098:	add    BYTE PTR [ecx],bh
  41609a:	push   es
  41609b:	call   0xf13dab0c
  4160a0:	ins    BYTE PTR es:[edi],dx
  4160a1:	pop    edx
  4160a2:	dec    esi
  4160a3:	loopne 0x416118
  4160a5:	cmp    DWORD PTR [ebx+0x39547101],ebx
  4160ab:	(bad)  
  4160ad:	mov    dh,0xa6
  4160af:	add    DWORD PTR [ecx+0x14],esi
  4160b2:	dec    ebx
  4160b3:	loopne 0x416115
  4160b5:	sub    eax,0x393e0167
  4160ba:	mov    ch,0xe0
  4160bc:	pusha  
  4160bd:	packuswb mm0,QWORD PTR [ecx]
  4160c0:	inc    ebp
  4160c1:	cmp    DWORD PTR [eax],eax
  4160c3:	call   0x11e2:0x8ded0ae0
  4160ca:	loope  0x416062
  4160cc:	out    dx,eax
  4160cd:	jbe    0x416140
  4160cf:	enter  0x403,0xcd
  4160d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d4:	shr    dl,cl
  4160d6:	fidivr WORD PTR [eax-0x11]
  4160d9:	jmp    0x4160ca
  4160db:	out    0x3,al
  4160dd:	int3   
  4160de:	in     al,dx
  4160df:	jge    0x4160c3
  4160e1:	loope  0x41610f
  4160e3:	sbb    DWORD PTR [esi],esp
  4160e5:	fucom  st(3)
  4160e7:	dec    edx
  4160e8:	add    al,0xf2
  4160ea:	jmp    DWORD PTR [edx]
  4160ec:	in     eax,0x97
  4160ee:	fdiv   QWORD PTR [ebx]
  4160f0:	icebp  
  4160f1:	fwait
  4160f2:	out    dx,al
  4160f3:	push   ss
  4160f4:	repnz xchg ebp,eax
  4160f6:	fimul  DWORD PTR [edi-0x18]
  4160f9:	fwait
  4160fa:	mov    edi,0x760003e6
  4160ff:	add    BYTE PTR [esi+eiz*8],dl
  416102:	mov    ds:0x6be007e1,al
  416107:	in     eax,dx
  416108:	add    esi,edx
  41610a:	outs   dx,BYTE PTR ds:[esi]
  41610b:	out    dx,al
  41610c:	add    eax,0x3e45fde
  416111:	add    al,0x6a
  416113:	in     eax,dx
  416114:	or     esi,edx
  416116:	pop    ebx
  416117:	loop   0x41610d
  416119:	and    eax,0x402e455
  41611e:	cmp    DWORD PTR [eax],eax
  416120:	out    0x3,eax
  416122:	cmp    DWORD PTR [eax],eax
  416124:	out    0x3,eax
  416126:	cmp    DWORD PTR [eax],eax
  416128:	out    0x3,eax
  41612a:	cmp    DWORD PTR [eax],eax
  41612c:	out    0x3,eax
  41612e:	cmp    DWORD PTR [eax],eax
  416130:	out    0x3,eax
  416132:	cmp    DWORD PTR [eax],eax
  416134:	out    0x3,eax
  416136:	cmp    DWORD PTR [eax],eax
  416138:	out    0x3,eax
  41613a:	cmp    DWORD PTR [eax],eax
  41613c:	add    cl,ch
  41613e:	cmp    al,BYTE PTR [eax]
  416140:	add    cl,ch
  416142:	cmp    al,BYTE PTR [eax]
  416144:	add    cl,ch
  416146:	cmp    al,BYTE PTR [eax]
  416148:	add    cl,ch
  41614a:	cmp    al,BYTE PTR [eax]
  41614c:	add    cl,ch
  41614e:	cmp    al,BYTE PTR [eax]
  416150:	add    cl,ch
  416152:	cmp    al,BYTE PTR [eax]
  416154:	add    cl,ch
  416156:	cmp    al,BYTE PTR [eax]
  416158:	add    cl,ch
  41615a:	cmp    al,BYTE PTR [eax]
  41615c:	add    cl,ch
  41615e:	cmp    al,BYTE PTR [eax]
  416160:	add    cl,ch
  416162:	add    BYTE PTR [edx],bh
  416164:	add    BYTE PTR [eax],al
  416166:	jmp    0xe94161a5
  41616b:	cmp    al,BYTE PTR [eax]
  41616d:	add    cl,ch
  41616f:	cmp    al,BYTE PTR [eax]
  416171:	add    cl,ch
  416173:	cmp    al,BYTE PTR [eax]
  416175:	add    cl,ch
  416177:	cmp    al,BYTE PTR [eax]
  416179:	add    cl,ch
  41617b:	cmp    al,BYTE PTR [eax]
  41617d:	add    cl,ch
  41617f:	cmp    al,BYTE PTR [eax]
  416181:	add    cl,ch
  416183:	cmp    al,BYTE PTR [eax]
  416185:	add    cl,ch
  416187:	cmp    al,BYTE PTR [eax]
  416189:	add    cl,ch
  41618b:	cmp    al,BYTE PTR [eax]
  41618d:	add    cl,ch
  41618f:	cmp    al,BYTE PTR [eax]
  416191:	add    cl,ch
  416193:	cmp    al,BYTE PTR [eax]
  416195:	add    cl,ch
  416197:	cmp    al,BYTE PTR [eax]
  416199:	add    cl,ch
  41619b:	cmp    al,BYTE PTR [eax]
  41619d:	add    cl,ch
  41619f:	cmp    al,BYTE PTR [eax]
  4161a1:	add    cl,ch
  4161a3:	cmp    al,BYTE PTR [eax]
  4161a5:	add    cl,ch
  4161a7:	cmp    al,BYTE PTR [eax]
  4161a9:	add    cl,ch
  4161ab:	cmp    al,BYTE PTR [eax]
  4161ad:	add    cl,ch
  4161af:	cmp    al,BYTE PTR [eax]
  4161b1:	add    cl,ch
  4161b3:	cmp    al,BYTE PTR [eax]
  4161b5:	add    BYTE PTR [eax],al
  4161b7:	nop
  4161b8:	add    eax,DWORD PTR [eax]
  4161ba:	add    BYTE PTR [eax-0x5ffffffd],dl
  4161c0:	add    eax,DWORD PTR [eax]
  4161c2:	add    BYTE PTR [eax+0x3],ah
  4161c8:	nop
  4161c9:	add    eax,DWORD PTR [eax]
  4161cb:	add    BYTE PTR [eax-0x7afffffd],dl
  4161d1:	cmp    al,0xcc
  4161d3:	int3   
  4161d4:	jge    0x416212
  4161d6:	int3   
  4161d7:	int3   
  4161d8:	or     al,0x7b
  4161da:	in     al,dx
  4161db:	push   ecx
  4161dc:	mov    dl,0xc5
  4161de:	pop    es
  4161df:	mov    al,BYTE PTR [ecx+0x78]
  4161e2:	dec    ebx
  4161e3:	inc    edx
  4161e5:	gs pop ebx
  4161e7:	ret    
  4161e8:	in     al,dx
  4161e9:	jp     0x4161d7
  4161eb:	push   ecx
  4161ec:	out    0xd6,eax
  4161ee:	xor    cl,cl
  4161f0:	popf   
  4161f1:	jnp    0x416262
  4161f3:	xor    dl,al
  4161f5:	cmc    
  4161f6:	or     ecx,DWORD PTR [ebx+0x46890caf]
  4161fc:	xor    DWORD PTR [ecx+0x43],edi
  4161ff:	cld    
  416200:	ret    0x1fed
  416203:	mov    eax,DWORD PTR [edi-0x80]
  416206:	cmp    eax,0x80078d6b
  41620b:	aas    
  41620c:	jb     0x416202
  41620e:	add    ebx,ebp
  416210:	loopne 0x4161e0
  416212:	pop    ebp
  416213:	mov    edx,esp
  416215:	int3   
  416216:	ror    ah,0x8c
  416219:	jnp    0x416207
  41621b:	or     ebp,0x23
  41621e:	mov    DWORD PTR [ebp+0x41],eax
  416221:	jns    0x416266
  416223:	loopne 0x4161e7
  416225:	mov    esp,0x606c8bdf
  41622a:	add    DWORD PTR [ecx+0x0],edx
  41622d:	std    
  41622e:	js     0x416283
  416230:	in     al,0xc2
  416232:	(bad)
  416236:	call   0x7972af3b
  41623b:	dec    ebx
  41623c:	clc    
  41623d:	mov    dl,0xd4
  41623f:	test   DWORD PTR [ebx+0x450123fb],0xe8437941
  416249:	mov    dl,0xbc
  41624b:	test   DWORD PTR [ebx+0x55011fe8],0xf0537941
  416255:	ret    0xf7c4
  416258:	mov    esi,ecx
  41625a:	or     eax,DWORD PTR [ecx]
  41625c:	dec    ebp
  41625d:	xor    DWORD PTR [ecx+0x4b],edi
  416260:	cld    
  416261:	jle    0x416227
  416263:	repz add BYTE PTR [ecx],bh
  416266:	add    BYTE PTR [eax],al
  416268:	jmp    0x41629a
  41626a:	jnp    0x4162bf
  41626c:	hlt    
  41626d:	mov    edx,0x8c88ff41
  416272:	je     0x4161fd
  416274:	inc    ebp
  416275:	xor    DWORD PTR [edx+0x4b],edi
  416278:	hlt    
  416279:	bound  edi,QWORD PTR [eax+0x79717317]
  41627f:	push   ebx
  416280:	lock ret 0x102
  416284:	inc    ebp
  416285:	inc    ecx
  416286:	ja     0x4162cb
  416288:	fcom   QWORD PTR [ebx+0x3bac67fe]
  41628e:	sar    bh,0x8a
  416291:	add    BYTE PTR [esp+ecx*2-0x7617b1],al
  416298:	(bad)  
  416299:	(bad)  
  41629a:	mov    edx,0xf9850c44
  41629f:	repz sbb BYTE PTR [ebx+0x4589746c],cl
  4162a6:	loope  0x4162a5
  4162a8:	mov    ah,0xc
  4162aa:	imul   esi,DWORD PTR [edi+0x4b],0xebd3b2ec
  4162b1:	mov    edi,esp
  4162b3:	imul   ecx,DWORD PTR [ecx+0x4301c904],0x8
  4162ba:	xchg   edx,eax
  4162bb:	sti    
  4162bc:	mov    BYTE PTR [ebp-0x57],cl
  4162bf:	cmp    DWORD PTR [edi-0x10443ffc],0xc031d5eb
  4162c9:	mov    ebx,DWORD PTR [ebx+ecx*8+0x3c6dccc0]
  4162d0:	int3   
  4162d1:	int3   
  4162d2:	test   DWORD PTR [esp+ecx*8],edi
  4162d5:	int3   
  4162d6:	jge    0x416314
  4162d8:	int3   
  4162d9:	int3   
  4162da:	or     al,0x79
  4162dc:	in     al,dx
  4162dd:	or     DWORD PTR [ebp+0x8],0xffffffe8
  4162e1:	add    eax,0x89fd6d56
  4162e6:	hlt    
  4162e7:	push   edi
  4162e8:	mov    DWORD PTR [ebp+0x51],eax
  4162eb:	shl    bh,1
  4162ed:	sub    DWORD PTR [esi],edi
  4162ef:	ins    DWORD PTR es:[edi],dx
  4162f0:	std    
  4162f1:	cmp    ebp,0x3
  4162f4:	mov    eax,ds:0xbf8400b4
  4162f9:	jmp    DWORD PTR [edi-0x1b]
  4162fc:	add    DWORD PTR [eax+0x0],eax
  4162ff:	mov    dl,0xba
  416301:	out    0x51,eax
  416303:	push   ss
  416304:	adc    esi,DWORD PTR [ebp+edx*2-0x475eff88]
  41630b:	ins    BYTE PTR es:[edi],dx
  41630c:	mov    edi,0xda3969ff
  416311:	jmp    DWORD PTR [edi+0x5]
  416314:	add    al,BYTE PTR [eax+0x0]
  416317:	out    dx,al
  416318:	adc    bh,BYTE PTR [eax-0x78ff87ab]
  41631e:	inc    ebp
  41631f:	rol    DWORD PTR [ebx+eax*2-0x4],1
  416323:	cmp    DWORD PTR [eax],eax
  416325:	add    BYTE PTR [eax],al
  416327:	loop   0x41631f
  416329:	mov    BYTE PTR [ebp-0x3b],dl
  41632c:	add    dl,0x1
  41632f:	mov    al,0xd2
  416331:	sti    
  416332:	xor    DWORD PTR [esp+ebp*2],0x8
  416336:	jae    0x416390
  416338:	jns    0x41637d
  41633a:	cld    
  41633b:	mov    dl,0xfb
  41633d:	or     BYTE PTR [ebx+edi*1-0x3daf0040],0xd2
  416345:	out    0x52,eax
  416347:	mov    ss,WORD PTR [edx]
  416349:	mov    ah,0x55
  41634b:	clc    
  41634c:	dec    DWORD PTR [eax+0x4767d4d]
  416352:	lea    ebp,[ebp+0x62003ed2]
  416358:	dec    edi
  416359:	mov    ebp,esp
  41635b:	add    BYTE PTR [ecx+eax*2],al
  41635e:	int3   
  41635f:	int3   
  416360:	ins    DWORD PTR es:[edi],dx
  416361:	cmp    ecx,esp
  416363:	int3   
  416364:	test   DWORD PTR [ebx],edi
  416366:	int3   
  416367:	int3   
  416368:	jge    0x4163a5
  41636a:	int3   
  41636b:	int3   
  41636c:	in     al,dx
  41636d:	js     0x41635b
  41636f:	mov    eax,ds:0x3ed629
  416374:	ja     0x4163ed
  416376:	inc    eax
  416377:	xor    dl,al
  416379:	mov    ebp,0xb8b03e07
  41637e:	pop    es
  41637f:	pop    ebp
  416380:	cli    
  416381:	cmp    al,0xcc
  416383:	int3   
  416384:	add    eax,0xfdcccc3d
  416389:	cmp    al,0xcc
  41638b:	int3   
  41638c:	ins    BYTE PTR es:[edi],dx
  41638d:	ja     0x41637b
  41638f:	mov    esi,DWORD PTR [esp+edi*8+0x4f]
  416393:	mov    eax,DWORD PTR [eax+edi*8-0x4bbb00b2]
  41639a:	push   ebx
  41639b:	inc    ecx
  41639c:	cmp    ebp,ecx
  41639e:	ror    ah,0xed
  4163a1:	cmp    al,0xcc
  4163a3:	int3   
  4163a4:	add    eax,0xfdcccc3d
  4163a9:	cmp    al,0xcc
  4163ab:	int3   
  4163ac:	ins    BYTE PTR es:[edi],dx
  4163ad:	ja     0x41639b
  4163af:	or     ebp,0xfffffff8
  4163b2:	imul   eax,DWORD PTR [eax],0xdc680023
  4163b8:	cmp    eax,eax
  4163ba:	(bad)  
  4163bb:	dec    BYTE PTR [eax+ebp*4+0x53]
  4163bf:	inc    ecx
  4163c0:	add    BYTE PTR [ecx],bh
  4163c2:	jns    0x416407
  4163c4:	clc    
  4163c5:	and    DWORD PTR [eax+0x2],ebx
  4163c8:	inc    eax
  4163c9:	cmp    DWORD PTR [edi+0x43],esi
  4163cc:	clc    
  4163cd:	jmp    0x7f411e29
  4163d2:	imul   eax,DWORD PTR [ecx+0x437941c4],0xfffffffc
  4163d9:	ret    0xfbd
  4163dc:	push   ecx
  4163dd:	mov    dl,0xd5
  4163df:	or     edx,DWORD PTR [edx-0x4e]
  4163e2:	lds    eax,FWORD PTR [edi]
  4163e4:	push   eax
  4163e5:	push   esi
  4163e6:	aad    0xfb
  4163e8:	mov    edx,DWORD PTR [ebp+ecx*8-0x40]
  4163ec:	int3   
  4163ed:	in     al,dx
  4163ee:	jbe    0x4163dc
  4163f0:	push   ecx
  4163f1:	jbe    0x4163b8
  4163f3:	sti    
  4163f4:	add    BYTE PTR [ecx],bh
  4163f6:	add    BYTE PTR [eax],al
  4163f8:	jmp    0x41643a
  4163fa:	ja     0x41643f
  4163fc:	cld    
  4163fd:	mov    edx,0x7488ff3f
  416402:	ins    BYTE PTR es:[edi],dx
  416403:	mov    DWORD PTR [ebp+0x15],ecx
  416406:	daa    
  416407:	dec    ebx
  416408:	adc    BYTE PTR [edx+0x3155890b],cl
  41640e:	call   DWORD PTR [edx-0x4]
  416411:	cs mov dl,0x2
  416414:	mov    eax,DWORD PTR [esp+edi*8-0x512b300]
  41641b:	mov    ch,0x11
  41641d:	and    bh,BYTE PTR [esi]
  41641f:	je     0x416428
  416421:	mov    eax,ds:0x0
  416426:	cmp    DWORD PTR [edi+0x4],edx
  416429:	jmp    0x416414
  41642b:	ror    BYTE PTR cs:[ebx-0x333f3324],0xed
  416433:	cmp    ecx,esp
  416435:	int3   
  416436:	test   DWORD PTR [ebx],edi
  416438:	int3   
  416439:	int3   
  41643a:	jge    0x416477
  41643c:	int3   
  41643d:	int3   
  41643e:	or     al,0x77
  416440:	in     al,dx
  416441:	mov    ecx,0x41
  416446:	sbb    eax,0x3c890777
  41644b:	adc    BYTE PTR [esi+0x41],dl
  41644e:	cmp    ebp,ecx
  416450:	ror    ah,0x6d
  416453:	cmp    ecx,esp
  416455:	int3   
  416456:	test   DWORD PTR [ebx],edi
  416458:	int3   
  416459:	int3   
  41645a:	jge    0x416497
  41645c:	int3   
  41645d:	int3   
  41645e:	or     al,0x77
  416460:	in     al,dx
  416461:	or     DWORD PTR [ebp+0xf],0xffffff89
  416465:	inc    ebp
  416466:	inc    ecx
  416467:	jg     0x4164e1
  416469:	add    al,0x39
  41646b:	sti    
  41646c:	or     DWORD PTR [eax-0x74ffffc7],0xffffffec
  416473:	test   DWORD PTR [eax-0x1582c2af],0x87570808
  41647d:	push   ebp
  41647e:	sub    eax,0xba084376
  416483:	inc    eax
  416484:	or     BYTE PTR [ecx+0x45c5707c],cl
  41648a:	add    BYTE PTR ds:0x39000001,cl
  416490:	push   ebp
  416491:	pop    es
  416492:	mov    ebp,DWORD PTR [esp+ebp*2-0x7f]
  416496:	sar    DWORD PTR [eax],0x77
  416499:	dec    ebx
  41649a:	cld    
  41649b:	ret    0xfbd3
  41649e:	cmp    ecx,DWORD PTR [esp+esi*2-0x3c4db98f]
  4164a5:	sti    
  4164a6:	mov    eax,DWORD PTR [eax+esi*2-0x40da48f3]
  4164ad:	mov    esi,0xfa7d35fa
  4164b2:	add    eax,DWORD PTR [esi+ebp*1-0x77]
  4164b6:	inc    ebp
  4164b7:	mov    ch,0x75
  4164b9:	dec    ebx
  4164ba:	lock ds mov cl,0x14
  4164be:	inc    ecx
  4164bf:	mov    eax,0x390ffd5e
  4164c4:	add    BYTE PTR [edi+0x43759155],al
  4164ca:	or     dl,al
  4164cc:	mov    ebx,0x7531030b
  4164d1:	push   ebx
  4164d2:	clc    
  4164d3:	mov    dl,0x4
  4164d5:	lsl    edi,sp
  4164d8:	jns    0x53b6a62b
  4164de:	or     al,0x3a
  4164e0:	jns    0x4b8c633
  4164e6:	or     ah,BYTE PTR [edx-0x69]
  4164e9:	mov    DWORD PTR [ebp+0x41],edx
  4164ec:	jne    0x416531
  4164ee:	or     BYTE PTR [eax],al
  4164f0:	cmp    bh,BYTE PTR [esi-0x80b76fd]
  4164f6:	out    0x6b,al
  4164f8:	ss imul edi,ebp,0xc0cb148b
  4164ff:	int3   
  416500:	mov    WORD PTR [ebp-0x14],?
  416503:	or     DWORD PTR ds:0x41458924,0x77
  41650a:	inc    ebx
  41650b:	in     al,0xc2
  41650d:	mov    edx,0x646c8be3
  416512:	add    DWORD PTR [ecx+0x3d],edx
  416515:	ja     0x41656a
  416517:	call   0x8c2927de
  41651c:	sar    DWORD PTR [edi+0x0],0x0
  416520:	cmp    DWORD PTR [edi+0x4b],esi
  416523:	lock mov edx,0x4600efea
  416529:	test   cl,bh
  41652b:	add    BYTE PTR [ecx],bh
  41652d:	add    BYTE PTR [ecx+0x52fd3155],cl
  416533:	lock mov al,0xd2
  416536:	fisttp WORD PTR [ebx+0x78815ffc]
  41653c:	dec    ecx
  41653d:	add    BYTE PTR ds:0xffff9c84,cl
  416543:	call   DWORD PTR [ebx]
  416545:	add    BYTE PTR [edx+0x0],ch
  416548:	ret    0xdfba
  41654b:	mov    esp,esp
  41654d:	test   DWORD PTR [eax],0xfcce3551
  416553:	adc    eax,0x3ed2c100
  416558:	add    al,al
  41655a:	ret    0x8bfb
  41655d:	hlt    
  41655e:	pop    edi
  41655f:	cmp    DWORD PTR [eax],0x8b16f439
  416565:	in     al,dx
  416566:	pop    edi
  416567:	mov    DWORD PTR [ebp+0x41],edx
  41656a:	std    
  41656b:	push   cs
  41656c:	mov    esp,esp
  41656e:	jae    0x4164f9
  416570:	inc    ebp
  416571:	pop    ecx
  416572:	je     0x4165bf
  416574:	or     BYTE PTR [edx],bh
  416576:	mov    eax,0x5484890f
  41657b:	jmp    0xe00f2797
  416580:	mov    edi,DWORD PTR [eax+edi*8+0x0]
  416584:	inc    edx
  416585:	dec    ecx
  416586:	jns    0x4165cb
  416588:	hlt    
  416589:	ret    0xdfb5
  41658c:	mov    esp,DWORD PTR [eax+edi*8+0x0]
  416590:	adc    DWORD PTR [eax+0x74c7ebcd],esi
  416596:	push   0x390000
  41659b:	mov    DWORD PTR [ebp-0x27],eax
  41659e:	cmp    DWORD PTR [eax+0x10],0x39
  4165a2:	in     al,dx
  4165a3:	or     al,0x8b
  4165a5:	ins    BYTE PTR es:[edi],dx
  4165a6:	pusha  
  4165a7:	cmp    DWORD PTR [ecx],0xc704ec39
  4165ad:	je     0x416617
  4165af:	(bad)  
  4165b0:	(bad)  
  4165b1:	cmp    DWORD PTR [eax],eax
  4165b3:	mov    DWORD PTR [ebp-0x3b],edx
  4165b6:	cmp    DWORD PTR [edx],0x0
  4165b9:	add    BYTE PTR ds:0xa54588e1,ch
  4165bf:	jnp    0x4165c9
  4165c1:	sbb    DWORD PTR [eax-0x47000000],0xec8b1bec
  4165cb:	imul   ecx,DWORD PTR [ecx-0x298abfe],0xffffffff
  4165d2:	push   es
  4165d3:	ror    BYTE PTR [eax-0x182e82b3],1
  4165d9:	mov    ch,0x74
  4165db:	addr16 std 
  4165dd:	xor    DWORD PTR [ebp-0x8],0xffffff86
  4165e1:	inc    ebp
  4165e2:	test   DWORD PTR [ebx+0x1c],ebx
  4165e5:	mov    eax,DWORD PTR [esp+ebp*2]
  4165e8:	mov    DWORD PTR [edx],eax
  4165ea:	ret    0x7b5
  4165ed:	(bad)  
  4165ee:	in     eax,0xf7
  4165f0:	add    DWORD PTR [edx-0x4e],edx
  4165f3:	mov    ebp,0x8f5150fb
  4165f8:	sti    
  4165f9:	push   DWORD PTR [esi]
  4165fb:	add    esp,0x8
  4165fe:	sar    BYTE PTR [ebx+ebx*8-0x76ab8b75],0x55
  416606:	std    
  416607:	js     0x416618
  416609:	mov    edi,DWORD PTR [esp+ebp*2-0x7f]
  41660d:	shl    BYTE PTR ds:0xb2f44379,0xb4
  416614:	jmp    0x416599
  416616:	clc    
  416617:	sti    
  416618:	xchg   BYTE PTR [ebp-0x1b],cl
  41661b:	pop    edx
  41661c:	xchg   ebp,eax
  41661d:	mov    eax,DWORD PTR [eax]
  41661f:	test   BYTE PTR [eax-0x7f],ah
  416622:	ret    0x794d
  416625:	push   ebx
  416626:	loopne 0x4165f8
  416628:	cmc    
  416629:	cld    
  41662a:	call   esi
  41662c:	jp     0x416611
  41662e:	pop    ebp
  41662f:	cli    
  416630:	xor    ecx,esp
  416632:	int3   
  416633:	ins    BYTE PTR es:[edi],dx
  416634:	jnp    0x416622
  416636:	or     ebp,0xfffffff7
  416639:	addr16 lock cmp eax,eax
  41663d:	(bad)  
  41663e:	inc    BYTE PTR [eax+eax*2+0x53]
  416642:	inc    ecx
  416643:	cmp    DWORD PTR [ecx+0x43],edi
  416646:	clc    
  416647:	adc    DWORD PTR [edx+eax*1+0x40],esp
  41664b:	cmp    DWORD PTR [ebx+0x43],edi
  41664e:	clc    
  41664f:	jmp    0x873ea4ab
  416654:	add    sp,0x7931
  416659:	inc    ebx
  41665a:	cld    
  41665b:	ret    0xfb4
  41665e:	push   ecx
  41665f:	ret    0xbcc
  416662:	push   edx
  416663:	mov    dl,0xbc
  416665:	pop    es
  416666:	push   eax
  416667:	pop    esi
  416668:	int3   
  416669:	sti    
  41666a:	mov    ebx,DWORD PTR [esp+eax*8-0x40]
  41666e:	int3   
  41666f:	jge    0x4166a4
  416671:	int3   
  416672:	int3   
  416673:	in     al,dx
  416674:	jp     0x416662
  416676:	mov    eax,ds:0x3ece1d
  41667b:	inc    DWORD PTR [eax]
  41667d:	push   0x560c448b
  416682:	inc    ecx
  416683:	add    BYTE PTR [ecx],bh
  416685:	ja     0x4166d7
  416687:	add    ebx,ebp
  416689:	inc    ecx
  41668a:	mov    BYTE PTR [eax+0x3c],dl
  41668d:	ret    
  41668e:	ror    ah,0xfd
  416691:	xor    al,0xcc
  416693:	int3   
  416694:	ins    BYTE PTR es:[edi],dx
  416695:	jns    0x416683
  416697:	or     DWORD PTR ds:0x8f109ef5,0xffffffbf
  41669e:	dec    DWORD PTR [edx+0x3ec7320b]
  4166a4:	mov    dl,0xc0
  4166a6:	das    
  4166a7:	mov    ecx,DWORD PTR [ebx]
  4166a9:	jp     0x41667d
  4166ab:	ds ret 0xbb8
  4166af:	mov    ebp,ebx
  4166b1:	ja     0x4166fe
  4166b3:	hlt    
  4166b4:	mov    dl,0xbb
  4166b6:	repz mov esi,DWORD PTR [ecx-0xc]
  4166ba:	xchg   BYTE PTR [ebp-0x4f],cl
  4166bd:	jns    0x416712
  4166bf:	clc    
  4166c0:	ror    bl,0xfb
  4166c3:	mov    eax,0x38
  4166c8:	mov    ah,0x40
  4166ca:	je     0x416710
  4166cc:	mov    edx,0x400f7e3
  4166d1:	cld    
  4166d2:	xor    al,al
  4166d4:	xchg   edx,eax
  4166d5:	and    al,0x89
  4166d7:	dec    ebp
  4166d8:	cmp    DWORD PTR [ecx+0x4f],0x7cb3218
  4166df:	jne    0x416731
  4166e1:	jns    0x416726
  4166e3:	clc    
  4166e4:	mov    dl,0xb3
  4166e6:	or     ecx,DWORD PTR [ecx-0x76fc0f00]
  4166ec:	push   ebp
  4166ed:	push   ecx
  4166ee:	jns    0x416733
  4166f0:	adc    al,al
  4166f2:	ret    0xb817
  4166f5:	cmp    BYTE PTR [eax],al
  4166f7:	add    BYTE PTR [eax],al
  4166f9:	push   edx
  4166fa:	or     BYTE PTR [ecx+0xf79314d],cl
  416700:	mov    DWORD PTR [eax+ebp*2+0x29214589],eax
  416707:	inc    ebx
  416708:	cld    
  416709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670a:	cld    
  41670b:	xor    al,al
  41670d:	and    bh,ah
  41670f:	call   0x8981b1c7
  416714:	in     eax,0x64
  416716:	inc    ecx
  416717:	int3   
  416718:	int3   
  416719:	in     eax,dx
  41671a:	xor    ecx,esp
  41671c:	int3   
  41671d:	add    eax,0xfdcccc34
  416722:	xor    ecx,esp
  416724:	int3   
  416725:	mov    WORD PTR [ecx-0x14],?
  416728:	or     ebp,0x7
  41672b:	lds    eax,FWORD PTR [ebp-0x2f]
  41672e:	jmp    FWORD PTR [edi]
  416730:	add    BYTE PTR [ecx],bh
  416732:	fadd   DWORD PTR [ebx]
  416734:	add    edi,DWORD PTR [ecx+0x0]
  416737:	lahf   
  416738:	cld    
  416739:	fs mov edi,0xd0a14fff
  41673f:	sti    
  416740:	jmp    FWORD PTR [esi-0x4ff73b80]
  416746:	mov    edx,0x78f96af3
  41674b:	dec    ebx
  41674c:	clc    
  41674d:	add    al,ch
  41674f:	js     0x416764
  416751:	fsubr  st(4),st
  416753:	mov    esi,0xcffb8aff
  416758:	dec    edi
  416759:	push   0x39
  41675b:	gs push ebx
  41675d:	hlt    
  41675e:	call   0x3b81:0x3941534b
  416765:	aam    0xc
  416767:	mov    edi,0xfce4ffff
  41676c:	mov    bh,0x2
  41676e:	cmp    DWORD PTR [eax],eax
  416770:	add    bl,ch
  416772:	jecxz  0x4167ec
  416774:	or     eax,DWORD PTR [eax]
  416776:	cmp    eax,eax
  416778:	dec    DWORD PTR [eax+0x686fec]
  41677e:	mov    WORD PTR [ecx],es
  416780:	add    BYTE PTR [eax+0x39],ch
  416783:	(bad)  
  416784:	aas    
  416785:	add    BYTE PTR [edx+0x7855d40d],dh
  41678b:	add    BYTE PTR [edi-0x3e],bh
  41678e:	cmp    esi,edi
  416790:	(bad)  
  416791:	jmp    FWORD PTR [ebx+0x58]
  416794:	sahf   
  416795:	inc    BYTE PTR [esi]
  416797:	fs add esp,0x200a82d
  41679e:	jns    0x4167a0
  4167a0:	sub    eax,DWORD PTR [eax]
  4167a2:	cmp    eax,DWORD PTR [eax]
  4167a4:	add    BYTE PTR [ebx+0x41534c34],cl
  4167aa:	cmp    DWORD PTR [edi],edx
  4167ac:	enter  0x4489,0xfc
  4167b0:	push   ebp
  4167b1:	inc    ecx
  4167b2:	add    BYTE PTR [ecx],bh
  4167b4:	ja     0x4167c9
  4167b6:	add    al,0x6f
  4167b8:	sar    edi,0x51
  4167bb:	cwde   
  4167bc:	dec    esp
  4167bd:	push   ebx
  4167be:	inc    ecx
  4167bf:	cmp    eax,edx
  4167c1:	mov    BYTE PTR [ebp-0x57],cl
  4167c4:	shl    edi,1
  4167c6:	popf   
  4167c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c8:	arpl   bp,di
  4167ca:	xor    DWORD PTR [ebp-0xc],0xffffff88
  4167ce:	adc    eax,0x3ecd6d
  4167d3:	cmp    cl,ch
  4167d5:	pop    es
  4167d6:	mov    esp,ebp
  4167d8:	push   edi
  4167d9:	mov    DWORD PTR [ebp-0x6f],edx
  4167dc:	arpl   dx,sp
  4167de:	mov    ebx,DWORD PTR [ebp+eax*8-0x40]
  4167e2:	int3   
  4167e3:	jge    0x416819
  4167e5:	int3   
  4167e6:	int3   
  4167e7:	or     al,0x77
  4167e9:	in     al,dx
  4167ea:	mov    esi,esp
  4167ec:	idiv   DWORD PTR [eax]
  4167ee:	inc    ebp
  4167ef:	inc    ebp
  4167f0:	out    dx,eax
  4167f1:	add    al,0x8b
  4167f3:	hlt    
  4167f4:	imul   eax
  4167f6:	add    eax,0x4588ff52
  4167fb:	sub    eax,0x5ccc0c5
  416800:	xor    al,0xcc
  416802:	int3   
  416803:	std    
  416804:	xor    ecx,esp
  416806:	int3   
  416807:	mov    WORD PTR [edi-0x14],?
  41680a:	or     DWORD PTR ds:0x1545c514,0x0
  416811:	jo     0x416814
  416813:	cmp    DWORD PTR [edi+0x43],esi
  416816:	or     BYTE PTR [eax],al
  416818:	mov    al,0xbc
  41681a:	xlat   BYTE PTR ds:[ebx]
  41681b:	mov    ebp,DWORD PTR [eax+ecx*2-0x77]
  41681f:	push   ebp
  416820:	inc    ecx
  416821:	dec    DWORD PTR [esi+0x3c]
  416824:	ror    ah,0xdf
  416827:	mov    edi,DWORD PTR [eax+eiz*2+0xd]
  41682b:	mov    bh,0x71
  41682d:	or     al,0x89
  41682f:	push   ebp
  416830:	fnstenv [esp+eax*2+0xa]
  416834:	xor    DWORD PTR [ecx+0x43],edi
  416837:	call   0x4042748d
  41683c:	cmp    DWORD PTR [edi+0xb],esi
  41683f:	cld    
  416840:	or     al,0xc1
  416842:	call   DWORD PTR [eax-0x5f]
  416845:	mov    dl,0xf8
  416847:	jmp    DWORD PTR [esi-0x4ff73b82]
  41684d:	mov    esp,0xd7f96aef
  416852:	jmp    FWORD PTR [edi]
  416854:	cmp    DWORD PTR [eax],eax
  416856:	push   0x10900
  41685b:	push   0x39
  41685d:	arpl   WORD PTR [ebx-0x10],dx
  416860:	sar    BYTE PTR [ebx+eiz*8-0x769ffb75],0x42
  416868:	or     eax,0x314d88d0
  41686d:	ror    DWORD PTR [eax-0x1832a2ab],1
  416873:	ror    DWORD PTR [edx+eiz*2-0x3],0x83
  416878:	jge    0x41686d
  41687a:	les    eax,FWORD PTR [ebp+0x0]
  41687d:	inc    ebp
  41687e:	(bad)  
  41687f:	(bad)  
  416880:	(bad)  
  416881:	cmp    DWORD PTR [ebp+0x7],edx
  416884:	mov    esi,DWORD PTR [esp+ebp*2-0x7f]
  416888:	sar    BYTE PTR [eax],0x77
  41688b:	inc    ebx
  41688c:	hlt    
  41688d:	mov    dl,0xb3
  41688f:	fisttp WORD PTR [edi]
  416891:	into   
  416892:	iret   
  416893:	add    eax,0x716c6439
  416898:	pop    ecx
  416899:	mov    dl,0xbb
  41689b:	out    0x83,eax
  41689d:	or     DWORD PTR [eax+eax*1],0x4b757c74
  4168a4:	call   0x515063
  4168a9:	ins    DWORD PTR es:[edi],dx
  4168aa:	and    al,0x89
  4168ac:	push   ebp
  4168ad:	shl    DWORD PTR [ebp+0x42],1
  4168b0:	adc    dl,al
  4168b2:	mov    bl,0xdf
  4168b4:	mov    ebp,DWORD PTR [eax+0x24]
  4168b7:	mov    eax,DWORD PTR [ecx+ebp*1+0x61]
  4168bb:	mov    DWORD PTR [ebp-0x27],ecx
  4168be:	sub    eax,0x2428f7d2
  4168c3:	mov    DWORD PTR [ebp-0x67],edx
  4168c6:	icebp  
  4168c7:	lods   al,BYTE PTR ds:[esi]
  4168c8:	inc    edx
  4168c9:	ror    BYTE PTR gs:[eax+0x4b759145],1
  4168d0:	or     BYTE PTR [edx],bh
  4168d2:	mov    eax,0xcbc25113
  4168d7:	out    0x8b,eax
  4168d9:	cld    
  4168da:	pop    ebx
  4168db:	add    DWORD PTR [edx+0x2d],eax
  4168de:	shl    bh,1
  4168e0:	push   ebp
  4168e1:	add    BYTE PTR [ecx+eiz*2-0x3],dh
  4168e5:	xor    DWORD PTR [ebp-0xc],0xffffff88
  4168e9:	dec    ebp
  4168ea:	push   ecx
  4168eb:	jge    0x4168ac
  4168ed:	sub    BYTE PTR [eax-0x5414184d],dh
  4168f3:	jne    0x416948
  4168f5:	in     al,0xeb
  4168f7:	push   edi
  4168f8:	push   cs
  4168f9:	cld    
  4168fa:	inc    esi
  4168fb:	popa   
  4168fc:	add    esp,0x323d835
  416902:	jns    0x416904
  416904:	lahf   
  416905:	cld    
  416906:	test   BYTE PTR [edi+0x75114fff],bh
  41690c:	cli    
  41690d:	call   FWORD PTR [esi]
  41690f:	jge    0x4168d5
  416911:	or     al,al
  416913:	mov    edx,0x684c83db
  416918:	push   ebx
  416919:	inc    ecx
  41691a:	cmp    DWORD PTR [eax],eax
  41691c:	jae    0x416928
  41691e:	mov    dl,0xf2
  416920:	out    dx,eax
  416921:	push   ebp
  416922:	js     0x416924
  416924:	dec    edi
  416925:	inc    DWORD PTR [esp+eax*2-0x351ec27f]
  41692c:	add    BYTE PTR ds:[ecx],bh
  41692f:	jmp    0x41694c
  416931:	push   0x79
  416933:	fdivr  st,st(7)
  416935:	das    
  416936:	cmp    DWORD PTR [eax],eax
  416938:	mov    DWORD PTR [ebp-0x3b],edx
  41693b:	int    0x88
  41693d:	inc    ebp
  41693e:	fnstenv [eax+ecx*2+0x34]
  416942:	or     BYTE PTR [ecx+0x53],ah
  416945:	lock add dl,bl
  416948:	dec    ebx
  416949:	push   ebx
  41694a:	inc    ecx
  41694b:	cmp    DWORD PTR [ebp+0x13],edx
  41694e:	push   0xfffffff9
  416950:	xlat   BYTE PTR ds:[ebx]
  416951:	jmp    FWORD PTR [edi]
  416953:	cmp    DWORD PTR [eax],eax
  416955:	mov    DWORD PTR [ebp-0x73],edx
  416958:	int    0x69
  41695a:	add    BYTE PTR [esi+0x65a3efca],al
  416960:	retf   0x3e
  416963:	mov    edx,0xf855d422
  416968:	(bad)  
  416969:	push   DWORD PTR [esp+ecx*2-0x2a]
  41696d:	aas    
  41696e:	push   0x3039
  416973:	ret    0xfbba
  416976:	push   eax
  416977:	jecxz  0x416978
  416979:	cld    
  41697a:	push   ebp
  41697b:	dec    ecx
  41697c:	pushf  
  41697d:	aam    0x55
  41697f:	clc    
  416980:	dec    DWORD PTR [eax+0x4b8a1d4d]
  416986:	fadd   st,st(2)
  416988:	mov    ch,0xd7
  41698a:	mov    edi,DWORD PTR [eax+edi*1+0x1]
  41698e:	inc    edx
  41698f:	pop    ebp
  416990:	mov    DWORD PTR [ebx-0x20],eax
  416993:	ret    0xdfcd
  416996:	mov    ebp,DWORD PTR [eax-0x50]
  416999:	push   ecx
  41699a:	mov    edi,DWORD PTR [esp+eiz*2+0x50]
  41699e:	mov    ebp,DWORD PTR [esp+esi*1]
  4169a1:	push   ebx
  4169a2:	inc    ecx
  4169a3:	cmp    DWORD PTR [ecx+0x5fed91e7],esi
  4169a9:	std    
  4169aa:	add    DWORD PTR [eax],0xfffffffd
  4169ad:	or     al,0x89
  4169af:	push   ebp
  4169b0:	fld    DWORD PTR [ebx+0x39a4ba]
  4169b6:	add    BYTE PTR [eax],al
  4169b8:	inc    ebp
  4169b9:	sbb    DWORD PTR [ecx+0x4b8bd945],ecx
  4169bf:	fdivr  DWORD PTR [edx]
  4169c1:	mov    BYTE PTR [eax-0x78ffc700],ah
  4169c7:	dec    ebp
  4169c8:	popf   
  4169c9:	mov    edx,DWORD PTR [ebx-0x20]
  4169cc:	fdiv   DWORD PTR [ebx+edx*2]
  4169cf:	inc    ecx
  4169d0:	cmp    DWORD PTR [ebx],ebp
  4169d2:	inc    edx
  4169d3:	xor    al,0xda
  4169d5:	add    al,0x56
  4169d7:	inc    ecx
  4169d8:	cmp    DWORD PTR [ebx-0x3f10fbf5],ecx
  4169de:	call   DWORD PTR [eax-0x4e]
  4169e1:	cmc    
  4169e2:	rcl    DWORD PTR [ebp-0x8],cl
  4169e5:	call   DWORD PTR [ecx-0x75]
  4169e8:	hlt    
  4169e9:	imul   edx,DWORD PTR [eax-0x18],0xffffffe5
  4169ed:	pop    ecx
  4169ee:	std    
  4169ef:	(bad)  
  4169f0:	mov    edx,0x48b0c44
  4169f5:	pusha  
  4169f6:	mov    DWORD PTR ds:0x3eb565,edx
  4169fc:	cmp    dh,BYTE PTR [ecx-0xbdb76d9]
  416a02:	push   ebp
  416a03:	inc    ecx
  416a04:	cmp    DWORD PTR [ebx-0x3e7b07c5],eax
  416a0a:	(bad)  
  416a0b:	jmp    FWORD PTR [esp+ebp*1-0x7bff2b61]
  416a12:	sar    edi,0x4f
  416a15:	ret    0x140c
  416a18:	push   esi
  416a19:	js     0x416a1b
  416a1b:	dec    edi
  416a1c:	mov    ebp,DWORD PTR [eax+edx*2]
  416a1f:	push   ebx
  416a20:	inc    ecx
  416a21:	cmp    DWORD PTR [edx+0x5ef575e7],esi
  416a27:	std    
  416a28:	xor    ebp,0xb
  416a2b:	lahf   
  416a2c:	aam    0x8c
  416a2e:	sar    edi,0x4f
  416a31:	rol    esi,1
  416a33:	idiv   bh
  416a35:	(bad)  
  416a36:	add    ah,0x4
  416a39:	loop   0x416a1a
  416a3b:	addr16 xor al,0x3a
  416a3e:	sar    bh,0x8a
  416a41:	sub    al,0x5c
  416a43:	push   ebx
  416a44:	inc    ecx
  416a45:	cmp    DWORD PTR [ecx+0x5eb051e7],esi
  416a4b:	std    
  416a4c:	cmp    DWORD PTR [ebp+0x7],0xffffff87
  416a50:	inc    ebp
  416a51:	test   DWORD PTR [edx-0x3f132bed],ecx
  416a57:	call   DWORD PTR [ecx-0x3e]
  416a5a:	(bad)  
  416a5b:	fisttp WORD PTR [ebx+0x41533434]
  416a61:	cmp    DWORD PTR [ebx],eax
  416a63:	dec    eax
  416a64:	sub    BYTE PTR [eax],cl
  416a66:	mov    edx,DWORD PTR [ebx]
  416a68:	lock add al,0xc1
  416a6b:	call   DWORD PTR [ecx+0x51]
  416a6e:	sub    bh,ah
  416a70:	call   FWORD PTR [esi-0x7e]
  416a73:	les    ecx,FWORD PTR [eax+eax*1]
  416a76:	cwde   
  416a77:	dec    edi
  416a78:	push   ebx
  416a79:	inc    ecx
  416a7a:	cmp    DWORD PTR ds:0x385350,eax
  416a80:	mov    eax,ds:0xffc0e71c
  416a85:	mov    WORD PTR [eax+ebx*2-0x158695b1],es
  416a8c:	add    eax,0x55fc4c8b
  416a91:	inc    ecx
  416a92:	cmp    DWORD PTR [edx+0x68ed55fc],esi
  416a98:	loop   0x416a95
  416a9a:	push   cs
  416a9b:	pop    esi
  416a9c:	mov    eax,0x3901
  416aa1:	mov    edx,DWORD PTR [esp+edi*4]
  416aa4:	rol    DWORD PTR [ecx+edi*1],0x4c
  416aa8:	int3   
  416aa9:	int3   
  416aaa:	std    
  416aab:	dec    esp
  416aac:	int3   
  416aad:	int3   
  416aae:	mov    WORD PTR [ecx+0x8748bec],cs
  416ab4:	mov    DWORD PTR [eax-0x2b],eax
  416ab7:	mov    ebx,0x4cfdccc0
  416abc:	int3   
  416abd:	int3   
  416abe:	ins    BYTE PTR es:[edi],dx
  416abf:	mov    esp,ebp
  416ac1:	push   ebx
  416ac2:	addr16 mov ch,0x88
  416ac5:	cmp    eax,0x3eb399
  416aca:	ret    0xebfb
  416acd:	push   ebp
  416ace:	clc    
  416acf:	dec    DWORD PTR [eax+0x3eb38135]
  416ad5:	add    dh,dh
  416ad7:	mov    ebp,0x7a005d58
  416adc:	dec    esp
  416add:	int3   
  416ade:	int3   
  416adf:	in     al,dx
  416ae0:	mov    ah,ch
  416ae2:	push   ecx
  416ae3:	adc    esp,eax
  416ae5:	add    BYTE PTR [eax+0x39],al
  416ae8:	lahf   
  416ae9:	cld    
  416aea:	push   ebp
  416aeb:	clc    
  416aec:	dec    DWORD PTR [edi-0x18]
  416aef:	xchg   ebp,eax
  416af0:	pop    eax
  416af1:	std    
  416af2:	(bad)  
  416af3:	mov    edx,0xfc890844
  416af8:	pop    ebx
  416af9:	mov    DWORD PTR [ebp+0x41],ecx
  416afc:	scas   eax,DWORD PTR es:[edi]
  416afd:	imul   eax,DWORD PTR [eax],0x5617f3b2
  416b03:	clc    
  416b04:	call   DWORD PTR [ecx-0x1]
  416b07:	mov    WORD PTR [ecx+ecx*4-0x1b],ds
  416b0b:	mov    WORD PTR [ecx-0x34],es
  416b0e:	int3   
  416b0f:	mov    WORD PTR [ecx+0x240d83ec],cs
  416b15:	lds    eax,FWORD PTR [ebp+0x11]
  416b18:	add    BYTE PTR [eax],al
  416b1a:	add    BYTE PTR [ecx],bh
  416b1c:	inc    ebp
  416b1d:	inc    ebx
  416b1e:	fadd   QWORD PTR [ecx-0xa000000]
  416b24:	ret    0x1f3
  416b27:	cmp    DWORD PTR [eax],eax
  416b29:	add    bh,al
  416b2b:	je     0x416b89
  416b2d:	add    BYTE PTR [eax],al
  416b2f:	cmp    DWORD PTR [eax],eax
  416b31:	lds    eax,FWORD PTR [ebp-0x2b]
  416b34:	(bad)  
  416b35:	(bad)  
  416b36:	(bad)  
  416b37:	cmp    DWORD PTR [ecx+0xac0084b],ecx
  416b3d:	lock push ebp
  416b3f:	add    BYTE PTR [eax+0x0],bh
  416b42:	call   0xfd9e31f0
  416b47:	mov    eax,ds:0x3eb2a9
  416b4c:	push   esp
  416b4d:	pop    ebp
  416b4e:	std    
  416b4f:	add    BYTE PTR [ecx],bh
  416b51:	aam    0xb
  416b53:	(bad)  
  416b54:	xor    al,0x58
  416b56:	push   ebx
  416b57:	inc    ecx
  416b58:	cmp    DWORD PTR [eax],eax
  416b5a:	add    BYTE PTR [eax],al
  416b5c:	cmp    DWORD PTR [ecx+0xa],ebp
  416b5f:	(bad)  
  416b60:	cmp    al,0x58
  416b62:	push   ebx
  416b63:	inc    ecx
  416b64:	cmp    edi,edi
  416b66:	(bad)  
  416b67:	(bad)  
  416b68:	cmp    DWORD PTR [ecx-0x40fb0fc5],eax
  416b6e:	(bad)  
  416b6f:	(bad)  
  416b70:	in     al,dx
  416b71:	or     ebp,eax
  416b73:	add    eax,0x3eb261
  416b78:	cmp    DWORD PTR [eax],eax
  416b7a:	add    BYTE PTR [eax],al
  416b7c:	mov    edx,0xf855f81a
  416b81:	(bad)  
  416b82:	push   DWORD PTR [esp+ebp*1-0x16]
  416b86:	(bad)  
  416b87:	dec    BYTE PTR [eax+eax*2+0x53]
  416b8b:	inc    ecx
  416b8c:	cmp    DWORD PTR [edi+0x7855f0],ebx
  416b92:	mov    DWORD PTR ds:0x3eb629,ecx
  416b98:	ror    ch,0xe7
  416b9b:	mov    esp,DWORD PTR [eax+edx*2]
  416b9e:	push   ebx
  416b9f:	inc    ecx
  416ba0:	cmp    DWORD PTR [edi+0x3a00e843],eax
  416ba6:	mov    esi,0x687c893b
  416bab:	mov    DWORD PTR [ebp-0x1f],ecx
  416bae:	mov    DWORD PTR [ebx],ecx
  416bb0:	fmul   QWORD PTR [ecx+eax*8-0x769801]
  416bb7:	aas    
  416bb8:	add    dh,dl
  416bba:	cmc    
  416bbb:	mov    edi,0xa1007855
  416bc0:	cld    
  416bc1:	ins    BYTE PTR es:[edi],dx
  416bc2:	sar    edi,0xc6
  416bc5:	xor    al,0xc
  416bc7:	push   esi
  416bc8:	inc    ecx
  416bc9:	cmp    ebp,edx
  416bcb:	add    BYTE PTR [eax+0x39],al
  416bce:	call   0x3a6f32
  416bd3:	mov    BYTE PTR ds:0x3eb59d,dl
  416bd9:	jmp    0x416c42
  416bdb:	ret    0x8ef7
  416bde:	pop    ebx
  416bdf:	add    esp,0x56089f31
  416be5:	clc    
  416be6:	(bad)  
  416be7:	cld    
  416be8:	adc    eax,0x3eb241
  416bed:	call   0xca1:0x394155f8
  416bf4:	push   esi
  416bf5:	clc    
  416bf6:	dec    DWORD PTR [edi-0x18]
  416bf9:	lea    ebx,[edx-0x3]
  416bfc:	(bad)  
  416bfd:	mov    edx,0xfc890444
  416c02:	dec    edi
  416c03:	mov    DWORD PTR [ebp+0x49],ecx
  416c06:	mov    cl,0xe7
  416c08:	aad    0x0
  416c0a:	aaa    
  416c0b:	pop    ebx
  416c0c:	std    
  416c0d:	xor    ebp,0x3
  416c10:	mov    eax,ds:0xffc18cf4
  416c15:	mov    al,BYTE PTR [eax+edx*2-0x5ec695ae]
  416c1c:	hlt    
  416c1d:	push   ebp
  416c1e:	js     0x416c20
  416c20:	push   eax
  416c21:	call   0x3ebecb
  416c26:	mov    edx,0x848b0c43
  416c2b:	push   eax
  416c2c:	xchg   DWORD PTR [ebp-0x27],ecx
  416c2f:	xchg   BYTE PTR [ebx-0x4],dl
  416c32:	and    dh,BYTE PTR [ebp-0x787c8c11]
  416c38:	inc    ebx
  416c39:	loopne 0x416ca4
  416c3b:	xchg   DWORD PTR [ebx-0x24],ecx
  416c3e:	push   0xc6fbae68
  416c43:	pop    edx
  416c44:	add    esp,0x56009f31
  416c4a:	clc    
  416c4b:	dec    DWORD PTR [eax+0x3eb23915]
  416c51:	add    BYTE PTR [ebx],cl
  416c53:	mov    eax,ds:0xfff8560c
  416c58:	add    BYTE PTR [ebp-0x63],al
  416c5b:	scas   eax,DWORD PTR es:[edi]
  416c5c:	mov    BYTE PTR ds:0x3eb485,cl
  416c62:	cmp    cl,ch
  416c64:	sti    
  416c65:	push   ecx
  416c66:	xchg   ecx,eax
  416c67:	xor    dh,bh
  416c69:	push   DWORD PTR [esi+0x7e]
  416c6c:	les    ecx,FWORD PTR [eax+eax*1]
  416c6f:	ret    0xf3b4
  416c72:	add    ecx,DWORD PTR [esp+edi*1]
  416c75:	add    DWORD PTR [ebp+0x55],edx
  416c78:	mov    BYTE PTR [ebx-0x1c],dl
  416c7b:	ret    0xfbc4
  416c7e:	add    esi,esp
  416c80:	cmp    eax,DWORD PTR [edi+0x4b864545]
  416c86:	loopne 0x416c9a
  416c88:	or     eax,0x785600
  416c8d:	xchg   DWORD PTR [ebp+0x19],ecx
  416c90:	data16 sahf 
  416c92:	(bad)  
  416c93:	jl     0x416ced
  416c95:	add    BYTE PTR [eax],al
  416c97:	cmp    DWORD PTR [eax],eax
  416c99:	jmp    0xf7f52ea7
  416c9e:	cmp    ebx,0x4
  416ca1:	xchg   DWORD PTR [ebp+0x1],edx
  416ca4:	xchg   BYTE PTR [ebx-0x8],al
  416ca7:	inc    edx
  416ca8:	ret    
  416ca9:	out    dx,eax
  416caa:	jae    0x416cdd
  416cac:	test   DWORD PTR [ebx],ecx
  416cae:	hlt    
  416caf:	test   BYTE PTR [edi+0x587402ff],bh
  416cb5:	mov    DWORD PTR [ecx],edx
  416cb7:	cmp    dh,BYTE PTR [ebx-0x4c325e09]
  416cbd:	add    BYTE PTR ds:[edx],bh
  416cc0:	ret    
  416cc1:	test   DWORD PTR [ecx-0x7b47ad7],0x3e73fb8
  416ccb:	cmp    DWORD PTR [eax],eax
  416ccd:	mov    DWORD PTR ds:0x3eb3a5,edx
  416cd3:	add    BYTE PTR [edx],bh
  416cd5:	mov    bl,0xf7
  416cd7:	xor    esi,DWORD PTR [ebx]
  416cd9:	lahf   
  416cda:	hlt    
  416cdb:	push   ebp
  416cdc:	clc    
  416cdd:	inc    DWORD PTR [eax]
  416cdf:	inc    ebp
  416ce0:	xchg   ecx,eax
  416ce1:	xchg   DWORD PTR [eax],ecx
  416ce3:	jmp    0x416cb3
  416ce5:	xchg   DWORD PTR [ebx],ebp
  416ce7:	in     al,0xe4
  416ce9:	mov    esi,0x603488ff
  416cee:	push   ebx
  416cef:	inc    ecx
  416cf0:	cmp    DWORD PTR ds:0x382c89c7,ecx
  416cf6:	push   ebx
  416cf7:	inc    ecx
  416cf8:	cmp    DWORD PTR ds:0x6c3489c7,ecx
  416cfe:	push   ebx
  416cff:	inc    ecx
  416d00:	cmp    DWORD PTR [eax+0x4e],ebp
  416d03:	test   DWORD PTR [esi+0x59],0xb2ce0d8b
  416d0a:	ds add al,al
  416d0d:	retf   0xb9f7
  416d10:	cmp    esi,edi
  416d12:	aas    
  416d13:	add    BYTE PTR [eax+0x39020066],bh
  416d19:	add    BYTE PTR [ecx-0x30daeeab],cl
  416d1f:	mov    DWORD PTR [eax+ebp*2],esp
  416d22:	push   ebx
  416d23:	inc    ecx
  416d24:	cmp    DWORD PTR [edi+0x7855e8],ebx
  416d2a:	push   eax
  416d2b:	call   0x3ec36d
  416d30:	mov    edx,0x348b0443
  416d35:	push   esp
  416d36:	push   ebx
  416d37:	inc    ecx
  416d38:	add    BYTE PTR [ecx],bh
  416d3a:	scas   eax,DWORD PTR es:[edi]
  416d3b:	out    0xd5,eax
  416d3d:	rcr    DWORD PTR [eax-0x3],cl
  416d40:	test   ecx,edi
  416d42:	rol    BYTE PTR [ebx],cl
  416d44:	xor    edi,ecx
  416d46:	sub    cl,BYTE PTR fs:[ebx+0x41536414]
  416d4d:	cmp    DWORD PTR [ebp-0x3c],edi
  416d50:	add    al,0xba
  416d52:	sbb    bh,al
  416d54:	push   ebp
  416d55:	clc    
  416d56:	(bad)  
  416d57:	push   DWORD PTR [ebx+0x30]
  416d5a:	lahf   
  416d5b:	aam    0x55
  416d5d:	clc    
  416d5e:	inc    DWORD PTR [esi-0x17fbaabc]
  416d64:	pop    ebp
  416d65:	test   BYTE PTR [eax-0x3],bl
  416d68:	mov    esp,DWORD PTR [esp+esi*8]
  416d6b:	push   ebp
  416d6c:	inc    ecx
  416d6d:	cmp    DWORD PTR [esi-0x7b86cc40],ebp
  416d73:	jecxz  0x416dd2
  416d75:	jp     0x416dc2
  416d77:	int3   
  416d78:	int3   
  416d79:	cmp    DWORD PTR [eax],eax
  416d7b:	add    BYTE PTR [eax],al
  416d7d:	cmp    DWORD PTR [eax],eax
  416d7f:	add    BYTE PTR [eax],al
  416d81:	cmp    DWORD PTR [eax],eax
  416d83:	add    BYTE PTR [eax],al
  416d85:	cmp    DWORD PTR [eax],eax
  416d87:	add    BYTE PTR [eax],al
  416d89:	cmp    DWORD PTR [eax],eax
  416d8b:	add    BYTE PTR [eax],al
  416d8d:	cmp    DWORD PTR [eax],eax
  416d8f:	add    BYTE PTR [eax],al
  416d91:	cmp    DWORD PTR [eax],eax
  416d93:	add    BYTE PTR [eax],al
  416d95:	cmp    DWORD PTR [eax],eax
  416d97:	add    BYTE PTR [eax],al
  416d99:	cmp    DWORD PTR [eax],eax
  416d9b:	add    BYTE PTR [eax],al
  416d9d:	add    BYTE PTR [ecx],bh
  416d9f:	add    BYTE PTR [eax],al
  416da1:	add    BYTE PTR [ecx],bh
  416da3:	add    BYTE PTR [eax],al
  416da5:	add    BYTE PTR [ecx],bh
  416da7:	add    BYTE PTR [eax],al
  416da9:	add    BYTE PTR [ecx],bh
  416dab:	add    BYTE PTR [eax],al
  416dad:	add    BYTE PTR [ecx],bh
  416daf:	add    BYTE PTR [eax],al
  416db1:	add    BYTE PTR [ecx],bh
  416db3:	add    BYTE PTR [eax],al
  416db5:	add    BYTE PTR [ecx],bh
  416db7:	add    BYTE PTR [eax],al
  416db9:	add    BYTE PTR [ecx],bh
  416dbb:	add    BYTE PTR [eax],al
  416dbd:	add    BYTE PTR [ecx],bh
  416dbf:	add    BYTE PTR [eax],al
  416dc1:	add    BYTE PTR [ecx],bh
  416dc3:	add    BYTE PTR [eax],al
  416dc5:	add    BYTE PTR [ecx],bh
  416dc7:	add    BYTE PTR [eax],al
  416dc9:	add    BYTE PTR [ecx],bh
  416dcb:	add    BYTE PTR [eax],al
  416dcd:	add    BYTE PTR [ecx],bh
  416dcf:	add    BYTE PTR [eax],al
  416dd1:	add    BYTE PTR [ecx],bh
  416dd3:	add    BYTE PTR [eax],al
  416dd5:	add    BYTE PTR [ecx],bh
  416dd7:	add    BYTE PTR [eax],al
  416dd9:	add    BYTE PTR [ecx],bh
  416ddb:	add    BYTE PTR [eax],al
  416ddd:	add    BYTE PTR [ecx],bh
  416ddf:	add    BYTE PTR [eax],al
  416de1:	add    BYTE PTR [ecx],bh
  416de3:	add    BYTE PTR [eax],al
  416de5:	add    BYTE PTR [ecx],bh
  416de7:	add    BYTE PTR [eax],al
  416de9:	add    BYTE PTR [ecx],bh
  416deb:	add    BYTE PTR [eax],al
  416ded:	add    BYTE PTR [ecx],bh
  416def:	add    BYTE PTR [eax],al
  416df1:	add    BYTE PTR [ecx],bh
  416df3:	add    BYTE PTR [eax],al
  416df5:	add    BYTE PTR [ecx],bh
  416df7:	add    BYTE PTR [eax],al
  416df9:	add    BYTE PTR [ecx],bh
  416dfb:	add    BYTE PTR [eax],al
  416dfd:	add    BYTE PTR [ecx],bh
  416dff:	add    BYTE PTR [eax],al
  416e01:	add    BYTE PTR [eax],al
  416e03:	cmp    DWORD PTR [eax],eax
  416e05:	add    BYTE PTR [eax],al
  416e07:	cmp    DWORD PTR [eax],eax
  416e09:	add    BYTE PTR [eax],al
  416e0b:	cmp    DWORD PTR [eax],eax
  416e0d:	add    BYTE PTR [eax],al
  416e0f:	cmp    DWORD PTR [eax],eax
  416e11:	add    BYTE PTR [eax],al
  416e13:	cmp    DWORD PTR [eax],eax
  416e15:	add    BYTE PTR [eax],al
  416e17:	cmp    DWORD PTR [eax],eax
  416e19:	add    BYTE PTR [eax],al
  416e1b:	cmp    DWORD PTR [eax],eax
  416e1d:	add    BYTE PTR [eax],al
  416e1f:	cmp    DWORD PTR [eax],eax
  416e21:	add    BYTE PTR [eax],al
  416e23:	cmp    DWORD PTR [eax],eax
  416e25:	add    BYTE PTR [eax],al
  416e27:	cmp    DWORD PTR [eax],eax
  416e29:	add    BYTE PTR [eax],al
  416e2b:	cmp    DWORD PTR [eax],eax
  416e2d:	add    BYTE PTR [eax],al
  416e2f:	cmp    DWORD PTR [eax],eax
  416e31:	add    BYTE PTR [eax],al
  416e33:	cmp    DWORD PTR [eax],eax
  416e35:	add    BYTE PTR [eax],al
  416e37:	cmp    DWORD PTR [eax],eax
  416e39:	add    BYTE PTR [eax],al
  416e3b:	cmp    DWORD PTR [eax],eax
  416e3d:	add    BYTE PTR [eax],al
  416e3f:	cmp    DWORD PTR [eax],eax
  416e41:	add    BYTE PTR [eax],al
  416e43:	cmp    DWORD PTR [eax],eax
  416e45:	add    BYTE PTR [eax],al
  416e47:	cmp    DWORD PTR [eax],eax
  416e49:	add    BYTE PTR [eax],al
  416e4b:	cmp    DWORD PTR [eax],eax
  416e4d:	add    BYTE PTR [eax],al
  416e4f:	cmp    DWORD PTR [eax],eax
  416e51:	add    BYTE PTR [eax],al
  416e53:	cmp    DWORD PTR [eax],eax
  416e55:	add    BYTE PTR [eax],al
  416e57:	cmp    DWORD PTR [eax],eax
  416e59:	add    BYTE PTR [eax],al
  416e5b:	cmp    DWORD PTR [eax],eax
  416e5d:	add    BYTE PTR [eax],al
  416e5f:	cmp    DWORD PTR [eax],eax
  416e61:	add    BYTE PTR [eax],al
  416e63:	cmp    DWORD PTR [eax],eax
  416e65:	add    BYTE PTR [eax],al
  416e67:	add    BYTE PTR [ecx],bh
  416e69:	add    BYTE PTR [eax],al
  416e6b:	add    BYTE PTR [ecx],bh
  416e6d:	add    BYTE PTR [eax],al
  416e6f:	add    BYTE PTR [ecx],bh
  416e71:	add    BYTE PTR [eax],al
  416e73:	add    BYTE PTR [ecx],bh
  416e75:	add    BYTE PTR [eax],al
  416e77:	add    BYTE PTR [ecx],bh
  416e79:	add    BYTE PTR [eax],al
  416e7b:	add    BYTE PTR [ecx],bh
  416e7d:	add    BYTE PTR [eax],al
  416e7f:	add    BYTE PTR [ecx],bh
  416e81:	add    BYTE PTR [eax],al
  416e83:	add    BYTE PTR [ecx],bh
  416e85:	add    BYTE PTR [eax],al
  416e87:	add    BYTE PTR [ecx],bh
  416e89:	add    BYTE PTR [eax],al
  416e8b:	add    BYTE PTR [ecx],bh
  416e8d:	add    BYTE PTR [eax],al
  416e8f:	add    BYTE PTR [ecx],bh
  416e91:	add    BYTE PTR [eax],al
  416e93:	add    BYTE PTR [ecx],bh
  416e95:	add    BYTE PTR [eax],al
  416e97:	add    BYTE PTR [ecx],bh
  416e99:	add    BYTE PTR [eax],al
  416e9b:	add    BYTE PTR [ecx],bh
  416e9d:	add    BYTE PTR [eax],al
  416e9f:	add    BYTE PTR [ecx],bh
  416ea1:	add    BYTE PTR [eax],al
  416ea3:	add    BYTE PTR [ecx],bh
  416ea5:	add    BYTE PTR [eax],al
  416ea7:	add    BYTE PTR [ecx],bh
  416ea9:	add    BYTE PTR [eax],al
  416eab:	add    BYTE PTR [ecx],bh
  416ead:	add    BYTE PTR [eax],al
  416eaf:	add    BYTE PTR [ecx],bh
  416eb1:	add    BYTE PTR [eax],al
  416eb3:	add    BYTE PTR [ecx],bh
  416eb5:	add    BYTE PTR [eax],al
  416eb7:	add    BYTE PTR [ecx],bh
  416eb9:	add    BYTE PTR [eax],al
  416ebb:	add    BYTE PTR [ecx],bh
  416ebd:	add    BYTE PTR [eax],al
  416ebf:	add    BYTE PTR [ecx],bh
  416ec1:	add    BYTE PTR [eax],al
  416ec3:	add    BYTE PTR [ecx],bh
  416ec5:	add    BYTE PTR [eax],al
  416ec7:	add    BYTE PTR [eax],al
  416ec9:	add    al,BYTE PTR [eax]
  416ecb:	add    BYTE PTR [ecx],bh
  416ecd:	add    BYTE PTR [eax],al
  416ecf:	add    BYTE PTR [ecx],ah
  416ed1:	add    BYTE PTR [eax],al
  416ed3:	add    ch,al
  416ed5:	xor    dl,BYTE PTR [eax-0x67cd3ace]
  416edb:	xor    al,ch
  416edd:	xor    ah,BYTE PTR [eax-0x57cd2ace]
  416ee3:	xor    bh,BYTE PTR [ecx]
  416ee5:	inc    eax
  416ee6:	add    DWORD PTR [eax],eax
  416ee8:	jmp    0x9b416eec
  416eed:	cmp    cl,BYTE PTR [ebx+0x3b]
  416ef0:	jmp    0x167cc92f
  416ef5:	cmp    ebp,DWORD PTR [eax+0x3b]
  416ef8:	fistp  QWORD PTR [edx]
  416efa:	xchg   ebx,eax
  416efb:	cmp    eax,edi
  416efd:	cmp    ebp,DWORD PTR [eax-0x12c48ac5]
  416f03:	cmp    eax,DWORD PTR [edx+0x3c]
  416f06:	adc    DWORD PTR [eax+esi*1],edi
  416f09:	cmp    al,0x9d
  416f0b:	cmp    al,0x9d
  416f0d:	cmp    eax,0x3eac3e87
  416f12:	xchg   ebp,eax
  416f13:	ds std 
  416f15:	cmp    eax,0x3e163ecd
  416f1a:	jle    0x416f5b
  416f1c:	mov    edx,0xd03f9b3e
  416f21:	ds scas eax,DWORD PTR es:[edi]
  416f23:	aas    
  416f24:	(bad)  
  416f25:	ds int3 
  416f27:	aas    
  416f28:	jmp    0x416f68
  416f2a:	out    0x3f,al
  416f2c:	or     BYTE PTR [edi],bh
  416f2e:	stc    
  416f2f:	aas    
  416f30:	add    dh,bh
  416f32:	add    BYTE PTR ds:[eax],al
  416f35:	cmp    DWORD PTR [eax+0x1],edx
  416f38:	add    BYTE PTR [ebp+0x3cffffff],ah
  416f3e:	xor    BYTE PTR [eax],bl
  416f40:	xor    BYTE PTR [eax+0x7f30872f],bh
  416f46:	xor    DWORD PTR [ebx+0x31],ecx
  416f49:	ins    BYTE PTR es:[edi],dx
  416f4a:	xor    DWORD PTR [esi+0x31],esp
  416f4d:	dec    ecx
  416f4e:	xor    DWORD PTR [ebp-0x55cf6acf],ecx
  416f54:	xor    DWORD PTR [ebx+0x30],edi
  416f57:	in     eax,0x31
  416f59:	dec    eax
  416f5a:	xor    bl,BYTE PTR [ecx]
  416f5c:	xor    al,BYTE PTR [esi+0x32]
  416f5f:	xor    bl,BYTE PTR es:[ebp+0x32]
  416f63:	inc    ebp
  416f64:	xor    al,BYTE PTR [edx]
  416f66:	xor    dl,BYTE PTR [ebx+0x32]
  416f69:	repz xor DWORD PTR [ecx+0x32],esp
  416f6d:	push   ss
  416f6e:	xor    bh,BYTE PTR [edi+0x32]
  416f71:	mov    ah,0x31
  416f73:	xchg   edi,eax
  416f74:	xor    bl,BYTE PTR [eax-0x4fcd54cf]
  416f7a:	xor    ebx,eax
  416f7c:	xor    cl,BYTE PTR [eax+0x2f330831]
  416f82:	xor    edx,DWORD PTR [ebx+esi*1]
  416f85:	sbb    al,0x33
  416f87:	sub    dh,BYTE PTR [ebx]
  416f89:	sti    
  416f8a:	xor    bh,BYTE PTR [esi+0x33]
  416f8d:	mov    cl,0x32
  416f8f:	xchg   ebp,eax
  416f90:	xor    ebx,DWORD PTR [eax+0x33ab32]
  416f96:	in     eax,dx
  416f97:	xor    DWORD PTR [esi-0x31cdffcd],edi
  416f9d:	xor    ecx,DWORD PTR ds:0xe33dd32
  416fa3:	xor    dh,ah
  416fa5:	xor    edx,DWORD PTR [ebx]
  416fa7:	xor    bh,bh
  416fa9:	xor    esi,DWORD PTR [esp+esi*1]
  416fac:	or     DWORD PTR [edi+esi*1],esi
  416faf:	xor    al,0x14
  416fb1:	xor    al,0x5b
  416fb3:	xor    al,0x28
  416fb5:	xor    al,0x24
  416fb7:	xor    al,0x32
  416fb9:	xor    al,0x7e
  416fbb:	xor    al,0x5a
  416fbd:	xor    al,0xbf
  416fbf:	xor    al,0x8c
  416fc1:	xor    al,0xcb
  416fc3:	xor    al,0x9c
  416fc5:	xor    al,0xff
  416fc7:	xor    al,0xeb
  416fc9:	xor    al,0xd1
  416fcb:	xor    al,0xc
  416fcd:	xor    eax,0x3523332f
  416fd2:	adc    BYTE PTR [ebx],dh
  416fd4:	xor    DWORD PTR ds:0x35443370,esi
  416fda:	std    
  416fdb:	xor    bl,BYTE PTR [ebp+0x35]
  416fde:	sbb    esi,DWORD PTR [ebx]
  416fe0:	jno    0x417017
  416fe2:	mov    ah,0x33
  416fe4:	mov    ?,WORD PTR ds:0x35a533af
  416fea:	cmp    DWORD PTR [eax],eax
  416fec:	add    BYTE PTR [eax],al
  416fee:	cmp    DWORD PTR [eax],eax
  416ff0:	add    BYTE PTR [eax],al
  416ff2:	cmp    DWORD PTR [eax],eax
  416ff4:	add    BYTE PTR [eax],al
  416ff6:	cmp    DWORD PTR [eax],eax
  416ff8:	add    BYTE PTR [eax],al
  416ffa:	add    BYTE PTR [ecx],bh
  416ffc:	add    BYTE PTR [eax],al
  416ffe:	add    BYTE PTR [ecx],bh
  417000:	add    BYTE PTR [eax],al
  417002:	add    BYTE PTR [ecx],bh
  417004:	add    BYTE PTR [eax],al
  417006:	add    BYTE PTR [ecx],bh
  417008:	add    BYTE PTR [eax],al
  41700a:	add    BYTE PTR [ecx],bh
  41700c:	add    BYTE PTR [eax],al
  41700e:	add    BYTE PTR [ecx],bh
  417010:	add    BYTE PTR [eax],al
  417012:	add    BYTE PTR [ecx],bh
  417014:	add    BYTE PTR [eax],al
  417016:	add    BYTE PTR [ecx],bh
  417018:	add    BYTE PTR [eax],al
  41701a:	add    BYTE PTR [ecx],bh
  41701c:	add    BYTE PTR [eax],al
  41701e:	add    BYTE PTR [ecx],bh
  417020:	add    BYTE PTR [eax],al
  417022:	add    BYTE PTR [ecx],bh
  417024:	add    BYTE PTR [eax],al
  417026:	add    BYTE PTR [ecx],bh
  417028:	add    BYTE PTR [eax],al
  41702a:	add    BYTE PTR [ecx],bh
  41702c:	add    BYTE PTR [eax],al
  41702e:	add    BYTE PTR [ecx],bh
  417030:	add    BYTE PTR [eax],al
  417032:	add    BYTE PTR [ecx],bh
  417034:	add    BYTE PTR [eax],al
  417036:	add    BYTE PTR [ecx],bh
  417038:	add    BYTE PTR [eax],al
  41703a:	add    BYTE PTR [ecx],bh
  41703c:	add    BYTE PTR [eax],al
  41703e:	add    BYTE PTR [ecx],bh
  417040:	add    BYTE PTR [eax],al
  417042:	add    BYTE PTR [ecx],bh
  417044:	add    BYTE PTR [eax],al
  417046:	add    BYTE PTR [ecx],bh
  417048:	add    BYTE PTR [eax],al
  41704a:	add    BYTE PTR [ecx],bh
  41704c:	add    BYTE PTR [eax],al
  41704e:	add    BYTE PTR [ecx],bh
  417050:	add    BYTE PTR [eax],al
  417052:	add    BYTE PTR [ecx],bh
  417054:	add    BYTE PTR [eax],al
  417056:	add    BYTE PTR [ecx],bh
  417058:	add    BYTE PTR [eax],al
  41705a:	add    BYTE PTR [ecx],bh
  41705c:	add    BYTE PTR [eax],al
  41705e:	add    BYTE PTR [eax],al
  417060:	cmp    DWORD PTR [eax],eax
  417062:	add    BYTE PTR [eax],al
  417064:	cmp    DWORD PTR [eax],eax
  417066:	add    BYTE PTR [eax],al
  417068:	cmp    DWORD PTR [eax],eax
  41706a:	add    BYTE PTR [eax],al
  41706c:	cmp    DWORD PTR [eax],eax
  41706e:	add    BYTE PTR [eax],al
  417070:	cmp    DWORD PTR [eax],eax
  417072:	add    BYTE PTR [eax],al
  417074:	cmp    DWORD PTR [eax],eax
  417076:	add    BYTE PTR [eax],al
  417078:	cmp    DWORD PTR [eax],eax
  41707a:	add    BYTE PTR [eax],al
  41707c:	cmp    DWORD PTR [eax],eax
  41707e:	add    BYTE PTR [eax],al
  417080:	cmp    DWORD PTR [eax],eax
  417082:	add    BYTE PTR [eax],al
  417084:	cmp    DWORD PTR [eax],eax
  417086:	add    BYTE PTR [eax],al
  417088:	cmp    DWORD PTR [eax],eax
  41708a:	add    BYTE PTR [eax],al
  41708c:	cmp    DWORD PTR [eax],eax
  41708e:	add    BYTE PTR [eax],al
  417090:	cmp    DWORD PTR [eax],eax
  417092:	add    BYTE PTR [eax],al
  417094:	cmp    DWORD PTR [eax],eax
  417096:	add    BYTE PTR [eax],al
  417098:	cmp    DWORD PTR [eax],eax
  41709a:	add    BYTE PTR [eax],al
  41709c:	cmp    DWORD PTR [eax],eax
  41709e:	add    BYTE PTR [eax],al
  4170a0:	cmp    DWORD PTR [eax],eax
  4170a2:	add    BYTE PTR [eax],al
  4170a4:	cmp    DWORD PTR [eax],eax
  4170a6:	add    BYTE PTR [eax],al
  4170a8:	cmp    DWORD PTR [eax],eax
  4170aa:	add    BYTE PTR [eax],al
  4170ac:	cmp    DWORD PTR [eax],eax
  4170ae:	add    BYTE PTR [eax],al
  4170b0:	cmp    DWORD PTR [eax],eax
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	cmp    DWORD PTR [eax],eax
  4170b6:	add    BYTE PTR [eax],al
  4170b8:	cmp    DWORD PTR [eax],eax
  4170ba:	add    BYTE PTR [eax],al
  4170bc:	cmp    DWORD PTR [eax],eax
  4170be:	add    BYTE PTR [eax],al
  4170c0:	cmp    DWORD PTR [eax],eax
  4170c2:	add    BYTE PTR [eax],al
  4170c4:	add    BYTE PTR [ecx],bh
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	add    BYTE PTR [ecx],bh
  4170ca:	add    BYTE PTR [eax],al
  4170cc:	add    BYTE PTR [ecx],bh
  4170ce:	add    BYTE PTR [eax],al
  4170d0:	add    bh,bh
  4170d2:	and    eax,0x418214
  4170d7:	jmp    DWORD PTR ds:0x418218
  4170dd:	jmp    DWORD PTR ds:0x41821c
  4170e3:	jmp    DWORD PTR ds:0x418220
  4170e9:	jmp    DWORD PTR ds:0x418224
  4170ef:	jmp    DWORD PTR ds:0x41822c
  4170f5:	int3   
  4170f6:	jmp    DWORD PTR ds:0x418234
  4170fc:	jmp    DWORD PTR ds:0x41823c
