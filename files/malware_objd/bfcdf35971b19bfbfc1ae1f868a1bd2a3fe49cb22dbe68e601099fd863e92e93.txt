
bfcdf35971b19bfbfc1ae1f868a1bd2a3fe49cb22dbe68e601099fd863e92e93.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a663
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429897
  401084:	mov    ecx,DWORD PTR ds:0x429f23
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a66b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429f33
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a66f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429f2f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a673
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a677
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a67f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a683
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a687
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x468392fe
  40178d:	mov    edx,es
  40178f:	add    DWORD PTR [ebx+0x5cef8383],0xffffff83
  401796:	sub    DWORD PTR [edx],0x2d
  401799:	and    al,0x3e
  40179b:	cmp    ah,BYTE PTR es:[eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x77dd7776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x26],ebx
  40183b:	mov    BYTE PTR [ecx],dl
  40183d:	add    BYTE PTR ds:0x30b0965c,ah
  401843:	inc    eax
  401844:	mov    ds:0x99019f68,al
  401849:	mov    DWORD PTR [esi+eiz*8-0x48],edi
  40184d:	addr16 adc eax,esp
  401850:	loop   0x40182d
  401852:	sahf   
  401853:	push   esi
  401854:	inc    esi
  401855:	push   es
  401856:	mov    ah,0x50
  401858:	lods   al,BYTE PTR ds:[esi]
  401859:	push   edi
  40185a:	pop    ss
  40185b:	sti    
  40185c:	(bad)  
  40185d:	adc    eax,0x466a99d4
  401862:	int3   
  401863:	jne    0x401834
  401865:	idiv   DWORD PTR [ebp+0x53]
  401868:	ins    DWORD PTR es:[edi],dx
  401869:	loopne 0x40182c
  40186b:	inc    ebp
  40186c:	ins    DWORD PTR es:[edi],dx
  40186d:	xor    bh,ah
  40186f:	pop    ss
  401870:	sub    BYTE PTR [bp-0x10],0x5a
  401875:	aas    
  401876:	sbb    DWORD PTR [ebp-0x68],edx
  401879:	dec    esp
  40187a:	xchg   DWORD PTR [eax+0x38],edi
  40187d:	repz and al,0xd4
  401880:	dec    esp
  401881:	cs clc 
  401883:	push   0xa9e41050
  401888:	sub    eax,0xcc2c4ba3
  40188e:	xchg   ebx,eax
  40188f:	dec    eax
  401890:	fcomp  QWORD PTR [edx+0x65210a2c]
  401896:	push   cs
  401897:	das    
  401898:	(bad)
  40189c:	mov    dl,0x2c
  40189e:	dec    edx
  40189f:	sub    DWORD PTR [edx-0x50e9974f],esi
  4018a5:	push   0xe8fb2110
  4018aa:	(bad)  
  4018ab:	lahf   
  4018ac:	int    0xc3
  4018ae:	xchg   DWORD PTR [ecx-0x267d2eb3],edx
  4018b4:	sbb    DWORD PTR [ebp+0x25],eax
  4018b7:	push   ds
  4018b8:	cmp    BYTE PTR ds:[edx-0x4129aabd],cl
  4018bf:	inc    ebx
  4018c0:	xchg   edx,eax
  4018c1:	aas    
  4018c2:	mov    DWORD PTR [ecx-0x4d44cd01],edi
  4018c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018c9:	or     eax,0x75809734
  4018ce:	je     0x4018d6
  4018d0:	mov    dl,0x95
  4018d2:	stos   DWORD PTR es:[edi],eax
  4018d3:	popf   
  4018d4:	adc    al,0x70
  4018d6:	fisub  WORD PTR [edi+0xd85cf97]
  4018dc:	sbb    al,cl
  4018de:	gs mov ebp,0x6cce0cc7
  4018e4:	call   0xf78f0ee4
  4018e9:	into   
  4018ea:	push   edx
  4018eb:	adc    bl,BYTE PTR [ebp+edx*8+0x152fe32f]
  4018f2:	add    DWORD PTR [esi+0x73],eax
  4018f5:	scas   eax,DWORD PTR es:[edi]
  4018f6:	and    eax,0x654ca6f3
  4018fb:	mov    esi,0x2baa2e2e
  401900:	repz sub dl,BYTE PTR [esi]
  401903:	jns    0x401958
  401905:	(bad)  
  401906:	scas   al,BYTE PTR es:[edi]
  401907:	into   
  401908:	adc    BYTE PTR [esi-0x4e331481],ch
  40190e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190f:	sub    eax,0x6d4bd76b
  401914:	out    dx,al
  401915:	mov    esi,0xf4d1e0a0
  40191a:	sub    eax,0x423f142d
  40191f:	push   cs
  401920:	fild   QWORD PTR [edi-0x662b3eda]
  401926:	lahf   
  401927:	jmp    0x40198c
  401929:	add    DWORD PTR [edi],edx
  40192b:	add    esi,DWORD PTR [ecx-0x2e]
  40192e:	out    0x69,al
  401930:	gs pushf 
  401932:	pop    ebp
  401933:	jbe    0x4018f7
  401935:	sbb    al,0x6c
  401937:	in     eax,0x60
  401939:	mov    dl,0x69
  40193b:	jae    0x40198c
  40193d:	mov    ds:0xc89e0e2a,al
  401942:	or     bl,BYTE PTR [eax+esi*4+0x47]
  401946:	dec    ebx
  401947:	mov    al,ds:0xb3c4ff8e
  40194c:	mov    eax,ds:0xdc265117
  401951:	adc    cl,dh
  401953:	mov    esp,0x38e79fca
  401958:	push   edx
  401959:	push   ss
  40195a:	mov    bh,0xf6
  40195d:	fsubr  st,st(4)
  40195f:	pop    edi
  401960:	sbb    eax,0x494f38e
  401965:	fadd   QWORD PTR ds:0xde143cd4
  40196b:	ins    BYTE PTR es:[edi],dx
  40196c:	xchg   ebx,eax
  40196d:	mov    dh,0x54
  40196f:	ins    DWORD PTR es:[edi],dx
  401970:	sub    ah,dl
  401972:	sbb    eax,0x71c418c8
  401977:	sub    ebx,DWORD PTR [edx-0x5b]
  40197a:	pop    esi
  40197b:	ins    DWORD PTR es:[edi],dx
  40197c:	cs jmp 0x401976
  40197f:	mov    ds:0xd3f838a2,eax
  401984:	dec    ebp
  401985:	jb     0x40192a
  401987:	popa   
  401988:	sub    BYTE PTR [ecx+0x67],ah
  40198b:	mov    bh,0xc6
  40198d:	cld    
  40198e:	push   ebp
  40198f:	test   eax,0xf8392845
  401994:	xor    bl,cl
  401996:	xchg   ecx,eax
  401997:	ret    0x1aaa
  40199a:	pop    es
  40199b:	adc    eax,DWORD PTR [ecx-0x3b88ec41]
  4019a1:	cmp    eax,0x36d651c8
  4019a6:	mul    DWORD PTR [esi-0x9549639]
  4019ac:	enter  0xaaa1,0x3a
  4019b0:	or     BYTE PTR [eax],dl
  4019b2:	stos   DWORD PTR es:[edi],eax
  4019b3:	ffree  st(2)
  4019b5:	jg     0x401a1b
  4019b7:	jp     0x40196c
  4019b9:	jbe    0x401a19
  4019bb:	push   edx
  4019bc:	lahf   
  4019bd:	sbb    eax,0x6b9e2eaf
  4019c2:	outs   dx,DWORD PTR ds:[esi]
  4019c3:	enter  0x8992,0x3c
  4019c7:	scas   eax,DWORD PTR es:[edi]
  4019c8:	nop
  4019c9:	xor    al,0x16
  4019cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019cc:	push   edi
  4019cd:	adc    al,0xd8
  4019cf:	(bad)  
  4019d0:	jp     0x4019f6
  4019d2:	add    eax,DWORD PTR [ecx]
  4019d4:	cwde   
  4019d5:	dec    esi
  4019d6:	pop    eax
  4019d7:	cli    
  4019d8:	ins    DWORD PTR es:[edi],dx
  4019d9:	add    eax,0x542ebf24
  4019de:	into   
  4019df:	pop    eax
  4019e0:	icebp  
  4019e1:	in     al,dx
  4019e2:	int3   
  4019e3:	test   eax,0xfb72d7c6
  4019e8:	sbb    eax,0x829473b
  4019ed:	mov    al,ds:0xdab0d578
  4019f2:	mov    edx,0x8a349e5d
  4019f7:	adc    edx,DWORD PTR [ecx+0x1d883c83]
  4019fd:	xadd   BYTE PTR [esp+ecx*4+0x780a0cec],bl
  401a05:	daa    
  401a06:	mov    al,ds:0x2d996344
  401a0b:	sbb    esi,edi
  401a0d:	adc    al,0x9f
  401a0f:	in     eax,0x61
  401a11:	push   esi
  401a12:	fwait
  401a13:	outs   dx,BYTE PTR ds:[esi]
  401a14:	loope  0x401a65
  401a16:	ret    
  401a17:	retf   0x6a8e
  401a1a:	in     eax,0x61
  401a1c:	pop    esi
  401a1d:	xchg   edx,eax
  401a1e:	and    ah,0x5c
  401a21:	es adc al,0xcb
  401a24:	je     0x4019db
  401a26:	inc    ebp
  401a27:	mov    ebx,0xd8df1f57
  401a2c:	aaa    
  401a2d:	lock (bad) 
  401a2f:	clc    
  401a30:	mov    eax,ds:0x31229992
  401a35:	mov    ds:0x33d5f481,al
  401a3a:	aad    0xe0
  401a3c:	sbb    al,0x93
  401a3e:	xchg   BYTE PTR [edi],bl
  401a40:	push   esp
  401a41:	mov    al,0xb7
  401a43:	inc    edi
  401a44:	shl    BYTE PTR [ecx-0x36],0xbf
  401a48:	loop   0x401aae
  401a4a:	cmc    
  401a4b:	fild   WORD PTR [edi]
  401a4d:	xchg   esi,eax
  401a4e:	inc    esi
  401a4f:	mov    bl,0x12
  401a51:	imul   edx,edx,0xe53a1b26
  401a57:	push   edx
  401a58:	jmp    0x401a53
  401a5a:	sahf   
  401a5b:	and    ah,BYTE PTR [edi-0x3c]
  401a5e:	imul   DWORD PTR [ecx+0x4a]
  401a61:	les    eax,FWORD PTR [ebp+0x55]
  401a64:	mov    al,ds:0xe8fc3520
  401a69:	mov    WORD PTR [ecx],es
  401a6b:	fld1   
  401a6d:	out    dx,al
  401a6e:	push   0x50
  401a70:	and    al,0xd0
  401a72:	jb     0x401abc
  401a74:	dec    ecx
  401a75:	lea    ebx,ds:0xba835893
  401a7b:	dec    eax
  401a7c:	push   eax
  401a7d:	ret    
  401a7e:	push   cs
  401a7f:	or     edx,DWORD PTR [ebx-0x6b]
  401a82:	mov    ds:0x81a61641,eax
  401a87:	pop    ecx
  401a88:	sub    al,0x45
  401a8a:	push   edx
  401a8b:	jmp    0x56592703
  401a90:	fnstsw WORD PTR [esi]
  401a92:	retf   0x2151
  401a95:	sbb    bh,0x36
  401a98:	jne    0x401a6c
  401a9a:	(bad)  
  401a9b:	pusha  
  401a9c:	push   ds
  401a9d:	mov    dh,0xd0
  401a9f:	out    0xc4,eax
  401aa1:	jmp    0xe727dabc
  401aa6:	sbb    al,0xa5
  401aa8:	push   edi
  401aa9:	or     eax,0x72029c62
  401aae:	xchg   edx,eax
  401aaf:	rol    DWORD PTR [esi+0x7c3ac832],0xd3
  401ab6:	jg     0x401b11
  401ab8:	pusha  
  401ab9:	sub    edi,esi
  401abb:	and    DWORD PTR [ecx+0x235100d9],eax
  401ac1:	add    bh,ah
  401ac3:	cmp    eax,0x68ba4896
  401ac8:	pop    esi
  401ac9:	ffree  st(2)
  401acb:	push   ebx
  401acc:	dec    edx
  401acd:	pop    ds
  401ace:	mov    DWORD PTR [esi],ecx
  401ad0:	idiv   BYTE PTR [esi]
  401ad2:	imul   eax,DWORD PTR [ebp-0x5d8043b8],0x1b5db865
  401adc:	adc    al,BYTE PTR [esi]
  401ade:	add    DWORD PTR [ebp+eax*8-0x49d9bea8],esp
  401ae5:	icebp  
  401ae6:	add    DWORD PTR [esi],ebx
  401ae8:	rcr    DWORD PTR [ebx+0x31],0x1
  401aec:	xchg   ecx,eax
  401aed:	cmp    eax,0x1c089f6a
  401af2:	mov    esi,DWORD PTR [esi+ebx*8+0x61]
  401af6:	mov    bl,0x6c
  401af8:	bswap  ebx
  401afa:	mov    cl,0xe5
  401afc:	fimul  DWORD PTR [ebx]
  401afe:	mov    ds:0x33514d1,eax
  401b03:	mov    ah,0x6
  401b05:	add    BYTE PTR [eax+0x797d8854],0x62
  401b0c:	sbb    DWORD PTR [ecx],esp
  401b0e:	(bad)  
  401b10:	test   al,0x46
  401b12:	sbb    al,0x22
  401b14:	mov    ah,0x46
  401b16:	cmp    al,0x76
  401b18:	xor    edi,DWORD PTR [ecx]
  401b1a:	xor    esp,esi
  401b1c:	mov    ecx,0xb109f013
  401b21:	arpl   WORD PTR [ebp+0x69944d07],dx
  401b27:	pop    edx
  401b28:	add    dh,BYTE PTR [ebx-0x5c]
  401b2b:	mov    esp,0xa2c06e09
  401b30:	fwait
  401b31:	sar    al,1
  401b33:	scas   eax,DWORD PTR es:[edi]
  401b34:	mov    ch,0xfd
  401b36:	leave  
  401b37:	lods   al,BYTE PTR ds:[esi]
  401b38:	pop    ecx
  401b39:	fiadd  DWORD PTR [ebp+0x6f]
  401b3c:	xor    eax,0xf6a86ed2
  401b41:	popf   
  401b42:	fs cdq 
  401b44:	xchg   edi,eax
  401b45:	dec    edx
  401b46:	push   eax
  401b47:	mov    ecx,0x85ecbb2d
  401b4c:	int    0x9d
  401b4e:	cwde   
  401b4f:	loop   0x401b2f
  401b51:	ja     0x401b9d
  401b53:	add    DWORD PTR [esi+0x50],ebp
  401b56:	lea    ecx,[esi-0x75]
  401b59:	retf   
  401b5a:	xchg   ecx,eax
  401b5b:	cwde   
  401b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b5d:	fwait
  401b5e:	punpcklbw mm6,DWORD PTR [ebx]
  401b61:	sub    eax,0xe894b487
  401b66:	mov    BYTE PTR [esi+0x507532c],dh
  401b6c:	test   edi,ebp
  401b6e:	ds or  al,0xa
  401b71:	scas   eax,DWORD PTR es:[edi]
  401b72:	xchg   esp,eax
  401b73:	fidivr DWORD PTR [ecx-0x3]
  401b76:	sub    dl,cl
  401b78:	jp     0x401b0c
  401b7a:	es push ds
  401b7c:	fs int 0xd7
  401b7f:	outs   dx,DWORD PTR ds:[esi]
  401b80:	add    DWORD PTR ss:[edi-0x309fd3b4],eax
  401b87:	sub    al,0xef
  401b89:	and    BYTE PTR [ebp+esi*8-0x6ca97b70],al
  401b90:	add    al,0xf7
  401b92:	push   0xffffff86
  401b94:	push   esi
  401b95:	mov    al,ds:0xea8425f1
  401b9a:	or     esp,ebp
  401b9c:	inc    edx
  401b9d:	arpl   WORD PTR [ebx-0x7c],cx
  401ba0:	xor    ebx,DWORD PTR [edx-0x7a25aec7]
  401ba6:	ins    DWORD PTR es:[edi],dx
  401ba7:	xchg   esp,eax
  401ba8:	and    eax,0x1693a3e4
  401bad:	add    BYTE PTR [ebx-0x34],bh
  401bb0:	or     ebx,DWORD PTR [ebx]
  401bb2:	fs and al,0x57
  401bb5:	out    0x80,al
  401bb7:	cmp    al,BYTE PTR [esi+0x78]
  401bba:	lea    eax,[ecx-0x46]
  401bbd:	(bad)  
  401bbf:	test   al,0xf8
  401bc1:	mov    edi,0xcc8ce88d
  401bc6:	push   es
  401bc7:	xchg   ebp,eax
  401bc8:	and    eax,0x4fd3cd1d
  401bcd:	addr16 ret 0x3e0f
  401bd1:	shl    DWORD PTR [edx+0x63],cl
  401bd4:	jecxz  0x401bc3
  401bd6:	inc    ebx
  401bd7:	mov    dl,0x21
  401bd9:	loop   0x401c54
  401bdb:	push   edx
  401bdc:	jno    0x401c47
  401bde:	rcl    al,0x25
  401be1:	jmp    0x1ab2:0xf3f098f0
  401be8:	les    esp,FWORD PTR [edi+0x1a8891ab]
  401bee:	jmp    0x401c19
  401bf0:	mov    ah,0x18
  401bf2:	addr16 jle 0x401c31
  401bf5:	xor    al,BYTE PTR [ebx-0x37c4d7c4]
  401bfb:	inc    eax
  401bfc:	leave  
  401bfd:	mov    dl,0xe6
  401bff:	jne    0x401c14
  401c01:	push   es
  401c02:	xor    esi,ebx
  401c04:	sbb    al,ah
  401c06:	call   0x3a6ab097
  401c0b:	test   al,0x88
  401c0d:	sub    eax,0xba83387b
  401c12:	fld    TBYTE PTR [ebp-0x5f]
  401c15:	xor    BYTE PTR [ecx+0x3c],0xe7
  401c19:	mov    cs,WORD PTR [edi-0x105ad54d]
  401c1f:	pop    eax
  401c20:	in     eax,0x2c
  401c22:	mov    dh,0xbc
  401c24:	sub    esi,DWORD PTR ds:0x1b56e63d
  401c2a:	adc    ecx,edx
  401c2c:	jecxz  0x401c5e
  401c2e:	mov    ds:0x5e694ac2,al
  401c33:	shl    esp,1
  401c35:	pop    edi
  401c36:	popw   ds
  401c38:	retf   
  401c39:	xor    ebx,DWORD PTR [eax]
  401c3b:	mov    esi,DWORD PTR [eax-0x58d03cb1]
  401c41:	dec    eax
  401c42:	push   eax
  401c43:	xchg   BYTE PTR [eax+0x10ff341],dl
  401c49:	mov    DWORD PTR [ecx+0x216fe1c9],edi
  401c4f:	add    al,0x7a
  401c51:	push   0xfffffff5
  401c53:	ins    BYTE PTR es:[edi],dx
  401c54:	scas   eax,DWORD PTR es:[edi]
  401c55:	dec    eax
  401c56:	add    eax,0xf55feceb
  401c5b:	xor    eax,0x438e01e2
  401c60:	adc    al,0xa4
  401c62:	shl    DWORD PTR [edx+0x17e2819a],1
  401c68:	sar    DWORD PTR ds:0xcd3fbcf9,cl
  401c6e:	clc    
  401c6f:	push   0xffffff99
  401c71:	jmp    0x5a97ec79
  401c76:	pop    esp
  401c77:	pop    ss
  401c78:	adc    cl,BYTE PTR [ebp+esi*4-0x43]
  401c7c:	cmp    eax,0x26a0a7f
  401c81:	pop    esp
  401c82:	arpl   WORD PTR [edx+ebx*2-0x1b6f811e],di
  401c89:	xor    edx,DWORD PTR [ecx+0x51]
  401c8c:	leave  
  401c8d:	(bad)  
  401c8e:	dec    esi
  401c8f:	jg     0x401cd9
  401c91:	mov    ds:0xcca7b586,eax
  401c96:	ret    0x94fa
  401c99:	mov    bl,0x4
  401c9b:	loopne 0x401c57
  401c9d:	jno    0x401c75
  401c9f:	and    DWORD PTR [ebx-0x68ffcaa9],0x3cf3da49
  401ca9:	cmp    DWORD PTR [esi],ebp
  401cab:	test   BYTE PTR [eax+0x739a38ba],dh
  401cb1:	mov    DWORD PTR [edi+0x375ccf6b],esi
  401cb7:	shr    DWORD PTR [eax],1
  401cb9:	mov    al,0xcc
  401cbb:	lea    edx,[edi+0x2da8330]
  401cc1:	add    DWORD PTR [edx+0x1a],0xffffffc2
  401cc5:	scas   al,BYTE PTR es:[edi]
  401cc6:	jae    0x401cba
  401cc8:	ins    DWORD PTR es:[edi],dx
  401cc9:	adc    al,BYTE PTR [ebp+0x2b]
  401ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ccd:	xchg   edi,eax
  401cce:	add    BYTE PTR [esp+ecx*8-0x3c7750e9],ah
  401cd5:	adc    al,0x2a
  401cd7:	fsubrp st(2),st
  401cd9:	sbb    BYTE PTR [esi+0x51],ch
  401cdc:	xchg   ebx,eax
  401cdd:	and    al,0xdd
  401cdf:	int3   
  401ce0:	cmp    al,0xe6
  401ce2:	popf   
  401ce3:	call   0x7e32:0x95dab80e
  401cea:	pop    eax
  401ceb:	ds inc esi
  401ced:	or     edi,DWORD PTR [edi+eax*4+0x5030328c]
  401cf4:	jno    0x401ca5
  401cf6:	pop    edi
  401cf7:	add    DWORD PTR [ebx-0x45],ebp
  401cfa:	dec    eax
  401cfb:	adc    al,0x15
  401cfe:	enter  0xc8c3,0xb1
  401d02:	test   al,0xfd
  401d04:	retf   0x80b2
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	add    ebx,DWORD PTR [ebp+0x5a2b3154]
  401d0e:	adc    bl,ah
  401d10:	mov    edx,0x1f8801e9
  401d15:	cdq    
  401d16:	enter  0x20e9,0x29
  401d1a:	push   esp
  401d1b:	xor    eax,edx
  401d1d:	xchg   ecx,eax
  401d1e:	test   eax,0x793a74bf
  401d23:	out    0x5a,eax
  401d25:	dec    edi
  401d26:	clc    
  401d27:	sbb    DWORD PTR [edi+0x630f284e],ecx
  401d2d:	push   esp
  401d2e:	loop   0x401d03
  401d30:	imul   esp,DWORD PTR [esi-0x374f051e],0x9ac5e47b
  401d3a:	ret    0x8f67
  401d3d:	imul   ebx,DWORD PTR [ebx+0x1],0x46
  401d41:	mov    cl,al
  401d43:	ficomp WORD PTR [ecx+0x6]
  401d46:	fwait
  401d47:	pop    es
  401d48:	jmp    0x6304:0x39d1f392
  401d4f:	pop    ebx
  401d50:	sbb    al,0xa4
  401d52:	xor    DWORD PTR [eax+0x1b],esi
  401d55:	fmul   DWORD PTR [edi-0x67f7e8b2]
  401d5b:	or     eax,DWORD PTR [ebp-0x3d]
  401d5e:	js     0x401d0e
  401d60:	aas    
  401d61:	cli    
  401d62:	test   DWORD PTR [ebx+0x4febe853],ebp
  401d68:	push   edx
  401d69:	sbb    ebp,DWORD PTR [edi+edx*2+0x5b7b6aff]
  401d70:	adc    eax,0x1a0d4bd1
  401d75:	push   0x34
  401d77:	jp     0x401d1b
  401d79:	call   0x8d988df1
  401d7e:	leave  
  401d7f:	dec    esi
  401d80:	jae    0x401d6a
  401d82:	jmp    0x401d60
  401d84:	cmp    al,0xb3
  401d86:	xor    dl,cl
  401d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d89:	nop
  401d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8b:	mov    esi,edx
  401d8d:	imul   ecx,DWORD PTR [ecx-0x18a05690],0x25
  401d94:	push   cs
  401d95:	sbb    esi,DWORD PTR [edx]
  401d97:	cwde   
  401d98:	fmul   QWORD PTR [esi-0x55d56acd]
  401d9e:	stos   BYTE PTR es:[edi],al
  401d9f:	xor    eax,0x21276e50
  401da4:	les    edi,FWORD PTR [esi]
  401da6:	in     al,dx
  401da7:	cwde   
  401da8:	mov    eax,0xb60ef56
  401dad:	pop    esp
  401dae:	and    dl,bl
  401db0:	jno    0x401e00
  401db2:	inc    eax
  401db3:	(bad)  
  401db4:	adc    eax,0x4e7a0f32
  401db9:	shl    DWORD PTR [ebx-0x1d],cl
  401dbc:	jl     0x401db4
  401dbe:	push   esi
  401dbf:	sbb    al,BYTE PTR [ebx]
  401dc1:	clc    
  401dc2:	inc    eax
  401dc3:	out    0x48,eax
  401dc5:	mov    ds:0x7543cc5b,eax
  401dca:	in     eax,0x4f
  401dcc:	adc    esi,esp
  401dce:	in     eax,dx
  401dcf:	popf   
  401dd0:	inc    esp
  401dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dd2:	jp     0x401e30
  401dd4:	and    BYTE PTR [ebx],cl
  401dd6:	mov    ds:0x63381246,al
  401ddb:	fstp   TBYTE PTR [edi-0x17351625]
  401de1:	ins    BYTE PTR es:[edi],dx
  401de2:	mov    bh,0x9e
  401de4:	xor    al,0x64
  401de6:	dec    edx
  401de7:	jbe    0x401dc4
  401de9:	(bad)  
  401dea:	fwait
  401deb:	sbb    al,0x4e
  401ded:	int3   
  401dee:	fmul   QWORD PTR [edx-0x5c]
  401df1:	mov    esi,0x5bf030ab
  401df6:	xchg   DWORD PTR [esi-0x3842a3a1],edi
  401dfc:	mov    WORD PTR [esi],ds
  401dfe:	jb     0x401e08
  401e00:	cdq    
  401e01:	or     DWORD PTR [ebp-0x797f0297],edx
  401e07:	pop    ds
  401e08:	jo     0x401dcb
  401e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0b:	cmp    BYTE PTR [esi+edx*2],dl
  401e0e:	sar    BYTE PTR [eax],0xae
  401e11:	sahf   
  401e12:	gs ss in eax,dx
  401e15:	jmp    0x401e79
  401e17:	fsubp  st(4),st
  401e19:	mov    WORD PTR [esi+0x4c],?
  401e1c:	imul   ebp,edi,0xffffff8a
  401e1f:	inc    esi
  401e20:	pop    ss
  401e21:	and    eax,0x6a3dd6d6
  401e26:	mov    bl,0x2
  401e28:	pop    ebx
  401e29:	imul   BYTE PTR ss:[esi]
  401e2c:	adc    edi,esp
  401e2e:	xor    al,0xcc
  401e30:	push   ss
  401e31:	stos   DWORD PTR es:[edi],eax
  401e32:	and    ebx,DWORD PTR [esi-0x1]
  401e35:	xchg   ecx,eax
  401e36:	mov    cs,WORD PTR [esi-0x5aa96ac8]
  401e3c:	loope  0x401e35
  401e3e:	(bad)  
  401e40:	popf   
  401e41:	cmp    eax,0x7cc77dd3
  401e46:	repnz inc eax
  401e48:	cmp    DWORD PTR [esi-0x43],edi
  401e4b:	dec    edi
  401e4c:	mov    ch,BYTE PTR [edx+0x27082775]
  401e52:	dec    esp
  401e53:	retf   0xe3
  401e56:	call   0xb879b694
  401e5b:	dec    edi
  401e5c:	jg     0x401e09
  401e5e:	xchg   edi,eax
  401e5f:	cmc    
  401e60:	xlat   BYTE PTR ds:[ebx]
  401e61:	and    BYTE PTR [edi-0x3b],dl
  401e64:	cli    
  401e65:	add    al,0x8a
  401e67:	xor    cl,BYTE PTR gs:[edi]
  401e6a:	hlt    
  401e6b:	add    eax,edx
  401e6d:	(bad)  
  401e6e:	adc    eax,0xe248f2a2
  401e73:	mov    esi,0x8a3d5162
  401e78:	ins    BYTE PTR es:[edi],dx
  401e79:	(bad)  
  401e7a:	repz adc DWORD PTR [edi+0x27f9c3c7],esp
  401e81:	ss add al,0x19
  401e85:	div    DWORD PTR [ebx+0x165f5fbb]
  401e8b:	or     BYTE PTR [ecx-0x44695e87],bl
  401e91:	jmp    0x401e5c
  401e93:	dec    ecx
  401e94:	(bad)
  401e97:	mov    ds:0x3c434c72,al
  401e9c:	popf   
  401e9d:	inc    esp
  401e9e:	mov    ebx,0xe0dcfec3
  401ea3:	push   ebp
  401ea4:	dec    edx
  401ea5:	(bad)  
  401ea6:	jmp    0x401ebf
  401ea8:	jl     0x401f06
  401eaa:	aaa    
  401eab:	fs in  al,0xf3
  401eae:	jl     0x401e79
  401eb0:	retf   0xa822
  401eb3:	lods   eax,DWORD PTR ss:[esi]
  401eb5:	dec    ecx
  401eb6:	hlt    
  401eb7:	xchg   edi,eax
  401eb8:	fs or  eax,0x4c02f21
  401ebe:	repz add al,0x73
  401ec1:	xor    eax,0x6e0bf33b
  401ec6:	int3   
  401ec7:	mov    esp,0x65082504
  401ecc:	push   edi
  401ecd:	bnd jbe 0x401eef
  401ed0:	out    dx,eax
  401ed1:	jecxz  0x401e7e
  401ed3:	lahf   
  401ed4:	repnz mov dh,0xb0
  401ed7:	out    0xb,eax
  401ed9:	pop    ebp
  401eda:	xchg   esi,eax
  401edb:	fmul   st(4),st
  401edd:	ins    BYTE PTR es:[edi],dx
  401ede:	xor    DWORD PTR [edi-0x5e718095],edx
  401ee4:	jg     0x401eca
  401ee6:	test   DWORD PTR [eax-0x18],edx
  401ee9:	mov    eax,0xfc5cb085
  401eee:	cmp    al,0xe6
  401ef0:	cmp    BYTE PTR [edi-0x7c],bl
  401ef3:	push   esi
  401ef4:	mov    ecx,0xbf7a1fb5
  401ef9:	cmp    eax,0xc6ecedc0
  401efe:	shr    DWORD PTR [ecx+eiz*1-0xb],cl
  401f02:	or     DWORD PTR [edx],edx
  401f04:	inc    esi
  401f05:	pop    ds
  401f06:	mov    esi,0x6ab74e0d
  401f0b:	fsubr  DWORD PTR [edi-0x41]
  401f0e:	pushf  
  401f0f:	xchg   esi,eax
  401f10:	inc    edx
  401f11:	jmp    0x8c98cebb
  401f16:	push   ds
  401f17:	cmp    BYTE PTR [ebp-0x7e5641bb],cl
  401f1d:	loope  0x401f73
  401f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f20:	mov    ebp,0x6a59b68e
  401f25:	mov    cl,BYTE PTR [edi]
  401f27:	scas   al,BYTE PTR es:[edi]
  401f28:	popf   
  401f29:	shl    BYTE PTR [eax-0x5267118],cl
  401f2f:	leave  
  401f30:	lds    esi,FWORD PTR [ecx]
  401f32:	mov    ecx,0x568f5258
  401f37:	mov    eax,ds:0x2cd231cc
  401f3c:	mov    dh,0xed
  401f3e:	add    BYTE PTR [eax],dh
  401f40:	cmp    edx,DWORD PTR [ecx+ebp*4]
  401f43:	ret    
  401f44:	jnp    0x401f5c
  401f46:	push   edi
  401f47:	rcl    DWORD PTR [edi+0x3f],0xa7
  401f4b:	js     0x401f10
  401f4d:	pop    ds
  401f4e:	mov    BYTE PTR [eax+0x4e],ah
  401f51:	and    edi,DWORD PTR [eax+0x4f]
  401f54:	es pop ss
  401f56:	mov    ah,BYTE PTR [esi-0x4c]
  401f59:	jne    0x401fbb
  401f5b:	pop    edx
  401f5c:	inc    esi
  401f5d:	cmp    eax,0xbbdcd5d8
  401f62:	int    0x54
  401f64:	adc    DWORD PTR [eax-0x5424ed4e],eax
  401f6a:	pop    ds
  401f6b:	xor    eax,0xc178ade
  401f70:	(bad)  
  401f73:	mov    cl,0x8a
  401f75:	jle    0x401fa3
  401f77:	sub    al,0x64
  401f79:	sbb    BYTE PTR [edx+0x7611e6e2],0xc0
  401f80:	mov    esp,0x46c11d07
  401f85:	xor    eax,0x37d7bb69
  401f8a:	dec    ebp
  401f8b:	pop    eax
  401f8c:	mov    BYTE PTR [ebx],cl
  401f8e:	jns    0x401f1d
  401f90:	add    BYTE PTR [edi+0x6a1e8dca],al
  401f96:	fwait
  401f97:	lea    ecx,[esi-0x79]
  401f9a:	adc    DWORD PTR [ebp+0x4796f92f],esp
  401fa0:	add    al,0x6
  401fa2:	das    
  401fa3:	addr16 cdq 
  401fa5:	fcomp  QWORD PTR [ebp+0x10]
  401fa8:	stc    
  401fa9:	mov    al,ds:0xc299e41f
  401faf:	call   0xa777d7c6
  401fb4:	dec    ecx
  401fb5:	es xor al,0xfa
  401fb8:	adc    al,0x82
  401fba:	or     cl,BYTE PTR [eax+0x18ce326e]
  401fc0:	push   eax
  401fc1:	aaa    
  401fc2:	sbb    edi,eax
  401fc4:	xor    dl,0xd2
  401fc7:	inc    edx
  401fc8:	mov    esi,0xd05eab89
  401fcd:	and    al,0x15
  401fcf:	xor    edx,DWORD PTR [esi+ebx*4]
  401fd2:	xchg   BYTE PTR [ebx],bh
  401fd4:	push   ebx
  401fd5:	cmp    BYTE PTR [esi-0x5a416155],al
  401fdb:	mov    eax,0xa31c6d3c
  401fe0:	call   0xfab1b595
  401fe5:	mov    dh,0xc3
  401fe7:	sbb    DWORD PTR [edx],edi
  401fe9:	push   ss
  401fea:	adc    edi,esp
  401fec:	adc    ebx,DWORD PTR [edi]
  401fee:	mov    edx,0xfc79a2d0
  401ff3:	mov    DWORD PTR [ecx+ebp*4],esp
  401ff6:	cli    
  401ff7:	in     al,0x62
  401ff9:	mov    DWORD PTR [ecx+edi*1],edi
  401ffc:	jo     0x40200a
  401ffe:	pop    ecx
  401fff:	xor    dl,BYTE PTR [esp+edx*8-0x2e]
  402003:	push   edx
  402004:	xchg   edi,eax
  402005:	or     eax,0x7f88e1d9
  40200a:	cmp    eax,0x9e735b07
  40200f:	sar    cl,cl
  402011:	(bad)  
  402012:	test   al,0x2d
  402014:	cmp    DWORD PTR [edx],ecx
  402016:	mov    ecx,0x7b252779
  40201b:	(bad)  
  40201c:	sbb    eax,0x162e812a
  402021:	pop    ss
  402022:	mov    edi,0x95016c89
  402027:	dec    esi
  402028:	rol    BYTE PTR [ecx],0xa0
  40202b:	or     cl,BYTE PTR [ebp+0x56dc87b8]
  402031:	nop
  402032:	ds fucomip st,st(5)
  402035:	push   esi
  402036:	pop    esp
  402037:	add    edx,DWORD PTR [ebx]
  402039:	(bad)  
  40203a:	daa    
  40203b:	sub    al,0xa
  40203d:	dec    edi
  40203e:	fcomp  st(4)
  402040:	ret    
  402041:	xor    dh,BYTE PTR [esi]
  402043:	loop   0x402018
  402045:	arpl   WORD PTR [edx-0xd1a057f],cx
  40204b:	inc    edi
  40204c:	and    eax,0x149d8c86
  402051:	jno    0x402057
  402053:	fcmovnb st,st(7)
  402055:	nop
  402056:	mov    edi,0xd4cdca60
  40205b:	nop
  40205c:	xchg   esp,eax
  40205d:	pop    ebx
  40205e:	sti    
  40205f:	mov    DWORD PTR [ebx-0x7c],esp
  402062:	loop   0x402067
  402064:	out    dx,eax
  402065:	into   
  402066:	call   0x3cd84059
  40206b:	xchg   BYTE PTR [ebx+eiz*4],ch
  40206e:	fnsave [esi+0x22669c4d]
  402074:	dec    esi
  402075:	xor    dl,BYTE PTR [eax]
  402077:	es repnz adc al,0x97
  40207b:	sbb    al,0x78
  40207d:	jns    0x402046
  40207f:	data16 ins BYTE PTR es:[edi],dx
  402081:	inc    esi
  402082:	jns    0x4020d6
  402084:	test   al,0x9d
  402086:	mov    esp,0xf2a66bdb
  40208b:	les    ecx,FWORD PTR [edi-0x65]
  40208e:	jmp    0x67de:0x12a64c7e
  402095:	ins    DWORD PTR es:[edi],dx
  402096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402097:	mov    ecx,0xd8aaaa67
  40209c:	pop    edi
  40209d:	adc    al,0xe0
  40209f:	xchg   esi,eax
  4020a0:	xchg   ebx,eax
  4020a1:	or     edi,DWORD PTR [edx+0x1]
  4020a4:	loopne 0x40208c
  4020a6:	rol    BYTE PTR [edi-0x108c5595],cl
  4020ac:	imul   esp,DWORD PTR [edx-0x13],0x1a
  4020b0:	mov    cl,0x98
  4020b2:	sbb    bl,al
  4020b4:	mov    ds:0x17f01dbe,eax
  4020b9:	jmp    0x402111
  4020bb:	mov    ch,0x6f
  4020bd:	inc    edx
  4020be:	xor    esi,edx
  4020c0:	retf   0xffda
  4020c3:	mov    ch,0x9d
  4020c5:	sbb    al,0xe4
  4020c7:	ret    
  4020c8:	pop    DWORD PTR es:[ebx]
  4020cb:	and    eax,0xd312ac4d
  4020d0:	add    BYTE PTR [ebx-0x21],al
  4020d3:	inc    edi
  4020d4:	es in  eax,dx
  4020d6:	aad    0x4b
  4020d8:	das    
  4020d9:	je     0x4020d2
  4020db:	(bad)  [ebx+ebx*4-0x12]
  4020df:	mov    ss:0x2490cc38,al
  4020e5:	mov    esi,0x1e345690
  4020ea:	lds    ebp,FWORD PTR [eax-0x1c]
  4020ed:	sub    BYTE PTR [edi-0x75],ah
  4020f0:	push   ebx
  4020f1:	dec    edx
  4020f2:	and    DWORD PTR [ebx-0x9],ecx
  4020f5:	lock dec edi
  4020f7:	pop    edx
  4020f8:	cdq    
  4020f9:	sahf   
  4020fa:	enter  0x2b36,0x23
  4020fe:	daa    
  4020ff:	xor    eax,0x2cd610d3
  402104:	jo     0x4020c3
  402106:	addr16 ss mov esi,0x662bafb2
  40210d:	cs inc ebx
  40210f:	fwait
  402110:	test   eax,0x8ba161f9
  402115:	mov    WORD PTR [edi+0x5f69cb05],es
  40211b:	ins    BYTE PTR es:[edi],dx
  40211c:	jo     0x402109
  40211e:	aad    0xb1
  402120:	hlt    
  402121:	jmp    0x402154
  402123:	daa    
  402124:	jge    0x40210e
  402126:	xlat   BYTE PTR ds:[ebx]
  402127:	or     ebp,esi
  402129:	sbb    ebx,esp
  40212b:	mov    dl,0xb4
  40212d:	push   ebx
  40212e:	arpl   bp,ax
  402130:	mov    ds:0xd78c2d90,eax
  402135:	in     al,dx
  402136:	outs   dx,BYTE PTR ds:[esi]
  402137:	(bad)  
  402138:	jbe    0x402145
  40213a:	mov    ds:0x784fbd85,al
  40213f:	push   edx
  402140:	repnz or eax,0x49224e21
  402146:	inc    ebx
  402147:	sbb    DWORD PTR [edi+0xf],edx
  40214a:	popa   
  40214b:	sahf   
  40214c:	lea    edx,[ebx-0x4ab6296a]
  402152:	or     cl,BYTE PTR [ecx-0x445ef48e]
  402158:	pop    ebx
  402159:	sub    DWORD PTR [edi+0x5a],edi
  40215c:	pop    edi
  40215d:	sub    BYTE PTR [ebp+0x77d8513],ch
  402163:	push   esp
  402164:	shl    ebp,cl
  402166:	mov    edx,0xf2e09726
  40216b:	push   0xb5ae4ef
  402170:	int    0x7c
  402172:	push   esp
  402173:	leave  
  402174:	jne    0x4020f6
  402176:	into   
  402177:	and    DWORD PTR [ebx],0xac8ab4aa
  40217d:	add    DWORD PTR [ebp+0x2f],esi
  402180:	dec    ecx
  402181:	add    DWORD PTR [ecx],edx
  402183:	cmp    cl,BYTE PTR [esi]
  402185:	(bad)  
  402186:	(bad)
  402189:	outs   dx,BYTE PTR ds:[esi]
  40218a:	xor    BYTE PTR [eax-0x71],0x10
  40218e:	leave  
  40218f:	(bad)  
  402190:	repz xlat BYTE PTR ds:[ebx]
  402192:	push   cs
  402193:	add    al,0x2f
  402195:	icebp  
  402196:	int    0x96
  402198:	and    eax,DWORD PTR [edi]
  40219a:	pop    edi
  40219b:	pop    ebx
  40219c:	mov    bh,0xe2
  40219e:	lahf   
  40219f:	pushf  
  4021a0:	jmp    0xf5fa:0xfc6d8997
  4021a7:	cmp    BYTE PTR [ebp+0x77],al
  4021aa:	mov    al,ds:0xcc01327f
  4021af:	mov    bh,0x74
  4021b1:	ins    DWORD PTR es:[edi],dx
  4021b2:	(bad)  
  4021b3:	sub    ah,ah
  4021b5:	xchg   edx,eax
  4021b6:	das    
  4021b7:	add    al,0x5e
  4021b9:	sti    
  4021ba:	inc    edi
  4021bb:	xchg   edi,eax
  4021bc:	xor    eax,0xd5e835f7
  4021c1:	rcl    DWORD PTR [ebx+0x1668b70],0x2d
  4021c8:	add    cl,0x8a
  4021cb:	mov    ebp,es
  4021cd:	push   esp
  4021ce:	inc    edx
  4021cf:	cli    
  4021d0:	mov    ch,0x14
  4021d2:	lods   eax,DWORD PTR ds:[esi]
  4021d3:	test   DWORD PTR [ecx+0x1821d0d9],ecx
  4021d9:	pop    ss
  4021da:	les    ecx,FWORD PTR [ebx-0x3]
  4021dd:	mov    ds:0x2eb18f02,al
  4021e2:	pusha  
  4021e3:	stos   BYTE PTR es:[edi],al
  4021e4:	mov    al,ds:0xc3b5cb55
  4021e9:	fcmovnb st,st(1)
  4021eb:	test   al,0xad
  4021ed:	imul   eax,eax,0xb4cf16a9
  4021f3:	adc    DWORD PTR [edi-0x80],esp
  4021f6:	cmp    edx,DWORD PTR [ebp+0x57]
  4021f9:	sbb    eax,0x86cdb487
  4021fe:	sbb    eax,0xfcb4fead
  402203:	mov    ds:0xdc4fb254,al
  402208:	jecxz  0x402263
  40220a:	mov    bh,0xf9
  40220c:	sbb    al,0x0
  40220e:	lods   eax,DWORD PTR ds:[esi]
  40220f:	sub    eax,0x70fb5039
  402214:	dec    esi
  402215:	loope  0x402257
  402217:	jmp    0xf944:0xc390a79c
  40221e:	sub    al,0x3
  402220:	test   BYTE PTR [ebp-0x70cd5107],dl
  402226:	xchg   ebp,eax
  402227:	mov    ds:0x87757a23,eax
  40222c:	mov    dl,0x8f
  40222e:	dec    edi
  40222f:	mov    eax,0x7603c489
  402234:	aaa    
  402235:	mov    edi,ds
  402237:	mov    eax,DWORD PTR [ebx]
  402239:	push   ss
  40223a:	lods   eax,DWORD PTR ds:[esi]
  40223b:	rcr    dh,cl
  40223d:	jno    0x402219
  40223f:	sub    ebx,DWORD PTR ds:[edi]
  402242:	push   ebp
  402243:	mov    edx,0x9bebb397
  402248:	in     al,0xb
  40224a:	pop    edx
  40224b:	push   eax
  40224c:	out    dx,al
  40224d:	sbb    BYTE PTR [edi+0x8],0xce
  402251:	pop    edx
  402252:	xchg   esp,ebp
  402254:	cmp    bl,BYTE PTR [edi]
  402256:	hlt    
  402257:	mov    dh,0x62
  402259:	not    BYTE PTR [edx-0x679f0f67]
  40225f:	ja     0x402256
  402261:	fisub  WORD PTR [esi]
  402263:	pop    esp
  402264:	xchg   DWORD PTR [ebx-0x48],ebp
  402267:	out    0x9b,eax
  402269:	aam    0x21
  40226b:	or     edi,esi
  40226d:	pop    edx
  40226e:	lods   eax,DWORD PTR ds:[esi]
  40226f:	out    dx,eax
  402270:	pop    ds
  402271:	outs   dx,BYTE PTR ds:[esi]
  402272:	pop    edi
  402273:	lahf   
  402274:	das    
  402275:	or     ebx,DWORD PTR [edi+edi*4+0x6e]
  402279:	pushf  
  40227a:	mov    ah,al
  40227c:	retf   0x5c88
  40227f:	and    al,0x94
  402281:	lods   eax,DWORD PTR ds:[si]
  402283:	adc    edi,eax
  402285:	rol    DWORD PTR [esi-0x30cb5b26],cl
  40228b:	ds dec esp
  40228d:	iret   
  40228e:	iret   
  40228f:	jbe    0x4022dc
  402291:	fsubr  QWORD PTR [ebx-0x58]
  402294:	mov    edi,0x5fb5429b
  402299:	arpl   bp,dx
  40229b:	jecxz  0x40227d
  40229d:	dec    ebp
  40229e:	push   eax
  40229f:	call   0xe678:0xc70b08eb
  4022a6:	in     al,0x34
  4022a8:	ret    
  4022a9:	inc    ecx
  4022aa:	iret   
  4022ab:	xchg   ebx,eax
  4022ac:	popa   
  4022ad:	cld    
  4022ae:	(bad)  
  4022af:	and    edi,edx
  4022b1:	pusha  
  4022b2:	sbb    eax,0x54a583b
  4022b7:	cmp    BYTE PTR ds:0x73ad685b,dh
  4022bd:	(bad)  
  4022be:	lods   eax,DWORD PTR ds:[esi]
  4022bf:	in     eax,dx
  4022c0:	dec    edx
  4022c1:	push   0xc06abd85
  4022c6:	lea    edx,[ecx+0x4]
  4022c9:	nop
  4022ca:	sub    DWORD PTR [edi-0x1f32e40a],0xffffffbf
  4022d1:	in     eax,0xdd
  4022d3:	jle    0x402301
  4022d5:	loope  0x40230c
  4022d7:	stc    
  4022d8:	mov    ch,0x97
  4022da:	push   edx
  4022db:	aas    
  4022dc:	xchg   BYTE PTR [ebx],ah
  4022de:	loopne 0x4022e0
  4022e0:	adc    al,0xf3
  4022e2:	mov    esp,0xfbad1235
  4022e7:	xor    ecx,DWORD PTR ds:0xd1a0ee41
  4022ed:	loope  0x4022d4
  4022ef:	xchg   ebx,eax
  4022f0:	cmp    bh,ch
  4022f2:	adc    DWORD PTR [ecx],0xffffff89
  4022f5:	clc    
  4022f6:	mov    al,ds:0xebe37f85
  4022fb:	cmp    al,cl
  4022fd:	fst    QWORD PTR [edi]
  4022ff:	loopne 0x402378
  402301:	stc    
  402302:	xchg   esp,eax
  402303:	mov    WORD PTR ds:0x5284bb30,fs
  402309:	arpl   WORD PTR [eax+0x1d],bp
  40230c:	(bad)  
  40230d:	jecxz  0x4022f1
  40230f:	mov    cl,0xa7
  402311:	pop    esp
  402312:	lea    eax,cs:[ebp-0x3215755d]
  402319:	jmp    0x2dcba0a6
  40231e:	jecxz  0x40238d
  402320:	jp     0x4022f3
  402322:	adc    BYTE PTR [ebx+ecx*4],dl
  402325:	jmp    0xcf99:0xcd6290fd
  40232c:	jae    0x402344
  40232e:	in     al,0xa9
  402330:	and    edx,DWORD PTR [edi-0xc]
  402333:	int    0x12
  402335:	(bad)  
  402336:	add    eax,0xd8172c55
  40233b:	push   ebp
  40233c:	cmc    
  40233d:	and    eax,0xe040cd66
  402342:	xlat   BYTE PTR ds:[ebx]
  402343:	push   0x2b109edc
  402348:	sub    ecx,eax
  40234a:	mov    edx,ecx
  40234c:	inc    eax
  40234d:	in     eax,dx
  40234e:	fmul   DWORD PTR [edi]
  402350:	lahf   
  402351:	ja     0x4022d5
  402353:	xchg   esi,eax
  402354:	or     esi,DWORD PTR [ebx]
  402356:	xchg   DWORD PTR [edi],esp
  402358:	cmp    BYTE PTR [edx-0x7730dbd7],dl
  40235e:	cmp    eax,0xd32cdc08
  402363:	iret   
  402364:	dec    edi
  402365:	cmc    
  402366:	xchg   esi,eax
  402367:	pop    esi
  402368:	ins    BYTE PTR es:[edi],dx
  402369:	out    0xf7,al
  40236b:	fdivr  st(5),st
  40236d:	mov    dl,0xe1
  40236f:	jle    0x4023cd
  402371:	pop    ds
  402372:	repz ds jge 0x4023b0
  402376:	stos   DWORD PTR es:[edi],eax
  402377:	add    ch,BYTE PTR [esi+0x2db22de7]
  40237d:	push   cs
  40237e:	mov    edi,DWORD PTR [ebp+0x0]
  402381:	in     al,0xc4
  402383:	ds sbb al,0xe
  402387:	jne    0x402373
  402389:	pushf  
  40238a:	or     esi,0x2b
  40238d:	dec    eax
  40238e:	mov    ds:0xf1975d8,al
  402393:	inc    eax
  402394:	int    0xc0
  402396:	lock jnp 0x402333
  402399:	jae    0x402360
  40239b:	jmp    DWORD PTR [ecx+0x3f7a1404]
  4023a1:	cld    
  4023a2:	sbb    ecx,DWORD PTR [ebx+0x67]
  4023a5:	neg    BYTE PTR [ebp+0x2ca054c9]
  4023ab:	xlat   BYTE PTR ds:[ebx]
  4023ac:	clc    
  4023ad:	pop    ebx
  4023ae:	hlt    
  4023af:	mov    ch,cl
  4023b1:	or     edi,edx
  4023b3:	pusha  
  4023b4:	or     BYTE PTR [edi+ecx*2],0x2a
  4023b8:	mov    bh,0x50
  4023ba:	call   0x66fb:0x5b03b572
  4023c1:	mov    ah,bh
  4023c3:	add    DWORD PTR [eax-0x27],ebx
  4023c6:	enter  0xabd0,0xe2
  4023ca:	push   edi
  4023cb:	ret    0x7ca0
  4023ce:	mov    cl,0x5
  4023d0:	retf   
  4023d1:	add    al,0x5f
  4023d3:	rcl    DWORD PTR [ecx],0x32
  4023d6:	jmp    0x2a16f7c
  4023db:	fidiv  WORD PTR [edi-0x713cf233]
  4023e1:	imul   eax,DWORD PTR [edi+0x44fc3327],0x92df07bb
  4023eb:	and    DWORD PTR [ebp+0x6d886eb],0x678f3902
  4023f5:	pop    ecx
  4023f6:	cs scas eax,DWORD PTR es:[edi]
  4023f8:	pushf  
  4023f9:	push   ds
  4023fa:	scas   eax,DWORD PTR es:[edi]
  4023fb:	push   edx
  4023fc:	fidiv  WORD PTR [edi+0xc]
  4023ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402400:	mov    edx,DWORD PTR [ecx]
  402402:	fcom   DWORD PTR [edi-0x11]
  402405:	push   es
  402406:	ret    0x2d3d
  402409:	aad    0xd9
  40240b:	test   al,0x8a
  40240d:	aad    0xfe
  40240f:	mov    esp,0xa28be091
  402414:	pop    bp
  402416:	(bad)  
  402417:	and    eax,ecx
  402419:	(bad)  
  40241a:	int    0x76
  40241c:	outs   dx,DWORD PTR ds:[esi]
  40241d:	ror    BYTE PTR [edi-0x63],cl
  402420:	inc    edx
  402421:	push   ebx
  402422:	push   ss
  402423:	test   DWORD PTR [esi-0x49b47229],0x7ec277a8
  40242d:	sbb    eax,0x2a317d80
  402432:	mov    ch,0x68
  402434:	int3   
  402435:	aaa    
  402436:	cs ja  0x4024b8
  402439:	ss stos DWORD PTR es:[edi],eax
  40243b:	cmp    ebx,eax
  40243d:	add    eax,0x1b5e8459
  402442:	xchg   edx,eax
  402443:	mov    edx,0x4d15656a
  402448:	outs   dx,DWORD PTR ds:[esi]
  402449:	mov    esp,0x20312a
  40244e:	ret    
  40244f:	mov    al,ds:0xad991eb3
  402454:	repz (bad) 
  402456:	mov    ds:0x8965dab9,al
  40245b:	loope  0x40247a
  40245d:	imul   esp,DWORD PTR [edx],0xffffff8b
  402460:	pop    esp
  402461:	adc    al,0x3f
  402463:	rcl    edx,cl
  402465:	cmc    
  402466:	adc    bh,cl
  402468:	nop
  402469:	imul   edx,DWORD PTR [edi+0x45],0xf80e6df4
  402470:	fild   WORD PTR [ecx]
  402472:	add    edx,DWORD PTR [ecx+ebp*2]
  402475:	jecxz  0x40248d
  402477:	imul   ebp,DWORD PTR [ebx+0x55],0x6198d8d7
  40247e:	je     0x402405
  402480:	(bad)  
  402481:	inc    esi
  402482:	shl    DWORD PTR [ebx+edx*1+0x6d],cl
  402486:	(bad)  
  402487:	pop    esi
  402488:	jl     0x4024a3
  40248a:	ins    DWORD PTR es:[edi],dx
  40248b:	fnstenv [edx+0x4f1cbd94]
  402491:	xchg   esp,eax
  402492:	test   eax,0x818e5129
  402497:	and    ch,dl
  402499:	xor    DWORD PTR [eax],edi
  40249b:	pop    es
  40249c:	add    bh,ch
  40249e:	xchg   ebx,eax
  40249f:	pop    ss
  4024a0:	mov    ebx,0x8ebcd332
  4024a5:	pop    esi
  4024a6:	jae    0x40243f
  4024a8:	xchg   DWORD PTR [ebx],edi
  4024aa:	dec    esi
  4024ab:	test   eax,0x4d74fd89
  4024b0:	addr16 jo 0x402460
  4024b3:	popa   
  4024b4:	addr16 xchg esp,eax
  4024b6:	ret    0xd84a
  4024b9:	or     ch,al
  4024bb:	int    0x95
  4024bd:	jnp    0x40246e
  4024bf:	(bad)  
  4024c1:	loop   0x4024e4
  4024c3:	das    
  4024c4:	push   edx
  4024c5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4024c7:	inc    ecx
  4024c8:	adc    edi,edi
  4024ca:	jno    0x402537
  4024cc:	jle    0x402545
  4024ce:	ret    0x78b7
  4024d1:	add    DWORD PTR ds:0x621694ca,ebx
  4024d7:	xchg   edx,eax
  4024d8:	loopne 0x4024d1
  4024da:	push   edx
  4024db:	cmp    dl,BYTE PTR [esi*2-0x371159d7]
  4024e2:	pop    ds
  4024e3:	cmp    bl,BYTE PTR [edi]
  4024e5:	imul   BYTE PTR [esi+0x43]
  4024e8:	ss xor esp,esi
  4024eb:	test   bh,0xa8
  4024ee:	mov    ebx,0x7b00a631
  4024f3:	cmp    esp,DWORD PTR [esi-0x1a]
  4024f6:	(bad)  
  4024f7:	sti    
  4024f8:	pop    edx
  4024f9:	inc    ecx
  4024fa:	sub    BYTE PTR [ecx+0x1c01689c],ah
  402500:	cmp    DWORD PTR [eax+0x11054818],edi
  402506:	and    eax,0x887f1319
  40250b:	push   edi
  40250c:	mov    eax,0x1c3264ea
  402511:	ret    
  402512:	inc    ebp
  402513:	je     0x4024f5
  402515:	cwde   
  402516:	mov    cl,0xc4
  402518:	push   edi
  402519:	xchg   BYTE PTR [edi+0x71],al
  40251c:	stos   BYTE PTR es:[edi],al
  40251d:	xor    BYTE PTR [esi-0x4bb52004],al
  402523:	pop    ecx
  402524:	iret   
  402525:	adc    DWORD PTR [ecx-0x2c4300c5],eax
  40252b:	data16 (bad) [ebp+0x6f72142a]
  402532:	out    0xfd,eax
  402534:	mov    ebx,0x8e641a2e
  402539:	mov    WORD PTR [edi],gs
  40253b:	jns    0x4024c8
  40253d:	int3   
  40253e:	xchg   esi,eax
  402540:	mov    bh,0x99
  402542:	and    BYTE PTR [edx+0x5b00d1af],bh
  402548:	sbb    al,0x66
  40254a:	scas   eax,DWORD PTR es:[edi]
  40254b:	mov    dh,0x4a
  40254d:	cmp    cl,BYTE PTR [eax+0x18f9b2d3]
  402553:	repz inc ebx
  402555:	fcomip st,st(2)
  402557:	addr16 xchg ebp,eax
  402559:	pop    ds
  40255a:	call   0xe5876e2c
  40255f:	pop    edi
  402560:	and    DWORD PTR [edi],edi
  402562:	pop    ss
  402563:	mov    edi,0x2146b81
  402568:	mov    BYTE PTR [ecx],ah
  40256a:	sbb    BYTE PTR [edx-0x2e4dece8],dl
  402570:	pmulhw mm4,mm7
  402573:	mov    ebx,DWORD PTR [edi+eax*1+0x75653a07]
  40257a:	push   ebx
  40257b:	rol    edi,cl
  40257d:	mov    edx,0x9afd7ee6
  402582:	fwait
  402583:	mov    dh,0x76
  402585:	ins    BYTE PTR es:[edi],dx
  402586:	xor    esi,edi
  402588:	fsub   DWORD PTR [edx+0x73e53715]
  40258e:	jg     0x402556
  402590:	js     0x402552
  402592:	ins    BYTE PTR es:[edi],dx
  402593:	dec    edx
  402594:	daa    
  402595:	inc    ebx
  402596:	frndint 
  402598:	jle    0x402587
  40259a:	sub    ah,cl
  40259c:	dec    eax
  40259d:	jae    0x4025c2
  40259f:	mov    DWORD PTR [edx],edx
  4025a1:	push   0x5a
  4025a3:	into   
  4025a4:	adc    DWORD PTR [ebx-0x9],ebx
  4025a7:	adc    bl,bh
  4025a9:	outs   dx,BYTE PTR ds:[esi]
  4025aa:	fstp   QWORD PTR [ebx+0x58]
  4025ad:	xor    BYTE PTR [ebp+eax*4+0x5e],ch
  4025b1:	add    esp,0x75
  4025b4:	adc    bh,BYTE PTR [eax-0x2]
  4025b7:	addr16 sub al,0xfa
  4025ba:	jno    0x402543
  4025bc:	pop    edx
  4025bd:	call   0x2a8:0x9d04800f
  4025c4:	repnz dec edx
  4025c6:	jno    0x402584
  4025c8:	jae    0x402562
  4025ca:	stos   BYTE PTR es:[edi],al
  4025cb:	scas   eax,DWORD PTR es:[edi]
  4025cc:	inc    esi
  4025cd:	fucomp st(0)
  4025cf:	repz fwait
  4025d1:	xchg   edx,eax
  4025d2:	mov    ebp,0x7f9a88a4
  4025d7:	int3   
  4025d8:	xchg   ecx,eax
  4025d9:	int    0x2c
  4025db:	adc    DWORD PTR ds:0xbb267661,eax
  4025e1:	xlat   BYTE PTR ds:[ebx]
  4025e2:	je     0x402620
  4025e4:	add    bl,BYTE PTR [ebp-0x15]
  4025e7:	push   edi
  4025e8:	jno    0x40262d
  4025ea:	mov    edx,0x699a6083
  4025ef:	outs   dx,DWORD PTR ds:[esi]
  4025f0:	dec    ebp
  4025f1:	stos   DWORD PTR es:[edi],eax
  4025f2:	leave  
  4025f3:	fdiv   QWORD PTR [eax]
  4025f5:	out    0xd0,eax
  4025f7:	push   ss
  4025f8:	mov    ch,ah
  4025fa:	dec    edi
  4025fb:	and    eax,DWORD PTR [esi-0x1d]
  4025fe:	sub    edx,esi
  402600:	push   edi
  402601:	dec    ebx
  402602:	arpl   WORD PTR ds:0xa52c87a4,sp
  402608:	repz int3 
  40260a:	xor    ebp,DWORD PTR [eax+0x15]
  40260d:	jnp    0x4025fe
  40260f:	cmp    BYTE PTR [edi],0x43
  402612:	mov    cl,0xb1
  402614:	and    eax,0x3793c0db
  402619:	jmp    0x402679
  40261b:	daa    
  40261c:	push   cs
  40261d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40261e:	jmp    0xd14ee134
  402623:	lahf   
  402624:	fwait
  402625:	and    al,0xa5
  402627:	pusha  
  402628:	(bad)  
  40262a:	hlt    
  40262b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262c:	pop    esp
  40262d:	pop    ds
  40262e:	sti    
  40262f:	(bad)  
  402630:	mov    esp,0x2487abda
  402635:	and    al,0xf0
  402637:	mov    al,0x81
  402639:	mov    dl,0x1a
  40263b:	fild   DWORD PTR [eax-0x10]
  40263e:	pop    eax
  40263f:	add    esp,esi
  402641:	sbb    DWORD PTR [ebx+ebx*2],eax
  402644:	out    0xa5,al
  402646:	or     BYTE PTR [esp+ecx*4],al
  402649:	push   cs
  40264a:	sbb    DWORD PTR [ebp+0x51],ecx
  40264d:	pop    esp
  40264e:	and    ecx,ebx
  402650:	call   0xd40e:0x3dd55571
  402657:	jge    0x402613
  402659:	jno    0x402609
  40265b:	pop    ebp
  40265c:	mov    cl,0x9f
  40265e:	(bad)  
  40265f:	pop    edx
  402660:	scas   eax,DWORD PTR es:[edi]
  402661:	jmp    0x5cc3:0xc47af14a
  402668:	stos   DWORD PTR es:[edi],eax
  402669:	pop    ss
  40266a:	add    ebx,edi
  40266c:	ss ret 
  40266e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  402670:	aam    0x66
  402672:	xor    ah,BYTE PTR [eax+0x71]
  402675:	xchg   ebp,eax
  402676:	xchg   ecx,eax
  402677:	(bad)  
  402678:	pop    ss
  402679:	inc    eax
  40267a:	test   DWORD PTR [esi],0x26b223ba
  402680:	pop    es
  402681:	cmove  esi,DWORD PTR [ecx+0x13]
  402685:	int3   
  402686:	sub    eax,0x8b306f52
  40268b:	inc    edx
  40268c:	push   eax
  40268d:	loope  0x40263c
  40268f:	lds    edi,FWORD PTR [ecx*1+0x69db56d9]
  402696:	adc    al,0x7a
  402698:	add    al,0x72
  40269a:	retf   
  40269b:	add    bl,BYTE PTR [esi+0x26]
  40269e:	and    eax,0x1
  4026a1:	dec    edi
  4026a2:	das    
  4026a3:	imul   ebx,edx,0xffffffe4
  4026a6:	cmp    al,0xa
  4026a8:	fnstsw WORD PTR [edi]
  4026aa:	ficom  DWORD PTR [edi-0x6590221e]
  4026b0:	ss jo  0x4026a0
  4026b3:	fsub   st(3),st
  4026b5:	div    eax
  4026b7:	scas   eax,DWORD PTR es:[edi]
  4026b8:	repnz xchg esp,eax
  4026ba:	and    al,0xc7
  4026bc:	mov    edx,0xaed68689
  4026c1:	into   
  4026c2:	test   ecx,0xf49c17b2
  4026c8:	cmp    eax,0x939baf25
  4026cd:	jnp    0x402703
  4026cf:	shl    DWORD PTR [ebx+0x1d8ab041],0xe1
  4026d6:	pop    eax
  4026d7:	inc    ecx
  4026d8:	xchg   esp,eax
  4026d9:	enter  0xc65d,0xf
  4026dd:	mov    DWORD PTR [ebp-0x54],0xc8976415
  4026e4:	lods   eax,DWORD PTR ds:[esi]
  4026e5:	sub    al,0xcb
  4026e7:	inc    DWORD PTR [edx+0x74]
  4026ea:	pushf  
  4026eb:	shl    BYTE PTR [esi+0x6f],cl
  4026ee:	pushf  
  4026ef:	push   ebx
  4026f0:	lea    ebp,[ecx+0x2f4260dc]
  4026f6:	xor    al,0x50
  4026f8:	mov    esi,0x91f1ee0c
  4026fd:	or     al,0x2f
  4026ff:	and    eax,0x6f67fdf9
  402704:	es pop ebx
  402706:	scas   al,BYTE PTR es:[edi]
  402707:	cs test al,0x99
  40270a:	add    al,0x31
  40270c:	jne    0x402699
  40270e:	iret   
  40270f:	add    eax,esp
  402711:	or     al,BYTE PTR [ebp+0x74c3d92e]
  402717:	je     0x4026cf
  402719:	stc    
  40271a:	add    bh,al
  40271c:	fwait
  40271d:	mov    ds:0xe87b7887,al
  402722:	mov    al,0x55
  402724:	cld    
  402725:	jb     0x402746
  402727:	and    dh,BYTE PTR [ecx]
  402729:	sbb    eax,0xbb715914
  40272e:	in     eax,dx
  40272f:	mov    cl,0x5d
  402731:	mov    ebp,0x5985a416
  402736:	cdq    
  402737:	lahf   
  402738:	sub    BYTE PTR [eax+0x37f1ccf6],bh
  40273e:	mov    BYTE PTR [edi-0x62d6df1b],ch
  402744:	ret    
  402745:	test   DWORD PTR [edi],ecx
  402747:	outs   dx,DWORD PTR ds:[esi]
  402748:	ret    0x93fc
  40274b:	mov    esi,0x438b9fa6
  402750:	xchg   edx,eax
  402751:	push   0x3dbadd28
  402756:	out    dx,eax
  402757:	fidiv  DWORD PTR [edi+0x4d]
  40275a:	pop    esi
  40275b:	xor    edi,DWORD PTR [ecx+0x55]
  40275e:	imul   edi,DWORD PTR [ecx],0xffffffe5
  402761:	sbb    edi,esi
  402763:	inc    ebx
  402764:	imul   BYTE PTR [ebp+0x53e36980]
  40276a:	jns    0x2d51ad5c
  402770:	icebp  
  402771:	scas   al,BYTE PTR es:[edi]
  402772:	and    eax,0x47730a0
  402777:	dec    edi
  402778:	mov    ah,0xb5
  40277a:	ins    DWORD PTR es:[edi],dx
  40277b:	retf   
  40277c:	sbb    DWORD PTR [eax+0xadd84c0],ebx
  402782:	in     al,0x6d
  402784:	xchg   esi,eax
  402785:	push   esi
  402786:	push   esp
  402787:	mov    ebp,0x8997e492
  40278c:	loop   0x402809
  40278e:	jle    0x40280f
  402790:	test   al,0x7e
  402792:	stc    
  402793:	gs mov eax,0x204639d1
  402799:	pop    es
  40279a:	rcl    cl,1
  40279c:	or     eax,0xd81f731f
  4027a1:	sbb    al,0x8b
  4027a3:	xlat   BYTE PTR ds:[ebx]
  4027a4:	pop    gs
  4027a6:	sub    al,0x1c
  4027a8:	push   ebx
  4027a9:	and    edx,DWORD PTR [edi-0x7f]
  4027ac:	pop    esi
  4027ad:	adc    DWORD PTR [ecx-0x4a],esp
  4027b0:	ins    BYTE PTR es:[edi],dx
  4027b1:	or     dh,BYTE PTR [ecx]
  4027b3:	mov    al,0x6b
  4027b5:	cmp    bh,bl
  4027b7:	in     al,0x38
  4027b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ba:	call   0x57c7:0x81af64fd
  4027c1:	mov    ecx,0x1d6a37ea
  4027c6:	int    0xdb
  4027c8:	sti    
  4027c9:	rol    DWORD PTR [edi+0xe3de1ed],1
  4027cf:	repnz push ebp
  4027d1:	aaa    
  4027d2:	cld    
  4027d3:	push   0xffffffe7
  4027d5:	jns    0x402818
  4027d7:	add    ebp,DWORD PTR [edx+0x5f710ce7]
  4027dd:	std    
  4027de:	popf   
  4027df:	shr    bl,1
  4027e1:	cdq    
  4027e2:	in     al,dx
  4027e3:	lds    edx,FWORD PTR [edx+0x7f]
  4027e6:	jp     0x40283a
  4027e8:	outs   dx,DWORD PTR ds:[esi]
  4027e9:	iret   
  4027ea:	iret   
  4027eb:	cmp    al,BYTE PTR [ebp-0x4ccf05bb]
  4027f1:	dec    edx
  4027f2:	imul   ecx,ebx,0xffffffa5
  4027f5:	jno    0x402824
  4027f7:	int    0xcb
  4027f9:	adc    dh,0x5c
  4027fc:	xor    ecx,edi
  4027fe:	inc    esp
  4027ff:	mov    dl,0x4f
  402801:	or     dl,BYTE PTR [ebx+edx*1-0x3cdab500]
  402808:	jge    0x4027a9
  40280a:	nop
  40280b:	fdivr  DWORD PTR [ebx+eax*1]
  40280e:	aaa    
  40280f:	jmp    0x224b:0x5271064a
  402816:	enter  0x63f0,0x33
  40281a:	out    dx,al
  40281b:	and    eax,0x1cbcb7d3
  402820:	call   0x549c3999
  402825:	jl     0x40280a
  402827:	in     eax,0xd9
  402829:	jl     0x40288d
  40282b:	pop    ds
  40282c:	or     eax,0x1c824fb3
  402831:	(bad)  
  402832:	es (bad) 
  402834:	lds    esi,FWORD PTR ds:0x98ec8a76
  40283a:	xor    esi,ebp
  40283c:	xor    eax,0xd54db704
  402841:	xor    bl,BYTE PTR [eax+esi*2]
  402844:	lods   al,BYTE PTR ds:[esi]
  402845:	mov    eax,0x3e3fdfb4
  40284a:	stos   BYTE PTR es:[edi],al
  40284b:	sar    BYTE PTR [ebp-0x354c136e],1
  402851:	cmp    ah,BYTE PTR [esi]
  402853:	adc    esi,DWORD PTR [esi+0x4bb4d2c9]
  402859:	add    eax,0x2c69f484
  40285e:	ds dec edx
  402860:	sbb    ah,BYTE PTR [edx]
  402862:	mov    eax,0xf7fe6231
  402867:	(bad)  
  402868:	or     DWORD PTR [eax+ecx*2],0x4e
  40286c:	jno    0x4028c9
  40286e:	cs cmp edi,esi
  402871:	xlat   BYTE PTR ds:[ebx]
  402872:	das    
  402873:	ins    DWORD PTR es:[edi],dx
  402874:	mov    ebx,0xc64f62ec
  402879:	xchg   ebp,eax
  40287a:	nop
  40287b:	push   cs
  40287c:	xchg   esp,eax
  40287d:	and    eax,0xdbe50a59
  402882:	mov    ebx,0x2996f9d5
  402887:	daa    
  402888:	cli    
  402889:	mov    WORD PTR [edx],fs
  40288b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40288c:	xchg   edi,eax
  40288e:	xchg   edx,eax
  40288f:	add    eax,esi
  402891:	sub    DWORD PTR [ebx],ebx
  402893:	sysret 
  402895:	sbb    edx,DWORD PTR [eax+0x272ee39c]
  40289b:	adc    al,0x0
  40289d:	push   cs
  40289e:	dec    ebx
  40289f:	dec    edx
  4028a0:	jns    0x4028ee
  4028a2:	inc    eax
  4028a3:	sti    
  4028a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028a5:	xchg   esp,eax
  4028a6:	std    
  4028a7:	mov    ecx,es
  4028a9:	arpl   WORD PTR [edx],si
  4028ab:	mov    ds:0xd2e2d222,al
  4028b0:	dec    edi
  4028b1:	aaa    
  4028b2:	jg     0x40289d
  4028b4:	mov    DWORD PTR [edx+0x7b7351a3],edx
  4028ba:	jle    0x40288e
  4028bc:	cld    
  4028bd:	and    ch,BYTE PTR [eax]
  4028bf:	enter  0xac21,0x83
  4028c3:	jmp    0xd275:0xf53ee432
  4028ca:	in     eax,0x31
  4028cc:	aas    
  4028cd:	iret   
  4028ce:	mov    esi,DWORD PTR [ebp-0x4699b403]
  4028d4:	dec    edx
  4028d5:	adc    al,0x89
  4028d7:	cmp    al,0x15
  4028d9:	retf   0x95ad
  4028dc:	sbb    BYTE PTR [edx],dl
  4028de:	pop    edi
  4028df:	jne    0x4028b7
  4028e1:	or     al,0x68
  4028e3:	jo     0x40289b
  4028e5:	cmp    DWORD PTR [eax+0xf079e29],esi
  4028eb:	fistp  QWORD PTR [ebp-0xc]
  4028ee:	test   eax,0x5c08ce93
  4028f3:	push   0xfffffff2
  4028f5:	jge    0x4028a1
  4028f7:	mul    DWORD PTR [eax]
  4028f9:	xor    dl,BYTE PTR [esi+edi*8]
  4028fc:	stos   BYTE PTR es:[edi],al
  4028fd:	jmp    0x4028b6
  4028ff:	imul   ebx,DWORD PTR [esi*1-0x4294ae2b],0xffffff87
  402907:	out    0xd9,al
  402909:	mov    dh,0xc3
  40290b:	dec    eax
  40290c:	daa    
  40290d:	sub    ebp,ebp
  40290f:	push   eax
  402910:	in     al,0xe3
  402912:	dec    ebx
  402913:	clc    
  402914:	dec    edx
  402915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402916:	(bad)  
  402917:	int3   
  402918:	sbb    cl,BYTE PTR [ebx]
  40291a:	outs   dx,DWORD PTR ds:[esi]
  40291b:	pop    es
  40291c:	test   DWORD PTR [edx+0x20],ebp
  40291f:	or     BYTE PTR [eax],0xb2
  402922:	push   es
  402923:	add    edi,DWORD PTR [esi+ebp*2+0x6c]
  402927:	pop    eax
  402928:	xor    ebp,DWORD PTR [ecx-0x7d43c0da]
  40292e:	or     bl,ah
  402930:	std    
  402931:	jecxz  0x402940
  402933:	pop    edx
  402934:	jp     0x402941
  402936:	xlat   BYTE PTR ds:[ebx]
  402937:	xchg   esp,eax
  402938:	icebp  
  402939:	xor    al,0x9f
  40293b:	aam    0xec
  40293d:	aaa    
  40293e:	lea    edi,ds:0x4ac01c16
  402944:	icebp  
  402945:	xchg   esp,eax
  402946:	popf   
  402947:	xchg   ebp,eax
  402948:	(bad)  
  402949:	into   
  40294a:	or     cl,BYTE PTR [ebx]
  40294c:	push   esp
  40294d:	in     eax,dx
  40294e:	sub    BYTE PTR [ebx+0x61e61f3c],0xc2
  402955:	pop    ebp
  402956:	dec    edx
  402957:	in     eax,0x4c
  402959:	sbb    al,0xab
  40295b:	mov    ebx,0x2150ec49
  402960:	sbb    cl,ah
  402962:	fnstsw WORD PTR [ebp+0x7b4f13f7]
  402968:	stos   DWORD PTR es:[edi],eax
  402969:	loope  0x4029c4
  40296b:	sub    dl,bl
  40296d:	pop    ds
  40296e:	sub    DWORD PTR [ebx+0x316e1ad1],ebx
  402974:	jp     0xb209bd37
  40297a:	dec    ecx
  40297b:	inc    esp
  40297c:	(bad)  
  40297d:	jl     0x4029c9
  40297f:	pop    ds
  402980:	push   0xffffffb2
  402982:	jno    0x4029f3
  402984:	ret    0xd099
  402987:	xor    esp,esi
  402989:	ret    0x4e96
  40298c:	adc    edi,ebp
  40298e:	sbb    al,0x78
  402990:	mov    BYTE PTR [ebx],dh
  402992:	mov    cl,0x4e
  402994:	(bad)  [edi+0x46d672fa]
  40299a:	add    edi,DWORD PTR ds:0xe77c33dc
  4029a0:	or     DWORD PTR [esi+0x5014e287],0x8f32cf7e
  4029aa:	xchg   BYTE PTR [ecx-0x41],dh
  4029ad:	and    DWORD PTR [ebx-0x729b8f0a],ebp
  4029b3:	scas   eax,DWORD PTR es:[edi]
  4029b4:	in     al,0xea
  4029b6:	retf   0x4d10
  4029b9:	adc    ch,dh
  4029bb:	sub    esi,DWORD PTR ds:0x5822a841
  4029c1:	xchg   edi,eax
  4029c2:	add    dl,bl
  4029c4:	xchg   esp,eax
  4029c5:	xchg   BYTE PTR [edx+eiz*8+0x48b49bb9],ch
  4029cc:	sahf   
  4029cd:	fcmovnbe st,st(0)
  4029cf:	mov    bl,0xd5
  4029d1:	aaa    
  4029d2:	test   eax,0x276bad0e
  4029d7:	sbb    eax,0x34e6edc4
  4029dc:	(bad)  
  4029dd:	push   edx
  4029de:	cld    
  4029df:	int    0xef
  4029e1:	or     al,bh
  4029e3:	cmp    eax,0x37bf0e71
  4029e8:	aaa    
  4029e9:	pop    ebx
  4029ea:	xlat   BYTE PTR ds:[ebx]
  4029eb:	lds    ebp,FWORD PTR [eax+0x4a0fee4b]
  4029f1:	in     eax,dx
  4029f2:	add    ch,BYTE PTR [esp+ecx*4-0x32cc79f5]
  4029f9:	mov    dh,0xa2
  4029fb:	cmp    ebp,edx
  4029fd:	into   
  4029fe:	test   eax,0xd7d3f5d9
  402a03:	pop    ecx
  402a04:	arpl   WORD PTR [ecx+ebx*4-0x4a],dx
  402a08:	les    esi,FWORD PTR [ebx+eax*4]
  402a0b:	pop    edx
  402a0c:	dec    eax
  402a0d:	lock scas eax,DWORD PTR es:[edi]
  402a0f:	sbb    si,0xffba
  402a13:	test   al,bh
  402a15:	mov    bl,0x56
  402a17:	jns    0x402a2f
  402a19:	sbb    bl,bh
  402a1b:	cmc    
  402a1c:	retf   
  402a1d:	dec    ecx
  402a1e:	aas    
  402a1f:	push   esp
  402a20:	push   eax
  402a21:	adc    BYTE PTR [edx-0x42a3d0e0],ch
  402a27:	rol    DWORD PTR ds:0x43dd9cb6,cl
  402a2d:	xchg   DWORD PTR [ebx-0x45],eax
  402a30:	mov    ebp,0x89e3d1f2
  402a35:	pop    ds
  402a36:	mov    esp,0xb246badf
  402a3b:	ret    0x3a1e
  402a3e:	mov    DWORD PTR [ecx+0x7e],ebp
  402a41:	adc    eax,0x4c6644be
  402a46:	js     0x402a7e
  402a48:	xchg   ecx,edx
  402a4a:	mov    esp,0x727db631
  402a4f:	sub    eax,0xe777b5ad
  402a54:	lock dec ecx
  402a56:	xor    bh,ch
  402a58:	pop    ebp
  402a59:	sub    esp,ebp
  402a5b:	imul   esi,DWORD PTR [ebp+0x42],0x64
  402a5f:	(bad)  
  402a60:	out    dx,al
  402a61:	fwait
  402a62:	or     dh,bl
  402a64:	lods   al,BYTE PTR ds:[esi]
  402a65:	fs jmp 0xe08d:0xd86adc39
  402a6d:	xchg   edx,eax
  402a6e:	inc    ebp
  402a6f:	popa   
  402a70:	push   eax
  402a71:	mov    esp,ebp
  402a73:	adc    eax,DWORD PTR [ebp+0x665cc8d1]
  402a79:	cwde   
  402a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7b:	cmp    DWORD PTR [ebx+0x9],ecx
  402a7e:	pop    ebp
  402a7f:	test   eax,0xf6c680cc
  402a84:	xchg   dh,al
  402a86:	popa   
  402a87:	adc    BYTE PTR [eax-0x68],ch
  402a8a:	mov    esi,0xbf8ff3cd
  402a8f:	ja     0x402a36
  402a91:	push   ss
  402a92:	daa    
  402a93:	out    dx,al
  402a94:	test   BYTE PTR [edi+eax*8],0xa2
  402a98:	or     BYTE PTR [edi],dl
  402a9a:	call   0x88bc:0x36e928a3
  402aa1:	pop    es
  402aa2:	inc    ebx
  402aa3:	rol    DWORD PTR [ebx+ebp*2-0x5],0xf0
  402aa8:	and    dl,ah
  402aaa:	std    
  402aab:	sub    DWORD PTR [esi+0x73],0x11
  402aaf:	and    ebx,DWORD PTR [edx]
  402ab1:	cmp    al,0x53
  402ab3:	xchg   BYTE PTR [ecx],al
  402ab5:	sub    BYTE PTR [eax-0x68a77438],dl
  402abb:	(bad)  
  402abc:	xor    eax,0x23637fb0
  402ac1:	call   0xdc9e:0x3cb86e58
  402ac8:	test   DWORD PTR [eax-0x23503a58],ebp
  402ace:	mov    eax,0x63eadc4d
  402ad3:	mov    ebp,0x365f4f00
  402ad8:	inc    DWORD PTR [ecx]
  402ada:	jl     0x402b3f
  402adc:	sub    ebx,DWORD PTR [eax]
  402ade:	jbe    0x402a7e
  402ae0:	mov    ch,0x2a
  402ae2:	shr    cl,cl
  402ae4:	or     al,0xff
  402ae6:	xchg   esi,eax
  402ae7:	cs jo  0x402b3a
  402aea:	outs   dx,DWORD PTR ds:[esi]
  402aeb:	add    DWORD PTR [ecx+edi*4-0x3],esi
  402aef:	add    eax,DWORD PTR [ebp+0x557ad592]
  402af5:	sbb    BYTE PTR [ebp-0x42],dh
  402af8:	or     DWORD PTR [edx-0x4a],ebx
  402afb:	scas   al,BYTE PTR es:[edi]
  402afc:	xor    eax,0x7fe972e7
  402b01:	aad    0x82
  402b03:	push   cs
  402b04:	out    dx,al
  402b05:	sahf   
  402b06:	dec    edx
  402b07:	xor    eax,0x707220d1
  402b0c:	dec    edi
  402b0d:	adc    ebx,DWORD PTR [ebx]
  402b0f:	cmc    
  402b10:	mov    WORD PTR [edi+0x23b643f0],ds
  402b16:	nop
  402b17:	(bad)  
  402b18:	lock stos BYTE PTR es:[edi],al
  402b1a:	xchg   BYTE PTR [ebx-0x183d8b9a],al
  402b20:	fistp  DWORD PTR [ebp-0x6045affb]
  402b26:	xor    DWORD PTR [ebp+0x2],esp
  402b29:	mov    dl,0x44
  402b2b:	jno    0x402b26
  402b2d:	and    bl,0x9d
  402b30:	pushf  
  402b31:	push   ss
  402b32:	jo     0x402ae0
  402b34:	mov    al,ds:0xfc86ee83
  402b39:	xor    ah,dl
  402b3b:	ret    0xd363
  402b3e:	popa   
  402b3f:	pop    esp
  402b40:	test   eax,0x428eb021
  402b45:	jle    0x402af2
  402b47:	out    0x2c,eax
  402b49:	or     edx,DWORD PTR [eax+0x53]
  402b4c:	push   es
  402b4d:	push   edx
  402b4e:	repz push ss
  402b50:	lock xchg ch,bl
  402b53:	xchg   ecx,eax
  402b54:	mov    ch,0xeb
  402b56:	out    dx,eax
  402b57:	mov    ebx,0xf62070c9
  402b5c:	adc    DWORD PTR [ebp-0x5ac379bb],eax
  402b62:	jl     0x402afe
  402b64:	dec    ecx
  402b65:	jne    0x402bbe
  402b67:	std    
  402b68:	div    BYTE PTR ds:[ebx+0x1cb9e8bf]
  402b6f:	stos   DWORD PTR es:[edi],eax
  402b70:	jae    0x402b21
  402b72:	(bad)  
  402b73:	jo     0x402b29
  402b75:	and    al,0x70
  402b77:	pop    es
  402b78:	push   edx
  402b79:	int3   
  402b7a:	addr16 push ss
  402b7c:	shl    DWORD PTR [ebx+0x11c4901e],cl
  402b82:	adc    esp,DWORD PTR [eax+edi*2-0x59]
  402b86:	test   BYTE PTR [edx+0x5f],0x1d
  402b8a:	xor    al,0x29
  402b8c:	lods   al,BYTE PTR ds:[esi]
  402b8d:	dec    ebx
  402b8e:	push   cs
  402b8f:	pop    ebx
  402b90:	pop    si
  402b92:	xor    eax,ebp
  402b94:	stc    
  402b95:	add    eax,0x13cda007
  402b9a:	sub    ebx,edx
  402b9c:	loope  0x402b8b
  402b9e:	ds jge 0x402ba9
  402ba1:	bound  ecx,QWORD PTR [edi-0x13]
  402ba4:	sbb    dl,BYTE PTR [ecx]
  402ba6:	jb     0x402b2c
  402ba8:	arpl   WORD PTR [ebx-0x17],cx
  402bab:	mov    BYTE PTR [ebp+0x4d],cl
  402bae:	inc    ebx
  402baf:	xchg   dh,dl
  402bb1:	push   edx
  402bb2:	sub    ecx,DWORD PTR [edx-0x25]
  402bb5:	call   0xb4e2:0x5f4f3e77
  402bbc:	push   ss
  402bbd:	xchg   ebp,eax
  402bbe:	stos   BYTE PTR es:[edi],al
  402bbf:	pop    edx
  402bc0:	jno    0x402c00
  402bc2:	cdq    
  402bc3:	fstp   QWORD PTR [eax]
  402bc5:	jg     0x402c3f
  402bc7:	cmp    al,0xa8
  402bc9:	mov    ebx,0x2e56eb7e
  402bce:	arpl   WORD PTR [esi],di
  402bd0:	push   eax
  402bd1:	sub    eax,0x55d8affc
  402bd6:	ds std 
  402bd8:	retf   0xe633
  402bdb:	into   
  402bdc:	es enter 0x5fdb,0xec
  402be1:	in     al,dx
  402be2:	ret    
  402be3:	movq   mm5,QWORD PTR [ecx]
  402be6:	shr    eax,0x79
  402be9:	jo     0x402b81
  402beb:	xchg   esp,eax
  402bec:	xor    al,0x4d
  402bee:	aam    0x52
  402bf0:	cdq    
  402bf1:	push   eax
  402bf2:	ins    BYTE PTR es:[edi],dx
  402bf3:	shl    BYTE PTR [edx],cl
  402bf5:	loope  0x402b99
  402bf7:	sahf   
  402bf8:	and    esp,DWORD PTR [ebp-0x79]
  402bfb:	(bad)  
  402bfc:	pop    esp
  402bfd:	iret   
  402bfe:	sbb    esi,DWORD PTR [edi]
  402c00:	mov    dh,0x6b
  402c02:	stos   BYTE PTR es:[edi],al
  402c03:	cmp    DWORD PTR [esi-0x4229de6f],eax
  402c09:	jp     0x402be5
  402c0b:	inc    ebx
  402c0c:	sbb    dh,BYTE PTR [esi+edi*2+0x76cb3de4]
  402c13:	add    ch,BYTE PTR [edi]
  402c15:	adc    ch,BYTE PTR [edi]
  402c17:	out    0xe3,al
  402c19:	add    ch,BYTE PTR [edx-0x71]
  402c1c:	jecxz  0x402c3a
  402c1e:	xchg   esp,eax
  402c1f:	pop    edi
  402c20:	pushf  
  402c21:	or     al,0xa1
  402c23:	outs   dx,DWORD PTR ds:[esi]
  402c24:	and    BYTE PTR [edi+edx*8-0x5e],0x25
  402c29:	loop   0x402c38
  402c2b:	out    0x21,eax
  402c2d:	mov    cl,0xa
  402c2f:	pusha  
  402c30:	iret   
  402c31:	icebp  
  402c32:	in     eax,0xca
  402c34:	outs   dx,DWORD PTR es:[esi]
  402c36:	add    DWORD PTR [edi+0x44289356],ecx
  402c3c:	out    0x98,eax
  402c3e:	adc    DWORD PTR [ecx],esp
  402c40:	jbe    0x402c48
  402c42:	push   0xc721f6a9
  402c47:	rcr    DWORD PTR [edi-0x11],1
  402c4a:	ret    
  402c4b:	or     dl,al
  402c4d:	or     dl,cl
  402c4f:	bnd ret 0x56f7
  402c53:	aad    0xb2
  402c55:	adc    eax,0x3253f82a
  402c5a:	adc    eax,DWORD PTR [ecx-0x3366bbe5]
  402c60:	inc    esi
  402c61:	stos   DWORD PTR es:[edi],eax
  402c62:	mov    es,edi
  402c64:	pop    ds
  402c65:	push   ecx
  402c66:	xor    eax,0x9e3a41d1
  402c6b:	mov    edx,0x75963e05
  402c70:	dec    ebx
  402c71:	(bad)  [esi+edx*2-0x3]
  402c75:	xchg   esi,eax
  402c76:	shl    BYTE PTR [ecx],0xa3
  402c79:	push   eax
  402c7a:	lock sbb bh,BYTE PTR [edx-0x39255bbd]
  402c81:	xor    eax,0x5682679d
  402c86:	jecxz  0x402ca8
  402c88:	pop    ebp
  402c89:	enter  0x34a2,0x30
  402c8d:	add    al,0x3b
  402c8f:	jb     0x402cff
  402c91:	std    
  402c92:	jb     0x402cfd
  402c94:	and    bh,dh
  402c96:	sub    DWORD PTR [esi+0x42a2a833],ebp
  402c9c:	or     dl,0x6c
  402c9f:	inc    esi
  402ca0:	shl    esi,1
  402ca2:	pop    ss
  402ca3:	push   ss
  402ca4:	pop    ss
  402ca5:	add    al,0xdb
  402ca7:	(bad)  
  402ca8:	mov    dh,0x9d
  402caa:	jno    0x402cdc
  402cac:	fidiv  DWORD PTR [edx+0x30]
  402caf:	mov    eax,0xc05c8395
  402cb4:	xchg   DWORD PTR [esi],ebx
  402cb6:	or     edi,DWORD PTR [ecx+0x9]
  402cb9:	int3   
  402cba:	shl    DWORD PTR [edi-0x176df8c4],1
  402cc0:	mov    bh,0xe5
  402cc2:	xchg   esp,eax
  402cc3:	mov    ah,0x1d
  402cc5:	jne    0x402ce3
  402cc7:	jne    0x402ce3
  402cc9:	cmp    DWORD PTR [ebp+0x7d],0x23
  402ccd:	sub    ecx,DWORD PTR [ebp-0x50]
  402cd0:	inc    eax
  402cd1:	retf   0x4949
  402cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd5:	iret   
  402cd6:	add    dh,BYTE PTR [ebx]
  402cd8:	xor    dh,BYTE PTR ds:0x12970b04
  402cde:	push   ds
  402cdf:	data16 daa 
  402ce1:	xchg   BYTE PTR fs:[edx-0x3139652a],cl
  402ce8:	lock mov ds:0x298af5ed,al
  402cee:	pop    ecx
  402cef:	push   ebp
  402cf0:	sbb    DWORD PTR [ecx+edx*4-0x2a],esi
  402cf4:	pushf  
  402cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf6:	jnp    0x402cd4
  402cf8:	ja     0x402d20
  402cfa:	cmovge edi,DWORD PTR [edx+ebx*1]
  402cfe:	and    eax,0xd9da72a9
  402d03:	test   eax,0x1bc5371e
  402d08:	push   eax
  402d09:	cwde   
  402d0a:	ret    
  402d0b:	aaa    
  402d0c:	cmp    dl,al
  402d0e:	mov    ds:0x4d36c4ef,al
  402d13:	mov    esi,ds
  402d15:	test   al,0xa1
  402d17:	sub    esp,esi
  402d19:	js     0xb396a88
  402d1f:	push   edi
  402d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d21:	mov    esp,0x837cc4bd
  402d26:	loop   0x402d26
  402d28:	mov    dh,0xbc
  402d2a:	mov    eax,ds:0xb2588341
  402d2f:	adc    DWORD PTR [ebx],eax
  402d31:	mov    al,0x5a
  402d33:	jle    0x402cf4
  402d35:	repnz adc DWORD PTR [ebx-0x5c2b1e43],0xa95014bf
  402d40:	jecxz  0x402d11
  402d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d43:	mov    DWORD PTR [eax-0x68],ecx
  402d46:	inc    edx
  402d47:	in     eax,dx
  402d48:	ins    BYTE PTR es:[edi],dx
  402d49:	js     0x402d03
  402d4b:	push   cs
  402d4c:	loope  0x402ce0
  402d4e:	jle    0x402d3d
  402d50:	ret    
  402d51:	loope  0x402d3d
  402d53:	mov    ch,0xdd
  402d55:	out    0xd0,al
  402d57:	mov    ecx,0xe4e7b811
  402d5c:	jbe    0x402d66
  402d5e:	into   
  402d5f:	fnstsw WORD PTR [edi+ebx*4-0x1ef407fb]
  402d66:	je     0x402d27
  402d68:	idiv   DWORD PTR [esp+ebp*4+0xa]
  402d6c:	and    eax,0xa27e47c2
  402d71:	cdq    
  402d72:	cmp    al,0x85
  402d74:	jns    0x402d2a
  402d76:	add    bl,0x11
  402d79:	fidivr WORD PTR [edx-0x1b]
  402d7c:	dec    ecx
  402d7d:	push   ecx
  402d7e:	call   0x684d:0x7142dd54
  402d85:	nop
  402d86:	sti    
  402d87:	fisubr DWORD PTR [ebp+0x64]
  402d8a:	add    al,0x57
  402d8c:	inc    ecx
  402d8d:	and    dl,BYTE PTR [eax+0x7fb79299]
  402d93:	xchg   ebp,eax
  402d94:	mov    BYTE PTR [edx-0x67d275dd],ch
  402d9a:	outs   dx,BYTE PTR ds:[esi]
  402d9b:	int    0xa9
  402d9d:	dec    esi
  402d9e:	sub    al,0x56
  402da0:	popf   
  402da1:	push   cs
  402da2:	gs stc 
  402da4:	out    dx,al
  402da5:	jno    0x402d4c
  402da7:	loopne 0x402d35
  402da9:	or     DWORD PTR [edi],edi
  402dab:	daa    
  402dac:	add    eax,edx
  402dae:	mov    ds:0x9aa8770c,eax
  402db3:	inc    edx
  402db4:	inc    eax
  402db5:	fwait
  402db6:	(bad)
  402db9:	adc    BYTE PTR [ecx-0x1d],ch
  402dbc:	aas    
  402dbd:	lock add eax,0xa9d5f0fa
  402dc3:	fisub  DWORD PTR [eax+0x1b]
  402dc6:	sub    al,0x1
  402dc8:	mov    eax,ds:0xb1c99c58
  402dcd:	loopne 0x402e29
  402dcf:	or     DWORD PTR [eax],esi
  402dd1:	push   cs
  402dd2:	ret    
  402dd3:	add    esi,0x33ffe5b0
  402dd9:	adc    al,0x23
  402ddb:	mov    ecx,ecx
  402ddd:	(bad)
  402de1:	or     BYTE PTR [edx+0x7e],dl
  402de4:	data16 ins BYTE PTR es:[edi],dx
  402de6:	call   0x35f6cb17
  402deb:	(bad)  
  402dec:	mov    esp,0x373ddd05
  402df1:	add    dh,cl
  402df3:	jns    0x402dd3
  402df5:	cli    
  402df6:	or     ebx,DWORD PTR [ebp-0x127f7c4a]
  402dfc:	popa   
  402dfd:	popf   
  402dfe:	dec    ebx
  402dff:	imul   edx,DWORD PTR [edx+eax*1],0x8c913fd
  402e06:	(bad)  
  402e08:	mov    esp,0x863ae17e
  402e0d:	imul   esi,DWORD PTR [esi+edx*2-0x334d9460],0xffffffab
  402e15:	and    BYTE PTR [eax+0x23],bh
  402e18:	jge    0x402ddf
  402e1a:	xchg   ecx,eax
  402e1b:	stos   BYTE PTR es:[edi],al
  402e1c:	mov    bl,ah
  402e1e:	cmp    al,BYTE PTR [edx]
  402e20:	psrlw  mm7,QWORD PTR [eax]
  402e23:	dec    edx
  402e24:	lods   eax,DWORD PTR ds:[esi]
  402e25:	mov    eax,0xa268ee51
  402e2a:	imul   eax,DWORD PTR [edx+edx*2+0x38],0xffffff9c
  402e2f:	fnstcw WORD PTR [ecx]
  402e31:	test   al,0x2f
  402e33:	cld    
  402e34:	push   cs
  402e35:	xor    eax,0x7bb60fb
  402e3a:	not    BYTE PTR [edx+edx*4]
  402e3d:	call   0xf2b3:0x4843f3cc
  402e44:	je     0x402e6c
  402e46:	adc    cl,BYTE PTR [edx+0x75]
  402e49:	or     DWORD PTR [ebx+0x50],edx
  402e4c:	scas   al,BYTE PTR es:[edi]
  402e4d:	dec    eax
  402e4e:	clc    
  402e4f:	push   ebp
  402e50:	call   0xea1:0x668df146
  402e57:	ss hlt 
  402e59:	adc    esp,DWORD PTR [esi+0x4f]
  402e5c:	mov    bl,0x54
  402e5e:	sbb    BYTE PTR [esi-0x579ad5d1],cl
  402e64:	stos   DWORD PTR es:[edi],eax
  402e65:	mov    ds:0x1ecdb0c7,al
  402e6a:	push   ss
  402e6b:	pop    edi
  402e6c:	cmp    eax,0x305e578
  402e71:	push   ss
  402e72:	ret    
  402e73:	cmp    ch,al
  402e75:	jbe    0x402e8f
  402e77:	or     bh,BYTE PTR [edi-0x46]
  402e7a:	or     BYTE PTR [ecx-0x73],cl
  402e7d:	adc    eax,DWORD PTR [eax-0xe]
  402e80:	mov    ch,0xa7
  402e82:	cli    
  402e83:	mov    ebx,0x4eb2c722
  402e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e89:	or     al,0x1b
  402e8b:	adc    eax,0x422cbccc
  402e90:	sub    eax,0x5791076f
  402e95:	jo     0x402e3b
  402e97:	cmp    al,0xb5
  402e99:	push   edx
  402e9a:	int    0x6b
  402e9c:	loop   0x402edd
  402e9e:	int    0xe3
  402ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea1:	xabort 0xf2
  402ea4:	and    esp,DWORD PTR [edi-0x195cff8c]
  402eaa:	fidivr DWORD PTR [eax-0x4b]
  402ead:	jb     0x402e31
  402eaf:	popa   
  402eb0:	sub    ch,BYTE PTR [ecx+0x22]
  402eb3:	mov    ds,eax
  402eb5:	lock mov edi,ss
  402eb8:	cmp    al,0x28
  402eba:	in     eax,dx
  402ebb:	(bad)  
  402ebc:	dec    eax
  402ebd:	lds    esp,FWORD PTR [ecx+edx*4+0x1f]
  402ec1:	dec    edi
  402ec2:	pop    es
  402ec3:	add    BYTE PTR [esi],bh
  402ec5:	cdq    
  402ec6:	into   
  402ec7:	sbb    eax,0xef911fe3
  402ecc:	mov    ebp,0x5a7232bf
  402ed1:	jg     0x402f48
  402ed3:	pop    ebp
  402ed4:	add    eax,0xf7edc79d
  402ed9:	cdq    
  402eda:	push   eax
  402edb:	out    0x98,eax
  402edd:	loope  0x402e75
  402edf:	jp     0x402ecc
  402ee1:	mov    bl,0x6
  402ee3:	test   ah,0xfb
  402ee6:	and    dl,bh
  402ee8:	outs   dx,BYTE PTR ds:[esi]
  402ee9:	bnd jg 0x402eb7
  402eec:	mov    cl,0xa9
  402eee:	repz cli 
  402ef0:	cmp    eax,0x12d58645
  402ef5:	and    eax,ecx
  402ef7:	xchg   esp,eax
  402ef8:	sti    
  402ef9:	out    0x60,eax
  402efb:	jg     0x402ed9
  402efd:	cwde   
  402efe:	daa    
  402eff:	lds    eax,FWORD PTR [ecx-0x21]
  402f02:	inc    eax
  402f03:	jbe    0x402e91
  402f05:	jmp    0x402f05
  402f07:	jo     0x402f0e
  402f09:	jno    0x402eba
  402f0b:	gs mov edx,0x9d7bd10c
  402f11:	leave  
  402f12:	adc    DWORD PTR cs:[edi-0x63],edi
  402f16:	push   edi
  402f17:	add    ch,ah
  402f19:	ror    BYTE PTR [ebp+0x18],0x6c
  402f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f1e:	outs   dx,BYTE PTR ds:[esi]
  402f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f20:	leave  
  402f21:	pop    ebp
  402f22:	inc    ebx
  402f23:	add    BYTE PTR [ecx+eax*1-0x6b],0xde
  402f28:	mov    al,ds:0x85d17adb
  402f2d:	outs   dx,DWORD PTR ds:[esi]
  402f2e:	addr16 cs sub edi,eax
  402f32:	sub    edi,edx
  402f34:	xor    ah,BYTE PTR [esi+0x7f841f27]
  402f3a:	jg     0x402fac
  402f3c:	pop    esi
  402f3d:	and    ah,BYTE PTR ds:0x7f7de3b7
  402f43:	jnp    0x402f31
  402f45:	ds sub al,0x10
  402f48:	pop    ss
  402f49:	(bad)  
  402f4b:	cmp    ebp,DWORD PTR [ebp+0x34ec6450]
  402f51:	dec    ebx
  402f52:	in     al,dx
  402f53:	ret    
  402f54:	xlat   BYTE PTR ds:[ebx]
  402f55:	outs   dx,DWORD PTR ds:[esi]
  402f56:	inc    BYTE PTR ds:0x1dfa90fd
  402f5c:	test   eax,0x937e926c
  402f61:	xlat   BYTE PTR ds:[ebx]
  402f62:	stos   BYTE PTR es:[edi],al
  402f63:	ins    DWORD PTR es:[edi],dx
  402f64:	pop    ecx
  402f65:	movzx  ecx,WORD PTR [esi-0x7d]
  402f69:	in     al,0xef
  402f6b:	and    BYTE PTR [eax+0x5f],bh
  402f6e:	mov    ebp,0x93a5152d
  402f73:	inc    esi
  402f74:	add    dh,bh
  402f76:	(bad)  
  402f77:	xchg   esp,eax
  402f78:	(bad)  
  402f79:	popf   
  402f7a:	imul   ebp,edx,0x43f01f7f
  402f80:	cmp    BYTE PTR [eax+0x5a],ch
  402f83:	sbb    DWORD PTR [ebx],0xffffffcb
  402f86:	jmp    0x402f73
  402f88:	xchg   edi,eax
  402f89:	adc    BYTE PTR [esi-0x4d],0xc9
  402f8d:	lods   eax,DWORD PTR ds:[esi]
  402f8e:	lds    ebp,FWORD PTR ds:0xaa3b1af8
  402f94:	jecxz  0x40300d
  402f96:	jno    0x402fe1
  402f98:	adc    bh,BYTE PTR [esi+0xc]
  402f9b:	sub    dl,BYTE PTR [edi]
  402f9d:	xor    esi,DWORD PTR [eax+0x44086a0f]
  402fa3:	in     al,0xd1
  402fa5:	setg   ah
  402fa8:	aad    0x46
  402faa:	or     esp,esi
  402fac:	(bad)  [ebp+edx*8-0x8]
  402fb0:	leave  
  402fb1:	fisub  WORD PTR [ecx+0x5650d4a1]
  402fb7:	inc    edi
  402fb8:	xchg   ebp,eax
  402fb9:	fwait
  402fba:	push   es
  402fbb:	mov    DWORD PTR [eax],esp
  402fbd:	xchg   ecx,eax
  402fbe:	in     eax,0xcf
  402fc0:	fnstenv [ebx]
  402fc2:	in     eax,dx
  402fc3:	out    dx,eax
  402fc4:	jbe    0x402f91
  402fc6:	(bad)  
  402fc7:	retf   0x8341
  402fca:	loope  0x402f75
  402fcc:	pop    edx
  402fcd:	lods   eax,DWORD PTR ds:[esi]
  402fce:	sahf   
  402fcf:	push   edi
  402fd0:	jmp    0x3532c8f6
  402fd5:	dec    ebp
  402fd6:	push   0x72b56a27
  402fdb:	xlat   BYTE PTR ds:[ebx]
  402fdc:	add    al,0xed
  402fde:	stos   BYTE PTR es:[edi],al
  402fdf:	dec    edx
  402fe0:	pop    ds
  402fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe2:	cmc    
  402fe3:	push   ds
  402fe4:	cmp    BYTE PTR [eax-0x1a],bh
  402fe7:	syscall 
  402fe9:	push   es
  402fea:	pop    ebp
  402feb:	inc    ecx
  402fec:	cmc    
  402fed:	pop    edx
  402fee:	and    ebx,DWORD PTR [edi+0x3]
  402ff1:	adc    BYTE PTR [eax],dl
  402ff3:	push   esi
  402ff4:	in     al,0xeb
  402ff6:	mov    esi,0x8f96798e
  402ffb:	inc    ebp
  402ffc:	sub    ch,BYTE PTR [esi+0x67d0b925]
  403002:	(bad)  
  403004:	sbb    BYTE PTR [esi],bh
  403006:	test   eax,0x1a30fbce
  40300b:	pushf  
  40300c:	mov    ebp,0xc6f71b68
  403011:	das    
  403012:	fisttp QWORD PTR [edx]
  403014:	cli    
  403015:	(bad)  
  403017:	and    edx,ebp
  403019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301a:	call   0x966a:0x8ddd24e4
  403021:	sub    al,0x96
  403023:	repz adc eax,0x82d32003
  403029:	push   ss
  40302a:	ror    ch,cl
  40302c:	pop    ds
  40302d:	mov    edi,0x1fd1fb2e
  403032:	add    BYTE PTR [ebp+ebx*8+0x76],dh
  403036:	imul   ebp,DWORD PTR [ebp+0x34],0x22
  40303a:	cmp    bh,BYTE PTR [ecx]
  40303c:	cmp    al,0x4c
  40303e:	cmp    al,BYTE PTR [edx]
  403040:	repz sub eax,0xdbed97b0
  403046:	mov    DWORD PTR [eax-0x1b552d50],ebx
  40304c:	outs   dx,DWORD PTR ds:[esi]
  40304d:	fwait
  40304e:	call   0x799:0xb65d1282
  403055:	dec    edx
  403056:	add    al,0x23
  403058:	shr    DWORD PTR [ecx+edx*2-0x2e],1
  40305c:	adc    eax,eax
  40305e:	outs   dx,BYTE PTR ds:[esi]
  40305f:	xor    ah,BYTE PTR [eax+edx*2+0x7b]
  403063:	pushf  
  403064:	inc    ecx
  403065:	mov    cl,0xe6
  403067:	clc    
  403068:	loop   0x402ff4
  40306a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40306b:	(bad)  
  40306c:	ds sbb esi,esp
  40306f:	jns    0x40306c
  403071:	bound  edx,QWORD PTR [esi+eax*4-0xa]
  403075:	cmp    edx,esi
  403077:	pop    esp
  403078:	and    eax,0xae6267dc
  40307d:	lea    ebp,[ebx-0x1dca3b29]
  403083:	adc    DWORD PTR [ebx*4-0x227686a4],ebx
  40308a:	jne    0x40306b
  40308c:	dec    ebx
  40308d:	sbb    dh,BYTE PTR [edi]
  40308f:	es jp  0x4030b1
  403092:	(bad)  
  403093:	gs push cs
  403095:	push   ds
  403096:	lods   al,BYTE PTR ds:[esi]
  403097:	pop    esi
  403098:	and    BYTE PTR [edx-0x77f1c152],0xa7
  40309f:	pop    ebp
  4030a0:	dec    edx
  4030a1:	inc    esi
  4030a2:	pusha  
  4030a3:	pusha  
  4030a4:	inc    eax
  4030a5:	or     esp,DWORD PTR ds:0x48cd870
  4030ab:	dec    esp
  4030ac:	enter  0xca85,0xe9
  4030b0:	add    ecx,DWORD PTR [esi+0x25]
  4030b3:	push   es
  4030b4:	stos   DWORD PTR es:[edi],eax
  4030b5:	arpl   sp,sp
  4030b7:	fmul   QWORD PTR [ebx-0x23]
  4030ba:	scas   al,BYTE PTR es:[edi]
  4030bb:	cwde   
  4030bc:	lods   al,BYTE PTR ds:[esi]
  4030bd:	aaa    
  4030be:	or     ch,BYTE PTR [ecx+ecx*2]
  4030c1:	ss push ss
  4030c3:	mov    BYTE PTR [esi+0x90e8b55],dh
  4030c9:	add    esi,edx
  4030cb:	add    eax,0x86e6df8d
  4030d0:	iret   
  4030d1:	ds out dx,al
  4030d3:	sub    eax,DWORD PTR [esi+0x418358b9]
  4030d9:	xchg   bp,ax
  4030db:	lods   eax,DWORD PTR ds:[esi]
  4030dc:	pop    edx
  4030dd:	mov    eax,0x183dc8f3
  4030e2:	mov    ebp,0x52138ced
  4030e7:	sbb    esp,DWORD PTR [esi-0x80]
  4030ea:	dec    edi
  4030eb:	push   eax
  4030ec:	xchg   BYTE PTR ds:0x29efbb97,cl
  4030f2:	pop    ecx
  4030f3:	or     DWORD PTR [ebx-0x26],edx
  4030f6:	(bad)  
  4030f7:	stos   BYTE PTR es:[edi],al
  4030f8:	push   ss
  4030f9:	sar    DWORD PTR [esi+ebp*4-0x6],0xab
  4030fe:	mov    al,ds:0xa3fba05d
  403103:	sbb    BYTE PTR [ecx-0x4b],ah
  403106:	iret   
  403107:	jge    0x40308f
  403109:	sbb    BYTE PTR [ebx-0x2d],ah
  40310c:	sub    eax,0x7cf917cb
  403111:	retf   0x86f7
  403114:	push   cs
  403115:	sub    BYTE PTR [edi+0x33],cl
  403118:	pop    ecx
  403119:	out    0x98,eax
  40311b:	adc    DWORD PTR [esi+0x2c12f406],0x179625ac
  403125:	pop    edx
  403126:	(bad)  
  403127:	(bad)  
  403128:	repz xor al,0x35
  40312b:	dec    esp
  40312c:	fxch   st(6)
  40312e:	mov    ds:0x73d356ca,al
  403133:	xchg   BYTE PTR [esi-0x474cf521],bl
  403139:	push   edi
  40313a:	jmp    0x26eef9bd
  40313f:	sub    DWORD PTR [eax-0x79],0x30
  403143:	(bad)  
  403144:	sbb    al,0x62
  403146:	push   esi
  403147:	test   al,0xa8
  40314a:	xor    eax,0xdd93d664
  40314f:	mov    ah,0x5b
  403151:	push   cs
  403152:	fsubr  DWORD PTR [ecx-0x16]
  403155:	sbb    ah,bh
  403157:	popf   
  403158:	sbb    ch,0xee
  40315b:	cwde   
  40315c:	mov    edx,0x8a0ba0d
  403161:	stos   BYTE PTR es:[edi],al
  403162:	jbe    0x403170
  403164:	push   cs
  403165:	out    dx,al
  403166:	test   DWORD PTR [eax-0x5083965e],edx
  40316c:	add    DWORD PTR [edx+0x6cce6b9],esi
  403172:	ret    
  403173:	mov    al,ds:0xfdf9baad
  403178:	add    esi,ebp
  40317a:	lock inc edi
  40317c:	movsx  esi,BYTE PTR ds:0xe916701d
  403183:	les    edi,FWORD PTR ss:[ebx]
  403186:	test   bh,cl
  403188:	bound  ebp,QWORD PTR [eax+0xe]
  40318b:	sti    
  40318c:	xchg   edi,eax
  40318d:	test   DWORD PTR gs:[ebx],esp
  403190:	(bad)  
  403191:	retf   
  403192:	data16 mov dh,al
  403195:	pop    edi
  403196:	nop
  403197:	call   0x32101748
  40319c:	ret    
  40319d:	mov    DWORD PTR [esi-0x72a0943f],edi
  4031a3:	loop   0x4031f8
  4031a5:	inc    edx
  4031a6:	mov    ah,al
  4031a8:	les    edx,FWORD PTR ds:0x5680c73f
  4031ae:	fdivr  st(3),st
  4031b0:	cld    
  4031b1:	xchg   ecx,eax
  4031b2:	hlt    
  4031b3:	clc    
  4031b4:	pushf  
  4031b5:	fisub  DWORD PTR [esi-0x37]
  4031b8:	jb     0x403145
  4031ba:	out    0x37,eax
  4031bc:	lods   al,BYTE PTR ss:[esi]
  4031be:	xchg   esp,eax
  4031bf:	gs cdq 
  4031c1:	lea    ebx,[edx-0x5e9ac999]
  4031c7:	mov    eax,ds:0x34ee923a
  4031cc:	mov    cl,0x1f
  4031ce:	mov    dh,0xdd
  4031d0:	jnp    0x403241
  4031d2:	cmp    eax,0xb5c1320
  4031d7:	(bad)  
  4031d8:	sar    DWORD PTR [edi+eiz*1],1
  4031db:	push   0xa34168a
  4031e0:	(bad)  
  4031e1:	test   al,0xdf
  4031e3:	pop    edx
  4031e4:	ja     0x4031fe
  4031e6:	(bad)  
  4031e8:	pushf  
  4031e9:	inc    esp
  4031ea:	fldcw  WORD PTR ds:0x2918a545
  4031f0:	inc    esi
  4031f1:	mov    ch,0x5f
  4031f3:	dec    esi
  4031f4:	cmc    
  4031f5:	daa    
  4031f6:	mov    ch,0xdd
  4031f8:	out    0x16,ax
  4031fb:	sub    al,0xb2
  4031fd:	mov    eax,ds:0x47191116
  403202:	(bad)  
  403203:	or     BYTE PTR ds:0x7341505e,bl
  403209:	lds    esi,FWORD PTR [edi]
  40320b:	mov    esp,0x4653790c
  403210:	inc    edi
  403211:	test   BYTE PTR [eax-0x780e22fa],bl
  403217:	push   0xaceb9323
  40321c:	pop    ds
  40321d:	adc    eax,0x7b91b686
  403222:	ins    DWORD PTR es:[edi],dx
  403223:	scas   eax,DWORD PTR es:[edi]
  403224:	retf   0x49a7
  403227:	in     al,0xd5
  403229:	fmul   st(0),st
  40322b:	mov    al,0xde
  40322d:	(bad)  
  40322e:	cmp    al,0x1d
  403230:	hlt    
  403231:	cmp    al,0xc6
  403233:	call   0x269f5773
  403238:	gs leave 
  40323a:	add    eax,0x9d95d8c9
  40323f:	jno    0x403277
  403241:	xor    ecx,ecx
  403243:	push   esp
  403244:	cmp    al,0x7d
  403246:	cdq    
  403247:	mov    WORD PTR [ebx-0x20],gs
  40324a:	dec    ebx
  40324b:	pop    edi
  40324c:	daa    
  40324d:	cmp    dh,BYTE PTR [edi]
  40324f:	sti    
  403250:	push   ebp
  403251:	adc    eax,0x863c2310
  403256:	(bad)  
  403257:	adc    cl,BYTE PTR [esi+eiz*2+0x4f75fa55]
  40325e:	sbb    dl,BYTE PTR [esi-0x5c]
  403261:	add    eax,0x4dca50c7
  403266:	ins    BYTE PTR es:[edi],dx
  403267:	sbb    al,0xc1
  403269:	add    al,0xb4
  40326b:	jmp    0x40321d
  40326d:	xor    esp,ebp
  40326f:	jno    0x4032db
  403271:	cmp    BYTE PTR [edi-0x22809c79],ah
  403277:	jb     0x4032d7
  403279:	lods   eax,DWORD PTR ds:[esi]
  40327a:	push   ebp
  40327b:	pop    ecx
  40327c:	out    0xcb,eax
  40327e:	mov    al,ds:0x91417602
  403283:	ret    0x56f0
  403286:	mov    esp,0xd3a366f
  40328b:	lock stc 
  40328d:	add    BYTE PTR [edi],cl
  40328f:	inc    esi
  403290:	or     al,BYTE PTR ds:0xf6c2ed88
  403296:	cdq    
  403297:	or     al,0xb0
  403299:	out    dx,eax
  40329a:	jmp    0x9a2bffe6
  40329f:	data16 int 0x1e
  4032a2:	(bad)  
  4032a3:	pinsrw mm0,ebx,0xef
  4032a7:	ins    DWORD PTR es:[edi],dx
  4032a8:	adc    ebx,DWORD PTR [ecx+0x12]
  4032ab:	mov    dl,0x37
  4032ad:	cmp    DWORD PTR [esi+0x2b89cd9d],ebx
  4032b3:	xor    cl,BYTE PTR ds:0x2223a8e1
  4032b9:	bound  ebx,QWORD PTR ds:0xda19a971
  4032bf:	popa   
  4032c0:	in     al,0xce
  4032c2:	or     ecx,DWORD PTR [esi+0x2e29df03]
  4032c8:	sbb    DWORD PTR [ebp+0x69c159d5],eax
  4032ce:	enter  0xdd23,0x1a
  4032d2:	mov    dh,0xb1
  4032d4:	xchg   ecx,eax
  4032d5:	int    0x5d
  4032d7:	pop    ebp
  4032d8:	push   eax
  4032d9:	add    bl,BYTE PTR [edx]
  4032db:	jmp    0x403352
  4032dd:	out    0x27,eax
  4032df:	mov    ds:0x164ff608,eax
  4032e4:	jne    0x403330
  4032e6:	push   ss
  4032e7:	fiadd  WORD PTR [di]
  4032ea:	std    
  4032eb:	fmul   QWORD PTR [ebp+0x3e4c9edd]
  4032f1:	(bad)  
  4032f2:	bnd jbe 0x403289
  4032f5:	mov    edi,0xdcfe4994
  4032fa:	mov    BYTE PTR [esi+0x14ca520a],dl
  403300:	icebp  
  403301:	dec    ecx
  403302:	cmp    ecx,DWORD PTR [eax-0x24e18dcf]
  403308:	cs jne 0x403347
  40330b:	xor    BYTE PTR [eax+0x78963886],ch
  403311:	xchg   esp,eax
  403312:	sar    ebx,0xeb
  403315:	sub    DWORD PTR [eax-0x10],edi
  403318:	mov    ebx,0x87644b47
  40331d:	shr    BYTE PTR [ebp+0x3d],cl
  403320:	sar    DWORD PTR [eax+0x1f],0xbe
  403324:	shr    BYTE PTR [ecx],1
  403326:	push   ds
  403327:	and    al,0xd9
  403329:	stos   DWORD PTR es:[edi],eax
  40332a:	pop    ss
  40332b:	test   dl,bl
  40332d:	in     al,dx
  40332e:	mov    ds:0x642a3fde,eax
  403333:	mov    bh,0x4
  403335:	mov    esi,DWORD PTR [eax+0x59e9c127]
  40333b:	out    dx,al
  40333c:	xor    edi,0xffffff9e
  40333f:	push   ebx
  403340:	push   ecx
  403341:	adc    al,0x9c
  403343:	nop
  403344:	mov    eax,ds:0xbdade647
  403349:	(bad)  
  40334a:	call   FWORD PTR [ecx-0x34]
  40334d:	push   0xffffff8e
  40334f:	dec    edi
  403350:	ret    0xe1c3
  403353:	sbb    al,0xea
  403355:	sub    ch,ah
  403357:	lahf   
  403358:	mov    edi,DWORD PTR [edx]
  40335a:	js     0x4033b0
  40335c:	dec    eax
  40335d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40335e:	jg     0x403387
  403360:	sub    eax,0x6111cf2d
  403365:	cmp    eax,0xfb19a0fc
  40336a:	dec    eax
  40336b:	mov    bh,dl
  40336d:	xor    DWORD PTR [ecx+eax*8-0x61a93160],esi
  403374:	mov    ecx,DWORD PTR [ebp-0x26]
  403377:	out    0x3d,al
  403379:	pop    edx
  40337a:	retf   0xc8da
  40337d:	adc    ebp,ecx
  40337f:	dec    esp
  403380:	pushf  
  403381:	cmp    al,dl
  403383:	ret    0x2ee
  403386:	push   cs
  403387:	fst    st(6)
  403389:	fstp   TBYTE PTR [eax+0x755ec182]
  40338f:	icebp  
  403390:	mov    ah,0x26
  403392:	int3   
  403393:	fwait
  403394:	pop    ecx
  403395:	xchg   ebp,eax
  403396:	xor    ah,cl
  403398:	leave  
  403399:	lods   eax,DWORD PTR ds:[esi]
  40339a:	call   FWORD PTR [edx+0x77]
  40339d:	mov    esi,0x1b109c12
  4033a2:	ins    BYTE PTR es:[edi],dx
  4033a3:	and    DWORD PTR [eax-0x6e85daf8],ecx
  4033a9:	add    eax,0xae301038
  4033ae:	jnp    0x403424
  4033b0:	in     eax,0xc0
  4033b2:	loope  0x403423
  4033b4:	jne    0x40342f
  4033b6:	jge    0x4033f9
  4033b8:	add    BYTE PTR [edi],al
  4033ba:	xchg   BYTE PTR [edi-0xe2882a4],dl
  4033c0:	cmp    eax,ecx
  4033c2:	imul   ebx,edi,0x51f646ba
  4033c8:	aam    0xe8
  4033ca:	push   ecx
  4033cb:	xchg   ch,dl
  4033cd:	int    0x8
  4033cf:	retf   0x85d8
  4033d2:	push   ebp
  4033d3:	jb     0x403403
  4033d5:	int3   
  4033d6:	fs loope 0x403406
  4033d9:	retf   
  4033da:	cmc    
  4033db:	or     ah,BYTE PTR [eax+edi*8-0x5d3523ab]
  4033e2:	and    DWORD PTR [ecx],esi
  4033e4:	icebp  
  4033e5:	imul   eax
  4033e7:	push   ss
  4033e8:	in     ax,dx
  4033ea:	ins    DWORD PTR es:[edi],dx
  4033eb:	push   ecx
  4033ec:	popf   
  4033ed:	mov    esp,0x9b871b6
  4033f2:	test   eax,0xe9157d73
  4033f7:	or     al,0xcb
  4033f9:	mov    ebx,0x61f88a8d
  4033fe:	inc    ebx
  4033ff:	sbb    eax,DWORD PTR [eax]
  403401:	push   ss
  403402:	hlt    
  403403:	adc    eax,0x92eb035f
  403408:	inc    ecx
  403409:	xchg   esp,eax
  40340a:	ret    
  40340b:	mov    ch,0xfe
  40340d:	jle    0x40342d
  40340f:	(bad)  
  403411:	sbb    al,0xe4
  403413:	mov    dh,0xcf
  403415:	aas    
  403416:	aas    
  403417:	sub    bh,BYTE PTR [edi]
  403419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40341a:	dec    ebx
  40341b:	xchg   BYTE PTR [edi],al
  40341d:	xor    dl,BYTE PTR [ecx-0x71e78086]
  403423:	popf   
  403424:	repnz std 
  403426:	jno    0x4033bc
  403428:	in     eax,0x16
  40342a:	xchg   BYTE PTR [esi-0x53],dh
  40342d:	div    esi
  40342f:	imul   esp,DWORD PTR [edx+0x11],0x7c375a77
  403436:	jns    0x403402
  403438:	mov    al,ds:0xfae2eaa3
  40343d:	inc    edx
  40343e:	(bad)  
  40343f:	pop    eax
  403440:	inc    ebp
  403441:	xor    al,0x80
  403443:	mov    DWORD PTR [ebx-0x49],ebx
  403446:	inc    ebp
  403447:	or     eax,0x40363199
  40344c:	mov    cl,BYTE PTR [edx-0x52481fc8]
  403452:	jb     0x4034b9
  403454:	(bad)
  403457:	mov    ch,0x69
  403459:	cmp    eax,0xcfb1d37c
  40345e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40345f:	loop   0x4033e7
  403461:	cmp    al,0x12
  403463:	es mov esp,0x7184161a
  403469:	xor    BYTE PTR [eax-0x2a2f0c71],dl
  40346f:	imul   ebp,DWORD PTR [ebp-0x2],0x1ed7c64a
  403476:	dec    esi
  403477:	mov    ds:0x1a1becb1,al
  40347c:	mov    dl,0x27
  40347e:	sub    esi,DWORD PTR [ebp-0x18]
  403481:	ret    0xd04c
  403484:	inc    edx
  403485:	cmp    al,0x6b
  403487:	dec    edx
  403488:	and    BYTE PTR [ecx-0x45eef7ef],0x79
  40348f:	loopne 0x40349f
  403491:	popa   
  403492:	push   ebx
  403493:	sbb    al,0x80
  403495:	push   eax
  403496:	push   0x5234b9e3
  40349b:	mov    eax,ds:0xb2c0a854
  4034a0:	adc    edx,DWORD PTR [ecx+0x184a65a4]
  4034a6:	outs   dx,BYTE PTR ds:[esi]
  4034a7:	fild   QWORD PTR [eax]
  4034a9:	or     eax,0x36692418
  4034ae:	cmp    eax,0x6f8e703d
  4034b3:	jle    0x40347f
  4034b5:	sar    DWORD PTR [ebp-0xfac8367],0x11
  4034bc:	cs xchg edx,eax
  4034be:	xor    esi,DWORD PTR [esp+ebx*2]
  4034c1:	jg     0x403465
  4034c3:	rcr    BYTE PTR [edi],cl
  4034c5:	pop    ebp
  4034c6:	lea    esp,ds:0x5911e59e
  4034cc:	mov    ecx,0xdad7c9a0
  4034d1:	sti    
  4034d2:	bound  esp,QWORD PTR [eax-0x6c]
  4034d5:	push   esi
  4034d6:	inc    ebx
  4034d7:	cld    
  4034d8:	xchg   esp,eax
  4034d9:	cdq    
  4034da:	shl    DWORD PTR [edi],1
  4034dc:	or     eax,0xc95bc589
  4034e2:	push   0x16
  4034e4:	ins    DWORD PTR es:[edi],dx
  4034e5:	int3   
  4034e6:	adc    esp,DWORD PTR [eax+0x7a3f5e54]
  4034ec:	cmp    ecx,esi
  4034ee:	retf   
  4034ef:	inc    ecx
  4034f0:	mov    esp,0xb9f6fe44
  4034f5:	inc    edi
  4034f6:	xor    ebp,DWORD PTR [ecx-0x80]
  4034f9:	push   edx
  4034fa:	imul   ebx,esp,0x43
  4034fd:	pop    ebx
  4034fe:	push   esp
  4034ff:	fisub  WORD PTR [esi]
  403501:	ja     0x40355e
  403503:	lods   eax,DWORD PTR ds:[esi]
  403504:	mov    eax,ds:0xee56b9a6
  403509:	jbe    0x4034ea
  40350b:	pop    ecx
  40350c:	mov    dh,BYTE PTR [edx]
  40350e:	jne    0x403547
  403510:	(bad)  [edi-0x78]
  403513:	add    DWORD PTR [edi],0x8c6903ec
  403519:	test   cl,ch
  40351b:	add    DWORD PTR [esi],esp
  40351d:	push   esi
  40351e:	xchg   ebx,eax
  40351f:	into   
  403520:	sub    BYTE PTR [edi-0x39],al
  403523:	inc    ecx
  403524:	jge    0x4034aa
  403526:	mov    ah,0x7d
  403528:	adc    eax,0xedbdd06c
  40352d:	add    DWORD PTR [esp+ebp*1-0x47],edx
  403531:	sub    edx,DWORD PTR [ebp-0x31]
  403534:	jecxz  0x4035a2
  403536:	or     al,0x8
  403538:	cmp    bl,BYTE PTR [edx]
  40353a:	gs xchg ebp,eax
  40353c:	mov    BYTE PTR [esi-0xd],bl
  40353f:	cmc    
  403540:	not    bh
  403542:	shl    DWORD PTR ds:0xddc2e25a,cl
  403548:	pusha  
  403549:	pmulhw mm6,QWORD PTR [ebp-0x3bf80b8e]
  403550:	je     0x40356e
  403552:	(bad)  
  403553:	outs   dx,BYTE PTR ds:[esi]
  403554:	dec    esp
  403555:	pop    edx
  403556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403557:	es jle 0x40354e
  40355a:	push   ebp
  40355b:	or     DWORD PTR [ecx],0xf4ced149
  403561:	retf   
  403562:	cwde   
  403563:	or     edx,ecx
  403565:	outs   dx,DWORD PTR ds:[esi]
  403566:	je     0x403507
  403568:	and    BYTE PTR [ecx-0x69],dl
  40356b:	adc    al,0xc7
  40356d:	push   ebp
  40356e:	xor    ch,BYTE PTR [ebx]
  403570:	pop    eax
  403571:	and    bh,0x1c
  403574:	sbb    al,0xde
  403576:	xor    bh,cl
  403578:	or     ah,BYTE PTR [si]
  40357b:	cdq    
  40357c:	popa   
  40357d:	aam    0xc7
  40357f:	hlt    
  403580:	scas   al,BYTE PTR es:[edi]
  403581:	xchg   edx,eax
  403582:	push   esp
  403583:	xor    eax,0xf1df501f
  403588:	rcl    BYTE PTR [edx+0x3c2b0d9d],1
  40358e:	test   DWORD PTR [ecx],edi
  403590:	sbb    DWORD PTR [edi+0x60af131e],edx
  403596:	pop    esi
  403597:	push   cs
  403598:	push   es
  403599:	rol    BYTE PTR [esi-0x36cd3b24],cl
  40359f:	xor    BYTE PTR [ebx-0x23717437],cl
  4035a5:	test   eax,0x374a6d18
  4035aa:	or     cl,BYTE PTR [ebx-0x66ada426]
  4035b0:	aam    0x8d
  4035b2:	jecxz  0x403563
  4035b4:	push   esi
  4035b5:	xor    al,0x84
  4035b7:	push   ss
  4035b8:	ret    
  4035b9:	xchg   edx,eax
  4035ba:	mov    BYTE PTR [esi+0x2d3f7816],bh
  4035c0:	rol    BYTE PTR [edi+esi*2],1
  4035c3:	in     eax,0x5f
  4035c5:	mov    DWORD PTR [ecx],ebx
  4035c7:	call   0x934d:0x6ea4698e
  4035ce:	push   ss
  4035cf:	cmp    edi,DWORD PTR ds:0xf25d1f0e
  4035d5:	adc    BYTE PTR [edi-0x4c682dce],ch
  4035db:	ins    DWORD PTR es:[edi],dx
  4035dc:	xor    esp,0x6952b6e7
  4035e2:	(bad)  
  4035e3:	pop    ebx
  4035e4:	sub    ebp,DWORD PTR [edx+0x6]
  4035e7:	jl     0x403610
  4035e9:	sub    bl,dh
  4035eb:	sar    BYTE PTR [eax+esi*8],cl
  4035ee:	jle    0x4035c6
  4035f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f1:	dec    esp
  4035f2:	jecxz  0x4035e4
  4035f4:	mov    ebx,DWORD PTR [edx-0x5595415b]
  4035fa:	pop    esp
  4035fb:	mov    al,0x8a
  4035fd:	adc    ebx,DWORD PTR [ebp+0x2ad5d2ae]
  403603:	inc    esi
  403604:	pop    ebx
  403605:	push   esp
  403606:	dec    eax
  403607:	push   ds
  403608:	fstp   DWORD PTR [esi+0x567d592e]
  40360e:	dec    esi
  40360f:	adc    DWORD PTR [esi-0x653cc6],ebx
  403615:	jg     0x40365a
  403617:	imul   esp,esp,0x20dd9285
  40361d:	aas    
  40361e:	mov    ah,0x57
  403620:	inc    eax
  403621:	dec    ebp
  403622:	mov    bl,0xc5
  403624:	out    dx,eax
  403625:	icebp  
  403626:	xchg   ebx,eax
  403627:	xchg   ecx,eax
  403628:	sbb    ebp,ecx
  40362a:	mov    bl,0x39
  40362c:	add    eax,0xcaf2e9bc
  403631:	in     al,0x24
  403633:	cwde   
  403634:	loope  0x403645
  403636:	add    dl,BYTE PTR [eax+0xa]
  403639:	mov    BYTE PTR [edi-0x15],bl
  40363c:	imul   ecx,esp,0x20
  40363f:	mov    ds:0xc7cf6708,al
  403644:	mov    DWORD PTR [eax+0x59cdcf98],ecx
  40364a:	sbb    eax,0x89c8907e
  40364f:	cmp    ebx,DWORD PTR [ecx+0x1f]
  403652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403653:	sub    ecx,edx
  403655:	or     al,0x1f
  403657:	iret   
  403658:	call   0x8b611dc5
  40365d:	sahf   
  40365e:	dec    esi
  40365f:	xchg   ebp,eax
  403660:	imul   BYTE PTR [esi+0x7]
  403663:	xchg   edx,eax
  403665:	sbb    BYTE PTR [esi+0x3fb356b1],dh
  40366b:	mov    ds:0xe11c464c,al
  403671:	in     al,0xaa
  403673:	repz imul ebp,DWORD PTR [eax-0x72],0x72
  403678:	add    BYTE PTR [ecx+ebx*1-0x5e],bh
  40367c:	lahf   
  40367d:	sub    al,0xf
  40367f:	sub    BYTE PTR [ecx+0xde4f2cc],0xd6
  403686:	mov    ?,WORD PTR [edi-0x75]
  403689:	les    edi,FWORD PTR [esi+0x1f7e59be]
  40368f:	add    BYTE PTR [edx-0x1e],ch
  403692:	cmp    BYTE PTR [ecx],bl
  403694:	cmp    edi,DWORD PTR [edx]
  403696:	mov    bh,0xc4
  403698:	add    DWORD PTR [esi-0x31ae4fd6],ecx
  40369e:	mov    ds:0xc73bfd96,al
  4036a3:	mov    DWORD PTR [ecx-0x7cd8f96c],esp
  4036a9:	leave  
  4036aa:	retf   
  4036ab:	xor    edi,DWORD PTR [ebp+0x44dc2d84]
  4036b1:	jge    0x4036e7
  4036b3:	js     0x4036ca
  4036b5:	ret    
  4036b6:	ret    
  4036b7:	(bad)  
  4036b8:	or     dl,BYTE PTR [ecx-0x4a]
  4036bb:	clc    
  4036bc:	popf   
  4036bd:	rol    esi,0x78
  4036c0:	lahf   
  4036c1:	data16 mov BYTE PTR [esi+0x35],bh
  4036c5:	test   BYTE PTR [ebx-0x5a],0xe
  4036c9:	fisubr DWORD PTR [edx+esi*2-0x6f]
  4036cd:	sbb    DWORD PTR [eax-0x14],eax
  4036d0:	cs out dx,al
  4036d2:	fisub  WORD PTR [edx+0x39]
  4036d5:	pop    ss
  4036d6:	dec    ebp
  4036d7:	call   0x218763b3
  4036dc:	mov    ebp,0x43454d4f
  4036e1:	xchg   edi,eax
  4036e2:	enter  0xbb9a,0x70
  4036e6:	mov    edx,0x8000c7de
  4036eb:	imul   ecx,DWORD PTR [ebx+0x5d],0x3422ea34
  4036f2:	mov    dh,0xcd
  4036f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f5:	std    
  4036f6:	xchg   esp,eax
  4036f7:	mov    ds:0x34de5474,eax
  4036fc:	aaa    
  4036fd:	pop    ebx
  4036fe:	sti    
  4036ff:	fs mov ebp,0xc432ba2a
  403705:	scas   eax,DWORD PTR es:[edi]
  403706:	push   ebp
  403707:	add    eax,0x43686d25
  40370c:	fild   WORD PTR [ebx]
  40370e:	mov    dl,0x64
  403710:	dec    ebx
  403711:	mov    DWORD PTR [esi+0x3c5f2636],edx
  403717:	xor    eax,0x3a533f60
  40371c:	mov    esp,0x77748e8a
  403721:	lea    edx,ds:0x4d3c3b1c
  403727:	jbe    0x40374d
  403729:	jmp    0xbea0:0xbed83e3a
  403730:	icebp  
  403731:	test   eax,0x3acfb4e6
  403736:	cwde   
  403737:	inc    edx
  403738:	sub    BYTE PTR [ebx+0x3a94a5de],bl
  40373e:	out    dx,eax
  40373f:	maxps  xmm2,XMMWORD PTR [edi-0x29]
  403743:	fcomp  DWORD PTR [edx+0x76]
  403746:	xchg   DWORD PTR [ecx-0x22],eax
  403749:	fcomp  DWORD PTR [ebx+0x388433e8]
  40374f:	and    ah,BYTE PTR [esi]
  403751:	ret    0xfce9
  403754:	sub    cl,BYTE PTR [eax]
  403756:	inc    esi
  403757:	je     0x403738
  403759:	aaa    
  40375a:	out    dx,al
  40375b:	sub    eax,0x36de1f34
  403760:	add    BYTE PTR [edx],0xcf
  403763:	and    eax,0x9f9f1433
  403768:	pop    ecx
  403769:	xor    ebp,DWORD PTR [eax-0x67]
  40376c:	sti    
  40376d:	mov    al,ds:0x3a5a94d8
  403772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403773:	xchg   BYTE PTR [ebp+0x70],dl
  403776:	stos   DWORD PTR es:[edi],eax
  403777:	test   ecx,0xad720cab
  40377d:	loope  0x4037e4
  40377f:	daa    
  403780:	xchg   edi,eax
  403781:	mov    edx,0x37612a6d
  403786:	jmp    0x403713
  403788:	sbb    al,0xef
  40378a:	repnz inc ax
  40378d:	jle    0x40379d
  40378f:	stos   BYTE PTR es:[edi],al
  403790:	jae    0x4037ef
  403792:	xor    eax,0xc1632cc2
  403797:	shl    esp,cl
  403799:	ror    ah,1
  40379b:	les    ecx,FWORD PTR [edx]
  40379d:	sar    esp,1
  40379f:	dec    esp
  4037a0:	mov    al,0xe6
  4037a2:	push   eax
  4037a3:	and    BYTE PTR [ebp+0x4f551a28],0x1a
  4037aa:	fstp   TBYTE PTR [esi]
  4037ac:	xchg   edi,eax
  4037ad:	or     al,0x0
  4037af:	clc    
  4037b0:	fwait
  4037b1:	mov    ds:0x3ae68d,eax
  4037b6:	test   al,0xe7
  4037b8:	into   
  4037b9:	pusha  
  4037ba:	imul   ecx,DWORD PTR [edx+0x21],0x2
  4037be:	rcr    ah,1
  4037c0:	cmp    BYTE PTR [esi-0x37],ch
  4037c3:	mov    ebp,fs
  4037c5:	mov    bh,0x38
  4037c7:	adc    al,0xd8
  4037c9:	rcl    BYTE PTR [eax-0x2d],0x8a
  4037cd:	bound  ecx,QWORD PTR [esi+0x387abb57]
  4037d3:	dec    esp
  4037d4:	xchg   ecx,eax
  4037d5:	rcr    esp,0xcd
  4037d8:	enter  0xf2dd,0x11
  4037dc:	sub    eax,0xd6e3a40d
  4037e1:	pop    eax
  4037e2:	clc    
  4037e3:	or     BYTE PTR [ecx-0x62100843],ch
  4037e9:	inc    esi
  4037ea:	mov    ds:0x96f1cc38,al
  4037ef:	rcr    DWORD PTR [edi+edx*1+0x746e9ad6],cl
  4037f6:	jmp    0x1d272bd8
  4037fb:	aaa    
  4037fc:	dec    ebx
  4037fd:	jns    0x4037bd
  4037ff:	mov    eax,ds:0x451c57d2
  403804:	xchg   DWORD PTR [ebp-0xa],esp
  403807:	test   al,0xe1
  403809:	enter  0xba35,0xda
  40380d:	adc    eax,0xbb824674
  403812:	call   0x750:0x53c48088
  403819:	bnd jo 0x403858
  40381c:	fidivr DWORD PTR [edx+0x5e]
  40381f:	pop    ds
  403820:	sub    DWORD PTR [esi+0x5c],0xebdfa293
  403827:	jb     0x403834
  403829:	ss cld 
  40382b:	sbb    BYTE PTR [ebp+0x39094e46],ch
  403831:	stc    
  403832:	mov    ds:0xe0cf7aa,eax
  403837:	pop    ecx
  403838:	mov    ah,0x5c
  40383a:	jns    0x403873
  40383c:	outs   dx,BYTE PTR ds:[esi]
  40383d:	(bad)  
  40383e:	sbb    esi,DWORD PTR [esi]
  403840:	jle    0x403835
  403842:	scas   eax,DWORD PTR es:[edi]
  403843:	sub    bh,BYTE PTR [ebx]
  403845:	mov    eax,0xfe8847ea
  40384a:	lock rcr BYTE PTR [esp+ebp*1],0x4c
  40384f:	rcl    DWORD PTR [eax],0xac
  403852:	mov    al,0x3d
  403854:	pop    ecx
  403855:	add    cl,ch
  403857:	mul    BYTE PTR [edi+0x28]
  40385a:	(bad)
  40385d:	fnsave [esi]
  40385f:	je     0x403847
  403861:	std    
  403862:	stc    
  403863:	das    
  403864:	leave  
  403865:	mov    al,0x8
  403867:	fimul  WORD PTR [edx+ebx*8-0x27e7ce85]
  40386e:	imul   ecx
  403870:	and    eax,0xb1302f2a
  403876:	sahf   
  403877:	outs   dx,DWORD PTR ds:[esi]
  403878:	and    ebp,esi
  40387a:	jg     0x40388e
  40387c:	inc    edi
  40387d:	call   0xb958:0xec39395e
  403884:	sbb    ebp,DWORD PTR [eax+ebp*8+0x1543cc42]
  40388b:	and    esi,ebx
  40388d:	stos   DWORD PTR es:[edi],eax
  40388e:	and    esp,DWORD PTR [esi]
  403890:	fidivr WORD PTR [eax+edx*4+0x38d9c65a]
  403897:	out    0xaf,al
  403899:	jb     0x403905
  40389b:	and    eax,0x606e2f1f
  4038a0:	pop    ds
  4038a1:	xlat   BYTE PTR ds:[ebx]
  4038a2:	xchg   esp,eax
  4038a3:	call   FWORD PTR [ebx+0x31]
  4038a6:	hlt    
  4038a7:	xchg   ebx,eax
  4038a8:	loop   0x403927
  4038aa:	lea    esi,[edx]
  4038ac:	dec    esp
  4038ad:	add    al,0xdc
  4038af:	jae    0x4038ab
  4038b1:	mov    BYTE PTR [ebp+0x769bc5df],dl
  4038b7:	pop    es
  4038b8:	test   DWORD PTR [ecx],ecx
  4038ba:	push   ss
  4038bb:	xor    DWORD PTR [eax],esp
  4038bd:	and    BYTE PTR [eax+0x13],cl
  4038c0:	jbe    0x40387c
  4038c2:	loope  0x403895
  4038c4:	push   ebx
  4038c5:	scas   eax,DWORD PTR es:[edi]
  4038c6:	sti    
  4038c7:	(bad)  
  4038c8:	ds std 
  4038ca:	hlt    
  4038cb:	xchg   DWORD PTR [ebx+0x6f],edx
  4038ce:	xor    al,cl
  4038d0:	cdq    
  4038d1:	or     ebp,DWORD PTR gs:[edx-0x28]
  4038d5:	mov    ch,bl
  4038d7:	dec    edx
  4038d8:	arpl   WORD PTR [esi-0x38],bp
  4038db:	stos   DWORD PTR es:[edi],eax
  4038dc:	div    cl
  4038de:	fldcw  WORD PTR [ebx+0x65d50fda]
  4038e4:	bound  esi,QWORD PTR [esi-0x114b92c7]
  4038ea:	sbb    al,0xd4
  4038ec:	xor    DWORD PTR [ebp+0x35],eax
  4038ef:	sbb    ecx,DWORD PTR [bx+di-0x6474]
  4038f4:	adc    dh,BYTE PTR [ecx]
  4038f6:	push   es
  4038f7:	aas    
  4038f8:	jae    0x403890
  4038fa:	jmp    0x403888
  4038fc:	jp     0x403963
  4038fe:	cmp    esi,ebx
  403900:	jb     0x40390e
  403902:	repz mov esi,0x2e14c092
  403908:	push   es
  403909:	stos   BYTE PTR es:[edi],al
  40390a:	cmp    eax,0x67a425f8
  40390f:	push   ebx
  403910:	das    
  403911:	iret   
  403912:	std    
  403913:	pop    esi
  403914:	js     0x4038c8
  403916:	xor    al,BYTE PTR [esi+0x7f]
  403919:	fild   QWORD PTR [ecx]
  40391b:	cmp    edi,eax
  40391d:	jge    0x4038ee
  40391f:	push   ecx
  403920:	inc    edx
  403921:	jmp    edi
  403923:	lock retf 
  403925:	outs   dx,BYTE PTR ds:[esi]
  403926:	xchg   DWORD PTR [esi+ecx*4],esp
  403929:	and    BYTE PTR [edi],0x96
  40392c:	leave  
  40392d:	loope  0x4038e2
  40392f:	je     0x40395d
  403931:	push   cs
  403932:	dec    ebx
  403933:	sub    ah,BYTE PTR [edi]
  403935:	mov    edx,0x55a6a988
  40393a:	add    edx,DWORD PTR [esi+0x4ecb7db4]
  403940:	jp     0x4039a1
  403942:	rdmsr  
  403944:	lock dec ebp
  403946:	retf   
  403947:	sbb    eax,0x2d77168
  40394c:	lds    edx,FWORD PTR [ebx+0x35]
  40394f:	sub    al,0x71
  403951:	jmp    0xd9e5:0xfd796ff7
  403958:	(bad)  
  403959:	stc    
  40395a:	(bad)  
  40395b:	out    0xab,al
  40395d:	inc    edi
  40395e:	outs   dx,DWORD PTR ds:[esi]
  40395f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403960:	cmp    BYTE PTR [eax+0x45a6273b],bl
  403966:	cmp    al,0xa7
  403968:	pop    eax
  403969:	aam    0x18
  40396b:	lods   eax,DWORD PTR ds:[esi]
  40396c:	dec    DWORD PTR [edi+0x4233c8ed]
  403972:	push   cs
  403973:	push   esi
  403974:	scas   al,BYTE PTR es:[edi]
  403975:	lds    edi,FWORD PTR [edi+0x6f98d3d]
  40397b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40397c:	jb     0x403986
  40397e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40397f:	lahf   
  403980:	into   
  403981:	add    al,0x3b
  403983:	scas   eax,DWORD PTR es:[edi]
  403984:	fwait
  403985:	sub    eax,0x2d7cdd4f
  40398a:	lock aam 0xd4
  40398d:	dec    esi
  40398e:	cmc    
  40398f:	add    edi,DWORD PTR [esi-0x6e8ce1e6]
  403995:	push   esp
  403996:	test   ebx,esi
  403998:	imul   ebx,DWORD PTR [ecx+0x6],0x12
  40399c:	outs   dx,DWORD PTR ds:[esi]
  40399d:	fiadd  DWORD PTR [edx-0x2c]
  4039a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a1:	iret   
  4039a2:	and    al,0x4b
  4039a4:	loopne 0x403967
  4039a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a7:	out    0x28,eax
  4039a9:	cli    
  4039aa:	push   es
  4039ab:	sbb    eax,edx
  4039ad:	fistp  WORD PTR [edx+0x4b]
  4039b0:	cdq    
  4039b1:	out    0x51,eax
  4039b3:	add    ecx,DWORD PTR [ecx-0x39407607]
  4039b9:	jno    0x4039a6
  4039bb:	ret    0x735b
  4039be:	fnstcw WORD PTR ds:0x69a3120c
  4039c4:	lock adc cl,al
  4039c7:	bound  ecx,QWORD PTR [edx-0x6a8b8702]
  4039cd:	jne    0x403a4d
  4039cf:	or     edi,ebx
  4039d1:	daa    
  4039d2:	or     eax,0xe99aae2e
  4039d7:	push   0x62bac6b9
  4039dc:	(bad)  
  4039de:	jecxz  0x403970
  4039e0:	ss xchg ecx,eax
  4039e2:	pop    edi
  4039e3:	out    0x0,eax
  4039e5:	hlt    
  4039e6:	sub    al,0xe6
  4039e8:	mov    eax,ds:0x60297937
  4039ed:	xor    DWORD PTR [esi],ecx
  4039ef:	inc    esp
  4039f0:	sbb    dh,cl
  4039f2:	jmp    0x403983
  4039f4:	cld    
  4039f5:	push   esi
  4039f6:	aam    0x84
  4039f8:	or     dl,0xd4
  4039fb:	inc    eax
  4039fc:	gs xchg edi,eax
  4039fe:	gs push ebx
  403a00:	dec    esp
  403a01:	das    
  403a02:	mov    bl,0xa8
  403a04:	fcomp  QWORD PTR [edi+0x56]
  403a07:	pop    ss
  403a08:	shl    DWORD PTR [esi+0x5e],cl
  403a0b:	xchg   esp,eax
  403a0c:	sti    
  403a0d:	call   0xc9a97e
  403a12:	mov    ds:0xa2183638,eax
  403a17:	and    ecx,DWORD PTR [ebx+0x3d]
  403a1a:	xor    ch,BYTE PTR [edi]
  403a1c:	repnz mov ebp,0xdf040aa5
  403a22:	jg     0x403a4d
  403a24:	test   al,0x1
  403a26:	pop    eax
  403a27:	cli    
  403a28:	xor    DWORD PTR [edi+edx*8+0x2a9585a6],eax
  403a2f:	and    ecx,DWORD PTR [bx+0x4a07]
  403a34:	ret    0xff1e
  403a37:	(bad)  
  403a38:	pop    ds
  403a39:	fild   WORD PTR [esi-0x6a39bdf3]
  403a3f:	jae    0x4039e5
  403a41:	push   esp
  403a42:	cmc    
  403a43:	pop    ds
  403a44:	jmp    0x6ec0:0xc936
  403a4a:	mov    ch,0x31
  403a4c:	jnp    0x403aa1
  403a4e:	add    BYTE PTR [ebp+0x9],bl
  403a51:	add    BYTE PTR [ecx-0x3b],al
  403a54:	xchg   dh,dh
  403a56:	jecxz  0x4039f6
  403a58:	pcmpgtb mm6,mm7
  403a5b:	out    0xdd,al
  403a5d:	(bad)  
  403a5f:	in     eax,dx
  403a60:	pop    esp
  403a61:	cmp    ah,BYTE PTR [edi+0x21635666]
  403a67:	and    edx,DWORD PTR [ebx-0xa]
  403a6a:	pusha  
  403a6b:	and    eax,0xe21235b1
  403a70:	sbb    dh,BYTE PTR [eax+eiz*2]
  403a73:	sub    ecx,eax
  403a75:	push   ecx
  403a76:	rcl    eax,1
  403a78:	aad    0x81
  403a7a:	push   ds
  403a7b:	hlt    
  403a7c:	adc    al,0x2b
  403a7e:	aaa    
  403a7f:	je     0x403a0d
  403a81:	push   ss
  403a82:	jne    0x403a4a
  403a84:	cmc    
  403a85:	jns    0x403ad4
  403a87:	xchg   ebp,eax
  403a88:	stos   BYTE PTR es:[edi],al
  403a89:	out    dx,al
  403a8a:	in     al,dx
  403a8b:	xchg   edx,eax
  403a8c:	mov    ebp,0x6139d36a
  403a91:	sbb    DWORD PTR [edi-0x26a89685],0x1b0cffa5
  403a9b:	call   0xc5f1:0x9012ef87
  403aa2:	mov    dl,0xda
  403aa4:	retf   0xd512
  403aa7:	jae    0x403ae9
  403aa9:	cmp    DWORD PTR [esi-0x79],ebp
  403aac:	je     0x403b1f
  403aae:	inc    ecx
  403aaf:	(bad)  
  403ab1:	mov    dh,BYTE PTR [esi+0x6a]
  403ab4:	pop    edi
  403ab5:	push   0x1b
  403ab7:	xchg   edx,eax
  403ab8:	(bad)  
  403ab9:	dec    eax
  403aba:	and    eax,0x682a9f70
  403abf:	inc    edi
  403ac0:	xlat   BYTE PTR ds:[ebx]
  403ac1:	jge    0x403a93
  403ac3:	ins    DWORD PTR es:[edi],dx
  403ac4:	xor    ah,ah
  403ac6:	push   esp
  403ac7:	dec    esi
  403ac8:	sub    al,0x7f
  403aca:	mov    ecx,0x19309599
  403acf:	dec    ecx
  403ad0:	push   ds
  403ad1:	xor    eax,0xd58e7eaf
  403ad6:	ss loopne 0x403ae9
  403ad9:	call   0xa58afce
  403ade:	jbe    0x403a76
  403ae0:	gs repz push ds
  403ae3:	add    edx,DWORD PTR [edx-0x31]
  403ae6:	pop    edx
  403ae7:	test   eax,0xe7b0796
  403aec:	sub    esp,ebp
  403aee:	jae    0x403a76
  403af0:	bound  eax,QWORD PTR [ebx]
  403af2:	icebp  
  403af3:	fs xchg ebx,eax
  403af5:	sbb    DWORD PTR [edx-0x531b539d],esi
  403afb:	fmul   st(4),st
  403afd:	push   ds
  403afe:	cli    
  403aff:	sbb    edi,DWORD PTR [ebx]
  403b01:	xchg   ecx,eax
  403b02:	mov    esp,0xd434b883
  403b07:	arpl   dx,di
  403b09:	mov    ch,0x6
  403b0b:	add    ch,dl
  403b0d:	out    0x61,al
  403b0f:	fnstsw WORD PTR [edi]
  403b11:	test   DWORD PTR [eax+0x7b],0xc1741629
  403b18:	aaa    
  403b19:	push   0x65b29260
  403b1e:	inc    ebp
  403b1f:	pop    edi
  403b20:	je     0x403b6d
  403b22:	bnd jg 0x403ad3
  403b25:	outs   dx,DWORD PTR ds:[esi]
  403b26:	xor    eax,0x997d9443
  403b2b:	sub    eax,edi
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429b9f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	frstor [edi-0x107eb659]
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xfffffffc
  403ca6:	push   ebp
  403ca7:	lods   al,BYTE PTR ds:[esi]
  403ca8:	or     bl,BYTE PTR [ecx-0x27]
  403cab:	into   
  403cac:	jecxz  0x403c3d
  403cae:	push   ecx
  403caf:	scas   eax,DWORD PTR es:[edi]
  403cb0:	push   0xfffffffa
  403cb2:	sbb    esp,ebp
  403cb4:	shl    DWORD PTR [ebx],cl
  403cb6:	int    0x6d
  403cb8:	out    dx,eax
  403cb9:	cmp    bh,ch
  403cbb:	inc    eax
  403cbc:	mov    dl,0x35
  403cbe:	repnz lahf 
  403cc0:	aam    0x3f
  403cc2:	loope  0x403d23
  403cc4:	das    
  403cc5:	add    BYTE PTR [eax-0x1],dh
  403cc8:	mov    eax,0xf016d4c0
  403ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cce:	mov    dh,0x59
  403cd0:	jmp    0x403d3f
  403cd2:	or     al,0x8c
  403cd4:	and    eax,0x1b0416a
  403cd9:	inc    ebx
  403cda:	add    al,0xbb
  403cdc:	sub    eax,0x8e47ba09
  403ce1:	mov    DWORD PTR [ebx-0x43],ebp
  403ce4:	mov    dh,0x24
  403ce6:	neg    DWORD PTR [eax+0x7f]
  403ce9:	int3   
  403cea:	call   0x7c4b6ccc
  403cef:	stos   DWORD PTR es:[edi],eax
  403cf0:	cld    
  403cf1:	gs daa 
  403cf3:	jno    0x403ce8
  403cf5:	push   esi
  403cf6:	fldcw  WORD PTR [esp+eax*8]
  403cf9:	xchg   esp,eax
  403cfa:	inc    esi
  403cfb:	and    bl,BYTE PTR ds:0xfb2e7731
  403d01:	shr    ebx,1
  403d03:	jbe    0x403cb9
  403d05:	sub    esp,ebp
  403d07:	fld    TBYTE PTR [edx-0x5d]
  403d0a:	pop    edi
  403d0b:	loop   0x403d42
  403d0d:	or     al,0xfa
  403d0f:	adc    eax,0x4cd94e61
  403d14:	add    dl,dh
  403d16:	cld    
  403d17:	cmp    al,0x6b
  403d19:	sbb    BYTE PTR [ebp+0x41],dh
  403d1c:	ja     0x403ce1
  403d1e:	mov    WORD PTR [eax+ebp*2+0x7d],?
  403d22:	push   ss
  403d23:	scas   eax,DWORD PTR es:[edi]
  403d24:	sbb    bh,BYTE PTR [ebp+0x46]
  403d27:	and    al,ch
  403d29:	adc    eax,0xc62f2385
  403d2e:	retf   
  403d2f:	jne    0x403ce4
  403d31:	push   ss
  403d32:	mov    dh,0x66
  403d34:	leave  
  403d35:	xor    ebp,ebp
  403d37:	push   ss
  403d38:	push   ds
  403d39:	xchg   edx,eax
  403d3a:	xchg   ebp,eax
  403d3b:	or     al,0xaa
  403d3d:	lea    ebp,[ebp+eiz*2+0x73d56331]
  403d44:	cmp    DWORD PTR [ebx],edx
  403d46:	dec    ebp
  403d47:	cmc    
  403d48:	mov    ds:0xfc268ac1,al
  403d4d:	ins    DWORD PTR es:[edi],dx
  403d4e:	fnstsw WORD PTR [eax+0xff6414f]
  403d54:	and    eax,0xf7b19cd2
  403d59:	dec    DWORD PTR [eax+0x51844d42]
  403d5f:	(bad)  
  403d60:	jle    0x403d53
  403d62:	(bad)  
  403d63:	jnp    0x403dc6
  403d65:	ins    DWORD PTR es:[edi],dx
  403d66:	sbb    BYTE PTR [esi+0x19],cl
  403d69:	pop    ebx
  403d6a:	pop    ecx
  403d6b:	arpl   bp,dx
  403d6d:	push   eax
  403d6e:	das    
  403d6f:	outs   dx,BYTE PTR ds:[esi]
  403d70:	dec    ebx
  403d71:	sbb    DWORD PTR [edx],eax
  403d73:	fsubr  st(1),st
  403d75:	std    
  403d76:	xchg   edx,eax
  403d77:	push   ss
  403d78:	neg    esi
  403d7a:	ss pop esp
  403d7c:	or     BYTE PTR [ebx],ch
  403d7e:	(bad)  
  403d7f:	iret   
  403d80:	mov    cl,0x5f
  403d82:	jecxz  0x403df0
  403d84:	cwde   
  403d85:	clc    
  403d86:	push   0xffffffc6
  403d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d89:	push   esp
  403d8a:	xor    DWORD PTR [ebx],0x52b43cf5
  403d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d91:	xor    dh,BYTE PTR [ecx]
  403d93:	imul   eax,DWORD PTR [edi],0xd3449dc5
  403d99:	addr16 ret 0xddab
  403d9d:	cmp    al,0x2a
  403d9f:	sbb    eax,0xe8d733a4
  403da4:	int    0xcd
  403da6:	and    DWORD PTR [edi],0x5c
  403da9:	sbb    BYTE PTR [edx-0x3d],0x56
  403dad:	imul   eax,DWORD PTR [esi],0x6f2ee4b5
  403db3:	inc    esi
  403db4:	shl    dl,cl
  403db6:	push   ebx
  403db7:	hlt    
  403db8:	cdq    
  403db9:	pop    es
  403dba:	inc    edi
  403dbb:	cmc    
  403dbc:	imul   edi,DWORD PTR [edx-0x73],0xf
  403dc0:	mov    bl,0x7e
  403dc2:	dec    edx
  403dc3:	inc    edi
  403dc4:	call   0xf90e:0x8fdb11cf
  403dcb:	xor    eax,0x7770b9b2
  403dd0:	fnstcw WORD PTR [edi+0x37307759]
  403dd6:	popa   
  403dd7:	mov    edi,0xa5036eae
  403ddc:	xchg   ebp,eax
  403ddd:	jge    0x403e08
  403ddf:	fistp  WORD PTR ss:[ecx]
  403de2:	aaa    
  403de3:	ds adc al,0xa2
  403de6:	xchg   esp,eax
  403de7:	mov    eax,DWORD PTR [edi+0x16ec0868]
  403ded:	push   0x6f
  403def:	mov    esp,0x3cbbeb24
  403df4:	adc    al,0x97
  403df6:	outs   dx,DWORD PTR ds:[esi]
  403df7:	jmp    0x403d87
  403df9:	xchg   edx,eax
  403dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dfc:	ins    BYTE PTR es:[edi],dx
  403dfd:	inc    ebx
  403dfe:	gs push 0xc7ee9477
  403e04:	in     al,dx
  403e05:	lea    ecx,ds:0xb6ce934a
  403e0b:	lods   eax,DWORD PTR ds:[esi]
  403e0c:	das    
  403e0d:	pop    ecx
  403e0e:	xor    ah,BYTE PTR ds:0x3307d1d3
  403e14:	loope  0x403df8
  403e16:	sbb    bl,dh
  403e18:	jmp    0xa484b06e
  403e1d:	add    ch,ah
  403e1f:	inc    ebx
  403e20:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403e22:	fidiv  DWORD PTR [eax]
  403e24:	cmp    eax,0x9c18a308
  403e29:	mov    WORD PTR [ebp+0x19],ds
  403e2c:	(bad)  
  403e2e:	hlt    
  403e2f:	in     al,dx
  403e30:	cmp    al,0x1a
  403e32:	mov    esp,0x22d6b996
  403e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e38:	pop    eax
  403e39:	dec    esi
  403e3a:	jno    0x403e53
  403e3c:	jmp    0xa1a6f5cf
  403e41:	inc    eax
  403e42:	mov    BYTE PTR [si],bh
  403e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e46:	sbb    BYTE PTR [edi-0x6a792e2d],dh
  403e4c:	dec    eax
  403e4d:	add    BYTE PTR ds:0x81088313,bh
  403e53:	sbb    eax,0x10bf63ea
  403e58:	add    BYTE PTR [ebp+ebx*1+0x3d],ch
  403e5c:	pop    eax
  403e5d:	ja     0x403e29
  403e5f:	sbb    esp,DWORD PTR [ebx-0x5b]
  403e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e63:	leave  
  403e64:	cdq    
  403e65:	xchg   ecx,eax
  403e66:	add    al,0x5b
  403e68:	gs fwait
  403e6a:	nop
  403e6b:	rol    cl,0x7a
  403e6e:	jmp    0xb2a3fe6c
  403e73:	lahf   
  403e74:	call   0xc1680c77
  403e79:	pop    edi
  403e7a:	pop    edx
  403e7b:	or     BYTE PTR [ebp-0x33],ch
  403e7e:	jge    0x403ebc
  403e80:	jno    0x403e43
  403e82:	fstp   DWORD PTR ds:0x2fa02b63
  403e88:	sbb    BYTE PTR [eax-0x4e8b2508],bl
  403e8e:	ds inc edi
  403e90:	jle    0x403ee9
  403e92:	mov    esi,0xe468f91
  403e97:	int3   
  403e98:	cmp    al,0x74
  403e9a:	aam    0x99
  403e9c:	jnp    0x403e42
  403e9e:	push   ecx
  403e9f:	js     0x403ea4
  403ea1:	jnp    0x403e4a
  403ea3:	pop    edx
  403ea4:	cmc    
  403ea5:	jne    0x403ed5
  403ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea8:	sub    esp,DWORD PTR [esi+0x33556c1d]
  403eae:	xor    DWORD PTR [ebp-0x1c07b68f],esp
  403eb4:	pop    ecx
  403eb5:	dec    eax
  403eb6:	pushf  
  403eb7:	sysenter 
  403eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eba:	mov    edx,0x36dfa61
  403ebf:	sti    
  403ec0:	neg    DWORD PTR [esi+ecx*2]
  403ec3:	mov    dh,0xc7
  403ec5:	push   0x2f3e49af
  403eca:	inc    edx
  403ecb:	mov    eax,DWORD PTR [edi+0x3399cf1d]
  403ed1:	or     eax,DWORD PTR [edi]
  403ed3:	pop    ds
  403ed4:	jl     0x403f16
  403ed6:	rol    al,cl
  403ed8:	inc    edx
  403ed9:	pop    ebp
  403eda:	fcomip st,st(4)
  403edc:	cmp    esp,DWORD PTR [ecx+0x55]
  403edf:	mov    cl,0xe4
  403ee1:	push   edx
  403ee2:	xchg   esp,eax
  403ee3:	push   edx
  403ee4:	mov    ds:0x349e9801,al
  403ee9:	xor    esi,DWORD PTR [esi+0x7b]
  403eec:	aas    
  403eed:	xor    BYTE PTR [ecx+0x7c93344c],al
  403ef3:	or     BYTE PTR [esi+0x42edc2d8],0xb8
  403efa:	xchg   BYTE PTR [esi-0x6a],bl
  403efd:	ficom  DWORD PTR [edi+0x4e]
  403f00:	icebp  
  403f01:	inc    ebx
  403f02:	mov    esi,0xfb863630
  403f07:	out    0xc2,eax
  403f09:	mov    al,0xe9
  403f0b:	cmp    BYTE PTR [ebp-0xb],0x49
  403f0f:	dec    edi
  403f10:	push   ss
  403f11:	imul   ebp,DWORD PTR [ecx+0x188b9384],0xfffffff0
  403f18:	(bad)  
  403f1a:	mov    esp,0x38b7f776
  403f1f:	shr    ecx,cl
  403f21:	push   edi
  403f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f23:	loope  0x403edd
  403f25:	call   0x1d3b5d74
  403f2a:	cmp    bl,BYTE PTR [edi]
  403f2c:	fcmovnu st,st(4)
  403f2e:	ins    BYTE PTR es:[edi],dx
  403f2f:	mov    al,0x27
  403f31:	loope  0x403f95
  403f33:	mov    dh,0x5
  403f35:	out    0x2e,al
  403f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f38:	psubb  mm6,QWORD PTR [ecx+0x620bacf4]
  403f3f:	jle    0x403f13
  403f41:	mov    ah,0x4e
  403f43:	call   0xca3cdaba
  403f48:	call   0xe286a3e
  403f4d:	nop
  403f4e:	jge    0x403ed7
  403f50:	repz cwde 
  403f52:	lahf   
  403f53:	cld    
  403f54:	je     0x403f3a
  403f56:	fs jg  0x403f4b
  403f59:	sub    BYTE PTR [ecx+0x7e],bl
  403f5c:	and    eax,0x79130e82
  403f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f62:	and    esp,esp
  403f64:	jnp    0x403f73
  403f66:	pop    eax
  403f67:	mov    al,ds:0xc2c4fefb
  403f6c:	(bad)  
  403f6d:	mov    al,0x41
  403f6f:	inc    edx
  403f70:	ret    
  403f71:	sbb    DWORD PTR [esp+eax*1],ecx
  403f74:	out    dx,al
  403f75:	cmp    BYTE PTR [ecx],bh
  403f77:	or     al,bh
  403f79:	sbb    BYTE PTR [ebp+edi*4-0x59],cl
  403f7d:	cmp    eax,0xd149c40d
  403f82:	shl    DWORD PTR [esi-0x1f],1
  403f85:	pop    ds
  403f86:	mov    BYTE PTR [esi-0x2e],ch
  403f89:	dec    ebx
  403f8a:	add    al,0xf9
  403f8c:	jns    0x403fae
  403f8e:	fs add dl,ch
  403f91:	out    0x10,eax
  403f93:	cld    
  403f94:	pop    es
  403f95:	in     eax,0xba
  403f97:	in     eax,dx
  403f98:	cli    
  403f99:	leave  
  403f9a:	ja     0x404012
  403f9c:	leave  
  403f9d:	pushf  
  403f9e:	push   ecx
  403f9f:	mov    eax,0xa9ab2b93
  403fa4:	hlt    
  403fa5:	push   ebx
  403fa6:	fs lock mov si,cx
  403fab:	stos   BYTE PTR es:[edi],al
  403fac:	das    
  403fad:	adc    al,0x4e
  403faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb0:	pusha  
  403fb1:	sub    eax,0xcc5a527
  403fb6:	xor    DWORD PTR [edi-0x1b],eax
  403fb9:	in     eax,dx
  403fba:	pusha  
  403fbb:	push   0x19f0f758
  403fc0:	xor    eax,0xede1f813
  403fc5:	mov    ecx,0xe4f319e4
  403fca:	imul   esi,DWORD PTR [edx],0xf6c33a98
  403fd0:	not    bh
  403fd2:	cmc    
  403fd3:	test   ax,0x9f47
  403fd7:	xchg   esp,eax
  403fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd9:	popa   
  403fda:	loopne 0x403fec
  403fdc:	cli    
  403fdd:	(bad)  
  403fde:	fcom   st(6)
  403fe0:	sbb    al,0x9d
  403fe2:	sbb    eax,0x4849ae3e
  403fe7:	div    BYTE PTR [eax]
  403fe9:	sub    edi,esi
  403feb:	cld    
  403fec:	add    ecx,DWORD PTR ds:0x53fa085f
  403ff2:	imul   esi,esi,0xffffffe7
  403ff5:	xchg   esp,eax
  403ff6:	sub    edx,ebp
  403ff8:	data16 mov dl,0xa1
  403ffb:	in     al,0x10
  403ffd:	aas    
  403ffe:	mov    ecx,0x9aa7624c
  404003:	dec    edi
  404004:	xor    ebx,DWORD PTR [ebx]
  404006:	dec    edi
  404007:	iret   
  404008:	mov    ecx,DWORD PTR ds:0x60d7e924
  40400e:	cmp    eax,0x55fb9ad8
  404013:	and    ebp,esi
  404015:	sub    eax,0xe19ca27e
  40401a:	push   ds
  40401b:	fdivr  DWORD PTR [esi+0x599acb5d]
  404021:	repnz add dh,BYTE PTR [ecx-0x7b]
  404025:	into   
  404026:	add    ecx,esi
  404028:	div    BYTE PTR [ebp-0x4c]
  40402b:	aad    0xec
  40402d:	popf   
  40402e:	inc    ebx
  40402f:	popa   
  404030:	out    dx,eax
  404031:	adc    cl,BYTE PTR [edx+0x7b]
  404034:	xchg   edi,eax
  404035:	dec    ebp
  404036:	mov    ?,edx
  404038:	lods   eax,DWORD PTR ds:[esi]
  404039:	push   0xf084ff0f
  40403e:	ja     0x404041
  404040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404041:	lods   al,BYTE PTR ds:[esi]
  404042:	xchg   esp,eax
  404043:	dec    ecx
  404044:	jmp    0xee08ab5e
  404049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404a:	jp     0x40405a
  40404c:	in     eax,dx
  40404d:	or     eax,0x6a03ab9a
  404052:	add    cl,BYTE PTR [esi+0x3ef91e36]
  404058:	lahf   
  404059:	jge    0x404067
  40405b:	fdivr  QWORD PTR ds:0x576ea6bd
  404061:	mov    cl,0xf5
  404063:	pop    esi
  404064:	jno    0x403fed
  404066:	lods   al,BYTE PTR ds:[esi]
  404067:	lods   eax,DWORD PTR ds:[esi]
  404068:	xchg   DWORD PTR ds:[ecx+0x466edeef],eax
  40406f:	ficomp WORD PTR [esi*1-0x74210c34]
  404076:	xchg   BYTE PTR [edi+eiz*8-0x684e3e03],dl
  40407d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40407e:	sbb    esi,ebx
  404080:	jne    0x4040e7
  404082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404083:	cmp    bl,cl
  404085:	jns    0x4040fe
  404087:	outs   dx,DWORD PTR ds:[esi]
  404088:	jmp    DWORD PTR [ecx+0x52ed581d]
  40408e:	sub    esp,DWORD PTR [edi-0x1b6e135c]
  404094:	push   es
  404095:	fsub   DWORD PTR [edx]
  404097:	loope  0x404045
  404099:	adc    edx,esi
  40409b:	inc    ecx
  40409c:	add    al,0xf6
  40409e:	sbb    al,0x3c
  4040a0:	data16 adc BYTE PTR [edi+edx*8-0x1b4974c4],bl
  4040a8:	call   0xbf3b:0x4ba244e4
  4040af:	lods   eax,DWORD PTR ds:[esi]
  4040b0:	cdq    
  4040b1:	adc    al,0x1d
  4040b3:	shl    BYTE PTR [edx+0x25],1
  4040b6:	fdivr  st,st(2)
  4040b8:	inc    ecx
  4040b9:	mov    ah,BYTE PTR [eax]
  4040bb:	adc    esp,ecx
  4040bd:	push   0xdd3d9be0
  4040c2:	or     dh,dh
  4040c4:	push   ebp
  4040c5:	and    eax,0xb8e118f3
  4040ca:	cmp    eax,0x4b87e487
  4040cf:	sbb    DWORD PTR [edi-0x785fc6c1],0xa95378f8
  4040d9:	out    0xff,eax
  4040db:	sub    eax,DWORD PTR [ecx]
  4040dd:	lds    edx,FWORD PTR [ebx+0x54b00a21]
  4040e3:	dec    ebx
  4040e4:	cmp    al,0x7c
  4040e6:	ja     0x404088
  4040e8:	retf   0x21da
  4040eb:	bound  esp,QWORD PTR [ecx]
  4040ed:	adc    al,0x3a
  4040ef:	cs (bad) 
  4040f1:	cli    
  4040f2:	push   ss
  4040f3:	push   0x83773f7d
  4040f8:	sub    al,0xbd
  4040fa:	pop    edi
  4040fb:	test   BYTE PTR [edi+eax*1-0x6c],bh
  4040ff:	loope  0x4040a8
  404101:	xor    esp,esp
  404103:	add    edx,DWORD PTR [edi-0xa]
  404106:	push   edx
  404107:	xchg   edi,eax
  404108:	push   ebx
  404109:	pop    ebp
  40410a:	jae    0x4040f5
  40410c:	adc    esp,DWORD PTR [ebp-0x68c96e11]
  404112:	cli    
  404113:	popf   
  404114:	outs   dx,DWORD PTR ds:[esi]
  404115:	inc    ecx
  404116:	xchg   ecx,eax
  404117:	(bad)  
  404118:	stc    
  404119:	aam    0x20
  40411b:	inc    edi
  40411c:	mov    eax,0x352cc366
  404121:	int3   
  404122:	shr    BYTE PTR [esi+0x5b],cl
  404125:	es mov dh,0x6
  404128:	xlat   BYTE PTR ds:[ebx]
  404129:	xor    DWORD PTR [ebx-0x5dc76ba7],ecx
  40412f:	push   esp
  404130:	sbb    DWORD PTR [edx],esp
  404132:	test   al,0x11
  404134:	jno    0x4040ca
  404136:	push   eax
  404137:	and    DWORD PTR [ecx-0x4676a492],eax
  40413d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413e:	stc    
  40413f:	dec    ebx
  404140:	xchg   BYTE PTR cs:[ebx],bl
  404143:	arpl   bx,cx
  404145:	and    ch,BYTE PTR [ebx+0x8d2ee0]
  40414b:	fwait
  40414c:	mov    eax,ds:0xebf3791d
  404151:	mov    edx,0xae2ae829
  404156:	mov    dl,0x19
  404158:	lods   al,BYTE PTR ds:[esi]
  404159:	add    al,0x1f
  40415b:	and    al,BYTE PTR [edx-0x5b0fbc71]
  404161:	aas    
  404162:	add    ebp,eax
  404164:	outs   dx,DWORD PTR ds:[esi]
  404165:	cmp    BYTE PTR [edi+0x42],dh
  404168:	in     eax,dx
  404169:	aam    0x77
  40416b:	icebp  
  40416c:	sti    
  40416d:	rcl    BYTE PTR [ebp-0x77a1684e],1
  404173:	push   DWORD PTR [edx]
  404175:	cmp    eax,0x249cc245
  40417a:	or     BYTE PTR [edi],0xc6
  40417d:	les    ecx,FWORD PTR [esp+esi*4+0x28011749]
  404184:	js     0x404106
  404186:	mov    ds,edx
  404188:	iret   
  404189:	jle    0x4041a6
  40418b:	cmp    edx,ebx
  40418d:	shr    ebx,1
  40418f:	es jge 0x4041b8
  404192:	mov    al,BYTE PTR [ecx-0x1ae08840]
  404198:	dec    ebx
  404199:	and    ecx,ecx
  40419b:	mov    esp,0xade54180
  4041a0:	rcr    DWORD PTR [esi+0x33],cl
  4041a3:	in     al,0xc4
  4041a5:	xchg   esi,eax
  4041a6:	int    0x8a
  4041a8:	int    0xb0
  4041aa:	frstor [edi-0x4]
  4041ad:	cmp    al,0x2a
  4041af:	mov    DWORD PTR [edi],ecx
  4041b1:	xor    eax,0x75d8c6d3
  4041b6:	push   ecx
  4041b7:	push   edx
  4041b8:	icebp  
  4041b9:	fwait
  4041ba:	scas   al,BYTE PTR es:[edi]
  4041bb:	push   ss
  4041bc:	ret    
  4041bd:	or     al,0xcd
  4041bf:	xchg   ecx,eax
  4041c0:	xchg   DWORD PTR [edi+0x3a],edx
  4041c3:	jns    0x404158
  4041c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c6:	sbb    BYTE PTR [eax],ch
  4041c8:	jle    0x404208
  4041ca:	mov    dl,0x66
  4041cc:	ins    DWORD PTR es:[edi],dx
  4041cd:	idiv   al
  4041cf:	fsubr  st,st(5)
  4041d1:	je     0x4041b5
  4041d3:	dec    eax
  4041d4:	push   ds
  4041d5:	pop    ebp
  4041d6:	(bad)  
  4041d7:	mov    dl,0x77
  4041d9:	xchg   edx,eax
  4041da:	dec    ecx
  4041db:	pop    ebx
  4041dc:	sub    dh,BYTE PTR [ebx]
  4041de:	test   al,0x50
  4041e0:	(bad)  
  4041e1:	leave  
  4041e2:	mov    DWORD PTR [ebp+0x12a6f271],esi
  4041e8:	fs ins BYTE PTR es:[edi],dx
  4041ea:	cli    
  4041eb:	popf   
  4041ec:	pop    esi
  4041ed:	sahf   
  4041ee:	hlt    
  4041ef:	add    DWORD PTR [ebx],edx
  4041f1:	jl     0x4041f0
  4041f3:	push   ds
  4041f4:	ret    0x869a
  4041f7:	mov    ah,0x4e
  4041f9:	adc    al,0x4a
  4041fb:	aam    0xda
  4041fd:	mov    DWORD PTR [edx+0x475827ce],ebx
  404203:	(bad)  
  404204:	jecxz  0x40425b
  404206:	sub    eax,0xb3493f25
  40420b:	js     0x40424d
  40420d:	scas   eax,DWORD PTR es:[edi]
  40420e:	or     bh,al
  404210:	daa    
  404211:	dec    edx
  404212:	xor    BYTE PTR [ebp-0x3a],bh
  404215:	sub    dl,BYTE PTR [ecx+esi*2]
  404218:	jbe    0x404222
  40421a:	mov    bl,0xb5
  40421c:	jg     0x404212
  40421e:	sub    ebx,DWORD PTR [esi-0x36791fde]
  404224:	imul   edi,DWORD PTR [eax+edi*1+0x63eda288],0xe1acf196
  40422f:	mov    cl,0x75
  404231:	call   0x5c93:0x6d38ecbd
  404238:	popf   
  404239:	inc    edi
  40423a:	fnstenv [edi+0x312b39f8]
  404240:	sti    
  404241:	or     al,0x48
  404243:	cwde   
  404244:	sub    DWORD PTR [ebp-0x41],ebx
  404247:	sub    BYTE PTR [ebx-0x35],0x73
  40424b:	mov    DWORD PTR [ebx-0x66],esi
  40424e:	test   bl,cl
  404250:	push   cs
  404251:	int    0x27
  404253:	fnstsw WORD PTR [esi+edi*8]
  404256:	bound  ebp,QWORD PTR [eax]
  404258:	in     eax,dx
  404259:	sbb    BYTE PTR [ebx-0x456119d1],ch
  40425f:	mov    eax,0x22533568
  404264:	add    al,0x26
  404266:	out    0x2,al
  404268:	daa    
  404269:	push   cs
  40426a:	lods   eax,DWORD PTR ds:[esi]
  40426b:	fmulp  st(2),st
  40426d:	ins    DWORD PTR es:[edi],dx
  40426e:	pop    es
  40426f:	inc    eax
  404270:	enter  0x79,0x68
  404274:	mov    eax,ds:0xc657ed9b
  404279:	outs   dx,BYTE PTR ds:[esi]
  40427a:	bound  esi,QWORD PTR [ebp-0xa72db97]
  404280:	jo     0x4042a7
  404282:	in     eax,0x7
  404284:	inc    edi
  404285:	adc    eax,0x2671c9a9
  40428a:	ins    BYTE PTR es:[edi],dx
  40428b:	inc    ebx
  40428c:	mov    dl,0x6f
  40428e:	cmp    eax,0x52270252
  404293:	and    ah,BYTE PTR [edx]
  404295:	xchg   esi,eax
  404296:	mov    edx,ecx
  404298:	pushf  
  404299:	xor    BYTE PTR cs:[ecx+edx*8-0xd8e8858],bh
  4042a1:	inc    edi
  4042a2:	enter  0xf333,0x52
  4042a6:	jbe    0x4042be
  4042a8:	fimul  WORD PTR [edi+0x3b]
  4042ab:	bound  esi,QWORD PTR gs:[eax]
  4042ae:	ins    BYTE PTR es:[edi],dx
  4042af:	add    bl,al
  4042b1:	xor    esp,edi
  4042b3:	adc    eax,0xa24ba0a6
  4042b8:	adc    dh,dl
  4042ba:	sar    bl,1
  4042bc:	inc    esi
  4042bd:	jmp    0x7ab9:0xd0c8dd25
  4042c4:	imul   edi,ecx,0x4f3ff070
  4042ca:	inc    esp
  4042cb:	add    BYTE PTR [esi-0x24c3158c],bl
  4042d1:	jg     0x4042a6
  4042d3:	mov    esp,0x8947c64c
  4042d8:	mov    edi,0xa38a658e
  4042dd:	xlat   BYTE PTR ds:[ebx]
  4042de:	xchg   edi,eax
  4042df:	div    DWORD PTR [ebx+0x6424e3c5]
  4042e5:	test   bh,0x7a
  4042e8:	push   ebp
  4042e9:	bound  ecx,QWORD PTR [eax*1+0x11fd562]
  4042f0:	ficom  WORD PTR [edi-0x3876de4a]
  4042f6:	lea    ecx,[esi-0x115e0aaf]
  4042fc:	adc    BYTE PTR [ecx+eax*8-0x44],bh
  404300:	cmp    DWORD PTR [eax+ecx*8+0x3666ed15],0x32
  404308:	sti    
  404309:	das    
  40430a:	arpl   WORD PTR [ebp+edx*4-0x22],si
  40430e:	int3   
  40430f:	jns    0x40436c
  404311:	iret   
  404312:	out    dx,eax
  404313:	mov    ds:0xce488278,al
  404318:	push   edx
  404319:	mov    ?,esi
  40431b:	add    al,0x90
  40431d:	pushf  
  40431e:	jmp    0x390b:0x8be23f1
  404325:	pop    ss
  404326:	test   al,0xe3
  404328:	out    dx,al
  404329:	xor    bh,BYTE PTR [ecx+0x3e82829b]
  40432f:	add    eax,DWORD PTR [eax]
  404331:	sar    dl,cl
  404333:	inc    ecx
  404334:	cwde   
  404335:	xor    al,0x9a
  404337:	loopne 0x404340
  404339:	mov    ds:0xfd5af705,al
  40433e:	cwde   
  40433f:	jb     0x4043a2
  404341:	xor    eax,0x1ffead05
  404346:	stc    
  404347:	fist   DWORD PTR [edx-0x61443661]
  40434d:	outs   dx,BYTE PTR ds:[esi]
  40434e:	popa   
  40434f:	cmc    
  404350:	(bad)  
  404351:	inc    ebp
  404352:	push   ecx
  404353:	dec    esp
  404354:	clc    
  404355:	mov    ds,WORD PTR ds:0xcb885842
  40435b:	pop    ebx
  40435c:	clc    
  40435d:	pusha  
  40435e:	sbb    edi,DWORD PTR [edx-0x62dc78bd]
  404364:	aad    0x69
  404366:	movaps xmm3,xmm3
  404369:	and    al,0x7a
  40436b:	jecxz  0x4043b5
  40436d:	mov    al,0xe2
  40436f:	mov    ds:0xd8ccec2c,eax
  404374:	pop    eax
  404375:	jb     0x4043f1
  404377:	xlat   BYTE PTR ds:[bx]
  404379:	les    eax,FWORD PTR ss:[ecx]
  40437c:	sub    dl,BYTE PTR [ecx+0x2aea1db4]
  404382:	pop    ss
  404383:	popa   
  404384:	and    bh,BYTE PTR [edi]
  404386:	ret    
  404387:	hlt    
  404388:	jae    0x4043d7
  40438a:	mov    ah,cl
  40438c:	inc    ecx
  40438d:	call   0xc5847b2b
  404392:	sbb    cl,bh
  404394:	das    
  404395:	add    al,0x6a
  404397:	push   cs
  404398:	sar    cl,0x70
  40439b:	imul   ebp,DWORD PTR [eax],0x1ebe012e
  4043a1:	sbb    ebp,DWORD PTR [ebx-0x16b9dccb]
  4043a7:	hlt    
  4043a8:	or     bl,al
  4043aa:	jp     0x4043dc
  4043ac:	in     al,dx
  4043ad:	aad    0xf1
  4043af:	push   cs
  4043b0:	aas    
  4043b1:	call   0x68e68623
  4043b6:	mov    ch,0x5a
  4043b8:	fmulp  st(6),st
  4043ba:	xlat   BYTE PTR ds:[ebx]
  4043bb:	jns    0x404343
  4043bd:	cs adc ah,cl
  4043c0:	xchg   ecx,eax
  4043c1:	mov    edx,0x4b6eef07
  4043c6:	xchg   esp,eax
  4043c7:	lahf   
  4043c8:	pop    ecx
  4043c9:	jno    0x4043e4
  4043cb:	mov    ebx,0x1ccec466
  4043d0:	sbb    ah,BYTE PTR [edx-0x63ec5a69]
  4043d6:	jge    0x404402
  4043d8:	mov    ch,0xf1
  4043da:	push   DWORD PTR [esi]
  4043dc:	adc    al,0xbc
  4043de:	hlt    
  4043df:	test   al,0x14
  4043e1:	(bad)  
  4043e2:	aad    0x5e
  4043e4:	xor    cl,ch
  4043e6:	cdq    
  4043e7:	inc    esi
  4043e8:	pop    ecx
  4043e9:	sbb    DWORD PTR [edi],0x64
  4043ec:	dec    edx
  4043ed:	jmp    0x40440e
  4043ef:	int    0xa3
  4043f1:	popf   
  4043f2:	(bad)  
  4043f3:	push   ebp
  4043f4:	sbb    BYTE PTR [eax+0x63],al
  4043f7:	ror    ebx,1
  4043f9:	repz int3 
  4043fb:	and    dl,ah
  4043fd:	mov    ecx,0x912c392d
  404402:	add    esi,eax
  404404:	adc    bl,BYTE PTR [esi]
  404406:	xchg   ebx,eax
  404407:	leave  
  404408:	icebp  
  404409:	loopne 0x4043f5
  40440b:	leave  
  40440c:	arpl   WORD PTR [esi-0x12],sp
  40440f:	nop
  404410:	into   
  404411:	out    dx,al
  404412:	add    ah,bh
  404414:	mov    al,ds:0x4e95c56d
  404419:	jne    0x404400
  40441b:	dec    eax
  40441c:	sub    eax,0x590df939
  404421:	and    BYTE PTR [edi],bh
  404423:	inc    esi
  404424:	push   0x62ab47b
  404429:	xchg   BYTE PTR [ecx],al
  40442b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40442c:	push   ebx
  40442d:	into   
  40442e:	mov    esi,0x35bca592
  404433:	clc    
  404434:	sub    BYTE PTR [esi-0x6],dh
  404437:	dec    esi
  404438:	adc    bl,0x5
  40443b:	pop    edx
  40443c:	push   ss
  40443d:	sahf   
  40443e:	pop    edx
  40443f:	mov    ?,WORD PTR [eax]
  404441:	jmp    0x404436
  404443:	push   cs
  404444:	mov    al,ds:0x948c418e
  404449:	inc    esp
  40444a:	test   eax,0xe9834c15
  40444f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404450:	pushf  
  404451:	into   
  404452:	mov    ecx,0x1a6ad8cb
  404457:	pop    edx
  404458:	call   0xc0dd0ab3
  40445d:	inc    esp
  40445e:	arpl   WORD PTR [ebp-0x19],dx
  404461:	mov    al,0x54
  404463:	addr16 out 0xb4,eax
  404466:	xchg   edi,eax
  404467:	mov    ds:0xa549a44d,al
  40446c:	jno    0x40445d
  40446e:	sub    BYTE PTR [ebx-0x80],0xf4
  404472:	or     cl,BYTE PTR [eax-0x37]
  404475:	ss mov ebp,0xf0f0c937
  40447b:	push   ecx
  40447c:	add    al,BYTE PTR [ebx+ecx*4-0x71f337]
  404483:	out    dx,eax
  404484:	mov    edx,0x7f80014
  404489:	pop    ds
  40448a:	mov    edx,0xb1afcb5a
  40448f:	mov    bh,0xd0
  404491:	sub    eax,DWORD PTR [edi]
  404493:	test   eax,0xc884399c
  404498:	mov    al,0x1d
  40449a:	test   BYTE PTR [ebx+0x1a],dh
  40449d:	clc    
  40449e:	mov    edi,esi
  4044a0:	push   ss
  4044a1:	into   
  4044a2:	nop
  4044a3:	mov    ah,0x31
  4044a5:	pop    eax
  4044a6:	mov    ah,0xaa
  4044a8:	test   al,0x83
  4044aa:	clc    
  4044ab:	popf   
  4044ac:	push   ebp
  4044ad:	sub    ah,BYTE PTR ds:0x66443c82
  4044b3:	mov    cl,0x6
  4044b5:	fcom   DWORD PTR [esi+0x747cc8b0]
  4044bb:	cdq    
  4044bc:	fdiv   DWORD PTR [edx]
  4044be:	add    eax,0x58a91409
  4044c3:	adc    cl,BYTE PTR [ecx-0x5ece9d49]
  4044c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ca:	ins    BYTE PTR es:[edi],dx
  4044cb:	dec    ecx
  4044cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044cd:	push   0x31
  4044cf:	push   0x7a5be33d
  4044d4:	cmp    ch,BYTE PTR [eax+0x13]
  4044d7:	out    dx,eax
  4044d8:	pop    ecx
  4044d9:	mov    edi,0x256126ae
  4044de:	scas   al,BYTE PTR es:[edi]
  4044df:	mov    ah,0xa6
  4044e1:	cld    
  4044e2:	std    
  4044e3:	aas    
  4044e4:	fs mov ebp,0x85ac136f
  4044ea:	or     al,0x5
  4044ec:	test   eax,esi
  4044ee:	cdq    
  4044ef:	or     ch,BYTE PTR [ebp+ecx*2+0x75fae9de]
  4044f6:	sbb    al,0xc5
  4044f8:	mov    edi,0xabb0c0dd
  4044fd:	clc    
  4044fe:	mov    dl,BYTE PTR [eax+0x1e]
  404501:	cmp    cl,BYTE PTR [esi+0x17fc770a]
  404507:	mov    al,ds:0xfdb3f9fa
  40450c:	icebp  
  40450d:	dec    esp
  40450e:	jno    0x404577
  404510:	shl    BYTE PTR [edi-0x59],cl
  404513:	cs cli 
  404515:	sbb    DWORD PTR [ecx],esi
  404517:	std    
  404518:	cmp    DWORD PTR [edx],0x1
  40451b:	test   eax,0x65edec8c
  404520:	rcl    DWORD PTR [esi-0x17],0xfc
  404524:	mov    ebx,0xe0cbf2ac
  404529:	cld    
  40452a:	int    0xf8
  40452c:	mov    cl,0x3f
  40452e:	jl     0x404503
  404530:	dec    edi
  404531:	lods   al,BYTE PTR ds:[esi]
  404532:	out    0x91,eax
  404534:	cmp    esp,DWORD PTR [ebx]
  404536:	push   cs
  404537:	and    al,0x70
  404539:	je     0x4045b6
  40453b:	in     al,dx
  40453c:	in     eax,0xd0
  40453e:	add    ebp,DWORD PTR [esi]
  404540:	scas   al,BYTE PTR es:[edi]
  404541:	ss jne 0x4044f5
  404544:	arpl   WORD PTR [edi+0x8a69090],ax
  40454a:	js     0x404577
  40454c:	sbb    al,0xd1
  40454e:	sub    DWORD PTR [eax+0x275a3801],esi
  404554:	mov    ch,0x60
  404556:	xor    al,0xdb
  404558:	ja     0x404521
  40455a:	pop    edi
  40455b:	mul    BYTE PTR [edx]
  40455d:	ror    DWORD PTR [ebx-0x7d907054],0xf7
  404564:	push   ecx
  404565:	loop   0x404589
  404567:	inc    esi
  404568:	push   cs
  404569:	out    0xcc,eax
  40456b:	jge    0x40455e
  40456d:	push   cs
  40456e:	retf   
  40456f:	sbb    al,0x56
  404571:	ret    0x52fe
  404574:	int    0xff
  404576:	and    al,0x60
  404578:	xor    cl,BYTE PTR [ebx+esi*2+0x1b718a9f]
  40457f:	adc    BYTE PTR [ecx+ebx*2],ah
  404582:	cmp    dh,al
  404584:	jbe    0x404512
  404586:	add    eax,0x78262979
  40458b:	(bad)  
  40458c:	ja     0x4045ca
  40458e:	and    esp,DWORD PTR [esi]
  404590:	sub    eax,DWORD PTR ss:[eax-0x44]
  404594:	test   esi,esp
  404596:	daa    
  404597:	dec    edx
  404598:	mov    ch,0xa5
  40459a:	xor    DWORD PTR [esi+0x6dc2ece9],0xfffffffe
  4045a1:	cmp    ebx,ebx
  4045a3:	mov    WORD PTR [ecx],es
  4045a5:	push   esi
  4045a6:	imul   edi,DWORD PTR [esi+0x5cde8b0a],0x3
  4045ad:	lods   eax,DWORD PTR ds:[esi]
  4045ae:	cmp    edx,eax
  4045b0:	(bad)  
  4045b1:	out    dx,eax
  4045b2:	add    dl,BYTE PTR [edi+eax*2]
  4045b5:	loop   0x404591
  4045b7:	dec    ecx
  4045b8:	test   eax,0xde2b6153
  4045bd:	sar    BYTE PTR [ecx],cl
  4045bf:	int    0xb5
  4045c1:	in     eax,0x4e
  4045c3:	xor    ebx,DWORD PTR [ecx-0x13]
  4045c6:	cli    
  4045c7:	imul   esp,DWORD PTR [ecx],0xffffffa2
  4045ca:	test   eax,0xa5ec2fc0
  4045cf:	enter  0x836c,0x79
  4045d3:	jp     0x404557
  4045d5:	push   edx
  4045d6:	daa    
  4045d7:	and    ebx,DWORD PTR [edi]
  4045d9:	cmp    al,0x41
  4045db:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4045dd:	dec    ebx
  4045de:	sbb    BYTE PTR [esi],0x2e
  4045e1:	mov    eax,0xb3b8ef9d
  4045e6:	mov    ebx,0xaf15d5e8
  4045eb:	test   al,0xba
  4045ed:	dec    esi
  4045ee:	sets   BYTE PTR [ebx-0x34fdc3e]
  4045f5:	or     ah,bl
  4045f7:	and    BYTE PTR [edx],bl
  4045f9:	dec    edx
  4045fa:	test   DWORD PTR [ecx],esp
  4045fc:	mov    ?,WORD PTR [ebp+0x26f7b2c8]
  404602:	add    bl,BYTE PTR [ecx]
  404604:	push   esp
  404605:	out    0x3e,eax
  404607:	mov    ebp,0xa021cee
  40460c:	scas   eax,DWORD PTR es:[edi]
  40460d:	js     0x40463c
  40460f:	sbb    ch,BYTE PTR es:[eax+eiz*8]
  404613:	mov    dh,0x56
  404615:	inc    ebp
  404616:	loopne 0x404670
  404618:	pop    eax
  404619:	stos   DWORD PTR es:[edi],eax
  40461a:	mul    BYTE PTR [eax-0x456db84]
  404620:	imul   ebx,ecx,0x6994ba1e
  404626:	dec    edi
  404627:	gs ret 0xada1
  40462b:	cld    
  40462c:	mov    ebx,0x6445f923
  404631:	xor    al,BYTE PTR [eax+0x124e6117]
  404637:	jne    0x404642
  404639:	dec    eax
  40463a:	mov    edi,0x9505cfe7
  40463f:	ins    DWORD PTR es:[edi],dx
  404640:	dec    edi
  404641:	adc    edx,0xffffffbc
  404644:	adc    eax,0xfe83c880
  404649:	xchg   ecx,eax
  40464a:	mov    ch,0xed
  40464c:	bound  ebp,QWORD PTR [eax+0x5d]
  40464f:	arpl   si,cx
  404651:	loop   0x404665
  404653:	mov    bl,0x80
  404655:	fadd   QWORD PTR [edi+0x4b6aa4e2]
  40465b:	shl    BYTE PTR [esi],0x24
  40465e:	in     al,0xc8
  404660:	bound  edx,QWORD PTR [edx+0x66]
  404663:	out    dx,eax
  404664:	in     al,dx
  404665:	dec    ecx
  404666:	gs xchg ecx,eax
  404668:	cmp    al,0x30
  40466a:	inc    esi
  40466b:	inc    ecx
  40466c:	ror    BYTE PTR [esp+eax*2+0x4f],cl
  404670:	ss mov ecx,0x89172739
  404677:	inc    ebp
  404678:	pop    edx
  404679:	js     0x40464e
  40467b:	out    dx,eax
  40467c:	add    bl,BYTE PTR [edx]
  40467e:	cmp    ch,BYTE PTR [ebx+0x5000c2cd]
  404684:	mov    cl,0x16
  404686:	adc    esp,DWORD PTR [esi]
  404688:	stos   DWORD PTR es:[edi],eax
  404689:	push   edx
  40468a:	dec    esi
  40468b:	das    
  40468c:	in     eax,dx
  40468d:	adc    bl,0xbd
  404690:	adc    eax,0xdbd1af2b
  404695:	mov    al,ds:0xe4714016
  40469a:	jmp    0x4046c3
  40469c:	imul   ecx,DWORD PTR ds:0x112c9d8f,0x5c
  4046a3:	pop    eax
  4046a4:	cdq    
  4046a5:	js     0x40467c
  4046a7:	mov    WORD PTR [ebx],gs
  4046a9:	frstor [edi+0x14]
  4046ac:	adc    edi,ebp
  4046ae:	push   esi
  4046af:	jae    0x40463c
  4046b1:	jl     0x4046dc
  4046b3:	ss lahf 
  4046b5:	mov    cl,0x45
  4046b7:	xchg   edi,eax
  4046b8:	mov    ?,WORD PTR [edi]
  4046ba:	stc    
  4046bb:	mov    esi,DWORD PTR [esi+ebp*2+0x53071d79]
  4046c2:	push   ss
  4046c3:	cmp    BYTE PTR [edi],bh
  4046c5:	rol    esp,1
  4046c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c8:	pop    eax
  4046c9:	cmpxchg dl,ch
  4046cc:	xchg   esi,eax
  4046cd:	fnstcw WORD PTR [ebp-0x3fc294e5]
  4046d3:	aaa    
  4046d4:	dec    esi
  4046d5:	out    dx,eax
  4046d6:	push   edx
  4046d7:	imul   esp,DWORD PTR ds:0x454a6d9b,0xffffff86
  4046de:	rcr    ecx,1
  4046e0:	std    
  4046e1:	in     al,dx
  4046e2:	gs jmp 0x4046c6
  4046e5:	shr    DWORD PTR [edi-0x4a],0xc
  4046e9:	outs   dx,BYTE PTR ds:[esi]
  4046ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046eb:	or     eax,0x9f640555
  4046f0:	add    edi,eax
  4046f2:	or     cl,BYTE PTR [edi]
  4046f4:	dec    ebp
  4046f5:	inc    ebx
  4046f6:	addr16 stc 
  4046f8:	mov    eax,0x869411b9
  4046fd:	inc    ebx
  4046fe:	lods   al,BYTE PTR ds:[esi]
  4046ff:	pop    ebx
  404700:	(bad)  
  404701:	les    edx,FWORD PTR [ecx]
  404703:	inc    ebx
  404704:	(bad)  ds:0x456a495f
  40470a:	push   edx
  40470b:	pushf  
  40470c:	in     al,0x8
  40470e:	repnz sbb BYTE PTR [edx],al
  404711:	dec    eax
  404712:	pop    ebx
  404713:	sub    eax,0x8fbd6724
  404718:	popa   
  404719:	leave  
  40471a:	pushf  
  40471b:	or     al,BYTE PTR [ebx-0x6afd9236]
  404721:	and    DWORD PTR [esi],edi
  404723:	cvtdq2ps xmm2,XMMWORD PTR [ecx]
  404726:	add    al,0x9c
  404728:	loope  0x40470d
  40472a:	cmp    al,0xa8
  40472c:	sahf   
  40472d:	imul   esp,DWORD PTR [esi-0x3c],0x23
  404731:	fs test al,0x5a
  404734:	(bad)  
  404735:	xor    al,0x41
  404737:	lods   eax,DWORD PTR ds:[esi]
  404738:	js     0x404712
  40473a:	sahf   
  40473b:	dec    eax
  40473c:	call   0x884b5f2e
  404741:	inc    DWORD PTR [ecx+0x69052a49]
  404747:	lock or al,0x60
  40474a:	mov    al,ds:0x485462b7
  40474f:	or     eax,DWORD PTR [eax]
  404751:	cmp    al,0xb
  404753:	mov    ebp,DWORD PTR [ebp-0x2fa45970]
  404759:	ins    BYTE PTR es:[edi],dx
  40475a:	adc    al,BYTE PTR [esi+0x1]
  40475d:	pop    ds
  40475e:	loop   0x404790
  404760:	xchg   esi,eax
  404761:	push   ds
  404762:	cdq    
  404763:	inc    ecx
  404764:	dec    edi
  404765:	test   BYTE PTR [ebp+0x42],dl
  404768:	push   ebx
  404769:	sbb    eax,0x8dd5d9dc
  40476e:	lahf   
  40476f:	in     eax,dx
  404770:	call   0xc4d9:0xc4f35d4c
  404777:	jnp    0x404755
  404779:	sub    DWORD PTR [ecx+0x7e487ec5],edi
  40477f:	fwait
  404780:	pop    ebp
  404781:	retf   
  404782:	in     eax,0x59
  404784:	sub    eax,0xee275aca
  404789:	mov    al,ds:0x863bac41
  40478e:	call   0x9a3f:0x295d59bb
  404795:	popf   
  404796:	scas   al,BYTE PTR es:[edi]
  404797:	mov    al,ds:0x59764337
  40479c:	stos   DWORD PTR es:[edi],eax
  40479d:	imul   ecx,DWORD PTR [ebx+edx*1+0x11],0xffffffab
  4047a2:	scas   eax,DWORD PTR es:[edi]
  4047a3:	pop    esi
  4047a4:	retf   
  4047a5:	ror    BYTE PTR [ebp-0x3e],0x4a
  4047a9:	sar    BYTE PTR [ebp+0x4c4fe316],1
  4047af:	mov    ds:0xe65c3bc7,eax
  4047b4:	jns    0x40482c
  4047b6:	gs je  0x404766
  4047b9:	shl    BYTE PTR [edi+0xa],1
  4047bc:	mov    ?,WORD PTR [ebx]
  4047be:	and    esi,DWORD PTR [edi+edi*4-0x3d]
  4047c2:	xchg   edx,eax
  4047c3:	and    al,BYTE PTR [ecx-0x3c]
  4047c6:	push   ss
  4047c7:	jl     0x40477c
  4047c9:	adc    al,0x8f
  4047cb:	add    BYTE PTR [ebx+eiz*2+0x10c031fe],0x82
  4047d3:	je     0x40477d
  4047d5:	inc    eax
  4047d6:	cmp    eax,0xb020d1cd
  4047db:	popa   
  4047dc:	ss call 0x2dc0:0x6a86235c
  4047e4:	std    
  4047e5:	(bad)  
  4047e6:	mov    al,BYTE PTR [esi+0x3]
  4047e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ea:	pop    ebx
  4047eb:	mov    ebx,0x5e92a76
  4047f0:	ins    DWORD PTR es:[edi],dx
  4047f1:	imul   esi,DWORD PTR fs:[ebx],0xdd1fd023
  4047f8:	clts   
  4047fa:	sti    
  4047fb:	inc    ebx
  4047fc:	sub    BYTE PTR [ecx+0x51],dl
  4047ff:	or     cl,cl
  404801:	jmp    0xd5c7728
  404806:	sub    BYTE PTR [ecx+0x32],cl
  404809:	retf   
  40480a:	xchg   DWORD PTR [ebp+0x2d],ebp
  40480d:	std    
  40480e:	fwait
  40480f:	jns    0x404801
  404811:	inc    edx
  404812:	loope  0x4047e4
  404814:	mov    WORD PTR [ebx+0x63f43f8b],gs
  40481a:	out    0x2c,eax
  40481c:	das    
  40481d:	js     0x404802
  40481f:	push   ebx
  404820:	adc    BYTE PTR [edx+ebx*2+0x30],0x74
  404825:	jae    0x4047cf
  404827:	pushf  
  404828:	inc    edx
  404829:	and    ebx,DWORD PTR [edx-0x16]
  40482c:	xchg   eax,ecx
  40482e:	inc    esi
  40482f:	mov    ch,0xca
  404831:	not    DWORD PTR [edi-0x56851c39]
  404837:	dec    ebp
  404838:	(bad)  
  404839:	jbe    0x404847
  40483b:	cld    
  40483c:	ins    DWORD PTR es:[edi],dx
  40483d:	push   0x9cf1c6a4
  404842:	mov    BYTE PTR [esi+0x7e65a780],cl
  404848:	mov    ?,WORD PTR [esi]
  40484a:	popf   
  40484b:	scas   al,BYTE PTR es:[edi]
  40484c:	ds test eax,0xbff75b94
  404852:	sub    esp,0x27
  404855:	idiv   DWORD PTR [ebp+0x3a]
  404858:	mov    dh,0x60
  40485a:	cmp    BYTE PTR [ebp+0xc],bl
  40485d:	sbb    BYTE PTR [esi+0x6c],ah
  404860:	stc    
  404861:	jmp    0xed84:0x3475521b
  404868:	sub    edi,edi
  40486a:	addr16 jb 0x4048b0
  40486d:	mov    dh,0x16
  40486f:	mov    bl,0xa9
  404871:	pop    eax
  404872:	nop
  404873:	data16 in al,0x78
  404876:	add    BYTE PTR [ebx+0x65],dl
  404879:	and    eax,0x20cbccaa
  40487e:	sti    
  40487f:	sub    DWORD PTR [ebp-0x4d],0xffffffd2
  404883:	inc    eax
  404884:	xor    esp,DWORD PTR [ebx+0xe]
  404887:	(bad)  
  404888:	sub    DWORD PTR [esi],0x3ff7a589
  40488e:	dec    ebp
  40488f:	sub    esi,DWORD PTR [esi+0x2e537b1f]
  404895:	jl     0x40489e
  404897:	mov    al,ds:0x18a493aa
  40489c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40489d:	jmp    0xbcc9:0xd9a4662f
  4048a4:	pop    es
  4048a5:	es mov bh,0x9e
  4048a8:	xchg   ecx,eax
  4048a9:	sub    eax,0x76ba6f91
  4048ae:	(bad)  
  4048af:	loop   0x4048a8
  4048b1:	adc    DWORD PTR [edi+0x56],edi
  4048b4:	sbb    DWORD PTR [edi],esi
  4048b6:	pop    ss
  4048b7:	sahf   
  4048b8:	jle    0x404850
  4048ba:	jmp    0x99b9:0x83c8eeb2
  4048c1:	mov    dh,0x1e
  4048c3:	jno    0x4048b3
  4048c5:	retf   0x31be
  4048c8:	dec    esp
  4048c9:	das    
  4048ca:	mov    ss,ebx
  4048cc:	add    ebp,ecx
  4048ce:	es jl  0x40487c
  4048d1:	or     ch,BYTE PTR [eax+0x12]
  4048d4:	jnp    0x40491f
  4048d6:	cdq    
  4048d7:	mov    bh,0x25
  4048d9:	jp     0x404904
  4048db:	jb     0x4048df
  4048dd:	jo     0x4048b9
  4048df:	cdq    
  4048e0:	mov    eax,0x894f44b8
  4048e5:	ret    0x69de
  4048e8:	ins    DWORD PTR es:[edi],dx
  4048e9:	adc    al,0x40
  4048eb:	jb     0x4048a7
  4048ed:	pop    ss
  4048ee:	pop    ecx
  4048ef:	or     bl,BYTE PTR [ecx]
  4048f1:	jl     0x4048dd
  4048f3:	and    eax,0xc07ba85
  4048f8:	dec    eax
  4048f9:	mov    DWORD PTR [esi+esi*2],esi
  4048fc:	retf   0xc426
  4048ff:	cmp    ah,BYTE PTR [edi+0xf]
  404902:	aad    0xca
  404904:	or     BYTE PTR [ebx],dl
  404906:	or     ecx,eax
  404908:	and    BYTE PTR [edi+0x6],0x9a
  40490c:	mov    cl,0xda
  40490e:	fwait
  40490f:	jbe    0x40498c
  404911:	mov    eax,ds:0xef1d614c
  404916:	iret   
  404917:	mov    BYTE PTR [esi],0x57
  40491a:	mov    al,ds:0x654f9645
  40491f:	or     eax,0xdc986dc9
  404924:	cld    
  404925:	sbb    ebp,DWORD PTR [edx-0x29b22606]
  40492b:	jmp    0x4cf0:0x467dbb57
  404932:	out    0xa0,eax
  404934:	dec    edi
  404935:	mov    ch,0x41
  404937:	xchg   esi,eax
  404938:	adc    eax,0x0
  40493b:	stos   BYTE PTR es:[edi],al
  40493c:	jmp    0x4049b8
  40493e:	cmp    eax,0xda6d0cc4
  404943:	and    ah,BYTE PTR [ecx+edx*8-0x1deefba]
  40494a:	or     al,0x9f
  40494c:	ins    BYTE PTR es:[edi],dx
  40494d:	and    ebx,DWORD PTR ds:0xdb4dfdeb
  404953:	retf   0xca2
  404956:	scas   al,BYTE PTR es:[edi]
  404957:	mov    esp,0x9c0b4e54
  40495c:	pop    ebp
  40495d:	in     al,0xb8
  40495f:	iret   
  404960:	pop    ss
  404961:	outs   dx,DWORD PTR ds:[esi]
  404962:	cmp    eax,0xf7cd4391
  404967:	jno    0x404986
  404969:	jmp    0x55e973e4
  40496e:	mov    dh,0x4a
  404970:	loopne 0x404902
  404972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404973:	push   ds
  404974:	jle    0x4049a7
  404976:	adc    bl,BYTE PTR [ebp+0x1a1e7e5a]
  40497c:	push   ds
  40497d:	add    DWORD PTR [ebx+ecx*2+0x62518604],0xffffffd6
  404985:	mov    bh,0x9e
  404987:	stos   BYTE PTR es:[edi],al
  404988:	imul   edi,DWORD PTR [ebx],0xffffff92
  40498b:	out    0x85,al
  40498d:	cmp    al,ch
  40498f:	mov    ebx,0x1a154c05
  404994:	xchg   BYTE PTR [ecx-0x2c18557],cl
  40499a:	mov    BYTE PTR [edi],0xee
  40499d:	inc    esi
  40499e:	in     eax,dx
  40499f:	shr    BYTE PTR [ecx-0x53fb26f1],1
  4049a5:	loop   0x4049ff
  4049a7:	daa    
  4049a8:	adc    eax,0xe7111d71
  4049ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049ae:	adc    al,0xd6
  4049b0:	imul   ebx,DWORD PTR [ebx],0x2beae277
  4049b6:	dec    esi
  4049b7:	mov    esi,eax
  4049b9:	scas   al,BYTE PTR es:[edi]
  4049ba:	cwde   
  4049bb:	call   0x48d8:0xa050015e
  4049c2:	into   
  4049c3:	pop    ss
  4049c4:	daa    
  4049c5:	jmp    0x404a45
  4049c7:	outs   dx,DWORD PTR ds:[esi]
  4049c8:	fsubr  st(2),st
  4049ca:	mov    ds:0xca22bfba,eax
  4049cf:	int3   
  4049d0:	xchg   esi,eax
  4049d1:	cs push edx
  4049d3:	adc    al,ah
  4049d5:	push   0xfffffffa
  4049d7:	jecxz  0x404982
  4049d9:	cmp    BYTE PTR [edx+edi*8],0x71
  4049dd:	add    eax,DWORD PTR [ebp+0x58]
  4049e0:	xor    DWORD PTR [esi+0x29],esi
  4049e3:	outs   dx,DWORD PTR ds:[esi]
  4049e4:	xchg   esi,eax
  4049e5:	out    0x3f,al
  4049e7:	xor    dh,BYTE PTR [ebx+0xe]
  4049ea:	arpl   dx,ax
  4049ec:	outs   dx,DWORD PTR ds:[esi]
  4049ed:	mov    ds:0xa18e8fcf,eax
  4049f2:	or     al,0x82
  4049f4:	(bad)  
  4049f5:	shr    DWORD PTR ds:0x26ad6f8,0x33
  4049fc:	call   0xd5c38e99
  404a01:	outs   dx,DWORD PTR ds:[esi]
  404a02:	pop    edx
  404a03:	cwde   
  404a04:	dec    edx
  404a05:	mov    dl,0xff
  404a07:	adc    eax,0xc4eaa94d
  404a0c:	add    eax,DWORD PTR [esi]
  404a0e:	stos   BYTE PTR es:[edi],al
  404a0f:	cmovnp edi,ebx
  404a12:	jg     0x4049c1
  404a14:	sub    ecx,DWORD PTR [edi-0x3259a912]
  404a1a:	jge    0x4049ab
  404a1c:	retf   
  404a1d:	rol    ah,1
  404a1f:	mov    BYTE PTR [edi+0x2b],al
  404a22:	iret   
  404a23:	xor    al,0xa1
  404a25:	outs   dx,BYTE PTR ds:[esi]
  404a26:	lods   al,BYTE PTR ds:[esi]
  404a27:	sbb    dh,dh
  404a29:	loopne 0x404a38
  404a2b:	cmp    al,0x89
  404a2d:	mov    al,0xe0
  404a2f:	js     0x4049d6
  404a31:	xchg   esi,eax
  404a32:	sub    bh,BYTE PTR [esi+ecx*1+0x1a]
  404a36:	add    BYTE PTR [eax],0xde
  404a39:	leave  
  404a3a:	mov    cl,0xdf
  404a3c:	inc    ebx
  404a3d:	adc    DWORD PTR es:[ebp-0x5ec766ca],ebx
  404a44:	mov    edx,0xe38a26cb
  404a49:	icebp  
  404a4a:	loope  0x404a0b
  404a4c:	and    eax,0x16aca239
  404a51:	pop    ss
  404a52:	jne    0x404a7e
  404a54:	or     ch,BYTE PTR [ebp-0x633316f9]
  404a5a:	(bad)  [eax+0x4a2e0fa2]
  404a60:	jp     0x404a08
  404a62:	retf   0xbe76
  404a65:	adc    eax,0x963e731a
  404a6a:	clc    
  404a6b:	or     BYTE PTR [eax+0x2d4c811e],cl
  404a71:	(bad)  
  404a72:	mov    ds:0xa35432e0,al
  404a77:	or     al,0x55
  404a79:	rcr    DWORD PTR ss:[ebx],cl
  404a7c:	inc    edi
  404a7d:	es aaa 
  404a7f:	daa    
  404a80:	clc    
  404a81:	test   DWORD PTR [edi-0x65836474],0x1ce81af5
  404a8b:	loope  0x404a17
  404a8d:	mov    bh,0x53
  404a8f:	push   ebp
  404a90:	mov    DWORD PTR [ebp-0x3d],0x1e361b9c
  404a97:	jns    0x404aaa
  404a99:	das    
  404a9a:	jp     0x404a22
  404a9c:	fnstenv [edi+0x78]
  404a9f:	cdq    
  404aa0:	stc    
  404aa1:	dec    edx
  404aa2:	mov    al,ds:0xc8d5374
  404aa7:	xor    eax,0x98063936
  404aac:	lds    edx,FWORD PTR [edx-0x77acab04]
  404ab2:	in     al,dx
  404ab3:	repz sub edi,DWORD PTR [ebp+0x650c0c39]
  404aba:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404abc:	add    dl,BYTE PTR [esi+0x77]
  404abf:	adc    BYTE PTR [esi-0x3b],0x9f
  404ac3:	adc    bl,BYTE PTR [ebx+0x30]
  404ac6:	push   edx
  404ac7:	loopne 0x404aea
  404ac9:	hlt    
  404aca:	add    al,0x69
  404acc:	repz popa 
  404ace:	ss pop esi
  404ad0:	cmp    BYTE PTR [ebx-0x6e3c1d32],0x15
  404ad7:	mov    esp,0x1cabdfbc
  404adc:	ds stos DWORD PTR es:[edi],eax
  404ade:	add    bl,dh
  404ae0:	jg     0x404a70
  404ae2:	mov    ebx,0xd3f9d3ce
  404ae7:	rcl    DWORD PTR [esi],cl
  404ae9:	shl    BYTE PTR [edx-0x2831334],cl
  404aef:	ds jg  0x404a8f
  404af2:	cmp    al,0xa8
  404af4:	pushf  
  404af5:	or     BYTE PTR [edx],0xf5
  404af8:	jl     0x404b66
  404afa:	cli    
  404afb:	xchg   ebp,eax
  404afc:	sub    esp,DWORD PTR [ebx+ecx*4]
  404aff:	in     eax,0x22
  404b01:	add    ah,BYTE PTR [ebx]
  404b03:	outs   dx,BYTE PTR ds:[esi]
  404b04:	sbb    bl,0x94
  404b07:	cmp    eax,0x2e4b59a8
  404b0c:	xchg   esp,eax
  404b0d:	jg     0x404aba
  404b0f:	loope  0x404b43
  404b11:	push   ecx
  404b12:	jmp    0x9e2e:0x654a4d57
  404b19:	jne    0x404ac8
  404b1b:	adc    BYTE PTR [edi-0x34],dl
  404b1e:	xor    al,0xd0
  404b20:	mov    esi,0x2ecf6ac4
  404b25:	inc    edi
  404b26:	add    BYTE PTR [eax+0x55],bl
  404b29:	scas   al,BYTE PTR es:[edi]
  404b2a:	push   0x4615a4bf
  404b2f:	dec    edx
  404b30:	mov    edx,0x94ee06cc
  404b35:	call   0x6e1839dc
  404b3a:	mov    eax,ds:0x3729d9db
  404b3f:	xchg   esp,eax
  404b40:	jne    0x404b3a
  404b42:	aaa    
  404b43:	outs   dx,BYTE PTR ds:[esi]
  404b44:	mov    cl,0x26
  404b46:	fbld   TBYTE PTR [edx+eax*4]
  404b49:	jl     0x404b2d
  404b4b:	popf   
  404b4c:	sub    BYTE PTR [edx],dl
  404b4e:	sub    al,0x4f
  404b50:	xchg   BYTE PTR [edx],al
  404b52:	fcmovne st,st(4)
  404b54:	xor    BYTE PTR [ebx-0x5a202907],al
  404b5a:	inc    ecx
  404b5b:	jmp    DWORD PTR [ebp+0x446a99c1]
  404b61:	(bad)  
  404b62:	repnz arpl WORD PTR [edi],di
  404b65:	js     0x404b7d
  404b67:	jecxz  0x404bb6
  404b69:	cwde   
  404b6a:	sti    
  404b6b:	mov    dl,dl
  404b6d:	jmp    0x404b48
  404b6f:	(bad)  [eax]
  404b71:	xchg   DWORD PTR [edi-0x5f],ebp
  404b74:	add    al,0x93
  404b76:	imul   ecx,DWORD PTR [ecx+eax*4-0x1d],0x36
  404b7b:	xchg   BYTE PTR [edi-0x41d10d45],dh
  404b81:	repnz sub BYTE PTR [edi-0x27],dl
  404b85:	push   esi
  404b86:	in     al,dx
  404b87:	add    esp,DWORD PTR [edx]
  404b89:	stos   BYTE PTR es:[edi],al
  404b8a:	aad    0xc4
  404b8c:	push   0x96641826
  404b91:	push   eax
  404b92:	les    ecx,FWORD PTR [edi+0x4ba3878e]
  404b98:	lods   al,BYTE PTR ds:[esi]
  404b99:	into   
  404b9a:	dec    esi
  404b9b:	add    BYTE PTR [ecx-0x345045c3],al
  404ba1:	pop    ds
  404ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ba3:	(bad)  
  404ba4:	jnp    0x404c15
  404ba6:	dec    ebp
  404ba7:	pop    es
  404ba8:	out    0xd1,al
  404baa:	mov    edi,0xe65092b7
  404baf:	inc    edi
  404bb0:	repz repz mov bl,BYTE PTR [esi-0x471aba8c]
  404bb8:	fdiv   st(0),st
  404bba:	or     eax,0x806e303
  404bbf:	out    dx,al
  404bc0:	jge    0x404b46
  404bc2:	or     ecx,DWORD PTR [ecx-0x4f]
  404bc5:	mov    bl,0x42
  404bc7:	cmp    BYTE PTR [esi+0x236bce6f],0x0
  404bce:	add    cl,ah
  404bd0:	popa   
  404bd1:	test   BYTE PTR [edi+0x2466aa8f],dl
  404bd7:	lods   eax,DWORD PTR ds:[esi]
  404bd8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bda:	xchg   DWORD PTR [esi+0x6a67a96],eax
  404be0:	sub    ebp,DWORD PTR [eax+0x1efa8e64]
  404be6:	leave  
  404be7:	lods   al,BYTE PTR ds:[esi]
  404be8:	push   es
  404be9:	xchg   edx,eax
  404bea:	adc    BYTE PTR [ecx+0x16b3c6d],cl
  404bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf1:	fs jle 0x404c73
  404bf4:	lods   eax,DWORD PTR ds:[esi]
  404bf5:	arpl   WORD PTR [edi-0x3c7c6e05],si
  404bfb:	outs   dx,DWORD PTR ds:[esi]
  404bfc:	jne    0x404c74
  404bfe:	pop    eax
  404bff:	(bad)  
  404c01:	aas    
  404c02:	pop    ss
  404c03:	arpl   bp,di
  404c05:	retf   0x3fec
  404c08:	cmp    ch,bh
  404c0a:	bound  esp,QWORD PTR [esi]
  404c0c:	mov    cl,0xf0
  404c0e:	call   0x134e1371
  404c13:	fiadd  DWORD PTR [eax]
  404c15:	or     dh,BYTE PTR [eax+edx*2]
  404c18:	test   DWORD PTR ss:[edx-0x12],edx
  404c1c:	push   esi
  404c1d:	xor    edi,DWORD PTR [edx+ebp*4+0x7c363b5c]
  404c24:	cmp    cl,BYTE PTR [eax+eax*8+0x6f84971c]
  404c2b:	in     al,dx
  404c2c:	imul   WORD PTR [ecx]
  404c2f:	sub    DWORD PTR [eax-0x42fe23b7],ecx
  404c35:	dec    eax
  404c36:	aad    0xef
  404c38:	xor    al,0x50
  404c3a:	dec    ecx
  404c3b:	lahf   
  404c3c:	in     al,0x4d
  404c3e:	fucomp st(7)
  404c40:	dec    ebx
  404c41:	push   cs
  404c42:	cmp    ecx,DWORD PTR [ebx-0x41]
  404c45:	fmul   QWORD PTR [edx+eax*2-0x3b]
  404c49:	push   0xffffffa1
  404c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c4c:	jmp    0x637f6731
  404c51:	mov    bh,0xc7
  404c53:	shl    BYTE PTR [edx-0x46],cl
  404c56:	cmp    BYTE PTR [esi+ebx*2+0x15533de0],ch
  404c5d:	pop    edi
  404c5e:	cmc    
  404c5f:	lds    eax,FWORD PTR [ebp-0x479c74fb]
  404c65:	dec    ebx
  404c66:	pusha  
  404c67:	sbb    al,0xc2
  404c69:	push   ebx
  404c6a:	in     al,dx
  404c6b:	call   0x30e1:0xe98ef7
  404c72:	inc    edx
  404c73:	data16 mov BYTE PTR [ebx-0x36],0x32
  404c78:	fiadd  WORD PTR [ebx]
  404c7a:	cs ja  0x404ce9
  404c7d:	push   ss
  404c7e:	push   esp
  404c7f:	and    eax,0x7babbdce
  404c84:	cs mov dl,0x15
  404c87:	push   ecx
  404c88:	popa   
  404c89:	push   esi
  404c8a:	mov    ecx,0xe0c9e0ba
  404c8f:	ret    
  404c90:	xchg   edx,edi
  404c92:	iret   
  404c93:	ret    
  404c94:	or     al,0xf9
  404c96:	mov    esp,ebx
  404c98:	xchg   ebp,eax
  404c99:	pop    ebp
  404c9a:	or     BYTE PTR [eax+0x50],ah
  404c9d:	ret    
  404c9e:	mov    ebp,0xa2afc50f
  404ca3:	cmp    al,0x4a
  404ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca6:	loopne 0x404d1b
  404ca8:	sub    eax,0x20f70910
  404cad:	outs   dx,BYTE PTR ds:[esi]
  404cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404caf:	dec    ebx
  404cb0:	add    al,0xb5
  404cb2:	vmread DWORD PTR [esi+0x1e74c4e0],ebp
  404cb9:	jecxz  0x404c55
  404cbb:	xor    al,0xc7
  404cbd:	add    ch,BYTE PTR [edi]
  404cbf:	arpl   WORD PTR [esi+edx*4+0x6d471c0e],bx
  404cc6:	rep lods al,BYTE PTR ds:[esi]
  404cc8:	and    DWORD PTR [edi],0xc9a40e5d
  404cce:	push   ebp
  404ccf:	hlt    
  404cd0:	add    BYTE PTR [ecx],dh
  404cd2:	imul   edi,ecx,0xccb4b5b5
  404cd8:	xchg   BYTE PTR [ebx+0x26],bh
  404cdb:	fstp   QWORD PTR [edi+edx*1]
  404cde:	ins    BYTE PTR es:[edi],dx
  404cdf:	pop    esi
  404ce0:	cdq    
  404ce1:	mov    bl,0xd2
  404ce3:	popa   
  404ce4:	call   0x6c8da279
  404ce9:	inc    edx
  404cea:	dec    esp
  404ceb:	shl    BYTE PTR [ebp+eiz*8+0x3f04eb06],1
  404cf2:	adc    BYTE PTR [edx-0x7],dh
  404cf5:	data16 in al,0x35
  404cf8:	and    bl,BYTE PTR [edi]
  404cfa:	fnsave [esi]
  404cfc:	mov    eax,ds:0xeedef876
  404d01:	mov    BYTE PTR ss:[edx],cl
  404d04:	push   0x36016847
  404d09:	outs   dx,BYTE PTR cs:[esi]
  404d0b:	std    
  404d0c:	xchg   ebp,eax
  404d0d:	(bad)  
  404d0e:	pop    esp
  404d0f:	icebp  
  404d10:	jmp    0x404cf6
  404d12:	scas   eax,DWORD PTR es:[edi]
  404d13:	ret    
  404d14:	push   ds
  404d15:	jns    0x404d5d
  404d17:	mov    dh,0xb7
  404d19:	or     bh,bh
  404d1b:	or     DWORD PTR [edx+0x22c81e73],edi
  404d21:	sub    BYTE PTR [eax+edx*2],bl
  404d24:	arpl   WORD PTR [esp+edi*8],bx
  404d27:	dec    ebx
  404d28:	inc    edx
  404d29:	jb     0x404d57
  404d2b:	cmp    eax,0xec09e579
  404d30:	sub    eax,0x1e
  404d33:	sub    dl,BYTE PTR [ecx+0x15]
  404d36:	(bad)  
  404d37:	dec    edi
  404d38:	pop    es
  404d39:	cmp    BYTE PTR [esi-0x3e24c272],dh
  404d3f:	loopne 0x404d2d
  404d41:	xor    BYTE PTR [esi+0x48],dl
  404d44:	imul   esp,esi,0x7d
  404d47:	jnp    0x404daf
  404d49:	adc    BYTE PTR [ecx-0x46],bl
  404d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d4d:	lahf   
  404d4e:	jp     0x404d99
  404d50:	add    dh,BYTE PTR [esi-0x59]
  404d53:	mov    cl,0x68
  404d55:	mov    eax,DWORD PTR [edx+esi*2-0x2b]
  404d59:	add    bh,BYTE PTR [ebx]
  404d5b:	xchg   ebp,eax
  404d5c:	mov    dl,0xa3
  404d5e:	mov    DWORD PTR [eax-0x47],ebx
  404d61:	jo     0x404d28
  404d63:	mov    gs,WORD PTR [esi-0x12]
  404d66:	jne    0x404d52
  404d68:	sub    cl,BYTE PTR [ecx+0x3a3f1049]
  404d6e:	popa   
  404d6f:	lock mov ebp,0xb9595df5
  404d75:	fldenv [ecx]
  404d77:	stc    
  404d78:	into   
  404d79:	mov    ?,WORD PTR [ecx+0x19feecdb]
  404d7f:	add    ebx,DWORD PTR [edx-0x645e4c35]
  404d85:	(bad)  
  404d86:	popa   
  404d87:	xlat   BYTE PTR ds:[ebx]
  404d88:	arpl   sp,si
  404d8a:	(bad)  
  404d8c:	add    eax,0xf4f72045
  404d91:	adc    ebp,ecx
  404d93:	inc    ecx
  404d94:	test   WORD PTR [edx+esi*2],bp
  404d98:	cmp    BYTE PTR [edx-0x3f],bl
  404d9b:	jmp    0x9536:0x6a4ed973
  404da2:	jns    0x404d63
  404da4:	or     cl,ah
  404da6:	mov    ah,0x3b
  404da8:	mov    dh,0x6d
  404daa:	retf   
  404dab:	scas   al,BYTE PTR es:[edi]
  404dac:	mov    edi,0xbd492aba
  404db1:	push   0x180bb310
  404db6:	add    eax,0xa44d381
  404dbb:	aad    0x2f
  404dbd:	and    cl,0x8a
  404dc0:	mov    WORD PTR [ebp+0x10],es
  404dc3:	fidiv  WORD PTR [edi-0x66013466]
  404dc9:	lds    esp,FWORD PTR [ecx]
  404dcb:	out    0x67,al
  404dcd:	aaa    
  404dce:	cmp    eax,0xb45aba67
  404dd3:	inc    esi
  404dd4:	(bad)  
  404dd5:	sbb    al,0xb4
  404dd7:	call   0xac3e:0x662c29ae
  404dde:	scas   al,BYTE PTR es:[edi]
  404ddf:	pop    edi
  404de0:	jbe    0x404d82
  404de2:	sahf   
  404de3:	sbb    BYTE PTR [ebp+0x24],dl
  404de6:	aam    0xb5
  404de8:	push   es
  404de9:	mov    bh,0x26
  404deb:	and    al,0x57
  404ded:	cwde   
  404dee:	js     0x404dfd
  404df0:	or     ch,BYTE PTR [ecx+0x3a]
  404df3:	and    al,0x86
  404df5:	out    dx,eax
  404df6:	mov    ebp,0x923566b4
  404dfb:	hlt    
  404dfc:	adc    edx,DWORD PTR [edi]
  404dfe:	outs   dx,BYTE PTR ds:[esi]
  404dff:	loope  0x404e80
  404e01:	ins    BYTE PTR es:[edi],dx
  404e02:	pop    es
  404e03:	leave  
  404e04:	aas    
  404e05:	(bad)  
  404e06:	jbe    0x404e7c
  404e08:	test   BYTE PTR [edx-0x322d5c91],ch
  404e0e:	push   eax
  404e0f:	sbb    BYTE PTR [edx],al
  404e11:	popa   
  404e12:	repnz dec edi
  404e14:	cli    
  404e15:	outs   dx,DWORD PTR ds:[esi]
  404e16:	in     al,0xaa
  404e18:	into   
  404e19:	mov    al,0xf2
  404e1b:	sti    
  404e1c:	fstp   QWORD PTR [edx+0x54]
  404e1f:	dec    eax
  404e20:	lock lods al,BYTE PTR ds:[esi]
  404e22:	pop    ds
  404e23:	mov    eax,0x425d3e27
  404e28:	loop   0x404e10
  404e2a:	addr16 repz and eax,0x16a209f2
  404e31:	icebp  
  404e32:	aaa    
  404e33:	sbb    dl,0x51
  404e36:	sahf   
  404e37:	mov    ecx,eax
  404e39:	mov    eax,0x40b9d13a
  404e3e:	imul   edx,DWORD PTR [edi],0x40c6e877
  404e44:	push   esp
  404e45:	gs in  eax,dx
  404e47:	sub    dh,0x4c
  404e4a:	fld    DWORD PTR [eax]
  404e4c:	sbb    BYTE PTR [ecx],dh
  404e4e:	fisub  WORD PTR [edi+0x62]
  404e51:	clc    
  404e52:	cmp    ah,dl
  404e54:	mov    ds:0x9e0d292f,eax
  404e59:	mov    ebp,0xc38bc1c9
  404e5e:	add    eax,0x3ff23ec
  404e63:	retf   
  404e64:	adc    bh,BYTE PTR [edi+0x49]
  404e67:	mov    ebp,0x4643c52c
  404e6c:	push   eax
  404e6d:	mov    ds:0xb8f77f39,al
  404e72:	fisttp QWORD PTR [ecx-0x6f]
  404e75:	out    0x32,al
  404e77:	cmp    DWORD PTR [ebx],edi
  404e79:	push   0xffffff89
  404e7b:	jecxz  0x404e89
  404e7d:	aaa    
  404e7e:	xor    DWORD PTR [edx],ebx
  404e80:	repz sub eax,0x6b1f209
  404e86:	sbb    al,0xb6
  404e88:	xor    al,BYTE PTR [ebx]
  404e8a:	fs adc al,ch
  404e8d:	mov    bh,0xaa
  404e8f:	inc    esi
  404e90:	arpl   WORD PTR [ecx+0x32],bp
  404e93:	jecxz  0x404e7d
  404e95:	out    0x62,eax
  404e97:	cdq    
  404e98:	daa    
  404e99:	call   0xe398:0xa8b2e9c2
  404ea0:	cmp    DWORD PTR [ebx-0x12],0xbe6aa1d9
  404ea7:	call   0x7e04:0x25c7f4cc
  404eae:	mov    ebp,0x5aa6d646
  404eb3:	outs   dx,BYTE PTR ds:[esi]
  404eb4:	mov    WORD PTR [esi],?
  404eb6:	push   ebp
  404eb7:	out    0x45,eax
  404eb9:	jmp    0x404e51
  404ebb:	nop
  404ebc:	mov    dh,0x84
  404ebe:	jge    0x404f32
  404ec0:	popf   
  404ec1:	xor    edx,eax
  404ec3:	aad    0x8a
  404ec5:	es gs xor al,0x9e
  404ec9:	test   al,0x89
  404ecb:	stc    
  404ecc:	fcomip st,st(7)
  404ece:	jp     0x404eaf
  404ed0:	ror    DWORD PTR [ebp-0x6f],0x30
  404ed4:	loope  0x404f40
  404ed6:	jle    0x404ed1
  404ed8:	cmp    edx,DWORD PTR [ebx+0x2f760637]
  404ede:	jg     0x404ef0
  404ee0:	jns    0x404f24
  404ee2:	lahf   
  404ee3:	into   
  404ee4:	hlt    
  404ee5:	aam    0x2b
  404ee7:	adc    edx,0x28b6a15d
  404eed:	das    
  404eee:	outs   dx,DWORD PTR ds:[esi]
  404eef:	push   edx
  404ef0:	xchg   esi,eax
  404ef1:	int3   
  404ef2:	jb     0x404ef1
  404ef4:	aaa    
  404ef5:	push   cs
  404ef6:	xchg   edi,eax
  404ef7:	sub    cl,dh
  404ef9:	not    dh
  404efb:	xchg   esi,eax
  404efc:	pushf  
  404efd:	and    BYTE PTR [ebp-0x1dc08cba],0x7d
  404f04:	pusha  
  404f05:	jl     0x404f48
  404f07:	rcr    BYTE PTR [ebx-0x52],0x67
  404f0b:	sbb    dl,BYTE PTR [ecx]
  404f0d:	fstp   QWORD PTR [esi]
  404f0f:	fs mov dl,0x73
  404f12:	arpl   dx,di
  404f14:	inc    esp
  404f15:	xchg   ecx,eax
  404f16:	repnz in eax,0xeb
  404f19:	jo     0x404ee6
  404f1b:	ss enter 0x884a,0x5d
  404f20:	and    eax,0xec900d94
  404f25:	pop    ebx
  404f26:	cmp    ecx,edi
  404f28:	es dec ecx
  404f2a:	or     al,BYTE PTR [ecx+0x259417a6]
  404f30:	mul    DWORD PTR [edi+0x38]
  404f33:	sbb    DWORD PTR [ebx-0x7b],ebp
  404f36:	pop    ebx
  404f37:	pop    edi
  404f38:	outs   dx,DWORD PTR ds:[esi]
  404f39:	pop    ebx
  404f3a:	sub    ch,bh
  404f3c:	aas    
  404f3d:	adc    esi,edx
  404f3f:	cmp    edx,DWORD PTR [esp+eiz*2]
  404f42:	pop    ecx
  404f43:	icebp  
  404f44:	pop    edx
  404f45:	je     0x404f0e
  404f47:	ret    0xbb3f
  404f4a:	add    eax,0x5e2ecb58
  404f4f:	xchg   ecx,eax
  404f50:	(bad)  
  404f51:	xor    al,0x88
  404f53:	jmp    0xfc90eb1b
  404f58:	popa   
  404f59:	ret    0x30f1
  404f5c:	pop    ds
  404f5d:	fidivr WORD PTR [esi+0x7e]
  404f60:	sbb    edi,edx
  404f62:	sbb    cl,BYTE PTR [edx]
  404f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f65:	(bad)  
  404f66:	arpl   WORD PTR fs:[edi+eax*8],cx
  404f6a:	in     al,dx
  404f6b:	inc    eax
  404f6c:	adc    BYTE PTR cs:[edi+0x6f6654be],bh
  404f73:	dec    ecx
  404f74:	dec    ecx
  404f75:	xchg   ebx,eax
  404f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f77:	outs   dx,BYTE PTR ds:[esi]
  404f78:	pusha  
  404f79:	sahf   
  404f7a:	mov    ds:0xdc49c1bf,al
  404f7f:	add    eax,0xf3bbabad
  404f84:	stc    
  404f85:	inc    ebx
  404f86:	loopne 0x404f10
  404f88:	mov    ds:0x73104d97,eax
  404f8d:	pop    ebx
  404f8e:	shl    DWORD PTR [ebp+0x69667adf],1
  404f94:	lock jle 0x404f31
  404f97:	call   0x4089:0x4fc39acf
  404f9e:	icebp  
  404f9f:	pop    esi
  404fa0:	jmp    0x404f99
  404fa2:	aad    0xba
  404fa4:	sbb    eax,0x10a0975c
  404fa9:	enter  0x825,0x7e
  404fad:	pop    esi
  404fae:	rol    BYTE PTR [edi+0x4d],0x9a
  404fb2:	mov    eax,0xfa02f65a
  404fb7:	inc    edi
  404fb8:	pop    esi
  404fb9:	add    edi,DWORD PTR [ebx-0x2e46ea33]
  404fbf:	adc    al,0x64
  404fc1:	sub    eax,0x822a5bdb
  404fc6:	je     0x405014
  404fc8:	repnz jmp 0x2293:0x900eda22
  404fd0:	push   edx
  404fd1:	pushf  
  404fd2:	out    dx,al
  404fd3:	call   0xcb70:0xb692e018
  404fda:	sub    edx,eax
  404fdc:	into   
  404fdd:	mov    al,ds:0x21d4b129
  404fe2:	adc    al,0x80
  404fe4:	cdq    
  404fe5:	stos   DWORD PTR es:[edi],eax
  404fe6:	pop    ebp
  404fe7:	or     eax,0x677f2040
  404fec:	fldenv [ecx+0x4ee47b06]
  404ff2:	and    eax,esi
  404ff4:	pop    ebx
  404ff5:	xchg   ebx,eax
  404ff6:	addr16 sahf 
  404ff8:	adc    ebx,esp
  404ffa:	rol    dh,cl
  404ffc:	or     al,0xbb
  404ffe:	push   0x11
  405000:	ror    BYTE PTR fs:[ebx+0x1aa0b89f],0x3a
  405008:	fs es fucomip st,st(1)
  40500c:	aam    0xdc
  40500e:	jecxz  0x405079
  405010:	xor    dh,dh
  405012:	js     0x404ff7
  405014:	rol    BYTE PTR [ecx-0x54],1
  405017:	pop    ebp
  405018:	data16 sbb BYTE PTR [edi-0x37ce3ab7],ah
  40501f:	call   0xa8bb:0x479d4b2f
  405026:	inc    ebx
  405027:	cli    
  405028:	mov    gs,WORD PTR [ebp-0xc988b7f]
  40502e:	inc    ebp
  40502f:	sub    DWORD PTR [eax+0x2c],0xffffffc8
  405033:	inc    ecx
  405034:	mov    edi,0xc935c9e0
  405039:	and    dh,bl
  40503b:	std    
  40503c:	sub    eax,0xd104fe7e
  405041:	scas   al,BYTE PTR es:[edi]
  405042:	call   0xdb5f18e2
  405047:	outs   dx,DWORD PTR ds:[esi]
  405048:	jno    0x4050a3
  40504a:	add    eax,0xdab1a11d
  40504f:	popa   
  405050:	and    ecx,ebx
  405052:	std    
  405053:	fild   WORD PTR [edx+0x17]
  405056:	gs jne 0x4050b0
  405059:	mov    al,ds:0xdb4b8c4f
  40505e:	sub    al,0x8d
  405060:	push   es
  405061:	mov    cs,WORD PTR [esi]
  405063:	popf   
  405064:	enter  0xd47d,0xe6
  405068:	aaa    
  405069:	(bad)  
  40506b:	sbb    ah,bl
  40506d:	shl    BYTE PTR [ebp+eax*8-0x32ed3bec],0xee
  405075:	stc    
  405076:	clc    
  405077:	xchg   edx,eax
  405078:	cmp    BYTE PTR [edx+0x6a4790cc],bh
  40507e:	test   BYTE PTR [ebx],ch
  405080:	ficomp WORD PTR [eax+ecx*8]
  405083:	mov    edi,DWORD PTR [eax+0x7c]
  405086:	adc    BYTE PTR [edx-0x45594855],al
  40508c:	pop    ebp
  40508d:	cli    
  40508e:	sub    al,0xc4
  405090:	cmp    dh,BYTE PTR [edi-0x612d22d4]
  405096:	hlt    
  405097:	lods   al,BYTE PTR ds:[esi]
  405098:	inc    edx
  405099:	sub    eax,edi
  40509b:	lea    eax,[edx+ecx*4-0x1f211bd3]
  4050a2:	in     al,0x8b
  4050a4:	in     eax,0xcc
  4050a6:	cli    
  4050a7:	inc    edi
  4050a8:	mov    ebp,0x4d2fd635
  4050ad:	sbb    dh,bh
  4050af:	dec    edx
  4050b0:	cld    
  4050b1:	or     cl,dl
  4050b3:	sub    bl,BYTE PTR [ecx-0x12]
  4050b6:	or     esi,DWORD PTR [ebx+0x6fabf3ae]
  4050bc:	mov    fs,edi
  4050be:	or     BYTE PTR [eax-0x34],bh
  4050c1:	retf   
  4050c2:	adc    eax,0x33712e50
  4050c7:	dec    edx
  4050c8:	ret    0x3714
  4050cb:	in     eax,0xc5
  4050cd:	leave  
  4050ce:	pusha  
  4050cf:	mov    WORD PTR [esi],ss
  4050d1:	pop    ecx
  4050d2:	push   0xffffff97
  4050d4:	mov    ds:0xd5ab2a47,al
  4050d9:	xor    al,0xc5
  4050db:	fst    DWORD PTR [ebx]
  4050dd:	jp     0x40507c
  4050df:	inc    edx
  4050e0:	mov    eax,0x6c61b977
  4050e5:	std    
  4050e6:	adc    BYTE PTR [ecx-0x2e],ch
  4050e9:	pop    ebp
  4050ea:	mov    ebx,0x870af5db
  4050ef:	xchg   DWORD PTR [ecx+0x2a],edx
  4050f2:	pop    ebx
  4050f3:	ffree  st(6)
  4050f5:	xor    esi,DWORD PTR [esi+0x3d]
  4050f8:	or     DWORD PTR [ecx+0x25],0xde36f142
  4050ff:	xor    DWORD PTR ds:0x77c2c3e3,ecx
  405105:	dec    edi
  405106:	or     BYTE PTR [ebp-0x65161dd3],bl
  40510c:	cmp    al,0x6
  40510e:	mov    esi,0x970ea688
  405113:	jns    0x4050cf
  405115:	pcmpeqb mm3,QWORD PTR [eax]
  405118:	pop    ebx
  405119:	cwde   
  40511a:	or     BYTE PTR [edi+edx*1],dh
  40511d:	xor    al,0x75
  40511f:	ins    DWORD PTR es:[edi],dx
  405120:	xor    BYTE PTR [ebp+0x3f],ch
  405123:	adc    al,0x9a
  405125:	mov    esi,0x3f9361ac
  40512a:	leave  
  40512b:	sti    
  40512c:	mov    ah,BYTE PTR [eax+0x655ccd2e]
  405132:	inc    ecx
  405133:	sub    DWORD PTR [eax],0xffffffa9
  405136:	dec    esi
  405137:	mov    eax,ds:0xd7af3849
  40513c:	mov    esi,0x7dc83b91
  405141:	sahf   
  405142:	sub    bh,BYTE PTR [ebp+0x2257505d]
  405148:	xor    BYTE PTR ds:0xd82d09c,ch
  40514e:	mov    ebx,0x670d518
  405153:	ins    DWORD PTR es:[edi],dx
  405154:	test   ebx,0xb5a7deca
  40515a:	sbb    edx,edi
  40515c:	clc    
  40515d:	xchg   esi,eax
  40515e:	sbb    eax,0x370add29
  405163:	das    
  405164:	push   es
  405165:	xor    DWORD PTR [edi+ebx*8-0x68524c2c],ebx
  40516c:	fldenv [edi-0x4a5a755a]
  405172:	add    BYTE PTR [esi],dh
  405174:	cmp    ebp,esp
  405176:	repz cmp al,ch
  405179:	lds    edx,FWORD PTR [esp+eiz*2+0x54da6d8]
  405180:	adc    ebp,DWORD PTR [eax]
  405182:	xchg   DWORD PTR [ebx+0x3d8a3105],edx
  405188:	push   ecx
  405189:	mov    ebp,DWORD PTR [edx-0x72a82082]
  40518f:	or     DWORD PTR [eax+0x5f6ad108],edi
  405195:	test   eax,0x1c755570
  40519a:	mov    ds:0xdcedbd31,al
  40519f:	mov    ah,0x5e
  4051a1:	mov    gs,WORD PTR [edi-0x30]
  4051a4:	mov    ch,0x9b
  4051a6:	pop    edx
  4051a7:	fisubr DWORD PTR [edi]
  4051a9:	push   eax
  4051aa:	push   esp
  4051ab:	dec    eax
  4051ac:	(bad)  
  4051ad:	pusha  
  4051ae:	sub    BYTE PTR [edx+eax*1+0x2d1dbcc9],ch
  4051b5:	mov    cl,0xce
  4051b7:	out    dx,eax
  4051b8:	lahf   
  4051b9:	lahf   
  4051ba:	add    dh,BYTE PTR [ebp-0x2f]
  4051bd:	dec    ecx
  4051be:	add    cl,BYTE PTR [ebx-0x7e]
  4051c1:	loop   0x40521d
  4051c3:	sub    eax,0xdd0e3fb8
  4051c8:	xor    al,0xcb
  4051ca:	int    0xad
  4051cc:	or     cl,dl
  4051ce:	outs   dx,BYTE PTR ds:[esi]
  4051cf:	daa    
  4051d0:	dec    esp
  4051d1:	sar    DWORD PTR [esi],cl
  4051d3:	xchg   edx,eax
  4051d4:	leave  
  4051d5:	mov    cl,BYTE PTR [ebx-0x34]
  4051d8:	push   es
  4051d9:	or     eax,0xaced2650
  4051df:	push   ds
  4051e0:	adc    eax,0xc5793f36
  4051e5:	mov    eax,0x6b71409a
  4051ea:	int3   
  4051eb:	idiv   BYTE PTR [ebx+0x7639673f]
  4051f1:	push   esi
  4051f2:	jbe    0x40526e
  4051f4:	inc    ecx
  4051f5:	xchg   edx,eax
  4051f6:	xchg   DWORD PTR [ebp-0x4a],ebx
  4051f9:	lods   eax,DWORD PTR ds:[esi]
  4051fa:	mov    bl,dl
  4051fc:	(bad)  
  4051fd:	out    0x84,al
  4051ff:	dec    esi
  405200:	jge    0x4051be
  405202:	fdivrp st(7),st
  405204:	jns    0x4051ce
  405206:	add    al,0x77
  405208:	int3   
  405209:	xchg   ebp,eax
  40520a:	mov    al,0x41
  40520c:	cwde   
  40520d:	mov    ch,al
  40520f:	ja     0x405290
  405211:	and    eax,0x743ceaef
  405216:	shl    DWORD PTR [ecx],0x4d
  405219:	lahf   
  40521a:	enter  0xdb76,0x77
  40521e:	dec    ecx
  40521f:	fdivr  QWORD PTR [eax]
  405221:	dec    esp
  405222:	stc    
  405223:	pop    eax
  405224:	xchg   ecx,eax
  405225:	jl     0x4051fb
  405227:	ja     0x405231
  405229:	(bad)  
  40522a:	dec    esi
  40522b:	mov    ebx,0x5e8f4e86
  405230:	push   edx
  405231:	jno    0x405216
  405233:	mov    ebp,0xef3e96bd
  405238:	loop   0x405250
  40523a:	inc    esp
  40523b:	cmc    
  40523c:	call   0x1032f9e
  405241:	mov    dl,0x27
  405243:	gs and eax,0x5ff67abf
  405249:	xor    ch,BYTE PTR [esp+eax*8]
  40524c:	inc    DWORD PTR [edx+0x7a4dfdee]
  405252:	mul    BYTE PTR [edx+0x38]
  405255:	les    ebx,FWORD PTR [ebx]
  405257:	jmp    0xdb4a:0x2f6fa4e8
  40525e:	push   eax
  40525f:	xchg   esi,esp
  405261:	out    dx,al
  405262:	push   es
  405263:	sub    DWORD PTR [ebx-0x2ccf3c2d],ebp
  405269:	addr16 je 0x4052c2
  40526c:	cmp    esi,0xc2ecc7b9
  405272:	mov    DWORD PTR [eax+0x6],edi
  405275:	repz xor al,0xac
  405278:	ss int3 
  40527a:	test   al,0x70
  40527c:	push   esp
  40527d:	hlt    
  40527e:	gs jae 0x40528a
  405281:	sbb    eax,0x5ce0e2a
  405286:	cld    
  405287:	call   0x4531a088
  40528c:	add    eax,0xcb58cd06
  405291:	dec    esp
  405292:	mov    al,0x63
  405294:	icebp  
  405295:	test   al,0x7f
  405297:	inc    ebx
  405298:	loopne 0x4052af
  40529a:	sub    al,0x77
  40529c:	sti    
  40529d:	int    0xe9
  40529f:	aaa    
  4052a0:	stc    
  4052a1:	(bad)  
  4052a3:	pusha  
  4052a4:	push   esp
  4052a5:	stos   BYTE PTR es:[edi],al
  4052a6:	cmp    al,dl
  4052a8:	mov    db6,edx
  4052ab:	pop    ebx
  4052ac:	call   0x44cd2f4d
  4052b1:	fst    QWORD PTR [ebx+0x67]
  4052b4:	mov    eax,ds:0x6d551ea9
  4052b9:	mov    bl,0x9c
  4052bb:	xchg   ecx,eax
  4052bc:	inc    esi
  4052bd:	xchg   DWORD PTR [esi-0x1710e0bf],esi
  4052c3:	xchg   ebp,eax
  4052c4:	sub    eax,DWORD PTR [edx]
  4052c6:	jle    0x405315
  4052c8:	ret    
  4052c9:	push   eax
  4052ca:	dec    ebx
  4052cb:	xchg   DWORD PTR [ebx],edx
  4052cd:	rcr    BYTE PTR [edi+0x1737665c],cl
  4052d3:	mov    bh,0x7
  4052d5:	cmp    al,0xa
  4052d7:	dec    ebx
  4052d8:	stos   DWORD PTR es:[edi],eax
  4052d9:	je     0x405309
  4052db:	cld    
  4052dc:	cmp    BYTE PTR [esi+0x66afa2c9],cl
  4052e2:	mov    ch,0xf3
  4052e4:	or     BYTE PTR [edi],0x18
  4052e7:	xchg   edx,eax
  4052e8:	enter  0xc317,0x7c
  4052ec:	(bad)  
  4052ed:	jl     0x405358
  4052ef:	pop    ebx
  4052f0:	push   ds
  4052f1:	mov    ds:0x1006d8c9,al
  4052f6:	cld    
  4052f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f8:	(bad)  
  4052fa:	addr16 inc edi
  4052fc:	push   cs
  4052fd:	xchg   esi,eax
  4052fe:	lods   al,BYTE PTR ds:[esi]
  4052ff:	xor    eax,0x6c859d8c
  405304:	jp     0x405370
  405306:	out    0xc4,eax
  405308:	push   edi
  405309:	pop    ecx
  40530a:	jbe    0x40532e
  40530c:	lahf   
  40530d:	cmp    eax,0xa5683003
  405312:	xor    al,cl
  405314:	mov    WORD PTR [ebx+0x9f93eef],bp
  40531b:	stos   DWORD PTR es:[edi],eax
  40531c:	mov    al,BYTE PTR [edx+0x4888dec5]
  405322:	fwait
  405323:	aam    0xb3
  405325:	jl     0x4052d8
  405327:	adc    al,0x7e
  405329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40532a:	jl     0x40536e
  40532c:	or     esp,DWORD PTR [ebx-0x6e]
  40532f:	stos   BYTE PTR es:[edi],al
  405330:	in     al,dx
  405331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405333:	fidiv  WORD PTR [edi+0x1d0d3af2]
  405339:	ret    0xdda4
  40533c:	inc    esi
  40533d:	sbb    al,BYTE PTR [edi+ebx*2-0x39355ae0]
  405344:	push   ds
  405345:	adc    eax,0xe371b223
  40534a:	jp     0x4052ef
  40534c:	fcompp 
  40534e:	push   ecx
  40534f:	je     0x4053c0
  405351:	mov    esi,0xcf57542f
  405356:	jno    0x4053cb
  405358:	dec    esi
  405359:	xlat   BYTE PTR ds:[ebx]
  40535a:	xchg   ebp,edx
  40535c:	push   ebp
  40535d:	mov    al,0xa1
  40535f:	mov    ds,ecx
  405361:	sub    al,cl
  405363:	(bad)  
  405364:	jne    0x4053a7
  405366:	mov    cl,0xe1
  405368:	adc    al,0x8d
  40536a:	ss xchg ebx,eax
  40536c:	mov    dh,0x18
  40536e:	ss repz hlt 
  405371:	jns    0x4053cb
  405373:	loopne 0x4053a1
  405375:	mov    ds:0x9b58d251,eax
  40537a:	fbstp  TBYTE PTR [edx]
  40537c:	je     0x405383
  40537e:	mov    al,0x99
  405380:	pop    es
  405381:	sbb    edi,ebx
  405383:	rol    BYTE PTR [eax-0xb],1
  405386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405387:	sub    cl,BYTE PTR [ebx+0x23]
  40538a:	dec    BYTE PTR [edi]
  40538c:	outs   dx,BYTE PTR ds:[esi]
  40538d:	sub    cl,BYTE PTR [esi+0x2a]
  405390:	sbb    BYTE PTR [edi-0x54],bh
  405393:	outs   dx,DWORD PTR ds:[esi]
  405394:	push   eax
  405395:	mov    al,ds:0x984e8b65
  40539a:	cmp    eax,0xe1aa2723
  40539f:	jae    0x4053fa
  4053a1:	mov    edx,0x61f6951a
  4053a6:	mov    BYTE PTR [ebx],ch
  4053a8:	or     ecx,esi
  4053aa:	ins    BYTE PTR es:[edi],dx
  4053ab:	and    ebx,DWORD PTR [esi-0x46bc9efd]
  4053b1:	xchg   edx,eax
  4053b2:	pop    es
  4053b3:	xchg   bh,dh
  4053b5:	jbe    0x4053fd
  4053b7:	add    BYTE PTR [edi+0x19ef3c9],cl
  4053bd:	lods   eax,DWORD PTR ds:[esi]
  4053be:	pop    edx
  4053bf:	out    0x9a,al
  4053c1:	mov    dh,0xc5
  4053c3:	in     eax,dx
  4053c4:	clc    
  4053c5:	mov    DWORD PTR [esi],esp
  4053c7:	and    dl,0x9f
  4053ca:	jnp    0x40542d
  4053cc:	or     eax,0x4c5d3874
  4053d1:	xor    al,0xc5
  4053d3:	out    0xe8,eax
  4053d5:	test   al,0xc1
  4053d7:	repz call 0x207:0xb3630954
  4053df:	mov    ebp,0x9a3b7585
  4053e4:	lock mov bl,0x7f
  4053e7:	and    dh,0xaa
  4053ea:	inc    edi
  4053eb:	pusha  
  4053ec:	sub    eax,0x2c28aa2a
  4053f1:	mov    ecx,0xab24b574
  4053f6:	test   eax,0x299b0499
  4053fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053fc:	or     eax,0xf9be613b
  405401:	ds inc edi
  405403:	jns    0x40541c
  405405:	xchg   ebx,eax
  405406:	push   ecx
  405407:	jge    0x40538b
  405409:	push   esi
  40540a:	ret    
  40540b:	popf   
  40540c:	mov    ecx,DWORD PTR [eax-0x5]
  40540f:	repnz outs dx,BYTE PTR ds:[esi]
  405411:	cli    
  405412:	cmp    esi,edi
  405414:	sub    eax,DWORD PTR [eax-0x11]
  405417:	or     al,0x36
  405419:	and    eax,0x2d87f1b8
  40541e:	in     al,dx
  40541f:	ja     0x405402
  405421:	jmp    0xf6d9777f
  405426:	ins    BYTE PTR es:[edi],dx
  405427:	jbe    0x405486
  405429:	jo     0x4053ca
  40542b:	dec    esp
  40542c:	cmp    DWORD PTR [eax],esi
  40542e:	test   DWORD PTR [esi+0x4c4a616c],eax
  405434:	mov    ?,WORD PTR [eax-0x514bc6b5]
  40543a:	xor    al,BYTE PTR [edx]
  40543c:	dec    edi
  40543d:	jae    0x40542c
  40543f:	ret    0x793a
  405442:	out    0x27,eax
  405444:	push   edx
  405445:	fbld   TBYTE PTR [edx-0xd]
  405448:	cmovns esi,DWORD PTR [ebx+0x2a2d07d6]
  40544f:	sub    al,0xaa
  405451:	mov    BYTE PTR [edi+0xf],al
  405454:	aad    0x30
  405456:	push   ss
  405457:	scas   al,BYTE PTR es:[edi]
  405458:	fbstp  TBYTE PTR [ecx]
  40545a:	js     0x40546a
  40545c:	dec    edi
  40545d:	dec    ebp
  40545e:	inc    edx
  40545f:	icebp  
  405460:	push   edx
  405461:	in     eax,0x6c
  405463:	sbb    cl,dh
  405465:	stos   DWORD PTR es:[edi],eax
  405466:	mov    dl,0x58
  405468:	fld    QWORD PTR [edx]
  40546a:	mov    al,ds:0x33d94366
  40546f:	test   BYTE PTR [eax-0x22b54f57],ah
  405475:	mov    ebp,0x1ef83ea3
  40547a:	call   0xf1f3fe7d
  40547f:	test   ebp,eax
  405481:	out    dx,al
  405482:	cmp    eax,0x17091ede
  405487:	and    edx,ecx
  405489:	jne    0x405445
  40548b:	cmp    BYTE PTR ds:[ebx],bl
  40548e:	mov    WORD PTR [eax+0x2a812f85],cs
  405494:	retf   0x600a
  405497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405498:	scas   eax,DWORD PTR es:[edi]
  405499:	mov    esp,0x79f6e45f
  40549e:	lds    ebx,FWORD PTR [edx+0xa69000d]
  4054a4:	leave  
  4054a5:	add    BYTE PTR [esi],0x30
  4054a8:	stos   DWORD PTR es:[edi],eax
  4054a9:	stc    
  4054aa:	mov    al,0xea
  4054ac:	adc    al,0xe
  4054ae:	imul   edx,DWORD PTR [eax-0x1363653d],0x15
  4054b5:	fisubr WORD PTR [edi*4-0x37064ab4]
  4054bc:	loope  0x405456
  4054be:	cmp    edi,esi
  4054c0:	dec    edi
  4054c1:	jno    0x4054b9
  4054c3:	inc    esp
  4054c4:	inc    esi
  4054c5:	imul   esi,DWORD PTR [ebp+0x73812f2d],0x29
  4054cc:	xchg   esi,eax
  4054cd:	and    ah,BYTE PTR [edx]
  4054cf:	fdivr  DWORD PTR [ecx]
  4054d1:	sbb    eax,0x1e428afc
  4054d6:	mov    ds:0xbb459a34,eax
  4054db:	fs shl dh,0x17
  4054df:	nop
  4054e0:	stos   DWORD PTR es:[edi],eax
  4054e1:	xor    bh,0x78
  4054e4:	push   ebx
  4054e5:	imul   ebx,DWORD PTR [ebx+0xc],0x17
  4054e9:	push   esp
  4054ea:	aas    
  4054eb:	mov    edx,0x3fb69686
  4054f0:	std    
  4054f1:	pop    edx
  4054f2:	cs cdq 
  4054f4:	sbb    eax,DWORD PTR [edx]
  4054f6:	int3   
  4054f7:	mov    eax,0x37b3cd8d
  4054fc:	mov    cl,0xdc
  4054fe:	xor    DWORD PTR [esi-0x2c],0xb0832cd0
  405505:	pop    ebp
  405506:	shl    DWORD PTR [edi],0x8f
  405509:	shl    BYTE PTR [edx-0x7659fe2b],1
  40550f:	add    eax,0x56a11aaf
  405514:	adc    DWORD PTR [ebx-0x29],0xd14c49e1
  40551b:	xchg   DWORD PTR cs:0x11cee173,ebx
  405522:	xor    eax,0xdc5062ac
  405527:	inc    sp
  405529:	aad    0x76
  40552b:	fistp  QWORD PTR ds:0x5b787fcd
  405531:	out    0x2f,al
  405533:	push   ss
  405534:	jg     0x405594
  405536:	call   0x4a9a:0x43ebc52e
  40553d:	dec    esp
  40553e:	es adc al,0xaa
  405541:	leave  
  405542:	dec    ebx
  405543:	mov    ebp,0xe60066ce
  405548:	pop    eax
  405549:	aas    
  40554a:	imul   esi,esi,0xffffffee
  40554d:	iret   
  40554e:	(bad)  
  40554f:	cmp    al,0x50
  405551:	jne    0x4055b8
  405553:	xor    DWORD PTR [ecx],esp
  405555:	(bad)  
  405556:	dec    edx
  405557:	nop
  405558:	push   edi
  405559:	sbb    BYTE PTR [esi],al
  40555b:	sub    al,0x84
  40555d:	add    esi,edx
  40555f:	pusha  
  405560:	fstp   TBYTE PTR [ecx]
  405562:	in     eax,dx
  405563:	xlat   BYTE PTR ds:[ebx]
  405564:	inc    edx
  405565:	mov    cl,0x9e
  405567:	aam    0xb
  405569:	int    0x25
  40556b:	int3   
  40556c:	push   cs
  40556d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40556e:	scas   al,BYTE PTR es:[edi]
  40556f:	jno    0x40552a
  405571:	imul   edx,DWORD PTR [eax],0xbc085e22
  405577:	pushf  
  405578:	cdq    
  405579:	out    0x5e,al
  40557b:	adc    ebp,ebx
  40557d:	imul   edx,DWORD PTR [esi+eax*8+0x34],0xffffff87
  405582:	ficom  DWORD PTR [eax]
  405584:	out    0xf1,al
  405586:	fadd   DWORD PTR [ecx-0x507db62c]
  40558c:	inc    edi
  40558d:	push   ebx
  40558e:	(bad)  
  40558f:	in     al,dx
  405590:	mov    al,0x6c
  405592:	add    ah,dh
  405594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405595:	push   es
  405596:	mov    edi,edx
  405598:	sub    ah,BYTE PTR [esi+0x64]
  40559b:	mov    ah,0xe4
  40559d:	dec    ebp
  40559e:	mov    DWORD PTR [esp+edi*4+0x7f],edx
  4055a2:	test   eax,0x465fb6a5
  4055a7:	imul   edi,DWORD PTR [ecx],0x56
  4055aa:	stos   BYTE PTR es:[edi],al
  4055ab:	dec    ebx
  4055ac:	jg     0x40555f
  4055ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055af:	add    eax,0x987965ff
  4055b4:	loopne 0x40560c
  4055b6:	test   al,0xf6
  4055b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055b9:	lods   al,BYTE PTR ds:[esi]
  4055ba:	ins    DWORD PTR es:[edi],dx
  4055bb:	ins    BYTE PTR es:[edi],dx
  4055bc:	repz in al,0x7f
  4055bf:	add    al,0x2a
  4055c1:	cs mov edx,esi
  4055c4:	pop    esi
  4055c5:	daa    
  4055c6:	inc    edx
  4055c7:	push   ebx
  4055c8:	in     eax,0xb3
  4055ca:	sti    
  4055cb:	bound  edx,QWORD PTR ds:0x2b1fae27
  4055d1:	js     0x405566
  4055d3:	test   DWORD PTR [ecx],edx
  4055d5:	adc    ebx,DWORD PTR [edi-0x64d1382a]
  4055db:	cmovp  edi,DWORD PTR [ebx]
  4055de:	xor    esi,esi
  4055e0:	pop    edx
  4055e1:	outs   dx,DWORD PTR ds:[esi]
  4055e2:	inc    ecx
  4055e3:	ds jno 0x405581
  4055e6:	clc    
  4055e7:	imul   DWORD PTR [ebp-0x602c896a]
  4055ed:	scas   al,BYTE PTR es:[edi]
  4055ee:	aam    0xc1
  4055f0:	(bad)  
  4055f1:	jnp    0x4055a1
  4055f3:	scas   al,BYTE PTR es:[edi]
  4055f4:	mov    edx,0xea8a1ae4
  4055f9:	mov    edi,0x2fa8d315
  4055fe:	hlt    
  4055ff:	cmp    eax,0x29bc279e
  405604:	mov    ds:0x3ad2ec04,al
  405609:	nop
  40560a:	sbb    al,0xe0
  40560c:	adc    al,0x27
  40560e:	fsubrp st(1),st
  405610:	mov    ds:0x27cc79e4,eax
  405615:	cmp    eax,0x99e8f5ff
  40561a:	xchg   ebx,eax
  40561b:	mov    bl,BYTE PTR [edx]
  40561d:	inc    esp
  40561e:	shl    DWORD PTR [edx-0x2ae673b],1
  405624:	test   eax,0x14bce3ec
  405629:	push   edi
  40562a:	xchg   esp,eax
  40562b:	sub    ch,dh
  40562d:	fcmovne st,st(5)
  40562f:	sahf   
  405630:	imul   esp,eax,0x3a910456
  405636:	mov    eax,0x8371bb3a
  40563b:	cli    
  40563c:	dec    edx
  40563d:	add    eax,0xb64b0d4
  405642:	jo     0x40561b
  405644:	or     al,0x2b
  405646:	stos   DWORD PTR es:[edi],eax
  405647:	mov    BYTE PTR [edi],cl
  405649:	stos   BYTE PTR es:[edi],al
  40564a:	es loop 0x4055f9
  40564d:	popf   
  40564e:	jge    0x405611
  405650:	push   ss
  405651:	mov    ds:0xe39b534a,al
  405656:	mov    DWORD PTR [edx+0x5f],ebx
  405659:	sbb    esp,DWORD PTR [ebx+0x79]
  40565c:	pop    eax
  40565d:	xor    BYTE PTR [esi],al
  40565f:	inc    edx
  405660:	popf   
  405661:	adc    BYTE PTR [edi-0x63],bh
  405664:	in     al,0xce
  405666:	jmp    FWORD PTR [edx-0x607dadb0]
  40566c:	pop    ebp
  40566d:	xor    dh,BYTE PTR [ecx]
  40566f:	stc    
  405670:	aad    0xa4
  405672:	adc    bl,BYTE PTR [ebx-0x75]
  405675:	ins    BYTE PTR es:[edi],dx
  405676:	daa    
  405677:	cmp    al,0x65
  405679:	or     DWORD PTR [edx],ebp
  40567b:	out    dx,al
  40567c:	xchg   ebx,eax
  40567d:	pop    ebx
  40567e:	mov    edx,DWORD PTR [edi-0x51]
  405681:	mov    dh,0x54
  405683:	sbb    al,0x5d
  405685:	jae    0x4056ca
  405687:	ret    0x798
  40568a:	or     DWORD PTR [ecx],0xf
  40568d:	sbb    DWORD PTR [esi+0x14462eba],edx
  405693:	stc    
  405694:	pop    edx
  405695:	fstp   DWORD PTR [ebp-0x33]
  405698:	and    BYTE PTR [ebx+0x50],0x58
  40569c:	cmp    eax,esp
  40569e:	mov    ebx,0x30220311
  4056a3:	in     eax,0xa7
  4056a5:	(bad)  
  4056a6:	inc    ebx
  4056a7:	mov    ebx,0xb0f1de43
  4056ac:	sub    esi,eax
  4056ae:	jne    0x40564f
  4056b0:	pop    ds
  4056b1:	add    DWORD PTR [ecx],ebx
  4056b3:	inc    eax
  4056b4:	pop    edx
  4056b5:	xor    bh,dh
  4056b7:	clc    
  4056b8:	push   edx
  4056b9:	std    
  4056ba:	mov    eax,0x98665ce3
  4056bf:	sahf   
  4056c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c1:	arpl   WORD PTR [esi],sp
  4056c3:	sub    ecx,DWORD PTR [ecx+edi*8+0x3f6614d6]
  4056ca:	hlt    
  4056cb:	adc    DWORD PTR [ebp-0x4f],esi
  4056ce:	pop    ss
  4056cf:	pop    esp
  4056d0:	mov    DWORD PTR [edi],eax
  4056d2:	fadd   QWORD PTR [ecx-0x7c59671c]
  4056d8:	(bad)  
  4056d9:	into   
  4056da:	pop    eax
  4056db:	neg    DWORD PTR [ecx+0x78]
  4056de:	pusha  
  4056df:	xor    dl,ah
  4056e1:	or     ch,BYTE PTR [ecx-0x45]
  4056e4:	xchg   ebp,eax
  4056e5:	sbb    edi,ebp
  4056e7:	or     BYTE PTR [ebx],0x91
  4056ea:	and    dh,BYTE PTR [edx]
  4056ec:	test   eax,0xd3a31504
  4056f1:	(bad)  
  4056f2:	adc    dh,BYTE PTR [edi+0x4137082c]
  4056f8:	pop    esp
  4056f9:	dec    ecx
  4056fa:	sbb    ecx,DWORD PTR [esi+ebx*8]
  4056fd:	or     BYTE PTR [edi+0x2024ed46],cl
  405703:	je     0x405703
  405705:	adc    BYTE PTR [ebx-0x5e],dh
  405708:	push   edi
  405709:	jns    0x405729
  40570b:	xchg   edx,eax
  40570c:	jmp    0xaca5:0x440d7e3d
  405713:	xor    BYTE PTR [edx],bl
  405715:	sub    bh,BYTE PTR ds:0x607e3a22
  40571b:	dec    edx
  40571c:	out    0xb6,eax
  40571e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40571f:	push   eax
  405720:	xchg   ebx,eax
  405721:	fsub   DWORD PTR [edi+0xcec9d89]
  405727:	jns    0x405761
  405729:	mov    esp,0x560eaa3d
  40572e:	mov    ds:0xdb2b9495,al
  405733:	adc    ebx,esp
  405735:	ins    DWORD PTR es:[edi],dx
  405736:	sub    al,0x4e
  405738:	lahf   
  405739:	mov    ah,0xeb
  40573b:	ss mov eax,0x3b818e81
  405741:	pop    eax
  405742:	mov    bl,0x76
  405744:	jg     0x4057aa
  405746:	push   es
  405747:	fadd   DWORD PTR [eax]
  405749:	cs xchg ebx,eax
  40574b:	and    BYTE PTR ds:0x1f4b96eb,al
  405751:	jbe    0x4057a9
  405753:	inc    edx
  405754:	ds iret 
  405756:	sbb    DWORD PTR [ebp+0x3e],edx
  405759:	out    0x35,eax
  40575b:	mov    ebx,0xf6f5f1b5
  405760:	push   eax
  405761:	jmp    0xd09e:0x308ef229
  405768:	mov    WORD PTR [ecx],?
  40576a:	jo     0x40573a
  40576c:	inc    edx
  40576d:	sub    edi,esp
  40576f:	shl    edi,cl
  405771:	add    DWORD PTR [esi+0x40cf9611],edx
  405777:	inc    ebp
  405778:	inc    edx
  405779:	(bad)  
  40577a:	imul   esi,DWORD PTR [ebx+0xd],0x36
  40577e:	pop    ds
  40577f:	sub    BYTE PTR [edx+0x44],0x98
  405783:	lds    ebp,FWORD PTR [ecx+0x66f4fcab]
  405789:	loope  0x405730
  40578b:	rol    esi,1
  40578d:	ins    DWORD PTR es:[edi],dx
  40578e:	nop
  40578f:	xchg   dh,dl
  405791:	jg     0x405745
  405793:	mov    esp,0xfeb208de
  405798:	and    DWORD PTR [ebp+ebx*4-0x2d],0xffffffc1
  40579d:	daa    
  40579e:	ins    DWORD PTR es:[edi],dx
  40579f:	retf   0xf8e7
  4057a2:	inc    ecx
  4057a3:	pop    edx
  4057a4:	imul   edi,DWORD PTR [edi+0x28],0xc6eece55
  4057ab:	in     al,0xcb
  4057ad:	popa   
  4057ae:	sbb    DWORD PTR [ecx],esi
  4057b0:	retf   0x1e15
  4057b3:	rcr    BYTE PTR [ebx],1
  4057b5:	pop    edi
  4057b6:	(bad)  
  4057b7:	adc    al,0x32
  4057b9:	arpl   WORD PTR [eax-0x2f],dx
  4057bc:	xchg   edi,eax
  4057bd:	mov    bh,0x23
  4057bf:	shld   edi,ebp,cl
  4057c2:	add    dh,BYTE PTR [edi+0x79]
  4057c5:	inc    ebx
  4057c6:	lods   al,BYTE PTR ds:[esi]
  4057c7:	(bad)  
  4057c8:	imul   eax,DWORD PTR [ebx-0x5d],0xd6c69df3
  4057cf:	imul   eax,DWORD PTR [ebx-0x5e],0xffffffce
  4057d3:	and    ecx,ebp
  4057d5:	sbb    edx,DWORD PTR [ecx-0x7d]
  4057d8:	call   0xeadc:0x13f7b304
  4057df:	in     al,0xc
  4057e1:	push   edi
  4057e2:	mov    esp,0x581081a6
  4057e7:	sub    al,BYTE PTR [ebx-0x9a899db]
  4057ed:	dec    edx
  4057ee:	aam    0xfb
  4057f0:	add    al,0xc7
  4057f2:	inc    esi
  4057f3:	jl     0x4057c7
  4057f5:	adc    esi,DWORD PTR [eax]
  4057f7:	retf   
  4057f8:	cs repnz push 0xb341e53
  4057ff:	ss push 0x72
  405802:	or     edx,DWORD PTR [ebx-0x6]
  405805:	push   0xffffff84
  405807:	jno    0x40579c
  405809:	jle    0x405805
  40580b:	xchg   ecx,eax
  40580c:	push   es
  40580d:	test   BYTE PTR [ebx],dl
  40580f:	and    eax,0x3c3b288b
  405814:	sti    
  405815:	sahf   
  405816:	popa   
  405817:	int3   
  405818:	and    BYTE PTR [edi-0x7d],ch
  40581b:	and    eax,0xf1cf8c29
  405820:	xor    al,0xe5
  405822:	sbb    al,bh
  405824:	aad    0x5
  405826:	mov    al,ds:0x2a8c1354
  40582b:	xchg   esi,eax
  40582c:	cmp    DWORD PTR [esi+0x5539edc5],0xffffffb9
  405833:	aas    
  405834:	cmp    DWORD PTR [edx+0x3b1c03f5],ebx
  40583a:	dec    edx
  40583b:	xor    esp,esp
  40583d:	add    BYTE PTR [ebx],dl
  40583f:	mov    ecx,0xdeb20685
  405844:	ret    
  405845:	in     eax,dx
  405846:	xor    BYTE PTR [ebx+edx*2+0x38],cl
  40584a:	mov    ds:0xd9b01f9b,al
  40584f:	sbb    BYTE PTR [ecx-0x1376103a],dl
  405855:	adc    al,0xaf
  405857:	std    
  405858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405859:	push   es
  40585a:	mov    dl,dh
  40585c:	fadd   DWORD PTR [ebx+0x799f8fbb]
  405862:	retf   0xba05
  405865:	call   0x898be987
  40586a:	daa    
  40586b:	or     ebp,DWORD PTR [edx+0x47e56d45]
  405871:	fwait
  405872:	pop    es
  405873:	pop    ebp
  405874:	jp     0x4058e2
  405876:	mov    edi,0xbc4c44dd
  40587b:	es jg  0x40588c
  40587e:	pusha  
  40587f:	dec    edi
  405880:	cdq    
  405881:	mov    ds,esp
  405883:	gs in  al,dx
  405885:	mov    WORD PTR [ebx+0x2cf3fe31],?
  40588b:	push   0xa3c7c542
  405890:	(bad)  [esp+ebp*1]
  405893:	stos   BYTE PTR es:[edi],al
  405894:	shl    DWORD PTR [ebx-0xe],1
  405897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405898:	adc    bh,BYTE PTR [ebp-0x7aa65d6f]
  40589e:	lock or BYTE PTR [esi-0xcc082b],0xd4
  4058a6:	inc    edx
  4058a7:	int    0x55
  4058a9:	in     eax,dx
  4058aa:	loope  0x4058a9
  4058ac:	mov    al,ds:0x1b93f794
  4058b1:	adc    DWORD PTR [esi],edi
  4058b3:	adc    DWORD PTR [eax+0x36],ebx
  4058b6:	push   0xffffffe3
  4058b8:	push   ss
  4058b9:	(bad)  [eax-0x4d]
  4058bc:	ret    
  4058bd:	add    BYTE PTR [ecx+edi*1],bl
  4058c0:	test   DWORD PTR cs:[esi],0xb4654e77
  4058c7:	and    BYTE PTR [edi+0x37bf143a],dl
  4058cd:	lahf   
  4058ce:	fwait
  4058cf:	retf   0x7e76
  4058d2:	outs   dx,BYTE PTR ds:[esi]
  4058d3:	js     0x405921
  4058d5:	shl    esp,1
  4058d7:	adc    eax,0x650addcd
  4058dc:	lea    ebx,[edi]
  4058de:	sub    edi,DWORD PTR [ebx]
  4058e0:	xor    esi,DWORD PTR [eax]
  4058e2:	xlat   BYTE PTR ds:[ebx]
  4058e3:	repz jns 0x4058cc
  4058e6:	(bad)  
  4058e7:	cli    
  4058e8:	inc    ebx
  4058e9:	jl     0x4058dc
  4058eb:	cwde   
  4058ec:	retf   0xab10
  4058ef:	add    DWORD PTR [edx+eiz*2-0x6b],esi
  4058f3:	fnstcw WORD PTR [edx]
  4058f5:	cmp    BYTE PTR [esi-0x5f],bl
  4058f8:	int3   
  4058f9:	xor    al,0xc7
  4058fb:	call   DWORD PTR [ebx-0x42c2c321]
  405901:	mov    esp,0x5cc30c9c
  405906:	add    BYTE PTR [eax+0x23fe6aff],dl
  40590c:	push   0xffffffac
  40590e:	push   0xffffffe1
  405910:	cmp    esp,ecx
  405912:	loope  0x4058e0
  405914:	scas   eax,DWORD PTR es:[edi]
  405915:	retf   0x1e78
  405918:	movaps xmm4,XMMWORD PTR [esi-0x7aeb7c1]
  40591f:	jnp    0x405933
  405921:	mov    edx,0x4f1144fd
  405926:	outs   dx,DWORD PTR ds:[esi]
  405927:	add    eax,ecx
  405929:	adc    edi,esp
  40592b:	std    
  40592c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40592d:	push   ds
  40592e:	mov    BYTE PTR [eax-0x26],bl
  405931:	mov    eax,0xf1bc9ce2
  405936:	xchg   ebp,eax
  405937:	lahf   
  405938:	out    dx,al
  405939:	inc    esi
  40593a:	mov    cs,WORD PTR [edx+0x28]
  40593d:	inc    esp
  40593e:	or     eax,0xab3b4bc9
  405943:	mov    ds:0x32385e2d,eax
  405948:	div    DWORD PTR ss:[edx]
  40594b:	repz cmp BYTE PTR ds:0xc6d35404,bh
  405952:	xor    al,BYTE PTR [edx+0x14]
  405955:	fwait
  405956:	cmc    
  405957:	int    0x0
  405959:	out    0x72,eax
  40595b:	jge    0x40593d
  40595d:	sbb    al,BYTE PTR [ebp-0x6c]
  405960:	imul   ebx,DWORD PTR [eax],0xfffffffd
  405963:	xor    DWORD PTR [ebp-0x5f21eb95],edi
  405969:	sub    eax,0xcf31ff26
  40596e:	inc    edi
  40596f:	mov    eax,0x2655ed7a
  405974:	icebp  
  405975:	add    eax,0xd9e2f6c7
  40597a:	fs ds push edx
  40597d:	mov    edi,0x1e191f23
  405982:	sbb    ch,BYTE PTR [ebx-0x371de4b2]
  405988:	out    0x33,al
  40598a:	loope  0x40593a
  40598c:	mov    ecx,0x936598fb
  405991:	pusha  
  405992:	push   ds
  405993:	dec    edx
  405994:	cmp    esi,DWORD PTR [edi+0x76]
  405997:	xor    eax,0xc552827f
  40599c:	fild   WORD PTR [edx+edi*1+0x59]
  4059a0:	push   ss
  4059a1:	jl     0x4059d7
  4059a3:	test   ecx,ecx
  4059a5:	cmp    ecx,DWORD PTR [eax+0x4d9374f2]
  4059ab:	mov    eax,0xa183fb52
  4059b0:	push   esi
  4059b1:	jae    0x405974
  4059b3:	mov    ds:0x4f27421f,eax
  4059b8:	arpl   WORD PTR [eax],sp
  4059ba:	xchg   edx,eax
  4059bb:	adc    dh,BYTE PTR [edx-0x69b4b71]
  4059c1:	xor    cl,BYTE PTR [edx-0x205f9735]
  4059c7:	dec    ecx
  4059c8:	js     0x4059ae
  4059ca:	je     0x405965
  4059cc:	rcl    bl,1
  4059ce:	div    DWORD PTR [eax+ebp*2+0xd]
  4059d2:	mov    eax,ds:0x737dbccd
  4059d7:	and    al,0x5c
  4059d9:	inc    eax
  4059da:	aaa    
  4059db:	inc    ecx
  4059dc:	cs out dx,eax
  4059de:	mov    ss,WORD PTR [esi]
  4059e0:	push   esp
  4059e1:	lea    esp,[esi]
  4059e3:	es pushf 
  4059e5:	shr    ebp,1
  4059e7:	shl    dh,cl
  4059e9:	sub    BYTE PTR [ebp-0x275c726b],cl
  4059ef:	cmp    bh,ah
  4059f1:	and    eax,0x8e1f32a8
  4059f6:	ss jbe 0x4059bf
  4059f9:	shl    ebx,0x33
  4059fc:	clc    
  4059fd:	push   ecx
  4059fe:	add    DWORD PTR [ebx],esp
  405a00:	jnp    0x405a5b
  405a02:	cdq    
  405a03:	mov    edx,0x1a2e3b35
  405a08:	aas    
  405a09:	lods   al,BYTE PTR ds:[esi]
  405a0a:	pop    ss
  405a0b:	inc    eax
  405a0c:	xor    ah,BYTE PTR [eax]
  405a0e:	div    BYTE PTR [edi+0x12]
  405a11:	outs   dx,BYTE PTR ds:[esi]
  405a12:	test   eax,0x94d36cfe
  405a17:	ficom  DWORD PTR [eax+eiz*8+0x17]
  405a1b:	out    dx,al
  405a1c:	jmp    FWORD PTR [ebp+0x7d516467]
  405a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a23:	dec    si
  405a25:	push   edi
  405a26:	pop    ds
  405a27:	fistp  WORD PTR [ecx]
  405a29:	dec    ebp
  405a2a:	sbb    BYTE PTR [esi+0xa],ah
  405a2d:	inc    DWORD PTR [ecx+ebp*8]
  405a30:	dec    ebp
  405a31:	xor    dl,0xc1
  405a34:	adc    edi,eax
  405a36:	hlt    
  405a37:	test   DWORD PTR [esi-0x50b0cd82],eax
  405a3d:	and    eax,0x8c98d2fb
  405a42:	adc    DWORD PTR [ecx-0x9853b7e],0x24
  405a49:	js     0x405a79
  405a4b:	add    DWORD PTR [eax-0x3bfcc36],0xffffffe6
  405a52:	inc    esp
  405a53:	std    
  405a54:	adc    al,0xf7
  405a56:	std    
  405a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a58:	arpl   WORD PTR [eax-0x1f],sp
  405a5b:	pop    edx
  405a5c:	gs xchg esi,eax
  405a5e:	dec    edi
  405a5f:	pop    ds
  405a60:	jmp    0x5d65:0x172bc696
  405a67:	(bad)  
  405a68:	cmp    al,BYTE PTR [edi-0xf9f93cc]
  405a6e:	or     eax,0xbb8a610e
  405a73:	push   0x1b0dfb2
  405a78:	dec    ebp
  405a79:	cmp    DWORD PTR [edi+0x572fbd56],edx
  405a7f:	icebp  
  405a80:	inc    edi
  405a81:	(bad)  
  405a82:	push   esp
  405a83:	or     DWORD PTR [ebp+0x3d180399],eax
  405a89:	dec    esp
  405a8a:	push   eax
  405a8b:	push   0x2d255901
  405a90:	dec    eax
  405a91:	jnp    0x405aa5
  405a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a94:	loope  0x405a5b
  405a96:	in     eax,0x9e
  405a98:	enter  0xed,0x5b
  405a9c:	popf   
  405a9d:	mov    ds:0x60cb9290,eax
  405aa2:	scas   eax,DWORD PTR es:[edi]
  405aa3:	pop    ds
  405aa4:	fst    st(7)
  405aa6:	fisttp DWORD PTR [edi]
  405aa8:	sub    esp,edi
  405aaa:	add    ecx,edi
  405aac:	inc    esi
  405aad:	out    dx,al
  405aae:	mov    DWORD PTR [ebx+edi*1+0x29dcbdc8],ecx
  405ab5:	cmp    ebp,ecx
  405ab7:	jae    0x405a93
  405ab9:	ret    0xffe4
  405abc:	loop   0x405a9c
  405abe:	sbb    DWORD PTR [edi+eax*1],esi
  405ac1:	addr16 repnz inc eax
  405ac4:	sahf   
  405ac5:	jne    0x405a94
  405ac7:	jns    0x405a7d
  405ac9:	push   edi
  405aca:	scas   eax,DWORD PTR es:[edi]
  405acb:	mov    bl,0x82
  405acd:	xor    al,0xf3
  405acf:	xor    al,0xf0
  405ad1:	push   es
  405ad2:	rcl    DWORD PTR [ecx],cl
  405ad4:	std    
  405ad5:	iret   
  405ad6:	mov    ds,WORD PTR [eax+0x2e]
  405ad9:	fld    st(7)
  405adb:	jecxz  0x405ae4
  405add:	adc    DWORD PTR [edx+0x69d3875d],esp
  405ae3:	xchg   ebx,eax
  405ae4:	call   0xd61:0x972359c7
  405aeb:	pop    ebx
  405aec:	pop    ebp
  405aed:	cmp    edi,eax
  405aef:	xor    eax,0xd0d56957
  405af4:	int3   
  405af5:	sub    edx,DWORD PTR [ebp+0x677895ff]
  405afb:	xchg   esi,eax
  405afc:	test   al,0x4d
  405afe:	inc    edx
  405aff:	test   DWORD PTR [edi-0x378deea6],0xa41b9c4
  405b09:	push   ds
  405b0a:	dec    eax
  405b0b:	arpl   WORD PTR [ecx],di
  405b0d:	das    
  405b0e:	mov    ebp,0x29674eaa
  405b13:	shr    DWORD PTR [edi+0x3a],cl
  405b16:	daa    
  405b17:	add    al,0x21
  405b19:	div    BYTE PTR [eax]
  405b1b:	std    
  405b1c:	jle    0x405aff
  405b1e:	lods   al,BYTE PTR ds:[esi]
  405b1f:	xchg   DWORD PTR [ebp+0x5d],ecx
  405b22:	jg     0x405b1d
  405b24:	push   edi
  405b25:	fistp  QWORD PTR [edi]
  405b27:	cli    
  405b28:	iret   
  405b29:	aas    
  405b2a:	inc    bh
  405b2c:	loop   0x405ab1
  405b2e:	xlat   BYTE PTR ds:[ebx]
  405b2f:	scas   al,BYTE PTR es:[di]
  405b31:	inc    ebx
  405b32:	out    dx,al
  405b33:	ret    
  405b34:	test   eax,0x8e09af4
  405b39:	ds test edx,esi
  405b3c:	and    ebx,DWORD PTR [ebp+0x42]
  405b3f:	fdiv   DWORD PTR [eax-0x50af16d6]
  405b45:	aaa    
  405b46:	jae    0x405b81
  405b48:	int    0xf1
  405b4a:	dec    ebp
  405b4b:	clc    
  405b4c:	aas    
  405b4d:	sti    
  405b4e:	outs   dx,BYTE PTR ds:[esi]
  405b4f:	xor    ecx,ecx
  405b51:	xchg   ecx,eax
  405b52:	lods   al,BYTE PTR ds:[esi]
  405b53:	js     0x405bb5
  405b55:	fst    QWORD PTR [ebp-0x1b]
  405b58:	push   DWORD PTR [eax-0x1d]
  405b5b:	call   0xb63d:0xc8ca6f0d
  405b62:	sub    edi,esi
  405b64:	push   ds
  405b65:	scas   eax,DWORD PTR es:[edi]
  405b66:	and    DWORD PTR [edx+edx*2+0x4c],ebx
  405b6a:	inc    ebp
  405b6b:	arpl   WORD PTR [ebx],ax
  405b6d:	jecxz  0x405bd6
  405b6f:	xchg   ebx,eax
  405b70:	test   ch,dl
  405b72:	inc    edx
  405b73:	and    DWORD PTR [edi],ebx
  405b75:	popf   
  405b76:	je     0x405b0e
  405b78:	lea    edi,[edx]
  405b7a:	mov    ecx,0x5f980c49
  405b7f:	sti    
  405b80:	add    BYTE PTR [esi-0x4e],dh
  405b83:	cli    
  405b84:	mov    edx,0x977ad1ef
  405b89:	(bad)  
  405b8a:	aam    0x42
  405b8c:	aaa    
  405b8d:	add    dh,cl
  405b8f:	loope  0x405b2a
  405b91:	call   0xb63bb4be
  405b96:	shl    BYTE PTR [esi+0x379fb33e],cl
  405b9c:	adc    DWORD PTR [esi+0x2e64173d],esp
  405ba2:	inc    ebx
  405ba3:	pop    edx
  405ba4:	sbb    bh,dh
  405ba6:	push   ebx
  405ba7:	mov    dh,0xc1
  405ba9:	xchg   edx,eax
  405baa:	hlt    
  405bab:	dec    BYTE PTR [ebp-0x7d]
  405bae:	sub    eax,0x15a1a58f
  405bb3:	push   edi
  405bb4:	and    al,0x2
  405bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb7:	cmc    
  405bb8:	jno    0x405bd9
  405bba:	push   ebx
  405bbb:	and    DWORD PTR [ebx+0x43],0xffffffb7
  405bbf:	dec    eax
  405bc0:	sub    edi,DWORD PTR [ecx]
  405bc2:	jmp    0x405c3c
  405bc4:	mov    ah,0x38
  405bc6:	xchg   edi,eax
  405bc7:	in     al,dx
  405bc8:	ret    0xc88c
  405bcb:	push   eax
  405bcc:	xlat   BYTE PTR gs:[ebx]
  405bce:	je     0x405c13
  405bd0:	scas   eax,DWORD PTR es:[edi]
  405bd1:	and    bh,BYTE PTR [ebp+0x4508081b]
  405bd7:	xor    eax,0xcecbd20f
  405bdc:	repnz sbb DWORD PTR [ebp+0x79],eax
  405be0:	xchg   edx,eax
  405be1:	sub    bl,bh
  405be3:	iret   
  405be4:	out    0x17,eax
  405be6:	adc    DWORD PTR [eax],edi
  405be8:	sbb    esp,ebx
  405bea:	iret   
  405beb:	and    DWORD PTR [edi+0x3681989e],0xffffffda
  405bf2:	xor    DWORD PTR [eax+0x54bbad95],edi
  405bf8:	xchg   esp,eax
  405bf9:	pop    ebx
  405bfa:	cmp    al,0xfd
  405bfc:	out    dx,eax
  405bfd:	and    DWORD PTR [esi+0x5f27401a],ecx
  405c03:	popf   
  405c04:	push   ebx
  405c05:	inc    edi
  405c06:	dec    ebp
  405c07:	outs   dx,DWORD PTR ds:[esi]
  405c08:	sti    
  405c09:	add    DWORD PTR [edx+0x5d3b0510],edi
  405c0f:	(bad)  
  405c10:	out    0xc0,eax
  405c12:	jno    0x405c73
  405c14:	retf   0x21c1
  405c17:	mov    dh,0xa2
  405c1a:	jb     0x405bdd
  405c1c:	pushf  
  405c1d:	loope  0x405be5
  405c1f:	in     al,dx
  405c20:	fmul   st(3),st
  405c22:	xor    BYTE PTR [edi-0x5a2ce63c],0x71
  405c29:	xlat   BYTE PTR ds:[ebx]
  405c2a:	jg     0x405c1d
  405c2c:	push   edx
  405c2d:	mov    al,ds:0x8a06a0db
  405c32:	xlat   BYTE PTR ds:[ebx]
  405c33:	adc    eax,edx
  405c35:	dec    esp
  405c36:	in     eax,dx
  405c37:	inc    esi
  405c38:	cmp    eax,0x18248675
  405c3d:	leave  
  405c3e:	rcl    DWORD PTR [ecx],1
  405c40:	inc    ecx
  405c41:	fidiv  WORD PTR [ebx-0x2a]
  405c44:	or     eax,0x9273c9e
  405c49:	inc    eax
  405c4a:	test   BYTE PTR [esi+0x6d],bh
  405c4d:	xchg   BYTE PTR [esi-0x51],al
  405c50:	dec    edx
  405c51:	les    esi,FWORD PTR [ebx-0x7225e641]
  405c57:	add    al,0xa6
  405c59:	or     al,0x38
  405c5b:	std    
  405c5c:	shl    BYTE PTR [eax+0xd],cl
  405c5f:	leave  
  405c60:	into   
  405c61:	or     al,0xa7
  405c63:	out    dx,eax
  405c64:	push   ecx
  405c65:	(bad)  
  405c66:	leave  
  405c67:	push   es
  405c68:	aam    0x1e
  405c6a:	dec    edi
  405c6b:	leave  
  405c6c:	loopne 0x405c19
  405c6e:	mov    DWORD PTR ds:0xf6530de1,0x66c5a0fe
  405c78:	or     BYTE PTR [edx],bl
  405c7a:	(bad)  
  405c7b:	in     al,0xf0
  405c7d:	cmp    eax,0x7c67f448
  405c82:	jmp    0xd8b3:0xf47802da
  405c89:	mov    WORD PTR ds:0x90c5a563,gs
  405c8f:	sub    bh,BYTE PTR [edi]
  405c91:	leave  
  405c92:	cli    
  405c93:	mov    ebx,0xc20ea2ff
  405c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c99:	int3   
  405c9a:	mov    eax,ds:0xba07c72a
  405c9f:	dec    ebx
  405ca0:	daa    
  405ca1:	mov    al,ah
  405ca3:	in     al,dx
  405ca4:	adc    al,0x16
  405ca6:	push   0x46
  405ca8:	addr16 mov ebx,0xb08220fa
  405cae:	mov    BYTE PTR [ebp+0x569bcb6],dh
  405cb4:	stc    
  405cb5:	ret    0x4aa
  405cb8:	in     al,0xc7
  405cba:	add    ax,WORD PTR ds:0x87386af7
  405cc1:	or     bh,BYTE PTR [ecx+0x6548995c]
  405cc7:	sub    dl,BYTE PTR [ecx-0x7c7dce25]
  405ccd:	scas   al,BYTE PTR es:[di]
  405ccf:	mov    dl,0x5d
  405cd1:	cli    
  405cd2:	add    al,0x85
  405cd4:	mov    ecx,0xf6ddbd82
  405cd9:	xchg   ecx,eax
  405cda:	gs int 0xb9
  405cdd:	inc    eax
  405cde:	mov    esi,0x81795f4d
  405ce3:	popf   
  405ce4:	mov    eax,ds:0x60a90a49
  405ce9:	sbb    al,0x74
  405ceb:	out    0x4,al
  405ced:	push   ebp
  405cee:	jl     0x405c79
  405cf0:	dec    ebx
  405cf1:	and    BYTE PTR [esi],bl
  405cf3:	mov    edx,0xe0fc669
  405cf8:	and    BYTE PTR [edi+edx*8],bl
  405cfb:	pop    esp
  405cfc:	aas    
  405cfd:	repnz leave 
  405cff:	ss dec eax
  405d01:	ins    BYTE PTR es:[edi],dx
  405d02:	pop    ebx
  405d03:	test   eax,0xcbc05b15
  405d08:	pushf  
  405d09:	dec    edi
  405d0a:	lss    ebp,FWORD PTR [ecx+0x18fc0ca1]
  405d11:	pushf  
  405d12:	cli    
  405d13:	xchg   esp,eax
  405d14:	cmc    
  405d15:	mov    bh,dl
  405d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d18:	or     al,0xc4
  405d1a:	int    0x66
  405d1c:	mov    dh,bl
  405d1e:	pop    ds
  405d1f:	scas   al,BYTE PTR es:[edi]
  405d20:	add    edx,ecx
  405d22:	pop    ds
  405d23:	in     al,0xca
  405d25:	das    
  405d26:	xchg   ebx,ebx
  405d28:	xor    ah,ah
  405d2a:	add    BYTE PTR [ebx+0x58],ch
  405d2d:	arpl   bp,cx
  405d2f:	pop    edx
  405d30:	int    0xc5
  405d32:	mov    ds:0xa9c4b3c0,al
  405d37:	push   esp
  405d38:	lds    edx,FWORD PTR [ebx]
  405d3a:	call   0x79ca4f80
  405d3f:	pop    ecx
  405d40:	cmp    DWORD PTR [esi+ecx*4],ebx
  405d43:	and    edi,DWORD PTR [ecx+0x1f]
  405d46:	pop    esi
  405d47:	mov    esp,0xf367a7b
  405d4c:	bound  ebp,QWORD PTR [esi-0x17]
  405d4f:	xlat   BYTE PTR ds:[ebx]
  405d50:	sti    
  405d51:	inc    ecx
  405d52:	iret   
  405d53:	das    
  405d54:	mov    edi,0x3ae28e9c
  405d59:	jno    0x405ce4
  405d5b:	call   0xbb3e012b
  405d60:	xor    eax,0x5c1422e2
  405d65:	xlat   BYTE PTR ds:[ebx]
  405d66:	inc    ebx
  405d67:	(bad)  
  405d68:	(bad)  
  405d69:	das    
  405d6a:	adc    edi,DWORD PTR [edi+0x62ce484c]
  405d70:	jo     0x405d43
  405d72:	pop    ebx
  405d73:	pusha  
  405d74:	rcl    DWORD PTR ds:0x45ca4ddd,0xde
  405d7b:	mov    ebp,0x95d3b345
  405d80:	repz out dx,eax
  405d82:	pop    ebx
  405d83:	jae    0x405d86
  405d85:	and    BYTE PTR [edx+0x2e],ah
  405d88:	(bad)  [edx-0x42e13f73]
  405d8e:	inc    esp
  405d8f:	pop    es
  405d90:	cmp    al,0x21
  405d92:	leave  
  405d93:	iret   
  405d94:	mov    esi,0xc643d659
  405d99:	rcr    DWORD PTR [eax+0x1e],cl
  405d9c:	fisttp QWORD PTR [eax+ebx*2-0x53]
  405da0:	adc    edx,esp
  405da2:	sbb    al,0xd3
  405da4:	ret    0xe6f6
  405da7:	sahf   
  405da8:	call   0xaa9dac16
  405dad:	pop    es
  405dae:	push   eax
  405daf:	outs   dx,DWORD PTR ds:[esi]
  405db0:	add    bh,ah
  405db2:	in     eax,0x40
  405db4:	sbb    BYTE PTR [eax+esi*2+0x37],0xca
  405db9:	rsm    
  405dbb:	and    eax,0x19e1fb30
  405dc0:	retf   
  405dc1:	aam    0x9e
  405dc3:	jp     0x405d5f
  405dc5:	repnz inc edx
  405dc7:	pop    esi
  405dc8:	pop    es
  405dc9:	clc    
  405dca:	sar    BYTE PTR [ebp+0x45],0x9
  405dce:	xor    eax,0x52225318
  405dd3:	add    al,0xa8
  405dd5:	aaa    
  405dd6:	cmp    al,0xb0
  405dd8:	cwde   
  405dd9:	jle    0x405d62
  405ddb:	in     eax,dx
  405ddc:	fstp   DWORD PTR [eax-0x3524cf78]
  405de2:	mov    eax,ds:0xef433f74
  405de7:	(bad)  
  405de8:	(bad)  
  405de9:	cmp    eax,0x7dd657e2
  405dee:	mov    ah,0xf4
  405df0:	ficom  WORD PTR [eax-0x72da2d6b]
  405df6:	test   BYTE PTR [ecx],ch
  405df8:	dec    ebp
  405df9:	dec    ebx
  405dfa:	mov    WORD PTR [esi-0x1e4166ee],fs
  405e00:	(bad)  
  405e02:	cmp    al,0xc2
  405e04:	js     0x405df6
  405e06:	mov    dl,0xef
  405e08:	xor    ebp,DWORD PTR [edx]
  405e0a:	data16 jo 0x405e67
  405e0d:	mov    DWORD PTR [edx+0x6e],esp
  405e10:	add    al,BYTE PTR [eax-0x1faf8748]
  405e16:	pop    eax
  405e17:	and    al,0xf3
  405e19:	outs   dx,DWORD PTR ds:[esi]
  405e1a:	stos   BYTE PTR es:[edi],al
  405e1b:	adc    edi,edi
  405e1d:	cli    
  405e1e:	icebp  
  405e1f:	pop    ds
  405e20:	retf   0x4e20
  405e23:	or     eax,0x93f1c908
  405e28:	sbb    cl,0xc6
  405e2b:	adc    al,0x8b
  405e2d:	inc    ebx
  405e2e:	cmc    
  405e2f:	jnp    0x405e06
  405e31:	xchg   DWORD PTR [ebx-0xf],esp
  405e34:	cs fdivr st(3),st
  405e37:	ja     0x405e05
  405e39:	pop    ebx
  405e3a:	(bad)  
  405e3b:	mov    ebx,esi
  405e3d:	push   cs
  405e3e:	inc    eax
  405e3f:	cmp    BYTE PTR [esi],cl
  405e41:	xlat   BYTE PTR ds:[ebx]
  405e42:	popf   
  405e43:	test   DWORD PTR [edi-0x50064bc0],esp
  405e49:	and    eax,0x48e48568
  405e4e:	add    eax,0x31cdeaf7
  405e53:	pop    ebx
  405e54:	addr16 mov esp,0xc4b35819
  405e5a:	dec    eax
  405e5b:	dec    ecx
  405e5c:	mov    cl,0xab
  405e5e:	and    eax,0x13e87414
  405e63:	aad    0x2e
  405e65:	ss pop ds
  405e67:	xor    al,0xf3
  405e69:	mov    al,ds:0xdfbb472c
  405e6e:	bound  edx,QWORD PTR [eax-0x24]
  405e71:	aad    0x7f
  405e73:	stos   DWORD PTR es:[edi],eax
  405e74:	inc    esi
  405e75:	sub    ebx,DWORD PTR [edi]
  405e77:	ret    
  405e78:	(bad)  [edi+0x30]
  405e7b:	mov    dh,0xd8
  405e7d:	shr    DWORD PTR [eax+0x44],cl
  405e80:	sti    
  405e81:	dec    esp
  405e82:	push   cs
  405e83:	and    BYTE PTR [ecx-0x3f],bh
  405e86:	or     DWORD PTR [ebx+0x1],esi
  405e89:	mov    ds:0x4171c07,al
  405e8e:	xchg   BYTE PTR [ebx],ah
  405e90:	xor    eax,DWORD PTR [edi-0x19d584f9]
  405e96:	adc    bh,al
  405e98:	mov    ebp,0x45aa47b8
  405e9d:	cmp    BYTE PTR [eax-0x1],ch
  405ea0:	xchg   esp,eax
  405ea1:	cdq    
  405ea2:	xchg   esp,eax
  405ea3:	sub    DWORD PTR ds:0xc7b1cb7e,ebx
  405ea9:	adc    bl,BYTE PTR [ecx+0x3b35916e]
  405eaf:	pop    esi
  405eb0:	mov    ch,0xaa
  405eb2:	push   0x6d
  405eb4:	iret   
  405eb5:	xchg   esi,eax
  405eb6:	fstp   st(3)
  405eb8:	sub    bh,ah
  405eba:	add    ebp,DWORD PTR [esi]
  405ebc:	cmp    al,0xe4
  405ebe:	inc    esp
  405ebf:	jge    0x405eef
  405ec1:	(bad)  
  405ec2:	test   eax,0x72ff6449
  405ec7:	lods   al,BYTE PTR fs:[esi]
  405ec9:	sub    cl,dh
  405ecb:	jb     0x405f19
  405ecd:	jecxz  0x405f49
  405ecf:	mov    BYTE PTR [ebx+0x34],0x5d
  405ed3:	xchg   esp,eax
  405ed4:	fisubr DWORD PTR ds:[eax]
  405ed7:	adc    al,0x1b
  405ed9:	rcr    bh,cl
  405edb:	pop    ds
  405edc:	inc    esp
  405edd:	in     al,0xe9
  405edf:	and    ah,0x36
  405ee2:	add    bl,BYTE PTR [ecx+0x64]
  405ee5:	ror    BYTE PTR [ebp+ebp*8+0x6be5d67a],cl
  405eec:	mov    bl,0xca
  405eee:	cmp    al,0x14
  405ef0:	adc    BYTE PTR [eax],ch
  405ef2:	(bad)  [ebx-0x3a]
  405ef5:	and    edi,DWORD PTR [ecx+0x3e]
  405ef8:	pop    es
  405ef9:	mov    ecx,0x3d750bec
  405efe:	sub    DWORD PTR [edi-0x6c],0x66
  405f02:	xchg   ebp,eax
  405f03:	jl     0x405f82
  405f05:	jb     0x405ea2
  405f07:	sar    BYTE PTR [eax-0x34],0x3d
  405f0b:	adc    al,0x5a
  405f0d:	sbb    eax,0x1d079d29
  405f12:	pop    es
  405f13:	fcomp  DWORD PTR [ecx]
  405f15:	xchg   ebx,eax
  405f16:	adc    DWORD PTR [edi],ecx
  405f18:	out    0x7,al
  405f1a:	enter  0x2618,0x34
  405f1e:	sub    al,0x31
  405f20:	mov    esp,DWORD PTR [esi]
  405f22:	add    bh,al
  405f24:	ficom  WORD PTR [edi-0x37444744]
  405f2a:	adc    al,0x1a
  405f2c:	(bad)  
  405f2d:	cli    
  405f2e:	inc    esi
  405f2f:	mov    eax,0xc5acb94f
  405f34:	push   edi
  405f35:	and    dh,BYTE PTR [eax+0x7b86cc4e]
  405f3b:	xchg   ebp,eax
  405f3c:	mov    ebx,DWORD PTR [eax]
  405f3e:	dec    esi
  405f3f:	push   0xffffffbf
  405f41:	lds    esi,FWORD PTR [edi+0x6d]
  405f44:	out    dx,eax
  405f45:	sbb    al,0xbb
  405f47:	sub    BYTE PTR ds:0x6569e4c6,0x1f
  405f4e:	and    eax,0x7300a204
  405f53:	je     0x405efe
  405f55:	xchg   esp,eax
  405f56:	leave  
  405f57:	imul   edx,DWORD PTR [esi+0x60],0x37
  405f5b:	loop   0x405f58
  405f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5e:	and    cl,BYTE PTR gs:[eax+edx*8-0x7527510d]
  405f66:	inc    ebx
  405f67:	outs   dx,BYTE PTR ds:[esi]
  405f68:	pand   mm1,QWORD PTR [esi]
  405f6b:	xor    BYTE PTR [ecx+eax*4+0x20da4014],0x68
  405f73:	es daa 
  405f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f76:	(bad)  
  405f77:	int3   
  405f78:	dec    edi
  405f79:	mov    ebp,0x19e7535b
  405f7e:	jae    0x405f97
  405f80:	and    bh,BYTE PTR [esi-0x2]
  405f83:	sbb    DWORD PTR [ecx+0x7d],esp
  405f86:	sub    BYTE PTR [edx],al
  405f88:	inc    esp
  405f89:	ror    BYTE PTR [ecx-0x7c],cl
  405f8c:	out    dx,eax
  405f8d:	aam    0xfd
  405f8f:	outs   dx,DWORD PTR ds:[esi]
  405f90:	mov    BYTE PTR [esi],dh
  405f92:	sbb    BYTE PTR [eax-0x382490e0],cl
  405f98:	rcl    BYTE PTR [esi+0x25],0xb5
  405f9c:	push   0x8449a5d3
  405fa1:	fs call 0x992a:0x4c3475fb
  405fa9:	fstp   DWORD PTR [ebx+0x6d]
  405fac:	jmp    0x405f63
  405fae:	adc    cl,BYTE PTR [esi]
  405fb0:	mov    ds:0xa5ed7b86,al
  405fb5:	loop   0x405f3b
  405fb7:	push   0x38
  405fb9:	xchg   edi,eax
  405fba:	mov    ecx,DWORD PTR [esi-0x1]
  405fbd:	aaa    
  405fbe:	push   eax
  405fbf:	jns    0x40603a
  405fc1:	push   cs
  405fc2:	out    dx,eax
  405fc3:	inc    ecx
  405fc4:	and    eax,DWORD PTR [ebp+0x552d7f0a]
  405fca:	das    
  405fcb:	or     edi,DWORD PTR [ebp+0x37]
  405fce:	in     eax,dx
  405fcf:	adc    al,0xe7
  405fd1:	adc    DWORD PTR [ebx-0x296a876],0xe0f9c257
  405fdb:	mov    dl,0xe
  405fdd:	adc    BYTE PTR [ebx+0x5f],al
  405fe0:	iret   
  405fe1:	pop    ecx
  405fe2:	nop
  405fe3:	xor    BYTE PTR [ecx+eiz*2],0xd1
  405fe7:	aaa    
  405fe8:	call   edx
  405fea:	call   0x2cd1:0x596b70e0
  405ff1:	jns    0x40601b
  405ff3:	cmc    
  405ff4:	add    BYTE PTR [ecx+0x54],dl
  405ff7:	sar    DWORD PTR [ecx+0x73fe37d6],0x34
  405ffe:	xchg   ebx,eax
  405fff:	mov    dh,0x84
  406001:	loop   0x40606d
  406003:	cli    
  406004:	pop    ecx
  406005:	add    al,0x79
  406007:	aas    
  406008:	test   BYTE PTR [esi+0x2],dl
  40600b:	ret    0xed0
  40600e:	mov    esi,0xb234919b
  406013:	aad    0x4b
  406015:	jo     0x405fc3
  406017:	fsub   DWORD PTR [eax+0x48c2f8b7]
  40601d:	inc    esi
  40601e:	mov    BYTE PTR [esi-0xb0f0027],bl
  406024:	or     ebx,0xffffffe7
  406027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406028:	sbb    eax,0xd161336d
  40602d:	push   esp
  40602e:	ret    0xb8c8
  406031:	sbb    eax,0x6faa0f04
  406036:	sbb    edx,eax
  406038:	lock xor eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	in     eax,0xce
  40615e:	jae    0x4061b0
  406160:	pop    ebx
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	adc    DWORD PTR [edx+ecx*2-0x11c601fa],0xffffff89
  40616f:	(bad)  
  406170:	push   esp
  406171:	shr    DWORD PTR [edx-0x3e],1
  406174:	imul   ecx,DWORD PTR [esi+0x3dabc5c3],0xffe2202a
  40617e:	mov    edx,0xad07f3a
  406183:	cmp    esp,DWORD PTR [ecx+eax*2-0x68c125aa]
  40618a:	(bad)  
  40618c:	push   ebp
  40618d:	dec    esp
  40618e:	ss icebp 
  406190:	mov    al,ds:0x908304b4
  406195:	add    DWORD PTR [edx],edi
  406197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406198:	arpl   WORD PTR [ebp-0x1c0f891a],ax
  40619e:	call   0x7e70dba3
  4061a3:	sbb    bh,ch
  4061a5:	mov    ch,0x57
  4061a7:	loopne 0x4061d8
  4061a9:	daa    
  4061aa:	icebp  
  4061ab:	lahf   
  4061ac:	dec    esi
  4061ad:	mov    edx,0x58469a0d
  4061b2:	sub    cl,bl
  4061b4:	cli    
  4061b5:	push   esi
  4061b6:	call   0xf382:0x8fa2273c
  4061bd:	xchg   ebx,eax
  4061be:	mov    WORD PTR [ebx-0x54584419],?
  4061c4:	clc    
  4061c5:	rcl    BYTE PTR [edi-0x50f68d1a],0x45
  4061cc:	push   es
  4061cd:	loope  0x4061db
  4061cf:	lods   eax,DWORD PTR ds:[esi]
  4061d0:	sbb    eax,0x5a8de798
  4061d5:	je     0x406254
  4061d7:	jl     0x4061c2
  4061d9:	repnz lods al,BYTE PTR ds:[esi]
  4061db:	les    edi,FWORD PTR [eax+eax*4-0x651c0f07]
  4061e2:	mov    DWORD PTR [eax-0x3d3c1614],ebp
  4061e8:	lds    ecx,FWORD PTR [edi+0x5918a432]
  4061ee:	test   dh,bh
  4061f0:	fs pop ds
  4061f2:	xor    esi,ecx
  4061f4:	out    0xb8,al
  4061f6:	pop    edx
  4061f7:	jnp    0x406265
  4061f9:	(bad)  
  4061fa:	scas   eax,DWORD PTR es:[edi]
  4061fb:	stc    
  4061fc:	mov    BYTE PTR [edx+0x1defbc52],bh
  406202:	mov    ds:0x96a77621,al
  406207:	in     al,dx
  406208:	push   eax
  406209:	adc    cl,bh
  40620b:	cmp    edi,edx
  40620d:	fstp   DWORD PTR [ebx-0x5aef2c34]
  406213:	inc    ecx
  406214:	daa    
  406215:	clc    
  406216:	unpckhps xmm0,XMMWORD PTR [eax+edx*4-0x47]
  40621b:	xor    cl,BYTE PTR [ebp-0x5f673f64]
  406221:	mov    cl,0x28
  406223:	jne    0x406241
  406225:	mov    ebp,ebx
  406227:	repnz ins BYTE PTR es:[edi],dx
  406229:	and    BYTE PTR [edi],cl
  40622b:	xchg   edi,eax
  40622c:	mov    esi,0x2bfcbadc
  406231:	mov    edx,0xd7d63477
  406236:	adc    DWORD PTR [esi],edi
  406238:	sar    DWORD PTR [esi-0x29f950bb],cl
  40623e:	imul   ebp,DWORD PTR [eax+0x3d],0xffffffa5
  406242:	pop    ds
  406243:	cmc    
  406244:	pushf  
  406245:	dec    ecx
  406246:	test   esi,eax
  406248:	out    dx,eax
  406249:	dec    ecx
  40624a:	mov    ?,WORD PTR [edx]
  40624c:	sub    bh,BYTE PTR [ebx+0x4c]
  40624f:	stos   DWORD PTR es:[edi],eax
  406250:	mov    ah,0x9c
  406252:	or     eax,0x8cc548b3
  406257:	test   DWORD PTR [ebx+0x56],esi
  40625a:	jb     0x406286
  40625c:	vaesdec xmm4{k3},xmm2,XMMWORD PTR [edi+0x5c0]
  406263:	test   DWORD PTR [eax],ecx
  406265:	arpl   WORD PTR [ebx+0x44291374],si
  40626b:	xchg   BYTE PTR [eax-0x37],ch
  40626e:	cmp    DWORD PTR [edx+0x23],eax
  406271:	rol    DWORD PTR [esi-0x17],cl
  406274:	aas    
  406275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406276:	xor    eax,0x712b811f
  40627b:	inc    edi
  40627c:	dec    esp
  40627d:	call   0x54d30775
  406282:	mov    eax,ds:0x5a5e5a9c
  406287:	push   0xffffffca
  406289:	loop   0x40628d
  40628b:	cmp    esp,esi
  40628d:	jb     0x4062cc
  40628f:	sbb    edi,esp
  406291:	pop    ds
  406292:	add    ah,0xa9
  406295:	or     BYTE PTR [ebx+0x2e97bf8f],cl
  40629b:	xchg   ebx,eax
  40629c:	aad    0x5f
  40629e:	in     al,0x65
  4062a0:	sbb    DWORD PTR [edx-0x3a],eax
  4062a3:	cmp    esi,DWORD PTR [edx]
  4062a5:	scas   al,BYTE PTR es:[edi]
  4062a6:	xchg   ebx,eax
  4062a7:	mov    WORD PTR [ebp+0x5032fc4],gs
  4062ad:	shl    BYTE PTR [eax+0x55d96102],0x24
  4062b4:	cmp    eax,0x83f0d9ee
  4062b9:	jbe    0x406269
  4062bb:	std    
  4062bc:	mov    bh,0x4c
  4062be:	out    dx,al
  4062bf:	mov    DWORD PTR [eax+esi*2],ebx
  4062c2:	dec    esp
  4062c3:	adc    eax,0x8a383680
  4062c8:	fsubr  QWORD PTR cs:[eax]
  4062cb:	or     eax,0x41b23336
  4062d0:	retf   
  4062d1:	dec    esp
  4062d2:	push   es
  4062d3:	xor    eax,edi
  4062d5:	and    ecx,DWORD PTR [ebx+0x531243d7]
  4062db:	pushf  
  4062dc:	mov    eax,0x196f6825
  4062e1:	xchg   edx,eax
  4062e2:	scas   al,BYTE PTR es:[edi]
  4062e3:	(bad)  
  4062e4:	(bad)  
  4062e5:	lods   eax,DWORD PTR ds:[esi]
  4062e6:	imul   esi,DWORD PTR [edi+0x62],0x2c
  4062ea:	sub    al,0xf6
  4062ec:	and    BYTE PTR [edi-0x55],dl
  4062ef:	sar    BYTE PTR [ebp+0x1c216538],1
  4062f5:	repz stc 
  4062f7:	cmc    
  4062f8:	sbb    DWORD PTR [ebp-0x6a0ae494],esi
  4062fe:	pop    ebp
  4062ff:	loop   0x40631a
  406301:	push   cs
  406302:	out    dx,eax
  406303:	cmp    al,0x1e
  406305:	lahf   
  406306:	sar    dl,1
  406308:	neg    ecx
  40630a:	imul   ebx,DWORD PTR [edx+0x2be9caaf],0xc0e0c273
  406314:	xchg   ecx,eax
  406315:	push   0xffffff90
  406317:	mul    BYTE PTR [edi+ebp*8-0x80]
  40631b:	mov    edi,0x5015d582
  406320:	call   FWORD PTR fs:[ebx-0x33]
  406324:	mov    eax,ds:0x7e162d25
  406329:	cmp    ebp,esi
  40632b:	in     al,0x1a
  40632d:	push   es
  40632e:	jmp    0xec437833
  406333:	call   FWORD PTR [ecx+0x44]
  406336:	fwait
  406337:	pusha  
  406338:	mov    esi,0xebcc2e82
  40633d:	hlt    
  40633e:	cmp    ecx,DWORD PTR [edi+0x140c43c6]
  406344:	mov    ds,WORD PTR [ecx]
  406346:	int3   
  406347:	adc    al,0x76
  406349:	pop    edx
  40634a:	cmp    DWORD PTR [ebx+0x1a],0x4c
  40634e:	cmp    DWORD PTR [edi+0x18],edx
  406351:	cs xchg edx,eax
  406353:	adc    DWORD PTR [eax-0x62],edi
  406356:	dec    esi
  406357:	jnp    0x4062e4
  406359:	in     al,dx
  40635a:	sbb    DWORD PTR [ebx+0x30],0xffffffbd
  40635e:	call   0x213c:0xcdb3ac02
  406365:	mov    gs,WORD PTR [ebp+0x63807c64]
  40636b:	shr    DWORD PTR [ebp-0x5f],cl
  40636e:	push   ss
  40636f:	cmp    eax,0x20c435b
  406374:	pop    es
  406375:	in     eax,dx
  406376:	xchg   edx,eax
  406377:	dec    esp
  406378:	mov    edi,0xf2e4400c
  40637d:	push   ebx
  40637e:	or     BYTE PTR ds:0x59512d05,dl
  406384:	retf   
  406385:	icebp  
  406386:	mov    dl,0xa5
  406388:	jg     0x406314
  40638a:	es pop eax
  40638c:	aas    
  40638d:	jmp    0xdac49962
  406392:	dec    ebp
  406393:	pop    ebx
  406394:	pop    eax
  406395:	mov    dl,0x5f
  406397:	rol    BYTE PTR [esi-0x9],cl
  40639a:	xor    DWORD PTR [edx],ebp
  40639c:	push   ds
  40639d:	jp     0x40638a
  40639f:	fisttp QWORD PTR [edx-0x14]
  4063a2:	retf   
  4063a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a4:	xchg   ebx,eax
  4063a5:	xor    BYTE PTR [eax-0x5c682c9f],0x74
  4063ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ad:	push   edx
  4063ae:	mov    esp,0x84d26dc7
  4063b3:	or     eax,0xe92c01e1
  4063b8:	or     edx,DWORD PTR [eax-0x3dd1b609]
  4063be:	fsub   QWORD PTR [ecx-0x41a82b1]
  4063c4:	adc    eax,0xa7ebae85
  4063c9:	jecxz  0x40635b
  4063cb:	xchg   ebp,eax
  4063cc:	pop    edi
  4063cd:	dec    ecx
  4063ce:	ja     0x406403
  4063d0:	add    BYTE PTR [eax*8-0x6b7e8da9],al
  4063d7:	stos   BYTE PTR es:[edi],al
  4063d8:	out    dx,eax
  4063d9:	into   
  4063da:	pop    ecx
  4063db:	cmp    DWORD PTR [esi],ebp
  4063dd:	ret    
  4063de:	lea    edi,[esi-0x5dcd9e7d]
  4063e4:	cli    
  4063e5:	xbegin 0x3734d748
  4063eb:	in     al,dx
  4063ec:	xchg   esi,eax
  4063ed:	mov    dh,BYTE PTR [esi-0x39]
  4063f0:	push   ds
  4063f1:	fild   WORD PTR ds:0x58f2539d
  4063f7:	out    dx,eax
  4063f8:	mov    al,0x86
  4063fa:	push   esi
  4063fb:	mov    DWORD PTR [ecx],ecx
  4063fd:	pop    eax
  4063fe:	mov    esi,0x11976117
  406403:	pop    esi
  406404:	xchg   edx,eax
  406405:	gs cmc 
  406407:	loope  0x406394
  406409:	mov    WORD PTR [edx],?
  40640b:	aad    0xdd
  40640d:	hlt    
  40640e:	ja     0x406435
  406410:	(bad)  
  406412:	xor    DWORD PTR [ebx-0x60],esi
  406415:	hlt    
  406416:	in     al,0xb0
  406418:	sbb    DWORD PTR [esp+esi*2-0x4b],esi
  40641c:	inc    ebp
  40641d:	jb     0x406492
  40641f:	imul   ebp,DWORD PTR [esi],0x6184d8ca
  406425:	fisttp QWORD PTR [edx-0x9]
  406428:	pop    ecx
  406429:	mov    BYTE PTR [edx],ch
  40642b:	ss in  eax,0x78
  40642e:	xor    bh,ch
  406430:	adc    eax,ebx
  406432:	idiv   DWORD PTR [ecx]
  406434:	fidivr WORD PTR [eax+0x6b]
  406437:	fidiv  DWORD PTR [edi+0xe]
  40643a:	sbb    BYTE PTR [eax],dh
  40643c:	rol    ebx,1
  40643e:	push   esp
  40643f:	mov    al,ds:0xd7806ba9
  406444:	mov    al,ds:0x44cbba47
  406449:	xor    al,0x2b
  40644b:	inc    ebx
  40644c:	pop    es
  40644d:	test   BYTE PTR [edx+0xc],al
  406450:	pop    ebx
  406451:	ja     0x406453
  406453:	lds    eax,FWORD PTR [ecx]
  406455:	mov    edi,0xd4db4314
  40645a:	(bad)  
  40645b:	and    ah,ah
  40645d:	mov    ds:0x535da144,al
  406462:	xchg   esi,eax
  406463:	leave  
  406464:	jnp    0x4064ac
  406466:	fmulp  st(4),st
  406468:	or     DWORD PTR [edi],edx
  40646a:	jne    0x4064e3
  40646c:	mov    ebp,0x134fea95
  406471:	das    
  406472:	xchg   BYTE PTR [eax+0x48],cl
  406475:	in     eax,dx
  406476:	jmp    0xcf92fdc8
  40647b:	out    0xb9,eax
  40647d:	(bad)  
  40647e:	dec    esp
  40647f:	ins    BYTE PTR es:[edi],dx
  406480:	outs   dx,BYTE PTR ds:[esi]
  406481:	or     dh,cl
  406483:	xchg   BYTE PTR [ecx],ch
  406485:	add    bh,al
  406487:	jns    0x406435
  406489:	pop    ebp
  40648a:	cmc    
  40648b:	shl    BYTE PTR [ebx+edx*4-0x6f7975f4],1
  406492:	sub    ebp,edx
  406494:	dec    esi
  406495:	in     al,0xfb
  406497:	mov    eax,ds:0x4f4bae6d
  40649c:	and    esp,esp
  40649e:	xor    bl,BYTE PTR [eax]
  4064a0:	mov    ds:0xfd03d552,eax
  4064a5:	leave  
  4064a6:	push   ebp
  4064a7:	test   al,0x2b
  4064a9:	div    DWORD PTR [edx]
  4064ab:	cli    
  4064ac:	xlat   BYTE PTR ds:[ebx]
  4064ad:	mov    al,0xdb
  4064af:	or     al,0xc5
  4064b1:	sub    DWORD PTR [edi+ebp*2],ebp
  4064b4:	jecxz  0x40651f
  4064b6:	push   esi
  4064b7:	cs xchg esp,eax
  4064b9:	or     al,0xf9
  4064bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bc:	aad    0xcd
  4064be:	or     eax,0x86a8f675
  4064c3:	dec    edx
  4064c4:	mov    ecx,0x992156b6
  4064c9:	or     esp,DWORD PTR [edx+ecx*4-0x3700fe5]
  4064d0:	xor    eax,0xffda0abf
  4064d5:	jecxz  0x4064d8
  4064d7:	mov    ?,esi
  4064d9:	mov    cs,WORD PTR [ebx-0x1a4bf974]
  4064df:	loope  0x406464
  4064e1:	popfw  
  4064e3:	mov    ah,0x46
  4064e5:	sub    bh,bl
  4064e7:	xlat   BYTE PTR ds:[ebx]
  4064e8:	pop    ds
  4064e9:	xchg   ecx,eax
  4064ea:	jae    0x40646f
  4064ec:	ror    DWORD PTR [esi-0x43],0x75
  4064f0:	push   es
  4064f1:	mov    bh,0xd6
  4064f3:	fisub  WORD PTR [esi]
  4064f5:	inc    esp
  4064f6:	jmp    0x96ccdf63
  4064fb:	inc    edi
  4064fc:	fwait
  4064fd:	add    al,0xb
  4064ff:	jnp    0x40656f
  406501:	js     0x4064ad
  406503:	(bad)  
  406504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406505:	test   eax,0x8020ed3b
  40650a:	test   ch,dl
  40650c:	add    eax,0x149e070d
  406511:	sbb    eax,0x2e7cfad9
  406516:	jp     0x406545
  406518:	stos   BYTE PTR es:[edi],al
  406519:	test   al,0xba
  40651b:	xlat   BYTE PTR ds:[ebx]
  40651c:	dec    esp
  40651d:	mov    bl,0xe7
  40651f:	inc    esp
  406520:	rol    BYTE PTR [ebx+0xe2aefce],0x5
  406527:	mov    esi,DWORD PTR [ebx+0x7cdc3255]
  40652d:	mov    WORD PTR [esi+ebp*1],cs
  406530:	jl     0x4064df
  406532:	mov    al,ds:0x6a048725
  406537:	es mov dl,0x13
  40653a:	ret    
  40653b:	or     ebp,DWORD PTR [ebx]
  40653d:	test   cl,dh
  40653f:	out    0x96,al
  406541:	pop    edi
  406542:	jge    0x40651e
  406544:	and    DWORD PTR [edi],0x7c
  406547:	aas    
  406548:	pushf  
  406549:	ds daa 
  40654b:	pusha  
  40654c:	push   esi
  40654d:	jo     0x40655b
  40654f:	xor    DWORD PTR [edx],0x49ea97d9
  406555:	sub    BYTE PTR [ebx-0x243cda39],0x19
  40655c:	test   DWORD PTR [ebp-0x77],eax
  40655f:	rcr    eax,0x98
  406562:	retf   
  406563:	mov    dl,0x91
  406565:	push   0x662e0510
  40656a:	retf   0xe8c7
  40656d:	and    cl,BYTE PTR [ebx+0x35d96fb0]
  406573:	into   
  406574:	ret    
  406575:	pop    ds
  406576:	ret    0xdb38
  406579:	mov    eax,edx
  40657b:	mov    eax,0xdfc59e59
  406580:	inc    eax
  406581:	inc    ebp
  406582:	fist   WORD PTR [edi+0x3e]
  406585:	jg     0x406601
  406587:	jl     0x40653c
  406589:	or     eax,0xe8155f53
  40658e:	test   edi,0x83602c7e
  406594:	add    eax,0x41489660
  406599:	mov    esi,0xd64adfc2
  40659e:	mov    dl,0x3f
  4065a0:	mov    bh,0xa9
  4065a2:	add    DWORD PTR [ebx+0x5b0f39f6],esi
  4065a8:	not    BYTE PTR [esi]
  4065aa:	jge    0x4065de
  4065ac:	sti    
  4065ad:	fstp   DWORD PTR [edx+ebp*4-0x2d4ac6f3]
  4065b4:	sbb    ecx,ebx
  4065b6:	scas   eax,DWORD PTR es:[edi]
  4065b7:	push   esi
  4065b8:	xor    ecx,DWORD PTR [esi+esi*8+0x5c95f8dd]
  4065bf:	sbb    edi,ebp
  4065c1:	add    DWORD PTR [eax+0x54],0xffffffd1
  4065c5:	ja     0x406642
  4065c7:	rcl    cl,cl
  4065c9:	mov    BYTE PTR [eax-0x61],cl
  4065cc:	mov    edx,DWORD PTR [ebx+edx*8-0x61f591f2]
  4065d3:	addr16 sbb eax,0x2b391e66
  4065d9:	inc    esp
  4065da:	push   ss
  4065db:	pop    esi
  4065dc:	sbb    dh,BYTE PTR [ecx]
  4065de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065df:	mov    DWORD PTR [ebx+0xd5cc68a],edx
  4065e5:	sub    BYTE PTR [ebx+0x490d186e],0x8a
  4065ec:	mov    dl,0x57
  4065ee:	stos   BYTE PTR es:[edi],al
  4065ef:	add    BYTE PTR [edi+0x6f],al
  4065f2:	jae    0x406649
  4065f4:	inc    ebx
  4065f5:	repnz jmp 0x6ae5:0xf94b3c75
  4065fd:	adc    bh,dl
  4065ff:	int3   
  406600:	out    0xd1,al
  406602:	(bad)  
  406603:	js     0x406671
  406605:	dec    edx
  406606:	sub    esp,DWORD PTR [ecx-0x534f81af]
  40660c:	mov    ch,0xc6
  40660e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40660f:	rcr    BYTE PTR [edx],cl
  406611:	add    edx,esi
  406613:	xchg   esp,eax
  406614:	mov    eax,0xcc4b23b0
  406619:	mov    bl,0x86
  40661b:	sub    BYTE PTR [eax-0x1451e951],ch
  406621:	lods   eax,DWORD PTR ds:[esi]
  406622:	add    ebx,DWORD PTR ds:0x61afd43f
  406628:	mov    cl,0x12
  40662a:	sbb    dl,bh
  40662c:	mov    ch,0x12
  40662e:	xchg   ecx,eax
  40662f:	push   ebx
  406630:	add    bl,al
  406632:	(bad)  
  406633:	rcl    BYTE PTR [esi],cl
  406635:	sub    esi,esp
  406637:	(bad)  
  406638:	aas    
  406639:	stc    
  40663a:	push   esi
  40663b:	sbb    al,0xe6
  40663d:	fdivr  st(7),st
  40663f:	retf   0x2fc5
  406642:	lea    edx,[ecx-0x6c4cac55]
  406648:	and    DWORD PTR [edi-0x64],ecx
  40664b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40664c:	stos   DWORD PTR es:[edi],eax
  40664d:	lea    eax,[edi+0x6468633c]
  406653:	push   ecx
  406654:	xchg   ebx,eax
  406655:	in     al,0x37
  406657:	ror    dl,1
  406659:	inc    edx
  40665a:	fucomip st,st(5)
  40665c:	jno    0x4065e5
  40665e:	test   ebx,esi
  406660:	lods   eax,DWORD PTR ds:[esi]
  406661:	mov    eax,ds:0x5ad17310
  406666:	ficomp WORD PTR [eax-0x3d5d74ea]
  40666c:	cmp    DWORD PTR [esi-0x79],ebp
  40666f:	pop    ss
  406670:	and    al,0xd6
  406672:	or     eax,0x6230fa37
  406677:	nop
  406678:	in     al,0x47
  40667a:	sbb    BYTE PTR [esi-0x4],cl
  40667d:	mov    ch,0xda
  40667f:	or     DWORD PTR [esi+0x17],eax
  406682:	in     eax,0xbe
  406684:	and    eax,edi
  406686:	mov    al,BYTE PTR [edi+0x40]
  406689:	jo     0x4066b3
  40668b:	in     al,dx
  40668c:	push   edi
  40668d:	in     al,dx
  40668e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40668f:	sti    
  406690:	or     al,0x1b
  406692:	arpl   WORD PTR [eax-0x1d70f638],cx
  406698:	adc    al,0x76
  40669a:	push   edi
  40669b:	imul   eax,DWORD PTR [ebx-0x18],0xffffff9f
  40669f:	ror    DWORD PTR [edi+0x4b],cl
  4066a2:	mov    esi,0x6801235c
  4066a7:	sub    eax,0xe669509e
  4066ac:	imul   edi,ebx,0x757bf88b
  4066b2:	enter  0x6340,0x42
  4066b6:	ror    DWORD PTR [edx-0x55],1
  4066b9:	dec    DWORD PTR [ecx]
  4066bb:	sub    DWORD PTR [edi],ebx
  4066bd:	cwde   
  4066be:	jmp    0x92f7:0xf5bf292f
  4066c5:	jp     0x4066ad
  4066c7:	(bad)  
  4066c8:	in     al,0x1a
  4066ca:	sti    
  4066cb:	sahf   
  4066cc:	cli    
  4066cd:	jns    0x4066b8
  4066cf:	push   ds
  4066d0:	or     eax,0xb50197d3
  4066d5:	rcr    esi,cl
  4066d7:	div    DWORD PTR [ecx-0x69]
  4066da:	mov    dl,0x7e
  4066dc:	sbb    DWORD PTR [ecx+0x17],esi
  4066df:	imul   ebx,DWORD PTR ds:0xa2258bf3,0x9c7fdb5a
  4066e9:	push   eax
  4066ea:	in     al,0xf2
  4066ec:	push   eax
  4066ed:	arpl   dx,cx
  4066ef:	or     al,0xb6
  4066f1:	fld    st(1)
  4066f3:	ins    BYTE PTR es:[edi],dx
  4066f4:	mov    DWORD PTR [eax*2+0x66863953],ecx
  4066fb:	mov    ch,0x5a
  4066fd:	mov    BYTE PTR ds:0x1efc8528,dl
  406703:	ret    0x4ca7
  406706:	nop
  406707:	(bad)  
  406708:	xor    eax,0x8811d8dc
  40670d:	mov    esp,0x973dc330
  406712:	arpl   WORD PTR [ecx+0x1f],si
  406715:	push   ds
  406716:	pop    eax
  406717:	dec    ebp
  406718:	jne    0x4066e4
  40671a:	mov    ecx,ss
  40671c:	sub    al,0x41
  40671e:	adc    DWORD PTR [edi],esi
  406720:	sub    DWORD PTR [eax],0xffffffbb
  406723:	and    eax,0xde3bd228
  406728:	jo     0x406768
  40672a:	jbe    0x4066ba
  40672c:	fld    st(1)
  40672e:	jmp    0x406706
  406730:	adc    al,BYTE PTR [edi]
  406732:	ja     0x406781
  406734:	mov    ds:0xaa2a3698,al
  406739:	fidivr DWORD PTR [ebx]
  40673b:	push   esp
  40673c:	js     0x406745
  40673e:	xchg   esi,eax
  40673f:	pop    esi
  406740:	fisubr WORD PTR [esi]
  406742:	mov    al,0x2
  406744:	cmp    eax,0x3e6777e9
  406749:	xor    bl,al
  40674b:	lea    esp,[ecx]
  40674d:	jae    0x406772
  40674f:	int3   
  406750:	repz hlt 
  406752:	sbb    BYTE PTR [edx],0xe
  406755:	stc    
  406756:	push   cs
  406757:	dec    ecx
  406758:	outs   dx,DWORD PTR ds:[esi]
  406759:	stos   DWORD PTR es:[edi],eax
  40675a:	mov    DWORD PTR [edx+0x0],ebp
  40675d:	push   ebx
  40675e:	add    al,0x63
  406760:	iret   
  406761:	sbb    eax,0xb6fa59c3
  406766:	pop    edx
  406767:	push   ebx
  406768:	fdivr  DWORD PTR [edx-0x16ba1b5a]
  40676e:	or     BYTE PTR [edx-0x2b],ah
  406771:	and    eax,0x9a0f3e9b
  406776:	repz xlat BYTE PTR ds:[ebx]
  406778:	cli    
  406779:	adc    bl,dh
  40677b:	mov    ds:0x6ce80e4,al
  406780:	sub    DWORD PTR [esi-0x349afe1d],esi
  406786:	dec    esi
  406787:	jge    0x406754
  406789:	(bad)  
  40678a:	mov    dl,0x83
  40678c:	push   ecx
  40678d:	add    eax,DWORD PTR [edi]
  40678f:	jns    0x4067a3
  406791:	xlat   BYTE PTR ds:[ebx]
  406792:	xchg   esi,eax
  406793:	pop    edi
  406794:	mov    dh,0x7
  406796:	add    DWORD PTR [ecx+0x4e],esp
  406799:	pop    ss
  40679a:	div    DWORD PTR [eax+0x16]
  40679d:	pop    ecx
  40679e:	jg     0x4067a7
  4067a0:	push   es
  4067a1:	sbb    DWORD PTR cs:[esi-0x4a],0xffffffde
  4067a6:	jmp    0x349957f8
  4067ab:	cli    
  4067ac:	stos   BYTE PTR es:[edi],al
  4067ad:	imul   edx,DWORD PTR [edi-0x63],0xd3467689
  4067b4:	and    BYTE PTR [eax-0x424c073b],bh
  4067ba:	in     al,dx
  4067bb:	lods   eax,DWORD PTR ds:[esi]
  4067bc:	mov    BYTE PTR [esi],ch
  4067be:	sbb    eax,0x67
  4067c1:	sbb    ecx,DWORD PTR [eax+ecx*2]
  4067c4:	fmul   st(5),st
  4067c6:	fldl2e 
  4067c8:	ss ret 
  4067ca:	ss dec ebp
  4067cc:	cld    
  4067cd:	fisttp WORD PTR [ecx]
  4067cf:	hlt    
  4067d0:	inc    ebp
  4067d1:	and    eax,0x74de4eed
  4067d6:	adc    eax,0x32f53549
  4067db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067dc:	lock add eax,0x979f4498
  4067e2:	mov    ah,bl
  4067e4:	(bad)  
  4067e5:	jnp    0x4067be
  4067e7:	fild   DWORD PTR [ebp+0x1faa8123]
  4067ed:	sub    esp,DWORD PTR [ebx-0x17]
  4067f0:	adc    al,0xb9
  4067f2:	or     eax,0xd9ce58b7
  4067f7:	jle    0x406847
  4067f9:	mov    al,ds:0x9307b3c5
  4067fe:	(bad)  
  4067ff:	and    BYTE PTR [ecx+ebx*8],cl
  406802:	fidivr WORD PTR [eax-0x5d]
  406805:	sub    DWORD PTR [ebp-0x481083d3],ebp
  40680b:	jmp    0x131f:0x87e8b2b7
  406812:	lock add bl,dl
  406815:	xchg   dl,bl
  406817:	push   0x659364fb
  40681c:	frstpm(287 only) 
  40681e:	adc    al,0xbb
  406820:	loop   0x4067a4
  406822:	cwde   
  406823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406824:	popf   
  406825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406826:	gs aas 
  406828:	aas    
  406829:	pop    es
  40682a:	add    ecx,eax
  40682c:	sahf   
  40682d:	rol    BYTE PTR [ebx],1
  40682f:	push   cs
  406830:	push   ss
  406831:	imul   ah
  406833:	add    eax,0x9ca7f84e
  406838:	inc    ebp
  406839:	sbb    eax,0xb4325cdf
  40683e:	mov    ebp,0xafd73622
  406843:	cmp    eax,0x7f916da
  406848:	shl    DWORD PTR [ebx-0x46],1
  40684b:	xchg   edx,eax
  40684c:	sbb    BYTE PTR [ecx],al
  40684e:	scas   eax,DWORD PTR es:[edi]
  40684f:	add    al,0xa2
  406851:	and    DWORD PTR [esi-0x75],edi
  406854:	cmp    al,0xc4
  406856:	mov    dl,0xc9
  406858:	sub    eax,DWORD PTR [eax]
  40685a:	jbe    0x4067e3
  40685c:	es imul esp,esi,0xffffffd9
  406860:	mov    bl,0x68
  406862:	jo     0x4067e4
  406864:	inc    edx
  406865:	mov    WORD PTR [edi+ecx*8],gs
  406868:	mov    edi,0x174b90f3
  40686d:	gs nop
  40686f:	outs   dx,DWORD PTR ds:[esi]
  406870:	adc    edx,DWORD PTR [esp+esi*1+0x700c033e]
  406877:	addr16 iret 
  406879:	out    0x8,eax
  40687b:	and    DWORD PTR [esi+esi*4],edi
  40687e:	jne    0x406801
  406880:	jnp    0x4068d8
  406882:	add    DWORD PTR [ecx],edx
  406884:	jmp    0x4201:0x339d1dc6
  40688b:	mov    ah,0x1
  40688d:	je     0x4068b6
  40688f:	std    
  406890:	push   es
  406891:	das    
  406892:	add    bh,ch
  406894:	jno    0x4068d1
  406896:	fiadd  WORD PTR [ecx]
  406898:	sbb    al,0x2f
  40689a:	mov    cl,BYTE PTR [edx]
  40689c:	sbb    dh,ah
  40689e:	add    dh,BYTE PTR [ebp+0x61d1d1ad]
  4068a4:	push   0xe6b76164
  4068a9:	mov    al,ds:0xdf70776e
  4068ae:	add    BYTE PTR [edi-0x62],bl
  4068b1:	loop   0x406876
  4068b3:	sbb    al,bl
  4068b5:	mov    edx,0x639de93a
  4068ba:	cmp    al,0x8a
  4068bc:	mov    al,ds:0xbe60537b
  4068c1:	stos   BYTE PTR es:[edi],al
  4068c2:	ror    BYTE PTR [ebp-0x48],1
  4068c5:	mov    ch,0x4b
  4068c7:	imul   ebx,DWORD PTR [ebx],0xffffffd1
  4068ca:	dec    ecx
  4068cb:	xchg   esi,esi
  4068cd:	cmp    BYTE PTR [eax+0x7d],bl
  4068d0:	xchg   esp,eax
  4068d1:	cld    
  4068d2:	ret    
  4068d3:	xor    BYTE PTR [ebx],ch
  4068d5:	outs   dx,BYTE PTR ds:[esi]
  4068d6:	in     eax,dx
  4068d7:	adc    eax,ecx
  4068d9:	pop    ecx
  4068da:	shl    bl,1
  4068dc:	aas    
  4068dd:	popa   
  4068de:	call   0x8852b93
  4068e3:	retf   0xdb47
  4068e6:	pushf  
  4068e7:	adc    DWORD PTR [edi-0x2f],edi
  4068ea:	scas   eax,DWORD PTR es:[edi]
  4068eb:	cs test ebp,ecx
  4068ee:	xchg   ebp,eax
  4068ef:	leave  
  4068f0:	stos   BYTE PTR es:[edi],al
  4068f1:	dec    ebp
  4068f2:	pop    ebp
  4068f3:	daa    
  4068f4:	scas   al,BYTE PTR es:[edi]
  4068f5:	adc    BYTE PTR [edi],bl
  4068f7:	dec    edx
  4068f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068f9:	cmp    BYTE PTR [edi+edi*2],bh
  4068fc:	sub    eax,0x9a293f6f
  406901:	scas   eax,DWORD PTR es:[edi]
  406902:	jne    0x4068b0
  406904:	ds sbb al,bl
  406907:	mov    cl,0xef
  406909:	inc    esp
  40690a:	loopne 0x406896
  40690c:	arpl   bp,di
  40690e:	aas    
  40690f:	nop
  406910:	xor    ecx,ebp
  406912:	lods   eax,DWORD PTR ds:[si]
  406914:	das    
  406915:	cmc    
  406916:	sbb    al,0xcf
  406918:	adc    bl,BYTE PTR [eax-0x1c590d1f]
  40691e:	loopne 0x406924
  406920:	outs   dx,BYTE PTR ds:[esi]
  406921:	xlat   BYTE PTR ds:[ebx]
  406922:	ins    DWORD PTR es:[edi],dx
  406923:	into   
  406924:	pop    edi
  406925:	lds    ecx,FWORD PTR [ecx-0x62ab11d]
  40692b:	cmp    esp,edx
  40692d:	jns    0x4068f9
  40692f:	stos   BYTE PTR es:[edi],al
  406930:	test   eax,0xcafbf373
  406935:	sub    BYTE PTR [edi],bl
  406937:	inc    ebx
  406938:	stc    
  406939:	pop    esi
  40693a:	mov    ds:0xb77c41d3,al
  40693f:	inc    edx
  406940:	xor    BYTE PTR ds:0x7da1edd9,al
  406946:	les    edx,FWORD PTR ds:0x5e1bd4bf
  40694c:	cwde   
  40694d:	cwde   
  40694e:	jl     0x406973
  406950:	mov    bh,0x6f
  406952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406953:	mov    ebx,edx
  406955:	inc    edi
  406956:	pop    edx
  406957:	pop    ebp
  406958:	call   0xb659:0x23e0a000
  40695f:	mov    edi,DWORD PTR [edx+0x6d9fcc44]
  406965:	mov    ch,0xe3
  406967:	test   DWORD PTR [esi],ecx
  406969:	stos   DWORD PTR es:[edi],eax
  40696a:	outs   dx,BYTE PTR ds:[esi]
  40696b:	loopne 0x4068ee
  40696d:	pusha  
  40696e:	test   al,0x3d
  406970:	daa    
  406971:	loopne 0x406906
  406973:	mov    bl,0x45
  406975:	jmp    0x112:0xff63f185
  40697c:	lahf   
  40697d:	out    dx,eax
  40697e:	mov    ecx,0x60dfac3e
  406983:	rol    BYTE PTR [edx-0x7f380614],cl
  406989:	and    ebp,DWORD PTR [edx-0x6aa260b1]
  40698f:	xchg   ecx,eax
  406990:	sbb    bh,BYTE PTR [ebp-0x46e524ee]
  406996:	pmulhuw mm3,QWORD PTR [edx]
  406999:	pop    ss
  40699a:	pop    ebp
  40699b:	into   
  40699c:	jmp    0xed2725e8
  4069a1:	dec    ebp
  4069a2:	in     eax,dx
  4069a3:	fld    TBYTE PTR [esi+0x5b]
  4069a6:	fs cdq 
  4069a8:	cld    
  4069a9:	mov    BYTE PTR [edi],ah
  4069ab:	mov    ebp,esp
  4069ad:	iret   
  4069ae:	ret    
  4069af:	cmc    
  4069b0:	sti    
  4069b1:	mov    bl,0x3f
  4069b3:	repnz xor al,0x24
  4069b6:	mov    es,WORD PTR cs:[ecx]
  4069b9:	pusha  
  4069ba:	push   edx
  4069bb:	or     ebp,DWORD PTR [edx]
  4069bd:	call   DWORD PTR [esi]
  4069bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c0:	test   BYTE PTR [eax+0x18],al
  4069c3:	dec    DWORD PTR [eax]
  4069c5:	mov    ds:0x76910398,eax
  4069ca:	xor    eax,0x8e6b63e7
  4069cf:	push   es
  4069d0:	loope  0x4069fb
  4069d2:	dec    esp
  4069d3:	pop    esi
  4069d4:	sbb    DWORD PTR [edi],ebp
  4069d6:	inc    esi
  4069d7:	cmc    
  4069d8:	jle    0x406a06
  4069da:	into   
  4069db:	mov    ebx,0x99c35421
  4069e0:	jnp    0x406991
  4069e2:	mov    cl,0xd2
  4069e4:	dec    eax
  4069e5:	mov    edi,0x28c0621a
  4069ea:	arpl   WORD PTR [edx],bp
  4069ec:	gs ss push esi
  4069ef:	cmp    al,0xe1
  4069f1:	fld    QWORD PTR [ecx]
  4069f3:	out    dx,al
  4069f4:	dec    edi
  4069f5:	mov    al,ds:0xc5678927
  4069fa:	adc    ecx,ebp
  4069fc:	sub    bh,BYTE PTR [edi-0x30281003]
  406a02:	or     ebp,DWORD PTR [esi+edx*2+0x1384a1c0]
  406a09:	xor    eax,0x9d029cf9
  406a0e:	xchg   BYTE PTR [ecx-0xb90ad13],ah
  406a14:	in     eax,dx
  406a15:	ja     0x406a7b
  406a17:	inc    si
  406a19:	fdivr  DWORD PTR [ecx+0x7b]
  406a1c:	ins    BYTE PTR es:[edi],dx
  406a1d:	(bad)  
  406a1e:	in     eax,0x99
  406a20:	(bad)  
  406a21:	adc    dl,BYTE PTR [edi]
  406a23:	(bad)  
  406a25:	jg     0x406a8a
  406a27:	xchg   BYTE PTR [ebp+0x7bb3d878],dh
  406a2d:	int    0x7c
  406a2f:	push   0x7eb3f628
  406a34:	jp     0x406a7d
  406a36:	push   ss
  406a37:	sahf   
  406a38:	aam    0x6b
  406a3a:	or     eax,0x3d89dc5d
  406a3f:	iret   
  406a40:	push   edx
  406a41:	sbb    bl,BYTE PTR [ebp+0x1e]
  406a44:	push   ds
  406a45:	or     esi,DWORD PTR [ebx+eax*1+0x1b2ba1ce]
  406a4c:	adc    cl,BYTE PTR [edi+0x2f]
  406a4f:	mul    DWORD PTR [ebp+0x26]
  406a52:	jg     0x406a05
  406a54:	cmp    DWORD PTR [ebp+0x13225846],ecx
  406a5a:	lods   al,BYTE PTR ds:[esi]
  406a5b:	mov    ds:0xe1212ae2,eax
  406a60:	jg     0x406a2b
  406a62:	sub    eax,0x536b8b13
  406a67:	cmp    BYTE PTR [eax+0x4d],dh
  406a6a:	loopne 0x406a52
  406a6c:	ins    BYTE PTR es:[edi],dx
  406a6d:	pop    es
  406a6e:	outs   dx,BYTE PTR ds:[esi]
  406a6f:	or     bl,0x11
  406a72:	(bad)  
  406a73:	out    0x5,al
  406a75:	xor    cl,0x5e
  406a78:	out    0x83,eax
  406a7a:	out    dx,al
  406a7b:	dec    edi
  406a7c:	jle    0x406a6f
  406a7e:	dec    edx
  406a7f:	ret    
  406a80:	sbb    cl,dh
  406a82:	cmp    dh,BYTE PTR [esi-0x17]
  406a85:	push   es
  406a86:	fs inc ecx
  406a88:	and    dl,al
  406a8a:	and    eax,0x67cb2c06
  406a8f:	or     ebp,ebx
  406a91:	popa   
  406a92:	dec    esp
  406a93:	sbb    esi,DWORD PTR [eax-0x3d124101]
  406a99:	lea    edi,[edi]
  406a9b:	pop    ss
  406a9c:	aaa    
  406a9d:	dec    esp
  406a9e:	lds    ecx,FWORD PTR [ecx-0x39a8e724]
  406aa4:	and    BYTE PTR [edx+0x6a],bh
  406aa7:	mov    esi,0xcd36b991
  406aac:	jge    0x406b08
  406aae:	or     DWORD PTR [eax+edi*1-0xad0f29a],0x37
  406ab6:	sbb    BYTE PTR [esi],ch
  406ab8:	neg    BYTE PTR [edx+0x13413196]
  406abe:	xchg   edx,eax
  406abf:	fs xchg edi,eax
  406ac1:	ret    0x194a
  406ac4:	mov    dl,0xf4
  406ac6:	popf   
  406ac7:	std    
  406ac8:	js     0x406ace
  406aca:	mov    esi,0x2600d2b6
  406acf:	ss inc ebp
  406ad1:	push   es
  406ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ad3:	push   ebp
  406ad4:	pop    ss
  406ad5:	aam    0x3c
  406ad7:	shl    DWORD PTR [ecx+ebx*1],1
  406ada:	call   0x4001:0xd56bbb6d
  406ae1:	mov    ebp,0x8a8f70e2
  406ae6:	xor    cl,dh
  406ae8:	out    dx,al
  406ae9:	leave  
  406aea:	loope  0x406b32
  406aec:	cmp    dx,WORD PTR [esi]
  406aef:	fisttp QWORD PTR [eax+0x6fa8443d]
  406af5:	and    DWORD PTR [ebx-0x7868fad4],edx
  406afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406afc:	mov    edx,0x48882ea2
  406b01:	mov    edi,0x2c0f7212
  406b06:	xor    bh,cl
  406b08:	jno    0x406adb
  406b0a:	jae    0x406b4a
  406b0c:	push   ecx
  406b0d:	dec    ebp
  406b0e:	mov    edi,0x82ba7e69
  406b13:	push   esi
  406b14:	fdivp  st(6),st
  406b16:	or     BYTE PTR [ebp-0x666cd4d4],al
  406b1c:	inc    esi
  406b1d:	dec    esp
  406b1e:	xchg   ebx,eax
  406b1f:	stos   DWORD PTR es:[edi],eax
  406b20:	jmp    0x5ca82b68
  406b25:	fdiv   DWORD PTR [esi]
  406b27:	mov    dh,BYTE PTR [edi]
  406b29:	js     0x406ab8
  406b2b:	xor    ecx,DWORD PTR [esi+0x4b]
  406b2e:	nop
  406b2f:	cs ret 
  406b31:	xchg   esp,eax
  406b32:	mov    dh,BYTE PTR [ebp+edx*4-0x10f35a97]
  406b39:	sbb    al,0x12
  406b3b:	pop    ebx
  406b3c:	xchg   esi,eax
  406b3d:	xchg   ebx,eax
  406b3e:	ss mov ecx,0xbe0a0936
  406b44:	cmp    al,cl
  406b46:	jg     0x406b8a
  406b48:	add    al,0xc2
  406b4a:	arpl   WORD PTR [edi-0x7d29fb28],di
  406b50:	pusha  
  406b51:	fisub  DWORD PTR [eax]
  406b53:	mov    eax,0x63b89ea3
  406b58:	push   edi
  406b59:	pop    ecx
  406b5a:	ds mov dh,0xb8
  406b5d:	mov    cl,0xca
  406b5f:	icebp  
  406b60:	shl    cl,1
  406b62:	adc    DWORD PTR [edi+0x1effc667],edx
  406b68:	and    BYTE PTR [esi-0x50],ch
  406b6b:	and    DWORD PTR [edi],ecx
  406b6d:	repnz pop ds
  406b6f:	(bad)  
  406b70:	mov    ebx,0x6e449c90
  406b75:	lods   eax,DWORD PTR ds:[esi]
  406b76:	shl    al,cl
  406b78:	dec    ebp
  406b79:	pop    esi
  406b7a:	pop    edx
  406b7b:	(bad)  
  406b7c:	in     eax,0xe8
  406b7e:	loopne 0x406be8
  406b80:	daa    
  406b81:	cmp    edi,ebp
  406b83:	in     al,dx
  406b84:	test   al,0xf5
  406b86:	mov    BYTE PTR ss:[ebp-0x41],bl
  406b8a:	cmp    ah,BYTE PTR [ebp-0x2a89281d]
  406b90:	iret   
  406b91:	xchg   edi,eax
  406b92:	scas   eax,DWORD PTR es:[edi]
  406b93:	pop    ebp
  406b94:	adc    al,0xde
  406b96:	lock ds push ebp
  406b99:	rcr    ax,cl
  406b9c:	dec    ebx
  406b9d:	je     0x406c07
  406b9f:	mov    edx,ds
  406ba1:	test   al,0x1a
  406ba3:	lock inc esp
  406ba5:	xchg   ebp,eax
  406ba6:	dec    edx
  406ba7:	and    eax,0xc2315899
  406bac:	pop    ebx
  406bad:	mov    esp,0x2b3aea86
  406bb2:	adc    BYTE PTR [edi],dl
  406bb4:	mov    ebp,0x847c67de
  406bb9:	xlat   BYTE PTR ds:[ebx]
  406bba:	stos   DWORD PTR es:[edi],eax
  406bbb:	ror    DWORD PTR [edi],1
  406bbd:	sub    esp,esi
  406bbf:	jmp    0xf43b1107
  406bc4:	mov    bl,0x5e
  406bc6:	out    dx,al
  406bc7:	lahf   
  406bc8:	iret   
  406bc9:	fwait
  406bca:	or     dh,dl
  406bcc:	lds    eax,FWORD PTR [esi+0x77]
  406bcf:	shr    DWORD PTR [edi-0x1dcf2570],0x39
  406bd6:	in     al,0xb4
  406bd8:	push   cs
  406bd9:	sbb    ah,ch
  406bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdc:	dec    esi
  406bdd:	inc    esp
  406bde:	retf   
  406bdf:	aas    
  406be0:	cmc    
  406be1:	mov    al,0xdc
  406be3:	fdiv   DWORD PTR [edi-0x69]
  406be6:	ret    
  406be7:	mov    esp,DWORD PTR [ecx-0x21e41774]
  406bed:	repz mov eax,0xd685c398
  406bf3:	fcomip st,st(2)
  406bf5:	mov    WORD PTR [esi+edi*8+0x1],ss
  406bf9:	mov    ch,0x16
  406bfb:	push   edx
  406bfc:	bound  esi,QWORD PTR [esi]
  406bfe:	rol    DWORD PTR [eax+0x7b8f61b7],1
  406c04:	(bad)  
  406c05:	call   0x83a1bb83
  406c0a:	or     BYTE PTR [edi+0x14],al
  406c0d:	or     eax,0xe954de6a
  406c12:	mov    ah,0xd6
  406c14:	out    dx,eax
  406c15:	jg     0x406c56
  406c17:	dec    esi
  406c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c19:	nop
  406c1a:	pop    edi
  406c1b:	dec    eax
  406c1c:	sbb    bl,BYTE PTR [ebp+0x42]
  406c1f:	sbb    al,0x46
  406c21:	ror    dh,1
  406c23:	out    dx,eax
  406c24:	xchg   esp,eax
  406c25:	xchg   DWORD PTR [edi+ebp*4-0x7f7e07ee],ebx
  406c2c:	addr16 aam 0x27
  406c2f:	sbb    ebx,DWORD PTR [ebx]
  406c31:	loope  0x406c69
  406c33:	loop   0x406bb7
  406c35:	pop    ecx
  406c36:	mov    edx,0x65c6b333
  406c3b:	mov    ebp,0xae05e81
  406c40:	or     DWORD PTR [edx+0x23b3fcef],edi
  406c46:	jecxz  0x406c95
  406c48:	cli    
  406c49:	sbb    ebx,ebp
  406c4b:	mov    cl,0xc1
  406c4d:	(bad)  
  406c4f:	pop    ss
  406c50:	outs   dx,BYTE PTR ds:[esi]
  406c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c52:	mov    esp,0x6a152cbf
  406c57:	scas   al,BYTE PTR es:[edi]
  406c58:	sbb    BYTE PTR [eax+ebx*4+0x4],0x43
  406c5d:	jae    0x406c1a
  406c5f:	dec    esi
  406c60:	cdq    
  406c61:	or     esp,DWORD PTR [ebx]
  406c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c64:	pop    esp
  406c65:	sub    DWORD PTR [esi],0xda183135
  406c6b:	push   esp
  406c6c:	hlt    
  406c6d:	adc    esi,0x69
  406c70:	or     eax,0x16445c9d
  406c75:	adc    al,BYTE PTR [edi-0x22]
  406c78:	adc    al,0xfd
  406c7a:	dec    edx
  406c7b:	call   0xdbd7:0xefa23e57
  406c82:	shl    DWORD PTR [edx+0x5e],cl
  406c85:	xchg   ecx,eax
  406c86:	or     al,0xfd
  406c88:	mov    bh,0xcf
  406c8a:	xor    esi,esp
  406c8c:	fnstenv [edx+0x26280da1]
  406c92:	shl    BYTE PTR [edx+0x30],cl
  406c95:	loop   0x406c1a
  406c97:	out    0xeb,eax
  406c99:	lahf   
  406c9a:	push   es
  406c9b:	inc    ecx
  406c9c:	jp     0x406c86
  406c9e:	jle    0x406cd6
  406ca0:	xor    edi,DWORD PTR [ecx+0x4a]
  406ca3:	out    dx,eax
  406ca4:	mov    ah,0x69
  406ca6:	xlat   BYTE PTR ds:[ebx]
  406ca7:	pop    ebp
  406ca8:	pop    ecx
  406ca9:	(bad)  
  406caa:	outs   dx,DWORD PTR ds:[esi]
  406cab:	jae    0x406d00
  406cad:	pop    es
  406cae:	mov    al,0xa7
  406cb0:	nop    DWORD PTR [ebx]
  406cb3:	fsub   QWORD PTR [edi]
  406cb5:	adc    BYTE PTR [ebx+0x40ca0f4a],ah
  406cbb:	int    0xf4
  406cbd:	xor    BYTE PTR [ebx+0x5f3212c8],al
  406cc3:	sahf   
  406cc4:	jae    0x406cb0
  406cc6:	xor    DWORD PTR [edi-0x720409ad],eax
  406ccc:	adc    al,0xa4
  406cce:	push   ds
  406ccf:	dec    eax
  406cd0:	and    al,0x0
  406cd2:	mov    ecx,0x11056a0
  406cd7:	xchg   BYTE PTR [edx],ah
  406cd9:	push   edi
  406cda:	cmp    esi,DWORD PTR [ecx]
  406cdc:	dec    ebp
  406cdd:	call   0x59da:0xa529d406
  406ce4:	cmp    DWORD PTR [ecx-0x67],edx
  406ce7:	push   0x5b
  406ce9:	cmc    
  406cea:	shl    BYTE PTR [esi],0x11
  406ced:	push   ebx
  406cee:	sbb    al,0x68
  406cf0:	jp     0x406c7b
  406cf2:	jle    0x406d54
  406cf4:	xchg   ecx,eax
  406cf5:	cpuid  
  406cf7:	lock cwde 
  406cf9:	inc    esp
  406cfa:	das    
  406cfb:	xchg   edx,eax
  406cfc:	sbb    dh,al
  406cfe:	jb     0x406d71
  406d00:	pop    eax
  406d01:	addr16 pushf 
  406d03:	shl    edi,cl
  406d05:	mov    al,ds:0x590e89e
  406d0a:	fwait
  406d0b:	repnz imul DWORD PTR [edi+0x2d731e52]
  406d12:	(bad)  
  406d14:	sbb    eax,0x9e5da32d
  406d19:	mov    al,0x1d
  406d1b:	jmp    0xc29fd7a1
  406d20:	push   DWORD PTR [ebp-0x1a2680a4]
  406d26:	jmp    0x406d16
  406d28:	test   BYTE PTR [edx+0xb3528d],0xf1
  406d2f:	gs xchg edx,eax
  406d31:	push   0x993690dd
  406d36:	aam    0xb1
  406d38:	sub    DWORD PTR [ebx+edx*4],0xffffffdf
  406d3c:	lods   eax,DWORD PTR ds:[esi]
  406d3d:	sbb    BYTE PTR [ebp+0xe],al
  406d40:	xor    BYTE PTR [ebx-0x41],cl
  406d43:	dec    edx
  406d44:	into   
  406d45:	out    0x3b,eax
  406d47:	and    eax,0x27e8df29
  406d4c:	adc    al,0x66
  406d4e:	arpl   WORD PTR [esi-0xa],bp
  406d51:	jns    0x406d7d
  406d53:	in     al,dx
  406d54:	xchg   BYTE PTR [esi+0x509c04a6],al
  406d5a:	add    dh,BYTE PTR [esp+esi*1+0x21]
  406d5e:	ror    ebx,cl
  406d60:	shl    dl,1
  406d62:	scas   eax,DWORD PTR es:[edi]
  406d63:	push   esp
  406d64:	sub    DWORD PTR [edi-0x521a83cf],esp
  406d6a:	ss xchg esp,eax
  406d6c:	jbe    0x406d6e
  406d6e:	or     edx,DWORD PTR [ecx]
  406d70:	push   0x1
  406d72:	and    ch,BYTE PTR [ebx-0x18]
  406d75:	push   esp
  406d76:	push   es
  406d77:	and    dl,cl
  406d79:	out    dx,al
  406d7a:	cmc    
  406d7b:	adc    dl,BYTE PTR [esi+0x1bbbc8d7]
  406d81:	out    0xdd,al
  406d83:	aaa    
  406d84:	jnp    0x406d25
  406d86:	mov    cs,WORD PTR [edx+edi*8]
  406d89:	sub    al,0xed
  406d8b:	in     eax,0x9
  406d8d:	scas   eax,DWORD PTR es:[edi]
  406d8e:	mov    ss,WORD PTR [ecx]
  406d90:	lods   al,BYTE PTR ss:[esi]
  406d92:	clc    
  406d93:	call   0x9bbcdc18
  406d98:	pop    esi
  406d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9a:	rcr    DWORD PTR [edi],0x4a
  406d9d:	xchg   ebx,eax
  406d9e:	mov    al,ds:0xe8a922a4
  406da3:	imul   esi,esp,0xffffff9c
  406da6:	add    edi,DWORD PTR [ebp+0x7623463b]
  406dac:	bound  esp,QWORD PTR [ebx+0x7b]
  406daf:	mov    es,ecx
  406db1:	jp     0x406e2d
  406db3:	push   ss
  406db4:	xchg   edi,eax
  406db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db7:	mov    al,ds:0x38ab15ff
  406dbc:	jmp    0x406e04
  406dbe:	addr16 std 
  406dc0:	sbb    bh,dl
  406dc2:	aaa    
  406dc3:	sub    al,0x2f
  406dc5:	sar    DWORD PTR [esi-0x3ce83082],1
  406dcb:	rol    BYTE PTR [ebp+ebx*2+0x24536d77],0xd6
  406dd3:	sbb    eax,0x81f67842
  406dd8:	push   ss
  406dd9:	retf   
  406dda:	popa   
  406ddb:	fistp  WORD PTR [esi-0x52]
  406dde:	lock xchg ch,cl
  406de1:	lods   eax,DWORD PTR ds:[esi]
  406de2:	fstp   QWORD PTR [edi+0x69d499cd]
  406de8:	cmp    eax,0x6eaa767e
  406ded:	xchg   edx,eax
  406dee:	mov    cl,dl
  406df0:	pop    ecx
  406df1:	pop    ebp
  406df2:	add    al,0x4a
  406df4:	push   edx
  406df5:	adc    bh,BYTE PTR [ebx]
  406df7:	inc    ecx
  406df8:	cmp    BYTE PTR [ebp+0x6a],ch
  406dfb:	stc    
  406dfc:	int3   
  406dfd:	jb     0x406de6
  406dff:	(bad)  
  406e00:	call   0xeee4:0x9d2ee93d
  406e07:	aad    0x7
  406e09:	inc    edx
  406e0a:	lds    ebx,FWORD PTR [edx-0x3e]
  406e0d:	inc    esp
  406e0e:	xor    BYTE PTR [edx+0x10],cl
  406e11:	bound  ebp,QWORD PTR [ecx]
  406e13:	sbb    al,0x27
  406e15:	cmp    DWORD PTR [ebx+eiz*2+0x66156362],esp
  406e1c:	es ins DWORD PTR es:[edi],dx
  406e1e:	jnp    0x406da6
  406e20:	or     DWORD PTR [ebp-0x330de610],eax
  406e26:	add    DWORD PTR [esi+0x7c292f7b],edx
  406e2c:	sbb    DWORD PTR cs:[ebp-0x6cc3a37e],ecx
  406e33:	add    eax,edx
  406e35:	mov    edx,0x95740c95
  406e3a:	ss (bad) 
  406e3c:	jle    0x406e92
  406e3e:	cmc    
  406e3f:	xor    al,0xba
  406e41:	in     al,0x5a
  406e43:	mov    eax,ds:0xc35e5571
  406e48:	pop    es
  406e49:	sub    al,0xf2
  406e4b:	jae    0x406e57
  406e4d:	loop   0x406eb1
  406e4f:	jmp    0xe4f5:0x16b0042a
  406e56:	fisttp WORD PTR [ebp-0x52]
  406e59:	cwde   
  406e5a:	push   esp
  406e5b:	or     ebx,eax
  406e5d:	jmp    0xed45:0x7630ebf4
  406e64:	and    ah,BYTE PTR [eax+0x4c]
  406e67:	pop    esp
  406e68:	test   al,0x5f
  406e6a:	test   al,0x68
  406e6c:	gs aad 0x27
  406e6f:	jle    0x406ea7
  406e71:	cld    
  406e72:	xchg   esp,eax
  406e73:	xchg   edx,eax
  406e74:	stos   BYTE PTR es:[edi],al
  406e75:	jbe    0x406ea3
  406e77:	pop    es
  406e78:	fisub  WORD PTR [ecx-0x41]
  406e7b:	test   DWORD PTR [esi-0x72],ebx
  406e7e:	add    eax,0xe937c826
  406e83:	stos   BYTE PTR es:[edi],al
  406e84:	adc    DWORD PTR [ecx-0x3afbedfd],0xffffffed
  406e8b:	(bad)  
  406e8c:	fwait
  406e8d:	inc    ecx
  406e8e:	mov    ah,0x8a
  406e90:	mov    cl,0x2b
  406e92:	data16 mov BYTE PTR [ebp-0x4aac63f5],dh
  406e99:	lahf   
  406e9a:	ret    0xa73e
  406e9d:	rcl    ecx,1
  406e9f:	adc    BYTE PTR [edi-0x7a],bh
  406ea2:	mov    eax,ds:0x7e4ca6b2
  406ea7:	mov    cl,0xe0
  406ea9:	push   edx
  406eaa:	add    al,BYTE PTR [ecx-0xc299c5a]
  406eb0:	jge    0x406eae
  406eb2:	push   cs
  406eb3:	shl    DWORD PTR [eax],cl
  406eb5:	mov    edx,0x706bf08f
  406eba:	jl     0x406ea7
  406ebc:	in     al,dx
  406ebd:	mov    dl,0x27
  406ebf:	jg     0x406f0c
  406ec1:	adc    cl,ah
  406ec3:	push   0xffffffb5
  406ec5:	dec    DWORD PTR [edi+edx*8-0x7df9a5cb]
  406ecc:	in     al,dx
  406ecd:	test   al,0xf5
  406ecf:	out    dx,eax
  406ed0:	sbb    al,0xd5
  406ed3:	push   ecx
  406ed4:	retf   
  406ed5:	push   edi
  406ed6:	(bad)  
  406ed7:	sub    BYTE PTR ds:0x6bbda6bf,0x64
  406ede:	in     eax,0x4c
  406ee0:	adc    DWORD PTR [edi+0x31],edi
  406ee3:	pop    eax
  406ee4:	push   ds
  406ee5:	xor    eax,0x61ed5b05
  406eea:	sbb    BYTE PTR es:[eax-0x672b7fe5],bl
  406ef1:	test   BYTE PTR [ebx-0x55],0x30
  406ef5:	aas    
  406ef6:	scas   al,BYTE PTR es:[edi]
  406ef7:	out    dx,al
  406ef8:	adc    eax,DWORD PTR [eax]
  406efa:	push   ebx
  406efb:	(bad)  
  406efd:	in     al,0x5a
  406eff:	pop    edi
  406f00:	xchg   esp,eax
  406f01:	(bad)  
  406f02:	stc    
  406f03:	dec    edi
  406f04:	dec    esi
  406f05:	cmp    al,bh
  406f07:	cmp    BYTE PTR [eax],al
  406f09:	test   BYTE PTR [esi-0x40341d68],ah
  406f0f:	jmp    0x3082:0x2c6d8916
  406f16:	dec    ebx
  406f17:	sub    eax,0x6b6f95bc
  406f1c:	lahf   
  406f1d:	test   cl,0xdf
  406f20:	sbb    eax,DWORD PTR [esi-0x4a]
  406f23:	loop   0x406f63
  406f25:	dec    edi
  406f26:	mov    DWORD PTR [ebp+0x4d],eax
  406f29:	fisubr DWORD PTR [eax]
  406f2b:	pop    edi
  406f2c:	dec    eax
  406f2d:	fidiv  DWORD PTR [eax+0x6f]
  406f30:	stc    
  406f31:	(bad)  
  406f32:	mov    dh,0x97
  406f34:	or     esi,DWORD PTR [eax+0x52]
  406f37:	mov    eax,0xa8dec10f
  406f3c:	fwait
  406f3d:	mov    bl,0x2
  406f3f:	movd   mm4,eax
  406f42:	out    dx,eax
  406f43:	cmp    al,0x73
  406f45:	cmp    al,0x1
  406f47:	(bad)  
  406f48:	out    0x31,eax
  406f4a:	lods   eax,DWORD PTR ds:[esi]
  406f4b:	cmp    DWORD PTR [esi],0xffffffc8
  406f4e:	jl     0x406f96
  406f50:	mov    al,ds:0x2b0e9463
  406f55:	int3   
  406f56:	cmp    al,0xf4
  406f58:	mov    dl,0xa7
  406f5a:	push   eax
  406f5b:	call   0xf52c:0xe1569282
  406f62:	jo     0x406eec
  406f64:	stos   DWORD PTR es:[edi],eax
  406f65:	and    ebp,eax
  406f67:	or     edi,DWORD PTR [ebx+edx*1+0x31]
  406f6b:	and    ecx,DWORD PTR ds:0x46a6770f
  406f71:	pop    esp
  406f72:	fs mov bh,0x4b
  406f75:	mov    esi,0xf51c83f5
  406f7a:	inc    esi
  406f7b:	repz retf 0x2923
  406f7f:	mov    ds:0x54bb2495,al
  406f84:	ss out dx,al
  406f86:	mov    ?,WORD PTR [eax-0xb]
  406f89:	hlt    
  406f8a:	push   ebx
  406f8b:	in     al,dx
  406f8c:	nop
  406f8d:	jmp    0x406f15
  406f8f:	pop    ecx
  406f90:	inc    ebx
  406f91:	addr16 xor al,0x75
  406f94:	mov    esi,0x63ec3498
  406f99:	ror    DWORD PTR [esi+0x5a9f0e71],0x49
  406fa0:	imul   edi,esp,0x1e3c73a6
  406fa6:	and    BYTE PTR [ecx],ch
  406fa8:	xchg   ebp,eax
  406fa9:	pop    es
  406faa:	lea    esp,[esi-0x635b2f02]
  406fb0:	cmp    esi,DWORD PTR [esi-0xf]
  406fb3:	rol    BYTE PTR [esp+ecx*8+0x24],cl
  406fb7:	into   
  406fb8:	or     bh,BYTE PTR [edi-0x3eadd737]
  406fbe:	es pop ss
  406fc0:	dec    esp
  406fc1:	cmp    DWORD PTR [eax+0x44003296],0xc727b6d9
  406fcb:	mov    DWORD PTR [ebx],0xe73aad2e
  406fd1:	sub    BYTE PTR [ebp-0x2a],ch
  406fd4:	lods   eax,DWORD PTR ds:[esi]
  406fd5:	scas   eax,DWORD PTR es:[edi]
  406fd6:	pop    ebp
  406fd7:	mov    edi,0x3ee21b30
  406fdc:	jb     0x406ffc
  406fde:	aam    0x12
  406fe0:	mov    dl,0x54
  406fe2:	push   es
  406fe3:	inc    esp
  406fe4:	inc    ecx
  406fe5:	(bad)  
  406fe6:	pop    ebp
  406fe7:	rcl    BYTE PTR [esi],cl
  406fe9:	adc    al,0xca
  406feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fec:	and    eax,0xa114547c
  406ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff2:	fdivp  st(4),st
  406ff4:	xchg   edi,eax
  406ff5:	or     eax,0x90f1e781
  406ffa:	jecxz  0x406ff0
  406ffc:	call   FWORD PTR [esi]
  406ffe:	cmp    al,0xc2
  407000:	cmp    al,0x3
  407002:	into   
  407003:	xchg   ebp,eax
  407004:	push   ss
  407005:	cdq    
  407006:	repnz fs dec ebp
  407009:	arpl   WORD PTR [eax+0xb16b973],bp
  40700f:	dec    edx
  407010:	call   DWORD PTR [edi-0x67]
  407013:	imul   ebx,edi,0xffffff80
  407016:	inc    esi
  407017:	mov    ebp,0x8de3eafe
  40701c:	pusha  
  40701d:	repz jecxz 0x406faf
  407020:	pop    ebp
  407021:	pop    eax
  407022:	leave  
  407023:	lock jl 0x40709d
  407026:	xchg   edi,eax
  407027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407028:	(bad)  
  407029:	popf   
  40702a:	jmp    0x7ab6444d
  40702f:	xor    dl,BYTE PTR [ecx+eax*1+0x7d23d2d5]
  407036:	int3   
  407037:	mov    cl,0xc0
  407039:	jg     0x407047
  40703b:	iret   
  40703c:	not    BYTE PTR [edx]
  40703e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40703f:	idiv   BYTE PTR [ebx-0x7b]
  407042:	imul   esi,DWORD PTR [ebp-0x61],0xffffffb5
  407046:	sub    eax,0xfbec7374
  40704b:	daa    
  40704c:	int3   
  40704d:	pop    es
  40704e:	mov    al,ds:0x7e9ec9bd
  407053:	(bad)  
  407054:	loopne 0x40702e
  407056:	nop
  407057:	xor    al,0xf9
  407059:	in     al,dx
  40705a:	js     0x40707d
  40705c:	lods   al,BYTE PTR ds:[esi]
  40705d:	leave  
  40705e:	mov    ecx,0xd2cc084d
  407063:	outs   dx,BYTE PTR ds:[esi]
  407064:	dec    esi
  407065:	adc    al,0x3
  407067:	push   ebx
  407068:	out    0xaf,al
  40706a:	scas   eax,DWORD PTR es:[edi]
  40706b:	pop    ebx
  40706c:	(bad)  
  40706d:	scas   al,BYTE PTR es:[edi]
  40706e:	jbe    0x4070d5
  407070:	sbb    al,BYTE PTR [eax]
  407072:	jo     0x4070d0
  407074:	xchg   ebp,eax
  407075:	jle    0x4070df
  407077:	sbb    BYTE PTR [esi+ebx*8],0x4d
  40707b:	popa   
  40707c:	mov    ds:0xeb8e2c8a,al
  407081:	jae    0x4070b5
  407083:	int    0xd6
  407085:	mov    esi,DWORD PTR [edx+0xad32b38]
  40708b:	in     eax,0xa
  40708d:	jno    0x4070e5
  40708f:	jbe    0x4070d5
  407091:	dec    edi
  407092:	shr    DWORD PTR [ecx-0x33],1
  407095:	cmc    
  407096:	mov    dh,0xb8
  407098:	sub    eax,0xe31b95fd
  40709d:	cmp    al,0x4c
  40709f:	mov    esi,0xb0745078
  4070a4:	test   BYTE PTR [edx+eiz*4-0x7def8f0b],0xfe
  4070ac:	out    dx,eax
  4070ad:	add    al,0x70
  4070af:	xchg   ecx,eax
  4070b0:	pop    es
  4070b1:	mov    dl,0xe5
  4070b3:	dec    esi
  4070b4:	xor    eax,0x41dcfc79
  4070b9:	out    0xe,al
  4070bb:	sbb    DWORD PTR [esp+eax*2],edi
  4070be:	and    edx,DWORD PTR [edi]
  4070c0:	pop    es
  4070c1:	pop    ds
  4070c2:	loop   0x40711d
  4070c4:	gs jecxz 0x40704d
  4070c7:	pusha  
  4070c8:	test   BYTE PTR [ebp+ebp*8+0x3d],dh
  4070cc:	push   edi
  4070cd:	hlt    
  4070ce:	push   edi
  4070cf:	xchg   esi,eax
  4070d0:	arpl   WORD PTR [eax+0x6fc8aece],si
  4070d6:	imul   ecx,DWORD PTR [edi-0x72f63e3f],0xffffffbb
  4070dd:	daa    
  4070de:	mov    bh,0x2c
  4070e0:	xor    BYTE PTR [edi],0xe
  4070e3:	ins    BYTE PTR es:[edi],dx
  4070e4:	or     BYTE PTR [ecx],cl
  4070e6:	ds imul ecx,ecx,0xfffffff4
  4070ea:	cld    
  4070eb:	jno    0x4070ad
  4070ed:	shl    BYTE PTR [edi],cl
  4070ef:	sbb    dl,bh
  4070f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f2:	adc    esi,ecx
  4070f4:	pop    edi
  4070f5:	push   es
  4070f6:	pusha  
  4070f7:	inc    esi
  4070f8:	loope  0x40709f
  4070fa:	push   es
  4070fb:	into   
  4070fc:	mov    al,BYTE PTR [esi]
  4070fe:	aaa    
  4070ff:	cmp    eax,DWORD PTR [ebp-0x41]
  407102:	push   ebx
  407103:	(bad)  
  407104:	cmp    eax,0xf10711e3
  407109:	out    dx,eax
  40710a:	pop    ebp
  40710b:	test   al,0xbf
  40710d:	(bad)  
  40710e:	cli    
  40710f:	mov    al,ds:0xb81466a3
  407114:	repz add bh,BYTE PTR [edi]
  407117:	repnz call 0xa29:0x16a9c2f8
  40711f:	js     0x4070a5
  407121:	push   eax
  407122:	into   
  407123:	add    DWORD PTR [edx-0x6f],0x6b
  407127:	mov    esp,0xfbcf632d
  40712c:	dec    eax
  40712d:	mov    bl,0x8c
  40712f:	xchg   esi,eax
  407130:	pushf  
  407131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407132:	pusha  
  407133:	add    esp,DWORD PTR [ecx+eax*4]
  407136:	jb     0x40714c
  407138:	push   edi
  407139:	xor    al,0x39
  40713b:	out    0xa7,eax
  40713d:	jmp    0x4070d0
  40713f:	jecxz  0x4070ff
  407141:	inc    esp
  407142:	cld    
  407143:	cmp    BYTE PTR [edi-0x41576527],0xde
  40714a:	mov    ebx,0x9342ed88
  40714f:	fcom   DWORD PTR [ebp-0xf]
  407152:	retf   0x4274
  407155:	add    DWORD PTR [edx+esi*1+0x75e13ef],ebp
  40715c:	enter  0xd1d8,0x5c
  407160:	test   eax,0x6682341e
  407165:	sub    BYTE PTR [ebx+0x74],0xee
  407169:	fucomip st,st(4)
  40716b:	pop    ebx
  40716c:	pop    ecx
  40716d:	pop    ebp
  40716e:	xchg   esi,eax
  40716f:	mov    edx,0x6c7eaeee
  407174:	enter  0x6cf7,0xab
  407178:	sub    edi,DWORD PTR [esp+ecx*8+0x22ca63f4]
  40717f:	adc    DWORD PTR [esi+0xf04bd1b],edi
  407185:	in     al,dx
  407186:	lock aad 0x98
  407189:	cdq    
  40718a:	cmp    bh,cl
  40718c:	and    dl,BYTE PTR [ecx+eiz*1+0x3d582369]
  407193:	in     eax,0xad
  407195:	xchg   edx,eax
  407196:	jg     0x4071cd
  407198:	scas   al,BYTE PTR es:[edi]
  407199:	jno    0x407131
  40719b:	mov    ah,0x91
  40719d:	pop    esp
  40719e:	(bad)  
  40719f:	(bad)  
  4071a0:	jo     0x407123
  4071a2:	cld    
  4071a3:	pop    ss
  4071a4:	into   
  4071a5:	adc    eax,0x7fd806a3
  4071aa:	in     eax,dx
  4071ab:	test   eax,0xcac4b4f2
  4071b0:	fdivr  QWORD PTR [edi+0x3f747884]
  4071b6:	iret   
  4071b7:	fwait
  4071b8:	or     DWORD PTR [ecx],0xfffffff8
  4071bb:	aaa    
  4071bc:	add    ch,BYTE PTR [edi-0x39]
  4071bf:	xor    BYTE PTR [ecx-0x7a67db34],al
  4071c5:	std    
  4071c6:	xchg   edx,eax
  4071c7:	lods   eax,DWORD PTR ds:[esi]
  4071c8:	fisub  DWORD PTR [edi]
  4071ca:	fbld   TBYTE PTR [edx-0x62]
  4071cd:	pusha  
  4071ce:	mov    edi,0xbae40a21
  4071d3:	xchg   edi,eax
  4071d4:	into   
  4071d5:	sbb    eax,DWORD PTR [ebx]
  4071d7:	loope  0x4071f5
  4071d9:	and    edi,esp
  4071db:	not    ah
  4071dd:	shl    dh,cl
  4071df:	and    BYTE PTR [ebp-0x56a05ee0],dh
  4071e5:	in     eax,dx
  4071e6:	stos   BYTE PTR es:[edi],al
  4071e7:	pushf  
  4071e8:	rcl    BYTE PTR [esi],1
  4071ea:	xor    BYTE PTR [edi+0x27],bl
  4071ed:	inc    eax
  4071ee:	out    dx,eax
  4071ef:	mov    WORD PTR [esi],es
  4071f1:	cmp    eax,0xede7ba7d
  4071f6:	loopne 0x407180
  4071f8:	dec    edi
  4071f9:	mov    cl,0xfd
  4071fb:	aaa    
  4071fc:	push   ss
  4071fd:	ret    0x2025
  407200:	je     0x407184
  407202:	fs pop ebx
  407204:	sti    
  407205:	add    BYTE PTR [ecx+0x5],bl
  407208:	push   ds
  407209:	not    DWORD PTR [esi]
  40720b:	div    BYTE PTR [edi-0x37]
  40720e:	jmp    0x394d2308
  407213:	jl     0x40721e
  407215:	and    ecx,DWORD PTR [esp+ebp*4-0x53b6d8d5]
  40721c:	sub    cl,al
  40721e:	add    ah,ch
  407220:	adc    edx,ebx
  407222:	ret    
  407223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407224:	xor    eax,0xb7a602d2
  407229:	jno    0x4071f9
  40722b:	dec    ebp
  40722c:	clc    
  40722d:	mov    eax,0x7d9204af
  407232:	mov    ds:0x55adfc21,al
  407237:	in     al,dx
  407238:	mov    edi,0x6fa7f17c
  40723d:	(bad)  
  40723f:	sahf   
  407240:	and    BYTE PTR [esi-0x46eb7600],al
  407246:	pop    ss
  407247:	jbe    0x4071ef
  407249:	lds    ebx,FWORD PTR [edx]
  40724b:	pop    ecx
  40724c:	xor    DWORD PTR [edx-0x15f24e98],edx
  407252:	add    eax,0xf4e2547
  407257:	fbld   TBYTE PTR ds:0x17c5db5f
  40725d:	js     0x4072d1
  40725f:	jne    0x407223
  407261:	sbb    dh,dh
  407263:	shr    DWORD PTR [esi-0x4a55b14a],0x42
  40726a:	xchg   ebx,eax
  40726b:	cmp    BYTE PTR [edi-0x41],al
  40726e:	jge    0x4072a2
  407270:	(bad)  
  407272:	mov    WORD PTR [ecx],gs
  407274:	jmp    0xf2625b32
  407279:	xchg   edi,eax
  40727a:	fs pushf 
  40727c:	retf   
  40727d:	mov    bh,0x98
  40727f:	or     BYTE PTR [eax+0x679461f4],bl
  407285:	stos   DWORD PTR es:[edi],eax
  407286:	adc    ecx,edi
  407288:	inc    edx
  407289:	pop    edx
  40728a:	jns    0x40720f
  40728c:	mov    ch,0xbb
  40728e:	dec    edx
  40728f:	dec    eax
  407290:	aam    0xb1
  407292:	push   ds
  407293:	sub    eax,0x3ca2d4ef
  407298:	aaa    
  407299:	mov    al,bl
  40729b:	adc    al,0xd9
  40729d:	adc    eax,DWORD PTR [esi]
  40729f:	sbb    al,0xc0
  4072a1:	adc    ch,BYTE PTR [eax+ecx*8-0x27aa28ec]
  4072a8:	push   ebp
  4072a9:	xchg   DWORD PTR [ebx],edi
  4072ab:	dec    esp
  4072ac:	and    edi,edi
  4072ae:	cmovne edi,DWORD PTR [ebp+ebp*1-0x6339ce1]
  4072b6:	inc    ebp
  4072b7:	adc    edi,DWORD PTR [esi+0x23]
  4072ba:	clc    
  4072bb:	mov    al,ds:0xa5afdd23
  4072c0:	jmp    0xf8893d29
  4072c5:	push   esp
  4072c6:	mov    bh,0x33
  4072c8:	mov    DWORD PTR [eax+esi*2-0x184918c1],ebp
  4072cf:	mov    bh,0x4f
  4072d1:	ins    BYTE PTR es:[edi],dx
  4072d2:	or     cl,BYTE PTR [edi]
  4072d4:	in     al,0xe6
  4072d6:	mov    al,0xd2
  4072d8:	xchg   edi,eax
  4072d9:	repz sbb al,0xbd
  4072dc:	jle    0xd43505f8
  4072e2:	and    eax,0x1178bca0
  4072e7:	sbb    al,0x57
  4072e9:	jae    0x407270
  4072eb:	mov    ch,0x6c
  4072ed:	jmp    0x9d9dc1b8
  4072f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f3:	adc    ch,bl
  4072f5:	or     al,BYTE PTR [ebp-0x208e4aa9]
  4072fb:	ins    DWORD PTR es:[edi],dx
  4072fc:	fcmovu st,st(6)
  4072fe:	test   al,0x99
  407300:	dec    eax
  407301:	adc    dh,bl
  407303:	repnz push edi
  407305:	mov    ch,0x66
  407307:	inc    eax
  407308:	jno    0x407320
  40730a:	pop    es
  40730b:	dec    esi
  40730c:	(bad)  
  40730d:	sti    
  40730e:	loop   0x4072fe
  407310:	or     BYTE PTR [esi-0x4a],dh
  407313:	push   ebp
  407314:	mov    eax,ds:0xc4d1afc6
  407319:	cmp    edi,DWORD PTR [edx]
  40731b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40731c:	adc    esi,edi
  40731e:	mov    BYTE PTR [ecx+eiz*4+0x32],0x25
  407323:	xchg   esp,eax
  407324:	jbe    0x4072af
  407326:	sub    BYTE PTR [eax+0x44f64155],0xb5
  40732d:	sub    DWORD PTR [edi-0x103d09bd],0xcaf84830
  407337:	in     eax,dx
  407338:	dec    edi
  407339:	pushf  
  40733a:	add    ebp,DWORD PTR [edx-0x5b68ab58]
  407340:	adc    al,0x36
  407342:	pop    es
  407343:	mov    ds:0xf3b67015,eax
  407348:	repnz adc al,0x6a
  40734b:	add    eax,0x29ad7cae
  407350:	fld    QWORD PTR [edx+0x1b43e3d6]
  407356:	pop    edi
  407357:	add    eax,DWORD PTR [edi-0x15f0723c]
  40735d:	adc    al,0xde
  40735f:	arpl   WORD PTR [ebx-0x9],cx
  407362:	(bad)
  407366:	cmp    DWORD PTR [ecx-0x7ec09fec],eax
  40736c:	in     eax,dx
  40736d:	and    DWORD PTR [ebx],edi
  40736f:	jp     0x4072fb
  407371:	xchg   ebp,eax
  407372:	(bad)  
  407373:	and    dl,ch
  407375:	mov    al,ds:0x7ba05e5
  40737a:	repz pop ebx
  40737c:	mov    ah,0x76
  40737e:	pushf  
  40737f:	aas    
  407380:	icebp  
  407381:	dec    ebp
  407382:	sub    edx,DWORD PTR [edx+ecx*1]
  407385:	cmc    
  407386:	adc    eax,0x6edb95bb
  40738b:	icebp  
  40738c:	ror    ebx,0xbe
  40738f:	cld    
  407390:	sar    ah,0xe9
  407393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407394:	clc    
  407395:	cwde   
  407396:	mov    eax,0x6d5ec970
  40739b:	call   0x8871:0xc75d6c53
  4073a2:	add    bl,BYTE PTR [edx]
  4073a4:	and    al,0x91
  4073a6:	xlat   BYTE PTR ds:[ebx]
  4073a7:	or     esp,ebx
  4073a9:	jne    0x407385
  4073ab:	lods   al,BYTE PTR ds:[esi]
  4073ac:	mov    ds:0x79748e4a,eax
  4073b1:	dec    ecx
  4073b2:	shl    BYTE PTR [ebp+esi*8-0x1dacf0a5],1
  4073b9:	jge    0x40733b
  4073bb:	fs push 0x30
  4073be:	or     BYTE PTR [ebx-0xf],ch
  4073c1:	xchg   BYTE PTR [eax-0x49d6817a],bh
  4073c7:	mov    edi,0x7741c629
  4073cc:	adc    BYTE PTR [ebx-0x47],bl
  4073cf:	ins    BYTE PTR es:[edi],dx
  4073d0:	in     al,0x1d
  4073d2:	push   esi
  4073d3:	jae    0x407374
  4073d5:	test   BYTE PTR [ebx-0x7b3c89e5],ah
  4073db:	push   ebp
  4073dc:	stc    
  4073dd:	cs jmp 0x40742c
  4073e0:	loopne 0x40744d
  4073e2:	and    ecx,ebx
  4073e4:	cmp    bh,dl
  4073e6:	dec    ebp
  4073e7:	pop    edx
  4073e8:	push   ss
  4073e9:	mov    esi,0x5ea71bad
  4073ee:	ret    
  4073ef:	mov    ds:0xf2e037fe,eax
  4073f4:	jmp    0xa6af:0xd28199ad
  4073fb:	inc    ebp
  4073fc:	or     DWORD PTR [esi+0x3b],edx
  4073ff:	mov    WORD PTR [edx-0x80],ss
  407402:	retf   
  407403:	scas   eax,DWORD PTR es:[edi]
  407404:	fld    QWORD PTR [ecx+0x2e]
  407407:	loop   0x407452
  407409:	dec    edi
  40740a:	lahf   
  40740b:	mov    edi,0x57cd46f3
  407410:	jbe    0x4073f9
  407412:	int    0x60
  407414:	sub    BYTE PTR [ebx+0x69],0xc4
  407418:	dec    edi
  407419:	cmp    eax,0xf1a4ea24
  40741e:	test   al,0x4
  407420:	cwde   
  407421:	xor    BYTE PTR [eax+0x48fe2c65],bl
  407427:	cdq    
  407428:	lock jns 0x40741b
  40742b:	or     ecx,esi
  40742d:	push   eax
  40742e:	dec    eax
  40742f:	xchg   ebp,eax
  407430:	jecxz  0x40743b
  407432:	push   esi
  407433:	stos   DWORD PTR es:[edi],eax
  407434:	add    ebx,DWORD PTR [ecx]
  407436:	dec    esi
  407437:	lods   al,BYTE PTR ds:[esi]
  407438:	cmp    cl,dh
  40743a:	jg     0x4073f1
  40743c:	fsubr  DWORD PTR [ebp-0x1a]
  40743f:	fcmovb st,st(2)
  407441:	(bad)  
  407443:	inc    esi
  407444:	jno    0x407467
  407446:	popa   
  407447:	sub    ebx,ecx
  407449:	or     al,0xf9
  40744b:	sahf   
  40744c:	pop    eax
  40744d:	ins    BYTE PTR es:[edi],dx
  40744e:	(bad)  
  40744f:	sbb    DWORD PTR [ebx+ebp*2-0x65],ebp
  407453:	jl     0x4074a6
  407455:	inc    ecx
  407456:	push   cs
  407457:	adc    al,0x76
  407459:	xor    dh,BYTE PTR [edx-0x7a]
  40745c:	mov    edx,0x1c08e485
  407461:	add    DWORD PTR [esi-0x729897d5],esi
  407467:	icebp  
  407468:	lea    ebx,[edi-0x5e0fe92d]
  40746e:	int3   
  40746f:	(bad)  
  407470:	sar    DWORD PTR [eax],cl
  407472:	fwait
  407473:	mov    eax,0x89360bcf
  407478:	jecxz  0x407442
  40747a:	cs and esi,ebx
  40747d:	sub    dl,BYTE PTR [ecx]
  40747f:	sub    dh,BYTE PTR [ebx]
  407481:	jmp    0x407448
  407483:	pusha  
  407484:	inc    edx
  407485:	stos   BYTE PTR es:[edi],al
  407486:	mov    ds:0x334be780,eax
  40748b:	inc    edi
  40748c:	sub    cl,ah
  40748e:	add    ebx,esp
  407490:	cmp    ecx,DWORD PTR [edi-0x7b109fb9]
  407496:	push   edi
  407497:	dec    esp
  407498:	mov    ?,WORD PTR [edi]
  40749a:	xor    eax,0x6648c98b
  40749f:	clc    
  4074a0:	in     al,0x69
  4074a2:	sbb    DWORD PTR [ecx+0x57],edx
  4074a5:	pop    DWORD PTR [ebx+0x5c307629]
  4074ab:	jle    0x407524
  4074ad:	jnp    0x407491
  4074af:	mov    ?,edi
  4074b1:	push   eax
  4074b2:	(bad)  
  4074b3:	(bad)  
  4074b4:	push   esi
  4074b5:	lock adc eax,0x705b936c
  4074bb:	(bad)  
  4074bc:	xchg   edx,eax
  4074bd:	cmovle edi,DWORD PTR ss:[ebp+0x73e608a8]
  4074c5:	clc    
  4074c6:	inc    edi
  4074c7:	icebp  
  4074c8:	dec    ecx
  4074c9:	arpl   WORD PTR [esi+0x2b],ax
  4074cc:	xor    dl,BYTE PTR [edx+esi*1-0x1c]
  4074d0:	and    edi,DWORD PTR [edi-0x45]
  4074d3:	ins    DWORD PTR es:[edi],dx
  4074d4:	inc    eax
  4074d5:	shl    BYTE PTR [edx],0xc6
  4074d8:	mov    esi,0x90ab804b
  4074dd:	dec    esp
  4074de:	wbinvd 
  4074e0:	xor    al,0xcd
  4074e2:	(bad)  
  4074e3:	bound  ebx,QWORD PTR [esp+esi*8+0x30fc241e]
  4074ea:	lock xchg edx,eax
  4074ec:	jbe    0x407505
  4074ee:	hlt    
  4074ef:	jmp    0x4074fe
  4074f1:	icebp  
  4074f2:	xchg   ebp,eax
  4074f3:	dec    ebp
  4074f4:	int3   
  4074f5:	(bad)  
  4074f7:	(bad)  
  4074f8:	cmp    al,0xed
  4074fa:	(bad)  
  4074fc:	mov    ah,0xdc
  4074fe:	jge    0x407506
  407500:	pop    ss
  407501:	enter  0x21bb,0x86
  407505:	or     esp,esi
  407507:	mov    DWORD PTR [bp+di+0x28db],ebx
  40750c:	mov    BYTE PTR [edi+0x40004882],cl
  407512:	(bad)  
  407513:	sbb    DWORD PTR [ecx-0x4b683883],eax
  407519:	mov    ds:0xb8075605,eax
  40751e:	jbe    0x4074bb
  407520:	mov    eax,ds:0xf2f97c2b
  407525:	mov    ah,0x3e
  407527:	mov    ebx,0x3b5d1d41
  40752c:	jo     0x4074cd
  40752e:	in     eax,dx
  40752f:	xor    DWORD PTR [edi-0x6a],0xffffff8c
  407533:	sahf   
  407534:	rol    esp,0xc2
  407537:	nop
  407538:	fstp   DWORD PTR [edx]
  40753a:	xchg   ebx,eax
  40753b:	rcl    DWORD PTR [ebp-0x7a],0xd0
  40753f:	rcr    DWORD PTR ds:0xf63d59ad,1
  407545:	enter  0x2e8f,0x8a
  407549:	dec    esp
  40754a:	sub    BYTE PTR [eax-0x2e],0xb9
  40754e:	mov    ah,0x5b
  407550:	mov    al,0xc3
  407552:	lea    ecx,[esi-0xa075197]
  407558:	add    dl,BYTE PTR [edx-0x2a05e112]
  40755e:	inc    edx
  40755f:	jmp    0xb09db01d
  407564:	jcxz   0x407581
  407567:	sbb    al,0x65
  407569:	sahf   
  40756a:	imul   edx,DWORD PTR [ecx+0x201b9adb],0xffffffab
  407571:	(bad)  
  407572:	out    dx,eax
  407573:	push   ebp
  407574:	scas   eax,DWORD PTR es:[edi]
  407575:	jl     0x4075e0
  407577:	ins    BYTE PTR es:[edi],dx
  407578:	or     eax,0xd65024f1
  40757d:	push   0xe123ff81
  407582:	push   edx
  407583:	sahf   
  407584:	adc    BYTE PTR [edi],dl
  407586:	retf   0x96bb
  407589:	cmc    
  40758a:	dec    ebx
  40758b:	ds call 0xd0176425
  407591:	adc    al,0x7
  407593:	sub    esi,DWORD PTR [ebx]
  407595:	or     edx,DWORD PTR [edi-0x66]
  407598:	adc    al,0x10
  40759a:	mov    dl,0x39
  40759c:	cmp    edi,esi
  40759e:	push   ebp
  40759f:	scas   al,BYTE PTR es:[edi]
  4075a0:	fwait
  4075a1:	pop    ecx
  4075a2:	in     eax,dx
  4075a3:	inc    edi
  4075a4:	pop    es
  4075a5:	add    al,0xa2
  4075a7:	scas   al,BYTE PTR es:[edi]
  4075a8:	lods   al,BYTE PTR ds:[esi]
  4075a9:	dec    edx
  4075aa:	test   eax,0x19439910
  4075af:	jae    0x4075c8
  4075b1:	ret    0x7875
  4075b4:	jne    0x407553
  4075b6:	cmp    edx,ecx
  4075b8:	mov    gs,WORD PTR [eax+0x8f64d4f]
  4075be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075bf:	mov    ds:0xb986b9a2,al
  4075c4:	ins    BYTE PTR es:[edi],dx
  4075c5:	jne    0x4075a0
  4075c7:	push   0xffffffea
  4075c9:	cmp    bl,BYTE PTR [esi+0x53]
  4075cc:	push   edi
  4075cd:	cmp    DWORD PTR [edx-0x34],edx
  4075d0:	call   0xc3df4038
  4075d5:	mov    ebp,0x88b9bd67
  4075da:	adc    eax,DWORD PTR [esi]
  4075dc:	mov    dl,0x24
  4075de:	cmp    DWORD PTR [ebp+0x54141a17],ecx
  4075e4:	mov    fs,edi
  4075e6:	or     eax,0xfa02c79c
  4075eb:	cld    
  4075ec:	(bad)  
  4075ee:	pop    esi
  4075ef:	xor    DWORD PTR [ecx],ecx
  4075f1:	mov    dh,0x77
  4075f3:	jbe    0x407602
  4075f5:	push   edi
  4075f6:	lea    ecx,[ecx]
  4075f8:	ja     0x4075d9
  4075fa:	jns    0x4075c6
  4075fc:	mov    bl,0x2c
  4075fe:	mov    edx,0x72e33c5e
  407603:	jmp    0xc571bb04
  407608:	jg     0x407623
  40760a:	pop    ebx
  40760b:	gs aaa 
  40760d:	inc    esp
  40760e:	jmp    0x4075c6
  407610:	jb     0x407653
  407612:	sbb    al,0x62
  407614:	(bad)  
  407615:	jmp    0xc6e2:0x58d65480
  40761c:	pop    ds
  40761d:	aam    0xc5
  40761f:	mov    ds:0x367cd0f1,eax
  407624:	inc    esi
  407625:	jp     0x4075ba
  407627:	pop    es
  407628:	push   esi
  407629:	leave  
  40762a:	bound  edi,QWORD PTR [ecx-0x66fd23c8]
  407630:	ret    0x952
  407633:	mov    DWORD PTR [edi],edi
  407635:	imul   esp,DWORD PTR [ecx+ebx*4+0xf7f242b],0x50
  40763d:	mov    ?,WORD PTR [esi]
  40763f:	dec    ebx
  407640:	push   edi
  407641:	adc    eax,0x5072743b
  407646:	mov    al,ds:0x8b15b9b8
  40764b:	(bad)  
  40764c:	sub    eax,0x57064a09
  407651:	lahf   
  407652:	ja     0x4076ac
  407654:	pop    ebx
  407655:	add    DWORD PTR [edi-0xd5ee1b6],ebx
  40765b:	jbe    0x407696
  40765d:	fcom   QWORD PTR [esp+edi*1]
  407660:	sub    esp,esi
  407662:	push   eax
  407663:	push   ebx
  407664:	(bad)  
  407665:	loope  0x4076c5
  407667:	pop    ebp
  407668:	stos   DWORD PTR es:[edi],eax
  407669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40766a:	add    bl,BYTE PTR [eax-0x2]
  40766d:	or     al,0xd5
  40766f:	pusha  
  407670:	int    0x78
  407672:	mov    dh,0x5
  407674:	fcomip st,st(5)
  407676:	fucomp st(2)
  407678:	cmp    al,0x3
  40767a:	xlat   BYTE PTR ds:[ebx]
  40767b:	aad    0x55
  40767d:	(bad)  
  40767e:	daa    
  40767f:	push   es
  407680:	mov    eax,DWORD PTR [edi]
  407682:	sbb    BYTE PTR [eax],0xf0
  407685:	sahf   
  407686:	adc    BYTE PTR [ebx+0x22],bl
  407689:	adc    DWORD PTR [ecx+0xf541474],eax
  40768f:	imul   edi,DWORD PTR [ebx-0x7a],0xa771dfe2
  407696:	xchg   ebx,eax
  407697:	or     edi,ecx
  407699:	hlt    
  40769a:	outs   dx,BYTE PTR ds:[esi]
  40769b:	dec    ecx
  40769c:	fs cs pusha 
  40769f:	das    
  4076a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a1:	fisttp DWORD PTR [edi-0x35]
  4076a4:	sub    bl,BYTE PTR [ebx+0x29b27444]
  4076aa:	mov    ch,0x9d
  4076ac:	std    
  4076ad:	jae    0x40769f
  4076af:	and    ch,BYTE PTR [ebp+0x6f]
  4076b2:	cmc    
  4076b3:	and    al,0xff
  4076b5:	pusha  
  4076b6:	or     ch,ah
  4076b8:	push   edx
  4076b9:	push   ebp
  4076ba:	rcr    DWORD PTR [ecx+0x2ece0aa1],1
  4076c0:	push   0xffffffcf
  4076c2:	push   esp
  4076c3:	imul   edi,DWORD PTR [edi-0x1c991506],0xd3e18013
  4076cd:	mov    ds:0x46da611f,al
  4076d2:	addr16 push cs
  4076d4:	loopne 0x4076ed
  4076d6:	js     0x407723
  4076d8:	xor    bl,bl
  4076da:	cdq    
  4076db:	(bad)  
  4076dc:	mov    BYTE PTR [esi],bl
  4076de:	lock adc DWORD PTR [ebx+0x75],0xffffffbd
  4076e3:	jo     0x4076a5
  4076e5:	in     eax,dx
  4076e6:	jp     0x407677
  4076e8:	mov    edx,0xa710d456
  4076ed:	add    al,BYTE PTR [eax+0x45e315b1]
  4076f3:	ret    
  4076f4:	inc    edx
  4076f5:	push   esp
  4076f6:	pop    edi
  4076f7:	out    0xa5,al
  4076f9:	fdiv   st,st(1)
  4076fb:	dec    BYTE PTR [eax-0x2321d54e]
  407701:	in     al,dx
  407702:	loopne 0x4076b0
  407704:	outs   dx,BYTE PTR ds:[esi]
  407705:	lea    eax,[ebx-0x8b615d0]
  40770b:	int3   
  40770c:	sti    
  40770d:	rol    DWORD PTR [esi+0x119f6229],0x4f
  407714:	pop    esi
  407715:	arpl   di,bx
  407717:	mov    al,0x9c
  407719:	out    dx,al
  40771a:	call   0xfa48a5c0
  40771f:	imul   edi,DWORD PTR [edx-0x10],0xd12713ac
  407726:	xchg   esi,eax
  407727:	mov    ds:0x37de9175,al
  40772c:	jle    0x4076b5
  40772e:	ss pop ss
  407730:	add    DWORD PTR [ebp-0x6f],edi
  407733:	in     al,0x3a
  407735:	xlat   BYTE PTR ds:[ebx]
  407736:	mov    bl,0xea
  407738:	push   ds
  407739:	clc    
  40773a:	xchg   edi,eax
  40773b:	outs   dx,BYTE PTR ds:[esi]
  40773c:	inc    eax
  40773d:	fwait
  40773e:	(bad)  
  40773f:	jl     0x407783
  407741:	push   ds
  407742:	fmul   st(3),st
  407744:	pop    ecx
  407745:	cmp    al,0xc8
  407747:	mov    eax,0x6d6ab6ec
  40774c:	mov    esp,0xa0bb6703
  407751:	push   edi
  407752:	adc    ebx,DWORD PTR [ebp+ecx*2+0x7a]
  407756:	adc    DWORD PTR [edx+0x55976331],ebp
  40775c:	retf   0x4f6
  40775f:	adc    eax,0x7186b619
  407764:	pop    ebx
  407765:	sub    cl,al
  407767:	in     al,dx
  407768:	pop    edx
  407769:	pop    ecx
  40776a:	mov    DWORD PTR [edx-0x2c30e87b],ebp
  407770:	popf   
  407771:	xchg   edi,eax
  407772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407773:	xor    eax,0x64f78ad5
  407778:	jl     0x4077cf
  40777a:	mov    ebp,0x60e3c150
  40777f:	inc    esi
  407780:	add    BYTE PTR [edx+0x27d49435],ah
  407786:	aas    
  407787:	pop    ss
  407788:	dec    ecx
  407789:	retf   0x5308
  40778c:	dec    ebx
  40778d:	mov    bh,0xa9
  40778f:	push   ds
  407790:	mov    ebx,0x5c9c19ff
  407795:	pop    edx
  407796:	dec    eax
  407797:	jne    0x407724
  407799:	jnp    0x40774d
  40779b:	xchg   ecx,eax
  40779c:	sbb    al,BYTE PTR [ebx+ebx*8+0x2]
  4077a0:	ret    
  4077a1:	jbe    0x40774f
  4077a3:	ja     0x407814
  4077a5:	and    al,0x14
  4077a7:	fwait
  4077a8:	push   esp
  4077a9:	jecxz  0x4077fa
  4077ab:	xor    DWORD PTR [edx],edi
  4077ad:	mov    ebp,0xa23e1fae
  4077b2:	retf   0x3f09
  4077b5:	jae    0x40776e
  4077b7:	pop    ecx
  4077b8:	cmp    bl,BYTE PTR [ebp-0x5e]
  4077bb:	ret    
  4077bc:	dec    ebx
  4077bd:	pop    ecx
  4077be:	test   eax,0xb697161f
  4077c3:	cs xchg ebp,eax
  4077c5:	cli    
  4077c6:	fs into 
  4077c8:	xchg   DWORD PTR [edx+0x7b60fcba],ebx
  4077ce:	push   eax
  4077cf:	int    0xcc
  4077d1:	jb     0x40777c
  4077d3:	mov    ebp,0xb7b0d36f
  4077d8:	xlat   BYTE PTR ds:[ebx]
  4077d9:	push   esi
  4077da:	idiv   BYTE PTR [edx+eax*1-0x60]
  4077de:	dec    eax
  4077df:	leave  
  4077e0:	sbb    dh,bh
  4077e2:	cld    
  4077e3:	jmp    0xde58:0x7bb5c1f
  4077ea:	stos   DWORD PTR es:[edi],eax
  4077eb:	psubsb mm0,mm2
  4077ee:	jno    0x40785d
  4077f0:	adc    ch,dh
  4077f2:	xchg   BYTE PTR [eax],cl
  4077f4:	nop
  4077f5:	enter  0xbe17,0x8a
  4077f9:	fnstcw WORD PTR [eax-0x3ab9bc1b]
  4077ff:	jecxz  0x407835
  407801:	xor    al,0x62
  407803:	bound  edi,QWORD PTR [ebx+ebx*1+0x31908133]
  40780a:	repnz sub bl,BYTE PTR [eax+0xd432b37]
  407811:	test   BYTE PTR [edi],ah
  407813:	repz or eax,0xc8bc8b28
  407819:	rcr    ch,cl
  40781b:	pop    ss
  40781c:	jmp    0xf327b602
  407821:	sbb    ebx,DWORD PTR [ebx+ebp*8+0x1acd7571]
  407828:	cmp    DWORD PTR [ebp-0x64ac7a47],esp
  40782e:	mov    ebp,0xcfe95c7b
  407833:	dec    ebp
  407834:	scas   al,BYTE PTR es:[edi]
  407835:	aam    0xd3
  407837:	enter  0x7bf1,0x3a
  40783b:	cmp    al,0x56
  40783d:	add    bh,dl
  40783f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407840:	mov    ecx,0xf67e9fc0
  407845:	clc    
  407846:	(bad)  
  407848:	cmp    dl,BYTE PTR [edx+0x13]
  40784b:	lods   al,BYTE PTR es:[esi]
  40784d:	out    dx,eax
  40784e:	xchg   esp,eax
  40784f:	dec    ebp
  407850:	daa    
  407851:	jb     0x4078b3
  407853:	sub    al,0xb7
  407855:	mov    ebp,0x1cc11d0d
  40785a:	xchg   esi,eax
  40785b:	pop    es
  40785c:	mov    ds,WORD PTR [ebp+0x94945f]
  407862:	pop    edi
  407863:	(bad)  
  407864:	dec    esi
  407865:	ds pop edx
  407867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407868:	push   esi
  407869:	jnp    0x40780e
  40786b:	inc    edx
  40786c:	sub    BYTE PTR [esi],dh
  40786e:	int    0x0
  407870:	loopne 0x4077f9
  407872:	mov    BYTE PTR [ebx-0x233bcec9],ch
  407878:	sahf   
  407879:	in     eax,0x2d
  40787b:	(bad)  
  40787c:	jp     0x40782e
  40787e:	jb     0x40789b
  407880:	fisub  WORD PTR [edi]
  407882:	jl     0x40785e
  407884:	cvtpi2ps xmm3,mm2
  407887:	and    al,0xdf
  407889:	addr16 inc ecx
  40788b:	shl    DWORD PTR [ebx+0x109c7f28],cl
  407891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407892:	jmp    0x7a3108b4
  407897:	test   DWORD PTR [ebx-0x33418a16],edi
  40789d:	retf   0x1ee4
  4078a0:	cmc    
  4078a1:	pop    ecx
  4078a2:	add    ebp,eax
  4078a4:	inc    ebp
  4078a5:	in     al,0xa8
  4078a7:	mov    ecx,0x5db5710b
  4078ac:	stos   BYTE PTR es:[edi],al
  4078ad:	es jg  0x407908
  4078b0:	pushw  es
  4078b2:	in     eax,0xd7
  4078b4:	pop    ebp
  4078b5:	adc    DWORD PTR [esi-0x1c],ebx
  4078b8:	add    eax,0xe0aaf4e4
  4078bd:	mov    gs,WORD PTR ds:0xeca9b8b0
  4078c3:	xor    ebx,DWORD PTR [ebx-0x6a]
  4078c6:	out    dx,eax
  4078c7:	cs sbb eax,0x73bf6a83
  4078cd:	clc    
  4078ce:	pop    ds
  4078cf:	add    esp,ebp
  4078d1:	and    edi,esi
  4078d3:	gs scas al,BYTE PTR es:[edi]
  4078d5:	mov    eax,0xd531d91b
  4078da:	pop    ebp
  4078db:	sti    
  4078dc:	mov    esp,0x192a801f
  4078e1:	xchg   ecx,eax
  4078e2:	out    0x3f,eax
  4078e4:	pop    esi
  4078e5:	sub    al,bh
  4078e7:	xlat   BYTE PTR ds:[ebx]
  4078e8:	jle    0x4078ae
  4078ea:	dec    esp
  4078eb:	shl    DWORD PTR [edx+ecx*8],cl
  4078ee:	loop   0x4078e0
  4078f0:	(bad)  
  4078f1:	push   ss
  4078f2:	ja     0x40796d
  4078f4:	push   ecx
  4078f5:	push   0x5358fb77
  4078fa:	cwde   
  4078fb:	jb     0x4078b5
  4078fd:	sti    
  4078fe:	sub    bh,BYTE PTR [ebp-0x56]
  407901:	fisttp WORD PTR [ebx+0x3f673e1]
  407907:	fmul   st,st(4)
  407909:	push   eax
  40790a:	xchg   edx,eax
  40790b:	cmp    DWORD PTR ds:0x4643f3e8,esp
  407911:	fs inc ebx
  407913:	jbe    0x40791e
  407915:	aaa    
  407916:	scas   eax,DWORD PTR es:[edi]
  407917:	jg     0x40789e
  407919:	mov    esp,0x556f452e
  40791e:	fcomp  QWORD PTR [esi]
  407920:	adc    eax,0xc1576e1a
  407925:	or     DWORD PTR [edx],ecx
  407927:	das    
  407928:	push   es
  407929:	ret    0x4beb
  40792c:	sub    bl,ch
  40792e:	xchg   ecx,eax
  40792f:	sub    al,0x17
  407931:	mov    ecx,0x50af5963
  407936:	mov    esi,0xa7edc465
  40793b:	mov    DWORD PTR [esi+0x40],esp
  40793e:	mov    ch,0xc8
  407940:	iret   
  407941:	jbe    0x407964
  407943:	test   DWORD PTR [edi-0xeffcce5],esi
  407949:	cwde   
  40794a:	pop    edi
  40794b:	nop
  40794c:	mov    eax,0x37fe5ae9
  407951:	mov    ecx,0xc1931ada
  407956:	ss pop ebx
  407958:	sbb    bl,cl
  40795a:	dec    esi
  40795b:	sub    edx,edx
  40795d:	cmp    DWORD PTR [ebx+ebp*2-0x79eeaabe],0x22
  407965:	gs jne 0x407912
  407968:	inc    BYTE PTR [ebx+0x13]
  40796b:	push   ds
  40796c:	dec    edx
  40796d:	pop    esp
  40796e:	inc    esp
  40796f:	push   ss
  407970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407971:	push   ebx
  407972:	ret    0x572
  407975:	mov    ebx,0x6dca312b
  40797a:	out    0x31,eax
  40797c:	sbb    DWORD PTR ds:[ebx+edi*4-0x39],ecx
  407981:	ja     0x407957
  407983:	rol    BYTE PTR [ebp-0x7c],cl
  407986:	xchg   esi,eax
  407987:	add    BYTE PTR es:[ebp-0x2c6979],dh
  40798e:	cmp    bh,BYTE PTR [ebx-0x6b]
  407991:	gs aaa 
  407993:	je     0x40792e
  407995:	std    
  407996:	nop
  407997:	retf   
  407998:	and    ebp,DWORD PTR [ebx-0xf5d607b]
  40799e:	and    edi,DWORD PTR [edx+0x26]
  4079a1:	xchg   edi,eax
  4079a2:	inc    ebx
  4079a3:	scas   al,BYTE PTR es:[edi]
  4079a4:	pop    ds
  4079a5:	jns    0x40793e
  4079a7:	or     esp,ecx
  4079a9:	das    
  4079aa:	mov    ebp,0xfb9156bc
  4079af:	aad    0x6a
  4079b1:	push   ebx
  4079b2:	add    al,0x1d
  4079b4:	ds dec edx
  4079b6:	lods   eax,DWORD PTR ds:[esi]
  4079b7:	outs   dx,DWORD PTR ds:[esi]
  4079b8:	xchg   esp,eax
  4079b9:	add    eax,DWORD PTR [edi]
  4079bb:	inc    ebx
  4079bc:	(bad)  
  4079bd:	mov    edx,0xc5c73a6e
  4079c2:	imul   edx,DWORD PTR [edi+0xc0ed873],0xd1f394f5
  4079cc:	xchg   ebx,eax
  4079cd:	xchg   esp,eax
  4079ce:	icebp  
  4079cf:	lds    eax,FWORD PTR ds:0xe0bdb52d
  4079d5:	ja     0x4079b1
  4079d7:	sub    DWORD PTR [esi-0x353d81a8],edx
  4079dd:	dec    ebx
  4079de:	xor    al,0x4b
  4079e0:	push   ebx
  4079e1:	imul   esp,DWORD PTR [esp+edx*1],0x7d
  4079e5:	sub    eax,0x2040ca50
  4079ea:	mov    di,0x54f4
  4079ee:	icebp  
  4079ef:	mov    BYTE PTR [edx],dh
  4079f1:	xchg   BYTE PTR [eax+edx*2],bl
  4079f4:	arpl   WORD PTR [eax-0x5f5503c0],dx
  4079fa:	gs std 
  4079fc:	sbb    al,0xcf
  4079fe:	in     eax,0xb1
  407a00:	pop    edx
  407a01:	rcl    BYTE PTR [ebx],0xbf
  407a04:	cmp    bh,BYTE PTR [eax]
  407a06:	int    0xab
  407a08:	aas    
  407a09:	mov    ah,0x3b
  407a0b:	test   DWORD PTR [eax+0x73],0x999d61bc
  407a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a13:	and    esi,DWORD PTR [esi]
  407a15:	loop   0x407a6c
  407a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a18:	test   eax,0xcca86ea8
  407a1d:	sub    eax,0x7a655837
  407a22:	std    
  407a23:	cld    
  407a24:	cwde   
  407a25:	in     al,dx
  407a26:	call   0x20e6b3ff
  407a2b:	mov    ecx,0x2af37ba2
  407a30:	dec    ebx
  407a31:	push   ss
  407a32:	push   0xdf26faff
  407a37:	pop    ebx
  407a38:	mov    esp,0xec2dc929
  407a3d:	lea    ebp,[ecx+0x2b]
  407a40:	ss push ds
  407a42:	inc    eax
  407a43:	test   DWORD PTR [ecx-0x79433c0a],eax
  407a49:	xchg   esi,eax
  407a4a:	mov    DWORD PTR [ebp-0xd3cef7c],0xfd6ebb82
  407a54:	call   0x773530c6
  407a59:	(bad)  
  407a5a:	xlat   BYTE PTR ds:[ebx]
  407a5b:	icebp  
  407a5c:	sub    BYTE PTR [ebp+0x59],0x57
  407a60:	lods   eax,DWORD PTR ds:[esi]
  407a61:	sub    ebx,esi
  407a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a64:	call   0x98e1:0x85014821
  407a6b:	mov    edi,ds
  407a6d:	mov    eax,ds:0xa0288206
  407a72:	push   edi
  407a73:	jmp    0x256f373b
  407a78:	inc    BYTE PTR [eax+edi*4+0x7650fb6e]
  407a7f:	sub    al,0x77
  407a81:	cmp    esi,ebp
  407a83:	push   0xffffffd0
  407a85:	pop    esi
  407a86:	push   ecx
  407a87:	out    0x93,eax
  407a89:	push   eax
  407a8a:	lods   al,BYTE PTR ds:[esi]
  407a8b:	test   al,0x8
  407a8d:	fnstenv [ebx-0x1]
  407a90:	out    dx,eax
  407a91:	mov    edi,DWORD PTR [edx]
  407a93:	shl    dl,cl
  407a95:	int    0xbc
  407a97:	and    dl,BYTE PTR [ecx]
  407a99:	fcomi  st,st(6)
  407a9b:	jno    0x407a7b
  407a9d:	bound  edx,QWORD PTR [eax+edx*1-0x5a1a6742]
  407aa4:	ds loope 0x407a8b
  407aa7:	sti    
  407aa8:	repnz and BYTE PTR [edi],ah
  407aab:	addr16 dec ecx
  407aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aae:	push   es
  407aaf:	mov    edi,0xedb5f012
  407ab4:	idiv   cl
  407ab6:	nop
  407ab7:	out    dx,eax
  407ab8:	test   eax,0x4d278b2a
  407abd:	jb     0x407a4f
  407abf:	lds    esp,FWORD PTR [ecx-0x5c09da7b]
  407ac5:	std    
  407ac6:	stos   DWORD PTR es:[edi],eax
  407ac7:	mov    ds:0xc694d42e,eax
  407acc:	push   esp
  407acd:	lock pop ecx
  407acf:	mov    eax,ds:0xa00c83be
  407ad4:	dec    edi
  407ad5:	pop    esi
  407ad6:	or     al,0x5f
  407ad8:	xor    BYTE PTR [ebx],bh
  407ada:	lods   al,BYTE PTR ds:[esi]
  407adb:	fild   QWORD PTR [eax-0x53]
  407ade:	jl     0x407b5b
  407ae0:	pop    ebx
  407ae1:	jns    0x407afe
  407ae3:	xchg   esi,eax
  407ae4:	lods   al,BYTE PTR ds:[esi]
  407ae5:	push   ds
  407ae6:	pop    esp
  407ae7:	jg     0x407b39
  407ae9:	and    DWORD PTR [ebx+0x68c2de7],ecx
  407aef:	(bad)  
  407af0:	cmp    eax,0x161faf29
  407af5:	xchg   ecx,eax
  407af6:	xchg   DWORD PTR [ebx+0x4],esp
  407af9:	xchg   ebx,eax
  407afa:	sub    BYTE PTR [edx+0x6a],ch
  407afd:	shr    BYTE PTR [edi+0x21],cl
  407b00:	mov    edx,0x82883f7b
  407b05:	push   0x984c1981
  407b0a:	stos   DWORD PTR es:[edi],eax
  407b0b:	cmp    BYTE PTR [edi+0x23fe9ca4],al
  407b11:	and    BYTE PTR [edi],ch
  407b13:	mov    dh,0xfa
  407b15:	push   ebp
  407b16:	and    DWORD PTR [edi-0x76b10bd4],ecx
  407b1c:	fbstp  TBYTE PTR [ebx+eax*4]
  407b1f:	add    DWORD PTR [edi+0x61727a47],ebp
  407b25:	cmp    dl,0xc8
  407b28:	mov    edx,0x3b2d3ef0
  407b2d:	int3   
  407b2e:	xchg   edx,eax
  407b2f:	out    dx,eax
  407b30:	imul   edx,ebp,0x745e3701
  407b36:	dec    eax
  407b37:	cmp    DWORD PTR [eax+0x3c],ebx
  407b3a:	cdq    
  407b3b:	or     ah,BYTE PTR [ecx-0x9]
  407b3e:	sbb    BYTE PTR [edi],ch
  407b40:	(bad)  
  407b41:	in     eax,0x77
  407b43:	imul   eax,edi,0xae28d52e
  407b49:	push   esi
  407b4a:	clc    
  407b4b:	and    bh,BYTE PTR [esp+esi*8]
  407b4e:	add    ah,cl
  407b50:	inc    ebp
  407b51:	xlat   BYTE PTR ds:[ebx]
  407b52:	sub    eax,0x99c4f7ec
  407b57:	stc    
  407b58:	cli    
  407b59:	in     eax,dx
  407b5a:	push   ebp
  407b5b:	je     0x407b52
  407b5d:	adc    eax,0xaf40c6ae
  407b62:	cmp    BYTE PTR [ebx],0xa3
  407b65:	imul   ebp,DWORD PTR [edi+0x2a40f698],0x8f21a970
  407b6f:	mov    ebp,0xdec72750
  407b74:	mov    edx,DWORD PTR [ebp+0x630ed44d]
  407b7a:	pop    ds
  407b7b:	xor    DWORD PTR [esi-0x6b],0x8a705f9c
  407b82:	cmp    eax,0x7a2b45e3
  407b87:	push   0xb5d386a
  407b8c:	or     al,0xfd
  407b8e:	stos   DWORD PTR es:[edi],eax
  407b8f:	pushf  
  407b90:	shl    DWORD PTR [ebp-0x34a65ea],cl
  407b96:	inc    edi
  407b97:	mov    dl,0x13
  407b99:	lea    ebx,[ebp-0x18]
  407b9c:	int3   
  407b9d:	mov    bh,0xec
  407b9f:	in     al,0x33
  407ba1:	push   esp
  407ba2:	mov    dh,0xae
  407ba4:	sahf   
  407ba5:	addr16 push edi
  407ba7:	and    edi,DWORD PTR [eax-0x7e9fc868]
  407bad:	push   ss
  407bae:	mov    dh,0x80
  407bb0:	and    edi,DWORD PTR [eax+0x4ad11a85]
  407bb6:	mov    DWORD PTR [ecx+0x64],esi
  407bb9:	add    bh,ch
  407bbb:	mov    cl,0x2d
  407bbd:	or     edi,DWORD PTR [ecx]
  407bbf:	(bad)  
  407bc0:	mov    ebx,0x6d5c1c89
  407bc5:	repz xchg ebp,eax
  407bc7:	jecxz  0x407c47
  407bc9:	jb     0x407c42
  407bcb:	je     0x407c0c
  407bcd:	neg    ebx
  407bcf:	and    eax,esp
  407bd1:	fist   DWORD PTR [esi+edi*4+0xeeadc28]
  407bd8:	ror    esi,cl
  407bda:	repz popf 
  407bdc:	sub    al,0xf4
  407bde:	mov    ecx,0x2afcb4dd
  407be3:	pop    ds
  407be4:	xchg   DWORD PTR [eax],esp
  407be6:	leave  
  407be7:	and    BYTE PTR [edx+eiz*2],bl
  407bea:	inc    esi
  407beb:	inc    esi
  407bec:	mov    dh,0x94
  407bee:	cmp    al,0x76
  407bf0:	jbe    0x407bd9
  407bf2:	xor    al,0x1b
  407bf4:	pop    esp
  407bf5:	xchg   edi,eax
  407bf6:	sub    BYTE PTR [edi-0x33],ah
  407bf9:	sub    BYTE PTR [ecx],0xc1
  407bfc:	repnz loop 0x407ba7
  407bff:	xor    BYTE PTR [edi-0x4e33371b],0xf2
  407c06:	cmp    eax,0xc8394e25
  407c0b:	test   al,0x49
  407c0e:	mov    dl,0x80
  407c10:	stos   DWORD PTR es:[edi],eax
  407c11:	das    
  407c12:	xor    al,0x74
  407c14:	rcl    DWORD PTR [edi],0x0
  407c17:	xchg   DWORD PTR [ecx-0x3d],ecx
  407c1a:	mov    fs,esp
  407c1c:	push   ebp
  407c1d:	ins    DWORD PTR es:[edi],dx
  407c1e:	xor    eax,DWORD PTR [esi-0x65f24959]
  407c24:	pusha  
  407c25:	cmc    
  407c26:	mov    bl,0xe4
  407c28:	mov    ebx,0xc9a34712
  407c2d:	aam    0xb8
  407c2f:	jecxz  0x407c9f
  407c31:	fdiv   DWORD PTR [eax-0xe5232c1]
  407c37:	xor    ch,BYTE PTR [ebp+0x57]
  407c3a:	sbb    dl,BYTE PTR [edi]
  407c3c:	nop
  407c3d:	jecxz  0x407bee
  407c3f:	mov    ecx,0x7a4b0ccc
  407c44:	dec    edx
  407c45:	pop    ecx
  407c46:	adc    DWORD PTR [ebp-0x51],edi
  407c49:	retf   0xd632
  407c4c:	pop    ss
  407c4d:	repz scas eax,DWORD PTR es:[edi]
  407c4f:	ret    0x43b9
  407c52:	or     bl,BYTE PTR [eax+0x25]
  407c55:	(bad)  
  407c56:	les    esp,FWORD PTR [ebp+0xf486cc]
  407c5c:	es loop 0x407c32
  407c5f:	mov    dh,0x89
  407c61:	jno    0x407c62
  407c63:	(bad)  
  407c65:	dec    ebx
  407c66:	adc    al,0x38
  407c68:	jp     0x407ca8
  407c6a:	pop    edi
  407c6b:	and    BYTE PTR [esi],dl
  407c6d:	jle    0x407c88
  407c6f:	sbb    al,0xd5
  407c71:	ret    
  407c72:	xchg   esp,eax
  407c73:	cs dec ecx
  407c75:	out    dx,eax
  407c76:	cmp    eax,0xe79f496a
  407c7b:	xchg   dl,ch
  407c7d:	xor    bh,ch
  407c7f:	mov    al,0x6c
  407c81:	jo     0x407cf0
  407c83:	mov    edi,DWORD PTR [ebp-0x2cc97ff]
  407c89:	xchg   esp,eax
  407c8a:	dec    al
  407c8c:	pop    edx
  407c8d:	les    eax,FWORD PTR [ebx+0xfc00031]
  407c93:	fbstp  TBYTE PTR [edi-0x316b19a7]
  407c99:	cmp    edi,esp
  407c9b:	cmc    
  407c9c:	stc    
  407c9d:	nop
  407c9e:	je     0x407ce2
  407ca0:	mov    DWORD PTR cs:[ecx],esi
  407ca3:	shr    ebp,1
  407ca5:	mov    ?,WORD PTR [ebx]
  407ca7:	adc    DWORD PTR [eax],esi
  407ca9:	adc    edi,esp
  407cab:	dec    BYTE PTR [ecx-0x46]
  407cae:	dec    ebp
  407caf:	adc    edi,DWORD PTR [ecx+0x6f]
  407cb2:	addr16 dec ebp
  407cb4:	mov    cl,0xab
  407cb6:	hlt    
  407cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb8:	add    ebx,esi
  407cba:	(bad)  
  407cbc:	jno    0x407d30
  407cbe:	dec    eax
  407cbf:	and    DWORD PTR [esi-0x514a8bb9],ebx
  407cc5:	jo     0x407cb3
  407cc7:	jne    0x407d0e
  407cc9:	iret   
  407cca:	retf   
  407ccb:	dec    ebx
  407ccc:	adc    DWORD PTR [esi+0x4ad577f5],ebx
  407cd2:	and    esp,esp
  407cd4:	inc    ebp
  407cd5:	popf   
  407cd6:	(bad)  
  407cd7:	imul   eax,DWORD PTR [eax],0x4e0edd21
  407cdd:	inc    esp
  407cde:	cmc    
  407cdf:	imul   esi,DWORD PTR [edi+0x60],0x3ca632bb
  407ce6:	jmp    0x7ea6:0x39856383
  407ced:	(bad)  
  407cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cef:	pop    ebx
  407cf0:	jne    0x407cf4
  407cf2:	addr16 (bad) 
  407cf5:	test   esi,eax
  407cf7:	xor    BYTE PTR [ebx],bh
  407cf9:	xor    bl,bh
  407cfb:	leave  
  407cfc:	stos   BYTE PTR es:[edi],al
  407cfd:	(bad)  [ebx]
  407cff:	and    al,0x8b
  407d01:	or     eax,0xb03e51f0
  407d06:	inc    ebx
  407d07:	leave  
  407d08:	fsub   DWORD PTR [edi+ecx*8-0x67]
  407d0c:	and    ah,bh
  407d0e:	mov    esp,DWORD PTR [ebp-0x46b034b4]
  407d14:	push   0xd
  407d16:	mov    al,0xf3
  407d18:	fcomp  DWORD PTR gs:0x958fbcef
  407d1f:	dec    edx
  407d20:	imul   ecx,DWORD PTR [edx-0x6b],0xe74d8b8a
  407d27:	mov    edx,0x6060b6f7
  407d2c:	adc    BYTE PTR [ebx],bl
  407d2e:	dec    ebp
  407d2f:	or     al,0xfd
  407d31:	push   esi
  407d32:	or     ch,cl
  407d34:	and    al,0x50
  407d36:	jno    0x407d81
  407d38:	loop   0x407d8c
  407d3a:	mov    ah,0x4
  407d3c:	and    cl,BYTE PTR [eax]
  407d3e:	xor    DWORD PTR [edi-0x50],esi
  407d41:	mov    WORD PTR [ebx-0x4e93efc3],gs
  407d47:	pushf  
  407d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d49:	sti    
  407d4a:	sub    eax,0xeb77d2d
  407d4f:	xor    BYTE PTR [ecx+0x872ffee],ch
  407d55:	cdq    
  407d56:	ret    
  407d57:	ss jae 0x407d5e
  407d5a:	lods   eax,DWORD PTR ds:[esi]
  407d5b:	fcmovbe st,st(3)
  407d5d:	push   ss
  407d5e:	fdivp  st(2),st
  407d60:	adc    dh,BYTE PTR [ebx]
  407d62:	sbb    BYTE PTR [eax],0xc3
  407d65:	cmp    eax,edi
  407d67:	mov    edx,0xa4ba89eb
  407d6c:	jmp    0xcb25207a
  407d71:	repnz ins DWORD PTR es:[edi],dx
  407d73:	gs inc esi
  407d75:	cli    
  407d76:	pop    es
  407d77:	xor    al,bl
  407d79:	inc    ebp
  407d7a:	inc    eax
  407d7b:	cli    
  407d7c:	loop   0x407dc1
  407d7e:	or     ecx,esi
  407d80:	test   BYTE PTR [ebx],dh
  407d82:	cwde   
  407d83:	sbb    eax,0x880caaa1
  407d88:	and    BYTE PTR gs:[ecx+0xff6be9e],bl
  407d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d90:	shl    DWORD PTR [ebx+0x14],0xe7
  407d94:	fwait
  407d95:	pop    ecx
  407d96:	sub    DWORD PTR [ecx+0x0],0x4e
  407d9a:	or     BYTE PTR [ebx-0x62fc08e],0xaa
  407da1:	arpl   WORD PTR [edi+0x5d],si
  407da4:	scas   eax,DWORD PTR es:[edi]
  407da5:	mov    ah,0x5d
  407da7:	mov    dh,0x7c
  407da9:	je     0x407d6f
  407dab:	xor    ecx,DWORD PTR [esi+0x6e]
  407dae:	mov    ds:0x8d7e11ff,eax
  407db3:	cmc    
  407db4:	push   eax
  407db5:	xchg   ebp,eax
  407db6:	aas    
  407db7:	adc    BYTE PTR [ecx+0x5e],ah
  407dba:	inc    ebx
  407dbb:	jns    0x407d7c
  407dbd:	test   DWORD PTR [eiz*2-0x3491b43a],edx
  407dc4:	jns    0x407de4
  407dc6:	jne    0x407dd9
  407dc8:	(bad)  [edx-0x6ef584fb]
  407dce:	mov    DWORD PTR [edx+0x13d4acc5],edi
  407dd4:	loop   0x407dec
  407dd6:	leave  
  407dd7:	jnp    0x407db2
  407dd9:	imul   ecx,DWORD PTR [edx+0x27],0xb0987552
  407de0:	(bad)  
  407de1:	test   al,0xb1
  407de3:	fidiv  WORD PTR [eax+0x40]
  407de6:	xor    DWORD PTR [eax-0x7ce84156],0xf
  407ded:	jp     0x1809afcf
  407df3:	jg     0x407df5
  407df5:	repz enter 0xd2ac,0x82
  407dfa:	aas    
  407dfb:	adc    BYTE PTR ds:0x2ae95365,al
  407e01:	mov    al,ds:0x6b703323
  407e06:	pushf  
  407e07:	sar    DWORD PTR [edx-0x32],0x71
  407e0b:	bswap  esi
  407e0d:	inc    esp
  407e0e:	or     eax,0xa83a436f
  407e13:	mov    DWORD PTR [eax+0x47],ecx
  407e16:	ins    BYTE PTR es:[edi],dx
  407e17:	or     edx,eax
  407e19:	jo     0x407ddb
  407e1b:	(bad)  
  407e1c:	jle    0x407dc4
  407e1e:	sbb    eax,0xb21d696
  407e23:	sahf   
  407e24:	inc    edx
  407e25:	lahf   
  407e26:	loop   0x407e69
  407e28:	fild   QWORD PTR ds:0xe4bb69a0
  407e2f:	or     esp,edx
  407e31:	pop    DWORD PTR [ecx+0x2c]
  407e34:	aaa    
  407e35:	dec    ecx
  407e36:	dec    ecx
  407e37:	clc    
  407e38:	mov    esp,DWORD PTR [ebx+0x48153005]
  407e3e:	push   0xa
  407e40:	adc    al,0x17
  407e42:	jecxz  0x407ea8
  407e44:	test   al,0x8f
  407e46:	mov    esi,0x36cfa8e5
  407e4b:	mov    ch,0x98
  407e4d:	xchg   ebx,eax
  407e4e:	aad    0x97
  407e50:	lods   al,BYTE PTR ds:[esi]
  407e51:	adc    bl,BYTE PTR [ebx]
  407e53:	adc    DWORD PTR [ebp+0x41],ebp
  407e56:	mov    dl,0x94
  407e58:	mov    al,BYTE PTR [ecx]
  407e5a:	mov    ecx,0xcecdc500
  407e5f:	nop
  407e60:	jmp    0x170c:0xf1a666c6
  407e67:	xor    BYTE PTR [edi],ah
  407e69:	lahf   
  407e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e6b:	fistp  WORD PTR ds:0xf035d6db
  407e71:	or     ah,al
  407e73:	sub    BYTE PTR [eax*1+0x109ada37],dh
  407e7a:	test   BYTE PTR [ebp+0x25aa909e],bh
  407e80:	sub    edi,edx
  407e82:	fnclex 
  407e84:	ss test al,0x90
  407e87:	sbb    BYTE PTR [esp+edi*8+0x7226f01],bl
  407e8e:	pop    ecx
  407e8f:	out    dx,eax
  407e90:	inc    ecx
  407e91:	pop    ebp
  407e92:	push   esi
  407e93:	fbstp  TBYTE PTR [esi-0x29]
  407e96:	and    DWORD PTR ds:0xd3180b9,edx
  407e9c:	inc    edi
  407e9d:	xor    ebp,DWORD PTR [edx]
  407e9f:	xchg   BYTE PTR [ebx-0x57],bl
  407ea2:	xchg   esi,eax
  407ea3:	push   edx
  407ea4:	or     al,ah
  407ea6:	fidiv  WORD PTR [edx+ecx*1+0x3d]
  407eaa:	in     eax,dx
  407eab:	push   ds
  407eac:	jmp    0x407f14
  407eae:	fnstsw WORD PTR [ebx+0x78f1feb2]
  407eb4:	jb     0x407ef1
  407eb6:	loop   0x407e4c
  407eb8:	sbb    esp,DWORD PTR [ebp-0x51bc1110]
  407ebe:	add    DWORD PTR [edx+0x6b],eax
  407ec1:	sbb    ch,bl
  407ec3:	xor    bh,ch
  407ec5:	pushf  
  407ec6:	adc    BYTE PTR [esi],bh
  407ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec9:	ds xchg ecx,eax
  407ecb:	xchg   DWORD PTR [ebp+ebp*1+0x54cc228a],edi
  407ed2:	xchg   ebp,eax
  407ed3:	outs   dx,BYTE PTR ds:[esi]
  407ed4:	inc    edx
  407ed5:	pushf  
  407ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed7:	mov    ch,0x85
  407ed9:	adc    al,0xf5
  407edb:	popa   
  407edc:	std    
  407edd:	mov    ch,0x50
  407edf:	fwait
  407ee0:	xchg   edi,eax
  407ee1:	loopne 0x407f44
  407ee3:	push   0x677d296a
  407ee8:	jp     0x407ef9
  407eea:	xor    BYTE PTR [esi+0x5f],0xf
  407eee:	pop    ebp
  407eef:	xchg   BYTE PTR [ecx+edi*1],ch
  407ef2:	add    eax,0x7dbcbdfc
  407ef7:	mov    dl,0x27
  407ef9:	shl    bh,0xd4
  407efc:	sub    esp,ecx
  407efe:	jne    0x407f3a
  407f00:	jns    0x407ee3
  407f02:	(bad)  
  407f03:	jo     0x407eab
  407f05:	ins    DWORD PTR es:[edi],dx
  407f06:	dec    esp
  407f07:	fs addr16 leave 
  407f0a:	sub    esi,DWORD PTR [esi]
  407f0c:	das    
  407f0d:	daa    
  407f0e:	outs   dx,BYTE PTR ds:[esi]
  407f0f:	ret    
  407f10:	mov    edi,0x3fef8774
  407f15:	jl     0x407ef1
  407f17:	push   eax
  407f18:	mov    eax,0xf840ee5d
  407f1d:	fnstsw WORD PTR [eax-0x15]
  407f20:	adc    esi,DWORD PTR [ebx]
  407f22:	jb     0x407ed7
  407f24:	mov    ecx,0xbf6b4136
  407f29:	push   esi
  407f2a:	dec    edx
  407f2b:	sbb    al,0x7a
  407f2d:	xor    eax,0xb7c16c15
  407f32:	pop    esp
  407f33:	sub    dl,ch
  407f35:	sub    bh,BYTE PTR [edx]
  407f37:	es mov edx,0xd6b718a9
  407f3d:	pushf  
  407f3e:	mov    esp,0xe753b43d
  407f43:	cmp    al,0xe0
  407f45:	repz int 0xe4
  407f48:	rol    eax,0xb9
  407f4b:	push   ebp
  407f4c:	push   0x3a
  407f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4f:	dec    esp
  407f50:	into   
  407f51:	push   es
  407f52:	xchg   DWORD PTR [edi],eax
  407f54:	in     eax,dx
  407f55:	sbb    BYTE PTR [edi+0x2f878ba0],dh
  407f5b:	test   DWORD PTR [edi],esi
  407f5d:	push   eax
  407f5e:	std    
  407f5f:	pop    edx
  407f60:	repnz push edx
  407f62:	adc    BYTE PTR [edi+0x35e83b4d],bl
  407f68:	dec    ebp
  407f69:	mov    ebx,0xc71f5e7b
  407f6e:	sub    al,0xc4
  407f70:	bound  esp,QWORD PTR [esi-0x56]
  407f73:	aad    0xe8
  407f75:	push   ss
  407f76:	bound  ebx,QWORD PTR [edx]
  407f78:	test   al,0xfb
  407f7a:	test   cl,bl
  407f7c:	push   eax
  407f7d:	sahf   
  407f7e:	outs   dx,BYTE PTR ds:[esi]
  407f7f:	mov    ch,0x20
  407f81:	inc    ecx
  407f82:	mov    dl,0xeb
  407f84:	dec    edx
  407f85:	jbe    0x407f2a
  407f87:	cmc    
  407f88:	rcl    ebp,1
  407f8a:	dec    ebp
  407f8b:	jne    0x407fa6
  407f8d:	and    BYTE PTR [ebx+0x3b],bl
  407f90:	inc    edi
  407f91:	retf   
  407f92:	jb     0x407f38
  407f94:	mov    ch,0xae
  407f96:	xor    edi,edx
  407f98:	scas   al,BYTE PTR es:[edi]
  407f99:	xor    eax,0xba796faf
  407f9e:	nop
  407f9f:	pop    edx
  407fa0:	sbb    eax,DWORD PTR [ecx+0x4d]
  407fa3:	test   eax,0x428e5cd
  407fa8:	popf   
  407fa9:	inc    edi
  407faa:	leave  
  407fab:	fcom   QWORD PTR [ebp+0x71bea245]
  407fb1:	add    ch,BYTE PTR [ecx-0x5442ddc3]
  407fb7:	call   0x3426:0x21dfaf23
  407fbe:	xchg   BYTE PTR [esi],bl
  407fc0:	sbb    DWORD PTR [ecx-0x27a71eff],edi
  407fc6:	lds    esi,FWORD PTR ds:0x6e57b17a
  407fcc:	loop   0x407f83
  407fce:	mov    ebx,?
  407fd0:	adc    eax,0x338c1725
  407fd5:	sar    BYTE PTR [edi],1
  407fd7:	call   0x5437:0x5a4ac746
  407fde:	std    
  407fdf:	and    bl,cl
  407fe1:	mov    dl,BYTE PTR [ecx+0x7ceac05f]
  407fe7:	push   eax
  407fe8:	jb     0x407fb2
  407fea:	mov    esp,0x84b98d6f
  407fef:	aam    0x54
  407ff1:	icebp  
  407ff2:	lahf   
  407ff3:	icebp  
  407ff4:	(bad)
  407ff8:	pop    ecx
  407ff9:	pop    ebx
  407ffa:	pop    edi
  407ffb:	cwde   
  407ffc:	stos   BYTE PTR es:[edi],al
  407ffd:	mov    al,0xf6
  407fff:	retf   
  408000:	mov    eax,0xa09ca83b
  408005:	cmp    BYTE PTR [eax-0xdea7d1],0x14
  40800c:	push   edx
  40800d:	cmc    
  40800e:	push   0x6a
  408010:	shl    BYTE PTR [ebp+ebx*4-0x31e95b8b],cl
  408017:	mov    edx,0x6af080dc
  40801c:	pusha  
  40801d:	enter  0x3b04,0xd4
  408021:	mov    bl,0x2d
  408023:	xor    edi,DWORD PTR [esi]
  408025:	and    ch,BYTE PTR [esi]
  408027:	mov    ah,0xfc
  408029:	popf   
  40802a:	and    DWORD PTR [eax+0x57],esp
  40802d:	pusha  
  40802e:	xor    al,0xdc
  408030:	mov    esi,0xc37494a9
  408035:	cli    
  408036:	cdq    
  408037:	out    0xc3,eax
  408039:	scas   eax,DWORD PTR es:[edi]
  40803a:	push   edi
  40803b:	pop    esp
  40803c:	sti    
  40803d:	ficom  DWORD PTR [ebx]
  40803f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408040:	fldcw  WORD PTR [ecx-0xf4cebbb]
  408046:	fdivr  QWORD PTR [eax+ebx*1-0x2c161dde]
  40804d:	ins    BYTE PTR es:[edi],dx
  40804e:	mov    edi,0xe71712e0
  408053:	addr16 mov al,ds:0x4779
  408057:	sub    ecx,DWORD PTR [ecx+ebp*8-0x77089760]
  40805e:	cwde   
  40805f:	loope  0x408051
  408061:	jno    0x40800e
  408063:	mov    ecx,0x17c536b9
  408068:	test   DWORD PTR [edx],eax
  40806a:	inc    edx
  40806b:	push   edi
  40806c:	jecxz  0x4080d8
  40806e:	dec    ecx
  40806f:	out    0xb3,al
  408071:	push   ss
  408072:	mov    eax,ds:0x8fa0647c
  408077:	push   ebp
  408078:	pop    ebp
  408079:	sub    eax,0x355500b7
  40807e:	adc    esp,eax
  408080:	mov    WORD PTR [ebx+eax*1],ds
  408083:	ror    BYTE PTR [ebx-0x4a30da6d],1
  408089:	sbb    DWORD PTR [edx*8-0x4036fd8b],eax
  408090:	je     0x40803e
  408092:	xor    ebp,eax
  408094:	dec    edi
  408095:	xor    eax,0x8e7a0da1
  40809a:	imul   eax,DWORD PTR [ecx-0x73ed50cf],0x1b03c2a9
  4080a4:	mov    cl,0xc9
  4080a6:	xchg   edi,eax
  4080a7:	ins    BYTE PTR es:[edi],dx
  4080a8:	dec    ebx
  4080a9:	(bad)  
  4080aa:	push   esp
  4080ab:	adc    edi,esp
  4080ad:	pushf  
  4080ae:	or     BYTE PTR [edx],dl
  4080b0:	mov    esi,0xc636f6ff
  4080b5:	shl    DWORD PTR [eax-0x2d40dbd9],cl
  4080bb:	mov    ecx,0x68fb1d8d
  4080c0:	enter  0x367d,0x75
  4080c4:	dec    edx
  4080c5:	rcr    BYTE PTR [ecx-0x6d],cl
  4080c8:	push   ecx
  4080c9:	sub    esp,DWORD PTR [esi+0x75]
  4080cc:	mov    ah,0x28
  4080ce:	mov    esp,DWORD PTR [ebx]
  4080d0:	push   esp
  4080d1:	mov    ss,WORD PTR [esi+esi*2+0x7a]
  4080d5:	pop    edi
  4080d6:	jp     0x4080ad
  4080d8:	mov    WORD PTR [ebp+0x2c],?
  4080db:	inc    ecx
  4080dc:	fnstenv [eax]
  4080de:	gs loopne 0x4080e8
  4080e1:	daa    
  4080e2:	mov    cl,dh
  4080e4:	add    DWORD PTR [ecx],0x96c2e156
  4080ea:	hlt    
  4080eb:	mov    ebx,0x308f14e1
  4080f0:	daa    
  4080f1:	je     0x408137
  4080f3:	(bad)  
  4080f5:	loop   0x40810e
  4080f7:	shr    dl,cl
  4080f9:	xchg   BYTE PTR [edx-0x27],dh
  4080fc:	popa   
  4080fd:	mov    edx,ebp
  4080ff:	push   cs
  408100:	rcr    BYTE PTR [edi+0x7c],cl
  408103:	jbe    0x4080a7
  408105:	add    eax,0xf815bb0a
  40810a:	cwde   
  40810b:	sub    ebx,esp
  40810d:	push   es
  40810e:	icebp  
  40810f:	push   ds
  408110:	xchg   edi,eax
  408111:	sbb    ebp,0x923cdfe2
  408117:	or     al,0xf0
  408119:	jno    0x408179
  40811b:	sbb    eax,0x17021ac2
  408120:	mov    esi,0xdae6350b
  408125:	test   al,0x7e
  408127:	outs   dx,DWORD PTR ds:[esi]
  408128:	dec    edx
  408129:	in     al,dx
  40812a:	fdivr  QWORD PTR [edx+0x4]
  40812d:	mov    bh,0xd4
  40812f:	mov    esp,DWORD PTR [eax-0x2dad2251]
  408135:	inc    ebx
  408136:	push   es
  408137:	dec    ecx
  408138:	in     eax,0xce
  40813a:	cmp    BYTE PTR [ecx+0x7de79991],ah
  408140:	popf   
  408141:	xor    dl,BYTE PTR [bx+di]
  408144:	adc    al,0xd1
  408146:	ins    DWORD PTR es:[edi],dx
  408147:	push   edi
  408148:	and    BYTE PTR [edi-0x26e30498],0x22
  40814f:	cmp    al,0x4
  408151:	retf   0x67c9
  408154:	mov    dh,0x22
  408156:	and    edi,DWORD PTR [ebp-0x50f4d22f]
  40815c:	shr    DWORD PTR gs:[eax-0x2d7ab980],0x15
  408164:	push   cs
  408165:	xor    ebp,DWORD PTR [ebp-0x7d]
  408168:	inc    eax
  408169:	lahf   
  40816a:	add    bh,dh
  40816c:	lock je 0x408147
  40816f:	dec    edx
  408170:	pop    es
  408171:	or     ebp,DWORD PTR [eax+0x331e6af2]
  408177:	pop    ebp
  408178:	pop    edx
  408179:	lahf   
  40817a:	aas    
  40817b:	repnz in eax,dx
  40817d:	inc    esi
  40817e:	lods   al,BYTE PTR ds:[esi]
  40817f:	gs mov ecx,0x3467e2ed
  408185:	xor    al,0x50
  408187:	inc    eax
  408188:	ja     0x4081a4
  40818a:	sbb    al,0x23
  40818c:	popa   
  40818d:	sbb    al,0xd4
  40818f:	pop    esp
  408190:	inc    esi
  408191:	inc    esi
  408192:	call   0x6921:0x9cbfb69f
  408199:	test   eax,0xa7f2b05a
  40819e:	mov    al,0x3b
  4081a0:	sbb    BYTE PTR [edi+0x4ab4fec0],bl
  4081a6:	jo     0x408227
  4081a8:	inc    esi
  4081a9:	xor    esi,DWORD PTR [edx+0x2bbc6f94]
  4081af:	pusha  
  4081b0:	pop    ebx
  4081b1:	call   esp
  4081b3:	and    bh,ah
  4081b5:	xchg   BYTE PTR [ecx+0x35],al
  4081b8:	icebp  
  4081b9:	ret    
  4081ba:	or     edi,DWORD PTR [ecx]
  4081bc:	(bad)  
  4081be:	xor    ecx,DWORD PTR [esi]
  4081c0:	push   edx
  4081c1:	repnz add DWORD PTR [ebp+0x6],esi
  4081c5:	xor    BYTE PTR [edx+0x27],0x34
  4081c9:	jp     0x4081f4
  4081cb:	(bad)  
  4081cc:	mov    WORD PTR [edx-0x2a921bdd],ds
  4081d2:	retf   
  4081d3:	call   0xad1b01ae
  4081d8:	push   ss
  4081d9:	jno    0x40820c
  4081db:	adc    eax,0xe718b246
  4081e0:	mov    al,ds:0x9f001bf0
  4081e5:	stc    
  4081e6:	xchg   esi,eax
  4081e7:	rcl    edi,cl
  4081e9:	js     0x4081bd
  4081eb:	mov    ds:0xe34821b2,eax
  4081f0:	mov    ds:0x1cc97378,eax
  4081f5:	data16 add al,0xb
  4081f8:	sbb    DWORD PTR [ebx+eiz*8],0x3e
  4081fc:	pop    ds
  4081fd:	fisttp QWORD PTR [edx]
  4081ff:	sub    al,0xbb
  408201:	inc    esi
  408202:	aad    0xb6
  408204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408205:	pop    edx
  408206:	cdq    
  408207:	aad    0x92
  408209:	mov    ds:0xe9a0cf9d,eax
  40820e:	cld    
  40820f:	and    eax,eax
  408211:	fiadd  DWORD PTR [ecx+esi*4+0x3425a759]
  408218:	pusha  
  408219:	ror    esp,cl
  40821b:	retf   
  40821c:	jg     0x4081cc
  40821e:	aas    
  40821f:	sbb    BYTE PTR ds:[edx+0x413f30d7],bl
  408226:	mov    al,ds:0x3cf60cfb
  40822b:	bound  ebp,QWORD PTR [ebp+0x60]
  40822e:	lods   ax,WORD PTR ds:[esi]
  408230:	aas    
  408231:	adc    al,0xd2
  408233:	fisub  DWORD PTR [ebx+0x67]
  408236:	pop    ebp
  408237:	xchg   DWORD PTR [ebx+0x5d],eax
  40823a:	or     ebp,esp
  40823c:	push   ss
  40823d:	fisub  WORD PTR [esi-0x1]
  408240:	and    eax,0x3688d285
  408245:	or     dh,bl
  408247:	xor    BYTE PTR [eax+0x75],0x82
  40824b:	mov    WORD PTR [edi],ss
  40824d:	stc    
  40824e:	out    dx,al
  40824f:	mov    dl,0x73
  408251:	jns    0x4081fc
  408253:	fild   DWORD PTR [eax+ecx*2]
  408256:	das    
  408257:	(bad)  
  408259:	xor    dl,al
  40825b:	sub    esi,esi
  40825d:	or     eax,0x9fb351ed
  408262:	sahf   
  408263:	inc    BYTE PTR [edi+0x7af8ecf2]
  408269:	or     ah,BYTE PTR [ebp+0x414085a]
  40826f:	int    0xb9
  408271:	mov    ch,0xb0
  408273:	lock sub eax,0x136217ab
  408279:	cmp    BYTE PTR [ebp-0x22],bh
  40827c:	jmp    0xf2621189
  408281:	xor    ah,ah
  408283:	xor    al,0x43
  408285:	push   ds
  408286:	mov    al,ds:0xd043399b
  40828b:	pop    ebp
  40828c:	daa    
  40828d:	dec    esi
  40828e:	fnstsw WORD PTR [esi+0x6c]
  408291:	sahf   
  408292:	add    ebx,DWORD PTR [ecx-0x39]
  408295:	push   ecx
  408296:	imul   edx,DWORD PTR [ebx],0xaf960099
  40829c:	lds    edx,FWORD PTR [esi]
  40829e:	cmp    dl,BYTE PTR [ebx-0x1]
  4082a1:	lods   al,BYTE PTR ds:[esi]
  4082a2:	add    DWORD PTR [ebp+0x7fdbf015],esi
  4082a8:	mov    ebx,0x42c1463a
  4082ad:	ja     0x4082ff
  4082af:	aaa    
  4082b0:	in     al,dx
  4082b1:	aaa    
  4082b2:	cmovg  edx,esi
  4082b5:	in     eax,0xa1
  4082b7:	(bad)  
  4082b8:	fsub   st(0),st
  4082ba:	push   esp
  4082bb:	aas    
  4082bc:	xor    bh,BYTE PTR [ebx-0x68d2cb0a]
  4082c2:	pop    edi
  4082c3:	cmc    
  4082c4:	pop    es
  4082c5:	xchg   esp,eax
  4082c6:	sub    BYTE PTR [ecx+0xd13b9f0],bl
  4082cc:	out    0xd2,eax
  4082ce:	shl    DWORD PTR [esi+ecx*1+0x4b6a28d6],cl
  4082d5:	pop    edi
  4082d6:	pop    es
  4082d7:	mov    ebx,0x35e84dee
  4082dc:	lods   al,BYTE PTR ds:[esi]
  4082dd:	scas   al,BYTE PTR es:[edi]
  4082de:	push   0xffffffd8
  4082e0:	mov    ebx,0xd0fbea88
  4082e5:	xor    eax,0xe7059c53
  4082ea:	push   edx
  4082eb:	or     BYTE PTR [ebx-0x7b],ah
  4082ee:	ss dec ecx
  4082f0:	(bad)  
  4082f1:	fdivr  st,st(4)
  4082f3:	cmp    eax,0x386f6a12
  4082f8:	pop    ebx
  4082f9:	out    0xe2,al
  4082fb:	mov    edx,0x3857e113
  408300:	mov    dl,0x2
  408302:	std    
  408303:	or     eax,0x7efa2e8b
  408308:	add    BYTE PTR [edx-0x20],dh
  40830b:	std    
  40830c:	inc    esp
  40830d:	test   DWORD PTR [edi-0x5f74f914],ebp
  408313:	addr16 jp 0x4082a0
  408316:	mov    ds:0x291c28f0,al
  40831b:	ins    DWORD PTR es:[edi],dx
  40831c:	mov    ecx,0x6daa3b05
  408321:	jle    0x4082fa
  408323:	jle    0x408385
  408325:	ins    BYTE PTR es:[edi],dx
  408326:	xlat   BYTE PTR ds:[ebx]
  408327:	mov    ds:0x15250552,al
  40832c:	test   eax,0x23356b63
  408331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408332:	mov    ds:0x3233cf6b,eax
  408337:	div    edi
  408339:	sub    esp,ebp
  40833b:	fdivp  st(0),st
  40833d:	daa    
  40833e:	aas    
  40833f:	aad    0x8f
  408341:	leave  
  408342:	loop   0x4083a9
  408344:	arpl   WORD PTR [edx+esi*4-0x43],ax
  408348:	pop    edi
  408349:	fstp   st(0)
  40834b:	mov    ebx,0x910718d9
  408350:	lock xchg ebp,eax
  408352:	dec    esi
  408353:	jno    0x408386
  408355:	hlt    
  408356:	cs cdq 
  408358:	enter  0xb523,0xf7
  40835c:	dec    edx
  40835d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40835e:	push   ebp
  40835f:	repnz div DWORD PTR [eax+0x13]
  408363:	int3   
  408364:	xor    al,0xce
  408366:	pop    ebp
  408367:	jne    0x408338
  408369:	inc    ecx
  40836a:	popa   
  40836b:	(bad)  
  40836c:	mov    ebp,0xad453519
  408371:	fisttp DWORD PTR [esi-0x71]
  408374:	fs jb  0x40836a
  408377:	out    dx,al
  408378:	jg     0x4083b9
  40837a:	(bad)  
  40837c:	mov    ebx,0xebbf68b
  408381:	in     eax,dx
  408382:	icebp  
  408383:	(bad)  
  408384:	std    
  408385:	scas   al,BYTE PTR es:[edi]
  408386:	or     al,0xb4
  408388:	fmul   st(7),st
  40838a:	cs sub eax,0xc76dd75e
  408390:	out    0xc4,eax
  408392:	fimul  WORD PTR [ebp+0x6a]
  408395:	mov    al,ds:0xff6e83e2
  40839a:	cs inc edx
  40839c:	stc    
  40839d:	test   BYTE PTR [ebx+0x625bc530],al
  4083a3:	in     al,0x1d
  4083a5:	mov    BYTE PTR [edx-0x6ad939ac],ch
  4083ab:	lea    ecx,[ebx+0x77]
  4083ae:	add    al,0xf6
  4083b0:	jnp    0x4083be
  4083b2:	cmp    DWORD PTR [edi+0x70bb1fda],0xc6d32f5c
  4083bc:	push   ecx
  4083bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083be:	pop    ecx
  4083bf:	add    eax,0x53c5be99
  4083c4:	pop    ecx
  4083c5:	into   
  4083c6:	adc    eax,0xdeb43736
  4083cb:	cmp    BYTE PTR [ebx],0x9a
  4083ce:	out    0x69,eax
  4083d0:	jb     0x40836b
  4083d2:	xchg   ebx,eax
  4083d3:	lods   eax,DWORD PTR ds:[esi]
  4083d4:	pop    edi
  4083d5:	in     eax,dx
  4083d6:	mov    ebx,0x8c77e63e
  4083db:	lods   al,BYTE PTR ds:[esi]
  4083dc:	cmc    
  4083dd:	cwde   
  4083de:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e0:	jg     0x4083a3
  4083e2:	xchg   esp,eax
  4083e3:	xchg   esp,eax
  4083e4:	add    ebx,DWORD PTR [eax]
  4083e6:	push   eax
  4083e7:	lahf   
  4083e8:	stc    
  4083e9:	xchg   edi,eax
  4083ea:	push   ebp
  4083eb:	(bad)
  4083f0:	jo     0x408439
  4083f2:	out    0xc6,al
  4083f4:	or     eax,0x8e1d699b
  4083f9:	jp     0x408405
  4083fb:	or     BYTE PTR [eax],dh
  4083fd:	push   esp
  4083fe:	es xor al,0x8a
  408401:	in     eax,0x91
  408403:	xchg   ebx,eax
  408404:	push   ss
  408405:	dec    ecx
  408406:	push   0xffffffe3
  408408:	les    edi,FWORD PTR [eax]
  40840a:	sub    ch,BYTE PTR [esp+edi*8]
  40840d:	in     eax,0xe6
  40840f:	pop    ecx
  408410:	dec    edi
  408411:	xor    DWORD PTR [edx],ebp
  408413:	push   ss
  408414:	xchg   edi,ebp
  408416:	jmp    0x70f4611
  40841b:	aas    
  40841c:	jmp    0x786e:0x9fc8cc15
  408423:	(bad)  
  408424:	in     eax,dx
  408425:	adc    ch,cl
  408427:	pop    ds
  408428:	ins    DWORD PTR es:[edi],dx
  408429:	ins    DWORD PTR es:[edi],dx
  40842a:	fild   DWORD PTR [ebx-0x4966a76a]
  408430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408431:	adc    eax,0x12bc6242
  408436:	test   eax,0x17383b4f
  40843b:	pop    esp
  40843c:	jb     0x4083c5
  40843e:	ror    BYTE PTR [ebx-0x57],1
  408441:	retf   
  408442:	div    BYTE PTR [ebx-0x53]
  408445:	imul   ecx,DWORD PTR [eax-0x4b],0x9967e4d
  40844c:	das    
  40844d:	arpl   sp,dx
  40844f:	sbb    al,0x80
  408451:	mov    edx,0x42a6be02
  408456:	sub    ecx,0x54
  408459:	in     al,0x28
  40845b:	jg     0x4084d6
  40845d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40845e:	stos   BYTE PTR es:[edi],al
  40845f:	lods   eax,DWORD PTR ds:[esi]
  408460:	neg    BYTE PTR [esi+0x17120a98]
  408466:	xchg   ebx,eax
  408467:	pop    esp
  408468:	(bad)  
  408469:	cli    
  40846a:	cmc    
  40846b:	cmp    al,0x45
  40846d:	(bad)  
  40846e:	shl    esp,cl
  408470:	add    eax,DWORD PTR [eax+0x732055f6]
  408476:	repnz dec esp
  408478:	daa    
  408479:	popa   
  40847a:	push   cs
  40847b:	ret    
  40847c:	mov    ss,WORD PTR [eax-0x5b]
  40847f:	jnp    0x408430
  408481:	mov    al,ds:0x1edb9ab7
  408486:	sbb    bh,BYTE PTR [ebx+0x7f]
  408489:	xchg   BYTE PTR fs:[esp+ebp*2],dh
  40848d:	(bad)  
  40848e:	aam    0x19
  408490:	lock dec esi
  408492:	xor    BYTE PTR [esp+esi*8-0x4fa7ddbf],bh
  408499:	pop    ebx
  40849a:	mov    dl,0x4c
  40849c:	jecxz  0x408438
  40849e:	repz mov bh,0xdc
  4084a1:	inc    ebp
  4084a2:	pop    edi
  4084a3:	addr16 je 0x4084f9
  4084a6:	repz mov cl,0xfb
  4084a9:	aas    
  4084aa:	retf   0x7145
  4084ad:	adc    BYTE PTR [esi+0x13],bl
  4084b0:	push   ecx
  4084b1:	ins    BYTE PTR es:[edi],dx
  4084b2:	mov    ebp,0x1c902872
  4084b7:	and    eax,0xec50dd35
  4084bc:	icebp  
  4084bd:	jge    0x408524
  4084bf:	inc    ecx
  4084c0:	mov    ebx,DWORD PTR [ebx+0x5e0c2df2]
  4084c6:	pop    eax
  4084c7:	test   edx,edx
  4084c9:	pusha  
  4084ca:	pop    esi
  4084cb:	in     al,0x51
  4084cd:	mov    edi,0x56f9e12c
  4084d2:	sub    ah,BYTE PTR [ebp+0x66eb86df]
  4084d8:	xchg   esp,eax
  4084d9:	cmp    BYTE PTR ds:0x4cdd2d69,al
  4084df:	dec    ebp
  4084e0:	ss xor eax,0xe556261
  4084e6:	stc    
  4084e7:	int3   
  4084e8:	jge    0x4084a4
  4084ea:	lahf   
  4084eb:	pop    edx
  4084ec:	add    ebx,DWORD PTR [esi+0xf]
  4084ef:	cld    
  4084f0:	mov    edi,0xcd06cbdb
  4084f5:	ror    DWORD PTR [eax],0x59
  4084f8:	scas   eax,DWORD PTR es:[edi]
  4084f9:	add    BYTE PTR [ebp+0x1a04887f],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a68b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a68f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a693
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a69b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a663
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   bh,dl
  4089f8:	or     eax,0x15c7258b
  4089fd:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffce
  408a04:	clc    
  408a05:	push   ebx
  408a06:	sub    al,0xcc
  408a08:	or     DWORD PTR [esi],edx
  408a0a:	das    
  408a0b:	cwde   
  408a0c:	xor    eax,0xb2d88bb1
  408a11:	xchg   esp,eax
  408a12:	test   BYTE PTR ds:0xbca4b0bb,dl
  408a18:	div    BYTE PTR [esp+edx*1]
  408a1b:	leave  
  408a1c:	cmp    eax,0x5a36c695
  408a21:	or     eax,0x41dbe26c
  408a26:	xor    ah,BYTE PTR [edi-0x721cadcd]
  408a2c:	xchg   DWORD PTR [edx+0x4787f937],edx
  408a32:	sbb    dl,BYTE PTR [esi]
  408a34:	xchg   ecx,eax
  408a35:	add    eax,0x6dd07888
  408a3a:	call   0x2cf3:0xafbc94fd
  408a41:	cmp    ebp,DWORD PTR [eax+0x58e1fe9]
  408a47:	jp     0x408ab3
  408a49:	adc    al,0xcb
  408a4b:	or     eax,0x67b5c9d1
  408a50:	rcr    edx,0xc8
  408a53:	xchg   ebp,eax
  408a54:	fistp  WORD PTR [esp+eax*8]
  408a57:	mov    WORD PTR [ebx+0x61],cs
  408a5a:	pushf  
  408a5b:	hlt    
  408a5c:	pop    ebp
  408a5d:	inc    eax
  408a5e:	fisttp DWORD PTR [eax]
  408a60:	adc    al,0x80
  408a62:	ss and al,0xc0
  408a65:	mov    bh,0x23
  408a67:	cld    
  408a68:	xchg   edi,eax
  408a69:	shl    DWORD PTR [ebp+0x77d317ab],1
  408a6f:	xchg   esi,eax
  408a70:	fisub  WORD PTR [eax-0x2c583482]
  408a76:	dec    esp
  408a77:	test   ah,dh
  408a79:	pop    ebx
  408a7a:	push   0xffffffa4
  408a7c:	pop    ecx
  408a7d:	in     eax,dx
  408a7e:	mov    edx,0x6a5154b3
  408a83:	push   ds
  408a84:	jnp    0x408ad6
  408a86:	lea    esi,[ecx+0x70d4578a]
  408a8c:	mov    esp,0x9e270540
  408a91:	pop    ss
  408a92:	xchg   ecx,eax
  408a93:	push   ebp
  408a94:	and    al,0xef
  408a96:	and    BYTE PTR [edx+0x62c115da],cl
  408a9c:	out    0x30,al
  408a9e:	out    dx,al
  408a9f:	mov    cl,0x30
  408aa1:	lods   al,BYTE PTR ds:[esi]
  408aa2:	sub    DWORD PTR [esi],0xa7549ab3
  408aa8:	cli    
  408aa9:	shl    BYTE PTR [edx+0x2b],1
  408aac:	repnz xchg esi,eax
  408aae:	jb     0x408ad7
  408ab0:	jns    0x408ac8
  408ab2:	sti    
  408ab3:	gs sbb al,0xc1
  408ab6:	outs   dx,BYTE PTR ds:[esi]
  408ab7:	add    ebp,DWORD PTR [edi]
  408ab9:	fmul   QWORD PTR [esp+ebp*1+0x3b]
  408abd:	cmp    edi,DWORD PTR [edi]
  408abf:	inc    esi
  408ac0:	mov    cl,0xe
  408ac2:	or     ebp,edx
  408ac4:	retf   
  408ac5:	(bad)  
  408ac6:	push   cs
  408ac7:	cli    
  408ac8:	fdiv   DWORD PTR [ebx+0x64]
  408acb:	je     0x408ac5
  408acd:	or     al,0x6e
  408acf:	ret    0xd17c
  408ad2:	test   DWORD PTR [edx],0xc0b11848
  408ad8:	pop    edi
  408ad9:	lock ret 0xd27b
  408add:	dec    DWORD PTR [ecx+0x6]
  408ae0:	dec    DWORD PTR [eax]
  408ae2:	mov    eax,ds:0x5f020b2b
  408ae7:	pop    es
  408ae8:	mov    ch,0x92
  408aea:	(bad)  
  408aec:	clc    
  408aed:	xor    bl,bl
  408aef:	js     0x408af6
  408af1:	rcl    DWORD PTR [ecx+0x369f5495],1
  408af7:	pop    esp
  408af8:	sub    DWORD PTR [edx],esi
  408afa:	daa    
  408afb:	das    
  408afc:	shl    ecx,1
  408afe:	xchg   ecx,eax
  408aff:	lds    esp,FWORD PTR [esi]
  408b01:	out    0xce,al
  408b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b04:	out    0x66,al
  408b06:	fcmove st,st(4)
  408b08:	sti    
  408b09:	jne    0x408aa0
  408b0b:	dec    ecx
  408b0c:	std    
  408b0d:	cmp    BYTE PTR [edi+eiz*1],cl
  408b10:	cwde   
  408b11:	arpl   cx,ax
  408b13:	xchg   edx,eax
  408b14:	nop
  408b15:	xchg   ebx,eax
  408b16:	(bad)  
  408b17:	in     eax,dx
  408b18:	cmp    eax,0xc6f079a8
  408b1d:	shl    eax,0x18
  408b20:	add    dl,0xc8
  408b23:	dec    cx
  408b25:	dec    edx
  408b26:	outs   dx,DWORD PTR ds:[esi]
  408b27:	adc    al,ah
  408b29:	sar    ch,1
  408b2b:	jbe    0x408afe
  408b2d:	or     eax,0x9a6040d
  408b32:	push   ebx
  408b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b34:	imul   ecx,esp,0xe54d74c1
  408b3a:	adc    bh,BYTE PTR [edi]
  408b3c:	sub    ebp,DWORD PTR [ecx]
  408b3e:	mov    ebx,0x4327fb07
  408b43:	nop    esi
  408b46:	arpl   WORD PTR [eax-0x4e],bp
  408b49:	jnp    0x408b35
  408b4b:	loop   0x408b82
  408b4d:	mov    esp,0x6b88f16d
  408b52:	or     ebx,DWORD PTR [esi+0x6adc65e7]
  408b58:	adc    al,0xdf
  408b5a:	(bad)  [edi+0x5d]
  408b5d:	fsub   st,st(2)
  408b5f:	arpl   WORD PTR [esi+0x7eb3a4fb],bp
  408b65:	das    
  408b66:	pop    esp
  408b67:	push   ebx
  408b68:	lahf   
  408b69:	sti    
  408b6a:	mov    ah,BYTE PTR [eax]
  408b6c:	mov    ch,BYTE PTR [edx-0x5be4bc44]
  408b72:	stc    
  408b73:	sub    bl,cl
  408b75:	push   esi
  408b76:	aam    0x18
  408b78:	cmp    ebp,esi
  408b7a:	mov    edi,ebx
  408b7c:	aam    0x4
  408b7e:	shl    BYTE PTR [esi-0x34],cl
  408b81:	and    BYTE PTR [ecx],dh
  408b83:	lods   eax,DWORD PTR ds:[esi]
  408b84:	test   eax,0x914f400
  408b89:	sub    eax,0xab46799
  408b8e:	push   ds
  408b8f:	inc    esi
  408b90:	dec    esp
  408b91:	push   esi
  408b92:	aas    
  408b93:	loopne 0x408be7
  408b95:	jl     0x408bbc
  408b97:	fwait
  408b98:	scas   al,BYTE PTR es:[edi]
  408b99:	mov    al,0xc8
  408b9b:	sub    al,BYTE PTR [ebp*8+0x61d99028]
  408ba2:	mov    dl,ch
  408ba4:	ror    ch,0xce
  408ba7:	mov    ebx,0xd6370ee4
  408bac:	jo     0x408bf2
  408bae:	adc    ch,BYTE PTR [eax]
  408bb0:	jl     0x408c0c
  408bb2:	xchg   ecx,eax
  408bb3:	lods   eax,DWORD PTR ds:[esi]
  408bb4:	cdq    
  408bb5:	cmp    al,0xc7
  408bb7:	aas    
  408bb8:	xchg   DWORD PTR [edx+0x72],esi
  408bbb:	rcl    BYTE PTR [ecx+0x43],0xe7
  408bbf:	add    al,0xf8
  408bc1:	les    ebp,FWORD PTR [esi-0x7]
  408bc4:	or     BYTE PTR [ecx-0x48],dh
  408bc7:	dec    ecx
  408bc8:	int    0x99
  408bca:	xor    DWORD PTR [eax-0x1a036f7c],0x3e1c6aa4
  408bd4:	jb     0x408b6a
  408bd6:	aam    0xa
  408bd8:	and    dh,BYTE PTR [eax]
  408bda:	and    al,0x99
  408bdc:	out    dx,al
  408bdd:	mov    ds:0xf721389a,eax
  408be2:	call   edi
  408be4:	push   ebx
  408be5:	pusha  
  408be6:	jg     0x408c18
  408be8:	lea    eax,[eax-0x499bd913]
  408bee:	in     al,0xfc
  408bf0:	dec    eax
  408bf1:	dec    eax
  408bf2:	dec    ebx
  408bf3:	mov    eax,0x2503f83a
  408bf8:	int3   
  408bf9:	aaa    
  408bfa:	loope  0x408c73
  408bfc:	xor    eax,DWORD PTR [ebx-0x79eb52dc]
  408c02:	div    ebp
  408c04:	mov    eax,ds:0xc461ca0a
  408c09:	(bad)
  408c0c:	cs stos DWORD PTR es:[edi],eax
  408c0e:	or     al,0xd6
  408c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c11:	sbb    esp,eax
  408c13:	stos   DWORD PTR es:[edi],eax
  408c14:	and    al,0xfe
  408c16:	(bad)  
  408c18:	sub    al,0xc7
  408c1a:	call   0xd1f6c11e
  408c1f:	dec    esi
  408c20:	mov    ebx,0xbdceaee0
  408c25:	pop    es
  408c26:	enter  0xd5c3,0x45
  408c2a:	sbb    ebp,DWORD PTR [ecx+0x57]
  408c2d:	sti    
  408c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2f:	pop    ebp
  408c30:	mov    ss,WORD PTR [ebx]
  408c32:	out    dx,eax
  408c33:	test   eax,0xc32b3671
  408c38:	dec    eax
  408c39:	sbb    DWORD PTR [esi],edx
  408c3b:	xor    al,0x41
  408c3d:	lods   al,BYTE PTR ds:[esi]
  408c3e:	xchg   ecx,eax
  408c3f:	shr    DWORD PTR [eax+ebx*1+0x60],0x2a
  408c44:	out    0xca,al
  408c46:	xchg   esp,eax
  408c47:	push   ebx
  408c48:	mov    WORD PTR [ebp+edi*1-0x35],gs
  408c4c:	jno    0x408c9c
  408c4e:	mov    BYTE PTR [ebx-0x9],dh
  408c51:	cld    
  408c52:	sar    DWORD PTR [edi+0x7f95050f],0x43
  408c59:	fcomp  st(5)
  408c5b:	mov    ch,cl
  408c5d:	dec    DWORD PTR [ebx+0x56]
  408c60:	mov    ebp,0x987100c5
  408c65:	ins    BYTE PTR es:[edi],dx
  408c66:	clc    
  408c67:	fdivr  DWORD PTR [ecx]
  408c69:	push   ebx
  408c6a:	or     eax,0x14ac7c99
  408c6f:	or     al,0x87
  408c71:	ins    BYTE PTR es:[edi],dx
  408c72:	xchg   ebp,eax
  408c73:	out    0x58,al
  408c75:	(bad)  
  408c76:	pushf  
  408c77:	cmp    cl,ah
  408c79:	outs   dx,BYTE PTR ds:[esi]
  408c7a:	repnz nop
  408c7c:	mov    es,WORD PTR [ebp-0x5d78d3f6]
  408c82:	cld    
  408c83:	sub    eax,0xd02b596b
  408c88:	stos   BYTE PTR es:[edi],al
  408c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c8a:	or     BYTE PTR [ecx-0x3c],ah
  408c8d:	in     al,0xcb
  408c8f:	sahf   
  408c90:	inc    esp
  408c91:	ret    0x1433
  408c94:	cmp    dl,BYTE PTR [ecx-0x16fd03a3]
  408c9a:	cmp    eax,0x162678e2
  408c9f:	push   es
  408ca0:	outs   dx,BYTE PTR ds:[esi]
  408ca1:	call   0xe3a60b71
  408ca6:	inc    ebx
  408ca7:	pop    esi
  408ca8:	add    eax,0x8a039dc5
  408cad:	add    esi,edi
  408caf:	inc    ebp
  408cb0:	js     0x408c39
  408cb2:	pop    edx
  408cb3:	lods   eax,DWORD PTR ds:[esi]
  408cb4:	loope  0x408ca3
  408cb6:	mov    ds:0xb52f6e3c,eax
  408cbb:	test   eax,0xcc5813a9
  408cc0:	and    BYTE PTR [ecx+0x54],dh
  408cc3:	out    dx,al
  408cc4:	mov    ds:0x8640bd13,al
  408cc9:	mov    ebp,0xb7141f63
  408cce:	sbb    BYTE PTR [eax+eax*2+0x6d],ch
  408cd2:	(bad)  
  408cd3:	leave  
  408cd4:	cld    
  408cd5:	xchg   edi,eax
  408cd6:	imul   cl
  408cd8:	push   ebp
  408cd9:	push   esi
  408cda:	push   edi
  408cdb:	cmp    al,0x26
  408cdd:	in     eax,dx
  408cde:	cdq    
  408cdf:	and    edx,DWORD PTR [ebx-0x7d]
  408ce2:	add    ah,BYTE PTR [ecx-0x7c]
  408ce5:	jmp    0x9777b9d0
  408cea:	xchg   ecx,eax
  408ceb:	jno    0x408d1b
  408ced:	fwait
  408cee:	push   0x7c
  408cf0:	sub    BYTE PTR [edi],bh
  408cf2:	cmp    al,0x3c
  408cf4:	mov    ds:0x7e5a8577,eax
  408cf9:	popf   
  408cfa:	stos   BYTE PTR es:[edi],al
  408cfb:	rcl    BYTE PTR [ebx+0x647e8539],1
  408d01:	pop    esp
  408d02:	pop    ds
  408d03:	in     eax,0x89
  408d05:	cmp    esi,esp
  408d07:	inc    ebp
  408d08:	mov    cl,0x8b
  408d0a:	int3   
  408d0b:	(bad)  
  408d0c:	sti    
  408d0d:	sub    al,0xd4
  408d0f:	ror    BYTE PTR [esi-0x48],cl
  408d12:	lods   al,BYTE PTR ds:[esi]
  408d13:	jo     0x408cf5
  408d15:	outs   dx,DWORD PTR ds:[esi]
  408d16:	inc    eax
  408d17:	mov    eax,ds:0x17e97dea
  408d1c:	dec    ebx
  408d1d:	rol    BYTE PTR [edx*8+0x7dad0332],cl
  408d24:	stc    
  408d25:	adc    esp,DWORD PTR [edx]
  408d27:	(bad)  
  408d28:	xor    eax,0x113e4660
  408d2d:	adc    ch,BYTE PTR [eax+0x6e2dcf91]
  408d33:	adc    al,0x8e
  408d35:	inc    ebp
  408d36:	mov    esi,0xaf710b67
  408d3b:	sbb    bl,BYTE PTR [edx]
  408d3d:	call   0xa6a0:0x16b8f224
  408d44:	add    DWORD PTR ds:0x1597985,0x1cdfb432
  408d4e:	dec    ebx
  408d4f:	inc    edi
  408d50:	rol    al,0xc
  408d53:	mov    ch,0x87
  408d55:	mov    ch,0x47
  408d57:	pop    es
  408d58:	mov    edi,DWORD PTR [esi]
  408d5a:	not    ch
  408d5c:	cmp    BYTE PTR [ebx],0xaa
  408d5f:	rcl    BYTE PTR [ebx+0x37097e6e],cl
  408d65:	into   
  408d66:	xchg   ebx,eax
  408d67:	popf   
  408d68:	(bad)  [esi]
  408d6a:	ins    BYTE PTR es:[edi],dx
  408d6b:	and    BYTE PTR [edx],dh
  408d6d:	nop
  408d6e:	mov    BYTE PTR [ebx],0xe9
  408d71:	sar    edx,cl
  408d73:	retf   0x5ed3
  408d76:	or     esp,DWORD PTR [ebp+0x38]
  408d79:	xchg   edi,eax
  408d7a:	sub    BYTE PTR [ecx],0x8b
  408d7d:	inc    esp
  408d7e:	cmp    BYTE PTR [ecx+0x68],dh
  408d81:	pop    ecx
  408d82:	rol    DWORD PTR [edx-0x1],0xb6
  408d86:	jo     0x408d4a
  408d88:	push   ss
  408d89:	test   BYTE PTR [ebp-0x2b],cl
  408d8c:	sbb    BYTE PTR [edx],bl
  408d8e:	repnz mov esi,0x2974a377
  408d94:	inc    ebx
  408d95:	daa    
  408d96:	push   esp
  408d97:	shl    DWORD PTR [ebp-0x34b8a186],1
  408d9d:	mov    esi,edx
  408d9f:	mov    al,0xec
  408da1:	add    BYTE PTR [esi-0x67],al
  408da4:	push   es
  408da5:	mov    al,ds:0x2e1afb39
  408daa:	jg     0x408dc6
  408dac:	adc    edx,DWORD PTR ds:0xe5044f9b
  408db2:	loope  0x408d43
  408db4:	jg     0x408e2f
  408db6:	lods   al,BYTE PTR ds:[esi]
  408db7:	sti    
  408db8:	add    DWORD PTR [ebp-0x14555bc],esi
  408dbe:	xchg   edx,eax
  408dbf:	inc    eax
  408dc0:	jbe    0x408d4b
  408dc2:	out    dx,al
  408dc3:	jnp    0x408d7f
  408dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc6:	xlat   BYTE PTR ds:[ebx]
  408dc7:	adc    BYTE PTR [eax+0x6e3082c2],dh
  408dcd:	mov    dl,0x62
  408dcf:	add    bl,dh
  408dd1:	sbb    al,0xf4
  408dd3:	frstor [ecx-0x5]
  408dd6:	and    eax,0xd1c8b2f3
  408ddb:	cmp    eax,0x4867723e
  408de0:	scas   eax,DWORD PTR es:[edi]
  408de1:	cmp    al,0x3b
  408de3:	pop    ds
  408de4:	stos   BYTE PTR es:[edi],al
  408de5:	jle    0x408dc8
  408de7:	cwde   
  408de8:	ja     0x408e05
  408dea:	cmp    BYTE PTR [ebp-0x3a],dh
  408ded:	xor    cl,cl
  408def:	sub    DWORD PTR [esi-0x1b],0xb8382228
  408df6:	sbb    al,0xcf
  408df8:	fidiv  DWORD PTR [edi]
  408dfa:	scas   eax,DWORD PTR es:[edi]
  408dfb:	cs jge 0x408e3b
  408dfe:	xchg   esp,eax
  408dff:	cmp    BYTE PTR [ecx+0x5c044e93],0x49
  408e06:	adc    eax,0x8e829f13
  408e0b:	mov    edi,0xb5d66bb2
  408e10:	retf   0xabed
  408e13:	(bad)  
  408e14:	dec    esi
  408e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e16:	retf   
  408e17:	outs   dx,DWORD PTR ds:[esi]
  408e18:	sub    ax,0x24cb
  408e1c:	test   DWORD PTR [esi+0x4162d535],edx
  408e22:	push   es
  408e23:	jg     0x408e5c
  408e25:	xor    dl,BYTE PTR [esi-0x16]
  408e28:	or     edx,edx
  408e2a:	mov    edi,0x279085e0
  408e2f:	ror    esi,0x9f
  408e32:	rol    BYTE PTR [edx],cl
  408e34:	std    
  408e35:	sbb    dl,dh
  408e37:	sbb    al,0xd2
  408e39:	jmp    0x4a12:0xdcc6cd4c
  408e40:	dec    ebx
  408e41:	outs   dx,BYTE PTR ds:[esi]
  408e42:	mov    bh,0xa6
  408e44:	mov    eax,0x68b8185b
  408e49:	sahf   
  408e4a:	sbb    BYTE PTR [esi+0x3a],0xac
  408e4e:	es stc 
  408e50:	mov    ah,0xb9
  408e52:	jae    0x408e9f
  408e54:	ja     0x408e1e
  408e56:	sahf   
  408e57:	ins    DWORD PTR es:[edi],dx
  408e58:	mov    ch,0xbe
  408e5a:	loop   0x408e32
  408e5c:	inc    ebx
  408e5d:	pop    ss
  408e5e:	mov    ?,WORD PTR [esi]
  408e60:	pop    ecx
  408e61:	dec    DWORD PTR [edi+0x1d]
  408e64:	or     al,0x2d
  408e66:	push   eax
  408e67:	and    DWORD PTR [esi*8-0x52543d6e],edx
  408e6e:	std    
  408e6f:	pusha  
  408e70:	push   ebp
  408e71:	sbb    al,0x33
  408e73:	inc    ecx
  408e74:	ds push eax
  408e76:	xchg   edx,eax
  408e77:	call   0x2123:0xf74a28c2
  408e7e:	jp     0x408ed5
  408e80:	or     BYTE PTR [ebx+0x4],dl
  408e83:	sbb    BYTE PTR [ecx],0x48
  408e86:	pusha  
  408e87:	repz pop ss
  408e89:	mov    bl,0x72
  408e8b:	aam    0xfd
  408e8d:	mov    ebp,0xe119d4c3
  408e92:	mov    dl,0x76
  408e94:	sahf   
  408e95:	mov    DWORD PTR [eax],esp
  408e97:	pop    edx
  408e98:	sub    BYTE PTR [ecx-0x40],0x7f
  408e9c:	mov    al,ds:0xefd2bd97
  408ea1:	pop    ss
  408ea2:	(bad)
  408ea5:	(bad)  [eax-0x275f58d7]
  408eab:	jg     0x408e7a
  408ead:	call   0x3d14746c
  408eb2:	imul   esp,DWORD PTR [ebp-0x1985214d],0x1b729899
  408ebc:	add    ebx,eax
  408ebe:	dec    eax
  408ebf:	xor    al,0xb7
  408ec1:	xor    edi,ebx
  408ec3:	and    BYTE PTR [ecx-0x617e0578],dl
  408ec9:	xor    eax,0x3e48ec39
  408ece:	hlt    
  408ecf:	leave  
  408ed0:	daa    
  408ed1:	mov    al,0x79
  408ed3:	out    dx,eax
  408ed4:	xor    eax,0x7b034e5c
  408ed9:	int3   
  408eda:	mov    edi,0x7fa31ddd
  408edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee0:	(bad)  
  408ee1:	cdq    
  408ee2:	mov    ebx,0xec514c3f
  408ee7:	sbb    dl,BYTE PTR [eax+0x6b99cb2]
  408eed:	ins    BYTE PTR es:[edi],dx
  408eee:	jae    0x408e8d
  408ef0:	inc    edx
  408ef1:	jbe    0x408e9e
  408ef3:	xor    ecx,ebx
  408ef5:	test   BYTE PTR [edx],0xd4
  408ef8:	jo     0x408eb4
  408efa:	mov    eax,ds:0xcff9d88e
  408eff:	mov    ?,WORD PTR [esi-0x61f951e5]
  408f05:	inc    ecx
  408f06:	mov    bh,0x47
  408f08:	jmp    0x408f1b
  408f0a:	aad    0x30
  408f0c:	arpl   WORD PTR [edx-0x159fa434],sp
  408f12:	mov    fs,WORD PTR [ebp-0x8aeda9]
  408f18:	xchg   esp,ecx
  408f1a:	aaa    
  408f1b:	pop    esi
  408f1c:	popa   
  408f1d:	xchg   edi,eax
  408f1e:	jbe    0x408f05
  408f20:	push   ecx
  408f21:	push   0xffffffee
  408f23:	xor    al,0x86
  408f25:	dec    ebp
  408f27:	mov    eax,ds:0x1e494569
  408f2c:	add    DWORD PTR [eax-0x257a0c60],eax
  408f32:	imul   esi,ebp,0x76
  408f35:	test   DWORD PTR [eax],edx
  408f37:	xor    eax,0x6297d5f7
  408f3c:	sti    
  408f3d:	and    al,0x40
  408f3f:	add    bh,BYTE PTR [esi]
  408f41:	fs jge 0x408f9b
  408f44:	push   ebp
  408f45:	add    edi,DWORD PTR [esi+0x20bfb72a]
  408f4b:	not    BYTE PTR [ebp-0x13]
  408f4e:	das    
  408f4f:	mov    eax,ds:0xb451d676
  408f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f55:	mov    dh,0xff
  408f57:	inc    esp
  408f58:	xchg   esp,eax
  408f59:	push   ebp
  408f5a:	and    edi,DWORD PTR [eax]
  408f5c:	inc    ecx
  408f5d:	cmp    dl,dl
  408f5f:	xor    esp,DWORD PTR [ebx]
  408f61:	sub    DWORD PTR [ecx+eiz*8-0x1c],esi
  408f65:	sar    BYTE PTR [esi-0x3d2efef2],1
  408f6b:	pop    esi
  408f6c:	hlt    
  408f6d:	lods   eax,DWORD PTR ds:[esi]
  408f6e:	test   dh,al
  408f70:	push   es
  408f71:	(bad)  
  408f72:	in     eax,dx
  408f73:	bt     ecx,esp
  408f76:	(bad)  
  408f77:	pop    ebx
  408f78:	sbb    BYTE PTR [eax-0x43745103],bh
  408f7e:	ja     0x408f85
  408f80:	push   eax
  408f81:	cs gs pop eax
  408f84:	stos   DWORD PTR es:[edi],eax
  408f85:	sar    ah,cl
  408f87:	cmp    ebx,DWORD PTR [edi+eiz*1+0x1f]
  408f8b:	xchg   DWORD PTR [edx+0x59],edx
  408f8e:	loope  0x408f98
  408f90:	add    esi,DWORD PTR [ebx+0x21fa7cd4]
  408f96:	mov    dh,0x1f
  408f98:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f9a:	push   es
  408f9b:	call   0xb81dadf9
  408fa0:	sub    BYTE PTR [di],bh
  408fa3:	fisub  DWORD PTR [ebp-0x39148073]
  408fa9:	sahf   
  408faa:	pop    es
  408fab:	or     ah,dl
  408fad:	jb     0x40902b
  408faf:	(bad)  
  408fb0:	sbb    esp,eax
  408fb2:	xchg   esp,eax
  408fb3:	das    
  408fb4:	scas   eax,DWORD PTR es:[edi]
  408fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb6:	mov    al,0x71
  408fb8:	test   eax,0x55f97ab1
  408fbd:	or     bh,BYTE PTR [eax-0x6517f9fe]
  408fc3:	icebp  
  408fc4:	dec    edi
  408fc5:	(bad)
  408fc8:	sub    al,0xe9
  408fca:	jmp    0x7c0cdd81
  408fcf:	mov    ecx,DWORD PTR [esi-0x315aa3be]
  408fd5:	adc    edx,edi
  408fd7:	outs   dx,BYTE PTR ds:[esi]
  408fd8:	dec    ebx
  408fd9:	out    dx,al
  408fda:	mov    ebp,0x36fb3da2
  408fdf:	cmp    eax,0x88a4a1e3
  408fe4:	and    dh,BYTE PTR [ebp+0x36]
  408fe7:	icebp  
  408fe8:	cmp    DWORD PTR [ebx+0x24],ebp
  408feb:	xlat   BYTE PTR ds:[ebx]
  408fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fed:	fwait
  408fee:	sbb    esp,DWORD PTR [ebx-0x36449114]
  408ff4:	cmp    BYTE PTR [ebx-0x7c],0xa3
  408ff8:	push   0x881f2f8c
  408ffd:	retf   0xf59e
  409000:	pop    eax
  409001:	mov    edx,0x9b5d6f70
  409006:	push   ebx
  409007:	call   0x937:0xc5c2129a
  40900e:	cmp    BYTE PTR [ebp+0x7b5cfc31],0xa9
  409015:	pop    ebx
  409016:	pushf  
  409017:	xchg   edx,eax
  409018:	into   
  409019:	jecxz  0x409028
  40901b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40901d:	ja     0x408fd7
  40901f:	stos   BYTE PTR es:[edi],al
  409020:	(bad)  
  409021:	pop    ebp
  409022:	daa    
  409023:	clc    
  409024:	dec    eax
  409025:	xchg   ebp,eax
  409026:	xchg   edi,eax
  409027:	pop    eax
  409028:	loopne 0x408fc1
  40902a:	shl    edi,0xdd
  40902d:	fldenv [edx-0x5409644d]
  409033:	loope  0x408fc7
  409035:	mov    edx,0x2339c722
  40903a:	addr16 push ebp
  40903c:	repz inc esi
  40903e:	mov    esi,0x5cc2ad
  409043:	test   DWORD PTR [ebx+0x77863634],ecx
  409049:	pushf  
  40904a:	loopne 0x409055
  40904c:	popa   
  40904d:	xchg   ecx,eax
  40904e:	sub    al,0x40
  409050:	inc    esp
  409051:	jnp    0x408ffc
  409053:	jb     0x4090a6
  409055:	add    cl,bl
  409057:	cmp    ah,ch
  409059:	shr    ecx,0x34
  40905c:	jmp    0x40904d
  40905e:	mov    ebx,esi
  409060:	mov    ch,BYTE PTR [edx]
  409062:	into   
  409063:	inc    edx
  409064:	pop    es
  409065:	mov    cl,0xff
  409067:	dec    eax
  409068:	icebp  
  409069:	jle    0x40908b
  40906b:	icebp  
  40906c:	hlt    
  40906d:	mov    al,0xca
  40906f:	neg    esp
  409071:	repnz push es
  409073:	shl    BYTE PTR [ecx-0x79],1
  409076:	dec    edi
  409077:	jbe    0x4090ed
  409079:	jb     0x409081
  40907b:	sti    
  40907c:	mov    ecx,0x7d9bf6cd
  409081:	cmp    esi,DWORD PTR [esi+eax*8+0x76]
  409085:	xlat   BYTE PTR ds:[ebx]
  409086:	daa    
  409087:	xor    esi,DWORD PTR [ebp-0x2d]
  40908a:	push   edx
  40908b:	dec    edx
  40908c:	mov    bh,0x65
  40908e:	add    DWORD PTR [ebx-0x6a],ebx
  409091:	push   cs
  409092:	mov    ebp,0xcf1c7a85
  409097:	vunpckhps ymm2,ymm6,YMMWORD PTR ds:0x835a8dfc
  40909f:	sbb    al,0x2d
  4090a1:	mov    ch,0x20
  4090a3:	ds inc eax
  4090a5:	mov    al,0xf4
  4090a7:	arpl   WORD PTR [edi+0x7070d1dc],dx
  4090ad:	push   es
  4090ae:	pusha  
  4090af:	push   cs
  4090b0:	outs   dx,BYTE PTR ds:[esi]
  4090b1:	inc    ebp
  4090b2:	pop    ds
  4090b3:	popf   
  4090b4:	cld    
  4090b5:	fidivr DWORD PTR [eax]
  4090b7:	call   0xdab0:0xe8a16a71
  4090be:	xor    dl,ah
  4090c0:	dec    eax
  4090c1:	out    dx,eax
  4090c2:	je     0x4090c1
  4090c4:	and    edx,ebx
  4090c6:	xor    DWORD PTR [edx+0x27],edx
  4090c9:	test   BYTE PTR [edi],ch
  4090cb:	call   0x55880191
  4090d0:	cs jg  0x409075
  4090d3:	or     bh,dh
  4090d5:	xor    bh,BYTE PTR [ecx]
  4090d7:	loope  0x40908e
  4090d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090da:	xchg   ebp,eax
  4090db:	sbb    cl,BYTE PTR [edi]
  4090dd:	cmp    bh,BYTE PTR [ebx+0x4cb668aa]
  4090e3:	scas   eax,DWORD PTR es:[edi]
  4090e4:	jmp    0x499e:0xe0d73f06
  4090eb:	pop    ss
  4090ec:	jbe    0x409076
  4090ee:	jmp    0x409114
  4090f0:	pop    esp
  4090f1:	loop   0x4090fd
  4090f3:	test   BYTE PTR [ebx],dh
  4090f5:	adc    bl,0x2e
  4090f8:	fiadd  WORD PTR [edx+ecx*2]
  4090fb:	jl     0x4090ea
  4090fd:	push   cs
  4090fe:	mov    edi,0x59812c2
  409103:	and    DWORD PTR [edx-0x587affdb],ecx
  409109:	push   eax
  40910a:	sbb    BYTE PTR [eax-0xf],ch
  40910d:	add    al,0xd7
  40910f:	fldcw  WORD PTR [edx+0x58]
  409112:	jg     0x4090fb
  409114:	mov    bh,ah
  409116:	cmp    eax,0xf07da6f0
  40911b:	jmp    DWORD PTR [esi-0x21b8816f]
  409121:	call   0xcd81:0x78d0f229
  409128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409129:	out    0xfa,al
  40912b:	lds    ecx,FWORD PTR [ecx+0x5a]
  40912e:	in     eax,0xc3
  409130:	shr    DWORD PTR [edi+0x708b66f5],1
  409136:	dec    DWORD PTR [eax]
  409138:	cdq    
  409139:	jp     0x409166
  40913b:	jmp    0x6fcb:0x9ca1a780
  409142:	and    BYTE PTR [ebp+0x686d72d0],dh
  409148:	bound  esi,QWORD PTR [ecx-0x72cb9074]
  40914e:	cmp    ah,BYTE PTR [ebx-0x4cd4099a]
  409154:	clc    
  409155:	mov    ebp,0x7b963a36
  40915a:	inc    edi
  40915b:	xchg   ecx,eax
  40915c:	push   edx
  40915d:	xchg   edi,eax
  40915e:	and    eax,0xe7753814
  409163:	mov    edx,0x851783e8
  409168:	push   ds
  409169:	jl     0x4091a5
  40916b:	push   ebx
  40916c:	lods   al,BYTE PTR ds:[esi]
  40916d:	pop    ebp
  40916e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40916f:	lahf   
  409170:	pop    ecx
  409171:	mov    ds:0xa3a99c63,al
  409176:	dec    esp
  409177:	sub    DWORD PTR [ebp+0x5e],0xffffffbb
  40917b:	ins    BYTE PTR es:[edi],dx
  40917c:	mov    esi,0xbe4ba4d
  409181:	in     eax,dx
  409182:	add    al,0xd4
  409184:	xlat   BYTE PTR ds:[ebx]
  409185:	arpl   WORD PTR [ebx],di
  409187:	daa    
  409188:	in     eax,dx
  409189:	jle    0x4091e6
  40918b:	fild   WORD PTR [edi+edi*8-0x8]
  40918f:	pop    edi
  409190:	adc    esp,DWORD PTR [ecx+0x1a]
  409193:	sar    dh,0x71
  409196:	mov    BYTE PTR [ebp+0x37],cl
  409199:	arpl   cx,sp
  40919b:	add    DWORD PTR ds:[eax-0x4320014],0x4e
  4091a3:	(bad)  
  4091a5:	dec    edx
  4091a6:	call   0xf9b9:0x994be912
  4091ad:	push   eax
  4091ae:	out    0xdd,al
  4091b0:	test   edx,edi
  4091b2:	fstp   TBYTE PTR [ebx-0x2c]
  4091b5:	retf   
  4091b6:	sbb    eax,0xa14a7bfe
  4091bb:	xchg   DWORD PTR [edx+0x624eb494],eax
  4091c1:	xchg   ebx,eax
  4091c2:	mov    DWORD PTR [edx+0x5a627cd3],0xa7e42e81
  4091cc:	mov    ds:0x85ef4121,eax
  4091d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d2:	pop    ss
  4091d3:	ja     0x409245
  4091d5:	ss push ebx
  4091d7:	dec    edi
  4091d8:	cmp    eax,0x1aac75d7
  4091dd:	fstp   TBYTE PTR [esi-0x1cfc2e09]
  4091e3:	pop    ecx
  4091e4:	scas   eax,DWORD PTR es:[edi]
  4091e5:	aad    0xe8
  4091e7:	mov    bl,0xd9
  4091e9:	push   esi
  4091ea:	mov    ds:0x3d14c4e8,eax
  4091ef:	pop    ds
  4091f0:	pop    es
  4091f1:	stos   DWORD PTR es:[edi],eax
  4091f2:	add    eax,0x876248ef
  4091f7:	pop    edx
  4091f8:	xchg   ebp,eax
  4091f9:	clc    
  4091fa:	js     0x4091da
  4091fc:	les    eax,FWORD PTR [eax-0x48]
  4091ff:	mov    ah,0x2d
  409201:	lahf   
  409202:	nop
  409203:	fsubr  QWORD PTR [edx+0x11a69c9a]
  409209:	pop    eax
  40920a:	mov    edx,0xea16896f
  40920f:	dec    ebx
  409210:	xor    eax,0xce89644e
  409215:	adc    ecx,DWORD PTR [ebp+0x12c4cf3c]
  40921b:	repnz xchg ecx,eax
  40921d:	jl     0x409296
  40921f:	(bad)  
  409220:	sti    
  409221:	push   ss
  409222:	mov    edi,0x3d6a30ec
  409227:	push   ds
  409228:	in     al,dx
  409229:	push   0x5d8946af
  40922e:	pop    esp
  40922f:	popf   
  409230:	sub    ecx,DWORD PTR ds:0xc9a62124
  409236:	sub    dl,BYTE PTR [esi+eax*1+0x29]
  40923a:	mov    ch,0x79
  40923c:	inc    edi
  40923d:	std    
  40923e:	shl    BYTE PTR [ebx],1
  409240:	xor    ah,dh
  409242:	stos   BYTE PTR es:[edi],al
  409243:	sub    eax,0x65d8e34a
  409248:	ror    BYTE PTR [eax],1
  40924a:	xor    DWORD PTR [ebx-0x38fe649d],esi
  409250:	nop
  409251:	sti    
  409252:	or     eax,0x5ed43b0f
  409257:	jne    0x40921d
  409259:	test   al,0xc3
  40925b:	dec    edi
  40925c:	ja     0x409295
  40925e:	jg     0x4092c8
  409260:	sub    al,0x69
  409262:	jle    0x409272
  409264:	jge    0x409232
  409266:	into   
  409267:	jle    0x4092b0
  409269:	loop   0x4091f0
  40926b:	mov    ah,0xe1
  40926d:	xor    eax,0xf505571d
  409272:	jno    0x40924c
  409274:	lahf   
  409275:	in     al,dx
  409276:	(bad)  
  409278:	inc    ebx
  409279:	push   ebp
  40927a:	mov    eax,ds:0x92d995cf
  40927f:	dec    ecx
  409280:	mov    esi,0xc8ed5100
  409285:	sub    al,0xef
  409287:	out    0x83,eax
  409289:	xor    DWORD PTR ds:0x978877ab,esp
  40928f:	mov    gs,WORD PTR [ecx-0x4f]
  409292:	pop    eax
  409293:	outs   dx,BYTE PTR ds:[esi]
  409294:	or     eax,DWORD PTR [ecx-0x5db65df9]
  40929a:	mov    BYTE PTR [ecx+0x2e49ea41],0x6b
  4092a1:	xchg   ebx,eax
  4092a2:	out    0x89,eax
  4092a4:	std    
  4092a5:	jl     0x409291
  4092a7:	push   edx
  4092a8:	jb     0x4092e0
  4092aa:	imul   esi,esi,0xc01997cd
  4092b0:	xchg   esp,eax
  4092b1:	mov    dl,0x99
  4092b3:	push   edx
  4092b4:	out    dx,eax
  4092b5:	xchg   DWORD PTR [edx],ebp
  4092b7:	test   al,0x2e
  4092b9:	mov    ebp,0x283dab0e
  4092be:	and    edi,DWORD PTR [esi+0x19ea25fe]
  4092c4:	repnz retf 0x7b0
  4092c8:	inc    esi
  4092c9:	lahf   
  4092ca:	xchg   BYTE PTR [esi-0x48],cl
  4092cd:	push   ss
  4092ce:	popf   
  4092cf:	hlt    
  4092d0:	in     al,0xef
  4092d2:	dec    ebx
  4092d3:	jle    0x409302
  4092d5:	adc    bh,al
  4092d7:	lss    ecx,FWORD PTR [eax+0xdd5b337]
  4092de:	loop   0x40931f
  4092e0:	sub    BYTE PTR [ebx+0x71],bl
  4092e3:	mov    ah,0xbe
  4092e5:	repnz inc ecx
  4092e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e8:	dec    edi
  4092e9:	cmp    DWORD PTR [ebx],edi
  4092eb:	or     BYTE PTR [esi],0xac
  4092ee:	xchg   esp,eax
  4092ef:	iret   
  4092f0:	cmp    esp,esi
  4092f2:	mov    bl,0xf0
  4092f4:	sbb    eax,0xf8cf7ab3
  4092f9:	lods   eax,DWORD PTR ds:[esi]
  4092fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fb:	mov    bh,BYTE PTR [eax-0x44b8678f]
  409301:	and    BYTE PTR [edi+0x33],dh
  409304:	sub    dl,BYTE PTR [edx]
  409306:	idiv   BYTE PTR [edi-0x4a8bf4fd]
  40930c:	int    0xd6
  40930e:	inc    ebx
  40930f:	or     al,0x7a
  409311:	nop
  409312:	stos   DWORD PTR es:[edi],eax
  409313:	cld    
  409314:	mov    ah,0x5e
  409316:	call   0x4ed1:0xdac95a65
  40931d:	cwde   
  40931e:	sbb    dl,BYTE PTR [esi]
  409320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409321:	xor    eax,0xb10a9ccb
  409326:	pop    ecx
  409327:	(bad)  
  409328:	mov    ebx,0xfd77ad18
  40932d:	or     al,0xd8
  40932f:	out    dx,eax
  409330:	cmovp  ecx,eax
  409333:	and    bl,al
  409335:	and    edi,esi
  409337:	out    dx,al
  409338:	sub    edx,eax
  40933a:	dec    edi
  40933b:	inc    edi
  40933c:	jno    0x40933b
  40933e:	clc    
  40933f:	push   esp
  409340:	(bad)  [esi+0x43]
  409343:	add    BYTE PTR [eax],dl
  409345:	cli    
  409346:	call   0xa586:0xee02806c
  40934d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934e:	dec    ecx
  40934f:	mov    eax,ds:0xa10d08c2
  409354:	div    ecx
  409356:	jb     0x40934b
  409358:	std    
  409359:	cmp    esp,ecx
  40935b:	add    al,0x38
  40935d:	push   ebp
  40935e:	adc    al,0x8a
  409360:	cmc    
  409361:	fist   DWORD PTR [ecx]
  409363:	repnz pop es
  409365:	xchg   edx,eax
  409366:	xor    DWORD PTR [esi+edi*1+0x61],0xffffffb6
  40936b:	jbe    0x4092fe
  40936d:	adc    DWORD PTR [ebp+0xa],ecx
  409370:	dec    esp
  409371:	jo     0x40938c
  409373:	mov    ecx,0x6b7955d6
  409378:	jmp    0x40935c
  40937a:	xchg   ebx,eax
  40937b:	shr    DWORD PTR [ebp+0x4011bec9],cl
  409381:	lods   eax,DWORD PTR ds:[esi]
  409382:	xchg   ebp,eax
  409383:	pop    esp
  409384:	mov    ah,0x7c
  409386:	js     0x40931c
  409388:	test   ecx,edx
  40938a:	mov    edi,0x4a8519ca
  40938f:	loop   0x409398
  409391:	adc    bh,dl
  409393:	adc    dh,BYTE PTR [ebx]
  409395:	test   eax,0x8bdf582c
  40939a:	cmc    
  40939b:	mov    al,0x8e
  40939d:	mov    ch,0xf7
  40939f:	dec    ebx
  4093a0:	icebp  
  4093a1:	jecxz  0x409337
  4093a3:	aaa    
  4093a4:	scas   eax,DWORD PTR es:[edi]
  4093a5:	frstor [eax+0x59bb447d]
  4093ab:	jecxz  0x409406
  4093ad:	cmp    eax,0xa9aedaea
  4093b2:	enter  0x325c,0x54
  4093b6:	push   esi
  4093b7:	out    dx,al
  4093b8:	xchg   BYTE PTR [edx+0x798bc7f6],ch
  4093be:	jo     0x4093af
  4093c0:	fadd   DWORD PTR [edx]
  4093c2:	rcl    ebp,1
  4093c4:	sbb    eax,0x5c38c5b1
  4093c9:	jo     0x4093d9
  4093cb:	mov    al,0xc0
  4093cd:	sbb    DWORD PTR [ebx],ebp
  4093cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d0:	imul   eax,DWORD PTR [ebp+0x7a6046c1],0x62
  4093d7:	sbb    al,0xdb
  4093d9:	mov    bh,0x96
  4093db:	lods   al,BYTE PTR ds:[esi]
  4093dc:	cld    
  4093dd:	aad    0xfa
  4093df:	scas   eax,DWORD PTR es:[edi]
  4093e0:	(bad)  
  4093e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e2:	retf   0xd5c3
  4093e5:	loope  0x4093f4
  4093e7:	fisub  WORD PTR [edi]
  4093e9:	mov    dh,0xf5
  4093eb:	pusha  
  4093ec:	(bad)  
  4093ee:	call   0x724a:0x789459e5
  4093f5:	push   cs
  4093f6:	mov    al,ds:0x2a8c91a3
  4093fb:	fisttp QWORD PTR [ebx]
  4093fd:	xchg   ebp,eax
  4093fe:	mov    esi,0x64ed3250
  409403:	daa    
  409404:	sbb    edi,DWORD PTR [eax+0x430e7cfe]
  40940a:	adc    eax,DWORD PTR [edx+0x63]
  40940d:	fdiv   DWORD PTR [eax]
  40940f:	test   al,0x6c
  409411:	add    al,0xa5
  409413:	push   edi
  409414:	mov    BYTE PTR [ebx+eax*1-0x26959b4b],bh
  40941b:	push   cs
  40941c:	js     0x409486
  40941e:	jo     0x40942b
  409420:	shl    BYTE PTR [ebx+ecx*2],1
  409423:	out    0x6d,al
  409425:	dec    esp
  409426:	adc    BYTE PTR [ecx+0x38],cl
  409429:	mov    BYTE PTR [ebp+0x19bea5c9],0x3b
  409430:	rcl    BYTE PTR [ebx+ebp*4],cl
  409433:	jmp    0xe0fa0217
  409438:	sbb    BYTE PTR [edi+ebx*4],cl
  40943b:	jns    0x4093ef
  40943d:	lea    esp,[eax+0x7d068227]
  409443:	mov    ecx,0x7a67f3a3
  409448:	shl    BYTE PTR [ebp+0x35b9c57d],1
  40944e:	sar    dl,cl
  409450:	test   al,0xc7
  409452:	mov    ch,0x6d
  409454:	dec    eax
  409455:	scas   eax,DWORD PTR es:[edi]
  409456:	scas   al,BYTE PTR es:[edi]
  409457:	push   cs
  409458:	hlt    
  409459:	ins    DWORD PTR es:[edi],dx
  40945a:	rol    BYTE PTR [ecx-0x5128f62a],1
  409460:	and    bl,al
  409462:	push   edi
  409463:	int    0x27
  409465:	add    ah,bl
  409467:	add    eax,esi
  409469:	or     dl,bl
  40946b:	mov    eax,ds:0x3e64a466
  409470:	or     al,0x1b
  409472:	test   ah,ah
  409474:	lea    eax,[ecx]
  409476:	dec    ecx
  409477:	mov    BYTE PTR [bp-0x2430],bl
  40947c:	adc    eax,0x7144c924
  409481:	aam    0x5c
  409483:	push   eax
  409484:	loope  0x409469
  409486:	bound  ebp,QWORD PTR [ecx]
  409488:	lds    edx,FWORD PTR [eax]
  40948a:	xchg   edx,eax
  40948b:	clc    
  40948c:	std    
  40948d:	push   fs
  40948f:	pop    ecx
  409490:	adc    edx,DWORD PTR [esp+ebp*4-0x76]
  409494:	push   ecx
  409495:	out    0x6f,eax
  409497:	and    BYTE PTR [ebx],dl
  409499:	test   eax,0x812b9d8c
  40949e:	xchg   DWORD PTR cs:[ebx+0x16],edx
  4094a2:	xor    BYTE PTR [esi+edx*8+0x25bcb6bd],bh
  4094a9:	lea    esp,[eax+edi*2-0x5c99fa76]
  4094b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b1:	sbb    BYTE PTR [esi+0x6e],bh
  4094b4:	jb     0x4094f2
  4094b6:	adc    BYTE PTR [esi+0x32],al
  4094b9:	dec    ecx
  4094ba:	push   ebx
  4094bb:	pop    esp
  4094bc:	push   edx
  4094bd:	pop    esp
  4094be:	dec    edx
  4094bf:	iret   
  4094c0:	mov    ds,ecx
  4094c2:	push   ebx
  4094c3:	xchg   edx,eax
  4094c4:	xchg   ebp,eax
  4094c5:	xchg   BYTE PTR ds:0x886e2415,dh
  4094cb:	sahf   
  4094cc:	retf   
  4094cd:	mov    esi,0x12089b13
  4094d2:	rcl    BYTE PTR [ecx],0xe5
  4094d5:	inc    ebx
  4094d6:	xchg   DWORD PTR [esi+eax*4],ecx
  4094d9:	loopne 0x409529
  4094db:	(bad)  
  4094dc:	iret   
  4094dd:	call   0xc4e51b81
  4094e2:	call   0x2c7b:0x589c068c
  4094e9:	(bad)  
  4094ea:	(bad)  
  4094eb:	daa    
  4094ec:	stos   BYTE PTR es:[edi],al
  4094ed:	test   al,0x45
  4094ef:	mov    eax,0x3c9c6bbe
  4094f4:	(bad)  
  4094f5:	(bad)  
  4094f6:	jns    0x409568
  4094f8:	jle    0x4094f2
  4094fa:	cmp    al,0xbc
  4094fc:	test   BYTE PTR [edi],dh
  4094fe:	dec    edi
  4094ff:	data16 xor BYTE PTR [edx-0x3ada9520],bh
  409506:	mov    eax,cs
  409508:	nop
  409509:	repnz sbb al,0x86
  40950c:	push   edi
  40950d:	ret    0x2ff2
  409510:	das    
  409511:	pop    esi
  409512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409513:	test   DWORD PTR [ebx],edx
  409515:	and    ch,al
  409517:	and    DWORD PTR [esi],edx
  409519:	cmp    ebx,DWORD PTR [esi+0x2aa87d0b]
  40951f:	add    ebp,DWORD PTR ds:[ecx+0x17835711]
  409526:	dec    ebp
  409527:	inc    ebp
  409528:	adc    esp,DWORD PTR [ebx+0x7b26f789]
  40952e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952f:	aaa    
  409530:	xchg   ebx,eax
  409531:	clc    
  409532:	jl     0x40956a
  409534:	mov    cl,0xf7
  409536:	xchg   esi,eax
  409537:	sti    
  409538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40953a:	mov    ds:0x63101d79,al
  40953f:	loope  0x409508
  409541:	xor    BYTE PTR [edi-0x21297a08],cl
  409547:	mov    esp,0x258222cd
  40954c:	hlt    
  40954d:	xchg   edi,eax
  40954e:	into   
  40954f:	inc    edi
  409550:	add    bh,BYTE PTR [ebx]
  409552:	out    dx,eax
  409553:	rcl    DWORD PTR [ebx-0x75f4615],0xe9
  40955a:	scas   al,BYTE PTR es:[edi]
  40955b:	dec    eax
  40955c:	xor    eax,0xa788f49a
  409561:	push   edx
  409562:	lods   al,BYTE PTR ds:[esi]
  409563:	dec    esp
  409564:	stos   DWORD PTR es:[edi],eax
  409565:	in     al,0xad
  409567:	mov    ds:0x23ed09db,al
  40956c:	push   ebp
  40956d:	in     eax,0x89
  40956f:	adc    esp,DWORD PTR [ebp-0x5a]
  409572:	int3   
  409573:	pop    esi
  409574:	idiv   BYTE PTR [eax+ebx*4+0x1e]
  409578:	test   ebx,edx
  40957a:	imul   esi,DWORD PTR [edi+0x226068f8],0xfffffff7
  409581:	inc    edi
  409582:	jmp    eax
  409584:	mov    WORD PTR [edi+0x1a61c4f7],gs
  40958a:	sub    eax,0x63fd1114
  40958f:	xlat   BYTE PTR ds:[ebx]
  409590:	fidiv  DWORD PTR [edx]
  409592:	stos   BYTE PTR es:[edi],al
  409593:	jb     0x4095e8
  409595:	xchg   edi,eax
  409596:	(bad)  
  409598:	aam    0xad
  40959a:	sbb    DWORD PTR [edi-0x5a],edi
  40959d:	cmp    ebp,edi
  40959f:	and    ecx,esi
  4095a1:	(bad)  
  4095a2:	js     0x4095bc
  4095a4:	loop   0x409612
  4095a6:	or     al,0x48
  4095a8:	call   0x3563:0x138a0f27
  4095af:	gs mov cl,0xd4
  4095b2:	lock retf 
  4095b4:	into   
  4095b5:	push   eax
  4095b6:	push   edi
  4095b7:	daa    
  4095b8:	dec    edx
  4095b9:	hlt    
  4095ba:	and    BYTE PTR [edx],dh
  4095bc:	and    ecx,DWORD PTR [eax]
  4095be:	xor    DWORD PTR gs:[ebx+0x7263d1da],edx
  4095c5:	cmc    
  4095c6:	xchg   ebx,eax
  4095c7:	push   ds
  4095c8:	push   edx
  4095c9:	pop    eax
  4095ca:	jg     0x409569
  4095cc:	jl     0x4095d4
  4095ce:	push   ebp
  4095cf:	mov    bh,BYTE PTR [esi+edi*1-0x3f]
  4095d3:	or     DWORD PTR [ecx+0x7c],ebp
  4095d6:	nop
  4095d7:	enter  0xd85c,0xc
  4095db:	push   esi
  4095dc:	mov    ecx,0x628e9667
  4095e1:	adc    ecx,esp
  4095e3:	int    0x8
  4095e5:	call   0x6a2e:0x540c8600
  4095ec:	leave  
  4095ed:	loop   0x4095a7
  4095ef:	and    eax,0xb69bc65a
  4095f4:	adc    DWORD PTR [edx+0x78],edx
  4095f7:	aaa    
  4095f8:	lods   al,BYTE PTR ds:[esi]
  4095f9:	inc    edx
  4095fa:	cmp    al,0x78
  4095fc:	inc    ebp
  4095fd:	(bad)  
  4095fe:	mov    eax,ds:0x8fa643eb
  409603:	push   esp
  409604:	loopne 0x40966a
  409606:	ds or  ecx,edx
  409609:	add    DWORD PTR [edx+0x404cd73],ebx
  40960f:	dec    edx
  409610:	jae    0x40968d
  409612:	repnz jmp 0xa4c:0x4691cc9e
  40961a:	mov    ebx,0xdcaf6f06
  40961f:	outs   dx,DWORD PTR ds:[esi]
  409620:	jmp    0x4095a9
  409622:	retf   0x49e1
  409625:	imul   esp,esp,0xacd24315
  40962b:	mov    bl,BYTE PTR [ebp+0x47]
  40962e:	mov    al,ds:0x85a1fda1
  409633:	jo     0x40961a
  409635:	push   ss
  409636:	stos   DWORD PTR es:[edi],eax
  409637:	pop    ds
  409638:	stc    
  409639:	enter  0xa29e,0xae
  40963d:	xor    edx,ecx
  40963f:	or     ah,0x8c
  409642:	inc    eax
  409643:	out    0x81,al
  409645:	and    DWORD PTR [edi],0xb41a72c8
  40964b:	mov    esp,0x915ab10b
  409650:	or     esi,DWORD PTR [ecx]
  409652:	jge    0x4096b9
  409654:	xchg   esi,eax
  409655:	xchg   ecx,eax
  409656:	retf   0xd975
  409659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40965a:	and    eax,0x727a167e
  40965f:	mov    WORD PTR [eax],fs
  409661:	jbe    0x40964b
  409663:	push   esi
  409664:	in     al,0x6b
  409666:	dec    ecx
  409667:	mov    ebp,DWORD PTR [ecx-0x515336f7]
  40966d:	and    DWORD PTR [ecx-0x2d],ebp
  409670:	(bad)  
  409671:	mov    bh,0x2e
  409673:	cmp    al,0x6a
  409675:	int    0x2
  409677:	inc    ebx
  409678:	enter  0x347b,0xc6
  40967c:	rcr    DWORD PTR [edi-0x4311d69e],cl
  409682:	sub    DWORD PTR [ebx],ebx
  409684:	int3   
  409685:	lds    eax,FWORD PTR [esi]
  409687:	push   0xa7b5ad09
  40968c:	push   ss
  40968d:	not    ebx
  40968f:	fmul   st,st(4)
  409691:	jmp    0x18f2:0x6501b805
  409698:	fdivr  QWORD PTR [edi-0x19]
  40969b:	mov    ecx,0x1be015ac
  4096a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096a1:	mov    al,0x4
  4096a3:	sbb    al,BYTE PTR [eax+0x37]
  4096a6:	jp     0x40962c
  4096a8:	add    edx,ecx
  4096aa:	(bad)  
  4096ac:	cld    
  4096ad:	dec    edx
  4096ae:	(bad)  
  4096af:	loopne 0x4096a4
  4096b1:	mov    edx,0xf6788be4
  4096b6:	leave  
  4096b7:	mov    cl,0x6e
  4096b9:	and    dh,BYTE PTR [ecx+0x396a600c]
  4096bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096c0:	mov    cl,ch
  4096c2:	jmp    0x840f:0xf97f9b8c
  4096c9:	ror    BYTE PTR [ebp-0x25],cl
  4096cc:	shl    eax,1
  4096ce:	cdq    
  4096cf:	js     0x4096d5
  4096d1:	aad    0x15
  4096d3:	arpl   WORD PTR [ecx],di
  4096d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d6:	mov    ecx,DWORD PTR [ebp-0x69]
  4096d9:	nop
  4096da:	mul    bh
  4096dc:	scas   eax,DWORD PTR es:[edi]
  4096dd:	xchg   esp,eax
  4096de:	push   esi
  4096df:	add    DWORD PTR [edx-0x55e205f3],ebp
  4096e5:	lea    esp,[esi-0x5a8f92d4]
  4096eb:	retf   
  4096ec:	aas    
  4096ed:	sub    eax,0x3be3e34c
  4096f2:	and    ch,BYTE PTR [ebp+0x3e8c2c42]
  4096f8:	inc    eax
  4096f9:	add    ecx,DWORD PTR ds:0xcd74dfd8
  4096ff:	sub    eax,0xc41b2676
  409704:	cmp    ah,dh
  409706:	in     eax,dx
  409707:	cs fdiv st,st(6)
  40970a:	mov    eax,0xa4beae0a
  40970f:	sahf   
  409710:	push   ss
  409711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409712:	repnz and DWORD PTR [edi+0x29ab4d2d],ebp
  409719:	sub    eax,0xcdc8b356
  40971e:	xchg   DWORD PTR [ecx-0x59aeb38],ebp
  409724:	outs   dx,DWORD PTR ds:[esi]
  409725:	and    dh,dh
  409727:	fst    DWORD PTR [ebx-0x2eebfc66]
  40972d:	repz jl 0x4097ae
  409730:	stc    
  409731:	pop    edi
  409732:	ret    
  409733:	sbb    BYTE PTR [edi+eax*8+0x6c],ch
  409737:	fst    QWORD PTR [ebp+ebx*1+0xab71bdd]
  40973e:	int3   
  40973f:	pop    ebp
  409740:	out    dx,eax
  409741:	cld    
  409742:	sbb    eax,DWORD PTR [ecx+0x4]
  409745:	jmp    0xa45578b0
  40974a:	dec    edx
  40974b:	sbb    eax,0xb6e45ffe
  409750:	jg     0x409761
  409752:	sub    DWORD PTR [ebx+0x3a],ebx
  409755:	jp     0x4096f1
  409757:	push   esi
  409758:	jmp    0x83ad:0x60d5e67
  40975f:	(bad)  
  409761:	jo     0x409747
  409763:	stos   DWORD PTR es:[edi],eax
  409764:	fisttp DWORD PTR ds:0xd7a99f1c
  40976a:	and    dl,BYTE PTR [edi+eiz*2+0x75]
  40976e:	push   esi
  40976f:	mov    eax,0xdbb390d8
  409774:	xchg   esp,eax
  409775:	mov    ss,WORD PTR [esi-0x160aeea8]
  40977b:	inc    ecx
  40977c:	sub    al,0x24
  40977e:	jl     0x4097ae
  409780:	popa   
  409781:	or     eax,0xea95d364
  409787:	jmp    0xe8a2bcbd
  40978c:	(bad)  
  40978d:	cmc    
  40978e:	sbb    DWORD PTR [edx-0x43],edi
  409791:	stc    
  409792:	popa   
  409793:	pop    es
  409794:	sbb    eax,0x2ac9766b
  409799:	jecxz  0x409773
  40979b:	enter  0xda2c,0xe2
  40979f:	push   ebx
  4097a0:	jo     0x409748
  4097a2:	push   DWORD PTR [edi-0x2c]
  4097a5:	dec    ebx
  4097a6:	mov    cr3,esi
  4097a9:	xchg   ebx,eax
  4097aa:	sbb    edx,DWORD PTR [eax]
  4097ac:	outs   dx,BYTE PTR ds:[esi]
  4097ad:	jge    0x409750
  4097af:	adc    esi,DWORD PTR [edx]
  4097b1:	bound  edi,QWORD PTR [esi]
  4097b3:	sbb    eax,0xead4474e
  4097b8:	outs   dx,BYTE PTR ds:[esi]
  4097b9:	out    dx,al
  4097ba:	mov    bh,0xe7
  4097bc:	pop    ebp
  4097bd:	adc    edx,DWORD PTR [ebx+ecx*2+0x4f]
  4097c1:	out    0xa8,al
  4097c3:	dec    edi
  4097c4:	xor    eax,0x714bcb19
  4097c9:	mov    ch,0xd4
  4097cb:	pop    edi
  4097cc:	hlt    
  4097cd:	outs   dx,BYTE PTR ds:[esi]
  4097ce:	or     dh,BYTE PTR [ebx-0x5e]
  4097d1:	inc    edx
  4097d2:	adc    dh,bl
  4097d4:	or     DWORD PTR [ebx-0x38],ecx
  4097d7:	(bad)  
  4097d9:	stc    
  4097da:	or     eax,0x823652d5
  4097df:	shl    DWORD PTR [eax-0xcad4ea5],cl
  4097e5:	mov    cl,0x17
  4097e7:	daa    
  4097e8:	dec    esp
  4097e9:	xchg   ebx,eax
  4097ea:	imul   edx,DWORD PTR [edx],0x48365813
  4097f0:	mov    bl,0x67
  4097f2:	fidiv  WORD PTR [ebx+0x11]
  4097f5:	sub    eax,0x4009161c
  4097fa:	outs   dx,BYTE PTR ds:[esi]
  4097fb:	fiadd  DWORD PTR [eax]
  4097fd:	pop    es
  4097fe:	test   al,0xa
  409800:	test   DWORD PTR [ebp-0x594ea83b],0xe94da460
  40980a:	and    dh,BYTE PTR [edx+0x21]
  40980d:	xchg   esp,eax
  40980e:	jns    0x40983b
  409810:	push   cs
  409811:	sbb    edi,edx
  409813:	fcomp  QWORD PTR [ecx*1+0xca2c0c5]
  40981a:	loopne 0x409854
  40981c:	mov    ebx,DWORD PTR [edi-0x787391ae]
  409822:	in     eax,0xd6
  409824:	push   esp
  409825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409826:	mov    cl,0x9d
  409828:	mov    al,ds:0xcc562b4c
  40982d:	pop    es
  40982e:	ins    DWORD PTR es:[edi],dx
  40982f:	stos   BYTE PTR es:[edi],al
  409830:	mov    esi,0xdfb08a31
  409835:	es jmp 0x40981c
  409838:	rcl    ecx,1
  40983a:	das    
  40983b:	pop    ss
  40983c:	fistp  DWORD PTR [edx]
  40983e:	pop    es
  40983f:	pop    ss
  409840:	retf   0x65d8
  409843:	sub    ebx,DWORD PTR [edi]
  409845:	adc    ebp,DWORD PTR [edx*2+0x3ffd9f33]
  40984c:	jmp    0xcc09:0xda24c5c2
  409853:	stos   BYTE PTR es:[edi],al
  409854:	pop    ebp
  409855:	retf   
  409856:	ins    DWORD PTR es:[edi],dx
  409857:	inc    ebp
  409858:	adc    cl,BYTE PTR [ecx+0x54]
  40985b:	popf   
  40985c:	test   eax,0x1849558d
  409861:	rcl    bh,cl
  409863:	xchg   ebp,eax
  409864:	jns    0x409836
  409866:	mov    ebp,0xd033c014
  40986b:	pop    eax
  40986c:	cmp    DWORD PTR [ebp-0x72],edi
  40986f:	addr16 push cs
  409871:	(bad)  
  409872:	cmp    esp,DWORD PTR [edx]
  409874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409875:	push   esp
  409876:	dec    ecx
  409877:	cmc    
  409878:	dec    BYTE PTR [esi]
  40987a:	(bad)  
  40987b:	push   ebx
  40987c:	jno    0x40980a
  40987e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40987f:	stos   DWORD PTR es:[edi],eax
  409880:	mov    al,0x6f
  409882:	mov    BYTE PTR [ecx+0x3ade7b70],dl
  409888:	mov    esp,0xcc6a76ec
  40988d:	jae    0x409843
  40988f:	cwde   
  409890:	pop    ebx
  409891:	int    0x9f
  409893:	and    DWORD PTR [edx],edx
  409895:	cmp    al,0x2d
  409897:	sbb    BYTE PTR ds:0x7fdcd614,bh
  40989d:	adc    eax,0x4eed86a9
  4098a2:	mov    ah,0xae
  4098a4:	(bad)  
  4098a5:	add    dl,BYTE PTR [edi]
  4098a7:	(bad)  
  4098a8:	mov    ds:0x997822d3,al
  4098ad:	pop    ds
  4098ae:	push   ebp
  4098af:	mov    ds:0x3f071f38,al
  4098b4:	imul   BYTE PTR [ecx-0x42]
  4098b7:	xchg   BYTE PTR [edx-0x2ebed660],cl
  4098bd:	jl     0x409843
  4098bf:	cmp    eax,0x7f2395c2
  4098c4:	call   0x99af:0xc84ce12f
  4098cb:	in     eax,0x4f
  4098cd:	dec    esi
  4098ce:	les    eax,FWORD PTR [ebx+eiz*1-0x39]
  4098d2:	(bad)
  4098d6:	fld    DWORD PTR [esi+0x64]
  4098d9:	loopne 0x4098fa
  4098db:	adc    eax,0x4aa426ce
  4098e0:	inc    esp
  4098e1:	mov    eax,0x508498bf
  4098e6:	add    ah,BYTE PTR [ebx+eax*8]
  4098e9:	mov    esp,0xb5361ade
  4098ee:	jmp    0x40993d
  4098f0:	jle    0x40988c
  4098f2:	imul   ecx,DWORD PTR [edi+0x32],0x6984be36
  4098f9:	xor    eax,0x9b584c3
  4098fe:	push   ss
  4098ff:	xchg   edx,eax
  409900:	(bad)  
  409901:	in     eax,0x8a
  409903:	xor    BYTE PTR ds:0x9d6d558d,0xe0
  40990a:	jp     0x40994a
  40990c:	jnp    0x40992b
  40990e:	inc    edi
  40990f:	xor    DWORD PTR [edx],esi
  409911:	call   0x7b852883
  409916:	sub    al,0xf9
  409918:	fstp   DWORD PTR [ebx]
  40991a:	lock mov ebp,0x7eea054f
  409920:	jmp    0x409968
  409922:	rcr    BYTE PTR [esi+0x6b],1
  409925:	xchg   DWORD PTR [ebp+0x270207ff],esi
  40992b:	aaa    
  40992c:	sbb    edi,DWORD PTR [ebx]
  40992e:	aad    0x75
  409930:	cmp    BYTE PTR [ebx],al
  409932:	(bad)  
  409933:	jp     0x409922
  409935:	adc    ch,bl
  409937:	sub    ebx,edx
  409939:	jl     0x409982
  40993b:	sub    dl,al
  40993d:	fadd   QWORD PTR [ebp-0x5d]
  409940:	sbb    cl,BYTE PTR [ecx+edx*1+0x4]
  409944:	xlat   BYTE PTR ds:[ebx]
  409945:	push   es
  409946:	xor    edi,DWORD PTR [ebx+0x55]
  409949:	mov    ecx,0xbdd3a29e
  40994e:	pop    edx
  40994f:	loop   0x4099b4
  409951:	mov    BYTE PTR [ecx],0x50
  409954:	mov    esi,DWORD PTR ds:0x45264b99
  40995a:	jle    0x4099d8
  40995c:	cdq    
  40995d:	mov    ebx,0x8e0ecbd6
  409962:	sti    
  409963:	xor    ch,BYTE PTR [esi]
  409965:	pop    esi
  409966:	add    BYTE PTR [ecx],dh
  409968:	jmp    0x409987
  40996a:	stos   DWORD PTR es:[edi],eax
  40996b:	add    BYTE PTR [ecx+ecx*1],al
  40996e:	cmp    edx,ecx
  409970:	lods   eax,DWORD PTR ds:[esi]
  409971:	dec    edx
  409972:	cmp    dl,BYTE PTR ss:[esi-0xa8f73cc]
  409979:	mov    BYTE PTR [ebp+0x4b],dh
  40997c:	pushf  
  40997d:	sbb    ebp,DWORD PTR [edx+0x67a86184]
  409983:	stc    
  409984:	mov    BYTE PTR [edi],cl
  409986:	dec    esp
  409987:	add    ebx,ebx
  409989:	ds xchg edx,eax
  40998b:	mov    bl,0x13
  40998d:	fimul  WORD PTR [edx-0x3f4ac51f]
  409993:	call   0x5779ae59
  409998:	out    0xf9,eax
  40999a:	push   0xf0e2b3bf
  40999f:	xor    ecx,DWORD PTR [edx+0x4a4b8d76]
  4099a5:	sbb    dl,BYTE PTR [ecx+0x5c]
  4099a8:	adc    cl,BYTE PTR [edx+0x68]
  4099ab:	sub    DWORD PTR [esi-0x54],ecx
  4099ae:	mov    edi,0x55643f49
  4099b3:	mov    dh,0x45
  4099b5:	scas   al,BYTE PTR es:[edi]
  4099b6:	aad    0x9c
  4099b8:	ror    BYTE PTR [edi+0x1c0be654],0x10
  4099bf:	xchg   ebp,eax
  4099c0:	xchg   ecx,eax
  4099c1:	mov    bl,bl
  4099c3:	data16 ror ch,1
  4099c6:	pop    ebp
  4099c7:	into   
  4099c8:	outs   dx,BYTE PTR ds:[esi]
  4099c9:	imul   ebx,edx,0xedb1fb5c
  4099cf:	out    dx,eax
  4099d0:	daa    
  4099d1:	clc    
  4099d2:	inc    eax
  4099d3:	mov    esp,eax
  4099d5:	loop   0x4099fe
  4099d7:	test   eax,0xff195cb5
  4099dc:	mov    BYTE PTR [edi-0x80],bl
  4099df:	mov    edi,DWORD PTR [eax-0x57]
  4099e2:	inc    ebx
  4099e3:	lods   eax,DWORD PTR ds:[esi]
  4099e4:	push   eax
  4099e5:	xchg   ebx,eax
  4099e6:	and    ebx,DWORD PTR [ebx+0x51]
  4099e9:	clc    
  4099ea:	or     al,0x7b
  4099ec:	sub    eax,0xbfc62d65
  4099f1:	jno    0x409a65
  4099f3:	sub    BYTE PTR [eax+0x1f6181dc],bl
  4099f9:	mov    ebp,0x666eb07f
  4099fe:	loopne 0x409a26
  409a00:	imul   esp,DWORD PTR [eax-0x3bbf2c2f],0x46
  409a07:	lock mov edi,0xf24e63ba
  409a0d:	loope  0x4099ef
  409a0f:	aad    0x94
  409a11:	push   edi
  409a12:	dec    esi
  409a13:	stos   DWORD PTR es:[edi],eax
  409a14:	mov    BYTE PTR [edi],ah
  409a16:	sub    ebp,eax
  409a18:	sbb    eax,0xb482522c
  409a1d:	or     al,0xe6
  409a1f:	sbb    ch,BYTE PTR [ebx-0x6b]
  409a22:	xchg   esi,eax
  409a23:	les    esp,FWORD PTR [esp+ebx*2-0x1bd62c6e]
  409a2a:	test   BYTE PTR [esi],bl
  409a2c:	(bad)  
  409a2d:	iret   
  409a2e:	cmc    
  409a2f:	jae    0x409a83
  409a31:	jg     0x409aa0
  409a33:	cmp    al,0x49
  409a35:	in     al,dx
  409a36:	pop    ss
  409a37:	mov    edx,0xb9aeed8b
  409a3c:	xchg   esp,eax
  409a3d:	pop    ebx
  409a3e:	retf   
  409a3f:	ret    
  409a40:	inc    esi
  409a41:	fisubr DWORD PTR [edi]
  409a43:	mov    cl,0x36
  409a45:	inc    esi
  409a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a47:	enter  0x366c,0xfb
  409a4b:	adc    DWORD PTR [edi+0x1d359b2d],0xf
  409a52:	fisubr WORD PTR [ebx+0x34]
  409a55:	jecxz  0x409a28
  409a57:	pop    esi
  409a58:	add    ah,BYTE PTR [ecx+ecx*2+0x7f]
  409a5c:	shl    cl,0xac
  409a5f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a61:	xchg   DWORD PTR [edi-0x19],edi
  409a64:	sahf   
  409a65:	push   ecx
  409a66:	test   eax,0x42bfdc43
  409a6b:	fistp  QWORD PTR [ecx-0x1f0cb8dd]
  409a71:	push   ebx
  409a72:	outs   dx,DWORD PTR ds:[esi]
  409a73:	or     al,0x9
  409a75:	xchg   ebp,eax
  409a76:	ins    DWORD PTR es:[edi],dx
  409a77:	mov    dl,0xc8
  409a79:	mov    ebp,0xfd075af9
  409a7e:	stos   BYTE PTR es:[edi],al
  409a7f:	hlt    
  409a80:	mov    dl,0x7f
  409a82:	push   edi
  409a83:	fwait
  409a84:	ret    
  409a85:	adc    dl,ah
  409a87:	push   es
  409a88:	(bad)  
  409a89:	push   ss
  409a8a:	jo     0x409aa7
  409a8c:	fdiv   DWORD PTR [edx+edi*4-0x74f1b1b3]
  409a93:	ds xchg edx,eax
  409a95:	(bad)  
  409a96:	(bad)  
  409a97:	mov    edx,0x357e4312
  409a9c:	call   FWORD PTR [eax]
  409a9e:	lods   al,BYTE PTR ds:[esi]
  409a9f:	lahf   
  409aa0:	test   al,0xc1
  409aa2:	icebp  
  409aa3:	xlat   BYTE PTR ds:[ebx]
  409aa4:	push   ebp
  409aa5:	mov    al,ds:0xff0ffa42
  409aaa:	in     eax,dx
  409aab:	xchg   edx,eax
  409aac:	retf   
  409aad:	lds    esp,FWORD PTR [eax]
  409aaf:	and    al,0x15
  409ab1:	in     eax,0x29
  409ab3:	nop
  409ab4:	jecxz  0x409a3d
  409ab6:	inc    ecx
  409ab7:	popf   
  409ab8:	jmp    0xd69aa933
  409abd:	dec    esp
  409abe:	and    eax,0xe77588d2
  409ac3:	lods   al,BYTE PTR ds:[esi]
  409ac4:	and    al,0x33
  409ac6:	test   eax,0xbdc23e20
  409acb:	sbb    bh,BYTE PTR [esi+0x53]
  409ace:	adc    eax,0x107f0014
  409ad3:	cmp    esi,DWORD PTR [ebx]
  409ad5:	dec    ebx
  409ad6:	scas   al,BYTE PTR es:[edi]
  409ad7:	mov    dl,0x61
  409ad9:	fwait
  409ada:	je     0x409b37
  409adc:	mov    edx,0x4cb895cf
  409ae1:	std    
  409ae2:	mov    edi,0x6503c610
  409ae7:	xchg   edx,eax
  409ae8:	call   0xabb3d2d6
  409aed:	retf   0xda89
  409af0:	jnp    0x409b20
  409af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af3:	xchg   esp,eax
  409af4:	outs   dx,BYTE PTR ds:[esi]
  409af5:	push   ebp
  409af6:	jb     0x409a7f
  409af8:	aad    0xfc
  409afa:	pop    eax
  409afb:	jmp    ecx
  409afd:	pop    esp
  409afe:	mov    bh,dh
  409b00:	jbe    0x409b20
  409b02:	pop    ds
  409b03:	xchg   DWORD PTR [ecx],edx
  409b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b06:	jno    0x409b38
  409b08:	pop    ss
  409b09:	cli    
  409b0a:	and    al,0x13
  409b0c:	and    BYTE PTR [ecx+0x5a],cl
  409b0f:	sub    ah,bh
  409b11:	mov    bh,0x3b
  409b13:	jbe    0x409aa0
  409b15:	mov    ecx,0x3a6813
  409b1a:	in     eax,dx
  409b1b:	mov    edx,0xcb57a080
  409b20:	jl     0x409b9a
  409b22:	ror    ecx,1
  409b24:	sbb    ebp,edx
  409b26:	or     eax,DWORD PTR [esi]
  409b28:	jno    0x409afe
  409b2a:	nop
  409b2b:	pop    esi
  409b2c:	sub    BYTE PTR [ecx-0x73],0x9d
  409b30:	retf   
  409b31:	mov    eax,ds:0xc2f67a5
  409b36:	or     BYTE PTR [eax],0xd1
  409b39:	add    eax,0xc31c2933
  409b3e:	mov    WORD PTR [ebx-0x4aa713e7],cs
  409b44:	call   0xe0d2681e
  409b49:	aad    0x3c
  409b4b:	jmp    0xdd4a18aa
  409b50:	push   es
  409b51:	push   eax
  409b52:	lea    eax,ds:0x6514baa3
  409b58:	pushf  
  409b59:	jb     0x409b16
  409b5b:	mov    al,BYTE PTR [esi-0x77f5253c]
  409b61:	dec    ebx
  409b62:	stc    
  409b63:	das    
  409b64:	arpl   WORD PTR [eax-0x1a],sp
  409b67:	rcr    BYTE PTR [edx],cl
  409b69:	nop
  409b6a:	outs   dx,DWORD PTR ds:[esi]
  409b6b:	jl     0x409b48
  409b6d:	sbb    dh,cl
  409b6f:	push   ebp
  409b70:	pusha  
  409b71:	dec    edi
  409b72:	into   
  409b73:	inc    ebp
  409b74:	adc    BYTE PTR [esi+0x149caa21],dl
  409b7a:	sub    al,0xd8
  409b7c:	jb     0x409bab
  409b7e:	mov    al,0x9e
  409b80:	js     0x409bbc
  409b82:	pop    ebx
  409b83:	test   DWORD PTR [ecx-0x1281e483],ebx
  409b89:	pop    ss
  409b8a:	outs   dx,DWORD PTR ds:[esi]
  409b8b:	pop    esi
  409b8c:	icebp  
  409b8d:	popf   
  409b8e:	push   0xffffff93
  409b90:	mov    esp,0xb297a6e9
  409b95:	mov    ds:0x65401f33,al
  409b9a:	push   ds
  409b9b:	adc    eax,0x4601e21a
  409ba0:	pop    eax
  409ba1:	out    dx,al
  409ba2:	(bad)  
  409ba4:	cmp    BYTE PTR [esi],0x41
  409ba7:	or     ch,BYTE PTR [ecx-0x6f3999d1]
  409bad:	outs   dx,BYTE PTR ds:[esi]
  409bae:	fwait
  409baf:	fs iret 
  409bb1:	inc    ebx
  409bb2:	dec    edi
  409bb3:	loopne 0x409b3f
  409bb5:	aas    
  409bb6:	sub    BYTE PTR ds:0x16299cd2,dl
  409bbc:	jbe    0x409bef
  409bbe:	cmp    eax,0x275e96d2
  409bc3:	retf   0x8d18
  409bc6:	or     DWORD PTR [ebx+0x78ec8d48],esi
  409bcc:	or     dh,BYTE PTR [ecx-0x7c]
  409bcf:	mov    ds:0x5ee89d87,al
  409bd4:	xchg   edi,eax
  409bd5:	jne    0x409c0e
  409bd7:	or     eax,0x6b3053d
  409bdc:	shl    BYTE PTR [ebp+eax*4+0x69d1b65f],1
  409be3:	into   
  409be4:	loopne 0x409bbd
  409be6:	popf   
  409be7:	xchg   ebp,eax
  409be8:	xchg   ecx,eax
  409be9:	scas   al,BYTE PTR es:[edi]
  409bea:	push   esi
  409beb:	jle    0x409c25
  409bed:	out    dx,al
  409bee:	mov    al,0xf
  409bf0:	fwait
  409bf1:	call   ebp
  409bf3:	jb     0x409c04
  409bf5:	stos   BYTE PTR es:[edi],al
  409bf6:	cdq    
  409bf7:	mov    esi,0x718c2a53
  409bfc:	aaa    
  409bfd:	iret   
  409bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bff:	adc    al,0x8a
  409c01:	outs   dx,BYTE PTR ds:[esi]
  409c02:	pusha  
  409c03:	or     ebx,DWORD PTR [edx-0x291b743f]
  409c09:	inc    edx
  409c0a:	js     0x409be5
  409c0c:	mov    al,0xc3
  409c0e:	inc    ecx
  409c0f:	sbb    eax,0xf3e650da
  409c14:	jl     0x409c87
  409c16:	and    BYTE PTR [di-0x72],bh
  409c1a:	(bad)  [esp+esi*2-0x7b]
  409c1e:	icebp  
  409c1f:	xchg   ebp,eax
  409c20:	hlt    
  409c21:	repnz mov ch,0x47
  409c24:	rcr    DWORD PTR [edx],0x4b
  409c27:	test   DWORD PTR ds:0x74a7fdac,edx
  409c2d:	and    BYTE PTR [ecx],al
  409c2f:	data16 or al,0x97
  409c33:	daa    
  409c34:	clc    
  409c35:	mov    ch,0x53
  409c37:	jae    0x409c20
  409c39:	test   eax,0xff731247
  409c3e:	push   ecx
  409c3f:	dec    ebx
  409c40:	xchg   edi,eax
  409c41:	pop    ss
  409c42:	push   0x2a
  409c44:	leave  
  409c45:	loopne 0x409c81
  409c47:	leave  
  409c48:	pop    edi
  409c49:	push   edx
  409c4a:	pop    ebx
  409c4b:	dec    ebp
  409c4c:	sbb    al,0x90
  409c4e:	push   0xffa77620
  409c53:	push   es
  409c54:	clc    
  409c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c56:	outs   dx,DWORD PTR ds:[esi]
  409c57:	test   DWORD PTR [ebx-0x19],edx
  409c5a:	mov    dh,0x63
  409c5c:	or     al,0x5c
  409c5e:	(bad)  
  409c5f:	sti    
  409c60:	cmp    ebx,edx
  409c62:	and    DWORD PTR ss:[ebp-0x19ca88f6],edi
  409c69:	inc    ecx
  409c6a:	test   al,0x6a
  409c6c:	(bad)  
  409c6d:	sti    
  409c6e:	test   al,0x2
  409c70:	popw   ds
  409c72:	or     eax,0x9a5ca73
  409c77:	fist   WORD PTR [edx+0x8]
  409c7a:	push   ebp
  409c7b:	test   DWORD PTR [esp+ebp*2+0x74e89dfa],edi
  409c82:	lods   eax,DWORD PTR ds:[esi]
  409c83:	sbb    eax,0xf942fa18
  409c88:	mov    bl,0x3c
  409c8a:	jecxz  0x409c68
  409c8c:	mov    DWORD PTR [edx+0xf],eax
  409c8f:	and    cl,BYTE PTR ds:0xa6e69f58
  409c95:	cmp    ecx,esi
  409c97:	mov    DWORD PTR [edi],esi
  409c99:	jp     0x409c72
  409c9b:	jns    0x409cf1
  409c9d:	fwait
  409c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9f:	call   FWORD PTR ss:[edi-0x71]
  409ca3:	adc    BYTE PTR [esi+ebx*4],0xe
  409ca7:	jo     0x409cfa
  409ca9:	lods   eax,DWORD PTR ds:[esi]
  409caa:	xlat   BYTE PTR ds:[ebx]
  409cab:	jge    0x409c8d
  409cad:	cmp    ch,dh
  409caf:	pusha  
  409cb0:	in     eax,dx
  409cb1:	cli    
  409cb2:	call   0x694b:0xe24dae0c
  409cb9:	mov    eax,ds:0xaba69a6c
  409cbe:	mov    eax,0xee4b4701
  409cc3:	pop    ebp
  409cc4:	mov    cl,0x1e
  409cc6:	mov    bl,0x72
  409cc8:	lahf   
  409cc9:	xor    eax,0x8e0d831d
  409cce:	pusha  
  409ccf:	out    0xab,al
  409cd1:	das    
  409cd2:	jns    0x409ce4
  409cd4:	ds enter 0x9150,0x6d
  409cd9:	or     dl,BYTE PTR ds:0xd59b3b83
  409cdf:	xchg   ebp,eax
  409ce0:	aam    0x87
  409ce2:	sbb    DWORD PTR [ecx],0xffffffa8
  409ce5:	dec    esp
  409ce6:	push   ebx
  409ce7:	xor    cl,BYTE PTR [ebx+esi*1-0x42]
  409ceb:	mov    edi,0xdcfc029c
  409cf0:	dec    esp
  409cf1:	lea    edi,[eax-0x2a]
  409cf4:	(bad)  
  409cf5:	(bad)  
  409cf6:	xor    al,0xbe
  409cf8:	rol    BYTE PTR [esi-0x4],0xf
  409cfc:	xchg   edx,eax
  409cfd:	sbb    eax,0x4c40d7fc
  409d02:	jle    0x409cdd
  409d04:	pushf  
  409d05:	xchg   edx,edx
  409d07:	shl    DWORD PTR [ecx+0x36],1
  409d0a:	lock fadd QWORD PTR ds:0x73a1a775
  409d11:	xor    ah,0x20
  409d14:	mov    al,BYTE PTR [ebp+0x453e4806]
  409d1a:	push   ds
  409d1b:	inc    ecx
  409d1c:	pop    ebx
  409d1d:	xchg   DWORD PTR ds:0x97bb6399,esi
  409d23:	gs jmp 0x409d5c
  409d26:	outs   dx,BYTE PTR ds:[esi]
  409d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d28:	pushf  
  409d29:	test   eax,0xb7930591
  409d2e:	mov    esi,0x29107514
  409d33:	xchg   ebp,eax
  409d34:	xchg   esp,eax
  409d35:	out    0x4c,al
  409d37:	lahf   
  409d38:	pop    esi
  409d39:	(bad)  
  409d3a:	int3   
  409d3b:	mov    al,0x27
  409d3d:	pop    ss
  409d3e:	fidivr DWORD PTR [edi+0x54]
  409d41:	test   al,0x2e
  409d43:	add    edx,DWORD PTR [edi+0x1f4b638b]
  409d49:	xchg   ebp,eax
  409d4a:	xchg   ecx,eax
  409d4b:	or     al,0xf1
  409d4d:	test   DWORD PTR [ecx],ecx
  409d4f:	stos   BYTE PTR es:[edi],al
  409d50:	jg     0x409d90
  409d52:	mov    cr2,eax
  409d55:	pop    eax
  409d56:	mov    esp,0x5bd7e263
  409d5b:	cmp    bl,al
  409d5d:	sti    
  409d5e:	mov    ch,0x2e
  409d60:	(bad)  [ebp+0x6a72e940]
  409d66:	inc    ebx
  409d67:	cmp    dh,ch
  409d69:	je     0x409d13
  409d6b:	mov    esi,0xa8539223
  409d70:	int3   
  409d71:	test   DWORD PTR [ecx+edi*8],eax
  409d74:	jle    0x409dc6
  409d76:	pushf  
  409d77:	fisub  DWORD PTR [eax]
  409d79:	retf   
  409d7a:	mov    cl,BYTE PTR [ebp+0x1f]
  409d7d:	pop    ds
  409d7e:	jnp    0x409d0f
  409d80:	test   al,0x69
  409d82:	ins    BYTE PTR es:[edi],dx
  409d83:	mov    eax,ds:0xfa4c5336
  409d88:	xchg   edx,eax
  409d89:	dec    edi
  409d8a:	addr16 inc edx
  409d8c:	imul   edx
  409d8e:	jg     0x409d3e
  409d90:	cmp    dh,BYTE PTR [edi-0x42]
  409d93:	dec    edx
  409d94:	push   esi
  409d95:	aaa    
  409d96:	arpl   WORD PTR [eax],cx
  409d98:	ins    BYTE PTR es:[edi],dx
  409d99:	aas    
  409d9a:	jmp    0x409de7
  409d9c:	repz or ch,BYTE PTR [edi-0x35a5b7cb]
  409da3:	aad    0x62
  409da5:	cmp    eax,0x2ec5b7fc
  409daa:	in     al,dx
  409dab:	test   eax,0xb0a0632c
  409db0:	mov    cl,0xb2
  409db2:	dec    ecx
  409db3:	test   al,0xe9
  409db5:	daa    
  409db6:	fnstsw WORD PTR [edx]
  409db8:	cld    
  409db9:	pusha  
  409dba:	sub    eax,0x59f1ed6f
  409dbf:	cmp    eax,0xfc19534
  409dc4:	arpl   WORD PTR [ebp+eiz*8+0x1e],ax
  409dc8:	pop    ebx
  409dc9:	dec    edx
  409dca:	mov    BYTE PTR [ebp+0x287e97de],dh
  409dd0:	stos   DWORD PTR es:[edi],eax
  409dd1:	mov    DWORD PTR [esi+0x48],esi
  409dd4:	push   0x2b
  409dd6:	dec    eax
  409dd7:	int    0x6f
  409dd9:	les    esi,FWORD PTR [esi+edi*1+0x61]
  409ddd:	loop   0x409dda
  409ddf:	stos   BYTE PTR es:[edi],al
  409de0:	cwde   
  409de1:	je     0x409de0
  409de3:	jo     0x409ddd
  409de5:	jbe    0x409e5e
  409de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de8:	icebp  
  409de9:	mov    ebx,0x234ebfd9
  409dee:	ja     0x409e3f
  409df0:	jne    0x409e5f
  409df2:	ins    BYTE PTR es:[edi],dx
  409df3:	in     al,dx
  409df4:	out    dx,eax
  409df5:	jl     0x409dad
  409df7:	jecxz  0x409e38
  409df9:	and    eax,DWORD PTR [edx-0x5831dd89]
  409dff:	inc    esp
  409e00:	sub    BYTE PTR [edx+0x528eab28],bh
  409e06:	lock sub edi,DWORD PTR [ecx-0x1f4e068e]
  409e0d:	out    dx,al
  409e0e:	mov    ss,WORD PTR [ebp+0x7e]
  409e11:	ds add al,BYTE PTR gs:[esi-0x42]
  409e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e17:	adc    DWORD PTR [edi-0xc],edx
  409e1a:	xchg   ebp,eax
  409e1b:	daa    
  409e1c:	test   BYTE PTR [ecx-0x6f],bl
  409e1f:	mov    ebp,0x71a7e0b9
  409e24:	and    ebx,esp
  409e26:	jne    0x409dc2
  409e28:	mov    ecx,DWORD PTR [edx+0x50]
  409e2b:	cwde   
  409e2c:	rcl    dh,cl
  409e2e:	rol    ecx,cl
  409e30:	shr    ebp,cl
  409e32:	and    al,0xe6
  409e34:	pop    ebx
  409e35:	out    dx,eax
  409e36:	lea    ecx,[edx]
  409e38:	aaa    
  409e39:	cmc    
  409e3a:	cmp    ebx,edx
  409e3c:	stos   BYTE PTR es:[edi],al
  409e3d:	jns    0x409e2d
  409e3f:	fistp  QWORD PTR ss:[ebp+0x107307d8]
  409e46:	icebp  
  409e47:	lods   eax,DWORD PTR ds:[esi]
  409e48:	in     al,dx
  409e49:	test   DWORD PTR [edi-0x72efa93e],esp
  409e4f:	xchg   ebx,eax
  409e50:	imul   edx,DWORD PTR [ebp+0x66],0xfe5d8a4c
  409e57:	ins    DWORD PTR es:[edi],dx
  409e58:	adc    DWORD PTR [esi+ebx*1+0x7d50700],0xc8403ba2
  409e63:	gs pushf 
  409e65:	test   al,0x5
  409e67:	cld    
  409e68:	xor    esi,DWORD PTR [ebx+eiz*8-0x69d6f062]
  409e6f:	dec    eax
  409e70:	xor    DWORD PTR [edx],esp
  409e72:	xlat   BYTE PTR ds:[ebx]
  409e73:	lock hlt 
  409e75:	adc    al,BYTE PTR [ebp-0x1d]
  409e78:	and    al,0x89
  409e7a:	mov    dl,0xd6
  409e7c:	out    0x47,al
  409e7e:	out    0x86,eax
  409e80:	dec    ebx
  409e81:	cmp    ebx,esi
  409e83:	mov    ds:0x713d66b5,eax
  409e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e89:	fcmovb st,st(6)
  409e8b:	add    dh,BYTE PTR [ecx+0x4f]
  409e8e:	jne    0x409e30
  409e90:	sbb    esp,DWORD PTR [esi]
  409e92:	mov    ds:0x415f6117,eax
  409e97:	leave  
  409e98:	inc    edi
  409e99:	ds jbe 0x409e93
  409e9c:	outs   dx,BYTE PTR ds:[esi]
  409e9d:	dec    edi
  409e9e:	push   0xc5387a46
  409ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea4:	push   ss
  409ea5:	jnp    0x409e57
  409ea7:	fadd   QWORD PTR [edi+esi*8]
  409eaa:	je     0x409eac
  409eac:	fiadd  WORD PTR [ecx+0x74]
  409eaf:	in     eax,0xa9
  409eb1:	ss add esi,edi
  409eb4:	sub    al,0xf3
  409eb6:	cs inc ebp
  409eb8:	stos   BYTE PTR es:[edi],al
  409eb9:	outs   dx,BYTE PTR ds:[esi]
  409eba:	pop    eax
  409ebc:	jae    0x409e87
  409ebe:	popf   
  409ebf:	cmp    dh,BYTE PTR [esi-0x53b84b85]
  409ec5:	cdq    
  409ec6:	scas   al,BYTE PTR es:[edi]
  409ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec8:	das    
  409ec9:	out    dx,al
  409eca:	hlt    
  409ecb:	mov    dl,0xc9
  409ecd:	popf   
  409ece:	mov    al,0xf4
  409ed0:	sub    eax,0x137b3a6e
  409ed5:	mov    ch,0x8c
  409ed7:	mov    ebx,0x3eefeffd
  409edc:	stc    
  409edd:	call   0xe998:0xc4f5390c
  409ee4:	mov    bh,0xc9
  409ee6:	sbb    eax,0x82b4e0a5
  409eeb:	cwde   
  409eec:	retf   
  409eed:	xchg   esi,eax
  409eee:	std    
  409eef:	jb     0x409e94
  409ef1:	das    
  409ef2:	push   edi
  409ef3:	pop    esp
  409ef4:	(bad)
  409ef7:	imul   edx,esi,0x1761278d
  409efd:	repnz ins DWORD PTR es:[edi],dx
  409eff:	and    DWORD PTR [edx+0x174cd2db],edi
  409f05:	aas    
  409f06:	or     eax,0xc0ea7fcf
  409f0b:	add    ch,bh
  409f0d:	fwait
  409f0e:	dec    edx
  409f0f:	jns    0x409ebb
  409f11:	mov    al,ds:0x47b4cb0d
  409f16:	push   cs
  409f17:	cmc    
  409f18:	or     BYTE PTR [eax],cl
  409f1a:	or     eax,0x2a95d59b
  409f1f:	cld    
  409f20:	stos   BYTE PTR es:[edi],al
  409f21:	cwde   
  409f22:	inc    ecx
  409f23:	xor    bh,ah
  409f25:	addr16 js 0x409f5b
  409f28:	cli    
  409f29:	hlt    
  409f2a:	out    dx,al
  409f2b:	ror    BYTE PTR [edx],cl
  409f2d:	jns    0x409fa5
  409f2f:	inc    eax
  409f30:	sbb    al,0x12
  409f32:	mov    ch,dl
  409f34:	fstp   DWORD PTR [eax-0x28c734fa]
  409f3a:	popf   
  409f3b:	sub    al,0x7f
  409f3d:	retf   0xae97
  409f40:	sbb    bl,dh
  409f42:	jmp    0xdcaf:0x4b675ebe
  409f49:	push   esi
  409f4a:	pushf  
  409f4b:	ret    
  409f4c:	pop    esi
  409f4d:	retf   
  409f4e:	push   eax
  409f4f:	arpl   WORD PTR [esi+0x17],bp
  409f52:	xchg   esi,eax
  409f53:	cli    
  409f54:	cmp    eax,0x3da5a798
  409f59:	scas   eax,DWORD PTR es:[edi]
  409f5a:	and    BYTE PTR [esp+ecx*1],ch
  409f5d:	rol    BYTE PTR [ecx+0xe],cl
  409f60:	aas    
  409f61:	addr16 mov eax,ds:0x336c
  409f65:	add    DWORD PTR cs:[edx-0x3],eax
  409f69:	jbe    0x409fc5
  409f6b:	xlat   BYTE PTR ds:[ebx]
  409f6c:	pop    eax
  409f6d:	mov    ch,0xa3
  409f6f:	out    dx,eax
  409f70:	xchg   ebx,eax
  409f71:	cmp    eax,0x37d7a4f7
  409f76:	dec    eax
  409f77:	aas    
  409f78:	fstp   QWORD PTR [ebx+0x40e6da74]
  409f7e:	add    ah,BYTE PTR [esi-0x782d450b]
  409f84:	cmc    
  409f85:	jne    0x409fe7
  409f87:	mov    eax,ds:0x41ee1db5
  409f8c:	frstor [ebx]
  409f8e:	(bad)  
  409f8f:	aaa    
  409f90:	mov    eax,0x6fc57c0c
  409f95:	inc    esp
  409f96:	xchg   edx,eax
  409f97:	push   0x6b810e39
  409f9c:	stos   DWORD PTR es:[edi],eax
  409f9d:	sub    BYTE PTR [esi-0x4d],ah
  409fa0:	js     0x40a00a
  409fa2:	dec    edx
  409fa3:	inc    esi
  409fa4:	gs jnp 0x409f9c
  409fa7:	push   ss
  409fa8:	icebp  
  409fa9:	jae    0x409ff4
  409fab:	enter  0x1e21,0xb1
  409faf:	sbb    al,0x6
  409fb1:	jge    0x409fe5
  409fb3:	outs   dx,BYTE PTR ds:[esi]
  409fb4:	scas   al,BYTE PTR es:[edi]
  409fb5:	pop    esp
  409fb6:	inc    eax
  409fb7:	into   
  409fb8:	push   ecx
  409fb9:	dec    eax
  409fba:	or     BYTE PTR [ecx+edi*4-0x63],dh
  409fbe:	shr    BYTE PTR [edi],1
  409fc0:	rcl    ah,0x7e
  409fc3:	push   edx
  409fc4:	mov    ds:0x438e2eaf,al
  409fc9:	sbb    al,0x4c
  409fcb:	pop    edi
  409fcc:	adc    edi,DWORD PTR [edi+esi*4]
  409fcf:	mov    BYTE PTR [eax+0x78],cl
  409fd2:	test   dh,ch
  409fd4:	jge    0x409f86
  409fd6:	xor    DWORD PTR [edx-0x60ab6d89],edi
  409fdc:	sbb    eax,0x99d7c10a
  409fe1:	sahf   
  409fe2:	xchg   edx,eax
  409fe3:	mov    dl,0xe2
  409fe5:	cmp    DWORD PTR [ebp-0x48],ecx
  409fe8:	and    eax,0xd7dc0ec7
  409fed:	out    0xaf,eax
  409fef:	fdiv   DWORD PTR [edi]
  409ff1:	jnp    0x40a022
  409ff3:	or     bl,BYTE PTR [esi-0x16e92cb6]
  409ff9:	sahf   
  409ffa:	and    BYTE PTR [eax+0x33e86cd1],0xec
  40a001:	frstor [esi-0x2c8cb0e2]
  40a007:	push   ecx
  40a008:	mov    eax,ds:0x3403b919
  40a00d:	call   0xf97e9fc2
  40a012:	call   0xc6f6:0xd30a14b6
  40a019:	fild   WORD PTR [esi+0x2b63c1e9]
  40a01f:	jne    0x40a09c
  40a021:	jno    0x409fe8
  40a023:	and    al,0x5
  40a025:	xchg   esp,eax
  40a026:	mov    ebp,ebx
  40a028:	stc    
  40a029:	sbb    DWORD PTR [ecx],esi
  40a02b:	adc    esp,DWORD PTR [ebx-0x23]
  40a02e:	mov    ecx,0xcfc721dd
  40a033:	sbb    edi,ebp
  40a035:	cmp    eax,0x4383e828
  40a03a:	lahf   
  40a03b:	adc    DWORD PTR [edx+0x2c],ecx
  40a03e:	in     eax,dx
  40a03f:	loopne 0x40a0a2
  40a041:	ss jmp 0x40a0b6
  40a044:	inc    eax
  40a045:	pop    eax
  40a046:	push   eax
  40a047:	inc    eax
  40a048:	or     DWORD PTR [edx-0x54f5b5b3],esi
  40a04e:	jo     0x40a007
  40a050:	push   eax
  40a051:	(bad)  
  40a052:	mov    esi,0x762e6a93
  40a057:	pop    edi
  40a058:	fwait
  40a059:	mov    dl,0xcc
  40a05b:	cld    
  40a05c:	test   al,0xa7
  40a05e:	das    
  40a05f:	loopne 0x40a0a5
  40a061:	or     al,0x3f
  40a063:	inc    ecx
  40a064:	lea    eax,[ebp+0x70cb1c8b]
  40a06a:	ss (bad) 
  40a06c:	sar    DWORD PTR [eax],cl
  40a06e:	icebp  
  40a06f:	repz and al,0x57
  40a072:	and    ebx,DWORD PTR [edi-0x79]
  40a075:	or     edx,DWORD PTR [edx+0xd456186]
  40a07b:	pop    edx
  40a07c:	call   0x974e6bf3
  40a081:	dec    esp
  40a082:	or     bl,BYTE PTR [ecx-0x65]
  40a085:	fmul   DWORD PTR [eax+0x29]
  40a088:	mov    dl,0xf
  40a08a:	push   es
  40a08b:	mov    ds:0x4eb880e8,al
  40a090:	lock popf 
  40a092:	add    DWORD PTR [ebx],ebp
  40a094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a095:	xchg   edi,eax
  40a096:	adc    bl,BYTE PTR ds:0x64660f8f
  40a09c:	shl    DWORD PTR [ecx-0x4a],cl
  40a09f:	sub    ecx,DWORD PTR [eax+ecx*1-0x5e]
  40a0a3:	or     BYTE PTR [ebx-0x43cf9f7e],0xaa
  40a0aa:	inc    edx
  40a0ab:	pop    ebp
  40a0ac:	ins    BYTE PTR es:[edi],dx
  40a0ad:	pop    ds
  40a0ae:	add    bh,dh
  40a0b0:	push   0x75
  40a0b2:	dec    ebp
  40a0b3:	clc    
  40a0b4:	fnstsw WORD PTR [edi+edi*4+0xf]
  40a0b8:	pop    ss
  40a0b9:	shl    BYTE PTR [edx-0x7e],0xf
  40a0bd:	call   0xc066:0x70b5d2b7
  40a0c4:	call   0xbadb2001
  40a0c9:	add    DWORD PTR [ebx+0x55dc5985],ecx
  40a0cf:	pop    esi
  40a0d0:	out    dx,al
  40a0d1:	adc    DWORD PTR [ecx-0x6b],edi
  40a0d4:	add    al,BYTE PTR [edi+0x64]
  40a0d7:	and    cl,BYTE PTR [ebx+0x41]
  40a0da:	xlat   BYTE PTR ds:[ebx]
  40a0db:	and    BYTE PTR [ebx-0x11b4eca3],dl
  40a0e1:	pop    ss
  40a0e2:	push   es
  40a0e3:	push   0xc0acedba
  40a0e8:	mov    BYTE PTR [edi-0x4f],ah
  40a0eb:	push   esi
  40a0ec:	repnz and BYTE PTR [edx+0x51],0xac
  40a0f1:	fdivr  QWORD PTR [edi]
  40a0f3:	dec    ebx
  40a0f4:	mov    edi,0x3d799f19
  40a0f9:	fidivr DWORD PTR [ebp-0x43]
  40a0fc:	inc    DWORD PTR [eax-0x29]
  40a0ff:	xchg   ecx,eax
  40a100:	sbb    BYTE PTR [eax-0x54],bl
  40a103:	pushf  
  40a104:	sub    bl,dl
  40a106:	sub    DWORD PTR [eax],edx
  40a108:	and    BYTE PTR [ecx+0x703c63a3],bl
  40a10e:	je     0x40a176
  40a110:	dec    esp
  40a111:	xchg   esp,eax
  40a112:	add    edx,0x44
  40a115:	inc    ebp
  40a116:	aad    0x6b
  40a118:	aam    0x11
  40a11a:	pop    esp
  40a11b:	repnz leave 
  40a11d:	mov    cl,0xad
  40a11f:	dec    edx
  40a120:	std    
  40a121:	sbb    eax,DWORD PTR [edx-0x31]
  40a124:	call   0x446792b1
  40a129:	js     0x40a189
  40a12b:	fcomi  st,st(4)
  40a12d:	fucom  st(1)
  40a12f:	into   
  40a130:	mov    dh,0xfa
  40a132:	and    al,0xec
  40a134:	mov    bh,0x15
  40a136:	dec    esi
  40a137:	push   0xb0970906
  40a13c:	inc    BYTE PTR [eax+0x3d]
  40a13f:	daa    
  40a140:	push   esp
  40a141:	mov    eax,0xc8a508ab
  40a146:	cmp    DWORD PTR [edx-0x635c0da6],ebx
  40a14c:	pop    edx
  40a14d:	xor    eax,0xc08b28c2
  40a152:	xchg   esi,eax
  40a153:	or     DWORD PTR [ecx+0x7f],0x45067f9
  40a15a:	jo     0x40a11f
  40a15c:	jmp    0xf3cd45e0
  40a161:	jno    0x40a0fe
  40a163:	xchg   esi,eax
  40a164:	ins    BYTE PTR es:[edi],dx
  40a165:	lds    ebp,FWORD PTR [ebx+0xb7f8bae]
  40a16b:	(bad)  
  40a16c:	pop    ebp
  40a16d:	xchg   edi,eax
  40a16e:	xor    al,0xe
  40a170:	rcr    BYTE PTR [esi-0x5f],1
  40a173:	shl    BYTE PTR [eax],0x1c
  40a176:	push   ebp
  40a177:	or     al,BYTE PTR [ebx+0x6a131aa2]
  40a17d:	mov    ah,0xd5
  40a17f:	push   eax
  40a180:	xor    ch,dh
  40a182:	xchg   esi,eax
  40a183:	bound  esp,QWORD PTR [edx+0x6a]
  40a186:	pop    esi
  40a187:	mov    ecx,0xb1ea9be9
  40a18c:	or     esi,esp
  40a18e:	mov    al,0x9e
  40a190:	cmp    al,0x36
  40a192:	sub    DWORD PTR [esi+0x1b],0xfa47ec63
  40a199:	adc    dl,BYTE PTR [ebx+0x5c78bcdb]
  40a19f:	dec    esi
  40a1a0:	pop    esp
  40a1a1:	pop    esi
  40a1a2:	xchg   DWORD PTR [ebx],ebx
  40a1a4:	sbb    ecx,0x6d
  40a1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a8:	shl    BYTE PTR [eax+eiz*2],1
  40a1ab:	sub    ecx,DWORD PTR [edx+0x335b36bf]
  40a1b1:	addr16 popf 
  40a1b3:	jmp    0x728249a8
  40a1b8:	xor    al,0x3
  40a1ba:	sti    
  40a1bb:	call   0x80be:0x2e36579e
  40a1c2:	je     0x40a164
  40a1c4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a1c6:	jl     0x40a177
  40a1c8:	jns    0x40a168
  40a1ca:	test   al,0x1f
  40a1cd:	jmp    0x4575:0x776a867a
  40a1d4:	jne    0x40a253
  40a1d6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a1d8:	addr16 inc ebp
  40a1da:	push   edx
  40a1db:	retf   0x42c1
  40a1de:	mov    ?,WORD PTR [ebp-0x360ff864]
  40a1e4:	or     al,0x54
  40a1e6:	cmp    cl,BYTE PTR [ecx-0x1ce52ac4]
  40a1ec:	test   eax,0xf0c37f87
  40a1f1:	mov    al,ds:0x325ef057
  40a1f6:	sub    DWORD PTR [edi],esp
  40a1f8:	mov    ah,0xeb
  40a1fa:	jnp    0x40a1b8
  40a1fc:	stos   BYTE PTR es:[edi],al
  40a1fd:	shr    DWORD PTR [edi+0x56],0x23
  40a201:	retf   
  40a202:	fist   DWORD PTR [ebx-0x14a259d1]
  40a208:	sbb    eax,DWORD PTR [eax-0x15]
  40a20b:	sbb    ecx,edi
  40a20d:	sti    
  40a20e:	or     DWORD PTR [ebx],ecx
  40a210:	mov    edx,0x8d94620f
  40a215:	mov    ch,0x89
  40a217:	mov    al,0xf3
  40a219:	push   cs
  40a21a:	jp     0x40a22c
  40a21c:	jmp    FWORD PTR es:[edx]
  40a21f:	dec    ebx
  40a220:	xchg   esi,eax
  40a221:	pop    es
  40a222:	push   edi
  40a223:	jbe    0x40a22e
  40a225:	mov    ebp,0x6183a74b
  40a22a:	sar    DWORD PTR [ebp-0x6dc1381],cl
  40a230:	repnz cdq 
  40a232:	fwait
  40a233:	add    eax,DWORD PTR [ebx+0x61]
  40a236:	sar    BYTE PTR [ebp-0x7af5b90c],1
  40a23c:	mov    dh,0xb9
  40a23e:	inc    edx
  40a23f:	xchg   edx,eax
  40a240:	aaa    
  40a241:	loop   0x40a2ba
  40a243:	and    ah,bl
  40a245:	adc    BYTE PTR ds:0x810382f9,al
  40a24b:	lds    ecx,FWORD PTR [eax]
  40a24d:	jp     0x40a2a4
  40a24f:	pop    es
  40a250:	mov    esi,DWORD PTR [esp+esi*8-0x27]
  40a254:	dec    ebp
  40a255:	push   edx
  40a256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a257:	dec    ecx
  40a258:	pop    edx
  40a259:	out    0x69,al
  40a25b:	lock sub DWORD PTR [ebp+0x4781e535],ecx
  40a262:	shl    BYTE PTR ds:0xc4d99ce4,cl
  40a268:	aas    
  40a269:	out    dx,al
  40a26a:	add    edi,DWORD PTR [esi-0x46c8a0ef]
  40a270:	lock (bad) 
  40a272:	xchg   ebp,eax
  40a273:	test   eax,0xf84d828c
  40a278:	sbb    BYTE PTR [edx+0x8],bl
  40a27b:	jp     0x40a2f6
  40a27d:	lods   eax,DWORD PTR ds:[esi]
  40a27e:	(bad)  
  40a27f:	jae    0x40a27d
  40a281:	daa    
  40a282:	sar    BYTE PTR ss:[ecx+0x5f],1
  40a286:	cmp    DWORD PTR ds:0x442b66a3,ebx
  40a28c:	inc    ebx
  40a28d:	mov    esi,0xca5270f3
  40a292:	pop    esi
  40a293:	aaa    
  40a294:	and    al,dl
  40a296:	les    ebp,FWORD PTR [esi]
  40a298:	dec    esi
  40a299:	mul    DWORD PTR [edi-0x527956d]
  40a29f:	push   edi
  40a2a0:	and    di,WORD PTR [edi]
  40a2a3:	dec    ebx
  40a2a4:	cmp    ah,bl
  40a2a6:	xchg   ebx,eax
  40a2a7:	mov    BYTE PTR [eax+0x27],0x48
  40a2ab:	adc    BYTE PTR cs:[edx+0x78dd3ce1],dl
  40a2b2:	mov    ebp,0xedfe8682
  40a2b7:	mov    BYTE PTR [ebp+0x5d],ah
  40a2ba:	stos   BYTE PTR es:[edi],al
  40a2bb:	lea    edx,[edi+ebx*1-0x40]
  40a2bf:	repz (bad) 
  40a2c1:	fcomp  QWORD PTR [esi]
  40a2c3:	lock (bad) 
  40a2c5:	fist   DWORD PTR [edx+0x2d]
  40a2c8:	xchg   edx,eax
  40a2c9:	inc    edx
  40a2ca:	shr    dh,0xde
  40a2cd:	inc    di
  40a2cf:	loope  0x40a277
  40a2d1:	in     al,dx
  40a2d2:	stos   BYTE PTR es:[edi],al
  40a2d3:	mov    al,ds:0x48a0b2d
  40a2d8:	loop   0x40a2c7
  40a2da:	out    dx,al
  40a2db:	adc    eax,0xd3065f74
  40a2e0:	ins    BYTE PTR es:[edi],dx
  40a2e1:	push   ebp
  40a2e2:	xchg   edx,eax
  40a2e3:	xor    BYTE PTR [eax+0x19017c8a],bh
  40a2e9:	sbb    edx,0x15e3fc7b
  40a2ef:	sar    DWORD PTR [ecx-0x61],1
  40a2f2:	pop    ebp
  40a2f3:	(bad)  
  40a2f4:	jecxz  0x40a310
  40a2f6:	in     al,0x28
  40a2f8:	cmp    DWORD PTR [ebx+0x31],esi
  40a2fb:	inc    ebp
  40a2fc:	jle    0x40a281
  40a2fe:	dec    esp
  40a2ff:	fwait
  40a300:	add    edx,DWORD PTR ds:0xcdc042c0
  40a306:	inc    eax
  40a307:	push   esp
  40a308:	add    DWORD PTR [esi-0x27a97ddb],0x5e
  40a30f:	aam    0xd1
  40a311:	sub    bl,0x4c
  40a314:	es or  al,0x1a
  40a317:	(bad)  
  40a318:	fwait
  40a319:	loopne 0x40a2ee
  40a31b:	xlat   BYTE PTR ds:[ebx]
  40a31c:	xchg   ebx,eax
  40a31d:	sbb    ecx,DWORD PTR [eax-0x451d7597]
  40a323:	pop    ecx
  40a324:	scas   al,BYTE PTR es:[edi]
  40a325:	sub    DWORD PTR [edx+0x56],edx
  40a328:	icebp  
  40a329:	push   ss
  40a32a:	cmc    
  40a32b:	iret   
  40a32c:	sbb    cl,BYTE PTR [esi-0x36]
  40a32f:	pushf  
  40a330:	stos   BYTE PTR es:[edi],al
  40a331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a332:	sar    bl,0x14
  40a335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a336:	or     DWORD PTR [edi],0x44
  40a339:	out    dx,eax
  40a33a:	pop    esp
  40a33b:	dec    edi
  40a33c:	add    ah,BYTE PTR [ebp-0x297b950c]
  40a342:	inc    eax
  40a343:	jle    0x40a355
  40a345:	pop    es
  40a346:	push   ds
  40a347:	xchg   esi,eax
  40a348:	call   0xb4454c73
  40a34d:	nop
  40a34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34f:	sbb    dh,cl
  40a351:	js     0x40a342
  40a353:	sub    BYTE PTR [edx+0x5e],ah
  40a356:	adc    eax,0xfd4f7186
  40a35b:	cmp    al,0x9e
  40a35d:	xchg   ebx,eax
  40a35e:	in     eax,dx
  40a35f:	ds sti 
  40a361:	cld    
  40a362:	adc    al,0x3b
  40a364:	add    al,0x6a
  40a366:	cmp    edx,0xffffffa7
  40a369:	lahf   
  40a36a:	cmp    eax,0x4194d045
  40a36f:	cmp    al,0x42
  40a371:	test   DWORD PTR [esi+eiz*8-0x2],ecx
  40a375:	mov    ebp,eax
  40a377:	push   esp
  40a378:	cmp    DWORD PTR [edx-0x6c0e8755],edi
  40a37e:	iret   
  40a37f:	xor    al,0xbe
  40a381:	call   0xf9751c4d
  40a386:	(bad)  [esi+0x33e4f8f]
  40a38c:	dec    esp
  40a38d:	add    ebp,edi
  40a38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a390:	mov    esi,0x1ee8ffc9
  40a395:	xor    al,0x74
  40a397:	mov    cl,0xee
  40a399:	inc    edx
  40a39a:	scas   al,BYTE PTR es:[edi]
  40a39b:	pop    edx
  40a39c:	aaa    
  40a39d:	aaa    
  40a39e:	int3   
  40a39f:	inc    ecx
  40a3a0:	add    BYTE PTR [esp],dl
  40a3a3:	loopne 0x40a3df
  40a3a5:	(bad)  
  40a3a6:	fcomp  QWORD PTR [ebp+0x43]
  40a3a9:	scas   al,BYTE PTR es:[edi]
  40a3aa:	or     ecx,DWORD PTR ds:0x705ea856
  40a3b0:	dec    edx
  40a3b1:	sbb    esi,edi
  40a3b3:	cmp    BYTE PTR [edi-0x1],al
  40a3b6:	xchg   BYTE PTR [edx+edi*2],ah
  40a3b9:	mov    al,ds:0x964d028e
  40a3bf:	xchg   edx,eax
  40a3c0:	hlt    
  40a3c1:	lea    edi,[edi]
  40a3c3:	mov    edi,0xd7cca3c9
  40a3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c9:	dec    ebp
  40a3ca:	push   es
  40a3cb:	push   0xffffffb4
  40a3cd:	daa    
  40a3ce:	js     0x40a390
  40a3d0:	leave  
  40a3d1:	sub    edx,ebp
  40a3d3:	mov    es,WORD PTR [ecx+ecx*2+0x71296e6e]
  40a3da:	cmp    al,0xb5
  40a3dc:	shr    BYTE PTR [ecx+ecx*4],0xbe
  40a3e0:	popa   
  40a3e1:	imul   ecx,DWORD PTR [edi-0x20],0xffffff9f
  40a3e5:	mov    cl,0x32
  40a3e7:	dec    ecx
  40a3e8:	(bad)  
  40a3e9:	in     eax,0x39
  40a3eb:	aam    0xa6
  40a3ed:	sbb    DWORD PTR [edi-0x135713e5],esp
  40a3f3:	dec    edx
  40a3f4:	stc    
  40a3f5:	and    eax,0x2eed3ab0
  40a3fa:	out    dx,eax
  40a3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fc:	xchg   BYTE PTR [ebp+0x42],dh
  40a3ff:	fsub   QWORD PTR [edi+0x70]
  40a402:	pop    ebx
  40a403:	pminub mm3,mm5
  40a406:	mov    ah,0xf2
  40a408:	add    eax,0xcc99952a
  40a40d:	inc    ecx
  40a40e:	adc    DWORD PTR [edi+0x5e],edi
  40a411:	cmp    eax,0x4acbf7d7
  40a416:	cli    
  40a417:	(bad)  
  40a418:	jo     0x40a48e
  40a41a:	cmp    ebp,0xf58d858e
  40a420:	ret    
  40a421:	push   es
  40a422:	or     al,bl
  40a424:	shl    DWORD PTR [edi+eax*8+0x216b8503],0x2b
  40a42c:	prefetch (bad)
  40a42d:	or     eax,0x910303f5
  40a432:	sahf   
  40a433:	and    eax,0x465c93f8
  40a438:	arpl   WORD PTR [edx+0x2],di
  40a43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a43c:	or     BYTE PTR ds:0x71c39fbf,dh
  40a442:	inc    ebp
  40a443:	out    0x94,al
  40a445:	pop    esi
  40a446:	and    dh,bl
  40a448:	stc    
  40a449:	pop    ss
  40a44a:	mov    ecx,0x6eb267b9
  40a44f:	and    eax,0x58be722e
  40a454:	out    0xe4,al
  40a456:	fisub  DWORD PTR [esi]
  40a458:	ret    0x59c5
  40a45b:	pusha  
  40a45c:	dec    ebp
  40a45d:	mov    ah,0x8e
  40a45f:	test   al,0x63
  40a461:	push   edi
  40a462:	jg     0x40a427
  40a464:	push   gs
  40a466:	add    al,0x89
  40a468:	fsubr  QWORD PTR [ecx-0x48d8ef6a]
  40a46e:	fwait
  40a46f:	icebp  
  40a470:	or     esi,DWORD PTR ds:0xc6e27440
  40a476:	push   cs
  40a477:	enter  0x4c20,0x6f
  40a47b:	lea    eax,[eax+0x5d6df91a]
  40a481:	sbb    dl,BYTE PTR [edx]
  40a483:	fistp  DWORD PTR [ebx]
  40a485:	shl    cl,1
  40a487:	test   al,0x9e
  40a489:	cwde   
  40a48a:	mov    edx,0x69e37271
  40a48f:	outs   dx,DWORD PTR ds:[esi]
  40a490:	or     eax,0x565087c2
  40a495:	add    edi,DWORD PTR [ecx+edi*2]
  40a498:	(bad)  
  40a499:	mov    bh,0x89
  40a49b:	sub    BYTE PTR [ebx],bl
  40a49d:	ss pop ebx
  40a49f:	jg     0x40a4e2
  40a4a1:	lahf   
  40a4a2:	in     eax,0xc8
  40a4a4:	push   ebp
  40a4a5:	xlat   BYTE PTR ds:[ebx]
  40a4a6:	cmp    al,0x49
  40a4a8:	jne    0x40a437
  40a4aa:	sub    DWORD PTR [ebp+0x32],edx
  40a4ad:	jg     0x40a4b1
  40a4af:	inc    esp
  40a4b0:	test   ebp,ebp
  40a4b2:	inc    edi
  40a4b3:	out    0x9e,al
  40a4b5:	mov    al,ds:0xbd539368
  40a4ba:	pop    ecx
  40a4bb:	(bad)  
  40a4bc:	xlat   BYTE PTR ds:[ebx]
  40a4bd:	mov    eax,0xb5a10b96
  40a4c2:	mov    DWORD PTR [edx],edi
  40a4c4:	push   edi
  40a4c5:	fnstsw ax
  40a4c7:	loopne 0x40a4a4
  40a4c9:	xor    BYTE PTR [edx],al
  40a4cb:	pop    ds
  40a4cc:	fdivr  QWORD PTR ds:0x41ae6bf7
  40a4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d3:	sar    bl,1
  40a4d5:	jo     0x40a52a
  40a4d7:	cwde   
  40a4d8:	(bad)  
  40a4d9:	sub    bh,BYTE PTR [eax-0x56e61221]
  40a4df:	pop    edx
  40a4e0:	ret    0x154e
  40a4e3:	push   ebx
  40a4e4:	xor    esi,edi
  40a4e6:	or     al,0xef
  40a4e8:	xor    DWORD PTR [ebx-0x7528f0b0],0xffffffbe
  40a4ef:	mov    al,0xb1
  40a4f1:	repnz test bl,ch
  40a4f4:	add    eax,0xf01ccc43
  40a4f9:	scas   eax,DWORD PTR es:[edi]
  40a4fa:	sahf   
  40a4fb:	mov    bl,0x90
  40a4fd:	sub    al,0x65
  40a4ff:	jle    0x40a566
  40a501:	push   ax
  40a503:	(bad)  
  40a504:	aam    0xbb
  40a506:	pop    eax
  40a507:	pop    edx
  40a508:	add    bl,dh
  40a50a:	jns    0x40a53d
  40a50c:	outs   dx,BYTE PTR ds:[esi]
  40a50d:	mov    al,ch
  40a50f:	icebp  
  40a510:	add    eax,0x6f6e46f4
  40a515:	inc    edx
  40a516:	mov    esi,0x86cf531b
  40a51b:	mov    bh,0xe
  40a51d:	icebp  
  40a51e:	adc    DWORD PTR [edi],ebx
  40a520:	aas    
  40a521:	js     0x40a4b5
  40a523:	jbe    0x40a4e1
  40a525:	add    bh,0xdd
  40a528:	cmp    DWORD PTR [ebx+esi*8],ecx
  40a52b:	stos   BYTE PTR es:[edi],al
  40a52c:	jno    0x40a507
  40a52e:	mov    dl,0x60
  40a530:	sbb    eax,0x61f64011
  40a535:	fsubr  st(7),st
  40a537:	mov    bh,0xc5
  40a539:	sbb    al,dh
  40a53b:	jno    0x40a4c8
  40a53d:	ja     0x40a4da
  40a53f:	cld    
  40a540:	mov    al,BYTE PTR [edx]
  40a542:	inc    ecx
  40a543:	xchg   edx,eax
  40a544:	fcom   DWORD PTR [ebx-0x7f3273f0]
  40a54a:	dec    ebp
  40a54b:	mov    eax,ds:0x7b45bae
  40a550:	nop
  40a551:	pop    ss
  40a552:	out    0xdc,al
  40a554:	inc    edi
  40a555:	scas   al,BYTE PTR es:[edi]
  40a556:	inc    ebp
  40a557:	and    DWORD PTR [edx-0x17a8c70c],ebx
  40a55d:	jns    0x40a544
  40a55f:	sbb    ebx,DWORD PTR ds:0xd296f6ae
  40a565:	je     0x40a5ac
  40a567:	add    esp,ebx
  40a569:	ins    DWORD PTR es:[edi],dx
  40a56a:	adc    bl,BYTE PTR [ebx]
  40a56c:	(bad)  
  40a56d:	mov    esp,0x6a0022d
  40a572:	and    al,0x2
  40a574:	mov    ah,0x8b
  40a576:	(bad)  
  40a577:	pop    esi
  40a578:	xor    dl,dh
  40a57a:	rcl    BYTE PTR [eax+ebx*4-0x6],0x9d
  40a57f:	fistp  QWORD PTR [ebp+0x1]
  40a582:	jo     0x40a536
  40a584:	xchg   ecx,eax
  40a585:	dec    esp
  40a586:	jge    0x40a5e5
  40a588:	jle    0x40a5f9
  40a58a:	mov    dh,0x97
  40a58c:	push   cs
  40a58d:	test   BYTE PTR [edi+esi*2],0x2a
  40a591:	enter  0xa5f6,0x37
  40a595:	icebp  
  40a596:	arpl   WORD PTR [ebx],bp
  40a598:	mov    ebp,?
  40a59a:	js     0x40a5d5
  40a59c:	sbb    dl,BYTE PTR [edx+esi*2+0x6b6bff74]
  40a5a3:	push   edx
  40a5a4:	jge    0x40a5a8
  40a5a6:	add    dl,BYTE PTR [edx-0x79e1d3bd]
  40a5ac:	mov    ecx,0xfc0e364
  40a5b1:	sbb    DWORD PTR [ecx],ebp
  40a5b3:	ja     0x40a572
  40a5b5:	aam    0x8b
  40a5b7:	lock ds jno 0x40a5ad
  40a5bb:	mov    cs,eax
  40a5bd:	mov    bl,0x2
  40a5bf:	cmp    esp,ebp
  40a5c1:	aam    0x69
  40a5c3:	scas   eax,DWORD PTR es:[edi]
  40a5c4:	jno    0x40a550
  40a5c6:	mov    bl,0x72
  40a5c8:	or     BYTE PTR [edi],ch
  40a5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5cb:	xchg   edx,eax
  40a5cc:	pop    ebp
  40a5cd:	dec    esi
  40a5ce:	pop    esp
  40a5cf:	popa   
  40a5d0:	arpl   WORD PTR [esi+0x4],bp
  40a5d3:	inc    esp
  40a5d4:	mov    edi,0xdee668bc
  40a5d9:	mov    eax,ds:0x4ba51d42
  40a5de:	inc    edi
  40a5df:	xor    BYTE PTR [eax-0x7c],ch
  40a5e2:	push   0x36
  40a5e4:	adc    DWORD PTR [ecx],0xafde77ce
  40a5ea:	int    0x23
  40a5ec:	imul   ecx,DWORD PTR [esi+ebx*1],0xd4204d3a
  40a5f3:	or     dh,BYTE PTR [edx+ebx*1+0x3bf89897]
  40a5fa:	imul   ecx,DWORD PTR [edi],0x92f7d5f7
  40a600:	mov    edx,0x4a7edfb
  40a605:	ret    0x6e6b
  40a608:	loop   0x40a679
  40a60a:	mov    ds:0x5d9ae448,eax
  40a60f:	jno    0x40a673
  40a611:	in     al,dx
  40a612:	push   esp
  40a613:	jg     0x40a5dd
  40a615:	jno    0x40a655
  40a617:	sti    
  40a618:	lds    esi,FWORD PTR [edi]
  40a61a:	jecxz  0x40a62e
  40a61c:	jmp    0xf91e:0xe646c689
  40a623:	and    cl,dl
  40a625:	outs   dx,BYTE PTR ds:[esi]
  40a626:	aas    
  40a627:	pop    edx
  40a628:	xchg   esi,eax
  40a629:	inc    esp
  40a62a:	retf   0xfae4
  40a62d:	push   ebp
  40a62e:	adc    al,0x1a
  40a630:	call   0xca95:0xa85e641d
  40a637:	pop    eax
  40a638:	outs   dx,DWORD PTR ds:[esi]
  40a639:	and    al,0xb2
  40a63b:	xor    ecx,DWORD PTR [esi+0x5694666c]
  40a641:	ret    0xdd12
  40a644:	dec    ecx
  40a645:	outs   dx,DWORD PTR ds:[esi]
  40a646:	xchg   BYTE PTR [ebx],ah
  40a648:	lods   al,BYTE PTR ds:[esi]
  40a649:	dec    esp
  40a64a:	scas   eax,DWORD PTR es:[edi]
  40a64b:	fmul   QWORD PTR [edi]
  40a64d:	ss ss cmp eax,0xc69003e2
  40a654:	push   0xf86c7e51
  40a659:	pop    es
  40a65a:	lds    ecx,FWORD PTR [ecx+0x6f]
  40a65d:	push   cs
  40a65e:	mov    esp,0x1f836c2
  40a663:	mov    dh,0x58
  40a665:	mov    ebp,DWORD PTR [esi+0x30]
  40a668:	lods   al,BYTE PTR ds:[esi]
  40a669:	mov    bl,0xd8
  40a66b:	mov    cl,0x28
  40a66d:	pop    eax
  40a66e:	push   ds
  40a66f:	sbb    ch,BYTE PTR [eax-0xaa02327]
  40a675:	cmp    dh,cl
  40a677:	push   ds
  40a678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a679:	or     BYTE PTR [edi-0x79fbca63],cl
  40a67f:	test   DWORD PTR [edx],edx
  40a681:	cmp    eax,0xe59d60d8
  40a686:	dec    ebx
  40a687:	xor    BYTE PTR [edi-0x3c516432],dh
  40a68d:	(bad)
  40a691:	mov    BYTE PTR [eax-0x6861c937],ch
  40a697:	loope  0x40a6fc
  40a699:	inc    edx
  40a69a:	mov    dl,0xbe
  40a69c:	sbb    esi,edx
  40a69e:	fwait
  40a69f:	cld    
  40a6a0:	addr16 jg 0x40a720
  40a6a3:	push   0xf
  40a6a5:	imul   ebp,DWORD PTR [eax+0x5f],0x1da7e2ed
  40a6ac:	retf   0xf913
  40a6af:	or     al,0x9
  40a6b1:	ds nop
  40a6b3:	jp     0x40a705
  40a6b5:	mov    DWORD PTR [ebp+0x30975c2],ebx
  40a6bb:	outs   dx,DWORD PTR ds:[esi]
  40a6bc:	in     al,0x23
  40a6be:	dec    edi
  40a6bf:	popf   
  40a6c0:	mov    edx,DWORD PTR [ecx+eax*1]
  40a6c3:	jmp    0x40a6f0
  40a6c5:	ror    DWORD PTR [edx],0x7d
  40a6c8:	aad    0x19
  40a6ca:	pop    eax
  40a6cb:	loop   0x40a70a
  40a6cd:	pop    ds
  40a6ce:	aam    0x44
  40a6d0:	bts    DWORD PTR [esi-0x57],ebx
  40a6d4:	pop    esp
  40a6d5:	or     eax,0xd541d88
  40a6da:	fwait
  40a6db:	into   
  40a6dc:	pop    eax
  40a6dd:	add    DWORD PTR [ebx],ecx
  40a6df:	adc    DWORD PTR [esi],eax
  40a6e1:	loope  0x40a740
  40a6e3:	ror    BYTE PTR [esi+0x50],cl
  40a6e6:	cmp    DWORD PTR [edx+eiz*1-0x41],edi
  40a6ea:	mov    dh,0xeb
  40a6ec:	das    
  40a6ed:	inc    ecx
  40a6ee:	inc    edi
  40a6ef:	inc    ebx
  40a6f0:	lock jb 0x40a72c
  40a6f3:	test   eax,0x9d304b4f
  40a6f8:	adc    DWORD PTR [ecx-0x23],eax
  40a6fb:	push   es
  40a6fc:	sbb    BYTE PTR [ebp-0x1eb958fd],dh
  40a702:	sbb    dl,BYTE PTR [edi-0x5a]
  40a705:	dec    esi
  40a706:	cli    
  40a707:	push   eax
  40a708:	push   0x5e
  40a70a:	dec    esp
  40a70b:	jmp    0xdd4507aa
  40a710:	pop    esp
  40a711:	or     DWORD PTR [edx],edi
  40a713:	add    edx,esp
  40a715:	in     al,0x99
  40a717:	fdivr  QWORD PTR [esi+0x6c]
  40a71a:	(bad)
  40a71d:	je     0x40a744
  40a71f:	icebp  
  40a720:	js     0x40a70c
  40a722:	out    0x22,al
  40a724:	mov    eax,ds:0x1586609d
  40a729:	mov    ecx,0x4c585f3b
  40a72e:	inc    esi
  40a72f:	mov    ch,0x71
  40a731:	or     DWORD PTR [ecx],edx
  40a733:	mov    dh,0xdc
  40a735:	fsubr  st(4),st
  40a737:	out    dx,al
  40a738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a739:	cmp    cl,BYTE PTR [edx-0x7a]
  40a73c:	or     DWORD PTR [esi],edi
  40a73e:	pop    ebp
  40a740:	xor    eax,0xda233601
  40a745:	dec    ebx
  40a746:	stos   BYTE PTR es:[edi],al
  40a747:	(bad)  
  40a749:	or     BYTE PTR [ebp-0x67cf0dc8],ah
  40a74f:	adc    esp,edi
  40a751:	punpckhbw mm5,QWORD PTR [ebp-0x415b4dcb]
  40a758:	and    DWORD PTR [ecx+eiz*4-0x25],eax
  40a75c:	(bad)
  40a75f:	int3   
  40a760:	jo     0x40a7a6
  40a762:	sub    BYTE PTR [eax-0x7ddd7684],bl
  40a768:	push   ebx
  40a769:	shl    BYTE PTR [ebx-0x6b],cl
  40a76c:	(bad)
  40a76f:	sub    edx,eax
  40a771:	cmp    edi,DWORD PTR [ebx-0x5f]
  40a774:	enter  0x7aeb,0x9
  40a778:	jecxz  0x40a7db
  40a77a:	dec    esi
  40a77b:	pop    ds
  40a77c:	add    esp,edi
  40a77e:	fnstsw WORD PTR [ebp+esi*1+0x63280833]
  40a785:	sahf   
  40a786:	and    eax,DWORD PTR [edi]
  40a788:	mov    eax,0x7a63c5be
  40a78d:	push   ss
  40a78e:	or     al,0x14
  40a790:	divps  xmm5,XMMWORD PTR [esi-0x3a27694]
  40a797:	and    ch,0xd9
  40a79a:	dec    ecx
  40a79b:	out    dx,eax
  40a79c:	rcr    BYTE PTR [ebp-0x1b],0x54
  40a7a0:	push   es
  40a7a1:	cli    
  40a7a2:	aas    
  40a7a3:	retf   0xc09b
  40a7a6:	sub    BYTE PTR [ebx],al
  40a7a8:	call   0xdf47:0x3051b374
  40a7af:	jns    0x40a7f6
  40a7b1:	lods   al,BYTE PTR ds:[esi]
  40a7b2:	stos   DWORD PTR es:[edi],eax
  40a7b3:	pop    ss
  40a7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b5:	ss xchg ebp,eax
  40a7b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b8:	imul   esp,DWORD PTR ds:0x4983ff03,0x51
  40a7bf:	pop    esp
  40a7c0:	in     al,0x0
  40a7c2:	and    ah,bh
  40a7c4:	imul   ebx,ebx,0x7a
  40a7c7:	jecxz  0x40a7df
  40a7c9:	pusha  
  40a7ca:	mov    esp,0x236dde00
  40a7cf:	xor    bh,BYTE PTR [edx]
  40a7d1:	ins    BYTE PTR es:[edi],dx
  40a7d2:	(bad)  
  40a7d3:	mov    eax,0x903335d5
  40a7d8:	iret   
  40a7d9:	out    0x10,al
  40a7db:	popa   
  40a7dc:	mov    edx,0x9afbd96e
  40a7e1:	shl    BYTE PTR [esi],1
  40a7e3:	push   edi
  40a7e4:	push   0xd358f95a
  40a7e9:	and    ecx,eax
  40a7eb:	inc    esi
  40a7ec:	push   esp
  40a7ed:	fdivr  DWORD PTR [edx+0x62866a06]
  40a7f3:	ja     0x40a850
  40a7f5:	es (bad) 
  40a7f7:	adc    bh,bh
  40a7f9:	psrad  mm6,QWORD PTR [edx+ecx*4]
  40a7fd:	daa    
  40a7fe:	push   edx
  40a7ff:	xor    al,0xe8
  40a801:	inc    eax
  40a802:	arpl   WORD PTR [edi],di
  40a804:	les    ebp,FWORD PTR [esp+ebx*8-0x9]
  40a808:	xchg   edx,eax
  40a809:	mov    eax,ds:0x2522631a
  40a80e:	pop    esp
  40a80f:	mov    bh,0x0
  40a811:	stc    
  40a812:	mov    al,ds:0x49475ff
  40a817:	dec    esi
  40a818:	mov    ch,0xec
  40a81a:	pop    ds
  40a81b:	xor    ecx,DWORD PTR [esi]
  40a81d:	push   ecx
  40a81e:	sub    edx,esp
  40a820:	xor    bh,BYTE PTR [ebx+0x1e]
  40a823:	mov    ds:0x2fb48e8f,al
  40a828:	mov    fs,WORD PTR [edx]
  40a82a:	adc    edi,eax
  40a82c:	xchg   esp,eax
  40a82d:	cwde   
  40a82e:	inc    ebx
  40a82f:	sbb    eax,0xcb7cb228
  40a834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a835:	sub    eax,DWORD PTR [esi+ecx*4]
  40a838:	sahf   
  40a839:	std    
  40a83a:	cmc    
  40a83b:	arpl   WORD PTR [esi],bx
  40a83d:	int3   
  40a83e:	les    eax,FWORD PTR [esi+0x27]
  40a841:	test   DWORD PTR [ecx+esi*1-0x16],esp
  40a845:	in     al,dx
  40a846:	bound  eax,QWORD PTR [ecx]
  40a848:	dec    esi
  40a849:	sub    eax,0x3f9d9160
  40a84e:	or     edx,DWORD PTR [ebx+0x29e78baa]
  40a854:	stc    
  40a855:	call   0xfa4b:0xa32b8833
  40a85c:	leave  
  40a85d:	rcl    DWORD PTR [eax+0x4f],0x18
  40a861:	call   0x99de97e
  40a866:	add    bh,BYTE PTR [eax+0x6c]
  40a869:	push   0x3bc70e69
  40a86e:	retf   0xa9c5
  40a871:	btr    eax,esp
  40a874:	das    
  40a875:	loopne 0x40a806
  40a877:	jns    0x40a89f
  40a879:	mov    bl,0x79
  40a87b:	push   0x55c762d1
  40a880:	test   al,0x3d
  40a882:	xor    ch,BYTE PTR [ebx-0x5f53641a]
  40a888:	xchg   edx,eax
  40a889:	sub    al,0x22
  40a88b:	cwde   
  40a88c:	add    eax,DWORD PTR [ebp+0x4c3437ee]
  40a892:	inc    eax
  40a893:	lods   eax,DWORD PTR ds:[esi]
  40a894:	pop    esi
  40a895:	xchg   esp,eax
  40a896:	add    DWORD PTR [ecx+0x7f8f3023],esi
  40a89c:	push   esp
  40a89d:	add    eax,0x21b9c44b
  40a8a2:	mov    esi,0x34eb61c9
  40a8a7:	mov    esp,0x16bf9d99
  40a8ac:	inc    ebp
  40a8ad:	retf   
  40a8ae:	xor    al,0xf0
  40a8b0:	bound  ebx,QWORD PTR [ebp-0x15]
  40a8b3:	les    ebx,FWORD PTR [ebx-0x103b67a7]
  40a8b9:	ins    DWORD PTR es:[edi],dx
  40a8ba:	adc    edi,DWORD PTR [ecx-0x71]
  40a8bd:	arpl   WORD PTR [esi-0x3b],dx
  40a8c0:	lock test DWORD PTR [edi+0x623d0c84],ebp
  40a8c7:	push   ebp
  40a8c8:	stos   DWORD PTR es:[edi],eax
  40a8c9:	adc    eax,0x65d26a0e
  40a8ce:	adc    BYTE PTR [eax+0x39],ch
  40a8d1:	jl     0x40a8e3
  40a8d3:	ror    ch,1
  40a8d5:	or     cl,BYTE PTR [edx]
  40a8d7:	(bad)  
  40a8d8:	mov    cl,0xc4
  40a8da:	xchg   esi,eax
  40a8db:	(bad)  
  40a8dc:	and    DWORD PTR [edx-0xf],edx
  40a8df:	xchg   edx,eax
  40a8e0:	jo     0x40a905
  40a8e2:	jmp    0x8629:0x75f0fe54
  40a8e9:	into   
  40a8ea:	add    al,0x7d
  40a8ec:	sub    ch,dh
  40a8ee:	sbb    edi,DWORD PTR [ebx]
  40a8f0:	loop   0x40a957
  40a8f2:	stc    
  40a8f3:	jnp    0x40a8d6
  40a8f5:	mov    dl,0x23
  40a8f7:	retf   0x5d6d
  40a8fa:	mov    esp,0xda002ee4
  40a8ff:	scas   al,BYTE PTR es:[edi]
  40a900:	nop
  40a901:	push   edx
  40a902:	pop    ebx
  40a903:	jns    0x40a8a8
  40a905:	adc    DWORD PTR [eax],0xf5063a68
  40a90b:	stc    
  40a90c:	pop    es
  40a90d:	stos   BYTE PTR es:[edi],al
  40a90e:	add    al,0x14
  40a910:	mov    ds:0x6249a7e1,eax
  40a915:	jae    0x40a8aa
  40a917:	repnz aam 0xf9
  40a91a:	rcl    BYTE PTR [edx+0x28],0x1c
  40a91e:	cmp    BYTE PTR [edx-0x1d122da8],0x49
  40a925:	xchg   esp,eax
  40a926:	sub    dl,0xa5
  40a929:	cmp    eax,0x973e6866
  40a92e:	js     0x40a9a8
  40a930:	pop    esi
  40a931:	pop    edx
  40a932:	scas   eax,DWORD PTR es:[edi]
  40a933:	cwde   
  40a934:	pop    ds
  40a935:	sbb    esp,DWORD PTR [ecx]
  40a937:	push   ebx
  40a938:	or     ecx,eax
  40a93a:	rcr    eax,1
  40a93c:	push   ebx
  40a93d:	aas    
  40a93e:	stos   DWORD PTR es:[edi],eax
  40a93f:	jae    0x40a946
  40a941:	imul   ebx,DWORD PTR [ecx],0xffffff8b
  40a944:	cwde   
  40a945:	mov    dh,0x5c
  40a947:	cmp    DWORD PTR [ecx+0x54cecb79],ebx
  40a94d:	mov    edi,DWORD PTR [esi+0xf694de1]
  40a953:	mov    al,ds:0x13829905
  40a958:	cwde   
  40a959:	xchg   al,bh
  40a95b:	pop    ebp
  40a95c:	add    al,0xe3
  40a95e:	and    edx,DWORD PTR [esi]
  40a960:	dec    esp
  40a961:	push   ebp
  40a962:	xchg   edi,eax
  40a963:	xchg   ebp,eax
  40a964:	call   0xd9e3:0x7444f07a
  40a96b:	jmp    0xf39c:0x6be3a7a
  40a972:	ins    BYTE PTR es:[edi],dx
  40a973:	leave  
  40a974:	and    ebp,DWORD PTR [edx+0x67]
  40a977:	xor    eax,0x2eec4ae5
  40a97c:	(bad)  
  40a97d:	jle    0x40a91c
  40a97f:	ins    BYTE PTR es:[edi],dx
  40a980:	xor    esi,0x9e96d44d
  40a986:	ja     0x40a9e5
  40a988:	sub    bh,BYTE PTR [ebp-0x67bcdb1]
  40a98e:	imul   BYTE PTR [edx-0x29497565]
  40a994:	xchg   esi,eax
  40a995:	add    eax,0xa63efb99
  40a99a:	sbb    eax,DWORD PTR ds:0xff73e7f4
  40a9a0:	sub    DWORD PTR [edx-0x36dbb383],0xc9a8b892
  40a9aa:	push   edi
  40a9ab:	popf   
  40a9ac:	pop    ebx
  40a9ad:	test   eax,0x4ab6916a
  40a9b2:	aaa    
  40a9b3:	shl    BYTE PTR [ebx],0xad
  40a9b6:	mov    WORD PTR [ebx],?
  40a9b8:	dec    edx
  40a9b9:	adc    al,0xea
  40a9bb:	push   ebp
  40a9bc:	fdiv   DWORD PTR [edx+0x7bd8f42b]
  40a9c2:	repz mov bh,0x93
  40a9c5:	imul   BYTE PTR [esi+0x454032b7]
  40a9cb:	(bad)  
  40a9cc:	imul   esp,DWORD PTR [ebx],0xe7e135dc
  40a9d2:	(bad)  
  40a9d3:	ins    DWORD PTR es:[edi],dx
  40a9d4:	(bad)  
  40a9d6:	fnstsw ax
  40a9d8:	sbb    BYTE PTR [esi],ah
  40a9da:	pusha  
  40a9db:	adc    esi,DWORD PTR [ebx-0x6e]
  40a9de:	fs mov ch,bh
  40a9e1:	int3   
  40a9e2:	mov    al,0x4b
  40a9e4:	inc    ecx
  40a9e5:	jb     0x40aa47
  40a9e7:	mov    cl,0x7d
  40a9e9:	ins    BYTE PTR es:[edi],dx
  40a9ea:	add    al,BYTE PTR [edx+0x40ce4ddf]
  40a9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f1:	push   es
  40a9f2:	nop
  40a9f3:	push   ss
  40a9f4:	lock cwde 
  40a9f6:	das    
  40a9f7:	stc    
  40a9f8:	into   
  40a9f9:	jne    0x40aa03
  40a9fb:	push   esi
  40a9fc:	aas    
  40a9fd:	(bad)  
  40a9ff:	mov    ds:0x7688b156,al
  40aa04:	jns    0x40a9d9
  40aa06:	daa    
  40aa07:	add    dl,ch
  40aa09:	mov    ch,0x5c
  40aa0b:	lock sbb BYTE PTR [eax],cl
  40aa0e:	bound  ebx,QWORD PTR [ecx-0x12]
  40aa11:	fwait
  40aa12:	adc    DWORD PTR [ebx+0x4e],ebp
  40aa15:	(bad)  
  40aa17:	adc    ah,BYTE PTR [edi+0x65]
  40aa1a:	popf   
  40aa1b:	push   0x6ac0b0c5
  40aa20:	data16 add BYTE PTR [eax+0x50],0xcf
  40aa25:	inc    esi
  40aa26:	push   esi
  40aa27:	icebp  
  40aa28:	or     eax,0x37bd2e37
  40aa2d:	jle    0x40aa94
  40aa2f:	fsubrp st(7),st
  40aa31:	es jle 0x40a9e2
  40aa34:	es mov cl,0x97
  40aa37:	push   ebx
  40aa38:	test   eax,0x2bdfd17a
  40aa3d:	push   es
  40aa3e:	dec    ebx
  40aa3f:	sub    BYTE PTR [ebx],dl
  40aa41:	and    ah,cl
  40aa43:	mov    esi,DWORD PTR [esi+0x4c]
  40aa46:	xor    BYTE PTR [esi-0x5b87592],al
  40aa4c:	and    edi,DWORD PTR [ebx]
  40aa4e:	sbb    ch,BYTE PTR [edi+0x6e]
  40aa51:	push   edi
  40aa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa53:	dec    edi
  40aa54:	push   0xffffffeb
  40aa56:	lock pop edx
  40aa58:	push   ebp
  40aa59:	cld    
  40aa5a:	mov    dl,0xd6
  40aa5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa5d:	scas   al,BYTE PTR es:[edi]
  40aa5e:	mov    ebx,0x8ccd342f
  40aa63:	repnz test eax,0xb781e6f8
  40aa69:	push   cs
  40aa6a:	and    ah,BYTE PTR ds:0xa99c8cb9
  40aa70:	or     ebx,DWORD PTR [edx]
  40aa72:	out    0x61,eax
  40aa74:	aad    0x57
  40aa76:	ja     0x40aa2d
  40aa78:	mov    ah,0x20
  40aa7a:	int3   
  40aa7b:	in     eax,dx
  40aa7c:	mov    ds:0xb0d3b8e6,eax
  40aa81:	adc    ch,bh
  40aa83:	clc    
  40aa84:	fs pop eax
  40aa86:	add    eax,0xb8051a84
  40aa8b:	push   edi
  40aa8c:	pushf  
  40aa8d:	add    BYTE PTR [eax-0x39],dh
  40aa90:	inc    ebx
  40aa91:	mov    al,0x31
  40aa93:	jp     0x40aa1d
  40aa95:	or     al,bl
  40aa97:	scas   al,BYTE PTR es:[edi]
  40aa98:	daa    
  40aa99:	xor    BYTE PTR ds:0x9513332c,cl
  40aa9f:	add    cl,BYTE PTR [ecx-0x48]
  40aaa2:	adc    DWORD PTR [eax-0x78],0x74849d85
  40aaa9:	popa   
  40aaaa:	xor    ecx,edx
  40aaac:	push   esi
  40aaad:	push   ebp
  40aaae:	cs jns 0x40ab07
  40aab1:	push   ss
  40aab2:	mov    ds:0x6952a39e,al
  40aab7:	loop   0x40aad8
  40aab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaba:	fcmovb st,st(7)
  40aabc:	xchg   ecx,eax
  40aabd:	fwait
  40aabe:	aad    0x17
  40aac0:	iret   
  40aac1:	outs   dx,BYTE PTR ds:[esi]
  40aac2:	out    dx,eax
  40aac3:	aas    
  40aac4:	mov    ebx,0x7121a670
  40aac9:	or     BYTE PTR [ebp-0x41],ah
  40aacc:	jb     0x40aada
  40aace:	jmp    0x4f25:0x7b75ee46
  40aad5:	jg     0x40aac2
  40aad7:	aad    0x71
  40aad9:	mov    fs,ecx
  40aadb:	cmp    eax,0xedb57197
  40aae0:	adc    bh,dh
  40aae2:	pop    ds
  40aae3:	inc    ecx
  40aae4:	js     0x40aa68
  40aae6:	jno    0x40aaa3
  40aae8:	sub    BYTE PTR [ebp-0x2eb09fdf],cl
  40aaee:	lods   al,BYTE PTR ds:[esi]
  40aaef:	cli    
  40aaf0:	cdq    
  40aaf1:	in     eax,0x39
  40aaf3:	aam    0xd8
  40aaf5:	mov    edi,0xed920aa8
  40aafa:	or     esp,edx
  40aafc:	cmp    BYTE PTR [ecx],0xf5
  40aaff:	sbb    eax,0xdbdafa52
  40ab04:	je     0x40aa96
  40ab06:	dec    ebp
  40ab07:	inc    ebx
  40ab08:	jecxz  0x40ab33
  40ab0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab0b:	sahf   
  40ab0c:	jl     0x40ab7f
  40ab0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab0f:	add    BYTE PTR [ebx+0x233e2ba5],al
  40ab15:	add    BYTE PTR ds:0x93c18e4b,al
  40ab1b:	sub    eax,ebx
  40ab1d:	xchg   ecx,eax
  40ab1e:	xchg   ebx,eax
  40ab1f:	mov    ah,0xa7
  40ab21:	mov    al,ds:0x212f537a
  40ab26:	cmp    eax,0x65a5bb6e
  40ab2b:	call   0x54829d82
  40ab30:	in     eax,0x6
  40ab32:	xchg   ebp,eax
  40ab33:	push   0xffffff8c
  40ab35:	or     bl,BYTE PTR [eax]
  40ab37:	fwait
  40ab38:	jmp    0xac931165
  40ab3d:	adc    eax,DWORD PTR [ebx-0x69]
  40ab40:	std    
  40ab41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab42:	sub    DWORD PTR [esi],esp
  40ab44:	fnstsw WORD PTR [ecx-0x15e82285]
  40ab4a:	fnstenv [esi-0x6e41ffcf]
  40ab50:	jb     0x40ab73
  40ab52:	sbb    al,dl
  40ab54:	inc    eax
  40ab55:	fldenv [edi+0x780c304e]
  40ab5b:	and    cl,0x9b
  40ab5e:	sbb    bh,BYTE PTR [ebp-0x45085b8e]
  40ab64:	xchg   esi,eax
  40ab65:	(bad)  
  40ab66:	dec    esi
  40ab67:	jle    0x40abd0
  40ab69:	lahf   
  40ab6a:	ror    ecx,0x7c
  40ab6d:	push   ebp
  40ab6e:	mov    ?,WORD PTR [ebx-0x6c]
  40ab71:	ficomp DWORD PTR [edi-0x44]
  40ab74:	test   ecx,edi
  40ab76:	mov    ebx,0xd2367afa
  40ab7b:	lea    edi,[ecx]
  40ab7d:	(bad)  [ebp-0x5e]
  40ab80:	dec    edx
  40ab81:	add    al,0xfc
  40ab83:	push   cs
  40ab84:	and    BYTE PTR [edi-0x5d],cl
  40ab87:	(bad)  
  40ab88:	push   esp
  40ab89:	and    ebx,ecx
  40ab8b:	fbld   TBYTE PTR ds:0xc894bb23
  40ab91:	jo     0x40ab88
  40ab93:	sbb    BYTE PTR [esi+0x7c6aaa81],dl
  40ab99:	mov    al,bh
  40ab9b:	(bad)  
  40ab9c:	xchg   edx,eax
  40ab9d:	push   ecx
  40ab9e:	sbb    al,bh
  40aba0:	gs pop ss
  40aba2:	sbb    DWORD PTR [edx+0x7e34af6e],esp
  40aba8:	gs mov esi,0xd18cdf9
  40abae:	out    dx,eax
  40abaf:	sti    
  40abb0:	push   ebx
  40abb1:	pop    esi
  40abb2:	xor    dh,BYTE PTR [ecx]
  40abb4:	pop    ds
  40abb5:	sub    ecx,esi
  40abb7:	jl     0x40ac15
  40abb9:	xchg   esp,eax
  40abba:	mov    eax,ds:0x3d4a2360
  40abbf:	jae    0x40abe2
  40abc1:	int3   
  40abc2:	jmp    0x40abae
  40abc4:	leave  
  40abc5:	mov    dh,0x1d
  40abc7:	clc    
  40abc8:	mov    al,0x8b
  40abca:	psrlq  mm3,QWORD PTR gs:[edx]
  40abce:	ficom  DWORD PTR [eax-0x74]
  40abd1:	ins    BYTE PTR es:[edi],dx
  40abd2:	push   0x30
  40abd4:	mov    al,ds:0xac70a7a3
  40abd9:	jo     0x40ac04
  40abdb:	lock xchg ebx,eax
  40abdd:	jmp    0xaf80d8fc
  40abe2:	push   cs
  40abe3:	test   DWORD PTR [ebx+0x7db21319],edi
  40abe9:	mov    bh,BYTE PTR [esi]
  40abeb:	into   
  40abec:	jp     0x40ac46
  40abee:	popf   
  40abef:	fist   DWORD PTR [eax]
  40abf1:	icebp  
  40abf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf3:	aam    0x3e
  40abf5:	mov    ss,WORD PTR gs:[esi+0x78]
  40abf9:	adc    BYTE PTR [ebx+edi*2+0x77],bh
  40abfd:	cs xchg edi,eax
  40abff:	mov    ds:0xdf7d86aa,al
  40ac04:	test   BYTE PTR [ebp-0x2c85bd0a],bl
  40ac0a:	xor    edx,edx
  40ac0c:	mov    dl,0x10
  40ac0e:	imul   edi,ebx,0x3c68557b
  40ac14:	mov    bh,0x84
  40ac16:	and    al,0xa9
  40ac18:	movhps xmm1,QWORD PTR [eax-0x6e]
  40ac1c:	adc    ch,bh
  40ac1e:	in     eax,0xd6
  40ac20:	cmp    eax,0xc626e75
  40ac25:	xor    eax,0x73bfbcde
  40ac2a:	rol    DWORD PTR [ebx],0xe2
  40ac2d:	adc    DWORD PTR [esi+0x54],ebx
  40ac30:	xchg   esi,edx
  40ac32:	xchg   ebx,eax
  40ac33:	inc    ebp
  40ac34:	pop    edi
  40ac35:	push   esi
  40ac36:	xchg   edx,eax
  40ac37:	jns    0x40abe4
  40ac39:	outs   dx,DWORD PTR ds:[esi]
  40ac3a:	ror    BYTE PTR [ecx+edi*4-0x3],cl
  40ac3e:	xchg   esi,eax
  40ac3f:	stos   DWORD PTR es:[edi],eax
  40ac40:	fstp   st(0)
  40ac42:	jae    0x40acb9
  40ac44:	dec    ebx
  40ac45:	push   cs
  40ac46:	mov    ebp,0x525be13d
  40ac4b:	and    ch,BYTE PTR [ecx]
  40ac4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4e:	std    
  40ac4f:	mov    ebx,0xff7a9281
  40ac54:	ret    0x75b9
  40ac57:	pop    esi
  40ac58:	jno    0x40abda
  40ac5a:	or     ecx,DWORD PTR [ebp-0x4afde18e]
  40ac60:	and    eax,0x393232d3
  40ac65:	cmp    eax,DWORD PTR [edi]
  40ac67:	nop
  40ac68:	add    DWORD PTR [edi+0xaafd486],esp
  40ac6e:	push   edx
  40ac6f:	ret    0xffe5
  40ac72:	jo     0x40acc4
  40ac74:	xchg   DWORD PTR [esi],edx
  40ac76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac77:	outs   dx,DWORD PTR ds:[esi]
  40ac78:	lods   eax,DWORD PTR ds:[esi]
  40ac79:	in     al,0x8b
  40ac7b:	arpl   WORD PTR [edx],ax
  40ac7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac7e:	iret   
  40ac7f:	jmp    0x7eb8b5f4
  40ac84:	mov    edi,0x90ba7556
  40ac89:	jmp    0xf3ba6285
  40ac8e:	xchg   ebx,eax
  40ac8f:	aad    0x39
  40ac91:	mov    ch,0x24
  40ac93:	lds    esi,FWORD PTR [edi-0x6149e90]
  40ac99:	into   
  40ac9a:	mov    BYTE PTR [esi],cl
  40ac9c:	cmp    ecx,DWORD PTR [eax-0x24c0f9d0]
  40aca2:	mov    edi,0x87db1078
  40aca7:	cld    
  40aca8:	ror    BYTE PTR [ebp-0x5f03e588],0x8c
  40acaf:	dec    esi
  40acb0:	and    al,0xa1
  40acb2:	dec    esp
  40acb3:	(bad)
  40acb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acb7:	loop   0x40ac6d
  40acb9:	loopne 0x40ac4f
  40acbb:	sbb    BYTE PTR [esp+ebx*2+0x61],0x90
  40acc0:	repnz add DWORD PTR [ebx-0x3d],esp
  40acc4:	in     eax,dx
  40acc5:	cmp    al,0x3f
  40acc7:	out    0x66,al
  40acc9:	dec    esp
  40acca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40accb:	cmp    ebp,DWORD PTR ss:[edi+0x6f]
  40accf:	out    0x4b,al
  40acd1:	sbb    dl,ah
  40acd3:	std    
  40acd4:	sbb    al,0x3d
  40acd6:	shl    dl,cl
  40acd8:	xchg   ah,ah
  40acda:	ror    BYTE PTR [edx+0x2b],cl
  40acdd:	(bad)  
  40acde:	(bad)  
  40acdf:	and    ah,BYTE PTR [eax]
  40ace1:	jno    0x40ac70
  40ace3:	shl    DWORD PTR [edi-0x33f14f06],1
  40ace9:	xchg   ebx,eax
  40acea:	sbb    al,0x34
  40acec:	loope  0x40ad45
  40acee:	mov    ds,esp
  40acf0:	push   0x46ce6015
  40acf5:	bound  ecx,QWORD PTR [eax-0x2b]
  40acf8:	pop    eax
  40acf9:	ret    0xb9be
  40acfc:	fwait
  40acfd:	jne    0x40ad36
  40acff:	inc    esp
  40ad00:	ins    BYTE PTR es:[edi],dx
  40ad01:	push   edx
  40ad02:	in     eax,dx
  40ad03:	ror    DWORD PTR [ebx+ebp*1-0x11],cl
  40ad07:	jge    0x40ad3d
  40ad09:	mov    ebx,0xf2f43677
  40ad0e:	shl    DWORD PTR [eax],0x8c
  40ad11:	sar    esp,1
  40ad13:	mov    ch,0x1d
  40ad15:	mov    edi,0xd00e5385
  40ad1a:	lds    ecx,FWORD PTR [edx]
  40ad1c:	inc    ebp
  40ad1d:	push   eax
  40ad1e:	loope  0x40acee
  40ad20:	and    ecx,0x157a1da5
  40ad26:	outs   dx,DWORD PTR ds:[esi]
  40ad27:	rcr    ebp,0x2e
  40ad2a:	inc    edi
  40ad2b:	test   DWORD PTR [ecx+0xe],edx
  40ad2e:	mov    bl,0x3a
  40ad30:	adc    DWORD PTR [ecx-0x67],0xffffffd6
  40ad34:	mov    eax,ds:0x84fc479b
  40ad39:	jo     0x40adb4
  40ad3b:	lods   eax,DWORD PTR ds:[esi]
  40ad3c:	retf   
  40ad3d:	or     eax,0xe005b6ad
  40ad42:	push   0x8bb97eea
  40ad47:	sub    eax,0xffffffb5
  40ad4a:	xchg   edi,eax
  40ad4b:	lea    esp,[eax+edi*4]
  40ad4e:	lahf   
  40ad4f:	imul   ecx,DWORD PTR [ebp+0x67b7ae8],0x2c3ecd61
  40ad59:	sbb    ebx,DWORD PTR [edi+0x33]
  40ad5c:	leave  
  40ad5d:	add    BYTE PTR [ecx],bh
  40ad5f:	fcom   DWORD PTR [esi+0x1ac0e9e5]
  40ad65:	sbb    dl,BYTE PTR [edx-0xbe4a1fc]
  40ad6b:	ret    
  40ad6c:	sahf   
  40ad6d:	daa    
  40ad6e:	pop    ds
  40ad6f:	mov    al,0xe5
  40ad71:	cmc    
  40ad72:	jg     0x40ad7d
  40ad74:	cmp    BYTE PTR [edx],dl
  40ad76:	or     BYTE PTR [esi+0x6b543002],cl
  40ad7c:	(bad)  
  40ad7d:	neg    esi
  40ad7f:	mov    ds:0x83ba8997,eax
  40ad84:	xchg   ecx,eax
  40ad85:	inc    edx
  40ad86:	popf   
  40ad87:	sbb    eax,0x83181234
  40ad8c:	out    dx,al
  40ad8d:	(bad)  
  40ad8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad90:	sbb    al,0x9a
  40ad92:	push   ebp
  40ad93:	add    eax,0x41f96256
  40ad98:	xchg   ebp,eax
  40ad99:	cwde   
  40ad9a:	mov    eax,DWORD PTR [ebp-0x14]
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a66b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a66f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x7ed409e5]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x35
  40aed6:	rol    DWORD PTR [ecx+eax*1],0x47
  40aeda:	mov    dh,0xb5
  40aedc:	aas    
  40aedd:	mov    bl,0x1f
  40aedf:	pop    esp
  40aee0:	(bad)  
  40aee1:	xor    DWORD PTR [edi],ebx
  40aee3:	cs jge 0x40af22
  40aee6:	cs aad 0x61
  40aee9:	lods   al,BYTE PTR ds:[esi]
  40aeea:	std    
  40aeeb:	mov    eax,ds:0x303117de
  40aef0:	pop    es
  40aef1:	scas   al,BYTE PTR es:[edi]
  40aef2:	xchg   edx,eax
  40aef3:	aas    
  40aef4:	sbb    ebx,esi
  40aef6:	(bad)  
  40aef7:	adc    esi,DWORD PTR [eax-0x59]
  40aefa:	and    ecx,DWORD PTR [eax-0x30]
  40aefd:	sub    edx,DWORD PTR [esi-0x31]
  40af00:	or     DWORD PTR [esi],esp
  40af02:	stc    
  40af03:	jno    0x40af0e
  40af05:	pop    edi
  40af06:	jne    0x40aec7
  40af08:	adc    bl,BYTE PTR [ecx-0x6d]
  40af0b:	push   ss
  40af0c:	xor    esp,ebx
  40af0e:	or     ch,BYTE PTR [esi+edx*2]
  40af11:	pop    eax
  40af12:	fs sub bx,di
  40af16:	jae    0x40af5d
  40af18:	aaa    
  40af19:	dec    ebx
  40af1a:	fild   WORD PTR [ecx+ecx*1+0xf]
  40af1e:	je     0x40af91
  40af20:	push   edx
  40af21:	sar    BYTE PTR [ecx-0x5a07f42b],1
  40af27:	sub    eax,0x96eff64
  40af2c:	stos   BYTE PTR es:[edi],al
  40af2d:	mov    BYTE PTR [ecx],dl
  40af2f:	mov    dl,0x82
  40af31:	test   BYTE PTR ds:[esi+0x377ebef0],bl
  40af38:	fiadd  WORD PTR [ebx+0x67]
  40af3b:	fisubr DWORD PTR [ebx-0x23]
  40af3e:	sub    al,0x4
  40af40:	addr16 (bad) 
  40af42:	xor    esi,edx
  40af44:	push   0xffffffee
  40af46:	jb     0x40aee8
  40af48:	xchg   ebp,eax
  40af49:	sub    bh,BYTE PTR [ebp-0x23f0a66b]
  40af4f:	dec    eax
  40af50:	push   ss
  40af51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af52:	inc    ecx
  40af53:	sbb    BYTE PTR [edx],dl
  40af55:	cwde   
  40af56:	adc    DWORD PTR [ebp-0x10f6b322],esp
  40af5c:	in     eax,0xfa
  40af5e:	xlat   BYTE PTR ds:[ebx]
  40af5f:	fisttp DWORD PTR [eax+esi*2-0x1]
  40af63:	jp     0x40af89
  40af65:	push   ebx
  40af66:	mov    cl,BYTE PTR [eax]
  40af68:	repz xor eax,0x142087ac
  40af6e:	aam    0xf1
  40af70:	repz inc eax
  40af72:	es jb  0x40af21
  40af75:	pop    edx
  40af76:	mov    eax,0xae0e54a2
  40af7b:	adc    bl,al
  40af7d:	rol    BYTE PTR [ebp+0x55],1
  40af80:	mov    WORD PTR [edx-0x3d],es
  40af83:	xchg   esi,eax
  40af84:	call   0x282dcc04
  40af89:	lods   al,BYTE PTR ds:[esi]
  40af8a:	or     ah,BYTE PTR [ecx+0x59]
  40af8d:	ss (bad) 
  40af8f:	cld    
  40af90:	test   BYTE PTR [esi],ch
  40af92:	jp     0x40af52
  40af94:	lahf   
  40af95:	sti    
  40af96:	dec    edi
  40af97:	imul   esi,DWORD PTR [ecx+0x3223ade3],0xb237c5b0
  40afa1:	addr16 retf 
  40afa3:	jl     0x40afd6
  40afa5:	xor    al,0x20
  40afa7:	push   cs
  40afa8:	pusha  
  40afa9:	aad    0xbe
  40afab:	jmp    0x97d6:0xa003b2ac
  40afb2:	dec    edi
  40afb3:	test   al,0x4f
  40afb5:	inc    edx
  40afb6:	in     eax,dx
  40afb7:	pop    edx
  40afb8:	mov    ds:0x6e44ad87,eax
  40afbd:	call   0x5013:0x30126429
  40afc4:	sahf   
  40afc5:	and    esi,DWORD PTR [eax+0x36]
  40afc8:	xor    bh,BYTE PTR [eax+ecx*4]
  40afcb:	and    ecx,eax
  40afcd:	add    DWORD PTR [ebp-0x4b72dda2],edx
  40afd3:	lds    ebp,FWORD PTR [ebp+0x7c991dd8]
  40afd9:	fidiv  DWORD PTR [esi-0x1b]
  40afdc:	dec    esp
  40afdd:	xchg   ebp,eax
  40afde:	pusha  
  40afdf:	dec    edx
  40afe0:	icebp  
  40afe1:	mov    WORD PTR [edi],?
  40afe3:	inc    ebx
  40afe4:	mov    esp,0x1fa54efe
  40afe9:	jmp    0xdb6432d9
  40afee:	ror    ebp,0xef
  40aff1:	and    DWORD PTR [edx],ebx
  40aff3:	sqrtps xmm0,XMMWORD PTR es:[edi]
  40aff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff8:	mov    WORD PTR [ebx],fs
  40affa:	xchg   edi,eax
  40affb:	daa    
  40affc:	aas    
  40affd:	jmp    0x7d422938
  40b002:	cwde   
  40b003:	jmp    0x75d428
  40b008:	arpl   bp,bx
  40b00a:	jl     0x40b085
  40b00c:	mov    esi,0x3d66f8ed
  40b011:	mov    al,ds:0xa0f32b61
  40b016:	loopne 0x40af9f
  40b018:	mov    eax,ds:0x3a690cec
  40b01d:	sub    eax,0x7dfe6ef4
  40b022:	sbb    eax,0xe50ec703
  40b027:	loop   0x40b066
  40b029:	loope  0x40b081
  40b02b:	and    eax,0x24dcb607
  40b030:	adc    ebx,esp
  40b032:	jne    0x40b08a
  40b034:	pop    edx
  40b035:	loope  0x40b074
  40b037:	bound  edi,QWORD PTR [edx]
  40b039:	pop    edi
  40b03a:	sar    DWORD PTR [edx],0x94
  40b03d:	(bad)  
  40b03e:	mov    eax,0x47760ba
  40b043:	scas   eax,DWORD PTR es:[edi]
  40b044:	jbe    0x40afec
  40b046:	leave  
  40b047:	loop   0x40b0ae
  40b049:	sbb    eax,0xeffe190e
  40b04e:	cmp    ch,BYTE PTR [edx+0x130ed582]
  40b054:	aaa    
  40b055:	pop    ss
  40b056:	adc    esp,DWORD PTR [ecx+0x1c47738b]
  40b05c:	ret    
  40b05d:	rol    edx,cl
  40b05f:	mov    al,ds:0x3fdb6bb8
  40b064:	adc    ecx,DWORD PTR [ecx-0x4e36a6a1]
  40b06a:	sub    ebx,DWORD PTR [ecx+eax*2-0x5d02ded4]
  40b071:	das    
  40b072:	es push esi
  40b074:	in     eax,dx
  40b075:	mov    eax,0x6dad8a56
  40b07a:	push   ss
  40b07b:	fxch   st(4)
  40b07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b07e:	test   edi,edx
  40b080:	mov    WORD PTR [ecx],?
  40b082:	push   ebx
  40b083:	outs   dx,DWORD PTR ds:[esi]
  40b084:	push   esp
  40b085:	sbb    cl,BYTE PTR ds:0x3c243abe
  40b08b:	dec    esi
  40b08c:	or     DWORD PTR [ebx],edx
  40b08e:	das    
  40b08f:	inc    ebx
  40b090:	xchg   edx,eax
  40b091:	add    DWORD PTR [ebx],0x1e4ea664
  40b097:	test   BYTE PTR [ecx],al
  40b099:	jo     0x40b0ce
  40b09b:	adc    al,BYTE PTR [edx+0x1d]
  40b09e:	retf   
  40b09f:	out    dx,eax
  40b0a0:	jmp    0x40b085
  40b0a2:	mov    WORD PTR [ebx-0xa],cs
  40b0a5:	aam    0xcb
  40b0a7:	shr    BYTE PTR [edi+0x4a060488],0xbc
  40b0ae:	xchg   esp,eax
  40b0af:	lds    eax,FWORD PTR [ebx-0xb8bfed1]
  40b0b5:	sar    BYTE PTR [eax-0x1c6f33cb],cl
  40b0bb:	(bad)  
  40b0bc:	dec    ebx
  40b0bd:	add    al,BYTE PTR [ecx+0x38]
  40b0c0:	lods   al,BYTE PTR ds:[esi]
  40b0c1:	sbb    al,BYTE PTR [ecx]
  40b0c3:	inc    eax
  40b0c4:	xor    ebx,DWORD PTR [eax+0x783edca5]
  40b0ca:	mov    dl,0x8e
  40b0cc:	arpl   sp,ax
  40b0ce:	cdq    
  40b0cf:	je     0x40b0e3
  40b0d1:	ds dec ecx
  40b0d3:	arpl   dx,ax
  40b0d5:	pop    edi
  40b0d6:	adc    DWORD PTR [ecx+0x7f],esi
  40b0d9:	dec    edx
  40b0da:	or     bl,BYTE PTR [edi]
  40b0dc:	mov    ds:0x8fb4f97d,eax
  40b0e1:	push   esi
  40b0e2:	sub    BYTE PTR [esi-0x114764a2],0x20
  40b0e9:	mov    WORD PTR [ebx+0x7d],?
  40b0ec:	out    0x3c,al
  40b0ee:	xor    BYTE PTR [ebx+0x7d],cl
  40b0f1:	push   0x1e
  40b0f3:	out    0xc5,al
  40b0f5:	push   ebp
  40b0f6:	fstp   st(5)
  40b0f8:	cli    
  40b0f9:	(bad)  
  40b0fa:	mov    eax,0xa3f263f6
  40b0ff:	pop    edi
  40b100:	jae    0x40b0b4
  40b102:	popf   
  40b103:	xchg   DWORD PTR [eax],ebx
  40b105:	push   esi
  40b106:	dec    ecx
  40b107:	mov    ah,0xf2
  40b109:	push   DWORD PTR [edi]
  40b10b:	les    esi,FWORD PTR [ebx]
  40b10d:	cmp    BYTE PTR [ebx],ah
  40b10f:	std    
  40b110:	add    esi,edi
  40b112:	cmp    ebp,ebp
  40b114:	rol    BYTE PTR [edx-0x71],1
  40b117:	push   0xffffffe4
  40b119:	jo     0x40b0e3
  40b11b:	fldenv [ecx+0x2183ce76]
  40b121:	xrelease mov BYTE PTR [esi-0x16],bh
  40b125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b126:	sbb    ah,BYTE PTR [ecx-0xf]
  40b129:	mov    edi,0x11a03e51
  40b12e:	ins    BYTE PTR es:[edi],dx
  40b12f:	mov    ah,0xc7
  40b131:	rcl    DWORD PTR ds:0xccc2f80a,0x53
  40b138:	mov    eax,0xe9b01759
  40b13d:	fsubp  st(7),st
  40b13f:	dec    edx
  40b140:	(bad)  
  40b141:	inc    edx
  40b142:	cli    
  40b143:	daa    
  40b144:	popf   
  40b145:	out    0x6a,al
  40b147:	int    0xf5
  40b149:	shl    DWORD PTR [ecx-0x59],0xf8
  40b14d:	xor    BYTE PTR [ebp-0x5668105b],ah
  40b153:	ins    DWORD PTR es:[edi],dx
  40b154:	stc    
  40b155:	fidivr WORD PTR [ecx]
  40b157:	into   
  40b158:	inc    edx
  40b159:	int    0x4c
  40b15b:	sbb    DWORD PTR [edx],0xd90b6065
  40b161:	xchg   edx,eax
  40b162:	jnp    0x40b172
  40b164:	mov    ch,0x63
  40b166:	or     DWORD PTR [edi-0x50],ebx
  40b169:	and    esi,edx
  40b16b:	xchg   BYTE PTR [edi-0x1fbfdf03],bh
  40b171:	out    dx,eax
  40b172:	les    edi,FWORD PTR [ebp-0x4dd9e4b2]
  40b178:	jp     0x40b17a
  40b17a:	push   ebp
  40b17b:	popf   
  40b17c:	or     DWORD PTR [edi],eax
  40b17e:	test   DWORD PTR [ebp+0x13a5933],esi
  40b184:	stc    
  40b185:	scas   eax,DWORD PTR es:[edi]
  40b186:	cmp    DWORD PTR [ebx+0x6f60ac87],ebp
  40b18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18d:	jo     0x40b11a
  40b18f:	aaa    
  40b190:	sbb    ah,BYTE PTR [esi-0x427bd310]
  40b196:	and    BYTE PTR [esi+eax*1],bh
  40b199:	data16 out 0x80,al
  40b19c:	hlt    
  40b19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b19e:	bound  ebp,QWORD PTR es:[edi-0x363f1995]
  40b1a5:	jne    0x40b16d
  40b1a7:	cs out dx,al
  40b1a9:	jb     0x40b146
  40b1ab:	xor    eax,DWORD PTR [ecx+0x2ae23800]
  40b1b1:	and    ah,0xf8
  40b1b4:	and    al,0x25
  40b1b6:	(bad)  
  40b1b7:	jne    0x40b1b4
  40b1b9:	inc    edi
  40b1ba:	add    eax,0xa6fe293c
  40b1bf:	test   BYTE PTR [esi-0x25],al
  40b1c2:	out    dx,eax
  40b1c3:	push   eax
  40b1c4:	push   edx
  40b1c5:	dec    ecx
  40b1c6:	xor    ecx,0x74
  40b1c9:	fsubr  QWORD PTR [edx-0x7f]
  40b1cc:	dec    ebp
  40b1cd:	xlat   BYTE PTR ds:[ebx]
  40b1ce:	(bad)  
  40b1cf:	inc    edi
  40b1d0:	outs   dx,DWORD PTR ds:[esi]
  40b1d1:	(bad)  
  40b1d2:	mov    bl,0xa4
  40b1d4:	xor    eax,0xa694b659
  40b1d9:	addr16 out dx,eax
  40b1db:	call   FWORD PTR [edx]
  40b1dd:	loopne 0x40b240
  40b1df:	std    
  40b1e0:	and    bh,BYTE PTR [ebx-0x2bb5006d]
  40b1e6:	sub    ch,BYTE PTR [eax]
  40b1e8:	inc    edi
  40b1e9:	xlat   BYTE PTR ds:[ebx]
  40b1ea:	test   eax,0xc24c31c6
  40b1ef:	dec    edx
  40b1f0:	push   0xffffffdf
  40b1f2:	xchg   ecx,eax
  40b1f3:	scas   eax,DWORD PTR es:[edi]
  40b1f4:	sti    
  40b1f5:	adc    ah,BYTE PTR [edx-0x236d555b]
  40b1fb:	pop    ds
  40b1fc:	sbb    DWORD PTR [edx+0x3b],ebx
  40b1ff:	dec    esp
  40b200:	cmp    dh,BYTE PTR [esi]
  40b202:	sub    BYTE PTR es:[eax+ebx*1+0x42dc4fcd],ch
  40b20a:	test   ah,ah
  40b20c:	xchg   ebp,eax
  40b20d:	xchg   BYTE PTR [edx-0x4f],dh
  40b210:	jg     0x40b241
  40b212:	mov    ah,0x36
  40b214:	mov    DWORD PTR [edx-0x715ca89a],ebx
  40b21a:	fiadd  WORD PTR [eax+ebx*2-0x52]
  40b21e:	adc    eax,0x5a8639b5
  40b223:	cld    
  40b224:	in     al,dx
  40b225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b226:	cld    
  40b227:	pop    ds
  40b228:	ss loop 0x40b1c6
  40b22b:	popa   
  40b22c:	mov    eax,0xf84e88f0
  40b231:	jmp    0xd967:0xcc8e738d
  40b238:	out    dx,al
  40b239:	sub    BYTE PTR [edx+0x26d2bb8],bh
  40b23f:	shl    DWORD PTR [eax+edi*1],1
  40b242:	sbb    BYTE PTR [edx+0x492c4ed],0xe2
  40b249:	push   ss
  40b24a:	cmp    al,0xf4
  40b24c:	call   0x70ff3acc
  40b251:	cmp    al,0x9a
  40b254:	ret    0x204f
  40b257:	mov    ah,0x92
  40b259:	loopne 0x40b1fd
  40b25b:	outs   dx,DWORD PTR ds:[esi]
  40b25c:	jmp    0x2a28:0xe4057346
  40b263:	sbb    bh,BYTE PTR [edx]
  40b265:	mov    ebx,0xab5c6115
  40b26a:	pop    eax
  40b26b:	pop    esp
  40b26c:	out    dx,al
  40b26d:	sbb    esi,DWORD PTR [edi+0xec2ab8c]
  40b273:	jmp    0x845a5055
  40b278:	(bad)  
  40b279:	push   eax
  40b27a:	outs   dx,BYTE PTR ds:[esi]
  40b27b:	(bad)  
  40b27d:	addr16 stc 
  40b27f:	cdq    
  40b280:	fmul   st,st(6)
  40b282:	test   al,0x1e
  40b284:	cmc    
  40b285:	adc    esp,DWORD PTR fs:[edi+0x1a]
  40b289:	gs mov ecx,ss
  40b28c:	outs   dx,BYTE PTR ds:[esi]
  40b28d:	or     DWORD PTR ds:0xaad3d0b9,esi
  40b293:	push   edx
  40b294:	nop
  40b295:	add    DWORD PTR [esi+0x42],eax
  40b298:	cmc    
  40b299:	test   eax,0x59f084b
  40b29e:	dec    ebp
  40b29f:	shl    DWORD PTR [ecx+0x6e],1
  40b2a2:	sub    ecx,DWORD PTR [esi]
  40b2a4:	aas    
  40b2a5:	mov    ecx,0xc1a20192
  40b2aa:	iret   
  40b2ab:	or     DWORD PTR [ebx],ebp
  40b2ad:	setb   dl
  40b2b0:	mov    dh,0x1a
  40b2b2:	ret    
  40b2b3:	test   BYTE PTR [edi],dh
  40b2b5:	(bad)  
  40b2b6:	fsubr  DWORD PTR [esi]
  40b2b8:	adc    eax,0x77a44a48
  40b2bd:	xchg   ebx,eax
  40b2be:	pusha  
  40b2bf:	add    BYTE PTR [esi-0x7b434a12],0xe9
  40b2c6:	xor    al,0x77
  40b2c8:	push   ebp
  40b2c9:	adc    BYTE PTR cs:[eax],0x9
  40b2cd:	push   edi
  40b2ce:	jo     0x40b29c
  40b2d0:	and    ebx,eax
  40b2d2:	lods   eax,DWORD PTR ds:[esi]
  40b2d3:	adc    ecx,esp
  40b2d5:	sub    eax,0x9d87fed
  40b2da:	push   eax
  40b2db:	aas    
  40b2dc:	sbb    al,0xae
  40b2de:	getsec 
  40b2e0:	jl     0x40b301
  40b2e2:	jl     0x40b282
  40b2e4:	mov    esp,edx
  40b2e6:	(bad)  
  40b2e8:	mov    eax,ds:0xea1d69c5
  40b2ed:	test   al,0x9b
  40b2ef:	cmp    al,0xea
  40b2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f2:	stos   DWORD PTR es:[edi],eax
  40b2f3:	je     0x40b2a7
  40b2f5:	call   0xa170098e
  40b2fa:	push   0xef628614
  40b2ff:	cmp    esp,ecx
  40b301:	push   ss
  40b302:	sahf   
  40b303:	in     al,dx
  40b304:	loop   0x40b381
  40b306:	xor    al,0xf1
  40b308:	adc    BYTE PTR [eax-0x10],dl
  40b30b:	jecxz  0x40b35d
  40b30d:	(bad)  
  40b30e:	out    dx,eax
  40b30f:	xchg   BYTE PTR ds:0x838c0505,dh
  40b315:	aad    0x2e
  40b317:	aad    0xa6
  40b319:	push   es
  40b31a:	adc    DWORD PTR [ebx-0x7d],0xffffffcb
  40b31e:	pushf  
  40b31f:	data16 outs dx,BYTE PTR ds:[esi]
  40b321:	out    dx,eax
  40b322:	xchg   BYTE PTR [eax-0x474c6ac],al
  40b328:	ss loop 0x40b31e
  40b32b:	and    esi,DWORD PTR [esi]
  40b32d:	inc    esi
  40b32e:	and    DWORD PTR [edi],esp
  40b330:	inc    esp
  40b331:	test   bh,bl
  40b333:	jmp    0x513a:0xd8406f39
  40b33a:	iret   
  40b33b:	inc    esp
  40b33c:	scas   eax,DWORD PTR es:[edi]
  40b33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b33e:	add    eax,0x74e58f83
  40b343:	mov    DWORD PTR [eax+0x53],esi
  40b346:	and    eax,0x56f77369
  40b34b:	les    edx,FWORD PTR [ebx+0x3a]
  40b34e:	xchg   ah,bl
  40b350:	mov    WORD PTR [esi],ss
  40b352:	sahf   
  40b353:	div    BYTE PTR [ebx-0x3698b429]
  40b359:	adc    ecx,edx
  40b35b:	in     eax,dx
  40b35c:	es loop 0x40b3d2
  40b35f:	stc    
  40b360:	(bad)  
  40b362:	and    ch,cl
  40b364:	std    
  40b365:	add    ah,BYTE PTR [esi-0x626fc003]
  40b36b:	dec    edx
  40b36c:	sub    ebp,DWORD PTR [edi-0x57dc3cb8]
  40b372:	sub    al,0x24
  40b374:	pop    ds
  40b375:	push   cs
  40b376:	dec    edx
  40b377:	ret    0x4b36
  40b37a:	in     eax,dx
  40b37b:	aam    0x23
  40b37d:	xchg   ebx,eax
  40b37e:	adc    al,0x5b
  40b380:	loop   0x40b34b
  40b382:	cmp    edx,DWORD PTR [ecx-0x8a714f4]
  40b388:	and    ecx,esp
  40b38a:	cmp    dl,al
  40b38c:	adc    BYTE PTR [edx-0x53c87d24],0xc9
  40b393:	mov    dh,0x52
  40b395:	bound  ebp,QWORD PTR [ecx+0x6dfdca0a]
  40b39b:	bound  edx,QWORD PTR ds:0xcec65e5c
  40b3a1:	xchg   ebp,eax
  40b3a2:	mov    cl,ah
  40b3a4:	jnp    0x40b34d
  40b3a6:	aam    0xfd
  40b3a8:	sar    DWORD PTR [edi+0x58c35001],cl
  40b3ae:	and    bh,BYTE PTR [esi-0x80]
  40b3b1:	ins    DWORD PTR es:[edi],dx
  40b3b2:	popf   
  40b3b3:	push   DWORD PTR ss:[esi-0x21c0e68f]
  40b3ba:	dec    ecx
  40b3bb:	adc    dl,cl
  40b3bd:	sub    BYTE PTR [eax+0x38],0x7f
  40b3c1:	mov    al,ds:0x7ec295ab
  40b3c6:	inc    esp
  40b3c7:	xchg   esi,eax
  40b3c8:	sti    
  40b3c9:	aaa    
  40b3ca:	repz pop ebp
  40b3cc:	js     0x40b3de
  40b3ce:	in     eax,dx
  40b3cf:	or     BYTE PTR [ebp+edx*4-0x76a633a2],al
  40b3d6:	mov    bl,0x47
  40b3d9:	rcr    DWORD PTR [esi-0x7e],0x85
  40b3dd:	lods   eax,DWORD PTR ds:[esi]
  40b3de:	out    dx,al
  40b3df:	inc    ecx
  40b3e0:	call   0xfd6c01e6
  40b3e5:	mov    dh,0x8b
  40b3e7:	into   
  40b3e8:	fild   QWORD PTR [eax-0x39]
  40b3eb:	ins    BYTE PTR es:[edi],dx
  40b3ec:	pop    ecx
  40b3ed:	loope  0x40b376
  40b3ef:	sub    ah,BYTE PTR ds:0xba6db0bd
  40b3f5:	int    0xed
  40b3f7:	sub    cl,BYTE PTR [edi-0x48]
  40b3fa:	fcom   QWORD PTR [ecx-0x2f887ad7]
  40b400:	gs dec esi
  40b402:	sbb    DWORD PTR [ebp+0x3f],esi
  40b405:	jg     0x40b3a1
  40b407:	in     al,dx
  40b408:	repz mov ah,0xfa
  40b40b:	mov    ch,0x67
  40b40d:	(bad)  
  40b40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40f:	push   ecx
  40b410:	fild   DWORD PTR [ebx-0x3b]
  40b413:	mov    eax,ds:0x3d1be2ef
  40b418:	jno    0x40b482
  40b41a:	push   esp
  40b41b:	rcr    DWORD PTR [ebx+0x156d1ae],0xc1
  40b422:	aas    
  40b423:	jae    0x40b472
  40b425:	cmc    
  40b426:	test   DWORD PTR [edi],esp
  40b428:	sahf   
  40b429:	xchg   DWORD PTR [edi+0x3d],esp
  40b42c:	(bad)  
  40b42d:	(bad)  
  40b42e:	xor    al,ah
  40b430:	jb     0x40b431
  40b432:	mov    ecx,0x7353f104
  40b437:	sub    dh,ch
  40b439:	jne    0x40b480
  40b43b:	lahf   
  40b43c:	arpl   WORD PTR [edx],bx
  40b43e:	add    DWORD PTR [eax-0xe],0x2d0516c2
  40b445:	push   edx
  40b446:	xchg   edi,eax
  40b447:	xor    BYTE PTR [eax],0x6
  40b44a:	call   0x763bb780
  40b44f:	imul   ebx,DWORD PTR [esi-0x74570c19],0x3f2abccb
  40b459:	jp     0x40b492
  40b45b:	in     al,dx
  40b45c:	or     edi,DWORD PTR [ebp-0x11c5e10c]
  40b462:	adc    esi,DWORD PTR [ebx+0x47]
  40b465:	pop    eax
  40b466:	addr16 mov ah,0xe8
  40b469:	and    ah,BYTE PTR [edi]
  40b46b:	loopne 0x40b462
  40b46d:	mov    al,ch
  40b46f:	in     eax,0xa1
  40b471:	mov    BYTE PTR [ebp-0x2a],ch
  40b474:	fcmovnb st,st(2)
  40b476:	arpl   WORD PTR [ebx-0x514db7bb],bp
  40b47c:	jg     0x40b445
  40b47e:	cli    
  40b47f:	mov    ecx,0xa7a6745b
  40b484:	ret    0x86f
  40b487:	outs   dx,BYTE PTR ds:[esi]
  40b488:	in     al,dx
  40b489:	out    0xfa,eax
  40b48b:	nop
  40b48c:	pop    esp
  40b48d:	xor    bh,BYTE PTR [ebp*1-0x76fc75b3]
  40b494:	sti    
  40b495:	jmp    0x40b4ec
  40b497:	inc    ebp
  40b498:	mov    ds:0xb791d612,al
  40b49d:	repnz mov DWORD PTR [ebx-0x4d],0x332f3ff4
  40b4a5:	xor    ebp,ebp
  40b4a7:	xor    al,0x13
  40b4a9:	in     al,dx
  40b4aa:	cmc    
  40b4ab:	daa    
  40b4ac:	adc    al,0xf5
  40b4ae:	lock pop ebp
  40b4b0:	cdq    
  40b4b1:	dec    edi
  40b4b2:	jns    0x40b463
  40b4b4:	jb     0x40b4ca
  40b4b6:	sbb    bh,BYTE PTR [ebp-0x1f]
  40b4b9:	adc    al,BYTE PTR [ecx]
  40b4bb:	add    ebp,DWORD PTR [esi+0x70c2533f]
  40b4c1:	dec    esp
  40b4c2:	pop    DWORD PTR [eax+0x76]
  40b4c5:	stos   BYTE PTR es:[edi],al
  40b4c6:	std    
  40b4c7:	adc    ecx,DWORD PTR [ebx+0x5ca93ee4]
  40b4cd:	rcl    cl,1
  40b4cf:	call   0x7223:0x38207dbe
  40b4d6:	frstor [ebx+ecx*8-0x182f820e]
  40b4dd:	rcl    BYTE PTR [ebx+0x4368c150],1
  40b4e3:	outs   dx,DWORD PTR ds:[esi]
  40b4e4:	lock xchg BYTE PTR ds:0x9afb8999,ch
  40b4eb:	cs jmp 0xac0e:0x784ce415
  40b4f3:	in     eax,dx
  40b4f4:	es cmc 
  40b4f6:	pushf  
  40b4f7:	add    DWORD PTR [eax+0x565b887b],edi
  40b4fd:	sub    al,0xa1
  40b4ff:	std    
  40b500:	rol    BYTE PTR [ecx-0x3d],1
  40b503:	dec    esi
  40b504:	mov    cl,0xdb
  40b506:	das    
  40b507:	out    dx,al
  40b508:	lock adc al,0x56
  40b50b:	jge    0x40b4cd
  40b50d:	inc    ebx
  40b50e:	ins    BYTE PTR es:[edi],dx
  40b50f:	mov    ebx,0xf2b4e655
  40b514:	jmp    0xc9c31d0
  40b519:	inc    eax
  40b51a:	(bad)  
  40b51b:	dec    ebx
  40b51c:	imul   ebx,DWORD PTR ds:0x59136ea2,0xc1f963d9
  40b526:	dec    ebp
  40b527:	std    
  40b528:	(bad)  
  40b529:	(bad)  
  40b52a:	jmp    0xcad97fe2
  40b52f:	mov    ebp,0x472aacdd
  40b534:	das    
  40b535:	pop    ebp
  40b536:	lods   eax,DWORD PTR ds:[esi]
  40b537:	cld    
  40b538:	inc    ebx
  40b539:	ds inc eax
  40b53b:	mov    bh,0xd3
  40b53d:	or     edx,ebp
  40b53f:	fimul  DWORD PTR [ebx]
  40b541:	(bad)  
  40b542:	mov    ch,0xf3
  40b544:	or     edx,DWORD PTR [ecx-0x21]
  40b547:	pop    edi
  40b548:	iret   
  40b549:	frstor [ecx]
  40b54b:	pop    ebp
  40b54c:	sub    al,ch
  40b54e:	inc    esi
  40b54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b551:	loop   0x40b576
  40b553:	imul   edx,DWORD PTR [edi-0x62],0xdf9a82be
  40b55a:	add    esi,ecx
  40b55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b55d:	jge    0x40b521
  40b55f:	ins    BYTE PTR es:[edi],dx
  40b560:	xchg   BYTE PTR [ecx],bh
  40b562:	adc    edx,DWORD PTR [eax+ebp*8]
  40b565:	stos   BYTE PTR es:[edi],al
  40b566:	sbb    BYTE PTR [eax+0x3a],dl
  40b569:	sbb    eax,0x9aafb60a
  40b56e:	and    eax,0xfe9a3fb9
  40b573:	cmc    
  40b574:	int3   
  40b575:	jns    0x40b4f8
  40b577:	or     BYTE PTR [ebp-0x16d242a9],0x89
  40b57e:	addr16 push 0x61a74fc3
  40b584:	mov    bl,0x7c
  40b586:	std    
  40b587:	push   esp
  40b588:	jmp    0x74fd3216
  40b58d:	pop    esi
  40b58e:	clc    
  40b58f:	xor    al,0x18
  40b591:	enter  0xce3d,0xdb
  40b595:	pshufw mm5,QWORD PTR [edi-0xaeb118c],0x7b
  40b59d:	dec    eax
  40b59e:	test   DWORD PTR [ecx-0x50d57e74],ecx
  40b5a4:	mov    ebx,0x66ef637f
  40b5a9:	or     al,0x7
  40b5ab:	sti    
  40b5ac:	daa    
  40b5ad:	push   edx
  40b5ae:	js     0x40b60a
  40b5b0:	ds push cs
  40b5b2:	xor    dl,ah
  40b5b4:	int3   
  40b5b5:	shl    ebp,cl
  40b5b7:	and    bl,BYTE PTR [ecx]
  40b5b9:	adc    esi,DWORD PTR [esi-0x137c0588]
  40b5bf:	mov    al,0xff
  40b5c1:	scas   eax,DWORD PTR es:[edi]
  40b5c2:	inc    esi
  40b5c3:	add    ebp,DWORD PTR [esi+0x57496cff]
  40b5c9:	xchg   bp,ax
  40b5cb:	mov    edi,ss
  40b5cd:	je     0x40b577
  40b5cf:	and    DWORD PTR [ebx],ecx
  40b5d1:	aaa    
  40b5d2:	outs   dx,BYTE PTR ds:[esi]
  40b5d3:	mov    BYTE PTR [edi+edx*2-0x50836ae0],bh
  40b5da:	mov    ebx,0x81b0f5f0
  40b5df:	xchg   ebx,eax
  40b5e0:	sub    eax,0xe21b2551
  40b5e5:	in     eax,0x5
  40b5e7:	and    eax,0x27756a79
  40b5ec:	int3   
  40b5ed:	xor    bh,BYTE PTR [ebx+edi*1+0x10]
  40b5f1:	leave  
  40b5f2:	out    0xb3,al
  40b5f4:	mov    bh,0xbb
  40b5f6:	ins    DWORD PTR es:[edi],dx
  40b5f7:	dec    DWORD PTR [edi+0x6]
  40b5fa:	jp     0x40b613
  40b5fc:	hlt    
  40b5fd:	clc    
  40b5fe:	js     0x40b593
  40b600:	loope  0x40b5a3
  40b602:	push   edi
  40b603:	mov    al,0x3d
  40b605:	mov    bl,0x57
  40b607:	or     al,0xc1
  40b609:	fnstsw WORD PTR [edi+esi*4-0x4f]
  40b60d:	sahf   
  40b60e:	fwait
  40b60f:	push   cs
  40b610:	jg     0x40b5f0
  40b612:	xor    eax,0x899e4697
  40b617:	mov    ?,eax
  40b619:	inc    ebx
  40b61a:	xchg   edx,eax
  40b61b:	mov    bl,0x79
  40b61d:	sub    DWORD PTR [ebx+ebx*4-0x78337540],ecx
  40b624:	into   
  40b625:	lods   al,BYTE PTR ds:[esi]
  40b626:	aas    
  40b627:	pop    edi
  40b628:	and    cl,BYTE PTR [eax]
  40b62a:	xchg   esp,eax
  40b62b:	aas    
  40b62c:	pop    esi
  40b62d:	jge    0x40b619
  40b62f:	mov    bh,BYTE PTR [edi-0x5]
  40b632:	mov    dh,BYTE PTR cs:[ecx+0x77]
  40b636:	pop    ecx
  40b637:	xor    bl,BYTE PTR [ecx-0x26e693db]
  40b63d:	or     ecx,DWORD PTR [ebx+0xf90449d]
  40b643:	dec    edx
  40b644:	mov    dl,0x93
  40b646:	popf   
  40b647:	dec    ebp
  40b648:	pop    ebx
  40b649:	fcomp  QWORD PTR [ebp-0x9]
  40b64c:	mov    ?,WORD PTR [edi-0x32fa971b]
  40b652:	or     al,0xda
  40b654:	fwait
  40b655:	pop    ss
  40b656:	add    bh,BYTE PTR [esi-0x3b]
  40b659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b65a:	clc    
  40b65b:	cmp    ebp,DWORD PTR [ebx-0x5d]
  40b65e:	loop   0x40b63e
  40b660:	push   eax
  40b661:	cmp    ch,0xf9
  40b664:	dec    edi
  40b665:	cdq    
  40b666:	dec    esp
  40b667:	sub    al,0x49
  40b669:	mov    DWORD PTR ds:0xf990f46c,esi
  40b66f:	pop    ss
  40b670:	adc    BYTE PTR [edx+ebx*2],ah
  40b673:	shl    BYTE PTR [ecx],cl
  40b675:	int3   
  40b676:	lea    ecx,[ebp+edi*2+0xa]
  40b67a:	adc    eax,0x5d28202b
  40b67f:	mov    cl,0x44
  40b681:	and    DWORD PTR [ecx],0xffffffc3
  40b684:	jmp    0x40b6f8
  40b686:	test   BYTE PTR [eax+0x2c],ch
  40b689:	sub    al,0x7e
  40b68b:	ss dec bl
  40b68e:	shl    BYTE PTR [ecx+0x11],0xd7
  40b692:	imul   ebx,DWORD PTR [eax],0xffffffcc
  40b695:	repnz mov ebx,DWORD PTR [edx-0x74]
  40b699:	retf   
  40b69a:	xor    BYTE PTR [edx],dh
  40b69c:	fisttp DWORD PTR [eax]
  40b69e:	jmp    0x50f5:0x4d4fc08f
  40b6a5:	repnz out 0xb0,al
  40b6a8:	lods   eax,DWORD PTR ds:[esi]
  40b6a9:	mov    eax,ds
  40b6ab:	adc    eax,edx
  40b6ad:	mov    al,ds:0x986577dc
  40b6b2:	imul   ecx,DWORD PTR [eax-0x35c1af3c],0x5f
  40b6b9:	push   0xb9a99c35
  40b6be:	add    al,0xb4
  40b6c0:	cmc    
  40b6c1:	mov    esp,0x51f97f
  40b6c6:	push   es
  40b6c7:	cli    
  40b6c8:	cmp    BYTE PTR [eax-0x3512730c],ah
  40b6ce:	fisttp DWORD PTR [esi]
  40b6d0:	xchg   edx,eax
  40b6d1:	sbb    ebp,DWORD PTR [ebx+eax*4]
  40b6d4:	ins    DWORD PTR es:[edi],dx
  40b6d5:	cmp    DWORD PTR ds:[ebp-0x10],ebx
  40b6d9:	ja     0x40b739
  40b6db:	outs   dx,DWORD PTR ds:[esi]
  40b6dc:	or     eax,0xa2f2be0
  40b6e1:	pusha  
  40b6e2:	loope  0x40b66f
  40b6e4:	cli    
  40b6e5:	adc    DWORD PTR gs:[eax+0x52],edi
  40b6e9:	out    0xf,eax
  40b6eb:	and    eax,0x6433bdb9
  40b6f0:	xor    eax,0xd7abc8bc
  40b6f5:	sbb    eax,0xd6265e25
  40b6fa:	call   0x9781:0x430e4246
  40b701:	ror    DWORD PTR [ecx-0x1a],1
  40b704:	sub    DWORD PTR [esi-0x2519712],esi
  40b70a:	mov    bh,0xb9
  40b70c:	add    bl,BYTE PTR [ebp+0x2b]
  40b70f:	ficomp WORD PTR [edi-0x21]
  40b712:	push   ebx
  40b713:	mov    ebp,0x499c97ca
  40b718:	pop    eax
  40b719:	add    eax,0x3dc0d7fa
  40b71e:	cmp    eax,DWORD PTR [eax]
  40b720:	cmp    bh,BYTE PTR ds:[ebx-0xfc6c4f4]
  40b727:	mov    ds:0x24fc9542,eax
  40b72c:	shl    DWORD PTR [eax],1
  40b72e:	out    dx,eax
  40b72f:	mov    cl,0xaa
  40b731:	sbb    ch,0xd7
  40b734:	and    DWORD PTR [ebx+0x58],ecx
  40b737:	dec    esi
  40b738:	sahf   
  40b739:	ss pop esi
  40b73b:	cld    
  40b73c:	push   0x69b788be
  40b741:	xchg   edx,eax
  40b742:	repz jmp 0x13a87ea2
  40b748:	leave  
  40b749:	ror    edi,cl
  40b74b:	retf   
  40b74c:	push   esp
  40b74d:	clc    
  40b74e:	es (bad) 
  40b750:	mov    dl,0xb8
  40b752:	icebp  
  40b753:	xchg   esp,eax
  40b754:	sub    edx,ecx
  40b756:	inc    edx
  40b757:	dec    edi
  40b758:	adc    DWORD PTR [edx-0x77e13d17],eax
  40b75e:	test   al,0x9
  40b760:	xor    bh,BYTE PTR [eax-0x3]
  40b763:	jns    0x40b6f8
  40b765:	test   ah,al
  40b767:	mov    bh,0x71
  40b769:	fmulp  st(0),st
  40b76b:	call   0xd470:0x3dd8a749
  40b772:	(bad)  
  40b773:	and    eax,0x35583aef
  40b778:	mov    ch,0x98
  40b77a:	xchg   eax,ecx
  40b77c:	push   edx
  40b77d:	and    ecx,DWORD PTR [ecx-0x7c]
  40b780:	pop    edx
  40b781:	fisubr WORD PTR [ebp+ebx*4-0xb]
  40b785:	add    eax,0xb67eee50
  40b78a:	lods   al,BYTE PTR ds:[esi]
  40b78b:	add    ah,BYTE PTR [ebx+0x23825287]
  40b791:	xchg   edx,eax
  40b792:	xchg   esp,eax
  40b793:	or     ebp,DWORD PTR [eax]
  40b795:	mov    dl,BYTE PTR [ebx]
  40b797:	addr16 xor eax,0x65190e7c
  40b79d:	mov    ch,0xe5
  40b79f:	or     al,0x32
  40b7a1:	stc    
  40b7a2:	jecxz  0x40b7e4
  40b7a4:	inc    ecx
  40b7a5:	and    ebx,DWORD PTR [edx-0x1a]
  40b7a8:	inc    esp
  40b7a9:	ins    BYTE PTR es:[edi],dx
  40b7aa:	xor    eax,0xda376581
  40b7af:	mov    BYTE PTR [eax+0x2198dcb6],ah
  40b7b5:	jle    0x40b79e
  40b7b7:	daa    
  40b7b8:	les    ecx,FWORD PTR [edi+edi*4+0x5d46b6ae]
  40b7bf:	imul   edi,edi,0x76
  40b7c2:	jl     0x40b777
  40b7c4:	shl    dl,0x69
  40b7c7:	ret    
  40b7c8:	ss out 0xc8,al
  40b7cb:	jl     0x40b74f
  40b7cd:	popf   
  40b7ce:	sub    al,0x75
  40b7d0:	mov    esi,0x2a918ae7
  40b7d5:	xchg   edi,eax
  40b7d6:	and    esi,DWORD PTR [ebp-0x14]
  40b7d9:	js     0x40b852
  40b7db:	push   esi
  40b7dc:	pop    ds
  40b7dd:	rol    cl,1
  40b7df:	cmp    DWORD PTR [edi+eax*4],0xffffffcb
  40b7e3:	js     0x40b85d
  40b7e5:	stos   DWORD PTR es:[edi],eax
  40b7e6:	dec    esi
  40b7e7:	mov    eax,ds:0xf8eeaf1b
  40b7ec:	mov    ds:0x3ff95bf0,eax
  40b7f1:	sbb    ch,dl
  40b7f3:	pop    esi
  40b7f4:	and    eax,0x3efcdad7
  40b7f9:	(bad)  
  40b7fa:	out    0x2f,al
  40b7fc:	mov    esp,0x6d182268
  40b801:	sahf   
  40b802:	aam    0x3a
  40b804:	fnsave [edi]
  40b806:	into   
  40b807:	loope  0x40b7a7
  40b809:	cdq    
  40b80a:	cs sub ebp,esp
  40b80d:	popa   
  40b80e:	and    eax,0x2980160d
  40b813:	in     eax,dx
  40b814:	call   0x77e8fc14
  40b819:	repnz loope 0x40b846
  40b81c:	xchg   esi,eax
  40b81d:	fdivr  DWORD PTR [eax+0x7b]
  40b820:	enter  0x8dfb,0xfc
  40b824:	jbe    0x40b7ca
  40b826:	push   esp
  40b827:	jo     0x40b840
  40b829:	(bad)  
  40b82a:	sar    DWORD PTR [ebp+0x2b],1
  40b82d:	loope  0x40b818
  40b82f:	lods   eax,DWORD PTR ds:[esi]
  40b830:	pop    edx
  40b831:	cmp    al,BYTE PTR [edi-0x2a]
  40b834:	mov    DWORD PTR [ebx],esi
  40b836:	add    dh,0x97
  40b839:	lds    edx,FWORD PTR [edx+0x5ffd8381]
  40b83f:	xchg   edi,eax
  40b840:	mov    ah,cl
  40b842:	mov    eax,0xdbf304ae
  40b847:	add    BYTE PTR [ebx+eiz*2],bh
  40b84a:	outs   dx,DWORD PTR ds:[esi]
  40b84b:	sbb    bh,bh
  40b84d:	daa    
  40b84e:	xchg   esi,eax
  40b84f:	sub    eax,0xcac803c1
  40b854:	fsub   st(1),st
  40b856:	in     eax,0xf4
  40b858:	mov    edi,0xac4dd62f
  40b85d:	daa    
  40b85e:	push   es
  40b85f:	jmp    0xbb99f31
  40b864:	or     ebx,eax
  40b866:	xchg   ecx,eax
  40b867:	adc    bl,BYTE PTR [edx+edx*8-0x5f]
  40b86b:	mov    esp,0x55ca9167
  40b870:	cld    
  40b871:	jp     0x40b85c
  40b873:	add    BYTE PTR [edx],0x45
  40b876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b877:	arpl   bx,bp
  40b879:	test   ebx,ebx
  40b87b:	in     al,dx
  40b87c:	icebp  
  40b87d:	pop    ebx
  40b87e:	fistp  WORD PTR ds:0x8603a800
  40b884:	retf   
  40b885:	dec    esp
  40b886:	mov    BYTE PTR [esi+0x6a],al
  40b889:	push   ebp
  40b88a:	test   al,0x5
  40b88c:	mov    dl,0x7
  40b88e:	adc    al,BYTE PTR [ebp+0x5d824a5c]
  40b894:	add    BYTE PTR [ebp+0x3e56f7d5],ah
  40b89a:	mov    edi,0xbd6f358
  40b89f:	retf   0xc9d2
  40b8a2:	add    bh,dl
  40b8a4:	adc    BYTE PTR [ecx-0x32],0xc4
  40b8a8:	sbb    cl,BYTE PTR [ebp+0x3c806037]
  40b8ae:	in     al,dx
  40b8af:	out    dx,eax
  40b8b0:	xchg   edx,eax
  40b8b1:	sti    
  40b8b2:	loopne 0x40b849
  40b8b4:	mov    eax,0xf6a392d2
  40b8b9:	les    edx,FWORD PTR fs:[edx]
  40b8bc:	mov    al,0x5b
  40b8be:	in     eax,dx
  40b8bf:	pop    ebp
  40b8c0:	cmc    
  40b8c1:	mov    ebx,0x3d980772
  40b8c6:	cmc    
  40b8c7:	rcr    BYTE PTR [esp+ecx*2+0x7f],1
  40b8cb:	xchg   edi,eax
  40b8cc:	inc    bx
  40b8ce:	push   esi
  40b8cf:	fidiv  DWORD PTR [edi+0x5c]
  40b8d2:	cmp    bh,dl
  40b8d4:	test   BYTE PTR [ecx+0x3d],dl
  40b8d7:	call   0x2a94a8cf
  40b8dc:	loope  0x40b915
  40b8de:	mov    BYTE PTR [ebp+0x38],bl
  40b8e1:	loop   0x40b937
  40b8e3:	xor    eax,0x5e9cae4e
  40b8e8:	inc    esp
  40b8e9:	fdiv   QWORD PTR [ebp+0x5bd92f27]
  40b8ef:	jbe    0x40b93c
  40b8f1:	jecxz  0x40b87e
  40b8f3:	inc    esi
  40b8f4:	inc    esp
  40b8f5:	cdq    
  40b8f6:	sub    bh,BYTE PTR [eax]
  40b8f8:	mov    ch,0xaf
  40b8fa:	shr    edi,1
  40b8fc:	js     0x40b8d5
  40b8fe:	and    al,0xcf
  40b900:	xchg   edx,eax
  40b901:	mov    BYTE PTR [eax-0x14d42752],ah
  40b907:	adc    al,0xc6
  40b909:	xchg   edi,eax
  40b90a:	inc    eax
  40b90b:	hlt    
  40b90c:	int3   
  40b90d:	jmp    0xaf83:0x68547ae6
  40b914:	pop    eax
  40b915:	fistp  QWORD PTR [esi-0x7f]
  40b918:	(bad)  
  40b91a:	adc    esi,ecx
  40b91c:	ret    
  40b91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b91e:	push   edi
  40b91f:	adc    eax,0x36d28a66
  40b924:	lods   al,BYTE PTR ds:[esi]
  40b925:	pop    edx
  40b926:	sti    
  40b927:	loope  0x40b977
  40b929:	es ret 
  40b92b:	jbe    0x40b8bd
  40b92d:	mov    ebx,0x859ef8f0
  40b932:	mov    dl,0x83
  40b934:	call   0x98df:0xb31dc070
  40b93b:	sub    DWORD PTR [edi],ecx
  40b93d:	mov    al,ds:0x42540a16
  40b942:	mov    dl,0xa3
  40b944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b945:	sub    al,0x1d
  40b947:	inc    edi
  40b948:	pop    edx
  40b949:	push   esp
  40b94a:	daa    
  40b94b:	out    0xa2,eax
  40b94d:	mov    edi,0x6289447d
  40b952:	mov    ah,BYTE PTR [esi+0x446c5a2]
  40b958:	inc    ebp
  40b959:	fisubr DWORD PTR [ecx]
  40b95b:	adc    DWORD PTR [eax],ebx
  40b95d:	stc    
  40b95e:	(bad)  
  40b95f:	mov    dh,0xc2
  40b961:	jns    0x40b90d
  40b963:	pusha  
  40b964:	sub    ebp,edx
  40b966:	outs   dx,BYTE PTR ds:[esi]
  40b967:	shr    dl,1
  40b969:	xor    cl,BYTE PTR [ebp-0xa51a765]
  40b96f:	jb     0x40b95f
  40b971:	fisttp DWORD PTR ds:0x9bfa2f42
  40b977:	xor    eax,0xb101d958
  40b97c:	xor    esi,esi
  40b97e:	adc    cl,BYTE PTR [eax+eax*2-0x5]
  40b982:	dec    esp
  40b983:	jne    0x40b976
  40b985:	and    eax,0x2a685f9e
  40b98a:	(bad)  
  40b98b:	xchg   esi,eax
  40b98c:	or     eax,0x9628c554
  40b991:	jno    0x40b99f
  40b993:	scas   eax,DWORD PTR es:[edi]
  40b994:	xchg   ebx,eax
  40b995:	cmp    edx,DWORD PTR [ebx+esi*2-0x6e]
  40b999:	mov    dh,0x90
  40b99b:	jl     0x40b95d
  40b99d:	mov    cl,0xa7
  40b99f:	lods   eax,DWORD PTR ds:[esi]
  40b9a0:	pop    ebx
  40b9a1:	jp     0x40b96d
  40b9a3:	mov    ebp,0xfd10919e
  40b9a8:	xor    dh,cl
  40b9aa:	add    al,0x4e
  40b9ac:	in     eax,0xf0
  40b9ae:	add    ah,BYTE PTR [ebx+0x26]
  40b9b1:	xchg   ebx,edi
  40b9b3:	and    ecx,DWORD PTR [edi+0x93dd761]
  40b9b9:	xor    eax,0x5419c824
  40b9be:	xor    al,0x75
  40b9c0:	mov    edi,0x4e334c0
  40b9c5:	ret    0x273a
  40b9c8:	dec    ebp
  40b9c9:	ds inc esp
  40b9cb:	in     eax,0x82
  40b9cd:	xchg   ebp,eax
  40b9ce:	jbe    0x40b9a6
  40b9d0:	lock xor eax,0x18ad438
  40b9d6:	mov    es:0xfb6c38bf,al
  40b9dc:	loope  0x40b99a
  40b9de:	pusha  
  40b9df:	dec    eax
  40b9e0:	inc    edx
  40b9e1:	sub    edx,0x3f
  40b9e4:	dec    edx
  40b9e5:	int    0x1
  40b9e7:	inc    ecx
  40b9e8:	cmc    
  40b9e9:	mov    esp,0xf5aec963
  40b9ee:	ret    
  40b9ef:	in     al,0x4
  40b9f1:	je     0x40b9b3
  40b9f3:	inc    esp
  40b9f4:	pop    ecx
  40b9f5:	pop    ss
  40b9f6:	in     al,dx
  40b9f7:	push   edx
  40b9f8:	addr16 jl 0x40ba0d
  40b9fb:	push   cs
  40b9fc:	push   ds
  40b9fd:	cli    
  40b9fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ff:	add    al,0x26
  40ba01:	sahf   
  40ba02:	in     al,dx
  40ba03:	push   ebx
  40ba04:	and    al,0xa3
  40ba06:	clc    
  40ba07:	std    
  40ba08:	cld    
  40ba09:	retf   0x2edf
  40ba0c:	fdiv   QWORD PTR [edx+ebx*1]
  40ba0f:	cmp    al,0x99
  40ba11:	mov    cl,0x53
  40ba13:	dec    esi
  40ba14:	ins    BYTE PTR es:[edi],dx
  40ba15:	push   ds
  40ba16:	adc    cl,dh
  40ba18:	lock call 0x12c6:0xa165d761
  40ba20:	pusha  
  40ba21:	adc    al,0x64
  40ba23:	test   BYTE PTR [ebp+0x89cd9b3],0xcc
  40ba2a:	xchg   edx,eax
  40ba2b:	jbe    0x40b9bb
  40ba2d:	adc    eax,0x3a753129
  40ba32:	xchg   esi,eax
  40ba33:	cmp    cl,BYTE PTR [ecx+0x2c]
  40ba36:	inc    edi
  40ba37:	shr    ah,cl
  40ba39:	mov    fs,WORD PTR ss:0x79575862
  40ba40:	(bad)  
  40ba41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba43:	js     0x40b9e2
  40ba45:	shl    BYTE PTR [esi+edx*2+0x3e],1
  40ba49:	(bad)  
  40ba4a:	xchg   esi,eax
  40ba4b:	jle    0x40ba7f
  40ba4d:	cli    
  40ba4e:	inc    ebp
  40ba4f:	jecxz  0x40bacf
  40ba51:	pushf  
  40ba52:	jb     0x40ba72
  40ba54:	fwait
  40ba55:	hlt    
  40ba56:	push   ss
  40ba57:	jle    0x40ba8e
  40ba59:	jmp    0x3b6b976b
  40ba5e:	sub    eax,0x479077ab
  40ba63:	lahf   
  40ba64:	dec    ebp
  40ba65:	fld    TBYTE PTR [eax+0x4276a928]
  40ba6b:	neg    DWORD PTR [edx+0x7f]
  40ba6e:	mov    cl,0xcf
  40ba70:	pop    ds
  40ba71:	jne    0x40ba29
  40ba73:	(bad)  
  40ba74:	je     0x40ba97
  40ba76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba77:	lods   al,BYTE PTR ds:[esi]
  40ba78:	mov    al,ds:0x67af1046
  40ba7d:	imul   esp,DWORD PTR [ecx-0x347db89d],0xfcfcdd45
  40ba87:	(bad)  
  40ba88:	rol    esp,1
  40ba8a:	push   edi
  40ba8b:	sub    edx,eax
  40ba8d:	or     edx,edx
  40ba8f:	stos   BYTE PTR es:[edi],al
  40ba90:	pop    ds
  40ba91:	hlt    
  40ba92:	(bad)  
  40ba93:	icebp  
  40ba94:	sti    
  40ba95:	retf   0xffb
  40ba98:	xor    DWORD PTR [ebp+0x1e],eax
  40ba9b:	jmp    0x40ba46
  40ba9d:	jp     0x40baad
  40ba9f:	inc    eax
  40baa0:	adc    BYTE PTR [esi+0x755efda],dl
  40baa6:	jnp    0x40bad5
  40baa8:	xchg   ebx,eax
  40baa9:	repz fld TBYTE PTR gs:[edx]
  40baad:	jecxz  0x40ba63
  40baaf:	arpl   WORD PTR [edi+0x7a88ee44],ax
  40bab5:	(bad)  
  40bab6:	mov    dl,0x61
  40bab8:	xchg   esp,eax
  40bab9:	sbb    edi,edi
  40babb:	push   0x6af869f4
  40bac0:	in     al,0xea
  40bac2:	js     0x40babb
  40bac4:	js     0x40ba4b
  40bac6:	and    al,0x42
  40bac8:	sbb    al,0x40
  40baca:	xchg   edi,eax
  40bacb:	mov    bl,0x6
  40bacd:	iret   
  40bace:	cs and dh,dh
  40bad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad2:	xor    bl,ch
  40bad4:	cmp    al,0xe4
  40bad6:	aaa    
  40bad7:	jg     0x40ba87
  40bad9:	test   eax,0xd059c978
  40bade:	shr    BYTE PTR [eax-0x2327701],0x8d
  40bae5:	shl    DWORD PTR [edi+0x5],cl
  40bae8:	sub    BYTE PTR [ecx],ch
  40baea:	rcr    dh,1
  40baec:	cmp    BYTE PTR [eax-0x2d05a223],dl
  40baf2:	fdivrp st(2),st
  40baf4:	dec    edx
  40baf5:	xchg   esp,eax
  40baf6:	loope  0x40baae
  40baf8:	hlt    
  40baf9:	aad    0xe6
  40bafb:	push   fs
  40bafd:	les    edx,FWORD PTR [ebx+0x6417b812]
  40bb03:	add    DWORD PTR [eax],esi
  40bb05:	fsub   DWORD PTR [edi+edx*1-0x61]
  40bb09:	mov    al,ds:0x7de79e11
  40bb0e:	push   ds
  40bb0f:	fld    QWORD PTR [eax]
  40bb11:	enter  0xd2b2,0xf9
  40bb15:	cmp    DWORD PTR [eax+0x27],ebx
  40bb18:	jl     0x40baa9
  40bb1a:	sbb    DWORD PTR [ebx+0x2ed9fd7d],eax
  40bb20:	xchg   ecx,eax
  40bb21:	les    esi,FWORD PTR [ebx]
  40bb23:	rol    bh,1
  40bb25:	jno    0x40bafd
  40bb27:	div    BYTE PTR [ebx+0x6b27877b]
  40bb2d:	inc    esi
  40bb2e:	pushf  
  40bb2f:	(bad)  
  40bb30:	das    
  40bb31:	dec    edx
  40bb32:	imul   esp,DWORD PTR [eax],0x7a7b1d2e
  40bb38:	pop    ecx
  40bb39:	pop    ebp
  40bb3a:	pop    es
  40bb3b:	sbb    DWORD PTR [eax+edx*4+0x5f],edx
  40bb3f:	dec    esi
  40bb40:	imul   eax,DWORD PTR [ecx+0x7e],0xfffffffc
  40bb44:	retf   
  40bb45:	xlat   BYTE PTR ds:[ebx]
  40bb46:	xor    esi,DWORD PTR [ebp+0x3c015f2f]
  40bb4c:	or     dl,cl
  40bb4e:	lods   al,BYTE PTR ds:[esi]
  40bb4f:	xor    eax,0xc4f15b94
  40bb54:	dec    edi
  40bb55:	and    DWORD PTR [esi+ebx*1-0x37fdde3c],ebp
  40bb5c:	mov    cl,0x0
  40bb5e:	in     eax,0xa7
  40bb60:	sar    BYTE PTR [ecx+0x39a7a1c7],cl
  40bb66:	sub    eax,0x81f519d8
  40bb6b:	stc    
  40bb6c:	cmp    BYTE PTR [edx+ebp*2],dh
  40bb6f:	or     edx,DWORD PTR [ecx-0xa]
  40bb72:	xchg   esp,eax
  40bb73:	mov    BYTE PTR [edi-0x2cc42c9c],bh
  40bb79:	jns    0x40bb40
  40bb7b:	push   esp
  40bb7c:	or     BYTE PTR [ecx-0x60],0xc5
  40bb80:	lds    edx,FWORD PTR [ebx+0x5f]
  40bb83:	jmp    0x23b3:0x31001d5b
  40bb8a:	(bad)  
  40bb8b:	in     eax,0x40
  40bb8d:	xchg   esi,eax
  40bb8e:	mov    ebp,DWORD PTR [eax]
  40bb90:	sbb    al,0xd7
  40bb92:	(bad)  
  40bb94:	pop    esp
  40bb95:	inc    edi
  40bb96:	inc    ebx
  40bb97:	fwait
  40bb98:	stos   DWORD PTR es:[edi],eax
  40bb99:	and    edx,DWORD PTR [eax-0x34de5317]
  40bb9f:	clc    
  40bba0:	sbb    eax,edx
  40bba2:	xlat   BYTE PTR ds:[ebx]
  40bba3:	inc    ecx
  40bba4:	cwde   
  40bba5:	adc    eax,0xd71529e
  40bbaa:	or     al,al
  40bbac:	push   eax
  40bbad:	jmp    0x40bbe1
  40bbaf:	sbb    edi,esp
  40bbb1:	popa   
  40bbb2:	outs   dx,DWORD PTR ds:[esi]
  40bbb3:	jecxz  0x40bb45
  40bbb5:	jnp    0x40bba3
  40bbb7:	js     0x40bbcf
  40bbb9:	xchg   edx,eax
  40bbba:	fidiv  DWORD PTR [ebx+eiz*1-0x2d16c624]
  40bbc1:	mov    bl,0xb7
  40bbc3:	jnp    0x40bb8c
  40bbc5:	inc    eax
  40bbc6:	push   cs
  40bbc7:	cmp    BYTE PTR [ecx+0x2278360],ah
  40bbcd:	fisttp DWORD PTR [edi+edi*2-0x53]
  40bbd1:	out    0xf8,eax
  40bbd3:	push   eax
  40bbd4:	enter  0xab2c,0x56
  40bbd8:	sbb    ebx,esi
  40bbda:	mov    ds:0xd1db5840,al
  40bbdf:	push   ss
  40bbe0:	sbb    BYTE PTR [esi],ch
  40bbe2:	test   BYTE PTR [eax],0xad
  40bbe5:	dec    ebp
  40bbe6:	fucompp 
  40bbe8:	sti    
  40bbe9:	test   DWORD PTR [edi+eax*8+0x7bda2ccd],0x86590809
  40bbf4:	or     eax,0x5aedcd8b
  40bbf9:	jo     0x40bb9e
  40bbfb:	sahf   
  40bbfc:	ins    DWORD PTR es:[edi],dx
  40bbfd:	sub    BYTE PTR [ecx+0x47],ch
  40bc00:	aad    0x3
  40bc02:	dec    edx
  40bc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc04:	dec    edi
  40bc05:	fisub  DWORD PTR [esi]
  40bc07:	xor    DWORD PTR [esi+0x5a6707fe],0xffffff9d
  40bc0e:	pop    esp
  40bc0f:	adc    eax,esp
  40bc11:	les    ecx,FWORD PTR [ecx+ecx*8-0x2]
  40bc15:	jl     0x40bc65
  40bc17:	outs   dx,DWORD PTR ds:[esi]
  40bc18:	push   0x0
  40bc1a:	scas   eax,DWORD PTR es:[edi]
  40bc1b:	pop    edx
  40bc1c:	in     eax,0xf9
  40bc1e:	hlt    
  40bc1f:	adc    eax,0x35242f34
  40bc24:	mov    eax,0x41035f1a
  40bc29:	call   0xcf0a:0x2f947314
  40bc30:	pop    es
  40bc31:	stc    
  40bc32:	adc    eax,0x9f870b5f
  40bc37:	jo     0x40bc8e
  40bc39:	push   esp
  40bc3a:	lea    ecx,[eax+0x3]
  40bc3d:	pop    ds
  40bc3e:	mov    bh,0x2
  40bc40:	sar    DWORD PTR [eax-0x485b094],1
  40bc46:	inc    eax
  40bc47:	scas   al,BYTE PTR es:[edi]
  40bc48:	push   esp
  40bc49:	in     al,0x4a
  40bc4b:	ret    
  40bc4c:	sub    eax,0x41f88e9
  40bc51:	bound  edi,QWORD PTR [edx-0x67]
  40bc54:	dec    esp
  40bc55:	test   al,0x1f
  40bc57:	loop   0x40bcc6
  40bc59:	add    ch,BYTE PTR [esi+0x57]
  40bc5c:	mov    esp,0x7152a766
  40bc61:	mov    ebx,0x3987ad7a
  40bc66:	or     DWORD PTR [eax-0x33],esp
  40bc69:	cmp    eax,0xd3a5d3a5
  40bc6e:	loop   0x40bc9c
  40bc70:	mov    dh,0xb5
  40bc72:	jmp    0x40bc5c
  40bc74:	xlat   BYTE PTR ds:[ebx]
  40bc75:	out    dx,eax
  40bc76:	inc    esp
  40bc77:	mov    ?,WORD PTR [ecx+0x70f2e398]
  40bc7d:	arpl   WORD PTR [ecx+edx*1],ax
  40bc80:	dec    ebx
  40bc81:	or     bh,ah
  40bc83:	rcl    BYTE PTR [edi+edx*8],1
  40bc86:	mov    esi,0x76c43f75
  40bc8b:	adc    DWORD PTR [esi],0x2b
  40bc8e:	pushf  
  40bc8f:	pop    edi
  40bc90:	adc    al,0x77
  40bc92:	sti    
  40bc93:	lods   eax,DWORD PTR ds:[esi]
  40bc94:	jbe    0x40bcc1
  40bc96:	out    dx,eax
  40bc97:	sbb    eax,0xd8ed1124
  40bc9c:	sub    eax,0xbfeec701
  40bca1:	(bad)  
  40bca2:	xor    DWORD PTR [edi],esi
  40bca4:	(bad)  
  40bca5:	ja     0x40bce7
  40bca7:	pop    ebp
  40bca8:	ss (bad) 
  40bcaa:	stc    
  40bcab:	ret    0x5407
  40bcae:	jle    0x40bc51
  40bcb0:	push   edi
  40bcb1:	inc    ebx
  40bcb2:	cmp    esp,ecx
  40bcb4:	test   esi,ecx
  40bcb6:	scas   eax,DWORD PTR es:[edi]
  40bcb7:	xchg   esi,ebx
  40bcb9:	popa   
  40bcba:	or     eax,ecx
  40bcbc:	jb     0x40bc4a
  40bcbe:	in     eax,dx
  40bcbf:	shl    DWORD PTR [ecx+0x25],1
  40bcc2:	mov    ah,bh
  40bcc4:	ds jecxz 0x40bd37
  40bcc7:	cdq    
  40bcc8:	and    al,0x74
  40bcca:	sbb    BYTE PTR [ecx+0x33421ff9],dl
  40bcd0:	hlt    
  40bcd1:	aad    0x10
  40bcd3:	bound  esp,QWORD PTR [eax+0x34a7fa0b]
  40bcd9:	sbb    BYTE PTR [edx-0x79],bl
  40bcdc:	in     eax,0x3f
  40bcde:	nop
  40bcdf:	add    al,0xb0
  40bce1:	aaa    
  40bce2:	aam    0x4d
  40bce4:	daa    
  40bce5:	xchg   edi,eax
  40bce6:	cs nop
  40bce8:	pop    ebx
  40bce9:	mov    al,ds:0x2e97301
  40bcee:	and    eax,0xe363c2f1
  40bcf3:	and    ecx,eax
  40bcf5:	mov    al,ds:0x6fb7ac3b
  40bcfb:	mov    ebp,0xa13cf17
  40bd00:	or     eax,0xd8c1f71f
  40bd05:	pop    edi
  40bd06:	dec    ecx
  40bd07:	mov    dh,0x82
  40bd09:	js     0x40bd23
  40bd0b:	outs   dx,BYTE PTR ds:[esi]
  40bd0c:	sbb    eax,0xecd14633
  40bd11:	xchg   edi,eax
  40bd12:	add    esp,DWORD PTR [ecx+0x4b249ee7]
  40bd18:	das    
  40bd19:	and    BYTE PTR [edi-0x190536bf],0x2d
  40bd20:	jne    0x40bd5e
  40bd22:	push   0xd6e3797e
  40bd27:	fs mov ch,0x4
  40bd2a:	cld    
  40bd2b:	sahf   
  40bd2c:	inc    eax
  40bd2d:	ja     0x40bdac
  40bd2f:	xor    ebp,DWORD PTR [eax]
  40bd31:	or     DWORD PTR [edx+0x52],esi
  40bd34:	xchg   edi,eax
  40bd35:	mov    dl,0x2c
  40bd37:	add    al,BYTE PTR [eax+0x64]
  40bd3a:	loop   0x40bd2e
  40bd3c:	push   ebp
  40bd3d:	imul   esp,ebp,0xd
  40bd40:	adc    BYTE PTR [eax],ah
  40bd42:	pop    esp
  40bd43:	outs   dx,BYTE PTR ds:[esi]
  40bd44:	scas   al,BYTE PTR es:[edi]
  40bd45:	xchg   esp,eax
  40bd46:	and    eax,DWORD PTR [edi]
  40bd48:	pop    esp
  40bd49:	ficomp DWORD PTR [edi]
  40bd4b:	add    esi,DWORD PTR [esp+ecx*8-0xd]
  40bd4f:	outs   dx,BYTE PTR ds:[esi]
  40bd50:	push   eax
  40bd51:	pop    ebp
  40bd52:	cmp    al,0x10
  40bd54:	xchg   DWORD PTR [eax-0x2c0000a],esp
  40bd5a:	sti    
  40bd5b:	jmp    0xc78036c1
  40bd60:	or     eax,0xfb501e02
  40bd65:	push   esi
  40bd66:	jns    0x40bcf7
  40bd68:	iret   
  40bd69:	cmc    
  40bd6a:	cmp    BYTE PTR [esi+ebx*2],dh
  40bd6d:	xor    DWORD PTR [edx],esi
  40bd6f:	jns    0x40bdcc
  40bd71:	ds xor bl,0xf1
  40bd75:	(bad)  
  40bd76:	push   edx
  40bd78:	nop
  40bd79:	into   
  40bd7a:	pushf  
  40bd7b:	icebp  
  40bd7c:	fst    DWORD PTR [ecx+0x7f]
  40bd7f:	pop    ds
  40bd80:	test   BYTE PTR [edx],0x8f
  40bd83:	pop    ss
  40bd84:	lods   eax,DWORD PTR ds:[esi]
  40bd85:	or     BYTE PTR [edi+0x768ea565],cl
  40bd8b:	xchg   esi,eax
  40bd8c:	test   esp,eax
  40bd8e:	mov    ecx,0x8faf6c87
  40bd93:	cmp    al,0x6
  40bd95:	fimul  DWORD PTR [ebp-0xb]
  40bd98:	dec    ecx
  40bd99:	pop    edx
  40bd9a:	test   eax,0x5ba5abc3
  40bd9f:	in     al,dx
  40bda0:	int    0x76
  40bda2:	adc    BYTE PTR [ecx+esi*4-0x240cff8c],dl
  40bda9:	push   ss
  40bdaa:	and    eax,0x39780d29
  40bdaf:	jne    0x40bd8a
  40bdb1:	addr16 mov bh,0x57
  40bdb4:	fwait
  40bdb5:	add    BYTE PTR [eax],ah
  40bdb7:	and    eax,0x9774eb49
  40bdbc:	lock fist WORD PTR ds:0x635a5ae2
  40bdc3:	ds ins BYTE PTR es:[edi],dx
  40bdc5:	jp     0x40bd59
  40bdc7:	push   eax
  40bdc8:	cs pop ebp
  40bdca:	fistp  QWORD PTR [esp+esi*4+0x78]
  40bdce:	out    0x91,eax
  40bdd0:	(bad)  ds:[edi+0x4b]
  40bdd4:	push   cs
  40bdd5:	nop
  40bdd6:	ins    BYTE PTR es:[edi],dx
  40bdd7:	mov    al,0x79
  40bdd9:	fdivp  st(1),st
  40bddb:	cmc    
  40bddc:	push   ecx
  40bddd:	xor    BYTE PTR [edx],dh
  40bddf:	popf   
  40bde0:	mov    bh,0x49
  40bde2:	popf   
  40bde3:	jns    0x40bd95
  40bde5:	aas    
  40bde6:	xchg   edi,eax
  40bde7:	shl    DWORD PTR [edi-0x5b],1
  40bdea:	sub    BYTE PTR [edi+0x21],bh
  40bded:	mov    ch,0x40
  40bdef:	stos   BYTE PTR es:[edi],al
  40bdf0:	or     edi,DWORD PTR [ebx-0x2c19ee2f]
  40bdf6:	jmp    0x3b5d:0x50e83b73
  40bdfd:	xor    ch,BYTE PTR [ecx]
  40bdff:	xchg   esp,eax
  40be00:	pop    ss
  40be01:	push   es
  40be02:	ins    DWORD PTR es:[edi],dx
  40be03:	sub    DWORD PTR ds:0x3e1c8cdc,esi
  40be09:	mov    ds:0xba295847,eax
  40be0e:	stc    
  40be0f:	jno    0x40bda7
  40be11:	push   ecx
  40be12:	inc    edi
  40be13:	gs ret 0xbabf
  40be17:	loope  0x40bdd9
  40be19:	lods   al,BYTE PTR ds:[esi]
  40be1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be1b:	push   edi
  40be1c:	xchg   edx,eax
  40be1d:	sbb    esp,edi
  40be1f:	pop    ecx
  40be20:	ja     0x40be3a
  40be22:	ror    BYTE PTR [ebp+0x4f7197be],0xd0
  40be29:	push   esi
  40be2a:	scas   eax,DWORD PTR es:[edi]
  40be2b:	lock outs dx,BYTE PTR ds:[esi]
  40be2d:	mov    esi,0xe65ecd94
  40be32:	dec    eax
  40be33:	pop    ss
  40be34:	mov    BYTE PTR [ebx-0x11],bl
  40be37:	into   
  40be38:	mov    dh,0x2d
  40be3a:	ror    DWORD PTR [edi+0x7e],cl
  40be3d:	pop    es
  40be3e:	dec    edi
  40be3f:	not    DWORD PTR [eax-0x8952738]
  40be45:	ret    0x29ce
  40be48:	pop    esi
  40be49:	mov    ch,0xd1
  40be4b:	mov    ds:0xdf2b65a0,eax
  40be50:	bound  ebx,QWORD PTR [ebx-0x13]
  40be53:	cli    
  40be54:	or     edi,DWORD PTR ds:0x3a361f8d
  40be5a:	inc    esp
  40be5b:	into   
  40be5c:	fmul   st,st(7)
  40be5e:	pop    edi
  40be5f:	sar    DWORD PTR [ebp-0x37f94978],0x3a
  40be66:	dec    ebp
  40be67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be68:	pop    ecx
  40be69:	addr16 hlt 
  40be6b:	mov    bh,bl
  40be6d:	int3   
  40be6e:	cmp    eax,esp
  40be70:	adc    DWORD PTR [edi-0x5d],0x3b77a27e
  40be77:	neg    BYTE PTR [edx-0x6207d8c8]
  40be7d:	pushf  
  40be7e:	div    DWORD PTR [edi-0x2c]
  40be81:	pop    edx
  40be82:	lods   eax,DWORD PTR ds:[esi]
  40be83:	mov    edx,0xeb6e777
  40be88:	sbb    edi,0x96223dda
  40be8e:	sub    eax,0x33002677
  40be93:	mov    ebx,0xbd44128a
  40be98:	aaa    
  40be99:	dec    ebp
  40be9a:	addr16 jnp 0x40bec2
  40be9d:	outs   dx,DWORD PTR ds:[esi]
  40be9e:	fs ss adc al,0x32
  40bea2:	pop    ebp
  40bea3:	push   esi
  40bea4:	popa   
  40bea5:	or     eax,0xf1dde518
  40beaa:	cmp    DWORD PTR [edx-0x29],ebp
  40bead:	popa   
  40beae:	mov    esp,cs
  40beb0:	and    edi,DWORD PTR [eax]
  40beb2:	mov    ds:0x68059652,al
  40beb8:	ins    BYTE PTR es:[edi],dx
  40beb9:	jnp    0x40bf26
  40bebb:	test   BYTE PTR [ebx+0x6b],0x9d
  40bebf:	inc    esp
  40bec0:	retf   
  40bec1:	test   eax,0xde3e4e26
  40bec6:	sbb    ebx,ebp
  40bec8:	fnsave [edi]
  40beca:	and    BYTE PTR [esi+0x5],0x76
  40bece:	shr    BYTE PTR [edx-0x28],1
  40bed1:	pop    ss
  40bed2:	pop    es
  40bed3:	cmp    ecx,DWORD PTR [edx-0x5]
  40bed6:	fsubp  st(3),st
  40bed8:	jne    0x40bf1f
  40beda:	push   esi
  40bedb:	add    DWORD PTR [esi-0x629f8d11],edx
  40bee1:	sbb    DWORD PTR [ebp-0x6e],edx
  40bee4:	(bad)  
  40bee5:	mov    bh,0x25
  40bee7:	sbb    BYTE PTR [ecx],bh
  40bee9:	in     eax,dx
  40beea:	mov    edi,0x3ad56803
  40beef:	push   ecx
  40bef0:	dec    ecx
  40bef1:	aam    0xf6
  40bef3:	js     0x40bf3d
  40bef5:	inc    edi
  40bef6:	fsub   st,st(1)
  40bef8:	xor    dl,BYTE PTR [edi+0x3802d931]
  40befe:	mov    ebp,0xddd5afca
  40bf03:	mov    dh,BYTE PTR [eax+0x5b2f4fb]
  40bf09:	cmc    
  40bf0a:	ret    
  40bf0b:	fwait
  40bf0c:	jo     0x40bf46
  40bf0e:	(bad)  
  40bf0f:	data16 cmp al,bl
  40bf12:	mov    edi,esp
  40bf14:	repz cmp eax,0xfb580883
  40bf1a:	fisttp DWORD PTR [ebx]
  40bf1c:	addr16 push edi
  40bf1e:	or     bh,BYTE PTR [edx]
  40bf20:	jecxz  0x40bf5c
  40bf22:	pop    esp
  40bf23:	loope  0x40bf25
  40bf25:	jle    0x40bf0d
  40bf27:	iret   
  40bf28:	cmp    bl,BYTE PTR [edx]
  40bf2a:	sbb    al,0xb0
  40bf2c:	sbb    eax,0x85f506da
  40bf31:	test   ebx,0x46640cbf
  40bf37:	xor    DWORD PTR [edi],ebx
  40bf39:	loop   0x40bf3d
  40bf3b:	aam    0xa1
  40bf3d:	jb     0x40bfb9
  40bf3f:	ins    BYTE PTR es:[edi],dx
  40bf40:	cmp    esi,DWORD PTR [ecx+0x4360910b]
  40bf46:	mov    eax,ds:0xe7d59236
  40bf4b:	mov    ds:0x560cf9c3,eax
  40bf50:	lods   eax,DWORD PTR ds:[esi]
  40bf51:	mov    dh,BYTE PTR ds:0x6ae917b3
  40bf57:	inc    esi
  40bf58:	push   es
  40bf59:	mov    esi,0xb5b54c71
  40bf5e:	or     ecx,DWORD PTR [ebp+0x19]
  40bf61:	jbe    0x40bf72
  40bf63:	xchg   ebp,eax
  40bf64:	push   edx
  40bf65:	mov    ebp,0x9b2c9306
  40bf6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf6b:	test   al,0xbe
  40bf6d:	scas   al,BYTE PTR es:[edi]
  40bf6e:	fs mov bl,0xce
  40bf71:	cld    
  40bf72:	cmp    eax,0xac2feee0
  40bf77:	jae    0x40bf8c
  40bf79:	cmp    ch,BYTE PTR [ecx]
  40bf7b:	sar    ch,0x3b
  40bf7e:	push   eax
  40bf7f:	imul   esp,DWORD PTR [edi],0x8cdb6ba5
  40bf85:	sub    DWORD PTR [ebp+0x52],ebp
  40bf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf89:	xor    eax,0x890d4e
  40bf8e:	mov    ebp,0xe35c3ea8
  40bf93:	mov    dl,0x81
  40bf95:	loope  0x40c010
  40bf97:	out    0xbf,al
  40bf99:	sbb    ecx,edi
  40bf9b:	fnstsw WORD PTR [edi+0x7d5594d9]
  40bfa1:	ss push esp
  40bfa3:	rcr    BYTE PTR [esi],1
  40bfa5:	inc    edi
  40bfa6:	out    0x61,eax
  40bfa8:	pushf  
  40bfa9:	(bad)  
  40bfaa:	loope  0x40bf7b
  40bfac:	aaa    
  40bfad:	arpl   WORD PTR [edx+edx*8+0x49],cx
  40bfb1:	xchg   edx,eax
  40bfb2:	mov    cl,0xaa
  40bfb4:	fwait
  40bfb5:	pusha  
  40bfb6:	(bad)  
  40bfb7:	addr16 adc eax,0x9715da33
  40bfbd:	arpl   dx,si
  40bfbf:	jecxz  0x40bf82
  40bfc1:	jl     0x40bf48
  40bfc3:	ret    
  40bfc4:	sbb    bl,BYTE PTR [ecx+0x7b2e2d21]
  40bfca:	fdiv   QWORD PTR [esi]
  40bfcc:	cmp    al,0x94
  40bfce:	mov    ds:0x1d4a7f,eax
  40bfd3:	mov    ebx,esp
  40bfd5:	or     al,0xcc
  40bfd7:	xchg   DWORD PTR [eax+eiz*8-0x3879a78d],edx
  40bfde:	ret    0xa987
  40bfe1:	fs jp  0x40c01b
  40bfe4:	in     eax,dx
  40bfe5:	cld    
  40bfe6:	imul   edx,DWORD PTR [edi],0xaf905920
  40bfec:	or     eax,0x57183e91
  40bff1:	mov    ebx,0xdafe4b82
  40bff6:	inc    esp
  40bff7:	push   edx
  40bff8:	pop    edx
  40bff9:	mov    WORD PTR [edi-0x67754d0],?
  40bfff:	repz or ebp,edx
  40c002:	xor    eax,0x7b2dbfe8
  40c007:	leave  
  40c008:	pop    eax
  40c009:	fmul   QWORD PTR ds:0x9cd6dcd2
  40c00f:	arpl   WORD PTR [edi],dx
  40c011:	ds cmp bh,bl
  40c014:	mov    BYTE PTR [eax],ah
  40c016:	ret    
  40c017:	std    
  40c018:	aad    0xd8
  40c01a:	or     cl,BYTE PTR ds:0x8323d2be
  40c020:	or     BYTE PTR [esi],ah
  40c022:	and    ebx,ebp
  40c024:	xor    eax,0x11a1a54a
  40c029:	ja     0x40c0a1
  40c02b:	inc    esp
  40c02c:	mov    al,ds:0xfd71da5
  40c031:	stos   DWORD PTR es:[edi],eax
  40c032:	repz pop ds
  40c034:	outs   dx,DWORD PTR ds:[esi]
  40c035:	jmp    0x9bf0a15b
  40c03a:	cmp    eax,0x2c540853
  40c03f:	out    dx,al
  40c040:	ret    
  40c041:	adc    dl,dl
  40c043:	in     al,0x4a
  40c045:	inc    esi
  40c046:	iret   
  40c047:	adc    DWORD PTR [ecx-0x80],esp
  40c04a:	in     eax,dx
  40c04b:	dec    ecx
  40c04c:	xchg   edx,eax
  40c04d:	push   esp
  40c04e:	sahf   
  40c04f:	fild   DWORD PTR [ebx]
  40c051:	pushf  
  40c052:	outs   dx,BYTE PTR ds:[esi]
  40c053:	jmp    0xca2d:0x6f082d2e
  40c05a:	lods   al,BYTE PTR ds:[esi]
  40c05b:	adc    eax,0x12a36181
  40c060:	es aam 0x15
  40c063:	leave  
  40c064:	in     al,dx
  40c065:	hlt    
  40c066:	ins    DWORD PTR es:[edi],dx
  40c067:	inc    edx
  40c068:	jo     0x40c0b6
  40c06a:	outs   dx,DWORD PTR ds:[esi]
  40c06b:	retf   
  40c06c:	jp     0x40c0b5
  40c06e:	or     eax,ebx
  40c070:	clc    
  40c071:	sbb    BYTE PTR [ebp-0x36],bl
  40c074:	push   ebx
  40c075:	xchg   ebp,eax
  40c076:	add    eax,0x76bc825f
  40c07b:	rcr    dl,cl
  40c07d:	sar    BYTE PTR [edx],cl
  40c07f:	mov    esp,0xe1231adf
  40c084:	add    eax,0x4afd230d
  40c089:	popf   
  40c08a:	scas   eax,DWORD PTR es:[edi]
  40c08b:	or     al,0x9e
  40c08d:	dec    edi
  40c08e:	jp     0x40c07f
  40c090:	add    dh,dl
  40c092:	fcomp  QWORD PTR [esi]
  40c094:	iret   
  40c095:	dec    esi
  40c096:	inc    eax
  40c097:	inc    edi
  40c098:	int3   
  40c099:	stos   BYTE PTR es:[edi],al
  40c09a:	rol    BYTE PTR [ebx-0x1c],0xeb
  40c09e:	pop    ecx
  40c09f:	cmp    esi,DWORD PTR ds:0xc9fe4407
  40c0a5:	inc    esi
  40c0a6:	daa    
  40c0a7:	int    0x57
  40c0a9:	xlat   BYTE PTR ds:[ebx]
  40c0aa:	lea    edx,[ebx+0x44]
  40c0ad:	stos   BYTE PTR es:[edi],al
  40c0ae:	call   0x87cfa1c6
  40c0b3:	inc    esp
  40c0b4:	cmp    cl,BYTE PTR [esi+edi*4]
  40c0b7:	or     ebp,ebx
  40c0b9:	push   esp
  40c0ba:	icebp  
  40c0bb:	test   DWORD PTR [ecx-0x36],ecx
  40c0be:	sub    ebp,edx
  40c0c0:	pop    edi
  40c0c1:	adc    BYTE PTR [ebp+0x578e67ee],al
  40c0c7:	pop    edx
  40c0c8:	xor    BYTE PTR [edi-0x5c],al
  40c0cb:	mov    DWORD PTR [eax-0x41],eax
  40c0ce:	int3   
  40c0cf:	imul   esp,DWORD PTR ds:0x815d1c01,0x5b
  40c0d6:	mov    edi,0xd265a3aa
  40c0db:	and    DWORD PTR [ebx+0x66],ebx
  40c0de:	or     al,BYTE PTR [ecx-0x7c]
  40c0e1:	loope  0x40c087
  40c0e3:	push   ds
  40c0e4:	pop    ebp
  40c0e5:	xchg   edx,eax
  40c0e6:	fstp   st(1)
  40c0e8:	imul   ebp,DWORD PTR [ecx+esi*1-0x43e2172f],0x289dab65
  40c0f3:	out    dx,eax
  40c0f4:	pop    ebx
  40c0f5:	jae    0x40c160
  40c0f7:	push   ebp
  40c0f8:	xor    eax,0x4bc9fd45
  40c0fd:	push   esi
  40c0fe:	(bad)  
  40c0ff:	(bad)  
  40c100:	push   ebx
  40c101:	mov    ebx,0x411ace9c
  40c106:	call   0xcf30431f
  40c10b:	xchg   DWORD PTR [edi-0x7e74dbf],ebx
  40c111:	aam    0x80
  40c113:	adc    eax,DWORD PTR [esi-0x5bb30570]
  40c119:	or     DWORD PTR [ecx],eax
  40c11b:	test   BYTE PTR [esi],cl
  40c11d:	fcmovnbe st,st(5)
  40c11f:	and    eax,0xfcc3587e
  40c124:	pop    ss
  40c125:	mov    eax,ds:0x14a9e4ca
  40c12a:	mov    al,0x82
  40c12c:	pop    ecx
  40c12d:	lock mov ds:0xb6d3731e,eax
  40c133:	aam    0x38
  40c135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c136:	push   ebx
  40c137:	xor    al,0x93
  40c139:	(bad)  
  40c13b:	and    BYTE PTR [ebx-0x33a786f0],0x28
  40c142:	addr16 cld 
  40c144:	mov    DWORD PTR [ebp+0x35],0xea452b91
  40c14b:	arpl   bx,si
  40c14d:	jb     0x40c179
  40c14f:	adc    BYTE PTR [ebp-0x312ae78c],ch
  40c155:	mov    edx,0xa2235d88
  40c15a:	leave  
  40c15b:	ss jp  0x40c194
  40c15e:	mov    cs,WORD PTR [ebx+ebx*1+0x4c]
  40c162:	mov    ecx,0x96a6398c
  40c167:	pop    es
  40c168:	sbb    BYTE PTR [eax+0x26],dh
  40c16b:	sub    DWORD PTR [ebx+esi*1],0x7f064aca
  40c172:	or     ah,BYTE PTR [ebx+0x2d]
  40c175:	dec    edi
  40c176:	pop    edi
  40c177:	cmp    esi,DWORD PTR [edi+0x14]
  40c17a:	arpl   WORD PTR [esi-0x2c],sp
  40c17d:	and    DWORD PTR [eax+0x5f788d24],esp
  40c183:	xchg   BYTE PTR [eax-0xdc69983],dh
  40c189:	aaa    
  40c18a:	adc    al,0x25
  40c18c:	cld    
  40c18d:	mov    esp,DWORD PTR [ebp-0x1f]
  40c190:	sub    cl,BYTE PTR [eax]
  40c192:	jl     0x40c175
  40c194:	pop    ebp
  40c195:	(bad)  [ebp+0x31ba5f4e]
  40c19b:	idiv   DWORD PTR [eax+0x6]
  40c19e:	mov    cl,0x4c
  40c1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a1:	sbb    esi,DWORD PTR [edi-0x5f]
  40c1a4:	add    ebx,esp
  40c1a6:	shr    BYTE PTR [edx+0x2a],1
  40c1a9:	inc    edx
  40c1aa:	push   esp
  40c1ab:	add    DWORD PTR [edx+edi*8],edx
  40c1ae:	and    bh,BYTE PTR [ebx-0x69741ef5]
  40c1b4:	inc    eax
  40c1b5:	xor    ebp,DWORD PTR [eax+esi*1]
  40c1b8:	sar    ebp,cl
  40c1ba:	push   ecx
  40c1bb:	ins    BYTE PTR es:[edi],dx
  40c1bc:	pop    ebx
  40c1bd:	push   ecx
  40c1be:	add    bh,dl
  40c1c0:	popa   
  40c1c1:	clc    
  40c1c2:	mov    ds:0xcb96359c,eax
  40c1c7:	ja     0x40c1e8
  40c1c9:	dec    esi
  40c1ca:	push   ds
  40c1cb:	sbb    BYTE PTR [edi],0x85
  40c1ce:	xor    BYTE PTR [ebp+0x0],ah
  40c1d1:	fbstp  TBYTE PTR [esi+0x49937a94]
  40c1d7:	adc    al,0x75
  40c1d9:	es xchg ecx,eax
  40c1db:	es dec ecx
  40c1dd:	pop    ds
  40c1de:	lods   eax,DWORD PTR ds:[esi]
  40c1df:	push   edx
  40c1e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1e1:	imul   ebp,DWORD PTR [eiz*1-0x401f7c13],0xaed3b055
  40c1ec:	cmc    
  40c1ed:	mov    eax,esp
  40c1ef:	daa    
  40c1f0:	aaa    
  40c1f1:	xchg   bh,ch
  40c1f3:	mul    DWORD PTR [eax+edx*2]
  40c1f6:	fistp  QWORD PTR [edi+0x2e]
  40c1f9:	loop   0x40c203
  40c1fb:	push   0xfad7f0ac
  40c200:	or     DWORD PTR [edx+0x3c],edx
  40c203:	shl    DWORD PTR [edx+esi*2],cl
  40c206:	ss push es
  40c208:	sub    eax,0xbf0a0721
  40c20d:	mov    bh,0x72
  40c20f:	inc    ecx
  40c210:	mov    al,0xe4
  40c212:	imul   edi,esi,0x62
  40c215:	gs popf 
  40c217:	popa   
  40c218:	pop    es
  40c219:	pop    ebp
  40c21a:	(bad)  
  40c21b:	hlt    
  40c21c:	fdivr  DWORD PTR [edi+0x1e]
  40c21f:	ret    0x8b22
  40c222:	add    eax,0xc3789c2
  40c227:	scas   al,BYTE PTR es:[edi]
  40c228:	sub    edi,edx
  40c22a:	loop   0x40c217
  40c22c:	outs   dx,BYTE PTR ds:[esi]
  40c22d:	loop   0x40c229
  40c22f:	shl    DWORD PTR [ebx+ebx*8-0x4be5714e],cl
  40c236:	xor    eax,0x8b6ad66a
  40c23b:	out    0xcc,eax
  40c23d:	fdiv   st,st(4)
  40c23f:	mov    eax,ds:0xd86c2316
  40c244:	es ds cmc 
  40c247:	or     ecx,DWORD PTR [ebx+0x25]
  40c24a:	and    DWORD PTR [ecx+0x73],ebp
  40c24d:	or     dl,cl
  40c24f:	imul   edx,esi,0xffffff99
  40c252:	out    0x4b,eax
  40c254:	(bad)  
  40c255:	push   DWORD PTR [edi-0x6960d78]
  40c25b:	data16 arpl WORD PTR [esi-0x13],di
  40c25f:	arpl   WORD PTR [edi+0x19],si
  40c262:	stc    
  40c263:	or     bl,cl
  40c265:	push   ebp
  40c266:	je     0x40c24a
  40c268:	pop    edi
  40c269:	test   DWORD PTR [edi+ebx*4],ecx
  40c26c:	jge    0x40c2aa
  40c26e:	jecxz  0x40c2ee
  40c270:	cmp    eax,0xcf80a5da
  40c275:	icebp  
  40c276:	adc    esp,DWORD PTR [eax-0x6f]
  40c279:	push   cs
  40c27a:	xlat   BYTE PTR ds:[ebx]
  40c27b:	and    eax,0x3afe5b27
  40c280:	leave  
  40c281:	sub    edx,DWORD PTR [ecx-0x77f736e1]
  40c287:	cwde   
  40c288:	retf   0x22fa
  40c28b:	arpl   ax,bp
  40c28d:	push   esp
  40c28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28f:	(bad)  
  40c290:	lea    ecx,[edi+0x1c]
  40c293:	mov    ebp,0x327c5d14
  40c298:	xor    al,0xea
  40c29a:	fwait
  40c29b:	(bad)  
  40c29c:	fisttp WORD PTR [ebx-0x51]
  40c29f:	pop    eax
  40c2a0:	adc    DWORD PTR [ebx-0x32bad327],0xffffffcb
  40c2a7:	shl    DWORD PTR [ebx+0x2a],1
  40c2aa:	cmp    eax,0xc8ac7527
  40c2af:	popf   
  40c2b0:	xchg   ecx,eax
  40c2b1:	test   BYTE PTR [eax-0x7c],dl
  40c2b4:	call   0xa7e28a0b
  40c2b9:	cmp    bh,ch
  40c2bb:	adc    BYTE PTR [esi-0x288d8b95],dl
  40c2c1:	mov    edx,0x4ad2f220
  40c2c6:	call   0x4488:0x85bb1ba7
  40c2cd:	sbb    BYTE PTR [edi+eiz*8],bh
  40c2d0:	push   cs
  40c2d1:	add    ebp,0xffffffa4
  40c2d4:	jmp    0xc22245ce
  40c2d9:	not    DWORD PTR ds:0x12c60344
  40c2df:	(bad)  
  40c2e0:	mov    eax,0xa0d8bb69
  40c2e5:	mov    dh,0x64
  40c2e7:	adc    DWORD PTR [edi-0x513b6341],0xfffffff3
  40c2ee:	adc    eax,0x69f7d3ad
  40c2f3:	(bad)  
  40c2f4:	xor    esp,DWORD PTR [ebp-0x57638cdb]
  40c2fa:	jns    0x40c29b
  40c2fc:	sahf   
  40c2fd:	pop    esi
  40c2fe:	popa   
  40c2ff:	fs xor ecx,eax
  40c302:	inc    ebp
  40c303:	cmp    BYTE PTR [ecx+ebp*2+0x367e847c],ah
  40c30a:	xchg   edx,eax
  40c30b:	sbb    BYTE PTR [eax+0x771d3f14],bh
  40c311:	and    eax,0x4ff4919c
  40c316:	jmp    0xf1c54992
  40c31b:	pop    esi
  40c31c:	dec    ebx
  40c31d:	in     al,0xf
  40c31f:	xlat   BYTE PTR ds:[ebx]
  40c320:	xchg   edx,eax
  40c321:	sbb    ah,BYTE PTR [ebx+ecx*1-0x4b6a619c]
  40c328:	repz lock ficomp WORD PTR [edx]
  40c32c:	or     al,0xeb
  40c32e:	ret    0xe1b
  40c331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c332:	and    eax,0x8c7720b8
  40c337:	test   cl,dh
  40c339:	pop    edi
  40c33a:	sub    al,0xdb
  40c33c:	add    al,al
  40c33e:	test   eax,0xc67f741e
  40c343:	pop    ecx
  40c344:	popf   
  40c345:	jl     0x40c340
  40c347:	adc    ebx,esi
  40c349:	mov    eax,0xe7f91e5b
  40c34e:	sbb    ah,BYTE PTR [ecx+0xd]
  40c351:	stos   DWORD PTR es:[edi],eax
  40c352:	and    DWORD PTR [esi+0x62],esi
  40c355:	(bad)  
  40c357:	xchg   edi,eax
  40c358:	out    0x5a,eax
  40c35a:	jmp    0x265b:0x9517b31f
  40c361:	mov    al,ds:0x728f4310
  40c366:	mov    al,0x6e
  40c368:	rol    BYTE PTR [ebx],cl
  40c36a:	jno    0x40c3eb
  40c36c:	ins    BYTE PTR es:[edi],dx
  40c36d:	ret    
  40c36e:	push   0xffffff97
  40c370:	imul   ecx,DWORD PTR fs:[eax-0x78],0xffffffc4
  40c375:	adc    BYTE PTR es:[esi+0x7f4e62b1],dh
  40c37c:	adc    BYTE PTR [ecx],0x96
  40c37f:	cmp    cl,dl
  40c381:	lahf   
  40c382:	in     al,dx
  40c383:	sahf   
  40c384:	inc    esp
  40c385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c386:	mov    WORD PTR [edi],ss
  40c388:	push   eax
  40c389:	dec    edi
  40c38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c38b:	mov    esp,0xfb0dcd8c
  40c390:	shl    edi,0x4f
  40c393:	jnp    0x40c365
  40c395:	xchg   ecx,eax
  40c396:	push   ebx
  40c397:	stos   DWORD PTR es:[edi],eax
  40c398:	nop
  40c399:	scas   al,BYTE PTR es:[edi]
  40c39a:	mov    edi,0x86ec5630
  40c39f:	call   0xcca6ae78
  40c3a4:	inc    edx
  40c3a5:	cs gs jne 0x40c412
  40c3a9:	lds    ecx,FWORD PTR [esi]
  40c3ab:	push   0x32
  40c3ad:	adc    bh,dh
  40c3af:	or     dh,bh
  40c3b1:	scas   eax,DWORD PTR es:[edi]
  40c3b2:	int3   
  40c3b3:	sub    eax,0xb94a0c38
  40c3b8:	jmp    0x59f7:0x9081f784
  40c3bf:	stc    
  40c3c0:	ins    DWORD PTR es:[edi],dx
  40c3c1:	pop    ebx
  40c3c2:	xor    esi,edx
  40c3c4:	outs   dx,BYTE PTR ds:[esi]
  40c3c5:	retf   
  40c3c6:	add    eax,0xaa3a73d3
  40c3cb:	cdq    
  40c3cc:	xor    ah,bh
  40c3ce:	and    BYTE PTR [edi+eax*2],dh
  40c3d1:	imul   edi,DWORD PTR [edi+0x71af9836],0x41ac4243
  40c3db:	sub    DWORD PTR [esp+ebp*1-0x7e9db411],0x38
  40c3e3:	mov    DWORD PTR [ebp+0x6db9aee1],edi
  40c3e9:	fwait
  40c3ea:	cmp    eax,0xc7f18b4c
  40c3ef:	add    edi,DWORD PTR [ecx]
  40c3f1:	mov    ebp,0x676d29e3
  40c3f6:	fild   QWORD PTR [ecx+0x7a7e8184]
  40c3fc:	aaa    
  40c3fd:	outs   dx,BYTE PTR ds:[esi]
  40c3fe:	jo     0x40c407
  40c400:	out    dx,eax
  40c401:	mov    cl,0xae
  40c403:	push   ss
  40c404:	pop    ds
  40c405:	cmp    esp,DWORD PTR [ecx-0x76c39df5]
  40c40b:	sub    esi,DWORD PTR [ebp-0x3e]
  40c40e:	cld    
  40c40f:	mov    ebp,eax
  40c411:	mov    dl,0xb
  40c413:	in     al,dx
  40c414:	dec    ebx
  40c415:	cmp    BYTE PTR [eax],bl
  40c417:	pop    ebx
  40c418:	fld    st(5)
  40c41a:	lods   al,BYTE PTR ds:[esi]
  40c41b:	or     BYTE PTR [edi+0x224462fa],bl
  40c421:	jmp    0x909d88e0
  40c426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c427:	cwde   
  40c428:	sbb    esp,DWORD PTR [ecx]
  40c42a:	cli    
  40c42b:	jo     0x40c400
  40c42d:	sbb    DWORD PTR [ebx+0x115351fe],edi
  40c433:	mov    ecx,0x989cedc4
  40c438:	(bad)  
  40c439:	xchg   esi,eax
  40c43a:	mov    ebp,0xbd5bb3d4
  40c43f:	call   0xe72f:0xdbdc8fe5
  40c446:	imul   edx,DWORD PTR [ecx-0x44],0x11
  40c44a:	cwde   
  40c44b:	pop    ss
  40c44c:	adc    edi,esp
  40c44e:	cmc    
  40c44f:	call   0x1932661e
  40c454:	fild   WORD PTR [esi-0x2e]
  40c457:	into   
  40c458:	pop    edx
  40c459:	mov    ebp,0x20517c06
  40c45e:	(bad)  
  40c45f:	mov    bh,0xc6
  40c461:	aaa    
  40c462:	outs   dx,BYTE PTR ds:[esi]
  40c463:	hlt    
  40c464:	aaa    
  40c465:	lods   al,BYTE PTR ds:[esi]
  40c466:	out    dx,al
  40c467:	or     al,BYTE PTR [edi+0x1efecff]
  40c46d:	lock dec edx
  40c46f:	push   edi
  40c470:	repz test BYTE PTR [ebp+ebx*4-0x73],bl
  40c475:	cmp    esi,DWORD PTR ds:0xdd9b075c
  40c47b:	pop    ebp
  40c47c:	jbe    0x40c4d3
  40c47e:	push   0x7c
  40c480:	call   0x2ce2:0x610a6e37
  40c487:	jno    0x40c45b
  40c489:	sahf   
  40c48a:	sub    BYTE PTR [esi],ch
  40c48c:	and    al,0x8f
  40c48e:	in     eax,dx
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	dec    ebp
  40c491:	ret    
  40c492:	cmp    al,dh
  40c494:	inc    edi
  40c495:	stos   DWORD PTR es:[edi],eax
  40c496:	pop    ecx
  40c497:	sbb    BYTE PTR [ecx+0x14],bl
  40c49a:	inc    edx
  40c49b:	add    eax,ebx
  40c49d:	xchg   esi,eax
  40c49e:	mov    BYTE PTR [ebx-0x20],ah
  40c4a1:	sahf   
  40c4a2:	ds xchg esi,eax
  40c4a4:	(bad)  [ebx]
  40c4a6:	inc    ebp
  40c4a7:	push   eax
  40c4a8:	sub    BYTE PTR [esi+0x5f],ch
  40c4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ac:	std    
  40c4ad:	mov    DWORD PTR [esi+eiz*8-0x1],esp
  40c4b1:	sub    BYTE PTR [eax-0x5d0c9060],cl
  40c4b7:	fiadd  WORD PTR [ebx-0x62]
  40c4ba:	mov    cl,0x4
  40c4bc:	push   edx
  40c4bd:	and    bh,BYTE PTR [ebx]
  40c4bf:	jno    0x40c441
  40c4c1:	fcmovnu st,st(7)
  40c4c3:	hlt    
  40c4c4:	loope  0x40c4da
  40c4c6:	or     esp,DWORD PTR [edx]
  40c4c8:	xchg   edx,eax
  40c4c9:	add    al,0x9f
  40c4cb:	sub    dh,BYTE PTR [edi-0xd]
  40c4ce:	mov    esi,0xa3dc7648
  40c4d3:	pop    esp
  40c4d4:	cmp    BYTE PTR [ecx],bh
  40c4d6:	ret    0x26a0
  40c4d9:	push   esp
  40c4da:	ror    DWORD PTR [ebx],0xa8
  40c4dd:	and    dh,bl
  40c4df:	in     al,0x10
  40c4e1:	adc    DWORD PTR [ecx-0x182ebab9],edi
  40c4e7:	xchg   esp,eax
  40c4e8:	aam    0xda
  40c4ea:	dec    eax
  40c4eb:	fidiv  DWORD PTR [eax+ebp*8-0x5043b2af]
  40c4f2:	xor    bh,BYTE PTR [edi-0x52]
  40c4f5:	sar    DWORD PTR [esi+0x8ceff1d],0x26
  40c4fc:	repnz cmp al,0x9d
  40c4ff:	imul   edx,DWORD PTR [eax-0x44],0x5f
  40c503:	mov    edx,?
  40c505:	repz push es
  40c507:	cmp    eax,0x6d0e7b3
  40c50c:	jne    0x40c4d4
  40c50e:	mov    esp,0x2b5f3d3a
  40c513:	cmp    bh,cl
  40c515:	push   ebx
  40c516:	fisttp DWORD PTR [ecx]
  40c518:	ja     0x40c578
  40c51a:	sbb    DWORD PTR [edx-0x12],edi
  40c51d:	and    dl,BYTE PTR ds:0x99ffda25
  40c523:	dec    eax
  40c524:	mov    cl,0xcb
  40c526:	mov    ecx,DWORD PTR [edx]
  40c528:	mov    ch,0x68
  40c52a:	mov    bl,0x87
  40c52c:	(bad)  
  40c52d:	pop    ebx
  40c52e:	lahf   
  40c52f:	(bad)  
  40c530:	push   es
  40c531:	mov    bh,0x6c
  40c533:	xor    eax,DWORD PTR [edi+0x59]
  40c536:	add    eax,0x7d09d2e0
  40c53b:	iret   
  40c53c:	dec    edi
  40c53d:	and    ah,bl
  40c53f:	data16 (bad) 
  40c541:	and    DWORD PTR [edx+0x53],esp
  40c544:	jge    0x40c550
  40c546:	fdivr  st(6),st
  40c548:	inc    ebp
  40c549:	int    0x34
  40c54b:	lock pop eax
  40c54d:	and    al,0xf
  40c54f:	std    
  40c550:	xchg   esi,eax
  40c551:	loop   0x40c5d2
  40c553:	mov    ah,0x20
  40c555:	(bad)  
  40c556:	jnp    0x40c505
  40c558:	(bad)  
  40c559:	call   0x857cc5b5
  40c55e:	xchg   esp,eax
  40c55f:	sub    edi,eax
  40c561:	jmp    0xa0187609
  40c566:	dec    esi
  40c567:	retf   0xb75d
  40c56a:	push   esi
  40c56b:	adc    bl,bl
  40c56d:	or     al,0x0
  40c56f:	out    0x4a,al
  40c571:	stc    
  40c572:	dec    ecx
  40c573:	sti    
  40c574:	or     ecx,DWORD PTR [ecx]
  40c576:	or     al,0x47
  40c578:	pusha  
  40c579:	mov    esp,0x2cbe4f0f
  40c57e:	pop    edx
  40c57f:	retf   
  40c580:	xchg   ebp,eax
  40c581:	stc    
  40c582:	cwde   
  40c583:	jo     0x40c5f8
  40c585:	cmp    eax,0x59f7693c
  40c58a:	fwait
  40c58b:	inc    edi
  40c58c:	dec    esp
  40c58d:	mov    cl,0x2f
  40c58f:	and    eax,0xbd2b6d3f
  40c594:	mov    dl,0x8c
  40c596:	sbb    al,0xe
  40c598:	call   FWORD PTR [ecx]
  40c59a:	fidivr DWORD PTR [ebx+0x20]
  40c59d:	stos   DWORD PTR es:[edi],eax
  40c59e:	ss call 0x2cd8:0x41da04e4
  40c5a6:	adc    DWORD PTR [edi],esp
  40c5a8:	out    dx,eax
  40c5a9:	mov    esp,0x604fb298
  40c5ae:	jmp    0x2fd7:0x9fabb70c
  40c5b5:	or     DWORD PTR [edi+0x60],edx
  40c5b8:	push   cs
  40c5b9:	and    ebp,0x2
  40c5bc:	leave  
  40c5bd:	dec    ebp
  40c5be:	aam    0x3f
  40c5c0:	lock hlt 
  40c5c2:	ja     0x40c5e7
  40c5c4:	and    eax,0x288eba3f
  40c5c9:	mov    bl,0xc6
  40c5cb:	aam    0xe
  40c5cd:	ret    
  40c5ce:	js     0x40c583
  40c5d0:	dec    esp
  40c5d1:	xchg   ecx,eax
  40c5d2:	xchg   ebp,eax
  40c5d3:	mov    edi,0x9fa159d6
  40c5d8:	and    ch,BYTE PTR [ebp-0x77]
  40c5db:	stc    
  40c5dc:	rcr    DWORD PTR ss:[edx-0x6516e648],1
  40c5e3:	cli    
  40c5e4:	out    0x16,al
  40c5e6:	leave  
  40c5e7:	mov    gs,WORD PTR [edi-0x4e]
  40c5ea:	call   0xd40ce7b
  40c5ef:	push   edx
  40c5f0:	imul   esi,esi,0x8c0f1b4c
  40c5f6:	in     eax,0xed
  40c5f8:	mov    WORD PTR [eax+eax*1+0xb014560],ss
  40c5ff:	jmp    0xa359fced
  40c604:	aam    0x71
  40c606:	mov    al,0x6c
  40c608:	fs cmc 
  40c60a:	out    0x75,eax
  40c60c:	mov    WORD PTR [edx-0x14],ss
  40c60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c610:	jmp    0xbab70cc5
  40c615:	inc    ebx
  40c616:	add    eax,0xe1e7b815
  40c61b:	outs   dx,DWORD PTR ds:[esi]
  40c61c:	or     esp,edi
  40c61e:	rcr    BYTE PTR [ebx+0x33],cl
  40c621:	icebp  
  40c622:	xor    al,0x70
  40c624:	push   ds
  40c625:	inc    ebx
  40c626:	and    ebp,DWORD PTR ds:0xd94d6581
  40c62c:	div    BYTE PTR [edi+0x66f516e5]
  40c632:	inc    esp
  40c633:	sar    ch,0x9c
  40c636:	and    BYTE PTR [ecx+0x69],0x6a
  40c63a:	add    esp,DWORD PTR [edi-0x49]
  40c63d:	mov    ebx,0x7a4054a3
  40c642:	test   BYTE PTR [edi-0x79558079],ch
  40c648:	cmp    BYTE PTR ds:0x98f55db8,al
  40c64e:	sti    
  40c64f:	(bad)  
  40c651:	and    eax,0xfe5ce84e
  40c656:	sti    
  40c657:	pop    ss
  40c658:	pop    eax
  40c659:	lods   al,BYTE PTR ds:[esi]
  40c65a:	rcr    ebp,0xca
  40c65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65e:	inc    edx
  40c65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c660:	and    DWORD PTR es:[ecx+esi*1],ebx
  40c664:	inc    ebp
  40c665:	or     esp,DWORD PTR [edi-0x43]
  40c668:	je     0x40c63c
  40c66a:	bound  edi,QWORD PTR [eax+0x76]
  40c66d:	cmp    al,0xcb
  40c66f:	pop    esp
  40c670:	or     bl,bl
  40c672:	push   ds
  40c673:	ins    DWORD PTR es:[edi],dx
  40c674:	imul   esi,ecx,0xffffffc0
  40c677:	pop    ds
  40c678:	into   
  40c679:	out    dx,al
  40c67a:	sub    al,0x43
  40c67c:	pop    ebp
  40c67d:	xor    eax,0x8f938ad1
  40c682:	or     dh,BYTE PTR [ecx+0x7c952563]
  40c688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c689:	ret    0x379b
  40c68c:	adc    ebx,DWORD PTR [esp+eax*2]
  40c68f:	scas   al,BYTE PTR es:[edi]
  40c690:	ins    DWORD PTR es:[edi],dx
  40c691:	sub    esp,edx
  40c693:	int    0x8e
  40c695:	pop    ebp
  40c696:	or     al,0xac
  40c698:	sbb    al,0xc6
  40c69a:	fldcw  WORD PTR [esi-0x3cd2a39]
  40c6a0:	call   0xa0a2f6e5
  40c6a5:	xchg   ah,ch
  40c6a7:	push   ebp
  40c6a8:	loopne 0x40c6d5
  40c6aa:	mov    esi,0x878b0952
  40c6af:	ficom  DWORD PTR [ebx-0x7dda2e3]
  40c6b5:	sti    
  40c6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b7:	and    eax,0x918bbbfe
  40c6bc:	pop    esi
  40c6bd:	pop    edx
  40c6be:	cmp    ecx,DWORD PTR [esi]
  40c6c0:	jnp    0x40c689
  40c6c2:	das    
  40c6c3:	arpl   WORD PTR [ebp+0x197883ea],bp
  40c6c9:	jne    0x40c64e
  40c6cb:	outs   dx,DWORD PTR ds:[esi]
  40c6cc:	cmp    DWORD PTR [eax],0xffffffec
  40c6cf:	sub    cl,dl
  40c6d1:	dec    esi
  40c6d2:	clc    
  40c6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d5:	imul   ebp,DWORD PTR [edi],0x5c
  40c6d8:	fisubr WORD PTR [ecx+0x62]
  40c6db:	mov    esp,0xcc7b1711
  40c6e0:	pushf  
  40c6e1:	mov    ah,bh
  40c6e3:	pop    ebp
  40c6e4:	xchg   esi,eax
  40c6e5:	(bad)  
  40c6e6:	fld    QWORD PTR [edi]
  40c6e8:	ins    DWORD PTR es:[edi],dx
  40c6e9:	xor    eax,0xe254d686
  40c6ee:	popf   
  40c6ef:	aaa    
  40c6f0:	cmp    al,0x0
  40c6f2:	aaa    
  40c6f3:	ins    BYTE PTR es:[edi],dx
  40c6f4:	xchg   esi,eax
  40c6f5:	in     al,0x40
  40c6f7:	mov    eax,ds:0xab4f98c5
  40c6fc:	jmp    0x40c77b
  40c6fe:	fisubr DWORD PTR [esi-0x33c84c89]
  40c704:	std    
  40c705:	pop    ebx
  40c706:	push   ebx
  40c707:	test   eax,0xb6874d1e
  40c70c:	imul   ecx,edx,0x5d
  40c70f:	or     eax,0xdb872240
  40c714:	sbb    BYTE PTR [eax*4+0x1b326357],al
  40c71b:	sub    BYTE PTR [esi],dl
  40c71d:	or     BYTE PTR [eax+0xf553e76],cl
  40c723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c724:	jnp    0x40c6bc
  40c726:	ins    BYTE PTR es:[edi],dx
  40c727:	sub    al,0x32
  40c729:	imul   esp,DWORD PTR [ebp+0x5],0xa
  40c72d:	cmp    BYTE PTR [edi-0x6f],cl
  40c730:	jo     0x40c6d6
  40c732:	push   edi
  40c733:	cdq    
  40c734:	cmp    DWORD PTR [edx],esi
  40c736:	or     ebp,DWORD PTR [esi+esi*1-0x3a]
  40c73a:	aam    0x8f
  40c73c:	or     eax,0x86eafa58
  40c741:	int3   
  40c742:	loop   0x40c73e
  40c744:	loopne 0x40c79b
  40c746:	push   esi
  40c747:	or     bl,dl
  40c749:	jmp    0xe69779b3
  40c74e:	add    edi,ebp
  40c750:	adc    eax,0xee54f542
  40c755:	dec    ebp
  40c756:	stos   BYTE PTR es:[edi],al
  40c757:	push   es
  40c758:	call   0xfb955579
  40c75d:	dec    ebx
  40c75e:	add    dh,BYTE PTR [ebp+ebp*4+0x30]
  40c762:	stos   DWORD PTR es:[edi],eax
  40c763:	jmp    0xaa5e:0xdf3425b1
  40c76a:	mov    ebp,0xaae8c36b
  40c76f:	into   
  40c770:	(bad)  
  40c771:	jne    0x40c6f8
  40c773:	dec    edi
  40c774:	jae    0x40c786
  40c776:	ins    BYTE PTR es:[edi],dx
  40c777:	imul   ecx,DWORD PTR [eax],0xef1da8a5
  40c77d:	sub    cl,BYTE PTR [ebx-0x6c]
  40c780:	xor    edx,esp
  40c782:	(bad)  
  40c783:	or     DWORD PTR [edx+0x8],edi
  40c786:	pop    eax
  40c787:	mov    esi,0xac49d660
  40c78c:	cwde   
  40c78d:	jo     0x40c76c
  40c78f:	dec    esi
  40c790:	(bad)  
  40c792:	addr16 leave 
  40c794:	sub    eax,0x5437d6e7
  40c799:	rcl    BYTE PTR [ebx+0x64e487af],cl
  40c79f:	jae    0x40c79f
  40c7a1:	rcl    BYTE PTR ds:0x645e4d47,cl
  40c7a7:	jl     0x40c738
  40c7a9:	inc    edi
  40c7aa:	lods   al,BYTE PTR ds:[esi]
  40c7ab:	and    BYTE PTR [edx+edx*4-0x98e909b],dl
  40c7b2:	and    al,0xa5
  40c7b4:	xchg   edx,eax
  40c7b5:	add    eax,0x78bb6e58
  40c7ba:	and    ebx,esi
  40c7bc:	mov    WORD PTR [edi],?
  40c7be:	aas    
  40c7bf:	push   ds
  40c7c0:	sti    
  40c7c1:	adc    ah,BYTE PTR [esp+ebx*8+0x10549557]
  40c7c8:	pop    esi
  40c7c9:	mov    eax,0x30b6ab70
  40c7ce:	mov    bl,BYTE PTR [eax+0x26e138f8]
  40c7d4:	hlt    
  40c7d5:	cmp    al,0x63
  40c7d7:	mov    eax,0x44351131
  40c7dc:	shl    BYTE PTR [ecx+0x70c06012],0x38
  40c7e3:	call   0xc3e7e249
  40c7e8:	xchg   esp,eax
  40c7e9:	cmp    DWORD PTR [edx+eax*1],edx
  40c7ec:	fidiv  DWORD PTR [edi-0x3adbb681]
  40c7f2:	fcomp  DWORD PTR [ebp-0x41720ea0]
  40c7f8:	push   es
  40c7f9:	fldcw  WORD PTR [eax-0x5c]
  40c7fc:	xor    al,0x63
  40c7fe:	mov    eax,0x8434ef1
  40c803:	das    
  40c804:	mov    eax,ds:0xbc78899c
  40c809:	cld    
  40c80a:	sub    BYTE PTR [esi+0x6c],0x83
  40c80e:	xor    bl,bh
  40c810:	push   ebp
  40c811:	mov    edx,0x21a3ac0f
  40c816:	pop    ecx
  40c817:	adc    eax,0x5f773231
  40c81c:	sti    
  40c81d:	mov    bl,BYTE PTR [ebx-0x15ab81c6]
  40c823:	dec    edx
  40c824:	cmp    al,0xcc
  40c826:	ret    0x633f
  40c829:	loop   0x40c890
  40c82b:	scas   al,BYTE PTR es:[edi]
  40c82c:	das    
  40c82d:	jle    0x40c7e1
  40c82f:	push   esp
  40c830:	pop    edi
  40c831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c832:	pop    eax
  40c833:	loop   0x40c8a5
  40c835:	sub    BYTE PTR [edx+eiz*8+0x3ff18fc7],al
  40c83c:	rol    cl,cl
  40c83e:	jo     0x40c873
  40c840:	mov    ecx,0x274226a4
  40c845:	cdq    
  40c846:	loope  0x40c801
  40c848:	pop    edi
  40c849:	push   ds
  40c84a:	push   es
  40c84b:	or     esp,DWORD PTR [ebx+0x3607dd8b]
  40c851:	ficomp DWORD PTR [ecx-0x56de386a]
  40c857:	xchg   esi,eax
  40c858:	jns    0x40c7df
  40c85a:	fldcw  WORD PTR [esp+ebx*8-0x57]
  40c85e:	lea    edx,[esi]
  40c860:	add    eax,0xfff1e710
  40c865:	jl     0x40c8b6
  40c867:	mov    bh,0x0
  40c869:	xchg   DWORD PTR [edx+ecx*4+0x10d1a8d],esp
  40c870:	push   es
  40c871:	and    al,0x59
  40c873:	add    BYTE PTR [ecx],0x30
  40c876:	test   al,0xca
  40c878:	call   0x7d604cf8
  40c87d:	data16 mov bh,0xf7
  40c880:	adc    esp,edx
  40c882:	jae    0x40c888
  40c884:	or     al,BYTE PTR [esi+0x14]
  40c887:	into   
  40c888:	in     al,0x7d
  40c88a:	test   eax,0xcd54d797
  40c88f:	lods   al,BYTE PTR ds:[esi]
  40c890:	sub    al,0xbd
  40c892:	(bad)  
  40c893:	or     eax,0x3771246d
  40c898:	retf   
  40c899:	lds    edi,FWORD PTR [ebx]
  40c89b:	out    0x57,al
  40c89d:	cmp    edi,DWORD PTR [eax+0x6731be9]
  40c8a3:	add    BYTE PTR [ebx+0x12e30175],dl
  40c8a9:	push   ebp
  40c8aa:	(bad)  
  40c8ab:	and    ebp,DWORD PTR [ecx]
  40c8ad:	loopne 0x40c851
  40c8af:	retf   
  40c8b0:	std    
  40c8b1:	lea    edx,[ecx]
  40c8b3:	sub    al,0x13
  40c8b5:	lahf   
  40c8b6:	jmp    0xbde6cb9b
  40c8bb:	imul   eax,DWORD PTR [esi+0x68be92f6],0xb1600599
  40c8c5:	sub    bl,bl
  40c8c7:	mov    dl,0x40
  40c8c9:	rcr    ah,cl
  40c8cb:	jg     0x40c887
  40c8cd:	hlt    
  40c8ce:	(bad)  
  40c8cf:	nop
  40c8d0:	push   ebx
  40c8d1:	mov    al,0xe6
  40c8d3:	pop    edi
  40c8d4:	and    dl,BYTE PTR [ecx+0x417d94f4]
  40c8da:	mov    esi,0x9789a459
  40c8df:	loope  0x40c91a
  40c8e1:	dec    eax
  40c8e2:	sbb    DWORD PTR [esi-0x75],edi
  40c8e5:	int    0xa4
  40c8e7:	ret    
  40c8e8:	sbb    ebx,eax
  40c8ea:	les    edx,FWORD PTR [ebx+0x3e7ed757]
  40c8f0:	cs scas eax,DWORD PTR es:[edi]
  40c8f2:	mov    ds:0xfc624722,eax
  40c8f7:	mov    cl,0x5b
  40c8f9:	mov    edx,0x19ff5feb
  40c8fe:	test   BYTE PTR [ecx+ecx*1-0xc],bh
  40c902:	out    0xa3,eax
  40c904:	mov    eax,0x78241331
  40c909:	and    DWORD PTR [esi+0x6],eax
  40c90c:	loopne 0x40c920
  40c90e:	hlt    
  40c90f:	push   ss
  40c910:	push   eax
  40c911:	pop    edx
  40c912:	arpl   sp,ax
  40c914:	jmp    0x7b87a9f3
  40c919:	pop    ecx
  40c91a:	xor    BYTE PTR ds:0x249cd9a2,ah
  40c920:	pop    ebp
  40c921:	pop    edx
  40c922:	sub    al,0xd0
  40c924:	add    DWORD PTR [esi],edi
  40c926:	xor    bl,BYTE PTR [edi]
  40c928:	and    bl,BYTE PTR [esi-0x11]
  40c92b:	mov    esp,0x285ca521
  40c930:	lods   eax,DWORD PTR ds:[esi]
  40c931:	mov    edx,0x2375aedb
  40c936:	je     0x40c8f5
  40c938:	js     0x40c910
  40c93a:	clc    
  40c93b:	pop    ebp
  40c93c:	sbb    edi,DWORD PTR [ebx]
  40c93e:	sub    ebx,DWORD PTR [edi]
  40c940:	pop    ecx
  40c941:	fucomip st,st(0)
  40c943:	mov    ebp,0x945d0b44
  40c948:	xlat   BYTE PTR ds:[ebx]
  40c949:	stos   DWORD PTR es:[edi],eax
  40c94a:	sbb    edx,DWORD PTR [ecx-0xd]
  40c94d:	out    dx,eax
  40c94e:	nop
  40c94f:	scas   al,BYTE PTR es:[edi]
  40c950:	add    dl,bl
  40c952:	sbb    al,0xe2
  40c954:	lahf   
  40c955:	xor    BYTE PTR [ecx],cl
  40c957:	fmul   QWORD PTR [edi]
  40c959:	or     eax,0xaee25ba8
  40c95e:	add    DWORD PTR [edx-0x71],ebx
  40c961:	mov    eax,0xbc02be4d
  40c966:	xchg   bl,bh
  40c968:	inc    ecx
  40c969:	jl     0x40c941
  40c96b:	pop    esi
  40c96c:	(bad)  
  40c96d:	mov    dh,0xaa
  40c96f:	(bad)  
  40c970:	out    0x83,al
  40c972:	xor    esi,eax
  40c974:	daa    
  40c975:	fmul   st,st(6)
  40c977:	inc    ecx
  40c978:	cmp    al,0x6d
  40c97a:	xchg   ecx,eax
  40c97b:	add    esp,0x624c1142
  40c981:	pop    ebp
  40c982:	shl    BYTE PTR [ebp+0x2a5144d2],cl
  40c988:	repnz (bad) 
  40c98a:	lods   eax,DWORD PTR ds:[esi]
  40c98b:	xchg   edx,eax
  40c98c:	sub    esp,DWORD PTR [edx]
  40c98e:	test   eax,0x6b8121a4
  40c993:	pop    esp
  40c994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c995:	dec    ebx
  40c996:	xchg   ebx,eax
  40c997:	adc    ah,BYTE PTR [edx]
  40c999:	stos   BYTE PTR es:[edi],al
  40c99a:	mov    eax,ds:0x7d0b5901
  40c99f:	adc    BYTE PTR [eax+esi*1],ah
  40c9a2:	in     al,dx
  40c9a3:	retf   
  40c9a4:	addr16 pop edx
  40c9a6:	pop    eax
  40c9a7:	sbb    bh,BYTE PTR [edi+0x7d]
  40c9aa:	shl    DWORD PTR [esp+edx*4-0xd],cl
  40c9ae:	cmc    
  40c9af:	push   cs
  40c9b0:	jle    0x40c973
  40c9b2:	jp     0x40c939
  40c9b4:	test   DWORD PTR [ecx+0x40db9664],ecx
  40c9ba:	lods   eax,DWORD PTR ds:[esi]
  40c9bb:	out    dx,al
  40c9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9bd:	sahf   
  40c9be:	ret    0xf108
  40c9c1:	ds sahf 
  40c9c3:	(bad)  
  40c9c4:	retf   
  40c9c5:	mov    cl,0x82
  40c9c7:	js     0x40ca0b
  40c9c9:	cmp    eax,0x525ab6e4
  40c9ce:	lock jg 0x40ca4e
  40c9d1:	(bad)  
  40c9d2:	sbb    al,0x0
  40c9d4:	jle    0x40ca40
  40c9d6:	mov    ah,0xa2
  40c9d8:	mov    BYTE PTR [edi],al
  40c9da:	xchg   BYTE PTR [eax],bh
  40c9dc:	cmp    ecx,DWORD PTR [edx+0x66]
  40c9df:	cmp    DWORD PTR [ebx-0x58d336b5],0x77486ff2
  40c9e9:	xchg   esp,eax
  40c9ea:	mov    ch,0xaa
  40c9ec:	and    esi,DWORD PTR [esi]
  40c9ee:	(bad)  
  40c9ef:	std    
  40c9f0:	stos   BYTE PTR es:[edi],al
  40c9f1:	clc    
  40c9f2:	or     edi,edi
  40c9f4:	and    edi,DWORD PTR ds:0x418dadd3
  40c9fa:	lea    ebx,[ecx+0x78]
  40c9fd:	pop    edx
  40c9fe:	add    ch,BYTE PTR [eax+ebp*8]
  40ca01:	adc    ebp,esi
  40ca03:	outs   dx,DWORD PTR ds:[esi]
  40ca04:	into   
  40ca05:	pushf  
  40ca06:	pop    esi
  40ca07:	xlat   BYTE PTR ds:[ebx]
  40ca08:	inc    esi
  40ca09:	sbb    eax,0xed906cec
  40ca0e:	mov    ebp,0xf53cf407
  40ca13:	xchg   ebx,eax
  40ca14:	xchg   ebx,eax
  40ca15:	push   ecx
  40ca16:	cmp    BYTE PTR ds:0x7792c71a,ah
  40ca1c:	push   cs
  40ca1d:	jp     0x40ca97
  40ca1f:	into   
  40ca20:	das    
  40ca21:	outs   dx,DWORD PTR ds:[esi]
  40ca22:	dec    ebx
  40ca23:	popf   
  40ca24:	dec    esi
  40ca25:	or     eax,0x64a6341
  40ca2a:	pop    ds
  40ca2b:	and    ah,BYTE PTR [esp+ecx*2-0x7cb45291]
  40ca32:	jbe    0x40ca47
  40ca34:	cmp    al,0xa
  40ca36:	jmp    DWORD PTR [eax]
  40ca38:	aaa    
  40ca39:	sub    al,0xea
  40ca3b:	fsub   QWORD PTR [esi]
  40ca3d:	or     edi,edi
  40ca3f:	sub    bh,BYTE PTR [edi]
  40ca41:	jge    0x40ca17
  40ca43:	std    
  40ca44:	push   edx
  40ca45:	xchg   ebx,eax
  40ca46:	jecxz  0x40ca65
  40ca48:	add    bh,bh
  40ca4a:	mov    es,WORD PTR [esi]
  40ca4c:	sahf   
  40ca4d:	test   edx,esp
  40ca4f:	or     edi,edi
  40ca51:	mov    ds:0xe9f3d0f0,eax
  40ca56:	pop    ss
  40ca57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca58:	sub    edx,DWORD PTR [ecx]
  40ca5a:	push   0x4
  40ca5c:	hlt    
  40ca5d:	xchg   esp,eax
  40ca5e:	scas   eax,DWORD PTR es:[edi]
  40ca5f:	or     BYTE PTR [esi-0x10],ah
  40ca62:	push   ebp
  40ca63:	call   0xce53c52
  40ca68:	sbb    ah,BYTE PTR ds:0x87c93eb3
  40ca6e:	jp     0x40cae8
  40ca70:	inc    ebp
  40ca71:	icebp  
  40ca72:	or     al,0xb4
  40ca74:	sbb    BYTE PTR [ebx],0x6e
  40ca77:	or     eax,0xbac6603c
  40ca7c:	into   
  40ca7d:	jp     0x40ca8a
  40ca7f:	mov    DWORD PTR es:[esi-0x1b],esi
  40ca83:	repnz cmp eax,0x51d80351
  40ca89:	xchg   ebx,eax
  40ca8a:	(bad)  
  40ca8b:	jmp    0x40ca85
  40ca8d:	imul   BYTE PTR [ecx+0x462edca8]
  40ca93:	fidiv  DWORD PTR [edi+0x7b]
  40ca96:	sahf   
  40ca97:	mov    ecx,0xa91fe095
  40ca9c:	push   ds
  40ca9d:	pop    eax
  40ca9e:	pop    ecx
  40ca9f:	cmp    BYTE PTR [ebx+edx*4],0x2f
  40caa3:	jmp    0xa559:0x6561550
  40caaa:	sar    BYTE PTR [edx+0x4846305e],0x78
  40cab1:	imul   ebp,DWORD PTR [esi-0x50c813b1],0xdb500b4c
  40cabb:	imul   esi,ebx,0x4fcb1baf
  40cac1:	and    al,0xab
  40cac3:	cmp    dl,dl
  40cac5:	push   esp
  40cac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac7:	std    
  40cac8:	(bad)
  40cacb:	mov    dh,0xd5
  40cacd:	out    dx,al
  40cace:	sub    ebp,DWORD PTR [ecx-0x6f409789]
  40cad4:	fwait
  40cad5:	cdq    
  40cad6:	push   edi
  40cad7:	mov    al,ds:0x6f1b7cdc
  40cadc:	adc    bl,BYTE PTR [ebx+0x30]
  40cadf:	and    ecx,DWORD PTR [esi-0x13]
  40cae2:	pop    esp
  40cae3:	dec    ecx
  40cae4:	cmp    al,0x3e
  40cae6:	xchg   esp,eax
  40cae7:	hlt    
  40cae8:	pop    es
  40cae9:	div    eax
  40caeb:	popa   
  40caec:	repz out 0xa2,eax
  40caef:	jb     0x40cad9
  40caf1:	fs aad 0x63
  40caf4:	jb     0x40cae1
  40caf6:	adc    DWORD PTR [eax+eax*8-0x9],ecx
  40cafa:	mov    ah,0xd9
  40cafc:	ficomp DWORD PTR [esi]
  40cafe:	sbb    eax,esi
  40cb00:	in     eax,0x20
  40cb02:	stos   BYTE PTR es:[edi],al
  40cb03:	loop   0x40cac9
  40cb05:	xor    al,0xc
  40cb07:	push   edi
  40cb08:	jne    0x40cb73
  40cb0a:	in     eax,0x5d
  40cb0c:	pop    eax
  40cb0d:	push   cs
  40cb0e:	push   eax
  40cb0f:	std    
  40cb10:	shl    DWORD PTR [ebp+0x2f],cl
  40cb13:	imul   ecx,DWORD PTR [edi-0x579b840e],0xffffffa8
  40cb1a:	lods   eax,DWORD PTR ds:[esi]
  40cb1b:	sub    ebx,esp
  40cb1d:	jmp    0xc191:0xd8091a7e
  40cb24:	adc    BYTE PTR [ebp-0x712bd562],ch
  40cb2a:	outs   dx,DWORD PTR ds:[esi]
  40cb2b:	mov    cl,0x96
  40cb2d:	loop   0x40cace
  40cb2f:	inc    ecx
  40cb30:	mov    eax,ds:0xb46419d1
  40cb35:	xor    eax,0x30ae753e
  40cb3a:	inc    edx
  40cb3b:	daa    
  40cb3c:	lods   eax,DWORD PTR ds:[esi]
  40cb3d:	cwde   
  40cb3e:	in     eax,dx
  40cb3f:	jp     0x40cb85
  40cb41:	jbe    0x40cae8
  40cb43:	jne    0x40cb36
  40cb45:	and    esi,DWORD PTR [eax+ebp*4]
  40cb48:	popa   
  40cb49:	loope  0x40cad7
  40cb4b:	popf   
  40cb4c:	mov    cl,0x82
  40cb4e:	xor    DWORD PTR [eax+0x40c60fb3],edx
  40cb54:	outs   dx,BYTE PTR ds:[esi]
  40cb55:	stos   DWORD PTR es:[edi],eax
  40cb56:	sar    ch,0x65
  40cb59:	jmp    0x1ed3fba2
  40cb5e:	push   cs
  40cb5f:	cs out 0x5f,eax
  40cb62:	pop    eax
  40cb63:	scas   eax,DWORD PTR es:[di]
  40cb65:	popa   
  40cb66:	cmc    
  40cb67:	adc    al,0x7f
  40cb69:	cmp    DWORD PTR [ecx-0x5a95649f],ebx
  40cb6f:	lahf   
  40cb70:	out    dx,al
  40cb71:	fwait
  40cb72:	pop    edi
  40cb73:	ror    ch,0xd1
  40cb76:	stos   DWORD PTR es:[edi],eax
  40cb77:	pop    ecx
  40cb78:	mov    DWORD PTR [esi+0x4e],esi
  40cb7b:	mov    al,ds:0x720a86dd
  40cb80:	pop    esi
  40cb81:	call   0x5b6abddb
  40cb86:	loopne 0x40cc05
  40cb88:	jae    0x40cb65
  40cb8a:	jmp    0x40cbbc
  40cb8c:	lds    esi,FWORD PTR [ecx+0x2a]
  40cb8f:	fistp  WORD PTR [ecx]
  40cb91:	into   
  40cb92:	jnp    0x40cbd9
  40cb94:	ss pop esp
  40cb96:	sbb    BYTE PTR [esi+0x26207f6e],bl
  40cb9c:	jno    0x40cb42
  40cb9e:	daa    
  40cb9f:	push   eax
  40cba0:	fs jecxz 0x40cb46
  40cba3:	dec    dx
  40cba5:	adc    dh,BYTE PTR [edi-0x1c]
  40cba8:	jno    0x40cc04
  40cbaa:	sbb    DWORD PTR [edx+0x1dc8d787],ecx
  40cbb0:	push   0xffffffc8
  40cbb2:	push   cs
  40cbb3:	dec    ebx
  40cbb4:	repnz scas al,BYTE PTR es:[edi]
  40cbb6:	inc    ecx
  40cbb7:	push   eax
  40cbb8:	push   eax
  40cbb9:	mov    ch,0xf0
  40cbbb:	lods   al,BYTE PTR ds:[esi]
  40cbbc:	call   0x5cc7:0x24f25fa6
  40cbc3:	lahf   
  40cbc4:	push   0xffffff87
  40cbc6:	dec    edx
  40cbc7:	add    al,0x4a
  40cbc9:	pop    esi
  40cbca:	arpl   WORD PTR [ebx+0x3895237c],bp
  40cbd0:	int3   
  40cbd1:	or     BYTE PTR [edi+0x1e],cl
  40cbd4:	mov    ch,0x71
  40cbd6:	push   ebp
  40cbd7:	cs jl  0x40cbcd
  40cbda:	es dec ecx
  40cbdc:	ret    
  40cbdd:	sub    dl,bl
  40cbdf:	mov    ah,0x7c
  40cbe1:	mov    dl,0x10
  40cbe3:	xor    dh,BYTE PTR [eax+0x5f308cec]
  40cbe9:	or     BYTE PTR [edx+0x16c2cad2],cl
  40cbef:	xchg   DWORD PTR [ecx+ebx*4],edi
  40cbf2:	xor    DWORD PTR [esi+0x33],0x5c4fd804
  40cbf9:	xchg   esi,eax
  40cbfa:	inc    edi
  40cbfb:	ins    DWORD PTR es:[edi],dx
  40cbfc:	lock in eax,0xc5
  40cbff:	mov    cl,0xf1
  40cc01:	add    bl,al
  40cc03:	in     al,0xee
  40cc05:	bound  ebp,QWORD PTR [ecx+ebx*8+0x40]
  40cc09:	aam    0x7f
  40cc0b:	sub    eax,0x9fe531a8
  40cc10:	mov    ds:0x2fe781d9,eax
  40cc15:	fild   QWORD PTR [edi+0x493b619e]
  40cc1b:	stos   DWORD PTR es:[edi],eax
  40cc1c:	mov    esp,0xf27131fc
  40cc21:	push   ss
  40cc22:	adc    DWORD PTR [ebp+0x11aa6125],ecx
  40cc28:	or     DWORD PTR [edi],edx
  40cc2a:	mov    eax,edi
  40cc2c:	arpl   ax,ax
  40cc2e:	leave  
  40cc2f:	sub    cl,ah
  40cc31:	retf   
  40cc32:	out    dx,eax
  40cc33:	pushf  
  40cc34:	or     esi,DWORD PTR [ebp-0x5342f8ae]
  40cc3a:	push   esp
  40cc3b:	push   edi
  40cc3c:	dec    ebp
  40cc3d:	jge    0x40cc75
  40cc3f:	aad    0x2
  40cc41:	loope  0x40cc13
  40cc43:	out    dx,al
  40cc44:	cmp    DWORD PTR [esi+edx*4-0x23],esp
  40cc48:	inc    esp
  40cc49:	test   al,0xdd
  40cc4b:	push   ebx
  40cc4c:	adc    DWORD PTR ds:0x6857c307,ebp
  40cc52:	addr16 push ss
  40cc54:	push   0x6a39208f
  40cc59:	sbb    ah,BYTE PTR [esi+eiz*8+0x7f11fbee]
  40cc60:	pushf  
  40cc61:	sub    edx,DWORD PTR [edi+0x4b]
  40cc64:	hlt    
  40cc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc66:	cdq    
  40cc67:	xchg   esi,eax
  40cc68:	nop
  40cc69:	and    BYTE PTR [ebx],al
  40cc6b:	inc    edx
  40cc6c:	fidivr WORD PTR [eax-0x722035c1]
  40cc72:	sbb    bh,cl
  40cc74:	pop    edx
  40cc75:	inc    edx
  40cc76:	out    0xb9,eax
  40cc78:	dec    eax
  40cc79:	mov    bl,0x71
  40cc7b:	mov    ah,0x10
  40cc7d:	pop    esp
  40cc7e:	popa   
  40cc7f:	mov    edi,0x14ec0379
  40cc84:	add    ecx,esi
  40cc86:	imul   ebp,edx,0xffffffee
  40cc89:	(bad)  
  40cc8a:	jecxz  0x40cc4b
  40cc8c:	mov    cl,0x11
  40cc8e:	shl    edx,0x19
  40cc91:	or     BYTE PTR [edi],al
  40cc93:	pushf  
  40cc94:	mov    esp,0xe0483000
  40cc99:	or     eax,DWORD PTR [esi+0x5fb14e05]
  40cc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cca0:	call   0x2521ec11
  40cca5:	add    bh,BYTE PTR [ecx-0xd]
  40cca8:	mov    ah,0xe3
  40ccaa:	dec    ecx
  40ccab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccac:	sub    al,0x15
  40ccae:	mov    al,ds:0x8ac9899b
  40ccb3:	test   eax,0xa5e00188
  40ccb8:	adc    al,0xf5
  40ccba:	jp     0x40cc7b
  40ccbc:	pop    ecx
  40ccbd:	retf   
  40ccbe:	or     eax,0x957fcc25
  40ccc3:	fnstsw WORD PTR [edx]
  40ccc5:	jns    0x40cd2b
  40ccc7:	dec    ebp
  40ccc8:	(bad)  
  40ccc9:	retf   
  40ccca:	inc    eax
  40cccb:	fisubr WORD PTR [ebx-0x7]
  40ccce:	sahf   
  40cccf:	sub    cl,BYTE PTR [ebx-0x7]
  40ccd2:	push   esi
  40ccd3:	jno    0x40ccc7
  40ccd5:	fs popa 
  40ccd7:	scas   eax,DWORD PTR es:[edi]
  40ccd8:	mov    bh,0xb3
  40ccda:	pop    esp
  40ccdb:	or     al,0x3d
  40ccdd:	mov    WORD PTR [ebp+0x3a],gs
  40cce0:	into   
  40cce1:	ds mov esp,0x4605da08
  40cce7:	(bad)  
  40cce8:	fidivr WORD PTR [eax-0x46bd631]
  40ccee:	adc    eax,0x4733a585
  40ccf3:	jmp    0x80b4b758
  40ccf8:	in     eax,0xb
  40ccfa:	(bad)  
  40ccfc:	push   0xd71aa3da
  40cd01:	push   0x69
  40cd03:	mov    BYTE PTR [ecx],dl
  40cd05:	mov    al,0xd2
  40cd07:	cs or  eax,0xb030e448
  40cd0d:	fisubr WORD PTR ds:0x8d73a27
  40cd13:	pmullw mm7,QWORD PTR [esi+ebx*8-0x74]
  40cd18:	mov    DWORD PTR [ebp-0x7a],eax
  40cd1b:	push   edx
  40cd1c:	mov    bh,0xb8
  40cd1e:	xchg   esp,eax
  40cd1f:	add    dh,BYTE PTR [edx+ebp*1-0x524ed5e6]
  40cd26:	jbe    0x40ccba
  40cd28:	inc    esi
  40cd29:	js     0x40cd1c
  40cd2b:	fst    DWORD PTR [ecx+0x36]
  40cd2e:	pop    esp
  40cd2f:	xchg   esp,eax
  40cd30:	add    eax,0xdbd23ecf
  40cd35:	xor    DWORD PTR [edx-0x16],esp
  40cd38:	shl    edi,1
  40cd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd3b:	and    DWORD PTR [ebp+eax*4-0x2d],edi
  40cd3f:	imul   ebx,DWORD PTR [edx+edi*4+0x2fe782b8],0x77
  40cd47:	in     eax,0x71
  40cd49:	inc    edi
  40cd4a:	popf   
  40cd4b:	enter  0x88dd,0xe8
  40cd4f:	mov    WORD PTR [ecx+0x5f],fs
  40cd52:	add    DWORD PTR [edi-0x70],0x49
  40cd56:	shl    BYTE PTR [edi],0x4e
  40cd59:	pop    ds
  40cd5a:	cmp    BYTE PTR [ebx-0x43],0x61
  40cd5e:	outs   dx,DWORD PTR ds:[esi]
  40cd5f:	jnp    0x40cd11
  40cd61:	jns    0x40cd70
  40cd63:	jno    0x40cd7f
  40cd65:	sahf   
  40cd66:	fidivr WORD PTR [ebx]
  40cd68:	xchg   BYTE PTR [edx-0x2f9f2769],dh
  40cd6e:	pop    esp
  40cd6f:	xchg   dl,bh
  40cd71:	push   0x39b75169
  40cd76:	lods   al,BYTE PTR ds:[esi]
  40cd77:	and    DWORD PTR [ecx+0x4],eax
  40cd7a:	neg    BYTE PTR [ebx+0x7cf17d9d]
  40cd80:	das    
  40cd81:	mov    dh,0x75
  40cd83:	mov    ebp,0x5819cd5
  40cd88:	inc    ecx
  40cd89:	out    0x5b,al
  40cd8b:	xchg   ebp,eax
  40cd8c:	adc    eax,0x6d56565f
  40cd91:	cmp    ebx,DWORD PTR [edi]
  40cd93:	into   
  40cd94:	and    cl,dh
  40cd96:	js     0x40cd38
  40cd98:	in     eax,0xea
  40cd9a:	arpl   WORD PTR [ebp-0x53],cx
  40cd9d:	stc    
  40cd9e:	mov    esp,0x4c80b07e
  40cda3:	sbb    BYTE PTR [ebx],ch
  40cda5:	ins    BYTE PTR es:[edi],dx
  40cda6:	jns    0x40cdc5
  40cda8:	mov    bl,0xb4
  40cdaa:	mov    esp,0xf7508d7
  40cdaf:	retf   0x7d58
  40cdb2:	ret    
  40cdb3:	stc    
  40cdb4:	jl     0x40cd52
  40cdb6:	pop    ecx
  40cdb7:	inc    ecx
  40cdb8:	lahf   
  40cdb9:	mov    ebp,es
  40cdbb:	ret    
  40cdbc:	and    DWORD PTR [esi-0x14b8c7ce],eax
  40cdc2:	(bad)  
  40cdc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdc4:	lea    eax,[ebp+0x3c944fb3]
  40cdca:	pushf  
  40cdcb:	xchg   esi,eax
  40cdcc:	adc    al,0x8d
  40cdce:	ins    BYTE PTR es:[edi],dx
  40cdcf:	ret    0x9539
  40cdd2:	mov    esi,0xb860311d
  40cdd7:	pusha  
  40cdd8:	mov    ah,BYTE PTR [edi+ecx*4+0x9b3b81c]
  40cddf:	cmp    DWORD PTR [ecx+ebp*1-0x55865278],ebx
  40cde6:	lods   eax,DWORD PTR ds:[esi]
  40cde7:	addr16 loopne 0x40ce1c
  40cdea:	or     DWORD PTR [esi-0x136d0c29],edi
  40cdf0:	sub    al,0x38
  40cdf2:	(bad)  [edi-0x45]
  40cdf5:	inc    DWORD PTR [esp+eax*1+0x593e61fc]
  40cdfc:	push   ebx
  40cdfd:	mov    edi,0xafdb6bb3
  40ce02:	popf   
  40ce03:	sbb    eax,0x52ce206a
  40ce08:	in     eax,0xd2
  40ce0a:	add    bh,0xb1
  40ce0d:	(bad)  
  40ce0e:	push   0x52
  40ce10:	test   eax,0x1ee77c48
  40ce15:	mov    ah,0xfd
  40ce17:	pop    es
  40ce18:	in     eax,dx
  40ce19:	loope  0x40ce61
  40ce1b:	jecxz  0x40ce1e
  40ce1d:	in     eax,0x26
  40ce1f:	or     BYTE PTR [ebx-0x29],0xa3
  40ce23:	jmp    0x40cea2
  40ce25:	mov    ch,BYTE PTR [ecx-0x340b70cd]
  40ce2b:	sub    BYTE PTR [edi+0x51],cl
  40ce2e:	adc    eax,0x58857cff
  40ce33:	sbb    ebx,edx
  40ce35:	mov    ebx,DWORD PTR [edx+0x39]
  40ce38:	mov    bl,0x21
  40ce3a:	sar    DWORD PTR [edx+0x23093fcc],0x74
  40ce41:	fdiv   QWORD PTR [eax-0x203048fa]
  40ce47:	adc    eax,0x31e67197
  40ce4c:	mov    eax,ds:0xaf2d3b31
  40ce51:	in     eax,0xb7
  40ce53:	jg     0x40cde1
  40ce55:	rcl    dl,1
  40ce57:	xchg   DWORD PTR [edi],esp
  40ce59:	mov    ecx,0x7858bc57
  40ce5e:	mov    bh,0x1e
  40ce60:	das    
  40ce61:	add    bh,BYTE PTR [edx+0x7c7405f7]
  40ce67:	mov    eax,ds:0xaaafa1e1
  40ce6c:	cmp    bh,BYTE PTR [ebp-0x5c]
  40ce6f:	cmp    DWORD PTR [ebp-0x17],0xe
  40ce73:	dec    ebp
  40ce74:	mov    al,0xd3
  40ce76:	imul   edi,DWORD PTR [edx+0x26799c43],0xe
  40ce7d:	jle    0x40cebc
  40ce7f:	cdq    
  40ce80:	in     al,0x6a
  40ce82:	popa   
  40ce83:	cmp    DWORD PTR ds:0x270026be,0xcb84de1a
  40ce8d:	pop    esi
  40ce8e:	xor    al,0xce
  40ce90:	ret    
  40ce91:	arpl   WORD PTR [ebx+0x29],di
  40ce94:	pop    es
  40ce95:	ss call 0x32daf35d
  40ce9b:	push   esp
  40ce9c:	and    esi,DWORD PTR ds:0xd990f431
  40cea2:	push   cs
  40cea3:	nop
  40cea4:	ficom  WORD PTR [eax+edi*1-0x5eaff97f]
  40ceab:	jb     0x40cedf
  40cead:	bound  edx,QWORD PTR [ecx+0x42]
  40ceb0:	cmp    al,0x70
  40ceb2:	(bad)  
  40ceb3:	mov    cl,0xf2
  40ceb5:	sbb    al,0x83
  40ceb7:	sub    al,BYTE PTR [ebx+esi*4]
  40ceba:	jle    0x40cf2c
  40cebc:	arpl   WORD PTR ds:0xc2fb587,bp
  40cec2:	add    ah,BYTE PTR [esp+ebp*1-0x7c]
  40cec6:	das    
  40cec7:	(bad)  
  40cec8:	(bad)  
  40cec9:	mov    al,ds:0x319e5edf
  40cece:	icebp  
  40cecf:	xchg   esi,eax
  40ced0:	jne    0x40cf2a
  40ced2:	dec    ebx
  40ced3:	outs   dx,DWORD PTR ds:[esi]
  40ced4:	and    edi,0xffffffb3
  40ced7:	dec    ebx
  40ced8:	int    0xc0
  40ceda:	pop    ebp
  40cedb:	leave  
  40cedc:	add    al,BYTE PTR [ebx]
  40cede:	dec    esi
  40cedf:	jge    0x40ce6e
  40cee1:	push   ebp
  40cee2:	mov    bh,BYTE PTR [edx+0xe]
  40cee5:	daa    
  40cee6:	sub    esi,DWORD PTR [esi+0x71]
  40cee9:	xor    bh,BYTE PTR [eax+0x438c20a2]
  40ceef:	mov    ds:0x29c44b00,eax
  40cef4:	adc    BYTE PTR [eax+0x76],dl
  40cef7:	mov    dh,0xaa
  40cef9:	or     DWORD PTR [edx-0xd],edx
  40cefc:	bnd jmp 0xa2f777b6
  40cf02:	adc    eax,0x5e7b076f
  40cf07:	pop    esp
  40cf08:	ds popf 
  40cf0a:	call   0xbf20e5eb
  40cf0f:	jne    0x40cf6a
  40cf11:	ja     0x40ceb8
  40cf13:	mov    esi,0xd34bba94
  40cf18:	mov    ch,0x97
  40cf1a:	pop    edx
  40cf1b:	aaa    
  40cf1c:	adc    al,0xa6
  40cf1e:	adc    DWORD PTR [eax-0x3ab72b82],0xa435f206
  40cf28:	pop    ebp
  40cf29:	int3   
  40cf2a:	loop   0x40cefa
  40cf2c:	(bad)  
  40cf2d:	popa   
  40cf2e:	imul   esp,DWORD PTR [ecx-0x31],0xbca44aaa
  40cf35:	(bad)  
  40cf36:	jecxz  0x40ced8
  40cf38:	mov    al,ds:0x976f65e4
  40cf3d:	sbb    edi,DWORD PTR [ebp-0x3dd8e000]
  40cf43:	xchg   ebp,eax
  40cf44:	jmp    0x40cf94
  40cf46:	ret    0x7e58
  40cf49:	lods   al,BYTE PTR ds:[esi]
  40cf4a:	and    DWORD PTR [eax-0x48],ecx
  40cf4d:	sub    DWORD PTR [edi],ebp
  40cf4f:	ins    DWORD PTR es:[edi],dx
  40cf50:	sub    cl,BYTE PTR [ecx]
  40cf52:	push   ebx
  40cf53:	dec    esi
  40cf54:	dec    esp
  40cf55:	push   0xdb6d8c0a
  40cf5a:	and    ebx,DWORD PTR [ebx-0x40501b7d]
  40cf60:	es jnp 0x40cef0
  40cf63:	inc    esi
  40cf64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf65:	call   0xceeb:0xa075328
  40cf6c:	or     al,0x71
  40cf6e:	data16 adc BYTE PTR [edx+eax*4-0x42],0xdf
  40cf74:	inc    ecx
  40cf75:	cli    
  40cf76:	pop    edx
  40cf77:	fidivr DWORD PTR [ebp-0x6d85533a]
  40cf7d:	loop   0x40cfe4
  40cf7f:	mov    al,0x99
  40cf81:	fldenv [eax]
  40cf83:	(bad)  
  40cf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf85:	xor    ah,al
  40cf87:	inc    edi
  40cf88:	mov    esp,0xd5d4cc81
  40cf8d:	sbb    BYTE PTR [edi*2+0x370acc78],dl
  40cf94:	xchg   edx,eax
  40cf95:	inc    esp
  40cf96:	pop    ecx
  40cf97:	dec    ebx
  40cf98:	mov    ds:0x1bcd309c,eax
  40cf9d:	xor    eax,0xab32ea15
  40cfa2:	sub    eax,0xe106cab6
  40cfa7:	adc    dh,BYTE PTR [ebp+0x5fcf19e0]
  40cfad:	push   0x12239b9b
  40cfb2:	dec    edx
  40cfb3:	add    DWORD PTR [esi+0x27],esp
  40cfb6:	fild   WORD PTR [ecx-0x75]
  40cfb9:	aam    0xaf
  40cfbb:	test   bh,dh
  40cfbd:	int3   
  40cfbe:	mov    ah,0xbe
  40cfc0:	jge    0x40cf5b
  40cfc2:	sub    ebp,DWORD PTR [ecx-0x5a]
  40cfc5:	mov    ds:0x8ec55a83,al
  40cfca:	fcomp  DWORD PTR [esp+edi*2]
  40cfcd:	sbb    ebx,DWORD PTR [edi+edx*2+0x5]
  40cfd1:	cwde   
  40cfd2:	sahf   
  40cfd3:	cmp    edi,DWORD PTR [ebx]
  40cfd5:	xchg   edi,eax
  40cfd6:	lea    edx,[esi+0x1f]
  40cfd9:	push   ss
  40cfda:	add    dl,BYTE PTR [ecx+0x25]
  40cfdd:	mov    esp,0x8680f224
  40cfe2:	sbb    eax,0x991dffb8
  40cfe7:	mov    eax,0xafbb5ac9
  40cfec:	lods   eax,DWORD PTR ds:[esi]
  40cfed:	fld    QWORD PTR [eax+0x3761b0f5]
  40cff3:	push   esi
  40cff4:	push   es
  40cff5:	inc    ebx
  40cff6:	pop    ds
  40cff7:	mov    bh,0x6e
  40cff9:	xchg   ebx,eax
  40cffa:	imul   BYTE PTR [eax]
  40cffc:	pextrw edx,mm4,0xb3
  40d000:	bound  ebp,QWORD PTR [ecx+0x605813ef]
  40d006:	push   es
  40d007:	popf   
  40d008:	push   ebx
  40d009:	push   ecx
  40d00a:	call   0x7a8d636a
  40d00f:	and    DWORD PTR [edx],edx
  40d011:	mov    ecx,0xe35fbe64
  40d016:	jae    0x40d012
  40d018:	dec    edi
  40d019:	sbb    edx,DWORD PTR [ebx+0x145ad978]
  40d01f:	mov    esp,0x4adbf2e8
  40d024:	fld    TBYTE PTR [ebx]
  40d026:	push   ebx
  40d027:	xchg   ebp,eax
  40d028:	and    eax,DWORD PTR [esi-0x3b]
  40d02b:	mov    eax,ds:0xd3645f5e
  40d030:	jge    0x40cfed
  40d032:	aam    0x7a
  40d034:	pop    edx
  40d035:	shr    BYTE PTR [edi],0x8e
  40d038:	push   esi
  40d039:	rcr    BYTE PTR [ecx+0x3d],0xf1
  40d03d:	xchg   DWORD PTR [edx-0x25],esp
  40d040:	pusha  
  40d041:	sbb    edx,edi
  40d043:	pop    esp
  40d044:	sahf   
  40d045:	out    0x4f,al
  40d047:	push   esi
  40d048:	imul   cl
  40d04a:	inc    ebx
  40d04b:	inc    esi
  40d04c:	ins    BYTE PTR es:[edi],dx
  40d04d:	bound  eax,QWORD PTR [eax+ebp*1]
  40d050:	aaa    
  40d051:	data16 xor bh,bh
  40d054:	fmul   st(5),st
  40d056:	lds    eax,FWORD PTR [eax+eiz*4-0x14549a34]
  40d05d:	(bad)  
  40d05e:	call   0xe82cf8cd
  40d063:	push   esp
  40d064:	and    al,BYTE PTR [ecx-0x1a]
  40d067:	add    dl,BYTE PTR [ebp-0x2e]
  40d06a:	xchg   ecx,eax
  40d06b:	jmp    0x131f:0x69209e31
  40d072:	shl    BYTE PTR [ebx],1
  40d074:	cld    
  40d075:	test   dh,0xaf
  40d078:	fst    QWORD PTR [esp+eax*8+0x12]
  40d07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d07d:	sti    
  40d07e:	rcr    esp,1
  40d080:	push   edi
  40d081:	retf   
  40d082:	bound  ebx,QWORD PTR [edx-0xb871f85]
  40d088:	arpl   WORD PTR [ebp+0x41],ax
  40d08b:	retf   0xe03e
  40d08e:	ss ret 
  40d090:	aam    0xcc
  40d092:	loope  0x40d0a3
  40d094:	(bad)  
  40d095:	stos   DWORD PTR es:[edi],eax
  40d096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d097:	lahf   
  40d098:	out    dx,eax
  40d099:	and    BYTE PTR [ecx-0x68],bl
  40d09c:	mov    bl,0xcd
  40d09e:	or     eax,0xf11b2479
  40d0a3:	(bad)  
  40d0a4:	nop
  40d0a5:	addr16 push cs
  40d0a7:	fisttp DWORD PTR [ebp+0x7bfbdd81]
  40d0ad:	mov    bh,0xff
  40d0af:	retf   
  40d0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b1:	fidiv  DWORD PTR [ecx-0x19c0a6d1]
  40d0b7:	jno    0x40d0b6
  40d0b9:	hlt    
  40d0ba:	aam    0x90
  40d0bc:	xlat   BYTE PTR ds:[ebx]
  40d0bd:	mov    ds:0xb1ec155b,eax
  40d0c2:	sub    eax,0xb98de7dc
  40d0c7:	call   0x8dbb62b3
  40d0cc:	out    dx,al
  40d0cd:	mov    ch,0xa9
  40d0cf:	xor    ch,al
  40d0d1:	cli    
  40d0d2:	sbb    al,0x78
  40d0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0d5:	gs stc 
  40d0d7:	retf   
  40d0d8:	leave  
  40d0d9:	aaa    
  40d0da:	in     al,0xe4
  40d0dc:	inc    ebp
  40d0dd:	sbb    eax,0x250ced4f
  40d0e2:	mov    esp,0x459bb58f
  40d0e7:	lock out 0x78,eax
  40d0ea:	xchg   ebp,eax
  40d0eb:	fs (bad) 
  40d0ed:	pusha  
  40d0ee:	in     al,0x2f
  40d0f0:	in     eax,dx
  40d0f1:	sub    DWORD PTR [eax],ebp
  40d0f3:	in     al,0x38
  40d0f5:	push   ss
  40d0f6:	xchg   ecx,eax
  40d0f7:	popa   
  40d0f8:	cmc    
  40d0f9:	clc    
  40d0fa:	in     eax,0x51
  40d0fc:	int3   
  40d0fd:	xlat   BYTE PTR ds:[ebx]
  40d0fe:	xor    al,0xf9
  40d100:	inc    ecx
  40d101:	les    esp,FWORD PTR [bp+di+0xc6b]
  40d106:	and    ecx,ebx
  40d108:	addr16 gs popf 
  40d10b:	push   edx
  40d10c:	je     0x40d097
  40d10e:	leave  
  40d10f:	mov    bl,0xdf
  40d111:	xchg   edi,eax
  40d112:	ins    BYTE PTR es:[edi],dx
  40d113:	mov    dh,0xfb
  40d115:	arpl   ax,bp
  40d117:	in     eax,0xc5
  40d119:	inc    ebx
  40d11a:	or     DWORD PTR [edi-0x76],ecx
  40d11d:	mov    dh,0x78
  40d11f:	add    BYTE PTR [esi-0x42b26bf3],0xfe
  40d126:	repz push 0x37
  40d129:	push   cs
  40d12a:	imul   eax,ecx,0xf5de9e78
  40d130:	cmp    BYTE PTR [ecx],bh
  40d132:	data16 jnp 0x40d14d
  40d135:	aas    
  40d136:	push   ebp
  40d137:	mov    ch,0xc6
  40d139:	and    ah,bl
  40d13b:	out    dx,al
  40d13c:	jp     0x40d0f8
  40d13e:	imul   edi,esi,0xffffffc5
  40d141:	jne    0x40d14e
  40d143:	add    BYTE PTR [ebx-0x36],dl
  40d146:	sbb    cl,al
  40d148:	jl     0x40d0cd
  40d14a:	xchg   edx,eax
  40d14b:	adc    ch,BYTE PTR [eax+edx*4-0x19]
  40d14f:	mov    dl,ch
  40d151:	push   ss
  40d152:	repz mov ds:0xea834e61,al
  40d158:	imul   edx,DWORD PTR [ebx+0x52],0x60
  40d15c:	sub    ecx,DWORD PTR [edx-0x69401c52]
  40d162:	sbb    BYTE PTR ds:0x60ba218b,bl
  40d168:	ror    BYTE PTR [edi+0x7d99779a],0xa6
  40d16f:	and    BYTE PTR ds:0x27eaf76b,ah
  40d175:	add    BYTE PTR [ecx],0x47
  40d178:	dec    eax
  40d179:	dec    ecx
  40d17a:	cli    
  40d17b:	xchg   esp,eax
  40d17c:	jb     0x40d0fe
  40d17e:	test   edx,ebx
  40d180:	mov    ah,0xab
  40d182:	mov    ds:0x2b7973e1,al
  40d187:	test   BYTE PTR [ecx-0x78],dl
  40d18a:	ds gs mov ah,0x46
  40d18e:	stos   DWORD PTR es:[edi],eax
  40d18f:	sti    
  40d190:	jns    0x40d1b3
  40d192:	dec    ebp
  40d193:	jmp    0xb0847e3d
  40d198:	push   0x14878262
  40d19d:	inc    ebp
  40d19e:	xchg   ebp,eax
  40d19f:	sar    DWORD PTR [edx-0x1eab701e],1
  40d1a5:	cmp    ch,BYTE PTR [eax+0x29]
  40d1a8:	push   ss
  40d1a9:	test   BYTE PTR [edx-0x3d8b8649],cl
  40d1af:	cmc    
  40d1b0:	movd   DWORD PTR [edx+0xa],mm4
  40d1b4:	sub    al,0x83
  40d1b6:	mov    ebp,0x269a330c
  40d1bb:	sbb    DWORD PTR [ebx],0x1b
  40d1be:	cmp    eax,0x526a6570
  40d1c3:	test   eax,0x714f0348
  40d1c8:	mov    edx,0xe62881f0
  40d1cd:	addr16 pop edi
  40d1cf:	arpl   WORD PTR [ebp+edi*4-0x73],bp
  40d1d3:	or     dl,0x28
  40d1d6:	pop    edi
  40d1d7:	mov    ah,0xa
  40d1d9:	or     esi,DWORD PTR [ebx-0x3e]
  40d1dc:	call   0x775a:0x4f905631
  40d1e3:	loop   0x40d16d
  40d1e5:	mov    BYTE PTR [esi],al
  40d1e7:	sub    edx,edi
  40d1e9:	repnz xor dl,bh
  40d1ec:	in     eax,dx
  40d1ed:	mov    esp,0xfa6c397d
  40d1f2:	loope  0x40d223
  40d1f4:	xor    al,0xea
  40d1f6:	ficomp WORD PTR [ebx]
  40d1f8:	dec    edi
  40d1f9:	or     al,0xab
  40d1fb:	ja     0x40d18c
  40d1fd:	and    ebx,DWORD PTR [edi+0xd784540]
  40d203:	push   esp
  40d204:	imul   edx,DWORD PTR [ebp+0x7d],0x63
  40d208:	mov    ecx,esp
  40d20a:	ret    
  40d20b:	add    eax,0x4434ae78
  40d210:	(bad)  
  40d211:	dec    BYTE PTR [esi+0x8f8f6cb]
  40d217:	lods   al,BYTE PTR ds:[esi]
  40d218:	push   ecx
  40d219:	sbb    BYTE PTR [ebx],bh
  40d21b:	mov    ecx,0x8af78b40
  40d220:	or     al,0x41
  40d222:	sub    esp,DWORD PTR [ebp-0xb]
  40d225:	pushf  
  40d226:	add    BYTE PTR ss:[edi-0x31abaf60],ah
  40d22d:	in     eax,dx
  40d22e:	add    BYTE PTR [ebx-0x54],al
  40d231:	xor    DWORD PTR [ebx-0x2d3adebb],esp
  40d237:	retf   
  40d238:	push   es
  40d239:	dec    esi
  40d23a:	scas   eax,DWORD PTR es:[edi]
  40d23b:	popf   
  40d23c:	int    0x15
  40d23e:	adc    DWORD PTR [edi-0x7203d87f],eax
  40d244:	lods   al,BYTE PTR gs:[esi]
  40d246:	inc    edi
  40d247:	neg    edx
  40d249:	fmul   DWORD PTR [ecx+0x6fe09f40]
  40d24f:	mov    bh,0x3d
  40d251:	(bad)  
  40d252:	ja     0x40d2b6
  40d254:	jmp    0x40fe731b
  40d259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d25a:	fcomp  st(4)
  40d25c:	mov    ds:0xa9390c72,al
  40d261:	mov    dh,0x0
  40d263:	jo     0x40d21b
  40d265:	jp     0x40d236
  40d267:	fs jg  0x40d271
  40d26a:	pop    eax
  40d26b:	clc    
  40d26c:	add    eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	mov    bh,BYTE PTR [esi+0x1]
  40d2ff:	or     al,0x95
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	and    edi,0xffffffcb
  40d30a:	xchg   ebp,eax
  40d30b:	sbb    esp,DWORD PTR [ebp+0x20747988]
  40d311:	and    DWORD PTR [ecx],esp
  40d313:	clc    
  40d314:	ss pop edx
  40d316:	jns    0x40d2c3
  40d318:	scas   eax,DWORD PTR es:[edi]
  40d319:	and    edx,DWORD PTR [edi-0x10]
  40d31c:	adc    esp,DWORD PTR [esi]
  40d31e:	jge    0x40d2a1
  40d320:	cmp    al,0xc0
  40d322:	aad    0xfe
  40d324:	push   esp
  40d325:	jo     0x40d350
  40d327:	int    0x47
  40d329:	and    esp,ebp
  40d32b:	and    esi,eax
  40d32d:	dec    esp
  40d32e:	mov    eax,ds:0x5df2a1c9
  40d333:	mov    ds:0xd9fa693b,al
  40d338:	jl     0x40d38d
  40d33a:	push   ebx
  40d33b:	or     ebp,DWORD PTR [edi+0x3b]
  40d33e:	add    al,0xc0
  40d340:	push   ss
  40d341:	mov    es,WORD PTR [eax-0x72]
  40d344:	inc    edi
  40d345:	phaddd mm3,mm7
  40d349:	ds pop ds
  40d34b:	fs fdiv st,st(3)
  40d34e:	inc    edx
  40d34f:	cmp    ebx,DWORD PTR [esp+eax*1+0x13]
  40d353:	test   ecx,0xb3d871f1
  40d359:	(bad)  
  40d35a:	imul   ecx,DWORD PTR [esi+0x11308c3e],0xffffffb9
  40d361:	retf   0x8f3
  40d364:	sbb    BYTE PTR [esi],dl
  40d366:	push   edi
  40d367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d368:	into   
  40d369:	pop    ebp
  40d36a:	inc    eax
  40d36b:	sti    
  40d36c:	xchg   edx,eax
  40d36d:	loope  0x40d3e4
  40d36f:	retf   0x5999
  40d372:	(bad)  
  40d374:	popf   
  40d375:	push   ebp
  40d376:	jl     0x40d36d
  40d378:	jae    0x40d330
  40d37a:	ror    DWORD PTR ds:0x9f310c8c,cl
  40d380:	lock xchg edi,eax
  40d382:	mov    ds:0xe72d9493,eax
  40d387:	not    DWORD PTR [ecx+0x91c70b8]
  40d38d:	mov    ebp,0x8c69215e
  40d392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d393:	mov    ds:0x3bf97ec6,eax
  40d398:	iret   
  40d399:	sbb    ecx,DWORD PTR [ecx+0x71c6e0b8]
  40d39f:	dec    edi
  40d3a0:	adc    ch,BYTE PTR [edi+0x3fc07f7b]
  40d3a6:	cwde   
  40d3a7:	adc    bh,BYTE PTR [edx-0x66]
  40d3aa:	mov    ds:0xca3d9b7c,eax
  40d3af:	adc    edx,esi
  40d3b1:	(bad)  
  40d3b2:	cld    
  40d3b3:	(bad)  
  40d3b4:	mov    esp,0xbab488fb
  40d3b9:	push   ebp
  40d3ba:	int3   
  40d3bb:	pop    edx
  40d3bc:	cvtps2pi mm0,xmm4
  40d3bf:	mov    bl,0x31
  40d3c1:	scas   al,BYTE PTR es:[edi]
  40d3c2:	and    eax,0x9d084601
  40d3c7:	lea    ebx,[edx-0x75]
  40d3ca:	add    al,0x67
  40d3cc:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ce:	adc    al,0x69
  40d3d0:	mov    ds:0x34b4e536,eax
  40d3d5:	pop    esi
  40d3d6:	ja     0x40d3a4
  40d3d8:	loope  0x40d423
  40d3da:	pop    edi
  40d3db:	cmp    al,0x24
  40d3dd:	ja     0x40d372
  40d3df:	ins    BYTE PTR es:[edi],dx
  40d3e0:	cmp    DWORD PTR ds:0x455aa1e2,edx
  40d3e6:	push   es
  40d3e7:	repnz ins DWORD PTR es:[edi],dx
  40d3e9:	out    0xcc,eax
  40d3eb:	xchg   edx,eax
  40d3ec:	(bad)  
  40d3ed:	push   ebx
  40d3ee:	dec    eax
  40d3ef:	cmp    eax,0xf847aa03
  40d3f4:	sbb    al,0x24
  40d3f6:	mov    dh,0x41
  40d3f8:	inc    ecx
  40d3f9:	push   es
  40d3fa:	cmc    
  40d3fb:	push   edi
  40d3fc:	cdq    
  40d3fd:	push   ebx
  40d3fe:	(bad)  
  40d400:	iret   
  40d401:	or     BYTE PTR [ecx-0x36],al
  40d404:	ror    BYTE PTR [edi-0xcdc2def],cl
  40d40a:	mov    ds,WORD PTR [ebp-0x70f1b2d8]
  40d410:	dec    edx
  40d411:	fld    QWORD PTR [eax]
  40d413:	cmp    esp,DWORD PTR cs:[esi+0x55153546]
  40d41a:	jns    0x40d436
  40d41c:	push   edx
  40d41d:	xor    ch,BYTE PTR [edi-0x57d067ce]
  40d423:	(bad)  [esi-0x39]
  40d426:	inc    esi
  40d427:	out    0x31,eax
  40d429:	test   al,0xb2
  40d42b:	rep stos DWORD PTR es:[edi],eax
  40d42d:	ss inc ebx
  40d42f:	ficomp WORD PTR [ecx]
  40d431:	mov    ?,ebp
  40d433:	enter  0x19b0,0xd8
  40d437:	jne    0x40d46b
  40d439:	fild   WORD PTR [edx-0x26]
  40d43c:	push   esp
  40d43d:	je     0x40d414
  40d43f:	jb     0x40d448
  40d441:	inc    esi
  40d442:	mov    ah,0x2c
  40d444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d445:	test   BYTE PTR [ebp+esi*4+0x59346ef2],cl
  40d44c:	retf   0x75dd
  40d44f:	or     DWORD PTR [ebx+0x6f3e1cd0],edi
  40d455:	aad    0xc7
  40d457:	ror    DWORD PTR [esi-0x1dbcfd76],1
  40d45d:	and    al,BYTE PTR [ebx+0x3b]
  40d460:	mov    al,0x88
  40d462:	sahf   
  40d463:	cmc    
  40d464:	sbb    al,0xb6
  40d466:	hlt    
  40d467:	ret    0xbfd3
  40d46a:	popf   
  40d46b:	mov    esp,0xd1a3e1a8
  40d470:	sub    bh,al
  40d472:	fimul  WORD PTR [edi-0x3]
  40d475:	sahf   
  40d476:	aaa    
  40d477:	fild   WORD PTR [eax+edi*4+0x64]
  40d47b:	xlat   BYTE PTR ds:[ebx]
  40d47c:	je     0x40d4f6
  40d47e:	cmc    
  40d47f:	inc    edi
  40d480:	dec    ebx
  40d481:	mov    ebx,0xe9495d12
  40d486:	push   0x61
  40d488:	xlat   BYTE PTR ds:[ebx]
  40d489:	dec    esp
  40d48a:	xchg   DWORD PTR [edx],esp
  40d48c:	sub    ah,dl
  40d48e:	pusha  
  40d48f:	xchg   esp,eax
  40d490:	mov    bl,0x2b
  40d492:	inc    edx
  40d493:	push   ebx
  40d494:	fidiv  WORD PTR [edx-0x2b3dc2ee]
  40d49a:	imul   eax,DWORD PTR [ebx+0x7d],0x6d
  40d49e:	and    DWORD PTR [ebp+0x0],edx
  40d4a1:	es and bl,bh
  40d4a4:	(bad)  
  40d4a5:	fsubr  st,st(7)
  40d4a7:	xor    al,0xd
  40d4a9:	cs out dx,al
  40d4ab:	mov    esi,0x6287a70c
  40d4b0:	adc    esp,DWORD PTR [ecx-0x2279a2bf]
  40d4b6:	into   
  40d4b7:	inc    edx
  40d4b8:	retf   0xa243
  40d4bb:	push   ss
  40d4bc:	outs   dx,DWORD PTR ds:[esi]
  40d4bd:	inc    ecx
  40d4be:	push   es
  40d4bf:	inc    esp
  40d4c0:	pop    edx
  40d4c1:	mov    bl,0xbd
  40d4c3:	push   edi
  40d4c4:	cmp    cl,bh
  40d4c6:	cld    
  40d4c7:	pop    edi
  40d4c8:	mov    ch,0x79
  40d4ca:	adc    al,BYTE PTR [edx+eiz*4+0x2a]
  40d4ce:	mov    ebp,0xa4b3858c
  40d4d3:	pop    ss
  40d4d4:	dec    edx
  40d4d5:	sub    DWORD PTR [ecx-0x9],edx
  40d4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d9:	push   eax
  40d4da:	push   esi
  40d4db:	push   eax
  40d4dc:	or     al,0x6f
  40d4de:	(bad)  
  40d4df:	fisubr DWORD PTR [esi]
  40d4e1:	sahf   
  40d4e2:	mov    bl,0xc
  40d4e4:	fidivr WORD PTR [ebp+0x2db030a2]
  40d4ea:	mov    bl,0xa4
  40d4ec:	or     DWORD PTR [edi-0x7c],ecx
  40d4ef:	ss inc ebp
  40d4f1:	(bad)  
  40d4f3:	push   esp
  40d4f4:	add    al,0xe1
  40d4f6:	sbb    BYTE PTR [edx+0x58de6b52],ah
  40d4fc:	leave  
  40d4fd:	(bad)  
  40d4fe:	dec    ebp
  40d4ff:	inc    esp
  40d500:	cmp    eax,0xa2673c2f
  40d505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d506:	ja     0x40d56d
  40d508:	or     cl,BYTE PTR [eax+0x702eb97b]
  40d50e:	mov    bh,0xa2
  40d510:	xchg   esp,eax
  40d511:	enter  0x9688,0x58
  40d515:	popf   
  40d516:	mov    esi,edi
  40d518:	out    0xbd,al
  40d51a:	xchg   BYTE PTR [eax+0x60],cl
  40d51d:	(bad)  
  40d51f:	gs repz data16 je 0x40d559
  40d524:	js     0x40d4b7
  40d526:	rcl    BYTE PTR [eax],0xbf
  40d529:	add    al,BYTE PTR [esi+0x844a13b]
  40d52f:	test   DWORD PTR [ebp-0x53],0xa43bfec5
  40d536:	fwait
  40d537:	in     al,dx
  40d538:	dec    ebx
  40d539:	rol    DWORD PTR [edi-0x20],1
  40d53c:	fstp   TBYTE PTR [eax-0x5bd9c29d]
  40d542:	and    eax,DWORD PTR [edx]
  40d544:	repnz les ebx,FWORD PTR [edx+0x74208375]
  40d54b:	out    dx,eax
  40d54c:	aas    
  40d54d:	add    ebx,esp
  40d54f:	repz mov dh,0xc8
  40d552:	xlat   BYTE PTR ds:[ebx]
  40d553:	jne    0x40d5b8
  40d555:	adc    ecx,DWORD PTR [edx-0x6d1efb48]
  40d55b:	pop    eax
  40d55c:	int3   
  40d55d:	pavgw  mm2,mm1
  40d560:	retf   
  40d561:	dec    ebp
  40d562:	or     eax,0x8ad05811
  40d567:	loope  0x40d545
  40d569:	test   DWORD PTR [edi-0x606069be],edx
  40d56f:	or     edi,DWORD PTR ds:0x65e32826
  40d575:	sub    BYTE PTR [ecx-0x3dcaa3b7],bl
  40d57b:	cmp    esp,edx
  40d57d:	mov    bh,0x4a
  40d57f:	imul   eax,ecx,0xd658773b
  40d585:	sbb    BYTE PTR [ebp-0x7bf66da5],ch
  40d58b:	dec    edx
  40d58c:	xor    ah,0xeb
  40d58f:	jb     0x40d521
  40d591:	inc    ecx
  40d592:	push   edi
  40d593:	retf   0x1983
  40d596:	and    edx,ebx
  40d598:	scas   al,BYTE PTR es:[edi]
  40d599:	pop    ebx
  40d59a:	jge    0x40d564
  40d59c:	dec    esp
  40d59d:	(bad)  
  40d59f:	aad    0xf5
  40d5a1:	repnz and DWORD PTR [esi-0x32b30bfc],ebx
  40d5a8:	cwde   
  40d5a9:	dec    edi
  40d5aa:	lods   eax,DWORD PTR ds:[esi]
  40d5ab:	repnz ins BYTE PTR es:[edi],dx
  40d5ad:	int3   
  40d5ae:	inc    eax
  40d5af:	sbb    ebx,DWORD PTR [edi-0x5badd489]
  40d5b5:	popf   
  40d5b6:	dec    ebx
  40d5b7:	jno    0x40d560
  40d5b9:	pop    ebx
  40d5ba:	int3   
  40d5bb:	mov    edi,0x59ff2962
  40d5c0:	xchg   edx,eax
  40d5c1:	push   esi
  40d5c2:	test   DWORD PTR [ebx],esp
  40d5c4:	popf   
  40d5c5:	cli    
  40d5c6:	adc    cl,BYTE PTR ds:0x17a8e209
  40d5cc:	inc    edx
  40d5cd:	sbb    esp,0xffffffda
  40d5d0:	inc    edi
  40d5d1:	or     al,BYTE PTR [edx+0x6c37667f]
  40d5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d8:	xchg   esi,eax
  40d5d9:	add    eax,0x2d54fb2
  40d5de:	add    eax,0x4580bd34
  40d5e3:	jle    0x40d590
  40d5e5:	sub    BYTE PTR [ecx-0xf],bh
  40d5e8:	(bad)  
  40d5e9:	fidivr DWORD PTR [ebp+0x36]
  40d5ec:	xor    al,0x8b
  40d5ee:	addr16 into 
  40d5f0:	test   al,0xd2
  40d5f2:	lock mov ds:0xb4789e91,eax
  40d5f8:	rol    BYTE PTR cs:[edi-0x6],cl
  40d5fc:	dec    edx
  40d5fd:	repnz cmp DWORD PTR [ebp-0x2e],esp
  40d601:	add    eax,0xbd15adbc
  40d606:	or     ah,al
  40d608:	imul   ecx,DWORD PTR [esi],0x5f
  40d60b:	xor    ch,BYTE PTR ds:0x5cd2faed
  40d611:	gs add eax,0x42690e55
  40d617:	adc    ebx,eax
  40d619:	daa    
  40d61a:	push   esp
  40d61b:	xor    eax,0xddd87465
  40d620:	rol    BYTE PTR [esi+edx*8-0xda9b4f8],1
  40d627:	dec    ebx
  40d628:	call   0xf348:0x24fdde10
  40d62f:	fnstenv [ecx]
  40d631:	fs es (bad) 
  40d634:	scas   al,BYTE PTR es:[edi]
  40d635:	add    eax,0x87ae1c0f
  40d63a:	add    al,0xae
  40d63c:	ret    0x5281
  40d63f:	add    DWORD PTR [edi],esi
  40d641:	dec    esi
  40d642:	cld    
  40d643:	imul   ecx,DWORD PTR [ebp-0x77],0x563aad9e
  40d64a:	adc    ebp,esp
  40d64c:	call   0x5308:0xd8425dd3
  40d653:	mov    cl,bl
  40d655:	aam    0xc6
  40d657:	ins    BYTE PTR es:[edi],dx
  40d658:	cli    
  40d659:	inc    edi
  40d65a:	(bad)  
  40d65b:	cmp    BYTE PTR [esp+esi*8+0x1730682a],dl
  40d662:	add    DWORD PTR [eax-0x57],ebp
  40d665:	xchg   ebp,eax
  40d666:	ds pop ebx
  40d668:	push   ss
  40d669:	push   eax
  40d66a:	in     eax,dx
  40d66b:	xchg   edx,eax
  40d66c:	ja     0x40d616
  40d66e:	xor    eax,DWORD PTR [esi+edi*4+0x280ba234]
  40d675:	or     dh,BYTE PTR [ebx+edx*2+0x33aee84]
  40d67c:	pop    ebx
  40d67d:	loope  0x40d6b7
  40d67f:	jne    0x40d6e8
  40d681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d682:	xor    eax,0xc5047137
  40d687:	out    0x65,al
  40d689:	enter  0x9a2e,0xad
  40d68d:	mov    al,ds:0x4fb0c318
  40d692:	mov    eax,0x78fa46bd
  40d697:	or     eax,0xa4287180
  40d69c:	mov    ch,0xbc
  40d69e:	mov    ds:0x55c8efdc,al
  40d6a3:	cdq    
  40d6a4:	cmp    ebp,ebp
  40d6a6:	int3   
  40d6a7:	(bad)  
  40d6a8:	cs xchg ebp,eax
  40d6aa:	mov    ds:0x2d2e80f1,eax
  40d6af:	push   0xc5a2678f
  40d6b4:	stc    
  40d6b5:	rcr    BYTE PTR [eax],1
  40d6b7:	fs jns 0x40d6f4
  40d6ba:	imul   eax,DWORD PTR [edx+0x4ffc705d],0xf8943f13
  40d6c4:	scas   al,BYTE PTR es:[edi]
  40d6c5:	xor    edi,DWORD PTR [ebp-0x4bc4c1ae]
  40d6cb:	fist   DWORD PTR [edi-0x28d3daf7]
  40d6d1:	call   0xf2ba9f2f
  40d6d6:	dec    edx
  40d6d7:	adc    BYTE PTR [esi],dl
  40d6d9:	out    dx,eax
  40d6da:	push   ebx
  40d6db:	mov    ch,0x8b
  40d6dd:	pop    esi
  40d6de:	(bad)  
  40d6df:	repz jne 0x40d6db
  40d6e2:	scas   eax,DWORD PTR es:[edi]
  40d6e3:	jne    0x40d686
  40d6e5:	daa    
  40d6e6:	das    
  40d6e7:	cld    
  40d6e8:	pop    eax
  40d6e9:	aas    
  40d6ea:	mov    eax,ds:0x329a3b88
  40d6ef:	inc    edx
  40d6f0:	shr    DWORD PTR [edx],1
  40d6f2:	mov    al,ds:0xaa617b0e
  40d6f7:	pandn  mm1,QWORD PTR [ecx+ebp*1]
  40d6fb:	dec    esp
  40d6fc:	sbb    eax,0x71b8013
  40d701:	cmp    al,BYTE PTR [edx]
  40d703:	push   0x79
  40d705:	and    al,0x0
  40d707:	sbb    esi,DWORD PTR [edx+0x178b34df]
  40d70d:	mov    esi,0x178c97e
  40d712:	pop    ebx
  40d713:	cmp    DWORD PTR [edx+0x3539fd4],ebp
  40d719:	(bad)  
  40d71b:	ret    
  40d71c:	xor    eax,0xa0a8b3e0
  40d721:	push   ebp
  40d722:	data16 lods al,BYTE PTR ds:[esi]
  40d724:	dec    edi
  40d725:	aaa    
  40d726:	sub    al,0xea
  40d728:	xchg   esi,eax
  40d729:	push   es
  40d72a:	clc    
  40d72b:	sbb    eax,0xf6bac492
  40d730:	in     eax,0xe9
  40d732:	jns    0x40d75a
  40d734:	push   edx
  40d735:	xchg   BYTE PTR [ebp-0x2dcd1807],cl
  40d73b:	mov    esi,0x21cffaf4
  40d740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d741:	je     0x40d773
  40d743:	jle    0x40d7b4
  40d745:	sbb    al,0x2b
  40d747:	pop    edx
  40d748:	pop    ds
  40d749:	dec    esp
  40d74a:	cmc    
  40d74b:	je     0x40d733
  40d74d:	mov    esp,0x8eb7f67b
  40d752:	cwde   
  40d753:	clc    
  40d754:	mov    dl,dl
  40d756:	(bad)  
  40d757:	mov    ebp,0x7adfe536
  40d75c:	test   BYTE PTR [eax+0x7db040c6],dh
  40d762:	ret    0x8a3e
  40d765:	loope  0x40d77a
  40d767:	test   al,0x4
  40d769:	jne    0x40d7d1
  40d76b:	adc    DWORD PTR [ebp-0x5db71985],0xda19745d
  40d775:	call   0x1732:0x6d4b0a99
  40d77c:	xor    al,0x6
  40d77e:	dec    ebx
  40d77f:	(bad)  
  40d780:	xor    dl,dl
  40d782:	(bad)  [esi]
  40d784:	dec    eax
  40d785:	retf   
  40d786:	pusha  
  40d787:	scas   al,BYTE PTR es:[edi]
  40d788:	loopne 0x40d78b
  40d78a:	jns    0x40d73a
  40d78c:	xchg   edx,eax
  40d78d:	jb     0x40d741
  40d78f:	jns    0x40d77c
  40d791:	mov    ?,WORD PTR [eax+0x45002b2b]
  40d797:	test   BYTE PTR gs:[edx],0x8d
  40d79b:	jle    0x40d78d
  40d79d:	hlt    
  40d79e:	sbb    DWORD PTR [ebx],ebx
  40d7a0:	mov    dh,0x62
  40d7a2:	adc    al,0x1c
  40d7a4:	xchg   edi,eax
  40d7a5:	push   esi
  40d7a6:	jns    0x40d7b3
  40d7a8:	loope  0x40d7dd
  40d7aa:	stos   BYTE PTR es:[edi],al
  40d7ab:	push   es
  40d7ac:	add    BYTE PTR [edi+0x4460e56b],al
  40d7b2:	lahf   
  40d7b3:	push   0x3f
  40d7b5:	out    0x7b,eax
  40d7b7:	gs dec ecx
  40d7b9:	mov    edi,0xac78b315
  40d7be:	sbb    eax,0x8a07aa2e
  40d7c3:	repz mov dl,0x2b
  40d7c6:	addr16 dec esi
  40d7c8:	les    ebp,FWORD PTR [ebx+0xa]
  40d7cb:	mov    esp,DWORD PTR [bp+0x7b]
  40d7cf:	mov    esi,0xc7c021c1
  40d7d4:	and    BYTE PTR [ebx-0xcaed7a7],0x3b
  40d7db:	jnp    0x40d77e
  40d7dd:	mov    cl,0x51
  40d7df:	mov    dh,0xf9
  40d7e1:	(bad)  
  40d7e2:	fld    TBYTE PTR [ecx+0x29]
  40d7e5:	pusha  
  40d7e6:	into   
  40d7e7:	sbb    al,0xad
  40d7e9:	loopne 0x40d828
  40d7eb:	fdivr  QWORD PTR [edx]
  40d7ed:	repnz rcl ah,cl
  40d7f0:	ja     0x40d819
  40d7f2:	retf   
  40d7f3:	(bad)  
  40d7f5:	mov    BYTE PTR [edx+0x46],cl
  40d7f8:	mov    esp,0xe028020f
  40d7fd:	cld    
  40d7fe:	js     0x40d7d8
  40d800:	adc    BYTE PTR [esi],dh
  40d802:	aad    0xf3
  40d804:	xor    cl,ch
  40d806:	fwait
  40d807:	add    DWORD PTR [eax],ebp
  40d809:	cld    
  40d80a:	fld    TBYTE PTR [edx-0x9eed072]
  40d810:	push   es
  40d811:	sub    BYTE PTR [edx-0x79114012],0x43
  40d818:	cmp    al,0xbf
  40d81a:	ins    BYTE PTR es:[edi],dx
  40d81b:	pushf  
  40d81c:	sub    BYTE PTR [esp+edx*8-0x27],cl
  40d820:	fwait
  40d821:	std    
  40d822:	repz in al,0xb8
  40d825:	mov    ch,0xe4
  40d827:	xor    ah,BYTE PTR [esi-0x31]
  40d82a:	sbb    DWORD PTR [edi-0x78ed18d6],edx
  40d830:	cld    
  40d831:	iret   
  40d832:	mov    al,ds:0x689cf257
  40d837:	mov    BYTE PTR [ebx+eiz*2],ah
  40d83a:	adc    eax,DWORD PTR [edx-0x94557cf]
  40d840:	fild   WORD PTR [edx]
  40d842:	inc    ecx
  40d843:	inc    ecx
  40d844:	ja     0x40d82e
  40d846:	xchg   edx,eax
  40d847:	inc    edi
  40d848:	sub    al,0xd4
  40d84a:	cmp    BYTE PTR [eax+0x63722323],ah
  40d850:	cmp    ch,bl
  40d852:	jno    0x40d8bf
  40d854:	mov    WORD PTR [eax+0x5d111f57],?
  40d85a:	cmp    DWORD PTR ds:0xdb115d8c,edx
  40d860:	ret    0xb52b
  40d863:	mov    edi,0x258d8fd4
  40d868:	fwait
  40d869:	cmp    al,0x95
  40d86b:	lahf   
  40d86c:	jb     0x40d8a7
  40d86e:	stos   BYTE PTR es:[edi],al
  40d86f:	sbb    al,0xb5
  40d871:	inc    edi
  40d872:	enter  0xc05c,0x90
  40d876:	rep outs dx,BYTE PTR ds:[esi]
  40d878:	jmp    0xfe83:0x9943fab3
  40d87f:	mov    ebp,0xe02c7055
  40d884:	pushf  
  40d885:	out    dx,al
  40d886:	jne    0x40d8b9
  40d888:	xchg   BYTE PTR [ecx-0x5342200d],al
  40d88e:	mov    edx,0x720b597f
  40d893:	sbb    DWORD PTR [ecx],edi
  40d895:	dec    edx
  40d896:	popf   
  40d897:	and    DWORD PTR [edi+0x361c3e56],0xffffffdc
  40d89e:	xchg   DWORD PTR [edx+0x27],eax
  40d8a1:	test   eax,0xa7cb0df9
  40d8a6:	fstp   TBYTE PTR [esi-0x7c]
  40d8a9:	cmp    al,0x1e
  40d8ab:	(bad)  
  40d8ac:	loope  0x40d8da
  40d8ae:	jle    0x40d897
  40d8b0:	(bad)  
  40d8b1:	cmp    eax,0x135dac9b
  40d8b6:	add    eax,0x2d2e930
  40d8bb:	jb     0x40d83e
  40d8bd:	shl    si,0x6e
  40d8c1:	push   ebp
  40d8c2:	xor    al,0x8f
  40d8c4:	mov    ah,0x46
  40d8c6:	jp     0x40d8c6
  40d8c8:	push   edx
  40d8c9:	push   ds
  40d8ca:	push   es
  40d8cb:	inc    ebx
  40d8cc:	mov    ss,edx
  40d8ce:	lea    edx,[ebx-0x56]
  40d8d1:	repnz dec ebx
  40d8d3:	lods   eax,DWORD PTR ds:[esi]
  40d8d4:	mov    esp,DWORD PTR [edx-0x54]
  40d8d7:	je     0x40d8d0
  40d8d9:	add    eax,0x80242929
  40d8de:	jmp    DWORD PTR [esi+0x6]
  40d8e1:	xor    al,0x72
  40d8e3:	adc    DWORD PTR [edi+0x684e3c92],0x29
  40d8ea:	in     eax,0x8b
  40d8ec:	jg     0x40d95d
  40d8ee:	faddp  st(7),st
  40d8f0:	cmp    eax,0x3e59e6b5
  40d8f5:	addr16 inc edx
  40d8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f8:	imul   edi,DWORD PTR [ebx],0xffffffab
  40d8fb:	or     BYTE PTR [esi-0x5ae1d53c],dl
  40d901:	sti    
  40d902:	push   esi
  40d903:	in     eax,dx
  40d904:	fdiv   QWORD PTR [esi]
  40d906:	dec    edi
  40d907:	cdq    
  40d908:	mov    WORD PTR [ebx],ds
  40d90a:	out    0x50,al
  40d90c:	add    eax,0x947dc250
  40d911:	sbb    eax,0x15e14b8d
  40d916:	xchg   edi,eax
  40d917:	xchg   DWORD PTR [ebp-0x42],edi
  40d91a:	repz test DWORD PTR [edx+0x4a],ecx
  40d91e:	clc    
  40d91f:	pusha  
  40d920:	dec    edi
  40d921:	arpl   WORD PTR [edi-0x12],bx
  40d924:	mov    ch,0x98
  40d926:	popf   
  40d927:	popa   
  40d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d929:	leave  
  40d92a:	jmp    0x5348e7af
  40d92f:	mov    ah,0xf2
  40d931:	push   es
  40d932:	cmp    dh,dh
  40d934:	adc    ah,BYTE PTR [edi-0x62b1b769]
  40d93a:	pop    edi
  40d93b:	push   0x5ff902b1
  40d940:	xor    ebp,DWORD PTR [edi*4+0x6cb746e0]
  40d947:	dec    ebx
  40d948:	test   DWORD PTR [edx-0x22650c8a],esp
  40d94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d94f:	ret    
  40d950:	ret    0xb8e1
  40d953:	mov    cl,0x65
  40d955:	test   al,0xf9
  40d957:	call   0xac96e97c
  40d95c:	push   ebx
  40d95d:	fst    DWORD PTR [ecx]
  40d95f:	add    al,0xe4
  40d961:	call   0x5416:0x239bb685
  40d968:	int    0xd3
  40d96a:	pop    esp
  40d96b:	(bad)  
  40d96c:	in     eax,dx
  40d96d:	push   es
  40d96e:	and    ebp,DWORD PTR [esi]
  40d970:	mov    bh,0x4e
  40d972:	jns    0x40d948
  40d974:	ret    0x5b87
  40d977:	add    DWORD PTR [ebp+0x7e77e7f9],eax
  40d97d:	fld    TBYTE PTR [edi]
  40d97f:	xor    eax,0x78eb6683
  40d984:	dec    edi
  40d985:	mov    bl,0x46
  40d987:	(bad)  
  40d988:	xor    al,0xf9
  40d98a:	fsubr  DWORD PTR [edx+0x34]
  40d98d:	pop    edi
  40d98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d98f:	add    eax,0x53b4c1bf
  40d994:	inc    ebp
  40d995:	std    
  40d996:	cmc    
  40d997:	dec    edi
  40d998:	inc    esp
  40d999:	jp     0x40d9b3
  40d99b:	and    DWORD PTR [ecx+esi*1],ebx
  40d99e:	xchg   edx,eax
  40d99f:	dec    ebx
  40d9a0:	fistp  DWORD PTR [ebx-0x1662e1dc]
  40d9a6:	or     esp,ecx
  40d9a8:	shr    DWORD PTR [esi],1
  40d9aa:	adc    dh,BYTE PTR [ebx]
  40d9ac:	into   
  40d9ad:	(bad)  
  40d9ae:	mul    DWORD PTR [ebp-0x223eb72a]
  40d9b4:	dec    eax
  40d9b5:	xchg   esi,eax
  40d9b6:	jbe    0x40d9e9
  40d9b8:	mov    ds:0x2fca1750,eax
  40d9bd:	push   ss
  40d9be:	pop    ss
  40d9bf:	pop    ds
  40d9c0:	lods   al,BYTE PTR ds:[esi]
  40d9c1:	test   eax,0x330d589d
  40d9c6:	jo     0x40d959
  40d9c8:	popa   
  40d9c9:	loop   0x40da3a
  40d9cb:	call   0x5e12:0xf0d33a0e
  40d9d2:	fld    DWORD PTR [esi+eiz*2]
  40d9d5:	jno    0x40d9ab
  40d9d7:	ds push eax
  40d9d9:	xor    bl,BYTE PTR [edi-0x4da5538e]
  40d9df:	cmc    
  40d9e0:	mov    cs,sp
  40d9e3:	add    ecx,DWORD PTR [edx]
  40d9e5:	das    
  40d9e6:	fmul   DWORD PTR [ebx+0x111f52d3]
  40d9ec:	jnp    0x40da39
  40d9ee:	add    eax,0x8ec70b65
  40d9f3:	jecxz  0x40da19
  40d9f5:	and    BYTE PTR [esi+eiz*2],bh
  40d9f8:	les    eax,FWORD PTR [eax]
  40d9fa:	retf   0x73c9
  40d9fd:	xor    ecx,DWORD PTR [edx+ebp*4]
  40da00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da01:	sbb    BYTE PTR [edi],al
  40da03:	dec    esi
  40da04:	(bad)  
  40da05:	in     eax,0x3e
  40da07:	jecxz  0x40da0a
  40da09:	fwait
  40da0a:	stc    
  40da0b:	test   DWORD PTR [ebp+0x628126e8],0x156ef7a2
  40da15:	and    ebx,ebp
  40da17:	and    eax,0x7a00922
  40da1c:	push   es
  40da1d:	arpl   dx,bx
  40da1f:	xchg   edi,eax
  40da20:	mov    al,ds:0x304fe059
  40da25:	scas   al,BYTE PTR es:[edi]
  40da26:	sbb    al,0x50
  40da29:	adc    dh,BYTE PTR [edx]
  40da2b:	(bad)  
  40da2c:	aas    
  40da2d:	je     0x40d9df
  40da2f:	and    al,0xee
  40da31:	rcl    DWORD PTR [edi+edi*2],1
  40da34:	rol    BYTE PTR [eax+eiz*1-0x26],cl
  40da38:	mov    esi,0x93b55a0b
  40da3d:	out    0xe8,eax
  40da3f:	xchg   ebp,eax
  40da40:	sub    eax,0x33885a25
  40da45:	sbb    al,0xae
  40da47:	jb     0x40da89
  40da49:	dec    esi
  40da4a:	ret    0x5698
  40da4d:	dec    eax
  40da4e:	fnstenv [ecx-0x66c644ad]
  40da54:	lods   eax,DWORD PTR ds:[esi]
  40da55:	mov    WORD PTR [ecx],cs
  40da57:	inc    ebp
  40da58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da59:	out    dx,al
  40da5a:	outs   dx,BYTE PTR ds:[esi]
  40da5b:	in     eax,0xac
  40da5d:	mov    ebp,DWORD PTR [ebx+0x6b]
  40da60:	call   0x38d1:0xcc11fc75
  40da67:	or     ah,BYTE PTR ds:0x4bd9a499
  40da6d:	push   ds
  40da6e:	push   esp
  40da6f:	inc    esp
  40da70:	bound  ecx,QWORD PTR [ebp-0x7a]
  40da73:	rol    DWORD PTR [edi+eiz*8+0x62f0c42e],1
  40da7a:	jge    0x40da49
  40da7c:	inc    ecx
  40da7d:	jnp    0x40da3e
  40da7f:	cmp    bh,BYTE PTR [edi+edi*4+0x2ca6ab7f]
  40da86:	loopne 0x40dac2
  40da88:	adc    bl,bh
  40da8a:	ja     0x40da3a
  40da8c:	adc    eax,0xbca3e34
  40da91:	jp     0x40daa2
  40da93:	pusha  
  40da94:	idiv   DWORD PTR [ebp-0x18]
  40da97:	enter  0x7b6b,0x4
  40da9b:	xlat   BYTE PTR ds:[ebx]
  40da9c:	addr16 jne 0x40db10
  40da9f:	pop    ebx
  40daa0:	sar    DWORD PTR [ebx],1
  40daa2:	dec    DWORD PTR [edi+0x79a0bdf1]
  40daa8:	or     edi,eax
  40daaa:	adc    ebx,ecx
  40daac:	fnstsw WORD PTR [esp+ebx*8]
  40daaf:	addr16 in eax,dx
  40dab1:	popf   
  40dab2:	fadd   DWORD PTR [esi-0x72]
  40dab5:	(bad)  
  40dab6:	pop    ebx
  40dab7:	outs   dx,DWORD PTR ds:[esi]
  40dab8:	xlat   BYTE PTR ds:[ebx]
  40dab9:	jg     0x40dad3
  40dabb:	retf   
  40dabc:	mov    bh,0x51
  40dabe:	cmp    bl,al
  40dac0:	(bad)  
  40dac1:	sar    BYTE PTR [edi-0x2db389ac],0x80
  40dac8:	and    edi,DWORD PTR [ecx+esi*2]
  40dacb:	stos   BYTE PTR es:[edi],al
  40dacc:	xlat   BYTE PTR ds:[ebx]
  40dacd:	push   ebp
  40dace:	adc    eax,DWORD PTR [esi]
  40dad0:	lods   eax,DWORD PTR ds:[esi]
  40dad1:	xchg   ecx,eax
  40dad2:	pusha  
  40dad3:	cmp    ecx,DWORD PTR [eax-0x1a50431a]
  40dad9:	and    al,BYTE PTR [ecx]
  40dadb:	mov    esp,0xf5cd1c29
  40dae0:	fsub   st,st(2)
  40dae2:	pop    ebp
  40dae3:	inc    edx
  40dae4:	push   esi
  40dae5:	sbb    dl,BYTE PTR [eax+0x6ea6e6b0]
  40daeb:	pop    ecx
  40daec:	sar    DWORD PTR [edi],0x10
  40daef:	cmp    BYTE PTR [edx+0x8b9a997],al
  40daf5:	jg     0x40db55
  40daf7:	jecxz  0x40dada
  40daf9:	fnstenv [ebp-0x70]
  40dafc:	and    ch,ch
  40dafe:	xlat   BYTE PTR ds:[ebx]
  40daff:	loope  0x40db66
  40db01:	push   edi
  40db02:	push   ds
  40db03:	or     al,0xf9
  40db05:	push   es
  40db06:	aad    0x3
  40db08:	arpl   bp,dx
  40db0a:	outs   dx,DWORD PTR ds:[esi]
  40db0b:	cdq    
  40db0c:	std    
  40db0d:	push   0x8757f764
  40db12:	dec    ebx
  40db13:	adc    edi,DWORD PTR [ecx-0x79]
  40db16:	int    0xa9
  40db18:	sbb    eax,0x48248c05
  40db1d:	sub    esp,DWORD PTR [ebx+0x42]
  40db20:	mov    cl,0x38
  40db22:	out    0x3a,al
  40db24:	pushf  
  40db25:	xchg   edx,eax
  40db26:	ret    
  40db27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db28:	xchg   esi,eax
  40db29:	frstor [edx-0x4b]
  40db2c:	jnp    0x40dacd
  40db2e:	jmp    0x9cf24d63
  40db33:	repz sub ecx,esi
  40db36:	jg     0x40db97
  40db38:	popf   
  40db39:	sar    dh,1
  40db3b:	nop
  40db3c:	retf   
  40db3d:	push   esi
  40db3e:	std    
  40db3f:	iret   
  40db40:	stc    
  40db41:	ror    DWORD PTR [eax-0x71],cl
  40db44:	jp     0x40db4f
  40db46:	jbe    0x40dacf
  40db48:	lahf   
  40db49:	sbb    ebp,DWORD PTR [eax+eiz*2]
  40db4c:	push   eax
  40db4d:	add    DWORD PTR [ebp+ebp*1+0x41],esi
  40db51:	inc    ecx
  40db52:	or     al,0xf2
  40db54:	cmp    al,0x3d
  40db56:	out    dx,eax
  40db57:	pop    ss
  40db58:	aam    0x1d
  40db5a:	sub    al,0x56
  40db5c:	adc    al,0xf5
  40db5e:	sar    ch,0x66
  40db61:	jne    0x40db3a
  40db63:	mov    esp,0xf837f9ad
  40db68:	es fcmovb st,st(2)
  40db6b:	call   0xf1b9:0xc26122d2
  40db72:	stos   DWORD PTR es:[edi],eax
  40db73:	mov    DWORD PTR [esi+0x3aa43d2c],ebx
  40db79:	push   eax
  40db7a:	cmc    
  40db7b:	daa    
  40db7c:	aam    0x2f
  40db7e:	fsub   DWORD PTR [edi]
  40db80:	xchg   ebp,eax
  40db81:	cmovle esi,DWORD PTR [ebx]
  40db84:	add    eax,0x5f3062ae
  40db8a:	and    BYTE PTR fs:[ebp+ebp*2+0x4b],bh
  40db8f:	nop
  40db90:	test   DWORD PTR [edx],esi
  40db92:	or     BYTE PTR [esi+0x23],cl
  40db95:	pop    ecx
  40db96:	xor    ecx,esi
  40db98:	xchg   ebp,eax
  40db99:	jge    0x40db7f
  40db9b:	dec    ebp
  40db9c:	cwde   
  40db9d:	sub    al,0x9f
  40db9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba0:	cmp    al,0xfc
  40dba2:	sub    eax,0x12b5f172
  40dba7:	mov    eax,esp
  40dba9:	push   ds
  40dbaa:	mov    ebx,0x163720d8
  40dbaf:	shl    BYTE PTR [edi],cl
  40dbb1:	pushf  
  40dbb2:	mov    ds:0x42a285da,eax
  40dbb7:	ss int3 
  40dbb9:	fld    DWORD PTR [eax-0x26]
  40dbbc:	pop    es
  40dbbd:	retf   
  40dbbe:	cld    
  40dbbf:	add    ebp,edi
  40dbc1:	or     al,BYTE PTR [edi]
  40dbc3:	les    ecx,FWORD PTR [ebp+0x5d2ff222]
  40dbc9:	stc    
  40dbca:	and    dl,cl
  40dbcc:	or     dh,ah
  40dbce:	shr    BYTE PTR [edx+0x21],cl
  40dbd1:	inc    esp
  40dbd2:	mov    bl,0x89
  40dbd4:	imul   edi,DWORD PTR [edx+0x7d1b2245],0xffffffca
  40dbdb:	push   edx
  40dbdc:	mov    ecx,0x1c9e1f85
  40dbe1:	gs loop 0x40dc59
  40dbe4:	add    DWORD PTR [edx+0x52],edi
  40dbe7:	std    
  40dbe8:	adc    DWORD PTR [eax],edi
  40dbea:	jb     0x40dc56
  40dbec:	into   
  40dbed:	in     eax,dx
  40dbee:	inc    cl
  40dbf0:	test   eax,0x64d6411a
  40dbf5:	repz (bad) 
  40dbf7:	call   0x375249f9
  40dbfc:	out    0xb1,eax
  40dbfe:	xchg   BYTE PTR [edx+0x4e017c81],ch
  40dc04:	fld    QWORD PTR [eax]
  40dc07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc08:	xor    eax,0x888c344f
  40dc0d:	jmp    0x1a12ca65
  40dc12:	popf   
  40dc13:	inc    edx
  40dc14:	call   0x2e6ea4bb
  40dc19:	inc    edi
  40dc1a:	or     ebx,esp
  40dc1c:	inc    ebp
  40dc1d:	mov    al,ds:0xd6d31ce9
  40dc22:	cwde   
  40dc23:	sar    BYTE PTR [eax],1
  40dc25:	test   DWORD PTR [esi],ebp
  40dc27:	stc    
  40dc28:	jno    0x40dc8e
  40dc2a:	scas   eax,DWORD PTR es:[edi]
  40dc2b:	fldcw  WORD PTR [eax+0x17]
  40dc2e:	adc    DWORD PTR [edx+0x443904ad],0x3b
  40dc35:	mov    BYTE PTR [esp+eax*1],bl
  40dc38:	xor    BYTE PTR [ebx],ch
  40dc3a:	cmp    eax,0xee901019
  40dc3f:	mov    cl,0x15
  40dc41:	sub    eax,0xfbd8b5fd
  40dc46:	xchg   DWORD PTR [esi+0x337cbed8],eax
  40dc4c:	loope  0x40dc4b
  40dc4e:	dec    ebx
  40dc4f:	aaa    
  40dc50:	loope  0x40dc17
  40dc52:	inc    ebp
  40dc53:	outs   dx,BYTE PTR ds:[esi]
  40dc54:	mov    cs,WORD PTR [edx+esi*1]
  40dc57:	fadd   QWORD PTR [ebp+edi*1-0x39]
  40dc5b:	call   0x60b2:0x8b6ba7dd
  40dc62:	xor    BYTE PTR [ebp-0x6],al
  40dc65:	sub    DWORD PTR [eax+0x42],ecx
  40dc68:	cmp    dl,BYTE PTR [edx+0x46]
  40dc6b:	int    0x9d
  40dc6d:	and    BYTE PTR [edx-0x6],0x7d
  40dc71:	ret    0xfba0
  40dc74:	retf   0xec4b
  40dc77:	sub    bh,ah
  40dc79:	pop    ebp
  40dc7a:	push   cs
  40dc7b:	mov    ch,0xdc
  40dc7d:	mov    edx,0xe577ba1c
  40dc82:	cdq    
  40dc83:	cli    
  40dc84:	dec    ebp
  40dc85:	into   
  40dc86:	adc    dl,dl
  40dc88:	mov    ebx,0xbfbf7d64
  40dc8d:	ins    DWORD PTR es:[edi],dx
  40dc8e:	dec    ebx
  40dc8f:	add    eax,0x54a1772b
  40dc94:	fiadd  WORD PTR [esi-0x38]
  40dc97:	pop    es
  40dc98:	je     0x40dca9
  40dc9a:	cmp    DWORD PTR ds:0xdbb3c45e,esi
  40dca0:	ds push esi
  40dca2:	pop    es
  40dca3:	dec    edx
  40dca4:	jae    0x40dce0
  40dca6:	cdq    
  40dca7:	(bad)  
  40dca8:	call   0x821c:0x392f000e
  40dcaf:	std    
  40dcb0:	rol    cl,0xe
  40dcb3:	mov    dh,0x3
  40dcb5:	(bad)  
  40dcb6:	push   ebp
  40dcb7:	jae    0x40dcbf
  40dcb9:	mov    edi,0xece91d05
  40dcbe:	mov    al,ds:0xd895eb8
  40dcc3:	fidiv  WORD PTR [ebp+0x47a8e545]
  40dcc9:	scas   eax,DWORD PTR es:[edi]
  40dcca:	jmp    0xe4f3:0x15961645
  40dcd1:	or     BYTE PTR [ebp+0x46135f65],bh
  40dcd7:	scas   al,BYTE PTR es:[edi]
  40dcd8:	or     al,0x1
  40dcda:	pop    edx
  40dcdb:	leave  
  40dcdc:	or     dl,dh
  40dcde:	adc    DWORD PTR [esi],edi
  40dce0:	dec    edi
  40dce1:	pushf  
  40dce2:	adc    dh,BYTE PTR [ebp-0x4cc8a4e7]
  40dce8:	das    
  40dce9:	sub    al,0xe
  40dceb:	or     ecx,esp
  40dced:	mov    ebp,0xc83d1c0d
  40dcf2:	and    eax,ecx
  40dcf4:	adc    eax,0xa9824bec
  40dcf9:	dec    edx
  40dcfa:	adc    BYTE PTR [eax-0x2a],dl
  40dcfd:	mov    dh,0xd5
  40dcff:	mov    dh,0xf9
  40dd01:	pop    esi
  40dd02:	mov    BYTE PTR [esi-0x17],bh
  40dd05:	sub    eax,0x2b3b125
  40dd0a:	and    eax,0x72352bc7
  40dd0f:	cmp    edi,ebx
  40dd11:	adc    bh,BYTE PTR [esi]
  40dd13:	call   0x689c7f4a
  40dd18:	jne    0x40dca3
  40dd1a:	iret   
  40dd1b:	fdiv   DWORD PTR [ecx-0x18e54b0a]
  40dd21:	mov    ecx,0xa1165799
  40dd26:	mov    dh,0x23
  40dd28:	pop    esp
  40dd29:	retf   0xb322
  40dd2c:	push   0xffffffa2
  40dd2e:	and    al,0x2b
  40dd30:	stos   DWORD PTR es:[edi],eax
  40dd31:	mov    al,ds:0x881345aa
  40dd36:	add    eax,0x411f343a
  40dd3b:	cmp    DWORD PTR [ebx+0x20],edx
  40dd3e:	jmp    0x758ee5c1
  40dd43:	add    esi,DWORD PTR [ebx+0x59043758]
  40dd49:	fistp  DWORD PTR [esi]
  40dd4b:	mov    ?,WORD PTR [edi]
  40dd4d:	jo     0x40dd10
  40dd4f:	loope  0x40ddb7
  40dd51:	test   BYTE PTR [ebx+0x60],ah
  40dd54:	pop    ss
  40dd55:	in     eax,dx
  40dd56:	out    dx,al
  40dd57:	lods   al,BYTE PTR ds:[esi]
  40dd58:	inc    ebp
  40dd59:	gs aam 0xea
  40dd5c:	test   BYTE PTR [ecx+0x29],ch
  40dd5f:	pushf  
  40dd60:	pop    es
  40dd61:	pop    dx
  40dd63:	push   0x19
  40dd65:	aad    0x6c
  40dd67:	pop    ds
  40dd68:	sbb    bh,BYTE PTR [eax]
  40dd6a:	mov    bl,0xdc
  40dd6c:	fnsave [ebp+0x42]
  40dd6f:	cdq    
  40dd70:	adc    DWORD PTR [ecx+0x11],eax
  40dd73:	push   esp
  40dd74:	adc    bh,ch
  40dd76:	in     al,0x2
  40dd78:	fs sub dl,0xc4
  40dd7c:	jne    0x40ddb4
  40dd7e:	ret    
  40dd7f:	or     BYTE PTR [ecx+0x77],ch
  40dd82:	dec    esp
  40dd83:	jne    0x40dd6a
  40dd85:	jle    0x40dd13
  40dd87:	jle    0x40ddd5
  40dd89:	mov    ds:0x5356cd36,al
  40dd8e:	cmp    ebx,ecx
  40dd90:	or     eax,0x9f6d0d4e
  40dd95:	call   FWORD PTR ss:[ebp+0x264b837f]
  40dd9c:	test   BYTE PTR fs:[edi+0x116edfb3],dl
  40dda3:	fdivr  DWORD PTR [esp+ebp*1-0x7c76bc38]
  40ddaa:	shl    DWORD PTR [edi],0xec
  40ddad:	imul   ebp,esp,0xc24ff432
  40ddb3:	push   eax
  40ddb4:	push   eax
  40ddb5:	pop    ebp
  40ddb6:	inc    ebp
  40ddb7:	std    
  40ddb8:	fsubr  DWORD PTR ds:0x287cffee
  40ddbe:	sbb    BYTE PTR es:[edx-0x527b9c7e],dh
  40ddc5:	xchg   DWORD PTR [ebx],ecx
  40ddc7:	push   edi
  40ddc8:	cmc    
  40ddc9:	daa    
  40ddca:	mov    bl,0x6c
  40ddcc:	in     al,dx
  40ddcd:	outs   dx,BYTE PTR ds:[esi]
  40ddce:	aad    0x72
  40ddd0:	scas   al,BYTE PTR es:[edi]
  40ddd1:	cmp    BYTE PTR [ecx],ch
  40ddd3:	rcr    BYTE PTR [esi-0x66],cl
  40ddd6:	out    0xa8,eax
  40ddd8:	stc    
  40ddd9:	and    eax,0x3d8be96
  40ddde:	cmp    bl,BYTE PTR [eax-0x1b]
  40dde1:	lock mov BYTE PTR [eax+0x70],dl
  40dde5:	dec    ebx
  40dde6:	sub    DWORD PTR [eax+0x21],ecx
  40dde9:	aas    
  40ddea:	xchg   ecx,eax
  40ddeb:	mov    ebp,0x4d9e3173
  40ddf0:	sub    eax,DWORD PTR [edx+0x45]
  40ddf3:	push   esi
  40ddf4:	dec    esp
  40ddf5:	pop    edi
  40ddf6:	fcmovbe st,st(1)
  40ddf8:	mov    edi,edi
  40ddfa:	out    0xae,al
  40ddfc:	and    eax,0x24bf6634
  40de01:	xor    BYTE PTR [ebx+0x47],cl
  40de04:	push   0xf9814244
  40de09:	rcr    edx,cl
  40de0b:	mov    ecx,DWORD PTR [edi-0x6]
  40de0e:	aam    0xdf
  40de10:	mov    cl,0x24
  40de12:	pop    edi
  40de13:	jbe    0x40dd9a
  40de15:	bound  esp,QWORD PTR [ebp-0x1f65858b]
  40de1b:	sub    al,0xae
  40de1d:	cmp    eax,0x88cf7e3a
  40de22:	jae    0x40de6e
  40de24:	mov    eax,ds:0x69a5e844
  40de29:	loope  0x40ddf4
  40de2b:	loope  0x40ddeb
  40de2d:	ret    
  40de2e:	fwait
  40de2f:	int3   
  40de30:	xchg   edi,eax
  40de31:	xchg   esi,eax
  40de32:	and    BYTE PTR [ecx],cl
  40de34:	jae    0x40dded
  40de36:	pop    edi
  40de37:	dec    esp
  40de38:	push   es
  40de39:	and    DWORD PTR [ecx+0x1414d090],esp
  40de3f:	hlt    
  40de40:	adc    eax,0xad8ffb4d
  40de45:	jno    0x40dded
  40de47:	xchg   ebx,eax
  40de48:	push   eax
  40de49:	jno    0x40de5d
  40de4b:	fcomi  st,st(2)
  40de4d:	(bad)  
  40de4e:	in     al,dx
  40de4f:	and    dh,BYTE PTR [eax]
  40de51:	add    BYTE PTR [ebp+0x63fbf063],ah
  40de57:	xchg   BYTE PTR [edi-0x34],bh
  40de5a:	pop    ss
  40de5b:	jnp    0x40de9a
  40de5d:	or     DWORD PTR [eax],esi
  40de5f:	sbb    BYTE PTR [ebx-0x5a],bl
  40de62:	jmp    0xea9cbdaf
  40de67:	cmp    eax,0x14fb4b35
  40de6c:	ret    0x3562
  40de6f:	das    
  40de70:	push   ds
  40de71:	bound  edx,QWORD PTR [esi-0x7c]
  40de74:	test   DWORD PTR [edx],esi
  40de76:	xchg   BYTE PTR [edx+esi*2-0x24f6867a],ah
  40de7d:	add    eax,0x3cc6aa7e
  40de82:	leave  
  40de83:	adc    edx,esi
  40de85:	clc    
  40de86:	ret    
  40de87:	enter  0x6f28,0xc3
  40de8b:	arpl   WORD PTR ds:0x50de0905,cx
  40de91:	vunpckhps xmm3,xmm2,XMMWORD PTR [edx-0x572f0b17]
  40de99:	(bad)  
  40de9a:	rcl    DWORD PTR [esi+0x2],cl
  40de9d:	out    0xfb,eax
  40de9f:	mov    eax,0x4a58beb
  40dea4:	dec    esi
  40dea5:	mov    dh,0xd6
  40dea7:	(bad)  
  40dea8:	in     eax,0x18
  40deaa:	add    ah,BYTE PTR [ecx+0x3e3ef8b8]
  40deb0:	test   eax,0x807090c
  40deb5:	or     al,0x39
  40deb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb8:	fild   DWORD PTR [ecx+ecx*4]
  40debb:	pop    eax
  40debc:	jno    0x40dedd
  40debe:	test   eax,0x768935a7
  40dec3:	mov    ds:0xc4023c25,eax
  40dec8:	imul   ebx,esp,0xcfa4cdd1
  40dece:	sbb    eax,ebx
  40ded0:	jb     0x40df44
  40ded2:	retf   
  40ded3:	and    bh,bh
  40ded5:	test   DWORD PTR [ebx-0x63],ebp
  40ded8:	inc    eax
  40ded9:	push   esp
  40deda:	icebp  
  40dedb:	mov    esi,0xa3a00508
  40dee0:	jp     0x40de91
  40dee2:	jmp    0x51a0:0xa0232a3e
  40dee9:	sahf   
  40deea:	or     eax,0x99fcb7b4
  40deef:	sti    
  40def0:	leave  
  40def1:	add    bl,dl
  40def3:	pop    edi
  40def4:	adc    edi,DWORD PTR [esi+0x4a]
  40def7:	stos   DWORD PTR es:[edi],eax
  40def8:	cli    
  40def9:	scas   eax,DWORD PTR es:[edi]
  40defa:	push   cs
  40defb:	mov    ch,0xbb
  40defd:	sub    al,BYTE PTR [eax-0x6e]
  40df00:	xchg   ebp,eax
  40df01:	jle    0x40de87
  40df03:	dec    ebx
  40df04:	bound  ebp,QWORD PTR [edi+0x5288a9b6]
  40df0a:	pushf  
  40df0b:	sar    DWORD PTR [edx+0x41],1
  40df0e:	mov    cl,0xa9
  40df10:	push   esp
  40df11:	enter  0x5f86,0x3b
  40df15:	inc    edi
  40df16:	and    esp,DWORD PTR [eax+0xb]
  40df19:	test   DWORD PTR [esp+edi*2],ebp
  40df1c:	mov    BYTE PTR [ecx-0x66c03926],bh
  40df22:	repz jne 0x40deb0
  40df25:	ins    BYTE PTR es:[edi],dx
  40df26:	pop    ecx
  40df27:	adc    eax,0x90b08a14
  40df2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df2d:	mov    bh,0xf0
  40df2f:	dec    esi
  40df30:	jnp    0x40dedb
  40df32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df33:	sar    DWORD PTR [edi-0x1d],1
  40df36:	jbe    0x40df34
  40df38:	ss ret 0x46de
  40df3c:	(bad)  
  40df3d:	out    0x16,eax
  40df3f:	sahf   
  40df40:	sti    
  40df41:	mov    dl,0xde
  40df43:	add    esi,DWORD PTR ds:0x5e45e4a
  40df49:	(bad)  
  40df4a:	in     al,0xd8
  40df4c:	jmp    0xd0723b9e
  40df51:	jae    0x40df5a
  40df53:	outs   dx,DWORD PTR ds:[esi]
  40df54:	cmp    DWORD PTR [ebp+ebp*2-0x6db6df36],esp
  40df5b:	or     al,0x0
  40df5d:	rcl    DWORD PTR [edx+0x7046a7fa],0xcd
  40df64:	mov    ecx,0x67d96f0a
  40df69:	test   eax,0x14a4ec47
  40df6e:	mov    dh,0x87
  40df70:	sbb    al,0x2d
  40df72:	mov    edi,0xd352f1a7
  40df77:	jne    0x40df2a
  40df79:	test   dh,al
  40df7b:	mov    ah,0xa7
  40df7d:	test   BYTE PTR [esi],dh
  40df7f:	pmulhw mm5,mm3
  40df82:	imul   esi,DWORD PTR [esi-0x4aa35d58],0xb45d78b9
  40df8c:	std    
  40df8d:	gs inc ebx
  40df8f:	sub    edi,DWORD PTR [edx-0x2d]
  40df92:	or     BYTE PTR [esi-0x7c1d993a],bh
  40df98:	(bad)  
  40df99:	jge    0x40df3f
  40df9b:	push   ds
  40df9c:	and    DWORD PTR [ecx],eax
  40df9e:	jmp    0x9fb5:0x8bc93d9d
  40dfa5:	or     eax,0x5fddb305
  40dfaa:	dec    edx
  40dfab:	idiv   BYTE PTR [esi]
  40dfad:	fbld   TBYTE PTR [ebx]
  40dfaf:	jge    0x40df97
  40dfb1:	retf   0x7220
  40dfb4:	xor    ebx,DWORD PTR [edi+0x6a]
  40dfb7:	add    al,0xa7
  40dfb9:	pop    ss
  40dfba:	cmp    eax,0xd3f0eed7
  40dfbf:	out    dx,eax
  40dfc0:	adc    DWORD PTR [edx+edi*8],eax
  40dfc3:	push   esi
  40dfc4:	sub    al,0xe0
  40dfc6:	ss ins BYTE PTR es:[edi],dx
  40dfc8:	pusha  
  40dfc9:	mov    esp,es
  40dfcb:	and    eax,0xbc2a6ed3
  40dfd0:	mov    DWORD PTR [ebx-0x7f7ab14e],ecx
  40dfd6:	inc    ebp
  40dfd7:	and    al,0xba
  40dfd9:	jge    0x40e028
  40dfdb:	jne    0x40df7e
  40dfdd:	inc    ecx
  40dfde:	xchg   esp,eax
  40dfdf:	scas   eax,DWORD PTR es:[edi]
  40dfe0:	pop    edi
  40dfe1:	popf   
  40dfe2:	sbb    BYTE PTR [edi],bh
  40dfe4:	mov    al,0x5d
  40dfe6:	jmp    0xa354cf56
  40dfeb:	push   ecx
  40dfec:	xchg   esi,eax
  40dfed:	aam    0x94
  40dfef:	in     al,0x32
  40dff1:	repnz push es
  40dff3:	dec    esp
  40dff4:	cmp    esp,DWORD PTR [ebx+0x43bab1a1]
  40dffa:	and    eax,0xfe5c3a3b
  40dfff:	js     0x40dffc
  40e001:	sub    al,0x9b
  40e003:	pop    edi
  40e004:	adc    al,0xd
  40e006:	in     eax,0xf6
  40e008:	test   al,0x28
  40e00a:	mov    ecx,eax
  40e00c:	fld    DWORD PTR ds:0x50fe60a3
  40e012:	fwait
  40e013:	push   ecx
  40e014:	popa   
  40e015:	sbb    eax,0x9c3c3f10
  40e01a:	sbb    eax,DWORD PTR [edx]
  40e01c:	in     eax,dx
  40e01d:	(bad)  
  40e01e:	stc    
  40e01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e020:	js     0x40e044
  40e022:	ret    
  40e023:	pushaw 
  40e025:	pop    ecx
  40e026:	cli    
  40e027:	fcmovu st,st(3)
  40e029:	adc    BYTE PTR [esi+0x47fba5b6],ah
  40e02f:	mov    bh,0x98
  40e031:	iret   
  40e032:	xchg   esp,eax
  40e033:	loope  0x40e0b4
  40e035:	xchg   esi,eax
  40e036:	stos   DWORD PTR es:[edi],eax
  40e037:	shr    DWORD PTR [esi+0x6beabc29],0x5d
  40e03e:	mov    dl,0xb5
  40e040:	mov    ebp,DWORD PTR [edx]
  40e042:	shl    DWORD PTR [edx-0x2],cl
  40e045:	xlat   BYTE PTR ds:[ebx]
  40e046:	mov    WORD PTR [ebx-0x78e34ea7],ss
  40e04c:	mov    al,0x2c
  40e04e:	push   ebp
  40e04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e050:	push   ecx
  40e051:	in     al,dx
  40e052:	lahf   
  40e053:	cdq    
  40e054:	mov    ebp,0x8ca74c20
  40e059:	dec    ecx
  40e05a:	pop    ss
  40e05b:	loope  0x40e01f
  40e05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e05e:	cmp    DWORD PTR [eax],ebp
  40e060:	inc    ebp
  40e061:	fcmovb st,st(4)
  40e063:	pop    esp
  40e064:	mov    dl,0x13
  40e066:	pop    ss
  40e067:	imul   esi,DWORD PTR [ebx-0x47],0x5e2831da
  40e06e:	inc    ebx
  40e06f:	jne    0x40e0ba
  40e071:	jbe    0x40e046
  40e073:	sbb    ebp,DWORD PTR [edx+0xc]
  40e076:	push   esi
  40e077:	mov    edi,0x629e4a68
  40e07c:	or     esp,edi
  40e07e:	aaa    
  40e07f:	imul   ecx,DWORD PTR [esi-0x73],0xffffff8d
  40e083:	cmp    al,0xa0
  40e085:	iret   
  40e086:	test   al,0x68
  40e088:	mov    eax,ds:0x7c24b2c9
  40e08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e08e:	mov    ch,0x2f
  40e090:	lock adc BYTE PTR ds:0xc23e1afb,dl
  40e097:	add    DWORD PTR [edi+0x5bd0ffe],esp
  40e09d:	mov    ds:0xedf224ba,al
  40e0a2:	lods   eax,DWORD PTR ds:[esi]
  40e0a3:	arpl   WORD PTR [eax-0x5f],dx
  40e0a6:	ins    DWORD PTR es:[edi],dx
  40e0a7:	pop    ds
  40e0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a9:	imul   eax,DWORD PTR [ebx],0xffffffe2
  40e0ac:	(bad)  
  40e0ad:	fisubr DWORD PTR [eax+0x28]
  40e0b0:	call   FWORD PTR [ecx]
  40e0b2:	pop    es
  40e0b3:	pop    ds
  40e0b4:	and    DWORD PTR [ebx],0x63
  40e0b7:	repz inc esp
  40e0b9:	popf   
  40e0ba:	xchg   esp,eax
  40e0bb:	push   0x1d
  40e0bd:	jp     0x40e064
  40e0bf:	pop    ss
  40e0c0:	arpl   WORD PTR [esi-0x669f6d80],cx
  40e0c6:	arpl   WORD PTR [eax-0xfd13487],ax
  40e0cc:	push   0xffffffbe
  40e0ce:	fstp   DWORD PTR [ebp+0x5d]
  40e0d1:	jno    0x40e0ca
  40e0d3:	push   0xffffffa8
  40e0d5:	sahf   
  40e0d6:	in     eax,0xbb
  40e0d8:	dec    esi
  40e0d9:	sahf   
  40e0da:	in     eax,0xc0
  40e0dc:	cmp    ebp,DWORD PTR [ecx+0x7341e9]
  40e0e2:	addr16 mov ecx,0x75218463
  40e0e8:	test   al,0xd6
  40e0ea:	adc    DWORD PTR [ecx+0x541816b5],0x4dde60a4
  40e0f4:	jbe    0x40e132
  40e0f6:	mov    ah,0xcf
  40e0f8:	mul    BYTE PTR [esi+0x68327f18]
  40e0fe:	iret   
  40e0ff:	sbb    edx,DWORD PTR [ebp+ebx*4+0x2100acfb]
  40e106:	push   ecx
  40e107:	xchg   ecx,eax
  40e108:	pop    es
  40e109:	mov    WORD PTR [edx+0x54470a56],gs
  40e10f:	cs out dx,eax
  40e111:	jge    0x40e0eb
  40e113:	icebp  
  40e114:	popa   
  40e115:	mov    ah,0x29
  40e117:	enter  0xa371,0xb4
  40e11b:	jnp    0x40e136
  40e11d:	or     ah,BYTE PTR ds:0xb87ee2fb
  40e123:	stos   DWORD PTR es:[edi],eax
  40e124:	jbe    0x40e133
  40e126:	fsub   QWORD PTR [edx+ecx*1]
  40e129:	int3   
  40e12a:	push   es
  40e12b:	dec    esi
  40e12c:	stos   BYTE PTR es:[edi],al
  40e12d:	and    BYTE PTR [esi-0xb],cl
  40e130:	cli    
  40e131:	push   ebp
  40e132:	mov    DWORD PTR [ebp-0x3f],esp
  40e135:	popa   
  40e136:	loop   0x40e0f7
  40e138:	pop    edx
  40e139:	aas    
  40e13a:	dec    edx
  40e13b:	js     0x40e0d6
  40e13d:	jae    0x40e1b6
  40e13f:	or     eax,0xe78a9689
  40e144:	fsub   st(7),st
  40e146:	jp     0x40e187
  40e148:	fcmove st,st(4)
  40e14a:	sbb    ah,0xd4
  40e14d:	imul   ebx,ebp,0x12ecd5fb
  40e153:	xchg   BYTE PTR [ecx+ebx*4],bh
  40e156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e157:	jp     0x40e123
  40e159:	mov    edx,0xa2e8c0eb
  40e15e:	cmp    BYTE PTR [edx+0x7d86087f],ch
  40e164:	inc    edx
  40e165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e166:	je     0x40e10d
  40e168:	xchg   ebp,eax
  40e169:	mov    cl,0x98
  40e16b:	cli    
  40e16c:	clc    
  40e16d:	jno    0x40e199
  40e16f:	mov    bl,0x81
  40e171:	in     al,dx
  40e172:	and    cl,BYTE PTR gs:[ecx-0x6a]
  40e176:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e178:	cmp    dh,BYTE PTR [edx]
  40e17a:	icebp  
  40e17b:	das    
  40e17c:	or     al,BYTE PTR [edi*4+0x19dfd5d3]
  40e183:	dec    ecx
  40e184:	retf   0x35e5
  40e187:	push   0x63
  40e189:	mov    esi,DWORD PTR [ecx+eax*8+0x23]
  40e18d:	lea    esi,[eax-0x772051fe]
  40e193:	mov    al,0xde
  40e195:	ret    0x1cb1
  40e198:	inc    ebx
  40e199:	mov    eax,ds:0x595773c2
  40e19e:	fdiv   QWORD PTR ds:0xaf3ccca4
  40e1a4:	or     ch,BYTE PTR [ebx+0x5d0c494f]
  40e1aa:	push   ds
  40e1ab:	sub    BYTE PTR [ebp+0x2c],cl
  40e1ae:	out    dx,eax
  40e1af:	or     edi,DWORD PTR [ecx]
  40e1b1:	out    0x9,eax
  40e1b3:	test   edi,eax
  40e1b5:	sar    BYTE PTR ds:0x8ac03f1c,0xae
  40e1bc:	cli    
  40e1bd:	inc    edi
  40e1be:	and    ecx,DWORD PTR [ecx+0x12e1c7ea]
  40e1c4:	inc    esp
  40e1c5:	retf   0xdd44
  40e1c8:	push   ecx
  40e1c9:	cmp    al,0x89
  40e1cb:	es loope 0x40e19c
  40e1ce:	inc    edi
  40e1cf:	jmp    0xc75e:0xf3ae7b75
  40e1d6:	inc    BYTE PTR ds:0xd95b8172
  40e1dc:	cmp    ebx,ebx
  40e1de:	test   eax,0xede8c078
  40e1e4:	dec    ebp
  40e1e5:	fiadd  DWORD PTR [esi-0x771f49e2]
  40e1eb:	dec    eax
  40e1ec:	mov    al,ds:0xf80938c
  40e1f1:	sbb    al,0xc7
  40e1f3:	xor    ch,ch
  40e1f5:	mov    dh,ah
  40e1f7:	icebp  
  40e1f8:	dec    esi
  40e1f9:	mov    al,dl
  40e1fb:	pop    ss
  40e1fc:	dec    edx
  40e1fd:	pop    ebx
  40e1fe:	retf   0x1248
  40e201:	cld    
  40e202:	inc    edi
  40e203:	cmp    ebx,DWORD PTR [edx-0x47]
  40e206:	pushf  
  40e207:	icebp  
  40e208:	jmp    0x40e1fb
  40e20a:	cld    
  40e20b:	mov    esi,ecx
  40e20d:	ds cmc 
  40e20f:	jmp    0xe34cf9ae
  40e214:	or     dh,al
  40e216:	jmp    0x1049673c
  40e21b:	push   ecx
  40e21c:	dec    esp
  40e21d:	lahf   
  40e21e:	jne    0x40e1a5
  40e220:	or     al,0xe2
  40e222:	fmul   st,st(5)
  40e224:	outs   dx,BYTE PTR gs:[esi]
  40e226:	jmp    0xc568:0x48763aa1
  40e22d:	outs   dx,BYTE PTR ds:[esi]
  40e22e:	jns    0x40e234
  40e230:	(bad)  
  40e231:	int3   
  40e232:	stos   DWORD PTR es:[edi],eax
  40e233:	pushf  
  40e234:	jmp    0x77c45cfc
  40e239:	lahf   
  40e23a:	fs iret 
  40e23c:	xchg   edi,eax
  40e23d:	into   
  40e23e:	mov    esi,0xd4e062fc
  40e243:	pop    ebp
  40e244:	adc    DWORD PTR [edi],edi
  40e246:	in     eax,0xf3
  40e248:	dec    edi
  40e249:	scas   al,BYTE PTR es:[edi]
  40e24a:	jns    0x40e201
  40e24c:	repz ja 0x40e1e3
  40e24f:	pusha  
  40e250:	ins    BYTE PTR es:[edi],dx
  40e251:	add    eax,0x14f2c7e0
  40e256:	pusha  
  40e257:	adc    cl,BYTE PTR [edi-0x95c9a41]
  40e25d:	or     eax,0xd2acdaf7
  40e262:	fld    TBYTE PTR [esi+0x54]
  40e265:	cs ror DWORD PTR cs:[ebx],1
  40e269:	lea    eax,[edx-0x42171346]
  40e26f:	addr16 xchg edx,eax
  40e271:	push   0x39089b7c
  40e276:	jne    0x40e283
  40e278:	adc    ch,bh
  40e27a:	fbstp  TBYTE PTR [ecx]
  40e27c:	lea    ebx,[edi-0x5c]
  40e27f:	jae    0x40e265
  40e281:	mov    ebx,DWORD PTR [ecx-0x2fcdd3de]
  40e287:	and    DWORD PTR [eax],ecx
  40e289:	xchg   ebp,eax
  40e28a:	gs jmp 0xdbf33978
  40e290:	pushf  
  40e291:	arpl   WORD PTR [esi],sp
  40e293:	xchg   ebp,eax
  40e294:	lods   eax,DWORD PTR ds:[esi]
  40e295:	mov    edi,0x441a98fe
  40e29a:	cdq    
  40e29b:	fst    QWORD PTR [edx+0x57]
  40e29e:	jmp    0xa801:0xab322798
  40e2a5:	hlt    
  40e2a6:	add    DWORD PTR [ebp*4-0x2e6a6c96],ecx
  40e2ad:	push   0xbdb9bbac
  40e2b2:	mov    ch,BYTE PTR [esp+eiz*4-0x627bbaad]
  40e2b9:	imul   edx,DWORD PTR [edi],0xa50128a2
  40e2bf:	cld    
  40e2c0:	mov    bh,0x50
  40e2c2:	std    
  40e2c3:	and    ecx,DWORD PTR ds:0x396dc35d
  40e2c9:	outs   dx,BYTE PTR ds:[esi]
  40e2ca:	mov    ecx,0x9d56baaa
  40e2cf:	pusha  
  40e2d0:	and    al,0xa3
  40e2d2:	int3   
  40e2d3:	gs inc ebp
  40e2d5:	mov    cl,BYTE PTR ss:0x5261a45d
  40e2dc:	cli    
  40e2dd:	stos   BYTE PTR es:[edi],al
  40e2de:	test   al,0xb6
  40e2e0:	adc    esp,DWORD PTR [edi+0x23d64583]
  40e2e6:	sbb    al,0x16
  40e2e8:	or     DWORD PTR [edi],0x79505e54
  40e2ee:	fsubr  DWORD PTR [eax-0x7c334d5b]
  40e2f4:	pusha  
  40e2f5:	and    ebx,edx
  40e2f7:	inc    ebp
  40e2f8:	scas   eax,DWORD PTR es:[edi]
  40e2f9:	push   ebx
  40e2fa:	sbb    DWORD PTR ds:[edi],eax
  40e2fd:	mov    ds:0x3e49c644,al
  40e302:	ins    BYTE PTR es:[edi],dx
  40e303:	and    al,0x60
  40e305:	push   ss
  40e306:	sar    DWORD PTR [ebx],1
  40e308:	push   esi
  40e309:	das    
  40e30a:	mov    ch,0xfb
  40e30c:	dec    eax
  40e30d:	push   ebp
  40e30e:	cmp    DWORD PTR [esi],eax
  40e310:	mov    esp,esi
  40e312:	push   ecx
  40e313:	imul   BYTE PTR [ebx+0x43abc5ce]
  40e319:	pushf  
  40e31a:	add    al,0xe3
  40e31c:	cmp    eax,0xbd8e4803
  40e321:	jno    0x40e350
  40e323:	ins    DWORD PTR es:[edi],dx
  40e324:	inc    ebp
  40e325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e326:	popa   
  40e327:	aaa    
  40e328:	add    al,0x2c
  40e32a:	mov    ch,bh
  40e32c:	fcomip st,st(5)
  40e32e:	adc    edi,edi
  40e330:	nop
  40e331:	sbb    BYTE PTR [ebx-0x41],ch
  40e334:	inc    eax
  40e335:	aad    0x5
  40e337:	pop    ebp
  40e338:	mov    BYTE PTR [ebx-0x75d78673],cl
  40e33e:	ja     0x40e3bf
  40e340:	xor    al,0x8b
  40e342:	ds inc ebp
  40e344:	test   DWORD PTR [edx-0x78],ebx
  40e347:	inc    BYTE PTR [esi+0x760adbf2]
  40e34d:	inc    edi
  40e34e:	pop    ss
  40e34f:	jne    0x40e345
  40e351:	xchg   esp,eax
  40e352:	jle    0x40e377
  40e354:	aam    0xaa
  40e356:	loopne 0x40e346
  40e358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e359:	xchg   edi,eax
  40e35a:	sub    eax,0x5a43a6be
  40e35f:	mov    esi,esi
  40e361:	addr16 ds or dl,0xc9
  40e366:	add    BYTE PTR [ebx-0x63],cl
  40e369:	ins    BYTE PTR es:[edi],dx
  40e36a:	mov    ah,0xf5
  40e36c:	dec    edi
  40e36d:	daa    
  40e36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e36f:	xor    al,0x24
  40e371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e372:	mov    eax,ds:0xeabcc6bf
  40e377:	leave  
  40e378:	ds xor eax,0x1c628f2f
  40e37e:	cmp    al,0x77
  40e380:	out    0xbb,al
  40e382:	dec    esp
  40e383:	adc    al,bl
  40e385:	ins    BYTE PTR es:[edi],dx
  40e386:	sar    BYTE PTR [eax-0x55],cl
  40e389:	retf   0xa186
  40e38c:	fsubrp st(2),st
  40e38e:	jne    0x40e345
  40e390:	dec    BYTE PTR [edi-0x697f89ba]
  40e396:	aad    0x2a
  40e398:	and    DWORD PTR [edi],esp
  40e39a:	pop    esp
  40e39b:	lock mov ss,WORD PTR [eax-0x6847dcc3]
  40e3a2:	(bad)  
  40e3a3:	cli    
  40e3a4:	dec    ebp
  40e3a5:	mov    WORD PTR [edi-0x2d],fs
  40e3a8:	sahf   
  40e3a9:	inc    esp
  40e3aa:	cmp    al,0x55
  40e3ac:	mov    bl,0xfa
  40e3ae:	sbb    al,BYTE PTR [ebx]
  40e3b0:	scas   eax,DWORD PTR es:[edi]
  40e3b1:	retf   
  40e3b2:	scas   eax,DWORD PTR es:[edi]
  40e3b3:	pop    ss
  40e3b4:	mov    eax,0xfa42dc94
  40e3b9:	pop    ebp
  40e3ba:	fnstenv [esi]
  40e3bc:	scas   al,BYTE PTR es:[edi]
  40e3bd:	pop    ss
  40e3be:	arpl   WORD PTR [ecx+0x55],di
  40e3c1:	cmp    BYTE PTR [ecx+0x15],ch
  40e3c4:	sar    DWORD PTR [ebx-0x7b5b6eb0],cl
  40e3ca:	retf   
  40e3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3cc:	fstp   QWORD PTR [eax]
  40e3ce:	je     0x40e38f
  40e3d0:	jle    0x40e38c
  40e3d2:	mov    ch,0x4a
  40e3d4:	lods   eax,DWORD PTR ds:[esi]
  40e3d5:	cs loop 0x40e374
  40e3d8:	pusha  
  40e3d9:	mov    cl,0x2c
  40e3db:	mov    DWORD PTR [edi+0x7e6fc014],esi
  40e3e1:	inc    edx
  40e3e2:	lahf   
  40e3e3:	jle    0x40e379
  40e3e5:	or     al,BYTE PTR [edi]
  40e3e7:	dec    ebx
  40e3e8:	add    eax,DWORD PTR [ecx]
  40e3ea:	mov    WORD PTR [eax],?
  40e3ec:	jp     0x40e39b
  40e3ee:	push   ss
  40e3ef:	add    BYTE PTR [esi],0x8d
  40e3f2:	push   ebp
  40e3f3:	jb     0x40e461
  40e3f5:	xchg   ebx,eax
  40e3f6:	clc    
  40e3f7:	jno    0x40e3f5
  40e3f9:	mov    ebp,0x8100d3a
  40e3fe:	ins    BYTE PTR es:[edi],dx
  40e3ff:	inc    edx
  40e400:	mov    edx,0x9c4f303
  40e405:	loop   0x40e45a
  40e407:	pop    es
  40e408:	rcr    BYTE PTR [eax+esi*1-0x405fb25],0x4e
  40e410:	mov    DWORD PTR [edi-0x20cbfd0b],esi
  40e416:	mov    al,bh
  40e418:	call   0x109:0xc6eb4c19
  40e41f:	or     BYTE PTR [edx+0x7e],0xbb
  40e423:	mov    BYTE PTR [ebx-0x34f2d8bb],bh
  40e429:	jl     0x40e448
  40e42b:	or     DWORD PTR [esi+0x7f],ecx
  40e42e:	push   ss
  40e42f:	sub    eax,0x35b23817
  40e434:	add    ch,BYTE PTR [esi+0x5fc60c0a]
  40e43a:	fisub  WORD PTR [edi+0x184073b9]
  40e440:	aad    0xd5
  40e442:	inc    esp
  40e443:	dec    ebx
  40e444:	out    dx,eax
  40e445:	inc    edi
  40e446:	mov    ecx,0x326e3dc0
  40e44b:	leave  
  40e44c:	mov    eax,ds:0xdb47369d
  40e451:	xor    al,0xe4
  40e453:	adc    al,0x52
  40e455:	rol    BYTE PTR [ecx],cl
  40e457:	int3   
  40e458:	push   ecx
  40e459:	mov    eax,0x4d22e0d0
  40e45e:	push   ebx
  40e45f:	xchg   ebx,edi
  40e461:	neg    DWORD PTR [edx+0x2b]
  40e464:	shl    dh,cl
  40e466:	or     edi,DWORD PTR [ebp-0x69]
  40e469:	lock loopne 0x40e3fc
  40e46c:	sbb    eax,0x80c42d12
  40e471:	adc    al,0xf0
  40e474:	xchg   ecx,ebx
  40e476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e477:	xor    eax,0x837ad75e
  40e47c:	ret    0xaea4
  40e47f:	sub    al,0x57
  40e481:	and    al,0xeb
  40e483:	hlt    
  40e484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e485:	pop    ds
  40e486:	pusha  
  40e487:	push   ss
  40e488:	outs   dx,DWORD PTR ds:[esi]
  40e489:	loop   0x40e4f6
  40e48b:	scas   eax,DWORD PTR es:[edi]
  40e48c:	scas   eax,DWORD PTR es:[edi]
  40e48d:	int3   
  40e48e:	out    0xe0,al
  40e490:	jecxz  0x40e4fa
  40e492:	imul   esp,ebp,0x263c9008
  40e498:	iret   
  40e499:	adc    cl,BYTE PTR [ebx+0x3aecd5e2]
  40e49f:	push   ebx
  40e4a0:	mov    WORD PTR [eax-0x11],es
  40e4a3:	mov    dl,0xad
  40e4a5:	cmp    al,0xcb
  40e4a7:	test   al,0x2d
  40e4a9:	hlt    
  40e4aa:	cwde   
  40e4ab:	bound  ebx,QWORD PTR [eax-0x2b313f87]
  40e4b1:	sti    
  40e4b2:	loopne 0x40e47a
  40e4b4:	call   0xa2b09007
  40e4b9:	mov    esp,0xe29ebcae
  40e4be:	test   BYTE PTR [eax+0x75],dh
  40e4c1:	out    0x19,al
  40e4c3:	sbb    eax,0x8114a516
  40e4c8:	enter  0x60df,0xa
  40e4cc:	faddp  st(1),st
  40e4ce:	adc    eax,0xd96ce192
  40e4d3:	inc    ebx
  40e4d4:	mov    eax,0x2a26b0e
  40e4d9:	mov    al,ds:0xa16f096b
  40e4de:	std    
  40e4df:	mov    WORD PTR [esi],cs
  40e4e1:	add    BYTE PTR [esi],dh
  40e4e3:	pop    edx
  40e4e4:	sub    ecx,DWORD PTR ds:0x982a6b49
  40e4ea:	sub    al,0xd1
  40e4ec:	or     BYTE PTR [ebp+eiz*1-0x1ce4ccbc],0x40
  40e4f4:	bound  edi,QWORD PTR [edi+0x6b]
  40e4f7:	dec    ebx
  40e4f8:	sbb    ecx,DWORD PTR [edx-0x22]
  40e4fb:	js     0x40e505
  40e4fd:	adc    eax,0xdcbe56e1
  40e502:	sbb    esi,DWORD PTR [ebx-0x77]
  40e505:	pushf  
  40e506:	sub    al,0x5c
  40e508:	mov    eax,ds:0xd2d2c311
  40e50d:	fistp  WORD PTR [ebx-0x1f84c601]
  40e513:	mov    ebx,0x61bf209d
  40e518:	mov    al,ds:0x9beeb913
  40e51d:	out    0x81,eax
  40e51f:	test   DWORD PTR [ebx],esi
  40e521:	dec    esi
  40e522:	xchg   esi,eax
  40e523:	pop    es
  40e524:	ss inc edx
  40e526:	das    
  40e527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e528:	gs pop esp
  40e52a:	retf   0x48d5
  40e52d:	mov    BYTE PTR [ecx+0x70],al
  40e530:	dec    DWORD PTR [esi]
  40e532:	add    BYTE PTR [esi+0x75a51a44],dh
  40e538:	test   edi,ebp
  40e53a:	leave  
  40e53b:	dec    ebx
  40e53c:	push   eax
  40e53d:	xor    BYTE PTR [ebx],bl
  40e53f:	outs   dx,BYTE PTR ds:[esi]
  40e540:	push   edi
  40e541:	adc    dh,BYTE PTR [ebp-0x2f]
  40e544:	pusha  
  40e545:	jg     0x40e5a2
  40e547:	in     al,dx
  40e548:	fisub  WORD PTR [ebp-0xbd18a01]
  40e54e:	pushf  
  40e54f:	ins    BYTE PTR es:[edi],dx
  40e550:	and    ch,BYTE PTR [ecx-0x7e1d913]
  40e556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e557:	outs   dx,DWORD PTR ds:[esi]
  40e558:	dec    edi
  40e559:	call   0xbe28:0x8440b05a
  40e560:	(bad)  
  40e561:	mov    eax,0x92fbb749
  40e566:	mov    ah,0xb6
  40e568:	inc    ebx
  40e569:	add    esi,DWORD PTR [ecx+0x3f]
  40e56c:	fcmovne st,st(2)
  40e56e:	or     BYTE PTR [edi-0x4e09abae],al
  40e574:	clc    
  40e575:	ds (bad) 
  40e577:	pop    ebp
  40e578:	or     al,0xc2
  40e57a:	outs   dx,BYTE PTR gs:[esi]
  40e57c:	sub    dl,BYTE PTR [ecx-0x5255f018]
  40e582:	cmc    
  40e583:	inc    ebx
  40e584:	bound  ebp,QWORD PTR [edi-0x47322cd4]
  40e58a:	mov    eax,0x81d31216
  40e58f:	and    BYTE PTR [ebx+0x70],dh
  40e592:	fdiv   st(4),st
  40e594:	dec    esp
  40e595:	push   esi
  40e596:	fsub   DWORD PTR [ecx-0x7aceaacb]
  40e59c:	outs   dx,BYTE PTR ds:[esi]
  40e59d:	dec    eax
  40e59e:	jg     0x40e5d3
  40e5a0:	es push esi
  40e5a2:	mov    ch,BYTE PTR [esi-0x6e]
  40e5a5:	(bad)  
  40e5a6:	xor    eax,0x4d9913b2
  40e5ab:	call   0x5086a8ac
  40e5b0:	hlt    
  40e5b1:	sbb    BYTE PTR [eax],dh
  40e5b3:	aaa    
  40e5b4:	mov    al,ds:0x9475388d
  40e5b9:	scas   eax,DWORD PTR es:[edi]
  40e5ba:	mov    esi,ebp
  40e5bc:	and    DWORD PTR [ebx],0x85df673
  40e5c2:	and    eax,DWORD PTR [ebx]
  40e5c4:	imul   edi,DWORD PTR [ecx],0x990941e6
  40e5ca:	or     cl,BYTE PTR [ecx+eax*1-0x3d77949]
  40e5d1:	scas   eax,DWORD PTR es:[edi]
  40e5d2:	int3   
  40e5d3:	fist   DWORD PTR [esi]
  40e5d5:	lea    esp,[eax-0x45]
  40e5d8:	jns    0x40e659
  40e5da:	mov    dl,0x9c
  40e5dc:	push   0xffffffa1
  40e5de:	pop    ss
  40e5df:	jmp    FWORD PTR [eax-0xcaef4a0]
  40e5e5:	jmp    0xce6c43a1
  40e5ea:	(bad)  
  40e5eb:	jmp    0x40e643
  40e5ed:	imul   eax,DWORD PTR [edi-0x2db96940],0x5ef1c101
  40e5f7:	hlt    
  40e5f8:	bound  edx,QWORD PTR [eax+esi*2]
  40e5fb:	in     al,0xe5
  40e5fd:	pushf  
  40e5fe:	mov    ?,WORD PTR [ecx]
  40e600:	call   0x3fec:0xa65a6f1c
  40e607:	xor    al,0xf
  40e609:	fsubr  QWORD PTR [ecx-0x3a]
  40e60c:	jmp    0x40e5fd
  40e60e:	push   edi
  40e60f:	jne    0x40e64a
  40e611:	cmp    BYTE PTR [edx],bh
  40e613:	sbb    eax,0x97e09f78
  40e618:	ret    
  40e619:	inc    ecx
  40e61a:	pushf  
  40e61b:	xchg   ebp,eax
  40e61c:	in     eax,0xbc
  40e61e:	retf   
  40e61f:	mov    dh,0x41
  40e621:	in     eax,dx
  40e622:	pandn  mm0,QWORD PTR [esi-0x3]
  40e626:	or     DWORD PTR [ebx],esi
  40e628:	retf   0x6cc5
  40e62b:	jle    0x40e666
  40e62d:	push   ds
  40e62e:	ficom  DWORD PTR [eax-0x70c51875]
  40e634:	jbe    0x40e635
  40e636:	or     ebp,esi
  40e638:	cmp    eax,0xa96c9aa6
  40e63d:	stos   BYTE PTR es:[edi],al
  40e63e:	(bad)  
  40e63f:	fdiv   st,st(5)
  40e641:	shr    dh,0x8c
  40e644:	inc    edi
  40e645:	xor    eax,DWORD PTR [esi+0x18722a40]
  40e64b:	mov    ecx,0x798e6a96
  40e650:	adc    cl,BYTE PTR [ecx+0x345daaf6]
  40e656:	out    dx,eax
  40e657:	mov    ah,0x8
  40e659:	popf   
  40e65a:	loopne 0x40e609
  40e65c:	loope  0x40e686
  40e65e:	ds inc eax
  40e660:	retf   
  40e661:	xchg   ebp,eax
  40e662:	bound  eax,QWORD PTR [esi-0x1931b298]
  40e668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e669:	stos   BYTE PTR es:[edi],al
  40e66a:	push   0xffffffc1
  40e66c:	push   ds
  40e66d:	mov    ebx,0xbdeb84a5
  40e672:	sbb    BYTE PTR [edx-0x57],ah
  40e675:	data16 into 
  40e677:	cmove  esp,DWORD PTR [ebp-0x75]
  40e67b:	popf   
  40e67c:	(bad)  
  40e67d:	and    eax,0x8ff6784b
  40e682:	push   edi
  40e683:	push   ss
  40e684:	inc    ebp
  40e685:	xor    esi,esp
  40e687:	ficom  WORD PTR [esi+ebx*4]
  40e68a:	mov    esi,0xf0890eb4
  40e68f:	dec    esi
  40e690:	cmp    edx,edi
  40e692:	dec    eax
  40e693:	push   esp
  40e694:	addr16 push ss
  40e696:	data16 stos BYTE PTR es:[edi],al
  40e698:	or     eax,0x43edf8a9
  40e69d:	adc    al,0xbd
  40e69f:	jecxz  0x40e6e3
  40e6a1:	outs   dx,DWORD PTR ds:[esi]
  40e6a2:	adc    cl,BYTE PTR [eax]
  40e6a4:	dec    ebx
  40e6a5:	xor    esi,DWORD PTR [edi+0x1e]
  40e6a8:	cmp    al,BYTE PTR [edi-0xc]
  40e6ab:	inc    esi
  40e6ac:	inc    BYTE PTR [edx]
  40e6ae:	mov    eax,0x8fcf527a
  40e6b3:	in     al,dx
  40e6b4:	aas    
  40e6b5:	test   BYTE PTR [ebx],bl
  40e6b7:	jmp    0xa541f025
  40e6bc:	dec    edx
  40e6bd:	nop
  40e6be:	ja     0x40e730
  40e6c0:	imul   ebp,DWORD PTR [edx+0x59],0xeb5e25b2
  40e6c7:	or     BYTE PTR [ebx-0x7c],dl
  40e6ca:	shl    dl,1
  40e6cc:	mov    dl,BYTE PTR [esi+0x4a]
  40e6cf:	mov    ch,0x4f
  40e6d1:	mov    cl,0xbc
  40e6d3:	jae    0x40e6f3
  40e6d5:	or     eax,0x4c1452a7
  40e6da:	sub    al,0xea
  40e6dc:	sub    edx,esp
  40e6de:	ror    BYTE PTR [edi-0x2c4ccc3f],cl
  40e6e4:	and    edi,DWORD PTR [ebx]
  40e6e6:	pop    ebp
  40e6e7:	mov    esi,0xc1fdc253
  40e6ec:	jnp    0x40e752
  40e6ee:	mov    ebx,0xf93bb048
  40e6f3:	fild   WORD PTR [edi-0x5ee2acb9]
  40e6f9:	add    al,0x37
  40e6fb:	pop    eax
  40e6fc:	mov    cl,0x86
  40e6fe:	es mov bh,0xef
  40e701:	inc    ebp
  40e702:	push   es
  40e703:	shl    bh,cl
  40e705:	or     eax,0xd4139c06
  40e70a:	mov    ah,0x46
  40e70c:	mov    bl,0x50
  40e70e:	mov    al,0xa
  40e710:	adc    DWORD PTR [esi-0x6c7fae9e],esi
  40e716:	iret   
  40e717:	imul   edi
  40e719:	loop   0x40e704
  40e71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e71c:	inc    ecx
  40e71d:	mov    dh,0xd8
  40e71f:	and    BYTE PTR [ebp+0x61],bl
  40e722:	outs   dx,DWORD PTR ds:[esi]
  40e723:	fdiv   st(6),st
  40e725:	retf   
  40e726:	xchg   sp,ax
  40e728:	push   0x5e
  40e72a:	dec    esp
  40e72b:	mov    eax,0xe1541e7b
  40e730:	fist   WORD PTR [edi-0x54]
  40e733:	cld    
  40e734:	arpl   bx,bx
  40e736:	outs   dx,BYTE PTR ds:[esi]
  40e737:	or     al,0xe4
  40e739:	loopne 0x40e6f1
  40e73b:	pushf  
  40e73c:	push   esp
  40e73d:	sub    BYTE PTR [esi],al
  40e73f:	xchg   esi,eax
  40e740:	mov    ah,0x87
  40e742:	xchg   edi,eax
  40e743:	or     ecx,DWORD PTR [eax-0x2b]
  40e746:	inc    esi
  40e747:	loop   0x40e70a
  40e749:	sbb    BYTE PTR [ebx-0x1ec49825],0x54
  40e750:	pushf  
  40e751:	push   ebp
  40e752:	out    0xb9,eax
  40e754:	stos   DWORD PTR es:[edi],eax
  40e755:	xchg   BYTE PTR [eax-0x715c225b],ah
  40e75b:	imul   BYTE PTR [edx]
  40e75d:	retf   0x793e
  40e760:	lds    edi,FWORD PTR [edx]
  40e762:	bound  eax,QWORD PTR [eax-0x19]
  40e765:	in     eax,0xbb
  40e767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e768:	je     0x40e79d
  40e76a:	test   al,0x26
  40e76c:	xor    bl,BYTE PTR [ebx]
  40e76e:	cld    
  40e76f:	scas   al,BYTE PTR es:[edi]
  40e770:	cmp    al,BYTE PTR [eax+esi*8-0x67]
  40e774:	sahf   
  40e775:	mov    cl,0xc3
  40e777:	or     DWORD PTR [edx+esi*4-0x7f255f78],0xc34a3311
  40e782:	jo     0x40e7f3
  40e784:	add    DWORD PTR [edi+eax*8],ebx
  40e787:	mov    ebx,0xd3d0460e
  40e78c:	jmp    0xe29:0x510372ae
  40e793:	sbb    eax,eax
  40e795:	(bad)  
  40e796:	daa    
  40e797:	icebp  
  40e798:	fld    DWORD PTR [edx]
  40e79a:	iret   
  40e79b:	(bad)  
  40e79c:	jmp    0x4aaf4492
  40e7a1:	pusha  
  40e7a2:	add    ah,BYTE PTR [edx-0x6cde6a6f]
  40e7a8:	outs   dx,BYTE PTR ds:[esi]
  40e7a9:	push   ecx
  40e7aa:	fdivrp st(1),st
  40e7ac:	maskmovq mm2,(bad)
  40e7ad:	not    DWORD PTR ds:0x33db6a07
  40e7b3:	ins    BYTE PTR es:[edi],dx
  40e7b4:	clc    
  40e7b5:	xchg   esi,eax
  40e7b6:	seta   BYTE PTR [ebp+eiz*1-0x3c9fc09f]
  40e7be:	ret    0x4558
  40e7c1:	dec    edi
  40e7c2:	int3   
  40e7c3:	out    0xe1,al
  40e7c5:	pop    ebx
  40e7c6:	adc    BYTE PTR [eax],0x9e
  40e7c9:	sbb    eax,0xff3d7038
  40e7ce:	std    
  40e7cf:	lods   al,BYTE PTR ds:[esi]
  40e7d0:	dec    edi
  40e7d1:	jmp    0x9ac4212d
  40e7d6:	jb     0x40e82c
  40e7d8:	pop    ecx
  40e7d9:	push   esi
  40e7da:	iret   
  40e7db:	test   BYTE PTR [ecx+0x53134865],ah
  40e7e1:	call   0xf802e3aa
  40e7e6:	dec    esi
  40e7e7:	(bad)  
  40e7e8:	rol    BYTE PTR [edi+0x16a7075b],cl
  40e7ee:	test   ebp,ebp
  40e7f0:	fbstp  TBYTE PTR [eax-0x8]
  40e7f3:	das    
  40e7f4:	popa   
  40e7f5:	mov    fs,WORD PTR [ecx+0x39142af]
  40e7fb:	fst    DWORD PTR [eax]
  40e7fd:	imul   edx,DWORD PTR [esi],0x56
  40e800:	add    BYTE PTR [ebx+0x5ce56e6c],ah
  40e806:	mov    ebp,0xbd6833a4
  40e80b:	out    dx,al
  40e80c:	das    
  40e80d:	(bad)  
  40e80e:	xchg   edx,eax
  40e80f:	out    0xc9,eax
  40e811:	pop    ss
  40e812:	fcom   DWORD PTR [edx+0x68]
  40e815:	pop    edx
  40e816:	aas    
  40e817:	mov    ds:0x8dbc46bc,eax
  40e81c:	mov    ecx,0x525d4fe5
  40e821:	hlt    
  40e822:	adc    bl,ah
  40e824:	push   ss
  40e825:	out    dx,eax
  40e826:	mov    ecx,esi
  40e828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e829:	or     DWORD PTR [ebx+ecx*2-0x69],ebx
  40e82d:	or     eax,0x7ae1306d
  40e832:	jp     0x40e837
  40e834:	xor    DWORD PTR [edi+0x7b],edx
  40e837:	scas   al,BYTE PTR es:[edi]
  40e838:	push   ss
  40e839:	mov    al,BYTE PTR [ebp+0x3]
  40e83c:	adc    DWORD PTR [eax+0xe],ecx
  40e83f:	push   0x27
  40e841:	jbe    0x40e883
  40e843:	mov    bl,0x2e
  40e845:	jns    0x40e865
  40e847:	ja     0x40e87d
  40e849:	retf   
  40e84a:	addr16 pop esi
  40e84c:	push   edi
  40e84d:	pop    es
  40e84e:	sbb    DWORD PTR [eax+0x6e15e2c],edx
  40e854:	mov    ebx,edi
  40e856:	ds mov edx,edi
  40e859:	cmp    eax,0x87a4e2d4
  40e85e:	adc    DWORD PTR [edx-0x66],esi
  40e861:	pushf  
  40e862:	mov    al,ds:0x12835a9e
  40e867:	je     0x40e865
  40e869:	mov    cl,0x83
  40e86b:	gs cmc 
  40e86d:	mov    eax,ds:0x176af4fa
  40e872:	jl     0x40e8c7
  40e874:	push   ebp
  40e875:	mov    esi,0xbf4dca0
  40e87a:	add    ch,ah
  40e87c:	pop    ebp
  40e87d:	or     DWORD PTR [edx],0x5ab4f310
  40e883:	sbb    DWORD PTR [edi],0x64
  40e886:	and    DWORD PTR [edx-0x3400f6cc],edx
  40e88c:	xor    ebx,ebx
  40e88e:	mov    esi,0xea4ca11b
  40e893:	sub    dh,BYTE PTR [edi]
  40e895:	cld    
  40e896:	nop
  40e897:	loopne 0x40e869
  40e899:	pop    es
  40e89a:	jmp    0xc9b66db2
  40e89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a0:	jecxz  0x40e830
  40e8a2:	fwait
  40e8a3:	xor    ebx,DWORD PTR [edi-0x5a9cf8c2]
  40e8a9:	xchg   esp,edi
  40e8ab:	ret    0x269
  40e8ae:	mov    ch,0xf
  40e8b0:	fwait
  40e8b1:	pop    eax
  40e8b2:	(bad)  
  40e8b3:	dec    edi
  40e8b4:	xor    al,BYTE PTR [edi]
  40e8b6:	dec    esi
  40e8b7:	popf   
  40e8b8:	mov    edi,ss
  40e8ba:	repz lock xor edi,edx
  40e8be:	sbb    al,al
  40e8c0:	imul   edi,edi,0xfffffffe
  40e8c3:	aam    0x74
  40e8c5:	bound  eax,QWORD PTR [ebx+0x4b89f94d]
  40e8cb:	jns    0x40e8d3
  40e8cd:	fldcw  WORD PTR [edi]
  40e8cf:	sbb    eax,0xe55eebe7
  40e8d4:	(bad)  
  40e8d5:	fcom   DWORD PTR [edx]
  40e8d7:	jno    0x40e916
  40e8d9:	cs jns 0x40e8f8
  40e8dc:	sub    cl,BYTE PTR [esi+0x5a4de3e6]
  40e8e2:	inc    ebp
  40e8e3:	sub    al,BYTE PTR [edi]
  40e8e5:	fsubr  QWORD PTR [edx-0x297f3c78]
  40e8eb:	mov    ebx,0xca6aeeb
  40e8f0:	pop    ss
  40e8f1:	cli    
  40e8f2:	and    BYTE PTR [esi-0x278ac791],bl
  40e8f8:	ds mov ah,0x91
  40e8fb:	imul   edi,DWORD PTR [eax-0x696bf238],0xffffff8d
  40e902:	push   es
  40e903:	jmp    0x61409acb
  40e908:	repz pop ebp
  40e90a:	dec    edi
  40e90b:	adc    BYTE PTR [edx],0xb
  40e90e:	cwde   
  40e90f:	je     0x40e922
  40e911:	stos   BYTE PTR es:[edi],al
  40e912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e913:	addr16 cmp eax,0xfef9dac2
  40e919:	sbb    esi,DWORD PTR [esi+0x43]
  40e91c:	fcmovbe st,st(5)
  40e91e:	(bad)  
  40e91f:	in     eax,dx
  40e920:	mov    dl,0x7e
  40e922:	add    DWORD PTR [ecx],ebp
  40e924:	mov    dh,0xba
  40e926:	sbb    BYTE PTR [ecx+ebx*4+0x2e],0x70
  40e92b:	adc    ebx,0xe9a24ca0
  40e931:	xor    eax,0xfe75a7f0
  40e936:	aas    
  40e937:	cmp    al,ch
  40e939:	int    0x7b
  40e93b:	jg     0x40e8ee
  40e93d:	mov    cl,0xc4
  40e93f:	popa   
  40e940:	aas    
  40e941:	int    0xe5
  40e943:	repz aas 
  40e945:	repnz into 
  40e947:	ds in  eax,0x95
  40e94a:	xchg   ebp,eax
  40e94b:	sbb    eax,0xb31373d4
  40e950:	imul   ecx,DWORD PTR [edi-0x6d79d7ff],0xcf1761ab
  40e95a:	push   0x6d
  40e95c:	inc    BYTE PTR [ebx+0x61]
  40e95f:	loope  0x40e948
  40e961:	adc    bl,ch
  40e963:	pusha  
  40e964:	dec    edx
  40e965:	and    eax,0x51195ffb
  40e96a:	xchg   BYTE PTR [edx-0x47beeb4],dh
  40e970:	push   0x66
  40e972:	jnp    0x40e945
  40e974:	std    
  40e975:	out    0x41,al
  40e977:	pop    eax
  40e978:	push   DWORD PTR [ecx+edi*1]
  40e97b:	and    cl,BYTE PTR [eax+ebx*8+0x4c]
  40e97f:	bound  esp,QWORD PTR [edi]
  40e981:	loope  0x40e93e
  40e983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e984:	or     eax,0xfffffff5
  40e987:	jns    0x40e925
  40e989:	sub    al,0x9b
  40e98b:	lods   eax,DWORD PTR ds:[esi]
  40e98c:	dec    eax
  40e98d:	mov    WORD PTR [ecx],?
  40e98f:	cwde   
  40e990:	and    cl,BYTE PTR [ecx+0x71]
  40e993:	stc    
  40e994:	jns    0x40e9e4
  40e996:	shl    DWORD PTR [ebp-0x4e1c4100],cl
  40e99c:	sub    al,0xce
  40e99e:	mov    ecx,0xee7dc891
  40e9a3:	push   esp
  40e9a4:	and    DWORD PTR [ebp+0x1045e8b3],0xffffff8c
  40e9ab:	push   edx
  40e9ac:	repz es lds edx,FWORD PTR ss:[esi]
  40e9b1:	sbb    edx,esp
  40e9b3:	int3   
  40e9b4:	xchg   ebx,ebx
  40e9b6:	aaa    
  40e9b7:	mov    eax,0x4de60e94
  40e9bc:	add    eax,0x9e145bec
  40e9c1:	and    edx,DWORD PTR [esi]
  40e9c3:	pop    ebp
  40e9c4:	(bad)  
  40e9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c6:	dec    edi
  40e9c7:	aas    
  40e9c8:	push   0xb3e13fbc
  40e9cd:	lods   eax,DWORD PTR ds:[esi]
  40e9ce:	mov    bh,BYTE PTR [ebp+0x1b]
  40e9d1:	(bad)  
  40e9d2:	pop    edi
  40e9d3:	bound  edx,QWORD PTR [edx-0x78]
  40e9d6:	fisubr WORD PTR ds:0x59e0f995
  40e9dc:	jle    0x40e972
  40e9de:	push   edx
  40e9df:	dec    edx
  40e9e0:	sub    ch,0xe6
  40e9e3:	cli    
  40e9e4:	xor    ah,bl
  40e9e6:	jae    0x40e99a
  40e9e8:	in     eax,dx
  40e9e9:	repz addr16 js 0x40ea5f
  40e9ed:	inc    ebx
  40e9ee:	xor    BYTE PTR [eax],bh
  40e9f0:	add    eax,0x13ca6f3f
  40e9f5:	sbb    eax,0x1ce29624
  40e9fa:	cdq    
  40e9fb:	test   BYTE PTR [eax+0xe],ah
  40e9fe:	fnstsw WORD PTR [esi-0x64]
  40ea01:	enter  0x201c,0x2b
  40ea05:	xor    eax,0xd7a02fb3
  40ea0a:	inc    ebx
  40ea0b:	jge    0x40e9d6
  40ea0d:	cmp    BYTE PTR [ebp-0x80],0xaf
  40ea11:	xor    BYTE PTR fs:[edx-0x20],cl
  40ea15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea16:	or     ebx,edx
  40ea18:	aaa    
  40ea19:	jmp    0x8344c18e
  40ea1e:	mov    ecx,0xc7f25b53
  40ea23:	sbb    BYTE PTR [esi+0x49],cl
  40ea26:	push   cs
  40ea27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea28:	test   al,0x9a
  40ea2a:	mov    ds:0x8911a610,eax
  40ea2f:	cwde   
  40ea30:	mov    ds:0x82ff30a6,al
  40ea35:	data16 hlt 
  40ea37:	pop    ds
  40ea38:	or     eax,0x86cdac01
  40ea3d:	daa    
  40ea3e:	jmp    0x40ea96
  40ea40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea41:	add    eax,0xf0378955
  40ea46:	xor    BYTE PTR [ebx+0x8],dh
  40ea49:	in     al,0x5f
  40ea4b:	enter  0xbddc,0xab
  40ea4f:	cmp    dl,bh
  40ea51:	or     ah,BYTE PTR [esi+0x454088cd]
  40ea57:	mov    eax,0x80cde85f
  40ea5c:	cmp    BYTE PTR [ecx],dh
  40ea5e:	mov    dh,0xa9
  40ea60:	xor    ebx,ebp
  40ea62:	je     0x40ea8b
  40ea64:	aad    0x5a
  40ea66:	and    DWORD PTR [edx-0x33],eax
  40ea69:	mov    al,0xa1
  40ea6b:	div    BYTE PTR [edi+0x6]
  40ea6e:	cmp    DWORD PTR [eax+0x1d],0x401f4af9
  40ea75:	and    cl,dl
  40ea77:	loopne 0x40eaed
  40ea79:	push   0x5e
  40ea7b:	jmp    0x5a6ccd58
  40ea80:	sahf   
  40ea81:	scas   al,BYTE PTR es:[edi]
  40ea82:	lock (bad) 
  40ea84:	mov    ecx,0x611bc7c1
  40ea89:	push   ebp
  40ea8a:	rcl    dh,cl
  40ea8c:	mov    ds:0xfd67d154,eax
  40ea91:	sub    al,0x9f
  40ea93:	pop    esi
  40ea94:	pop    esp
  40ea95:	fstp   QWORD PTR [ebp-0x3c]
  40ea98:	pop    ebp
  40ea99:	shl    bh,cl
  40ea9b:	inc    edx
  40ea9c:	cdq    
  40ea9d:	test   BYTE PTR [ebp+0x3a],0x9a
  40eaa1:	xchg   edi,eax
  40eaa2:	call   0x5491b039
  40eaa7:	ror    DWORD PTR [esi+0x57],1
  40eaaa:	xchg   ebp,eax
  40eaab:	xor    bh,BYTE PTR [esi-0x4963febc]
  40eab1:	mul    BYTE PTR [esi-0x44]
  40eab4:	or     DWORD PTR [ebp*4+0x67d824d7],edx
  40eabb:	sti    
  40eabc:	mov    al,0x4d
  40eabe:	into   
  40eabf:	inc    edx
  40eac0:	test   eax,0x226a4c47
  40eac5:	stos   DWORD PTR es:[edi],eax
  40eac6:	and    DWORD PTR ds:0x7574c5d3,edx
  40eacc:	xor    al,BYTE PTR [ecx]
  40eace:	sahf   
  40eacf:	push   cs
  40ead0:	test   DWORD PTR [edx],ebx
  40ead2:	imul   edi,DWORD PTR [ecx+edi*4-0x15],0x39
  40ead7:	(bad)  
  40ead8:	repnz lods eax,DWORD PTR ds:[esi]
  40eada:	pop    eax
  40eadb:	jbe    0x40eafc
  40eadd:	mov    dl,BYTE PTR ds:0x6cd649e7
  40eae3:	jmp    0x40eb51
  40eae5:	mov    BYTE PTR [ebp-0x5f6507e8],cl
  40eaeb:	mov    DWORD PTR [edx-0x3a8b8c61],ebx
  40eaf1:	(bad)
  40eaf4:	enter  0x3a85,0x23
  40eaf8:	mov    ds:0xe0085b80,eax
  40eafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eafe:	xor    esi,esp
  40eb00:	in     eax,0x89
  40eb02:	mov    eax,0x70ca5697
  40eb07:	jnp    0x40eab5
  40eb09:	pop    ss
  40eb0a:	ficomp WORD PTR [ecx+0x3fbbb642]
  40eb10:	fld    TBYTE PTR [edx+0x6e]
  40eb13:	inc    ebx
  40eb14:	add    bl,BYTE PTR [esi+ebx*4+0x6b]
  40eb18:	mov    bl,0x56
  40eb1a:	fsub   DWORD PTR [ebx]
  40eb1c:	mov    bl,0x95
  40eb1e:	push   ecx
  40eb1f:	aam    0xc1
  40eb21:	iret   
  40eb22:	repz (bad) 
  40eb24:	and    al,0xfd
  40eb26:	lahf   
  40eb27:	fs mov bl,0x93
  40eb2a:	dec    edi
  40eb2b:	pop    edi
  40eb2c:	push   edi
  40eb2d:	pushf  
  40eb2e:	cld    
  40eb2f:	test   eax,0x7b1ee0b9
  40eb34:	inc    ebp
  40eb35:	rcr    BYTE PTR gs:[esi+0x57],cl
  40eb39:	test   DWORD PTR [ebx+0x54c76173],esi
  40eb3f:	lods   al,BYTE PTR ds:[esi]
  40eb40:	pop    ss
  40eb41:	or     eax,DWORD PTR [ecx-0x2e1ef68f]
  40eb47:	xchg   DWORD PTR [ecx],edi
  40eb49:	rol    BYTE PTR [esi+0x16],cl
  40eb4c:	inc    edx
  40eb4d:	test   BYTE PTR [edx+eiz*1+0x4354a756],bl
  40eb54:	lock jne 0x40eae2
  40eb57:	inc    eax
  40eb58:	fucomp st(2)
  40eb5a:	and    DWORD PTR [edi],ebx
  40eb5c:	sbb    dl,al
  40eb5e:	or     bh,BYTE PTR [ebp+0x13]
  40eb61:	sub    al,0xe5
  40eb63:	inc    esi
  40eb64:	outs   dx,BYTE PTR ds:[esi]
  40eb65:	idiv   BYTE PTR [ebp+0x71c87ffe]
  40eb6b:	or     eax,0x7f391417
  40eb70:	fcomp  st(1)
  40eb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb73:	or     eax,DWORD PTR [esi]
  40eb75:	nop
  40eb76:	xchg   BYTE PTR [eax-0x5b13ab6e],cl
  40eb7c:	adc    eax,0x7b8695e4
  40eb81:	add    BYTE PTR [ecx],bl
  40eb83:	cli    
  40eb84:	ds push ecx
  40eb86:	stos   BYTE PTR es:[edi],al
  40eb87:	pop    ecx
  40eb88:	out    0x67,eax
  40eb8a:	gs xchg ebx,eax
  40eb8c:	xchg   edi,eax
  40eb8d:	push   ecx
  40eb8e:	jp     0x40eb1b
  40eb90:	and    DWORD PTR [eax],ebx
  40eb92:	add    ah,BYTE PTR [esi-0x62c3b19b]
  40eb98:	into   
  40eb99:	fdiv   QWORD PTR [ebx-0x69]
  40eb9c:	scas   eax,DWORD PTR es:[edi]
  40eb9d:	jmp    0x40ebd9
  40eb9f:	js     0x40ebf8
  40eba1:	bound  edx,QWORD PTR [esi-0x1c]
  40eba4:	lods   eax,DWORD PTR ds:[esi]
  40eba5:	int3   
  40eba6:	les    edx,FWORD PTR [edx]
  40eba8:	pop    ebp
  40eba9:	adc    DWORD PTR [ebx],ebx
  40ebab:	mov    ebp,0xa9aaf91a
  40ebb0:	jp     0x40eb58
  40ebb2:	dec    eax
  40ebb3:	std    
  40ebb4:	cmc    
  40ebb5:	fcom   DWORD PTR [eax+0x35017fe5]
  40ebbb:	not    BYTE PTR [ecx-0x7ece1391]
  40ebc1:	xor    eax,0x17ef67ad
  40ebc6:	adc    edi,DWORD PTR [eax-0x32a62929]
  40ebcc:	xlat   BYTE PTR ds:[ebx]
  40ebcd:	xor    dl,BYTE PTR [edi]
  40ebcf:	addr16 pushf 
  40ebd1:	pop    esi
  40ebd2:	mov    al,ds:0xe42dfbd7
  40ebd7:	adc    al,0xbe
  40ebd9:	in     eax,dx
  40ebda:	push   ebx
  40ebdb:	(bad)  
  40ebdc:	mov    dl,0xcd
  40ebde:	mov    ah,0x49
  40ebe0:	cmp    BYTE PTR [eax],al
  40ebe2:	sub    al,BYTE PTR [ecx+ecx*2+0x17]
  40ebe6:	loope  0x40eb83
  40ebe8:	sub    edx,DWORD PTR [ecx-0x4bf6d566]
  40ebee:	pop    ds
  40ebef:	mov    ah,0x24
  40ebf1:	jo     0x40ec6b
  40ebf3:	sub    DWORD PTR [eax-0x1045e2c8],edi
  40ebf9:	jmp    0x6fb02c4c
  40ebfe:	rcl    BYTE PTR [edi-0x56],0xcb
  40ec02:	jmp    0xadb8831e
  40ec07:	jp     0x40ec0b
  40ec09:	fidiv  WORD PTR [ebx-0x5e]
  40ec0c:	in     eax,0x46
  40ec0e:	loop   0x40eb9a
  40ec10:	xor    BYTE PTR [eax+esi*2+0x18],bl
  40ec14:	fs stos BYTE PTR es:[edi],al
  40ec16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec17:	cmp    BYTE PTR [ecx],bh
  40ec19:	out    0x28,al
  40ec1b:	cld    
  40ec1c:	sub    ecx,edi
  40ec1e:	in     al,dx
  40ec1f:	add    BYTE PTR [ecx],ah
  40ec21:	mov    bh,0xdd
  40ec23:	outs   dx,BYTE PTR ds:[esi]
  40ec24:	cmp    DWORD PTR [esi+edi*1],eax
  40ec27:	shl    BYTE PTR [edx],cl
  40ec29:	loopne 0x40ec0e
  40ec2b:	mov    edi,DWORD PTR [eax]
  40ec2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec2e:	leavew 
  40ec30:	or     ebx,DWORD PTR [eax]
  40ec32:	ror    DWORD PTR ds:0x3462e4ec,cl
  40ec38:	cmc    
  40ec39:	in     al,dx
  40ec3a:	jp     0x40ec7a
  40ec3c:	dec    ebx
  40ec3d:	or     eax,0xc55f0930
  40ec42:	rol    BYTE PTR [esp+edi*4],0x54
  40ec46:	in     eax,dx
  40ec47:	ins    DWORD PTR es:[edi],dx
  40ec48:	rcl    DWORD PTR [ebx+eax*8+0x2b3fe301],cl
  40ec4f:	in     eax,0xaa
  40ec51:	pop    edi
  40ec52:	add    bl,bh
  40ec54:	mov    ecx,0x6195f2b5
  40ec59:	ds xchg edx,eax
  40ec5b:	add    al,0xd1
  40ec5d:	into   
  40ec5e:	inc    ecx
  40ec5f:	cs das 
  40ec61:	or     cl,BYTE PTR [eax-0x6cbbf493]
  40ec67:	imul   DWORD PTR cs:[ecx-0x53]
  40ec6b:	pop    esi
  40ec6c:	out    0x47,eax
  40ec6e:	cs cs jae 0x40ec24
  40ec72:	in     al,dx
  40ec73:	repz retf 0x5278
  40ec77:	xor    eax,0x493f8183
  40ec7c:	in     eax,dx
  40ec7d:	fist   DWORD PTR [edx+0x60]
  40ec80:	stc    
  40ec81:	mov    BYTE PTR [edx],cl
  40ec83:	inc    edx
  40ec84:	inc    ebp
  40ec85:	std    
  40ec86:	dec    ebp
  40ec87:	and    eax,0xfe347e8f
  40ec8c:	jae    0x40ec8b
  40ec8e:	or     eax,DWORD PTR [esi+0x622cbe11]
  40ec94:	adc    DWORD PTR [ecx+0x67],ebx
  40ec97:	lods   al,BYTE PTR ds:[esi]
  40ec98:	push   ecx
  40ec99:	or     cl,BYTE PTR [edi+0xe]
  40ec9c:	mov    WORD PTR [ebp+esi*1-0x183109f3],fs
  40eca3:	leave  
  40eca4:	out    0x44,al
  40eca6:	fisttp WORD PTR [edx+eax*8]
  40eca9:	add    eax,0xa905f41f
  40ecae:	jle    0x40ecb7
  40ecb0:	jg     0x40ec5a
  40ecb2:	xchg   esi,eax
  40ecb3:	xor    edx,DWORD PTR [edi]
  40ecb5:	add    eax,0xda18ed72
  40ecba:	cld    
  40ecbb:	je     0x40ed18
  40ecbd:	ja     0x40ed32
  40ecbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc0:	iret   
  40ecc1:	xlat   BYTE PTR ds:[ebx]
  40ecc2:	rol    BYTE PTR [edx+0x1fefe5bc],1
  40ecc8:	mov    ebx,0x60e3acf4
  40eccd:	push   edi
  40ecce:	rcl    BYTE PTR [edx-0x2df9846f],cl
  40ecd4:	or     edx,esi
  40ecd6:	and    eax,0xc6fd8209
  40ecdb:	xchg   esp,eax
  40ecdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecdd:	xor    eax,0xf588fd3a
  40ece2:	in     al,0x7a
  40ece4:	hlt    
  40ece5:	dec    ebp
  40ece6:	addr16 inc edx
  40ece8:	ficomp DWORD PTR [esi]
  40ecea:	xor    ebx,DWORD PTR [edx]
  40ecec:	mov    dh,0x76
  40ecee:	inc    ecx
  40ecef:	gs int 0xc3
  40ecf2:	jno    0x40ecbd
  40ecf4:	lahf   
  40ecf5:	shr    DWORD PTR [esi+0x57],0x86
  40ecf9:	fstp   TBYTE PTR [ecx-0x28]
  40ecfc:	outs   dx,BYTE PTR ds:[esi]
  40ecfd:	xchg   ebp,eax
  40ecfe:	push   ebx
  40ecff:	popa   
  40ed00:	mov    al,ds:0x39f2ce97
  40ed05:	lahf   
  40ed06:	or     DWORD PTR ss:[ebx-0x3c730ae7],esi
  40ed0d:	add    ebx,edi
  40ed0f:	add    DWORD PTR [ebp-0x720a7a7a],edx
  40ed15:	outs   dx,DWORD PTR ds:[esi]
  40ed16:	xchg   bx,ax
  40ed18:	fwait
  40ed19:	mov    edi,0x3661f0b4
  40ed1e:	(bad)
  40ed22:	dec    ecx
  40ed23:	mov    al,0x49
  40ed25:	push   es
  40ed26:	mov    eax,ds:0x51be5af2
  40ed2b:	rcl    edi,0xbc
  40ed2e:	mov    bl,0xdf
  40ed30:	mov    al,ds:0x400f779
  40ed35:	jmp    0xe5daa41b
  40ed3a:	sahf   
  40ed3b:	push   ecx
  40ed3c:	sbb    BYTE PTR [ecx*8+0x7d230f16],bh
  40ed43:	fstp   TBYTE PTR [esi]
  40ed45:	es js  0x40edad
  40ed48:	adc    ch,BYTE PTR [edx+0x27331584]
  40ed4e:	xchg   sp,ax
  40ed50:	jmp    0x40ed37
  40ed52:	stos   DWORD PTR es:[edi],eax
  40ed53:	add    eax,0xfcd37830
  40ed58:	leave  
  40ed59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5a:	mov    cl,bl
  40ed5c:	sahf   
  40ed5d:	imul   edx,DWORD PTR [ebx],0x58a8525f
  40ed63:	addr16 (bad) 
  40ed65:	cs in  eax,0xb7
  40ed68:	dec    esp
  40ed69:	inc    esp
  40ed6a:	shr    BYTE PTR [edx+edi*1],cl
  40ed6d:	xchg   DWORD PTR [ebp-0x1d],ebx
  40ed70:	mov    ch,0xba
  40ed72:	and    ch,dl
  40ed74:	mov    DWORD PTR [ecx],ebp
  40ed76:	xchg   DWORD PTR [ebx-0x7e967984],esi
  40ed7c:	add    ebx,DWORD PTR [ebx-0x71]
  40ed7f:	push   esp
  40ed80:	inc    edi
  40ed81:	or     dh,ch
  40ed83:	push   cs
  40ed84:	adc    eax,0x60a6c8d9
  40ed89:	push   esp
  40ed8a:	and    edi,DWORD PTR [edx-0x76cf2049]
  40ed90:	rol    dh,cl
  40ed92:	dec    esp
  40ed93:	sbb    DWORD PTR [eax-0x22b84e51],ebp
  40ed99:	ja     0x40ee1a
  40ed9b:	pop    edi
  40ed9c:	sub    ebp,DWORD PTR [edx]
  40ed9e:	add    cl,bh
  40eda0:	je     0x40edfb
  40eda2:	mov    al,ds:0xf8f457f2
  40eda7:	imul   ebx,DWORD PTR [edi-0x574c2dcf],0x28842bac
  40edb1:	ret    0x651c
  40edb4:	adc    edi,DWORD PTR [edx]
  40edb6:	cmp    edx,DWORD PTR [ecx+0x79f50e27]
  40edbc:	ds pop ecx
  40edbe:	(bad)  
  40edbf:	mov    ebx,DWORD PTR [esi-0x58]
  40edc2:	cmp    ah,BYTE PTR [bx-0x5c]
  40edc6:	ins    DWORD PTR es:[edi],dx
  40edc7:	mov    eax,ds:0xa34af663
  40edcc:	(bad)  
  40edce:	or     cl,al
  40edd0:	scas   al,BYTE PTR es:[edi]
  40edd1:	into   
  40edd2:	dec    edi
  40edd3:	jnp    0x40edf7
  40edd5:	ja     0x40ee11
  40edd7:	jge    0x40edbc
  40edd9:	(bad)  
  40edda:	adc    esp,DWORD PTR [esi-0x1d]
  40eddd:	and    edi,edi
  40eddf:	imul   ecx,DWORD PTR [ebp-0x9],0xf91c60c2
  40ede6:	adc    DWORD PTR [ecx+0x142d487b],ebx
  40edec:	pop    eax
  40eded:	sub    ebp,DWORD PTR [ecx-0x20]
  40edf0:	pop    ecx
  40edf1:	xor    DWORD PTR [esi],0xb
  40edf4:	(bad)  
  40edf5:	loopne 0x40edd7
  40edf7:	jl     0x40ed9a
  40edf9:	ds jle 0x40ee07
  40edfc:	xlat   BYTE PTR es:[ebx]
  40edfe:	dec    esi
  40edff:	sbb    esi,ebx
  40ee01:	xchg   ecx,eax
  40ee02:	int3   
  40ee03:	pop    eax
  40ee04:	add    edx,DWORD PTR [ebx+0x3e]
  40ee07:	sbb    eax,0xe6360589
  40ee0c:	inc    ecx
  40ee0d:	rcr    BYTE PTR gs:[edi+0x77],0xcd
  40ee12:	(bad)  
  40ee13:	pusha  
  40ee14:	fdivr  st(5),st
  40ee16:	or     ecx,ebp
  40ee18:	mov    al,0xb2
  40ee1a:	fisubr WORD PTR [edi+0xb15ed66]
  40ee20:	nop
  40ee21:	add    al,0x86
  40ee23:	jo     0x40ee65
  40ee25:	test   eax,0x5186aded
  40ee2a:	sbb    eax,0x266cca50
  40ee2f:	sbb    BYTE PTR [eax],bl
  40ee31:	add    bh,BYTE PTR [edi-0x47ff9d07]
  40ee37:	push   0x67
  40ee39:	lahf   
  40ee3a:	sub    dl,BYTE PTR [esi-0x45a23c0]
  40ee40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee41:	int3   
  40ee42:	shr    bh,0xd7
  40ee45:	add    al,BYTE PTR [edx]
  40ee47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee48:	inc    esi
  40ee49:	inc    ebp
  40ee4a:	ss sahf 
  40ee4c:	inc    edi
  40ee4d:	or     bh,dl
  40ee4f:	add    cl,cl
  40ee51:	jl     0x40edd3
  40ee53:	test   DWORD PTR [ebx],edi
  40ee55:	jecxz  0x40ee44
  40ee57:	lds    ebx,FWORD PTR [ebp-0x56]
  40ee5a:	rol    BYTE PTR [ebx+esi*8],cl
  40ee5d:	bound  esi,QWORD PTR [ebx+0x111ee331]
  40ee63:	stc    
  40ee64:	jecxz  0x40eedb
  40ee66:	pop    ds
  40ee67:	pop    DWORD PTR [ebp+ebp*4-0x64419a89]
  40ee6e:	sbb    al,0x72
  40ee70:	dec    eax
  40ee71:	fst    QWORD PTR [edi]
  40ee73:	(bad)  
  40ee74:	in     eax,0xed
  40ee76:	std    
  40ee77:	pop    ds
  40ee78:	rcl    DWORD PTR [esi],0xa3
  40ee7b:	mov    bl,0xe7
  40ee7d:	imul   edx,DWORD PTR ds:0xa6d6d956,0x14
  40ee84:	(bad)  
  40ee85:	jle    0x40ee53
  40ee87:	scas   eax,DWORD PTR es:[edi]
  40ee88:	outs   dx,BYTE PTR ds:[esi]
  40ee89:	xchg   edi,eax
  40ee8a:	mov    dl,0x3
  40ee8c:	in     eax,dx
  40ee8d:	jno    0x40eedb
  40ee8f:	sbb    BYTE PTR [esi-0x1caa42c1],bh
  40ee95:	scas   eax,DWORD PTR es:[edi]
  40ee96:	dec    esi
  40ee97:	sub    esp,esi
  40ee99:	lods   al,BYTE PTR ds:[esi]
  40ee9a:	(bad)  
  40ee9b:	or     eax,0xb27e95e9
  40eea0:	jmp    0xdc7e:0x2c93380
  40eea7:	sub    ebp,eax
  40eea9:	pop    eax
  40eeaa:	loopne 0x40ee4e
  40eeac:	xchg   DWORD PTR [ecx],ebx
  40eeae:	test   al,0x28
  40eeb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb1:	adc    eax,0x3e000358
  40eeb6:	cmp    ah,BYTE PTR [ecx]
  40eeb8:	call   0xa4ac:0xa8684376
  40eebf:	sub    esp,ebp
  40eec1:	or     ebp,DWORD PTR [ebx]
  40eec3:	mov    esp,0xfb080dfb
  40eec8:	loope  0x40ee4c
  40eeca:	mov    esi,0x761d3841
  40eecf:	ins    DWORD PTR es:[edi],dx
  40eed0:	fs call 0xffc7402d
  40eed6:	xlat   BYTE PTR ds:[ebx]
  40eed7:	pop    ss
  40eed8:	mov    bl,0x6b
  40eeda:	xor    al,0x6f
  40eedc:	push   ecx
  40eedd:	xchg   ebp,eax
  40eede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eedf:	add    eax,0xafe83502
  40eee4:	loop   0x40ef65
  40eee6:	clc    
  40eee7:	int    0x20
  40eee9:	dec    edi
  40eeea:	shl    BYTE PTR [ecx+0xa],1
  40eeed:	xchg   esp,eax
  40eeee:	mov    cl,0xd6
  40eef0:	hlt    
  40eef1:	rcl    BYTE PTR [edx],cl
  40eef3:	and    eax,0xfb58c1e1
  40eef8:	lods   al,BYTE PTR ds:[esi]
  40eef9:	pop    ss
  40eefa:	pop    ebx
  40eefb:	xlat   BYTE PTR ds:[ebx]
  40eefc:	ret    
  40eefd:	jno    0x40ef00
  40eeff:	mov    edi,0x78c2d782
  40ef04:	add    DWORD PTR [eax-0x576aad80],edx
  40ef0a:	scas   al,BYTE PTR es:[edi]
  40ef0b:	jbe    0x40ef08
  40ef0d:	and    al,0xf3
  40ef0f:	into   
  40ef10:	loope  0x40ef77
  40ef12:	adc    BYTE PTR [edi],al
  40ef14:	push   edx
  40ef15:	(bad)  
  40ef16:	fisub  WORD PTR [ebx-0x1892548d]
  40ef1c:	mov    cl,0xca
  40ef1e:	lock mov esi,0x3cfc4f3b
  40ef24:	cld    
  40ef25:	dec    esp
  40ef26:	sbb    BYTE PTR [edx+0x5e],al
  40ef29:	xor    edi,DWORD PTR [esi+eax*8+0xff13059]
  40ef30:	xchg   ebx,eax
  40ef31:	sahf   
  40ef32:	fstp   QWORD PTR [edi]
  40ef34:	je     0x40ef97
  40ef36:	sbb    cl,bl
  40ef38:	or     esi,esp
  40ef3a:	cdq    
  40ef3b:	ss repz mov edi,0x90173b27
  40ef42:	and    eax,0x1df95a30
  40ef47:	dec    eax
  40ef48:	std    
  40ef49:	jo     0x40eef1
  40ef4b:	pop    ecx
  40ef4c:	mov    ebx,0x1dd82aef
  40ef51:	cli    
  40ef52:	jp     0x40ef3e
  40ef54:	ins    DWORD PTR es:[edi],dx
  40ef55:	push   edx
  40ef56:	cmp    eax,0xd56e5a6c
  40ef5b:	mov    eax,ds:0x4388ad8a
  40ef60:	repnz mov eax,ds:0x559ba145
  40ef66:	pusha  
  40ef67:	fcomp  QWORD PTR [esi+0x5]
  40ef6a:	add    ebp,eax
  40ef6c:	adc    DWORD PTR [eax],0x7f
  40ef6f:	fbld   TBYTE PTR [ebp+0x409b892f]
  40ef75:	loope  0x40ef24
  40ef77:	fdivr  QWORD PTR [esi]
  40ef79:	sbb    al,0x5a
  40ef7b:	dec    ebp
  40ef7c:	push   ss
  40ef7d:	sar    BYTE PTR [edi+0x30],cl
  40ef80:	shl    DWORD PTR [eax-0x424f108a],1
  40ef86:	aad    0xd1
  40ef88:	lock push eax
  40ef8a:	ret    0xd77d
  40ef8d:	std    
  40ef8e:	jne    0x40ef30
  40ef90:	dec    ecx
  40ef91:	ror    BYTE PTR [ebx],0xb7
  40ef94:	push   edi
  40ef95:	(bad)  
  40ef97:	mov    dh,BYTE PTR [esi]
  40ef99:	jns    0x40efd5
  40ef9b:	mov    edi,0x8255fc5
  40efa0:	scas   eax,DWORD PTR es:[edi]
  40efa1:	xchg   ebx,eax
  40efa2:	pshufw mm0,QWORD PTR [eax+0x8],0xbe
  40efa7:	and    al,0xbf
  40efa9:	and    al,0x26
  40efab:	cwde   
  40efac:	adc    DWORD PTR [edx+0x68b6978b],0xaea40b99
  40efb6:	loope  0x40ef6b
  40efb8:	pop    esp
  40efb9:	push   ds
  40efba:	jg     0x40ef60
  40efbc:	xchg   edx,eax
  40efbd:	mov    DWORD PTR [edi+0x53],eax
  40efc0:	rcr    DWORD PTR [edi],cl
  40efc2:	aas    
  40efc3:	mov    ds:0x9ab346df,al
  40efc8:	adc    eax,0x2483bf2c
  40efcd:	cwde   
  40efce:	mov    esi,0xa290ecb7
  40efd3:	gs dec ebp
  40efd5:	jmp    0x467b:0xe56f056d
  40efdc:	cmp    al,bl
  40efde:	lods   eax,DWORD PTR ds:[esi]
  40efdf:	xchg   edx,eax
  40efe0:	arpl   WORD PTR [esi+0x47],ax
  40efe3:	and    DWORD PTR [esi+0x77],edi
  40efe6:	push   ecx
  40efe7:	adc    DWORD PTR [edx-0x207c961c],ecx
  40efed:	xchg   edx,eax
  40efee:	sti    
  40efef:	and    BYTE PTR [ebp+ecx*4+0x15],dh
  40eff3:	nop
  40eff4:	jmp    0x923e:0x1c2f8bbd
  40effb:	jo     0x40f06f
  40effd:	imul   eax,eax,0xa5b7697
  40f003:	xchg   ecx,eax
  40f004:	mov    edi,ss
  40f006:	dec    eax
  40f007:	and    esp,DWORD PTR [ecx]
  40f009:	dec    esi
  40f00a:	sub    bh,BYTE PTR [ebx+0x387d0e3a]
  40f010:	add    bh,BYTE PTR [edi]
  40f012:	pop    ebx
  40f013:	sbb    eax,0xec479c41
  40f018:	add    eax,0x42b7cd02
  40f01d:	leave  
  40f01e:	push   0x3a8034bb
  40f023:	in     al,0x96
  40f025:	inc    esp
  40f026:	mov    ah,0x99
  40f028:	jge    0x40efb5
  40f02a:	(bad)  
  40f02b:	ficom  WORD PTR [ecx]
  40f02d:	(bad)  
  40f02e:	jecxz  0x40f068
  40f030:	sbb    bh,BYTE PTR [ecx]
  40f032:	adc    BYTE PTR [esi-0x1e],ah
  40f035:	dec    esp
  40f036:	lds    esp,FWORD PTR [esi+0x46]
  40f039:	sahf   
  40f03a:	pop    ebp
  40f03b:	mov    edx,0xe742b76d
  40f040:	ret    
  40f041:	pop    ebp
  40f042:	lds    esi,FWORD PTR [ebp+0x2f]
  40f045:	xchg   edx,eax
  40f046:	pop    ecx
  40f047:	mov    eax,0x3acd4f14
  40f04c:	sub    al,0x7c
  40f04e:	lods   eax,DWORD PTR ds:[esi]
  40f04f:	push   edx
  40f050:	ss ror ch,cl
  40f053:	inc    edi
  40f054:	cmp    DWORD PTR ds:0xf9623d5c,ecx
  40f05a:	into   
  40f05b:	(bad)  
  40f05c:	iret   
  40f05d:	(bad)  
  40f05e:	lds    esp,FWORD PTR [eax+0x4fec8cfb]
  40f064:	sahf   
  40f065:	mov    bh,BYTE PTR [eax+0x3dda7c16]
  40f06b:	and    ebx,0xffffff9b
  40f06e:	or     ecx,DWORD PTR [ecx+edx*1+0x18]
  40f072:	pop    ecx
  40f073:	sbb    al,BYTE PTR [eax]
  40f075:	in     al,0x2f
  40f077:	aam    0x83
  40f079:	in     al,0x35
  40f07b:	pushf  
  40f07c:	push   es
  40f07d:	std    
  40f07e:	push   ecx
  40f07f:	or     DWORD PTR [edx+ebx*8-0x39693b1],0x7c
  40f087:	test   DWORD PTR [ebx-0x2d250106],edx
  40f08d:	and    ebx,DWORD PTR [ecx]
  40f08f:	mov    al,ds:0x12ea7eab
  40f094:	cdq    
  40f095:	push   esp
  40f096:	sub    BYTE PTR [edi+0x74],0x6d
  40f09a:	fnstenv ds:0x455d7f47
  40f0a0:	xchg   edi,eax
  40f0a1:	jnp    0x40f118
  40f0a3:	rcr    eax,0xd1
  40f0a6:	mov    bl,bh
  40f0a8:	std    
  40f0a9:	xchg   ecx,eax
  40f0aa:	pop    ecx
  40f0ab:	mov    edx,0x99332abe
  40f0b0:	das    
  40f0b1:	bound  ebp,QWORD PTR [eax]
  40f0b3:	lock add al,0x77
  40f0b6:	ds into 
  40f0b8:	inc    edx
  40f0b9:	jg     0x40f08f
  40f0bb:	cmp    BYTE PTR [ebx-0x3c],0x62
  40f0bf:	inc    esp
  40f0c0:	dec    esp
  40f0c1:	mov    cl,0x91
  40f0c3:	jge    0x40f0ce
  40f0c5:	cwde   
  40f0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c7:	add    eax,0xad177ca6
  40f0cc:	loopne 0x40f06c
  40f0ce:	test   esi,0xd94433a2
  40f0d4:	lods   al,BYTE PTR ds:[esi]
  40f0d5:	jmp    0x9e97b57f
  40f0da:	jo     0x40f119
  40f0dc:	scas   eax,DWORD PTR es:[edi]
  40f0dd:	adc    BYTE PTR [esi-0x3bca5ca6],al
  40f0e3:	mov    ah,0x43
  40f0e5:	jnp    0x40f10c
  40f0e7:	cli    
  40f0e8:	adc    DWORD PTR ds:0xc4366946,ebx
  40f0ee:	scas   eax,DWORD PTR es:[edi]
  40f0ef:	add    al,0xf
  40f0f1:	mov    dh,0x7f
  40f0f3:	and    ebp,eax
  40f0f5:	sar    ch,1
  40f0f7:	or     ecx,0xc772ade
  40f0fd:	jno    0x40f160
  40f0ff:	imul   edi,DWORD PTR [edx+ecx*2],0xfffffffb
  40f103:	gs iret 
  40f105:	pop    edi
  40f106:	dec    ebx
  40f107:	imul   ebp,DWORD PTR [ecx-0x39],0xe2f55f3c
  40f10e:	jns    0x40f0fd
  40f110:	repz sti 
  40f112:	(bad)  
  40f113:	jmp    0x6682:0xe376eaf1
  40f11a:	sbb    DWORD PTR [ebx],ebp
  40f11c:	fiadd  WORD PTR [edx]
  40f11e:	pusha  
  40f11f:	pop    ds
  40f120:	enter  0xd761,0xa
  40f124:	xchg   edx,eax
  40f125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f126:	inc    eax
  40f127:	push   es
  40f128:	in     al,0xbe
  40f12a:	retf   0xb1c4
  40f12d:	test   eax,0x36dba345
  40f132:	inc    eax
  40f133:	repz push esi
  40f135:	cdq    
  40f136:	ja     0x40f10e
  40f138:	jp     0x40f11b
  40f13a:	push   esp
  40f13b:	add    BYTE PTR [ebp+0x27],dl
  40f13e:	loope  0x40f16b
  40f140:	popaw  
  40f142:	loope  0x40f128
  40f144:	hlt    
  40f145:	mov    esp,?
  40f147:	xor    esp,esi
  40f149:	mov    ds:0xe1f8d12,al
  40f14e:	jmp    0x40f1c7
  40f150:	dec    esp
  40f151:	mov    edx,0xb7afce80
  40f156:	sub    eax,0xa31a1100
  40f15b:	push   ds
  40f15c:	xor    BYTE PTR [ecx-0x67],ah
  40f15f:	enter  0x30cc,0x95
  40f163:	out    dx,al
  40f164:	cdq    
  40f165:	mov    BYTE PTR [ecx],bl
  40f167:	ficom  WORD PTR [esi+0x1e4e7a79]
  40f16d:	call   0x6ee4baf9
  40f172:	inc    edi
  40f173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f174:	(bad)  
  40f175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f176:	and    eax,DWORD PTR [eax+0x61aee74]
  40f17c:	mov    bh,0xd1
  40f17e:	jb     0x40f1f7
  40f180:	jne    0x40f13a
  40f182:	arpl   si,cx
  40f184:	aam    0xe0
  40f186:	xchg   esi,eax
  40f187:	jo     0x40f131
  40f189:	mov    ss,eax
  40f18b:	jo     0x40f110
  40f18d:	jmp    0xcd370aa8
  40f192:	xchg   esp,eax
  40f193:	adc    eax,0xd71dabe9
  40f198:	ret    0x2747
  40f19b:	xor    eax,0x7e9eb437
  40f1a0:	xor    ebp,DWORD PTR [ecx-0x67]
  40f1a3:	mov    ah,0x9d
  40f1a5:	stos   BYTE PTR es:[edi],al
  40f1a6:	xor    eax,0xb8ccd357
  40f1ab:	add    esi,DWORD PTR [eax-0x31ab50e8]
  40f1b1:	dec    esi
  40f1b2:	shl    DWORD PTR ds:0xf10e86e3,0xc5
  40f1b9:	dec    ebx
  40f1ba:	icebp  
  40f1bb:	into   
  40f1bc:	in     eax,0x3a
  40f1be:	adc    BYTE PTR [edi-0x14aa5ed5],ah
  40f1c4:	mov    bh,0x45
  40f1c6:	ret    
  40f1c7:	or     al,0x99
  40f1c9:	inc    edx
  40f1ca:	dec    esi
  40f1cb:	retf   
  40f1cc:	stos   BYTE PTR es:[edi],al
  40f1cd:	sub    BYTE PTR [edi+0x3f],cl
  40f1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d1:	xchg   edi,eax
  40f1d2:	mov    bl,0x64
  40f1d4:	and    bh,BYTE PTR [edi]
  40f1d6:	cld    
  40f1d7:	mov    cl,0xd
  40f1d9:	mov    bh,0xff
  40f1db:	enter  0xe19f,0x47
  40f1df:	hlt    
  40f1e0:	sahf   
  40f1e1:	vorps  ymm1,ymm4,YMMWORD PTR fs:[esi-0x44]
  40f1e7:	js     0x40f187
  40f1e9:	fsub   QWORD PTR [eax+0x56b5a20c]
  40f1ef:	mov    cl,0x76
  40f1f1:	fdiv   QWORD PTR [ebp*2-0x7a7e8646]
  40f1f8:	push   ecx
  40f1f9:	add    esi,DWORD PTR [eax-0xf]
  40f1fc:	mov    dl,0x30
  40f1fe:	retf   0xa571
  40f201:	xchg   DWORD PTR [ebp-0x42af7658],ecx
  40f207:	sub    BYTE PTR [ebx+0x0],dh
  40f20a:	not    DWORD PTR [edx+ebp*1-0x17]
  40f20e:	cmp    al,0x6e
  40f210:	push   esp
  40f211:	adc    ebp,DWORD PTR [edi+0x5b]
  40f214:	dec    ebx
  40f215:	xchg   esp,eax
  40f216:	cmp    BYTE PTR [edi],cl
  40f218:	mov    WORD PTR [edx+0x64],ds
  40f21b:	lahf   
  40f21c:	jb     0x40f206
  40f21e:	sub    BYTE PTR [ebp-0x7571aca3],dl
  40f224:	jg     0x40f1ab
  40f226:	aas    
  40f227:	jmp    0x40f292
  40f229:	test   eax,0xd06b6a32
  40f22e:	jbe    0x40f1cd
  40f230:	rcr    eax,cl
  40f232:	std    
  40f233:	popa   
  40f234:	mov    eax,0x80b74372
  40f239:	push   ss
  40f23a:	jl     0x40f230
  40f23c:	push   ecx
  40f23d:	sub    eax,0x89247009
  40f242:	mov    cl,0x5c
  40f244:	dec    ebp
  40f245:	and    BYTE PTR [edx+0x5599929a],cl
  40f24b:	cli    
  40f24c:	or     DWORD PTR [ecx],ebx
  40f24e:	sub    al,0x82
  40f250:	xchg   DWORD PTR [edx-0xf],esi
  40f253:	and    DWORD PTR [ecx-0x6bec200c],0xda89f9b6
  40f25d:	scas   eax,DWORD PTR es:[edi]
  40f25e:	out    0xef,eax
  40f260:	add    BYTE PTR [ebx-0x796b7825],al
  40f266:	cmp    al,0xf5
  40f268:	xchg   esi,eax
  40f269:	mov    WORD PTR ds:0x909bb68b,ss
  40f26f:	inc    BYTE PTR [edx+0x57]
  40f272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f273:	les    edx,FWORD PTR [eax-0x66d8c423]
  40f279:	mov    esp,0x4b831f51
  40f27e:	repnz xlat BYTE PTR ds:[ebx]
  40f280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f281:	aam    0x71
  40f283:	mov    al,ds:0x1427f773
  40f289:	popa   
  40f28a:	sbb    al,0x47
  40f28c:	xor    eax,0xd2dbd30f
  40f291:	loop   0x40f25c
  40f293:	mov    bh,0x35
  40f295:	xchg   ecx,eax
  40f296:	mov    eax,ds:0x85d19e41
  40f29b:	setle  BYTE PTR [ebx+0x5b123a5b]
  40f2a2:	scas   eax,DWORD PTR es:[edi]
  40f2a3:	out    dx,eax
  40f2a4:	mov    ecx,0xf8067336
  40f2a9:	and    edi,ecx
  40f2ab:	pop    eax
  40f2ac:	pop    ds
  40f2ad:	push   0x66
  40f2af:	ror    DWORD PTR [ecx+edx*2-0x48b4a92f],1
  40f2b6:	icebp  
  40f2b7:	cmp    DWORD PTR [edi+0x7b781bb2],ebx
  40f2bd:	adc    al,0x26
  40f2bf:	xchg   ecx,eax
  40f2c0:	popf   
  40f2c1:	push   esi
  40f2c2:	push   ds
  40f2c3:	mul    BYTE PTR [ecx+0x15fda356]
  40f2c9:	out    0xaa,eax
  40f2cb:	mov    esi,0xb1c1d797
  40f2d0:	dec    ebp
  40f2d1:	push   cs
  40f2d2:	mov    cl,0x67
  40f2d4:	popf   
  40f2d5:	loopne 0x40f2e0
  40f2d7:	fstp   TBYTE PTR [eax+0x7fe47c8f]
  40f2dd:	jecxz  0x40f306
  40f2df:	js     0x40f359
  40f2e1:	cmc    
  40f2e2:	inc    edx
  40f2e3:	and    al,ch
  40f2e5:	in     al,dx
  40f2e6:	bound  ecx,QWORD PTR [ecx+0x285b383e]
  40f2ec:	push   cs
  40f2ed:	test   eax,0xb0c96bb6
  40f2f2:	xchg   edi,eax
  40f2f3:	out    0xac,al
  40f2f5:	or     eax,0x2ce428fd
  40f2fa:	int    0xa7
  40f2fc:	cmp    DWORD PTR [ecx-0x301634ba],esi
  40f302:	adc    al,al
  40f304:	pop    es
  40f305:	dec    ecx
  40f306:	(bad)  
  40f308:	pop    eax
  40f309:	pop    esi
  40f30a:	jo     0x40f2f8
  40f30c:	jbe    0x40f2e5
  40f30e:	frstor [eax+0x2aa2e7a0]
  40f314:	dec    esp
  40f315:	clc    
  40f316:	pop    ebx
  40f317:	clc    
  40f318:	arpl   WORD PTR [edx],cx
  40f31a:	pop    edx
  40f31b:	sbb    bh,BYTE PTR [edi+0x5d143b07]
  40f321:	jmp    0x40f2a5
  40f323:	dec    ecx
  40f324:	mov    eax,0x36173753
  40f329:	jmp    0x40f315
  40f32b:	in     eax,0xb7
  40f32d:	iret   
  40f32e:	jo     0x40f308
  40f330:	xchg   ebx,eax
  40f331:	int    0x8e
  40f333:	les    esi,FWORD PTR [edx]
  40f335:	dec    ebx
  40f336:	jp     0x40f2cb
  40f338:	(bad)  ds:0xb4746e2e
  40f33e:	gs das 
  40f340:	cmp    DWORD PTR [ebx],esi
  40f342:	sub    BYTE PTR [edi+0x28],al
  40f345:	add    al,0xfc
  40f347:	(bad)  
  40f348:	fstp   QWORD PTR [ebx-0x80]
  40f34b:	push   ds
  40f34c:	cwde   
  40f34d:	push   ecx
  40f34e:	xlat   BYTE PTR ds:[ebx]
  40f34f:	imul   edx,DWORD PTR [ecx],0x8348a4ae
  40f355:	outs   dx,DWORD PTR ds:[esi]
  40f356:	pop    ds
  40f357:	pop    ecx
  40f358:	push   esi
  40f359:	mov    cs,WORD PTR [ebx+0x61]
  40f35c:	fldenv [esi+0x3382258b]
  40f362:	rcr    BYTE PTR [edx+0x51],1
  40f365:	jle    0x40f349
  40f367:	dec    ebx
  40f368:	sti    
  40f369:	sub    eax,0xa22b8bb0
  40f36e:	mov    al,0x1e
  40f370:	ret    
  40f371:	test   DWORD PTR [ebp+0x1cab7845],ebp
  40f377:	add    eax,0x1d73f421
  40f37c:	and    ecx,DWORD PTR [ecx-0x182173c0]
  40f382:	pop    ss
  40f383:	xor    esi,DWORD PTR [eax]
  40f385:	into   
  40f386:	out    0x65,al
  40f388:	sub    ch,BYTE PTR [ecx+0x7c]
  40f38b:	jge    0x40f3a6
  40f38d:	mov    ebp,0x54016a87
  40f392:	(bad)  
  40f393:	fdiv   st,st(7)
  40f395:	inc    ebp
  40f396:	mov    ds:0x7c65f7e,eax
  40f39b:	mov    WORD PTR [esi+ebx*1],fs
  40f39e:	fs jecxz 0x40f3b7
  40f3a1:	mov    bl,0xf1
  40f3a3:	ret    0xf11a
  40f3a6:	and    ebp,DWORD PTR [ecx-0x12]
  40f3a9:	xchg   ebx,eax
  40f3aa:	jae    0x40f428
  40f3ac:	data16 std 
  40f3ae:	test   al,0xb3
  40f3b0:	dec    esi
  40f3b1:	push   cs
  40f3b2:	ins    BYTE PTR es:[edi],dx
  40f3b3:	jmp    0x86745bad
  40f3b8:	out    0x28,eax
  40f3ba:	adc    al,dl
  40f3bc:	lods   eax,DWORD PTR ds:[esi]
  40f3bd:	push   esp
  40f3be:	fist   DWORD PTR [ecx-0x2f73397e]
  40f3c4:	in     eax,dx
  40f3c5:	mov    ebx,0xd21be0c8
  40f3ca:	dec    edi
  40f3cb:	jae    0x40f410
  40f3cd:	inc    edx
  40f3ce:	aam    0x84
  40f3d0:	mov    WORD PTR [edx-0x20],ss
  40f3d3:	repnz int 0x6d
  40f3d6:	jns    0x40f3a1
  40f3d8:	xchg   ebx,eax
  40f3d9:	aas    
  40f3da:	mov    al,ds:0x6e909562
  40f3df:	add    al,0x23
  40f3e1:	mov    al,0x96
  40f3e3:	jne    0x40f381
  40f3e5:	mov    eax,ds:0xbaa4c09b
  40f3ea:	sub    eax,0x118d4569
  40f3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f0:	cmp    BYTE PTR [ebp+0x5979efbd],dh
  40f3f6:	or     cl,BYTE PTR [edi-0x36]
  40f3f9:	pushf  
  40f3fa:	xchg   ax,ax
  40f3fc:	dec    ebp
  40f3fd:	sub    BYTE PTR ds:0xa81f5b81,bh
  40f403:	pop    es
  40f404:	add    al,0x91
  40f406:	push   ebx
  40f407:	rcl    BYTE PTR [eax-0x66cd06a3],cl
  40f40d:	mov    edi,0x9c48ed35
  40f412:	clc    
  40f413:	(bad)  
  40f414:	adc    al,0xc3
  40f416:	ja     0x40f430
  40f418:	ret    
  40f419:	pop    ebx
  40f41a:	call   0xbc8:0x2e40b4d4
  40f421:	or     bh,al
  40f423:	add    DWORD PTR [edi+0x6431d789],edx
  40f429:	loop   0x40f44f
  40f42b:	loope  0x40f3df
  40f42d:	sub    cl,BYTE PTR ds:0xbd4ba0ad
  40f433:	xchg   ebx,eax
  40f434:	jb     0x40f3e1
  40f436:	mov    dl,ah
  40f438:	push   ecx
  40f439:	fsubr  st,st(2)
  40f43b:	es aad 0xe9
  40f43e:	jmp    0xb6e7:0x12fa0dbc
  40f445:	(bad)  
  40f446:	push   ss
  40f447:	xchg   edx,eax
  40f448:	jnp    0x40f3de
  40f44a:	pushf  
  40f44b:	aaa    
  40f44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f44d:	push   ebx
  40f44e:	or     DWORD PTR [ebx-0x41],eax
  40f451:	shr    BYTE PTR [eax+edx*2+0xbbd974f],0xf1
  40f459:	cmp    esp,esp
  40f45b:	sti    
  40f45c:	xor    ecx,DWORD PTR [ebp+0x34]
  40f45f:	loope  0x40f46a
  40f461:	(bad)  
  40f463:	mov    ds,WORD PTR [esi+ebp*1]
  40f466:	jb     0x40f4c4
  40f468:	mov    esp,gs
  40f46a:	repz pop eax
  40f46c:	sbb    BYTE PTR [edi-0x16],0xf2
  40f470:	loop   0x40f460
  40f472:	iret   
  40f473:	adc    DWORD PTR [ecx],eax
  40f475:	fisttp WORD PTR [edi+0x56dd6cdd]
  40f47b:	out    0x11,al
  40f47d:	or     dh,BYTE PTR [esi-0x2e0340]
  40f483:	mov    cl,BYTE PTR [eax-0x77f4f9df]
  40f489:	push   eax
  40f48a:	leave  
  40f48b:	xor    al,0x58
  40f48d:	sbb    al,0xec
  40f48f:	call   DWORD PTR [ecx]
  40f491:	stc    
  40f492:	cmc    
  40f493:	push   cs
  40f494:	mov    edi,0x4f8c7338
  40f499:	cmp    cl,bh
  40f49b:	xor    al,0x21
  40f49d:	xchg   esp,eax
  40f49e:	lods   eax,DWORD PTR ds:[esi]
  40f49f:	(bad)  [edx]
  40f4a1:	aam    0x36
  40f4a3:	stos   BYTE PTR es:[edi],al
  40f4a4:	mov    BYTE PTR [edi+0x25],dl
  40f4a7:	mov    ?,WORD PTR [ecx-0x7b04da1d]
  40f4ad:	mov    ch,0x91
  40f4af:	dec    ebx
  40f4b0:	fwait
  40f4b1:	ds add eax,0x87824102
  40f4b7:	lock push edx
  40f4b9:	push   ecx
  40f4ba:	xchg   edi,eax
  40f4bb:	das    
  40f4bc:	mov    bh,0x32
  40f4be:	(bad)  
  40f4bf:	mov    edi,0x595f0641
  40f4c4:	mov    al,0xf3
  40f4c6:	fidivr DWORD PTR [edi+0x2d27c5c9]
  40f4cc:	xlat   BYTE PTR ds:[ebx]
  40f4cd:	jne    0x40f4fe
  40f4cf:	pop    eax
  40f4d0:	fist   WORD PTR [ebp+0x1498e7d2]
  40f4d6:	add    al,BYTE PTR [ebp-0x2269be50]
  40f4dc:	shr    ch,1
  40f4de:	jmpw   0x41f9
  40f4e2:	ins    DWORD PTR es:[edi],dx
  40f4e3:	mov    bl,0x34
  40f4e5:	sti    
  40f4e6:	xchg   bl,ch
  40f4e8:	add    BYTE PTR [ebp-0x35],ch
  40f4eb:	jns    0x40f4d7
  40f4ed:	mov    DWORD PTR [esi-0x6f27ce68],ecx
  40f4f3:	xor    ebp,edi
  40f4f5:	fnsave [edx+0x7e104611]
  40f4fb:	sub    esi,DWORD PTR [esi]
  40f4fd:	jle    0x40f567
  40f4ff:	ret    
  40f500:	icebp  
  40f501:	xor    dl,cl
  40f503:	sbb    eax,0x84d57ca5
  40f508:	leave  
  40f509:	jle    0x40f549
  40f50b:	test   bh,cl
  40f50d:	xor    DWORD PTR [ebp+0x19],ecx
  40f510:	out    dx,al
  40f511:	or     ch,BYTE PTR [eax]
  40f513:	mov    esi,0xdba3783e
  40f518:	hlt    
  40f519:	dec    eax
  40f51a:	ja     0x40f526
  40f51c:	cld    
  40f51d:	scas   eax,DWORD PTR es:[edi]
  40f51e:	pop    eax
  40f51f:	shr    DWORD PTR [ecx+0x1173bd48],1
  40f525:	popfw  
  40f527:	arpl   WORD PTR [eax-0x35a03098],di
  40f52d:	push   esp
  40f52e:	dec    ebp
  40f52f:	sub    esi,edx
  40f531:	cwde   
  40f532:	cmp    al,0xa6
  40f534:	call   0xbdf019ff
  40f539:	(bad)  
  40f53a:	nop
  40f53b:	fisttp DWORD PTR ds:0x8cf7a015
  40f541:	div    BYTE PTR [edx+0x1d]
  40f544:	in     eax,dx
  40f545:	xchg   bh,dh
  40f547:	int    0xfa
  40f549:	test   DWORD PTR [eax],ecx
  40f54b:	xchg   edx,eax
  40f54c:	jmp    0xc21741a7
  40f551:	sub    al,0x15
  40f553:	pop    edi
  40f554:	sbb    al,BYTE PTR ss:[edx+eiz*4+0x79]
  40f559:	repnz and eax,0x6c8f5334
  40f55f:	pop    ebx
  40f560:	jecxz  0x40f4fe
  40f562:	mov    ah,0x28
  40f564:	out    0x78,eax
  40f566:	out    0x26,al
  40f568:	mov    DWORD PTR [bp+di-0x2d],eax
  40f56c:	(bad)  [eax-0xffa10c9]
  40f572:	mov    esi,0x31cf0cc1
  40f577:	je     0x40f515
  40f579:	sub    al,0xf8
  40f57b:	es jb  0x40f58c
  40f57e:	or     ecx,esi
  40f580:	mov    ch,0x2
  40f582:	jl     0x40f574
  40f584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f585:	fnstenv [eax+0x45981741]
  40f58b:	push   0x74
  40f58d:	cmc    
  40f58e:	fisub  WORD PTR [ebp+0x6289c009]
  40f594:	jmp    0xf1b250b5
  40f599:	cwde   
  40f59a:	push   cs
  40f59b:	retf   
  40f59c:	lods   al,BYTE PTR ds:[esi]
  40f59d:	(bad)
  40f5a0:	sub    ebp,DWORD PTR [eax+0x1c48afa9]
  40f5a6:	int3   
  40f5a7:	sbb    al,0xe6
  40f5a9:	mov    esi,0x46c90459
  40f5ae:	mov    eax,es:0x990a3c8d
  40f5b4:	ror    BYTE PTR [ecx-0x7b2ab9fa],0xba
  40f5bb:	mov    ch,0x41
  40f5bd:	pushf  
  40f5be:	in     al,0xb0
  40f5c0:	inc    eax
  40f5c1:	in     eax,0xaf
  40f5c3:	inc    esi
  40f5c4:	sahf   
  40f5c5:	popf   
  40f5c6:	fst    st(5)
  40f5c8:	into   
  40f5c9:	pop    es
  40f5ca:	sbb    DWORD PTR [edx],edi
  40f5cc:	popa   
  40f5cd:	and    eax,0xc362e824
  40f5d2:	mov    eax,0xf1f5cbaa
  40f5d7:	mov    bh,0x25
  40f5d9:	js     0x40f5dd
  40f5db:	clc    
  40f5dc:	inc    ebx
  40f5dd:	inc    edx
  40f5de:	fs cmp al,0x19
  40f5e1:	inc    esi
  40f5e2:	jmp    0xf301:0xcbd47898
  40f5e9:	and    BYTE PTR [edi+0x2d],dl
  40f5ec:	pop    edi
  40f5ed:	sti    
  40f5ee:	scas   eax,DWORD PTR es:[edi]
  40f5ef:	cmp    ebx,DWORD PTR [edi+0x5d251137]
  40f5f5:	mov    DWORD PTR [ecx+0x7df4690b],ebx
  40f5fb:	fcmovb st,st(5)
  40f5fd:	iret   
  40f5fe:	mov    dh,0xa1
  40f600:	push   0xffffffae
  40f602:	aaa    
  40f603:	mov    eax,0x30205682
  40f608:	aad    0x35
  40f60a:	or     ebx,DWORD PTR [edx+eax*2]
  40f60d:	test   BYTE PTR [eax+0x2f],ah
  40f610:	dec    ebx
  40f611:	sbb    ah,BYTE PTR [ecx-0x6c0e0c9e]
  40f617:	fst    QWORD PTR [ebp-0x2b]
  40f61a:	sbb    al,0x4e
  40f61c:	pusha  
  40f61d:	stos   BYTE PTR es:[edi],al
  40f61e:	shl    DWORD PTR [ebp+0x4c],1
  40f621:	ret    
  40f622:	mov    bl,0x1f
  40f624:	adc    eax,ecx
  40f626:	xchg   esi,eax
  40f627:	sub    ebx,DWORD PTR [esi+0x78]
  40f62a:	push   edx
  40f62b:	xor    ebx,DWORD PTR ds:0xc3001900
  40f631:	mov    DWORD PTR [esp+edi*4-0x51],ecx
  40f635:	mov    al,ds:0xef26c0ed
  40f63a:	nop
  40f63b:	mov    dh,BYTE PTR [ebp+0x3219e4fe]
  40f641:	or     ebp,DWORD PTR [esi+0x51]
  40f644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f645:	pop    esi
  40f646:	mov    ds:0xa3db1193,eax
  40f64b:	call   0x3fff3ef4
  40f650:	cmp    eax,0xc4f6a5b
  40f655:	inc    ebx
  40f656:	adc    BYTE PTR [ecx+0x2d],bh
  40f659:	and    al,0x8b
  40f65b:	jb     0x40f639
  40f65d:	fwait
  40f65e:	push   edi
  40f65f:	nop
  40f660:	cwde   
  40f661:	test   eax,0x8759c1fa
  40f666:	sub    al,ah
  40f668:	mov    ds:0xeb04c691,eax
  40f66d:	push   cs
  40f66e:	mov    bh,0xaa
  40f670:	int    0x7a
  40f672:	dec    ecx
  40f673:	nop
  40f674:	bnd ja 0x40f680
  40f677:	pushf  
  40f678:	mov    edx,ecx
  40f67a:	repz sub al,0x5a
  40f67d:	add    DWORD PTR [edi+0x27],esi
  40f680:	imul   esp,DWORD PTR [ebx+0x22389d99],0x40838aaa
  40f68a:	dec    cx
  40f68c:	xchg   esi,eax
  40f68d:	xchg   ebp,eax
  40f68e:	pop    ecx
  40f68f:	popa   
  40f690:	repnz add al,0x2b
  40f693:	out    dx,al
  40f694:	dec    eax
  40f695:	loop   0x40f6ba
  40f697:	mov    ch,BYTE PTR [edx+0x453b871f]
  40f69d:	mov    WORD PTR [eax+0x3],?
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x328c53f0
  40f71a:	cdq    
  40f71b:	add    ch,BYTE PTR [esi+0x5ce88383]
  40f721:	add    DWORD PTR [ebx+0x30b9fd42],0xffffffa7
  40f728:	mov    cl,0x9d
  40f72a:	sti    
  40f72b:	sbb    eax,0x159d58df
  40f730:	push   esi
  40f731:	xor    bl,BYTE PTR [ecx]
  40f733:	add    bl,BYTE PTR ds:0x6ea25668
  40f739:	mov    eax,ds:0xb0be9a34
  40f73e:	sar    BYTE PTR [ecx+0x76262cf8],1
  40f744:	outs   dx,DWORD PTR ds:[esi]
  40f745:	repnz add ecx,edx
  40f748:	(bad)  
  40f749:	aam    0xad
  40f74b:	leave  
  40f74c:	mov    ds:0xf6d62864,eax
  40f751:	sar    BYTE PTR [edi-0x4fecb725],cl
  40f757:	jp     0x40f7ca
  40f759:	ja     0x40f7a6
  40f75b:	loope  0x40f7c0
  40f75d:	mov    eax,ds:0x6e42a9e5
  40f762:	sbb    al,0x37
  40f764:	call   0x28ac:0x91d79f90
  40f76b:	sub    ch,BYTE PTR [ecx+esi*8-0x2e9b60d3]
  40f772:	push   ecx
  40f773:	stos   DWORD PTR es:[edi],eax
  40f774:	ins    DWORD PTR es:[edi],dx
  40f775:	imul   edi,DWORD PTR [ecx+ebp*1],0x425ec417
  40f77c:	xchg   ecx,eax
  40f77d:	call   0x3af8c20b
  40f782:	jmp    0x40f733
  40f784:	fidiv  WORD PTR [edi+0x42]
  40f787:	mov    esp,DWORD PTR [edx+ebx*2]
  40f78a:	into   
  40f78b:	data16 sahf 
  40f78d:	(bad)  
  40f78e:	scas   eax,DWORD PTR es:[edi]
  40f78f:	mov    ah,BYTE PTR [edi-0x37b4e30b]
  40f795:	fld    TBYTE PTR [ecx+0x4f4924b5]
  40f79b:	or     BYTE PTR [ecx],bl
  40f79d:	in     eax,dx
  40f79e:	xor    BYTE PTR [esi+eax*2],ah
  40f7a1:	mov    eax,ds:0x714bccd9
  40f7a6:	gs stc 
  40f7a8:	test   al,0x5e
  40f7aa:	pop    ds
  40f7ab:	retf   0x481f
  40f7ae:	sbb    dh,dl
  40f7b0:	xor    al,0xed
  40f7b2:	scas   al,BYTE PTR es:[edi]
  40f7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b4:	fwait
  40f7b5:	cmp    WORD PTR [eax],si
  40f7b8:	gs fabs 
  40f7bb:	push   ecx
  40f7bc:	leavew 
  40f7be:	les    esi,FWORD PTR [edi]
  40f7c0:	mov    esp,eax
  40f7c2:	jnp    0x40f7f1
  40f7c4:	leave  
  40f7c5:	xchg   edi,eax
  40f7c6:	and    BYTE PTR [esi-0x50],dh
  40f7c9:	pop    edx
  40f7ca:	xlat   BYTE PTR ds:[ebx]
  40f7cb:	jp     0x40f7e3
  40f7cd:	std    
  40f7ce:	jo     0x40f83e
  40f7d0:	dec    edx
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	jne    0x40f7ae
  40f7d4:	mov    ecx,0x9e1ab5a5
  40f7d9:	ret    0x6a38
  40f7dc:	adc    esp,0xf167ff6d
  40f7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e3:	outs   dx,BYTE PTR ds:[esi]
  40f7e4:	xor    BYTE PTR [ecx+0x57],ah
  40f7e7:	pop    esp
  40f7e8:	ffree  st(6)
  40f7ea:	cmp    al,BYTE PTR [edx]
  40f7ec:	dec    esi
  40f7ed:	inc    ecx
  40f7ee:	mov    edi,DWORD PTR [ecx+0x1a]
  40f7f1:	mov    esi,0x8f48f4c4
  40f7f6:	popa   
  40f7f7:	mov    esp,DWORD PTR [eax]
  40f7f9:	dec    edi
  40f7fa:	xchg   esi,esi
  40f7fc:	dec    esi
  40f7fd:	arpl   WORD PTR [ebp+0x44],si
  40f800:	pop    ebp
  40f801:	mov    esp,0xba83e928
  40f806:	mov    ebp,0x36402215
  40f80b:	in     eax,0x0
  40f80d:	jno    0x40f7fe
  40f80f:	mov    eax,0xca2f6676
  40f814:	js     0x40f842
  40f816:	lock xor al,0x5d
  40f819:	cmp    dh,cl
  40f81b:	fiadd  DWORD PTR [ebx+0x6c]
  40f81e:	xor    BYTE PTR [eax+0x5d],bl
  40f821:	in     al,0x90
  40f823:	push   ecx
  40f824:	out    dx,al
  40f825:	jae    0x40f863
  40f827:	lds    edi,FWORD PTR [esi]
  40f829:	repz mov dh,0x3d
  40f82c:	test   bl,bl
  40f82e:	(bad)  
  40f82f:	sbb    esp,edx
  40f831:	iret   
  40f832:	ret    0xb15
  40f835:	xchg   ebp,eax
  40f836:	fcomip st,st(5)
  40f838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f839:	mov    ds:0x2d54cae2,eax
  40f83e:	shr    BYTE PTR [edx-0x38],1
  40f841:	or     BYTE PTR [ebx+0x56fd59c1],cl
  40f847:	jmp    0x40f810
  40f849:	or     dl,BYTE PTR [esi-0x8]
  40f84c:	popf   
  40f84d:	mov    edx,0x6dc092b3
  40f852:	and    DWORD PTR [ebx],edi
  40f854:	inc    esi
  40f855:	jp     0x40f89f
  40f857:	test   ch,bl
  40f859:	xor    al,0xcc
  40f85b:	xchg   ebx,eax
  40f85c:	dec    ebp
  40f85d:	lahf   
  40f85e:	mov    cl,0x29
  40f860:	enter  0x40ac,0x7c
  40f864:	into   
  40f865:	pop    ecx
  40f866:	push   0xd48c3dda
  40f86b:	int3   
  40f86c:	retf   
  40f86d:	mov    eax,ds:0x3c1ab58d
  40f872:	pop    eax
  40f873:	outs   dx,DWORD PTR ds:[esi]
  40f874:	mov    ds:0xb1388e42,eax
  40f879:	lea    ebx,[edx+eiz*2-0xe993bb8]
  40f880:	mov    dl,0xf2
  40f882:	inc    esi
  40f883:	sti    
  40f884:	enter  0x5dcc,0x96
  40f888:	cmp    ch,BYTE PTR [esi]
  40f88a:	fidiv  WORD PTR [ebx-0x70]
  40f88d:	push   ecx
  40f88e:	xor    al,0xc6
  40f890:	add    al,0x6a
  40f892:	ret    0xd009
  40f895:	mov    eax,ds:0x63bb9540
  40f89a:	push   ss
  40f89b:	add    BYTE PTR [edi-0x3d],al
  40f89e:	dec    edx
  40f89f:	and    al,0xf7
  40f8a1:	mov    ch,0x3e
  40f8a3:	js     0x40f8b1
  40f8a5:	loop   0x40f91e
  40f8a7:	daa    
  40f8a8:	jo     0x40f85c
  40f8aa:	iret   
  40f8ab:	arpl   WORD PTR [edx],bx
  40f8ad:	out    dx,eax
  40f8ae:	fadd   st(4),st
  40f8b0:	xchg   ecx,eax
  40f8b1:	stos   DWORD PTR es:[edi],eax
  40f8b2:	rcr    bl,0xef
  40f8b5:	addr16 jnp 0x40f871
  40f8b8:	loope  0x40f8d2
  40f8ba:	nop
  40f8bb:	push   edx
  40f8bc:	and    BYTE PTR [ecx],al
  40f8be:	jae    0x40f8b8
  40f8c0:	sti    
  40f8c1:	mov    bh,0x4f
  40f8c3:	enter  0x67f7,0xd1
  40f8c7:	fmul   QWORD PTR [ecx*8-0x638c7733]
  40f8ce:	sub    eax,DWORD PTR [edi+0x2d]
  40f8d1:	hlt    
  40f8d2:	fucomp st(7)
  40f8d4:	mov    DWORD PTR [ecx+0xc],ebp
  40f8d7:	ds pusha 
  40f8d9:	shr    BYTE PTR fs:[esi],0x33
  40f8dd:	mov    bl,BYTE PTR [edx-0x4585eb2c]
  40f8e3:	enter  0x26bc,0xe8
  40f8e7:	scas   eax,DWORD PTR es:[edi]
  40f8e8:	inc    esp
  40f8e9:	repnz push cs
  40f8eb:	daa    
  40f8ec:	xchg   esp,eax
  40f8ed:	fadd   st(1),st
  40f8ef:	in     eax,0x6e
  40f8f1:	jae    0x40f8c6
  40f8f3:	int3   
  40f8f4:	std    
  40f8f5:	call   0x18048ed3
  40f8fa:	popa   
  40f8fb:	fidivr WORD PTR [edx-0x19]
  40f8fe:	xor    BYTE PTR [edx+0x7f],bl
  40f901:	das    
  40f902:	xchg   ebx,eax
  40f903:	inc    ebp
  40f904:	icebp  
  40f905:	mov    dl,BYTE PTR [edx]
  40f907:	fdivr  QWORD PTR [edi-0x40]
  40f90a:	js     0x40f8c6
  40f90c:	jno    0x40f890
  40f90e:	jns    0x40f933
  40f910:	mov    edx,DWORD PTR [edi+0x17b2bd10]
  40f916:	call   0xf7df:0x9360b666
  40f91d:	mov    edx,DWORD PTR [edx]
  40f91f:	sar    DWORD PTR [ebx+ebp*1-0x28],0x56
  40f924:	lock test DWORD PTR [esi+0x4b],edx
  40f928:	and    ch,BYTE PTR [eax+0x69]
  40f92b:	cmp    BYTE PTR [ebp-0x23e20f3d],dl
  40f931:	imul   ecx,esp,0xbdd7b4c3
  40f937:	xchg   ebp,eax
  40f938:	mov    edx,0x29322453
  40f93d:	inc    edi
  40f93e:	adc    al,0xc3
  40f940:	push   ebx
  40f941:	enter  0x18ca,0x78
  40f945:	retf   
  40f946:	adc    BYTE PTR [eax-0x7c77bdb2],cl
  40f94c:	mov    esi,0xf82caa5f
  40f951:	mov    gs,WORD PTR [eax+0x7c]
  40f954:	adc    al,0x27
  40f956:	add    al,0x87
  40f958:	scas   al,BYTE PTR es:[edi]
  40f959:	pop    ebx
  40f95a:	add    esi,DWORD PTR [ecx+0x1f1b0358]
  40f960:	std    
  40f961:	sbb    al,0x5f
  40f963:	dec    esi
  40f964:	mov    eax,ds:0x8dccf951
  40f969:	and    BYTE PTR [ebx],bl
  40f96b:	ja     0x40f9a9
  40f96d:	imul   esi,DWORD PTR [ebp-0x14],0xffffffaa
  40f971:	gs sub al,0xb9
  40f974:	add    al,0x23
  40f976:	cli    
  40f977:	jae    0x40f8fa
  40f979:	fadd   st(6),st
  40f97b:	in     eax,0x2d
  40f97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f97e:	aad    0x20
  40f980:	fist   WORD PTR [ebp+0x28]
  40f983:	iret   
  40f984:	mov    esp,0x6901bd8c
  40f989:	fstp   TBYTE PTR [edx+eax*4+0x63]
  40f98d:	jnp    0x40f99d
  40f98f:	sub    DWORD PTR [edx+edi*4],edx
  40f992:	and    esp,ebp
  40f994:	cmp    eax,0xbed0d99f
  40f999:	ss or  edi,eax
  40f99c:	mov    esp,0x487a254c
  40f9a1:	(bad)
  40f9a4:	dec    edi
  40f9a5:	dec    ecx
  40f9a6:	jo     0x40fa1e
  40f9a8:	outs   dx,DWORD PTR ds:[esi]
  40f9a9:	gs pop edx
  40f9ab:	pushf  
  40f9ac:	scas   eax,DWORD PTR es:[edi]
  40f9ad:	dec    ecx
  40f9ae:	xchg   edx,eax
  40f9af:	outs   dx,DWORD PTR ds:[esi]
  40f9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b1:	xchg   DWORD PTR [eax+eax*2+0x14],esp
  40f9b5:	jb     0x40fa19
  40f9b7:	add    BYTE PTR [esi],dl
  40f9b9:	push   es
  40f9ba:	jae    0x40f975
  40f9bc:	js     0x40fa2a
  40f9be:	test   esi,esp
  40f9c0:	dec    edi
  40f9c1:	das    
  40f9c2:	cmp    DWORD PTR [ebp+ebp*1-0x6a],esi
  40f9c6:	mov    ?,WORD PTR [ebx+0x5a]
  40f9c9:	mov    ebx,0x2747bd08
  40f9ce:	xchg   DWORD PTR [edx+0x71dfd151],esp
  40f9d4:	dec    ecx
  40f9d5:	pusha  
  40f9d6:	or     BYTE PTR [ebx+0x7f],0x5a
  40f9da:	push   ebp
  40f9db:	inc    eax
  40f9dc:	(bad)  
  40f9dd:	in     eax,dx
  40f9de:	cld    
  40f9df:	cmp    al,0xa2
  40f9e1:	loope  0x40f9b1
  40f9e3:	jg     0x40f984
  40f9e5:	pop    ecx
  40f9e6:	xor    DWORD PTR [ebx+0xf],ebx
  40f9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ea:	dec    ebx
  40f9eb:	push   ecx
  40f9ec:	sahf   
  40f9ed:	push   ss
  40f9ee:	mov    ecx,0xe67eceaf
  40f9f3:	and    edi,DWORD PTR [ebx+0x6ba07274]
  40f9f9:	cwde   
  40f9fa:	mov    ebx,0xf50cfa1e
  40f9ff:	cmp    BYTE PTR [ebx],0x4
  40fa02:	pop    ss
  40fa03:	xor    al,0xaf
  40fa05:	pop    ebp
  40fa06:	dec    ebx
  40fa07:	es push esp
  40fa09:	cmp    DWORD PTR [eax],ebp
  40fa0b:	imul   ecx,DWORD PTR [ebp-0x1b],0x40
  40fa0f:	rcr    DWORD PTR [edx],1
  40fa11:	push   0xffffff84
  40fa13:	imul   ecx,DWORD PTR [edx+0x3f314012],0x558b7a93
  40fa1d:	les    esp,FWORD PTR [edi-0x34d8f871]
  40fa23:	add    DWORD PTR [ebp-0x45],ebp
  40fa26:	jnp    0x40fa05
  40fa28:	adc    al,cl
  40fa2a:	fisttp QWORD PTR [edx]
  40fa2c:	dec    ebp
  40fa2d:	into   
  40fa2e:	sub    ecx,edi
  40fa30:	lock mov ah,0xca
  40fa33:	mov    bh,BYTE PTR [ebx+0x0]
  40fa36:	das    
  40fa37:	sub    al,0x9d
  40fa39:	popf   
  40fa3a:	ja     0x40f9ca
  40fa3c:	pop    esi
  40fa3d:	pop    es
  40fa3e:	sbb    BYTE PTR [eax],dh
  40fa40:	pop    esp
  40fa41:	sti    
  40fa42:	xor    cl,BYTE PTR [eax]
  40fa44:	stos   BYTE PTR es:[edi],al
  40fa45:	pop    edi
  40fa46:	aam    0xd4
  40fa48:	and    ebx,ebx
  40fa4a:	shl    BYTE PTR [ebx],cl
  40fa4c:	aaa    
  40fa4d:	push   ebx
  40fa4e:	shr    bh,0xcf
  40fa51:	sbb    DWORD PTR [ecx-0x71fbc849],esi
  40fa57:	mov    ecx,0x46da3eb7
  40fa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa5d:	dec    eax
  40fa5e:	std    
  40fa5f:	cmp    eax,0x1522876
  40fa64:	jmp    0x40fa0a
  40fa66:	cwde   
  40fa67:	(bad)  
  40fa68:	fild   DWORD PTR [ebp-0x3c798902]
  40fa6e:	add    DWORD PTR [esi-0x2973c01c],esi
  40fa74:	or     DWORD PTR [eax],0xffffffe9
  40fa77:	ds pop ecx
  40fa79:	xor    BYTE PTR [eax+esi*2],bl
  40fa7c:	test   eax,0xce0726ec
  40fa81:	and    bh,BYTE PTR cs:0x59c93c3d
  40fa88:	retf   0x475d
  40fa8b:	mov    ch,0xd8
  40fa8d:	pop    esi
  40fa8e:	mov    dh,0x73
  40fa90:	ins    DWORD PTR es:[edi],dx
  40fa91:	add    eax,0x82a41642
  40fa96:	xor    eax,0x6b852013
  40fa9b:	sbb    al,0x4d
  40fa9d:	cmp    eax,ebx
  40fa9f:	or     bh,ch
  40faa1:	xlat   BYTE PTR ds:[ebx]
  40faa2:	out    0x53,al
  40faa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa5:	xchg   esp,eax
  40faa6:	fidiv  WORD PTR [esi+0x56b96466]
  40faac:	shr    BYTE PTR [eax],1
  40faae:	sbb    al,0xa8
  40fab0:	and    al,BYTE PTR [edi-0x68848217]
  40fab6:	fmul   QWORD PTR [edi*4-0x72439670]
  40fabd:	popf   
  40fabe:	cmc    
  40fabf:	xor    BYTE PTR [edi],ah
  40fac1:	push   ebp
  40fac2:	in     al,0xb0
  40fac4:	mov    ch,0xa6
  40fac6:	(bad)  
  40fac7:	sbb    al,0x27
  40fac9:	sbb    eax,0xced5e455
  40face:	and    BYTE PTR [ebx],al
  40fad0:	dec    esp
  40fad1:	loopne 0x40fb14
  40fad3:	pusha  
  40fad4:	dec    ebp
  40fad5:	pop    ebp
  40fad6:	adc    dl,BYTE PTR [esp+esi*2-0x53]
  40fada:	int3   
  40fadb:	cmp    bl,dh
  40fadd:	aas    
  40fade:	jp     0x40faff
  40fae0:	push   edx
  40fae1:	cmp    BYTE PTR ds:0xb86f77c0,ch
  40fae7:	int3   
  40fae8:	mov    bh,0x6
  40faea:	jnp    0x40faeb
  40faec:	cwde   
  40faed:	inc    esi
  40faee:	bound  edi,QWORD PTR [ecx-0x403f74ff]
  40faf4:	jo     0x40faa1
  40faf6:	add    al,0xa9
  40faf8:	test   DWORD PTR [ecx],edx
  40fafa:	leave  
  40fafb:	imul   ecx,DWORD PTR [ebp+0x72],0xc1d9008
  40fb02:	adc    eax,0x9b7e9535
  40fb07:	sub    DWORD PTR [ecx-0x29],ecx
  40fb0a:	inc    edx
  40fb0b:	lahf   
  40fb0c:	adc    BYTE PTR [edx],ch
  40fb0e:	dec    eax
  40fb0f:	jns    0x40fae9
  40fb11:	push   esp
  40fb12:	test   DWORD PTR ds:0x844a1135,esp
  40fb18:	xor    DWORD PTR [esi],0xffffffb4
  40fb1b:	or     al,0x49
  40fb1d:	inc    ebp
  40fb1e:	mov    ebx,0xfeec0653
  40fb23:	jp     0x40fb1a
  40fb25:	fidivr DWORD PTR [esp+ecx*1]
  40fb28:	and    al,0x9d
  40fb2a:	inc    edx
  40fb2b:	out    dx,al
  40fb2c:	ja     0x40fba4
  40fb2e:	add    al,0xde
  40fb30:	adc    BYTE PTR [esi*1+0x1576c85d],bl
  40fb37:	out    0x97,al
  40fb39:	stos   BYTE PTR es:[edi],al
  40fb3a:	out    0xfc,al
  40fb3c:	pop    ebx
  40fb3d:	mov    bl,0x44
  40fb3f:	sub    eax,0xfce5be4d
  40fb44:	loop   0x40fb94
  40fb46:	in     eax,dx
  40fb47:	gs sbb al,0x1e
  40fb4a:	inc    esi
  40fb4b:	mov    fs,WORD PTR [ebx]
  40fb4d:	mov    eax,ds:0xdc971af3
  40fb52:	add    BYTE PTR [ebx+edi*2+0x2e],dl
  40fb56:	popf   
  40fb57:	jmp    0x2d54a6b2
  40fb5c:	in     al,0xc4
  40fb5e:	pusha  
  40fb5f:	and    DWORD PTR [ebx-0x55954052],edx
  40fb65:	int3   
  40fb66:	inc    eax
  40fb67:	jge    0x40fbcb
  40fb69:	stos   DWORD PTR es:[edi],eax
  40fb6a:	xor    DWORD PTR [edi],edi
  40fb6c:	mov    bl,0xef
  40fb6e:	fistp  QWORD PTR [esi+edi*2-0x1e6fa7e2]
  40fb75:	loope  0x40fbd9
  40fb77:	pop    ds
  40fb78:	sub    BYTE PTR [ecx-0x4eedf2cb],al
  40fb7e:	add    al,0xa1
  40fb80:	xor    BYTE PTR ds:0x2b7aa590,dh
  40fb86:	mov    ch,0x3e
  40fb88:	das    
  40fb89:	fbld   TBYTE PTR [ebp-0xcdb8008]
  40fb8f:	popa   
  40fb90:	outs   dx,BYTE PTR ds:[esi]
  40fb91:	push   0x17
  40fb93:	mov    ebx,0x8dcdd34a
  40fb98:	mov    ds:0x8e35b74e,al
  40fb9d:	dec    esp
  40fb9e:	(bad)  
  40fb9f:	jmp    0x2791:0xcaa001aa
  40fba6:	(bad)  
  40fba7:	out    0x6d,eax
  40fba9:	out    0x0,al
  40fbab:	mov    esp,0x21bc0c68
  40fbb0:	jnp    0x40fbd6
  40fbb2:	mov    al,ds:0xf75f1781
  40fbb7:	mov    ah,BYTE PTR [edi+0xb]
  40fbba:	jb     0x40fc03
  40fbbc:	enter  0x697d,0x21
  40fbc0:	inc    edx
  40fbc1:	xor    DWORD PTR [ebx+0x69],ecx
  40fbc4:	pop    ebx
  40fbc5:	aam    0x19
  40fbc7:	imul   ebx,DWORD PTR [ecx-0x42],0x4e
  40fbcb:	not    BYTE PTR [ecx-0x32bab1d9]
  40fbd1:	mov    al,ds:0xdde3635d
  40fbd6:	pop    ebp
  40fbd7:	mov    eax,0x575d9551
  40fbdc:	dec    edi
  40fbdd:	mov    WORD PTR ds:0x972f2f86,ds
  40fbe3:	pop    ebx
  40fbe4:	mov    ch,0x77
  40fbe6:	fbstp  TBYTE PTR [edi+0x311a73ef]
  40fbec:	mov    ds:0x8443eb99,eax
  40fbf1:	xchg   edi,eax
  40fbf2:	aam    0xbf
  40fbf4:	mov    WORD PTR [edx+edi*4],?
  40fbf7:	fisub  DWORD PTR [edi-0xc22e812]
  40fbfd:	xchg   esi,eax
  40fbfe:	js     0x40fbd2
  40fc00:	mov    dh,BYTE PTR [ebx+0x1626f32a]
  40fc06:	aad    0xf8
  40fc08:	push   esi
  40fc09:	fmulp  st(6),st
  40fc0b:	daa    
  40fc0c:	and    BYTE PTR [edx+0xaa7de73],cl
  40fc12:	cli    
  40fc13:	jmp    0x40fc3c
  40fc15:	and    bh,BYTE PTR [ebx+0x17]
  40fc18:	cmp    eax,0xf4723d76
  40fc1d:	cmc    
  40fc1e:	push   esi
  40fc1f:	mov    ds:0xcf97b327,eax
  40fc24:	iret   
  40fc25:	cli    
  40fc26:	fiadd  DWORD PTR [edx+0x441dfb90]
  40fc2c:	jae    0x40fc11
  40fc2e:	push   es
  40fc2f:	(bad)  
  40fc30:	mov    cl,0xf6
  40fc32:	xor    al,0x20
  40fc34:	pop    ds
  40fc35:	push   edi
  40fc36:	pusha  
  40fc37:	and    al,0x93
  40fc39:	mov    ebx,0x2a80ed7d
  40fc3e:	lea    esi,[edi-0x121c6c62]
  40fc44:	pop    ds
  40fc45:	outs   dx,BYTE PTR ds:[esi]
  40fc46:	fucomi st,st(4)
  40fc48:	cwde   
  40fc49:	out    0x37,al
  40fc4b:	fild   WORD PTR [esi]
  40fc4d:	nop
  40fc4e:	or     al,0xf3
  40fc50:	pop    ecx
  40fc51:	loopne 0x40fc95
  40fc53:	cmp    ebx,DWORD PTR [ecx-0x51]
  40fc56:	mov    ah,0xcb
  40fc58:	or     dl,BYTE PTR [edx]
  40fc5a:	daa    
  40fc5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc5c:	push   edx
  40fc5d:	cmp    bh,cl
  40fc5f:	jmp    0x7bab:0xbe131b41
  40fc66:	mov    WORD PTR ds:0x97f9110d,fs
  40fc6c:	call   0x7ade:0xcfb1454b
  40fc73:	xchg   ebx,eax
  40fc74:	aad    0x0
  40fc76:	mov    ebx,0x3ce89f02
  40fc7b:	sti    
  40fc7c:	cwde   
  40fc7d:	pop    ebx
  40fc7e:	sub    BYTE PTR [eax-0x7bf7682],bl
  40fc84:	xchg   ebx,eax
  40fc85:	ja     0x40fc22
  40fc87:	xlat   BYTE PTR ds:[ebx]
  40fc88:	push   ebx
  40fc89:	mov    cl,0xd0
  40fc8b:	lea    edx,[ecx]
  40fc8d:	loope  0x40fcf4
  40fc8f:	push   ss
  40fc90:	(bad)  
  40fc91:	xor    al,0x5a
  40fc93:	mov    cl,0x3a
  40fc95:	pop    esp
  40fc96:	dec    ebp
  40fc97:	pop    edx
  40fc98:	in     al,dx
  40fc99:	test   BYTE PTR [ebx+0x667c475e],ah
  40fc9f:	adc    DWORD PTR [edx+ecx*4+0x2f3753e6],edi
  40fca6:	je     0x40fd06
  40fca8:	lahf   
  40fca9:	mov    esp,0x8244db31
  40fcae:	dec    esi
  40fcaf:	mov    edi,0xef70f721
  40fcb4:	data16 sub BYTE PTR [ecx],dh
  40fcb7:	(bad)  
  40fcb8:	(bad)  
  40fcb9:	ss dec eax
  40fcbb:	add    al,0x8f
  40fcbd:	shl    ch,1
  40fcbf:	daa    
  40fcc0:	pop    edx
  40fcc1:	mov    al,ds:0xbbd66f54
  40fcc6:	xchg   DWORD PTR [esi+0x5df378f3],edi
  40fccc:	pop    esi
  40fccd:	jns    0x40fccc
  40fccf:	int    0x6b
  40fcd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd2:	xlat   BYTE PTR ds:[ebx]
  40fcd3:	push   cs
  40fcd4:	sub    DWORD PTR [esi+edx*8-0x4d],edi
  40fcd8:	daa    
  40fcd9:	inc    eax
  40fcda:	and    al,0xfa
  40fcdc:	or     esi,esi
  40fcde:	lods   al,BYTE PTR ds:[esi]
  40fcdf:	mov    WORD PTR [ecx-0x4de52330],?
  40fce5:	out    0xd,al
  40fce7:	pop    edx
  40fce8:	mov    esi,0x6e46d209
  40fced:	popf   
  40fcee:	ret    0xc847
  40fcf1:	nop
  40fcf2:	mov    dl,0xd
  40fcf4:	push   ds
  40fcf5:	mov    ds:0xe718b65a,eax
  40fcfa:	sahf   
  40fcfb:	nop
  40fcfc:	loope  0x40fce8
  40fcfe:	xor    dl,ah
  40fd00:	cmp    al,0xc9
  40fd02:	mov    edx,0x189973bb
  40fd07:	cmp    al,0x8d
  40fd09:	pop    edi
  40fd0a:	xchg   esp,eax
  40fd0b:	cdq    
  40fd0c:	pop    ds
  40fd0d:	mov    eax,ds:0x7f09c0ae
  40fd12:	arpl   WORD PTR [esp+esi*4-0x202e711e],sp
  40fd19:	das    
  40fd1a:	adc    al,0xf0
  40fd1c:	sbb    ebx,0x27
  40fd1f:	lock std 
  40fd21:	cmp    DWORD PTR [ebp-0x3b999a03],eax
  40fd27:	mov    eax,0x968397b6
  40fd2c:	mov    dl,ah
  40fd2e:	fs cs popa 
  40fd31:	cmp    DWORD PTR ds:0xe647e6c5,esp
  40fd37:	shl    DWORD PTR [ebp-0x44],1
  40fd3a:	cmp    ch,BYTE PTR [edx]
  40fd3c:	mov    ds:0xaeb1497d,al
  40fd41:	xchg   edx,eax
  40fd42:	inc    edx
  40fd43:	lea    ebp,[esi-0x4f]
  40fd46:	add    eax,edx
  40fd48:	ret    0x9588
  40fd4b:	mov    al,ds:0x983c565
  40fd50:	cld    
  40fd51:	and    BYTE PTR [eax+0x13870b32],0x44
  40fd58:	stc    
  40fd59:	pop    ecx
  40fd5a:	ret    
  40fd5b:	hlt    
  40fd5c:	repz popa 
  40fd5e:	loope  0x40fd6e
  40fd60:	add    dh,cl
  40fd62:	push   es
  40fd63:	xor    bl,cl
  40fd65:	std    
  40fd66:	and    edx,DWORD PTR [ecx+0x60e50d0f]
  40fd6c:	xchg   al,bh
  40fd6e:	stos   BYTE PTR es:[edi],al
  40fd6f:	nop
  40fd70:	push   cs
  40fd71:	inc    edx
  40fd72:	sub    al,0xfc
  40fd74:	imul   eax,DWORD PTR [ebx+0x6a],0xe05fa553
  40fd7b:	cmp    BYTE PTR ds:0xd7b4613,dl
  40fd81:	push   esi
  40fd82:	arpl   WORD PTR [edx],bp
  40fd84:	pop    ds
  40fd85:	rol    BYTE PTR [edx-0x55],cl
  40fd88:	push   ecx
  40fd89:	gs push ebp
  40fd8b:	add    BYTE PTR [esi+0x25],bh
  40fd8e:	inc    esi
  40fd8f:	push   0x70
  40fd91:	retf   0xd0f1
  40fd94:	add    dl,BYTE PTR [edx+0x1c]
  40fd97:	lahf   
  40fd98:	adc    DWORD PTR [edx],edi
  40fd9a:	pop    edx
  40fd9b:	aaa    
  40fd9c:	sub    al,0xd8
  40fd9e:	sub    ecx,esp
  40fda0:	and    BYTE PTR [esi+eiz*4],ch
  40fda3:	ss jle 0x40fd9d
  40fda6:	pop    edx
  40fda7:	sbb    BYTE PTR [esi-0x4d],0x25
  40fdab:	mov    WORD PTR [eax+ecx*8],gs
  40fdae:	mov    ?,WORD PTR [ebx]
  40fdb0:	jne    0x40fe0e
  40fdb2:	sbb    ecx,DWORD PTR ds:0x16340c46
  40fdb8:	std    
  40fdb9:	add    eax,0xe158f240
  40fdbe:	fnsave [edx]
  40fdc0:	inc    esi
  40fdc1:	in     al,dx
  40fdc2:	jp     0x40fe0d
  40fdc4:	outs   dx,BYTE PTR ds:[esi]
  40fdc5:	shl    BYTE PTR [ebp-0x7f4bab8f],cl
  40fdcb:	and    ecx,edx
  40fdcd:	icebp  
  40fdce:	pop    ss
  40fdcf:	add    bh,BYTE PTR [esi-0x58]
  40fdd2:	and    dh,dh
  40fdd4:	add    bh,BYTE PTR [esi+0x2bf4d1ed]
  40fdda:	jp     0x40fd94
  40fddc:	add    al,0x2b
  40fdde:	std    
  40fddf:	bound  eax,QWORD PTR [ebx]
  40fde1:	mov    eax,ds:0xba2d79ba
  40fde6:	mov    esp,0xf38de7a
  40fdeb:	addr16 aas 
  40fded:	(bad)  [edx]
  40fdef:	sbb    eax,0x1723cb1a
  40fdf4:	inc    ecx
  40fdf5:	xchg   edx,eax
  40fdf6:	sbb    al,0xfd
  40fdf8:	push   0xffffffe9
  40fdfa:	and    eax,0xc939c383
  40fdff:	mov    ecx,0x572aef8a
  40fe04:	out    0xd5,al
  40fe06:	nop
  40fe07:	mov    eax,0xfa93f210
  40fe0c:	data16 daa 
  40fe0e:	and    BYTE PTR [edx+0x358adab1],ch
  40fe14:	push   ecx
  40fe15:	test   ebx,0x348cb53
  40fe1b:	in     al,0xee
  40fe1d:	pop    esp
  40fe1e:	fsubr  DWORD PTR [ebp-0x5e5e9cde]
  40fe24:	sbb    ebx,DWORD PTR [ebp+0x372480a5]
  40fe2a:	int    0x7c
  40fe2c:	stc    
  40fe2d:	dec    ebx
  40fe2e:	jmp    0xc38a:0x67c0b691
  40fe35:	jp     0x40fe71
  40fe37:	outs   dx,DWORD PTR ds:[esi]
  40fe38:	adc    ch,al
  40fe3a:	es gs and eax,0xce111419
  40fe41:	hlt    
  40fe42:	mov    DWORD PTR [edx+0x7e],esp
  40fe45:	lods   eax,DWORD PTR ds:[esi]
  40fe46:	sub    BYTE PTR [esp+edx*8+0x61db44d7],ah
  40fe4d:	mov    dh,0xa9
  40fe4f:	sub    eax,DWORD PTR [ecx+0x1a06edd7]
  40fe55:	and    al,0x3e
  40fe57:	das    
  40fe58:	outs   dx,BYTE PTR ds:[esi]
  40fe59:	iret   
  40fe5a:	js     0x40fe6f
  40fe5c:	fwait
  40fe5d:	aam    0x5d
  40fe5f:	(bad)  
  40fe60:	fmul   DWORD PTR [ecx+0x56]
  40fe63:	daa    
  40fe64:	inc    ebp
  40fe65:	imul   ecx,DWORD PTR [ebx+0x16],0x4c0d098f
  40fe6c:	scas   al,BYTE PTR es:[edi]
  40fe6d:	(bad)  
  40fe6e:	sub    eax,0x8e1cb114
  40fe73:	aaa    
  40fe74:	pop    edi
  40fe75:	mov    eax,ds:0x26ef283e
  40fe7a:	mov    bh,0x71
  40fe7c:	pusha  
  40fe7d:	sahf   
  40fe7e:	jecxz  0x40fe66
  40fe80:	mov    bl,0xfa
  40fe82:	push   cs
  40fe83:	dec    ebp
  40fe84:	push   ebp
  40fe85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe86:	sbb    ebx,DWORD PTR [ecx]
  40fe88:	repz int3 
  40fe8a:	sti    
  40fe8b:	mov    ebp,ebx
  40fe8d:	xchg   edx,eax
  40fe8e:	outs   dx,DWORD PTR ds:[esi]
  40fe8f:	sbb    edx,0x9be189de
  40fe95:	enter  0x239b,0xe6
  40fe99:	sbb    DWORD PTR ds:0x72f03402,esi
  40fe9f:	xor    cl,BYTE PTR [edx-0x23fb5833]
  40fea5:	mov    ebp,0x26e5a2e5
  40feaa:	sti    
  40feab:	ins    DWORD PTR es:[edi],dx
  40feac:	xor    esi,DWORD PTR [esi-0x151aa6cd]
  40feb2:	loopne 0x40fe94
  40feb4:	jmp    0x8ce0:0xd131e4f7
  40febb:	dec    esp
  40febc:	out    0x95,eax
  40febe:	lds    eax,FWORD PTR [eax]
  40fec0:	jno    0x40ff3f
  40fec2:	mov    edi,0x9c508b09
  40fec7:	mov    dh,0x51
  40fec9:	mov    esp,DWORD PTR [edx-0x2ef37656]
  40fecf:	jmp    0x45f44525
  40fed4:	sbb    ebx,0xffffff8f
  40fed7:	clc    
  40fed8:	cdq    
  40fed9:	cld    
  40feda:	xchg   esi,eax
  40fedb:	jns    0x40ff20
  40fedd:	xor    eax,0x346a8d83
  40fee2:	lods   al,BYTE PTR ds:[esi]
  40fee3:	imul   ecx,DWORD PTR [esi],0xc15cadd5
  40fee9:	pusha  
  40feea:	sti    
  40feeb:	ss pop ss
  40feed:	and    al,0xf6
  40feef:	cld    
  40fef0:	pop    eax
  40fef1:	jmp    0x40ff59
  40fef3:	xor    esp,eax
  40fef5:	or     eax,0x8e2df46d
  40fefa:	inc    eax
  40fefb:	inc    edx
  40fefc:	mov    al,cl
  40fefe:	pop    ecx
  40feff:	sar    BYTE PTR [ecx+0x1a],cl
  40ff02:	scas   al,BYTE PTR es:[edi]
  40ff03:	lea    esi,[ebx-0x54]
  40ff06:	add    ah,BYTE PTR [ecx-0x1d9e105a]
  40ff0c:	out    0xdb,eax
  40ff0e:	mov    BYTE PTR [ecx-0x1b42b918],al
  40ff14:	leave  
  40ff15:	test   ebp,ecx
  40ff17:	sbb    bl,BYTE PTR [ecx]
  40ff19:	inc    edi
  40ff1a:	nop
  40ff1b:	pop    edi
  40ff1c:	loope  0x40fee0
  40ff1e:	addr16 dec eax
  40ff20:	fcomi  st,st(3)
  40ff22:	ret    0x4522
  40ff25:	cmp    ah,dl
  40ff27:	add    BYTE PTR [ebp-0x25575c0f],dl
  40ff2d:	out    dx,al
  40ff2e:	sub    eax,DWORD PTR [edx+0x38]
  40ff31:	scas   al,BYTE PTR es:[edi]
  40ff32:	ins    DWORD PTR es:[edi],dx
  40ff33:	push   esi
  40ff34:	push   ds
  40ff35:	dec    edi
  40ff36:	add    BYTE PTR [edx+edx*8-0x88a575a],dl
  40ff3d:	push   eax
  40ff3e:	xor    eax,DWORD PTR [ebp+0x461129b7]
  40ff44:	gs popf 
  40ff46:	aas    
  40ff47:	shr    BYTE PTR [ebp+0x16],cl
  40ff4a:	mov    dh,0x3a
  40ff4c:	stc    
  40ff4d:	push   ebp
  40ff4e:	popf   
  40ff4f:	scas   eax,DWORD PTR es:[edi]
  40ff50:	or     al,0x86
  40ff52:	xchg   esp,eax
  40ff53:	daa    
  40ff54:	add    BYTE PTR [edx-0x7a],ch
  40ff57:	in     eax,dx
  40ff58:	popa   
  40ff59:	and    DWORD PTR [ebx+eiz*8+0x15f4647a],esp
  40ff60:	push   0xcb579962
  40ff65:	add    ebp,DWORD PTR [edx]
  40ff67:	scas   al,BYTE PTR es:[edi]
  40ff68:	cmp    bh,BYTE PTR cs:[edx+0x62cba8e7]
  40ff6f:	sub    ecx,DWORD PTR [ecx+0x4d22b0a5]
  40ff75:	pop    esp
  40ff76:	sahf   
  40ff77:	out    dx,eax
  40ff78:	xor    al,0x70
  40ff7a:	sti    
  40ff7b:	pop    ebp
  40ff7c:	ins    BYTE PTR es:[edi],dx
  40ff7d:	dec    BYTE PTR [esi]
  40ff7f:	mov    dl,0xc3
  40ff81:	pop    edx
  40ff82:	mov    edi,0x1f6ceeae
  40ff87:	mov    edi,eax
  40ff89:	enter  0xa2f8,0xd
  40ff8d:	xlat   BYTE PTR ds:[ebx]
  40ff8e:	and    dl,BYTE PTR [ebx-0x3001cf62]
  40ff94:	adc    BYTE PTR fs:[ecx-0x6aa35567],0xde
  40ff9c:	cmp    DWORD PTR ss:[ebx+0x4824a2b4],ebp
  40ffa3:	xchg   cl,cl
  40ffa5:	mov    al,0xe
  40ffa7:	fwait
  40ffa8:	push   esp
  40ffa9:	out    0x2d,eax
  40ffab:	xor    al,0x4
  40ffae:	mov    dh,0x7e
  40ffb0:	sbb    BYTE PTR [ecx-0x29],0x60
  40ffb4:	lods   eax,DWORD PTR ds:[esi]
  40ffb5:	sbb    eax,0x248b3a78
  40ffba:	xchg   edx,eax
  40ffbb:	stos   BYTE PTR es:[edi],al
  40ffbc:	xor    al,0x97
  40ffbe:	mov    cl,0x8f
  40ffc0:	les    ecx,FWORD PTR [ebx+0x47]
  40ffc3:	repz les esp,FWORD PTR [ebp+0x3aa02cbb]
  40ffca:	iret   
  40ffcb:	pop    esi
  40ffcc:	shl    DWORD PTR [eax-0x355fb4d3],0xb5
  40ffd3:	test   eax,0xabcfe92d
  40ffd8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ffda:	mov    dh,0xca
  40ffdc:	ret    
  40ffdd:	popf   
  40ffde:	popf   
  40ffdf:	adc    DWORD PTR [edx-0x258c66f0],edx
  40ffe5:	into   
  40ffe6:	xchg   DWORD PTR [ecx],edx
  40ffe8:	dec    esp
  40ffe9:	shl    BYTE PTR [ebx+0x6a],1
  40ffec:	and    al,0xb1
  40ffee:	cld    
  40ffef:	and    ebx,esp
  40fff1:	rol    al,cl
  40fff3:	pop    es
  40fff4:	cmp    BYTE PTR ds:[ebx],dl
  40fff7:	dec    ebp
  40fff8:	lods   al,BYTE PTR ds:[esi]
  40fff9:	add    eax,edx
  40fffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffc:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fffe:	shl    BYTE PTR [edx],0x14
  410001:	loop   0x40fff7
  410003:	push   edx
  410004:	mov    esp,0x604887e5
  410009:	cld    
  41000a:	call   0x82c0249c
  41000f:	ds cwde 
  410011:	sbb    eax,0xa912d027
  410016:	mov    edx,0x7afa3adf
  41001b:	cmp    cl,cl
  41001d:	mov    cl,0x99
  41001f:	rol    ebx,cl
  410021:	loopne 0x410099
  410023:	mov    ds:0x37b874ab,eax
  410028:	xor    DWORD PTR [edx+0x6be3fd05],esp
  41002e:	mov    WORD PTR ds:[ecx],es
  410031:	sbb    al,0xa2
  410033:	push   edx
  410034:	cmp    al,0x76
  410036:	sub    al,0x64
  410038:	inc    esp
  410039:	mov    bh,0xeb
  41003b:	imul   esp,ecx,0xc2ba8e85
  410041:	sbb    al,0x87
  410043:	xlat   BYTE PTR ds:[ebx]
  410044:	xor    ebx,edi
  410046:	xor    DWORD PTR [eax-0x101e2f7b],0x3e
  41004d:	not    BYTE PTR [esi+0x74]
  410050:	xor    BYTE PTR [ebx],ah
  410052:	dec    ebx
  410053:	cmp    al,dh
  410055:	fiadd  DWORD PTR [esp+esi*4]
  410058:	mov    al,BYTE PTR [bx-0x5b]
  41005c:	mov    ah,0x9d
  41005e:	mov    esi,0xf4c400a7
  410063:	sahf   
  410064:	pop    edx
  410065:	cmp    dl,BYTE PTR [eax+0x42bacfca]
  41006b:	jbe    0x410077
  41006d:	adc    edx,DWORD PTR [ecx]
  41006f:	or     bl,cl
  410071:	mov    al,0x8d
  410073:	cmp    ax,0x1495
  410077:	sub    DWORD PTR [ecx],0xfebd1c34
  41007d:	jne    0x4100fc
  41007f:	int    0xbc
  410081:	ds clc 
  410083:	(bad)  
  410084:	shl    DWORD PTR [esi-0x6b],1
  410087:	fiadd  WORD PTR [esi-0x40]
  41008a:	iret   
  41008b:	jmp    0x410102
  41008d:	inc    eax
  41008e:	mov    cl,0x71
  410090:	or     eax,0xc3133aa5
  410095:	jecxz  0x4100e0
  410097:	push   ecx
  410098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410099:	add    BYTE PTR [esi-0x52],dl
  41009c:	mov    dl,0x61
  41009e:	test   BYTE PTR [edi+0x184bb256],0xca
  4100a5:	push   ebp
  4100a6:	lock fstp TBYTE PTR [ecx+0x7c]
  4100aa:	iret   
  4100ab:	inc    esp
  4100ac:	xchg   ebp,eax
  4100ad:	daa    
  4100ae:	je     0x4100fb
  4100b0:	repnz out 0x4d,al
  4100b3:	ins    BYTE PTR es:[edi],dx
  4100b4:	mov    edi,0xd97878e7
  4100b9:	out    0x22,eax
  4100bb:	dec    esi
  4100bc:	jo     0x41012a
  4100be:	dec    edi
  4100bf:	ins    DWORD PTR es:[edi],dx
  4100c0:	sbb    eax,0x13bc0660
  4100c5:	ss aam 0x77
  4100c8:	bound  edx,QWORD PTR [ebx]
  4100ca:	and    esp,edx
  4100cc:	and    BYTE PTR [edi+0x2c],ah
  4100cf:	xchg   edi,eax
  4100d0:	mov    eax,0x6449bee4
  4100d5:	rcr    BYTE PTR [esi+0x4d],1
  4100d8:	push   cs
  4100d9:	cmp    bl,BYTE PTR [esi]
  4100db:	xor    al,0xf2
  4100dd:	retf   
  4100de:	push   0xffffffd5
  4100e0:	xor    edx,DWORD PTR [ecx+0x66332646]
  4100e6:	jecxz  0x4100e8
  4100e8:	lods   al,BYTE PTR ds:[esi]
  4100e9:	cmp    bh,0x46
  4100ec:	mov    ah,0x9
  4100ee:	or     esp,ebp
  4100f0:	lods   eax,DWORD PTR ds:[esi]
  4100f1:	mov    eax,ds:0x25052bd0
  4100f6:	mov    ebx,DWORD PTR [edi]
  4100f8:	ret    0xf2c3
  4100fb:	adc    dl,BYTE PTR [eax-0x27b48b36]
  410101:	cs and dl,al
  410104:	inc    eax
  410105:	or     BYTE PTR [ecx+0x5e7543f3],bl
  41010b:	mov    BYTE PTR [edi+0x108444cc],dl
  410111:	js     0x4100c7
  410113:	cmp    edx,DWORD PTR [ebp-0x6]
  410116:	int    0x75
  410118:	pusha  
  410119:	pop    ss
  41011a:	pop    ss
  41011b:	inc    ecx
  41011c:	pop    esi
  41011d:	push   ebx
  41011e:	push   ebp
  41011f:	sbb    al,0x4e
  410121:	pusha  
  410122:	(bad)  
  410124:	into   
  410125:	ss dec ebx
  410127:	jmp    0x12e9:0xc1ee3efb
  41012e:	mov    edx,0xa0495820
  410133:	mov    ah,BYTE PTR [edi-0x5c]
  410136:	dec    esp
  410137:	push   ecx
  410138:	daa    
  410139:	sbb    bh,dl
  41013b:	sbb    BYTE PTR [eax],bl
  41013d:	pop    esi
  41013e:	mov    bh,0xe2
  410140:	popa   
  410141:	sysret 
  410143:	cdq    
  410144:	lds    ebx,FWORD PTR [ecx+0x5b]
  410147:	pop    esi
  410148:	add    cl,BYTE PTR [esi-0x5c]
  41014b:	dec    edi
  41014c:	jecxz  0x4100cf
  41014e:	pop    ss
  41014f:	int    0x5a
  410151:	daa    
  410152:	adc    eax,0xaa1cea54
  410157:	icebp  
  410158:	pop    ecx
  410159:	sbb    edi,DWORD PTR [ebx]
  41015b:	inc    ecx
  41015c:	lods   eax,DWORD PTR ds:[esi]
  41015d:	and    ecx,DWORD PTR [edi-0x69]
  410160:	shl    BYTE PTR [eax],1
  410162:	fadd   QWORD PTR [ebp+0x42]
  410165:	fsub   DWORD PTR [ebp+ebp*1-0x55]
  410169:	jg     0x410112
  41016b:	pop    ds
  41016c:	or     DWORD PTR [edx-0x6bd2f517],ebx
  410172:	in     al,0x34
  410174:	test   DWORD PTR [ebx],eax
  410176:	cmp    DWORD PTR [ebx],esp
  410178:	fwait
  410179:	push   ds
  41017a:	outs   dx,BYTE PTR ds:[esi]
  41017b:	and    bl,ch
  41017d:	or     al,0x79
  41017f:	into   
  410180:	in     eax,dx
  410181:	sahf   
  410182:	xchg   DWORD PTR [eax],ecx
  410184:	or     al,0x54
  410186:	aas    
  410187:	pop    esp
  410188:	xor    al,0x17
  41018a:	jae    0x41019a
  41018c:	neg    DWORD PTR [ecx+0x72]
  41018f:	mov    esp,0xf674d019
  410194:	mov    bl,0xf6
  410196:	mov    ss,WORD PTR [ecx+0xf]
  410199:	xor    ebx,DWORD PTR [eax]
  41019b:	stos   BYTE PTR es:[edi],al
  41019c:	push   edi
  41019d:	ficom  WORD PTR [ebx+0x1c]
  4101a0:	pop    eax
  4101a1:	mov    ebx,0x5de02631
  4101a6:	js     0x410217
  4101a8:	mov    eax,ds:0xdad77752
  4101ad:	jb     0x4101d2
  4101af:	and    BYTE PTR [esi-0x6926f9e2],ah
  4101b5:	dec    edi
  4101b6:	pop    eax
  4101b7:	sbb    DWORD PTR [ecx-0x37],esp
  4101ba:	mov    eax,DWORD PTR [ebx-0x5b]
  4101bd:	cmp    BYTE PTR [ecx+0x4e],bl
  4101c0:	sahf   
  4101c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c2:	fcmovu st,st(6)
  4101c4:	sub    ecx,esi
  4101c6:	cmp    dl,BYTE PTR [eax-0x5ad5ff0e]
  4101cc:	out    dx,al
  4101cd:	mov    ds:0x787a80df,al
  4101d2:	xchg   ebp,eax
  4101d3:	lock aam 0xa6
  4101d6:	inc    edx
  4101d7:	test   eax,0xe9ae24d
  4101dc:	xchg   esp,eax
  4101dd:	leave  
  4101de:	fnstcw WORD PTR [edx]
  4101e0:	idiv   DWORD PTR [edx-0x42]
  4101e3:	jae    0x4101c1
  4101e5:	sbb    eax,0xe1f6469f
  4101ea:	popaw  
  4101ec:	xchg   esp,eax
  4101ed:	adc    ecx,ebx
  4101ef:	push   ebp
  4101f0:	inc    ecx
  4101f1:	adc    eax,0xe0aa4c1e
  4101f6:	inc    ebp
  4101f7:	jne    0x410197
  4101f9:	sahf   
  4101fa:	fistp  QWORD PTR [ebp-0x4c58316]
  410200:	xchg   esi,eax
  410201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410202:	lock sbb ch,BYTE PTR [esi]
  410205:	int    0xf8
  410207:	mov    eax,ds:0xbf6dc3e8
  41020c:	pop    edi
  41020d:	loopne 0x410272
  41020f:	and    esi,DWORD PTR [ebx+0x67]
  410212:	sub    cl,BYTE PTR [eax]
  410214:	xchg   edi,eax
  410215:	jmp    0x41023c
  410217:	arpl   si,bp
  410219:	pusha  
  41021a:	inc    ecx
  41021b:	mov    dl,0x35
  41021d:	scas   al,BYTE PTR es:[edi]
  41021e:	loope  0x4101ac
  410220:	or     BYTE PTR [ebp+0x1407b76e],ah
  410226:	pop    ecx
  410227:	sbb    BYTE PTR [edi],al
  410229:	fwait
  41022a:	jne    0x41025a
  41022c:	adc    bl,bh
  41022e:	mov    dh,0x93
  410230:	mov    esi,0x5a313917
  410235:	dec    edx
  410236:	xchg   BYTE PTR [edx+eax*4-0x7224ccf6],dh
  41023d:	fld    TBYTE PTR [eax-0x2e]
  410240:	pushf  
  410241:	fsubr  st,st(1)
  410243:	data16 mov al,ds:0x39364d8
  410249:	lahf   
  41024a:	in     eax,dx
  41024b:	xchg   edx,eax
  41024c:	jbe    0x41028f
  41024e:	lahf   
  41024f:	push   es
  410250:	pop    ds
  410251:	xchg   edx,eax
  410252:	inc    edi
  410253:	add    edi,esp
  410255:	(bad)  
  410256:	fs mov dh,0xa6
  410259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025a:	jb     0x410273
  41025c:	xchg   esi,eax
  41025d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41025e:	adc    al,0x24
  410260:	mov    bl,0xad
  410262:	jle    0x410241
  410264:	jle    0x4102b4
  410266:	es or  esp,edi
  410269:	cmp    eax,0x1ccaaa
  41026e:	pop    esp
  41026f:	sbb    bh,dh
  410271:	xchg   BYTE PTR [edi-0x60],ah
  410274:	jno    0x4102de
  410276:	mov    ds:0xfda2088b,al
  41027b:	fsub   QWORD PTR [ebp-0x21edf059]
  410281:	outs   dx,BYTE PTR ds:[esi]
  410282:	mov    bh,BYTE PTR [esi-0x5d355e5b]
  410288:	ret    0xbd09
  41028b:	rcl    BYTE PTR [ecx+ecx*4+0x3d],1
  41028f:	lock or BYTE PTR [esi],dl
  410292:	adc    al,0xee
  410294:	cwde   
  410295:	call   FWORD PTR [edx+0x3c]
  410298:	pushf  
  410299:	xchg   esp,eax
  41029a:	aam    0x86
  41029c:	xchg   esi,eax
  41029d:	dec    esi
  41029e:	push   0x4c
  4102a0:	jmp    0x6175:0xa752ad82
  4102a7:	ins    BYTE PTR es:[edi],dx
  4102a8:	sbb    al,0x97
  4102aa:	jb     0x41026f
  4102ac:	xlat   BYTE PTR ds:[ebx]
  4102ad:	mov    ah,0xdd
  4102af:	and    cl,BYTE PTR [edx+ebp*2+0x265047c4]
  4102b6:	mov    cl,BYTE PTR [ebp-0x47]
  4102b9:	iret   
  4102ba:	js     0x4102a1
  4102bc:	mov    eax,DWORD PTR [edx]
  4102be:	dec    edi
  4102bf:	and    al,0x94
  4102c1:	inc    esp
  4102c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c4:	bound  eax,QWORD PTR [ebx]
  4102c6:	push   cs
  4102c7:	or     DWORD PTR [edi+0x4237b05c],0x51
  4102ce:	sub    eax,0x1a6ca55
  4102d3:	dec    esi
  4102d4:	inc    ebx
  4102d5:	lea    esp,[eax]
  4102d7:	xchg   esp,eax
  4102d8:	icebp  
  4102d9:	jecxz  0x4102d8
  4102db:	add    edx,edi
  4102dd:	inc    ebp
  4102de:	xor    dh,bh
  4102e0:	mov    al,ds:0xd4797524
  4102e5:	push   ebx
  4102e6:	(bad)  
  4102e8:	shl    bh,0x3
  4102eb:	jge    0x410342
  4102ed:	test   DWORD PTR [ebp+0x4a],ebp
  4102f0:	add    al,ch
  4102f2:	imul   esi,DWORD PTR [eax+0xeda9a0f],0xffffffbb
  4102f9:	mov    ds:0x74240679,eax
  4102fe:	or     DWORD PTR [edx],edi
  410300:	ins    BYTE PTR es:[edi],dx
  410301:	jnp    0x4102f8
  410303:	lock dec ecx
  410305:	add    edi,eax
  410307:	(bad)  
  410308:	jo     0x4102ff
  41030a:	xor    al,0x5d
  41030c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41030e:	dec    edx
  41030f:	adc    BYTE PTR [ebp+0x2cce3e68],ah
  410315:	fstp   TBYTE PTR [ebp-0x6]
  410318:	push   ds
  410319:	jne    0x4102e8
  41031b:	dec    ebx
  41031c:	xchg   edx,eax
  41031d:	xchg   esp,eax
  41031e:	xchg   esp,eax
  41031f:	sahf   
  410320:	pop    esi
  410321:	int    0x46
  410323:	push   0xaaf333e1
  410328:	and    ch,BYTE PTR [ebp+0x7bf4122a]
  41032e:	push   0x1189b72
  410333:	jbe    0x410377
  410335:	test   dl,bh
  410337:	inc    edx
  410338:	mov    ebp,0x38466ddc
  41033d:	dec    ebx
  41033e:	jmp    0x2a21:0x1e44dfaa
  410345:	push   esp
  410346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410347:	cs in  eax,0xb6
  41034a:	and    eax,0x398f19ee
  41034f:	jmp    DWORD PTR [esp+eax*4]
  410352:	test   ebx,edx
  410354:	inc    edx
  410355:	jg     0x41032f
  410357:	pop    ebp
  410358:	arpl   cx,bx
  41035a:	push   es
  41035b:	retf   
  41035c:	out    dx,eax
  41035d:	scas   eax,DWORD PTR es:[edi]
  41035e:	jo     0x4102ee
  410360:	stos   DWORD PTR es:[edi],eax
  410361:	imul   esp,DWORD PTR [esi],0xcd55fa49
  410367:	ds sbb eax,0x32df9de8
  41036d:	mov    ecx,0xef5f824c
  410372:	xor    al,0xac
  410374:	dec    ebp
  410375:	in     al,dx
  410376:	lea    ecx,[ebx+0x35]
  410379:	jle    0x4103a0
  41037b:	and    eax,0x5d130158
  410380:	and    ebx,ebp
  410382:	nop
  410383:	call   0x7fc98843
  410388:	gs jle 0x410312
  41038b:	mov    ds:0xfed82a09,al
  410390:	cmp    BYTE PTR [edx],dh
  410392:	mov    ah,0xac
  410394:	scas   eax,DWORD PTR es:[edi]
  410395:	pop    ss
  410396:	add    bh,BYTE PTR cs:[edi]
  410399:	xchg   DWORD PTR [ebp-0xbd45c7c],ebp
  41039f:	call   0x42b7:0x8c4bf470
  4103a6:	sub    cl,al
  4103a8:	sub    esp,DWORD PTR [ebx+0x550d892c]
  4103ae:	mov    dl,0xcb
  4103b0:	mov    al,0x69
  4103b2:	in     eax,0x78
  4103b4:	fwait
  4103b5:	add    DWORD PTR [ebp-0x2e],edx
  4103b8:	or     BYTE PTR [esi-0x6],dh
  4103bb:	cmp    al,0x7f
  4103bd:	aaa    
  4103be:	scas   al,BYTE PTR es:[edi]
  4103bf:	cs out 0xf0,al
  4103c2:	mov    al,0x33
  4103c4:	cwde   
  4103c5:	lods   al,BYTE PTR ds:[esi]
  4103c6:	adc    dl,ch
  4103c8:	jnp    0x41035c
  4103ca:	iret   
  4103cb:	scas   al,BYTE PTR es:[edi]
  4103cc:	mov    ds:0xa2528ea4,eax
  4103d1:	push   esi
  4103d2:	jns    0x41036b
  4103d4:	aaa    
  4103d5:	jo     0x41041d
  4103d7:	fisubr DWORD PTR [ecx]
  4103d9:	std    
  4103da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103db:	or     DWORD PTR [esi],edx
  4103dd:	nop
  4103de:	dec    ecx
  4103df:	loop   0x410428
  4103e1:	jp     0x410422
  4103e3:	push   eax
  4103e4:	or     DWORD PTR [ebp+0x367d743e],esp
  4103ea:	cmp    BYTE PTR [eax-0x7c68f8af],bl
  4103f0:	pop    es
  4103f1:	and    ebx,DWORD PTR [ebx]
  4103f3:	inc    edi
  4103f4:	add    BYTE PTR [edi+0x7cf59a6c],ah
  4103fa:	jno    0x410406
  4103fc:	cmc    
  4103fd:	popf   
  4103fe:	sub    DWORD PTR [eax],ebx
  410400:	lods   eax,DWORD PTR ds:[esi]
  410401:	icebp  
  410402:	mov    ah,0x4e
  410404:	addr16 int 0xd7
  410407:	stc    
  410408:	(bad)  
  410409:	cmp    al,0xfc
  41040b:	outs   dx,DWORD PTR ds:[esi]
  41040c:	ret    
  41040d:	or     cl,BYTE PTR [ecx]
  41040f:	inc    edi
  410410:	adc    BYTE PTR [ecx+0x6c21ea27],al
  410416:	pop    ecx
  410417:	push   eax
  410418:	sbb    al,0xe4
  41041a:	shl    BYTE PTR [eax],0xa3
  41041d:	sahf   
  41041e:	aam    0x5
  410420:	pop    edi
  410421:	push   DWORD PTR [edi]
  410423:	inc    ebp
  410424:	ja     0x41042b
  410426:	mov    ds,edx
  410428:	fs inc edi
  41042a:	jae    0x410408
  41042c:	sub    eax,0x472c8967
  410431:	lods   al,BYTE PTR ds:[esi]
  410432:	(bad)  
  410433:	adc    bh,BYTE PTR [esi]
  410435:	sbb    bl,BYTE PTR [ebp-0x1a6dc445]
  41043b:	push   eax
  41043c:	pop    edx
  41043d:	push   0x2515472d
  410442:	sub    eax,0x12112234
  410447:	pop    esp
  410448:	test   eax,0xe2b0f0ea
  41044d:	(bad)  
  41044f:	mov    WORD PTR [edi+0x31],gs
  410452:	loope  0x4103dd
  410454:	pop    edx
  410455:	pusha  
  410456:	and    dl,BYTE PTR ds:0xa10c8b9a
  41045c:	mov    cl,0x2a
  41045e:	cmp    DWORD PTR [edi+eax*1],0x3f
  410462:	sti    
  410463:	outs   dx,DWORD PTR ds:[esi]
  410464:	inc    ecx
  410465:	inc    esi
  410466:	push   cs
  410467:	inc    esp
  410468:	pop    edi
  410469:	jmp    0xdef4:0x58483e3a
  410470:	test   BYTE PTR ds:0x1e5d1680,bl
  410476:	pop    esi
  410477:	mov    bl,BYTE PTR [edi-0x1ffdb7e8]
  41047d:	and    bl,BYTE PTR [edx-0x5be5ab75]
  410483:	ret    0x7d2b
  410486:	rcl    DWORD PTR [esi+0x1],cl
  410489:	scas   eax,DWORD PTR es:[edi]
  41048a:	cmc    
  41048b:	sub    DWORD PTR [ecx],ebp
  41048d:	adc    al,0xd8
  41048f:	stos   BYTE PTR es:[edi],al
  410490:	lods   eax,DWORD PTR ds:[esi]
  410491:	pop    edx
  410492:	add    cl,ch
  410494:	sbb    esi,DWORD PTR [ebp+0x703a9bdf]
  41049a:	mov    edi,DWORD PTR [esi+0x33]
  41049d:	and    bl,BYTE PTR [ebx]
  41049f:	dec    ecx
  4104a0:	mov    ebp,0x9c3cf94b
  4104a5:	xchg   esp,eax
  4104a6:	jae    0x410482
  4104a8:	mov    esp,0x378613fb
  4104ad:	dec    ebx
  4104ae:	adc    BYTE PTR [edx],ah
  4104b0:	cmp    eax,0xf183f160
  4104b5:	pushf  
  4104b6:	and    eax,0xe48e170c
  4104bb:	neg    DWORD PTR [eax]
  4104bd:	add    al,0x9a
  4104bf:	inc    ebx
  4104c0:	mov    edx,edx
  4104c2:	add    BYTE PTR [ebx-0x44],ah
  4104c5:	mov    ebp,edx
  4104c7:	xchg   ebx,eax
  4104c8:	retf   0x8a28
  4104cb:	xor    DWORD PTR [ebx+0x1b],0x4f
  4104cf:	repz in eax,dx
  4104d1:	pop    eax
  4104d2:	(bad)  
  4104d3:	cld    
  4104d4:	mov    ah,0x20
  4104d6:	jno    0x410524
  4104d8:	push   es
  4104d9:	out    dx,eax
  4104da:	xchg   esp,eax
  4104db:	data16 sbb cl,BYTE PTR [ebp+esi*8-0x72cc36be]
  4104e3:	mov    dh,BYTE PTR [edi+0x2]
  4104e6:	mov    eax,0x18c022d
  4104eb:	lock xchg ebx,eax
  4104ed:	test   eax,0x2a212e0
  4104f2:	cmp    bh,BYTE PTR [esi+0x57]
  4104f5:	lds    esp,FWORD PTR [edx-0x24]
  4104f8:	(bad)  
  4104f9:	and    eax,0xbd723570
  4104fe:	sub    al,0xa8
  410500:	mov    ebp,cs
  410502:	mov    al,ds:0xa5ba040b
  410507:	push   cs
  410508:	(bad)  
  410509:	xor    DWORD PTR [esi+0x6fffba3e],edi
  41050f:	fiadd  WORD PTR [ecx+edx*4+0x42cfc1d5]
  410516:	sub    DWORD PTR [eax+ebp*1+0x7a],ecx
  41051a:	fbstp  TBYTE PTR [ecx+0x75809ea5]
  410520:	push   esp
  410521:	jmp    0x95e4f364
  410526:	dec    edi
  410527:	dec    edx
  410528:	and    al,0xe4
  41052a:	mov    ebp,0x4c0800dc
  41052f:	bound  esi,QWORD PTR [edi+ebx*8+0x1]
  410533:	xchg   ebp,eax
  410534:	rcl    DWORD PTR [ebp+0x52],1
  410537:	ret    
  410538:	add    al,0x6c
  41053a:	cmp    ecx,DWORD PTR [ebx-0x6e]
  41053d:	fwait
  41053e:	popa   
  41053f:	loope  0x4104f9
  410541:	aaa    
  410542:	cmp    BYTE PTR [ebx+0x8a2d3],0xcd
  410549:	(bad)  
  41054a:	(bad)  
  41054b:	aam    0x5f
  41054d:	sbb    bl,BYTE PTR [edx]
  41054f:	dec    esp
  410550:	cmp    eax,0x56ef0838
  410555:	iret   
  410556:	inc    ebx
  410557:	cli    
  410558:	bound  ecx,QWORD PTR [esi-0x36]
  41055b:	popf   
  41055c:	lds    eax,FWORD PTR [ecx-0x36]
  41055f:	fild   WORD PTR [edx]
  410561:	ret    0xa8b2
  410564:	ret    
  410565:	mov    al,0x95
  410567:	xchg   ebx,eax
  410568:	popa   
  410569:	rdpmc  
  41056b:	inc    edi
  41056c:	(bad)  
  41056e:	xchg   ecx,eax
  41056f:	inc    esi
  410570:	sub    eax,0x74b72247
  410575:	sub    al,0x3a
  410577:	sti    
  410578:	repz jp 0x4105b3
  41057b:	push   cs
  41057c:	xchg   esi,eax
  41057d:	mov    dh,0xbe
  41057f:	es inc esp
  410581:	addr16 inc esi
  410583:	sbb    dh,ch
  410585:	mov    eax,0x23e1be69
  41058a:	or     al,0x40
  41058c:	mov    al,ch
  41058e:	xchg   BYTE PTR [eax-0x7b],dl
  410591:	js     0x410546
  410593:	and    al,0xee
  410595:	(bad)  
  410596:	sbb    edi,esi
  410598:	or     eax,0x8744ef9b
  41059d:	pop    eax
  41059e:	inc    edx
  41059f:	mov    ah,BYTE PTR [esi+eax*1+0x29]
  4105a3:	jns    0x41054e
  4105a5:	lock adc dh,BYTE PTR [ebx+0x5b]
  4105a9:	dec    esp
  4105aa:	mov    ecx,0x4b55ae62
  4105af:	push   cs
  4105b0:	xor    bl,BYTE PTR [edi+0x69]
  4105b3:	mov    ds:0x6a740a58,al
  4105b8:	inc    eax
  4105b9:	cmp    al,0x13
  4105bb:	mov    eax,0xc36f84c1
  4105c0:	dec    esp
  4105c1:	int    0xd5
  4105c3:	loopne 0x4105ae
  4105c5:	das    
  4105c6:	xchg   dl,dl
  4105c8:	sbb    BYTE PTR [ecx+0x33],bl
  4105cb:	rcl    BYTE PTR [ecx],cl
  4105cd:	das    
  4105ce:	ja     0x41064e
  4105d0:	sub    BYTE PTR [edi+0x5fd817e9],cl
  4105d6:	mov    bl,0xeb
  4105d8:	int    0x8e
  4105da:	xlat   BYTE PTR ds:[ebx]
  4105db:	je     0x41057e
  4105dd:	dec    edi
  4105de:	mov    ds:0xd88ab897,al
  4105e3:	and    bl,BYTE PTR [ecx+0x2a]
  4105e6:	cmp    esp,DWORD PTR [ebx]
  4105e8:	dec    edi
  4105e9:	popf   
  4105ea:	mov    al,0xd5
  4105ec:	hlt    
  4105ed:	int3   
  4105ee:	inc    edx
  4105ef:	into   
  4105f0:	mov    esi,0x5b99e522
  4105f5:	cmp    eax,0x199cfa28
  4105fa:	je     0x410602
  4105fc:	push   ebp
  4105fd:	in     eax,dx
  4105fe:	ret    0xcf13
  410601:	mov    esi,0x522bbe41
  410606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410607:	mov    edx,0x3b57273a
  41060c:	aaa    
  41060d:	push   edx
  41060e:	or     DWORD PTR [ebx+ebx*4+0x64a6c475],0x66
  410616:	lock jecxz 0x410609
  410619:	push   esp
  41061a:	mov    al,0x7c
  41061c:	iret   
  41061d:	scas   eax,DWORD PTR es:[edi]
  41061e:	inc    edx
  41061f:	and    BYTE PTR fs:[esi+0x4d],al
  410623:	out    dx,al
  410624:	sub    al,0xa1
  410626:	hlt    
  410627:	or     eax,0x913eddda
  41062c:	sbb    esi,eax
  41062e:	or     ebp,0x55
  410631:	xor    bh,BYTE PTR [ecx-0x41]
  410634:	test   DWORD PTR [edi+ecx*8+0x4e59a453],esi
  41063b:	jmp    0x4106b7
  41063d:	inc    eax
  41063e:	dec    ebx
  41063f:	or     BYTE PTR [ebx],bl
  410641:	into   
  410642:	sub    ch,BYTE PTR [edx-0x77afb323]
  410648:	dec    edi
  410649:	mov    dh,0x22
  41064b:	push   ds
  41064c:	xlat   BYTE PTR ds:[ebx]
  41064d:	mov    bh,0x57
  41064f:	retf   0x1ae8
  410652:	enter  0x953a,0x2b
  410656:	nop
  410657:	ins    DWORD PTR es:[edi],dx
  410658:	jmp    0x410674
  41065a:	sbb    dh,cl
  41065c:	xlat   BYTE PTR ds:[ebx]
  41065d:	ins    DWORD PTR es:[edi],dx
  41065e:	sub    edx,ecx
  410660:	mov    BYTE PTR [edi-0x79],al
  410663:	inc    edx
  410664:	icebp  
  410665:	retf   
  410666:	mov    cl,0xd4
  410668:	arpl   cx,dx
  41066a:	push   ebx
  41066b:	mov    BYTE PTR [ecx+ebx*8-0x112fba1e],dl
  410672:	cs mov eax,0xf8ce2875
  410678:	jg     0x41063b
  41067a:	mov    dl,0xed
  41067c:	test   BYTE PTR [eax],al
  41067e:	mov    ecx,0x7b0d43f0
  410683:	scas   al,BYTE PTR es:[di]
  410685:	das    
  410686:	aas    
  410687:	loopne 0x41061e
  410689:	sti    
  41068a:	shr    BYTE PTR [ecx+0x5c],cl
  41068d:	pop    ebp
  41068e:	shl    BYTE PTR [ecx+0x24508439],0x50
  410695:	(bad)  
  410696:	int3   
  410697:	or     ebp,ebp
  410699:	(bad)  
  41069a:	bound  ebp,QWORD PTR [edx]
  41069c:	mov    eax,ds:0x47d825c4
  4106a1:	mov    eax,ds:0x21fcb3a4
  4106a6:	cli    
  4106a7:	and    BYTE PTR [edx],0x35
  4106aa:	outs   dx,BYTE PTR ds:[esi]
  4106ab:	bound  ebp,QWORD PTR [edi+0x56]
  4106ae:	call   0xdf6b7f08
  4106b3:	mov    eax,0x4eb48031
  4106b8:	sbb    al,0xba
  4106ba:	jmp    0x41063f
  4106bc:	sbb    al,0x9f
  4106be:	ffreep st(1)
  4106c0:	xchg   esp,eax
  4106c1:	rcl    DWORD PTR [ebx],0xc2
  4106c4:	ret    0xca99
  4106c7:	mov    ds:0xb08dc9da,eax
  4106cc:	or     DWORD PTR [ebx],0x26
  4106cf:	into   
  4106d0:	and    eax,0x3b5a4bc0
  4106d5:	dec    esp
  4106d6:	xor    BYTE PTR [ebp+0x24],al
  4106d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106da:	loop   0x41072c
  4106dc:	pop    ecx
  4106dd:	xor    ebp,DWORD PTR [esi-0x4d908903]
  4106e3:	xor    BYTE PTR [eax],ah
  4106e5:	outs   dx,BYTE PTR ds:[esi]
  4106e6:	repnz mov ebx,0x1ba3a27b
  4106ec:	or     dh,BYTE PTR [ebp+0x28]
  4106ef:	adc    ecx,DWORD PTR [ecx+0x66ab5b71]
  4106f5:	add    al,0xa6
  4106f7:	popf   
  4106f8:	stos   BYTE PTR es:[edi],al
  4106f9:	popa   
  4106fa:	jecxz  0x410717
  4106fc:	xchg   DWORD PTR [ebp-0x5da07328],esi
  410702:	jecxz  0x4106d7
  410704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410705:	call   0xee94:0x34e0c9d9
  41070c:	movzx  esi,WORD PTR [ecx-0x4a82ab3f]
  410713:	jb     0x410752
  410715:	push   ecx
  410716:	mov    edi,0x589545f2
  41071b:	mov    ebp,0x66aa26bc
  410720:	ds dec esp
  410722:	arpl   WORD PTR [ecx+0x6d8f8f21],sp
  410728:	or     esi,0x949c5ea4
  41072e:	call   0xc62:0xdfd1aa01
  410735:	aas    
  410736:	dec    ebx
  410737:	xor    eax,0x5f2e4e3
  41073c:	mov    edx,0x2d8fe12a
  410741:	mov    ecx,0x426199a7
  410746:	xchg   esi,eax
  410747:	hlt    
  410748:	add    eax,0x6fcb8b21
  41074d:	ins    BYTE PTR es:[edi],dx
  41074e:	inc    esp
  41074f:	mov    ecx,0x31717eda
  410754:	fnsave [edi+0x3d]
  410757:	into   
  410758:	mov    ah,0xba
  41075a:	lahf   
  41075b:	ins    DWORD PTR es:[edi],dx
  41075c:	ja     0x410792
  41075e:	(bad)  
  41075f:	ins    DWORD PTR es:[edi],dx
  410760:	lahf   
  410761:	xor    eax,0x137c1cad
  410766:	inc    esi
  410767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410768:	or     BYTE PTR [esi-0x81d4036],al
  41076e:	pop    es
  41076f:	dec    edi
  410770:	add    esp,DWORD PTR [edi-0x28]
  410773:	ds je  0x4107ee
  410776:	in     eax,dx
  410777:	xor    al,0x28
  410779:	mov    ebx,0x3abddff0
  41077e:	push   esi
  41077f:	pop    edi
  410780:	dec    ebp
  410781:	sub    al,0xf0
  410783:	dec    esp
  410784:	aam    0x72
  410786:	repnz (bad) 
  410788:	loopne 0x41076b
  41078a:	ins    DWORD PTR es:[edi],dx
  41078b:	in     al,dx
  41078c:	jo     0x410783
  41078e:	sub    BYTE PTR [edx-0x2a],bh
  410791:	fdiv   DWORD PTR [esp+ebx*2+0x252b4669]
  410798:	test   DWORD PTR [ecx+0x68456739],ebp
  41079e:	or     ebx,ebx
  4107a0:	inc    eax
  4107a1:	jne    0x4107f1
  4107a3:	cmp    edi,0x7b
  4107a6:	arpl   bx,bx
  4107a8:	cld    
  4107a9:	enter  0x2798,0xb3
  4107ad:	mov    al,0x56
  4107af:	vpminub ymm2,ymm6,YMMWORD PTR [esi+edi*8+0x33076cb4]
  4107b8:	mov    bl,BYTE PTR [edi+eax*4+0x5e]
  4107bc:	in     al,0x1
  4107be:	(bad)  [edi]
  4107c0:	mov    edx,0x6303a00d
  4107c5:	mov    ds:0xf4c78200,al
  4107ca:	(bad)  
  4107cb:	mov    ebp,0x77c2dc73
  4107d0:	jb     0x4107f0
  4107d2:	nop
  4107d3:	sbb    edx,DWORD PTR [eax+0x6ac0d3b1]
  4107d9:	xchg   esi,eax
  4107da:	xchg   esp,eax
  4107db:	ins    DWORD PTR es:[edi],dx
  4107dc:	mov    ch,0xe8
  4107de:	push   0xffffffba
  4107e0:	or     al,0x71
  4107e2:	out    0x9f,al
  4107e4:	mov    ah,0xfb
  4107e6:	out    dx,eax
  4107e7:	xor    eax,0x5d113bed
  4107ec:	cwde   
  4107ed:	sub    bl,BYTE PTR [esi+0x46]
  4107f0:	jmp    0x30a04167
  4107f5:	pop    esi
  4107f6:	sbb    cl,BYTE PTR ds:0xea6c3407
  4107fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107fd:	out    dx,eax
  4107fe:	push   ds
  4107ff:	ss aam 0xb2
  410802:	lds    eax,FWORD PTR [ebx+0x3e3a60ac]
  410808:	mov    ah,0x5e
  41080a:	push   ecx
  41080b:	xor    al,0x7c
  41080d:	mov    bl,0x17
  41080f:	and    ah,al
  410811:	shl    DWORD PTR [edi-0x7e],0x57
  410815:	(bad)  
  410816:	(bad)  
  410818:	out    0x97,al
  41081a:	test   eax,0xe736f963
  41081f:	dec    eax
  410820:	ficom  DWORD PTR [ecx+eiz*4+0x7bce99e1]
  410827:	es push ss
  410829:	int    0xa9
  41082b:	lea    edi,[ecx-0xb]
  41082e:	dec    eax
  41082f:	dec    ebp
  410830:	scas   eax,DWORD PTR es:[edi]
  410831:	mov    ebx,DWORD PTR [edx-0x1f]
  410834:	fistp  DWORD PTR [ebx-0x14]
  410837:	jl     0x410896
  410839:	add    eax,0xe571edd3
  41083e:	inc    ecx
  41083f:	ss test al,0x64
  410842:	sar    BYTE PTR [ebx],1
  410844:	nop
  410845:	sbb    DWORD PTR cs:[ecx-0x465639d4],eax
  41084c:	ins    DWORD PTR es:[edi],dx
  41084d:	fcomi  st,st(1)
  41084f:	sbb    al,0xde
  410851:	or     eax,0x8728259e
  410856:	sub    al,0x76
  410858:	fwait
  410859:	je     0x410808
  41085b:	jl     0x41083a
  41085d:	stos   BYTE PTR es:[edi],al
  41085e:	mov    ds:0xbc685b9f,al
  410863:	mov    DWORD PTR [bx+di+0x45],esp
  410867:	ret    0xec96
  41086a:	pop    ds
  41086b:	icebp  
  41086c:	cmp    BYTE PTR [eax-0x2314e42a],cl
  410872:	dec    esi
  410873:	dec    ecx
  410874:	iret   
  410875:	adc    edi,DWORD PTR [edi+ebx*2]
  410878:	xlat   BYTE PTR ds:[ebx]
  410879:	rol    ch,1
  41087b:	pop    eax
  41087c:	sub    BYTE PTR [ecx+eax*8+0xe0bd82f],bl
  410883:	xchg   edx,eax
  410884:	mov    al,ds:0xbc9d703b
  410889:	outs   dx,BYTE PTR ds:[esi]
  41088a:	pushf  
  41088b:	jmp    0x4108b4
  41088d:	adc    edx,ecx
  41088f:	adc    al,0x84
  410891:	mov    al,0xd4
  410893:	pop    esi
  410894:	retf   0x7be
  410897:	adc    dh,ah
  410899:	stc    
  41089a:	dec    ebp
  41089b:	nop
  41089c:	loope  0x4108f4
  41089e:	rcr    BYTE PTR [ecx],cl
  4108a0:	pop    es
  4108a1:	call   0x6f8d88c4
  4108a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a7:	imul   edx,DWORD PTR [eax-0x52],0xef9329d9
  4108ae:	and    ah,BYTE PTR [eax]
  4108b0:	pop    esi
  4108b1:	fs cmp esi,0xa682b5ac
  4108b8:	xchg   esp,eax
  4108b9:	call   DWORD PTR [esi+0x1e4bb5a7]
  4108bf:	jmp    0xe87c:0xddab6019
  4108c6:	and    DWORD PTR [esi+ebx*8+0x4c],edi
  4108ca:	cmp    esp,DWORD PTR [ebx]
  4108cc:	and    ah,0x2e
  4108cf:	jno    0x410897
  4108d1:	push   0x5e
  4108d3:	cld    
  4108d4:	clc    
  4108d5:	imul   edx,DWORD PTR [ebp+0x6a40257],0x32c29720
  4108df:	ja     0x41090d
  4108e1:	sub    al,0x7a
  4108e3:	int3   
  4108e4:	inc    eax
  4108e5:	sbb    dl,dh
  4108e7:	jo     0x410926
  4108e9:	lods   al,BYTE PTR ds:[esi]
  4108ea:	cdq    
  4108eb:	or     bh,BYTE PTR [edx-0x1f]
  4108ee:	mov    ah,0xd4
  4108f0:	and    edx,DWORD PTR [ebx]
  4108f2:	and    dh,BYTE PTR [esi]
  4108f4:	jns    0x41093d
  4108f6:	jmp    0x41093b
  4108f8:	(bad)  
  4108f9:	adc    bh,al
  4108fb:	ja     0x82539c3b
  410901:	sti    
  410902:	not    BYTE PTR [edx]
  410904:	mov    ?,WORD PTR [si-0x43]
  410908:	xor    al,0x40
  41090a:	jmp    DWORD PTR [eax-0x75]
  41090d:	dec    ebx
  41090e:	lods   eax,DWORD PTR ds:[esi]
  41090f:	aas    
  410910:	fnstsw WORD PTR [edx]
  410912:	jb     0x41093c
  410914:	jle    0x41093e
  410916:	mov    esp,0x57a3d17d
  41091b:	loop   0x41091d
  41091d:	aad    0x3c
  41091f:	push   eax
  410920:	je     0x41090f
  410922:	pop    ebx
  410923:	ror    DWORD PTR [eax+0x2c],0xdb
  410927:	nop
  410928:	popa   
  410929:	jp     0x4109a7
  41092b:	fwait
  41092c:	call   0xd04d:0xbd1970ab
  410933:	sbb    eax,0xef1b9b6e
  410938:	ss stos BYTE PTR es:[edi],al
  41093a:	or     ecx,esi
  41093c:	gs lahf 
  41093e:	fcmovne st,st(1)
  410940:	daa    
  410941:	ins    BYTE PTR es:[edi],dx
  410942:	repnz push ds
  410944:	push   eax
  410945:	test   dl,bl
  410947:	mov    cl,0x7e
  410949:	inc    ebp
  41094a:	out    0x91,al
  41094c:	jl     0x410936
  41094e:	cmp    edi,DWORD PTR [esi+0x38]
  410951:	fistp  QWORD PTR ds:0x3b762368
  410957:	xchg   BYTE PTR [esp+edx*4-0x77],cl
  41095b:	pop    eax
  41095c:	or     al,0x22
  41095e:	adc    BYTE PTR [edi],cl
  410960:	out    dx,al
  410961:	jl     0x410934
  410963:	xor    BYTE PTR [ebx],0x79
  410966:	xor    dh,cl
  410968:	sub    BYTE PTR [eax-0x788c2bf],dl
  41096e:	jmp    0x8ff7:0xbb81d804
  410975:	jle    0x4109d1
  410977:	adc    DWORD PTR [ebx],ebp
  410979:	cld    
  41097a:	xor    ebp,edi
  41097c:	inc    ebp
  41097d:	dec    edi
  41097e:	in     al,0xa1
  410980:	push   ebp
  410981:	pushf  
  410982:	add    ecx,DWORD PTR [ecx+ecx*2+0x26]
  410986:	gs leave 
  410988:	sub    BYTE PTR ds:0x5b66984f,0xca
  41098f:	or     DWORD PTR [edx-0x546d0f9d],edi
  410995:	dec    edx
  410996:	and    esi,esi
  410998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410999:	mov    eax,ds:0xd9ec4522
  41099e:	xor    eax,0xf2e2c231
  4109a3:	push   edx
  4109a4:	dec    esp
  4109a5:	pop    esi
  4109a6:	int    0xe6
  4109a8:	cmp    BYTE PTR [edx+eax*8+0x3e17e54],0xc6
  4109b0:	xlat   BYTE PTR ds:[ebx]
  4109b1:	aaa    
  4109b2:	outs   dx,BYTE PTR ds:[esi]
  4109b3:	pusha  
  4109b4:	mov    ecx,0xcad7988
  4109b9:	mov    dl,0xa9
  4109bb:	icebp  
  4109bc:	jmp    0xb57:0xb5dc0421
  4109c3:	js     0x41094c
  4109c5:	inc    ebx
  4109c6:	(bad)  
  4109c7:	ss dec edi
  4109c9:	xor    DWORD PTR [ecx],esp
  4109cb:	int3   
  4109cc:	enter  0x7193,0x71
  4109d0:	mov    ds:0x56feb165,eax
  4109d5:	push   ss
  4109d6:	sub    BYTE PTR [ebx],bl
  4109d8:	adc    ecx,0xb4460f0c
  4109de:	test   al,0xa5
  4109e0:	aas    
  4109e1:	xchg   ebx,eax
  4109e2:	ret    0x2de9
  4109e5:	and    ah,al
  4109e7:	mov    edx,0x9a690240
  4109ec:	int    0xe0
  4109ee:	adc    esp,edx
  4109f0:	cmp    DWORD PTR [esi+0x2e],0x3b5e1726
  4109f7:	sar    dh,0xad
  4109fa:	mov    al,0x91
  4109fc:	mov    edi,0xf818fa54
  410a01:	xchg   ebp,eax
  410a02:	xchg   ebp,eax
  410a03:	(bad)  [edi+ebx*2-0x65aad695]
  410a0a:	jmp    0x4109d0
  410a0c:	test   al,0x99
  410a0e:	pop    edx
  410a0f:	cwde   
  410a10:	or     eax,0xc2815918
  410a15:	mov    edi,0xcd5f654f
  410a1a:	or     ecx,DWORD PTR [esi+eax*2]
  410a1d:	sub    DWORD PTR [ebp-0xe],esi
  410a20:	push   edi
  410a21:	xchg   ecx,eax
  410a22:	pop    ecx
  410a23:	inc    esp
  410a24:	ror    BYTE PTR [edx+eiz*8+0x212e39c6],cl
  410a2b:	scas   eax,DWORD PTR es:[edi]
  410a2c:	adc    al,0x3
  410a2e:	push   es
  410a2f:	mov    ds:0x8a3c56c2,eax
  410a34:	in     al,dx
  410a35:	das    
  410a36:	adc    DWORD PTR [esp+edi*8-0x6],eax
  410a3a:	rol    cl,0x18
  410a3d:	(bad)  
  410a3e:	int3   
  410a3f:	bound  eax,QWORD PTR [edi-0x65]
  410a42:	jno    0x410a55
  410a44:	into   
  410a45:	pop    edi
  410a46:	stc    
  410a47:	dec    esp
  410a48:	xchg   ecx,eax
  410a49:	and    DWORD PTR [edx-0x493b7475],esp
  410a4f:	lock in al,0xaa
  410a52:	inc    ebp
  410a53:	jb     0x410aad
  410a55:	into   
  410a56:	sub    eax,0x58d956d6
  410a5b:	dec    edi
  410a5c:	xlat   BYTE PTR ds:[ebx]
  410a5d:	mov    ebp,0xa13b370f
  410a62:	pop    edi
  410a63:	jmp    0xcf66:0x36a28c15
  410a6a:	add    DWORD PTR [eax+0x43],edi
  410a6d:	sub    DWORD PTR [ebx*2+0x1cb5eb2c],ecx
  410a74:	jo     0x410af1
  410a76:	mov    DWORD PTR [esi],eax
  410a78:	cmc    
  410a79:	leave  
  410a7a:	out    0xab,al
  410a7c:	in     eax,0xad
  410a7e:	add    eax,0x2f28d1f7
  410a83:	mov    ebp,0x9e013bbd
  410a88:	test   ecx,0x5a4eaa0c
  410a8e:	clc    
  410a8f:	add    eax,0x4598d232
  410a94:	stos   BYTE PTR es:[edi],al
  410a95:	xor    DWORD PTR [ebp+0x2f],ecx
  410a98:	test   cl,0xb0
  410a9b:	cmp    eax,0xbc5e010c
  410aa0:	sub    edx,DWORD PTR [edi]
  410aa2:	pop    ebx
  410aa3:	outs   dx,DWORD PTR ds:[esi]
  410aa4:	jno    0x410ae5
  410aa6:	mov    cl,0x79
  410aa8:	add    al,0xca
  410aaa:	push   esp
  410aab:	sbb    al,BYTE PTR [esi]
  410aad:	aaa    
  410aae:	add    bh,bh
  410ab0:	arpl   WORD PTR [esi+ebp*8],dx
  410ab3:	idiv   DWORD PTR [esi+0x35]
  410ab6:	fidiv  DWORD PTR [ecx+eax*1]
  410ab9:	cld    
  410aba:	xor    bl,dh
  410abc:	xchg   edx,eax
  410abd:	dec    edi
  410abe:	mov    edi,0x4ccbe3a5
  410ac3:	pop    ecx
  410ac4:	aad    0xf7
  410ac6:	ins    BYTE PTR es:[edi],dx
  410ac7:	jns    0x410aec
  410ac9:	fcomp  DWORD PTR [esi]
  410acb:	mov    ss,WORD PTR [eax+edi*4]
  410ace:	outs   dx,BYTE PTR ds:[esi]
  410acf:	out    dx,al
  410ad0:	xchg   esi,eax
  410ad1:	sbb    eax,0xf766487d
  410ad6:	fsubrp st(2),st
  410ad8:	jp     0x410a5e
  410ada:	test   DWORD PTR [edi-0x3e],edi
  410add:	gs pop ss
  410adf:	mov    al,0x56
  410ae1:	das    
  410ae2:	and    DWORD PTR [esi-0x5518e5e0],eax
  410ae8:	pushf  
  410ae9:	test   DWORD PTR [edi+0x64],ecx
  410aec:	mov    al,0x15
  410aee:	cs int 0xba
  410af1:	dec    ebx
  410af2:	mov    al,0xd
  410af4:	les    esp,FWORD PTR [edx]
  410af6:	mov    al,ch
  410af8:	push   cs
  410af9:	adc    ebx,edi
  410afb:	pop    ebx
  410afc:	div    DWORD PTR [ebp+edi*4-0x45c9eac6]
  410b03:	call   0x3a29629f
  410b08:	inc    edx
  410b09:	and    al,0x24
  410b0b:	xor    DWORD PTR [esp+esi*4+0x2d872ed2],0xa181a2a
  410b16:	inc    ecx
  410b17:	data16 jp 0x410b95
  410b1a:	push   eax
  410b1b:	nop
  410b1c:	(bad)  
  410b1d:	jbe    0x410afe
  410b1f:	loop   0x410b36
  410b21:	iret   
  410b22:	aad    0x69
  410b24:	aad    0x40
  410b26:	les    eax,FWORD PTR [edi]
  410b28:	push   ebx
  410b29:	cwde   
  410b2a:	xchg   edx,eax
  410b2b:	(bad)  
  410b2d:	xchg   ebp,eax
  410b2e:	pop    es
  410b2f:	out    dx,eax
  410b30:	jae    0x410b7a
  410b32:	popa   
  410b33:	inc    ebp
  410b34:	test   al,0x62
  410b36:	add    eax,edx
  410b38:	jno    0x410aba
  410b3a:	and    esp,DWORD PTR [ebp+0x4d]
  410b3d:	das    
  410b3e:	jnp    0x410b04
  410b40:	and    al,ah
  410b42:	sbb    esp,ebp
  410b44:	push   esp
  410b45:	jo     0x410b75
  410b47:	mov    dh,0xf5
  410b49:	lahf   
  410b4a:	dec    ebp
  410b4b:	xchg   ebx,eax
  410b4c:	mov    dh,0x5e
  410b4e:	push   ds
  410b4f:	xchg   ebp,eax
  410b50:	inc    ebp
  410b51:	or     ebp,eax
  410b53:	les    ebp,FWORD PTR [si+0x2b]
  410b57:	sbb    dh,ch
  410b59:	xchg   ebx,eax
  410b5a:	in     eax,0x5b
  410b5c:	inc    edx
  410b5d:	inc    ebp
  410b5e:	add    al,0x76
  410b60:	gs scas al,BYTE PTR es:[edi]
  410b62:	pop    ebp
  410b63:	push   ebp
  410b64:	shr    eax,cl
  410b66:	dec    esp
  410b67:	jmp    0xa9ccecf4
  410b6c:	pusha  
  410b6d:	ss inc ecx
  410b6f:	cwde   
  410b70:	xchg   edx,eax
  410b71:	xchg   ebx,eax
  410b72:	into   
  410b73:	add    al,BYTE PTR [edi-0xa2d5339]
  410b79:	mov    dl,bl
  410b7b:	ja     0x410b68
  410b7d:	and    eax,0xfd2b216a
  410b82:	pop    ds
  410b83:	ja     0x410b0f
  410b85:	gs in  al,dx
  410b87:	xor    ch,BYTE PTR [ebx+0x41]
  410b8a:	je     0x410b4b
  410b8c:	iret   
  410b8d:	scas   eax,DWORD PTR es:[edi]
  410b8e:	mov    esi,edi
  410b90:	sub    DWORD PTR [edi-0x43],eax
  410b93:	mov    ch,0xa9
  410b95:	sub    BYTE PTR [eax],bl
  410b97:	inc    esi
  410b98:	pop    ecx
  410b99:	lods   eax,DWORD PTR ds:[esi]
  410b9a:	stos   DWORD PTR es:[edi],eax
  410b9b:	sub    bl,0xd7
  410b9e:	mov    ch,0xe8
  410ba0:	mov    al,ds:0xc8659e33
  410ba5:	pop    esp
  410ba6:	cdq    
  410ba7:	push   0xfffffffa
  410ba9:	xchg   ebx,eax
  410baa:	add    DWORD PTR [esi+0x72],0x89d97110
  410bb1:	int3   
  410bb2:	shl    BYTE PTR [esi+0x57],cl
  410bb5:	xchg   BYTE PTR [edx+ecx*4],dl
  410bb8:	push   ebp
  410bb9:	mov    WORD PTR [ecx+0x7d172301],fs
  410bbf:	add    eax,0x6468dec3
  410bc4:	sub    al,0xae
  410bc6:	js     0x410c21
  410bc8:	push   ebp
  410bc9:	aas    
  410bca:	add    eax,0x4a8ae5fc
  410bcf:	repnz inc ebp
  410bd1:	sbb    al,0x39
  410bd3:	mov    edx,0x3c82c292
  410bd8:	and    al,dl
  410bda:	pop    es
  410bdb:	mov    al,ds:0x288b8257
  410be0:	or     eax,0x24a40b1b
  410be5:	cmc    
  410be6:	iret   
  410be7:	shl    BYTE PTR [edi+0x53],cl
  410bea:	and    eax,0x4a2ec6a2
  410bef:	loopne 0x410c65
  410bf1:	scas   eax,DWORD PTR es:[edi]
  410bf2:	inc    ebx
  410bf3:	adc    ah,al
  410bf5:	adc    eax,0x5cf140b6
  410bfa:	push   0x9d294610
  410bff:	nop
  410c00:	and    eax,0x4375a30f
  410c05:	inc    ebp
  410c06:	mov    al,0x9b
  410c08:	sub    eax,0x7367f886
  410c0d:	outs   dx,BYTE PTR ds:[esi]
  410c0e:	(bad)  
  410c10:	pop    edi
  410c11:	xchg   BYTE PTR [esi],ch
  410c13:	rcl    DWORD PTR [edx+0x28],0x79
  410c17:	xor    eax,0x86f1cc90
  410c1c:	lods   al,BYTE PTR ds:[esi]
  410c1d:	std    
  410c1e:	out    0xa3,al
  410c20:	icebp  
  410c21:	xchg   ecx,eax
  410c22:	and    bl,BYTE PTR [edi+0x24c14737]
  410c28:	lock inc esi
  410c2a:	push   0xffffffec
  410c2c:	pop    edx
  410c2d:	mov    DWORD PTR [ebp-0x79fde173],edi
  410c33:	test   al,0xd6
  410c35:	in     eax,0x68
  410c37:	ret    
  410c38:	mov    edi,0x7d364aa7
  410c3d:	fcomp  DWORD PTR [ebp-0x3a72bf23]
  410c43:	mov    eax,ds:0x6f23c5aa
  410c48:	out    0x62,ax
  410c4b:	jle    0x410c15
  410c4d:	xlat   BYTE PTR ds:[ebx]
  410c4e:	mov    dl,BYTE PTR [ebp+0x2e4439da]
  410c54:	bound  eax,QWORD PTR [esi-0x1175f359]
  410c5a:	adc    al,dl
  410c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c5d:	push   esp
  410c5e:	pop    edx
  410c5f:	mov    WORD PTR [ebx-0x6b],cs
  410c62:	mov    ds:0xbc375287,al
  410c67:	(bad)  [eax+0x2f]
  410c6a:	ficom  DWORD PTR [ecx]
  410c6c:	and    dl,al
  410c6e:	pop    edx
  410c6f:	leave  
  410c70:	out    0xb,eax
  410c72:	or     ebp,DWORD PTR [ebx-0x24]
  410c75:	je     0x410c12
  410c77:	popa   
  410c78:	(bad)  
  410c79:	mov    edx,0x635a9a37
  410c7e:	adc    edx,edx
  410c80:	cwde   
  410c81:	imul   ebx,DWORD PTR [esp],0xbdfa2684
  410c88:	pop    edi
  410c89:	sbb    DWORD PTR [edx],ebp
  410c8b:	adc    al,0xcb
  410c8d:	out    dx,al
  410c8e:	lods   al,BYTE PTR ds:[esi]
  410c8f:	xor    DWORD PTR [edi-0x37d2af16],esi
  410c95:	xchg   BYTE PTR [edx],dl
  410c97:	add    al,0xd7
  410c99:	sti    
  410c9a:	js     0xb8c0eb20
  410ca0:	test   BYTE PTR [ebp+0x31],ah
  410ca3:	adc    BYTE PTR [edi-0x59f2000d],0x52
  410caa:	xchg   ebx,eax
  410cab:	fisubr WORD PTR [ebp-0x74]
  410cae:	rcr    DWORD PTR [ebx],0x56
  410cb1:	xlat   BYTE PTR ds:[ebx]
  410cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cb3:	or     esi,DWORD PTR [esi-0x3a]
  410cb6:	jecxz  0x410cf7
  410cb8:	cmp    cl,BYTE PTR [ecx]
  410cba:	jp     0x410d33
  410cbc:	push   ss
  410cbd:	inc    ecx
  410cbe:	sub    BYTE PTR [ebx+0x58],al
  410cc1:	jne    0x410d40
  410cc3:	mov    bh,0x9d
  410cc5:	in     eax,dx
  410cc6:	push   0x929df833
  410ccb:	cli    
  410ccc:	inc    eax
  410ccd:	or     eax,0x61dbd7ee
  410cd2:	int3   
  410cd3:	adc    cl,BYTE PTR [ecx]
  410cd5:	rcl    DWORD PTR [edx+0x2e27210d],0xdb
  410cdc:	pop    bx
  410cde:	mov    ebx,0x87d2b1b5
  410ce3:	push   edx
  410ce4:	lahf   
  410ce5:	pop    ds
  410ce6:	add    ch,al
  410ce8:	in     eax,dx
  410ce9:	or     al,0x30
  410ceb:	inc    esp
  410cec:	int    0xd5
  410cee:	dec    edi
  410cef:	mov    cl,0xb9
  410cf1:	inc    eax
  410cf2:	lock push ebp
  410cf4:	xor    eax,eax
  410cf6:	fs jae 0x410ce9
  410cf9:	jbe    0x410d56
  410cfb:	jmp    0x9ea44404
  410d00:	push   esi
  410d01:	icebp  
  410d02:	or     al,0x17
  410d04:	add    DWORD PTR [edi],edx
  410d06:	jle    0x410d36
  410d08:	ins    WORD PTR es:[edi],dx
  410d0a:	ret    
  410d0b:	adc    eax,0x9e1504d4
  410d10:	sub    eax,0x67d0be8a
  410d15:	push   esi
  410d16:	loop   0x410cf3
  410d18:	and    edi,DWORD PTR [edi+0x59895190]
  410d1e:	sbb    DWORD PTR [edx+0x4a],ecx
  410d21:	mov    ebp,0xee8f0a5c
  410d26:	xchg   ecx,eax
  410d27:	sub    cl,BYTE PTR [ebx]
  410d29:	adc    bl,0x43
  410d2c:	cmp    eax,0xb344d331
  410d31:	dec    DWORD PTR [eax-0x1cd26204]
  410d37:	pop    ebx
  410d38:	stos   BYTE PTR es:[edi],al
  410d39:	es push 0x1bdb3c80
  410d3f:	iret   
  410d40:	stos   DWORD PTR es:[edi],eax
  410d41:	dec    eax
  410d42:	add    esi,DWORD PTR [esi-0x24]
  410d45:	ss std 
  410d47:	stc    
  410d48:	pop    ss
  410d49:	dec    eax
  410d4a:	test   al,0x2a
  410d4c:	mov    ch,0x4e
  410d4e:	(bad)  
  410d4f:	jmp    0x410d7b
  410d51:	aaa    
  410d52:	mov    ebx,es
  410d54:	lock arpl WORD PTR ds:0x74caf778,cx
  410d5b:	call   0x6c013a93
  410d60:	retf   
  410d61:	out    0xad,al
  410d63:	frstor [ebx+0x78]
  410d66:	das    
  410d67:	or     DWORD PTR [eax+0x1d],esp
  410d6a:	fwait
  410d6b:	mov    eax,0x78a4f2ef
  410d70:	mov    ds:0x1250e5fc,al
  410d75:	xor    eax,0xaecc3a43
  410d7a:	pop    eax
  410d7b:	jp     0x410d4c
  410d7d:	iret   
  410d7e:	rcl    DWORD PTR [ecx-0x135c1f7c],0x92
  410d85:	data16 sti 
  410d87:	fs (bad) 
  410d89:	adc    eax,0x555b306e
  410d8e:	xor    ebx,DWORD PTR [ebx-0x59]
  410d91:	sub    bl,BYTE PTR [edx]
  410d93:	loopne 0x410d34
  410d95:	out    0x3a,eax
  410d97:	pop    edx
  410d98:	xchg   ebx,eax
  410d99:	retf   0x83ab
  410d9c:	pushf  
  410d9d:	cmp    al,0x23
  410d9f:	mov    esi,0x9819c271
  410da4:	jl     0x410d2b
  410da6:	fdivp  st(3),st
  410da8:	push   ebp
  410da9:	ins    DWORD PTR es:[edi],dx
  410daa:	sbb    bh,al
  410dac:	jbe    0x410da5
  410dae:	xchg   ebx,eax
  410daf:	and    ebp,DWORD PTR ds:0xdb82d249
  410db5:	imul   ecx,DWORD PTR [ebp+0x42446ace],0x2fc05f93
  410dbf:	cli    
  410dc0:	push   edi
  410dc1:	jo     0x410d57
  410dc3:	sbb    ebp,0xffffffc4
  410dc6:	shl    DWORD PTR [ebp+0x63],0x38
  410dca:	push   0x1e1bbefb
  410dcf:	out    dx,al
  410dd0:	mov    bl,BYTE PTR [ecx]
  410dd2:	inc    ebx
  410dd3:	xchg   BYTE PTR [ebp-0x7c47630],dl
  410dd9:	int    0xa9
  410ddb:	idiv   DWORD PTR [ecx]
  410ddd:	mov    ecx,0x39c752de
  410de2:	sti    
  410de3:	jbe    0x410d6f
  410de5:	ds inc esi
  410de7:	dec    esi
  410de8:	cmc    
  410de9:	shl    BYTE PTR [ecx],1
  410deb:	ja     0x410dc6
  410ded:	sbb    BYTE PTR [eax],cl
  410def:	pusha  
  410df0:	fdivr  st(6),st
  410df2:	mov    BYTE PTR [edi-0x2e],dh
  410df5:	jecxz  0x410dd2
  410df7:	cwde   
  410df8:	mov    eax,0xe100c24c
  410dfd:	dec    ecx
  410dfe:	addr16 daa 
  410e00:	(bad)
  410e03:	out    dx,al
  410e04:	popa   
  410e05:	jb     0x410e83
  410e07:	mov    edx,edi
  410e09:	mov    cl,0xe3
  410e0b:	shl    BYTE PTR [esi-0x5e],1
  410e0e:	xor    cl,BYTE PTR [esi]
  410e10:	shl    BYTE PTR [edi],1
  410e12:	xchg   esi,eax
  410e13:	retf   
  410e14:	mul    bh
  410e16:	in     eax,dx
  410e17:	in     eax,dx
  410e18:	jl     0x410e0f
  410e1a:	imul   esi,DWORD PTR [ebx-0x47],0x940b5ac1
  410e21:	sub    ebx,DWORD PTR [edi-0x4d]
  410e24:	idiv   BYTE PTR [edx+eiz*2+0x1a]
  410e28:	dec    esi
  410e29:	xchg   edi,eax
  410e2a:	jbe    0x410e47
  410e2c:	mov    ebx,0x36fe163
  410e31:	retf   0xc608
  410e34:	push   esp
  410e35:	mov    bl,0xc8
  410e37:	std    
  410e38:	(bad)  
  410e39:	jo     0x410e5b
  410e3b:	ins    BYTE PTR es:[edi],dx
  410e3c:	int    0x19
  410e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e3f:	jnp    0x410e73
  410e41:	mov    ds:0xf6883696,al
  410e46:	mov    ds:0x7f58e8f,al
  410e4b:	cmp    ecx,DWORD PTR [edi]
  410e4d:	je     0x410e1a
  410e4f:	xor    DWORD PTR [ebx+0xb10ea0],eax
  410e55:	clc    
  410e56:	sub    BYTE PTR [eax-0x2],dl
  410e59:	push   edi
  410e5a:	inc    esp
  410e5b:	repz mov ebx,0xb31fbff9
  410e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e62:	fwait
  410e63:	xchg   dl,dh
  410e65:	xor    DWORD PTR [ebp-0x3c],esp
  410e68:	gs push eax
  410e6a:	mov    ch,0x2a
  410e6c:	es cmp bh,bl
  410e6f:	addr16 dec edx
  410e71:	dec    ecx
  410e72:	sub    DWORD PTR [edx],ecx
  410e74:	leave  
  410e75:	push   ss
  410e76:	in     eax,0x30
  410e78:	xor    eax,0x174b3601
  410e7d:	pop    ebx
  410e7e:	out    dx,eax
  410e7f:	test   DWORD PTR [edx],edx
  410e81:	xchg   edi,eax
  410e82:	push   ds
  410e83:	clc    
  410e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e85:	jp     0x410ee5
  410e87:	aad    0xdf
  410e89:	fimul  DWORD PTR [ecx-0x78]
  410e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e8d:	dec    ebx
  410e8e:	(bad)  
  410e91:	int3   
  410e92:	mov    al,ds:0xf39ea565
  410e97:	push   edi
  410e98:	xchg   esp,eax
  410e99:	or     edx,DWORD PTR [eax]
  410e9b:	push   ss
  410e9c:	jne    0x410ef6
  410e9e:	test   DWORD PTR [ecx+0x65],eax
  410ea1:	jae    0x410e87
  410ea3:	imul   eax,DWORD PTR [esi],0xffffff90
  410ea6:	int    0x6f
  410ea8:	mov    esi,0xc8c35d55
  410ead:	mov    ah,0x27
  410eaf:	push   0x8912f0bb
  410eb4:	and    eax,0xecb21381
  410eb9:	in     al,0xf5
  410ebb:	popa   
  410ebc:	jmp    0x9cd1:0x43dfaf5e
  410ec3:	jg     0x410e5a
  410ec5:	imul   DWORD PTR [edx]
  410ec7:	inc    esi
  410ec8:	inc    edi
  410ec9:	sbb    BYTE PTR [ebx-0xe36f0f],cl
  410ecf:	push   edx
  410ed0:	loopne 0x410edd
  410ed2:	mov    ah,BYTE PTR [ecx+0x47]
  410ed5:	dec    ebx
  410ed6:	fdivrp st(3),st
  410ed8:	arpl   WORD PTR [ecx],sp
  410eda:	xor    ebx,DWORD PTR [eax]
  410edc:	div    BYTE PTR [ebp-0x39]
  410edf:	aam    0xa
  410ee1:	jmp    0x410f56
  410ee3:	mov    ss,WORD PTR [edx]
  410ee5:	es popf 
  410ee7:	inc    ebp
  410ee8:	xchg   ecx,eax
  410ee9:	popf   
  410eea:	ja     0x410f03
  410eec:	pushf  
  410eed:	lods   al,BYTE PTR ds:[esi]
  410eee:	push   edi
  410eef:	scas   al,BYTE PTR es:[edi]
  410ef0:	push   ebp
  410ef1:	test   BYTE PTR [ebp-0x635ddfee],dl
  410ef7:	pusha  
  410ef8:	jmp    0x98bd496
  410efd:	mov    bl,BYTE PTR [ecx-0xad269be]
  410f03:	sbb    DWORD PTR [eax],0xffffff9e
  410f06:	jne    0x410f4d
  410f08:	les    ebx,FWORD PTR [esi]
  410f0a:	ja     0x410ed5
  410f0c:	mov    ds:0x63030ee6,al
  410f11:	(bad)  
  410f12:	fist   DWORD PTR [ecx-0x36]
  410f15:	sbb    al,0x2
  410f17:	add    al,0x96
  410f19:	ins    BYTE PTR es:[edi],dx
  410f1a:	fld    TBYTE PTR [ebx-0x50]
  410f1d:	xchg   ebx,eax
  410f1e:	pop    edx
  410f1f:	inc    esi
  410f20:	in     al,dx
  410f21:	test   eax,0x80b641be
  410f26:	dec    esi
  410f27:	adc    al,BYTE PTR [ebp+0x32e03b0f]
  410f2d:	daa    
  410f2e:	(bad)  
  410f2f:	dec    ebx
  410f30:	bound  esp,QWORD PTR [edi-0x6906aa84]
  410f36:	and    ebp,DWORD PTR [eax-0x42dcf3d6]
  410f3c:	out    0x91,eax
  410f3e:	sahf   
  410f3f:	inc    eax
  410f40:	mov    ebp,0x81d1a90
  410f45:	jl     0x410f22
  410f47:	cmp    ch,BYTE PTR [ebp+0x29]
  410f4a:	xchg   ebp,eax
  410f4b:	aad    0x32
  410f4d:	stos   BYTE PTR es:[edi],al
  410f4e:	or     BYTE PTR [edi],0xdd
  410f51:	(bad)  
  410f52:	cmc    
  410f53:	addr16 idiv cl
  410f56:	repnz (bad) 
  410f58:	test   BYTE PTR [ecx-0x1b38d0d2],0x9a
  410f5f:	in     eax,dx
  410f60:	int3   
  410f61:	mov    al,BYTE PTR [ebx]
  410f63:	ror    BYTE PTR [edi],0xa4
  410f66:	jbe    0x410f94
  410f68:	mov    ecx,DWORD PTR [ecx+0x1c]
  410f6b:	ret    
  410f6c:	add    ch,BYTE PTR [edi+0xd]
  410f6f:	mov    DWORD PTR [edx],ebp
  410f71:	sub    al,0xdc
  410f73:	cmc    
  410f74:	jmp    0x410f49
  410f76:	push   ss
  410f77:	pop    eax
  410f78:	pop    edx
  410f79:	mov    ecx,0x7289e35c
  410f7e:	and    BYTE PTR [ebp-0x6c],bl
  410f81:	sub    al,0xd7
  410f83:	mov    ebx,0xff4f849d
  410f88:	or     BYTE PTR [esi],dh
  410f8a:	outs   dx,DWORD PTR ds:[esi]
  410f8b:	mov    ebx,0x5863438c
  410f90:	imul   eax,eax,0xffffffe9
  410f93:	mov    al,ds:0x230fcb08
  410f98:	imul   edi,ecx,0xe1f56991
  410f9e:	les    edx,FWORD PTR [edi]
  410fa0:	mov    ch,0x2f
  410fa2:	jae    0x410f53
  410fa4:	test   al,0x87
  410fa6:	add    esp,eax
  410fa8:	xchg   edx,eax
  410fa9:	fiadd  WORD PTR [ebx-0x51]
  410fac:	dec    DWORD PTR [edx]
  410fae:	sub    eax,DWORD PTR [eax+0x7c]
  410fb1:	ja     0x410ffc
  410fb3:	mov    esi,0x940541d
  410fb8:	and    bh,bl
  410fba:	xchg   ebp,eax
  410fbb:	stc    
  410fbc:	ror    BYTE PTR [ecx+0x18],cl
  410fbf:	and    al,BYTE PTR [edi]
  410fc1:	jmp    0x300d:0xfb12d200
  410fc8:	push   edi
  410fc9:	adc    BYTE PTR [edi+esi*8],dh
  410fcc:	lds    ebx,FWORD PTR [eax-0x5]
  410fcf:	retf   
  410fd0:	inc    edx
  410fd1:	outs   dx,DWORD PTR ds:[esi]
  410fd2:	int    0x1b
  410fd4:	add    eax,esi
  410fd6:	jae    0x411004
  410fd8:	and    DWORD PTR [edi+edi*8-0x53705c04],0x13
  410fe0:	into   
  410fe1:	xchg   edx,eax
  410fe2:	lahf   
  410fe3:	adc    edx,DWORD PTR ds:0x5fa9bd33
  410fe9:	fwait
  410fea:	add    DWORD PTR [esi+0x550c9332],0x5a42c685
  410ff4:	adc    eax,0x27225146
  410ff9:	xchg   BYTE PTR [edx+0x60],dl
  410ffc:	vpsubusw zmm1{z},zmm6,zmm4
  411002:	inc    edx
  411003:	pop    ecx
  411004:	pop    esi
  411005:	test   al,0xc9
  411007:	sub    BYTE PTR [esi],dl
  411009:	out    dx,al
  41100a:	adc    eax,0xe81937f6
  41100f:	push   0xac519f77
  411014:	push   es
  411015:	retf   0x8f12
  411018:	mov    edx,DWORD PTR [esi-0x45]
  41101b:	rcr    BYTE PTR [edi],0xd8
  41101e:	nop    DWORD PTR [ecx-0x42]
  411022:	jns    0x411049
  411024:	stc    
  411025:	stc    
  411026:	mov    al,ds:0x20ac2d08
  41102b:	out    0x72,al
  41102d:	pop    eax
  41102e:	push   cs
  41102f:	mov    ebp,0xec0913ae
  411034:	and    BYTE PTR [eax+ebp*8],bl
  411037:	daa    
  411038:	mov    ah,0xb2
  41103a:	jo     0x41104d
  41103c:	push   eax
  41103d:	jl     0x410fc1
  41103f:	call   0xb577:0x50b11a5
  411046:	cmp    BYTE PTR [ebx+0x2b],cl
  411049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41104a:	adc    BYTE PTR [ebp+0x49893504],0x71
  411051:	int    0x3
  411053:	shl    BYTE PTR [esi-0x1d],cl
  411056:	rcr    DWORD PTR [edi],cl
  411058:	rcl    DWORD PTR [edx],1
  41105a:	imul   ebp,DWORD PTR [ebp-0x2185c0c4],0x24a32f5e
  411064:	mov    ecx,0xde03a58d
  411069:	out    dx,al
  41106a:	aas    
  41106b:	or     al,0xb9
  41106d:	scas   eax,DWORD PTR es:[edi]
  41106e:	xor    BYTE PTR [ecx+0xb],bl
  411071:	xchg   BYTE PTR [esi],cl
  411073:	or     eax,0x2605f94f
  411078:	mov    ah,0x29
  41107a:	aaa    
  41107b:	test   DWORD PTR [edi],eax
  41107d:	rol    esp,0x48
  411080:	nop
  411081:	add    DWORD PTR [ebx-0x6b4e5daf],edi
  411087:	xchg   BYTE PTR [eax+0x26],ah
  41108a:	mov    ebx,0xf5c8e8c5
  41108f:	sar    BYTE PTR [ebp+0x3c],cl
  411092:	sbb    DWORD PTR [ecx+0x5c],0xc721216e
  411099:	xor    DWORD PTR [edi],ebp
  41109b:	iret   
  41109c:	xor    ebp,DWORD PTR [eax+edi*8]
  41109f:	mov    dl,0xf0
  4110a1:	(bad)  
  4110a2:	dec    ebp
  4110a3:	pop    edx
  4110a4:	add    al,0x5c
  4110a6:	inc    ecx
  4110a7:	push   es
  4110a8:	stos   DWORD PTR es:[edi],eax
  4110a9:	jle    0x4110bd
  4110ab:	mov    al,ds:0x419fe5cf
  4110b0:	sahf   
  4110b1:	inc    ecx
  4110b2:	or     DWORD PTR [ecx-0x4e],esi
  4110b5:	inc    ebx
  4110b6:	ds dec edx
  4110b8:	xor    ch,al
  4110ba:	fwait
  4110bb:	inc    ebx
  4110bc:	cld    
  4110bd:	inc    edx
  4110be:	dec    edx
  4110bf:	sbb    BYTE PTR [edi-0x7b1840e9],bl
  4110c5:	imul   BYTE PTR [eax+0xd]
  4110c8:	mov    cl,0x68
  4110ca:	xchg   ecx,eax
  4110cb:	mov    esp,0xfe015e47
  4110d0:	fsubr  st(5),st
  4110d2:	rcr    DWORD PTR [edi+0x1c],cl
  4110d5:	sub    eax,0x39a015c
  4110da:	mov    cs,WORD PTR [edx-0x12456f39]
  4110e0:	xor    al,0x6b
  4110e2:	sub    eax,DWORD PTR [ebx+0xcec8891]
  4110e8:	popf   
  4110e9:	ja     0x411089
  4110eb:	fnop   
  4110ed:	push   edx
  4110ee:	sti    
  4110ef:	xchg   DWORD PTR [eax+0x1cbb81ab],ebx
  4110f5:	dec    esi
  4110f6:	or     al,0xd2
  4110f8:	test   eax,0x64880fb9
  4110fd:	mov    ah,0x5b
  4110ff:	fcomp  DWORD PTR [eax]
  411101:	sbb    DWORD PTR [eax+0x2c],edi
  411104:	es lock jp 0x4110fb
  411108:	mov    DWORD PTR [esi+eax*4-0x56],edi
  41110c:	mov    ecx,0x22c3eed5
  411111:	sbb    bh,BYTE PTR [ebp+0x56edd004]
  411117:	iret   
  411118:	aad    0xf8
  41111a:	xor    BYTE PTR [ecx-0x444f72d9],cl
  411120:	mov    ecx,0x5d1cc0d
  411125:	pop    edx
  411126:	pop    esi
  411127:	inc    esp
  411128:	add    esp,ebx
  41112a:	pop    ds
  41112b:	lahf   
  41112c:	ret    
  41112d:	ret    
  41112e:	push   cs
  41112f:	sub    al,BYTE PTR [edx]
  411131:	inc    ebx
  411132:	retf   
  411133:	inc    ebp
  411134:	ror    DWORD PTR [edi-0x31],1
  411137:	daa    
  411138:	xor    al,0x60
  41113a:	xchg   esi,eax
  41113b:	lea    esp,[ebp+edx*2+0x73]
  41113f:	adc    eax,0x11da899a
  411144:	inc    eax
  411145:	pusha  
  411146:	mov    BYTE PTR [edi-0x2ad90a34],ch
  41114c:	rol    DWORD PTR [ebx-0x396e1e17],0x3d
  411153:	inc    ecx
  411154:	(bad)
  411157:	push   ds
  411158:	mov    esi,0xea39d640
  41115d:	xchg   edi,eax
  41115e:	and    dh,bl
  411160:	pop    ss
  411161:	cmp    al,0x65
  411163:	cld    
  411164:	popa   
  411165:	add    eax,0x49292299
  41116a:	mov    ebp,0x707ca44a
  41116f:	and    dl,BYTE PTR ss:[ebx-0x50]
  411173:	xchg   esi,eax
  411174:	mov    eax,DWORD PTR [ebx+0x16374fb3]
  41117a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117b:	in     eax,dx
  41117c:	sbb    eax,0x27e13267
  411181:	cmp    eax,0x312d7ade
  411186:	stos   BYTE PTR es:[edi],al
  411187:	sub    BYTE PTR [edx+0x6c444618],0x40
  41118e:	frstor [esi+ebx*8-0x27]
  411192:	mov    WORD PTR ds:0x1cb4f22b,ds
  411198:	jne    0x41112b
  41119a:	cmp    ecx,DWORD PTR [edx+0x8]
  41119d:	jne    0x4111fe
  41119f:	aad    0xe2
  4111a1:	enter  0x4dd0,0x29
  4111a5:	fsub   st,st(4)
  4111a7:	mov    ebp,0xcf512cd6
  4111ac:	lock adc esi,DWORD PTR [edi+esi*8+0x434c2ee2]
  4111b4:	ror    DWORD PTR [ebx],0xa1
  4111b7:	pop    esp
  4111b8:	or     BYTE PTR [ebx],al
  4111ba:	add    WORD PTR [ebx+0x648743de],ax
  4111c1:	mov    BYTE PTR [esi],dh
  4111c3:	dec    esp
  4111c4:	dec    ecx
  4111c5:	adc    DWORD PTR [edx+0x3be5efb0],edi
  4111cb:	xlat   BYTE PTR ds:[ebx]
  4111cc:	scas   al,BYTE PTR es:[edi]
  4111cd:	jecxz  0x411239
  4111cf:	and    al,0x6a
  4111d1:	xlat   BYTE PTR ds:[ebx]
  4111d2:	sbb    ah,BYTE PTR [ebx-0x6f08eaa0]
  4111d8:	mov    al,0x6f
  4111da:	scas   eax,DWORD PTR es:[edi]
  4111db:	push   edi
  4111dc:	sbb    eax,0x159c9754
  4111e1:	sahf   
  4111e2:	pop    ss
  4111e3:	es xchg ebx,eax
  4111e5:	mov    edi,ebx
  4111e7:	ret    0x1928
  4111ea:	pusha  
  4111eb:	aad    0x72
  4111ed:	dec    edx
  4111ee:	push   ebp
  4111ef:	pop    ebp
  4111f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f1:	mov    ds:0x791415ec,eax
  4111f6:	xor    BYTE PTR [edi],bl
  4111f8:	mov    ch,0x88
  4111fa:	or     edx,DWORD PTR [esi]
  4111fc:	imul   ebp,DWORD PTR ds:0xab8d27e5,0x52cfb48a
  411206:	out    dx,eax
  411207:	mov    ecx,0x4f9a2588
  41120c:	ins    BYTE PTR es:[edi],dx
  41120d:	mov    ds:0xc4133457,eax
  411212:	ins    DWORD PTR es:[edi],dx
  411213:	xlat   BYTE PTR ds:[ebx]
  411214:	out    dx,al
  411215:	cmp    al,0x8d
  411217:	pushf  
  411218:	jae    0x4111b6
  41121a:	pushf  
  41121b:	test   al,0xed
  41121d:	ss jnp 0x4111be
  411220:	enter  0x648c,0x4f
  411224:	fs loopne 0x4111e0
  411227:	aam    0x9
  411229:	test   dl,cl
  41122b:	imul   edi,DWORD PTR [ebx-0x50],0xfdebf29b
  411232:	xor    DWORD PTR [eax],ebp
  411234:	repz push edi
  411236:	fmul   DWORD PTR [eax-0x6]
  411239:	aad    0x12
  41123b:	pop    esp
  41123c:	mov    ecx,ebx
  41123e:	xchg   edx,esi
  411240:	test   BYTE PTR [ebx+0x2ae8c4a8],bl
  411246:	imul   edx,edx,0xfffffff4
  411249:	pop    eax
  41124a:	xlat   BYTE PTR ds:[ebx]
  41124b:	test   BYTE PTR [eax-0x37f1437],0x8b
  411252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411253:	fsubr  DWORD PTR [edx]
  411255:	not    dh
  411257:	cwde   
  411258:	jno    0x41129b
  41125a:	sahf   
  41125b:	dec    eax
  41125c:	mov    ebx,0x6a72fbd4
  411261:	mov    ebx,0x7d4820c8
  411266:	mov    eax,0x3d4ee7dd
  41126b:	or     ebp,DWORD PTR [ecx]
  41126d:	xchg   BYTE PTR [esi+0x38],ch
  411270:	mov    edx,0xa01bca9c
  411275:	into   
  411276:	fiadd  WORD PTR [edx-0x4999a618]
  41127c:	jmp    0xcb97:0x7f28f04a
  411283:	xchg   edi,eax
  411284:	adc    eax,0x69fee162
  411289:	mov    ecx,0x44a7d8e2
  41128e:	add    eax,0x4a18831f
  411293:	not    BYTE PTR [ecx+0x68481de4]
  411299:	mov    edx,0x50b6345b
  41129e:	push   esp
  41129f:	ror    BYTE PTR [edi+ebx*1],cl
  4112a2:	push   0xffffffef
  4112a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a5:	call   0x1485ca5a
  4112aa:	cdq    
  4112ab:	ficom  DWORD PTR [edx+0x37b62331]
  4112b1:	adc    esi,DWORD PTR [edi-0x26]
  4112b4:	je     0x41125c
  4112b6:	fld    QWORD PTR [ecx]
  4112b8:	fnsave ds:[eax+0x69c32366]
  4112bf:	lahf   
  4112c0:	push   eax
  4112c1:	jl     0x411321
  4112c3:	nop
  4112c4:	push   eax
  4112c5:	mov    al,0x41
  4112c7:	cwde   
  4112c8:	or     DWORD PTR ds:0x411343c9,edi
  4112ce:	iret   
  4112cf:	jne    0x411340
  4112d1:	mov    edi,0x29eb4d26
  4112d6:	cmp    eax,0xf01f6142
  4112dc:	enter  0x4c85,0xe
  4112e0:	jne    0x411297
  4112e2:	int3   
  4112e3:	inc    ecx
  4112e4:	into   
  4112e5:	mov    ebx,0x57880f56
  4112ea:	ds ds enter 0xd4f9,0x1c
  4112f0:	mov    ebx,0x8136b3f9
  4112f5:	aaa    
  4112f6:	xchg   edx,eax
  4112f7:	in     al,dx
  4112f8:	cmp    dh,ch
  4112fa:	jge    0x41130b
  4112fc:	inc    edx
  4112fd:	sahf   
  4112fe:	ror    edi,1
  411300:	or     eax,0x1015a888
  411305:	push   es
  411306:	inc    esi
  411307:	jno    0x4112de
  411309:	mov    bl,0x4b
  41130b:	dec    eax
  41130c:	scas   al,BYTE PTR es:[edi]
  41130d:	aaa    
  41130e:	sub    bh,ah
  411310:	enter  0xed2f,0xcf
  411314:	cmp    DWORD PTR [ebp-0x3a434cf3],eax
  41131a:	test   al,0x5c
  41131c:	je     0x41138d
  41131e:	fidivr DWORD PTR [esi]
  411320:	mov    dl,0x15
  411322:	mov    dh,0x75
  411324:	in     al,dx
  411325:	adc    DWORD PTR [ecx+ecx*1],eax
  411328:	pusha  
  411329:	les    ebx,FWORD PTR [ebx+0x79]
  41132c:	jecxz  0x411382
  41132e:	imul   ecx,ebp,0x8004038c
  411334:	in     eax,0x3d
  411336:	push   esp
  411337:	sbb    DWORD PTR [ebp-0x413be9a3],edi
  41133d:	or     eax,0x64563364
  411342:	lahf   
  411343:	pushf  
  411344:	and    ecx,ecx
  411346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411347:	sti    
  411348:	icebp  
  411349:	mov    cl,BYTE PTR [ecx+0x19a60e95]
  41134f:	lea    ebx,[ebx]
  411351:	mov    bh,0xdf
  411353:	mov    dl,0x98
  411355:	ins    DWORD PTR es:[edi],dx
  411356:	rol    bh,1
  411358:	aas    
  411359:	mov    ds:0xc14a4f45,eax
  41135e:	lods   eax,DWORD PTR ds:[esi]
  41135f:	pop    edi
  411360:	mov    ah,0x8a
  411362:	sbb    bh,BYTE PTR [esi]
  411364:	shl    DWORD PTR [ebx],cl
  411366:	pusha  
  411367:	xchg   edx,eax
  411368:	dec    esi
  411369:	sbb    eax,0x697f684f
  41136e:	push   esp
  41136f:	xor    BYTE PTR [ecx],ch
  411371:	(bad)  [edi-0xc]
  411374:	data16 jne 0x4113cb
  411377:	fnstenv [esi]
  411379:	(bad)  
  41137a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41137b:	and    al,0x11
  41137d:	or     ch,BYTE PTR es:[ebx-0x70]
  411381:	mov    dh,0x1
  411383:	fyl2x  
  411385:	loop   0x41136a
  411387:	adc    eax,0xf55f49d3
  41138c:	xor    al,0x10
  41138e:	pop    esp
  41138f:	aam    0x17
  411391:	or     al,0x0
  411393:	fwait
  411394:	(bad)  
  411395:	test   eax,0xec18da6d
  41139a:	inc    eax
  41139b:	push   ds
  41139c:	mov    edx,0x4b685a20
  4113a1:	and    ch,al
  4113a3:	jo     0x41140b
  4113a5:	dec    edi
  4113a6:	push   ds
  4113a7:	dec    eax
  4113a8:	inc    ebx
  4113a9:	jae    0x411403
  4113ab:	test   eax,0x5877f47e
  4113b0:	lahf   
  4113b1:	pop    ebp
  4113b2:	jmp    0xa1ce:0x5e20c945
  4113b9:	call   0xd4e2:0xd07358e
  4113c0:	scas   eax,DWORD PTR es:[edi]
  4113c1:	push   ds
  4113c2:	in     eax,0xad
  4113c4:	out    dx,eax
  4113c5:	aad    0xbf
  4113c7:	fcmovnbe st,st(7)
  4113c9:	jmp    0xe192ded1
  4113ce:	adc    al,0xb1
  4113d0:	jnp    0x411385
  4113d2:	(bad)  
  4113d3:	dec    BYTE PTR [edi+0x37]
  4113d6:	push   ebx
  4113d7:	repnz adc al,0x81
  4113da:	jle    0x411402
  4113dc:	push   ds
  4113dd:	test   al,0xc7
  4113df:	adc    esp,esi
  4113e1:	dec    esp
  4113e2:	fs pop es
  4113e4:	or     DWORD PTR [eax-0x58],ebx
  4113e7:	mov    ecx,esi
  4113e9:	ret    0xac31
  4113ec:	and    al,0x31
  4113ee:	or     edi,DWORD PTR [edx-0x9fad72d]
  4113f4:	imul   eax,edi,0x162a5de0
  4113fa:	pop    edi
  4113fb:	sahf   
  4113fc:	dec    edx
  4113fd:	jle    0x411397
  4113ff:	in     eax,dx
  411400:	nop
  411401:	in     eax,0x97
  411403:	sar    BYTE PTR [edx-0x7a],0x2c
  411407:	mov    dh,bh
  411409:	push   esi
  41140a:	mov    ds:0x9e4837af,al
  41140f:	dec    ebp
  411410:	dec    edx
  411411:	dec    esi
  411412:	cmp    BYTE PTR [ebp+edx*1+0x13],bh
  411416:	pop    esi
  411417:	push   ss
  411418:	inc    ebp
  411419:	push   esi
  41141a:	jmp    0x4113c3
  41141c:	aad    0x8c
  41141e:	inc    esi
  41141f:	inc    ebx
  411420:	lods   al,BYTE PTR ds:[esi]
  411421:	or     eax,0xffbdaab8
  411426:	(bad)  
  411427:	pop    ss
  411428:	test   ecx,esi
  41142a:	add    eax,0x3c134cf8
  41142f:	dec    esi
  411430:	fwait
  411431:	jp     0x411442
  411433:	push   0x1eab66c5
  411438:	clc    
  411439:	push   ecx
  41143a:	adc    ebx,ecx
  41143c:	cli    
  41143d:	lahf   
  41143e:	push   esp
  41143f:	sbb    ch,BYTE PTR [edx]
  411441:	pop    ss
  411442:	icebp  
  411443:	pusha  
  411444:	sub    eax,0xc8742cff
  411449:	(bad)  
  41144a:	aam    0xa1
  41144c:	icebp  
  41144d:	sbb    al,0x90
  41144f:	cld    
  411450:	iret   
  411451:	mov    ch,0xd4
  411453:	arpl   WORD PTR [ebx+0x718890f],sp
  411459:	clc    
  41145a:	sti    
  41145b:	push   0xc85a664e
  411460:	clc    
  411461:	lock cmp edi,DWORD PTR [ebx]
  411464:	outs   dx,DWORD PTR fs:[esi]
  411466:	sbb    DWORD PTR [edi+0x691b99de],edx
  41146c:	std    
  41146d:	aam    0x99
  41146f:	mov    eax,0x2eaf20b6
  411474:	xchg   DWORD PTR [edx+esi*1-0x63],ebx
  411478:	test   bl,ah
  41147a:	aad    0x3c
  41147c:	mov    ebp,0xa23fb045
  411481:	retf   0x81c7
  411484:	bound  edi,QWORD PTR [ebx+0x13]
  411487:	xlat   BYTE PTR ds:[ebx]
  411488:	cwde   
  411489:	cmp    DWORD PTR [ebx],ebx
  41148b:	mov    al,0xd5
  41148d:	loopne 0x41148b
  41148f:	push   0xffffffdf
  411491:	rcr    DWORD PTR [ebx+esi*8+0x22e5bc8c],0xf2
  411499:	pop    edi
  41149a:	jmp    0x411496
  41149c:	dec    ebx
  41149d:	sub    esi,DWORD PTR [ebx+edx*2]
  4114a0:	mov    BYTE PTR [esi-0x1f],ah
  4114a3:	enter  0xa224,0xd4
  4114a7:	repz mov cl,0x57
  4114aa:	popa   
  4114ab:	and    eax,0x888c48b
  4114b0:	inc    edx
  4114b1:	shl    esi,0x49
  4114b4:	popa   
  4114b5:	sbb    dl,0x9
  4114b8:	enter  0x76af,0x5d
  4114bc:	std    
  4114bd:	cmp    al,BYTE PTR [edi+0x54ae26be]
  4114c3:	test   eax,0xf292d0ba
  4114c8:	add    ch,BYTE PTR [eax]
  4114ca:	jp     0x411501
  4114cc:	and    eax,DWORD PTR [esi-0x4df4ef19]
  4114d2:	push   edx
  4114d3:	enter  0x4436,0x48
  4114d7:	and    ah,ch
  4114d9:	dec    esi
  4114da:	test   DWORD PTR [edx+0x2a8c9754],edx
  4114e0:	dec    eax
  4114e1:	xor    BYTE PTR [eax],bl
  4114e3:	loop   0x4114cc
  4114e5:	dec    esp
  4114e6:	je     0x4114b7
  4114e8:	dec    esi
  4114e9:	jnp    0x41152b
  4114eb:	add    edx,ebp
  4114ed:	fwait
  4114ee:	pop    esi
  4114ef:	dec    edi
  4114f0:	push   esi
  4114f1:	arpl   WORD PTR [edx-0x3e],ax
  4114f4:	rcl    bh,0xd4
  4114f7:	mov    ch,BYTE PTR [eax]
  4114f9:	push   es
  4114fa:	dec    edi
  4114fb:	or     dl,ah
  4114fd:	outs   dx,BYTE PTR ds:[esi]
  4114fe:	retf   
  4114ff:	and    eax,0x324c8165
  411504:	xlat   BYTE PTR ds:[ebx]
  411505:	imul   edi,DWORD PTR [ebx],0x28
  411508:	out    dx,al
  411509:	loop   0x4114f7
  41150b:	ret    
  41150c:	sub    eax,0x27b9e8d4
  411511:	(bad)  [edi-0x106d85aa]
  411517:	int3   
  411518:	daa    
  411519:	ret    0x9c74
  41151c:	retf   
  41151d:	loopne 0x411570
  41151f:	adc    eax,0x42d9d22e
  411524:	push   ss
  411525:	mov    al,ds:0x669dee31
  41152a:	(bad)  
  41152b:	mov    BYTE PTR ds:0x72124d2a,al
  411531:	in     al,dx
  411532:	inc    eax
  411533:	jo     0x41155e
  411535:	(bad)  
  411536:	pop    esi
  411537:	aaa    
  411538:	and    eax,0xbc35b8e1
  41153d:	jnp    0x4114ec
  41153f:	or     BYTE PTR ds:0x4ca7ba5b,ch
  411545:	fcmove st,st(3)
  411547:	mov    BYTE PTR [ebx-0x3658a0b7],dl
  41154d:	sahf   
  41154e:	mov    eax,DWORD PTR [edx+0x5b6fa393]
  411554:	in     eax,0xa8
  411556:	dec    BYTE PTR [esi-0x2d]
  411559:	pop    esi
  41155a:	and    DWORD PTR [ebx-0x52690d2e],esi
  411560:	shl    DWORD PTR [edi-0x3547e9ae],0x97
  411567:	push   ss
  411568:	dec    esi
  411569:	inc    ebx
  41156a:	mov    ds:0x5a0d8274,al
  41156f:	je     0x41158d
  411571:	stos   BYTE PTR es:[edi],al
  411572:	sub    BYTE PTR [edi+0x5b],dh
  411575:	out    0xc7,al
  411577:	pop    eax
  411578:	bound  ebx,QWORD PTR [ebx+0x27]
  41157b:	jge    0x411597
  41157d:	add    BYTE PTR [eax-0x25],dh
  411580:	stos   DWORD PTR es:[edi],eax
  411581:	icebp  
  411582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411583:	out    dx,eax
  411584:	jmp    0x41152c
  411586:	imul   esi,DWORD PTR [ebx-0x6af48318],0x15
  41158d:	mov    DWORD PTR [ebx-0x49a0ca18],edx
  411593:	cld    
  411594:	enter  0xa43b,0xfc
  411598:	mov    BYTE PTR [ebp+ebp*2-0x8],dl
  41159c:	pop    ebp
  41159d:	push   0xffffffca
  41159f:	pop    ebp
  4115a0:	mov    ah,0x55
  4115a2:	and    DWORD PTR [eax],ebp
  4115a4:	pop    ecx
  4115a5:	sbb    eax,0x5703c94a
  4115aa:	call   0x95e73ae3
  4115af:	mov    gs,WORD PTR [edx]
  4115b1:	aad    0xf
  4115b3:	jl     0x411575
  4115b5:	pop    edi
  4115b6:	gs push ecx
  4115b8:	das    
  4115b9:	jae    0x411600
  4115bb:	popf   
  4115bc:	imul   BYTE PTR [edi]
  4115be:	cmp    BYTE PTR [esi],bl
  4115c0:	mov    ah,0x6a
  4115c2:	mov    esp,0x773a051b
  4115c7:	xchg   ecx,eax
  4115c8:	lahf   
  4115c9:	xlat   BYTE PTR ds:[ebx]
  4115ca:	repnz push esi
  4115cc:	adc    ebp,DWORD PTR ds:0x75ec7ec
  4115d2:	push   edi
  4115d3:	call   0x247d3e86
  4115d8:	pop    ebx
  4115d9:	cmp    DWORD PTR [edi],edi
  4115db:	std    
  4115dc:	icebp  
  4115dd:	js     0x411657
  4115df:	mov    al,ds:0x7e590696
  4115e4:	pusha  
  4115e5:	push   esp
  4115e6:	nop
  4115e7:	fdiv   st,st(7)
  4115e9:	sahf   
  4115ea:	mov    al,ds:0x5e6c37d
  4115ef:	jae    0x41160b
  4115f1:	out    dx,eax
  4115f2:	test   BYTE PTR [ebp+0x9106e9],bh
  4115f8:	dec    ebx
  4115f9:	ret    
  4115fa:	nop
  4115fb:	(bad)  
  4115fc:	add    BYTE PTR [edi],0x3e
  4115ff:	das    
  411600:	bound  eax,QWORD PTR [ecx-0x1470fd55]
  411606:	jb     0x411673
  411608:	retf   
  411609:	icebp  
  41160a:	out    0xbb,al
  41160c:	cmp    DWORD PTR [ebx+ebx*4+0x4f],0xc4dc3e08
  411614:	test   DWORD PTR ds:0x11d1a8d7,eax
  41161a:	sbb    eax,0xe3a48d12
  41161f:	mov    dl,0xcf
  411621:	mov    ds:0xb42c584b,al
  411626:	push   ebx
  411627:	sub    DWORD PTR [ecx+eiz*4+0x50f7ad09],edx
  41162e:	sub    esp,esi
  411630:	add    al,0xcd
  411632:	xchg   esi,eax
  411633:	icebp  
  411634:	xchg   ebx,eax
  411635:	push   ss
  411636:	shl    edi,cl
  411638:	loop   0x4115c7
  41163a:	std    
  41163b:	push   esp
  41163c:	jns    0x4115cf
  41163e:	add    ebp,eax
  411640:	les    eax,FWORD PTR [ebx+0x1]
  411643:	sub    BYTE PTR [ebx+edx*2+0x67],0xf1
  411648:	or     ebx,eax
  41164a:	mov    dl,0xb1
  41164c:	sbb    esp,DWORD PTR [edi+0x4716a377]
  411652:	add    esi,edi
  411654:	outs   dx,BYTE PTR ds:[esi]
  411655:	fucomip st,st(0)
  411657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411658:	lahf   
  411659:	fucomp st(4)
  41165b:	pop    esi
  41165c:	push   edi
  41165d:	call   0xf444e3c9
  411662:	sub    eax,0x2a48238d
  411667:	cmp    al,0xd2
  411669:	xor    ebx,esi
  41166b:	jl     0x41163d
  41166d:	cmp    al,0x81
  41166f:	sbb    DWORD PTR [ebx],esi
  411671:	cmp    ebp,DWORD PTR [edi+0x1a83b506]
  411677:	and    al,0xe5
  411679:	js     0x4116df
  41167b:	xchg   DWORD PTR [ebp+0x15],edi
  41167e:	int    0xee
  411680:	popf   
  411681:	sbb    DWORD PTR [eax-0x37],ebx
  411684:	xchg   DWORD PTR [edx],edi
  411686:	mov    WORD PTR [eax-0x2604733d],cs
  41168c:	push   ss
  41168d:	sub    esi,ecx
  41168f:	(bad)  
  411690:	outs   dx,BYTE PTR ds:[esi]
  411691:	daa    
  411692:	pushf  
  411693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411694:	xor    al,BYTE PTR [ebx+0x59]
  411697:	mov    WORD PTR [esi],gs
  411699:	add    cl,0xb
  41169c:	dec    edx
  41169d:	cli    
  41169e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41169f:	ds es das 
  4116a2:	(bad)  
  4116a3:	sub    BYTE PTR [eax+0x19e94a4d],bh
  4116a9:	sbb    bh,al
  4116ab:	sub    eax,0x868a3274
  4116b0:	out    dx,eax
  4116b1:	or     eax,0xfe92b9e3
  4116b6:	addr16 es jmp 0xbd8201b1
  4116bd:	sub    DWORD PTR [edi+0x77],esi
  4116c0:	inc    esi
  4116c1:	jnp    0x411739
  4116c3:	in     eax,0xc8
  4116c5:	jl     0x41167c
  4116c7:	jbe    0x411655
  4116c9:	mov    bl,0x75
  4116cb:	sub    al,BYTE PTR [esi]
  4116cd:	fild   DWORD PTR [edi]
  4116cf:	rcl    DWORD PTR [ebp+0x69],cl
  4116d2:	aaa    
  4116d3:	pop    esi
  4116d4:	jne    0x41168c
  4116d6:	loop   0x4116af
  4116d8:	(bad)  
  4116d9:	mov    al,0xf1
  4116db:	jo     0x4116b5
  4116dd:	cld    
  4116de:	loope  0x41168c
  4116e0:	mov    esi,0xc0c43738
  4116e5:	and    eax,0xb60b593f
  4116ea:	lds    ecx,FWORD PTR [ebx-0x43]
  4116ed:	mov    al,0x69
  4116ef:	bound  esi,QWORD PTR ds:0x25a5ab2e
  4116f5:	jb     0x4116e3
  4116f7:	mov    WORD PTR [ecx-0x2f197eea],gs
  4116fd:	xchg   BYTE PTR [ebp+ebx*2+0x18188901],dh
  411704:	inc    eax
  411705:	je     0x4116ba
  411707:	aam    0x10
  411709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170a:	jbe    0x4116e3
  41170c:	push   ds
  41170d:	dec    eax
  41170e:	cli    
  41170f:	stos   BYTE PTR es:[edi],al
  411710:	and    ebp,eax
  411712:	test   BYTE PTR [edi+0x4f],ah
  411715:	fsubr  DWORD PTR [ebx]
  411717:	scas   al,BYTE PTR es:[edi]
  411718:	imul   ebx,DWORD PTR [ebx-0x1cdeb99c],0xffffffe4
  41171f:	xchg   edi,eax
  411720:	cmc    
  411721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411722:	cmp    dh,BYTE PTR ds:0x5f4c453d
  411728:	inc    edi
  411729:	mov    cl,0x89
  41172b:	test   BYTE PTR [ebx+ebx*4-0x51],ah
  41172f:	dec    edi
  411730:	mov    dl,0x8b
  411732:	out    0xbd,eax
  411734:	jmp    0xfa9a7b4b
  411739:	push   0xc41c2e73
  41173e:	mov    dl,0x1b
  411740:	cmp    cl,BYTE PTR [ebx+0x2]
  411743:	fist   WORD PTR [ecx]
  411745:	jle    0x4116da
  411747:	inc    eax
  411748:	lds    ecx,FWORD PTR [eax+eiz*8+0x26a3870b]
  41174f:	xor    DWORD PTR [eax-0x5d],edi
  411752:	or     al,0xff
  411754:	dec    ecx
  411755:	or     bl,cl
  411757:	and    eax,0xf24684d2
  41175c:	pop    ebx
  41175d:	jb     0x41178d
  41175f:	and    al,0x30
  411761:	ja     0x4117b8
  411763:	outs   dx,DWORD PTR ds:[esi]
  411764:	pop    esp
  411765:	popf   
  411766:	dec    edx
  411767:	mov    eax,0xb229a25c
  41176c:	aad    0xe4
  41176e:	push   esi
  41176f:	aas    
  411770:	sbb    DWORD PTR [ecx-0x7],ecx
  411773:	aas    
  411774:	sbb    BYTE PTR [edi-0x65],bh
  411777:	adc    bh,BYTE PTR [ebx-0x6d68ea8e]
  41177d:	dec    eax
  41177e:	js     0x4117c3
  411780:	imul   eax,esp,0xffffffc7
  411783:	sbb    cl,dl
  411785:	pop    eax
  411786:	bound  ecx,QWORD PTR [eax]
  411788:	or     dl,BYTE PTR [eax+0x27]
  41178b:	push   eax
  41178c:	leave  
  41178d:	xchg   esp,eax
  41178e:	aad    0xc6
  411790:	adc    al,0x5f
  411792:	sbb    ebx,esi
  411794:	jae    0x4117ef
  411796:	or     edx,DWORD PTR [edi+0x6e]
  411799:	aam    0x57
  41179b:	ret    
  41179c:	into   
  41179d:	(bad)  
  41179e:	add    DWORD PTR ds:[esi],ebx
  4117a1:	or     BYTE PTR [edx],cl
  4117a3:	fstp   TBYTE PTR [ebx-0x22]
  4117a6:	and    DWORD PTR [ecx],0xf6958e0c
  4117ac:	pop    eax
  4117ad:	sub    ah,cl
  4117af:	sbb    al,0xbe
  4117b1:	test   al,0x58
  4117b3:	inc    ebp
  4117b4:	test   dl,dh
  4117b6:	mov    dl,0x70
  4117b8:	scas   eax,DWORD PTR es:[edi]
  4117b9:	adc    dh,BYTE PTR [ebx-0x2]
  4117bc:	pusha  
  4117bd:	mov    edi,0x162ccea5
  4117c2:	push   0x56
  4117c4:	dec    edi
  4117c5:	inc    DWORD PTR [esi-0x60157456]
  4117cb:	pusha  
  4117cc:	push   0x83de3154
  4117d1:	clc    
  4117d2:	inc    eax
  4117d3:	add    DWORD PTR [ecx-0x2b77a1f1],edi
  4117d9:	cld    
  4117da:	sbb    esi,DWORD PTR [esi+0x3d]
  4117dd:	or     BYTE PTR [esi-0x7f3b7580],ah
  4117e3:	fwait
  4117e4:	mov    ebp,0xb3cd6b6e
  4117e9:	or     DWORD PTR [ebp+esi*8-0x4dfaeb3f],ebp
  4117f0:	addr16 in eax,0x54
  4117f3:	aas    
  4117f4:	pop    ss
  4117f5:	jo     0x41179e
  4117f7:	rcl    DWORD PTR [edi-0x61],0x8
  4117fb:	imul   ecx,eax,0x83d76763
  411801:	arpl   WORD PTR [edx+eax*8],ax
  411804:	xor    eax,0x3d5c2401
  411809:	xchg   edi,eax
  41180a:	sub    al,0xd5
  41180c:	inc    esp
  41180d:	mov    bh,0x31
  41180f:	dec    ecx
  411810:	xor    eax,0x95894a4f
  411815:	sahf   
  411816:	in     eax,dx
  411817:	sbb    eax,0xde46256d
  41181c:	xor    BYTE PTR es:[esi-0x70],0xce
  411821:	push   es
  411822:	ret    0x6a52
  411825:	ret    0xc8c1
  411828:	xchg   edi,eax
  411829:	(bad)  
  41182a:	js     0x41186b
  41182c:	jecxz  0x411871
  41182e:	jmp    FWORD PTR [eax+ebp*1]
  411831:	xchg   BYTE PTR [ecx],al
  411833:	test   DWORD PTR [esi],esi
  411835:	mov    ds:0x492afd45,al
  41183a:	mov    esi,ss
  41183c:	stos   DWORD PTR es:[edi],eax
  41183d:	cmc    
  41183e:	adc    dh,BYTE PTR [eax-0x3ba51896]
  411844:	arpl   WORD PTR [eax-0x4023ab7f],sp
  41184a:	jb     0x411880
  41184c:	mov    ds,ecx
  41184e:	aad    0xc
  411850:	cmp    ebp,ecx
  411852:	dec    esp
  411853:	imul   esp,DWORD PTR [edx+eax*8+0x34],0xffffff9b
  411858:	arpl   WORD PTR [esi+0x55],dx
  41185b:	fnstcw WORD PTR [esi-0x1a]
  41185e:	stc    
  41185f:	xchg   ah,bh
  411861:	fst    st(3)
  411863:	mov    esi,0x9e0b6114
  411868:	mov    bl,0x7e
  41186a:	push   ebp
  41186b:	test   eax,0xffa153e5
  411870:	mov    eax,ebp
  411872:	dec    edi
  411873:	push   es
  411874:	mov    eax,0xf5f9f3fa
  411879:	stos   DWORD PTR es:[edi],eax
  41187a:	mov    WORD PTR [edx],ds
  41187c:	mov    al,0x3
  41187e:	aas    
  41187f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411880:	and    eax,DWORD PTR [ebp-0x7d2716b]
  411886:	adc    edx,DWORD PTR [esi+0x363e79e9]
  41188c:	sbb    eax,0x9ab1ba22
  411891:	shl    DWORD PTR [ebp-0x7cefaeb4],0x67
  411898:	popa   
  411899:	sar    DWORD PTR [esi+0x2c],cl
  41189c:	icebp  
  41189d:	leave  
  41189e:	mov    ds:0x8111aaa1,al
  4118a3:	test   BYTE PTR [ebx-0x75],al
  4118a6:	pop    es
  4118a7:	and    cl,bl
  4118a9:	rcl    DWORD PTR [eax],0xc5
  4118ac:	add    eax,0x269886a6
  4118b1:	cmp    dl,BYTE PTR [ebx]
  4118b3:	mov    ecx,0x60bf8219
  4118b8:	add    eax,0xaba3058d
  4118bd:	add    ecx,DWORD PTR [eax+eiz*8-0x5121b04b]
  4118c4:	pusha  
  4118c5:	mov    DWORD PTR [ecx-0x31],edx
  4118c8:	add    al,0x5e
  4118ca:	std    
  4118cb:	inc    esp
  4118cc:	ins    BYTE PTR es:[edi],dx
  4118cd:	popf   
  4118ce:	push   es
  4118cf:	nop
  4118d0:	lds    eax,FWORD PTR [ecx+0x5f55f016]
  4118d6:	cmp    eax,0x41
  4118d9:	aam    0xdd
  4118db:	rcr    DWORD PTR [ebp+eax*2+0x46],1
  4118df:	(bad)  
  4118e0:	xor    DWORD PTR [edx-0x25],esi
  4118e3:	shl    BYTE PTR [esi],cl
  4118e5:	mov    WORD PTR [esi+0x31],?
  4118e8:	mov    edx,0x5dab1922
  4118ed:	inc    ebx
  4118ee:	add    ecx,eax
  4118f0:	mov    esi,0xf2b4cf1a
  4118f5:	inc    edx
  4118f6:	inc    eax
  4118f7:	mov    cl,dl
  4118f9:	rcl    ch,1
  4118fb:	aam    0x8e
  4118fd:	cmp    ebp,DWORD PTR [edi+edi*4]
  411900:	in     al,dx
  411901:	and    cl,BYTE PTR [eax]
  411903:	(bad)  
  411904:	dec    edx
  411905:	out    dx,eax
  411906:	stos   BYTE PTR es:[edi],al
  411907:	jns    0x4118ee
  411909:	inc    esi
  41190a:	jge    0x411954
  41190c:	ja     0x41191e
  41190e:	mov    dh,0xf8
  411910:	xor    eax,0xc8e68d77
  411915:	ret    
  411916:	adc    eax,0xd02c4f87
  41191b:	in     eax,dx
  41191c:	mov    ah,BYTE PTR [eax]
  41191e:	in     al,dx
  41191f:	loop   0x41190c
  411921:	test   al,0xbe
  411923:	jg     0x4118b3
  411925:	in     al,dx
  411926:	(bad)  
  411927:	arpl   WORD PTR [eax],dx
  411929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41192a:	pushf  
  41192b:	cli    
  41192c:	fisttp WORD PTR [ecx+0x6d]
  41192f:	das    
  411930:	adc    eax,0x1dc07852
  411935:	add    dh,BYTE PTR [edx+0x20]
  411938:	xchg   ecx,eax
  411939:	or     eax,0x95bcac1a
  41193e:	or     ch,BYTE PTR [ebx]
  411940:	ins    DWORD PTR es:[edi],dx
  411941:	jmp    0xff0f:0xc89bb99b
  411948:	mov    al,0x23
  41194a:	push   ebx
  41194b:	cli    
  41194c:	adc    eax,0xe9995929
  411951:	je     0x411947
  411953:	call   0x6c47:0x64fe9d41
  41195a:	push   edx
  41195b:	add    DWORD PTR [esi+edi*2+0xd],ebx
  41195f:	aad    0xca
  411961:	test   DWORD PTR [ebx],ebx
  411963:	sbb    dh,cl
  411965:	mov    cl,0x28
  411967:	jb     0x4119b9
  411969:	jno    0x41191b
  41196b:	cmp    bh,dl
  41196d:	adc    DWORD PTR [esi+0xe60a746],esp
  411973:	xlat   BYTE PTR ds:[ebx]
  411974:	test   al,0xd
  411976:	add    al,0xca
  411978:	cmp    al,0x94
  41197a:	inc    ecx
  41197b:	imul   edi,DWORD PTR [edi],0xcfb283c5
  411981:	ror    DWORD PTR [edx+edi*1+0x61],0xab
  411986:	jmp    FWORD PTR [ebx]
  411988:	jg     0x41199b
  41198a:	inc    edx
  41198b:	xor    al,0x2a
  41198d:	repz cmp edx,DWORD PTR [ecx-0x64059c4c]
  411994:	retf   
  411995:	push   cs
  411996:	mov    bl,0x75
  411998:	jecxz  0x411a13
  41199a:	or     eax,DWORD PTR gs:[esi+0x5d4fa709]
  4119a1:	pop    es
  4119a2:	xchg   edi,eax
  4119a3:	(bad)  
  4119a4:	jns    0x41196b
  4119a6:	outs   dx,BYTE PTR ds:[esi]
  4119a7:	dec    ebx
  4119a8:	shr    BYTE PTR [eax],1
  4119aa:	scas   eax,DWORD PTR es:[edi]
  4119ab:	mov    esp,DWORD PTR [ebx]
  4119ad:	je     0x411991
  4119af:	stos   BYTE PTR es:[edi],al
  4119b0:	mov    DWORD PTR [ebx+0x5b],esi
  4119b3:	pop    edx
  4119b4:	mov    ds:0x37d54cbd,eax
  4119b9:	mov    dh,BYTE PTR [eax+ebp*8-0x102ad914]
  4119c0:	jns    0x4119b4
  4119c2:	pusha  
  4119c3:	jae    0x411a19
  4119c5:	sub    BYTE PTR [edx],ch
  4119c7:	adc    al,0x16
  4119c9:	add    DWORD PTR [edi],eax
  4119cb:	in     al,dx
  4119cc:	mov    ebp,0x64dfef02
  4119d1:	cmp    eax,0xec0ea561
  4119d6:	pop    ebp
  4119d7:	push   edx
  4119d8:	dec    eax
  4119d9:	jg     0x411981
  4119db:	fcom   st(3)
  4119dd:	jmp    0x4119b5
  4119df:	mov    ds:0x2e45559a,al
  4119e4:	jno    0x411a13
  4119e6:	pop    ebp
  4119e7:	and    BYTE PTR [ecx+0x129ec4c],ah
  4119ed:	mov    bl,0xc8
  4119ef:	(bad)  
  4119f0:	add    DWORD PTR [edx-0x75],eax
  4119f3:	fisttp WORD PTR [edx+edi*8+0x3a351a14]
  4119fa:	js     0x4119e3
  4119fc:	jge    0x411a4d
  4119fe:	jne    0x411a7a
  411a00:	adc    ah,dh
  411a02:	mov    DWORD PTR [ecx-0x2d],edx
  411a05:	outs   dx,BYTE PTR ds:[esi]
  411a06:	add    al,0xa9
  411a08:	cs xchg esi,eax
  411a0a:	xlat   BYTE PTR ds:[ebx]
  411a0b:	xchg   esp,eax
  411a0c:	push   edx
  411a0d:	sar    BYTE PTR [esi+0x2a],1
  411a10:	mov    bh,0x58
  411a12:	push   ecx
  411a13:	out    0xc7,al
  411a15:	stc    
  411a16:	cmp    edx,DWORD PTR [ecx]
  411a18:	outs   dx,DWORD PTR ds:[esi]
  411a19:	and    al,bh
  411a1b:	mov    ?,WORD PTR [eax+eax*1-0x5c661e97]
  411a22:	jo     0x411a2f
  411a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a25:	adc    al,0x5d
  411a27:	cwde   
  411a28:	sub    BYTE PTR [eax-0x69],bh
  411a2b:	mov    edi,DWORD PTR ds:0x47943641
  411a31:	and    eax,eax
  411a33:	in     al,0x6
  411a35:	test   al,0x34
  411a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a38:	inc    ebp
  411a39:	fimul  WORD PTR [esp+ecx*4]
  411a3c:	arpl   WORD PTR [ecx+edx*2-0x29],dx
  411a40:	je     0x411a73
  411a42:	test   al,0x61
  411a44:	stos   BYTE PTR es:[edi],al
  411a45:	adc    BYTE PTR [eax+0x68],bh
  411a48:	outs   dx,BYTE PTR ds:[esi]
  411a49:	gs mov esi,0xd1048582
  411a4f:	xchg   esi,eax
  411a50:	pop    eax
  411a51:	inc    DWORD PTR [esi-0x9]
  411a54:	sbb    BYTE PTR [edx+0x42ff69cb],cl
  411a5a:	push   es
  411a5b:	push   edx
  411a5c:	ins    BYTE PTR es:[edi],dx
  411a5d:	jg     0x411a1c
  411a5f:	ja     0x411ac4
  411a61:	fisttp QWORD PTR [ebx-0x5c]
  411a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a65:	ds adc eax,0x74195e6a
  411a6b:	push   es
  411a6c:	retf   
  411a6d:	mov    eax,ds:0x6c7d7279
  411a72:	lea    esp,es:[ebp+0x730ab145]
  411a79:	jne    0x4119fc
  411a7b:	(bad)  
  411a7c:	dec    ebp
  411a7d:	leave  
  411a7e:	arpl   WORD PTR [edi+0x58],bx
  411a81:	lea    ebx,[eax+0x38265de3]
  411a87:	(bad)  
  411a88:	outs   dx,DWORD PTR ds:[esi]
  411a89:	out    dx,eax
  411a8a:	sahf   
  411a8b:	sbb    ecx,edx
  411a8d:	pusha  
  411a8e:	and    eax,DWORD PTR ds:0x74991d53
  411a94:	lods   al,BYTE PTR ds:[esi]
  411a95:	inc    edx
  411a96:	(bad)  
  411a97:	jecxz  0x411abd
  411a99:	mov    cl,0xfa
  411a9b:	jne    0x411ae1
  411a9d:	call   0xdb8948c
  411aa2:	or     esi,DWORD PTR ds:0x9e7ca0bc
  411aa8:	lea    ebp,[edi-0x1c60eb89]
  411aae:	inc    eax
  411aaf:	test   DWORD PTR ds:0x999c23c8,0x4fa34c02
  411ab9:	in     al,dx
  411aba:	xor    ecx,esi
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a673
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a677
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a67f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a683
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a687
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a68b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a68f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a693
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a69b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a663
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a66b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a66f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a673
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a677
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [eax],ah
  412636:	loop   0x412683
  412638:	loope  0x4126a5
  41263a:	mov    al,BYTE PTR [ebx-0x7ca3e87d]
  412640:	cmp    DWORD PTR [edi-0x48fbbe1b],0x78
  412647:	push   ebp
  412648:	push   0xffffffae
  41264a:	call   0x29ae:0x27c1c2b6
  412651:	stc    
  412652:	xchg   edx,eax
  412653:	jecxz  0x41262f
  412655:	adc    dl,ch
  412657:	or     BYTE PTR [ebx+0x77dbb9ff],ah
  41265d:	push   ebx
  41265e:	push   cs
  41265f:	jecxz  0x412666
  412661:	pop    ebx
  412662:	or     bh,BYTE PTR [ebx-0x78eab3e5]
  412668:	stos   BYTE PTR es:[edi],al
  412669:	sar    DWORD PTR [ebx+0x54e7b74c],1
  41266f:	aam    0x1b
  412671:	push   0x66
  412673:	dec    ebx
  412674:	shl    DWORD PTR [edx+0x25beb0ef],1
  41267a:	mov    ecx,fs
  41267c:	in     al,0x9e
  41267e:	fwait
  41267f:	outs   dx,BYTE PTR ds:[esi]
  412680:	aas    
  412681:	test   al,0xa6
  412683:	mov    cl,0x51
  412685:	out    0x40,eax
  412687:	add    BYTE PTR [edi-0x4c],al
  41268a:	inc    edx
  41268b:	xchg   ebp,eax
  41268c:	mov    bl,0x3e
  41268e:	or     al,0xae
  412690:	loop   0x4126d6
  412692:	pop    edi
  412693:	aam    0x69
  412695:	dec    esi
  412696:	lds    ebp,FWORD PTR [edi+0x1348f9d3]
  41269c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41269d:	fist   WORD PTR [eax-0x2156e913]
  4126a3:	jmp    0x14b80a90
  4126a8:	aam    0x4c
  4126aa:	or     eax,0x9b8076bb
  4126af:	sbb    al,0xba
  4126b1:	jno    0x4126fe
  4126b3:	shl    DWORD PTR [esi-0x11],1
  4126b6:	mov    BYTE PTR [edi],cl
  4126b8:	ror    ebx,cl
  4126ba:	sbb    al,0xdd
  4126bc:	pop    ss
  4126bd:	(bad)  
  4126bf:	popf   
  4126c0:	mov    dh,0xc4
  4126c2:	pop    ds
  4126c3:	cwde   
  4126c4:	ins    BYTE PTR es:[edi],dx
  4126c5:	xor    al,0x87
  4126c7:	sbb    DWORD PTR [ebp-0x7f],0xb9ca56f3
  4126ce:	add    DWORD PTR [edi+0x7c36ba01],ecx
  4126d4:	inc    ecx
  4126d5:	cli    
  4126d6:	jg     0x4126cf
  4126d8:	inc    ebx
  4126d9:	or     edi,DWORD PTR [edx-0x43]
  4126dc:	xchg   esp,eax
  4126dd:	add    bl,BYTE PTR [esi+0x63]
  4126e0:	xchg   DWORD PTR [ecx+0x15],esi
  4126e3:	sub    ebx,DWORD PTR [esi]
  4126e5:	nop
  4126e6:	in     al,0x69
  4126e8:	xor    al,0x0
  4126ea:	mov    al,0xfc
  4126ec:	in     al,0xce
  4126ee:	mov    ch,0xd7
  4126f0:	pop    es
  4126f1:	xchg   edi,eax
  4126f2:	ja     0x41271b
  4126f4:	(bad)  
  4126f5:	xchg   esi,eax
  4126f6:	aaa    
  4126f7:	and    BYTE PTR [ebp+0x47],dh
  4126fa:	dec    eax
  4126fb:	cdq    
  4126fc:	retf   
  4126fd:	or     ebx,DWORD PTR [ecx]
  4126ff:	ret    
  412700:	lea    edx,[esi+esi*1+0x5c]
  412704:	sbb    ch,al
  412706:	out    0x97,eax
  412708:	dec    esi
  412709:	iret   
  41270a:	adc    ecx,edi
  41270c:	jmp    0x41270e
  41270e:	or     ebp,eax
  412710:	adc    eax,ecx
  412712:	mov    dl,0x7d
  412714:	cmp    al,0x10
  412716:	push   esi
  412717:	pop    es
  412718:	(bad)  
  412719:	jo     0x412702
  41271b:	pop    eax
  41271c:	push   ecx
  41271d:	or     dh,BYTE PTR [edi-0x57]
  412720:	xchg   esi,eax
  412721:	push   esi
  412722:	dec    esp
  412723:	add    ch,ah
  412725:	bound  esi,QWORD PTR [ebp-0x4b]
  412728:	aaa    
  412729:	jg     0x412742
  41272b:	mov    BYTE PTR [ebx+0x7733f27f],ch
  412731:	or     ebx,DWORD PTR ds:0x7c5af199
  412737:	fidiv  WORD PTR [ecx-0x12ba37c2]
  41273d:	dec    edi
  41273e:	(bad)  
  41273f:	out    dx,al
  412740:	das    
  412741:	dec    ecx
  412742:	jmp    0x4126ec
  412744:	pop    ds
  412745:	lods   al,BYTE PTR ds:[esi]
  412746:	mov    DWORD PTR [edx-0x19],ebp
  412749:	jbe    0x412719
  41274b:	pop    edi
  41274c:	cmp    DWORD PTR [eax-0x1c8c604a],ebp
  412752:	out    dx,eax
  412753:	stos   BYTE PTR es:[edi],al
  412754:	aaa    
  412755:	fisttp DWORD PTR [ebp-0x7fef51ea]
  41275b:	(bad)  
  41275c:	retf   
  41275d:	add    esi,eax
  41275f:	sbb    DWORD PTR [edi-0x14c3439a],esi
  412765:	loope  0x412798
  412767:	rcr    DWORD PTR [edi],1
  412769:	add    eax,0x5788ecec
  41276e:	xchg   ebp,eax
  41276f:	xchg   esi,eax
  412770:	add    al,0x4e
  412772:	jne    0x412731
  412774:	jns    0x4127cb
  412776:	pop    ss
  412777:	in     eax,0x1b
  412779:	jl     0x4127a5
  41277b:	das    
  41277c:	stos   BYTE PTR es:[edi],al
  41277d:	add    ah,BYTE PTR [ebx]
  41277f:	call   0x1260e724
  412784:	push   eax
  412785:	arpl   WORD PTR ds:0x1542fc6a,cx
  41278b:	daa    
  41278c:	cmp    DWORD PTR [ebx],ecx
  41278e:	sahf   
  41278f:	add    DWORD PTR [edx],esi
  412791:	xchg   ebp,eax
  412792:	(bad)  
  412793:	ret    
  412794:	pop    esi
  412795:	xchg   ebx,eax
  412796:	and    ecx,esp
  412798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412799:	outs   dx,BYTE PTR ds:[esi]
  41279a:	xor    ecx,DWORD PTR [ebp-0xe1b2196]
  4127a0:	push   edi
  4127a1:	xchg   edx,eax
  4127a2:	push   0x68f548e2
  4127a7:	leave  
  4127a8:	in     al,0xa8
  4127aa:	je     0x412821
  4127ac:	loop   0x41275c
  4127ae:	out    0xb6,al
  4127b0:	dec    edi
  4127b1:	ss inc eax
  4127b3:	push   edx
  4127b4:	js     0x4127b1
  4127b6:	push   ebx
  4127b7:	stos   DWORD PTR es:[edi],eax
  4127b8:	(bad)  
  4127b9:	iret   
  4127ba:	and    al,BYTE PTR [ecx-0x2074b58d]
  4127c0:	jle    0x4127b2
  4127c2:	mov    BYTE PTR [eax+0x2e],ah
  4127c5:	xor    bl,BYTE PTR [esi+0x23]
  4127c8:	ret    
  4127c9:	fcomp  DWORD PTR [esi+0x35d09cfe]
  4127cf:	fisttp QWORD PTR [edi-0x3bc6bfd7]
  4127d5:	out    dx,al
  4127d6:	fisubr DWORD PTR [esi]
  4127d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d9:	fwait
  4127da:	jp     0x412827
  4127dc:	inc    ecx
  4127dd:	xchg   edx,eax
  4127de:	sub    al,0xa6
  4127e0:	dec    ecx
  4127e1:	lds    eax,FWORD PTR [edx]
  4127e3:	cmp    al,0x76
  4127e5:	iret   
  4127e6:	aad    0x73
  4127e8:	in     al,dx
  4127e9:	repz aas 
  4127eb:	jg     0x412824
  4127ed:	mov    eax,DWORD PTR [ebx+0x3d14cb6d]
  4127f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f4:	xchg   ebp,eax
  4127f5:	pushf  
  4127f6:	addr16 inc eax
  4127f8:	sbb    DWORD PTR [esi-0x7b],ebp
  4127fb:	scas   al,BYTE PTR es:[edi]
  4127fc:	lock lahf 
  4127fe:	ret    0xc255
  412801:	ja     0x412841
  412803:	fld    DWORD PTR [ebp+0x29]
  412806:	add    DWORD PTR [esi-0x3],edx
  412809:	jg     0x4127f9
  41280b:	clc    
  41280c:	mov    eax,ds:0xba5827c0
  412811:	sub    ebx,DWORD PTR [ebp-0x66]
  412814:	mov    ds:0x8e1ed401,eax
  412819:	mov    dl,0x3
  41281b:	inc    ebp
  41281c:	scas   al,BYTE PTR es:[edi]
  41281d:	aam    0xa
  41281f:	(bad)  
  412820:	push   edx
  412821:	add    BYTE PTR [ecx+0x79285573],ah
  412827:	jae    0x4127f8
  412829:	call   0x8ff9e570
  41282e:	mov    ds:0x548e9a47,eax
  412833:	xlat   BYTE PTR ds:[ebx]
  412834:	test   edi,esp
  412836:	mov    al,0xa4
  412838:	inc    edi
  412839:	sti    
  41283a:	retf   
  41283b:	push   0x1e
  41283d:	arpl   ax,ax
  41283f:	add    eax,0x460f97f7
  412844:	jp     0x412802
  412846:	loope  0x4127f6
  412848:	mov    DWORD PTR [eax+0xb514b45],edi
  41284e:	mov    ds:0x1cba7324,al
  412853:	in     eax,dx
  412854:	aaa    
  412855:	mov    dh,0x48
  412857:	lods   al,BYTE PTR ds:[esi]
  412858:	test   BYTE PTR [edi],bl
  41285a:	fadd   DWORD PTR [ecx+0x58]
  41285d:	mov    fs,edx
  41285f:	rcl    esi,1
  412861:	cld    
  412862:	sbb    DWORD PTR [edx-0x22],edx
  412865:	sub    ah,dh
  412867:	dec    ebx
  412868:	gs jmp 0x919bb32d
  41286e:	mov    edx,DWORD PTR [eax]
  412870:	jg     0x4128c6
  412872:	pop    ebp
  412873:	out    0xd1,al
  412875:	pop    edx
  412876:	outs   dx,DWORD PTR ds:[esi]
  412877:	iret   
  412878:	jnp    0x41288b
  41287a:	loopne 0x412861
  41287c:	push   0x58
  41287e:	pop    eax
  41287f:	outs   dx,DWORD PTR ds:[esi]
  412880:	push   0x48971cbf
  412885:	cmovb  eax,DWORD PTR [ebx]
  412888:	jp     0x4128eb
  41288a:	and    ebp,DWORD PTR [esp+esi*2]
  41288d:	sar    edi,0x41
  412890:	stos   BYTE PTR es:[edi],al
  412891:	cmp    BYTE PTR [ecx-0x49],ch
  412894:	mov    dl,0xbd
  412896:	xor    bh,BYTE PTR [edi-0x23]
  412899:	mov    bh,0x58
  41289b:	sbb    DWORD PTR [eax-0x26],ebp
  41289e:	inc    ebx
  41289f:	jmp    0x27a737a7
  4128a4:	pushf  
  4128a5:	out    dx,eax
  4128a6:	cmp    BYTE PTR [edx+ebp*8],0x25
  4128aa:	scas   eax,DWORD PTR es:[edi]
  4128ab:	sbb    BYTE PTR [esi-0x34],bh
  4128ae:	or     esi,DWORD PTR [edi]
  4128b0:	gs es adc al,0xbc
  4128b4:	mov    WORD PTR [ebx-0x38],?
  4128b7:	fwait
  4128b8:	inc    esp
  4128b9:	lar    ebx,WORD PTR [edx+0x25]
  4128bd:	icebp  
  4128be:	sbb    al,0xe4
  4128c0:	lods   eax,DWORD PTR ds:[esi]
  4128c1:	lea    ebx,[ebp+0x7]
  4128c4:	mov    edi,0x586b0bd4
  4128c9:	inc    ecx
  4128ca:	addr16 push es
  4128cc:	sti    
  4128cd:	jmp    0x41292b
  4128cf:	and    ah,ch
  4128d1:	fwait
  4128d2:	xor    BYTE PTR [ebx],ah
  4128d4:	loop   0x412857
  4128d6:	mov    bh,0x76
  4128d8:	in     al,dx
  4128d9:	loopne 0x41289d
  4128db:	lods   al,BYTE PTR ds:[esi]
  4128dc:	lea    esp,[esp+ecx*2+0x25]
  4128e0:	fwait
  4128e1:	je     0x412925
  4128e3:	cmp    esi,esp
  4128e5:	pop    edx
  4128e6:	jne    0x4128f6
  4128e8:	fiadd  WORD PTR [ebp-0x3f]
  4128eb:	scas   al,BYTE PTR es:[edi]
  4128ec:	out    0x85,al
  4128ee:	int3   
  4128ef:	sub    edi,DWORD PTR [ecx+0x460d286]
  4128f5:	jmp    0x77f7:0x9acbe5c6
  4128fc:	(bad)  
  4128fd:	imul   edx,DWORD PTR [edx+0x187e8826],0x5466d12a
  412907:	inc    ebx
  412908:	mov    BYTE PTR [ebp-0x3fe43d75],bh
  41290e:	xor    bl,BYTE PTR [ebx]
  412910:	in     eax,0x85
  412912:	scas   eax,DWORD PTR es:[edi]
  412913:	add    eax,0x905ca2c6
  412918:	sar    al,cl
  41291a:	stos   DWORD PTR es:[edi],eax
  41291b:	or     bh,cl
  41291d:	mov    ecx,0x9be4c04a
  412922:	mov    edx,0x756a96bc
  412927:	div    BYTE PTR [edi-0x18]
  41292a:	ins    DWORD PTR es:[edi],dx
  41292b:	sbb    eax,0x6e2bc5c5
  412930:	xchg   ebx,eax
  412931:	or     BYTE PTR [ebp+0x7c65034a],bl
  412937:	mov    ds:0x14fdc687,al
  41293c:	(bad)  
  41293d:	or     BYTE PTR [edx-0x7c],ah
  412940:	aas    
  412941:	mov    esi,0x3230220
  412946:	test   eax,0x85739661
  41294b:	arpl   WORD PTR [eax-0x63],ax
  41294e:	pop    esi
  41294f:	cli    
  412950:	gs ret 0xc59b
  412954:	and    al,0x7c
  412956:	into   
  412957:	dec    edi
  412958:	mov    al,0xbf
  41295a:	add    ah,BYTE PTR [esi]
  41295c:	cmp    BYTE PTR [esp+ebx*2+0x35],ch
  412960:	(bad)  [edx-0xd91936e]
  412966:	call   0x7c318364
  41296b:	inc    ebx
  41296c:	mov    DWORD PTR [edi-0x26],esi
  41296f:	sbb    BYTE PTR [ecx],dl
  412971:	inc    ebp
  412972:	xchg   esp,eax
  412973:	neg    DWORD PTR [edi-0x1da48d5d]
  412979:	sub    DWORD PTR [edi-0x77bf0312],eax
  41297f:	and    bl,ch
  412981:	call   0x870602fb
  412986:	mov    WORD PTR [eax],?
  412988:	fadd   DWORD PTR [edi-0x5a8715e7]
  41298e:	dec    ebx
  41298f:	or     eax,0xae8314ce
  412994:	mov    al,ds:0x50987521
  412999:	ror    DWORD PTR [esi-0x7e],1
  41299c:	push   0x9f1e74b7
  4129a1:	lock jno 0x412968
  4129a4:	sub    esi,DWORD PTR [edi-0x5eb5d2e2]
  4129aa:	into   
  4129ab:	rcl    cl,1
  4129ad:	mov    bh,al
  4129af:	outs   dx,BYTE PTR ds:[esi]
  4129b0:	in     eax,dx
  4129b1:	push   cs
  4129b2:	lods   eax,DWORD PTR ds:[esi]
  4129b3:	mov    ah,0x52
  4129b5:	and    eax,DWORD PTR [esi]
  4129b7:	mov    ecx,0x2fe05cb4
  4129bc:	mov    al,0x5b
  4129be:	adc    bl,cl
  4129c0:	add    eax,0xd1683089
  4129c5:	xchg   ebp,eax
  4129c6:	jmp    0xb5770615
  4129cb:	int    0x79
  4129cd:	out    dx,al
  4129ce:	jno    0x412a43
  4129d0:	push   ss
  4129d1:	(bad)  
  4129d2:	fstp   QWORD PTR [esi+0x24]
  4129d5:	sub    al,0x3e
  4129d7:	or     esp,DWORD PTR [edx+0x2423084e]
  4129dd:	shl    dh,1
  4129df:	inc    esi
  4129e0:	mov    bh,bh
  4129e2:	push   ds
  4129e3:	test   DWORD PTR [edx+0x2d],edx
  4129e6:	arpl   WORD PTR [eax+0x79],bx
  4129e9:	sbb    DWORD PTR [edx],esp
  4129eb:	mov    al,ds:0xfa0554fb
  4129f0:	into   
  4129f1:	mov    ah,0x46
  4129f3:	shr    dl,cl
  4129f5:	in     al,dx
  4129f6:	inc    esi
  4129f7:	and    ah,BYTE PTR [edi+0x244a3a23]
  4129fd:	lea    ebx,[eax-0x45ed30bb]
  412a03:	je     0x4129cc
  412a05:	and    BYTE PTR [edx-0x6799f9bb],0x47
  412a0c:	retf   
  412a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a0e:	loop   0x412a24
  412a10:	xchg   esp,eax
  412a11:	sbb    DWORD PTR [ebx-0xc],edx
  412a14:	pop    esp
  412a15:	jno    0x4129fe
  412a17:	call   0xfae4f66c
  412a1c:	adc    BYTE PTR [edx],ah
  412a1e:	or     ah,BYTE PTR [esi]
  412a20:	or     al,0x1
  412a22:	jae    0x6da2ad2b
  412a28:	sar    DWORD PTR [edx-0x2f],cl
  412a2b:	jne    0x412a67
  412a2d:	push   es
  412a2e:	(bad)  
  412a2f:	test   al,0x35
  412a31:	adc    bh,dl
  412a33:	fwait
  412a34:	icebp  
  412a35:	pop    ds
  412a36:	adc    ah,ch
  412a38:	mov    ds:0xfd68076f,eax
  412a3d:	jmp    0xb2ba:0x417f3de7
  412a44:	dec    esp
  412a45:	daa    
  412a46:	adc    al,0xd
  412a48:	jae    0x412aa2
  412a4a:	pop    edi
  412a4b:	mov    ecx,0xa75bd96
  412a50:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412a52:	ret    0xd2d5
  412a55:	cs xchg eax,eax
  412a58:	and    BYTE PTR es:[eax],0xec
  412a5c:	cmc    
  412a5d:	jle    0x412a80
  412a5f:	push   esi
  412a60:	popf   
  412a61:	mov    ebp,DWORD PTR [edi+0x4c454644]
  412a67:	pop    ds
  412a68:	sub    ch,BYTE PTR [edx-0x53df6c7d]
  412a6e:	mov    al,ds:0x4c2901b
  412a73:	inc    ecx
  412a74:	icebp  
  412a75:	test   DWORD PTR [esi],esp
  412a77:	bound  esp,QWORD PTR [ecx+0x2]
  412a7a:	(bad)  
  412a7b:	xor    BYTE PTR [ebx-0x6d],al
  412a7e:	je     0x412a59
  412a80:	dec    DWORD PTR [edi]
  412a82:	dec    eax
  412a83:	adc    ebp,edi
  412a85:	out    0xca,eax
  412a87:	das    
  412a88:	fcomp  st(5)
  412a8a:	push   eax
  412a8b:	adc    DWORD PTR [ecx+esi*1],esp
  412a8e:	sub    eax,0xe427936
  412a93:	scas   eax,DWORD PTR es:[edi]
  412a94:	pop    es
  412a95:	cmc    
  412a96:	repz cld 
  412a98:	pop    ds
  412a99:	sub    DWORD PTR [edi-0x214f354d],eax
  412a9f:	ret    0x7518
  412aa2:	pushf  
  412aa3:	mov    cl,0xc5
  412aa5:	icebp  
  412aa6:	rcl    ecx,0x73
  412aa9:	cs jge 0x412b16
  412aac:	lock adc al,0xf2
  412aaf:	mov    esi,0xdfbdf6c0
  412ab4:	xchg   edx,eax
  412ab5:	arpl   WORD PTR [ecx+esi*2],di
  412ab8:	call   0xb84aff5b
  412abd:	out    dx,eax
  412abe:	adc    eax,0xf14b5269
  412ac3:	ins    DWORD PTR es:[edi],dx
  412ac4:	cdq    
  412ac5:	xor    edx,DWORD PTR [ebp+0x34e3ff20]
  412acb:	fmul   DWORD PTR [esi-0x7ecd18f7]
  412ad1:	test   al,0xe9
  412ad3:	dec    edi
  412ad4:	pop    ebx
  412ad5:	and    DWORD PTR [esi],0x33
  412ad8:	stos   BYTE PTR es:[edi],al
  412ad9:	cmp    ebx,eax
  412adb:	ja     0x412b16
  412add:	fdivr  DWORD PTR [esi]
  412adf:	cmp    eax,DWORD PTR [edx+0x7e]
  412ae2:	mov    edx,0xab2fd53a
  412ae7:	jo     0x412b5f
  412ae9:	dec    esp
  412aea:	sbb    al,0x50
  412aec:	fidivr WORD PTR gs:[ebp+0x67]
  412af0:	imul   edx,DWORD PTR [ecx-0x77],0x40
  412af4:	xchg   edx,eax
  412af5:	xchg   BYTE PTR [esi-0x66],al
  412af8:	outs   dx,BYTE PTR ds:[esi]
  412af9:	pop    esp
  412afa:	jne    0x412ad8
  412afc:	pop    ds
  412afd:	stos   BYTE PTR es:[edi],al
  412afe:	dec    ebx
  412aff:	int3   
  412b00:	clc    
  412b01:	clc    
  412b02:	jp     0x412b1e
  412b04:	or     al,0xec
  412b06:	icebp  
  412b07:	pop    ebp
  412b08:	adc    eax,ecx
  412b0a:	iret   
  412b0b:	pop    ebp
  412b0c:	pusha  
  412b0d:	add    dh,ch
  412b0f:	jmp    0x412ad6
  412b11:	mov    ah,BYTE PTR [eax+0x17]
  412b14:	das    
  412b15:	pop    es
  412b16:	cmp    edi,DWORD PTR [ecx]
  412b18:	cmp    DWORD PTR [ebp-0x5f83782a],edi
  412b1e:	mov    ah,0x67
  412b20:	xor    DWORD PTR [ebp+0x35],esi
  412b23:	jns    0x412b93
  412b25:	add    esi,DWORD PTR [edx-0x2]
  412b28:	or     DWORD PTR [esi],ebx
  412b2a:	xor    ecx,edx
  412b2c:	es push es
  412b2e:	test   eax,0x333a9905
  412b33:	dec    ebp
  412b34:	pop    edx
  412b35:	fst    DWORD PTR [ecx+ecx*8+0x73]
  412b39:	sub    DWORD PTR ds:0x4e8a9ae,edx
  412b3f:	pop    ebp
  412b40:	not    ebx
  412b42:	popa   
  412b43:	lea    ebp,[ecx]
  412b45:	jmp    0x7b25:0x4d922b70
  412b4c:	sub    ebx,DWORD PTR [ebx+0x54]
  412b4f:	pop    ss
  412b50:	cmp    BYTE PTR ds:0x54d145c2,0x36
  412b57:	sti    
  412b58:	pop    ds
  412b59:	scas   eax,DWORD PTR es:[edi]
  412b5a:	push   0xd0ea4185
  412b5f:	lahf   
  412b60:	dec    ebp
  412b61:	add    ecx,DWORD PTR [eax-0x725d111a]
  412b67:	fdivr  st(7),st
  412b69:	hlt    
  412b6a:	xchg   DWORD PTR [edi-0x563ec6d9],esp
  412b70:	jmp    0x412afd
  412b72:	ins    DWORD PTR es:[edi],dx
  412b73:	sub    bh,BYTE PTR [ecx-0xd999ccc]
  412b79:	dec    ebx
  412b7a:	imul   eax
  412b7c:	sbb    DWORD PTR [ecx+edi*8+0x64],edx
  412b80:	retf   
  412b81:	aas    
  412b82:	and    al,0x75
  412b84:	fcomi  st,st(6)
  412b86:	js     0x412bef
  412b88:	jg     0x412bff
  412b8a:	sub    al,0xb0
  412b8c:	js     0x412b1b
  412b8e:	adc    DWORD PTR [edx+0x41291552],edi
  412b94:	mov    ds:0x2bc5c1e,al
  412b99:	add    al,0xd0
  412b9b:	xchg   ecx,eax
  412b9c:	mov    edx,0xd631425
  412ba1:	daa    
  412ba2:	test   BYTE PTR [edx-0xc101cc6],dh
  412ba8:	dec    esp
  412ba9:	mov    dl,0x65
  412bab:	push   cs
  412bac:	aam    0x44
  412bae:	sbb    eax,0x1877a1c2
  412bb3:	test   al,0x4a
  412bb5:	jmp    0x412b79
  412bb7:	fcomp  QWORD PTR ds:0xb150914f
  412bbd:	push   es
  412bbe:	mov    dl,0x39
  412bc0:	xchg   ecx,eax
  412bc1:	fcmovu st,st(0)
  412bc3:	dec    esp
  412bc4:	in     eax,0x38
  412bc6:	test   al,0x5
  412bc8:	loope  0x412bc5
  412bca:	mov    bh,0x30
  412bcc:	fld    DWORD PTR [ebx]
  412bce:	jae    0x412c14
  412bd0:	mov    ch,0x22
  412bd2:	daa    
  412bd3:	sti    
  412bd4:	mov    ds:0xa9d9bb9f,eax
  412bd9:	in     eax,dx
  412bda:	clc    
  412bdb:	xchg   ebp,eax
  412bdd:	iret   
  412bde:	add    DWORD PTR [edi+0x31],eax
  412be1:	inc    esp
  412be2:	adc    eax,0xe67b0a13
  412be7:	bound  ecx,QWORD PTR [esi-0x4220be07]
  412bed:	enter  0x2c28,0x6c
  412bf1:	push   edi
  412bf2:	inc    edi
  412bf3:	dec    ebp
  412bf4:	scas   eax,DWORD PTR es:[edi]
  412bf5:	pop    ss
  412bf6:	adc    dl,BYTE PTR [edi+eiz*1+0x11]
  412bfa:	add    dl,BYTE PTR [ebp+0x2cb7ac0d]
  412c00:	mov    ebp,0x5a3ce780
  412c05:	shl    DWORD PTR [eax],0xb1
  412c08:	mov    al,0xd9
  412c0a:	sub    ecx,DWORD PTR [edx-0x59]
  412c0d:	push   edx
  412c0e:	xchg   esi,eax
  412c0f:	inc    edi
  412c10:	inc    ecx
  412c11:	popa   
  412c12:	enter  0xfd9e,0xbd
  412c16:	aad    0xe2
  412c18:	cmp    BYTE PTR [ebx],dl
  412c1a:	ss jb  0x412bcf
  412c1d:	inc    esi
  412c1e:	sbb    al,0xa7
  412c20:	xor    cl,al
  412c22:	pop    edx
  412c23:	xor    ch,dh
  412c25:	and    BYTE PTR [esi+ebp*1],cl
  412c28:	out    dx,al
  412c29:	adc    DWORD PTR [eax],0x7dc77111
  412c2f:	dec    ecx
  412c30:	sub    cl,BYTE PTR [ecx-0x54b41788]
  412c36:	xchg   DWORD PTR [edi+0x21],esi
  412c39:	test   eax,0x8bf94c0c
  412c3e:	iret   
  412c3f:	clc    
  412c40:	sub    DWORD PTR [ebp-0x114d6e32],edi
  412c46:	mov    eax,es
  412c48:	in     eax,dx
  412c49:	add    eax,0x36f7052
  412c4e:	dec    ecx
  412c4f:	adc    BYTE PTR [ebp-0x527b2db],0xe5
  412c56:	neg    BYTE PTR [edi-0x63]
  412c59:	adc    BYTE PTR [ecx],al
  412c5b:	ja     0x412c5a
  412c5d:	xchg   edx,eax
  412c5e:	pop    edx
  412c5f:	outs   dx,BYTE PTR ds:[esi]
  412c60:	mov    ah,0xee
  412c62:	leave  
  412c63:	in     eax,dx
  412c64:	mov    al,ds:0x3ec3da3d
  412c69:	punpckhbw mm7,mm2
  412c6c:	adc    DWORD PTR [edx],ebx
  412c6e:	mov    ebp,0x974e02fb
  412c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c74:	aas    
  412c75:	inc    eax
  412c76:	in     eax,dx
  412c77:	and    BYTE PTR [esi-0x3b],ah
  412c7a:	xchg   BYTE PTR [eax+eiz*1-0x7b916c73],bh
  412c81:	dec    esi
  412c82:	cld    
  412c83:	(bad)  
  412c84:	fsub   QWORD PTR [edx-0x388a8b2e]
  412c8a:	fld    DWORD PTR [eax+esi*8-0x61]
  412c8e:	dec    esp
  412c8f:	leave  
  412c90:	mov    ecx,0xd6641338
  412c95:	push   0x1f4672cb
  412c9a:	cmp    cl,BYTE PTR [edi]
  412c9c:	xchg   ebx,eax
  412c9d:	stc    
  412c9e:	retf   
  412c9f:	lahf   
  412ca0:	pop    esi
  412ca1:	rcr    DWORD PTR [esi+0x7a],0xc0
  412ca5:	inc    esi
  412ca6:	mov    edx,0xf586e3f9
  412cab:	push   0xffffffe6
  412cad:	sbb    al,0x5f
  412caf:	sub    BYTE PTR [eax-0x3f9770cb],ah
  412cb5:	sahf   
  412cb6:	xchg   ecx,eax
  412cb7:	pop    eax
  412cb8:	dec    esp
  412cb9:	pusha  
  412cba:	xor    dl,BYTE PTR [edi-0x52061a4]
  412cc0:	cmp    edx,esp
  412cc2:	je     0x412cde
  412cc4:	ftst   
  412cc6:	and    BYTE PTR [esp+ebx*2+0x63],0x73
  412ccb:	stos   DWORD PTR es:[edi],eax
  412ccc:	sbb    al,0x90
  412cce:	out    dx,al
  412ccf:	xor    esp,eax
  412cd1:	push   edi
  412cd2:	test   DWORD PTR [ebp+0x4a],ebp
  412cd5:	into   
  412cd6:	jnp    0x412cbb
  412cd8:	dec    ecx
  412cd9:	inc    ecx
  412cda:	dec    ecx
  412cdb:	mov    ebx,0x7e636dce
  412ce0:	out    dx,eax
  412ce1:	push   0xffffffe8
  412ce3:	fsub   st(4),st
  412ce5:	add    eax,0x740cb997
  412cea:	stos   DWORD PTR es:[edi],eax
  412ceb:	stos   BYTE PTR es:[edi],al
  412cec:	adc    DWORD PTR [ecx+ebx*1+0x1c],esp
  412cf0:	cmp    dl,BYTE PTR [edi+0x7b118801]
  412cf6:	fimul  WORD PTR [ebp-0x57dfbe49]
  412cfc:	addr16 dec ecx
  412cfe:	clc    
  412cff:	out    0xb9,eax
  412d01:	mov    eax,0x19c9ae21
  412d06:	rcr    BYTE PTR [ebx-0x8],0xc8
  412d0a:	hlt    
  412d0b:	loope  0x412d81
  412d0d:	inc    edi
  412d0e:	(bad)  [ebx-0x2f]
  412d11:	and    DWORD PTR [ebx-0x50],esi
  412d14:	cld    
  412d15:	mov    al,dl
  412d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d18:	sub    al,dl
  412d1a:	rcl    DWORD PTR [ecx+0x6e],cl
  412d1d:	pop    eax
  412d1e:	jmp    0xb08:0x53bf778b
  412d25:	(bad)  
  412d26:	sub    eax,0xaf251b2a
  412d2b:	and    DWORD PTR [edx-0x1adee37],0xffffffce
  412d32:	push   ecx
  412d33:	add    eax,0xbac12a81
  412d38:	mov    ecx,0x585d1930
  412d3d:	xchg   ebx,eax
  412d3e:	xchg   esi,eax
  412d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d40:	ja     0x412cdb
  412d42:	dec    ecx
  412d43:	outs   dx,BYTE PTR ds:[esi]
  412d44:	fucomp st(5)
  412d46:	xor    al,0x6d
  412d48:	mov    dh,0x2d
  412d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4b:	fld    DWORD PTR [edx+0x1a]
  412d4e:	push   eax
  412d4f:	add    eax,0x68595efd
  412d54:	arpl   WORD PTR [eax+0x187002f2],ax
  412d5a:	cmp    bh,al
  412d5c:	jo     0x412dd3
  412d5e:	push   edi
  412d5f:	inc    ecx
  412d60:	das    
  412d61:	(bad)  
  412d62:	outs   dx,BYTE PTR ds:[esi]
  412d63:	aad    0xc0
  412d65:	daa    
  412d66:	xor    cl,BYTE PTR [ebx]
  412d68:	bound  eax,QWORD PTR [ebx+ecx*8+0x5deca171]
  412d6f:	inc    ecx
  412d70:	sub    eax,0xd42ee058
  412d75:	in     al,dx
  412d76:	and    ah,dh
  412d78:	sahf   
  412d79:	push   ebp
  412d7a:	add    eax,0x8623d5aa
  412d7f:	add    eax,0xd313f2f9
  412d84:	mov    ss,WORD PTR [edx+0xe]
  412d87:	daa    
  412d88:	hlt    
  412d89:	mov    edx,0xf9cf20b7
  412d8e:	fnstsw WORD PTR [ebx+eiz*1]
  412d91:	dec    esi
  412d92:	rol    ebx,1
  412d94:	aam    0x78
  412d96:	adc    BYTE PTR [esi+esi*2],ch
  412d99:	hlt    
  412d9a:	jae    0x412d9e
  412d9c:	push   edx
  412d9d:	cwde   
  412d9e:	aad    0x88
  412da0:	jns    0x412d4e
  412da2:	sbb    DWORD PTR [edi],esi
  412da4:	fidivr WORD PTR [ebx]
  412da6:	outs   dx,BYTE PTR ds:[esi]
  412da7:	fisub  DWORD PTR [ecx]
  412da9:	pop    esp
  412daa:	sub    eax,0xd6181f61
  412daf:	clc    
  412db0:	test   eax,0x752c8fee
  412db5:	dec    esi
  412db6:	jno    0x412dd7
  412db8:	call   0xc949:0x939fa4d2
  412dbf:	sbb    dh,BYTE PTR [esp+ecx*4]
  412dc2:	iret   
  412dc3:	enter  0xe98a,0xfb
  412dc7:	ja     0x412dc5
  412dc9:	stos   BYTE PTR es:[edi],al
  412dca:	aad    0xd7
  412dcc:	or     al,0xc7
  412dce:	arpl   WORD PTR [ebx-0x5547db43],cx
  412dd4:	dec    esi
  412dd5:	(bad)  
  412dd7:	loop   0x412dd2
  412dd9:	pop    ss
  412dda:	cld    
  412ddb:	popa   
  412ddc:	jns    0x412d63
  412dde:	std    
  412ddf:	jmp    0x412d75
  412de1:	jmp    0x412dd0
  412de3:	not    DWORD PTR [ebx-0x579ff8b0]
  412de9:	loop   0x412d90
  412deb:	stos   DWORD PTR es:[edi],eax
  412dec:	sbb    al,0x15
  412dee:	retf   0x4777
  412df1:	cmp    BYTE PTR [ebp+0xecbf125],cl
  412df7:	inc    edx
  412df8:	outs   dx,BYTE PTR ds:[esi]
  412df9:	cwde   
  412dfa:	cli    
  412dfb:	push   edi
  412dfc:	pop    ebx
  412dfd:	cmp    bh,ch
  412dff:	int3   
  412e00:	jmp    0xaead4f47
  412e05:	jle    0x412e02
  412e07:	cmc    
  412e08:	icebp  
  412e09:	and    BYTE PTR [edx],bh
  412e0b:	pop    edx
  412e0c:	xchg   ecx,eax
  412e0d:	mov    al,0x90
  412e0f:	mov    ebx,0x53f5f648
  412e14:	jbe    0x412dc4
  412e16:	pop    esp
  412e17:	sub    eax,esp
  412e19:	(bad)  
  412e1a:	adc    bl,BYTE PTR [ebx+0x78]
  412e1d:	sbb    BYTE PTR [edx-0x53a1e2d7],dh
  412e23:	into   
  412e24:	fidiv  DWORD PTR [esi+0x267d10b3]
  412e2a:	jge    0x412e02
  412e2c:	aas    
  412e2d:	shr    BYTE PTR [eax],cl
  412e2f:	mov    ?,WORD PTR [edi+0x566c5e74]
  412e35:	push   esi
  412e36:	in     al,dx
  412e37:	xchg   edi,eax
  412e38:	icebp  
  412e39:	add    DWORD PTR [eax+0x5d],esi
  412e3c:	sub    ebx,edx
  412e3e:	mov    dh,0xf0
  412e40:	mov    ecx,DWORD PTR [edi+0x8]
  412e43:	data16 xor BYTE PTR [ebx+0x7fa4abc0],0x7d
  412e4b:	ret    
  412e4c:	pop    edi
  412e4d:	test   al,0x26
  412e4f:	xchg   esp,eax
  412e50:	and    BYTE PTR [ebx+0x46],bl
  412e53:	dec    eax
  412e54:	cmc    
  412e55:	out    0xe,eax
  412e57:	gs cwde 
  412e59:	jno    0x412ea4
  412e5b:	sub    al,0x95
  412e5d:	aaa    
  412e5e:	mov    edx,0x13e5ee08
  412e63:	add    al,0xc8
  412e65:	inc    edi
  412e66:	adc    DWORD PTR [ecx+0x136af9ef],edx
  412e6c:	sub    bh,bh
  412e6e:	or     bh,BYTE PTR [ecx]
  412e70:	loop   0x412e1a
  412e72:	les    edi,FWORD PTR [edi]
  412e74:	pop    ecx
  412e75:	inc    eax
  412e76:	imul   edx,DWORD PTR [ecx-0x20],0xfffffffd
  412e7a:	(bad)  
  412e7b:	fdiv   st(5),st
  412e7d:	and    DWORD PTR cs:0x47df5c37,ebx
  412e84:	push   0xffffff95
  412e86:	frstor [eax]
  412e88:	icebp  
  412e89:	out    0x45,eax
  412e8b:	mov    dh,0x95
  412e8d:	outs   dx,BYTE PTR ds:[esi]
  412e8e:	das    
  412e8f:	fcomp  QWORD PTR [ebp+0x3c2f39cb]
  412e95:	push   es
  412e96:	xchg   esp,eax
  412e97:	fs jo  0x412e3b
  412e9a:	rol    DWORD PTR [edx+0x46a0bce1],0x7e
  412ea1:	mov    edx,0x2944c517
  412ea6:	test   eax,0xa28039b0
  412eab:	leave  
  412eac:	lods   eax,DWORD PTR ds:[esi]
  412ead:	jp     0x412e4a
  412eaf:	adc    esi,DWORD PTR [edi+0x17]
  412eb2:	mov    esp,DWORD PTR [eax+0x24a29fc4]
  412eb8:	add    BYTE PTR [edx-0x36],cl
  412ebb:	fidivr WORD PTR [ebp+0x11]
  412ebe:	dec    ebp
  412ebf:	retf   0x3cdf
  412ec2:	jge    0x412f24
  412ec4:	add    BYTE PTR [edx],dl
  412ec6:	xchg   ebp,eax
  412ec7:	pop    edi
  412ec8:	fsub   QWORD PTR [ebx]
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	cwde   
  412ecc:	fisub  DWORD PTR [ebp-0x2de28bb2]
  412ed2:	test   DWORD PTR [ebp+0x1b],edi
  412ed5:	and    cl,BYTE PTR [ebx+0x3a749d97]
  412edb:	dec    ebp
  412edc:	out    dx,al
  412edd:	inc    eax
  412ede:	or     ah,BYTE PTR [ebx-0x8]
  412ee1:	icebp  
  412ee2:	push   esi
  412ee3:	jae    0x412ec5
  412ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee6:	repz sub BYTE PTR [eax],ah
  412ee9:	sbb    edi,DWORD PTR [ecx+0x71c65a41]
  412eef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef0:	idiv   DWORD PTR [edx+0x24e76dc3]
  412ef6:	pop    esp
  412ef7:	test   DWORD PTR [esi+0x797f2de],0xe5edf0f1
  412f01:	sahf   
  412f02:	cdq    
  412f03:	add    ebx,ebx
  412f05:	shl    BYTE PTR [edx],0xb
  412f08:	mov    WORD PTR [eax-0x7660cc86],fs
  412f0e:	icebp  
  412f0f:	shr    BYTE PTR [edi+eiz*4-0x13],1
  412f13:	mov    edx,0x8fd8bf74
  412f18:	sets   BYTE PTR [ecx+0x3e]
  412f1c:	(bad)  
  412f1d:	pop    ebp
  412f1e:	jmp    0xeea:0xd46745c6
  412f25:	cld    
  412f26:	xor    ebx,DWORD PTR [eax+0x6b]
  412f29:	add    ah,BYTE PTR [edx]
  412f2b:	(bad)  
  412f2d:	les    ebx,FWORD PTR [ebp+0x26]
  412f30:	mov    edx,0x5040b698
  412f35:	jne    0x412f45
  412f37:	mov    bh,0xc5
  412f39:	push   ebp
  412f3a:	stos   DWORD PTR es:[edi],eax
  412f3b:	jbe    0x412f3c
  412f3d:	call   0x81bb:0x5b929fd5
  412f44:	(bad)  
  412f45:	pushf  
  412f46:	adc    esp,DWORD PTR [edi+0x17]
  412f49:	scas   eax,DWORD PTR es:[edi]
  412f4a:	mov    edi,0xb45d405e
  412f4f:	pushf  
  412f50:	repz out dx,eax
  412f52:	jp     0x412fc0
  412f54:	inc    esi
  412f55:	push   cs
  412f56:	retf   0xa00c
  412f59:	inc    ecx
  412f5a:	add    ah,BYTE PTR [ebp+0x54]
  412f5d:	xchg   ebp,eax
  412f5e:	xchg   esp,eax
  412f5f:	sub    DWORD PTR [ecx-0x5cea0663],eax
  412f65:	ds in  al,dx
  412f67:	mov    eax,ds:0x66b263fc
  412f6c:	xor    bh,dl
  412f6e:	ins    DWORD PTR es:[edi],dx
  412f6f:	loop   0x412fcf
  412f71:	aad    0xb0
  412f73:	(bad)  
  412f74:	fcomp  QWORD PTR [edx-0x60149dac]
  412f7a:	and    al,ch
  412f7c:	adc    al,0x47
  412f7e:	leave  
  412f7f:	jg     0x412f90
  412f81:	pop    ecx
  412f82:	jp     0x412f64
  412f84:	add    eax,0x688d610e
  412f89:	fisub  DWORD PTR [esi-0x18]
  412f8c:	mov    eax,ds:0x412de7c4
  412f91:	add    BYTE PTR [eax+edi*4-0x4759dc66],ah
  412f98:	repz jge 0x412f5b
  412f9b:	cmp    eax,0x5a1c5232
  412fa0:	xor    eax,esp
  412fa2:	mov    edx,0x4f8bb353
  412fa7:	cmp    eax,0xbeb9ca25
  412fac:	mov    bh,BYTE PTR [ecx+eax*4+0x49ef6c67]
  412fb3:	popa   
  412fb4:	mov    ecx,0x2c11ff6d
  412fb9:	push   ebx
  412fba:	sbb    BYTE PTR [edx],ch
  412fbc:	jge    0xd2809383
  412fc2:	out    dx,al
  412fc3:	push   edi
  412fc4:	fs dec eax
  412fc6:	and    BYTE PTR [ecx-0x46],ah
  412fc9:	and    al,0xed
  412fcb:	pop    ebx
  412fcc:	and    al,0x46
  412fce:	loop   0x412f9f
  412fd0:	pxor   mm7,mm6
  412fd3:	pop    ds
  412fd4:	jne    0x412fad
  412fd6:	aas    
  412fd7:	xchg   esi,eax
  412fd8:	retf   
  412fd9:	in     eax,0x3
  412fdb:	mov    cl,0x4f
  412fdd:	mov    ebp,0xc680f067
  412fe2:	xor    DWORD PTR [ecx-0x5f],ecx
  412fe5:	retf   
  412fe6:	ret    0xc976
  412fe9:	dec    esi
  412fea:	and    DWORD PTR [eax-0x1b4ba4ca],esi
  412ff0:	xor    ecx,DWORD PTR [edx-0x67]
  412ff3:	call   FWORD PTR [edx+0x38]
  412ff6:	mov    ch,0xd5
  412ff8:	pop    edi
  412ff9:	cmp    DWORD PTR [edi+edx*1],edi
  412ffc:	mov    ds,ebp
  412ffe:	sub    ebx,ebx
  413000:	outs   dx,DWORD PTR ds:[esi]
  413001:	push   edi
  413002:	adc    BYTE PTR [ecx+0x2a],ah
  413005:	es sub DWORD PTR fs:[eax],esi
  413009:	aam    0xa5
  41300b:	loopne 0x41303a
  41300d:	arpl   WORD PTR [edi],sp
  41300f:	pop    ebx
  413010:	pop    ds
  413011:	and    al,BYTE PTR [ecx-0x713f44de]
  413017:	inc    ecx
  413018:	jb     0x413093
  41301a:	(bad)  
  41301b:	adc    ch,BYTE PTR [edx]
  41301d:	(bad)  
  41301e:	ja     0x412fac
  413020:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413022:	jo     0x412ff6
  413024:	and    eax,0xd07433da
  413029:	adc    eax,0xafc73296
  41302e:	clc    
  41302f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413030:	mov    eax,DWORD PTR [eax]
  413032:	and    ecx,esi
  413034:	lock scas eax,DWORD PTR es:[edi]
  413036:	xlat   BYTE PTR ds:[ebx]
  413037:	ss inc esi
  413039:	xchg   ebx,eax
  41303a:	xchg   ebp,eax
  41303b:	icebp  
  41303c:	jge    0x413065
  41303e:	pop    ecx
  41303f:	and    eax,0x6eeaf004
  413044:	and    cl,BYTE PTR [edx]
  413046:	das    
  413047:	pusha  
  413048:	sbb    ch,BYTE PTR [edi+0x36b4a32e]
  41304e:	push   0xffffff8c
  413050:	sbb    bl,BYTE PTR [edi]
  413052:	and    BYTE PTR [esi],0x69
  413055:	(bad)  
  413056:	xor    DWORD PTR [esi],eax
  413058:	jmp    DWORD PTR [edi-0x5a894ab1]
  41305e:	or     DWORD PTR [esi+0x4a7d8c37],ecx
  413064:	fld    QWORD PTR [ecx*2+0x72607329]
  41306b:	mov    edx,0xddfcfb01
  413070:	dec    ebx
  413071:	push   ecx
  413072:	cmp    al,0x7a
  413074:	out    dx,eax
  413075:	push   esp
  413076:	mov    ds:0x3dcb75b0,eax
  41307b:	dec    edx
  41307c:	inc    edx
  41307d:	xor    eax,0xd4b04dba
  413082:	mov    gs:0xe0c476a9,eax
  413088:	and    ebp,DWORD PTR [ebp-0x51]
  41308b:	xchg   ebp,eax
  41308c:	mov    edi,0xa4123084
  413091:	icebp  
  413092:	mov    cl,0xd6
  413094:	nop
  413095:	out    0xe0,eax
  413097:	dec    esi
  413098:	xor    eax,0xec61fe4d
  41309d:	(bad)  
  41309e:	adc    ebp,DWORD PTR [eax-0x36]
  4130a1:	jns    0x4130a8
  4130a3:	sbb    BYTE PTR [ebx+eiz*1+0x24637748],al
  4130aa:	mov    esi,0xc45609fa
  4130af:	xor    DWORD PTR [ebp+ebp*1-0x772c35f0],0x5afed553
  4130ba:	ss push eax
  4130bc:	(bad)  
  4130bd:	fsub   st(7),st
  4130bf:	dec    ebx
  4130c0:	fcom   DWORD PTR [eax]
  4130c2:	inc    edx
  4130c3:	daa    
  4130c4:	mov    cx,0xbfa
  4130c8:	and    al,BYTE PTR [ebp+0x49170c1]
  4130ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130cf:	or     edi,eax
  4130d1:	lds    esp,FWORD PTR [ebx-0x1]
  4130d4:	test   BYTE PTR [ebx-0x28],bl
  4130d7:	mov    dh,0xcb
  4130d9:	mov    bh,0x4d
  4130db:	and    al,0x35
  4130dd:	mov    cl,0xf3
  4130df:	jo     0x413134
  4130e1:	inc    eax
  4130e2:	inc    ebp
  4130e3:	push   es
  4130e4:	inc    edx
  4130e5:	mov    ecx,0x40180167
  4130ea:	pop    ebp
  4130eb:	xchg   esi,eax
  4130ec:	fdivr  DWORD PTR [eax]
  4130ee:	dec    esi
  4130ef:	(bad)
  4130f2:	mov    edi,0x2e08aa95
  4130f7:	addr16 dec edx
  4130f9:	and    eax,0xa0cb2a96
  4130fe:	cdq    
  4130ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413100:	pop    ebp
  413101:	aas    
  413102:	xchg   ebx,eax
  413103:	inc    edx
  413104:	pop    ebp
  413105:	leave  
  413106:	lods   al,BYTE PTR ds:[esi]
  413107:	push   ecx
  413108:	mov    ebx,0xeed4d53a
  41310d:	sbb    eax,0xbc6d259
  413112:	(bad)  
  413113:	pop    ds
  413114:	sbb    eax,0xc3cc7d44
  413119:	aaa    
  41311a:	cmp    ebx,esi
  41311c:	jo     0x4130bd
  41311e:	out    dx,al
  41311f:	pop    ds
  413120:	in     eax,dx
  413121:	aas    
  413122:	fdivr  QWORD PTR [eax-0x9d8653]
  413128:	xchg   esi,eax
  413129:	dec    eax
  41312a:	dec    edx
  41312b:	push   edx
  41312c:	dec    edi
  41312d:	inc    esp
  41312e:	(bad)  
  41312f:	lock sbb edi,ecx
  413132:	es int 0x6a
  413135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413136:	sahf   
  413137:	leave  
  413138:	movaps xmm1,XMMWORD PTR cs:[edi]
  41313c:	daa    
  41313d:	fmulp  st(4),st
  41313f:	lock jmp 0x413102
  413142:	leave  
  413143:	inc    edx
  413144:	xor    BYTE PTR [ecx+0x5cd65c6f],0xc6
  41314b:	or     al,0x61
  41314d:	mov    dl,0xd4
  41314f:	xchg   ebx,eax
  413150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413151:	ret    
  413152:	mov    ds:0xd9e0896e,eax
  413157:	fbstp  TBYTE PTR [ecx]
  413159:	ret    0xe6c0
  41315c:	fadd   DWORD PTR [ecx]
  41315e:	mov    ebp,0x88c12761
  413163:	pop    esi
  413164:	cmp    DWORD PTR ds:0x57a50b6a,eax
  41316a:	jge    0x413182
  41316c:	add    eax,0xc2434dab
  413171:	cmc    
  413172:	(bad)  
  413173:	(bad)  
  413174:	sub    ch,bh
  413176:	jae    0x4131a4
  413178:	xchg   ecx,eax
  413179:	adc    ebx,eax
  41317b:	ret    0x3fe
  41317e:	sub    eax,0xa86e5ead
  413183:	arpl   WORD PTR [ecx-0x3ea30da8],bp
  413189:	adc    ecx,edi
  41318b:	es std 
  41318d:	popf   
  41318e:	inc    esi
  41318f:	jno    0x41311d
  413191:	stos   DWORD PTR es:[edi],eax
  413192:	xor    bh,BYTE PTR [edi+0x44]
  413195:	inc    esi
  413196:	aaa    
  413197:	mov    esp,0xb40a0013
  41319c:	mov    dl,dh
  41319e:	das    
  41319f:	mov    eax,ds:0xbed58164
  4131a4:	test   eax,0x1447f940
  4131a9:	mov    ecx,0x9a7f3970
  4131ae:	test   esp,0xd2b3eea1
  4131b4:	sub    DWORD PTR [ebx+0x6a],eax
  4131b7:	div    DWORD PTR [esi]
  4131b9:	and    DWORD PTR [ecx+edi*8-0x5f74d87c],edi
  4131c0:	loope  0x4131f2
  4131c2:	pop    edx
  4131c3:	dec    DWORD PTR ds:0xf297c4b3
  4131c9:	dec    esp
  4131ca:	(bad)  
  4131cc:	adc    eax,ebx
  4131ce:	sti    
  4131cf:	mov    esp,0x6a465508
  4131d4:	mov    bl,0x2f
  4131d6:	out    0x67,eax
  4131d8:	adc    esp,DWORD PTR [ecx+0x4f]
  4131db:	dec    esp
  4131dc:	lahf   
  4131dd:	mov    cl,0xf0
  4131df:	pop    ss
  4131e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e1:	retf   0xefb7
  4131e4:	out    0xd3,eax
  4131e6:	pusha  
  4131e7:	and    BYTE PTR [esi+0x6ad998fe],dl
  4131ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ef:	inc    esi
  4131f0:	shr    BYTE PTR [edi+0x1c],cl
  4131f3:	sbb    ebx,esi
  4131f5:	add    ebx,DWORD PTR [ebx]
  4131f7:	push   ecx
  4131f8:	gs (bad) 
  4131fa:	jl     0x413271
  4131fc:	out    dx,eax
  4131fd:	sbb    eax,0xe06b034b
  413202:	push   cs
  413203:	mov    bh,0x64
  413205:	adc    BYTE PTR [edi],dh
  413207:	or     al,0xaa
  413209:	cmp    dl,BYTE PTR [eax+edi*1-0x42]
  41320d:	fimul  DWORD PTR [esi+0x38]
  413210:	bound  ecx,QWORD PTR [eax-0x40]
  413213:	xor    ebp,eax
  413215:	pop    esi
  413216:	scas   al,BYTE PTR es:[edi]
  413217:	and    eax,0x585dc280
  41321c:	fs popf 
  41321e:	cdq    
  41321f:	cmp    ecx,DWORD PTR [ecx-0x57]
  413222:	adc    ah,BYTE PTR [ecx+0x282227f7]
  413228:	pop    ds
  413229:	push   0xf3cbe31e
  41322e:	(bad)  
  41322f:	(bad)  
  413231:	and    eax,0x73d7d3d6
  413236:	aaa    
  413237:	inc    esp
  413238:	push   edx
  413239:	sub    dl,ch
  41323b:	sbb    esp,DWORD PTR [ecx]
  41323d:	imul   DWORD PTR [eax+eax*1]
  413240:	jne    0x4131f3
  413242:	mov    edx,0x734ed58b
  413247:	fisub  DWORD PTR [edx-0x7e]
  41324a:	inc    edi
  41324b:	int    0xa0
  41324d:	inc    edx
  41324e:	popf   
  41324f:	mov    BYTE PTR [edx+edx*4+0x6f443002],dh
  413256:	out    dx,al
  413257:	mov    esi,0xbc9d5027
  41325c:	dec    ecx
  41325d:	mov    dl,0x58
  41325f:	adc    DWORD PTR [edx],esp
  413261:	pop    es
  413262:	and    al,0x37
  413264:	icebp  
  413265:	mov    eax,DWORD PTR [esi]
  413267:	mov    DWORD PTR [ecx+0x0],ecx
  41326a:	bound  ebx,QWORD PTR [esi+0x1f]
  41326d:	(bad)  
  41326e:	pop    ds
  41326f:	mov    ds:0x43781b56,al
  413274:	lahf   
  413275:	push   cs
  413276:	add    esi,edi
  413278:	fdivr  DWORD PTR [ebx+ebp*8-0x59dda5f1]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	mov    al,ds:0x30f9f009
  413285:	sub    DWORD PTR [esi-0x7c],esp
  413288:	push   esi
  413289:	or     al,0xf3
  41328b:	mov    eax,0xdf7920f1
  413290:	adc    dh,ah
  413292:	push   esi
  413293:	xor    DWORD PTR [eax-0x1f],0x762b3339
  41329a:	retf   0xfa42
  41329d:	push   esp
  41329e:	xor    eax,0x5fad80b2
  4132a3:	add    eax,0x7287171a
  4132a8:	dec    edx
  4132a9:	test   ah,dh
  4132ab:	or     al,0x64
  4132ad:	mov    ds:0xd6d728dd,eax
  4132b2:	imul   DWORD PTR [esi+ebp*4]
  4132b5:	mov    esi,0x61c68d73
  4132ba:	ficom  WORD PTR [ebx]
  4132bc:	cmp    dl,BYTE PTR [ebp+0x5]
  4132bf:	mov    esi,0x3dbf8020
  4132c4:	lock cmp DWORD PTR [eax-0x58],esp
  4132c8:	pop    ss
  4132c9:	mov    esi,0x6e8188e7
  4132ce:	jmp    0x14bd86d6
  4132d3:	xor    eax,0x7600836e
  4132d8:	lods   al,BYTE PTR ds:[esi]
  4132d9:	ds push ds
  4132db:	xor    al,0x75
  4132dd:	adc    DWORD PTR ds:0x973fbc53,0x9d72b996
  4132e7:	cmp    DWORD PTR [ebp+0x5a],edi
  4132ea:	pop    edx
  4132eb:	push   edx
  4132ec:	lods   eax,DWORD PTR ds:[esi]
  4132ed:	imul   BYTE PTR [ebp+0x41c5c77e]
  4132f3:	fcomp  QWORD PTR [ebp+0x3d]
  4132f6:	or     cl,ch
  4132f8:	cmp    DWORD PTR [esi],edi
  4132fa:	scas   eax,DWORD PTR es:[edi]
  4132fb:	sbb    dl,BYTE PTR [edx+edx*4]
  4132fe:	xchg   esi,eax
  4132ff:	mov    ebp,0x1a67a9a4
  413304:	in     eax,0xb3
  413306:	ins    DWORD PTR es:[edi],dx
  413307:	jmp    DWORD PTR [ecx+edx*1+0x535b9469]
  41330e:	xlat   BYTE PTR ds:[ebx]
  41330f:	dec    edi
  413310:	fwait
  413311:	push   ebx
  413312:	scas   al,BYTE PTR es:[edi]
  413313:	fiadd  WORD PTR [eax-0x279c52a1]
  413319:	cmp    eax,eax
  41331b:	mov    eax,ds:0x6a1e297d
  413320:	pop    ebp
  413321:	sbb    ebx,DWORD PTR [ebx-0x68d4a05d]
  413327:	jge    0x41336c
  413329:	jl     0x413376
  41332b:	xor    eax,0x34194264
  413330:	jg     0x4132ca
  413332:	cmp    al,dh
  413334:	xchg   edx,eax
  413335:	fcos   
  413337:	mov    eax,ds:0x98b7a330
  41333c:	mov    ecx,0x883aad9
  413341:	out    dx,al
  413342:	or     esp,esi
  413344:	fstp   TBYTE PTR [ecx]
  413346:	push   cs
  413347:	cwde   
  413348:	fld    QWORD PTR [ecx+0x46]
  41334b:	and    al,0xcb
  41334d:	test   eax,0xcd5d2ac3
  413352:	xchg   BYTE PTR [edi],dl
  413354:	and    ch,ah
  413356:	pop    ebx
  413357:	sub    al,BYTE PTR [edi+0x3abfe25e]
  41335d:	shl    BYTE PTR [ebp+0x4005997e],cl
  413363:	outs   dx,DWORD PTR ds:[esi]
  413364:	outs   dx,DWORD PTR ds:[esi]
  413365:	sbb    ah,BYTE PTR [ebx+esi*4+0x3d8ec7ec]
  41336c:	fld    QWORD PTR [esi+0x27828ea]
  413372:	bound  ebx,QWORD PTR [esi-0x78424b3a]
  413378:	retf   
  413379:	test   al,0x72
  41337b:	sbb    dl,ah
  41337d:	fisttp DWORD PTR [ecx-0x337e2dab]
  413383:	pop    esp
  413384:	sub    al,0xc5
  413386:	aam    0x97
  413388:	pop    esp
  413389:	adc    DWORD PTR [ebp+0x7e],0xffffffe2
  41338d:	and    BYTE PTR [edx],bl
  41338f:	ret    0xb48f
  413392:	adc    ah,ch
  413394:	lea    esp,[ebx]
  413396:	pop    esp
  413397:	out    dx,al
  413398:	inc    esi
  413399:	sti    
  41339a:	inc    ebp
  41339b:	jns    0x413415
  41339d:	mov    ds:0x1f03acfd,eax
  4133a2:	retf   
  4133a3:	loopne 0x413340
  4133a5:	inc    esi
  4133a6:	ds dec ecx
  4133a8:	dec    edi
  4133a9:	push   ebp
  4133aa:	mov    ah,0xc2
  4133ac:	or     al,0x31
  4133ae:	dec    esi
  4133af:	pusha  
  4133b0:	adc    eax,0x642cfa41
  4133b5:	mov    edx,0xb8f409ed
  4133ba:	imul   esp,DWORD PTR [edi-0x2d578b21],0x6ed3c4d
  4133c4:	sbb    al,ch
  4133c6:	dec    ebx
  4133c7:	xchg   ebx,eax
  4133c8:	gs lock dec esi
  4133cb:	jl     0x41339d
  4133cd:	pop    esi
  4133ce:	mov    ?,edx
  4133d0:	repnz sbb BYTE PTR [ebx],al
  4133d3:	or     eax,DWORD PTR [ecx+0x75]
  4133d6:	inc    esp
  4133d7:	jle    0x413412
  4133d9:	test   eax,0x58eb3ace
  4133de:	jl     0x4133bb
  4133e0:	(bad)  
  4133e3:	inc    ebx
  4133e4:	sbb    DWORD PTR cs:[esi+esi*1-0x5],ebp
  4133e9:	mov    dh,0x7c
  4133eb:	in     al,dx
  4133ec:	push   ebp
  4133ed:	nop
  4133ee:	rcr    DWORD PTR ds:0xa86c6769,cl
  4133f4:	icebp  
  4133f5:	mov    ds:0x28d46252,al
  4133fa:	or     bl,dh
  4133fc:	add    edi,DWORD PTR [ebx-0x33cc7d96]
  413402:	dec    esp
  413403:	cli    
  413404:	xchg   esi,eax
  413405:	inc    edi
  413406:	mov    bl,0x33
  413408:	(bad)  
  413409:	jge    0x41346c
  41340b:	stc    
  41340c:	push   0x344e5ea1
  413411:	jp     0x413480
  413413:	pop    es
  413414:	jmp    0xae36:0xbd930b5b
  41341b:	fisttp DWORD PTR [ebp-0x77740e5e]
  413421:	sbb    al,0x95
  413423:	jnp    0x413464
  413425:	and    eax,0x29b14c2c
  41342a:	cmp    ebx,DWORD PTR [ebx]
  41342c:	sbb    BYTE PTR [ecx],ch
  41342e:	mov    edi,DWORD PTR [ecx-0x39935882]
  413434:	xor    esp,eax
  413436:	push   0x75
  413438:	pop    ecx
  413439:	out    0x88,eax
  41343b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41343c:	je     0x413424
  41343e:	xor    BYTE PTR [ecx-0x7198582e],dl
  413444:	fimul  WORD PTR [ebx-0x2f]
  413447:	dec    esi
  413448:	addr16 jb 0x4134c0
  41344b:	(bad)  
  41344c:	call   0x20278322
  413451:	mov    edx,DWORD PTR [esi+0x6a61d412]
  413457:	push   ecx
  413458:	push   esi
  413459:	and    edx,DWORD PTR [ecx+0x3e57c6d2]
  41345f:	inc    eax
  413460:	aaa    
  413461:	mov    edi,0xa4dfe0dc
  413466:	jns    0x4134ae
  413468:	fcmovb st,st(2)
  41346a:	push   ebx
  41346b:	imul   ebp,DWORD PTR [ecx-0x6ba94af1],0x60
  413472:	out    0x83,eax
  413474:	adc    DWORD PTR [edx+esi*2-0x22],eax
  413478:	test   DWORD PTR ds:0xc16722d1,ecx
  41347e:	or     BYTE PTR [edi],dl
  413480:	add    BYTE PTR [ebx],bl
  413482:	sub    eax,0x9418a243
  413487:	in     al,0x3b
  413489:	mov    al,0x80
  41348b:	rol    BYTE PTR [ebx],1
  41348d:	mov    bl,0x85
  41348f:	gs test esp,eax
  413492:	dec    esi
  413493:	or     DWORD PTR gs:[ebx+0x13],edi
  413497:	imul   edx,DWORD PTR [eax],0x4b32edd2
  41349d:	std    
  41349e:	ins    DWORD PTR es:[edi],dx
  41349f:	pop    edx
  4134a0:	mov    bh,0x51
  4134a2:	ror    DWORD PTR [ebp+ecx*2-0x2c],1
  4134a6:	shr    dh,1
  4134a8:	popf   
  4134a9:	cmp    edx,DWORD PTR [ebp-0x57]
  4134ac:	jp     0x413525
  4134ae:	ins    DWORD PTR es:[edi],dx
  4134af:	mov    BYTE PTR [edi+0x4c717246],dl
  4134b5:	inc    esp
  4134b6:	fs mov ebp,0xca3edf9b
  4134bc:	lea    ecx,[esi+0x1b]
  4134bf:	mov    ds:0xd4234fb1,al
  4134c4:	add    eax,0x6bdbf6f2
  4134c9:	dec    ebx
  4134ca:	iret   
  4134cb:	dec    edx
  4134cc:	lods   eax,DWORD PTR ds:[esi]
  4134cd:	shl    DWORD PTR [ecx],cl
  4134cf:	test   al,0xd
  4134d1:	shl    BYTE PTR [edi+0x196b83d2],1
  4134d7:	aas    
  4134d8:	mov    ds:0xfc543c1f,al
  4134dd:	push   es
  4134de:	hlt    
  4134df:	mov    eax,0xfb3c607f
  4134e4:	(bad)  
  4134e5:	cli    
  4134e6:	repnz test BYTE PTR [edi+0x1f27c14c],al
  4134ed:	je     0x413527
  4134ef:	mov    ch,0x7b
  4134f1:	daa    
  4134f2:	xor    ecx,DWORD PTR [eax-0x50aebe96]
  4134f8:	(bad)  [edi+0x5f]
  4134fb:	pop    edx
  4134fc:	dec    ebp
  4134fd:	hlt    
  4134fe:	sub    ebx,edx
  413500:	int    0x2c
  413502:	and    cl,bh
  413504:	inc    esi
  413505:	inc    edi
  413506:	jo     0x4134c5
  413508:	cmp    esp,DWORD PTR [edx+0x45769909]
  41350e:	mov    ebp,0xffe86fed
  413513:	adc    bh,BYTE PTR [ebx+0x1]
  413516:	xlat   BYTE PTR ds:[ebx]
  413517:	mov    DWORD PTR [ebx-0x9],edx
  41351a:	xor    esi,DWORD PTR [eax-0x1c704246]
  413520:	popf   
  413521:	stos   BYTE PTR es:[edi],al
  413522:	data16 stc 
  413524:	adc    ebp,eax
  413526:	mov    dh,0x79
  413528:	sub    ah,BYTE PTR [ebx+0x729ba88c]
  41352e:	out    0xa3,al
  413530:	cwde   
  413531:	fcom   DWORD PTR [edi-0x80]
  413534:	pop    esp
  413535:	addr16 in eax,0xf0
  413538:	inc    edx
  413539:	loop   0x4134e2
  41353b:	push   0x5f
  41353d:	pop    ebp
  41353e:	adc    DWORD PTR [ebx-0x1493f78],0x17d6461c
  413548:	mov    ?,eax
  41354a:	shl    ebp,1
  41354c:	(bad)  
  41354d:	in     eax,dx
  41354e:	mov    DWORD PTR [edi-0x2f23ebfd],ecx
  413554:	jnp    0x413575
  413556:	and    DWORD PTR [ebx-0x2d71bdff],esp
  41355c:	push   0xffffffee
  41355e:	adc    al,BYTE PTR [ecx+0x4a]
  413561:	mov    ch,BYTE PTR [ebx+0x6f4841fb]
  413567:	sbb    BYTE PTR [ebp+0x21ddd18c],dh
  41356d:	int    0x41
  41356f:	mov    WORD PTR [edx-0xb],ds
  413572:	mov    esp,DWORD PTR [ecx-0xe]
  413575:	pop    ds
  413576:	bound  ebp,QWORD PTR [edi]
  413578:	mov    al,al
  41357a:	ja     0x413551
  41357c:	addr16 loopne 0x41350d
  41357f:	ret    
  413580:	xor    BYTE PTR [ecx],0x5e
  413583:	mov    bl,0x7
  413585:	popf   
  413586:	loop   0x413547
  413588:	arpl   WORD PTR [eax+0x20],dx
  41358b:	mov    al,0x10
  41358d:	arpl   WORD PTR [ebx-0x79],sp
  413590:	or     dh,dl
  413592:	jg     0x4135e6
  413594:	aas    
  413595:	inc    edx
  413596:	and    DWORD PTR [ecx+0x42f0e2ad],edx
  41359c:	sbb    al,0xcf
  41359e:	loopne 0x4135cb
  4135a0:	push   edi
  4135a1:	fcomip st,st(0)
  4135a3:	repz lds edi,FWORD PTR [ebx+0x34]
  4135a7:	dec    edx
  4135a8:	mov    ah,0xf7
  4135aa:	fisub  DWORD PTR [edx+ebp*1-0x7c]
  4135ae:	mov    al,0x19
  4135b0:	imul   eax,DWORD PTR [ebp-0x4b],0xc
  4135b4:	jp     0x4135ea
  4135b6:	dec    esi
  4135b7:	(bad)  
  4135b8:	adc    eax,0x9d93fb36
  4135bd:	in     al,0x30
  4135bf:	js     0x413563
  4135c1:	ss lock out 0x91,eax
  4135c5:	jle    0x41358c
  4135c7:	jl     0x41358b
  4135c9:	dec    esp
  4135ca:	cdq    
  4135cb:	dec    edx
  4135cc:	ss inc ebx
  4135ce:	jl     0x4135fe
  4135d0:	cli    
  4135d1:	addr16 xchg ah,al
  4135d4:	push   ebp
  4135d5:	and    edi,ebx
  4135d7:	inc    edx
  4135d8:	and    eax,DWORD PTR [ecx+0x454a0605]
  4135de:	dec    DWORD PTR ds:0xf9cd3a7e
  4135e4:	mov    eax,ds:0xc81a0c9e
  4135e9:	sbb    ch,cl
  4135eb:	daa    
  4135ec:	pop    ebp
  4135ed:	and    DWORD PTR [esp+eax*2+0x32ce4ff4],esi
  4135f4:	xor    eax,0xab75e7bf
  4135f9:	ss (bad) 
  4135fc:	lods   al,BYTE PTR ds:[esi]
  4135fd:	or     eax,0xc10e1531
  413602:	push   ecx
  413603:	aas    
  413604:	inc    esp
  413605:	xor    al,0x46
  413607:	add    DWORD PTR [ecx+esi*4+0x2da28918],edi
  41360e:	jg     0x41362b
  413610:	mov    edx,0xf23fcdf5
  413615:	daa    
  413616:	or     al,BYTE PTR [edx-0x646a74a3]
  41361c:	test   al,0xb3
  41361e:	adc    eax,0xfd9b7dd5
  413623:	mov    eax,edi
  413625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413626:	ds sub bh,dh
  413629:	pop    edx
  41362a:	inc    edi
  41362b:	dec    edi
  41362c:	mov    esi,DWORD PTR [edx+edx*1+0x3e]
  413630:	or     BYTE PTR [esp+edx*2],ch
  413633:	mov    ah,0xa8
  413635:	(bad)  
  413637:	add    ecx,eax
  413639:	ja     0x413690
  41363b:	popf   
  41363c:	popf   
  41363d:	mov    dh,0xf
  41363f:	push   ecx
  413640:	rcr    DWORD PTR [edx+edi*1+0x22],0x28
  413645:	sub    DWORD PTR [edi],0x60
  413648:	shl    al,1
  41364a:	jo     0x413617
  41364c:	imul   DWORD PTR [esi]
  41364e:	push   esp
  41364f:	or     al,BYTE PTR [ebx]
  413651:	push   ebp
  413652:	sti    
  413653:	and    ebp,DWORD PTR [edi]
  413655:	pop    esi
  413656:	dec    edx
  413657:	enter  0xe7ab,0x6c
  41365b:	jbe    0x413658
  41365d:	push   cs
  41365e:	sbb    DWORD PTR [edx+0x155bcb0d],edx
  413664:	mov    eax,ds:0xa5361725
  413669:	mul    DWORD PTR [ebp-0x7a225463]
  41366f:	sahf   
  413670:	mov    ch,0x61
  413672:	sub    ah,BYTE PTR [ebp-0xa]
  413675:	mov    ah,dh
  413677:	or     edi,edx
  413679:	in     al,dx
  41367a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367b:	cld    
  41367c:	dec    edi
  41367d:	(bad)  
  41367f:	cld    
  413680:	jge    0x4136bd
  413682:	push   esi
  413683:	sahf   
  413684:	push   0x8295180a
  413689:	and    DWORD PTR [ebx+0x2fd4ec5e],eax
  41368f:	dec    ebp
  413690:	call   0xce320a04
  413695:	lods   al,BYTE PTR ds:[esi]
  413696:	in     eax,0xb7
  413698:	scas   eax,DWORD PTR es:[edi]
  413699:	sbb    cl,BYTE PTR [eax]
  41369b:	call   0x68db7e28
  4136a0:	dec    esp
  4136a1:	nop
  4136a2:	call   0x57993e59
  4136a7:	dec    ecx
  4136a8:	dec    ebx
  4136a9:	fld    st(2)
  4136ab:	adc    eax,0x538080bd
  4136b0:	(bad)  [edi+0x4d]
  4136b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136b4:	cdq    
  4136b5:	mov    dh,BYTE PTR [edi+edx*8]
  4136b8:	mov    esp,0xdd9b7487
  4136bd:	mov    ebp,0x7f06215a
  4136c2:	dec    ebx
  4136c3:	push   ecx
  4136c4:	xor    DWORD PTR [ecx-0x17],0xffffffe3
  4136c8:	inc    eax
  4136c9:	test   al,0x9d
  4136cb:	scas   eax,DWORD PTR es:[edi]
  4136cc:	into   
  4136cd:	sti    
  4136ce:	xlat   BYTE PTR ds:[ebx]
  4136cf:	lds    edi,FWORD PTR [ecx+ebp*4-0x18]
  4136d3:	int    0x22
  4136d5:	inc    ecx
  4136d6:	jne    0x413704
  4136d8:	jnp    0x4136e4
  4136da:	popf   
  4136db:	rcl    BYTE PTR [eax+0x48],0x5d
  4136df:	adc    ch,BYTE PTR [esi]
  4136e1:	lods   al,BYTE PTR ds:[esi]
  4136e2:	cmc    
  4136e3:	or     edi,esp
  4136e5:	inc    esi
  4136e6:	ret    
  4136e7:	cld    
  4136e8:	dec    esi
  4136e9:	pop    esi
  4136ea:	aaa    
  4136eb:	mov    esp,0xaf844d94
  4136f0:	jle    0x413752
  4136f2:	pop    ds
  4136f3:	jnp    0x4136f9
  4136f5:	mov    dh,0x10
  4136f7:	mov    ch,0x59
  4136f9:	bound  edx,QWORD PTR [ecx-0x6068b8a1]
  4136ff:	jmp    0xd88f296
  413704:	addr16 xchg ebp,eax
  413706:	inc    edx
  413707:	add    DWORD PTR fs:[edi-0x52],edi
  41370b:	add    eax,esp
  41370d:	scas   al,BYTE PTR es:[edi]
  41370e:	inc    ecx
  41370f:	sti    
  413710:	test   BYTE PTR [ebx+eiz*8-0x3274ab52],cl
  413717:	dec    ebx
  413718:	test   eax,0xcff13ff3
  41371d:	and    DWORD PTR [edi-0x6a],edx
  413720:	pop    ecx
  413721:	nop
  413722:	popa   
  413723:	fnstsw WORD PTR [edx+ebp*1]
  413726:	or     DWORD PTR [eax+0x2],edx
  413729:	lea    ecx,[eax]
  41372b:	adc    esi,edi
  41372d:	aaa    
  41372e:	add    al,0x19
  413730:	aaa    
  413731:	xchg   BYTE PTR [eax-0x35],ah
  413734:	fldcw  WORD PTR [edi+0x3c]
  413737:	push   0x6d9d9dbf
  41373c:	adc    edi,DWORD PTR [ebx]
  41373e:	test   bl,dl
  413740:	lods   al,BYTE PTR ds:[esi]
  413741:	shr    bl,0x77
  413744:	rol    BYTE PTR gs:[ebp-0xcf76315],0x4b
  41374c:	scas   al,BYTE PTR es:[edi]
  41374d:	imul   BYTE PTR [ebp+0x6e]
  413750:	mov    BYTE PTR [eax],al
  413752:	rol    cl,1
  413754:	xchg   edi,eax
  413755:	fisub  DWORD PTR [ecx+0x66]
  413758:	mov    edi,0x5b0008d4
  41375d:	sbb    dl,bh
  41375f:	pop    ss
  413760:	jmp    0x41376a
  413762:	mov    ds:0x5ffb1a5a,eax
  413767:	adc    ecx,DWORD PTR [esi+0x2927b90f]
  41376d:	jge    0x4137e3
  41376f:	pop    es
  413770:	sahf   
  413771:	cmc    
  413772:	cli    
  413773:	dec    esp
  413774:	inc    ecx
  413775:	mov    ch,0xfb
  413777:	outs   dx,DWORD PTR ds:[esi]
  413778:	jge    0x4137e2
  41377a:	outs   dx,BYTE PTR ds:[esi]
  41377b:	inc    eax
  41377c:	sub    eax,0x8290af99
  413781:	scas   al,BYTE PTR es:[edi]
  413782:	adc    DWORD PTR [ebx+0x112d57f9],eax
  413788:	sub    BYTE PTR [eax-0x56818c0d],dl
  41378e:	in     eax,dx
  41378f:	mov    esp,0x419e1bc5
  413794:	mov    ds:0xdb2e6362,eax
  413799:	sub    BYTE PTR [ecx+eiz*2+0x3b73b5e4],0x67
  4137a1:	or     ch,BYTE PTR [edi+0x4a]
  4137a4:	retf   
  4137a5:	and    BYTE PTR [ebx],0x5a
  4137a8:	jp     0x413783
  4137aa:	in     eax,0x15
  4137ac:	call   0x99d53233
  4137b1:	pop    ecx
  4137b2:	movaps xmm5,XMMWORD PTR [esi-0x8]
  4137b6:	xchg   esi,eax
  4137b7:	pop    es
  4137b8:	fldcw  WORD PTR [eax-0x51f413e3]
  4137be:	xchg   DWORD PTR [ebx+ecx*4+0x621218ca],ebx
  4137c5:	jnp    0x413818
  4137c7:	leave  
  4137c8:	jp     0x4137fb
  4137ca:	frstor [eax]
  4137cc:	mov    ds:0x7eceeba0,eax
  4137d1:	rol    DWORD PTR [esi],0x6a
  4137d4:	test   eax,0x4ad743d7
  4137d9:	dec    esp
  4137da:	mov    bl,0xef
  4137dc:	mov    dl,0x3e
  4137de:	loope  0x4137b6
  4137e0:	ret    0x97e
  4137e3:	xchg   ebp,eax
  4137e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137e5:	jmp    0x4137ec
  4137e7:	(bad)  
  4137e8:	pushf  
  4137e9:	cs clc 
  4137eb:	push   ebp
  4137ec:	add    eax,0xc44d74c
  4137f1:	add    eax,0xf1345692
  4137f6:	cmp    al,0x3f
  4137f8:	test   DWORD PTR [eax+edx*1+0x4db947f5],esi
  4137ff:	(bad)  
  413800:	(bad)
  413803:	mov    dh,0x66
  413805:	and    al,dl
  413807:	push   ss
  413808:	mov    ah,0x26
  41380a:	retf   
  41380b:	stos   BYTE PTR es:[edi],al
  41380c:	(bad)  
  41380d:	iret   
  41380e:	add    eax,0xd7022eab
  413813:	pop    ebx
  413814:	add    DWORD PTR [edi+0x53],0x75
  413818:	out    dx,eax
  413819:	push   ds
  41381a:	mov    al,0xbc
  41381c:	mov    BYTE PTR [edi+0x10],bh
  41381f:	cwde   
  413820:	cli    
  413821:	xchg   edi,eax
  413822:	cmp    DWORD PTR [bp+di],esp
  413825:	push   ebx
  413826:	mov    edi,0xe5f0e4c3
  41382b:	sahf   
  41382c:	push   edx
  41382d:	hlt    
  41382e:	push   esi
  41382f:	retf   
  413830:	mov    dl,0x14
  413832:	scas   eax,DWORD PTR es:[edi]
  413833:	test   al,0x26
  413835:	into   
  413836:	outs   dx,BYTE PTR ds:[esi]
  413837:	test   al,0x78
  413839:	popa   
  41383a:	scas   eax,DWORD PTR es:[edi]
  41383b:	sub    dl,0x23
  41383e:	mov    esp,0x3502d648
  413843:	sar    BYTE PTR ds:[ecx+0x51dce7d0],cl
  41384a:	adc    DWORD PTR [ebp+0x8],0xffffffb3
  41384e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384f:	cwde   
  413850:	push   ebx
  413851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413852:	(bad)  
  413853:	jbe    0x413838
  413855:	imul   edx,DWORD PTR [esi-0x74],0xfffffff7
  413859:	out    0x7,al
  41385b:	push   cs
  41385c:	xchg   edi,eax
  41385d:	xchg   ebp,eax
  41385e:	lods   al,BYTE PTR ds:[esi]
  41385f:	sar    BYTE PTR [ebp+0x3dee3b8],0x9f
  413866:	sbb    DWORD PTR [eax],edx
  413868:	pause  
  41386a:	jmp    0x4138a7
  41386c:	ja     0x4138bb
  41386e:	(bad)  
  41386f:	in     al,0xf0
  413871:	cmp    al,0x92
  413873:	inc    edx
  413874:	js     0x4138ee
  413876:	lods   al,BYTE PTR ds:[esi]
  413877:	inc    ebp
  413878:	sbb    bl,BYTE PTR [eax-0x118068cd]
  41387e:	push   esi
  41387f:	(bad)  
  413880:	adc    BYTE PTR fs:[ecx+0x71f192fc],ah
  413887:	test   BYTE PTR [ebp-0x4e990034],dl
  41388d:	sub    DWORD PTR [ebx+0x7e],edi
  413890:	mov    BYTE PTR ds:0x347dcd1,dl
  413896:	loopne 0x41381c
  413898:	and    al,0x3e
  41389a:	ss pop ds
  41389c:	dec    edx
  41389d:	sbb    edi,DWORD PTR [eax*2-0x12991a8d]
  4138a4:	sahf   
  4138a5:	cdq    
  4138a6:	lods   eax,DWORD PTR ds:[esi]
  4138a7:	stos   DWORD PTR es:[edi],eax
  4138a8:	push   0xb766aa6a
  4138ad:	sub    dh,al
  4138af:	jmp    0x3738:0xec3e23a4
  4138b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b7:	pop    si
  4138b9:	push   cs
  4138ba:	pushf  
  4138bb:	ja     0x41383f
  4138bd:	ds push esp
  4138bf:	mov    al,dh
  4138c1:	push   ss
  4138c2:	in     al,dx
  4138c3:	pushf  
  4138c4:	es dec ebp
  4138c6:	or     eax,0xfffffffb
  4138c9:	add    edx,eax
  4138cb:	or     DWORD PTR [ecx-0x77],esp
  4138ce:	dec    ebx
  4138cf:	ret    
  4138d0:	dec    ecx
  4138d1:	lea    esp,[eax-0x17]
  4138d4:	push   ss
  4138d5:	mov    ds:0xa57f3268,eax
  4138da:	test   eax,0xed456d5a
  4138df:	into   
  4138e0:	bound  ebp,QWORD PTR [ebx-0x6e]
  4138e3:	inc    ecx
  4138e4:	push   ebx
  4138e5:	or     esi,eax
  4138e7:	push   esi
  4138e8:	out    dx,al
  4138e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ea:	std    
  4138eb:	pushf  
  4138ec:	xchg   ebp,eax
  4138ed:	and    edx,DWORD PTR [eax+0x3dc38b3f]
  4138f3:	push   esi
  4138f4:	and    al,0xc3
  4138f6:	pop    edi
  4138f7:	rol    BYTE PTR [ecx],0x50
  4138fa:	ror    DWORD PTR [ecx],0xa7
  4138fd:	iret   
  4138fe:	inc    eax
  4138ff:	popa   
  413900:	stos   DWORD PTR es:[edi],eax
  413901:	sti    
  413902:	jp     0x4138d5
  413904:	pusha  
  413905:	push   esi
  413906:	ins    BYTE PTR es:[edi],dx
  413907:	jnp    0x413977
  413909:	pop    esi
  41390a:	push   ds
  41390b:	xchg   esi,eax
  41390c:	mov    BYTE PTR [ebx+0x5a3cfa18],ah
  413912:	(bad)  
  413913:	inc    di
  413915:	lods   al,BYTE PTR ds:[esi]
  413916:	sbb    DWORD PTR [ecx-0x68b824e2],ecx
  41391c:	popa   
  41391d:	scas   eax,DWORD PTR es:[edi]
  41391e:	test   eax,0x80f26548
  413923:	xor    al,0x96
  413925:	jecxz  0x41395e
  413927:	sub    DWORD PTR [edx-0x2],0xffffff9e
  41392b:	xlat   BYTE PTR ds:[ebx]
  41392c:	out    dx,al
  41392d:	cmc    
  41392e:	cmp    ah,bl
  413930:	inc    edi
  413931:	sahf   
  413932:	pusha  
  413933:	dec    ebp
  413934:	scas   eax,DWORD PTR es:[edi]
  413935:	out    0x15,al
  413937:	rcl    DWORD PTR [ebx],cl
  413939:	add    bl,BYTE PTR [edi]
  41393b:	sub    BYTE PTR [ebx-0x2e7603d1],0xe4
  413942:	hlt    
  413943:	xchg   ecx,eax
  413944:	test   DWORD PTR [ebx-0x13],eax
  413947:	jle    0x4139a6
  413949:	mov    DWORD PTR [ecx],ecx
  41394b:	and    al,0x7b
  41394d:	(bad)  
  41394e:	cmp    eax,0x74c0a62a
  413953:	ins    DWORD PTR es:[edi],dx
  413954:	pop    esi
  413955:	test   eax,0x2ad4bb15
  41395a:	ror    DWORD PTR [ebp-0x24],0xc1
  41395e:	fs xor ch,0x98
  413962:	fstp   QWORD PTR [ecx+ebx*1-0x4a348ae3]
  413969:	je     0x413993
  41396b:	rcl    BYTE PTR [esi+eax*2],cl
  41396e:	inc    ecx
  41396f:	ret    
  413970:	dec    eax
  413971:	popf   
  413972:	in     al,dx
  413973:	mov    ebx,0x95309b90
  413978:	jecxz  0x4139b7
  41397a:	mov    dh,0x8
  41397c:	add    al,bl
  41397e:	int3   
  41397f:	push   ebp
  413980:	sub    DWORD PTR [esi-0x1e],ecx
  413983:	cwde   
  413984:	push   cs
  413985:	xor    eax,0x703b5a68
  41398a:	jae    0x4139af
  41398c:	pop    es
  41398d:	pop    ebp
  41398e:	fwait
  41398f:	cmp    ebp,0x18
  413992:	(bad)  [esi]
  413994:	or     eax,0x459535d1
  413999:	pop    ds
  41399a:	call   0xddfc3bc8
  41399f:	out    dx,al
  4139a0:	repnz or al,cl
  4139a3:	das    
  4139a4:	or     DWORD PTR [eax],edx
  4139a6:	fwait
  4139a7:	out    dx,eax
  4139a8:	div    BYTE PTR [ebx]
  4139aa:	vshufps ymm2,ymm5,YMMWORD PTR [esi-0x61d52397],0x15
  4139b3:	mov    bl,al
  4139b5:	ins    BYTE PTR es:[edi],dx
  4139b6:	daa    
  4139b7:	sub    esp,DWORD PTR [edx-0x2509aaca]
  4139bd:	out    dx,eax
  4139be:	cmp    al,0xde
  4139c0:	cmp    DWORD PTR [eax+0xefee938],edx
  4139c6:	sub    BYTE PTR [eax+0x9d732b9],cl
  4139cc:	mov    edi,0xd751b97e
  4139d1:	mov    ebx,0xc60d512d
  4139d6:	mov    dl,BYTE PTR [ebx]
  4139d8:	mov    BYTE PTR [esi+eiz*2+0x8],bh
  4139dc:	fstp   QWORD PTR [edi+0x76c70b88]
  4139e2:	in     eax,dx
  4139e3:	outs   dx,DWORD PTR ds:[esi]
  4139e4:	ins    BYTE PTR es:[edi],dx
  4139e5:	cmp    cl,BYTE PTR [edx]
  4139e7:	(bad)  
  4139e8:	xchg   ebp,eax
  4139e9:	pop    ecx
  4139ea:	in     al,0xe5
  4139ec:	lar    ebp,WORD PTR [edi-0x60]
  4139f0:	bound  esp,QWORD PTR [ebx-0x957df60]
  4139f6:	mov    ?,WORD PTR [edx-0x62662b10]
  4139fc:	ret    0x7c33
  4139ff:	(bad)  
  413a00:	call   0xca48:0x33e1dd8f
  413a07:	cli    
  413a08:	inc    edi
  413a09:	fs pusha 
  413a0b:	add    eax,0x9ec6c355
  413a10:	mov    eax,0xf4f0a390
  413a15:	adc    ebp,DWORD PTR [edx-0x1a]
  413a18:	sub    DWORD PTR [edx],edx
  413a1a:	rol    BYTE PTR fs:[edi-0x68],1
  413a1e:	sub    BYTE PTR [ecx],dh
  413a20:	jmp    0x5e828851
  413a25:	cmp    eax,0x93125311
  413a2a:	push   ebx
  413a2b:	pop    ebp
  413a2c:	test   BYTE PTR [eax],cl
  413a2e:	jp     0x4139f9
  413a30:	xor    esi,DWORD PTR [ebp+0x3e]
  413a33:	fidivr WORD PTR [ecx-0x3f]
  413a36:	stos   BYTE PTR es:[edi],al
  413a37:	lods   eax,DWORD PTR ds:[esi]
  413a38:	jns    0x413a39
  413a3a:	adc    eax,eax
  413a3c:	jp     0x413a17
  413a3e:	mov    esp,0x8357b434
  413a43:	mov    edi,0x544c81c9
  413a48:	les    esp,FWORD PTR [ebp+0xe3e7a32]
  413a4e:	adc    al,0x70
  413a50:	or     BYTE PTR [ebx+ebx*4],dl
  413a53:	pop    ss
  413a54:	rcr    dh,cl
  413a56:	clc    
  413a57:	fldcw  WORD PTR [ebx]
  413a59:	jecxz  0x413a32
  413a5b:	xchg   edx,eax
  413a5c:	stos   DWORD PTR es:[edi],eax
  413a5d:	mov    DWORD PTR [edx-0x57],ebp
  413a60:	push   ecx
  413a61:	int3   
  413a62:	stos   BYTE PTR es:[edi],al
  413a63:	aad    0x18
  413a65:	xchg   esi,eax
  413a66:	pop    esi
  413a67:	aad    0x23
  413a69:	repnz ins BYTE PTR es:[edi],dx
  413a6b:	in     eax,0x39
  413a6d:	test   dh,dl
  413a6f:	inc    esi
  413a70:	pop    eax
  413a71:	scas   eax,DWORD PTR es:[edi]
  413a72:	aam    0x51
  413a74:	dec    edi
  413a75:	sub    dh,BYTE PTR ds:0xbb935d72
  413a7b:	imul   ebp,DWORD PTR [edx+edx*2-0x4787895a],0x759998c2
  413a86:	and    DWORD PTR [eax],ebp
  413a88:	lds    esi,FWORD PTR [esp+eax*8]
  413a8b:	mov    cl,0xca
  413a8d:	mov    al,0x8e
  413a8f:	call   0xe15e:0x74e7c5b2
  413a96:	jae    0x413add
  413a98:	push   esp
  413a99:	xchg   ebx,eax
  413a9a:	sahf   
  413a9b:	jl     0x413a27
  413a9d:	mov    ch,0x3a
  413a9f:	scas   al,BYTE PTR es:[edi]
  413aa0:	pop    es
  413aa1:	mov    WORD PTR [edi+0x85b9d0d],ss
  413aa7:	sbb    al,0x51
  413aa9:	shl    DWORD PTR [edi+0x4c],0xa9
  413aad:	adc    dl,dh
  413aaf:	aad    0xe3
  413ab1:	fwait
  413ab2:	sub    esi,edi
  413ab4:	jae    0x413ac9
  413ab6:	(bad)  [edx-0x570c3d45]
  413abc:	adc    cl,BYTE PTR [edi-0x42dd486f]
  413ac2:	sbb    eax,0x522a0f2b
  413ac7:	jnp    0x413ab6
  413ac9:	in     eax,0x92
  413acb:	push   eax
  413acc:	xor    esi,esp
  413ace:	xor    al,0xdb
  413ad0:	ins    BYTE PTR es:[edi],dx
  413ad1:	sub    eax,0xa3eb3d41
  413ad6:	sbb    DWORD PTR [eax],ebp
  413ad8:	and    al,0x67
  413ada:	add    al,0xdb
  413adc:	mov    dl,0xc
  413ade:	and    edi,DWORD PTR [esi]
  413ae0:	sti    
  413ae1:	rol    al,cl
  413ae3:	dec    edi
  413ae4:	sbb    ebp,DWORD PTR [ebx-0x51]
  413ae7:	pop    ecx
  413ae8:	neg    al
  413aea:	cdq    
  413aeb:	mov    ch,0xe5
  413aed:	pop    ecx
  413aee:	aas    
  413aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af0:	lods   eax,DWORD PTR ds:[esi]
  413af1:	fwait
  413af2:	bound  esp,QWORD PTR [esi]
  413af4:	out    dx,eax
  413af5:	lock push ebp
  413af7:	xchg   esi,eax
  413af8:	jecxz  0x413b66
  413afa:	arpl   di,bp
  413afc:	and    edi,ebp
  413afe:	lods   al,BYTE PTR ds:[esi]
  413aff:	test   eax,0x4cac9274
  413b04:	xchg   edx,eax
  413b05:	or     BYTE PTR [ecx-0x3ff8e1f8],ah
  413b0b:	xor    BYTE PTR [ebx-0x16],bl
  413b0e:	and    DWORD PTR [edx+esi*1-0x73],ecx
  413b12:	loopne 0x413aec
  413b14:	jae    0x413b0a
  413b16:	jmp    0x413b17
  413b18:	mov    eax,ds:0x4a9c2dca
  413b1d:	sahf   
  413b1e:	jle    0x413b0e
  413b20:	xor    esi,DWORD PTR [eax]
  413b22:	push   cs
  413b23:	adc    ebx,DWORD PTR [esi]
  413b25:	sbb    eax,0x21d20e92
  413b2a:	mov    dh,0x97
  413b2c:	xor    eax,DWORD PTR [esi-0x4a]
  413b2f:	(bad)  
  413b30:	pop    esp
  413b31:	lahf   
  413b32:	add    ah,al
  413b34:	out    0xf3,al
  413b36:	out    dx,al
  413b37:	or     dh,0x5e
  413b3a:	hlt    
  413b3b:	mov    ds:0x96af34f9,eax
  413b40:	in     al,0x7c
  413b42:	pop    edx
  413b43:	pop    ss
  413b44:	sbb    eax,0xddd9e682
  413b49:	mov    ecx,DWORD PTR [ecx]
  413b4b:	pop    esi
  413b4c:	mov    DWORD PTR [eax],esp
  413b4e:	add    edi,ebp
  413b50:	push   0x0
  413b52:	mov    bl,0xcc
  413b54:	sti    
  413b55:	xchg   ecx,eax
  413b56:	in     al,0xb6
  413b58:	adc    al,0xf7
  413b5a:	inc    ebx
  413b5b:	xchg   esp,eax
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	dec    ecx
  413b5e:	std    
  413b5f:	mov    esi,0x26cd6ecd
  413b64:	test   BYTE PTR [edi-0x152d840b],cl
  413b6a:	test   DWORD PTR [edi+0x6b133597],0xc744a4b
  413b74:	je     0x413bd4
  413b76:	cmp    cl,dh
  413b78:	test   BYTE PTR [ebp+0x4aa5d3a3],ah
  413b7e:	test   DWORD PTR [ebp-0x25],ebp
  413b81:	dec    ebx
  413b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b83:	ja     0x413bcd
  413b85:	xor    DWORD PTR [edx-0x20],ebp
  413b88:	cmp    BYTE PTR [ebp-0x7a],ch
  413b8b:	fsub   DWORD PTR [esi+0x38e718a7]
  413b91:	and    ah,bh
  413b93:	outs   dx,BYTE PTR ds:[esi]
  413b94:	scas   eax,DWORD PTR es:[di]
  413b96:	loope  0x413c10
  413b98:	add    DWORD PTR [edx],ecx
  413b9a:	dec    esi
  413b9b:	(bad)  
  413b9d:	adc    BYTE PTR [esi],dh
  413b9f:	adc    BYTE PTR [ecx+0x28],al
  413ba2:	add    DWORD PTR [ebp-0xd993f31],esp
  413ba8:	neg    BYTE PTR [edx-0x23]
  413bab:	dec    eax
  413bac:	ror    dh,cl
  413bae:	push   esi
  413baf:	fs lahf 
  413bb1:	pop    esi
  413bb2:	pop    edi
  413bb3:	jmp    0xbb92:0xf9c7c6bc
  413bba:	and    esp,DWORD PTR [ecx]
  413bbc:	dec    ecx
  413bbd:	cmp    eax,ecx
  413bbf:	add    eax,DWORD PTR [eax+0x2f]
  413bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc3:	(bad)  
  413bc4:	sub    dl,BYTE PTR [ebp+ecx*4-0x61]
  413bc8:	in     al,dx
  413bc9:	ja     0x413b6a
  413bcb:	pushf  
  413bcc:	ret    
  413bcd:	nop
  413bce:	fild   QWORD PTR [esp+ebp*8-0x22af3bc1]
  413bd5:	cs leave 
  413bd7:	add    al,0x7a
  413bd9:	fld    TBYTE PTR [ebp+0x395af35f]
  413bdf:	dec    edi
  413be0:	cld    
  413be1:	mov    al,0x80
  413be3:	xchg   ebp,eax
  413be4:	inc    esi
  413be5:	xor    al,BYTE PTR [esi+ecx*8-0x71e6b5a]
  413bec:	fnsave [esi-0x67]
  413bef:	mov    dh,0x68
  413bf1:	pop    ebp
  413bf2:	push   es
  413bf3:	pop    eax
  413bf4:	adc    al,0x4d
  413bf6:	pop    edi
  413bf7:	fcmovb st,st(5)
  413bf9:	pop    esp
  413bfa:	int3   
  413bfb:	and    DWORD PTR [edx+0x1c],ecx
  413bfe:	rcl    DWORD PTR [ebx+edi*4+0x5f],cl
  413c02:	lods   al,BYTE PTR ds:[esi]
  413c03:	mov    BYTE PTR [eax],al
  413c05:	dec    ebp
  413c06:	into   
  413c07:	mov    BYTE PTR [eax-0x72f0f2c],dl
  413c0d:	or     DWORD PTR [ebx],eax
  413c0f:	sub    bl,BYTE PTR [edi]
  413c11:	add    al,0xc2
  413c13:	jbe    0x413bd8
  413c15:	mov    eax,0xd3235c09
  413c1a:	or     al,0xc2
  413c1c:	enter  0x24e8,0xe4
  413c20:	mov    ebx,0xdfd7224c
  413c25:	mov    ebx,0x8ff438dd
  413c2a:	test   DWORD PTR [esi+0x68],eax
  413c2d:	and    al,0x37
  413c2f:	aas    
  413c30:	fldcw  WORD PTR [ebx-0x192d1ebd]
  413c36:	retf   0x2734
  413c39:	dec    eax
  413c3a:	or     BYTE PTR [edi],0x6f
  413c3d:	inc    edx
  413c3e:	arpl   sp,di
  413c40:	in     al,dx
  413c41:	xchg   ebx,eax
  413c42:	dec    esp
  413c43:	cmp    edi,DWORD PTR [eax]
  413c45:	push   cs
  413c46:	stc    
  413c47:	ds fcmovne st,st(2)
  413c4a:	ins    BYTE PTR es:[edi],dx
  413c4b:	(bad)  
  413c4d:	in     al,0xae
  413c4f:	fucomp st(6)
  413c51:	push   ss
  413c52:	aaa    
  413c53:	aam    0x71
  413c55:	into   
  413c56:	add    al,BYTE PTR [esi-0x6c8a7346]
  413c5c:	ins    DWORD PTR es:[edi],dx
  413c5d:	push   esp
  413c5e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413c60:	mov    eax,0xd50f913a
  413c65:	in     al,0xfe
  413c67:	push   es
  413c68:	xlat   BYTE PTR ds:[ebx]
  413c69:	sub    ch,BYTE PTR [ecx+ebp*4+0x29]
  413c6d:	mov    esi,0xb47fad3b
  413c72:	int    0xd4
  413c74:	add    cl,BYTE PTR [ebx+0x2]
  413c77:	push   ds
  413c78:	scas   eax,DWORD PTR es:[edi]
  413c79:	test   al,0xe7
  413c7b:	mov    al,bl
  413c7d:	int3   
  413c7e:	out    0x81,eax
  413c80:	(bad)  
  413c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c82:	jno    0x413c29
  413c84:	cmc    
  413c85:	sbb    ch,BYTE PTR [eax+0x1f3f30de]
  413c8b:	sub    ebx,DWORD PTR [edx]
  413c8d:	sbb    dh,BYTE PTR [ebp-0x37]
  413c90:	push   edi
  413c91:	in     al,0xdd
  413c93:	repnz xchg ecx,eax
  413c95:	retf   0x6eab
  413c98:	inc    edx
  413c99:	add    eax,0xbcec48ff
  413c9e:	outs   dx,DWORD PTR ds:[esi]
  413c9f:	ret    
  413ca0:	cmp    DWORD PTR [eax-0x790987f5],esi
  413ca6:	sub    DWORD PTR [esi-0x7a527037],ebx
  413cac:	xor    BYTE PTR [esi-0x71995708],0x50
  413cb3:	add    edi,DWORD PTR [esi+0x51425d15]
  413cb9:	inc    ecx
  413cba:	and    DWORD PTR [eax],edx
  413cbc:	cmp    BYTE PTR [eax],dl
  413cbe:	push   0xc79792a9
  413cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc4:	je     0x413cb1
  413cc6:	shl    DWORD PTR [edx+0xd],0xbd
  413cca:	call   0xf3015ffc
  413ccf:	mov    al,ds:0xe64dcac6
  413cd4:	mov    esi,cs
  413cd6:	enter  0x96d1,0xbf
  413cda:	mov    WORD PTR [ebp+ebx*4-0x29],cs
  413cde:	adc    DWORD PTR [eax+ebx*8+0x6e],ebx
  413ce2:	dec    esi
  413ce3:	or     dl,BYTE PTR [ebx]
  413ce5:	ret    0xb3f6
  413ce8:	push   ecx
  413ce9:	mov    dl,0xcf
  413ceb:	repz fs push edi
  413cee:	mov    dl,0x2d
  413cf0:	jp     0x413cb3
  413cf2:	(bad)  
  413cf4:	xlat   BYTE PTR ds:[ebx]
  413cf5:	or     bh,cl
  413cf7:	xchg   esi,eax
  413cf8:	test   BYTE PTR [ebp+0xa706542],ch
  413cfe:	das    
  413cff:	in     eax,dx
  413d00:	loopne 0x413d30
  413d02:	cs gs cwde 
  413d05:	sub    BYTE PTR [eax+0x64a6cf8d],bl
  413d0b:	pop    ebp
  413d0c:	sar    DWORD PTR ds:0x1088cb90,1
  413d12:	fisttp WORD PTR [esi-0x42]
  413d15:	pop    es
  413d16:	adc    eax,0x2fc81d8e
  413d1b:	xlat   BYTE PTR ds:[ebx]
  413d1c:	push   esp
  413d1d:	outs   dx,BYTE PTR ds:[esi]
  413d1e:	shl    BYTE PTR [ecx+0xd],cl
  413d21:	push   fs
  413d23:	aam    0x40
  413d25:	cmp    bh,ch
  413d27:	and    DWORD PTR [edx-0x773c8710],ebp
  413d2d:	mov    eax,ds:0x8a0b4e56
  413d32:	cmp    al,0x90
  413d34:	pop    edi
  413d35:	rcr    BYTE PTR [ecx+0x13dc053e],0x64
  413d3c:	or     DWORD PTR [ebp+0x4f],esi
  413d3f:	popf   
  413d40:	pop    ax
  413d42:	popa   
  413d43:	ss call 0xf72d2934
  413d49:	or     esi,DWORD PTR [ecx+0x12a59cb9]
  413d4f:	bound  ebp,QWORD PTR [ebp+0x45]
  413d52:	adc    al,0x48
  413d54:	int    0xda
  413d56:	add    eax,0x2180c41c
  413d5b:	imul   eax,DWORD PTR [ecx],0x68c18cb1
  413d61:	rcr    dl,1
  413d63:	mov    ebx,0xbfa8573f
  413d68:	shl    DWORD PTR [esp+eiz*2+0x7ecacf31],1
  413d6f:	mov    eax,ds:0x31e742eb
  413d74:	jge    0x413d34
  413d76:	cmp    ah,BYTE PTR [esi]
  413d78:	jecxz  0x413db1
  413d7a:	sbb    al,0x89
  413d7c:	(bad)  [ebx+0x5f]
  413d7f:	repz sub al,BYTE PTR [edx+0x7]
  413d83:	mov    DWORD PTR [edi],ebx
  413d85:	jne    0x413d3e
  413d87:	mov    ecx,0x22fca4bc
  413d8c:	in     al,dx
  413d8d:	or     eax,0x151f7ed0
  413d92:	mov    WORD PTR [edi+0x7c6d7b37],fs
  413d98:	adc    DWORD PTR [eax+0x2444d4e1],esp
  413d9e:	ins    DWORD PTR es:[edi],dx
  413d9f:	(bad)  
  413da1:	(bad)  
  413da2:	fadd   st,st(2)
  413da4:	push   ecx
  413da5:	pop    eax
  413da6:	or     dl,ch
  413da8:	push   ebx
  413da9:	into   
  413daa:	cmp    dl,BYTE PTR [ebx-0x7f2c840b]
  413db0:	lds    esi,FWORD PTR [edx-0x127b047]
  413db6:	mov    edi,0x41c0eeb3
  413dbb:	pop    ss
  413dbc:	fidivr WORD PTR [esi+0x15]
  413dbf:	dec    esp
  413dc0:	outs   dx,DWORD PTR ds:[esi]
  413dc1:	jmp    0x6366:0x4924c57e
  413dc8:	je     0x413e35
  413dca:	and    eax,0xd5d570f6
  413dcf:	push   esp
  413dd0:	les    edx,FWORD PTR [ebx-0x234e77ac]
  413dd6:	sti    
  413dd7:	clc    
  413dd8:	les    esp,FWORD PTR ds:0xf8915103
  413dde:	jmp    0x685b:0x76d3e80c
  413de5:	dec    eax
  413de6:	sbb    BYTE PTR [esi+ebp*2],cl
  413de9:	aaa    
  413dea:	dec    eax
  413deb:	sub    dl,al
  413ded:	leave  
  413dee:	mov    al,0x89
  413df0:	jo     0x413e1e
  413df2:	sbb    edx,DWORD PTR [edi-0x2c9175b1]
  413df8:	(bad)  [esi+0x6e]
  413dfb:	enter  0xf246,0xdf
  413dff:	call   0x56589da1
  413e04:	xchg   ebx,eax
  413e05:	push   0x500a2a60
  413e0a:	pop    ebx
  413e0b:	sub    DWORD PTR [ebp-0x366003f9],ecx
  413e11:	int3   
  413e12:	pop    cx
  413e14:	gs int 0xf8
  413e17:	add    BYTE PTR [esi+0x14],bh
  413e1a:	mov    bl,0x1
  413e1c:	push   ebx
  413e1d:	aaa    
  413e1e:	push   cs
  413e1f:	adc    esi,DWORD PTR [ebp+0x477bbeb6]
  413e25:	test   dh,ch
  413e27:	leave  
  413e28:	pushf  
  413e29:	cmp    DWORD PTR [edi-0xe],eax
  413e2c:	ins    WORD PTR es:[edi],dx
  413e2e:	jne    0x413e2e
  413e30:	push   ecx
  413e31:	push   cs
  413e32:	mov    eax,ds:0x265ec92f
  413e37:	inc    ebx
  413e38:	and    esi,eax
  413e3a:	and    dh,BYTE PTR [edi]
  413e3c:	and    ah,ah
  413e3e:	repz dec ecx
  413e40:	adc    BYTE PTR ds:0x4f482616,al
  413e46:	fcmovnb st,st(4)
  413e48:	inc    eax
  413e49:	ins    DWORD PTR es:[edi],dx
  413e4a:	mov    ch,0x4e
  413e4c:	adc    eax,0x12bc9c37
  413e51:	inc    eax
  413e52:	imul   esi,edx,0xacb3fd26
  413e58:	sub    al,BYTE PTR ds:0x6a6fb2e5
  413e5e:	adc    al,0x73
  413e60:	mov    WORD PTR [edx+0x30a66acd],?
  413e66:	clc    
  413e67:	repnz arpl di,di
  413e6a:	mov    al,ds:0xea3d8843
  413e6f:	imul   edx,DWORD PTR [esp+ebp*1-0x42],0xffffff84
  413e74:	cld    
  413e75:	repnz aaa 
  413e77:	inc    ebx
  413e78:	lock fsub QWORD PTR [eax-0x178c32b9]
  413e7f:	push   ebp
  413e80:	pop    edi
  413e81:	repnz sub edx,ebp
  413e84:	cs sbb edi,esp
  413e87:	ja     0x413e83
  413e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e8a:	mov    ch,0x98
  413e8c:	into   
  413e8d:	dec    esp
  413e8e:	aad    0xd8
  413e90:	stos   DWORD PTR es:[edi],eax
  413e91:	shr    BYTE PTR [esi+0x6964f4ea],1
  413e97:	lea    edi,[eax-0x452ba3ca]
  413e9d:	jo     0x413ee4
  413e9f:	or     eax,0xd0055819
  413ea4:	sub    ah,cl
  413ea6:	inc    ebx
  413ea7:	inc    ebp
  413ea8:	mov    esi,0xcf4e8efc
  413ead:	sti    
  413eae:	mov    edi,ebx
  413eb0:	call   DWORD PTR [esi+0xbca98e4]
  413eb6:	xchg   edi,eax
  413eb7:	ret    
  413eb8:	jnp    0x413e53
  413eba:	mov    dl,0x69
  413ebc:	jle    0x413ea5
  413ebe:	gs ffree st(3)
  413ec1:	fimul  DWORD PTR [edi]
  413ec3:	jle    0x413f3c
  413ec5:	lea    edx,[edx+eax*2]
  413ec8:	out    dx,al
  413ec9:	out    0xb2,al
  413ecb:	adc    edx,DWORD PTR [esi-0x7140c42e]
  413ed1:	or     ebx,esp
  413ed3:	push   es
  413ed4:	paddq  mm3,QWORD PTR [esi-0x4d36cde4]
  413edb:	mov    ebx,?
  413edd:	repz sti 
  413edf:	xchg   ebx,eax
  413ee0:	(bad)  
  413ee1:	scas   al,BYTE PTR es:[edi]
  413ee2:	pop    ebp
  413ee3:	(bad)  
  413ee4:	and    BYTE PTR [esi],al
  413ee6:	mov    dh,BYTE PTR [ebx-0x1013afe4]
  413eec:	mov    cs,WORD PTR gs:[edi+0x25092f3d]
  413ef3:	cmp    esi,ecx
  413ef5:	popa   
  413ef6:	ret    
  413ef7:	jbe    0x413e7b
  413ef9:	out    dx,al
  413efa:	pop    esi
  413efb:	mov    WORD PTR [ecx+0x6e4478aa],?
  413f01:	gs mov edx,0x1caee7a7
  413f07:	add    al,0x7e
  413f09:	(bad)  
  413f0a:	(bad)  
  413f0b:	call   0xf9076a7c
  413f10:	dec    edx
  413f11:	sub    eax,0x1255f6c6
  413f16:	int3   
  413f17:	pusha  
  413f18:	fwait
  413f19:	dec    ecx
  413f1a:	mov    eax,0x48c9ecc3
  413f1f:	push   ecx
  413f20:	pop    ebp
  413f21:	(bad)  
  413f22:	fsub   QWORD PTR [ecx+eax*1]
  413f25:	bound  ebp,QWORD PTR [ebx-0x57]
  413f28:	add    dl,dl
  413f2a:	inc    eax
  413f2b:	pop    ss
  413f2c:	(bad)  
  413f2d:	(bad)  
  413f2e:	sbb    al,0xfd
  413f30:	mov    al,ds:0x947c9c3b
  413f35:	retf   0x63a5
  413f38:	lds    ecx,FWORD PTR [ebp+0x1b]
  413f3b:	loopne 0x413ef3
  413f3d:	int3   
  413f3e:	cli    
  413f3f:	push   0x99001026
  413f44:	js     0x413ed4
  413f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f47:	icebp  
  413f48:	lahf   
  413f49:	sub    eax,0xa451e204
  413f4e:	adc    al,0x31
  413f50:	fnstsw WORD PTR [edi]
  413f52:	loope  0x413fa8
  413f54:	mov    ds:0xa67deeb6,al
  413f59:	adc    DWORD PTR gs:[ebx+edi*2+0x12],ecx
  413f5e:	mov    ss,WORD PTR [edi]
  413f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f61:	and    ebx,esp
  413f63:	pop    edx
  413f64:	test   eax,0xe9660137
  413f69:	ss cwde 
  413f6b:	ins    DWORD PTR es:[edi],dx
  413f6c:	sbb    BYTE PTR [esi-0x35d7398c],cl
  413f72:	call   0x27c8e324
  413f77:	jmp    0x413f12
  413f79:	push   0xffffffa3
  413f7b:	daa    
  413f7c:	pop    ebx
  413f7d:	int3   
  413f7e:	in     eax,0x1a
  413f80:	mov    bh,0x5a
  413f82:	pop    ds
  413f83:	or     DWORD PTR [edi],0x79d4d75c
  413f89:	and    eax,0x3522161a
  413f8e:	(bad)  
  413f8f:	xchg   esp,eax
  413f90:	mov    cl,0x50
  413f92:	nop
  413f93:	daa    
  413f94:	hlt    
  413f95:	mov    edi,0x1e8666b6
  413f9a:	(bad)  [edx+0x66f328cf]
  413fa0:	jbe    0x413ffc
  413fa2:	cvtdq2ps xmm3,xmm2
  413fa5:	(bad)
  413fa8:	push   es
  413fa9:	test   DWORD PTR [ecx-0x7ac5c45d],ecx
  413faf:	dec    edx
  413fb0:	mov    edx,0xe3b444b7
  413fb5:	cmp    edx,DWORD PTR [edx+0x22]
  413fb8:	and    BYTE PTR [ebp+0x7dcb1ac6],0x74
  413fbf:	cmp    DWORD PTR [esi+0x38cb0810],esp
  413fc5:	push   0xffffffb4
  413fc7:	test   BYTE PTR ds:0x4fe1e695,bl
  413fcd:	push   esp
  413fce:	mov    dh,0xed
  413fd0:	imul   edi,esp,0x4a
  413fd3:	push   es
  413fd4:	popf   
  413fd5:	xor    DWORD PTR gs:[ebp+0x11d416e2],ecx
  413fdc:	imul   edx,DWORD PTR [ebp+0x15],0xffffffae
  413fe0:	scas   al,BYTE PTR es:[edi]
  413fe1:	sub    ecx,eax
  413fe3:	xchg   esp,eax
  413fe4:	and    BYTE PTR [ebx+0x40],al
  413fe7:	cmp    ch,cl
  413fe9:	outs   dx,BYTE PTR ds:[esi]
  413fea:	sbb    cl,dl
  413fec:	inc    esi
  413fed:	xor    bh,BYTE PTR [edi+ebp*2-0x13eb1cdb]
  413ff4:	sahf   
  413ff5:	clc    
  413ff6:	dec    esp
  413ff7:	add    DWORD PTR [edx+0x9],esi
  413ffa:	cld    
  413ffb:	add    eax,0xfe04382e
  414000:	es pop ebx
  414002:	rcr    DWORD PTR cs:[edx-0x7e61a423],cl
  414009:	sub    ch,BYTE PTR [eax+0x33]
  41400c:	push   ebp
  41400d:	jno    0x413ffd
  41400f:	aam    0x16
  414011:	cs jmp 0x48e8:0x9720052f
  414019:	shl    DWORD PTR [esp+edi*8-0x252546d0],cl
  414020:	out    0x5e,eax
  414022:	cld    
  414023:	in     eax,dx
  414024:	inc    edi
  414025:	test   BYTE PTR [esi+0x2e],dh
  414028:	lahf   
  414029:	jnp    0x413fc8
  41402b:	adc    eax,0x6f132332
  414030:	xchg   ch,dl
  414032:	sub    BYTE PTR [edx-0x57ca7e3b],dh
  414038:	ror    cl,cl
  41403a:	mov    BYTE PTR [edx+ebx*2],cl
  41403d:	xor    al,0x34
  41403f:	(bad)  
  414040:	fs mov esp,0x1cb35391
  414046:	outs   dx,DWORD PTR ds:[esi]
  414047:	ins    DWORD PTR es:[edi],dx
  414048:	scas   al,BYTE PTR es:[edi]
  414049:	push   ecx
  41404a:	stos   BYTE PTR es:[edi],al
  41404b:	outs   dx,DWORD PTR ds:[esi]
  41404c:	inc    ecx
  41404d:	inc    esi
  41404e:	mov    al,ds:0x12b1b0d4
  414053:	or     ebx,edx
  414055:	mov    dh,0x3b
  414057:	mov    eax,fs
  414059:	or     eax,0xf71ae69d
  41405e:	pusha  
  41405f:	scas   al,BYTE PTR es:[edi]
  414060:	dec    ecx
  414061:	mov    WORD PTR [ecx+eax*4+0x7ec8d22a],es
  414068:	push   0xffffff8f
  41406a:	loope  0x414093
  41406c:	add    al,0xa0
  41406e:	sbb    dl,dl
  414070:	mov    edx,0xe90a7ce7
  414075:	xor    BYTE PTR [edx+ebx*8-0x7a],dh
  414079:	push   edx
  41407a:	sbb    eax,0x346e7fbb
  41407f:	mov    edx,0x7cde42f0
  414084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414085:	lahf   
  414086:	dec    esi
  414087:	xor    al,0x22
  414089:	jbe    0x41406b
  41408b:	dec    esi
  41408c:	(bad)  [ecx-0x65b39f51]
  414092:	dec    ebx
  414093:	and    ah,BYTE PTR [edi+0x1ddc3bbe]
  414099:	fdiv   DWORD PTR [ecx+0x5d]
  41409c:	add    eax,DWORD PTR [ecx-0x23]
  41409f:	mov    bl,0x12
  4140a1:	int3   
  4140a2:	jmp    0x6f722117
  4140a7:	sti    
  4140a8:	xchg   ebp,eax
  4140a9:	xchg   ebp,eax
  4140aa:	test   al,0x90
  4140ac:	adc    DWORD PTR [eax-0x1c9a7e30],0x5cd74bc9
  4140b6:	sub    ah,BYTE PTR [ecx]
  4140b8:	xor    al,dl
  4140ba:	xor    dh,BYTE PTR [edx+0x6c]
  4140bd:	(bad)  
  4140be:	xlat   BYTE PTR ds:[ebx]
  4140bf:	aas    
  4140c0:	icebp  
  4140c1:	xor    eax,0xd2deae49
  4140c6:	ficom  WORD PTR [ecx+0x15102129]
  4140cc:	lods   al,BYTE PTR ds:[esi]
  4140cd:	dec    eax
  4140ce:	sar    DWORD PTR [eax+0x1b0e6f7b],cl
  4140d4:	pop    edx
  4140d5:	xchg   edx,eax
  4140d6:	fidivr WORD PTR [ecx-0x5f323616]
  4140dc:	stc    
  4140dd:	arpl   WORD PTR [edx+0x140eff40],dx
  4140e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140e4:	pop    edi
  4140e5:	push   es
  4140e6:	xor    eax,ebp
  4140e8:	cli    
  4140e9:	out    dx,eax
  4140ea:	jns    0x4140d2
  4140ec:	mov    ch,0xe3
  4140ee:	jno    0x4140ab
  4140f0:	push   0xfffffffd
  4140f2:	xor    dl,ch
  4140f4:	and    DWORD PTR [esi],esi
  4140f6:	mov    ah,0x10
  4140f8:	jb     0x414127
  4140fa:	jo     0x414146
  4140fc:	fsub   st(3),st
  4140fe:	sub    al,0x37
  414100:	cwde   
  414101:	fst    DWORD PTR [esi-0x20]
  414104:	mov    ch,0x52
  414106:	xchg   edx,eax
  414107:	dec    esi
  414108:	xchg   esi,eax
  414109:	xor    dh,BYTE PTR [edx+0x19519112]
  41410f:	aad    0xf1
  414111:	mov    cl,0xab
  414113:	xor    esp,DWORD PTR [ebp+0x12]
  414116:	pushf  
  414117:	loopne 0x4140a5
  414119:	mov    al,0x9d
  41411b:	daa    
  41411c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41411d:	xchg   DWORD PTR [edx],ebx
  41411f:	cmp    edx,DWORD PTR [ecx+edi*2]
  414122:	and    al,0x8f
  414124:	mov    DWORD PTR [ecx-0xf],ebp
  414127:	lods   eax,DWORD PTR ds:[esi]
  414128:	clc    
  414129:	out    dx,eax
  41412a:	(bad)  
  41412b:	cmp    al,0x89
  41412d:	add    al,0x75
  41412f:	aad    0x44
  414131:	adc    BYTE PTR [edi],al
  414133:	add    BYTE PTR [edx+0x4c],ah
  414136:	arpl   dx,di
  414138:	aas    
  414139:	out    0xe9,eax
  41413b:	mov    dh,bh
  41413d:	daa    
  41413e:	out    dx,al
  41413f:	test   BYTE PTR ds:[esi-0x6c405020],0x94
  414147:	push   ds
  414148:	mov    esp,0x71826a25
  41414d:	mov    esi,0x8aba35b1
  414152:	imul   ecx,DWORD PTR [esi],0x11063c43
  414158:	jecxz  0x414174
  41415a:	retf   0xa434
  41415d:	add    esp,DWORD PTR [ebx]
  41415f:	loop   0x414144
  414161:	sub    eax,0x39d983ea
  414166:	in     al,0x7f
  414168:	adc    eax,0xde041cdf
  41416d:	xor    dh,al
  41416f:	inc    ebx
  414170:	sar    BYTE PTR [esi+ebx*2+0x2d],cl
  414174:	jecxz  0x414128
  414176:	push   cs
  414177:	aad    0xea
  414179:	xchg   esp,eax
  41417a:	arpl   WORD PTR [edi-0x73],si
  41417d:	dec    ebx
  41417e:	inc    ebx
  41417f:	xor    al,0x58
  414181:	jmp    0xfc5b35e4
  414186:	xchg   ecx,eax
  414187:	mov    al,0x75
  414189:	jmp    0x1f74:0x77854046
  414190:	and    DWORD PTR [edx],esp
  414192:	push   es
  414193:	inc    esi
  414194:	fisttp QWORD PTR [ecx-0x1e]
  414197:	jp     0x4141e6
  414199:	in     eax,0xee
  41419b:	jl     0x414180
  41419d:	rol    DWORD PTR [ebx],0x3d
  4141a0:	and    DWORD PTR [esi-0x5fa20dd8],edi
  4141a6:	mov    al,ds:0x4b6ea37d
  4141ab:	sar    BYTE PTR fs:[ecx+0x430f3214],1
  4141b2:	dec    edi
  4141b3:	push   ebx
  4141b4:	xor    DWORD PTR [esp+edx*2-0x1d],0x56
  4141b9:	repnz aas 
  4141bb:	into   
  4141bc:	add    BYTE PTR [edi-0x7b7f8c2b],bh
  4141c2:	push   esp
  4141c3:	or     al,0xf2
  4141c5:	test   al,0xa5
  4141c7:	or     eax,0xe29ef49d
  4141cc:	ins    BYTE PTR es:[edi],dx
  4141cd:	sbb    DWORD PTR [esi+eiz*1],0x9d8b5f53
  4141d4:	adc    DWORD PTR [edi+0x6df9e470],0xa
  4141db:	enter  0x318b,0xfb
  4141df:	dec    eax
  4141e0:	into   
  4141e1:	popf   
  4141e2:	and    bl,BYTE PTR [eax]
  4141e4:	jecxz  0x41420d
  4141e6:	pop    esi
  4141e7:	(bad)  [ecx]
  4141e9:	(bad)  
  4141ea:	pop    ds
  4141eb:	leave  
  4141ec:	ucomiss xmm7,DWORD PTR [eax-0x75]
  4141f0:	sar    BYTE PTR [esi+0x6e],0x38
  4141f4:	fcom   DWORD PTR [esi]
  4141f6:	mov    edx,0xad0de9bf
  4141fb:	ins    DWORD PTR es:[edi],dx
  4141fc:	dec    edx
  4141fd:	mov    edi,0x4b51a6af
  414202:	push   ss
  414203:	sbb    BYTE PTR [esp+ebp*4-0x62],bl
  414207:	push   cs
  414208:	retf   
  414209:	clc    
  41420a:	add    al,0xbe
  41420c:	sysenter 
  41420e:	lock mov ds:0x5daef36a,al
  414214:	out    dx,eax
  414215:	jno    0x4141bb
  414217:	mov    cl,0x1b
  414219:	or     bh,BYTE PTR [ecx+0x5f]
  41421c:	aad    0xcc
  41421e:	add    edx,edi
  414220:	ret    
  414221:	sbb    DWORD PTR [edi+ebx*4],edx
  414224:	xchg   ebx,eax
  414225:	aas    
  414226:	scas   al,BYTE PTR es:[edi]
  414227:	pusha  
  414228:	dec    ebp
  414229:	xchg   ecx,eax
  41422a:	mov    esp,0x8f574f0e
  41422f:	(bad)  
  414230:	adc    eax,0xd022af50
  414235:	sahf   
  414236:	and    ch,BYTE PTR [ecx+0x4c]
  414239:	test   esi,ebp
  41423b:	(bad)  
  41423c:	in     al,dx
  41423d:	iret   
  41423e:	pop    edi
  41423f:	pop    esi
  414240:	add    BYTE PTR [edx],0x19
  414243:	cmp    BYTE PTR [ebp-0x7c948b6b],0xe3
  41424a:	es xchg esp,eax
  41424c:	fistp  DWORD PTR [edi+0x25]
  41424f:	xchg   DWORD PTR [eax],esi
  414251:	cli    
  414252:	stc    
  414253:	imul   ecx,DWORD PTR [esi],0x2d
  414256:	mov    WORD PTR [edx+0x1cff8629],?
  41425c:	mov    esp,DWORD PTR [ebx]
  41425e:	jno    0x4141ec
  414260:	(bad)  [ebp+0x53330717]
  414266:	mov    BYTE PTR [edi],0x81
  414269:	sahf   
  41426a:	inc    eax
  41426b:	or     eax,0x737b09a7
  414270:	gs (bad) 
  414272:	iret   
  414273:	add    dl,BYTE PTR [ebp+0x7f]
  414276:	mov    ds:0x65dda9e5,al
  41427b:	mov    bl,0x56
  41427d:	fwait
  41427e:	cmp    eax,0x272f8f80
  414283:	jno    0x4142af
  414285:	add    ecx,ebx
  414287:	push   es
  414288:	dec    esi
  414289:	push   esi
  41428a:	scas   al,BYTE PTR es:[edi]
  41428b:	jg     0x414251
  41428d:	xchg   edx,eax
  41428e:	and    eax,0x3c9e2098
  414293:	js     0x414266
  414295:	sub    al,BYTE PTR ds:0xb03ee29c
  41429b:	ror    eax,1
  41429d:	pop    ebx
  41429e:	cld    
  41429f:	lahf   
  4142a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a1:	xor    eax,0x454056b9
  4142a6:	pop    esp
  4142a7:	sub    DWORD PTR [esi-0x323c6279],eax
  4142ad:	push   edi
  4142ae:	and    ebx,DWORD PTR [ecx]
  4142b0:	sub    al,0x6
  4142b2:	test   DWORD PTR [ebp-0x768d4b7],eax
  4142b8:	inc    ebp
  4142b9:	xchg   edx,eax
  4142ba:	pop    esp
  4142bb:	add    al,0xc6
  4142bd:	fs sub eax,0x646d501
  4142c3:	cs jbe 0x4142ea
  4142c6:	dec    eax
  4142c7:	and    BYTE PTR gs:[edi-0x53935b25],ah
  4142ce:	imul   ebp,DWORD PTR [ecx+0x69c101b0],0xffffffaa
  4142d5:	(bad)  
  4142d6:	jo     0x414355
  4142d8:	push   esi
  4142d9:	sub    dh,BYTE PTR [ebx+0x4d]
  4142dc:	js     0x414291
  4142de:	and    BYTE PTR [ebx],dl
  4142e0:	xor    al,BYTE PTR [ebp+0x59854549]
  4142e6:	dec    esp
  4142e7:	push   esi
  4142e8:	jbe    0x4142f6
  4142ea:	lock outs dx,DWORD PTR ds:[esi]
  4142ec:	daa    
  4142ed:	aam    0xb0
  4142ef:	xor    edi,eax
  4142f1:	imul   ecx,DWORD PTR [edi-0x80],0x23
  4142f5:	mov    ds:0x42489ed6,eax
  4142fa:	mov    edi,0x2c6ac050
  4142ff:	adc    al,0x7d
  414301:	repz test al,0x42
  414304:	sub    eax,0xdd0d24f2
  414309:	pop    es
  41430a:	sbb    BYTE PTR [edx-0x4ea8f028],dh
  414310:	inc    esi
  414311:	pop    edx
  414312:	(bad)
  414317:	xchg   edx,eax
  414318:	(bad)  
  414319:	ds mov dh,0x22
  41431c:	inc    edi
  41431d:	jge    0x4142c7
  41431f:	std    
  414320:	aaa    
  414321:	dec    ebp
  414322:	outs   dx,BYTE PTR ds:[esi]
  414323:	ja     0x41432d
  414325:	in     al,0x73
  414327:	sbb    DWORD PTR [edi],edx
  414329:	pop    edi
  41432a:	ins    BYTE PTR es:[edi],dx
  41432b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432c:	popf   
  41432d:	dec    edi
  41432e:	xchg   DWORD PTR gs:[ebp-0x44],esi
  414332:	outs   dx,BYTE PTR ds:[esi]
  414333:	sbb    BYTE PTR [eax+0x43456015],0xd0
  41433a:	fdiv   QWORD PTR [ebx-0x131796b2]
  414340:	into   
  414341:	sub    bh,BYTE PTR [edi-0x5b]
  414344:	arpl   WORD PTR [eax-0x716b3360],si
  41434a:	sbb    DWORD PTR [edi],edi
  41434c:	push   ebp
  41434d:	leave  
  41434e:	sahf   
  41434f:	cwde   
  414350:	mov    cl,0x20
  414352:	aas    
  414353:	mov    dl,0xda
  414355:	jmp    0xe0680af6
  41435a:	(bad)
  41435f:	adc    bl,BYTE PTR [edi+ecx*4]
  414362:	jne    0x4143a2
  414364:	arpl   WORD PTR [esi+0x3b],dx
  414367:	sbb    dh,BYTE PTR [edx]
  414369:	stos   BYTE PTR es:[edi],al
  41436a:	iret   
  41436b:	in     eax,dx
  41436c:	ficom  WORD PTR gs:[ecx-0x6b]
  414370:	mov    dl,0x4a
  414372:	push   0xffffffaa
  414374:	and    bl,cl
  414376:	adc    bx,sp
  414379:	inc    ebx
  41437a:	test   DWORD PTR [eax*8-0x694a52aa],esi
  414381:	xchg   edi,eax
  414382:	xchg   DWORD PTR [eax+edi*8+0x64],ebp
  414386:	fcmovb st,st(0)
  414388:	xchg   bh,ch
  41438a:	mov    dh,0xa8
  41438c:	xchg   esi,eax
  41438d:	or     al,0x1d
  41438f:	outs   dx,DWORD PTR ds:[esi]
  414390:	test   eax,0xd265c15b
  414395:	out    0xfd,al
  414397:	shr    edx,1
  414399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439a:	mov    esp,DWORD PTR [edi+0x37]
  41439d:	jmp    FWORD PTR [ecx-0x1af5452b]
  4143a3:	xor    bh,BYTE PTR [esi+0x5f]
  4143a6:	clc    
  4143a7:	xchg   ebp,eax
  4143a8:	(bad)  
  4143a9:	and    al,0x3f
  4143ab:	push   edi
  4143ac:	or     ebx,0x222ff890
  4143b2:	dec    al
  4143b4:	ficom  WORD PTR [eax-0x315adadb]
  4143ba:	or     ch,BYTE PTR [ebx]
  4143bc:	push   edx
  4143bd:	push   edi
  4143be:	cmp    BYTE PTR [eax],cl
  4143c0:	out    0x3f,eax
  4143c2:	or     esi,DWORD PTR [eax+0x27c566ff]
  4143c8:	cmp    eax,DWORD PTR [ebp-0x4f]
  4143cb:	sub    dh,al
  4143cd:	mov    esp,0xadfb4598
  4143d2:	and    bl,0x17
  4143d5:	repz push ds
  4143d7:	clc    
  4143d8:	inc    edi
  4143d9:	sbb    dh,dl
  4143db:	mov    bl,0xc2
  4143dd:	xor    ecx,DWORD PTR [ebx-0x3f04ef93]
  4143e3:	call   0x8d08ad55
  4143e8:	push   cs
  4143e9:	dec    edx
  4143ea:	hlt    
  4143eb:	js     0x414433
  4143ed:	mov    ecx,0x2674c8ab
  4143f2:	sbb    eax,0x190775f0
  4143f7:	(bad)  
  4143f8:	ds nop
  4143fa:	sub    ebx,DWORD PTR [edi-0x29]
  4143fd:	cmp    al,BYTE PTR ds:0x4edbc33e
  414403:	xchg   DWORD PTR [esi-0x3cdfcfc9],esp
  414409:	mov    al,ds:0x9103536f
  41440e:	dec    ebp
  41440f:	lock push 0x9f13e19d
  414415:	cmp    eax,0x813db9cb
  41441a:	shl    ebx,0x58
  41441d:	jp     0x414430
  41441f:	pop    edi
  414420:	cdq    
  414421:	sahf   
  414422:	fsub   DWORD PTR fs:[ebx+0x22d4d3fc]
  414429:	test   ebx,esp
  41442b:	or     BYTE PTR gs:[ecx-0x3e747396],ch
  414432:	push   ecx
  414433:	fisubr DWORD PTR [eax+0x5076767]
  414439:	stos   BYTE PTR es:[edi],al
  41443a:	and    ecx,ecx
  41443c:	push   esp
  41443d:	dec    edi
  41443e:	mul    DWORD PTR gs:[edi]
  414441:	popf   
  414442:	jmp    0x414410
  414444:	xchg   ebx,eax
  414445:	push   esp
  414446:	arpl   WORD PTR [edi+0x562b1560],bp
  41444c:	dec    esp
  41444d:	push   0xfd67d437
  414452:	cmp    al,0xbb
  414454:	jb     0x41448a
  414456:	clc    
  414457:	xor    DWORD PTR [ebx-0x7bdc810d],edx
  41445d:	sub    DWORD PTR [ecx+0x5a3ca0df],esi
  414463:	lea    ecx,[ebp+0x6f]
  414466:	mov    ah,0xd4
  414468:	stos   BYTE PTR es:[edi],al
  414469:	sub    BYTE PTR [esi-0x49],ah
  41446c:	icebp  
  41446d:	mov    ecx,0xca95c778
  414472:	jg     0x414462
  414474:	inc    eax
  414475:	fucom  st(6)
  414477:	out    0x2b,eax
  414479:	lds    esi,FWORD PTR es:[ecx-0x3d]
  41447d:	cld    
  41447e:	adc    al,0xae
  414480:	mov    ?,WORD PTR [ecx-0x22efdeca]
  414486:	mov    ebx,0x17d5ec79
  41448b:	outs   dx,DWORD PTR ds:[esi]
  41448c:	fdivrp st(3),st
  41448e:	inc    ebx
  41448f:	jmp    0x41443d
  414491:	adc    eax,ebx
  414493:	into   
  414494:	mov    dl,BYTE PTR [ebp-0x3c]
  414497:	adc    eax,0xbb182640
  41449c:	rcr    BYTE PTR [ebp+0x1f],cl
  41449f:	ror    dl,0x1f
  4144a2:	xchg   esp,eax
  4144a3:	retf   0xd2b9
  4144a6:	(bad)  
  4144a8:	arpl   WORD PTR [esi+edx*4+0xc4560b3],cx
  4144af:	mov    ah,0xbd
  4144b1:	mov    edi,0x97656c3f
  4144b6:	popa   
  4144b7:	sub    ch,BYTE PTR ds:0xb9faab
  4144bd:	aas    
  4144be:	sbb    DWORD PTR ds:[eax-0x31],edx
  4144c2:	mov    al,BYTE PTR [ebp+0x71335b1a]
  4144c8:	std    
  4144c9:	lahf   
  4144ca:	or     BYTE PTR [esi-0x1],dh
  4144cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144ce:	scas   al,BYTE PTR es:[edi]
  4144cf:	imul   bl
  4144d1:	je     0x414515
  4144d3:	out    dx,al
  4144d4:	iret   
  4144d5:	(bad)  
  4144d6:	je     0x41450e
  4144d8:	xchg   esi,eax
  4144d9:	repz mov dl,BYTE PTR [edi]
  4144dc:	adc    bh,BYTE PTR [ecx-0x55a9d2af]
  4144e2:	(bad)  
  4144e3:	out    dx,al
  4144e4:	add    eax,0x11c2862
  4144e9:	jp     0x41451c
  4144eb:	xchg   edi,eax
  4144ec:	hlt    
  4144ed:	aad    0xb7
  4144ef:	or     BYTE PTR [esi-0x3673e1d8],cl
  4144f5:	aam    0x96
  4144f7:	pop    ebx
  4144f8:	sub    DWORD PTR [ecx],0x6cef2dae
  4144fe:	pop    ebp
  4144ff:	dec    ebx
  414500:	xlat   BYTE PTR ds:[ebx]
  414501:	xchg   edi,eax
  414502:	imul   ebx,esp,0xb8698813
  414508:	lods   eax,DWORD PTR ds:[esi]
  414509:	xchg   ebx,eax
  41450a:	xlat   BYTE PTR ds:[ebx]
  41450b:	mov    cl,0x0
  41450d:	inc    esp
  41450e:	rol    BYTE PTR [edx-0x10],cl
  414511:	lock adc al,0x24
  414514:	sbb    BYTE PTR [ebp-0x275cd392],cl
  41451a:	pop    esi
  41451b:	imul   eax,esi,0xf86ca47e
  414521:	add    BYTE PTR [edi],0x93
  414524:	call   0xffb3:0x8992838f
  41452b:	adc    BYTE PTR [edi+ebp*2-0x4ab7bd71],0x9
  414533:	and    DWORD PTR [edi-0x752a53b0],eax
  414539:	add    al,0xd2
  41453b:	std    
  41453c:	sub    eax,0x96a85092
  414541:	push   edi
  414542:	jo     0x414550
  414544:	push   edi
  414545:	shl    BYTE PTR [edx-0x67],0x2a
  414549:	aaa    
  41454a:	cmp    ah,ch
  41454c:	jmp    0x4145c8
  41454e:	jns    0x414577
  414550:	xchg   ebx,ebp
  414552:	mov    ds:0xac31f0df,eax
  414557:	and    ah,al
  414559:	aaa    
  41455a:	push   edx
  41455b:	and    ebx,DWORD PTR [esi]
  41455d:	push   esp
  41455e:	fadd   st,st(7)
  414560:	repnz cmp BYTE PTR [ebp+ebp*4+0x3433bdec],ch
  414568:	sub    al,0xf1
  41456a:	clc    
  41456b:	jl     0x41455e
  41456d:	imul   eax,DWORD PTR [edx+0x7a9cf09f],0x17
  414574:	jne    0x41453e
  414576:	stos   DWORD PTR es:[edi],eax
  414577:	mov    edi,0xf7192ccb
  41457c:	sti    
  41457d:	xchg   edi,eax
  41457e:	(bad)  
  41457f:	into   
  414580:	jno    0x4145a7
  414582:	mov    ?,WORD PTR [ecx+0x24b5a699]
  414588:	pop    es
  414589:	stos   DWORD PTR es:[edi],eax
  41458a:	cmp    esp,DWORD PTR [eax+0x20c3fba6]
  414590:	and    eax,0x3c602dcc
  414595:	gs dec edx
  414597:	outs   dx,DWORD PTR ds:[esi]
  414598:	ficomp WORD PTR [eax-0x6cb93c0f]
  41459e:	fsub   st,st(5)
  4145a0:	cmp    DWORD PTR [ebp-0x18],0x183481c0
  4145a7:	mov    esp,0xda51d11b
  4145ac:	xchg   ebp,eax
  4145ad:	inc    edx
  4145ae:	xchg   edi,eax
  4145af:	dec    edi
  4145b0:	nop
  4145b1:	in     al,dx
  4145b2:	add    al,0x32
  4145b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b5:	dec    ebx
  4145b6:	pop    es
  4145b7:	mov    edi,0x84977fe8
  4145bc:	xchg   esp,eax
  4145bd:	pushf  
  4145be:	mov    dl,0xaa
  4145c0:	mov    ch,0xe1
  4145c2:	mov    ?,WORD PTR [eax]
  4145c4:	pop    edi
  4145c5:	stos   DWORD PTR es:[edi],eax
  4145c6:	mov    ebx,0x436aab6b
  4145cb:	adc    eax,DWORD PTR ds:0x69a9d1d4
  4145d1:	or     al,0x4c
  4145d3:	dec    ecx
  4145d4:	div    ecx
  4145d6:	and    eax,0x44911cbd
  4145db:	jl     0x414625
  4145dd:	aaa    
  4145de:	fcmovnu st,st(3)
  4145e0:	retf   0xe0af
  4145e3:	stos   BYTE PTR es:[edi],al
  4145e4:	aaa    
  4145e5:	xor    BYTE PTR [eax],cl
  4145e7:	cld    
  4145e8:	mov    al,BYTE PTR [ebx+0x21152f1c]
  4145ee:	dec    ebx
  4145ef:	scas   eax,DWORD PTR es:[edi]
  4145f0:	cld    
  4145f1:	aad    0x2a
  4145f3:	lods   eax,DWORD PTR ds:[esi]
  4145f4:	inc    ebp
  4145f5:	push   ds
  4145f6:	ja     0x41464f
  4145f8:	add    DWORD PTR [ebp-0x2ea7b366],edi
  4145fe:	sar    BYTE PTR [ebx],0x94
  414601:	jecxz  0x4145e7
  414603:	fisttp QWORD PTR [edi+0x67]
  414606:	jno    0x41465f
  414608:	sbb    BYTE PTR ds:0xb76f4fe2,bl
  41460e:	and    edi,DWORD PTR [ebp-0x75]
  414611:	or     al,0xcc
  414613:	cli    
  414614:	cmp    al,0xe9
  414616:	jno    0x414598
  414618:	push   edi
  414619:	fadd   QWORD PTR [ecx-0x21]
  41461c:	bnd jns 0x414620
  41461f:	(bad)  
  414620:	daa    
  414621:	sbb    esp,edi
  414623:	jno    0x41467c
  414625:	mov    bl,0xd1
  414627:	test   BYTE PTR [ebp-0x35],ch
  41462a:	cli    
  41462b:	lds    ebp,FWORD PTR [esi-0x1fa7ad2b]
  414631:	das    
  414632:	sbb    BYTE PTR es:[eax-0x4fca61da],ch
  414639:	or     eax,0xc3844e20
  41463e:	cwde   
  41463f:	mov    ebp,0xae22a664
  414644:	xor    eax,0xd2a0a17e
  414649:	and    dl,cl
  41464b:	xchg   ecx,eax
  41464c:	or     al,0x5a
  41464e:	mov    al,0xd1
  414650:	ins    DWORD PTR es:[edi],dx
  414651:	dec    ebp
  414652:	je     0x41460e
  414654:	mov    ecx,0x34bc128d
  414659:	lea    ecx,[eax+0x1fc5fa74]
  41465f:	into   
  414660:	mov    WORD PTR [esi],ds
  414662:	mov    cl,0x77
  414664:	or     ebp,DWORD PTR [esp+edx*1]
  414667:	push   edx
  414668:	popa   
  414669:	xchg   DWORD PTR [eax+0x7b2102f4],edx
  41466f:	(bad)  
  414670:	daa    
  414671:	mov    bl,0x45
  414673:	xor    BYTE PTR [esi],ah
  414675:	fucomi st,st(1)
  414677:	bound  edx,QWORD PTR [edi+ebx*2]
  41467a:	pushf  
  41467b:	cdq    
  41467c:	mov    bh,0x34
  41467e:	std    
  41467f:	mov    WORD PTR [edi+eiz*2],cs
  414682:	icebp  
  414683:	mov    ebp,0xa6e2ee8
  414688:	xor    edx,edx
  41468a:	jo     0x414631
  41468c:	pop    ecx
  41468d:	ret    
  41468e:	ss jno 0x41462a
  414691:	jg     0x41467b
  414693:	mov    ds:0x77bfca97,eax
  414698:	xchg   ebx,eax
  414699:	xchg   esi,eax
  41469a:	stos   DWORD PTR es:[edi],eax
  41469b:	mov    BYTE PTR [eax+eax*2-0x1e],ah
  41469f:	daa    
  4146a0:	cmp    BYTE PTR [esi+0x27dfa279],al
  4146a6:	ret    0xa360
  4146a9:	out    dx,al
  4146aa:	sub    eax,DWORD PTR [edx+ebp*4]
  4146ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ae:	(bad)  
  4146b0:	or     eax,0xc8f746de
  4146b5:	adc    al,al
  4146b7:	sbb    eax,0xed62b01c
  4146bc:	fwait
  4146bd:	push   es
  4146be:	(bad)  
  4146bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c0:	mov    edx,0xfcecb53
  4146c5:	mov    al,0x25
  4146c7:	scas   eax,DWORD PTR es:[edi]
  4146c8:	jg     0x4146a7
  4146ca:	sub    al,0xa3
  4146cc:	out    dx,al
  4146cd:	out    dx,al
  4146ce:	sbb    cl,BYTE PTR [esi]
  4146d0:	inc    esp
  4146d1:	imul   esi,DWORD PTR [edi+0x78],0x33
  4146d5:	fidivr WORD PTR [ebp+0x13034d6d]
  4146db:	mov    BYTE PTR [ecx],0x4d
  4146de:	or     ebp,ecx
  4146e0:	out    dx,eax
  4146e1:	gs pop edx
  4146e3:	imul   sp,WORD PTR [eax],0xffed
  4146e7:	repnz cmp BYTE PTR [ebx+0x65],bh
  4146eb:	lods   al,BYTE PTR ds:[esi]
  4146ec:	push   ds
  4146ed:	push   es
  4146ee:	jge    0x41470f
  4146f0:	inc    edi
  4146f1:	mov    ds:0x64552b7b,eax
  4146f6:	call   0x836439b5
  4146fb:	retf   
  4146fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fd:	dec    edi
  4146fe:	rol    DWORD PTR [ebx],cl
  414700:	out    0xb7,al
  414702:	or     bl,BYTE PTR [edx]
  414704:	ret    
  414705:	das    
  414706:	jle    0x4146ea
  414708:	das    
  414709:	mov    eax,0x946a0b66
  41470e:	fmul   DWORD PTR [esi+0x4c]
  414711:	inc    esi
  414712:	xchg   esp,eax
  414713:	inc    edx
  414714:	pop    ebx
  414715:	and    ebp,DWORD PTR [edi+0x6d]
  414718:	adc    eax,0xe68e58e
  41471d:	fistp  QWORD PTR [edi-0x48]
  414720:	fstp   QWORD PTR [esi-0x19feda12]
  414726:	frndint 
  414728:	mov    eax,0xefad9567
  41472d:	or     eax,0x5fc35c3f
  414732:	ds (bad) 
  414734:	adc    al,0x66
  414736:	idiv   BYTE PTR [eax-0x7f]
  414739:	push   ss
  41473a:	mov    ebx,0x7cb82ad2
  41473f:	call   0xbfe9f315
  414744:	test   DWORD PTR [esi],edi
  414746:	cmc    
  414747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414748:	sti    
  414749:	and    esi,DWORD PTR [edi+ebx*1-0xc7ac6d7]
  414750:	inc    esi
  414751:	test   al,0xa8
  414753:	call   0x3de3:0xdc16dde
  41475a:	xor    BYTE PTR [ebx-0x5b0a50e0],ch
  414760:	mov    ecx,0x64e5fe40
  414765:	ret    
  414766:	mov    edx,0x306b043a
  41476b:	push   cs
  41476c:	sahf   
  41476d:	sbb    eax,0x63731126
  414772:	push   eax
  414773:	jp     0x414762
  414775:	and    ebp,ebp
  414777:	in     al,dx
  414778:	icebp  
  414779:	cs sub bh,BYTE PTR es:[eax]
  41477d:	mov    bh,0x7e
  41477f:	sti    
  414780:	xor    ebp,DWORD PTR [edx+0x29]
  414783:	repnz popa 
  414785:	fld    TBYTE PTR [esi+0x13ff104d]
  41478b:	ret    
  41478c:	mov    eax,ds:0x2afefef
  414791:	add    al,0xc4
  414793:	push   ebp
  414794:	cmp    DWORD PTR [eax+0x4529f3df],0x26471c1f
  41479e:	sub    eax,0x30e59d85
  4147a3:	sub    eax,0xe1e916f6
  4147a8:	stos   BYTE PTR es:[edi],al
  4147a9:	fwait
  4147aa:	jle    0x4147e0
  4147ac:	mov    BYTE PTR [edx],dh
  4147ae:	stos   BYTE PTR es:[edi],al
  4147af:	mov    esi,0x65b349b8
  4147b4:	xchg   esp,eax
  4147b5:	cmp    dl,al
  4147b7:	adc    dh,ch
  4147b9:	stc    
  4147ba:	mov    al,0x45
  4147bc:	mov    BYTE PTR [ebx-0x1466295a],bl
  4147c2:	cmp    eax,0xaa153445
  4147c7:	fsub   DWORD PTR [ecx]
  4147c9:	xor    eax,0x325ee58a
  4147ce:	ret    
  4147cf:	fist   WORD PTR [edx+0x698f5e47]
  4147d5:	inc    ebp
  4147d6:	jg     0x414793
  4147d8:	scas   al,BYTE PTR es:[edi]
  4147d9:	(bad)  
  4147da:	pushf  
  4147db:	hlt    
  4147dc:	and    al,0xc7
  4147de:	xchg   ecx,eax
  4147df:	xchg   ecx,eax
  4147e0:	pop    ebp
  4147e1:	cmp    ebx,DWORD PTR [ebp-0x67]
  4147e4:	cmp    DWORD PTR [ebx],esp
  4147e6:	stc    
  4147e7:	imul   esi,edi,0xc92143e7
  4147ed:	stos   DWORD PTR es:[edi],eax
  4147ee:	mov    edx,edi
  4147f0:	pop    es
  4147f1:	imul   ebx,DWORD PTR [ecx],0x4c
  4147f4:	out    0xb9,al
  4147f6:	or     bl,BYTE PTR [ebp+0x14]
  4147f9:	mov    ebp,0x10267732
  4147fe:	push   ebx
  4147ff:	cmp    eax,0x769070dc
  414804:	sub    DWORD PTR [edi+0x6aa70ad6],ebx
  41480a:	inc    ebp
  41480b:	adc    DWORD PTR ds:0x4f621f5e,edx
  414811:	(bad)  
  414812:	(bad)  
  414813:	xchg   ecx,eax
  414814:	xchg   ecx,eax
  414815:	mov    dl,0x88
  414817:	jmp    0xe6c7:0xa79cca5a
  41481e:	mov    eax,0x72206308
  414823:	scas   eax,DWORD PTR es:[edi]
  414824:	(bad)  
  414825:	stos   BYTE PTR es:[edi],al
  414826:	sbb    eax,DWORD PTR [ebx+0x13]
  414829:	and    BYTE PTR [ebp+0x3ae882b5],0xbd
  414830:	and    eax,0x63cb9ae9
  414835:	jge    0x414859
  414837:	lods   al,BYTE PTR ds:[esi]
  414838:	js     0x414845
  41483a:	mov    esi,0x53dada
  41483f:	sar    DWORD PTR [edx+0x473d6f2],1
  414845:	and    ah,BYTE PTR [edx-0x18]
  414848:	loope  0x4147ff
  41484a:	dec    esi
  41484b:	push   esi
  41484c:	mov    edi,0xca95e8d1
  414851:	sub    al,0x45
  414853:	or     al,0x86
  414855:	sbb    eax,0xa766670
  41485a:	nop
  41485b:	mov    ebx,DWORD PTR [edx]
  41485d:	sub    ebx,esi
  41485f:	mov    edx,0x89a8d97a
  414864:	sub    esp,esi
  414866:	ror    BYTE PTR [ebx+0x56308c41],0x44
  41486d:	outs   dx,BYTE PTR ds:[esi]
  41486e:	mov    esp,0xab05de3b
  414873:	add    edi,DWORD PTR [eax+ebp*1-0x44db0c32]
  41487a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487b:	sbb    DWORD PTR ds:0x18257074,ebp
  414881:	xchg   esi,eax
  414882:	je     0x414894
  414884:	adc    edx,ebp
  414886:	(bad)
  414889:	imul   edx,DWORD PTR [edi-0x6aaa7812],0x45
  414890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414891:	mov    DWORD PTR [eax+0x7f],ecx
  414894:	push   eax
  414895:	pop    DWORD PTR [ebx+0x4e]
  414898:	repnz fnstcw WORD PTR [ecx]
  41489b:	icebp  
  41489c:	call   0x3d1603b1
  4148a1:	xor    al,0xcb
  4148a3:	mov    eax,0x63dc73a
  4148a8:	fadd   st(7),st
  4148aa:	adc    DWORD PTR [edi+0x3a],esi
  4148ad:	lods   eax,DWORD PTR fs:[esi]
  4148af:	xchg   cl,bl
  4148b1:	outs   dx,BYTE PTR ds:[esi]
  4148b2:	mov    eax,ds:0x66693975
  4148b7:	jmp    0x727e:0x1e0c808f
  4148be:	mov    cl,0xdf
  4148c0:	push   eax
  4148c1:	hlt    
  4148c2:	mov    bh,0x2b
  4148c4:	sahf   
  4148c5:	push   ebp
  4148c6:	mov    edi,0x44f86ea6
  4148cb:	inc    ecx
  4148cc:	js     0x4148c3
  4148ce:	sbb    eax,0xa48e096
  4148d3:	jne    0x41490e
  4148d5:	pusha  
  4148d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d7:	(bad)  
  4148d8:	std    
  4148d9:	mov    ecx,0xb81b0b5b
  4148de:	lea    ecx,[edx+0x5f]
  4148e1:	jbe    0x4148cd
  4148e3:	sti    
  4148e4:	and    dh,BYTE PTR [ebp+0x5e]
  4148e7:	loopne 0x4148ad
  4148e9:	cdq    
  4148ea:	push   edx
  4148eb:	shr    BYTE PTR ds:0x28780b6f,cl
  4148f1:	mov    ebx,0x3f52e263
  4148f6:	lods   al,BYTE PTR ds:[esi]
  4148f7:	test   eax,0x4fe39768
  4148fc:	inc    esi
  4148fd:	je     0x4148e9
  4148ff:	clc    
  414900:	inc    eax
  414901:	imul   esp,DWORD PTR [ebx-0x1975af91],0x2d49d816
  41490b:	jbe    0x4148be
  41490d:	push   ecx
  41490e:	jb     0x414913
  414910:	push   cs
  414911:	lahf   
  414912:	push   edi
  414913:	sub    al,0x77
  414915:	push   0x872ec1a2
  41491a:	xchg   ebx,eax
  41491b:	adc    bh,BYTE PTR [eax]
  41491d:	dec    ebx
  41491e:	fild   DWORD PTR [eax+0x75]
  414921:	sub    edx,0xad6c3722
  414927:	cdq    
  414928:	pop    esp
  414929:	dec    esp
  41492a:	shr    DWORD PTR [edi-0xa],cl
  41492d:	xchg   BYTE PTR [ecx-0x2d367776],bl
  414933:	adc    al,BYTE PTR [ebx-0x20]
  414936:	sub    bh,BYTE PTR [eax]
  414938:	mov    edx,0xf1db2305
  41493d:	mov    DWORD PTR [ecx],eax
  41493f:	and    eax,0x3dd7c465
  414944:	into   
  414945:	cmp    al,0x5
  414947:	aam    0x7a
  414949:	out    0x4d,eax
  41494b:	fwait
  41494c:	cmp    DWORD PTR [ecx+0x52],ebp
  41494f:	pop    edi
  414950:	ret    
  414951:	pop    ecx
  414952:	xchg   edx,eax
  414953:	adc    BYTE PTR [edx*8+0x8235ad9],cl
  41495a:	jle    0x4149bd
  41495c:	leave  
  41495d:	loope  0x4148e7
  41495f:	sbb    dl,BYTE PTR [eax-0x57]
  414962:	adc    BYTE PTR [ebp-0x2b],bh
  414965:	mov    edi,0x97a37b78
  41496a:	push   esp
  41496b:	sbb    edi,ecx
  41496d:	arpl   WORD PTR ds:0x4ff8d263,ax
  414973:	pop    eax
  414974:	mov    esp,0x26ab5826
  414979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497b:	mov    dl,0xc7
  41497d:	adc    edx,DWORD PTR [edi+0x2b9a58a0]
  414983:	xchg   ebp,eax
  414984:	sub    cl,0x44
  414987:	in     eax,0x3b
  414989:	push   ecx
  41498a:	xlat   BYTE PTR ss:[ebx]
  41498c:	cdq    
  41498d:	hlt    
  41498e:	sub    esp,DWORD PTR [eax-0x7d1e62c4]
  414994:	stos   DWORD PTR es:[edi],eax
  414995:	sbb    DWORD PTR [ecx],esi
  414997:	rcr    DWORD PTR [ecx-0x20],0x9e
  41499b:	dec    eax
  41499c:	pop    eax
  41499d:	enter  0x125f,0x9f
  4149a1:	inc    ebx
  4149a2:	call   0xa9840f
  4149a7:	scas   eax,DWORD PTR es:[edi]
  4149a8:	(bad)  
  4149a9:	mov    dl,0x6f
  4149ab:	je     0x4149c1
  4149ad:	mov    DWORD PTR [ebp+0x8],edx
  4149b0:	jmp    0x414a25
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	add    eax,0xff2dfc05
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	add    DWORD PTR [edx+esi*1],0xe
  414b97:	cs loop 0x414bf0
  414b9a:	clc    
  414b9b:	nop
  414b9c:	pop    edx
  414b9d:	or     ecx,edi
  414b9f:	mov    BYTE PTR ds:0x6206dce6,dh
  414ba5:	push   0xd3f12d6c
  414baa:	aam    0x89
  414bac:	adc    bh,BYTE PTR [esi+0x5b3e717f]
  414bb2:	sbb    DWORD PTR [edi+0x43566b59],esp
  414bb8:	cs in  eax,0xe2
  414bbb:	or     ecx,esp
  414bbd:	jmp    0x999c:0xf4079029
  414bc4:	fcomi  st,st(3)
  414bc6:	out    0x15,al
  414bc8:	push   ecx
  414bc9:	jo     0x414bc3
  414bcb:	sub    dh,dl
  414bcd:	jle    0x414c12
  414bcf:	cli    
  414bd0:	push   ecx
  414bd1:	sbb    BYTE PTR [ecx+0x6],0xb1
  414bd5:	loopne 0x414bd1
  414bd7:	mov    ecx,0x3bd23937
  414bdc:	xlat   BYTE PTR ds:[ebx]
  414bdd:	stc    
  414bde:	pop    ebx
  414bdf:	inc    edi
  414be0:	dec    ecx
  414be1:	xor    eax,0x9b0609a0
  414be6:	jle    0x414be7
  414be8:	nop
  414be9:	push   0x8fb3f8ef
  414bee:	adc    edx,DWORD PTR [ebp-0x15]
  414bf1:	test   BYTE PTR [edi-0x53],bh
  414bf4:	and    BYTE PTR [eax],cl
  414bf6:	cmc    
  414bf7:	mov    eax,0xf3ac13fd
  414bfc:	ins    BYTE PTR es:[edi],dx
  414bfd:	mov    edi,0x4c7ecd1d
  414c02:	inc    esi
  414c03:	mov    ds:0x754252db,al
  414c08:	loopne 0x414c5d
  414c0a:	leave  
  414c0b:	dec    BYTE PTR [ebx-0x2]
  414c0e:	call   0xfae3:0xadc5cd8f
  414c15:	in     eax,dx
  414c16:	xchg   BYTE PTR [edx+0x22c29eb],cl
  414c1c:	loop   0x414c51
  414c1e:	in     al,0xc2
  414c20:	loope  0x414c45
  414c22:	(bad)  
  414c23:	(bad)  ds:0xd1892ffb
  414c29:	jle    0x414c5b
  414c2b:	mov    esp,0x1bf64840
  414c30:	shl    DWORD PTR [edi+esi*8],1
  414c33:	dec    edx
  414c34:	add    ebp,esp
  414c36:	sar    BYTE PTR [ebp+ecx*4-0x58408f62],0x3c
  414c3e:	inc    ecx
  414c3f:	retf   
  414c40:	xlat   BYTE PTR ds:[ebx]
  414c41:	mov    ah,0xdf
  414c43:	(bad)  
  414c45:	jnp    0x414c9e
  414c47:	in     al,dx
  414c48:	out    dx,al
  414c49:	lock jbe 0x414c9b
  414c4c:	jns    0x414ccb
  414c4e:	ficomp DWORD PTR [eax-0x65]
  414c51:	sahf   
  414c52:	jbe    0x414c60
  414c54:	test   DWORD PTR [ebp+ebx*8-0x3bff6f72],ebp
  414c5b:	jae    0x414c7e
  414c5d:	mov    edi,0x9f7626ee
  414c62:	xor    ebp,DWORD PTR [eax]
  414c64:	push   esi
  414c65:	cli    
  414c66:	retf   0x4720
  414c69:	add    al,BYTE PTR [edx]
  414c6b:	pusha  
  414c6c:	adc    ecx,eax
  414c6e:	add    eax,0x95e266b4
  414c73:	xor    DWORD PTR [esi],edx
  414c75:	xchg   DWORD PTR [ecx],esi
  414c77:	adc    cl,BYTE PTR [ebx+0x3393e329]
  414c7d:	fst    DWORD PTR [edi+0x3bad0b71]
  414c83:	mov    ch,0xc4
  414c85:	fdivrp st(7),st
  414c87:	mul    DWORD PTR [ebp-0x75b135d5]
  414c8d:	push   esp
  414c8e:	xor    eax,0x2cc56428
  414c93:	(bad)  fs:[ebx-0x2a]
  414c97:	adc    al,0x9b
  414c99:	push   edx
  414c9a:	inc    edx
  414c9b:	popa   
  414c9c:	js     0x414d10
  414c9e:	ret    0x7a8d
  414ca1:	and    cl,BYTE PTR [ebx+0x7a]
  414ca4:	mov    ecx,0x64efdda9
  414ca9:	(bad)  
  414caa:	fsub   DWORD PTR [esi-0x4ebb5497]
  414cb0:	arpl   WORD PTR [esi+ebx*8],bp
  414cb3:	aas    
  414cb4:	mov    DWORD PTR [eax-0x2a3d350b],edi
  414cba:	cwde   
  414cbb:	add    DWORD PTR [esi+0x63],ebp
  414cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cbf:	cmp    BYTE PTR [ecx],bl
  414cc1:	mov    ch,0x53
  414cc3:	or     eax,0xf59f0b55
  414cc8:	mov    ds:0x3f6c9846,al
  414ccd:	jnp    0x414d0e
  414ccf:	fmul   QWORD PTR [eax-0x78]
  414cd2:	enter  0x6585,0xfd
  414cd6:	mov    bl,0xc5
  414cd8:	(bad)  ds:0xb18e0faf
  414cde:	js     0x414c65
  414ce0:	imul   eax,DWORD PTR [ecx+0x614d0b51],0x58
  414ce7:	inc    esi
  414ce8:	fsubr  QWORD PTR [edx]
  414cea:	pop    edi
  414ceb:	cmc    
  414cec:	shl    DWORD PTR [edx-0x2b14d4b9],cl
  414cf2:	push   ss
  414cf3:	and    eax,0xea115cd3
  414cf8:	(bad)  
  414cf9:	sub    eax,0x8a5bfef7
  414cfe:	es call 0x1bd0:0x66120871
  414d06:	or     DWORD PTR [eax],0xffffffb4
  414d09:	mov    ah,0xe3
  414d0b:	add    al,0xe3
  414d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d0e:	push   edi
  414d0f:	xchg   edx,eax
  414d10:	cld    
  414d11:	push   edi
  414d12:	add    ebx,edi
  414d14:	cdq    
  414d15:	adc    ebp,DWORD PTR [edx-0x3e]
  414d18:	shr    DWORD PTR [esi+0x15881326],1
  414d1e:	mov    edx,0x377a260c
  414d23:	push   ebx
  414d24:	je     0x414cfb
  414d26:	inc    ecx
  414d27:	xor    esi,esp
  414d29:	fist   DWORD PTR [esi]
  414d2b:	sub    al,0x7d
  414d2d:	mov    bl,0xa3
  414d30:	pop    ecx
  414d31:	daa    
  414d32:	ja     0x414d9a
  414d34:	data16 stc 
  414d36:	lods   al,BYTE PTR ds:[esi]
  414d37:	jecxz  0x414da4
  414d39:	pop    ecx
  414d3a:	rcl    DWORD PTR [eax],0x50
  414d3d:	and    al,0x1d
  414d3f:	add    edi,ebp
  414d41:	or     ebp,esi
  414d43:	fild   DWORD PTR [edi+0x2c6719a0]
  414d49:	sti    
  414d4a:	xchg   ecx,eax
  414d4b:	sbb    eax,0xbf6188da
  414d50:	push   edx
  414d51:	adc    dl,dh
  414d53:	push   ebx
  414d54:	jp     0x414d6e
  414d56:	stos   DWORD PTR es:[edi],eax
  414d57:	fisttp WORD PTR [edx-0x16d79eeb]
  414d5d:	cdq    
  414d5e:	je     0x414d47
  414d60:	in     eax,0x62
  414d62:	jle    0x414d39
  414d64:	mov    dh,0xa1
  414d66:	xor    eax,0xfcd58e4f
  414d6b:	shl    DWORD PTR [edx+0x2f],0x9d
  414d6f:	daa    
  414d70:	and    edi,eax
  414d72:	mov    ebp,0xe36b3176
  414d77:	ds adc al,0x4b
  414d7a:	stos   DWORD PTR es:[edi],eax
  414d7b:	inc    ebx
  414d7c:	mov    ebx,0xff5e4cf3
  414d81:	in     al,dx
  414d82:	mov    bl,0x59
  414d84:	hlt    
  414d85:	mov    bh,0xba
  414d87:	rcl    dl,1
  414d89:	test   al,0x63
  414d8b:	mov    bl,0x9e
  414d8d:	leave  
  414d8e:	push   eax
  414d8f:	sbb    DWORD PTR [esp+ecx*8+0x66bbfd0d],ebx
  414d96:	(bad)  
  414d98:	test   al,0x1c
  414d9a:	jo     0x414df5
  414d9c:	push   es
  414d9d:	mov    al,0x22
  414d9f:	jecxz  0x414d9a
  414da1:	sub    al,0x62
  414da3:	inc    BYTE PTR [edi-0x1eb69fda]
  414da9:	add    BYTE PTR ds:0x4be5b05b,0xce
  414db0:	xor    DWORD PTR [esi+0x32],ecx
  414db3:	popa   
  414db4:	arpl   WORD PTR [eax+0x68],bx
  414db7:	add    al,0xaa
  414db9:	into   
  414dba:	fs inc esp
  414dbc:	shl    BYTE PTR [eax+ecx*1+0x23],cl
  414dc0:	imul   esp,DWORD PTR [edx],0xffffffc8
  414dc3:	xchg   ebx,eax
  414dc4:	xor    BYTE PTR [ebp+0x33],dl
  414dc7:	sub    DWORD PTR [eax],ecx
  414dc9:	lods   al,BYTE PTR ds:[esi]
  414dca:	xor    edx,DWORD PTR [edx-0x4e]
  414dcd:	cmp    bl,ch
  414dcf:	add    bh,ah
  414dd1:	std    
  414dd2:	bound  edi,QWORD PTR [eax-0xfb18aad]
  414dd8:	popa   
  414dd9:	xor    BYTE PTR [ebx+edi*4-0x7c],dl
  414ddd:	cmp    ebp,DWORD PTR [ebx]
  414ddf:	jl     0x414e51
  414de1:	pop    eax
  414de2:	mov    BYTE PTR [edi+ebp*4+0x291add1b],dh
  414de9:	dec    esp
  414dea:	add    cl,cl
  414dec:	je     0x414dc2
  414dee:	mov    bl,0xbb
  414df0:	push   0xedd02ac2
  414df5:	and    al,0x47
  414df7:	mov    dl,BYTE PTR [ecx]
  414df9:	cmp    al,0xe5
  414dfb:	add    DWORD PTR [eax-0x4e5d566b],edi
  414e01:	pop    es
  414e02:	lds    ebp,FWORD PTR [eax+0x7ae64335]
  414e08:	cli    
  414e09:	pop    ecx
  414e0a:	mov    eax,ds:0x9bdd9f5b
  414e0f:	lds    edx,FWORD PTR [edx+edx*8-0xb124ad3]
  414e16:	pushw  cs
  414e18:	push   ecx
  414e19:	into   
  414e1a:	fstp   DWORD PTR [ebx]
  414e1c:	dec    esp
  414e1d:	or     bl,BYTE PTR [esi+eax*8+0x71]
  414e21:	cwde   
  414e22:	lock out dx,eax
  414e24:	ret    0x5955
  414e27:	sub    ch,BYTE PTR [eax]
  414e29:	loope  0x414e5e
  414e2b:	pushf  
  414e2c:	stc    
  414e2d:	push   ebx
  414e2e:	ja     0x414e83
  414e30:	shl    BYTE PTR [eax],1
  414e32:	lods   eax,DWORD PTR ds:[esi]
  414e33:	cwde   
  414e34:	xlat   BYTE PTR ds:[ebx]
  414e35:	mov    edi,0xa145e1f2
  414e3a:	int3   
  414e3b:	ror    DWORD PTR [ebx+0x65],1
  414e3e:	and    al,BYTE PTR [ebx+0x1abf27fe]
  414e44:	mov    ds:0x4095e305,al
  414e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4a:	pop    edx
  414e4b:	sbb    al,al
  414e4d:	scas   al,BYTE PTR es:[edi]
  414e4e:	xchg   BYTE PTR [esp+ebx*1-0x5d],bh
  414e52:	retf   
  414e53:	push   esp
  414e54:	or     al,0xd0
  414e56:	fcomp  DWORD PTR [ebx]
  414e58:	stos   DWORD PTR es:[edi],eax
  414e59:	or     DWORD PTR [edi+0x4af34f68],0xffffff98
  414e60:	out    dx,al
  414e61:	sub    eax,DWORD PTR [ecx+0x21ef2f9]
  414e67:	(bad)  
  414e68:	sar    BYTE PTR [esi+0x3e],0xcc
  414e6c:	test   DWORD PTR [ebx+ecx*1+0x71],0x3a7f711c
  414e74:	getsec 
  414e76:	fisubr DWORD PTR [edx+ecx*4-0x52]
  414e7a:	mov    dh,0xb1
  414e7c:	jmp    0x536ef661
  414e81:	sub    BYTE PTR [eax+ebx*4-0x2c],ah
  414e85:	cdq    
  414e86:	mov    ch,cl
  414e88:	clc    
  414e89:	add    eax,0xb2720316
  414e8e:	arpl   WORD PTR [esp+esi*4-0x2a],cx
  414e92:	xchg   ebp,eax
  414e93:	jns    0x414ee0
  414e95:	pop    esi
  414e96:	push   ecx
  414e97:	das    
  414e98:	mov    esp,0xa4bf0730
  414e9d:	int3   
  414e9e:	sbb    ecx,DWORD PTR es:[edi-0xe45f30]
  414ea5:	sub    eax,0xd742cdd9
  414eaa:	inc    ebp
  414eab:	(bad)  
  414eac:	cwde   
  414ead:	js     0x414f24
  414eaf:	jb     0x414ea2
  414eb1:	add    DWORD PTR [edx-0x1e6c385],edx
  414eb7:	dec    esi
  414eb8:	cli    
  414eb9:	inc    esi
  414eba:	mov    WORD PTR [edi-0x2ad63ee0],gs
  414ec0:	add    al,0xd
  414ec2:	xchg   esp,eax
  414ec3:	mov    eax,ds:0xb3bb8b39
  414ec8:	push   ss
  414ec9:	sub    esp,DWORD PTR [edi]
  414ecb:	lods   al,BYTE PTR ds:[esi]
  414ecc:	das    
  414ecd:	jns    0x414eca
  414ecf:	add    al,0x7b
  414ed1:	iret   
  414ed2:	test   BYTE PTR [ebx],ch
  414ed4:	push   ds
  414ed5:	or     DWORD PTR [ecx+0x3525bbf3],esp
  414edb:	mov    ebp,0x57ffb1b1
  414ee0:	(bad)  
  414ee1:	fadd   DWORD PTR [edx+0x55]
  414ee4:	pop    ecx
  414ee5:	mov    eax,0x6f97c05d
  414eea:	sub    al,0xd3
  414eec:	pop    ss
  414eed:	std    
  414eee:	(bad)  
  414eef:	fsubp  st(6),st
  414ef1:	jbe    0x414ebb
  414ef3:	imul   DWORD PTR [ecx]
  414ef5:	fst    DWORD PTR [edx+eax*4+0x5683a3ad]
  414efc:	in     al,0xda
  414efe:	xor    DWORD PTR [ebx+0x4690e115],0xffffff89
  414f05:	mov    edi,0x7d556a0f
  414f0a:	mov    bl,0xdb
  414f0c:	lds    ebx,FWORD PTR [edi]
  414f0e:	mov    dh,0x6a
  414f10:	shl    DWORD PTR [esi+0x7b34f4e5],cl
  414f16:	into   
  414f17:	push   cs
  414f18:	mov    bh,0x76
  414f1a:	and    cl,dh
  414f1c:	inc    eax
  414f1d:	loopne 0x414eb6
  414f1f:	mov    dl,0xf6
  414f21:	(bad)  
  414f22:	mov    ebp,0x35ad75f7
  414f27:	xchg   esp,eax
  414f28:	and    ch,BYTE PTR [edx-0x5e1e16c7]
  414f2e:	xchg   esp,eax
  414f2f:	pop    ebp
  414f30:	test   al,0x38
  414f33:	push   eax
  414f34:	adc    edx,ebx
  414f36:	test   eax,0x6e5ebd10
  414f3b:	and    al,0x1c
  414f3d:	ja     0x414ef9
  414f3f:	inc    edi
  414f40:	cmp    eax,0x3db62389
  414f45:	pcmpgtb mm7,QWORD PTR [edx]
  414f48:	mov    al,ds:0x17c913d4
  414f4d:	cmc    
  414f4e:	jg     0x414ee5
  414f50:	xchg   DWORD PTR ds:0x4d76bd04,eax
  414f56:	stos   DWORD PTR es:[edi],eax
  414f57:	cvtps2pd xmm0,QWORD PTR [esi]
  414f5a:	aas    
  414f5b:	jmp    0x414fd8
  414f5d:	add    DWORD PTR [edx+0x47],eax
  414f60:	push   edx
  414f61:	aad    0xa0
  414f63:	dec    esi
  414f64:	cld    
  414f65:	mov    bl,0x38
  414f67:	test   ah,bl
  414f69:	out    0x41,al
  414f6b:	in     al,0x18
  414f6d:	adc    al,0x76
  414f70:	sbb    dl,BYTE PTR [ebx+ebp*8-0x2a]
  414f74:	push   ss
  414f75:	pusha  
  414f76:	cmp    bh,BYTE PTR [eax+0x5cd5e81e]
  414f7c:	push   ebx
  414f7d:	cli    
  414f7e:	fcmovnbe st,st(1)
  414f80:	pop    eax
  414f81:	xor    esp,DWORD PTR [ecx]
  414f83:	push   esi
  414f84:	aad    0x6a
  414f86:	push   0xffffffe6
  414f88:	jmp    0xd1fc59fa
  414f8d:	dec    eax
  414f8e:	jp     0x414fa3
  414f90:	sub    al,0x8
  414f92:	and    BYTE PTR [ebp-0x48fd6c24],0xb6
  414f99:	pusha  
  414f9a:	pop    ss
  414f9b:	jb     0x414f5c
  414f9d:	mov    edx,0x3e3b94a1
  414fa2:	pop    ss
  414fa3:	push   ss
  414fa4:	push   esp
  414fa5:	ficom  WORD PTR [esi-0x6]
  414fa8:	lds    eax,FWORD PTR [ecx+0x1c]
  414fab:	popa   
  414fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fad:	sub    al,0x36
  414faf:	in     eax,0xa3
  414fb1:	adc    al,0x25
  414fb3:	xchg   edx,eax
  414fb4:	push   0x187eee27
  414fb9:	cwde   
  414fba:	in     al,dx
  414fbb:	push   esp
  414fbc:	and    DWORD PTR [ecx+0x65],ebp
  414fbf:	shr    ecx,0x55
  414fc2:	mov    eax,0x623dd40b
  414fc7:	inc    edi
  414fc8:	pop    edx
  414fc9:	inc    DWORD PTR [edi-0x5a]
  414fcc:	and    dh,dl
  414fce:	js     0x415047
  414fd0:	pop    edx
  414fd1:	xor    al,0xfa
  414fd3:	mov    cl,0xc5
  414fd5:	mov    bh,0x91
  414fd7:	jl     0x414fed
  414fd9:	int3   
  414fda:	ret    
  414fdb:	dec    ecx
  414fdc:	call   0x5ec10329
  414fe1:	sbb    al,0x13
  414fe3:	mov    dh,0x2e
  414fe5:	stos   BYTE PTR es:[edi],al
  414fe6:	ss in  al,dx
  414fe8:	pop    ecx
  414fe9:	out    dx,eax
  414fea:	sbb    BYTE PTR [esi+ebp*8+0x6d],ch
  414fee:	mov    dh,0x4f
  414ff0:	retf   
  414ff1:	dec    esp
  414ff2:	cwde   
  414ff3:	mov    esi,0x89c0ff0c
  414ff8:	xor    al,cl
  414ffa:	out    0xaa,eax
  414ffc:	cs add eax,0x9ae86dd4
  415002:	mov    dh,BYTE PTR [ebp-0x68]
  415005:	or     DWORD PTR [ebp+0x35cf631f],edx
  41500b:	lock push ebx
  41500d:	clc    
  41500e:	(bad)  
  41500f:	call   0x52b2b0e
  415014:	imul   ebx,edx,0xfffffff7
  415017:	fist   WORD PTR fs:[ebx+0x14bbc390]
  41501e:	or     DWORD PTR [ebx+esi*1+0x38],esi
  415022:	sub    eax,0x69b2918d
  415027:	xor    esi,esi
  415029:	dec    eax
  41502a:	in     al,dx
  41502b:	dec    esp
  41502c:	daa    
  41502d:	das    
  41502e:	sub    BYTE PTR [edi+0x552e45c5],0xd0
  415035:	or     DWORD PTR [eiz*2-0x70dcdbe4],0x63
  41503d:	loope  0x414ffb
  41503f:	fwait
  415040:	xchg   BYTE PTR [ecx],dh
  415042:	ror    dh,1
  415044:	leave  
  415045:	loope  0x415050
  415047:	pop    edx
  415048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415049:	es sti 
  41504b:	mov    bh,0x1e
  41504d:	ins    BYTE PTR es:[edi],dx
  41504e:	fidivr DWORD PTR [ebp+ebp*1-0x6e]
  415052:	in     eax,dx
  415053:	gs mov dl,0x2
  415056:	rcr    BYTE PTR [eax+ebx*2-0x65],0xb1
  41505b:	ret    0x19ef
  41505e:	xor    al,BYTE PTR [edi+edx*4+0x29]
  415062:	mov    dh,0xf1
  415064:	jne    0x4150e1
  415066:	pop    edx
  415067:	xor    al,0xe0
  415069:	adc    DWORD PTR [eax],ecx
  41506b:	bound  esi,QWORD PTR [edx+0x67bf7073]
  415071:	out    0x93,eax
  415073:	mov    cl,0xf0
  415075:	cdq    
  415076:	jmp    0x415085
  415078:	pop    edi
  415079:	dec    ecx
  41507a:	xchg   eax,ebx
  41507c:	cmp    ebp,DWORD PTR [edx+0x7bd2963b]
  415082:	xor    DWORD PTR [eax+0x147c2627],ecx
  415088:	jecxz  0x415098
  41508a:	xor    ebp,eax
  41508c:	(bad)  
  41508e:	xchg   ebp,eax
  41508f:	sar    BYTE PTR [edi-0x6f9cc177],0x45
  415096:	outs   dx,BYTE PTR ds:[esi]
  415097:	adc    BYTE PTR [edx+0x2669f718],ah
  41509d:	jne    0x415087
  41509f:	dec    esi
  4150a0:	pop    ebp
  4150a1:	sub    DWORD PTR [ecx+0x3e2696bf],eax
  4150a7:	fsub   st,st(7)
  4150a9:	and    DWORD PTR [ecx+0xbf24928],eax
  4150af:	adc    al,0x2d
  4150b1:	xchg   BYTE PTR [ecx],bh
  4150b3:	pusha  
  4150b4:	in     al,dx
  4150b5:	push   ss
  4150b6:	repnz or ebx,DWORD PTR [edx-0x61b2787b]
  4150bd:	jnp    0x41507b
  4150bf:	inc    esp
  4150c0:	xchg   ecx,eax
  4150c1:	jle    0x4150f6
  4150c3:	mov    esi,DWORD PTR [ebp+eax*4-0x8ddb7ed]
  4150ca:	mov    ebx,0xdaa2584c
  4150cf:	imul   ebp,DWORD PTR [ecx],0xdb39aca4
  4150d5:	or     eax,0x5c525c81
  4150da:	and    eax,0xf0a7194b
  4150df:	xchg   edi,eax
  4150e0:	ret    0x794b
  4150e3:	pushf  
  4150e4:	cmp    al,0x23
  4150e6:	or     al,0x66
  4150e8:	pop    edi
  4150e9:	jge    0x4150c9
  4150eb:	call   0x8868:0x76af11c
  4150f2:	mov    gs,WORD PTR [ecx]
  4150f4:	loopne 0x4150fb
  4150f6:	sti    
  4150f7:	daa    
  4150f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f9:	jbe    0x4150eb
  4150fb:	push   0xffffffb3
  4150fd:	or     BYTE PTR [edx+0x41f158f6],0x33
  415104:	xor    ah,BYTE PTR [eax]
  415106:	sbb    eax,0x4815682c
  41510b:	shl    BYTE PTR [ebx-0x3112e8b7],cl
  415111:	and    BYTE PTR [esi*1-0x2a67a513],dh
  415118:	xchg   ecx,eax
  415119:	adc    al,0xf
  41511b:	cmp    DWORD PTR [edx+ebx*1+0x6],ecx
  41511f:	push   cs
  415120:	add    ebp,DWORD PTR [ecx+eax*1]
  415123:	xchg   ecx,eax
  415124:	fwait
  415125:	adc    edx,DWORD PTR [ebp-0x351af35a]
  41512b:	mov    WORD PTR [ebp+0x5f],?
  41512e:	adc    eax,ecx
  415130:	push   edx
  415131:	sub    DWORD PTR [esi+0x9],eax
  415134:	jae    0x41514e
  415136:	addr16 jnp 0x415145
  415139:	sub    BYTE PTR [esi],bh
  41513b:	and    esp,0xb8c2789c
  415141:	and    eax,0x117800be
  415146:	mov    al,ds:0x358c9c7d
  41514b:	push   cs
  41514c:	aad    0xe1
  41514e:	mov    ds:0x5bc5c7d4,eax
  415153:	xchg   DWORD PTR [ebp+0x20],ebp
  415156:	adc    eax,0x2c5efcfc
  41515b:	jo     0x415110
  41515d:	mov    ebx,0xf07bfae8
  415162:	mov    dl,0x94
  415164:	cdq    
  415165:	hlt    
  415166:	outs   dx,BYTE PTR ds:[esi]
  415167:	out    0xbd,al
  415169:	ror    DWORD PTR [edi+0x1b],1
  41516c:	mov    bl,0xdf
  41516e:	and    BYTE PTR [edx],ch
  415170:	mov    ah,0x8
  415172:	sub    bl,BYTE PTR [ecx+0xcf9f276]
  415178:	adc    BYTE PTR [esi+0x74f6cd80],ah
  41517e:	adc    eax,0x95aa9c8f
  415183:	mov    BYTE PTR [esp+eax*1+0x143885f5],cl
  41518a:	cmp    ecx,DWORD PTR [edx]
  41518c:	int    0xeb
  41518e:	lahf   
  41518f:	add    bl,BYTE PTR ds:0x4840bd89
  415195:	jp     0x415149
  415197:	xchg   ebx,eax
  415198:	add    bl,dh
  41519a:	ja     0x4151ec
  41519c:	pop    esp
  41519d:	popf   
  41519e:	cmp    eax,0xefded681
  4151a3:	fwait
  4151a4:	xchg   edi,eax
  4151a5:	jmp    0x415168
  4151a7:	(bad)  
  4151a8:	xchg   ecx,eax
  4151a9:	ins    BYTE PTR es:[edi],dx
  4151aa:	push   cs
  4151ab:	fwait
  4151ac:	or     DWORD PTR [ecx],edi
  4151ae:	lea    edx,[eax+edi*4+0x71]
  4151b2:	pop    esp
  4151b3:	(bad)  
  4151b4:	xlat   BYTE PTR ds:[ebx]
  4151b5:	sbb    dh,BYTE PTR [edx]
  4151b7:	mov    al,ds:0x511ac2c6
  4151bc:	jmp    0x4151d6
  4151be:	cmc    
  4151bf:	xchg   DWORD PTR [ebx-0x1],edi
  4151c2:	and    DWORD PTR [edi-0x65eb50e5],ebx
  4151c8:	(bad)  
  4151c9:	ja     0x415202
  4151cb:	jp     0x4151a1
  4151cd:	test   dl,dl
  4151cf:	dec    esi
  4151d0:	gs pop es
  4151d2:	stc    
  4151d3:	icebp  
  4151d4:	xor    DWORD PTR [ebx+edx*1-0x537cad16],ebp
  4151db:	mov    edx,0x9391ed01
  4151e0:	pop    eax
  4151e1:	dec    esi
  4151e2:	jnp    0x4151fe
  4151e4:	cmp    DWORD PTR [edi+0x38],ebx
  4151e7:	pop    ecx
  4151e8:	push   0x7
  4151ea:	nop
  4151eb:	jle    0x415208
  4151ed:	add    DWORD PTR [esi],ebx
  4151ef:	and    ah,dh
  4151f1:	xor    DWORD PTR [edx+0x51],esp
  4151f4:	mov    ds:0xc2cf0305,eax
  4151f9:	adc    eax,0x947ef04c
  4151fe:	adc    DWORD PTR [ecx-0x3ecbbd2f],ecx
  415204:	test   eax,0x5952ff98
  415209:	add    BYTE PTR [ebx+ecx*2+0x64],bh
  41520d:	dec    esp
  41520e:	scas   eax,DWORD PTR es:[edi]
  41520f:	loop   0x41520a
  415211:	xor    BYTE PTR [ecx-0x4e8e75e5],al
  415217:	adc    DWORD PTR [edx],ecx
  415219:	mov    ebp,0x7fda53ad
  41521e:	push   0x2fd5a251
  415223:	add    al,0x74
  415225:	mov    cl,0x1a
  415227:	mov    ah,0x66
  415229:	loop   0x415281
  41522b:	adc    BYTE PTR [eax+0x1dd56df3],dh
  415231:	xor    bh,ch
  415233:	xor    edi,ebx
  415235:	inc    edi
  415236:	sbb    al,0x18
  415238:	and    DWORD PTR [edx],ebp
  41523a:	mov    esp,0xf0984b1d
  41523f:	xor    al,0xd
  415241:	pop    ebx
  415242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415243:	into   
  415244:	pop    ebx
  415245:	and    DWORD PTR [ebp-0x1d38bc7],0xffffffba
  41524c:	dec    edx
  41524d:	xor    ebx,ecx
  41524f:	ds aas 
  415251:	mov    bh,0x6b
  415253:	lock jns 0x41528d
  415256:	inc    edi
  415257:	retf   0x6874
  41525a:	sub    eax,0x9b601e91
  41525f:	mov    ?,edi
  415261:	fsubr  DWORD PTR [eax+0x5e3c542e]
  415267:	xchg   ebx,eax
  415268:	fdivr  QWORD PTR [ecx+eiz*4]
  41526b:	cmc    
  41526c:	xchg   ebp,eax
  41526d:	mov    edx,cs
  41526f:	pop    es
  415270:	and    al,0xfb
  415272:	(bad)  
  415273:	fidivr WORD PTR [ecx]
  415275:	mov    bh,0x51
  415277:	leave  
  415278:	add    DWORD PTR [edi+0x58],ecx
  41527b:	ss (bad) 
  41527e:	add    BYTE PTR [ecx],bh
  415280:	sbb    edx,edi
  415282:	mov    bl,0x89
  415284:	or     al,0x7e
  415286:	cmp    ebx,edx
  415288:	pop    ebp
  415289:	(bad)  
  41528b:	pop    edx
  41528c:	dec    ebx
  41528d:	cld    
  41528e:	aas    
  41528f:	pop    ecx
  415290:	test   al,0xe7
  415292:	xchg   edi,eax
  415293:	and    eax,0x7481320
  415298:	pusha  
  415299:	repnz mov esi,0xae2c415c
  41529f:	fstp   DWORD PTR [ebp-0x13]
  4152a2:	clc    
  4152a3:	ror    ecx,cl
  4152a5:	add    al,0x3e
  4152a7:	test   al,0x54
  4152a9:	cmp    edx,DWORD PTR [ecx-0x28bd00f0]
  4152af:	dec    ebp
  4152b0:	scas   eax,DWORD PTR es:[edi]
  4152b1:	mov    BYTE PTR [edx],dl
  4152b3:	hlt    
  4152b4:	outs   dx,BYTE PTR ds:[esi]
  4152b5:	nop
  4152b6:	sub    edx,DWORD PTR [edi-0x1f]
  4152b9:	stos   DWORD PTR es:[edi],eax
  4152ba:	jmp    FWORD PTR [ebp-0x69]
  4152bd:	add    al,0x84
  4152bf:	jno    0x415284
  4152c1:	retf   0xc6c2
  4152c4:	mov    ch,0x7b
  4152c6:	fild   DWORD PTR [eax]
  4152c8:	dec    edx
  4152c9:	es aad 0x13
  4152cc:	aaa    
  4152cd:	cmp    BYTE PTR [ebx+0xe95dff0],dh
  4152d3:	mov    bh,0x21
  4152d5:	jle    0x4152ae
  4152d7:	call   0x2f71665
  4152dc:	pop    ss
  4152dd:	inc    esi
  4152de:	into   
  4152df:	mul    BYTE PTR [esi-0xe]
  4152e2:	adc    al,0x3c
  4152e4:	mov    al,0xbb
  4152e6:	push   ss
  4152e7:	test   DWORD PTR [ebp-0xb],eax
  4152ea:	xchg   ebx,eax
  4152eb:	test   esp,0xa2d9ff84
  4152f1:	repz hlt 
  4152f3:	jle    0x415276
  4152f5:	sub    eax,0x28032a86
  4152fa:	xor    cl,bh
  4152fc:	ja     0x41533c
  4152fe:	test   BYTE PTR [ecx],dh
  415300:	popa   
  415301:	sub    DWORD PTR [eax-0x5c],edi
  415304:	icebp  
  415305:	ss sbb dh,ah
  415308:	(bad)  
  415309:	lahf   
  41530a:	mov    dl,BYTE PTR [ebp-0x74]
  41530d:	jbe    0x41530e
  41530f:	adc    ebx,DWORD PTR [edx-0x12]
  415312:	mov    es,WORD PTR [eax]
  415314:	mov    ebp,0x752fc37b
  415319:	call   0xa2f5:0x6dc19b62
  415320:	fwait
  415321:	xchg   esp,eax
  415322:	out    dx,eax
  415323:	add    bh,BYTE PTR [ebx+0x56d7d965]
  415329:	popa   
  41532a:	inc    ecx
  41532b:	and    al,0x72
  41532d:	xchg   edi,eax
  41532e:	addr16 pop edi
  415330:	jb     0x4152fb
  415332:	mov    ch,0x6
  415334:	lock lds ebp,FWORD PTR [esi+0x48]
  415338:	xchg   ecx,eax
  415339:	ins    BYTE PTR es:[edi],dx
  41533a:	add    cl,cl
  41533c:	in     al,dx
  41533d:	jo     0x415329
  41533f:	xor    eax,0xa93bcca7
  415344:	add    DWORD PTR [esi+0x2d],eax
  415347:	mov    al,0x79
  415349:	push   ebx
  41534a:	push   ss
  41534b:	sbb    bl,BYTE PTR [edx+edx*1+0x48]
  41534f:	lods   al,BYTE PTR ds:[esi]
  415350:	je     0x41539d
  415352:	(bad)  
  415353:	mov    esi,0x894bd40c
  415358:	add    BYTE PTR [esi],ah
  41535a:	sbb    cl,BYTE PTR [edx-0xc]
  41535d:	xor    DWORD PTR [ebx-0x329bdc77],edi
  415363:	hlt    
  415364:	sub    eax,0xcf834d73
  415369:	pop    ebx
  41536a:	push   ecx
  41536b:	cmp    dh,BYTE PTR [esi-0x574f87d8]
  415371:	aad    0xa7
  415373:	stos   DWORD PTR es:[edi],eax
  415374:	mov    DWORD PTR [esi],esi
  415376:	loope  0x415397
  415378:	xchg   BYTE PTR [esp+eax*8-0xe5953db],dh
  41537f:	mov    ds:0x98668e1d,eax
  415384:	push   0xffffff93
  415386:	test   eax,0x6e11a567
  41538b:	in     al,dx
  41538c:	push   edi
  41538d:	and    esi,ecx
  41538f:	jge    0x415397
  415391:	lods   al,BYTE PTR ds:[esi]
  415392:	fs out dx,eax
  415394:	sub    DWORD PTR [esi+0x3c],0xffffffe7
  415398:	and    eax,0x40c24fc5
  41539d:	gs cmp al,al
  4153a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a1:	in     eax,dx
  4153a2:	mov    ch,0x64
  4153a4:	or     BYTE PTR [esi+0x6cb48fd0],bl
  4153aa:	jo     0x415396
  4153ac:	test   BYTE PTR [esi+0x50d20dcf],al
  4153b2:	mov    BYTE PTR [ecx-0x7f],ah
  4153b5:	scas   al,BYTE PTR es:[edi]
  4153b6:	iret   
  4153b7:	mov    ds:0x7b4125c2,eax
  4153bc:	call   0x9ed04fc1
  4153c1:	sub    esp,ecx
  4153c3:	push   ebx
  4153c4:	push   ebx
  4153c5:	xchg   ecx,eax
  4153c6:	ss aam 0x8b
  4153c9:	lock or eax,DWORD PTR [edx+0x30b861d6]
  4153d0:	ror    ecx,0xd0
  4153d3:	xchg   ebx,eax
  4153d4:	cwde   
  4153d5:	push   es
  4153d6:	mov    ch,0x2c
  4153d8:	and    eax,ebp
  4153da:	sti    
  4153db:	in     eax,dx
  4153dc:	xchg   esp,eax
  4153dd:	cmp    dl,0x6e
  4153e0:	pop    esp
  4153e1:	popf   
  4153e2:	or     ebx,DWORD PTR [edx]
  4153e4:	and    ebp,DWORD PTR [eax+0xb]
  4153e7:	or     ah,BYTE PTR [ecx]
  4153e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ea:	dec    ecx
  4153eb:	push   ecx
  4153ec:	inc    eax
  4153ed:	sahf   
  4153ee:	adc    al,0xd3
  4153f0:	scas   al,BYTE PTR es:[edi]
  4153f1:	hlt    
  4153f2:	in     al,0x61
  4153f4:	fisubr WORD PTR [ebx-0x435abf3b]
  4153fa:	xor    DWORD PTR [ebx-0x1659c83a],ebx
  415400:	(bad)  
  415401:	iret   
  415402:	pop    ds
  415403:	retf   0x621
  415406:	test   DWORD PTR [edx+0x38],esi
  415409:	std    
  41540a:	fld    DWORD PTR [edi-0x2]
  41540d:	pop    ds
  41540e:	aam    0xed
  415410:	outs   dx,DWORD PTR ds:[esi]
  415411:	arpl   bx,si
  415413:	adc    bh,dl
  415415:	rcl    DWORD PTR [esi+0x43],1
  415418:	push   ebp
  415419:	daa    
  41541a:	out    dx,al
  41541b:	xchg   ebx,eax
  41541c:	inc    edx
  41541d:	loope  0x41549d
  41541f:	jbe    0x41544d
  415421:	ja     0x415432
  415423:	inc    edx
  415424:	mov    ?,ebx
  415426:	ins    BYTE PTR es:[edi],dx
  415427:	xor    eax,0xea202cb4
  41542c:	stos   DWORD PTR es:[edi],eax
  41542d:	xchg   edi,eax
  41542e:	xchg   ebp,eax
  41542f:	sub    DWORD PTR [eax],ecx
  415431:	push   ss
  415432:	inc    esi
  415433:	enter  0xa326,0x22
  415437:	popa   
  415438:	mov    ah,0x50
  41543a:	inc    ebx
  41543b:	and    ah,BYTE PTR [ebx+0x7ffaae70]
  415441:	call   0x56505421
  415446:	cmp    eax,0x369df21b
  41544b:	imul   edx,DWORD PTR [bp+di-0x63],0xffffffce
  415450:	mov    dh,0xbc
  415452:	cmp    DWORD PTR ds:0x61b308b,ebp
  415458:	lods   eax,DWORD PTR ds:[esi]
  415459:	je     0x4154a8
  41545b:	adc    esp,DWORD PTR [eax+0x11265b5f]
  415461:	cdq    
  415462:	pusha  
  415463:	dec    esp
  415464:	out    0xdb,eax
  415466:	sub    eax,0x2de9c651
  41546b:	sub    edi,DWORD PTR [ebx-0x3ba3b55b]
  415471:	xchg   ebp,eax
  415472:	sub    al,0x38
  415474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415475:	repz sbb esp,edi
  415478:	cbw    
  41547a:	jne    0x4154e5
  41547c:	jmp    0xada3:0x95aadc9b
  415483:	adc    ebx,edx
  415485:	sub    ebp,edi
  415487:	mov    ch,0x16
  415489:	fwait
  41548a:	xchg   ebp,eax
  41548b:	inc    esi
  41548c:	add    cl,BYTE PTR [ebx+0x5e693217]
  415492:	fimul  DWORD PTR [eax-0x42744d34]
  415498:	or     edi,DWORD PTR [edx+edx*1+0x1b812385]
  41549f:	(bad)  
  4154a1:	jecxz  0x4154ac
  4154a3:	lds    ecx,FWORD PTR [edx+ecx*4-0x5f7bd133]
  4154aa:	hlt    
  4154ab:	mov    ch,0x81
  4154ad:	call   0x1fc03019
  4154b2:	int3   
  4154b3:	adc    DWORD PTR [edx],0x5ccd1ce7
  4154b9:	sbb    DWORD PTR [ebx],edi
  4154bb:	add    eax,0x61fed297
  4154c0:	cs retf 
  4154c2:	pop    ecx
  4154c3:	or     DWORD PTR [eax+0x660b62da],ebx
  4154c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ca:	push   ebp
  4154cb:	jge    0x4154d9
  4154cd:	int    0x93
  4154cf:	gs ss stos DWORD PTR es:[edi],eax
  4154d2:	push   ss
  4154d3:	out    0xdf,eax
  4154d5:	nop
  4154d6:	aad    0x25
  4154d8:	xor    eax,0x596cf143
  4154dd:	pop    edi
  4154de:	jne    0x415468
  4154e0:	push   ds
  4154e1:	or     DWORD PTR [esi+0xc380351],esp
  4154e7:	das    
  4154e8:	sbb    ah,bh
  4154ea:	clc    
  4154eb:	sub    bl,BYTE PTR [esi+0x760365df]
  4154f1:	or     BYTE PTR [eax-0x1d87a15],0xab
  4154f8:	xchg   ebp,eax
  4154f9:	cld    
  4154fa:	or     eax,0xc559d25e
  4154ff:	clc    
  415500:	mov    cs,esp
  415502:	outs   dx,DWORD PTR ds:[esi]
  415503:	mov    edi,DWORD PTR [ebp+0x32e53225]
  415509:	or     BYTE PTR [edx+ecx*2+0x22],ch
  41550d:	ins    DWORD PTR es:[edi],dx
  41550e:	bound  esp,QWORD PTR [edx]
  415510:	xchg   edi,eax
  415511:	cmp    eax,0x1b6eca47
  415516:	daa    
  415517:	jne    0x4154ee
  415519:	add    DWORD PTR ds:[ecx],ecx
  41551c:	out    dx,al
  41551d:	sub    eax,0x4d03285b
  415522:	cmp    ecx,DWORD PTR [di]
  415525:	push   esp
  415526:	mov    ebx,0x8e10d7c8
  41552b:	daa    
  41552c:	stc    
  41552d:	mov    cl,0x73
  41552f:	fwait
  415530:	or     eax,0x88377c
  415535:	mov    ebx,0xd4916349
  41553a:	adc    dh,ah
  41553c:	lock cmp ecx,DWORD PTR [edi]
  41553f:	fsub   QWORD PTR [eax-0x2127d9ca]
  415545:	ret    0x8d7a
  415548:	data16 outs dx,BYTE PTR ds:[esi]
  41554a:	pop    es
  41554b:	lahf   
  41554c:	sahf   
  41554d:	mov    ecx,0x46621694
  415552:	cmp    BYTE PTR [edx+0x4fd112d4],cl
  415558:	xchg   edx,eax
  415559:	add    BYTE PTR [eax+0x43],bl
  41555c:	leave  
  41555d:	xchg   edx,eax
  41555e:	(bad)  
  41555f:	mov    al,ds:0x22286fdc
  415564:	js     0x415516
  415566:	mov    eax,0xcdbfd8f7
  41556b:	and    BYTE PTR [edx],cl
  41556d:	and    al,0xa8
  41556f:	shr    BYTE PTR [edx+0x356280e2],cl
  415575:	je     0x4155c2
  415577:	fnsave [edi+0x28]
  41557a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557b:	dec    ebx
  41557c:	into   
  41557d:	and    BYTE PTR [edx-0x64124e62],0xbd
  415584:	(bad)  
  415585:	mov    ebp,0xa94467d5
  41558a:	jbe    0x415550
  41558c:	push   esp
  41558d:	out    0xca,al
  41558f:	add    ebp,esp
  415591:	and    eax,0x6e00edea
  415596:	rol    DWORD PTR [edx],0x23
  415599:	fisttp DWORD PTR [ecx-0x7c96c9a8]
  41559f:	sub    edx,DWORD PTR [ebp-0x63]
  4155a2:	repz jbe 0x415619
  4155a5:	rcr    BYTE PTR [edx-0x2dbba373],1
  4155ab:	mov    ecx,0x81663c67
  4155b0:	retf   
  4155b1:	sbb    dl,BYTE PTR [esp+edx*2+0x7]
  4155b5:	int    0xe9
  4155b7:	cmc    
  4155b8:	pop    ebx
  4155b9:	sub    bh,bh
  4155bb:	(bad)  
  4155bc:	lahf   
  4155bd:	icebp  
  4155be:	bound  edx,QWORD PTR [edx]
  4155c0:	push   ds
  4155c1:	jae    0x4155f1
  4155c3:	pushf  
  4155c4:	mov    ebp,0x40624b54
  4155c9:	je     0x4155ce
  4155cb:	cmp    al,0xae
  4155cd:	retf   
  4155ce:	mov    al,ds:0xb4be26d4
  4155d3:	or     BYTE PTR [edx+0x4e2abf35],bl
  4155d9:	imul   ecx,DWORD PTR [edi],0x9a31d8bf
  4155df:	loopne 0x4155a9
  4155e1:	pop    ebx
  4155e2:	push   eax
  4155e3:	dec    ebx
  4155e4:	ins    DWORD PTR es:[edi],dx
  4155e5:	lea    eax,[ebx-0x544d5202]
  4155eb:	xor    dl,BYTE PTR [ecx]
  4155ed:	outs   dx,DWORD PTR ds:[esi]
  4155ee:	jns    0x41564f
  4155f0:	xchg   ebp,eax
  4155f1:	inc    ecx
  4155f2:	jb     0x41558c
  4155f4:	xchg   ebp,eax
  4155f5:	xor    BYTE PTR [esi-0x7b17483f],bh
  4155fb:	and    eax,0x5810b3c8
  415600:	outs   dx,DWORD PTR ds:[esi]
  415601:	pop    ebp
  415602:	jbe    0x4155eb
  415604:	das    
  415605:	and    cl,0xf5
  415608:	ja     0x41563e
  41560a:	jmp    FWORD PTR [edi-0x4f]
  41560d:	pop    edi
  41560e:	outs   dx,BYTE PTR ds:[esi]
  41560f:	or     BYTE PTR [edi+0xf],al
  415612:	js     0x4155c0
  415614:	jmp    0x415684
  415616:	xchg   edi,eax
  415617:	push   ds
  415618:	loopne 0x415643
  41561a:	cmp    eax,0xd90b4a9c
  41561f:	aad    0xfa
  415621:	push   ecx
  415622:	push   ecx
  415623:	sbb    eax,ecx
  415625:	dec    ecx
  415626:	dec    eax
  415627:	adc    eax,0x23d0b7c2
  41562c:	les    ecx,FWORD PTR [ebp-0x19]
  41562f:	or     eax,0xe22d49ce
  415634:	push   ecx
  415635:	cmc    
  415636:	inc    eax
  415637:	mov    al,ds:0xe24724a7
  41563c:	dec    esp
  41563d:	sbb    bl,BYTE PTR [ebx-0x1c7efadc]
  415643:	jnp    0x415621
  415645:	mov    al,cl
  415647:	loop   0x415637
  415649:	mov    edi,0xa06c016a
  41564e:	imul   DWORD PTR [edi-0x2e]
  415651:	mov    esi,0xeb5b5ee0
  415656:	outs   dx,DWORD PTR ds:[esi]
  415658:	aas    
  415659:	jp     0x41569e
  41565b:	pop    es
  41565c:	fsubr  st(5),st
  41565e:	adc    bl,ch
  415660:	pop    ebp
  415661:	inc    ebx
  415662:	mov    eax,ds:0x42f098dc
  415667:	and    esp,DWORD PTR [esi+ebp*4+0x66]
  41566b:	popf   
  41566c:	imul   eax,ecx,0x3f
  41566f:	shl    BYTE PTR [ecx+0x7169c96e],0xae
  415676:	push   edx
  415677:	js     0x4156f3
  415679:	loopne 0x415695
  41567b:	add    eax,0x4a6f9d87
  415680:	sub    BYTE PTR [edx-0x27],ch
  415683:	ins    DWORD PTR es:[edi],dx
  415684:	mov    ebx,0xed62efb4
  415689:	fisubr DWORD PTR [ecx]
  41568b:	stc    
  41568c:	pop    esp
  41568d:	fwait
  41568e:	or     dh,ch
  415690:	mov    edx,0xa7506ce4
  415695:	in     al,dx
  415696:	out    dx,al
  415697:	push   eax
  415698:	(bad)  
  415699:	lods   eax,DWORD PTR ds:[esi]
  41569a:	gs aaa 
  41569c:	test   eax,0xebdcbc10
  4156a1:	lods   eax,DWORD PTR ds:[esi]
  4156a2:	(bad)  
  4156a3:	out    0xa0,al
  4156a5:	loopne 0x4156f5
  4156a7:	xor    DWORD PTR [ebp+0x7c2e7eb],ebp
  4156ad:	imul   esp,DWORD PTR [ebx+0x18629694],0xd29d55d1
  4156b7:	mul    DWORD PTR [esi+0x1b]
  4156ba:	pop    esp
  4156bb:	jmp    DWORD PTR [ecx-0x7e740554]
  4156c1:	mov    es,WORD PTR [eax]
  4156c3:	(bad)  
  4156c4:	call   0xd79512e2
  4156c9:	clc    
  4156ca:	pop    ebp
  4156cb:	sub    edi,DWORD PTR [ebp-0x15e33ba5]
  4156d1:	jle    0x4156de
  4156d3:	and    ah,BYTE PTR [ebp+0x5f]
  4156d6:	pop    ebx
  4156d7:	das    
  4156d8:	inc    ebp
  4156d9:	cmp    al,0x1d
  4156db:	mov    dl,0xcc
  4156dd:	repz or ebx,esi
  4156e0:	adc    DWORD PTR [edx+ebx*4+0x2d],esp
  4156e4:	pop    esp
  4156e5:	mov    eax,0x6b29cf06
  4156ea:	pop    ebp
  4156eb:	jle    0x41575f
  4156ed:	stc    
  4156ee:	inc    esp
  4156ef:	rcl    ecx,0xc3
  4156f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156f3:	mov    es,edi
  4156f5:	push   eax
  4156f6:	mov    ebp,0x97521748
  4156fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156fc:	cmp    ch,BYTE PTR ds:0xf3423c78
  415702:	clc    
  415703:	push   ecx
  415704:	jbe    0x4156b5
  415706:	mov    al,0xaf
  415708:	fidivr DWORD PTR [ebx-0x5bd06f3a]
  41570e:	pop    edi
  41570f:	and    cl,al
  415711:	rol    BYTE PTR [eax],0xa6
  415714:	aam    0xee
  415716:	sbb    eax,0xaa9cc464
  41571b:	xchg   ebp,eax
  41571c:	mov    ds:0xcfe581ca,al
  415721:	inc    eax
  415722:	or     eax,DWORD PTR [ebx-0x6e65e7b8]
  415728:	sub    eax,0xd3ecf3b8
  41572d:	fisubr DWORD PTR [edx-0x40548d42]
  415733:	sbb    eax,0x6c2de6fc
  415738:	mov    BYTE PTR [edi],al
  41573a:	ja     0x4157b3
  41573c:	push   edx
  41573d:	add    edx,esp
  41573f:	fsub   QWORD PTR [eax+0x37c82f3a]
  415745:	sub    dh,BYTE PTR [ebx]
  415747:	xor    bh,BYTE PTR [ebp+0x4f44eb23]
  41574d:	adc    edi,edx
  41574f:	adc    eax,0x273ef44a
  415754:	es push 0xfffffff8
  415757:	and    al,0xc0
  415759:	aaa    
  41575a:	dec    esi
  41575b:	mov    ebp,0x3dc7bf5f
  415760:	add    ebx,DWORD PTR [edi-0x2f9f2d33]
  415766:	cmp    al,0xef
  415768:	and    ah,bl
  41576a:	pop    esi
  41576b:	shl    ecx,0x54
  41576e:	in     eax,dx
  41576f:	sub    eax,edx
  415771:	dec    edx
  415772:	inc    ebx
  415773:	popf   
  415774:	jecxz  0x415766
  415776:	xchg   edi,eax
  415777:	inc    esp
  415778:	aam    0x67
  41577a:	xchg   ebp,eax
  41577b:	push   0xffffff86
  41577d:	inc    edx
  41577e:	cli    
  41577f:	xor    esp,DWORD PTR [edi+0x22]
  415782:	iret   
  415783:	enter  0x479f,0x98
  415787:	jmp    0x3faa:0x226046cd
  41578e:	repnz xor ebx,DWORD PTR [edx+0x35]
  415792:	js     0x4157a1
  415794:	add    eax,0xa667d2ec
  415799:	mov    bl,0x90
  41579b:	les    esp,FWORD PTR [ebx]
  41579d:	push   es
  41579e:	xor    al,0x22
  4157a0:	int3   
  4157a1:	sbb    BYTE PTR [edi+ebp*1-0x34],0x94
  4157a6:	call   0xd2b00bb
  4157ab:	xchg   BYTE PTR [edx+0x73],dl
  4157ae:	ds jnp 0x4157a9
  4157b1:	or     esi,DWORD PTR [eax+edi*8+0x45]
  4157b5:	jno    0x41581e
  4157b7:	fdivp  st(7),st
  4157b9:	hlt    
  4157ba:	sub    eax,0x1e7dbf81
  4157bf:	(bad)  
  4157c0:	and    ah,BYTE PTR [ebp-0x22]
  4157c3:	ds pop esp
  4157c5:	aas    
  4157c6:	cmp    al,0x24
  4157c8:	hlt    
  4157c9:	cld    
  4157ca:	jle    0x4157b7
  4157cc:	jl     0x41578d
  4157ce:	adc    al,BYTE PTR [edi-0x64]
  4157d1:	or     ebx,ebp
  4157d3:	mov    bl,0x4b
  4157d5:	cld    
  4157d6:	fisttp WORD PTR [edx]
  4157d8:	xchg   edx,eax
  4157d9:	popa   
  4157da:	or     eax,0xfe9c026
  4157df:	cmp    eax,0x54f71f43
  4157e4:	jne    0x415861
  4157e6:	jmp    0x5426:0x9b0dc73b
  4157ed:	sbb    edx,ebp
  4157ef:	push   ebp
  4157f0:	add    al,0xd0
  4157f2:	out    0xfe,al
  4157f4:	sbb    eax,0x5148717
  4157f9:	cmp    cl,BYTE PTR [edx+0x6]
  4157fc:	rol    BYTE PTR [eax+0x45],0xc
  415800:	mov    ebp,0x85f70d00
  415805:	fcomp  DWORD PTR [ecx+edx*8+0x6c]
  415809:	mov    esi,0x7012fee9
  41580e:	(bad)  
  41580f:	xchg   edi,eax
  415810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415811:	push   edx
  415812:	adc    al,0xdc
  415814:	sbb    al,0x28
  415816:	jmp    0x415809
  415818:	sub    edi,DWORD PTR [ebp-0x4ab734ce]
  41581e:	push   ebp
  41581f:	outs   dx,BYTE PTR ds:[esi]
  415820:	mov    edi,DWORD PTR [edi-0x58490527]
  415826:	imul   DWORD PTR [ebx-0x292edb2]
  41582c:	std    
  41582d:	pop    eax
  41582e:	ss inc ecx
  415830:	outs   dx,BYTE PTR ds:[esi]
  415831:	pop    esi
  415832:	push   esp
  415833:	mov    DWORD PTR [eax+0x5334da2a],esi
  415839:	adc    al,0x30
  41583b:	mov    BYTE PTR [ecx-0x47428b1e],cl
  415841:	xchg   ebp,eax
  415842:	mov    edx,0xc4f3f55
  415847:	pop    ds
  415848:	or     al,0x80
  41584a:	fstp   st(4)
  41584c:	mov    DWORD PTR [eax],ebp
  41584e:	or     ebp,edx
  415850:	and    eax,0xf3b7b238
  415855:	and    BYTE PTR [edi+0x3d],0x1b
  415859:	in     al,0x4c
  41585b:	fwait
  41585c:	iret   
  41585d:	mov    esp,0x820a5b8e
  415862:	cmp    eax,0x5dce3198
  415867:	ins    BYTE PTR es:[edi],dx
  415868:	loopne 0x41588b
  41586a:	(bad)  
  41586b:	xor    ebx,DWORD PTR [esp+ebx*1-0x7f2e60b4]
  415872:	fmulp  st(2),st
  415874:	jge    0x41588b
  415876:	enter  0x6eb7,0xc3
  41587a:	ins    BYTE PTR es:[edi],dx
  41587b:	and    BYTE PTR [ecx],bh
  41587d:	loop   0x415826
  41587f:	and    al,0xb6
  415881:	inc    ecx
  415882:	ret    
  415883:	data16 cs icebp 
  415886:	ja     0x41588f
  415888:	cmp    dl,BYTE PTR [edi]
  41588a:	xchg   edi,eax
  41588b:	out    0x79,al
  41588d:	xor    ecx,DWORD PTR [edi+0x36]
  415890:	aad    0xf6
  415892:	scas   eax,DWORD PTR es:[edi]
  415893:	sbb    ah,BYTE PTR [edx]
  415895:	sbb    ebp,DWORD PTR [edi-0x54ed2e33]
  41589b:	add    eax,0x40642194
  4158a0:	mov    esi,0x21d12ba7
  4158a5:	xor    al,0x48
  4158a7:	add    BYTE PTR gs:[ecx+eax*2+0x8],0x51
  4158ad:	ja     0x4158cd
  4158af:	sub    DWORD PTR [ecx-0x2e8d8eb7],edx
  4158b5:	inc    edi
  4158b6:	push   0x5a
  4158b8:	jne    0x41590f
  4158ba:	sbb    BYTE PTR [edi+ecx*1-0x62f46130],al
  4158c1:	mov    WORD PTR [ebx*8+0x15971ef0],es
  4158c8:	aam    0x67
  4158ca:	dec    esi
  4158cb:	shl    DWORD PTR [ecx],cl
  4158cd:	jmp    0xe917:0xd1c35819
  4158d4:	(bad)  
  4158d5:	gs and ah,0x8d
  4158d9:	into   
  4158da:	arpl   WORD PTR [ebp-0x25],ax
  4158dd:	jnp    0x415954
  4158df:	inc    ecx
  4158e0:	push   esp
  4158e1:	push   ss
  4158e2:	stos   DWORD PTR es:[edi],eax
  4158e3:	pop    ecx
  4158e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e5:	push   ds
  4158e6:	dec    ebx
  4158e7:	jg     0x41593e
  4158e9:	scas   al,BYTE PTR es:[edi]
  4158ea:	or     BYTE PTR [ecx],bl
  4158ec:	dec    esi
  4158ed:	adc    edx,edi
  4158ef:	or     ecx,DWORD PTR [eax-0x2a]
  4158f2:	mov    ds:0x90a262ae,eax
  4158f7:	ror    BYTE PTR [edx],cl
  4158f9:	cld    
  4158fa:	push   esp
  4158fb:	xor    edi,DWORD PTR [ecx+0x6ec8a146]
  415901:	not    BYTE PTR [ecx+0x40adde9]
  415907:	test   eax,0x51f81755
  41590c:	pop    fs
  41590e:	iret   
  41590f:	jecxz  0x415965
  415911:	xchg   edi,eax
  415912:	mov    eax,0x708d7500
  415917:	mov    bl,0x8f
  415919:	xchg   ebp,eax
  41591a:	xchg   edi,eax
  41591b:	mov    esi,0x9f9baa72
  415920:	xchg   esp,eax
  415921:	jae    0x415911
  415923:	mov    es,WORD PTR [edi-0x239ae339]
  415929:	imul   DWORD PTR [edi-0x58951240]
  41592f:	outs   dx,BYTE PTR ds:[esi]
  415930:	jae    0x4158b2
  415932:	call   0x9ee5:0xa397792b
  415939:	pop    ds
  41593a:	sub    eax,0xae7b3b50
  41593f:	les    esi,FWORD PTR [eax+0x3ab9ac5]
  415945:	and    ch,dl
  415947:	add    eax,0x1716fdbd
  41594c:	sub    eax,0x81de684c
  415951:	aad    0x98
  415953:	dec    esp
  415954:	dec    eax
  415955:	pcmpeqd mm6,mm3
  415958:	lahf   
  415959:	xor    eax,0xff36398a
  41595e:	call   0x50bf:0x300bf63d
  415965:	aad    0xcc
  415967:	pop    ebp
  415968:	jno    0x4159d0
  41596a:	push   ds
  41596b:	retf   0xdaaa
  41596e:	outs   dx,BYTE PTR ds:[si]
  415970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415971:	jg     0x4158f3
  415973:	pushf  
  415974:	xchg   edi,eax
  415975:	int    0x43
  415977:	in     eax,0x7
  415979:	add    ecx,DWORD PTR [edx-0x62]
  41597c:	sbb    eax,0x9e4fb634
  415981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415982:	cmp    eax,0x412dcee7
  415987:	and    eax,0x5b4a6c95
  41598c:	xlat   BYTE PTR ds:[ebx]
  41598d:	sbb    al,BYTE PTR [ebx+0x5f]
  415990:	mov    eax,0xba720239
  415995:	into   
  415996:	add    ecx,DWORD PTR ds:0xb534b9de
  41599c:	xchg   edi,eax
  41599d:	xchg   ebp,eax
  41599e:	in     al,dx
  41599f:	cld    
  4159a0:	jecxz  0x415978
  4159a2:	pop    ebx
  4159a3:	sub    DWORD PTR [esi+eax*2],esi
  4159a6:	mul    edx
  4159a8:	push   ecx
  4159a9:	sub    BYTE PTR [ecx-0x2],ah
  4159ac:	dec    ecx
  4159ad:	cdq    
  4159ae:	ins    DWORD PTR es:[edi],dx
  4159af:	inc    edx
  4159b0:	push   esi
  4159b1:	or     esi,DWORD PTR [esi-0x3616c51b]
  4159b7:	out    0xff,eax
  4159b9:	ins    BYTE PTR es:[edi],dx
  4159ba:	jl     0x4159e3
  4159bc:	inc    edi
  4159bd:	push   esi
  4159be:	jl     0x4159ed
  4159c0:	sahf   
  4159c1:	sub    ecx,DWORD PTR [esi]
  4159c3:	add    eax,0x9ea619c6
  4159c8:	sbb    DWORD PTR [eax+edx*2-0x15],edx
  4159cc:	jo     0x4159e5
  4159ce:	lods   eax,DWORD PTR ds:[esi]
  4159cf:	dec    ebp
  4159d0:	and    eax,0x9d5b74bf
  4159d5:	jne    0x415985
  4159d7:	jle    0x4159b3
  4159d9:	mov    es,WORD PTR [edx+0x3b63658e]
  4159df:	and    DWORD PTR [ebx],edi
  4159e1:	es xchg eax,ecx
  4159e4:	add    eax,0xfebff5aa
  4159e9:	pop    ds
  4159ea:	(bad)  
  4159ec:	pop    esi
  4159ed:	xchg   ebp,eax
  4159ee:	cli    
  4159ef:	dec    edi
  4159f0:	sbb    BYTE PTR [edx-0x35],0xff
  4159f4:	cmc    
  4159f5:	xor    DWORD PTR [esi],0x82921b99
  4159fb:	fs mov bl,0xc8
  4159fe:	push   ebx
  4159ff:	or     BYTE PTR [esi+eiz*2-0x926adbc],bl
  415a06:	xor    eax,0xe14d55b8
  415a0b:	fisubr DWORD PTR [edi]
  415a0d:	in     eax,dx
  415a0e:	aam    0x12
  415a10:	or     eax,0x8595d6da
  415a15:	mov    ds:0x90d9b3f,eax
  415a1a:	fidivr DWORD PTR [ecx+0x76]
  415a1d:	mov    cl,0x8e
  415a1f:	leave  
  415a20:	xchg   bh,cl
  415a22:	call   0xc535:0xd043acb9
  415a29:	or     esp,esp
  415a2b:	jmp    0xe6db:0x68d23df8
  415a32:	jne    0x415a48
  415a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a35:	aaa    
  415a36:	shr    DWORD PTR [ebx+0x39],1
  415a39:	cmp    eax,0x683181f8
  415a3e:	iret   
  415a3f:	addr16 arpl bx,ax
  415a42:	xchg   esp,eax
  415a43:	mov    WORD PTR [edi],fs
  415a45:	mov    WORD PTR [ebx+0x3566e1db],?
  415a4b:	push   ecx
  415a4c:	enter  0x5e62,0x39
  415a50:	jp     0x415aa7
  415a52:	xlat   BYTE PTR ds:[ebx]
  415a53:	(bad)  
  415a54:	cmp    ebx,esp
  415a56:	xchg   DWORD PTR [edi],ebx
  415a58:	jecxz  0x4159e6
  415a5a:	sahf   
  415a5b:	push   ss
  415a5c:	mov    ah,ah
  415a5e:	cmp    al,0x32
  415a60:	mov    edx,0xbaeddda2
  415a65:	mov    esp,0x25c5504c
  415a6a:	sub    DWORD PTR [ecx+0x15313cf7],ebx
  415a70:	stos   DWORD PTR es:[edi],eax
  415a71:	and    al,0xaf
  415a73:	or     eax,0x33cd4a55
  415a78:	inc    ebp
  415a79:	mov    WORD PTR [eax-0x2f5b7f92],ds
  415a7f:	or     ah,0xd4
  415a82:	xlat   BYTE PTR ds:[ebx]
  415a83:	or     eax,0x4e586915
  415a88:	xor    ecx,esp
  415a8a:	imul   esp,DWORD PTR [edx],0xffffffa6
  415a8d:	pop    ebx
  415a8e:	mov    dh,0xe9
  415a90:	repz in eax,dx
  415a92:	ficom  DWORD PTR [ecx]
  415a94:	retf   
  415a95:	sub    eax,0x2cbc7444
  415a9a:	sbb    eax,0xceb75116
  415a9f:	sub    edx,DWORD PTR [eax-0x22]
  415aa2:	adc    ah,BYTE PTR [ebp+0x19]
  415aa5:	aad    0x5b
  415aa7:	jmp    0x415a77
  415aa9:	inc    eax
  415aaa:	mov    ecx,0xff187001
  415aaf:	aam    0x45
  415ab1:	dec    ebp
  415ab2:	shl    DWORD PTR [edi-0x4aa4981b],0x2a
  415ab9:	sub    edi,DWORD PTR [esi+0x5b]
  415abc:	and    bl,BYTE PTR [edi-0x2b9ea1de]
  415ac2:	aas    
  415ac3:	xchg   ecx,eax
  415ac4:	icebp  
  415ac5:	mov    BYTE PTR [ebp-0x4cc9b4c0],0xc2
  415acc:	push   edi
  415acd:	imul   eax,DWORD PTR [edx+0x29],0x4d
  415ad1:	ja     0x415b03
  415ad3:	imul   edx,DWORD PTR ds:0x5c564852,0xf
  415ada:	mov    bh,0x90
  415adc:	jg     0x415b16
  415ade:	mov    edx,DWORD PTR [edi+esi*2]
  415ae1:	cdq    
  415ae2:	call   0x6d4b6f0a
  415ae7:	xlat   BYTE PTR ds:[ebx]
  415ae8:	jb     0x415b5a
  415aea:	cmp    ebx,DWORD PTR [edi]
  415aec:	lods   al,BYTE PTR ds:[esi]
  415aed:	inc    BYTE PTR [edx+0x68d3b769]
  415af3:	mov    esi,DWORD PTR [ebx-0x32e4262d]
  415af9:	jp     0x415ae7
  415afb:	jae    0x415aea
  415afd:	inc    ebx
  415afe:	cmp    DWORD PTR [ebx+0x5],edi
  415b01:	push   ecx
  415b02:	cld    
  415b03:	sar    BYTE PTR [ecx+esi*4+0x7d052dad],0xb9
  415b0b:	inc    eax
  415b0c:	or     esp,DWORD PTR [ecx-0x45]
  415b0f:	and    eax,0x4f385f62
  415b14:	mov    ds:0x93460f3c,al
  415b19:	(bad)  
  415b1a:	out    0xa3,eax
  415b1c:	push   0x303eb983
  415b21:	xor    ebx,DWORD PTR [ebp+ecx*1+0x2e7155c6]
  415b28:	jl     0x415b33
  415b2a:	jecxz  0x415b1b
  415b2c:	retf   
  415b2d:	mov    BYTE PTR [ecx],ah
  415b2f:	sti    
  415b30:	aas    
  415b31:	pop    eax
  415b32:	les    esi,FWORD PTR [eax-0x7c772239]
  415b38:	repnz xchg ebp,eax
  415b3a:	imul   BYTE PTR fs:[eax-0x1628138d]
  415b41:	jbe    0x415b6b
  415b43:	push   ebp
  415b44:	scas   al,BYTE PTR es:[edi]
  415b45:	sub    bl,dl
  415b47:	adc    al,0x20
  415b49:	call   0x84863038
  415b4e:	out    0x17,eax
  415b50:	lods   eax,DWORD PTR ds:[esi]
  415b51:	mov    DWORD PTR [eax],esi
  415b53:	mov    fs,WORD PTR [ebx]
  415b55:	sub    eax,0xb32d501d
  415b5a:	adc    ebp,DWORD PTR [esi-0x33]
  415b5d:	int    0x74
  415b5f:	jg     0x415b1e
  415b61:	jns    0x415b84
  415b63:	and    al,0xf0
  415b65:	gs out dx,eax
  415b67:	push   ds
  415b68:	mov    ecx,0xe50aa1d9
  415b6d:	adc    eax,0x4411d271
  415b72:	(bad)  
  415b73:	fimul  WORD PTR [ecx]
  415b75:	jecxz  0x415b32
  415b77:	rcr    BYTE PTR [eax],cl
  415b79:	sbb    esp,DWORD PTR [esi]
  415b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7c:	inc    esi
  415b7d:	sahf   
  415b7e:	and    eax,ecx
  415b80:	mov    cl,ch
  415b82:	scas   eax,DWORD PTR es:[edi]
  415b83:	cmp    DWORD PTR [eax],ebx
  415b85:	inc    ecx
  415b86:	add    dl,BYTE PTR [ebp-0x41]
  415b89:	popa   
  415b8a:	fisttp WORD PTR [ecx]
  415b8c:	sbb    eax,DWORD PTR [eax-0x67]
  415b8f:	out    dx,eax
  415b90:	test   eax,0x800eb959
  415b95:	cmp    cl,BYTE PTR [ebp+edi*1-0x1c]
  415b99:	mov    ebx,DWORD PTR [edx-0x6af4446f]
  415b9f:	(bad)  
  415ba0:	xor    edi,edx
  415ba2:	mov    ah,0x36
  415ba4:	fld    TBYTE PTR [edi+0x25]
  415ba7:	xchg   edx,eax
  415ba8:	jp     0x415b84
  415baa:	mov    bl,0x60
  415bac:	inc    eax
  415bad:	jo     0x415bf4
  415baf:	xor    DWORD PTR [edx+0x51],esp
  415bb2:	sti    
  415bb3:	sub    eax,0x8efe347f
  415bb8:	mov    eax,0x4d11f6af
  415bbd:	sub    edx,edx
  415bbf:	ret    0x2904
  415bc2:	int    0x23
  415bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bc5:	jne    0x415be2
  415bc7:	pop    ebp
  415bc8:	mov    eax,0xdfb02542
  415bcd:	fistp  QWORD PTR [ecx]
  415bcf:	mov    bh,0xdd
  415bd1:	or     DWORD PTR [edx+0x3c],edi
  415bd4:	push   0xffffffd6
  415bd6:	or     BYTE PTR [edi-0x63],cl
  415bd9:	add    bl,0x48
  415bdc:	mov    edi,0xe53e1577
  415be1:	or     DWORD PTR [eax],eax
  415be3:	cmp    cl,0xd6
  415be6:	lods   eax,DWORD PTR ds:[esi]
  415be7:	mov    al,0xef
  415be9:	aaa    
  415bea:	les    ebx,FWORD PTR [ebx+edx*4-0x26937d69]
  415bf1:	out    0x13,eax
  415bf3:	xchg   edi,eax
  415bf4:	cmp    DWORD PTR [edi-0x4d],edx
  415bf7:	add    eax,0x16ac0324
  415bfc:	sbb    dl,BYTE PTR [ebp-0x2e60104a]
  415c02:	pop    ss
  415c03:	aaa    
  415c04:	pmaddwd mm4,QWORD PTR [ecx+ebx*1-0x12a68eb5]
  415c0c:	sub    BYTE PTR [esi+0x6b],bh
  415c0f:	pushf  
  415c10:	jmp    0x4390:0x50bdb579
  415c17:	push   edi
  415c18:	jbe    0x415bb1
  415c1a:	pop    esp
  415c1b:	scas   al,BYTE PTR es:[edi]
  415c1c:	push   ecx
  415c1d:	ins    BYTE PTR es:[edi],dx
  415c1e:	sub    ah,BYTE PTR [eax+0x7b1c5a97]
  415c24:	aam    0x63
  415c26:	lods   eax,DWORD PTR ds:[esi]
  415c27:	(bad)  
  415c28:	das    
  415c29:	outs   dx,BYTE PTR ds:[esi]
  415c2a:	fiadd  WORD PTR [edi+0x5330c43d]
  415c30:	mov    dh,0x13
  415c32:	out    dx,eax
  415c33:	lock push ss
  415c35:	gs dec ecx
  415c37:	rcr    DWORD PTR [edx],cl
  415c39:	dec    esi
  415c3a:	arpl   WORD PTR [eax+eax*1+0x4c341593],si
  415c41:	cmp    cl,BYTE PTR [edx+0x31353225]
  415c47:	mov    cl,0xd7
  415c49:	ret    
  415c4a:	out    0x17,al
  415c4c:	xchg   ebx,eax
  415c4d:	add    ecx,eax
  415c4f:	inc    ebp
  415c50:	adc    eax,0x85132dc5
  415c55:	out    dx,eax
  415c56:	popf   
  415c57:	pop    ebp
  415c58:	inc    edi
  415c59:	stos   BYTE PTR es:[edi],al
  415c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5b:	jg     0x415cd8
  415c5d:	outs   dx,BYTE PTR ds:[esi]
  415c5e:	outs   dx,BYTE PTR ds:[esi]
  415c5f:	in     al,dx
  415c60:	pop    esi
  415c61:	and    DWORD PTR [edi-0x34d77b8a],edi
  415c67:	(bad)  
  415c68:	pop    ebp
  415c69:	mov    dl,0x12
  415c6b:	lods   eax,DWORD PTR ds:[esi]
  415c6c:	das    
  415c6d:	inc    edx
  415c6e:	and    eax,0x74d641be
  415c73:	addr16 jae 0x415cd8
  415c76:	xchg   esi,eax
  415c77:	or     cl,BYTE PTR [ecx+0x4]
  415c7a:	mov    cl,0x81
  415c7c:	cmp    BYTE PTR [edx-0x3186f6c9],bh
  415c82:	mov    ecx,?
  415c84:	enter  0x1d66,0x18
  415c88:	sub    ecx,esp
  415c8a:	mov    bl,0x97
  415c8c:	nop
  415c8d:	in     eax,dx
  415c8e:	jecxz  0x415c21
  415c90:	cs ret 0x7ec0
  415c94:	sbb    DWORD PTR [eax-0x60420fa3],0x3a2968d2
  415c9e:	leave  
  415c9f:	adc    BYTE PTR [edi+0x6458971],ch
  415ca5:	or     eax,0x2a9c2b5f
  415caa:	call   0xcfd3:0x20446959
  415cb1:	mov    dh,0x98
  415cb3:	pop    esp
  415cb4:	gs fs sub eax,0xb7b4de0
  415cbb:	icebp  
  415cbc:	jle    0x415c90
  415cbe:	dec    edi
  415cbf:	and    ebp,edx
  415cc1:	jge    0x415cd0
  415cc3:	or     bh,BYTE PTR [ecx]
  415cc5:	mov    eax,eax
  415cc7:	daa    
  415cc8:	fist   WORD PTR ds:0xa33dad57
  415cce:	push   ebp
  415ccf:	mov    BYTE PTR [edi+0x12],ch
  415cd2:	out    dx,al
  415cd3:	sub    eax,0x69abcaf7
  415cd8:	mov    ebx,0xed44e3e8
  415cdd:	sub    eax,0xf1970a84
  415ce2:	(bad)  
  415ce3:	addr16 adc eax,0xab29d7f2
  415ce9:	mov    ecx,0xe34a0a12
  415cee:	and    dh,al
  415cf0:	retf   
  415cf1:	mov    al,0x47
  415cf3:	ins    DWORD PTR es:[edi],dx
  415cf4:	(bad)  
  415cf5:	cmc    
  415cf6:	ins    DWORD PTR es:[edi],dx
  415cf7:	std    
  415cf8:	sbb    edi,eax
  415cfa:	ins    BYTE PTR es:[edi],dx
  415cfb:	jno    0x415cad
  415cfd:	xchg   ch,cl
  415cff:	lods   eax,DWORD PTR ds:[esi]
  415d00:	inc    ecx
  415d01:	inc    eax
  415d02:	enter  0xbd8c,0x52
  415d06:	cmp    DWORD PTR [esi+0x7b],0xf0a5c217
  415d0d:	lea    esi,[edi]
  415d0f:	(bad)
  415d13:	mov    eax,ds:0x1b50d86d
  415d18:	ss inc eax
  415d1a:	repnz or DWORD PTR [ebx+0x42],0xffffff97
  415d1f:	out    dx,eax
  415d20:	shl    DWORD PTR [ebx-0x19],cl
  415d23:	and    eax,0x287155ab
  415d28:	repnz test eax,0x522ab407
  415d2e:	sub    ebx,DWORD PTR [edx]
  415d30:	stos   BYTE PTR es:[edi],al
  415d31:	out    0x44,eax
  415d33:	lds    esi,FWORD PTR [edx-0x6d]
  415d36:	sub    al,0x55
  415d38:	sbb    bh,bl
  415d3a:	cld    
  415d3b:	inc    ebx
  415d3c:	push   ebx
  415d3d:	lods   al,BYTE PTR cs:[esi]
  415d3f:	mov    bh,0x8f
  415d41:	icebp  
  415d42:	cmp    bl,BYTE PTR [ebp+0x48]
  415d45:	cmc    
  415d46:	ss inc edx
  415d48:	mov    ds,WORD PTR [esi-0x403ca0bd]
  415d4e:	adc    cl,BYTE PTR ds:0x12477586
  415d54:	repz adc BYTE PTR [esi],0xeb
  415d58:	outs   dx,BYTE PTR ds:[esi]
  415d59:	jge    0x415d4e
  415d5b:	loopne 0x415d3a
  415d5d:	addr16 je 0x415d33
  415d60:	xor    al,BYTE PTR [ebx-0x64]
  415d63:	call   0xce74:0x4de74fd4
  415d6a:	and    eax,0x566121f0
  415d6f:	test   ecx,0x215de393
  415d75:	test   DWORD PTR [edx],esi
  415d77:	aam    0xe0
  415d79:	inc    esp
  415d7a:	hlt    
  415d7b:	adc    eax,DWORD PTR [eax+0x27005966]
  415d81:	outs   dx,DWORD PTR ds:[esi]
  415d82:	outs   dx,DWORD PTR ds:[esi]
  415d83:	inc    ebx
  415d84:	icebp  
  415d85:	loope  0x415df4
  415d87:	jno    0x415d4e
  415d89:	mov    esp,0x63568d3d
  415d8e:	or     cl,BYTE PTR [esi+0x6105c563]
  415d94:	fwait
  415d95:	sti    
  415d96:	mov    ebp,0xc246f7f
  415d9b:	or     al,0x2d
  415d9d:	test   eax,0xe5146844
  415da2:	jae    0x415da9
  415da4:	(bad)  
  415da5:	(bad)  [ebp-0x6f]
  415da8:	and    al,0x29
  415daa:	loop   0x415e17
  415dac:	or     al,0xb9
  415dae:	jmp    0xe998c90f
  415db3:	aad    0xe7
  415db5:	cmp    bl,dh
  415db7:	out    0xae,eax
  415db9:	retf   0xffc5
  415dbc:	inc    ebx
  415dbd:	mov    al,ds:0xdd7df40c
  415dc2:	mov    edx,0x88086cd4
  415dc7:	xor    DWORD PTR [ecx],esp
  415dc9:	and    bh,BYTE PTR [ebp+0x487ae97e]
  415dcf:	sbb    eax,0x9eb753f4
  415dd4:	dec    edi
  415dd5:	ds stos DWORD PTR es:[edi],eax
  415dd7:	fs int3 
  415dd9:	loope  0x415de5
  415ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ddc:	imul   edx,DWORD PTR [ebx-0x24],0x8
  415de0:	mov    al,0xbe
  415de2:	mov    ah,0x11
  415de4:	sbb    eax,DWORD PTR ss:[ebx+0x39]
  415de8:	ja     0x415dd1
  415dea:	rol    BYTE PTR [ebp-0x69],1
  415ded:	pop    ds
  415dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415def:	enter  0x6303,0xd2
  415df3:	mov    eax,0x883acd5c
  415df8:	mov    dl,0xc6
  415dfa:	pop    es
  415dfb:	fbld   TBYTE PTR [ebx+0x63b3acb4]
  415e01:	or     dh,BYTE PTR [edx+edi*1+0x54]
  415e05:	xchg   edi,eax
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	js     0x415e0a
  415e09:	hlt    
  415e0a:	or     bh,BYTE PTR [ebx+0x12]
  415e0d:	and    DWORD PTR [esp+ebx*8+0x37ebfa44],ecx
  415e14:	cmp    ebp,DWORD PTR [edx-0x3423f3c5]
  415e1a:	cmp    al,0xa9
  415e1c:	(bad)  
  415e1d:	jmp    0x415dbc
  415e1f:	sbb    dh,BYTE PTR [esi+esi*8+0x78ef8e9e]
  415e26:	or     esp,DWORD PTR [ebx]
  415e28:	dec    eax
  415e29:	add    al,0x6f
  415e2b:	jb     0x415e2c
  415e2d:	adc    DWORD PTR ss:0x8ba5f40f,esi
  415e34:	icebp  
  415e35:	mov    ebx,0x216064f
  415e3a:	cld    
  415e3b:	mov    eax,0xf037ddb7
  415e40:	into   
  415e41:	dec    eax
  415e42:	daa    
  415e43:	and    al,0xe1
  415e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e46:	jl     0x415ead
  415e48:	inc    ebp
  415e49:	xlat   BYTE PTR ds:[ebx]
  415e4a:	pushf  
  415e4b:	gs cwde 
  415e4d:	rcr    bh,cl
  415e4f:	and    dh,BYTE PTR [esi-0x212e7edc]
  415e55:	xor    bh,bh
  415e57:	mov    DWORD PTR [edx-0x3a726a1e],eax
  415e5d:	or     BYTE PTR [ebx+eax*2],0x9d
  415e61:	cmp    eax,0xe0479cbd
  415e66:	cmp    ah,BYTE PTR [eax+ebx*4+0x51]
  415e6a:	mov    esp,0xeafb79e9
  415e6f:	arpl   WORD PTR [edx],dx
  415e71:	sub    DWORD PTR [edx+0x65],esi
  415e74:	cli    
  415e75:	outs   dx,BYTE PTR ds:[esi]
  415e76:	add    BYTE PTR [edi+ecx*8-0x2e74cf9e],ah
  415e7d:	mov    dh,al
  415e7f:	js     0x415e18
  415e81:	js     0x415e80
  415e83:	xchg   ebx,eax
  415e84:	je     0x415e22
  415e86:	or     DWORD PTR [ebp+0x22],eax
  415e89:	ss mov ebx,0xcaed07f8
  415e8f:	(bad)  
  415e91:	jo     0x415ee6
  415e93:	call   0x7b7b:0xf80c4279
  415e9a:	mov    ecx,0xcac92ccf
  415e9f:	out    0x4c,eax
  415ea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea2:	les    edi,FWORD PTR [edi-0x57]
  415ea5:	popf   
  415ea6:	leave  
  415ea7:	cs ss and eax,0x7d90d150
  415eae:	cmp    BYTE PTR [ebp+0x28d5ea11],bh
  415eb4:	ds aam 0xfd
  415eb7:	or     ebp,DWORD PTR [ebp+0x4d6a7b0c]
  415ebd:	xchg   edx,eax
  415ebe:	retf   0xe50
  415ec1:	or     cl,dh
  415ec3:	mov    edi,0xb5efc19a
  415ec8:	push   cs
  415ec9:	es int3 
  415ecb:	(bad)  [edi]
  415ecd:	mov    cl,0xc7
  415ecf:	rcl    BYTE PTR [edi-0x57],cl
  415ed2:	jbe    0x415ed4
  415ed4:	jmp    0x415f39
  415ed6:	inc    ebp
  415ed7:	xor    DWORD PTR [ebx],ebx
  415ed9:	inc    ebp
  415eda:	mov    ebx,0x6cff5be2
  415edf:	jge    0x415ed5
  415ee1:	ficom  WORD PTR [ebx-0x4]
  415ee4:	jecxz  0x415ec4
  415ee6:	mov    edx,0x247f3c5b
  415eeb:	sub    eax,0xb0a7e993
  415ef0:	into   
  415ef1:	jmp    0xdd5f11e1
  415ef6:	enter  0xac34,0xce
  415efa:	popa   
  415efb:	adc    DWORD PTR [edx-0x7441755e],ecx
  415f01:	mov    ch,0x90
  415f03:	or     DWORD PTR [esi+0x0],ebx
  415f06:	adc    al,bl
  415f08:	jge    0x415f11
  415f0a:	in     al,0x78
  415f0c:	adc    eax,DWORD PTR [eax]
  415f0e:	mov    ecx,0xa59285ed
  415f13:	aam    0x8d
  415f15:	pop    ebp
  415f16:	pop    esi
  415f17:	hlt    
  415f18:	test   eax,0x2cdc2b62
  415f1d:	fisttp QWORD PTR [ebp+0x190a87d2]
  415f23:	jnp    0xeb7ff2be
  415f29:	mov    esp,0xa90bdaf3
  415f2e:	setnp  BYTE PTR [eax+0x6e]
  415f32:	cmc    
  415f33:	sub    al,0x2e
  415f35:	les    ebx,FWORD PTR [eax+ebx*2-0x1e]
  415f39:	ds (bad) 
  415f3c:	mov    dl,0x2b
  415f3e:	cmp    BYTE PTR [ebx-0x44c0c819],dl
  415f44:	pop    ecx
  415f45:	daa    
  415f46:	out    dx,al
  415f47:	xor    eax,0x7ef97d78
  415f4c:	enter  0x14a5,0xbd
  415f50:	fidivr DWORD PTR [ebp+0x7]
  415f53:	(bad)  
  415f54:	jbe    0x415f10
  415f56:	lds    esp,FWORD PTR [edi]
  415f58:	ret    
  415f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5a:	pop    edi
  415f5b:	adc    dh,al
  415f5d:	imul   BYTE PTR [ecx+ebx*8+0x4e]
  415f61:	(bad)  
  415f62:	fwait
  415f63:	pushf  
  415f64:	xchg   BYTE PTR [ebx-0x21],bh
  415f67:	sbb    cl,al
  415f69:	xchg   DWORD PTR [edi],esi
  415f6b:	cmp    al,0x97
  415f6d:	int3   
  415f6e:	sti    
  415f6f:	xchg   edx,eax
  415f70:	jne    0x415f5f
  415f72:	in     al,dx
  415f73:	(bad)  
  415f74:	ror    BYTE PTR [edx],0x83
  415f77:	pop    ds
  415f78:	jb     0x415f2f
  415f7a:	pop    ebx
  415f7b:	dec    ebx
  415f7c:	adc    eax,0xa2a9721e
  415f81:	pop    esi
  415f82:	fwait
  415f83:	push   esi
  415f84:	jg     0x415f97
  415f86:	rcr    DWORD PTR [esi-0x793e4813],0x72
  415f8d:	int3   
  415f8e:	mov    cl,0xaf
  415f90:	lods   al,BYTE PTR ds:[esi]
  415f91:	push   edx
  415f92:	xchg   ecx,eax
  415f93:	xchg   ecx,eax
  415f94:	lods   al,BYTE PTR ds:[esi]
  415f95:	cld    
  415f96:	(bad)  
  415f97:	(bad)  
  415f98:	std    
  415f99:	int    0x6d
  415f9b:	sar    BYTE PTR ds:0xcdd6a931,cl
  415fa1:	fucomi st,st(3)
  415fa3:	sbb    al,0xcf
  415fa5:	pushf  
  415fa6:	aas    
  415fa7:	sbb    ecx,edx
  415fa9:	popf   
  415faa:	mov    BYTE PTR [ebx+0x2605b1b2],al
  415fb0:	ret    0xd6b0
  415fb3:	adc    edi,0x53286eba
  415fb9:	inc    esp
  415fba:	or     DWORD PTR ds:[esi-0x3af2d22d],edx
  415fc1:	std    
  415fc2:	repz fistp WORD PTR ds:0x28a3a0c5
  415fca:	call   0x3f69d787
  415fcf:	sub    edi,DWORD PTR [eax-0x25]
  415fd2:	xor    ah,BYTE PTR [eax+0x5fd0452]
  415fd8:	ja     0x41602d
  415fda:	or     BYTE PTR [eax],al
  415fdc:	push   ss
  415fdd:	je     0x416039
  415fdf:	in     eax,dx
  415fe0:	fcomp  DWORD PTR ds:[ebx-0x77af4101]
  415fe7:	(bad)  
  415fe8:	or     esp,edi
  415fea:	ins    DWORD PTR es:[edi],dx
  415feb:	outs   dx,DWORD PTR ds:[esi]
  415fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fed:	pop    esp
  415fee:	lods   eax,DWORD PTR ds:[esi]
  415fef:	stc    
  415ff0:	lods   eax,DWORD PTR ds:[esi]
  415ff1:	add    eax,0xffba0e0
  415ff6:	cs (bad) 
  415ff8:	lods   eax,DWORD PTR ds:[esi]
  415ff9:	leave  
  415ffa:	mov    al,0xf3
  415ffc:	jbe    0x415fd3
  415ffe:	mov    edx,0xc47261d
  416003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416004:	mov    ebp,ebp
  416006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416007:	add    cl,BYTE PTR [edx-0x5bb550]
  41600d:	popf   
  41600e:	sub    BYTE PTR [ecx-0x5e91125c],bl
  416014:	gs scas eax,DWORD PTR es:[edi]
  416016:	mov    edi,0x7ef90de4
  41601b:	sahf   
  41601c:	mov    ds:0x3ace77f2,al
  416021:	jmp    0xdbef:0x84239424
  416028:	mov    edx,0x7c221b4d
  41602d:	icebp  
  41602e:	daa    
  41602f:	into   
  416030:	mov    ebp,0x90a9e64f
  416035:	pop    ecx
  416036:	ret    
  416037:	mov    edx,0x97856f30
  41603c:	jb     0x416038
  41603e:	push   esp
  41603f:	lea    edx,[eax-0x10a63af9]
  416045:	loope  0x416089
  416047:	inc    esp
  416048:	mov    ebx,DWORD PTR [esi+0x70961827]
  41604e:	inc    edi
  41604f:	scas   al,BYTE PTR es:[edi]
  416050:	xor    ebx,DWORD PTR [ecx]
  416052:	push   ecx
  416053:	ret    
  416054:	test   DWORD PTR [edx],eax
  416056:	add    DWORD PTR [ebp-0x5f],ebp
  416059:	in     eax,0x2c
  41605b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41605c:	mov    gs,WORD PTR [eax]
  41605e:	lods   al,BYTE PTR ds:[esi]
  41605f:	xchg   edi,eax
  416060:	sbb    dl,BYTE PTR [edx-0x551db598]
  416066:	sahf   
  416067:	fcom   DWORD PTR [ecx-0x37]
  41606a:	ret    
  41606b:	sub    DWORD PTR [esi],0xd686fd3a
  416071:	(bad)  
  416072:	es jno 0x415ff9
  416075:	mov    dh,0x32
  416077:	mov    ah,BYTE PTR [ebp+0x47901a0c]
  41607d:	mul    DWORD PTR [esi+0x67]
  416080:	push   ss
  416081:	fstp   DWORD PTR [esi]
  416083:	jno    0x41606a
  416085:	call   0x4ed86849
  41608a:	mov    ds:0xb52d9b09,al
  41608f:	or     esp,ebx
  416091:	aas    
  416092:	cmp    ch,BYTE PTR [ebp-0x19]
  416095:	data16 xor BYTE PTR [edx-0x50],bh
  416099:	add    BYTE PTR [edx+esi*4],cl
  41609c:	push   cs
  41609d:	pusha  
  41609e:	xor    dh,ah
  4160a0:	stos   DWORD PTR es:[edi],eax
  4160a1:	sbb    esp,DWORD PTR ds:0x1b7a00f2
  4160a7:	adc    ecx,DWORD PTR [esi+0x76]
  4160aa:	hlt    
  4160ab:	fiadd  DWORD PTR [edi-0x8c0b920]
  4160b1:	fisubr WORD PTR [ecx+ebp*2-0x692c3360]
  4160b8:	mov    al,0x1e
  4160ba:	push   ebp
  4160bb:	call   0xbe00:0x6e693966
  4160c2:	push   ebp
  4160c3:	xor    BYTE PTR [edx],dl
  4160c5:	leave  
  4160c6:	mov    bl,0x3a
  4160c8:	rcl    DWORD PTR [ebp+0x72],0x73
  4160cc:	or     eax,0x8094f234
  4160d1:	or     BYTE PTR [ebx-0xb],dl
  4160d4:	push   esp
  4160d5:	xchg   ebp,eax
  4160d6:	inc    edx
  4160d7:	retf   
  4160d8:	pop    edi
  4160d9:	jmp    0x41607d
  4160db:	mov    al,ds:0xd2df4fa0
  4160e0:	jno    0x4160d3
  4160e2:	addr16 out 0x1d,eax
  4160e5:	add    al,0xaa
  4160e7:	in     eax,0xec
  4160e9:	stos   DWORD PTR es:[edi],eax
  4160ea:	in     eax,0xdb
  4160ec:	ins    DWORD PTR es:[edi],dx
  4160ed:	(bad)  
  4160ee:	pop    esi
  4160ef:	inc    esi
  4160f0:	out    0x1f,eax
  4160f2:	loop   0x416169
  4160f4:	inc    esi
  4160f5:	sbb    DWORD PTR [esi-0x52],eax
  4160f8:	pop    esp
  4160f9:	xchg   edi,eax
  4160fa:	test   eax,0x47bb26ae
  4160ff:	test   BYTE PTR [ecx+0x54],ch
  416102:	or     eax,0xdd60b611
  416107:	outs   dx,DWORD PTR ds:[esi]
  416108:	mov    ebx,0xce7e5ac9
  41610d:	mov    ebp,0xbe58e1d0
  416112:	mov    ds:0xe042dd14,al
  416117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416118:	repz in eax,0xb2
  41611b:	loop   0x4160be
  41611d:	repz sbb eax,0x79b595c1
  416123:	fst    DWORD PTR [ebp+ecx*4+0xd1aa60f]
  41612a:	daa    
  41612b:	ja     0x416169
  41612d:	jmp    0x4160ef
  41612f:	lds    edx,FWORD PTR [ebx+0x192de2a2]
  416135:	mov    ch,0xe3
  416137:	ud1    esi,esp
  41613a:	or     bl,BYTE PTR [ebx+0x6a]
  41613d:	cmc    
  41613e:	(bad)  [edi+0x397df041]
  416144:	pop    edx
  416145:	mov    ss,WORD PTR [ebx-0x77]
  416148:	mov    esi,0x7db33a0b
  41614d:	jmp    0xc14c5ac5
  416152:	sbb    eax,0x6cb15d76
  416157:	xchg   ecx,eax
  416158:	mov    eax,ds:0x30eb86ba
  41615d:	std    
  41615e:	pop    edi
  41615f:	push   ebx
  416160:	dec    esp
  416161:	cmp    esi,edi
  416163:	mov    ebx,0x29da8dc2
  416168:	adc    DWORD PTR [edx+0x600605c1],edi
  41616e:	add    eax,0x3265ce70
  416173:	pop    edx
  416174:	mov    al,0x78
  416176:	mov    esi,0x3490080b
  41617b:	pop    esi
  41617c:	(bad)  
  41617d:	push   edi
  41617e:	jo     0x416105
  416180:	add    DWORD PTR [edi-0x2e12be0c],esi
  416186:	lock xor DWORD PTR [esi],esi
  416189:	inc    esp
  41618a:	rcl    DWORD PTR [ecx+0x15b4663f],0xa1
  416191:	adc    DWORD PTR [edx-0x4dff2ed0],edi
  416197:	shl    BYTE PTR [edx],cl
  416199:	mov    ecx,0xe0b30ef0
  41619e:	adc    BYTE PTR [ebx-0x1b],dh
  4161a1:	mov    ch,BYTE PTR [edx]
  4161a3:	pushf  
  4161a4:	adc    edi,DWORD PTR [esi]
  4161a6:	out    0xf7,eax
  4161a8:	gs sbb cl,al
  4161ab:	and    al,0x8a
  4161ad:	xchg   DWORD PTR [edi],edx
  4161af:	adc    esi,DWORD PTR [ecx+0x6a946b9b]
  4161b5:	adc    BYTE PTR [esi-0x6700f7e],0x3b
  4161bc:	and    BYTE PTR [edi],ch
  4161be:	dec    ebx
  4161bf:	int3   
  4161c0:	in     eax,dx
  4161c1:	idiv   eax
  4161c3:	dec    ebp
  4161c4:	pop    edi
  4161c5:	mov    al,ds:0xfc1d3947
  4161ca:	rcl    BYTE PTR [edx],cl
  4161cc:	adc    eax,0x6603db59
  4161d1:	xor    eax,0xa569f33b
  4161d6:	loopne 0x4161e4
  4161d8:	mov    ds:0xe2d570b4,eax
  4161dd:	clc    
  4161de:	(bad)  
  4161df:	dec    ebp
  4161e0:	in     al,0x3b
  4161e2:	jo     0x41624d
  4161e4:	push   ebx
  4161e5:	call   0x94a63231
  4161ea:	sub    eax,0x489f65b2
  4161ef:	std    
  4161f0:	xor    al,0xf4
  4161f2:	mov    cl,BYTE PTR [ebx-0x78578023]
  4161f8:	and    edx,DWORD PTR [ebx]
  4161fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fb:	call   0x3a42:0xca5a278
  416202:	xchg   ebp,eax
  416203:	mov    dl,0x83
  416205:	jnp    0x416268
  416207:	mov    dl,0x6a
  416209:	fwait
  41620a:	pop    ecx
  41620b:	add    eax,0x27cfe1fd
  416210:	retf   
  416211:	mov    ch,0x2a
  416213:	jb     0x416291
  416215:	repnz cmp BYTE PTR [eax-0x219deda4],dh
  41621c:	cli    
  41621d:	stc    
  41621e:	sub    BYTE PTR [ebp+0x4e9225f6],0x68
  416225:	and    eax,0x4388ae0c
  41622a:	cmp    BYTE PTR [ebx+0x7b],dh
  41622d:	stc    
  41622e:	adc    al,0x5c
  416230:	jmp    0x2bd1df3d
  416235:	imul   BYTE PTR [edx*4-0x752f0f]
  41623c:	(bad)  
  41623d:	mov    ecx,0xb69aeaa8
  416242:	xor    DWORD PTR [ebx],0xffffffd7
  416245:	ss or  al,0x21
  416248:	retf   
  416249:	cmp    bh,BYTE PTR [eax-0x1f]
  41624c:	adc    BYTE PTR [eax-0x1e],dl
  41624f:	pinsrw mm4,WORD PTR ss:[edx+0x73654f6c],0x9c
  416258:	lods   al,BYTE PTR ds:[esi]
  416259:	sub    BYTE PTR ds:0x4498b8dd,dh
  41625f:	xor    DWORD PTR [edx-0xe],edi
  416262:	adc    BYTE PTR [esi-0x68bb18ef],ah
  416268:	sub    al,0x1f
  41626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41626b:	fcom   DWORD PTR [edi-0x587cd6c0]
  416271:	jbe    0x41627c
  416273:	mov    eax,esi
  416275:	mov    ebp,0xf4784f45
  41627a:	mov    ah,0xa5
  41627c:	lock cwde 
  41627e:	call   0x8efaf429
  416283:	repnz ins BYTE PTR es:[edi],dx
  416285:	ins    DWORD PTR es:[edi],dx
  416286:	cdq    
  416287:	not    bh
  416289:	jnp    0x416251
  41628b:	pop    edi
  41628c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628d:	lea    eax,[eax+0x52]
  416290:	scas   eax,DWORD PTR es:[edi]
  416291:	rcl    DWORD PTR [esi+0x5],1
  416294:	shl    BYTE PTR [esi+0x72],cl
  416297:	xor    ecx,ebx
  416299:	int3   
  41629a:	sbb    eax,0x1514ddbb
  41629f:	fild   DWORD PTR [ebp+0x5c]
  4162a2:	push   esp
  4162a3:	dec    ecx
  4162a4:	mov    ecx,0x5322e0c4
  4162a9:	cmp    DWORD PTR [ebp+eax*1-0x4341e530],0xc7673e74
  4162b4:	push   cs
  4162b5:	outs   dx,BYTE PTR ds:[esi]
  4162b6:	popa   
  4162b7:	sub    DWORD PTR [edi],ecx
  4162b9:	lea    esi,[edx+ebx*1]
  4162bc:	lock xchg ebx,eax
  4162be:	fst    DWORD PTR [edx+ebp*2-0x212aa217]
  4162c5:	test   BYTE PTR ds:0x42922dfd,cl
  4162cb:	jecxz  0x416288
  4162cd:	test   DWORD PTR [esp+eiz*2+0x46],0x672846b0
  4162d5:	outs   dx,DWORD PTR ds:[esi]
  4162d6:	push   ss
  4162d7:	push   esi
  4162d8:	fldenv [edx]
  4162da:	in     eax,dx
  4162db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162dc:	in     eax,0x7c
  4162de:	loopne 0x4162b5
  4162e0:	jbe    0x4162a3
  4162e2:	fcomi  st,st(0)
  4162e4:	mov    ah,0x58
  4162e6:	stos   BYTE PTR es:[edi],al
  4162e7:	adc    BYTE PTR [esi+0x26],dh
  4162ea:	mov    esi,0xfd3bd73f
  4162ef:	and    eax,0xc54adb39
  4162f4:	jle    0x416348
  4162f6:	jb     0x4162f6
  4162f8:	mov    bh,0xc3
  4162fa:	dec    edi
  4162fb:	sub    eax,0x3fde4c82
  416300:	sbb    eax,0x55bb5ef5
  416305:	inc    eax
  416306:	rol    BYTE PTR [ecx+0x37930288],1
  41630c:	cld    
  41630d:	int3   
  41630e:	push   0x1b69ff58
  416313:	dec    edx
  416314:	jo     0x41630f
  416316:	push   ecx
  416317:	pop    ss
  416318:	pop    ds
  416319:	xor    ecx,eax
  41631b:	inc    edx
  41631c:	les    edi,FWORD PTR [eax]
  41631e:	mov    dh,0xea
  416320:	es jle 0x416377
  416323:	pop    ebx
  416324:	shl    BYTE PTR [ecx],0x4
  416327:	inc    ecx
  416328:	mov    esp,0x18e5abad
  41632d:	cdq    
  41632e:	sbb    ebx,DWORD PTR [ebx+0x31c6a0f3]
  416334:	sub    ah,al
  416336:	retf   0x4b3a
  416339:	sbb    eax,0x609f1d31
  41633e:	add    DWORD PTR [edi],eax
  416340:	push   ss
  416341:	jmp    0x4163a2
  416343:	xchg   edx,eax
  416344:	cli    
  416345:	scas   eax,DWORD PTR es:[edi]
  416346:	fild   DWORD PTR [ebx+0x7b]
  416349:	jno    0x416386
  41634b:	mov    eax,0x29675892
  416350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416351:	aas    
  416352:	test   al,0x5
  416354:	call   0x136d944a
  416359:	stos   DWORD PTR es:[edi],eax
  41635a:	inc    esi
  41635b:	lea    eax,[ecx-0x7f0ed9bc]
  416361:	inc    esi
  416362:	mov    edi,0xa1f8bed6
  416367:	rol    ch,1
  416369:	(bad)  
  41636a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41636b:	adc    al,0x21
  41636d:	sbb    al,0x63
  41636f:	pop    ebx
  416370:	call   0x1d87:0xb79f5c03
  416377:	pop    esi
  416378:	jecxz  0x416350
  41637a:	dec    edx
  41637b:	fcmovne st,st(6)
  41637d:	adc    BYTE PTR [ebp+ebp*1+0x70],0x36
  416382:	xchg   esi,eax
  416383:	push   edi
  416384:	aad    0x3f
  416386:	and    BYTE PTR [esi],0xb6
  416389:	shr    DWORD PTR [edi],1
  41638b:	out    0xe2,al
  41638d:	test   DWORD PTR [eax+0x78],0xfaa99ba8
  416394:	and    DWORD PTR [eax-0x5c015a0],esp
  41639a:	mov    eax,0x6dccb246
  41639f:	cmp    cl,0x7a
  4163a2:	ret    
  4163a3:	xchg   BYTE PTR [ebx],ch
  4163a5:	ss push ss
  4163a7:	mov    esp,0xd28e4a5b
  4163ac:	ins    DWORD PTR es:[edi],dx
  4163ad:	mov    ebx,DWORD PTR [esi+esi*8+0x68]
  4163b1:	sub    BYTE PTR [ebx],ch
  4163b3:	fld    DWORD PTR [edi+0x27b216e5]
  4163b9:	arpl   WORD PTR [esp+ecx*4-0x40ec1176],bp
  4163c0:	loop   0x416361
  4163c2:	jno    0x416358
  4163c4:	cmp    cl,BYTE PTR [esi+0x51]
  4163c7:	in     al,0xae
  4163c9:	loope  0x41639b
  4163cb:	and    al,0x67
  4163cd:	scas   al,BYTE PTR es:[edi]
  4163ce:	add    eax,ebx
  4163d0:	mov    ds:0x2d09615a,eax
  4163d5:	cmp    DWORD PTR [edx-0x30],ebp
  4163d8:	xor    BYTE PTR [ebp-0x77f3ab29],ch
  4163de:	test   eax,0xfac56405
  4163e3:	es pop esp
  4163e5:	jno    0x416435
  4163e7:	mov    DWORD PTR [edi-0x3e],eax
  4163ea:	ja     0x41637e
  4163ec:	call   0x3ee8:0x76b14fc4
  4163f3:	xchg   edx,eax
  4163f4:	or     bl,cl
  4163f6:	rcr    ebp,1
  4163f8:	repz scas eax,DWORD PTR es:[edi]
  4163fa:	dec    ebp
  4163fb:	dec    eax
  4163fc:	adc    ah,dl
  4163fe:	ss int3 
  416400:	pop    DWORD PTR ds:0xf858fe02
  416406:	or     DWORD PTR [edi-0x73],edx
  416409:	or     BYTE PTR [esi],bl
  41640b:	inc    ebx
  41640c:	out    0xc,eax
  41640e:	pop    ds
  41640f:	mov    bh,0xc5
  416411:	dec    BYTE PTR [edx-0x20]
  416414:	xchg   DWORD PTR [edi+0x4d9266c9],esi
  41641a:	xchg   DWORD PTR [ecx],eax
  41641c:	push   ss
  41641d:	aam    0xff
  41641f:	pop    eax
  416420:	fwait
  416421:	shr    BYTE PTR [ebp+0x1869c322],cl
  416427:	dec    edx
  416428:	jo     0x4164a4
  41642a:	in     eax,0x8d
  41642c:	xchg   DWORD PTR [esi+edi*2+0x62],ebp
  416430:	std    
  416431:	(bad)  
  416432:	pop    ecx
  416433:	les    eax,FWORD PTR [edi-0x24]
  416436:	dec    ebx
  416437:	call   0xab59:0xbaa1c5b4
  41643e:	adc    esp,DWORD PTR [edx-0x2ad416d4]
  416444:	xor    eax,0xad2394aa
  416449:	mov    eax,0xa2b70273
  41644e:	add    eax,0x9fd9dbf2
  416453:	(bad)  
  416454:	frstor [edx]
  416456:	cmp    al,0xd8
  416458:	push   0xc0424c84
  41645d:	mov    ds:0x53c7a4a8,al
  416462:	fstp   TBYTE PTR [ebx+eax*8]
  416465:	mov    DWORD PTR [esi+edx*1],0x1a330eb1
  41646c:	pop    edi
  41646d:	mov    ds:0x38c7e94f,al
  416472:	or     esi,DWORD PTR [eax-0x56ae7c4c]
  416478:	data16 xlat BYTE PTR ds:[ebx]
  41647a:	mov    edx,0x47bc070
  41647f:	inc    ebx
  416480:	dec    edx
  416481:	out    dx,al
  416482:	lahf   
  416483:	test   DWORD PTR [esp+ebx*2-0x3b720df2],esp
  41648a:	stos   BYTE PTR es:[edi],al
  41648b:	int3   
  41648c:	cmp    ch,dh
  41648e:	out    0x4,al
  416490:	and    al,0xbb
  416492:	cwde   
  416493:	stos   DWORD PTR es:[edi],eax
  416494:	retf   0xe87c
  416497:	add    al,0xad
  416499:	jo     0x416421
  41649b:	adc    BYTE PTR [ebp-0x25],dl
  41649e:	fistp  WORD PTR [eax]
  4164a0:	int3   
  4164a1:	jl     0x4164a0
  4164a3:	retf   
  4164a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a5:	jb     0x416444
  4164a7:	sahf   
  4164a8:	mov    edi,0xe107ec27
  4164ad:	jo     0x416458
  4164af:	call   0x62024fe3
  4164b4:	retf   
  4164b5:	dec    ebx
  4164b6:	cmp    eax,0xcdbe125c
  4164bb:	das    
  4164bc:	shr    DWORD PTR [ebp+0x6c],0x5a
  4164c0:	hlt    
  4164c1:	add    DWORD PTR [ebx+0x23],ebx
  4164c4:	adc    al,0xcd
  4164c6:	int    0x17
  4164c8:	mov    bl,0x7a
  4164ca:	pop    ss
  4164cb:	pop    DWORD PTR [eax+eiz*4]
  4164ce:	mov    WORD PTR [eax*2-0x26660b50],ds
  4164d5:	repnz les ecx,FWORD PTR [edx-0xe]
  4164d9:	mov    bl,0x52
  4164db:	aaa    
  4164dc:	jle    0x4164cd
  4164de:	dec    eax
  4164df:	jmp    0xa5f6:0x96d0546e
  4164e6:	fcomp  st(0)
  4164e8:	dec    ebx
  4164e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164eb:	cs push ss
  4164ed:	fistp  WORD PTR [ecx+eax*4-0x56410b94]
  4164f4:	in     eax,0xd0
  4164f6:	dec    eax
  4164f7:	jb     0x416516
  4164f9:	xlat   BYTE PTR ds:[ebx]
  4164fa:	in     al,0x60
  4164fc:	outs   dx,BYTE PTR ds:[esi]
  4164fd:	jb     0x41657a
  4164ff:	shr    DWORD PTR [edi-0x38],0x2e
  416503:	xor    eax,0xdbe6946d
  416508:	mov    dl,0x83
  41650a:	mov    WORD PTR [edi-0x73],fs
  41650d:	outs   dx,BYTE PTR ds:[esi]
  41650e:	js     0x4164d9
  416510:	fwait
  416511:	in     eax,0x29
  416513:	sbb    al,0x37
  416515:	dec    esp
  416516:	jecxz  0x41649d
  416518:	inc    ecx
  416519:	jle    0x41653e
  41651b:	and    DWORD PTR [ecx+esi*1],ebx
  41651e:	test   dh,0x26
  416521:	idiv   al
  416523:	jmp    0x9d0b:0x29c6f3e2
  41652a:	push   ss
  41652b:	mov    eax,0x83bd9552
  416530:	sub    dh,BYTE PTR [eax+0x7ad5a441]
  416536:	push   0x4581753f
  41653b:	cmp    BYTE PTR [eax+0x10],al
  41653e:	lods   al,BYTE PTR ds:[esi]
  41653f:	fadd   DWORD PTR [edx-0x1d3d9bac]
  416545:	fbstp  TBYTE PTR [esi+0x40ad9ae9]
  41654b:	mov    bh,0xa6
  41654d:	xchg   edx,eax
  41654e:	js     0x4164d7
  416550:	xchg   edx,eax
  416551:	bound  edi,QWORD PTR [ebp+esi*4-0x46]
  416555:	or     BYTE PTR [esi+0x30],ch
  416558:	inc    esi
  416559:	pop    eax
  41655a:	xchg   ecx,eax
  41655b:	and    DWORD PTR gs:[ebx+0x2c],esi
  41655f:	add    al,0xb8
  416561:	adc    eax,0xa9cf914d
  416566:	arpl   WORD PTR [eax-0x679a29c3],dx
  41656c:	daa    
  41656d:	sbb    ebp,ebx
  41656f:	add    DWORD PTR [ebp+0x56],ebx
  416572:	(bad)  
  416573:	dec    esi
  416574:	xchg   ebx,eax
  416575:	xor    al,0xb
  416577:	jmp    0x416548
  416579:	test   al,0x47
  41657b:	pop    edx
  41657c:	push   esi
  41657d:	in     al,0xf8
  41657f:	and    esi,DWORD PTR [ebx+ecx*8+0x7a8666ea]
  416586:	out    0xc,eax
  416588:	test   al,0xde
  41658a:	mov    BYTE PTR [ecx],dh
  41658c:	cld    
  41658d:	or     DWORD PTR [ecx-0x4],edx
  416590:	cmc    
  416591:	or     DWORD PTR [esi],edx
  416593:	aad    0x4b
  416595:	(bad)  
  416596:	les    edx,FWORD PTR [ecx+0x5c]
  416599:	ins    BYTE PTR es:[edi],dx
  41659a:	dec    ebp
  41659b:	neg    BYTE PTR [ebx]
  41659d:	aam    0xa1
  41659f:	push   0x45bf2ec3
  4165a4:	enter  0x65d6,0x4d
  4165a8:	hlt    
  4165a9:	jnp    0x4165a2
  4165ab:	lahf   
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	ret    
  4165ae:	and    al,0x54
  4165b0:	xchg   ebx,eax
  4165b1:	clc    
  4165b2:	xor    al,0xf1
  4165b4:	cmp    DWORD PTR [ebp+0xc],esp
  4165b7:	jl     0x416614
  4165b9:	neg    BYTE PTR [edi+0x65318927]
  4165bf:	sbb    DWORD PTR [edi+edi*2+0x2da56386],esi
  4165c6:	add    ch,BYTE PTR [edx-0x5ff723e4]
  4165cc:	jb     0x4165c0
  4165ce:	pop    es
  4165cf:	pop    ds
  4165d0:	leave  
  4165d1:	lock ror DWORD PTR [ebx+0x18],cl
  4165d5:	xor    ebp,DWORD PTR [esi]
  4165d7:	add    eax,DWORD PTR [eax-0x1f733b8b]
  4165dd:	push   ecx
  4165de:	ins    BYTE PTR es:[edi],dx
  4165df:	inc    ecx
  4165e0:	in     eax,0x9e
  4165e2:	loope  0x416569
  4165e4:	imul   esi,DWORD PTR [ebp-0x51],0x31
  4165e8:	cmp    edi,DWORD PTR [ebp+0x3039e4cd]
  4165ee:	and    esi,DWORD PTR [ebp+0x1a70603c]
  4165f4:	xor    DWORD PTR [ebp-0x565c64e1],ebp
  4165fa:	mov    bl,0xce
  4165fc:	push   ss
  4165fd:	fucomi st,st(0)
  4165ff:	xchg   BYTE PTR [edi],dh
  416601:	fisttp QWORD PTR [esi]
  416603:	je     0x416634
  416605:	mov    bh,0xbc
  416607:	push   0xb37c0e01
  41660c:	ss stc 
  41660e:	inc    esi
  41660f:	fistp  WORD PTR [esi-0x90ecd7f]
  416615:	pop    DWORD PTR [esi-0x73]
  416618:	adc    al,0x97
  41661a:	cmp    ecx,esp
  41661c:	mov    bl,0x5e
  41661e:	lahf   
  41661f:	test   al,0x92
  416621:	adc    eax,DWORD PTR [ecx+0x354b0412]
  416627:	stos   BYTE PTR es:[edi],al
  416628:	(bad)  
  416629:	in     eax,dx
  41662a:	add    eax,0xffb5c9ff
  41662f:	xor    DWORD PTR [ecx+0x59104aef],esp
  416635:	addr16 cdq 
  416637:	scas   eax,DWORD PTR es:[edi]
  416638:	sbb    eax,0x708f1e07
  41663d:	xchg   BYTE PTR [ebp-0x5ce195e],al
  416643:	dec    eax
  416644:	ins    BYTE PTR es:[edi],dx
  416645:	shl    BYTE PTR [bp+di+0x4c],cl
  416649:	test   DWORD PTR [edx+eax*2],ebp
  41664c:	loopne 0x416663
  41664e:	mov    BYTE PTR [eax],ah
  416650:	lahf   
  416651:	pop    ebp
  416652:	inc    ebp
  416653:	les    eax,FWORD PTR [edx-0x48]
  416656:	dec    edx
  416657:	mov    edx,eax
  416659:	inc    edi
  41665a:	cld    
  41665b:	jo     0x4166af
  41665d:	jmp    0x4166db
  41665f:	mov    ebx,0xafee37b8
  416664:	xchg   esi,eax
  416665:	aam    0xc4
  416667:	jne    0x41666c
  416669:	pushf  
  41666a:	mov    ds:0x6c16e3f2,al
  41666f:	mov    al,ds:0xc90b2cec
  416674:	push   esp
  416675:	stos   BYTE PTR es:[edi],al
  416676:	or     esp,DWORD PTR [edx-0x1a]
  416679:	sub    ecx,DWORD PTR [ebp+0x54]
  41667c:	pushf  
  41667d:	cwde   
  41667e:	test   al,0x61
  416680:	mov    bh,0x6d
  416682:	jb     0x41665c
  416684:	inc    esp
  416685:	mov    esi,0x6f622c88
  41668a:	xor    al,BYTE PTR ds:0x7fb46bbb
  416690:	mov    ch,0xb8
  416692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416693:	int    0xa1
  416695:	pop    esp
  416696:	mov    esi,0x7698923c
  41669b:	sbb    al,0xfe
  41669d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41669e:	mov    esi,0xf591d74d
  4166a3:	fist   DWORD PTR [edx-0x3163cec8]
  4166a9:	and    ecx,DWORD PTR [edi+esi*1-0x16]
  4166ad:	stos   BYTE PTR es:[edi],al
  4166ae:	mov    al,ds:0x186cb886
  4166b3:	bnd jne 0x416652
  4166b6:	adc    esi,DWORD PTR [ecx-0x7c]
  4166b9:	xchg   edi,eax
  4166ba:	cwde   
  4166bb:	int3   
  4166bc:	inc    edi
  4166bd:	mov    ds:0xd9e121bb,al
  4166c2:	fnstcw WORD PTR [edx+0x20]
  4166c5:	or     BYTE PTR [edx],ah
  4166c7:	shr    DWORD PTR [edi+0x655be031],cl
  4166cd:	loope  0x4166ce
  4166cf:	or     eax,0x1dacf7f
  4166d4:	in     eax,dx
  4166d5:	mov    ch,0x68
  4166d7:	es icebp 
  4166d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166da:	aas    
  4166db:	test   dh,ah
  4166dd:	inc    edx
  4166de:	clc    
  4166df:	mov    cl,0xa3
  4166e1:	fst    QWORD PTR [edx]
  4166e3:	in     eax,0xd8
  4166e5:	cmp    BYTE PTR [bx+0x53],al
  4166e9:	cmp    BYTE PTR [eax],0xff
  4166ec:	inc    edx
  4166ed:	(bad)  
  4166ee:	xchg   esi,eax
  4166ef:	jmp    0x209f94e4
  4166f4:	xchg   ebx,eax
  4166f5:	sbb    BYTE PTR [esi],ch
  4166f7:	cdq    
  4166f8:	bnd ss jne 0x416698
  4166fc:	xor    BYTE PTR [edx],bh
  4166fe:	addr16 (bad) 
  416700:	mov    ecx,0xe449d894
  416705:	xor    BYTE PTR [ebx-0x10],cl
  416708:	ret    
  416709:	mov    ch,0x54
  41670b:	xor    esp,eax
  41670d:	bound  eax,QWORD PTR [eax+ecx*8+0x2]
  416711:	mov    ebp,0xc55e47e4
  416716:	das    
  416717:	jmp    0xa888114e
  41671c:	enter  0x5657,0x48
  416720:	data16 add al,bl
  416723:	sbb    ebx,DWORD PTR ds:[eax+0x6c]
  416727:	push   ebp
  416728:	cmc    
  416729:	mov    edi,?
  41672b:	or     bl,al
  41672d:	cmc    
  41672e:	lods   al,BYTE PTR ds:[esi]
  41672f:	pop    ebx
  416730:	or     ebp,edi
  416732:	cld    
  416733:	fcom   DWORD PTR [eax+0x33590ed4]
  416739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673a:	mov    cs,WORD PTR [ebx+0x7d861d42]
  416740:	inc    edx
  416741:	test   BYTE PTR [ebp+0x25],ah
  416744:	xchg   edi,eax
  416745:	lea    ecx,[edx]
  416747:	pmullw mm0,mm3
  41674a:	rcr    DWORD PTR [ecx-0x24],cl
  41674d:	cmp    eax,0x8ecfbaa
  416752:	enter  0x957b,0x85
  416756:	pop    ebx
  416757:	sub    eax,0x8e6ab65b
  41675c:	call   0x4287:0xc4cbc63c
  416763:	cmp    edx,DWORD PTR [eax]
  416765:	or     eax,0xf817e7da
  41676a:	sub    al,0xa4
  41676d:	fidiv  WORD PTR [ebp+0x3515b56]
  416774:	sar    BYTE PTR ds:0x555d7204,0x63
  41677b:	fcmove st,st(5)
  41677d:	(bad)  
  41677f:	jge    0x41676c
  416781:	jmp    0xccb49722
  416786:	leave  
  416787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416788:	sub    eax,0x52ed92a
  41678d:	test   al,0xd0
  41678f:	call   0xf76545e9
  416794:	xchg   edi,eax
  416795:	pop    edx
  416796:	sub    DWORD PTR [edi+0x3a5fb8df],0x30
  41679d:	shr    dl,1
  41679f:	add    dh,cl
  4167a1:	mov    dl,0xcc
  4167a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a4:	dec    ebx
  4167a5:	and    BYTE PTR [ebp+0x43f0a14d],dl
  4167ab:	mov    ds:0xd03600c2,al
  4167b0:	jo     0x4167bb
  4167b2:	xchg   esp,eax
  4167b3:	addr16 (bad) 
  4167b5:	and    BYTE PTR [edx+0x4a8cbb6f],bl
  4167bb:	pop    ebp
  4167bc:	outs   dx,BYTE PTR ds:[esi]
  4167bd:	in     eax,dx
  4167be:	out    dx,eax
  4167bf:	les    ebx,FWORD PTR [ebx]
  4167c1:	mov    ds:0x447aac49,al
  4167c6:	pop    es
  4167c7:	sbb    edx,DWORD PTR [esi+0x268a32cc]
  4167cd:	mov    al,0xaa
  4167cf:	cwde   
  4167d0:	adc    cl,BYTE PTR [ecx]
  4167d2:	mov    dh,0x74
  4167d4:	jne    0x416761
  4167d6:	add    eax,0xbf140b93
  4167db:	das    
  4167dc:	mov    dh,0x84
  4167de:	inc    ecx
  4167df:	xor    al,0x75
  4167e1:	xor    ebx,ebp
  4167e3:	jo     0x4167f5
  4167e5:	in     eax,0xb9
  4167e7:	cmp    eax,0x3c64e8e0
  4167ec:	dec    edi
  4167ed:	es xchg edi,eax
  4167ef:	ja     0x416772
  4167f1:	ret    0x3c62
  4167f4:	mov    esi,0x2f0acd3
  4167f9:	push   es
  4167fa:	and    eax,0x74e58d93
  4167ff:	sbb    cl,BYTE PTR [ecx+eax*1+0x48cf073b]
  416806:	xchg   esp,eax
  416807:	xchg   edi,eax
  416808:	cwde   
  416809:	bound  esi,QWORD PTR [esi+0x72]
  41680c:	(bad)  
  41680d:	into   
  41680e:	push   ecx
  41680f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416810:	dec    ebx
  416811:	push   0xc3a90c
  416816:	loopne 0x41682e
  416818:	xor    al,0x72
  41681a:	adc    al,0xe
  41681c:	retf   
  41681d:	retf   
  41681e:	enter  0x1274,0x97
  416822:	(bad)  
  416825:	jp     0x41684f
  416827:	bnd js 0x416822
  41682a:	jae    0x4167ec
  41682c:	adc    al,0xc0
  41682e:	out    0x4e,al
  416830:	push   edi
  416831:	rol    DWORD PTR [esi],cl
  416833:	fisub  DWORD PTR [esi+0x19]
  416836:	call   0xeccf:0x8e98ebfc
  41683d:	rol    DWORD PTR [ebx],0xa
  416840:	fcomp  QWORD PTR [ebp+0x55]
  416843:	adc    ecx,DWORD PTR [edi-0x65]
  416846:	or     al,0x55
  416848:	iret   
  416849:	mov    bl,0x7b
  41684b:	sbb    al,0x2a
  41684d:	bound  esi,QWORD PTR gs:[ecx+ebp*1-0x58]
  416852:	xchg   ecx,eax
  416853:	adc    eax,0xc6d819b5
  416858:	jecxz  0x416866
  41685a:	imul   eax,DWORD PTR [ebx-0x1025522],0x46
  416861:	pop    esp
  416862:	sbb    al,0x4d
  416864:	sub    BYTE PTR [edx+eax*4+0x7e],0x20
  416869:	add    cl,dh
  41686b:	and    eax,DWORD PTR [edi+0x70ad8eda]
  416871:	fst    QWORD PTR [ecx]
  416873:	pusha  
  416874:	xchg   esi,eax
  416875:	add    cl,BYTE PTR [eax+0x72]
  416878:	pop    esi
  416879:	adc    ebx,esi
  41687b:	mov    esi,0x1cb8bc32
  416880:	popa   
  416881:	fst    DWORD PTR [edi-0x46f0c047]
  416887:	fadd   DWORD PTR [eax-0x230a61e]
  41688d:	push   esi
  41688e:	cli    
  41688f:	push   0x15
  416891:	cmc    
  416892:	test   eax,0xa0cfbfab
  416897:	nop
  416898:	jmp    FWORD PTR [ebp-0x3bf0247f]
  41689e:	cwde   
  41689f:	jo     0x416899
  4168a1:	lods   eax,DWORD PTR ds:[esi]
  4168a2:	push   0x31
  4168a4:	fldenv [ebp+0x1c]
  4168a7:	scas   eax,DWORD PTR es:[edi]
  4168a8:	xor    DWORD PTR [eax+0x1db311b5],edi
  4168ae:	jmp    0x41684c
  4168b0:	cmp    BYTE PTR [ebx],ah
  4168b2:	fwait
  4168b3:	es adc al,0xee
  4168b6:	lea    ebp,[eax]
  4168b8:	xchg   DWORD PTR [edx],ecx
  4168ba:	adc    ch,bl
  4168bc:	fstp   TBYTE PTR [ebp-0x3ae84b10]
  4168c2:	push   ds
  4168c3:	in     al,0xcb
  4168c5:	cmp    ch,BYTE PTR [esi+edx*8+0x41]
  4168c9:	push   edi
  4168ca:	cmc    
  4168cb:	cmp    DWORD PTR [ebp-0x75],edi
  4168ce:	add    bh,BYTE PTR [ebp-0x14eb03ad]
  4168d4:	and    al,ch
  4168d6:	and    DWORD PTR [eax],esp
  4168d8:	mov    ?,WORD PTR [ebx-0x35024f7f]
  4168de:	ror    BYTE PTR [eax+0x3cfcf735],0x72
  4168e5:	rol    DWORD PTR [eax-0x54],1
  4168e8:	push   ebx
  4168e9:	sub    DWORD PTR [edx-0x31],edx
  4168ec:	sbb    eax,0xc36cd32e
  4168f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f2:	sahf   
  4168f3:	inc    ecx
  4168f4:	sub    ecx,DWORD PTR [edi-0x492c2af0]
  4168fa:	(bad)  
  4168fb:	ja     0x4168ff
  4168fd:	pop    edx
  4168fe:	jb     0x416916
  416900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416901:	stos   BYTE PTR es:[edi],al
  416902:	scas   al,BYTE PTR es:[edi]
  416903:	retf   
  416904:	mov    WORD PTR [ebp-0x26],?
  416907:	cmp    ah,BYTE PTR [eax]
  416909:	sbb    esi,DWORD PTR [ebx+0x40]
  41690c:	je     0x4168ca
  41690e:	cwde   
  41690f:	jl     0x4168f5
  416911:	mov    al,ds:0xc50f651a
  416916:	aam    0xfa
  416918:	mov    ch,dl
  41691a:	fdiv   QWORD PTR [edi+0x76]
  41691d:	xchg   esp,eax
  41691e:	loop   0x41695a
  416920:	lahf   
  416921:	das    
  416922:	retf   0x629d
  416925:	cdq    
  416926:	xchg   esp,eax
  416927:	jae    0x4168eb
  416929:	test   cl,al
  41692b:	cmp    eax,0xa11de141
  416930:	es jns 0x41696d
  416933:	mov    ecx,0xd81d50ef
  416938:	adc    BYTE PTR [edx-0x18],bl
  41693b:	xor    eax,0x7956440d
  416940:	popf   
  416941:	mov    esi,0x3ab2aa8b
  416946:	cmp    al,0x52
  416948:	add    bh,BYTE PTR [eax+0x6439de1d]
  41694e:	mov    edx,0x5c2fb842
  416953:	sub    BYTE PTR [edx],al
  416955:	mov    esp,0x4e2d6ab
  41695a:	jbe    0x4169d6
  41695c:	inc    ebp
  41695d:	lds    ebp,FWORD PTR [esi+0x7ba2878d]
  416963:	je     0x41698a
  416965:	mov    bh,0xdb
  416967:	mov    dl,0xa1
  416969:	les    edx,FWORD PTR [esi]
  41696b:	jmp    0xc916:0x46b5d7e6
  416972:	fdiv   QWORD PTR [ecx-0x768f15fa]
  416978:	or     al,0x29
  41697a:	jae    0x416992
  41697c:	push   0x6c6e3356
  416981:	mov    dl,0xfa
  416983:	xchg   ebx,eax
  416984:	repnz mov DWORD PTR cs:[ecx-0x245cb318],0xa6dadf75
  416990:	adc    ecx,edx
  416992:	ror    ch,0x15
  416995:	sub    eax,0xa431ef81
  41699a:	rol    BYTE PTR [ebx],cl
  41699c:	sub    edi,esp
  41699e:	stos   BYTE PTR es:[edi],al
  41699f:	adc    BYTE PTR [esp+ecx*8],0x58
  4169a3:	mov    esp,gs
  4169a5:	(bad)
  4169a8:	stos   DWORD PTR es:[edi],eax
  4169a9:	aam    0xda
  4169ab:	adc    DWORD PTR [eax+0x28f4c02b],edx
  4169b1:	dec    edi
  4169b2:	test   DWORD PTR [edi+0x64],edx
  4169b5:	cli    
  4169b6:	add    dl,BYTE PTR ds:0x82418818
  4169bc:	scas   al,BYTE PTR es:[edi]
  4169bd:	jo     0x416965
  4169bf:	ret    0xce05
  4169c2:	inc    edx
  4169c3:	xchg   ebx,eax
  4169c4:	mov    eax,edi
  4169c6:	ror    BYTE PTR ds:0x4b8879f9,cl
  4169cc:	neg    DWORD PTR [edi]
  4169ce:	shl    BYTE PTR [edx],0x2f
  4169d1:	movhlps xmm5,xmm6
  4169d4:	stc    
  4169d5:	mov    ah,0x91
  4169d7:	repz not BYTE PTR [edi+edx*1-0x69]
  4169dc:	mov    cl,BYTE PTR [eax+0x3f02aa8d]
  4169e2:	dec    eax
  4169e3:	(bad)  
  4169e5:	imul   edx,DWORD PTR [esp+edx*1-0xb],0x2e
  4169ea:	fiadd  WORD PTR [esi]
  4169ec:	jl     0x416972
  4169ee:	jmp    0xa062cb11
  4169f3:	(bad)  
  4169f5:	shl    DWORD PTR [esi],1
  4169f7:	cwde   
  4169f8:	push   0xa3020c1a
  4169fd:	cs add ch,cl
  416a00:	add    al,0xb0
  416a02:	cli    
  416a03:	in     al,0x88
  416a05:	scas   eax,DWORD PTR es:[edi]
  416a06:	out    dx,eax
  416a07:	scas   al,BYTE PTR es:[edi]
  416a08:	inc    edi
  416a09:	stc    
  416a0a:	jnp    0x416a05
  416a0c:	fabs   
  416a0e:	or     DWORD PTR [ecx],edi
  416a10:	mov    bh,0xc4
  416a12:	add    al,BYTE PTR [edx]
  416a14:	mov    DWORD PTR cs:[ebx],ecx
  416a17:	fst    DWORD PTR [edx-0x7235159]
  416a1d:	xchg   DWORD PTR [edx-0x41],ebp
  416a20:	daa    
  416a21:	ret    0x557d
  416a24:	gs imul ebx,edx,0x2d
  416a28:	lods   al,BYTE PTR ds:[esi]
  416a29:	cli    
  416a2a:	test   cl,0x40
  416a2d:	out    dx,al
  416a2e:	ins    BYTE PTR es:[edi],dx
  416a2f:	xor    eax,0x19be3cc
  416a34:	stos   BYTE PTR es:[edi],al
  416a35:	(bad)  
  416a36:	cmp    al,0x9b
  416a38:	sti    
  416a39:	inc    esp
  416a3a:	in     eax,dx
  416a3b:	pop    eax
  416a3c:	push   ss
  416a3d:	repnz (bad) ds:[esi]
  416a41:	push   ebp
  416a42:	(bad)  
  416a43:	stc    
  416a44:	adc    esp,ebp
  416a46:	lods   al,BYTE PTR ds:[esi]
  416a47:	inc    edi
  416a48:	imul   ebp,edx,0x341799c8
  416a4e:	push   ebp
  416a4f:	fistp  QWORD PTR [edx]
  416a51:	les    ecx,FWORD PTR [edx]
  416a53:	xor    dh,BYTE PTR [edx+0x45]
  416a56:	fs ds inc edx
  416a59:	push   es
  416a5a:	cld    
  416a5b:	lock in eax,dx
  416a5d:	sub    ebp,0x37
  416a60:	or     eax,0xe2811c1d
  416a65:	in     eax,dx
  416a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a67:	(bad)  
  416a69:	mov    bl,0x3b
  416a6b:	adc    BYTE PTR [ecx],0xcf
  416a6e:	fimul  WORD PTR [edi]
  416a70:	fmul   QWORD PTR [ecx-0x553ae790]
  416a76:	mov    WORD PTR [eax+0x21],es
  416a79:	aad    0xc9
  416a7b:	das    
  416a7c:	aas    
  416a7d:	sub    eax,ebp
  416a7f:	mov    esp,0xee2bd448
  416a84:	cmc    
  416a85:	in     al,0x88
  416a87:	int    0x84
  416a89:	lock adc al,0x5f
  416a8c:	fld    QWORD PTR [ecx*1-0x1a3bee3b]
  416a93:	je     0x416a61
  416a95:	loopne 0x416b07
  416a97:	ins    DWORD PTR es:[edi],dx
  416a98:	dec    eax
  416a99:	adc    al,0x73
  416a9b:	cmp    eax,DWORD PTR [edx+eax*2+0x7b]
  416a9f:	and    dl,BYTE PTR ds:[esp+ecx*4]
  416aa3:	pop    esp
  416aa4:	inc    edx
  416aa5:	ror    bh,cl
  416aa7:	mov    edx,0xdf2eea28
  416aac:	xchg   esp,eax
  416aad:	add    DWORD PTR [esi],esp
  416aaf:	das    
  416ab0:	sub    DWORD PTR [esi],esi
  416ab2:	jmp    0xa65e52e6
  416ab7:	mov    al,0xfc
  416ab9:	inc    eax
  416aba:	stos   BYTE PTR es:[edi],al
  416abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416abc:	frstpm(287 only) 
  416abe:	add    BYTE PTR [esi+eax*2],al
  416ac1:	lahf   
  416ac2:	dec    eax
  416ac3:	test   ah,0xa5
  416ac6:	sbb    al,0x70
  416ac8:	mov    cl,0x8e
  416aca:	fsub   DWORD PTR [eax]
  416acc:	xchg   edi,eax
  416acd:	sahf   
  416ace:	arpl   WORD PTR [eax],dx
  416ad0:	mov    al,cs:0x3cb348f8
  416ad6:	mov    esi,0x7b523008
  416adb:	loop   0x416b3c
  416add:	pop    es
  416ade:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae0:	je     0x416a95
  416ae2:	or     DWORD PTR [edx+ebx*2+0x41],esi
  416ae6:	xchg   DWORD PTR [eax-0x4f63b45c],esi
  416aec:	or     al,0xda
  416aee:	pop    edx
  416aef:	jl     0x416b2c
  416af1:	not    DWORD PTR [esi]
  416af3:	and    DWORD PTR [eax-0x80],0x6e
  416af7:	and    eax,0x31401671
  416afc:	sbb    DWORD PTR [ebp+0x2ebe38e7],edx
  416b02:	xchg   ebp,eax
  416b03:	aaa    
  416b04:	out    0x69,eax
  416b06:	test   BYTE PTR [ecx-0x7bf4fb82],dh
  416b0c:	mov    eax,0x7e224b72
  416b11:	add    al,0xe1
  416b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b14:	mov    eax,?
  416b16:	pop    es
  416b17:	and    eax,0x710d57a7
  416b1c:	cmp    edi,DWORD PTR [ebx]
  416b1e:	fld    QWORD PTR [eax+0x62]
  416b21:	inc    edx
  416b22:	xchg   edi,eax
  416b23:	enter  0x3bec,0x68
  416b27:	std    
  416b28:	inc    eax
  416b29:	add    al,0xe6
  416b2b:	fisttp DWORD PTR [bx+si-0x723e]
  416b30:	mov    eax,?
  416b32:	data16 in al,0x94
  416b35:	push   eax
  416b36:	jle    0x416b71
  416b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b3a:	in     eax,dx
  416b3b:	push   cs
  416b3c:	pop    ds
  416b3d:	or     DWORD PTR [edx+0x62fa6a9a],0xffffff90
  416b44:	push   eax
  416b45:	ins    DWORD PTR es:[edi],dx
  416b46:	jnp    0x416ae5
  416b48:	add    eax,0x3a8cafe3
  416b4d:	mov    bh,0xee
  416b4f:	pop    ecx
  416b50:	and    BYTE PTR [ebp+0x7d1592a4],ah
  416b56:	enter  0xab68,0xad
  416b5a:	add    DWORD PTR [ebx-0x2c783a73],ebx
  416b60:	mov    al,0xef
  416b62:	ins    BYTE PTR es:[edi],dx
  416b63:	daa    
  416b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b65:	jbe    0x416be0
  416b67:	adc    bl,ch
  416b69:	inc    esi
  416b6a:	addr16 sub eax,0xbe9f265d
  416b70:	jb     0x416b27
  416b72:	jmp    0xa31f:0xa2b0f76c
  416b79:	xchg   edx,eax
  416b7a:	sub    ecx,DWORD PTR [ebp-0x66]
  416b7d:	jb     0x416bf0
  416b7f:	inc    ebp
  416b80:	or     al,0x3c
  416b82:	out    dx,al
  416b83:	std    
  416b84:	(bad)  
  416b85:	mov    ebx,0x6a045b3b
  416b8a:	or     al,BYTE PTR [ebx-0x40]
  416b8d:	inc    edx
  416b8e:	sub    edi,DWORD PTR [edx+0x3a045b76]
  416b94:	pushf  
  416b95:	mov    dl,0x6f
  416b97:	fild   WORD PTR [ecx+edi*1]
  416b9a:	(bad)  
  416b9b:	pop    eax
  416b9c:	data16 sbb BYTE PTR [ecx],0x5e
  416ba0:	in     eax,dx
  416ba1:	into   
  416ba2:	inc    edi
  416ba3:	imul   edi,DWORD PTR [ebp-0x65],0x1a5f9635
  416baa:	shr    bl,cl
  416bac:	add    bh,BYTE PTR [ecx]
  416bae:	(bad)  
  416baf:	xchg   esp,eax
  416bb0:	xchg   ebp,eax
  416bb1:	pop    eax
  416bb2:	aad    0x1b
  416bb4:	sub    cl,BYTE PTR [ebp-0x4f7d40b3]
  416bba:	ins    DWORD PTR es:[edi],dx
  416bbb:	mov    eax,ds:0xb6dedbf6
  416bc0:	(bad)  [edi+0x25]
  416bc3:	xchg   edi,eax
  416bc4:	lods   eax,DWORD PTR ds:[esi]
  416bc5:	leave  
  416bc6:	mov    edx,0xdb0dfb3d
  416bcb:	sub    eax,DWORD PTR [ebx+0x5896424]
  416bd1:	out    dx,eax
  416bd2:	jbe    0x416b5c
  416bd4:	dec    esi
  416bd5:	pushf  
  416bd6:	mov    al,0x8c
  416bd8:	mov    ecx,0xd94ff02a
  416bdd:	data16 or bh,ah
  416be0:	je     0x416be8
  416be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be3:	or     eax,0x7ffdddd5
  416be8:	call   0x718b:0xb1c149e
  416bef:	retf   0x399f
  416bf2:	cmp    ecx,ebp
  416bf4:	ins    DWORD PTR es:[edi],dx
  416bf5:	adc    dh,bh
  416bf7:	pop    edi
  416bf8:	push   ds
  416bf9:	add    edi,DWORD PTR [eax-0x1]
  416bfc:	sub    bh,BYTE PTR [ebp+0x71]
  416bff:	dec    esp
  416c00:	cmp    ecx,DWORD PTR [esi+0x55a70083]
  416c06:	popf   
  416c07:	pop    edx
  416c08:	xchg   ebx,eax
  416c09:	lods   eax,DWORD PTR ds:[esi]
  416c0a:	rcr    DWORD PTR [ecx+ebx*4],cl
  416c0d:	lods   al,BYTE PTR ds:[esi]
  416c0e:	sub    DWORD PTR [esi],0xffffff9f
  416c11:	(bad)  
  416c12:	xor    edx,ecx
  416c14:	jmp    0x98dbe5ce
  416c19:	xchg   esi,eax
  416c1a:	test   BYTE PTR [edi],dl
  416c1c:	ins    DWORD PTR es:[edi],dx
  416c1d:	cli    
  416c1e:	aaa    
  416c1f:	jmp    0xf62f669e
  416c24:	leave  
  416c25:	in     eax,0xa5
  416c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c28:	inc    esp
  416c29:	xchg   ebx,eax
  416c2a:	call   0x10592d95
  416c2f:	hlt    
  416c30:	adc    edx,esp
  416c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c33:	xor    al,0x96
  416c35:	pushf  
  416c36:	jno    0x416ca1
  416c38:	in     eax,0x27
  416c3a:	repz sub ebx,eax
  416c3d:	mov    dh,0xc7
  416c3f:	loopne 0x416bfc
  416c41:	push   0x31
  416c43:	mov    ds:0x6f85e99c,al
  416c48:	or     eax,0xe88dda01
  416c4d:	fstp   DWORD PTR [ecx]
  416c4f:	(bad)  
  416c50:	fdivr  QWORD PTR [ebx-0x3ef90ad0]
  416c56:	loopne 0x416c99
  416c58:	in     al,0xa4
  416c5a:	xchg   edx,eax
  416c5b:	adc    al,0xdc
  416c5d:	das    
  416c5e:	cmp    al,0x1b
  416c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c62:	dec    BYTE PTR [ebx-0x4]
  416c65:	pop    ebx
  416c66:	out    dx,al
  416c67:	cli    
  416c68:	retf   
  416c69:	mov    al,0x9f
  416c6b:	inc    ebp
  416c6c:	aaa    
  416c6d:	mov    esp,0x9c084ff4
  416c72:	xchg   BYTE PTR [eax],ch
  416c74:	mov    ds:0x301da466,al
  416c79:	(bad)  
  416c7a:	mov    eax,0x218bf739
  416c7f:	jecxz  0x416c96
  416c81:	dec    BYTE PTR [ebx+0x3a]
  416c84:	xlat   BYTE PTR ds:[ebx]
  416c85:	jmp    0x416cd8
  416c87:	jae    0x416d06
  416c89:	fs (bad) 
  416c8b:	jmp    0x416ca5
  416c8d:	dec    ebx
  416c8e:	dec    ecx
  416c8f:	mov    ebp,0x2e8ef172
  416c94:	mov    BYTE PTR [ebx-0x63],ch
  416c97:	push   ss
  416c98:	hlt    
  416c99:	sub    esp,DWORD PTR [edx+0x2096a114]
  416c9f:	inc    edx
  416ca0:	loope  0x416cc8
  416ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ca3:	cmp    bl,BYTE PTR [ebx]
  416ca5:	stc    
  416ca6:	dec    ebp
  416ca7:	mov    ah,0xe6
  416ca9:	arpl   WORD PTR [edx+0x17331988],ax
  416caf:	or     al,0x68
  416cb1:	aad    0x41
  416cb3:	imul   esi,DWORD PTR [esi],0x57
  416cb6:	mov    ch,cl
  416cb8:	enter  0x8e5f,0xd
  416cbc:	ret    0x6778
  416cbf:	stos   DWORD PTR es:[edi],eax
  416cc0:	mov    cl,0x12
  416cc2:	mov    edi,DWORD PTR [edi+0x15]
  416cc5:	fdivr  DWORD PTR [edx-0x20e1abd2]
  416ccb:	loopne 0x416cdd
  416ccd:	adc    DWORD PTR [ebx+edx*4-0x70],esp
  416cd1:	cli    
  416cd2:	std    
  416cd3:	pop    ebx
  416cd4:	stos   BYTE PTR es:[edi],al
  416cd5:	cmp    DWORD PTR [esi],0x514ffe0a
  416cdb:	or     DWORD PTR [ebp-0x20],ebx
  416cde:	stos   BYTE PTR es:[edi],al
  416cdf:	stc    
  416ce0:	mov    cl,0x8
  416ce2:	dec    esp
  416ce3:	xor    al,0x9d
  416ce5:	pop    esp
  416ce6:	lods   eax,DWORD PTR ds:[esi]
  416ce7:	dec    esp
  416ce8:	jne    0x416c74
  416cea:	cdq    
  416ceb:	cmp    bh,BYTE PTR [edx]
  416ced:	pop    esp
  416cee:	mov    edi,DWORD PTR [edx+0x5b]
  416cf1:	rcl    DWORD PTR [eax+0x10],0x23
  416cf5:	out    dx,eax
  416cf6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416cf8:	mov    eax,0xc382c87
  416cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cfe:	mov    eax,ds:0xf9b0e859
  416d04:	stc    
  416d05:	xchg   edi,eax
  416d06:	add    BYTE PTR [esi],ah
  416d08:	push   ebp
  416d09:	ins    BYTE PTR es:[edi],dx
  416d0a:	jge    0x416cc0
  416d0c:	lods   al,BYTE PTR ds:[esi]
  416d0d:	fcomp  DWORD PTR [ecx+0x16042612]
  416d13:	adc    eax,0x280bdc5f
  416d18:	jbe    0x416d94
  416d1a:	pop    edx
  416d1b:	cwde   
  416d1c:	leave  
  416d1d:	clc    
  416d1e:	adc    eax,0xb442912b
  416d23:	aaa    
  416d24:	icebp  
  416d25:	pop    ss
  416d26:	inc    esi
  416d27:	push   ds
  416d28:	pushf  
  416d29:	or     BYTE PTR [ebx],ch
  416d2b:	in     eax,0x65
  416d2d:	dec    ebp
  416d2e:	fwait
  416d2f:	mov    ds:0x8a3feb54,eax
  416d34:	mov    WORD PTR [ebx+0x7e824192],?
  416d3a:	pop    esi
  416d3b:	xor    eax,0x387c62c4
  416d40:	lods   al,BYTE PTR ds:[esi]
  416d41:	adc    eax,0xbe5ace66
  416d46:	cld    
  416d47:	xor    ebx,DWORD PTR [edx-0x4e9b436c]
  416d4d:	mov    ds:0x7611de20,eax
  416d52:	sbb    BYTE PTR [eax+0x29],dh
  416d55:	ds pop ds
  416d57:	out    dx,eax
  416d58:	push   ecx
  416d59:	jp     0x416d33
  416d5b:	sbb    ebx,DWORD PTR fs:[edi]
  416d5e:	pop    ds
  416d5f:	movntps XMMWORD PTR [esi+0x2ab6857b],xmm1
  416d66:	jbe    0x416d96
  416d68:	iret   
  416d69:	push   ss
  416d6a:	xchg   esp,eax
  416d6b:	jge    0x416da6
  416d6d:	pop    ss
  416d6e:	shr    al,cl
  416d70:	lods   eax,DWORD PTR ds:[esi]
  416d71:	cmp    BYTE PTR [esp+esi*2+0x10],bl
  416d75:	dec    ebx
  416d76:	dec    ebp
  416d77:	xorps  xmm2,XMMWORD PTR [edx+0x50a85863]
  416d7e:	cmp    ebx,ecx
  416d80:	mov    ebx,0xaf03809e
  416d85:	and    al,0x50
  416d87:	push   edx
  416d88:	sahf   
  416d89:	nop
  416d8a:	dec    eax
  416d8b:	lods   al,BYTE PTR ds:[esi]
  416d8c:	fld    DWORD PTR [edi]
  416d8e:	adc    eax,0x928caa64
  416d93:	inc    edx
  416d94:	mov    esi,0xbef94fe9
  416d99:	cmp    eax,0xb52c37b1
  416d9e:	cmc    
  416d9f:	cmp    ebp,DWORD PTR [ecx-0x54921ab3]
  416da5:	adc    ch,al
  416da7:	xchg   ecx,eax
  416da8:	outs   dx,DWORD PTR ds:[esi]
  416da9:	push   ds
  416daa:	inc    edi
  416dab:	cwde   
  416dac:	xchg   ecx,ebp
  416dae:	dec    esi
  416daf:	not    dl
  416db1:	adc    esp,DWORD PTR [esi]
  416db3:	push   cs
  416db4:	jo     0x416e00
  416db6:	test   eax,0x7cdc1d5e
  416dbb:	push   edx
  416dbc:	sub    edi,ebx
  416dbe:	dec    ecx
  416dbf:	jo     0x416d53
  416dc1:	dec    ebp
  416dc2:	sub    bh,BYTE PTR [ebp+0x5f]
  416dc5:	bound  ebx,QWORD PTR [esi+0x434c4a84]
  416dcb:	xchg   edi,eax
  416dcc:	cmp    al,0xda
  416dce:	adc    al,0xbd
  416dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd1:	call   0xf207:0x7dbb58d2
  416dd8:	stos   BYTE PTR es:[edi],al
  416dd9:	pusha  
  416dda:	gs jbe 0x416e31
  416ddd:	in     eax,dx
  416dde:	scas   eax,DWORD PTR es:[edi]
  416ddf:	lds    esp,FWORD PTR [ebp+0x2a1ab910]
  416de5:	pop    es
  416de6:	mov    al,ds:0xcb0098b5
  416deb:	mov    al,0x2
  416ded:	mov    bh,0xc
  416def:	add    al,0x7f
  416df1:	ret    0x1d48
  416df4:	mov    al,ds:0xb9365387
  416df9:	jmp    0x727362b
  416dfe:	or     eax,0xa192c6ef
  416e03:	daa    
  416e04:	ja     0x416dbb
  416e06:	jmp    0xd163b23
  416e0b:	pop    ss
  416e0c:	icebp  
  416e0d:	fadd   QWORD PTR [ebx]
  416e0f:	adc    DWORD PTR [edi],0xffffffdc
  416e12:	adc    BYTE PTR [ebx-0x37],ah
  416e15:	js     0x416e92
  416e17:	or     edx,ebp
  416e19:	sub    ebp,ebx
  416e1b:	push   ds
  416e1c:	mov    dh,0xfa
  416e1e:	fcmovnbe st,st(0)
  416e20:	xor    ecx,DWORD PTR [eax]
  416e22:	jl     0x416e55
  416e24:	and    BYTE PTR [edi+0x2fe3aa19],al
  416e2a:	xor    esi,eax
  416e2c:	inc    edx
  416e2d:	aam    0x89
  416e2f:	dec    ecx
  416e30:	mov    ebx,0xf9fc58c8
  416e35:	mov    BYTE PTR [edi+0x1c],dh
  416e38:	pop    ss
  416e39:	lds    ecx,FWORD PTR [esi+0x14]
  416e3c:	(bad)  
  416e3d:	aad    0x6a
  416e3f:	adc    dh,BYTE PTR [edx+0x7f36e611]
  416e45:	fdivr  QWORD PTR cs:[edi+0x4d]
  416e49:	cmp    eax,ebp
  416e4b:	cmp    BYTE PTR [eax],al
  416e4d:	in     al,dx
  416e4e:	push   esi
  416e4f:	test   DWORD PTR [eax+0x3742b608],eax
  416e55:	cmp    eax,0x89165c60
  416e5a:	dec    edi
  416e5b:	jmp    0x416e4b
  416e5d:	jp     0x416e45
  416e5f:	add    esp,DWORD PTR [esi-0x5a456a60]
  416e65:	iret   
  416e66:	scas   eax,DWORD PTR es:[edi]
  416e67:	pushf  
  416e68:	mov    ah,BYTE PTR ds:0x2dc6ad6a
  416e6e:	mov    ebx,0xe04abed6
  416e73:	adc    al,0x60
  416e75:	test   DWORD PTR [edx],ecx
  416e77:	mov    al,ds:0x203175ba
  416e7c:	inc    esp
  416e7d:	or     DWORD PTR [edi],esi
  416e7f:	in     al,dx
  416e80:	inc    ebp
  416e81:	jo     0x416e1c
  416e83:	xor    cl,ch
  416e85:	jo     0x416e25
  416e87:	xchg   edx,eax
  416e88:	cmp    eax,0xb671640f
  416e8d:	push   ebx
  416e8e:	xor    edi,DWORD PTR [ecx*2+0x178e5b5e]
  416e95:	shr    DWORD PTR [edi+0x77],1
  416e98:	adc    al,0x44
  416e9a:	rcr    DWORD PTR [ebx],1
  416e9c:	pop    ds
  416e9d:	adc    BYTE PTR [ebx+0x444d0318],cl
  416ea3:	lods   al,BYTE PTR ds:[esi]
  416ea4:	loope  0x416e73
  416ea6:	cmp    BYTE PTR [ebp-0x14],ch
  416ea9:	outs   dx,DWORD PTR ds:[esi]
  416eaa:	mov    eax,DWORD PTR [ecx-0x1f0c41a2]
  416eb0:	ficomp WORD PTR [eax]
  416eb2:	xchg   edx,eax
  416eb3:	xor    esp,0x9b12e95e
  416eb9:	inc    ebx
  416eba:	mov    eax,0xa39bfe59
  416ebf:	ss mov edx,0xd54a48bf
  416ec5:	imul   ecx,DWORD PTR [esp+eax*4-0x25],0x357c5a92
  416ecd:	jle    0x416e68
  416ecf:	mov    edi,0x8bd8c1f2
  416ed4:	jnp    0x416ed8
  416ed6:	dec    edx
  416ed7:	sub    DWORD PTR [edx+ebp*2+0xb73a8fc],edx
  416ede:	scas   eax,DWORD PTR es:[edi]
  416edf:	mov    eax,0x9ed0962c
  416ee4:	lods   al,BYTE PTR ds:[esi]
  416ee5:	mov    edx,0x6e1b71a6
  416eeb:	mov    BYTE PTR [eax],dl
  416eed:	sub    al,0x92
  416eef:	fwait
  416ef0:	sti    
  416ef1:	call   0x3be93a59
  416ef6:	enter  0x1135,0xff
  416efa:	fwait
  416efb:	push   eax
  416efc:	les    ebx,FWORD PTR [esp+ebp*1]
  416eff:	cdq    
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	inc    esi
  416f18:	rol    ebx,0x2d
  416f1b:	xchg   ebx,eax
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x65
  416f24:	sub    bl,BYTE PTR [esi-0x21c932b5]
  416f2a:	inc    ebp
  416f2b:	inc    edx
  416f2c:	movlps QWORD PTR [edi-0x1f],xmm3
  416f30:	inc    ebx
  416f31:	arpl   WORD PTR ds:0xecc1ecb9,bp
  416f37:	das    
  416f38:	in     eax,dx
  416f39:	dec    ebp
  416f3a:	leave  
  416f3b:	adc    BYTE PTR [edx+ebp*8+0x776f92fc],0xe8
  416f43:	xchg   ecx,eax
  416f44:	scas   al,BYTE PTR es:[edi]
  416f45:	adc    eax,DWORD PTR [ebp-0x1908ac09]
  416f4b:	pop    es
  416f4c:	addr16 das 
  416f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f4f:	lods   al,BYTE PTR ds:[esi]
  416f50:	stos   DWORD PTR es:[edi],eax
  416f51:	int    0x1e
  416f53:	and    ecx,DWORD PTR [ebx+0x72]
  416f56:	leave  
  416f57:	in     eax,dx
  416f58:	cmp    al,0xd8
  416f5a:	adc    al,0x14
  416f5c:	std    
  416f5d:	arpl   WORD PTR [esi-0x3d],si
  416f60:	(bad)  
  416f61:	mov    ds:0x97909ba3,al
  416f66:	gs popf 
  416f68:	jmp    0xbe2e788e
  416f6d:	ss push es
  416f6f:	aas    
  416f70:	dec    eax
  416f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f72:	repnz in al,dx
  416f74:	shr    BYTE PTR [esi-0x5],1
  416f77:	into   
  416f78:	push   esi
  416f79:	call   0xdd21:0xe7448cc9
  416f80:	cmp    BYTE PTR [edi-0x2db920cc],ch
  416f86:	(bad)  
  416f87:	or     dh,BYTE PTR [eax]
  416f89:	rol    DWORD PTR [edx-0x23],1
  416f8c:	sub    edx,DWORD PTR [eax-0x7b8c6b02]
  416f92:	dec    ebx
  416f93:	add    DWORD PTR [ebp-0x42],ecx
  416f96:	and    DWORD PTR ds:0xeefe27eb,edi
  416f9c:	jns    0x416fb1
  416f9e:	(bad)  
  416f9f:	jecxz  0x416fb4
  416fa1:	ret    0xc637
  416fa4:	aas    
  416fa5:	and    eax,0x223ad859
  416faa:	idiv   DWORD PTR [eax+0x4c]
  416fad:	dec    edi
  416fae:	jb     0x416f4d
  416fb0:	enter  0xb30,0xb4
  416fb4:	popf   
  416fb5:	retf   0xb6c5
  416fb8:	hlt    
  416fb9:	stos   BYTE PTR es:[edi],al
  416fba:	cmp    al,0x4c
  416fbc:	inc    ecx
  416fbd:	cld    
  416fbe:	add    al,0x4c
  416fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fc1:	mul    DWORD PTR [ebp-0x7]
  416fc4:	and    al,0xe4
  416fc6:	jmp    0xf391:0xea8da128
  416fcd:	dec    ebp
  416fce:	jp     0x41702c
  416fd0:	xchg   esp,eax
  416fd1:	mov    esp,0xa1d585b7
  416fd6:	add    eax,DWORD PTR [edx]
  416fd8:	sub    BYTE PTR [edx+0x58],al
  416fdb:	xchg   edx,eax
  416fdc:	imul   ebp,DWORD PTR [eax],0xffffffcb
  416fdf:	leave  
  416fe0:	push   ds
  416fe1:	cmova  eax,DWORD PTR [ebx]
  416fe4:	sahf   
  416fe5:	and    al,0x49
  416fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe8:	or     dl,BYTE PTR [edi+0x4a]
  416feb:	sub    DWORD PTR [eax-0x29],esi
  416fee:	mov    cl,0x97
  416ff0:	jo     0x417003
  416ff2:	xchg   ebp,eax
  416ff3:	jp     0x416f89
  416ff5:	pop    es
  416ff6:	repz xor eax,0xf20f14bc
  416ffc:	popa   
  416ffd:	dec    esi
  416ffe:	cmp    al,0xb
  417000:	shl    BYTE PTR [esi+0x10],1
  417003:	jbe    0x417059
  417005:	xor    ch,0x5a
  417008:	mov    eax,0xf0787dfa
  41700d:	(bad)  
  41700e:	lods   eax,DWORD PTR ds:[esi]
  41700f:	loopne 0x417031
  417011:	xor    ah,BYTE PTR [esi]
  417013:	mov    bh,0xd
  417015:	lods   eax,DWORD PTR ds:[esi]
  417016:	imul   ecx,DWORD PTR [ebx],0x40fe8103
  41701c:	mov    ebp,0x5dd4331
  417021:	js     0x416fde
  417023:	sub    al,0x65
  417025:	cmp    eax,0xa803740f
  41702a:	daa    
  41702b:	pop    ecx
  41702c:	jge    0x417037
  41702e:	or     bh,BYTE PTR [ebx+edi*2-0x52]
  417032:	pop    es
  417033:	inc    esi
  417034:	pusha  
  417035:	rol    DWORD PTR [esi+0xf],cl
  417038:	fs mov ebx,0x7ca1afc6
  41703e:	fild   WORD PTR [ebx+ebx*8-0x1e]
  417042:	test   al,0x47
  417044:	js     0x417030
  417046:	popa   
  417047:	cdq    
  417048:	jb     0x41700e
  41704a:	ins    DWORD PTR es:[edi],dx
  41704b:	setle  BYTE PTR [esi+0x14]
  41704f:	mov    bh,0x27
  417051:	cwde   
  417052:	aam    0xbc
  417054:	xor    al,0xbb
  417056:	jg     0x417082
  417058:	mov    esi,0x4127cb09
  41705d:	imul   ebx,DWORD PTR fs:[esi+eiz*4+0x66787f21],0x5b
  417066:	add    dl,BYTE PTR [esi]
  417068:	jne    0x41709d
  41706a:	cwde   
  41706b:	jmp    0x16c:0xbe4d8913
  417072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417073:	stos   DWORD PTR es:[edi],eax
  417074:	retf   
  417075:	cmp    BYTE PTR [ecx-0x35],ah
  417078:	popa   
  417079:	out    dx,al
  41707a:	xor    DWORD PTR [ebx+0xa07b5f6],edx
  417080:	lds    eax,FWORD PTR [ebx+eax*1-0x8428e78]
  417087:	ja     0x417107
  417089:	push   ecx
  41708a:	icebp  
  41708b:	push   0xddfdf57d
  417090:	mov    dh,BYTE PTR [ecx]
  417092:	xor    ebp,DWORD PTR [ebx+edi*4+0x445d5b38]
  417099:	inc    ecx
  41709a:	cmp    ebx,DWORD PTR [ebx]
  41709c:	or     bh,ah
  41709e:	in     eax,0xde
  4170a0:	sahf   
  4170a1:	shr    DWORD PTR [ecx-0x70],1
  4170a4:	les    eax,FWORD PTR [eax-0x80]
  4170a7:	mov    bl,0xac
  4170a9:	jmp    0x41711d
  4170ab:	push   0xffffffc3
  4170ad:	sub    BYTE PTR [ebx-0x35],dh
  4170b0:	clc    
  4170b1:	and    DWORD PTR [edx-0x4ed8aa24],edx
  4170b7:	test   eax,edi
  4170b9:	in     eax,0x55
  4170bb:	arpl   di,bp
  4170bd:	inc    ebp
  4170be:	retf   0x114d
  4170c1:	cmp    ebp,DWORD PTR [ecx-0x9bc9df8]
  4170c7:	std    
  4170c8:	std    
  4170c9:	ds and eax,0x34e7c1d5
  4170cf:	ja     0x4170a4
  4170d1:	mov    ds:0x9beac8b0,ax
  4170d7:	inc    esi
  4170d8:	xor    DWORD PTR ds:0x69129e71,edx
  4170de:	pop    ss
  4170df:	test   eax,0xdef619cd
  4170e4:	push   eax
  4170e5:	les    edi,FWORD PTR [edi]
  4170e7:	adc    al,0xe
  4170e9:	pop    esi
  4170ea:	lahf   
  4170eb:	adc    cl,BYTE PTR [edx-0x379ebecf]
  4170f1:	cli    
  4170f2:	cmp    ebp,esp
  4170f4:	xchg   BYTE PTR [ecx+eiz*2+0x11a49b0d],dl
  4170fb:	(bad)
  4170fe:	or     DWORD PTR [ebp+0x4f6c0958],ebp
  417104:	daa    
  417105:	jecxz  0x4170bb
  417107:	mov    ?,esi
  417109:	or     eax,0xdff269c4
  41710e:	xor    BYTE PTR [eax-0xd],ch
  417111:	fimul  DWORD PTR [edi]
  417113:	sub    eax,0xb59f8cac
  417119:	or     eax,0xfe23ea52
  41711e:	daa    
  41711f:	jge    0x4170ba
  417121:	fstp   DWORD PTR [edx-0x32]
  417124:	sub    ah,BYTE PTR ds:0x9daaedde
  41712a:	cmp    al,0xa0
  41712c:	fnsave [edi+0x1bdd607b]
  417132:	ins    BYTE PTR es:[edi],dx
  417133:	stc    
  417134:	inc    ebx
  417135:	imul   ebp,DWORD PTR [ebp+0xa],0x99a2555e
  41713c:	pop    DWORD PTR [edx]
  41713e:	mov    bh,0xbb
  417140:	imul   esi,ebx,0x2d431015
  417146:	std    
  417147:	mov    al,ds:0x1076c527
  41714c:	sbb    BYTE PTR [ebp+ebx*4-0x3c],0xdd
  417151:	add    eax,0x34532221
  417156:	adc    esi,DWORD PTR [ebp+ebx*2-0x19]
  41715a:	cli    
  41715b:	inc    ecx
  41715c:	and    ch,BYTE PTR [esp+ecx*2+0x5e]
  417160:	ret    0x753a
  417163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417164:	std    
  417165:	mov    ds:0xc5730b63,eax
  41716a:	pop    esi
  41716b:	xlat   BYTE PTR ds:[ebx]
  41716c:	outs   dx,BYTE PTR ds:[esi]
  41716d:	adc    al,0x2e
  41716f:	mov    WORD PTR [ebp-0x27],cs
  417172:	aam    0xd1
  417174:	bound  esp,QWORD PTR [eax+0x72]
  417177:	cld    
  417178:	xchg   esp,eax
  417179:	mov    eax,0x77c83509
  41717e:	inc    ecx
  41717f:	pop    esi
  417180:	fwait
  417181:	cmp    edi,DWORD PTR [esi]
  417183:	into   
  417184:	jmp    0x417127
  417186:	jmp    0x5a75:0xb75c2ab3
  41718d:	fimul  DWORD PTR [ecx+0x1e1bf462]
  417193:	std    
  417194:	in     al,dx
  417195:	mov    eax,0x3ff63ada
  41719a:	pop    es
  41719b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41719c:	mov    DWORD PTR ds:0x281fae01,eax
  4171a2:	out    0x31,eax
  4171a4:	sub    BYTE PTR [ebx-0x1af6bb09],dh
  4171aa:	test   BYTE PTR [edi-0x5b],bh
  4171ad:	iret   
  4171ae:	inc    ecx
  4171af:	push   esi
  4171b0:	call   FWORD PTR [ebx-0x1b]
  4171b3:	xor    edx,ecx
  4171b5:	outs   dx,DWORD PTR ds:[esi]
  4171b6:	xchg   ecx,eax
  4171b7:	adc    BYTE PTR [edi-0x5b],al
  4171ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171bb:	mov    cl,BYTE PTR [eax]
  4171bd:	aad    0x59
  4171bf:	inc    ebp
  4171c0:	cmp    DWORD PTR [ebx],eax
  4171c2:	mov    cl,0x81
  4171c4:	cdq    
  4171c5:	mov    esi,0xfebef17d
  4171ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171cb:	lods   al,BYTE PTR ds:[esi]
  4171cc:	sbb    al,BYTE PTR [esi]
  4171ce:	inc    ebp
  4171cf:	les    ebx,FWORD PTR [edi]
  4171d1:	ds retf 
  4171d3:	xchg   edx,eax
  4171d4:	test   BYTE PTR ds:[ecx+edx*8],bl
  4171d8:	dec    ecx
  4171d9:	cwde   
  4171da:	ds mov ch,0x2e
  4171dd:	mov    al,0xb4
  4171df:	and    eax,0xc801da2a
  4171e4:	fbstp  TBYTE PTR [ecx-0x71]
  4171e7:	xchg   edx,eax
  4171e8:	push   cs
  4171e9:	dec    edi
  4171ea:	mov    ah,0x6d
  4171ec:	mov    al,0x3a
  4171ee:	std    
  4171ef:	enter  0x3d04,0x18
  4171f3:	shl    ah,cl
  4171f5:	sub    DWORD PTR [edx-0x2a],ebx
  4171f8:	dec    ebp
  4171f9:	jge    0x4171ae
  4171fb:	mov    bh,0x69
  4171fd:	mov    edi,0xebdeb546
  417202:	jg     0x4171cc
  417204:	or     bl,BYTE PTR ds:0xf08dd40f
  41720a:	xchg   edi,eax
  41720b:	imul   esi,DWORD PTR [ebx-0x1baa6ede],0x43888870
  417215:	mov    edi,DWORD PTR [ecx-0x20de5c99]
  41721b:	pop    ebp
  41721c:	rcl    edx,1
  41721e:	cmp    eax,0xeca3b1b7
  417223:	sahf   
  417224:	mul    WORD PTR [eax+0x8e301]
  41722b:	xor    eax,0x1bb377d4
  417230:	xchg   esp,eax
  417231:	out    dx,al
  417232:	push   0x12557db1
  417237:	mov    DWORD PTR [edi+0x2e],edi
  41723a:	das    
  41723b:	sub    DWORD PTR [ebx+0x1c638576],eax
  417241:	mov    ds:0x6dd735f2,al
  417246:	mov    BYTE PTR [ebp+0x3bc809a],dl
  41724c:	pop    es
  41724d:	or     ch,cl
  41724f:	jmp    0x23bb119d
  417254:	cmp    al,0x6a
  417256:	mov    ch,0xda
  417258:	add    eax,0x77d4f808
  41725d:	add    DWORD PTR [esi],edi
  41725f:	sbb    al,0x3a
  417261:	xchg   edi,eax
  417262:	clc    
  417263:	dec    eax
  417264:	jp     0x4171f0
  417266:	xchg   esp,eax
  417267:	bound  edi,QWORD PTR [esi+0x2b]
  41726a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41726b:	inc    ecx
  41726c:	es pushf 
  41726e:	shl    BYTE PTR [ebx+ebx*8],cl
  417271:	leave  
  417272:	das    
  417273:	in     al,0x44
  417275:	jo     0x41722b
  417277:	fucomip st,st(1)
  417279:	mov    al,0x39
  41727b:	(bad)  
  41727c:	push   ecx
  41727d:	inc    esp
  41727e:	xor    DWORD PTR [eax],esi
  417280:	xchg   esi,eax
  417281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417282:	loope  0x417210
  417284:	sub    esi,DWORD PTR [ecx-0x77]
  417287:	aas    
  417288:	mov    ds:0x1f26ecad,al
  41728d:	arpl   dx,si
  41728f:	mov    ecx,0x5138269b
  417294:	lock imul ebx,DWORD PTR [edx+0x6f7b8685],0xffffffef
  41729c:	(bad)  
  41729d:	std    
  41729e:	add    edx,DWORD PTR [eax+0x7c]
  4172a1:	jg     0x417286
  4172a3:	aam    0x8c
  4172a5:	mov    al,0xe
  4172a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a8:	sti    
  4172a9:	xor    dl,0xeb
  4172ac:	mov    dl,0x40
  4172ae:	pushf  
  4172af:	push   es
  4172b0:	call   0x8f81:0x3e09e084
  4172b7:	lods   al,BYTE PTR ds:[esi]
  4172b8:	sbb    eax,0xf3f41a83
  4172bd:	pop    es
  4172be:	dec    esi
  4172bf:	mov    eax,ds:0xbbf12e9d
  4172c4:	fadd   DWORD PTR [eax]
  4172c6:	sbb    ebp,eax
  4172c8:	(bad)  [ecx]
  4172ca:	pop    ds
  4172cb:	fnsave [ecx-0x6fd3f7cd]
  4172d1:	jmp    0x417281
  4172d3:	js     0x41731f
  4172d5:	pop    edi
  4172d6:	mov    esp,0x83e99782
  4172db:	or     eax,0xc2d4fcb4
  4172e0:	out    dx,eax
  4172e1:	stos   BYTE PTR es:[edi],al
  4172e2:	mov    bh,0xe2
  4172e4:	mov    edx,0x54a0ef92
  4172e9:	push   edx
  4172ea:	inc    ecx
  4172eb:	enter  0xd7e5,0x69
  4172ef:	pop    edi
  4172f0:	jno    0x4172d4
  4172f2:	fsubr  DWORD PTR [ebp-0x62]
  4172f5:	mov    dl,0x83
  4172f7:	outs   dx,DWORD PTR ds:[esi]
  4172f8:	mov    ch,dl
  4172fa:	sti    
  4172fb:	dec    edx
  4172fc:	push   es
  4172fd:	or     bl,dh
  4172ff:	lea    edx,[edx]
  417301:	sti    
  417302:	jnp    0x4172bb
  417304:	push   ecx
  417305:	pop    ecx
  417306:	ins    DWORD PTR es:[edi],dx
  417307:	in     eax,dx
  417308:	ds pop es
  41730a:	ret    
  41730b:	add    eax,0xb93d26f4
  417310:	ins    DWORD PTR es:[edi],dx
  417311:	push   ebp
  417312:	fnop   
  417314:	mov    bl,0x77
  417316:	or     DWORD PTR [ebx],0x16d9266d
  41731c:	stos   DWORD PTR es:[edi],eax
  41731d:	fwait
  41731e:	shl    BYTE PTR [ebp+eiz*8+0x6d],cl
  417322:	aad    0x4a
  417324:	pop    ss
  417325:	div    BYTE PTR ds:0x6d22e63f
  41732b:	test   DWORD PTR [esi-0x4cdf4153],0x5c9d4b12
  417335:	xor    DWORD PTR [edx-0x5b],0x67dca3da
  41733c:	cmp    esp,0x43
  41733f:	and    edx,esi
  417341:	sub    ah,cl
  417343:	test   DWORD PTR [esi+edi*8],edi
  417346:	xchg   DWORD PTR [ebx+eax*4-0x4740dd5f],ecx
  41734d:	lahf   
  41734e:	das    
  41734f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417350:	test   DWORD PTR [ecx-0x61],eax
  417353:	dec    ecx
  417354:	repz sbb BYTE PTR [ecx+0x3f],dl
  417358:	retf   0xab2f
  41735b:	or     ebx,DWORD PTR [ecx+0x36]
  41735e:	repz daa 
  417360:	das    
  417361:	mov    ds:0x3921f81f,eax
  417366:	adc    eax,0xe39b270f
  41736b:	(bad)  
  41736c:	sub    al,0x19
  41736e:	(bad)  
  41736f:	dec    ebp
  417370:	imul   eax,ebx,0xfa3bc2a4
  417376:	inc    edx
  417377:	inc    edx
  417378:	pop    edi
  417379:	inc    ebp
  41737a:	shl    DWORD PTR [esp+ebp*4],0xd0
  41737e:	jo     0x4173bc
  417380:	out    dx,al
  417381:	icebp  
  417382:	mov    ah,0xad
  417384:	and    dh,ch
  417386:	xor    BYTE PTR [ebp-0x7e39ba5f],al
  41738c:	(bad)  
  41738e:	mov    ds:0x18b55895,eax
  417393:	inc    esp
  417394:	push   0xc1859fef
  417399:	push   cs
  41739a:	mov    BYTE PTR [edx+esi*8],dh
  41739d:	push   esi
  41739e:	sub    ebx,DWORD PTR [edx+0x70]
  4173a1:	or     BYTE PTR [esi-0x7ac9eb58],dh
  4173a7:	fs gs shr dl,1
  4173ab:	xchg   ebp,eax
  4173ac:	and    ch,BYTE PTR [ecx-0x3f506165]
  4173b2:	mov    bh,0x29
  4173b4:	add    ch,cl
  4173b6:	cmp    al,0xf3
  4173b8:	dec    ebp
  4173b9:	xchg   DWORD PTR ds:[eax-0x200eca5f],edi
  4173c0:	jge    0x4173d7
  4173c2:	or     eax,0x4fb9dc69
  4173c7:	aad    0x82
  4173c9:	out    dx,al
  4173ca:	test   BYTE PTR [ebx],bl
  4173cc:	aam    0xd1
  4173ce:	(bad)  
  4173d0:	mov    ebx,0xbab2315b
  4173d5:	fwait
  4173d6:	add    DWORD PTR [ecx],0x10d0938f
  4173dc:	xor    bl,0xd3
  4173df:	sub    BYTE PTR [esi+ecx*4+0x17eeb316],0x27
  4173e7:	mov    ebx,0xfa10ceb4
  4173ec:	push   edx
  4173ed:	inc    ecx
  4173ee:	xchg   BYTE PTR [edx+0x5271a524],bh
  4173f4:	push   ds
  4173f5:	jbe    0x417460
  4173f7:	cmp    BYTE PTR [ebp-0x591cd127],ah
  4173fd:	mov    edx,0xdb45040d
  417402:	aaa    
  417403:	jl     0x4173d7
  417405:	xchg   esi,eax
  417406:	aad    0xf7
  417408:	lods   eax,DWORD PTR ds:[esi]
  417409:	cmp    BYTE PTR [edx],ch
  41740b:	ja     0x417442
  41740d:	xchg   edi,eax
  41740e:	or     BYTE PTR [ebx],ah
  417410:	shl    ah,1
  417412:	cwde   
  417413:	sbb    ch,bh
  417415:	ins    DWORD PTR es:[edi],dx
  417416:	jae    0x41741b
  417418:	mov    eax,ds:0x6ea2b63a
  41741d:	cli    
  41741e:	sahf   
  41741f:	lods   al,BYTE PTR ds:[esi]
  417420:	push   ebp
  417421:	ret    0xbd40
  417424:	ret    0xa6d5
  417427:	sub    DWORD PTR [ebx-0x25],ecx
  41742a:	pop    ebp
  41742b:	cld    
  41742c:	(bad)  
  41742d:	lds    ebx,FWORD PTR es:[ebx-0x63]
  417431:	iret   
  417432:	and    ah,BYTE PTR [ecx-0x21]
  417435:	fisubr DWORD PTR [esi+0x51]
  417438:	jge    0x417448
  41743a:	inc    ecx
  41743b:	dec    ebx
  41743c:	scas   eax,DWORD PTR es:[edi]
  41743d:	retf   0xd14a
  417440:	rol    BYTE PTR [edi-0x7c746797],1
  417446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417447:	(bad)  
  417448:	(bad)  
  417449:	cld    
  41744a:	xchg   ebp,eax
  41744b:	or     ah,cl
  41744d:	pop    edi
  41744e:	xor    edx,ecx
  417450:	xchg   BYTE PTR [ebp-0x1eee65d2],bl
  417456:	test   BYTE PTR [edx],ah
  417458:	pop    esp
  417459:	leave  
  41745a:	jbe    0x417492
  41745c:	mov    ah,0xe0
  41745e:	ss inc edi
  417460:	lea    edi,[edx]
  417462:	and    al,0xc9
  417464:	or     BYTE PTR [edx],ah
  417466:	xchg   BYTE PTR [ecx+eiz*1-0x11],dh
  41746a:	add    eax,0x23e33d59
  41746f:	xor    BYTE PTR [ebp+edi*2-0x5cc48bac],al
  417476:	andps  xmm3,XMMWORD PTR [ebx-0x66ff4b1a]
  41747d:	push   ecx
  41747e:	cmp    al,0x3b
  417480:	push   ss
  417481:	push   edi
  417482:	popa   
  417483:	or     eax,0x29742a83
  417488:	sbb    dh,bh
  41748a:	lds    ebx,FWORD PTR [ecx]
  41748c:	popf   
  41748d:	inc    eax
  41748e:	jae    0x417449
  417490:	std    
  417491:	push   edx
  417492:	call   0x16a5:0x64af4fb5
  417499:	inc    edi
  41749a:	jnp    0x41750e
  41749c:	fistp  QWORD PTR [ecx]
  41749e:	(bad)  
  4174a0:	(bad)  
  4174a2:	or     eax,0xc6037052
  4174a7:	inc    eax
  4174a8:	ror    BYTE PTR [esi+0x63cb0708],0x13
  4174af:	fsubr  DWORD PTR [ebx+0x6b162638]
  4174b5:	cmc    
  4174b6:	pushfw 
  4174b8:	aam    0xc0
  4174ba:	arpl   si,si
  4174bc:	jp     0x417499
  4174be:	xchg   ebp,eax
  4174bf:	scas   al,BYTE PTR es:[edi]
  4174c0:	ret    0xb285
  4174c3:	fisubr WORD PTR [ecx+0x320c4ca0]
  4174c9:	ret    
  4174ca:	sahf   
  4174cb:	sbb    al,0x38
  4174cd:	dec    edx
  4174ce:	dec    ecx
  4174cf:	sbb    bh,BYTE PTR [edi+0x2e4e034e]
  4174d5:	int    0x63
  4174d7:	or     ch,ch
  4174d9:	jl     0x41747b
  4174db:	mov    eax,DWORD PTR [edi-0x1972cb07]
  4174e1:	cld    
  4174e2:	(bad)  [eax+0x8]
  4174e5:	pop    ss
  4174e6:	cmp    eax,0x4a944721
  4174eb:	outs   dx,DWORD PTR ds:[esi]
  4174ec:	add    BYTE PTR [ecx],dh
  4174ee:	test   al,0x45
  4174f0:	inc    ebx
  4174f1:	fmul   QWORD PTR [eax+0x319f4091]
  4174f7:	stos   BYTE PTR es:[edi],al
  4174f8:	mov    al,ds:0x8c17630f
  4174fd:	sahf   
  4174fe:	ja     0x41752f
  417500:	scas   eax,DWORD PTR es:[edi]
  417501:	add    al,0x9
  417503:	daa    
  417504:	and    eax,0xafcc4f1b
  417509:	fimul  WORD PTR [ebx+0x48]
  41750c:	es or  ah,bh
  41750f:	sub    BYTE PTR [esp+esi*1+0x55f07a57],0x96
  417517:	jns    0x417506
  417519:	pop    ebx
  41751a:	sbb    cl,dl
  41751c:	pop    edi
  41751d:	mov    ah,dl
  41751f:	mov    al,0x35
  417521:	pop    edi
  417522:	push   ds
  417523:	dec    edx
  417524:	in     eax,dx
  417525:	jge    0x4174ef
  417527:	push   ebp
  417528:	ss pop ds
  41752a:	test   eax,0xd420cc9
  41752f:	cmp    edx,edi
  417531:	js     0x417568
  417533:	or     BYTE PTR [edx+0x37],ah
  417536:	stc    
  417537:	add    eax,DWORD PTR [eax-0x7b01c33]
  41753d:	cmp    DWORD PTR [edx],ebx
  41753f:	test   al,0x40
  417541:	mov    edi,DWORD PTR [ecx]
  417543:	in     eax,0x63
  417545:	loop   0x41754b
  417547:	ficom  DWORD PTR [ecx]
  417549:	adc    ah,cl
  41754b:	pop    eax
  41754c:	pop    ebx
  41754d:	in     eax,0x6b
  41754f:	gs (bad) 
  417554:	add    DWORD PTR [edx+0x38],eax
  417557:	push   ecx
  417558:	xchg   ebp,eax
  417559:	jno    0x4175c1
  41755b:	adc    dl,BYTE PTR [ebx-0x6a]
  41755e:	and    eax,0x3757e222
  417563:	sbb    BYTE PTR [edx+ebx*8],cl
  417566:	cmp    DWORD PTR [ebp+0x3b4b6af5],edi
  41756c:	dec    BYTE PTR [eax]
  41756e:	mov    dx,0x7416
  417572:	test   eax,0x93469424
  417577:	icebp  
  417578:	call   0xf6c5717
  41757d:	sbb    BYTE PTR [ebp-0x681dfe5d],0xe8
  417584:	xlat   BYTE PTR ds:[ebx]
  417585:	cmp    BYTE PTR [esi],ch
  417587:	mov    ebx,0x22534320
  41758c:	dec    ebx
  41758d:	imul   ecx,DWORD PTR [esp+ebp*1],0xffffffd7
  417591:	(bad)  
  417592:	icebp  
  417593:	cld    
  417594:	int    0xfc
  417596:	jmp    0xac9e5d09
  41759b:	sub    ecx,DWORD PTR [ecx-0x3711c236]
  4175a1:	psubb  mm2,QWORD PTR [edx]
  4175a4:	adc    DWORD PTR [ebx],eax
  4175a6:	add    cl,dl
  4175a8:	es sbb eax,0x2f0f963e
  4175ae:	in     al,dx
  4175af:	shr    DWORD PTR [ebx],1
  4175b1:	xchg   edx,eax
  4175b2:	pop    ecx
  4175b3:	jbe    0x41754c
  4175b5:	mov    eax,0x803cf56d
  4175ba:	and    DWORD PTR [edi-0x75],0x49e9b0a2
  4175c1:	push   0x3c
  4175c3:	outs   dx,BYTE PTR ds:[esi]
  4175c4:	ins    BYTE PTR es:[edi],dx
  4175c5:	iret   
  4175c6:	(bad)  
  4175c7:	nop
  4175c8:	shr    DWORD PTR [ecx+edx*2],cl
  4175cb:	jmp    0xd4fc:0xe0c55fe1
  4175d2:	xchg   edi,eax
  4175d3:	fnstcw WORD PTR [ecx-0x2f4fdd0a]
  4175d9:	mov    DWORD PTR [edi-0x2e95bc4],ebx
  4175df:	retf   0x2c9c
  4175e2:	pushf  
  4175e3:	loop   0x4175bf
  4175e5:	push   ebx
  4175e6:	cs hlt 
  4175e8:	dec    ebx
  4175e9:	in     al,0xe
  4175eb:	xchg   edi,eax
  4175ec:	lea    ebp,[edi-0x92f92d9]
  4175f2:	jle    0x417656
  4175f4:	test   al,0xdd
  4175f6:	jmp    0xbf34:0xe151f207
  4175fd:	push   0x68
  4175ff:	pop    edx
  417600:	shl    BYTE PTR [edi+0x3a35b7e7],0x2e
  417607:	dec    esp
  417608:	push   eax
  417609:	daa    
  41760a:	jge    0x41762e
  41760c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41760d:	mov    dl,0x85
  41760f:	push   esp
  417610:	dec    esi
  417611:	and    eax,0x795fc22b
  417616:	inc    edi
  417617:	push   esi
  417618:	ret    
  417619:	mov    ds:0x11b2bf49,eax
  41761e:	outs   dx,DWORD PTR ds:[esi]
  41761f:	pavgw  mm6,QWORD PTR [edi+edx*2]
  417623:	xchg   edi,eax
  417624:	add    ecx,DWORD PTR [ebx]
  417626:	sub    ch,dl
  417628:	sub    eax,0xe1bb699e
  41762d:	inc    ebx
  41762e:	push   edi
  41762f:	add    eax,DWORD PTR ds:0x6dd6ab6a
  417635:	mov    BYTE PTR [eax],ah
  417637:	outs   dx,BYTE PTR ds:[esi]
  417638:	xor    al,0xe9
  41763a:	loop   0x417626
  41763c:	das    
  41763d:	xchg   edi,eax
  41763e:	stc    
  41763f:	sbb    dl,bl
  417641:	mov    bh,0x3c
  417643:	xor    esi,ecx
  417645:	mov    ah,0xbd
  417647:	scas   eax,DWORD PTR es:[edi]
  417648:	mov    edi,0x87a6dc2d
  41764d:	aaa    
  41764e:	cwde   
  41764f:	adc    esi,0x52d06f2e
  417655:	or     BYTE PTR [edx],dh
  417657:	iret   
  417658:	inc    esi
  417659:	lods   al,BYTE PTR ds:[esi]
  41765a:	pop    es
  41765b:	jmp    0x417635
  41765d:	xor    ah,cl
  41765f:	test   BYTE PTR [esi+0x15c245fd],0xab
  417666:	add    DWORD PTR [esi],ebx
  417668:	stc    
  417669:	nop
  41766a:	fcmovnb st,st(7)
  41766c:	fsubr  QWORD PTR [esi-0x33]
  41766f:	jae    0x4175fa
  417671:	int3   
  417672:	sbb    al,0x41
  417674:	push   cs
  417675:	rol    DWORD PTR [edx+0x206864b1],0xe2
  41767c:	scas   eax,DWORD PTR es:[edi]
  41767d:	mov    ebp,DWORD PTR [edx-0x50]
  417680:	mov    al,BYTE PTR [eax-0x19924828]
  417686:	xchg   ecx,eax
  417687:	mov    bl,0xcd
  417689:	and    BYTE PTR [eax+0x137fd500],bh
  41768f:	pop    esi
  417690:	or     eax,0xd8942e24
  417695:	nop
  417696:	popf   
  417697:	scas   eax,DWORD PTR es:[edi]
  417698:	push   ecx
  417699:	repnz cmp al,0x6
  41769c:	dec    edi
  41769d:	push   ss
  41769e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41769f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a0:	mov    ds:0x4848531d,al
  4176a5:	adc    ebx,DWORD PTR [edi-0x54]
  4176a8:	jg     0x4176d8
  4176aa:	xor    eax,0xc61e2d27
  4176af:	jnp    0x41767e
  4176b1:	xchg   ebx,eax
  4176b2:	out    0xea,al
  4176b4:	add    eax,0xbbbfb7e5
  4176b9:	call   0x6429:0x38f7822c
  4176c0:	cmp    al,0xd0
  4176c2:	xor    ebp,DWORD PTR [edi+0xf]
  4176c5:	add    DWORD PTR ds:0x65438b05,0xfffffff9
  4176cc:	add    DWORD PTR [esi-0x31341a10],esp
  4176d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d3:	push   edi
  4176d4:	or     al,0xcb
  4176d6:	stc    
  4176d7:	pop    eax
  4176d8:	mov    ecx,eax
  4176da:	(bad)  
  4176db:	jp     0x4176d0
  4176dd:	pop    ds
  4176de:	ja     0x4176eb
  4176e0:	xor    DWORD PTR [eax+ebp*1],ecx
  4176e3:	enter  0xdbd9,0x50
  4176e7:	push   cs
  4176e8:	push   es
  4176e9:	inc    esp
  4176ea:	add    BYTE PTR [edi-0x49],al
  4176ed:	inc    ecx
  4176ee:	sahf   
  4176ef:	jo     0x417728
  4176f1:	fistp  QWORD PTR [ebx-0x52]
  4176f4:	je     0x4176f5
  4176f6:	ror    BYTE PTR [edx],0x6d
  4176f9:	push   esi
  4176fa:	je     0x417702
  4176fc:	sar    bh,cl
  4176fe:	mov    edi,0x590e826e
  417703:	cmp    BYTE PTR [edx+eax*4],bh
  417706:	push   ds
  417707:	jecxz  0x417755
  417709:	mov    DWORD PTR ds:0x3117eee0,esi
  41770f:	lods   eax,DWORD PTR ds:[esi]
  417710:	fbstp  TBYTE PTR [edi+0x6ddf89d9]
  417716:	lock adc esp,DWORD PTR [edi]
  417719:	lods   al,BYTE PTR ds:[esi]
  41771a:	mov    BYTE PTR [edi-0x49cee75d],dh
  417720:	mov    WORD PTR [ebx],cs
  417722:	bound  ebx,QWORD PTR [ebx+0x14]
  417725:	push   ebx
  417726:	adc    cl,BYTE PTR ds:0x27a7907d
  41772c:	int3   
  41772d:	and    eax,0x25f8407f
  417732:	sti    
  417733:	aas    
  417734:	daa    
  417735:	push   ds
  417736:	jbe    0x4176e8
  417738:	loop   0x41774b
  41773a:	push   es
  41773b:	inc    ebx
  41773c:	(bad)  
  41773d:	shl    BYTE PTR [edx+0x63],cl
  417740:	add    al,0xa4
  417742:	mov    esi,0x34b4a061
  417747:	mov    bh,0x3f
  417749:	rol    DWORD PTR [esp+ebx*4],1
  41774c:	mov    edi,DWORD PTR [edx+esi*1+0x67]
  417750:	add    BYTE PTR fs:[eax],cl
  417753:	jmp    0x7f702820
  417758:	pop    es
  417759:	pop    edx
  41775a:	pop    ecx
  41775b:	(bad)  
  41775d:	jae    0x4177dd
  41775f:	clc    
  417760:	jns    0x41774e
  417762:	xchg   esp,eax
  417763:	dec    ebx
  417764:	mov    al,ds:0x450a4c5a
  417769:	mov    bl,0x74
  41776b:	shl    edx,1
  41776d:	retf   0x2317
  417770:	jp     0x4177e3
  417772:	mov    ds:0x45cef209,al
  417777:	(bad)  
  417778:	sub    edi,ecx
  41777a:	add    al,0x8e
  41777c:	lock jl 0x417785
  41777f:	popf   
  417780:	aas    
  417781:	push   ecx
  417782:	or     al,0x8
  417784:	xlat   BYTE PTR ds:[ebx]
  417785:	push   ebx
  417786:	dec    ecx
  417787:	xchg   DWORD PTR [eax+0x17],esi
  41778a:	rol    BYTE PTR [edi-0x124c88b3],0x17
  417791:	adc    ebp,DWORD PTR [edi]
  417793:	(bad)  
  417794:	repz xlat BYTE PTR ds:[ebx]
  417796:	add    BYTE PTR [ecx+0x8],bh
  417799:	(bad)  [ebp+0xb]
  41779c:	mov    ds:0x2c3aa302,eax
  4177a1:	sub    edx,esp
  4177a3:	inc    esp
  4177a4:	jl     0x4177c4
  4177a6:	stos   DWORD PTR es:[edi],eax
  4177a7:	mov    DWORD PTR [ebx-0x3d80d33],0x17cf6f99
  4177b1:	cmc    
  4177b2:	(bad)  
  4177b3:	pushf  
  4177b4:	into   
  4177b5:	and    esi,DWORD PTR [esi-0x3a56645c]
  4177bb:	jle    0x417822
  4177bd:	inc    edi
  4177be:	and    eax,0xc716573a
  4177c3:	sbb    DWORD PTR [ebp-0x80],esi
  4177c6:	(bad)  
  4177c7:	frstor [eax-0x7c]
  4177ca:	adc    DWORD PTR [edi],esp
  4177cc:	icebp  
  4177cd:	cs mov edx,0x72143184
  4177d3:	imul   DWORD PTR [ebp+0x36]
  4177d6:	ja     0x4177b4
  4177d8:	jg     0x41784e
  4177da:	aas    
  4177db:	repnz add ch,BYTE PTR [ecx-0xd]
  4177df:	lds    eax,FWORD PTR [esi]
  4177e1:	and    al,BYTE PTR [ecx-0x5cac7729]
  4177e7:	adc    al,0xc7
  4177e9:	sub    al,0x4
  4177eb:	data16 jns 0x41785b
  4177ee:	je     0x4177a5
  4177f0:	scas   eax,DWORD PTR es:[edi]
  4177f1:	push   esp
  4177f2:	sub    BYTE PTR [eax+0x3d],0xd6
  4177f6:	test   al,0xc
  4177f8:	les    edi,FWORD PTR [eax-0x34883bb2]
  4177fe:	lock pop ds
  417800:	mov    bh,0x2a
  417802:	out    dx,al
  417803:	mov    esp,0xd8a9dc25
  417808:	mov    DWORD PTR [ecx+edi*4-0x1f],0xcb05ace6
  417810:	mov    bl,0xed
  417812:	jb     0x417828
  417814:	mov    DWORD PTR [esp+edi*2],edx
  417817:	cmp    DWORD PTR [edi],esi
  417819:	inc    ebp
  41781a:	mov    esp,DWORD PTR [edi+0xd88f5e0]
  417820:	xchg   ecx,eax
  417821:	fcmovu st,st(5)
  417823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417824:	hlt    
  417825:	xor    DWORD PTR [eax+0x5dadcadc],edi
  41782b:	(bad)  
  41782c:	cld    
  41782d:	retf   
  41782e:	js     0x41787f
  417830:	jg     0x4177fe
  417832:	fisttp DWORD PTR [ebp-0x76]
  417835:	mov    eax,0x391cb1fe
  41783a:	mov    esi,0xbf400ddb
  41783f:	enter  0xcdfa,0x2a
  417843:	rol    DWORD PTR [eax],1
  417845:	imul   edx,DWORD PTR [esp+edi*4-0x52ff061d],0x34
  41784d:	aam    0x8c
  41784f:	loopne 0x417845
  417851:	retf   
  417852:	leave  
  417853:	call   0x62532cce
  417858:	mov    ds:0x6388c16d,eax
  41785d:	pop    ds
  41785e:	mov    ebx,0x7dc0cead
  417863:	xor    esi,DWORD PTR [eax]
  417865:	cmc    
  417866:	pop    edx
  417867:	scas   eax,DWORD PTR es:[edi]
  417868:	and    al,0xe1
  41786a:	mov    edx,0x698e6b6d
  41786f:	or     bl,BYTE PTR [eax]
  417871:	push   ecx
  417872:	sbb    ch,BYTE PTR ss:[ebp-0xa]
  417876:	or     BYTE PTR [ebx+0x44],ah
  417879:	and    ch,BYTE PTR [eax-0x51]
  41787c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787d:	ds mov esi,0xeefaefc2
  417883:	rcr    BYTE PTR [ecx+0x7e],0x52
  417887:	das    
  417888:	in     eax,dx
  417889:	cmp    DWORD PTR [ecx+0x34],ebp
  41788c:	xor    edx,DWORD PTR [ecx+0x5d]
  41788f:	push   cs
  417890:	rcr    ebp,0xd3
  417893:	sub    BYTE PTR [ecx],cl
  417895:	add    ah,cl
  417897:	(bad)  
  417899:	cld    
  41789a:	mov    ah,0x0
  41789c:	or     dh,dh
  41789e:	push   ds
  41789f:	std    
  4178a0:	std    
  4178a1:	or     dl,BYTE PTR [ebx+0x18]
  4178a4:	les    ebx,FWORD PTR [edx-0x45b323b0]
  4178aa:	lods   al,BYTE PTR es:[esi]
  4178ac:	arpl   WORD PTR [eax+edi*1],bp
  4178af:	imul   ebx,DWORD PTR [eax],0xbbd5ea8b
  4178b5:	enter  0x9cdb,0xbb
  4178b9:	ficom  WORD PTR [edi-0x2]
  4178bc:	push   esp
  4178bd:	rep lods al,BYTE PTR ds:[esi]
  4178bf:	mul    DWORD PTR [ecx-0x58]
  4178c2:	inc    edx
  4178c3:	sub    DWORD PTR ds:[edx-0x38aabed],ecx
  4178ca:	popa   
  4178cb:	mov    DWORD PTR [edi-0x3f],ecx
  4178ce:	mov    esp,0x2855f5b4
  4178d3:	dec    ebx
  4178d4:	mov    cl,0xad
  4178d6:	mov    dh,0x1d
  4178d8:	dec    esi
  4178d9:	idiv   esi
  4178db:	mov    bl,0x6e
  4178dd:	hlt    
  4178de:	mov    ah,0x99
  4178e0:	test   edi,edx
  4178e2:	mov    BYTE PTR [esi+0x34cd8eed],0x86
  4178e9:	in     al,dx
  4178ea:	sti    
  4178eb:	leave  
  4178ec:	jle    0x41788c
  4178ee:	(bad)  
  4178ef:	pushf  
  4178f0:	call   0x2ceb:0x2f1c99ff
  4178f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f8:	jecxz  0x417927
  4178fa:	adc    esp,DWORD PTR [eax]
  4178fc:	retf   0x733
  4178ff:	fiadd  WORD PTR ds:0x80c6a627
  417905:	call   0x9dc:0x204a5704
  41790c:	icebp  
  41790d:	(bad)  
  41790e:	ret    0x89f1
  417911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417912:	fwait
  417913:	push   ebp
  417914:	jecxz  0x417925
  417916:	cmp    dl,al
  417918:	jns    0x417957
  41791a:	xlat   BYTE PTR ds:[ebx]
  41791b:	fldcw  WORD PTR [ecx*4+0x4163578f]
  417922:	push   edx
  417923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417924:	(bad)  ds:0x121b388a
  41792a:	jne    0x417969
  41792c:	retf   
  41792d:	xor    BYTE PTR [edi],0x8f
  417930:	daa    
  417931:	(bad)  
  417932:	hlt    
  417933:	stos   BYTE PTR es:[edi],al
  417934:	fsubr  DWORD PTR [edi+0x55]
  417937:	fdiv   DWORD PTR [eax-0x2c9c627c]
  41793d:	push   ss
  41793e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793f:	je     0x417963
  417941:	add    DWORD PTR [esi],esi
  417943:	and    eax,0xb3d036fa
  417948:	inc    esi
  417949:	jge    0x4178ee
  41794b:	in     eax,0x7b
  41794d:	fnstsw WORD PTR [ebp-0x9ead4de]
  417953:	in     eax,dx
  417954:	mov    ds:0x61a08607,al
  417959:	push   ecx
  41795a:	rcr    DWORD PTR [ecx],1
  41795c:	popf   
  41795d:	pop    es
  41795e:	mov    ecx,0xae6220db
  417963:	mov    ch,0xa1
  417965:	xchg   esi,eax
  417966:	test   ah,al
  417968:	sub    eax,0xd7e07fce
  41796d:	inc    ecx
  41796e:	cmc    
  41796f:	add    dl,bl
  417971:	and    esp,DWORD PTR [ecx+0x76]
  417974:	ds test al,0xef
  417977:	mov    esp,0xb4c40adc
  41797c:	fcmovnu st,st(2)
  41797e:	sub    al,0x60
  417980:	dec    eax
  417981:	je     0x4179d1
  417983:	adc    eax,0x28886de4
  417988:	jb     0x4179ee
  41798a:	ret    0xfa47
  41798d:	pop    ebx
  41798e:	in     al,dx
  41798f:	aas    
  417990:	mov    ebp,0x99d656eb
  417995:	leave  
  417996:	cmc    
  417997:	fnsave [esi]
  417999:	int3   
  41799a:	and    DWORD PTR [edi],ebx
  41799c:	lds    ebx,FWORD PTR [ebx+eiz*1-0x27]
  4179a0:	out    0x1d,al
  4179a2:	lods   al,BYTE PTR ds:[esi]
  4179a3:	mov    dl,0x87
  4179a5:	rol    DWORD PTR [ebx],1
  4179a7:	dec    ebx
  4179a8:	inc    edx
  4179a9:	mov    ebx,gs
  4179ab:	(bad)  
  4179ac:	in     al,dx
  4179ad:	lock das 
  4179af:	xchg   DWORD PTR [esi+0x79],edx
  4179b2:	jp     0x4179e5
  4179b4:	and    eax,esi
  4179b6:	test   al,0x91
  4179b8:	out    0x1e,eax
  4179ba:	jle    0x4179f1
  4179bc:	popf   
  4179bd:	sar    DWORD PTR [esi+ecx*2-0x7e737b9b],1
  4179c4:	test   DWORD PTR [ebp-0x25],ebx
  4179c7:	mov    al,ds:0xeeb5fcd2
  4179cc:	and    eax,0xe5aa3f98
  4179d1:	lods   eax,DWORD PTR ds:[esi]
  4179d2:	call   0xb5fd:0xd4126c4d
  4179d9:	neg    BYTE PTR [esi]
  4179db:	mov    eax,ds:0x6136c9ff
  4179e0:	xchg   edx,eax
  4179e1:	ins    BYTE PTR es:[edi],dx
  4179e2:	mov    ebp,edx
  4179e4:	or     al,0x5c
  4179e6:	outs   dx,DWORD PTR ds:[esi]
  4179e7:	sub    BYTE PTR [edx-0x40],0xec
  4179eb:	mov    cl,0xc0
  4179ed:	push   edx
  4179ee:	retf   
  4179ef:	js     0x41798a
  4179f1:	sub    al,0x7b
  4179f3:	or     BYTE PTR [ebx+0x53bb0db0],ch
  4179f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179fa:	adc    BYTE PTR [esi+ebp*4-0x3e668d55],bl
  417a01:	cwde   
  417a02:	sbb    DWORD PTR [edi],ebx
  417a04:	aam    0x3c
  417a06:	mov    ebx,0x8ca0e98c
  417a0b:	pop    edi
  417a0c:	cmp    eax,0x6d978e5a
  417a11:	push   edi
  417a12:	mov    cl,0x71
  417a14:	jmp    0x416f:0xf0725030
  417a1b:	mov    dl,0x70
  417a1d:	pop    ds
  417a1e:	xchg   edi,eax
  417a1f:	repnz adc eax,0x57c26325
  417a25:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417a27:	add    eax,DWORD PTR [esi-0x3f367693]
  417a2d:	fwait
  417a2e:	add    ebp,DWORD PTR [edi-0x38f89d59]
  417a34:	fst    QWORD PTR [ecx+0x7b6746fd]
  417a3a:	fnstenv [eax]
  417a3c:	ins    BYTE PTR es:[edi],dx
  417a3d:	das    
  417a3e:	lock jl 0x4179e9
  417a41:	or     BYTE PTR [eax+ebp*2],ch
  417a44:	mov    BYTE PTR [edx+0x381db957],dh
  417a4a:	icebp  
  417a4b:	jno    0x417a24
  417a4d:	imul   edi,DWORD PTR [esi],0xffffffaa
  417a50:	jb     0x417a5c
  417a52:	fdiv   st(5),st
  417a54:	psadbw mm6,QWORD PTR [edi]
  417a57:	test   eax,0xefcb31b8
  417a5c:	arpl   WORD PTR [edx-0x18],cx
  417a5f:	pop    ds
  417a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a61:	sbb    ah,dh
  417a63:	and    BYTE PTR [ebp*2+0x46582e51],dl
  417a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6b:	shl    ebp,0x5e
  417a6e:	aaa    
  417a6f:	xlat   BYTE PTR ds:[ebx]
  417a70:	pop    ecx
  417a71:	mov    dh,0xae
  417a73:	push   edi
  417a74:	jmp    0x417a77
  417a76:	loope  0x417a18
  417a78:	mov    ch,0xf9
  417a7a:	test   eax,0x4b1852b7
  417a7f:	sbb    DWORD PTR [ecx+0x72],ecx
  417a82:	shl    DWORD PTR [esi-0x4a],1
  417a85:	inc    edi
  417a86:	xor    ebp,DWORD PTR [ecx]
  417a88:	push   ebp
  417a89:	jl     0x417a22
  417a8b:	into   
  417a8c:	retf   
  417a8d:	xor    ch,BYTE PTR [ebx]
  417a8f:	dec    edx
  417a90:	sti    
  417a91:	call   0x8033:0x416eac07
  417a98:	nop
  417a99:	loop   0x417a5e
  417a9b:	popf   
  417a9c:	add    al,0x94
  417a9e:	mov    ah,0xe9
  417aa0:	int3   
  417aa1:	bound  edx,QWORD PTR [ebp-0x19b065f2]
  417aa7:	jge    0x417ae7
  417aa9:	adc    DWORD PTR [edx+edi*1],ebx
  417aac:	add    eax,0x3a08d41b
  417ab1:	inc    ebp
  417ab2:	stos   BYTE PTR es:[edi],al
  417ab3:	jns    0x417a52
  417ab5:	enter  0xbc89,0x6
  417ab9:	mov    al,ds:0xb7e81225
  417abe:	push   ebx
  417abf:	arpl   WORD PTR [eax-0x40],bx
  417ac2:	(bad)  
  417ac3:	lock and BYTE PTR [edi-0x35c5c87f],dh
  417aca:	out    dx,al
  417acb:	adc    al,bl
  417acd:	jae    0x417ad0
  417acf:	dec    ebp
  417ad0:	fidiv  WORD PTR [eax+0x35]
  417ad3:	xor    bl,ah
  417ad5:	or     eax,eax
  417ad7:	call   0xa56:0x6c82644f
  417ade:	aaa    
  417adf:	pop    eax
  417ae0:	xor    al,0x3b
  417ae2:	outs   dx,BYTE PTR ds:[esi]
  417ae3:	(bad)  
  417ae4:	push   ecx
  417ae5:	int3   
  417ae6:	push   0xffffff9b
  417ae8:	xor    edi,DWORD PTR [edx-0x68]
  417aeb:	mov    DWORD PTR ds:0xf5f0f567,0xed6e4ba8
  417af5:	out    dx,al
  417af6:	jno    0x417aa5
  417af8:	add    DWORD PTR [ecx+0x42d86723],ebx
  417afe:	xchg   ebp,eax
  417aff:	pusha  
  417b00:	pop    esi
  417b01:	mov    ecx,0x397db6b
  417b06:	dec    esi
  417b07:	(bad)  
  417b08:	fidivr WORD PTR [ebx+0x5e989047]
  417b0e:	adc    al,0xcc
  417b10:	call   DWORD PTR [ebx-0x51]
  417b13:	leave  
  417b14:	push   cs
  417b15:	popf   
  417b16:	mov    cl,BYTE PTR [esi+0x57498375]
  417b1c:	xor    BYTE PTR [ebp-0x53],0x9c
  417b20:	js     0x417afb
  417b22:	(bad)  
  417b23:	mov    esi,0xb7561b39
  417b28:	push   eax
  417b29:	push   es
  417b2a:	inc    ebp
  417b2b:	icebp  
  417b2c:	mov    eax,0xd4e04bfe
  417b31:	lahf   
  417b32:	inc    ebx
  417b33:	aad    0xf1
  417b35:	add    BYTE PTR ds:0xc491cd20,ah
  417b3b:	xchg   ebx,eax
  417b3c:	or     al,0x78
  417b3e:	or     ch,BYTE PTR [esi+edx*1-0x26cc1d3e]
  417b45:	inc    ecx
  417b46:	or     ah,BYTE PTR [eax]
  417b48:	xchg   esi,eax
  417b49:	jl     0x417b6d
  417b4b:	sar    bh,0xd
  417b4e:	adc    ch,BYTE PTR [edi-0xb]
  417b51:	cmc    
  417b52:	mov    cl,0x5d
  417b54:	dec    esp
  417b55:	call   DWORD PTR [eax+0x78ee207c]
  417b5b:	iret   
  417b5c:	dec    edx
  417b5d:	lahf   
  417b5e:	scas   al,BYTE PTR es:[edi]
  417b5f:	mov    ecx,0x9790518d
  417b64:	arpl   WORD PTR [esp+edi*2+0x3d],ax
  417b68:	add    eax,0x8356b967
  417b6d:	call   0xc31b:0x3edca524
  417b74:	les    esi,FWORD PTR [eax+0x6aee058d]
  417b7a:	mov    cl,0x91
  417b7c:	mov    gs,WORD PTR [ecx+0x794d4b6b]
  417b82:	jbe    0x417bd8
  417b84:	outs   dx,BYTE PTR ds:[esi]
  417b85:	mov    ds:0xc1b4a057,eax
  417b8a:	mov    dh,0x88
  417b8c:	pop    es
  417b8d:	and    bh,BYTE PTR [edi+0xe]
  417b90:	jecxz  0x417b9d
  417b92:	gs out dx,al
  417b94:	sub    edx,DWORD PTR [edi+0x5]
  417b97:	cmp    edi,DWORD PTR [ecx-0x1c4db6d9]
  417b9d:	pushf  
  417b9e:	enter  0xc605,0x2d
  417ba2:	pop    edi
  417ba3:	push   ebx
  417ba4:	dec    edx
  417ba5:	pop    ebx
  417ba6:	bound  edx,QWORD PTR [ecx+0x7d]
  417ba9:	scas   al,BYTE PTR es:[edi]
  417baa:	sub    eax,0xc284aee
  417baf:	xor    ecx,edi
  417bb1:	sbb    BYTE PTR [ebp+0x1a],dl
  417bb4:	xchg   edx,eax
  417bb5:	jnp    0x417b8a
  417bb7:	jne    0x417ba2
  417bb9:	jecxz  0x417bf9
  417bbb:	shr    BYTE PTR [edx+eiz*2+0x2332420c],0x60
  417bc3:	dec    eax
  417bc4:	loop   0x417b47
  417bc6:	out    dx,al
  417bc7:	and    BYTE PTR [ebx+ecx*1-0x618df875],al
  417bce:	jbe    0x417b5b
  417bd0:	rcr    ecx,cl
  417bd2:	jo     0x417c4d
  417bd4:	aad    0x86
  417bd6:	and    BYTE PTR [ecx-0x2a],dh
  417bd9:	in     al,0x10
  417bdb:	inc    eax
  417bdc:	(bad)  
  417bdd:	xchg   ebx,eax
  417bde:	inc    ebx
  417bdf:	sub    DWORD PTR ds:0xb0a3a005,ebx
  417be5:	pop    esi
  417be6:	jns    0x417bab
  417be8:	bound  edi,QWORD PTR [edi]
  417bea:	fs int3 
  417bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bed:	xchg   esp,eax
  417bee:	pop    edi
  417bef:	stc    
  417bf0:	ret    0x7f04
  417bf3:	js     0x417c51
  417bf5:	jl     0x417c27
  417bf7:	cmc    
  417bf8:	xchg   edx,ebx
  417bfa:	xchg   BYTE PTR [ebp+ebx*8-0x4c57e581],cl
  417c01:	add    esi,edx
  417c03:	stos   DWORD PTR es:[edi],eax
  417c04:	and    al,bl
  417c06:	inc    esi
  417c07:	(bad)  
  417c09:	xchg   ebx,eax
  417c0a:	fist   WORD PTR ds:0xc49f1004
  417c10:	pop    edi
  417c11:	jge    0x417c33
  417c13:	rcr    BYTE PTR gs:[esi],cl
  417c16:	cmp    al,0x4c
  417c18:	cmp    dh,bh
  417c1a:	mov    fs,WORD PTR [eax-0x14]
  417c1d:	fs pop ecx
  417c1f:	dec    esp
  417c20:	jb     0x417c6d
  417c22:	push   es
  417c23:	sar    bh,1
  417c25:	hlt    
  417c26:	add    BYTE PTR [ebp+edx*4-0x49],bh
  417c2a:	(bad)  
  417c2b:	(bad)  
  417c2c:	mov    dl,0xd2
  417c2e:	jmp    0xba0c:0x942599f8
  417c35:	cli    
  417c36:	jmp    0x417cae
  417c38:	jnp    0x417c78
  417c3a:	mov    ecx,0xbdf98578
  417c3f:	mov    ds:0xace325d9,al
  417c44:	loope  0x417bc8
  417c46:	xchg   esp,eax
  417c47:	jl     0x417bf9
  417c49:	jbe    0x417ca9
  417c4b:	test   BYTE PTR [edi+0x58820bd0],bl
  417c51:	je     0x417cb0
  417c53:	dec    ecx
  417c54:	and    eax,0xfb55cd10
  417c59:	cli    
  417c5a:	out    dx,al
  417c5b:	inc    edx
  417c5c:	mov    al,dl
  417c5e:	xchg   esp,eax
  417c5f:	dec    ebx
  417c60:	xchg   ebx,eax
  417c61:	cld    
  417c62:	jae    0x417c97
  417c64:	xchg   ecx,eax
  417c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c66:	enter  0x532f,0x25
  417c6a:	xlat   BYTE PTR ds:[ebx]
  417c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c6c:	pop    edi
  417c6d:	and    al,0xf6
  417c6f:	and    DWORD PTR [ecx-0x28],0xffffffdb
  417c73:	sahf   
  417c74:	mov    dh,0xff
  417c76:	or     ebx,ecx
  417c78:	fadd   DWORD PTR [edx*1+0x56331a0c]
  417c7f:	xchg   edi,eax
  417c80:	es push 0xffffffc6
  417c83:	mov    ch,0x7d
  417c85:	push   0x3735f1ec
  417c8a:	mov    bl,0x4b
  417c8c:	jb     0x417d03
  417c8e:	pop    es
  417c8f:	mov    eax,0xfad35328
  417c94:	stos   DWORD PTR es:[edi],eax
  417c95:	(bad)  
  417c96:	out    dx,eax
  417c97:	fsubp  st(5),st
  417c99:	push   edi
  417c9a:	xor    edi,edx
  417c9c:	and    esp,ecx
  417c9e:	cwde   
  417c9f:	enter  0xd8eb,0x96
  417ca3:	dec    esp
  417ca4:	cmp    al,0xce
  417ca6:	int3   
  417ca7:	scas   al,BYTE PTR es:[edi]
  417ca8:	maskmovq mm4,mm2
  417cab:	addr16 pop edx
  417cad:	sub    DWORD PTR [ebx-0x55abab04],esp
  417cb3:	retf   
  417cb4:	xor    BYTE PTR fs:[esi-0x207f261d],bl
  417cbb:	mov    dl,0x74
  417cbd:	push   esi
  417cbe:	daa    
  417cbf:	push   0x5dbaf867
  417cc4:	inc    eax
  417cc5:	mov    bl,0x9a
  417cc7:	mov    bh,0x87
  417cc9:	das    
  417cca:	xor    eax,0x51ee6506
  417ccf:	mov    edx,0x9d5ac271
  417cd4:	push   esp
  417cd5:	push   DWORD PTR [esi]
  417cd7:	push   eax
  417cd8:	ins    DWORD PTR es:[edi],dx
  417cd9:	dec    esi
  417cda:	into   
  417cdb:	or     edi,DWORD PTR [ebp+0x79242f1]
  417ce1:	xor    bh,BYTE PTR [esi]
  417ce3:	adc    eax,0x80be7ca
  417ce8:	and    bh,bl
  417cea:	pushf  
  417ceb:	mov    ds:0x855da409,al
  417cf0:	jecxz  0x417d37
  417cf2:	lods   eax,DWORD PTR ds:[esi]
  417cf3:	jg     0x417d41
  417cf5:	aam    0x89
  417cf7:	xor    BYTE PTR [ebx+0x60c27e67],dh
  417cfd:	push   ss
  417cfe:	add    ah,ah
  417d00:	inc    ebp
  417d01:	push   eax
  417d02:	fisub  DWORD PTR [ebp+0x2a9f6a7d]
  417d08:	(bad)  
  417d09:	(bad)  
  417d0a:	lock mov ecx,0x210b644c
  417d10:	scas   eax,DWORD PTR es:[edi]
  417d11:	retf   0x18a3
  417d14:	ja     0x417d48
  417d16:	fldcw  WORD PTR [edi]
  417d18:	pop    ds
  417d19:	xor    DWORD PTR [ebp+0x2],esi
  417d1c:	adc    DWORD PTR [eax],eax
  417d1e:	xor    ecx,DWORD PTR fs:[ebx+0x1]
  417d22:	push   cs
  417d23:	add    esi,esi
  417d25:	adc    ecx,edi
  417d27:	push   edx
  417d28:	test   eax,0xd8afe158
  417d2d:	popa   
  417d2e:	mov    fs,WORD PTR [eax-0x16f49b66]
  417d34:	rsqrtps xmm1,xmm0
  417d37:	xor    edi,edx
  417d39:	adc    eax,0xc053fbdf
  417d3e:	push   ebx
  417d3f:	inc    eax
  417d40:	aad    0x72
  417d42:	sbb    al,0xd4
  417d44:	mov    ch,0x71
  417d46:	clc    
  417d47:	arpl   WORD PTR ds:0x5e9c2edd,si
  417d4d:	sub    esi,edx
  417d4f:	out    0xa7,al
  417d51:	test   eax,0x71ee7324
  417d56:	lods   al,BYTE PTR ds:[esi]
  417d57:	jns    0x417d2c
  417d59:	and    ah,BYTE PTR [edi+0x28]
  417d5c:	push   esi
  417d5d:	in     al,dx
  417d5e:	cli    
  417d5f:	pop    ecx
  417d60:	je     0x417cea
  417d62:	adc    eax,0x7bae7d7d
  417d67:	dec    ebx
  417d68:	sub    ecx,edi
  417d6a:	sub    esi,DWORD PTR [edx+0x6f6b93d0]
  417d70:	pop    ebx
  417d71:	pop    ds
  417d72:	rcl    BYTE PTR [ecx],cl
  417d74:	ror    BYTE PTR [ebx-0x12],0x18
  417d78:	push   cs
  417d79:	cmp    ah,dl
  417d7b:	jge    0x417dac
  417d7d:	xchg   ebp,eax
  417d7e:	test   BYTE PTR [ebp+edi*8-0x9fff821],0x60
  417d86:	iret   
  417d87:	add    ah,BYTE PTR [ebx-0x3f]
  417d8a:	dec    edi
  417d8b:	mov    ebp,0xf94e8d7d
  417d90:	pop    edx
  417d91:	inc    edi
  417d92:	dec    edi
  417d93:	iret   
  417d94:	sub    ah,ah
  417d96:	rcl    DWORD PTR [esi],0xff
  417d99:	inc    eax
  417d9a:	mov    ecx,0x895b4ccc
  417d9f:	fisttp DWORD PTR [eax-0x7e72ed9b]
  417da5:	cmp    eax,0x88ec6c67
  417daa:	adc    bh,bh
  417dac:	pop    ds
  417dad:	pop    edi
  417dae:	jae    0x417d92
  417db0:	push   edi
  417db1:	scas   eax,DWORD PTR es:[edi]
  417db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db3:	inc    edx
  417db4:	nop
  417db5:	stos   DWORD PTR es:[edi],eax
  417db6:	push   esi
  417db7:	out    0x6c,eax
  417db9:	aam    0xbb
  417dbb:	scas   eax,DWORD PTR es:[edi]
  417dbc:	sti    
  417dbd:	xchg   edx,eax
  417dbe:	pushf  
  417dbf:	(bad)  
  417dc1:	arpl   WORD PTR [esp+ebx*1+0x875966],di
  417dc8:	int    0xa1
  417dca:	pop    esi
  417dcb:	sub    eax,0xd91e881e
  417dd0:	xchg   ecx,eax
  417dd1:	xor    al,0xb5
  417dd3:	cli    
  417dd4:	arpl   WORD PTR [edx],sp
  417dd6:	cmp    eax,DWORD PTR [edx+0x585ea6e4]
  417ddc:	stos   BYTE PTR es:[edi],al
  417ddd:	mov    esi,0xc897e0be
  417de2:	dec    ebx
  417de3:	xor    esi,DWORD PTR [esi]
  417de5:	daa    
  417de6:	shl    BYTE PTR [ebx],cl
  417de8:	or     al,ch
  417dea:	jmp    0x855844ac
  417def:	cmp    ah,bl
  417df1:	pop    ebx
  417df2:	call   0xd08a:0xad11fee1
  417df9:	repz and eax,0xbeafee56
  417dff:	les    esp,FWORD PTR [edi-0x72]
  417e02:	cld    
  417e03:	jmp    0x417e2c
  417e05:	hlt    
  417e06:	or     al,0x79
  417e08:	es xchg esi,eax
  417e0a:	mov    ds:0x1826e32e,eax
  417e0f:	(bad)  
  417e10:	fidivr WORD PTR [edi-0x5cb7eb91]
  417e16:	clc    
  417e17:	js     0x417dda
  417e19:	nop
  417e1a:	nop
  417e1b:	jmp    FWORD PTR [edx+0x20]
  417e1e:	jnp    0x417e56
  417e20:	mov    DWORD PTR [esi-0x28275a4],esp
  417e26:	inc    esi
  417e27:	ja     0x417dc1
  417e29:	rcl    BYTE PTR [ebp-0xe],0x86
  417e2d:	int3   
  417e2e:	stos   BYTE PTR es:[edi],al
  417e2f:	js     0x417e6f
  417e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e32:	iret   
  417e33:	outs   dx,DWORD PTR ds:[esi]
  417e34:	nop
  417e35:	test   eax,0xf419dbf
  417e3a:	mov    DWORD PTR [edx+ecx*2-0x75c7d9d0],esp
  417e41:	(bad)  
  417e43:	push   ss
  417e44:	fstp   DWORD PTR [edx+eax*4+0x7998e4ff]
  417e4b:	cmp    BYTE PTR [ebx],dl
  417e4d:	jp     0x417e2a
  417e4f:	rcr    BYTE PTR [ebp-0x51dcf33c],1
  417e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e56:	xor    ebx,esi
  417e58:	jns    0x417e7b
  417e5a:	xor    DWORD PTR [ecx-0x2712587b],ebp
  417e60:	mov    edx,DWORD PTR [eax+0x1ad69d3e]
  417e66:	sub    edi,eax
  417e68:	jmp    0x417e8f
  417e6a:	xchg   esp,ebx
  417e6c:	loopne 0x417e27
  417e6e:	aas    
  417e6f:	xor    dl,BYTE PTR [edx+0x15]
  417e72:	xor    cl,BYTE PTR [esi]
  417e74:	xchg   BYTE PTR [ebx-0x32],ch
  417e77:	fnstenv [ebx]
  417e79:	stc    
  417e7a:	jbe    0x417e9a
  417e7c:	fimul  WORD PTR [eax+0x3a3de0af]
  417e82:	mov    eax,0xc3c51101
  417e87:	mov    ds:0xa931b3ca,al
  417e8c:	add    esi,edi
  417e8e:	ficom  DWORD PTR [edx]
  417e90:	or     ch,BYTE PTR [edx+0x72ba4f87]
  417e96:	mul    dh
  417e98:	aam    0x97
  417e9a:	cmp    eax,0x99c46c50
  417e9f:	push   ebp
  417ea0:	add    DWORD PTR [ecx+0x636516aa],ecx
  417ea6:	push   ss
  417ea7:	fsub   DWORD PTR [edi+0x49]
  417eaa:	mov    dl,0x87
  417eac:	push   0x859e6a8f
  417eb1:	mov    edx,fs
  417eb3:	jns    0x417f0c
  417eb5:	jbe    0x417e60
  417eb7:	add    DWORD PTR [edx+0x76],0x399f593f
  417ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ebf:	add    dh,BYTE PTR [edi-0x6fae3d08]
  417ec5:	mov    ecx,0x980c2a0f
  417eca:	pushf  
  417ecb:	cmc    
  417ecc:	push   ds
  417ecd:	jge    0x417e83
  417ecf:	push   ebx
  417ed0:	mov    ebx,0x19485090
  417ed6:	jecxz  0x417e81
  417ed8:	push   0xffffff82
  417eda:	and    si,dx
  417edd:	jbe    0x417f4a
  417edf:	xchg   esi,eax
  417ee0:	mov    dh,0x1e
  417ee2:	mov    dl,0xd7
  417ee4:	fsubr  DWORD PTR [eax]
  417ee6:	mov    ecx,0x73ab9a33
  417eeb:	aas    
  417eec:	fs ss inc ecx
  417eef:	mov    dh,0xea
  417ef1:	xlat   BYTE PTR ds:[ebx]
  417ef2:	add    eax,0x8f6c0132
  417ef7:	pop    ecx
  417ef8:	out    0x72,al
  417efa:	jnp    0x417ec4
  417efc:	mov    al,0xb1
  417efe:	in     eax,0x9a
  417f00:	xchg   esp,eax
  417f01:	adc    DWORD PTR [ebx],ebp
  417f03:	jae    0x417f0d
  417f05:	inc    edx
  417f06:	ret    
  417f07:	sub    edi,DWORD PTR [eax-0x6b40b3b0]
  417f0d:	hlt    
  417f0e:	(bad)  
  417f0f:	cli    
  417f10:	cmp    eax,0x604fa895
  417f15:	pop    edi
  417f16:	push   edi
  417f17:	jp     0x417f2b
  417f19:	pop    eax
  417f1a:	std    
  417f1b:	cmp    bl,dh
  417f1d:	test   BYTE PTR [eax],bl
  417f1f:	(bad)  
  417f22:	mov    ds:0xa60ce0d3,eax
  417f27:	inc    edi
  417f28:	xor    eax,0xf9065950
  417f2d:	sbb    DWORD PTR [edi+0x41],ebp
  417f30:	cwde   
  417f31:	or     eax,0x7b64e7a2
  417f36:	es inc eax
  417f38:	pop    ebp
  417f39:	dec    eax
  417f3a:	sbb    DWORD PTR [edx+ebx*2+0x3eb09d9d],ebp
  417f41:	adc    BYTE PTR [ebp+0xc],dl
  417f44:	add    dl,BYTE PTR [edi]
  417f46:	inc    edx
  417f47:	data16 scas al,BYTE PTR es:[edi]
  417f49:	mov    ch,0x6
  417f4b:	jmp    0xd9700f07
  417f50:	mov    dl,0xfd
  417f52:	add    BYTE PTR ds:0xf0631877,cl
  417f58:	cld    
  417f59:	adc    BYTE PTR [edi-0xcfa1685],bh
  417f5f:	sub    bh,BYTE PTR [esi-0x6b]
  417f62:	sub    edx,edi
  417f64:	pop    edx
  417f65:	cmp    cl,BYTE PTR [ecx+0x7f]
  417f68:	push   esp
  417f69:	bound  edi,QWORD PTR [edx-0x59]
  417f6c:	call   0x48e3:0x93ec2937
  417f73:	mov    al,0x9d
  417f75:	dec    ecx
  417f76:	mov    bh,dl
  417f78:	out    dx,al
  417f79:	ss jo  0x417fe6
  417f7c:	pop    edi
  417f7d:	xor    eax,0x68b0a5f7
  417f82:	cmp    eax,0x2cf8d14
  417f87:	jo     0x417fff
  417f89:	fs out 0x63,al
  417f8c:	mov    ecx,0xb5e062d9
  417f91:	into   
  417f92:	xchg   DWORD PTR [ebp-0x5495a0a8],esp
  417f98:	daa    
  417f99:	inc    edx
  417f9a:	inc    esp
  417f9b:	dec    eax
  417f9c:	stos   BYTE PTR es:[edi],al
  417f9d:	fldenv [ebp-0xb82f19c]
  417fa3:	es (bad) 
  417fa5:	ret    
  417fa6:	out    dx,eax
  417fa7:	nop
  417fa8:	xchg   ebp,eax
  417fa9:	enter  0xb869,0xb6
  417fad:	imul   eax,ecx,0xa17b9aec
  417fb3:	inc    DWORD PTR [eax]
  417fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb6:	test   eax,0xfc46d742
  417fbb:	add    eax,DWORD PTR [ecx+0x78]
  417fbe:	adc    BYTE PTR [eax-0x54],al
  417fc1:	mov    al,0x80
  417fc3:	retf   
  417fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc5:	cmp    al,0xd5
  417fc7:	push   esi
  417fc8:	fiadd  WORD PTR [esp+ecx*4+0x1422f334]
  417fcf:	in     al,dx
  417fd0:	(bad)  
  417fd1:	ins    BYTE PTR es:[edi],dx
  417fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd3:	out    dx,eax
  417fd4:	or     al,BYTE PTR [edx]
  417fd6:	or     al,0xb5
  417fd8:	rcr    al,cl
  417fda:	push   ecx
  417fdb:	imul   ebx,DWORD PTR [edx+0x74cbcc3f],0xf7f261de
  417fe5:	fdiv   QWORD PTR [edx+0xbef60ee]
  417feb:	bound  ecx,QWORD PTR [edi-0x322b7749]
  417ff1:	or     dh,BYTE PTR [edi]
  417ff3:	dec    eax
  417ff4:	pop    ss
  417ff5:	mov    BYTE PTR [edi],bh
  417ff7:	adc    dh,dh
  417ff9:	div    cl
  417ffb:	sub    DWORD PTR [ebx-0x7bae2523],ebp
  418001:	add    al,0xb4
  418003:	rcr    DWORD PTR [ebx-0x10abeecd],1
  418009:	cdq    
  41800a:	test   BYTE PTR [esi+0x3e],ah
  41800d:	xchg   esi,eax
  41800e:	push   ebp
  41800f:	mov    ah,0x9a
  418011:	aaa    
  418012:	pop    es
  418013:	adc    eax,0xc3165de9
  418018:	xchg   ebp,eax
  418019:	mov    DWORD PTR [esi],0xa0ee3d8a
  41801f:	scas   al,BYTE PTR es:[edi]
  418020:	dec    ecx
  418021:	sahf   
  418022:	mov    esp,0x92cfe784
  418027:	pop    ebx
  418028:	out    0xea,al
  41802a:	sub    ecx,esp
  41802c:	out    0x55,al
  41802e:	lahf   
  41802f:	inc    DWORD PTR [eax-0xe603152]
  418035:	fsubr  DWORD PTR [esp+ebp*4+0x62]
  418039:	push   ecx
  41803a:	subps  xmm2,xmm4
  41803d:	int    0xc2
  41803f:	cmp    al,0xe4
  418041:	mov    cl,0x51
  418043:	jbe    0x418090
  418045:	add    ch,BYTE PTR [ebx+0x23cc90b6]
  41804b:	xchg   ebx,eax
  41804c:	enter  0x9f27,0x0
  418050:	dec    eax
  418051:	jmp    0x41803b
  418053:	iret   
  418054:	fmul   QWORD PTR [esi+ecx*1+0x70]
  418058:	xor    al,BYTE PTR [esi-0x28c4f385]
  41805e:	push   ss
  41805f:	bound  eax,QWORD PTR [esi-0x1792dd85]
  418065:	sbb    al,0xd2
  418067:	jne    0x4180e6
  418069:	push   ebx
  41806a:	or     eax,edi
  41806c:	sahf   
  41806d:	aad    0x4a
  41806f:	das    
  418070:	test   al,0x1e
  418072:	xchg   ebp,eax
  418073:	dec    eax
  418074:	imul   al
  418076:	push   esp
  418077:	xchg   BYTE PTR [eax-0x75],dh
  41807a:	xor    dl,BYTE PTR [eax+eiz*4+0x26]
  41807e:	out    dx,al
  41807f:	jp     0x418090
  418081:	sub    al,0xaa
  418083:	call   0x4ddb3ea1
  418088:	mov    bl,0xd4
  41808a:	cld    
  41808b:	enter  0xc878,0x5c
  41808f:	iret   
  418090:	aad    0xe8
  418092:	mov    esp,0xc64ad6e1
  418097:	cmp    esp,DWORD PTR [edx-0x3f08c4c1]
  41809d:	(bad)  
  41809e:	sar    DWORD PTR [eax],1
  4180a0:	mov    es,esp
  4180a2:	mov    ah,0x82
  4180a4:	call   0xf3ffdbca
  4180a9:	sbb    BYTE PTR [esi-0x431e323],ah
  4180af:	sub    bh,BYTE PTR [ebp+0x12b7c99b]
  4180b5:	in     al,0xf6
  4180b7:	jno    0x418055
  4180b9:	retf   0x1994
  4180bc:	loopne 0x41809c
  4180be:	test   al,0xe3
  4180c0:	rcl    BYTE PTR [esi+0x43],0x87
  4180c4:	sub    esp,DWORD PTR [ebp+0x7c]
  4180c7:	call   0x7607:0x8a87b549
  4180ce:	retf   0x51e0
  4180d1:	and    esi,ebx
  4180d3:	in     al,0x96
  4180d5:	sbb    ah,BYTE PTR [edi]
  4180d7:	pushf  
  4180d8:	sbb    bl,BYTE PTR [ebx-0x72da07f8]
  4180de:	out    dx,al
  4180df:	mov    bl,0x7b
  4180e1:	sbb    al,0x36
  4180e3:	add    al,0xb7
  4180e5:	xchg   BYTE PTR ds:0x8cf7ef4e,ch
  4180eb:	dec    ebx
  4180ec:	sbb    BYTE PTR [edx],ch
  4180ee:	rcr    DWORD PTR ss:[esi-0x15daa19f],0x5e
  4180f6:	push   ebx
  4180f7:	jbe    0x41814a
  4180f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fa:	sub    DWORD PTR [edi+0x7595490d],edx
  418100:	xchg   DWORD PTR [ecx+ebp*4],ebx
  418103:	push   cs
  418104:	cli    
  418105:	scas   al,BYTE PTR es:[edi]
  418106:	enter  0x7474,0x45
  41810a:	rcl    dh,0x5
  41810d:	lds    ecx,FWORD PTR [eax]
  41810f:	cmp    edi,DWORD PTR ds:0x3e6785a8
  418115:	pop    esi
  418116:	or     edx,edi
  418118:	or     eax,0xef8299a
  41811d:	sbb    DWORD PTR [ebx],edi
  41811f:	aaa    
  418120:	sub    eax,0x95e1a95d
  418125:	xor    eax,0x4827a79a
  41812a:	ror    DWORD PTR [edi-0x4b],0xea
  41812e:	dec    ebp
  41812f:	xchg   ebp,eax
  418130:	add    DWORD PTR [eax],eax
  418132:	jns    0x418135
  418134:	cmp    al,0x83
  418136:	xchg   esp,eax
  418137:	out    dx,al
  418138:	xchg   esp,eax
  418139:	stc    
  41813a:	push   cs
  41813b:	sub    bh,BYTE PTR [edx+0xa]
  41813e:	cmp    ah,BYTE PTR [esi]
  418140:	push   es
  418141:	rol    BYTE PTR es:[ecx+0x56],cl
  418145:	outs   dx,BYTE PTR ds:[esi]
  418146:	inc    edx
  418147:	icebp  
  418148:	das    
  418149:	out    dx,al
  41814a:	pop    esp
  41814b:	ds cmp ecx,edx
  41814e:	and    ch,bl
  418150:	inc    ebx
  418151:	xor    ch,ch
  418153:	out    0xa3,eax
  418155:	in     al,0x2b
  418157:	das    
  418158:	fisub  WORD PTR [eax+0x2131a898]
  41815e:	outs   dx,DWORD PTR ds:[esi]
  41815f:	ins    BYTE PTR es:[edi],dx
  418160:	cmp    DWORD PTR [edi+edx*4-0x2e],esi
  418164:	push   0x3
  418166:	ficomp DWORD PTR [ebx-0x30]
  418169:	and    BYTE PTR [eax],dh
  41816b:	aaa    
  41816c:	pop    edx
  41816d:	(bad)  
  41816e:	sub    eax,ebp
  418170:	adc    BYTE PTR [edx+0x39],bl
  418173:	sar    DWORD PTR [edi],1
  418175:	arpl   WORD PTR [eax],ax
  418177:	outs   dx,DWORD PTR ds:[esi]
  418178:	xor    BYTE PTR [eax+eiz*2-0x4],bl
  41817c:	add    al,0xe1
  41817e:	cwde   
  41817f:	xor    BYTE PTR [ecx],dh
  418181:	icebp  
  418182:	mov    esi,0xb3804191
  418187:	push   ebx
  418188:	loopne 0x4181d0
  41818a:	ror    esp,0x37
  41818d:	jecxz  0x4181bf
  41818f:	scas   eax,DWORD PTR es:[edi]
  418190:	cs jb  0x418191
  418193:	add    DWORD PTR [ebx+0x14],edx
  418196:	push   0x62
  418198:	pop    edi
  418199:	sahf   
  41819a:	mov    cl,0xdc
  41819c:	mov    dl,0x38
  41819e:	mov    dl,0x63
  4181a0:	pop    ecx
  4181a1:	pop    es
  4181a2:	hlt    
  4181a3:	call   0xb836f243
  4181a8:	push   ecx
  4181a9:	iret   
  4181aa:	mov    ss,WORD PTR [esi-0x1ca03dc6]
  4181b0:	sub    ecx,edx
  4181b2:	shl    BYTE PTR [edx],1
  4181b4:	lods   eax,DWORD PTR ds:[esi]
  4181b5:	mov    esi,0xa46d5585
  4181ba:	arpl   WORD PTR [edx],bp
  4181bc:	scas   eax,DWORD PTR es:[edi]
  4181bd:	int3   
  4181be:	adc    DWORD PTR [edx+0x3a91314e],0x6ef4c471
  4181c8:	rol    BYTE PTR [edx-0x2d284310],0x68
  4181cf:	stos   DWORD PTR es:[edi],eax
  4181d0:	adc    BYTE PTR [ecx+ebx*4-0xc],al
  4181d4:	sub    eax,0xf7affc6
  4181d9:	cmp    cl,bh
  4181db:	iret   
  4181dc:	shl    DWORD PTR [edi-0x36],1
  4181df:	xchg   esi,eax
  4181e0:	or     ah,BYTE PTR [ebp+0x7]
  4181e3:	xor    BYTE PTR [edi],dh
  4181e5:	idiv   DWORD PTR [edx+0x76019692]
  4181eb:	push   ds
  4181ec:	inc    edx
  4181ed:	or     DWORD PTR [ecx+0x40],ebx
  4181f0:	aam    0x94
  4181f2:	jg     0x79d0e16c
  4181f8:	inc    esi
  4181f9:	jmp    0xa7fcf6e8
  4181fe:	leave  
  4181ff:	lods   eax,DWORD PTR ds:[esi]
  418200:	xor    BYTE PTR [ecx],ch
  418202:	cmp    al,0x98
  418204:	add    al,0xa4
  418206:	lods   al,BYTE PTR ds:[esi]
  418207:	and    al,0x78
  418209:	pushf  
  41820a:	inc    esp
  41820b:	test   DWORD PTR [ebx],esp
  41820d:	sub    ah,bl
  41820f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418210:	or     BYTE PTR ds:0x7473f410,ch
  418216:	call   0x8c6bb4c0
  41821b:	popf   
  41821c:	adc    al,0x56
  41821e:	sbb    esi,edx
  418220:	das    
  418221:	jge    0x418213
  418223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418224:	sti    
  418225:	jo     0x4181a9
  418227:	fist   WORD PTR [esi-0x25f0d424]
  41822d:	mov    ebx,0xf996ac56
  418232:	xlat   BYTE PTR ds:[ebx]
  418233:	mov    ebp,0x8292fe39
  418238:	leave  
  418239:	cmc    
  41823a:	xchg   edi,eax
  41823b:	outs   dx,BYTE PTR ds:[esi]
  41823c:	mov    bh,0xe
  41823e:	and    DWORD PTR [esi+0x7d4fdeb2],0x83804b93
  418248:	and    eax,0x8af9249a
  41824d:	xor    al,0x68
  41824f:	je     0x4181ef
  418251:	(bad)  
  418252:	cmp    DWORD PTR [eax+0x77136c2b],edi
  418258:	jle    0x41823a
  41825a:	cld    
  41825b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825c:	repz xor ebx,eax
  41825f:	mov    eax,ds:0x172cc697
  418264:	mov    cl,0x9e
  418266:	mov    bh,0xcd
  418268:	xchg   ebx,eax
  418269:	lods   al,BYTE PTR ds:[esi]
  41826a:	(bad)  
  41826b:	fcmovbe st,st(1)
  41826d:	jg     0x418258
  41826f:	pop    ebx
  418270:	pop    ebp
  418271:	inc    ebx
  418272:	sbb    al,0xb7
  418274:	dec    esp
  418275:	cmp    esi,DWORD PTR [esi+0x4f]
  418278:	mov    ch,0x4d
  41827a:	sti    
  41827b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827c:	dec    ebx
  41827d:	imul   eax,DWORD PTR [eax+edi*2-0x2a],0xffffffa3
  418282:	pusha  
  418283:	cmp    BYTE PTR [edx],bl
  418285:	and    eax,DWORD PTR [esi+0x48]
  418288:	test   DWORD PTR [esi+0x20],ebx
  41828b:	mov    WORD PTR [ecx+ebp*8],?
  41828e:	popf   
  41828f:	repz pop edx
  418291:	pop    ebx
  418292:	imul   edi,DWORD PTR ds:0x789cb733,0x26
  418299:	dec    ebx
  41829a:	adc    ebx,DWORD PTR [edi+0x28e0d91a]
  4182a0:	lahf   
  4182a1:	cwde   
  4182a2:	mov    ebp,0x3869bf12
  4182a7:	sbb    al,0xfb
  4182a9:	and    al,0xa7
  4182ab:	mov    ch,0xfd
  4182ad:	add    DWORD PTR [ecx+0x66],eax
  4182b0:	or     BYTE PTR [eax+eax*4-0x3d3ccae0],bh
  4182b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182b8:	test   DWORD PTR [edx+0x450b92d1],0x76ed1f2e
  4182c2:	push   es
  4182c3:	ins    DWORD PTR es:[edi],dx
  4182c4:	mov    bh,cl
  4182c6:	xor    BYTE PTR [eax-0x273bfce3],ch
  4182cc:	jmp    0x9742c553
  4182d1:	pop    ebx
  4182d2:	sar    BYTE PTR [ebp-0x542427fe],cl
  4182d8:	bound  ecx,QWORD PTR [ecx]
  4182da:	sub    bl,BYTE PTR [ecx+ebp*2]
  4182dd:	out    0x82,al
  4182df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182e0:	pop    edi
  4182e1:	mov    ah,0x5c
  4182e3:	call   0xd623:0x3e3d806c
  4182ea:	inc    edi
  4182eb:	mov    esp,0xba16043f
  4182f0:	jbe    0x418289
  4182f2:	sub    ch,BYTE PTR [esi+eiz*8+0x45ac8324]
  4182f9:	fisubr DWORD PTR [ecx+0x10]
  4182fc:	aaa    
  4182fd:	(bad)  [ecx]
  4182ff:	sti    
  418300:	cli    
  418301:	and    al,0xb3
  418303:	xor    ebp,esp
  418305:	dec    edi
  418306:	out    0x5a,eax
  418308:	stc    
  418309:	fnsave [ebx+eiz*2+0x3b3c4d2c]
  418310:	(bad)  
  418311:	stos   BYTE PTR es:[edi],al
  418312:	loope  0x418381
  418314:	sar    bl,1
  418316:	push   ebx
  418317:	sbb    ebp,DWORD PTR [ecx-0x20]
  41831a:	or     ebp,0x14495068
  418320:	mov    al,0xd
  418322:	push   esp
  418323:	xor    al,0x89
  418325:	cdq    
  418326:	sahf   
  418327:	push   0xffffffd8
  418329:	shl    BYTE PTR [esi+0xa7758d7],cl
  41832f:	sar    BYTE PTR [eax+edx*8+0x55816],0x69
  418337:	retf   
  418338:	sub    BYTE PTR [edx-0x1f3c5be4],ch
  41833e:	sub    al,0xd9
  418340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418341:	cmp    DWORD PTR [esi+0x5a],esp
  418344:	xor    al,0x83
  418346:	xor    ah,BYTE PTR [esi+0x3810d606]
  41834c:	cmp    eax,0x2fc2cca8
  418351:	mov    bl,0x66
  418353:	mov    DWORD PTR [eax],edx
  418355:	pop    edi
  418356:	outs   dx,BYTE PTR ds:[esi]
  418357:	and    ah,0xba
  41835a:	lahf   
  41835b:	mov    esp,0x75792fad
  418360:	dec    edi
  418361:	mov    dl,0xa5
  418363:	pop    ebp
  418364:	add    eax,esi
  418366:	xor    BYTE PTR [edi+0x56],al
  418369:	ret    
  41836a:	scas   eax,DWORD PTR es:[edi]
  41836b:	mov    ch,0x18
  41836d:	outs   dx,BYTE PTR ds:[esi]
  41836e:	mov    bl,0x4b
  418370:	adc    DWORD PTR [edi-0xb7a0169],esi
  418376:	cs out 0x74,al
  418379:	inc    ebp
  41837a:	mov    ecx,0x9448cfbe
  41837f:	dec    eax
  418380:	jmp    0x4a3951cf
  418385:	fsub   QWORD PTR [ecx]
  418387:	jbe    0x4183dd
  418389:	dec    edx
  41838a:	jns    0x41839b
  41838c:	or     eax,0x94dc913
  418391:	sub    al,0x63
  418393:	ja     0x418364
  418395:	std    
  418396:	scas   eax,DWORD PTR es:[edi]
  418397:	gs stos BYTE PTR es:[edi],al
  418399:	pusha  
  41839a:	addr16 gs xchg ebp,eax
  41839d:	cmp    ch,BYTE PTR [edx+0x59a219a4]
  4183a3:	fisttp DWORD PTR [ecx+ebp*8-0x55]
  4183a7:	pusha  
  4183a8:	into   
  4183a9:	push   0x7055ef40
  4183ae:	or     al,0x39
  4183b0:	pop    DWORD PTR [eax+0x5a]
  4183b3:	push   ss
  4183b4:	jge    0x418374
  4183b6:	inc    edx
  4183b7:	add    al,0xd7
  4183b9:	mov    dh,0x95
  4183bb:	(bad)  
  4183bd:	jno    0x4183ab
  4183bf:	dec    esi
  4183c0:	jno    0x4183c9
  4183c2:	mov    bh,0xfa
  4183c4:	(bad)  [ebx+0x55cf1e3e]
  4183ca:	mov    ch,0xb0
  4183cc:	pop    ss
  4183cd:	pop    esp
  4183ce:	repz test ah,al
  4183d1:	or     eax,0x49bfc327
  4183d6:	sahf   
  4183d7:	inc    edi
  4183d8:	lahf   
  4183d9:	sbb    edx,DWORD PTR [ebp+0x55]
  4183dc:	sbb    BYTE PTR [ebp-0x1fd5f979],0x5f
  4183e3:	lock test DWORD PTR [ebp+0x46],0xb6f5004e
  4183eb:	pop    es
  4183ec:	sbb    eax,0xad307c15
  4183f1:	or     BYTE PTR ds:0x1af6d420,0x69
  4183f8:	sbb    edi,0x5b7dd625
  4183fe:	push   es
  4183ff:	jb     0x4183e8
  418401:	sub    al,0x27
  418403:	jmp    0x4183fd
  418405:	pop    esi
  418406:	and    al,0x29
  418408:	mov    ch,0x0
  41840a:	and    BYTE PTR ds:0xc0f343d1,cl
  418410:	mov    WORD PTR [edx-0x89e8d70],ss
  418416:	inc    ebp
  418417:	clc    
  418418:	dec    edi
  418419:	(bad)  
  41841a:	push   edi
  41841b:	(bad)  
  41841c:	mov    bl,0x93
  41841e:	adc    DWORD PTR [ecx],ebx
  418420:	fld    QWORD PTR [esi+0x19]
  418423:	popf   
  418424:	aaa    
  418425:	daa    
  418426:	or     esp,DWORD PTR [edx+0x2a6ac1b2]
  41842c:	js     0x418449
  41842e:	jae    0x4184af
  418430:	les    esi,FWORD PTR [edx]
  418432:	in     al,0x6a
  418434:	mov    ds:0x403f01b2,eax
  418439:	hlt    
  41843a:	add    DWORD PTR [edi-0x4626c3e3],0xffffffd7
  418441:	pandn  mm0,QWORD PTR ds:0xf25ada5d
  418448:	pop    ds
  418449:	pop    edi
  41844a:	adc    al,0x48
  41844c:	pop    ebp
  41844d:	(bad)  
  41844e:	jns    0x41849c
  418450:	pusha  
  418451:	or     cl,dh
  418453:	shl    BYTE PTR [edx+ebx*2],0xc8
  418457:	mov    edx,0x9a6ffdb
  41845c:	mov    DWORD PTR [edi+edi*8+0x6c],edi
  418460:	add    dl,BYTE PTR [ebx-0x3]
  418463:	or     esi,DWORD PTR [edi]
  418465:	dec    ebx
  418466:	std    
  418467:	fwait
  418468:	cdq    
  418469:	sar    DWORD PTR [eax-0x7],1
  41846c:	inc    esi
  41846d:	lods   eax,DWORD PTR ds:[esi]
  41846e:	stos   BYTE PTR es:[edi],al
  41846f:	lock jmp 0x26bb0167
  418475:	push   es
  418476:	pop    esp
  418477:	fwait
  418478:	xchg   bh,cl
  41847a:	daa    
  41847b:	mov    al,0x35
  41847d:	sbb    eax,0x8b19d3dd
  418482:	cwde   
  418483:	jbe    0x4184b2
  418485:	pop    edi
  418486:	push   cs
  418487:	ins    DWORD PTR es:[edi],dx
  418488:	mov    esi,0x811f3026
  41848d:	sbb    BYTE PTR [esi],0x22
  418490:	(bad)  
  418491:	push   0x4b4f9016
  418496:	ror    DWORD PTR [edi],1
  418498:	movq   QWORD PTR [ebx+0x56],mm5
  41849c:	pop    ecx
  41849d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41849e:	and    BYTE PTR [ebp-0x60],ch
  4184a1:	mov    edx,0x6043df4f
  4184a6:	ja     0x418496
  4184a8:	pop    ss
  4184a9:	add    eax,0xe1a2ab7a
  4184ae:	stos   BYTE PTR es:[edi],al
  4184af:	xchg   BYTE PTR [ebx-0x44],ah
  4184b2:	ja     0x4184fa
  4184b4:	add    DWORD PTR [eax+edi*1+0x42],ebx
  4184b8:	stos   DWORD PTR es:[edi],eax
  4184b9:	sbb    al,0xea
  4184bb:	int3   
  4184bc:	in     al,0xd9
  4184be:	or     al,0xa3
  4184c0:	add    BYTE PTR [esi],ch
  4184c2:	pop    ecx
  4184c3:	mov    ebp,0xa5158c8b
  4184c8:	push   ebx
  4184c9:	pop    edi
  4184ca:	retf   
  4184cb:	mov    bl,0x5c
  4184cd:	ja     0x41850c
  4184cf:	or     BYTE PTR [ecx],0xe3
  4184d2:	push   edx
  4184d3:	push   ss
  4184d4:	xor    eax,DWORD PTR ds:0xd8a029
  4184da:	push   ss
  4184db:	mov    DWORD PTR [ebx+ecx*8+0x6f],edi
  4184df:	xchg   esi,eax
  4184e0:	cmp    BYTE PTR [edx],ah
  4184e2:	dec    edi
  4184e3:	mov    edi,?
  4184e5:	mov    dl,bh
  4184e7:	mov    dh,0xb4
  4184e9:	jns    0x4184fa
  4184eb:	fidivr DWORD PTR [edx]
  4184ed:	fmul   DWORD PTR [ebp-0x1a]
  4184f0:	fcom   DWORD PTR [esi-0x2b]
  4184f3:	ds sbb cl,0x53
  4184f7:	daa    
  4184f8:	lods   eax,DWORD PTR ds:[esi]
  4184f9:	jae    0x41855b
  4184fb:	jne    0x418514
  4184fd:	jecxz  0x418533
  4184ff:	mov    edi,0x10c5c8c4
  418504:	pusha  
  418505:	mov    edx,0xf6c260d0
  41850a:	or     DWORD PTR [esi-0x707e522e],0x6441ea2e
  418514:	jp     0x418578
  418516:	aam    0xce
  418518:	adc    al,0x30
  41851a:	mov    ebx,0x7ccff123
  41851f:	repz mov dh,0x75
  418522:	cmp    DWORD PTR [edx],ebx
  418524:	ret    
  418525:	xor    esp,0x3879f69e
  41852b:	ins    BYTE PTR es:[edi],dx
  41852c:	cvtdq2ps xmm6,XMMWORD PTR [eax-0x34b157c2]
  418533:	sub    BYTE PTR [edx],ah
  418535:	mov    eax,ds:0x88d2cae6
  41853a:	iret   
  41853b:	jg     0x4185b0
  41853d:	inc    esp
  41853e:	sub    ebx,ecx
  418540:	xor    BYTE PTR [edx-0x2014b6ef],al
  418546:	lahf   
  418547:	inc    esi
  418548:	and    dh,ah
  41854a:	mov    ecx,0xe05114ff
  41854f:	push   eax
  418550:	or     BYTE PTR [edi+0x7e],ah
  418553:	inc    ecx
  418554:	int    0x44
  418556:	cmp    eax,DWORD PTR [edx+eax*2]
  418559:	int    0xb9
  41855b:	push   eax
  41855c:	stc    
  41855d:	or     dl,BYTE PTR [esi+0xee11c44]
  418563:	mov    eax,0xf5639174
  418568:	jecxz  0x4184f3
  41856a:	sbb    DWORD PTR ds:0xbc1e5f6a,ebp
  418570:	xor    ebx,DWORD PTR [ebx-0x34]
  418573:	outs   dx,DWORD PTR ds:[esi]
  418574:	daa    
  418575:	push   0x6860e6da
  41857a:	push   edi
  41857b:	imul   ecx,DWORD PTR [esi],0xb781e992
  418581:	push   0x9ada0ef7
  418586:	pop    ecx
  418587:	jmp    FWORD PTR [ecx+0x450ac776]
  41858d:	mov    al,ds:0x46dbdf96
  418592:	push   ss
  418593:	sub    dh,0x8f
  418596:	call   0x1bd7f22
  41859b:	push   es
  41859c:	jae    0x418545
  41859e:	repnz into 
  4185a0:	mov    ebx,0x2488ad15
  4185a5:	ja     0x418566
  4185a7:	loope  0x41858a
  4185a9:	sbb    ecx,esp
  4185ab:	ror    BYTE PTR [ebx+0x220f2906],cl
  4185b1:	iret   
  4185b2:	add    al,0xcd
  4185b4:	push   0xd80789ff
  4185b9:	retf   0x4769
  4185bc:	push   edi
  4185bd:	sahf   
  4185be:	mov    bl,BYTE PTR [ebx+0x1ee6725d]
  4185c4:	test   DWORD PTR [ebx],0xc62e0a5
  4185ca:	mov    ch,0x44
  4185cc:	out    dx,al
  4185cd:	inc    ebp
  4185ce:	sub    al,0xe4
  4185d0:	inc    eax
  4185d1:	(bad)  
  4185d2:	(bad)  
  4185d3:	fnstenv [ebp+0x36a1f0ca]
  4185d9:	inc    ebp
  4185da:	std    
  4185db:	sti    
  4185dc:	xchg   BYTE PTR ds:[edx-0x61],ch
  4185e0:	das    
  4185e1:	and    ch,BYTE PTR [edi]
  4185e3:	ret    
  4185e4:	cdq    
  4185e5:	mov    bh,0x74
  4185e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e8:	mov    ss,WORD PTR [edi+0x23]
  4185eb:	xchg   esi,eax
  4185ec:	mov    eax,0x3b73f626
  4185f1:	popa   
  4185f2:	retf   
  4185f3:	popa   
  4185f4:	and    BYTE PTR [esp+esi*2-0x1f1a0650],ah
  4185fb:	jmp    0x418624
  4185fd:	push   ss
  4185fe:	sbb    BYTE PTR [ebx-0x199c0b59],ah
  418604:	or     BYTE PTR [ebx+0x7e29d353],0x74
  41860b:	cwde   
  41860c:	sbb    BYTE PTR [edx+0x7b],cl
  41860f:	stos   BYTE PTR es:[edi],al
  418610:	sub    ch,BYTE PTR [edx+edi*4]
  418613:	dec    eax
  418614:	mov    esi,edi
  418616:	adc    eax,0x8dd3f481
  41861b:	ja     0x418644
  41861d:	and    al,0xec
  41861f:	iret   
  418620:	mov    dl,0xa8
  418622:	ja     0x418650
  418624:	in     al,0x40
  418626:	in     al,0xbc
  418628:	xchg   ebp,eax
  418629:	shl    cl,1
  41862b:	sub    dh,0x8b
  41862e:	xchg   esi,eax
  41862f:	shr    DWORD PTR [edi+0x4e],0x9c
  418633:	sbb    al,0x8d
  418635:	inc    esi
  418636:	aas    
  418637:	ins    BYTE PTR es:[edi],dx
  418638:	in     al,0x1e
  41863a:	es dec ecx
  41863c:	out    dx,al
  41863d:	je     0x41867f
  41863f:	push   esi
  418640:	cmp    DWORD PTR [edi-0x2c8e7292],0x9c80968
  41864a:	rcl    DWORD PTR [ebp-0x61d0e07e],0x46
  418651:	loopne 0x418648
  418653:	push   edx
  418654:	inc    DWORD PTR [ebx-0x7cc7d1eb]
  41865a:	repz loop 0x41864f
  41865d:	xchg   BYTE PTR [edi-0x51],bl
  418660:	push   edi
  418661:	and    DWORD PTR ds:0xa61483e4,edx
  418667:	in     al,0x76
  418669:	sbb    al,0xf0
  41866b:	sub    ebp,DWORD PTR [ebp-0x62]
  41866e:	xchg   ebx,eax
  41866f:	lods   al,BYTE PTR ds:[esi]
  418670:	push   ss
  418671:	mov    ebx,0x27cd5888
  418676:	gs add eax,0x7a5776e5
  41867c:	ficomp DWORD PTR [ebx+0x431839ec]
  418682:	cmp    bh,cl
  418684:	(bad)  
  418685:	ficomp DWORD PTR [ebx-0x75d75278]
  41868b:	mov    al,ds:0x113e42b4
  418690:	out    dx,eax
  418691:	ds xchg ebp,eax
  418693:	pusha  
  418694:	add    ebx,DWORD PTR [edx-0x7a33ee51]
  41869a:	mov    edi,0x4a44d87d
  41869f:	hlt    
  4186a0:	out    0x12,eax
  4186a2:	inc    eax
  4186a3:	(bad)  
  4186a4:	stos   DWORD PTR es:[edi],eax
  4186a5:	loopne 0x41863c
  4186a7:	cmp    al,0xed
  4186a9:	sub    DWORD PTR [ebp-0x3],eax
  4186ac:	pop    esi
  4186ad:	xor    bh,BYTE PTR ds:0xd1eaa784
  4186b3:	neg    esi
  4186b5:	iret   
  4186b6:	pop    es
  4186b7:	mov    esi,0x209c515e
  4186bc:	adc    al,0x8c
  4186be:	mov    cl,0xd7
  4186c0:	jae    0x4186d6
  4186c2:	xlat   BYTE PTR ds:[ebx]
  4186c3:	fdivr  QWORD PTR [ecx-0x48]
  4186c7:	fsub   QWORD PTR [ebx-0x2b8eec5c]
  4186cd:	dec    edx
  4186ce:	call   0x9bce:0xc2d28f71
  4186d5:	fisubr DWORD PTR [edx+esi*2]
  4186d8:	repnz mov eax,ds:0x402cb81d
  4186de:	mov    dl,0x76
  4186e0:	loop   0x41866e
  4186e2:	gs inc edi
  4186e4:	dec    eax
  4186e5:	es push 0x84222d70
  4186eb:	or     eax,0x17c8f052
  4186f0:	aaa    
  4186f1:	loope  0x418745
  4186f3:	aad    0xd
  4186f5:	sahf   
  4186f6:	jecxz  0x418730
  4186f8:	or     al,ch
  4186fa:	adc    eax,0x2b49d6e9
  4186ff:	add    edi,DWORD PTR [ebp-0x2d5e401a]
  418705:	sti    
  418706:	bts    DWORD PTR [edx+0x5b],ebp
  41870a:	xchg   ecx,eax
  41870b:	inc    eax
  41870c:	pop    esi
  41870d:	xchg   edx,eax
  41870e:	jmp    0xd04d43b2
  418713:	lods   al,BYTE PTR ds:[esi]
  418714:	outs   dx,DWORD PTR ds:[esi]
  418715:	jle    0x41874e
  418717:	mov    ebp,0x5687bf73
  41871c:	idiv   DWORD PTR [esi-0x4f]
  41871f:	jmp    0x4186af
  418721:	std    
  418722:	mov    esi,DWORD PTR [edi]
  418724:	sub    esi,eax
  418726:	pushf  
  418727:	std    
  418728:	mov    ah,0x8f
  41872a:	or     eax,0xa04a6cd4
  41872f:	cmp    esi,DWORD PTR [ecx]
  418731:	cmc    
  418732:	cld    
  418733:	dec    esp
  418734:	in     eax,0xde
  418736:	sub    BYTE PTR [ebp+0x14],dl
  418739:	and    al,0x4c
  41873b:	scas   al,BYTE PTR es:[edi]
  41873c:	(bad)  
  41873d:	fcomip st,st(5)
  41873f:	test   ecx,edi
  418741:	pop    edi
  418742:	(bad)  
  418743:	aam    0x3b
  418745:	out    0x6,eax
  418747:	leave  
  418748:	sub    ah,BYTE PTR [ecx]
  41874a:	popf   
  41874b:	loopne 0x418722
  41874d:	jno    0x418781
  41874f:	fmul   QWORD PTR [esi+0x32]
  418752:	or     ecx,DWORD PTR [ecx]
  418754:	sub    DWORD PTR [edi],esi
  418756:	(bad)  ss:[edi]
  418759:	sbb    ecx,DWORD PTR [ecx]
  41875b:	repz ja 0x4187bd
  41875e:	pop    edi
  41875f:	and    eax,0x41369872
  418764:	(bad)  
  418765:	fiadd  DWORD PTR [eax+0x6f99ab50]
  41876b:	int    0x5c
  41876d:	out    0xde,eax
  41876f:	sbb    ah,bh
  418771:	adc    ebp,DWORD PTR [ecx-0x25]
  418774:	jp     0x4187f4
  418776:	xchg   edi,eax
  418777:	mov    dl,0xb
  418779:	xchg   edi,eax
  41877a:	sbb    eax,esp
  41877c:	fs inc ebp
  41877e:	mov    bh,0x47
  418780:	jg     0x41870a
  418782:	mov    ebx,0xa446b7c2
  418787:	sar    BYTE PTR [esi+eax*4+0x90790c8],1
  41878e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41878f:	mov    cl,0xde
  418791:	sahf   
  418792:	frstor [ecx+0x75]
  418795:	or     esp,ecx
  418797:	sbb    bh,BYTE PTR [edi-0x6ab52e41]
  41879d:	sub    ch,bl
  41879f:	pop    esi
  4187a0:	test   eax,0x55ac185e
  4187a5:	(bad)  
  4187a7:	xchg   ecx,eax
  4187a8:	mov    gs,WORD PTR [eax+0x0]
  4187ab:	shr    BYTE PTR [edx],cl
  4187ad:	hlt    
  4187ae:	test   DWORD PTR [ebp+0x2697dd1b],esi
  4187b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b5:	test   DWORD PTR [ebp+0x4ef300a],edx
  4187bb:	imul   ebx,DWORD PTR [edi],0x32
  4187be:	and    al,0x43
  4187c0:	pusha  
  4187c1:	repz call 0xfebb1cf9
  4187c7:	retf   0xed8d
  4187ca:	mov    ecx,0xb0e94ddd
  4187cf:	out    0xc,al
  4187d1:	loope  0x41879b
  4187d3:	popa   
  4187d4:	call   0x95f2:0xd6f279db
  4187db:	ds inc ebx
  4187dd:	jle    0x4187fd
  4187df:	stc    
  4187e0:	xchg   bh,al
  4187e2:	out    dx,al
  4187e3:	enter  0x3ad7,0x57
  4187e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e8:	cs pop ebx
  4187ea:	into   
  4187eb:	retf   0xe752
  4187ee:	push   edx
  4187ef:	xor    al,0xa
  4187f1:	repz inc edi
  4187f3:	test   al,0xe4
  4187f5:	push   edx
  4187f6:	aas    
  4187f7:	inc    edx
  4187f8:	es scas eax,DWORD PTR es:[edi]
  4187fa:	mov    ds:0x9405611,al
  4187ff:	ins    BYTE PTR es:[edi],dx
  418800:	into   
  418801:	(bad)  
  418802:	cmp    al,0x49
  418804:	cmp    al,0x9e
  418806:	jle    0x4187bc
  418808:	add    DWORD PTR [ebx+0x4b],0x9b8bc7f4
  41880f:	aam    0x37
  418811:	mov    ecx,DWORD PTR [eax-0xf]
  418814:	int    0xfe
  418816:	xchg   edi,eax
  418817:	xchg   edx,eax
  418819:	out    dx,al
  41881a:	jns    0x4187bf
  41881c:	jp     0x41886f
  41881e:	outs   dx,DWORD PTR ds:[esi]
  41881f:	mov    DWORD PTR [ebx+0x4f],ebp
  418822:	psubb  mm0,QWORD PTR ds:0x627bf55e
  418829:	stos   DWORD PTR es:[edi],eax
  41882a:	mov    esp,0x3318b75f
  41882f:	or     BYTE PTR [edx-0x10933106],dh
  418835:	mov    cl,0x35
  418837:	jbe    0x41880c
  418839:	jp     0x41889f
  41883b:	xor    ebp,DWORD PTR [edx]
  41883d:	jg     0x41888f
  41883f:	out    dx,al
  418840:	int    0x37
  418842:	push   0xffffffd5
  418844:	xor    DWORD PTR [ebp+0x192b0ca1],esi
  41884a:	jge    0x41882b
  41884c:	mov    BYTE PTR [esi-0x13242edc],0x1
  418853:	jmp    0x1d16:0xd63eb293
  41885a:	lods   eax,DWORD PTR ds:[esi]
  41885b:	sub    eax,0xb75386b0
  418860:	jne    0x418881
  418862:	cdq    
  418863:	xchg   DWORD PTR [ebp-0x7b],edx
  418866:	lock ins BYTE PTR es:[edi],dx
  418868:	adc    ah,BYTE PTR [edi-0x34a50e08]
  41886e:	pop    es
  41886f:	fcomp  DWORD PTR [esi]
  418871:	jne    0x41883c
  418873:	mov    ebx,0xed8fa23a
  418878:	(bad)  
  418879:	stos   DWORD PTR es:[edi],eax
  41887a:	inc    ebx
  41887b:	or     ebp,edi
  41887d:	ins    DWORD PTR es:[edi],dx
  41887e:	xlat   BYTE PTR ds:[ebx]
  41887f:	mov    eax,0x74264a15
  418884:	and    al,0x67
  418886:	unpckhps xmm1,xmm7
  418889:	int3   
  41888a:	popf   
  41888b:	add    BYTE PTR [ebx],ah
  41888d:	jne    0x418895
  41888f:	push   ds
  418890:	sbb    DWORD PTR [eax+0x7],0x3f
  418894:	adc    eax,DWORD PTR [esi+edi*4-0x54]
  418898:	pop    edx
  418899:	jp     0x4188d5
  41889b:	andps  xmm6,XMMWORD PTR [eax+0x7824b3d3]
  4188a2:	out    0xe6,al
  4188a4:	adc    BYTE PTR [esi+esi*4],bh
  4188a7:	test   al,0x2d
  4188a9:	test   al,0xaf
  4188ac:	xor    eax,0x557ff550
  4188b1:	inc    ebp
  4188b2:	jle    0x41884a
  4188b4:	ins    DWORD PTR es:[edi],dx
  4188b5:	adc    eax,esi
  4188b7:	jg     0x418907
  4188b9:	or     DWORD PTR [esi-0xbe1ad87],ebp
  4188bf:	push   esp
  4188c0:	xchg   edx,eax
  4188c1:	cwde   
  4188c2:	out    dx,al
  4188c3:	fcmovu st,st(2)
  4188c5:	jo     0x41892f
  4188c7:	xchg   ecx,eax
  4188c8:	dec    ecx
  4188c9:	cmp    edx,DWORD PTR [ecx]
  4188cb:	iret   
  4188cc:	jmp    0x9288:0x7dce3ecb
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	mov    ds:0xf05ee1bf,eax
  4188d9:	pop    ebx
  4188da:	and    dl,0xfa
  4188dd:	js     0x4188a2
  4188df:	adc    eax,DWORD PTR [edx-0x7af4cdbd]
  4188e5:	jb     0x41886b
  4188e7:	cmp    ah,BYTE PTR [ecx+ecx*4-0x7c]
  4188eb:	fistp  QWORD PTR [ebx+0x19221b68]
  4188f1:	test   ch,bl
  4188f3:	aam    0x9f
  4188f5:	out    dx,al
  4188f6:	dec    eax
  4188f7:	sahf   
  4188f8:	sub    eax,0xf6d0c8da
  4188fd:	daa    
  4188fe:	shl    DWORD PTR [ecx],1
  418900:	add    al,0xdc
  418902:	test   eax,0x68cbb308
  418907:	lock xor ch,BYTE PTR [edi-0xb]
  41890b:	cdq    
  41890c:	shr    DWORD PTR [ecx-0x5422e506],1
  418912:	call   0x6f16400d
  418917:	pop    eax
  418918:	fidivr WORD PTR [ebp+0xc]
  41891b:	cld    
  41891c:	pop    ecx
  41891d:	sbb    ah,BYTE PTR [ebx-0x29]
  418920:	(bad)  
  418921:	adc    eax,0x30175388
  418926:	pop    edx
  418927:	xchg   ecx,eax
  418928:	xchg   DWORD PTR [bp-0x5e],eax
  41892c:	cld    
  41892d:	mov    edx,DWORD PTR [ebp+0x6c]
  418930:	in     al,0x2f
  418932:	rol    BYTE PTR [edx+0xf],cl
  418935:	adc    ebp,DWORD PTR [eax-0x407f24b0]
  41893b:	push   ebx
  41893c:	sub    DWORD PTR [edi],edx
  41893e:	and    eax,0x1260870c
  418943:	mov    ebp,0x8a3d42f
  418948:	jecxz  0x4189bc
  41894a:	push   edi
  41894b:	aaa    
  41894c:	outs   dx,BYTE PTR ds:[esi]
  41894d:	mov    eax,0xe1c17d0c
  418952:	jae    0x4189b0
  418954:	js     0x4188dd
  418956:	pop    dx
  418958:	adc    DWORD PTR [eax+0x7e9d27b0],edi
  41895e:	in     eax,dx
  41895f:	mov    al,0xa1
  418961:	sub    eax,DWORD PTR [eax+0x49e6d335]
  418967:	dec    eax
  418968:	loope  0x41891f
  41896a:	mov    BYTE PTR [edi-0xe],bh
  41896d:	and    DWORD PTR [ebx+0x46fb75e],ebx
  418973:	dec    ebp
  418974:	mov    dh,0xa2
  418976:	stos   DWORD PTR es:[edi],eax
  418977:	shl    DWORD PTR [eax],0xbb
  41897a:	adc    eax,0x6a59aea0
  41897f:	or     esp,0xffffffaa
  418982:	mov    ebp,0x84099cdf
  418987:	leave  
  418988:	out    dx,eax
  418989:	push   esi
  41898a:	fist   WORD PTR ds:0x90950f4
  418990:	fidiv  WORD PTR [ecx-0x59da10cf]
  418996:	call   0x2004e53a
  41899b:	jge    0x418a13
  41899d:	ret    0x7f11
  4189a0:	es out 0xcb,al
  4189a3:	jae    0x4189ed
  4189a5:	and    DWORD PTR [esi+0x7d48abfb],edx
  4189ab:	cli    
  4189ac:	ret    
  4189ad:	in     eax,0xcb
  4189af:	popf   
  4189b0:	pop    edx
  4189b1:	(bad)  
  4189b3:	(bad)  
  4189b4:	out    dx,al
  4189b5:	(bad)  
  4189b6:	int    0x8f
  4189b8:	pop    ebp
  4189b9:	sub    bh,dh
  4189bb:	mov    cl,0x3f
  4189bd:	mov    edx,0x34b17a18
  4189c2:	in     eax,dx
  4189c3:	ins    BYTE PTR es:[edi],dx
  4189c4:	xadd   BYTE PTR [ecx-0x7e18a987],cl
  4189cb:	and    ebp,eax
  4189cd:	push   esi
  4189ce:	xchg   ecx,eax
  4189cf:	cs leave 
  4189d1:	stc    
  4189d2:	retf   
  4189d3:	pop    edi
  4189d4:	enter  0xa9d7,0x64
  4189d8:	pop    es
  4189d9:	pop    esi
  4189da:	ja     0x4189e7
  4189dc:	jns    0x418999
  4189de:	fwait
  4189df:	jecxz  0x41898c
  4189e1:	push   ebp
  4189e2:	fiadd  DWORD PTR [edx]
  4189e4:	adc    BYTE PTR [edi+0x1a],al
  4189e7:	fcomp  DWORD PTR [esi]
  4189e9:	(bad)  
  4189ea:	adc    eax,eax
  4189ec:	in     al,0x3d
  4189ee:	fild   DWORD PTR [ecx]
  4189f0:	(bad)  
  4189f1:	xchg   edi,eax
  4189f2:	dec    dl
  4189f4:	daa    
  4189f5:	mov    ds:0xefbd9919,eax
  4189fa:	lea    esp,[edi+edx*2]
  4189fd:	in     al,dx
  4189fe:	mov    eax,0x15f657a
  418a03:	mov    ds:0x295bcd27,al
  418a08:	popf   
  418a09:	jns    0x418a40
  418a0b:	jmp    0x2d685407
  418a10:	arpl   WORD PTR [ebp-0x7],dx
  418a13:	add    DWORD PTR [edx+0x39],0x32
  418a17:	xor    DWORD PTR [ebp+0x6530cd0b],ecx
  418a1d:	dec    ecx
  418a1e:	mov    dl,0xa3
  418a20:	iret   
  418a21:	sbb    esp,esp
  418a23:	dec    ebx
  418a24:	mov    ecx,cs
  418a26:	fs (bad) 
  418a28:	and    cl,BYTE PTR ds:0x728291b9
  418a2e:	jb     0x418a12
  418a30:	ficom  DWORD PTR [ebx]
  418a32:	pop    esi
  418a33:	jge    0x418a1c
  418a35:	jecxz  0x418a0f
  418a37:	clc    
  418a38:	dec    edi
  418a39:	push   ss
  418a3a:	push   cs
  418a3b:	inc    edx
  418a3c:	ror    BYTE PTR [esi],cl
  418a3e:	out    dx,al
  418a3f:	xchg   ecx,eax
  418a40:	xchg   BYTE PTR [ebx-0x47155fc3],ch
  418a46:	push   edi
  418a47:	in     eax,0xfc
  418a49:	mov    al,0xbe
  418a4b:	sub    eax,0x64469d8f
  418a50:	mov    ecx,0x9dc118cb
  418a55:	fdivr  st,st(7)
  418a57:	dec    edx
  418a58:	in     eax,dx
  418a59:	push   edx
  418a5a:	cmp    BYTE PTR [edi+0x50],0x9a
  418a5e:	loopne 0x418a21
  418a60:	shl    BYTE PTR [ebx+eax*1],cl
  418a63:	jne    0x418a90
  418a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a66:	inc    ebp
  418a67:	std    
  418a68:	jecxz  0x4189fa
  418a6a:	fist   DWORD PTR [ecx-0x3b]
  418a6d:	push   es
  418a6e:	jb     0x418abc
  418a70:	out    dx,al
  418a71:	fcmovbe st,st(4)
  418a73:	jp     0x418ad6
  418a75:	xchg   esp,eax
  418a76:	jb     0x418ad5
  418a78:	sbb    dl,bh
  418a7a:	sar    bl,1
  418a7c:	popa   
  418a7d:	jae    0x418a85
  418a7f:	adc    al,0x72
  418a81:	pop    ds
  418a82:	add    eax,0xd72babea
  418a87:	and    al,0x13
  418a89:	mov    cs,WORD PTR [ecx+eiz*2-0x7832dd43]
  418a90:	ja     0x418a2d
  418a92:	pop    edi
  418a93:	pop    ebx
  418a94:	mov    ch,0x78
  418a96:	mov    ds:0x5be5dcb7,eax
  418a9b:	push   ss
  418a9c:	sbb    ch,BYTE PTR [ecx]
  418a9e:	jg     0x418a5f
  418aa0:	xor    BYTE PTR [esi],cl
  418aa2:	cs div ah
  418aa5:	sub    DWORD PTR [eax+0x52fcd14],edi
  418aab:	sub    eax,0x4325c47b
  418ab0:	mov    ecx,0x3c7332f3
  418ab5:	jmp    0x1f0a:0xe88493fc
  418abc:	push   edi
  418abd:	test   ebp,ecx
  418abf:	es loope 0x418a82
  418ac2:	pop    ds
  418ac3:	rcl    ebp,0xc3
  418ac6:	adc    ecx,DWORD PTR [ecx-0x5d]
  418ac9:	sbb    DWORD PTR [edi+0x13],ebp
  418acc:	pop    es
  418acd:	push   ebp
  418ace:	push   esp
  418acf:	mov    ch,bh
  418ad1:	(bad)  
  418ad2:	sub    esi,DWORD PTR [ecx+ecx*1-0x1060a41c]
  418ad9:	imul   edi,DWORD PTR [esp+eiz*4-0x6509a448],0xcf1d788f
  418ae4:	dec    ax
  418ae6:	fcom   QWORD PTR [ebp-0x60452784]
  418aec:	mov    esi,0x1b0bc2c
  418af1:	inc    edx
  418af2:	adc    eax,edx
  418af4:	inc    edi
  418af5:	mov    BYTE PTR [ebx-0x63],al
  418af8:	fs fwait
  418afa:	retf   0x9a94
  418afd:	clc    
  418afe:	leave  
  418aff:	scas   al,BYTE PTR es:[edi]
  418b00:	dec    esp
  418b01:	jg     0x418ae4
  418b03:	mov    WORD PTR [ecx+ebp*4-0x62],ds
  418b07:	inc    ebx
  418b08:	mov    ds:0x880ed916,eax
  418b0d:	imul   esi,ebx,0xffffffb5
  418b10:	xchg   esp,eax
  418b11:	jg     0x418b59
  418b13:	xchg   ebx,eax
  418b14:	inc    edx
  418b15:	dec    esi
  418b16:	cmp    eax,0xf71dcf58
  418b1b:	jno    0x418b58
  418b1d:	sub    al,0x30
  418b1f:	loope  0x418b3f
  418b21:	pop    ebx
  418b22:	add    eax,0xc88f2be
  418b27:	cwde   
  418b28:	fisttp QWORD PTR [ebx]
  418b2a:	call   0x75076d5
  418b2f:	in     al,dx
  418b30:	leave  
  418b31:	ins    DWORD PTR es:[edi],dx
  418b32:	jno    0x418b60
  418b34:	sub    eax,0xfa882623
  418b39:	mov    ch,0xa0
  418b3b:	out    0x86,eax
  418b3d:	cmp    eax,0x4afc4cd7
  418b42:	popa   
  418b43:	inc    ecx
  418b44:	push   es
  418b45:	cmc    
  418b46:	and    edi,DWORD PTR [ecx]
  418b48:	loopne 0x418ad3
  418b4a:	sbb    eax,0xcf60c997
  418b4f:	xchg   ecx,eax
  418b50:	aas    
  418b51:	xchg   ebp,eax
  418b52:	pop    ds
  418b53:	inc    ebp
  418b54:	xor    edx,ebx
  418b56:	les    eax,FWORD PTR [eax]
  418b58:	sbb    BYTE PTR [ebp+0x3e],ch
  418b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5c:	push   esi
  418b5d:	jae    0x418afe
  418b5f:	dec    edx
  418b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b61:	mov    ah,0xf7
  418b63:	in     al,0xe6
  418b65:	aaa    
  418b66:	or     al,dl
  418b68:	xchg   edx,eax
  418b69:	xor    ch,al
  418b6b:	ret    0x33b6
  418b6e:	stc    
  418b6f:	pushf  
  418b70:	adc    BYTE PTR ds:0xb2716f5c,0x16
  418b77:	mov    esp,0x5fdc59ca
  418b7c:	popa   
  418b7d:	push   es
  418b7e:	inc    ebx
  418b7f:	mov    edx,0xcb2eb000
  418b84:	mov    ss,ecx
  418b86:	fwait
  418b87:	pop    ecx
  418b88:	sbb    ch,dh
  418b8a:	in     al,0x2f
  418b8c:	pop    ecx
  418b8d:	add    BYTE PTR [eax-0x6ea6f215],bh
  418b93:	das    
  418b94:	or     DWORD PTR [ebp-0x13773db9],edx
  418b9a:	pop    edi
  418b9b:	and    bl,BYTE PTR [esi]
  418b9d:	fcomp  QWORD PTR [ebp+ebp*1+0xbd60e8a]
  418ba4:	adc    BYTE PTR [ebp-0x45d6fdf3],dl
  418baa:	js     0x418bd3
  418bac:	jb     0x418c15
  418bae:	xchg   edi,eax
  418baf:	ins    DWORD PTR es:[edi],dx
  418bb0:	mov    ds:0xa971f5b7,eax
  418bb5:	push   ds
  418bb6:	aam    0xe0
  418bb8:	dec    esp
  418bb9:	and    al,0x6
  418bbb:	sbb    BYTE PTR [edx-0xc219fdd],dh
  418bc1:	xchg   edx,eax
  418bc2:	xor    ch,dh
  418bc4:	pop    ebx
  418bc5:	adc    al,0x80
  418bc7:	push   ss
  418bc8:	dec    eax
  418bc9:	loope  0x418bde
  418bcb:	dec    esi
  418bcc:	sbb    cl,BYTE PTR [edx]
  418bce:	push   edi
  418bcf:	sahf   
  418bd0:	pop    edx
  418bd1:	cmp    esi,DWORD PTR [edi-0x17]
  418bd4:	scas   al,BYTE PTR es:[edi]
  418bd5:	dec    edi
  418bd6:	mov    ecx,0xdd59bdce
  418bdb:	ins    DWORD PTR es:[edi],dx
  418bdc:	cs repnz pop esp
  418bdf:	sar    esp,cl
  418be1:	push   ds
  418be2:	ror    DWORD PTR [esi+0xa],0xf2
  418be6:	pop    ebp
  418be7:	inc    esi
  418be8:	add    al,0x9f
  418bea:	push   0x5aabacaa
  418bef:	sub    bl,BYTE PTR [ebx]
  418bf1:	lock mov ch,0x4b
  418bf4:	loopne 0x418bf3
  418bf6:	jns    0x418ba0
  418bf8:	sub    BYTE PTR ds:0xbcfd5e57,dh
  418bfe:	adc    dh,dl
  418c00:	je     0x418c57
  418c02:	jmp    0xba96:0x42306e33
  418c09:	cmp    BYTE PTR [ebp+0x6e5723fb],dh
  418c0f:	std    
  418c10:	in     al,0xf3
  418c12:	jo     0x418c77
  418c14:	daa    
  418c15:	add    edi,DWORD PTR [esi+0x1f]
  418c18:	int3   
  418c19:	add    dh,BYTE PTR [ecx]
  418c1b:	mov    BYTE PTR [ebx+ebp*4],ah
  418c1e:	pop    ebp
  418c1f:	retf   0xc782
  418c22:	mov    al,ds:0x821a9ce5
  418c27:	mov    ah,0x94
  418c29:	pop    ss
  418c2a:	daa    
  418c2b:	xchg   ecx,eax
  418c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2d:	push   eax
  418c2e:	out    dx,al
  418c2f:	sub    BYTE PTR [esi],dl
  418c31:	pop    edx
  418c33:	or     ecx,esi
  418c35:	stc    
  418c36:	pop    ds
  418c37:	pop    ebx
  418c38:	adc    eax,DWORD PTR [eax+0x1a0eca6e]
  418c3e:	rcl    BYTE PTR [ebx-0x17e46af8],0xf1
  418c45:	cli    
  418c46:	add    ebp,DWORD PTR [eax+0x6f8a4fb3]
  418c4c:	push   es
  418c4d:	fcom   QWORD PTR [ecx]
  418c4f:	(bad)  
  418c50:	and    al,0x8
  418c52:	sbb    BYTE PTR ds:[eax],al
  418c55:	pop    ebp
  418c56:	das    
  418c57:	gs mov edi,0xe3d9338c
  418c5d:	call   DWORD PTR [edi+0x13]
  418c60:	mov    dh,0xd8
  418c62:	je     0x418ca8
  418c64:	sub    al,0x69
  418c66:	loopne 0x418cc6
  418c68:	neg    DWORD PTR [esi-0x57fd4b55]
  418c6e:	mov    ebx,0x764e460
  418c73:	push   ebp
  418c74:	add    DWORD PTR [eax+0x4b],ecx
  418c77:	call   0xaa108b69
  418c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c7e:	inc    ebp
  418c7f:	jo     0x418c89
  418c81:	push   es
  418c82:	ss inc eax
  418c84:	jns    0x418c31
  418c86:	fidivr WORD PTR [ecx+0x5f764453]
  418c8c:	adc    ah,BYTE PTR [ebp+0x6e9a24ce]
  418c92:	mov    BYTE PTR [edx+0x2c],0x71
  418c96:	out    0xe0,al
  418c98:	add    al,0x8c
  418c9a:	fs (bad) 
  418c9c:	fsub   QWORD PTR [ebx+0x1314c711]
  418ca2:	xchg   ebx,eax
  418ca3:	scas   eax,DWORD PTR es:[edi]
  418ca4:	scas   eax,DWORD PTR es:[edi]
  418ca5:	adc    eax,0xd9cc673b
  418caa:	sub    BYTE PTR [edx-0x54],bh
  418cad:	sbb    DWORD PTR [edi+ecx*4-0xf],0xffffff8d
  418cb2:	jo     0x418d27
  418cb4:	adc    cl,ah
  418cb6:	and    esp,DWORD PTR [ebp+0x38e27b3d]
  418cbc:	call   0xf38003b8
  418cc1:	mov    bl,0x37
  418cc3:	adc    DWORD PTR [esi],edi
  418cc5:	pusha  
  418cc6:	in     eax,0x3b
  418cc8:	retf   0x31c5
  418ccb:	and    dh,BYTE PTR [ebp+ecx*2+0x823caef]
  418cd2:	xchg   esp,eax
  418cd3:	mov    edx,esi
  418cd5:	(bad)  [ecx]
  418cd7:	xor    ecx,DWORD PTR [edx]
  418cd9:	sub    eax,esi
  418cdb:	test   eax,0x5bf4bcab
  418ce0:	push   ebx
  418ce1:	pop    edi
  418ce2:	xor    al,BYTE PTR [esi+0x7d32fe1d]
  418ce8:	imul   BYTE PTR [eax+0x23]
  418ceb:	(bad)  
  418ced:	out    0x1b,al
  418cef:	add    bh,BYTE PTR [eax+0x55fc56f1]
  418cf5:	mov    bl,0x3a
  418cf7:	mov    BYTE PTR [edx+0x7e1875d1],dl
  418cfd:	push   esp
  418cfe:	sar    BYTE PTR [edi+0x135c5acb],cl
  418d04:	ret    0xcc59
  418d07:	and    eax,0x9ea0c383
  418d0c:	cmp    ecx,DWORD PTR [edi-0x250028d4]
  418d12:	xor    ch,BYTE PTR [edx+0x3ef1e5e]
  418d18:	pop    ebp
  418d19:	out    0x3f,al
  418d1b:	cmc    
  418d1c:	fisubr WORD PTR ds:0xeb7d37ed
  418d22:	mov    ds:0xcfdd18c9,al
  418d27:	aad    0x46
  418d29:	push   ss
  418d2a:	loop   0x418d06
  418d2c:	shl    DWORD PTR [ebp-0x25],0x11
  418d30:	(bad)  
  418d31:	xor    dh,BYTE PTR [ebx]
  418d33:	cs push edi
  418d35:	repz mov edi,0x206d3bc
  418d3b:	mov    ss,WORD PTR [esi]
  418d3d:	bnd jne 0x418d9f
  418d40:	mov    ah,0xe3
  418d42:	lea    ecx,[ecx-0x5f]
  418d45:	inc    esi
  418d46:	inc    ebp
  418d47:	and    ch,BYTE PTR [edi*4-0x694af90a]
  418d4e:	xor    al,0xe0
  418d50:	sbb    edi,DWORD PTR [ebx-0x1b]
  418d53:	lahf   
  418d54:	mov    bh,0xf0
  418d56:	adc    eax,0x4f20889a
  418d5b:	or     BYTE PTR [edx-0x5e],al
  418d5e:	stos   BYTE PTR es:[edi],al
  418d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d60:	or     cl,BYTE PTR [ebx+0x45]
  418d63:	or     al,0x6
  418d65:	je     0x418cfb
  418d67:	and    dh,BYTE PTR [edx]
  418d69:	jp     0x418d9f
  418d6b:	sbb    eax,0x7c801a32
  418d70:	fcom   DWORD PTR [ebp-0x43]
  418d73:	mov    eax,ds:0x54bcf457
  418d78:	mov    ecx,0x87570351
  418d7d:	xchg   esi,eax
  418d7e:	pop    ss
  418d7f:	mov    ds:0xd96c58a8,eax
  418d84:	outs   dx,DWORD PTR ds:[esi]
  418d85:	jns    0x418d2d
  418d87:	pop    ebx
  418d88:	mov    edi,0xa783b59f
  418d8d:	push   esp
  418d8e:	add    eax,DWORD PTR [ebp+0xc2c0640]
  418d94:	in     al,dx
  418d95:	mov    cl,0x8f
  418d97:	mov    esp,0x2173966c
  418d9c:	std    
  418d9d:	pop    ebx
  418d9e:	mov    cl,0xfb
  418da0:	dec    edi
  418da1:	enter  0xe3e1,0xf7
  418da5:	fld    QWORD PTR es:[edi]
  418da8:	pop    esp
  418da9:	add    al,0x39
  418dab:	icebp  
  418dac:	or     al,0x12
  418dae:	gs hlt 
  418db0:	mov    esp,0xd7453f89
  418db5:	mov    al,0x8f
  418db7:	mov    ah,0xa3
  418db9:	fstp   TBYTE PTR [edi]
  418dbb:	jge    0x418e0b
  418dbd:	mov    WORD PTR [edx+esi*1-0x12e2b981],cs
  418dc4:	rcl    DWORD PTR [eax-0x4cdb0a61],1
  418dca:	into   
  418dcb:	sub    BYTE PTR [eax+ecx*2],0x4c
  418dcf:	pop    edi
  418dd0:	and    al,0xa3
  418dd2:	ficom  WORD PTR [edx-0x53b950c2]
  418dd8:	xor    eax,0x91a55615
  418ddd:	jns    0x418da5
  418ddf:	mov    BYTE PTR [ebx+0x5b95320f],ah
  418de5:	jp     0x418da5
  418de7:	push   es
  418de8:	adc    esi,ebx
  418dea:	or     al,0x87
  418dec:	dec    edx
  418ded:	inc    esi
  418dee:	or     edx,DWORD PTR [eax+edx*4-0x68]
  418df2:	pop    ebx
  418df3:	jbe    0x418e34
  418df5:	cmp    DWORD PTR [edx-0x3c059200],edi
  418dfb:	add    al,0xb8
  418dfe:	faddp  st(1),st
  418e00:	cs daa 
  418e02:	add    BYTE PTR [esi],dl
  418e04:	arpl   WORD PTR [eax-0x6eb38a43],sp
  418e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0b:	sbb    DWORD PTR ds:0xf24b03f,esp
  418e11:	clc    
  418e12:	pushf  
  418e13:	sub    edx,DWORD PTR [esi+ebx*2-0x584fe213]
  418e1a:	cmp    al,0xba
  418e1c:	rcr    BYTE PTR [edi-0x48],1
  418e1f:	sti    
  418e20:	xor    ebp,0xffffffe8
  418e23:	out    dx,al
  418e24:	ins    DWORD PTR es:[edi],dx
  418e25:	cs push ds
  418e27:	clc    
  418e28:	xchg   DWORD PTR [eax-0x64ca0680],edi
  418e2e:	aas    
  418e2f:	jl     0x418e15
  418e31:	inc    BYTE PTR [esp+eax*1+0x2f]
  418e35:	into   
  418e36:	cmp    BYTE PTR [edi-0xa],dh
  418e39:	sub    eax,0xedf70e09
  418e3e:	adc    bh,bh
  418e40:	lods   eax,DWORD PTR ds:[esi]
  418e41:	mov    edi,0x3221bdc2
  418e46:	dec    eax
  418e47:	xchg   ebx,eax
  418e48:	(bad)  
  418e49:	mov    eax,0x4c11162e
  418e4e:	cmp    DWORD PTR [edi+0x2c],ecx
  418e51:	loop   0x418e4b
  418e53:	loope  0x418ece
  418e55:	loop   0x418e73
  418e57:	outs   dx,BYTE PTR ds:[esi]
  418e58:	scas   al,BYTE PTR es:[edi]
  418e59:	mov    eax,ds:0x5977b23
  418e5e:	xchg   esp,eax
  418e5f:	cmp    ebp,edi
  418e61:	push   edi
  418e62:	push   eax
  418e63:	cld    
  418e64:	jge    0x418e33
  418e66:	(bad)  
  418e67:	jns    0x418dee
  418e69:	cld    
  418e6a:	ss fwait
  418e6c:	adc    al,0x24
  418e6e:	arpl   ax,sp
  418e70:	jo     0x418e36
  418e72:	inc    ecx
  418e73:	out    0x87,al
  418e75:	inc    esi
  418e76:	jb     0x418e9c
  418e78:	and    DWORD PTR [esi+0x1db3cc69],ebx
  418e7e:	out    0x63,eax
  418e80:	addr16 daa 
  418e82:	cmp    BYTE PTR [ebx+0x46],dl
  418e85:	push   0x93e605a9
  418e8a:	(bad)  
  418e8b:	xor    DWORD PTR ds:0xc7e906ff,edx
  418e91:	pushf  
  418e92:	es push eax
  418e94:	daa    
  418e95:	mov    ebp,0x3022bd4e
  418e9a:	add    al,0x52
  418e9c:	fwait
  418e9d:	mov    fs,WORD PTR [ecx-0x171538ed]
  418ea3:	in     eax,0x84
  418ea5:	pop    ebx
  418ea6:	test   BYTE PTR [ebp-0x7a52f7fd],dh
  418eac:	push   esi
  418ead:	sub    dl,al
  418eaf:	mov    eax,ds:0x5071acf3
  418eb4:	and    eax,0x1109f97c
  418eb9:	xchg   esi,eax
  418eba:	xor    cl,0x45
  418ebd:	cdq    
  418ebe:	sbb    DWORD PTR [eax+ebx*8-0x293feb27],edi
  418ec5:	and    dh,cl
  418ec7:	mov    bh,0xa9
  418ec9:	repnz stos DWORD PTR es:[edi],eax
  418ecb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  418ecd:	(bad)  
  418ece:	(bad)  
  418ecf:	dec    ebx
  418ed0:	jnp    0x418e88
  418ed2:	fidiv  DWORD PTR [edx]
  418ed4:	clc    
  418ed5:	dec    esi
  418ed6:	ds adc bl,ah
  418ed9:	push   eax
  418eda:	cs mov bh,0x80
  418edd:	fisttp QWORD PTR [ebx]
  418edf:	shl    DWORD PTR [edi+0x1309822b],cl
  418ee5:	mov    BYTE PTR [edx],cl
  418ee7:	mov    edi,0xcc7b4da8
  418eec:	push   edx
  418eed:	out    0x34,al
  418eef:	add    DWORD PTR [edi+edx*1-0x59d0b767],0x3
  418ef7:	(bad)
  418efb:	sbb    BYTE PTR [esi-0x9],ah
  418efe:	jno    0x418f0c
  418f00:	test   BYTE PTR [eax+eax*4-0x3104fa4c],dh
  418f07:	jp     0x418ea4
  418f09:	loope  0x418ee3
  418f0b:	dec    esp
  418f0c:	hlt    
  418f0d:	sbb    DWORD PTR [ebx+0x5c],ebp
  418f10:	jg     0x418f25
  418f12:	sub    ch,BYTE PTR [ecx]
  418f14:	push   0xfffffffa
  418f16:	test   DWORD PTR [edx+0x36],0x21c5e340
  418f1d:	aam    0xc2
  418f1f:	stc    
  418f20:	cmp    DWORD PTR [edx-0x39],ebx
  418f23:	in     eax,0x5
  418f25:	pop    ss
  418f26:	clc    
  418f27:	lods   eax,DWORD PTR ds:[esi]
  418f28:	sbb    edi,DWORD PTR [ecx+0x620b44d5]
  418f2e:	repz fsubr QWORD PTR [ebp+0x475d507f]
  418f35:	sub    BYTE PTR [eax+0x2b8b8b24],ah
  418f3b:	or     ch,BYTE PTR [ebx+0x26acfb2f]
  418f41:	stos   BYTE PTR es:[edi],al
  418f42:	mov    WORD PTR [ebp+edi*8+0x7d],cs
  418f46:	int    0xc0
  418f48:	addr16 push edi
  418f4a:	loop   0x418f0e
  418f4c:	or     edi,DWORD PTR [edi+esi*8]
  418f4f:	dec    BYTE PTR [esi]
  418f51:	push   0x3
  418f53:	in     eax,dx
  418f54:	or     eax,0x44ffcc04
  418f59:	ficom  DWORD PTR [ecx+eiz*4]
  418f5c:	inc    esp
  418f5d:	xor    DWORD PTR [ecx-0x4f300924],ebx
  418f63:	out    0xc7,eax
  418f65:	gs inc esi
  418f67:	xor    esp,esi
  418f69:	add    bl,BYTE PTR [ecx]
  418f6b:	and    dh,0x68
  418f6e:	daa    
  418f6f:	mov    al,0x7d
  418f71:	add    DWORD PTR [esp+edx*1-0x6ce6bda],ebp
  418f78:	jle    0x418f11
  418f7a:	cmp    BYTE PTR [esi+0x7d],bh
  418f7d:	popf   
  418f7e:	enter  0xafc6,0x26
  418f82:	enter  0x5c53,0x3a
  418f86:	test   bl,cl
  418f88:	hlt    
  418f89:	loopne 0x418fc5
  418f8b:	mov    ebx,0x23ba3e1b
  418f90:	pop    ebp
  418f91:	push   es
  418f92:	push   0xffffffa1
  418f94:	loopne 0x418f79
  418f96:	cmp    DWORD PTR [ebx],ebp
  418f98:	(bad)  
  418f99:	aad    0x41
  418f9b:	test   BYTE PTR [esi-0x111f1988],0xb0
  418fa2:	es iret 
  418fa4:	cmp    DWORD PTR [eax+0x79d82c56],0x11b81507
  418fae:	xchg   ecx,eax
  418faf:	loopne 0x418f9a
  418fb1:	mov    ch,0x2e
  418fb3:	loopne 0x418f98
  418fb5:	fwait
  418fb6:	in     al,0xf3
  418fb8:	mov    BYTE PTR [edi],bh
  418fba:	scas   al,BYTE PTR es:[edi]
  418fbb:	scas   eax,DWORD PTR es:[edi]
  418fbc:	inc    ecx
  418fbd:	das    
  418fbe:	out    0xdf,al
  418fc0:	or     eax,0x8d6b600f
  418fc5:	add    al,0x1
  418fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc8:	or     eax,DWORD PTR [ecx+0x43]
  418fcb:	sub    ebp,eax
  418fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fce:	adc    BYTE PTR [ebp+0x5605497c],dl
  418fd4:	fmul   st,st(6)
  418fd6:	sbb    ah,BYTE PTR [eax+0x3a]
  418fd9:	(bad)  
  418fda:	sub    cl,dh
  418fdc:	inc    ecx
  418fdd:	jo     0x419020
  418fdf:	cmp    ecx,DWORD PTR [esi-0x6c964440]
  418fe5:	lods   al,BYTE PTR ds:[esi]
  418fe6:	dec    ebp
  418fe7:	xlat   BYTE PTR ds:[ebx]
  418fe8:	sub    ecx,DWORD PTR [esi+0x8]
  418feb:	pop    ebx
  418fec:	fiadd  DWORD PTR ds:0xf3e73e06
  418ff2:	sti    
  418ff3:	or     al,BYTE PTR [edx+0xb]
  418ff6:	xor    dl,ch
  418ff8:	idiv   BYTE PTR [esi+edx*2+0x5a]
  418ffc:	(bad)  
  418ffd:	daa    
  418ffe:	xor    BYTE PTR [eax-0x6a],dh
  419001:	aad    0xce
  419003:	sahf   
  419004:	icebp  
  419005:	aas    
  419006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419007:	jb     0x419048
  419009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900a:	aaa    
  41900b:	dec    ebx
  41900c:	jecxz  0x418fd2
  41900e:	leave  
  41900f:	call   0xa3e6:0xc72eb881
  419016:	lods   eax,DWORD PTR ds:[esi]
  419017:	add    bh,ah
  419019:	xchg   ebx,eax
  41901a:	rcr    BYTE PTR [ecx],0x4c
  41901d:	daa    
  41901e:	mov    esi,0x530cf844
  419023:	mov    ah,0xdf
  419025:	es push 0xf6912dbe
  41902b:	std    
  41902c:	ins    DWORD PTR es:[edi],dx
  41902d:	mov    ch,0x3b
  41902f:	out    dx,eax
  419030:	jge    0x419042
  419032:	xor    eax,0x4a078ef7
  419037:	(bad)  [esi+0x3a]
  41903a:	adc    ebx,DWORD PTR [ebx-0x70f42987]
  419040:	push   cs
  419041:	mov    bh,0x60
  419043:	sar    BYTE PTR [esi+ecx*2-0x68],0x69
  419048:	das    
  419049:	into   
  41904a:	ret    
  41904b:	scas   al,BYTE PTR es:[edi]
  41904c:	mov    ebx,0x3d81df32
  419051:	inc    ecx
  419052:	dec    esi
  419053:	jmp    0x1404:0xaca6a194
  41905a:	and    eax,DWORD PTR [ebx]
  41905c:	adc    ebx,DWORD PTR [edi]
  41905e:	fadd   st(2),st
  419060:	jmp    0xbc3499b3
  419065:	lods   al,BYTE PTR ds:[esi]
  419066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419067:	in     al,dx
  419068:	cmp    ecx,DWORD PTR [esi-0x2b2fb723]
  41906e:	mov    dh,0xec
  419070:	(bad)  
  419071:	dec    esp
  419072:	mov    eax,0x58782a3e
  419077:	test   BYTE PTR [edx-0x4852402f],bh
  41907d:	int3   
  41907e:	pop    edi
  41907f:	xchg   edx,eax
  419080:	mov    ch,0xe1
  419082:	adc    BYTE PTR ss:[edx],bl
  419085:	xchg   BYTE PTR [ecx+0x75],dl
  419088:	xchg   ebp,eax
  419089:	and    eax,0xa3559b4f
  41908e:	sub    eax,0xc2549192
  419093:	adc    eax,0xab3ce63
  419098:	mov    ax,0xcc4a
  41909c:	sbb    ah,BYTE PTR [edx]
  41909e:	adc    DWORD PTR [ebx],esp
  4190a0:	mov    eax,0x13756c6
  4190a5:	inc    esp
  4190a6:	test   BYTE PTR cs:[ebx+esi*2],0xa6
  4190ab:	(bad)  
  4190ac:	jmp    0xc62d165c
  4190b1:	stos   BYTE PTR es:[edi],al
  4190b2:	out    0xb2,al
  4190b4:	sbb    cl,dl
  4190b6:	push   eax
  4190b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190b8:	xor    eax,0xf695336
  4190be:	jbe    0x419126
  4190c0:	ds push ebp
  4190c2:	mov    esp,0x98bb1303
  4190c7:	mov    ch,0x61
  4190c9:	cli    
  4190ca:	dec    esi
  4190cb:	js     0x419067
  4190cd:	rcl    DWORD PTR [edi],1
  4190cf:	adc    BYTE PTR [edi+0x66],bl
  4190d2:	jo     0x4190b3
  4190d4:	xchg   esp,eax
  4190d5:	call   0x2cc2e2a9
  4190da:	aad    0x7b
  4190dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190dd:	das    
  4190de:	jno    0x419064
  4190e0:	xchg   esi,eax
  4190e1:	cmp    BYTE PTR [edx],0x82
  4190e4:	pop    ebx
  4190e5:	jnp    0x419097
  4190e7:	test   ebp,esp
  4190e9:	jns    0x41911a
  4190eb:	hlt    
  4190ec:	cmc    
  4190ed:	push   ebx
  4190ee:	sub    DWORD PTR [ebp+0x15354ec],ebx
  4190f4:	dec    ebp
  4190f5:	adc    ch,BYTE PTR [edi+edi*2]
  4190f8:	add    ecx,ebp
  4190fa:	fsubr  QWORD PTR [edx+0x6a89fc91]
  419100:	cwde   
  419101:	ds push 0xf43a0ef1
  419107:	jp     0x419164
  419109:	push   ecx
  41910a:	dec    esi
  41910b:	cmc    
  41910c:	into   
  41910d:	popf   
  41910e:	inc    ecx
  41910f:	pop    esp
  419110:	cwde   
  419111:	push   0x2b
  419113:	sub    ch,0x79
  419116:	bound  eax,QWORD PTR [eax-0x5cf77d79]
  41911c:	rol    BYTE PTR [ebp+eiz*2+0x27],1
  419120:	stc    
  419121:	xchg   DWORD PTR [eax],esi
  419123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419124:	fsubr  QWORD PTR [esi-0x21]
  419127:	mov    dh,0xc2
  419129:	xchg   esi,eax
  41912a:	fs mov ebp,0x34375581
  419130:	jecxz  0x419132
  419132:	retf   
  419133:	outs   dx,BYTE PTR ds:[esi]
  419134:	add    eax,0xb3220636
  419139:	or     DWORD PTR [edi+0x52],eax
  41913c:	inc    ebp
  41913d:	push   0xdf8d7989
  419142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419143:	daa    
  419144:	or     eax,0xeb6c387c
  419149:	iret   
  41914a:	int3   
  41914b:	ss jp  0x4191a9
  41914e:	in     al,0x39
  419150:	aaa    
  419151:	dec    edx
  419152:	and    BYTE PTR [esi-0x6517d159],al
  419158:	mov    edi,0x3379e9e4
  41915d:	jmp    0xc6c32bab
  419162:	dec    ebx
  419163:	push   esp
  419164:	fwait
  419165:	shr    BYTE PTR [ecx],1
  419167:	sbb    BYTE PTR [edx-0x65de376a],bl
  41916d:	mov    edx,0xbdcdbc41
  419172:	adc    eax,0x9fb13e37
  419177:	jge    0x4191dd
  419179:	and    BYTE PTR [esi],bh
  41917b:	dec    ebp
  41917c:	jbe    0x4191e4
  41917e:	xchg   esi,eax
  41917f:	jle    0x419173
  419181:	fld    st(3)
  419183:	pushf  
  419184:	xchg   ecx,eax
  419185:	icebp  
  419186:	ret    
  419187:	or     al,0x7e
  419189:	add    esi,DWORD PTR [eax+0x3c]
  41918c:	adc    ch,BYTE PTR [edx-0x26]
  41918f:	mov    BYTE PTR [ebp+0x7a1d0633],bh
  419195:	jno    0x41916a
  419197:	jg     0x41920c
  419199:	sub    dh,BYTE PTR [ecx+0x70]
  41919c:	mov    eax,0x2bb68d5f
  4191a1:	fldenv [esi]
  4191a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a4:	jmp    0x7b51:0x26571ba0
  4191ab:	xor    DWORD PTR [esi+0x21],ebx
  4191ae:	jnp    0x419215
  4191b0:	int    0x91
  4191b2:	push   esp
  4191b3:	cs mov esi,0xde47db09
  4191b9:	dec    ebx
  4191ba:	xor    edi,0x370ebfb3
  4191c0:	fcomp  QWORD PTR [ebx+0x6bb69bbf]
  4191c6:	mov    bh,0xaa
  4191c8:	sbb    DWORD PTR [eax+0x67],0x7f865158
  4191cf:	add    al,0x9a
  4191d2:	sub    ebx,DWORD PTR [edi-0x709e79c0]
  4191d8:	ror    DWORD PTR [edx],0x68
  4191db:	in     al,dx
  4191dc:	push   0xffffffe9
  4191de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191df:	push   esi
  4191e0:	fwait
  4191e1:	in     eax,0xe8
  4191e3:	jl     0x41919d
  4191e5:	push   ecx
  4191e6:	test   al,0x59
  4191e8:	push   esp
  4191e9:	mov    ch,0xc5
  4191eb:	cmc    
  4191ec:	(bad)  
  4191ed:	ins    DWORD PTR es:[edi],dx
  4191ee:	xchg   ecx,eax
  4191ef:	frstor [esi+0x39e9e192]
  4191f5:	push   es
  4191f6:	sbb    eax,0x59b0714e
  4191fb:	add    al,0xed
  4191fd:	xchg   BYTE PTR [eax],bl
  4191ff:	xlat   BYTE PTR ds:[ebx]
  419200:	sbb    DWORD PTR ds:0xbcf1b0e4,edi
  419206:	ds mov esi,0x980c5fa1
  41920c:	fild   QWORD PTR [ecx]
  41920e:	cmp    edx,DWORD PTR [ecx]
  419210:	pop    ds
  419211:	xchg   esp,eax
  419212:	nop
  419213:	pop    ebp
  419214:	pop    edx
  419215:	in     al,dx
  419216:	aam    0xa7
  419218:	out    0xae,al
  41921a:	test   al,0x4c
  41921c:	mov    eax,0x9beef8ad
  419221:	repz iret 
  419223:	aam    0x91
  419225:	or     cl,BYTE PTR [ebp+0x72]
  419228:	(bad)  [edx]
  41922a:	sbb    eax,0xdf8c18d3
  41922f:	ins    BYTE PTR es:[di],dx
  419231:	push   0xc1c51545
  419236:	mov    al,ds:0x9730f125
  41923b:	lds    eax,FWORD PTR [eax]
  41923d:	jbe    0x4191ef
  41923f:	push   es
  419240:	lock aas 
  419242:	inc    ebx
  419243:	xchg   BYTE PTR ds:0x6b90083b,bh
  419249:	sbb    ah,al
  41924b:	xor    eax,0xade8a16a
  419250:	cmp    edx,DWORD PTR [esi-0x49]
  419253:	data16 sti 
  419255:	push   ss
  419256:	sbb    DWORD PTR [ebx-0x2da2149f],edi
  41925c:	cld    
  41925d:	jp     0x41925b
  41925f:	es xor al,0x31
  419262:	jns    0x4192bd
  419264:	arpl   WORD PTR [ecx+0x21ec09e8],sp
  41926a:	fidiv  DWORD PTR [eax+0x6424945f]
  419270:	ret    
  419271:	jl     0x419219
  419273:	jp     0x4192c4
  419275:	mov    es,WORD PTR [ebx-0x13]
  419278:	(bad)  
  419279:	pop    ss
  41927a:	sbb    edx,eax
  41927c:	xchg   ebp,eax
  41927d:	sub    bl,BYTE PTR [esi-0x301229ca]
  419283:	or     DWORD PTR [ecx+0x4c],eax
  419286:	fisttp DWORD PTR [eax+0x4c4da40d]
  41928c:	jle    0x419231
  41928e:	xchg   edi,eax
  41928f:	xor    ecx,eax
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x2c
  4192cc:	pop    edx
  4192cd:	xlat   BYTE PTR ds:[ebx]
  4192ce:	xchg   esi,eax
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx-0x6aa3e6b8],0xffffffcb
  4192dc:	pop    DWORD PTR [eax+ebp*8+0x6c]
  4192e0:	es mov ah,0xd4
  4192e3:	ficom  WORD PTR [edx]
  4192e5:	push   cs
  4192e6:	test   eax,0xd4776bb2
  4192eb:	adc    ch,0x70
  4192ee:	(bad)  
  4192ef:	adc    esi,DWORD PTR [edi]
  4192f1:	jmp    0x41934f
  4192f3:	cwde   
  4192f4:	call   DWORD PTR [esi-0x508ac4cf]
  4192fa:	cmp    esi,DWORD PTR [esi-0x3]
  4192fd:	(bad)  
  4192fe:	loopne 0x4192c7
  419300:	retf   0x138f
  419303:	or     BYTE PTR [esi+0x7f5f9343],ch
  419309:	jmp    0xd8404526
  41930e:	js     0x419380
  419310:	xlat   BYTE PTR ds:[ebx]
  419311:	lds    ecx,FWORD PTR [ebp-0x7c]
  419314:	arpl   WORD PTR [ebp-0x52f35289],di
  41931a:	inc    esi
  41931b:	dec    edi
  41931c:	cmp    edi,ecx
  41931e:	mov    esi,0x62965f1e
  419323:	leave  
  419324:	mov    ax,ds:0x6ec248c9
  41932a:	cmp    ecx,DWORD PTR [edi-0x46]
  41932d:	jno    0x4192db
  41932f:	sub    DWORD PTR [ebx],0x4d
  419332:	(bad)  
  419334:	or     eax,0x17ec7d64
  419339:	pop    ds
  41933a:	pop    eax
  41933b:	fwait
  41933c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41933d:	stos   BYTE PTR es:[edi],al
  41933e:	mov    BYTE PTR [edx+ecx*8],dh
  419341:	jg     0x419338
  419343:	and    DWORD PTR [eax],ebp
  419345:	cs popa 
  419347:	mov    WORD PTR [edx+0x4f12aec3],ss
  41934d:	shl    BYTE PTR [ebx-0x49],1
  419350:	mov    ebx,0x49f0b8d9
  419355:	sbb    eax,0x31eca61c
  41935a:	out    dx,al
  41935b:	jnp    0x419359
  41935d:	aas    
  41935e:	dec    esi
  41935f:	loop   0x419317
  419361:	push   ebp
  419362:	pop    ds
  419363:	sbb    esp,DWORD PTR [ebx]
  419365:	(bad)  
  419366:	fst    DWORD PTR [eax+0x4afd0118]
  41936c:	les    ebp,FWORD PTR [eax-0x2d]
  41936f:	imul   eax,DWORD PTR [edi+0x624fc2ef],0xbe83a40e
  419379:	mov    al,BYTE PTR [edx+0x38]
  41937c:	jp     0x4193ae
  41937e:	into   
  41937f:	mov    al,0xfd
  419381:	cld    
  419382:	mov    ds:0x828aeac1,eax
  419387:	in     eax,0x2e
  419389:	gs icebp 
  41938b:	and    eax,0x3fe5c563
  419390:	xchg   esi,eax
  419391:	sti    
  419392:	mov    edi,0x12a25c4f
  419397:	jp     0x4193ac
  419399:	jmp    0x419372
  41939b:	mov    bh,0xf8
  41939d:	ret    
  41939e:	scas   al,BYTE PTR es:[edi]
  41939f:	or     BYTE PTR [ecx-0x34d75d7b],cl
  4193a5:	retf   
  4193a6:	xor    al,0xf6
  4193a8:	jge    0x4193e2
  4193aa:	xchg   BYTE PTR [eax-0x21],bl
  4193ad:	jbe    0x41935c
  4193af:	sbb    dl,ch
  4193b1:	fwait
  4193b2:	mov    dl,0x5c
  4193b4:	dec    ebp
  4193b5:	ret    
  4193b6:	mov    al,0x70
  4193b8:	add    esp,ecx
  4193ba:	push   esi
  4193bb:	js     0x419434
  4193bd:	inc    ebx
  4193be:	push   esi
  4193bf:	(bad)  
  4193c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c1:	fmulp  st(3),st
  4193c3:	inc    ah
  4193c5:	addr16 mov ebx,0x9b846135
  4193cb:	cmp    al,al
  4193cd:	or     eax,0xf494aa76
  4193d2:	jo     0x419415
  4193d4:	aad    0x61
  4193d6:	pop    ss
  4193d7:	repz inc esi
  4193d9:	push   ebp
  4193da:	aad    0xea
  4193dc:	aas    
  4193dd:	cs inc eax
  4193df:	or     cl,bl
  4193e1:	fild   WORD PTR [edx]
  4193e3:	xor    eax,0x24eeab54
  4193e8:	push   ds
  4193e9:	loopne 0x41936c
  4193eb:	sub    esi,edi
  4193ed:	outs   dx,DWORD PTR ds:[esi]
  4193ee:	sti    
  4193ef:	dec    edi
  4193f0:	sub    BYTE PTR [edx+0xe],bh
  4193f3:	jg     0x419435
  4193f5:	inc    esp
  4193f6:	xchg   edx,eax
  4193f7:	clc    
  4193f8:	and    eax,0x39d3b350
  4193fd:	data16 sub al,0x1c
  419400:	sbb    DWORD PTR [ebx-0x25],0xffffffa3
  419404:	fnsave [ebp+0x3b366436]
  41940a:	jg     0x4193dd
  41940c:	or     edx,esi
  41940e:	push   esi
  41940f:	outs   dx,DWORD PTR ds:[esi]
  419410:	adc    eax,0xd45699a4
  419415:	loopne 0x4193d5
  419417:	push   es
  419418:	shr    BYTE PTR [edx],0xd7
  41941b:	repz enter 0x1227,0xb6
  419420:	adc    BYTE PTR [ecx-0x2557b87a],bh
  419426:	xchg   esi,eax
  419427:	mov    DWORD PTR [edi-0x2ace2820],esp
  41942d:	mov    bl,cl
  41942f:	and    DWORD PTR ds:0x61a3b771,ebx
  419435:	nop
  419436:	std    
  419437:	cmp    al,0x97
  41943a:	mov    DWORD PTR [edx-0x696ee259],ecx
  419440:	add    al,BYTE PTR [ebx+ebx*8-0x63]
  419444:	pop    eax
  419445:	int3   
  419446:	in     al,0x88
  419448:	fnsave [ebx]
  41944a:	sti    
  41944b:	sbb    al,0x4b
  41944d:	scas   eax,DWORD PTR es:[edi]
  41944e:	jge    0x419465
  419450:	jl     0x41940b
  419452:	mov    eax,ds:0xcc4bb0fe
  419457:	sbb    al,0x9b
  419459:	adc    DWORD PTR ss:[esi],esp
  41945c:	jo     0x41947f
  41945e:	mov    WORD PTR [edi+0x30],?
  419461:	add    DWORD PTR [ecx],0xffffffbc
  419464:	and    dl,bl
  419466:	add    al,0x5f
  419468:	and    al,BYTE PTR [eax]
  41946a:	arpl   WORD PTR [edi],cx
  41946c:	repnz push 0x7b7f2811
  419472:	jmp    0x419435
  419474:	mov    al,ds:0x71aa9720
  419479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41947a:	mov    ebp,edi
  41947c:	sub    DWORD PTR [edx-0x7c],0x50
  419480:	mov    eax,ds:0xe9855a76
  419485:	call   0xbf591da3
  41948a:	mov    eax,0xa5f0695c
  41948f:	bound  ebp,QWORD PTR [edx-0xe]
  419492:	jl     0x4194d1
  419494:	rcr    dl,0xd3
  419497:	push   cs
  419498:	in     al,0xc6
  41949a:	call   0x8092:0x591ec0f1
  4194a1:	pop    es
  4194a2:	xchg   BYTE PTR [edx],ah
  4194a4:	mov    eax,ds:0x41deed21
  4194a9:	call   0x8a87031e
  4194ae:	cld    
  4194af:	xchg   DWORD PTR [edi+0x1ce50068],edx
  4194b5:	adc    eax,0x3f07d84f
  4194ba:	ins    BYTE PTR es:[edi],dx
  4194bb:	pop    esp
  4194bc:	sub    DWORD PTR [esi+0x63],edx
  4194bf:	sub    al,0x3b
  4194c1:	jg     0x4194fb
  4194c3:	iret   
  4194c4:	inc    esp
  4194c5:	(bad)  
  4194c6:	in     eax,0x12
  4194c8:	inc    edx
  4194c9:	dec    ebx
  4194ca:	shl    ch,1
  4194cc:	and    eax,0xa54f4238
  4194d1:	push   cs
  4194d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194d3:	jge    0x419467
  4194d5:	jb     0x4194ef
  4194d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d8:	xchg   esi,eax
  4194d9:	jno    0x419549
  4194db:	dec    esp
  4194dc:	adc    DWORD PTR [ecx],esp
  4194de:	in     eax,dx
  4194df:	in     eax,dx
  4194e0:	iret   
  4194e1:	fnstcw WORD PTR [ecx+edx*4+0x71]
  4194e5:	sbb    eax,0x17b97de9
  4194ea:	xchg   esp,eax
  4194eb:	push   ebx
  4194ec:	jmp    0xfea4:0xea040366
  4194f3:	lods   al,BYTE PTR ds:[esi]
  4194f4:	ds int3 
  4194f6:	xchg   edx,eax
  4194f7:	push   0x9b0be811
  4194fc:	dec    edi
  4194fd:	sub    BYTE PTR [eax-0x2e],bh
  419500:	retf   
  419501:	(bad)  
  419502:	sub    DWORD PTR [ecx],edi
  419504:	cli    
  419505:	dec    ebx
  419506:	push   eax
  419507:	clc    
  419508:	or     DWORD PTR [ecx+0x48],esi
  41950b:	jp     0x4194a2
  41950d:	inc    esp
  41950e:	inc    edi
  41950f:	inc    edi
  419510:	pop    ds
  419511:	dec    edx
  419512:	jge    0x419570
  419514:	out    0xaf,eax
  419516:	inc    ebp
  419517:	xor    eax,edx
  419519:	and    al,0x3
  41951b:	xchg   ebp,eax
  41951c:	adc    ah,cl
  41951e:	clc    
  41951f:	push   0xa
  419521:	inc    ecx
  419522:	fdivr  QWORD PTR [esi+0x24856f20]
  419528:	inc    ebx
  419529:	(bad)  
  41952b:	inc    ebp
  41952c:	sub    BYTE PTR [ebp-0x31e2f0f2],cl
  419532:	mov    eax,ds:0x5aa371a
  419537:	mov    bl,0x21
  419539:	jne    0x4194ca
  41953b:	jge    0x4194c7
  41953d:	fisttp DWORD PTR ds:0xf226258
  419543:	xor    ebx,DWORD PTR [ecx-0x5914045]
  419549:	adc    esp,esi
  41954b:	clc    
  41954c:	sub    al,0x70
  41954e:	in     eax,dx
  41954f:	jae    0x41954b
  419551:	cmp    DWORD PTR [esi],ebx
  419553:	or     cl,BYTE PTR [eax]
  419555:	pop    ebp
  419556:	xchg   ebp,eax
  419557:	xor    esp,ecx
  419559:	test   eax,0x5f669cb7
  41955e:	and    BYTE PTR [ebp-0x345e54eb],dl
  419564:	cld    
  419565:	retf   
  419566:	enter  0x33aa,0x3c
  41956a:	mov    ebp,0x9ae60f67
  41956f:	jno    0x41956f
  419571:	in     eax,0x59
  419573:	inc    ebp
  419574:	mov    ds:0xec853e8b,eax
  419579:	js     0x4195bb
  41957b:	adc    WORD PTR [edi-0x43a1fe10],bx
  419582:	into   
  419583:	xlat   BYTE PTR ds:[ebx]
  419584:	pop    edx
  419585:	ds in  al,dx
  419587:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419589:	mov    ?,WORD PTR [eax+0x62]
  41958c:	icebp  
  41958d:	xchg   ecx,eax
  41958e:	mov    ah,0xad
  419590:	out    dx,eax
  419591:	stos   BYTE PTR es:[edi],al
  419592:	int3   
  419593:	pop    edx
  419594:	sbb    eax,0x5a813b9a
  419599:	xchg   ebp,eax
  41959a:	jb     0x4195a2
  41959c:	and    cl,BYTE PTR ds:0x53aa5f92
  4195a2:	xchg   edx,eax
  4195a3:	mov    BYTE PTR [ebp+0x63],cl
  4195a6:	imul   ebp,DWORD PTR [edi],0xecd243ce
  4195ac:	jo     0x41954f
  4195ae:	in     eax,dx
  4195af:	cmp    eax,0x6cf6a68e
  4195b4:	mov    ch,0xf3
  4195b6:	sub    eax,0x30319d8b
  4195bb:	outs   dx,BYTE PTR ds:[esi]
  4195bc:	mov    ?,WORD PTR [ebp-0x2c]
  4195bf:	popa   
  4195c0:	pop    ecx
  4195c1:	inc    ebx
  4195c2:	cmp    esi,DWORD PTR [ecx-0x631350e]
  4195c8:	xor    dh,BYTE PTR [eax+0x7]
  4195cb:	jmp    0xd97f:0x866c6a41
  4195d2:	jle    0x419651
  4195d4:	stos   BYTE PTR es:[edi],al
  4195d5:	adc    ebp,ebx
  4195d7:	sbb    al,0xee
  4195d9:	lods   al,BYTE PTR ds:[esi]
  4195da:	fwait
  4195db:	mov    WORD PTR [ebx+0x57],?
  4195de:	sub    al,0x75
  4195e0:	xchg   ebx,eax
  4195e1:	out    0xa9,eax
  4195e3:	scas   al,BYTE PTR es:[edi]
  4195e4:	pop    ds
  4195e5:	cmp    BYTE PTR [edx+0x67],dl
  4195e8:	ret    0x372e
  4195eb:	je     0x41960c
  4195ed:	clc    
  4195ee:	pop    ebp
  4195ef:	int    0x93
  4195f1:	inc    eax
  4195f2:	(bad)  
  4195f4:	repz std 
  4195f6:	mov    bl,0x2d
  4195f8:	adc    eax,0x92762827
  4195fd:	fld    QWORD PTR [edi-0x70]
  419600:	(bad)  
  419601:	aam    0x0
  419603:	push   edx
  419604:	into   
  419605:	ss pop edi
  419607:	out    0xec,al
  419609:	arpl   WORD PTR [ebp-0x3e780d6],si
  41960f:	shr    BYTE PTR [ebx-0x1e],cl
  419612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419613:	and    dh,BYTE PTR [esi]
  419615:	sub    al,0x95
  419617:	je     0x4195f8
  419619:	pop    edx
  41961a:	mov    bh,0xba
  41961c:	push   ebx
  41961d:	ins    DWORD PTR es:[edi],dx
  41961e:	pop    eax
  41961f:	push   es
  419620:	or     DWORD PTR [ebx],esp
  419622:	clc    
  419623:	jnp    0x4195b7
  419625:	or     edx,DWORD PTR [ebp-0x3d]
  419628:	push   0x8
  41962a:	push   ebp
  41962b:	(bad)  
  41962d:	lock sbb al,bl
  419630:	add    al,BYTE PTR [ebx+0x61]
  419633:	stos   BYTE PTR es:[edi],al
  419634:	and    dl,BYTE PTR [ebx+0x3c34aa1]
  41963a:	pop    eax
  41963b:	jp     0x419669
  41963d:	addr16 dec esi
  41963f:	gs cli 
  419641:	lahf   
  419642:	ins    DWORD PTR es:[edi],dx
  419643:	out    dx,eax
  419644:	sub    esi,DWORD PTR ds:0xbf727182
  41964a:	inc    ebp
  41964b:	loopne 0x419655
  41964d:	shl    bh,0xbf
  419650:	in     eax,dx
  419651:	test   eax,0x2a43de34
  419656:	inc    ebp
  419657:	inc    edi
  419658:	inc    edx
  419659:	mov    ds:0x79a6b4c8,al
  41965e:	fnstenv [esi-0x70b27254]
  419664:	and    al,0x81
  419666:	push   0x8
  419668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419669:	data16 xchg BYTE PTR [ebx+ebx*1],dh
  41966d:	sub    DWORD PTR [ebp+0x2b69aaa6],edi
  419673:	inc    esi
  419674:	or     eax,0xfe3b83c1
  419679:	fsubr  DWORD PTR [eax]
  41967b:	(bad)  
  41967c:	sbb    esi,ecx
  41967e:	jp     0x419674
  419680:	and    BYTE PTR [ebx+0x2e],dh
  419683:	xchg   ebp,eax
  419684:	push   edx
  419685:	mov    esp,0x59bdc627
  41968a:	scas   eax,DWORD PTR es:[edi]
  41968b:	popf   
  41968c:	mov    ds:0x2ab868fc,al
  419691:	jnp    0x4196d6
  419693:	cld    
  419694:	sti    
  419695:	test   ebx,eax
  419697:	pop    ebp
  419698:	add    al,0x58
  41969a:	xchg   esi,eax
  41969b:	jae    0x419663
  41969d:	clc    
  41969e:	shl    DWORD PTR [ecx-0x16e335b3],cl
  4196a4:	jmp    0xc6b2ba11
  4196a9:	rol    edi,0x32
  4196ac:	fdiv   QWORD PTR [eax-0x7d]
  4196af:	loopne 0x4196e1
  4196b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b2:	and    ebp,ebp
  4196b4:	and    al,0x90
  4196b6:	outs   dx,BYTE PTR ds:[esi]
  4196b7:	popf   
  4196b8:	std    
  4196b9:	jp     0x41967b
  4196bb:	inc    ebp
  4196bc:	cwde   
  4196bd:	test   eax,0xdb1381a9
  4196c2:	out    dx,eax
  4196c3:	sub    al,0xc1
  4196c5:	sbb    DWORD PTR [ebx+0x57],esi
  4196c8:	mov    ebx,0x43724c65
  4196cd:	subps  xmm6,XMMWORD PTR [esi+esi*4]
  4196d1:	jb     0x419705
  4196d3:	jle    0x419656
  4196d5:	imul   esi,DWORD PTR [eax],0x885cd4ce
  4196db:	add    DWORD PTR [edi-0x62a57cc0],ecx
  4196e1:	clc    
  4196e2:	fiadd  DWORD PTR [ecx-0x7c68ef93]
  4196e8:	mov    ss,WORD PTR ds:0xb61e8a5c
  4196ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ef:	mov    esi,0x3e673e66
  4196f4:	xlat   BYTE PTR ds:[ebx]
  4196f5:	sar    BYTE PTR [ebp+0xae01fa5],1
  4196fb:	repnz pop ss
  4196fd:	in     al,0x68
  4196ff:	xor    dl,BYTE PTR gs:[edx+ebx*2-0x68]
  419704:	inc    eax
  419705:	cmpxchg BYTE PTR [ecx+ecx*2],ch
  419709:	fwait
  41970a:	out    0x9e,al
  41970c:	xor    dh,ah
  41970e:	jns    0x419722
  419710:	std    
  419711:	add    dh,BYTE PTR [eax]
  419713:	in     eax,dx
  419714:	or     esp,DWORD PTR [esi+0x40e129be]
  41971a:	mov    ds:0x31308d60,eax
  41971f:	pop    ebp
  419720:	sti    
  419721:	hlt    
  419722:	cmp    BYTE PTR [edi*4+0x4fb2653a],dl
  419729:	mov    DWORD PTR [ebx-0x2b],edx
  41972c:	mov    ds:0x6e867e6a,al
  419731:	mov    al,0xf5
  419733:	repnz dec eax
  419735:	push   0xffffffc3
  419737:	dec    ecx
  419738:	ds or  al,0x11
  41973b:	jb     0x4197ba
  41973d:	ins    BYTE PTR es:[edi],dx
  41973e:	leave  
  41973f:	cmp    al,0x60
  419741:	cwde   
  419742:	rcl    bl,1
  419744:	outs   dx,DWORD PTR ds:[esi]
  419745:	xchg   ecx,edi
  419747:	mov    eax,ds:0xf4376e81
  41974c:	adc    BYTE PTR [eax],ch
  41974e:	cmp    DWORD PTR [ebx+0x42],esi
  419751:	popf   
  419752:	jecxz  0x41973e
  419754:	and    bl,dl
  419756:	lock into 
  419758:	pop    edi
  419759:	adc    esp,esp
  41975b:	outs   dx,BYTE PTR ds:[esi]
  41975c:	rcr    al,1
  41975e:	es mov dh,0x25
  419761:	js     0x4197ba
  419763:	or     BYTE PTR [eax+edx*4],cl
  419766:	sbb    ebx,esi
  419768:	in     eax,0x4c
  41976a:	loope  0x419700
  41976c:	in     eax,0xb6
  41976e:	int3   
  41976f:	mov    eax,0xb3b8815f
  419774:	mov    DWORD PTR [ebx-0x78ee4b39],esp
  41977a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41977b:	pop    esp
  41977c:	inc    edx
  41977d:	xor    edx,DWORD PTR [ecx+0x73]
  419780:	or     ebp,DWORD PTR [ebx-0x5d83f995]
  419786:	lods   eax,DWORD PTR ds:[esi]
  419787:	loope  0x41973e
  419789:	and    cl,dh
  41978b:	jbe    0x41978e
  41978d:	ins    DWORD PTR es:[edi],dx
  41978e:	stos   DWORD PTR es:[edi],eax
  41978f:	in     al,dx
  419790:	leave  
  419791:	test   DWORD PTR [eax-0x68],0x7ec7e363
  419798:	shr    DWORD PTR [ecx-0x5c],cl
  41979b:	jle    0x419738
  41979d:	push   0x17b634f3
  4197a2:	xchg   ebp,eax
  4197a3:	les    ecx,FWORD PTR [ecx]
  4197a5:	mov    ds:0x3a1b70bd,al
  4197aa:	push   edx
  4197ab:	cmp    BYTE PTR [edi],0x66
  4197ae:	inc    edx
  4197af:	cmp    ebp,DWORD PTR [ebx+0x40]
  4197b2:	rcr    DWORD PTR [esi+ebp*8],1
  4197b5:	mov    ds:0x6c2d6d88,eax
  4197ba:	dec    edx
  4197bb:	or     cl,bh
  4197bd:	xor    ebx,DWORD PTR [eax+0x57]
  4197c0:	dec    ebp
  4197c1:	retf   0x1606
  4197c4:	sub    dl,BYTE PTR [edx-0x3a18bb75]
  4197ca:	jle    0x419830
  4197cc:	je     0x41977b
  4197ce:	outs   dx,BYTE PTR ds:[esi]
  4197cf:	pop    edx
  4197d0:	sar    dh,cl
  4197d2:	sar    edx,0xcb
  4197d5:	xchg   BYTE PTR [ebp-0x149fcc5e],bl
  4197db:	cmc    
  4197dc:	lahf   
  4197dd:	and    WORD PTR [ebp+0x24f20334],0xf
  4197e5:	inc    esp
  4197e6:	pusha  
  4197e7:	es pop ds
  4197e9:	cmp    BYTE PTR [esi+0xa919110],dl
  4197ef:	push   eax
  4197f0:	int3   
  4197f1:	cdq    
  4197f2:	pop    eax
  4197f3:	repz (bad) 
  4197f6:	jb     0x4197a9
  4197f8:	jb     0x41980c
  4197fa:	sbb    al,0x8a
  4197fc:	or     BYTE PTR [ebx+0x5c],ah
  4197ff:	test   al,0x1e
  419801:	(bad)  
  419802:	jecxz  0x4197a7
  419804:	inc    esi
  419805:	push   0x12
  419807:	mov    fs,WORD PTR [edx-0x16100e8d]
  41980d:	fisub  DWORD PTR [eax]
  41980f:	sti    
  419810:	lahf   
  419811:	mov    esi,DWORD PTR [esi+edx*4+0x507fcd97]
  419818:	sti    
  419819:	nop
  41981a:	inc    edi
  41981b:	sub    al,0xce
  41981d:	xchg   ebp,eax
  41981e:	icebp  
  41981f:	pop    edi
  419820:	(bad)  
  419822:	adc    dh,BYTE PTR gs:[eax+0x7f]
  419826:	push   eax
  419827:	fadd   DWORD PTR [eax+0x18]
  41982a:	ret    0x4972
  41982d:	jmp    0x4197da
  41982f:	mov    WORD PTR [edx],cs
  419831:	seto   BYTE PTR [ebx]
  419834:	pop    eax
  419835:	shr    eax,0x53
  419838:	sub    al,0xf3
  41983a:	push   esi
  41983b:	(bad)  
  41983c:	jmp    0xb9d7:0x497aa431
  419843:	mov    ebp,0xe3c66a0e
  419848:	fwait
  419849:	sub    al,0xc9
  41984b:	and    DWORD PTR [esi+0x68a7f0a5],ebp
  419851:	and    al,0x0
  419853:	sub    al,0x21
  419855:	or     DWORD PTR [di+0x7680],0xfffffff3
  41985b:	int    0x73
  41985d:	out    dx,al
  41985e:	add    ah,BYTE PTR [esi+0x2c1faf2a]
  419864:	ss push cs
  419866:	jo     0x41981f
  419868:	push   edi
  419869:	retf   0xcc40
  41986c:	xchg   esp,eax
  41986d:	aad    0x66
  41986f:	lea    ebx,[eax-0x5c]
  419872:	sub    BYTE PTR [edi-0x4d],0x84
  419876:	xchg   edx,eax
  419877:	fmul   DWORD PTR [eax-0x3c]
  41987a:	mov    edi,0xfbc311ed
  41987f:	inc    edi
  419880:	ror    edi,0xe9
  419883:	xor    eax,0x50b08d00
  419888:	fdivr  st(2),st
  41988a:	aam    0x79
  41988c:	aam    0xc0
  41988e:	fisub  WORD PTR [eax+eax*4+0x4c]
  419892:	popa   
  419893:	sub    DWORD PTR [ebp-0x1c],0x616e2677
  41989a:	jge    0x41984f
  41989c:	in     eax,dx
  41989d:	push   eax
  41989e:	inc    edi
  41989f:	stos   DWORD PTR es:[edi],eax
  4198a0:	out    dx,al
  4198a1:	in     eax,0xaf
  4198a3:	cmp    eax,0x10b36473
  4198a8:	mov    ecx,ebx
  4198aa:	adc    BYTE PTR ds:0x524e753f,0xdc
  4198b1:	pop    esp
  4198b2:	enter  0xce7f,0xb3
  4198b6:	jo     0x41985f
  4198b8:	or     dl,BYTE PTR [edi]
  4198ba:	aas    
  4198bb:	jnp    0x41991a
  4198bd:	pop    eax
  4198be:	xor    DWORD PTR [ecx+ebp*4],ecx
  4198c1:	std    
  4198c2:	aam    0xb3
  4198c4:	mov    eax,ds:0xde0ebe6e
  4198c9:	js     0x4198a4
  4198cb:	pop    eax
  4198cc:	(bad)  
  4198cd:	sbb    ah,BYTE PTR [esi+ebx*1]
  4198d0:	jne    0x4198df
  4198d2:	in     eax,0xdd
  4198d4:	jo     0x419905
  4198d6:	push   edi
  4198d7:	adc    al,0xa4
  4198d9:	test   BYTE PTR [ecx+0x7c],bh
  4198dc:	xchg   ecx,eax
  4198dd:	and    eax,DWORD PTR [ebp+0x6414dd6f]
  4198e3:	dec    edx
  4198e4:	cmp    cl,0xa8
  4198e7:	mov    al,0xae
  4198e9:	dec    ebp
  4198ea:	in     al,dx
  4198eb:	sub    eax,DWORD PTR [ebp-0x4e]
  4198ee:	in     eax,dx
  4198ef:	mov    ebx,0x5d4e9700
  4198f4:	lock jge 0x4198b7
  4198f7:	jnp    0x419925
  4198f9:	xchg   esp,eax
  4198fa:	mov    esi,0x962a42d
  4198ff:	stc    
  419900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419901:	mov    al,ds:0xca39333a
  419906:	(bad)  
  419907:	leave  
  419908:	add    al,0xf4
  41990a:	xchg   ebp,eax
  41990b:	pop    es
  41990c:	xor    BYTE PTR [ebx],bl
  41990e:	bound  ebx,QWORD PTR [edx+0x721070c2]
  419914:	fisttp WORD PTR [bx+si+0x44]
  419918:	not    BYTE PTR [ecx+0x71]
  41991b:	pop    esp
  41991c:	sahf   
  41991d:	and    DWORD PTR [esi+0x18],eax
  419920:	int3   
  419921:	inc    ecx
  419922:	scas   al,BYTE PTR es:[edi]
  419923:	adc    DWORD PTR [ebx+edi*1],0x3fd9d49d
  41992a:	or     al,0x87
  41992c:	xor    BYTE PTR [edi+0x36],dh
  41992f:	sub    al,0x75
  419931:	leave  
  419932:	call   0x9bba2bfb
  419937:	or     ebx,DWORD PTR [esi]
  419939:	dec    edx
  41993a:	outs   dx,BYTE PTR fs:[esi]
  41993c:	ins    BYTE PTR es:[edi],dx
  41993d:	in     eax,0x95
  41993f:	dec    esi
  419940:	fiadd  DWORD PTR [esi-0x4f]
  419943:	shr    BYTE PTR [ebp+0x7f],cl
  419946:	mov    ch,BYTE PTR ds:0xbc481792
  41994c:	xor    DWORD PTR [eax],esp
  41994e:	xchg   esp,eax
  41994f:	pop    ebp
  419950:	fdiv   DWORD PTR [ebp-0x313b66fe]
  419956:	not    BYTE PTR [ebp+0x77e6319c]
  41995c:	icebp  
  41995d:	jge    0x41998a
  41995f:	sti    
  419960:	pop    es
  419961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419962:	es lahf 
  419964:	push   esi
  419965:	test   edi,esp
  419967:	retf   
  419968:	loopne 0x419909
  41996a:	icebp  
  41996b:	mov    ds:0x5a03407,al
  419970:	dec    ecx
  419971:	pop    ecx
  419972:	inc    eax
  419973:	rcr    DWORD PTR ds:0x366392fe,0xb9
  41997a:	out    0xeb,al
  41997c:	xor    eax,0xb1243e87
  419981:	xchg   edi,eax
  419982:	push   ecx
  419983:	and    eax,0xa4c296ef
  419988:	(bad)  
  419989:	ss mov ebx,0x399682f8
  41998f:	fwait
  419990:	cdq    
  419991:	test   eax,0xa08939e4
  419996:	ins    DWORD PTR es:[edi],dx
  419997:	push   cs
  419998:	test   eax,0x541715f7
  41999d:	xchg   edi,eax
  41999e:	test   BYTE PTR [ecx],dh
  4199a0:	xor    ebx,edi
  4199a2:	adc    eax,0x5b746154
  4199a7:	or     bl,BYTE PTR [ebx+0x0]
  4199aa:	and    DWORD PTR [edi+0x1ab6f4e6],eax
  4199b0:	push   0xffffff9d
  4199b2:	jg     0x4199b1
  4199b4:	add    DWORD PTR [ebx+0xa714045],0xe84c1579
  4199be:	adc    al,0x3
  4199c0:	fld    DWORD PTR [edx+0x7c8bc3de]
  4199c6:	mov    al,ds:0x6f6d7a54
  4199cb:	sar    dh,cl
  4199cd:	in     eax,dx
  4199ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199cf:	push   eax
  4199d0:	ret    0xab57
  4199d3:	shl    DWORD PTR [esi],cl
  4199d5:	es in  eax,dx
  4199d7:	(bad)  
  4199d8:	xchg   esp,eax
  4199d9:	lock int3 
  4199db:	jle    0x419a3f
  4199dd:	dec    DWORD PTR [edi-0x7f]
  4199e0:	int3   
  4199e1:	mov    cl,0xc0
  4199e3:	adc    ah,ch
  4199e5:	pop    ecx
  4199e6:	or     eax,0x6dfa3951
  4199eb:	add    BYTE PTR [esi+0x42],al
  4199ee:	or     BYTE PTR [ecx-0x70],cl
  4199f1:	or     eax,0xbc9796fd
  4199f6:	xchg   edi,eax
  4199f7:	add    dh,al
  4199f9:	(bad)  
  4199fa:	jmp    0x4e1b8eb0
  4199ff:	(bad)  
  419a00:	stc    
  419a01:	in     eax,0xf0
  419a03:	out    dx,al
  419a04:	jmp    0x41999c
  419a06:	ret    
  419a07:	ret    
  419a08:	add    BYTE PTR [edx],ah
  419a0a:	(bad)  
  419a0b:	cmp    bl,bh
  419a0d:	in     al,dx
  419a0e:	imul   esi,DWORD PTR ds:0x90e4bd9,0xffffffbe
  419a15:	test   DWORD PTR [ecx+eax*2-0x46],edi
  419a19:	cld    
  419a1a:	fmul   QWORD PTR [esi]
  419a1c:	mov    BYTE PTR [ebx-0xd],bh
  419a1f:	js     0x419a54
  419a21:	adc    eax,0xe1e5d0f0
  419a26:	mov    bl,0xff
  419a28:	pop    eax
  419a29:	in     eax,0x80
  419a2b:	in     al,0xf6
  419a2d:	icebp  
  419a2e:	or     BYTE PTR [eiz*4-0x77ce10aa],0x14
  419a36:	push   ecx
  419a37:	les    edi,FWORD PTR [esi-0x53]
  419a3a:	inc    eax
  419a3b:	pop    ecx
  419a3c:	ret    0x8e96
  419a3f:	xor    DWORD PTR [edx-0xc],esp
  419a42:	stc    
  419a43:	repnz rcl DWORD PTR [ebp+eiz*2-0x6f],0x64
  419a49:	add    al,0xb8
  419a4b:	xor    edx,ebp
  419a4d:	xchg   BYTE PTR [edi],bh
  419a4f:	ds mov cl,0x3e
  419a52:	(bad)  
  419a53:	push   esp
  419a54:	sub    esp,DWORD PTR [eax]
  419a56:	gs loop 0x419a88
  419a59:	and    ebx,DWORD PTR [edi]
  419a5b:	fist   WORD PTR [edi]
  419a5d:	mov    eax,0xb64dc173
  419a62:	add    eax,0xe7f2c5fa
  419a67:	and    esp,DWORD PTR [ecx-0x3]
  419a6a:	(bad)
  419a6d:	add    al,0x2a
  419a6f:	sbb    edx,DWORD PTR [ebx-0x7ecaec0f]
  419a75:	sti    
  419a76:	jmp    0x97b5b811
  419a7b:	call   0x701b:0x1f332b54
  419a82:	sahf   
  419a83:	cmp    al,0x5f
  419a85:	inc    ecx
  419a86:	or     cl,cl
  419a88:	(bad)  
  419a89:	imul   esi,esp,0xefedd593
  419a8f:	push   0x14
  419a91:	popa   
  419a92:	mov    bh,0x97
  419a94:	dec    ebx
  419a95:	fisttp DWORD PTR [ecx]
  419a97:	repnz ins DWORD PTR es:[edi],dx
  419a99:	fs ds mov bh,0xcc
  419a9d:	addr16 xor eax,0x811bb603
  419aa3:	mov    sp,0xe0f8
  419aa7:	mov    al,ds:0x3b3fa87a
  419aac:	or     al,0x4e
  419aae:	xor    ax,0x50f8
  419ab2:	and    DWORD PTR [eax-0x23],ebx
  419ab5:	cmp    DWORD PTR [edx+0x60],edi
  419ab8:	pop    edx
  419ab9:	jp     0x419a7f
  419abb:	hlt    
  419abc:	rcr    BYTE PTR [ebx-0x1d9fc591],1
  419ac2:	outs   dx,DWORD PTR ds:[esi]
  419ac3:	lahf   
  419ac4:	std    
  419ac5:	push   ecx
  419ac6:	arpl   WORD PTR [esi],bp
  419ac8:	(bad)  
  419ac9:	int3   
  419aca:	shl    cl,0x82
  419acd:	cdq    
  419ace:	cmp    edi,DWORD PTR [eax]
  419ad0:	shl    BYTE PTR [ecx],0x6f
  419ad3:	out    0xf2,al
  419ad5:	push   eax
  419ad6:	fnstcw WORD PTR [edi-0x737fd27c]
  419adc:	and    eax,0x864999a7
  419ae1:	call   0xd314c81d
  419ae6:	mov    WORD PTR [edx+edx*8],?
  419ae9:	mov    ah,0xd4
  419aeb:	mov    bh,0xb0
  419aed:	mov    dl,0x87
  419aef:	in     al,dx
  419af0:	xchg   esp,eax
  419af1:	jle    0x419a83
  419af3:	dec    ebp
  419af4:	push   ecx
  419af5:	adc    al,0x4f
  419af7:	sub    eax,0x2522f00d
  419afc:	in     eax,dx
  419afd:	data16 fsub DWORD PTR [ecx]
  419b00:	sub    ecx,DWORD PTR [eax]
  419b02:	pop    ebp
  419b03:	pop    es
  419b04:	push   edx
  419b05:	and    al,0x71
  419b07:	hlt    
  419b08:	push   cs
  419b09:	mov    ebx,0x31c19347
  419b0e:	mov    bl,BYTE PTR [ecx]
  419b10:	push   ds
  419b11:	pusha  
  419b12:	add    esp,DWORD PTR [edx+0x47]
  419b15:	fld    DWORD PTR [esi-0x70]
  419b18:	outs   dx,DWORD PTR ds:[esi]
  419b19:	mov    al,0x30
  419b1b:	mov    eax,0xbd800f9f
  419b20:	std    
  419b21:	adc    ebp,DWORD PTR [ecx+0x40d4d909]
  419b27:	pushf  
  419b28:	repz push eax
  419b2a:	push   es
  419b2b:	sub    esi,DWORD PTR [edx-0x500eed82]
  419b31:	pop    edi
  419b32:	push   edi
  419b33:	adc    BYTE PTR [edi],dh
  419b35:	leave  
  419b36:	clc    
  419b37:	xor    edi,DWORD PTR [edx+0x3c8a97b9]
  419b3d:	sbb    esp,ebx
  419b3f:	dec    esi
  419b40:	aaa    
  419b41:	iret   
  419b42:	les    ebp,FWORD PTR ds:0x6c48a17f
  419b48:	hlt    
  419b49:	mov    al,ds:0xb12ac2f1
  419b4e:	(bad)  
  419b4f:	mov    esp,0x5726bb40
  419b54:	jb     0x419b05
  419b56:	jg     0x419b82
  419b58:	fnstcw WORD PTR [edx+edi*1+0x54]
  419b5c:	inc    ebx
  419b5d:	adc    eax,0x35b6da4
  419b62:	mov    al,ds:0xb485299a
  419b67:	ss and eax,0xbad0af8b
  419b6d:	daa    
  419b6e:	je     0x419be8
  419b70:	or     eax,0x50560b3b
  419b75:	mov    dh,0xe4
  419b77:	retf   0xb2c8
  419b7a:	xor    eax,0x6cf81c07
  419b7f:	and    DWORD PTR [ecx],esp
  419b81:	xchg   edi,eax
  419b82:	jne    0x419bc7
  419b84:	mov    al,0xa0
  419b86:	and    cl,BYTE PTR [edi]
  419b88:	imul   esi,DWORD PTR [eax],0xbe470e43
  419b8e:	jmp    0xce5d19b8
  419b93:	cmp    BYTE PTR [esi-0x6b],cl
  419b96:	test   al,0xb5
  419b98:	ins    DWORD PTR es:[edi],dx
  419b99:	add    BYTE PTR [ebx-0x511b2317],al
  419b9f:	jmp    0x3306:0x1e58b977
  419ba6:	in     al,dx
  419ba7:	imul   ecx,DWORD PTR [ebx-0x73c304e9],0xffffff9b
  419bae:	daa    
  419baf:	push   ebx
  419bb0:	cmp    eax,0xa6517a20
  419bb5:	inc    edx
  419bb6:	jbe    0x419b4c
  419bb8:	sub    ah,BYTE PTR [ebp+0x56ba2587]
  419bbe:	adc    dh,al
  419bc0:	into   
  419bc1:	mov    DWORD PTR [ecx+0x2041883f],ebp
  419bc7:	jg     0x419b4b
  419bc9:	sbb    eax,0x4f110cc1
  419bce:	(bad)  
  419bcf:	fimul  DWORD PTR [ebx]
  419bd1:	cmp    cl,al
  419bd3:	mov    ds:0xd7e0a105,eax
  419bd8:	ja     0x419c0a
  419bda:	pusha  
  419bdb:	and    dh,BYTE PTR [ebx-0x645c5c5e]
  419be1:	xchg   BYTE PTR [edx],dh
  419be3:	mov    gs,WORD PTR [edi-0x181e4e20]
  419be9:	pop    eax
  419bea:	sbb    DWORD PTR [ebx-0x74b0dbb9],esi
  419bf0:	fwait
  419bf1:	scas   eax,DWORD PTR es:[edi]
  419bf2:	xchg   esi,eax
  419bf3:	mov    ch,0x88
  419bf5:	shl    BYTE PTR [ebx+0x76],1
  419bf8:	xadd   BYTE PTR [edx-0x7a],bh
  419bfc:	sub    DWORD PTR [edi-0x7e8b165],0x6fcf2501
  419c06:	lods   al,BYTE PTR ds:[esi]
  419c07:	cmp    DWORD PTR [ebx+0x27],esi
  419c0a:	rcl    DWORD PTR [edi+0x1143fb64],1
  419c10:	pop    edi
  419c11:	inc    ecx
  419c12:	inc    ebp
  419c13:	mov    al,0x43
  419c15:	sub    esi,DWORD PTR [eax]
  419c17:	imul   DWORD PTR [ecx-0x242fef63]
  419c1d:	iret   
  419c1e:	scas   eax,DWORD PTR es:[edi]
  419c1f:	sub    eax,0x71c06b79
  419c24:	aaa    
  419c25:	adc    dl,BYTE PTR [eax]
  419c27:	cdq    
  419c28:	lods   eax,DWORD PTR ds:[esi]
  419c29:	mov    edx,0xbaff8004
  419c2e:	sub    esp,ebx
  419c30:	sbb    al,0x9b
  419c32:	fsub   QWORD PTR [ebp+0x1cabe69e]
  419c38:	pop    esi
  419c39:	lea    ebp,[edx]
  419c3b:	adc    ch,0x5b
  419c3e:	dec    esi
  419c3f:	xchg   edx,eax
  419c40:	add    ah,bl
  419c42:	mov    DWORD PTR [edi+ebp*8],0xee7381e
  419c49:	mov    gs,ebx
  419c4b:	jle    0x419bd6
  419c4d:	fadd   QWORD PTR [ebx+eiz*8]
  419c50:	pop    es
  419c51:	inc    edx
  419c52:	mov    edx,0x44f41678
  419c57:	jb     0x419bf2
  419c59:	xchg   ebp,eax
  419c5a:	sub    al,0x5a
  419c5c:	mov    cl,BYTE PTR [edi]
  419c5e:	sbb    DWORD PTR [eax+esi*1+0x70a161c5],0x5b
  419c66:	bound  ebx,QWORD PTR [eax+ecx*1]
  419c69:	nop
  419c6a:	sub    edi,edi
  419c6c:	lods   al,BYTE PTR ds:[esi]
  419c6d:	(bad)  [edx]
  419c6f:	inc    ecx
  419c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c71:	push   eax
  419c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c73:	pop    edi
  419c74:	jp     0x419cc6
  419c76:	jb     0x419c1b
  419c78:	cmp    eax,DWORD PTR [ebp+0x6a]
  419c7b:	pop    ecx
  419c7c:	pop    ebx
  419c7d:	and    al,0x1d
  419c7f:	nop
  419c80:	cmc    
  419c81:	sub    dl,BYTE PTR [edx+0x35]
  419c84:	mov    ds:0x3b161131,al
  419c89:	repz xchg edi,eax
  419c8b:	out    dx,eax
  419c8c:	push   cs
  419c8d:	or     edx,DWORD PTR [ecx+0x7494cd0b]
  419c93:	sahf   
  419c94:	adc    eax,0xade1ce8f
  419c99:	dec    edi
  419c9a:	sbb    al,0x9c
  419c9c:	dec    ebp
  419c9d:	fisubr WORD PTR [ebp+0x39]
  419ca0:	mov    DWORD PTR [ecx+0x51],edi
  419ca3:	dec    edx
  419ca4:	retf   
  419ca5:	mov    ch,0xf3
  419ca7:	or     DWORD PTR [edx-0x37e0a53c],ebx
  419cad:	mov    ds:0xb2154ba5,eax
  419cb2:	retf   
  419cb3:	mov    bh,0x8
  419cb5:	jb     0x419d06
  419cb7:	push   cs
  419cb8:	cwde   
  419cb9:	psubb  mm3,mm3
  419cbc:	sbb    edi,DWORD PTR [edx+0x40]
  419cbf:	push   ecx
  419cc0:	fmulp  st(7),st
  419cc2:	sbb    al,0x4
  419cc4:	les    ebp,FWORD PTR [ebp+0x66]
  419cc7:	shl    edi,0xe1
  419cca:	in     eax,0x5e
  419ccc:	fmul   DWORD PTR [esi]
  419cce:	cld    
  419ccf:	arpl   WORD PTR [ebx+0x4e1442ea],bp
  419cd5:	jnp    0x419d06
  419cd7:	fwait
  419cd8:	pop    ebp
  419cd9:	nop
  419cda:	cmp    bl,BYTE PTR [ebp+ebp*2-0x7c52b81]
  419ce1:	imul   edi,DWORD PTR [ebx+0x27bad180],0xffffffb7
  419ce8:	in     al,0xde
  419cea:	fimul  DWORD PTR [ecx]
  419cec:	mov    bh,0x6e
  419cee:	mov    dh,0x12
  419cf0:	loopne 0x419d52
  419cf2:	mov    ds:0x31c6eb9f,al
  419cf7:	and    al,BYTE PTR [esi-0x40]
  419cfa:	jno    0x419d45
  419cfc:	xchg   edi,eax
  419cfd:	lock add DWORD PTR [ecx+edx*2+0x4c],0x989031aa
  419d06:	inc    edi
  419d07:	mov    bl,0x4f
  419d09:	(bad)  
  419d0a:	adc    BYTE PTR [ecx+0x19],cl
  419d0d:	and    ecx,DWORD PTR [ebx]
  419d0f:	push   eax
  419d10:	adc    esi,DWORD PTR [ebx-0x2c8f71e4]
  419d16:	call   0x6423f557
  419d1b:	test   eax,0xf860a2c5
  419d20:	es dec esi
  419d22:	repz inc eax
  419d24:	push   ds
  419d25:	jmp    0x419d79
  419d27:	adc    bl,BYTE PTR [esi]
  419d29:	cmp    BYTE PTR [ebx-0x1e],al
  419d2c:	lea    ecx,[esi-0xf]
  419d2f:	adc    al,0xee
  419d31:	(bad)  
  419d32:	jmp    0x12f51d1d
  419d37:	push   eax
  419d38:	jg     0x419d6d
  419d3a:	mov    ecx,DWORD PTR [eax-0xabc0407]
  419d40:	jae    0x419d50
  419d42:	dec    edi
  419d43:	outs   dx,DWORD PTR ds:[esi]
  419d44:	ret    
  419d45:	mov    eax,ds:0xb1a01902
  419d4a:	jle    0x419d8e
  419d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d4d:	ins    DWORD PTR es:[edi],dx
  419d4e:	(bad)  
  419d4f:	fbstp  TBYTE PTR [ebp+0x75]
  419d52:	ror    BYTE PTR [eax+0x5c97fd62],0xb5
  419d59:	adc    bl,bh
  419d5b:	dec    esp
  419d5c:	xchg   edi,eax
  419d5d:	or     cl,BYTE PTR [edi]
  419d5f:	mov    edi,0xa1702452
  419d64:	cwde   
  419d65:	aaa    
  419d66:	adc    bl,BYTE PTR [edi+ecx*2]
  419d69:	iret   
  419d6a:	sub    dl,BYTE PTR [eax]
  419d6c:	push   eax
  419d6d:	cmp    eax,0x6ef94190
  419d72:	push   edx
  419d73:	sbb    esi,DWORD PTR [esi+0x2bba9133]
  419d79:	push   0xd7e50bfa
  419d7e:	nop
  419d7f:	sub    DWORD PTR ds:0x520ab9b3,edx
  419d85:	or     BYTE PTR [edx-0x14dde153],bh
  419d8b:	jp     0x419de6
  419d8d:	es dec edx
  419d8f:	adc    al,BYTE PTR [ebx+0x2c]
  419d92:	xor    DWORD PTR [ebx+0x2d],0x22
  419d96:	pop    ss
  419d97:	cli    
  419d98:	sbb    al,0xe6
  419d9a:	xchg   edx,eax
  419d9b:	inc    edi
  419d9c:	sti    
  419d9d:	in     eax,dx
  419d9e:	push   0x2e1d61bb
  419da3:	in     eax,0xf6
  419da5:	add    al,0xd6
  419da7:	push   ebx
  419da8:	xchg   ebp,eax
  419da9:	mov    dl,0x90
  419dab:	bnd es jge 0x419daf
  419daf:	das    
  419db0:	(bad)  
  419db1:	lods   al,BYTE PTR ds:[esi]
  419db2:	int    0x81
  419db4:	pop    es
  419db5:	dec    esp
  419db6:	sbb    al,0xa3
  419db8:	js     0x419d4d
  419dba:	push   ebp
  419dbb:	mov    edi,?
  419dbd:	shr    edi,cl
  419dbf:	sahf   
  419dc0:	jne    0x419df7
  419dc2:	scas   eax,DWORD PTR es:[edi]
  419dc3:	retf   
  419dc4:	das    
  419dc5:	jbe    0x419d8b
  419dc7:	adc    al,BYTE PTR [esi+0x44]
  419dca:	or     al,0x9b
  419dcc:	das    
  419dcd:	out    dx,al
  419dce:	push   0x9
  419dd0:	les    esp,FWORD PTR [edx+ebp*8-0x6f]
  419dd4:	scas   eax,DWORD PTR es:[edi]
  419dd5:	pusha  
  419dd6:	or     ch,BYTE PTR [edx-0x6d468514]
  419ddc:	add    al,0x36
  419dde:	or     DWORD PTR [esi],0x5a049511
  419de4:	call   0xcfbf:0x9d48a81b
  419deb:	xchg   ebx,eax
  419dec:	(bad)  
  419ded:	in     al,dx
  419dee:	add    dl,BYTE PTR [eax]
  419df0:	jns    0x419e1b
  419df2:	jecxz  0x419de1
  419df4:	ja     0x419e21
  419df6:	ret    0x1e83
  419df9:	daa    
  419dfa:	and    DWORD PTR [ecx],0xffffffa0
  419dfd:	pop    edi
  419dfe:	pop    esp
  419dff:	inc    ecx
  419e00:	fstp   QWORD PTR [esi+esi*2+0x5669bfad]
  419e07:	jle    0x419e56
  419e09:	adc    DWORD PTR [edx+0x44],ebx
  419e0c:	push   ebp
  419e0d:	and    eax,0xcc4c2079
  419e12:	jecxz  0x419e2b
  419e14:	jne    0x419de4
  419e16:	xor    eax,DWORD PTR ds:[ecx+0x428943e9]
  419e1d:	cmp    eax,0x76861946
  419e22:	mov    eax,ds:0x8b7c2a10
  419e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e28:	in     eax,dx
  419e29:	outs   dx,DWORD PTR ds:[esi]
  419e2a:	lds    eax,FWORD PTR [ebx+0x2e]
  419e2d:	dec    ecx
  419e2e:	ds nop
  419e30:	stos   DWORD PTR es:[edi],eax
  419e31:	aaa    
  419e32:	mov    ds:0x8ec45295,al
  419e37:	(bad)  
  419e38:	fs mov eax,0xe5805c57
  419e3e:	ret    
  419e3f:	ror    DWORD PTR ds:0xcf22a244,1
  419e45:	sti    
  419e46:	fist   WORD PTR [ecx]
  419e48:	mov    dh,0x26
  419e4a:	jb     0x419e41
  419e4c:	shl    BYTE PTR [esi],cl
  419e4e:	scas   al,BYTE PTR es:[edi]
  419e4f:	mov    esi,0xa05b804b
  419e54:	jmp    0x2972:0x4c5e1c2e
  419e5b:	jb     0x419e15
  419e5d:	inc    ecx
  419e5e:	fld    QWORD PTR [esi+0x72]
  419e61:	js     0x419e43
  419e63:	push   esp
  419e64:	inc    eax
  419e65:	sbb    al,0xa4
  419e67:	int3   
  419e68:	sti    
  419e69:	mov    cl,0x3a
  419e6b:	shr    DWORD PTR [esi+edx*8-0x4a],0x54
  419e70:	xchg   edi,eax
  419e71:	fnstcw WORD PTR [edx]
  419e73:	and    BYTE PTR [eax+0x4ee70dad],ch
  419e79:	lods   eax,DWORD PTR ds:[esi]
  419e7a:	jns    0x419e33
  419e7c:	adc    esi,DWORD PTR [ebx+0x74]
  419e7f:	pushf  
  419e80:	lods   eax,DWORD PTR ds:[esi]
  419e81:	in     al,0xf6
  419e83:	stos   DWORD PTR es:[edi],eax
  419e84:	aad    0x39
  419e86:	shl    bh,1
  419e88:	xlat   BYTE PTR ds:[ebx]
  419e89:	ins    BYTE PTR es:[edi],dx
  419e8a:	xchg   ebx,eax
  419e8b:	inc    ebx
  419e8c:	push   ebx
  419e8d:	sbb    al,0xbb
  419e8f:	es scas al,BYTE PTR es:[edi]
  419e91:	xchg   BYTE PTR [ecx-0x62e9f12],al
  419e97:	pop    eax
  419e98:	jl     0x419e29
  419e9a:	test   DWORD PTR [edi],edx
  419e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9d:	scas   al,BYTE PTR es:[edi]
  419e9e:	pop    esi
  419e9f:	and    ah,BYTE PTR [ebx]
  419ea1:	in     eax,0xa4
  419ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea5:	jno    0x419e63
  419ea7:	jg     0x419e31
  419ea9:	cmp    al,0x65
  419eab:	xor    eax,0xccb62b1a
  419eb0:	lods   eax,DWORD PTR ds:[esi]
  419eb1:	push   cs
  419eb2:	dec    ebx
  419eb3:	fidiv  WORD PTR [esp+ebp*2]
  419eb6:	jne    0x419f06
  419eb8:	ja     0x419ef8
  419eba:	call   0x7ce570cd
  419ebf:	fsubr  QWORD PTR [esi+0x2]
  419ec2:	sub    DWORD PTR [ecx-0x7556aecf],esp
  419ec8:	int    0x63
  419eca:	stc    
  419ecb:	xor    BYTE PTR [ebx],0x7
  419ece:	push   edi
  419ecf:	add    al,0x4c
  419ed1:	push   edi
  419ed2:	in     eax,0xe2
  419ed4:	repnz or ebp,DWORD PTR [eax]
  419ed7:	sub    BYTE PTR [edx+0x6fdb1ae8],dh
  419edd:	sub    edi,DWORD PTR [ecx+0x515e08b5]
  419ee3:	gs mov dl,0x2c
  419ee6:	cmp    bh,ch
  419ee8:	dec    esi
  419ee9:	mov    edx,0x607eae80
  419eee:	(bad)  
  419eef:	loope  0x419ec6
  419ef1:	lods   eax,DWORD PTR ds:[esi]
  419ef2:	cmp    al,0x5
  419ef4:	minps  xmm3,XMMWORD PTR [ebx+0x32]
  419ef8:	(bad)  
  419ef9:	iret   
  419efa:	mov    esp,DWORD PTR [esi-0x72]
  419efd:	aad    0x13
  419eff:	add    DWORD PTR [ecx-0x801537f],edi
  419f05:	sbb    ebp,DWORD PTR [ebp+0x9]
  419f08:	ret    0x770
  419f0b:	pop    ebx
  419f0c:	mov    bl,0x5f
  419f0e:	lods   al,BYTE PTR ds:[esi]
  419f0f:	dec    edi
  419f10:	lahf   
  419f11:	rcr    BYTE PTR [ecx+0x3381faa4],1
  419f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f18:	out    0x63,eax
  419f1a:	or     al,BYTE PTR [ebx]
  419f1c:	lods   al,BYTE PTR ds:[esi]
  419f1d:	mov    esi,?
  419f1f:	xchg   edi,eax
  419f20:	or     eax,0xc166ecf6
  419f25:	or     BYTE PTR [ebx+0x60dc4efb],cl
  419f2b:	sub    DWORD PTR [ecx+0x49],esp
  419f2e:	jbe    0x419fa9
  419f30:	mov    eax,ds:0xc97a0deb
  419f35:	daa    
  419f36:	ins    BYTE PTR es:[edi],dx
  419f37:	jmp    0x419f25
  419f39:	inc    ecx
  419f3a:	cmc    
  419f3b:	test   bl,ch
  419f3d:	icebp  
  419f3e:	dec    edx
  419f3f:	and    DWORD PTR [ebx-0x5a],ebp
  419f42:	sar    cl,0x37
  419f45:	arpl   WORD PTR [ebx],sp
  419f47:	mov    esi,0xd0bca06a
  419f4c:	sbb    eax,0xb5f71e87
  419f51:	push   0x74
  419f53:	sbb    al,0xe7
  419f55:	ret    
  419f56:	ret    
  419f57:	inc    BYTE PTR [eax-0x43]
  419f5a:	dec    esi
  419f5b:	clc    
  419f5c:	jns    0x419f4f
  419f5e:	jbe    0x419f8e
  419f60:	lock jbe 0x419f88
  419f63:	imul   esi,DWORD PTR [eax+0x5de64734],0xe4b9d012
  419f6d:	lods   al,BYTE PTR ds:[esi]
  419f6e:	call   0xc9c06bb7
  419f73:	pop    edi
  419f74:	pop    esi
  419f75:	jmp    0x7483bfec
  419f7a:	pop    ebx
  419f7b:	inc    ebp
  419f7c:	aaa    
  419f7d:	push   esp
  419f7e:	or     bl,ah
  419f80:	mov    eax,0x41e7416e
  419f85:	mov    ?,ebx
  419f87:	repz and al,0x18
  419f8a:	stos   BYTE PTR es:[edi],al
  419f8b:	div    BYTE PTR [edx+0x33]
  419f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8f:	jns    0x419fea
  419f91:	jge    0x419f94
  419f93:	jp     0x419fe1
  419f95:	mov    esi,0xec88cc9d
  419f9a:	adc    DWORD PTR [ecx+0x3c7c228],edx
  419fa0:	mov    esp,0xe31476be
  419fa5:	xchg   BYTE PTR [ebx],bl
  419fa7:	test   eax,0x77e4fd8f
  419fac:	out    0x67,eax
  419fae:	ret    
  419faf:	jecxz  0x41a02f
  419fb1:	loop   0x419f51
  419fb3:	push   ss
  419fb4:	les    esi,FWORD PTR [ecx-0x40]
  419fb7:	repz jns 0x419f70
  419fba:	xchg   ebp,eax
  419fbb:	or     eax,0xa60c3d8e
  419fc0:	rcl    edx,cl
  419fc2:	add    BYTE PTR [edi+0x62],0x40
  419fc6:	dec    edx
  419fc7:	lods   eax,DWORD PTR ds:[esi]
  419fc8:	push   esi
  419fc9:	push   ss
  419fca:	mov    ebx,0x45a3cb8c
  419fcf:	pop    es
  419fd0:	push   esi
  419fd1:	push   ds
  419fd2:	xchg   ebp,ecx
  419fd4:	fsub   QWORD PTR ds:0xcc985222
  419fda:	mov    ds:0x2c8e0be4,eax
  419fdf:	xchg   edx,eax
  419fe0:	fisub  DWORD PTR [eax-0x4a]
  419fe3:	sub    edx,DWORD PTR [ecx+0x188cc315]
  419fe9:	loope  0x41a01b
  419feb:	gs jb  0x419fe2
  419fee:	es test eax,0xbebd1360
  419ff4:	ret    0xacae
  419ff7:	mov    BYTE PTR [ebx-0x4a],ch
  419ffa:	les    ecx,FWORD PTR [ecx]
  419ffc:	cdq    
  419ffd:	(bad)  
  419ffe:	out    0x30,eax
  41a000:	imul   esi,DWORD PTR [esi-0x80],0x88f41498
  41a007:	add    al,0x1e
  41a009:	aad    0x8f
  41a00b:	sbb    ah,BYTE PTR [ecx-0x37]
  41a00e:	cmp    al,0xe3
  41a010:	push   es
  41a011:	push   0xfffffffc
  41a013:	mov    cl,0xcb
  41a015:	sub    eax,0xe2d235a4
  41a01a:	mov    ch,0xd6
  41a01c:	sahf   
  41a01d:	aaa    
  41a01e:	mov    eax,ds:0xea7e3613
  41a023:	or     al,0x4f
  41a025:	enter  0x6638,0xca
  41a029:	gs call 0xd83c282d
  41a02f:	(bad)  
  41a030:	fcom   QWORD PTR [edx+0x2]
  41a033:	inc    esp
  41a034:	or     cl,cl
  41a036:	ins    BYTE PTR es:[edi],dx
  41a037:	lods   eax,DWORD PTR ds:[esi]
  41a038:	cld    
  41a039:	mov    dl,0x5
  41a03b:	or     ecx,DWORD PTR [eax+esi*4+0x68]
  41a03f:	jecxz  0x41a023
  41a041:	cmp    edi,0xfc5b75c6
  41a047:	int    0x2d
  41a049:	aaa    
  41a04a:	mov    dh,0x22
  41a04c:	ret    0x583c
  41a04f:	(bad)  
  41a050:	jp     0x41a0a3
  41a052:	sbb    al,0x12
  41a054:	mov    al,ds:0x4914d12d
  41a059:	rcl    edi,1
  41a05b:	xchg   edi,eax
  41a05c:	test   esi,0xed68ff8f
  41a062:	xor    al,0xd8
  41a064:	cmp    al,0x39
  41a066:	scas   eax,DWORD PTR es:[edi]
  41a067:	push   eax
  41a068:	shl    DWORD PTR [esp+edi*8+0x4fd2be51],cl
  41a06f:	jb     0x41a07d
  41a071:	cli    
  41a072:	cwde   
  41a073:	loop   0x41a0e3
  41a075:	adc    esi,DWORD PTR [esi-0x36]
  41a078:	pop    eax
  41a079:	xchg   dl,cl
  41a07b:	mov    eax,ds:0x32ca3410
  41a080:	pop    ecx
  41a081:	mov    esi,0x1cd3ea47
  41a086:	push   ss
  41a087:	in     eax,dx
  41a088:	in     al,dx
  41a089:	es pushf 
  41a08b:	pushf  
  41a08c:	mov    es,WORD PTR [esi-0x27]
  41a08f:	ret    
  41a090:	pop    eax
  41a091:	sub    ah,BYTE PTR [ecx]
  41a093:	pushf  
  41a094:	xchg   esp,eax
  41a095:	dec    ebp
  41a096:	adc    esp,DWORD PTR [eax+0x395c5b56]
  41a09c:	pop    edx
  41a09d:	dec    edi
  41a09e:	and    DWORD PTR [ebp-0x29],esp
  41a0a1:	in     al,dx
  41a0a2:	push   ds
  41a0a3:	cmp    ax,0x5828
  41a0a7:	inc    esp
  41a0a8:	dec    eax
  41a0a9:	inc    ebp
  41a0aa:	mov    dh,0xee
  41a0ac:	jle    0x41a0e9
  41a0ae:	fbstp  TBYTE PTR [eax+0xd839d3f]
  41a0b4:	jmp    0x41a070
  41a0b6:	xchg   esi,eax
  41a0b7:	fsub   DWORD PTR [edx-0x5bd75954]
  41a0bd:	mov    edx,0xc2277fea
  41a0c2:	ja     0x41a093
  41a0c4:	or     al,0x98
  41a0c6:	dec    edi
  41a0c7:	call   0xdaf:0xe1f5154
  41a0ce:	loopne 0x41a0be
  41a0d0:	jo     0x41a0b4
  41a0d2:	dec    edi
  41a0d3:	leave  
  41a0d4:	add    ecx,eax
  41a0d6:	mov    ch,0xbd
  41a0d8:	cmp    DWORD PTR [ebx-0x49],ebx
  41a0db:	sbb    al,0x7b
  41a0dd:	lds    ebx,FWORD PTR [esp+esi*1-0x6884ad2d]
  41a0e4:	ins    BYTE PTR es:[edi],dx
  41a0e5:	mov    BYTE PTR [ecx+0x7e9099b9],bh
  41a0eb:	sbb    BYTE PTR [ebx+0x7ca914e6],dh
  41a0f1:	pop    esp
  41a0f2:	and    bh,BYTE PTR [edx+0x382dc022]
  41a0f8:	and    BYTE PTR [ecx],ah
  41a0fa:	inc    esp
  41a0fb:	push   edi
  41a0fc:	stos   DWORD PTR es:[edi],eax
  41a0fd:	dec    ebx
  41a0fe:	pop    ebx
  41a0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a100:	daa    
  41a101:	in     al,dx
  41a102:	cmp    eax,0xb62d5dfd
  41a107:	rol    DWORD PTR [edx+0x58],0xef
  41a10b:	data16 cli 
  41a10d:	mov    dh,0x35
  41a10f:	push   ss
  41a110:	mov    edi,0x3034b7c2
  41a115:	push   cs
  41a116:	(bad)  
  41a117:	pusha  
  41a118:	in     al,0x74
  41a11a:	js     0x41a0dd
  41a11c:	pop    es
  41a11d:	ss pop ds
  41a11f:	push   0x284835ef
  41a124:	mov    ecx,0xdff1029e
  41a129:	bound  ecx,QWORD PTR [ebp+0x25e94bd6]
  41a12f:	push   ss
  41a130:	cmp    DWORD PTR [ebx+eiz*4+0x58],edx
  41a134:	jp     0x41a0cb
  41a136:	(bad)  
  41a137:	xlat   BYTE PTR ds:[ebx]
  41a138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a139:	rcl    DWORD PTR [edi],1
  41a13b:	cmp    edi,ebx
  41a13d:	and    dh,BYTE PTR [edi-0x76]
  41a140:	outs   dx,BYTE PTR ds:[esi]
  41a141:	inc    ecx
  41a142:	mov    edx,0xf055957c
  41a147:	xor    ecx,DWORD PTR ds:0xcb6b368e
  41a14d:	popa   
  41a14e:	mov    al,0xe2
  41a150:	xchg   ebx,eax
  41a151:	scas   eax,DWORD PTR es:[edi]
  41a152:	sub    dh,dh
  41a154:	out    0xf2,eax
  41a156:	rcr    BYTE PTR [edi+0x2112d2ab],1
  41a15c:	inc    eax
  41a15d:	sbb    al,0x7f
  41a15f:	icebp  
  41a160:	cld    
  41a161:	dec    edx
  41a162:	xor    dh,BYTE PTR [eax-0x15]
  41a165:	inc    ecx
  41a166:	iret   
  41a167:	fcmovb st,st(7)
  41a169:	and    ah,BYTE PTR [ebp+0x46]
  41a16c:	mov    dl,0x4a
  41a16e:	or     BYTE PTR [ebp+0x42],0x12
  41a172:	nop
  41a173:	adc    eax,0x7c4cfb9f
  41a178:	and    eax,0x2519c33c
  41a17d:	lods   al,BYTE PTR ds:[esi]
  41a17e:	xchg   edi,eax
  41a17f:	inc    esi
  41a180:	add    al,0x99
  41a182:	sbb    eax,0xb67c491d
  41a187:	in     eax,dx
  41a188:	add    edx,DWORD PTR [ecx+eax*4+0x1b]
  41a18c:	inc    ebx
  41a18d:	jo     0x41a1d2
  41a18f:	rcr    DWORD PTR [ecx-0xad5dbec],1
  41a195:	cs jne 0x41a1d0
  41a198:	mov    ebp,edx
  41a19a:	mov    edx,0x73715d56
  41a19f:	pcmpgtb mm4,QWORD PTR [esi]
  41a1a2:	(bad)  
  41a1a3:	out    dx,eax
  41a1a4:	mov    es,WORD PTR ds:0xb7593c03
  41a1aa:	pop    esi
  41a1ab:	scas   al,BYTE PTR es:[edi]
  41a1ac:	mov    dh,0x6b
  41a1ae:	sbb    eax,0xecaa18d9
  41a1b3:	fstp   DWORD PTR ds:0xdad75cd4
  41a1b9:	pop    ebx
  41a1ba:	out    0x3b,al
  41a1bc:	add    DWORD PTR [esi],edi
  41a1be:	int3   
  41a1bf:	aam    0x11
  41a1c1:	mov    bh,al
  41a1c3:	fldenv [eax-0x2e61185f]
  41a1c9:	or     BYTE PTR [esi],ch
  41a1cb:	sub    dl,BYTE PTR [eax+esi*8]
  41a1ce:	int    0x9e
  41a1d0:	jle    0x41a191
  41a1d2:	push   ebx
  41a1d3:	mov    DWORD PTR [esi+eax*1-0x1cba4e12],esi
  41a1da:	fild   DWORD PTR [eax+0x65ba2f39]
  41a1e0:	mov    ah,0x36
  41a1e2:	cmp    ebp,eax
  41a1e4:	int3   
  41a1e5:	jmp    0x5aac:0xc64de097
  41a1ec:	cwde   
  41a1ed:	pop    ebp
  41a1ee:	xor    al,0x4e
  41a1f0:	cmp    eax,DWORD PTR [esi+ebx*1]
  41a1f3:	(bad)  
  41a1f4:	sar    DWORD PTR [edi-0xe513d7b],1
  41a1fa:	jl     0x41a222
  41a1fc:	icebp  
  41a1fd:	inc    esp
  41a1fe:	adc    edi,edx
  41a200:	jns    0x41a1bc
  41a202:	push   es
  41a203:	mov    ebp,0xdc7b5fdb
  41a208:	aad    0x4d
  41a20a:	sbb    al,0xfa
  41a20c:	jge    0x41a1c8
  41a20e:	jno    0x41a1d0
  41a210:	cmc    
  41a211:	inc    eax
  41a212:	adc    BYTE PTR [ecx+0x38971dd0],al
  41a218:	popa   
  41a219:	fld    TBYTE PTR ds:0x8e12f724
  41a21f:	and    eax,0x1bc3b924
  41a224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a225:	into   
  41a226:	xchg   DWORD PTR [esi+0x1843564f],edx
  41a22c:	jg     0x41a237
  41a22e:	cmp    edx,ebx
  41a230:	push   edx
  41a231:	add    BYTE PTR [ecx-0x2e],bh
  41a234:	mov    ch,0x8f
  41a236:	popf   
  41a237:	ret    
  41a238:	in     al,0xb8
  41a23a:	dec    edx
  41a23b:	cwde   
  41a23c:	fs call 0xb9eaa620
  41a242:	xor    edi,DWORD PTR [esi-0x24]
  41a245:	pop    eax
  41a246:	xchg   ebp,eax
  41a247:	or     BYTE PTR [eax+0x13],ch
  41a24a:	add    esp,DWORD PTR [ebp-0x79]
  41a24d:	lds    eax,FWORD PTR [esi]
  41a24f:	pop    ss
  41a250:	adc    esp,DWORD PTR [edx+0x7102fce5]
  41a256:	add    BYTE PTR [edi-0x27],0xfc
  41a25a:	push   edi
  41a25b:	push   edx
  41a25c:	outs   dx,DWORD PTR ds:[esi]
  41a25d:	cmp    eax,0xc562c8ed
  41a262:	mov    al,0xc9
  41a264:	and    DWORD PTR ds:[eax+0x6533b793],edi
  41a26b:	(bad)  
  41a26c:	mov    fs,WORD PTR [eax+0x21798d4b]
  41a272:	leave  
  41a273:	loop   0x41a280
  41a275:	sbb    dh,BYTE PTR [ecx+0x2e]
  41a278:	in     al,0x4b
  41a27a:	cmp    al,0xa0
  41a27d:	sbb    esp,ebx
  41a27f:	imul   edx,DWORD PTR [ebx],0x80bee77e
  41a285:	ss sbb eax,ebp
  41a288:	pushf  
  41a289:	jge    0x41a210
  41a28b:	scas   eax,DWORD PTR es:[edi]
  41a28c:	xchg   DWORD PTR [ebx],ebx
  41a28e:	and    eax,0x3ca9f961
  41a293:	mov    ch,BYTE PTR [ebx+ebx*1]
  41a296:	push   edx
  41a297:	out    0xff,eax
  41a299:	test   al,0xe
  41a29b:	call   0x5078:0x48d3a873
  41a2a2:	fnstsw ax
  41a2a4:	or     edi,DWORD PTR [ecx+0x7d9fba07]
  41a2aa:	shl    dh,0x78
  41a2ad:	xor    DWORD PTR [ecx+edi*2],esp
  41a2b0:	sbb    al,0xf1
  41a2b2:	cmp    dl,ch
  41a2b4:	popf   
  41a2b5:	ror    ch,cl
  41a2b7:	jg     0x41a2d2
  41a2b9:	push   esp
  41a2ba:	inc    edi
  41a2bb:	cmp    esp,DWORD PTR [ebx-0x2e25b52f]
  41a2c1:	iret   
  41a2c2:	pushf  
  41a2c3:	jne    0x41a33b
  41a2c5:	out    dx,al
  41a2c6:	and    eax,0x2495fe6b
  41a2cb:	dec    ebx
  41a2cc:	xor    eax,0x759349fd
  41a2d1:	in     al,0x31
  41a2d3:	stc    
  41a2d4:	mov    eax,0xd1e0f5c3
  41a2d9:	mov    WORD PTR [edx+0x2f],fs
  41a2dc:	sbb    DWORD PTR [ecx+0x73],0xffffff82
  41a2e0:	push   ecx
  41a2e1:	out    0xed,al
  41a2e3:	retf   
  41a2e4:	jmp    0x41a2a5
  41a2e6:	inc    ebp
  41a2e7:	adc    eax,0xeca7a248
  41a2ec:	pop    eax
  41a2ed:	mov    dh,0x37
  41a2ef:	das    
  41a2f0:	or     DWORD PTR [ebx+0x69],ebx
  41a2f3:	scas   eax,DWORD PTR es:[edi]
  41a2f4:	(bad)  
  41a2f6:	data16 jp 0x41a344
  41a2f9:	xor    DWORD PTR [eax],eax
  41a2fb:	ja     0x41a292
  41a2fd:	scas   al,BYTE PTR es:[edi]
  41a2fe:	pop    es
  41a2ff:	jo     0x41a32d
  41a301:	or     eax,0x2f7757f8
  41a306:	jl     0x41a35d
  41a308:	mov    dl,0x12
  41a30a:	(bad)  
  41a30c:	div    ebx
  41a30e:	xor    DWORD PTR gs:[eax],ecx
  41a311:	(bad)  
  41a313:	aam    0xca
  41a315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a316:	adc    DWORD PTR [ebp+0x76],0x5b
  41a31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a31b:	xor    BYTE PTR [esi],cl
  41a31d:	add    esp,edi
  41a31f:	test   eax,0xd16cdeb7
  41a324:	mov    dh,0x28
  41a326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a327:	push   ss
  41a328:	pop    esp
  41a329:	jl     0x41a2cc
  41a32b:	xor    ebx,DWORD PTR [edx-0x7c]
  41a32e:	and    al,0xa7
  41a330:	and    BYTE PTR [edx],cl
  41a332:	out    0x9,eax
  41a334:	ss or  eax,0x6b421119
  41a33a:	repz dec esp
  41a33c:	int3   
  41a33d:	aad    0x9d
  41a33f:	int    0x62
  41a341:	aaa    
  41a342:	and    cl,BYTE PTR [ebp-0x2d]
  41a345:	fstp   DWORD PTR [esi+0x5f]
  41a348:	div    DWORD PTR [edx+0x59]
  41a34b:	test   DWORD PTR [esi-0x3f1c73d2],ebx
  41a351:	in     eax,0xa2
  41a353:	jnp    0x41a389
  41a355:	test   eax,0xf16fba32
  41a35a:	inc    ebp
  41a35b:	xlat   BYTE PTR ds:[ebx]
  41a35c:	sbb    ebx,0x654abdbf
  41a362:	call   0xdb82:0x569cc4b9
  41a369:	mov    ds:0x44f3fca,al
  41a36e:	xchg   ebx,eax
  41a36f:	mov    ch,0xe5
  41a371:	adc    eax,esi
  41a373:	sub    eax,0xbb5f1159
  41a378:	loop   0x41a395
  41a37a:	mov    bh,0x5a
  41a37c:	in     eax,dx
  41a37d:	dec    edx
  41a37e:	jp     0x41a31d
  41a380:	imul   ebp,DWORD PTR [ebp-0x3b],0xb6819119
  41a387:	fwait
  41a388:	pop    ecx
  41a389:	(bad)  [esi-0x2f]
  41a38c:	fisttp QWORD PTR [edi+0x28]
  41a38f:	dec    edx
  41a390:	dec    eax
  41a391:	add    bl,dl
  41a393:	inc    edx
  41a394:	mov    ds:0x6427b9ed,eax
  41a399:	jne    0x41a360
  41a39b:	sub    al,0xd1
  41a39d:	cli    
  41a39e:	cmp    ch,BYTE PTR [edx-0x16]
  41a3a1:	loope  0x41a3d9
  41a3a3:	adc    al,0xd1
  41a3a5:	cmc    
  41a3a6:	imul   ebp,edi,0xffffffef
  41a3a9:	movups XMMWORD PTR [edx-0x41],xmm2
  41a3ad:	mov    edx,0x6e434218
  41a3b2:	(bad)  
  41a3b4:	pop    ebp
  41a3b5:	pop    esp
  41a3b6:	mov    al,ds:0x5ed64d3f
  41a3bb:	add    edi,eax
  41a3bd:	mov    eax,ds:0x25051902
  41a3c2:	das    
  41a3c3:	loope  0x41a38a
  41a3c5:	add    dh,BYTE PTR [esi]
  41a3c7:	ss pop edx
  41a3c9:	inc    ecx
  41a3ca:	cmp    DWORD PTR [edx+eiz*2+0x6bb76645],edi
  41a3d1:	jge    0x41a411
  41a3d3:	mov    ?,edi
  41a3d5:	cmc    
  41a3d6:	dec    eax
  41a3d7:	and    ecx,edx
  41a3d9:	mov    al,0x39
  41a3db:	or     DWORD PTR ds:0x9d334836,ebx
  41a3e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3e2:	fsub   QWORD PTR [edi]
  41a3e4:	out    0xc1,eax
  41a3e6:	fld1   
  41a3e8:	ficomp WORD PTR [ecx]
  41a3ea:	cmp    ecx,0xffffff9e
  41a3ed:	pushf  
  41a3ee:	jg     0x41a43b
  41a3f0:	test   BYTE PTR [eax-0x1],0xf
  41a3f4:	shl    esp,0x94
  41a3f7:	mov    ebp,0x2836a6c9
  41a3fc:	clc    
  41a3fd:	fnstenv [eax]
  41a3ff:	(bad)  
  41a400:	jmp    0xae6f62
  41a405:	pop    esi
  41a406:	mov    bh,0xb3
  41a408:	leave  
  41a409:	push   ss
  41a40a:	push   esp
  41a40b:	xchg   ecx,eax
  41a40c:	fwait
  41a40d:	popf   
  41a40e:	outs   dx,DWORD PTR ds:[esi]
  41a40f:	adc    DWORD PTR [esi-0x40],edx
  41a412:	xor    edx,esp
  41a414:	push   ebx
  41a415:	mov    BYTE PTR [ebp+0x24],bh
  41a418:	pop    ebp
  41a419:	(bad)  
  41a41a:	scas   al,BYTE PTR es:[edi]
  41a41b:	pop    edx
  41a41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a41d:	(bad)  
  41a41e:	adc    eax,ebx
  41a420:	mov    BYTE PTR [eax+0x5a],cl
  41a423:	push   ss
  41a424:	hlt    
  41a425:	mov    dh,BYTE PTR [edi-0x7e]
  41a428:	idiv   BYTE PTR [ebp-0x54]
  41a42b:	jo     0x41a45a
  41a42d:	(bad)  
  41a42e:	adc    edi,DWORD PTR [esi-0x3bd71bb]
  41a434:	das    
  41a435:	call   0x1fa8:0xbd11e8f5
  41a43c:	add    eax,edi
  41a43e:	fs pop esi
  41a440:	and    edi,0xffffffc2
  41a443:	in     eax,0x2e
  41a445:	push   cs
  41a446:	mov    bh,0xd8
  41a448:	pop    ebx
  41a449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a44a:	cmp    dh,BYTE PTR [ecx]
  41a44c:	push   edi
  41a44d:	sub    al,0x7c
  41a44f:	out    dx,eax
  41a450:	adc    DWORD PTR [ebp+0x12],0xffffffac
  41a454:	or     BYTE PTR [edx+ebp*4+0x7a],cl
  41a458:	rcl    BYTE PTR [ecx+0x2c],1
  41a45b:	cmc    
  41a45c:	daa    
  41a45d:	leave  
  41a45e:	jbe    0x41a48b
  41a460:	inc    esp
  41a461:	scas   eax,DWORD PTR es:[edi]
  41a462:	int3   
  41a463:	in     al,dx
  41a464:	in     eax,dx
  41a465:	adc    BYTE PTR [edx+0xe],ch
  41a468:	cwde   
  41a469:	xor    edx,esp
  41a46b:	jbe    0x41a4a2
  41a46d:	xlat   BYTE PTR ds:[ebx]
  41a46e:	xchg   ebp,eax
  41a46f:	inc    edi
  41a470:	stc    
  41a471:	mov    ebx,0x3bdc81e8
  41a476:	loop   0x41a457
  41a478:	in     eax,dx
  41a479:	push   ecx
  41a47a:	call   0xed02:0x227791e9
  41a481:	js     0x41a452
  41a483:	mov    WORD PTR [eax],ds
  41a485:	inc    esi
  41a486:	sub    BYTE PTR [ebp+0x7d],ch
  41a489:	mov    al,0x9b
  41a48b:	adc    esi,ebx
  41a48d:	mov    ebx,0xd1691716
  41a492:	or     al,0x19
  41a494:	arpl   sp,di
  41a496:	jg     0x41a439
  41a498:	mov    edi,0xcca69802
  41a49d:	dec    ecx
  41a49e:	sbb    esi,ecx
  41a4a0:	adc    BYTE PTR ds:0xab007b95,0x19
  41a4a7:	popa   
  41a4a8:	fldenv [esi+0x1a]
  41a4ab:	int3   
  41a4ac:	daa    
  41a4ad:	call   0x38fe:0xeac171c7
  41a4b4:	popa   
  41a4b5:	leave  
  41a4b6:	nop
  41a4b7:	lahf   
  41a4b8:	sub    ah,BYTE PTR [eax+0x15eee5e]
  41a4be:	mov    esp,0x76b6f37
  41a4c3:	mov    ebx,0xeb383112
  41a4c8:	jg     0x41a4f6
  41a4ca:	dec    eax
  41a4cb:	add    edx,DWORD PTR [eax-0x12b957f8]
  41a4d1:	pop    eax
  41a4d2:	pop    edi
  41a4d3:	sbb    DWORD PTR [esi*8-0x799ef875],eax
  41a4da:	inc    ecx
  41a4db:	xchg   edx,esp
  41a4dd:	adc    ah,bh
  41a4df:	int3   
  41a4e0:	sahf   
  41a4e1:	ins    DWORD PTR es:[edi],dx
  41a4e2:	inc    esp
  41a4e3:	jns    0x41a4f5
  41a4e5:	mov    eax,0x7b290c64
  41a4ea:	add    DWORD PTR [ebx-0xc],ebp
  41a4ed:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a4ef:	call   0xe1fd:0xf2fefe10
  41a4f6:	push   ecx
  41a4f7:	aad    0x45
  41a4f9:	pop    ecx
  41a4fa:	jg     0x41a493
  41a4fc:	imul   edi,edi,0xffffff90
  41a4ff:	jae    0x41a516
  41a501:	js     0x41a56d
  41a503:	xor    eax,0x4999f463
  41a508:	clc    
  41a509:	cmp    DWORD PTR [eax-0x7a],ebp
  41a50c:	call   0xffe0:0x1960a1b8
  41a513:	mov    WORD PTR [edi-0x50a2b278],gs
  41a519:	aad    0xcc
  41a51b:	push   esp
  41a51c:	jl     0x41a533
  41a51e:	ret    
  41a51f:	xor    cl,BYTE PTR [ebx-0x77]
  41a522:	jnp    0x41a537
  41a524:	(bad)  
  41a525:	retf   
  41a526:	(bad)  
  41a527:	pop    ebx
  41a528:	xchg   ebp,eax
  41a529:	out    dx,al
  41a52a:	adc    dl,dl
  41a52c:	shl    al,cl
  41a52e:	fnsave [eax+edx*4]
  41a531:	clc    
  41a532:	(bad)
  41a536:	dec    ebx
  41a537:	dec    edx
  41a538:	xchg   ebx,eax
  41a539:	sbb    ch,BYTE PTR [ebx]
  41a53b:	mov    eax,ds:0xfd475217
  41a540:	cs jmp 0xda2bbe62
  41a546:	aas    
  41a547:	xchg   edi,eax
  41a548:	rdpmc  
  41a54a:	xchg   ecx,eax
  41a54b:	push   0xffffffb2
  41a54d:	mov    al,ds:0x574224e9
  41a552:	hlt    
  41a553:	or     edx,esi
  41a555:	mov    dh,0xaa
  41a557:	and    cl,bl
  41a559:	jnp    0x41a52f
  41a55b:	jno    0x41a573
  41a55d:	or     al,dl
  41a55f:	inc    ebp
  41a560:	cli    
  41a561:	cmp    DWORD PTR [ebp+0x1a],ebp
  41a564:	les    edx,FWORD PTR [ebx]
  41a566:	jecxz  0x41a503
  41a568:	test   al,0x87
  41a56a:	call   FWORD PTR [ebx-0x65298f0b]
  41a570:	pop    ds
  41a571:	jne    0x41a593
  41a573:	les    ecx,FWORD PTR [ebx+0x31]
  41a576:	pushf  
  41a577:	pop    ds
  41a578:	imul   esp,DWORD PTR ds:0xa029b07c,0x3bb14f27
  41a582:	leave  
  41a583:	mov    al,ds:0x626bec60
  41a588:	mov    ebx,0xc45c19d9
  41a58d:	pop    ebp
  41a58e:	enter  0x1f34,0x45
  41a592:	es dec edx
  41a594:	fimul  WORD PTR [edi]
  41a596:	adc    BYTE PTR [ebx+esi*1],ch
  41a599:	call   DWORD PTR [esi-0x69]
  41a59c:	out    dx,eax
  41a59d:	test   eax,0x31e1835f
  41a5a2:	aaa    
  41a5a3:	jbe    0x41a556
  41a5a5:	push   eax
  41a5a6:	outs   dx,DWORD PTR ds:[esi]
  41a5a7:	in     al,dx
  41a5a8:	cmc    
  41a5a9:	xor    eax,0x7aca4b03
  41a5ae:	fnstcw WORD PTR [eax+0x15]
  41a5b1:	in     al,dx
  41a5b2:	out    0x4e,al
  41a5b4:	adc    al,0x61
  41a5b6:	mov    bh,0x20
  41a5b8:	mov    ebp,0x34165919
  41a5bd:	sub    cl,bl
  41a5bf:	ficomp WORD PTR [eax+0x6c30028c]
  41a5c5:	pop    ebx
  41a5c6:	call   0x7f29:0xb435e085
  41a5cd:	inc    esi
  41a5ce:	jg     0x41a603
  41a5d0:	(bad)  
  41a5d1:	data16 sbb bh,BYTE PTR [ecx-0x55adece1]
  41a5d8:	dec    edx
  41a5d9:	inc    edi
  41a5da:	add    ecx,DWORD PTR [edi+eax*1+0x36]
  41a5de:	bound  eax,QWORD PTR [edx-0xf8000b3]
  41a5e4:	addr16 jbe 0x41a582
  41a5e7:	les    eax,FWORD PTR [eax]
  41a5e9:	sbb    al,0xf
  41a5eb:	xchg   ebp,eax
  41a5ec:	in     eax,0xd4
  41a5ee:	jmp    0x8e21:0x2a71477b
  41a5f5:	and    eax,0x28bcb7ec
  41a5fa:	clc    
  41a5fb:	inc    eax
  41a5fc:	in     eax,0xe8
  41a5fe:	pop    edi
  41a5ff:	or     BYTE PTR [edi-0x77a866e],bl
  41a605:	xlat   BYTE PTR ds:[ebx]
  41a606:	jnp    0x41a5fa
  41a608:	mov    dh,0xc5
  41a60a:	inc    esi
  41a60b:	cwde   
  41a60c:	sub    al,BYTE PTR [edi]
  41a60e:	adc    DWORD PTR [esi-0x80],esi
  41a611:	push   eax
  41a612:	mov    edi,0x6667a357
  41a617:	fdiv   DWORD PTR [edx]
  41a619:	shl    DWORD PTR [eax-0x48],1
  41a61c:	test   BYTE PTR [edi],cl
  41a61e:	adc    al,0x41
  41a620:	add    al,0x60
  41a622:	dec    edi
  41a623:	dec    edx
  41a624:	pop    edx
  41a625:	sbb    ah,ah
  41a627:	fbstp  TBYTE PTR [esi-0x31]
  41a62a:	inc    edi
  41a62b:	int3   
  41a62c:	nop
  41a62d:	fist   WORD PTR [ebp-0x613f2d02]
  41a633:	cmp    BYTE PTR [ecx+0x18949c07],0xc5
  41a63a:	push   0x538c7f71
  41a63f:	out    dx,al
  41a640:	aad    0xc3
  41a642:	pop    esp
  41a643:	push   edx
  41a644:	mov    ah,0x88
  41a646:	pop    es
  41a647:	(bad)  
  41a648:	mov    esi,0xcb32bfd
  41a64d:	out    dx,eax
  41a64e:	pop    es
  41a64f:	xchg   edx,eax
  41a650:	push   es
  41a651:	mov    BYTE PTR [ebp+0x13],cl
  41a654:	imul   ebp,ebp,0xffffffe0
  41a657:	xchg   ebp,eax
  41a658:	popf   
  41a659:	cld    
  41a65a:	add    BYTE PTR [eax-0x67],0xf
  41a65e:	mov    WORD PTR [ebx-0x3b],?
  41a661:	cmp    eax,0x65fdb623
  41a666:	sbb    BYTE PTR [ebx-0x59],ah
  41a669:	ins    BYTE PTR es:[edi],dx
  41a66a:	fldlg2 
  41a66c:	cwde   
  41a66d:	idiv   ebp
  41a66f:	mov    ch,0x3d
  41a671:	and    ah,bh
  41a673:	popa   
  41a674:	fucom  st(4)
  41a676:	pop    ebx
  41a677:	jmp    0x41a668
  41a679:	cmp    DWORD PTR [edi],ebx
  41a67b:	add    BYTE PTR [edx+0x1b753e4],cl
  41a681:	lods   eax,DWORD PTR ds:[esi]
  41a682:	sahf   
  41a683:	sti    
  41a684:	jb     0x41a634
  41a686:	pushf  
  41a687:	test   edi,eax
  41a689:	(bad)  [ecx]
  41a68b:	mov    ds:0x9d81406,al
  41a690:	and    BYTE PTR [edx+0x2c],al
  41a693:	inc    ecx
  41a694:	test   eax,0xbb1bf034
  41a699:	js     0x41a6e9
  41a69b:	addr16 lock (bad) 
  41a69e:	test   eax,0x6ad4d957
  41a6a3:	jmp    0x41a6f3
  41a6a5:	ins    DWORD PTR es:[edi],dx
  41a6a6:	push   edi
  41a6a7:	dec    esp
  41a6a8:	mov    esp,DWORD PTR [edi]
  41a6aa:	in     al,0x11
  41a6ac:	sub    cl,al
  41a6ae:	imul   edx,DWORD PTR [esi-0x6e],0xffffff8f
  41a6b2:	inc    edx
  41a6b3:	push   ss
  41a6b4:	fsubp  st(3),st
  41a6b6:	mov    ebx,edx
  41a6b8:	ja     0x41a685
  41a6ba:	jg     0x41a661
  41a6bc:	mov    bx,0x351a
  41a6c0:	(bad)  
  41a6c1:	mov    al,ds:0x8d4eae5
  41a6c6:	jno    0x41a668
  41a6c8:	arpl   WORD PTR ds:[edx],sp
  41a6cb:	iret   
  41a6cc:	iret   
  41a6cd:	inc    esp
  41a6ce:	push   edi
  41a6cf:	hlt    
  41a6d0:	in     eax,0xdb
  41a6d2:	scas   al,BYTE PTR es:[edi]
  41a6d3:	ja     0x41a6ea
  41a6d5:	dec    esp
  41a6d6:	push   ecx
  41a6d7:	outs   dx,DWORD PTR ds:[esi]
  41a6d8:	test   al,0x5
  41a6da:	ret    
  41a6db:	das    
  41a6dc:	in     al,0xe1
  41a6de:	pop    ecx
  41a6df:	or     esi,0x6d3008a4
  41a6e5:	scas   al,BYTE PTR es:[edi]
  41a6e6:	sub    al,0x5a
  41a6e8:	outs   dx,BYTE PTR ds:[esi]
  41a6e9:	mov    ecx,0xae75766e
  41a6ee:	retf   0xd11f
  41a6f1:	dec    edi
  41a6f2:	into   
  41a6f3:	xchg   ebp,eax
  41a6f4:	xor    eax,0xa75dbb10
  41a6f9:	das    
  41a6fa:	push   0xf62a66b6
  41a6ff:	or     edi,edi
  41a701:	jb     0x41a6ad
  41a703:	test   BYTE PTR [eax-0x3a53efe5],cl
  41a709:	sbb    al,0xd0
  41a70b:	sti    
  41a70c:	xchg   BYTE PTR [esi+esi*1],dl
  41a70f:	jl     0x41a703
  41a711:	push   0xe5cfc60c
  41a716:	push   ebx
  41a717:	scas   eax,DWORD PTR es:[edi]
  41a718:	dec    eax
  41a719:	pop    eax
  41a71a:	fbld   TBYTE PTR [edi+ebp*8-0xd381da1]
  41a721:	dec    ecx
  41a722:	cmp    BYTE PTR ds:0x6bdbaf70,cl
  41a728:	mov    al,0xb6
  41a72a:	lock daa 
  41a72c:	test   eax,0x3027ad2d
  41a731:	rcl    BYTE PTR [eax-0x52],0xdb
  41a735:	pushf  
  41a736:	arpl   WORD PTR [ecx+0x8fe9299],bp
  41a73c:	mov    esp,0xe1bd8716
  41a741:	lods   al,BYTE PTR ds:[esi]
  41a742:	and    eax,0xb555e073
  41a747:	or     eax,0x9e82d491
  41a74c:	push   ecx
  41a74d:	(bad)  
  41a74e:	xlat   BYTE PTR ds:[ebx]
  41a74f:	mov    ds:0xcef360af,al
  41a754:	inc    esp
  41a755:	cmp    BYTE PTR [eax+0x7b59c8a4],bh
  41a75b:	fisubr DWORD PTR [edx+ebx*4+0x70]
  41a75f:	ins    DWORD PTR es:[edi],dx
  41a760:	push   edx
  41a762:	test   eax,0xdcc843d9
  41a767:	test   al,0xed
  41a769:	sub    eax,0xdb7f523c
  41a76e:	(bad)  
  41a76f:	dec    edi
  41a770:	dec    ebx
  41a771:	mov    ch,0xa5
  41a773:	sub    ecx,DWORD PTR [esi+0x7a]
  41a776:	ror    DWORD PTR [esi-0x4d],0x3
  41a77a:	dec    ebx
  41a77b:	lods   eax,DWORD PTR ds:[esi]
  41a77c:	fwait
  41a77d:	mov    edx,0x5d941398
  41a782:	lds    ecx,FWORD PTR [ebp+edi*4-0x43]
  41a786:	outs   dx,BYTE PTR ds:[esi]
  41a787:	addr16 dec edx
  41a789:	sti    
  41a78a:	ret    
  41a78b:	in     al,0xae
  41a78d:	jnp    0x41a75c
  41a78f:	dec    ecx
  41a790:	rcr    DWORD PTR [esi],cl
  41a792:	in     eax,0x59
  41a794:	popa   
  41a795:	jo     0x41a794
  41a797:	inc    ebx
  41a798:	sbb    DWORD PTR [ebp+esi*8+0x70],edi
  41a79c:	dec    ebp
  41a79d:	fcom   DWORD PTR [ebp-0x1e3c1d35]
  41a7a3:	add    bl,BYTE PTR [esi+0x5b]
  41a7a6:	cmp    DWORD PTR [ecx],edi
  41a7a8:	pop    ss
  41a7a9:	mov    dh,0xfe
  41a7ab:	loop   0x41a74c
  41a7ad:	(bad)  
  41a7af:	add    cl,BYTE PTR [esi+0x5cfe4efe]
  41a7b5:	jb     0x41a7ae
  41a7b7:	imul   edx,DWORD PTR [ecx-0x6dfd9071],0xa5ff95f2
  41a7c1:	push   0xab2d38ce
  41a7c6:	outs   dx,DWORD PTR ds:[esi]
  41a7c7:	ret    0x9901
  41a7ca:	out    dx,al
  41a7cb:	repz imul edi,eax,0xc4c15649
  41a7d2:	inc    ecx
  41a7d3:	shl    DWORD PTR [edx+0xb],cl
  41a7d6:	lds    ebp,FWORD PTR [esi+edi*1+0xc3530a0]
  41a7dd:	adc    WORD PTR es:[eax],di
  41a7e1:	(bad)  
  41a7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e3:	(bad)  
  41a7e4:	push   ebp
  41a7e5:	xchg   ecx,eax
  41a7e6:	mov    ecx,ds
  41a7e8:	outs   dx,BYTE PTR ds:[esi]
  41a7e9:	fs jmp 0x301dc1d8
  41a7ef:	test   ch,al
  41a7f1:	xchg   edx,eax
  41a7f2:	mov    ch,0x5a
  41a7f4:	into   
  41a7f5:	rcl    eax,1
  41a7f7:	scas   al,BYTE PTR es:[edi]
  41a7f8:	test   al,0x70
  41a7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7fb:	(bad)  
  41a7fc:	aam    0x43
  41a7fe:	mov    ch,0x84
  41a800:	sub    bl,BYTE PTR [ebx+0x58464980]
  41a806:	loop   0x41a818
  41a808:	pop    esi
  41a809:	dec    eax
  41a80a:	mov    eax,DWORD PTR [eax-0x4c]
  41a80d:	xchg   esi,eax
  41a80e:	pop    ecx
  41a80f:	aam    0xc1
  41a811:	sbb    BYTE PTR [ecx-0x7bc32ed6],dh
  41a817:	imul   ecx,DWORD PTR [edx-0x45c5793f],0x5d
  41a81e:	icebp  
  41a81f:	retf   0x9a44
  41a822:	add    dh,BYTE PTR [edx]
  41a824:	dec    ebp
  41a825:	dec    edx
  41a826:	mov    ecx,0x5664c38f
  41a82b:	rol    edi,cl
  41a82d:	mov    BYTE PTR [eax],bh
  41a82f:	or     al,0x28
  41a831:	sbb    al,BYTE PTR [ecx-0x4d]
  41a834:	test   cl,al
  41a836:	cmp    BYTE PTR [edx+0x511c92b6],al
  41a83c:	jp     0x41a89b
  41a83e:	xor    BYTE PTR [eax+0x11],dl
  41a841:	enter  0x1373,0x4b
  41a845:	push   0xcdc0e0f2
  41a84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a84b:	and    al,0x8d
  41a84d:	loopne 0x41a8cc
  41a84f:	retf   
  41a850:	jmp    0xcec4b46a
  41a855:	cli    
  41a856:	sar    cl,1
  41a858:	mov    BYTE PTR [ebp-0x4f],0xcf
  41a85c:	in     al,dx
  41a85d:	pop    esi
  41a85e:	loop   0x41a8d2
  41a860:	adc    DWORD PTR [ebx+0x2f],0x632a4f68
  41a867:	rcr    BYTE PTR [ecx],cl
  41a869:	idiv   BYTE PTR [edi+0x18]
  41a86c:	ins    DWORD PTR es:[edi],dx
  41a86d:	push   ecx
  41a86e:	jge    0x41a8e1
  41a870:	ret    
  41a871:	fcmovu st,st(3)
  41a873:	sti    
  41a874:	pop    es
  41a875:	dec    edx
  41a876:	sub    eax,0x67bd209e
  41a87b:	in     eax,0xd3
  41a87d:	add    ebx,ebp
  41a87f:	mov    al,0x7b
  41a881:	and    al,ah
  41a883:	mov    ebp,0x44796585
  41a888:	retf   
  41a889:	loopne 0x41a889
  41a88b:	adc    al,0x95
  41a88d:	loop   0x41a85b
  41a88f:	jne    0x41a84c
  41a891:	jecxz  0x41a908
  41a893:	cmp    dl,BYTE PTR [ecx+0x5]
  41a896:	test   al,al
  41a898:	cli    
  41a899:	call   0xbb3d:0xa60e7a9f
  41a8a0:	inc    ebp
  41a8a1:	mov    dx,0xe29c
  41a8a5:	ret    0x43b9
  41a8a8:	inc    eax
  41a8a9:	mov    ebx,0x9d0edac3
  41a8ae:	xlat   BYTE PTR ds:[ebx]
  41a8af:	mov    dl,0x93
  41a8b1:	sub    ebp,edi
  41a8b3:	sbb    BYTE PTR [ebx],cl
  41a8b5:	inc    edx
  41a8b6:	adc    DWORD PTR [ecx+ebx*2-0x155d885c],0x9c45e6a4
  41a8c1:	or     ebp,DWORD PTR [edx]
  41a8c3:	call   0x8206:0xa17e7482
  41a8ca:	jns    0x41a8bd
  41a8cc:	pop    ss
  41a8cd:	les    ebx,FWORD PTR [edx-0x5b]
  41a8d0:	ins    BYTE PTR es:[edi],dx
  41a8d1:	popf   
  41a8d2:	xchg   edi,eax
  41a8d3:	xor    BYTE PTR [edx+0x7e16b698],bh
  41a8d9:	mov    ebx,0xa7e512e0
  41a8de:	(bad)
  41a8e2:	pop    ebp
  41a8e3:	outs   dx,BYTE PTR ds:[esi]
  41a8e4:	push   es
  41a8e5:	mov    ebp,0xaf6ef334
  41a8ea:	sub    bh,BYTE PTR [edx]
  41a8ec:	aam    0x4a
  41a8ee:	xor    eax,0xc3a06fba
  41a8f3:	jle    0x41a8bd
  41a8f5:	jmp    0x2879be10
  41a8fa:	push   0x41961533
  41a8ff:	stos   DWORD PTR es:[edi],eax
  41a900:	lods   eax,DWORD PTR ds:[esi]
  41a901:	pop    ebx
  41a902:	pop    eax
  41a903:	mov    esi,0x3b1174cd
  41a908:	sub    ch,BYTE PTR [edx]
  41a90a:	and    DWORD PTR [edx-0x62c44110],esp
  41a910:	mov    bl,0x51
  41a912:	cli    
  41a913:	sbb    bh,BYTE PTR [edx]
  41a915:	icebp  
  41a916:	lds    eax,FWORD PTR [ebp-0x7d]
  41a919:	addr16 jl 0x41a957
  41a91c:	add    al,0x2e
  41a91e:	icebp  
  41a91f:	ins    BYTE PTR es:[edi],dx
  41a920:	cmp    eax,0x1b15a2dc
  41a925:	pop    esi
  41a926:	popf   
  41a927:	adc    DWORD PTR [edi],edx
  41a929:	mov    ah,0x89
  41a92b:	mov    esp,DWORD PTR [ecx+0xf1f8730]
  41a931:	mov    edi,0xede82218
  41a936:	adc    DWORD PTR [ebx-0x2c],edx
  41a939:	shr    al,1
  41a93b:	outs   dx,DWORD PTR ds:[esi]
  41a93c:	add    al,0x0
  41a93e:	or     esp,edi
  41a940:	imul   esi,DWORD PTR [edi+0x4a394b0c],0xffffffa9
  41a947:	fnsave [esi]
  41a949:	cmp    eax,0x62910d8b
  41a94e:	fwait
  41a94f:	mov    ecx,edx
  41a951:	out    0x5f,eax
  41a953:	push   0xc6a0c631
  41a958:	iret   
  41a959:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a95b:	sar    BYTE PTR [edx-0x4],0xa5
  41a95f:	cmp    DWORD PTR [ebx],ecx
  41a961:	rcr    DWORD PTR [ebp+0x74],cl
  41a964:	cwde   
  41a965:	add    DWORD PTR [ebx],ecx
  41a967:	adc    al,0xaa
  41a969:	sub    ch,BYTE PTR [eax]
  41a96b:	std    
  41a96c:	scas   al,BYTE PTR es:[edi]
  41a96d:	jecxz  0x41a91f
  41a96f:	or     ebp,DWORD PTR [edi+0x7e9c0fb0]
  41a975:	and    eax,0x6d8bd552
  41a97a:	and    ebp,DWORD PTR [ecx]
  41a97c:	push   ss
  41a97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97e:	pop    ebp
  41a97f:	shl    BYTE PTR [esi+ecx*1],0x93
  41a983:	push   edx
  41a984:	mov    edi,0x7aab646
  41a989:	mov    dl,0x6f
  41a98b:	jbe    0x41a96b
  41a98d:	mov    WORD PTR [eax-0x507850cc],fs
  41a993:	mov    al,0x4b
  41a995:	xchg   DWORD PTR [ecx-0x36514a99],ecx
  41a99b:	inc    esp
  41a99c:	jmp    0x122f2726
  41a9a1:	mov    DWORD PTR [edx],ebp
  41a9a3:	cli    
  41a9a4:	iret   
  41a9a5:	aam    0x9
  41a9a7:	int3   
  41a9a8:	push   edx
  41a9a9:	xchg   esi,eax
  41a9aa:	fistp  WORD PTR [ecx+0x48]
  41a9ad:	ins    BYTE PTR es:[edi],dx
  41a9ae:	xchg   esi,eax
  41a9af:	cwde   
  41a9b0:	add    bh,ch
  41a9b2:	push   ecx
  41a9b3:	jle    0x41aa2f
  41a9b5:	dec    ebp
  41a9b6:	or     dh,BYTE PTR [edi-0x74cb31e2]
  41a9bc:	or     bh,BYTE PTR [ecx]
  41a9be:	sub    al,0x7c
  41a9c0:	stc    
  41a9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c2:	fs je  0x41aa2d
  41a9c5:	pop    es
  41a9c6:	out    0x10,eax
  41a9c8:	or     al,0x99
  41a9ca:	and    eax,ebx
  41a9cc:	jle    0x41aa29
  41a9ce:	mov    ebp,DWORD PTR [edi+0x20]
  41a9d1:	hlt    
  41a9d2:	jo     0x41a979
  41a9d4:	mov    edi,0xac06a675
  41a9d9:	add    eax,0x81a09505
  41a9de:	or     ah,BYTE PTR [ebp+0xd]
  41a9e1:	loope  0x41a9a7
  41a9e3:	enter  0x977,0x6b
  41a9e7:	es aas 
  41a9e9:	jmp    0x41a97b
  41a9eb:	mov    al,ds:0x66112631
  41a9f0:	(bad)  
  41a9f2:	adc    al,0xc3
  41a9f4:	es inc ebp
  41a9f6:	call   0x7f7146f6
  41a9fb:	pop    edi
  41a9fc:	loopne 0x41a9fc
  41a9fe:	imul   ecx,DWORD PTR ds:0xe9dc0dbc,0x70
  41aa05:	rcl    DWORD PTR [edx-0x74],cl
  41aa08:	pop    edx
  41aa09:	sbb    DWORD PTR [ebp+ebp*2+0x44],esi
  41aa0d:	xor    ebx,DWORD PTR [esi-0x7751b7d8]
  41aa13:	mov    ds:0x569acfc7,al
  41aa18:	xlat   BYTE PTR ds:[ebx]
  41aa19:	dec    esi
  41aa1a:	(bad)  
  41aa1b:	int    0x43
  41aa1d:	ja     0x41aa51
  41aa1f:	sbb    al,0x90
  41aa21:	icebp  
  41aa22:	jmp    0x70461f83
  41aa27:	(bad)  [ebx-0xda1de9f]
  41aa2d:	or     dl,bh
  41aa2f:	sahf   
  41aa30:	pop    eax
  41aa31:	add    DWORD PTR [ecx],esi
  41aa33:	dec    ebx
  41aa34:	jecxz  0x41aa5b
  41aa36:	and    cl,dl
  41aa38:	and    BYTE PTR [eax+0x322b50a7],ah
  41aa3e:	and    bl,BYTE PTR [esi+0x25]
  41aa41:	jecxz  0x41a9dc
  41aa43:	adc    DWORD PTR [edi-0x2a],0xffffffd2
  41aa47:	cmp    eax,DWORD PTR [edi-0x64]
  41aa4a:	into   
  41aa4b:	aad    0x6f
  41aa4d:	sub    edx,ecx
  41aa4f:	popa   
  41aa50:	pop    ebp
  41aa51:	push   ebp
  41aa52:	outs   dx,BYTE PTR ds:[esi]
  41aa53:	cmp    ecx,DWORD PTR ds:0xd414d7ae
  41aa59:	nop
  41aa5a:	sub    eax,0x7a641fc8
  41aa5f:	adc    ebp,DWORD PTR [eax]
  41aa61:	and    eax,0xf352206c
  41aa66:	mov    ebp,0xa94c5b6b
  41aa6b:	ret    0xf3e9
  41aa6e:	jmp    0x41aa10
  41aa70:	push   eax
  41aa71:	not    DWORD PTR [edi-0xea7274f]
  41aa77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa78:	inc    esp
  41aa79:	push   0x60
  41aa7b:	sti    
  41aa7c:	jmp    FWORD PTR [edx+0x679aba57]
  41aa82:	call   0xb85dd3b9
  41aa87:	imul   DWORD PTR [ebx+0x6ac47bd5]
  41aa8d:	(bad)  
  41aa8e:	cld    
  41aa8f:	mov    WORD PTR [edi+eiz*4],fs
  41aa92:	aad    0x72
  41aa94:	jnp    0x41aaf9
  41aa96:	sbb    esi,edi
  41aa98:	not    BYTE PTR fs:0x6d05ee78
  41aa9f:	iret   
  41aaa0:	inc    esi
  41aaa1:	push   esp
  41aaa2:	sbb    bl,0x3
  41aaa5:	add    al,0x50
  41aaa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa8:	(bad)
  41aaab:	shl    edi,1
  41aaad:	mov    ebp,0x4fb83878
  41aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab3:	or     dl,BYTE PTR [esi+0x66]
  41aab6:	or     ecx,DWORD PTR [edx-0x4d5ff995]
  41aabc:	sbb    bl,BYTE PTR [esi+0x78]
  41aabf:	sub    edx,ebx
  41aac1:	pop    eax
  41aac2:	or     al,0xc4
  41aac4:	(bad)  
  41aac6:	cmp    edi,0x35
  41aac9:	xor    BYTE PTR [edi+0x4dc2b8cc],0x30
  41aad0:	sbb    DWORD PTR [esi],eax
  41aad2:	in     eax,dx
  41aad3:	jle    0x41ab48
  41aad5:	scas   eax,DWORD PTR es:[edi]
  41aad6:	pop    ss
  41aad7:	dec    ebp
  41aad8:	scas   eax,DWORD PTR es:[edi]
  41aad9:	xchg   ecx,eax
  41aada:	leave  
  41aadb:	inc    esp
  41aadc:	jmp    0x15870ca7
  41aae1:	retf   
  41aae2:	sub    al,ch
  41aae4:	fidivr DWORD PTR [edx-0x1a2f963e]
  41aaea:	aam    0x21
  41aaec:	sub    dh,bh
  41aaee:	cmp    edi,DWORD PTR [eax]
  41aaf0:	loop   0x41aaf5
  41aaf2:	xor    dl,BYTE PTR [edx-0x3e]
  41aaf5:	adc    bh,BYTE PTR [edi-0x58]
  41aaf8:	push   esi
  41aaf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aafa:	jnp    0x41aad5
  41aafc:	dec    ecx
  41aafd:	lods   al,BYTE PTR ds:[esi]
  41aafe:	fs mov cl,0x90
  41ab01:	iret   
  41ab02:	push   esi
  41ab03:	jl     0x41aac9
  41ab05:	mov    BYTE PTR [edx],al
  41ab07:	mov    eax,0xea197bc3
  41ab0c:	jb     0x41ab2a
  41ab0e:	test   al,0x7
  41ab10:	sbb    eax,0x919e1c79
  41ab15:	inc    ebx
  41ab16:	aam    0x54
  41ab18:	(bad)  
  41ab19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab1a:	loope  0x41ab6f
  41ab1c:	icebp  
  41ab1d:	mov    bh,0x80
  41ab1f:	mov    ds:0xdd750e62,al
  41ab24:	push   esi
  41ab25:	sti    
  41ab26:	adc    DWORD PTR [eax+eax*1-0x17b8cbb1],ebx
  41ab2d:	dec    esi
  41ab2e:	js     0x41aba5
  41ab30:	pop    ds
  41ab31:	dec    edx
  41ab32:	push   eax
  41ab33:	call   DWORD PTR fs:[ecx+0xb]
  41ab37:	retf   0x4cd3
  41ab3a:	icebp  
  41ab3b:	test   BYTE PTR [eax-0x3b],cl
  41ab3e:	data16 aas 
  41ab40:	loopne 0x41ab1e
  41ab42:	jge    0x41ab52
  41ab44:	dec    edi
  41ab45:	mov    ebp,edi
  41ab47:	jp     0x41aaec
  41ab49:	push   cs
  41ab4a:	pushf  
  41ab4b:	call   0xf8c0:0x5a0f7c13
  41ab52:	mov    ecx,0x98397b51
  41ab57:	cmp    DWORD PTR [esi+0x3d],ecx
  41ab5a:	repnz push cs
  41ab5c:	ja     0x41aba1
  41ab5e:	ins    BYTE PTR es:[edi],dx
  41ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab60:	sbb    al,0x50
  41ab62:	jae    0x41ab6c
  41ab64:	(bad)  
  41ab65:	stos   DWORD PTR es:[edi],eax
  41ab66:	pop    edx
  41ab67:	mov    edi,0x7f0ae3b
  41ab6c:	xor    al,0xcd
  41ab6e:	sbb    esp,DWORD PTR [esi-0x20189ea2]
  41ab74:	pop    ebx
  41ab75:	es xchg esp,eax
  41ab77:	outs   dx,BYTE PTR ds:[esi]
  41ab78:	into   
  41ab79:	mov    edx,0x93f218fa
  41ab7e:	clc    
  41ab7f:	int    0xc3
  41ab81:	sbb    bh,cl
  41ab83:	and    ch,0x67
  41ab86:	push   ss
  41ab87:	push   ebx
  41ab88:	xchg   edx,eax
  41ab89:	aaa    
  41ab8a:	pushf  
  41ab8b:	lods   al,BYTE PTR ds:[esi]
  41ab8c:	shr    BYTE PTR [ebp-0x2a],1
  41ab8f:	sub    BYTE PTR [eax],dh
  41ab91:	sbb    DWORD PTR [edx],0xca900818
  41ab97:	fsubr  DWORD PTR [ebp+0x48]
  41ab9a:	hlt    
  41ab9b:	mov    al,0x2f
  41ab9d:	adc    dh,al
  41ab9f:	shr    BYTE PTR [esi],0xfe
  41aba2:	sub    bh,bh
  41aba4:	rcl    DWORD PTR [esi],1
  41aba6:	jnp    0x41ab95
  41aba8:	bound  esp,QWORD PTR [edi+0x19]
  41abab:	xchg   esp,eax
  41abac:	jb     0x41abd8
  41abae:	mov    esi,0x4441cb46
  41abb3:	push   ds
  41abb4:	jge    0x41ac0f
  41abb6:	cmp    BYTE PTR [ebp+0x7ee3edb7],dl
  41abbc:	xlat   BYTE PTR ds:[ebx]
  41abbd:	jo     0x41ac07
  41abbf:	fxch   st(6)
  41abc1:	stc    
  41abc2:	mov    ah,0x57
  41abc4:	pop    ebx
  41abc5:	aad    0x8e
  41abc7:	daa    
  41abc8:	cwde   
  41abc9:	sbb    BYTE PTR [eax],al
  41abcb:	push   ds
  41abcc:	(bad)  
  41abcd:	mov    ds:0xd1096a20,al
  41abd2:	push   edi
  41abd3:	push   ebp
  41abd4:	je     0x41ab7b
  41abd6:	cmp    bl,bl
  41abd8:	fcmovnu st,st(0)
  41abda:	cdq    
  41abdb:	bnd ja 0x41ab65
  41abde:	mov    ebp,0xb1328ec2
  41abe3:	es jle 0x41aba3
  41abe6:	sub    esi,DWORD PTR [ecx+eax*2]
  41abe9:	lahf   
  41abea:	mov    eax,ds:0x8d37a88b
  41abef:	fild   WORD PTR [edi]
  41abf1:	jnp    0x41abaa
  41abf3:	ficomp WORD PTR [eax]
  41abf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abf6:	adc    BYTE PTR [edi+0x3593cb11],0x65
  41abfd:	jno    0x41ab81
  41abff:	hlt    
  41ac00:	in     al,0x49
  41ac02:	std    
  41ac03:	fldcw  WORD PTR [ebx]
  41ac05:	inc    BYTE PTR [ebp+0x75a80e3e]
  41ac0b:	into   
  41ac0c:	pop    edi
  41ac0d:	cmp    dl,dh
  41ac0f:	mov    ds:0xb5389643,eax
  41ac14:	add    eax,0xb75e5ab2
  41ac19:	retf   0x7383
  41ac1c:	nop
  41ac1d:	in     eax,0x1
  41ac1f:	js     0x41ac0c
  41ac21:	dec    esi
  41ac22:	cmp    ebx,DWORD PTR [edx]
  41ac24:	fldcw  WORD PTR [esi]
  41ac26:	mov    ds:0x8e6e60a0,eax
  41ac2b:	xlat   BYTE PTR ds:[ebx]
  41ac2c:	mov    dh,0x11
  41ac2e:	sbb    al,0x79
  41ac30:	mov    eax,DWORD PTR [edx-0xe5d37d1]
  41ac36:	pop    edx
  41ac37:	fs jno 0x41ac84
  41ac3a:	or     eax,0x2d6da7d6
  41ac3f:	or     eax,0x26012b2e
  41ac44:	je     0x41ac31
  41ac46:	mov    cl,dl
  41ac48:	or     ebx,DWORD PTR [edx+0x264a461f]
  41ac4e:	out    0xbc,eax
  41ac50:	jl     0x41acc5
  41ac52:	push   edi
  41ac53:	call   0x9585:0xdc338fbc
  41ac5a:	cld    
  41ac5b:	xor    cl,ah
  41ac5d:	ffree  st(4)
  41ac5f:	dec    dh
  41ac61:	push   ebx
  41ac62:	scas   al,BYTE PTR es:[edi]
  41ac63:	xor    cl,dh
  41ac65:	pushf  
  41ac66:	jg     0x41ac9b
  41ac68:	test   eax,0xc673e25
  41ac6d:	cs mov ecx,0x6e452c47
  41ac73:	in     al,0xd7
  41ac75:	push   0xfffffff1
  41ac77:	fs inc ebp
  41ac79:	retf   0x3be8
  41ac7c:	jb     0x41acad
  41ac7e:	call   0x8914:0xdab873e5
  41ac85:	pop    edx
  41ac86:	sub    DWORD PTR [edx+0x31396867],ebx
  41ac8c:	je     0x41ac9b
  41ac8e:	loope  0x41ac81
  41ac90:	pop    ds
  41ac91:	jecxz  0x41acda
  41ac93:	push   ss
  41ac94:	cmp    al,0x39
  41ac96:	shr    ebx,1
  41ac98:	mov    bh,0xcc
  41ac9a:	jbe    0x41acab
  41ac9c:	jbe    0x41ac91
  41ac9e:	icebp  
  41ac9f:	sub    al,bh
  41aca1:	dec    edx
  41aca2:	jmp    0xc36f19ca
  41aca7:	xor    al,0x45
  41aca9:	adc    eax,0xe754124e
  41acae:	mul    DWORD PTR [ebx]
  41acb0:	idiv   DWORD PTR [edi-0x52f837d3]
  41acb6:	or     eax,0x9a98c2ab
  41acbb:	and    DWORD PTR [ecx+0x4e56a62d],esp
  41acc1:	into   
  41acc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc3:	into   
  41acc4:	imul   esi,ebp,0xffffff8a
  41acc7:	(bad)  
  41acc8:	sahf   
  41acc9:	scas   eax,DWORD PTR es:[edi]
  41acca:	iret   
  41accb:	mov    cs,WORD PTR [edx+0x437ea248]
  41acd1:	scas   eax,DWORD PTR es:[edi]
  41acd2:	dec    edi
  41acd3:	leave  
  41acd4:	inc    ecx
  41acd5:	xor    eax,0xce8fdb76
  41acda:	adc    eax,0xa6f56403
  41acdf:	or     BYTE PTR [edx-0x249ff765],ah
  41ace5:	fst    st(1)
  41ace7:	jmp    0x41ac89
  41ace9:	or     al,0x90
  41aceb:	addr16 cmp eax,0x503bafca
  41acf1:	addr16 inc edi
  41acf3:	push   ecx
  41acf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf5:	dec    ebx
  41acf6:	sub    edi,DWORD PTR [esi+esi*2]
  41acf9:	sbb    eax,0xab3fbd98
  41acfe:	iret   
  41acff:	mov    al,ds:0x9e2bf438
  41ad04:	scas   al,BYTE PTR es:[edi]
  41ad05:	je     0x41ad24
  41ad07:	daa    
  41ad08:	mov    dl,0x32
  41ad0a:	sub    eax,0xf207f510
  41ad0f:	adc    DWORD PTR [ebp-0x5c],ebx
  41ad12:	xchg   BYTE PTR [esi+ebp*4+0x6279a5e5],dh
  41ad19:	cld    
  41ad1a:	out    dx,eax
  41ad1b:	sbb    BYTE PTR [ebx],0xff
  41ad1e:	mov    ebx,0xeae452a7
  41ad23:	repz add ch,BYTE PTR [ebp-0x2ccf23fb]
  41ad2a:	nop
  41ad2b:	jg     0x41ad30
  41ad2d:	(bad)  
  41ad2e:	mov    ebx,0xcd9b82eb
  41ad33:	loope  0x41ad02
  41ad35:	hlt    
  41ad36:	pop    ss
  41ad37:	and    eax,0xaeb2bfbe
  41ad3c:	push   ds
  41ad3d:	mov    ecx,0xfb48b4f2
  41ad42:	fcomp  DWORD PTR [esi]
  41ad44:	ins    BYTE PTR es:[edi],dx
  41ad45:	(bad)  
  41ad46:	shl    BYTE PTR [ebp+0x67],cl
  41ad49:	in     al,0x4b
  41ad4b:	add    al,0x29
  41ad4d:	shr    edx,1
  41ad4f:	daa    
  41ad50:	xchg   BYTE PTR [edi+0x5c],dl
  41ad53:	pop    ebx
  41ad54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad55:	(bad)  
  41ad56:	stos   BYTE PTR es:[edi],al
  41ad57:	mov    eax,ds:0xac07b5d0
  41ad5c:	jns    0x41ad77
  41ad5e:	mov    ebp,gs
  41ad60:	stc    
  41ad61:	sub    DWORD PTR ds:[eax-0x13],esi
  41ad65:	push   eax
  41ad66:	(bad)  
  41ad67:	out    0xf0,al
  41ad69:	jmp    0xd38:0x64d2e815
  41ad70:	cli    
  41ad71:	test   bh,0x53
  41ad74:	mov    eax,0x4b1bf625
  41ad79:	ret    0x9c38
  41ad7c:	mul    BYTE PTR [eax]
  41ad7e:	jp     0x41ad4a
  41ad80:	jmp    0x9a99c1c9
  41ad85:	call   DWORD PTR [ebx-0x4471ab88]
  41ad8b:	je     0x41adaa
  41ad8d:	jmp    DWORD PTR [ecx+0x6b]
  41ad90:	add    al,0xdd
  41ad92:	xor    al,0x2a
  41ad94:	rcl    BYTE PTR [esi+0x2e44dfc9],cl
  41ad9a:	jae    0x41ad4b
  41ad9c:	sbb    al,0xf1
  41ad9e:	and    bh,ah
  41ada0:	fidiv  WORD PTR [eax+0x3891511a]
  41ada6:	mov    ecx,DWORD PTR [edx+0x1dc54967]
  41adac:	test   DWORD PTR [esi+0x3e],edi
  41adaf:	pushf  
  41adb0:	pusha  
  41adb1:	fidiv  WORD PTR [ebx-0x79]
  41adb4:	inc    ebp
  41adb5:	mov    esi,0x4f00cd8b
  41adba:	cmp    DWORD PTR [edi],ebp
  41adbc:	adc    edx,esi
  41adbe:	shl    ebp,0xab
  41adc1:	add    al,0xd1
  41adc3:	test   DWORD PTR [ecx],ecx
  41adc5:	xchg   ebx,eax
  41adc6:	int3   
  41adc7:	nop
  41adc8:	add    eax,0x50d4d13f
  41adcd:	ss sub eax,0xbaddf8c1
  41add3:	scas   eax,DWORD PTR es:[edi]
  41add4:	or     ch,BYTE PTR [edi-0xd2c1df5]
  41adda:	int3   
  41addb:	cmc    
  41addc:	mov    bl,0x2e
  41adde:	jle    0x41ae4f
  41ade0:	shl    edx,1
  41ade2:	or     BYTE PTR [eax-0x2e7a1530],0x10
  41ade9:	jg     0x41ad8c
  41adeb:	jp     0x41add7
  41aded:	mov    ds:0x3749ecc0,al
  41adf2:	sbb    bh,BYTE PTR [ecx-0x31]
  41adf5:	stos   DWORD PTR es:[edi],eax
  41adf6:	mov    eax,DWORD PTR [edx+0x230f658b]
  41adfc:	jns    0x41ae74
  41adfe:	enter  0xe6c6,0x3e
  41ae02:	daa    
  41ae03:	cmp    BYTE PTR [esp+eax*8-0x26a65f10],bl
  41ae0a:	in     eax,0x6c
  41ae0c:	out    0x3a,al
  41ae0e:	xchg   DWORD PTR [ecx-0x712ef45],esi
  41ae14:	dec    edx
  41ae15:	sub    DWORD PTR [ecx-0x30f2270c],ecx
  41ae1b:	cmp    ah,BYTE PTR [esi+0x63]
  41ae1e:	lods   eax,DWORD PTR ds:[esi]
  41ae1f:	dec    ebp
  41ae20:	imul   edi,DWORD PTR [ecx],0x218ee983
  41ae26:	jo     0x41ae11
  41ae28:	and    eax,DWORD PTR [ebp+0x2a3dd743]
  41ae2e:	outs   dx,BYTE PTR ds:[esi]
  41ae2f:	scas   eax,DWORD PTR es:[edi]
  41ae30:	jecxz  0x41ae99
  41ae32:	cmc    
  41ae33:	pop    es
  41ae34:	scas   eax,DWORD PTR es:[edi]
  41ae35:	fwait
  41ae36:	test   BYTE PTR [ecx+0x2a62b07f],ah
  41ae3c:	sar    BYTE PTR [edi-0x1825e239],1
  41ae42:	in     al,dx
  41ae43:	call   0x514c:0xf7c5e8d7
  41ae4a:	dec    ebx
  41ae4b:	fdivrp st(3),st
  41ae4d:	cmp    BYTE PTR [ecx],0x56
  41ae50:	sub    ecx,DWORD PTR [edx-0x54d044f]
  41ae56:	ffreep st(3)
  41ae58:	mov    eax,0x287ef531
  41ae5d:	dec    ebp
  41ae5e:	jb     0x41ae54
  41ae60:	sbb    DWORD PTR [edi+eax*8-0x5a4076cb],0x8004d938
  41ae6b:	sahf   
  41ae6c:	in     eax,dx
  41ae6d:	sub    al,0xf1
  41ae6f:	and    al,0x2a
  41ae71:	mov    ebp,DWORD PTR [esi]
  41ae73:	or     BYTE PTR [ecx-0x11],0x1a
  41ae77:	jge    0x41ae49
  41ae79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae7a:	fs in  eax,0xf2
  41ae7d:	cmp    eax,0x83d9f2a
  41ae82:	icebp  
  41ae83:	in     eax,0x77
  41ae85:	adc    BYTE PTR [ebp+0x782d91e],0xcf
  41ae8c:	ficom  DWORD PTR [ecx]
  41ae8e:	sub    cl,ah
  41ae90:	daa    
  41ae91:	pop    ebp
  41ae92:	or     al,0x3d
  41ae94:	xchg   esp,eax
  41ae95:	(bad)  
  41ae96:	push   ebx
  41ae97:	and    edi,DWORD PTR [ebx+0x75]
  41ae9a:	pop    ebx
  41ae9b:	add    DWORD PTR [ebx+ecx*1-0x5db847e5],eax
  41aea2:	adc    al,BYTE PTR [esi-0x4f3eda22]
  41aea8:	imul   esi,DWORD PTR [ecx-0x768805f9],0xbf9137bd
  41aeb2:	jl     0x41aed7
  41aeb4:	xchg   edi,eax
  41aeb5:	adc    cl,BYTE PTR gs:[edi-0x49]
  41aeb9:	std    
  41aeba:	and    al,0xc
  41aebc:	or     al,0xcf
  41aebe:	push   0xe8e20e11
  41aec3:	push   eax
  41aec4:	cmp    eax,0x63d9fd2
  41aec9:	sub    esi,ecx
  41aecb:	adc    esi,DWORD PTR [edi-0x16821614]
  41aed1:	loop   0x41ae84
  41aed3:	ds push edi
  41aed5:	fidivr WORD PTR [ebx-0x2d]
  41aed8:	sahf   
  41aed9:	popa   
  41aeda:	ffree  st(6)
  41aedc:	(bad)  
  41aedd:	xchg   ebp,eax
  41aede:	sbb    BYTE PTR [ebx+eax*4-0xb789fcb],dl
  41aee5:	out    dx,eax
  41aee6:	add    al,dh
  41aee8:	xchg   esi,eax
  41aee9:	xchg   edi,eax
  41aeea:	mov    eax,0xf1f066b4
  41aeef:	in     eax,0xad
  41aef1:	cli    
  41aef2:	adc    DWORD PTR [ebx+0x47],eax
  41aef5:	enter  0xe1d1,0x6b
  41aef9:	paddq  mm0,QWORD PTR [eax-0x26e886d9]
  41af00:	push   ds
  41af01:	(bad)  
  41af02:	mov    ah,0xfd
  41af04:	xchg   esp,edi
  41af06:	sub    al,0x71
  41af08:	paddsw mm4,QWORD PTR [edx]
  41af0b:	inc    ecx
  41af0c:	retf   
  41af0d:	jmp    0x9a8a:0xd0172d8c
  41af14:	adc    edx,eax
  41af16:	lods   eax,DWORD PTR ds:[esi]
  41af17:	(bad)  
  41af18:	in     eax,dx
  41af19:	pop    edi
  41af1a:	sub    bh,BYTE PTR [ebp-0xf5be823]
  41af20:	jb     0x41aeee
  41af22:	cmp    cl,BYTE PTR [ebp+eiz*2+0x26c3353a]
  41af29:	jne    0x41aeda
  41af2b:	aas    
  41af2c:	mov    ds:0x2c2c4dfa,eax
  41af31:	or     dl,BYTE PTR [ebx]
  41af33:	pop    edi
  41af34:	push   edx
  41af35:	cmp    eax,ecx
  41af37:	mov    cl,0x75
  41af39:	xor    BYTE PTR [ebx-0x33],ch
  41af3c:	mov    ds:0xa2e69698,eax
  41af41:	inc    edi
  41af42:	push   ecx
  41af43:	dec    cl
  41af45:	sbb    edx,DWORD PTR [ebp-0xf]
  41af48:	stc    
  41af49:	lock ret 
  41af4b:	cs mov ah,0xd3
  41af4e:	leave  
  41af4f:	jl     0x41aee8
  41af51:	stos   DWORD PTR es:[edi],eax
  41af52:	imul   eax,esp,0x33
  41af55:	bound  ebx,QWORD PTR [eax-0x31240693]
  41af5b:	test   edx,ebx
  41af5d:	mov    ecx,0x92ac7f7c
  41af62:	push   esp
  41af63:	mov    WORD PTR [ebx+0x3d],?
  41af66:	add    BYTE PTR [ebx],ah
  41af68:	mov    eax,0xe04218bf
  41af6d:	sbb    eax,0x6a24316c
  41af72:	(bad)  
  41af73:	sub    bh,BYTE PTR [edi+ebx*1]
  41af76:	cmp    DWORD PTR [ecx+0x2b],esi
  41af79:	sub    eax,0xbc8a72c2
  41af7e:	cmp    DWORD PTR [ecx],esi
  41af80:	or     al,0x65
  41af82:	jb     0x41afe6
  41af84:	push   DWORD PTR [edi]
  41af86:	xchg   esi,eax
  41af87:	ja     0x41aff0
  41af89:	pop    eax
  41af8a:	pop    ds
  41af8b:	push   0xffffffc6
  41af8d:	inc    edx
  41af8e:	add    BYTE PTR [esi+0xc257cbd],dl
  41af94:	fnstcw WORD PTR [edi+0x41b9a76]
  41af9a:	(bad)  
  41af9b:	cmc    
  41af9c:	dec    ebx
  41af9d:	outs   dx,DWORD PTR ds:[esi]
  41af9e:	setb   BYTE PTR [eax]
  41afa1:	inc    esp
  41afa2:	mov    DWORD PTR [ebp+0xad74fd4],ebp
  41afa8:	jecxz  0x41af79
  41afaa:	fldenv [ecx-0x77621136]
  41afb0:	lds    edx,FWORD PTR [esi-0x50]
  41afb3:	shr    BYTE PTR [edi-0x481a4040],0xd7
  41afba:	or     edx,esi
  41afbc:	mov    DWORD PTR [esi],eax
  41afbe:	stos   BYTE PTR es:[edi],al
  41afbf:	add    BYTE PTR [esi+0x25c89fd1],0x69
  41afc6:	rcl    ebp,0x36
  41afc9:	in     eax,dx
  41afca:	sahf   
  41afcb:	out    0x5b,eax
  41afcd:	imul   ecx,ebx,0xf174dd14
  41afd3:	dec    edi
  41afd4:	lahf   
  41afd5:	mov    eax,0x614bed3b
  41afda:	jae    0x41afc7
  41afdc:	push   eax
  41afdd:	iret   
  41afde:	ds add eax,0x5b12d584
  41afe4:	dec    ebx
  41afe5:	sub    DWORD PTR [edi+0x684c90a1],0x8fa46678
  41afef:	lods   al,BYTE PTR ds:[esi]
  41aff0:	add    DWORD PTR [ecx-0x3b],edi
  41aff3:	pusha  
  41aff4:	(bad)  
  41aff5:	push   ebx
  41aff6:	jge    0x41afc3
  41aff8:	imul   ebp,DWORD PTR [ebx+0x15],0xd86bb7ba
  41afff:	shr    BYTE PTR [ebx],0x9a
  41b002:	aas    
  41b003:	pop    ss
  41b004:	sbb    ecx,DWORD PTR [esi-0x2c264f3]
  41b00a:	sbb    al,0xc
  41b00c:	pusha  
  41b00d:	jmp    0x483b7889
  41b012:	mov    bh,0x68
  41b014:	add    eax,0x8d163d7b
  41b019:	inc    ebp
  41b01a:	out    0xc8,al
  41b01c:	cmp    dl,BYTE PTR [edi]
  41b01e:	pusha  
  41b01f:	in     eax,0x63
  41b021:	mov    ds:0xf237a849,eax
  41b026:	sbb    esp,DWORD PTR [ecx+0x64]
  41b029:	icebp  
  41b02a:	cdq    
  41b02b:	(bad)  
  41b02c:	(bad)  
  41b02d:	lods   eax,DWORD PTR ds:[esi]
  41b02e:	sbb    DWORD PTR [edx+0x1a0f74ae],edi
  41b034:	push   edx
  41b035:	test   DWORD PTR [edx+0x13],edi
  41b038:	and    ch,bh
  41b03a:	bound  edi,QWORD PTR [ebx]
  41b03c:	sub    al,0x7d
  41b03e:	les    esi,FWORD PTR [eax]
  41b040:	stos   DWORD PTR es:[edi],eax
  41b041:	div    DWORD PTR ds:0x42e8c05b
  41b047:	cmp    ebp,DWORD PTR [edx]
  41b049:	jbe    0x41affc
  41b04b:	aam    0x66
  41b04d:	scas   al,BYTE PTR es:[edi]
  41b04e:	std    
  41b04f:	jp     0x41b06a
  41b051:	add    DWORD PTR [esp+edx*2+0x33],edx
  41b055:	or     eax,0x8ba1959e
  41b05a:	je     0x41b0d9
  41b05c:	fldcw  WORD PTR [esi-0x3d]
  41b05f:	ins    DWORD PTR es:[edi],dx
  41b060:	or     DWORD PTR [ebx-0x7e],ecx
  41b063:	inc    edx
  41b064:	xor    ebp,ebp
  41b066:	mov    eax,esp
  41b068:	sar    BYTE PTR [ecx+0x2e],cl
  41b06b:	jns    0x41b0be
  41b06d:	test   al,0x37
  41b06f:	inc    edi
  41b070:	and    DWORD PTR [esi+0x79a48e8d],esp
  41b076:	por    mm4,QWORD PTR [esi+edx*1]
  41b07a:	mov    ecx,0x61528875
  41b07f:	daa    
  41b080:	retf   
  41b081:	xchg   ebp,eax
  41b082:	pusha  
  41b083:	push   edi
  41b084:	xchg   edx,eax
  41b085:	push   esp
  41b086:	and    BYTE PTR [esi],bl
  41b088:	mov    ch,0xe8
  41b08a:	ror    BYTE PTR [bx+di-0x6aae],0xf8
  41b090:	pop    ebx
  41b091:	in     al,dx
  41b092:	pop    edx
  41b093:	test   BYTE PTR [ebx+0x42],cl
  41b096:	sar    DWORD PTR [ecx+edi*8],0x32
  41b09a:	cmp    eax,0x2ec1a2d7
  41b09f:	mov    WORD PTR [edx-0x679edb67],?
  41b0a5:	xor    ebp,DWORD PTR [ecx-0x7b]
  41b0a8:	jno    0x41b063
  41b0aa:	test   BYTE PTR [eax],ch
  41b0ac:	cmp    eax,0x680c5f54
  41b0b1:	dec    ebp
  41b0b2:	repnz in eax,dx
  41b0b4:	adc    edi,DWORD PTR [edi+0x7f7a0320]
  41b0ba:	lods   eax,DWORD PTR ds:[esi]
  41b0bb:	(bad)
  41b0be:	jle    0x41b0b9
  41b0c0:	inc    ebx
  41b0c1:	ret    
  41b0c2:	and    al,0x9b
  41b0c4:	push   ss
  41b0c5:	and    DWORD PTR [ebx],esi
  41b0c7:	add    edx,DWORD PTR [eax+0x5f9316ed]
  41b0cd:	aam    0x93
  41b0cf:	push   ebp
  41b0d0:	add    edx,DWORD PTR [ecx-0x7e]
  41b0d3:	jmp    0x41b0d9
  41b0d5:	loop   0x41b125
  41b0d7:	xor    DWORD PTR ds:0x55b12823,edi
  41b0dd:	ins    BYTE PTR es:[edi],dx
  41b0de:	add    eax,0xc4d44cce
  41b0e3:	ja     0x41b070
  41b0e5:	shl    edx,cl
  41b0e7:	jg     0x41b0f2
  41b0e9:	sub    ah,BYTE PTR [edi+0x73]
  41b0ec:	jecxz  0x41b0c0
  41b0ee:	inc    eax
  41b0ef:	add    al,0x70
  41b0f1:	mov    ah,0xb4
  41b0f3:	push   ds
  41b0f4:	inc    ecx
  41b0f5:	test   dl,ah
  41b0f7:	or     ebp,eax
  41b0f9:	in     eax,dx
  41b0fa:	add    ebp,esp
  41b0fc:	in     al,0x34
  41b0fe:	cmp    edx,DWORD PTR [edi-0x4253870e]
  41b104:	xor    eax,0xbe41b8c3
  41b109:	push   edx
  41b10a:	es cwde 
  41b10c:	cdq    
  41b10d:	jae    0x41b182
  41b10f:	ja     0x5e32a260
  41b115:	out    0xd1,al
  41b117:	inc    ecx
  41b118:	fld    QWORD PTR [ebp-0x60]
  41b11b:	mov    ebp,0x52dd03ad
  41b120:	gs in  eax,0xdc
  41b123:	inc    edx
  41b124:	sub    al,0xe4
  41b126:	enter  0xbae4,0x51
  41b12a:	sub    dh,bh
  41b12c:	sti    
  41b12d:	fld    DWORD PTR [edx]
  41b12f:	std    
  41b130:	hlt    
  41b131:	sub    al,0x52
  41b133:	ret    
  41b134:	pcmpeqw mm6,QWORD PTR [edi-0x3d779b13]
  41b13b:	ret    
  41b13c:	call   0x56137681
  41b141:	adc    BYTE PTR [eax+0x296b8254],bh
  41b147:	mov    BYTE PTR [edi+0x25],ch
  41b14a:	sbb    DWORD PTR [ecx+edx*8+0x4b],0xffffffd1
  41b14f:	ss push esi
  41b151:	inc    BYTE PTR [eax+0x23]
  41b154:	cs inc ecx
  41b156:	js     0x41b1c6
  41b158:	jo     0x41b106
  41b15a:	mov    al,ds:0x66df6929
  41b15f:	cmp    bl,BYTE PTR [ecx+ebp*8-0x3b4effd2]
  41b166:	ss mov BYTE PTR cs:[esi],bl
  41b16a:	retf   
  41b16b:	xchg   ah,bl
  41b16d:	cmp    esp,DWORD PTR [esi+0x42]
  41b170:	sbb    bh,BYTE PTR [esi+0x62176d71]
  41b176:	lods   eax,DWORD PTR ds:[esi]
  41b177:	mov    ah,0x2c
  41b179:	inc    ebx
  41b17a:	(bad)  
  41b17c:	inc    ch
  41b17e:	mov    edi,0xb781ac20
  41b183:	sbb    DWORD PTR [ecx],ebx
  41b185:	and    al,0x1e
  41b187:	cli    
  41b188:	add    ebp,DWORD PTR [esi]
  41b18a:	pop    edi
  41b18b:	dec    edi
  41b18c:	push   edx
  41b18d:	(bad)  
  41b18e:	adc    ch,dl
  41b190:	shr    DWORD PTR [ebp+eax*1-0x3b],1
  41b194:	loope  0x41b12d
  41b196:	bound  edi,QWORD PTR [ebp-0x51]
  41b199:	sbb    DWORD PTR [ebp-0xd02186a],ecx
  41b19f:	hlt    
  41b1a0:	fiadd  WORD PTR [edx+0x4a]
  41b1a3:	push   ebp
  41b1a4:	stc    
  41b1a5:	or     al,BYTE PTR [ecx]
  41b1a7:	push   esi
  41b1a8:	or     BYTE PTR [ebx+eax*1+0x5a],dh
  41b1ac:	push   cs
  41b1ad:	aaa    
  41b1ae:	add    bl,ah
  41b1b0:	mov    ?,WORD PTR [edi]
  41b1b2:	inc    edi
  41b1b3:	pop    eax
  41b1b4:	(bad)  
  41b1b6:	retf   0xa4bd
  41b1b9:	ret    
  41b1ba:	aaa    
  41b1bb:	xor    DWORD PTR [ecx+eiz*1-0x4798043c],eax
  41b1c2:	nop
  41b1c3:	adc    eax,0x5deda536
  41b1c8:	fistp  DWORD PTR [esi+eiz*1]
  41b1cb:	jno    0x41b23e
  41b1cd:	cmc    
  41b1ce:	inc    esi
  41b1cf:	fnstcw WORD PTR [ebx-0x5f]
  41b1d2:	or     DWORD PTR [ebp+0x10ed309e],esi
  41b1d8:	jae    0x41b1e2
  41b1da:	imul   ecx,edi,0x225db4c1
  41b1e0:	xchg   edx,eax
  41b1e1:	inc    eax
  41b1e2:	jp     0x41b1e0
  41b1e4:	mov    ebp,0x40dcce05
  41b1e9:	in     al,0x2f
  41b1eb:	push   esi
  41b1ec:	addr16 pop ebx
  41b1ee:	aaa    
  41b1ef:	daa    
  41b1f0:	jge    0x41b1fd
  41b1f2:	jge    0x41b248
  41b1f4:	retf   0x12d7
  41b1f7:	pushf  
  41b1f8:	xor    ecx,DWORD PTR [ebx+edi*2-0x609c8055]
  41b1ff:	mov    dh,0x27
  41b201:	push   edx
  41b202:	aad    0x63
  41b204:	mov    ds,esi
  41b206:	sbb    BYTE PTR [ecx+edi*1+0x7f],dh
  41b20a:	jmp    0xfe7a9aeb
  41b20f:	and    DWORD PTR [eax-0x66224d9c],edx
  41b215:	xor    DWORD PTR [edx+esi*4],esi
  41b218:	pop    esp
  41b219:	xchg   ebp,eax
  41b21a:	push   esi
  41b21b:	push   edx
  41b21c:	icebp  
  41b21d:	outs   dx,BYTE PTR ds:[esi]
  41b21e:	nop
  41b21f:	sub    BYTE PTR [esi+edi*8+0x460c4f88],dh
  41b226:	or     ebp,DWORD PTR [ebx-0x4cceda60]
  41b22c:	mov    esi,0xb7694080
  41b231:	xchg   BYTE PTR [edi],ah
  41b233:	jp     0x41b21b
  41b235:	dec    esp
  41b236:	mov    DWORD PTR [ebx+0x3d0cfe4c],ebp
  41b23c:	ret    
  41b23d:	sub    bl,BYTE PTR [eax-0x34]
  41b240:	mov    ah,0xce
  41b242:	sbb    DWORD PTR [ebx-0x2],esi
  41b245:	push   ss
  41b246:	xchg   BYTE PTR [edi+0x1e68493e],ch
  41b24c:	mov    bl,0xf7
  41b24e:	cdq    
  41b24f:	and    eax,0x112e8264
  41b254:	sub    BYTE PTR [ecx],bl
  41b256:	pushf  
  41b257:	lods   al,BYTE PTR cs:[esi]
  41b259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25a:	pop    edi
  41b25b:	stc    
  41b25c:	and    eax,0xe4cddb90
  41b261:	leave  
  41b262:	int3   
  41b263:	xchg   esp,eax
  41b264:	mov    ds:0x8c7b4b72,al
  41b269:	fsub   DWORD PTR [edx-0x7ec102f8]
  41b26f:	jl     0x41b28c
  41b271:	pop    ebx
  41b272:	and    ah,bh
  41b274:	mov    ds:0x79dcfeed,eax
  41b279:	iret   
  41b27a:	and    ebx,ebp
  41b27c:	jns    0x41b2a1
  41b27e:	sti    
  41b27f:	stc    
  41b280:	mov    dh,0x3
  41b282:	fidivr DWORD PTR ds:0x83eed767
  41b288:	in     al,0xa3
  41b28a:	cmp    DWORD PTR [edx-0x12],0x6d
  41b28e:	sbb    dl,BYTE PTR [ebp+0x49]
  41b291:	ds ja  0x41b292
  41b294:	(bad)  
  41b295:	cwde   
  41b296:	fnstcw WORD PTR [ebp-0x66ff6f3d]
  41b29c:	pop    esi
  41b29d:	or     DWORD PTR [ebx+0x1fb663be],esp
  41b2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2a4:	stos   BYTE PTR es:[edi],al
  41b2a5:	add    al,0x9c
  41b2a7:	inc    eax
  41b2a8:	adc    ecx,DWORD PTR [esi-0x491824c2]
  41b2ae:	test   al,0x5
  41b2b0:	icebp  
  41b2b1:	add    BYTE PTR [edx-0x6e],0x91
  41b2b5:	push   edi
  41b2b6:	fwait
  41b2b7:	out    0x83,eax
  41b2b9:	das    
  41b2ba:	push   edi
  41b2bb:	xor    ecx,DWORD PTR [edx-0x40]
  41b2be:	inc    ebp
  41b2bf:	cld    
  41b2c0:	inc    eax
  41b2c1:	cmp    eax,0x1090dff
  41b2c6:	imul   ecx,DWORD PTR [eax-0x60],0x3505cec7
  41b2cd:	test   eax,0xb8f9ce58
  41b2d2:	sbb    al,0xa2
  41b2d4:	and    DWORD PTR [edi],ebx
  41b2d6:	cmp    al,0xda
  41b2d8:	out    0xba,eax
  41b2da:	hlt    
  41b2db:	or     DWORD PTR [ebp+0x30dba5ba],eax
  41b2e1:	out    dx,al
  41b2e2:	popa   
  41b2e3:	xor    ebx,DWORD PTR [ecx-0x7b]
  41b2e6:	sti    
  41b2e7:	pop    ds
  41b2e8:	push   ecx
  41b2e9:	sahf   
  41b2ea:	mov    DWORD PTR [edx],ebx
  41b2ec:	push   0x3f
  41b2ee:	inc    esi
  41b2ef:	je     0x41b32e
  41b2f1:	adc    BYTE PTR [edx+ebp*1],bl
  41b2f4:	outs   dx,BYTE PTR ds:[esi]
  41b2f5:	lea    edi,[esi+0x20]
  41b2f8:	retf   
  41b2f9:	adc    edi,DWORD PTR [edx]
  41b2fb:	inc    ebp
  41b2fc:	imul   edi,DWORD PTR [esi],0xabcef622
  41b302:	dec    ebp
  41b303:	retf   0x183d
  41b306:	cs xor al,0x6f
  41b309:	inc    edx
  41b30a:	fdivr  QWORD PTR [ecx+0x47654856]
  41b310:	xchg   ebp,edi
  41b312:	in     al,0xf2
  41b314:	sbb    al,0xd1
  41b316:	retf   
  41b317:	sub    esi,DWORD PTR [edi+0x1f]
  41b31a:	popf   
  41b31b:	in     eax,0x98
  41b31d:	cmp    esi,esp
  41b31f:	iret   
  41b320:	push   ss
  41b321:	into   
  41b322:	out    0x39,eax
  41b324:	jns    0x41b35d
  41b326:	or     DWORD PTR [esi],esi
  41b328:	jno    0x41b2fc
  41b32a:	or     BYTE PTR [edx+0x5],al
  41b32d:	sar    DWORD PTR [edi],1
  41b32f:	jnp    0x41b3ac
  41b331:	mov    cl,0xd3
  41b333:	fisttp DWORD PTR [edx]
  41b335:	retf   
  41b336:	lds    edi,FWORD PTR [ebp-0x51]
  41b339:	adc    dh,BYTE PTR [ebp+0x51bec9d9]
  41b33f:	xchg   esp,ebx
  41b341:	out    0x6e,eax
  41b343:	test   edx,ebx
  41b345:	xchg   ecx,eax
  41b346:	xchg   ecx,eax
  41b347:	xchg   esp,eax
  41b348:	cld    
  41b349:	ins    DWORD PTR es:[edi],dx
  41b34a:	iret   
  41b34b:	(bad)  
  41b34d:	pop    ebx
  41b34e:	invd   
  41b350:	push   edi
  41b351:	sbb    DWORD PTR ds:0xbe40f96,ebp
  41b357:	mov    bh,0x1f
  41b359:	mov    dl,0xa
  41b35b:	dec    esp
  41b35c:	shr    DWORD PTR [eax-0x5dbc818a],cl
  41b362:	aas    
  41b363:	outs   dx,BYTE PTR ds:[esi]
  41b364:	jns    0x41b2e7
  41b366:	xor    WORD PTR [edi+0x5e],ax
  41b36a:	mov    al,BYTE PTR [ebx]
  41b36c:	lds    ebp,FWORD PTR [esi]
  41b36e:	mov    eax,ds:0x30f0c3b1
  41b373:	aam    0xb
  41b375:	es pop esi
  41b377:	push   ds
  41b378:	fidiv  DWORD PTR ds:0x7e5424dc
  41b37e:	ins    BYTE PTR es:[edi],dx
  41b37f:	mov    ds:0x396246f7,al
  41b384:	fdivrp st(5),st
  41b386:	mov    bl,0xbb
  41b388:	pop    esp
  41b389:	jg     0x41b3eb
  41b38b:	std    
  41b38c:	inc    ebx
  41b38d:	leave  
  41b38e:	mov    edx,0x9383bf9b
  41b393:	xlat   BYTE PTR ds:[ebx]
  41b394:	push   ss
  41b395:	shl    ebx,0x3d
  41b398:	dec    edi
  41b399:	push   edx
  41b39a:	sbb    al,0x8
  41b39c:	cmp    bl,BYTE PTR [ebx+0x32]
  41b39f:	xor    BYTE PTR [edx+0x3f],bh
  41b3a2:	inc    edi
  41b3a3:	(bad)  
  41b3a4:	retf   0x794c
  41b3a7:	and    dl,BYTE PTR ds:0xe9e54dc8
  41b3ad:	dec    esi
  41b3ae:	sub    eax,0xbbb85732
  41b3b3:	retf   
  41b3b4:	mov    ecx,0x258503f1
  41b3b9:	inc    edi
  41b3ba:	or     edx,DWORD PTR [esi+edx*1+0x79]
  41b3be:	push   ebx
  41b3bf:	fsubr  QWORD PTR [eax+0x12e84e2c]
  41b3c5:	inc    ebx
  41b3c6:	or     bh,dh
  41b3c8:	nop
  41b3c9:	sub    DWORD PTR [ebx-0x38],ecx
  41b3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3cd:	(bad)  
  41b3ce:	retf   0x2312
  41b3d1:	inc    edx
  41b3d2:	add    al,0x57
  41b3d4:	cmp    al,0xf8
  41b3d6:	mov    ebp,0x9daf7685
  41b3db:	inc    edx
  41b3dc:	rcr    DWORD PTR [ebx+0x4d62506b],1
  41b3e2:	dec    ebx
  41b3e3:	adc    edx,0x909e0c06
  41b3e9:	imul   ecx,DWORD PTR [ecx+0x7441d2be],0x966ec6ac
  41b3f3:	mov    al,ds:0x8295327
  41b3f8:	xor    cl,BYTE PTR [edi-0x6719f88c]
  41b3fe:	out    0x4,eax
  41b400:	push   eax
  41b401:	fucomip st,st(3)
  41b403:	rcr    BYTE PTR [ebx-0x2c],1
  41b406:	and    bh,cl
  41b408:	mov    al,BYTE PTR [ebp-0x53]
  41b40b:	mov    ds:0xcd9da0d3,eax
  41b410:	pushf  
  41b411:	dec    ebx
  41b412:	fisttp DWORD PTR [ecx]
  41b414:	push   ebp
  41b415:	push   edx
  41b416:	mov    WORD PTR [ebx+0x53],?
  41b419:	xchg   ebx,eax
  41b41a:	cmc    
  41b41b:	push   esi
  41b41c:	cmc    
  41b41d:	add    esi,ebp
  41b41f:	in     eax,dx
  41b420:	inc    ebx
  41b421:	adc    DWORD PTR [ebp-0x1b],esp
  41b424:	lods   al,BYTE PTR ds:[esi]
  41b425:	bound  ecx,QWORD PTR [ebx-0x11]
  41b428:	mov    ecx,0x583cdf8e
  41b42d:	sbb    BYTE PTR [eax-0x74],cl
  41b430:	inc    esi
  41b431:	push   ebp
  41b432:	or     ebx,esi
  41b434:	lahf   
  41b435:	sub    DWORD PTR [esi-0xb],eax
  41b438:	jne    0x41b3ef
  41b43a:	xchg   ebp,eax
  41b43b:	add    eax,0x2d62f3bd
  41b440:	jbe    0x41b3cd
  41b442:	test   eax,0x385d6bd6
  41b447:	sti    
  41b448:	mov    eax,0xca454242
  41b44d:	mov    edx,0x4c5ee729
  41b452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b453:	fdivp  st(5),st
  41b455:	or     ah,ah
  41b457:	push   eax
  41b458:	cmp    BYTE PTR [edi-0x7ffc74e8],0x4a
  41b45f:	js     0x41b429
  41b461:	sub    BYTE PTR [esi-0x51],cl
  41b464:	mov    ds:0xf923ea69,al
  41b469:	out    0xd3,eax
  41b46b:	sbb    dl,BYTE PTR [edi-0x48]
  41b46e:	(bad)  
  41b46f:	sbb    BYTE PTR [ecx],ch
  41b471:	jg     0x41b3f5
  41b473:	and    BYTE PTR [ebp+0x62],al
  41b476:	sbb    ebp,DWORD PTR [edx]
  41b478:	call   0x6ce05046
  41b47d:	jb     0x41b4ab
  41b47f:	gs ret 0x2e9f
  41b483:	mov    ecx,0xc550ea97
  41b488:	imul   esp,DWORD PTR [esp+ebp*1+0x15],0x19
  41b48d:	test   al,0x36
  41b48f:	pop    esp
  41b490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b491:	mov    edx,0x9b03f4b5
  41b496:	mov    ebx,0xd3cb37b9
  41b49b:	sbb    al,0x27
  41b49d:	ins    DWORD PTR es:[edi],dx
  41b49e:	push   edx
  41b49f:	jle    0x41b426
  41b4a1:	mov    ds,WORD PTR [ecx-0x5389f6fb]
  41b4a7:	inc    edi
  41b4a8:	(bad)  
  41b4a9:	icebp  
  41b4aa:	fidiv  WORD PTR [esi+eiz*8-0x4a]
  41b4ae:	loop   0x41b49c
  41b4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b1:	in     eax,0x9d
  41b4b3:	or     al,0xf8
  41b4b5:	mov    ds:0x5ed8e457,eax
  41b4ba:	dec    ecx
  41b4bb:	hlt    
  41b4bc:	setbe  BYTE PTR [ebx]
  41b4bf:	sub    BYTE PTR [eax+0x3c60fdad],dh
  41b4c5:	ret    
  41b4c6:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c8:	cmp    al,0xe5
  41b4ca:	jp     0x41b4b4
  41b4cc:	mov    ch,0xe1
  41b4ce:	cmp    DWORD PTR [edx-0x4a],0x27
  41b4d2:	sti    
  41b4d3:	push   0xccdcf3d1
  41b4d8:	bound  ecx,QWORD PTR [eax]
  41b4da:	stos   BYTE PTR es:[edi],al
  41b4db:	addr16 pop ds
  41b4dd:	bound  ebx,QWORD PTR [esi+0x73]
  41b4e0:	out    dx,eax
  41b4e1:	jo     0x41b4a8
  41b4e3:	cmp    eax,0x926ad44e
  41b4e8:	jp     0x41b4ae
  41b4ea:	lds    ebx,FWORD PTR [ebp-0x7d990e22]
  41b4f0:	xchg   edx,eax
  41b4f1:	inc    ebp
  41b4f2:	test   DWORD PTR ds:0xdc64038b,ebp
  41b4f8:	dec    edx
  41b4f9:	dec    edi
  41b4fa:	xor    dh,BYTE PTR [esi]
  41b4fc:	mov    al,0x9e
  41b4fe:	rol    ecx,0x74
  41b501:	xchg   ebx,eax
  41b502:	mov    eax,ds:0x3f2128b
  41b507:	loope  0x41b499
  41b509:	scas   eax,DWORD PTR es:[edi]
  41b50a:	bound  esi,QWORD PTR [esi]
  41b50c:	push   es
  41b50d:	or     BYTE PTR [esi-0x5],al
  41b510:	jmp    0x909f2783
  41b515:	cmp    al,0x54
  41b517:	sbb    eax,0x4d14e982
  41b51c:	les    eax,FWORD PTR [ebp+0x74]
  41b51f:	xchg   ebp,eax
  41b520:	mov    bh,0xd8
  41b522:	sub    bl,ch
  41b524:	dec    esp
  41b525:	pop    esi
  41b526:	sbb    eax,0x2628b14a
  41b52b:	cld    
  41b52c:	call   0x3958aeb
  41b531:	inc    esp
  41b532:	push   es
  41b533:	jne    0x41b597
  41b535:	push   edi
  41b536:	and    DWORD PTR [ebx-0x1b5c275a],ebp
  41b53c:	ja     0x41b57a
  41b53e:	cdq    
  41b53f:	ror    DWORD PTR [edx-0x60a752],cl
  41b545:	mov    esi,0xb6662299
  41b54a:	sub    esp,ebp
  41b54c:	jno    0x41b5be
  41b54e:	inc    eax
  41b54f:	test   al,0x49
  41b551:	aad    0xac
  41b553:	out    0x26,eax
  41b555:	ss mov esp,0x8027a101
  41b55b:	pushf  
  41b55c:	mov    dh,0x57
  41b55e:	or     ah,BYTE PTR [ebx*8+0x770796b]
  41b565:	aad    0x7d
  41b567:	ds xchg ebp,eax
  41b569:	fcmovnb st,st(3)
  41b56b:	xor    eax,0x30e277fe
  41b570:	jmp    0x383554c2
  41b575:	pop    ebx
  41b576:	add    edi,DWORD PTR [edi+0x20]
  41b579:	mov    edi,0xa06fa28c
  41b57e:	hlt    
  41b57f:	gs push esp
  41b581:	in     al,0x8d
  41b583:	fidiv  WORD PTR [ecx+0x58]
  41b586:	push   esi
  41b587:	add    BYTE PTR [ebx-0x51],dh
  41b58a:	push   0x6d
  41b58c:	cmp    edx,ebp
  41b58e:	jmp    FWORD PTR [edi+ebp*2]
  41b591:	sub    DWORD PTR [ecx-0x6],edx
  41b594:	xor    BYTE PTR [esi+ebp*1],ch
  41b597:	call   0x8e7d:0x1741fae
  41b59e:	add    DWORD PTR ds:0x433a734a,ecx
  41b5a4:	xor    al,0x65
  41b5a6:	add    BYTE PTR [esi-0x35b66a17],bh
  41b5ac:	sahf   
  41b5ad:	aaa    
  41b5ae:	sub    edx,DWORD PTR [ecx]
  41b5b0:	(bad)  
  41b5b1:	push   edx
  41b5b2:	inc    edx
  41b5b3:	jo     0x41b57b
  41b5b5:	pusha  
  41b5b6:	inc    esi
  41b5b7:	cdq    
  41b5b8:	push   0xffffffea
  41b5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5bb:	fmul   DWORD PTR [ebp-0x3a]
  41b5be:	add    DWORD PTR ds:0xfdb870ae,esp
  41b5c4:	push   cs
  41b5c5:	mov    al,0x6c
  41b5c7:	mov    eax,0x6b19705d
  41b5cc:	mov    bh,0x61
  41b5ce:	fwait
  41b5cf:	xor    DWORD PTR [esi-0x65],esp
  41b5d2:	sub    bh,ch
  41b5d4:	inc    eax
  41b5d5:	push   eax
  41b5d6:	jns    0x41b60b
  41b5d8:	fdiv   st(7),st
  41b5da:	push   cs
  41b5db:	jae    0x41b562
  41b5dd:	jno    0x41b5ee
  41b5df:	dec    ecx
  41b5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e1:	push   cs
  41b5e2:	je     0x41b573
  41b5e4:	adc    edx,0x1
  41b5e7:	push   cs
  41b5e8:	(bad)
  41b5ec:	inc    esp
  41b5ed:	call   0x5ebc:0xf0cc27da
  41b5f4:	adc    eax,edi
  41b5f6:	dec    esi
  41b5f7:	out    0xb2,eax
  41b5f9:	sub    BYTE PTR [ecx-0x589b83f2],cl
  41b5ff:	jns    0x41b584
  41b601:	fnsave [edx-0x7d6865ea]
  41b607:	sbb    bh,ah
  41b609:	test   cl,ah
  41b60b:	mov    esi,0x6ef04599
  41b610:	xor    eax,0x6ba13c45
  41b615:	into   
  41b616:	sub    al,BYTE PTR [esi]
  41b618:	imul   ebp,edx,0xffffffb1
  41b61b:	xor    DWORD PTR [ebx-0x21],esi
  41b61e:	mov    ds:0xb0902f34,eax
  41b623:	dec    ebx
  41b624:	scas   al,BYTE PTR es:[edi]
  41b625:	xchg   ch,bl
  41b627:	push   ebx
  41b628:	jmp    0xf992:0xe6ad041c
  41b62f:	push   ss
  41b630:	mov    eax,ds:0x2ad57e82
  41b635:	pusha  
  41b636:	cmp    al,0x64
  41b638:	mov    eax,0x404d5a0a
  41b63d:	adc    al,dl
  41b63f:	addr16 rol bl,0x27
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a67f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a683
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a687
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a68b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a68f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a693
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42987b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a69b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a663
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429b9f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a66b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a66f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a673
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a677
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rcr    DWORD PTR [edx+0x4d],cl
  41bf77:	rcr    ch,0xbb
  41bf7a:	stc    
  41bf7b:	add    BYTE PTR [ebx-0x7c7ca327],0x4a
  41bf82:	iret   
  41bf83:	lea    esp,[edx+0x2a]
  41bf86:	add    al,0x35
  41bf88:	dec    ecx
  41bf89:	rcr    BYTE PTR [esi+esi*2],cl
  41bf8c:	ret    0x81e1
  41bf8f:	pop    esp
  41bf90:	dec    esi
  41bf91:	ud0    esi,ebx
  41bf94:	sbb    edx,edx
  41bf96:	adc    bl,cl
  41bf98:	pop    esi
  41bf99:	pop    edi
  41bf9a:	xchg   edi,eax
  41bf9b:	adc    eax,0x323a57bb
  41bfa0:	fldenv [edi+esi*4-0x18]
  41bfa4:	inc    ebx
  41bfa5:	xor    ah,ah
  41bfa7:	adc    bh,BYTE PTR [ecx+ecx*1]
  41bfaa:	inc    edx
  41bfab:	int    0x93
  41bfad:	jg     0x41bfb6
  41bfaf:	into   
  41bfb0:	and    al,0x21
  41bfb2:	inc    ebx
  41bfb3:	jnp    0x41bfe6
  41bfb5:	fadd   st,st(2)
  41bfb7:	mov    ch,0xa0
  41bfba:	mov    ebx,0x3c1ba859
  41bfbf:	das    
  41bfc0:	sti    
  41bfc1:	push   edx
  41bfc2:	xchg   ebx,eax
  41bfc3:	cmp    al,BYTE PTR [esi*1+0x443d2814]
  41bfca:	lea    edx,[esi+0x2bec5d0f]
  41bfd0:	dec    esp
  41bfd1:	pop    edx
  41bfd2:	xor    eax,0x3775f272
  41bfd7:	add    ch,bh
  41bfd9:	inc    edi
  41bfda:	inc    ebp
  41bfdb:	adc    DWORD PTR [ebp+0x14e5d65c],0xe0743224
  41bfe5:	test   al,0x50
  41bfe7:	dec    ebp
  41bfe8:	lds    esi,FWORD PTR [esi]
  41bfea:	pop    esi
  41bfeb:	out    dx,eax
  41bfec:	xchg   ebx,eax
  41bfed:	aaa    
  41bfee:	test   al,0x63
  41bff0:	clc    
  41bff1:	cmp    DWORD PTR ds:0x32153a84,ebp
  41bff7:	imul   BYTE PTR [esi-0x59]
  41bffa:	repnz (bad) 
  41bffc:	mov    dl,0x8d
  41bffe:	scas   eax,DWORD PTR es:[edi]
  41bfff:	push   ecx
  41c000:	sub    eax,DWORD PTR [ebp+0x58]
  41c003:	aaa    
  41c004:	scas   eax,DWORD PTR es:[edi]
  41c005:	call   0xd76c:0x932dc6ec
  41c00c:	jns    0x41bfb5
  41c00e:	call   0x7164e82f
  41c013:	mov    bl,0x4b
  41c015:	mov    ch,0x70
  41c017:	ror    BYTE PTR [ecx],0xb9
  41c01a:	out    0xab,al
  41c01c:	push   0x6f054aef
  41c021:	and    esi,DWORD PTR [esi+0x6af548ee]
  41c027:	mov    ch,0xe1
  41c029:	pop    ebp
  41c02a:	adc    DWORD PTR [eax-0x5c],ebx
  41c02d:	pop    es
  41c02e:	add    bl,BYTE PTR [ebx]
  41c030:	fdivr  DWORD PTR [ebp+0x5e]
  41c033:	dec    ecx
  41c034:	(bad)  
  41c035:	out    dx,eax
  41c036:	sub    eax,0x6db61197
  41c03b:	jge    0x41c080
  41c03d:	push   edi
  41c03e:	test   eax,0xc966124e
  41c043:	fidivr DWORD PTR [edx-0x2a1136c0]
  41c049:	cli    
  41c04a:	mov    ebx,0xf375d153
  41c04f:	pushf  
  41c050:	and    eax,0xfd20fab6
  41c055:	and    ch,bh
  41c057:	mov    edx,0xada0f6c6
  41c05c:	in     al,0x90
  41c05e:	jo     0x41bfe9
  41c060:	sbb    DWORD PTR [ebp+0x6e13d602],edi
  41c066:	sub    ah,BYTE PTR ds:0xb60be371
  41c06c:	adc    DWORD PTR [esi-0x4dc9e645],ecx
  41c072:	cld    
  41c073:	das    
  41c074:	je     0x41c041
  41c076:	cmp    DWORD PTR [edx-0x38],eax
  41c079:	push   ds
  41c07a:	lahf   
  41c07b:	add    ebx,ecx
  41c07d:	sub    BYTE PTR [ecx+eax*2-0x3a],dl
  41c081:	ss push es
  41c083:	aas    
  41c084:	hlt    
  41c085:	je     0x41c043
  41c087:	call   0x33fedb63
  41c08c:	cmc    
  41c08d:	shl    DWORD PTR [eax],0xc7
  41c090:	mov    bl,0x51
  41c092:	inc    eax
  41c093:	adc    esi,0x63c968af
  41c099:	mov    es,ebp
  41c09b:	inc    ebx
  41c09c:	jb     0x41c109
  41c09e:	mov    WORD PTR [ebx+ecx*1+0xc0d44db],ss
  41c0a5:	sub    eax,DWORD PTR ss:[ecx]
  41c0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a9:	rol    DWORD PTR [edx],0x2e
  41c0ac:	div    BYTE PTR [ebx]
  41c0ae:	(bad)  
  41c0b0:	and    eax,0x7052d9e4
  41c0b5:	mov    ch,0xc1
  41c0b7:	fwait
  41c0b8:	iret   
  41c0b9:	and    ebp,eax
  41c0bb:	dec    esi
  41c0bc:	sbb    DWORD PTR [eax+ebx*4-0x35],esp
  41c0c0:	lods   eax,DWORD PTR ds:[esi]
  41c0c1:	stc    
  41c0c2:	mov    edi,0xbb2fc5e0
  41c0c7:	shl    DWORD PTR [ebx],1
  41c0c9:	iret   
  41c0ca:	mov    edx,0x78a98d62
  41c0cf:	scas   al,BYTE PTR es:[edi]
  41c0d0:	push   es
  41c0d1:	xor    BYTE PTR [edx+0x66948161],dh
  41c0d7:	enter  0x7daa,0x37
  41c0db:	sar    BYTE PTR [esi],0xf8
  41c0de:	xor    eax,0x836dd080
  41c0e3:	jecxz  0x41c13f
  41c0e5:	xor    bl,dl
  41c0e7:	test   eax,0x847ab42b
  41c0ec:	cdq    
  41c0ed:	mov    edx,0x2b65e37e
  41c0f2:	sahf   
  41c0f3:	sbb    bl,BYTE PTR [ecx+0xd7b43be]
  41c0f9:	jmp    0x41c115
  41c0fb:	scas   eax,DWORD PTR es:[edi]
  41c0fc:	xor    cl,BYTE PTR [ecx+ebp*4+0x40a901f9]
  41c103:	(bad)  
  41c104:	mov    ds:0x830ee507,al
  41c109:	inc    ebx
  41c10a:	add    BYTE PTR [ecx+0x5e],cl
  41c10d:	dec    esi
  41c10e:	mov    esi,0xc3a31625
  41c113:	adc    BYTE PTR [edi-0x545069e],dh
  41c119:	ffree  st(1)
  41c11b:	fisttp QWORD PTR [eax-0xd36f46]
  41c121:	mov    ds:0xfcd3fe87,al
  41c126:	jp     0x41c156
  41c128:	jmp    0xd1dd42c5
  41c12d:	mov    ebx,0xf305df61
  41c132:	fcmovu st,st(7)
  41c134:	repz scas al,BYTE PTR es:[edi]
  41c136:	add    DWORD PTR gs:[edi-0x76],edi
  41c13a:	jno    0x41c17b
  41c13c:	(bad)  
  41c13d:	lea    edx,[eax+0x54]
  41c140:	ret    
  41c141:	cmp    ebp,esp
  41c143:	je     0x41c19b
  41c145:	mov    cl,0xb9
  41c147:	in     eax,dx
  41c148:	mov    dh,0x3c
  41c14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c14b:	ss das 
  41c14d:	in     al,dx
  41c14e:	(bad)  
  41c14f:	sbb    DWORD PTR [eax],ecx
  41c151:	addr16 nop
  41c153:	add    BYTE PTR [edx],bl
  41c155:	or     ah,BYTE PTR [esp+eax*2+0x12fb12d]
  41c15c:	repnz ror DWORD PTR [eax-0x15],cl
  41c160:	mov    eax,0xe7f00063
  41c165:	mov    eax,0x2788d6b4
  41c16a:	test   eax,0x8cbc3a90
  41c16f:	cmp    edi,ebp
  41c171:	mov    al,0xb5
  41c173:	push   ds
  41c174:	ss lahf 
  41c176:	aad    0x86
  41c178:	sbb    eax,0xd5df0c9c
  41c17d:	mov    edi,0x17f70a31
  41c182:	xchg   DWORD PTR [ebx],edi
  41c184:	inc    ebp
  41c185:	dec    ebx
  41c186:	dec    edx
  41c187:	or     al,0xbb
  41c189:	lds    ecx,FWORD PTR [ebx-0x56c734ae]
  41c18f:	jns    0x41c1d9
  41c191:	and    BYTE PTR [edi+0x494ff221],bl
  41c197:	pop    ebp
  41c198:	or     al,0xd9
  41c19a:	dec    ebp
  41c19b:	loop   0x41c1e1
  41c19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c19e:	sbb    eax,edx
  41c1a0:	pop    edi
  41c1a1:	push   esi
  41c1a2:	popf   
  41c1a3:	pusha  
  41c1a4:	mov    eax,ds:0xfebe8f45
  41c1a9:	popa   
  41c1aa:	push   ss
  41c1ab:	cmp    al,0xf2
  41c1ad:	fisub  WORD PTR [edi+0x30]
  41c1b0:	lahf   
  41c1b1:	call   0x53fea7a6
  41c1b6:	pop    ds
  41c1b7:	mov    al,ds:0x8fcc73b3
  41c1bc:	loope  0x41c146
  41c1be:	call   0x3c99:0x233d5036
  41c1c5:	jb     0x41c158
  41c1c7:	cmc    
  41c1c8:	push   ebx
  41c1c9:	(bad)  
  41c1cb:	out    dx,eax
  41c1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1cd:	and    eax,0x564ef5d1
  41c1d2:	pop    es
  41c1d3:	cmp    cl,BYTE PTR [ecx]
  41c1d5:	call   0x1f89:0xa8fb7dee
  41c1dc:	and    DWORD PTR [esi-0x24526e98],ebx
  41c1e2:	or     DWORD PTR [edx+0x4da44be9],edi
  41c1e8:	lock sar ebp,0x3f
  41c1ec:	jg     0x41c22f
  41c1ee:	mov    bh,0x39
  41c1f0:	ins    DWORD PTR es:[edi],dx
  41c1f1:	ret    0x7a7a
  41c1f4:	sbb    al,BYTE PTR [eax+0x7f]
  41c1f7:	les    ebp,FWORD PTR [edx]
  41c1f9:	sub    al,0xfe
  41c1fb:	inc    esp
  41c1fc:	dec    eax
  41c1fd:	jo     0x41c216
  41c1ff:	sub    eax,0xc818822e
  41c204:	sub    al,0x8b
  41c206:	cdq    
  41c207:	mov    ecx,0xb8fdb568
  41c20c:	aas    
  41c20d:	ror    BYTE PTR [ecx],cl
  41c20f:	retf   
  41c210:	dec    ebp
  41c211:	mov    dl,0xac
  41c213:	dec    ebx
  41c214:	call   0xb650:0xbcc71ed8
  41c21b:	pop    esi
  41c21c:	call   0x29c:0x8ce04d8e
  41c223:	ja     0x41c264
  41c225:	aas    
  41c226:	cmc    
  41c227:	push   esi
  41c228:	dec    edx
  41c229:	(bad)  
  41c22a:	jb     0x41c296
  41c22c:	ins    DWORD PTR es:[edi],dx
  41c22d:	adc    BYTE PTR [edx],bl
  41c22f:	push   ebx
  41c230:	mov    DWORD PTR [esi+0x4494fed3],ebx
  41c236:	pop    ecx
  41c237:	fs inc ebp
  41c239:	inc    eax
  41c23a:	adc    esp,DWORD PTR [ecx-0x7c9abdb0]
  41c240:	popa   
  41c241:	(bad)  
  41c242:	xchg   esi,eax
  41c243:	pop    ebp
  41c244:	imul   edi,DWORD PTR [edi-0x172a7a92],0xffffffe2
  41c24b:	test   eax,0xccaf3179
  41c250:	in     al,dx
  41c251:	addr16 iret 
  41c253:	jnp    0x41c1fb
  41c255:	dec    esi
  41c256:	inc    esi
  41c257:	cmp    al,0x38
  41c259:	jp     0x41c204
  41c25b:	sbb    dl,BYTE PTR [ecx+ecx*8+0x2519befc]
  41c262:	popa   
  41c263:	je     0x41c2c4
  41c265:	test   al,0x3d
  41c267:	pop    ebx
  41c268:	fisttp DWORD PTR [edi+0x62]
  41c26b:	mov    al,0x29
  41c26d:	gs ret 
  41c26f:	daa    
  41c270:	inc    DWORD PTR [ebp+ebp*1-0x2663b0e]
  41c277:	out    dx,eax
  41c278:	fcmovb st,st(2)
  41c27a:	mov    esp,0x7ad60e7b
  41c27f:	and    dh,al
  41c281:	sub    BYTE PTR [eax+0x17b9b9d5],cl
  41c287:	sub    DWORD PTR [eax-0x4252de56],ecx
  41c28d:	cs arpl sp,cx
  41c290:	dec    eax
  41c291:	push   ecx
  41c292:	sahf   
  41c293:	xor    ebp,DWORD PTR [edi]
  41c295:	pushf  
  41c296:	scas   al,BYTE PTR es:[edi]
  41c297:	in     eax,dx
  41c298:	mov    ds:0x11c17465,eax
  41c29d:	stc    
  41c29e:	xchg   esp,eax
  41c29f:	lods   eax,DWORD PTR ds:[esi]
  41c2a0:	xchg   BYTE PTR cs:[edx-0x40],bl
  41c2a4:	push   0xffffffca
  41c2a6:	out    0xde,eax
  41c2a8:	push   0x98bee1e5
  41c2ad:	idiv   bh
  41c2af:	mov    eax,0x6afa203d
  41c2b4:	gs pop ss
  41c2b6:	xor    ch,BYTE PTR ds:0x5aa63c03
  41c2bc:	nop
  41c2bd:	or     ecx,DWORD PTR [ebp-0x9]
  41c2c0:	loopne 0x41c2c4
  41c2c2:	iret   
  41c2c3:	ins    BYTE PTR es:[edi],dx
  41c2c4:	popa   
  41c2c5:	retf   0x6534
  41c2c8:	sbb    DWORD PTR [ecx-0x5f],0xfee51d2f
  41c2cf:	mul    DWORD PTR ds:0x405950ae
  41c2d5:	mov    eax,esp
  41c2d7:	out    dx,al
  41c2d8:	(bad)  
  41c2d9:	fnstenv [ecx-0x3c8d5ad7]
  41c2df:	arpl   si,bx
  41c2e1:	call   0x3e8a:0xa10f04c8
  41c2e8:	jg     0x41c338
  41c2ea:	mov    BYTE PTR [ebp+0x5b025f51],0xe9
  41c2f1:	les    ebx,FWORD PTR [eax]
  41c2f3:	or     al,0x6b
  41c2f5:	adc    al,0x8b
  41c2f7:	je     0x41c321
  41c2f9:	push   ebx
  41c2fa:	jne    0x41c2e9
  41c2fc:	imul   ebp,DWORD PTR [edi],0xc94b479e
  41c302:	pop    ebx
  41c303:	std    
  41c304:	push   esp
  41c305:	jl     0x41c353
  41c307:	fisttp WORD PTR [edx-0x61d69129]
  41c30d:	xor    cl,BYTE PTR [ebx]
  41c30f:	add    BYTE PTR [ecx-0x968c4ac],dl
  41c315:	sar    DWORD PTR [esi],0x72
  41c318:	hlt    
  41c319:	loopne 0x41c354
  41c31b:	add    esi,DWORD PTR [ebp-0x54]
  41c31e:	xchg   esi,eax
  41c31f:	mov    esi,0x63acd95c
  41c324:	fmulp  st(3),st
  41c326:	jb     0x41c3a0
  41c328:	adc    DWORD PTR [edx-0x170adc61],ebp
  41c32e:	gs mov ecx,0xa56a2997
  41c334:	test   al,0xbe
  41c336:	or     al,0x41
  41c338:	pop    ebx
  41c339:	fist   WORD PTR [esi+ecx*1+0x4395a77b]
  41c340:	dec    ecx
  41c341:	pop    eax
  41c342:	push   ecx
  41c343:	test   WORD PTR [edi],0x5078
  41c348:	lock sub bh,BYTE PTR [edi+esi*1]
  41c34c:	repz or DWORD PTR [ebx],edx
  41c34f:	jae    0x41c36e
  41c351:	ss mov bl,0x3d
  41c354:	pop    ecx
  41c355:	sub    DWORD PTR [ecx-0x1e51537b],esi
  41c35b:	scas   al,BYTE PTR es:[edi]
  41c35c:	arpl   WORD PTR [ecx-0x613944cb],cx
  41c362:	push   eax
  41c363:	test   al,0xd9
  41c365:	fidivr WORD PTR [ebx+esi*1]
  41c368:	lahf   
  41c369:	jbe    0x41c3d9
  41c36b:	sahf   
  41c36c:	sub    bh,bh
  41c36e:	dec    ecx
  41c36f:	in     al,0xe1
  41c371:	cmp    BYTE PTR [eax-0x7e],0x11
  41c375:	inc    ecx
  41c376:	add    eax,0x9df45fb4
  41c37b:	mov    esi,0x22a78b3a
  41c380:	mov    ds:0x5a8db49b,eax
  41c385:	out    0xad,al
  41c387:	inc    esi
  41c388:	xor    ah,BYTE PTR [ebx-0x5c4d77e1]
  41c38e:	shl    BYTE PTR [esi-0x7e],0xaa
  41c392:	mul    DWORD PTR ds:0x1be14308
  41c398:	cmp    BYTE PTR [ebx+0x6c],ch
  41c39b:	cwde   
  41c39c:	jg     0x41c351
  41c39e:	stos   DWORD PTR es:[edi],eax
  41c39f:	in     al,dx
  41c3a0:	xor    BYTE PTR [edx+0x13],0x8a
  41c3a4:	pusha  
  41c3a5:	mov    ds:0x91bf0fe5,eax
  41c3aa:	mov    ch,0xdb
  41c3ac:	fstp   TBYTE PTR [esi+0x1c5c6f9f]
  41c3b2:	xor    DWORD PTR [esi+0x71],eax
  41c3b5:	add    ebx,ecx
  41c3b7:	(bad)  
  41c3b8:	mov    ds:0xf3cb5002,eax
  41c3bd:	iret   
  41c3be:	dec    edi
  41c3bf:	out    0x23,eax
  41c3c1:	inc    ebp
  41c3c2:	(bad)  
  41c3c3:	shr    BYTE PTR [ecx-0x29391f83],cl
  41c3c9:	mov    esi,0xfc16831b
  41c3ce:	xchg   esp,eax
  41c3cf:	push   0xcfefa6c1
  41c3d4:	addr16 xchg ebx,eax
  41c3d6:	int3   
  41c3d7:	adc    DWORD PTR [esi-0x8],esi
  41c3da:	das    
  41c3db:	iret   
  41c3dc:	cmp    DWORD PTR [edx],0xe02a7f36
  41c3e2:	out    0xbc,eax
  41c3e4:	and    ah,BYTE PTR [eax]
  41c3e6:	(bad)  
  41c3e7:	sbb    BYTE PTR [esi+eiz*8],bh
  41c3ea:	je     0x41c426
  41c3ec:	mov    ds:0x683287e0,eax
  41c3f1:	repz cwde 
  41c3f3:	mov    ds:0xba4f07a9,al
  41c3f8:	sub    esp,ecx
  41c3fa:	aam    0x6f
  41c3fc:	mov    cl,0x7e
  41c3fe:	pop    ebp
  41c3ff:	mov    esp,DWORD PTR [esi+0x7f]
  41c402:	jns    0x41c384
  41c404:	mov    edi,0x7b3354dd
  41c409:	jecxz  0x41c3cd
  41c40b:	push   edi
  41c40c:	fs test eax,0x15589b5a
  41c412:	mov    ch,cl
  41c414:	xlat   BYTE PTR ds:[ebx]
  41c415:	xchg   BYTE PTR [ecx+0x59],ah
  41c418:	in     eax,dx
  41c419:	dec    esi
  41c41a:	jecxz  0x41c39c
  41c41c:	idiv   BYTE PTR [ebp-0x69af6876]
  41c422:	arpl   ax,dx
  41c424:	pop    esp
  41c425:	add    bh,BYTE PTR [eax+eax*1-0x212a7cb7]
  41c42c:	lea    ecx,[esi-0x1c]
  41c42f:	xchg   ebx,eax
  41c430:	jp     0x41c3b3
  41c432:	pop    esp
  41c433:	scas   eax,DWORD PTR es:[edi]
  41c434:	adc    dl,bl
  41c436:	fisubr DWORD PTR [eax]
  41c438:	adc    esi,esi
  41c43a:	js     0x41c3c3
  41c43c:	jnp    0x41c4b4
  41c43e:	ds dec edi
  41c440:	mov    eax,0xab6ed891
  41c445:	xchg   esi,eax
  41c446:	fnop   
  41c448:	cmp    ah,ah
  41c44a:	rdpmc  
  41c44c:	pusha  
  41c44d:	(bad)  
  41c44e:	dec    esp
  41c44f:	mov    cl,0x9e
  41c451:	mov    ah,0x41
  41c453:	push   DWORD PTR [eax]
  41c455:	inc    esi
  41c456:	push   eax
  41c457:	cmp    eax,0xb85dba51
  41c45c:	je     0x41c422
  41c45e:	sbb    al,0xc4
  41c460:	xor    al,0xc
  41c463:	(bad)  [ebp-0x75]
  41c466:	xchg   edi,eax
  41c467:	rcr    eax,cl
  41c469:	push   ecx
  41c46a:	out    0xc8,al
  41c46c:	sub    edi,DWORD PTR [ecx]
  41c46e:	fsubr  DWORD PTR [ebp-0x6a]
  41c471:	pop    ebp
  41c472:	(bad)  
  41c473:	cli    
  41c474:	sub    ebp,ecx
  41c476:	xchg   ecx,eax
  41c477:	jmp    0x331ae9a4
  41c47c:	inc    ebp
  41c47d:	push   esp
  41c47e:	fisttp DWORD PTR [ebx]
  41c480:	ds push ebp
  41c482:	push   0x976957ce
  41c487:	add    eax,0x4974d791
  41c48c:	add    DWORD PTR [ecx-0x291e12ab],0xc33a98c8
  41c496:	arpl   WORD PTR [ebx+edx*1-0x5],di
  41c49a:	jae    0x41c446
  41c49c:	cld    
  41c49d:	icebp  
  41c49e:	cmp    BYTE PTR [ecx-0x614e2498],al
  41c4a4:	mov    ch,BYTE PTR [edx+0x1f]
  41c4a7:	jae    0x41c4bc
  41c4a9:	jne    0x41c519
  41c4ab:	or     eax,DWORD PTR [edi]
  41c4ad:	add    eax,0xd17254d8
  41c4b2:	cmp    DWORD PTR [edi+0x5db52ce8],edx
  41c4b8:	ret    
  41c4b9:	xchg   DWORD PTR [esp+esi*8],ecx
  41c4bc:	push   es
  41c4bd:	sub    edx,DWORD PTR [ebx+edx*4+0x6e]
  41c4c1:	je     0x41c4a1
  41c4c3:	daa    
  41c4c4:	stc    
  41c4c5:	test   eax,0xc5d58465
  41c4ca:	inc    ecx
  41c4cb:	sahf   
  41c4cc:	jnp    0x41c4af
  41c4ce:	iret   
  41c4cf:	cli    
  41c4d0:	ins    BYTE PTR es:[edi],dx
  41c4d1:	outs   dx,DWORD PTR ds:[esi]
  41c4d2:	mov    ds:0x205cd1b3,eax
  41c4d7:	push   DWORD PTR [ecx-0x6f]
  41c4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4db:	lds    eax,FWORD PTR [esi+0x5036e00]
  41c4e1:	int    0xed
  41c4e3:	sbb    al,0x9e
  41c4e5:	mov    ds:0xdee3a1f4,eax
  41c4ea:	sbb    BYTE PTR [eax+0x74],0xf4
  41c4ee:	test   edx,ecx
  41c4f0:	ret    
  41c4f1:	shl    DWORD PTR [eax+0x53356e56],1
  41c4f7:	push   ebp
  41c4f8:	cdq    
  41c4f9:	retf   0x20fe
  41c4fc:	xchg   ecx,eax
  41c4fd:	add    al,0x73
  41c4ff:	mov    eax,ds:0x163188aa
  41c504:	int    0xff
  41c506:	jb     0x41c540
  41c508:	icebp  
  41c509:	dec    ebp
  41c50a:	or     ah,BYTE PTR [ebx-0x51fba208]
  41c510:	cmp    DWORD PTR [edx+0x1a610a48],ebp
  41c516:	aad    0xe7
  41c518:	xor    BYTE PTR [esi-0x48],ah
  41c51b:	jmp    0x41c51b
  41c51d:	add    al,0x8f
  41c51f:	xchg   esp,eax
  41c520:	xchg   BYTE PTR [edx+esi*8],dh
  41c523:	lock add BYTE PTR [esi-0x2c],dl
  41c527:	jecxz  0x41c5a3
  41c529:	icebp  
  41c52a:	leave  
  41c52b:	inc    edx
  41c52c:	inc    ecx
  41c52d:	out    dx,eax
  41c52e:	cmp    BYTE PTR [edx+0x2d],cl
  41c531:	xor    bl,cl
  41c533:	pop    ebp
  41c534:	sbb    DWORD PTR [ebx-0x4d6dda44],edx
  41c53a:	ret    
  41c53b:	in     eax,dx
  41c53c:	and    al,0x10
  41c53e:	sub    al,0x1e
  41c540:	out    0x3e,ax
  41c543:	sub    bl,BYTE PTR [ebx]
  41c545:	pop    edi
  41c546:	or     eax,0xddbc0dfa
  41c54b:	mov    ds:0x6e89b4f6,al
  41c550:	add    ch,BYTE PTR [esi+0x4c]
  41c553:	rcl    BYTE PTR [esi-0x37],0xc1
  41c557:	lods   eax,DWORD PTR ds:[esi]
  41c558:	pop    ds
  41c559:	hlt    
  41c55a:	cmp    BYTE PTR [ebp+0x465df5e9],bh
  41c560:	sub    eax,ebx
  41c562:	inc    ebp
  41c563:	cmc    
  41c564:	mov    WORD PTR [edi-0x12],?
  41c567:	xor    bh,BYTE PTR [esi+esi*4+0x28]
  41c56b:	sbb    eax,0x81ba64c3
  41c570:	xchg   esp,eax
  41c571:	dec    ecx
  41c572:	push   0x8b2cc740
  41c577:	jb     0x41c5d4
  41c579:	push   ebp
  41c57a:	xchg   BYTE PTR [ebx-0x3b28cfe],ah
  41c580:	shl    ah,1
  41c582:	rcl    DWORD PTR [ebp+eax*1-0x7d],0xed
  41c587:	mov    esp,0xfcce5a69
  41c58c:	in     eax,0x58
  41c58e:	fnstcw WORD PTR [ebp-0x56de6bef]
  41c594:	(bad)  
  41c596:	mov    ebp,0x77f0763a
  41c59b:	and    dl,BYTE PTR [edi+eiz*1-0x72ccb273]
  41c5a2:	sar    dh,1
  41c5a4:	adc    ebp,DWORD PTR [edi]
  41c5a6:	jb     0x41c5f2
  41c5a8:	or     al,0x47
  41c5aa:	mov    al,0x33
  41c5ac:	sar    DWORD PTR [edx+0x66],cl
  41c5af:	fsubr  QWORD PTR [ebp+0xb7bc0f7]
  41c5b5:	inc    ebx
  41c5b6:	ja     0x41c5bf
  41c5b8:	ds aam 0xbe
  41c5bb:	js     0x41c604
  41c5bd:	push   cs
  41c5be:	pop    ebp
  41c5bf:	cmp    al,0x5a
  41c5c1:	pop    edi
  41c5c2:	cld    
  41c5c3:	icebp  
  41c5c4:	or     DWORD PTR [ebx],edi
  41c5c6:	push   ebx
  41c5c7:	and    esi,DWORD PTR [ebx-0x14cebb82]
  41c5cd:	pusha  
  41c5ce:	lds    ecx,FWORD PTR [ecx]
  41c5d0:	push   ebx
  41c5d1:	mov    dh,0xb2
  41c5d3:	mov    ecx,0x98120538
  41c5d8:	inc    esp
  41c5d9:	mov    dh,BYTE PTR [ebx]
  41c5db:	clc    
  41c5dc:	pop    ecx
  41c5dd:	jp     0x41c5b4
  41c5df:	popa   
  41c5e0:	mov    bl,0x6c
  41c5e2:	(bad)
  41c5e6:	mov    al,ds:0x91a51e49
  41c5eb:	popf   
  41c5ec:	aaa    
  41c5ed:	jae    0x41c5a5
  41c5ef:	imul   eax,DWORD PTR [ecx-0x7602a075],0x29
  41c5f6:	mov    dl,0xc8
  41c5f8:	sbb    dl,BYTE PTR [ebp+0x7e661b32]
  41c5fe:	xor    eax,0x288a0205
  41c603:	push   ebp
  41c604:	add    BYTE PTR [edx+ebp*1],0x3f
  41c608:	or     eax,0xf9f6bd7
  41c60d:	sub    eax,0x82a691a
  41c612:	icebp  
  41c613:	cmp    dl,BYTE PTR [ebp-0x69fb160a]
  41c619:	out    dx,al
  41c61a:	xchg   edx,eax
  41c61b:	jne    0x41c5c9
  41c61d:	imul   ecx,DWORD PTR [ebp-0x2b],0xffffff89
  41c621:	fwait
  41c622:	je     0x41c654
  41c624:	pop    ss
  41c625:	icebp  
  41c626:	push   ds
  41c627:	inc    esi
  41c628:	clc    
  41c629:	jmp    0x5716:0xe7abf2d6
  41c630:	jp     0x41c67f
  41c632:	add    dh,cl
  41c634:	adc    bl,bl
  41c636:	es into 
  41c638:	cmp    eax,0x5fec8623
  41c63d:	mov    eax,ds:0xcffc4e98
  41c642:	pop    ecx
  41c643:	xor    DWORD PTR [esi],ecx
  41c645:	loop   0x41c689
  41c647:	mov    ecx,0x1b2bb663
  41c64c:	dec    ebp
  41c64d:	jbe    0x41c622
  41c64f:	cli    
  41c650:	(bad)  
  41c651:	stos   DWORD PTR es:[edi],eax
  41c652:	js     0x41c5de
  41c654:	push   0x62
  41c656:	retf   
  41c657:	cmp    ch,al
  41c659:	sbb    dh,dl
  41c65b:	cwde   
  41c65c:	sub    ah,BYTE PTR [eax+0x62]
  41c65f:	fisubr WORD PTR [edx+0x1d]
  41c662:	xchg   DWORD PTR [ebp+0x7a],esp
  41c665:	pop    edx
  41c666:	cmp    ecx,ebx
  41c668:	sub    eax,0x6df714b4
  41c66d:	test   BYTE PTR [eax],ch
  41c66f:	hlt    
  41c670:	dec    ecx
  41c671:	mov    ds:0x126519ca,al
  41c676:	call   0x1832:0xb13b8bcd
  41c67d:	jmp    0x41c6eb
  41c67f:	adc    al,0x2c
  41c681:	scas   al,BYTE PTR es:[edi]
  41c682:	mov    bl,0x7e
  41c684:	mov    dh,0x37
  41c686:	dec    esp
  41c687:	ds mov ebp,0xa628f12e
  41c68d:	push   ecx
  41c68e:	xchg   esp,eax
  41c68f:	push   esp
  41c690:	sbb    al,0x6
  41c692:	call   FWORD PTR ds:0x29faff88
  41c698:	int    0xbd
  41c69a:	(bad)
  41c69d:	xor    eax,0x26667429
  41c6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a3:	jge    0x41c661
  41c6a5:	adc    al,0x39
  41c6a7:	sub    bh,BYTE PTR [ebp-0x3bf1c11b]
  41c6ad:	dec    eax
  41c6ae:	jne    0x41c6ef
  41c6b0:	inc    ecx
  41c6b1:	xor    ecx,edi
  41c6b3:	in     al,dx
  41c6b4:	sahf   
  41c6b5:	push   0xffffffff
  41c6b7:	pop    ecx
  41c6b8:	outs   dx,BYTE PTR ds:[esi]
  41c6b9:	lahf   
  41c6ba:	add    eax,0x285a2e42
  41c6bf:	xor    al,0xb9
  41c6c1:	jg     0x41c71b
  41c6c3:	xchg   esp,eax
  41c6c4:	sahf   
  41c6c5:	mov    ch,0x76
  41c6c7:	mov    ecx,0x3ba1ab43
  41c6cc:	mov    dl,0xe3
  41c6ce:	sub    eax,0x742f34aa
  41c6d3:	jp     0x41c71f
  41c6d5:	ret    0xbc7e
  41c6d8:	icebp  
  41c6d9:	fidiv  WORD PTR [ecx]
  41c6db:	stos   DWORD PTR es:[edi],eax
  41c6dc:	mov    ecx,0x9ad4bc5d
  41c6e1:	retf   
  41c6e2:	push   cs
  41c6e3:	inc    esi
  41c6e5:	daa    
  41c6e6:	stc    
  41c6e7:	add    eax,0xc85a1f11
  41c6ec:	stc    
  41c6ed:	loop   0x41c743
  41c6ef:	and    DWORD PTR [eax],eax
  41c6f1:	test   DWORD PTR [ebx-0x8558c56],edi
  41c6f7:	jno    0x41c6e9
  41c6f9:	mov    ds:0xed143c9e,eax
  41c6fe:	cmp    DWORD PTR [eax],esp
  41c700:	sbb    al,0xff
  41c702:	ja     0x41c691
  41c704:	push   eax
  41c705:	mov    edi,0x268f0ed1
  41c70a:	adc    eax,0x60a64245
  41c70f:	adc    DWORD PTR [ecx+0x6f],ebx
  41c712:	test   DWORD PTR [eax+0x62],edi
  41c715:	call   0x8d041d0e
  41c71a:	lods   eax,DWORD PTR ds:[esi]
  41c71b:	cli    
  41c71c:	repnz (bad) 
  41c71e:	clc    
  41c71f:	ror    BYTE PTR [ecx],0x68
  41c722:	adc    eax,0x395efe07
  41c727:	adc    al,0x21
  41c729:	dec    ecx
  41c72a:	xlat   BYTE PTR ds:[ebx]
  41c72b:	mov    ch,0x1e
  41c72d:	aad    0x3
  41c72f:	cmp    esp,DWORD PTR [ecx*1-0x46a69fff]
  41c736:	pop    ss
  41c737:	mov    dh,0xe
  41c739:	push   cs
  41c73a:	or     al,0x72
  41c73c:	iret   
  41c73d:	xchg   esi,eax
  41c73e:	mov    dl,0x3e
  41c740:	inc    edi
  41c741:	js     0x41c6c5
  41c743:	std    
  41c744:	xchg   edi,eax
  41c745:	and    al,0xde
  41c747:	imul   esp,DWORD PTR [ecx],0x69c5bfc2
  41c74d:	fcomip st,st(3)
  41c74f:	and    BYTE PTR ds:0xd6831a43,cl
  41c755:	xor    ch,ch
  41c757:	sahf   
  41c758:	int3   
  41c759:	or     al,0xd7
  41c75b:	jne    0x41c76f
  41c75d:	daa    
  41c75e:	shl    BYTE PTR [ebx+0x4b],0x4b
  41c762:	xchg   DWORD PTR [eax-0x4c9841e0],ebp
  41c768:	pop    ebx
  41c769:	in     al,0x35
  41c76b:	arpl   WORD PTR [ebp-0x6efe72b5],dx
  41c771:	adc    eax,DWORD PTR [esi]
  41c773:	pop    ds
  41c774:	mov    esi,0xd8c8aa88
  41c779:	aad    0x34
  41c77b:	dec    esp
  41c77c:	cmp    ebx,DWORD PTR [ecx+eiz*1]
  41c77f:	imul   eax,DWORD PTR [ebx-0x574e5d8a],0xffffff82
  41c786:	inc    eax
  41c787:	jle    0x41c721
  41c789:	push   ebx
  41c78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c78b:	mov    al,0xb3
  41c78d:	ss ffreep st(3)
  41c790:	(bad)  
  41c791:	adc    BYTE PTR [ebp+0x72],dl
  41c794:	not    DWORD PTR [eax-0x407b4f98]
  41c79a:	xor    DWORD PTR [eax+ebp*8-0x344a514e],0xffffffd7
  41c7a2:	sub    eax,0xff457a9c
  41c7a7:	(bad)  
  41c7a9:	fst    DWORD PTR [edx-0x13c6c281]
  41c7af:	mov    ds:0x13a3b1b0,eax
  41c7b4:	push   ss
  41c7b5:	adc    al,BYTE PTR [esi]
  41c7b7:	add    DWORD PTR [ecx+0x8],edx
  41c7ba:	pop    ds
  41c7bb:	pusha  
  41c7bc:	retf   0xb872
  41c7bf:	pop    esi
  41c7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c1:	fistp  DWORD PTR [ecx]
  41c7c3:	sub    edi,DWORD PTR [esi+0x44]
  41c7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7c7:	mul    DWORD PTR [eax+0x16f313b8]
  41c7cd:	xchg   ebp,eax
  41c7ce:	push   0xdd586bcb
  41c7d3:	les    ebx,FWORD PTR [esi+0x39771bcf]
  41c7d9:	and    esi,DWORD PTR [ecx+ebp*8-0x4637f76a]
  41c7e0:	addr16 mov ch,0x5f
  41c7e3:	nop
  41c7e4:	inc    ebp
  41c7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e6:	pop    esi
  41c7e7:	jg     0x41c81e
  41c7e9:	cmp    ebx,esp
  41c7eb:	xlat   BYTE PTR ds:[ebx]
  41c7ec:	sub    al,0xa4
  41c7ee:	in     eax,dx
  41c7ef:	mov    al,0xd6
  41c7f1:	push   edx
  41c7f2:	out    0xb4,al
  41c7f4:	icebp  
  41c7f5:	mov    al,ds:0xc059d9de
  41c7fa:	or     DWORD PTR [edi+0x3eb37186],esp
  41c800:	xor    edi,DWORD PTR [edi+0x24b209f8]
  41c806:	or     al,0xb8
  41c808:	push   ecx
  41c809:	sbb    edi,ebx
  41c80b:	fs inc edi
  41c80d:	or     ah,ah
  41c80f:	mov    esp,0xc175d369
  41c814:	inc    esp
  41c815:	loop   0x41c822
  41c817:	mov    al,ds:0xdad7213d
  41c81c:	pop    esp
  41c81d:	sbb    al,0x33
  41c81f:	or     esi,DWORD PTR [ecx+0x1ea94527]
  41c825:	cli    
  41c826:	outs   dx,DWORD PTR ds:[esi]
  41c827:	stos   DWORD PTR es:[edi],eax
  41c828:	and    BYTE PTR [edx-0x2e3d48e5],cl
  41c82e:	stos   DWORD PTR es:[edi],eax
  41c82f:	repz mov ecx,0x228c5ccc
  41c835:	jle    0x41c83a
  41c837:	icebp  
  41c838:	dec    ebp
  41c839:	pop    eax
  41c83a:	add    al,0x28
  41c83c:	adc    DWORD PTR [edx],ebp
  41c83e:	ja     0x41c848
  41c840:	jns    0x41c7d0
  41c842:	(bad)  
  41c843:	in     eax,0x2a
  41c845:	mov    cl,0x1f
  41c847:	jno    0x41c870
  41c849:	mov    edi,0x83abc318
  41c84e:	xchg   ebp,edi
  41c850:	sub    BYTE PTR ds:0xc5f7dd02,ah
  41c856:	jb     0x41c8b7
  41c858:	xor    eax,0x998947bb
  41c85d:	xor    eax,0x4c59276c
  41c862:	fldenv [ecx*1+0x518469e5]
  41c869:	or     eax,0x68b3a9d9
  41c86e:	fwait
  41c86f:	xchg   edx,eax
  41c870:	sub    DWORD PTR [edi+0x22],eax
  41c873:	retf   0x50f9
  41c876:	pop    ds
  41c877:	lods   al,BYTE PTR ds:[esi]
  41c878:	int3   
  41c879:	lods   eax,DWORD PTR ds:[esi]
  41c87a:	(bad)
  41c87d:	int    0x21
  41c87f:	xor    ebx,DWORD PTR [edi+0x26]
  41c882:	lods   eax,DWORD PTR ds:[esi]
  41c883:	mov    DWORD PTR [ebx],edi
  41c885:	addr16 jmp 0x6b45474b
  41c88b:	loopne 0x41c840
  41c88d:	add    ah,BYTE PTR [esi]
  41c88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c890:	mov    ds:0xd9970443,al
  41c895:	inc    esi
  41c896:	mov    dl,0x20
  41c898:	mov    esi,0x84b44578
  41c89d:	rcl    DWORD PTR [ecx+0x4b9b2340],cl
  41c8a3:	dec    ebp
  41c8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a5:	mov    ah,0x26
  41c8a7:	inc    DWORD PTR [ebx-0x2b]
  41c8aa:	add    al,0xf
  41c8ac:	fisub  DWORD PTR [ebx+0x33]
  41c8af:	ret    0x9b05
  41c8b2:	fistp  DWORD PTR [ecx-0x7ea32ba9]
  41c8b8:	add    al,0xc2
  41c8ba:	aad    0x85
  41c8bc:	ret    0x8401
  41c8bf:	and    edi,ebx
  41c8c1:	jle    0x41c87b
  41c8c3:	daa    
  41c8c4:	xchg   edx,eax
  41c8c5:	loopne 0x41c867
  41c8c7:	mov    dl,0x1
  41c8c9:	hlt    
  41c8ca:	dec    ebp
  41c8cb:	fimul  WORD PTR [edi+0x2208ec57]
  41c8d1:	mov    dl,0xc1
  41c8d3:	mov    gs,WORD PTR [edx+0x30]
  41c8d6:	mov    ah,0x1d
  41c8d8:	out    0x72,eax
  41c8da:	imul   ebx,DWORD PTR [esi],0xc31a9c8f
  41c8e0:	call   0x60c7ede9
  41c8e5:	add    dl,BYTE PTR [edx]
  41c8e7:	pop    ebp
  41c8e8:	adc    ah,BYTE PTR [eax-0x63c9a575]
  41c8ee:	bound  ebx,QWORD PTR [ebp+0x36]
  41c8f1:	push   ebx
  41c8f2:	test   al,0xdb
  41c8f4:	mov    esi,DWORD PTR [ecx+0x7c]
  41c8f7:	sub    BYTE PTR [ebp-0x60],ch
  41c8fa:	lock jge 0x41c8c3
  41c8fd:	cdq    
  41c8fe:	outs   dx,BYTE PTR ds:[esi]
  41c8ff:	xchg   edi,eax
  41c900:	push   cs
  41c901:	add    dl,BYTE PTR [ebx+ebp*1+0x469d6a3d]
  41c908:	fwait
  41c909:	sbb    dl,bl
  41c90b:	or     al,0xd7
  41c90d:	sbb    edx,ebx
  41c90f:	call   DWORD PTR [ebp+eax*4-0x7b]
  41c913:	mov    al,0x7b
  41c915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c916:	dec    esp
  41c917:	sbb    bh,cl
  41c919:	xchg   edx,eax
  41c91a:	lds    esp,FWORD PTR [edi-0x3e]
  41c91d:	jp     0x41c952
  41c91f:	and    al,0xdb
  41c921:	cmp    BYTE PTR [ebx],dl
  41c923:	addr16 cmp eax,0xb4869007
  41c929:	adc    al,0xea
  41c92b:	leave  
  41c92c:	dec    edx
  41c92d:	out    dx,al
  41c92e:	push   ebx
  41c92f:	push   0xfffffff2
  41c931:	jbe    0x41c919
  41c933:	fmul   DWORD PTR [ebx]
  41c935:	xchg   ebx,eax
  41c936:	pusha  
  41c937:	out    dx,al
  41c938:	cmp    bh,BYTE PTR [edx+0x1d]
  41c93b:	sub    ch,cl
  41c93d:	arpl   cx,sp
  41c93f:	out    0x7c,al
  41c941:	fidivr WORD PTR [edi+0x51a09eea]
  41c947:	mov    cl,0x4b
  41c949:	scas   al,BYTE PTR es:[edi]
  41c94a:	mov    ecx,0x61ee693f
  41c94f:	mov    ds:0xa7fab652,al
  41c954:	jo     0x41c916
  41c956:	or     eax,DWORD PTR [esi-0x26]
  41c959:	js     0x41c9ca
  41c95b:	sar    BYTE PTR [ecx+eax*4-0x43dc498b],0xc9
  41c963:	inc    edx
  41c964:	ret    
  41c965:	inc    edx
  41c966:	add    eax,0x96ed8e7d
  41c96b:	mov    cl,0xce
  41c96d:	fwait
  41c96e:	(bad)  
  41c971:	int3   
  41c972:	and    edx,DWORD PTR [ebp-0x67]
  41c975:	or     cx,WORD PTR [edi+0x7410e02b]
  41c97c:	adc    bl,BYTE PTR [edi-0x5430319d]
  41c982:	frstor [ecx]
  41c984:	dec    eax
  41c985:	cli    
  41c986:	bound  ecx,QWORD PTR [esi+ebx*8]
  41c989:	inc    ecx
  41c98a:	in     eax,dx
  41c98b:	(bad)  
  41c98c:	popf   
  41c98d:	cdq    
  41c98e:	jle    0x41c9d4
  41c990:	mov    ebx,ecx
  41c992:	enter  0xb2a2,0x33
  41c996:	sti    
  41c997:	pop    edi
  41c998:	cli    
  41c999:	inc    esi
  41c99a:	mov    esi,0x352dcbac
  41c99f:	xchg   ecx,eax
  41c9a0:	mov    eax,0xdf8ae64b
  41c9a5:	hlt    
  41c9a6:	call   0x8c3da68
  41c9ab:	psubusb mm7,QWORD PTR cs:[edi]
  41c9af:	lds    esi,FWORD PTR [edi+0xe]
  41c9b2:	outs   dx,BYTE PTR ds:[esi]
  41c9b3:	add    BYTE PTR [ebp-0x37],0x3
  41c9b7:	pop    edi
  41c9b8:	loope  0x41ca18
  41c9ba:	sub    DWORD PTR [esi-0x6e],edi
  41c9bd:	loope  0x41c96a
  41c9bf:	mov    esp,0xe6304797
  41c9c4:	push   ecx
  41c9c5:	hlt    
  41c9c6:	or     al,0x4b
  41c9c8:	or     esi,DWORD PTR [ebx]
  41c9ca:	fs add DWORD PTR fs:[ecx],esp
  41c9ce:	fstp   TBYTE PTR [edx+0x18b5a432]
  41c9d4:	add    ch,0x35
  41c9d7:	cwde   
  41c9d8:	inc    ebx
  41c9d9:	pop    ebx
  41c9da:	int    0x3a
  41c9dc:	les    esp,FWORD PTR [edi]
  41c9de:	ret    0xd308
  41c9e1:	jmp    0x41c9f5
  41c9e3:	dec    DWORD PTR [esi+0x3c]
  41c9e6:	rol    DWORD PTR [si+0x50],cl
  41c9ea:	fdivr  DWORD PTR [ecx-0x1c]
  41c9ed:	int3   
  41c9ee:	mov    eax,0xa06fe796
  41c9f3:	pop    ebp
  41c9f4:	(bad)  
  41c9f5:	mov    ds:0x6dbee72f,al
  41c9fa:	adc    eax,0xd062cd02
  41c9ff:	scas   eax,DWORD PTR es:[edi]
  41ca00:	stc    
  41ca01:	pusha  
  41ca02:	sbb    cl,0x45
  41ca05:	push   ebx
  41ca06:	dec    edi
  41ca07:	call   0x8f3f:0x2787ca8b
  41ca0e:	add    al,BYTE PTR [edi]
  41ca10:	sub    BYTE PTR [eax],0x7
  41ca13:	or     DWORD PTR [ecx-0x29],edi
  41ca16:	shl    BYTE PTR [ebx+0x1edc40d],0xbf
  41ca1d:	cdq    
  41ca1e:	outs   dx,BYTE PTR ds:[esi]
  41ca1f:	jmp    0x41ca09
  41ca21:	adc    ebx,edx
  41ca23:	fnstcw WORD PTR [eax-0x733b7215]
  41ca29:	(bad)  
  41ca2a:	in     eax,0xc9
  41ca2c:	push   ebx
  41ca2d:	jb     0x41ca45
  41ca2f:	lea    ecx,[ecx]
  41ca31:	fcmovne st,st(3)
  41ca33:	cmp    DWORD PTR [esi-0x3949fe33],edx
  41ca39:	mov    al,0x27
  41ca3b:	jle    0x41ca3c
  41ca3d:	inc    ecx
  41ca3e:	jge    0x41ca23
  41ca40:	(bad)  
  41ca41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca42:	hlt    
  41ca43:	test   DWORD PTR [edx-0x5c],edi
  41ca46:	mov    esp,0xf8001c6f
  41ca4b:	dec    edx
  41ca4c:	fsub   QWORD PTR [esi-0x31]
  41ca4f:	xchg   DWORD PTR [ecx],ebx
  41ca51:	push   esp
  41ca52:	pop    ds
  41ca53:	out    0xc5,eax
  41ca55:	pusha  
  41ca56:	fstp   st(4)
  41ca58:	popf   
  41ca59:	adc    DWORD PTR [esi+eiz*1],ebx
  41ca5c:	ss int 0xc4
  41ca5f:	(bad)  
  41ca60:	and    DWORD PTR [edi-0x5],esi
  41ca63:	lods   al,BYTE PTR ds:[esi]
  41ca64:	shr    eax,cl
  41ca66:	push   es
  41ca67:	ror    DWORD PTR [esi],1
  41ca69:	mov    ebx,0x14f7a4b6
  41ca6e:	adc    ebp,DWORD PTR [esi+0x5b]
  41ca71:	mov    WORD PTR [edi-0x447256d2],?
  41ca77:	pop    ebx
  41ca78:	lahf   
  41ca79:	mov    ds:0x9956ad1f,al
  41ca7e:	inc    esi
  41ca7f:	add    bh,BYTE PTR [edx]
  41ca81:	fs inc esp
  41ca83:	aaa    
  41ca84:	(bad)  
  41ca85:	push   ebp
  41ca86:	mov    al,0xce
  41ca88:	cmp    al,0x8b
  41ca8a:	mov    cl,0x98
  41ca8c:	adc    eax,0x89ee9f09
  41ca91:	dec    edi
  41ca92:	mov    WORD PTR [edi-0x5cadfd99],?
  41ca98:	ss add al,0x80
  41ca9b:	fnstcw WORD PTR [ecx+ecx*4+0x63f14559]
  41caa2:	push   esi
  41caa3:	sbb    BYTE PTR [ebp-0x14],0xda
  41caa7:	or     al,0xa6
  41caa9:	push   0x91056186
  41caae:	sbb    eax,0x5a8bbd42
  41cab3:	add    ch,BYTE PTR [edx+0x54469dba]
  41cab9:	pop    es
  41caba:	sub    eax,0xcb5da759
  41cabf:	loope  0x41cb12
  41cac1:	jmp    0x27e1:0xfc32027f
  41cac8:	cmp    edx,edx
  41caca:	xchg   esi,eax
  41cacb:	jle    0x41cb20
  41cacd:	mov    edi,0x711cd8e4
  41cad2:	mov    edx,0x44029db8
  41cad7:	and    al,0x4a
  41cad9:	cli    
  41cada:	arpl   di,bp
  41cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cadd:	adc    dl,BYTE PTR [edx]
  41cadf:	bound  ebp,QWORD PTR [edi-0x7e]
  41cae2:	lahf   
  41cae3:	add    bh,BYTE PTR [eax+0x28]
  41cae6:	aam    0x73
  41cae8:	dec    esi
  41cae9:	sbb    eax,0xc12b7c2
  41caee:	jle    0x41cb56
  41caf0:	pop    ecx
  41caf1:	retf   0x92d7
  41caf4:	imul   eax,DWORD PTR ds:[ebx+0x1a453082],0xffffffc5
  41cafc:	sub    eax,0xad154995
  41cb01:	mov    ah,0xfe
  41cb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb04:	fwait
  41cb05:	inc    ebx
  41cb06:	mov    ds:0x47e0c25a,eax
  41cb0b:	lods   al,BYTE PTR ds:[esi]
  41cb0c:	shl    DWORD PTR [esi-0x68],1
  41cb0f:	inc    ebx
  41cb10:	dec    ebp
  41cb11:	mov    dh,BYTE PTR [edx-0x1e]
  41cb14:	jle    0x41cae0
  41cb16:	mov    dh,0xab
  41cb18:	push   ebp
  41cb19:	int    0x59
  41cb1b:	std    
  41cb1c:	and    edx,DWORD PTR [eax+edx*4+0x15f01dc1]
  41cb23:	jns    0x20c1e594
  41cb29:	and    al,0x28
  41cb2b:	mov    ecx,0x9bb3e961
  41cb30:	test   esp,edx
  41cb32:	ss jno 0x41cae1
  41cb35:	adc    DWORD PTR [ebx],eax
  41cb37:	jnp    0x41cadc
  41cb39:	loop   0x41cb5c
  41cb3b:	js     0x41cae2
  41cb3d:	xor    DWORD PTR [ebx],ebx
  41cb3f:	push   cs
  41cb40:	pop    ebp
  41cb41:	test   eax,0x161fef67
  41cb46:	jmp    0xba125fa0
  41cb4b:	jge    0xc887edaf
  41cb51:	addr16 mov ds:0xb9d2,al
  41cb55:	pop    ecx
  41cb56:	xchg   ebp,eax
  41cb57:	xchg   esi,eax
  41cb58:	cmc    
  41cb59:	int    0x2b
  41cb5b:	(bad)  
  41cb5c:	xor    DWORD PTR [ebx+0x6b],esi
  41cb5f:	(bad)  
  41cb60:	or     al,0xaa
  41cb62:	and    bl,BYTE PTR gs:[eax]
  41cb65:	dec    edx
  41cb66:	addr16 inc edx
  41cb68:	push   cs
  41cb69:	(bad)  
  41cb6a:	fild   QWORD PTR [ecx]
  41cb6c:	xchg   esp,eax
  41cb6d:	mov    WORD PTR [eax+eax*8],es
  41cb70:	mov    WORD PTR [ecx-0x6d],ds
  41cb73:	stos   BYTE PTR es:[edi],al
  41cb74:	adc    eax,0xe7d91e88
  41cb79:	ss mov bh,0x15
  41cb7c:	jne    0x41cb43
  41cb7e:	jle    0x41cb18
  41cb80:	in     al,dx
  41cb81:	push   ss
  41cb82:	mov    bl,0x4a
  41cb84:	cli    
  41cb85:	jg     0x41cbd3
  41cb87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb88:	mov    bl,0x20
  41cb8a:	enter  0xb8f3,0x56
  41cb8e:	adc    dh,bl
  41cb90:	inc    esi
  41cb91:	or     eax,0x2ef5ed46
  41cb96:	push   edi
  41cb97:	xlat   BYTE PTR ds:[ebx]
  41cb98:	out    0x17,al
  41cb9a:	hlt    
  41cb9b:	lock add ah,BYTE PTR cs:[edx-0x5ccce1bd]
  41cba3:	pop    ecx
  41cba4:	mov    al,0xf
  41cba6:	pusha  
  41cba7:	ret    
  41cba8:	je     0x41cc1a
  41cbaa:	stos   DWORD PTR es:[edi],eax
  41cbab:	inc    ax
  41cbad:	in     eax,0xea
  41cbaf:	imul   esp,DWORD PTR [ebp+0x53c37d3a],0xffffffa1
  41cbb6:	dec    esi
  41cbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb8:	and    al,0x2b
  41cbba:	mov    al,0xc9
  41cbbc:	add    esp,DWORD PTR [edx+0x3e]
  41cbbf:	mov    eax,0xa01ad642
  41cbc4:	xchg   ebp,eax
  41cbc5:	inc    ebp
  41cbc6:	inc    edi
  41cbc7:	dec    ebx
  41cbc8:	adc    dl,ch
  41cbca:	mov    ecx,0xdaf7c43f
  41cbcf:	(bad)  
  41cbd0:	mov    dl,0xcd
  41cbd2:	(bad)  
  41cbd3:	jmp    0xcf0f6739
  41cbd8:	int    0xa3
  41cbda:	fdiv   DWORD PTR [ebx+0x1097698e]
  41cbe0:	add    BYTE PTR [ebp+0x57efafe7],ah
  41cbe6:	outs   dx,BYTE PTR ds:[esi]
  41cbe7:	and    al,BYTE PTR [edx]
  41cbe9:	xor    BYTE PTR [eax+ebx*8],dh
  41cbec:	inc    edi
  41cbed:	xchg   ebp,eax
  41cbee:	mov    dh,BYTE PTR [esi+eax*2]
  41cbf1:	outs   dx,DWORD PTR ds:[esi]
  41cbf2:	int    0xa8
  41cbf4:	sub    esi,edi
  41cbf6:	pop    es
  41cbf7:	add    ch,dl
  41cbf9:	jg     0x41cbbc
  41cbfb:	test   DWORD PTR [ebx+eax*8+0x13f8132d],edx
  41cc02:	arpl   cx,si
  41cc04:	pop    ss
  41cc05:	ficomp DWORD PTR gs:[edx]
  41cc08:	push   edx
  41cc09:	pop    ebx
  41cc0a:	ins    DWORD PTR es:[edi],dx
  41cc0b:	pop    ecx
  41cc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc0d:	in     al,0x67
  41cc0f:	sbb    al,0x83
  41cc11:	fwait
  41cc12:	in     al,dx
  41cc13:	sbb    DWORD PTR [eax],ebx
  41cc15:	lea    esp,gs:[ecx+ebx*2+0x7c]
  41cc1a:	popf   
  41cc1b:	daa    
  41cc1c:	or     ch,BYTE PTR [edx-0x7f]
  41cc1f:	and    edx,DWORD PTR [ebx]
  41cc21:	ins    DWORD PTR es:[edi],dx
  41cc22:	mov    ebp,0xb8781d9
  41cc27:	lods   al,BYTE PTR ds:[esi]
  41cc28:	mov    edx,0xf0738493
  41cc2d:	outs   dx,DWORD PTR ds:[esi]
  41cc2e:	bound  ebx,QWORD PTR [eax-0x154584ca]
  41cc34:	ins    BYTE PTR es:[edi],dx
  41cc35:	popf   
  41cc36:	int    0xd4
  41cc38:	out    0x63,al
  41cc3a:	or     ah,dh
  41cc3c:	pop    edx
  41cc3d:	das    
  41cc3e:	test   eax,0x756e7c57
  41cc43:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41cc45:	jp     0x41cca3
  41cc47:	adc    edi,edi
  41cc49:	dec    ebp
  41cc4a:	repnz scas al,BYTE PTR es:[edi]
  41cc4c:	pop    edi
  41cc4d:	pop    esp
  41cc4e:	pop    edi
  41cc4f:	lock aas 
  41cc51:	cmp    al,BYTE PTR [edi]
  41cc53:	mov    ch,0x2c
  41cc55:	mov    esi,DWORD PTR [edi+0x7d]
  41cc58:	gs inc esi
  41cc5a:	into   
  41cc5b:	dec    esi
  41cc5c:	and    BYTE PTR [ecx+0x1263fa7],0x40
  41cc63:	jp     0x41cca3
  41cc65:	fdiv   QWORD PTR [esi]
  41cc67:	call   0xb637b072
  41cc6c:	rcl    ebp,1
  41cc6e:	repz cdq 
  41cc70:	retf   0x8ee0
  41cc73:	push   ebp
  41cc74:	cmp    bh,BYTE PTR [edi]
  41cc76:	jnp    0x41cc82
  41cc78:	cmp    ebp,edi
  41cc7a:	mov    edx,0x74a74257
  41cc7f:	fwait
  41cc80:	aas    
  41cc81:	xchg   BYTE PTR [ebp-0x7a50b392],ah
  41cc87:	addr16 mov bh,0x6f
  41cc8a:	retf   
  41cc8b:	lds    ecx,FWORD PTR [edi-0x67dba394]
  41cc91:	push   ecx
  41cc92:	mov    eax,DWORD PTR [esi]
  41cc94:	mov    ds:0x5b0fc45b,eax
  41cc99:	push   ss
  41cc9a:	sbb    edi,esp
  41cc9c:	sub    ebp,DWORD PTR [ecx]
  41cc9e:	pop    esi
  41cc9f:	add    esp,DWORD PTR [eax+edi*2]
  41cca2:	mov    edi,0xf9de7e6d
  41cca7:	sbb    al,0xea
  41cca9:	shl    BYTE PTR [edi+0x2234adf3],cl
  41ccaf:	leave  
  41ccb0:	dec    ebx
  41ccb1:	arpl   WORD PTR [ecx-0x13d1c0df],cx
  41ccb7:	xchg   esi,eax
  41ccb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb9:	xchg   edi,eax
  41ccba:	add    al,0x8e
  41ccbc:	cmp    al,0xe7
  41ccbe:	lods   al,BYTE PTR ds:[esi]
  41ccbf:	xor    BYTE PTR [esp+ecx*8],0xad
  41ccc3:	fisttp DWORD PTR [edi+0x1e329736]
  41ccc9:	cmp    edx,DWORD PTR [edx+0x13c4915d]
  41cccf:	xor    eax,esp
  41ccd1:	int    0x95
  41ccd3:	or     esp,edx
  41ccd5:	test   eax,0x31147d13
  41ccda:	mov    esp,0x80a06176
  41ccdf:	push   ss
  41cce0:	scas   eax,DWORD PTR es:[edi]
  41cce1:	or     dl,BYTE PTR [eax+ecx*1]
  41cce4:	inc    ebp
  41cce5:	outs   dx,BYTE PTR ds:[esi]
  41cce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce7:	push   esp
  41cce8:	add    al,0x5c
  41ccea:	fcomp  DWORD PTR [eax-0x1e]
  41cced:	call   0xd870:0xf631e481
  41ccf4:	fidivr WORD PTR [ebx+0x55]
  41ccf8:	es adc eax,0xe93d21eb
  41ccfe:	pop    esi
  41ccff:	xor    al,0xa4
  41cd01:	pop    es
  41cd02:	popf   
  41cd03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd04:	mov    eax,ds:0x5b57052d
  41cd09:	mov    dh,0x41
  41cd0b:	repz sub eax,0xc993139c
  41cd11:	iret   
  41cd12:	int3   
  41cd13:	and    ebp,edx
  41cd15:	jg     0x41ccbf
  41cd17:	das    
  41cd18:	jmp    0x41cd20
  41cd1a:	call   0x50573a56
  41cd1f:	mov    ds:0xee5bcbec,eax
  41cd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd25:	fucompp 
  41cd27:	outs   dx,DWORD PTR ds:[esi]
  41cd28:	mov    ebp,DWORD PTR [ecx-0x68]
  41cd2b:	into   
  41cd2c:	iret   
  41cd2d:	fnstcw WORD PTR [esi-0x4d]
  41cd30:	xor    eax,DWORD PTR [ebp-0x7220c856]
  41cd36:	imul   eax,esp,0xffffffff
  41cd39:	sbb    eax,0xea15aa31
  41cd3e:	mov    dl,0x69
  41cd40:	cmc    
  41cd41:	std    
  41cd42:	fwait
  41cd43:	test   eax,0x2cb3281f
  41cd48:	jecxz  0x41ccf8
  41cd4a:	pop    edi
  41cd4b:	cmp    DWORD PTR [edi-0x2b],0x6d48aac2
  41cd52:	mov    dh,0xe4
  41cd54:	sub    bh,BYTE PTR [eax+0x3b3cc65f]
  41cd5a:	jmp    0xdd9e:0x24d0ee72
  41cd61:	inc    esi
  41cd62:	pushf  
  41cd63:	imul   ecx,DWORD PTR [ecx+0x48],0xe2dd19a1
  41cd6a:	cmp    DWORD PTR [ebp+0x606cad8f],esp
  41cd70:	pop    ebx
  41cd71:	fnstcw WORD PTR [ebp+0x2e]
  41cd74:	mov    ds,WORD PTR [ecx-0x376bf3cb]
  41cd7a:	jp     0x41cd18
  41cd7c:	lock stos BYTE PTR es:[edi],al
  41cd7e:	adc    cl,dh
  41cd80:	jp     0x41ce01
  41cd82:	mov    ds:0xc956c9ac,al
  41cd87:	sahf   
  41cd88:	dec    ecx
  41cd89:	cld    
  41cd8a:	xchg   ebp,eax
  41cd8b:	mul    DWORD PTR [esi+ebp*4-0x38]
  41cd8f:	test   al,0xd7
  41cd91:	in     eax,dx
  41cd92:	add    eax,DWORD PTR [ebx+0x45af0ae8]
  41cd98:	sbb    esp,edi
  41cd9a:	sbb    eax,0xc85c2143
  41cd9f:	outs   dx,DWORD PTR ds:[esi]
  41cda0:	icebp  
  41cda1:	mov    edi,0x651d6b96
  41cda6:	push   eax
  41cda7:	sti    
  41cda8:	lods   eax,DWORD PTR ds:[esi]
  41cda9:	(bad)  
  41cdaa:	jge    0x41cd86
  41cdac:	cld    
  41cdad:	scas   al,BYTE PTR es:[edi]
  41cdae:	dec    edx
  41cdaf:	pop    ebp
  41cdb0:	dec    esp
  41cdb1:	mov    DWORD PTR [ecx+0xe4d1e18],edi
  41cdb7:	call   0xdd7c:0x7b0bf79b
  41cdbe:	mov    WORD PTR [ecx],gs
  41cdc0:	les    ebx,FWORD PTR [edx-0x45dda90d]
  41cdc6:	inc    esi
  41cdc7:	retf   0x382b
  41cdca:	sbb    ch,BYTE PTR ds:0x35c9707d
  41cdd0:	out    dx,al
  41cdd1:	fcom   st(5)
  41cdd3:	fiadd  WORD PTR [edx-0x13]
  41cdd6:	jno    0x41cd70
  41cdd8:	fisub  DWORD PTR [edx+0x3]
  41cddb:	ret    0xe82d
  41cdde:	jecxz  0x41cdad
  41cde0:	ds push ss
  41cde2:	mov    WORD PTR [eax],fs
  41cde4:	lahf   
  41cde5:	popa   
  41cde6:	and    BYTE PTR [ebx],0xee
  41cde9:	mov    edx,0x3d3df7
  41cdee:	dec    esp
  41cdef:	mov    esi,0xa92deea9
  41cdf4:	dec    esp
  41cdf5:	lds    edi,FWORD PTR [eax]
  41cdf7:	je     0x41ce2e
  41cdf9:	arpl   ax,bx
  41cdfb:	mov    edx,0xbee2b6ef
  41ce00:	mov    cl,0x44
  41ce02:	into   
  41ce03:	(bad)  
  41ce04:	out    0x6,al
  41ce06:	out    dx,eax
  41ce07:	pop    ebp
  41ce08:	push   ss
  41ce09:	dec    esi
  41ce0a:	daa    
  41ce0b:	scas   eax,DWORD PTR es:[edi]
  41ce0c:	add    BYTE PTR [edi+0x2d98e44e],cl
  41ce12:	sub    ecx,DWORD PTR [ebx+0x49913b5]
  41ce18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce19:	mov    dl,cl
  41ce1b:	rcr    DWORD PTR [edi-0x80],cl
  41ce1e:	jge    0x41cda9
  41ce20:	adc    esp,edx
  41ce22:	adc    eax,0xcdd52aea
  41ce27:	and    bh,bh
  41ce29:	jae    0x41ce2a
  41ce2b:	jl     0x41cdf1
  41ce2d:	adc    al,BYTE PTR [ebp-0x10]
  41ce30:	aam    0xd3
  41ce32:	mov    ebp,0xa260cd3c
  41ce37:	jne    0x41ce6b
  41ce39:	adc    DWORD PTR [eax],edx
  41ce3b:	imul   ebp,DWORD PTR [ecx],0x76
  41ce3e:	xor    al,0x6
  41ce40:	adc    ecx,0xffffffed
  41ce43:	fmul   QWORD PTR [ebx]
  41ce45:	int    0xaf
  41ce47:	addr16 xchg edx,eax
  41ce49:	pop    esi
  41ce4a:	mov    al,0xf8
  41ce4c:	call   0x5ecf:0x3338020
  41ce53:	icebp  
  41ce54:	fs aad 0xb7
  41ce57:	ret    0xdc34
  41ce5a:	add    al,dh
  41ce5c:	clc    
  41ce5d:	stos   BYTE PTR es:[di],al
  41ce5f:	jno    0x41ce00
  41ce61:	pop    esi
  41ce62:	popf   
  41ce63:	and    DWORD PTR [ebx],ebx
  41ce65:	xor    DWORD PTR [eax],ebx
  41ce67:	add    al,0xdb
  41ce69:	mov    esp,ecx
  41ce6b:	mov    ch,0x25
  41ce6d:	sub    ch,dl
  41ce6f:	xchg   ebx,eax
  41ce70:	dec    edx
  41ce71:	lods   al,BYTE PTR ds:[esi]
  41ce72:	test   eax,0xa5e6b262
  41ce77:	loopne 0x41cec3
  41ce79:	or     al,0x8
  41ce7b:	pusha  
  41ce7c:	ret    0x9647
  41ce7f:	add    al,0x4e
  41ce81:	and    eax,0x9f252f9e
  41ce86:	sub    al,0xa9
  41ce88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce89:	enter  0xbfa4,0x69
  41ce8d:	push   ebx
  41ce8e:	sar    ah,1
  41ce90:	sahf   
  41ce91:	push   esi
  41ce92:	aad    0x1c
  41ce94:	(bad)  
  41ce95:	xlat   BYTE PTR ds:[ebx]
  41ce96:	sbb    DWORD PTR [ecx+edx*2-0x6ba0d60],ecx
  41ce9d:	popw   es
  41ce9f:	in     al,dx
  41cea0:	in     al,0xda
  41cea2:	inc    esi
  41cea3:	aas    
  41cea4:	mov    edx,0x4bdfd3e4
  41cea9:	inc    edi
  41ceaa:	fwait
  41ceab:	xchg   ebp,eax
  41ceac:	sbb    al,0xfc
  41ceae:	mov    esp,0xac896b2c
  41ceb3:	pop    ebp
  41ceb4:	out    dx,eax
  41ceb5:	add    eax,0x1b7348f7
  41ceba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebb:	aas    
  41cebc:	mov    cl,0x44
  41cebe:	jecxz  0x41cee1
  41cec0:	mov    ah,0xf8
  41cec2:	sti    
  41cec3:	jns    0x41cee4
  41cec5:	leave  
  41cec6:	sbb    ebx,DWORD PTR [ebx-0x7f9f6a44]
  41cecc:	test   al,0xb3
  41cece:	scas   al,BYTE PTR es:[edi]
  41cecf:	shr    BYTE PTR [esi+0x3a8ea3e7],cl
  41ced5:	add    eax,0x29b55cd5
  41ceda:	jo     0x41ceed
  41cedc:	add    DWORD PTR [edx+0x2e],ebx
  41cedf:	gs ret 
  41cee1:	loop   0x41ced3
  41cee3:	enter  0xfd04,0xd7
  41cee7:	pop    esp
  41cee8:	out    dx,al
  41cee9:	pop    es
  41ceea:	lods   eax,DWORD PTR ds:[esi]
  41ceeb:	xor    BYTE PTR [edx],bh
  41ceed:	push   es
  41ceee:	jno    0x41cf25
  41cef0:	xchg   edx,eax
  41cef1:	cld    
  41cef2:	xor    al,0xcc
  41cef4:	adc    al,0x5d
  41cef6:	xor    eax,0x4b032b65
  41cefb:	and    BYTE PTR ss:[esi],dl
  41cefe:	mov    ds:0x11a02809,al
  41cf03:	rcr    BYTE PTR [ecx+ecx*1],0xaa
  41cf07:	test   edi,ecx
  41cf09:	cmp    ebx,DWORD PTR [ebx-0x79ad490b]
  41cf0f:	gs mov bh,0x34
  41cf12:	push   es
  41cf13:	mov    ?,WORD PTR ds:[ebp+0x2cbc6455]
  41cf1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf1b:	cmp    DWORD PTR [edi+0x4b538fdd],0xff22ce88
  41cf25:	add    eax,0x3b67d127
  41cf2a:	ss xchg esp,eax
  41cf2c:	(bad)  
  41cf2d:	repnz or al,0xfb
  41cf30:	jecxz  0x41cec2
  41cf32:	(bad)  
  41cf33:	xor    dh,BYTE PTR [eax-0x52]
  41cf36:	push   sp
  41cf38:	ret    0x8701
  41cf3b:	cmp    eax,0x6f264d5c
  41cf40:	pop    edx
  41cf41:	dec    edi
  41cf42:	aad    0x36
  41cf44:	inc    edx
  41cf45:	pop    edi
  41cf46:	adc    dh,cl
  41cf48:	lods   al,BYTE PTR ds:[esi]
  41cf49:	jmp    0xcf2bf997
  41cf4e:	cmp    al,0xd1
  41cf50:	xchg   esp,eax
  41cf51:	xor    al,0x21
  41cf53:	pusha  
  41cf54:	test   DWORD PTR [ebx+0x66],0xba02daf2
  41cf5b:	stos   BYTE PTR es:[edi],al
  41cf5c:	rcr    BYTE PTR [ecx+0x3bcae017],cl
  41cf62:	mov    ecx,0xd12c3aaa
  41cf67:	adc    esp,ebp
  41cf69:	xchg   edx,eax
  41cf6a:	push   ebx
  41cf6b:	and    esp,edi
  41cf6d:	sub    al,0x43
  41cf6f:	jl     0x41cf89
  41cf71:	and    BYTE PTR [esp+ebx*4+0x44],0x11
  41cf76:	sub    DWORD PTR [ebx+0x45],ecx
  41cf79:	push   esp
  41cf7a:	(bad)  
  41cf7b:	pusha  
  41cf7c:	lea    ebx,[eax]
  41cf7e:	mov    ebp,0xd4ad688b
  41cf83:	dec    ecx
  41cf84:	lods   al,BYTE PTR ds:[esi]
  41cf85:	outs   dx,DWORD PTR ds:[esi]
  41cf86:	xlat   BYTE PTR ds:[ebx]
  41cf87:	mov    ds:0xda5a75fb,al
  41cf8c:	cwde   
  41cf8d:	jl     0x41cf6f
  41cf8f:	inc    esp
  41cf90:	pop    eax
  41cf91:	retf   0x7f68
  41cf94:	mov    ah,0xa1
  41cf96:	ds ins BYTE PTR es:[edi],dx
  41cf98:	adc    bh,BYTE PTR [eax-0x1931f748]
  41cf9e:	xchg   edx,eax
  41cf9f:	sbb    ch,BYTE PTR [ebx+0x6d]
  41cfa2:	add    BYTE PTR [edx],dl
  41cfa4:	jp     0x41cf8c
  41cfa6:	sbb    DWORD PTR [edi+0x23a57377],esi
  41cfac:	fild   WORD PTR [esi]
  41cfae:	jecxz  0x41cf32
  41cfb0:	cwde   
  41cfb1:	sbb    al,0xde
  41cfb3:	and    al,ch
  41cfb5:	pushf  
  41cfb6:	fcom   DWORD PTR [ebx+0x44545d99]
  41cfbc:	xor    al,0xca
  41cfbe:	inc    edi
  41cfbf:	int    0xde
  41cfc1:	arpl   WORD PTR [eax+0x5f],dx
  41cfc4:	mov    bl,0x4b
  41cfc6:	add    eax,0x3b6f54ad
  41cfcb:	xchg   edx,eax
  41cfcc:	mov    eax,ds:0xcc205418
  41cfd1:	push   es
  41cfd2:	mov    esp,0xf4c02100
  41cfd7:	mov    bl,0xe3
  41cfd9:	aas    
  41cfda:	xlat   BYTE PTR ds:[ebx]
  41cfdb:	inc    ebx
  41cfdc:	pop    edi
  41cfdd:	or     eax,DWORD PTR [ebp+0x30]
  41cfe0:	jmp    0x41d03e
  41cfe2:	add    bl,bl
  41cfe4:	xor    ch,BYTE PTR [edx+0x2277a88c]
  41cfea:	inc    eax
  41cfeb:	leave  
  41cfec:	pusha  
  41cfed:	call   0x41eb8895
  41cff2:	inc    esp
  41cff3:	cmp    DWORD PTR [ebx-0x7c],0x75
  41cff7:	repz jl 0x41d060
  41cffa:	ins    BYTE PTR es:[edi],dx
  41cffb:	mul    ah
  41cffd:	dec    esi
  41cffe:	xchg   edx,eax
  41cfff:	fisttp WORD PTR [ebp+edi*8+0x39]
  41d003:	outs   dx,DWORD PTR ds:[esi]
  41d004:	push   edx
  41d005:	addr16 iret 
  41d007:	test   DWORD PTR [edi+0x1e],edi
  41d00a:	xchg   edx,eax
  41d00b:	inc    edx
  41d00c:	loop   0x41d07c
  41d00e:	jecxz  0x41d003
  41d010:	imul   ecx,ebx,0xd56e26fc
  41d016:	in     al,dx
  41d017:	repz jmp 0xddc84f01
  41d01d:	(bad)  
  41d01e:	jmp    0x41cfbe
  41d020:	xor    DWORD PTR [edi],0x61d51dce
  41d026:	(bad)  
  41d027:	inc    ecx
  41d028:	jbe    0x41d016
  41d02a:	outs   dx,DWORD PTR ds:[esi]
  41d02b:	mov    WORD PTR [edi+0x22c12331],fs
  41d031:	adc    DWORD PTR [edx+ebx*1+0x73],ecx
  41d035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d036:	push   cs
  41d037:	ins    BYTE PTR es:[edi],dx
  41d038:	mov    ch,0xde
  41d03a:	push   eax
  41d03b:	dec    eax
  41d03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d03e:	lahf   
  41d03f:	mov    ebp,0x20cf087e
  41d044:	mov    ds:0x4806f047,al
  41d049:	icebp  
  41d04a:	xor    eax,0xa09b24c6
  41d04f:	mov    BYTE PTR [eax+0x49],0xc4
  41d053:	jg     0x41d048
  41d055:	lea    edi,[eax+0x7d]
  41d058:	and    cl,ch
  41d05a:	and    BYTE PTR [ebp+0x86aac5a],dl
  41d060:	or     ebp,DWORD PTR [ebx]
  41d062:	sub    esi,edx
  41d064:	loope  0x41cffe
  41d066:	test   DWORD PTR [ecx+edx*1-0x1fd05f2b],edx
  41d06d:	pop    ss
  41d06e:	xchg   esi,eax
  41d06f:	jg     0x41d062
  41d071:	sbb    eax,0x4137e3b0
  41d076:	or     eax,0xfe822554
  41d07b:	push   cs
  41d07c:	out    dx,eax
  41d07d:	out    0xd0,eax
  41d07f:	lock adc al,0xd0
  41d082:	(bad)  
  41d083:	pushf  
  41d084:	cld    
  41d085:	aaa    
  41d086:	ins    BYTE PTR es:[edi],dx
  41d087:	and    eax,0xbbdbfa4
  41d08c:	mov    ecx,esi
  41d08e:	cs in  eax,dx
  41d090:	add    esi,eax
  41d092:	cmp    DWORD PTR [ecx-0x15],ebp
  41d095:	adc    edx,0xffffffac
  41d098:	jecxz  0x41d050
  41d09a:	adc    dl,ah
  41d09c:	aas    
  41d09d:	push   cs
  41d09e:	hlt    
  41d09f:	test   DWORD PTR [ecx],ecx
  41d0a1:	in     al,dx
  41d0a2:	not    BYTE PTR [edi-0x49]
  41d0a5:	(bad)  
  41d0a6:	push   edi
  41d0a7:	jnp    0x41d11c
  41d0a9:	push   edx
  41d0aa:	or     DWORD PTR [ebx-0x4d],esi
  41d0ad:	stos   BYTE PTR es:[edi],al
  41d0ae:	js     0x41d054
  41d0b0:	sbb    eax,0x5e7c6d8
  41d0b5:	mov    eax,ds:0x8663f0a2
  41d0ba:	popa   
  41d0bb:	iret   
  41d0bc:	div    DWORD PTR [esi+0xc]
  41d0bf:	call   0xdc51:0xfad83f82
  41d0c6:	fnop   
  41d0c8:	(bad)  
  41d0ca:	ror    BYTE PTR [eax-0x33171d40],0x47
  41d0d1:	cmp    dh,ah
  41d0d3:	pop    es
  41d0d4:	mov    ebx,DWORD PTR [eax+0x2d]
  41d0d7:	xchg   ebx,eax
  41d0d8:	in     eax,0x54
  41d0da:	dec    ecx
  41d0db:	fld    TBYTE PTR [ecx-0x66]
  41d0de:	sbb    ch,BYTE PTR [ecx]
  41d0e0:	fmul   QWORD PTR [eax+edx*1-0x28]
  41d0e4:	clc    
  41d0e5:	pop    ds
  41d0e6:	xchg   ebx,eax
  41d0e7:	fwait
  41d0e8:	adc    al,0xd7
  41d0ea:	jle    0x41d110
  41d0ec:	or     cl,dl
  41d0ee:	add    BYTE PTR [ebp+0x64a5d2dc],ah
  41d0f4:	fs xchg esp,eax
  41d0f6:	lahf   
  41d0f7:	sbb    al,0x78
  41d0f9:	xlat   BYTE PTR ds:[ebx]
  41d0fa:	and    BYTE PTR [ebp-0x53],dl
  41d0fd:	mov    al,ds:0x91e093f3
  41d102:	arpl   di,bp
  41d104:	mov    esp,0x6ffd2af6
  41d109:	iret   
  41d10a:	loop   0x41d162
  41d10c:	stos   BYTE PTR es:[edi],al
  41d10d:	pushw  0xd46e
  41d111:	data16 sbb dh,0x39
  41d115:	lock inc ebx
  41d117:	imul   eax,DWORD PTR [edi-0x40b37fc6],0xda3b5d4
  41d121:	or     al,0x50
  41d123:	pop    ecx
  41d124:	retf   
  41d125:	in     al,0x45
  41d127:	dec    edi
  41d128:	mov    edi,0xc0471b7a
  41d12d:	mov    bh,0x0
  41d12f:	pop    edi
  41d130:	daa    
  41d131:	cmp    al,0x68
  41d133:	scas   al,BYTE PTR es:[edi]
  41d134:	jle    0x41d1b0
  41d136:	sahf   
  41d137:	shl    bh,1
  41d139:	sbb    ebx,DWORD PTR [ebp-0x132936c3]
  41d13f:	das    
  41d140:	jmp    0xd32bd976
  41d145:	frstor [eax]
  41d147:	add    DWORD PTR [eax-0x76],ecx
  41d14a:	fisttp QWORD PTR [ecx+0x762dba65]
  41d150:	es inc ebp
  41d152:	cmp    al,BYTE PTR [ebx+edx*4]
  41d155:	or     eax,0xb829770a
  41d15a:	pop    eax
  41d15b:	jne    0x41d166
  41d15d:	cmp    ebx,0x5a
  41d160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d161:	cmp    eax,0x7b63d37e
  41d166:	or     bl,bh
  41d168:	into   
  41d169:	pop    eax
  41d16a:	mov    eax,0x82aa74d2
  41d16f:	(bad)  
  41d170:	(bad)
  41d173:	test   DWORD PTR [esi+0x2],edx
  41d176:	loope  0x41d161
  41d178:	lods   eax,DWORD PTR ds:[esi]
  41d17a:	(bad)  
  41d17b:	sahf   
  41d17c:	inc    ebx
  41d17d:	jle    0x41d1c4
  41d17f:	call   0x5267b64f
  41d184:	push   eax
  41d185:	shl    DWORD PTR [edi+0x34cfa63c],0x74
  41d18c:	loope  0x41d20a
  41d18e:	stos   BYTE PTR es:[edi],al
  41d18f:	mov    edi,0xde5e572e
  41d194:	ins    DWORD PTR es:[edi],dx
  41d195:	popf   
  41d196:	adc    DWORD PTR [ecx],ebp
  41d198:	sbb    al,0x72
  41d19a:	sbb    ah,BYTE PTR [ebx-0xa]
  41d19d:	lock add eax,0xb450b313
  41d1a3:	data16 sbb al,0x39
  41d1a6:	fwait
  41d1a7:	call   FWORD PTR [ecx+0x62]
  41d1aa:	lods   eax,DWORD PTR ds:[esi]
  41d1ab:	es push 0xeee87389
  41d1b1:	add    DWORD PTR [edi+0x7ae38014],0x60
  41d1b8:	jle    0x41d1d9
  41d1ba:	rcl    BYTE PTR [ecx-0x4b6cafe9],0xe9
  41d1c1:	in     al,dx
  41d1c2:	pop    ebp
  41d1c3:	ret    0x2ad7
  41d1c6:	(bad)  
  41d1c7:	and    DWORD PTR [esi+0x23],ebx
  41d1ca:	pop    ss
  41d1cb:	aas    
  41d1cc:	cdq    
  41d1cd:	hlt    
  41d1ce:	cli    
  41d1cf:	in     eax,dx
  41d1d0:	sub    ebp,edi
  41d1d2:	push   ecx
  41d1d3:	cmp    bl,BYTE PTR [ebx+0x3d2db60d]
  41d1d9:	cmp    BYTE PTR [eax-0x4b71f866],dh
  41d1df:	sub    eax,0x6fcf89ad
  41d1e4:	xchg   BYTE PTR [ebx-0x83df23b],al
  41d1ea:	punpckldq mm3,DWORD PTR [edx+ebx*8+0x7a]
  41d1ef:	js     0x41d248
  41d1f1:	fcmovu st,st(0)
  41d1f3:	rcl    DWORD PTR gs:[edx+ebx*2-0x55a142cf],cl
  41d1fb:	shl    edi,1
  41d1fd:	sahf   
  41d1fe:	push   ebx
  41d1ff:	lea    ebx,[eax-0x2b7024db]
  41d205:	retf   
  41d206:	or     dh,BYTE PTR [ebx-0x47f21512]
  41d20c:	out    dx,al
  41d20d:	mov    ds:0x67fbb58,al
  41d212:	iret   
  41d213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d214:	pop    esp
  41d215:	sbb    al,0xd5
  41d217:	int3   
  41d218:	dec    esp
  41d219:	add    esi,ebx
  41d21b:	mov    dl,0x75
  41d21d:	int    0xb8
  41d21f:	pop    es
  41d220:	push   edi
  41d221:	xchg   edx,eax
  41d222:	push   edi
  41d223:	mov    eax,ds:0x572426e4
  41d228:	cwde   
  41d229:	sbb    eax,0xd67f820d
  41d22e:	jo     0x41d235
  41d230:	js     0x41d2ac
  41d232:	cmp    ebx,DWORD PTR [ecx]
  41d234:	jno    0x41d258
  41d236:	lds    esp,FWORD PTR [ebp+ecx*8-0x2178be38]
  41d23d:	jp     0x41d222
  41d23f:	jne    0x41d2ba
  41d241:	dec    esp
  41d242:	push   edi
  41d243:	mov    ds:0x4c7215f3,eax
  41d248:	sahf   
  41d249:	adc    eax,0x367c9465
  41d24e:	inc    ecx
  41d24f:	xor    BYTE PTR [edx],dl
  41d251:	out    dx,eax
  41d252:	cmp    al,0x11
  41d254:	lods   al,BYTE PTR ds:[esi]
  41d255:	fmulp  st(3),st
  41d257:	ds sahf 
  41d259:	ror    DWORD PTR [ecx+0x3a2aed08],0xc8
  41d260:	inc    esi
  41d261:	ins    BYTE PTR es:[edi],dx
  41d262:	imul   edi,eax,0x9c79e9c0
  41d268:	shl    BYTE PTR ds:0xd7fcc46e,cl
  41d26e:	jmp    0x41d21e
  41d270:	sbb    al,0x4a
  41d272:	clc    
  41d273:	sbb    eax,0x12de5592
  41d278:	sbb    edx,DWORD PTR [ebx+eax*8-0x69]
  41d27c:	mov    bl,0x89
  41d27e:	push   ebx
  41d27f:	mov    eax,ds:0x7aa3ab74
  41d284:	mov    ecx,0xbf65f97b
  41d289:	mov    esp,0x25120cbf
  41d28e:	push   ecx
  41d28f:	or     eax,DWORD PTR [esi-0x7a95e0e7]
  41d295:	loop   0x41d2ea
  41d297:	fisttp QWORD PTR [edi]
  41d299:	pop    esp
  41d29a:	and    DWORD PTR [ebp+0x4f9304ac],0xffffffd7
  41d2a1:	mov    esp,0x685dba92
  41d2a6:	cld    
  41d2a7:	inc    ebp
  41d2a8:	fdiv   DWORD PTR ds:0x3a7a4375
  41d2ae:	(bad)  
  41d2af:	data16 lods al,BYTE PTR ds:[esi]
  41d2b1:	mov    cl,0x0
  41d2b3:	call   0x4f6a45dd
  41d2b8:	xchg   ebx,eax
  41d2b9:	(bad)  
  41d2bb:	xor    eax,DWORD PTR [ebx+0x2d]
  41d2be:	or     al,BYTE PTR [edx+eiz*8-0x288eba21]
  41d2c5:	mov    ah,0xe9
  41d2c7:	fmulp  st(5),st
  41d2c9:	fwait
  41d2ca:	and    esi,edx
  41d2cc:	pop    ebp
  41d2cd:	call   0xecca50e1
  41d2d2:	icebp  
  41d2d3:	packssdw mm7,mm6
  41d2d6:	sub    al,0xff
  41d2d8:	leave  
  41d2d9:	dec    edi
  41d2da:	(bad)  
  41d2db:	adc    esp,ebx
  41d2dd:	cmp    ah,BYTE PTR [ebx]
  41d2df:	pop    es
  41d2e0:	hlt    
  41d2e1:	mov    al,ds:0xc7df6939
  41d2e6:	add    ebx,DWORD PTR ds:0xda392601
  41d2ec:	push   ebp
  41d2ed:	shl    BYTE PTR ds:0xf1b9fb78,1
  41d2f3:	sub    al,0xe1
  41d2f5:	fbstp  TBYTE PTR [edi+0x1]
  41d2f8:	jnp    0x41d283
  41d2fa:	repnz mov bl,0x3e
  41d2fd:	in     al,0x6c
  41d2ff:	push   edx
  41d300:	repnz repz fcomp st(6)
  41d304:	pop    esp
  41d305:	sar    BYTE PTR [edx],cl
  41d307:	(bad)  
  41d308:	es dec edx
  41d30a:	stc    
  41d30b:	fdiv   DWORD PTR [edx+0x31]
  41d30e:	jl     0x41d35d
  41d310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d311:	cmp    ecx,DWORD PTR [ecx]
  41d313:	xchg   edx,eax
  41d314:	xor    eax,DWORD PTR [ecx+0x66]
  41d317:	adc    al,0xe2
  41d319:	outs   dx,BYTE PTR ds:[esi]
  41d31a:	cmp    esi,DWORD PTR [eax]
  41d31c:	pop    ebp
  41d31d:	inc    ecx
  41d31e:	mov    ah,0x26
  41d320:	xor    al,0xd2
  41d322:	call   0xb45b0d3
  41d327:	sub    eax,0x37c4c127
  41d32c:	cld    
  41d32d:	pop    edx
  41d32e:	cmp    DWORD PTR [ecx],esp
  41d330:	aad    0xaa
  41d332:	add    DWORD PTR [eax+eax*8+0x4a8654b5],0x53f3285c
  41d33d:	popa   
  41d33e:	mov    edi,0xd29bd749
  41d343:	nop
  41d344:	(bad)  
  41d345:	les    edi,FWORD PTR [esi-0x6e]
  41d348:	or     DWORD PTR [edx-0x62],esi
  41d34b:	iret   
  41d34c:	xor    dl,BYTE PTR [edx+eax*8-0x62]
  41d350:	hlt    
  41d351:	lods   eax,DWORD PTR ds:[esi]
  41d352:	dec    ebp
  41d353:	or     ebp,DWORD PTR ds:0x73279845
  41d359:	pop    esp
  41d35a:	loop   0x41d35f
  41d35c:	cdq    
  41d35d:	pop    esi
  41d35e:	popa   
  41d35f:	add    ch,BYTE PTR [ebx+0x60]
  41d362:	jmp    0x1c42:0x83ae4d41
  41d369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d36a:	cmp    ebp,ecx
  41d36c:	adc    eax,0x3458d0be
  41d371:	addr16 mov eax,ds:0xfaa7
  41d375:	xor    ch,ah
  41d377:	dec    esi
  41d378:	pop    ebx
  41d379:	pop    esi
  41d37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d37b:	in     eax,dx
  41d37c:	scas   al,BYTE PTR es:[edi]
  41d37d:	inc    esi
  41d37e:	sub    bl,dl
  41d380:	aad    0xeb
  41d382:	inc    edx
  41d383:	sbb    dl,BYTE PTR [ecx-0x1ce0c0d0]
  41d389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38a:	sub    ch,BYTE PTR [ebx+0x5b]
  41d38d:	mov    cl,0x74
  41d38f:	add    esi,DWORD PTR [eax-0x44a352b2]
  41d395:	stc    
  41d396:	adc    dh,BYTE PTR [eax+0x57765ca2]
  41d39c:	les    ebx,FWORD PTR [ebp+ebp*4+0x17]
  41d3a0:	mov    edx,0xec02ac5c
  41d3a5:	jmp    0x41d3d9
  41d3a7:	mov    dl,0x52
  41d3a9:	sbb    BYTE PTR [ecx-0x6e0081cb],0x35
  41d3b0:	jne    0x41d417
  41d3b2:	es bnd js 0x41d3c6
  41d3b6:	hlt    
  41d3b7:	mov    BYTE PTR [ebx],bl
  41d3b9:	dec    esi
  41d3ba:	imul   ebx,DWORD PTR [ecx-0x50],0x4cb232fe
  41d3c1:	pop    eax
  41d3c2:	aam    0x20
  41d3c4:	dec    esi
  41d3c5:	in     eax,0x7e
  41d3c7:	rol    edx,0xed
  41d3ca:	inc    eax
  41d3cb:	ins    DWORD PTR es:[edi],dx
  41d3cc:	call   0xe927:0xb8af57d2
  41d3d3:	js     0x41d3cc
  41d3d5:	mov    al,ds:0x432b2894
  41d3da:	(bad)  
  41d3db:	fcomp  QWORD PTR ds:0x96d31d67
  41d3e1:	out    dx,al
  41d3e2:	call   0x93edb319
  41d3e7:	push   ebp
  41d3e8:	(bad)  
  41d3e9:	lods   eax,DWORD PTR ds:[esi]
  41d3ea:	mov    edx,0x96346b74
  41d3ef:	pop    ss
  41d3f0:	hlt    
  41d3f1:	sbb    DWORD PTR [edi-0x6f],0x16bd98d9
  41d3f8:	comiss xmm3,DWORD PTR [edi]
  41d3fb:	or     ch,dl
  41d3fd:	ret    0xbe73
  41d400:	mov    bl,0xa1
  41d402:	mov    dl,0x43
  41d404:	jle    0x41d38a
  41d406:	rol    BYTE PTR ds:0x7bd2c0fd,1
  41d40c:	stc    
  41d40d:	xor    al,0x75
  41d40f:	outs   dx,BYTE PTR ds:[esi]
  41d410:	push   esi
  41d411:	lods   al,BYTE PTR ds:[esi]
  41d412:	iret   
  41d413:	push   es
  41d414:	scas   al,BYTE PTR es:[di]
  41d416:	dec    DWORD PTR [eax+0x2b068a82]
  41d41c:	retf   
  41d41d:	ins    DWORD PTR es:[edi],dx
  41d41e:	rcr    BYTE PTR [eax-0x1493190e],0x55
  41d425:	jae    0x41d478
  41d427:	loop   0x41d3bd
  41d429:	and    edx,DWORD PTR [ebx]
  41d42b:	dec    BYTE PTR [ecx]
  41d42d:	pop    ds
  41d42e:	and    eax,0x104dc656
  41d433:	leave  
  41d434:	or     BYTE PTR [edx+edi*4-0x71126ae3],0x60
  41d43c:	or     al,BYTE PTR [ecx-0x41649996]
  41d442:	mov    bl,0x93
  41d444:	push   esp
  41d445:	pop    edx
  41d446:	inc    esp
  41d447:	lock imul esp
  41d44a:	xchg   esp,eax
  41d44b:	pop    ss
  41d44c:	xchg   edx,eax
  41d44d:	int3   
  41d44e:	stos   BYTE PTR es:[edi],al
  41d44f:	out    0x85,al
  41d451:	retf   0x474e
  41d454:	inc    ecx
  41d455:	jge    0x41d478
  41d457:	popf   
  41d458:	jo     0x41d48e
  41d45a:	sbb    eax,0xa98ad7f5
  41d45f:	jl     0x41d4dc
  41d461:	pop    eax
  41d462:	(bad)  
  41d463:	mov    eax,0x8c1d94d6
  41d468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d469:	xchg   DWORD PTR [esp+esi*1],ecx
  41d46c:	jg     0x41d445
  41d46e:	lods   eax,DWORD PTR ds:[esi]
  41d46f:	sbb    BYTE PTR [esi],al
  41d471:	xchg   DWORD PTR [esi+0x9b09351],ebx
  41d477:	stos   BYTE PTR es:[edi],al
  41d478:	push   esi
  41d479:	stos   DWORD PTR es:[edi],eax
  41d47a:	jl     0x41d47a
  41d47c:	mov    eax,ds:0xd1e872bb
  41d481:	sbb    bl,dh
  41d483:	cmc    
  41d484:	sbb    al,0x51
  41d486:	pop    ds
  41d487:	loopne 0x41d4bf
  41d489:	sbb    ecx,esp
  41d48b:	cmp    ecx,DWORD PTR [esi]
  41d48d:	call   0x47b4:0x8c20b9b
  41d494:	inc    eax
  41d495:	jg     0x41d504
  41d497:	fnstsw WORD PTR [eax-0x12]
  41d49a:	in     eax,dx
  41d49b:	pop    esi
  41d49c:	push   es
  41d49d:	xor    ecx,DWORD PTR [ebp+0x4276acb7]
  41d4a3:	(bad)  [eax]
  41d4a5:	add    ebp,edi
  41d4a7:	cmc    
  41d4a8:	push   esp
  41d4a9:	nop
  41d4aa:	or     dh,BYTE PTR [esi-0x6504834]
  41d4b0:	test   BYTE PTR [ecx+0x334a7c2c],dh
  41d4b6:	sub    eax,0x610b7517
  41d4bb:	xchg   DWORD PTR [esi+0x52db5682],eax
  41d4c1:	call   0xec99:0xc377637b
  41d4c8:	arpl   cx,si
  41d4ca:	xor    esi,ebx
  41d4cc:	adc    eax,0x709ac723
  41d4d1:	add    eax,0xa468ced9
  41d4d6:	inc    edi
  41d4d7:	pop    eax
  41d4d8:	out    dx,al
  41d4d9:	push   0x22
  41d4db:	popa   
  41d4dc:	mov    ah,0xe5
  41d4de:	adc    edi,edi
  41d4e0:	ret    0x60f6
  41d4e3:	(bad)  
  41d4e4:	in     al,0x8c
  41d4e6:	pushf  
  41d4e7:	add    eax,0x7ac5514a
  41d4ec:	inc    esp
  41d4ed:	call   0xe621:0x2bb6a091
  41d4f4:	dec    esp
  41d4f5:	(bad)  
  41d4f6:	mov    al,cl
  41d4f8:	sbb    cl,BYTE PTR [esi-0x1e217b82]
  41d4fe:	inc    esi
  41d4ff:	jl     0x41d524
  41d501:	hlt    
  41d502:	js     0x41d49e
  41d504:	jmp    0x5c5b:0xd23d7c90
  41d50b:	sub    dh,bl
  41d50d:	packuswb mm2,QWORD PTR [edi]
  41d510:	cmc    
  41d511:	ret    0xafb8
  41d514:	pop    ebp
  41d515:	xchg   esi,eax
  41d516:	add    edx,DWORD PTR [ebx]
  41d518:	sbb    ebp,DWORD PTR [edx+0x1e]
  41d51b:	sub    dl,BYTE PTR [edi-0x41]
  41d51e:	imul   edi,DWORD PTR [ebx+0x2f9debcc],0xfb6d5995
  41d528:	cmp    eax,0x4b97c683
  41d52d:	stos   DWORD PTR es:[edi],eax
  41d52e:	js     0x41d4da
  41d530:	ds xor al,0x15
  41d533:	inc    esp
  41d534:	cwde   
  41d535:	pusha  
  41d536:	sti    
  41d537:	mov    ds:0xf3ca05ff,al
  41d53c:	pop    ebx
  41d53d:	stc    
  41d53e:	outs   dx,DWORD PTR ds:[esi]
  41d53f:	mov    dh,BYTE PTR ds:0xae658712
  41d545:	in     eax,dx
  41d546:	ss mov cl,0x43
  41d549:	sub    BYTE PTR [ebx],al
  41d54b:	iret   
  41d54c:	pop    ss
  41d54d:	(bad)  
  41d54e:	out    dx,al
  41d54f:	clc    
  41d550:	fnstcw WORD PTR [esi]
  41d552:	dec    edx
  41d553:	iret   
  41d554:	adc    eax,0xd4bf6847
  41d559:	pop    ebx
  41d55a:	dec    esp
  41d55b:	ds retf 
  41d55d:	xchg   esp,eax
  41d55e:	les    eax,FWORD PTR [esi-0x32c0e068]
  41d564:	push   ds
  41d565:	fwait
  41d566:	sbb    esi,DWORD PTR [esi-0x48ad5d04]
  41d56c:	mov    ch,0xc5
  41d56e:	(bad)  
  41d56f:	iret   
  41d570:	mov    ds:0x8aa80824,eax
  41d575:	out    0xef,al
  41d577:	les    eax,FWORD PTR [esi-0xc8906f6]
  41d57d:	fist   DWORD PTR [edi+0x45b19e42]
  41d583:	retf   
  41d584:	stc    
  41d585:	inc    edx
  41d586:	xchg   esi,eax
  41d587:	or     BYTE PTR [si-0x42],dh
  41d58b:	adc    al,0xb7
  41d58d:	ror    ecx,1
  41d58f:	lods   eax,DWORD PTR ds:[esi]
  41d590:	jno    0x41d563
  41d592:	inc    ebp
  41d593:	rol    dl,0x16
  41d596:	adc    bh,BYTE PTR [ebx+edx*2]
  41d599:	(bad)  
  41d59a:	lock hlt 
  41d59c:	pop    eax
  41d59d:	adc    BYTE PTR [ecx-0x3b8ee5f0],bl
  41d5a3:	rep ins BYTE PTR es:[edi],dx
  41d5a5:	mov    al,0xa1
  41d5a7:	ins    BYTE PTR es:[edi],dx
  41d5a8:	and    eax,0x68a0dc2
  41d5ad:	cmp    edi,DWORD PTR [ecx+ebp*1]
  41d5b0:	leave  
  41d5b1:	icebp  
  41d5b2:	pushf  
  41d5b3:	aas    
  41d5b4:	test   eax,0x82e70b1f
  41d5b9:	inc    esi
  41d5ba:	inc    ecx
  41d5bb:	xchg   edx,eax
  41d5bc:	add    BYTE PTR [eax],ah
  41d5be:	cmp    DWORD PTR [eax],0xc7d99110
  41d5c4:	mov    al,0xfe
  41d5c6:	loope  0x41d5c6
  41d5c8:	sub    eax,0x1ea2c933
  41d5cd:	into   
  41d5ce:	mov    DWORD PTR [ecx],eax
  41d5d0:	fwait
  41d5d1:	cmp    esi,ebx
  41d5d3:	jg     0x41d5df
  41d5d5:	xchg   BYTE PTR es:[edx],ch
  41d5d8:	dec    ecx
  41d5d9:	mov    gs:0x88697b8a,al
  41d5df:	xor    dl,bh
  41d5e1:	xchg   esp,eax
  41d5e2:	add    eax,0x861343c9
  41d5e7:	and    bl,BYTE PTR [edx+0x49]
  41d5ea:	jmp    DWORD PTR [edi]
  41d5ec:	and    BYTE PTR [edx+0x5],ah
  41d5ef:	pop    ss
  41d5f0:	cmp    cl,BYTE PTR [ebx+eax*2+0x4b]
  41d5f4:	adc    BYTE PTR [eax+0x1e530857],bh
  41d5fa:	xchg   ecx,eax
  41d5fb:	xchg   ebx,eax
  41d5fc:	(bad)  
  41d5fe:	outs   dx,DWORD PTR ds:[esi]
  41d5ff:	cmp    esp,DWORD PTR [ebx+0x76]
  41d602:	ins    BYTE PTR es:[edi],dx
  41d603:	(bad)  
  41d604:	pop    ds
  41d605:	rol    BYTE PTR [edi+ebp*1-0x6c],cl
  41d609:	das    
  41d60a:	pop    ds
  41d60b:	push   ebx
  41d60c:	retf   0xa333
  41d60f:	mov    eax,0xd86940de
  41d614:	fwait
  41d615:	xor    BYTE PTR [edx+0x0],0x52
  41d619:	sub    DWORD PTR [ebp+eiz*2-0x21],ecx
  41d61d:	fs scas eax,DWORD PTR es:[edi]
  41d61f:	aad    0xff
  41d621:	mov    bl,0x52
  41d623:	pop    esp
  41d624:	xchg   DWORD PTR [edx-0x3],esi
  41d627:	jmp    0xb2e118a3
  41d62c:	in     al,dx
  41d62d:	pop    edx
  41d62e:	loop   0x41d5b3
  41d630:	gs das 
  41d632:	inc    ecx
  41d633:	dec    edi
  41d634:	stc    
  41d635:	pop    ebx
  41d636:	fwait
  41d637:	(bad)  
  41d638:	mov    ch,0x73
  41d63a:	inc    ebx
  41d63b:	dec    edi
  41d63c:	dec    esi
  41d63d:	pop    esi
  41d63e:	sbb    BYTE PTR [esi],0x30
  41d641:	or     eax,0x4f709634
  41d646:	xor    ecx,0x8a5d6c40
  41d64c:	dec    ebx
  41d64d:	(bad)  
  41d64e:	and    al,0x87
  41d650:	xchg   edi,eax
  41d651:	sub    dl,BYTE PTR [edx-0x27]
  41d654:	inc    edx
  41d655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d656:	or     bh,cl
  41d658:	xor    eax,DWORD PTR [ebp-0x769a31b9]
  41d65e:	mov    eax,0x1b859cb4
  41d663:	push   ebx
  41d664:	inc    edx
  41d665:	movq   mm6,mm3
  41d668:	bound  ecx,QWORD PTR [ecx-0x6a]
  41d66b:	pop    es
  41d66c:	pop    edi
  41d66d:	aad    0x8a
  41d66f:	and    eax,0x2efa00eb
  41d674:	(bad)  
  41d675:	mov    BYTE PTR [edi-0x38],dl
  41d678:	ins    BYTE PTR es:[edi],dx
  41d679:	pop    ecx
  41d67a:	add    edx,esp
  41d67c:	push   ecx
  41d67d:	pop    es
  41d67e:	ret    0x6d72
  41d681:	lea    ecx,[esi+0x5c]
  41d684:	add    ax,0x6910
  41d688:	xchg   BYTE PTR ds:0xf385dff5,bl
  41d68e:	push   ebx
  41d68f:	lods   al,BYTE PTR ds:[esi]
  41d690:	ja     0x41d6a4
  41d692:	icebp  
  41d693:	pushf  
  41d694:	xchg   bl,bl
  41d696:	add    cl,al
  41d698:	mov    ds:0x1103e826,al
  41d69d:	jp     0x41d6c8
  41d69f:	cmc    
  41d6a0:	mov    ebp,0xcf0a6371
  41d6a5:	in     al,0xd1
  41d6a7:	cmp    al,0x84
  41d6a9:	std    
  41d6aa:	xlat   BYTE PTR ds:[ebx]
  41d6ab:	mov    bh,0x29
  41d6ad:	js     0x41d6ce
  41d6af:	jae    0x41d633
  41d6b1:	jno    0x41d660
  41d6b3:	cs leave 
  41d6b5:	push   edx
  41d6b6:	pop    ds
  41d6b7:	mov    ch,0xe8
  41d6b9:	jge    0x41d72f
  41d6bb:	out    0xc4,eax
  41d6bd:	cmp    eax,0x9c11863f
  41d6c2:	xor    eax,DWORD PTR [ecx+0x4b]
  41d6c5:	xchg   edi,eax
  41d6c6:	add    bh,BYTE PTR [ebx]
  41d6c8:	dec    edx
  41d6c9:	push   ebx
  41d6ca:	push   ecx
  41d6cb:	adc    ebx,ebx
  41d6cd:	jl     0x41d6c4
  41d6cf:	dec    esi
  41d6d0:	push   cs
  41d6d1:	(bad)  
  41d6d2:	neg    bl
  41d6d4:	adc    al,0xca
  41d6d6:	(bad)  
  41d6d8:	pop    es
  41d6d9:	jmp    0x13ed:0x6cc059e4
  41d6e0:	jo     0x41d68c
  41d6e2:	jecxz  0x41d6ba
  41d6e4:	fisub  WORD PTR [eax-0x40d73103]
  41d6ea:	das    
  41d6eb:	sbb    al,0x9f
  41d6ed:	mov    ds:0x7b5d615d,eax
  41d6f2:	iret   
  41d6f3:	and    al,0x2e
  41d6f5:	scas   al,BYTE PTR es:[edi]
  41d6f6:	ja     0x41d6ff
  41d6f8:	push   edx
  41d6f9:	cmp    ebx,esi
  41d6fb:	cmc    
  41d6fc:	test   DWORD PTR [ecx],ebp
  41d6fe:	mov    cl,0xfe
  41d700:	jae    0x41d71a
  41d702:	bound  esi,QWORD PTR [esi-0x2a1843ae]
  41d708:	(bad)  
  41d709:	pushf  
  41d70a:	xor    al,0x4c
  41d70c:	aad    0x87
  41d70e:	retf   
  41d70f:	push   0x67c0fb42
  41d714:	jmp    FWORD PTR [ebx-0x73]
  41d717:	mov    DWORD PTR [ecx+0x5e038aaf],edx
  41d71d:	xchg   edi,eax
  41d71e:	dec    ebp
  41d71f:	push   eax
  41d720:	add    eax,0xb0757390
  41d725:	(bad)  
  41d726:	mov    eax,0xcf279da5
  41d72b:	lahf   
  41d72c:	add    DWORD PTR [ebp+0x3d],edx
  41d72f:	and    edx,DWORD PTR [ebx]
  41d731:	ins    DWORD PTR es:[edi],dx
  41d732:	mov    bl,0xa8
  41d734:	clc    
  41d735:	or     edx,DWORD PTR [ebx+0x4d]
  41d738:	stc    
  41d739:	add    al,0x64
  41d73b:	inc    ebx
  41d73c:	push   cs
  41d73d:	ss sbb eax,0xe784df8a
  41d743:	mov    gs,ecx
  41d745:	push   esp
  41d746:	jne    0x41d788
  41d748:	lock outs dx,DWORD PTR ds:[esi]
  41d74a:	cmp    DWORD PTR [ecx+0x2b],ebp
  41d74d:	jmp    0x31c54fab
  41d752:	and    al,0x3d
  41d754:	or     edi,esi
  41d756:	pushf  
  41d757:	inc    edi
  41d758:	mov    ds:0x1c085a94,al
  41d75d:	fs xor cl,dl
  41d760:	rol    DWORD PTR [esi+0x4663de37],1
  41d766:	in     al,0x40
  41d768:	loope  0x41d7d5
  41d76a:	push   ss
  41d76b:	sub    al,0x36
  41d76d:	xor    al,0x56
  41d76f:	add    DWORD PTR [ecx-0x48],0x11
  41d773:	ror    BYTE PTR [edi+edx*1-0x60],cl
  41d777:	xchg   BYTE PTR [eax],dl
  41d779:	adc    al,0x83
  41d77b:	inc    esp
  41d77c:	mov    BYTE PTR [edi-0x4ad29fa8],ch
  41d782:	pop    ecx
  41d783:	imul   eax,DWORD PTR [ebx+edx*4+0x5d59cf79],0xffffff8e
  41d78b:	or     BYTE PTR [edx+0x64],bh
  41d78e:	pop    ss
  41d78f:	lahf   
  41d790:	outs   dx,DWORD PTR ds:[esi]
  41d791:	jno    0x41d76f
  41d793:	std    
  41d794:	jne    0x41d78f
  41d796:	push   ss
  41d797:	test   al,0x83
  41d799:	xchg   ebp,eax
  41d79a:	jmp    0x5057f977
  41d79f:	aad    0x92
  41d7a1:	add    al,0x23
  41d7a3:	loope  0x41d7b6
  41d7a5:	adc    BYTE PTR [esi+0x20],bh
  41d7a8:	xlat   BYTE PTR ds:[ebx]
  41d7a9:	pop    ecx
  41d7aa:	xchg   edx,ecx
  41d7ac:	fbstp  TBYTE PTR ds:0x993c6133
  41d7b2:	ss aam 0xa2
  41d7b5:	mov    edx,0x3e3ce504
  41d7ba:	xchg   esp,eax
  41d7bb:	sahf   
  41d7bc:	pop    esp
  41d7bd:	sar    ecx,1
  41d7bf:	add    edi,ebp
  41d7c1:	pop    es
  41d7c2:	pushf  
  41d7c3:	mov    dh,0xdf
  41d7c5:	cdq    
  41d7c6:	(bad)  
  41d7c8:	push   esp
  41d7c9:	test   al,0x47
  41d7cb:	aam    0xb8
  41d7cd:	scas   eax,DWORD PTR es:[edi]
  41d7ce:	not    DWORD PTR [edi]
  41d7d0:	cmp    DWORD PTR [ebp+ebp*2+0xc],0x61412aa6
  41d7d8:	scas   al,BYTE PTR es:[edi]
  41d7d9:	faddp  st(4),st
  41d7db:	push   0x8cb208d5
  41d7e0:	sub    edi,edx
  41d7e2:	mov    ah,0x58
  41d7e4:	cld    
  41d7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e6:	int    0xf9
  41d7e8:	leave  
  41d7e9:	dec    ebp
  41d7ea:	push   esi
  41d7eb:	popa   
  41d7ec:	adc    bh,BYTE PTR [ebp+0x3d]
  41d7ef:	jle    0x41d784
  41d7f1:	inc    edx
  41d7f2:	xor    BYTE PTR [edi+ebp*8+0x624bea11],ch
  41d7f9:	fwait
  41d7fa:	cmc    
  41d7fb:	mov    eax,0x30c0b8dd
  41d800:	sub    al,0xc
  41d802:	xlat   BYTE PTR ds:[ebx]
  41d803:	lods   eax,DWORD PTR ds:[esi]
  41d804:	sub    al,0xc9
  41d806:	push   esi
  41d807:	push   ecx
  41d808:	pop    ebx
  41d809:	sbb    ecx,DWORD PTR [esi]
  41d80b:	xchg   ebp,eax
  41d80c:	mov    dl,0x69
  41d80e:	mov    cl,0xb1
  41d810:	lods   al,BYTE PTR ds:[esi]
  41d811:	outs   dx,BYTE PTR ds:[esi]
  41d812:	sahf   
  41d813:	mov    esp,0xa68e0de5
  41d818:	(bad)  
  41d819:	sti    
  41d81a:	sbb    al,0xc6
  41d81c:	pop    esp
  41d81d:	jnp    0x41d87c
  41d81f:	pop    esi
  41d820:	xchg   esp,eax
  41d821:	out    dx,eax
  41d822:	inc    eax
  41d823:	rcr    edi,0x2c
  41d826:	adc    eax,0x28914ec2
  41d82b:	xor    esp,0xffffffdd
  41d82e:	cs dec ecx
  41d830:	mov    dh,cl
  41d832:	xchg   edi,eax
  41d833:	sbb    al,0xe7
  41d835:	mov    ah,0x87
  41d837:	rcr    BYTE PTR [edi-0x331d8dcd],0x78
  41d83e:	pusha  
  41d83f:	(bad)
  41d842:	dec    DWORD PTR [esi+0x6a]
  41d845:	jbe    0x41d831
  41d847:	fucom  st(0)
  41d849:	and    ebp,DWORD PTR [edx-0x61]
  41d84c:	mov    edx,0xa12d92ee
  41d851:	push   0xffffffec
  41d853:	fisub  WORD PTR [esp+esi*4]
  41d856:	push   eax
  41d857:	jle    0x41d854
  41d859:	dec    edx
  41d85a:	fisttp DWORD PTR [ecx+ecx*4+0x15fdd140]
  41d861:	mov    eax,0x6b086f37
  41d866:	into   
  41d867:	dec    esi
  41d868:	fdivr  DWORD PTR ds:0xbb6e6272
  41d86e:	mov    al,0x70
  41d870:	sbb    BYTE PTR [ebx+edx*8+0x373d8fe6],dh
  41d877:	pop    eax
  41d878:	pushf  
  41d879:	bound  ebp,QWORD PTR [eax+esi*8]
  41d87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87d:	push   0xffffffae
  41d87f:	xor    ch,ah
  41d881:	mov    al,ds:0xf8de8c9f
  41d886:	fnstcw WORD PTR [edx]
  41d888:	adc    DWORD PTR [edi+0x2930175a],0xffffffb8
  41d88f:	dec    esi
  41d890:	jmp    0x86af:0xfa05e61f
  41d897:	xchg   esi,eax
  41d899:	call   0xf359ffdb
  41d89e:	mov    ebx,0xe2e8a219
  41d8a3:	or     edx,esp
  41d8a5:	loop   0x41d870
  41d8a7:	mov    ch,0x71
  41d8a9:	jl     0x41d835
  41d8ab:	adc    al,0x95
  41d8ad:	jge    0x41d845
  41d8af:	test   al,0x9d
  41d8b1:	fdiv   DWORD PTR fs:[edx+0x7b29870]
  41d8b8:	mov    BYTE PTR [ebx+0x54],dh
  41d8bb:	and    DWORD PTR [ebp+0xe],esi
  41d8be:	mov    ah,0x16
  41d8c0:	mov    al,BYTE PTR [ebx+edx*8-0x7b]
  41d8c4:	outs   dx,BYTE PTR ds:[esi]
  41d8c5:	and    DWORD PTR [eax+0x1d],eax
  41d8c8:	ficomp WORD PTR [edi]
  41d8ca:	jnp    0x41d8ef
  41d8cc:	sti    
  41d8cd:	jge    0x41d91b
  41d8cf:	jl     0x41d93a
  41d8d1:	fwait
  41d8d2:	popf   
  41d8d3:	in     eax,dx
  41d8d4:	pushf  
  41d8d5:	iret   
  41d8d6:	inc    ebp
  41d8d7:	mov    ch,0xee
  41d8d9:	sbb    DWORD PTR [edi],ebp
  41d8db:	mov    esi,DWORD PTR [edx+0x52]
  41d8de:	ror    DWORD PTR [esi],cl
  41d8e0:	mov    ah,0xfe
  41d8e2:	xor    esp,DWORD PTR [eax+ebp*4]
  41d8e5:	push   edx
  41d8e6:	mul    BYTE PTR [ebx-0x6e55dd87]
  41d8ec:	test   eax,0x159229df
  41d8f1:	push   edi
  41d8f2:	sub    eax,0x89160f5f
  41d8f7:	mov    ds:0x64ab261b,eax
  41d8fc:	inc    ebx
  41d8fd:	cs fmul st(1),st
  41d900:	pop    ss
  41d901:	mov    esp,0x1da9ae93
  41d906:	int    0x5
  41d908:	dec    esp
  41d909:	scas   eax,DWORD PTR es:[edi]
  41d90a:	mov    cs:0xacc787a4,eax
  41d910:	xchg   esi,eax
  41d911:	loop   0x41d906
  41d913:	inc    eax
  41d914:	stc    
  41d915:	sti    
  41d916:	sar    esp,0xa6
  41d919:	gs ins DWORD PTR es:[edi],dx
  41d91b:	mov    ds:0x736b659,al
  41d920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d921:	adc    eax,0x4b154354
  41d926:	cmp    eax,0x8f76fd55
  41d92b:	(bad)  
  41d92c:	imul   edx,DWORD PTR cs:[esi-0x4a],0x28
  41d931:	divps  xmm1,XMMWORD PTR [edx+0x7744853e]
  41d938:	popa   
  41d939:	sub    al,0xe6
  41d93b:	pop    ebp
  41d93c:	xchg   ebp,eax
  41d93d:	pop    edx
  41d93e:	imul   edi,DWORD PTR [edi+0x2606b87c],0xffffffbf
  41d945:	in     al,dx
  41d946:	popf   
  41d947:	loope  0x41d972
  41d949:	or     edx,DWORD PTR [edi]
  41d94b:	pop    es
  41d94c:	leave  
  41d94d:	xchg   ebp,eax
  41d94e:	daa    
  41d94f:	sub    al,0x56
  41d951:	sbb    DWORD PTR [ebx],esi
  41d953:	xchg   edi,eax
  41d954:	inc    edx
  41d955:	loopne 0x41d91a
  41d957:	mov    bl,0x51
  41d959:	outs   dx,DWORD PTR ds:[esi]
  41d95a:	ins    BYTE PTR es:[edi],dx
  41d95b:	aam    0x87
  41d95d:	test   ecx,esp
  41d95f:	cs xchg esi,eax
  41d961:	add    ecx,ebp
  41d963:	lock sti 
  41d965:	out    0xe9,al
  41d967:	mov    ds:0x36babd33,al
  41d96c:	add    ecx,ebp
  41d96e:	or     BYTE PTR [ecx-0x5f],dh
  41d971:	(bad)  
  41d972:	mov    ch,0x9
  41d974:	fs xchg edi,eax
  41d976:	inc    ebx
  41d977:	mov    ah,0x2e
  41d979:	sar    dl,0x94
  41d97c:	xlat   BYTE PTR ds:[ebx]
  41d97d:	hlt    
  41d97e:	arpl   WORD PTR [edi+ecx*1],ax
  41d981:	daa    
  41d982:	sbb    eax,0x9884b36b
  41d987:	mov    BYTE PTR [esi-0x24a7c747],bh
  41d98d:	inc    esp
  41d98e:	jecxz  0x41d98b
  41d990:	daa    
  41d991:	jge    0x41d9a8
  41d993:	sbb    DWORD PTR [edi],0xd046eedd
  41d999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d99a:	sub    DWORD PTR [ebp-0x72],ecx
  41d99d:	sub    esi,DWORD PTR [edx+0x8]
  41d9a0:	sub    eax,0x7d187d89
  41d9a5:	mov    ds:0xaf990155,al
  41d9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ac:	push   ds
  41d9ad:	inc    esi
  41d9ae:	push   ecx
  41d9af:	fnstenv [edx]
  41d9b1:	(bad)  
  41d9b2:	sbb    DWORD PTR [esi],ebx
  41d9b4:	(bad)  
  41d9b5:	sbb    ah,BYTE PTR [edi-0x31b71b91]
  41d9bb:	mov    esp,0xbbd1e2fe
  41d9c0:	(bad)  
  41d9c1:	mov    ?,WORD PTR [eax-0x17]
  41d9c4:	pusha  
  41d9c5:	test   BYTE PTR [ebx-0x3c],dh
  41d9c8:	(bad)  
  41d9c9:	jb     0x41da3d
  41d9cb:	es imul ebx,eax,0x74413c23
  41d9d2:	add    cl,ah
  41d9d4:	pop    ebx
  41d9d5:	bound  ecx,QWORD PTR [edx-0x75]
  41d9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9da:	mov    edx,0xef556b82
  41d9df:	lds    edi,FWORD PTR [eax+ecx*1-0x26]
  41d9e3:	inc    ebp
  41d9e4:	iret   
  41d9e5:	jns    0x41da3f
  41d9e7:	mov    al,ds:0x153313ac
  41d9ec:	jbe    0x41d9e6
  41d9ee:	out    0x9c,al
  41d9f0:	jnp    0x41da6e
  41d9f2:	jmp    0x4e26:0xd817637b
  41d9f9:	inc    BYTE PTR [ecx]
  41d9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9fc:	int    0xf5
  41d9fe:	data16 cli 
  41da00:	mov    bl,0xbc
  41da02:	pop    edx
  41da03:	stos   BYTE PTR es:[edi],al
  41da04:	aas    
  41da05:	xchg   edi,eax
  41da06:	test   DWORD PTR [ecx+0x74e14eef],ecx
  41da0c:	mov    edx,0x518da7e0
  41da11:	add    al,0xab
  41da13:	fdivr  st(4),st
  41da15:	and    al,0x77
  41da17:	pop    esp
  41da18:	lods   eax,DWORD PTR ds:[esi]
  41da19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da1a:	dec    edi
  41da1b:	xchg   edx,eax
  41da1c:	adc    edi,0x27
  41da1f:	popf   
  41da20:	lods   al,BYTE PTR ds:[esi]
  41da21:	add    eax,0xeae9d6ef
  41da26:	repnz cmc 
  41da28:	ja     0x41d9fb
  41da2a:	inc    ecx
  41da2b:	in     al,0x86
  41da2d:	fcmovnb st,st(4)
  41da2f:	into   
  41da30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da31:	cmp    al,0x6d
  41da33:	aad    0x2d
  41da35:	jns    0x41da21
  41da37:	xor    cl,BYTE PTR [esi-0x8c49399]
  41da3d:	shl    BYTE PTR [ebx+edi*8-0x47a8ca2f],1
  41da44:	inc    eax
  41da45:	retf   
  41da46:	pop    ecx
  41da47:	adc    al,0xe0
  41da49:	scas   al,BYTE PTR es:[edi]
  41da4a:	cmp    DWORD PTR [ecx],0x7ce73e4d
  41da50:	xchg   DWORD PTR [ebx],esi
  41da52:	lahf   
  41da53:	fstp   QWORD PTR [eax-0x5b]
  41da56:	stc    
  41da57:	jns    0x41d9f3
  41da59:	sub    al,dh
  41da5b:	mov    ch,0x26
  41da5d:	lods   al,BYTE PTR ds:[esi]
  41da5e:	mov    ecx,0xe4c46f92
  41da63:	jmp    0x9d3d:0xf504a4da
  41da6a:	push   cs
  41da6b:	xor    BYTE PTR [ebx],dl
  41da6d:	xlat   BYTE PTR ds:[ebx]
  41da6e:	loop   0x41da8e
  41da70:	pop    ebp
  41da71:	dec    esi
  41da72:	out    dx,al
  41da73:	xor    edi,DWORD PTR [ecx+0x1e]
  41da76:	pop    ebp
  41da77:	je     0x41da29
  41da79:	xor    ch,BYTE PTR [ecx+0x3a]
  41da7c:	or     ch,0x9a
  41da7f:	dec    ecx
  41da80:	mov    ecx,0xf870cfcd
  41da85:	(bad)  
  41da86:	aas    
  41da87:	lods   al,BYTE PTR ds:[esi]
  41da88:	xchg   esi,eax
  41da89:	mul    BYTE PTR [di]
  41da8c:	jg     0x41da3c
  41da8e:	pop    esi
  41da8f:	lds    esp,FWORD PTR [ebx-0xeb3a0f]
  41da95:	sahf   
  41da96:	sbb    bh,BYTE PTR [edx-0x1e24a531]
  41da9c:	adc    BYTE PTR [edx+0x1af7707e],bh
  41daa2:	scas   eax,DWORD PTR es:[edi]
  41daa3:	sbb    ebx,DWORD PTR [ebx+eiz*1+0x2d4c529b]
  41daaa:	adc    eax,0xd16f560d
  41daaf:	(bad)  
  41dab0:	adc    dl,BYTE PTR [esi-0x10]
  41dab3:	scas   al,BYTE PTR es:[edi]
  41dab4:	sub    BYTE PTR [ebx+ebx*2-0x79f00363],0xef
  41dabc:	js     0x41da4e
  41dabe:	in     al,dx
  41dabf:	out    dx,al
  41dac0:	pop    esi
  41dac1:	mov    eax,ds:0x13dc7f57
  41dac6:	inc    edx
  41dac7:	mov    eax,0xb399eb38
  41dacc:	sub    bl,BYTE PTR [ecx+0x74]
  41dacf:	fdiv   QWORD PTR [eax]
  41dad1:	ins    BYTE PTR es:[edi],dx
  41dad2:	sub    eax,0x6fdee54a
  41dad7:	sub    dl,BYTE PTR [edx-0x5]
  41dada:	lgs    ecx,FWORD PTR ds:0x5fd21028
  41dae1:	jmp    0x41dacf
  41dae3:	and    DWORD PTR [ecx-0x40],ebx
  41dae6:	jle    0x41dabc
  41dae8:	fsub   DWORD PTR [ecx+0x39bb004c]
  41daee:	pop    ss
  41daef:	push   ebp
  41daf0:	sub    BYTE PTR [ecx+0x53],ch
  41daf3:	mov    ch,0x7c
  41daf5:	cmc    
  41daf6:	mov    ch,0x19
  41daf8:	sbb    DWORD PTR [ecx],edi
  41dafa:	jns    0x41db5c
  41dafc:	xchg   DWORD PTR [ebp+0x70],edi
  41daff:	or     al,0x50
  41db01:	and    ah,BYTE PTR [edx]
  41db03:	inc    edx
  41db04:	(bad)  
  41db05:	sub    dh,BYTE PTR [esp+ecx*2]
  41db08:	mov    eax,ds:0xb05c2460
  41db0d:	sub    al,0x2b
  41db0f:	push   0x18
  41db11:	loop   0x41dadd
  41db13:	add    al,0x78
  41db15:	jae    0x41dac9
  41db17:	and    cl,BYTE PTR [di]
  41db1a:	cwde   
  41db1b:	add    al,0x72
  41db1d:	mov    ds:0x6900eaa1,eax
  41db22:	aad    0x71
  41db24:	addr16 clc 
  41db26:	dec    eax
  41db27:	(bad)  
  41db28:	icebp  
  41db29:	jge    0x41db76
  41db2b:	pop    ss
  41db2c:	mov    ecx,0xf0b351a9
  41db31:	or     eax,0x2b2fa2b0
  41db36:	(bad)  
  41db37:	cmc    
  41db38:	mov    esp,0xddb397b4
  41db3d:	cmp    dh,BYTE PTR [edi+eax*1+0x6b36824c]
  41db44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db45:	cli    
  41db46:	das    
  41db47:	(bad)
  41db4b:	and    bh,BYTE PTR [edi+eax*8-0x23]
  41db4f:	(bad)  
  41db51:	(bad)  
  41db52:	inc    esi
  41db53:	add    BYTE PTR [esi-0xa],bh
  41db56:	les    ebp,FWORD PTR [edx]
  41db58:	popf   
  41db59:	sub    BYTE PTR [esi+edi*8-0x48],al
  41db5d:	in     al,0x24
  41db5f:	jmp    0x41db03
  41db61:	push   edx
  41db62:	fisubr DWORD PTR [ecx+0x6ff43762]
  41db68:	and    eax,DWORD PTR [eax+0x12]
  41db6b:	(bad)  
  41db6c:	dec    ebp
  41db6d:	or     dl,BYTE PTR [esi]
  41db6f:	stos   BYTE PTR es:[edi],al
  41db70:	test   ecx,edx
  41db72:	cwde   
  41db73:	inc    ecx
  41db74:	or     DWORD PTR [ebx-0x53],0xc506d676
  41db7b:	data16 jg 0x41db14
  41db7e:	xchg   DWORD PTR [eax-0x60],edx
  41db81:	jo     0x41dbea
  41db83:	add    DWORD PTR [ecx],0xb7f168d3
  41db89:	xchg   esi,eax
  41db8a:	sbb    eax,0x3ea260a
  41db8f:	pop    esi
  41db90:	mov    al,BYTE PTR [ebx+0x60b4f088]
  41db96:	inc    esp
  41db97:	pop    edx
  41db98:	mov    esi,DWORD PTR [esi+0x1bd9d78f]
  41db9e:	fs and ah,cl
  41dba1:	xor    BYTE PTR [eax-0xd],0xaa
  41dba5:	imul   edx,DWORD PTR [eax-0x7afe10e5],0x2f0b81fd
  41dbaf:	dec    edi
  41dbb0:	dec    eax
  41dbb1:	cmp    DWORD PTR [edi+0x1ed88e28],ebx
  41dbb7:	das    
  41dbb8:	cmp    al,al
  41dbba:	push   edi
  41dbbb:	and    edi,edi
  41dbbd:	push   esp
  41dbbe:	(bad)  [esi]
  41dbc0:	dec    esi
  41dbc1:	stos   DWORD PTR es:[edi],eax
  41dbc2:	pop    ecx
  41dbc3:	sub    eax,0xa273f98b
  41dbc8:	sahf   
  41dbc9:	mov    al,0x93
  41dbcb:	mov    DWORD PTR [ebx+0x581c9f8a],0x22c844d4
  41dbd5:	mov    ah,0x35
  41dbd7:	aam    0xc8
  41dbd9:	cmp    BYTE PTR [ebx],0xfc
  41dbdc:	in     al,0x66
  41dbde:	add    ch,BYTE PTR [eax-0x6e]
  41dbe1:	pop    ebp
  41dbe2:	dec    ebx
  41dbe3:	ret    
  41dbe4:	jmp    0xbd41:0x95f3cce1
  41dbeb:	cwde   
  41dbec:	loope  0x41dc5f
  41dbee:	scas   al,BYTE PTR es:[edi]
  41dbef:	and    ecx,DWORD PTR [ecx]
  41dbf1:	add    eax,0x3cdaf81e
  41dbf6:	cmp    ecx,DWORD PTR [edx]
  41dbf8:	push   edx
  41dbf9:	test   BYTE PTR [ebx],cl
  41dbfb:	jle    0x41dbfc
  41dbfd:	sub    ch,dh
  41dbff:	bnd jno 0x41dc68
  41dc02:	jne    0x41dbff
  41dc04:	push   ss
  41dc05:	push   es
  41dc06:	add    DWORD PTR [edi],0x53fc2f99
  41dc0c:	dec    ebx
  41dc0d:	lea    edx,[esi+eiz*8-0xd2b7526]
  41dc14:	inc    edx
  41dc15:	test   DWORD PTR [eax+0x70],esi
  41dc18:	ret    0x5d84
  41dc1b:	shl    BYTE PTR [edx],0x15
  41dc1e:	mov    cl,0xae
  41dc20:	lea    edi,[ebp+0x19157cc2]
  41dc26:	nop
  41dc27:	aam    0xda
  41dc29:	leave  
  41dc2a:	mov    al,0x41
  41dc2c:	xlat   BYTE PTR ds:[ebx]
  41dc2d:	jmp    0x80c7:0xfd700349
  41dc34:	adc    eax,0x21844fc8
  41dc39:	and    bl,BYTE PTR [eax]
  41dc3b:	xor    ebx,ebx
  41dc3d:	ss push esi
  41dc3f:	sub    ah,BYTE PTR [ebx+0x62eadb27]
  41dc45:	jmp    0x2491d425
  41dc4a:	addr16 iret 
  41dc4c:	clc    
  41dc4d:	scas   al,BYTE PTR es:[edi]
  41dc4e:	cmp    ecx,DWORD PTR [ecx-0x76526875]
  41dc54:	add    BYTE PTR [ecx],bh
  41dc56:	nop
  41dc57:	inc    esp
  41dc58:	ss clc 
  41dc5a:	lahf   
  41dc5b:	and    al,0xca
  41dc5d:	inc    esp
  41dc5e:	add    edi,DWORD PTR [edi+ebp*8]
  41dc61:	out    dx,eax
  41dc62:	in     al,0xc0
  41dc64:	pusha  
  41dc65:	bound  ebp,QWORD PTR [ebp+0x7a]
  41dc68:	mov    bh,0x4f
  41dc6a:	xchg   esi,eax
  41dc6b:	aas    
  41dc6c:	fisttp DWORD PTR [eax+ebp*2+0x5c2b3658]
  41dc73:	mul    BYTE PTR [ecx+ecx*4+0x5099a9bd]
  41dc7a:	push   edi
  41dc7b:	xchg   ebx,eax
  41dc7c:	fistp  WORD PTR [edi+0x3c]
  41dc7f:	xchg   esp,eax
  41dc80:	int    0x5a
  41dc82:	pushf  
  41dc83:	push   edx
  41dc84:	xchg   ebx,eax
  41dc85:	bound  edi,QWORD PTR [ebx+0x719f1c50]
  41dc8b:	mov    cl,0xd6
  41dc8d:	mov    WORD PTR [ebx-0x63],ss
  41dc90:	push   0x6a
  41dc92:	ins    BYTE PTR es:[edi],dx
  41dc93:	fxch   st(6)
  41dc95:	sub    ebp,esp
  41dc97:	push   edx
  41dc98:	xchg   BYTE PTR [ebx+0x68],dh
  41dc9b:	mov    ebx,0xca2dabe2
  41dca0:	not    al
  41dca2:	add    BYTE PTR [edi],0xa1
  41dca5:	push   eax
  41dca6:	call   0xd210:0x5b855493
  41dcad:	test   eax,0x2007a5b9
  41dcb2:	stos   DWORD PTR es:[edi],eax
  41dcb3:	mov    ecx,0xfd2e1ff2
  41dcb8:	xchg   edi,eax
  41dcb9:	and    BYTE PTR [ebp+0x49],al
  41dcbc:	fwait
  41dcbd:	je     0x41dc92
  41dcbf:	sbb    DWORD PTR [ebx],edx
  41dcc1:	int3   
  41dcc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc3:	mov    ?,ebx
  41dcc5:	fcomp  st(6)
  41dcc7:	xchg   BYTE PTR [edi-0x25],al
  41dcca:	pop    ds
  41dccb:	pop    edi
  41dccc:	mov    bh,0x1e
  41dcce:	test   al,0x35
  41dcd0:	ins    BYTE PTR es:[edi],dx
  41dcd1:	ds xor eax,0x226a4bd6
  41dcd7:	xchg   BYTE PTR [eax],bl
  41dcd9:	call   0x1e82811f
  41dcde:	ret    0x1070
  41dce1:	lock int3 
  41dce3:	xor    BYTE PTR [eax],bl
  41dce5:	push   0xd78597c2
  41dcea:	dec    ebx
  41dceb:	pusha  
  41dcec:	jbe    0x41dd20
  41dcee:	push   0x42
  41dcf0:	das    
  41dcf1:	test   ebx,ecx
  41dcf3:	cdq    
  41dcf4:	and    eax,DWORD PTR [ebx+0x553b2e47]
  41dcfa:	or     BYTE PTR [ebx-0x65177f65],bl
  41dd00:	mul    bh
  41dd02:	stc    
  41dd03:	out    0x4f,eax
  41dd05:	das    
  41dd06:	inc    esi
  41dd07:	sub    DWORD PTR gs:[eax+0xdfc9fcb],ebx
  41dd0e:	stc    
  41dd0f:	aas    
  41dd10:	xor    al,0x25
  41dd12:	out    dx,al
  41dd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd14:	outs   dx,BYTE PTR ds:[esi]
  41dd15:	add    ah,BYTE PTR [ebp-0x30fe0ec3]
  41dd1b:	aaa    
  41dd1c:	es out dx,eax
  41dd1e:	add    bl,ah
  41dd20:	push   ebp
  41dd21:	(bad)  [edi-0x61c2b5cf]
  41dd27:	mov    ebx,ecx
  41dd29:	jnp    0x41dce4
  41dd2b:	pop    ebp
  41dd2c:	nop
  41dd2d:	jo     0x41dd75
  41dd2f:	mov    ch,0x2e
  41dd31:	das    
  41dd32:	outs   dx,DWORD PTR ds:[esi]
  41dd33:	dec    edi
  41dd34:	stos   BYTE PTR es:[edi],al
  41dd35:	inc    ebp
  41dd36:	imul   edi,DWORD PTR [eax],0xfd748e8e
  41dd3c:	xor    ch,cl
  41dd3e:	push   ds
  41dd3f:	pop    edx
  41dd40:	cmp    al,0x91
  41dd42:	xchg   edx,eax
  41dd43:	sahf   
  41dd44:	fbstp  TBYTE PTR [ebx+esi*8]
  41dd47:	sti    
  41dd48:	pop    ss
  41dd49:	push   0xffffffe3
  41dd4b:	mov    al,0xe
  41dd4d:	inc    ebp
  41dd4e:	dec    esi
  41dd4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd50:	jl     0x41dd46
  41dd52:	fisttp WORD PTR [ecx+0x6b]
  41dd55:	xor    eax,0x5a236e4d
  41dd5a:	inc    edx
  41dd5b:	xor    ebx,eax
  41dd5d:	(bad)  
  41dd5e:	mov    ebx,0x59fbc6c9
  41dd63:	(bad)  
  41dd65:	inc    ebp
  41dd66:	dec    ebp
  41dd67:	xchg   ecx,esp
  41dd69:	mov    ebp,0x8d471216
  41dd6e:	xor    ebp,0xaffa54d4
  41dd74:	into   
  41dd75:	ja     0x41dd0f
  41dd77:	test   edx,esp
  41dd79:	shr    BYTE PTR [eax-0x1309e1f2],1
  41dd7f:	push   ebp
  41dd80:	outs   dx,DWORD PTR ds:[si]
  41dd82:	jnp    0x41dd94
  41dd84:	xchg   dh,dh
  41dd86:	jg     0x41dd9f
  41dd88:	sahf   
  41dd89:	mov    ds:0xbb37d8ad,eax
  41dd8e:	test   eax,0x6061f4ca
  41dd93:	mov    esp,0x7dfff032
  41dd98:	mov    eax,0xb1020459
  41dd9d:	sar    DWORD PTR [edx],cl
  41dd9f:	jge    0x41de15
  41dda1:	mov    edx,0x727b78e4
  41dda6:	cmp    eax,0x70bf201f
  41ddab:	pop    ecx
  41ddac:	mov    cl,0x19
  41ddae:	dec    eax
  41ddaf:	dec    edx
  41ddb0:	cmp    ch,cl
  41ddb2:	arpl   WORD PTR [esi+0x4a],di
  41ddb5:	repz push esp
  41ddb7:	push   ds
  41ddb8:	jno    0x41dd8e
  41ddba:	mov    ecx,0xfe93692e
  41ddbf:	or     al,0x7a
  41ddc1:	inc    esi
  41ddc2:	mov    al,0x77
  41ddc4:	out    0xdb,al
  41ddc6:	mov    edx,DWORD PTR [ecx]
  41ddc8:	dec    esi
  41ddc9:	rcl    DWORD PTR [ebx],1
  41ddcb:	dec    ecx
  41ddcc:	or     BYTE PTR [esi+eiz*2+0x586fb3a4],bl
  41ddd3:	mov    eax,0x304f620b
  41ddd8:	adc    al,0x4a
  41ddda:	int3   
  41dddb:	mov    edx,0xff971dbd
  41dde0:	xchg   esi,eax
  41dde1:	hlt    
  41dde2:	pop    es
  41dde3:	std    
  41dde4:	mov    DWORD PTR [ecx+0x75],ebx
  41dde7:	sub    DWORD PTR [ebp+0x441fda9],edx
  41dded:	int    0x42
  41ddef:	adc    eax,0xf02a5fc
  41ddf4:	call   0x1e98:0x7874f7a2
  41ddfb:	outs   dx,BYTE PTR ds:[esi]
  41ddfc:	pop    ss
  41ddfd:	aad    0x58
  41ddff:	jl     0x41dde6
  41de01:	lds    edi,FWORD PTR [edi+0x7b]
  41de04:	(bad)  
  41de05:	push   esp
  41de06:	adc    eax,0x6f89cfbf
  41de0b:	xchg   DWORD PTR [ecx+edi*8-0x3c],esi
  41de0f:	aas    
  41de10:	mov    esp,0x18c8c810
  41de15:	mov    bl,BYTE PTR [edx+eiz*1]
  41de18:	test   al,0x7b
  41de1a:	and    BYTE PTR [edx+ebx*2-0x729c8b2f],dl
  41de21:	scas   eax,DWORD PTR es:[edi]
  41de22:	pop    ss
  41de23:	push   0x675db659
  41de28:	sub    ebp,edi
  41de2a:	arpl   WORD PTR [edx-0x29963f74],ax
  41de30:	mov    ecx,0xc5b49ce8
  41de35:	enter  0xae5d,0x95
  41de39:	jle    0x41de75
  41de3b:	pushf  
  41de3c:	std    
  41de3d:	or     edx,DWORD PTR [edx-0x511911fe]
  41de43:	sub    BYTE PTR [ebx+0x56d7d43b],dh
  41de49:	sar    DWORD PTR [esp+eiz*8+0x5d],1
  41de4d:	es sbb bh,al
  41de50:	(bad)  
  41de51:	icebp  
  41de52:	adc    ebx,edx
  41de54:	imul   ecx,DWORD PTR [eax+0x748bef4e],0xffffffd7
  41de5b:	add    eax,DWORD PTR [ebx-0x77]
  41de5e:	pop    ss
  41de5f:	sub    DWORD PTR [edi],0xffffffe3
  41de62:	mov    al,0xf8
  41de64:	cmp    edx,edx
  41de66:	outs   dx,BYTE PTR ds:[esi]
  41de67:	cmp    bh,BYTE PTR [bp+si+0x4e15]
  41de6c:	sbb    al,0xf3
  41de6e:	retf   
  41de6f:	jno    0x41dede
  41de71:	into   
  41de72:	mov    edx,0xd3720b66
  41de77:	lods   eax,DWORD PTR ds:[esi]
  41de78:	js     0x41de4b
  41de7a:	shr    bl,0x7e
  41de7d:	mov    ebp,DWORD PTR [ebx-0xa]
  41de80:	outs   dx,BYTE PTR ds:[esi]
  41de81:	je     0x41deb4
  41de83:	cmp    eax,0x15617f11
  41de88:	add    DWORD PTR [ecx+ebp*2],ebx
  41de8b:	xor    BYTE PTR [eax+0x3b],ah
  41de8e:	call   0x7c73:0x3034dcf2
  41de95:	(bad)  
  41de96:	push   edx
  41de97:	xchg   ecx,eax
  41de98:	gs int3 
  41de9a:	ror    DWORD PTR [eax+esi*4-0x6c8ccf59],0x4f
  41dea2:	adc    edi,DWORD PTR [ebp+0x5d]
  41dea5:	cld    
  41dea6:	out    0x16,eax
  41dea8:	loop   0x41df22
  41deaa:	imul   edx,DWORD PTR [ebp+0x2e],0x3bc6ed5d
  41deb1:	jae    0x41df1e
  41deb3:	sub    eax,0x7e7ab4dc
  41deb8:	mov    ecx,0x8fb84570
  41debd:	fisubr DWORD PTR [esi]
  41debf:	push   0x1b72689c
  41dec4:	imul   eax,DWORD PTR ds:0xe7af5cc4,0x400ee54b
  41dece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41decf:	mov    bl,0x7b
  41ded1:	jmp    0x41de83
  41ded3:	push   esp
  41ded4:	pop    ebx
  41ded5:	mov    esi,0x46ebb6b2
  41deda:	mov    al,ds:0xd29b75e2
  41dedf:	sbb    edx,eax
  41dee1:	fmulp  st(4),st
  41dee3:	and    al,0xca
  41dee5:	stos   DWORD PTR es:[edi],eax
  41dee6:	sub    DWORD PTR [esi+0x4],ebx
  41dee9:	scas   al,BYTE PTR es:[edi]
  41deea:	inc    eax
  41deeb:	push   ecx
  41deec:	xchg   ebx,eax
  41deed:	rcr    BYTE PTR [edi-0x48],cl
  41def0:	scas   al,BYTE PTR es:[edi]
  41def1:	test   al,0xf9
  41def3:	dec    edi
  41def4:	out    0xf2,eax
  41def6:	ins    BYTE PTR es:[edi],dx
  41def7:	push   ecx
  41def8:	test   BYTE PTR [esi],cl
  41defa:	cmc    
  41defb:	and    ch,BYTE PTR [ebp+0x58]
  41defe:	mov    ah,0xdc
  41df00:	fs retf 
  41df02:	jns    0x41df7b
  41df04:	adc    al,0x9a
  41df06:	cmp    al,0xed
  41df08:	mov    DWORD PTR [eax],0x774dcaa3
  41df0e:	ret    
  41df0f:	daa    
  41df10:	sbb    al,0x43
  41df12:	(bad)  
  41df13:	in     al,dx
  41df14:	dec    esp
  41df15:	mov    ecx,esi
  41df17:	enter  0x53f8,0xcb
  41df1b:	jle    0x41df27
  41df1d:	jmp    0x1612:0xebc20939
  41df24:	jle    0x41df61
  41df26:	daa    
  41df27:	push   esi
  41df28:	xchg   esp,eax
  41df29:	push   cs
  41df2a:	mov    eax,0x5173d9c9
  41df2f:	or     eax,0x476ad866
  41df34:	xor    BYTE PTR [edi+0x5ab4f468],0x20
  41df3b:	jmp    0xc4ffb98b
  41df40:	push   ecx
  41df41:	sbb    al,0xc3
  41df43:	cs cld 
  41df45:	pop    ebp
  41df46:	jle    0x41dfc0
  41df48:	enter  0x11ff,0x69
  41df4c:	mov    ah,0x14
  41df4e:	adc    al,0x36
  41df50:	cwde   
  41df51:	mov    al,0x16
  41df53:	jecxz  0x41df51
  41df55:	lock mov ah,0x4c
  41df58:	cmp    BYTE PTR [edi-0x1c],cl
  41df5b:	adc    eax,0x3eff37a7
  41df60:	add    ch,BYTE PTR ds:[ecx-0xd]
  41df64:	out    dx,al
  41df65:	add    eax,0xc0027145
  41df6a:	loop   0x41dfa0
  41df6c:	popf   
  41df6d:	jecxz  0x41df1d
  41df6f:	mov    bh,0xf1
  41df71:	and    ch,BYTE PTR [edx-0x40]
  41df74:	fsub   QWORD PTR [ebx]
  41df76:	mov    BYTE PTR [esi],cl
  41df78:	stos   DWORD PTR es:[edi],eax
  41df79:	xor    eax,0x68b86f77
  41df7e:	inc    esp
  41df7f:	add    bh,ch
  41df81:	push   cs
  41df82:	mov    ds:0xc1382b74,al
  41df87:	push   edi
  41df88:	mov    ebx,0xe3583465
  41df8d:	dec    ecx
  41df8e:	dec    esp
  41df8f:	arpl   WORD PTR [edx],si
  41df91:	mov    dh,BYTE PTR [eax+0x30]
  41df94:	shl    WORD PTR [ebx+0x34a44e56],0x1d
  41df9c:	ja     0x41dffd
  41df9e:	push   ds
  41df9f:	(bad)  
  41dfa0:	sti    
  41dfa1:	pop    ebp
  41dfa2:	daa    
  41dfa3:	out    dx,eax
  41dfa4:	dec    edx
  41dfa5:	stos   DWORD PTR es:[edi],eax
  41dfa6:	and    DWORD PTR [ebx-0x10bb6a56],ecx
  41dfac:	sbb    al,0x46
  41dfae:	ret    
  41dfaf:	xor    eax,0x8e8e9c22
  41dfb4:	out    0xc0,eax
  41dfb6:	sbb    ch,BYTE PTR [edi]
  41dfb8:	sbb    al,0xe7
  41dfba:	in     al,0xf7
  41dfbc:	popa   
  41dfbd:	(bad)  
  41dfbe:	std    
  41dfbf:	call   0x4706:0xd0e79cab
  41dfc6:	jmp    0x7e5b:0xf7ffb01f
  41dfcd:	sbb    eax,esp
  41dfcf:	add    bh,0xcf
  41dfd2:	mov    ch,0xf7
  41dfd4:	pop    esp
  41dfd5:	sub    dh,BYTE PTR [edx+eax*4+0x4d]
  41dfd9:	pop    ss
  41dfda:	sub    al,0x4b
  41dfdc:	xchg   ebp,eax
  41dfdd:	in     eax,dx
  41dfde:	pushf  
  41dfdf:	hlt    
  41dfe0:	sbb    esi,eax
  41dfe2:	sbb    DWORD PTR [ecx+0x65],ebp
  41dfe5:	push   esp
  41dfe6:	inc    edx
  41dfe7:	stos   BYTE PTR es:[edi],al
  41dfe8:	xchg   ebx,eax
  41dfe9:	lea    eax,[edx]
  41dfeb:	neg    ah
  41dfed:	pop    ecx
  41dfee:	rol    DWORD PTR [eax-0x13],1
  41dff1:	xchg   ebx,eax
  41dff2:	call   0x65bcdfe4
  41dff7:	pushf  
  41dff8:	sub    BYTE PTR [edi-0x7c62d534],dh
  41dffe:	mov    ah,0x6c
  41e000:	addr16 stc 
  41e002:	mov    ebx,0x28c10364
  41e007:	call   0x992:0xf68af5d9
  41e00e:	mov    DWORD PTR [eax-0x76],ebx
  41e011:	sbb    ecx,edi
  41e013:	into   
  41e014:	adc    eax,0x37398d3a
  41e019:	cmp    DWORD PTR [ebx],0x297f55d1
  41e01f:	sbb    ch,BYTE PTR [edi-0x26035ace]
  41e025:	pop    ds
  41e026:	sub    eax,0xb0012375
  41e02b:	ins    DWORD PTR es:[edi],dx
  41e02c:	xor    ecx,ebp
  41e02e:	(bad)  
  41e02f:	fild   DWORD PTR [edx]
  41e031:	adc    ah,BYTE PTR [edi]
  41e033:	icebp  
  41e034:	pop    ds
  41e035:	adc    al,0x78
  41e037:	fs jbe 0x41e0ad
  41e03a:	inc    edx
  41e03b:	data16 jnp 0x41e093
  41e03e:	mov    bh,0x85
  41e040:	push   cs
  41e041:	int    0x88
  41e043:	jbe    0x41dfcd
  41e045:	mov    edx,DWORD PTR [ebx]
  41e047:	xchg   edi,eax
  41e048:	pop    edx
  41e049:	into   
  41e04a:	pop    es
  41e04b:	mov    cs:0x74cccca5,al
  41e051:	or     ecx,ebp
  41e053:	xchg   ebx,eax
  41e054:	push   0x1b
  41e056:	cmp    ecx,DWORD PTR [eax-0x1a037ff9]
  41e05c:	aad    0x22
  41e05e:	aam    0xd5
  41e060:	pop    edx
  41e061:	jo     0x41e059
  41e063:	mov    edi,0x400accd7
  41e068:	pmulhw mm6,QWORD PTR [esi]
  41e06b:	lahf   
  41e06c:	jg     0x41e0b5
  41e06e:	pop    ebx
  41e06f:	push   esi
  41e070:	scas   al,BYTE PTR es:[edi]
  41e071:	sbb    BYTE PTR [ecx-0x7b],0x2
  41e075:	ret    
  41e076:	cld    
  41e077:	popa   
  41e078:	fs sbb al,0x8f
  41e07b:	or     cl,bl
  41e07d:	cmp    DWORD PTR [ebp-0x4cd520f7],0x2d
  41e084:	int3   
  41e085:	jns    0x41e0d5
  41e087:	adc    ebx,DWORD PTR [eax+esi*4+0x48]
  41e08b:	lahf   
  41e08c:	or     al,0x2e
  41e08e:	push   esi
  41e08f:	mov    ch,0x57
  41e091:	scas   eax,DWORD PTR es:[edi]
  41e092:	xor    esi,DWORD PTR [edi-0x43]
  41e095:	adc    eax,0x14aab5dd
  41e09a:	js     0x41e0e4
  41e09c:	sub    DWORD PTR [ebp+0x6f],edx
  41e09f:	jge    0x41e0b2
  41e0a1:	(bad)
  41e0a4:	add    esi,DWORD PTR [ebp+0x6f0c1282]
  41e0aa:	pop    edx
  41e0ab:	push   ebp
  41e0ac:	in     al,dx
  41e0ad:	xchg   edi,eax
  41e0ae:	adc    BYTE PTR [edi-0x77],al
  41e0b1:	mov    ds:0xfa3a1ba3,al
  41e0b6:	das    
  41e0b7:	mov    ds:0x820dad2b,al
  41e0bc:	push   edx
  41e0bd:	test   DWORD PTR [edx+0x6d],ebp
  41e0c0:	mov    ebx,DWORD PTR [edx]
  41e0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c3:	jl     0x41e124
  41e0c5:	mov    WORD PTR [ebp+edx*8-0x28],?
  41e0c9:	dec    esi
  41e0ca:	push   cs
  41e0cb:	jo     0xde12bbf6
  41e0d1:	xor    dl,0x5b
  41e0d4:	sbb    BYTE PTR [edx-0x7d],bh
  41e0d7:	and    cl,BYTE PTR [ecx+0x742385f5]
  41e0dd:	repnz push ss
  41e0df:	jo     0x41e09b
  41e0e1:	test   BYTE PTR [ecx+0x6d396006],bh
  41e0e7:	and    dh,0xcd
  41e0ea:	sub    eax,0x5557ee95
  41e0ef:	fsub   DWORD PTR [eax]
  41e0f1:	shr    DWORD PTR [ebx+0x35],cl
  41e0f4:	mov    dl,0x5d
  41e0f6:	adc    DWORD PTR [eax+0xe5143b6],edi
  41e0fc:	stc    
  41e0fd:	ds clc 
  41e0ff:	sbb    ecx,DWORD PTR [edi]
  41e101:	scas   eax,DWORD PTR es:[edi]
  41e102:	out    0x5e,eax
  41e104:	mov    eax,0xe504a99
  41e109:	stc    
  41e10a:	xlat   BYTE PTR ds:[ebx]
  41e10b:	cmp    ecx,edi
  41e10d:	adc    eax,0xad834050
  41e112:	(bad)  
  41e113:	jae    0x41e154
  41e115:	push   0xaf478d03
  41e11a:	ficomp DWORD PTR [eax+ebp*2]
  41e11d:	xchg   esi,eax
  41e11e:	jae    0x41e102
  41e120:	test   DWORD PTR [edi],ebp
  41e122:	out    0x89,eax
  41e124:	fistp  WORD PTR [ecx]
  41e126:	xchg   ecx,eax
  41e127:	jmp    0x41e10c
  41e129:	xor    al,0x14
  41e12b:	mov    esp,DWORD PTR [ebx-0x2d6f0ff3]
  41e131:	icebp  
  41e132:	push   eax
  41e133:	lds    ecx,FWORD PTR es:[ecx-0x17f44c7a]
  41e13a:	call   0x2e63:0x229b5181
  41e141:	mov    ds:0x1f46f4f2,eax
  41e146:	test   BYTE PTR [ecx+0x38],ah
  41e149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e14a:	dec    eax
  41e14b:	cmp    BYTE PTR [edx-0x30],ch
  41e14e:	jle    0x41e15d
  41e150:	pop    es
  41e151:	ficomp DWORD PTR [ebx+0x7c]
  41e154:	mov    bl,0xe7
  41e156:	mov    BYTE PTR [ecx],bh
  41e158:	iret   
  41e159:	imul   dl
  41e15b:	sti    
  41e15c:	loop   0x41e1a9
  41e15e:	fwait
  41e15f:	mov    ?,WORD PTR [edi-0x5c9beb94]
  41e165:	aaa    
  41e166:	gs inc esi
  41e168:	mov    cl,0xee
  41e16a:	push   esi
  41e16c:	or     BYTE PTR [ebx],bh
  41e16e:	jnp    0x41e194
  41e170:	aam    0xe4
  41e172:	jbe    0x41e10b
  41e174:	in     eax,0x17
  41e176:	leave  
  41e177:	inc    eax
  41e178:	mov    fs,WORD PTR ds:0x4cd181a3
  41e17e:	repnz cdq 
  41e180:	inc    ebx
  41e181:	in     eax,dx
  41e182:	in     eax,dx
  41e183:	pop    eax
  41e184:	(bad)  
  41e185:	shr    DWORD PTR [ecx+0x4d],1
  41e188:	pop    ebp
  41e189:	mov    eax,ds:0xa46da578
  41e18e:	jmp    0xf231:0x4fe97671
  41e195:	dec    edx
  41e196:	sbb    ebx,DWORD PTR [ebx+0x448d930f]
  41e19c:	dec    ebx
  41e19d:	push   ecx
  41e19e:	push   edi
  41e19f:	fwait
  41e1a0:	sbb    BYTE PTR [edi],0xb9
  41e1a3:	out    dx,eax
  41e1a4:	call   0x9ba5c62e
  41e1a9:	mov    ebx,0x3ee78eb9
  41e1ae:	lds    ebp,FWORD PTR [ecx]
  41e1b0:	cmp    al,0xa9
  41e1b2:	sub    DWORD PTR [eax-0x2e],0x68
  41e1b6:	mov    edi,0x874b61d7
  41e1bb:	test   al,0xc4
  41e1bd:	dec    eax
  41e1be:	adc    al,0x96
  41e1c0:	pop    esp
  41e1c1:	ret    
  41e1c2:	mov    edx,0x36f3b1e1
  41e1c7:	sub    eax,0x44fd7bef
  41e1cc:	mov    ecx,0xa52ea4c2
  41e1d1:	in     eax,0x6f
  41e1d3:	push   edx
  41e1d4:	inc    esi
  41e1d5:	shl    ah,0xcb
  41e1d8:	rcr    DWORD PTR [ebx+0x5a],0x42
  41e1dc:	and    eax,0xa3c1a5ec
  41e1e1:	mov    eax,0xf9335cee
  41e1e6:	add    al,0xc3
  41e1e8:	mov    ch,BYTE PTR [esi]
  41e1ea:	xchg   DWORD PTR [edi+0x2da664af],esp
  41e1f0:	fst    QWORD PTR [edx-0x6e43c42e]
  41e1f6:	fild   DWORD PTR [esi]
  41e1f8:	adc    BYTE PTR [eax+ebx*8],dl
  41e1fb:	mov    DWORD PTR [ecx],edi
  41e1fd:	ins    DWORD PTR es:[edi],dx
  41e1fe:	rdpmc  
  41e200:	xchg   esp,eax
  41e201:	dec    edi
  41e202:	sahf   
  41e203:	shrd   DWORD PTR [edi-0x4e99161a],esi,0x57
  41e20b:	mov    al,ds:0xc4c08b10
  41e210:	rol    DWORD PTR [ecx-0x16],1
  41e213:	mul    BYTE PTR [esi-0xb]
  41e216:	xchg   esp,ebx
  41e218:	xor    al,0x2f
  41e21a:	mov    ds:0x9bafcb38,eax
  41e21f:	ja     0x41e235
  41e221:	dec    edx
  41e222:	mov    al,ds:0x38a4e55e
  41e227:	or     bl,ch
  41e229:	sbb    edi,DWORD PTR [edx+0x4b]
  41e22c:	xchg   bh,dl
  41e22e:	push   es
  41e22f:	mov    dh,0x37
  41e231:	addr16 and eax,edi
  41e234:	push   0xc983bd4a
  41e239:	jmp    0x9f6b:0xaeeac685
  41e240:	push   ebp
  41e241:	pushf  
  41e242:	mov    ?,WORD PTR [edi+ebp*8]
  41e245:	ret    
  41e246:	or     DWORD PTR [eax+0x578935a],ebp
  41e24c:	xor    BYTE PTR [ecx-0x3b2c6db7],0x34
  41e253:	mov    dl,0xa3
  41e255:	jmp    DWORD PTR [edx]
  41e257:	mov    bl,0x21
  41e259:	repnz pop ss
  41e25b:	inc    eax
  41e25c:	push   edi
  41e25d:	and    edi,ebx
  41e25f:	dec    ebp
  41e260:	lds    ebp,FWORD PTR [ebp+ebx*2-0x7e]
  41e264:	int3   
  41e265:	ins    BYTE PTR es:[edi],dx
  41e266:	mov    WORD PTR ds:0x4792dac5,cs
  41e26c:	enter  0x9a68,0x92
  41e270:	push   ecx
  41e271:	mov    ds:0x544fa72f,al
  41e276:	loope  0x41e2b4
  41e278:	xor    cl,0x75
  41e27b:	out    dx,eax
  41e27c:	and    al,0xd3
  41e27e:	adc    al,0x71
  41e280:	pop    ebp
  41e281:	push   ebp
  41e282:	sbb    eax,0xc78608b9
  41e287:	(bad)  
  41e289:	push   0x3d3b31e
  41e28e:	test   DWORD PTR gs:[edi-0x33],0xffb4adf
  41e296:	push   cs
  41e297:	jmp    0x351:0xb479af64
  41e29e:	sub    eax,0xfb880755
  41e2a3:	cmp    BYTE PTR [edi+0x27],dl
  41e2a6:	sub    esi,DWORD PTR [eax+0x6be8b2ff]
  41e2ac:	daa    
  41e2ad:	adc    eax,0x12ab14fd
  41e2b2:	(bad)  
  41e2b3:	xor    BYTE PTR [ebp+0x3406223e],bl
  41e2b9:	mov    al,ds:0xb0e119af
  41e2be:	sub    ebp,eax
  41e2c0:	xchg   ecx,eax
  41e2c1:	jecxz  0x41e307
  41e2c3:	enter  0x1c13,0x3a
  41e2c7:	and    eax,0x963434a2
  41e2cc:	adc    BYTE PTR [esi-0x20],ch
  41e2cf:	sbb    DWORD PTR [edi],edi
  41e2d1:	push   edx
  41e2d2:	adc    ebx,esi
  41e2d4:	adc    dh,dl
  41e2d6:	adc    DWORD PTR ds:0x27b596a2,ecx
  41e2dc:	int3   
  41e2dd:	hlt    
  41e2de:	aas    
  41e2df:	mov    DWORD PTR [edx],ecx
  41e2e1:	(bad)  
  41e2e2:	dec    edi
  41e2e3:	mov    DWORD PTR [ebx+eax*4],eax
  41e2e6:	mov    eax,edx
  41e2e8:	aam    0xe3
  41e2ea:	ds or  esp,edi
  41e2ed:	lds    edx,FWORD PTR [edi+0x2]
  41e2f0:	adc    al,0xa2
  41e2f2:	mov    eax,0x50893fe8
  41e2f7:	lahf   
  41e2f8:	and    BYTE PTR [ecx+0x14b3abc8],bl
  41e2fe:	xchg   esp,eax
  41e2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e300:	push   0xffffffc6
  41e302:	in     al,dx
  41e303:	jmp    DWORD PTR [edx-0x68048218]
  41e309:	or     al,0x42
  41e30b:	dec    ebx
  41e30c:	add    al,0x52
  41e30e:	mov    eax,ds:0x85de434a
  41e313:	cld    
  41e314:	(bad)  
  41e316:	and    ah,BYTE PTR [ebx+eax*4]
  41e319:	lods   al,BYTE PTR ds:[esi]
  41e31a:	je     0x41e2db
  41e31c:	stos   BYTE PTR es:[edi],al
  41e31d:	cmp    BYTE PTR [ecx-0x53],ah
  41e320:	ja     0x41e35c
  41e322:	mov    bh,BYTE PTR [ebp+0x330aca5f]
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0xce
  41e3e0:	push   DWORD PTR [edi]
  41e3e2:	dec    ebx
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x93
  41e3ec:	shr    DWORD PTR [edi],cl
  41e3ee:	test   al,0x16
  41e3f0:	icebp  
  41e3f1:	xchg   edi,eax
  41e3f2:	xchg   ebx,eax
  41e3f3:	iret   
  41e3f4:	pop    es
  41e3f5:	aas    
  41e3f6:	pop    esp
  41e3f7:	outs   dx,BYTE PTR ds:[esi]
  41e3f8:	or     edi,DWORD PTR [ebp+0x77]
  41e3fb:	bound  ebp,QWORD PTR [ebx+0x23f935ca]
  41e401:	outs   dx,DWORD PTR ds:[si]
  41e403:	mov    ch,0x4d
  41e405:	cdq    
  41e406:	push   ebp
  41e407:	add    eax,0x4016a160
  41e40c:	je     0x41e46c
  41e40e:	pop    es
  41e40f:	cmp    al,0xe5
  41e411:	aaa    
  41e412:	dec    ebx
  41e413:	or     eax,0x7de8ef7c
  41e418:	cmp    DWORD PTR [esi-0x5c7e52cf],edi
  41e41e:	jae    0x41e43d
  41e420:	icebp  
  41e421:	push   es
  41e422:	dec    eax
  41e423:	ud2    
  41e425:	push   edx
  41e426:	add    eax,0x193a31d9
  41e42b:	or     BYTE PTR [eax+0x30],cl
  41e42e:	ds retf 
  41e430:	adc    eax,0x40e5b10d
  41e435:	ror    DWORD PTR [edx],0x49
  41e438:	cmp    BYTE PTR [edx+0x2b],dh
  41e43b:	xor    al,0x91
  41e43d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e43e:	mov    ebx,0x7204a4d3
  41e443:	adc    BYTE PTR [eax+0x510254b],cl
  41e449:	and    ecx,DWORD PTR [ecx+0x4d]
  41e44c:	pop    es
  41e44d:	sbb    ebp,esp
  41e44f:	repz (bad) 
  41e452:	pop    ecx
  41e453:	arpl   WORD PTR [ebp-0x33c46bbe],si
  41e459:	lods   al,BYTE PTR ds:[esi]
  41e45a:	shr    DWORD PTR [edx+ebp*2],cl
  41e45d:	fcom   QWORD PTR [ecx+0x4a4395fe]
  41e463:	xor    al,0x8f
  41e465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e466:	popa   
  41e467:	jp     0x41e444
  41e469:	cmp    ebp,0x4d
  41e46c:	ret    0x455f
  41e46f:	dec    edx
  41e470:	and    dl,BYTE PTR [eax-0x3e]
  41e473:	xor    eax,0xc72d3d89
  41e478:	frstor [ecx]
  41e47a:	retf   0xde67
  41e47d:	cmp    BYTE PTR [ecx+0x70],dh
  41e480:	repz or dl,al
  41e483:	mov    ebx,?
  41e485:	xor    ebp,DWORD PTR [esi-0x1e]
  41e488:	cmc    
  41e489:	nop
  41e48a:	adc    cl,bl
  41e48c:	and    DWORD PTR [edx-0x48],ebp
  41e48f:	or     eax,0xfc26505f
  41e494:	xchg   esp,eax
  41e495:	cmp    DWORD PTR [eax],esi
  41e497:	ds aaa 
  41e499:	sub    esi,DWORD PTR [eax-0x134d4a6c]
  41e49f:	xchg   BYTE PTR [edi-0x67699ae4],ah
  41e4a5:	cmp    bh,BYTE PTR [edi-0x25f07b2a]
  41e4ab:	mov    edx,0x1a61829e
  41e4b0:	mov    al,dl
  41e4b2:	xor    eax,0x7393371b
  41e4b7:	cmp    al,0x1b
  41e4b9:	mov    ah,0xa8
  41e4bb:	mov    esi,0xd8a1239b
  41e4c0:	adc    ecx,DWORD PTR [edx-0x7371a621]
  41e4c6:	dec    ebx
  41e4c7:	or     BYTE PTR [ecx],bl
  41e4c9:	ins    DWORD PTR es:[edi],dx
  41e4ca:	dec    eax
  41e4cb:	scas   eax,DWORD PTR es:[edi]
  41e4cc:	jl     0x41e50c
  41e4ce:	or     DWORD PTR [edx+0x2a2584fd],edi
  41e4d4:	push   cs
  41e4d5:	jno    0x41e496
  41e4d7:	adc    ebp,DWORD PTR [edx+edx*4+0x2be327a8]
  41e4de:	sbb    eax,0x66ff4cc0
  41e4e3:	pop    edi
  41e4e4:	dec    esp
  41e4e5:	xchg   ebp,eax
  41e4e6:	fwait
  41e4e7:	cwde   
  41e4e8:	push   esi
  41e4e9:	lea    edx,[esi]
  41e4eb:	outs   dx,DWORD PTR ds:[esi]
  41e4ec:	or     eax,0xa741eff4
  41e4f1:	and    BYTE PTR [edi-0xfd413e6],ah
  41e4f7:	push   ds
  41e4f8:	sbb    ebx,DWORD PTR [esi-0x7ada9752]
  41e4fe:	push   ds
  41e4ff:	adc    eax,0x86c2b7da
  41e504:	fsubr  QWORD PTR [ebx]
  41e506:	mov    ecx,0x91f4bc22
  41e50c:	jp     0x41e4ad
  41e50e:	inc    edx
  41e50f:	jp     0x41e4c6
  41e511:	je     0x41e4e8
  41e513:	push   0xbd3a5653
  41e518:	xchg   esi,eax
  41e519:	mov    eax,ds:0x561c30d8
  41e51e:	pop    ds
  41e51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e520:	and    cl,BYTE PTR [ebp+0x55]
  41e523:	mov    BYTE PTR [edi],dh
  41e525:	push   es
  41e526:	rcr    al,0xe8
  41e529:	pop    esp
  41e52a:	pop    ebp
  41e52b:	call   0x944a:0xb31f45ac
  41e532:	stc    
  41e533:	and    esi,eax
  41e535:	outs   dx,DWORD PTR ds:[esi]
  41e536:	mov    eax,ds:0xb3ca5f05
  41e53b:	pop    es
  41e53c:	push   ds
  41e53d:	ror    DWORD PTR [esi-0x21],cl
  41e540:	add    ch,BYTE PTR [edx+0x45]
  41e543:	sti    
  41e544:	sbb    DWORD PTR [ecx-0x66],ebx
  41e547:	in     eax,0xb3
  41e549:	inc    esi
  41e54a:	(bad)  
  41e54b:	sbb    BYTE PTR [esi-0x4a],ah
  41e54e:	mov    WORD PTR [edx+ebx*1-0x2bf10afc],gs
  41e555:	outs   dx,BYTE PTR ds:[esi]
  41e556:	cld    
  41e557:	xchg   esp,eax
  41e558:	pusha  
  41e559:	mov    dh,0x5c
  41e55b:	pop    ss
  41e55c:	jp     0x41e552
  41e55e:	div    BYTE PTR ds:0xce4c0e5b
  41e564:	lock jns 0x41e59f
  41e567:	add    eax,0x491d5238
  41e56c:	shr    BYTE PTR [esi],1
  41e56e:	mov    DWORD PTR [ebx+ebp*1+0x5a6394bd],0x7c50bebd
  41e579:	fs inc esp
  41e57b:	addr16 jl 0x41e530
  41e57e:	or     esi,ebx
  41e580:	mov    edi,0x55f406d3
  41e585:	mov    esi,0x66c7faf2
  41e58a:	push   ss
  41e58b:	dec    esp
  41e58c:	popa   
  41e58d:	and    DWORD PTR [eax-0x77],ebp
  41e590:	cmp    BYTE PTR [ecx+0x1e],dh
  41e593:	pushf  
  41e594:	bound  ebx,QWORD PTR [esi+0x1e]
  41e597:	clc    
  41e598:	inc    eax
  41e599:	push   ebx
  41e59a:	add    eax,0xe24ca258
  41e59f:	jnp    0x41e610
  41e5a1:	test   al,0x60
  41e5a3:	sub    bh,BYTE PTR [edi+0x35]
  41e5a6:	mov    ds:0xdac47290,al
  41e5ab:	aad    0xcc
  41e5ad:	icebp  
  41e5ae:	daa    
  41e5af:	aas    
  41e5b0:	(bad)  
  41e5b1:	ins    DWORD PTR es:[edi],dx
  41e5b2:	int3   
  41e5b3:	mov    eax,ds:0x3a0372c2
  41e5b8:	mov    ebp,DWORD PTR ds:0x4f4edea6
  41e5be:	fisttp DWORD PTR [ebx+ebx*2]
  41e5c1:	loope  0x41e565
  41e5c3:	xchg   esi,eax
  41e5c4:	xchg   esi,eax
  41e5c5:	lahf   
  41e5c6:	sub    dl,BYTE PTR [ebx+0x5d21ef5f]
  41e5cc:	inc    ecx
  41e5cd:	xlat   BYTE PTR ds:[ebx]
  41e5ce:	cmp    eax,0x5a149fca
  41e5d3:	stos   DWORD PTR es:[edi],eax
  41e5d4:	imul   edi,DWORD PTR [edx-0x37],0xffffffa7
  41e5d8:	and    ah,bh
  41e5da:	mov    ah,cl
  41e5dc:	std    
  41e5dd:	jl     0x41e595
  41e5df:	cld    
  41e5e0:	dec    esp
  41e5e1:	dec    esp
  41e5e2:	sbb    al,0x45
  41e5e4:	mov    al,ds:0xd260666
  41e5e9:	mov    ds:0x9e8d7d50,eax
  41e5ee:	sti    
  41e5ef:	mov    dl,bh
  41e5f1:	in     al,dx
  41e5f2:	call   0x816a90d0
  41e5f7:	stc    
  41e5f8:	(bad)  
  41e5fa:	or     al,0x14
  41e5fc:	lods   eax,DWORD PTR ds:[esi]
  41e5fd:	cmp    eax,0xe9ccd718
  41e603:	nop
  41e604:	call   0x9af1:0x2984c7eb
  41e60b:	je     0x41e621
  41e60d:	scas   eax,DWORD PTR es:[edi]
  41e60e:	fdivr  st,st(3)
  41e610:	or     BYTE PTR [ecx-0x2a695492],bh
  41e616:	pushf  
  41e617:	dec    ecx
  41e618:	mov    dl,cl
  41e61a:	enter  0x7ad,0xd4
  41e61e:	leave  
  41e61f:	fidivr DWORD PTR [ecx+0x11a28eed]
  41e625:	jp     0x41e5d8
  41e627:	fild   WORD PTR [esi]
  41e629:	push   esi
  41e62a:	jo     0xd9ee89d3
  41e630:	xchg   ebp,eax
  41e631:	scas   al,BYTE PTR es:[edi]
  41e632:	js     0x41e638
  41e634:	inc    eax
  41e635:	cmp    cl,BYTE PTR [esi-0x716180ca]
  41e63b:	clc    
  41e63c:	pushf  
  41e63d:	les    ecx,FWORD PTR [eax]
  41e63f:	add    eax,0x627fae85
  41e644:	pop    edi
  41e645:	lds    edi,FWORD PTR [edx]
  41e647:	or     DWORD PTR [edx],0xffffffec
  41e64a:	jne    0x41e5e6
  41e64c:	rcl    BYTE PTR [ecx-0xc],1
  41e64f:	out    0xee,al
  41e651:	sub    DWORD PTR [ebx-0x4897906d],edi
  41e657:	out    0x51,eax
  41e659:	fdiv   QWORD PTR [ecx]
  41e65b:	dec    ebx
  41e65c:	scas   eax,DWORD PTR es:[edi]
  41e65d:	pop    ecx
  41e65e:	jmp    0xd08c:0x78fd451e
  41e665:	sbb    al,ah
  41e667:	fnstsw WORD PTR fs:[ebx]
  41e66a:	aaa    
  41e66b:	lods   al,BYTE PTR ds:[esi]
  41e66c:	mov    ch,0x27
  41e66e:	mov    al,ds:0xf8d25585
  41e673:	push   ebx
  41e674:	xor    BYTE PTR [ebp-0x3767de73],0xdd
  41e67b:	mov    eax,0x14f4369d
  41e680:	(bad)  [ecx]
  41e682:	adc    al,0x81
  41e684:	mov    edx,0x983d2a30
  41e68a:	clc    
  41e68b:	in     al,dx
  41e68c:	push   0x5
  41e68e:	test   DWORD PTR ds:0xdfd74448,eax
  41e694:	scas   eax,DWORD PTR es:[edi]
  41e695:	leave  
  41e696:	repnz dec esi
  41e698:	jmp    0x41e6dd
  41e69a:	ins    BYTE PTR es:[edi],dx
  41e69b:	and    ebx,esi
  41e69d:	or     BYTE PTR [edx+ebp*2],ah
  41e6a0:	add    dl,BYTE PTR [ebp+0x51]
  41e6a3:	pop    esi
  41e6a4:	mov    bh,0x92
  41e6a6:	mov    al,ds:0x1f9963df
  41e6ab:	push   cs
  41e6ac:	or     eax,0xc7acc959
  41e6b1:	xor    al,0x6f
  41e6b3:	jo     0x41e653
  41e6b5:	les    edx,FWORD PTR [edi]
  41e6b7:	xchg   edi,eax
  41e6b8:	pop    ecx
  41e6b9:	pop    esp
  41e6ba:	arpl   WORD PTR [ecx+edi*4+0x36],si
  41e6be:	push   esi
  41e6c0:	sub    eax,0x278df917
  41e6c5:	mov    cl,0x92
  41e6c7:	lahf   
  41e6c8:	jmp    0x68db:0x11bacb7c
  41e6cf:	jne    0x41e6f3
  41e6d1:	repz push esi
  41e6d3:	push   0x983512f7
  41e6d8:	out    dx,eax
  41e6d9:	jg     0x41e74a
  41e6db:	sub    DWORD PTR [ebp-0x5f],0x10
  41e6df:	xor    eax,0x4a9fb471
  41e6e4:	(bad)
  41e6e9:	cmp    eax,0x1272ff57
  41e6ee:	imul   ebp,DWORD PTR [ebx-0x35a7cf9c],0xffffffec
  41e6f5:	mov    bh,BYTE PTR [ebx]
  41e6f7:	stc    
  41e6f8:	dec    esi
  41e6f9:	add    cl,BYTE PTR [edx+0x5db8232a]
  41e6ff:	add    dh,BYTE PTR [edi+edx*1-0x4426b607]
  41e706:	pop    esp
  41e707:	into   
  41e708:	idiv   ebx
  41e70a:	aaa    
  41e70b:	or     eax,0x56f7f5b7
  41e710:	aam    0x86
  41e712:	push   edx
  41e713:	es or  DWORD PTR ss:[edx],ebp
  41e717:	sub    al,0xf7
  41e719:	push   edx
  41e71a:	mov    dh,0x9b
  41e71c:	dec    edx
  41e71d:	dec    edi
  41e71e:	ret    
  41e71f:	xor    ebx,ecx
  41e721:	inc    esi
  41e722:	jnp    0x41e6d7
  41e724:	loopne 0x41e6e2
  41e726:	test   al,0xf1
  41e728:	push   ebx
  41e729:	mov    ecx,0x78f3403
  41e72e:	adc    esp,DWORD PTR [edi+0x2201fba7]
  41e734:	push   es
  41e735:	and    DWORD PTR [ecx-0x57],ecx
  41e738:	test   al,0xfe
  41e73a:	ss sbb bh,ah
  41e73d:	ds mov dh,0xd8
  41e740:	in     al,0x6
  41e742:	jb     0x41e77b
  41e744:	jnp    0x41e6cb
  41e746:	mov    ch,0x6a
  41e748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e749:	cdq    
  41e74a:	mov    al,ds:0xeb79b1ea
  41e74f:	jne    0x41e7ce
  41e751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e752:	cmp    BYTE PTR [edx],dl
  41e754:	dec    ebp
  41e755:	out    dx,al
  41e756:	pop    ebp
  41e757:	add    DWORD PTR [edi],esp
  41e759:	jmp    0x2b17:0x996966de
  41e760:	push   ecx
  41e761:	fs mov ebp,0xb88351a1
  41e767:	in     al,dx
  41e768:	lock loop 0x41e704
  41e76b:	cmp    eax,0xdbfc6232
  41e770:	loop   0x41e76a
  41e772:	out    dx,al
  41e773:	out    0xe3,al
  41e775:	test   al,0x4c
  41e777:	sahf   
  41e778:	pop    ebp
  41e779:	add    dl,BYTE PTR [edi-0x54c0b3a3]
  41e77f:	mov    esp,0xc66ce820
  41e784:	outs   dx,DWORD PTR ds:[esi]
  41e785:	hlt    
  41e786:	stos   DWORD PTR es:[edi],eax
  41e787:	fcomp  QWORD PTR [edi+0x62fe99e6]
  41e78d:	add    al,0x3d
  41e78f:	(bad)  
  41e790:	rsm    
  41e792:	iret   
  41e793:	adc    dl,BYTE PTR [edi+0x9829166]
  41e799:	jbe    0x41e7a5
  41e79b:	cmp    dl,BYTE PTR [edx-0x67e7df99]
  41e7a1:	cdq    
  41e7a2:	jg     0x41e817
  41e7a4:	ins    BYTE PTR es:[edi],dx
  41e7a5:	popa   
  41e7a6:	arpl   WORD PTR [edx+edi*2-0x71a6161f],bp
  41e7ad:	ins    DWORD PTR es:[edi],dx
  41e7ae:	out    dx,eax
  41e7af:	cmp    ebp,DWORD PTR [edi]
  41e7b1:	scas   eax,DWORD PTR es:[edi]
  41e7b2:	repnz stos DWORD PTR es:[edi],eax
  41e7b4:	inc    ecx
  41e7b5:	data16 and dh,dh
  41e7b8:	xchg   ebx,eax
  41e7b9:	pusha  
  41e7ba:	out    dx,eax
  41e7bb:	cmp    DWORD PTR [ebx+ecx*2+0x26a52df7],edx
  41e7c2:	lods   eax,DWORD PTR ds:[esi]
  41e7c3:	pop    edi
  41e7c4:	outs   dx,DWORD PTR ds:[esi]
  41e7c5:	scas   eax,DWORD PTR es:[edi]
  41e7c6:	(bad)
  41e7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ca:	mov    al,0xa4
  41e7cc:	pop    edx
  41e7cd:	mov    gs,WORD PTR [edi]
  41e7cf:	mov    ebp,0x26dac332
  41e7d4:	pop    ds
  41e7d5:	jge    0x41e7ac
  41e7d7:	push   esp
  41e7d8:	push   ecx
  41e7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7da:	jne    0x41e825
  41e7dc:	pushf  
  41e7dd:	dec    esi
  41e7de:	or     dh,BYTE PTR [edx+0x63]
  41e7e1:	inc    edx
  41e7e2:	test   eax,0xa22478d3
  41e7e7:	xchg   ecx,eax
  41e7e8:	xchg   ebx,eax
  41e7e9:	les    edx,FWORD PTR [edx+0x592349f4]
  41e7ef:	pop    ecx
  41e7f0:	(bad)  
  41e7f1:	pop    eax
  41e7f2:	imul   esp,DWORD PTR [eax+0x49fc3756],0x2ae0adb0
  41e7fc:	lock fistp DWORD PTR [esi]
  41e7ff:	or     BYTE PTR [ecx+0x24ada528],al
  41e805:	in     eax,0x36
  41e807:	test   BYTE PTR [edi+ecx*2+0x8c5f9d7],dl
  41e80e:	lds    eax,FWORD PTR [esi-0x56e06f67]
  41e814:	or     BYTE PTR [eax],0xdc
  41e817:	je     0x41e7fd
  41e819:	lea    ebx,[ecx+0x1b]
  41e81c:	jmp    0xff7a44a0
  41e821:	jecxz  0x41e7af
  41e823:	mov    edi,0xa0e1db4d
  41e828:	sub    BYTE PTR [esi-0x6f],0x39
  41e82c:	cmp    DWORD PTR [ecx],0xb46f2dd1
  41e832:	adc    eax,0xff85f0d6
  41e838:	add    al,0x0
  41e83a:	add    ecx,DWORD PTR [edi]
  41e83c:	push   edx
  41e83d:	fwait
  41e83e:	clc    
  41e83f:	ret    0x3b7b
  41e842:	push   ebx
  41e843:	cmp    cl,al
  41e845:	aam    0xe4
  41e847:	inc    ebx
  41e848:	xor    DWORD PTR [edx],0xffffffa4
  41e84b:	imul   ecx,DWORD PTR [edi-0x31],0x5f
  41e84f:	sub    ah,bh
  41e851:	inc    esi
  41e852:	push   ds
  41e853:	pushf  
  41e854:	cmp    al,0xbf
  41e856:	fist   DWORD PTR [edx]
  41e858:	(bad)  [edx-0x5d]
  41e85b:	or     BYTE PTR [edx],al
  41e85d:	retf   
  41e85e:	mov    dl,0xc1
  41e860:	cmp    al,0x6a
  41e862:	fwait
  41e863:	stos   BYTE PTR es:[edi],al
  41e864:	das    
  41e865:	mov    eax,ds:0xc8843ae3
  41e86a:	mov    DWORD PTR [ecx+ebp*8-0x4a],ebp
  41e86e:	push   esi
  41e86f:	jbe    0x41e8ab
  41e871:	out    0x14,eax
  41e873:	shl    BYTE PTR [edi-0x3d0b8761],0x3f
  41e87a:	adc    eax,0x50d04746
  41e87f:	add    bh,cl
  41e881:	lods   al,BYTE PTR ds:[esi]
  41e882:	aam    0x6b
  41e884:	dec    edx
  41e885:	xchg   esp,eax
  41e886:	sahf   
  41e887:	enter  0x2aee,0x8a
  41e88b:	xor    esp,esi
  41e88d:	(bad)  
  41e88e:	(bad)  
  41e88f:	adc    BYTE PTR [ebx+eiz*1-0x4ff1c428],bh
  41e896:	nop
  41e897:	adc    bh,ah
  41e899:	inc    esp
  41e89a:	dec    edx
  41e89b:	push   cs
  41e89c:	adc    ebx,ecx
  41e89e:	repnz push ss
  41e8a0:	xchg   ebx,eax
  41e8a1:	mov    esp,0x67d66143
  41e8a6:	or     edx,DWORD PTR [eax]
  41e8a8:	pop    ebx
  41e8a9:	mov    edi,0x2713208f
  41e8ae:	pop    es
  41e8af:	push   ecx
  41e8b0:	repz mov ecx,0x46a50a65
  41e8b6:	jmp    0x41e847
  41e8b8:	and    BYTE PTR [ecx-0xa756cd3],dl
  41e8be:	ja     0x41e872
  41e8c0:	int3   
  41e8c1:	ja     0x41e867
  41e8c3:	push   ebx
  41e8c4:	out    0x49,al
  41e8c6:	cmp    eax,0x3bb648c5
  41e8cb:	dec    ebx
  41e8cc:	jge    0x41e90b
  41e8ce:	and    BYTE PTR [edx-0x5b],cl
  41e8d1:	add    BYTE PTR [esi],dh
  41e8d3:	pop    ebp
  41e8d4:	outs   dx,BYTE PTR ds:[esi]
  41e8d5:	fistp  WORD PTR [ebx+0x5080e9d1]
  41e8db:	aad    0x11
  41e8dd:	in     eax,0xc3
  41e8df:	xor    ebp,esi
  41e8e1:	in     al,dx
  41e8e2:	jae    0x41e8dd
  41e8e4:	lods   eax,DWORD PTR ds:[esi]
  41e8e5:	mov    BYTE PTR [edx],bh
  41e8e7:	imul   edx,DWORD PTR [edx],0xe66cdfd2
  41e8ed:	xchg   esp,eax
  41e8ee:	lods   al,BYTE PTR ds:[esi]
  41e8ef:	and    DWORD PTR [esp+ecx*1],ebp
  41e8f2:	and    DWORD PTR [ebx-0x7f81ac49],ecx
  41e8f8:	dec    eax
  41e8f9:	rcr    BYTE PTR [ebx+edi*2],0x25
  41e8fd:	cmp    edx,DWORD PTR ds:0x56cfe0f4
  41e903:	xor    dl,BYTE PTR [eax+0x35]
  41e906:	pop    esp
  41e907:	dec    edi
  41e908:	cmovb  ebx,DWORD PTR [esi+0x16]
  41e90c:	lahf   
  41e90d:	jne    0x41e901
  41e90f:	cmp    bl,BYTE PTR [esi+eax*8+0xe]
  41e913:	dec    ebx
  41e914:	scas   al,BYTE PTR es:[edi]
  41e915:	push   es
  41e916:	popa   
  41e917:	add    DWORD PTR [ecx+ecx*2],ecx
  41e91a:	jle    0x41e951
  41e91c:	mov    al,0x9f
  41e91e:	fbld   TBYTE PTR [edx]
  41e920:	push   ss
  41e921:	test   BYTE PTR [ebx+0x7c],ch
  41e924:	xchg   esp,eax
  41e926:	repz inc edi
  41e928:	jp     0x41e9a4
  41e92a:	or     eax,0x5efde969
  41e92f:	fcom   st(2)
  41e931:	das    
  41e932:	pop    ebx
  41e933:	sub    eax,esp
  41e935:	fs es and ecx,esp
  41e939:	adc    al,0x3f
  41e93b:	mov    esi,0xaaeb9611
  41e940:	or     cl,al
  41e942:	pop    ds
  41e943:	pop    ebp
  41e944:	jle    0x41e92a
  41e946:	xor    ebp,DWORD PTR [ebp+0x79]
  41e949:	lahf   
  41e94a:	cmp    eax,0xf6ed0498
  41e94f:	leave  
  41e950:	ret    
  41e951:	pop    esp
  41e952:	dec    ebp
  41e953:	aas    
  41e954:	mov    bl,0x27
  41e956:	add    eax,0x4579f0fc
  41e95b:	das    
  41e95c:	mov    eax,0x483304dc
  41e961:	adc    al,0x6d
  41e963:	std    
  41e964:	add    ebp,eax
  41e966:	mov    al,ds:0xa2678d1
  41e96b:	aad    0xdc
  41e96d:	mov    al,ds:0x857c68ad
  41e972:	clc    
  41e973:	push   0x6e29ad7b
  41e978:	add    BYTE PTR [bx+0x13],al
  41e97c:	xor    BYTE PTR [ecx+0x64],ch
  41e97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e980:	jnp    0x41e9e3
  41e982:	add    BYTE PTR [eax],0xd1
  41e985:	sbb    eax,0xecd1db76
  41e98a:	mov    dh,0xb4
  41e98c:	retf   0xecdf
  41e98f:	sti    
  41e990:	inc    ecx
  41e991:	ins    DWORD PTR es:[edi],dx
  41e992:	jl     0x41e9d5
  41e994:	clc    
  41e995:	popa   
  41e996:	into   
  41e997:	xlat   BYTE PTR ds:[ebx]
  41e998:	fs std 
  41e99a:	jle    0x41e9c5
  41e99c:	sbb    cl,al
  41e99e:	js     0x41e98c
  41e9a0:	repnz push es
  41e9a2:	add    al,BYTE PTR [edi+edx*8]
  41e9a5:	push   edi
  41e9a6:	je     0x41e9a3
  41e9a8:	and    DWORD PTR [eax+ecx*4],esp
  41e9ab:	adc    al,0xd7
  41e9ad:	pop    ebx
  41e9ae:	ja     0x41e94a
  41e9b0:	fiadd  DWORD PTR [ebx+0x5c56f886]
  41e9b6:	js     0x41e950
  41e9b8:	cdq    
  41e9b9:	out    dx,eax
  41e9ba:	fstp   DWORD PTR [ebx]
  41e9bc:	fcmovne st,st(7)
  41e9be:	inc    edx
  41e9bf:	popa   
  41e9c0:	outs   dx,DWORD PTR ds:[esi]
  41e9c1:	mov    esi,0x276c0d20
  41e9c6:	call   0x43b24867
  41e9cb:	dec    esp
  41e9cc:	push   edx
  41e9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9ce:	pop    eax
  41e9cf:	push   ss
  41e9d0:	ss pop edx
  41e9d2:	sbb    esp,0x67
  41e9d5:	test   DWORD PTR [ebp-0x51],ebx
  41e9d8:	std    
  41e9d9:	ss dec edx
  41e9db:	push   ds
  41e9dc:	es push ebx
  41e9de:	ds repnz pop eax
  41e9e1:	and    eax,eax
  41e9e3:	jnp    0x41e9bc
  41e9e5:	fadd   DWORD PTR [edi+0x3cb4f24d]
  41e9eb:	jo     0x41ea57
  41e9ed:	mov    edx,0x8af29783
  41e9f2:	in     al,0x0
  41e9f4:	or     al,0x9c
  41e9f6:	test   al,0x5d
  41e9f8:	push   ebp
  41e9f9:	aam    0x9c
  41e9fb:	mov    al,0x78
  41e9fd:	push   0xffffffdc
  41e9ff:	ret    
  41ea00:	adc    cl,BYTE PTR [ebx+0x11a3ab4]
  41ea06:	(bad)  
  41ea07:	xchg   ebp,eax
  41ea08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea09:	lods   al,BYTE PTR ds:[esi]
  41ea0a:	mov    al,ah
  41ea0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea0d:	push   eax
  41ea0e:	pop    edx
  41ea0f:	and    BYTE PTR [edi+0x682dad89],bh
  41ea15:	mov    ds,WORD PTR [ecx+0x4f]
  41ea18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea19:	add    DWORD PTR [ecx-0x33],ebp
  41ea1c:	jbe    0x41ea5b
  41ea1e:	fist   WORD PTR [ebp-0x4b254ce1]
  41ea24:	fmul   QWORD PTR [eax+edi*8-0x6]
  41ea28:	xor    esp,DWORD PTR [edx]
  41ea2a:	sbb    cl,BYTE PTR [ebx+edx*1-0x29]
  41ea2e:	in     al,0xe0
  41ea30:	scas   al,BYTE PTR es:[edi]
  41ea31:	push   ebx
  41ea32:	fidiv  WORD PTR [ebp+0x520de330]
  41ea38:	mov    eax,0x7e82bb48
  41ea3d:	(bad)  
  41ea3e:	sbb    DWORD PTR gs:[ebx-0x3358f108],esi
  41ea45:	mov    ecx,ds
  41ea47:	jne    0x41eac5
  41ea49:	std    
  41ea4a:	std    
  41ea4b:	outs   dx,BYTE PTR ds:[esi]
  41ea4c:	jnp    0x41ea7f
  41ea4e:	stos   DWORD PTR es:[edi],eax
  41ea4f:	adc    bl,BYTE PTR [edx]
  41ea51:	cwde   
  41ea52:	jge    0x41eac2
  41ea54:	jae    0x41ea24
  41ea56:	addr16 mov edx,0xae5f2f73
  41ea5c:	outs   dx,DWORD PTR ds:[esi]
  41ea5d:	rol    dh,0x3d
  41ea60:	sbb    al,0x75
  41ea62:	sbb    cl,BYTE PTR [ebx+0x35e09ead]
  41ea68:	fwait
  41ea69:	mov    bl,0xc
  41ea6b:	cli    
  41ea6c:	mov    ch,0x7
  41ea6e:	dec    DWORD PTR [ebp+0xd7b3ac7]
  41ea74:	add    BYTE PTR [ebx+0x4f30926b],bl
  41ea7a:	pop    ecx
  41ea7b:	int    0xa
  41ea7d:	jnp    0x41ea26
  41ea7f:	jecxz  0x41ea53
  41ea81:	ret    
  41ea82:	inc    ebp
  41ea83:	ins    DWORD PTR es:[edi],dx
  41ea84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea85:	test   eax,0x1e805fb9
  41ea8a:	arpl   WORD PTR [ecx],ax
  41ea8c:	lds    edx,FWORD PTR [edx]
  41ea8e:	inc    ebp
  41ea8f:	add    ch,BYTE PTR [ecx+0xa0e485]
  41ea95:	adc    BYTE PTR [eax+0x4e],al
  41ea98:	lock mov ebp,0xdee46e24
  41ea9e:	mov    ebp,0xd0d20086
  41eaa3:	or     edi,edx
  41eaa5:	push   ebp
  41eaa6:	lock sbb BYTE PTR [ebp+0x20],dl
  41eaaa:	lahf   
  41eaab:	outs   dx,BYTE PTR ds:[esi]
  41eaac:	call   FWORD PTR [ecx]
  41eaae:	sahf   
  41eaaf:	add    DWORD PTR gs:[esi-0x756490ee],esp
  41eab6:	pop    ss
  41eab7:	jae    0x41eb14
  41eab9:	in     al,0x1a
  41eabb:	add    al,0xef
  41eabd:	popa   
  41eabe:	sbb    dl,BYTE PTR [esi-0x22ca8f17]
  41eac4:	pushf  
  41eac5:	push   ebx
  41eac6:	push   cs
  41eac7:	call   0xdb64:0x45db3eea
  41eace:	push   edi
  41eacf:	das    
  41ead0:	mov    WORD PTR [ebp+0x13],fs
  41ead3:	lahf   
  41ead4:	sahf   
  41ead5:	(bad)  
  41ead6:	sbb    DWORD PTR [edi+edx*4],ecx
  41ead9:	das    
  41eada:	test   BYTE PTR [ebx],al
  41eadc:	gs fs aaa 
  41eadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae0:	lods   al,BYTE PTR ds:[esi]
  41eae1:	inc    eax
  41eae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae3:	xor    bl,BYTE PTR [ebx]
  41eae5:	(bad)  
  41eae6:	push   ds
  41eae7:	jge    0x41ead5
  41eae9:	and    bh,BYTE PTR [esi+0x628718b6]
  41eaef:	adc    al,0x21
  41eaf1:	pushf  
  41eaf2:	sub    al,0x8f
  41eaf4:	dec    ebx
  41eaf5:	push   ds
  41eaf6:	xor    esp,DWORD PTR [edi-0x170ed2f0]
  41eafc:	mov    esi,0xe477a738
  41eb01:	cli    
  41eb02:	cmp    ch,al
  41eb04:	adc    ecx,DWORD PTR [eax+0x79]
  41eb07:	mov    ebp,0x220da1ef
  41eb0c:	out    0x5,eax
  41eb0e:	dec    edx
  41eb0f:	and    ch,al
  41eb11:	das    
  41eb12:	xor    edx,eax
  41eb14:	test   BYTE PTR [esi-0x7f],cl
  41eb17:	or     al,0xc0
  41eb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1b:	aas    
  41eb1c:	xchg   ecx,eax
  41eb1d:	mov    edi,0xd8c317ee
  41eb22:	retf   0xb55a
  41eb25:	ins    DWORD PTR es:[edi],dx
  41eb26:	shr    DWORD PTR [eax-0x35],1
  41eb29:	sub    bh,cl
  41eb2b:	cs add eax,0x9a687517
  41eb31:	push   esp
  41eb32:	loop   0x41eb33
  41eb34:	cmp    cl,BYTE PTR [esi-0x274ff83c]
  41eb3a:	hlt    
  41eb3b:	scas   eax,DWORD PTR es:[edi]
  41eb3c:	scas   al,BYTE PTR es:[edi]
  41eb3d:	jno    0x41eb09
  41eb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb40:	adc    DWORD PTR [ebx],esi
  41eb42:	ret    0xab2e
  41eb45:	pusha  
  41eb46:	adc    bl,BYTE PTR [esi+0x4d3b581d]
  41eb4c:	jge    0x41eb06
  41eb4e:	mov    ds:0x5dbf8229,eax
  41eb53:	inc    edx
  41eb54:	outs   dx,BYTE PTR ds:[esi]
  41eb55:	int3   
  41eb56:	mov    ch,ah
  41eb58:	mov    ebx,0xbd22ffe2
  41eb5d:	stc    
  41eb5e:	mov    esi,0x33b24591
  41eb63:	mov    ds:0x755a808f,al
  41eb68:	inc    edx
  41eb69:	xchg   esi,eax
  41eb6a:	cmp    eax,DWORD PTR [esi+0x6fd8a272]
  41eb70:	jle    0x41ebc2
  41eb72:	pushf  
  41eb73:	not    BYTE PTR [ebx+edx*8+0x3f9bb1c7]
  41eb7a:	enter  0x43b8,0xec
  41eb7e:	dec    edx
  41eb7f:	jmp    0xbeca:0x1de44c50
  41eb86:	aam    0xe3
  41eb88:	and    DWORD PTR [ecx+0x1],esp
  41eb8b:	in     al,0x15
  41eb8d:	fidiv  WORD PTR [esi+0x66]
  41eb90:	xor    BYTE PTR [ebx],ch
  41eb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb93:	outs   dx,BYTE PTR ds:[esi]
  41eb94:	fsub   st,st(2)
  41eb96:	push   eax
  41eb97:	fdivr  DWORD PTR [esi]
  41eb99:	push   eax
  41eb9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb9b:	adc    dl,BYTE PTR [esi+ebp*1-0x292c3e55]
  41eba2:	fwait
  41eba3:	dec    edi
  41eba5:	mov    esi,0xa06e80cf
  41ebaa:	dec    ebx
  41ebab:	scas   ax,WORD PTR es:[edi]
  41ebad:	jns    0x41eba0
  41ebaf:	sbb    edx,edi
  41ebb1:	jmp    0xfe2d928
  41ebb6:	xor    BYTE PTR [edi],cl
  41ebb8:	lods   al,BYTE PTR ds:[esi]
  41ebb9:	cli    
  41ebba:	mov    edi,edx
  41ebbc:	pop    edi
  41ebbd:	sbb    edi,ebp
  41ebbf:	push   edx
  41ebc0:	loop   0x41eb84
  41ebc2:	mov    ecx,ebp
  41ebc4:	fbld   TBYTE PTR [ecx+esi*2]
  41ebc7:	add    eax,0xe4dc9667
  41ebcc:	(bad)  
  41ebcd:	adc    DWORD PTR fs:0x1f94388e,ecx
  41ebd4:	inc    ebx
  41ebd5:	or     dl,BYTE PTR [esi-0x52]
  41ebd8:	out    dx,al
  41ebd9:	cwde   
  41ebda:	fist   DWORD PTR [ecx]
  41ebdc:	cmc    
  41ebdd:	mov    bh,0x87
  41ebdf:	add    al,cl
  41ebe1:	sub    DWORD PTR [edx-0x12ae9721],0x5616be36
  41ebeb:	sub    bl,BYTE PTR [edi]
  41ebed:	and    edi,ecx
  41ebef:	fnstcw WORD PTR [ebx]
  41ebf1:	inc    ecx
  41ebf2:	push   0x98a0d87a
  41ebf7:	mov    ds,WORD PTR [ecx]
  41ebf9:	and    bh,BYTE PTR [ebx+0x59]
  41ebfc:	dec    ecx
  41ebfd:	inc    ebp
  41ebfe:	push   ds
  41ebff:	xchg   ecx,eax
  41ec00:	sbb    al,0xf0
  41ec02:	lock xchg edx,eax
  41ec04:	scas   al,BYTE PTR es:[edi]
  41ec05:	fsubr  st(5),st
  41ec07:	repz xlat BYTE PTR ds:[ebx]
  41ec09:	pop    ecx
  41ec0a:	leave  
  41ec0b:	xor    ebx,DWORD PTR [esi-0x25]
  41ec0e:	or     DWORD PTR [ecx+0x4a],edx
  41ec11:	out    0x9,al
  41ec13:	xchg   DWORD PTR ds:0x21cb69e5,ebp
  41ec19:	clc    
  41ec1a:	adc    ah,cl
  41ec1c:	leave  
  41ec1d:	sbb    DWORD PTR ds:0x91ae33ba,esi
  41ec23:	or     DWORD PTR [edi-0x29],ecx
  41ec26:	fwait
  41ec27:	jnp    0x41ec1d
  41ec29:	sar    BYTE PTR [edi-0x55],cl
  41ec2c:	jmp    0x41ebb7
  41ec2e:	xchg   ecx,eax
  41ec2f:	cli    
  41ec30:	test   BYTE PTR [ebp-0x36609018],cl
  41ec36:	dec    edx
  41ec37:	push   esp
  41ec38:	out    dx,eax
  41ec39:	mov    dh,0xd9
  41ec3b:	and    al,0xb4
  41ec3d:	pop    ebp
  41ec3e:	mov    DWORD PTR [edi+ecx*2-0x55],ebp
  41ec42:	and    eax,0xa67558ec
  41ec47:	xor    al,0x91
  41ec49:	loop   0x41ec04
  41ec4b:	retf   
  41ec4c:	js     0x41ec03
  41ec4e:	(bad)  
  41ec4f:	sar    DWORD PTR [edi+0x15],cl
  41ec52:	outs   dx,DWORD PTR ds:[esi]
  41ec53:	stos   BYTE PTR es:[edi],al
  41ec54:	mov    dl,BYTE PTR [esi+0x1ea0caf5]
  41ec5a:	push   es
  41ec5b:	lahf   
  41ec5c:	cmc    
  41ec5d:	mov    ah,BYTE PTR [edx+0x2096dd03]
  41ec63:	ret    
  41ec64:	dec    edx
  41ec65:	fisttp DWORD PTR [ebp-0x3942c29a]
  41ec6b:	fnstsw WORD PTR [edx-0x1f]
  41ec6e:	iret   
  41ec6f:	xchg   edx,eax
  41ec70:	icebp  
  41ec71:	sbb    al,0xb
  41ec73:	data16 or dh,bl
  41ec76:	push   eax
  41ec77:	mov    ds:0x99f20f6b,al
  41ec7c:	and    edx,DWORD PTR [edi+0x39]
  41ec7f:	xor    al,0xce
  41ec81:	call   0x1544:0xc8fb2d11
  41ec88:	pop    esp
  41ec89:	shl    eax,1
  41ec8b:	jp     0x41ec40
  41ec8d:	inc    ebx
  41ec8e:	outs   dx,DWORD PTR ds:[esi]
  41ec8f:	mov    esi,DWORD PTR [eax-0x43]
  41ec92:	xor    BYTE PTR [ebp-0x1d12c4f8],0xf4
  41ec99:	jns    0x41ec1e
  41ec9b:	xor    al,0xd4
  41ec9d:	call   DWORD PTR [ebp+eax*1-0x13]
  41eca1:	pusha  
  41eca2:	das    
  41eca3:	mov    bh,0xd4
  41eca5:	xor    BYTE PTR [ebp-0x491cb751],0xfa
  41ecac:	stc    
  41ecad:	or     eax,0x78d55b33
  41ecb2:	imul   ecx,DWORD PTR ds:0x9338bf29,0x37e904a8
  41ecbc:	imul   edi,DWORD PTR [ebx-0x66],0xacb3141c
  41ecc3:	(bad)  
  41ecc4:	fst    QWORD PTR [ecx+0x2c43ff79]
  41ecca:	stc    
  41eccb:	add    cx,bx
  41ecce:	into   
  41eccf:	js     0x41ecd2
  41ecd1:	hlt    
  41ecd2:	jle    0x41ec8e
  41ecd4:	cdq    
  41ecd5:	dec    esi
  41ecd6:	(bad)  
  41ecd8:	out    0x45,al
  41ecda:	xor    DWORD PTR ds:0xc9ae685b,ebx
  41ece0:	stos   BYTE PTR es:[edi],al
  41ece1:	mov    edi,0x8926ee13
  41ece6:	cs mov ch,0x26
  41ece9:	(bad)
  41eced:	ret    
  41ecee:	les    ebp,FWORD PTR [edi-0x3e]
  41ecf1:	or     BYTE PTR [ebx],ah
  41ecf3:	pusha  
  41ecf4:	dec    ebp
  41ecf5:	retf   
  41ecf6:	inc    eax
  41ecf7:	pop    ebx
  41ecf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf9:	push   ebx
  41ecfa:	scas   eax,DWORD PTR es:[edi]
  41ecfb:	push   edi
  41ecfc:	xchg   edi,eax
  41ecfd:	dec    esp
  41ecfe:	test   BYTE PTR [edx],0xdf
  41ed01:	mov    WORD PTR [ecx+ecx*1-0x11],?
  41ed05:	xchg   edi,eax
  41ed06:	mov    cl,0x2
  41ed08:	mov    ds:0x609b865d,al
  41ed0d:	xchg   ecx,eax
  41ed0e:	cmp    eax,0x69971a78
  41ed13:	in     eax,dx
  41ed14:	in     al,dx
  41ed15:	add    eax,0x2c89032b
  41ed1a:	pop    ds
  41ed1b:	neg    dh
  41ed1d:	xor    BYTE PTR [ebp-0x4cc7315e],ah
  41ed23:	ficomp DWORD PTR [bx]
  41ed26:	repnz sbb edx,ecx
  41ed29:	leave  
  41ed2a:	mov    ch,0xe
  41ed2c:	sti    
  41ed2d:	ss inc dx
  41ed30:	sub    eax,DWORD PTR [ebx-0x67963c69]
  41ed36:	outs   dx,BYTE PTR ds:[esi]
  41ed37:	popa   
  41ed38:	(bad)  
  41ed39:	cmp    bl,cl
  41ed3b:	and    al,0xe0
  41ed3d:	jb     0x41ecfe
  41ed3f:	retf   0x4cc5
  41ed42:	mov    dh,0x7c
  41ed44:	in     al,0xa9
  41ed46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed47:	out    dx,al
  41ed48:	sub    edi,edi
  41ed4a:	mov    eax,0xd689e51c
  41ed4f:	int3   
  41ed50:	mov    edi,0x5675556c
  41ed55:	stos   DWORD PTR es:[edi],eax
  41ed56:	loopne 0x41ed6c
  41ed58:	sar    esp,1
  41ed5a:	popa   
  41ed5b:	mov    dh,0x93
  41ed5d:	test   DWORD PTR [edi-0x15ab1b6c],ebx
  41ed63:	jnp    0x41eddb
  41ed65:	addr16 mov edi,0xd5034dba
  41ed6b:	idiv   eax
  41ed6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed6e:	xor    al,0x67
  41ed70:	in     al,dx
  41ed71:	sub    eax,0xd13801bd
  41ed76:	pop    ss
  41ed77:	mov    ah,0xe7
  41ed79:	(bad)  
  41ed7a:	(bad)  
  41ed7b:	out    dx,al
  41ed7c:	mov    dh,0x47
  41ed7e:	pop    ecx
  41ed7f:	push   0xffffff88
  41ed81:	std    
  41ed82:	jnp    0x41edad
  41ed84:	pop    ecx
  41ed85:	mov    dh,ah
  41ed87:	lock lahf 
  41ed89:	repz popf 
  41ed8b:	les    edi,FWORD PTR [ebp+0x2e]
  41ed8e:	cmp    eax,0x76b8eb57
  41ed93:	pop    edi
  41ed94:	lods   al,BYTE PTR ds:[esi]
  41ed95:	pop    edi
  41ed96:	mov    ebx,ds
  41ed98:	jbe    0x41ed3d
  41ed9a:	sub    cl,cl
  41ed9c:	pushf  
  41ed9d:	mov    ds:0x6948f38d,al
  41eda2:	xor    DWORD PTR [esp+ecx*8-0x4],0xffffff97
  41eda7:	popa   
  41eda8:	xchg   ebp,eax
  41eda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edaa:	or     DWORD PTR [edx+0xe1a1ac6],0xffffff8d
  41edb1:	mov    ecx,0xaec5d21e
  41edb6:	lods   eax,DWORD PTR ss:[esi]
  41edb8:	pop    ebp
  41edb9:	push   0xffffffff
  41edbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edbc:	jle    0x41ee38
  41edbe:	daa    
  41edbf:	dec    eax
  41edc0:	test   al,0xc3
  41edc2:	mov    edi,0x284c0670
  41edc7:	fnstenv [esi+0x1d]
  41edca:	or     ch,ch
  41edcc:	dec    esi
  41edcd:	clc    
  41edce:	fldcw  WORD PTR [edx]
  41edd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edd1:	jns    0x41ed75
  41edd3:	push   cs
  41edd4:	ficomp WORD PTR [ebx+0x7d]
  41edd7:	jp     0x41ee18
  41edd9:	(bad)  
  41edda:	out    dx,eax
  41eddb:	jg     0x41ed8e
  41eddd:	adc    eax,0x9807da1a
  41ede2:	mov    ds:0xe055e9c1,al
  41ede7:	jbe    0x41ed9f
  41ede9:	mov    ebp,ss
  41edeb:	(bad)  
  41edec:	sbb    DWORD PTR [edx],ecx
  41edee:	ss gs xor al,0x28
  41edf2:	lahf   
  41edf3:	xor    esp,DWORD PTR [eax-0x5708fc04]
  41edf9:	push   cs
  41edfa:	mov    edx,0xbadf7a8b
  41edff:	imul   ebx,DWORD PTR [edx-0x6447069a],0x71eea58d
  41ee09:	push   0xfffffffb
  41ee0b:	xchg   esi,eax
  41ee0c:	jmp    0x41ee84
  41ee0e:	cmp    eax,0x21f20012
  41ee13:	mov    esi,0x793a8a84
  41ee18:	mov    ecx,0x49b140b8
  41ee1d:	cdq    
  41ee1e:	int3   
  41ee1f:	out    0x38,al
  41ee21:	pop    eax
  41ee22:	or     esp,0x70
  41ee25:	aam    0x5f
  41ee27:	jle    0x41ede6
  41ee29:	cmp    BYTE PTR [esi+0x63],bl
  41ee2c:	adc    DWORD PTR [esi+0x51],ebx
  41ee2f:	pop    ebx
  41ee30:	cs mov eax,0x61985f15
  41ee36:	mov    ds:0x1d2e929e,eax
  41ee3b:	arpl   WORD PTR ds:0xce7af0f9,dx
  41ee41:	pop    eax
  41ee42:	mov    ebx,0xbf0a5015
  41ee47:	mov    cl,0xfb
  41ee49:	sub    BYTE PTR [edx],cl
  41ee4b:	adc    eax,0x58d02a13
  41ee50:	out    dx,al
  41ee51:	adc    edx,DWORD PTR [ecx-0x6626f04c]
  41ee57:	inc    esi
  41ee58:	out    0x81,eax
  41ee5a:	xchg   edi,eax
  41ee5b:	mov    esi,0x43a650aa
  41ee60:	pushf  
  41ee61:	pop    esi
  41ee62:	dec    ebp
  41ee63:	pop    ecx
  41ee64:	repnz or ecx,edx
  41ee67:	mov    edi,0xccaa7519
  41ee6c:	sub    ecx,DWORD PTR [ebx]
  41ee6e:	mov    ss,WORD PTR [edi+0x6b84e18c]
  41ee74:	and    BYTE PTR [esi-0x7b],ch
  41ee77:	xchg   esi,eax
  41ee78:	sub    ecx,DWORD PTR [ebx+0x13a0f70d]
  41ee7e:	hlt    
  41ee7f:	lods   eax,DWORD PTR ds:[esi]
  41ee80:	mov    dh,0x83
  41ee82:	xchg   ebx,eax
  41ee83:	mov    eax,ds:0x6f2bbed7
  41ee88:	cmc    
  41ee89:	int    0xc8
  41ee8b:	jb     0x41eeba
  41ee8d:	xchg   edi,eax
  41ee8e:	cmp    BYTE PTR [esi+0x3b],0x31
  41ee92:	in     eax,0x39
  41ee94:	push   0x628d97c5
  41ee99:	jo     0x41ee4e
  41ee9b:	pop    ebx
  41ee9c:	mov    edi,0xda77de2a
  41eea1:	imul   esi,DWORD PTR fs:[edx+0x64],0xd770dbc6
  41eea9:	jae    0x41ee31
  41eeab:	push   esi
  41eeac:	dec    edx
  41eead:	aam    0x93
  41eeaf:	and    al,0xe1
  41eeb1:	inc    esp
  41eeb2:	mov    esp,0xf262c169
  41eeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb8:	or     eax,0x290843aa
  41eebd:	push   esi
  41eebe:	or     BYTE PTR [edi],dh
  41eec0:	test   BYTE PTR [ebp+0x3c],al
  41eec3:	out    0x2b,eax
  41eec5:	sar    DWORD PTR [edi+0x52ed939c],1
  41eecb:	popf   
  41eecc:	in     eax,0x91
  41eece:	xchg   BYTE PTR [edx-0x57],ah
  41eed1:	mov    ecx,0xef596068
  41eed6:	pop    es
  41eed7:	inc    edi
  41eed8:	(bad)  
  41eed9:	xlat   BYTE PTR ds:[ebx]
  41eeda:	mov    al,ds:0x16f3d43c
  41eedf:	loopne 0x41ef1b
  41eee1:	inc    ebx
  41eee2:	add    dh,BYTE PTR [eax]
  41eee4:	in     eax,dx
  41eee5:	pop    ecx
  41eee6:	in     eax,dx
  41eee7:	inc    edx
  41eee8:	and    BYTE PTR [esi+0x6986ccec],ch
  41eeee:	mov    cl,0x14
  41eef0:	sbb    DWORD PTR ds:0x94d950e2,edx
  41eef6:	retf   0x9630
  41eef9:	std    
  41eefa:	aaa    
  41eefb:	sbb    ah,dl
  41eefd:	nop
  41eefe:	scas   eax,DWORD PTR es:[edi]
  41eeff:	fld    TBYTE PTR [esi]
  41ef01:	jecxz  0x41ef68
  41ef03:	int    0x2
  41ef05:	outs   dx,DWORD PTR ds:[esi]
  41ef06:	push   ds
  41ef07:	fisttp DWORD PTR [eax-0x74]
  41ef0a:	jbe    0x41ef5d
  41ef0c:	in     eax,dx
  41ef0d:	push   cs
  41ef0e:	in     al,dx
  41ef0f:	pop    edi
  41ef10:	and    ebp,DWORD PTR [eax-0x2d4409cd]
  41ef16:	shr    BYTE PTR [ebp-0x4],0x88
  41ef1a:	mov    ah,0x6
  41ef1c:	inc    edi
  41ef1d:	xor    cl,bl
  41ef1f:	add    BYTE PTR [eax+0x4c],cl
  41ef22:	outs   dx,DWORD PTR ds:[esi]
  41ef23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef24:	cdq    
  41ef25:	adc    DWORD PTR [eax-0x6f],ebp
  41ef28:	push   edx
  41ef29:	adc    ecx,DWORD PTR [esi]
  41ef2b:	push   cs
  41ef2c:	scas   al,BYTE PTR es:[edi]
  41ef2d:	mov    ecx,0x7edf19a2
  41ef32:	test   eax,0xbc18e63d
  41ef37:	iret   
  41ef38:	in     al,dx
  41ef39:	leave  
  41ef3a:	lock xchg ebx,eax
  41ef3c:	inc    ecx
  41ef3d:	lock rcl BYTE PTR [ebx+0x5e],cl
  41ef41:	fsub   st(2),st
  41ef43:	add    al,0x8c
  41ef45:	mov    ds,WORD PTR [eax]
  41ef47:	jle    0x41ef7a
  41ef49:	(bad)  
  41ef4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef4b:	enter  0xd56c,0xfd
  41ef4f:	jb     0x41eeff
  41ef51:	repz (bad) 
  41ef54:	adc    dh,BYTE PTR ds:[eax]
  41ef57:	fild   WORD PTR [edi]
  41ef59:	stos   BYTE PTR es:[edi],al
  41ef5a:	jmp    0x41ef4d
  41ef5c:	push   cs
  41ef5d:	mov    dl,0xd6
  41ef5f:	add    BYTE PTR [esi-0x1e19db79],dl
  41ef65:	pusha  
  41ef66:	or     bl,BYTE PTR [eax+0x2b]
  41ef69:	outs   dx,DWORD PTR ds:[esi]
  41ef6a:	fld    QWORD PTR [edx+0x2ab0e955]
  41ef70:	add    ecx,DWORD PTR [edi+0x6a]
  41ef73:	or     DWORD PTR [edi+eiz*1],edi
  41ef76:	das    
  41ef77:	push   0xb0364f9e
  41ef7c:	test   DWORD PTR [eax+eiz*2+0x74e3f6b5],esp
  41ef83:	adc    edx,DWORD PTR [esi+ebx*4]
  41ef86:	inc    ebp
  41ef87:	mov    ds,WORD PTR ds:0x25716de6
  41ef8d:	mov    BYTE PTR [ebx-0x1c5a1b4a],ah
  41ef93:	sub    BYTE PTR [ebp+0x75ad372b],0xa5
  41ef9a:	or     al,0x3b
  41ef9c:	pop    esp
  41ef9d:	mov    db3,edx
  41efa0:	sub    bh,BYTE PTR [ecx-0x6de42057]
  41efa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa7:	sar    BYTE PTR [ecx+0x8],1
  41efaa:	cmp    ebp,esi
  41efac:	dec    ecx
  41efad:	add    al,bh
  41efaf:	retf   0xa9ad
  41efb2:	push   esp
  41efb3:	or     eax,0xc6ccaaff
  41efb8:	sub    BYTE PTR [eax+0x5a],ah
  41efbb:	mov    ebp,0x18e0eeef
  41efc0:	mov    edi,0xea94f5d0
  41efc5:	stc    
  41efc6:	dec    esp
  41efc7:	and    ebx,DWORD PTR [ebx+0x48]
  41efca:	xchg   ecx,eax
  41efcb:	dec    esi
  41efcc:	sbb    ah,cl
  41efce:	je     0x41efd9
  41efd0:	push   DWORD PTR [esi-0x57]
  41efd3:	push   esi
  41efd4:	and    dh,BYTE PTR [esp+esi*1]
  41efd7:	jae    0x41effa
  41efd9:	shl    DWORD PTR [ebp+0x45],cl
  41efdc:	and    eax,0x204bcae3
  41efe1:	and    eax,0xe24f805c
  41efe6:	pop    ebx
  41efe7:	cmp    al,0x10
  41efe9:	sbb    eax,0x8d5732f5
  41efee:	mov    ds:0xb543c576,al
  41eff3:	push   eax
  41eff4:	jb     0x41efd6
  41eff6:	loop   0x41f002
  41eff8:	pop    eax
  41eff9:	and    cl,ah
  41effb:	push   esp
  41effc:	mov    esp,0xc53b8983
  41f001:	call   DWORD PTR [edx]
  41f003:	fcomip st,st(1)
  41f005:	mov    ebx,0x39bbcbfb
  41f00a:	iret   
  41f00b:	cld    
  41f00c:	scas   al,BYTE PTR es:[edi]
  41f00d:	adc    ch,dl
  41f00f:	inc    ebp
  41f010:	aas    
  41f011:	ds ins BYTE PTR es:[edi],dx
  41f013:	fxch   st(7)
  41f015:	call   0x9fac:0x4916042e
  41f01c:	inc    eax
  41f01d:	sbb    eax,0x9960d631
  41f022:	mov    dh,0xce
  41f024:	pop    edi
  41f025:	pusha  
  41f026:	mov    al,0x6f
  41f028:	and    eax,0x1538ffe5
  41f02d:	retf   0x19d7
  41f030:	leave  
  41f031:	push   esp
  41f032:	push   0x23ae887c
  41f037:	mov    eax,0x3f7b4ecf
  41f03c:	bound  ecx,QWORD PTR [ecx+ecx*2+0x1961220b]
  41f043:	push   esi
  41f044:	xor    BYTE PTR [edi],ah
  41f046:	jno    0x41f0b4
  41f048:	cwde   
  41f049:	dec    edi
  41f04a:	cdq    
  41f04b:	fistp  DWORD PTR [edi-0x4977fd3]
  41f051:	fwait
  41f052:	popf   
  41f053:	sbb    BYTE PTR [esi+0x12],ah
  41f056:	test   al,0xba
  41f058:	jns    0x41f0a1
  41f05a:	xor    al,0x4a
  41f05c:	mov    eax,0x926922d2
  41f061:	fcmovu st,st(1)
  41f063:	rcl    ah,1
  41f065:	aad    0xe1
  41f067:	push   edx
  41f068:	lods   eax,DWORD PTR ds:[esi]
  41f069:	cmp    DWORD PTR [eax+ebp*2-0x4d],ebx
  41f06d:	dec    esp
  41f06e:	mov    ecx,0xb165fcd2
  41f073:	fdiv   DWORD PTR [edx+ecx*1-0x1b7e4e69]
  41f07a:	mov    esp,ss
  41f07c:	js     0x41f09d
  41f07e:	cmp    eax,0x2217b982
  41f083:	rol    DWORD PTR [edi+edx*4],0xd3
  41f087:	sbb    eax,0x9e3d9af8
  41f08c:	cld    
  41f08d:	lock push 0x39e5ee66
  41f093:	ret    0x7b6f
  41f096:	push   ebp
  41f097:	in     al,dx
  41f098:	or     BYTE PTR [eax+0x114cdeeb],0x6b
  41f09f:	jmp    0x41f064
  41f0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a2:	icebp  
  41f0a3:	enter  0xcb47,0x27
  41f0a7:	push   0x5f
  41f0a9:	sar    BYTE PTR [ecx+0x46ebdfee],1
  41f0af:	shl    BYTE PTR [ebx+eax*8+0x37],1
  41f0b3:	dec    edx
  41f0b4:	pop    eax
  41f0b5:	or     ah,bh
  41f0b7:	add    al,0x4b
  41f0b9:	add    eax,0x94bb679
  41f0be:	scas   eax,DWORD PTR es:[edi]
  41f0bf:	mov    esi,0xea83c53b
  41f0c4:	bound  edx,QWORD PTR [eax-0x1f]
  41f0c7:	mov    eax,ds:0x481482a1
  41f0cc:	stos   BYTE PTR es:[edi],al
  41f0cd:	push   esp
  41f0ce:	sbb    ebx,DWORD PTR [ebx+0x145ca42d]
  41f0d4:	xchg   ebp,eax
  41f0d5:	mov    BYTE PTR [ecx+esi*8],ch
  41f0d8:	je     0x41f0d4
  41f0da:	dec    ecx
  41f0db:	in     al,dx
  41f0dc:	jno    0x41f121
  41f0de:	sbb    eax,0x6d1bd631
  41f0e3:	stc    
  41f0e4:	outs   dx,BYTE PTR ds:[esi]
  41f0e5:	jb     0x41f0ed
  41f0e7:	dec    eax
  41f0e8:	and    al,0x94
  41f0ea:	scas   eax,DWORD PTR es:[edi]
  41f0eb:	cli    
  41f0ec:	lods   eax,DWORD PTR ds:[esi]
  41f0ed:	retf   
  41f0ee:	add    eax,0x509b1a7a
  41f0f3:	cmp    bh,dl
  41f0f5:	sub    dl,BYTE PTR [eax]
  41f0f7:	inc    ebp
  41f0f8:	and    BYTE PTR [esi-0x19e83a64],bl
  41f0fe:	push   esi
  41f0ff:	jecxz  0x41f106
  41f101:	ficomp DWORD PTR [ebx+0x5430a1b]
  41f107:	pop    edi
  41f108:	pop    edx
  41f109:	adc    DWORD PTR [ebp+0x49],0x33d0ce3d
  41f110:	jg     0x41f0be
  41f112:	(bad)  [eax+0x1]
  41f115:	dec    ax
  41f117:	fdivr  QWORD PTR ds:0x3e9a8c43
  41f11d:	mov    esi,0xf853f1ac
  41f122:	dec    ecx
  41f123:	pop    ds
  41f124:	daa    
  41f125:	out    0xb4,al
  41f127:	aaa    
  41f128:	push   edx
  41f129:	jmp    0x41f0e2
  41f12b:	mov    cl,0xbd
  41f12d:	ret    0x1c49
  41f130:	cdq    
  41f131:	jp     0x41f11d
  41f133:	add    DWORD PTR [eax+esi*8-0x2b],esi
  41f137:	dec    esi
  41f138:	xor    eax,0xbcd6553c
  41f13d:	jbe    0x41f162
  41f13f:	inc    esi
  41f140:	inc    ebp
  41f141:	mov    BYTE PTR [edx],ah
  41f143:	imul   edx,DWORD PTR [edi],0xfffffff9
  41f146:	iret   
  41f147:	mov    ebx,0xc5188e79
  41f14c:	sbb    ch,BYTE PTR ds:0x92c60a73
  41f152:	lods   eax,DWORD PTR ds:[esi]
  41f153:	cld    
  41f154:	sub    edi,DWORD PTR [ebx]
  41f156:	rol    BYTE PTR [esi],cl
  41f158:	xlat   BYTE PTR ds:[ebx]
  41f159:	and    DWORD PTR [esi-0x41],edi
  41f15c:	aam    0xd5
  41f15e:	inc    esp
  41f15f:	push   0xffffff86
  41f161:	jecxz  0x41f109
  41f163:	adc    bh,BYTE PTR [edx+0x38]
  41f166:	mov    cl,0x50
  41f168:	sbb    cl,0x4c
  41f16b:	inc    esi
  41f16c:	popf   
  41f16d:	inc    ebp
  41f16e:	add    BYTE PTR [ebx],dl
  41f170:	push   es
  41f171:	sti    
  41f172:	popa   
  41f173:	inc    edx
  41f174:	popf   
  41f175:	or     ebx,esi
  41f177:	in     eax,0xdc
  41f179:	xchg   DWORD PTR [ecx+0x3ceab43c],eax
  41f17f:	jmp    0x5693:0xbe06ca30
  41f186:	inc    ebx
  41f187:	mov    ah,0x3
  41f189:	fmul   QWORD PTR [esi+0xf]
  41f18c:	hlt    
  41f18d:	pop    esp
  41f18e:	jmp    0x41f1bf
  41f190:	mov    ds:0x5855d02e,eax
  41f195:	xchg   ebp,eax
  41f196:	stos   DWORD PTR es:[edi],eax
  41f197:	sbb    bh,BYTE PTR [ebx-0xebcf54c]
  41f19d:	push   cs
  41f19e:	adc    cl,dh
  41f1a0:	sub    edi,DWORD PTR [ebx-0x6b]
  41f1a3:	loopne 0x41f219
  41f1a5:	pop    ds
  41f1a6:	mov    esp,0xd7590a0b
  41f1ab:	jge    0x41f19d
  41f1ad:	out    dx,eax
  41f1ae:	ins    DWORD PTR es:[edi],dx
  41f1af:	ret    0xd807
  41f1b2:	or     eax,0xb2265548
  41f1b7:	lahf   
  41f1b8:	jg     0x41f1fc
  41f1ba:	jo     0x41f225
  41f1bc:	or     al,0xf
  41f1be:	cmp    al,0xe1
  41f1c0:	push   ebp
  41f1c1:	loope  0x41f1cf
  41f1c3:	pop    edi
  41f1c4:	arpl   WORD PTR [eax+0x67],si
  41f1c7:	enter  0x5d02,0x16
  41f1cb:	std    
  41f1cc:	test   al,0x66
  41f1cf:	pop    ecx
  41f1d0:	test   ebx,edi
  41f1d2:	xlat   BYTE PTR ds:[ebx]
  41f1d3:	add    ebp,esi
  41f1d5:	dec    edi
  41f1d6:	xor    esp,DWORD PTR ds:0x40495a51
  41f1dc:	add    ch,bh
  41f1de:	arpl   WORD PTR [eax+edx*2+0x19],di
  41f1e2:	or     eax,0xe93cc652
  41f1e7:	ret    0x401f
  41f1ea:	rcr    BYTE PTR [ebx-0x67],1
  41f1ed:	cmp    dl,BYTE PTR [edi]
  41f1ef:	mov    dh,0x8f
  41f1f1:	sbb    bl,ah
  41f1f3:	loopne 0x41f207
  41f1f5:	sbb    BYTE PTR [eax-0xc24b205],dl
  41f1fb:	mov    edi,esp
  41f1fd:	add    DWORD PTR [eax-0x23],edx
  41f200:	jbe    0x41f25f
  41f202:	(bad)  
  41f203:	pop    edx
  41f204:	inc    ebx
  41f205:	(bad)  
  41f206:	push   0xffffffdd
  41f208:	pop    ecx
  41f209:	iret   
  41f20a:	rcl    DWORD PTR [edx],cl
  41f20c:	pop    edx
  41f20d:	sbb    ecx,DWORD PTR [esp+edx*2+0x2f64db29]
  41f214:	into   
  41f215:	stc    
  41f216:	fs adc ecx,0x13
  41f21a:	jle    0x41f256
  41f21c:	sub    DWORD PTR [edx-0x58c83139],ecx
  41f222:	mov    ds:0xb6c4b746,al
  41f227:	in     al,0x31
  41f229:	jnp    0x41f277
  41f22b:	adc    al,0x5b
  41f22e:	jg     0x41f200
  41f230:	jle    0x41f219
  41f232:	test   eax,0x69706cdb
  41f237:	mov    ecx,0x4fd1b4b9
  41f23c:	and    esp,DWORD PTR [edi+0x54c3a31c]
  41f242:	cli    
  41f243:	mov    ecx,0xf73573b5
  41f248:	mov    bl,0x43
  41f24a:	push   esi
  41f24b:	iret   
  41f24c:	mov    ch,0xb6
  41f24e:	mov    cl,0x50
  41f250:	(bad)
  41f253:	xchg   esi,eax
  41f254:	out    0x3d,al
  41f256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f257:	(bad)  
  41f259:	xor    edx,eax
  41f25b:	enter  0x8d50,0x8c
  41f25f:	and    DWORD PTR [esp+ebx*8],edi
  41f262:	jne    0x41f275
  41f264:	test   ebp,edi
  41f266:	out    0x6d,eax
  41f268:	mov    eax,ds:0xf51a216b
  41f26d:	out    dx,al
  41f26e:	xor    DWORD PTR ss:[ecx],ebx
  41f271:	inc    eax
  41f272:	leave  
  41f273:	mov    bl,BYTE PTR [esi-0x6cfc5ada]
  41f279:	jnp    0x41f277
  41f27b:	push   ecx
  41f27c:	mov    eax,DWORD PTR [ebx]
  41f27e:	mov    ebx,0xb22997cc
  41f283:	or     DWORD PTR [edx-0x56],esp
  41f286:	sahf   
  41f287:	jle    0x41f2ae
  41f289:	push   ebx
  41f28a:	stc    
  41f28b:	mov    edx,0x9692d628
  41f290:	or     DWORD PTR [ecx],ecx
  41f292:	jae    0x41f229
  41f294:	cmp    DWORD PTR [esi+0xd],ecx
  41f297:	xchg   esp,eax
  41f298:	leave  
  41f299:	mov    ds:0xd6d981c1,eax
  41f29e:	loope  0x41f27e
  41f2a0:	les    ebx,FWORD PTR gs:[ecx]
  41f2a3:	stos   DWORD PTR es:[edi],eax
  41f2a4:	mov    ebp,0x4f103c02
  41f2a9:	xchg   ebx,eax
  41f2aa:	jle    0x41f242
  41f2ac:	push   ecx
  41f2ad:	mov    bl,0x96
  41f2af:	mov    ds:0x7fad6202,eax
  41f2b4:	mov    esp,0x20b68e97
  41f2b9:	(bad)  
  41f2ba:	push   ss
  41f2bb:	push   0x6d
  41f2bd:	jg     0x41f247
  41f2bf:	cs push eax
  41f2c1:	cmp    eax,0x34e63fc5
  41f2c6:	or     DWORD PTR [esi+0x5f],esi
  41f2c9:	fsub   QWORD PTR [esi+eax*2]
  41f2cc:	mov    dh,0xdc
  41f2ce:	xchg   ebp,eax
  41f2cf:	rcpps  xmm0,XMMWORD PTR [esi]
  41f2d2:	and    DWORD PTR [edi+0x70],ecx
  41f2d5:	(bad)  
  41f2d6:	pushf  
  41f2d7:	popf   
  41f2d8:	adc    eax,0x8ed48c06
  41f2dd:	iret   
  41f2de:	or     BYTE PTR [eax],bl
  41f2e0:	scas   al,BYTE PTR es:[edi]
  41f2e1:	or     DWORD PTR [eax],edi
  41f2e3:	(bad)  
  41f2e4:	scas   eax,DWORD PTR es:[edi]
  41f2e5:	mov    ebp,0x660bc958
  41f2ea:	fist   DWORD PTR gs:[ebp+ebp*1-0x2ed5c0d6]
  41f2f2:	cli    
  41f2f3:	and    edx,DWORD PTR [edi+0x2afd34e2]
  41f2f9:	jmp    0xd1cc:0x3837b3b1
  41f300:	pop    ebp
  41f301:	jmp    0x41f32a
  41f303:	rcl    DWORD PTR [eax+0x10],0xf5
  41f307:	sahf   
  41f308:	shr    dl,cl
  41f30a:	jl     0x41f313
  41f30c:	xor    DWORD PTR [ecx-0x8319ecd],edi
  41f312:	mov    dh,dl
  41f314:	arpl   WORD PTR [ebx*2+0x3f5c2d38],ax
  41f31b:	push   edi
  41f31c:	add    ch,BYTE PTR [edi]
  41f31e:	out    0x79,eax
  41f320:	dec    DWORD PTR [ebp-0x6b2531f8]
  41f326:	test   al,0xc6
  41f328:	pop    eax
  41f329:	dec    ebp
  41f32a:	push   0xffffff8e
  41f32c:	push   esp
  41f32d:	ss sub eax,0x28fb790b
  41f333:	push   ebp
  41f334:	in     al,0x92
  41f336:	dec    ebx
  41f337:	loopne 0x41f33f
  41f339:	adc    eax,0xec2b6578
  41f33e:	or     al,0xb6
  41f340:	add    DWORD PTR [ebp+0x67],esi
  41f343:	mov    ebp,DWORD PTR [ecx-0x3d9e60d]
  41f349:	fisub  WORD PTR [ebx]
  41f34b:	sahf   
  41f34c:	into   
  41f34d:	js     0x41f360
  41f34f:	and    dh,BYTE PTR gs:[eax+esi*4+0x511e5b60]
  41f357:	and    ah,cl
  41f359:	shr    DWORD PTR [ecx-0x13c1c06e],0xbb
  41f360:	pop    edi
  41f361:	jns    0x41f351
  41f363:	jp     0x41f3cc
  41f365:	push   0xfb65741d
  41f36a:	jmp    0x41f35d
  41f36c:	adc    esi,edi
  41f36e:	sub    al,0xec
  41f370:	mov    dh,0x7b
  41f372:	cmp    eax,0x80e79732
  41f377:	(bad)  
  41f378:	jb     0x41f3d7
  41f37a:	push   ds
  41f37b:	aad    0x2b
  41f37d:	pop    eax
  41f37e:	jecxz  0x41f365
  41f380:	or     DWORD PTR [ecx+esi*8-0x5efdba06],ecx
  41f387:	or     al,0x2c
  41f389:	mov    ebp,0xa621951
  41f38e:	xlat   BYTE PTR ds:[ebx]
  41f38f:	rcl    BYTE PTR [ebx+eax*8-0x41d4d4b6],1
  41f396:	mov    ch,0x2c
  41f398:	add    esp,DWORD PTR [eax-0xa]
  41f39b:	pop    edx
  41f39c:	ret    
  41f39d:	inc    eax
  41f39e:	test   DWORD PTR [ecx-0x407ac26e],ebx
  41f3a4:	iret   
  41f3a5:	adc    BYTE PTR [edi],bl
  41f3a7:	scas   eax,DWORD PTR es:[edi]
  41f3a8:	mov    edi,0xa006ef44
  41f3ad:	inc    edi
  41f3ae:	repz sub bl,cl
  41f3b1:	pop    ebp
  41f3b2:	sub    esp,DWORD PTR [edi+0x13]
  41f3b5:	adc    al,0x58
  41f3b7:	dec    ebp
  41f3b8:	cmp    al,0x3e
  41f3ba:	in     eax,dx
  41f3bb:	adc    ebx,DWORD PTR [ebp-0x281e943d]
  41f3c1:	adc    BYTE PTR [ebx-0x5f],ah
  41f3c4:	lds    esp,FWORD PTR [esi-0x299962c2]
  41f3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3cb:	fld    TBYTE PTR [ebp-0x4]
  41f3cf:	xchg   DWORD PTR [edx],ecx
  41f3d1:	clc    
  41f3d2:	pop    ebx
  41f3d3:	out    dx,al
  41f3d4:	sub    BYTE PTR [edx+esi*4+0x6a],ch
  41f3d8:	test   bh,dh
  41f3da:	bnd jg 0x41f3aa
  41f3dd:	xchg   edi,eax
  41f3de:	xchg   BYTE PTR [ebp-0x28e754b5],dl
  41f3e4:	js     0x41f3ed
  41f3e6:	mov    ebx,0xc5db312a
  41f3eb:	mov    edi,0xd7e8a172
  41f3f0:	dec    esi
  41f3f1:	xchg   ecx,eax
  41f3f2:	dec    eax
  41f3f3:	ret    0x845d
  41f3f6:	adc    eax,0x97a5f504
  41f3fb:	jp     0x41f3ec
  41f3fd:	or     eax,0x6e0472be
  41f402:	and    al,0x4d
  41f404:	jo     0x41f440
  41f406:	and    edx,ebp
  41f408:	aam    0x51
  41f40a:	jae    0x41f400
  41f40c:	inc    eax
  41f40d:	addr16 ss inc esp
  41f410:	int    0xea
  41f412:	or     bh,dh
  41f414:	in     al,dx
  41f415:	test   eax,0xa9fa9701
  41f41a:	cmp    ah,ch
  41f41c:	inc    ebx
  41f41d:	push   ds
  41f41e:	fs in  al,dx
  41f420:	mov    WORD PTR [ecx],gs
  41f422:	or     al,0x5b
  41f424:	fcom   DWORD PTR [esi]
  41f426:	outs   dx,BYTE PTR ds:[esi]
  41f427:	out    dx,al
  41f428:	or     al,0xe2
  41f42a:	and    edi,edi
  41f42c:	mul    BYTE PTR [ebx-0x5b73a300]
  41f432:	loopne 0x41f449
  41f434:	dec    eax
  41f435:	mov    bh,0x1b
  41f437:	nop
  41f438:	push   ebp
  41f439:	jne    0x41f3e6
  41f43b:	mov    ebp,0x15bdc90b
  41f440:	or     al,0x7e
  41f442:	push   edx
  41f443:	cld    
  41f444:	test   BYTE PTR [ecx],ch
  41f446:	(bad)  
  41f447:	test   eax,0xeadb2f15
  41f44c:	xlat   BYTE PTR ds:[ebx]
  41f44d:	jle    0x41f49c
  41f44f:	sbb    DWORD PTR ds:0x2b4b0258,eax
  41f455:	outs   dx,BYTE PTR ds:[esi]
  41f456:	fadd   QWORD PTR [ebx+ebx*4+0x66]
  41f45a:	rcr    BYTE PTR [eax-0x6f15bb64],0x81
  41f461:	mov    ebp,0x59caad9e
  41f466:	sbb    eax,0x61a86ca
  41f46b:	or     ecx,ebx
  41f46d:	adc    esi,edi
  41f46f:	mov    WORD PTR [edx+0x7a],es
  41f472:	sbb    edx,DWORD PTR fs:[edx]
  41f475:	add    al,0xd8
  41f477:	add    DWORD PTR [ebx-0x77a737df],esp
  41f47d:	adc    BYTE PTR [ecx],ah
  41f47f:	dec    esp
  41f480:	(bad)  
  41f481:	shr    DWORD PTR [ebx],1
  41f483:	imul   di,WORD PTR [edi-0x655f970f],0xffb6
  41f48b:	dec    ebp
  41f48c:	div    DWORD PTR [ebp-0x58c5d247]
  41f492:	mov    edx,0x6b3a7b2f
  41f497:	test   eax,0x2df8ef96
  41f49c:	fwait
  41f49d:	clc    
  41f49e:	sbb    esi,DWORD PTR [ecx]
  41f4a0:	inc    esi
  41f4a1:	sahf   
  41f4a2:	sub    dh,al
  41f4a4:	in     al,0xe9
  41f4a6:	xchg   esp,eax
  41f4a7:	lods   al,BYTE PTR ds:[esi]
  41f4a8:	mov    ecx,0x4d9fb172
  41f4ad:	(bad)  
  41f4ae:	mov    ebx,0x8f4b6713
  41f4b3:	lods   eax,DWORD PTR ds:[esi]
  41f4b4:	pusha  
  41f4b5:	hlt    
  41f4b6:	pop    es
  41f4b7:	pop    ss
  41f4b8:	or     BYTE PTR [ebx-0x46],dl
  41f4bb:	lods   al,BYTE PTR ds:[esi]
  41f4bc:	pop    edi
  41f4bd:	push   ds
  41f4be:	test   BYTE PTR [esi+edx*1],dh
  41f4c1:	ss enter 0xcf2a,0xf5
  41f4c6:	loopne 0x41f476
  41f4c8:	jl     0x41f4c7
  41f4ca:	clc    
  41f4cb:	xchg   BYTE PTR fs:[esi+0x52ce56ac],bh
  41f4d2:	mov    WORD PTR [ebx-0x35],?
  41f4d5:	stos   DWORD PTR es:[edi],eax
  41f4d6:	xor    ebp,DWORD PTR [edx+0x34]
  41f4d9:	nop
  41f4da:	pop    ecx
  41f4db:	(bad)  [esi+0x29fdf9a4]
  41f4e1:	retf   0xa62b
  41f4e4:	into   
  41f4e5:	add    al,0xfe
  41f4e7:	and    esi,DWORD PTR [edx-0x64]
  41f4ea:	pop    esp
  41f4eb:	out    0x22,al
  41f4ed:	je     0x41f4c6
  41f4ef:	daa    
  41f4f0:	xlat   BYTE PTR cs:[ebx]
  41f4f2:	jb     0x41f4cf
  41f4f4:	gs popa 
  41f4f6:	jge    0x41f52f
  41f4f8:	arpl   WORD PTR [edi],bp
  41f4fa:	out    dx,eax
  41f4fb:	jle    0x41f47e
  41f4fd:	dec    ebx
  41f4fe:	les    ebp,FWORD PTR [ecx+0x7]
  41f501:	jmp    0xf6cf60d7
  41f506:	jo     0x41f4fa
  41f508:	adc    DWORD PTR [ebx],edi
  41f50a:	xlat   BYTE PTR ds:[ebx]
  41f50b:	aam    0xe8
  41f50d:	inc    edi
  41f50e:	push   ebx
  41f50f:	and    eax,0x47f8ca09
  41f514:	mov    al,0x59
  41f516:	xor    esi,DWORD PTR [ebx+0x45]
  41f519:	cdq    
  41f51a:	fbld   TBYTE PTR [ebp-0x1a]
  41f51d:	je     0x41f56a
  41f51f:	pop    edx
  41f520:	mov    bl,0x21
  41f522:	jmp    0x41f540
  41f524:	ja     0x41f56a
  41f526:	pop    es
  41f527:	fsub   QWORD PTR [esi+0x29]
  41f52a:	lods   al,BYTE PTR ds:[esi]
  41f52b:	ret    0x5ff
  41f52e:	cmc    
  41f52f:	xlat   BYTE PTR ds:[ebx]
  41f530:	xlat   BYTE PTR ds:[ebx]
  41f531:	add    ecx,DWORD PTR [si-0x32]
  41f535:	or     BYTE PTR [ebx+edi*4-0x72129a6f],dh
  41f53c:	clc    
  41f53d:	inc    ebp
  41f53e:	fimul  WORD PTR [esp+esi*1]
  41f541:	shl    DWORD PTR [edi+ecx*1],cl
  41f544:	mov    dl,0x42
  41f546:	loop   0x41f5b5
  41f548:	sar    BYTE PTR [ebx],cl
  41f54a:	mov    ah,0x34
  41f54c:	or     eax,esp
  41f54e:	enter  0xf4d3,0xde
  41f552:	cwde   
  41f553:	test   eax,0xc2a10491
  41f558:	xchg   DWORD PTR [edi],ecx
  41f55a:	cmc    
  41f55b:	and    eax,0x817cbeaf
  41f560:	mov    ch,0x7f
  41f562:	xchg   BYTE PTR [edx],al
  41f564:	cld    
  41f565:	adc    esi,DWORD PTR [ebx]
  41f567:	in     eax,0xdb
  41f569:	add    edi,DWORD PTR [esi+0x3b]
  41f56c:	cmp    esp,DWORD PTR [edx+0x33]
  41f56f:	sar    BYTE PTR [ecx-0x39560eb3],1
  41f575:	mov    ebx,DWORD PTR [edi+ecx*8-0x6778d558]
  41f57c:	pop    edi
  41f57d:	jns    0x41f588
  41f57f:	adc    DWORD PTR [edx-0x1e3fb919],ecx
  41f585:	sub    ebx,0x349ce9d3
  41f58b:	push   ss
  41f58c:	or     ecx,DWORD PTR [edi]
  41f58e:	nop
  41f58f:	ins    BYTE PTR es:[edi],dx
  41f590:	pop    ebx
  41f591:	lahf   
  41f592:	adc    al,0xe0
  41f594:	sub    eax,0x3498f441
  41f599:	pop    ss
  41f59a:	cmp    ebp,DWORD PTR [ebx-0x200343ed]
  41f5a0:	add    eax,0x84b243ee
  41f5a5:	mov    eax,ds:0xfa794b9a
  41f5aa:	add    BYTE PTR [esi],al
  41f5ac:	(bad)  
  41f5ad:	out    0x7a,al
  41f5af:	xor    ecx,edi
  41f5b1:	sbb    eax,0xd81f269f
  41f5b6:	jno    0x41f5e4
  41f5b8:	loopne 0x41f554
  41f5ba:	inc    edx
  41f5bb:	adc    ebp,DWORD PTR [ebx+eiz*8]
  41f5be:	sbb    DWORD PTR [edx],edx
  41f5c0:	out    dx,eax
  41f5c1:	fistp  QWORD PTR [ebx+0x24ef086b]
  41f5c7:	stos   DWORD PTR es:[edi],eax
  41f5c8:	fcmovnbe st,st(5)
  41f5ca:	pop    DWORD PTR ds:0x7879cb77
  41f5d0:	sub    eax,0x16299021
  41f5d5:	mov    fs,WORD PTR [eax+eax*1+0x1cc8bd23]
  41f5dc:	ds xchg ecx,eax
  41f5de:	and    ch,dh
  41f5e0:	cdq    
  41f5e1:	nop
  41f5e2:	in     eax,dx
  41f5e3:	fcom   DWORD PTR [ebx+ebp*2]
  41f5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e7:	popa   
  41f5e8:	cmp    esp,DWORD PTR [esi+eiz*8-0x2ff82357]
  41f5ef:	into   
  41f5f0:	jo     0x41f5a4
  41f5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5f3:	int3   
  41f5f4:	les    eax,FWORD PTR cs:[ecx]
  41f5f7:	out    dx,eax
  41f5f8:	pop    es
  41f5f9:	pop    esi
  41f5fa:	mov    edx,0x59e7d085
  41f5ff:	xor    al,0x9
  41f601:	mov    esi,0xf5e8a87e
  41f606:	(bad)  
  41f607:	aas    
  41f608:	(bad)  
  41f609:	cld    
  41f60a:	add    dl,BYTE PTR [ebp+ebp*2-0x70559b22]
  41f611:	out    0x16,eax
  41f613:	sbb    BYTE PTR [ecx],dh
  41f615:	idiv   BYTE PTR [ebx+edx*2]
  41f618:	sub    al,0x5f
  41f61a:	adc    al,0x9e
  41f61c:	(bad)  
  41f61d:	jbe    0x41f69a
  41f61f:	cli    
  41f620:	push   cs
  41f621:	jge    0x41f5a5
  41f623:	loope  0x41f672
  41f625:	and    eax,0x1d997d40
  41f62a:	popf   
  41f62b:	mov    ds:0x807157e5,al
  41f630:	add    ebp,DWORD PTR [edx+edx*1+0x37f97ee7]
  41f637:	add    eax,0xc47c0dde
  41f63c:	shr    BYTE PTR [ebp-0x70],0x34
  41f640:	rol    BYTE PTR [ebx-0x4a473bc1],1
  41f646:	inc    eax
  41f647:	popf   
  41f648:	xor    dl,BYTE PTR [eax]
  41f64a:	pop    edx
  41f64b:	adc    eax,0x93782f9c
  41f650:	pop    esi
  41f651:	jb     0x41f5f5
  41f653:	or     al,0x8b
  41f655:	aad    0xbf
  41f657:	cmc    
  41f658:	cmp    ch,BYTE PTR [ecx]
  41f65a:	xchg   esp,eax
  41f65b:	and    dl,BYTE PTR [edi-0x47dbd7d9]
  41f661:	sbb    esp,DWORD PTR [edx-0x29]
  41f664:	adc    esp,DWORD PTR [ebx+edi*2-0x20]
  41f668:	adc    bh,BYTE PTR [ebx-0x7dc08c6a]
  41f66e:	dec    esp
  41f66f:	pop    edi
  41f670:	jmp    0x41f609
  41f672:	pop    edi
  41f673:	jle    0x41f61b
  41f675:	jns    0x41f6b8
  41f677:	or     ah,dl
  41f679:	xchg   esp,eax
  41f67a:	bound  edx,QWORD PTR [edx]
  41f67c:	inc    ebx
  41f67d:	sti    
  41f67e:	inc    eax
  41f67f:	push   ds
  41f680:	and    BYTE PTR [eax+0x453a334e],0xc0
  41f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f688:	icebp  
  41f689:	imul   edx,DWORD PTR [edi-0x3a],0x5ce6c402
  41f690:	out    0x72,eax
  41f692:	mov    ch,0xd
  41f694:	je     0x41f6cf
  41f696:	xchg   edi,eax
  41f697:	clc    
  41f698:	xor    eax,0xb5d76e7e
  41f69d:	pop    ss
  41f69e:	push   eax
  41f69f:	xchg   edx,eax
  41f6a0:	outs   dx,BYTE PTR ds:[esi]
  41f6a1:	inc    esp
  41f6a2:	(bad)  
  41f6a3:	xor    eax,0x796a07c2
  41f6a8:	adc    BYTE PTR [esi],bh
  41f6aa:	or     eax,0x5d07f0cf
  41f6af:	inc    ebp
  41f6b0:	sub    esp,edx
  41f6b2:	xchg   esp,eax
  41f6b3:	adc    ch,cl
  41f6b5:	add    edx,DWORD PTR [edi]
  41f6b7:	cmp    ebx,DWORD PTR [ecx+0x57bc03b]
  41f6bd:	shr    DWORD PTR [edx+eiz*2+0x71],cl
  41f6c1:	jmp    0x41f726
  41f6c3:	lds    ebx,FWORD PTR [eax+esi*1-0x27]
  41f6c7:	into   
  41f6c8:	lds    edi,FWORD PTR [ebp+0x3d]
  41f6cb:	xor    ch,bh
  41f6cd:	stc    
  41f6ce:	mov    ds:0x4e9a6da4,al
  41f6d3:	cmp    al,0x25
  41f6d5:	pop    eax
  41f6d6:	add    al,0xc0
  41f6d8:	jne    0x41f6c0
  41f6da:	inc    eax
  41f6db:	ret    
  41f6dc:	add    bl,BYTE PTR [ebx]
  41f6de:	mov    ch,0x43
  41f6e0:	xor    al,BYTE PTR [eax-0x62e3deee]
  41f6e6:	pop    ebp
  41f6e7:	ja     0x41f69c
  41f6e9:	push   es
  41f6ea:	cli    
  41f6eb:	pop    ecx
  41f6ec:	pop    edi
  41f6ed:	or     eax,0x26c14a5f
  41f6f2:	mov    dl,0xec
  41f6f4:	dec    ecx
  41f6f6:	scas   al,BYTE PTR es:[edi]
  41f6f7:	mov    ss,edi
  41f6f9:	xchg   esp,eax
  41f6fa:	mov    esp,0x4766320e
  41f6ff:	into   
  41f700:	stos   DWORD PTR es:[edi],eax
  41f701:	jne    0x41f6c7
  41f703:	retf   0xd97e
  41f706:	mov    BYTE PTR [ebx],al
  41f708:	dec    ecx
  41f709:	xchg   esp,eax
  41f70a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f70b:	mov    edx,0xa49ed183
  41f710:	loopne 0x41f72d
  41f712:	mov    bl,0x15
  41f714:	(bad)  
  41f715:	out    0xdb,al
  41f717:	mov    WORD PTR [edi],?
  41f719:	mov    esp,0x883d824d
  41f71e:	mov    ecx,0x5e190a8
  41f723:	xlat   BYTE PTR ds:[ebx]
  41f724:	call   0xcb3abee3
  41f729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f72a:	test   DWORD PTR [esi+0x3a],ebp
  41f72d:	mov    ds:0x79af0bf0,eax
  41f732:	push   cs
  41f733:	inc    ebp
  41f734:	xchg   edx,eax
  41f735:	xchg   DWORD PTR [ebp-0x69],esi
  41f738:	pop    ebx
  41f739:	aam    0x6e
  41f73b:	loopne 0x41f727
  41f73d:	inc    edx
  41f73e:	lods   eax,DWORD PTR ds:[esi]
  41f73f:	mov    ebx,0x3842dc59
  41f744:	xchg   ebx,eax
  41f745:	es repnz addr16 popf 
  41f749:	jo     0x41f777
  41f74b:	arpl   WORD PTR [ebx-0x146f6ac1],cx
  41f751:	xor    ebp,DWORD PTR [esi-0x54cc761a]
  41f757:	in     eax,0xfe
  41f759:	in     eax,dx
  41f75a:	out    0x86,al
  41f75c:	in     eax,0x25
  41f75e:	and    eax,0x15c5189c
  41f763:	add    BYTE PTR ds:0xd67b5e5f,dh
  41f769:	rol    BYTE PTR [edi-0x34],1
  41f76c:	in     al,0x4e
  41f76e:	and    BYTE PTR [eax-0x143c5a0c],ah
  41f774:	cmp    al,0x5
  41f776:	cmp    bl,BYTE PTR ds:0xe4d46b
  41f77c:	push   0xd323fe08
  41f781:	enter  0x7eb6,0x24
  41f785:	aas    
  41f786:	mov    ebp,0x3fcc2b9c
  41f78b:	mov    DWORD PTR [ebx+0x66],esi
  41f78e:	int3   
  41f78f:	aaa    
  41f790:	mov    cl,0xa0
  41f792:	aam    0x95
  41f794:	and    BYTE PTR [esi+0x611a5574],0x2d
  41f79b:	cmp    ebp,DWORD PTR [ebx+0x3329c115]
  41f7a1:	stos   DWORD PTR es:[edi],eax
  41f7a2:	test   eax,0x8e50ad14
  41f7a7:	and    dl,BYTE PTR [ecx]
  41f7a9:	cli    
  41f7aa:	jle    0x41f79c
  41f7ac:	call   0x6139:0x86f0e89f
  41f7b3:	addr16 dec ebx
  41f7b5:	mov    ds:0xc6d11adc,eax
  41f7ba:	in     al,0xe7
  41f7bc:	sbb    DWORD PTR [edx-0x3e243ac],edi
  41f7c2:	fdiv   QWORD PTR [eax]
  41f7c4:	aam    0x37
  41f7c6:	lea    ecx,[edx-0x4179ebe3]
  41f7cc:	icebp  
  41f7cd:	mov    BYTE PTR [ebx-0x80],bh
  41f7d0:	pop    ebp
  41f7d1:	and    edi,DWORD PTR [esi+0x7f33d0e1]
  41f7d7:	shl    edi,cl
  41f7d9:	(bad)  
  41f7da:	in     al,dx
  41f7db:	jge    0x41f7fe
  41f7dd:	sahf   
  41f7de:	and    edi,DWORD PTR [ecx+0x6aaf5b58]
  41f7e4:	cmp    BYTE PTR [ecx-0x29],bh
  41f7e7:	push   0x96324b84
  41f7ec:	jo     0x41f7c8
  41f7ee:	retf   0x4e36
  41f7f1:	mov    edi,DWORD PTR [ebp+0x5f6a5026]
  41f7f7:	mov    al,0x8a
  41f7f9:	mov    dh,0x45
  41f7fb:	lods   al,BYTE PTR ds:[esi]
  41f7fc:	dec    ebx
  41f7fd:	or     esi,eax
  41f7ff:	push   esp
  41f800:	std    
  41f801:	adc    BYTE PTR [eax-0x2320dfa6],dl
  41f807:	(bad)  
  41f808:	mov    al,0x8c
  41f80a:	mov    dl,BYTE PTR [edx]
  41f80c:	pop    edx
  41f80d:	(bad)  
  41f80e:	jmp    0x2dd2773f
  41f813:	jge    0x41f7a3
  41f815:	aam    0xd3
  41f817:	sub    ecx,ebx
  41f819:	jae    0x41f867
  41f81b:	xchg   edi,eax
  41f81c:	into   
  41f81d:	mov    bl,0xc3
  41f81f:	addr16 sbb al,0xb9
  41f822:	xor    eax,0x90018096
  41f827:	loop   0x41f82f
  41f829:	push   esi
  41f82a:	mov    esp,0x792591c0
  41f82f:	inc    edi
  41f830:	iret   
  41f831:	es pop ecx
  41f833:	jno    0x41f808
  41f835:	inc    edi
  41f836:	mov    ebp,0xa5f7467c
  41f83b:	dec    ebp
  41f83c:	jmp    0xdfd2:0x2b84ec8f
  41f843:	sbb    BYTE PTR [edi-0x73900c86],0xfa
  41f84a:	jle    0x41f8c1
  41f84c:	jecxz  0x41f848
  41f84e:	and    eax,0xc3b55145
  41f853:	out    0xb,al
  41f855:	pop    ecx
  41f856:	idiv   edx
  41f858:	push   ss
  41f859:	adc    DWORD PTR [edi+0x1744c1b5],esp
  41f85f:	cmp    al,0x0
  41f861:	cs xchg edi,eax
  41f863:	pop    ds
  41f864:	xor    al,0x6a
  41f866:	call   0x86b5:0x15e8d884
  41f86d:	es add eax,0x71f14e65
  41f873:	repnz shr BYTE PTR [esi-0x1c73fe4f],1
  41f87a:	sahf   
  41f87b:	sbb    dh,bl
  41f87d:	sub    eax,0xe477cd68
  41f882:	sbb    eax,0x728785b4
  41f887:	mov    al,ds:0x583ed20f
  41f88c:	push   esi
  41f88d:	push   eax
  41f88e:	or     edi,ecx
  41f890:	(bad)  [edx+0x7b181d9a]
  41f896:	xlat   BYTE PTR ds:[ebx]
  41f897:	retf   
  41f898:	dec    ebx
  41f899:	sub    BYTE PTR [edx+ecx*1+0x2b],ah
  41f89d:	retf   
  41f89e:	retf   0xd9e9
  41f8a1:	cs ror edi,1
  41f8a4:	and    edi,esp
  41f8a6:	aam    0x99
  41f8a8:	adc    eax,0xc0c2170b
  41f8ad:	sbb    eax,0x5f304b70
  41f8b2:	ficomp DWORD PTR [ecx]
  41f8b4:	cs sub cl,ah
  41f8b7:	cs loope 0x41f8d5
  41f8ba:	mov    ch,0x7f
  41f8bc:	lds    edx,FWORD PTR [edi+0x541bd64d]
  41f8c2:	jmp    0x41f932
  41f8c4:	jg     0x41f86c
  41f8c6:	mov    ah,0xf
  41f8c8:	ins    DWORD PTR es:[edi],dx
  41f8c9:	imul   esp,DWORD PTR [ebx],0x3a
  41f8cc:	out    0xcd,eax
  41f8ce:	cdq    
  41f8cf:	mov    ebp,0x3327f575
  41f8d4:	fld    QWORD PTR [ebx-0x63]
  41f8d7:	div    ah
  41f8d9:	ficomp WORD PTR [ebx+ecx*1+0x37]
  41f8dd:	sbb    al,0xbc
  41f8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8e0:	xor    DWORD PTR [edi],0xffffff97
  41f8e3:	test   al,0xbe
  41f8e5:	xchg   ebx,eax
  41f8e6:	sbb    dh,dh
  41f8e8:	das    
  41f8e9:	jmp    0x3f9cd084
  41f8ee:	dec    ecx
  41f8ef:	mov    esp,0x2df4b935
  41f8f4:	sub    DWORD PTR [edi+edi*8-0xd],edx
  41f8f8:	xchg   ecx,eax
  41f8f9:	gs jge 0x41f96b
  41f8fc:	adc    al,0x7e
  41f8fe:	pop    edi
  41f8ff:	ret    
  41f900:	or     dl,dl
  41f902:	jb     0x41f920
  41f904:	mov    ebx,0xee0f8109
  41f909:	cmc    
  41f90a:	jmp    0x2c730e66
  41f90f:	daa    
  41f910:	push   edx
  41f911:	in     al,0x32
  41f913:	loopne 0x41f930
  41f915:	or     ah,0xd3
  41f918:	push   edx
  41f919:	(bad)  
  41f91a:	mov    ah,0xfb
  41f91c:	rcl    BYTE PTR [edi+ebp*2-0x28a0a993],cl
  41f923:	mov    WORD PTR ds:0x8e8fe880,?
  41f929:	sub    eax,0x9cb8951b
  41f92e:	in     eax,dx
  41f92f:	arpl   WORD PTR [edi+0x5c],cx
  41f932:	scas   al,BYTE PTR es:[edi]
  41f933:	int    0xd8
  41f935:	mov    WORD PTR [edi+esi*8-0x64ed1355],ss
  41f93c:	popf   
  41f93d:	addr16 mov esp,0xd77fa9b4
  41f943:	pop    edx
  41f944:	add    esi,ebp
  41f946:	mov    dh,0x46
  41f948:	xchg   BYTE PTR [eax+0x3b],bh
  41f94b:	(bad)  
  41f94c:	call   0x11b8c893
  41f951:	lahf   
  41f952:	aaa    
  41f953:	xor    ecx,DWORD PTR [esp+edi*4]
  41f956:	vandnps xmm5,xmm1,XMMWORD PTR [eax+0x58]
  41f95b:	add    al,0xe9
  41f95d:	dec    ecx
  41f95e:	hlt    
  41f95f:	or     al,BYTE PTR [edx]
  41f961:	mov    bl,0x84
  41f963:	loope  0x41f9be
  41f965:	hlt    
  41f966:	(bad)  [ebp-0x10]
  41f969:	sub    eax,0xe1dfbc1e
  41f96e:	sbb    eax,0x583a3396
  41f973:	sub    dl,BYTE PTR [edi-0x19fe1c6]
  41f979:	dec    ebp
  41f97a:	push   ebx
  41f97b:	imul   eax,eax,0x5b
  41f97e:	fist   WORD PTR [ebx-0x7811cf34]
  41f984:	xor    BYTE PTR cs:0xc8642102,al
  41f98b:	jns    0x41f95b
  41f98d:	fwait
  41f98e:	mov    eax,ds:0x64911573
  41f993:	lds    esp,FWORD PTR [ebx]
  41f995:	push   ecx
  41f996:	inc    esi
  41f997:	xor    DWORD PTR cs:[ebx+0x79],ebp
  41f99b:	repz sub bh,ah
  41f99e:	stc    
  41f99f:	outs   dx,BYTE PTR ds:[esi]
  41f9a0:	jmp    0x8f76:0xbd9f4b5d
  41f9a7:	ret    0x10aa
  41f9aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ab:	les    ebp,FWORD PTR [ebx-0x2e]
  41f9ae:	xor    DWORD PTR ds:0x5f4fba84,esp
  41f9b4:	add    al,0x28
  41f9b6:	pop    ebp
  41f9b7:	inc    ebp
  41f9b8:	jbe    0x41f990
  41f9ba:	push   ss
  41f9bb:	cld    
  41f9bc:	mov    bl,0x6
  41f9be:	and    eax,0x37cfdced
  41f9c3:	sahf   
  41f9c4:	add    al,0xf0
  41f9c6:	dec    ebp
  41f9c7:	cmp    eax,0xda3a0829
  41f9cc:	out    0xbe,eax
  41f9ce:	test   DWORD PTR [edx+0x1b44b254],ebp
  41f9d4:	and    DWORD PTR [eax],esi
  41f9d6:	sub    BYTE PTR [ecx+0x61],0xcb
  41f9da:	push   edi
  41f9db:	mov    al,ds:0x4464dd74
  41f9e0:	fst    QWORD PTR [edi]
  41f9e2:	(bad)  
  41f9e3:	pop    ss
  41f9e4:	sub    BYTE PTR [ecx+0x25130905],ch
  41f9ea:	inc    edi
  41f9eb:	add    ecx,DWORD PTR [esi]
  41f9ed:	pop    edx
  41f9ee:	cwde   
  41f9ef:	inc    edi
  41f9f0:	mov    bh,0xfe
  41f9f2:	jnp    0x41fa48
  41f9f4:	jo     0x41f9e4
  41f9f6:	imul   edx,DWORD PTR [ecx],0xffffffa5
  41f9f9:	arpl   WORD PTR [edx],cx
  41f9fb:	push   ecx
  41f9fc:	(bad)  
  41f9fd:	out    dx,eax
  41f9fe:	sti    
  41f9ff:	aam    0x37
  41fa01:	and    BYTE PTR [esi],bl
  41fa03:	mov    cl,0x75
  41fa05:	sub    al,0x0
  41fa07:	fcmovb st,st(5)
  41fa09:	in     eax,dx
  41fa0a:	mov    esi,0x68601a38
  41fa0f:	enter  0x53a9,0x5c
  41fa13:	jae    0x41fa1d
  41fa15:	fstp   TBYTE PTR [esi-0x13361b74]
  41fa1b:	sbb    al,0x2d
  41fa1d:	lahf   
  41fa1e:	call   0xae3d:0x607e2e59
  41fa25:	xchg   edi,eax
  41fa26:	pop    ds
  41fa27:	ja     0x41f9b1
  41fa29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa2a:	inc    eax
  41fa2b:	ins    DWORD PTR es:[edi],dx
  41fa2c:	call   0x2072:0xd469b808
  41fa33:	popa   
  41fa34:	pop    ebx
  41fa35:	lods   al,BYTE PTR ds:[esi]
  41fa36:	cmp    al,0xca
  41fa38:	jo     0x41fa14
  41fa3a:	repnz idiv cl
  41fa3d:	scas   eax,DWORD PTR es:[edi]
  41fa3e:	daa    
  41fa3f:	out    0x91,eax
  41fa41:	xor    ah,BYTE PTR [bp+di]
  41fa44:	push   edx
  41fa45:	push   ds
  41fa46:	(bad)  
  41fa47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa48:	fild   WORD PTR [ebp-0x68d5d1d8]
  41fa4e:	xchg   ecx,eax
  41fa4f:	and    DWORD PTR [ebp-0x6d],ebp
  41fa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa53:	inc    esi
  41fa54:	xor    esi,DWORD PTR [esi-0x37]
  41fa57:	fisttp WORD PTR [esi-0x1eec5709]
  41fa5d:	je     0x41fac2
  41fa5f:	xchg   esp,eax
  41fa60:	jmp    0x41f9ee
  41fa62:	int    0xb
  41fa64:	(bad)  
  41fa65:	dec    esi
  41fa66:	push   ebx
  41fa67:	mov    ebx,0x5298e12d
  41fa6c:	call   0x125c:0x55673b6
  41fa73:	adc    BYTE PTR [ebx],al
  41fa75:	fxtract 
  41fa77:	shl    DWORD PTR [ebp-0x7],cl
  41fa7a:	rcr    edx,1
  41fa7c:	push   0xf1ddce84
  41fa81:	add    DWORD PTR [edi+eax*2-0x37],0xffffffb3
  41fa86:	and    DWORD PTR [esi],edx
  41fa88:	bound  edx,QWORD PTR [ebx-0x1b]
  41fa8b:	mov    cl,0xbc
  41fa8d:	repz inc ebx
  41fa8f:	mov    ebp,0x336027f8
  41fa94:	push   0xc29c7f64
  41fa99:	mov    ah,0x7c
  41fa9b:	wbinvd 
  41fa9d:	xor    esp,DWORD PTR [ebx-0x76]
  41faa0:	mov    esi,0x53e50884
  41faa5:	ja     0x41fac2
  41faa7:	lods   eax,DWORD PTR ds:[esi]
  41faa8:	mov    WORD PTR [ebp-0x6b],?
  41faab:	or     cl,dh
  41faad:	cdq    
  41faae:	cs mov ebx,0xfa705ea4
  41fab4:	cmp    ecx,edx
  41fab6:	in     al,dx
  41fab7:	xor    ebx,edx
  41fab9:	sahf   
  41faba:	(bad)  
  41fabb:	and    BYTE PTR [ecx+0x56],cl
  41fabe:	jo     0x41fad8
  41fac0:	push   0x41c4ed94
  41fac5:	pop    esp
  41fac6:	push   ds
  41fac7:	xchg   ebx,eax
  41fac8:	inc    ebx
  41fac9:	out    0x1e,al
  41facb:	out    0xb3,al
  41facd:	pop    ss
  41face:	daa    
  41facf:	nop
  41fad0:	fist   WORD PTR es:[bp+si-0x27dc]
  41fad6:	bnd jo 0x41fada
  41fad9:	dec    edx
  41fada:	out    0x57,eax
  41fadc:	iret   
  41fadd:	outs   dx,BYTE PTR ds:[esi]
  41fade:	sbb    eax,DWORD PTR [edi-0x785eecd]
  41fae4:	jl     0x41fab6
  41fae6:	push   0x3c7d48a5
  41faeb:	dec    edi
  41faec:	and    bh,BYTE PTR [edx+eax*1-0x42]
  41faf0:	mov    esp,0xcf8d5d00
  41faf5:	outs   dx,BYTE PTR ds:[esi]
  41faf6:	cld    
  41faf7:	scas   eax,DWORD PTR es:[edi]
  41faf8:	xchg   ecx,eax
  41faf9:	pop    eax
  41fafa:	cmp    esi,edi
  41fafc:	push   edi
  41fafd:	into   
  41fafe:	xchg   esi,eax
  41faff:	fist   DWORD PTR [eax-0x1b679a04]
  41fb05:	leave  
  41fb06:	dec    DWORD PTR [ebp-0x76]
  41fb09:	sub    DWORD PTR [ecx+0x59],edx
  41fb0c:	mov    ah,0x42
  41fb0e:	scas   al,BYTE PTR es:[edi]
  41fb0f:	push   cs
  41fb10:	mov    ch,0xf0
  41fb12:	cld    
  41fb13:	mov    BYTE PTR [ebx+eiz*1+0x3f],bh
  41fb17:	push   edx
  41fb18:	xor    eax,0xde4084ff
  41fb1d:	sahf   
  41fb1e:	imul   ebp,DWORD PTR [ebx-0x472d6a7f],0x1cfe56ae
  41fb28:	inc    edi
  41fb29:	mov    edx,0x9eb1dfbe
  41fb2e:	clc    
  41fb2f:	jns    0x41fb63
  41fb31:	xchg   DWORD PTR [edx+0x1644c492],esi
  41fb37:	outs   dx,BYTE PTR ds:[esi]
  41fb38:	or     dl,dh
  41fb3a:	jmp    0xba0a936d
  41fb3f:	jbe    0x41fba7
  41fb41:	xlat   BYTE PTR ds:[ebx]
  41fb42:	into   
  41fb43:	inc    eax
  41fb44:	call   0xa455:0x3545b077
  41fb4b:	dec    edi
  41fb4c:	mov    ch,0x45
  41fb4e:	ret    0xd71b
  41fb51:	add    al,0xaf
  41fb53:	retf   0x4090
  41fb56:	mov    al,BYTE PTR [edx-0x19]
  41fb59:	fs mov ecx,0x24db24b7
  41fb5f:	nop
  41fb60:	aas    
  41fb61:	(bad)  
  41fb62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb63:	xchg   esi,eax
  41fb64:	sar    dh,0x28
  41fb67:	jl     0x41fb5c
  41fb69:	cwde   
  41fb6a:	pop    ss
  41fb6b:	mov    DWORD PTR [ebx+0x5d],ebx
  41fb6e:	push   edx
  41fb6f:	jnp    0x41fb6d
  41fb71:	inc    eax
  41fb72:	or     edx,ebx
  41fb74:	fs sub eax,0xd1a46091
  41fb7a:	xchg   esi,eax
  41fb7b:	and    ebp,edi
  41fb7d:	cmp    DWORD PTR [edi-0xc],ebx
  41fb80:	xor    DWORD PTR [edx+0x26ec41c],esi
  41fb86:	je     0x41fb6d
  41fb88:	cmp    ch,bl
  41fb8a:	fdivr  DWORD PTR [ebp-0x7]
  41fb8d:	jo     0x41fb69
  41fb8f:	or     al,dh
  41fb91:	jnp    0x41fb25
  41fb93:	add    edx,DWORD PTR [edi+esi*2-0x3837564b]
  41fb9a:	sbb    BYTE PTR [ebx-0x56073cfd],al
  41fba0:	test   ebp,0x36de2fa3
  41fba6:	test   eax,0x111ee85
  41fbab:	call   0xb2f0:0x25b392b0
  41fbb2:	test   al,0x84
  41fbb4:	loopne 0x41fbab
  41fbb6:	dec    esi
  41fbb7:	mov    ch,0x32
  41fbb9:	lahf   
  41fbba:	popa   
  41fbbb:	sub    BYTE PTR [edx-0x51579da3],ah
  41fbc1:	fnsave [esi-0x64]
  41fbc4:	jmp    0x41fb5b
  41fbc6:	xchg   esp,ebx
  41fbc8:	cdq    
  41fbc9:	sub    eax,0x90158606
  41fbce:	mov    bl,ah
  41fbd0:	cmp    bl,BYTE PTR [ebx-0x1e8be1d0]
  41fbd6:	and    al,0x89
  41fbd8:	mov    esi,0x428ae8e8
  41fbdd:	and    eax,DWORD PTR [esi-0x319738cb]
  41fbe3:	mov    bl,0xd5
  41fbe5:	fisubr DWORD PTR [esi-0x70434695]
  41fbeb:	test   DWORD PTR [esi+0x33],edi
  41fbee:	cli    
  41fbef:	sbb    BYTE PTR [edx+0x4674c32e],bl
  41fbf5:	arpl   WORD PTR [edi-0x3b],bx
  41fbf8:	pop    esp
  41fbf9:	or     DWORD PTR [ebx+0x42],ecx
  41fbfc:	mov    al,ds:0xae2c5ebf
  41fc01:	dec    ecx
  41fc02:	xchg   esp,eax
  41fc03:	jp     0x41fb89
  41fc05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc06:	in     al,dx
  41fc07:	jbe    0x41fba7
  41fc09:	(bad)  
  41fc0a:	lods   eax,DWORD PTR ds:[esi]
  41fc0b:	stos   BYTE PTR es:[edi],al
  41fc0c:	shl    DWORD PTR [edi+0x53681659],0x78
  41fc13:	pop    esp
  41fc14:	mov    eax,ds:0x875cdec0
  41fc19:	(bad)  
  41fc1a:	mov    eax,DWORD PTR [ebp+0x55708e78]
  41fc20:	test   DWORD PTR [ecx+0x67427793],edi
  41fc26:	xlat   BYTE PTR ds:[ebx]
  41fc27:	or     eax,0xeb1ffd1d
  41fc2c:	(bad)  
  41fc2d:	in     al,dx
  41fc2e:	sub    bl,ch
  41fc30:	mov    esp,0x7c322ff3
  41fc35:	adc    ecx,esi
  41fc37:	scas   al,BYTE PTR es:[edi]
  41fc38:	ja     0x41fbf0
  41fc3a:	mov    esp,DWORD PTR [eax-0x9d9cb23]
  41fc40:	aam    0xa2
  41fc42:	ficom  DWORD PTR [ebx+0x6]
  41fc45:	xor    bl,BYTE PTR [ebx]
  41fc47:	xchg   esp,eax
  41fc48:	push   esp
  41fc49:	fistp  WORD PTR [edx]
  41fc4b:	add    DWORD PTR [ecx],eax
  41fc4d:	gs mov ecx,0x679813e5
  41fc53:	arpl   sp,bp
  41fc55:	jg     0x41fc70
  41fc57:	dec    eax
  41fc58:	into   
  41fc59:	call   0xe111:0x64eba024
  41fc60:	outs   dx,BYTE PTR ds:[esi]
  41fc61:	mov    fs,ebp
  41fc63:	inc    edx
  41fc64:	fidiv  WORD PTR ds:0xc4daec80
  41fc6a:	daa    
  41fc6b:	sbb    edi,DWORD PTR [edx-0x5c]
  41fc6e:	je     0x41fc42
  41fc70:	add    ch,BYTE PTR [ebp+0x4e]
  41fc73:	(bad)  
  41fc74:	hlt    
  41fc75:	sbb    ah,bh
  41fc77:	scas   eax,DWORD PTR es:[edi]
  41fc78:	lea    edx,[ebx+0x28]
  41fc7b:	dec    edx
  41fc7c:	lea    ecx,[ebp-0x4c7706fd]
  41fc82:	mov    bh,0x9d
  41fc84:	xlat   BYTE PTR ds:[ebx]
  41fc85:	or     eax,0xc11798b1
  41fc8a:	retf   
  41fc8b:	mov    bl,0x25
  41fc8d:	mov    ecx,0xe066f8e7
  41fc92:	mov    edi,0x6bddee06
  41fc97:	xchg   ecx,eax
  41fc98:	popf   
  41fc99:	cmp    BYTE PTR [edx+0x4ca51087],ch
  41fc9f:	std    
  41fca0:	shl    BYTE PTR cs:[esi],1
  41fca3:	mov    ebp,0xcff5ff08
  41fca8:	idiv   DWORD PTR [eax-0x68b281d5]
  41fcae:	sbb    ecx,esi
  41fcb0:	pop    ebx
  41fcb1:	adc    al,0xda
  41fcb3:	loop   0x41fce0
  41fcb5:	int    0x56
  41fcb7:	pop    ebp
  41fcb8:	adc    al,0x72
  41fcba:	pop    ds
  41fcbb:	loop   0x41fd21
  41fcbd:	ret    
  41fcbe:	jbe    0x41fc87
  41fcc0:	mov    ?,WORD PTR [ebx+0x47d214a6]
  41fcc6:	mov    edx,0x4b685676
  41fccb:	mov    al,gs:0xa298e14a
  41fcd1:	in     eax,dx
  41fcd2:	cld    
  41fcd3:	add    cl,BYTE PTR [eax+0x40]
  41fcd6:	jns    0x41fc76
  41fcd8:	dec    esi
  41fcd9:	fs ja  0x41fc70
  41fcdc:	xchg   esi,ebx
  41fcde:	jge    0x41fca9
  41fce0:	or     DWORD PTR [edi],ebp
  41fce2:	cli    
  41fce3:	adc    al,0x64
  41fce5:	es dec eax
  41fce7:	add    dh,BYTE PTR [ebx+0x2f]
  41fcea:	xlat   BYTE PTR es:[ebx]
  41fcec:	push   edi
  41fced:	in     eax,0x44
  41fcef:	and    DWORD PTR [eax+ecx*4],eax
  41fcf2:	jae    0x41fc93
  41fcf4:	mov    ds:0xd15c8b7,al
  41fcfa:	jge    0x41fd10
  41fcfc:	jb     0x41fced
  41fcfe:	pop    ecx
  41fcff:	push   esi
  41fd00:	adc    BYTE PTR [ebx],cl
  41fd02:	sub    eax,0x9365ee06
  41fd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd08:	mov    dh,0x62
  41fd0a:	jnp    0x41fcd7
  41fd0c:	out    dx,eax
  41fd0d:	xor    al,0xad
  41fd0f:	cli    
  41fd10:	nop
  41fd11:	cmp    eax,0x9069b440
  41fd16:	shl    BYTE PTR ds:0x55d298ac,cl
  41fd1c:	pop    esi
  41fd1d:	ror    DWORD PTR [ecx+0x66aef484],1
  41fd23:	retf   
  41fd24:	mov    fs,esp
  41fd26:	pop    ss
  41fd27:	in     al,dx
  41fd28:	xor    BYTE PTR [ebx],ch
  41fd2a:	xchg   BYTE PTR [ecx-0x76],ah
  41fd2d:	test   ebp,edx
  41fd2f:	and    eax,0x43dc6281
  41fd34:	cdq    
  41fd35:	enter  0x3802,0x6b
  41fd39:	pop    edx
  41fd3a:	push   esp
  41fd3b:	inc    edx
  41fd3c:	xchg   BYTE PTR [ebp+0x699a38b4],cl
  41fd42:	hlt    
  41fd43:	icebp  
  41fd44:	ins    DWORD PTR es:[edi],dx
  41fd45:	scas   al,BYTE PTR es:[edi]
  41fd46:	loope  0x41fd72
  41fd48:	outs   dx,BYTE PTR ds:[esi]
  41fd49:	push   eax
  41fd4a:	and    eax,0xc4438788
  41fd4f:	sub    DWORD PTR [eax+0x72a862f4],esi
  41fd55:	outs   dx,BYTE PTR ds:[esi]
  41fd56:	sbb    bh,BYTE PTR [edx+0x14f78d82]
  41fd5c:	adc    eax,0x586232d4
  41fd61:	push   ds
  41fd62:	jle    0x41fcf9
  41fd64:	inc    ecx
  41fd65:	scas   al,BYTE PTR es:[edi]
  41fd66:	stos   DWORD PTR es:[edi],eax
  41fd67:	(bad)  
  41fd68:	aam    0xb2
  41fd6a:	push   ebx
  41fd6b:	loope  0x41fdb3
  41fd6d:	pop    edx
  41fd6e:	paddusw mm6,QWORD PTR [edx+eiz*4-0x59]
  41fd73:	sub    al,0x6d
  41fd75:	mov    esi,esp
  41fd77:	mov    ds:0x750c319f,al
  41fd7c:	mov    eax,ds:0x9938ebb
  41fd81:	das    
  41fd82:	nop
  41fd83:	(bad)  
  41fd84:	(bad)  
  41fd85:	into   
  41fd86:	fwait
  41fd87:	test   DWORD PTR [edi],0xc7ee5ce7
  41fd8d:	xlat   BYTE PTR ds:[ebx]
  41fd8e:	mov    dh,BYTE PTR [edx-0x23]
  41fd91:	xor    DWORD PTR [edi],eax
  41fd93:	fistp  QWORD PTR [eax]
  41fd95:	inc    esi
  41fd96:	sar    BYTE PTR [edx],0x10
  41fd99:	xchg   ebx,eax
  41fd9a:	sub    eax,0x67f30b7e
  41fd9f:	cs call 0x1cd5:0x8055f7db
  41fda7:	push   esi
  41fda8:	movmskps edi,xmm5
  41fdab:	and    al,0xce
  41fdad:	jns    0x41fd70
  41fdaf:	test   DWORD PTR [edi+esi*8+0x5750fb8f],edx
  41fdb6:	and    DWORD PTR [eax+0x76046243],ebx
  41fdbc:	mov    ebp,0xd0ebf7a5
  41fdc1:	adc    DWORD PTR [ecx+edi*2+0x54],edx
  41fdc5:	bound  ebx,QWORD PTR [esi+eiz*2+0x4d]
  41fdc9:	mov    bh,0x82
  41fdcb:	lods   al,BYTE PTR ds:[esi]
  41fdcc:	push   esp
  41fdcd:	ror    DWORD PTR [edi+0x44c90d65],1
  41fdd3:	mov    ebp,DWORD PTR [edx+0x67]
  41fdd6:	or     BYTE PTR [eax],0xd5
  41fdd9:	test   BYTE PTR [esi],bl
  41fddb:	xchg   ecx,eax
  41fddc:	dec    ebx
  41fddd:	loope  0x41fda9
  41fddf:	dec    eax
  41fde0:	(bad)  
  41fde1:	adc    ebp,DWORD PTR [edi+0x42]
  41fde4:	mov    eax,0xc3658d38
  41fde9:	push   esi
  41fdea:	test   eax,0x35400bc
  41fdef:	js     0x41fd74
  41fdf1:	jp     0x41fdb8
  41fdf3:	cmp    eax,eax
  41fdf5:	add    BYTE PTR [edi+0x5db1d62d],bh
  41fdfb:	jle    0x41fdb4
  41fdfd:	sti    
  41fdfe:	test   DWORD PTR [ecx],edx
  41fe00:	and    DWORD PTR [edi-0x5e478feb],ebx
  41fe06:	pop    ebx
  41fe07:	stos   BYTE PTR es:[edi],al
  41fe08:	pop    esi
  41fe09:	outs   dx,BYTE PTR ds:[esi]
  41fe0a:	xchg   edi,eax
  41fe0b:	dec    edi
  41fe0c:	iret   
  41fe0d:	ins    DWORD PTR es:[edi],dx
  41fe0e:	push   0x8d8f83a1
  41fe13:	es icebp 
  41fe15:	mov    al,0x13
  41fe17:	inc    ebx
  41fe18:	inc    edx
  41fe19:	and    ah,BYTE PTR [esi-0x52]
  41fe1c:	ficom  WORD PTR [esi]
  41fe1e:	sbb    esi,DWORD PTR [ecx]
  41fe20:	(bad)  
  41fe21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe22:	jp     0x41fdea
  41fe24:	gs xchg esp,eax
  41fe26:	enter  0xd675,0xc6
  41fe2a:	enter  0x9b01,0xaf
  41fe2e:	fdivr  st(4),st
  41fe30:	out    dx,eax
  41fe31:	out    0x21,eax
  41fe33:	in     al,dx
  41fe34:	(bad)  
  41fe35:	push   ebx
  41fe36:	(bad)  
  41fe38:	cdq    
  41fe39:	xor    al,0x32
  41fe3b:	test   al,0xdb
  41fe3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe3e:	jnp    0x41fe89
  41fe40:	enter  0xeb9b,0x72
  41fe44:	mov    ah,0x40
  41fe46:	mov    edx,0x927c0c76
  41fe4b:	push   ds
  41fe4c:	mov    ax,0xda51
  41fe50:	rcr    BYTE PTR [ebx+0x75ddb87b],0x35
  41fe57:	push   ebp
  41fe58:	ja     0x41fea1
  41fe5a:	call   0x552dc6f5
  41fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe60:	ret    
  41fe61:	(bad)  
  41fe62:	mov    edx,0x5622e448
  41fe67:	in     eax,dx
  41fe68:	xor    BYTE PTR [eax],bh
  41fe6a:	cdq    
  41fe6b:	jle    0x41fedc
  41fe6d:	fstp   DWORD PTR [edi]
  41fe6f:	popa   
  41fe70:	xlat   BYTE PTR ds:[ebx]
  41fe71:	sub    bl,BYTE PTR [esi+0x9853da4]
  41fe77:	jne    0x41febb
  41fe79:	mov    ecx,DWORD PTR [edi]
  41fe7b:	pop    ds
  41fe7c:	int    0xff
  41fe7e:	sub    al,0x71
  41fe80:	jb     0x41fec1
  41fe82:	js     0x41fe60
  41fe84:	ret    0x8bb3
  41fe87:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe89:	xchg   edx,eax
  41fe8a:	and    dl,al
  41fe8c:	bound  ebx,QWORD PTR [edi+0x12]
  41fe8f:	mov    al,0x52
  41fe91:	scas   al,BYTE PTR es:[edi]
  41fe92:	clc    
  41fe93:	sti    
  41fe94:	cli    
  41fe95:	jl     0x41fe36
  41fe97:	xlat   BYTE PTR ds:[ebx]
  41fe98:	mov    bh,0x62
  41fe9a:	cld    
  41fe9b:	imul   esi,DWORD PTR ds:0xfe1524f8,0xec92e87c
  41fea5:	mov    ebx,0xae1abe76
  41feaa:	add    al,0x93
  41feac:	jmp    FWORD PTR [edi]
  41feae:	shl    BYTE PTR [esi-0x30],0xb1
  41feb2:	data16 xor dl,BYTE PTR [ebx+0x58]
  41feb6:	shl    BYTE PTR [eax+0x54de911c],cl
  41febc:	mov    al,ah
  41febe:	into   
  41febf:	das    
  41fec0:	or     dh,BYTE PTR [ecx+0x2bf8a28c]
  41fec6:	and    ch,BYTE PTR [ecx]
  41fec8:	cld    
  41fec9:	xchg   ebx,eax
  41feca:	cmc    
  41fecb:	sub    ecx,DWORD PTR [edx+0x5b]
  41fece:	mov    esp,0xbb2810db
  41fed3:	cmp    edi,DWORD PTR [edx-0x178d9eb1]
  41fed9:	adc    cl,cl
  41fedb:	dec    esi
  41fedc:	out    dx,eax
  41fedd:	jo     0x41fed7
  41fedf:	jg     0x41fee5
  41fee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee2:	cdq    
  41fee3:	call   0x68de66f8
  41fee8:	inc    edi
  41fee9:	pop    esi
  41feea:	popf   
  41feeb:	lds    edi,FWORD PTR [ecx]
  41feed:	sub    eax,0xe68fcb46
  41fef2:	sub    BYTE PTR [ebx+0xf],0x40
  41fef6:	dec    esi
  41fef7:	or     eax,0x8dd18b8a
  41fefc:	ins    DWORD PTR es:[edi],dx
  41fefd:	inc    ebp
  41fefe:	xchg   ebp,eax
  41feff:	mov    ds:0x7a07c5f8,eax
  41ff04:	sub    edi,ebp
  41ff06:	cwde   
  41ff07:	daa    
  41ff08:	inc    esp
  41ff09:	rcl    ebx,0xdb
  41ff0c:	add    eax,0x25d148d5
  41ff11:	add    al,0xf3
  41ff13:	cmp    eax,0x88daf0a2
  41ff18:	test   BYTE PTR [ebp+0x39],ch
  41ff1b:	adc    al,0xf5
  41ff1d:	cmp    ebx,DWORD PTR [ecx]
  41ff1f:	and    edx,DWORD PTR [esi+0x51]
  41ff22:	dec    edx
  41ff23:	cld    
  41ff24:	add    esp,DWORD PTR [ecx+0x53]
  41ff27:	(bad)  
  41ff28:	mov    ds:0x51f82002,eax
  41ff2d:	ret    
  41ff2e:	imul   esp,edx,0xb4fde2f8
  41ff34:	iret   
  41ff35:	ss out 0xab,al
  41ff38:	dec    edx
  41ff39:	lea    esp,[ecx]
  41ff3b:	jmp    0x41fed8
  41ff3d:	sub    DWORD PTR [eax+eiz*4],ecx
  41ff40:	pop    ss
  41ff41:	hlt    
  41ff42:	add    DWORD PTR [edx+0x3c],esp
  41ff45:	push   ds
  41ff46:	pop    eax
  41ff47:	sub    BYTE PTR [edx*2+0x31d7f819],0x15
  41ff4f:	test   BYTE PTR [ebp-0x6b],dl
  41ff52:	dec    ecx
  41ff53:	mov    DWORD PTR [eax+0x54],ebx
  41ff56:	addr16 dec ecx
  41ff58:	xchg   ebx,eax
  41ff59:	cs xor al,0xeb
  41ff5c:	adc    al,0x99
  41ff5e:	and    DWORD PTR [ecx+0x4515b16],ecx
  41ff64:	scas   eax,DWORD PTR es:[edi]
  41ff65:	inc    eax
  41ff66:	call   0xb0a1:0xae52a74e
  41ff6d:	xor    al,0xd6
  41ff6f:	shl    dl,0x7
  41ff72:	shl    DWORD PTR [esi],0x3d
  41ff75:	jmp    0x41ff23
  41ff77:	push   ecx
  41ff78:	inc    esp
  41ff79:	push   eax
  41ff7a:	xchg   ecx,eax
  41ff7b:	add    al,0x33
  41ff7d:	call   0x7d770c5
  41ff82:	dec    esp
  41ff83:	mov    ecx,0x6e2488c2
  41ff88:	xchg   DWORD PTR [esi+0x46],esi
  41ff8b:	sub    bh,BYTE PTR [ebx]
  41ff8d:	sahf   
  41ff8e:	cld    
  41ff8f:	ja     0x41ff7f
  41ff91:	mov    eax,ds:0xda607a14
  41ff96:	inc    ecx
  41ff97:	pop    esp
  41ff98:	ja     0x41ffbf
  41ff9a:	or     ah,BYTE PTR [eax+ecx*2]
  41ff9d:	add    al,0xe8
  41ff9f:	dec    edx
  41ffa0:	jecxz  0x41ff95
  41ffa2:	pop    edi
  41ffa3:	fild   WORD PTR [esp+edx*2-0x1fbfdfd5]
  41ffaa:	pushf  
  41ffab:	scas   al,BYTE PTR es:[edi]
  41ffac:	sub    bl,ah
  41ffae:	cmp    ecx,DWORD PTR [ecx+edx*2]
  41ffb1:	enter  0xc43a,0xed
  41ffb5:	mov    cl,0xf1
  41ffb7:	inc    ebx
  41ffb8:	add    esp,DWORD PTR [esi+0x29]
  41ffbb:	fdivp  st(5),st
  41ffbd:	mov    al,ds:0x87749c49
  41ffc2:	call   0xee1b:0xf79db06d
  41ffc9:	sub    eax,0x33fc53c7
  41ffce:	inc    ebx
  41ffcf:	fwait
  41ffd0:	xor    DWORD PTR [eax+0x2ef4a778],edi
  41ffd6:	out    dx,eax
  41ffd7:	sbb    al,0xf5
  41ffd9:	mov    eax,0xd795bb06
  41ffde:	xchg   edx,eax
  41ffdf:	sbb    edx,esp
  41ffe1:	data16 jle 0x41ffba
  41ffe4:	jae    0x41ffc5
  41ffe6:	int    0x99
  41ffe8:	les    eax,FWORD PTR [ebp-0x5d]
  41ffeb:	lock sub eax,0x512671df
  41fff1:	pop    esi
  41fff2:	sub    ebx,edi
  41fff4:	xchg   ebp,esi
  41fff6:	xor    edi,DWORD PTR [esi]
  41fff8:	jle    0x420039
  41fffa:	push   0xffffff8c
  41fffc:	jno    0x420010
  41fffe:	jo     0x420068
  420000:	adc    BYTE PTR [esp+eiz*2],0x4b
  420004:	lds    edx,FWORD PTR [ecx-0x38]
  420007:	xor    al,BYTE PTR [edx-0x6d221bd9]
  42000d:	stos   DWORD PTR es:[edi],eax
  42000e:	jae    0x41ffd5
  420010:	es es aaa 
  420013:	(bad)  
  420014:	push   ds
  420015:	pushf  
  420016:	(bad)  
  420017:	dec    esi
  420018:	in     al,0x5
  42001a:	hlt    
  42001b:	push   ecx
  42001c:	pop    eax
  42001d:	pop    edi
  42001e:	push   edx
  42001f:	jbe    0x41ffa1
  420021:	popf   
  420022:	stos   BYTE PTR es:[edi],al
  420023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420024:	retf   
  420025:	adc    BYTE PTR [esi+0x28],dl
  420028:	inc    edi
  420029:	test   al,0x5b
  42002b:	sub    eax,0xe9827d87
  420030:	xchg   ecx,eax
  420031:	mov    al,al
  420033:	fldcw  WORD PTR [edi-0x72d2cd49]
  420039:	inc    esi
  42003a:	dec    esi
  42003b:	nop
  42003c:	sub    edx,DWORD PTR [ecx-0x18c08f63]
  420042:	dec    eax
  420043:	fist   DWORD PTR [edi-0x32]
  420046:	aaa    
  420047:	and    BYTE PTR [esi+ebx*8],ch
  42004a:	ror    BYTE PTR fs:[edi+eiz*2],cl
  42004e:	test   al,0xfc
  420050:	dec    eax
  420051:	mov    BYTE PTR [esi-0x43],bl
  420054:	push   edx
  420055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420056:	popf   
  420057:	adc    dh,BYTE PTR [ebp+eax*1-0x3ef22103]
  42005e:	(bad)  
  42005f:	call   0x3dcf9482
  420064:	pmaxub mm6,QWORD PTR [ecx-0x64]
  420068:	and    al,0x72
  42006a:	sub    DWORD PTR [ecx-0x4d],0x16e184d9
  420071:	inc    esp
  420072:	std    
  420073:	fnstenv [edi-0x32a18979]
  420079:	add    dh,bh
  42007b:	xor    al,0x99
  42007d:	and    esi,DWORD PTR [ebp-0x7f53b66a]
  420083:	call   0x93f6:0x93aa653
  42008a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42008b:	xchg   ecx,eax
  42008c:	mov    WORD PTR [esi],fs
  42008e:	or     ah,BYTE PTR [ecx-0x2e]
  420091:	jnp    0x4200d9
  420093:	popa   
  420094:	sub    esi,edx
  420096:	or     al,0xd4
  420098:	lahf   
  420099:	fxch   st(7)
  42009b:	retf   
  42009c:	or     eax,0xe3b0d8c7
  4200a1:	loopne 0x420104
  4200a3:	jae    0x4200d3
  4200a5:	mov    esp,0xc9739e57
  4200aa:	stos   BYTE PTR es:[edi],al
  4200ab:	(bad)  
  4200ac:	ja     0x4200f4
  4200ae:	popf   
  4200af:	pop    ebp
  4200b0:	ss and eax,0x407a9b35
  4200b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200b7:	push   esi
  4200b8:	cmp    BYTE PTR [edi+0x7645def3],cl
  4200be:	mov    ecx,0x412b3c2b
  4200c3:	sbb    BYTE PTR [eax+0x8],0x5e
  4200c7:	mov    ebx,DWORD PTR [edx+0xb]
  4200ca:	adc    eax,0x42010f7
  4200cf:	dec    eax
  4200d0:	inc    edi
  4200d1:	or     eax,0xfa8a2999
  4200d6:	fdiv   DWORD PTR [esi+0x71]
  4200d9:	jg     0x420121
  4200db:	adc    ah,BYTE PTR [edi+esi*2+0x50fb42c0]
  4200e2:	inc    esp
  4200e3:	retf   0x1113
  4200e6:	shl    BYTE PTR [edi-0x37],1
  4200e9:	jmp    DWORD PTR [esi-0xf]
  4200ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ed:	or     ecx,DWORD PTR [ebp+0x5b3f3fd]
  4200f3:	repz mov es,WORD PTR [edx]
  4200f6:	fadd   DWORD PTR [ebx]
  4200f8:	fwait
  4200f9:	ins    BYTE PTR es:[edi],dx
  4200fa:	int3   
  4200fb:	jb     0x420097
  4200fd:	test   al,0x50
  4200ff:	inc    edi
  420100:	out    0x0,al
  420102:	and    al,0x8f
  420104:	mov    edx,0xa7084df0
  420109:	adc    DWORD PTR [ebx+0x35793629],0x2
  420110:	nop
  420111:	adc    bl,BYTE PTR [bx+0x13b5]
  420116:	mov    ch,0x6
  420118:	fsubrp st(4),st
  42011a:	mov    BYTE PTR [edi],ch
  42011c:	dec    esp
  42011d:	sbb    edx,DWORD PTR [edi-0x1bf31e9]
  420123:	push   edx
  420124:	mov    eax,0xeeb767c5
  420129:	and    BYTE PTR [edx],dl
  42012b:	jg     0x4200c7
  42012d:	pop    edx
  42012e:	xor    ch,0x35
  420131:	sbb    BYTE PTR [esi],bh
  420133:	call   0x581d:0xd4913340
  42013a:	ins    BYTE PTR es:[edi],dx
  42013b:	jge    0x420191
  42013d:	lods   al,BYTE PTR ds:[esi]
  42013e:	repnz mov eax,0x4367cb36
  420144:	adc    eax,ecx
  420146:	mov    ds:0xdc7151f3,eax
  42014b:	add    DWORD PTR [esi+0x1d255021],eax
  420151:	lea    esp,[ebp+0x3ddeb1ee]
  420157:	jmp    0x86df2b6c
  42015c:	retf   0x2f61
  42015f:	inc    ecx
  420160:	pandn  mm3,QWORD PTR [esi]
  420163:	in     eax,dx
  420164:	sti    
  420165:	or     BYTE PTR [edi-0x27573620],0x4d
  42016c:	scas   eax,DWORD PTR es:[edi]
  42016d:	pop    esi
  42016e:	mov    bl,cl
  420170:	mov    edx,DWORD PTR [ebp-0x18549d46]
  420176:	retf   
  420177:	push   eax
  420178:	add    BYTE PTR [eax],ah
  42017a:	jge    0x4201c9
  42017c:	std    
  42017d:	sub    eax,0xe8726ad2
  420182:	aaa    
  420183:	nop
  420184:	ds dec esp
  420186:	iret   
  420187:	fldcw  WORD PTR [esi+0x37]
  42018a:	sahf   
  42018b:	cmp    dh,BYTE PTR [esi-0x4e95fc7d]
  420191:	adc    esp,DWORD PTR [esi]
  420193:	cmp    al,0x22
  420195:	sbb    al,0xec
  420197:	sub    BYTE PTR [ecx-0x13f61b7e],dl
  42019d:	mov    dl,BYTE PTR [ebx]
  42019f:	cmp    al,al
  4201a1:	test   al,0xd3
  4201a3:	ja     0x4201e4
  4201a5:	enter  0xcb0e,0xe9
  4201a9:	push   edi
  4201aa:	ja     0x420227
  4201ac:	js     0x4201ef
  4201ae:	(bad)  
  4201b0:	aam    0x93
  4201b2:	mov    esi,0x41653a9a
  4201b7:	in     eax,0xae
  4201b9:	nop
  4201ba:	jmp    0x863c975
  4201bf:	mov    dh,0x3b
  4201c1:	cs xchg edi,eax
  4201c3:	adc    eax,0x8e6eebe8
  4201c8:	clc    
  4201c9:	xchg   BYTE PTR [ecx],dl
  4201cb:	or     al,0x19
  4201cd:	shl    BYTE PTR [eax-0x40469777],cl
  4201d3:	call   0x6c17:0xc763abda
  4201da:	lea    esi,[edx]
  4201dc:	mov    ?,WORD PTR [eax+0x3f50a5de]
  4201e2:	rol    DWORD PTR [edx+0x30e3ef7a],1
  4201e8:	aad    0x64
  4201ea:	mov    dh,0xf4
  4201ec:	aad    0x23
  4201ee:	mov    ds:0x85158331,al
  4201f3:	popa   
  4201f4:	test   BYTE PTR [ebx+ebp*2],bh
  4201f7:	f2xm1  
  4201f9:	inc    ecx
  4201fa:	sub    dh,ah
  4201fc:	xchg   ebx,eax
  4201fd:	test   al,0x34
  4201ff:	icebp  
  420200:	and    DWORD PTR [esi-0x4a],0xffffffb7
  420204:	lods   al,BYTE PTR ds:[esi]
  420205:	fstp   DWORD PTR [ecx]
  420207:	popa   
  420208:	stos   BYTE PTR es:[edi],al
  420209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42020a:	jbe    0x42024c
  42020c:	(bad)  
  42020d:	jb     0x420238
  42020f:	gs sahf 
  420211:	xor    dl,BYTE PTR [ecx-0x3ad42c2d]
  420217:	inc    esp
  420218:	loopne 0x4201d7
  42021a:	cwde   
  42021b:	dec    ebp
  42021c:	jo     0x42022b
  42021e:	mov    DWORD PTR [edi+0x3880e6c7],0x55bb505a
  420228:	mov    ecx,0x44753a41
  42022d:	xor    al,0xd5
  42022f:	test   BYTE PTR [esi-0x71ca0d6c],ah
  420235:	fwait
  420236:	scas   eax,DWORD PTR es:[edi]
  420237:	pop    eax
  420238:	xor    BYTE PTR [esi+0x2],ch
  42023b:	sub    edi,ecx
  42023d:	and    eax,0x8718a2b3
  420242:	cmp    BYTE PTR [ebp+0x40],ch
  420245:	pop    edx
  420246:	enter  0xb477,0x9f
  42024a:	je     0x420269
  42024c:	in     al,dx
  42024d:	in     eax,0x4c
  42024f:	sar    DWORD PTR [ebp-0x7f],0x18
  420253:	sbb    bh,BYTE PTR [ebx+0x2d]
  420256:	jp     0x4202ce
  420258:	mov    dh,0x62
  42025a:	popf   
  42025b:	mov    bl,0x14
  42025d:	dec    esp
  42025e:	pop    edi
  42025f:	pop    edx
  420260:	stos   DWORD PTR es:[edi],eax
  420261:	mov    bh,0x35
  420263:	inc    esp
  420264:	cmp    dh,ch
  420266:	add    DWORD PTR [ebx-0x5f4bf484],ebp
  42026c:	or     al,0xbd
  42026e:	xor    dl,BYTE PTR [edx+0x4]
  420271:	inc    eax
  420272:	inc    edi
  420273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420274:	pop    es
  420275:	cmp    edx,DWORD PTR [edx+0x7d72771]
  42027b:	mov    dl,0xc2
  42027d:	das    
  42027e:	inc    ebp
  42027f:	scas   eax,DWORD PTR es:[edi]
  420280:	std    
  420281:	mov    edi,0x21af2a0e
  420286:	or     al,0xd8
  420288:	fbld   TBYTE PTR [esi]
  42028a:	pop    eax
  42028b:	push   esi
  42028c:	inc    ebp
  42028d:	sahf   
  42028e:	push   ss
  42028f:	hlt    
  420290:	fisttp WORD PTR ds:0x6a931d9
  420296:	or     ch,dl
  420298:	aam    0xc9
  42029a:	mov    esp,ebp
  42029c:	cmp    eax,0xd54c69fb
  4202a1:	jmp    0x420274
  4202a3:	push   ecx
  4202a4:	shl    DWORD PTR [ecx+0x4d],0x9c
  4202a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a9:	bound  esi,QWORD PTR [ecx+0x5d6b1f4a]
  4202af:	je     0x420274
  4202b1:	inc    esi
  4202b2:	or     esp,eax
  4202b4:	mov    edx,0xb76fae6a
  4202b9:	in     eax,dx
  4202ba:	add    BYTE PTR [ecx+edx*1],ch
  4202bd:	icebp  
  4202be:	cs xor al,0xec
  4202c1:	push   ss
  4202c2:	imul   ecx,DWORD PTR [ecx-0x25],0xbd6a252
  4202c9:	retf   
  4202ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202cb:	mov    edi,0xb79241c4
  4202d0:	dec    edi
  4202d1:	fcomp  DWORD PTR [edx-0x25]
  4202d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d5:	pusha  
  4202d6:	imul   esi,ecx,0xffffff83
  4202d9:	jle    0x4202ba
  4202db:	jmp    0x9743:0x5ba2cb56
  4202e2:	mov    ebx,0x417b6354
  4202e7:	jmp    0x42029f
  4202e9:	mov    eax,ds:0xa7637ed2
  4202ee:	fsubr  DWORD PTR [edi+0x4cf50593]
  4202f4:	ror    BYTE PTR [edi-0x31],1
  4202f7:	retf   
  4202f8:	std    
  4202f9:	jno    0x4202f0
  4202fb:	call   0x65dc155
  420300:	cmp    eax,0x7b0f71d0
  420305:	push   eax
  420306:	gs dec esp
  420308:	pushf  
  420309:	mov    ds:0xa0a53511,al
  42030e:	dec    esi
  42030f:	inc    edx
  420310:	ret    
  420311:	xor    dh,ch
  420313:	add    ecx,ebx
  420315:	mov    esp,0x6ed4b95e
  42031a:	test   eax,0xe9589149
  42031f:	out    0xf2,al
  420321:	push   0x5841ff93
  420326:	xchg   esi,eax
  420327:	leave  
  420328:	jle    0x4202cb
  42032a:	fimul  WORD PTR [edx]
  42032c:	jno    0x4202f4
  42032e:	and    eax,0x3e1b7529
  420333:	iret   
  420334:	jne    0x420315
  420336:	adc    eax,0xa32df461
  42033b:	test   bh,cl
  42033d:	xor    bh,bl
  42033f:	mov    ds:0xc12c8c55,eax
  420344:	aad    0x9d
  420346:	mov    edx,0x60b94cba
  42034b:	or     eax,0xbbb5f79a
  420350:	hlt    
  420351:	out    dx,eax
  420352:	cli    
  420353:	hlt    
  420354:	fwait
  420355:	int    0x82
  420357:	test   dl,ch
  420359:	arpl   WORD PTR ds:0xf1cb9e15,bp
  42035f:	adc    edi,DWORD PTR [ebp+ebp*1+0x3e8e53b]
  420366:	lods   al,BYTE PTR ds:[esi]
  420367:	aad    0x74
  420369:	sbb    DWORD PTR [edi+0x1e],ebx
  42036c:	xchg   ebx,eax
  42036d:	push   ss
  42036e:	xor    bl,ah
  420370:	push   ss
  420371:	jl     0x4202f5
  420373:	xor    BYTE PTR [eax+0x34],ah
  420376:	sbb    al,0x93
  420378:	dec    esp
  420379:	mov    WORD PTR [edx],fs
  42037b:	js     0x420322
  42037d:	jmp    DWORD PTR [esp+ebp*8]
  420380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420381:	(bad)  [edi+edi*8+0x2]
  420385:	and    eax,0xd82ea2ac
  42038a:	inc    esi
  42038b:	sub    al,0xa1
  42038d:	das    
  42038e:	pop    esi
  42038f:	std    
  420390:	inc    ebx
  420391:	retf   
  420392:	inc    ebp
  420393:	jmp    0xf03f78df
  420398:	jg     0x42031d
  42039a:	ins    DWORD PTR es:[edi],dx
  42039b:	jp     0x42040f
  42039d:	out    0x56,eax
  42039f:	xchg   ecx,eax
  4203a0:	inc    edx
  4203a1:	mov    edi,DWORD PTR [edx-0x313e2ed6]
  4203a7:	xchg   ecx,eax
  4203a8:	adc    BYTE PTR [edx-0xf5c3a8d],bh
  4203ae:	cs gs pusha 
  4203b1:	add    al,0x0
  4203b3:	arpl   WORD PTR ds:0x73b60e29,cx
  4203b9:	(bad)  
  4203bb:	into   
  4203bc:	mov    edi,0x96d1f693
  4203c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c2:	xor    bl,BYTE PTR [edi+0x5b5c5023]
  4203c8:	sbb    eax,edi
  4203ca:	ds fsub st(4),st
  4203ce:	inc    esi
  4203cf:	or     ebp,DWORD PTR [edx+0x7cd2cb6c]
  4203d5:	stc    
  4203d6:	shr    DWORD PTR [edi+0x2e57f1e0],cl
  4203dc:	(bad)  
  4203dd:	fdiv   st(2),st
  4203df:	push   0xffffffdc
  4203e1:	and    ebp,DWORD PTR [eax-0x3e57f93c]
  4203e7:	loop   0x420431
  4203e9:	and    eax,0x714dc124
  4203ee:	cmc    
  4203ef:	out    dx,al
  4203f0:	popa   
  4203f1:	nop
  4203f2:	xor    DWORD PTR [ecx+0x4534ce26],ecx
  4203f8:	or     bh,bh
  4203fa:	sub    eax,0xe9ec9179
  4203ff:	(bad)  
  420400:	pop    ds
  420401:	add    ecx,DWORD PTR [edi-0x23]
  420404:	(bad)  
  420405:	adc    BYTE PTR [ecx],ah
  420407:	mov    bh,0x90
  420409:	xchg   ecx,eax
  42040a:	sub    ebx,DWORD PTR [edi+0x1e]
  42040d:	add    dh,ch
  42040f:	inc    esp
  420410:	loop   0x4203f7
  420412:	stos   DWORD PTR es:[edi],eax
  420413:	fidiv  WORD PTR [edi+0x1a]
  420416:	mov    ecx,0x577a7a30
  42041b:	mov    BYTE PTR [esi+edx*2-0x7f],ah
  42041f:	mov    ds:0x2d3100d9,al
  420424:	dec    esi
  420425:	push   es
  420426:	adc    bh,BYTE PTR [ebp+0x5ae62cd5]
  42042c:	xor    al,0x71
  42042e:	pop    edx
  42042f:	push   esi
  420430:	or     eax,0x3f653378
  420435:	(bad)  
  420436:	retf   0x9c64
  420439:	fstp   DWORD PTR [esi+0x29eb1ecc]
  42043f:	ins    DWORD PTR es:[edi],dx
  420440:	inc    ebx
  420441:	loopne 0x42045b
  420443:	imul   eax,DWORD PTR [ecx+0x9]
  420447:	cmovb  ecx,DWORD PTR [esi-0x313b5565]
  42044e:	out    dx,al
  42044f:	popf   
  420450:	dec    ecx
  420451:	pop    es
  420452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420453:	retf   0x7eb7
  420456:	push   0xffffffe7
  420458:	dec    ebp
  420459:	jecxz  0x420480
  42045b:	cwde   
  42045c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42045d:	aas    
  42045e:	aad    0xc9
  420460:	sub    BYTE PTR [ecx-0x18],ch
  420463:	lds    eax,FWORD PTR [edi+0x73]
  420466:	sub    dl,BYTE PTR gs:[eax-0x5328a147]
  42046d:	imul   DWORD PTR [eax-0x46]
  420470:	mov    WORD PTR [ebx+esi*2],?
  420473:	xchg   ecx,eax
  420474:	aad    0x55
  420476:	mov    esi,0x50cbac44
  42047b:	cwde   
  42047c:	pop    esi
  42047d:	and    ecx,0xb506652d
  420483:	cmp    dl,cl
  420485:	callw  0x4135
  420489:	cld    
  42048a:	add    eax,0x7e80bd59
  42048f:	sub    DWORD PTR cs:[edx-0x64],ecx
  420493:	jmp    0x4204b0
  420495:	call   0x6a4862cd
  42049a:	shl    BYTE PTR [edi],cl
  42049c:	test   BYTE PTR [ebp+0x70],0x1d
  4204a0:	(bad)
  4204a4:	mov    ch,0x20
  4204a6:	sbb    bh,BYTE PTR [edi]
  4204a8:	ins    DWORD PTR es:[edi],dx
  4204a9:	mov    dh,0xd0
  4204ab:	lock rcr BYTE PTR [esi],0x7
  4204af:	add    eax,0xddb8219a
  4204b4:	lods   eax,DWORD PTR ds:[esi]
  4204b5:	adc    DWORD PTR [edx-0x2a],eax
  4204b8:	push   esi
  4204b9:	add    DWORD PTR [ebx-0x38a9d961],ebx
  4204bf:	mov    ch,0x44
  4204c1:	dec    ebx
  4204c2:	lds    edx,FWORD PTR [ebp+0x7d]
  4204c5:	cld    
  4204c6:	shl    dh,1
  4204c8:	mov    edi,0x6580544c
  4204cd:	add    BYTE PTR [eax+0x858acf],dl
  4204d3:	cmp    dh,ah
  4204d5:	dec    edx
  4204d6:	aaa    
  4204d7:	fsubr  QWORD PTR [ecx]
  4204d9:	not    DWORD PTR [edx+0x6a]
  4204dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204de:	dec    ebp
  4204df:	cmp    eax,0x92c8bab3
  4204e4:	push   0x194c8bf1
  4204e9:	ja     0x42051a
  4204eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204ec:	ja     0x420549
  4204ee:	addr16 xchg edx,eax
  4204f0:	sti    
  4204f1:	and    bh,cl
  4204f3:	fisub  DWORD PTR [esp+ebx*1-0x61a32e79]
  4204fa:	inc    ebx
  4204fb:	add    DWORD PTR [eax+esi*2-0x76],edx
  4204ff:	retf   0x40ba
  420502:	sti    
  420503:	mul    DWORD PTR [ecx]
  420505:	add    BYTE PTR [edx+0x2e6c44e],0x13
  42050c:	mov    ecx,DWORD PTR [ebx-0x698d62c4]
  420512:	adc    esp,ebp
  420514:	xor    eax,0x59ee604b
  420519:	pop    edi
  42051a:	scas   eax,DWORD PTR es:[edi]
  42051b:	loop   0x42057c
  42051d:	fiadd  DWORD PTR [ebx+0x1e44542e]
  420523:	data16 xor dh,0xf
  420527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420528:	dec    ecx
  420529:	arpl   WORD PTR [edi+0x3eeed829],bp
  42052f:	das    
  420530:	mov    esi,0xf3e27c2d
  420535:	push   esp
  420537:	push   cs
  420538:	bnd jge 0x420502
  42053b:	inc    edx
  42053c:	push   edi
  42053d:	stos   BYTE PTR es:[edi],al
  42053e:	loope  0x420536
  420540:	les    esp,FWORD PTR ds:0x516610b3
  420546:	mov    esp,0x12f9438f
  42054b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42054c:	pop    esp
  42054d:	imul   ecx,ecx,0x791a852f
  420553:	and    DWORD PTR [ebp-0x6c65db2b],0xffffffd1
  42055a:	je     0x420511
  42055c:	js     0x420525
  42055e:	push   eax
  42055f:	popf   
  420560:	sbb    al,0x4f
  420562:	(bad)  [edx]
  420564:	adc    ch,BYTE PTR [ecx]
  420566:	mov    bl,0xe3
  420568:	sub    bl,BYTE PTR [edx+0x28]
  42056b:	test   BYTE PTR [edi+0x78],0xed
  42056f:	jecxz  0x42059b
  420571:	test   esp,0xc7575a39
  420577:	rcl    BYTE PTR [esi],1
  420579:	cwde   
  42057a:	hlt    
  42057b:	sub    esi,ebp
  42057d:	xchg   esi,eax
  42057e:	inc    ecx
  42057f:	loope  0x42055e
  420581:	add    DWORD PTR [esi+edi*4-0xe4f108e],esi
  420588:	adc    al,0x8e
  42058a:	fstp   TBYTE PTR [eax+0x782fd7e1]
  420590:	jp     0x42060f
  420592:	dec    edi
  420593:	fisub  DWORD PTR [ebp-0x69]
  420596:	sbb    BYTE PTR ds:0xa64c,dh
  42059b:	test   al,al
  42059d:	(bad)  
  42059f:	dec    esi
  4205a0:	bound  esp,QWORD PTR [ebx-0xd]
  4205a3:	js     0x4205e0
  4205a5:	clc    
  4205a6:	dec    esp
  4205a7:	jmp    0x8f98:0x9a0d24e8
  4205ae:	iret   
  4205af:	cwde   
  4205b0:	fbstp  TBYTE PTR [edx-0x32]
  4205b3:	fnstcw WORD PTR [ebx+esi*1]
  4205b6:	dec    esp
  4205b7:	cdq    
  4205b8:	xlat   BYTE PTR ds:[ebx]
  4205b9:	sub    ecx,0xd
  4205bc:	mov    esp,0x298e36bb
  4205c1:	outs   dx,BYTE PTR ds:[esi]
  4205c2:	fwait
  4205c3:	cmc    
  4205c4:	loopne 0x4205fc
  4205c6:	repz inc eax
  4205c8:	pop    ebx
  4205c9:	bnd js 0x42062b
  4205cc:	retf   0xd7e8
  4205cf:	dec    ebp
  4205d0:	aaa    
  4205d1:	jmp    0x94d74dbf
  4205d6:	mov    ebx,0x4a5f4868
  4205db:	idiv   DWORD PTR [edx]
  4205dd:	pop    eax
  4205de:	push   esp
  4205df:	mov    cl,0x9e
  4205e1:	js     0x42062f
  4205e3:	jb     0x4205f8
  4205e5:	out    dx,al
  4205e6:	pop    eax
  4205e7:	inc    esi
  4205e8:	aas    
  4205e9:	prefetch BYTE PTR [ebp-0x4164afa2]
  4205f0:	sahf   
  4205f1:	js     0x420612
  4205f3:	and    ch,BYTE PTR [ebx]
  4205f5:	mov    edx,0x78f5cd8a
  4205fa:	idiv   DWORD PTR [ebx+0x10]
  4205fd:	jecxz  0x4205e0
  4205ff:	cmp    al,0xa5
  420601:	sbb    DWORD PTR [edi+0x5eb37468],ecx
  420607:	xor    dh,al
  420609:	mov    BYTE PTR [eax+eiz*4],ch
  42060c:	xchg   DWORD PTR [edi-0x42],edx
  42060f:	add    dl,0xaf
  420612:	cmp    al,0xd5
  420614:	cld    
  420615:	add    BYTE PTR [ebp-0x7dea61f1],0x39
  42061c:	pusha  
  42061d:	push   ss
  42061e:	retf   
  42061f:	aas    
  420620:	dec    esp
  420621:	fld    QWORD PTR [ebx+0x570c63c0]
  420627:	mov    DWORD PTR [ebx+0x324e15e9],esi
  42062d:	push   eax
  42062e:	sub    edi,DWORD PTR [esi]
  420630:	fwait
  420631:	ret    
  420632:	mov    edx,0x23f027b1
  420637:	xchg   esi,eax
  420638:	lock fld QWORD PTR [eax]
  42063b:	test   eax,0x692eef60
  420640:	add    cl,BYTE PTR [esi+0x21]
  420643:	cwde   
  420644:	call   0x894f2156
  420649:	jmp    0x7c55:0x8cb68047
  420650:	dec    edi
  420651:	mov    al,ds:0x11940db9
  420656:	mov    ecx,0xe55fe7d5
  42065b:	(bad)  
  42065c:	xor    eax,0xf030f8da
  420661:	add    edx,DWORD PTR [ecx-0x53]
  420664:	jmp    FWORD PTR [ebp+0x46]
  420667:	push   0xffffffd3
  420669:	xchg   ebx,eax
  42066a:	or     al,0x84
  42066c:	jg     0x42060d
  42066e:	std    
  42066f:	scas   al,BYTE PTR es:[edi]
  420670:	or     dh,cl
  420672:	out    0xc1,eax
  420674:	prefetchw (bad)
  420675:	or     eax,0xb1b37ec8
  42067a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42067b:	in     eax,0x9d
  42067d:	pop    esi
  42067e:	mov    bl,0xda
  420680:	call   0xf88c:0x29ad57b2
  420687:	mov    ebp,0xd13832cb
  42068c:	ja     0x42066c
  42068e:	fisubr WORD PTR [edi+0x0]
  420691:	and    eax,0x1f8f37cd
  420696:	shr    DWORD PTR ds:0xddbf0efe,cl
  42069c:	mov    edx,0xe88c9fa3
  4206a1:	jnp    0x420711
  4206a3:	inc    esi
  4206a4:	(bad)  
  4206a5:	test   al,0x35
  4206a7:	xor    al,0x43
  4206a9:	retf   0xdd88
  4206ac:	sub    BYTE PTR [edx+0x60],0xf4
  4206b0:	sub    al,0x32
  4206b2:	les    ecx,FWORD PTR ds:0x1f4b32d9
  4206b8:	addr16 xchg edx,eax
  4206ba:	shl    DWORD PTR [ebp+0x62],0xe
  4206be:	mov    gs,WORD PTR [ebp-0x52]
  4206c1:	add    ch,BYTE PTR [eax+0x75]
  4206c4:	cmp    BYTE PTR [ecx+ecx*1-0x3e],0x11
  4206c9:	inc    esp
  4206ca:	outs   dx,DWORD PTR ds:[esi]
  4206cb:	sub    eax,DWORD PTR [ebx-0x25ec6cf5]
  4206d1:	xor    al,0x50
  4206d3:	add    DWORD PTR [esi],0xd041de
  4206d9:	and    BYTE PTR ds:0x2a330065,bh
  4206df:	aas    
  4206e0:	push   cs
  4206e1:	(bad)  
  4206e2:	shl    DWORD PTR [ecx-0x6c4946f4],0x33
  4206e9:	mov    esi,DWORD PTR [eax+0x6985f0d4]
  4206ef:	mov    esp,0x231b5101
  4206f4:	push   es
  4206f5:	cmp    al,0x62
  4206f7:	clc    
  4206f8:	out    dx,al
  4206f9:	shr    DWORD PTR [eax],cl
  4206fb:	aas    
  4206fc:	test   DWORD PTR [ecx-0x2e],0x19fa692f
  420703:	aas    
  420704:	inc    esp
  420705:	xchg   DWORD PTR [ebx-0x51],eax
  420708:	outs   dx,DWORD PTR ds:[esi]
  420709:	jae    0x4206db
  42070b:	imul   ebp,DWORD PTR [ecx-0x29],0xd544a5f9
  420712:	mov    al,ds:0xac2423e5
  420717:	retf   0x9102
  42071a:	mul    DWORD PTR [ebp+0xb7c969f]
  420720:	sub    al,0xac
  420722:	mov    eax,0x9830dfac
  420727:	in     al,0x7e
  420729:	in     al,dx
  42072a:	mov    bl,cl
  42072c:	sub    sp,WORD PTR [ebx-0x5ab4d2c7]
  420733:	sbb    esi,DWORD PTR [ebx-0x40bf9464]
  420739:	stos   BYTE PTR es:[edi],al
  42073a:	bound  edx,QWORD PTR [ebx+edx*4-0x5b]
  42073e:	paddd  mm7,mm6
  420741:	jb     0x420720
  420743:	mov    dl,0x38
  420745:	ja     0x4206e3
  420747:	shl    BYTE PTR [edi+edx*8-0x4c],1
  42074b:	xchg   DWORD PTR [ebx+0x3b],ebx
  42074e:	and    al,0x50
  420750:	cmove  esi,eax
  420753:	mov    dl,0xcd
  420755:	add    bp,WORD PTR [ebp+0x11834b13]
  42075c:	and    edx,DWORD PTR [edx]
  42075e:	in     eax,dx
  42075f:	mov    dl,0xe
  420761:	test   eax,0xf2eee1dd
  420766:	stos   BYTE PTR es:[edi],al
  420767:	loop   0x420705
  420769:	xchg   edi,eax
  42076a:	(bad)  
  42076c:	inc    esi
  42076d:	sub    BYTE PTR [eax+eiz*1+0x54d7f744],al
  420774:	in     al,0xc9
  420776:	sbb    edi,DWORD PTR [edi+ecx*4]
  420779:	push   eax
  42077a:	pop    ds
  42077b:	ins    DWORD PTR es:[edi],dx
  42077c:	xchg   edx,eax
  42077d:	sahf   
  42077e:	pop    es
  42077f:	shl    DWORD PTR [esi-0x6f],1
  420782:	jmp    0x420775
  420784:	js     0x420729
  420786:	mov    dl,0x1
  420788:	sub    eax,0xa1d8b8ed
  42078d:	dec    ebx
  42078e:	scas   al,BYTE PTR es:[edi]
  42078f:	popa   
  420790:	gs add eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a65b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a67b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a697
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a667
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a67f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a683
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a687
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a68b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a68f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a67b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a667
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a693
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a69b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a663
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a67b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a667
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a67b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a667
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a67b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a667
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a67b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a667
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a67b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a667
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a67b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a667
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a67b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a667
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a67b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a667
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a67b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a667
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a67b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a667
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a67b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a667
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a67b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a667
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a67b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a667
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a67b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a697
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a667
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a66b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a66f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a673
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	loop   0x421e21
  421dbc:	scas   al,BYTE PTR es:[edi]
  421dbd:	test   al,0x6f
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0xf772495],0x5b
  421dcb:	inc    esi
  421dcc:	rol    DWORD PTR [edx+0x319ac457],cl
  421dd2:	xchg   edi,eax
  421dd3:	and    BYTE PTR [ecx],0xde
  421dd6:	or     edx,DWORD PTR [ebp-0x68]
  421dd9:	fstp   st(5)
  421ddb:	inc    esp
  421ddc:	mov    BYTE PTR [eax+0x611382bd],bh
  421de2:	in     eax,dx
  421de3:	shl    ecx,cl
  421de5:	retf   0x159
  421de8:	add    eax,0x9f4a0401
  421ded:	pop    ds
  421dee:	pop    ecx
  421def:	inc    edx
  421df0:	cmp    eax,0xffffffcd
  421df3:	mov    ds:0xa417c31e,eax
  421df8:	loope  0x421e34
  421dfa:	pop    ecx
  421dfb:	mov    BYTE PTR [edx-0x54],ch
  421dfe:	lds    ecx,FWORD PTR [eax+0x6c4a1d43]
  421e04:	shr    ecx,cl
  421e06:	ss mov edi,0x6875dbbf
  421e0c:	(bad)  
  421e0d:	xor    BYTE PTR [edx],ah
  421e0f:	fdivr  QWORD PTR [ebp+0x79]
  421e12:	mov    eax,0x6480c0a8
  421e17:	test   eax,esp
  421e19:	inc    edx
  421e1a:	mov    cl,0xc3
  421e1c:	pop    esp
  421e1d:	gs push esi
  421e1f:	dec    ebp
  421e20:	sub    eax,0x4b876db7
  421e25:	pop    esi
  421e26:	push   0xffffffdd
  421e28:	jo     0x421e68
  421e2a:	and    BYTE PTR [ecx],dh
  421e2c:	add    eax,0xffffffac
  421e2f:	jmp    0x6c9ba115
  421e34:	aam    0x79
  421e36:	push   ecx
  421e37:	fadd   DWORD PTR [eax+0x5d]
  421e3a:	popa   
  421e3b:	push   edx
  421e3c:	jmp    0x421e85
  421e3e:	fcmove st,st(7)
  421e40:	pushf  
  421e41:	mov    ebp,0xea629547
  421e46:	cld    
  421e47:	dec    eax
  421e48:	mov    esi,0x2e9618b5
  421e4d:	sbb    edx,eax
  421e4f:	add    BYTE PTR [edx+0x32d9fe0d],cl
  421e55:	or     ebp,DWORD PTR [edi+0x5a947c34]
  421e5b:	adc    dh,BYTE PTR [edx+0x30]
  421e5e:	pop    eax
  421e5f:	popf   
  421e60:	mov    eax,ds:0xf30129a
  421e65:	mov    ah,0xf
  421e67:	jl     0x421e65
  421e69:	rcr    BYTE PTR [ebp+0x281da1d],0xa8
  421e70:	mov    bh,0x61
  421e72:	mov    ?,WORD PTR [ebx+0x23]
  421e75:	je     0x421e06
  421e77:	mov    ecx,0xd136b535
  421e7c:	mov    ebp,0xbfff7572
  421e81:	icebp  
  421e82:	into   
  421e83:	inc    edx
  421e84:	push   es
  421e85:	jo     0x421e5e
  421e87:	or     ch,cl
  421e89:	mov    eax,0x9a7ced7
  421e8e:	data16 mov cl,0x1a
  421e91:	lea    ebp,[ebp+0x786bae0f]
  421e97:	mov    esp,0x1b4ff21e
  421e9c:	ret    
  421e9d:	pop    esi
  421e9e:	clc    
  421e9f:	(bad)  
  421ea0:	jmp    0x421eca
  421ea2:	mov    ss,WORD PTR [eax-0x1ad7b5e2]
  421ea8:	pop    edx
  421ea9:	sub    eax,0x1d5f793
  421eae:	cli    
  421eaf:	bnd ret 
  421eb1:	mov    eax,?
  421eb3:	xor    al,0x70
  421eb5:	and    al,0xa8
  421eb7:	pushf  
  421eb8:	arpl   WORD PTR [esi],sp
  421eba:	jmp    0x976618b3
  421ebf:	enter  0x1ecf,0x40
  421ec3:	inc    ebx
  421ec4:	mov    ebx,0x961f7ea8
  421ec9:	mov    ah,ah
  421ecb:	cs (bad) 
  421ecd:	or     al,0x19
  421ecf:	xor    eax,0x90271290
  421ed4:	clc    
  421ed5:	data16 jbe 0x421f50
  421ed8:	pop    ecx
  421ed9:	ret    0xef34
  421edc:	cli    
  421edd:	retf   
  421ede:	rol    BYTE PTR [ecx],cl
  421ee0:	in     eax,dx
  421ee1:	ret    
  421ee2:	es inc ebp
  421ee4:	fdiv   DWORD PTR [esi]
  421ee6:	mov    cl,0x65
  421ee8:	inc    eax
  421ee9:	adc    DWORD PTR [edx-0x3c],esp
  421eec:	outs   dx,DWORD PTR ds:[esi]
  421eed:	xchg   ecx,eax
  421eee:	and    eax,0x18d8cbdd
  421ef3:	cmp    bl,BYTE PTR [edi-0x26e7b62e]
  421ef9:	or     BYTE PTR [ebx],dl
  421efb:	int3   
  421efc:	xchg   ebx,eax
  421efd:	ins    DWORD PTR es:[edi],dx
  421efe:	push   ecx
  421eff:	mov    cl,0xc8
  421f01:	mov    esp,DWORD PTR [eax]
  421f03:	scas   eax,DWORD PTR es:[edi]
  421f04:	xchg   esi,eax
  421f05:	shl    BYTE PTR [esp+eiz*2-0x41],1
  421f09:	add    edx,DWORD PTR [edi]
  421f0b:	sbb    eax,0xd4e33199
  421f10:	mov    dl,0x9a
  421f12:	in     al,dx
  421f13:	xor    al,0x33
  421f15:	sbb    eax,0x7c24e1fa
  421f1a:	push   ss
  421f1b:	cdq    
  421f1c:	adc    eax,0x49dd45f
  421f21:	sub    eax,0x73e6f0be
  421f26:	mov    ah,0xbd
  421f28:	and    al,0x46
  421f2a:	jo     0x421ecd
  421f2c:	push   esi
  421f2d:	xchg   BYTE PTR [ecx+edi*1],dl
  421f30:	sbb    BYTE PTR [esi+0x79f51a6c],dl
  421f36:	xchg   esi,eax
  421f37:	and    esi,DWORD PTR [ecx-0x4f]
  421f3a:	rcl    BYTE PTR [edx-0x19],cl
  421f3d:	jae    0x421efa
  421f3f:	aas    
  421f40:	pushf  
  421f41:	mov    dh,0x61
  421f43:	ja     0x421edd
  421f45:	push   esi
  421f46:	shr    BYTE PTR [ebx],1
  421f48:	loopne 0x421f26
  421f4a:	in     eax,dx
  421f4b:	arpl   WORD PTR [ebp+eax*1-0x75],bp
  421f4f:	sti    
  421f50:	sub    eax,0x90f110d6
  421f55:	ja     0x421f46
  421f57:	outs   dx,DWORD PTR ds:[esi]
  421f58:	adc    eax,0xddac0478
  421f5d:	aaa    
  421f5e:	adc    DWORD PTR [esi],edx
  421f60:	mov    WORD PTR [ebp+0x71],?
  421f63:	aam    0xa8
  421f65:	mov    esp,0xd0afff1b
  421f6a:	jl     0x421f5c
  421f6c:	out    0xc5,al
  421f6e:	mov    ?,WORD PTR [ebp+0x17]
  421f71:	sbb    al,0x6e
  421f73:	lods   al,BYTE PTR ds:[esi]
  421f74:	push   ds
  421f75:	clc    
  421f76:	int    0xc
  421f78:	in     al,0x11
  421f7a:	inc    esp
  421f7b:	mov    esi,edi
  421f7d:	rcr    BYTE PTR [edx+edx*2+0x71],cl
  421f81:	mov    al,ds:0x988a469f
  421f86:	xor    al,0x46
  421f88:	(bad)  
  421f89:	push   0xf7f1f93b
  421f8e:	cmp    eax,0xe7b61974
  421f93:	cmp    cl,bl
  421f95:	fnstenv [edi]
  421f97:	(bad)  
  421f98:	(bad)  
  421f99:	jmp    0x421f2c
  421f9b:	jmp    0x8051:0x25c7f12e
  421fa2:	push   ss
  421fa3:	es jnp 0x421fee
  421fa6:	xchg   BYTE PTR [eax-0x60a008e],ah
  421fac:	test   al,0x4d
  421fae:	pop    edi
  421faf:	sub    eax,0xc7cf8a26
  421fb4:	nop
  421fb5:	(bad)  [ecx-0x1a167c6e]
  421fbb:	push   edi
  421fbc:	data16 jecxz 0x421fd5
  421fbf:	jg     0x421f80
  421fc1:	test   BYTE PTR [ecx+0x2b],dl
  421fc4:	fisttp WORD PTR ds:0x999b4db0
  421fca:	pop    ebp
  421fcb:	push   ebp
  421fcc:	aaa    
  421fcd:	jno    0x421ff9
  421fcf:	adc    eax,ebx
  421fd1:	outs   dx,DWORD PTR ds:[esi]
  421fd2:	pop    edi
  421fd3:	push   ebp
  421fd4:	sub    BYTE PTR [ecx+0xd7ecf14],dh
  421fda:	fldcw  WORD PTR [ecx-0x2f]
  421fdd:	sub    BYTE PTR [edx-0x3c7ead8e],bl
  421fe3:	mov    eax,ds:0x35188241
  421fe8:	mov    DWORD PTR [esi+0x6e],0xf89bceac
  421fef:	or     eax,0x34a20034
  421ff4:	(bad)  
  421ff5:	xor    edx,edi
  421ff7:	arpl   sp,cx
  421ff9:	mov    bl,0x77
  421ffb:	or     al,0xb7
  421ffd:	rol    DWORD PTR [edx],cl
  421fff:	add    DWORD PTR [edi],esi
  422001:	mov    ebx,0x27db85a5
  422006:	or     al,0xa9
  422008:	cli    
  422009:	(bad)  
  42200b:	enter  0xf462,0x80
  42200f:	retf   0x14c9
  422012:	aad    0x7
  422014:	hlt    
  422015:	into   
  422016:	pop    ebx
  422017:	retf   
  422018:	adc    ch,al
  42201a:	dec    edi
  42201b:	int    0x7b
  42201d:	mov    cl,0x4c
  42201f:	shr    DWORD PTR [ecx+0x3a1255e7],0x9d
  422026:	stos   DWORD PTR es:[edi],eax
  422027:	loope  0x422080
  422029:	retf   0xdb0d
  42202c:	dec    edi
  42202d:	pop    ds
  42202e:	addr16 cwde 
  422030:	enter  0x1973,0x3
  422034:	jmp    0x42202d
  422036:	pop    es
  422037:	fidiv  WORD PTR [ecx+esi*4-0x40fdcfb7]
  42203e:	mov    ds:0x75a02b36,eax
  422043:	outs   dx,DWORD PTR ds:[esi]
  422044:	xor    al,0x5d
  422046:	sbb    ebp,DWORD PTR [ebx+ecx*1+0x77]
  42204a:	jnp    0x4220c6
  42204c:	lock mov dl,0x91
  42204f:	in     eax,dx
  422050:	sti    
  422051:	sbb    DWORD PTR [esi+0x2a],ecx
  422054:	inc    esi
  422055:	push   esp
  422056:	popa   
  422057:	mov    dh,al
  422059:	pop    esi
  42205a:	clc    
  42205b:	push   edx
  42205c:	and    al,0x6b
  42205e:	dec    eax
  42205f:	in     eax,0x70
  422061:	jne    0x42209b
  422063:	xor    bl,dh
  422065:	shl    DWORD PTR [esi],1
  422067:	cmp    esp,DWORD PTR [edi+eiz*2-0x38]
  42206b:	shl    bh,0x64
  42206e:	shr    BYTE PTR [ebx-0x40],1
  422071:	mov    eax,ds:0xef231192
  422076:	xor    eax,0x936c5d69
  42207b:	nop
  42207c:	(bad)  
  42207d:	jmp    0x29c7af4b
  422082:	arpl   WORD PTR [ecx-0x4e],bp
  422085:	fcom   st(2)
  422087:	dec    ecx
  422088:	das    
  422089:	adc    DWORD PTR [edx+0x5f],esp
  42208c:	scas   eax,DWORD PTR es:[edi]
  42208d:	loop   0x42209b
  42208f:	or     DWORD PTR [edi-0x5e],esi
  422092:	(bad)  
  422093:	data16 cli 
  422095:	xchg   edi,eax
  422096:	push   ecx
  422097:	mov    ebx,0x91490cac
  42209c:	and    al,0x21
  42209e:	ja     0x422111
  4220a0:	mov    es,edx
  4220a2:	adc    eax,0x3caff846
  4220a7:	dec    eax
  4220a8:	jmp    0xb9a6:0x16bd07c6
  4220af:	jmp    0x677f8455
  4220b4:	aam    0xb8
  4220b6:	fwait
  4220b7:	aad    0x9e
  4220b9:	ss (bad) 
  4220bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bc:	daa    
  4220bd:	in     eax,dx
  4220be:	mov    bl,0xa9
  4220c0:	aas    
  4220c1:	jnp    0x4220a0
  4220c3:	push   ebx
  4220c4:	(bad)  
  4220c5:	cmp    bl,dl
  4220c7:	mov    dl,0xfe
  4220c9:	xor    eax,0x86f0507b
  4220ce:	mov    edi,0x2bce0cd1
  4220d3:	mov    eax,0x6c1c7372
  4220d8:	push   es
  4220d9:	adc    al,BYTE PTR [edx-0x55]
  4220dc:	fdivr  QWORD PTR [eax+0x5b]
  4220df:	mov    edx,DWORD PTR [edx+0x7f]
  4220e2:	loopne 0x4220d9
  4220e4:	in     al,0xaa
  4220e6:	loop   0x422107
  4220e8:	aaa    
  4220e9:	mov    ch,0x21
  4220eb:	dec    ebx
  4220ec:	push   edi
  4220ed:	into   
  4220ee:	call   0x49a79d02
  4220f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f4:	adc    bl,BYTE PTR [edi]
  4220f6:	out    0x4d,eax
  4220f8:	xor    esp,ebx
  4220fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fb:	outs   dx,DWORD PTR ds:[esi]
  4220fc:	scas   al,BYTE PTR es:[edi]
  4220fd:	fsub   QWORD PTR [ebp+0x7f]
  422100:	lock xchg edi,eax
  422102:	aad    0x60
  422104:	jl     0x422177
  422106:	imul   ebp,DWORD PTR [ecx-0x3c],0x42
  42210a:	push   edi
  42210b:	(bad)  
  42210c:	test   al,0x5f
  42210e:	dec    edx
  42210f:	adc    eax,0x5fa50526
  422114:	std    
  422115:	add    al,0x12
  422117:	mov    cl,0xeb
  422119:	clc    
  42211a:	bound  ebx,QWORD PTR [edx+0x4a26658c]
  422120:	stos   BYTE PTR es:[edi],al
  422121:	fcom   DWORD PTR [ecx-0xf]
  422124:	sahf   
  422125:	scas   al,BYTE PTR es:[edi]
  422126:	test   al,0x4b
  422128:	loop   0x422194
  42212a:	sbb    al,0xaf
  42212c:	inc    edi
  42212d:	xchg   ebp,eax
  42212e:	call   DWORD PTR [esi]
  422130:	cmp    edx,DWORD PTR [eax+0x5a462b89]
  422136:	in     al,dx
  422137:	ins    BYTE PTR es:[edi],dx
  422138:	mov    ebp,0x2bb3f759
  42213d:	(bad)  
  42213e:	xor    edi,DWORD PTR [ecx]
  422140:	adc    DWORD PTR [ecx-0x7a],ebp
  422143:	fnstsw WORD PTR [eax]
  422145:	push   cs
  422146:	pop    es
  422147:	or     bl,0x4
  42214a:	cmp    DWORD PTR [edi+ebp*2-0x33],0xfc714819
  422152:	(bad)  
  422153:	jl     0x422128
  422155:	sub    eax,0xc6643e0
  42215a:	lods   al,BYTE PTR ds:[esi]
  42215b:	pop    ebp
  42215c:	jle    0x42219f
  42215e:	ins    BYTE PTR es:[edi],dx
  42215f:	or     ch,dh
  422161:	stos   DWORD PTR es:[edi],eax
  422162:	stos   BYTE PTR es:[edi],al
  422163:	das    
  422164:	out    0xe4,al
  422166:	sar    DWORD PTR [ecx],cl
  422168:	or     ch,cl
  42216a:	xchg   esi,eax
  42216b:	pop    ss
  42216c:	inc    edi
  42216d:	aam    0xea
  42216f:	inc    eax
  422170:	dec    ebp
  422171:	xchg   ebp,eax
  422172:	scas   eax,DWORD PTR es:[edi]
  422173:	rcl    BYTE PTR [edi+0x6],0x16
  422177:	pusha  
  422178:	ret    0x7941
  42217b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42217c:	add    al,0x9d
  42217e:	test   DWORD PTR [ebx-0x4f],edx
  422181:	repz inc ebp
  422183:	pop    ss
  422184:	add    eax,0x5e226d64
  422189:	pop    ss
  42218a:	outs   dx,BYTE PTR ds:[esi]
  42218b:	aaa    
  42218c:	sti    
  42218d:	pop    edi
  42218e:	adc    BYTE PTR [esi+ecx*8+0xf],bl
  422192:	push   esp
  422193:	dec    edi
  422194:	and    eax,0x4877b367
  422199:	into   
  42219a:	dec    eax
  42219b:	mov    ch,0x2c
  42219d:	mov    dl,0x8a
  42219f:	xor    esp,DWORD PTR [edx+0x1b]
  4221a2:	not    DWORD PTR [ebp+0x3e]
  4221a5:	jle    0x4221ae
  4221a7:	mov    dh,0xf7
  4221a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221aa:	jl     0x422163
  4221ac:	mov    edx,0xeac0751b
  4221b1:	and    BYTE PTR [esi-0x7474ff41],0x56
  4221b8:	hlt    
  4221b9:	ret    0x5e7e
  4221bc:	stc    
  4221bd:	or     DWORD PTR [ebx],ecx
  4221bf:	ins    BYTE PTR es:[edi],dx
  4221c0:	lods   eax,DWORD PTR ds:[esi]
  4221c1:	fmul   st,st(2)
  4221c3:	lds    edi,FWORD PTR [eax+0x36c9ae51]
  4221c9:	jp     0x42217d
  4221cb:	xchg   BYTE PTR [ebx-0x7e],dl
  4221ce:	(bad)  
  4221cf:	gs pop ss
  4221d1:	loopne 0x422206
  4221d3:	jne    0x42216b
  4221d5:	inc    esp
  4221d6:	xor    eax,0xece45e33
  4221db:	mov    edx,0x85d827e7
  4221e0:	imul   eax,DWORD PTR [edi],0x1a1b0d82
  4221e6:	loop   0x4221fe
  4221e8:	xor    eax,0x5b9507eb
  4221ed:	xor    DWORD PTR [ebx],ebx
  4221ef:	call   DWORD PTR [ebp-0x70]
  4221f2:	sub    eax,0x2cc0cc13
  4221f7:	bound  ecx,QWORD PTR [edi+0x68]
  4221fa:	xor    eax,0x90c36630
  4221ff:	call   0x623b:0xcd039794
  422206:	pop    edx
  422207:	add    eax,0xd9c875a5
  42220c:	ret    
  42220d:	add    eax,0x29d8e289
  422212:	test   al,0x5f
  422214:	ins    DWORD PTR es:[edi],dx
  422215:	pop    esp
  422216:	stos   BYTE PTR es:[edi],al
  422217:	int3   
  422218:	push   cs
  422219:	jmp    0x42226f
  42221b:	jnp    0x422209
  42221d:	mov    ds:0x87b58f79,al
  422222:	xchg   ecx,eax
  422223:	and    edx,DWORD PTR [edi]
  422225:	mov    al,0xde
  422227:	mov    eax,0x917f038c
  42222c:	pop    ds
  42222d:	pushf  
  42222e:	cwde   
  42222f:	cmp    al,0xde
  422231:	dec    BYTE PTR [ecx+0x5b]
  422234:	fdivr  QWORD PTR [ecx+0x0]
  422237:	rcl    eax,cl
  422239:	and    eax,0x3793ccf
  42223e:	lahf   
  42223f:	push   ecx
  422240:	jp     0x42221d
  422242:	pop    ecx
  422243:	and    eax,0xe998bfcb
  422248:	bound  edi,QWORD PTR [edx]
  42224a:	mov    ah,0x1d
  42224c:	jo     0x422275
  42224e:	test   BYTE PTR [ebx-0x62],dh
  422251:	sbb    ebx,esp
  422253:	inc    esi
  422254:	and    al,0x10
  422256:	dec    esi
  422257:	mov    ah,0x78
  422259:	adc    BYTE PTR [edx],al
  42225b:	fcom   QWORD PTR [ebp-0x4dc942c3]
  422261:	sub    ebx,ebx
  422263:	leave  
  422264:	int3   
  422265:	adc    BYTE PTR [ebp-0xc],bl
  422268:	rol    DWORD PTR [edi-0x1e3efe4b],0x11
  42226f:	bound  edx,QWORD PTR [edx]
  422271:	cmp    dl,BYTE PTR [edi+edx*8-0x3353ab1f]
  422278:	js     0x422237
  42227a:	outs   dx,BYTE PTR ds:[esi]
  42227b:	jb     0x42229a
  42227d:	xchg   BYTE PTR [ecx+0x6e01188f],dh
  422283:	cmp    BYTE PTR [ebp+edi*2-0x458ead63],ah
  42228a:	mov    bl,0x7a
  42228c:	pop    ebp
  42228d:	test   dh,ch
  42228f:	xor    DWORD PTR [ebx+0x4],ebp
  422292:	mov    al,0x8a
  422294:	jb     0x422274
  422296:	adc    eax,ecx
  422298:	mov    BYTE PTR [eax-0x9],0xa9
  42229c:	or     al,0x39
  42229f:	ins    BYTE PTR es:[edi],dx
  4222a0:	jno    0x42225a
  4222a2:	nop
  4222a3:	aam    0xff
  4222a5:	jae    0x42231e
  4222a7:	ds jo  0x4222fd
  4222aa:	jno    0x4222c9
  4222ac:	jmp    0x42231e
  4222ae:	mov    dh,0xe9
  4222b0:	fild   WORD PTR [ebp-0x71]
  4222b3:	xchg   esp,eax
  4222b4:	adc    dh,BYTE PTR [eax-0x1d]
  4222b7:	cld    
  4222b8:	jmp    0x2909dd7c
  4222bd:	xchg   esi,eax
  4222be:	xor    DWORD PTR [esi],0x90d81dce
  4222c4:	pop    edi
  4222c5:	xlat   BYTE PTR ds:[ebx]
  4222c6:	pop    eax
  4222c7:	xor    eax,0xa5fb7592
  4222cc:	pop    ds
  4222cd:	test   BYTE PTR [eax-0x4d4719ba],al
  4222d3:	cmp    al,0xcf
  4222d5:	stc    
  4222d6:	push   cs
  4222d7:	jl     0x4222d1
  4222d9:	call   0xc229:0xe5b6c01e
  4222e0:	fnstenv [ebx+0x52]
  4222e3:	aad    0x55
  4222e5:	push   ebx
  4222e6:	inc    edx
  4222e7:	and    DWORD PTR [ecx+ecx*1],0x190123b0
  4222ee:	lea    esi,[edx-0x69073b8b]
  4222f4:	mov    BYTE PTR [ebx-0x1e02ac90],ch
  4222fa:	nop
  4222fb:	adc    eax,0x2d642e9
  422300:	hlt    
  422301:	mov    eax,0x1ed10d7f
  422306:	pop    es
  422307:	jo     0x422362
  422309:	stos   BYTE PTR es:[edi],al
  42230a:	or     dh,cl
  42230c:	dec    esp
  42230d:	push   ebp
  42230e:	mov    al,ds:0x1e7143d1
  422313:	or     BYTE PTR [esi+0x24],cl
  422316:	mov    bl,0x85
  422318:	sbb    al,al
  42231a:	(bad)  
  42231b:	jno    0x4222dc
  42231d:	(bad)  
  42231f:	addr16 inc esp
  422321:	mov    ah,0x41
  422323:	call   0x7ed90587
  422328:	jno    0x4222eb
  42232a:	cmp    DWORD PTR [eax+0x40],esi
  42232d:	repnz xchg edx,eax
  42232f:	push   ss
  422330:	cmp    eax,0x2ab8c71a
  422335:	imul   edi,DWORD PTR [edx+0x2c],0x33
  422339:	push   ds
  42233a:	inc    edi
  42233b:	cld    
  42233c:	pop    ecx
  42233d:	jno    0x42235d
  42233f:	jb     0x42235f
  422341:	or     bh,BYTE PTR [ecx+0x1b9c3cce]
  422347:	mov    dl,0xc9
  422349:	xor    ah,BYTE PTR [eax-0xc]
  42234c:	arpl   WORD PTR [eax],bx
  42234e:	adc    BYTE PTR [ebx],dh
  422350:	outs   dx,DWORD PTR ds:[esi]
  422351:	fs inc esi
  422353:	xchg   edi,eax
  422354:	xor    DWORD PTR [ecx-0x13559cd2],edx
  42235a:	sbb    ebx,DWORD PTR [esi+ebx*8-0x14]
  42235e:	(bad)  
  42235f:	sbb    eax,0xee2c231f
  422364:	aam    0x7e
  422366:	xor    dh,bl
  422368:	out    dx,al
  422369:	fnstenv [edx-0x29]
  42236c:	in     al,dx
  42236d:	(bad)  
  42236e:	bnd jg 0x422331
  422371:	nop
  422372:	mov    ds:0x21ebb7ca,al
  422377:	cmp    edi,eax
  422379:	iret   
  42237a:	inc    eax
  42237b:	fs jmp 0x95348c32
  422381:	sbb    dl,dl
  422383:	jecxz  0x422311
  422385:	out    0x52,al
  422387:	not    BYTE PTR [esi-0x8a8dec4]
  42238d:	dec    edx
  42238e:	in     al,0xa1
  422390:	call   DWORD PTR [esp+edx*2+0x62]
  422394:	push   edx
  422395:	and    al,0x51
  422397:	pushf  
  422398:	xchg   edi,eax
  422399:	sbb    al,0x31
  42239b:	icebp  
  42239c:	mov    dl,0xc9
  42239e:	xchg   esi,eax
  42239f:	jb     0x42238b
  4223a1:	bound  esi,QWORD PTR [edi]
  4223a3:	call   0xe0de:0x554bf4cf
  4223aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ab:	jle    0x4223f3
  4223ad:	mov    ecx,DWORD PTR [ebp+0x2512e953]
  4223b3:	sub    esp,0xf8e440d5
  4223b9:	hlt    
  4223ba:	iret   
  4223bb:	push   0x7a3743fe
  4223c0:	out    0x27,al
  4223c2:	enter  0x1203,0x73
  4223c6:	mov    ebp,0x74883380
  4223cb:	cli    
  4223cc:	fild   DWORD PTR [ebx]
  4223ce:	jno    0x4223ca
  4223d0:	pop    ecx
  4223d1:	jl     0x4223fd
  4223d3:	js     0x4223ff
  4223d5:	stos   DWORD PTR es:[edi],eax
  4223d6:	in     al,0x17
  4223d8:	retf   
  4223d9:	pop    eax
  4223da:	push   esi
  4223db:	hlt    
  4223dc:	and    eax,0xe6a04c5d
  4223e1:	pushf  
  4223e2:	mov    ecx,0x84535d53
  4223e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223e8:	pop    ss
  4223e9:	in     al,0x31
  4223eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ec:	xor    ebx,DWORD PTR [ecx-0x6]
  4223ef:	icebp  
  4223f0:	imul   ebp,DWORD PTR [ebp-0x60],0x4d
  4223f4:	gs stc 
  4223f6:	push   es
  4223f7:	imul   ebx,DWORD PTR [eax+0x47aaa5f9],0x3db024aa
  422401:	xchg   esi,eax
  422402:	cmp    dl,cl
  422404:	cmp    esp,edx
  422406:	lss    esp,FWORD PTR [ebx]
  422409:	add    BYTE PTR [eax+0x5a],bh
  42240c:	xor    eax,0x53d0cf14
  422411:	loopne 0x4223e5
  422413:	pop    edi
  422414:	mov    bl,0x17
  422416:	icebp  
  422417:	mov    cl,dh
  422419:	test   DWORD PTR [esp+edx*8+0x77f253c9],esp
  422420:	cmp    BYTE PTR [ebp+0x14b1d5eb],cl
  422426:	jmp    0x4bd8:0x742cbe62
  42242d:	xchg   edi,eax
  42242e:	inc    edx
  42242f:	cli    
  422430:	mov    edi,0x3800ecff
  422435:	xlat   BYTE PTR ds:[ebx]
  422436:	pop    edx
  422437:	punpckhdq mm7,QWORD PTR [edi-0x1d]
  42243b:	sub    BYTE PTR [ebx-0x3],0xc
  42243f:	adc    esp,ecx
  422441:	cmp    DWORD PTR [eax+0x13],0xa69ca227
  422448:	fs lahf 
  42244a:	gs adc al,0x50
  42244d:	fdivr  st,st(0)
  42244f:	inc    ecx
  422450:	or     ch,al
  422452:	into   
  422453:	sub    eax,0x9cccc005
  422458:	ds push ecx
  42245a:	sbb    bl,BYTE PTR [ebp+0x70efda9c]
  422460:	inc    ebx
  422461:	pop    edi
  422462:	sbb    eax,DWORD PTR [edi]
  422464:	ficomp DWORD PTR [esi]
  422466:	leave  
  422467:	sbb    esp,0x767347f3
  42246d:	push   edx
  42246e:	pusha  
  42246f:	or     al,BYTE PTR [edi-0x207c11e]
  422475:	sbb    BYTE PTR [edx+0x7a],dl
  422478:	or     ch,dh
  42247a:	inc    edi
  42247b:	repnz fadd DWORD PTR [ebx-0x60]
  42247f:	stos   DWORD PTR es:[edi],eax
  422480:	sbb    eax,0x2161c0c9
  422486:	(bad)  
  422488:	sbb    al,0xf6
  42248a:	mov    ebp,0x8e79fc05
  42248f:	lds    esp,FWORD PTR [ecx+0x5b]
  422492:	sbb    al,0x8
  422494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422495:	retf   0x7a6e
  422498:	mov    bl,BYTE PTR [esi-0x47]
  42249b:	call   0xe8cf76e7
  4224a0:	inc    esp
  4224a1:	pop    esp
  4224a2:	mov    ch,ch
  4224a4:	add    ch,dl
  4224a6:	int    0x57
  4224a8:	es daa 
  4224aa:	nop
  4224ab:	daa    
  4224ac:	mov    edx,0x77387229
  4224b1:	(bad)
  4224b5:	jmp    0x42251b
  4224b7:	repz xor BYTE PTR [edi],0x70
  4224bb:	xchg   ecx,eax
  4224bc:	push   ebp
  4224bd:	int3   
  4224be:	xacquire xchg DWORD PTR gs:[edi+0x5],eax
  4224c3:	dec    ebx
  4224c4:	adc    eax,DWORD PTR ds:0x4c6db7aa
  4224ca:	adc    al,BYTE PTR [edi]
  4224cc:	jmp    0x27fe:0x17fd9ef2
  4224d3:	mov    cx,0x9c7e
  4224d7:	push   edx
  4224d8:	mov    ch,0x8e
  4224da:	gs pop edi
  4224dc:	jg     0x4224f5
  4224de:	in     al,dx
  4224df:	outs   dx,BYTE PTR ds:[esi]
  4224e0:	loope  0x42255d
  4224e2:	fld    DWORD PTR [eax+ebx*1+0x4b]
  4224e6:	dec    edx
  4224e7:	dec    ecx
  4224e8:	mov    dh,0x27
  4224ea:	rcl    DWORD PTR ds:0xea9b01a7,cl
  4224f0:	jmp    0x42256c
  4224f2:	pop    eax
  4224f3:	xchg   dh,ah
  4224f5:	sub    al,0x30
  4224f8:	data16 mov ah,BYTE PTR cs:[ecx]
  4224fc:	shl    BYTE PTR [ecx+ecx*8+0x447e1d8a],1
  422503:	out    dx,eax
  422504:	test   al,0x72
  422506:	or     esp,DWORD PTR [eax]
  422508:	cmp    ch,BYTE PTR [ecx]
  42250a:	retf   0x7e5e
  42250d:	sbb    edi,DWORD PTR [esi+0x663cfb4e]
  422513:	in     al,0xbb
  422515:	sub    eax,0x4bafbe8a
  42251a:	xor    bl,BYTE PTR [edx]
  42251c:	push   esp
  42251d:	hlt    
  42251e:	mov    cl,BYTE PTR [edi]
  422520:	push   ecx
  422521:	add    BYTE PTR [ebx-0x62],bh
  422524:	push   cs
  422525:	add    eax,0xf4c033ef
  42252a:	inc    edi
  42252b:	jae    0x422569
  42252d:	jl     0x4224bd
  42252f:	retf   0x5cff
  422532:	mov    bl,0x5e
  422534:	add    BYTE PTR ds:0xb775946f,ch
  42253a:	ss jge 0x422558
  42253d:	or     BYTE PTR [edx],0xa8
  422540:	leave  
  422541:	(bad)  
  422542:	jle    0x4224eb
  422544:	add    BYTE PTR [ebx-0x76],dh
  422547:	imul   esp,DWORD PTR [edi+0x75],0x81dccba
  42254e:	mov    bh,0xaf
  422550:	stos   BYTE PTR es:[edi],al
  422551:	outs   dx,DWORD PTR ds:[esi]
  422552:	mov    al,ds:0x106f8bde
  422557:	sbb    al,0xef
  422559:	ss push eax
  42255b:	push   es
  42255c:	jae    0x4224eb
  42255e:	xor    DWORD PTR [ebx+0x60],eax
  422561:	imul   edx,DWORD PTR [esi+0x24],0xfffffffd
  422565:	aad    0xe
  422567:	sbb    al,0x4b
  422569:	push   ebp
  42256a:	dec    ecx
  42256b:	icebp  
  42256c:	mov    bh,0xc4
  42256e:	jb     0x422569
  422570:	mov    edi,0x52ffb96b
  422575:	outs   dx,BYTE PTR ds:[esi]
  422576:	fstp   DWORD PTR [edx]
  422578:	mov    dh,0x4
  42257a:	das    
  42257b:	shr    BYTE PTR [ebx],0xfa
  42257e:	cmc    
  42257f:	mov    al,0x2f
  422581:	xchg   edi,eax
  422582:	stos   BYTE PTR es:[edi],al
  422583:	int3   
  422584:	mov    edx,0xf42aee1e
  422589:	dec    esi
  42258a:	push   cs
  42258b:	jmp    0xf40da5aa
  422590:	jle    0x422589
  422592:	dec    edx
  422593:	lods   al,BYTE PTR ds:[esi]
  422594:	pop    es
  422595:	mov    ah,0x44
  422597:	inc    esp
  422598:	test   DWORD PTR [esi+0x31c719d1],ebp
  42259e:	icebp  
  42259f:	jb     0x42260f
  4225a1:	sub    esi,esp
  4225a3:	add    BYTE PTR [ebp-0x5dabc63d],ch
  4225a9:	test   DWORD PTR [eax],0xf6440a8f
  4225af:	dec    ecx
  4225b0:	mov    dh,0x1e
  4225b2:	pop    esi
  4225b3:	or     al,0xe2
  4225b5:	fcomp  DWORD PTR [eax+0x7f]
  4225b8:	lea    edx,[ecx]
  4225ba:	in     al,dx
  4225bb:	repz push eax
  4225bd:	es push esi
  4225bf:	inc    ebp
  4225c0:	xchg   edx,eax
  4225c1:	xchg   ebx,eax
  4225c2:	push   cs
  4225c3:	in     al,0xdb
  4225c5:	int    0x71
  4225c7:	cli    
  4225c8:	jbe    0x4225d9
  4225ca:	mov    eax,eax
  4225cc:	push   ebp
  4225cd:	cmc    
  4225ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225cf:	mov    bl,0x6e
  4225d1:	test   DWORD PTR [eax+0x51],0x81194134
  4225d8:	dec    eax
  4225d9:	and    dh,BYTE PTR [esi]
  4225db:	mov    dl,0xa
  4225dd:	out    0xb4,al
  4225df:	loopne 0x4225d4
  4225e1:	(bad)  
  4225e2:	jb     0x4225c1
  4225e4:	ss xchg ebx,ebp
  4225e7:	cmp    bh,BYTE PTR [esp+ecx*8+0x1a]
  4225eb:	pop    edx
  4225ec:	push   edi
  4225ed:	sbb    bl,0xb7
  4225f0:	jo     0x42259b
  4225f2:	add    eax,DWORD PTR [ebp+0x73]
  4225f5:	mov    ds:0x8ac5e7f0,al
  4225fa:	enter  0x891d,0x8d
  4225fe:	mov    WORD PTR [edi-0x6f1319f5],?
  422604:	call   0x42c8:0xaf0d0030
  42260b:	pushf  
  42260c:	xor    dh,al
  42260e:	inc    ebp
  42260f:	nop
  422610:	pop    eax
  422611:	xor    al,0x51
  422613:	gs retf 
  422615:	das    
  422616:	pop    esp
  422617:	aam    0xe1
  422619:	out    0xce,al
  42261b:	mul    BYTE PTR [edi+0xb]
  42261e:	add    esi,edx
  422620:	and    eax,0xfb34848b
  422625:	xor    eax,0x2a03f202
  42262a:	adc    BYTE PTR [edi+0x24b360a0],dl
  422630:	cmc    
  422631:	sti    
  422632:	icebp  
  422633:	xor    eax,0xef263f7d
  422638:	ja     0x4225f6
  42263a:	sub    ebp,edx
  42263c:	xchg   ebx,eax
  42263d:	push   ebx
  42263e:	cmc    
  42263f:	test   edi,esi
  422641:	sub    ebp,DWORD PTR [edi+0x4d]
  422644:	and    ebx,ebp
  422646:	xlat   BYTE PTR ds:[ebx]
  422647:	in     eax,dx
  422648:	dec    edx
  422649:	inc    edi
  42264a:	jns    0x422617
  42264c:	mov    eax,ds:0x93e6768b
  422651:	mov    dl,0xcf
  422653:	das    
  422654:	(bad)  
  422655:	mov    ebp,0xa8a8386a
  42265a:	fwait
  42265b:	data16 into 
  42265d:	cmp    DWORD PTR [ebx-0x589faa40],edx
  422663:	sub    edi,DWORD PTR [eax+0x15f759e5]
  422669:	push   cs
  42266a:	outs   dx,DWORD PTR ds:[esi]
  42266b:	loop   0x4225fa
  42266d:	int3   
  42266e:	test   DWORD PTR [edi+ecx*1],ebp
  422671:	int3   
  422672:	push   edx
  422673:	in     al,dx
  422674:	imul   ebp,esp,0xfffffff2
  422677:	cmp    eax,0xe9686121
  42267c:	je     0x4226fc
  42267e:	pop    ebp
  42267f:	fs mov ecx,0x1fcb635a
  422685:	jmp    0xb6b1290d
  42268a:	out    0x45,al
  42268c:	add    ecx,DWORD PTR [ebx-0x22]
  42268f:	(bad)  
  422691:	mov    al,0xce
  422693:	mov    esp,0x261f41db
  422698:	fidiv  WORD PTR [esi-0xf8d2d00]
  42269e:	mov    eax,0x211478e0
  4226a3:	scas   al,BYTE PTR es:[edi]
  4226a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226a5:	add    DWORD PTR [edi+0x1d75a786],edx
  4226ab:	dec    ebx
  4226ac:	rol    DWORD PTR [edi+ebp*2+0x36],1
  4226b0:	push   eax
  4226b1:	mov    dl,0x7c
  4226b3:	scas   al,BYTE PTR es:[edi]
  4226b4:	pushf  
  4226b5:	push   ss
  4226b6:	mov    ds:0x6db2caa1,eax
  4226bb:	xor    BYTE PTR [edx],cl
  4226bd:	cs jns 0x4226c6
  4226c0:	sbb    dl,BYTE PTR [ebp-0x4f548e83]
  4226c6:	adc    edi,DWORD PTR [ebx+0x5a]
  4226c9:	jmp    0x42273c
  4226cb:	adc    BYTE PTR fs:[edx-0x30],0xbe
  4226d0:	loop   0x422731
  4226d2:	xor    esi,edx
  4226d4:	int3   
  4226d5:	popf   
  4226d6:	aaa    
  4226d7:	fbld   TBYTE PTR [ecx+0x57]
  4226da:	scas   al,BYTE PTR es:[edi]
  4226db:	add    ah,BYTE PTR [esi-0x2a6eb727]
  4226e1:	imul   eax,DWORD PTR [ebp+0x70741a1e],0xb7059574
  4226eb:	hlt    
  4226ec:	retf   
  4226ed:	jbe    0x422689
  4226ef:	adc    DWORD PTR [edx+0x4882dfa],ebp
  4226f5:	cmp    dl,al
  4226f7:	mov    esi,0xdc4103ff
  4226fc:	cdq    
  4226fd:	xchg   bl,dl
  4226ff:	xor    DWORD PTR [esi],0xffffffe2
  422702:	hlt    
  422703:	sbb    eax,0x26adfe9
  422708:	sar    ebx,1
  42270a:	inc    ebx
  42270b:	sub    bh,bh
  42270d:	adc    eax,0xd90f2aca
  422712:	bound  eax,QWORD PTR [ebp-0x2fc98744]
  422718:	fsub   DWORD PTR ds:0x5712611b
  42271e:	push   es
  42271f:	mov    esi,0x9b98cd1e
  422724:	les    edx,FWORD PTR [ebx-0x4bab8d01]
  42272a:	into   
  42272b:	cmp    cl,BYTE PTR [edx]
  42272d:	cmp    ch,BYTE PTR [edi]
  42272f:	stos   BYTE PTR es:[edi],al
  422730:	xchg   ecx,eax
  422731:	les    esi,FWORD PTR [eax-0x12a88add]
  422737:	push   es
  422738:	fwait
  422739:	add    eax,0x6951927f
  42273e:	mov    esi,0xe412277
  422743:	sub    ch,BYTE PTR [ebp+0x69d2f01d]
  422749:	cwde   
  42274a:	jne    0x422775
  42274c:	xchg   edi,eax
  42274d:	gs dec esp
  42274f:	jg     0x42277f
  422751:	popa   
  422752:	add    BYTE PTR [eax+0x59],bh
  422755:	ss jnp 0x42278e
  422758:	pop    es
  422759:	test   al,0x96
  42275b:	or     esi,DWORD PTR [edi]
  42275d:	add    ah,BYTE PTR [eax]
  42275f:	xlat   BYTE PTR ds:[ebx]
  422760:	imul   edi,ebx,0x474f1535
  422766:	mov    bl,0xbe
  422768:	pop    ds
  422769:	retf   0x6580
  42276c:	in     al,0x8d
  42276e:	dec    ebx
  42276f:	add    eax,0x233cf714
  422774:	pop    eax
  422775:	(bad)  
  422776:	push   esp
  422777:	xor    BYTE PTR [ebx],0x3d
  42277a:	or     al,0x5c
  42277c:	push   esi
  42277d:	jle    0x42273c
  42277f:	sti    
  422780:	js     0x422773
  422782:	sar    DWORD PTR [ecx+ecx*4+0x5c4f4cee],cl
  422789:	mov    bh,BYTE PTR [ebp-0x1]
  42278c:	push   esi
  42278d:	mov    edi,0xb3f7c9f0
  422792:	idiv   bl
  422794:	lea    esi,fs:[ebp+ebp*8-0x3f]
  422799:	push   DWORD PTR [ebp-0x4d1f69c]
  42279f:	sbb    esi,DWORD PTR [ecx+0x5455f9b]
  4227a5:	cmp    ebp,eax
  4227a7:	jle    0x4227d5
  4227a9:	imul   edi,DWORD PTR [ebx+0x5e],0xffffffc6
  4227ad:	fmulp  st(4),st
  4227af:	sbb    BYTE PTR [ecx+esi*4-0x70b358a4],cl
  4227b6:	xchg   edx,eax
  4227b7:	les    esi,FWORD PTR [ebx-0x43]
  4227ba:	out    0x4d,al
  4227bc:	jne    0x422760
  4227be:	sbb    DWORD PTR [esi],ebp
  4227c0:	test   BYTE PTR [edi-0x6e],0xa7
  4227c4:	test   BYTE PTR [edx],bh
  4227c6:	ins    BYTE PTR es:[edi],dx
  4227c7:	lods   al,BYTE PTR ds:[esi]
  4227c8:	scas   eax,DWORD PTR es:[edi]
  4227c9:	arpl   WORD PTR [edi-0x20320163],bx
  4227cf:	and    BYTE PTR [edi+edx*8+0x25],cl
  4227d3:	push   eax
  4227d4:	pop    edi
  4227d5:	test   al,0x92
  4227d7:	mov    dl,BYTE PTR [ebx-0x6f2f6e69]
  4227dd:	test   BYTE PTR [ecx-0x50de898d],bl
  4227e3:	sub    cl,ah
  4227e5:	gs clc 
  4227e7:	sub    bh,BYTE PTR [ecx]
  4227e9:	jl     0x4227c3
  4227eb:	mov    bh,0x86
  4227ed:	jne    0x4227d5
  4227ef:	jle    0x42278e
  4227f1:	pop    es
  4227f2:	enter  0x8e43,0xd7
  4227f6:	jl     0x4227ba
  4227f8:	xlat   BYTE PTR ds:[ebx]
  4227f9:	push   ss
  4227fa:	xlat   BYTE PTR ds:[ebx]
  4227fb:	dec    ebx
  4227fc:	sar    ch,1
  4227fe:	inc    ebp
  4227ff:	(bad)  
  422800:	mov    al,0x80
  422802:	leavew 
  422804:	outs   dx,BYTE PTR ds:[esi]
  422805:	sti    
  422806:	fsubr  QWORD PTR [ecx-0x15]
  422809:	fs fcmove st,st(1)
  42280c:	aam    0x86
  42280e:	sub    al,BYTE PTR [ecx+0xb17dc78]
  422814:	ja     0x4227cc
  422816:	fadd   st,st(5)
  422818:	shl    DWORD PTR [edi-0x19d89776],1
  42281e:	inc    edi
  42281f:	sub    BYTE PTR [esi],ch
  422821:	xor    dl,BYTE PTR [edi]
  422823:	(bad)
  422826:	or     edi,DWORD PTR [edx+edi*2+0x76]
  42282a:	sbb    ebp,DWORD PTR [ecx]
  42282c:	rcl    DWORD PTR [edx+0x66],0x73
  422830:	repnz popf 
  422832:	std    
  422833:	inc    esp
  422834:	mov    eax,0x2385a65b
  422839:	sbb    eax,0x90124e5b
  42283e:	scas   eax,DWORD PTR es:[edi]
  42283f:	xchg   DWORD PTR [ebp-0x7b],ebp
  422842:	xchg   edi,eax
  422843:	leave  
  422844:	sbb    al,0xf9
  422846:	push   ebx
  422847:	pop    esi
  422848:	push   eax
  422849:	shl    BYTE PTR cs:[edi+0x57831f3a],1
  422850:	and    ecx,0xeade10b2
  422856:	test   al,0x31
  422858:	clc    
  422859:	das    
  42285a:	mov    cl,0xd1
  42285c:	adc    DWORD PTR [eax-0x133859a6],esi
  422862:	mov    al,ds:0xee274e94
  422867:	add    BYTE PTR [esi],dl
  422869:	in     eax,dx
  42286a:	mul    DWORD PTR [ebp+0x77]
  42286d:	stos   DWORD PTR es:[edi],eax
  42286e:	fld    QWORD PTR [edx-0x10]
  422871:	jmp    0x93b3:0x91662a05
  422878:	enter  0x358e,0x8a
  42287c:	push   esi
  42287d:	in     eax,0x72
  42287f:	adc    al,0x9f
  422881:	sbb    BYTE PTR [ebp+0x7a],cl
  422884:	es enter 0x7cc3,0x86
  422889:	mov    cl,0x10
  42288b:	mov    edi,DWORD PTR [ebp+0x72c184e6]
  422891:	test   eax,0xb064de83
  422896:	hlt    
  422897:	cmp    al,0xa8
  422899:	loope  0x4228cb
  42289b:	and    edi,eax
  42289d:	leave  
  42289e:	daa    
  42289f:	inc    eax
  4228a0:	in     al,0x1c
  4228a2:	jno    0x42285f
  4228a4:	mov    ds:0x66f52cfd,eax
  4228a9:	add    eax,0x87544265
  4228ae:	cld    
  4228af:	cmp    DWORD PTR [edx-0x13],0x4f
  4228b3:	xchg   ebx,eax
  4228b4:	in     eax,dx
  4228b5:	sub    al,0xce
  4228b7:	int3   
  4228b8:	mov    eax,0x3b9e8710
  4228bd:	mov    ds:0x6a495bfd,eax
  4228c2:	in     al,0x3
  4228c4:	adc    al,0xa7
  4228c6:	jo     0x4228a3
  4228c8:	cmp    eax,0xa05c88d4
  4228cd:	into   
  4228ce:	cmp    ch,BYTE PTR [esi+0x1a]
  4228d1:	mov    BYTE PTR [edi],dl
  4228d3:	xchg   DWORD PTR [esi],ecx
  4228d5:	xor    DWORD PTR [ebp-0xd],esp
  4228d8:	hlt    
  4228d9:	call   eax
  4228db:	ds inc ebx
  4228dd:	jmp    0x815e:0x2eab5ffd
  4228e4:	mov    dl,0xe2
  4228e6:	stc    
  4228e7:	xor    BYTE PTR ss:[esi],dl
  4228ea:	pop    esp
  4228eb:	ins    BYTE PTR es:[edi],dx
  4228ec:	adc    al,0xf3
  4228ee:	push   edx
  4228ef:	jl     0x42288c
  4228f1:	retf   0x390e
  4228f4:	inc    edx
  4228f5:	inc    esi
  4228f6:	add    al,0xdd
  4228f8:	fld    QWORD PTR ds:0xf8921021
  4228fe:	xchg   esi,eax
  4228ff:	ficom  DWORD PTR [edi+0x20]
  422902:	enter  0xcd07,0xd6
  422906:	adc    eax,DWORD PTR [edi+0x56]
  422909:	push   ss
  42290a:	mov    esp,0x52312a69
  42290f:	enter  0xdc3c,0x22
  422913:	int    0x20
  422915:	enter  0x16a,0x75
  422919:	and    ch,ch
  42291b:	jae    0x42298b
  42291d:	cmp    BYTE PTR es:[edi],dl
  422920:	and    DWORD PTR [esi],ebp
  422922:	add    BYTE PTR [edx],cl
  422924:	mov    ecx,0xa9c1d769
  422929:	push   ss
  42292a:	mov    edi,0xd9c4502f
  42292f:	pusha  
  422930:	out    dx,eax
  422931:	mov    al,ds:0x9be9689c
  422936:	js     0x4228fd
  422938:	sahf   
  422939:	ror    DWORD PTR [esp+eax*2-0x19ac0dec],cl
  422940:	and    DWORD PTR [ecx+0x26e40bcd],edi
  422946:	jns    0x422904
  422948:	sbb    al,0xb5
  42294a:	adc    BYTE PTR [ebx+eax*8+0x2],bh
  42294e:	aam    0x30
  422950:	jns    0x422992
  422952:	loopne 0x4228ee
  422954:	jno    0x422986
  422956:	and    DWORD PTR [edi-0x17626e63],0x2729a29d
  422960:	jmp    0x57a7:0x7b4cea3c
  422967:	inc    ecx
  422968:	iret   
  422969:	lods   al,BYTE PTR ds:[esi]
  42296a:	retf   0xfde9
  42296d:	cmp    al,0x5e
  42296f:	ins    BYTE PTR es:[edi],dx
  422970:	(bad)  
  422971:	sub    eax,0xc96ffdd
  422976:	push   0x672aa52b
  42297b:	jns    0x422922
  42297d:	jmp    0x42296f
  42297f:	mov    cl,0x42
  422981:	mov    dh,0x3e
  422983:	mov    ah,0x75
  422985:	push   esi
  422986:	stc    
  422987:	dec    esi
  422988:	dec    ebx
  422989:	(bad)  
  42298a:	bnd jmp 0xcf7dbd84
  422990:	ret    0xa626
  422993:	js     0x422925
  422995:	pop    edi
  422996:	cmp    DWORD PTR [edi+0x8],ebp
  422999:	push   esi
  42299a:	xchg   edi,eax
  42299b:	cmp    BYTE PTR ds:[ebx],al
  42299e:	dec    ebp
  42299f:	jle    0x422979
  4229a1:	jmp    0x7bbdca64
  4229a6:	dec    ebp
  4229a7:	inc    edi
  4229a8:	hlt    
  4229a9:	int    0x73
  4229ab:	repnz test eax,0xde7488de
  4229b1:	rol    BYTE PTR [edx],1
  4229b3:	xchg   esi,eax
  4229b4:	inc    esi
  4229b5:	adc    eax,0xdad94131
  4229ba:	sbb    eax,0xec2ebd96
  4229bf:	in     al,dx
  4229c0:	dec    esi
  4229c1:	cdq    
  4229c2:	add    eax,DWORD PTR [edx-0x5bb4891d]
  4229c8:	mov    ebx,0xbd7d5c06
  4229cd:	push   ebp
  4229ce:	adc    eax,0x42d39275
  4229d3:	sub    esi,esp
  4229d5:	call   0x8bf1231
  4229da:	mov    eax,0x9b03d560
  4229df:	pop    ds
  4229e0:	(bad)  
  4229e1:	xor    BYTE PTR [esi-0x5b2864fe],al
  4229e7:	xchg   esp,eax
  4229e8:	ins    DWORD PTR es:[edi],dx
  4229e9:	xor    al,0xea
  4229eb:	xor    eax,0xb6860d73
  4229f0:	jecxz  0x42298c
  4229f2:	mov    ebp,0x3a739489
  4229f7:	iret   
  4229f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f9:	sub    al,0x91
  4229fb:	cmp    eax,0x529508a0
  422a00:	or     ch,BYTE PTR [eax-0x2eee0f69]
  422a06:	cwde   
  422a07:	xor    BYTE PTR [eax],cl
  422a09:	dec    esp
  422a0a:	push   0xba7ee649
  422a0f:	and    eax,0x76107cd3
  422a14:	sub    eax,0xbf231f0d
  422a19:	outs   dx,BYTE PTR ds:[esi]
  422a1a:	dec    ebp
  422a1b:	jno    0x422a8b
  422a1d:	jge    0x422a30
  422a1f:	mov    bl,BYTE PTR [edx+0x47]
  422a22:	pushf  
  422a23:	mov    esi,0xa84393dc
  422a28:	dec    esi
  422a29:	out    dx,eax
  422a2a:	cmp    ah,ch
  422a2c:	pop    ds
  422a2d:	jb     0x422a73
  422a2f:	in     eax,dx
  422a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a31:	or     DWORD PTR [edi-0x49],edx
  422a34:	adc    edx,esp
  422a36:	iret   
  422a37:	cmp    DWORD PTR [esi+esi*2+0x799940ec],ecx
  422a3e:	push   ecx
  422a3f:	inc    esp
  422a40:	fiadd  WORD PTR [ebx]
  422a42:	or     edi,DWORD PTR [edi+0x14]
  422a45:	mov    bh,0xc5
  422a47:	xchg   esi,eax
  422a48:	xlat   BYTE PTR ds:[ebx]
  422a49:	or     BYTE PTR [ebx+0x50],al
  422a4c:	fsub   DWORD PTR [ebx-0x5a]
  422a4f:	mov    dh,0xf2
  422a51:	push   0xffffffc1
  422a53:	inc    esp
  422a54:	rol    DWORD PTR [esi+0x6d],0x48
  422a58:	jmp    0x60c84e19
  422a5d:	push   esi
  422a5e:	sar    eax,0xa5
  422a61:	dec    esi
  422a62:	sbb    DWORD PTR [ebx+esi*8+0x1db90ed8],edx
  422a69:	aas    
  422a6a:	paddsw mm6,mm2
  422a6d:	adc    DWORD PTR [edi+0x34],edx
  422a70:	push   ds
  422a71:	pop    edx
  422a72:	push   ds
  422a73:	jmp    0x8ae0:0x98d1b073
  422a7a:	jnp    0x4229ff
  422a7c:	jne    0x422aae
  422a7e:	xor    ebp,DWORD PTR [ebx-0x7d]
  422a81:	(bad)  
  422a82:	pop    esp
  422a83:	fst    DWORD PTR [ebp-0x6177570c]
  422a89:	jmp    0x70495138
  422a8e:	mov    eax,DWORD PTR ds:0xe6d00c98
  422a94:	mov    BYTE PTR [esi-0x49],bh
  422a97:	fiadd  WORD PTR [esi+0x3a]
  422a9a:	out    dx,eax
  422a9b:	std    
  422a9c:	hlt    
  422a9d:	test   cl,0x8e
  422aa0:	xor    ebx,DWORD PTR [edi+ebp*2]
  422aa3:	xor    BYTE PTR [esi-0x5a],bl
  422aa6:	mov    dl,0x99
  422aa8:	mov    edi,0x4a277bd3
  422aad:	sub    al,0x2c
  422aaf:	push   ebp
  422ab0:	icebp  
  422ab1:	pop    ebx
  422ab2:	pop    es
  422ab3:	xchg   BYTE PTR [eax+0x42246afa],dh
  422ab9:	(bad)  
  422aba:	xchg   esp,eax
  422abb:	push   cs
  422abc:	fnstenv [esi-0x19d588b5]
  422ac2:	mov    ecx,0x4d42ef7c
  422ac7:	outs   dx,DWORD PTR ds:[esi]
  422ac8:	mov    ecx,0x3425cfe6
  422acd:	retf   
  422ace:	ror    BYTE PTR [eax],0xa3
  422ad1:	jmp    0x155d:0x2a2ceaf1
  422ad8:	loop   0x422a98
  422ada:	nop
  422adb:	call   0x3fc2:0xdd2ab91b
  422ae2:	inc    eax
  422ae3:	(bad)  
  422ae5:	test   ch,ah
  422ae7:	dec    ecx
  422ae8:	dec    edx
  422ae9:	nop
  422aea:	daa    
  422aeb:	dec    ebp
  422aec:	cmp    eax,0xed5f4a14
  422af1:	pop    ebx
  422af2:	xchg   edx,ecx
  422af4:	push   0x77
  422af6:	cmp    edi,DWORD PTR [ebp-0x219336de]
  422afc:	retf   0xee22
  422aff:	call   0xdb26442a
  422b04:	xor    dl,BYTE PTR [edx]
  422b06:	in     al,0xcc
  422b08:	sbb    eax,0xc44ec034
  422b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b0e:	sbb    DWORD PTR [edx+ebp*1],0xeb11c3f7
  422b15:	jnp    0x422b52
  422b17:	inc    ebp
  422b18:	inc    esi
  422b19:	cmp    bh,al
  422b1b:	test   BYTE PTR [edx-0x72],0xb8
  422b1f:	in     al,dx
  422b20:	xchg   ebp,eax
  422b21:	mov    al,ds:0xcceb7436
  422b26:	or     ebp,DWORD PTR [edi+ebx*8-0x46112435]
  422b2d:	das    
  422b2e:	imul   esp,DWORD PTR [edi],0x71fd87e6
  422b34:	or     ecx,DWORD PTR [edx]
  422b36:	add    eax,0xc4b7d8dd
  422b3b:	(bad)  
  422b3c:	jl     0x422bb6
  422b3e:	sbb    DWORD PTR ds:0xf7cbf959,0x8c06edd3
  422b48:	lods   eax,DWORD PTR ds:[esi]
  422b49:	jns    0x422b5b
  422b4b:	dec    ecx
  422b4c:	(bad)  
  422b4d:	push   edi
  422b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b50:	fldenv [ebx-0xe]
  422b53:	hlt    
  422b54:	xchg   ebp,eax
  422b55:	js     0x422b76
  422b57:	pop    ecx
  422b58:	aam    0x4e
  422b5a:	imul   dl
  422b5c:	mov    esi,0x756f143b
  422b61:	fiadd  DWORD PTR ds:0xb5027fa2
  422b67:	and    eax,0x4f1cb8ef
  422b6c:	dec    edi
  422b6d:	add    al,0x5
  422b6f:	fs jns 0x422b44
  422b72:	pop    ss
  422b73:	cmp    al,0xf3
  422b75:	ret    0xa99
  422b78:	fcmovnb st,st(2)
  422b7a:	inc    ecx
  422b7b:	and    esi,DWORD PTR [edx-0x64]
  422b7e:	ja     0x422b68
  422b80:	sbb    DWORD PTR [ecx],0xb1ccc3a3
  422b86:	jp     0x422b20
  422b88:	jo     0x422bb9
  422b8a:	cmp    al,0xcc
  422b8c:	cmp    BYTE PTR [edi],bl
  422b8e:	je     0x422b26
  422b90:	add    BYTE PTR [eax-0x7],ch
  422b93:	dec    eax
  422b94:	mov    dl,0x9d
  422b96:	pop    ds
  422b97:	cmp    al,BYTE PTR ds:0x158c6e6
  422b9d:	xchg   esi,eax
  422b9e:	cmp    al,0x5f
  422ba0:	sti    
  422ba1:	cmp    al,0xf1
  422ba3:	daa    
  422ba4:	xor    al,cl
  422ba6:	sub    BYTE PTR [esi],ah
  422ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ba9:	dec    esp
  422baa:	mov    bl,0x30
  422bac:	or     al,0x79
  422bae:	or     eax,0x1d66d1d
  422bb3:	aad    0xe5
  422bb5:	mov    cl,0xc7
  422bb7:	ret    0xbc87
  422bba:	sub    eax,0xf0c6b8f0
  422bbf:	xchg   esi,eax
  422bc0:	xchg   esp,eax
  422bc1:	(bad)  
  422bc2:	pop    eax
  422bc3:	fimul  DWORD PTR [edi+0x46]
  422bc6:	jmp    0x8293fbee
  422bcb:	stc    
  422bcc:	cmp    al,0xd1
  422bce:	xchg   DWORD PTR [ecx-0x6dedb72],ecx
  422bd4:	loope  0x422ba7
  422bd6:	daa    
  422bd7:	jecxz  0x422b80
  422bd9:	mul    BYTE PTR [esi-0x62]
  422bdc:	adc    ecx,ebx
  422bde:	xchg   ebp,eax
  422bdf:	mov    edi,0x6d989235
  422be4:	mov    edx,0x701ce1ef
  422be9:	loop   0x422bb1
  422beb:	loope  0x422bae
  422bed:	arpl   WORD PTR [edi],bx
  422bef:	xor    eax,0xcd181a75
  422bf4:	cmp    al,0x38
  422bf6:	leave  
  422bf7:	nop
  422bf8:	cld    
  422bf9:	das    
  422bfa:	push   ebx
  422bfb:	ins    DWORD PTR es:[edi],dx
  422bfc:	ror    DWORD PTR [edx-0x48fc7a8b],1
  422c02:	loop   0x422c59
  422c04:	inc    edi
  422c05:	jb     0x422b92
  422c07:	inc    DWORD PTR [edx-0x524f8f13]
  422c0d:	inc    esp
  422c0e:	sbb    ch,cl
  422c10:	in     eax,dx
  422c11:	mov    al,ds:0xc2bb4d9e
  422c16:	pslld  mm7,mm4
  422c19:	mov    ecx,0x7a96e8e6
  422c1e:	mov    es,WORD PTR [eax]
  422c20:	sub    eax,0x9acb2f71
  422c25:	push   edx
  422c26:	inc    edx
  422c27:	mov    bl,0x1f
  422c29:	ja     0x422c30
  422c2b:	jbe    0x422beb
  422c2d:	clc    
  422c2e:	mov    edx,DWORD PTR [ebx-0x61]
  422c31:	xlat   BYTE PTR ds:[ebx]
  422c32:	fcmove st,st(3)
  422c34:	sub    edi,0xffffffd3
  422c37:	xchg   edi,eax
  422c38:	gs (bad) 
  422c3a:	sbb    eax,0xc8a088c2
  422c3f:	pop    esp
  422c40:	mov    ebx,0xc41951ce
  422c45:	push   eax
  422c46:	push   eax
  422c47:	sbb    bh,BYTE PTR [ebp+eax*4+0x7a]
  422c4b:	ja     0x422c93
  422c4d:	fmul   DWORD PTR [eax+0x5fbb2eed]
  422c53:	lahf   
  422c54:	aas    
  422c55:	jge    0x422c60
  422c57:	and    DWORD PTR cs:[ecx-0x1a],0xffffffee
  422c5c:	mov    ah,0xd4
  422c5e:	popf   
  422c5f:	mov    ?,eax
  422c61:	pop    ecx
  422c62:	or     BYTE PTR [edx],cl
  422c64:	outs   dx,DWORD PTR ds:[esi]
  422c65:	sbb    al,0x2b
  422c67:	pop    edi
  422c68:	ret    
  422c69:	cli    
  422c6a:	bound  ebx,QWORD PTR [esi+0x2e]
  422c6d:	mov    ah,0xf2
  422c6f:	test   eax,0xc291167
  422c74:	add    BYTE PTR [eax+0x49be952c],dl
  422c7a:	imul   edi,DWORD PTR [ecx+0x21],0x51
  422c7e:	xor    edx,DWORD PTR [ecx-0x5f]
  422c81:	push   es
  422c82:	adc    esp,DWORD PTR [ebp-0x7723a1f6]
  422c88:	neg    esp
  422c8a:	mov    al,0x2e
  422c8d:	pushf  
  422c8e:	cmp    eax,0xa6d90d0c
  422c93:	out    dx,al
  422c94:	mov    ds:0xc0079640,eax
  422c99:	stos   BYTE PTR es:[edi],al
  422c9a:	test   DWORD PTR [ecx+0x59],0xfa299d04
  422ca1:	jl     0x422c33
  422ca3:	mov    dh,BYTE PTR [eax+ebx*8-0x4c]
  422ca7:	mov    edx,0x7df00efa
  422cac:	or     eax,0x88a40e8e
  422cb1:	bnd jb 0x422cdb
  422cb4:	xor    BYTE PTR [edi],bh
  422cb6:	push   es
  422cb7:	addr16 mov bh,0x57
  422cba:	adc    BYTE PTR [eax+esi*2-0x2f1b9fc4],bh
  422cc1:	and    eax,0x3512bec3
  422cc6:	imul   ebx,DWORD PTR [ecx-0x55c67132],0x5b
  422ccd:	add    bh,ch
  422ccf:	pop    es
  422cd0:	pushf  
  422cd1:	jb     0x422c54
  422cd3:	and    bl,0x78
  422cd6:	int3   
  422cd7:	adc    al,0x1d
  422cd9:	(bad)  
  422cda:	xlat   BYTE PTR ds:[ebx]
  422cdb:	je     0x422cff
  422cdd:	call   0x6c60:0x7325354f
  422ce4:	hlt    
  422ce5:	adc    eax,0xe2a38fc9
  422cea:	das    
  422ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cec:	xchg   ebp,eax
  422ced:	jns    0x422d43
  422cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf0:	fist   WORD PTR [edx]
  422cf2:	call   0x7837:0x31ef9383
  422cf9:	(bad)  
  422cfa:	stos   BYTE PTR es:[edi],al
  422cfb:	sbb    dh,cl
  422cfd:	jb     0x422d1b
  422cff:	mov    ds:0xaf1dd017,al
  422d04:	sub    al,0xb9
  422d06:	push   edx
  422d07:	mov    eax,0xabba95a1
  422d0c:	pushf  
  422d0d:	dec    eax
  422d0e:	fdiv   st(3),st
  422d10:	jmp    0x422d33
  422d12:	popf   
  422d13:	xor    al,0x12
  422d15:	sub    esi,edx
  422d17:	outs   dx,DWORD PTR ds:[esi]
  422d18:	hlt    
  422d19:	jne    0x422d43
  422d1b:	pop    edx
  422d1c:	pop    esi
  422d1d:	jbe    0x422d57
  422d1f:	inc    ebx
  422d20:	lock daa 
  422d22:	and    dh,dl
  422d24:	addr16 xchg esp,eax
  422d26:	mov    eax,ds:0xa6462e92
  422d2b:	and    BYTE PTR [ebx+0x3ea413eb],0xbe
  422d32:	or     DWORD PTR [edx],ebx
  422d34:	mov    gs,WORD PTR [ebp-0x48]
  422d37:	mov    dh,0x89
  422d39:	pushf  
  422d3a:	mov    edx,0xd135b47a
  422d3f:	add    DWORD PTR [ebx+0x2640543d],ebp
  422d45:	je     0x422da7
  422d47:	shl    DWORD PTR [edx+0x17],1
  422d4a:	xchg   edi,eax
  422d4b:	sub    DWORD PTR [ecx-0x54],esp
  422d4e:	push   ebx
  422d4f:	std    
  422d50:	dec    ecx
  422d51:	inc    ecx
  422d52:	pop    edi
  422d53:	je     0x422d54
  422d55:	push   0x95ce7dad
  422d5a:	mov    WORD PTR [esp+eax*2-0x6aa2b248],cs
  422d61:	inc    ecx
  422d62:	out    0x7d,eax
  422d64:	xchg   ecx,eax
  422d65:	out    dx,al
  422d66:	pop    esi
  422d67:	nop
  422d68:	jno    0x422db0
  422d6a:	inc    ecx
  422d6b:	fisttp QWORD PTR [eax]
  422d6d:	stc    
  422d6e:	and    BYTE PTR [edi+ebx*1],ah
  422d71:	mov    ebx,cs
  422d73:	bound  esp,QWORD PTR [ebp-0x73e66f8b]
  422d79:	shr    DWORD PTR [edx-0x23],0xb9
  422d7d:	mov    ebp,0x72a49a24
  422d82:	or     esi,DWORD PTR [edx]
  422d84:	aaa    
  422d85:	jl     0x422db6
  422d87:	xlat   BYTE PTR ds:[ebx]
  422d88:	push   esi
  422d89:	push   eax
  422d8a:	sbb    dx,WORD PTR ds:0x31f707fd
  422d91:	loopne 0x422df3
  422d93:	cmp    BYTE PTR [esi],cl
  422d95:	mov    esi,DWORD PTR [edi]
  422d97:	xchg   BYTE PTR [esi],al
  422d99:	push   ebp
  422d9a:	mov    esp,0x44ff3e5e
  422d9f:	enter  0x52d9,0x16
  422da3:	pop    edi
  422da4:	pop    esi
  422da5:	xchg   esp,eax
  422da6:	jmp    0x7664:0x53f7fe45
  422dad:	ret    0xea58
  422db0:	ret    
  422db1:	jbe    0x422d7b
  422db3:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db5:	pop    ecx
  422db6:	inc    edi
  422db7:	mov    DWORD PTR [ecx],ebx
  422db9:	push   esp
  422dba:	cmc    
  422dbb:	retf   
  422dbc:	xchg   esi,eax
  422dbd:	shl    DWORD PTR [edi],1
  422dbf:	adc    al,0xd7
  422dc1:	jbe    0x422e25
  422dc3:	cmp    cl,cl
  422dc5:	pop    ss
  422dc6:	ins    DWORD PTR es:[edi],dx
  422dc7:	mov    ch,cl
  422dc9:	or     BYTE PTR [ebx-0x39],bh
  422dcc:	xchg   DWORD PTR ds:0xc4fd2f16,ebp
  422dd2:	fild   DWORD PTR [esi-0x2e]
  422dd5:	lds    esi,FWORD PTR [ebx+ebx*4]
  422dd8:	nop
  422dd9:	xchg   esi,eax
  422dda:	adc    edi,DWORD PTR [eax]
  422ddc:	aas    
  422ddd:	xor    eax,edi
  422ddf:	and    DWORD PTR [bx+di+0x42bf],ecx
  422de4:	call   0x814:0x17767a35
  422deb:	mov    al,0x2e
  422ded:	cmp    eax,0x6ab0b5ee
  422df2:	popa   
  422df3:	ins    DWORD PTR es:[edi],dx
  422df4:	jg     0x422e29
  422df6:	jae    0x422db0
  422df8:	icebp  
  422df9:	out    dx,eax
  422dfa:	inc    ebx
  422dfb:	in     al,dx
  422dfc:	mov    edx,0x848c71f2
  422e01:	inc    ecx
  422e02:	es hlt 
  422e04:	inc    esi
  422e05:	adc    DWORD PTR [edx+0x72],eax
  422e08:	add    bl,BYTE PTR [ebp-0x63]
  422e0b:	fadd   QWORD PTR [edi*2-0x20dc6006]
  422e12:	push   ebp
  422e13:	loop   0x422e05
  422e15:	pop    es
  422e16:	in     eax,dx
  422e17:	(bad)  
  422e18:	jmp    0x8236125b
  422e1d:	into   
  422e1e:	pop    eax
  422e1f:	emms   
  422e21:	inc    edi
  422e22:	hlt    
  422e23:	jnp    0x422dc6
  422e25:	adc    al,0xed
  422e27:	fisubr DWORD PTR [ebp+eiz*8+0x2bdc412]
  422e2e:	mov    ebx,0xc5351e9f
  422e33:	cmp    BYTE PTR [edi],0x70
  422e36:	mov    eax,0x19cec231
  422e3b:	jns    0x422dfd
  422e3d:	mov    edi,0x413f3754
  422e42:	inc    ecx
  422e43:	or     al,0xb1
  422e45:	lock push ebp
  422e47:	and    eax,0x7299a656
  422e4c:	cli    
  422e4d:	sbb    DWORD PTR [edx+0x5b],edx
  422e50:	dec    BYTE PTR [edx-0x5839a98f]
  422e56:	and    ebx,DWORD PTR [edx+0xcfb5544]
  422e5c:	(bad)  
  422e5d:	inc    esi
  422e5e:	xchg   ebx,eax
  422e5f:	scas   al,BYTE PTR es:[edi]
  422e60:	repz dec ebx
  422e62:	stos   DWORD PTR es:[edi],eax
  422e63:	popf   
  422e64:	mov    ah,ch
  422e66:	push   eax
  422e67:	mov    es,WORD PTR [ecx]
  422e69:	pusha  
  422e6a:	xlat   BYTE PTR ds:[ebx]
  422e6b:	push   ss
  422e6c:	aas    
  422e6d:	xor    dl,BYTE PTR [edi]
  422e6f:	enter  0x7255,0x1a
  422e73:	dec    DWORD PTR [edx-0x35a633a8]
  422e79:	pop    esp
  422e7a:	xor    al,0x5a
  422e7c:	cmp    eax,0x77cb9d87
  422e81:	cmp    ch,BYTE PTR [esi+ecx*8+0x3dd683b9]
  422e88:	mov    ds:0xfbe48dca,al
  422e8d:	ds imul edx,esi,0x8d0a003
  422e94:	inc    edi
  422e95:	ss leave 
  422e97:	add    DWORD PTR [edx],0xffffff81
  422e9a:	loope  0x422ead
  422e9c:	scas   eax,DWORD PTR es:[edi]
  422e9d:	lock lods eax,DWORD PTR ds:[esi]
  422e9f:	mov    DWORD PTR [eax+0x23326326],eax
  422ea5:	or     eax,0x4ae7bc8
  422eaa:	pop    ebp
  422eab:	mov    bh,0xe4
  422ead:	xor    DWORD PTR [ecx],esi
  422eaf:	lods   al,BYTE PTR ds:[esi]
  422eb0:	adc    eax,0x31bc5d35
  422eb5:	into   
  422eb6:	and    dl,dh
  422eb8:	or     BYTE PTR [ebx+0x7f],dl
  422ebb:	(bad)  
  422ebc:	fistp  WORD PTR [ecx+eiz*2+0x5f]
  422ec0:	push   edi
  422ec2:	fisttp QWORD PTR [edx+0x32]
  422ec5:	call   0x40c808a
  422eca:	pop    ebx
  422ecb:	and    ah,bl
  422ecd:	arpl   WORD PTR [ecx+0x4c384a5a],si
  422ed3:	push   0xc25023ec
  422ed8:	cmc    
  422ed9:	jmp    0x7055fa20
  422ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422edf:	jo     0x422e95
  422ee1:	in     al,0x4d
  422ee3:	cmp    eax,0xf859e0bc
  422ee8:	sbb    ebp,DWORD PTR [edx-0x76]
  422eeb:	jnp    0x422e96
  422eed:	pop    ebx
  422eee:	push   edi
  422eef:	icebp  
  422ef0:	cs stos DWORD PTR es:[edi],eax
  422ef2:	push   es
  422ef3:	adc    eax,edi
  422ef5:	(bad)  
  422ef7:	mov    dl,0xb5
  422ef9:	mov    cl,0x55
  422efb:	in     al,0x2f
  422efd:	inc    esi
  422efe:	jae    0x422eed
  422f00:	push   es
  422f01:	das    
  422f02:	mov    ebp,0x8f66a524
  422f07:	or     ebp,esi
  422f09:	sbb    BYTE PTR [ebx],bl
  422f0b:	sbb    ch,BYTE PTR [ebp+ebp*4-0x1974ac6]
  422f12:	push   0x5e
  422f14:	mov    dh,0xc6
  422f16:	lock push eax
  422f18:	repz mov eax,ds:0x838b71c7
  422f1e:	and    DWORD PTR [edx+esi*4],ebx
  422f21:	loop   0x422f94
  422f23:	pop    esp
  422f24:	inc    eax
  422f25:	addr16 mov bl,0x83
  422f28:	mov    esi,0xed66b189
  422f2d:	adc    eax,0x7033a5d8
  422f32:	jg     0x422edc
  422f34:	out    0x22,al
  422f36:	add    al,0x7f
  422f38:	ja     0x422ee9
  422f3a:	lods   eax,DWORD PTR ds:[esi]
  422f3b:	call   0x22b9:0x1f3f6958
  422f42:	mov    al,ds:0x9c99e19
  422f47:	mov    cl,0x4a
  422f49:	mov    fs,WORD PTR ds:0xcf441cf5
  422f4f:	loopne 0x422f2e
  422f51:	or     al,bh
  422f53:	out    0xf2,eax
  422f55:	(bad)  
  422f57:	lock mov ds:0x1c685243,al
  422f5d:	ja     0x422f97
  422f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f60:	mov    dh,0x46
  422f62:	rdmsr  
  422f64:	push   0x2c
  422f66:	test   al,0x44
  422f68:	js     0x422fce
  422f6a:	mov    esi,DWORD PTR [esi+0x54]
  422f6d:	sar    DWORD PTR [ebp-0x168d4514],0xe8
  422f74:	ja     0x422fbf
  422f76:	lods   eax,DWORD PTR ds:[esi]
  422f77:	jne    0x422f14
  422f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f7a:	mov    al,ds:0x58466163
  422f7f:	dec    bx
  422f81:	pop    edi
  422f82:	sbb    cl,BYTE PTR [ebp+0x3c]
  422f85:	xlat   BYTE PTR ds:[ebx]
  422f86:	pop    DWORD PTR ds:0xa2a5a6e9
  422f8c:	lahf   
  422f8d:	inc    esi
  422f8e:	ins    BYTE PTR es:[edi],dx
  422f8f:	inc    edi
  422f90:	clc    
  422f91:	adc    eax,0x31f8d657
  422f96:	out    dx,eax
  422f97:	mov    esi,0x18288037
  422f9c:	mov    esp,0xb2a1c81a
  422fa1:	jp     0x422f49
  422fa3:	pushf  
  422fa4:	mov    ecx,edx
  422fa6:	cmp    edi,edi
  422fa8:	mov    al,ds:0x7c06b9b2
  422fad:	fbld   TBYTE PTR [edi]
  422faf:	int    0x1f
  422fb1:	sbb    bh,dl
  422fb3:	xlat   BYTE PTR ds:[ebx]
  422fb4:	enter  0xa20c,0x57
  422fb8:	sbb    eax,0x1c140a5e
  422fbd:	push   ss
  422fbe:	arpl   WORD PTR [edi+0x41],di
  422fc1:	add    eax,0xce01e478
  422fc6:	in     al,0xe
  422fc8:	(bad)  
  422fc9:	and    DWORD PTR [ebp+0x29],ecx
  422fcc:	repz cwde 
  422fce:	arpl   dx,di
  422fd0:	pop    edx
  422fd1:	loop   0x422f73
  422fd3:	dec    ebx
  422fd4:	jmp    0x23c1:0x3e6c829e
  422fdb:	push   0xfffffff2
  422fdd:	mov    ebp,0x2ebebdda
  422fe2:	pusha  
  422fe3:	imul   BYTE PTR [edx+0x42]
  422fe6:	xchg   ecx,eax
  422fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fe8:	mov    ch,0x7a
  422fea:	mov    cl,0x33
  422fec:	(bad)  
  422fed:	sub    BYTE PTR [ebx+ebx*8],bl
  422ff0:	(bad)  
  422ff2:	out    0x5c,al
  422ff4:	mov    ah,0x32
  422ff6:	add    BYTE PTR [ebx-0x439dcaac],al
  422ffc:	xchg   ebp,eax
  422ffd:	dec    esp
  422ffe:	lods   al,BYTE PTR ds:[esi]
  422fff:	mov    bh,0x26
  423001:	mov    eax,0xaf014b8a
  423006:	mov    eax,0xa4b12e88
  42300b:	mov    al,ds:0x11218632
  423010:	xchg   ebp,eax
  423011:	test   eax,0x33c68deb
  423016:	xchg   edx,eax
  423017:	mov    al,BYTE PTR [ebx+edi*4]
  42301a:	inc    ecx
  42301b:	push   ebx
  42301c:	sbb    eax,0xd0bb4e89
  423021:	pop    ecx
  423022:	mov    dl,0x2d
  423024:	adc    eax,edx
  423026:	data16 (bad) [esi]
  423029:	xchg   edx,eax
  42302a:	sti    
  42302b:	lahf   
  42302c:	sbb    al,0xc9
  42302e:	or     esi,DWORD PTR [edi+0x22]
  423031:	shl    dl,1
  423033:	sbb    al,dl
  423035:	in     al,dx
  423036:	sub    dl,BYTE PTR [ebp-0x13553ff5]
  42303c:	xchg   DWORD PTR [esi],edi
  42303e:	jns    0x423013
  423040:	lahf   
  423041:	fs xor al,0xc1
  423044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423045:	fdivr  QWORD PTR [esi]
  423047:	mov    eax,ds:0xdc3c4887
  42304c:	rol    DWORD PTR ds:0x6f8e2864,0x32
  423053:	and    BYTE PTR [edi+0x58],ah
  423056:	push   0x49
  423058:	sub    bl,al
  42305a:	je     0x423048
  42305c:	sub    ecx,DWORD PTR [ebx+0x76ba6df8]
  423062:	xor    cl,0x5f
  423065:	or     dl,BYTE PTR [ecx]
  423067:	pop    esp
  423068:	mov    ch,0xb8
  42306a:	xchg   esi,eax
  42306b:	test   DWORD PTR [ecx+edx*8-0x6bf56a8a],edx
  423072:	nop
  423073:	icebp  
  423074:	popf   
  423075:	sub    eax,0x2fe8e69
  42307a:	(bad)  
  42307b:	mov    al,0x41
  42307d:	pusha  
  42307e:	arpl   WORD PTR [esp+ebp*4-0x6f6a6de6],di
  423085:	mov    ebp,0x87a930c0
  42308a:	dec    ecx
  42308b:	bound  ecx,QWORD PTR [eax]
  42308d:	fcomp  st(1)
  42308f:	fdiv   DWORD PTR [edx]
  423091:	sbb    bl,bh
  423093:	or     eax,0x988fb1ea
  423098:	xor    eax,0x9e86dad3
  42309d:	neg    BYTE PTR [ebx-0x66]
  4230a0:	(bad)  
  4230a1:	jb     0x4230ef
  4230a3:	sbb    al,0xa1
  4230a5:	inc    esi
  4230a6:	call   0x651fb2a8
  4230ab:	add    esp,ecx
  4230ad:	mov    DWORD PTR [esi],ecx
  4230af:	mov    edi,0x4fd1faca
  4230b4:	jnp    0x4230a3
  4230b6:	push   ss
  4230b7:	call   0xb3df:0x53cb0054
  4230be:	int    0x43
  4230c0:	mov    esi,ecx
  4230c2:	lods   al,BYTE PTR ds:[esi]
  4230c3:	mov    edx,0xd0f3bbe4
  4230c8:	in     eax,0xf8
  4230ca:	inc    esp
  4230cb:	pop    eax
  4230cc:	aas    
  4230cd:	pop    esp
  4230ce:	push   ecx
  4230cf:	mov    ds:0x746567dd,al
  4230d4:	int    0x1e
  4230d6:	shl    DWORD PTR [eax+0x5cefb4fa],1
  4230dc:	or     eax,0x514f7af
  4230e1:	retf   
  4230e2:	rol    BYTE PTR [ecx-0xf9849ec],cl
  4230e8:	xor    BYTE PTR [ebx+0x3e93eb83],bl
  4230ee:	pushw  0xe8b0
  4230f2:	sub    al,0x9e
  4230f4:	idiv   BYTE PTR [esi]
  4230f6:	(bad)  
  4230f8:	out    dx,al
  4230f9:	mov    dh,0xc2
  4230fb:	int3   
  4230fc:	pop    es
  4230fd:	lods   al,BYTE PTR ss:[esi]
  4230ff:	pop    ebp
  423100:	dec    esp
  423101:	inc    ebx
  423102:	adc    dl,BYTE PTR [esi-0x4a015423]
  423108:	aas    
  423109:	add    cl,al
  42310b:	mov    bl,0x70
  42310d:	and    BYTE PTR [edi],dl
  42310f:	lods   al,BYTE PTR ds:[esi]
  423110:	sub    al,0xf1
  423112:	je     0x423151
  423114:	xor    DWORD PTR [edx+0x317e9d70],0xffffffa1
  42311b:	pusha  
  42311c:	cwde   
  42311d:	mov    eax,0x8190942d
  423122:	imul   esi,DWORD PTR [edi+0x5d1b6b2e],0x1a4d3aee
  42312c:	push   ds
  42312d:	hlt    
  42312e:	lock fs shl eax,0xe
  423133:	stos   DWORD PTR es:[edi],eax
  423134:	mov    al,ds:0x4a4c3107
  423139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42313a:	pop    esp
  42313b:	and    al,0xd4
  42313d:	inc    edx
  42313e:	iret   
  42313f:	adc    esi,DWORD PTR [ecx+esi*4]
  423142:	call   0x24c6:0xcdd1cf5e
  423149:	ins    BYTE PTR es:[edi],dx
  42314a:	fnclex 
  42314c:	pop    ss
  42314d:	xchg   ebp,eax
  42314e:	and    bl,dh
  423150:	icebp  
  423151:	fild   DWORD PTR [eax-0x6d237c80]
  423157:	jp     0x4231c4
  423159:	sub    ebp,0xc06f6fb0
  42315f:	pop    ebp
  423160:	pop    ecx
  423161:	add    dl,BYTE PTR [ebp+0x3dc8840]
  423167:	cmc    
  423168:	dec    eax
  423169:	aad    0xbc
  42316b:	les    eax,FWORD PTR gs:[esi+0x43]
  42316f:	mov    DWORD PTR [eax+0x523aa511],ebp
  423175:	loop   0x42310d
  423177:	jl     0x423127
  423179:	ja     0x42311c
  42317b:	loopne 0x4231f8
  42317d:	leave  
  42317e:	mov    esi,0x90058793
  423183:	test   BYTE PTR [eax],dl
  423185:	shl    BYTE PTR [eax+0x59],0x2a
  423189:	jg     0x423166
  42318b:	fdivr  QWORD PTR [eax]
  42318d:	out    dx,eax
  42318e:	retf   0x2d46
  423191:	arpl   WORD PTR [edx],ax
  423193:	mov    BYTE PTR [ecx],ah
  423195:	repz jecxz 0x423194
  423198:	stos   DWORD PTR es:[edi],eax
  423199:	jbe    0x423132
  42319b:	and    eax,0xbc79e273
  4231a0:	(bad)  
  4231a1:	idiv   DWORD PTR ds:0xc2accf7e
  4231a7:	mov    bl,0x89
  4231a9:	adc    eax,0x97145d00
  4231ae:	mov    ah,0x7a
  4231b0:	xchg   ch,dl
  4231b2:	(bad)  
  4231b3:	jecxz  0x4231e7
  4231b5:	push   ebp
  4231b6:	mov    eax,DWORD PTR [edx]
  4231b8:	inc    ebx
  4231b9:	jg     0x4231b5
  4231bb:	test   al,0x88
  4231bd:	jmp    0x4231c8
  4231bf:	sbb    bl,BYTE PTR [edx-0x15]
  4231c2:	stos   DWORD PTR es:[edi],eax
  4231c3:	xchg   edx,eax
  4231c4:	pushf  
  4231c5:	scas   al,BYTE PTR es:[edi]
  4231c6:	cmp    al,0x98
  4231c8:	loope  0x4231c4
  4231ca:	test   eax,0x8b59762e
  4231cf:	cdq    
  4231d0:	out    0x35,eax
  4231d2:	push   0x35
  4231d4:	mov    ah,0x6b
  4231d6:	in     eax,0x2d
  4231d8:	mov    dl,BYTE PTR [edi]
  4231da:	xchg   edx,eax
  4231db:	xor    ebp,edi
  4231dd:	push   cs
  4231de:	dec    edi
  4231df:	loope  0x423218
  4231e1:	mov    edi,0x7f227bbc
  4231e6:	test   bl,bl
  4231e8:	mov    ecx,0x3332255d
  4231ed:	and    al,0xad
  4231f0:	lahf   
  4231f1:	push   edi
  4231f2:	(bad)  
  4231f3:	sbb    al,0x32
  4231f5:	pusha  
  4231f6:	xchg   ebx,eax
  4231f7:	loopne 0x4231f6
  4231f9:	jp     0x423267
  4231fb:	lock test al,0x62
  4231fe:	xor    DWORD PTR [ecx-0x7b6f28a4],ecx
  423204:	xchg   cx,ax
  423206:	push   edx
  423207:	inc    edi
  423208:	js     0x423205
  42320a:	jno    0x423198
  42320c:	dec    ebp
  42320d:	imul   ebx,DWORD PTR [edi],0xa906d2b4
  423213:	add    al,0x3f
  423215:	lds    ecx,FWORD PTR [ebx-0x466e2ca1]
  42321b:	mov    bh,BYTE PTR [esi]
  42321d:	inc    esi
  42321e:	dec    esp
  42321f:	pop    esi
  423220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423221:	lea    ebx,[eax-0x34]
  423224:	add    cl,BYTE PTR [eax+0x32]
  423227:	add    bl,dl
  423229:	xlat   BYTE PTR ds:[ebx]
  42322a:	clc    
  42322b:	mov    ch,0xf6
  42322d:	add    ah,ch
  42322f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423230:	arpl   di,cx
  423232:	fcmovb st,st(4)
  423234:	pop    edi
  423235:	dec    ebx
  423236:	ds ret 0x667c
  42323a:	fldcw  WORD PTR [eax+0xa706369]
  423240:	sahf   
  423241:	lods   al,BYTE PTR ds:[esi]
  423242:	adc    eax,0x295e507e
  423247:	cmp    ebx,esp
  423249:	push   es
  42324a:	xchg   ebx,eax
  42324b:	into   
  42324c:	xchg   esi,eax
  42324d:	mov    dl,0x88
  42324f:	fwait
  423250:	pusha  
  423251:	scas   al,BYTE PTR es:[edi]
  423252:	pop    eax
  423253:	imul   esi,DWORD PTR [edi-0x58],0x1
  423257:	jg     0x4232d7
  423259:	inc    edi
  42325a:	mov    eax,0x9c668ce7
  42325f:	sub    ah,ah
  423261:	retf   
  423262:	dec    esp
  423263:	mov    cs,WORD PTR [ecx]
  423265:	test   eax,0x5f5a316d
  42326b:	mov    dh,0xfe
  42326d:	or     BYTE PTR [ebp-0x3af3181f],al
  423273:	push   edi
  423274:	hlt    
  423275:	shr    DWORD PTR [edi-0x2685be5c],1
  42327b:	and    edi,DWORD PTR [ecx+ebx*8-0x71]
  42327f:	and    eax,DWORD PTR [edi]
  423281:	bound  ecx,QWORD PTR [ecx-0x6f]
  423284:	inc    ebp
  423285:	jmp    0x423272
  423287:	add    ch,BYTE PTR [edx-0x14effd45]
  42328d:	(bad)  
  42328e:	push   edx
  42328f:	push   ecx
  423290:	and    ecx,ebp
  423292:	ficom  WORD PTR [edx+0x13e83205]
  423298:	and    eax,0x188d6ee6
  42329d:	jmp    0x4232d5
  42329f:	dec    esi
  4232a0:	mov    ch,0x8d
  4232a2:	ret    
  4232a3:	call   0x404a:0x57b7186f
  4232aa:	(bad)  
  4232ab:	lahf   
  4232ac:	out    dx,eax
  4232ad:	push   ds
  4232ae:	sub    eax,0xd1e0a19e
  4232b3:	lods   al,BYTE PTR ds:[esi]
  4232b4:	sar    BYTE PTR [ebp-0x5e6ee4e6],cl
  4232ba:	jge    0x4232eb
  4232bc:	push   eax
  4232bd:	dec    edi
  4232be:	cmp    bh,BYTE PTR [edx]
  4232c0:	jns    0x423242
  4232c2:	test   eax,0x63fec243
  4232c7:	or     edx,DWORD PTR [ebp-0x36]
  4232ca:	cli    
  4232cb:	xor    BYTE PTR [edi],ch
  4232cd:	jb     0x4232f8
  4232cf:	and    ah,BYTE PTR [edx+0x23c56a05]
  4232d5:	pop    ecx
  4232d6:	push   ebx
  4232d7:	add    eax,0x4186af57
  4232dc:	xor    al,BYTE PTR [edx-0x51a31d57]
  4232e2:	es push es
  4232e4:	rcr    ah,1
  4232e6:	mov    WORD PTR [edi],ds
  4232e8:	iret   
  4232e9:	pop    ebx
  4232ea:	mov    bh,0x81
  4232ec:	ss adc al,0xd7
  4232ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232f0:	jne    0x4232c7
  4232f2:	and    al,0x92
  4232f4:	das    
  4232f5:	and    al,0x3a
  4232f7:	mov    BYTE PTR [ebx+0x34c59e2f],bl
  4232fd:	cmp    ecx,DWORD PTR [edi+ebx*1+0x58]
  423301:	mov    ds:0xf5c5e983,al
  423306:	sti    
  423307:	test   al,0xbd
  423309:	out    0x4b,al
  42330b:	cmp    BYTE PTR [ecx],dl
  42330d:	sub    al,0x94
  42330f:	xor    edx,DWORD PTR [eax+0x6f]
  423312:	fs jno 0x4232df
  423315:	xor    DWORD PTR [ebx+0x1b],ebx
  423318:	aad    0x21
  42331a:	or     eax,0xd798b953
  42331f:	das    
  423320:	pusha  
  423321:	cmp    DWORD PTR [edx],0x53
  423324:	push   ebp
  423325:	inc    ebp
  423326:	jnp    0x423301
  423328:	jmp    DWORD PTR [edx]
  42332a:	imul   ebx,DWORD PTR [esi],0xf7911eb3
  423330:	adc    BYTE PTR ds:0x56659c36,ah
  423336:	push   es
  423337:	stos   BYTE PTR es:[edi],al
  423338:	push   edx
  423339:	xchg   esi,eax
  42333a:	test   eax,0xa71e8a9a
  42333f:	inc    eax
  423340:	jnp    0x423313
  423342:	outs   dx,DWORD PTR ds:[esi]
  423343:	arpl   WORD PTR [esi-0x15],dx
  423346:	jmp    0x68d6750f
  42334b:	out    0x67,eax
  42334d:	movsx  esi,bh
  423350:	cmp    al,0x21
  423352:	jno    0x423345
  423354:	sbb    eax,0xa627b65f
  423359:	les    ebp,FWORD PTR [esi+0x2e]
  42335c:	xor    ah,ah
  42335e:	nop
  42335f:	std    
  423360:	push   ebx
  423361:	icebp  
  423362:	loop   0x4233c8
  423364:	push   edi
  423365:	(bad)  
  423366:	xchg   ecx,eax
  423367:	inc    edx
  423368:	inc    ecx
  423369:	sbb    dh,bh
  42336b:	std    
  42336c:	pop    edi
  42336d:	or     eax,0xf5908c97
  423372:	xor    cl,BYTE PTR [eax+0x3a]
  423375:	jae    0x423377
  423377:	xor    DWORD PTR [edi-0x10],edx
  42337a:	sbb    dh,bl
  42337c:	cld    
  42337d:	fdivr  st(1),st
  42337f:	xchg   esi,eax
  423380:	add    DWORD PTR [ecx+0x6306369f],ebx
  423386:	or     ch,BYTE PTR [esi+eiz*8]
  423389:	bound  esp,QWORD PTR [edi-0x4f]
  42338c:	or     al,0x81
  42338e:	jbe    0x423339
  423390:	inc    edx
  423391:	aas    
  423392:	or     al,BYTE PTR [edx+0x3c1c4baf]
  423398:	std    
  423399:	mov    ch,0x92
  42339b:	dec    edx
  42339c:	cmc    
  42339d:	mov    WORD PTR [esi+0x7e11addb],?
  4233a3:	push   edx
  4233a4:	leave  
  4233a5:	and    al,0x73
  4233a7:	dec    edi
  4233a8:	in     al,dx
  4233a9:	mov    bh,0x6b
  4233ab:	mov    dh,0xae
  4233ad:	iret   
  4233ae:	pop    ds
  4233af:	inc    ebx
  4233b0:	dec    esp
  4233b1:	bound  ebp,QWORD PTR [ebx-0x48]
  4233b4:	sti    
  4233b5:	loopne 0x423349
  4233b7:	adc    dl,dh
  4233b9:	cmp    al,0xba
  4233bb:	pop    ebx
  4233bc:	push   ecx
  4233bd:	rcl    edi,cl
  4233bf:	je     0x423363
  4233c1:	or     al,0xc
  4233c3:	popf   
  4233c4:	enter  0xeb02,0x1a
  4233c8:	(bad)  
  4233c9:	jmp    FWORD PTR [esi]
  4233cb:	js     0x423351
  4233cd:	mov    esi,0x4ca9c64c
  4233d2:	jmp    0x9c8521e6
  4233d7:	xor    al,0x11
  4233d9:	mov    ah,0x9b
  4233db:	dec    esp
  4233dc:	out    dx,eax
  4233dd:	pusha  
  4233de:	arpl   WORD PTR [esi],sp
  4233e0:	pusha  
  4233e1:	(bad)  [ecx-0x1d2941c3]
  4233e7:	pop    ebp
  4233e8:	pop    edi
  4233e9:	es push esi
  4233eb:	adc    esp,ecx
  4233ed:	out    0x25,eax
  4233ef:	jle    0x4233f5
  4233f1:	xlat   BYTE PTR ds:[ebx]
  4233f2:	leave  
  4233f3:	imul   ebp
  4233f5:	adc    ebp,DWORD PTR [eax-0x56ff1013]
  4233fb:	bnd je 0x4233cf
  4233fe:	clc    
  4233ff:	popf   
  423400:	fcmovnb st,st(6)
  423402:	nop
  423403:	cld    
  423404:	or     edi,esp
  423406:	stc    
  423407:	cwde   
  423408:	dec    ecx
  423409:	stos   BYTE PTR es:[edi],al
  42340a:	aaa    
  42340b:	pop    edi
  42340c:	sbb    al,0xc1
  42340e:	fild   WORD PTR [esi-0x9]
  423411:	xor    bh,BYTE PTR [ecx-0x490f4238]
  423417:	dec    edi
  423418:	xchg   edx,eax
  423419:	ret    
  42341a:	xchg   edx,eax
  42341b:	lahf   
  42341c:	int    0x9b
  42341e:	xor    eax,0x79bda3ee
  423423:	(bad)  
  423424:	stc    
  423425:	mov    dh,0x34
  423427:	out    0x38,al
  423429:	hlt    
  42342a:	jne    0x423467
  42342c:	shr    DWORD PTR [esi+0x65ce3ae4],cl
  423432:	ficomp DWORD PTR [edx]
  423434:	dec    edx
  423435:	loope  0x423468
  423437:	add    al,0xb5
  423439:	outs   dx,BYTE PTR ds:[esi]
  42343a:	cwde   
  42343b:	bound  esp,QWORD PTR [esi]
  42343d:	mov    al,ds:0x11a7fc6e
  423442:	cs pop edx
  423444:	lds    edi,FWORD PTR [ebx+0x35]
  423447:	clc    
  423448:	leave  
  423449:	icebp  
  42344a:	cmp    ecx,DWORD PTR ss:[esi-0xf]
  42344e:	(bad)  
  42344f:	dec    BYTE PTR [ecx+0x46]
  423452:	clc    
  423453:	mov    ecx,0xe72b316b
  423458:	in     al,dx
  423459:	mov    dh,0x2
  42345b:	sbb    edx,DWORD PTR [eax+0x55574330]
  423461:	stos   BYTE PTR es:[edi],al
  423462:	nop
  423463:	mov    esp,0x9808e9d1
  423468:	xchg   ecx,eax
  423469:	pop    edi
  42346a:	sbb    eax,0xc05f5c53
  42346f:	mov    cs,WORD PTR [esi]
  423471:	jp     0x42341f
  423473:	xchg   esp,eax
  423474:	ret    
  423475:	mov    al,ds:0x845856ef
  42347a:	mov    esp,DWORD PTR [edx]
  42347c:	pop    ecx
  42347d:	and    eax,0xbbb92887
  423482:	mov    esi,0xdbf52437
  423487:	scas   al,BYTE PTR es:[edi]
  423488:	fs clc 
  42348a:	mov    WORD PTR [esi+0x48],es
  42348d:	pop    edx
  42348e:	std    
  42348f:	inc    ecx
  423490:	out    dx,eax
  423491:	mov    esi,fs
  423493:	cmp    cl,ah
  423495:	mov    cl,0xee
  423497:	sbb    bl,ch
  423499:	fnstcw WORD PTR [edi]
  42349b:	addr16 das 
  42349d:	gs popf 
  42349f:	(bad)  
  4234a0:	cmp    eax,0x149a8d96
  4234a5:	je     0x42349e
  4234a7:	jmp    0xca10814b
  4234ac:	mov    eax,ds:0x3aba5928
  4234b1:	(bad)  
  4234b2:	nop
  4234b3:	adc    BYTE PTR [ecx+0x199698eb],0x2f
  4234ba:	dec    esp
  4234bb:	out    0x18,eax
  4234bd:	ror    DWORD PTR [ecx-0x60f5f724],cl
  4234c3:	(bad)  
  4234c4:	das    
  4234c5:	(bad)  
  4234c6:	adc    eax,DWORD PTR ds:0xb0cf5d51
  4234cc:	jne    0x4234da
  4234ce:	xlat   BYTE PTR ds:[ebx]
  4234cf:	mov    ebp,0xe67ffd95
  4234d4:	jb     0x423492
  4234d6:	out    dx,eax
  4234d7:	int3   
  4234d8:	mov    bh,0x78
  4234da:	in     al,0x2e
  4234dc:	and    al,0x53
  4234de:	mov    ch,0x61
  4234e0:	xor    eax,0xf75637ef
  4234e5:	lea    ecx,[ebp+edi*1-0x39]
  4234e9:	push   ds
  4234ea:	pop    esp
  4234eb:	sbb    al,BYTE PTR [eax+0x5b752e36]
  4234f1:	push   cx
  4234f3:	leave  
  4234f4:	jae    0x42355e
  4234f6:	xchg   edx,eax
  4234f7:	call   0x24440790
  4234fc:	sbb    al,BYTE PTR [ebx+ecx*8]
  4234ff:	cmp    dh,BYTE PTR [ebp+0x1b]
  423502:	data16 repz or al,0x5c
  423506:	ret    
  423507:	cs mov ecx,0xcb222178
  42350d:	inc    edi
  42350e:	xor    bp,di
  423511:	inc    edx
  423512:	cmp    cl,BYTE PTR [edi]
  423514:	pop    ebx
  423515:	inc    esp
  423516:	arpl   WORD PTR ds:0xae0c69a3,sp
  42351c:	dec    edi
  42351d:	add    al,0x19
  42351f:	xor    eax,0x9ab20ed4
  423524:	add    esp,DWORD PTR [edi+0xbf1c26c]
  42352a:	mov    bl,BYTE PTR [edx-0x18275719]
  423530:	loope  0x423573
  423532:	sub    al,0x83
  423534:	xchg   bp,ax
  423536:	pushf  
  423537:	ja     0x423532
  423539:	sbb    edx,esp
  42353b:	lods   eax,DWORD PTR ds:[esi]
  42353c:	push   eax
  42353d:	test   eax,0xa96b2e3c
  423542:	and    ch,al
  423544:	(bad)  
  423545:	dec    ebp
  423546:	inc    eax
  423547:	imul   ebx,DWORD PTR [eax-0x7d],0x4f
  42354b:	cmp    bh,BYTE PTR [ebp-0x7bc11997]
  423551:	cmp    ebp,DWORD PTR [ecx]
  423553:	fucomip st,st(1)
  423555:	xchg   esp,eax
  423556:	xchg   BYTE PTR [ebx-0x1f],dl
  423559:	lods   eax,DWORD PTR ds:[esi]
  42355a:	outs   dx,DWORD PTR ds:[esi]
  42355b:	mov    ch,0xd4
  42355d:	mov    bh,0x8c
  42355f:	shl    DWORD PTR [esi+0x52],1
  423562:	push   es
  423563:	push   ds
  423564:	xchg   DWORD PTR [ecx],ebx
  423566:	or     al,0x4b
  423568:	push   edi
  423569:	mov    esp,0x286c9fd5
  42356e:	push   esp
  42356f:	(bad)  
  423570:	lods   al,BYTE PTR ss:[esi]
  423572:	sti    
  423573:	std    
  423574:	xchg   edi,eax
  423575:	ror    BYTE PTR [edi+eiz*1],cl
  423578:	xor    ebp,DWORD PTR [esi+0x22]
  42357b:	mov    eax,fs:0x8a47fc47
  423581:	or     al,0x51
  423583:	shl    bl,1
  423585:	test   BYTE PTR [esi],bh
  423587:	or     ecx,DWORD PTR [esi]
  423589:	pop    eax
  42358a:	and    dh,BYTE PTR [esi]
  42358c:	push   edi
  42358d:	push   edi
  42358e:	inc    esp
  42358f:	fucom  st(0)
  423591:	mov    edx,0xe9dfe1e7
  423596:	(bad)  
  423597:	(bad)  
  423598:	mov    ds:0xb2483dd,al
  42359d:	arpl   WORD PTR [ebx-0x66],ax
  4235a0:	sub    DWORD PTR [ebx+0x57a7de7e],esp
  4235a6:	xlat   BYTE PTR ds:[ebx]
  4235a7:	cmc    
  4235a8:	rol    bh,cl
  4235aa:	sar    ebx,0xfd
  4235ad:	pop    ss
  4235ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235af:	in     eax,0xcb
  4235b1:	div    DWORD PTR [edx+0x39]
  4235b4:	in     al,0xdb
  4235b6:	outs   dx,DWORD PTR ds:[esi]
  4235b7:	cld    
  4235b8:	adc    ch,BYTE PTR [ecx-0x43]
  4235bb:	xchg   DWORD PTR [esi+0x408ec978],edx
  4235c1:	pop    es
  4235c2:	sub    DWORD PTR [edx-0x906db8d],eax
  4235c8:	and    esi,DWORD PTR [eax+0x3643d294]
  4235ce:	repz and eax,0x3b680be9
  4235d4:	add    BYTE PTR [eax],ch
  4235d6:	add    DWORD PTR [ebx-0x71ce881a],esi
  4235dc:	int    0x90
  4235de:	(bad)  
  4235df:	xchg   esp,eax
  4235e0:	pop    eax
  4235e1:	sbb    al,0x2b
  4235e3:	xor    ebp,edi
  4235e5:	call   0x267aefbe
  4235ea:	push   cs
  4235eb:	aas    
  4235ec:	sub    eax,0xf5731170
  4235f1:	push   eax
  4235f2:	dec    ecx
  4235f3:	add    ecx,esp
  4235f5:	lods   al,BYTE PTR ds:[esi]
  4235f6:	mov    ds:0x44cc8f9a,eax
  4235fb:	into   
  4235fc:	inc    edi
  4235fd:	cs data16 loop 0x423619
  423601:	sub    BYTE PTR gs:[edi],ah
  423604:	mov    esp,0xd5d5f444
  423609:	mov    esi,0x1fbad37a
  42360e:	mov    al,0x23
  423610:	or     esi,edi
  423612:	(bad)  
  423613:	bound  edx,QWORD PTR [eax-0x20]
  423616:	dec    eax
  423617:	std    
  423618:	push   cs
  423619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42361a:	mov    bh,0xec
  42361c:	pop    ss
  42361d:	leave  
  42361e:	mov    ebx,0xfb1bb5a3
  423623:	or     BYTE PTR [esi],bl
  423625:	or     bh,BYTE PTR [edx]
  423627:	ret    
  423628:	pop    eax
  423629:	cmp    eax,0xd68c6efa
  42362e:	or     DWORD PTR [ebp+0x58f6ca9d],ebp
  423634:	ins    BYTE PTR es:[edi],dx
  423635:	lods   eax,DWORD PTR ds:[esi]
  423636:	jmp    0x42369d
  423638:	and    DWORD PTR [esi],0x74
  42363b:	add    BYTE PTR [eax+0x197008d],bh
  423641:	cmp    eax,0x39e465fb
  423646:	das    
  423647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423648:	(bad)  
  42364a:	in     al,0xfc
  42364c:	sbb    dh,BYTE PTR [ebp+0x5e65f319]
  423652:	inc    edx
  423653:	test   DWORD PTR [ebx-0x7b],esi
  423656:	xchg   ecx,eax
  423657:	pop    ds
  423658:	adc    DWORD PTR [edx+ebp*4],ebp
  42365b:	dec    ecx
  42365c:	and    al,0xb9
  42365e:	cmp    al,0xaf
  423660:	pop    eax
  423661:	lahf   
  423662:	fbstp  TBYTE PTR [ecx+ebx*2+0x65]
  423666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423667:	popa   
  423668:	jb     0x42367f
  42366a:	stc    
  42366b:	pusha  
  42366c:	outs   dx,BYTE PTR ds:[esi]
  42366d:	mov    ds:0x878eb411,eax
  423672:	std    
  423673:	push   ebx
  423674:	xchg   esp,eax
  423675:	nop
  423676:	inc    ecx
  423677:	pushw  ss
  423679:	or     al,ch
  42367b:	cs push ebp
  42367d:	cwde   
  42367e:	adc    DWORD PTR [ecx-0x7f],esp
  423681:	out    dx,al
  423682:	jmp    FWORD PTR [esi+0x7f]
  423685:	dec    ebp
  423686:	and    bl,BYTE PTR es:[eax-0x5b]
  42368a:	push   edi
  42368b:	cmc    
  42368c:	pop    ebp
  42368d:	push   es
  42368e:	pop    ss
  42368f:	push   0xfffffffd
  423691:	jnp    0x4236bf
  423693:	push   es
  423694:	pop    ebx
  423695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423696:	mov    esi,0x3a45be7
  42369b:	mov    DWORD PTR [esi+edx*2-0xa],esi
  42369f:	loop   0x423705
  4236a1:	mov    bl,0x26
  4236a3:	les    esi,FWORD PTR [eax]
  4236a5:	add    eax,0xf182f156
  4236aa:	xor    eax,0xc5650466
  4236af:	stos   BYTE PTR es:[edi],al
  4236b0:	mov    esp,0xc7cacf68
  4236b5:	loop   0x423712
  4236b7:	xchg   esp,eax
  4236b8:	outs   dx,BYTE PTR ds:[esi]
  4236b9:	mov    ebp,0x5616bdf4
  4236be:	xchg   edx,eax
  4236bf:	dec    eax
  4236c0:	xor    al,0x9
  4236c2:	lds    esp,FWORD PTR [edx]
  4236c4:	ds daa 
  4236c6:	mov    ds:0xf677a507,al
  4236cb:	mov    ecx,DWORD PTR [edi+0x48b2e6c9]
  4236d1:	aaa    
  4236d2:	ret    
  4236d3:	cs xor al,0xef
  4236d6:	xchg   ecx,eax
  4236d7:	imul   esi,DWORD PTR [esi],0x8622e112
  4236dd:	cmp    BYTE PTR [edx],ch
  4236df:	lea    eax,[esi+0x4a389764]
  4236e5:	aad    0x6b
  4236e7:	or     esi,DWORD PTR [ebx-0x33]
  4236ea:	dec    ebx
  4236eb:	or     dl,BYTE PTR [ebx+edx*1+0x3b]
  4236ef:	clc    
  4236f0:	outs   dx,DWORD PTR ds:[esi]
  4236f1:	fwait
  4236f2:	ins    BYTE PTR es:[edi],dx
  4236f3:	push   esi
  4236f4:	sbb    al,ah
  4236f6:	aaa    
  4236f7:	arpl   WORD PTR [edx+0x1],bx
  4236fa:	add    BYTE PTR ds:0x619312ad,ah
  423700:	push   eax
  423701:	sbb    ah,bh
  423703:	mov    esi,fs
  423705:	fmulp  st(4),st
  423707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423708:	mov    ah,0x51
  42370a:	repnz mov cl,0x1b
  42370d:	ja     0x423758
  42370f:	(bad)  
  423710:	in     al,0x8b
  423712:	jo     0x469e9986
  423718:	mov    ebp,0x33ff72bb
  42371d:	and    bh,BYTE PTR ds:0xfea6150a
  423723:	or     al,0x8b
  423725:	mov    gs,WORD PTR [edx-0x13408a41]
  42372b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42372c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42372d:	ret    
  42372e:	out    dx,eax
  42372f:	arpl   di,di
  423731:	(bad)  
  423734:	test   eax,0xc280c628
  423739:	mov    edi,0x359c7e8c
  42373e:	jge    0x42376a
  423740:	fnsave [ebx+0x7c]
  423743:	xor    DWORD PTR [esi-0x4887399f],0xffffff92
  42374a:	pop    edi
  42374b:	push   esi
  42374c:	dec    edx
  42374d:	je     0x423734
  42374f:	mov    bh,0xfc
  423751:	cmp    al,0xd
  423753:	arpl   dx,si
  423755:	(bad)  
  423756:	dec    ecx
  423757:	cmp    esi,DWORD PTR [edx]
  423759:	in     al,0xcd
  42375b:	inc    ebx
  42375c:	fxch   st(1)
  42375e:	out    dx,eax
  42375f:	fldenv [ebp-0x7f44080d]
  423765:	cwde   
  423766:	mov    bl,0x22
  423768:	fild   QWORD PTR [edx]
  42376a:	or     al,0x9b
  42376c:	mov    edx,0xdac7af16
  423771:	xchg   DWORD PTR [esi+ebp*8],esp
  423774:	and    eax,0xd0841d15
  423779:	sbb    BYTE PTR [edi],0x82
  42377c:	(bad)  
  42377e:	add    BYTE PTR [ebx],al
  423780:	fmul   DWORD PTR [ebp-0x627f3b9a]
  423786:	pop    ds
  423787:	pop    eax
  423788:	std    
  423789:	ja     0x423778
  42378b:	imul   esi,eax,0x56
  42378e:	pop    esp
  42378f:	push   esp
  423790:	repz aam 0x81
  423793:	into   
  423794:	into   
  423795:	retf   0x2b27
  423798:	mov    ecx,0xbe58730f
  42379d:	inc    dx
  42379f:	pusha  
  4237a0:	lds    esi,FWORD PTR [eax]
  4237a2:	sub    bh,BYTE PTR [edi]
  4237a4:	inc    edx
  4237a5:	adc    esp,DWORD PTR [eax-0x74]
  4237a8:	imul   ebp,DWORD PTR [edx+ebp*8+0xb9c6691],0x7b
  4237b0:	adc    BYTE PTR [ecx-0x56],dl
  4237b3:	aas    
  4237b4:	adc    al,0xb4
  4237b6:	jne    0x4237b0
  4237b8:	icebp  
  4237b9:	sub    cl,BYTE PTR [ebx+0x424fd8a1]
  4237bf:	sbb    al,0x91
  4237c1:	nop
  4237c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237c3:	test   al,0xc0
  4237c5:	(bad)  
  4237c6:	aam    0xc7
  4237c8:	aas    
  4237c9:	out    0x6d,eax
  4237cb:	sbb    DWORD PTR [ecx+0x6a],esp
  4237ce:	and    ah,BYTE PTR [edx]
  4237d0:	jmp    0x42380d
  4237d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d3:	lock cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4237d6:	sub    BYTE PTR [ebp+0x42],0x78
  4237da:	mov    bh,BYTE PTR [eax+edi*4+0x2c]
  4237de:	pusha  
  4237df:	or     DWORD PTR [edi+0x4a],0x7213fcde
  4237e6:	call   0x3efc:0x2e1b348a
  4237ed:	stos   BYTE PTR es:[edi],al
  4237ee:	mov    eax,ds:0xcd13b744
  4237f3:	push   ebx
  4237f4:	mov    ah,0xb4
  4237f6:	bnd jp 0x4237f2
  4237f9:	dec    ebp
  4237fa:	mov    esi,0x7083d544
  4237ff:	xchg   edx,eax
  423800:	hlt    
  423801:	xchg   ebx,eax
  423802:	xchg   ebx,eax
  423803:	not    BYTE PTR [ebx+0x1770daa2]
  423809:	shl    BYTE PTR [ecx+eax*4],1
  42380c:	fsubr  QWORD PTR [edi-0x5b]
  42380f:	add    ebp,ecx
  423811:	xchg   ebp,eax
  423812:	and    edx,DWORD PTR gs:[edi-0x13a22856]
  423819:	daa    
  42381a:	and    ebx,DWORD PTR [ebx]
  42381c:	out    0x98,al
  42381e:	xlat   BYTE PTR ds:[ebx]
  42381f:	inc    edi
  423820:	xor    esi,DWORD PTR [ecx+0x57965e51]
  423826:	sub    eax,0xa5e7192b
  42382b:	hlt    
  42382c:	adc    esi,edx
  42382e:	xchg   esi,eax
  42382f:	psllw  mm5,QWORD PTR [edx]
  423832:	mov    ebx,0x857d9c61
  423837:	fincstp 
  423839:	in     al,0x44
  42383b:	push   cs
  42383c:	mov    ebx,0xbdb08092
  423841:	adc    al,0x61
  423843:	sub    eax,0x4a93c3ea
  423848:	dec    ebp
  423849:	int3   
  42384a:	push   edx
  42384b:	cmp    BYTE PTR [esi+0x713f36a0],cl
  423851:	test   eax,0x8b2b3674
  423856:	fisub  WORD PTR [edx+ebx*2]
  423859:	ror    ch,1
  42385b:	aam    0x13
  42385d:	push   eax
  42385e:	or     BYTE PTR [ecx+0x94377e8],bh
  423864:	leave  
  423865:	inc    edx
  423866:	(bad)  
  423867:	dec    DWORD PTR [esi+0x31]
  42386a:	sbb    al,0xe5
  42386c:	jmp    0xd5af:0x2f28fd12
  423873:	cmp    DWORD PTR [ecx-0x1e1703e8],ebp
  423879:	pop    esi
  42387a:	loopne 0x423870
  42387c:	push   esi
  42387d:	jmp    0xead8dfd9
  423882:	cwde   
  423883:	sbb    DWORD PTR [ecx+0x154058b4],edi
  423889:	jns    0x4238b3
  42388b:	mov    bl,BYTE PTR [ebp+0x58875648]
  423891:	cmp    eax,0x47990d16
  423896:	repz (bad) 
  423898:	shl    dl,cl
  42389a:	xor    cl,cl
  42389c:	out    0x95,al
  42389e:	xchg   BYTE PTR [edi],al
  4238a0:	jecxz  0x42382f
  4238a2:	stc    
  4238a3:	je     0x42384b
  4238a5:	pushf  
  4238a6:	push   edx
  4238a7:	mov    ah,0x26
  4238a9:	mov    BYTE PTR [edi],ah
  4238ab:	dec    edi
  4238ac:	frstor [bx+si-0x29]
  4238b0:	or     edx,ebp
  4238b2:	call   0x15b:0x28c6fd2
  4238b9:	out    dx,al
  4238ba:	cmp    bh,BYTE PTR [eax+0x45]
  4238bd:	gs test eax,0x1ce79336
  4238c3:	je     0x4238ba
  4238c5:	cmp    al,0xb8
  4238c7:	imul   edi,DWORD PTR [ebp+0x5d],0x8b1c724a
  4238ce:	add    eax,0xcc8174f1
  4238d3:	(bad)  
  4238d5:	cmp    DWORD PTR [ebp+0x37],0xc296531f
  4238dc:	cmp    eax,0x158a2096
  4238e1:	neg    dh
  4238e3:	and    dl,BYTE PTR [ebx-0x9]
  4238e6:	jnp    0x42394f
  4238e8:	arpl   WORD PTR [ecx],si
  4238ea:	pop    edi
  4238eb:	adc    eax,0x28aa3f65
  4238f0:	mov    ds:0xe1de46ea,eax
  4238f5:	in     al,0xb0
  4238f7:	dec    esp
  4238f8:	inc    esp
  4238f9:	jmp    0x423956
  4238fb:	inc    eax
  4238fc:	jmp    0xad67bf68
  423901:	inc    esp
  423902:	mov    DWORD PTR es:[edx-0x743bd0e0],ebp
  423909:	mov    bl,0x81
  42390b:	loop   0x423893
  42390d:	mov    cl,0x57
  42390f:	ror    BYTE PTR [ebx+edi*8],1
  423912:	rcl    BYTE PTR [esi],0xb8
  423915:	lods   al,BYTE PTR ds:[esi]
  423916:	out    0x9a,al
  423918:	clc    
  423919:	inc    esp
  42391a:	ror    BYTE PTR [edi-0x47],cl
  42391d:	jp     0x423937
  42391f:	mov    ebx,0x1e253038
  423924:	adc    BYTE PTR [edi+0x20155cd9],bh
  42392a:	das    
  42392b:	mov    DWORD PTR [ebx-0x56],ebp
  42392e:	loopne 0x42399f
  423930:	mov    al,ds:0x78e4c2a4
  423935:	inc    eax
  423936:	fwait
  423937:	cmp    eax,0x78083392
  42393c:	mov    esi,0x62556055
  423941:	mov    cl,0xdb
  423943:	lods   al,BYTE PTR ds:[esi]
  423944:	xor    cl,BYTE PTR [esi]
  423946:	mov    ecx,0x9cb7972b
  42394b:	mov    ah,BYTE PTR [edi]
  42394d:	push   ebx
  42394e:	mov    bl,0x4b
  423950:	cwde   
  423951:	xlat   BYTE PTR ds:[ebx]
  423952:	inc    ecx
  423953:	jmp    0xd8dbbafe
  423958:	pop    eax
  423959:	xchg   esi,eax
  42395a:	jmp    0x423926
  42395c:	fld    QWORD PTR [edi+0x5001bdd1]
  423962:	call   esi
  423964:	clc    
  423965:	fnstsw WORD PTR [ebx]
  423967:	inc    ebp
  423968:	pushf  
  423969:	mov    gs,WORD PTR [edx]
  42396b:	pop    es
  42396c:	push   0xfffffffc
  42396e:	hlt    
  42396f:	popf   
  423970:	or     DWORD PTR [edx+0x22],edx
  423973:	fstp   st(4)
  423975:	add    ch,dl
  423977:	test   BYTE PTR [ecx-0x7e6d49be],0x1a
  42397e:	mov    edx,0x41a5ce03
  423983:	fs dec ebp
  423985:	mov    dl,0xd3
  423987:	aam    0xdd
  423989:	enter  0x58ae,0xa4
  42398d:	xor    al,0x52
  42398f:	cmp    al,BYTE PTR [esp+eax*8-0x7824f3af]
  423996:	mov    fs,esp
  423998:	mov    ebx,edx
  42399a:	add    DWORD PTR [ebx-0xd13c31f],0x32
  4239a1:	mov    edi,0x52485d9f
  4239a6:	fstp   st(0)
  4239a8:	fbstp  TBYTE PTR [ecx+0x2b09981f]
  4239ae:	je     0x423a0b
  4239b0:	lock outs dx,BYTE PTR ds:[esi]
  4239b2:	xor    al,0xa4
  4239b4:	inc    esi
  4239b5:	mov    ch,0x73
  4239b7:	aam    0x96
  4239b9:	mov    bl,0xc6
  4239bb:	rcr    BYTE PTR [ebx],1
  4239bd:	push   eax
  4239be:	cmp    al,0xff
  4239c0:	test   BYTE PTR fs:[ebx-0x2c],bl
  4239c4:	lods   al,BYTE PTR ds:[esi]
  4239c5:	in     eax,dx
  4239c6:	rcl    DWORD PTR [eax-0x1037ea16],1
  4239cc:	sbb    DWORD PTR [ebp-0x710f8262],0x3550c5be
  4239d6:	mov    ch,0xa6
  4239d8:	mov    al,0xc0
  4239da:	call   edi
  4239dc:	pop    ebx
  4239dd:	push   ecx
  4239de:	stc    
  4239df:	push   0x836bd223
  4239e4:	dec    ebp
  4239e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239e6:	fiadd  DWORD PTR [esi-0x77]
  4239e9:	in     eax,dx
  4239ea:	adc    ch,dl
  4239ec:	cmp    BYTE PTR ds:0x868d195c,0xdd
  4239f3:	dec    esp
  4239f4:	mov    bl,0x6c
  4239f6:	mov    ?,WORD PTR [esi-0x50039093]
  4239fc:	push   0x29
  4239fe:	xor    ebp,DWORD PTR [edi]
  423a00:	push   ds
  423a01:	xchg   ecx,eax
  423a02:	mov    bl,0xab
  423a04:	cs gs leave 
  423a07:	add    bl,0x59
  423a0a:	add    ch,BYTE PTR [esi-0x7f3412a4]
  423a10:	ss pushf 
  423a12:	lahf   
  423a13:	xlat   BYTE PTR ds:[ebx]
  423a14:	aam    0x83
  423a16:	mov    al,0xfc
  423a18:	xchg   esi,eax
  423a19:	stc    
  423a1a:	sub    al,0x23
  423a1c:	jecxz  0x423a39
  423a1e:	ret    0x19b7
  423a21:	lahf   
  423a22:	inc    eax
  423a23:	sbb    cl,ah
  423a25:	push   ecx
  423a26:	in     eax,0x27
  423a28:	mov    esi,0x80cf947e
  423a2d:	add    ebx,ecx
  423a2f:	dec    eax
  423a30:	jle    0x423a78
  423a32:	dec    esi
  423a33:	push   es
  423a34:	inc    eax
  423a35:	pop    ebx
  423a36:	xlat   BYTE PTR ds:[ebx]
  423a37:	in     eax,0x17
  423a39:	mov    eax,ds:0x3339a847
  423a3e:	xor    eax,0x559c09d7
  423a43:	jl     0x4239d0
  423a45:	xor    al,BYTE PTR [eax]
  423a47:	lods   eax,DWORD PTR ds:[esi]
  423a48:	mov    dh,BYTE PTR [eax]
  423a4a:	xor    esp,DWORD PTR [edx]
  423a4c:	sbb    DWORD PTR [ecx+0x9b5b143],eax
  423a52:	loop   0x423a0f
  423a54:	inc    edi
  423a55:	cs and al,ch
  423a58:	sub    eax,0x196b8c3c
  423a5d:	pop    ss
  423a5e:	pushf  
  423a5f:	retf   0x49d7
  423a62:	sub    edx,DWORD PTR [eax+0x20]
  423a65:	xor    BYTE PTR [eax+0x51bcb9ed],dh
  423a6b:	aam    0xbf
  423a6d:	scas   al,BYTE PTR es:[edi]
  423a6e:	sahf   
  423a6f:	xchg   ebp,eax
  423a70:	mov    al,0xea
  423a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a73:	sbb    eax,0x7b7ac134
  423a78:	and    DWORD PTR [ecx+0x47],0xf5662654
  423a7f:	ins    BYTE PTR es:[edi],dx
  423a80:	int3   
  423a81:	sbb    eax,0xa76f1017
  423a86:	and    al,0x11
  423a88:	xor    al,bl
  423a8a:	mov    al,0xe1
  423a8c:	jmp    ebx
  423a8e:	inc    ebp
  423a8f:	mov    DWORD PTR [edi],ebx
  423a91:	aad    0x15
  423a93:	pusha  
  423a94:	cmc    
  423a95:	push   ss
  423a96:	retf   
  423a97:	repz mov ah,0x87
  423a9a:	cdq    
  423a9b:	shr    bh,cl
  423a9d:	je     0x423b19
  423a9f:	sahf   
  423aa0:	scas   al,BYTE PTR es:[edi]
  423aa1:	push   ebp
  423aa2:	and    esi,ebx
  423aa4:	cmp    DWORD PTR [ecx-0x54],esi
  423aa7:	add    dh,cl
  423aa9:	call   0x2d2:0x63b3c35
  423ab0:	push   0xc29815fc
  423ab5:	jne    0x423ab2
  423ab7:	push   edi
  423ab8:	cld    
  423ab9:	mov    ah,0x7f
  423abb:	push   0xffffff85
  423abd:	mov    ch,0xdb
  423abf:	test   eax,0xa38f4a6c
  423ac4:	adc    eax,0xf571f5b1
  423ac9:	ror    BYTE PTR [ecx-0x699062ab],1
  423acf:	mov    ecx,0xdfe9d4af
  423ad4:	jbe    0x423aa1
  423ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ad7:	retf   
  423ad8:	iret   
  423ad9:	xor    dh,al
  423adb:	out    0x5c,eax
  423add:	(bad)  
  423ade:	adc    al,0xad
  423ae0:	mov    eax,0x8b7877a
  423ae5:	adc    DWORD PTR [esi],0xf90b6d8e
  423aeb:	mov    ch,dh
  423aed:	and    bl,ch
  423aef:	rcr    DWORD PTR [eax+0x2a0964ad],0xac
  423af6:	push   ebx
  423af7:	jmp    FWORD PTR [edi-0x466e1a19]
  423afd:	mov    bh,0xac
  423aff:	and    dh,BYTE PTR [ebx-0x3c]
  423b02:	xchg   edx,eax
  423b03:	ins    DWORD PTR es:[edi],dx
  423b04:	mov    bh,0xbc
  423b06:	sar    al,1
  423b08:	rcl    BYTE PTR [edx],0x1b
  423b0b:	lods   eax,DWORD PTR ds:[esi]
  423b0c:	jnp    0x423b2a
  423b0e:	or     DWORD PTR [ebx+0x26],ebx
  423b11:	cmp    BYTE PTR [edx+0x1062763b],ah
  423b17:	fistp  DWORD PTR [edx+0xda94672]
  423b1d:	fdiv   DWORD PTR [edx]
  423b1f:	mov    WORD PTR [esi+edx*2],?
  423b22:	imul   eax,ebp,0xffffff9d
  423b25:	jle    0x423b2f
  423b27:	pop    ebp
  423b28:	sub    ebp,DWORD PTR [edx+edx*2]
  423b2b:	pop    esp
  423b2c:	push   ss
  423b2d:	mov    cs,edi
  423b2f:	fldcw  WORD PTR [ebx]
  423b31:	jmp    0xa2077e1
  423b36:	test   BYTE PTR [edx-0x13],al
  423b39:	retf   0x511b
  423b3c:	mov    al,0xa6
  423b3e:	cmp    al,0xec
  423b40:	daa    
  423b41:	iret   
  423b42:	ins    BYTE PTR es:[edi],dx
  423b43:	mov    ds:0xe47e0490,eax
  423b48:	xlat   BYTE PTR ds:[ebx]
  423b49:	pusha  
  423b4a:	sbb    al,0xce
  423b4c:	xor    ch,ah
  423b4e:	inc    ecx
  423b4f:	push   0x64
  423b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b52:	je     0x423b53
  423b54:	repz sub dh,al
  423b57:	fadd   DWORD PTR [edi+0x47e5b10f]
  423b5d:	dec    esi
  423b5e:	enter  0x9b08,0x59
  423b62:	push   esi
  423b63:	bound  edx,QWORD PTR [eax]
  423b65:	sbb    DWORD PTR [edx-0x7f],ecx
  423b68:	test   al,0x5e
  423b6a:	je     0x423b62
  423b6c:	lds    eax,FWORD PTR [ebx-0x7d]
  423b6f:	jne    0x423bda
  423b71:	imul   esi,DWORD PTR [eax-0x4cce3c54],0xbd2a5d82
  423b7b:	sbb    eax,DWORD PTR [ebp+0x3660b1ba]
  423b81:	mov    DWORD PTR [edi],ecx
  423b83:	push   edi
  423b84:	cmp    cl,ah
  423b86:	(bad)  
  423b87:	jle    0x423b11
  423b89:	xchg   esp,eax
  423b8a:	jmp    0x423bbf
  423b8c:	inc    ecx
  423b8d:	adc    eax,DWORD PTR [edi+ebx*2]
  423b90:	mov    ecx,0x73eb2787
  423b95:	jne    0x423bd8
  423b97:	test   al,0xeb
  423b99:	jb     0x423c05
  423b9b:	test   DWORD PTR [esi+edi*8+0x5e],edx
  423b9f:	jo     0x423b96
  423ba1:	pop    esp
  423ba2:	cmp    eax,0xe213ff24
  423ba7:	xchg   esp,eax
  423ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ba9:	xor    al,0x3a
  423bab:	sub    dl,BYTE PTR [esi+ecx*4+0x3e]
  423baf:	fsubr  QWORD PTR [esi+0x38]
  423bb2:	dec    ebx
  423bb3:	pusha  
  423bb4:	addr16 mov ds:0xcaba,eax
  423bb8:	or     al,0xd8
  423bba:	xor    eax,DWORD PTR [edx]
  423bbc:	xor    BYTE PTR [esi],0x4d
  423bbf:	(bad)  
  423bc0:	gs jp  0x423bad
  423bc3:	adc    DWORD PTR [edx],0xe8271fca
  423bc9:	mov    ch,0x5b
  423bcb:	adc    dh,BYTE PTR [ebp+0x168d7b15]
  423bd1:	cwde   
  423bd2:	xor    BYTE PTR ds:0x2dc0dc4d,bl
  423bd8:	or     eax,edi
  423bda:	jmp    0x423bf1
  423bdc:	ins    DWORD PTR es:[edi],dx
  423bdd:	xor    edi,edx
  423bdf:	sbb    ch,bh
  423be1:	add    dh,BYTE PTR [edi]
  423be3:	xor    BYTE PTR [ebx+0x39],bl
  423be6:	mov    BYTE PTR [esi+edx*1-0x1c8d9063],ah
  423bed:	sbb    ebx,DWORD PTR [edx-0x56]
  423bf0:	add    edx,DWORD PTR [esi]
  423bf2:	fs out 0x79,al
  423bf5:	jns    0x423bee
  423bf7:	add    DWORD PTR [ebp+0x23814c50],ecx
  423bfd:	add    DWORD PTR [ebx+0x46c2a731],ebx
  423c03:	lds    ebx,FWORD PTR [esi-0x705db5f5]
  423c09:	or     BYTE PTR [edi],ah
  423c0b:	add    edi,eax
  423c0d:	dec    ebp
  423c0e:	imul   esi,ebp,0xe845c4ab
  423c14:	int    0x6
  423c16:	mov    esi,0x44bacf59
  423c1b:	add    eax,0x7a1fd55f
  423c20:	(bad)  
  423c22:	xor    ebp,DWORD PTR [esi]
  423c24:	sti    
  423c25:	xchg   esi,eax
  423c26:	cs cdq 
  423c28:	and    esi,DWORD PTR [ecx]
  423c2a:	push   es
  423c2b:	(bad)  
  423c2c:	mov    dh,BYTE PTR [edx-0x2d]
  423c2f:	mov    bl,0x82
  423c31:	je     0x423bc1
  423c33:	pop    ss
  423c34:	mov    ds:0x9a43a612,eax
  423c39:	mov    al,0xb7
  423c3b:	sub    eax,0x80e06474
  423c40:	ss xchg ebx,eax
  423c42:	lods   al,BYTE PTR ds:[esi]
  423c43:	cs ja  0x423bdc
  423c46:	mov    esp,0xfaf26bca
  423c4b:	inc    esp
  423c4c:	fsub   QWORD PTR [ebp-0x3f]
  423c4f:	clc    
  423c50:	sbb    DWORD PTR [esi],edi
  423c52:	mov    WORD PTR [eax-0x2b],es
  423c55:	dec    ecx
  423c56:	lods   eax,DWORD PTR ds:[esi]
  423c57:	scas   eax,DWORD PTR es:[edi]
  423c58:	rol    BYTE PTR [ebx],0x25
  423c5b:	jno    0x423c85
  423c5d:	push   0x91b7e86b
  423c62:	popf   
  423c63:	aam    0xa6
  423c65:	pop    esi
  423c66:	in     al,0x96
  423c68:	mov    ch,ch
  423c6a:	push   0x7f188247
  423c6f:	sub    bh,bh
  423c71:	fidivr WORD PTR [edi]
  423c73:	es inc ebp
  423c75:	add    sp,WORD PTR [bp-0x3a38]
  423c7b:	mul    DWORD PTR [esi]
  423c7d:	xor    dh,BYTE PTR [ecx+0xc]
  423c80:	xchg   DWORD PTR [ecx-0x49],ecx
  423c83:	sar    DWORD PTR [ebx-0x74fc7d11],cl
  423c89:	mov    ds:0x485c4935,al
  423c8e:	je     0x423c75
  423c90:	adc    ch,BYTE PTR [eax+ebx*1-0x60d84506]
  423c97:	xor    ch,BYTE PTR [ebx]
  423c99:	mov    eax,ds:0x379d7b42
  423c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c9f:	and    bl,bh
  423ca1:	pop    edx
  423ca2:	mov    al,ds:0xe8280920
  423ca7:	mov    BYTE PTR [esi],bh
  423ca9:	adc    eax,0x20aa94ac
  423cae:	test   BYTE PTR [edi+0x4f],bl
  423cb1:	fld    QWORD PTR [edx]
  423cb3:	sub    al,0xcc
  423cb5:	js     0x423cfc
  423cb7:	ja     0x423ceb
  423cb9:	rol    BYTE PTR [ebp-0x29],cl
  423cbc:	dec    ebx
  423cbd:	int3   
  423cbe:	clc    
  423cbf:	fisttp DWORD PTR [ecx-0x6ecc87a8]
  423cc5:	pop    ecx
  423cc6:	rcr    DWORD PTR [ebp+0x56],0x7e
  423cca:	and    BYTE PTR [ebp+0x5d88f1b0],al
  423cd0:	imul   esp,DWORD PTR ds:0x390c488a,0x12
  423cd7:	xor    esp,DWORD PTR [edx+0x2358db42]
  423cdd:	push   esi
  423cde:	xchg   edi,eax
  423cdf:	das    
  423ce0:	inc    DWORD PTR [eax-0x55]
  423ce3:	out    dx,al
  423ce4:	arpl   ax,si
  423ce6:	pop    ds
  423ce7:	ja     0x423c6a
  423ce9:	xchg   esi,eax
  423cea:	inc    edx
  423ceb:	inc    esp
  423cec:	adc    dl,bh
  423cee:	stc    
  423cef:	xor    DWORD PTR [esi-0x606880f],ecx
  423cf5:	adc    DWORD PTR [ebp+0x29],edi
  423cf8:	push   0xffffffb0
  423cfa:	sbb    BYTE PTR [ecx],bl
  423cfc:	fld    TBYTE PTR [edx-0x80]
  423cff:	jne    0x423c88
  423d01:	xchg   edi,eax
  423d02:	mov    ds:0xaefc6095,al
  423d07:	mov    esi,0x68e8d58
  423d0c:	ja     0x423d23
  423d0e:	jp     0x423c9f
  423d10:	push   eax
  423d11:	arpl   WORD PTR [esi],bx
  423d13:	jecxz  0x423d94
  423d15:	push   ds
  423d16:	rcl    BYTE PTR [ebp-0x10e3554d],0x71
  423d1d:	adc    BYTE PTR [esi],cl
  423d1f:	cld    
  423d20:	aam    0x9d
  423d22:	dec    eax
  423d23:	push   cs
  423d24:	int3   
  423d25:	jns    0x423d8a
  423d27:	loop   0x423d85
  423d29:	dec    edi
  423d2a:	push   ebx
  423d2b:	std    
  423d2c:	stos   BYTE PTR es:[edi],al
  423d2d:	push   cs
  423d2e:	or     al,0x66
  423d30:	outs   dx,BYTE PTR ds:[esi]
  423d31:	or     edi,DWORD PTR [edi-0x3d46c9c9]
  423d37:	add    al,0xce
  423d39:	std    
  423d3a:	or     al,0x9e
  423d3c:	mov    bl,0x40
  423d3e:	(bad)  
  423d3f:	jmp    0x739b:0x81f39c4b
  423d46:	mov    eax,0x20776da3
  423d4b:	inc    esi
  423d4c:	jae    0x423d2b
  423d4e:	inc    ebp
  423d4f:	inc    ebx
  423d50:	test   DWORD PTR [eax+0x6094ae74],0xb1693127
  423d5a:	js     0x423cf5
  423d5c:	frstor [ecx+ebx*1+0x5ffcbc2c]
  423d63:	or     DWORD PTR [edi+0x7b],ebx
  423d66:	dec    ebx
  423d67:	outs   dx,DWORD PTR ds:[esi]
  423d68:	sahf   
  423d69:	sbb    eax,0x5eee11d5
  423d6e:	sahf   
  423d6f:	and    DWORD PTR [ebp+0x76],eax
  423d72:	out    0x71,al
  423d74:	sub    BYTE PTR [esi],ch
  423d76:	dec    ecx
  423d77:	mov    ebp,0x9dc2a2c4
  423d7c:	in     eax,dx
  423d7d:	add    edi,DWORD PTR [eax+0x5bffafaa]
  423d83:	cdq    
  423d84:	loope  0x423d2f
  423d86:	or     edi,DWORD PTR [ecx+0x1145c388]
  423d8c:	or     eax,0x68dada9b
  423d91:	cmc    
  423d92:	(bad)  
  423d94:	inc    esp
  423d95:	mov    ds:0xdf086844,al
  423d9a:	mov    bh,0x4e
  423d9c:	scas   al,BYTE PTR es:[edi]
  423d9d:	mov    esi,DWORD PTR [ebp+0x16]
  423da0:	push   DWORD PTR [ebp+0xa]
  423da3:	and    bl,0x5a
  423da6:	mov    al,BYTE PTR [edi-0x29dd0f06]
  423dac:	test   DWORD PTR [ebx-0x6e],ebp
  423daf:	adc    eax,0xdf5a7b6a
  423db4:	adc    al,al
  423db6:	xor    al,ah
  423db8:	int    0x8c
  423dba:	or     eax,0x5295ecda
  423dbf:	(bad)  
  423dc0:	lock adc bl,BYTE PTR [edi+0xb240436]
  423dc7:	cmp    DWORD PTR [ecx-0x41],0x373ee81e
  423dce:	push   0x36e92631
  423dd3:	pop    eax
  423dd4:	push   edx
  423dd5:	cmc    
  423dd6:	mov    ds:0x89bc0b3c,al
  423ddb:	icebp  
  423ddc:	repnz mov bl,0x33
  423ddf:	pop    esi
  423de0:	inc    edi
  423de1:	fstp   st(6)
  423de3:	sbb    al,bh
  423de5:	repnz out dx,al
  423de7:	xor    al,BYTE PTR [edi-0x2bfd66a3]
  423ded:	xchg   BYTE PTR [ebx],bl
  423def:	pop    eax
  423df0:	aad    0x71
  423df2:	loop   0x423e24
  423df4:	jne    0x423e34
  423df6:	mov    ch,0x1a
  423df8:	xor    BYTE PTR [esp+esi*2+0x73cb1fc8],bh
  423dff:	dec    esi
  423e00:	in     eax,dx
  423e01:	(bad)  
  423e02:	cmp    al,0x15
  423e04:	(bad)  
  423e05:	pop    eax
  423e06:	scas   al,BYTE PTR es:[edi]
  423e07:	loop   0x423db0
  423e09:	(bad)  
  423e0a:	mov    ds:0x3e4b91ce,eax
  423e0f:	inc    ebx
  423e10:	sbb    eax,0x489ddec3
  423e15:	adc    DWORD PTR [eax-0x3d],0x7f9c60ee
  423e1c:	cld    
  423e1d:	dec    ebx
  423e1e:	ss mov edi,0x44196082
  423e24:	(bad)
  423e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e29:	xor    eax,0x61c06c1
  423e2e:	sahf   
  423e2f:	add    DWORD PTR [ebx-0x3c0dcda],edi
  423e35:	sbb    DWORD PTR [edi-0x197f6f83],0xffffff8d
  423e3c:	inc    esi
  423e3d:	jmp    0x423dd5
  423e3f:	jmp    0x423e66
  423e41:	aad    0x51
  423e43:	and    al,0x5a
  423e45:	data16 loope 0x423ded
  423e48:	out    dx,al
  423e49:	clc    
  423e4a:	mov    ds:0xfb9bc16f,al
  423e4f:	push   esi
  423e50:	inc    esi
  423e51:	xchg   BYTE PTR [edx+0x61],ah
  423e54:	enter  0xbc1b,0x8e
  423e58:	mov    esi,DWORD PTR [ecx+0x7c]
  423e5b:	pop    edx
  423e5c:	shl    BYTE PTR [edx-0x42],cl
  423e5f:	retf   
  423e60:	mov    cl,0xda
  423e62:	lock outs dx,DWORD PTR ds:[esi]
  423e64:	lods   eax,DWORD PTR ds:[esi]
  423e65:	sub    ebp,DWORD PTR [edi]
  423e67:	push   edx
  423e68:	xchg   ebp,eax
  423e69:	xchg   edi,eax
  423e6a:	psllw  mm2,mm3
  423e6d:	out    0xc6,eax
  423e6f:	pop    ecx
  423e70:	nop
  423e71:	fild   DWORD PTR [ebx+0x64fae285]
  423e77:	icebp  
  423e78:	in     al,0x2c
  423e7a:	pop    ds
  423e7b:	dec    DWORD PTR [edx+0x32]
  423e7e:	push   esp
  423e7f:	outs   dx,BYTE PTR ds:[esi]
  423e80:	push   edx
  423e81:	test   eax,0x2543b535
  423e86:	jo     0x423ecc
  423e88:	jl     0x423e11
  423e8a:	(bad)  
  423e8b:	imul   esp,DWORD PTR [edx],0x8334860c
  423e91:	les    ebx,FWORD PTR [ebp+0x62]
  423e94:	neg    DWORD PTR [edi+0x27]
  423e97:	or     al,0x5d
  423e99:	(bad)
  423e9c:	sub    esp,DWORD PTR [edi]
  423e9e:	sbb    al,0x3e
  423ea0:	in     eax,0xbf
  423ea2:	std    
  423ea3:	sub    BYTE PTR ds:0x5bc13956,ch
  423ea9:	imul   esi,DWORD PTR [edi+0x3dde31be],0xdb0f26b
  423eb3:	call   DWORD PTR [esi]
  423eb5:	xchg   edx,eax
  423eb6:	cld    
  423eb7:	dec    edx
  423eb8:	int3   
  423eb9:	cmp    esi,DWORD PTR [ebp+0x75df2592]
  423ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ec0:	jg     0x423f36
  423ec2:	out    dx,eax
  423ec3:	sar    ebp,1
  423ec5:	sar    BYTE PTR ds:[eax-0x10b6145a],1
  423ecc:	or     al,0x1
  423ece:	cmp    eax,0x95b6a6f1
  423ed3:	retf   0x2b62
  423ed6:	jo     0x423ebf
  423ed8:	mov    ebp,DWORD PTR [esi]
  423eda:	shl    BYTE PTR [ebx],1
  423edc:	and    DWORD PTR [ecx+0x45c29cf1],0x98ca92fc
  423ee6:	in     eax,0xaf
  423ee8:	fcmovnbe st,st(3)
  423eea:	dec    edx
  423eeb:	cmp    BYTE PTR [eax-0x6f],0x85
  423eef:	mov    edx,0xea088903
  423ef4:	push   edx
  423ef5:	or     BYTE PTR [ebx+0x4638a36d],0xff
  423efc:	es adc al,0xe7
  423eff:	aaa    
  423f00:	test   BYTE PTR ds:0x47fa0c4c,al
  423f06:	lods   al,BYTE PTR ds:[esi]
  423f07:	jl     0x423f32
  423f09:	fnstsw WORD PTR [edi+0x29]
  423f0c:	fisttp WORD PTR ds:0x7826b1f4
  423f12:	aam    0xbd
  423f14:	cmp    esp,edi
  423f16:	retf   0x904d
  423f19:	pop    eax
  423f1a:	xchg   edx,eax
  423f1b:	pop    ebp
  423f1c:	int3   
  423f1d:	and    eax,0x50d92e93
  423f22:	mov    cs,WORD PTR [ecx+edi*1]
  423f25:	push   cs
  423f26:	jo     0x423ef9
  423f28:	cmp    ch,dl
  423f2a:	add    DWORD PTR [ebx+0x5a],edx
  423f2d:	(bad)  
  423f2e:	aad    0x1d
  423f30:	add    esi,ecx
  423f32:	mov    ds:0x66b1b124,eax
  423f37:	cmc    
  423f38:	nop
  423f39:	dec    ebx
  423f3a:	(bad)
  423f3e:	fidiv  DWORD PTR [eax]
  423f40:	retf   
  423f41:	lods   eax,DWORD PTR ds:[esi]
  423f42:	(bad)  
  423f43:	stc    
  423f44:	push   esp
  423f45:	inc    eax
  423f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f47:	jmp    0xa84a:0x49da721
  423f4e:	in     al,dx
  423f4f:	jne    0x423f92
  423f51:	pop    ecx
  423f52:	ins    BYTE PTR es:[edi],dx
  423f53:	adc    eax,0x4260ec0a
  423f58:	aad    0x91
  423f5a:	mov    ch,0xea
  423f5c:	scas   al,BYTE PTR es:[edi]
  423f5d:	(bad)  
  423f5e:	xor    BYTE PTR [eax-0x4d33f4bc],dh
  423f64:	sti    
  423f65:	stos   BYTE PTR es:[edi],al
  423f66:	push   cs
  423f67:	xchg   esp,eax
  423f68:	dec    eax
  423f69:	dec    esi
  423f6a:	cmp    edx,DWORD PTR [ecx+ecx*4+0x72]
  423f6e:	xchg   edx,eax
  423f6f:	and    eax,esp
  423f71:	xor    ecx,esi
  423f73:	mov    eax,cs
  423f75:	lods   eax,DWORD PTR ds:[esi]
  423f76:	xchg   DWORD PTR [eax+0x64],ebx
  423f79:	mov    ebp,eax
  423f7b:	(bad)  
  423f7c:	stc    
  423f7d:	inc    esp
  423f7e:	cmp    BYTE PTR [edi+0x2],bh
  423f81:	retf   
  423f82:	imul   edi,DWORD PTR [esi+0x62c73b98],0xd5be6893
  423f8c:	and    BYTE PTR [eax],ah
  423f8e:	ins    BYTE PTR es:[edi],dx
  423f8f:	cmp    eax,0x30c58ebb
  423f94:	aas    
  423f95:	stos   DWORD PTR es:[edi],eax
  423f96:	shl    BYTE PTR [edx+edx*8-0x6a0f7dd4],0x20
  423f9e:	ja     0x423f2c
  423fa0:	leave  
  423fa1:	mov    dl,0x7e
  423fa3:	sbb    bh,ah
  423fa5:	fyl2x  
  423fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fa8:	or     eax,0x2157a2ce
  423fad:	(bad)  
  423fae:	repnz inc edx
  423fb0:	test   eax,0xbfd2f95f
  423fb5:	inc    esp
  423fb6:	jmp    0x423f41
  423fb8:	test   DWORD PTR [esp+eiz*8-0x5d],0xc13e12b2
  423fc0:	push   ebp
  423fc1:	pop    esp
  423fc2:	(bad)  
  423fc3:	loopne 0x423fa3
  423fc5:	pushf  
  423fc6:	push   es
  423fc7:	push   edx
  423fc8:	sbb    eax,0x20d7f84d
  423fcd:	loopne 0x423fe8
  423fcf:	and    ebx,0xffffffff
  423fd2:	push   edi
  423fd3:	dec    cl
  423fd5:	lea    ebx,[esi-0x54]
  423fd8:	add    edx,0xffffffe4
  423fdb:	popa   
  423fdc:	mov    edi,0x8ec1debb
  423fe1:	push   esp
  423fe2:	xchg   edi,eax
  423fe3:	mov    BYTE PTR [eax+0x42],cl
  423fe6:	rcl    DWORD PTR [ebx+0x75],cl
  423fe9:	pop    ss
  423fea:	cmp    al,0xbf
  423fec:	loopne 0x424012
  423fee:	adc    cl,bh
  423ff0:	mov    eax,ds:0x35b590fd
  423ff5:	jno    0x423f7a
  423ff7:	test   ecx,0x917c7be
  423ffd:	mov    bl,0x2
  423fff:	popf   
  424000:	bound  esp,QWORD PTR [esi]
  424002:	fsub   DWORD PTR [edi+0x75]
  424005:	lds    eax,FWORD PTR [edx]
  424007:	sahf   
  424008:	mov    ah,0x16
  42400a:	stc    
  42400b:	dec    ebp
  42400c:	mov    esp,0xc1b459dc
  424011:	dec    ebx
  424012:	xchg   DWORD PTR [edx],ebx
  424014:	scas   eax,DWORD PTR es:[edi]
  424015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424016:	jb     0x424066
  424018:	cmp    bl,dl
  42401a:	jns    0x423fb5
  42401c:	outs   dx,BYTE PTR ds:[esi]
  42401d:	nop
  42401e:	sub    al,0x77
  424020:	out    0x3b,al
  424022:	mov    cl,0x2
  424024:	pop    esp
  424025:	into   
  424026:	loope  0x424096
  424028:	nop
  424029:	sub    ah,BYTE PTR [ebx-0x1cd51232]
  42402f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424030:	push   ebp
  424031:	add    eax,0x174bb6b0
  424036:	lea    edx,[ebx-0x39c145c1]
  42403c:	mov    ecx,0x810bf326
  424041:	push   esp
  424042:	sahf   
  424043:	xor    eax,eax
  424045:	sbb    BYTE PTR [esi-0x2b0688da],bh
  42404b:	in     al,0x8
  42404d:	xor    ch,BYTE PTR [edi-0x6c370cdb]
  424053:	and    eax,0x93f225b2
  424058:	cmp    al,0xc5
  42405a:	push   0xffffffc3
  42405c:	sbb    BYTE PTR [ebp+0x3f],cl
  42405f:	cmc    
  424060:	das    
  424061:	addr16 push ss
  424063:	add    al,0x9b
  424065:	sbb    al,BYTE PTR [eax+0x1]
  424068:	jle    0x424096
  42406a:	xchg   DWORD PTR ds:0x2bf4065e,edx
  424070:	scas   eax,DWORD PTR es:[edi]
  424071:	into   
  424072:	cmp    ebp,ecx
  424074:	jnp    0x4240f0
  424076:	sbb    BYTE PTR [eax+ebp*2+0x79fa76b2],dh
  42407d:	repz adc al,0x8
  424080:	cmc    
  424081:	mov    al,0x65
  424083:	jno    0x4240e6
  424085:	scas   al,BYTE PTR es:[edi]
  424086:	push   ebx
  424087:	mov    bh,0x43
  424089:	mov    edi,0xe59a0d17
  42408e:	push   ds
  42408f:	cli    
  424090:	(bad)  
  424091:	sub    BYTE PTR [ebx],cl
  424093:	icebp  
  424094:	mov    esi,ebx
  424096:	lds    esp,FWORD PTR [ecx-0x4f709574]
  42409c:	lds    ebx,FWORD PTR [ebx]
  42409e:	sbb    eax,0xb33d6a13
  4240a3:	fdiv   st,st(2)
  4240a5:	sbb    dl,BYTE PTR [edx-0x17fef9ff]
  4240ab:	cmp    esp,DWORD PTR [ecx]
  4240ad:	rol    DWORD PTR [ebx],1
  4240af:	scas   eax,DWORD PTR es:[edi]
  4240b0:	ds inc ebp
  4240b2:	or     al,0xe4
  4240b4:	mov    dl,0x63
  4240b6:	clc    
  4240b7:	sar    DWORD PTR ds:0xfdbbb439,cl
  4240bd:	push   esi
  4240be:	out    0xf,eax
  4240c0:	in     al,0xa5
  4240c2:	jo     0x424066
  4240c4:	xor    BYTE PTR [edi],0xe7
  4240c7:	in     al,0x3a
  4240c9:	add    ebx,ebx
  4240cb:	or     DWORD PTR [ecx+0xe3b3490],edi
  4240d1:	shl    BYTE PTR [ebx-0x2c],cl
  4240d4:	call   0x7126fa47
  4240d9:	jnp    0x4240f5
  4240db:	std    
  4240dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240dd:	icebp  
  4240de:	or     BYTE PTR [edx-0x23],ch
  4240e1:	ds and eax,0x9dd43833
  4240e7:	mov    al,ds:0xbb318dd3
  4240ec:	sub    DWORD PTR [esi-0x1b0c6d73],0x3b
  4240f3:	jne    0x42416e
  4240f5:	sub    BYTE PTR [eax+0x62],al
  4240f8:	fidivr DWORD PTR [eax]
  4240fa:	mov    al,ds:0xb82007de
  4240ff:	sub    esp,DWORD PTR [eax+eiz*1+0x6f]
  424103:	or     al,0x1b
  424105:	jmp    0x42409c
  424107:	mov    WORD PTR [ebx-0x589e05ac],ss
  42410d:	xchg   esp,eax
  42410e:	xchg   edi,eax
  42410f:	push   eax
  424110:	mov    esi,esi
  424112:	sub    al,0x6d
  424114:	out    dx,eax
  424115:	add    al,0x90
  424117:	loopne 0x4240ee
  424119:	inc    ebp
  42411a:	jns    0x4240d3
  42411c:	mov    ah,0x2e
  42411e:	mov    edx,ebx
  424120:	pop    ebp
  424121:	push   eax
  424122:	adc    eax,0xb84d21a2
  424127:	xchg   edi,eax
  424128:	lahf   
  424129:	in     eax,dx
  42412a:	and    al,0xc4
  42412c:	mov    DWORD PTR [eax],0x654269cf
  424132:	call   0x5239e9
  424137:	dec    ax
  424139:	jp     0x4240bd
  42413b:	out    dx,al
  42413c:	jp     0x42412d
  42413e:	scas   eax,DWORD PTR es:[edi]
  42413f:	addr16 inc ebp
  424141:	ins    BYTE PTR es:[edi],dx
  424142:	or     BYTE PTR [esi-0x7a5d47dc],bh
  424148:	pushf  
  424149:	clc    
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a677
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a67f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a683
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429f2f
  4242e2:	mov    ecx,DWORD PTR ds:0x429f37
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a687
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429f1b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	pop    ss
  424455:	or     dl,BYTE PTR [esi-0x19]
  424458:	test   eax,0xa54343e4
  42445d:	ror    BYTE PTR [esi],1
  42445f:	push   es
  424460:	sub    al,0x66
  424462:	jp     0x4244b6
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
